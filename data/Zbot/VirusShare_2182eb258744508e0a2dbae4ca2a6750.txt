push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
shlb
pop
pusha
call
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
pop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
mov
sub
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
mov
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
push
pop
jbe
popf
push
pushl
decl
jmp
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
pop
call
add
lea
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
xor
add
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
sub
cmp
jne
mov
pop
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
mov
lea
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
mov
lea
add
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
mov
lea
add
call
add
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
lea
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
and
add
and
add
add
add
mov
and
add
add
add
add
in
and
add
and
add
add
pop
and
add
and
add
and
add
and
add
add
scas
and
add
and
add
and
add
and
add
add
add
and
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
add
jb
add
add
add
push
and
add
and
add
add
xor
add
add
add
add
add
add
adc
add
xor
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
and
add
add
movsb
and
add
and
add
and
add
add
add
mov
and
add
add
add
add
in
and
add
and
add
add
pop
and
add
and
add
and
add
and
add
add
scas
and
add
and
add
and
add
and
add
add
add
and
add
add
push
and
add
and
add
and
add
and
add
and
add
and
add
add
jb
add
add
add
push
and
add
and
add
add
xor
add
add
add
add
add
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
repnz
imul
jb
je
arpl
add
aad
inc
imul
add
inc
jne
jb
outsb
je
push
add
add
gs
outsl
jbe
inc
imul
jns
add
push
push
je
imul
inc
add
movsl
add
je
gs
imul
pop
add
je
outsl
arpl
gs
outsb
outsw
push
add
filds
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
outsl
bound
dec
outsl
arpl
add
popa
je
inc
imul
jns
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
popa
insb
inc
insb
popa
addr16
add
add
je
imul
bound
gs
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
insb
jae
gs
popa
insb
jne
add
add
gs
outsl
insl
insl
inc
jb
popa
imul
roll
dec
gs
jo
jb
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
call
inc
imul
bound
gs
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jnp
inc
gs
imul
outsb
addr16
add
cwtl
push
inc
gs
insb
addr16
jb
arpl
xchg
push
push
gs
jae
addr16
add
xchg
inc
gs
imul
js
push
add
sbb
ja
jo
imul
pop
dec
jae
imul
mov
dec
jae
imul
jae
popa
addr16
add
mov
inc
imul
dec
gs
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
or
jae
dec
gs
popa
addr16
add
jno
push
gs
jne
jae
jb
int
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
outsl
arpl
add
push
push
inc
push
xor
cs
insb
add
add
inc
popa
outsb
arpl
add
add
dec
inc
outsl
outsb
outsb
arpl
or
push
push
dec
inc
jb
outsl
jb
add
add
dec
inc
imul
arpl
push
dec
push
inc
dec
xor
cs
insb
add
or
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
and
adc
aas
jg
sbb
pop
sti
and
cmp
pop
mov
or
les
xor
cmp
push
pop
pop
leave
pop
lods
lahf
in
fwait
xchg
jne
sbbl
push
push
shll
cmp
and
jge
mov
lods
mov
int
push
sbb
or
loop
rol
repz
cwtl
xor
jno
xor
pop
shll
mov
xor
sti
and
xor
je
int
pop
cmpb
outsb
jb
push
add
sbb
cmp
push
pop
or
xor
insl
sub
or
sti
mov
pop
test
mov
into
scas
fidivrl
fbstp
cwtl
adc
and
adc
mov
fisubrl
enter
daa
stos
sti
mov
mul
lcall
cmp
popf
aam
lahf
dec
rcll
popf
popf
mov
xor
xchg
outsl
fldt
scas
popf
pop
testb
or
std
out
push
in
mov
pop
ljmp
addl
mov
push
jns
lods
les
cmp
shll
cmpsl
movsl
mov
pushw
cwtl
dec
xor
mov
rorl
icebp
pop
sbb
pushl
roll
cmp
fadd
adc
in
adc
xchg
push
bound
xor
jbe
gs
push
add
cwtl
mov
je
xor
clc
mov
pause
in
or
fwait
mov
mov
lret
lods
cli
js
lret
cmp
fstpl
cmp
jne
push
sti
lods
jg
xorb
jmp
mov
sbb
xor
fstpl
stc
inc
xor
adc
test
push
enter
mov
sbb
je
cmp
mov
dec
movsb
mov
flds
add
add
add
add
xor
add
add
add
pusha
add
adcb
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
add
pusha
add
test
add
cwtl
xchg
add
ss
cwtl
mov
add
sub
add
xor
add
pusha
add
add
add
add
add
add
and
add
or
add
or
add
imul
sub
add
movsl
movsb
pop
scas
scas
lods
xor
mov
mov
mov
mov
mov
mov
mov
mov
stos
stos
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jle
jl
jl
lods
lods
lods
add
cmpsl
cmpsl
push
mov
mov
mov
rol
lret
leave
lret
int
rcl
in
rcl
shl
iret
iret
shl
int3
int3
lret
hlt
leave
lret
leave
leave
leave
out
mov
mov
mov
lods
lods
lea
fwait
pushf
and
je
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
popf
add
mov
mov
lret
lret
rcl
sar
xlat
aad
std
xlat
fcomp
fdivr
aam
ror
sar
iret
into
iret
aad
aad
rcl
sar
ret
ret
mov
mov
scas
iret
mov
xchg
and
add
push
add
add
add
add
add
add
add
add
lods
scas
lods
add
scas
lods
sbb
mov
jnp
mov
sar
mov
lret
lret
lret
iret
iret
aam
fcos
fcom
xlat
call
aad
dec
iret
iret
dec
int
call
rcl
dec
int
inc
rol
mov
mov
scas
std
movsl
cmpsb
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
push
add
inc
add
push
add
or
inc
or
sbb
add
add
add
add
or
or
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
call
aam
call
fcomp
call
fcomp
call
aad
dec
into
into
dec
lret
lret
into
int
inc
mov
mov
ljmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
push
imul
pop
pop
pop
fs
ds
inc
sbb
sbb
or
sbb
xor
sub
and
add
add
add
add
add
add
gs
mov
pop
mov
mov
mov
mov
inc
sarb
leave
leave
dec
into
iret
call
rcl
call
rcl
dec
iret
sar
lret
inc
mov
mov
ljmp
cmpsb
cmpsb
popf
popf
fwait
cwtl
cwtl
cwtl
lcall
addb
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
insl
xor
jp
jle
jge
jo
jo
bound
mov
cmp
cmp
inc
inc
inc
mov
outsl
outsl
outsl
nop
arpl
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
mov
dec
lret
lret
leave
inc
ret
ret
mov
mov
mov
scas
jmp
lcall
xchg
xchg
xchg
cwtl
xchg
xchg
lcall
lahf
aas
aas
cmp
cmp
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
jo
add
pop
or
js
fcoms
cmp
jge
idivb
jp
outsl
outsb
outsl
out
addr16
data16
jae
addb
xchg
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
scas
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
scas
mov
jmp
pushf
pushf
call
test
mov
xchg
lahf
lahf
lahf
sti
mov
xchg
xchg
mov
ja
jns
das
sub
add
add
add
add
add
add
add
add
add
mov
push
push
cmpl
popf
cltd
fwait
in
mov
mov
addb
decb
mov
loope
jno
enter
mov
addl
xchg
data16
cmp
and
and
jg
jg
fwait
cltd
fwait
lea
stos
icebp
lods
stos
lods
sti
lods
lods
lods
stos
stos
lods
test
test
movsb
mov
fwait
xchg
xchg
xchg
decl
addb
jnp
jl
mov
xchg
cmpsb
movsl
cmpsb
mov
mov
mov
mov
mov
mov
mov
mov
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
movsb
movsb
out
stos
lods
call
addl
mov
xchg
std
cltd
cwtl
cltd
stc
xchg
xchg
xchg
in
mov
or
mov
mov
push
or
or
aas
inc
dec
imul
test
xchg
leave
pushf
lcall
lcall
std
mov
xchg
mov
mov
xchg
nop
xchg
lcall
cmpsl
test
scas
scas
lods
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jnp
lods
test
add
pop
adc
stos
call
pushf
xchg
xchg
incl
xchg
decb
xchg
xchg
popf
pushf
sahf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
nop
in
test
jne
adc
dec
add
or
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
nop
nop
decb
xchg
xchg
lcall
movsb
cmpsb
ljmp
test
mov
xchg
xchg
std
ret
std
rcrl
mov
mov
test
mov
lahf
add
pop
pop
adc
scas
scas
jmp
popf
cltd
cwtl
decl
mov
decl
nop
xchg
xchg
xchg
xchg
pushf
pushf
pushf
cmpsb
cmpsb
cmpsb
test
movsb
movsl
notl
jnp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
pusha
fs
je
mov
jle
test
mov
mov
notl
lea
lcall
mov
pushl
push
mov
pop
dec
mov
cmp
mov
cmpsl
movsb
mov
mov
mov
movsl
movsb
add
pop
pop
adc
mov
ljmp
lcall
nop
call
xchg
xchg
call
xchg
xchg
lcall
mov
mov
mov
out
nop
xchg
xchg
les
xchg
fwait
in
xchg
cwtl
out
xchg
xchg
cmc
xchg
test
std
xchg
je
cltd
imul
cmpsb
pop
dec
ljmp
inc
pushl
sub
ljmp
and
ljmp
pop
or
mov
inc
mov
mov
lods
pushf
movsl
movsl
cmpsb
and
add
mov
pop
pop
adc
mov
ljmp
lcall
xchg
xchg
lcall
pushf
popf
lcall
sahf
pushf
call
xchg
xchg
decl
xchg
xchg
call
cwtl
lcall
lcall
fwait
mov
xchg
push
xchg
pop
push
xchg
push
dec
lcall
pushf
daa
sbb
jmp
es
test
and
ljmp
and
pushl
es
mov
adc
mov
sahf
lcall
scas
scas
scas
movsl
cmpsb
cmpsb
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
fwait
call
sahf
popf
jmp
movsb
movsb
jmp
mov
decl
mov
decl
jbe
cltd
jno
cwtl
fs
xchg
push
dec
call
xor
call
adc
push
call
or
push
jmp
sub
pushl
cs
mov
xor
and
mov
push
aas
inc
lcall
scas
lods
lods
mov
lahf
mov
movsl
add
pop
pop
adc
scas
scas
ljmp
fwait
lcall
mov
cmpsb
jmp
stos
test
lcall
cmp
pop
pop
decl
ds
mov
sub
mov
sbb
incl
or
xchg
add
mov
add
mov
add
or
call
or
lcall
sbb
pushl
cmp
mov
cmp
inc
aas
sub
ret
inc
sub
lds
dec
inc
sub
dec
push
inc
dec
xchg
inc
mov
scas
lret
movsl
dec
mov
mov
add
add
add
lods
mov
push
adc
test
scas
lcall
mov
test
ljmp
scas
mov
scas
scas
scas
jmp
jno
decl
adc
incl
push
or
test
incl
push
add
addl
decl
or
call
or
lcall
jmp
and
sub
inc
dec
ss
dec
cmp
lret
dec
push
cmp
iret
push
cmp
rclb
call
push
cmp
dec
xchg
xchg
les
mov
movsl
cmpsb
movsb
push
mov
mov
add
add
add
mov
dec
dec
adc
mov
lods
jmp
cmpsb
movsl
ljmp
mov
pushl
mov
mov
mov
lods
stos
stos
lcall
sub
mov
adc
mov
or
incl
push
add
decl
or
call
adc
jmp
adc
ljmp
sbb
dec
push
inc
dec
pop
inc
call
pop
inc
call
pop
dec
call
pop
dec
call
pop
dec
fisubl
fsubs
rclb
mov
fsubl
mov
mov
add
add
add
dec
dec
adc
jp
movsl
sahf
lahf
jmp
mov
stos
stos
pushl
mov
pushl
mov
mov
mov
jmp
cmp
pop
call
and
decl
sbb
decl
or
call
or
add
mov
adc
ljmp
sbb
mov
pop
dec
call
gs
call
gs
fisubrl
fldt
fisubrs
fildll
jecxz
pop
jmp
outsl
pop
jmp
outsl
pop
call
xchg
xchg
lret
mov
mov
jne
mov
mov
add
add
add
inc
inc
adc
jbe
mov
movsb
movsb
jmp
lods
scas
pushl
mov
mov
mov
mov
ljmp
dec
inc
call
sub
call
sub
call
pop
or
nop
push
add
xchg
or
lcall
jmp
adc
pushl
and
dec
dec
xor
xlat
imul
je
fbstp
jmp
jne
jmp
jbe
jmp
js
call
jge
jmp
jnp
fcoml
mov
in
cmpsl
cmpsl
cmpsb
mov
sahf
sahf
add
inc
inc
adc
jp
xchg
xchg
call
lahf
fwait
pushf
ljmp
mov
pushl
mov
mov
mov
mov
push
call
aaa
lcall
xor
call
push
or
xchg
or
lcall
adc
jmp
adc
pushl
pop
add
shrl
call
push
inc
fdivrl
jmp
xorb
xorl
jmp
xchg
mov
mov
out
mov
out
xchg
xchg
mov
sarb
mov
lcall
lahf
add
jge
ds
insb
js
xchg
out
lcall
mov
mov
mov
mov
mov
mov
mov
test
lcall
inc
cmp
lahf
inc
cmp
lahf
cmp
lcall
adc
lcall
jmp
add
mov
add
mov
add
mov
xor
fisubl
jmp
mov
call
mov
in
xchg
cmp
icebp
xchg
cmp
xchg
test
cmc
cwtl
test
repnz
cmp
cwtl
mov
mov
shl
stos
stos
cmpsl
popf
popf
pushf
daa
popf
sahf
lahf
add
add
add
pusha
add
xor
pop
jne
jle
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
rol
rol
pushl
jo
lcall
inc
inc
jmp
inc
lcall
lcall
adc
ljmp
adc
pushl
pop
add
ret
call
cmp
gs
jmp
lcall
out
pushf
mov
repnz
push
mov
xchg
push
mov
out
sahf
nop
fidivrl
ret
lods
lods
mov
sahf
popf
xor
fwait
pushf
add
add
add
xor
jb
pop
dec
in
imul
mov
mov
mov
mov
mov
inc
inc
ret
mov
cmpb
inc
jmp
push
dec
jmp
push
lcall
adc
jmp
adc
pushl
sbb
inc
sbb
dec
and
call
movsb
xchg
push
cmpsl
cltd
push
test
push
test
fwait
push
stos
pushf
clc
lods
sahf
cli
scas
lahf
cld
mov
std
stos
fwait
push
cmpsl
xchg
fidivrs
cli
scas
mov
rcrb
nop
add
add
add
cs
or
aas
outsb
push
dec
dec
jecxz
bound
xchg
xchg
nop
mov
mov
mov
mov
sar
inc
vshufps
mov
mov
mov
push
push
pushl
xor
lcall
jmp
adc
pushl
push
add
rcrb
dec
sbb
call
sub
jmp
pop
inc
out
popf
mov
hlt
mov
push
mov
push
mov
cli
mov
sti
mov
cli
mov
cld
mov
stos
std
mov
cmpsl
push
mov
jmp
shll
mov
mov
popf
popf
sahf
dec
xchg
xchg
xchg
add
cltd
fwait
add
add
add
xor
daa
daa
sub
inc
inc
inc
bound
push
xlat
jne
jb
mov
mov
sar
rol
ret
rol
mov
lret
ret
xchg
xchg
jmp
pop
push
ljmp
daa
sbb
fwait
adc
jmp
adc
pushl
pop
add
les
add
int
add
aad
add
loope
adc
in
jno
push
scas
lahf
stc
mov
mov
std
shlb
cld
shll
std
lds
cld
mov
std
lds
jmp
ret
mov
iret
lret
leave
mov
mov
sahf
sahf
lahf
pusha
xchg
xchg
xchg
or
add
add
add
push
add
dec
dec
ss
outsl
mov
mov
jmp
aam
test
int
dec
int3
lret
lret
lret
lret
lret
enter
mov
pusha
pushl
inc
cmp
jmp
adc
pushl
add
lds
add
into
sbb
fcomps
add
jmp
xchg
sti
mov
mov
std
leave
mov
sti
lret
mov
cld
int
cld
sarb
dec
mov
call
int3
lret
mov
mov
or
add
add
xor
add
add
add
or
leave
leave
inc
loope
in
in
out
loop
out
loopne
in
loope
fcmovu
fdivp
cli
rcl
std
int
sar
mov
insl
push
scas
push
dec
ljmp
push
add
pushl
sbb
inc
sbb
dec
sbb
add
fstpl
add
jecxz
add
out
dec
xor
negl
cld
into
ret
int
std
rol
rol
rol
std
aad
aad
cld
aad
xlat
leave
fmul
cld
int3
mov
fmul
int3
mov
mov
xchg
adc
add
add
std
std
add
incb
std
incb
icebp
hlt
testb
out
out
pop
in
out
out
sub
in
in
dec
call
call
call
aad
fcmovnu
jmp
mov
jb
cmpsl
inc
cmp
jmp
adc
pushl
add
sbb
dec
sbb
add
fisubs
add
out
pop
push
pusha
inc
stc
mov
rol
sti
int3
cld
aad
std
xlat
lret
fxch
fcmove
fcmove
fmul
fst
std
loopne
sti
aad
out
leave
mov
inc
ret
ret
out
cmpsl
movsl
cmpsl
mov
xchg
xchg
add
add
add
incl
incl
clc
cli
stc
add
hlt
hlt
add
icebp
icebp
push
in
repnz
out
out
icebp
cmp
lock
fnstsw
loope
mov
jno
lahf
xor
lcall
adc
ljmp
push
add
mov
sbb
call
push
add
ficompl
add
jecxz
add
in
xor
push
jbe
std
ret
std
fcmovbe
std
fcmovnbe
fcmovbe
fst
std
std
loopne
std
loope
std
loop
cld
jecxz
in
fst
push
rol
jmp
fcom
dec
lret
leave
repz
xchg
xchg
and
cwtl
xchg
add
cld
cld
add
cld
sti
add
sti
cld
add
cmc
testb
rcl
xor
mov
jne
lcall
jmp
adc
mov
sbb
dec
sbb
add
add
out
add
out
ds
stc
mov
sti
rol
cld
loope
cld
loopne
std
loope
loop
jmp
fcos
in
cld
out
in
out
std
out
std
out
push
iret
ret
jmp
fcom
dec
ror
clc
scas
scas
lods
lods
xchg
xchg
xchg
outsl
outsb
outsb
add
add
add
jecxz
rol
sbb
lods
cmpb
and
lahf
jmp
push
add
mov
sbb
dec
push
add
and
fisubs
add
jmp
dec
sub
stc
mov
sar
std
jecxz
std
loop
cld
in
loop
loope
std
loopne
cld
cli
clc
fmul
stc
fcmove
clc
rol
in
enter
sar
aad
mov
mov
cltd
lcall
fwait
lcall
mov
mov
add
mov
mov
pushf
xor
jmp
adc
pushl
add
sbb
call
sbb
fcomps
add
jmp
push
ss
sti
test
cld
ror
cld
aam
sti
rol
cli
int
push
int
push
leave
mov
push
enter
mov
jmp
leave
mov
std
jmp
rol
imul
loopne
cmc
fnstsw
fucomip
mov
mov
xchg
add
add
add
int
mov
mov
xchg
loopne
inc
aaa
jmp
adc
pushl
pop
add
les
dec
and
call
daa
or
fisubrl
jmp
aaa
sbb
out
inc
jmp
mov
mov
out
scas
std
jecxz
scas
cld
loopne
mov
fadd
mov
ffree
mov
ljmp
enter
rcl
jecxz
xlat
call
in
test
out
out
popf
jmp
int3
lret
lods
lods
adc
test
test
mov
ret
mov
mov
lahf
aam
push
dec
pushf
es
cmpsb
sub
mov
cs
mov
push
dec
sti
ret
stc
leave
jb
test
xchg
mov
shlb
mov
rol
mov
lret
ret
rcl
leave
mov
ror
mov
aam
fcmovnu
fnstenv
fstp
gs
loop
out
jmp
xor
cmc
clc
mull
out
out
icebp
sbb
fcmovnu
or
mov
int3
add
add
add
rolb
rolb
scas
les
jo
lock
jns
ljmp
mov
mov
xchg
sarb
stos
test
cmpsl
leave
mov
ret
enter
int3
int3
addr16
rcll
rcl
dec
aam
xlat
inc
aad
xlat
xor
fcmovu
daa
xlat
sbb
adc
loop
push
loope
call
pop
in
icebp
icebp
add
cli
cli
add
incl
std
add
incb
mov
mov
shrb
mov
mov
mov
lods
xchg
mov
mov
mov
mov
ret
push
ret
ret
movb
lret
int3
iret
daa
int
shll
iret
rcl
sbb
aam
adc
aam
or
fadds
aad
fiaddl
fcmovnu
add
fstp
add
in
add
out
add
rcr
add
incl
mov
mov
add
ret
lds
ret
sub
mov
mov
push
ret
mov
mov
leave
add
int
add
rcl
add
aad
add
xlat
add
xlat
aam
xlat
aad
add
fsub
add
xlat
fiaddl
loope
filds
in
out
lock
icebp
add
incb
std
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
cmc
arpl
xchg
bound
gs
jns
cmp
inc
mov
dec
scas
cmpsl
inc
add
imul
add
xchg
adc
mov
pop
xchg
dec
adc
sbb
lret
add
roll
mov
xlat
sbb
mov
mov
dec
push
lea
enter
lock
dec
jge
aad
cmp
shl
outsl
insb
cmpl
or
rcrl
push
push
mov
addr16
lods
mov
mov
dec
lret
clc
roll
xchg
das
fists
stos
pop
dec
sbbl
push
xor
inc
push
cld
adc
shll
pop
mov
sbb
lods
inc
mov
xchg
mov
or
adc
aas
add
adc
xchg
mov
out
or
mov
insl
sti
pop
gs
jecxz
sbb
rorl
pop
cmc
icebp
sbb
adc
xchg
repnz
ret
pop
cmp
in
lods
test
movsb
push
or
pop
lahf
mov
xchg
bound
aam
nop
inc
pop
orl
cwtl
mov
cwtl
ds
adc
jns
mov
inc
dec
cmpxchg
push
orl
jnp
and
dec
ja,pt
mov
out
subb
ret
repnz
xlat
out
inc
les
jmp
dec
mov
xchg
sub
cmpsl
fcomps
ficomps
jmp
push
sub
jb
es
pop
push
shr
inc
adc
jae
add
repz
ret
mov
mov
cwtl
lods
pop
jmp
mov
or
fsubl
inc
mov
lds
lods
icebp
jge
scas
fdivrl
dec
mul
push
insb
pop
add
adc
aaa
lcall
mov
xchg
aad
test
jg
push
lods
dec
jae
lods
into
pusha
mov
in
xor
add
sbb
jno
cmp
rolb
jae
xor
fildl
imul
or
add
jno
inc
fwait
inc
lods
pop
mov
mov
movsl
adcl
mov
fnsave
lock
fwait
add
add
jns
test
mov
mov
push
and
xor
iret
mov
pop
stc
add
scas
push
addr16
test
jns
fstpl
xor
ret
sbb
lock
fidivl
jmp
push
icebp
sahf
ret
in
dec
lret
aaa
push
mov
jbe
ds
iret
lahf
imul
inc
fisubs
shlb
je
or
inc
adc
ret
xchg
inc
icebp
sub
push
jmp
dec
dec
dec
push
mov
mov
mov
pop
subl
mov
mov
out
inc
into
movsb
ss
mov
mov
xchg
iret
lods
nop
mov
xchg
imul
out
xchg
mov
ret
stos
adcb
jo
dec
jge
dec
xchg
roll
scas
mov
into
iret
pusha
jb
jns
xor
inc
ja
pop
mov
dec
rcll
xchg
es
test
mov
jmp
test
hlt
jl
mov
stos
fldcw
sub
adc
mov
pop
or
jmp
cmc
scas
daa
and
mov
dec
add
xchg
aas
or
mov
pop
cli
pop
outsb
xchg
and
pop
sub
and
les
mov
jmp
stc
and
out
icebp
cmpsw
stc
aas
xchg
cs
and
cltd
pop
mov
jl
mov
push
adcb
in
jns
pop
das
cmp
and
sbb
mov
push
adcl
cli
inc
xlat
sub
pop
cmc
popf
movzbl
add
nop
aaa
cmp
mov
adc
xor
lahf
out
sub
xchg
push
repz
in
cmp
insl
call
movsl
hlt
inc
push
lret
pop
clc
pop
ljmp
adc
xor
gs
push
push
cmpsl
jnp
ss
mov
mov
inc
daa
movsb
add
icebp
cmp
adc
daa
les
mov
cmp
xor
cmpsb
and
xor
sbb
push
out
mov
mov
lods
jns
loope
mov
adc
adc
test
fistps
out
jge
mov
pop
and
cmp
dec
mov
lods
adc
fsubrs
filds
cmpsl
rorb
iret
pushl
jb
add
nop
cmp
repz
in
sub
mov
mov
movsb
fiaddl
ja
pmullw
ljmp
pop
cmp
or
rolb
sub
dec
fs
inc
enter
lods
test
mov
jg
mov
xchg
mov
test
mov
mov
or
je,pt
fsubrs
int3
or
sbb
out
iret
sarb
push
int3
adc
mov
mov
lods
fwait
add
cli
jno
jb
orl
mov
jge
hlt
inc
mov
movsl
adc
test
in
xchg
inc
and
data16
stc
test
into
cmp
lods
mov
shll
pop
pop
add
jne
mov
or
cmc
mov
lods
add
push
icebp
xorb
cs
mov
mov
popf
ja
icebp
mov
mov
pop
insl
movsl
out
cmp
cltd
xor
push
add
push
or
inc
jle
arpl
aam
xchg
sub
cmc
pop
or
adc
sub
push
int
rcrl
xor
adc
fsubrs
stc
adc
inc
xorb
lock
xor
jge
cmp
jecxz
xor
int3
das
popf
rclb
inc
aas
mov
xlat
xchg
mov
push
sub
pop
loope
sbb
pop
ret
mov
push
in
aad
dec
shll
jbe
adc
imul
pop
add
and
lds
jmp
lods
push
cmp
sahf
imul
lret
push
lods
mov
fidivs
test
add
push
jmp
push
xorl
jbe
push
test
mov
cld
dec
lods
and
shrb
lods
xor
push
ss
testb
and
or
push
jl
jmp
xor
cmc
sbb
jmp
and
add
imul
loop
sub
xchg
jp
jge
jp
out
mov
ret
and
jecxz
ds
lds
lret
mov
jp
push
call
cwtl
or
cs
mov
cli
and
sub
inc
fnstcw
pop
repnz
pusha
not
and
jle
and
cs
inc
pushf
xor
mov
xchg
mov
imul
outsl
sbb
repnz
adc
rcrl
dec
loop
leave
adc
in
xor
out
mov
outsb
sub
jbe
cmp
dec
dec
lret
pcmpgtd
and
pop
push
inc
xor
push
inc
xor
js
fdivl
pusha
push
and
movsb
push
jne
ja
js
outsl
mov
addr16
mov
mulb
jge
out
shll
rcl
es
dec
shl
adcl
fbstp
inc
push
pop
in
cmpsl
out
inc
lds
arpl
call
jae
int3
xchg
mov
xchg
sub
fidivl
jns
shrb
lcall
mov
mov
pop
aam
movsl
add
es
push
xchg
pop
js
loope
out
jl
lret
push
lcall
and
mov
xor
popa
pop
loop
dec
cmpb
push
xchg
fwait
aad
xor
mov
mov
pop
aam
jnp
insb
lods
popa
pop
repnz
into
repz
mov
popf
jl
add
adc
cmc
mov
mov
fbld
stos
xchg
add
push
mov
enter
and
mov
sahf
xor
mov
inc
imul
iret
std
repz
daa
pop
call
cmc
mov
xchg
and
jno
mov
stos
inc
aaa
pop
adc
dec
dec
mov
mov
dec
jge
pop
outsl
out
ljmp
mov
lods
inc
xchg
test
mov
mov
bound
pop
int3
arpl
and
jecxz
dec
cli
sbb
sbb
fs
bound
pop
icebp
hlt
mov
mov
pop
jb
xchg
test
jl
ss
pop
cmp
lods
std
scas
inc
and
pusha
idivl
loopne
xchg
xchg
mov
jno
outsb
pop
out
addb
cltd
ja
out
test
sbb
xor
xchg
sub
fdivs
push
mov
push
in
fcoml
movl
cltd
xor
mov
jne
pusha
addr16
mov
mov
lea
sbb
xchg
mov
dec
in
orb
mov
pop
inc
fildl
daa
jp
push
add
cmc
fsubrs
jns
jg
fsubrs
test
ficomps
scas
inc
xchg
jns
xchg
mov
inc
jl
mov
shll
das
ljmp
add
push
pop
loopne
rcrb
jge
in
mov
xor
add
cmpsl
ds
push
shrl
mov
sbb
cmp
lret
cmpsb
cmp
inc
pop
jae
dec
loope
add
outsb
insl
add
mov
outsb
add
rcll
test
and
pop
dec
rclb
sbb
test
lret
mov
fst
imul
lock
sub
pop
test
xor
push
xchg
xchg
cs
fnstenv
sub
fwait
mov
sbb
lret
dec
xchg
inc
insl
adc
push
pop
leave
pusha
jl
lea
sbb
mov
stc
xlat
xor
clc
sbb
imul
or
pop
mov
jo
sbb
push
inc
fucom
jp
addr16
pop
scas
lea
jp
cmp
mov
dec
loope
and
xchg
sub
imul
inc
inc
inc
lds
out
sub
sub
adc
ret
insl
in
sbbl
addr16
cmpb
imul
sahf
adc
test
mov
push
or
dec
cmp
int
test
lret
cmp
mov
fldl
adc
das
movb
xchg
sub
xchg
dec
loop
hlt
addr16
sbb
add
jmp
addb
dec
lods
inc
aas
pusha
lods
inc
mov
dec
pop
mov
push
fs
push
testl
fisttps
stos
rcrl
les
ds
xchg
mov
lcall
push
call
ss
scas
inc
pop
negb
aas
and
jl
jl
insl
std
popf
js
setns
mov
ret
mov
fdivl
aam
add
xchg
fcmove
inc
xlat
add
mov
sub
test
jae
mov
ss
xor
js
sub
mov
fisubrl
int3
mov
or
stos
incl
inc
inc
fildl
sub
leave
push
movsb
scas
inc
push
call
sub
pop
imulb
lret
mov
frstor
cmpsl
lock
loop
insb
add
dec
ds
xchg
shrl
sbb
inc
dec
sub
pop
sbb
fnsave
mov
inc
popf
jmp
lret
arpl
push
push
sbbl
ds
mov
mov
movsb
sbb
mov
push
lods
cmp
push
cli
stc
and
dec
xor
int3
arpl
push
or
hlt
pushw
pop
cltd
mov
push
fidivs
mov
insb
std
and
sbbl
jnp
clc
dec
loope
mov
inc
and
jge
ss
fidivs
push
mov
dec
cmp
mov
xor
aas
outsl
loopne
in
clc
nop
into
add
stc
nop
xchg
push
test
mov
inc
sub
sub
cmp
push
mov
pop
aas
dec
lock
xor
mov
push
addl
xlat
ficoms
fs
test
sbb
pop
push
in
mov
shrl
daa
mov
in
mov
fnsave
into
out
xchg
sub
lock
int3
iret
add
bound
dec
popa
clc
subb
dec
lcall
shrb
xor
sbb
mov
mov
jecxz
push
ja
test
xchg
gs
outsb
push
xchg
xchg
std
mov
je
lds
jo
sahf
lods
inc
les
imul
ret
pop
scas
push
fnsave
pop
lock
pop
xor
mov
mov
inc
inc
mov
pop
out
adcb
and
in
mov
mull
inc
stc
nop
cmp
push
dec
push
and
sub
andl
pop
lock
out
add
das
std
and
loop
mov
jp
dec
xor
jp
lods
inc
cmp
shrb
pop
mov
decl
mov
mov
cmc
fwait
mov
rcll
lods
inc
mov
add
sub
iret
imul
scas
sbb
xchg
ss
aam
rol
js
jecxz
jno
mov
insl
call
or
jnp
addr16
insl
pushf
ret
push
ss
das
xor
mov
roll
mov
cmp
pusha
rcrl
outsb
out
stos
xlat
and
push
clc
imul
sub
loopne
and
adc
pushf
xor
xor
jle
mov
cltd
vpunpckhqdq
js
jp
cmp
movsl
fdivrl
pushf
xor
xchg
sub
pop
mov
inc
adc
xor
mov
mov
sub
mov
dec
xor
js
test
mov
fisttpl
int3
int3
fidivs
in
stc
nop
fisttps
jns
jb
push
lods
jnp
sbb
add
xchg
sub
and
pop
mov
mov
std
xchg
ret
dec
loop
cmp
lret
bound
pop
adc
popa
xor
outsb
jno
inc
push
ljmp
add
mov
sbb
pop
sahf
hlt
cmp
shrb
pop
sahf
mov
ficoms
stos
iret
sub
shrl
out
cmpsb
and
cmp
mov
push
cwtl
dec
in
mov
jle
pushf
xchg
shrl
mov
pop
mulb
push
leave
pusha
lods
popa
add
movsl
jae
dec
gs
mov
insb
mov
cmp
iret
stos
shrl
mov
in
arpl
cmpb
es
stos
subl
insl
insb
add
adc
cmp
and
push
clc
in
sub
fdivl
sub
xchg
idivb
lcall
push
jmp
test
ret
aas
movsl
aaa
xor
mov
sub
fisubrl
sub
fdivl
or
ret
mov
in
in
adc
mov
fcompl
jecxz
stc
sahf
add
movsl
cmpsl
mov
pop
hlt
fsubrs
pop
repz
lret
aam
daa
mov
into
fistpll
fucomp
jmp
push
push
jnp
sahf
push
rcrl
add
add
mov
sbb
adc
add
fimuls
or
mov
sti
das
xchg
and
into
dec
xchg
stos
mov
fnstcw
arpl
popf
push
jmp
xor
push
and
je
ss
xchg
mov
sti
dec
out
jmp
aaa
into
int
cmc
mov
mov
pop
fistpl
lods
dec
cld
lahf
ss
sub
pusha
or
jl
loop
mov
dec
mov
inc
jnp
test
cmp
jmp
inc
call
sub
mov
cmp
mov
xchg
aaa
into
cmc
inc
jp
push
push
aaa
into
test
out
test
inc
fsubrl
cmp
adc
aas
lcall
mov
data16
je
jno
and
jmp
pop
inc
daa
mov
push
xchg
pop
scas
and
mulb
les
cmc
xchg
dec
in
push
adcb
sbb
addr16
fistl
outsb
or
imulb
pusha
cmp
repnz
pusha
in
mov
xlat
ja
lods
add
add
lods
addl
test
sahf
mov
cltd
pop
out
or
sbbl
pop
push
in
js
fsubrs
mov
jbe
cmc
daa
shlb
fsubrl
cmpsl
pop
imul
fbstp
popa
test
aad
xchg
push
idivl
sbb
imul
stos
cmp
mov
pop
scas
push
xchg
adc
in
pop
les
cmp
icebp
cmp
mov
lods
daa
lcall
inc
popf
sub
mov
hlt
rorb
mov
movups
mov
subl
mov
je
int
adc
xchg
sub
dec
lods
lret
insl
aaa
into
sahf
call
cmc
jmp
lea
ret
mov
or
mov
imul
popf
mov
xchg
shrb
insb
mov
ret
orb
mov
inc
mov
orb
insb
mov
fdiv
mov
mov
pop
xchg
cmp
nop
cmp
stos
inc
add
fsubl
mov
push
test
and
jle
outsl
aas
call
outsl
pop
adc
jl
addr16
out
push
lea
js
addl
arpl
or
jns
cmp
push
popf
adcb
jle
xor
loop
cmpsb
and
mov
add
cmp
int3
movsb
shrl
out
imul
push
or
out
test
fidivl
jae
mov
mov
add
insl
scas
stc
nop
and
cmpsb
imul
loop
mov
add
fcoml
mov
fcoml
lods
out
rcrl
dec
loopne
lcall
movsb
and
cli
xchg
mov
pop
hlt
arpl
xchg
push
or
pusha
divl
xsha256
cmpsb
push
xchg
xor
adc
pop
lock
daa
mov
cmc
pop
cmc
rclb
out
mov
ret
and
and
cltd
inc
xor
movsl
mov
sbbl
adc
lock
scas
push
movsl
hlt
mov
or
test
jb
cltd
leave
icebp
mov
mov
lcall
scas
xor
pop
fsubrp
adc
fnsave
lahf
lods
lods
jo
push
mov
stc
xchg
push
in
add
nop
xchg
add
sbbb
mov
lds
lret
cld
inc
sbb
mov
sub
lds
xchg
sub
jecxz
mov
nop
xchg
movsb
cmp
jge
mov
movsl
cmp
aad
dec
and
rclb
pushf
xor
cmp
sub
dec
pop
scas
aas
repz
enter
pushf
push
inc
fldenv
stos
inc
push
fidivs
ror
int
mov
xor
mov
and
xchg
insl
icebp
dec
pop
mov
outsb
sbbl
sbb
ret
pop
sbb
testl
cli
dec
lret
bound
push
xlat
outsb
inc
push
test
mov
or
push
or
iret
jle
jle
cs
lods
inc
dec
mov
sub
mov
add
cwtl
das
out
mov
popf
pop
fidivs
mov
xchg
cs
adc
or
imul
push
lock
jp
pop
push
in
dec
iret
push
mov
push
cmp
pop
xor
push
lret
sbb
mov
outsb
aad
popa
testl
insl
cmp
data16
mov
mov
jns
sbb
out
jl
mov
mov
xchg
ror
xchg
xor
enter
sbb
dec
cs
inc
inc
xchg
jge
dec
lods
inc
jae
lahf
ss
dec
in
mov
out
loopne
aam
dec
mov
shll
push
adc
iret
cmp
les
xchg
sub
inc
xor
ss
sub
or
add
ljmp
push
les
dec
cwtl
mov
xchg
sub
repz
orl
enter
paddsw
and
mov
jmp
xchg
mov
and
push
loope
adc
jb
std
xor
and
push
sarl
mov
lock
fidivs
stos
cmpsl
ds
xchg
cs
sub
insb
xchg
adc
jp
mov
mov
imul
pop
loope
jno
repz
xchg
call
lds
adc
in
test
jp
subb
or
mov
push
popf
xchg
aam
roll
daa
cmp
jge
pop
repz
inc
fcmove
fwait
and
sub
xor
mov
pop
repz
rorl
jp
das
sub
ret
call
fdivl
mov
std
cmp
imul
mov
flds
or
int3
inc
sub
je
inc
xlat
xor
push
inc
xlat
mov
adc
or
das
inc
jge
outsb
cwtl
cmp
sub
sub
adc
cmp
ss
sbb
fsubs
adcb
xchg
adc
ss
xor
mov
pop
clc
mov
xorb
xor
loop
jnp
add
jmp
ja
push
movsl
fcomps
fs
sub
jmp
push
je
movsb
inc
jb
in
gs
out
xor
call
sbbl
imul
lahf
jne
imul
xchg
jnp
enter
push
jmp
fidivl
icebp
jp
mov
fdivr
xchg
sbb
int3
arpl
mov
test
pushf
fisttpll
cmp
int
subb
xor
cli
and
cmp
aad
dec
xchg
rclb
xchg
sub
stos
inc
pop
outsb
shrl
jp
aas
lods
mov
cmpsb
cmp
daa
and
jp,pt
out
dec
fwait
cli
xchg
sbb
cmp
cmp
sbb
push
fidivl
lods
out
xchg
enter
push
jbe
cmpsl
cld
ret
pop
lret
xchg
fidivrs
fsub
outsl
push
mov
add
int
sti
xchg
lock
jb
mov
loopne
inc
rcll
mov
fld
pop
sbb
std
xchg
es
xchg
outsb
inc
sbb
xchg
jp
movsl
imul
jmp
fimuls
rcrl
repz
jmp
jecxz
mov
jae
arpl
push
xorb
ljmp
cld
arpl
lcall
movsl
cmp
lea
int
add
lock
cmpl
out
push
movsl
cmp
cmp
movsl
push
iret
mov
pop
out
mov
mov
xor
push
movsl
or
pop
push
jmp
adcb
mull
push
aam
xlat
xchg
or
pop
mov
fldt
mov
pop
fdivrs
mov
inc
rcrl
scas
add
jge
pop
es
and
in
mov
or
arpl
xor
into
xchg
xor
add
sbbl
cwtl
sub
mov
jne
xor
mov
pop
lock
dec
jno
dec
in
loope
pop
aad
and
icebp
pop
daa
mov
push
and
dec
jbe
jo
insl
les
mov
pop
repnz
nop
daa
mov
mov
xor
add
sbb
roll
loop
mov
and
xchg
imulb
inc
inc
pop
pop
hlt
insl
arpl
lds
pop
pop
bound
push
xorl
xor
push
jmp
arpl
inc
lods
test
mov
aad
add
xchg
sub
push
sub
mov
movsb
lds
or
fnstcw
dec
outsl
outsl
push
movsl
mov
sarl
repnz
mov
scas
inc
xlat
pop
aas
cmp
mov
fidivl
xchg
dec
out
sbb
mov
jl
je
inc
fisubs
imul
fxam
push
in
fcomps
aas
push
pop
pop
mov
xor
outsb
rcll
fists
inc
inc
lahf
cmp
lahf
popa
mov
mov
ja
ret
add
data16
jecxz
lcall
jbe
xchg
sub
push
mov
lret
and
adc
lods
xchg
mov
push
pop
hlt
inc
jge
push
fs
xchg
inc
mov
js
add
pop
shrl
nop
pop
push
add
pop
xor
inc
push
pop
cwtl
jb
mov
lods
inc
pop
lahf
icebp
dec
or
mov
mov
xchg
mov
push
adc
hlt
mov
xor
dec
pushf
cltd
jmp
push
sbb
je
cmp
adc
xchg
mov
mov
push
dec
mov
sahf
mov
shr
insl
cmpsb
cmp
jmp
mov
xchg
outsl
popf
adc
jns
add
cmp
out
push
cld
notl
hlt
xchg
test
scas
out
movsl
mov
hlt
pop
int
nop
jecxz,pt
ret
frstor
ficompl
or
in
pushf
or
sub
cld
cmp
inc
fidivrs
jp
add
inc
push
scas
inc
addl
pop
adc
cli
inc
inc
stos
sbb
sbb
or
nop
and
xor
adc
push
lods
dec
sbb
insb
cli
sarb
cmp
aad
fcomp
inc
jecxz
sbb
cltd
mov
js
push
out
xor
push
in
inc
fbstp
sti
xchg
mov
inc
lret
xchg
sbbb
add
loopne
lcall
or
mov
pop
fadds
add
xchg
jo
adc
push
out
and
add
fsubr
pop
in
add
fcmovnb
cmc
sbb
loopne
iret
dec
icebp
lret
or
insb
aad
or
fistpll
mov
inc
inc
in
cmc
dec
mov
sub
pop
mov
pop
out
insl
dec
aam
dec
mov
add
inc
mov
icebp
xchg
pop
divl
scas
inc
in
xchg
add
in
in
andl
pop
cmp
lods
inc
lods
stc
pop
lock
das
or
jl
jnp
push
xor
mov
sbb
nop
jbe
cs
adc
into
inc
dec
jecxz
imul
insb
and
or
mov
into
cmp
out
je
leave
test
loop
das
add
testl
pop
pushf
fisubrs
pop
mov
dec
out
cltd
xchg
cmp
into
cmpsl
jp
mov
hlt
aam
or
sbb
mov
in
dec
mov
out
xchg
mov
pop
out
mov
pop
cmp
out
cmp
popa
dec
sub
aas
mov
shrl
ret
nop
sbbl
or
cwtl
lods
add
inc
fcom
pop
movsb
cmp
pop
shrb
jecxz
or
push
mov
movsl
call
lods
rcr
xor
rorb
out
lret
add
shrb
addr16
ficompl
lock
xchg
jle
mov
div
aad
jp
mov
mov
div
aad
jl
fisttps
cld
lret
ja
iret
pop
push
in
mov
inc
in
sahf
test
inc
mov
lock
pop
enter
sub
or
inc
jnp
push
into
shrb
cwtl
shll
jno
hlt
pop
mov
xchg
clc
call
or
xchg
lods
mov
hlt
sbb
ljmp
inc
ficomps
mov
arpl
pop
pop
clc
test
adc
stos
outsw
push
in
pop
into
mov
nop
sub
ret
pop
out
push
cwtl
das
dec
adc
mov
mov
or
out
gs
insb
fbstp
adc
sbb
push
bound
jge
sbbl
insl
inc
pop
jp
cmc
or
adc
fdivl
adc
jmp
cmc
andl
out
cwtl
in
push
adc
mov
mov
and
mov
clc
mov
fwait
dec
xlat
int
push
adc
fstps
pop
loopne
lods
fs
jge
mov
icebp
sbb
cli
sbb
pop
clc
repz
dec
out
xor
push
std
mov
test
push
pop
sub
imul
lods
pushf
das
sahf
xchg
adc
stos
dec
xlat
xchg
jno
pop
leave
daa
push
call
iret
inc
inc
adc
inc
int3
fisttps
inc
outsl
iret
cmp
add
into
fcompl
int
xchg
sbb
xor
ror
das
int
sbb
hlt
in
xlat
ljmp
cmpsl
in
sbb
daa
xchg
adc
xchg
pop
mov
shrb
xlat
sub
mov
fsubl
notb
ljmp
jecxz
rorl
jae
or
pop
cmc
sbb
and
adc
setg
icebp
jne
fwait
stos
outsl
sbb
mov
fwait
xchg
andb
mov
adc
in
and
scas
lahf
ss
stos
adc
je
mov
push
jno
push
push
mov
ja
je
adc
int3
add
xchg
sub
les
push
jnp
stc
lock
fldcw
rcrl
xor
loopne
mov
inc
add
pop
xchg
out
pop
jecxz
push
jmp
repnz
mov
pop
xor
cmp
out
call
jb,pn
sti
shrb
sbb
jnp
js
in
call
lahf
fnstenv
xor
rcrb
sub
div
notl
or
cmp
fisubrl
jle
pop
sti
xor
cmp
clc
rclb
jo
push
mov
rolb
sbb
loope
out
ljmp
nop
into
push
sbb
jg
xorb
cs
cmpb
xchg
inc
pop
loopne
and
mov
adc
xchg
and
jae
xchg
mov
or
filds
jb
xor
mov
sti
aas
or
push
and
ja
push
pusha
jne
and
push
jl
out
fstpl
pop
jl
sahf
inc
xchg
dec
xchg
popw
pushf
xor
mov
mov
stos
inc
pusha
aas
dec
jg
je
mov
pusha
push
in
es
pop
cmp
out
mov
dec
pop
push
inc
aam
arpl
clc
lret
mov
dec
negb
cmpsl
out
aas
and
lds
pop
jl
je
jmp
lahf
push
add
mov
pop
jne
mov
gs
ret
xchg
call
jp
sub
clc
idivl
loopne
fwait
movsl
fldenv
xchg
sahf
int
xor
test
movlps
sahf
mov
jne
test
pop
lahf
sub
inc
popl
jecxz
xchg
sbb
inc
cmp
dec
fcom
ss
and
popf
mov
add
lret
jmp
data16
sti
nop
adc
or
pop
leave
jne
sbb
push
lcall
sub
fildll
adc
sahf
and
adc
xchg
mov
sbb
repz
cmp
out
cmc
fcoms
bound
push
add
add
in
xor
cmp
scas
inc
push
dec
addr16
jle
xlat
outsb
stos
test
mov
fs
int3
add
push
sbb
arpl
jne
push
fists
fs
push
ja
sub
nop
nop
dec
sbb
jns
jmp
mov
imul
imul
lea
scas
shl
mov
mov
or
add
pop
stc
movsb
call
push
std
push
pop
jmp
popl
test
jmp
pop
ljmp
cmp
mov
cltd
and
adc
mov
pushf
es
js
jbe
scas
xor
sarb
mov
push
xlat
loop
or
mov
nop
aad
jge
adc
lods
notl
mov
mov
adc
sbb
cwtl
insb
adc
fwait
js
rorb
pop
iret
jecxz
loopne
or
jae
daa
daa
xchg
in
and
sbb
xchg
loop
adc
push
iret
dec
mov
dec
and
pop
jno
sbb
mov
cmpsb
xor
mov
lods
cmp
movq
inc
insl
xchg
sub
gs
je
jo
imul
scas
jg
xchg
sub
push
add
push
push
in
push
xlat
outsb
mov
je
xor
jl
push
xor
xchg
push
adc
push
leave
cmpsb
xchg
mov
and
dec
fisttpll
ss
in
xchg
adc
dec
add
xor
inc
enter
movb
dec
mov
lret
sar
and
std
sub
xor
fs
sbbl
pushf
fcompl
or
adc
in
mov
pop
xor
sti
mov
nop
mov
jno
dec
out
mov
pop
cmp
sub
push
dec
shl
testl
xor
cmp
adc
dec
and
cmp
aad
orb
pop
xor
lock
in
mov
adc
loop
cs
xor
adc
stc
xor
sub
cwtl
sbb
nop
pop
scas
shl
pop
adc
xsha1
cmpsb
dec
xor
add
stc
shl
data16
mov
and
xchg
xchg
xchg
dec
nop
push
push
rclb
mov
icebp
or
dec
in
sbb
popa
push
mov
cmp
or
js
dec
aam
jb
dec
cmc
shlb
shlb
mov
rcl
imul
sub
cmp
mov
addb
sti
jp
cmpsb
push
and
fcmovnu
or
int
sub
mov
test
ret
inc
shr
mov
cmpb
mov
xchg
xchg
mov
mov
in
sbb
je
inc
mov
jl
mov
in
jp
push
inc
stos
nop
pop
add
mov
addr16
inc
mov
jns
inc
mov
je
jno
icebp
mov
pop
or
jne
fdivl
daa
stos
cli
mov
push
shll
movl
sbb
push
enter
or
adc
mov
and
or
jge
xchg
dec
mov
xor
pop
imul
xor
lea
out
outsb
nop
daa
mov
out
addr16
cmp
rcll
daa
inc
fsubrs
mov
mov
sub
cltd
mov
lcall
push
cli
xchg
cmp
inc
jmp
test
movsb
jmp
loope
test
dec
or
shrl
idivl
sbb
imul
push
testl
pop
loopne
repz
and
fidivs
in
rcl
shrl
iret
cmp
les
fmuls
xor
ljmp
pop
arpl
ljmp
insb
xlat
cs
xchg
ds
push
je
and
xchg
sub
adc
sbb
test
lds
sti
xor
jl
mov
and
int
mov
loop
cltd
orl
add
lds
cmpsb
xchg
out
gs
mov
pop
dec
loop
and
pop
push
adc
add
das
mov
clc
sarl
lret
iret
inc
loop
in
pop
or
cmp
addr16
sub
cmpsb
mov
xchg
mov
mov
stc
mov
cmpsl
cwtl
push
pop
ljmp
shr
fcomps
dec
out
pop
push
mov
push
push
rorl
inc
movsl
dec
cmpsb
cmp
mov
mov
dec
int
dec
cmp
adc
mov
add
insl
xchg
lahf
shl
xchg
inc
sub
stos
in
orb
mov
xchg
inc
xor
mov
andb
cltd
mov
ficompl
icebp
jg
jnp
ret
hlt
jae
mov
add
mov
cmp
orl
sub
lock
outsl
cld
adc
daa
cmpsb
add
and
outsl
mov
insl
adc
out
scas
cltd
sub
push
filds
dec
pop
cmp
sahf
and
mov
push
ljmp
push
test
add
jp
or
and
or
mov
push
inc
pcmpeqw
xchg
xor
cmp
and
pop
pop
shrl
clc
out
inc
jo
xor
shlb
or
mov
dec
xchg
and
jl
repnz
jmp
imul
sub
mov
mov
shrb
imul
test
jge
jns
xchg
addr16
mov
pusha
pop
nop
fcomip
lcall
add
js
es
imul
lcall
enter
ja
mov
xor
and
leave
push
sub
testb
or
jns
ss
mov
movsl
imul
stos
repz
outsb
jmp
ret
dec
daa
jle
mov
or
sti
push
xchg
fstps
pop
add
outsb
int
fnsave
jo
push
lods
pop
cs
mov
adc
ljmp
sub
lret
sarb
mov
push
and
in
mov
sbb
mov
vmovhps
xchg
sti
mov
xor
sub
enter
decb
xchg
sbb
dec
cmp
mov
pop
mov
dec
mov
fwait
sbb
ficoms
sti
or
mov
icebp
or
mov
sti
bound
push
mov
dec
dec
lret
out
inc
jp
pop
lock
testl
lret
dec
rcrb
dec
mov
shlb
stos
popf
out
xchg
lret
test
int3
mov
data16
adc
mov
sbb
movl
pusha
cld
xchg
and
mov
dec
cld
push
push
cmpsb
popa
lods
or
nop
daa
jns
xor
mov
push
int3
sub
adc
lret
imul
sub
xlat
movsb
jecxz
ljmp
bound
cmpsl
xchg
or
fstpl
jl
push
mov
stos
sbbl
fwait
cltd
aad
push
and
sbb
ss
xchg
in
aaa
jecxz
adc
pushf
loopne
add
mov
bound
mov
lods
adc
jno
or
xchg
push
aad
ss
adc
dec
sub
stc
add
aaa
pop
outsl
addr16
push
cmp
sti
out
nop
int
jae
sbb
seta
repnz
mov
call
stos
jne
sbb
mov
fstpl
sub
adc
mov
pop
fmull
cld
aaa
call
sbbl
mov
mov
daa
mov
movb
xchg
xor
or
jl
adc
loope
arpl
jmp
daa
push
xor
data16
cmp
test
jno
aas
mov
inc
xchg
sbb
cmpsl
adc
push
adc
fidivrs
ret
xor
and
out
cli
sub
js
sbb
jg
xchg
inc
pop
in
lcall
movsl
adc
push
mov
movsb
mov
in
in
stc
popf
mov
out
lahf
ret
lret
mov
xchg
loop
in
lahf
adcb
sbb
ss
adc
arpl
pop
sbb
pop
icebp
cmp
pop
sahf
xchg
sbbl
mov
popa
dec
out
movsb
jno
rcrl
mov
lock
cmp
cmpsl
scas
hlt
rep
popf
pop
xchg
xor
mov
sbb
xor
fistpll
je
test
ja
mov
cmpsl
adc
sbb
adc
lock
outsb
adc
pop
movsw
in
cmp
insl
pop
outsb
add
jbe
dec
sbb
iret
test
jne,pt
data16
scas
pop
mov
and
aad
lea
lahf
mov
roll
push
fisttpll
cmp
inc
inc
cmp
dec
pop
push
jecxz
push
inc
mulb
pop
pop
add
cmpsb
cld
clc
inc
and
and
push
inc
pop
or
inc
ds
pop
mov
mov
mov
adc
mov
jg
lea
in
sahf
pmaxub
pushf
cmp
cli
negl
jmp
or
fucom
cld
mov
pusha
gs
fdivr
cld
data16
lock
mov
push
sub
aaa
daa
nop
adc
sub
sti
mov
sar
ljmp
cli
ror
jno,pt
mov
jb
push
adc
ror
push
and
mov
nop
add
es
push
sbbb
jno
cmp
popa
sbb
lea
inc
scas
fcmovb
jb
xchg
stc
pop
stos
xlat
in
add
out
cli
jne
arpl
or
or
cmpsb
push
sbb
ss
and
in
add
daa
dec
mulb
dec
xor
sbb
mov
outsl
nop
outsb
sbb
sbb
fdivl
pop
hlt
xorl
xchg
popf
push
adc
push
mov
mov
out
and
adc
scas
xlat
adc
scas
loopne
lret
add
cmp
sbb
dec
test
inc
jl
les
jnp
imul
jle
and
insl
push
mov
mov
xchg
mov
add
lods
sbbl
push
arpl
adc
stos
fdivs
lret
mov
add
jbe
adc
out
imull
xchg
sub
push
adc
jns
in
push
mov
jae
rorl
es
stc
fldenv
sar
repz
pusha
scas
push
mov
lock
mov
jg
leave
testb
decl
jmp
test
mov
ja
dec
int3
rolb
push
inc
cmpsb
sbb
push
orb
lahf
scas
stos
sti
inc
fisubrl
mov
cwtl
ds
push
hlt
insl
push
aas
pop
cmp
dec
pop
inc
iret
sbb
aas
pop
sub
push
or
lds
aas
out
jbe
cmp
ja
inc
and
pusha
out
popf
addr16
in
rcrb
rep
mov
xlat
out
xchg
pop
adc
adc
sbb
nop
out
sub
insb
je
jne
cmp
inc
out
addr16
mov
dec
popa
dec
pop
adc
or
cltd
push
mov
jnp
das
and
shrl
sub
mov
dec
jnp
dec
or
enter
fisttpl
mov
pop
addr16
dec
lcall
pop
insl
test
cwtl
xchg
inc
dec
sbb
dec
aas
test
xchg
push
inc
sbb
ret
arpl
push
push
cmp
push
jne
and
xchg
shlb
aaa
hlt
scas
movmskps
ret
sti
fwait
inc
pushf
xchg
jecxz
scas
lods
fwait
xchg
adc
rcrl
nop
daa
jmp
push
out
das
cli
ss
xchg
pop
out
adc
out
stos
sar
nop
iret
loope
loop
icebp
imul
and
dec
jmp
imul
les
repnz
repnz
push
test
lea
mov
sub
or
sub
add
and
inc
fcompl
test
testb
ss
sbbl
mov
ss
test
mov
and
inc
dec
lods
inc
andl
aam
sbb
daa
or
into
cmp
popf
jns
push
in
lea
das
lock
popa
adc
dec
add
repnz
enter
insb
xor
push
mov
dec
ds
aad
test
pop
push
cmp
scas
inc
jae
push
sub
mov
mov
movsb
stos
dec
gs
mov
aad
xor
call
or
fs
mov
add
sti
jne
mov
shrl
fcomps
enter
loop
fcoml
cmp
xor
fidivl
lahf
das
cld
push
sbb
pop
inc
xlat
add
out
lcall
push
inc
lock
test
dec
push
inc
pop
or
rolb
sbb
mov
inc
js
jae
xchg
scas
push
outsb
mov
dec
mov
lock
dec
fsub
dec
sbbl
in
mov
dec
inc
mov
mov
or
sub
pop
rcrb
mov
dec
out
or
mov
add
xor
cmp
pop
test
leave
mov
pop
and
ljmp
add
mov
mov
add
rclb
fildl
adc
fsubr
inc
mov
sbb
sub
sbb
xchg
in
je
pop
dec
fwait
jae
cmp
sub
stc
and
shrb
enter
mov
cwtd
mov
or
mov
lds
lods
inc
je
mov
push
dec
lret
jae
xor
mov
hlt
xor
pop
aas
sub
divb
frstor
xchg
aaa
push
pusha
dec
and
dec
shlb
xchg
jg
add
mov
push
and
push
je
jo
jnp
push
imul
jno
mov
clc
xchg
icebp
notl
daa
mov
mov
cmp
imul
repz
pop
in
rorl
in
cmp
out
daa
push
sub
mov
inc
lcall
xchg
or
jb
cmp
andb
sub
sti
xchg
fidivl
cmpsl
cmp
cmpsb
push
jbe
xchg
shl
sub
jne
iret
lret
xor
scas
dec
xor
and
shlb
mov
mov
imul
inc
xor
ret
adc
in
ss
push
iret
sub
push
jb
adc
cmp
aam
outsl
outsb
cmp
adc
aaa
fdivl
and
inc
pop
mov
adc
idiv
dec
cmp
lret
fldl
out
aas
inc
cmp
sbb
push
pop
mov
movsb
ret
out
scas
pop
mov
lds
mov
mov
dec
jl
dec
pop
pop
adc
add
mov
loopne
inc
mov
mov
roll
aas
jns
out
inc
ficoml
divb
xlat
mov
jnp
jnp
xorl
cltd
add
mov
pop
out
push
stc
pop
add
and
pop
mov
outsb
movsl
test
lds
xchg
lahf
aad
push
pop
mov
mov
ds
ss
cwtl
test
iret
sti
or
lcall
xchg
nop
enter
sahf
imul
outsb
loope
in
aas
into
mov
inc
mov
or
xchg
xor
pop
cmp
jmp
xorl
mov
outsl
aad
sarb
cs
imul
mov
ret
popf
stc
jle
inc
arpl
jnp
adcb
add
xor
mov
cmp
xchg
out
mov
outsl
mov
adc
ja
ja
lock
dec
mov
pushf
bound
xor
sbb
test
adc
sbb
fisttpll
or
push
lcall
cmp
nop
jl
add
xchg
in
call
lds
sbb
leave
les
xchg
add
mov
aaa
ss
xrelease
xor
xchg
dec
sar
jno
aam
push
inc
jnp
inc
or
aam
into
movsl
jbe
pop
lock
gs
pusha
mull
add
int
and
bound
into
ss
xchg
mov
cmc
loop
and
fimull
cltd
mov
xchg
std
int
fimuls
push
inc
mov
dec
pop
mov
lret
aam
sbb
das
dec
cmp
stc
jg
fwait
xor
jno
xchg
jnp
mov
mov
mov
add
dec
jne
mov
jge
push
pop
addr16
pushf
cs
aas
sub
or
xchg
cmp
sub
or
adc
mov
popf
cmp
dec
imul
data16
mov
mov
jl
cmp
scas
push
add
xchg
push
nop
jae
fstpt
orl
add
jge
xor
pop
in
xor
jecxz
and
push
nop
stc
or
cmp
aas
ds
iret
jle
loop
jg
push
jnp
and
mov
or
jae
and
push
adc
and
mov
ret
and
jecxz
int3
and
cmp
pop
jp
arpl
fcmove
inc
mov
ja
ds
pop
mov
test
loope
clc
cmp
dec
mov
cltd
lret
push
xorl
xor
jmp
lds
adc
jne
out
fsubl
cmpsl
aam
inc
mov
push
ficoml
fdivrp
inc
imul
jle
push
mov
pop
jae
xchg
pop
cmpsb
dec
pop
cmp
add
dec
dec
std
arpl
adc
out
xor
xor
xor
shrl
ja
mov
cmp
sbb
les
cmp
mov
enter
xor
push
jmp
sub
jb
sti
std
out
test
xchg
popf
mov
xor
popa
mov
push
out
or
push
outsb
clc
jnp
insl
add
adc
mov
das
inc
inc
sbb
imul
add
pop
insl
or
dec
mov
mov
cmpb
test
xchg
xor
std
test
movsb
fbstp
pop
inc
mov
pop
rcl
es
pusha
add
xchg
cmp
push
jecxz
add
data16
pavgb
adc
dec
aam
pop
inc
popf
jg
int
and
movsl
test
and
sub
inc
push
cld
xchg
push
test
mov
sbb
aad
cmp
sti
jg
mov
data16
add
jnp
adc
cwtl
into
xor
xor
sbb
xlat
fsubl
or
pop
mov
iret
data16
lahf
push
sbb
je
jb
or
jmp
or
jns
subl
xor
sbbl
clc
mov
jne
fwait
cmpsb
push
shlb
xor
mov
lods
inc
push
xor
jecxz
mov
in
lea
add
loope
test
sub
mov
fidivs
pop
in
test
xchg
aas
ss
movsl
out
adcb
inc
arpl
insb
xchg
popa
outsb
xchg
mov
or
repz
sub
outsb
mov
dec
pusha
mov
inc
pop
rol
adc
das
aas
stos
lods
lds
cwtl
cmp
jo
mov
cmpsl
jmp
lods
mov
pop
xor
fbstp
jne
lcall
ljmp
fwait
fwait
sbb
lea
repz
jp
leave
loopne
cmpsb
or
lahf
adc
xchg
add
outsl
jns
ja
test
fnstsw
loopw
cmp
inc
adc
adc
or
xchg
repnz
jo
mov
adc
in
pop
push
lret
movsb
jle
popa
adc
loop
in
dec
pop
xor
cmp
cmp
cmp
mov
mov
xor
dec
leave
pusha
xorb
pop
sub
fdivrl
test
dec
sub
iret
orl
in
sti
xchg
rcr
sub
scas
and
add
in
cld
xchg
iret
or
xchg
mov
mov
lret
mov
mov
push
mov
or
call
lea
sbb
popf
fisubs
sub
pop
imul
jne
loop
inc
iret
mov
shll
pusha
sbbb
mov
lcall
or
sbb
in
sbb
push
jae
jp
fwait
fwait
xchg
mov
mov
jmp
popa
xchg
lods
fdivl
out
ds
push
cwtl
sbb
and
push
or
int3
xchg
mov
mov
shlb
imul
cld
aam
popa
shlb
sbb
clc
lods
ficoml
and
sbb
enter
insb
insb
xchg
clc
stos
mov
adc
or
fldcw
data16
cli
lds
stc
stos
inc
xchg
xor
arpl
mov
add
or
cmp
mov
jl
in
mov
or
fwait
or
fs
jno
pop
add
pop
xchg
fstpt
jmp
push
and
jle
mov
fisttpll
mov
cmpsl
inc
or
data16
push
call
rcrl
pop
imull
lahf
mov
pop
std
jl
xlat
cmp
sbb
sub
fld
fistl
cmp
mov
or
popf
test
sub
adcl
fsubrl
je
adc
push
cmp
mov
jge
rcr
lcall
ja
push
ljmp
push
cmp
movsl
rcll
mov
lret
push
push
or
sub
push
jmp
add
outsb
add
ljmp
lret
enter
jp
int3
push
pshufw
pop
xor
mov
int3
lret
add
cltd
cmp
mov
and
mov
jae
jp
in
push
push
and
lcall
hlt
das
aas
stos
outsl
cmp
mov
dec
or
jl
ret
pop
fcomps
adc
mov
fnstenv
push
add
xchg
sub
cs
mov
cs
mov
mov
loope
sbb
dec
or
sti
xchg
inc
cs
lods
lahf
stos
fstl
pop
testb
jge
inc
cmc
cmp
es
ja
dec
sub
jns
push
sbb
and
xor
fs
lret
or
addb
jae
or
pop
sbb
push
dec
jns
push
cs
scas
cmpb
fiaddl
inc
ds
or
and
push
or
rclb
and
pop
sti
fsubrp
mov
sarl
out
or
sbb
cmp
ds
mov
sub
enter
inc
push
in
jae
mov
sti
push
mov
daa
ret
mov
dec
add
cmp
sti
pop
bound
mov
sbb
fmuls
cmp
lods
adc
fs
dec
push
jae
lea
shl
mov
sbb
pop
outsb
iret
xchg
cmc
mov
out
jge
icebp
out
add
mov
sub
push
push
cmp
ret
pop
jnp
cmp
cs
rcrb
fisttpll
xchg
test
and
lds
rcr
outsl
push
stos
mov
xchg
dec
loopne
cmp
add
inc
mov
cmp
sub
sbb
xor
push
bound
inc
cmpsl
test
lret
push
les
lea
sti
or
or
mov
cli
cmp
cltd
jnp
iret
mov
and
cmpsl
pop
add
mov
shrl
jl
je
mov
and
adc
xchg
ss
sbb
jbe
mov
lahf
out
dec
cli
jg
in
ja
inc
cmc
ret
test
out
xor
movsb
test
cld
ja
test
repz
iret
mov
jns
lahf
insb
jle
inc
inc
xlat
jno
js
cmp
pop
hlt
xchg
aaa
aaa
cli
loop
jnp
imul
rcrb
out
arpl
lock
jl,pt
sti
or
pop
popl
aad
cmp
stos
imul
xor
lods
pushf
out
add
lret
lret
emms
mov
bound
ja
lds
movsl
mov
out
jecxz
sbb
leave
pusha
loop
xor
leave
add
dec
mov
popf
rol
dec
test
cmp
pushf
or
fsts
cmpsl
or
cs
mov
xchg
ds
lock
outsl
pop
mov
dec
dec
mov
ret
sub
push
add
cli
aas
and
xor
push
mulb
notb
mov
loopne
loope
or
aas
in
pop
stos
cwtl
dec
jg
aad
adc
leave
in
outsl
push
adc
add
movsl
sub
adc
lcall
call
fsubp
dec
mov
xchg
mov
adc
jns
data16
pop
rorl
push
nop
pop
ljmp
xchg
shll
repz
int3
and
insl
ret
lds
jg
pop
je
test
or
das
xor
fsubrp
dec
loope
neg
test
out
pop
pop
inc
ficomps
fisubrl
dec
inc
mov
arpl
lods
mov
in
in
jmp
mov
leave
pop
fists
mov
push
push
idivl
cmpsl
mov
imul
scas
incb
lret
pop
test
dec
popa
lods
inc
mov
js
jp
lret
pushf
push
subl
lahf
sti
push
inc
jns
xor
lahf
stc
xlat
rclb
pushf
xor
outsb
mov
out
fdivl
inc
hlt
dec
mov
cmpsb
xor
sub
aaa
xchg
out
pusha
popa
and
fwait
pop
out
sbb
jo
ficomps
scas
test
pop
stc
stos
es
ljmp
aam
push
icebp
mov
sbb
or
xchg
data16
cmc
pop
adc
fwait
pushw
mov
repz
push
fisubrl
movsl
and
adc
int
mov
push
jns
ret
cld
test
and
xchg
fucomip
xchg
lds
adc
jno
mov
add
mov
or
sarl
jl
stos
test
or
push
adc
inc
inc
push
imul
pop
cmc
xchg
sahf
clc
mov
mov
cwtl
mov
or
rcl
repnz
pop
cmp
icebp
mov
and
and
aam
mov
cmp
jmp
fwait
jecxz
and
sbb
movsb
ljmp
push
fidivl
inc
cltd
inc
frstor
out
dec
jmp
test
cmp
push
adc
std
jb
mov
mov
and
adc
es
scas
adc
fimuls
pop
cmp
loopne
imul
mov
repnz
aad
jp
stc
xchg
mov
pop
mov
add
in
or
cmp
pop
mov
je
add
push
xchg
js
pop
les
jnp
iret
xchg
enter
mov
in
out
xchg
fs
in
mov
xor
xor
pop
pop
repnz
jg
in
jo
xchg
mov
or
divl
mov
sub
xor
fsubrs
or
testb
lcall
adc
or
or
rcll
loopne
dec
adc
fsubs
sub
mov
es
in
add
daa
push
insb
add
lret
inc
pushf
ja
mov
cltd
nop
aas
shrl
or
loopne
cmp
test
mov
divl
loop
jb
pop
movsb
call
xchg
sub
fwait
daa
xor
push
in
cld
fdivl
mov
jmp
into
lea
mov
jmp
or
jns
sub
ds
jns
aam
inc
inc
jmp
or
jns
mov
add
mov
loop
mov
cmpsb
add
stc
mov
fsubl
push
ss
outsb
xorb
imul
xchg
mov
out
test
lea
add
cmp
jnp
movsl
idiv
in
xchg
sub
pop
sbb
sti
jo
ds
inc
push
cmpsl
subl
add
fwait
insl
cld
test
or
xchg
leave
jle
iret
in
rcll
shrl
sub
movsl
jb
repnz
adc
sarb
fistl
fs
adc
push
inc
jb
inc
movsb
push
arpl
xchg
mov
andb
gs
cs
push
in
test
jbe
lahf
sub
or
pop
sub
pop
jns
mov
popf
inc
sbb
push
adc
adc
aaa
cmp
cs
imul
inc
mov
gs
xor
push
clc
rorl
xor
data16
push
jmp
jae
jo
pop
popa
gs
or
movsb
xlat
mov
xlat
push
push
push
lods
dec
mov
dec
pop
adc
mov
adc
pushf
mov
xor
in
gs
xrelease
ss
xchg
into
xor
lock
sub
push
mov
mov
sti
rorl
inc
inc
xor
jb
imul
cs
or
pop
or
enter
ja
out
and
leave
imul
mov
fisttpll
call
hlt
xor
std
or
aaa
into
gs
jle
orps
fmul
into
dec
mov
jnp
test
out
fcoml
punpckhwd
mov
or
and
push
sbb
popf
xor
ds
pop
sbb
lret
xlat
push
mov
jne
push
mov
push
lods
lods
aad
data16
sub
insb
test
aas
push
and
jbe
dec
push
orb
insb
inc
push
mov
ja
lret
les
jecxz
cwtl
adc
cmp
dec
pop
mov
mov
mov
stos
xor
fildl
scas
sarb
mov
pop
aad
popa
clc
mov
aad
pop
jg
lea
pop
jne
sbb
data16
jmp
push
cwtl
and
inc
mov
scas
les
cld
xchg
ret
in
arpl
popf
sbbb
push
les
add
pop
cmc
push
add
jl
sub
call
inc
sti
int3
jns
sbb
xchg
xchg
push
lods
lds
sbb
jl
mov
mov
cmp
out
rcrb
dec
adc
adc
mov
js
cmp
lods
leave
shl
adc
scas
cltd
push
pop
cmp
aaa
adc
call
int3
xchg
adcb
ss
xlat
sysret
jo
cmp
jmp
mov
sbb
mov
cwtl
add
inc
lock
fistpl
mov
push
outsl
push
adc
xchg
fnstenv
lea
sub
cmp
stos
cmp
adcb
or
sahf
xor
mov
aas
add
daa
jne
cmc
cmpsb
dec
mov
mov
adc
jnp
mov
mov
push
out
jo
ljmp
daa
ja
aam
pop
mov
call
ss
rdtsc
adcb
jecxz
lcall
insl
fs
cmc
mov
inc
arpl
pop
ljmp
repnz
mov
push
test
lret
cmp
and
movsl
cmp
imul
fidivrl
and
popl
ljmp
pop
scas
cltd
or
sub
or
enter
ror
mov
and
inc
push
adc
xchg
jmp
or
mov
insl
sbb
sahf
xchg
cmp
mov
dec
add
pop
xchg
fcom
lret
and
ds
pop
std
xchg
cmp
mov
mov
push
lds
ds
cmp
test
rcrl
repnz
outsl
sar
and
lea
xor
pop
repz
adc
iret
fstpt
or
xor
fimuls
scas
test
in
dec
roll
or
inc
aad
ds
dec
aaa
mov
and
cmp
mov
les
out
xor
aas
push
cli
movsl
hlt
mov
jne
cmpsl
jp
hlt
cmpsb
jns
sub
jecxz
pop
lcall
push
pop
mov
inc
leave
jp
arpl
fmuls
dec
lds
inc
dec
pushf
arpl
sub
fidivs
cmp
sbb
cli
fsubr
sti
jmp
cs
aaa
shr
push
and
dec
xchg
xor
pusha
mull
xchg
hlt
lods
and
adc
stc
or
cltd
mov
jno
add
sub
inc
mov
or
cwtl
aam
fwait
mov
add
ja
mov
decl
cmpsb
std
xlat
push
push
hlt
mov
scas
dec
enter
dec
lcall
sbb
into
jmp
pop
outsl
add
imul
sti
push
loope
add
xchg
mov
je
inc
arpl
scas
sbb
jo
outsl
mov
push
enter
in
sub
scas
arpl
loop
out
es
xchg
jl
adc
mov
adc
and
out
mov
xor
fldt
pop
add
mov
aas
jecxz
push
sub
or
xor
jge
pop
sub
cmp
push
xorb
inc
aaa
rorl
mov
outsl
cmpsb
cmp
sbb
mov
jle
movb
iret
outsb
sbb
xchg
outsb
movsl
out
pop
mov
data16
fcomps
cmp
xchg
subb
sbb
mov
out
sbb
push
or
pop
and
int3
loope
popl
lea
cli
xor
lcall
out
scas
push
adc
mov
sub
data16
xchg
push
mov
fdivl
push
or
mov
lret
out
stos
sbb
mov
call
repz
lods
fdivrs
addr16
jo
dec
lretw
mov
or
sub
aaa
movsl
dec
invd
mov
mov
add
repz
aad
xchg
mov
testl
in
jle
outsb
fs
sbb
sbb
movsl
sub
out
push
mov
sbb
sbb
mov
jne
or
shlb
fistps
mov
push
mov
pop
xchg
mov
ja
test
cmp
jp
jno
pop
jg
push
jle
test
or
adc
sub
jp
insb
fistpll
jecxz
or
ljmp
dec
cmp
jbe
add
or
lods
add
xor
jns
pop
clc
push
into
add
sub
add
scas
pop
rclb
sbb
and
popa
enter
jl
out
push
mov
push
cmc
enter
fisttpl
jns
mov
cltd
mov
mov
jmp
scas
mov
pop
mov
push
mov
xchg
xor
adc
lods
mov
jle
call
add
dec
mov
pop
sarl
ret
inc
scas
push
pop
sbb
aam
push
insl
cmp
mov
mov
dec
cmp
aas
repz
outsb
and
mov
mov
fcompl
or
mov
sarl
out
lods
cltd
arpl
imul
sub
stc
test
sub
ficoml
jecxz
gs
add
subb
in
or
cmpsl
dec
xchg
int
jmp
lahf
push
clc
and
jae
ret
or
sbb
sub
and
mov
lret
lea
mov
stos
es
mov
xchg
lds
dec
test
pop
sub
dec
pop
popf
add
cmp
lds
or
dec
and
dec
jecxz
jmp
arpl
rcrb
jl
jmp
fadds
dec
outsb
loopne
fstl
xchg
mov
mov
sbb
add
stos
inc
mov
push
cmp
pop
ficoms
cmp
lds
add
mov
mov
test
pop
dec
jg
dec
out
push
mov
nop
mov
cmpb
xchg
insl
les
sbb
and
out
push
pop
test
je
testb
fisttpl
pop
scas
std
dec
cmp
in
ds
xlat
adc
push
inc
mov
sbb
sahf
std
push
sbb
mull
notl
je
xlat
push
pop
xchg
sub
repnz
stos
cmp
mov
int
adc
mov
and
je
and
insl
and
sbb
jns
ja
data16
bound
mov
adc
aad
mov
push
iret
jb
adc
jle
add
pop
into
jnp
push
and
pop
dec
cmp
pop
vshufps
stc
orl
in
sbb
xchg
cmp
imul
test
out
or
inc
sahf
mov
adc
stos
adcb
in
cmc
mov
out
lock
jne
mov
fmuls
rclb
fadds
mov
inc
ret
push
leave
enter
stos
stos
aas
and
les
bnd
outsb
mov
xchg
sub
adc
aaa
das
lock
cwtl
pop
popf
mov
popf
xor
push
out
sahf
jns
inc
frstor
nop
or
clc
fwait
mov
leave
lods
lahf
jge
rcl
xor
push
jne
stos
cmpsb
or
nop
xor
test
mov
add
push
out
jne
sub
popf
mov
mov
inc
in
mov
add
std
das
sub
or
int3
xchg
dec
lret
dec
and
mov
adc
imul
inc
bound
ret
pop
mov
xchg
push
inc
pop
xchg
sub
jno
pop
cmpsl
pusha
sub
xchg
hlt
es
push
lahf
jg
into
pop
adc
push
outsl
add
and
jns
loopne
xchg
rcrl
cmc
je
loop
lahf
sarb
xor
fs
xor
das
das
mov
xor
jmp
rdpmc
bound
test
or
xor
mov
mov
xchg
enter
inc
nop
adc
dec
add
out
push
xor
xchg
mov
imul
push
sub
jge
sbbl
push
pop
push
popf
mov
jmp
adc
and
imul
push
mov
repz
mov
xor
insb
sbb
mov
push
pop
sbbl
fadd
xchg
jle
jge
cltd
mov
pop
push
jmp
mov
jno
and
cmpsl
ds
adc
pop
jns
and
mov
add
fistl
sbb
cld
lret
jle
data16
mov
dec
aad
mov
mov
xor
jo
mov
into
push
xchg
jnp
adc
push
inc
pop
dec
aaa
into
xor
scas
imul
out
ss
fdivl
sbb
outsl
push
pop
stos
push
rolb
pop
dec
mov
repnz
dec
push
stos
jns
fcmovnu
pushf
repz
cmp
lds
pop
cmp
aaa
ds
repnz
inc
leave
mov
push
cmp
scas
les
inc
sub
cltd
imul
rolb
sub
jp
push
dec
and
jle
icebp
scas
and
sbb
insb
and
inc
test
cmpsl
pop
xchg
jmp
subb
enter
fwait
inc
sbb
jne
movsb
gs
inc
leave
cwtl
sub
in
sbb
int
movsb
mov
mov
call
bound
cmpsl
xchg
dec
dec
jecxz
aas
adc
movsl
ljmp
enter
into
sbb
dec
les
jns
nop
push
adc
out
sbb
cmpsl
arpl
fadds
add
gs
out
mov
into
dec
cmp
in
lea
aad
mov
xchg
pop
mov
jo
hlt
mov
dec
add
dec
cmp
test
inc
mov
ja
fcoms
or
push
push
xchg
scas
dec
dec
xor
dec
shrb
inc
xor
andl
pop
sbb
xchg
fs
lahf
out
jp
mov
insb
flds
cmpl
outsb
jle
jmp
popf
jo
test
gs
inc
divl
cld
scas
rcrb
iretw
ja
jmp
mov
imul
mov
in
dec
test
lret
rep
mov
into
enter
cmp
mov
mov
into
les
imul
adcl
xor
lea
push
xlat
lock
clc
lahf
mov
pop
add
push
jge
cltd
test
cwtl
push
push
and
psadbw
pushl
clc
sbb
daa
cmp
jo
push
subb
mov
mov
inc
mov
xor
popw
xchg
mov
lret
or
movsb
incb
sbb
test
inc
pop
inc
fmull
sti
arpl
ret
sbb
push
clc
push
pop
subl
testl
mov
add
mov
fistpl
fisttps
es
xor
inc
xchg
sbb
mov
out
lea
xchg
inc
push
xorb
sub
pop
sbb
idiv
xor
push
dec
in
mov
imul
outsb
cmp
mov
movsl
sbb
ds
jg
mov
imul
mov
in
or
mov
adc
mov
stos
jns
push
stos
lret
ficomps
sbb
js
xor
and
loopne
pop
test
jbe
lds
mul
mov
loopne
dec
mov
ret
xrelease
sub
mov
pushf
daa
imul
push
or
adc
pop
dec
mov
nop
dec
sub
xor
mov
xchg
or
mov
cmp
jl
adc
sbb
xchg
cmp
ret
lahf
xchg
sub
sbb
cwtl
inc
imul
pushf
daa
push
lods
pop
je
and
mov
xchg
mov
loope
mov
mov
data16
add
outsl
and
call
call
insl
add
mov
andb
cltd
cmp
mov
mov
insb
out
nop
push
clc
sbb
outsb
iret
ljmp
clc
loope
lods
dec
dec
aaa
jg
and
adc
cmovae
test
cmpsl
add
es
addr16
mov
daa
lds
sti
pop
adc
inc
dec
mov
or
shrb
aam
inc
mov
outsl
adc
fisubrl
adc
and
add
adc
dec
andb
rcl
fsubrl
xchg
notb
ret
jle
sbbl
fwait
scas
lds
je
push
out
test
mov
mov
aaa
push
rol
mov
cli
and
xor
jg
sbb
mov
fcomip
adc
adc
dec
mov
repnz
scas
ret
in
jo
aam
rcl
ret
sub
inc
fsubrp
adcb
in
push
ds
sti
loop
pop
adc
and
fbstp
sarl
adc
fidivl
xchg
les
movsb
xchg
cs
xlat
push
xchg
inc
fucom
mov
or
lds
push
testl
daa
jns
andl
mov
cmp
pusha
dec
dec
out
sahf
into
jo
pop
insb
aas
or
inc
mov
cmp
pop
popf
pop
testb
repnz
pop
sbb
out
dec
or
repnz
repz
enter
arpl
insl
xchg
rclb
sub
nop
pop
dec
nop
add
mov
xlat
scas
and
cs
xor
inc
jne
scas
mov
fdiv
xchg
pop
pop
xor
sub
inc
fwait
cmpb
movsl
fcoml
bound
idivl
or
rcrb
push
mov
ss
push
cs
fistl
cmp
notl
or
inc
leave
pusha
call
mov
xchg
mov
das
jle
dec
clc
in
push
sbb
in
jnp
in
lcall
adc
lock
scas
out
loope
or
pop
aad
mov
xchg
dec
scas
hlt
jne
stos
xor
mov
inc
cmpsb
mov
mov
sbb
imul
or
cmpsl
add
sbb
push
flds
jp,pt
sbb
insb
bound
iret
jp
movb
adc
insb
ret
pop
and
dec
and
call
mov
adc
ja
or
cwtl
les
push
ja
out
test
pop
std
inc
cmp
inc
cmpsl
ljmp
inc
mov
nop
jnp
push
into
adcl
sbb
push
push
scas
inc
inc
push
int
out
lods
sti
fwait
sub
cs
cmp
mov
call
imul
cmpsl
add
cmc
ret
dec
inc
push
mov
jns
sub
cwtl
xchg
sub
stc
es
inc
scas
mov
ja
pusha
xlat
mov
fstpl
cmc
outsl
xlat
ljmp
sbbb
cmp
push
xchg
loop
into
je
jmp
lock
leave
pop
sub
inc
fisttpl
pop
in
in
bound
data16
xchg
cmpsl
scas
aas
aam
jns
jle
xlat
outsb
add
ljmp
adc
mov
cwtl
repnz
push
into
mov
icebp
mov
cmp
sub
fisubrs
psubsw
xor
js
call
xchg
jecxz
pop
out
in
rorb
movsl
lds
jp
mov
push
mov
push
fnstcw
mov
fldl
testl
pop
mov
cmc
push
pop
outsb
aas
cmp
mov
or
in
fxch
mov
dec
in
jge
call
out
dec
xchg
insl
pushf
push
jnp
or
hlt
mov
pop
mov
imul
mov
fdivrl
js
aam
push
dec
adc
sub
push
std
jmp
mov
outsb
rorb
or
int3
rcrb
push
sbb
jle
daa
xor
mov
push
mov
stos
pop
cmp
inc
dec
scas
jb
out
std
dec
or
pusha
mov
mov
xchg
adc
leave
push
cltd
mov
fdivs
sub
jp
mov
lret
jle
pop
sbb
jge,pt
insb
add
test
sbb
inc
out
out
and
data16
sarb
stos
out
test
ja
loop
cwtl
outsl
shrl
cmp
lds
daa
mov
dec
daa
or
orb
idivl
sub
aam
add
jbe
pop
pop
bound
popa
aas
push
aam
or
push
lds
pop
in
sti
pop
ja
xor
ja
aam
xchg
outsb
out
scas
out
sbb
pop
inc
les
and
and
les
daa
mov
fnstsw
pop
jl
rcrl
sahf
adc
inc
push
mov
cli
dec
lods
mov
fisttpll
xor
mov
mov
sub
xor
loop
outsb
add
es
movsb
gs
fs
mov
jmp
call
int
cmp
mov
add
xchg
push
pop
popa
xchg
dec
inc
int
dec
loop
outsb
or
pop
fcoms
loopne
pop
out
andl
adc
fsts
cmp
sbb
outsl
jle
jo
rcll
popf
lcall
orb
fsubs
mov
jno
in
sbb
test
popa
jmp
in
cmp
push
clc
xor
cltd
or
push
fwait
push
push
sahf
mov
sti
leave
mov
call
repz
outsb
sub
dec
fs
mov
dec
mov
dec
xor
jg
test
push
mov
out
outsb
mov
in
test
imul
add
pop
mov
xor
repz
shlb
adc
mov
push
ret
inc
xor
jg
into
mov
xchg
push
xchg
xor
mov
fs
ud0
test
push
or
lea
and
fbstp
aad
lahf
inc
aas
shll
ficoml
dec
inc
xor
add
xchg
aam
aam
mov
add
dec
sub
mov
cwtl
lods
subb
scas
ret
lcall
sahf
cmc
leave
stos
pop
or
cmp
xchg
adc
sub
mov
rclb
add
icebp
jl
mov
or
mov
inc
lods
aad
loope
iret
add
jnp
lock
dec
or
scas
inc
sub
daa
push
fimull
into
jb
lcall
add
and
lret
xchg
call
aas
push
stos
sti
in
jae
cmp
jbe
sahf
pop
icebp
jae
and
add
ljmp
test
test
sbb
mov
int
ja
pop
cs
test
in
lret
dec
sub
jae
jmp
xchg
insb
add
sbb
leave
push
jnp
imull
adc
push
dec
nop
mov
xor
xchg
clc
pop
in
sahf
jns
rorb
add
inc
jo
mov
cmp
cmc
rorb
push
push
inc
shrb
daa
mov
push
xchg
dec
dec
pop
jp
sub
jbe
push
jbe
cwtl
inc
faddp
in
fsts
sarl
pushf
cli
cmc
lods
nop
ss
xchg
mov
les
leave
xor
lcall
or
mov
addr16
pop
aam
dec
mov
mov
lea
pop
xchg
cltd
cmp
lret
mov
xchg
mov
es
jbe
movsl
pop
stos
inc
jne
pop
imul
xor
push
insl
call
sahf
jmp
xlat
xor
dec
scas
add
xchg
sub
inc
fdivs
push
leave
adc
aaa
popa
arpl
mov
test
inc
div
push
xchg
dec
inc
pushf
jb
add
fcomip
inc
mov
pop
mov
imul
loope
adc
pop
loope
xor
das
cli
dec
inc
add
mov
pop
ficoml
dec
fmuls
mov
lea
sub
fucomip
push
cmc
mov
mov
daa
xor
dec
cltd
xchg
inc
repnz
sti
xchg
xchg
pop
cld
or
stos
mov
mov
repnz
and
js
in
adc
dec
cld
push
pop
movsb
repnz
je
ficoml
cmp
xor
pop
ljmp
pushf
jne
icebp
and
arpl
jecxz
add
cwtl
cmpsl
push
push
sti
push
mov
loop
push
inc
mov
imul
scas
les
jl
xor
cmp
xchg
cmpsb
cmp
lret
mov
repz
enter
pop
out
rclb
sub
movsb
cs
notb
push
imul
aad
scas
pop
test
fadd
cmp
popf
jo
cmp
xor
idivl
cmpsl
loopne
sbb
sbb
notb
and
test
scas
nop
call
inc
popf
imul
push
aas
mov
outsb
sbb
sbb
pop
mov
mov
xor
and
scas
fstl
pop
incl
push
in
or
in
out
std
sub
mov
xchg
lret
ss
jno
push
lcall
adc
arpl
lea
add
je
push
jg
and
pop
sub
js
mul
std
ja
jp
shlb
xor
lret
testl
fwait
xlat
xchg
out
sbb
mov
pop
sub
mov
dec
shll
jge
jne
gs
int3
mov
or
divl
ret
add
add
cld
cmp
jecxz
or
mov
xor
mov
jo
push
mov
inc
dec
clc
adc
mov
add
call
je
test
xchg
outsb
and
fsubrl
sbbl
sub
in
ss
or
imul
in
mov
popf
or
push
mov
xchg
inc
cltd
pop
imulb
lret
neg
test
movsl
mov
cwtl
lods
sbb
out
cmpsl
and
dec
cmp
fldcw
into
and
jns
push
das
pop
sahf
push
lret
mov
jl
in
inc
cltd
and
cmpsl
pushf
ret
outsl
in
xor
and
jecxz
scas
dec
adc
pop
sub
sbb
mov
dec
out
adc
sub
mov
movl
and
push
cmpsb
jbe
push
pop
inc
fs
out
inc
std
lock
push
shll
loopne
jmp
mov
fidivrs
aam
sbb
mov
inc
dec
shll
mov
adc
add
out
sahf
push
and
notb
imul
rcll
psllw
ss
nop
mov
les
pop
das
mov
add
sbb
ret
mov
les
fstps
testb
jmp
loope
ja
jo
mov
add
adc
mov
leave
xor
xlat
inc
decl
stos
jle
fildl
and
fs
imul
cld
lods
inc
xor
push
movsl
push
cmpsl
pop
out
xchg
sub
add
in
adc
jae
push
shrb
sahf
clc
jb
mov
ret
xchg
mov
in
outsl
push
pop
pop
add
sti
mov
ret
mov
or
int
sahf
aam
push
jns
ljmp
es
or
sbbl
push
dec
pop
out
cmp
xor
fwait
xor
sbb
mov
in
add
jmp
push
lock
ja
nop
xor
sbb
mov
mov
dec
ds
int
or
cmp
mov
dec
bound
lds
or
ss
daa
push
adcl
mov
jge
loopne
cmp
popf
adc
add
int3
xchg
xchg
pop
cld
pusha
xchg
or
add
and
test
out
fidivl
xor
jg
sub
sbbb
lods
imul
add
xchg
mov
sub
cmp
dec
push
out
inc
jp
in
sub
stos
imul
fmul
int3
shlb
push
sub
mov
add
jnp
cmp
xor
dec
and
clc
jae
mov
loop
or
dec
dec
mov
out
into
lret
or
jns
andb
icebp
push
add
inc
int
jns
popa
rcrb
ret
mov
mov
push
cmp
cmp
push
xlat
mov
and
jae
and
jae
adc
and
das
addr16
scas
lcall
aaa
pushf
dec
jge
mov
shlb
cmp
out
jnp
push
add
lcall
xlat
inc
negl
aad
jb
add
pop
adc
imul
pop
and
mov
adc
std
cs
jbe
push
jae
cltd
jp
lret
lods
notb
mov
dec
rclb
notb
lret
xchg
xchg
inc
in
fcoml
xor
inc
enter
je
cmp
and
fnstenv
movsl
inc
and
push
jmp
inc
add
mov
dec
loop
ret
sbb
lret
stos
or
fdivrl
xor
aaa
pop
aas
jg
and
xorl
mov
imul
and
cmp
or
xchg
scas
jae
sub
cmp
push
fwait
sub
xchg
xchg
push
dec
js
in
notb
loop
insb
enter
cmovb
xchg
inc
adc
xor
insb
lea
push
or
inc
dec
daa
sub
sbb
adc
inc
jae
pop
pop
dec
test
jb
jmp
subl
dec
pop
mov
xchg
sti
or
enter
shl
push
mov
sbb
mov
inc
mov
mov
push
cmpsl
stos
mov
jne
je
jns
mov
sbb
mov
push
cltd
mov
jb
dec
int3
fmuls
push
ds
push
call
sub
xchg
and
rclb
call
mov
rclb
inc
mov
scas
enter
stc
and
subb
shlb
in
cmp
and
insb
add
sub
mov
inc
setl
repnz
push
add
xchg
leave
dec
and
aad
add
das
divb
jl,pn
stc
scas
and
mov
push
insl
shlb
orb
xor
mov
ret
icebp
inc
adc
rcl
mov
dec
call
add
mov
lods
test
das
js
sarl
push
jno
mov
lods
mov
aaa
jg
push
mov
pop
push
adc
mov
cmpsb
cmpsl
pop
mov
mov
movl
rcl
sub
cmpsl
ds
or
test
or
fstpl
pop
cs
mov
lahf
cmpb
cmc
inc
fcmovbe
popf
mov
pop
repz
push
and
out
and
pushf
push
add
ljmp
sti
stos
sbb
flds
fwait
dec
bound
imul
and
cmp
ja
xor
inc
pop
fcoml
xor
dec
inc
sub
and
sub
sti
repz
jno
iret
cmpl
ljmp
icebp
inc
jl
add
dec
dec
push
in
pop
mov
je
jl
sbb
in
cmpsl
loopne
push
push
movsl
pop
adc
fs
repz
outsl
mov
mov
dec
or
mov
mov
mov
mov
cmp
pusha
adc
xchg
mov
pushf
andl
adc
dec
cmp
mov
xchg
xor
outsl
push
mov
lods
adc
fdiv
cmp
mov
and
mov
in
and
mov
xchg
sub
pop
mov
popl
pop
fadds
xor
lea
xor
ljmp
cwtl
test
push
cmp
shl
jmp
add
aaa
xchg
cmp
leave
push
cmpsl
jl
sbb
dec
sbb
inc
ret
icebp
mov
imul
dec
jnp
add
sbb
sbb
push
leave
jl
dec
push
jle
enter
mov
push
js
lret
stos
pop
adc
push
jae
inc
js
popf
inc
lret
pop
inc
adc
in
push
repnz
pop
xor
pop
jne
xchg
pop
fsubrs
cld
xchg
rorb
imul
sub
outsb
js
sbb
jb
mov
repnz
sub
ja
push
xor
and
xchg
add
push
push
ret
popf
jae
sbb
mov
xor
push
push
and
bound
call
add
xchg
outsb
xor
cmp
pop
push
popa
add
ds
mov
xor
fs
inc
inc
je
xchg
xor
jo
and
into
fs
push
dec
pop
dec
mov
test
ds
mov
imul
scas
les
mov
outsl
adc
ss
lcall
xchg
xchg
jl
mov
xor
jecxz
test
std
sub
jb
sahf
ds
repz
stc
nop
es
sbb
test
mov
xor
es
cmpsl
dec
ss
adc
leave
rcrb
mov
ljmp
cmp
mov
inc
fwait
inc
cmp
jb
jbe
mov
and
xchg
jecxz
loopne
and
dec
cmp
orb
lea
out
shrl
dec
xchg
xor
loope
lret
loopne
ds
in
insl
pushf
hlt
adc
mov
adc
adc
mov
mov
pop
sub
loope
xchg
gs
xchg
mov
lds
cli
hlt
sbb
mov
cmp
ficoms
mov
in
outsl
pop
or
mov
aaa
push
push
xor
arpl
das
pop
xchg
adc
inc
and
fidivrl
mov
xor
in
popa
lods
aam
mov
push
popf
lret
jbe
lods
cmpsl
out
test
and
sub
and
cli
bnd
gs
imul
jge
shl
std
or
cs
pop
les
int
xchg
mov
sbb
mov
and
sti
stos
test
andb
add
addr16
add
push
dec
loope
sti
adc
movsb
pop
mov
ljmp
pop
insl
sbbl
sahf
xor
push
dec
inc
push
movsl
or
and
es
cmp
addr16
add
mov
fcmovnb
rorl
sub
cld
lret
out
subl
and
jo
or
sbb
sub
out
inc
push
hlt
lea
adc
call
cli
push
lds
fsubrs
and
inc
cwtl
stos
jmp
push
insb
add
mov
das
cmp
xchg
test
xchg
dec
pop
inc
or
shlb
mov
in
ja
lods
sahf
repz
cmc
jle
das
adc
enter
pop
add
xchg
add
xor
daa
or
sub
movsb
repnz
mov
adcl
outsl
pusha
pop
mov
fiaddl
pop
adc
fstpl
divl
test
in
jg
enter
into
insb
daa
jmp
les
jmp
in
add
or
add
out
dec
pop
dec
fsubrl
cli
rorb
pop
add
jp
subb
gs
dec
pop
daa
adc
sahf
mov
sub
pop
ret
lcall
sbbl
xchg
jle
lahf
hlt
pop
ror
repnz
pop
loope
dec
cmpsb
jge
repnz
jecxz
mov
xchg
adc
mov
jle
aam
xor
fsubrl
dec
fldl
loope
push
add
jo
xchg
mov
nop
mov
push
aas
push
mov
jge
or
xchg
fidivl
mov
push
jle
add
xchg
loop
cmp
js
loope
sub
mov
int
jne
mov
jae
xlat
or
popf
gs
imul
dec
xchg
sub
xchg
mov
mov
pop
inc
xchg
ror
and
dec
int3
xor
stos
push
sbbl
push
gs
mov
in
sbb
pop
and
dec
adc
mov
das
roll
or
mov
std
inc
inc
fiaddl
out
out
xchg
imul
xchg
xchg
fsubrs
sbb
mov
call
aaa
std
sub
pop
push
xchg
mov
sahf
je
adc
push
push
jne
outsb
icebp
hlt
sub
or
mov
mov
xor
inc
dec
out
add
aaa
les
sbb
jp
xchg
sub
scas
dec
dec
loope
inc
pushf
dec
loop,pn
popa
push
and
mov
and
mov
inc
inc
add
bswap
or
mov
push
flds
imul
cmpsb
dec
fistps
mov
fnstenv
push
push
repnz
xchg
test
cmp
push
aaa
dec
loop
pop
fnsave
add
fwait
pop
addr16
lods
xchg
sub
push
test
out
pop
pop
insl
ja
jae
mov
or
mov
or
mov
adcl
nop
daa
mov
sub
icebp
in
lods
xlat
shll
inc
lea
dec
adc
ljmp
cmc
push
movl
fadd
loopne
popf
inc
out
out
adc
and
mov
test
leave
push
add
js
test
push
fsts
add
test
xchg
xchg
adc
xchg
ret
test
jb
inc
mov
push
cwtl
add
not
adcl
shlb
mov
rcrl
arpl
fisubrs
cwtl
mov
in
loope
ja
insl
sub
popf
imul
jnp
mov
mov
scas
mov
jae
adcl
xlat
cmpsl
or
js
gs
pop
leave
pop
mov
icebp
pop
aaa
lods
dec
or
cmp
pop
mov
pop
mull
push
mov
mov
or
or
ret
mov
ret
sbb
jg
dec
lea
icebp
sbb
xchg
push
ljmp
insb
jnp
rcl
repnz
out
inc
mov
jl
enter
mov
rcll
iret
jg
xchg
enter
and
pop
gs
jmp
ret
jmp
lret
enter
pop
push
mov
lea
xor
and
xor
lock
scas
inc
leave
jl
sti
popa
pop
jmp
fmull
bound
das
mov
inc
dec
mov
push
gs
xchg
ss
push
sbb
insl
sub
enter
pop
jg
sub
add
xlat
shlb
or
dec
popa
sub
inc
ret
pop
movsb
popf
xor
call
xchg
dec
insl
into
pop
fcoml
fs
int
jne
or
sti
mov
mov
push
lret
data16
loopne
orl
lods
pushf
sub
daa
inc
call
lret
fidivrl
outsb
inc
popa
ds
mov
in
or
xor
pushl
pop
adc
mov
jmp
mov
shl
pop
push
inc
mov
in
fcom
push
out
jmp
jae
shll
enter
dec
movsl
and
pop
outsb
in
push
jno
test
ljmp
fwait
mov
mov
add
std
aam
jge
fsubl
sub
rcrl
dec
mov
push
and
insl
dec
mov
mov
test
or
mov
mov
rclb
dec
cwtl
loopne
mov
mov
loope
jg
xchg
cwtl
stos
lds
lret
and
ds
inc
push
mov
sub
jnp
outsl
cmp
xchg
stos
ret
pop
mov
xchg
adc
inc
popa
mov
push
add
test
adc
adc
sbb
jl
pop
mov
shlb
mov
hlt
mov
mov
pop
xchg
clc
testb
and
mov
mov
fdivs
push
shrb
hlt
pop
xchg
sahf
sbbl
and
pop
xchg
stos
ljmp
jl
lods
icebp
sahf
gs
push
push
hlt
or
outsl
repnz
mov
mov
mov
xchg
arpl
enter
xchg
icebp
es
inc
gs
dec
pop
popa
inc
fildl
add
mov
mov
cmp
jecxz
fs
bound
mov
dec
dec
and
iret
and
cmc
and
fmull
leave
sarl
pop
notb
rdmsr
test
in
jne
jne
mov
mov
mov
push
test
pop
and
nop
fs
stc
cltd
dec
and
xor
fldt
stos
adc
test
fistps
enter
das
fwait
xchg
xor
pop
inc
push
and
jmp
inc
out
xchg
or
stos
out
push
les
mov
addr16
test
orb
mov
dec
bnd
dec
out
nop
add
insb
sbb
adc
jp
xchg
jns
daa
sbb
movsb
push
add
or
dec
pop
js
dec
shl
mov
subl
popa
cmp
jns
jg
mov
xchg
add
sub
leave
jnp
icebp
mov
popf
sub
iret
and
or
flds
idivl
xor
andb
mov
aas
jbe
jb
mull
test
repnz
push
push
roll
insb
in
dec
xlat
jmp
dec
in
jo
push
push
rcrb
jp
data16
loop
ret
cli
subb
fmulp
jns
jne
std
xor
test
xchg
imull
xchg
pop
sahf
ret
add
pushf
cli
pop
pop
in
out
adc
dec
repnz
daa
lea
cmp
mov
jb
addr16
stos
cltd
int3
jle
xchg
lods
aam
sbb
mov
push
cmp
out
popf
scas
and
xlat
mov
mov
mov
xchg
clc
aad
movsl
mov
aaa
mov
dec
mov
shrl
mov
jne
rolb
pavgw
aaa
or
xchg
pop
xchg
mov
ror
inc
fnsave
inc
gs
jno
cld
enter
test
cmpsl
push
xchg
ss
repz
jp
ret
push
add
push
pop
sbb
cmpsl
dec
dec
inc
sbb
in
xchg
iret
addb
popa
mov
imul
mov
je
fstl
dec
imul
and
andb
push
outsl
fldz
pushf
mov
int
enter
dec
icebp
imul
notb
sahf
fwait
ljmp
pop
je
stc
aaa
aam
jb
sbb
stos
cmpsl
adc
in
scas
icebp
cmpb
xchg
and
je
std
jnp
push
mov
xchg
mov
pop
xchg
scas
and
add
jl
cltd
das
int
jns
ja
cwtl
pop
push
jne
in
fcompl
lret
xchg
leave
ss
out
adc
jmp
aam
sbb
ret
adc
pop
into
cmp
in
ret
fidivl
into
xchg
xor
or
ds
mov
sbb
dec
pop
mov
negb
int3
rcl
dec
call
dec
mov
clc
add
std
je
sub
test
sbb
sarl
out
pop
mov
jecxz
stos
negl
fldl
fucomi
ja
outsl
popf
ljmp
jne
mov
pushf
aaa
jge
orl
dec
pop
les
popa
clc
in
cmp
lods
inc
mov
push
ret
cmp
lahf
fsubrp
fsubs
xor
dec
andb
mul
dec
and
jmp
sub
mov
add
sub
subl
push
adc
movsb
les
cltd
insb
fsub
imul
adc
sub
ret
imul
mov
fstpt
xchg
sbb
nop
lock
xchg
cmp
jno
loopne
add
dec
add
stos
daa
fists
mov
mov
mov
adc
daa
fdivs
fsubp
subl
iret
and
scas
lea
fbld
ljmp
call
lret
dec
mov
shl
xchg
fcomps
mov
push
in
mov
mov
gs
out
mov
push
mov
outsl
inc
sahf
ja
test
dec
test
push
sbb
inc
stos
das
pop
andb
sub
popa
lock
push
arpl
or
add
pop
mov
pop
pop
xor
cld
push
xor
pop
fidivs
adc
jmp
fisubrl
std
mov
inc
aaa
add
rcll
in
pop
mov
mov
cmpsl
fisttpl
and
cmp
dec
xor
icebp
hlt
pop
jmp
lret
mov
lret
adc
mov
and
ret
sbb
lods
pusha
mov
cmpb
cmp
and
or
clc
pop
leave
mov
hlt
enter
inc
inc
loopne
mov
adc
mov
dec
dec
mov
or
cmpsl
push
jne
xor
mov
cmp
cltd
jbe
out
pop
orb
dec
repnz
out
mov
lret
xor
fildl
bound
dec
sbb
insl
sbb
les
xchg
cmpsl
lret
lock
sbb
js
sbb
lods
fcom
gs
addr16
xlat
addl
and
dec
cld
xchg
jge
stos
mov
fiadds
mov
sbb
js
mov
push
and
inc
lcall
outsb
adc
scas
mov
outsb
iret
jae
rcrb
xchg
add
jbe
sti
cmpsl
or
push
and
mov
test
repz
jns
cmp
lods
popa
decb
lahf
xor
push
iret
pop
ja
in
test
push
push
scas
push
jmp
jmp
cld
lods
outsl
xor
flds
jmp
mov
mov
inc
xchg
stc
xchg
push
call
iret
add
cmp
je
sbb
sub
dec
test
push
xchg
push
and
fucomp
rorl
cmp
negl
sbb
sbb
push
mov
xchg
shlb
mov
mov
xchg
inc
pop
enter
push
inc
sub
xchg
inc
rolb
add
sub
enter
jl
mov
jecxz
or
jns
lods
shl
push
data16
nop
dec
in
pop
ljmp
bnd
xor
xor
xchg
xadd
add
fcompl
xor
push
cwtl
call
xorl
cs
jl
inc
dec
pop
imul
mov
lret
outsb
insb
imulb
adc
dec
pop
mov
popf
fdivrs
stc
jle,pt
das
sahf
pop
filds
jp
clc
out
push
int
addr16
fcmovu
inc
or
lea
mov
sti
test
inc
inc
addr16
pusha
xchg
or
and
mov
loopne
int
dec
mov
ficomps
mov
dec
test
sbb
or
decb
add
cmpb
lahf
dec
pop
xchg
pop
or
cmp
jle
mov
lock
loop
fstpl
lods
hlt
push
fwait
cmc
mov
mov
scas
aad
test
or
xlat
mov
xchg
addr16
cld
ret
loop
leave
int
aam
lock
and
push
popa
xchg
add
and
jg
stos
cmp
or
push
das
je
mov
xchg
xor
jbe
cld
inc
xchg
mov
sbb
lret
mov
ficoml
mov
sub
or
push
inc
repnz
inc
jmp
lret
cmp
push
pop
inc
sarl
mov
stos
data16
movb
cmpsb
aam
ffreep
scas
cwtl
das
in
pop
adc
into
ret
pop
mov
fidivrs
jae
mov
dec
xchg
inc
and
lods
fidivrs
test
int
mov
lea
xor
sbb
es
mov
popa
push
add
sbb
sub
sbbb
mov
imul
ror
jg
test
scas
gs
sbb
mov
shlb
mov
jge
fists
or
js
xor
pushf
arpl
push
lock
popf
xchg
jl
sti
sbb
inc
mov
jecxz
mov
popf
push
pop
sbb
or
mov
enter
push
push
adc
popf
xlat
mov
imul
push
pop
movsl
pop
ljmp
insl
xor
movups
add
push
jb
mov
es
in
mov
les
stc
pop
add
ds
pushf
jb
jbe
lds
and
rcl
aad
or
cmp
sbb
lcall
xor
xchg
bound
loope
div
adc
cltd
push
mov
dec
dec
outsb
xchg
rol
inc
mov
mov
jecxz
or
cld
shll
sub
add
das
mov
dec
adc
cmp
inc
inc
pop
bound
fcoml
outsl
outsb
fidivrl
fdivl
movsb
aam
jbe
add
mov
je
leave
pushf
subb
jbe
mov
ficomps
movl
pop
ror
in
xlat
sbb
mov
mov
xchg
loopne
cmp
mov
sub
xchg
daa
mov
sti
hlt
adc
push
je
jle
in
mov
dec
push
test
out
les
mov
inc
xlat
add
mov
mov
add
dec
dec
xchg
sbb
in
loop
and
mov
adc
movl
fs
cwtl
fisubl
mov
jne
add
mov
iret
mov
mov
outsl
movsb
jne
pop
pop
sbb
pop
insb
and
mov
fsts
and
mov
int
mov
push
decb
and
shrb
xor
sub
int3
ficoms
and
jnp
pop
mov
popf
out
mov
cld
jns
cld
push
outsl
adc
push
dec
test
sbb
insl
fnsave
jae
sub
daa
std
xchg
push
cli
mov
xlat
mov
std
sbb
addb
sub
adc
imul
cld
xor
sub
andl
add
sub
sub
ss
push
xchg
jl
push
mov
xor
sub
shrl
mov
mov
or
lahf
mov
lods
fs
mov
out
test
aad
sahf
enter
lea
lock
stos
mov
imul
sbb
leave
dec
fcoml
in
fsubrl
mov
es
idivl
sub
lods
xorb
gs
nop
sub
shlb
dec
add
cltd
sbb
adc
fwait
mov
jle
dec
gs
js
sbb
pop
sbb
roll
jmp
repnz
push
dec
adc
movsl
pop
dec
cmp
mov
das
cltd
insb
pop
cmc
ss
dec
addr16
loop
outsl
aam
test
mov
mov
fidivs
add
mov
rcrb
repnz
jecxz
in
push
mov
inc
cmpsb
push
add
js
ljmp
adc
jo
in
andb
rclb
push
mov
or
sar
insb
fwait
pop
pop
pop
repz
mov
into
fdivrl
sar
out
push
repz
lock
lahf
scas
xchg
sbb
call
cld
outsl
test
lods
push
cli
das
sub
pushf
adc
inc
outsl
ret
sub
in
insl
aam
pop
push
sbb
mov
mov
imul
sub
mov
mov
fwait
ret
and
arpl
lods
stc
je
mov
or
into
shlb
jecxz
add
jns
jle
mov
call
mov
sub
mov
ja
fucomp
jb
sub
int
rcrb
adc
mov
sarb
into
scas
insl
mov
push
es
adc
inc
inc
mov
jecxz
daa
leave
pop
aad
ja
imul
push
sub
outsl
iret
popa
int
push
sti
ljmp
orl
jmp
in
sahf
jns
and
xor
jb
popf
cmp
jne
rclb
xchg
or
mov
sub
popa
jle
stos
add
fmull
push
sti
or
test
sbb
fcmovnb
inc
add
pop
pop
mov
ss
scas
test
test
lock
dec
aaa
movsl
pop
cmp
xor
outsl
cmp
jmp
loop
sub
or
ss
push
sti
lods
push
call
int
outsl
inc
pop
das
aad
aas
mov
sbb
sbb
jnp
mov
bound
dec
adc
lret
mov
cmp
aam
pop
sahf
add
cmp
fnstenv
rcr
cmp
out
pop
inc
pop
and
test
insl
xchg
cld
ret
dec
add
xchg
xor
lds
cli
push
xor
pop
add
fwait
jnp
add
test
mov
imul
or
adc
pop
lods
xor
insl
test
addr16
push
lcall
or
mov
inc
jnp
fucomp
push
in
dec
mov
jae
cmpsl
xchg
mov
jmp
pop
adc
jl
imul
mov
stos
adc
jo
jle
push
je
xor
sub
jbe
sahf
mov
pop
mov
loope
incb
xor
testl
aaa
mov
cs
pop
mov
xchg
xor
shlb
cmpsb
dec
lds
jle
and
mov
cs
mov
roll
jnp
jnp
into
aad
popf
sbb
fdivrs
lret
rorl
and
lods
push
lock
cwtl
push
push
pop
mov
subl
add
mov
dec
aad
icebp
push
xor
popa
add
pusha
outsl
cmp
mov
les
aaa
inc
and
and
sbb
ljmp
ljmp
rorl
ret
out
insb
push
jno
or
outsl
mov
test
scas
pop
repnz
sahf
or
push
adc
shld
sbb
or
cmp
jbe
cmp
and
mov
clc
pop
lods
push
test
cmpsb
repz
lods
jmp
fs
push
ljmp
adc
cmp
cmp
pop
cmp
inc
jbe
std
inc
xor
cwtl
stos
sbb
ljmp
ret
push
out
sbb
push
mov
jne
insb
jmp
sbb
jne
das
pop
inc
push
mov
in
fsubs
mov
sub
rolb
or
mov
popa
xorl
xor
mov
ljmp
adc
lea
ret
jg
inc
jno
sub
inc
fisttpll
scas
sub
notb
fisubrl
xor
jo
jge
add
xor
mov
int3
daa
stos
shrb
mov
lret
fwait
sub
pop
mov
mov
cmp
xchg
lds
xchg
xor
adcb
call
push
out
shrl
jl
inc
mov
mov
cs
jge
es
lock
dec
lods
mov
popf
enter
insl
add
in
test
movsb
lahf
mov
mov
int3
pushf
lahf
int3
lds
outsl
rcll
lock
pop
cmpsl
insb
mov
fcmovne
fs
popf
xor
das
mov
dec
addr16
stos
mov
pop
cmp
ds
mov
jae
inc
mov
sub
or
mov
aaa
lret
jbe
dec
mov
leave
in
sbb
jns
es
lret
leave
dec
ret
push
repz
movsb
int3
nop
xlat
add
xchg
cmp
push
sbb
nop
hlt
mov
jg
adc
xchg
dec
push
or
sub
cltd
testb
rorl
rcrb
int3
arpl
lret
frstor
cmpsb
loopne
sub
sub
rcrb
jbe
test
cmp
cmpsb
test
cmp
out
into
sub
out
xor
stos
xchg
xchg
sub
push
mov
xor
mov
sqrtps
xchg
ljmp
fs
pop
cmp
insl
adc
loope
in
into
lcall
loopne
lock
loope
lret
push
mov
or
cmp
hlt
aad
jge
sbb
fwait
dec
stc
sbb
movsl
jnp
mov
mov
pop
dec
insb
lods
push
fidivrs
xorl
pushf
cmp
and
cmp
adc
aas
jle
movsb
iret
fidivrl
and
xor
and
out
aas
enter
xchg
sbb
insl
icebp
sbb
inc
mov
addr16
inc
int
jl
push
mov
mov
mov
lea
rcrb
xor
fsubrl
mov
xor
std
sub
incb
mov
scas
sbbb
and
test
repz
insb
ret
add
scas
dec
or
shrl
jle
fs
stc
dec
hlt
je
jne
sti
push
jno
outsl
sbb
hlt
enter
cmp
sbb
sub
sbb
cmp
je
addr16
jle
pop
and
cli
ja
ret
jno
out
xchg
dec
adc
pop
test
mov
mov
jae
cltd
xlat
or
test
push
cwtl
and
rcrl
fwait
jbe
mov
add
mov
psrld
sbb
dec
and
in
idivb
mov
dec
and
inc
and
pop
dec
rcl
push
add
xor
loop
push
insb
cs
jb
push
cltd
xchg
add
es
fcmovu
filds
subl
lcall
sahf
xor
add
out
mov
and
xchg
jl
inc
add
ja
mov
mov
mov
xchg
xor
icebp
mov
cmp
mov
and
shlb
push
scas
adc
or
insb
push
loopne
in
cmc
repz
call
adc
inc
mov
cmp
pop
data16
mov
push
sub
inc
lcall
stos
and
loopne
jne
lret
mov
sbb
add
push
push
add
adc
sahf
popf
movsb
mov
jmp
inc
inc
ljmp
das
inc
push
shr
xchg
adc
lret
stos
add
pushf
outsl
dec
pop
mov
pop
push
push
les
aaa
jg
xor
inc
xchg
mov
or
xor
push
es
fisubs
hlt
test
out
int
add
cmp
outsb
xchg
mov
pop
jecxz
nop
daa
loop
add
bound
js
mov
jl
add
pop
push
push
mov
lret
nop
sbb
fsubl
mov
jo
ret
push
xchg
pop
js
mov
jmp
xchg
int3
mov
shl
inc
jmp
push
dec
or
xchg
hlt
pushf
xor
int
and
mov
rcr
aam
inc
push
test
push
fsubrs
jl
stc
push
sub
pushf
push
cmc
cmc
iret
int
jbe
aaa
mov
adc
das
mov
out
test
pop
and
jge
mov
add
cmp
and
dec
int
lds
jge
jns
lret
pop
ljmp
push
bound
jns
mov
enter
ret
aam
movsb
lods
sub
or
jmp
gs
fcompl
scas
aas
lret
pop
dec
inc
fstl
xchg
xor
arpl
jns
jno
inc
xchg
lret
arpl
mov
cli
sbb
ljmp
mov
pop
out
loop
cmp
add
sahf
lcall
fildll
cmc
cmp
loop
jno
push
negl
mov
sbb
mov
fisubs
push
lods
test
and
xchg
mov
add
scas
push
or
xorb
stos
sub
mov
ret
loop
aam
roll
dec
mov
iret
jecxz
ret
mov
outsl
inc
les
nop
testb
mov
jecxz
roll
xor
rcrb
mov
and
jp
test
add
mov
inc
push
dec
daa
popf
or
jo
outsb
mov
dec
push
sub
jns
jnp
mov
push
jns
call
pop
sbb
mov
jl
xlat
or
insb
add
imul
in
sbb
add
out
insl
movsl
xchg
adc
pop
jnp
lret
jbe
sbb
dec
movb
cmc
fwait
subl
hlt
sub
sbb
lcall
sbb
adc
adc
movsb
xchg
incl
das
xchg
shlb
data16
stos
push
fs
shll
xor
pmulhuw
xlat
sti
xchg
or
xor
pop
dec
loope
insl
dec
mov
cli
push
test
faddl
lods
xchg
xor
mov
mov
sub
mov
pop
inc
in
xchg
mov
imul
dec
movl
lock
les
jle
in
imul
cmp
fisubrs
leave
mov
push
jnp
xor
sahf
test
mov
sub
sbb
imul
sbb
xor
dec
add
cwtl
mov
mov
pusha
int
stos
rorl
stos
insl
imul
cwtl
mov
inc
cmpsb
cmp
jl
pop
mov
dec
mov
dec
lcall
ljmp
mov
xchg
sub
daa
in
es
sub
push
push
shlb
in
cmp
adc
dec
roll
dec
mov
clc
push
in
sarb
adc
repnz
add
cltd
and
and
arpl
int
xchg
ljmp
sbb
or
idivl
and
adc
loope
pop
push
enter
data16
push
sbb
popa
jl
push
jb
notb
sbb
lcall
jmp
scas
inc
rorb
push
inc
dec
lahf
xor
xchg
cmpb
mov
orl
pop
or
movd
loop
pop
cmp
and
or
cmpsb
sbb
addl
push
mov
add
and
jae
adc
cld
imul
inc
mov
inc
adc
fidivrl
imul
push
add
fiaddl
es
cmp
rorl
mov
cmp
in
push
imul
inc
outsl
sbb
shll
cli
cmpsl
hlt
jg
adc
dec
lods
jae
or
adc
add
fisubrl
ficoml
mov
add
push
sub
pop
mov
pusha
addr16
sub
xor
js
loope
mov
jl
fs
pop
xor
in
mov
pop
push
outsb
fdivs
daa
mov
jbe
es
ljmp
sarl
pushf
scas
imul
inc
iret
jne
jge
aaa
notl
lea
out
xchg
add
inc
icebp
jmp
or
pop
lret
data16
or
addr16
push
mov
js
xchg
cmp
jbe
push
and
push
adc
icebp
sbb
push
xchg
das
inc
insl
sub
lock
fldenv
jmp
repnz
in
cmp
cmc
mov
subl
sub
nop
sub
or
sbb
dec
scas
data16
xchg
mov
subb
cmp
nop
aad
aad
std
ss
sub
fmull
and
cmpsl
fisubrs
cli
sbb
xor
xor
cli
cmp
jae
or
or
xchg
jmp
jmp
mov
adc
rorl
jecxz
pop
pop
push
addr16
js
sub
mov
mov
mov
int
stc
rcr
jbe
xchg
int3
mov
daa
es
sti
fdivrl
fdivrl
fisubs
int3
xchg
std
movsb
faddl
inc
jo,pn
jnp
movsb
xchg
mov
mov
dec
sub
lods
mov
lahf
pop
data16
ds
comiss
pop
ss
sub
dec
loop
cs
sahf
inc
data16
cmp
xchg
or
pop
scas
pop
imulb
xor
mov
ficompl
xor
mov
pop
rorb
sub
xchg
mov
lret
fmulp
or
pushf
xor
sbb
cli
mov
sbb
xchg
pop
pop
inc
push
dec
negb
mov
add
shlb
lock
inc
lods
cmp
xor
pop
sbbb
xchg
add
lea
add
scas
inc
dec
in
xchg
lds
outsl
add
xor
mov
dec
push
mov
fcomp
adc
mov
out
push
mov
adc
pop
add
movsl
cmp
rcrb
js
and
cltd
xchg
sub
cmp
mov
inc
mov
insl
rcll
pusha
inc
push
imul
lret
frndint
sub
dec
xchg
jp,pn
cmp
cmpsl
call
pop
lahf
or
popf
bound
and
mov
cvtps2pd
mov
aas
ret
xlat
push
jbe
lahf
loopne
rcll
cmp
lds
scas
cmc
enter
inc
lods
inc
mov
inc
int3
and
fisttpl
dec
jb
add
pop
ret
test
xchg
icebp
jnp
and
cmpl
cwtl
cmpsl
cmp
lds
cmpl
cmpsb
inc
fwait
push
imul
adc
das
repnz
test
jno
jnp
add
stc
xchg
lods
inc
sahf
scas
jb
sbb
jno
sahf
push
mov
xchg
lret
cli
stos
inc
sub
sbb
ljmp
mov
dec
lret
adc
pop
aas
adc
sub
stos
sub
dec
sbb
aam
cmpsb
popa
jb
dec
push
es
fisubs
stos
ljmp
out
test
jge
rorl
dec
push
daa
in
mov
and
popa
clc
js
and
mov
fcoms
mov
aad
ret
in
dec
nop
jnp
add
test
dec
jmp
mov
inc
pop
fsubrs
lcall
gs
sbb
mov
mov
adcl
jp
dec
fs
lret
nop
daa
inc
mov
mov
call
pop
sub
imul
mov
ds
bound
adc
and
mov
inc
adc
sbb
adc
pop
add
call
dec
xchg
outsb
jnp
xor
popf
xor
pop
adc
fadd
jns
je
and
mov
mov
add
cmpsb
mov
pop
movsl
popa
rcrl
and
pop
inc
push
or
stos
cwtl
addl
cs
lret
incb
out
into
xor
ljmp
add
pop
pop
notl
xchg
movsl
mov
inc
push
push
data16
push
sahf
data16
mov
pop
mov
inc
leave
test
test
adc
xchg
cmp
push
and
dec
dec
icebp
sti
jmp
adc
movsb
pop
cmpb
xchg
adc
lcall
adc
lods
fsubl
mov
movl
dec
mov
sub
insl
mov
pushf
jecxz
loop
mov
or
sarb
add
jp
push
pop
popf
lods
aad
aam
dec
mov
sbb
aam
lds
cmpsl
fistps
jle
test
leave
and
mov
test
ljmp
sub
jne
sahf
jle
add
clc
sbb
cmc
inc
maskmovq
xchg
sub
jge
adc
cwtl
and
or
inc
and
in
insb
in
test
or
ss
lock
daa
enter
lock
stc
xchg
sti
mov
mov
sub
nop
iret
dec
sbb
lock
pop
dec
arpl
xchg
outsl
loopne
push
and
sub
dec
mov
push
adcb
rcrl
in
inc
ss
add
adc
mov
dec
push
mov
jp
test
or
fstps
cmp
mov
add
leave
stos
cmpsl
into
loop
sbb
xchg
aam
lcall
cmp
ja
outsb
movsb
cmp
fwait
aaa
into
lret
inc
aas
mov
addr16
in
cwtl
adc
and
mov
mov
adc
cltd
stos
sti
dec
inc
faddl
add
movsl
arpl
stc
mov
aad
pop
and
cmp
jecxz
dec
adc
jno
sub
cs
inc
nop
and
in
or
xchg
cs
aam
jg
sub
xchg
sub
mov
test
sub
fwait
cli
mov
call
xchg
push
fildl
cmc
jecxz
mov
fnstenv
stos
lds
fyl2xp1
nop
or
scas
xor
mov
pop
xlat
xor
mov
jo
cmp
cmc
test
inc
sbb
push
or
cmpsb
ficomps
dec
add
in
pop
mov
xor
or
mov
dec
es
pushf
push
cs
add
es
dec
sbb
pop
cmpsl
pop
call
or
mov
ja
inc
sbb
dec
shrb
jne
cmp
cld
pop
mov
cmpl
mov
sahf
jnp
rclb
pushf
cli
push
adc
jl
scas
scas
sbb
mov
xchg
xor
adc
inc
cmp
dec
outsb
ljmp
insl
inc
mov
repz
dec
call
adc
cltd
mov
adc
pusha
addl
scas
je
push
xchg
stos
loop
in
mov
mov
jo
inc
jno
sbb
rolb
push
mov
dec
dec
or
jb
aam
mov
ret
sub
or
scas
inc
mov
push
pushf
cmpb
mov
push
ljmp
jno
ret
insl
imul
lods
jo
aas
mov
aam
rolb
sbb
lahf
xchg
mov
test
out
add
and
push
loope
push
jo
pop
jmp
call
jo
movsb
lcall
and
fisubl
mov
loop
push
rolb
push
add
pop
xor
mov
ret
insb
sbb
leave
ror
iret
ss
aaa
gs
mov
adc
mov
mov
int3
arpl
mov
mov
mov
jbe
sub
xor
jge
es
push
popf
stc
fdivl
jge
aam
pop
imul
jecxz
xchg
pop
enter
xor
cmp
ret
imul
mov
lret
jo
pop
jnp
ss
lahf
xor
fidivl
gs
decl
repnz
loope
movsl
popa
into
gs
sub
xor
data16
xor
leave
jno
orb
push
mov
call
jne
jb
pop
cwtl
loopne
out
jl
lcall
in
das
xchg
nop
dec
int3
sub
xor
xchg
stos
scas
aad
movl
inc
sbb
adcl
stos
cltd
adc
jmp
bound
cmp
in
pop
push
rcr
mov
xchg
and
mov
add
and
xchg
and
pop
push
das
push
cmp
rclb
mov
mov
mov
shrl
mov
jp
mov
data16
call
testb
adc
mov
mov
movsl
mov
jmp
int
mov
mov
push
push
sub
mov
cli
push
jecxz
inc
and
jl
popf
bound
outsl
adc
push
pushf
pop
or
push
insl
xor
stos
mov
mov
jl
jbe
pop
cltd
inc
data16
stos
dec
lea
aad
stos
lcall
dec
mov
fs
in
test
push
xchg
scas
mov
push
call
mov
rcr
repz
cltd
imulb
sub
pop
jb
leave
mov
scas
cs
pusha
orb
dec
dec
xor
xlat
inc
arpl
cmp
ss
movsb
xor
lea
stc
jmp
mov
jo
mov
jecxz
popf
jp
inc
xor
push
adcb
and
dec
pop
ja
ret
and
lods
test
fdivrl
pop
and
cmpsb
icebp
mov
insl
dec
ds
test
mov
sub
mov
iret
push
fnstenv
cmpl
in
xlat
sbb
loope
mov
es
fldenv
arpl
pop
aam
jmp
xor
icebp
test
fs
cmp
and
jb
ret
pop
cs
mov
jno
adcb
xchg
and
movb
cmc
sub
or
ret
or
pop
jmp
adc
lret
mov
or
decl
adcb
sbb
mov
mov
add
std
les
xor
es
popa
loop
rorb
clc
ja
out
xor
movsb
jmp
outsb
or
shl
fwait
aas
jge
in
dec
fiadds
test
dec
fistps
mov
inc
out
xor
in
shrl
jge
mov
mov
adc
in
dec
mul
int3
arpl
mov
outsl
das
xor
in
inc
pop
mov
fisttpll
mov
lea
mov
arpl
sub
inc
divl
outsl
dec
adc
add
mov
jae
fsubrs
pop
fmull
loop
mov
push
push
jb
jae
ja
lods
inc
push
fistl
gs
es
aas
and
pusha
xchg
jns
loop
lret
cmpsb
push
mov
loope
xor
xchg
add
xor
mov
scas
adc
lea
adc
repnz
icebp
or
js,pn
pop
pop
ss
inc
mov
jmp
pop
lahf
test
cmp
out
shl
jp
adc
cmp
cmp
popa
lock
xor
jmp
nop
fucomp
lods
mov
sub
arpl
adc
xchg
jo
push
cmpsb
das
lret
jo
cmc
or
outsb
cmp
les
jmp
xlat
xor
loop
clc
push
imul
std
fistl
bound
hlt
add
jb
inc
sub
cmp
aaa
xchg
loope
movsb
movsl
xor
cmpsb
ret
pop
lods
fwait
sbb
jae
jo
addr16
loope
cmpsl
stos
mov
mov
cmp
mov
stc
jl
xchg
negb
xor
adc
pop
push
sbbb
mov
mov
mov
mov
sub
mov
das
xor
inc
xchg
xor
or
pop
mov
mov
sub
test
jge
jle
and
jbe
out
sub
pop
mov
insb
aaa
adc
mov
pop
insl
es
mov
hlt
into
push
adcl
mov
mov
pop
fiadds
sbb
add
loop
or
add
push
fbstp
test
and
mov
and
mov
xor
sub
mov
inc
mov
jno
sbb
jno
jb
sub
clc
or
lock
push
pop
pop
or
jbe
lods
pop
or
rorl
and
lea
add
iret
pop
hlt
add
pop
mov
ret
mov
xchg
adc
push
call
loopne
xchg
js
cmovge
jge
inc
scas
sbb
pop
xorb
clc
xchg
jge
xor
loop
fldl
ficompl
scas
xchg
jecxz
inc
push
inc
adc
insb
inc
sub
pop
sub
pop
inc
sub
push
sub
test
xor
jg
test
fldt
in
ss
pop
aaa
mov
test
mov
and
fadds
adc
inc
xchg
in
sti
add
daa
scas
dec
and
mov
ret
ds
and
mov
dec
add
xchg
mov
jmp
in
mov
cli
mov
add
sbb
pop
fdivr
xchg
push
cmp
scas
ljmp
inc
push
pop
out
out
aas
sbb
pop
adc
sub
lock
jno
rclb
cmp
mov
in
jns
loopne
pop
sub
cmc
inc
hlt
mov
lcall
jne
es
xchg
addr16
ljmp
jno
adc
ss
fbstp
sub
sahf
push
cld
mov
dec
mov
out
sbb
xchg
out
jecxz
sub
jecxz
push
in
pop
mov
push
loop
mov
cmc
lods
in
add
adc
fadd
aaa
xor
inc
std
cli
fwait
xlat
scas
push
stc
aas
les
jne
stos
cmp
fldt
dec
push
pop
daa
inc
aam
inc
push
imul
mov
fmull
and
push
mov
ljmp
hlt
mov
fidivrl
je
dec
adc
xchg
cltd
fs
fstl
xchg
dec
xchg
cld
mov
or
stc
pop
dec
sub
xchg
add
dec
lods
pop
sahf
pop
andb
ljmp
push
xlat
ret
push
push
fldcw
test
pop
and
adc
cmc
mov
push
out
out
sub
and
jnp
ret
mov
xchg
movl
mov
push
ds
or
sti
xchg
sub
sbb
repnz
pop
out
dec
jmp
add
in
popa
out
enter
les
outsb
xor
inc
test
in
pop
call
mov
adc
rcll
adc
mov
inc
addr16
js
ficoms
inc
add
hlt
xor
xchg
push
test
inc
adc
inc
imul
jge
push
loopne
sub
daa
adc
cmpsb
pop
sub
loopne
aas
adc
mov
stos
lea
pushf
push
test
mov
ljmp
cmpl
mov
cmc
mov
out
ds
xor
adc
push
lods
push
cmpsl
jp
lret
jae
in
ljmp
xor
inc
sub
jge
pop
mov
adc
nop
daa
test
cmp
xchg
ficompl
xor
sub
and
gs
add
jb
sub
push
pop
xacquire
ljmp
sub
sarb
imul
push
jb
test
cmp
in
ret
adc
fsubrl
adc
out
pushf
jb
xor
sbb
pop
stc
push
adc
lds
subb
or
cltd
je
or
adc
sbb
dec
dec
add
dec
stc
ds
inc
in
fiadds
sub
hlt
or
in
mov
xchg
fcmovu
xor
and
ss
inc
cmpsl
into
fidivrs
dec
clc
rcr
push
decb
cmpsl
pushf
flds
sub
sub
hlt
jecxz
sbb
pop
dec
mov
out
jp
fdivrl
mov
fcoms
mov
adc
inc
fdivs
or
xchg
pop
dec
test
ja
adc
imul
cmpsl
pop
or
inc
fmull
fwait
das
shlb
pop
cwtl
push
sub
and
aas
pop
imul
test
push
and
movntq
sbb
pusha
int3
int
in
sub
add
jge
insb
sbb
pop
rcrl
fcomp
jecxz
push
push
jne
jl
add
add
mov
rcr
or
cmp
dec
dec
iret
add
test
cmp
leave
mov
subb
push
xchg
inc
daa
mov
pushf
xor
hlt
inc
xchg
mov
mov
cmp
lods
lock
nop
dec
and
cmp
nop
pop
ljmp
ficompl
es
leave
jecxz
xor
leave
push
sub
pop
cmp
cmp
xor
jg
lahf
enter
cli
jmp
jmp
rorl
or
mov
mov
sti
fwait
xchg
pop
sahf
or
jmp
cmpsb
jb
cmp
nop
lods
hlt
and
mov
pop
loope
dec
xor
das
mov
push
fwait
nop
sbb
dec
test
pop
enter
sub
jae
and
and
cmc
movsb
aad
jg
mov
jb
das
cmp
xor
ss
pop
loopne
idivb
push
cmp
bound
push
mov
or
jg
shrl
outsl
nop
hlt
lds
mov
cltd
and
jae
cmp
data16
mov
cmpsl
dec
xor
pop
xchg
jo
pop
je
sbb
xor
push
or
inc
add
inc
lds
jno
js
fnstsw
imul
cmc
cltd
fs
cwtl
sub
test
xchg
sbb
test
mov
test
sbbb
cmp
lea
ret
aam
pop
and
push
test
repnz
dec
cld
add
loope
push
mov
fs
stc
inc
add
push
lock
mov
and
push
sbb
add
lea
cli
push
mov
add
popa
cmp
dec
es
pop
or
jae
jge
pop
in
fbstp
cli
xor
ljmp
xor
dec
adc
mov
insb
cmc
fsubrl
cmp
and
pop
cmp
cwtl
push
sub
cmp
pop
xchg
xor
cmp
aam
int3
inc
lahf
arpl
subl
push
in
les
jae
int3
dec
dec
xchg
test
rorb
jno
xchg
mov
ja
and
imul
sub
mov
add
push
inc
and
iret
rorb
push
mov
push
out
aam
pop
cmp
cmpsl
adc
mov
sbb
mov
dec
mov
xchg
mov
out
sub
out
imul
movsl
lea
xsaves
jp
xchg
add
push
fldl2t
test
arpl
mov
mov
adc
add
in
mov
cmp
ja,pt
and
push
xor
lds
repnz
adc
add
repz
xlat
test
std
inc
cmovs
outsb
jns
imull
push
or
movsl
sub
flds
pop
xor
adc
es
fsubr
shl
aam
and
cmp
dec
lret
push
insb
ja
xchg
and
std
push
sub
mov
push
jge
lret
pop
leave
xlat
push
sbb
popf
inc
sbb
in
dec
sbb
or
cmp
cmp
mov
jp
call
pop
sub
inc
xchg
cmp
pop
icebp
push
lahf
pop
dec
sbb
aaa
stos
push
lret
lret
ss
jge
mov
loop
add
sub
outsb
fwait
add
cmp
sbb
les
dec
loope
addr16
outsb
xchg
push
jmp
ss
add
pop
hlt
pop
pop
add
aad
popa
push
jge
cmpb
push
ret
jmp
cmp
jae
jge
popa
aas
mov
call
mov
xor
les
lds
or
jno
orb
dec
roll
sbb
and
jle
daa
popa
xor
daa
mov
or
iret
add
inc
push
jg
mov
jne
and
lahf
push
sbb
inc
mov
sbb
outsb
mov
cli
xchg
ds
mov
pop
sbb
mov
dec
push
or
decl
ss
xchg
inc
pop
fistpl
add
mul
fbstp
mov
jne
repnz
mov
js
in
hlt
shrb
jae
add
mov
push
js
stos
jbe
sbb
clc
jg
jp
loope
pop
lds
lock
scas
movl
adc
pop
lret
jno
lea
addl
add
repnz
dec
pop
xor
cmp
popa
lock
int3
pop
mov
push
in
in
mov
out
mov
jno
jge
fisubs
jg
or
or
movsl
cmp
push
es
sbb
jp
push
lods
xchg
and
enter
cmpsl
cmp
sbb
xchg
clc
xchg
outsl
lock
mov
mov
pop
or
jae
jle
xchg
sub
stc
repnz
cmpsb
lock
imul
add
dec
push
outsl
mov
pop
sbb
xchg
loope
jbe
sti
cmp
xchg
adc
stc
ss
mov
inc
sbb
push
push
outsl
add
mov
pop
mov
out
xchg
sbb
pop
imul
pop
hlt
int
jns
popf
and
ja
push
inc
popa
ret
mov
xor
in
jns
inc
fsubs
int
and
stc
pushf
jno
or
test
cmpsl
push
sub
add
orl
sbb
xlat
mov
push
lea
imul
in
pushf
or
lods
xchg
in
mov
bnd
les
cmpb
pop
and
adc
lods
test
pusha
mov
adc
js
sub
jae
add
add
push
or
rcl
lods
jle
aaa
pop
imul
sbb
or
inc
ret
and
sahf
and
cld
scas
shlb
jo
pusha
bndstx
rcr
inc
mov
sbb
mov
pop
xor
mov
arpl
enter
out
lds
sbb
adc
xchg
jb
int
dec
mov
lea
add
fstpt
xchg
add
xchg
inc
push
add
rdmsr
out
ds
adc
push
aas
out
dec
pop
dec
in
dec
fnstenv
out
pop
inc
fldcw
add
add
stos
jmp
mov
lret
pop
pushf
je
cld
mov
jecxz
notl
clc
sbb
movsl
mov
ret
mov
into
fdivrl
nop
iret
xchg
test
rcll
rcrl
aam
dec
sbb
inc
cltd
or
call
loop
shl
ss
loope
fstps
sub
mov
and
cmpsl
mov
fidivs
fstpl
idivb
jbe
mov
dec
inc
fildl
or
and
rcll
jno
mov
xchg
sub
adc
pop
rcl
adc
mov
loop
in
cld
sub
cmpsl
icebp
and
rcrb
sub
lret
inc
les
ret
jle
cld
mov
pop
mov
inc
pop
in
mov
outsb
mov
shlb
xchg
mov
push
pop
dec
push
mov
dec
sahf
pmaxub
fbstp
fistl
nop
pop
ljmp
jae
stc
xchg
sub
dec
call
shll
or
ret
jg
jecxz
mov
bound
xchg
dec
nop
vmread
xchg
xor
sbb
ss
int3
push
push
in
in
test
repz
int
xchg
je
addr16
out
mov
or
or
pop
dec
scas
adc
sti
repz
jnp
adc
negl
in
jecxz
inc
out
xchg
adc
into
adc
sub
mov
dec
mov
jns
orl
and
inc
jb
jp
and
lret
xchg
pusha
cld
cld
cwtl
sbb
jb
jno
sbb
out
lcall
cmp
lcall
out
xor
xlat
xor
or
shll
je
push
dec
push
shrl
cmc
mov
hlt
xchg
inc
sbb
jo
lcall
or
out
xor
or
and
sub
jp
add
std
stos
sub
test
rorb
cmp
add
fs
mov
es
pop
or
sbb
fwait
in
outsb
add
sti
insb
mov
sbb
xor
and
adc
sti
cmc
stos
add
mov
nop
or
jmp
lret
push
out
rolb
cmp
cmpsl
loopne
pop
shl
mov
pop
pop
push
imul
lret
inc
mov
andl
and
lret
pop
hlt
lock
test
xor
push
mov
push
fsubrl
pusha
cld
stos
mov
cmpl
out
fcoml
inc
bound
lret
jb
repnz
jo
cmp
outsb
push
mov
dec
pop
sub
dec
mov
push
cli
out
sub
lret
into
gs
nop
adc
jns
add
loope
aas
push
js
mov
jl
cmpsb
hlt
cmp
pop
add
incb
jo
xor
insb
insb
jmp
sub
push
sbb
rorb
push
arpl
cmp
xchg
test
test
adc
repz
adc
insb
scas
in
jnp
leave
into
cmp
test
xor
mov
and
pop
shll
jecxz
sub
fisttpl
mov
add
popf
dec
fbstp
cmc
jmp
add
push
sahf
inc
cmp
adc
aam
mov
pop
sbb
shll
lahf
data16
push
push
push
icebp
push
aaa
fwait
sub
mov
sbb
jno
loopne
stc
cmpsl
ds
sbbl
lods
in
sbb
push
cmp
xor
scas
mov
test
mov
imul
inc
imul
roll
lcall
and
cmp
imul
xor
movsl
or
in
ja
xor
je
pop
xor
je
inc
stos
dec
add
xchg
roll
pop
repnz
movsl
out
mov
push
mov
mov
jnp
pop
and
or
aas
push
xchg
insb
fnstsw
cmp
jle
lods
ret
imul
outsl
ror
out
xor
ret
imul
pop
xchg
add
mov
jmp
mov
sbb
xchg
inc
xchg
dec
stos
lods
mov
jecxz
andl
jns
push
sahf
sbb
insb
mov
cmpsb
xchg
sbb
push
outsb
cmp
inc
bound
add
icebp
iret
in
sub
sbb
xchg
dec
nop
mov
mov
lret
xlat
in
bound
nop
xchg
sub
pushl
fcoms
or
in
sti
push
mov
imul
adc
mov
out
lds
addl
xorb
pop
dec
cmp
xor
xor
lods
and
shl
xchg
add
lods
fwait
push
xchg
loopne
adc
fxam
mov
push
sub
cmp
xchg
xor
stos
jbe
xor
mov
lahf
lods
or
fstpt
popa
ret
in
data16
and
and
loop
or
mov
rorl
ret
jle
call
test
mov
dec
pop
rcrb
fsubr
dec
pop
loop
mov
or
out
sbb
pop
mov
inc
je
jmp
bound
or
lret
cs
mov
cmp
movw
shrb
rorl
xchg
inc
movsl
les
arpl
loopne
mov
push
cmp
cmp
pop
jecxz
add
test
movsl
xchg
mov
mov
cmp
das
push
inc
popf
jb
push
aaa
and
movsl
sbb
pushf
dec
adc
sub
out
rorb
fcomps
xchg
iret
and
mov
fcmovnbe
arpl
lret
test
mov
push
mov
sahf
xorb
xchg
loop
xor
sti
push
jo
mov
pop
dec
mov
daa
and
and
fisubl
bound
ja
ss
sahf
mov
add
in
sbb
sbb
das
sub
inc
jle
sti
push
ret
xchg
or
fdivrs
ss
or
jmp
push
scas
out
in
cld
lea
cmp
jbe
stos
jmp
lods
or
scas
subl
mov
mov
lds
int
lahf
scas
insb
in
rcl
add
lea
lahf
adc
dec
js
fldt
repnz
adc
push
mov
cmp
xchg
xor
loopne
xchg
push
or
mov
hlt
ja
mov
out
jb
loope
ljmp
mov
push
test
ret
jb
pop
xor
in
stos
jp
in
push
sbbl
out
nop
daa
and
lods
sbb
add
pop
or
inc
adc
stc
inc
xlat
or
popf
mov
pop
adc
mov
xchg
jmp
sbb
jne
xchg
xchg
add
mov
push
jl
xchg
cmpsb
in
add
hlt
mov
cmc
shl
es
cmp
leave
divl
pop
cmp
jp
sbb
sub
and
mov
push
xchg
aas
adc
dec
mov
enter
testw
jnp
inc
inc
dec
xor
pop
push
lcall
stc
mov
or
xchg
loop
jle
mov
jnp
adc
pop
rorb
xchg
pushf
adcb
adc
fstpl
add
data16
or
cmp
cli
adc
dec
add
and
cltd
cmp
add
pop
sahf
lea
mov
and
mov
or
cs
ss
mov
popa
cli
inc
lret
bound
out
push
cld
mov
push
outsb
inc
cmp
fwait
lock
inc
iret
scas
mov
les
or
push
cwtl
and
dec
sub
lahf
repnz
mov
cli
test
lret
or
dec
lahf
arpl
in
dec
inc
adc
icebp
push
jb
pop
loop
mov
popa
inc
fildl
mov
enter
jnp
mov
popa
sbb
and
push
or
pop
jp
fsubrs
mov
mov
fs
aaa
inc
in
sub
cmp
inc
pop
test
mov
ffreep
jecxz
xchg
jbe
ret
lods
push
sbb
pushw
cmpsl
sti
or
stc
lods
jo
xchg
add
sbb
test
sbb
lock
xor
repnz
ja
lds
push
xchg
out
nop
sub
mov
mov
mov
cwtl
xor
icebp
mov
out
sbb
xchg
sub
pop
fidivl
test
dec
pop
push
and
pop
gs
sahf
mov
mov
xor
adc
mov
xchg
int
mov
addl
lods
jg
shrl
sub
xor
mov
mov
idivl
sarb
rol
inc
lret
xchg
pop
jo
mov
imul
mov
push
add
xor
cli
rcrl
lea
mov
cmp
lea
pop
mov
icebp
in
and
dec
sub
or
or
loopne
xchg
pop
xlat
fnstenv
arpl
aas
mov
pop
cmp
jne
sti
push
aad
sub
fs
pop
hlt
vxorpd
bound
fs
test
in
cld
fstpl
jno
or
mov
hlt
dec
jae
pop
imul
lods
sti
daa
adc
xchg
push
mov
lock
bound
mov
movsb
or
cmp
add
mov
lret
adc
daa
add
mov
pop
lcall
mov
jl
loope
cmp
or
out
xorb
in
iret
push
movups
and
imul
lds
lahf
arpl
jnp
aam
jge
mov
stc
aam
push
test
xchg
adc
roll
lahf
mov
push
cmpsl
add
mov
adc
pop
adc
cs
xor
xchg
mov
dec
insb
mov
movsl
cld
inc
ret
push
xchg
adc
push
add
movsl
pop
pop
std
pop
out
inc
jae
cmp
push
cwtl
aas
inc
cmp
jle
inc
cmp
mov
testb
or
xchg
stc
lret
lds
ret
addr16
movsl
push
pushf
lods
out
or
sub
mov
mov
xor
or
test
ja
mov
push
test
inc
test
push
mov
xchg
nop
jno
ret
rclb
pop
pop
and
pusha
sub
shrb
jle
or
cli
adc
jg
decl
adc
out
inc
push
mov
in
pop
dec
insl
xor
iret
aas
pop
lock
test
repz
ja
mov
lea
mov
neg
lret
cltd
xor
icebp
inc
push
punpcklbw
push
cmpsl
or
fidivrl
mov
std
imul
sub
shll
mov
cmc
mov
jnp
ret
lcall
dec
push
es
jmp
dec
adc
sbbl
push
cwtl
inc
sarl
imul
adc
iret
subb
aaa
imul
sbb
xchg
leave
dec
hlt
mov
clc
fisubs
cmp
mov
mov
sbbl
add
std
xchg
les
add
dec
inc
loopne
fnstenv
add
pop
addr16
jns
inc
fsubrs
and
ror
inc
mov
repnz
push
add
nop
cld
add
mov
jns
popf
rorb
xchg
sub
popa
stos
shr
mov
stc
and
cld
adc
call
mov
jae
rclb
mov
adc
nop
in
pop
test
rcll
cmp
into
test
ficoms
cmp
cmp
orb
adc
push
ljmp
or
insl
xchg
into
mov
stos
jbe
jg
xchg
xchg
push
rol
xchg
test
call
scas
inc
cld
ss
lea
insl
stc
adc
std
fistpll
lea
pop
sbb
lret
mov
sub
test
stc
or
cli
xchg
pop
or
js
mov
mov
adc
xchg
insb
leave
out
dec
mov
loope
aas
aad
and
or
fwait
jl
inc
daa
insl
xchg
jge
jne
add
mov
dec
jns
in
cmp
mov
jne
test
jns
stos
fdivs
pushf
mov
scas
pop
add
movsl
add
movsl
cmpb
test
bound
js
ret
addr16
add
scas
add
xor
mov
ret
lds
sub
xchg
into
dec
or
mov
mov
dec
xor
jecxz
test
movb
fmuls
push
iret
aam
pop
repz
mov
mov
and
mov
pop
insl
push
fdivl
xchg
pop
sub
adc
inc
xor
cld
push
mov
pusha
fstl
pop
loop
and
pop
fildll
xchg
mov
adc
cwtl
fs
dec
and
iret
mov
shlb
mov
pop
fcmovbe
push
test
int
push
js
filds
lea
test
fbstp
mov
mov
xor
inc
bound
outsb
test
mov
cmc
mov
sbb
and
or
popf
inc
push
jmp
jb
mov
leave
push
fldl
in
jle
ljmp
jne
popf
push
iret
xchg
jle
std
and
sbb
pushf
dec
mov
dec
out
fwait
imul
lods
out
stos
daa
cld
add
add
leave
aad
cmp
pop
in
pop
cmp
inc
sub
loopne
mov
mov
jnp
dec
mov
xlat
fdivrl
aad
imul
and
lds
adc
dec
mov
gs
rorl
push
test
popl
fsub
enter
sti
stos
inc
pop
inc
push
rcr
adc
test
pop
sarl
jo
push
sub
add
inc
pop
sahf
and
xor
nop
fidivl
es
mov
push
xor
lock
sub
out
test
rorl
jge
mov
xchg
in
ret
inc
push
pmulhuw
sub
push
scas
push
adc
xchg
xchg
push
das
inc
sbb
sbb
dec
push
mov
lds
not
dec
repz
and
mov
fnstsw
push
mov
xchg
mov
aam
pushf
add
cs
je
and
dec
xchg
or
and
push
mov
xchg
lcall
or
fs
iret
lds
scas
jno
mov
aam
push
shrl
testb
jl
or
subl
test
in
shrl
adc
repnz
cmpsb
or
outsb
inc
shrl
fisubl
lods
pop
mov
test
cld
inc
fsubrs
outsb
mov
lcall
cmp
or
lods
ss
orl
aas
fiaddl
xor
out
addr16
jmp
mov
fs
cwtl
jbe
sub
pop
sahf
insl
mov
inc
sub
es
xchg
cmc
jg
je
cs
lds
int3
xchg
sub
push
insl
ja
mov
or
stos
aas
mov
dec
sub
test
fidivrs
lods
xchg
sub
roll
or
test
mov
inc
repz
test
jb
adc
pop
lcall
mov
pop
jmp
ficomps
mov
int
fistps
adc
mov
orb
xchg
add
ss
cli
jmp
into
lods
iret
cld
test
or
and
fsubrl
pop
negb
daa
cli
inc
jle
add
gs
arpl
sahf
pop
shlb
mov
jno
pop
in
xor
or
mov
ljmp
inc
clc
pop
movsl
or
adc
lods
push
mov
xchg
hlt
mov
and
cwtl
js
lret
lods
punpckhwd
adc
loopne
enter
mov
add
es
xor
cmpsb
push
loop
icebp
xchg
sbb
popa
dec
mov
mov
push
jne
icebp
cmpb
adc
xchg
xor
es
cmp
insl
arpl
cwtl
xor
xor
fwait
xor
push
sub
mov
inc
adc
pop
xchg
add
jle
negb
mov
stos
push
add
cmp
pop
sar
fs
subb
test
into
lea
xlat
stos
fnstcw
int3
aaa
push
sbb
xor
daa
fmuls
cmpsl
push
daa
push
or
cmp
jp
lret
inc
aaa
or
ret
jge
aas
adc
mov
inc
insb
into
test
pop
mov
jmp
xor
shl
and
cwtl
mov
inc
pop
push
mov
cmp
test
stos
cmp
push
cmp
imul
dec
mov
mov
jmp
mov
jp
jg
mov
test
add
das
xchg
and
jecxz
out
push
push
mov
testb
xchg
andl
jg
mov
lea
xchg
mov
cmp
jecxz
sbb
ds
lock
xor
jg
cli
xchg
pop
mov
mov
jge
nop
sub
jg
imul
int
rolb
aas
test
in
fwait
cmc
xchg
cwtl
popa
scas
dec
xor
cld
or
xchg
popa
fsts
das
inc
mov
int3
stc
cmp
shll
pop
adc
push
add
mov
or
notl
call
rorb
cmc
repz
add
popa
pop
cmp
iret
fnstcw
mov
insb
loopne
daa
fucomip
pop
add
jle
mov
lock
inc
mov
hlt
inc
call
ja
das
or
dec
cmp
sbb
in
inc
xchg
in
xchg
adc
sbb
push
and
jp
les
movsb
fstpt
pop
pop
pop
mov
xchg
mov
movsl
aas
jecxz
push
aad
clc
xchg
imul
filds
pushf
lea
data16
add
in
mov
rcll
pop
pushf
pop
ror
cmp
pushf
lret
outsb
dec
fimuls
out
adc
adc
push
pop
lcall
in
scas
pop
cltd
inc
aas
jno
lret
and
popw
mov
sub
ss
rorb
add
adc
imul
ss
fildl
push
in
out
push
loop
or
addr16
imul
push
enter
pop
insb
imul
sti
or
cmp
lea
push
test
call
test
rcl
fs
xchg
jae
rcr
sbb
inc
mov
loope
sub
add
daa
push
pop
movsl
xchg
and
lock
push
stos
ljmp
xor
xchg
jo
imul
stos
inc
test
inc
test
icebp
or
push
mov
sahf
pop
or
xor
or
js
xor
cmp
cmp
push
orps
dec
cmpsb
pop
mov
adc
punpcklbw
mov
in
lock
ds
inc
test
cmp
mov
jbe
addl
sbb
leave
and
push
jnp
stos
push
nop
dec
mov
mov
push
out
lods
aas
fwait
xor
into
inc
pop
add
loopne
es
push
push
or
add
push
push
jl
iret
mov
popf
add
xor
adc
sbb
lcall
repz
arpl
push
mov
adc
inc
test
and
or
in
repnz
fbstp
mov
sbb
test
xchg
xor
daa
aaa
imul
mov
xor
sahf
es
sbb
dec
mov
aad
sub
bnd
stos
sahf
rcrb
lcall
rorl
cmove
adc
scas
cmpsb
xchg
xchg
call
push
adc
hlt
lret
adc
mov
xor
push
sbb
xchg
and
sar
leave
and
push
push
ja
jecxz
inc
flds
push
jb
insl
push
movsb
icebp
daa
cmp
xor
mov
and
int
sbb
adc
and
into
or
jmp
aad
ret
lds
je
xchg
xor
mov
in
xor
ljmp
jno
imul
sbb
xchg
dec
mov
out
push
inc
gs
push
jp
loop
addr16
aad
sub
pop
sbb
pop
sbb
mov
xchg
lret
dec
pop
data16
loope
xchg
push
xor
inc
cmpsb
push
fildll
cmpsl
jecxz
sahf
mov
stos
add
pusha
loop
or
xchg
mov
pop
movsl
xor
adc
push
xchg
lods
aam
adcb
cmp
sbb
xor
pop
imul
jmp
lods
daa
mov
jo
sbb
mov
push
or
adcl
push
jb
xor
and
push
fstp
mov
push
int3
mov
push
std
xchg
push
jae
cli
sbb
mov
xorl
subb
das
fcoms
mov
out
je
and
in
xor
aas
push
inc
or
xor
arpl
and
dec
inc
jno
ja
aad
repz
sub
dec
add
mov
mov
xchg
pop
rorl
int3
icebp
imull
xchg
sarl
add
dec
pop
popa
popa
popa
andl
sub
push
popa
or
mov
mov
fucomip
test
sbb
je
or
mov
insl
sti
jg
ret
int3
mov
jae
mov
xchg
stos
dec
data16
loopne
jb
inc
inc
and
push
in
repnz
xorb
xlat
mov
inc
push
mov
cmc
shll
in
std
cld
jle
aam
imul
add
dec
faddl
and
lret
pop
js
cwtl
mov
pusha
push
incl
out
test
sahf
shlb
mov
xchg
inc
push
lock
pop
aam
and
dec
je
push
orb
or
arpl
rcrb
inc
dec
repnz
aad
cmp
jno,pt
sub
es
adc
sbb
xor
pop
mov
movsb
inc
call
or
dec
es
push
test
pushf
lods
jg
in
fcompl
or
cmp
jge
pop
cmp
push
rorb
cmp
sub
pop
call
mov
xchg
mov
ffree
pop
or
nop
jns
jecxz
mov
jno
lock
call
or
xor
insl
mov
sti
in
addr16
scas
xchg
test
sarl
or
ret
mov
arpl
loope
pop
jecxz
ljmp
pop
popa
clc
mov
cli
es
jbe
lcall
adc
and
mov
push
mov
or
cwtl
pop
clc
cmp
jecxz
out
add
jecxz
and
mov
jbe
jno
mov
push
mov
or
mov
push
add
nop
ret
lods
imul
mov
mov
outsl
out
in
test
xor
push
jno
nop
sbb
xor
add
fildl
jp
sbb
adc
xchg
lods
daa
fiaddl
adc
cltd
cmp
out
jp
pop
or
xlat
in
cli
and
pop
jl
outsl
jnp
sub
pop
out
les
dec
mov
stos
inc
imul
ret
ret
push
xor
xchg
pop
sub
ljmp
mov
bound
cs
lock
loope
lret
sar
hlt
dec
sbb
les
jae
fmull
sbb
push
push
fisubl
push
xor
frstor
sbb
pusha
aaa
movsb
repnz
mov
mov
aam
test
fwait
push
pop
mov
add
test
ljmp
lret
dec
sbb
mov
scas
xchg
les
dec
mov
mov
rcrl
mov
popa
in
adc
mov
mov
pop
jo
xor
inc
xchg
test
pop
push
or
cmp
mov
lods
aaa
mov
jg
scas
mov
xchg
add
jo
sti
jl
aas
out
jmp
imul
dec
sbb
dec
xchg
sbb
cmp
push
lods
clc
mov
in
sub
ret
dec
fbstp
movsb
fldl
xorl
xchg
pusha
ss
mov
enter
pushf
fnsave
mov
pop
mov
xor
mov
adc
fwait
add
popf
push
lcall
out
cmpb
or
push
fiaddl
jns
aaa
mov
push
push
in
adcl
add
inc
xlat
push
ret
repnz
test
ret
lds
out
mov
sahf
out
adc
pop
sub
mov
pop
cmp
dec
lea
cmpsb
cmp
insl
and
gs
adc
rcl
jne
inc
ja
xlat
test
adc
ret
push
push
mov
ret
sbb
sarb
xlat
and
movsl
add
pop
cmpsb
ret
in
pop
ds
lahf
jg
and
mov
lock
jo
sbb
inc
mov
cmp
test
inc
jno
inc
aas
dec
inc
or
mov
jp
sbb
xchg
std
js
xor
xchg
xchg
mov
cmpsb
lock
jne
adc
int3
loope
outsl
fbld
cmp
inc
loope
sub
mov
mov
jmp
or
stos
and
sbb
into
dec
adc
jbe
mov
push
dec
pop
jecxz
mov
push
fs
add
into
push
xchg
add
push
nop
cs
or
xor
mov
mov
fsubrs
add
jne
add
xor
or
test
fstpl
mov
sub
jmp
in
push
fdivrl
xchg
mov
lret
xor
test
imul
xchg
add
xor
jns
out
test
mov
arpl
fwait
and
lea
clc
into
popfw
inc
in
fwait
mov
outsb
mov
imul
hlt
jg
shll
cmpsb
lock
xchg
xor
scas
nop
pop
xor
rol
cltd
cld
xor
push
dec
cltd
push
push
or
mov
xchg
scas
test
out
xchg
cmc
andnps
sub
lret
adc
dec
loopne
push
movsl
push
stos
adc
cmc
aaa
sub
jmp
movsl
fwait
out
nop
out
pop
and
mov
adc
push
inc
mov
sbb
stos
testl
lods
movsb
xor
mov
bound
push
push
mov
pop
in
int3
cli
adc
mov
adc
xor
ds
or
sbb
rcrl
icebp
loope
in
bound
mov
pop
lret
cmp
aas
push
repnz
push
add
adc
in
sbb
adcl
popa
loopne
jae
or
mov
push
adc
xchg
je
aad
jecxz
inc
xchg
adc
mov
cltd
das
cltd
gs
nop
icebp
in
das
in
repnz
pop
dec
cmpb
bound
iret
adc
jns
sub
test
jo
addr16
cli
xlat
outsb
fcmovbe
push
ss
jb
shrl
insl
add
push
sub
sti
out
sub
in
xor
push
fs
fwait
mov
xor
or
cld
cwtl
pop
jg
adc
jbe
js
pop
out
adc
mov
mov
sub
daa
incl
lods
out
rolb
sbb
push
roll
push
push
arpl
icebp
push
pop
mov
xlat
pop
xor
mov
inc
sbb
sub
movsl
dec
jg
fwait
add
fadds
add
xchg
jmp
insl
pop
rcr
adcl
sbb
les
stos
sub
mov
lret
mov
js
ja
enter
xchg
ret
lea
add
dec
cmpsl
mov
les
shl
push
jg
or
mov
or
daa
sbb
je
jns
xlat
inc
fimull
or
popa
enter
fistpl
mov
sbb
and
cmpsl
xchg
inc
xchg
pusha
mov
imul
gs
inc
inc
mov
mov
add
adc
or
adc
sub
scas
cmp
and
push
ret
jb
jp
mov
les
dec
dec
lds
orps
repnz
iret
xchg
sbb
or
shrd
adc
mov
mov
pop
pop
test
leave
and
jge
aas
inc
adc
add
mov
xlat
push
imul
loopne
ficomps
jge
jne
lahf
push
inc
fwait
jle
mov
in
mov
and
xchg
mov
mov
jns
or
inc
das
mov
pop
pop
lods
jp
mov
or
sbb
push
arpl
xchg
fwait
cmpsl
cmpsb
mov
jne
clc
jle
dec
mov
lock
push
jmp
les
stos
pushf
leave
and
in
xchg
dec
ss
dec
or
xor
mov
push
jecxz
fsubrp
sub
out
scas
cwtl
pop
nop
xchg
mov
ret
adc
cmpxchg
inc
fcmovnu
gs
cld
jl
mov
arpl
xor
repz
jmp
loope
insl
lods
push
sti
movsl
movsl
ja
sbb
gs
push
dec
dec
sub
daa
xor
cmp
pop
jmp
lcall
cmp
mov
mov
sbb
addr16
in
sbb
inc
out
out
dec
sbb
shlb
insl
out
stos
shll
mov
push
mov
adcl
push
scas
mov
ret
and
imul
inc
fcmovnb
fisubl
cmc
cld
leave
test
popf
std
jo
jl
lret
or
femms
sub
ds
pop
sarb
and
scas
das
inc
cltd
sbb
fcoml
daa
jg
imul
sbb
push
and
pop
cltd
xor
adc
push
push
or
hlt
cmp
mov
shrb
ljmp
jno
repz
inc
mov
inc
pop
mov
pusha
jnp
lods
in
fistps
dec
mov
add
jp
mov
sub
outsl
pop
inc
ret
pop
jb
pop
lock
fnstcw
mov
fdivl
dec
sub
jp
cmp
mov
movsl
adc
out
pop
or
test
or
andb
fildl
ljmp
inc
movsb
loope
and
out
sbb
sbb
xor
pop
pop
push
adc
test
mov
push
fstpl
sub
and
lahf
ja
gs
test
mov
inc
ficomps
shlb
pop
dec
add
imul
jo
mov
aas
inc
das
add
jl
hlt
pusha
cld
mov
sub
cmpsl
mov
jg
lock
cs
lahf
sbb
inc
pop
mov
and
outsl
xor
pop
cwtl
inc
aas
shr
jo
arpl
js
mov
fwait
push
and
jmp
xchg
jb
or
fldt
mov
ds
sbb
and
imul
mov
sbb
xchg
inc
cmp
movsb
cmp
call
push
movsl
push
bound
and
sub
std
cmp
imul
stos
jo
mov
xor
mov
push
scas
in
cld
sub
jns
cwtl
mov
lcall
sub
push
sbb
and
xchg
in
mov
popa
mov
fistpl
call
xor
or
lcall
aas
push
repnz
jo
mov
ja
ljmp
jnp
xchg
add
cmpsl
adc
fdivr
dec
pop
xor
daa
in
int
dec
and
insb
adc
xchg
sub
lcall
dec
push
sti
xchg
scas
push
xchg
pop
cmp
sbb
mov
imul
leave
xchg
push
out
xor
and
scas
adc
icebp
jmp
hlt
mov
xor
decl
nop
popa
jmp
cmp
cmpsb
lock
sahf
sbb
shlb
jecxz
jbe
loopne
sub
aad
push
jne
mov
fisttpl
stos
cld
or
sbb
mov
sub
cmp
repz
mov
inc
out
jecxz
dec
rclb
mov
lea
dec
xlat
jns
dec
imul
mov
mov
ja
lret
mov
clc
cmpsb
sbb
daa
add
and
stc
int
ja
dec
sbb
popa
xchg
mov
jae
xor
xchg
test
inc
cmp
jno
sti
cmpsl
insl
arpl
popf
std
data16
adc
lea
mov
pop
inc
cltd
or
dec
jae
adc
popf
cmpsb
cld
out
arpl
sbb
dec
mov
clc
shr
cmp
sub
insl
mov
mov
test
lds
shrl
repnz
filds
repz
loop
in
fildl
jg
ja
sahf
fwait
mov
mov
rorl
cmpsl
ret
adc
sbb
notb
stos
mov
xchg
cmp
inc
sbb
mov
xchg
fisubs
push
or
loop
mov
jbe
les
jl
add
hlt
sub
fisubl
mov
sub
in
sub
sbb
inc
ret
cmp
xchg
inc
mov
orl
mov
adc
dec
sbb
pop
ret
cmp
xlat
jmp
mov
push
dec
cld
mov
fwait
test
emms
lahf
pop
pop
repnz
ss
insl
cltd
inc
add
bound
in
or
daa
loop
movsl
or
push
test
add
dec
xchg
gs
imul
lcall
cwtl
pop
jge
movsb
and
pop
lret
cli
xchg
leave
add
aaa
push
jmp
xor
es
repz
pushf
or
cltd
lcall
mov
push
outsb
insl
and
jp
add
xor
cmp
mov
and
xchg
dec
add
cltd
mov
and
bound
stos
std
ss
xchg
push
xor
in
js
outsl
mov
gs
rep
inc
ret
mov
popf
lds
xlat
scas
sti
lods
sti
pop
sub
arpl
ret
in
mov
fdivl
insb
aam
mov
out
cltd
aad
cmp
jmp
hlt
shll
xchg
imul
inc
clc
xchg
ret
int
les
jecxz
stc
arpl
outsl
fisubrl
loopne
or
mov
mov
pop
adc
int
hlt
pop
mov
dec
pop
adc
stos
es
in
dec
mov
push
in
into
pop
pushf
dec
pusha
push
fists
xchg
sub
movsb
mov
mov
aam
xor
mov
jnp
add
out
js
int
sbb
push
inc
fnstenv
es
sbb
pusha
inc
mov
jg
push
int
iret
xor
in
push
jmp
push
mov
js
test
jge
jne
in
in
push
jno
add
adc
icebp
les
add
and
lret
or
jns
sbb
jp
and
out
lods
push
or
cmpsb
shl
pop
leave
jmp
push
lods
xor
mov
adc
mov
cmp
inc
cmp
ljmp
mov
test
cltd
mov
hlt
fwait
dec
repz
and
test
xchg
movsb
fnsave
add
fld
sti
mov
push
subl
jnp
lret
push
shll
call
andnps
and
lret
mov
and
mov
cli
fidivs
imul
jle
out
std
sub
test
scas
pop
or
stc
sti
mov
add
xor
int3
inc
stos
lret
cmp
cmpsl
jo
aas
mov
out
leave
xchg
push
or
out
push
or
cmp
out
popa
pop
in
lock
add
inc
cmp
ljmp
stos
inc
jbe
mov
cmp
shlb
xchg
ljmp
insl
xor
ja
shll
dec
sub
sahf
repnz
xchg
lock
daa
bound
loop
sub
and
frstor
lret
fistpll
and
jle
pop
add
mov
xchg
jo
push
lret
xor
mov
movsl
sub
stc
or
int
test
fwait
iret
xor
mov
gs
repz
jg
cs
dec
push
idiv
jbe
push
pop
sbb
dec
test
es
cmp
push
leave
xor
push
psllq
nop
xchg
jl
push
lret
loope
outsl
popf
xor
and
jg
dec
mov
pop
mov
dec
sahf
mov
mov
sub
sar
adc
cmp
mov
imul
popf
inc
jns
and
out
push
and
xchg
pop
div
cmp
or
or
std
inc
sbb
std
testb
sbb
push
imul
xchg
insb
movsb
jmp
jp
or
jecxz
push
lcall
push
jg
xchg
imul
hlt
push
cs
sbb
push
mov
ss
fisubs
shlb
les
dec
inc
outsb
js
adc
push
les
xchg
mov
andb
mov
xchg
xor
mov
jmp
mov
fnstenv
sarb
xor
call
idivb
lods
fmuls
in
jb
leave
in
sarl
pop
pusha
xor
pop
pop
fiaddl
fisttpl
sub
das
inc
aaa
imul
push
dec
mov
push
outsl
xchg
mov
fld
out
pmaxsw
lahf
xor
bound
push
mov
subb
pop
lret
adc
jp
subl
add
sti
insb
stos
movsb
fmull
or
shl
int3
pop
pop
or
ljmp
movsb
js
addr16
pop
push
sub
jle
arpl
subl
inc
in
xor
push
inc
dec
adc
mov
pushf
mov
jmp
in
pop
orb
pop
jmp
dec
bound
or
inc
adcl
inc
sbb
fdivl
lods
cmpsl
cmc
push
push
lods
ljmp
pushf
ljmp
ljmp
daa
scas
cmp
push
fldenv
pusha
out
cmp
adc
outsb
and
adc
loop
arpl
dec
fidivrl
lcall
cwtl
push
repz
mov
fstpl
ret
xchg
push
call
mov
push
jecxz
pop
sub
testb
sbb
hlt
fs
sbb
inc
sbb
and
push
rolb
mov
mov
jge
mov
inc
test
push
push
lcall
in
xor
aad
mov
test
cld
daa
mov
push
popa
adc
push
ja,pt
mull
std
jg
push
sub
inc
imul
xor
adc
mov
jge
dec
out
das
adc
aaa
mov
pop
adc
mov
shrb
gs
shrl
push
scas
das
jl
push
sti
test
pop
vgf2p8mulb
xchg
inc
fwait
dec
insb
fnstsw
es
cli
push
aam
jg
xor
sbb
dec
sub
inc
dec
scas
sbb
fsubl
inc
daa
jnp
ljmp
inc
test
out
ret
push
jbe
adc
inc
data16
push
inc
sti
dec
add
roll
pop
adc
stos
pop
push
lea
mov
stos
mov
sahf
mov
adcb
in
push
jae
in
bound
imul
repz
stc
fwait
test
fs
and
push
xchg
xor
je
jno
jbe
dec
xlat
pop
push
pop
fstps
pop
adc
sbb
mov
movsl
inc
ljmp
push
lds
dec
scas
xchg
lods
and
aaa
lock
into
sbb
leave
xchg
enter
and
dec
sub
adc
sbb
jno
xchg
hlt
push
es
aam
push
imul
push
xor
xchg
insb
leave
std
adc
lahf
inc
pusha
sbb
ret
nop
cmp
in
in
xor
dec
mov
outsb
mov
sahf
aaa
aam
loop
mov
cmpsl
xor
rclb
out
enter
data16
sti
stos
push
es
push
push
dec
imul
push
sub
icebp
pop
pop
nop
je
cmpb
mov
pushl
cmp
jmp
loope
std
pop
sbb
ds
setb
mov
xchg
push
lcall
fwait
mov
test
mov
hlt
jae
xor
mov
pop
hlt
jnp
in
mov
jge
jmp
xor
mov
dec
adc
cltd
fisttpl
add
stc
push
push
fnsave
mov
mov
testb
mov
add
notl
dec
adcl
rcrl
lcall
xor
inc
push
xchg
nop
movsl
push
cmpsl
mov
mov
jl
xlat
add
cld
xor
inc
sbb
sbb
mov
push
in
or
pop
das
add
xchg
jp
in
hlt
fstl
sbb
les
dec
jno
cmp
aad
push
mov
jp
adc
dec
pop
add
inc
test
je
daa
cmpsb
mov
loop
xchg
add
jl
or
lods
inc
xchg
out
out
mov
jp
lock
mov
mov
popf
cmp
sbb
cmpl
pop
repnz
pop
int3
shrb
pushf
mov
add
lds
ret
lcall
inc
jmp
jp
mov
xorl
es
mov
ret
mov
pop
xchg
ljmp
jns
stos
push
jnp
push
into
inc
inc
jg
inc
or
mov
ret
or
pop
cmp
pushf
outsl
add
mov
cmp
into
sbb
mov
sbb
insl
or
mov
addr16
sbb
fwait
daa
mov
cld
jbe
shrl
sbb
and
xor
jbe
pop
fisubrl
fbstp
dec
call
sti
clc
rcl
mov
jmp
int
dec
push
mov
mov
sub
and
or
inc
inc
inc
add
fisttpl
dec
rclb
xlat
fucomip
ss
push
call
js
outsl
add
aaa
or
jne
xchg
pop
les
leave
jecxz
or
mov
or
mov
xchg
push
jne
inc
pushf
or
lret
lods
and
push
int3
jae
or
je
lods
push
jmp
int3
sub
aam
and
mov
xor
out
mov
sub
pop
inc
test
adcb
push
inc
jecxz
pusha
sbb
jnp
fisttps
jl
add
cs
sbb
aam
or
and
ret
movsb
xchg
add
arpl
int
arpl
push
cli
enter
mov
shll
lods
xchg
mov
outsl
pop
nop
jmp
iret
shll
aam
movsl
and
fldt
xlat
jo
rol
mov
shrb
mov
jae
rcll
or
es
ljmp
dec
mov
js
je
pop
cmpsb
mov
sub
stos
add
mov
add
out
or
jae
insb
sub
or
shl
push
out
dec
lock
mov
mov
shlb
leave
cmp
pop
xchg
int
ret
xchg
jmp
cmp
loopne
push
in
inc
jo
cmpsb
rcr
jno
push
mov
mov
push
shrl
cmp
enter
inc
push
sbb
xchg
pop
fwait
ret
xorb
lock
lret
lret
aaa
pop
rolb
rcrl
push
out
arpl
push
sbb
mov
repz
sub
movsb
inc
das
shll
or
mov
pop
mov
adc
ss
add
sbb
mov
sbb
add
add
sbbb
repnz
subl
rorb
mov
fnstsw
add
pop
sub
pushf
gs
mov
sbbb
ss
dec
stos
adc
push
aas
lock
xchg
push
in
add
push
out
outsb
jne
pushf
lea
cltd
mov
xchg
adc
ret
xor
fidivs
push
cli
rclb
mov
add
sub
mov
sbb
mov
bound
jo
dec
add
fnstenv
or
bound
mov
and
cmp
std
out
andb
enter
or
inc
sbb
cmpsl
lahf
adc
loop
test
lds
in
les
or
out
int
ja
daa
ret
lods
dec
xchg
add
divb
sarb
push
gs
fildll
mov
pop
xor
mov
add
sbb
cwtl
and
jo
or
cwtl
mov
or
mov
lahf
xchg
mov
inc
jb
stos
lret
ficoms
das
jnp
xor
mov
les
popf
push
mov
push
jle
sub
sbb
imul
popa
clc
add
and
sbb
mov
fwait
cmp
xor
je
dec
loopne
test
es
add
mov
test
mov
adc
ficomps
jmp
mov
ds
fdivrl
mov
and
loope
dec
sbb
mov
push
adc
mov
push
scas
sti
sbb
jle
inc
repnz
out
arpl
dec
pop
cmp
fs
inc
cmpsb
adc
push
cs
mov
and
cmc
lods
inc
out
aas
jle
push
idivl
mov
mov
iret
addb
and
jmp
lcall
xorb
pop
outsb
sbb
ss
in
loop
jmp
adc
nop
xchg
push
iret
push
lahf
jg
mov
xor
sub
ljmp
adc
test
add
mov
sti
xor
pop
mov
out
inc
je
cli
icebp
sbb
sbb
cli
push
sbb
test
cmp
out
sbb
mov
pop
les
js
jmp
out
push
sub
pop
jmp
cmpsl
mov
cmpsl
push
jg
pop
les
aaa
inc
cli
jl
nop
inc
ds
popa
jg
cltd
push
and
shrb
mov
xor
dec
rcr
mov
sbb
jge
out
cmpsl
rcrl
cmp
pop
pop
lahf
out
jg
int3
arpl
xor
push
rcrl
inc
sub
cld
inc
in
lea
fnstcw
dec
and
mov
push
sub
test
idivb
jmp
psrlq
dec
mov
movsl
sti
in
pushl
add
cmp
push
ss
pop
outsl
lahf
and
cwtl
push
dec
sub
rorl
inc
fisttps
pop
and
shr
in
lods
dec
lret
mov
xchg
shll
dec
mov
xor
mov
and
push
add
pop
pop
ljmp
es
stos
not
sbb
rolb
out
mov
jmp
or
lods
jns
jbe
shlb
testl
add
push
into
cli
sub
ret
add
cmc
stc
jb
nop
movsl
dec
mov
or
fisubrl
bound
push
mov
pushf
pop
cmc
into
xor
push
data16
jmp
fdivrl
xor
bound
sub
and
mov
mov
mov
sbb
dec
cmp
sbb
lds
jg
mov
pop
dec
test
cmp
jno
add
jg
add
gs
sbb
outsb
and
adc
rcrl
adc
arpl
jns
and
jmp
push
xchg
imul
repnz
dec
sub
mov
jnp
ljmp
iret
xchg
xor
decb
lret
and
in
adc
jle
jb
loope
iret
ficomps
ss
cld
inc
ja
dec
adc
ret
sarl
in
dec
jne
stc
mov
push
out
pop
xchg
jae
mov
pop
test
push
sub
add
adcl
in
call
outsl
subb
loopne
cmp
xor
and
rolb
rcrl
and
shl
push
push
pop
lea
sub
imul
cli
xchg
lock
push
outsb
adc
jl
mov
jl
inc
inc
popa
ljmp
testb
push
out
aad
pushf
sub
das
icebp
mov
into
sub
test
xchg
mov
pop
cmc
or
test
dec
jb
push
push
outsl
pusha
ss
lods
cmpsb
scas
leave
int
repz
pop
dec
andb
mov
shrb
scas
inc
imul
imul
das
xor
sub
xor
xchg
js
sbb
sbb
pop
clc
sbb
inc
fs
scas
xchg
adc
iret
adc
xor
mov
mov
je
test
mov
push
jns
mov
xchg
push
pusha
test
jmp
add
ror
jo
cmp
pop
in
outsl
pop
ds
mov
call
fsubrs
cs
fbstp
xor
or
arpl
jae
shl
mov
mov
repz
and
adc
das
cmp
mov
aam
xchg
inc
out
pop
aaa
imul
dec
out
xorb
out
jp
ljmp
mov
popf
inc
jb
xchg
xchg
add
ss
mov
and
rorl
dec
aad
lock
mov
aam
test
aas
inc
push
in
sbb
repz
bound
sub
mov
cmp
in
add
mov
aam
xchg
cmp
aaa
imul
std
or
push
adc
hlt
jnp
addr16
sub
mov
inc
or
jnp
lret
test
rcl
cltd
add
ret
insb
pusha
aad
daa
adc
repz
xlat
mov
outsl
jecxz
mov
movsb
mov
test
mov
mov
fisubrs
lret
cld
and
xchg
cmp
lds
outsl
cmpsb
cmp
mov
les
bound
pusha
and
xchg
test
arpl
adc
adc
out
dec
pop
add
sbb
pushf
js
xor
pop
inc
fcmovnbe
out
fists
stc
cmpsl
adc
pop
mov
mov
xor
inc
fucomp
shrl
std
lea
gs
icebp
cmp
ljmp
jge
push
mov
sbb
in
rcrb
sub
jns
fbld
push
pop
scas
dec
imul
jecxz
ss
jl
mov
and
mov
dec
into
daa
fmuls
sarb
test
ret
int
js
insl
decl
cmp
add
jg
aas
sbb
mov
sub
dec
dec
push
jnp
and
into
pop
aaa
stos
pushf
push
dec
mov
cmp
jnp
addr16
cli
xchg
fwait
cmp
inc
cli
es
push
sbb
cltd
and
test
inc
mov
mov
ss
out
jmp
cmp
rcrl
dec
pop
lret
lods
jg
push
mov
and
sbb
mov
jp
jl
mov
adc
gs
push
lret
jns
orb
cmc
xor
roll
ss
jecxz
in
add
jns
cltd
dec
xchg
fidivrl
das
add
pop
xor
lret
inc
gs
or
ss
cld
xchg
inc
rol
xor
mov
push
insb
push
jo
push
xchg
lock
mov
adc
mov
movsb
cmp
mov
fstp
and
ds
fninit
shrl
std
je
test
xchg
lcall
nop
jno
ret
sub
jo
mov
push
lods
hlt
add
cmp
movsl
dec
popa
xlat
inc
stos
leave
cmc
stc
sub
push
cltd
xor
orl
ret
push
push
addr16
daa
push
ja
xor
popa
push
xor
cmp
arpl
in
in
dec
cmp
fwait
sti
xor
std
sbb
jns
jnp
pusha
pop
testb
jge
fsubr
jno
push
sbb
cmp
pop
orl
xor
add
or
imull
xchg
xchg
or
jle
adc
mov
or
inc
mov
pop
loop
dec
mov
adc
imull
xchg
fistl
cmp
out
jmp
adc
mov
or
xchg
mov
and
inc
pop
push
and
fstpt
jmp
push
lods
jae
pop
push
ja
pop
lock
pushf
jne
cmc
pushf
jecxz
and
adc
mov
test
fimuls
xchg
fcomps
pop
mov
cbtw
mov
mov
and
pop
insl
and
sbb
stc
dec
out
hlt
enter
pop
and
nop
cmp
or
adc
imul
mov
arpl
cli
adc
lret
mov
jmp
rol
sub
imul
push
dec
pop
push
repnz
stos
ror
cmpsb
xorb
add
rcl
ja
stos
mov
mov
imul
cmp
aam
xor
fstps
sub
mov
jnp
and
rcl
js
jle
pop
insb
and
sarb
jge
loopne
xor
mov
mov
pushf
xor
hlt
xor
mov
jle
pop
lock
cmpsb
cs
jl
pop
adc
jl
incl
push
sub
jo
js
xchg
rcl
hlt
mov
sbb
lahf
push
scas
cld
xor
test
dec
int3
jecxz
jb
add
or
dec
pop
add
inc
ret
pop
sbb
cs
xchg
mov
in
das
and
ljmp
mov
rclb
mov
pusha
mov
xor
cmp
sti
dec
cmp
dec
pop
cltd
add
lds
iret
inc
sub
sub
aas
push
sub
push
ja
insb
in
clc
out
xchg
loope
shll
xchg
sub
add
push
jo
movsb
lret
push
ret
call
sbb
jns
xchg
pop
sub
jle
lahf
dec
daa
pop
ds
repz
ja
jo
imul
inc
xchg
std
call
xor
and
ret
subl
or
int3
xorl
movsl
filds
mov
xor
pop
mov
dec
repnz
scas
inc
mov
jge
mov
pop
mov
jb
stc
inc
or
cmpsl
sahf
xor
cld
cmpsl
icebp
mov
adc
fdivrl
and
fwait
and
mov
xor
mov
or
sub
sub
jge
pop
or
or
sub
jae
mov
fsubrs
xchg
jl
jp
or
inc
std
xchg
subl
adc
or
out
repnz
inc
fwait
testb
sti
or
mov
mov
xchg
icebp
push
cli
stos
inc
and
xor
into
adcl
xchg
movsb
setg
mov
lret
push
push
je
lods
divl
sub
jbe
hlt
jmp
and
dec
ret
shlb
int3
out
add
pop
push
imul
jns
leave
pop
push
and
mov
jg
mov
pop
out
jns
adc
lahf
ss
cmp
lock
sbb
adcl
rcr
sarb
ficomps
adc
or
insb
dec
sar
jns
jecxz
test
mov
jmp
leave
push
repz
push
cmp
lret
xor
mov
sbb
int
pop
rep
out
int
pop
lret
xor
xlat
cmp
jns
jmp
gs
jp
xchg
sbb
clc
std
lds
nop
and
cltd
std
ror
outsl
hlt
sbb
and
iret
cmp
incl
fsubl
inc
or
pushl
mov
or
aad
stos
pop
cmc
jno
in
dec
rorb
inc
cmc
sahf
pop
xor
stc
jle
xor
push
mov
mov
sti
or
popa
in
xchg
mov
mov
insb
pusha
imul
or
fs
rclb
xlat
jbe
or
adc
push
push
mov
out
xor
inc
popf
insb
mov
gs
adcl
push
cmp
mov
andb
arpl
jg
xor
pop
mov
das
dec
push
es
cwtl
rorb
aaa
mov
dec
sub
jle
jmp
inc
iret
loopne
pop
rcrb
scas
popf
cmc
pop
loop
jmp
sbb
dec
orl
xor
loopne
fcoml
mov
arpl
out
dec
negl
inc
xchg
pop
mov
data16
pop
cs
lea
dec
into
sbb
movups
add
fs
xchg
mov
xchg
ret
mov
xchg
lods
daa
mov
lcall
fidivrl
lahf
jecxz
jl
out
or
test
cmp
insb
adc
iret
std
daa
pop
lock
or
aaa
jge
cmp
sub
stc
mov
lods
cltd
sar
sbb
lret
icebp
test
dec
cmp
test
inc
hlt
lods
jb
sahf
mov
mov
and
adc
dec
mov
imul
jbe
jne
dec
aas
aam
les
lret
jge
push
in
imul
icebp
cmp
aad
mov
add
ja
test
add
and
shl
inc
dec
add
mov
iret
mov
stos
cmp
fwait
in
mov
sbbl
outsl
add
es
jl
sti
bound
loop
adc
or
mov
push
insl
shlb
sub
lods
mov
mov
push
cmc
xorb
push
stc
add
ss
fnstenv
data16
inc
and
fwait
outsb
push
int
sbb
jo
push
mov
popf
shrl
fucomp
sti
int3
xchg
cmpsl
add
xchg
cld
stos
mov
mov
scas
outsl
or
mov
xor
mov
mov
xchg
cs
xchg
add
cwtl
add
bound
montmul
cmpsb
sbbb
push
jbe
dec
mov
or
aaa
shl
add
push
jns
or
sub
mov
fnsave
es
jge
cmp
pop
xchg
insl
je
ja
mov
test
in
out
jns
lret
adc
dec
adc
add
call
adc
sub
mov
cmpsb
insb
imul
and
inc
les
push
scas
out
adc
xchg
cs
jle
pop
push
popf
addb
sahf
out
and
or
test
mov
imul
xchg
mov
cmpsb
addr16
inc
cmp
mov
addr16
sub
rcr
mov
sbb
mov
push
sub
lods
xchg
loope
and
pop
or
je
call
test
stc
test
shr
mov
mov
int
or
jnp
sub
outsl
fildll
jnp
adc
sbb
mov
inc
gs
jae
mov
dec
cmp
int
xchg
out
lea
outsb
mov
sub
aas
pop
insb
int3
jns
stos
adc
pop
int3
lret
xchg
scas
sti
fcompl
std
faddl
inc
divl
out
orb
jmp
mov
fdivs
xchg
in
xor
fisttpl
xchg
adc
insb
push
cltd
mov
dec
imul
mov
push
sub
cmpb
negb
sub
mov
xlat
in
repz
jecxz
adc
sub
es
imul
fnstenv
jnp
pop
out
mov
imul
pop
dec
dec
repnz
cmc
mov
icebp
or
in
pusha
and
fdivrs
pop
aaa
mov
shl
mov
into
in
rcl
mov
xor
les
inc
mov
xchg
mov
idivb
jp
mov
lock
add
xchg
in
clc
cld
push
into
pop
in
mov
xchg
and
fsubrl
push
loope
stos
sbb
ds
bnd
sbb
pop
lock
sar
es
mov
cmp
rcrb
adcb
je
mov
pop
es
pusha
and
shr
and
mov
adc
jp
mov
inc
jo
ja
test
jle
adc
mov
imul
xor
xchg
sbb
xchg
scas
push
dec
scas
pusha
test
jnp
in
pop
loop
rcl
inc
sbb
aam
sbb
loopne
scas
in
jns
popl
stos
insb
fdivl
dec
dec
sub
sub
out
mov
loope
inc
xchg
mov
sub
mov
add
shrb
aaa
inc
mov
push
inc
pop
rcll
mov
mov
add
fwait
inc
fs
mov
bound
or
mov
jmp
cltd
pop
addl
aas
aaa
enter
aaa
add
sub
lods
jo
sub
aam
ret
addb
add
pop
ss
jle
and
adc
add
int
or
dec
jle
inc
pop
aas
cmp
or
lret
or
sbb
scas
xchg
mov
inc
fcompl
cltd
loope
inc
mov
push
mov
mov
jo
test
loop
mov
imul
inc
xlat
shrb
xor
mov
jmp
push
push
sbb
push
sbbl
enter
pushf
insl
les
push
dec
pop
jae
ret
outsb
test
loopne
mov
mov
push
jns
aad
jae
jg
outsb
sub
cmp
test
icebp
jnp
mov
pusha
ss
mov
push
inc
ljmp
negl
sbb
out
mov
cmpl
ficoml
mov
adc
pop
fdivrp
or
and
enter
cmp
pop
adc
test
in
insl
iret
mov
lahf
add
sub
push
dec
gs
cmp
jge
mov
fcmove
inc
jmp
jge
movsl
jbe
pop
stos
jle
int3
call
or
jle
inc
call
mov
icebp
lods
pop
into
fidivrl
ljmp
mov
sbb
push
out
mov
xchg
dec
xor
lret
cmpsl
xor
jp
push
pop
mov
jae
jle
or
xor
push
xorl
out
hlt
cmpb
aam
iret
repnz
xor
arpl
mov
sti
daa
xchg
jg
iret
jae
xor
inc
notl
xor
mov
dec
fistpl
mov
mov
cmp
cmp
sub
or
add
lcall
fsubl
decb
out
outsl
aad
in
mov
in
aad
cmp
mov
dec
in
repz
imul
adcl
and
jg
mov
jp
or
out
adc
mov
cmp
add
or
push
repnz
and
xchg
in
mov
or
dec
mov
fadd
push
stos
test
push
fstpt
mov
dec
je
out
rcl
pop
xor
mov
cmp
cmp
insl
scas
lcall
jp
jle
push
xor
push
movsl
mul
xchg
or
jle
icebp
mov
push
mov
mov
inc
fdivl
inc
pop
xor
test
mov
enter
and
xchg
add
push
gs
mov
cmp
jb
les
hlt
sbb
fdivrs
rcrb
lret
xchg
filds
fstps
push
imul
insb
xor
popa
icebp
push
xchg
push
adc
enter
cltd
daa
cwtl
sar
outsl
ja
outsl
test
inc
lock
sbb
je
mov
call
mov
shrb
loope
mov
adc
push
lret
stc
pop
fbld
xchg
mov
out
punpckhbw
movd
fbstp
shlb
add
push
jb
inc
jg
mov
cld
and
add
jle
das
lods
mov
lret
mov
test
or
jo
or
fiadds
mov
iret
push
push
cwtl
aaa
hlt
es
out
and
adc
push
mov
and
mov
rolb
mov
cwtl
xorb
movsb
stos
mov
and
shrl
sahf
mov
decb
sbb
notb
testl
cmc
das
mov
fadds
lock
mov
mov
popw
stos
dec
aas
rcll
test
fs
in
mov
jae
push
lea
mov
mov
mov
leave
mov
sbb
aad
dec
loop
notb
pop
add
movsb
aas
jbe
mov
ffreep
mov
cli
push
push
aas
and
push
test
lods
push
and
push
sahf
movl
mov
aad
xor
shr
ja
cmp
jge
aad
jae
aas
out
xchg
dec
aam
push
add
jg
test
mov
or
push
sbb
movsb
push
insl
sbb
xchg
loope
dec
push
mov
fsubs
mov
xchg
cmpsb
push
loop
or
ja
mov
int
dec
fs
jmp
mov
adc
mov
mov
jle
test
and
incl
in
and
test
inc
cltd
cmpsl
jne
jne
or
pusha
mov
out
push
movsb
or
outsb
aaa
fisubrs
cmpsb
adc
mov
inc
xlat
lods
inc
and
lret
jbe
jg
in
cmpsl
and
cld
movsb
ja
aas
mov
lret
cld
dec
lods
add
cmc
sbb
and
push
jo
push
dec
push
mov
rcrl
movsl
insl
mov
xchg
adc
xchg
out
add
out
test
mov
xor
shlb
push
aas
sub
pushf
inc
pop
mov
imulb
shl
ds
jno
ja
pop
test
sub
push
insb
aaa
adc
jbe
fucomp
das
push
sub
pop
fnsave
and
xchg
sbb
lods
lea
push
mov
in
xchg
notl
fldl
push
mov
mov
fmuls
leave
fnstcw
popa
jmp
add
mov
pop
adc
nop
inc
or
lea
xlat
adc
clc
cmc
inc
scas
gs
mov
dec
push
or
ljmp
pop
jae
negl
movsb
cmpl
inc
cmpsl
enter
mov
lret
xchg
add
scas
fwait
xor
mov
pusha
lea
jno
repnz
cmpsl
ds
addr16
mov
xlat
cmp
or
ljmp
pop
pushf
scas
nop
push
cli
daa
cs
out
mov
shll
mov
es
outsb
push
cmp
or
daa
adc
ss
subl
sub
int3
and
sub
les
dec
gs
jecxz
loopne
jnp
aaa
into
mov
popf
push
repnz
dec
push
mov
jae
mov
or
lcall
cwtl
inc
repnz
sbb
jb
repz
adcb
loope,pt
dec
dec
aad
arpl
mov
mov
outsl
ljmp
push
push
fnstenv
and
mov
int
sarb
and
mov
jmp
jbe
cmpsl
adc
daa
jmp
push
xor
adc
sub
enter
mov
movsl
fnsave
mov
mov
cli
jno
add
test
enter
jno
push
fs
fwait
clc
cmp
push
in
mov
outsb
sbb
push
lcall
cwtl
jle
stc
je
sub
jp
jle
mov
mov
loop
jns
mov
jmp
or
and
pop
cmp
idivl
repz
inc
jmp
jg
aad
and
sbb
xchg
stos
xor
xor
repnz
and
nop
xchg
stos
fadds
dec
in
mov
out
xor
daa
mov
roll
jbe
ficoms
test
and
lcall
aas
loopne
mov
pop
fs
pop
mov
mov
lds
and
out
fwait
xor
jmp
cmc
aam
pop
ret
cwtl
mov
testl
popa
or
cmp
mov
pop
sar
jmp
lret
pusha
repz
scas
and
out
sbb
pop
mov
lds
neg
sub
lahf
out
rcr
int3
add
xor
pop
icebp
pop
mov
jns
mov
fstpl
inc
stos
test
lret
push
call
cs
pop
repnz
pop
and
cli
push
jmp
sbb
adcl
es
pop
jbe
push
test
push
int
in
push
mov
fdivrp
loop
orb
mov
mov
lahf
test
cmp
jge
int
xor
inc
ret
insl
divps
cmpsb
dec
aas
add
out
mov
mov
int3
jo
test
rorb
subl
repnz
sub
xchg
jbe
lcall
inc
mov
les
add
aam
push
leave
stc
xchg
cbtw
int3
sbb
sbb
sub
popa
cld
fnstenv
enter
pop
add
xchg
xor
xor
int3
jns
jmp
or
pop
cmpsb
testl
mov
add
xchg
add
pop
repz
add
xor
lock
xchg
test
dec
xor
jp
loop
fwait
pop
stc
jp
loope
dec
iret
xor
add
mov
dec
arpl
out
dec
hlt
jmp
cmp
pop
push
cmp
pop
add
add
je
lret
popa
icebp
and
mov
mov
add
cmp
out
loopne
aas
adc
cmp
jle
lcall
xor
fcoml
mov
arpl
xchg
cmp
mov
les
sub
push
hlt
shl
test
jecxz
ljmp
mov
cmpb
xor
mov
or
mov
sbbb
xchg
or
dec
push
sub
cli
outsb
loopne
test
orb
xchg
call
lods
movsb
inc
adc
or
pushf
mov
orb
das
nop
mov
mov
fs
cmp
xchg
scas
xor
pop
pop
in
mov
aad
pop
push
popa
push
jae
mov
sarb
ret
popf
push
cmp
mov
je
out
popf
sti
cmp
xchg
cwtl
loope
mov
adc
push
js
sti
roll
loop
enter
rorl
push
outsl
add
dec
cmp
leave
jl
jle
test
mov
pop
xchg
stos
jg
push
mov
sub
imul
xor
aaa
jge
push
inc
std
pushf
jno
pop
mov
or
mov
les
mov
ret
test
lret
imul
outsl
mov
jbe
stos
xor
cmp
imul
mov
push
inc
cwtl
dec
sbb
mov
insl
dec
cmc
pop
mov
add
or
arpl
lds
dec
pop
cmpsl
and
sbb
sbbl
xchg
xor
pop
mov
jmp
pusha
loope
push
adc
fisubrl
mov
lret
das
clc
adc
and
xor
pop
jo
jmp
sbb
xor
das
mov
out
das
sbb
into
jb
cmp
clc
jg
push
in
imul
pop
shrb
cmp
bound
ret
aam
mov
push
testl
mov
fldt
adc
fisubs
or
or
xchg
fbstp
jno
dec
aad
imul
push
out
ja
std
cld
jbe
cs
fidivl
inc
icebp
cwtl
stos
test
sahf
push
xor
mov
ja
aas
mov
push
add
pop
pusha
push
insl
paddusw
outsl
push
mov
xchg
and
adc
insl
jo
aaa
ss
adc
xchg
inc
call
mov
add
inc
shll
add
inc
bound
aam
mov
cmp
inc
insl
ret
xchg
lahf
and
mov
xchg
and
in
gs
fistpl
sub
out
adc
jae
jmp
cmp
mov
ficompl
cld
stos
sub
cmp
sub
cmp
lret
and
xor
shrl
sub
pop
xchg
cli
fisttpl
out
in
mov
sbb
jmp
push
aaa
int3
inc
icebp
or
push
jbe
cmp
adc
add
loop
and
or
aas
gs
xor
inc
out
jnp
lds
push
loope
movsb
cmp
xchg
test
fcmovnb
aad
dec
jg
jne
inc
pop
ja
and
push
and
inc
mov
les
lret
jno
hlt
mov
mov
je
jg
fsubrp
pop
push
or
fwait
lahf
xor
inc
loopne
aaa
xchg
outsb
out
popf
lahf
mov
pushf
or
adc
pop
inc
ret
fcoml
jl
pop
sbb
xor
popf
out
and
or
cld
and
push
mov
push
lods
inc
pop
scas
sti
into
xor
pushf
fmuls
lods
mov
icebp
icebp
xchg
cmp
fwait
sub
fwait
adc
jno
test
outsl
shrl
lret
jb
rcrb
sub
mov
inc
insl
rorb
pop
negl
int3
cmc
hlt
mov
jo
lds
orl
aaa
dec
xchg
test
xor
pop
jae
sbb
cmp
cmpsl
add
or
adc
or
jae
insb
jae
mov
adc
rorb
mull
insb
pop
xor
sbb
cmc
sti
cli
or
loopne
mov
jecxz
movsb
mov
xchg
mov
xor
sub
inc
inc
xor
es
mov
push
sbb
sahf
mov
dec
and
stc
push
push
xor
ds
loope
aam
or
cmpsb
mov
sub
andb
or
and
push
pop
jg
or
fisttpl
out
fstps
sub
int
inc
pop
inc
repz
pop
lret
fwait
mov
and
cld
cmc
mov
jbe
pop
out
aaa
xchg
jge
int3
push
ret
pop
adcl
cmp
push
inc
sarl
fsubl
xchg
or
addl
push
mov
lods
jmp
add
popf
or
mov
loopw
pop
lret
jae
ss
push
sbb
adc
cmp
inc
lds
jbe
pushf
daa
or
xchg
xor
ret
pop
mov
pop
hlt
xchg
add
mov
or
lds
mov
lds
es
outsl
dec
cmpsb
adc
or
and
pop
jmp
ljmp
mov
push
sbb
mov
fcmovnbe
push
mov
ret
add
bound
stos
dec
cmp
sub
pop
scas
push
lea
xor
inc
repnz
rorl
sti
pop
xor
sub
in
addr16
adc
cmpb
enter
push
rcl
add
inc
fucomp
sub
cmpsb
fldl
cs
mov
in
pusha
ror
mov
jbe
pop
xchg
push
aad
cmpsb
ja
sbb
cmc
shrb
mov
push
decl
in
or
push
push
jl
cs
sbb
add
mov
fwait
icebp
jbe
stc
stos
dec
xchg
ja
xchg
mov
xor
and
and
cmp
fs
jmp
add
cmc
xchg
ja
inc
gs
jl
xchg
pop
clc
outsl
shll
push
divb
sub
push
ljmp
jno
or
mov
jge
mov
adc
test
xor
push
mov
fs
jns
test
les
push
push
daa
jl
xor
fwait
cltd
iret
xor
xor
neg
test
std
push
jl
or
test
negb
cs
jo
fmulp
add
out
int
cld
imul
das
lods
inc
das
test
fs
push
lret
push
ret
jbe
insb
pushf
push
fnsave
push
shlb
xor
sub
je
dec
scas
mov
add
inc
sub
bound
lahf
mov
out
jl
mov
test
outsl
mov
or
mov
mov
imul
addr16
sbb
dec
cmpsb
rolb
mov
stos
xor
ds
imul
xlat
loop
push
sarb
push
or
mov
jmp
pop
stos
cs
nop
lahf
mov
repz
or
and
lret
adc
in
pop
mov
mov
or
lahf
add
xor
jecxz
pop
lret
mov
add
inc
frstor
mov
mov
in
adc
mov
add
mov
sub
shl
mov
loop
inc
arpl
xchg
stos
jmp
clc
fnsave
or
mov
cmc
mov
scas
jb
cmc
push
jne
mov
adc
sbb
fdivrl
fnsave
push
mov
outsl
imul
jnp
inc
aas
aad
ds
dec
in
inc
imul
pop
pop
mov
out
ljmp
clc
mov
sbb
fwait
or
mov
mov
cltd
inc
loop
sbb
mov
jns
popa
pop
mov
sbb
xor
push
xor
sbb
push
lock
cmp
add
mov
mov
insl
pop
addr16
int
mov
cmp
fs
adc
sbb
mov
insl
fcoms
adc
shrb
push
test
hlt
inc
aaa
mov
stos
lea
sbb
add
fbstp
push
dec
and
stos
inc
jp
mov
xchg
push
std
add
repnz
jo
inc
lods
imul
lds
dec
push
out
inc
sbb
cmc
mov
fstl
cmp
dec
xor
xchg
dec
loope
jp
mov
into
adc
jo
xor
shl
jmp
sbbb
imul
imul
adc
mov
ret
mov
ret
xchg
xchg
imul
sub
jecxz
jo
inc
mov
jle
jb
in
fnstcw
push
out
fbstp
pop
sub
iret
pop
xchg
cmp
push
or
fbstp
pop
test
mulb
add
lret
mov
mov
sbb
dec
xchg
add
cmp
jl
xchg
adc
xchg
jecxz
jbe
jge
aam
test
inc
ss
push
fstpt
add
ret
test
push
pop
daa
loope
pop
jnp
push
lods
jns
cmovne
repz
or
cmpsb
cmp
mov
mov
fs
int
dec
sub
ja
mov
shll
dec
lds
loope
and
cmp
sbbl
int3
movsb
repnz
xchg
dec
adc
enter
xchg
jmp
testl
xorb
sarb
scas
push
xchg
mov
nop
cmp
pop
repnz
imul
mov
mov
mov
xchg
andl
mov
scas
test
aas
imul
dec
fsubrs
notb
push
sub
push
stos
adcl
lea
pop
repnz
xor
adc
inc
adcb
push
xchg
mov
out
jae
mov
pop
js
out
dec
cltd
loope
or
sub
into
jmp
xor
outsl
push
sar
int
les
aas
xchg
sbb
clc
pusha
mov
mov
dec
out
jp
cltd
pop
cli
insl
add
lock
fwait
test
dec
es
sbb
sbb
dec
sub
jle
cmp
insl
dec
cmc
insl
jge
shl
dec
xchg
xor
jmp
jbe
les
xchg
fnstenv
popa
out
dec
or
mov
add
fadd
test
add
insb
adc
pop
dec
das
addr16
sub
push
icebp
addl
lea
add
movsb
stos
test
testl
lret
xchg
imul
xor
mov
inc
adc
dec
mov
lcall
in
push
jmp
mov
cmc
mov
shll
dec
mov
pop
hlt
mov
fnstcw
lret
stos
jbe
add
shlb
jbe
xor
xchg
push
mov
dec
lea
jge
mov
dec
ret
pop
inc
cmpsl
xchg
and
bnd
dec
aas
cli
and
loopne
les
mov
jmp
jne
jo
jnp
bound
xchg
sbb
imull
int
pop
mov
in
jbe
pop
hlt
mov
fisubrs
ret
stc
cmpsb
xchg
sarl
cld
pop
stos
test
lahf
pop
call
cmp
mov
cltd
mov
pop
pop
sbb
xlat
xchg
outsb
test
stc
pop
or
and
pop
push
daa
adcb
add
dec
sbb
sub
je
repz
popf
xchg
out
xchg
in
shll
mov
fcoml
in
inc
fwait
cs
lret
lret
stos
in
jb
cmp
or
xchg
pop
pop
mov
lret
or
ret
inc
cmp
jp
jge
pop
pop
cld
lcall
in
pop
adc
in
stos
add
arpl
js
and
in
outsl
jnp
in
inc
jno
sub
das
lods
and
aaa
call
lea
stc
mov
data16
sbb
ffreep
pop
sub
push
data16
add
xor
mov
adc
lcall
xor
jl
into
mov
sbb
mov
sbb
loop
cld
push
jmp
ficoml
fwait
ret
shll
lods
addr16
popa
sub
adc
nop
cmp
psubsw
inc
cmp
jbe
and
les
lods
pop
dec
cmpl
xchg
or
mov
jns
fucomp
test
mov
push
int
lock
aas
enter
cmp
add
mov
pop
xorb
jp
cmpsl
mov
cmp
sbb
pop
repnz
lahf
ss
cs
jg
jb
jae
iret
mov
mov
ret
hlt
push
arpl
js
shlb
inc
and
mov
les
adc
lock
pop
sbb
sti
cmp
sub
mov
add
sub
mov
xchg
arpl
arpl
sub
das
mov
and
adc
or
jne
xchg
dec
mov
gs
sub
jae
and
pop
mov
and
lods
lcall
and
xor
mov
adc
daa
sti
cmp
sub
pop
and
icebp
push
xchg
popa
leave
in
movsb
push
and
popa
sahf
std
sub
xor
jno
cmpsb
pop
ljmp
jne
test
sub
mov
aam
int3
lods
xchg
cli
sbbl
movb
aaa
popf
js
xchg
sbb
and
push
xor
xchg
push
lret
scas
ret
cld
xor
and
sub
dec
stos
leave
leave
pusha
mov
mov
dec
fcomps
jg
pop
scas
fisubl
outsb
addr16
ds
mov
xchg
mov
jg
jecxz
pop
dec
xchg
popf
pop
mov
adc
sub
xchg
cmp
sub
add
adc
jecxz
popa
dec
cwtl
cmpl
ljmp
and
pop
xchg
push
xchg
stc
ret
into
outsl
ret
inc
adc
fiadds
addr16
negb
mov
jbe
inc
or
jae
out
mov
push
xchg
pop
inc
mov
xchg
adc
jbe
cmc
dec
mov
mov
sti
cwtl
das
sub
push
dec
pop
ret
mov
outsb
or
or
jns
call
fisubrl
test
sti
stc
cmp
jp
push
fistpll
fiadds
dec
xchg
fdivs
loop
shll
scas
pop
cli
push
add
inc
in
test
in
lock
push
outsb
push
or
sarl
mov
fldcw
mov
dec
loop
jge
inc
scas
or
add
pusha
adc
je
mov
sahf
rclb
jb
ret
fincstp
lcall
pop
and
xchg
call
sbbb
movsl
insb
pmaxub
pop
insb
ds
mov
add
push
and
testl
mov
ficompl
mov
cmpsb
jge
mov
mov
loopne
sub
mov
dec
mov
jge
cmp
sub
sbb
and
mov
rolb
push
xchg
jmp
mov
xor
and
push
adc
mov
lods
xlat
and
push
mov
xchg
sub
ja
mov
push
push
in
xchg
mov
mov
and
mov
push
popf
mov
and
push
scas
mov
loopne
ficompl
nop
stos
clc
scas
setno
push
jecxz
xlat
sub
add
xor
adcb
xchg
dec
mov
outsl
lcall
lret
mov
pop
fstps
fadd
mov
cmp
xor
cmp
or
pusha
pushf
mov
sti
mov
xchg
push
enter
push
cmc
adc
cmpsb
ja
ss
push
cli
lret
push
shll
add
stos
fsubrs
lods
adcb
popf
dec
icebp
xchg
push
jmp
mov
mov
aam
loop
test
dec
ficomps
xchg
test
cmpsl
mov
cld
lcall
sbb
adc
cwtl
push
jae
or
mov
leave
pop
cmp
jge
adc
sub
icebp
cmpsl
or
pusha
pushf
adc
xor
xchg
cmpsb
push
cmp
rolb
inc
scas
or
lcall
xchg
movsl
dec
push
cmc
cmp
xchg
lret
or
fdivs
pop
fisttpll
fidivrs
mov
push
ljmp
push
enter
ja
adc
pop
add
std
lret
les
xchg
jg
outsb
lods
or
test
lods
add
test
inc
jns
shrb
inc
icebp
mov
cs
pusha
lcall
popf
adc
jno
icebp
lret
loopne
clc
pushf
dec
pop
pop
xchg
cmp
ss
lcall
pop
adc
aam
notb
inc
fdivs
mov
push
pop
insl
divb
xor
cmp
sub
movsb
in
inc
sbb
push
sbb
cmp
or
lea
ja
adc
pop
icebp
cmp
xor
xchg
aaa
add
xchg
pop
push
dec
in
ja
xchg
sub
cwtl
mov
out
movsl
das
adc
lock
into
cmp
ss
hlt
mov
mov
sbb
xchg
les
hlt
insl
inc
test
inc
rcrl
ja
xchg
sub
cwtl
clc
lock
sti
and
aas
dec
xor
inc
int
mov
pop
divb
pop
adc
daa
inc
xchg
xor
lahf
push
aaa
pop
cmp
iret
insl
mov
faddl
inc
dec
adc
push
or
mov
ds
imul
cmp
mov
inc
je
les
roll
in
xchg
mov
lds
sbb
fisubs
cmpsl
lock
stc
in
jnp
not
insb
aam
in
jns
sbb
or
movsb
imul
pushf
movsl
jmp
or
fimuls
cmp
mov
sti
insl
xchg
fstl
aas
add
arpl
ficomps
add
gs
mov
sbb
mov
sbb
pop
pop
cli
call
pop
lcall
test
pop
repnz
test
fisubrl
sub
xchg
adc
ljmp
iret
lods
mov
xor
mov
shlb
pop
dec
fstps
cs
pop
popf
lods
mov
es
out
cmp
push
cmpsb
insb
mov
lahf
negb
inc
leave
mov
mov
xchg
test
rcrb
sub
cmp
sub
lahf
inc
stc
ss
mov
xorl
lods
mov
lds
into
andl
and
push
loope
sahf
pushf
outsl
scas
inc
repz
lods
jecxz
int
lret
fdivs
xchg
jno
inc
push
daa
mov
mov
fimuls
mov
push
sub
jmp
or
pop
xor
int
and
mov
adc
mov
insb
cmp
pop
xor
pop
scas
repnz
push
faddl
add
cmpsl
ja
pop
lods
mov
hlt
mov
push
pop
xchg
push
int3
jg
jle
fs
xchg
in
and
cmc
sbb
adc
sub
rcrb
loope
mov
xor
xchg
dec
xchg
test
or
cmpsb
adc
aad
sub
xor
lock
lds
leave
divb
xchg
sub
push
cmp
inc
icebp
mov
into
mov
arpl
scas
les
stos
cmc
shl
int
fwait
scas
mov
jbe
stos
push
and
jno
ja
fnstenv
and
bound
idivl
pop
pushf
ljmp
insl
ds
pusha
inc
faddl
mov
fcompl
pusha
negb
jp
rcrl
movsb
pop
lods
adc
pop
hlt
outsb
add
movsb
rcll
fadd
shll
xor
fs
daa
outsl
dec
test
jb
inc
fcomps
mov
pop
mul
or
cwtl
scas
int
push
repz
faddp
cmp
cmp
sti
and
cmp
sbb
sbbb
and
jl
shrl
dec
das
mov
xchg
shl
shrb
mov
and
or
or
mov
popf
jg
lods
inc
xchg
pop
popf
ret
mov
sbbl
jo
test
jb
fmuls
int
adc
test
mov
mov
shl
cmc
dec
fldl
add
fdivl
dec
lods
aas
mov
lods
mov
lock
jecxz
shll
enter
rcl
ret
ret
stc
cmp
hlt
jno
dec
gs
xchg
ljmp
dec
ja
js
decb
adc
leave
cltd
push
pop
mov
sbb
pop
lods
and
fwait
in
into
push
mov
cli
adc
inc
push
sbb
cwtl
dec
jmp
std
out
inc
pop
jge
cmp
in
ret
repnz
and
xor
test
xchg
lods
xchg
inc
int3
mov
mov
insl
sbb
adc
inc
push
aad
je
repz
popf
das
mov
das
jl
cwtl
fdivrs
adc
jle
inc
mov
pop
out
sbb
repnz
and
rolb
and
adc
pop
sub
mov
roll
pop
scas
cmp
lods
mov
and
ljmp
jnp
enter
cmp
adc
movsl
sub
dec
mov
enter
out
arpl
out
std
adc
cs
sub
popf
pop
pop
jecxz
pop
dec
jmp
orl
insl
cmpsb
sbb
cld
dec
mov
mov
je
testl
dec
add
out
test
aad
dec
pop
xor
mov
stos
mov
or
xchg
cmp
add
es
stos
ds
pop
or
xor
sub
mov
in
js
stc
ret
sub
mov
push
cmc
loop
jbe
sbb
xchg
call
and
movsb
sti
faddl
and
cs
lea
hlt
mov
out
push
cs
popa
pop
xchg
shlb
das
push
out
push
stos
inc
repz
outsl
ds
leave
inc
inc
rol
sub
and
popf
aad
scas
leave
jns
and
daa
sbb
ror
fsin
loope
cmp
pop
jno
or
jne
das
mov
dec
ja
mov
sbb
inc
fcmovbe
or
gs
sbb
leave
inc
fistpll
repz
mov
xor
sub
imull
pop
sub
sbb
mov
data16
mov
fucomp
xchg
inc
mov
jb
lahf
inc
mov
and
cs
sbb
or
in
shll
inc
jl
pop
xor
sarw
sub
fadd
es
in
sbb
jmp
sbb
into
lock
insl
push
xchg
scas
add
or
dec
mov
in
mov
aas
sbb
mov
lock
push
pop
push
pop
fstps
jo
and
insl
mov
jbe
in
je
sub
cmpsl
out
dec
shl
cmp
test
sbb
mov
or
mov
xchg
int3
pop
jmp
mov
dec
in
loop
lods
cmp
loope
push
xchg
add
pusha
xchg
cwtl
gs
imul
stos
xlat
sarb
stos
and
das
lods
lea
idivl
sbb
jmp
push
pusha
fldt
sbb
cmp
mov
mov
je
jl
out
sahf
and
cmp
mov
xlat
push
int3
adc
es
dec
fsubrl
fsubrl
sbb
imul
mov
imul
aam
stos
cmpsb
xchg
mov
loop
mov
sbb
adc
cmp
cmpsl
ljmp
inc
insl
repz
mov
in
inc
sub
or
into
gs
push
add
pop
mul
loope
mov
xchg
jnp
enter
addr16
xchg
jle
add
in
jmp
or
push
cmp
xchg
jne
dec
negl
loop
incb
xchg
sbb
iret
jmp
addb
mov
stos
je
xchg
mov
into
and
jnp
jae
repz
mov
das
cmp
add
orb
test
jle
xor
in
jae
fs
mov
sub
xchg
scas
inc
jmp
mov
out
dec
lea
cs
mov
mov
cmp
aaa
cmp
lcall
pop
mov
sbb
xchg
dec
dec
xchg
cli
mov
in
mov
or
xor
cmpsb
jns
dec
sahf
xorl
push
ds
mov
add
inc
aaa
fcmove
sbb
lea
aaa
cli
scas
or
popf
ret
out
es
add
scas
mov
mov
inc
jmp
xchg
fmull
xor
xchg
adc
xchg
jae
dec
outsb
addl
loope
lock
int3
arpl
push
jmp
jno
insl
jecxz
xor
mov
enter
cmpsl
js
cs
out
enter
xor
jmp
cs
adcl
neg
sbb
mov
mov
stc
xchg
jg
mov
sbbb
fadds
cs
sub
js
outsl
xor
js
cmp
cmp
mov
iret
jmp
repz
test
scas
xchg
in
in
repz
push
mov
pop
sbb
popf
or
add
movsl
cld
fcompl
ds
add
push
loope
adc
mov
mov
dec
popf
dec
hlt
pop
mov
es
mov
inc
imul
push
dec
dec
sub
inc
xchg
dec
std
loop
outsl
in
push
je
dec
mov
jae
mov
sub
push
jge
cltd
mov
dec
fstpt
ja
call
and
mov
xchg
adc
cmpsl
xor
mov
jno
shlb
mov
popa
decb
xchg
add
pop
dec
bound
xchg
add
ret
push
popf
adc
xlat
xor
cmp
stos
mov
mov
cld
sub
rcll
out
jg
mov
fstl
dec
aaa
aas
adc
stc
lea
data16
mov
sub
ds
pop
pop
fsubp
mov
cs
fisubl
sbb
lret
xor
dec
iret
push
xchg
out
mov
repnz
mov
scas
out
clc
cwtl
cwtl
imul
scas
out
add
jmp
test
shlb
test
subb
call
adc
inc
xchg
sbb
aas
mov
mov
adc
cltd
xor
sbb
inc
or
and
out
cs
mov
add
mov
inc
inc
je
dec
jecxz
xchg
mov
dec
cmpsl
pushf
fwait
int
aad
cmc
inc
lock
push
aad
inc
mov
sub
repz
pop
xor
divb
fs
mov
and
shlb
cmp
cli
adc
movl
dec
pop
js
test
mov
sub
sti
inc
or
fists
xor
iret
clc
fldenv
sub
sub
aas
lcall
pusha
in
fwait
jbe
jp
mov
not
lret
pop
out
jne
sbb
and
cmpsl
ds
mov
cs
pop
jmp
jns
add
xchg
pop
adc
jne
pop
cmpsl
popa
jmp
ja
pop
movsl
jne
mov
push
and
or
out
in
leave
enter
jmp
out
call
addb
lcall
adc
adc
lret
mov
lods
fxch
xlat
or
cli
inc
leave
dec
sbb
mov
mov
hlt
mov
in
adc
lret
push
jo
xchg
mov
lahf
arpl
jg
xor
mov
adc
test
stc
out
cmpsl
stos
jnp
aaa
mov
fbstp
pop
dec
test
nop
push
popf
cmp
xor
cld
lcall
in
pop
cmp
jmp
jge
fwait
mov
rcr
out
cld
push
adc
pop
mov
adc
push
aam
lock
jmp
das
rclb
inc
mov
enter
lahf
lods
cmc
pop
pop
push
aaa
lret
inc
and
fwait
scas
lds
xchg
sub
adc
mov
scas
xchg
mov
rol
cmpsb
cmc
and
and
scas
xchg
lcall
loop
stos
adc
das
lret
imul
xchg
ss
in
gs
xor
iret
push
out
aaa
pop
xor
out
push
dec
insl
repz
popf
or
dec
mov
sub
lret
insl
add
cmp
jecxz
pop
adc
lods
xchg
mov
pop
test
push
incl
loopne
lds
test
jp
shr
or
dec
dec
fdivl
adc
repz
scas
outsb
inc
sub
ja
jno
lds
sub
jl
push
fcompl
push
jl
adc
xor
and
shll
inc
fstpl
insl
sbb
inc
dec
nop
or
in
dec
movsb
pop
cmp
mov
xchg
mov
push
sbb
test
mov
test
xlat
outsb
mov
xchg
sub
mov
mov
and
cli
push
sbb
push
std
lahf
add
xchg
xchg
inc
pop
lret
add
or
cwtl
imul
cmpsl
push
xchg
test
push
xor
out
jg
adc
aad
cli
xor
push
fwait
mov
xor
mov
add
cmp
shlb
mov
call
mov
out
cmp
cld
insl
subl
push
mov
iret
inc
mov
int3
aam
insl
fdivrl
hlt
xchg
lock
mov
es
jnp
inc
ja
stc
mov
clc
push
ja
cmp
sub
xchg
cmpsb
xor
add
in
dec
sbb
push
adc
outsl
lret
lock
pop
jmp
scas
dec
pushf
push
stc
inc
mov
aas
fwait
lds
fs
in
mov
out
out
inc
neg
mov
jnp
js
in
insl
shlb
xorl
and
push
mov
inc
push
push
fstpl
sti
jmp
dec
out
adc
insl
sub
shlb
cmp
jecxz
mov
sahf
stos
jbe
or
push
scas
sub
sub
sbb
jns
mov
or
adc
jno
or
mov
sub
pop
in
inc
mov
cmp
sub
mov
jl
aam
inc
ficomps
out
cmp
fnsave
xchg
gs
adc
cld
fwait
xor
xor
mov
ljmp
adc
ss
mov
cmp
jecxz
cld
xchg
lret
repz
mov
lods
adc
mov
in
cwtl
aad
mov
test
xchg
pop
hlt
and
pop
lcall
lock
js
in
push
negl
adcb
mov
shr
lods
cmp
insb
push
inc
fcoms
sbb
mov
mov
sbb
inc
or
mov
cmc
mov
lods
pop
mov
fucomi
jecxz
popf
cld
fs
lods
dec
lret
cltd
mov
or
mov
jmp
test
stos
or
mov
xor
loope
cmp
sti
pop
adc
fdivrs
mov
scas
fcmovu
hlt
pop
inc
inc
pop
mov
mov
in
repz
ret
dec
jecxz
lock
and
xor
sub
jo
fsubl
leave
loope
in
jl
jne
add
and
cli
fstpt
xor
pop
insl
or
insl
stos
adc
fwait
jg
dec
es
mov
jp
jp
js
fbld
sub
xor
xor
sbb
mov
push
and
ret
jnp
int3
mov
imul
lods
xchg
push
call
shrl
lret
mov
out
push
sahf
push
inc
lahf
test
sbb
mov
outsb
xchg
adc
sub
repz
std
mov
mov
lods
pop
lcall
pusha
addb
add
push
shrl
and
lahf
sbb
lret
leave
bound
mov
mov
fimull
movsl
lret
repnz
in
scas
xor
add
pop
inc
pop
and
mov
out
xchg
dec
mov
mov
add
out
push
inc
insb
aaa
pop
int3
xchg
mov
sbb
pop
rcpps
test
and
or
bswap
aaa
xchg
pop
popf
fwait
push
push
in
pop
mov
call
xor
hlt
mov
mov
pusha
in
test
jb
dec
dec
out
mov
ja
jo
ja
dec
loop
into
mov
in
in
out
test
cmp
mov
or
dec
lea
das
mov
push
xorl
ja
push
inc
je
shrb
movsl
lds
xchg
leave
jb
ret
jae
mov
dec
popa
enter
adcb
lret
cmp
or
mov
adc
gs
sbb
push
push
icebp
mov
fwait
jecxz
repz
adc
dec
pop
data16
pop
mov
negl
or
movl
mov
mov
shll
jmp
insb
test
mov
pop
frstor
cmp
imul
jne
test
pop
pop
lock
sarl
add
dec
neg
call
fiaddl
mov
test
mov
cmp
sbbl
lock
push
push
xchg
lods
insb
xchg
repnz
scas
push
fcomi
ud2
fiaddl
xorl
jmp
sti
and
sti
dec
mov
aaa
add
bound
clc
cmpsl
xchg
ja
xchg
adc
mov
nop
mov
test
fcomi
or
push
adcb
arpl
loopne
movsl
pop
xchg
or
push
mulb
outsb
das
push
sahf
xchg
lcall
and
js
test
mov
xor
lods
and
xchg
pop
xchg
push
hlt
add
mov
sub
sbb
fldt
mov
fidivrs
subl
cltd
inc
std
divb
mov
xchg
les
or
test
insl
pop
daa
pop
loope
outsl
dec
ljmp
sbb
outsl
lds
jmp
movsb
bound
mov
sar
pop
lea
mov
jne
push
xor
jl
adc
xor
ret
rclb
xor
xor
add
icebp
sbbl
in
enter
lock
fisttps
dec
cmp
shll
jne
jecxz
jae
xor
and
imulb
jns
or
or
jae
pop
xor
cmp
jecxz
jmp
jae
lock
pop
pop
cmp
xor
dec
gs
sbb
into
pop
lods
sub
inc
jbe
int3
cmpsl
es
pop
repz
push
sti
mov
movsl
push
hlt
repz
mov
dec
dec
aam
hlt
cmp
dec
cmp
jbe
cmp
xchg
jo
into
cmpsl
sub
test
add
mov
fdivrl
jns
or
push
pop
cltd
je
dec
popf
mov
es
das
cs
cli
cmpsl
ds
pop
icebp
nop
dec
lret
shl
mov
int
clc
fs
jecxz
mov
jecxz
jmp
outsb
stc
fwait
xchg
fmul
sti
inc
sbb
add
xor
pusha
sub
repz
roll
mov
fnstsw
add
jo
dec
pop
gs
jns
out
push
jmp
rcll
inc
inc
pop
jae
or
mov
adc
sub
push
in
imulb
xor
daa
bnd
inc
fwait
push
rorb
mov
pop
insl
mov
pop
ja
jno
out
jle
xchg
in
decl
push
mov
movsb
pop
shll
inc
mov
test
icebp
iret
subb
fmuls
mov
and
rcll
mov
xchg
pop
xor
daa
jge
mov
jl
push
sub
push
decb
mov
out
xlat
outsb
daa
inc
and
and
mov
dec
jg
mov
pop
xchg
adc
xchg
xor
dec
adc
fs
repz
or
mov
aad
sub
scas
addr16
or
repnz
in
ljmp
cs
subl
or
or
popf
cs
cmp
fwait
insl
pop
lret
lods
adc
jge
or
mov
mov
dec
loop
lret
push
jmp
lock
test
dec
jl
mov
xor
ja
aaa
fdiv
cmp
testl
xchg
mov
int
pop
pop
mov
fs
stc
ret
std
xor
out
daa
ror
faddl
dec
add
inc
jnp
inc
icebp
in
push
pop
sbb
sbb
mov
pusha
pop
adc
popa
xor
ss
and
add
dec
push
inc
xchg
add
leave
xlat
mov
mov
add
xlat
adc
shlb
lahf
cmc
sub
outsb
jmp
aaa
jmp
cmc
aaa
mov
jge
lds
dec
push
push
in
push
and
clc
in
sti
xor
cli
or
push
ss
data16
pop
pushf
data16
dec
inc
mov
addr16
dec
cmpsl
pusha
fwait
lret
test
aad
or
mov
mov
or
popa
fsubrl
sbb
or
xchg
insl
in
inc
xchg
add
push
mov
scas
sub
ljmp
in
lock
orb
mov
inc
test
pop
clc
sub
add
mov
cli
fistps
jle
test
idivb
out
pop
ficoms
scas
inc
leave
adc
mov
lahf
push
push
fsubs
fildl
push
jmp
mov
cwtl
out
test
bound
subb
cmp
and
push
shrb
xor
cmp
inc
cltd
mov
push
adc
or
push
sbb
pusha
dec
lahf
sbbb
scas
imul
pushl
ljmp
in
inc
mov
add
inc
dec
lds
cmc
repnz
xor
xchg
push
outsl
xor
jge
add
or
mov
pushf
or
cmpsl
cmp
inc
rcl
mov
shl
or
aaa
inc
sar
cmp
mov
lds
inc
dec
pop
out
sbb
add
dec
stos
sub
sbb
mov
xor
pop
mov
ret
push
outsb
add
mov
ret
gs
into
mov
add
das
mov
addr16
cmpb
inc
test
mov
gs
sarl
fcompl
jb
mov
sub
bound
sar
neg
out
test
mov
gs
mov
int
lahf
fldt
cmp
ja
sti
mov
or
push
enter
shlb
inc
push
iret
nop
adc
dec
xor
or
cmpl
mov
mov
test
shll
mov
stos
outsb
mov
pop
dec
mov
jb
ljmp
push
jno
popl
add
push
aam
fisubrl
jo
lock
jecxz
jp
mov
and
pop
cwtl
insb
push
cltd
test
pop
push
fsubrs
int3
fcomip
dec
bound
lcall
cmpsl
xor
push
out
xor
sub
and
push
aam
test
jno
sub
dec
xchg
fs
icebp
xchg
sub
icebp
pop
enter
test
imul
les
hlt
dec
imul
mov
nop
adc
push
jmp
xor
adc
jbe
roll
stos
mov
mov
insl
ja
or
imulb
out
sbbl
mov
ja
jno
inc
pop
inc
aas
stos
scas
mov
sahf
xor
or
cld
push
pop
xchg
xor
xor
cld
pop
add
call
pop
repz
call
adc
movsl
add
xchg
rcll
in
nop
fldt
sbb
or
push
ds
das
push
mov
mov
cld
mov
adc
xor
mov
stos
inc
fs
inc
mov
pop
push
dec
xor
cltd
push
daa
fsubl
out
std
int3
lea
aas
dec
daa
icebp
clc
loope
xor
popf
mov
testb
jb
xchg
popa
das
roll
jbe
or
out
adc
stos
xchg
dec
dec
inc
aad
push
cmpsb
out
scas
pop
cmc
jecxz
rep
rorl
stc
je
sarl
es
lods
inc
rcl
jecxz
imul
adc
addr16
pop
mov
jmp
into
insl
insb
repz
pushf
or
repz
push
sub
and
cs
imul
addb
in
divl
push
out
movsb
xchg
test
call
ds
jnp
sbb
pop
pop
mov
clc
jl
add
sub
push
xor
je
pop
fs
hlt
loop
push
jmp
mov
test
or
or
out
add
mov
and
mov
lret
push
les
cmp
dec
movsb
xchg
or
mov
mov
leave
es
popf
sub
push
int3
gs
clc
xorb
fnsave
sti
pop
pop
jmp
hlt
mov
scas
fmuls
shrl
or
add
and
stos
push
mov
std
and
mull
imul
cmp
stc
push
stc
cmpsb
mov
add
cli
inc
insl
js
and
pop
in
clc
push
jg
xchg
lea
lahf
jg
fdiv
shlb
cmpsl
push
add
mov
jge
iret
jne
ja
leave
xor
mov
inc
cs
mov
int3
aas
mov
pop
and
ret
mov
int
and
pop
xchg
rorl
das
testl
lahf
push
jo
mov
int
dec
cmp
xchg
jecxz
dec
and
push
insl
mov
push
mov
or
je
mov
stc
and
mov
dec
sbb
push
dec
hlt
push
mov
testl
addr16
fimull
dec
sbb
flds
movsb
adc
xchg
dec
mov
icebp
inc
lea
scas
faddl
cltd
or
movsl
push
jecxz
insb
out
and
cltd
fidivl
dec
xor
data16
mov
insl
dec
dec
and
lret
mov
shl
jne
or
ds
out
xchg
xorl
lods
pop
jmp
icebp
push
and
xchg
lods
add
cmpsb
mov
mov
mov
mov
iret
pop
loope
lods
lods
data16
fimuls
cld
outsl
xor
imull
hlt
cmp
cmp
add
xor
jg
mov
movsb
out
inc
xchg
stos
aas
adc
xchg
sub
inc
enter
push
loopne
lahf
cmpsb
cld
js
cmpsl
mov
inc
sbb
pop
xchg
mov
aam
sbb
mov
ljmp
or
add
push
ljmp
mov
cwtl
imul
subl
lds
ja
mov
push
jb
pop
mov
out
jb
in
lea
iret
mov
ja
push
arpl
ror
or
sub
sbb
repz
aas
pop
xor
out
cmpsl
mov
jl
xchg
mov
cltd
xor
pop
inc
or
shll
or
mov
lahf
xchg
mov
loope
hlt
pop
pop
lods
pushf
pop
mov
push
dec
ds
jecxz
das
mov
dec
imul
data16
add
or
jnp
aaa
pop
popf
inc
pushf
mov
push
and
lahf
movsl
adc
shl
and
sbb
fcoms
dec
sbbb
jecxz
sbb
repnz
stc
aam
aas
jno
loop
jo
cmp
dec
pop
mov
lock
cmp
cmc
inc
sbb
test
mov
mov
xchg
sub
cmc
mov
iret
cmp
jb
nop
xchg
in
stos
sahf
push
pop
push
shlb
das
loop
ret
popa
cmp
lds
imul
dec
dec
clts
popf
inc
mov
and
adc
repnz
jnp
mov
adc
bnd
adc
sbb
cwtl
fsubl
and
dec
fsubr
jns
stos
ljmp
insb
sub
push
xchg
imul
and
fdivrs
ljmp
push
call
dec
or
fcmovne
adc
sbb
dec
out
xlat
notl
lds
sbb
cmp
mov
mov
jbe
push
mov
add
sub
inc
daa
daa
jp
dec
adc
sub
test
cli
ljmp
sub
cli
mov
inc
mov
mov
push
repnz
bound
adc
push
cmp
add
iret
popf
orl
cli
sub
dec
inc
pop
push
dec
push
push
js
mov
sub
sahf
and
sub
inc
data16
cmp
push
les
ret
in
ljmp
xor
data16
out
enter
fwait
mov
lds
dec
push
flds
pusha
cmp
mov
inc
fdivrs
push
in
pusha
mov
xchg
test
pop
movsb
shrb
push
mov
cmp
and
insb
lods
test
mov
cltd
mov
sbbb
fidivrs
icebp
mov
cli
sarl
mov
inc
pop
fcmovb
push
adc
int
leave
sub
sbbl
fiaddl
jge
jp
adc
add
cld
dec
and
mov
sbb
dec
jo
gs
imul
cmp
adc
testb
repnz
call
int3
inc
mov
iret
fucomi
push
or
sti
popa
xor
mov
sahf
mov
xchg
add
orl
jge
arpl
mov
pop
xchg
xchg
and
test
inc
fstl
mov
sub
cmp
cmpsb
ja
xlat
lahf
and
sbb
mov
lods
jb
sbb
std
sub
int
mov
pop
icebp
and
jp
bnd
mov
sbb
gs
mov
movsl
sub
int3
sbbl
jns
sub
fsubrl
xchg
scas
gs
mov
add
rol
mov
inc
and
cld
inc
fsubrs
arpl
loop
fsubrl
and
enter
bound
inc
push
inc
fbstp
push
mov
out
dec
cld
cmc
sbb
insb
and
out
ret
xor
sbb
lahf
push
mov
in
pop
cmc
ror
fnsave
int
rol
inc
sbb
iret
movsl
jp
enter
cli
mov
mov
lods
scas
sbb
lock
dec
pop
imul
je
daa
inc
fcompl
dec
stos
cmp
out
pop
and
fsubs
sub
cmc
xor
cmp
add
std
or
sub
pop
cmc
xchg
adc
xchg
test
mov
mov
mul
jnp
scas
pop
imul
cmp
mov
cmpsb
bound
xchg
add
dec
iret
loop
into
pop
gs
xchg
mov
jbe
xor
add
out
dec
cmp
mov
jnp
push
js
mov
add
push
mov
mov
xor
loope
sub
mov
mov
adc
or
scas
in
ss
push
call
ljmp
xchg
inc
repz
int3
lret
dec
mov
jnp
xor
ds
sub
jge
pushf
mov
and
lods
pop
and
imul
or
add
aad
rcr
xchg
ficomps
int
int3
icebp
dec
or
pusha
add
test
adc
inc
test
lret
pop
imul
xchg
aam
xchg
stos
sub
pop
into
inc
test
sbb
rcrl
jo
push
and
ja
js
shlb
es
add
pop
and
pop
xor
xor
and
fiaddl
out
imul
popf
push
pushf
adc
insl
dec
add
aas
jo
mov
pusha
fisubl
mov
sti
sub
in
rcl
xchg
andl
add
jbe
xchg
and
adc
add
popa
lcall
push
insl
shrb
sbb
out
orb
jmp
mov
in
mov
into
dec
mov
inc
fsubrl
out
js
fnstenv
or
divl
adc
push
and
xor
call
sahf
sub
inc
loope
xchg
sti
scas
sub
cwtl
push
sbb
adc
mov
test
inc
jg
inc
mov
aad
sbb
out
xlat
pop
ljmp
pop
cli
clc
ficoml
shll
mov
inc
nop
dec
jle
loop
aas
dec
add
lret
and
rol
cmp
lahf
xor
enter
mov
fistpl
into
stos
adc
lret
fwait
sub
push
out
ljmp
add
jg
cmp
into
fdivl
repz
xchg
and
addr16
aad
cltd
jo
mov
outsl
xor
fsubp
subl
mov
mov
fbstp
sub
sub
test
imul
jge
shrl
orb
push
sub
jb
in
mov
mov
pop
flds
fsts
xchg
adc
loop
sbb
mov
test
or
call
pop
pop
out
and
insb
lock
pop
out
or
and
sub
mov
fbstp
arpl
mov
inc
xlat
cmp
pop
dec
push
push
nop
fnstenv
xchg
xor
pushf
addr16
shr
mov
out
aaa
xor
std
les
jbe
clc
adc
or
xchg
and
jne
stc
pushf
pop
fsubrs
outsl
mov
or
repz
or
enter
lock
add
pop
gs
xchg
sub
add
daa
pop
inc
clc
lret
cmp
xchg
push
stos
mov
mov
push
rcrb
mov
ljmp
enter
fucomp
jp
cltd
pop
loopne
stos
xor
or
sbb
es
add
push
mov
cmp
xchg
data16
sbb
int3
clc
ss
inc
outsb
dec
mov
jcxz
rorb
mov
inc
mov
xchg
adc
pop
adc
dec
data16
shrb
pop
or
daa
int
data16
push
pop
neg
daa
cmpl
je
mov
dec
cltd
or
sti
cmp
sub
fsubrp
mov
cld
in
sbb
sbb
pop
xchg
pop
xor
test
pop
lods
fucomp
jecxz
jae
mov
xor
fldenv
std
pop
addr16
lahf
inc
xlat
test
adc
push
lret
sub
xor
jns
sbb
mov
outsb
jne
xchg
inc
imul
jp
outsl
xorl
arpl
sub
in
mov
enter
pop
jmp
cmp
and
xor
and
sub
cs
adc
jo
xchg
cmp
test
pop
xchg
pop
imul
mov
add
dec
in
cltd
into
imul
incl
movsb
idivb
arpl
mov
add
mov
adc
aas
add
orl
bound
cmpsl
pop
cmpsb
pop
dec
sub
mov
jbe
xchg
out
notl
and
cli
frstor
pop
popf
pop
rcrl
nop
dec
out
pushf
sbb
lcall
loope
mov
stos
mov
push
fcmovbe
call
sub
test
lcall
add
loop
out
mov
fimuls
xor
das
fs
push
mov
xchg
dec
cmp
mov
pop
arpl
aad
cmc
mov
and
add
jno
xchg
jecxz
call
sbb
aad
pusha
scas
push
jbe
fbstp
in
iret
data16
xchg
xlat
js
test
lahf
or
push
mov
pop
in
jns
repz
adc
scas
and
xlat
iret
xchg
out
jne
icebp
xchg
inc
push
rorl
jno
call
fmull
ror
test
sahf
insb
loope,pt
loope
cmp
imul
jnp
imul
inc
dec
xor
xchg
bound
negl
data16
push
and
cs
adc
xlat
mov
inc
mov
rclb
inc
shlb
xor
cwtl
lods
xor
xor
icebp
xorl
fnsave
dec
ljmp
inc
dec
sbb
xlat
inc
les
int3
addr16
jp
ljmp
repz
cmpsb
jg
mov
mov
inc
push
push
mov
xor
movsl
mov
shlb
insl
pushf
jns
stc
pop
and
add
fwait
jmp
rorb
or
dec
adc
pop
fdivl
and
in
lds
rorl
jge
ret
loop
dec
out
rorl
jg
mov
or
cmp
mov
fwait
lgs
adc
inc
loopne
sbb
push
negl
mov
xor
jge
adc
xchg
mov
and
out
daa
adc
push
insl
aas
shrb
scas
cmp
lret
loopne
test
inc
imulb
das
mov
into
lret
jp
int
or
jmp
aam
adc
js
push
daa
or
jne
rorl
xchg
repz
fistpl
xor
in
mov
sub
icebp
ret
fwait
lea
adc
in
mov
xchg
jnp
and
orb
enter
repnz
jnp
jge
mov
add
xor
js
adc
cmp
dec
pop
in
push
pop
imul
popf
sbb
mov
lea
sahf
sbb
cmp
pusha
pop
inc
fwait
call
push
sbb
adc
out
stos
jge
or
mov
cmpsb
loopne
mov
mov
hlt
bound
cmpsl
mov
or
mov
popa
in
and
fisttps
mov
aam
jmp
nop
or
add
jb
rcrb
cmp
cmp
sbbb
loope
pop
test
cmp
dec
daa
inc
jecxz
dec
pop
xor
mov
pop
mov
fsubr
lret
cld
pinsrw
sbb
lods
lretw
dec
add
mov
push
js
je
add
sbb
pop
push
mov
pop
jecxz
daa
je
xor
mov
jnp
or
sarb
pusha
arpl
push
jecxz
ret
adc
jle
jnp
inc
mov
xor
arpl
cmp
mov
stos
and
inc
push
sub
aaa
gs
sub
movsl
dec
daa
lcall
inc
cld
iret
loopne
xchg
mov
cmp
stos
sbb
sarl
jg
das
vpunpcklqdq
xor
in
or
xchg
out
cmpsl
ds
aad
and
pop
sub
push
adc
or
xchg
nop
fbstp
mov
jl
and
sahf
cmp
out
js
divl
xlat
repz
out
popf
outsl
inc
inc
fnsave
adc
push
mov
aam
shll
or
sbb
cmp
xlat
outsb
mov
cmc
adc
lods
das
stc
pop
dec
stc
jl
xor
fwait
repz
sbb
ds
js
ret
dec
sub
cltd
leave
sub
cwtl
cmp
mov
jg
mov
ds
add
pop
stos
cmc
fbld
pop
dec
notl
push
test
jmp
shr
push
jbe
pop
fidivrs
mov
push
mov
rcl
cmp
mov
pop
jecxz
jae
jbe
pop
xor
xchg
adc
sti
cmpsl
hlt
ds
ret
inc
dec
jp
out
pop
enter
rcrb
stc
adc
sbbb
ljmp
fs
dec
xchg
out
cmpsb
lock
cmpl
pop
xor
and
and
and
add
lea
dec
in
xchg
dec
scas
sbb
stos
jmp
and
fbstp
xchg
iret
fcmovne
add
imul
pop
jp
cmc
jmp
fsubs
fwait
mov
lahf
sti
adc
jp
ret
pop
movsl
cmp
xchg
sub
mov
cmp
push
adc
jns
sub
mov
sbb
hlt
repz
push
ds
cmpsl
and
jl
and
mov
popf
or
rcrb
pop
cmp
outsb
xchg
test
push
and
iret
shl
leave
mov
xchg
adc
daa
cwtl
stos
mov
iret
xchg
scas
cmc
dec
push
stos
dec
push
fdivp
pop
push
xor
sbb
adc
cmp
sbbb
lahf
push
out
ret
mov
inc
mov
aam
pop
mov
xor
outsb
inc
xor
sahf
xorl
cmp
and
push
xor
push
cmp
ja
sbbb
pop
sahf
sub
cmpsb
dec
push
in
jg
xlat
mov
icebp
or
dec
xor
push
fwait
xchg
and
cmp
xor
mov
cmpsl
xchg
out
stc
je
fidivrs
add
jp
subb
xor
mov
lret
sbb
data16
jecxz
popa
cltd
daa
inc
in
ss
fnstsw
or
pop
xlat
repz
rcrb
add
aam
lock
push
fwait
call
scas
lock
loopne
test
cmpsl
cmovs
and
push
in
add
inc
mov
cmpsb
out
jecxz
xor
sub
stos
nop
enter
out
rorb
dec
imul
and
mov
jns
jae
sbb
ja
or
sarb
dec
mov
lods
push
jbe
sbb
test
das
inc
xlat
pop
lods
cmp
clc
jb
test
mov
js
arpl
pop
imul
mov
imul
dec
lret
pop
jg
test
enter
cld
dec
pop
sar
cli
gs
rcrl
cli
dec
fimuls
and
pop
sbb
adc
pop
dec
push
adc
mov
push
es
jns
add
test
js
cltd
lods
jg
cmpsb
test
fs
lret
lock
popa
adc
pushf
jg
pop
loop
loop
add
subl
mov
jnp
dec
fcoml
test
add
clc
cmp
cs
and
add
inc
push
xchg
cmp
dec
xor
xor
and
loop
int
leave
repnz
repnz
nop
push
imul
mov
mov
cmp
mov
std
mov
push
iret
sti
dec
pop
inc
and
push
fdivrl
testb
movsl
sub
mov
loope
lds
sbb
xchg
or
mov
pop
adc
repz
iret
in
test
aad
fwait
xorl
xchg
scas
mov
aam
adc
out
push
sahf
push
fidivs
popa
mov
mov
jl
pop
push
mov
cmp
mov
add
sbb
xor
lahf
xor
xor
push
imul
gs
dec
ss
mov
lahf
ja
negb
int3
arpl
std
aam
jg
clc
pop
mov
adc
jmp
push
data16
mov
out
int3
xchg
push
mov
out
inc
incl
adc
mov
imul
mov
movsl
pop
ss
int3
xor
loope
ret
pop
stos
adcl
push
sub
jae
movsl
inc
scas
aad
mov
leave
stos
jns
js
into
xor
cltd
xor
out
call
lds
cmpsl
jl
mov
adc
cmpl
push
in
pop
ds
icebp
adcb
mov
outsl
mov
inc
iret
mov
in
lcall
das
enter
fistpl
fsub
jmp
mov
push
add
cmp
fld
daa
sti
stos
fs
loopne
lods
aad
cmp
leave
idivb
notb
pop
jae
jne
imul
push
insl
sbb
inc
push
mov
inc
and
cwtl
movsb
sarb
lods
mov
in
xchg
daa
push
sbb
cmpsl
jo
loopne
enter
imul
pushf
daa
xchg
add
cmc
xor
push
rolb
mov
lock
push
xlat
add
out
adc
insb
fistpll
or
dec
cmc
cmp
cmp
vmread
stos
das
push
xor
iret
dec
scas
lret
cs
imul
inc
les
scas
out
sub
ret
hlt
jecxz
mov
shrb
jae
lds
mov
sbb
pop
mov
mov
sbb
mov
or
fcomps
pop
lret
gs
dec
dec
xor
pop
ss
xchg
adc
sbb
pop
lcall
jne
gs
fildl
or
fists
rcll
dec
jb
lcall
dec
mov
lods
add
jg
or
or
movsb
sub
pop
and
inc
push
push
iret
pop
lcall
sub
lods
je
cmp
dec
jmp
push
add
push
out
repnz
mov
dec
movsl
dec
cmp
fs
xchg
inc
outsb
and
dec
out
out
mov
push
sub
jl
mov
mov
lret
out
sbb
andl
xchg
rclb
adc
inc
in
call
ja
clc
stc
jb
fidivs
pop
std
loop
mov
mov
cmpb
repnz
xchg
in
push
movsl
hlt
cmp
jmp
cmc
cmp
notb
sub
cmp
cs
add
and
dec
divb
push
jb
sub
in
ret
fwait
xor
push
shrl
loop
mov
dec
pop
setg
test
xchg
pop
mov
jmp
je
popa
mov
xchg
lock
lods
cmp
adc
mov
push
jecxz
into
adcl
popa
fs
xchg
out
dec
inc
jecxz
cmpsb
adc
or
jo
jno
add
pushf
outsl
loopne
fistpl
dec
loope
xchg
mull
pop
mov
popf
loopne
mov
ret
sub
call
js
movl
gs
jp
xor
mov
sub
arpl
ds
imul
pop
dec
xchg
xchg
mov
cmp
mov
push
out
icebp
mov
movsl
add
call
sub
inc
fs
ja
lods
push
test
bound
loopne
xchg
jge
sub
mov
cmp
fwait
xchg
fisubs
or
mov
or
xchg
cmc
lcall
gs
pop
cmc
imul
fildll
aas
imul
jl
call
mov
fidivl
das
jp
dec
lods
mov
insl
pop
push
pop
adcb
ljmp
lock
and
shrl
pop
fsubs
mov
das
dec
cmp
xor
push
cs
xlat
xchg
adcb
sbb
cmp
lahf
xor
mov
xor
fldcw
jp
mov
push
or
flds
mov
fwait
xor
test
les
pop
pop
jne
nop
mov
iret
push
ja
fcompl
push
movsb
test
adc
mov
test
cs
sti
sbb
aad
pop
cmp
sti
or
and
sub
mov
roll
xor
fs
int
mov
mov
sbb
rcll
add
or
shrl
sub
pop
repnz
add
mov
dec
arpl
sub
cld
xchg
add
inc
aam
sub
data16
jae
pop
int
pusha
adc
push
sti
insl
xchg
mov
sbb
inc
clc
mov
dec
out
scas
sub
negb
shl
mov
outsl
mov
das
mov
pushf
rorb
and
and
add
inc
imul
aad
call
and
and
lret
in
pop
icebp
ja
adc
jmp
lret
sbb
iret
mov
mov
xor
inc
roll
in
jne
mov
mov
cwtl
insb
or
sub
mov
adc
aad
bound
push
in
pop
outsb
out
and
mov
in
shlb
jne
mov
jne
ss
test
fidivrs
xor
xlat
dec
ret
test
outsb
add
mov
mov
adc
sub
push
push
pop
lcall
mov
pusha
cmp
xchg
das
lea
jle
lds
mov
and
adc
cmp
dec
mov
xchg
or
out
sarl
adc
or
sbb
mov
cli
adc
fildl
xor
pop
xor
movsb
int
add
mov
rclb
xchg
sub
sbbb
xor
fadd
mov
cmc
shrb
or
mov
cmp
adc
add
add
add
push
or
test
or
cmp
mov
fiadds
ja
cmp
jne
ja
testb
lock
xchg
outsb
or
loopne
mov
aas
mov
or
or
and
adc
popa
cmp
test
mov
arpl
mov
jb
enter
call
push
in
mov
xlat
push
jge
jmp
sbb
pop
ja
push
cmpsb
loopne
mov
pushf
aam
movsl
std
fwait
xor
mov
push
jecxz
fsts
inc
cmp
pop
pop
fs
add
aas
pop
stos
jmp
in
gs
popa
add
mov
js
mov
sbb
in
push
jle
imul
sbb
clc
jns
xor
sbb
mov
mov
adc
lret
cli
pop
rclb
lods
mov
imul
and
call
scas
sub
or
scas
fwait
sbbb
mov
cmp
and
cwtl
inc
lret
jl
imul
js
inc
scas
inc
scas
push
dec
lods
xor
mov
dec
loope
dec
out
push
push
and
scas
xchg
pop
sub
rcrb
popa
sub
adc
movsl
ja
xchg
cli
xchg
dec
jp
adc
insl
jbe
pop
mov
xchg
hlt
jle
jecxz
ja
add
out
jo
imul
pop
inc
dec
addr16
gs
movsb
les
pop
outsb
pop
xchg
or
and
es
jb
adc
xchg
fimull
sti
pop
lea
sbb
pop
mov
dec
fs
fsubrs
cli
cwtl
pusha
fdivl
negl
scas
out
insb
pop
lods
pop
jge
sub
mov
int
repnz
jnp
pop
pop
leave
adc
xchg
fisubl
je
push
sbb
ret
sti
cmp
ret
dec
ror
cmp
lods
enter
adc
cmc
adc
add
adc
xchg
mov
lcall
incb
mov
mov
inc
pop
jmp
test
pushf
negb
xchg
xor
shr
test
push
push
adc
addr16
mov
push
out
and
xchg
jae
dec
sbb
xchg
adc
dec
and
pop
test
nop
je
in
push
sub
lahf
dec
ffreep
push
sub
out
jo
xchg
and
xchg
sbbl
xor
mov
roll
fdiv
insl
sub
shrl
es
fistps
imul
imul
jge
inc
out
notb
jmp
das
flds
inc
fwait
push
movsl
adc
xor
lret
fucom
call
sbb
stos
stc
mov
sub
xchg
sbbb
jo
jge
and
or
out
cmp
add
sahf
push
mov
xchg
and
pop
jmp
mov
inc
enter
insb
jmp
adc
jecxz
mov
testl
lret
lcall
fwait
cmp
pop
jge
popa
push
mul
cli
dec
pop
sub
pop
scas
mov
mov
ficomps
and
pop
in
std
out
stos
fstps
in
iret
push
lea
cmp
cmp
iret
add
cmpsb
int
das
cli
and
cs
pop
pop
mov
daa
fisubrs
iret
rolb
adcl
pop
pop
add
adc
cld
add
xor
stos
ret
stc
cmp
stos
test
pop
add
das
jo
pop
add
and
mov
sub
hlt
jb
lock
push
addr16
dec
ja
jnp
lret
dec
xchg
adc
cmc
sbb
dec
mov
clc
push
push
and
push
cmpsl
lds
stos
xchg
xor
mov
push
in
mov
repz
sbb
cmp
inc
mov
jp
lret
ficoml
ss
xor
and
out
inc
xchg
cmpsb
ret
add
cmpl
sbb
add
jg
jp
or
addr16
popf
pop
in
xchg
xchg
xchg
out
mov
push
cmp
je
dec
mov
adc
loope
int3
lcall
jnp
sub
pop
lret
fndisi(8087
shll
pop
mov
dec
movsl
repnz
js
lock
fidivrs
insl
mov
or
xchg
mov
pop
mov
lods
divl
jp
sbb
mov
jnp,pn
arpl
sbbl
sbb
mov
sbb
pop
pop
xor
pusha
in
outsb
filds
inc
or
sub
fdivs
in
mov
sbb
mov
jp
xchg
loopne
pusha
in
std
mov
xchg
dec
jae
inc
dec
mov
mov
adc
xchg
sbb
call
xchg
xchg
scas
sub
jmp
imul
mov
jmp
jl
dec
mov
test
addr16
mov
sub
daa
lret
fdivs
icebp
test
adc
fcomp
jne
mov
mov
push
mov
add
mov
adc
jmp
leave
xlat
jmp
in
mov
sub
andb
mov
adc
mulb
jbe
dec
jae
inc
mov
mov
aad
js
inc
stos
adc
mov
mov
std
repnz
sub
push
fldl
mov
mov
mov
lods
inc
mov
xor
and
out
test
or
loop
stc
rclb
inc
fdivrp
popa
loope
leave
adc
int
gs
jns
xchg
mov
ss
bound
arpl
clc
adc
sub
gs
mov
enter
inc
xlat
imul
push
cmpsb
test
fbstp
or
insb
mov
lret
and
or
cmp
sub
nop
add
sbb
out
cmp
in
pop
rolb
out
xor
sbb
out
mov
push
inc
test
int3
push
ret
jae
mov
and
pop
sbb
jg
xor
leave
fnstenv
fwait
shll
test
push
dec
push
pop
aas
pop
sub
and
dec
stos
test
popa
and
mov
shll
lret
jmp
sub
fidivrl
adc
jnp
fildl
mov
cmpsl
adcb
in
xchg
pop
imul
hlt
movsb
jo
xchg
sti
scas
add
lahf
xor
xor
mov
or
daa
lcall
jo
cmp
inc
lds
dec
cmpsb
call
aad
clc
mov
mov
add
lods
mov
jp
inc
mov
xor
xor
test
subb
mov
lock
pop
or
adc
sub
dec
cmc
adc
push
test
in
mov
and
mov
and
adc
inc
cli
xchg
pop
sbb
popf
cmc
sbb
fdiv
adc
mov
lcall
scas
lret
das
call
loopne
xor
cmc
ret
mov
les
and
cmp
pop
clc
arpl
push
or
cmp
mov
mov
pop
lahf
cmpps
push
mov
rolb
int3
xchg
movsl
jbe
in
jae
fnstsw
pop
test
jle
mov
xor
xchg
je
dec
movsl
jno
or
xchg
adc
bound
cld
orb
mov
and
lcall
add
mov
push
sbb
out
outsb
sbb
dec
int
nop
xchg
sub
add
aam
mov
icebp
stc
xchg
dec
fstpl
pop
pop
sub
dec
fstl
std
add
es
rorl
aas
push
outsl
inc
dec
cmp
jb
aam
push
rcl
and
in
pop
imul
dec
mov
pop
jmp
adc
ljmp
dec
call
iret
cli
addl
push
push
mov
add
cmp
mov
sarb
mov
push
xor
imul
xchg
pop
cmp
mov
aam
xor
data16
cmp
je
in
jns
fsub
pop
push
das
inc
adc
cld
cli
insb
mov
pusha
imul
rorl
jg
cmpsl
jp
fstpt
decl
xchg
xchg
push
xor
pop
mov
mov
jmp
or
sbbl
jmp
ljmp
test
outsl
and
out
mov
sbb
or
and
mov
cmpsl
push
xor
rclb
cmp
jb
in
mov
cmc
dec
inc
sub
dec
ja
mov
inc
repnz
je
push
dec
dec
jp
mov
mov
mov
add
addr16
adc
lods
mov
sbb
and
inc
loope
imul
push
in
inc
adc
or
xchg
xchg
add
mov
inc
out
xchg
dec
add
jns
lock
out
pop
xchg
cmp
pop
test
pop
add
dec
shrl
je
lea
adc
outsl
in
adcl
int3
push
mov
sbb
es
mov
lahf
and
lcall
loope
and
out
scas
ljmp
push
int
ja
mov
push
mov
jge
inc
pop
imul
sbb
mov
cmpsb
movsl
xlat
push
dec
jp
sbb
movsl
dec
movsb
cwtl
and
jns
cmp
jmp
ret
add
inc
push
popa
insb
mov
fnstenv
sahf
arpl
xor
shl
mov
pop
pushw
cwtl
or
mov
lea
int3
or
mov
pop
push
test
repnz
adc
jg
fbstp
fsts
mov
sbb
dec
call
test
mov
arpl
sub
xor
jp
cmp
dec
adc
pushl
popa
lods
jmp
mov
icebp
pop
sbb
andb
addr16
insl
insb
sub
into
and
fdivrs
xchg
mov
rclb
jbe
sahf
lods
jmp
and
dec
scas
pop
popa
ror
inc
popf
xor
sub
and
and
push
test
push
xchg
jns
in
push
popa
fwait
test
int
cmpsb
les
mov
das
ror
xor
aad
sahf
mov
add
scas
shr
jne
jae
daa
dec
push
jo
jae
cmp
mov
and
jno
adc
adc
jecxz
lds
push
inc
js
bound
popf
mov
pusha
jmp
dec
insb
out
call
or
adc
notl
filds
clc
jle
pop
repz
xchg
and
pushf
xor
ss
mov
inc
jl
out
punpcklbw
jno
cmpsb
outsl
lret
pop
sbb
out
test
nop
sub
mov
inc
cmpsl
push
or
sti
mov
pop
rol
std
leavew
push
sub
sbbl
repz
mov
pusha
push
test
sub
stc
nop
fbstp
test
js
push
das
cli
push
icebp
push
and
mov
mov
inc
xor
add
inc
push
shrl
xor
xor
cmp
sbb
cmp
jbe
daa
dec
or
imul
xor
mov
in
repz
mov
js
out
add
aaa
mov
adc
sbb
xchg
adc
fsubp
pop
aaa
dec
jl
inc
pop
fmuls
pop
push
pushf
std
jno
mov
sub
jno
movl
xchg
test
jge
adc
cmp
loope
popa
loopne
cmp
mov
adc
sbb
adc
and
adc
test
pop
pop
in
mov
jo
push
ljmp
ja
insb
arpl
lahf
lret
sbb
test
jg
push
lea
ds
inc
testl
ret
lods
xchg
cmpsb
insl
xchg
xlat
sbb
sbb
imul
sbb
mov
lahf
insl
sub
pop
ds
add
mov
mov
addr16
popa
sub
rcrb
lcall
xchg
cmp
jns
outsb
lahf
xchg
fiaddl
and
ds
fstpt
aam
inc
jg
insl
mov
call
ret
pop
pop
pop
pusha
clc
pop
add
dec
xchg
bound
adc
jmp
lea
cmp
inc
outsb
fists
call
xchg
mov
sub
mov
fdiv
rol
add
jecxz
aad
loope
popa
adc
jb
xchg
ds
push
lds
fmuls
mov
sub
daa
pop
mov
and
mov
outsb
das
jbe
inc
fisttpl
bound
loopne
lret
cmp
xchg
daa
das
cmp
scas
inc
cmc
or
xor
xchg
cmp
adc
adc
or
cmp
loop
or
mov
hlt
cmp
xchg
icebp
adc
push
lahf
sub
cmp
pop
and
sarl
je
push
mov
pop
xor
adc
stc
pop
icebp
out
lods
sbb
push
sti
xchg
push
add
or
insl
pusha
dec
mov
loope
inc
in
xor
sbb
sbb
ss
rcrb
movsb
sub
in
adc
fadd
int
mov
imul
xchg
fdivl
and
decb
pop
or
jge
out
fwait
outsb
or
cmpsl
repz
loope
adc
fbstp
out
pusha
cmc
jae
divl
dec
insb
mov
test
scas
push
push
shlb
and
mov
cld
cmpb
out
sub
ret
mov
xchg
sbb
insl
sub
or
push
sbb
andps
sbb
repnz
sahf
out
clc
loop
push
add
pop
test
pop
fsts
jmp
in
sbb
add
sbb
mov
adc
add
add
ja
or
fidivrl
xor
stc
shrb
movsl
xor
loopne
dec
arpl
jno
sub
jnp
aad
notb
push
ss
jp
popf
test
push
ljmp
adc
jmp
out
mov
jae
mov
xchg
push
and
aaa
loope
out
adc
pop
mov
repz
ds
pop
mov
jb
and
test
inc
sti
inc
js
stc
test
out
add
pop
das
cli
add
adc
popf
insl
test
cmp
popf
xor
loop
lcall
sbb
push
cmpsb
inc
lcall
inc
loope
sub
fstl
out
and
cmp
xchg
or
add
xlat
dec
and
fisubrl
cwtl
pushf
jmp
mov
sbbb
cmc
rcrb
xchg
pop
movsl
jle
add
sti
fisttpl
jns
adc
xor
in
cltd
adc
icebp
out
lret
push
jb
ror
aaa
cld
jns
cmp
and
in
xchg
aaa
or
insb
add
inc
mov
add
jge
push
idivb
sub
pop
daa
cmp
lret
push
adc
inc
imulb
and
push
push
dec
aam
sahf
push
push
or
fisubs
lret
orb
sub
in
nop
adcb
adc
inc
imul
jb
shrl
sarl
aam
xorb
sbb
and
jp
jge
mov
xchg
mov
cmp
jg
or
iret
nop
pop
sbb
push
ljmp
and
push
mov
out
mov
jg
insl
mov
ljmp
inc
pop
cli
add
fnstsw
shl
and
lret
jnp
call
fnstenv
cs
sbb
orl
test
int
push
lret
imul
mov
daa
jp
or
jl
jo
fidivrl
mov
test
cli
pop
mov
mov
das
repnz
lahf
pop
incb
out
and
mul
cld
jg
pop
add
stos
sub
scas
inc
push
ss
cltd
sub
loopne
push
push
insl
push
sbb
mov
and
push
xchg
js
cmp
xchg
in
sub
cmc
js
inc
imul
arpl
lods
mov
test
inc
pushf
add
aaa
addr16
push
dec
adc
inc
mov
mov
push
int
das
mov
add
inc
xor
pop
out
popa
push
push
xchg
ret
cmc
adc
mov
fldenv
xchg
cwtl
stc
add
sub
in
mov
stos
out
aam
jge
shl
xchg
daa
leave
sbb
or
fs
xchg
ss
cli
xchg
mov
dec
test
cmp
dec
sub
push
cli
xchg
mov
jbe
ss
fnsave
push
mov
lea
jecxz
or
jge
lahf
scas
arpl
aas
outsl
add
cmp
mov
cld
or
repz
dec
xchg
add
into
imul
mov
loopne
es
inc
mull
shr
in
lods
inc
pop
mov
push
mov
pop
imul
int
ret
jle
sub
repnz
popf
jmp
fwait
ljmp
pop
dec
or
pop
in
cmp
in
pop
cltd
or
addb
lcall
leave
fwait
xchg
in
std
push
or
jmp
xchg
jae
push
xchg
lods
mov
int3
xchg
pop
repnz
loop
add
pushf
daa
adc
fistpll
pop
fiadds
in
mov
fistl
dec
or
jnp
lcall
aaa
push
testl
xor
fbstp
push
cmp
or
mov
mov
cmp
popa
or
cmpsb
sub
iret
data16
adc
sub
out
cld
adc
cmp
stos
dec
call
pop
cmpsl
out
add
scas
mov
arpl
mov
sub
pop
mov
dec
subl
and
stos
stc
xchg
mov
pop
popf
arpl
mov
pop
cwtl
mov
pop
lahf
and
sbb
ret
mov
loope
lahf
pop
rclb
repnz
jb
mov
test
adc
in
inc
jg
shrb
nop
addr16
test
xchg
pop
sbb
or
pop
insb
xchg
mov
nop
lahf
test
aas
popf
imul
fcoms
sti
andl
mov
adc
mov
mov
jg
mov
ret
fdivrs
push
pushf
into
ret
ret
jno
daa
lret
mov
int
lcall
stos
sub
adc
into
fdivrl
fbld
dec
mov
push
mov
inc
sub
mov
fstpt
sbb
and
aam
ja
adc
mov
inc
push
push
in
insl
adc
inc
subb
and
rcrl
jnp
cmp
popf
pop
fs
cmp
jns
mov
fs
xor
fmuls
aaa
addr16
push
cmpsl
mov
pop
int
sahf
ss
cmp
pusha
int
in
jl
push
divl
mov
push
jl
mov
push
aaa
incl
mov
repz
aam
fildll
les
cmp
mov
cltd
pop
mov
in
jp
jae
aas
xchg
cwtl
pop
out
mov
jnp
stos
adc
mov
sbb
mov
leave
cmp
jns
mov
xchg
arpl
and
dec
mov
mov
inc
or
dec
icebp
idivl
xor
sbb
jmp
notb
push
fistpl
add
and
pop
test
jg
adc
mov
inc
pop
mov
ret
jmp
shr
popf
cli
rorb
adc
cmc
jg
das
adc
ljmp
into
mov
in
push
pop
jno
aaa
test
sub
jle
cmpsb
pushf
inc
mov
ja
ds
xor
rcr
xor
inc
test
fmull
jno
mov
fsts
popf
scas
sub
lret
pop
shlb
sahf
and
or
pop
fsubl
push
mov
js
sub
adc
or
jb
xchg
std
addr16
inc
bound
inc
pop
insl
mov
mov
data16
xor
insl
clc
xchg
xchg
pop
mov
or
mov
jne
movsl
sbb
mov
subl
mov
bound
shll
add
fidivs
or
scas
test
loop
and
sub
pop
jle
adc
call
jbe
cs
jp
mov
daa
sub
loop
insl
ret
cmp
mov
ror
sbb
xchg
cmp
sti
pop
ret
cmp
inc
fwait
jno
icebp
pusha
jae
jne
adc
adc
aaa
jbe
mov
mov
inc
test
mov
stos
out
xor
jbe
bound
out
mov
es
and
dec
lds
mov
cld
push
dec
sbb
fidivrl
mov
movsb
mov
ficoml
adc
cmpsl
push
and
in
pop
lret
retw
pop
leave
in
std
cli
jle
adcl
mov
test
mov
std
inc
aam
std
jo
jle
je
inc
out
sub
jle
ds
cli
xchg
push
shrl
jp
mov
add
cmp
mulb
popf
xor
cmp
fs
pop
mov
lahf
call
push
mov
daa
push
loop
adc
xor
pop
xor
loope
mov
je
or
mov
cmc
addb
pop
dec
stc
fsubl
dec
jns
cmp
dec
ficoml
mov
xor
jno
ljmp
test
loopne
loopne
inc
loop
repnz
xlat
add
das
adc
push
repnz
push
lds
jg
into
ds
jge
scas
in
ljmp
movsb
arpl
out
mov
outsb
jno
jge
aas
xchg
mov
cmpsl
push
xchg
and
xor
cld
xchg
out
sub
mov
insb
cld
mov
pop
ret
and
ffree
lock
push
sbb
std
and
pop
stos
inc
inc
lret
mov
cli
lea
mov
rclb
cmpsb
shrl
mov
pop
rcll
cmpsb
in
sahf
push
out
push
aas
ret
ljmp
lret
inc
fdivl
dec
imulb
stos
push
sahf
mov
fisubl
mov
mov
mov
sub
nop
aas
scas
gs
pop
push
outsl
jae
xchg
outsb
and
loop
adc
cmc
les
outsl
pop
xchg
mov
in
jno
fwait
sti
cld
es
lods
sub
shlb
bound
aam
mov
inc
cmp
xor
addr16
and
ret
add
iret
popf
fcompl
fdiv
jo
dec
cmc
imul
loopne
jno
shld
cmp
mov
xor
push
adc
xor
jbe
mov
mov
jmp
lcall
shrl
inc
pop
mov
cmp
mov
and
aaa
xlat
test
rcll
push
notl
into
mov
in
mov
stos
sbb
cmc
jb
xorl
jbe
adc
test
and
dec
setl
dec
in
sbb
sub
insb
sbb
jns
aam
dec
fidivrl
xor
lods
inc
ss
mov
dec
js
aam
rcl
jne
mov
xor
cmp
mov
pop
sti
fwait
test
sbbl
jp
int
imul
push
xchg
ret
jae
xchg
mov
ret
jp
xor
or
pusha
fwait
cmpsl
out
mov
movsb
xchg
inc
jmp
je
or
cwtl
jo
cltd
iret
sbb
inc
xor
out
test
mov
ret
inc
data16
test
pop
daa
or
pop
push
jecxz
xor
pop
and
push
push
and
add
call
mov
cwtl
imul
dec
and
test
xchg
add
in
xlat
mov
ret
sarb
stc
and
sbb
dec
data16
mov
xchg
mov
popa
xchg
sbb
push
test
add
push
inc
insb
pop
mov
out
outsl
ret
test
mov
insl
enter
fisubs
sub
pop
push
xor
ret
sbb
sbb
sub
lds
or
negl
mov
bound
cmp
insb
int
jp
popf
gs
out
jno
xchg
and
popa
ret
test
jp
lods
push
sub
rcll
and
imull
lcall
pop
adc
imul
pop
jl
pop
jb
pusha
mov
sarb
push
repz
jb
xchg
cmp
pushf
jbe
and
mov
mov
stc
movlps
add
jae
sub
and
mov
cmp
adc
push
mov
push
sbb
jno
mov
insb
push
mov
loop
xor
rcll
dec
cwtl
pop
push
ds
jo
mov
incb
mov
mov
imul
je
add
and
add
sbb
jl
jno
rcrl
in
dec
gs
pop
repnz
enter
sub
pop
cmp
xchg
pop
and
xor
std
mov
mov
xor
xchg
xor
pop
leave
imul
aam
rcr
inc
pusha
and
mov
imul
icebp
dec
mov
add
lea
sub
or
mov
add
dec
fistl
hlt
jmp
xchg
or
inc
push
int
pop
popa
pusha
fildl
shlb
out
jle
hlt
sub
icebp
repz
mov
xlat
cmc
sub
mov
hlt
cld
push
cmpsb
sub
or
dec
inc
hlt
sarb
jns
push
dec
jecxz
das
add
popa
or
add
cmpl
sarb
jmp
out
add
cmp
popa
ja
iret
cmp
xchg
pushf
or
fnstsw
out
fstl
pop
mov
sbb
das
iret
rorb
push
pop
add
pop
and
xor
dec
or
sub
adc
in
push
xor
repz
inc
outsl
rsm
jne
or
clc
or
std
push
insl
das
insb
and
ret
test
sahf
mov
xsha256
cmpsb
adc
ss
adc
push
xor
pop
test
add
cwtl
push
mov
into
push
sub
fucomi
cmp
imul
cmp
ja
or
cmc
es
aas
push
mov
sub
pop
fldt
and
xchg
das
std
jo
xor
in
out
cwtl
cmp
lret
popa
push
rorl
push
xchg
sub
sti
pop
mov
and
push
pusha
enter
dec
dec
add
sub
nop
lret
mov
int
and
nop
addr16
bound
mov
add
jnp
pop
sbb
pushf
outsl
push
into
test
mov
ficoms
movsl
cltd
xor
dec
incl
lret
test
cmp
dec
call
sub
es
icebp
insb
dec
pop
or
cmc
mov
arpl
mov
rcrl
movb
cmpsl
cmp
cmc
rcl
push
push
out
push
xchg
stc
leave
pop
jae
mov
fisubs
adc
inc
dec
mov
test
sbb
dec
xor
adcl
and
jmp
pop
jne
push
fwait
clc
cmpsb
dec
inc
mov
lea
xchg
shlb
push
cmc
incb
shlb
std
lods
jl
in
rcrb
push
pop
sbb
push
mov
orl
mov
popf
pop
out
into
and
inc
mov
pop
adc
mov
pop
leave
and
jo
ret
lret
jmp
and
add
push
xor
insb
cmp
ss
cmc
decl
fdivl
push
out
and
xchg
mov
mov
addr16
cwtl
stos
fcomps
cli
mov
jae
stos
inc
icebp
adc
enter
cmp
insl
repz
mov
int3
fsubs
push
clc
rcr
lret
clc
insl
mov
jnp
xor
pop
test
mov
adc
mov
in
les
movsb
jmp
mov
les
cmc
dec
pop
and
cli
xchg
sbbl
pop
jg
adc
mov
adc
into
mov
push
lea
and
mov
lcall
adc
jg
mov
fldcw
test
pop
sbbb
or
or
pop
add
xchg
shll
scas
xchg
notl
push
aad
mov
pop
int3
xrelease
adc
int
cmpps
imul
jne
cld
xor
jae
aad
mov
incb
fimull
adc
lret
pop
push
add
sbb
sub
sbb
push
pushf
pop
push
xchg
test
mov
ljmp
popa
lret
stos
loop
push
jae
in
jo
imul
loop
aad
mov
or
aad
test
or
lds
addr16
shrb
push
inc
inc
mov
int
mov
sarl
mov
cltd
add
rorl
insb
cmp
xchg
cmp
outsb
and
inc
xchg
out
jae
or
aad
adcb
psadbw
jo
jg
push
and
out
sbb
inc
ficoml
scas
inc
xchg
cmpl
jo
adc
sub
adc
cmc
bound
sub
sarl
stos
xchg
rcrb
inc
popa
sbb
pop
in
cmp
pop
jbe
sbb
jbe
lods
jnp
aad
jp
or
xchg
cmpb
jae
mov
push
scas
mov
clc
addb
xor
inc
ljmp
cmp
rcrb
cs
mov
rol
dec
loopne
mov
pushf
xchg
cli
dec
push
cmp
mov
push
movsb
pop
dec
cmpsl
push
imul
mov
mov
das
jno
mov
lret
xlat
mov
mov
mov
fists
xchg
stc
stos
ret
mov
mov
idivb
es
pop
mov
dec
test
xchg
ja
mov
sbb
aaa
in
xor
mov
fs
or
jnp
mov
pushf
shll
dec
enter
in
sub
aad
add
mov
xchg
push
cltd
jg
pop
mov
loope
rclb
xchg
sub
mov
xchg
jbe
enter
mov
jmp
inc
ljmp
xor
dec
adc
scas
mov
sbb
push
loop
sbb
xchg
pop
jmp
int
jmp
mov
add
jo
stos
and
sbb
clc
sahf
loope
mov
mov
push
mov
je
adc
lds
jbe
decb
lds
mov
ficompl
ror
in
hlt
mov
mov
ds
or
ret
outsl
sub
pop
mov
fabs
cmp
imul
sbb
lahf
inc
push
push
sahf
stos
fcmovne
adc
adc
xor
jl,pt
add
mov
xchg
push
pop
test
in
push
lahf
cmp
int
test
cmpsb
push
and
repnz
enter
adc
aas
jle
or
dec
mov
ds
or
scas
in
sbbl
jmp
push
sbb
xor
cmp
push
sub
mov
orb
aam
loop
push
aaa
notl
imul
sub
or
out
or
push
lcall
and
mov
xchg
adc
dec
dec
cmp
push
addl
xchg
pop
push
mov
imul
xchg
inc
mov
xchg
xchg
mov
jno
insb
sub
pop
push
push
push
iret
adcb
mov
cli
sbb
cmp
ss
adc
rolb
sub
cmp
fucom
mov
mov
rol
jo
les
fwait
jno
xchg
shr
xor
notb
sub
aaa
or
jb
aam
adc
sub
xchg
in
pop
data16
adc
stos
stos
fs
divb
push
fs
pop
push
xchg
sbb
mov
add
pop
ss
and
jno
imul
std
sub
clc
inc
and
mov
pop
arpl
mov
or
mov
xchg
das
xchg
adc
mov
loope
repz
jg
repz
jl
pop
mov
fwait
pop
push
xchg
pop
xor
das
mov
sub
ljmp
ret
jo
xchg
in
nop
pop
jno
in
fists
pop
xor
jecxz
push
call
jnp
sub
mov
add
sub
pop
loopne
ljmp
push
jl
fidivs
cmp
repnz
adc
pop
inc
jns
sub
notb
flds
add
xor
mov
cmp
jle
pop
fdivl
adc
cli
cwtl
inc
aaa
popa
xchg
mov
mov
cmp
jb
sub
inc
out
sti
and
aad
insb
add
mov
imul
call
sbb
out
xchg
iret
or
xor
dec
add
cmp
loop
xor
cli
xor
xchg
jge
fidivrl
stos
xor
arpl
les
mov
pop
cli
pop
fs
xchg
stos
cmpsb
xor
pop
cmc
pop
addr16
inc
and
sub
out
lret
in
mov
and
sbb
loop
jne
out
xchg
lahf
cld
add
jnp
push
cwtl
lds
pop
cmp
lea
nop
imul
mov
sub
ja
jne
js
cli
xchg
cld
pushf
adc
cld
lret
pop
cli
add
pcmpeqw
not
jle
rcrl
vpsrad
add
and
adc
jle
adc
mov
jl
pop
mov
fs
jae
mov
fsubrp
adc
cmpsb
push
sub
sub
movsb
sbb
clc
jae
mov
pop
pop
mov
shll
adc
aas
sti
js
outsb
fistpll
adc
test
test
mov
pop
repnz
pop
imul
pop
lods
ljmp
out
mov
clc
sub
nop
xor
jl
daa
adc
jbe
cltd
mov
mov
addr16
cmpsl
lds
decb
jne
jecxz
add
mov
xchg
cmp
insl
loopne
fildl
mov
or
lea
mov
inc
dec
ds
jle
dec
in
xchg
mov
lods
icebp
es
je
cli
movsl
bound
lret
ja
stc
pop
rol
push
clc
loop
sbb
popf
xchg
dec
push
push
imul
out
adc
mov
rolb
add
mov
push
xchg
mov
aas
jmp
dec
ja,pn
or
mov
jne
lods
jns
fwait
jne,pt
ret
lret
or
jbe
and
fnstcw
or
or
pop
push
movsl
cmp
scas
icebp
mov
int
ret
call
lods
xchg
inc
push
roll
fnstcw
aas
add
mov
fucomi
pop
xor
repnz
scas
xor
inc
pmaxsw
mov
cmp
mov
out
movsb
cmp
mov
leave
cmp
xchg
inc
fcmovnb
ja
gs
bound
adc
scas
inc
xchg
add
stos
pop
pushf
int3
mov
mov
pop
cmc
mov
push
jl
mov
ja
and
bound
xlat
jmp
lcall
and
pop
jecxz
pop
or
lcall
sbb
pop
repnz
ds
gs
insb
in
test
sti
data16
lret
mov
adc
dec
cwtl
and
shrl
fcoml
dec
mov
inc
mov
cmp
bound
mov
gs
gs
inc
lds
push
in
loopne
or
fcoms
add
pop
mov
test
jo
adc
stc
rol
mov
cmp
mov
push
iret
sbb
dec
movl
shl
or
dec
call
pop
lcall
js
cmp
xchg
mov
jo
and
or
fcmovne
insb
push
xchg
add
rorb
mov
imul
adc
and
outsl
mov
mov
scas
clc
insb
xlat
jmp
xchg
xorl
clc
cmp
and
in
jl
or
das
idivb
mov
xor
pop
bound
sbb
lods
inc
push
sub
adc
sub
add
pop
adc
mov
adcl
sub
pushf
xchg
jl
jns
and
scas
add
xorb
pop
mov
sbb
ss
and
xchg
inc
and
mov
sbbl
adc
xor
shlb
inc
or
push
mov
aas
mov
mov
ret
push
pop
dec
mov
xchg
mov
out
std
xlat
pop
repz
jmp
scas
leave
adc
cld
xchg
push
add
jmp
dec
sbb
dec
adc
pop
cmp
or
and
push
pop
xorb
loopne
push
pop
repz
or
jns
adc
faddl
fwait
out
bound
lcall
mov
fmuls
inc
iret
adc
into
jecxz
inc
movsl
dec
mov
adc
repnz
sub
mov
sub
cmp
xor
or
adc
outsl
icebp
mov
or
out
and
jge
mov
outsl
mov
jbe
jge
lods
scas
movsb
lret
pop
add
cmp
movsl
enter
rcrl
scas
lret
jno
inc
mov
sub
pushf
and
out
pushf
xor
pop
cmpsl
jp
mov
add
cld
dec
push
ljmp
shrl
push
push
mov
hlt
xor
and
pop
sbb
in
lock
shr
lcall
in
insb
stos
xlat
popf
movsl
ss
nop
aaa
sbb
ret
cli
lcall
das
sbb
popf
ret
pop
mov
loop
inc
clc
mov
cltd
mov
movl
mov
cmp
sbb
cmp
xchg
inc
out
lret
push
push
mov
and
inc
addl
xchg
lds
lea
xchg
sbb
rorb
js
lock
cltd
xor
addr16
jnp
arpl
out
mov
sub
mov
dec
add
ds
test
dec
and
inc
or
mov
insl
or
push
nop
mov
fisttps
mov
pop
movsb
cmp
add
add
inc
fdivs
push
int3
icebp
mov
aas
push
mov
sub
lods
in
jl
out
mov
jns
or
xchg
into
repz
jl
ljmp
inc
xchg
imul
int3
insl
sbb
pop
inc
fimull
test
pop
xor
dec
and
xchg
push
loopne
in
out
mov
cmc
loope
mov
mov
inc
and
cmp
daa
outsl
das
cwtl
or
add
xor
adc
int3
pushf
xor
jae
popa
adc
data16
mov
mov
jb
xor
mov
add
sbb
rorl
xchg
xor
mov
push
or
push
mov
pushf
ss
mov
dec
pop
mov
bound
loope
xor
pop
ret
cwtl
aam
leave
pop
aaa
cmc
and
ficoms
mov
stc
popf
out
and
js
or
mov
jp
repnz
sub
inc
test
mov
or
insb
in
ficomps
sahf
fs
movsl
int
mov
jbe
pop
push
xchg
xchg
dec
push
out
xorl
lds
push
gs
sbb
lock
das
scas
xor
xchg
cmp
data16
pop
stc
add
ret
xchg
scas
mov
push
jnp
scas
jae
jl
push
stos
and
bound
fisubrs
add
mov
test
or
js
adc
mov
xor
es
sti
mov
xchg
mov
mov
imul
ret
mov
dec
fbld
popf
pop
adc
xchg
inc
dec
and
sbb
fs
leave
sub
jge
mov
adc
aas
aad
xchg
pusha
inc
ficomps
cmc
inc
mov
xchg
and
lea
pop
pop
cmp
cld
push
jl
fldcw
std
loopne
adc
and
aas
jp
push
add
sub
test
jne
push
mov
fmul
mov
rcrl
sub
loopne
ljmp
test
xchg
ds
ret
sbb
jae
or
sbb
and
mov
notl
adc
data16
xor
sbb
pop
push
sub
jl
subl
aam
xchg
lcall
xor
scas
jmp
xchg
sub
into
push
andb
push
sub
js
scas
clc
ds
lret
inc
adc
push
jb
iret
pop
lahf
mov
xchg
fwait
lods
pushf
stos
jmp
scas
jne
or
mov
mov
adc
mov
mov
scas
jns
repnz
and
clc
inc
andb
add
les
imul
fcmove
outsl
jg
and
jmp
test
mov
adc
jb
leave
ret
dec
pop
and
push
je
test
fnstsw
pop
das
jl
xor
out
mov
inc
pop
fdivl
push
or
cli
int
or
pop
mov
cmp
xchg
stc
sbbl
ljmp
jecxz
sub
jb
cmpsb
addr16
call
clc
jge
inc
mov
add
cmp
imul
mov
in
icebp
outsl
cltd
out
adc
outsl
xchg
adc
fiaddl
aaa
mov
ret
xlat
dec
or
mov
mov
cld
jbe
ss
adc
test
std
add
test
fsts
fildl
sbb
mov
pop
leave
inc
hlt
xor
xor
mov
mov
dec
idivl
movsl
movsb
iret
in
xchg
sbb
push
push
addr16
test
lret
cmp
push
mov
leave
cld
jnp
dec
sahf
push
cmp
mov
cmpsl
clc
aad
test
mov
mov
icebp
mov
movsl
sbb
push
mov
fistps
mov
sbb
cltd
xchg
sub
and
and
bnd
mov
jecxz
mov
lds
add
dec
in
clc
fdivl
std
pop
add
sbb
adc
jge
and
push
push
cs
sub
inc
push
or
aam
cmp
xchg
ljmp
inc
fdivs
mov
xchg
cld
pop
ss
pop
add
jb
and
ja
jecxz
push
out
xchg
sbb
lret
insb
pop
ja
xlat
add
mov
shrl
mov
lea
and
add
arpl
stc
lea
jp
stc
test
lock
test
and
fnsave
dec
dec
push
jg
std
lret
test
jl
das
and
pop
fnstsw
mov
push
sub
es
in
push
sti
movsl
cmp
cmp
pop
jle
lods
xor
jecxz
mov
and
and
pop
xchg
add
mov
xchg
outsl
sahf
jno
and
dec
mov
test
or
cli
inc
lret
sbbb
gs
jmp
or
pusha
outsb
push
cs
into
pusha
out
mull
popa
sbb
mov
gs
adc
in
sub
pop
jbe
xchg
shl
das
mov
sub
pop
repz
adc
sarb
ss
sub
shrl
shrl
cmc
clc
jae
add
mov
repnz
mov
pop
xorb
stc
xchg
adc
addr16
adc
sti
dec
mov
je
iret
sbb
inc
lcall
shll
mov
inc
into
mov
bound
andb
inc
sub
xchg
aad
cmp
cmc
negb
mov
xor
xchg
lods
jns
push
adc
test
adc
cld
pop
cmc
mov
divl
xchg
push
rcll
cmc
subb
mov
dec
add
push
mov
lods
mov
in
dec
jmp
cmp
push
mov
add
xor
xchg
mov
mov
hlt
mov
mov
xchg
cltd
mov
iret
push
add
or
stos
das
cmp
jbe
add
mov
push
xor
std
inc
es
xchg
xor
adc
mov
insb
mov
xor
arpl
inc
inc
inc
push
fucomi
jle
xchg
xchg
mov
or
aaa
cltd
nop
mov
adc
lock
xchg
fwait
xorb
xor
jmp
jne
movsl
mov
sbb
adc
fadds
gs
xlat
test
jg
je
or
inc
jecxz
mov
cmp
loopne
aad
enter
les
fcoms
dec
loop
or
subl
mov
rorl
jl
and
cmp
add
das
das
add
fsubp
mov
fldcw
movsb
flds
sub
test
inc
dec
fs
out
loop
mov
imul
and
jnp
inc
add
add
adc
notb
clc
movsb
les
or
pop
xchg
imul
icebp
lcall
es
jae
pop
jp
adc
adc
push
clc
imul
push
pop
cmp
dec
xor
xchg
scas
lods
ljmp
lock
xor
mov
je
sbb
js
mov
dec
les
jbe
dec
icebp
xchg
scas
shrl
movsl
or
lds
outsb
sub
ret
pop
lods
stos
aas
dec
sub
loopne
std
sub
push
add
imul
dec
push
dec
in
jo
cmp
jae
push
insl
pop
xchg
cmp
adc
ss
cmpsl
out
mov
lcall
inc
mov
je
lret
lea
movsb
js,pn
stos
lds
popf
xchg
xchg
xchg
daa
fidivrl
sbb
sti
scas
inc
sub
int3
jecxz
mov
push
cld
lods
sub
pop
das
mov
jns
add
rorb
into
stos
push
cmpsb
shll
cmp
adc
das
jne
ret
fwait
mov
int
push
loopne
jp
shrd
cmp
sbb
pop
add
xchg
push
lret
out
rcrl
sbb
mov
imul
mov
dec
jecxz
nop
loope
mov
cmp
sbb
pusha
iret
jecxz
mov
insb
mulb
push
sub
test
rolb
cli
jne
outsl
pop
cld
mov
movsl
aas
mov
mov
xor
clc
pop
mov
lods
lcall
dec
rolb
repz
adc
popf
inc
xlat
sarb
mov
adc
xchg
xchg
mov
fstps
dec
out
shrb
mov
xchg
sub
add
pop
popf
dec
mov
rcl
movsb
or
sahf
jne
roll
mov
cltd
jge
mov
jmp
inc
pop
jns
jle
or
adc
lods
and
lcall
xor
xchg
out
push
loope
sbb
dec
loopne
cmp
out
push
cmp
aas
push
hlt
orl
cmp
das
sbb
ficoml
in
test
jg
mulb
imul
lcall
add
and
fisubrs
jo
gs
push
jb
xor
mov
dec
cmp
add
gs
xchg
test
std
cmp
lock
cmp
js
inc
mov
icebp
mov
or
sahf
icebp
jg
scas
fs
mov
mov
inc
movsl
cmp
or
xor
fiadds
xchg
xor
pushf
inc
adc
or
pop
ja
jae
fistpl
xor
and
fldt
xor
test
dec
lods
scas
and
mov
loop
sub
mov
or
jg
mov
adc
movsl
stos
xchg
das
xchg
sarl
mov
jecxz
push
les
lcall
sub
mov
push
add
movsb
mov
in
pop
sbb
cmp
js
inc
dec
add
cltd
mov
mov
test
cltd
pop
outsb
enter
inc
pop
clc
sub
jne
xchg
mov
call
xorb
xchg
sub
fisttps
mov
xchg
arpl
jge
push
in
mov
mov
jnp
fs
mov
or
jge
cmpsl
push
movsl
fdivs
jl
push
dec
jl
jns
insl
mov
pop
sarl
hlt
and
ja
and
insl
jg
or
jae
cmc
sub
sbb
int3
outsb
and
in
or
ds
sub
jo
mov
xchg
mov
or
sub
add
add
inc
std
pop
mov
lock
xchg
insb
fwait
in
mov
add
dec
add
out
inc
psadbw
xchg
push
addr16
insb
dec
int
mov
stos
inc
push
cwtl
mov
mov
jnp
cli
nop
mov
scas
out
das
add
inc
pop
sub
int
pop
mov
add
scas
js
mov
xchg
lret
xchg
lcall
pop
out
xchg
inc
data16
push
pop
negb
fidivrl
ret
push
cmpsb
dec
in
fisubl
xchg
dec
stos
in
rcr
mov
stos
xchg
mov
xchg
cmp
mov
push
push
jmp
xchg
jmp
inc
push
sbb
fwait
and
push
call
or
mov
jo
mov
cmp
push
add
jmp
adc
or
ret
dec
test
notl
xor
mov
imul
mov
inc
and
push
mov
in
cmpsl
andl
add
xchg
test
fildl
in
addr16
adc
pop
rcrb
lods
sbb
push
push
jae
or
xor
out
jl
int
inc
dec
sub
mov
push
mov
pop
and
xchg
divb
lock
jg
lret
sahf
push
push
rcl
or
sbb
adc
mov
rclb
inc
mov
lahf
sbb
inc
int3
inc
or
sub
push
inc
sarb
pop
or
cmc
js
push
mulb
jnp
mov
jle
mov
decl
xchg
xor
cmovno
shr
lods
xor
insb
dec
mov
rol
or
outsb
dec
pop
jecxz
imul
pop
aam
je
cmp
sbb
sahf
xor
adc
pop
jmp
cmp
jmp
lock
test
xor
mov
cmpsl
mov
fidivl
movsl
sbb
xlat
xlat
test
jmp
lret
test
jecxz
mov
push
sub
push
mov
lods
sub
cmp
jo
sbb
fistpll
or
and
adc
cmp
std
daa
in
sbb
loope
mov
cmpsl
push
dec
jecxz
jl
cmp
sarb
adc
sahf
xor
xchg
adc
mov
clc
inc
inc
outsb
push
cwtl
std
cmpsl
leave
hlt
jecxz
push
push
push
les
mov
ds
cmp
aaa
jae
lahf
jmp
sub
cld
xor
xor
xchg
aas
sub
sahf
mov
xchg
in
add
je
add
lret
hlt
jbe
adc
adc
add
jns
mov
add
xchg
repz
pop
pop
cmc
xchg
pusha
inc
rcl
andl
out
fwait
or
inc
dec
dec
dec
insl
in
scas
push
push
push
int
adc
mov
mov
push
shlb
popf
mov
jnp
loop
mov
fildl
fimull
mov
mov
in
sbb
call
in
repz
pop
aaa
jb
call
or
push
std
aad
dec
pop
fnop
int
int3
pop
push
sub
xlat
sarb
inc
fimuls
mov
or
jae
enter
sub
mov
inc
adc
push
int3
clc
pop
or
pop
lret
push
push
jmp
sahf
sub
mov
data16
adc
adc
dec
mov
lea
fld
jae
in
mov
aaa
loopne
mov
dec
int3
and
jmp
es
decl
movsb
jo
mov
push
xchg
push
pushf
inc
sbb
mov
ljmp
scas
call
push
inc
mov
pop
xlat
and
fisttpll
dec
adc
lods
popf
jo
mov
sbb
outsl
add
aas
int3
in
je
jne
out
aaa
ret
and
outsb
shll
insb
jle
lcall
mov
xchg
adc
inc
push
xchg
aam
int
js
dec
in
cmpsl
xchg
add
out
sub
jp
mov
mov
jbe
and
aaa
sti
mov
fisubrs
xchg
js
sub
enter
mov
cmc
or
mov
cmp
fnsave
mov
jbe
or
shll
in
dec
addr16
sti
xor
cmpsl
sub
out
cmp
movsl
mov
mov
insl
sub
cmp
insb
push
gs
adc
mov
cmc
push
sbb
loope
sti
pmullw
pop
jae
dec
js
jbe
iret
movl
lods
int3
jl
adc
jge
push
mov
mov
xor
mov
das
mov
dec
aam
jmp
sbb
pop
sahf
mov
xor
or
mov
shrl
mov
sub
push
dec
bound
nop
and
in
add
mov
adc
aam
or
insl
mov
pop
sarb
or
pop
push
inc
rorl
stc
cmpsb
inc
sbb
flds
sarl
and
mov
jmp
adc
fstl
pop
pop
push
cltd
ljmp
stos
arpl
and
xchg
sarb
testl
and
test
add
fcoml
push
add
and
dec
orb
fisttpll
in
xor
sub
pop
into
lret
in
cld
push
mov
mov
jge
push
shll
fsubrl
cld
data16
stc
cmc
dec
repnz
add
pop
jecxz
repz
sub
js
jns
cmpsb
jp
mov
lds
sub
or
inc
cmp
jae
and
and
xchg
mov
mov
pop
out
push
enter
jecxz
unpckhps
dec
out
divb
push
je
decb
jnp
or
sti
sbb
mov
int
mov
in
cmp
ds
mov
dec
push
out
shl
mov
popa
outsl
add
xor
ds
mov
mov
add
fstl
lds
dec
call
jb
outsb
mov
mov
packssdw
cmc
les
xchg
pushf
sbb
arpl
inc
or
addl
nop
daa
xor
xor
cmpsb
push
mov
mov
popa
fwait
pop
movhlps
aas
and
pop
jge
std
ljmp
push
pop
addr16
subl
push
mov
in
jb
popf
lret
hlt
pop
pop
popf
sbb
or
jne
js
pop
mov
popa
popf
addl
push
gs
lods
into
jo
inc
cmp
pop
sub
out
sbb
mov
xor
jns
pop
ljmp
jb
arpl
shlb
adc
inc
idivl
enter
pop
cld
bnd
push
insl
push
xchg
adc
cld
in
clc
mov
and
popa
test
or
dec
daa
or
sub
dec
in
mov
not
sbb
xor
hlt
shrl
out
adc
mov
out
and
push
xchg
aam
dec
lods
and
test
mov
test
in
test
cmp
adc
test
bound
dec
sub
bound
insl
shr
lahf
loope
fcompl
sbb
sbb
cmp
popf
insb
inc
jns
pop
and
xorb
push
inc
dec
xchg
js
and
adc
pushf
or
ljmp
enter
incb
jg
test
inc
dec
push
movsl
outsl
jmp
push
popa
and
push
xchg
mov
push
jl
fisubl
dec
fistpl
xor
cmp
nop
mov
decb
push
sbb
mov
xor
add
adc
dec
test
pop
out
sahf
mov
cmpsl
adc
mov
mov
and
lahf
int3
xlat
xchg
adc
in
test
sub
jo
sub
les
cmp
jne
mov
sti
cltd
repz
dec
mov
mov
imul
or
inc
cmc
sub
scas
gs
ljmp
in
sbb
pop
jl
mov
jle
cmp
dec
add
or
gs
dec
lods
inc
ds
shlb
out
sbb
ja
ret
inc
jno
jne
sub
cli
ljmp
das
in
leave
mov
xchg
pop
push
nop
or
xchg
fcompl
fwait
pop
sub
cmpl
push
mov
lds
pop
fcmovnb
xchg
gs
into
add
push
push
movsl
fstpl
hlt
sbb
lahf
cs
fs
arpl
mov
lea
and
or
fiaddl
popf
into
pop
adc
out
fdivrl
mov
orl
sahf
clc
mov
sub
out
test
shll
dec
shl
lea
inc
sarb
cli
mov
mov
nop
jbe
sahf
sbbl
fsub
pop
ret
gs
mov
dec
jno
enter
int3
mov
sub
pop
xor
inc
shl
mov
add
jo
or
stos
inc
and
adc
jnp
ret
or
dec
or
stos
int
inc
out
dec
push
ds
fldenv
pop
mov
jne
cmc
xor
call
mov
or
fiaddl
push
cmpsl
inc
push
rorb
jle
rcl
push
pop
sub
into
sbbl
mov
repz
mov
dec
data16
xchg
cmc
adc
rorl
mov
loop
lods
adc
ja
push
xchg
sub
mov
mov
dec
call
sbb
fs
jle
lea
jnp
add
movsb
dec
inc
push
mov
mov
pop
out
std
cltd
mov
add
mov
adc
add
push
jne
push
mov
ds
aaa
aaa
fsubs
lret
push
dec
cmp
pop
cmp
ja
shll
aaa
cmc
inc
ret
stos
inc
repnz
mov
xor
xchg
inc
pop
mov
and
gs
push
out
xchg
lods
ds
dec
and
fdivr
add
sub
jnp
jae
xor
rcrb
int
push
push
mov
add
fnstsw
sub
enter
xor
addb
movsb
inc
in
insl
dec
cltd
xor
sub
mov
adc
push
xchg
xchg
mov
xchg
mov
jns
sbbb
xchg
jmp
popa
xor
aad
adc
dec
fnsave
cmp
mov
sti
push
loopne
sbb
cmpsl
jb
cwtl
imul
in
jne
push
subb
and
arpl
add
repz
test
lcall
or
mov
aam
sbb
jbe
pop
insb
pop
or
jns
std
and
sbb
add
dec
or
negl
inc
adc
js
call
mov
push
inc
incl
jae
jb
adc
sahf
mov
iret
psubd
rorb
lea
shrb
xchg
mov
push
lret
xlat
adc
add
push
mov
aad
push
mov
lret
arpl
shll
loope
jnp
sahf
sub
adc
dec
jb
fsubrp
dec
sbb
jge
mov
add
mov
sbb
mov
inc
js
lods
xchg
mov
bound
mov
sub
ds
mov
cld
xchg
dec
xlat
sub
sbb
jmp
ss
hlt
sub
push
sbb
leave
fs
mov
xchg
sbb
or
or
rclb
push
outsb
pusha
xor
test
ss
lods
sbb
xchg
mov
jno
inc
pop
adc
sub
xor
jb
sbb
cmp
xor
xor
ljmp
jae
mov
adc
aad
add
scas
scas
ljmp
lret
mov
daa
test
mov
pop
orl
jbe
jnp
lahf
aas
and
sarb
cs
jl
out
popa
cmc
pop
icebp
xlat
xchg
test
dec
stos
xor
sub
dec
or
hlt
sbb
xchg
inc
and
aaa
xlat
ljmp
xor
xor
sub
aad
insl
dec
scas
outsl
mov
andb
dec
lods
or
xor
mov
negb
sahf
mov
les
enter
fstl
jge
inc
inc
subb
mov
popa
mov
mov
adc
and
xchg
sbb
addr16
gs
mov
pop
testb
je
outsl
jge
dec
data16
sbb
rol
js
pop
in
xor
add
mov
pushf
dec
and
f2xm1
xor
dec
scas
ss
jl
dec
incl
inc
mov
mov
xchg
pop
mov
cmp
orl
or
popa
test
in
and
sar
push
insl
rcrl
cmp
mov
sbb
int
bound
and
test
add
inc
test
orl
lds
pusha
mov
mov
addr16
jg
pop
xchg
dec
xchg
push
js
add
push
sbb
cwtl
inc
insb
int3
jae
mov
stos
jmp
adc
fadds
mov
mov
or
push
adc
adc
fsubr
mov
call
mov
mov
aad
imul
mov
sub
sbb
mov
stos
jnp
jbe
fidivl
jge
test
fiaddl
adc
fdivrp
xlat
jge
lods
scas
clc
test
mov
push
inc
test
xchg
loopne
dec
jmp
mov
imul
jge
pop
scas
jno
jo
and
jge
imul
cwtl
aad
pop
mov
hlt
pop
xor
cmp
jle
shrb
push
lcall
sbb
xchg
cmp
scas
mov
les
xor
fdivs
cs
sub
les
jecxz
stos
dec
aad
cmp
xchg
push
cmc
pop
movsb
push
es
mov
out
inc
ja
fs
dec
dec
in
pushf
jae
es
pushf
repnz
pushf
out
shrl
sub
in
shlb
sbb
movsl
clc
imul
cmp
sbb
jne
pop
scas
push
fisttpll
jle
sub
movsb
add
push
dec
add
fmul
test
rorb
imul
jmp
pop
aad
pop
dec
out
cmp
adc
dec
insl
add
push
adcl
lahf
jae,pt
outsl
sar
imul
arpl
ljmp
ret
xchg
out
xchg
xchg
lcall
loop
push
mov
fsubs
and
call
loope
and
out
xlat
mov
test
add
push
sbb
shl
lahf
movsb
dec
testb
clc
bound
xchg
mov
xchg
outsb
mov
xor
out
jns
pop
or
pop
dec
pop
xchg
lret
in
sbb
les
adc
adc
sub
cs
outsl
push
mov
pop
mov
pushl
push
inc
std
pop
xchg
insb
jl
fistl
sbb
jl
lea
cli
loop
stos
adc
jae
or
dec
dec
cmp
cmp
inc
mov
aas
and
imul
sub
pop
clc
mov
ret
mov
loope
push
addr16
out
lcall
mov
les
sbb
mov
sbb
repz
jge
test
add
dec
test
ret
filds
add
not
and
adc
cmp
mov
dec
jge
cmp
lods
mov
or
not
repnz
sub
adc
sub
and
pop
mov
inc
push
mov
fsub
mov
push
add
daa
mov
bound
dec
dec
sub
aad
xor
jmp
dec
push
push
ja
sub
push
sbb
pop
mov
push
rclb
sbb
jle
outsb
mov
daa
sbb
jp
int3
xor
insb
test
inc
aas
shlb
fldt
mov
add
mov
mov
sbb
sub
dec
cmp
and
adc
pop
inc
push
enter
sbb
pop
out
sbb
mov
xlat
or
add
mov
mov
pop
push
stc
scas
dec
loop
inc
das
pop
push
or
pusha
es
pop
out
pop
insb
mov
add
and
hlt
stos
adc
mov
xchg
mov
shlb
movl
mov
mov
testb
adc
jae
sbb
lods
enter
mov
and
mov
fsubrp
gs
stc
mov
dec
inc
lock
xchg
mov
rcrb
fsts
push
cmp
pop
sub
sub
or
xlat
cmp
bound
jl
fsubr
pop
push
mov
fmull
add
arpl
push
dec
hlt
pop
mov
lds
insb
call
adc
jnp
insb
xchg
xchg
sbbl
xor
inc
dec
push
dec
xor
mov
cmpl
int
cmp
jno
jge
enter
ja
rcl
fdivrl
inc
xor
push
movsl
cmp
add
loope
push
xor
sub
mov
mov
shrb
lds
adc
and
or
leave
test
jbe
in
stos
adc
mov
and
mov
arpl
arpl
aad
add
mov
jbe
xor
scas
scas
xor
jo
or
insb
loop
xor
add
fcomps
pop
dec
push
sahf
sarb
sub
call
xchg
fisubrl
mov
dec
cmp
dec
jg
jmp
into
and
scas
adc
sbb
mov
cmc
jns
mov
lcall
and
adc
cmpb
xlat
lahf
xor
jne
lret
arpl
std
sbb
xchg
xchg
ss
orb
adc
cmc
adcb
lret
pushf
and
jl
sub
push
cmc
movsb
cmp
mov
adc
mov
loopne
or
mov
iret
xchg
cmp
lods
pop
mov
adc
dec
sbb
and
scas
jae
mov
js
xchg
and
ds
dec
std
sbb
das
xor
xor
es
adc
orb
mov
les
xlat
sub
sahf
sub
inc
fcoms
neg
jbe
cltd
lcall
ret
lods
mov
jae
pop
lock
push
hlt
mov
add
push
cmc
iret
je
cmp
sub
icebp
outsl
loope
lahf
sbb
pop
fdivrl
adc
cmp
push
push
enter
jne
mov
push
repnz
mov
xchg
shll
aaa
test
inc
gs
lods
stos
mov
scas
stos
pushf
xor
cwtl
mov
and
and
popf
sbb
add
xor
cmpsl
hlt
mov
mov
cwtl
mov
mov
sbb
lods
stos
loop
aad
push
out
jecxz
inc
testb
hlt
lret
imul
jo
daa
and
into
in
fs
iret
xchg
jp
jmp
negb
cmp
out
imul
cmpsl
inc
mov
cmp
lock
xchg
ficomps
mov
loope
sbb
or
cmp
leave
test
int3
mov
sti
pusha
or
aaa
pop
daa
das
adc
jle
sbb
mov
gs
dec
dec
add
xor
push
outsl
pop
mov
adc
jns
sbb
maskmovq
in
lods
gs
and
adcl
adc
inc
push
jmp
adc
jp
jmp
push
dec
popf
mov
ja
inc
test
sbb
fs
push
out
insl
push
xor
aad
into
inc
adc
push
dec
loop
int3
mov
orl
add
mov
ret
xchg
mov
sub
loopne
add
rorb
std
cld
icebp
int3
pop
lods
add
in
mov
push
jbe
inc
sbb
das
pop
push
lahf
lods
inc
mov
jno
adc
call
bound
push
lock
sbb
lods
cwtl
cmp
sub
jb
sbbl
mov
xchg
mov
xchg
mov
mov
cmp
pop
lods
in
sub
iret
xor
adc
sbb
in
loope
rcl
loop
rcrl
or
adc
mov
adc
movsl
mov
xor
pop
push
xchg
insb
out
test
aaa
fwait
xor
loop
mov
mov
adc
sar
lods
ss
fildl
lods
mov
xor
cmp
fcomps
xchg
imul
cmc
sahf
mov
cmp
xlat
and
dec
xchg
adc
xchg
imul
call
insl
jmp
adc
pop
xchg
fs
pop
jmp
aad
test
lock
icebp
dec
push
push
and
mov
add
jne
xchg
insl
sbb
mov
pop
cmpl
sbb
or
mov
fildll
rcl
out
das
jecxz
orb
add
mov
and
stos
xchg
jnp
jg
inc
jo
notb
xchg
xorl
mov
inc
sahf
push
icebp
jmp
hlt
push
out
and
in
popf
repnz
mov
adc
sbb
dec
shl
out
xchg
dec
cmp
mov
out
idivl
daa
jl
xchg
sbb
ret
cmp
dec
pop
lret
and
mov
mov
cli
add
mov
sub
jecxz
mov
dec
jae
jge
xchg
scas
mov
loop
out
mov
jmp
out
jae
call
xchg
lods
retw
or
xchg
stos
sbb
psubq
jmp
and
jbe
std
adc
ljmp
push
rcll
pop
sub
pop
in
xchg
ja
cmpb
mov
dec
into
mov
cmpsb
ror
sub
mov
mov
mov
cmp
add
rcl
cmp
aam
rcrb
aad
mov
ret
mov
xor
aaa
jne
inc
adcb
leave
inc
mov
sti
jbe
pop
insl
loopne
nop
in
ret
push
aaa
adc
mov
mov
add
pop
mov
xchg
add
je
imul
jg
and
test
mov
int
iret
jg
add
xchg
imul
push
lock
jae
cltd
test
pop
iret
orb
inc
pop
mov
and
negl
ja
fdivr
and
mov
dec
outsb
push
xor
xchg
adc
mov
sbb
testl
mov
fildl
popf
and
add
dec
lds
jne
mov
mov
test
jp
movsl
cmp
mov
sub
loopne
dec
daa
fdivrs
sub
mov
test
loop
adc
data16
pop
and
repz
dec
and
loopne
fsubs
pop
lods
mov
fwait
mov
dec
hlt
popa
leave
fsts
lods
jae
cs
mov
push
push
scas
cmc
rcll
popl
ljmp
cmpsb
mov
dec
test
lock
inc
push
aas
push
add
jecxz
es
sti
mov
pushf
xor
fbld
mov
decb
int3
stos
hlt
pop
roll
xchg
mov
cmpsb
xor
mov
aas
adc
out
and
int3
rcll
jns
adc
cld
adc
shrl
test
and
stos
out
inc
add
andb
mov
mov
pusha
xor
cmp
push
jne
pop
cmp
daa
and
mov
mov
push
push
push
shrl
mov
dec
cmp
repnz
dec
aam
jbe
jae
aaa
cwtl
gs
in
jl
iret
mov
cwtl
sbb
out
int
std
test
push
xor
gs
stos
pop
fadd
enter
sbb
popl
jbe
shlb
xor
pop
push
subb
cwtl
add
adc
int
pop
or
cmpb
es
out
xchg
cmp
or
pop
cmpb
cltd
sahf
enter
push
mov
popa
ficomps
sarb
push
dec
mov
jge
cmpsl
mov
imul
pop
jle
mov
rcr
fs
dec
adc
sub
lea
mov
and
push
outsb
insl
adc
mov
add
ja
mov
sahf
test
inc
push
repz
inc
jo
inc
xchg
daa
out
sbb
sub
push
stc
je
in
lock
mov
mov
test
repz
jns
out
push
or
mov
xchg
std
cltd
mov
cli
jl
sub
sub
in
imul
pop
lea
sqrtps
xor
out
ja
es
push
mov
fs
sub
and
loopne
add
and
mov
cmpsb
inc
pop
xchg
cmp
and
dec
inc
fs
out
scas
and
dec
pop
stos
test
insl
shll
out
pop
clc
inc
sub
sub
mov
out
hlt
or
add
push
test
shll
jbe
and
push
push
cmp
pop
push
adc
dec
sub
cmpsl
ds
in
cwtl
xchg
sub
dec
xchg
cli
sbb
fldenv
xorl
jne
adc
ret
inc
sbb
pop
adc
mov
pop
and
mov
xor
and
add
out
popa
add
push
sub
pop
cmpsb
pop
nop
insl
mov
sarl
jbe
insl
mov
dec
and
cmp
or
pop
pop
out
jle
pop
cli
adc
xchg
xchg
jmp
xchg
fnstcw
repz
mov
imul
mov
push
lahf
ss
je
aas
popf
lods
xchg
pop
mov
int
iret
pop
shrl
js
jns
mov
jg
xchg
lods
cmp
shrb
xchg
xchg
jne
lds
testb
popa
and
scas
dec
mov
int
jmp
mov
pusha
mov
fisubrl
nop
push
idivl
pop
sarl
push
scas
pop
clc
aam
insl
and
insb
jle
mov
out
lahf
repz
mov
popf
and
pop
aad
rol
sbb
fisttpl
add
mov
and
jg
fwait
jo
jecxz
das
mov
addr16
jmp
idivb
push
sub
pop
pop
movl
cmp
xor
mov
sub
xchg
icebp
mov
jle
push
push
adc
sub
outsl
daa
sti
or
ja
mov
mov
inc
leave
hlt
test
xchg
je
insl
test
and
je
adc
ja
leave
sub
mov
out
stc
outsl
push
mov
or
lods
add
jb
leave
sub
adc
xadd
popa
jnp
push
aad
dec
fbstp
popa
cld
aam
sti
aad
jns
jb
push
je
jae
cli
xchg
jns
idivl
dec
lahf
xor
jg
fwait
sub
inc
pop
jne
lret
adc
loope
sbb
and
inc
addr16
shl
mov
aas
enter
fsubr
js
jns
or
ds
pop
ja
cwtl
xchg
sub
xchg
add
dec
in
xchg
sbb
das
and
xor
mov
dec
or
jne
out
dec
push
and
loope
mov
mov
sub
sub
movsl
cmp
jbe
xchg
jge
ret
adc
pop
or
add
and
pop
mov
movsb
imul
pushf
add
rcrl
cmp
push
xor
mov
lahf
insl
add
sti
call
int3
lods
fsubrs
lret
int3
movsb
add
dec
or
sbb
add
push
jmp
lret
ljmp
nop
mov
mov
sbbb
jnp
mov
jns
fidivs
lcall
aas
push
icebp
mov
pusha
sbb
rolb
imul
ret
mov
rorl
test
int
xor
arpl
fmulp
das
sub
int3
popa
out
add
push
and
pushf
xchg
or
imul
mov
inc
inc
sub
aam
pop
push
loope
xchg
mov
addr16
loopne
sbb
jae
jmp
ret
xchg
lret
in
dec
loopne
add
inc
call
and
and
mov
gs
js
or
xchg
jne
pop
sti
rcl
sub
in
cmp
adc
cltd
push
or
inc
push
push
adc
lds
ds
push
dec
outsl
mov
dec
push
ljmp
sub
adc
cwtl
mov
out
xchg
mov
cmc
mov
in
leave
pop
sti
dec
mov
mov
ficomps
test
and
das
imul
and
imulb
enter
inc
cld
xor
out
cld
adc
and
xchg
stos
xor
fwait
sub
rorl
dec
filds
das
data16
lods
mov
jecxz
rclb
push
xchg
jne
aam
mov
sbb
push
cwtl
jl
in
cli
test
sub
lahf
adc
mov
inc
push
push
movsl
cld
dec
cmp
pusha
dec
add
je
ljmp
in
lcall
jmp
pop
sbb
jge
out
adc
ja
and
add
or
push
xor
mov
sub
xchg
outsb
sub
das
inc
in
int3
xchg
ficoml
mov
push
cmp
int
and
sbb
xor
mov
xor
data16
mov
stos
adc
jb
adc
rcrl
adc
negl
daa
ljmp
outsl
inc
int3
or
ret
insb
jmp
scas
adc
or
aas
es
xchg
test
les
push
jg
jns
fiaddl
sbb
push
xor
push
daa
cmp
js
and
roll
inc
fldenv
inc
mov
adc
mov
xchg
aad
loope
adc
push
jns
int3
shlb
lds
cmpsl
jl
inc
jmp
aas
mov
test
adc
jne
cltd
xor
push
pop
idiv
stos
gs
pop
js
mov
adc
outsl
dec
xchg
sbb
andb
inc
insb
add
mov
fwait
and
jns
inc
push
or
mov
outsb
int3
imul
arpl
mov
sub
sub
adc
movsl
add
sbb
jnp
shrb
and
call
mov
xchg
adc
jle
out
ljmp
lods
xor
sahf
fisubs
sub
pop
sbb
dec
cs
inc
clc
insl
nop
sahf
sbb
mov
xchg
jbe
mov
jecxz
pop
in
mov
jae
and
std
xchg
mov
and
inc
test
enter
mov
js
fcomps
mov
scas
lcall
sub
push
cmp
mov
pop
xchg
movsbl
jb
adc
movsl
addr16
inc
fldt
and
and
bound
jmp
test
int
inc
adc
inc
loopne
push
mov
fsubl
int3
mov
xchg
mov
icebp
mov
adc
gs
outsl
jns
sar
or
jp
mov
push
das
inc
xchg
pop
push
ret
sti
les
fsubs
cmp
stc
cmp
arpl
popf
mov
sbb
mov
mov
cmp
sub
push
or
xchg
add
leave
xchg
or
xor
mov
fidivrl
rorb
sbbl
push
pop
mov
cmp
cmpsl
pop
cmp
dec
add
pop
repnz
fildll
mov
sbb
add
xor
in
mov
adc
fldt
mov
mov
or
and
lods
xchg
gs
mov
jne
mov
rcrb
dec
dec
dec
lds
jp
outsb
xlat
lahf
sbbb
mov
mov
push
cmpsb
sbb
adc
xchg
sub
sbb
push
dec
add
outsb
rcr
ror
or
fs
bound
jecxz
jl
andl
mov
outsl
jl
test
in
jo
loope
add
in
sub
lds
fstpl
mov
lods
shrb
jns
push
loope
iret
sbb
test
in
xlat
into
loop
sbb
mull
dec
hlt
xchg
sub
mov
stc
frstor
mov
shlb
adc
cmp
fwait
lock
push
sub
rcrl
sbb
and
xchg
mov
bound
int
mov
add
cmp
cmc
cmc
lds
mov
dec
or
lahf
push
repnz
mov
sub
or
insb
jnp
lods
xlat
scas
mov
stos
jbe
fstp
in
xor
pop
daa
das
or
jge
jge
pop
hlt
cwtl
mov
dec
dec
fwait
adc
cmp
repnz
or
jnp
jl
testb
mov
or
mov
lods
nop
movsb
and
repnz
dec
in
mov
sbb
call
or
cli
xchg
adc
xchg
xor
sbb
xchg
cmp
jo
outsl
mov
mov
ret
in
mov
adc
mov
pop
mov
xchg
xchg
ja
dec
inc
inc
jae
add
xchg
shlb
arpl
jb
xor
jbe
mov
out
cmp
push
test
pop
psraw
scas
sub
and
sbb
pop
jecxz
jg
or
mov
jbe
movb
xchg
mov
andb
cmp
xchg
jmp
jnp
dec
xchg
push
jno
out
or
fists
sub
les
lock
xor
and
add
jmp
or
and
call
ret
dec
fcmovnu
mov
add
sar
ret
sub
adcb
pop
cld
inc
add
mov
cltd
pop
pop
and
xor
es
push
pushf
mov
sbb
and
fadds
pop
stc
jbe
iret
bound
insb
xlat
push
mov
lods
fsubrl
hlt
or
enter
adc
mov
dec
and
enter
iret
ss
loope
iret
jne
xor
xchg
scas
jecxz
js
mov
pop
push
loopne
fimull
or
in
std
sbbb
sub
and
xchg
cmpsl
jbe
add
mov
ficoml
aaa
pop
mov
outsb
dec
es
jp
shll
lea
into
or
lret
lods
fdivrp
cmp
loope
add
add
or
aad
aad
lahf
repnz
stos
stos
jmp
ss
jbe
add
repz
or
add
clc
imul
mov
outsl
sbb
sbb
aam
mov
fstps
or
sub
pop
jne
sub
scas
mov
js
jecxz
cmpsl
xchg
imul
push
jno
pop
xchg
sub
mov
out
and
jo
hlt
movsb
arpl
fcoms
push
out
add
js
lahf
cwtl
xor
xchg
out
xchg
sbb
fwait
push
jne
insl
loopne
repnz
lds
out
sti
cmpsl
pop
out
xor
push
aas
dec
ss
nop
imul
repz
repz
jnp
int
pop
das
icebp
xchg
jno
xchg
in
idivb
pusha
call
push
into
imul
out
adc
jbe
add
rorl
cmc
mov
les
xchg
incb
lods
lcall
fnstsw
sbb
ss
jp
xlat
cmp
fnstsw
sub
mov
iret
popf
pusha
push
inc
push
sub
cld
pushf
dec
jecxz
xchg
loop
and
ss
das
cli
push
or
cmpsl
sbb
inc
fstl
xor
mov
aad
inc
in
out
ja
mov
jp
dec
lock
cmpsb
and
out
and
fwait
mov
mov
outsb
out
sub
int
jmp
aad
int
cwtl
nop
dec
jecxz
sti
imul
aad
mov
pusha
mov
int3
and
or
stos
add
mov
incb
xor
repz
jno
push
pusha
ds
in
es
add
jmp
pop
mov
fmull
lcall
in
inc
lret
push
push
jbe
gs
out
aam
adc
push
and
jns
enter
or
push
mov
daa
push
outsl
sub
sub
jecxz
dec
lcall
add
in
andl
inc
jno
aaa
dec
hlt
movsl
mov
jae
ret
pop
cmp
and
bound
dec
fistps
nop
mov
sbb
jl
fs
insl
jle
or
push
mov
and
jmp
jecxz
std
daa
mov
mov
mov
jmp
or
and
imul
outsb
rol
mov
test
sub
lods
sub
notb
loope
pushf
jo
xchg
js
cmp
jae
and
adc
inc
pop
jge
loopne
or
xchg
loopne
enter
dec
mov
aam
out
mov
out
mov
rorl
and
fmulp
dec
pop
loope
std
test
mov
sub
jns
lods
mov
sub
pop
push
pop
cmp
cld
repnz
sti
cmp
mov
fistps
mov
jg
mov
rcll
adc
or
push
xchg
cld
mov
and
add
pop
cmp
stos
andb
or
stc
and
int3
lret
test
pushf
std
cmp
cli
lcall
push
pop
cltd
cmp
pop
movsb
pop
dec
loop
mulb
push
inc
or
inc
lods
mov
call
ds
lret
or
dec
sahf
inc
sub
jl
mov
lcall
out
push
aad
enter
or
in
sahf
fs
fisubrl
aas
pop
cs
push
mov
mov
imul
arpl
rorl
jle
mov
ds
xchg
stos
aas
ror
pop
rcrb
cmp
inc
insb
mov
sub
adc
mov
adc
iret
mov
inc
pop
pop
or
mov
mov
jge
mov
pop
pop
and
mov
mov
rcl
rolb
repz
pop
cmc
dec
add
xchg
jno
and
cmp
push
jb
shlb
scas
fisttpll
or
in
pop
jge
mov
jp
mov
dec
pop
mov
data16
pop
pop
lods
cwtl
xor
cmp
xchg
sub
loop
and
test
fcomip
shll
or
ja
gs
aam
fldl
mov
cmc
mov
stos
lods
fucomp
cmp
out
dec
das
rolb
lea
ljmp
addl
popf
xor
popf
outsl
sahf
mov
sbb
scas
lahf
jp
in
in
adcl
cmp
ljmp
cmp
frstor
mov
inc
and
pop
ss
pop
dec
popa
js
adc
xor
cmpsb
adcl
inc
lods
xchg
test
sbbb
xor
jl
xchg
dec
add
mov
cmpsb
inc
stos
inc
sub
imul
push
imul
add
gs
and
in
xor
stos
mov
filds
stc
xor
jnp
or
cwtl
mov
addl
jbe
mov
rorb
mov
pop
stc
pop
adc
sarb
das
sbb
fbstp
push
test
xor
and
daa
lcall
xchg
aam
pop
jb
loopne
pushf
mov
cmpsl
adc
fwait
mov
mov
das
das
sub
roll
test
sbb
mov
insb
adc
popa
lea
push
ss
cli
xchg
xor
inc
push
out
jbe
pop
or
out
and
cld
sub
mov
pop
cmp
inc
das
subl
jbe
in
ljmp
jp
sub
cs
and
jmp
xabort
mov
inc
leave
xchg
push
in
pop
roll
arpl
mov
pop
cmp
test
les
cmc
inc
inc
mov
sub
jb
out
mov
dec
cmpl
test
add
sub
ss
test
fnsave
mov
lret
inc
inc
movlps
arpl
cld
mov
insl
adc
mov
jae
xlat
sub
and
std
test
fldt
cwtl
outsl
jne
xchg
test
mov
mov
mov
sbb
jne
or
push
mov
mov
xchg
decb
cmp
mov
pop
pop
xchg
add
aas
aaa
xor
pop
jmp
loope
pop
pusha
add
sbb
xchg
or
push
dec
fs
mov
in
jp
call
pushf
xor
iret
loopne
adc
mov
mov
adcl
jns
pop
inc
arpl
jne
inc
push
loope
dec
push
and
je
gs
inc
je
add
jns
lcall
stos
outsl
fstpl
test
test
xor
jg
bound
loopne
adc
inc
mov
stc
or
inc
popa
sub
out
mov
mov
dec
pop
repz
ret
sbb
mov
in
push
fstpl
add
stos
loop
lods
rorl
fwait
jbe
xor
push
cltd
popa
ss
outsl
cmpsl
cmpl
jmp
iret
or
test
nop
mov
dec
lret
mov
xchg
inc
ficoml
lcall
dec
inc
mov
mov
je
out
scas
fucomp
sub
fists
jns
or
cltd
inc
lahf
std
cltd
adc
divl
je
jge
cmp
pop
popf
pusha
dec
xchg
jne
and
jne
flds
dec
bound
cld
daa
and
stos
rolb
and
aaa
into
stos
xchg
ds
inc
jnp
sbb
and
hlt
xor
xlat
push
pop
imul
pop
sar
outsl
sub
sub
dec
xchg
add
sub
insb
lods
mov
mov
adc
movsl
jp
xchg
je
or
aas
test
jo
sub
rcll
and
mov
int3
test
int3
push
mov
aas
xor
sahf
shr
xchg
mov
mov
sbb
outsb
cmp
add
cmp
dec
mov
mov
stc
popf
out
mov
orl
jae
pop
stos
fnsave
jb
adc
or
dec
movsb
sbb
pop
jno
sarb
push
leave
mov
sbb
in
cmp
in
aaa
leave
int
mov
in
or
insl
stos
dec
xchg
and
and
or
mov
out
arpl
out
push
mov
lcall
jns
vzeroall
adc
test
mov
loop
ficoml
mov
sub
mov
lods
push
mov
or
gs
outsl
pushf
stos
mov
mov
enter
mov
or
xchg
cmpsb
adc
fildl
xchg
imul
fnstcw
push
jnp
mov
jecxz,pn
hlt
mov
sti
jae
fdivs
js
mov
inc
inc
mov
add
lds
xor
test
cli
pushf
shll
cmp
cmp
mulb
popf
lahf
rclb
cmpsl
adc
movsl
sbb
rol
jp
loopne
loop
test
repnz
clc
pushf
mov
je
movsb
repnz
sbb
mov
push
je
pop
insb
mov
fidivs
adc
inc
fs
mov
pop
mov
mov
rcr
popa
push
lods
push
pushf
in
addl
sub
lgs
popa
cs
push
test
aam
je
or
pop
mov
int3
cmp
aad
test
pop
pop
inc
in
incb
mov
dec
lahf
sub
leave
cmp
xor
mov
mov
sbb
adc
push
jne
push
out
sti
insb
or
mov
in
fstp
adc
mov
adc
xorl
cmp
cld
aam
dec
push
jne
std
mov
mov
sub
subb
and
mov
pusha
jmp
sbb
mov
fcoml
dec
out
xchg
xlat
xor
insl
orb
cmpsb
mov
cmp
imul
push
rcll
xchg
xor
dec
out
stc
mov
xchg
nop
daa
or
add
scas
inc
loop
xchg
add
in
and
sbb
lahf
and
pop
roll
fstpl
jp
es
das
lcall
idivb
mov
cltd
xchg
add
dec
jp
inc
inc
cmp
add
push
out
push
and
std
cmp
mov
rcrb
pop
adc
push
mov
adc
sub
addb
inc
insl
flds
add
push
and
pusha
fnstcw
and
xchg
jns
in
xchg
xchg
jp
sub
jb
push
mov
popf
jno
and
leave
and
push
fsqrt
test
mov
mov
mov
xor
test
push
mov
leave
pop
sub
mov
shlb
add
add
fistpll
xchg
push
jle
ficoml
cmpsl
cmp
push
push
rorl
jb
and
es
loop
in
or
dec
xchg
dec
dec
or
cmp
and
xor
mov
ds
dec
cmc
cmp
lock
xor
movsb
jge
pusha
js
mov
add
pushf
xchg
jb
sbb
ss
or
mov
shll
ds
lea
sub
or
mov
dec
xchg
adc
push
dec
out
xor
inc
sti
sbb
mov
lret
and
je
cmp
test
push
jge
sub
into
pop
xchg
xor
insb
fsubrs
push
mov
xor
and
pop
movsb
add
sahf
jg
sub
jecxz
fmuls
xchg
mov
push
mov
xor
loope
inc
sar
jne
jo
in
push
push
imul
fwait
notb
mov
mov
sub
jnp
test
mov
fsts
dec
cwtl
test
lret
loope
pushf
sbbl
mov
mov
dec
stos
cltd
int
sti
mov
gs
mov
in
lods
pushf
insb
les
mov
push
insl
call
xor
negl
bound
dec
int
jb
jb
je
jbe
mov
cmc
inc
jb
pop
mov
adcl
push
lods
sub
pushf
sahf
inc
rorb
call
fs
xor
or
adc
pusha
lret
inc
xchg
push
scas
out
jnp
jmp
cli
push
dec
out
sub
jle
mov
pop
aam
mov
mov
pop
aaa
xchg
mov
test
jecxz
int
xchg
cs
out
negb
mov
push
je
ret
jmp
or
jecxz
jmp
mov
lods
add
arpl
sbb
cmp
out
xchg
lahf
test
or
jae
push
aas
xchg
js
or
jns
testb
sbb
push
mov
dec
mov
and
repz
pop
andb
lret
enter
enter
popl
pop
ret
adc
out
dec
pop
rolb
sub
fs
mov
or
ss
push
push
mov
fiaddl
mov
fnstenvs
pop
mov
out
mov
inc
call
shll
aam
mov
mov
xchg
movsb
iret
ret
stos
cmc
int
pop
jnp
stos
inc
inc
pushf
in
or
fisubs
push
lret
mulb
outsl
or
jle
xchg
push
or
aaa
rorl
and
ficoms
andl
leave
test
or
icebp
cli
or
daa
adc
inc
inc
dec
cmp
daa
aad
pop
xchg
cmpsl
ds
push
lds
popa
popf
jg
add
lahf
mov
add
fcom
or
nop
stc
in
subl
cmp
adc
negb
cmp
stc
pop
pop
out
cmpsl
sbb
rclb
imul
ret
or
test
mov
out
adc
sub
xor
inc
dec
das
cmp
test
lret
push
or
xchg
iret
lahf
jb
test
outsb
test
sarb
or
mov
xor
sub
mov
push
popf
or
xor
cmp
movsb
lcall
sahf
xchg
lods
jle
test
repz
pop
cwtl
flds
add
jnp
push
repnz
ja
sbb
cmp
inc
int
add
and
gs
xchg
mov
inc
insl
data16
popf
daa
mov
nop
dec
cmp
cmp
icebp
inc
jnp
mov
xor
mov
jo
out
pushf
mov
mov
mov
mov
pop
cmc
cmp
adc
filds
adcl
xor
jecxz
imul
movsl
xchg
dec
adcl
mov
ror
out
test
repz
and
or
sarb
popa
dec
mov
cmp
push
lock
jo
sbb
dec
jmp
hlt
fstps
iret
sub
and
clc
cwtl
jg
les
dec
ljmp
jno
clc
subb
sbb
dec
sbb
movsb
cmp
mov
imul
xchg
outsb
std
imul
insb
call
iret
addr16
in
mov
mov
mov
jae
nop
test
call
loope
jnp
jnp
jno
bound
mov
cmpsb
das
bound
push
daa
fld
loop
jne
outsb
shrb
xchg
test
push
or
inc
push
test
mov
jb
push
mov
pop
push
mov
mov
out
out
aam
flds
mov
pop
mov
or
scas
rorl
mov
fimuls
fcoms
lods
lahf
push
clc
fsubr
sub
es
push
inc
mov
cmp
ss
dec
in
insb
cltd
jae
cmpsb
insb
sti
js
neg
adc
ja
lea
and
imul
loope
hlt
mov
movsb
sbb
bound
mov
out
lds
push
push
mov
mov
lds
lcall
or
leave
jle
xchg
jmp
cli
sbb
sub
mov
xor
loop
jno
jecxz
mov
in
jns
sti
dec
pop
in
or
pop
dec
ljmp
out
xor
leave
mov
out
test
jp
push
and
dec
bound
test
lret
shlb
push
fisubrs
jg
inc
mov
scas
adcl
mov
push
shrb
sar
sarl
shl
test
adc
xchg
xchg
insl
call
or
addr16
dec
cmp
sub
out
jo
ja
pop
and
stos
cmp
lock
and
test
dec
adc
incl
xchg
jns
shrl
imul
add
inc
xlat
push
and
ret
inc
mov
ret
fiadds
ret
inc
push
outsb
sbb
inc
arpl
nop
inc
jmp
movsl
lret
ret
pop
fsubrs
or
pop
mov
loopne
daa
mov
test
clc
sub
mov
loopne
jmp
or
jno
inc
jbe
idivl
pop
pop
push
in
lods
inc
out
shl
add
push
ret
lcall
sbb
add
mov
inc
imul
mov
ja
dec
add
cwtl
bnd
ds
dec
xchg
or
jbe
out
pop
icebp
repnz
dec
dec
add
rcl
enter
icebp
push
mov
adc
sub
repz
xchg
sub
push
mov
inc
push
push
jne
fldt
dec
sar
sbb
mov
outsb
cmp
and
xchg
sub
mov
xchg
mov
push
pop
jmp
mov
add
enter
jo
or
stos
inc
or
mov
rcl
jbe
or
data16
in
adc
push
fiadds
xor
je
jp
push
loope
adc
fstps
and
mov
cli
mov
or
sbb
mov
sub
or
jp
fistps
in
push
cmp
fstpt
lahf
daa
imul
addr16
mov
cli
adc
or
xor
adc
mov
push
rcll
cmpsb
scas
pusha
lret
mov
fcoml
adcb
movb
inc
pop
fs
mov
loope
cld
adc
sub
mov
jg
xor
mov
xchg
pusha
inc
or
xor
add
push
cmp
pop
mov
iret
hlt
cmp
je
jle
arpl
mov
arpl
lcall
pop
in
dec
hlt
fdiv
and
mov
out
jnp
cmpsl
ja
jmp
cmp
add
sbb
cmp
xor
jecxz
and
mov
push
mov
push
fs
xchg
sub
jle
cmp
into
loopne
mov
aaa
or
jg
movsb
aas
loope
dec
dec
fbstp
loopne
mov
and
and
in
jbe
aam
into
pop
push
or
repnz
cmp
mov
stos
jno
out
popa
cmpsb
sbb
je
inc
clc
jae
xor
and
fst
imul
lods
in
dec
leave
pop
out
add
sahf
or
xor
test
sbb
cmpsl
sbb
ror
fs
ss
mov
aad
jne
push
jne
mov
lds
imul
mov
adc
xor
jle
adc
test
push
xor
ljmp
push
in
add
imul
repnz
js
and
xchg
loopne
cmc
xchg
sub
xor
repnz
pushf
dec
adc
push
jmp
mov
mov
adc
insl
movsbl
mov
fldl
mov
ljmp
rorl
fisubs
and
sysexit
inc
and
mov
test
sahf
xor
lcall
sub
adc
push
sbb
adc
insl
inc
sahf
xor
mov
mov
and
sub
adcl
aad
in
push
ret
jg
add
xor
and
push
in
dec
push
mov
mov
and
fnstenv
inc
xlat
ljmp
push
mov
mov
adc
mov
push
pop
cmp
cmp
lret
dec
ljmp
cmpsl
pusha
and
xchg
test
in
push
mov
jns
lea
mov
shll
and
fsubs
sub
add
scas
call
popa
cmp
test
adc
inc
xchg
mov
hlt
push
repz
int
and
add
cmp
pop
xor
fcomp
in
mov
les
sbb
ljmp
fimull
or
call
dec
pop
or
out
xchg
push
sbb
add
mov
jmp
jae
mov
test
out
xor
jp
int
es
or
iret
addl
mov
int
into
loope
cmpsb
lock
rcrb
xor
je
dec
test
mov
stos
jmp
sub
mov
out
mov
rcll
lods
sahf
xrelease
loope
les
enter
imul
dec
mov
push
xor
insb
jae
sahf
xor
push
dec
inc
loope
mov
sbb
in
test
sahf
fldl
or
sub
sti
fnstenv
cmp
aam
mov
sub
lods
push
pop
out
aad
jg
hlt
inc
push
jbe
lcall
mov
mov
mov
adc
ss
jo
nop
imul
push
inc
pop
sbb
sub
push
cmpsl
iret
xchg
xchg
js
cs
aaa
mov
and
inc
pop
dec
cmp
jp
or
sbb
push
mov
pop
and
or
xchg
push
int
sbb
xchg
sbb
push
push
push
push
cmc
mov
jae
ret
jle
and
adcb
or
add
mov
mov
shrl
vmulss
out
push
sbb
mov
mov
sti
or
daa
cli
push
call
ja
ljmp
jl
push
outsl
adc
outsb
stos
clc
push
mov
fnstenv
int3
movsb
cmp
mov
int3
aad
xorl
jg
mov
jmp
mov
mov
dec
data16
cmp
mov
lods
pop
push
into
xorb
aaa
xor
loope
xchg
cmp
rcll
mov
inc
or
sarb
loope
and
cli
add
in
add
es
or
scas
cmp
sub
push
ds
xor
rorb
call
mov
xchg
inc
pop
push
inc
subl
dec
or
adc
in
out
inc
bound
cmp
xor
pop
mov
aad
lods
cmp
adc
fsubrs
icebp
js
in
in
or
les
jecxz
mov
push
cld
enter
push
in
rorl
sbb
xchg
push
rorl
jns
cmp
pop
xchg
inc
repz
cli
cmp
clc
adc
inc
sbb
aaa
adcb
sub
xor
push
int
movsb
push
jbe
pop
mov
clc
fbstp
push
and
fmuls
pusha
mov
sub
sbb
pushf
lret
cli
pushf
orl
hlt
sbb
inc
aas
jns
in
jo
shll
rclb
xchg
das
lahf
and
repnz
or
xchg
test
fdivs
imul
mov
sub
xor
jmp
dec
sbb
mov
fldt
aam
js
and
lods
loop
adc
iret
je
add
pop
scas
inc
and
dec
adc
stos
cmpsl
cmp
inc
xor
mov
sub
push
push
icebp
or
jge
cmpsl
mov
dec
insb
stos
jmp
data16
clc
push
pushf
scas
dec
sbb
cmp
mov
rclb
and
js
xchg
jge
enter
sbb
mov
jl
ret
lea
push
sbb
dec
push
lea
into
xor
rorb
and
mov
lock
imul
mov
or
jae
das
mov
popa
cmpsl
notb
adc
mov
outsl
out
mov
jp
cmp
int
sbb
imul
in
enter
mov
push
adcb
mov
inc
push
jo
rorb
xchg
cwtl
mov
std
mov
xor
sub
adc
push
mov
xor
adc
push
push
jo
mov
mov
sub
cltd
ret
sti
cltd
imul
pop
sti
sub
bound
stos
cli
or
pop
mov
test
cmp
hlt
push
jbe
cli
ret
addr16
scas
and
xor
sbb
or
clc
jae
jp
aam
jo
push
jne
pop
mov
aaa
int
adc
repnz
imul
repnz
loope
xchg
xchg
sbbb
mov
lahf
imul
js
dec
jmp
jne
mov
sarl
enter
std
fs
ret
fmull
inc
mov
dec
mov
sub
enter
stos
pushl
out
mov
push
test
insl
call
pop
fsubrp
push
sub
sbb
js
mov
pop
xor
es
sahf
xchg
fistps
xchg
jp
lretw
pop
xchg
pop
mov
jg
out
sub
mov
cmpsb
lcall
add
cmp
cmp
mov
jecxz
movsl
js
dec
lret
lcall
sbb
repnz
pop
repnz
je
inc
and
jns
and
dec
ss
shrb
cmp
pushf
add
mov
xchg
fnsave
out
mov
popf
fists
push
sbb
jp
sbb
ja
ret
pop
rcrb
daa
leave
and
dec
testb
add
test
daa
adc
xchg
jmp
sub
test
sbb
pop
adc
sbb
in
int
sub
or
daa
sub
pop
lahf
dec
out
lahf
in
pop
add
jl
fbld
pop
adc
or
adc
aaa
out
sub
mov
mov
push
fs
test
jb
nop
push
pop
mov
shlb
pop
repnz
fidivs
xchg
add
mov
pushf
cli
cwtl
iret
in
mov
add
pop
push
pslld
mov
push
outsl
cmp
cmp
cmp
flds
xchg
fldt
hlt
fsubrs
cmpsb
push
stos
loop
pop
mov
dec
dec
loopne
lods
sbb
jmp
jg
and
jb
xor
mov
xchg
test
flds
leave
and
xor
js
mov
add
adc
pop
cmc
push
sub
jns
jecxz
sub
fsubrl
rclb
fs
in
push
and
inc
cmc
cmp
xchg
xchg
pop
pop
jl
aad
ljmp
add
in
fists
loop
les
mov
add
pop
fsubl
enter
xacquire
lock
xchg
data16
cmp
pop
scas
scas
cmp
outsl
and
xlat
mov
andl
jecxz
cli
adc
or
rcrl
inc
mov
push
ficoml
and
fdiv
cld
xchg
test
push
xchg
ds
push
in
or
test
aas
add
inc
outsb
aaa
mov
xor
fbstp
ds
adc
leave
xor
lods
dec
lahf
frstor
mov
push
push
insl
sbb
sahf
mov
icebp
fildl
and
adc
gs
jp
arpl
dec
mov
adc
mov
mov
out
adc
sbb
call
int
ret
push
pop
xchg
repnz
mov
mov
es
sbb
das
lods
mov
mov
sub
push
subl
popf
inc
outsl
mov
cld
pushf
xchg
idiv
rorl
jge
in
xor
cmp
jp
subb
cmp
lds
adcl
sub
loope
pop
or
notb
xchg
repnz
jmp
mov
pop
xor
out
xchg
cli
pop
popf
paddusb
inc
imul
xor
mov
mov
xchg
add
test
aaa
sbb
loopne
jnp
lds
rclb
aad
enter
loop
sub
aaa
js
sbb
sbb
idiv
loop
adc
insb
add
inc
movlps
lcall
movsl
xor
enter
fwait
sti
fwait
xchg
daa
call
push
mov
mov
dec
lcall
push
mov
lods
cmp
lds
inc
ficoml
int3
and
jnp
add
mov
mov
pop
out
and
arpl
lock
loope
inc
shr
js
ja
push
mov
or
sbb
mov
xor
xor
shlb
adcb
icebp
mov
les
dec
mov
lcall
xchg
jp
daa
adc
xchg
shl
loope
sub
add
or
mov
push
jae
mov
lret
cld
sbb
sbb
in
sub
int3
dec
imul
mov
push
aaa
mov
dec
cmp
mov
xchg
xor
push
pop
repz
mov
and
push
xor
and
inc
aas
gs
pop
sbb
push
inc
inc
lahf
jge
sbb
in
dec
xlat
mov
lret
mov
outsb
pop
int3
or
or
mul
sbb
mov
xchg
mov
push
adc
repnz
add
and
inc
xchg
ds
and
data16
push
mov
mov
push
fwait
mov
shrb
add
subl
imulb
scas
cmp
loopne
aas
mov
ss
adc
mov
inc
xor
ret
es
pop
sbb
mov
cmp
out
dec
mov
jmp
cli
xchg
jbe
or
es
xor
sub
les
imul
add
repnz
stos
movsb
jnp
out
or
lods
cwtl
insl
inc
xchg
inc
mov
aad
xchg
imul
jle
dec
lds
shll
xchg
js
sbb
fsub
and
sbb
jp
data16
push
dec
rcl
push
fnsave
xor
addr16
and
in
pop
jne
sti
sub
push
mov
mov
mov
int3
push
scas
aaa
jns
and
sahf
or
mov
mov
or
xchg
mov
cmpsl
test
sub
mov
pop
scas
jmp
pop
aaa
jne
imul
xchg
mov
add
fimuls
inc
mov
push
pop
pusha
push
add
jp
mov
push
stos
xchg
mov
movsl
loop
sub
das
xchg
xor
add
daa
cmc
and
inc
cmpsl
test
jmp
into
xchg
fs
xchg
jno
jmp
push
test
cmp
outsl
loop
fldenv
shlb
jo
lods
test
dec
sbb
xor
mov
into
fdivs
mov
loopne
mov
dec
mov
lret
mov
imul
shlb
pop
or
test
and
adc
jb
xor
pusha
dec
in
sbb
mov
cmp
pop
cmc
add
data16
xchg
pusha
test
std
or
das
pushf
rclb
xchg
mov
scas
js
mov
add
inc
fucomp
inc
xchg
mov
or
mov
adc
int
shrb
repz
aad
mov
xor
adc
adc
aas
inc
pop
jb
adc
fsubrp
int3
repz
cmp
or
mov
mov
fmuls
push
test
loopne
cmp
cmp
pop
adc
dec
or
cld
pop
jle
jnp
add
sbb
sahf
sbb
mov
hlt
or
hlt
jnp
sbb
pop
cld
notb
neg
lcall
stc
nop
push
sub
xor
mov
mov
outsl
in
lods
loopne
enter
insb
imul
mov
mov
outsl
add
jmp
inc
xorl
xchg
xor
std
xchg
imul
jmp
jle
mov
pushf
xchg
adc
enter
adc
jae
int
mov
mov
xchg
test
fistpll
adc
or
xchg
mov
xchg
or
add
jne
jbe
pop
je
test
lds
repz
cmc
enter
rol
cmpsl
or
sbb
fimuls
popf
mov
sbb
adc
xor
icebp
jne
rcrl
cwtl
vmovss
sbb
pop
pop
add
mov
cltd
add
bound
push
sub
es
adc
fisubrs
mov
mov
movsl
aaa
fwait
jg
imul
popa
loop
lahf
pop
imul
sub
scas
addl
sub
js
fldt
lret
ret
jae
push
or
mov
dec
sub
popf
les
out
das
add
dec
sub
test
scas
call
adc
gs
fisubs
inc
jns
outsl
fsubp
xchg
insb
sbbl
mov
jp
and
mov
rclb
xchg
ja
adc
mov
sbb
xchg
ds
xchg
xor
shlb
rcrl
cld
in
add
fwait
sbb
and
or
lods
rcll
iret
in
adc
dec
cmp
pop
add
dec
push
lods
xor
stos
stos
jl
pusha
testb
adc
add
aas
ss
xchg
xor
jne
lds
cmpl
or
mov
cmpsb
das
test
xor
xorl
pop
mov
cltd
mov
inc
les
and
rcpps
sbb
cli
xchg
push
mov
out
cmp
test
mov
push
push
montmul
cmpsb
xchg
ror
and
fimuls
pop
sbb
bound
xchg
mov
test
daa
insb
push
orb
push
das
push
int3
loopne
adc
sbb
sbb
jmp
loop
xlat
outsb
add
pusha
cmc
sahf
test
xor
sub
cmpsl
fcmovu
mov
dec
sub
rcrl
push
out
sbb
mov
aaa
jne
imul
pop
jecxz
xchg
clc
enter
notb
push
test
ret
add
push
xor
out
lods
inc
mov
fldenv
fistpll
ds
sbb
into
inc
jmp
push
jae
mov
mov
jmp
mov
mov
sbb
cmpsb
lds
inc
aad
inc
pop
aad
sti
pop
or
inc
cmp
add
test
call
insb
sub
cmpl
and
lock
mov
js
outsl
mov
xchg
rcrl
xchg
in
stos
add
mov
cmpsb
sahf
test
aad
negb
adc
push
cld
dec
fwait
mov
sbb
mov
cltd
jg
sbb
ret
inc
daa
pop
xor
pusha
fndisi(8087
lock
lea
push
in
sub
mov
xor
dec
sti
in
add
or
inc
insb
mov
sahf
je
jb
sub
aas
and
mov
inc
or
mov
movsl
shrl
or
mov
mov
dec
dec
loope
xchg
mov
lret
sahf
dec
jecxz
sti
jle
adc
enter
std
xchg
fisubl
mov
sbb
lock
loopne
sbb
add
call
je
sbb
loopne
adc
pop
leave
mov
sub
mov
dec
nop
fsubl
ljmp
xor
inc
inc
adc
imul
mov
mov
pop
ret
fiadds
xchg
xchg
jne
pop
out
sub
jmp
jne
hlt
clc
push
out
int
or
mov
loope
dec
pop
mov
dec
out
les
mov
xor
cwtl
jae
xchg
pop
fstpt
loope
push
fdivr
mov
ja
scas
sub
and
shlb
fidivs
jbe
andl
mov
push
jae
ret
pop
mov
ja
or
push
sub
test
mov
loopne
inc
and
xchg
int3
jae
mov
ja
popl
fidivs
inc
adcl
pop
sbb
inc
fidivrs
iret
xchg
std
out
lock
jbe
lock
ss
icebp
xchg
inc
pop
pop
cmp
or
into
in
sub
into
ret
jb
jno
xchg
sahf
insb
sub
mov
pushf
dec
jbe
jno
push
add
xor
or
dec
gs
cmp
pmaddwd
add
pop
je
outsl
jnp
and
fs
inc
addr16
gs
add
push
pop
jbe
jge
js
out
pop
mov
lods
mov
or
enter
in
sub
cmp
mov
lret
mov
adc
dec
add
dec
lock
and
sub
iret
cs
repz
jge
movsl
cmp
inc
inc
out
ss
pop
imul
loope
jmp
xorl
fisttps
lret
jle
sub
inc
loopne
out
cmc
and
xchg
xor
pop
mov
mov
jnp
jne
pop
cmpsl
mov
pop
add
lds
jecxz
in
mov
sarl
shll
pusha
xchg
fdivrs
push
hlt
mov
add
add
mov
sub
ja
mov
mov
mov
popa
add
loop
std
xchg
std
adc
jle
lods
outsl
mov
sti
jbe
shlb
sahf
mov
jb
mov
dec
and
call
sbb
lcall
cmpsb
lock
push
mov
sub
mov
jmp
sti
push
and
pop
mov
jl
hlt
and
mov
adc
icebp
popa
clc
cmpb
mov
mov
add
out
adc
iret
mov
cmp
pop
ja
fcompl
inc
add
test
pop
xor
push
jge
jnp
lret
int3
inc
pop
mov
cli
or
scas
gs
sar
push
adc
into
enter
test
pop
dec
bound
add
pushf
sub
inc
cwtl
jmp
mov
xor
mov
mov
popa
popf
sub
je
cmp
dec
stos
jbe
inc
cmp
cld
lcall
in
outsb
inc
add
and
in
pop
sbb
fnstcw
xor
mov
loope
test
sub
leave
jl
loope
fsubrp
test
lret
adc
fldt
sbb
dec
push
inc
imul
or
das
ret
test
loop
push
lods
push
ja,pt
dec
and
mov
pop
cmp
stc
int3
fiadds
jno
inc
mov
fmulp
into
push
xchg
ja
fidivl
adc
jg
es
jecxz
adc
xchg
mov
lret
sub
mov
shlb
push
sub
cmp
ss
sbb
lods
ljmp
insb
decl
scas
test
adcb
popf
loope
popf
into
fidivs
push
cs
bound
mov
mov
cwtl
push
sti
adc
xchg
add
addb
bound
enter
stos
dec
incb
enter
mov
aam
jmp
outsb
mov
movsb
rol
mov
dec
into
out
sarl
push
je
inc
or
xor
test
push
sub
push
mov
scas
in
mov
mov
iret
fs
popf
sbb
inc
cmp
aas
lahf
test
out
cmp
xchg
or
xchg
stos
dec
pop
fdivl
jne
and
les
inc
inc
push
inc
dec
into
dec
test
imul
mov
mov
rol
inc
xlat
test
adc
ffreep
lds
into
enter
sbbl
aas
inc
add
addr16
or
jno
inc
jns
out
test
inc
jne
cmp
int
fsubrp
push
jmp
push
push
jno
cmp
leave
repnz
out
push
rclb
jo
cld
fmulp
in
imull
mov
mov
jl
test
loop
jns
lahf
jae
outsb
add
aam
sub
fbstp
mov
mov
fsubs
fsubrs
push
pop
test
pop
cs
lods
pop
popf
mov
fsubl
in
mov
push
sbb
cmpsl
sub
jge
jl
cmpsl
cmp
test
les
dec
mov
lret
ss
cmp
pop
push
js
repz
push
das
inc
add
sbb
pop
ds
jns
cmp
adc
popf
js
fstpt
in
mov
or
mov
xchg
cs
popf
mov
iret
inc
push
cmp
lods
xchg
xlat
adc
xchg
inc
jae
dec
popa
fldt
sahf
pop
fcomip
cmp
es
xor
in
aam
inc
or
inc
negb
test
das
add
xchg
cmp
in
dec
push
push
out
iret
push
or
add
mov
xchg
sub
flds
in
out
repnz
push
pop
cmp
inc
adc
xchg
cmpl
shrl
repnz
out
and
jp
and
orb
je
mov
sbb
nop
push
adc
dec
xor
jne
push
ror
xchg
insl
or
jno
pop
out
mov
sbb
push
adc
test
xor
push
cmpsb
pop
icebp
imul
xchg
das
imul
adc
mov
xchg
mov
push
cld
lcall
in
addl
cmc
mov
pop
nop
pushf
pop
dec
subb
jb
cld
int3
adc
mov
dec
pop
xor
inc
mov
dec
push
jb
pop
sub
dec
in
or
push
mov
lret
mull
sub
push
cs
inc
pop
push
ret
js
push
mov
push
and
sbb
mov
adcb
fnsave
jle
fidivs
and
inc
push
pop
das
mov
std
aas
test
icebp
dec
inc
fnstcw
jae
adc
push
mov
adc
dec
pop
sub
pop
fs
sub
cltd
lock
or
call
test
cld
int3
lret
and
sub
push
loope
dec
inc
test
repnz
jmp
mov
mov
popf
xor
and
mov
mov
es
mov
out
mov
cmp
pop
aam
push
sbb
fs
sub
inc
in
fdiv
sub
mov
fmulp
popa
mov
push
jae
aad
dec
adc
mov
cmp
mov
cmp
cmp
les
sub
aam
inc
and
dec
sahf
out
xchg
insl
inc
ficompl
xchg
popa
cmp
arpl
loop
jns
sbb
ret
push
insl
pop
adc
lcall
hlt
sbb
imul
xor
aas
je
xor
xor
hlt
xchg
add
arpl
xchg
mov
fstps
int
lds
adc
cmpsb
sub
xchg
xor
in
or
mov
or
sbb
dec
std
icebp
xchg
sub
push
mov
icebp
mov
sbb
cmp
mov
out
add
xchg
jae
cltd
movsb
mov
popa
jle
fidivl
inc
int3
jg
or
stos
lea
ret
outsl
hlt
jp
mov
lea
pop
push
lock
jo
push
add
push
ja
imul
ffree
jmp
pop
jg
pop
shrl
das
les
push
jb
shrl
pop
fwait
dec
add
andb
and
push
outsb
js
xchg
push
cmc
dec
mov
push
std
scas
dec
mov
jle
testb
push
call
push
pop
adc
aam
les
sub
rcrb
movsb
fs
popa
cmp
push
idivb
dec
sub
daa
mov
add
inc
loop
sub
jg
mov
ret
sbb
out
push
sbb
xor
faddl
montmul
cmpsb
add
lods
inc
inc
roll
dec
subl
rcrl
lret
pop
das
in
jg
push
out
je
inc
data16
and
shrd
xchg
jno
mov
fcomps
dec
out
clc
fists
mov
fistps
mov
xor
movsl
aad
adc
mov
lret
repz
popf
mov
dec
push
or
fcmovnu
lret
bound
cld
adc
loopne
jb
sub
sub
icebp
ret
mov
insl
das
and
cmp
dec
dec
xchg
adc
lds
xor
mov
pushf
test
call
dec
jmp
lds
addr16
push
call
ds
scas
mov
dec
pop
pop
aaa
xchg
push
aam
mov
sub
stos
and
sar
jne
into
scas
inc
add
inc
push
pop
icebp
or
fdivrp
cmp
inc
fmul
or
adc
push
mov
and
sahf
popa
cs
xchg
mov
fbstp
pushf
pop
iret
and
mov
lcall
mov
jp
and
dec
mov
mov
xchg
loope
repz
pop
and
dec
mov
shl
push
es
ret
fdivl
std
loopne
push
dec
xor
push
clc
mov
inc
cmp
lret
inc
sarl
sahf
cmp
xchg
xor
pushf
sahf
je
mov
xlat
enter
in
pop
jb
push
icebp
mov
push
lcall
mov
sub
pop
mov
push
out
addr16
pop
mov
sbb
int3
mov
cmp
cli
ljmp
mov
dec
lock
cmpsb
shll
insb
pop
push
rcl
mov
gs
pop
test
mov
int
aas
dec
pop
out
cmp
xor
inc
xchg
xor
push
iret
xchg
or
ss
jnp
jmp
inc
add
dec
out
xchg
jge
dec
xchg
add
xchg
pop
cld
xchg
mov
push
cmp
clc
insl
jb
loopne
push
push
loopne
test
add
mov
add
sub
cmc
pop
std
insb
ret
cmp
xchg
dec
dec
and
test
cld
fwait
pop
daa
push
rcl
jae
jnp
dec
mov
loopne
out
adc
out
lret
inc
jecxz
fcoms
push
xchg
ja
scas
outsl
sub
or
cmpsl
jg,pt
loopne
pusha
xchg
lds
rol
add
in
ret
push
addr16
imul
adc
shlb
jg
rclb
push
push
cltd
cmp
inc
push
mov
sar
syscall
sub
jge
out
pop
cli
roll
hlt
pop
pop
dec
add
in
out
sub
mov
idivl
vmovntpd
jl
jle
cmc
or
ljmp
jbe
push
sbb
movb
mov
ficomps
adc
imul
xchg
sub
inc
xchg
mov
dec
fsubl
incb
ret
pop
es
stos
jl
push
out
fucompp
or
xor
ret
pop
lcall
and
adc
outsl
cmp
test
inc
bound
nop
das
or
push
dec
pushf
pop
xchg
mov
sbb
add
mov
andl
pop
lea
in
add
pusha
ss
outsb
xor
movl
scas
pop
sti
pop
xchg
stos
and
cmpsl
iret
mov
rorb
cmp
std
insl
inc
cmpsb
mov
push
mov
or
loop
push
in
xchg
into
imul
aaa
addr16
dec
and
out
push
ss
outsb
leave
fsubl
dec
inc
das
mov
jge
sub
add
pop
lea
movsb
xor
bound
leave
int
addb
mov
aaa
and
imul
lret
shr
movsl
inc
push
mov
push
cmpsl
out
stos
ret
cmp
mov
and
xchg
jecxz
xchg
lods
ss
xchg
or
jns
out
movsl
lds
cltd
mov
pop
lret
xchg
lock
fldl
xchg
xchg
or
cmp
je
and
mov
cmp
shll
pop
cmp
sbb
pushf
or
sub
pop
pop
jecxz
jle
es
ds
into
outsb
add
xor
push
push
lods
adc
inc
mov
bound
lret
xor
mov
xchg
mov
cli
in
fsubrl
push
cmp
and
rcl
out
negl
mov
inc
fidivs
jecxz
or
adcl
mov
lahf
pop
popa
pop
push
mov
and
mov
lea
call
or
xorb
mov
movb
adcb
lret
les
icebp
mov
daa
mov
inc
popa
inc
inc
fsubr
push
inc
inc
xor
xchg
push
sti
mov
fisttps
xor
lds
dec
mov
dec
push
in
xchg
and
add
xchg
sub
mov
call
lods
lahf
bound
mov
pop
add
daa
in
xor
push
fdivrs
mov
xchg
mov
in
mov
cmpl
pop
insl
mov
out
mov
fiaddl
xor
jae
ret
xor
cmpl
add
sbb
stc
dec
sbb
add
sti
xchg
jmp
sub
or
loope
cmpsb
inc
cltd
hlt
js
jae
sub
mov
and
shll
scas
repnz
incl
and
mov
data16
or
pop
dec
lcall
or
sub
lret
dec
cmp
jae
dec
mov
xchg
std
cmp
mov
jb
or
aad
sbb
inc
call
ret
cld
outsl
mov
ret
mov
add
scas
mov
cmpsl
iret
xor
xor
mov
pop
lea
add
inc
adc
ja
int
das
stos
ds
dec
arpl
cmp
mov
loop
pop
shl
xchg
xor
sahf
push
sbb
push
std
pop
cmp
repnz
xor
push
jnp
and
popa
xor
std
outsb
pop
inc
or
fbstp
cmp
pop
gs
inc
add
inc
jecxz
imul
scas
daa
fdivl
mov
push
sbb
fidivl
xchg
fwait
add
xchg
jp
mov
jne
sbb
lock
outsl
adc
gs
ret
pusha
loope
jnp
enter
outsb
sbb
sbb
sub
xlat
insl
repnz
lcall
sbb
in
int3
ljmp
stos
lcall
leave
mov
mov
add
or
outsb
add
xlat
daa
mov
sub
jl
insb
sbb
cmp
insb
jg
out
mov
adc
push
leave
mov
popf
add
adc
std
fsts
icebp
je
in
nop
jno
adc
rcr
jb
lock
jp
stc
nop
mov
xor
mov
jns
shlb
inc
inc
push
enter
xor
insl
jge
push
or
xchg
push
int3
adc
cmc
and
arpl
mov
mov
jnp
inc
add
test
jmp
subb
mov
inc
mov
push
out
data16
ficoms
jle
pop
ljmp
in
inc
lods
push
stos
mov
pop
cmpsl
jp
push
lock
mov
in
adc
testl
xchg
push
xor
xchg
scas
lcall
jge
rolb
push
enter
int3
and
insb
cld
outsl
push
cwtl
adc
cmp
fidivl
or
daa
clc
lea
out
cmp
data16
into
push
adc
jp
mov
out
xor
mov
iret
cmpsb
movsl
hlt
cltd
adc
adc
shll
mov
and
xorl
xchg
mov
clc
rolb
push
mov
mov
mov
mov
movsl
and
fsubr
mov
or
pop
sbb
in
adc
pusha
jno
movb
test
lcall
int
mov
push
add
jl
js
push
popf
mov
test
jp
lods
xchg
cmp
jns
inc
std
fldenv
or
rorb
mov
cwtl
xlat
inc
cwtl
xchg
pop
and
test
mov
inc
pushf
mov
xchg
loope
pop
daa
fnstenv
gs
stc
lret
ss
inc
mov
rcl
adc
add
dec
xchg
xchg
dec
add
or
inc
mov
lock
insb
sbb
add
inc
xchg
jae
sbb
repnz
mov
adcw
xchg
xchg
mov
mov
jne
xor
dec
or
pusha
aaa
inc
ja
mov
bound
ficomps
out
push
jo
dec
gs
addl
test
push
addb
hlt
dec
sbbb
adcl
ds
or
outsl
lret
lret
ss
testb
push
test
jge
daa
mov
arpl
pusha
testb
cmp
aas
mov
ret
sbb
mov
repz
daa
sti
push
push
mov
sub
jge
stos
xchg
fnsave
pop
popa
and
in
repz
adc
out
ljmp
in
sbb
fisubrl
les
gs
xor
push
pusha
je
inc
fisubrl
mov
mov
mov
into
lods
test
pop
adc
js
or
add
insb
lds
iret
dec
movsl
or
xchg
icebp
sub
imull
pop
xchg
lods
mov
and
xor
int3
in
inc
clc
movsl
mov
and
pop
push
lods
xchg
jae
adcb
xchg
movsb
scas
pop
insl
mov
sub
sub
dec
cmpsb
nop
lods
xchg
sub
cmp
ja
data16
mov
inc
movsl
jb
lock
into
and
ja
mov
stos
jg
cmp
push
lcall
and
cmp
lahf
daa
and
mov
or
subl
imul
mov
pop
lods
lods
lock
push
lret
jns
mov
fisubl
mov
push
cmc
pop
mov
xchg
in
pop
add
lahf
inc
and
out
insb
mov
mov
out
fimull
daa
xor
mov
push
out
movsl
xchg
dec
mov
and
mov
pop
mov
add
icebp
dec
loop
mov
loopne
xchg
add
inc
xchg
push
sbb
lret
xrelease
lret
lea
push
cmpsl
sbb
push
stos
xor
add
or
or
mov
arpl
cmp
cmp
ret
sbb
mov
lahf
je
inc
mov
push
test
call
xlat
sub
repz
pop
outsl
mov
jnp
mov
or
in
test
call
fs
outsl
les
mov
sub
sub
daa
cld
es
mov
rolb
inc
cmpsb
cmp
int3
and
or
lods
test
aad
ret
or
in
dec
loop
loop
dec
fwait
sbb
out
out
mov
cmp
add
cs
shl
aam
dec
loop
adc
lods
push
sbb
jg
ss
mov
je
lds
add
push
fldcw
mov
jns
fnstsw
push
cmp
outsb
imul
fnstsw
xchg
push
push
cmpsb
cmp
aam
pop
push
stc
sbb
bsf
xor
xor
pop
mov
sub
xor
loopne
sarl
mov
pusha
paddsw
js
fmull
outsb
hlt
std
inc
mov
shrl
pop
push
jns
sub
pop
in
adc
cmp
sbb
mov
outsb
loope
cmp
or
jo
sbb
jge
sahf
mov
add
cli
xchg
loopne
rolb
ret
roll
mov
mulb
xor
mov
mov
mov
adc
pop
shl
dec
cmp
fldcw
std
lds
fisttpll
and
fadd
fildl
mov
push
xchg
rol
in
cltd
adc
rolb
mov
mov
add
xchg
cmp
xor
ja
subl
or
dec
sbb
sub
dec
mov
sub
mov
ljmp
add
int3
pop
outsl
jecxz
push
sbb
xor
xchg
movsb
dec
push
xchg
cmp
rcrb
lods
and
mov
inc
shrl
jbe
jp
les
scas
inc
std
pop
or
cmp
out
sbb
jmp
pushf
dec
hlt
int
mov
xchg
dec
out
pop
hlt
rorb
cmp
push
cli
mov
orb
fcoml
mov
fisubrl
ja
nop
pop
repnz
inc
ljmp
adc
pushf
jno
lock
inc
push
popf
stos
dec
push
jbe
pop
adcl
jnp
sub
inc
mov
ja
add
in
inc
fisubs
dec
and
pop
das
loopne
loope
jbe
aaa
adc
adc
dec
inc
fstpt
sub
push
fwait
je
mov
in
scas
xor
mov
mov
push
call
hlt
lret
outsl
jge
push
cltd
xor
rorb
dec
mov
jl
data16
sub
and
fildl
scas
fs
filds
mov
add
xor
pop
adc
ss
cmp
mov
cmp
add
xchg
pop
addr16
cwtl
jp
cmpsl
jo
pop
into
clc
and
les
pop
dec
cmp
push
ss
add
mov
mov
mov
mov
fs
mov
fsubp
inc
jmp
gs
cmp
hlt
pop
ja
push
insl
repz
mov
dec
add
std
lds
jne
mov
lret
aad
cld
mov
adc
movl
pop
mov
jnp
fbstp
fisttps
lahf
pushl
inc
mov
push
clc
or
imul
mov
add
ret
pop
sub
xor
icebp
mov
adc
cmpsl
fsubs
mov
je
in
and
xor
push
mov
cmp
stos
inc
or
outsl
loop
test
mov
sbb
lcall
dec
lahf
mov
dec
push
lods
jg
aam
mov
push
test
xlat
int
stos
outsb
add
xchg
jns
in
xor
insb
pop
hlt
add
add
lahf
xchg
xchg
data16
mov
cmpsb
pop
jnp
sti
movsb
mull
jns
add
ret
jns
test
aad
adc
inc
mov
pop
pop
or
xchg
in
inc
pop
int3
mov
ljmp
or
jp
lcall
jne
fiadds
daa
jae
pushf
scas
in
ljmp
fidivrs
cmp
mov
fwait
sbb
and
shlb
add
lock
xchg
dec
sar
and
in
dec
sbb
xor
aaa
into
pop
fs
fstl
iret
xchg
jne
adc
inc
cmp
test
cld
push
dec
lods
xlat
repz
out
sub
mov
adc
xchg
ja
fwait
mov
adc
andb
sub
movsd
pop
cwtl
ljmp
outsb
push
lods
lods
inc
filds
shl
push
push
lret
xchg
inc
je
adc
repnz
daa
mov
mulb
xor
ljmp
mov
dec
xchg
fidivs
mul
pop
in
arpl
sbb
mov
mov
pop
loope
test
cmp
into
push
and
dec
lret
arpl
mov
dec
pop
in
cwtl
dec
loopne
or
lds
out
jo
sub
inc
std
xchg
jne
in
and
mulb
sub
aad
cs
fistpl
repz
sub
test
mov
xor
fwait
inc
xlat
cmpl
push
or
fs
pop
cmp
jg
cmpb
mov
stos
cmp
icebp
mov
pop
cltd
out
add
mov
xchg
clc
lea
jnp,pt
das
jne
ret
in
mov
int3
into
sbb
cmp
les
inc
ss
leave
test
mov
add
movsl
and
xchg
in
les
adc
ss
call
push
push
mov
dec
sbb
jmp
mov
imul
xchg
add
jp
push
in
fadds
mov
test
scas
outsb
dec
and
jbe
in
sub
dec
aaa
add
mov
mov
pushf
aas
adc
pop
pop
cmp
or
ficoms
xchg
lods
repz
in
fstpt
outsl
dec
jmp
fcmovnb
or
xor
dec
jg
and
adc
iret
movsb
lret
jbe
adc
out
push
in
lods
in
jns
cs
pusha
out
cmp
or
sarb
es
icebp
xor
aad
pushf
dec
push
dec
xor
jge
cmp
cmp
rcrl
mov
push
jmp
aam
sub
imul
repnz
fsts
repnz
mov
push
les
mov
pop
in
nop
shl
jo
ja
mov
cmpsb
adc
xchg
ret
pop
cmp
adc
sbb
ret
rcll
add
loop
fwait
clc
ja
mulb
push
sar
xchg
xorb
rcrb
test
adc
fdivrs
shl
sub
and
repnz
pop
lock
addr16
adc
lret
insb
out
cmpsl
les
sbb
jp
mov
push
inc
xor
cmp
dec
in
js
push
mov
fcoms
mov
adc
xchg
dec
cld
enter
call
dec
test
or
ret
jae
call
shlb
jo
out
dec
pop
xor
mov
mov
leave
mov
inc
jmp
insl
mov
sahf
lret
cli
es
cmpb
fwait
in
sub
cmp
arpl
repnz
xchg
scas
jb
adc
in
lods
xor
lret
xor
rorb
clc
push
and
imul
inc
pop
addr16
xlat
out
pushf
dec
add
imul
inc
and
mov
fisttps
fidivs
lods
gs
or
or
cmp
cli
cmp
inc
rorb
dec
dec
sub
push
loop
les
xchg
popa
xchg
inc
xchg
mov
subl
icebp
insb
fbld
out
sar
push
xchg
div
dec
out
cltd
ds
idivb
jge
adc
pusha
mov
jl
dec
inc
pop
imull
push
and
inc
repnz
popa
pushf
mov
adc
mov
mov
and
fidivl
cmp
nop
sbb
scas
orl
and
sti
xchg
repnz
lahf
popf
push
xor
adc
adc
pop
pop
rcrb
mov
xor
mov
fisubs
or
adc
and
mov
shrl
in
mov
inc
fcoms
into
xor
jne
mov
aas
in
fs
dec
xor
add
cmp
loop
cld
bound
inc
adc
mov
sahf
repnz
pop
jg
xchg
inc
mov
fidivrl
xor
in
addr16
lods
or
mov
adc
sub
push
popf
mov
mov
insb
test
test
pop
dec
mov
mov
test
push
or
sar
fmuls
mov
in
loopne
jl
movsl
adc
add
sbb
xchg
inc
sahf
sbb
and
stc
arpl
outsb
jl
xor
cmp
inc
into
enter
adc
enter
negl
xorl
aas
fcompl
dec
call
dec
dec
push
jp
ljmp
inc
or
cmp
idivb
xchg
movsl
call
jbe
push
mov
pop
jo
mov
aaa
icebp
or
xchg
stos
mov
daa
cmp
sub
mov
popa
das
mov
pop
add
out
sti
xchg
nop
pop
in
adc
adc
inc
std
xchg
push
mov
push
lcall
cwtl
jae
jo
or
mov
xor
mov
adc
pushf
dec
test
adc
lea
jae
inc
sbb
aam
mov
jb
mov
or
cmpsl
ss
in
adc
out
xor
pushf
pop
sub
mov
stos
insb
cld
or
ja
xor
cwtl
iret
xchg
mov
cmp
mov
jo
lret
scas
test
jno
test
or
push
call
gs
dec
lods
icebp
loop
adc
sahf
sbb
call
lcall
aas
nop
outsb
xor
jnp
cmp
ja
dec
aaa
dec
into
seta
fnstcw
rorb
loop
mov
les
cmp
movsl
mov
popa
sub
adc
mov
pop
outsb
cli
es
popf
cmp
lods
push
push
xchg
adc
es
or
cmp
cld
adc
stc
fsts
in
mov
pmulhw
inc
push
lods
or
fldcw
xchg
and
cwtl
outsl
je
sbb
shll
pop
arpl
int
pop
sub
add
and
ret
pop
mov
loop
mov
pop
sub
push
push
jl
in
lret
and
shrl
dec
loopne
sbb
inc
dec
push
dec
loop
adc
ret
gs
pop
adc
nop
sub
jb
mov
xchg
jbe
cmpsl
scas
jecxz
shlb
test
incb
fldt
aaa
push
je
fcmovb
lds
xchg
fsubr
mov
pop
insl
add
push
xlat
mov
pushf
repz
and
push
enter
std
jno
out
jle
cmp
insb
outsb
repnz
sub
outsb
add
test
int3
cmp
mov
fldl
stc
and
in
adc
adc
dec
ljmp
rolb
clc
fdivp
jle
sub
mov
aam
ret
mov
pop
sbb
enter
js
pop
das
fmuls
arpl
and
stos
pop
sbb
xchg
pop
sbbb
jp
test
std
xchg
jno
cmpsl
ds
push
repnz
mov
hlt
push
cmc
sbb
mov
pop
movsb
push
add
pushf
inc
cltd
push
testl
mov
sahf
filds
jle
xor
movsb
mov
popa
std
and
sub
cmp
jl
sbb
xchg
popf
shrl
mov
into
pop
add
aaa
imul
pop
mov
cli
push
dec
xlat
out
inc
clc
push
adc
jge
adc
pop
push
pop
add
sub
lcall
and
mov
testb
cld
adc
test
xor
xlat
rcrl
andb
adc
mov
jge
test
popa
sahf
push
mov
pop
test
ret
xor
jecxz
push
lea
lea
inc
testl
push
xchg
push
or
jo
sub
mov
xchg
adc
das
xchg
adc
pop
and
scas
stos
mov
nop
cmpsl
dec
xlat
outsb
xorb
mov
cmp
dec
stc
pop
dec
pop
cmp
aam
dec
pop
stos
inc
nop
push
jg
cmpl
test
push
or
cmpsb
inc
or
js
lods
nop
imul
jbe
aas
inc
out
xor
in
pmaddwd
or
xlat
clc
jp
xor
mov
insb
out
test
or
cmpsl
jb
jge
sbb
xor
cmp
xchg
gs
cmp
dec
leave
out
or
popf
jge
in
or
ss
rcrb
je
and
leave
dec
in
enter
loopne
xchg
jp
push
push
roll
fcmovu
addr16
jge
push
popa
clc
jo
or
sub
std
or
dec
jne
mov
xchg
adc
rcl
rcrb
fwait
add
mov
lcall
xor
adc
mov
sub
adc
sti
and
cmp
shrl
xor
call
mov
es
cmp
pop
push
out
std
sub
jo
or
dec
xchg
test
aas
lret
bound
pop
mov
mov
cli
xchg
jle
dec
jne
mov
out
inc
xchg
inc
loop
jb
int
notb
jecxz
loope
sahf
push
pop
mov
std
or
data16
xchg
mov
mov
xor
sub
aam
xchg
nop
adc
pop
movsl
mov
jns
test
fadds
js
cli
sub
out
cmpsl
sub
in
stos
cs
outsb
pop
loop
jnp
fwait
ror
and
leave
int
pop
arpl
cmp
pop
lods
and
mov
cmp
mov
inc
adc
ljmp
adc
push
out
cmp
repz
mov
inc
pop
ljmp
push
test
cmp
adc
movsb
es
mov
bnd
out
add
int3
pop
push
in
inc
adc
sbb
jne
loope
lret
es
out
or
aad
sub
aam
pop
xor
cmpsb
es
mov
mov
icebp
sub
cmp
or
and
mov
inc
cmp
mov
pop
repnz
dec
adc
test
mov
push
insb
dec
or
test
adc
pop
lock
pop
imul
sub
mov
push
cmp
dec
adc
daa
pop
mov
sub
pop
lcall
stos
sbb
subb
lret
adc
mov
es
fldl2e
push
outsb
sub
mov
adc
push
mov
aad
arpl
cmp
cmpsb
pop
ss
jno
insl
push
lods
adc
frstor
xor
fwait
pop
bound
mov
mov
jl
int3
mov
enter
mov
insl
rclb
repnz
cld
in
xor
jg
cmp
nop
cmp
xor
mov
ss
scas
cmp
push
idivl
fimull
add
int
popa
sbbb
nop
sub
push
sub
dec
dec
lret
xlat
out
loope
sub
mov
cmc
adc
in
aad
rcr
xor
xchg
jbe
sahf
out
dec
outsl
hlt
jns
and
dec
orl
xorb
pop
scas
pop
xlat
outsb
rorb
push
dec
mov
cmp
fisubs
orl
sti
stos
ficoms
stos
push
dec
jle
rcrb
and
sbb
sbb
ret
cmpsb
xchg
pop
aam
jecxz
adc
or
stc
push
fsubr
in
mov
stos
mov
pop
ret
ret
jns
dec
popf
insb
pop
loop
dec
rorb
pop
std
jl
sbb
dec
idivl
sub
loope
stos
dec
out
jbe
mov
ror
les
out
fnstcw
repnz
sbb
lcall
ljmp
sub
jle
lret
or
jle
jnp
stos
insb
sbb
dec
aaa
leave
mov
lods
jge
inc
push
loop
lods
fistl
push
test
cmp
xor
xchg
jl
clc
jno
adcl
mov
fistps
sahf
dec
cmp
jg
loop
pop
ror
in
push
or
pusha
cmpsb
xchg
mov
movsb
push
pop
repnz
jns
fldenv
es
jg
xorl
dec
cmp
push
popf
cmp
and
and
push
ljmp
stc
lock
imul
sahf
mov
mov
xor
jb
xchg
fimull
movsl
or
movsb
pop
mov
mov
mov
rorl
movsb
cmp
hlt
ret
mov
cmp
rorl
aaa
movsb
outsl
in
mov
mov
repz
pusha
in
xor
lds
jae
movsl
les
mov
push
and
rcll
xor
sbb
inc
fmuls
cmp
push
fsubl
or
adc
push
inc
cmc
int3
fsubp
push
gs
call
jp
ret
cmp
negl
fisubs
add
sbb
push
mov
div
mov
xlat
enter
gs
jb
inc
cmpsl
ficoms
js
je
xchg
pop
push
and
nop
jnp
sub
pushf
push
aas
into
popa
add
lods
jg
inc
fidivs
cli
movsb
add
int
inc
jl
dec
jne
inc
stos
enter
int
fwait
dec
push
scas
inc
xchg
data16
mov
std
call
adc
sub
ss
add
mov
cmovo
out
mov
cmpl
popf
jg
cmp
adc
jecxz
fsts
push
mov
or
lods
mov
aaa
sti
data16
or
adc
mov
sub
dec
rclb
test
and
icebp
mov
clc
add
jp
cwtl
das
dec
scas
adc
pop
into
or
cmp
sti
inc
xor
cmpsb
in
adcl
lds
nop
dec
dec
inc
inc
test
xor
test
mov
xchg
out
lahf
arpl
lahf
and
pop
ret
cld
add
add
cwtl
dec
push
fwait
cmc
mov
clc
iret
aam
cltd
fidivs
add
or
dec
jb
pushf
xor
mov
test
cmc
or
jl
add
testl
test
add
xor
arpl
es
mov
negb
std
inc
add
insl
xor
push
or
and
add
and
jb
pop
push
outsl
xchg
aad
fcoms
xor
cmc
and
js
data16
jbe
hlt
pop
das
lods
test
inc
leave
push
scas
pusha
fistl
mov
push
or
lret
xchg
movsb
cli
shrl
mov
ja
outsb
jl
mov
adc
test
lret
subl
mov
test
stos
mov
pop
cmp
jmp
xchg
iret
gs
sub
sbb
arpl
dec
lea
mov
xchg
jb
pop
mov
popf
xor
sub
push
push
leave
loope
pushf
dec
les
mov
mov
lret
dec
lret
jae
shlb
dec
out
or
sub
aas
or
sub
dec
add
pop
repz
xor
cmpsb
int3
xorl
cli
repnz
push
xlat
int3
sbb
adc
jbe
adc
pushf
xchg
subl
mov
push
neg
xchg
xchg
stos
mov
sub
jbe
out
add
dec
mov
into
not
jbe
pop
or
pop
andb
bound
jbe
aam
and
cmc
dec
iret
sub
push
add
out
sarb
repnz
mov
out
sti
pop
xor
lret
roll
mov
fists
dec
adc
movsl
addl
jae
add
and
subb
adc
sahf
clc
cmpl
mov
cmpsl
xor
push
movsb
sub
pop
test
rolb
jle
sub
push
into
daa
jnp
mov
dec
sub
in
jnp
scas
xchg
jmp
and
aas
jge
insl
in
jge
shl
mov
mov
daa
jge
and
jae
mov
test
mov
or
and
cmp
cmp
movsl
sbb
insl
test
popf
inc
or
bound
sti
and
jp
dec
iret
push
and
adc
cmc
xor
add
out
ficompl
daa
lahf
int3
lods
jns
scas
inc
mov
sbbl
int3
sahf
mov
sub
cli
test
push
add
pop
lock
mov
lret
xor
cli
push
out
test
dec
mov
dec
lcall
and
icebp
cmpsb
fldenv
add
das
inc
inc
stos
cmp
sub
sbb
inc
xchg
mov
leave
push
test
push
sahf
dec
cld
dec
or
push
inc
or
bnd
mov
scas
cwtl
filds
dec
imul
fwait
into
fdivrs
repnz
scas
inc
sti
out
out
jecxz
jbe
or
sbb
xor
es
xchg
jb
rcrl
xor
sbb
lret
sarb
int
jmp
dec
pop
stos
xchg
add
in
or
mov
jnp
scas
cli
cmp
adc
scas
call
xchg
scas
test
pushf
cmp
cmp
mov
test
repz
repz
insl
clc
rcrb
aam
loope
cmp
xchg
push
out
int3
icebp
jns
dec
push
add
add
mov
xor
test
adc
cmpb
pushf
or
out
fsubl
sub
mov
std
jnp
filds
pushf
push
jle
and
jle
pop
into
incl
adc
inc
mov
arpl
std
jmp
inc
loopne
nop
adc
int3
arpl
subl
in
fdivrl
repnz
pop
popf
fincstp
mov
aam
fsubrs
mov
sub
sbb
and
add
pop
ljmp
push
out
sbb
in
xchg
and
xor
xchg
cmpsb
or
mov
int
or
lahf
pop
testb
es
xchg
mov
mov
scas
xor
xchg
add
add
sub
in
pop
xor
sbb
icebp
cmp
jnp
jg
je
test
push
test
sub
repnz
sbb
fiadds
repz
sub
ljmp
mov
in
dec
pop
pop
add
pop
ss
push
daa
push
mov
pusha
inc
jb
mov
xchg
ljmp
mov
mov
adc
dec
stos
aam
leave
addb
out
and
daa
push
and
inc
mov
out
cld
pop
stos
adc
sbb
adc
xor
into
mov
push
testb
cs
pop
aaa
dec
xor
push
jb
cmp
and
enter
or
push
mov
scas
jle
jmp
jb
divl
or
push
cmpsb
mov
and
lods
lods
sub
lret
cwtl
xchg
adc
ss
dec
jge
sbb
insl
xor
sub
jg
imul
sbb
test
rcr
pop
testb
inc
stos
pop
add
jo
icebp
test
in
repz
insb
xor
pop
imul
dec
xor
out
icebp
adc
std
push
lahf
mov
outsl
inc
sbb
mov
clc
sarl
cmp
lret
ja
mov
shl
xchg
push
mov
pop
jmp
cltd
push
mov
sahf
outsb
int3
in
mov
cmp
adc
xchg
and
dec
es
aad
inc
inc
xor
frstor
xchg
dec
repnz
jno
cmp
xchg
pop
pop
daa
mov
movsl
inc
cmp
inc
dec
pop
lds
cli
xor
std
cwtl
push
ljmp
jno
int
mov
fstps
jp
jnp
jb
jbe
sbb
and
cmpsb
enter
pop
push
jp
add
cmc
push
fsubl
test
mov
sbbl
mov
mov
and
fbstp
xchg
mov
dec
sar
jg
cmp
push
les
into
dec
pop
or
imul
adc
in
xor
ja
lahf
add
inc
dec
adc
cmp
inc
adcl
int3
xor
adc
mov
stos
jnp
xchg
scas
inc
lcall
inc
iret
jno
or
enter
pop
xor
xor
pop
imul
stc
lods
int3
xlat
sbb
call
testl
push
mov
mov
mov
in
mov
rcrl
mov
adc
mov
jb
into
aam
ljmp
pushf
scas
lds
fwait
or
push
xor
lds
sbb
xor
stos
addr16
add
aaa
inc
dec
mov
sbbl
inc
fadd
outsb
push
aaa
xchg
test
xchg
mov
sub
in
les
aaa
pop
cmp
xchg
sarl
and
iret
mov
fs
fbld
pop
ss
addb
in
xor
fcmovbe
or
sub
test
cli
sbb
repnz
xchg
push
mov
aas
dec
aaa
xchg
out
aas
dec
pusha
xchg
pop
rorb
xchg
sahf
mov
xchg
or
insl
jne
push
stos
lret
addr16
cmpsl
ds
xchg
stc
or
out
call
push
jae
dec
mov
inc
lret
es
xchg
fucomi
outsl
inc
sbb
inc
mov
sub
mov
cmpsl
flds
fidivs
dec
xchg
mov
pop
mov
int3
jg
or
pop
mov
fs
cwtl
aad
faddl
jl
push
pop
lods
pushf
dec
adc
movsl
sbb
mov
and
mov
loopw
cwtl
xchg
mov
inc
mov
and
and
mov
popf
ds
jno
and
in
xchg
mov
adc
mov
push
hlt
daa
mov
andl
fcomp
pusha
add
mov
jmp
data16
xlat
sub
or
dec
cmc
adc
int3
out
lock
fs
lods
adc
mov
aas
xchg
jb
rcrl
adc
inc
adc
sahf
and
insb
pop
std
xchg
or
je
out
das
sbb
negb
mov
divb
add
xor
fisubs
jle
xlat
outsb
jbe
inc
fidivrs
ljmp
and
imul
outsl
xor
rcll
inc
repz
loopne
das
jecxz
inc
jne
stc
and
adc
mov
clc
aaa
mov
scas
jb
xchg
and
xor
sti
es
or
inc
fucomi
sub
mov
lea
mov
xchg
enter
lods
jmp
std
pop
and
addr16
cmp
xor
test
push
insb
add
stos
lds
ret
pop
movsb
xchg
adc
jl
int
dec
int3
jne
push
stc
cmp
fcomp
ljmp
notl
jmp
xchg
jmp
popf
es
add
xchg
in
xlat
mov
inc
push
xor
jp
mov
loop
jp
flds
js
mull
pushf
pop
mov
lret
and
sub
outsl
mov
add
pushf
cs
jae
into
rcrb
jns
loopne
fistps
jbe
sbb
lock
sbb
and
sub
xchg
or
fildl
jmp
cs
push
push
pop
aam
cmp
pop
shrb
fistl
jg
sub
xor
mov
mov
sahf
push
mull
fsubr
jns
and
jle
mov
mov
rcrl
pop
and
jg
iret
and
orl
mov
mov
dec
jmp
test
das
lods
push
push
ret
int
sub
ret
je
call
fcmovbe
pushf
arpl
push
sbb
jmp
or
cmp
dec
xchg
adc
repnz
pushf
xor
test
adcb
bound
add
pop
lock
or
ljmp
test
data16
ret
loope
xor
push
mov
sahf
xchg
sbb
rcl
imul
hlt
mov
ss
sub
test
inc
cmp
insb
and
sahf
movsl
add
daa
shlb
cwtl
push
or
or
or
adc
mov
pop
xchg
push
adc
lret
sbb
mov
pop
adc
mov
lahf
out
insl
push
jecxz
mov
jne
mov
imulb
push
ficoml
xchg
xor
xlat
push
test
xchg
aaa
into
das
inc
cld
arpl
xor
stc
push
sub
testb
sbb
aad
sbb
dec
mov
push
add
cmp
and
lock
mov
in
test
cmp
and
pop
mov
sbb
jecxz
or
adcl
mov
outsb
loope
and
sbbl
mul
lahf
mov
sbb
xchg
and
add
and
sbb
pop
jbe
sbbb
sub
mov
aam
testl
loope
clc
outsl
data16
xor
push
shrl
inc
inc
es
idivl
fistpll
inc
lods
adc
fisubs
adc
sub
cmp
inc
xchg
and
dec
stos
or
jno
subl
mov
xchg
jnp
xchg
imul
xlat
ret
push
push
or
jmp
dec
adc
sub
adc
sub
ss
cmp
mov
sti
flds
test
into
mov
mov
cmpsb
mov
xchg
push
mov
in
test
lret
mov
mov
jge
xor
inc
inc
shl
sarb
inc
dec
out
xor
and
jo
repz
inc
sub
rcr
in
mov
xchg
or
adc
add
xchg
stc
adc
mov
pop
xor
je
movsb
movsl
jmp
sub
mov
xlat
imul
cmp
popa
xchg
js
into
cmpsl
jbe,pt
stos
hlt
sbb
cmp
push
js
mov
xor
sub
inc
sub
andl
repnz
sub
fs
ret
xorl
stos
pop
sub
and
pop
hlt
inc
or
dec
fists
xor
dec
ljmp
mov
lahf
sbb
pop
icebp
minps
sbb
enter
mov
sbb
sub
scas
sub
mov
imul
inc
xchg
adc
push
lret
dec
shrl
mov
loop
jmp
mov
test
push
pop
push
out
mull
shlb
xchg
mov
adcb
out
xchg
jmp
jb
mov
dec
xchg
sub
shlb
and
mov
lret
pop
lahf
lods
adc
ret
push
lods
mov
add
loopne
push
cmc
insl
inc
dec
loopne
fiadds
mov
pusha
sub
mov
enter
inc
rcl
je
adcb
hlt
lss
pusha
dec
shll
dec
inc
dec
loope
sbb
rcl
stos
adc
sbb
xlat
sbb
or
sbb
add
or
or
loopne
push
pop
mov
clc
adc
mov
loop
mov
leave
inc
arpl
stc
out
movsb
inc
fsts
lret
and
jl
loope
cltd
mov
and
inc
out
xor
pop
jmp
adc
inc
movsb
jg
pop
add
jl
sahf
push
pop
jo
sub
and
or
xchg
add
pop
dec
scas
int3
insl
insb
and
mov
add
adc
or
push
jle
cmpsl
orb
mov
repnz
cmpsl
and
sti
fucomip
ss
test
divb
ss
push
repz
mov
ljmp
mov
cwtl
add
xchg
test
push
push
cmpsb
jle
loopne
jecxz
cmpsb
add
lods
add
lcall
cld
sub
push
fwait
cld
pop
fucomip
inc
stos
jmp
mov
ja
bound
test
pop
or
pop
cli
jb
ss
sub
jg
sbb
jl
fldenv
or
jo
mov
mov
mov
dec
cmc
cmpsb
sub
add
bound
jo
mov
call
dec
and
and
leave
ja
jp
cli
inc
movsl
mov
ret
icebp
adc
stos
add
in
mov
push
lods
jmp
and
jmp
mov
fs
lods
out
jecxz
dec
leave
mull
test
sti
shlb
aas
movsl
cmp
cwtl
orb
icebp
inc
xchg
xchg
add
mov
bound
sub
pop
lds
adc
sbb
scas
mov
inc
and
mov
or
add
test
sub
add
std
popa
insl
cmp
negl
adc
ljmp
popa
je
rcl
jecxz
cmp
xchg
js
lods
insl
loop
sahf
int
mov
rorb
jmp
sbb
shll
push
repnz
clc
popa
and
movsb
repnz
mov
shr
add
sub
dec
lahf
std
inc
in
js
and
divl
popf
jnp
ljmp
cmp
das
sbb
mov
mov
jmp
sbb
fisubrs
or
and
push
mov
sbb
sarb
push
inc
shrb
aas
pop
sti
jl
sub
aam
xor
sub
mov
mov
add
in
adc
loope
shlb
sbb
cmp
loope
hlt
mov
ja
out
and
push
repnz
xchg
cmc
stc
rcl
jo
movsl
mov
sbb
in
loope
sub
aaa
orb
fisttps
push
and
sbb
into
inc
popa
push
mov
shrb
mov
add
into
cwtl
dec
add
xchg
in
notl
int
jmp
gs
and
arpl
pop
or
fiaddl
popf
dec
mov
mov
in
stos
repnz
fwait
xor
lret
loope
dec
push
popa
sbb
and
ss
daa
add
stos
mov
mov
sbbb
adc
inc
xlat
cmp
mov
dec
inc
testb
fwait
sbb
dec
push
out
cmp
pop
cmc
dec
mov
aad
test
adcl
lret
notb
cmpsb
cltd
clc
movsl
push
pushf
pop
fmuls
call
mov
sub
dec
mov
add
mov
sbb
dec
xlat
in
mov
xchg
dec
jne
dec
dec
out
push
sub
cmp
pop
lahf
inc
mov
pop
je
in
mov
ret
push
or
push
sbb
lcall
mov
iret
out
dec
lods
mov
dec
in
mov
cwtl
pop
xor
mov
xchg
popf
jo
cmpsb
sbb
and
push
jae
inc
ret
dec
out
or
out
rcll
fadds
pop
add
sbb
sbb
mov
fs
outsb
jl
adc
data16
pop
inc
and
lods
adc
dec
mov
xor
pop
xor
addl
dec
hlt
push
push
mov
jae
sub
punpcklwd
xchg
movsl
push
mov
ds
aad
cltd
or
mov
pop
nop
cmpsl
ret
xor
loopne
pop
or
dec
out
icebp
adc
js
adc
incb
xor
dec
dec
stos
in
rcll
mov
jge
insl
mul
mov
daa
outsl
pop
ret
xchg
pop
push
mov
cmp
fcomps
add
test
clc
int
jbe
shrl
das
mov
int3
lds
enter
pop
push
adc
mov
cltd
push
cld
sub
insl
repz
push
daa
jecxz
test
jle
aad
std
and
cmp
test
icebp
sbb
loopne
out
xchg
daa
push
aam
xchg
cmp
cmp
pop
sbb
cmp
js
push
mov
mov
jl
gs
test
mov
mov
fcomps
insl
test
les
test
or
subl
fwait
lods
in
xchg
out
loopne
xchg
lahf
and
mov
aam
jge
adcb
and
inc
insb
fbstp
push
push
movl
jmp
xor
xchg
pop
cmc
orl
inc
sub
ds
and
xchg
jnp
test
pop
pushf
add
repnz
inc
cmpsl
xchg
push
jns
loop
cli
lcall
jae
sarb
loopne
into
leave
pop
xlat
jo
inc
imul
iret
xchg
fadds
lods
add
out
lea
sbb
pop
inc
inc
out
sbb
lods
pushf
int
and
mov
aaa
mov
int
cmpl
loope
sbb
mov
mov
xchg
adc
mov
loopne
sub
in
ficoml
std
inc
icebp
negl
rcrl
xchg
lds
out
cmp
pusha
mull
std
sti
and
cli
cmp
in
xchg
pushf
daa
je
pop
mov
pop
mov
jmp
mov
xor
pop
out
dec
or
pop
in
pop
dec
mov
ret
sub
cmc
inc
push
test
xchg
pushf
xor
icebp
insb
mov
pop
scas
scas
dec
add
xchg
scas
pop
test
mov
outsb
lds
or
adc
dec
dec
pop
jbe
sub
mov
xor
sahf
movsb
inc
or
mov
lret
adc
stos
push
jmp
pop
dec
or
cmp
rcr
insb
mov
addl
das
mov
mov
je
fdivl
mov
mov
fcompl
cmp
lcall
popa
clc
xor
scas
ljmp
bound
and
js
push
arpl
push
jmp
pop
fldl
sub
lcall
cmc
pop
inc
aaa
dec
jnp
testl
outsb
push
dec
dec
inc
dec
cmp
mov
push
iret
dec
mov
rcll
push
sbbb
dec
inc
push
jl
push
pushf
cmp
dec
mov
sti
jle
loopne
out
mov
or
mov
call
daa
inc
arpl
pushf
jae
pusha
in
push
xchg
arpl
add
push
stc
mov
ret
lock
cmp
ss
pusha
adc
fwait
mov
daa
mov
gs
enter
mov
mov
out
scas
data16
push
orb
and
in
fstpl
pop
or
and
mov
out
rolb
cmovae
in
out
js
dec
loop
scas
scas
sbb
push
cltd
cmp
negl
sub
inc
and
inc
fldt
cmpl
adc
push
sbb
pop
inc
andl
and
test
pusha
jg
add
xor
cmp
jge
dec
outsb
repnz
jne
mov
mov
cmpsl
call
mov
dec
icebp
in
push
xchg
push
shll
xchg
jg
out
mov
jecxz
pusha
dec
call
leave
in
cmp
mov
sbbl
inc
data16
xchg
test
adc
and
lret
mov
outsl
in
mov
repz
fsubs
pop
repz
decl
aam
and
dec
dec
cmp
pop
out
xlat
pop
jno
xor
mov
xchg
xchg
bound
adc
and
sub
inc
stos
or
in
add
xor
ja
ljmp
rcrl
mov
dec
clc
xor
inc
data16
lret
xchg
stos
add
mov
jne
pop
sahf
loope
xchg
xor
lcall
punpckhdq
mov
gs
int3
xlat
fsubrs
mov
sbb
dec
testb
or
mov
sti
scas
cmp
int3
loope
pop
adc
sbb
ja
mov
sti
fucom
add
sub
mov
cmp
scas
out
cmp
lods
imull
cmp
cmpsl
imul
inc
arpl
aas
sub
xor
lret
xor
repz
add
jle
mov
mov
lret
push
ds
xchg
jl
das
xchg
sub
cs
scas
lahf
sarl
jno
mov
mov
js
gs
mov
rcr
jae
sbb
push
int3
and
fs
arpl
jbe
xchg
mov
push
pushf
ret
lock
pop
push
fcoml
xor
scas
aas
fldenv
icebp
inc
xchg
dec
test
pusha
dec
dec
pop
ds
fwait
loop
cld
xor
pop
and
aaa
or
lcall
inc
rcl
sub
cmp
jle
pop
rorb
xor
dec
movsb
sub
lea
aam
fwait
fs
insl
outsb
lds
adc
add
ljmp
mov
jmp
into
fdivl
out
out
outsb
fsubrs
inc
stos
lret
arpl
stos
aam
cmc
mov
sbb
out
das
xchg
sub
loopne
sub
xlat
loopne
pop
cmp
outsb
sbb
test
push
icebp
int
add
or
xlat
jno
or
or
mov
adc
mov
sub
dec
iret
fnstcw
pusha
arpl
mov
incb
fwait
or
js
out
sbb
mov
stos
inc
and
xchg
leave
fstps
fbstp
mov
mov
adc
movsb
jecxz
xor
or
sbb
mov
jecxz
int3
jns
shll
jmp
js
xchg
dec
loopne
out
or
add
mul
lea
icebp
fisubl
iret
popf
std
jg
shlb
mov
push
jecxz
xchg
ret
das
adc
inc
rclb
add
dec
add
inc
into
add
ret
dec
bound
pop
jb
push
sub
pop
dec
mov
movsb
cmp
jecxz
cld
scas
push
or
out
pop
cltd
std
dec
inc
pop
sub
je
scas
push
aaa
cmpsl
icebp
inc
fsubp
scas
mov
xlat
xorl
lea
mov
cmp
and
orl
inc
lds
je
pop
dec
dec
sarl
popa
jmp
in
xchg
mov
jecxz
iret
fdivrs
fdivp
push
int
sahf
ljmp
out
dec
imulb
lods
addl
clc
xchg
jle
adc
xchg
test
in
push
add
adc
jno
clc
cltd
mov
and
inc
popa
dec
andl
push
lds
dec
vmovups
cmpsl
cltd
add
insb
add
lock
loop
and
adc
std
cmp
pop
xlat
cmp
aaa
bound
enter
push
lods
insl
addr16
mov
or
scas
push
lods
std
addr16
aas
arpl
fidivl
bound
mov
fcmovnu
loopne
aas
jns
mov
sub
cmpsl
dec
jne
js,pn
xchg
je
fldenv
je
dec
lcall
cmp
sbb
push
inc
add
out
fmull
out
sub
adc
and
adc
mov
stos
mov
in
outsl
pusha
ss
jle
jge
mov
jb
cmp
sarb
adc
das
and
xchg
mov
sbb
sbb
imul
lds
lcall
sub
xor
rolb
repnz
and
aas
pop
ss
dec
xchg
xchg
ljmp
repnz
hlt
popa
sbb
mov
inc
in
add
ret
cmc
fnstenv
sub
mov
fdivr
and
push
pop
fs
gs
lds
hlt
data16
lret
ss
and
cmp
cmc
mov
roll
imul
fmuls
xchg
inc
jle
shrb
test
icebp
ds
jge
mov
stos
lcall
rcl
popa
xor
adc
mov
loope
inc
stc
loopne
fsubrl
cmp
in
pusha
daa
in
cltd
aas
nop
stos
pushw
mov
dec
rcll
arpl
leave
mov
mov
adcl
mov
fwait
out
add
add
cmp
sub
pop
mov
lods
mov
xchg
imul
sbb
sarl
fsubrs
das
fwait
and
mov
jns
movsl
jnp
mov
xor
xchg
jmp
dec
mov
gs
push
dec
fwait
orl
xor
jbe
dec
and
nop
push
insl
aaa
movsl
xchg
cmp
imul
adc
xlat
mov
data16
xchg
lahf
fisttps
mov
test
pop
sbb
dec
in
jbe
jmp
jnp
cmp
xchg
sub
in
push
into
dec
aad
repnz
mov
call
jns
lds
cmp
es
loopne
xlat
lea
inc
xorb
arpl
roll
rcl
push
inc
push
jg
sub
rcrl
xchg
cmp
hlt
mov
pop
sub
mov
dec
jns
into
and
lea
es
sbb
scas
loope
out
les
imul
fidivs
iret
jl
cmc
outsl
adc
mov
xchg
outsb
dec
movsb
jno
add
mov
lea
xchg
imulb
jbe
jle
mov
pop
hlt
lcall
sub
and
movsl
pop
clc
inc
jl
lret
adc
dec
xchg
mov
repnz
cli
test
rcr
in
mov
daa
inc
loop
lea
call
cmpsl
jne
pop
std
lods
std
pop
add
cltd
ss
inc
jnp
cmp
imul
add
dec
lock
sub
rcrl
lds
xor
jnp
mov
mov
mov
adc
pusha
sub
lods
push
sub
imul
test
inc
lds
xchg
aas
adc
inc
lret
cs
repz
int3
hlt
ds
and
repz
repnz
pop
mov
pop
cmp
dec
out
jo
and
aaa
mov
dec
xchg
in
dec
movsb
xchg
inc
shl
add
outsb
fucomp
mov
clc
mov
jo
test
xchg
sbb
les
ret
fldl
cmpsb
les
movsb
aas
jno
xchg
in
jae
inc
push
into
cwtl
sbb
sbb
xor
pop
nop
aaa
js
ss
xor
lock
jge
add
mov
xchg
push
aam
inc
pop
jp
or
xlat
jnp
sub
inc
in
pop
jns
xor
add
cmp
xchg
xor
fwait
pop
xor
add
add
ljmp
out
popf
aas
int3
and
imul
adc
repnz
cmpsb
add
icebp
mov
fneni(8087
cli
rorb
movsb
add
ds
lret
jmp
dec
stos
jae
and
pushf
out
add
out
cmp
or
sub
shrl
inc
pusha
in
adc
push
test
or
mov
dec
divl
fisubl
inc
cmp
lret
pop
outsl
and
and
mov
jp
sbb
or
sub
out
in
scas
cmp
jecxz
mov
cmpsl
or
loopne
jnp
sub
or
mov
jp
inc
mov
mov
cmp
add
and
inc
adc
cmp
iret
inc
aas
lret
sbb
clc
cmp
sbb
shlb
adc
inc
inc
or
push
cltd
xor
rol
fcoml
fsubrl
sahf
cmp
xchg
scas
cmp
or
mov
jge
dec
not
sbb
das
rol
stos
push
clc
inc
ffreep
cmp
jge
and
mov
lock
les
dec
movsb
sahf
jle
pop
jmp
es
xor
cli
push
xor
adc
mov
loope
filds
jge
mov
popa
cmpl
cmpsb
lock
insb
push
xchg
in
mov
sbb
cwtl
rclb
scas
decb
mov
addr16
mov
mov
rcrb
std
stos
cmp
fstps
andl
and
imul
mov
xor
mov
loopne
dec
lret
lds
leave
add
adc
mov
and
cmp
sahf
shlb
push
enter
jb
mov
mov
pop
test
pop
lea
fnstcw
in
push
pop
push
inc
inc
mov
cmpsb
add
sbb
adc
lods
icebp
push
js
sbb
daa
mov
ret
test
mov
inc
into
mov
add
adc
xlat
mov
adcb
inc
jge
nop
pop
inc
pop
push
or
out
into
push
inc
and
xchg
add
out
in
inc
add
mov
jne
les
add
cmp
jg
lret
inc
sbb
jmp
out
sbb
bound
pop
pop
mov
pushf
push
xchg
and
mov
icebp
inc
stc
call
or
cmpsb
sahf
das
nop
or
inc
fnstsw
jae
xchg
sbb
sahf
rcl
mov
bound
xor
int3
std
add
lds
adc
gs
mov
push
jae,pn
add
insl
sti
punpckhbw
adc
cmp
addl
bound
mov
xorl
notb
shr
je
lods
in
and
mov
jmp
shl
out
lods
inc
mov
inc
pop
es
push
jno
dec
lods
je
jle
enter
cmp
lret
stc
ljmp
sub
inc
aad
dec
mov
cmpsb
sbb
pop
rcrb
ds
shrb
push
ds
lret
rcrl
fsubrl
pop
loopne
dec
xor
jnp
xchg
lds
clc
cmp
pop
push
xchg
xchg
stc
fidivs
mov
xchg
in
jno
mov
movsl
ja
xchg
inc
inc
aad
fdivl
xchg
jae
lock
sbb
mov
cmp
mov
push
mov
dec
test
mov
sbb
mov
mov
sbb
add
xor
shll
sub
jno
and
das
ja
mov
push
das
or
out
repz
sbb
cli
icebp
mov
mov
emms
mov
xchg
and
insb
jnp
mov
test
mov
mov
cmp
lods
int
fiaddl
pop
rolb
pop
adcb
jbe
inc
push
test
decl
jl
and
and
fxch
cmp
insl
sub
mov
dec
test
pop
movsl
inc
pop
scas
and
pop
jns
jae
orb
ljmp
fdivrl
fstps
push
loopne
xchg
or
lret
and
jg
adc
ror
xchg
push
add
cmp
stos
adcb
and
sbb
sahf
xor
mov
out
test
fisttpll
out
mov
xorb
push
mov
cmp
push
movsl
ret
js
test
cmp
jnp
stos
cltd
mov
lret
leave
xchg
fnstenv
jmp
rcrl
add
and
cwtl
mov
pop
insl
adc
testl
in
pop
int3
jbe
xchg
stos
cli
sub
ror
int
pop
xor
iret
cld
pop
mov
xadd
mov
popf
hlt
add
lds
pop
mov
jnp
ret
sarl
adcl
or
cmp
in
pop
iret
inc
or
je
iret
sub
dec
movsl
pop
mov
sub
xor
sub
push
inc
fnstenv
dec
mov
movsl
jmp
aas
sti
mov
inc
icebp
jne
pop
scas
inc
mov
iret
decb
xor
sub
stos
rclb
mov
push
lea
xor
add
lcall
cmp
fldenv
push
out
jne
add
in
mov
dec
imul
jb
daa
pop
lahf
rolb
jle
rep
test
mov
int
stc
xchg
hlt
and
adc
aad
lods
orl
jo
cmp
add
cwtl
pop
cli
dec
xchg
add
stc
stos
rep
cmp
jmp
push
movsb
addb
pop
lods
sahf
add
push
daa
inc
or
lea
jo
repnz
mov
jge
and
add
sarb
inc
xchg
push
sbb
cli
sub
insl
mov
nop
idivl
jne
dec
mov
jno
in
sahf
mov
and
aad
lahf
pop
fwait
dec
pop
push
out
loope
mov
sub
jne
mov
and
jle
jmp
mov
cmpsb
out
pop
enter
sub
pusha
push
sti
sti
jb
mov
or
orl
insb
sbb
outsb
jmp
mov
test
aad
call
jns
jmp
in
mov
jl
pop
jmp
sub
rorl
push
outsb
dec
inc
fstl
lods
jo
daa
adc
add
fsubr
adc
shrb
pop
push
cmp
push
jg
cmp
gs
sub
lahf
mov
idivb
xchg
cmp
cli
test
mov
ret
dec
mov
fcomi
loope
test
std
fnstenv
scas
inc
in
xchg
push
int
cmp
fnsave
int
mov
aam
notl
inc
aaa
sbb
push
fs
dec
cmpsl
sarb
rol
pop
add
push
jae
lahf
pop
cld
mov
mov
xor
sub
xchg
and
lea
mov
mov
pop
test
fldcw
jl
cmp
sub
sub
imul
stos
cmp
out
xchg
cli
lcall
dec
mov
xorl
gs
jb
add
xor
scas
rcr
icebp
dec
dec
dec
dec
sbb
and
or
lret
sti
or
rcrl
int
aad
pop
in
loope
sub
and
pop
movb
sbb
dec
imul
rcrl
inc
loop
into
lret
clc
icebp
bound
push
std
inc
push
call
rol
repnz
fimull
je
xor
stos
push
das
or
jno
nop
mulb
adc
pop
inc
nop
cmp
mov
hlt
cmpsl
add
inc
inc
jns
xchg
pop
cmpsb
stc
or
jp
push
mov
lods
mov
pop
mov
cltd
adc
testb
mov
adc
ficomps
dec
pusha
lods
dec
std
cmp
sbb
notb
jbe
mov
mov
shrb
in
jp
mov
jbe
movsb
push
inc
ret
sbb
inc
test
lahf
jbe
xchg
fucomp
lcall
stos
inc
dec
mov
mov
dec
pop
jno
mov
push
mov
scas
out
inc
shrl
ret
mov
pop
sub
mov
pcmpgtb
cmp
jmp
pop
aad
jns
in
movsb
cmpsl
out
cwtl
lds
xor
sbb
cmp
inc
out
je
cmp
ret
pop
ss
add
push
jb
mov
scas
mov
in
hlt
jmp
aaa
out
setle
sti
inc
dec
mov
cwtl
insl
push
mov
scas
out
xor
add
inc
out
jmp
or
pop
fnsave
cli
popf
sarb
sti
sub
push
lods
sub
insb
mov
mov
xchg
lock
push
loopne
sbbb
cltd
movsb
sti
xor
ss
popa
jg
push
fidivs
cld
add
aad
dec
jmp
pop
xchg
sahf
movsb
jl
stos
movsb
sbb
lret
fincstp
jle
out
sub
and
sub
mov
movsl
data16
xchg
mov
adc
and
dec
or
jl
jg
out
xchg
movsl
stc
nop
add
pop
lods
loopne
aas
xchg
xor
mov
fsts
pop
in
dec
sbb
out
xor
outsl
aad
fs
xchg
xchg
pop
inc
test
pop
or
cld
das
addr16
lea
mov
aaa
xor
lock
jle
arpl
push
lahf
mov
mov
clc
ror
into
fisttpll
sbb
mov
out
es
mov
divb
scas
lods
out
adc
add
sbb
sub
rorb
movsb
rcl
mov
xor
push
push
jae
popf
dec
mov
mov
call
or
arpl
or
adc
cmp
aad
add
mov
xlat
test
push
lcall
ret
jno
push
mov
test
adc
js
paddsw
jg
mov
fwait
aad
in
mul
sahf
xor
mov
aas
aam
mull
movsb
mov
loope
jl
lret
lret
inc
cmp
mov
daa
jecxz
push
mov
lods
inc
inc
fisubs
jae
jno
and
push
mov
pop
insb
cs
jmp
pop
jg
mov
shrl
imul
and
and
cmp
lods
push
scas
fidivrs
inc
outsl
push
jns
xorl
or
iret
loope
fmull
iret
leave
or
stos
mov
pop
lds
repz
outsb
mov
stos
mov
cmp
adc
push
add
sbb
mov
cltd
xchg
add
xlat
xor
mov
add
scas
test
adc
aas
into
cld
or
push
pusha
jo
mov
stos
xchg
pop
cs
pop
ret
loopne
in
pop
test
in
xor
fidivrs
out
aad
push
inc
movsb
xchg
loope
clc
ds
shlb
sar
pop
pop
addr16
sbb
push
mov
jns
outsl
mov
add
loop
popf
lret
mov
inc
cmp
dec
out
or
iret
insl
add
mov
movsb
push
jno
and
test
insl
stc
sbb
add
hlt
or
les
addr16
xchg
xchg
pushl
mov
ficoms
pop
in
divl
jns
or
push
and
test
and
or
popf
dec
jle
sarb
sub
popf
cli
fistl
cwtl
stc
dec
jg
popf
pop
lahf
fsubrp
sbb
pop
in
out
lcall
shll
cs
pop
aam
inc
sbb
movsb
arpl
or
aam
popa
and
stos
pop
icebp
add
inc
xor
test
clc
mov
xchg
jno
cmp
movsl
repz
pop
ds
mov
xchg
outsl
imul
data16
negb
jbe
int
jle
lods
in
pinsrw
pop
jnp,pn
dec
roll
das
mov
jns
mov
insl
lcall
cmp
adc
jge
mov
maxps
dec
or
xchg
scas
push
sub
bound
movsl
mov
int3
push
xor
mov
pop
mov
dec
or
mov
popa
push
addr16
ret
sub
cwtl
out
cmp
lods
cs
sti
pop
adc
xor
xchg
sub
popf
push
pop
dec
shr
out
cs
push
mov
xchg
repnz
js
ficoms
add
test
sub
jp
mov
xchg
fwait
pop
ret
mov
and
gs
jl
mov
rcrb
test
sbb
xchg
out
mov
stos
cwtl
mov
mov
cmp
xchg
push
stc
mov
fsubs
pop
lret
bound
push
test
mov
or
mov
sbb
sub
sbb
inc
cmp
rcll
cmp
cltd
pop
outsb
test
popf
mov
insb
inc
fstps
int3
addr16
std
mov
mov
lods
adc
fstps
inc
fnstsw
out
fcompl
iret
imul
fldcw
push
dec
sbb
clc
repz
gs
ss
fisubrl
push
ret
jp
sti
les
sbbl
pop
push
mov
push
js
mov
or
int
mov
sbb
cltd
pop
xor
ja
xchg
push
shll
incb
mov
mov
xchg
mov
fwait
mov
jns
adc
xor
xchg
scas
jmp
dec
push
jb
cmp
mov
addb
pop
adc
inc
mov
dec
jle
sarb
dec
in
xor
inc
incb
test
sub
sbb
arpl
pop
cmpsb
popa
shrb
jecxz
clc
fdivrl
sbb
data16
fcompl
in
sbb
ret
ss
or
lock
adc
cwtl
arpl
adc
mov
jnp
push
and
jmp
aaa
int3
fdivrs
hlt
shlb
inc
and
xchg
adc
arpl
push
and
mov
xchg
mov
or
push
xchg
jno
inc
notl
mov
sbb
jp
inc
and
out
pop
pop
xor
jne
mov
add
mov
loopne
adc
aam
cmc
add
pop
jg
into
ret
jb
or
xchg
and
in
add
jno
add
inc
xlat
xor
sub
or
inc
out
insl
xchg
daa
rorb
xchg
fmul
push
dec
xlat
push
out
ret
aas
adc
jne
cltd
jae
mov
inc
fwait
test
jmp
mulb
sub
xor
push
leave
outsb
in
cltd
or
cmp
push
cmpsl
test
test
rorb
pop
sahf
pop
stos
sarl
out
xor
add
mov
pop
cmp
lret
das
push
or
mov
daa
mov
in
dec
pop
idivb
inc
faddp
mov
inc
adc
gs
adc
jno
inc
jbe
hlt
and
mov
jns
and
mov
pop
inc
lret
xchg
jle
je
test
sar
test
mov
sub
dec
pop
mov
sub
jnp
call
xlat
inc
and
pop
mov
sbb
cmc
pop
mov
pop
pop
pop
jecxz
xchg
cmp
pop
cmpsl
in
push
ja
out
test
xchg
xor
and
jl
aas
push
mov
jae
jae
adc
pop
and
repz
mov
cmpsl
addr16
int3
pop
mov
insl
test
lret
add
data16
ret
lret
add
sbb
or
andps
cmp
mov
ror
sbbl
jl
adcl
or
xchg
xchg
int3
and
in
vcvtdq2pd
imul
jbe
shrl
test
cwtl
xor
adc
in
xor
jge
jecxz,pn
xlat
inc
insl
sub
test
lds
push
out
in
sub
aad
dec
jne
popf
inc
in
cmpsl
xchg
adc
notl
mov
jmp
push
hlt
mov
out
add
daa
mov
dec
and
push
jle
lds
sub
push
dec
fs
call
sbbb
pavgw
or
loopne
dec
add
mov
or
ljmp
lea
mov
xchg
leave
mov
dec
fcmovu
xchg
mov
adc
ss
jge
out
mov
enter
pusha
mov
addr16
mov
leave
gs
xor
sub
xor
or
nop
mov
sub
mov
mov
or
jl
fildll
sub
jl
mov
fucomp
mov
lea
mov
fmull
inc
frstor
addl
fistpl
fwait
sbbl
sbb
iret
and
mov
xchg
mov
imul
imul
lret
push
xchg
movsb
sbb
fadd
insl
sub
cltd
movsl
dec
rcrb
add
out
mov
push
push
iret
sbb
sarb
cs
mov
lcall
jmp
imul
xchg
cmp
sub
xor
outsb
loope
mov
adc
fs
fistl
xchg
mov
fldt
xor
jg
sub
cld
pop
sbb
iret
aas
mov
jp
sbb
call
aas
aad
out
rcr
repnz
mov
mov
es
in
xor
or
dec
cmp
fwait
jecxz
stos
cs
out
or
lock
push
inc
push
fldcw
mov
fwait
jp
jns
cmp
fsubl
mov
outsb
les
jecxz
push
stc
mov
sbb
and
dec
mov
xor
jbe
xor
pushf
mov
in
jnp
and
test
into
ret
sbbb
cmp
cmp
adc
mov
fbstp
lahf
das
or
aad
shlb
out
jmp
test
mov
sub
shlb
inc
mov
dec
add
mov
mov
imul
subl
fsubp
pop
jmp
clc
mov
pop
and
xlat
sbb
icebp
hlt
jg
jmp
xor
in
movsl
rcll
movsb
push
mov
fcoml
mov
cmp
jno
icebp
dec
fsts
into
mov
mov
mov
fiaddl
out
daa
in
ljmp
popl
xor
sbb
or
xchg
adc
push
xchg
add
js
fldcw
add
popa
std
pop
add
fs
hlt
mov
inc
sub
data16
push
cmpsl
and
push
xchg
adc
xor
popf
sbbl
push
ljmp
mov
mov
jo
pop
scas
and
mov
test
fwait
lods
mov
outsl
push
test
mov
inc
arpl
xlat
inc
cltd
mov
xchg
frstor
push
adc
add
in
push
repnz
adc
sbb
out
xor
loope
jns
xchg
cmpsl
fldl2t
lods
pop
popa
cltd
and
fsts
enter
lea
sarb
adc
jg
jne
setae
inc
mov
mov
loopnew
inc
and
inc
adc
subl
dec
aad
jle
xor
hlt
and
repnz
dec
lret
xchg
sbb
bound
pop
insb
mov
cmp
lret
aas
cld
mull
inc
sub
pop
nop
mov
out
roll
leave
pusha
cmpsb
add
pusha
orb
nop
in
and
xlat
repz
or
scas
insl
or
or
or
pop
imull
pop
pop
sbb
sbb
dec
cs
test
fnstcw
cmpsb
das
mov
dec
mov
cltd
inc
lahf
or
inc
cmpsl
xor
cwtl
jecxz
or
push
mov
pop
fldl2e
push
cmpb
stos
jae
mov
sub
sbb
mov
ret
mov
pop
call
dec
mov
test
scas
aam
add
cmc
lcall
sbb
dec
inc
add
aaa
out
cmp
sbb
orb
xor
outsb
xchg
mov
inc
mov
cwtl
mov
mov
jo
movsl
cli
shr
xor
mull
mov
cmc
mov
push
out
test
les
mov
fcmovnu
sub
push
ret
sub
lcall
and
adc
jnp
push
push
jo
outsl
xor
xchg
fdivs
add
xchg
adc
sbb
dec
mov
jbe
mov
jge
call
mov
pop
lret
divb
std
cmp
lcall
add
ror
filds
mov
call
xchg
mov
loope
cmp
inc
add
lret
sbb
and
fs
cld
fwait
xchg
insb
aad
clc
sahf
dec
jbe
out
inc
call
cmp
aaa
pop
stos
mov
dec
or
and
cs
jnp
mov
sub
lods
mov
sbb
jp
push
fwait
and
xor
shll
mov
xchg
ret
xor
dec
or
es
sub
sbbl
lods
cmp
push
fcomip
xchg
add
pop
push
pop
mov
sbb
xor
stc
pop
adc
dec
cmpb
inc
shrl
rcl
xor
fsubs
or
mov
or
sub
cmp
loope
jge
lock
sbb
push
jae
jl
lret
inc
inc
pop
mov
std
andb
ja
ja
inc
out
sbb
cmp
mov
push
inc
sti
inc
mov
inc
adc
jb
in
out
add
mov
add
outsl
int
mov
adc
sbb
hlt
inc
xor
add
push
push
lods
inc
cvttps2pi
mov
dec
fistpl
les
pop
scas
imul
iret
decl
scas
dec
leave
pop
cmc
cli
ror
test
loopne
xchg
cmp
orb
or
pop
outsl
xchg
andb
mov
or
and
mov
andb
mov
cmpsb
xlat
shll
jns
inc
test
data16
pop
std
and
pop
test
mov
ljmp
mov
cmp
test
add
aaa
jnp
jns
dec
xchg
dec
pop
imul
adc
jae
xor
mov
cmpsl
and
push
out
sub
popl
add
lahf
imul
in
sub
rcrl
push
movsb
in
outsb
inc
stos
adc
adc
lods
xchg
popa
adc
sbb
inc
xchg
insl
pop
push
loopne
push
cltd
dec
in
sti
pop
out
jl
js
lods
jmp
mov
mov
sbb
movsb
cmpsb
mov
test
cmpsl
cmc
sbb
loopne
shrb
sub
out
popf
xor
xchg
sbb
jecxz
inc
cmpsl
cmp
insb
fistpl
mov
fsts
ror
sarb
fstps
dec
data16
call
js
aaa
jae
adc
lods
mov
push
sub
out
int3
inc
arpl
adc
xor
loope
inc
testl
imul
les
mov
mov
stos
jecxz
sub
lcall
sub
cwtl
decb
out
adc
movsl
ja
push
out
leave
mov
pop
mov
pusha
loopne
pop
lea
movsb
push
js
jno
pop
ret
pop
ja
jle
sub
xchg
cmpsb
mov
mov
cld
hlt
int
jns
mov
pop
ficoml
je
jmp
aad
adc
test
pop
pop
inc
lods
inc
jl
arpl
cmp
push
imul
push
add
or
jo
lods
push
mov
lret
shr
clc
enter
scas
mov
jmp
stos
daa
je
scas
mov
dec
cmp
lret
xor
cvtsi2ss
adc
imul
fisttpll
pop
adc
popa
stos
mov
cmpsb
imul
nop
jp
add
and
jne
and
sti
cmp
and
lds
insb
in
nop
xor
bound
roll
and
mov
adc
lea
icebp
dec
mov
sbb
mov
arpl
push
sub
mov
adc
push
pop
imull
hlt
popf
mov
add
out
jbe
xor
cmp
sahf
sub
repnz
repz
scas
mov
pop
xor
add
imul
adc
xchg
jns
inc
cld
dec
adc
movb
andl
adc
rcrl
fistps
fwait
cmpsl
push
add
mov
mov
lods
out
xchg
pop
out
push
cmc
movsl
testl
sub
jle
mov
shlb
push
push
test
jo
inc
loope
mov
in
lcall
mov
in
xorl
or
mov
decl
inc
sti
and
leave
adc
sub
adc
dec
push
insb
jl
or
lea
cli
xor
test
push
in
push
jne
mov
fimull
xor
sbb
push
mov
sub
fsubl
jbe
scas
mov
outsl
jmp
push
scas
cmc
mov
inc
rorl
fiaddl
fs
jecxz
cmc
test
rcl
js
fdivs
leave
mov
cmpsb
imul
add
loop
jno
xchg
pop
dec
loop
and
cmpsl
sti
inc
imul
test
xchg
imul
mov
lods
pop
ret
dec
sbb
clc
mov
add
flds
and
push
std
das
repnz
repnz
scas
jbe
push
jae
and
test
inc
jle
inc
imulb
push
fmull
and
stos
jmp
dec
sbb
push
fstps
mov
sub
mov
xchg
sub
or
mov
pop
out
mov
inc
clc
mov
mov
sbb
xchg
outsl
push
lret
stos
jge
sub
daa
gs
pop
pop
or
pop
loopne
cmp
sbb
mov
xchg
jp
add
push
addr16
stos
xor
pop
mov
inc
mulb
inc
int
xchg
dec
dec
rorl
fdivrl
dec
stc
sbb
xor
adc
mov
mov
hlt
xor
repz
int3
ror
pushf
mov
mov
stos
jl
cli
push
into
jge
mov
lcallw
outsb
xorb
jl
cwtl
pop
pop
dec
adc
pop
cmp
in
jg
iret
dec
cld
sbb
jnp
jno
cwtl
cmpsb
shl
add
movsb
pop
jmp
pop
rol
rorb
ret
pop
lods
adc
jnp
add
mov
push
ja
in
and
in
call
aas
and
pushf
dec
iret
and
dec
fidivrl
cmc
adc
out
mov
add
xchg
sbb
cmp
insb
js
fbstp
pop
bnd
pop
lods
lret
loopne
imul
cmp
in
mov
adc
cmpsl
mov
shlb
data16
mov
dec
loopne
jp
sahf
sub
add
jg
lahf
pushf
ret
int3
out
sub
mov
roll
xor
cmpl
sub
mov
push
lods
les
mov
les
cld
popa
xchg
and
adc
addl
inc
fwait
pop
outsb
inc
ficoml
mov
fnsave
aam
jl
push
xchg
mov
sbb
inc
cmp
in
pop
adc
cmp
inc
pop
mov
cld
pusha
lret
fs
cwtl
xor
pop
out
cld
mov
jb
cli
sub
add
popf
or
add
xchg
jp
pop
pop
adc
out
cld
test
loop
xchg
adc
mov
pop
mov
sahf
fs
addr16
mov
cmp
lret
mov
in
inc
push
adc
push
in
icebp
xchg
pop
in
push
inc
add
xor
sub
or
mov
pop
das
jmp
out
hlt
push
dec
in
adc
mov
push
das
fistps
dec
cld
mov
imul
xchg
sti
inc
pop
sbb
jnp
or
and
pusha
and
inc
out
fisubrl
mov
addr16
xchg
xor
aaa
push
mov
dec
shll
shr
xor
rcll
xchg
mov
jbe
insb
mov
dec
lods
jmp
aad
std
dec
or
cld
pushf
test
std
xchg
inc
fwait
dec
aaa
mov
shrl
insb
jle
mov
fsubrl
int3
arpl
sbb
push
sbb
outsb
add
out
repz
lahf
dec
mov
arpl
add
loop
orb
repz
and
or
test
pop
adc
movsl
pop
nop
imul
cmp
ja
add
outsl
sub
fstps
mov
ret
xlat
shrl
pop
mov
cli
loope
mov
inc
cltd
inc
mov
xchg
mov
push
loope
mov
subl
adc
aaa
cmp
popa
into
mov
pop
addr16
stos
xchg
sub
inc
std
pop
xchg
rcrl
out
sbb
int
scas
pusha
sbbb
dec
push
rorb
cltd
xor
inc
insb
repnz
mov
popa
xor
out
xor
fiaddl
loope
inc
push
inc
jns
jnp
and
es
cwtl
int3
xor
jge
ja
dec
mov
mov
sub
xor
mov
push
sahf
out
inc
iret
mov
in
push
push
aas
test
push
out
stos
or
lds
mov
stos
mov
lret
ret
and
lahf
mov
push
loope
xchg
test
out
mov
push
jo
push
ja
sahf
shlb
mov
fildl
inc
data16
push
leave
cmpsb
cwtl
xchg
test
jg
repnz
add
loopne
ret
add
lock
cmpsb
cmp
add
aad
out
cwtl
adc
fsubrs
ret
and
les
insl
lret
in
xor
mov
sub
and
cmp
pop
fwait
sbb
popf
shlb
mov
call
in
data16
les
adc
xchg
mov
pop
testl
jnp
cmp
cmpsl
jns
and
or
xchg
inc
cmp
outsl
xchg
mov
xchg
fiadds
insb
sub
mov
push
iret
jno
jp
push
push
fwait
mov
in
addr16
inc
pop
mov
bound
lahf
imul
jecxz
cli
sbb
cwtl
das
es
push
cmc
adc
mov
lret
cli
arpl
or
and
outsb
test
sbb
pop
push
out
sub
lock
stos
ja
addl
sbb
push
jecxz
mov
jmp
ret
pop
add
cmp
push
sub
mov
jae
test
sbb
mov
imul
mov
stc
ficoms
push
jmp
das
data16
adc
cmpb
out
xor
dec
aaa
mov
xchg
sub
add
in
push
outsb
ret
or
inc
dec
pop
jne
testb
imulb
or
fisttpl
add
shrl
test
add
pop
test
fidivrl
pop
aaa
cwtl
lahf
loopne
cmc
xor
add
push
or
ret
push
aad
adc
mov
popf
xchg
lret
sbb
lcall
mov
and
adc
dec
inc
jns
bts
mov
outsb
sbb
les
mov
mov
int
pop
movsb
dec
adc
mov
adc
lret
xchg
push
xor
andb
fistl
cmp
in
imul
inc
mov
leave
movsb
ljmp
mov
adc
outsl
mov
xchg
xchg
sbb
adc
fsts
xorl
rorb
dec
icebp
dec
lcall
xor
jno
add
jmp
nop
sti
pop
mov
push
enter
pop
xor
fstpt
xlat
mov
addr16
fxch
and
jb
clc
test
xchg
cmp
lds
sar
icebp
jnp
pop
lods
xchg
popa
int3
dec
sbb
inc
les
sub
or
daa
daa
negl
sub
scas
ret
jnp
jle
outsb
jle
xor
xchg
pop
inc
leave
hlt
shll
ljmp
cmp
fisttps
cltd
cs
out
sbb
mov
mov
movl
enter
push
xor
pusha
and
enter
seta
mov
push
inc
lods
insl
fisubs
icebp
add
jmp
shlb
pop
sub
jbe
mov
sbb
popa
outsl
and
jo
mov
add
imul
cmp
mov
ds
push
add
or
pop
push
stos
mov
jnp
xor
lcall
inc
clc
fcomps
adc
or
push
ljmp
jno
lahf
shrl
mov
rcrl
pushf
test
movsl
mov
sub
xchg
sub
jge
ds
out
sti
arpl
cmp
mov
shl
push
pop
jecxz
cltd
xchg
xor
loopne
in
adc
jge
out
enter
sbb
xor
push
push
addr16
insb
lret
pop
mov
mov
push
out
push
add
push
jnp
and
sbb
pop
addr16
push
ror
jae
mov
pusha
mov
ret
out
shr
repz
pop
enterw
dec
pop
hlt
jne
mov
adc
dec
add
popf
lcall
insb
pop
ja
bound
into
and
call
inc
push
mov
loop
cmp
add
es
call
scas
sbb
loop
outsb
enter
je
mov
sbb
jecxz
mov
bound
int
sub
mov
loopne
in
cmc
and
jne
dec
loopne
adc
add
and
es
cmpsl
or
push
xor
ret
inc
or
cld
mov
jae
push
push
pop
mov
outsl
inc
out
cmc
nop
loop
cltd
pop
cmp
data16
lcall
cli
clc
mov
sti
inc
das
rclb
cmc
daa
lea
repz
sub
mov
add
out
pop
xor
fnsave
enter
add
aam
mov
leave
push
inc
arpl
int3
mov
sbb
fdivl
cmp
xor
es
push
add
fldenv
xor
dec
aas
dec
dec
jle
ja
lcall
stc
mov
cmp
into
pushf
cmp
out
fsubl
std
or
test
or
pop
ss
add
ret
shlb
loope
scas
mov
xor
or
nop
push
xor
into
pop
mov
fisubl
test
xchg
jmp
out
mov
inc
sbb
adc
ljmp
push
push
pushf
or
es
sub
fwait
or
movsl
mov
out
mulb
xorl
dec
scas
ret
jg
mov
dec
pop
in
mov
ljmp
sub
inc
and
pop
es
push
in
out
cli
xchg
cld
sub
xchg
jne
xor
dec
loopne
fistpll
sarb
mov
or
ja
xchg
add
xchg
call
sbb
and
arpl
push
add
xchg
and
aas
or
out
push
call
pop
pop
cwtl
mov
jecxz
mov
mov
iret
dec
in
inc
nop
dec
cmp
mov
mov
shrl
test
dec
mov
ror
js
push
lds
scas
or
in
test
test
or
ret
push
ja
mov
aam
arpl
ret
aas
or
dec
mov
test
or
iret
dec
enter
imul
lea
sub
das
dec
add
mov
and
in
jmp
incl
popa
cwtl
adc
ds
add
pop
mov
sub
sarb
pop
mov
rorb
inc
cmc
ret
and
jg
lret
pop
scas
mov
mov
sub
lods
cmpl
ss
out
sbbl
jge
jg
decb
dec
ss
cltd
dec
in
dec
dec
clc
jae
out
and
aaa
std
call
adc
in
das
sub
jmp
loop
pop
in
jecxz
pushf
rcrb
push
daa
mov
or
sub
test
std
push
dec
cmp
pop
jp
pop
sub
es
repnz
vprotd
or
add
enter
mov
adc
lock
rcl
addr16
bound
stos
push
outsl
mov
pop
adc
push
and
jne
cmc
sarl
nop
mov
push
ret
jp
inc
sbb
cmp
fisubrs
mov
loope
dec
fwait
loop
rcrb
sub
andb
mov
mov
mov
test
jb
aas
je
mov
notl
movsb
dec
loop
sahf
insl
cmp
lock
stc
icebp
xchg
sbb
movsb
into
pusha
testl
push
adc
xchg
jae
push
movsl
adc
in
or
fistps
adc
pop
jle
inc
mov
dec
cmp
push
movsb
adc
movsb
arpl
out
mov
pop
aam
imul
pop
ret
mov
push
add
inc
cmp
adc
in
icebp
pop
fsubrp
cmp
scas
mov
loopne
mov
cmp
aam
loopne
arpl
dec
cmp
cld
add
xor
push
sahf
int3
das
mov
mov
xlat
push
jecxz
aaa
dec
pop
fst
aad
aaa
dec
jno
ljmp
test
mov
push
push
cmpsb
loope
mov
cmpsb
stos
shll
ret
dec
popa
addl
sbb
mov
and
and
mov
popa
enter
push
push
cmp
insl
dec
sahf
xor
adc
jns
pop
inc
das
cmc
mov
jl
enter
xor
xchg
mov
push
in
mov
out
adc
shlb
dec
or
xchg
fsubs
xchg
dec
mov
cmp
outsl
mov
mov
jmp
inc
les
push
arpl
inc
repnz
xor
ljmp
ret
lds
mov
jp
frstor
xchg
stc
clc
cld
xchg
sub
faddl
sbb
in
cmp
data16
andl
pop
das
sub
add
sbb
into
hlt
or
pop
mov
adc
add
pop
push
scas
mov
cltd
jbe
je
xchg
xor
dec
mov
ret
push
rclb
push
sbb
clc
movsb
ja
xor
in
inc
sti
fwait
jns
imul
xchg
jne
lods
cwtl
cltd
orl
push
js
jnp
gs
bound
lea
inc
mov
mov
mov
push
outsl
mov
imul
aas
imul
mov
movsl
mov
jmp
or
cmc
xchg
daa
bound
lcall
push
rorl
imul
repnz
sub
leave
loopne
fwait
jne
cmc
inc
fs
and
jbe
les
out
mov
sbb
cmp
or
dec
mov
and
xor
aaa
xchg
adc
fucomip
push
xor
push
in
mov
add
add
mov
xor
icebp
inc
and
out
je
fimull
loop
nop
cmp
stos
add
dec
ss
push
lock
das
mov
pusha
insl
xor
jl
in
push
imul
add
xor
je
jecxz
xlat
stos
inc
std
cmp
lret
pop
mov
mov
je
movsb
sbb
xchg
pop
sti
dec
dec
jecxz,pt
in
mov
push
insl
jbe
jbe
push
insb
fwait
sbb
adc
in
mov
mov
cmp
fucomip
mov
clc
fmul
stc
ds
xor
mov
pop
or
aaa
dec
mov
mov
in
mov
fwait
pop
add
pop
imul
icebp
xchg
int
adc
in
bound
pop
je
mov
mov
and
jne
mov
mov
notl
into
add
pusha
inc
push
inc
sarb
icebp
add
fcmovnbe
and
xor
sti
mov
les
rcrb
inc
adc
or
aaa
mov
lds
sarb
mov
jae
js
sub
mov
ja
mov
rcrb
sub
dec
into
sbb
fwait
pushf
mov
cmp
out
fs
hlt
ds
sub
push
lods
imul
in
inc
fwait
and
je
mov
int
lahf
push
cltd
test
sub
in
dec
mov
fimuls
lret
or
mov
pop
mov
arpl
lret
ljmp
sbb
push
aaa
pop
mulb
xchg
jge
mov
ja
cmpsl
jecxz
xchg
cmp
pop
addr16
lods
scas
sbb
cmp
enter
cld
fbstp
in
out
mov
lret
xchg
in
mov
in
push
fmulp
add
adc
arpl
cmp
cwtl
jp
inc
jmp
xchg
shrl
outsb
in
push
rclb
ljmp
out
lock
xchg
inc
add
cmp
mov
mov
and
cwtl
inc
push
jbe
xor
dec
je
adc
xchg
shl
pop
lock
scas
cmpsb
jb
jmp
xlat
lock
ds
xchg
dec
aad
jmp
xchg
push
push
pop
icebp
push
ja
scas
and
repz
mov
add
divl
or
cli
add
std
lret
into
sti
clc
nop
mov
test
cld
xchg
jl
add
mov
ret
rol
loop
pop
outsl
cmpsl
xor
rcr
jl
push
out
andl
pop
pop
ret
repnz
inc
mov
xor
out
fldl
adc
mov
add
or
dec
rcr
sti
inc
je
inc
pop
into
lcall
xchg
test
cmp
out
sub
mov
lret
mov
cmpsl
mov
out
sub
out
sahf
int3
jl
jns
xchg
push
sub
ret
sub
xlat
pop
jp
xor
jle
or
into
push
enter
daa
push
outsb
sub
push
pop
ret
cmc
adc
mov
fistpl
dec
or
fcomps
sub
mov
sahf
call
or
es
and
push
adc
xchg
dec
out
imul
fs
xchg
sahf
push
sbb
inc
pop
sbb
inc
lret
popf
test
mov
ljmp
cli
das
xor
pushf
inc
mov
push
fiaddl
cli
add
das
dec
fisubrl
rcll
pop
insl
xor
pop
dec
push
lock
lock
insb
dec
jno
jl
movsb
cmp
adc
sbb
cmp
sub
mov
add
inc
add
shlb
push
lcall
ja
and
xor
loopne
and
jnp
addl
cltd
pop
stc
dec
jmp
jp
push
testl
pop
mov
arpl
test
out
ficoms
sub
or
repz
aad
int
mov
call
xchg
fldcw
sub
inc
fwait
lds
mov
adc
repnz
xor
sub
into
xorl
mov
test
push
les
stc
jno
loop
data16
cmpsl
lods
sub
int
scas
mov
lcall
and
xor
sbb
fsubl
dec
or
hlt
lcall
bound
cmpsb
cmc
aaa
aam
jne
out
dec
daa
cwtl
mov
test
pop
lds
cli
insb
daa
les
mov
jae
out
mov
dec
xor
cmp
orl
mov
in
lret
into
and
ljmp
xor
int
fcmovnu
je
add
xchg
imull
dec
pop
sahf
dec
inc
addr16
call
cmp
out
xchg
mov
push
jmp
ret
sbb
pop
push
insl
dec
loopne
add
std
mov
or
cmp
push
cmpsl
push
rorb
adc
cmpl
pop
pushf
ss
fadds
dec
fcompl
loop
sahf
mov
test
mov
fsub
jmpw
popa
cld
enter
lods
adc
xor
xchg
sbb
inc
scas
std
cmpsb
js
add
fmulp
movsb
mov
outsl
aas
and
push
cmp
xor
jmp
xchg
lcall
cmc
aas
jne
inc
arpl
andb
shrb
movsl
movsb
sub
mov
pop
mul
aad
mov
cmc
ja
out
data16
leave
out
jbe
mov
push
fistpl
jbe
les
in
xchg
push
mov
mov
dec
xor
loop
jl
nop
and
sahf
mov
sbb
popf
mov
add
fiadds
test
movsl
ret
pushf
or
xchg
xchg
and
pop
or
rcr
cmpsb
lret
cmp
cld
mov
movups
in
cmp
xchg
add
sbb
pop
jb
cmp
lods
lea
addb
dec
dec
orb
repnz
push
pop
andl
in
popf
pop
mov
pop
adc
and
call
lret
jnp
lret
and
movsl
test
inc
stos
pushf
inc
arpl
or
mov
test
in
daa
jl
dec
pop
ret
mov
bound
dec
mov
rcll
fwait
sbb
jecxz
lock
jmp
fcoms
push
mov
xor
test
mov
dec
mov
ficomps
das
shll
divl
xor
push
cmp
jb
subb
ret
push
dec
sbb
mov
hlt
pop
add
ret
shl
fs
push
int
sub
and
sbb
repnz
fwait
push
pusha
sbbl
arpl
dec
mov
lahf
or
mov
or
movsb
mov
ljmp
mov
mov
fldl2e
jne
jge
and
dec
divb
sub
jae
sub
std
notb
xchg
rcrl
dec
mov
or
imul
das
inc
dec
mov
cltd
mov
cltd
add
xchg
sub
rcrl
into
push
sbb
out
data16
mov
pop
imul
icebp
cmp
sbb
dec
mov
mov
dec
movb
pop
in
add
std
jne
fildll
lcall
cmp
out
mov
iret
dec
add
sub
jnp
bnd
insl
int3
pop
xor
ja
push
xchg
jns
inc
cmp
fsubr
stc
rorb
ficomps
ja
das
and
cwtl
mov
jbe
mov
imul
iret
in
add
add
repnz
add
test
sti
cmp
pushf
popa
shl
not
dec
inc
jno
out
shll
cmp
pop
mov
cmp
repnz
sub
ret
dec
lahf
or
daa
test
aad
das
mov
lods
rcrl
xorl
loopne
fsubl
push
in
rol
cmpsl
repnz
insl
push
repnz
icebp
sub
popa
xchg
imul
repnz
inc
push
jne
xchg
pushl
fistl
sahf
xchg
popa
lret
and
test
addr16
fists
xchg
jg
push
shr
loopne
or
add
mov
test
jne
sub
bound
js
sub
lock
sub
enter
loopne
fcoms
push
mov
fldlg2
add
cmp
gs
xchg
lret
sbb
xchg
iret
in
cmpsl
xor
lods
dec
dec
pop
sub
cltd
pop
lcall
shll
or
mov
shlb
push
push
sub
ja
pop
arpl
insl
int3
push
pop
mov
mov
lods
add
sub
loope
leave
add
pop
aad
call
setl
push
dec
jge
popf
subb
sub
push
addr16
pop
cltd
xchg
xchg
lahf
push
xchg
hlt
sbb
push
sub
test
ret
outsb
and
gs
int3
icebp
mov
push
sbb
lcall
or
ljmp
jne
sub
jns
push
stos
lahf
mov
sbb
add
js
push
add
adc
and
mov
or
popa
jae
cltd
arpl
popf
sub
add
pop
outsl
pusha
test
fsubrs
loop
aaa
inc
jecxz
pop
adc
push
outsb
fidivrs
xor
repz
pop
push
jae
push
xchg
mov
adc
mov
ret
cmpb
loopne
ja
cmp
andb
inc
push
in
push
xor
insb
mov
jne
dec
sahf
mov
dec
mov
int3
ret
lods
sbb
or
cmp
shl
dec
add
jnp
fistps
das
cwtl
call
pop
test
loope
pop
mov
add
dec
cmp
push
and
or
mov
cmpsb
popf
xor
inc
push
insl
mov
jne
imul
pop
lods
aad
mov
mov
xor
xchg
mov
inc
fnsave
stos
xchg
mov
adc
ja
jae
add
int
mov
adc
xor
push
movsl
push
in
sbbl
mov
mov
sbb
js
or
jbe
inc
xlat
cmp
add
lods
rorb
test
xor
add
add
in
push
adc
cltd
out
jmp
push
in
jnp
fcmovnu
and
and
xor
mov
push
mov
fsubrs
or
clc
cmp
imul
inc
pusha
pop
push
inc
cmp
pop
mov
bound
data16
data16
pop
xchg
scas
mov
loopne
inc
lea
loop
scas
nop
nop
dec
in
jmp
int
cmpsl
push
std
and
adc
test
or
sarl
adc
mov
mov
mov
xor
fnstenv
push
inc
push
cmpsl
imul
push
mov
push
adc
mov
add
imull
push
rclb
das
pop
enter
daa
es
mov
xchg
aad
fmull
outsl
imul
push
in
loop
ljmp
xor
andl
enter
mov
dec
pop
outsl
jo
pop
scas
enter
xor
cmc
imul
lcall
in
lds
pop
stc
arpl
push
repz
cmp
add
mov
dec
mov
push
loope,pt
movsl
push
and
dec
pop
popa
and
sahf
aaa
aad
fmull
push
and
imul
xor
cmp
int
or
loope
pop
clc
lods
mov
add
or
add
jle
sti
out
mov
xchg
cld
cmp
jg
push
lods
insb
pop
dec
push
or
stos
xchg
and
mov
mov
into
ss
cmpsl
sti
ret
mov
movsl
jo
pop
rcll
icebp
lods
ljmp
adc
bound
aam
inc
imul
jno
xor
sbb
jp
imul
in
shll
jne
test
mov
pusha
push
shrl
push
push
data16
ss
mov
mov
dec
add
ffreep
aam
jg
fnstenv
outsl
pop
jp
mov
scas
or
inc
mov
popf
mov
lar
jmp
sbb
aas
dec
imul
cmp
adc
mov
stos
or
stc
adc
stos
test
sbbb
adc
fsubrs
push
adcl
lds
inc
in
adc
out
inc
push
cld
xchg
inc
ja
cltd
and
lahf
xor
sbb
popf
lret
pop
sbb
ljmp
xchg
fstps
xor
jno
sahf
lret
ror
cld
mov
dec
dec
sbb
dec
jns
shl
lret
dec
roll
cmp
mov
mov
test
dec
cmp
xchg
add
imul
in
cmp
or
cs
repz
or
out
lock
lods
aaa
ss
inc
stos
fs
inc
fadd
orl
out
fcmovb
add
jl
inc
pop
imul
inc
push
test
add
xor
jecxz
xor
push
sub
pop
inc
fwait
inc
cwtl
inc
mov
sub
jmp
cltd
push
xchg
lret
pop
xor
push
les
pop
clc
xchg
vsubpd
and
sbb
fadd
dec
and
hlt
push
xlat
cmp
dec
sub
jb
pop
notb
jp
lret
cld
add
daa
adc
mov
or
std
fs
push
add
insl
sub
loope
movsb
pop
sbb
mov
cmp
pop
iret
flds
sbb
mov
cwtl
mov
std
lods
imul
leave
xor
sarb
in
push
xor
out
dec
dec
mov
and
scas
imul
xor
shrb
sub
stos
push
xchg
movsb
and
pop
repz
shr
fistl
jnp
shlb
add
mov
scas
inc
jnp
lods
ljmp
rol
outsb
int
mov
ja
int
push
ds
inc
push
outsb
dec
lds
adc
pop
mov
mov
mov
out
sti
sbb
pushf
or
cmp
fcompl
cmpsb
push
outsb
jg
mov
movsl
jle
mov
push
cltd
add
push
jmp
fnstsw
iret
sarb
jno
sbb
adc
cmp
cmp
xchg
add
cmpsl
mov
push
push
imul
mov
lret
mov
stos
xchg
arpl
shrb
pop
call
fs
insb
aaa
lds
mov
cwtl
jmp
or
jns
sub
inc
pop
stc
push
push
arpl
aas
fs
mov
push
lock
nop
xor
cmp
fsubrp
mov
pcmpgtd
popa
dec
outsl
pop
lods
outsl
cmp
dec
add
adc
pop
in
cmp
lock
and
sti
gs
in
pop
mov
dec
push
dec
jge
sbb
push
inc
rcrl
xchg
aas
shlb
xchg
add
movsb
and
jge
orl
adcl
sbb
mov
pop
test
rcrl
or
insl
das
pop
lea
out
aas
adc
lds
cli
xchg
lock
test
iret
or
fdivl
sub
mov
lods
inc
mov
and
jb
pop
ja
mov
jno
test
iret
mov
mov
popf
mov
and
int3
push
or
cmc
lea
iret
lahf
mov
fstpt
aam
xchg
or
jb
pop
add
inc
push
xorl
sub
jb
shrl
adc
stos
into
insl
insl
mov
ljmp
push
or
jp
jne
divb
xchg
rclb
mov
sub
inc
pop
insb
jne
leave
test
and
lahf
adc
mov
pop
sub
adc
leave
icebp
out
scas
and
mov
add
mov
nop
lods
add
and
sbb
jl
aad
cmp
imull
push
push
or
incl
ret
pop
loope,pt
jmp
fadds
push
shlb
push
xchg
and
push
lret
out
bound
cltd
sub
jp
jge
repz
xchg
dec
in
aad
jmp
popa
and
mov
rcll
fimull
mov
sti
sub
ss
cmpl
loopne
mov
lods
imul
cmp
or
mov
mov
insb
add
push
iret
and
add
xchg
push
push
mov
nop
cmp
cmp
rolb
lods
inc
push
lret
call
or
bound
mov
std
jg
pushf
je
or
dec
frstor
dec
jno
scas
xchg
xlat
clc
pop
or
inc
fldt
sub
and
aas
ss
sbb
out
jecxz
movsb
dec
cli
lahf
or
jg
mov
jle
and
sbb
push
and
mov
add
inc
fwait
xor
in
sub
mov
xchg
cmp
push
test
scas
ret
sbb
mov
fcomip
xchg
fnsave
push
loop
jmp
push
mov
into
xor
cwtl
fidivs
inc
dec
jmp
scas
mov
shll
dec
leave
pusha
jge
js
aaa
pop
je
je
fisubl
nop
jno
lds
popa
pop
je
mov
cmpsl
testl
mov
sti
mov
jns
jge
push
add
daa
fsubl
add
pop
xor
out
adc
outsb
or
testb
call
iret
mov
imul
or
jle
mov
daa
or
into
jnp
jnp
iret
lahf
mov
adc
inc
leave
pushf
xor
adc
mov
sarl
xor
in
lret
fwait
and
xor
outsb
cmpsb
fs
mov
push
loope
movsl
icebp
adcb
inc
lret
add
aaa
ret
mov
cmp
pop
xor
xor
adc
popf
push
pusha
push
mov
jae
xor
adc
mov
ret
cmpsb
cmp
fs
mov
mov
daa
incl
sbb
imul
outsb
cmp
xchg
fstpl
xor
ja
mov
lret
int
ja
std
inc
fwait
cwtl
in
fwait
inc
outsb
inc
fs
lret
cld
mov
scas
rcrl
lret
cmp
pop
push
jmp
outsb
or
pop
or
push
and
push
xor
or
xchg
mov
or
xlat
sbb
in
addb
andl
fucomi
bound
push
insl
cwtl
stos
insl
fwait
adc
int
sub
or
pop
fdivr
insl
push
dec
pop
in
shrl
cmp
mov
clc
adc
mov
lret
scas
or
cmc
add
pop
ljmp
stos
mov
inc
cmpsl
xor
call
loop
mov
outsb
add
jmp
testl
and
outsb
or
cmp
mov
mov
jne
sbb
cld
adc
push
pop
out
dec
pop
aas
loop
jo
rol
push
dec
repz
mov
cmp
or
cli
xchg
inc
aas
lods
mov
jno
cwtl
mov
jge
mov
add
mov
loope
pop
push
mov
pusha
cmp
dec
jno
add
sbb
push
or
outsb
add
nop
xor
push
out
movsb
dec
pop
gs
js
mov
sub
shrb
testl
nop
dec
fbstp
jg
iret
cmpb
sbb
dec
stos
test
add
popa
pop
sub
push
xorb
sti
lret
xor
sub
fisubs
les
fisubrs
hlt
sub
push
shll
xor
mov
push
push
jmp
and
arpl
mov
push
leave
arpl
popf
addb
call
or
xchg
mov
scas
push
inc
xchg
rcl
inc
arpl
xor
imul
xor
push
in
lods
popf
mov
adc
push
add
xchg
xor
insl
sub
hlt
fwait
mov
sarb
mov
pop
xchg
sub
fninit
xchg
xor
add
inc
mov
popf
stc
dec
fsts
ret
xor
mov
xor
mov
sti
scas
ljmp
sub
mov
and
or
xor
xchg
popa
push
dec
popa
mov
ljmp
xor
jp
dec
fnsave
and
insl
cli
push
les
rcr
mov
dec
mov
repz
cs
sti
fwait
xchg
scas
fdivrl
mov
mov
cltd
mov
iret
mov
lock
mov
enter
pop
mov
push
inc
nop
xchg
cmp
roll
dec
mov
pop
push
xor
subl
fs
push
bound
push
insb
cmp
movsb
outsl
ds
outsl
pusha
fidivl
rcl
mov
into
mov
pop
sarl
ret
mov
dec
xchg
dec
out
jecxz
inc
test
into
jmp
push
dec
pop
out
shll
rclb
mov
push
mov
push
jb
mov
push
xor
pop
add
sub
and
mov
rorl
test
xor
xor
jne
jns
xchg
pop
adc
inc
sbb
repz
out
dec
push
sub
loop
les
fmull
dec
pusha
xchg
sub
inc
fdivs
xlat
pop
cmpsb
ret
aad
jecxz
jg
cmp
add
xor
push
and
mov
jns
pop
and
or
in
mov
sbb
pop
addr16
outsl
cmpsl
sbb
xchg
xor
cmp
ror
xor
cli
sub
fildll
jg
xlat
clc
shrl
lret
jp
movsb
and
pushf
sbb
shlb
pop
mov
repz
pop
xor
push
movsb
repz
pop
jno
adc
arpl
adc
dec
repnz
test
rorb
mov
mov
sar
loope
lea
mov
adc
push
mov
and
push
xor
out
xlat
adc
sahf
test
pop
lret
loop
add
mov
mov
testl
xchg
xor
inc
iret
cwtl
stc
out
test
fdivp
push
lcall
sahf
jmp
pop
or
cmp
pop
imulb
aas
shl
sbb
sub
or
or
xchg
sbb
xor
les
dec
lock
rep
arpl
in
jp
stc
or
outsb
mov
sbb
ja
push
push
push
pop
and
mov
pushf
insb
dec
in
xchg
lahf
dec
pushf
cli
call
lea
cmp
stos
inc
call
mov
test
or
loopne
ret
movsb
sbbb
aaa
adc
cmp
icebp
xor
stc
sbb
mov
negl
xchg
scas
adc
jae
add
dec
sub
lahf
enter
fbstp
aas
cmpsl
dec
dec
jecxz
cmpl
mov
cmpsl
mov
fidivrl
out
outsl
jb
lock
fst
fs
cmp
imulb
gs
sub
adc
mov
rorb
add
daa
out
mov
xchg
addr16
lret
and
adc
mov
jne
cmp
adc
jb
adc
rep
mov
sbb
test
test
sub
add
rcr
or
test
ret
mov
cli
out
repnz
push
mov
jge
lahf
add
jge
je
cmp
or
pop
push
sbb
scas
or
jle
add
mov
push
inc
cld
xchg
xchg
ret
mov
outsl
cs
lds
and
cmp
aas
add
outsl
adc
out
iret
ds
pop
adc
mov
xor
mov
pushf
shll
and
dec
mov
sub
cmp
mov
enter
push
pop
push
push
in
push
sub
push
int
cmp
xchg
pop
cmp
sbb
pop
push
fs
mov
push
mov
pop
fucomp
push
xor
cltd
mov
push
inc
pop
xchg
pop
add
ret
or
xchg
ja
xor
ja
inc
fcomps
shr
xchg
mov
xor
loopew
in
mov
jns
sbb
movsb
push
cwtl
inc
jns
fbld
xor
mov
clc
push
push
or
jp
lods
lahf
in
pop
shll
xor
mov
iret
or
xchg
push
push
movsl
xchg
sub
orl
lahf
and
decb
iret
cmp
ja
popl
push
ljmp
xor
and
dec
out
jnp
das
stos
cmp
sarl
jo
cmc
sbb
jbe
mov
icebp
addl
mov
push
sub
fwait
insl
and
test
mov
mov
test
mov
xchg
in
xor
cmp
imul
int
shlb
movsl
icebp
or
sub
icebp
cmp
popf
aaa
dec
iret
pop
lcall
in
imul
hlt
pop
xor
iret
jl
in
sbb
add
cmpsl
out
test
jbe
mov
test
cli
mov
push
lcall
sub
sub
enter
fldpi
test
pop
in
xor
push
ljmp
lret
dec
sbb
inc
push
mov
jp
sbb
fs
and
pop
cwtl
in
fisubl
lock
pop
bound
jno
mov
adc
test
dec
jbe
jno
cmc
add
aas
mov
aaa
xchg
or
inc
cwtl
xchg
sub
testl
movsl
test
pop
pop
push
popf
dec
cmc
divl
call
out
inc
and
push
mov
push
dec
sub
jmpw
push
jmp
mov
and
pop
dec
pop
loop
xlat
lahf
jg
sbb
aam
pop
orb
lds
or
add
sbb
cmp
rolb
jecxz
lds
imul
dec
loope
stos
push
fldl
mov
ds
push
xchg
arpl
out
sbb
mov
sbb
dec
cwtl
jge
shlb
popf
hlt
mov
rcrl
mov
rcrb
ljmp
cmpb
test
sbb
cmpsb
adc
ja
dec
cmp
dec
dec
adc
dec
pop
mov
cmpsb
xchg
mov
jne
dec
xlat
jbe
mov
test
movsl
daa
arpl
mov
fstps
loope
mov
add
or
popf
jmp
jmp
notl
xchg
sub
xchg
lcall
out
lahf
pop
insl
adc
cmpsl
add
fildl
pop
in
or
lds
icebp
ds
mov
push
scas
dec
fimuls
pop
push
mov
dec
popa
stc
jge
jne
scas
push
fmulp
scas
inc
xor
gs
add
jae
shlb
out
mov
stos
dec
sub
jnp
cwtl
test
push
aas
xchg
pop
and
xlat
rcl
dec
pop
sbb
push
fcompl
mov
pop
out
notl
mov
js
shll
imul
fildl
ret
or
or
jge
je
divl
and
fisubrl
iret
inc
add
faddp
dec
pop
repnz
sub
push
daa
mov
into
mov
sbb
jbe
mov
out
xchg
jle
ljmp
cmpsb
outsl
in
dec
mov
dec
movsb
cmp
mov
cltd
test
inc
mull
pusha
push
cwtl
pop
out
push
cs
scas
cli
push
pop
call
sti
cmpsb
dec
adc
add
mov
rep
mov
filds
fwait
push
mov
cmp
in
or
or
into
push
push
pop
push
push
mov
lods
lods
mov
sub
xchg
add
dec
xor
scas
ficoml
push
loope
sbb
loope
scas
sub
jne
int
test
mov
pushf
pop
jnp,pt
push
pop
mov
inc
sub
xchg
test
testb
and
out
test
insb
mov
and
xchg
sbb
sbb
mov
lods
adc
repz
push
jno
jge
mov
sub
cli
push
mov
xor
outsb
jnp
pushw
mov
lret
loop
imul
jns
inc
popa
ficoml
fnstsw
add
xchg
xchg
pop
jb
mov
push
bswap
insl
adc
pop
vrangess
add
xor
pop
outsl
and
fisubl
jg
loopne
xor
cmpsb
mov
les
les
sbb
andl
cmpsl
jmp
or
jecxz
mov
stos
rolb
shl
or
enter
std
xchg
or
sub
sbbl
and
mov
lock
sbbl
cmp
pop
pushf
aas
xor
lret
fldcw
push
inc
mull
stos
fisttpl
inc
nop
fsubrl
bound
cmp
mulb
sahf
inc
mov
lds
or
xchg
sbb
popf
xor
sti
repz
or
mov
cmpsl
pop
int
pop
iret
and
mov
add
addr16
lret
and
imul
lock
mov
ficoml
adc
dec
and
xor
in
add
pop
cmp
sti
pop
ss
mov
ret
xor
add
mov
stos
lcall
cmp
xlat
clc
stos
sub
mov
push
icebp
and
mov
popa
insb
xor
inc
adc
sbb
inc
add
js
dec
sub
scas
das
xchg
jbe
fcoml
xor
and
inc
std
adc
push
cs
xlat
jl
add
jnp
push
lods
xchg
jno
sub
pop
ret
inc
hlt
mov
cli
in
sbb
jg
cmp
jl
shl
jge
ret
mov
out
stos
rol
inc
fs
cmpsl
cmp
stos
mov
xchg
loopne
cmpsb
adc
jo
loopne
mov
sub
dec
cmp
fbld
fisttpll
jp
push
xor
icebp
mov
mov
daa
add
sub
xchg
dec
out
call
adc
movsb
aam
mov
fnstsw
dec
sbb
ucomiss
inc
pop
movsl
sbb
enter
push
mov
push
cmpsb
enter
dec
adc
stc
nop
add
ret
repnz
lods
frstor
sbbl
daa
in
nop
or
daa
hlt
jns
xor
loopne
dec
dec
movb
cld
inc
or
sub
out
pop
pushf
iret
enter
sub
ret
jl
ds
pop
xchg
repz
push
jge
adc
stos
cmpsb
lret
jl
aaa
daa
std
inc
sti
sbb
push
push
jnp
and
jns
push
and
adc
pop
ret
fcoml
adcl
add
sbb
js
xchg
mov
adc
test
xor
jmp
mov
jno
xchg
nop
push
fidivs
out
pop
icebp
sub
rol
xor
fldenv
or
mov
add
add
dec
xor
cli
lcall
shrb
mov
icebp
xor
inc
ljmp
gs
mov
pop
jmp
mov
jmp
mov
mov
jg
dec
je
dec
test
jne
test
pop
js
jge
pusha
scas
adc
lahf
mov
cmc
out
cmp
add
lret
hlt
xlat
aaa
cmp
rol
sub
repnz
push
test
dec
bound
jbe
dec
lods
sbb
dec
into
jg
js
xlat
outsb
jb
xchg
lcall
xchg
stc
jmp
or
movsl
mov
xor
xor
sub
cmp
shr
inc
insb
in
movsb
dec
mov
add
pusha
jmp
xchg
mov
or
insb
xor
gs
cld
lcall
movsl
dec
and
pop
cmpsb
push
jns
shrl
arpl
sbb
and
in
loop
add
repnz
xchg
fwait
or
jp
mov
out
inc
ljmp
out
inc
and
xchg
jns
test
cli
or
xor
adc
fldenv
and
stos
inc
in
push
jae
nop
leave
sub
push
cmp
mov
movl
shrl
push
add
xor
enter
pushf
lahf
adc
mov
int
std
int
jecxz
sub
cltd
add
das
push
jns
es
aas
add
mov
push
adc
cs
out
dec
aam
lods
xor
idivl
std
or
xlat
fidivs
xchg
test
loop
repz
les
adc
js
hlt
imul
add
es
xchg
jl
jge
arpl
lahf
dec
push
out
push
push
jb
mov
nop
mov
repz
fs
dec
lahf
imul
imul
lret
dec
in
adcl
ss
je
add
lods
hlt
adc
rcr
mov
ja
lea
mov
ret
jb
hlt
out
jno
xchg
adc
ja
fists
dec
fxsave
mov
sub
and
outsb
push
pop
in
xor
sbb
cmp
out
sbb
mov
and
std
xchg
fsubl
nop
jp
out
jno
scas
jmp
fwait
pop
dec
pusha
inc
sbb
daa
test
pop
inc
lds
mov
testb
call
push
sbb
in
out
outsb
xlat
mov
mov
loope
adc
sub
daa
sbb
mov
sub
dec
call
scas
popf
and
and
jno
jp
adc
shll
ja
add
fsubrs
sub
pop
mov
dec
mov
push
fstps
mov
sub
xlat
pop
int
inc
sub
mov
outsl
scas
shlb
orl
ds
sbb
sbb
rorb
cmc
push
insb
fimull
push
jp
add
in
push
cmpsb
lret
mov
push
sahf
xchg
xchg
add
jnp
and
sub
jle
lret
mov
outsb
gs
pushf
inc
mov
xchg
sbb
insl
sbb
ss
jle
out
stos
inc
push
xor
mov
cltd
in
enter
lds
ret
xor
popa
lods
lds
xchg
mov
push
inc
dec
loope
jb
lods
sub
icebp
xchg
out
pusha
idivl
xchg
add
adc
inc
in
add
and
or
mov
fnsave
xchg
push
pop
sbbl
aad
lods
mov
sbb
xor
test
pusha
test
call
mov
sbb
push
fldcw
xor
call
mov
ror
xor
cli
imull
scas
out
push
fcmove
mov
mov
stos
aas
mov
fsubrl
mov
hlt
shll
bnd
jnp
das
into
xchg
add
mov
popf
loop
cmpsb
cwtl
sbb
fcompl
aas
xor
out
arpl
loop
mov
pop
mov
cmpsb
add
pop
cmp
pop
dec
add
mov
aaa
mov
lcall
gs
mov
arpl
inc
insl
adc
mulb
je
fnsave
sub
lock
xchg
scas
lret
cmp
js
call
xor
mov
sub
xor
adc
mov
data16
fisttps
pop
out
adc
jbe
pushf
xchg
in
add
pop
xor
dec
jge
outsl
mov
ss
jns
jae
cld
xchg
mov
add
ds
jns
sub
mov
pop
xor
daa
mov
pop
fwait
out
or
imul
outsb
mov
xor
cld
sub
test
fwait
lret
stc
out
xchg
sti
cmpsl
fmull
mov
in
cmp
jmp
cmp
mov
pop
mov
dec
rolb
push
add
adc
rcr
xchg
in
and
cmp
or
testb
ror
sub
xlat
loop
stc
lock
into
jmp
cltd
addl
mov
mov
jnp
aad
inc
ret
shr
sub
jle
dec
fidivs
inc
dec
and
xchg
cld
dec
dec
push
push
xor
daa
jle
lods
push
jl
xchg
xchg
xor
push
or
pop
mov
subb
inc
test
leave
test
cmp
xchg
push
inc
mov
push
push
pushf
cmp
push
or
mov
stc
push
xchg
xlat
jl
clc
hlt
adc
roll
mov
out
outsb
jecxz
mov
inc
pop
xchg
stc
sbb
insb
scas
xor
adc
lahf
xor
dec
cmpw
xchg
cmp
loope
int3
cwtl
dec
adc
mov
mov
mov
cmpsb
jns
fdivs
mul
ja
sub
shr
test
cmp
xor
cltd
ja
clc
push
push
push
cli
and
add
mov
cmp
dec
out
js
mov
iret
arpl
cmp
jbe
cs
mov
add
ja
or
mov
inc
imul
and
sub
and
subb
mov
dec
sbb
dec
pushf
hlt
add
xchg
sbb
sbb
fisttps
and
test
ja
inc
test
rolb
sbb
or
jbe
cmpl
pop
sahf
jnp
mov
addr16
or
inc
or
cs
add
add
cmpl
mov
jnp
faddl
and
push
jns
out
and
xchg
cmp
call
mov
or
inc
mov
jns
dec
enter
out
call
pop
add
pop
loopne
rcr
in
cmp
popf
pop
fcomi
loop
jl
or
sbb
fucomip
mov
pusha
stc
test
cli
xchg
pop
push
push
xchg
pop
lock
repnz
sub
imul
fldt
adc
imul
jg
les
hlt
addr16
cmpb
js
popf
cmpsl
fmuls
cli
add
lret
ja
sub
pushf
mov
push
xor
sti
pop
sarb
sub
jge
xchg
jns
and
cmc
pop
cmp
movsl
icebp
or
push
int3
mov
sbb
mov
mov
xor
cmpsl
cld
adc
ret
pop
psubusb
pop
add
cmp
cmp
xor
xchg
sbb
mov
pop
sbb
addl
idivb
mov
decl
jge
loop
push
and
or
insl
xor
adc
xorl
cmp
jge
and
inc
push
imul
fcoms
jg
insl
rcrb
in
dec
repnz
adc
shlb
icebp
loope
aaa
stos
or
mov
loopne
fstl
xchg
add
les
cmpb
movsl
xchg
lcall
out
inc
pop
loop
cmp
mov
cmp
test
sbb
cmp
and
pop
sub
test
add
push
imul
subps
js
and
add
mov
pop
xchg
adc
jmp
cltd
loopne
or
hlt
push
lods
pop
cli
aam
test
pop
repnz
push
mull
jns
sub
out
xchg
and
mov
lea
outsb
outsl
xor
lcall
jmp
cld
pop
xchg
out
fsubrs
outsl
jnp
iret
sar
icebp
pop
xchg
push
fwait
mov
push
mov
adc
push
xchg
bound
ret
or
jle
cmp
or
cli
lds
out
lds
int
jmp
out
call
jo
add
pop
jbe
add
add
inc
mov
jl
jae
mov
cli
xchg
sub
imul
js
int
or
mov
lds
jp
outsb
xor
xchg
adcb
xlat
je
ss
xor
inc
dec
mov
fcompl
leave
pop
mov
rcrl
push
out
adc
and
push
mov
or
cwtl
mov
daa
adc
test
mov
inc
shrb
jne
push
mov
nop
push
dec
mov
mov
addl
mov
arpl
and
in
cwtl
pop
bound
mov
mov
in
inc
into
addr16
push
test
popf
cmpsl
xchg
xchg
subb
cmp
rcr
push
pop
fadd
sbb
sbb
mov
popa
in
inc
sbb
iret
cmpsb
xchg
ja
fisubrl
fisubs
leave
mov
movb
xor
dec
ljmp
enter
mov
cld
pop
adc
sbb
out
push
shll
daa
sbb
pop
cwtl
push
jae
pushf
jbe
ret
add
lds
adc
shrb
aas
lahf
repz
adc
cli
rcrl
in
jnp
xchg
imul
adc
adc
inc
push
push
mul
mov
jecxz
sub
fcmovb
clc
lret
push
das
lea
shlb
adc
and
stos
xchg
pop
pop
or
inc
dec
movsl
dec
xorl
addr16
fsubrp
inc
mov
and
push
pop
mov
repz
and
out
leave
cmpb
pop
xchg
adc
cli
jno
aaa
loope
hlt
pop
sbb
rorb
mov
sarb
or
repz
daa
pop
mov
xor
insb
sti
push
std
sbb
sbb
push
dec
push
sub
icebp
insb
stc
add
dec
ret
xor
repz
lret
addr16
xchg
xchg
adc
stc
jo
sub
jl
cltd
in
and
jecxz
scas
mov
inc
xor
in
mov
in
push
mov
cmp
mov
xchg
or
add
mov
xchg
xor
sahf
lods
ror
test
jae
repnz
jbe
cmp
hlt
pop
cmp
dec
xchg
cmp
popa
lret
out
and
xchg
in
call
adcl
xchg
dec
jb
data16
xchg
sub
mov
mov
or
mov
in
push
jmp
movl
scas
shll
inc
cltd
push
arpl
push
fimuls
or
pop
pop
repz
mov
jp
sub
xor
jge
fcomps
ror
xchg
dec
pop
out
push
xor
aam
jmp
outsl
adc
xor
inc
push
and
cmp
inc
int
loop
mov
ret
daa
xor
int3
jmp
and
dec
pop
enter
mov
push
je
mov
call
ss
aas
ljmp
hlt
shlb
or
jmp
sub
mov
jnp
xor
pushf
mov
inc
dec
je
mov
cmp
inc
mov
je
lds
push
inc
fimuls
stos
xor
test
dec
stos
mov
arpl
inc
outsb
mov
or
repnz
enter
add
aaa
or
mov
in
fcmovbe
xchg
iret
mov
sahf
adc
dec
adc
pop
dec
repz
ljmp
imul
dec
out
imul
adcw
xor
sub
push
mov
gs
idivb
fistpll
dec
or
lcall
and
xor
adc
adc
pop
movsl
lcall
insl
jmp
arpl
fisubl
xchg
pop
mov
adc
lret
push
lds
jnp
sub
push
sbb
or
pop
repz
data16
insl
xor
imul
push
sahf
jne
mov
cld
dec
test
enter
aam
xchg
dec
sbbb
loop
repnz
fbld
mov
ret
adc
pop
push
mov
pop
jl
add
ds
jno
jo
divl
mov
hlt
adc
xchg
and
mov
data16
loop
sbb
test
fimuls
lea
cmpsb
scas
mov
dec
adc
xchg
out
pop
ret
mov
call
pop
and
lret
xchg
outsl
jnp
sbbl
push
pop
roll
imul
pop
xchg
mov
ret
mov
rorb
cli
dec
sbb
pop
je
dec
adc
mov
or
jp
xor
lret
mov
and
sahf
add
mov
shr
and
iret
cmp
fisubl
mov
into
scas
mov
mov
sbb
loop
aaa
into
mov
mov
rcrl
mov
mov
das
in
stos
cltd
xor
adc
sub
popa
lahf
jecxz
sbb
lds
mov
rolb
lret
lds
mov
cld
xchg
ja
pushl
or
in
pusha
inc
decb
nop
sub
jne
sbb
cmp
lods
sbb
jecxz
push
popa
sahf
cli
sbb
sti
addr16
pop
into
fs
testl
iret
lcall
xchg
adc
pop
cmp
insb
scas
lcall
mov
cltd
imul
gs
ljmp
sbb
fisubl
cmp
xor
or
out
cmp
add
mov
fs
cmc
lret
cmp
pop
scas
dec
loopne
shll
xlat
jg
or
setge
repnz
les
or
sbb
inc
sbbl
fstps
sti
inc
lock
scas
or
mov
outsb
inc
pusha
ss
or
data16
fcoms
ret
lret
cmp
add
test
or
mov
hlt
or
inc
sub
lea
inc
inc
jmp
mov
dec
and
ret
push
subl
dec
loopne
add
imul
loope
jb
add
and
inc
mov
dec
mov
lcall
and
sub
xchg
adc
fincstp
push
inc
call
out
inc
push
lods
mov
aam
lods
pop
sbb
mov
mov
dec
out
cmp
daa
movsb
cmp
cmpb
aaa
mov
mov
dec
mov
pusha
mov
mov
loop
jbe
setle
sbb
movsb
aaa
add
jbe
fwait
out
gs
jns
aas
fidivs
fsubl
fsubrs
fucomip
and
pop
into
add
mov
insl
sbb
sub
mov
test
mov
mov
adc
aaa
roll
or
test
xlat
xchg
cmp
add
cltd
imul
scas
jbe
rcrl
fisttpll
call
outsb
adc
inc
mov
push
mov
cmpsl
rcr
xor
cmc
dec
cmp
std
ret
insl
js
dec
and
sub
xor
mov
push
jae
jmp
into
loop
cli
mov
sbb
int
xchg
outsb
inc
out
test
and
jg
cmp
dec
pop
pop
in
subl
and
xor
xchg
das
test
icebp
mov
mov
xor
adc
aad
insb
scas
pushl
jbe
xchg
adc
sbb
shr
xchg
pop
outsb
mov
mov
mov
push
sbb
addr16
jno
or
jo
pop
sub
mov
test
pop
iret
push
movsb
jne
and
mov
insl
mov
lahf
jp
push
nop
add
jmp
add
outsl
add
inc
scas
inc
stos
push
lock
dec
adc
cmp
xchg
add
mov
and
out
cmp
int3
sbb
dec
inc
cmc
push
mov
pushf
outsl
imul
or
jnp
ret
incb
int
sub
mov
imul
cltd
shl
push
in
out
fidivrl
dec
pop
jo
cmp
cmp
mov
push
adc
test
adc
jl
sub
mov
pushf
xlat
outsl
xchg
sub
les
cli
pusha
inc
ret
dec
xor
imul
jno
mov
int3
jge
add
sub
cs
outsb
ret
je
cmpsl
gs
lds
stos
mov
cmp
jge
xchg
push
and
jg
jp
lea
or
insl
cld
das
iret
jecxz
jp
push
aas
jl
pop
sbb
sbbl
mov
mov
add
add
fdivrs
mov
jbe
adc
sub
arpl
leave
mov
rcll
out
add
scas
scas
cli
and
jecxz
daa
jno
movsl
addr16
pop
cmp
lahf
sub
jg
in
and
cmp
fstpl
aaa
test
jge
push
stc
inc
sahf
lods
jg
popa
stc
cmpsb
xchg
ret
loop
gs
int3
mov
rorl
es
mov
call
mov
test
insb
mov
sbb
iret
mov
or
mov
sti
test
icebp
mov
push
xor
fnstenv
mov
mov
popa
mov
xor
int3
jg
fistpll
les
dec
out
cmpsl
mov
mov
cmc
add
mov
in
inc
xchg
sarl
out
pop
xchg
orl
cmp
les
into
push
idivb
lcall
out
and
in
inc
fisubrl
lret
jne
test
in
out
sbb
lea
xchg
pop
pop
inc
adc
xchg
aaa
mov
push
jae
jae
xor
push
xchg
inc
adc
stos
mov
sub
insl
xor
ljmp
jno
adc
enter
lret
push
jae
nop
enter
ficoms
fnsetpm(287
adc
lcall
or
and
sbb
pushf
stc
js
in
mov
add
jg
inc
loop
adc
outsl
jnp
jo
or
cmp
mull
cmc
lret
fisttpl
stos
mov
in
mov
inc
pop
dec
and
movsl
insb
ds
or
enter
or
cmp
int
mov
out
push
lahf
stos
jns
pop
adc
inc
dec
push
push
mov
jne
push
in
mov
data16
in
ljmp
mov
mov
mov
mov
out
pop
out
and
popf
leave
pop
push
push
cmp
cld
jecxz
jmp
insb
dec
xchg
xchg
push
mov
fwait
xor
fyl2x
inc
dec
mov
daa
loop
xchg
aad
lods
inc
push
je
cs
das
lret
bound
xor
dec
push
jmp
sbb
mov
lahf
data16
xchg
data16
jle
jb
inc
lahf
test
sub
loop
bound
jle
imul
cmp
fmuls
das
pop
jle
inc
scas
or
mov
fidivrs
push
mov
test
enter
mov
xchg
add
pop
rcll
jl
mov
xchg
rcrb
adc
mov
fbstp
fdivrl
test
mov
dec
sbb
xchg
push
scas
cmp
mov
lret
sbb
ja
bound
mov
mov
jg
sub
mov
mov
ret
lret
frstor
aad
xchg
jbe
xchg
pop
mov
mov
mov
loopne
ficoml
test
lahf
dec
mov
mov
je
pop
fcompl
imulb
xchg
pushf
pop
pop
inc
mov
in
arpl
mull
std
gs
mov
xor
mov
rcll
daa
scas
xchg
test
ja
adc
std
enter
gs
pop
mov
jo
dec
std
or
cmp
aad
mov
xchg
repnz
loop
push
nop
pop
add
dec
dec
addr16
aam
outsb
nop
jnp
aad
mov
mov
inc
mov
adc
sub
sti
lea
ret
pop
call
or
mov
xor
push
and
out
sub
cltd
mov
lret
adc
std
or
mov
imul
mov
mov
bnd
and
xchg
cltd
xor
add
xor
out
mov
pop
fdivr
out
sbbb
push
pop
mov
pop
sbb
outsb
xchg
loopne
or
add
sbb
mov
call
xchg
xor
int
mov
push
xor
inc
sbb
loop
jecxz
lea
imul
xor
or
inc
push
sti
fstp
or
cmp
xorb
cmp
ficomps
push
sub
lock
cmp
clc
repz
fwait
jo
jb
mov
hlt
jl
leave
xor
mov
pop
xchg
out
jo
mov
push
imul
sbb
pushf
test
pop
test
ret
xchg
int3
fcoms
sbb
adc
in
mov
insl
outsl
xor
or
jmp
push
repz
sbb
cmp
dec
cmp
add
lods
int
adc
mov
and
pop
test
cmp
mov
idivl
cmp
stos
hlt
dec
adc
mov
aam
jns
lock
int3
inc
in
mov
lea
cwtl
rorb
push
pop
xchg
in
fiaddl
f2xm1
gs
cli
push
push
movsl
cld
pop
and
sub
test
inc
lret
fldl
icebp
in
mov
jg
fnstcw
and
cld
loope
and
in
cmp
sub
stc
mov
mov
push
xor
sbb
or
je
sbbl
mov
iret
push
cmpsl
lds
es
cmp
pop
jae
xor
sub
pslld
pop
clc
fcoms
dec
sahf
outsl
shll
sbb
sarb
pop
gs
and
mov
rolb
sub
test
fdiv
scas
std
jbe
mov
xchg
mov
add
inc
sbb
scas
movsl
cmp
mov
les
aam
into
jb
mov
stc
push
or
fcomi
adc
cmpsb
cmp
call
pop
scas
roll
ja
sub
ds
mov
mov
outsl
enter
pop
rclb
scas
dec
pop
or
cmp
push
jmp
stos
lea
loop
adc
cmp
push
iret
push
add
pusha
clc
sub
or
mov
or
sub
adcl
test
ljmp
sbb
mov
mov
inc
imul
fisubrs
mov
shrl
shl
dec
pop
cwtl
inc
jl
ret
fsubs
jl
push
xor
sti
inc
dec
cmp
push
lcall
stc
and
jnp
stos
and
dec
jae
insb
popl
and
sub
popa
into
sub
xchg
into
lret
arpl
aaa
inc
subl
jne
jle
adc
mov
pop
cmp
mov
cmp
xor
cmp
addr16
cmpsl
imul
ds
xchg
jl
xchg
adc
dec
sbb
hlt
lahf
cs
nop
jnp
push
add
push
jns
addr16
aas
ljmp
gs
adc
xor
popf
mov
arpl
jle
adc
fsubrs
mov
mov
pop
cmc
inc
shr
push
mov
es
mov
roll
outsb
std
cmp
or
test
cmp
nop
jle
xlat
pop
pop
mov
pusha
cmp
lret
mov
into
xchg
out
out
outsb
or
das
rcrl
out
jae
push
movsb
das
dec
mov
bound
iret
mov
mov
call
add
jg
repnz
add
or
lods
mov
test
in
outsl
cwtl
dec
sbb
ds
dec
jl
adc
pop
movsb
in
add
xor
mov
sti
or
shl
adcl
adc
xchg
lahf
hlt
sbb
mov
fmuls
dec
test
test
push
arpl
inc
inc
adc
xchg
enter
mov
ficomps
pop
outsl
push
fbld
enter
fs
xor
inc
pop
int
loope
std
rcpps
cmpsl
push
in
jge
xchg
scas
push
fst
call
or
or
add
push
in
sbb
icebp
mov
sahf
std
pop
add
mov
mov
shll
adc
je
cmc
cmp
push
leave
pop
in
and
push
sysenter
call
add
movsb
cmp
jl
jg
sub
adc
mov
shll
push
dec
in
push
xchg
fnsetpm(287
xor
inc
dec
scas
ja
bnd
adc
cmp
rcl
pop
cld
xchg
or
fimull
cmp
jne
jg
pop
mov
push
jge
jbe
movsb
icebp
pop
and
cld
xchg
ja
js
cmp
cmpsb
adc
scas
adc
imul
stos
or
incb
shlb
xchg
stos
icebp
dec
dec
pop
in
insl
loopne
or
in
shrl
shrb
adc
pop
jp
fwait
dec
imul
xchg
repz
xchg
jmp
or
mov
cmpsl
push
lock
push
mov
in
movsb
mov
and
sarb
leave
ficomps
cmp
stc
lock
mov
jp
fldcw
fsubr
repnz
dec
iret
das
cmp
cmp
jl
enter
and
or
xor
push
inc
sub
ss
and
fiadds
cmp
push
es
mov
add
cmp
add
inc
sub
movsl
mov
das
stos
push
sbb
int
fldpi
lods
out
sub
icebp
popf
sub
inc
sarl
fldt
lret
js
stos
mov
dec
call
mov
sub
xchg
sub
daa
cmp
fcmovu
jne
cmp
jmp
pop
sbb
ret
sub
push
andl
jge
popa
call
mov
xchg
divb
mov
mov
add
and
or
xchg
xor
mov
lods
xlat
mov
jl
into
pop
pop
stos
pop
daa
adc
jl
call
nop
dec
aam
clc
jo
pop
outsb
mov
push
stc
pop
popa
mul
adc
push
test
shll
leave
es
xchg
xchg
inc
dec
ret
cmc
cwtl
call
xchg
js
into
jo
sarl
test
jl
inc
inc
jae
jns
ret
push
adc
inc
xor
fisttps
adc
rcr
mov
pop
in
mov
in
cmp
fwait
mov
leave
push
dec
lea
sti
in
mov
lret
xchg
mov
in
scas
mov
movsb
jmp
mov
sbb
mov
repnz
jne
add
sbbl
and
rcrl
test
sbb
clc
jp
loop
xor
xlat
aas
int
sbb
cwtl
or
subb
ss
inc
push
pop
ja
and
mov
lret
addr16
xor
cli
mov
lret
stos
add
call
insb
jae
enter
int3
movsb
dec
adc
inc
sbb
leave
dec
or
pushf
cvtpi2ps
insl
in
inc
fdivl
int
mov
xor
xor
mov
repnz
cld
fsubs
xchg
in
inc
xor
stos
pushf
inc
pop
into
outsl
xchg
add
lcall
jmp
sti
scas
mov
sub
push
pop
clc
pop
xchg
out
jno
mov
popf
xor
push
lcall
mov
fisubrl
cmp
xchg
in
jbe
aaa
push
bound
push
leave
in
or
iret
cmp
push
lret
and
jo
or
movsb
push
mov
loopne
and
subl
sub
in
dec
lea
aaa
sub
sbb
pop
xor
js
shrl
xchg
test
jg
lds
mov
ficompl
daa
leave
mov
aas
sub
xchg
bound
or
adc
mov
icebp
xchg
push
fcomps
stos
into
inc
xor
sbb
sbb
sbb
cmpsb
pop
or
pop
xchg
andb
add
dec
rclb
sbb
bnd
test
in
rclb
push
and
pop
jns
xor
mov
sub
out
pop
lods
int3
pushf
jb
dec
loop
fsts
inc
pop
mov
cmpsl
xor
sbb
xchg
clc
add
insl
add
add
aas
sub
add
lcall
loopne
insb
jno
fists
xor
add
xchg
dec
mov
out
leave
jb
xlat
pop
popa
jne
test
xor
gs
xlat
es
sti
pop
push
out
dec
incl
push
push
in
sbb
pusha
sti
pop
ficompl
sub
mov
push
adcb
loop
les
negb
push
iret
es
icebp
push
sbb
stc
dec
push
stc
nop
mov
and
jo
stos
mov
push
ret
sub
jge
mov
clc
inc
andl
mov
xchg
fisubrl
cmp
xor
ret
dec
mov
push
fwait
adc
ret
mov
mov
mov
mov
lods
leave
imul
aas
xchg
inc
pushf
push
aam
or
mov
insb
and
lods
push
push
aam
xchg
aaa
daa
pop
loopne
cmc
jecxz
aad
stos
pop
pop
dec
inc
pop
cmpsl
jle
scas
sub
movsl
inc
enter
clc
mov
std
loope
out
lret
mov
ja
push
push
lods
pop
jae
es
nop
popa
push
xlat
cmpsb
or
ds
les
aad
adc
push
fs
icebp
jge
ret
fwait
xchg
cmpb
nop
or
out
jmp
dec
sub
jle
jo
mov
inc
bndstx
cmp
xor
sub
adc
notb
arpl
jge
mov
jl
popa
jmp
pop
mov
cli
scas
jl
mov
push
mov
xchg
mov
dec
jo
fmulp
adc
enter
enter
mov
out
sub
sti
es
out
popf
jb
xchg
fstpt
hlt
xchg
jge
js
add
jae
jge
arpl
push
mov
add
and
sub
jmp
xchg
dec
pop
idivb
jbe
mov
popa
clc
sbb
jg
pop
sti
jg
aam
iret
xor
mov
add
aad
shlb
xchg
notl
sub
mov
mov
pop
mov
pop
and
inc
xor
mov
mov
mov
xchg
jge
xchg
in
or
incl
jg
ficoml
adc
clc
orb
fcom
sub
pop
andl
lock
xchg
psubsw
xchg
int
es
sti
or
loop
jmp
and
xlat
jnp
das
pop
sbb
lahf
inc
bound
fists
adc
pop
xor
int3
popa
xchg
dec
sbbb
xchg
or
lds
ret
out
lret
popa
mov
icebp
pop
push
inc
pushf
das
test
insl
test
pop
push
add
xor
cltd
addb
mov
jmp
fistps
sbb
mov
insl
psubq
mov
xchg
in
fiaddl
repnz
out
add
ja
imul
and
mov
sub
sub
add
adc
add
fisubrl
and
jecxz
dec
test
jecxz
inc
hlt
push
mov
mov
stc
cmpsb
aam
mov
adc
roll
insb
fimuls
adc
mov
xchg
mov
and
subl
fadd
ljmp
push
pop
shrb
mov
push
je
mov
int
imul
cmp
in
addr16
inc
push
xlat
or
popa
xlat
loop
mov
loope
sbb
cmpb
mov
push
xor
and
jle
xchg
ds
addl
add
sbb
jae
jl
adc
add
jns
jle
or
pop
test
pushf
sbb
inc
xlat
or
sti
or
movsb
pop
rcrb
aam
gs
and
outsl
clc
fdivl
xchg
mov
cmp
aas
push
sub
test
scas
or
pushf
push
lods
int
vhsubpd
hlt
pop
add
scas
push
xchg
cmp
addb
pop
push
icebp
add
cltd
xchg
sbb
xor
test
rol
dec
inc
sub
sahf
out
xchg
cmp
je
pop
xor
mov
fiaddl
addl
add
push
ficompl
insb
xor
scas
xchg
dec
or
adc
scas
jecxz
fbstp
les
fcoml
clc
or
dec
cmpsl
mov
xchg
adc
push
lahf
push
aaa
pop
cmp
pop
push
adc
add
cmp
addl
pop
ret
or
pop
mov
jle
das
push
leave
test
pop
or
pop
push
xor
add
scas
adc
push
jb
jl
xor
xor
add
into
push
push
insb
mov
fwait
xor
adc
rorl
mov
cmpsb
xchg
mov
shll
fs
mov
mov
ljmp
cmp
push
pop
xchg
xchg
jecxz
icebp
cmpsl
mov
lock
cmp
xchg
sbb
bound
stc
ret
and
xchg
add
icebp
fisubs
inc
lock
xchg
mov
cmc
les
arpl
jbe
aad
cmp
cs
jns
scas
dec
mov
cld
lds
shrl
sbb
dec
adcl
pop
sub
clc
jo
push
fiadds
addr16
mov
xchg
mov
out
sub
jg
movsl
in
dec
mov
nop
dec
pop
ret
loop
or
and
push
add
pop
int3
pop
adc
gs
pusha
mov
and
inc
pop
in
adc
aas
push
das
adc
add
push
loop
ja
fidivl
cmp
dec
inc
adc
jb
and
jns
xchg
cmp
cmp
cmp
loope
test
xor
jo
insl
in
mov
pop
arpl
cmp
dec
mov
xor
jecxz
insb
mov
xchg
in
cmpps
inc
cli
adc
gs
mov
bound
push
xchg
or
test
test
and
imul
loopne
cmp
push
inc
popf
xor
test
add
mov
cwtl
mov
or
pop
jb
cmpsb
dec
loopne
mov
mov
pop
pop
testb
daa
int
mov
adc
adc
ja
ljmp
jae
in
sti
adc
cmp
out
ja
add
stos
enter
adcl
jle
lret
nop
movsb
cwtl
sbb
mov
data16
and
mov
ljmp
fcmovnu
cmp
stc
loop
sbb
pop
lahf
sub
push
das
adc
mov
xchg
sub
rclb
add
inc
pop
sahf
lods
jnp
xor
sbb
popa
dec
pop
imul
imul
jle
or
pop
xchg
jle
inc
inc
and
jns
ds
dec
das
mov
pop
sub
pop
loope
push
pop
cmpsb
into
inc
sub
mov
addr16
imul
mov
mov
aam
mov
aaa
jns
cwtl
cltd
arpl
mov
add
mov
xchg
or
movsl
inc
fdivl
inc
arpl
xchg
int3
push
xlat
ljmp
mov
or
enter
jge
dec
mov
outsl
inc
je
adc
stos
xchg
rcrl
sbb
fwait
ss
inc
mov
pushf
add
repnz
and
mov
pop
outsb
dec
fistpl
aad
enter
add
mov
cld
xchg
cwtl
pop
mov
lock
mov
jnp
jmp
arpl
inc
popf
dec
jmp
shll
adc
jle
imul
sahf
lds
push
mov
and
cmp
cmp
push
stc
inc
leave
ret
in
pop
fucom
in
pop
lods
pop
sub
jnp
mov
add
rorl
test
enter
or
xor
stos
and
cltd
xor
lret
rcrb
push
sahf
mov
shlb
pop
lods
dec
push
out
jns
cmpsl
mov
outsl
add
or
add
push
pop
mov
scas
popa
int
push
jae
loopne
jnp
daa
cs
jb
orb
push
sub
cmp
iret
ret
jno
fmuls
sub
xchg
jns
and
inc
adc
inc
inc
hlt
repnz
sbb
enter
inc
jecxz
lcall
cmpsl
in
jb
icebp
mov
jns
or
loop
rorb
pop
repz
pop
mov
sarl
arpl
push
xor
mov
push
sarb
dec
adc
push
lods
repz
pop
sbb
sbbw
adcl
addr16
cmp
jns
or
cmpsb
mov
icebp
mov
shrl
and
movsl
sbb
das
imul
pop
outsl
imul
sbb
jns
cmpsb
out
sbb
aad
stc
pop
jo
loopne
repnz
or
jbe
stos
popa
xor
mov
outsl
ss
inc
mov
pushf
jg
aam
xchg
outsl
xchg
add
sub
mov
fwait
loop
outsl
out
sbb
push
cmp
pusha
adc
pop
mul
cs
xchg
push
cmp
mov
and
aad
sti
adc
ret
lcall
push
scas
out
push
jne
jge
lahf
notl
inc
jg
aad
sub
xor
bound
cld
pusha
ret
sub
cmc
xor
dec
inc
lock
push
movsl
jmp
add
cs
or
mov
pop
push
or
mov
sbb
xor
cld
mov
xchg
out
fwait
je
inc
sarl
or
mov
std
outsl
cwtl
mov
jge
std
adc
mov
sbb
or
adc
outsl
dec
inc
dec
dec
in
aam
adc
xchg
jae
inc
cltd
test
outsb
insb
sti
dec
in
stos
push
ljmp
es
cltd
inc
fisttpl
mov
ljmp
aam
cld
mov
aad
xor
call
jp
repnz
call
adc
pop
cmp
sti
jecxz
push
mov
sarl
mov
dec
fcoml
push
outsb
loope
mov
cs
xchg
ja
cwtl
mov
xchg
cli
fistpll
test
inc
xor
fisubrl
mov
cld
push
ret
push
in
pop
cmp
cs
aas
shr
push
mov
xchg
aaa
cmpsb
mov
jg
cmp
push
and
movsb
pop
mov
scas
mov
cltd
and
mov
rsm
or
pop
mov
ss
into
fcoml
daa
mov
inc
scas
push
xchg
in
lock
inc
test
sbb
sbb
dec
jnp
out
lock
cmp
cmp
fmuls
or
and
add
rclb
lds
cltd
fidivrs
les
inc
xchg
cltd
jb
shlb
ljmp
inc
mov
mov
xor
jp
in
test
xchg
je
inc
adc
xchg
testl
mov
daa
lcall
or
xchg
or
cs
pop
push
jno
lahf
add
test
sbbb
pop
adc
or
rcrl
int
stos
or
pop
stos
xlat
xchg
shr
lret
in
lods
push
in
push
fyl2xp1
arpl
ja
mov
mov
xchg
mov
jecxz
mov
jb
pop
pop
dec
movsl
iret
jnp
dec
les
sub
sub
push
test
jb
pop
dec
cmpsl
xchg
jecxz
iret
xor
insb
data16
and
shl
add
inc
roll
or
push
jecxz
in
xor
and
js
and
pop
cmc
push
ret
mov
lods
sti
adc
cmp
leave
dec
mov
lret
mov
rcl
cmp
rcrb
gs
push
daa
or
jne
and
mov
leave
add
and
push
cmp
mov
mov
cmc
hlt
shlb
cmp
repnz
cmp
xchg
mov
mov
cld
or
adc
cmp
ss
push
sbb
sbbb
cmp
out
sbb
push
xor
lret
out
mov
sbb
adc
cmpsb
fwait
js
fldenv
mov
in
sub
lahf
push
jae
dec
repnz
push
loopne
cmp
push
fmuls
test
push
rcrl
shlb
cmp
repnz
testb
sti
aam
fwait
or
int
scas
and
cmpsl
jb
cwtl
aaa
sub
mov
inc
jl
test
mov
sub
popf
lods
ja
xor
addb
loope
mov
aad
lods
cld
jmp
ds
into
loop
adc
jle
faddl
mov
mov
xchg
das
lret
cwtl
add
fsubr
rcrb
push
xchg
sub
jmp
aad
xor
mov
sub
into
cltd
cmpb
mov
div
jnp
outsb
and
or
lahf
fs
mull
jg
cli
xchg
out
cmp
jle
mov
mov
dec
sahf
jmp
idivb
cmp
cmp
pop
ds
fistl
arpl
lret
sti
mov
leave
jle
and
jl
in
mov
mov
inc
lds
pusha
mov
cwtl
jmp
mov
pop
mov
nop
imul
test
and
adc
inc
mov
jmp
xchg
test
rorl
insb
xor
xchg
cmp
repnz
jg
popf
push
jns
xchg
or
outsb
mov
lock
fisubl
or
cmc
mov
xor
xchg
add
add
sbb
xchg
mov
leave
into
int3
mov
cmc
jg
mov
dec
xchg
xor
cwtl
xor
pop
fucomp
nop
icebp
popf
das
pop
in
or
out
les
jbe
pop
sti
cltd
sub
adc
xor
or
mov
inc
pop
cmc
push
jnp
xor
imul
mov
lret
adc
cmp
and
mov
add
adc
pop
adc
xor
mov
ljmp
insb
not
fs
jne
push
iret
cmp
insb
lock
dec
mov
adc
cltd
push
jg
data16
loopne
mov
push
mov
rclb
add
mov
les
fisubs
insb
imul
in
outsb
shll
lret
pop
pcmpeqd
popf
inc
pop
aas
sub
fldenv
push
ficoms
xchg
adc
mov
sarl
pop
lods
sub
jge
cmc
mov
pop
jle
push
or
cmp
out
push
roll
add
pop
and
scas
aam
icebp
xchg
pop
lds
cmp
add
adc
mov
mov
dec
test
rorb
xchg
sub
enter
xor
arpl
mov
xchg
cs
sub
sarl
addb
jnp
lcall
leave
adc
js
les
sub
xchg
mov
lcall
xchg
xchg
push
in
cltd
repz
das
es
mov
cld
outsb
sub
ds
pop
jmp
dec
mov
nop
dec
add
divb
push
jmp
stc
outsb
jo
loopne
xchg
add
cmp
mov
push
cmc
fs
fwait
pusha
add
jne
mov
rol
or
mov
loopne
push
imul
and
and
push
out
mov
shrl
jae
iret
out
iret
and
add
test
in
sub
mov
and
mov
jnp
and
and
mov
and
iret
cmp
call
insl
adc
hlt
hlt
lahf
out
cmpsb
hlt
push
out
lock
js
adc
dec
fcmovb
rcll
lcall
inc
xor
xor
mov
stos
aam
xor
movsb
sarl
inc
seta
adc
add
jge
sub
push
test
cltd
mov
lock
or
push
mov
cmp
std
xchg
movsl
lock
xor
xchg
out
mov
out
movsl
sub
xor
xorl
fstp
std
call
call
movsb
and
dec
push
stc
sub
jo
dec
dec
mov
xchg
or
ret
lds
rclb
cmc
and
adcl
lret
aas
out
jno
arpl
leave
xchg
pop
call
stos
adcl
add
jne
repz
leave
mov
adc
ds
out
shl
pop
jb
adc
adc
push
movsl
dec
fstps
mov
ret
lods
aaa
ljmp
push
jnp
rolb
sub
xchg
popl
cli
cmpsb
cld
add
and
fisttpll
mov
sbb
mov
adc
out
lret
js
xor
dec
gs
and
dec
push
lods
test
andb
sub
addl
fcompl
dec
popf
xor
sub
dec
arpl
mov
mov
aas
push
in
mov
jbe
cmpsl
push
add
cwtl
pusha
jmp
imul
jle
mov
in
ret
fs
or
cltd
sbb
jns
outsl
daa
divb
pop
out
dec
dec
dec
jecxz
jmp
xchg
ds
adc
ret
mov
imul
lock
int3
cmpsb
das
inc
mov
or
fnstenv
sub
inc
jecxz
lret
sub
push
xchg
enter
subl
lock
mov
xor
ja
nop
xchg
lcall
sbb
idivb
and
and
mov
leave
mov
sbb
xor
fildl
dec
mov
fsub
jle
pusha
mov
sbb
push
stc
xchg
and
xchg
mov
rorb
adc
xchg
pop
or
add
sbb
mov
in
dec
and
cmp
adc
cmp
aaa
xor
test
fisubrl
dec
push
cmp
repnz
sub
out
test
leave
pop
lea
loope
cmc
sub
xor
es
sbb
jl
in
lods
pop
cltd
daa
nop
in
ret
ja
pop
hlt
dec
or
mov
dec
cmp
fsubrl
rorl
mov
rol
push
ljmp
jno
cmp
cld
and
bound
in
mov
fldcw
mov
outsl
mov
jge
and
in
decl
and
shrb
scas
jne
mov
movsb
es
add
sub
xor
and
jle
ljmp
es
pop
mov
xchg
and
push
adc
pop
lock
fnstsw
loopne
js
lcall
cmp
sahf
xor
in
add
clc
std
data16
mov
inc
popf
sub
mov
jno
sub
adc
add
inc
lret
imul
mov
ljmp
or
sarl
icebp
or
dec
pop
mov
enter
addb
inc
sbb
mov
std
mov
pop
fs
sub
xchg
rorb
aas
pop
and
sti
xchg
repnz
sub
sbb
dec
mov
cli
mov
adc
sbb
inc
fisubrl
or
dec
fsubs
test
inc
rcrl
cltd
push
xor
sub
lret
push
cld
xchg
dec
or
fldt
ret
or
in
addr16
cltd
je
int
xchg
sub
push
popa
mov
adc
xchg
ret
bound
fdivs
fildl
std
test
xlat
push
repz
aam
inc
jle
jmp
mov
push
dec
push
xchg
lods
mov
or
lss
sbb
mov
in
cld
jmp
push
pop
ficompl
inc
popa
jmp
imulb
stos
pop
cmp
mulb
loop
pushf
idiv
or
cmpsl
or
std
clc
xor
cmp
pusha
cmpl
cwtl
xchg
fimuls
mov
ja
dec
sbb
lcall
pop
clc
testb
dec
arpl
sbb
push
xchg
cmp
lcall
js
mov
adc
cwtl
popa
adc
ds
mov
scas
stc
popf
mov
jnp
cmp
mov
int3
lock
repz
lods
xor
mov
or
mov
sbb
sbb
sbb
xor
push
aam
pop
inc
mov
dec
pop
lret
aas
stos
push
das
out
test
xchg
daa
jae
lret
imul
lds
xchg
dec
push
and
call
or
repz
test
dec
mov
repz
gs
cmp
in
fsubs
jle
mov
mov
xlat
pop
fbstp
pop
adc
int
je
dec
pop
inc
lods
jmp
lret
cli
jmp
sub
pop
shrl
and
mov
mov
stc
jnp
sbb
push
sahf
push
ficoms
pop
out
sbb
not
sub
jl
sbb
push
cmpb
in
mov
cmp
pop
ror
cmc
movsb
mov
xor
pop
sub
rorb
fists
or
subb
mov
out
pop
dec
inc
out
xor
addr16
test
mov
addr16
add
rorb
loop
adc
cmc
lods
imul
ret
sub
into
xchg
lahf
push
ja
cmp
loope
setno
sub
decl
inc
cmc
lea
andl
fsts
nop
jge
pushf
push
inc
pop
push
mov
jae
or
ss
jp
jl
mov
fisttps
mov
mov
pushf
inc
aaa
push
inc
repnz
mov
pop
js
push
push
xchg
stos
ds
sar
or
pop
lret
pop
jp
out
push
push
data16
jns
mov
orb
movsl
aas
xchg
mov
data16
shr
lds
mov
push
nop
ja
xchg
je
stos
mulb
lahf
icebp
cmp
movsl
mov
jp
jnp
std
mov
jne
push
test
mov
popf
int3
xchg
jge
in
sti
lret
imul
js
cmp
mulb
ds
xchg
out
fidivrs
icebp
scas
fs
das
addr16
cmp
jmp
rcr
push
push
mov
inc
mov
jbe
cmp
stos
lods
add
inc
jmp
gs
fiaddl
adc
or
push
add
mov
lahf
popf
das
js
lock
cmpsl
mov
cmpsl
inc
jl
dec
out
push
adc
in
aaa
call
sbb
jae
xlat
mov
dec
rep
lcall
testb
push
jg
and
push
mov
in
mov
mov
xor
and
ret
cmp
pmuludq
lcall
loop
inc
loope
mov
mov
popa
lods
cmp
adc
sbbb
inc
clc
les
mov
jae
and
dec
xor
lret
repnz
in
add
cwtl
repnz
push
cmpsl
xchg
and
xchg
xor
mov
dec
push
push
and
aaa
cmp
int
rcl
jb
cmp
in
jle
ljmp
das
xchg
pop
inc
pop
sbb
fwait
fs
rorl
lock
stos
xlat
iret
jecxz
test
sub
xchg
ja
aaa
das
mov
lcall
mov
fstpt
lods
mov
int3
test
sub
lods
mov
add
jp
sub
xlat
lods
ss
push
xor
lcall
lcall
das
add
pusha
xchg
sbb
cmp
jo
cmp
out
pusha
dec
je
mov
shlb
add
xchg
int3
das
test
fwait
sub
movsl
hlt
cmp
jae
or
lahf
and
ret
shll
lock
or
sahf
and
lret
mov
in
adc
jne
mov
xchg
sub
cmc
mov
sarl
jbe
mov
pop
inc
and
imul
xor
xchg
mov
jnp
and
mov
stos
mov
mov
jne
cmp
push
inc
movsb
or
xor
sbb
and
mov
cli
shrl
paddusb
in
pop
les
cli
xchg
int3
mov
xor
push
sub
movsb
sbb
cmpsl
cmpsl
in
pop
pop
cmp
jp
xchg
jno
inc
aas
inc
pop
adc
xlat
hlt
sti
outsl
cwtl
pop
cltd
mov
cmpsl
insb
jnp
mov
pop
mov
mov
out
jl
or
add
mov
push
xor
pop
xchg
je
cli
jecxz
stc
cmp
repnz
push
insb
sbbl
adc
fidivl
js
jnp
sbb
pusha
decb
jmp
hlt
es
dec
stos
xchg
dec
inc
and
xor
ss
ret
arpl
mov
ljmp
sub
aad
pusha
cmp
shlb
roll
add
jns
out
pop
dec
xlat
mov
aas
jns
xchg
add
leave
loopne
lods
test
int
cmp
sub
dec
mov
jno
push
xchg
add
adc
rolb
xchg
cmp
jbe
xor
jb
push
xchg
shl
cmp
ret
imulb
cmp
sahf
stc
sub
or
lock
xor
add
cmp
pop
push
pop
int
int3
pop
into
js
jo
dec
insl
jno
push
out
jmp
cld
xchg
inc
jnp
jge
aam
push
lods
imul
not
cmpsb
inc
popa
xchg
jnp
gs
cltd
divb
fdivs
pop
pop
xchg
xchg
mov
aaa
ret
scas
sbbl
sub
in
imulb
mov
ret
clc
mov
mov
sub
imul
jo
mov
sbb
jnp,pt
repz
icebp
mov
cmp
jge
xchg
insl
and
cmp
bound
in
or
gs
outsl
and
pop
xchg
daa
shrb
filds
jle
jle
stos
scas
nop
push
mov
jl
or
pop
xor
cs
mov
vphsubbw
test
loop
cli
faddl
jne
sub
pop
inc
jmp
cmp
ss
das
fnstcw
xchg
negb
in
leave
popa
lcall
insl
loop
and
sarb
dec
and
test
out
idivb
push
inc
repz
mov
pop
push
addr16
fimull
dec
add
aam
sbb
aaa
push
into
mov
mov
cli
cltd
xor
dec
es
outsb
gs
and
mov
test
mov
adc
addr16
ficoml
fbstp
fstps
lahf
cltd
inc
nop
daa
xor
hlt
mov
or
mov
xchg
mov
dec
daa
lahf
test
psubw
insb
in
and
ja
mov
call
outsl
sub
mov
enter
add
pushf
aas
lcall
jle
ret
xchg
sub
das
cwtl
aas
or
addr16
in
sbb
bound
lcall
jo
aas
mov
xsha1
cmpsb
psubsw
nop
lods
stos
inc
and
daa
mov
mov
shlb
addr16
pop
push
jns
lret
xchg
into
mov
or
pop
sbb
inc
in
scas
inc
cmp
mov
inc
push
jl
fstps
int3
shl
mov
push
lods
inc
andb
pop
iret
ds
dec
jns
mov
fildll
out
sub
dec
std
test
icebp
fimull
sub
popf
fwait
pusha
and
inc
dec
fbstp
add
outsb
and
xchg
loopne
hlt
cmp
ja
pop
mov
add
sbb
jne
cmp
fidivrs
sbb
loopne
mov
imulb
pop
mov
mov
aad
les
pop
cli
cmp
es
cwtl
fadd
xor
int3
mov
jge
sub
pop
jle
xchg
xor
mov
and
sbb
pop
cmp
pop
fisttpl
int
mov
mov
push
jno
lea
mov
mov
ljmp
fldenv
xchg
xchg
and
jne
in
jnp
sarl
lock
aam
cli
ret
stos
push
jne
movsl
xchg
dec
sbb
sbb
lods
mov
loopne
jg
fiadds
cmpsb
outsl
loope
gs
movsl
push
int3
sbb
and
mov
cmp
sub
dec
jge
je
aam
mov
cmc
xchg
insb
jnp
sahf
and
pop
and
and
das
imul
popa
pop
aaa
adc
xchg
and
jmp
push
sti
and
int
pop
das
sub
cs
addr16
pop
jg
or
xchg
mov
push
pop
fdivrl
mov
inc
gs
xchg
stos
xchg
push
sti
pop
pop
in
xlat
inc
pinsrw
mov
mov
fsubrs
cmp
sbb
sub
mov
fldcw
sbb
sbb
jg
inc
outsl
in
test
and
ds
call
stos
out
jmp
cmpsb
fidivl
xchg
test
testl
out
outsl
repz
test
jbe
xchg
mov
push
jp
jmp
xor
jmp
cs
sti
and
inc
sub
pop
out
in
clc
xchg
hlt
movsb
jo
pop
shl
mov
insb
sub
aad
mov
fimuls
mov
fildl
dec
leave
xchg
xor
inc
dec
mov
push
leave
pop
test
cmp
mov
dec
dec
loopne
into
inc
push
jg
xchg
scas
ds
push
sbb
icebp
jno,pn
popa
and
mov
andb
int
pop
inc
xor
xor
xchg
out
inc
mov
xchg
mov
addr16
cmp
dec
pop
jle
push
jl
sub
int3
test
stos
test
xlat
je
data16
dec
jns
adc
out
inc
in
xor
or
inc
mov
inc
dec
add
push
mov
cmpsb
add
pop
jmp
lods
movsb
pop
stos
pop
addr16
imul
and
cmpsb
mov
inc
xor
mov
jp
subb
xchg
js
jne
cli
fcomp
shr
pop
inc
dec
fbstp
add
add
pushf
mov
js
jo
psubsw
inc
lods
mov
jae
push
pop
mov
int
leave
ja
filds
rcl
out
pop
lret
addr16
dec
sub
push
outsb
in
xchg
std
push
add
shlb
cli
pop
mov
xorl
sub
in
sbb
out
sbb
out
dec
cmp
fwait
mov
mov
fdivr
push
inc
xor
filds
push
cmp
xor
aam
jle
cli
mov
sarb
popf
adc
mov
or
xor
jmp
imul
pop
loop
rcl
mov
inc
test
xor
add
inc
pop
pushf
aad
jge
test
add
add
jo
popf
push
loope
mov
push
jecxz
pop
ja
mov
outsl
jmp
mov
adc
jl
in
mov
xor
adc
dec
sbb
data16
cmp
std
inc
dec
sub
out
and
sub
dec
fwait
insb
mov
push
xchg
ret
jno
xor
sarl
xor
sub
inc
in
jg
dec
mov
call
scas
or
addr16
scas
daa
out
push
ljmp
xor
adc
sahf
fs
jne
cs
and
cld
push
outsl
push
cmp
push
jle
shll
or
push
outsb
sbb
cs
fbld
lock
sub
fwait
aas
jnp
orl
dec
inc
mov
and
push
or
cmpsl
mov
data16
rorb
in
repz
dec
shr
fwait
dec
pop
push
cmp
dec
mov
xor
push
imul
push
cmc
or
ret
mov
pusha
xor
fucomp
pop
mov
add
jns
mov
mov
aaa
mov
dec
in
gs
xchg
lcall
adc
xor
test
xchg
mov
popf
cmpsl
jle
xor
adc
xlat
jle
pop
or
shlb
cld
sub
ja
fidivrs
mov
imul
sub
sub
xchg
push
test
out
xchg
test
bound
sbb
in
cmp
out
push
insb
add
and
cmpsl
sbb
jmp
or
cmp
mov
and
push
or
cmp
test
test
les
push
daa
cli
or
mov
jbe
and
adc
lods
pop
insl
out
push
popf
cmpsl
xor
mov
xchg
pop
imul
xlat
and
mov
jg
sbb
push
dec
shll
mov
movsl
popf
push
mov
cmp
pop
imul
jecxz
sbb
push
icebp
mov
fdivrs
repz
aaa
mov
dec
test
es
mov
lret
mov
sbb
in
dec
repz
inc
lods
imul
jb
or
xchg
add
cmp
fistl
popf
and
das
xlat
mov
clc
mov
in
dec
jbe
jl
mov
stos
fstl
leave
mov
mov
mov
mov
shrl
xorl
or
in
push
imul
leave
data16
fdivl
sub
xchg
sub
outsb
flds
scas
fcmovnbe
hlt
into
fs
pop
mov
dec
cwtl
inc
cltd
inc
outsl
lea
popa
inc
lcall
sbb
vpcmpeqw
jmp
or
sub
enter
xor
pop
jbe
lret
adc
lcall
iret
fadds
cmpsb
aaa
enter
hlt
cmp
shrb
mov
pop
into
fucomp
aas
mov
add
je
add
push
imul
sub
mov
push
pop
pop
int
sti
sti
xchg
in
push
mov
fcos
hlt
dec
mov
and
xchg
jo
js
lea
daa
mov
xor
and
gs
sahf
push
jno
sbb
scas
cld
inc
jmp
mov
add
xor
xor
sbb
test
or
in
jae
xchg
fcmove
inc
adc
call
out
ljmp
mov
dec
pop
or
cltd
mov
xlat
mov
mov
lods
std
sub
arpl
dec
mov
out
bound
xor
test
or
enter
iret
mov
dec
out
mov
and
mov
inc
jg
xchg
xchg
mov
xor
jp
cld
cmpsb
push
test
enter
in
push
xor
mov
rol
loope
push
cmp
pop
push
pop
out
aam
sbb
xor
cmp
mov
ret
out
scas
and
and
fldcw
inc
push
aad
jo
ret
test
lahf
mov
pop
clc
lock
push
loope
sub
aad
inc
in
shl
sti
or
sub
jno
cs
cmpb
xlat
cli
adc
test
inc
sbbb
jge
pushf
jbe
loopne
movsl
jnp
and
cmpsb
jne
std
das
inc
das
cmp
add
inc
or
jae
mov
dec
outsl
ljmp
push
mov
int
popf
mov
repz
mov
test
outsl
dec
pop
or
mov
out
lods
jno
mov
pushf
cs
jmp
repnz
out
sbb
xchg
mov
jge
cmpsb
and
lods
lahf
dec
outsl
mov
out
jmp
sti
imul
idivl
cmp
popf
mov
sbbb
mov
std
pushf
or
push
mov
mov
insl
or
jns
push
popa
lods
outsb
std
adc
shlb
popf
sub
inc
fimuls
movsb
inc
out
lods
gs
xchg
insl
iret
add
cli
jno
lret
jle
adc
movsl
jecxz
pop
xlat
jecxz
sub
cmp
jp
xor
jno
js
jns
shlb
test
sahf
in
ss
add
in
adc
adc
cmp
inc
addr16
xchg
fstpl
push
pusha
adc
test
lret
cmpsl
lret
pop
cli
sbb
dec
lret
cld
push
hlt
lahf
cli
or
idivl
cmpsl
sbb
adc
jno
pushf
xor
cwtl
inc
out
dec
xor
mov
shrl
rcl
data16
and
dec
or
mov
adcb
add
inc
in
and
push
test
jl
and
mov
push
cli
mov
cmpsb
cmpsb
mov
lods
jmp
out
int3
popf
daa
jmp
cld
stos
add
xor
imull
cs
push
leave
lret
stc
fidivs
imul
sbb
shrl
push
mov
cmp
pop
ss
imul
shll
imul
inc
test
cmp
sbb
pop
dec
mov
jge
sub
test
test
iret
push
lods
add
xor
and
push
sbb
mov
andl
lods
push
jmp
mov
inc
lds
aad
and
cwtl
mov
jmp
push
mov
mov
mov
mov
movsl
sub
dec
insl
addr16
sahf
roll
pop
or
in
sbb
aam
jb
mov
mov
inc
mov
add
adc
and
xchg
sub
loopne
jo
das
aad
mov
pushl
adc
rcll
xor
push
jge
lds
sbb
mov
test
inc
rcr
test
pusha
jnp
addr16
fistps
or
jl
sbb
mov
cwtl
pop
scas
mov
jecxz
xorl
and
es
add
mov
movsl
stos
jbe
repnz
ljmp
sub
jg
jae
sti
push
jmp
push
ljmp
jno
insl
std
and
stos
adc
mov
scas
inc
movsl
mov
rorb
call
mov
xor
sbb
ficompl
xchg
outsb
sbb
xchg
mov
mov
mov
clc
jp
imul
mov
xchg
push
popa
adc
push
lods
cmc
dec
push
daa
pop
test
rep
out
inc
dec
in
rdmsr
lods
pop
push
test
jb
imull
test
jb
jo
adc
ds
aaa
into
loop
test
inc
add
arpl
arpl
iret
iret
pop
inc
fs
lock
fxch
cmpsl
shl
lret
lret
mov
or
fldl
sbb
mov
cmpsb
push
jne
xor
mov
in
fdivrs
loop
popf
xchg
rcll
xchg
pop
out
js
and
cmpsb
popf
lret
sub
shll
addr16
rorb
cli
jae
add
xchg
jmp
imul
shll
divb
mov
xor
rclb
loope
or
add
or
xlat
fwait
imul
mov
xchg
push
dec
sbb
jg
cld
dec
mov
dec
mov
scas
pop
lcall
pop
aam
mov
push
mov
popa
lods
lret
add
bound
cmp
sti
xchg
in
sbb
out
jns
xchg
lods
hlt
test
cmc
sbb
repz
popa
sub
stc
cmpsb
jnp
cmpsl
mov
stos
adc
lods
push
inc
rcr
stc
and
mov
shrl
lret
addr16
fwait
xchg
xor
jnp
xlat
fs
cmc
fs
pop
aam
lahf
push
cmc
mov
sub
sub
dec
jmp
into
dec
scas
ret
les
sub
inc
mov
dec
inc
push
xchg
fs
add
mov
mov
cltd
pop
movsb
lahf
jg
and
jb
movsl
dec
push
mov
jg
xchg
sub
je
cwtl
mov
out
leave
mov
arpl
push
pop
test
sub
lret
pop
jae
xor
in
cmp
jecxz
mov
inc
std
xor
aad
sahf
jns
in
mov
mov
dec
call
or
cmpsl
in
sti
dec
adc
cmpb
out
pusha
lds
sahf
test
push
in
out
lahf
daa
hlt
dec
out
pop
sahf
shll
insb
testb
es
inc
loope
test
lods
xchg
xor
add
mov
andb
mov
mov
sbb
fnsave
pop
cmp
sahf
sub
insb
outsl
mov
shl
stc
xchg
cs
ds
insb
imul
pop
xlat
push
popf
mov
cmp
jno
xchg
outsl
cmp
pop
pop
jnp
mov
add
jge
clc
pop
xchg
pop
popa
mov
fst
pop
movsb
dec
mov
pop
jnp
jl
mov
sub
les
lock
pop
das
cmp
ret
popl
dec
dec
mul
fucomp
or
scas
stc
ds
pop
lahf
sbbb
scas
sbb
ds
ljmp
aaa
cmp
push
in
inc
popa
test
mov
adc
stos
gs
iret
data16
sahf
mov
add
shlb
bound
push
sbb
decb
xabort
lret
test
pushf
cwtl
repnz
xchg
pusha
mov
fnstcw
mov
jae
jmp
pop
clc
andb
xor
add
push
jmp
jmp
mov
mov
pop
mov
mov
xchg
mov
fucomp
sub
test
repz
int
imul
cmp
add
ds
pushf
arpl
add
pop
add
fistpll
pop
hlt
fs
push
int3
push
daa
stc
adc
dec
es
outsb
ljmp
repz
cld
hlt
cmp
daa
stos
jbe
addb
mov
test
rclb
xchg
out
push
test
insl
inc
and
jne
into
mov
je
shl
xchg
scas
adc
push
xorb
xchg
mov
xor
imul
add
fsubrs
in
cmp
jmp
xchg
pop
add
sbb
mov
push
out
test
repz
cltd
and
or
pop
inc
adc
mov
imul
pop
jle
mov
add
into
xor
cmpsl
add
fsubrl
pop
icebp
mov
aaa
test
movsb
mov
insb
adc
fidivrl
and
orb
div
loopne
ror
xchg
loopne
push
pushf
and
cmpsb
std
adc
jns
imul
pop
xlat
inc
pop
ret
sub
out
cmp
outsb
test
mov
pop
push
into
mov
pop
push
sub
out
lds
push
xor
js
test
xchg
sub
xchg
xor
lods
fldt
mov
jmp
adc
in
test
cmp
dec
insl
lock
test
outsl
pusha
xor
movsl
jecxz
mov
add
aam
addr16
adc
movsl
pushf
lret
sti
std
ds
shl
pop
push
dec
loopne
pop
inc
pushf
push
lock
int3
and
mov
test
in
xor
pop
addr16
mov
bound
adc
testl
cmp
mov
rcrb
cltd
insb
mov
fmulp
sbb
jb
js
pop
sbb
xchg
out
cs
in
xor
mov
mov
sbb
xchg
jl
or
dec
es
sub
mov
fwait
jge
out
push
sahf
and
mov
sub
mov
jecxz
ret
sub
and
or
scas
jmp
xchg
sbb
or
push
push
dec
jmp
nop
xchg
dec
lahf
mov
dec
dec
jns
es
jle
jnp
pop
sub
dec
sub
cld
aad
or
pusha
ljmp
mov
xchg
or
lahf
push
pusha
sub
divb
pop
sub
mov
sbb
add
sbb
in
xchg
fmuls
nop
push
es
lahf
addl
sahf
ljmp
mov
xor
pop
inc
sub
sbb
add
call
cld
inc
cltd
push
insl
mov
xchg
fs
push
cmp
sbb
loop
mov
les
jne
push
xchg
push
into
fdivl
pop
mov
sub
pop
scas
inc
mov
sti
jbe
es
mov
cmpsl
and
scas
test
inc
nop
shrb
mov
dec
pop
xlat
mov
stos
rclb
sbb
push
sbbl
xor
sbb
lock
xor
push
inc
sbb
pop
dec
fidivl
insl
in
jp
rcrl
jge
jg
decb
jb
sti
push
push
adc
test
fidivs
daa
dec
pop
lock
stc
aad
fidivl
out
add
aam
subl
cs
adc
les
daa
push
adc
and
sbb
leave
lret
mov
addr16
data16
cmp
scas
mov
iret
cmp
ljmp
jbe
in
mov
xchg
sahf
pusha
mov
dec
sbb
xlat
or
test
jp
cltd
into
lret
push
inc
int3
arpl
mov
mov
fimuls
mov
in
lahf
push
mov
imul
or
push
inc
jg
pop
lahf
cld
stos
add
sti
mov
dec
gs
decl
mov
sub
or
mov
mov
sub
push
mov
sahf
test
push
pop
jg
shll
testl
aaa
add
mov
fld
aad
dec
push
and
daa
mov
or
mov
pop
cmp
imul
dec
pop
sbb
sahf
jecxz
mov
icebp
xor
call
xor
sub
cmp
xchg
inc
xchg
add
nop
in
stos
cmp
pop
jnp
fcompl
testb
adc
aad
push
xchg
cmpsb
es
mov
enter
xor
lcall
mov
inc
into
inc
out
jl
and
lret
cmpsl
out
gs
testl
add
shrb
xor
pop
push
mov
dec
or
jae
jecxz
dec
out
ret
aam
into
vorps
sub
aam
jbe
ret
sbb
push
xor
insl
mov
fldt
sbb
mov
jnp
in
adc
dec
add
mov
test
pop
and
scas
mov
into
std
test
outsl
sub
ss
out
pop
mov
pop
add
lock
sbb
or
gs
mov
ja
inc
pop
jno
icebp
dec
cmp
fidivs
pop
shrl
cmp
les
jo
fisubs
in
movsb
cmp
dec
push
cmp
outsl
stos
adc
or
test
ds
cmp
mov
cli
lds
gs
movsl
mov
jns
aaa
adc
imul
imul
lods
pop
xchg
pop
rcll
into
push
sub
repz
jmp
ds
pop
or
fwait
out
push
movsl
not
jp
push
xor
mov
popf
shl
aam
enter
jge
inc
dec
arpl
out
jno
adc
jle
pop
pop
aad
dec
outsb
insl
sub
push
mov
mov
in
add
mov
iret
call
and
sub
add
lret
sub
ja
out
add
bound
cmpsb
mov
ret
outsb
add
push
mov
mov
sub
aam
mov
push
not
les
xchg
push
fcomps
jns
aas
dec
jns
test
aad
mov
sbb
dec
ficompl
ja
dec
das
add
xchg
push
push
add
push
or
lcall
push
jg
imul
mov
and
add
dec
pop
in
add
stos
fdivrs
jle
sbb
add
jmp
mov
lret
aaa
adc
mov
inc
or
dec
mov
into
sarl
sub
adc
mov
xchg
jp
les
lcall
add
pop
movsb
rcrb
adc
mov
push
ret
and
inc
fiaddl
cmc
adc
add
movsl
xor
test
movsl
bound
jge
cwtl
xorb
vpmuludq
icebp
mov
mov
dec
jbe
aas
enterw
ret
sbb
adc
lods
repnz
dec
jle
insb
push
add
xlat
jmp
sbb
ds
adc
rorl
aas
add
xchg
aas
stos
inc
sub
adc
cwtl
xchg
es
lock
jo
adcb
test
cmp
and
dec
fwait
pop
or
jp
inc
mov
add
cmpsb
adc
and
cwtl
mov
adc
sbb
sub
sbb
inc
pop
xor
dec
inc
sub
pop
inc
sub
xchg
in
push
fwait
mov
mov
pop
xor
xchg
mov
leave
sub
pop
dec
mov
in
mov
mov
mov
cmc
and
pop
clc
jg
incl
adc
repnz
jnp
mov
mov
rcrl
add
push
mov
and
pop
ljmp
dec
cmp
xchg
sub
xchg
call
or
xor
and
xchg
roll
out
repnz
and
or
shr
sub
cmovge
jle
jns
cmpsb
mov
add
dec
xor
imul
mov
pop
call
das
xor
out
mov
pusha
mov
mov
cmc
adc
mov
mov
test
fcmovu
stc
or
inc
fdivrs
pop
push
push
fimuls
je
imul
push
jmp
pop
mov
movsl
in
mov
jle
pop
pop
sub
arpl
xor
dec
mov
mov
fildl
push
mov
das
or
mov
jmp
inc
pop
test
mov
fimuls
sbb
out
cli
lock
dec
fbstp
loope
mov
mov
add
test
mov
jns
stc
shlb
inc
gs
fiadds
scas
cmp
cwtl
fldl
ret
insl
es
je
xor
cmpsl
adcl
fidivrs
inc
jg
je
mov
sbb
mov
sbb
in
jp
shlb
cmpsb
or
gs
cmp
pop
aaa
lock
cmp
cmpsb
mov
xchg
outsb
adc
mov
gs
test
das
sub
cld
inc
lods
mov
pop
je
and
and
xor
or
sbb
push
xchg
push
xchg
sbb
pop
pop
in
or
cmp
in
nop
fs
jae
xchg
orps
xlat
ja
mov
cltd
xchg
push
cmpsl
jp
in
and
mov
or
mov
and
adc
add
jg
push
and
or
fsubrs
push
xchg
mov
xor
xor
jmp
xchg
inc
push
push
cld
cmp
and
clc
popf
push
sbb
dec
or
jmp
lret
lret
mov
inc
mov
push
arpl
xor
loope
cmc
mov
push
insb
pusha
pop
mov
out
out
inc
lds
xor
mov
loope
nop
xor
fistpll
stc
adc
lcall
enter
pop
icebp
dec
loop
jo
leave
jo
push
xchg
cmpsl
mov
test
lret
fsubrp
jl
in
out
inc
cmc
popf
push
jecxz
lods
adc
iret
jecxz
scas
sbb
cmp
insl
pop
xchg
mov
negl
fs
test
sbb
cmp
stc
outsl
mov
inc
les
cmp
add
mov
pushf
sbb
lret
inc
or
daa
imul
push
jae
jmp
loopne
in
das
gs
jo
dec
mov
sbb
leave
dec
repz
pop
push
jp
nop
mov
jg
cmc
rcll
pop
push
lods
mov
sbb
mov
fldenv
sbb
jbe
test
sbb
in
inc
sbb
pop
out
lock
xchg
jo
dec
pop
lahf
das
xchg
cmp
popa
dec
jns
inc
aaa
xchg
xor
sbbl
stos
cmp
push
sub
int
jne
gs
push
jmp
and
jnp
push
add
pop
sub
repnz
xchg
mov
adc
cmpsl
pop
rcl
sub
jo
in
xchg
mov
add
in
imul
or
mov
je
imul
in
jbe
sbb
mov
and
mov
xchg
icebp
rcrb
mov
push
icebp
adc
or
aas
xchg
insl
inc
cmp
fisubrl
cmc
adc
push
stos
loopne
xchg
push
mov
mov
adc
mov
out
daa
cmp
je
ljmp
jge
cmc
popf
adc
iret
push
lret
bound
int
data16
dec
and
push
test
popw
aas
test
lds
outsb
add
mov
jle
mov
mov
push
icebp
roll
xchg
jae
subl
ret
and
mov
xchg
and
stos
orl
or
scas
mov
xchg
div
out
adc
rcrl
fnstenv
mov
fisubl
push
dec
fdivrl
cmp
aam
mov
pop
test
mov
sbb
in
xchg
cmp
cmc
shll
pop
push
imul
mov
aaa
mov
les
cli
adc
mov
sahf
mov
hlt
mov
push
pop
fsubr
ds
sbb
jnp
insl
arpl
cmp
xchg
lods
jns
jge
and
mov
jg
adc
sub
ljmp
pop
inc
mov
adc
mov
push
loopne
cmp
xlat
cmp
addr16
push
in
sub
out
add
push
loopne
cmp
cwtl
jp
jp
cwtl
stos
sub
out
sbb
pop
fimull
cmpsb
lret
and
pusha
xor
dec
jecxz
cli
mov
aad
int3
pop
mov
adc
dec
xrelease
stos
cwtl
cmpsl
and
mov
xchg
sub
and
mov
push
movsb
or
xor
andl
lock
dec
ja
dec
je
stos
xchg
je
or
inc
sbb
jns
pop
mov
int
out
sbb
in
dec
jbe
sbb
add
sub
bound
xor
inc
adc
fstpt
gs
and
jns
inc
sub
push
out
inc
push
sub
rcl
and
loope
pop
fadd
cmp
incl
int3
fcomps
int3
scas
xchg
jne
in
cld
scas
sbb
add
jo
mov
cli
mov
fbld
xlat
inc
or
imul
dec
xchg
inc
push
or
lds
mov
test
dec
mov
jl
das
pop
lods
mov
test
imul
mov
add
pop
rcl
call
imul
mov
push
aaa
lds
loopne
scas
scas
roll
mov
fs
dec
aam
jge
test
into
scas
inc
push
adcl
scas
sbb
and
stos
pop
push
cld
mulb
lcall
fldcw
fisubrs
rcr
ret
sub
jae
pop
int
cs
add
and
pop
mov
andb
push
lcall
cwtl
data16
push
mov
lret
push
in
scas
sub
fcompl
in
fidivl
push
sbb
testb
add
outsl
dec
jle
jg
adc
popa
jb
cltd
push
jo
insb
xchg
xchg
fs
dec
rcrl
xchg
and
out
popa
aam
or
aaa
xor
push
xor
mov
sbbb
pushf
in
insb
dec
test
out
aam
loopne
movsb
jl
sub
cmpb
sub
dec
out
out
loopne
arpl
push
xchg
mov
in
and
dec
sub
jecxz
jmp
test
sbb
mov
push
imul
jns
push
jmp
test
fadds
idivb
idivl
xchg
jle
inc
push
jmp
repz
stos
cltd
xchg
lret
lret
inc
popf
int3
cmpsb
sbb
ds
push
sub
loop
adc
push
js
lods
inc
movsl
icebp
inc
jb
cs
or
or
test
loope
adc
pop
xchg
jl
aas
add
leave
sahf
sbbl
ljmp
fwait
jo
xchg
test
int
push
insl
lods
push
dec
and
mov
cs
jle
testb
in
hlt
inc
rol
ret
lret
int3
pop
push
lods
cmc
inc
pop
ss
xor
into
sti
iret
ss
outsl
jnp
mov
rclb
add
xor
add
in
and
mov
stos
adc
in
jle
ss
inc
test
cmp
stos
xchg
pop
loope
and
jp
out
mov
movsl
dec
fiaddl
loope
or
sbb
mov
dec
out
js
aad
dec
subl
lock
pop
or
xor
daa
in
pop
sahf
inc
adc
jb
scas
inc
lret
stc
or
jne
mov
incl
das
xchg
sbb
cbtw
daa
dec
jecxz
insb
adc
xchg
push
fisttpll
jno
stos
pop
aad
int
test
dec
xor
push
loop
rclb
loop
jl
inc
test
mov
and
fbld
incb
lea
lock
xchg
test
int
and
movsl
xlat
repz
mov
sub
outsl
decb
sbb
nop
adc
int
pop
pop
cltd
sub
sub
xor
pop
xchg
sub
ss
mov
cli
xchg
into
dec
ret
dec
mov
pop
cli
adc
pop
ja
push
sub
roll
leave
jo
mov
adcb
mov
dec
mov
mov
push
popa
inc
or
stc
mov
dec
data16
dec
xchg
lea
add
push
pop
into
into
or
mov
pusha
push
mov
and
pop
int
aaa
fimull
and
inc
adc
mov
jns
mov
push
and
out
pop
loope
lods
gs
icebp
mov
xchg
in
pushf
mov
ds
stos
in
test
fldl
jbe
push
push
loop
and
andb
xchg
add
jecxz
add
iret
data16
mov
incb
sbb
lret
dec
or
jmp
cmp
fadds
cmpsl
xor
adc
or
mov
scas
pop
loope
or
jl
mov
jne
inc
andb
add
sub
xchg
jbe
loope
inc
pop
repnz
or
jne
ss
push
jb
popf
jns
rol
je
sbb
movsb
fdivp
fimuls
push
loopne
mov
cmp
sbb
sbb
pusha
lods
push
aas
fisubs
into
inc
ljmp
fwait
jl
or
mov
pop
ret
mov
pushf
fisubrl
out
pop
mov
data16
pop
out
sti
aas
xchg
pop
mov
mov
lahf
adc
inc
shlb
sarb
jbe
icebp
sbb
clc
jno
sub
sub
cmc
or
xor
inc
mov
mov
jae
adc
xchg
mov
xchg
mov
popf
mov
push
mov
das
imul
sbb
insb
scas
inc
mov
std
dec
insb
test
cltd
sbb
mov
fs
fidivl
adc
or
fildl
cmp
add
lret
in
cmpb
int
fidivrl
or
out
fisubl
js
fwait
insl
test
mov
popa
and
mov
ljmp
push
mov
and
sub
xchg
movsb
stos
out
aas
sub
in
cwtl
push
test
lcall
inc
jle
repnz
lds
adc
popa
cli
dec
inc
fnsave
jmp
inc
hlt
mov
adc
icebp
or
sti
inc
ffree
mov
jmp
imul
test
dec
cmc
rcrl
sbb
sbb
mov
dec
aas
sbb
lcall
addr16
mov
pop
insl
push
sbb
and
ss
jl
inc
sar
mov
ja
cltd
sub
push
clc
and
shrl
out
andb
and
scas
rcrl
or
dec
mov
push
out
lahf
dec
and
cmp
sub
in
lahf
cmp
sub
das
xchg
js
movsl
daa
in
sbb
rorb
out
stc
mov
insl
nop
cwtl
jmp
adc
leave
fidivl
mov
clc
or
pushf
adc
add
push
gs
and
fisubrl
sahf
pop
ja
or
pushf
cli
cld
adc
add
sub
xor
or
jo
dec
pop
leave
xchg
sbb
stos
mov
aam
mov
lea
dec
rorl
jns
repnz
xchg
sbb
lods
inc
ss
push
inc
xchg
pop
pcmpgtd
cld
in
dec
les
mov
sti
inc
insb
rcr
cltd
mov
lcall
sub
sbb
imul
outsb
add
jmp
mov
jl
pop
mov
popf
enter
push
fdivrl
lock
xchg
xor
cwtl
push
movsl
leave
sarb
out
int
sub
pop
in
push
xor
xor
out
ds
jmp
int
mov
mov
mov
xchg
insl
and
xchg
insb
sub
pop
push
mov
icebp
pop
int
jg
add
shrb
stc
inc
cmpsl
cmp
aad
or
xor
pop
dec
ljmp
mov
in
or
xchg
in
ds
dec
cmp
dec
call
lock
cmpsl
pop
mov
add
stc
je
xorb
popf
rclb
mov
and
icebp
loopne
int
sti
sub
movsl
in
and
js
add
mov
pusha
insb
jae
hlt
mov
filds
bound
out
push
xor
outsl
sahf
jb
and
xor
jns
std
subb
xchg
inc
adc
xchg
xchg
pop
jo
enter
dec
ret
dec
jecxz
xor
inc
xor
mov
in
push
pop
in
dec
je
sti
cmp
or
imul
out
cmp
push
lods
dec
into
in
mov
data16
repz
mov
js
bound
push
add
imul
push
mov
push
aaa
jae
push
xor
cwtl
cld
leave
sub
in
pop
mov
into
mov
lock
push
push
test
jno
call
fdivl
mov
stos
iret
int
mov
arpl
fisubs
sbb
and
mov
mov
out
addb
mov
cli
repz
or
xor
test
outsl
into
faddl
int3
dec
inc
in
repnz
loop
inc
sahf
into
lea
cmpsl
fisttpll
inc
fstl
push
mov
ja
sub
int3
xchg
cmp
and
pushf
repz
xchg
das
pop
mov
jmp
sub
xchg
dec
pop
lcall
jg
xor
sub
ret
mov
pop
sti
push
pop
jbe
mov
pop
jae
adc
lds
cwtl
es
aaa
mov
jl
lea
and
outsb
push
andb
mov
outsl
inc
jno
inc
mov
push
mov
xchg
loope
inc
fmul
lcall
and
xchg
pop
inc
incb
in
pop
sub
inc
pushf
push
and
jne
xlat
sbb
outsl
inc
pop
aad
dec
lock
or
ficoml
movd
mov
sbb
fwait
cwtl
addr16
loopne
fwait
push
decb
mov
sbb
push
and
dec
sub
jp
inc
mov
jae
xlat
sbb
xchg
iret
outsb
mov
push
sbb
push
add
pop
xchg
xchg
pop
icebp
adc
xchg
sti
add
js
cmp
cmp
cld
xor
sub
mov
push
jns
push
gs
xchg
jo
xchg
popa
pop
cmc
xchg
mov
mulb
movsl
lds
nop
stos
inc
or
adc
nop
cmp
js
mov
fstpt
xchg
xchg
adc
pop
adcb
adc
push
jb
jnp
xor
int
dec
xchg
sub
clc
stos
into
mov
rcll
inc
cmpsb
cmp
fwait
sbb
ljmp
cli
aaa
sbb
push
mov
inc
jmp
inc
xor
xchg
in
lret
or
fdivrl
cli
push
ds
es
push
dec
loop
jl
andb
imul
clc
pop
shl
push
sbb
cmp
push
inc
stos
adc
clc
adc
pop
mov
das
add
xor
pop
jne
stc
stos
inc
mov
pop
or
lea
in
pop
xor
bound
inc
jb
add
and
mov
and
xor
orb
push
or
shlw
jl
jmp
inc
es
je
popa
adc
sub
dec
mov
push
hlt
icebp
xchg
lret
bound
fnsave
lret
notl
sub
push
fnstenv
mov
ret
data16
jbe
jae
add
cmp
dec
push
fldcw
or
sbb
sti
cmpsl
sbb
loop
lea
add
xchg
jno
pop
movsl
leave
std
mov
loopne
andl
or
inc
fidivs
rol
mov
add
rcrb
loopne
xchg
sti
loope
adc
cmp
add
icebp
xor
pushf
add
dec
sahf
cli
mov
fucomi
into
ficompl
std
outsl
ja
sbb
mov
test
sbb
inc
or
inc
mov
test
jo
push
jo
test
sub
fisubrs
push
out
daa
or
ja
inc
jne
sti
sar
push
add
mov
or
jge
bnd
stos
inc
sbb
push
jae
pusha
testl
push
and
pop
push
mov
sub
push
mov
fisubs
outsb
inc
scas
cmp
sti
mov
dec
xchg
lods
adc
jae
mov
dec
loop
subb
js
pusha
mov
sbb
sbb
cmp
js
addr16
loopne
jnp
or
test
mov
jne
in
mov
mov
inc
and
ficompl
adc
dec
sti
dec
aad
out
loopne
push
fidivrl
dec
hlt
cmp
mov
mov
and
dec
gs
ret
cmp
inc
dec
add
pop
xor
adc
cld
lcall
mov
push
add
and
xchg
out
std
dec
pop
loopne
mov
xchg
sbb
insb
jle
cmpsb
imul
jecxz
pusha
cmp
add
push
dec
mov
ds
ss
pop
loop
loope
push
sub
loopne
mov
mov
ja
cli
insl
lcall
in
pop
mov
xchg
stos
test
pop
sahf
inc
inc
xor
dec
xor
outsb
es
test
stc
cmpsb
inc
popa
adc
sbb
pushf
pop
cmp
mov
pushf
lods
sarl
ret
les
repnz
sbb
lcall
cmp
js
jmp
pop
fnsave
jmp
mov
stos
cld
lcall
mov
cmp
int
movsb
shrl
jae
leave
push
dec
cwtd
pop
idivb
jbe
xchg
adc
mov
lahf
cmp
add
mov
inc
push
loopne
cmp
jbe
fadds
daa
cmpsb
cmp
idivb
pop
stos
pop
sbbl
fisubs
inc
mov
rol
icebp
pop
sarl
jecxz
in
lret
je
pop
cmpsb
jmp
push
push
insl
data16
sahf
cmp
imul
pushf
test
stc
sbb
or
mov
shll
push
test
aas
out
rcll
mov
sti
loope
mov
cmp
aaa
mov
ljmp
jl
push
outsl
jns
mov
jmp
fs
sti
adc
lods
lcall
into
mulb
xor
push
in
loop
jbe
fcoml
or
ja
dec
mov
inc
fidivl
mov
stc
js
leave
jno
sbb
andl
cs
js
test
cmp
loope
and
lods
mov
jge
lret
and
loopne
inc
xor
jno
leave
adc
adc
jp
pop
in
movsb
cmp
in
xor
iret
xchg
xor
dec
test
inc
adc
lods
mov
shll
je
jmp
outsl
int3
fisubs
movsl
and
pop
imul
xor
push
insl
push
loopne
les
mov
loopne
sbb
adc
inc
addr16
pop
out
scas
sbb
movsl
lea
mov
adc
lret
pop
pop
into
shll
push
jne
add
stc
jo
in
sub
push
xchg
cwtl
test
xor
daa
stc
pusha
xchg
inc
xchg
scas
pop
je
add
dec
cmp
cmp
mov
cs
cli
inc
fisttpl
subl
mov
insb
jno
sbb
shl
inc
in
or
and
mov
loope
fildll
pop
push
or
sub
lds
xchg
test
js
push
push
inc
mov
mov
psubusw
or
insl
add
int3
and
push
pop
mov
faddl
icebp
mov
pop
aad
pop
stos
idivb
cmp
push
xor
sub
inc
mov
and
outsb
lret
pusha
push
iret
pop
push
sti
cmp
dec
shrb
ret
aad
out
in
ret
sub
jne
push
inc
or
js
pop
test
fcmovu
dec
insb
mov
iret
xor
scas
inc
lret
je
outsl
ljmp
cmpsb
inc
aam
and
bnd
and
push
or
fistpll
test
sub
cwtl
jnp
cmc
adc
movsb
bound
xchg
kortestw
movsl
inc
sbb
fs
xchg
push
add
push
push
lcall
mov
add
iret
mov
icebp
imul
pop
inc
bnd
movsb
jo
insl
sub
aas
pop
dec
imul
pop
out
lock
sub
jae
loopne
push
stos
inc
sub
xchg
scas
repnz
jnp
cmp
dec
ret
fldcw
mov
jl
cmp
sbb
dec
ljmp
stos
sub
sbb
in
repz
in
imul
in
repnz
jae
mov
sahf
lea
inc
cmpsb
mov
fadd
mov
xor
aam
sub
arpl
sbb
mov
add
fcmovbe
inc
pop
push
hlt
inc
cmc
call
addl
sbb
into
lds
inc
mov
aaa
ret
dec
pop
push
xor
xor
in
pop
cmp
dec
sbb
lods
and
sub
aam
mov
xchg
pop
sbb
add
mov
cmp
push
push
ljmp
mov
scas
mov
call
fidivrs
push
fdivrl
jp
sub
add
movb
cs
dec
mov
aas
loope
imul
add
add
stc
mov
arpl
jae
jmp
and
pop
or
rol
rcrb
rorl
cmpsl
sar
fpatan
adc
je
outsb
add
popa
inc
jne
js
leave
mov
mov
int
outsb
inc
rcrl
loop
push
icebp
and
rcrl
dec
popf
or
ss
fs
dec
push
in
pop
add
pushf
inc
je
inc
insb
sti
stos
shr
lods
ljmp
call
inc
mov
push
into
push
test
das
pop
sbb
sbb
and
sti
pop
repz
dec
aam
repnz
sbb
enter
xchg
lahf
test
dec
out
jecxz
or
cmpsl
out
add
and
dec
fildll
enter
dec
ss
jg
ljmp
lcall
push
mov
cmovno
pop
xchg
xor
xor
cmp
jecxz
xchg
ljmp
sub
and
outsb
out
xchg
xchg
xchg
ret
das
icebp
insl
mov
cmpsb
xchg
addb
lret
xchg
xor
cs
push
sbb
xor
xchg
cmc
mov
mov
in
sahf
in
jb
orl
imul
out
cmpsb
dec
dec
je
push
xchg
mov
mov
in
mov
or
cmp
or
aam
std
insl
call
push
inc
mov
mov
xchg
sub
push
push
into
and
push
negb
mov
nop
daa
movl
std
stc
push
test
gs
es
xlat
push
leave
mov
and
and
std
sub
sub
xchg
fsts
sahf
sub
loope
xor
loopne
pop
leave
sub
sub
sbb
dec
lock
mov
mov
xchg
sub
fildl
mov
ss
insl
fwait
xor
js
cltd
mov
dec
mov
sbb
xchg
mov
push
mov
orb
out
in
loopne
cmp
aas
insl
cmp
add
xor
push
ss
mov
cld
mov
or
pushf
adc
in
inc
add
ljmp
mov
jmp
insb
sbb
mov
xor
cmp
and
dec
test
lods
loop
cmp
mov
and
dec
out
mov
ret
ss
and
adc
loope
es
add
inc
and
and
xchg
dec
push
mov
enter
test
inc
stos
inc
filds
inc
ljmp
mov
adc
and
aas
jmp
xlat
stos
sarb
push
xor
push
fsts
xchg
sahf
jae
push
mov
cmp
xchg
jp
test
hlt
fldt
ds
aaa
hlt
jo
hlt
push
pop
inc
jl
jbe
inc
fwait
bound
popa
lret
jb
adc
ficomps
dec
dec
out
sbbb
mov
xor
mov
stc
dec
jmp
lods
sub
incl
push
push
mov
stos
dec
in
cmp
cmc
loopne
popf
or
in
dec
ljmp
or
stc
imul
xor
xchg
xchg
outsb
in
or
nop
out
repz
adc
fbld
cmp
xchg
or
popf
jecxz
inc
cmp
mov
cpuid
int3
sub
jbe
lret
cmpsl
inc
jne
inc
adc
mov
xchg
mov
dec
sbb
leave
pop
mov
outsb
out
repnz
sbb
or
add
popa
sbb
xchg
sarb
fisubs
hlt
andb
gs
lods
dec
ja
call
sbb
sub
dec
repnz
cli
popa
mov
xchg
sbb
pop
inc
mov
shlb
adc
in
std
cld
jnp
fidivl
mov
mov
stos
xchg
sbb
dec
lock
dec
aaa
dec
pop
ljmp
sub
fldl
lock
pushf
cmp
or
jp
xchg
popf
js
sub
sub
push
cmp
mov
dec
ret
push
out
and
stc
dec
cmpb
pusha
movsb
dec
pop
mov
imul
pusha
push
dec
call
daa
popf
test
imul
add
int
in
ds
push
fcoms
hlt
mov
addr16
popf
hlt
popl
aaa
stos
test
movsl
in
test
popf
dec
jecxz
mov
xchg
lea
js
xchg
add
aam
test
pop
jle
fstpl
pop
xor
push
mov
out
ss
fidivs
and
sub
and
lret
nop
push
sub
dec
in
ljmp
das
aam
incb
adc
call
cmp
lock
adc
xor
inc
jmp
mov
cwtl
dec
shr
jle
inc
and
xchg
add
test
push
cwtl
lret
mov
psadbw
mov
imul
mov
or
lods
loope
fists
testl
lods
aad
jbe
lret
xlat
or
test
mov
adc
xor
inc
lods
outsb
ds
fbld
test
jle
mov
js
mov
xor
jg
push
inc
pop
pop
dec
dec
jns
push
ljmp
inc
mov
rcll
sbb
jmp
movsb
cwtl
push
and
mov
loop
iret
dec
dec
jno
add
sbb
dec
pop
mov
cwtl
je
mov
sub
push
jo
dec
insl
cmp
pop
jg
or
mov
mov
cltd
sbb
jb
lods
dec
dec
pop
jbe
and
push
popf
rcrb
inc
lods
mov
or
mov
adc
stos
cmp
mov
notl
in
add
scas
addr16
xorl
mov
and
lds
jmp
push
test
sbb
bound
shlb
subl
imul
xorl
cmp
xchg
add
test
enter
mov
rorl
jg
inc
sub
call
stos
sub
repz
lret
test
push
ds
xor
inc
dec
popf
ljmp
pop
das
loopne
lods
push
clc
cmpsl
test
ja
jns
orl
sti
jmp
inc
inc
cmp
daa
mov
ljmp
out
fistl
pop
addr16
pop
rep
dec
jae
mov
mov
ret
shrl
pop
adc
dec
clc
mov
xchg
mov
rcrl
jae,pn
mov
mov
sub
jb
xchg
sub
xchg
push
jmp
cmp
outsb
out
fistl
dec
inc
jnp
js
sub
jb
cwtl
mov
hlt
jecxz
movsl
jmp
mov
cmp
scas
les
dec
xor
or
out
mov
add
insb
jae
sub
add
enter
dec
cmc
dec
popf
jecxz
jo
andb
jmp
jge
xchg
mov
ret
pop
inc
inc
mov
out
jbe
inc
das
adc
inc
push
pop
notb
movsl
loopne
lret
sub
psubd
xchg
out
jmp
rorb
and
rolb
or
and
lods
sahf
cltd
or
pop
aas
push
adc
test
lds
jns
repnz
call
int
pop
jno
sbbl
mov
xchg
inc
sub
inc
pop
cmp
and
sub
test
std
fmul
adc
insl
je
mov
sub
mov
xchg
and
mov
hlt
adc
push
mov
movsb
mov
mov
pop
aam
outsb
aad
adc
js
jnp
scas
test
push
fmull
lods
fidivrs
repz
xor
add
incl
jbe
aaa
jle
xchg
popa
adc
bndldx
adc
fwait
clc
popa
cmp
push
or
les
stos
pop
dec
pop
add
lock
fnstenv
test
mov
ljmp
push
add
jmp
jge
push
test
jbe
std
cmpsl
popa
jae
jbe
mov
int3
xor
push
mov
sahf
jl
insb
cli
mov
rolb
lds
pop
rorb
jo
dec
shll
or
mov
mov
or
arpl
cmc
push
adc
mov
cmpb
push
pop
mull
jp
out
testl
ja
outsl
push
mov
lods
xchg
mov
and
aad
in
loop
push
mov
add
std
lods
mov
mov
notb
xor
sub
xor
mov
ljmp
pushf
call
mov
pop
xor
jmp
jmp
int3
xor
jp
cli
in
out
lcall
adc
inc
lods
mov
push
lahf
jge
rcrl
int
sbb
mov
xchg
insl
arpl
mov
dec
pshufw
rorl
pop
int3
ficoms
adc
mov
movb
push
aaa
adc
or
fdiv
ret
std
and
sbb
mov
jns
js
arpl
in
jno
testb
adc
jnp
lahf
into
jbe
ja
jns
pop
sbb
clc
xchg
sti
imul
and
and
fcoml
sub
test
jle
xor
push
push
imul
pop
lcall
loope
mov
adc
dec
subb
or
mov
xor
ds
js
in
sub
fldl
sub
fstl
sti
mov
out
jmp
sub
xchg
pop
inc
out
pusha
mov
pop
out
repz
in
mov
in
shll
bound
frstor
pop
adc
jb
jmp
loope
mov
jge
jnp
fsubl
xchg
mov
dec
mov
or
jl
movb
sub
sub
push
fs
jmp
js
scas
mov
mov
mov
clc
jne
subl
sbb
leave
dec
mov
cmp
inc
mov
jecxz
enter
std
imul
and
sub
mov
js
je
insb
add
xlat
sub
popa
into
mov
jp
pop
es
dec
or
std
xchg
cmp
mov
cmpsb
sbb
sub
ljmp
add
add
outsb
scas
ljmp
pop
inc
movsb
cmp
xchg
push
jo
inc
lods
dec
pop
gs
in
sbb
stc
movsl
xor
jl
outsl
sub
mov
mov
mov
sub
fildll
pop
jo
push
fdivs
pop
int
xchg
push
cmpsl
dec
jg
scas
and
adc
xchg
jg
and
jnp
ljmp
or
call
in
rep
sti
emms
repnz
loopne
mov
lahf
sarb
inc
mov
sub
fs
jno
mov
adcb
mov
push
sbb
in
cmp
cmp
stc
loop
sbb
data16
dec
test
pushf
mov
push
push
dec
inc
xor
add
sbb
dec
or
cmpsl
jmp
or
dec
sbb
adc
cltd
std
test
out
sbb
nop
lea
push
xor
sbb
stos
aam
daa
push
push
mov
ds
and
cmpsl
shlb
sbb
push
jle
push
and
and
mov
in
push
fsubrs
pop
ss
mov
pop
add
push
ljmp
lock
fdivrs
mov
rcr
mov
lods
pop
int3
lret
and
push
aas
pushf
jb
lahf
sub
push
or
dec
popf
lods
jecxz
and
pop
mov
push
not
jnp
and
sub
not
and
jno
cli
cs
dec
xor
loope
stos
xchg
mov
cwtl
pop
mov
imul
fcmovu
mov
jnp
popa
sbb
vdivps
arpl
pop
or
jp
ret
sbb
lds
jge
jle
je
fs
lods
roll
fcomi
test
cmpsl
ds
jo
repnz
xchg
js
popf
xchg
jle
popf
sti
loopne
pop
pop
or
lcall
call
cmp
inc
pop
mov
sub
push
ljmp
int3
mov
imul
outsb
dec
jecxz
mov
jnp
jbe
mov
jns
mov
sbb
mov
in
jge
adc
push
inc
arpl
sbbb
push
call
inc
shrb
push
popf
pop
int
sub
and
inc
fsubl
gs
and
mov
xchg
adc
sbb
std
mov
adc
pop
cmc
aas
xor
xor
jns
push
out
pop
push
fidivs
outsl
outsb
add
mov
rorb
imul
push
ljmp
mov
or
loop
scas
sbb
jnp
inc
stos
aad
pop
nop
int3
int3
arpl
mov
sub
push
pop
int
add
sub
xchg
xor
repz
jg
fdivr
inc
shrb
insb
dec
in
movsl
shlb
jge
aad
sbb
jl
xor
xchg
sar
mov
pop
mulb
loope
push
shlb
sbb
ss
enter
mov
jle
sub
inc
dec
mov
push
int3
mov
aas
push
and
or
adc
je
push
cmpsb
cmpsl
xor
adc
mov
cmc
sub
and
mov
mov
and
dec
sub
xchg
xor
lea
mov
push
sub
mov
and
in
pop
dec
push
das
pop
xchg
in
pop
sub
jns
in
stos
or
mov
cmp
test
dec
out
loope
pusha
mov
add
loopne
in
sbb
mov
and
fnstcw
pop
std
test
mov
hlt
incb
test
cltd
loope
cwtl
mov
jg
ljmp
into
in
sub
icebp
or
mov
clc
bound
fistpll
bound
fsubs
cltd
fs
or
xor
lods
mov
icebp
lods
jnp
sbb
xchg
sub
xor
sub
daa
adc
mov
push
fcmovnb
fstpl
int
xchg
test
int3
jg
jb
pushf
aaa
movsl
into
mov
jb
cmp
dec
mov
inc
daa
sarb
mov
mov
subl
inc
sti
fldlg2
add
add
pop
dec
loope
sar
mov
sahf
fmull
adc
push
sub
cmpsl
aas
xor
xchg
jp
mov
mov
pop
daa
or
or
es
bound
cmp
mov
xchg
js
sbb
xchg
insb
enter
mov
inc
or
scas
test
mov
aad
and
jnp
addr16
movsl
ficoms
lods
jno
inc
out
dec
mov
call
inc
idivb
cld
and
addr16
or
cmp
int
cli
stc
fsubrs
fstpl
xchg
dec
inc
fiaddl
xchg
jae
sahf
push
cli
or
lods
in
outsb
ljmp
aad
into
push
mov
or
add
test
push
iret
rclb
cmp
push
pushf
outsl
outsb
jle
fsts
repnz
xchg
mov
stos
into
mov
loope
inc
adc
dec
push
add
aaa
pop
ret
mov
sub
out
aaa
add
decb
scas
xchg
and
sub
pusha
add
dec
inc
mov
sbb
stos
adc
divl
mov
xchg
pop
adc
ret
sbb
add
loopne
dec
add
pop
arpl
dec
hlt
fldl
in
cmpsl
push
add
shrb
dec
mov
leave
pusha
loopne
enter
arpl
jns
insl
ds
dec
cs
jmp
lret
push
jae
xchg
jle
push
loope
mov
cs
dec
pop
push
ja
movl
out
inc
mov
mov
pop
out
es
scas
aaa
aas
dec
xchg
cmpsb
or
and
stos
jbe
push
lahf
xor
divl
jecxz
movsb
dec
incb
mov
jle
jge
fsubs
insb
sti
outsl
jns
shlb
push
jge
sub
lods
pop
das
push
jl
xchg
xor
and
lods
nop
fwait
gs
mov
fidivl
fdiv
inc
adc
sbb
push
pop
insl
sbb
push
push
cmpsb
cmp
loopne,pt
xchg
push
leave
pop
ds
or
das
inc
data16
scas
dec
jns
cmpb
sbb
cmp
pop
mov
and
xchg
xchg
dec
sbb
cwtl
push
test
add
cmp
jmp
and
rcl
add
rol
mov
and
iret
mov
mul
fadds
lea
fs
lahf
adcl
lds
int3
lret
add
push
inc
mov
mov
je
and
and
les
adc
in
cmp
dec
inc
dec
in
pop
ljmp
popa
mov
add
ljmp
pushf
or
add
lods
push
ja
sub
ljmp
mov
fdivl
mov
push
shrb
std
shl
mov
push
fsub
mov
rolb
cmc
mov
dec
xchg
ljmp
xor
sub
mov
imul
mov
imul
push
add
add
scas
adc
je
int
int
ret
sbb
int3
fsubl
push
ud2
fs
out
inc
mov
and
call
xchg
mov
cmpsb
pop
add
fsubs
aas
push
out
fsubrs
adc
push
push
repnz
rclb
jl
pop
out
arpl
jg
cld
outsl
rcll
add
inc
pop
cli
inc
xchg
arpl
xchg
lea
mov
cmpsb
data16
push
jmp
divb
fistps
push
mov
cmp
out
dec
mov
cmp
int3
out
mov
popf
iret
and
iret
pusha
or
hlt
xchg
or
ja
mov
mov
jns
icebp
push
cld
subl
fadd
xor
mov
loopne
enter
xchg
pop
imul
or
jle
cld
jp
xor
bound
ja
cmp
add
fistl
fstpt
movsb
cmp
mov
jne
dec
ljmp
pushf
cli
scas
add
lret
mov
dec
stos
mov
push
pop
icebp
inc
mov
xchg
sbb
in
adc
adc
enter
pusha
lret
testb
in
into
sub
sub
loope
inc
and
insb
loope
call
sahf
add
xor
insl
mov
ds
and
outsb
xchg
push
shll
mov
and
mov
es
stc
call
cmp
scas
in
lahf
dec
cwtl
inc
fdivl
pop
test
dec
ss
int3
mov
fmull
cli
stos
inc
fsubrl
mov
pop
cmp
pop
adc
inc
add
fs
mov
das
enter
outsb
push
ljmp
call
dec
push
xchg
popa
xor
ds
adc
xchg
cld
cmp
sti
xor
sbb
in
push
fnstcw
imul
mov
xchg
insl
cltd
pop
icebp
inc
cmpb
cmp
jo
in
lret
aam
cmp
fcmovnu
out
mov
push
sar
xor
jb
test
xchg
and
lret
in
arpl
test
pushf
into
push
mov
test
lea
push
aad
jb
and
cmp
jl
jo
cmp
push
mov
pop
cmp
call
jns
cld
xchg
xchg
pop
sbb
dec
cmp
push
jl
adc
mov
lret
pop
cmc
mov
iret
call
scas
mov
imul
popf
jl
sbb
aaa
cmc
lahf
loope
jnp
pop
stos
out
pop
orb
inc
fistpl
adc
outsl
shlb
nop
add
insb
adcl
or
lahf
mov
sub
stc
fs
stc
nop
ret
popa
or
imul
jecxz
xchg
xchg
mov
loop
dec
dec
ss
dec
add
cmp
lods
cli
clc
sahf
sbbb
or
pop
out
xorl
loop
jne
mov
jno
hlt
push
mov
adcb
outsl
xchg
cli
inc
mov
push
push
jmp
xor
sub
out
nop
inc
std
mov
aas
xchg
sub
jne
jns
sahf
cmp
js
in
mov
bound
add
loope
lds
sbb
push
jo
dec
hlt
out
push
data16
mov
cmpsl
push
or
pushl
push
idivl
pusha
ret
in
fdivrs
and
and
roll
mov
lret
imul
xor
stc
lds
push
js
ret
xchg
dec
cmp
cli
in
outsb
sub
ds
jae
mov
shlb
mov
jp
add
or
pop
xchg
pop
push
ss
sti
jbe
jecxz
xor
and
aam
xlat
xor
xor
in
or
sub
xor
rcrb
adc
sbb
ret
das
repnz
outsb
mov
mov
sbb
mov
sbb
mov
arpl
xchg
jno
je
dec
rorl
inc
cli
sub
repz
aam
lock
mov
rcrb
decl
loope
pop
xchg
aas
dec
cmp
sbb
cltd
arpl
dec
les
inc
mov
stc
or
mov
inc
fdivs
insl
adc
push
pop
sbb
add
xor
xchg
subb
mov
popa
sub
jmp
insl
outsb
sbb
pop
and
cmp
dec
mov
outsb
dec
scas
jnp
adc
pop
xor
sbb
stos
xchg
pushf
push
insb
iret
test
repnz
popa
cmc
repz
pop
in
scas
xchg
sahf
pop
enter
xchg
insb
mov
xlat
pminub
mov
es
daa
fdivp
pop
fmuls
or
mov
outsb
out
bound
xlat
jp
add
push
cmp
lcall
das
rorb
mov
loop
aaa
push
jmp
push
or
dec
xchg
fbstp
xchg
cmp
sub
ret
fsubrl
mov
mov
adcb
inc
cli
dec
ljmp
movsb
pop
xchg
cmp
jge
sub
push
enter
movsl
rorl
cmp
xor
pop
movb
imul
push
addb
mov
pop
or
out
adc
mov
adc
pop
and
pop
push
enter
adc
and
jae
lcall
lock
xchg
sub
test
jnp
or
jbe
mov
ret
mov
mov
out
pop
adc
xor
cmp
das
xchg
mov
ja
test
mov
dec
or
call
fisubs
push
movsb
mov
loop
sub
pop
xchg
lret
or
xlat
pop
in
mov
push
push
pop
pusha
and
loopne
cmp
leave
and
lcall
and
fbld
lcall
popa
clc
pop
xor
cld
outsl
cld
add
inc
pop
mov
cmpsb
enter
inc
fucomp
xor
xchg
les
out
push
mov
dec
adc
xlat
mov
mov
xchg
das
dec
cwtl
push
push
dec
add
imul
scas
lds
ljmp
pop
sarl
dec
sbb
dec
dec
shlb
pop
mov
aad
cli
xor
mov
aas
inc
leave
icebp
jne
or
push
mov
iret
shl
int
push
leave
mov
lret
mov
jl
int3
sub
mov
ja
xor
lds
cld
pop
pop
inc
or
dec
jo
jge
fsubrs
mov
jns
insb
mov
xchg
inc
sbb
xlat
scas
loopne,pt
jno
imul
andl
jl
cltd
and
and
sub
mov
sbb
jo
nop
outsl
pop
repnz
mov
dec
fidivrl
out
pop
cmp
nop
cwtl
outsb
cmp
repnz
lret
je
arpl
mov
jns
test
loope
xor
test
lea
dec
push
dec
orl
or
je
cmp
xor
push
into
xor
cli
je
cmp
imul
mov
gs
pop
dec
mov
ret
out
cmp
xlat
out
call
insl
push
and
push
mov
and
xchg
push
fldl
hlt
fs
push
and
push
jge
pop
shrl
cmp
dec
dec
mov
sti
xchg
sbb
sbb
xorb
cld
hlt
clc
jno
cltd
ret
outsb
xchg
subl
dec
or
rcll
xor
aas
xchg
add
aad
daa
push
pop
rol
sub
loop
pop
dec
add
xor
mov
mov
jns
lock
dec
sub
and
bound
sbb
imul
lds
movsb
adc
std
lcall
cmp
push
iret
clc
push
inc
inc
cmpsl
decb
shl
push
cmpsb
cmp
popa
call
cmp
jbe
das
pop
xchg
mov
scas
xchg
lods
push
popa
jg
jae
and
pop
rcl
int
mov
mov
or
jmp
mov
adc
aas
sbb
jl
std
sub
inc
rolb
clc
shl
or
pop
sub
and
mov
inc
in
jg
fidivrl
dec
pop
push
aad
sti
or
dec
add
pusha
mov
add
aad
imul
hlt
mov
in
out
sub
movntps
fidivl
aad
inc
xchg
dec
dec
shlb
mov
inc
xchg
mov
popf
scas
in
in
xlat
cltd
add
xor
mov
push
aas
pop
es
mov
or
gs
lcall
jo
ljmp
mov
je
gs
cmp
bound
mov
push
push
push
jmp
cs
fadds
popa
and
cmp
rolb
xor
shrb
aad
sub
xor
lds
xchg
outsl
ljmp
sbb
lods
outsl
gs
je
add
push
std
pop
jo
mov
imul
dec
jmp
out
stc
push
ss
xchg
pop
inc
cltd
iret
mov
xlat
imul
mov
jne
pusha
pop
leave
mov
mov
pop
clc
adc
dec
scas
jno
push
pop
fwait
lret
xor
push
insl
cmp
pop
out
sub
xchg
cs
das
dec
mov
aaa
loop
dec
pop
jg
mov
sbb
ret
xchg
in
movsb
ds
jmp
mov
das
adc
sub
int3
shll
push
gs
rclb
push
iret
sub
jmp
adc
in
lret
push
sub
iret
out
jge
inc
pop
pop
sahf
shll
jno
cltd
popa
and
jnp
and
inc
pop
repz
lock
and
pop
ss
stos
xlat
jmp
leave
fdivl
in
xchg
and
mov
pop
dec
aad
inc
xchg
add
sub
and
jmp
inc
xor
aas
xchg
mov
jg
shrb
test
mov
pusha
imul
mov
mov
adc
push
out
inc
xor
imul
pop
ljmp
xorl
subl
sahf
fwait
scas
sub
push
and
push
js
out
dec
out
add
xor
fs
push
call
dec
ja
idivl
out
mov
fwait
bound
mov
sbbl
xor
cmp
repnz
filds
adc
xchg
sbb
mov
sub
push
and
int3
lods
adc
inc
stos
cmpsb
lods
fsts
inc
shll
pop
test
cmp
and
add
sbb
pop
int3
inc
testl
fcmovbe
inc
data16
xor
inc
pop
mov
inc
in
pop
dec
push
and
mov
es
push
adc
pop
or
mov
xchg
popa
xchg
mov
subb
pop
sub
adc
mov
fidivs
lea
scas
mov
ljmp
xchg
and
out
xchg
mov
push
mov
testb
pop
adc
pop
mov
popl
jge
pop
outsb
xchg
stos
lahf
jp
xor
lods
mov
fsubrs
dec
pop
inc
inc
inc
cld
cmp
lock
sub
icebp
jmp
adc
xchg
ret
in
pop
addb
loop
cwtd
pop
rcrb
test
dec
jbe
sbbb
push
xor
lcall
mov
and
jbe
adcl
add
lods
insb
mov
por
push
leave
ja
test
mov
pop
adc
subb
fisubl
mov
scas
push
daa
enter
dec
fwait
push
mov
ficompl
mov
or
rclb
mov
add
into
xor
iret
adc
sub
mov
scas
jb
pop
mov
test
mov
xchg
fstpt
push
out
jnp
xchg
xor
int
dec
dec
and
fcoml
mov
rcll
mov
jl
fmull
add
sub
mov
jmp
popa
jle
mov
out
push
sub
fdivp
adc
jbe
adc
jbe
incb
and
test
ror
ss
lods
push
ret
sti
aad
fdivrl
xor
add
pop
inc
push
pop
icebp
arpl
inc
push
popa
adc
and
cmpsb
or
call
ja
and
cltd
push
or
xor
test
xchg
call
mov
arpl
adc
repz
pop
jo
clc
mov
cld
imul
push
inc
and
or
mov
std
add
aas
lcall
lea
ja
push
and
cwtl
leave
ficoml
push
stc
mov
push
mov
sbb
ds
mov
cmp
outsb
push
sti
mov
cmp
cmovp
sbb
out
pop
pop
jno
iret
and
and
pop
sub
sbb
imulb
inc
rorl
xor
jecxz
fsts
andl
repz
ret
outsl
pop
call
cmp
or
inc
push
sahf
js
sub
push
push
call
je
and
xchg
adc
sbb
cmp
lock
jnp
out
mov
addr16
fcoms
fwait
ss
adc
xlat
and
xlat
inc
inc
xlat
je
add
mov
mov
lds
aad
out
push
clc
loope
mov
filds
add
mov
rcrb
pop
call
and
sarl
sub
dec
dec
mov
insb
int3
add
nop
push
jno
lods
shrb
andl
call
or
lahf
cmp
jo
mov
es
jl
xchg
pop
outsb
sbb
fyl2x
nop
int
bound
addb
mov
mov
stos
orb
and
sub
decl
inc
fs
pusha
dec
ss
cli
cmp
mov
push
fadds
xor
and
adcl
and
mov
nop
lods
cmp
cltd
test
mov
mov
test
mov
enter
rcl
or
movaps
fdiv
mov
jae
rol
xchg
fstps
mov
cmp
pop
jp
mov
xor
push
inc
aaa
fistpll
fisubs
and
test
je
mov
sbb
in
andl
dec
mov
mov
xor
stos
mov
push
sub
mov
cmp
push
daa
push
jle
push
cmp
sub
add
sub
shlb
pop
xor
lahf
inc
jge
push
mov
push
adc
push
fstl
xor
or
adc
cmp
pop
mov
popa
stc
arpl
dec
xor
ret
aas
sub
xlat
sub
inc
lods
xchg
ja
inc
pop
les
sbb
jmp
loopne
jbe
inc
cmp
out
pop
jl
dec
test
loopne
mov
jnp
jnp
adc
pusha
imull
movsl
int
and
jle
aas
lcall
lds
jecxz
mov
jbe
cli
fidivl
mov
mov
fwait
sub
shl
ja
data16
jl
fistps
aaa
add
or
inc
and
sbbb
jl
popf
inc
adc
jl
xchg
vpsllw
and
bound
inc
ljmp
push
pop
xor
sti
cmp
ss
cmpsl
stos
pop
icebp
sbb
push
jmp
test
xchg
andl
hlt
and
std
push
in
push
sub
stc
pop
jg
lret
pop
in
xchg
aad
mov
mov
outsl
push
lret
repnz
imul
fldcw
addr16
push
inc
mov
fcomps
adc
arpl
ror
sbb
mov
adc
push
pop
xchg
push
stos
and
sbb
aas
xor
mov
adc
or
pop
lcall
mov
shrb
jno
sbb
xchg
lea
mov
push
pop
mov
hlt
mov
movsl
dec
test
inc
inc
gs
test
jbe
fdivp
and
stc
rcrl
ret
pop
and
xlat
sbb
add
pop
pop
dec
test
push
mov
cmp
mov
testb
push
push
jae
fwait
mov
adc
in
lock
cwtl
repz
sbb
add
add
mov
ljmp
jp
jg
pop
mov
inc
out
xor
out
xchg
leave
test
pop
idiv
rcrb
sub
inc
rol
add
lods
pop
xchg
fdivl
cmpsb
mov
sbb
pop
js
into
stos
pusha
enter
stc
jp
and
dec
ss
icebp
sub
sbb
adc
adc
push
lods
jne
pop
push
xor
and
mov
fcoml
or
stos
sahf
fnstenv
je
jge
stc
inc
push
pop
movsl
loopne
fimull
cmpb
pop
cmc
cmp
push
push
mov
insl
mov
sub
shrl
fnstenv
aam
push
cmpsl
push
out
ljmp
inc
out
adc
fadds
jnp
pop
push
lahf
call
lret
incl
mov
push
loopw
lret
cmp
sbb
hlt
in
out
inc
sub
lods
inc
test
push
push
dec
mov
sti
lock
cwtl
jb
inc
push
test
pop
in
mov
jg
shl
pop
stos
mov
stos
mov
fxch
push
addr16
dec
pop
mov
fstpt
dec
pop
lahf
cld
stos
pop
fnstsw
icebp
movsl
xor
std
mov
clc
adc
adc
lds
or
add
imul
addl
mov
inc
inc
ficomps
jecxz
rclb
rcrl
outsb
movsb
or
xchg
out
cmpsb
xchg
pop
arpl
adc
gs
xchg
add
jne
or
jne
je
dec
push
dec
mov
inc
dec
or
pusha
dec
jmp
rorb
sub
lds
rolb
bnd
popa
mov
mov
mov
aad
jmp
and
lahf
inc
xor
mov
mov
lock
mov
sti
addb
sbb
mov
mov
jp
mov
fldenv
cmp
ret
mov
fwait
inc
or
inc
fst
cmp
loopne
cmp
roll
lds
adc
pop
ds
mov
jno
jp
mov
roll
lea
xchg
daa
loope
and
aad
jle
dec
push
mov
cmp
cmp
mov
lods
fcomps
or
push
pop
popf
popf
mov
test
or
test
push
or
fnstsw
aas
addl
icebp
arpl
inc
add
cmp
inc
rolb
call
pusha
adcb
shlb
cli
xchg
inc
test
pop
bound
xchg
daa
clc
inc
lea
mov
jmp
arpl
push
addr16
jecxz
adc
push
dec
and
pop
xor
dec
fdivrs
cmpl
stc
pop
hlt
adc
testl
cmp
pop
jno
cwtl
daa
inc
sbb
adc
fsub
mov
sbb
stos
in
sbb
in
mov
mov
test
in
push
loope
test
mov
push
out
lar
fcmovne
test
rcr
in
fs
repz
and
push
fisubl
and
cmc
cmp
hlt
adcl
imul
inc
scas
lds
xchg
gs
pop
addr16
shlb
cmp
aaa
mov
cltd
scas
sbb
dec
test
sbb
xchg
subb
inc
or
ja
repnz
loop
mov
bound
push
rcll
enter
xchg
mov
jmp
scas
sarb
arpl
iret
mov
addr16
test
dec
inc
in
stc
fdivrl
inc
in
in
shl
dec
cmp
cmpsl
stos
fsub
addr16
inc
cs
cmpsb
in
push
xchg
xlat
jno
mov
push
pop
xor
jmp
gs
fisubs
fsubl
jge
in
pop
ljmp
and
cmp
rcrl
cltd
jbe
sbb
mov
incb
ret
xchg
pop
ret
ret
out
sti
add
pop
cmp
imul
lret
mov
jg
iret
sub
fbstp
ret
and
rcll
push
mov
inc
sub
pushf
out
dec
add
testb
scas
call
pop
sarb
xor
push
xchg
adc
lods
leave
and
int3
daa
lret
mov
enter
into
mov
gs
out
enter
test
add
dec
fcmove
loop
test
ljmp
push
loopne
jne
add
or
sub
sbb
mov
jno
imul
rcl
mov
into
fs
mov
neg
add
stc
cmp
les
aam
mov
or
and
cs
lret
xchg
scas
clc
jbe
xorb
imul
pop
movsb
loopne
inc
inc
gs
mov
bound
jmp
xor
dec
inc
addr16
push
xchg
and
shl
fsts
add
fildl
cmp
cltd
and
xchg
fwait
or
cwtl
int3
lret
dec
aad
in
jp
fistpl
cmpsl
into
fsubs
aad
cs
fcomps
icebp
jnp
jg
jno
mov
or
scas
fstl
xchg
add
adc
shrl
sub
repnz
cltd
xchg
imul
push
mov
jl
push
mov
inc
add
scas
int
pop
leave
inc
cmc
push
imul
pop
outsl
mul
aas
push
cmp
cs
pop
xlat
pop
xchg
and
and
mov
mov
out
dec
imul
mov
sub
dec
sbb
aad
sbb
inc
movntq
out
sbb
sbb
push
fsts
addr16
stc
xchg
lods
shlb
imul
clc
rcrb
std
fbstp
add
push
loope
movsl
test
leave
fdivr
shll
pop
sbb
dec
es
scas
mov
mov
lods
mov
dec
std
add
fnstsw
add
or
popa
xchg
xor
push
jg
pop
pop
jno
repnz
and
lds
movsb
cmp
fldcw
mov
xchg
adc
ljmp
inc
shll
inc
and
jp
inc
hlt
js
cmpsl
jmp
roll
inc
outsl
stos
jnp
cltd
les
jae
jbe
pop
in
pop
inc
lods
sub
nop
mov
subl
dec
jg
push
mov
or
pusha
xchg
and
adc
push
je
xlat
inc
popa
dec
push
cld
push
leave
xor
fbstp
dec
ja
lds
lcall
sbb
rol
xchg
mov
xlat
sbb
sbb
fucomp
std
push
add
mov
jp
mov
bound
loopne
rcl
mov
mov
loopne
inc
js
pop
and
sbb
leave
lret
pop
into
jle
sti
ljmp
jne
mov
lret
ds
fmull
jg
push
cmpsl
repnz
scas
push
pusha
xor
add
cmp
push
sub
jmp
jmp
add
dec
cmp
mov
ret
nop
stos
ds
rcrb
xchg
loope
add
stos
jmp
lcall
and
out
mov
mov
ja
iret
and
rcll
clc
mov
in
out
inc
out
fld
das
outsb
xor
xchg
push
je
repz
and
and
adc
cmp
hlt
in
scas
cmc
cwtl
sub
ret
mov
addr16
jb
mov
sbb
pop
jb
add
dec
pop
or
ss
or
in
iret
imul
in
test
cwtl
inc
sbb
mov
sub
pop
ja
aas
es
popf
cmp
jmp
icebp
add
push
jo
push
fidivrl
pop
cmpsl
shlb
bound
insl
mov
cltd
add
sub
es
pop
ret
test
mov
jb
mov
sub
cs
movsb
pushf
subb
adc
dec
in
js
jge
adc
jbe
adc
enter
push
out
mov
psraw
popf
fwait
sub
add
sahf
cs
add
push
mov
push
aaa
stos
jge
mov
mov
test
lcall
fs
push
lods
add
mov
mov
jp
adc
pop
dec
lods
inc
subl
or
adc
jg
es
sub
push
hlt
iret
sti
inc
imul
pop
mov
lds
bndstx
add
sub
jno
push
movsl
cmc
ljmp
dec
or
cmp
xor
or
dec
movsb
cmpsl
loope
leave
xchg
into
repz
push
stos
mov
xor
mov
ja
lahf
scas
or
xor
mov
adc
jo
repnz
cltd
cmpsl
decb
popa
clc
push
pop
imul
xchg
pop
xor
pusha
inc
xchg
sbb
jle
push
shl
cmp
bound
xchg
sub
cmpsl
unpcklps
fists
in
scas
sbb
push
shll
push
cmp
jnp
gs
aas
xchg
mov
cmpsl
ds
sbb
mov
mov
std
push
pushaw
and
andb
mov
stc
mov
fdivr
adc
jmp
jb
xchg
mov
fstpl
sub
repz
xchg
pop
dec
hlt
sub
pop
fiaddl
add
jecxz
xchg
and
dec
ds
mov
push
sbb
cmp
dec
pop
outsl
mov
jo
dec
cmc
pusha
sti
jmp
out
test
shlb
fsubs
dec
leave
xlat
add
add
data16
in
in
shlb
leave
hlt
mov
fcoml
push
out
rcrl
jle
loop
sub
or
xor
or
xor
add
xchg
xchg
stos
iret
fildl
mov
dec
xor
loopne
ret
addr16
cmp
rcrl
jns
mov
dec
rolb
aas
dec
and
test
pop
cmp
cmp
lods
lods
test
mov
and
in
imul
ss
xchg
adc
pop
ja
xor
cmc
pop
cmp
push
out
dec
cmpsl
dec
lods
pop
push
loopne
sarl
push
nop
and
xor
mov
pop
mov
xchg
int
cmp
imul
or
or
es
lahf
jmp
xchg
lods
outsb
and
shlb
mov
cltd
xor
xchg
cltd
xor
aam
in
gs
dec
sbb
push
outsb
scas
sbbb
ret
mov
aaa
push
test
jg
pop
add
and
pusha
mov
lods
cld
loope
rorb
push
sbb
cmpsb
or
sub
and
adc
push
add
adcl
cmp
add
js
and
push
cmp
add
cmc
sub
lahf
notb
fldt
xor
pop
in
xchg
mov
jmp
mov
fildl
shrl
lahf
ja
adc
push
imul
stos
mov
jl
ja
xor
or
sub
insl
jne
stos
mov
push
jno
adc
jb
stos
outsb
lahf
scas
and
das
test
inc
dec
orl
dec
fildll
lret
mov
pop
sbb
mov
jo
or
stos
shr
sub
aam
shrl
mov
jmp
jnp
lock
movsl
aaa
push
es
loopne
mov
sbb
xchg
mov
sarb
popf
cmp
mov
add
into
and
ret
jae
pop
mov
adc
push
nop
cmc
or
sub
xchg
sbbb
jb
pop
mov
jecxz
xor
and
cs
jp
enter
mov
je
scas
fisubrl
out
mov
dec
xlat
repz
jae
xchg
and
sbb
xchg
xor
enter
xor
adcl
push
test
mov
mov
sbb
jmp
jp
inc
mov
stos
iret
mov
and
out
ret
mov
mov
int
imul
sub
mov
jge
leave
scas
notl
add
pop
fwait
cli
and
imul
js
std
int3
imul
jne,pn
push
rclb
mov
nop
push
fwait
mov
ss
out
push
in
sub
cmpsb
adc
cli
icebp
aam
sub
or
mov
in
clc
pop
jl
push
push
mov
xchg
pusha
jmp
clc
or
lock
xchg
fsubs
dec
popf
mov
pushf
out
movsb
shll
inc
inc
adcb
imul
jno
mov
cmpsl
adc
repnz
mov
jae
sti
inc
ds
mov
push
sub
testb
andb
cmpl
push
pushf
mov
mov
push
int3
data16
gs
in
fisttpll
pop
cmp
inc
ret
pop
inc
push
and
cld
xchg
scas
push
xchg
cmp
testl
aam
xchg
pop
es
imul
test
icebp
or
jp
stos
and
and
mov
pusha
jl
shrl
add
shl
jg
mov
pop
sbb
mov
aaa
mov
jge
lds
mov
sbb
dec
mov
movsl
lods
scas
insl
add
or
mov
andl
push
daa
or
out
or
jns
add
repz
xchg
lods
mov
push
dec
test
icebp
orl
int
adc
push
and
rcrl
xchg
jae
add
insl
rcll
fidivs
jbe
enter
mov
fldcw
sbb
or
cmpb
mov
xchg
lock
xor
ret
sub
mov
insl
add
sbb
sbb
cmp
in
add
testl
mov
push
xor
and
xchg
mov
add
jl
mov
xchg
jp
inc
sar
enter
out
das
mov
sub
mov
fists
jb
xlat
aam
lret
es
add
mov
ljmp
ja
pop
cltd
xor
push
es
xlat
stos
dec
xchg
nop
mov
pop
cmp
xor
cmp
push
mov
hlt
adc
clc
and
or
lret
into
loopne
daa
jb
mov
nop
jle
sahf
xor
mov
adcl
arpl
cmp
sbb
xor
out
jmp
jb
int3
cmpsl
cmp
cld
stos
sub
jg
push
pop
call
mov
mov
icebp
and
sti
mov
orl
das
cmp
pop
jb
cmp
mov
xlat
lret
xor
arpl
dec
xchg
cld
gs
add
mov
mov
int
mov
xchg
mov
cli
mov
mov
cwtl
mov
mov
or
dec
lahf
fwait
inc
or
dec
mov
scas
pop
test
or
test
lods
or
mov
addr16
mov
sti
inc
pop
jg
add
inc
and
rcl
push
jmp
push
mov
pop
xor
dec
icebp
cmpsl
dec
dec
and
add
pusha
cwtl
sti
adc
stc
fistpl
fwait
pop
notl
iret
leave
imul
adc
jo
fs
shl
xchg
sbb
in
popf
xchg
leave
dec
inc
mov
push
mov
dec
mov
lret
sbb
push
mov
add
dec
and
test
loop
pop
inc
std
cltd
in
into
pusha
jl
dec
mov
sbb
movsl
ja
dec
testb
and
cltd
cwtl
xchg
inc
xor
ja
mov
sbb
add
mov
mov
sub
sbb
pusha
sbb
jmp
pop
mov
fldenv
push
cmp
adc
mov
add
in
and
stos
add
ljmp
sbb
dec
mov
les
call
mov
jo
and
and
mov
push
stc
and
sbbb
mov
push
jnp
and
jg
xor
popa
jl
shll
or
pop
mov
data16
sub
nop
mov
push
sub
xor
ja
ret
lahf
scas
dec
pushf
div
adc
dec
sub
push
mov
adc
roll
imul
mov
add
ficompl
js
je
push
shrb
xchg
mov
dec
or
push
mov
mov
sbb
or
lret
jp
rcrl
adc
leave
ja
xchg
ss
and
jb
outsl
daa
icebp
jbe
aam
xchg
pop
mul
inc
adc
fists
fucom
hlt
loopne
add
vprotw
add
movsb
clc
xchg
ret
imul
mov
mov
pusha
mov
cmpsl
idivl
dec
in
jnp
cmp
int
enter
and
cmpsb
mov
jae
repz
fwait
cmp
iret
out
sbb
push
xor
mov
xchg
mov
mov
push
fistps
or
pusha
dec
fucomi
jb
pop
cwtl
cltd
or
dec
cmp
nop
mov
jge
stos
inc
in
inc
jb
dec
xchg
xchg
in
pop
dec
repnz
mov
addr16
imul
testl
adcb
lock
ss
xchg
mov
push
movsl
cmp
inc
roll
ret
pop
mov
push
xchg
rclb
pop
stos
push
dec
outsl
fcoms
pop
insb
add
push
andb
test
cmp
pop
dec
test
scas
icebp
mov
sbb
pop
mov
adc
sub
lret
inc
dec
inc
mov
ljmp
test
mov
imul
repnz
pop
imul
jle
inc
sub
jle
enter
ja
mov
mov
push
pop
in
addl
xchg
sahf
cmp
cmp
inc
mov
movsl
pop
in
mov
fs
gs
add
out
cmc
xchg
jmp
or
out
cwtl
addr16
stc
xor
js
push
dec
dec
adc
dec
dec
jns
cmp
sub
hlt
out
mov
ret
mov
mov
shll
xchg
jnp
mov
ja
adc
adc
xor
xchg
sbb
pop
jnp
or
pop
cmp
dec
sub
jge
call
add
cmp
aad
pop
mov
xor
cld
mov
mov
int
sub
dec
bound
pop
sarb
sbbl
xlat
pop
dec
dec
xchg
inc
push
sahf
fidivrl
aaa
xchg
js
jmp
shr
popf
lods
cs
mov
push
es
loopne
in
jmp
pop
jg
sti
inc
lea
jae
in
push
cmp
xchg
inc
pop
inc
inc
dec
shlb
push
pop
test
xchg
sahf
clc
lahf
scas
fstpt
add
lods
fsubs
inc
jae
or
xchg
jnp
lock
cltd
lcall
test
pusha
outsb
sbb
cltd
xor
lods
cmp
sbbb
addr16
cmpsb
inc
inc
add
enter
pop
imul
aas
fdivrl
fdivrs
xor
mov
ret
aaa
rcrl
fcomps
repz
sbb
mov
test
repnz
pop
lret
lahf
jno
add
or
add
not
aam
nop
out
stos
inc
loopne
jnp
in
outsl
ret
mov
movsl
jns
jae
xlat
xchg
addr16
nop
add
in
sbb
addr16
dec
ss
mov
cmp
xchg
xchg
aad
xchg
push
add
cs
or
sbb
xchg
repz
loope
mov
hlt
lret
and
inc
inc
scas
jb
testl
sbb
pop
lock
popa
cmp
scas
mov
rcl
fxch
mov
cmp
sbbl
out
inc
ss
out
ds
arpl
pop
je
enter
enter
rorb
push
fwait
sbb
jno
cmp
pop
pop
pop
clc
lea
pop
scas
dec
test
cld
in
aam
cwtl
fsubrl
xchg
xor
sbb
jne
jne
xor
les
xchg
push
xlat
outsb
jae
cmc
mov
scas
adc
shr
lods
inc
sbb
cmp
mov
in
in
inc
fbstp
ss
mov
fmul
push
lcall
rol
xlat
inc
int
push
insb
xchg
push
dec
loope
mov
or
leave
loop
cli
xchg
sbb
inc
mov
jno
fs
rorl
dec
fistps
push
loopne
ret
mov
xchg
sub
add
lds
dec
aad
dec
rorl
mov
loop
daa
jp
push
test
lds
inc
pop
cmp
out
pop
dec
pop
mov
testb
cmpsl
jbe
mov
pushf
adc
stos
insb
scas
dec
sbb
xor
inc
arpl
ds
inc
sbbl
mov
mov
loopne
stos
lcall
sahf
dec
roll
inc
out
sbb
and
push
inc
out
std
leave
bndstx
out
iret
rol
xor
pop
sub
add
ret
sbb
xchg
push
jne
dec
mull
aas
jo
jo
mov
mov
push
push
mov
cmp
into
fldcw
mov
mov
lahf
imul
sub
jo
aam
or
add
mov
repz
xor
xor
in
sub
inc
mov
subb
out
int3
jae
ja
mov
int3
je
movsl
imul
shl
adc
out
cltd
xor
fwait
push
jecxz
mov
pusha
jmp
ret
ret
dec
inc
push
xchg
shrb
cmp
pop
in
aas
push
xchg
push
jnp
pop
pop
or
mov
inc
in
es
scas
stos
imul
lods
cmp
fwait
sbb
mov
sbb
dec
mov
jns
in
xor
pcmpgtd
pop
cmp
push
stc
sar
icebp
sbbb
inc
mov
adc
inc
sub
pop
fsubp
hlt
or
xor
fidivl
push
jo
or
pop
sub
pop
inc
imul
andl
push
fdivl
or
dec
mov
xchg
sub
pop
xlat
cmpsl
nop
test
push
mov
arpl
push
out
pop
scas
ss
in
mov
mov
mov
push
adc
fs
cmp
fdiv
mov
and
scas
mov
jb
mov
push
jns
sahf
or
es
inc
in
subb
inc
pop
in
loope
loope
add
jne
and
xchg
inc
mov
or
lcall
out
test
push
std
sub
inc
cli
cwtl
daa
jo
js
fbstp
shl
lods
inc
push
test
int
out
xor
mov
jge
enter
mov
repz
out
sub
jo
in
add
loopne
push
inc
inc
inc
add
inc
jb
inc
push
and
sbb
push
jecxz
or
sub
ja
push
nop
mov
push
leave
sbb
push
inc
cmp
cltd
push
inc
out
xchg
imul
inc
push
add
adc
cmc
push
add
fildl
or
pushl
gs
and
test
adc
loopne
clc
insl
sub
cmp
mov
lea
insb
stos
xchg
les
sbb
mov
fidivrl
mov
or
rcl
in
pop
dec
aam
in
adc
pop
sub
negl
aaa
jnp
jl
aad
mulb
mov
ss
nop
push
xor
sub
int
xchg
cmp
nop
mov
pop
pop
icebp
movsl
aam
cmp
insl
mov
adc
xchg
push
fnsave
fadds
iret
or
push
enter
jp,pt
repz
adc
jge
sbb
and
mov
inc
inc
and
repnz
adc
leave
adc
fbld
daa
ljmp
jo
jo
mov
ss
push
dec
add
fstpt
aas
addr16
insb
pop
mov
ja
pop
movsl
sbb
sar
inc
pop
sbb
pop
in
push
push
icebp
add
xor
cmp
sbb
mov
xor
cli
jne
push
popf
popa
and
adc
lods
xchg
mov
xlat
and
scas
sub
scas
mov
mov
inc
fbstp
push
nop
iret
adcl
shll
lea
movsl
cmp
ret
test
lods
or
pop
popl
pop
add
adc
adc
in
cmp
imul
mov
jle
dec
mov
cmp
imul
jmp
insl
lcall
sub
sub
in
test
test
fidivs
jmp
mov
sub
adc
push
jbe
adc
in
fimull
outsl
daa
and
add
int3
pop
dec
gs
mov
xor
inc
fucomi
jno
jp
imul
sub
dec
jmp
xchg
sub
fdivrl
and
cltd
std
add
rcr
push
mov
cmpsb
xchg
jg
lea
arpl
adc
and
push
shr
pop
cs
lahf
pushl
fwait
lods
inc
pop
mov
mov
fs
push
pop
xor
incb
ret
push
mov
dec
out
push
jbe
dec
push
outsb
negb
ret
rcrl
sub
lds
in
pop
rol
aad
enter
push
nopl
stos
add
nop
repnz
mov
push
inc
pop
xor
xchg
out
push
adcb
imul
dec
inc
and
hlt
pop
jne
pop
test
roll
movsl
inc
cmpsl
inc
pop
ret
push
mov
or
hlt
loope
dec
repz
push
frstor
jp
cmp
sub
dec
test
sub
and
sbb
fcomip
lock
push
xchg
or
jg
pop
adc
sahf
add
imul
jnp
sysret
insb
ret
ret
cmpsl
imul
ret
rcl
testl
fcoms
and
enter
sti
lods
pop
in
lcall
xchg
cmp
sbb
clc
xchg
bound
fldl2t
lahf
pop
pop
push
pop
out
adc
in
icebp
pop
mov
sub
inc
push
and
sarl
push
cmc
mov
das
or
mov
insl
call
int3
jbe
aas
lock
and
mov
jg
pop
push
xor
gs
inc
jecxz
shr
addl
cmp
adc
cli
mov
pop
sub
sahf
mov
mov
rorl
pop
jae
jl
jmp
js
stos
xchg
mov
jp
repz
and
jo
clc
sub
movsl
aas
push
mov
lea
mov
sahf
sbb
js
jbe
pop
cmpb
jle
adc
ror
cwtl
push
dec
inc
and
pop
std
gs
mov
add
and
fldt
in
aad
out
test
cmp
mov
cs
addr16
mov
jnp
mov
lods
mov
aas
gs
or
dec
pop
sub
repnz
mov
stos
cmp
bound
jle
call
inc
xchg
repnz
int3
push
popl
fbstp
mov
sub
push
mov
dec
enter
enter
cli
imul
mov
data16
xor
imul
loop
outsl
jmp
les
jle
pop
out
push
or
dec
jle
dec
addr16
test
out
pop
lock
add
sub
sub
pop
jne
mov
add
out
mov
rcrb
hlt
xchg
xor
add
inc
pop
in
ds
mov
mov
pop
sub
fsubp
jl
push
pop
adc
in
or
mov
test
mov
pop
mov
fsubp
jge
cmpsl
cmp
loopne
xchg
pushf
js
mov
repz
lods
mov
mov
inc
xchg
sub
jbe
mov
push
xchg
cli
or
aaa
dec
in
mov
xor
add
add
adc
scas
dec
mov
lds
push
push
pop
aad
mov
stos
cs
repnz
dec
jns
pop
stos
loop
stc
dec
dec
jecxz
mov
ljmp
or
or
mov
icebp
sub
and
testb
pop
mov
mov
popf
stos
adc
xor
sbb
push
call
xor
fsubl
cld
sub
pop
ja
ret
das
scas
cwtl
loope
scas
cmp
mov
jmp
jae
add
xchg
jns
pop
lea
out
scas
out
adc
daa
mov
je
sub
inc
lds
rclb
rorb
push
inc
fldt
xorl
in
cwtl
test
lods
lock
fldenv
arpl
xor
inc
mov
loopne
aaa
out
je
and
scas
mov
xchg
ljmp
sub
aam
repz
movsl
cmp
add
es
push
pop
sub
pushf
and
cmp
scas
jbe
or
xchg
lock
rcrl
lea
arpl
inc
orb
jne
mov
cmp
and
pop
icebp
jno
rcrb
inc
repz
xor
adc
adc
mov
mov
jle
add
clc
adc
and
ja
repnz
je
or
test
mov
or
cmp
cld
jo
mov
push
iret
push
ljmp
cmpsb
xor
andb
into
xchg
cmpsl
jns,pn
jl
fsub
jb
dec
rorb
mov
push
cmovno
out
and
cmpsb
sahf
xchg
cltd
aas
stos
sbbb
jne
sbb
ds
movsl
lock
popf
cld
inc
xchg
mov
xchg
pushf
ret
idivb
mov
lods
sarl
pusha
add
push
nop
pusha
outsl
cmp
out
cmp
dec
sub
or
sbb
cmc
insb
mov
add
dec
shrb
cltd
cmp
imul
bound
add
xchg
adc
mov
fcomi
adc
xor
mov
mov
sbb
sahf
test
pop
push
int
into
cltd
jo
js
and
fsubl
int3
movsl
inc
jmp
cli
push
lret
dec
cli
and
xchg
mov
push
mov
jns
jecxz
loop
notl
adc
sub
or
je
lahf
push
add
xlat
scas
pop
and
mov
xchg
into
and
in
loopne
push
adc
lods
pop
mov
mov
ss
sub
or
jg
daa
ljmp
pop
mov
daa
mov
test
mov
lcall
std
cld
pop
add
xchg
cwtl
fs
imulb
jl
mov
shll
adc
aaa
rcrl
push
dec
and
sub
add
lea
loop
xor
lahf
push
inc
push
sarb
pop
lods
std
mov
cltd
lahf
cmp
pop
scas
cld
gs
pop
repz
imul
jns
aad
rolb
mov
sbb
repz
insb
nop
stos
adc
sbb
mov
add
adc
popa
in
mov
push
movsb
mov
push
ror
push
inc
icebp
in
inc
xor
jbe
jae
sbb
je
inc
xchg
lret
sti
clc
out
cld
fcoms
iret
jp
shl
adc
add
addr16
aas
and
jnp
hlt
andl
out
cwtl
das
add
in
test
inc
sbb
cmpsl
pop
add
inc
loop
mov
cltd
mov
aas
insl
sahf
cli
add
jmp
adc
ljmp
pop
or
test
push
imul
ljmp
inc
mov
xchg
sbb
fsubrp
mov
and
test
mov
call
insb
ss
std
ret
xor
fsubr
inc
mov
pushf
pop
andb
jge
bound
mov
jb
mov
jl
adc
push
fisubrl
or
popf
cld
cwtl
jns
cmc
scas
push
xchg
andl
cwtl
movsb
add
and
push
mov
sub
jg
pop
jl
cltd
pop
mov
loop
mov
inc
mov
insb
shlb
cmp
push
sbb
and
hlt
sbb
jl,pt
pop
push
loopne
or
sub
fisubrs
hlt
push
in
mov
stc
test
pushf
mov
adc
jmp
mov
inc
mov
repz
mov
std
ss
mov
lods
pop
aad
movsl
push
addr16
repz
outsl
fnsave
pop
out
mov
xor
dec
mov
outsl
fstp
mov
fs
loopne
adc
fnstenv
lret
fs
popa
lcall
mov
je
imul
cmpsb
mov
sbbl
sbb
mov
ret
dec
cmpsl
into
dec
hlt
jl
in
ret
lahf
xchg
cmp
mov
punpckhdq
scas
adc
test
sbb
pushf
stos
dec
cmp
fisubrs
inc
call
inc
cltd
pop
inc
dec
fisubs
mov
and
push
jae
imul
negb
fdivs
dec
push
pop
insl
jnp
in
jmp
fsubr
jnp
idivl
outsl
lret
xor
mov
fisttps
aam
imul
push
cmp
repz
and
push
pop
popf
sti
jecxz
xor
pop
aaa
clc
ljmp
mov
sbb
cmp
fdivs
int3
cltd
subl
xchg
fisubl
sub
sub
test
mov
and
jo
mov
xor
loopne
int3
loope
lcall
movsb
aas
into
or
ja
js
int3
xchg
push
aad
pop
dec
mov
sbb
mov
pop
mov
fcmovnu
mov
push
inc
cmpsb
inc
mov
test
fistl
inc
lods
sbb
xor
insb
jno
add
into
fldcw
dec
lahf
ss
subb
es
scas
cmp
xlat
imul
pusha
flds
call
and
mov
mov
and
adc
dec
pop
and
xchg
push
movsl
adc
xchg
jge
mov
jnp
fcomps
imul
dec
dec
and
pushf
and
push
sahf
and
sub
mov
fcompl
push
lcall
cli
mov
fcom
mov
xor
les
pop
shrb
stc
adc
jbe
or
ljmp
add
push
push
addr16
bound
decl
jmp
aaa
aaa
mov
sub
xor
notl
xlat
sahf
filds
dec
jne
insb
fnstcw
clc
fadd
xchg
lods
cltd
inc
loopne
int
xchg
lret
or
xor
fsubrs
push
xchg
test
lds
scas
xchg
bound
lds
test
sti
push
sub
xor
lock
pop
movsl
push
lods
mov
movsl
pop
jo
inc
dec
out
lock
sbb
insl
cmpl
filds
std
cli
inc
lcall
push
pushf
add
shl
xchg
sahf
jo
rolb
iret
daa
sbb
bndstx
out
mov
sahf
insl
and
adc
xchg
cmp
xchg
jl
nop
inc
mov
fnsave
or
aaa
and
ljmp
pop
dec
jmp
jecxz
fdivs
stos
inc
jne
xchg
mov
shl
les
cmc
imul
add
ss
stos
jb
fstpl
add
cmpsl
mov
ficompl
fstpt
cmpsl
cmp
std
xchg
pop
mov
push
loop
cmp
sub
sub
mov
mov
pushf
cmp
int
call
push
jecxz
insl
stc
add
imul
lret
out
push
dec
push
jmp
call
jecxz
rclb
xchg
pop
jb
jmp
cmp
xor
imul
in
into
pop
sbb
push
jl
mov
inc
mov
adc
sbb
adc
xchg
jmp
fwait
je
or
fnsave
lahf
stos
movsl
push
fnsave
ret
sbb
int
adc
sahf
in
movsb
add
add
jmp
ss
jno
push
repz
mov
fwait
cmpsl
xor
jo
ret
test
pop
jecxz
adc
daa
mov
lock
xlat
inc
xlat
sub
xchg
ljmp
lret
xlat
push
and
gs
nop
sbb
js
fcompl
mov
adc
nop
cmpsl
jecxz
lret
push
out
mov
mov
ss
inc
pop
mov
sarl
lock
lods
lods
inc
pushf
push
nop
sub
xor
movsl
cmp
enter
mov
fnstenv
sub
mov
int3
mov
lea
add
push
out
jno
mull
out
cmp
xlat
mov
mov
mov
xor
aam
adc
push
test
xchg
add
dec
adc
lret
jae
stos
jl
or
aad
call
jb
fistpl
mov
add
in
imul
jle
das
inc
mov
clc
mov
ret
dec
xchg
daa
and
mov
mov
add
mov
sbb
jb
movsl
iret
testl
sub
pop
aam
cwtl
cmp
mov
out
in
ret
call
ret
out
adc
and
xor
movsl
sar
xchg
add
fsubrs
test
jno
roll
add
rcl
add
popf
cli
add
loope
jbe
test
xchg
pop
xor
and
dec
int3
dec
jge
pop
push
rclb
adc
loopne
icebp
inc
jns
aas
fwait
mov
inc
sbb
push
jno
cltd
ficomps
inc
pop
fldl
xchg
mov
pusha
pop
sbb
enter
mov
xchg
nop
xor
outsl
push
mov
out
and
cs
orl
push
sub
shll
das
std
jns
jle
push
rcr
adcl
pop
pop
repnz
dec
dec
icebp
push
adc
cltd
insl
aas
js
aaa
mov
insb
inc
loop
cmc
mov
add
jae
imulb
mov
ret
cltd
test
sbb
into
and
push
clc
and
sbb
mov
fwait
test
jne
jnp
lret
sub
add
adc
stos
xchg
push
mov
sbb
cmpb
inc
insb
data16
shrb
xor
sub
aaa
in
xor
sbbb
or
sti
je
lock
dec
xor
mov
fucomip
mov
decb
xor
outsb
addl
jae
in
or
fdivrl
les
loop
mov
sbb
adc
push
cwtl
es
arpl
je
test
data16
outsb
push
xchg
add
inc
fstpl
add
jp
popf
bound
mov
fidivs
cmp
aas
les
in
add
mov
lock
xor
push
sbb
push
neg
je
cmp
popf
iret
filds
add
dec
mov
mov
mov
loopne
xor
into
fistpll
pop
je
jmp
aad
loop
bound
ret
loope
add
int
pop
sub
mov
inc
or
mov
mov
inc
lods
jp
dec
je
mov
lods
sub
pop
sub
out
mov
mov
jp
js
mov
push
aas
shr
sbb
xchg
push
fsts
sarl
aad
xor
mov
imul
js
push
pop
imul
or
add
lret
pop
xor
ljmp
ja
jno
scas
ret
inc
nop
adc
jbe
mov
adc
pusha
jbe
sub
je
mov
mov
mov
jno
or
shr
mov
mov
or
aad
testl
scas
push
call
test
jo
nop
jae
rcll
scas
jno
mov
sub
int
call
idivl
std
rcrb
inc
push
and
pushf
mov
int
sar
cmp
idivb
inc
sbb
fsubs
dec
sbb
inc
enter
out
or
das
inc
daa
cmp
mov
dec
push
fucomp
xor
push
xor
icebp
scas
call
jecxz
cmpl
add
adc
das
jl
xor
cltd
mov
push
pop
push
mov
fwait
sub
std
and
unpcklps
push
mov
les
add
inc
cwtl
sub
lds
mov
adc
xchg
fstps
arpl
inc
sahf
lods
cmp
add
roll
push
ss
sbb
or
or
shrb
leave
jmp
pop
bnd
aam
add
xchg
add
sbb
cmpsl
shll
mov
data16
std
gs
and
add
orl
sub
inc
test
add
fbstp
test
xor
mov
inc
fsubrs
push
arpl
loopne
adc
xchg
cmc
cmp
hlt
push
fistps
add
pop
es
jb
aad
test
inc
pushf
cltd
push
mov
fcoms
inc
jge
push
cltd
fucomi
lret
xchg
icebp
jge
enter
mov
repz
out
mov
add
mov
jmp
pop
dec
mov
outsb
xorb
sti
dec
notb
sbb
xor
sbb
cld
cmp
mov
adc
push
nop
jnp
je
xor
fistl
fldt
jl
lods
mov
mov
outsl
rorb
int3
das
out
jae
xchg
into
lea
mov
mov
dec
ds
add
inc
push
fnsave
lret
and
mov
ret
add
ljmp
ljmp
pop
add
and
or
xor
pop
je
xchg
jg
in
or
mov
bound
sbb
scas
js
aas
mov
inc
jo
jno
and
xchg
jo
call
arpl
int
push
je
push
pop
out
pop
jmp
leave
mov
lods
push
mull
pop
jae
andb
mov
orl
into
push
pop
push
and
push
cs
rorl
mov
jg
cmp
mov
ret
repz
scas
inc
sbb
jbe
jg
dec
sti
jo
add
sbb
dec
dec
aas
sbb
pop
sbb
mov
lds
cld
push
scas
daa
jecxz
rcll
and
data16
fs
pop
dec
sub
fisubrs
pavgb
into
fdiv
and
mov
shlb
mov
mov
xor
das
lds
in
fsubrs
add
loopne
inc
sbb
repnz
call
shrl
pop
insb
in
cmp
mov
pop
stc
xlat
lea
fimuls
bound
adc
push
daa
jnp
pop
sahf
push
mov
jg
sbb
add
mov
jne
lods
push
xchg
leave
cmp
mov
xlat
jmp
push
and
xchg
sub
inc
mov
mov
cwtl
arpl
jno
cltd
test
pop
inc
outsb
mov
test
fucomip
or
subb
lods
add
mov
cmp
lods
pop
fwait
and
pop
cwtl
testb
jmp
loop
enter
mov
pop
xor
movsl
lods
sub
testl
aaa
or
push
jmp
adc
mov
mov
fimuls
jmp
aaa
cmp
popf
mov
ret
mov
mov
mov
push
or
cltd
lods
movsb
sub
aad
and
in
int3
shlb
cmovg
test
sub
lea
aad
sub
and
pop
dec
notb
stos
xchg
mov
xlat
push
sub
fwait
sbb
mov
mov
ret
jns
pop
sahf
ret
push
mov
in
shll
out
dec
push
aam
aad
cmpsb
push
bound
lods
hlt
data16
int
lret
xor
sti
add
sbb
imul
pushf
xor
lock
out
ret
dec
push
std
dec
scas
jl
xchg
cmc
jb
ss
test
rcrl
jo
push
lahf
jbe
mov
cld
clc
imul
cmpsb
aad
mov
add
inc
and
bound
push
lahf
adc
jnp
mov
cmp
dec
fisttpll
movsb
fldenv
es
sbb
stc
pop
int3
sbbb
cs
shlb
stc
negl
adc
lea
inc
sbb
outsb
add
lahf
aas
stos
push
fldcw
xchg
sub
cli
ficoml
xchg
mulb
iret
call
and
fists
jo
ds
push
mov
mov
add
arpl
repnz
and
cli
lea
jns
push
jp
and
sbb
mov
test
pop
cmp
push
aad
inc
int
jecxz
in
mov
jae
cltd
aam
call
std
cltd
outsl
jle
push
cmp
push
loop
cwtl
adc
push
and
mov
mov
mov
mov
sub
adc
sbb
cmp
in
outsl
shlb
or
xchg
jg
test
nop
daa
rorl
int3
mov
xchg
inc
lds
lret
sbb
nop
cmp
inc
ja
sub
pop
fdivrl
xchg
xchg
int
add
ja
sub
push
jmp
jle
jge
and
scas
xchg
jge
mov
pop
dec
rcrl
push
sub
shrd
loopne
push
dec
movsb
mov
jno
add
arpl
push
sub
sub
movsb
inc
enter
cmp
mov
mov
mov
pop
push
insl
fwait
out
jmp
jo
mov
sbb
push
ss
pop
mov
lret
xlat
or
pusha
sahf
pop
cmp
pop
clc
shr
int3
pop
adc
and
jno
xor
or
xchg
mov
push
push
mov
jge
scas
mov
icebp
xchg
sub
dec
mov
dec
and
jnp
out
cwtl
out
addl
mov
push
push
nop
mov
cmp
add
aam
push
push
jnp
lret
or
sub
test
or
jbe
xchg
xchg
and
test
test
movb
cmp
dec
pusha
icebp
mov
xor
mov
cwtl
inc
fisubl
insl
or
outsb
add
jno
sub
xchg
gs
imul
inc
mov
inc
inc
aas
jp
inc
and
inc
xlat
and
push
mov
lock
dec
lds
rcll
inc
mov
les
cmp
sbb
cmc
add
inc
ss
xchg
jmp
ror
adc
inc
fcomi
dec
stos
mov
inc
clc
or
cmp
pop
ja
lcall
adc
pop
jnp
jl
pop
in
jecxz
mov
inc
or
jmp
shlb
repz
pop
or
pushf
xor
push
andb
or
rolb
push
push
pusha
call
cld
repnz
loope
xor
pop
mov
dec
mov
stc
scas
pusha
jle
es
out
add
jg
mov
les
insb
scas
stc
shl
fisubl
mov
arpl
cmp
sub
loopne
add
hlt
inc
fucomp
orl
dec
bound
mov
cmp
pusha
fistl
out
daa
push
jnp
test
jge
adc
rorl
ss
dec
addb
mov
push
dec
fists
mov
dec
jmp
cmpsb
out
push
out
jno
ss
mov
dec
pop
icebp
or
stos
sub
mov
jno
pop
cli
xchg
mov
loope
fcomps
mov
clc
jne
les
into
inc
in
test
cmp
or
mov
rcr
sbb
jle
nop
in
jmp
sbb
ret
in
subb
xchg
movsl
mov
loop
mov
pop
pop
scas
cmpl
fs
xchg
test
sti
mov
roll
push
in
sub
mov
push
lea
mov
hlt
cli
adcb
mov
subl
aad
dec
repz
sub
sbbl
dec
movsb
ss
push
in
sbb
jbe
mov
push
je
rcl
xor
dec
les
call
mov
sbb
ljmp
lret
sub
xor
loop
stos
sbb
cld
mov
adc
or
jp
movsb
mov
pop
les
lods
sbb
imul
insl
mov
inc
mov
int3
xchg
pop
jle
scas
les
flds
ss
mov
jbe
sub
sub
lea
jmp
imul
xor
scas
icebp
mov
sub
pop
popf
xor
dec
in
loopne,pt
lods
fisubrl
lods
cmp
mov
mov
cmp
rorl
jnp
xchg
xor
xor
jbe
jb
lret
inc
dec
push
add
jne
movsb
and
in
inc
fidivl
aam
rcrb
inc
fisubl
add
xor
mov
dec
cli
mov
mov
mov
imul
dec
icebp
xchg
outsb
lods
mov
xchg
mov
lret
sbb
mov
xchg
cmp
jl
pop
pop
add
jge
sti
sbb
cmp
sub
xorl
xchg
dec
or
das
rolb
adc
inc
inc
test
push
cmp
xchg
adc
mov
adc
pop
xlat
cmp
or
add
pop
out
enter
xchg
adc
or
cmp
sahf
in
cld
lds
or
mov
int
mov
imul
pop
xchg
insb
adc
push
test
mov
imul
dec
xchg
hlt
cmc
cs
pop
xor
pop
lock
push
inc
int
ja
jl
sbb
push
or
lret
int
push
fwait
or
xchg
lret
imul
xor
data16
jnp
enter
push
adc
adc
pusha
xor
mov
hlt
notb
adc
ret
cmp
or
or
mov
out
in
xchg
js
add
mov
sub
div
mov
pop
je
incl
test
or
mov
lret
clc
cmp
sbb
xchg
enter
lods
mov
fsubrp
add
mov
push
icebp
dec
mov
out
int
int
xchg
cmpsl
add
fs
dec
test
sub
fwait
icebp
ss
and
cmpsl
lcall
sub
inc
cmc
mov
mov
out
add
cmp
lods
inc
inc
stc
or
gs
in
push
nop
daa
cmp
ror
out
sub
popa
arpl
jno
fs
loope
dec
jecxz
jge
pop
add
mov
lods
jnp
xchg
out
jmp
jb
scas
fildl
or
pop
stos
mov
mov
push
outsb
out
mov
ss
ja
mov
aam
sbb
sbb
stos
xor
fwait
mov
cwtl
fcmovnb
bound
mov
cmpsb
mov
inc
inc
popa
xchg
sbbl
cmpsb
scas
ja
and
das
adc
push
call
fiadds
divb
or
inc
push
push
es
pop
test
sar
xchg
add
push
pop
sub
iret
pop
jns
cmp
adc
sahf
dec
cmpsb
cmp
fisttpll
aam
jno
ja
xchg
out
sbb
insb
scas
test
xor
push
mov
movsb
sub
pop
insb
cmp
cmp
mov
loope
std
lahf
and
sbb
sbb
out
lods
and
mov
fisttps
adc
jae
jl
mov
jg
jecxz
subb
jecxz
pop
and
add
fnsave
mov
fs
rol
sbb
mov
mov
or
insl
cmp
les
push
cmpsl
mov
lds
jecxz
adc
loop
aas
fcompl
popf
xor
es
jne
dec
pushf
pop
ret
cmc
adc
cmp
rcrb
push
mov
nop
mov
or
mov
aas
ret
into
sub
jae
cmp
push
mov
cwtl
out
icebp
jl
test
mov
cmp
xchg
cmc
inc
dec
in
stos
xchg
push
xor
nop
or
mov
mul
hlt
jno
mov
or
aas
movsb
mov
idivl
std
pop
mov
add
inc
shll
sbb
pop
rcll
push
push
andl
or
mov
bound
outsb
mov
xchg
sarl
push
jne
ret
sub
xchg
ret
xchg
test
mov
popf
jmp
cmovp
jecxz
xchg
pop
jmp
stos
aam
jge
add
adc
xchg
mov
xlat
lea
xchg
pop
sbb
test
movsl
cmp
push
inc
gs
ret
sub
sub
xor
stos
rcrl
pop
lods
fdivrs
int3
pop
repnz
xor
cmp
ss
in
cmc
addr16
cwtl
bound
pop
jmp
add
cmp
sbb
mov
rol
sbb
xchg
jo
movsl
cmp
es
in
fcmovb
pop
call
or
jno
push
movsb
and
dec
mov
jg
movsl
xchg
adc
xor
popf
pushaw
xor
leave
push
pop
icebp
popf
movsb
inc
fdivr
mov
adc
iret
inc
decl
in
push
push
pushf
push
ret
xor
pop
cmp
dec
pop
cvtpi2ps
add
jo
xchg
sub
mov
outsb
push
sbb
push
neg
cmc
scas
arpl
rclb
push
xor
mov
mov
lods
jmp
arpl
sarl
xchg
xor
jb
out
dec
gs
andb
enter
fisttpll
mov
rclb
repnz
aas
jno
out
jle
sbb
dec
cli
push
hlt
icebp
mov
data16
dec
xchg
cmp
mov
fsts
mov
xchg
or
lret
subl
push
ret
sbb
fsubrs
and
and
add
stos
dec
jne
inc
push
out
jp
test
jns
aaa
or
xchg
and
cmp
inc
sar
jg
out
aas
out
xor
or
mov
mov
into
fwait
inc
mov
or
xchg
push
hlt
lcall
int3
cmp
mov
imulb
nop
inc
inc
push
cmpsl
sti
mov
inc
mov
lds
sbb
repz
ret
and
mov
out
fnstsw
clc
dec
push
mov
push
cmp
fwait
rol
push
jae
lahf
mov
jns
out
out
es
inc
mov
loopne
or
xchg
dec
dec
fistpll
or
add
push
lods
mov
push
push
leave
mov
dec
push
sbb
adc
inc
and
mov
jg
into
loop,pt
loopne
leave
dec
les
int
mov
xchg
out
adc
lods
hlt
mov
aas
fucomp
popf
adc
stos
aaa
adc
cmpsl
jecxz
ret
je
push
jae
mov
pop
adc
orb
xor
add
call
or
stos
dec
adc
addr16
out
sub
xchg
mov
jne
jl
pop
mov
popf
xchg
inc
iret
clc
cmp
sub
xchg
sub
mov
out
jecxz
push
jb
mov
xor
daa
ja
inc
fadds
adc
int3
clc
push
mov
jl
sub
mov
push
jno
cwtl
outsb
add
fs
pop
icebp
mov
loope
mov
add
enter
leave
xchg
jo
je
in
and
incb
and
mov
mov
xor
pop
test
pop
insb
mov
mov
sub
xor
sub
mulb
rolb
jns
notb
push
jecxz
sbbb
push
rolb
das
xorl
cmp
mov
enter
or
cmp
push
leave
pusha
push
stc
sub
out
sub
loope
mov
rol
scas
mov
cltd
mov
addb
pop
push
xor
xchg
jns
mov
dec
shrb
or
stos
cmp
stos
xor
dec
rcl
jb
cmp
inc
mov
lds
data16
hlt
push
in
dec
or
jnp
jno
out
insl
xchg
inc
jg
pushl
nop
das
ss
aam
imul
test
push
les
in
inc
fistl
call
jg
inc
dec
inc
mov
fistl
fistl
fstpt
popa
fnstsw
sub
xchg
dec
dec
popf
sahf
or
aam
pop
sub
insl
jge
into
inc
or
stc
mov
imul
shlb
fs
mov
cli
inc
lret
dec
call
js
ljmp
sub
shlb
mov
mov
sbb
jne
or
je
dec
mov
cltd
cmp
mov
mov
enter
add
or
push
and
add
hlt
mov
inc
push
sbb
mov
int
push
jmp
mov
test
test
fistpl
mov
sahf
not
pop
cld
cli
xlat
pushf
imulb
je
jg
cmp
adc
add
insb
out
aaa
ljmp
pop
adc
and
dec
add
insb
and
cli
rclb
adc
adc
mov
sub
and
fistps
leave
test
idivl
add
mov
pop
ja
xlat
and
pop
mov
mov
mov
sbbb
fsubrs
jg
shrb
test
mov
lcall
mov
int
sbb
adcl
dec
mov
mov
fnstenv
xchg
inc
inc
cmp
jno
gs
jo
xor
push
sahf
adc
aas
cmp
fxch
xor
in
inc
gs
mov
ljmp
jns
pop
je
out
jbe
mov
pop
pop
or
shrl
jp
jb
not
nop
mov
xchg
xor
sahf
cmc
mov
test
out
or
ret
xchg
or
rol
inc
adc
daa
imul
xchg
or
jge
cmp
lock
int
inc
mov
inc
ljmp
lret
cmp
es
popf
pop
icebp
lds
mov
iret
clc
pop
dec
lods
js
push
in
xchg
cltd
das
jp
jle
jnp
sub
mov
jbe
dec
sub
movsb
pop
add
rcll
aaa
pop
test
pop
test
out
aas
mov
insl
scas
xor
sub
mov
or
xor
fbstp
out
push
mov
aaa
jnp
scas
popf
inc
sbb
and
jg
movb
pop
or
decb
in
mov
sub
sti
xchg
or
sti
lcall
pop
mov
fsubrs
shrb
int3
mov
outsb
inc
lret
cwtl
mov
push
jmp
or
out
pop
dec
or
sti
and
jmp
and
xchg
jg
xchg
movsl
pop
out
cmpsl
adc
xor
int3
daa
ja
mov
gs
call
adcl
lods
push
adc
xchg
inc
push
jb
or
push
push
cs
mov
mov
negb
push
or
sarb
add
shrb
sbb
sub
imul
push
mov
loopne
pop
jno
mov
inc
or
icebp
int
jmp
adc
mov
mov
es
repz
int
pop
jbe
es
pop
push
pop
insl
push
dec
adc
test
fidivrs
sbb
lret
jno
pop
mov
test
inc
ficoml
push
sub
repz
data16
ja
mov
int3
gs
pop
cwtl
cmp
fnstcw
movsb
inc
ja
aaa
subl
sbb
sbb
or
arpl
cmpsl
add
mov
pop
adc
mov
hlt
adc
icebp
orb
pop
push
jnp
xor
mov
pop
aas
aad
cli
add
stos
pop
repz
or
rcl
jne
push
cmc
stc
xchg
pop
aaa
sahf
daa
dec
fistl
mov
cld
mov
push
cmp
stos
jecxz
mov
lcall
scas
outsl
mov
in
inc
sbb
add
inc
popa
imul
mov
outsl
mov
pop
sub
jb
gs
int
lods
push
jne
inc
stos
jnp
addb
jecxz
movsl
cmp
and
test
je
pop
or
cmpsb
pop
aas
loopne
shrl
test
mov
enter
data16
ret
cld
mov
or
gs
ds
add
xor
orl
mov
sbb
pop
ret
xor
enter
divl
or
sbb
jno
fadd
lcall
push
pop
arpl
sbb
mov
imul
das
xchg
sub
stos
mov
js
std
xchg
or
out
cmp
dec
pop
je
test
lret
mov
push
mov
ficomps
mov
cmpl
cmp
cwtl
fcomp
pop
repnz
sbb
mov
add
stc
das
sbb
and
orb
inc
das
push
neg
or
sbb
sub
push
add
xorl
sub
pop
mov
dec
loope
dec
mov
repz
push
or
or
ss
mov
mov
xchg
in
add
aad
inc
jns
ss
jbe
cmc
int3
mov
add
hlt
xor
stos
jo
out
cltd
ret
pop
ficompl
push
sbb
pop
cmp
sahf
out
mov
dec
outsb
daa
sti
cld
cmp
stos
mov
cmc
dec
cwtl
call
dec
js
push
mov
add
lods
cmp
out
pusha
inc
enter
push
test
pop
into
arpl
push
jbe
int3
mov
sub
and
add
jnp
jge
inc
mov
fcmove
je
dec
inc
fdivrl
sti
pushf
mov
hlt
adc
push
popf
mov
decl
xor
or
mov
popa
sbb
and
loope
ljmp
xor
inc
iret
data16
add
popf
pop
pushf
add
sahf
sbb
inc
pop
lock
in
mov
aad
push
jae
cvtps2pd
lret
mov
pop
push
xor
mov
xor
or
test
cli
lahf
cmpsb
aas
rcl
mov
push
icebp
clc
pop
lock
dec
pop
test
sahf
jg
sub
add
or
mov
sub
sub
ss
ss
push
push
pop
imul
xchg
add
js
ljmp
dec
push
xchg
into
pop
cmp
lods
addr16
cmp
inc
jle
dec
daa
repnz
repz
test
and
pop
sbb
adc
or
es
push
mov
sbb
add
lea
mov
xor
ret
sub
stos
lods
inc
fldl
lret
lcall
leave
fcoml
or
scas
je
pop
push
data16
cmpl
gs
mov
push
hlt
orl
std
add
shufps
or
sub
push
mov
addr16
push
idivb
mov
xchg
dec
add
clc
xchg
sbb
add
or
inc
mov
dec
cmp
pushw
sahf
mov
loopne
test
fiaddl
ljmp
xchg
and
in
fucom
lret
mov
pop
out
xchg
rolb
sbb
popa
clc
mov
les
idiv
sub
das
push
popf
add
mov
loopne
mov
lock
lret
adc
jnp
pcmpgtd
popf
aaa
into
ljmp
push
push
inc
pusha
dec
dec
pop
ss
shlb
loope
rolb
shlb
fldl2e
adc
push
cmpl
movaps
mov
std
mov
mov
aad
ja
aas
mov
adc
adc
push
faddp
lret
sbbl
or
push
aas
xchg
mov
mov
adc
mov
cmp
sahf
cwtl
das
shlb
mov
and
sbb
mov
cmp
or
jp
inc
cmp
je
add
sub
push
aas
fmuls
lahf
xor
mov
sbb
sbb
pop
dec
xchg
mov
xchg
dec
packssdw
filds
push
adc
mov
fists
xor
sbb
adc
mov
sbb
ret
out
cmp
mov
lret
add
movsb
push
mov
jb
jle
jnp
fsubrs
mov
stos
inc
jl
test
aas
jmp
mov
in
cld
xlat
xchg
jmp
fmuls
jo
xorl
add
popa
xor
loop
adc
jnp
push
stc
fstpt
push
insb
sbb
push
and
xlat
fidivs
push
aaa
jl
cmp
lahf
push
pop
jbe
jno
mov
mov
out
les
pop
sub
mov
sub
enter
jne
pop
lret
mov
mov
xor
lret
out
adc
jnp
dec
fidivs
cwtl
fidivs
add
jge
addr16
push
movsl
in
lcall
shlb
mov
out
add
movsb
jo
or
mov
iret
aad
inc
loopne
jb
mov
jno
mov
cmp
fildll
jns
jmp
xchg
push
mov
in
add
xor
push
push
mov
outsb
mov
mov
or
adc
fildl
push
sub
insl
sub
push
pop
in
push
mov
add
fidivrl
dec
and
in
sbbl
push
and
xchg
push
lret
sub
add
add
scas
ja
lea
int
cmc
jg
pop
and
mov
rorb
add
lret
sub
xor
cmc
shlb
jb
je
pop
pop
jb
dec
adc
adc
lds
adc
pop
insl
adc
ds
and
mov
mov
sbb
push
lods
int3
sbbl
dec
add
jecxz
fistl
das
add
jbe
ret
out
jl
jmp
iret
lret
lcall
or
jbe
mov
push
xorl
add
push
int3
or
xor
mov
dec
cmp
pusha
mov
dec
pop
iret
jge
sub
mov
ds
mov
sbb
mov
cwtl
repz
imul
mov
or
dec
xor
jae
rcll
push
cwtl
rcl
push
inc
add
mov
jle
call
addr16
jo
or
int
pop
out
cmp
jmp
cmp
xor
out
inc
cltd
jno
les
dec
dec
fildl
jae
test
jecxz
xchg
dec
arpl
mov
and
es
in
mov
xchg
mov
repnz
inc
ror
sub
mov
dec
mov
lret
push
lock
push
repnz
and
lret
scas
cmpsb
mov
xlat
movb
dec
pop
std
or
loopne
sbb
xchg
ds
push
push
add
out
jae
orb
loop
inc
push
out
fldenv
mov
mov
repz
mov
idivl
push
xchg
xchg
inc
imul
int3
das
cmp
imul
imul
pop
mov
std
and
dec
sub
pop
push
sub
pop
scas
sub
fcmovnbe
cmpb
mov
ja
dec
and
popa
push
daa
or
fidivs
pop
add
add
rcrb
and
xchg
inc
jl
jns
in
sbb
jl,pt
out
in
fcmove
or
jae
bound
aam
add
gs
push
mov
movsl
adc
pop
inc
into
lea
adc
test
and
sbb
dec
add
mov
fidivl
mov
pop
jo
sub
sbb
std
lods
cs
push
ss
jns
pop
xor
mov
ds
and
cmp
push
xchg
dec
lds
mov
pop
jmp
out
cmp
aas
mov
test
cmpsb
cli
in
test
lret
push
push
ret
or
aaa
nop
add
pmulhuw
out
ret
add
enter
sti
push
sbb
loopne
ret
leave
push
push
outsb
push
lret
shrl
jae
mov
ficompl
xor
inc
xor
in
push
lods
out
adc
jge
xor
cs
test
cli
and
mov
inc
push
add
pop
lock
sbb
ja
mov
int3
ret
inc
pushf
xor
jb
iret
arpl
adc
inc
mov
or
xor
jecxz
and
mov
adc
data16
sbb
movlps
push
inc
addr16
mov
pop
mov
fidivl
inc
call
arpl
pop
jne
fsubrl
movsb
mov
and
bound
hlt
ret
xchg
mov
or
xchg
jne
scas
imul
mov
dec
mov
loopne
ljmp
jns
aam
xchg
mov
scas
mov
mov
dec
ljmp
jns,pn
addr16
subb
fnstenv
dec
sub
sub
inc
fcomps
pop
mov
pop
rorb
aam
jae
pop
mov
dec
popa
shrl
jo
and
xor
inc
jecxz
lods
sarl
js
out
jae
push
nop
adc
sbb
fidivs
jae
cmp
rolb
xchg
pop
mov
add
lret
bound
and
pop
add
jge
lds
jns
mov
adc
adc
jge
jb
jge
xchg
dec
inc
pop
pop
cld
iret
data16
xchg
insb
in
cmp
add
cltd
mov
addr16
pop
out
add
fimull
push
inc
mov
cmp
stos
pop
mov
push
mov
lods
jns
fsubrp
into
aam
add
push
jmp
lahf
outsl
test
shrl
cmp
push
into
aad
cmp
imul
nop
pop
fnstenv
rsqrtps
dec
dec
cld
mov
mov
fxch
mov
jbe
sub
mov
push
push
mov
fistpll
into
pop
mov
lock
push
jb
fildl
ss
dec
stos
ret
push
pop
repnz
xchg
mov
adc
cmc
push
cmpb
jle
mov
cmp
jmp
js
arpl
mov
add
sbb
jne
jne
inc
push
mov
dec
loope
jl
loopew
imul
mov
mov
dec
mov
cli
push
nop
pop
sbb
lods
popa
pusha
fistps
lcall
in
inc
fbstp
lcall
mov
pop
shl
test
mov
jg
sbb
mov
cmc
fstpl
mov
fisttpll
nop
ss
bnd
and
pop
lock
sti
idivl
jle
push
insb
inc
fdivrl
mov
inc
mov
dec
cs
pop
add
pop
xchg
dec
in
test
sbb
dec
pop
call
scas
mov
lock
and
movsl
out
mov
cld
add
das
movsl
jg
jg
sub
add
mov
add
or
repz
cmpsl
and
int
loope
mov
andl
mov
mov
push
xchg
xchg
stos
mov
in
pushf
mov
shrl
jmp
adc
xchg
insb
enter
fldl2t
out
mov
add
sbb
ljmp
jno
lahf
push
push
icebp
push
add
xchg
xor
cpuid
inc
dec
ret
jo
cld
pop
push
mov
dec
pushf
inc
pop
loope
jle
loop
pop
mov
sti
pop
jge
in
pop
mov
shl
outsl
pop
pop
lock
or
jecxz
jo
and
push
iret
xor
or
daa
dec
sub
hlt
sbb
lea
cmp
outsb
adc
push
and
cmp
popf
jno
iret
or
mov
or
cmpl
jns
pop
xor
push
lods
orl
mov
pop
sub
or
dec
jge
in
or
push
out
scas
sti
in
inc
outsb
sub
dec
insl
and
adc
ss
fcmovnu
add
mov
and
lods
call
icebp
pop
mov
mov
jno
add
jg
mov
aad
inc
pop
inc
popa
add
out
mov
int
hlt
jne
mov
test
add
ja
mov
push
bound
js
mov
daa
mov
cwtl
dec
add
sbb
bound
fsubs
cwtl
mov
cmp
mov
scas
or
pop
mov
pop
jl
test
cmp
movsl
sub
out
data16
mov
xchg
daa
fistpll
pushw
jb
jge
lods
mov
or
inc
loopne
jmp
imul
inc
fidivl
mov
std
pop
or
push
add
cmpsb
fwait
in
pop
aas
jnp
mov
stos
fnsave
mov
fcoml
mov
jbe
fnstenv
movsl
stc
push
xchg
fnstenv
add
decb
ljmp
lcall
movsl
and
clc
std
inc
jmp
cli
setl
pop
jecxz,pt
in
jbe
imul
fs
xor
punpcklbw
sub
out
cld
les
xchg
ss
aaa
pop
pop
xchg
call
dec
sbb
inc
fwait
push
test
rcl
push
movsb
mov
sbb
dec
and
fnsave
fcmovnbe
shll
ret
mov
mov
and
enter
mov
jle
int3
mov
jg
in
mov
mov
stos
and
int
andl
jne
pushf
fisubrl
outsl
jnp
int
push
cmc
mov
shl
scas
scas
xor
pop
pushf
inc
dec
or
pop
stc
xor
dec
pop
xchg
arpl
jmp
mov
cwtl
or
sbb
outsl
gs
sbb
pop
mov
nop
jg
sub
das
add
push
jo
xlat
mov
test
popa
pop
repz
jo
and
mov
xchg
sub
scas
addr16
adc
fsubrp
hlt
xor
xor
addr16
je
fwait
dec
jg
mov
fbld
sbb
mov
pop
mov
aas
sub
addr16
outsb
cmp
ret
add
push
mov
sbb
or
xor
cli
push
cltd
push
ficomps
test
jp
stc
add
sub
ret
roll
cltd
ret
fbld
fisttpl
mov
jo
addr16
movsl
cmp
jns
leave
pop
lock
ja
jge
mov
xchg
sub
inc
inc
mov
adcl
or
pop
jae
xchg
pop
scas
fstps
into
sahf
sub
fcompp
xor
push
adc
jmp
mov
int3
sub
jp
cld
push
into
pop
mov
mov
das
jp
popa
sbb
lret
cltd
scas
mov
fnstenv
xor
xor
pop
mov
ret
sub
hlt
and
push
arpl
lret
mov
shlb
lds
pop
push
mov
xchg
push
mov
shr
clc
inc
mov
jl
adcl
mov
sub
xor
inc
pop
xor
push
ljmp
imul
jge
leave
mov
test
ret
or
in
mulb
lea
shlb
leave
push
out
dec
outsb
mov
ror
sbb
loope
add
inc
out
fbstp
mov
add
mov
push
lods
mov
gs
push
fwait
dec
jb
inc
mov
pop
adc
cltd
adc
sub
movsb
push
fcomps
dec
xor
test
sbb
push
aad
xchg
repnz
jno
movsl
ds
mov
ret
mov
xchg
sub
sbb
in
lods
mov
pusha
adcl
sbb
into
jl
bound
add
loopne
push
lock
cmpsl
fcmovbe
fsubr
add
pop
add
mov
pop
sahf
lret
jmp
push
stos
fwait
inc
and
sarl
shrl
loope
in
dec
pop
push
sbb
sub
sahf
mov
add
sbb
or
jle
cmp
or
js
stos
sub
mov
push
xor
js
sub
lret
jb
pop
adc
inc
jl
ret
pop
popa
xchg
sub
inc
dec
mov
inc
aam
insl
fidivs
stc
cmp
leave
in
inc
push
inc
pop
mov
add
and
enter
push
lret
push
mov
arpl
mov
je
das
bound
inc
adc
test
fidivs
push
out
inc
add
fdivrs
les
add
mov
out
xchg
or
xchg
pushf
xor
or
jl
jns
rolb
jecxz
jle
jae
adc
test
repz
js,pt
scas
pop
movsb
cmp
jecxz
inc
push
mov
jmp
decb
out
repnz
inc
jecxz
pusha
dec
jecxz
out
xchg
adc
cltd
adcb
add
fidivs
or
es
push
outsl
push
dec
jae
in
rcrl
push
enter
sti
add
and
jb
dec
sub
push
mov
inc
mov
rcll
lret
jp
std
lods
pop
mov
mov
push
add
ficompl
cmp
leave
pavgb
inc
sbb
shlb
rcrb
xchg
les
ret
mov
and
scas
push
xor
jp
cmpsb
jge
adc
add
aas
mov
mov
movsl
icebp
int3
push
iret
adc
test
mulb
fldenv
push
shrb
pop
cmpsl
mov
pop
push
stc
mov
mov
cli
inc
sti
inc
aam
add
stc
push
xchg
sbb
adc
divb
mov
sub
pusha
sub
jbe
pushl
les
mov
add
out
lea
jge
pop
aaa
shlb
in
outsb
cmp
dec
mov
mov
jl
sub
add
das
and
icebp
push
hlt
clc
adc
mov
iret
xlat
addr16
push
aad
cmpsb
jge
cmp
loopne
icebp
loopne
mov
not
mov
push
int3
mov
dec
pop
and
add
movsb
mov
aaa
sub
pusha
pop
pop
push
mov
push
or
scas
cmp
div
imul
mov
sub
jb
sbb
xchg
inc
movsb
repnz
leave
mov
shll
inc
or
aam
sub
xchg
dec
mov
mov
pop
xchg
loop
movsl
ja
out
ja
and
xchg
push
inc
loop
jmp
jl
cli
in
push
sti
test
gs
xlat
mov
enter
xlat
outsb
xchg
out
stc
inc
pop
and
scas
inc
push
std
inc
jbe
test
mulb
pop
dec
adc
jbe
jl
fdivl
jle
inc
mov
jns
cld
aam
push
sub
xchg
jo
movsl
out
ret
dec
ret
jge
je
cltd
xor
xchg
cmp
dec
mov
xor
cmp
cmc
call
aam
jge
jb
xor
sbb
or
das
add
jno
and
jnp
push
lret
es
mov
popf
sub
pop
mov
js
mov
insb
jg
std
daa
mov
dec
clc
lret
insb
outsb
hlt
popf
add
lock
pusha
into
push
sbb
adc
cmp
or
or
inc
loopne
adc
jge
fcompl
mov
loope
mov
rcrl
xchg
xchg
xlat
sbb
test
nop
push
fldcw
or
push
jae
bound
push
pushf
fidivrs
rorb
test
dec
mov
in
or
mov
das
dec
out
das
ret
dec
movsb
je
ficoms
adc
sub
pop
les
cmpsb
inc
cli
shrl
cmp
loop
icebp
dec
cmp
lods
mov
iret
xchg
or
mov
insl
insb
lds
push
test
jge
ret
pop
jo
mov
mov
fwait
dec
xchg
jmp
xchg
out
test
mov
shr
sbb
lods
ljmp
mov
in
testb
aas
test
mov
sub
mov
and
mov
push
std
jmp
movl
xchg
pop
jbe
add
lcall
cmp
rorl
cltd
je
push
cmpsb
cli
mov
inc
mov
test
and
xor
adc
mov
mov
sub
repnz
leave
dec
adc
insl
paddq
adc
or
sti
add
inc
xchg
add
push
mov
cld
mov
xor
jge
in
cmpsl
mov
inc
minps
mov
or
mov
shrb
or
js
inc
je
out
out
ljmp
jb
sub
xlat
jg
rcrl
jns
fcomps
mov
mov
sub
insb
insb
cli
repnz
cmp
imul
xor
in
jmp
gs
jl
inc
push
stc
jno
ljmp
sbbl
add
in
mov
mov
sbb
or
fwait
add
fisubrs
dec
mov
xor
out
data16
xchg
pop
aas
dec
inc
add
jbe
adc
shrb
arpl
aas
test
fstl
ret
loop
sti
fs
sub
inc
mov
mov
or
movb
sbb
movsl
mov
lods
cmp
mov
xchg
test
inc
in
mov
insb
add
sub
xor
inc
adc
in
cmp
gs
cmp
or
sbb
mov
xor
sbb
push
jne
arpl
sahf
ljmp
out
dec
loopne
mov
inc
cmpsl
dec
rcrl
mov
push
jnp
xchg
in
popa
sub
sbb
mov
jae
adcb
test
fs
fiaddl
jecxz
jb
sub
xchg
and
ret
test
mov
shll
movsl
out
setg
negl
ljmp
jae
push
sub
sub
jle
jp
xchg
xchg
stc
lds
notl
sbb
adc
in
stos
sbb
inc
ret
lret
or
cld
jmp
mov
dec
adc
mov
jmp
mov
out
mov
outsl
xor
out
mov
mov
adc
pop
jns
sub
idivb
sub
outsb
xor
cmpsb
leave
jl
cmc
mov
cmp
stos
insb
cltd
lock
xor
enter
test
add
aas
pop
push
and
push
sti
fidivl
mov
mov
adc
jns
inc
iret
push
cmc
pusha
js
inc
or
add
inc
data16
in
orb
ljmp
iret
mov
push
scas
fiaddl
cli
inc
imul
sub
stos
insl
arpl
int
cmpsl
out
outsb
pop
mov
inc
fidivs
pop
sarb
fldenv
shll
outsl
sahf
movsl
cmp
nop
lods
daa
or
in
sub
adc
mov
adc
jl
push
push
popa
add
mov
out
or
dec
lidtl
xor
lcall
mov
cld
or
add
clc
mov
aam
lods
mov
mov
mov
imul
cs
inc
inc
idiv
mov
mov
pop
pop
mov
dec
hlt
mov
jl
cmp
popa
loop
fbld
loopne
adc
inc
test
mov
data16
test
and
test
and
push
dec
in
vmovntdq
loopne
and
or
int
popf
sldt
fildll
dec
ret
jmp
loop
fildl
flds
das
mov
pop
cmpsb
ds
loopne
xchg
sub
cmp
dec
imul
sub
in
push
push
push
adc
daa
ds
pop
out
jp
imul
mov
pop
fsub
int
pop
xor
insb
xor
aam
or
pusha
sbb
insb
scas
xor
data16
jae
lds
in
dec
jecxz
jns
in
sub
outsb
sti
out
push
cwtl
dec
pop
sbb
test
rcrl
enter
or
add
push
or
mov
sbb
fwait
sbbl
xchg
push
movsl
fldenv
insb
js
cmpsb
add
aad
orb
outsb
out
loope
lahf
jecxz
or
fwait
loopne
insl
xchg
in
pop
push
dec
das
or
leave
shlb
mov
jmp
or
and
jg
push
mov
cwtl
movsl
out
pop
mov
mov
fisttpl
xchg
pop
jecxz
cltd
test
pop
lea
bound
rdmsr
shll
jbe
or
push
mov
clc
cld
fnstenv
push
add
test
popf
fsqrt
inc
in
ja
popf
and
cwtl
je
leave
sbb
aam
mov
hlt
jae
fldl2t
mov
sbb
sti
cmpl
fwait
mov
into
push
sub
dec
fstpl
daa
sti
and
adc
fidivl
push
ljmp
jno
adc
fsubl
sub
cmp
sbb
add
sti
mov
mov
jae
lds
shlb
push
inc
sub
imul
in
dec
xchg
pop
lea
cmp
dec
xor
pop
sub
and
sbb
lea
jle
push
cmp
jo
cmp
dec
add
pop
and
clc
xchg
in
mov
scas
ret
jp
mov
xchg
inc
mov
sbb
shlb
sti
aaa
xchg
cmp
mov
cld
icebp
add
jae
cmpsl
adc
lahf
jne
mov
or
notl
push
sub
int
or
pop
in
daa
jmp
or
test
out
out
scas
in
pop
stos
sbb
push
outsb
add
imul
popf
mov
leave
test
xor
mov
adc
xchg
inc
stos
lods
add
es
jb
push
out
and
das
xor
lods
xchg
jnp
sbb
xor
push
mov
emms
lcall
cmp
into
mov
or
fs
adc
icebp
ljmp
mov
mov
lret
push
fisubl
mov
push
sti
lahf
lods
into
leave
pop
sahf
adc
es
shrl
dec
mov
pop
mov
sub
xor
mov
pop
push
mov
or
xchg
mov
xchg
mov
and
cli
xor
popf
xchg
pusha
xchg
cli
sbbl
or
orb
xor
les
stos
inc
ljmp
call
sub
aaa
push
and
sbb
cmp
xlat
dec
xchg
cmc
add
or
jae
jmp
jp
out
jecxz
outsl
mov
xchg
dec
cli
xchg
mov
add
cmpsl
jo
jmp
or
xchg
or
mov
dec
mov
xlat
repz
sbb
addl
or
pop
stos
sti
xchg
fnstsw
cmpsl
lds
sti
mov
adc
mov
shll
icebp
mov
and
push
push
mov
arpl
cmp
dec
lahf
ss
enter
daa
mov
and
call
sbb
sub
fisubs
aad
xchg
sahf
test
loopne
dec
dec
dec
mulb
sbb
and
jge
and
sldt
inc
in
add
pop
repnz
aaa
aas
push
rcrl
nop
loop
sahf
pushf
mov
mov
push
adc
imul
les
mov
jle
hlt
fldenv
mov
pop
into
popf
jle
jmp
lea
mov
adc
cmpsb
repnz
pop
sbb
push
xor
pop
jmp
xor
cmp
add
xor
mov
fbld
repz
xor
pop
mov
je
pop
xor
imul
test
inc
aad
dec
and
or
mov
scas
out
out
pop
or
jecxz
cmp
loop
lret
cmp
mov
lcall
mov
or
pushf
cmp
test
pushf
movsl
mov
pop
add
lea
adc
push
sbb
ret
sahf
test
push
fidivrl
mov
jns
push
nop
fiadds
cmpsb
jmp
add
adc
mov
jns
popa
and
lcall
std
push
js
dec
add
pop
or
gs
cmp
mov
xchg
lds
pop
jo
arpl
adc
mov
sub
mov
cmpsb
xchg
ss
in
pop
jnp
nop
jo
ret
dec
icebp
hlt
adc
aaa
popf
xor
mov
fldt
stos
mov
jno
mov
leave
sub
stc
fistpll
xchg
dec
rorb
mov
mov
daa
pushf
es
xor
add
push
push
add
xor
test
pop
loope
sbb
dec
jmp
jno
pop
icebp
pushf
xchg
ljmp
mov
jp
imul
das
mov
jns
dec
stos
dec
scas
inc
in
adc
inc
push
lret
shl
or
scas
call
jg
mov
insl
int3
xor
imul
xor
ret
gs
scas
mov
stc
mov
loope
inc
jle,pn
das
inc
pop
push
adc
into
loop
lret
pop
pop
outsb
xchg
sub
push
cmp
insb
mov
mov
lret
sub
mov
int
sbb
pop
dec
fwait
clc
loopne
xor
sbb
or
push
sar
test
ret
stos
cmp
sub
and
jb
lods
xchg
cmpsl
mov
inc
hlt
ja
sub
popf
cmp
into
and
push
sbb
jl
sbb
pushf
rcrb
push
leave
add
or
push
mov
or
in
nop
mov
push
mov
je
movsl
jmp
cmpsl
xchg
mov
mov
cwtl
aas
imul
mov
cmpl
mov
fwait
cld
aam
ljmp
adc
mov
push
xchg
mov
int
mov
andl
mov
jecxz
out
pop
insb
or
ja
je
rcrl
mov
les
pop
and
lcall
jnp
fwait
and
mov
leave
push
rorl
out
sub
lea
testl
nop
jle
ret
cwtl
movsb
repnz
push
pop
test
xor
push
rclb
jmp
or
mov
xchg
imul
dec
fidivrs
enter
mov
push
dec
inc
mov
out
test
cwtl
lds
notb
mul
adc
out
nop
mov
das
lret
mov
add
incl
xchg
ret
jae
fs
adcb
out
in
push
sub
decl
sbb
imul
gs
pop
jl
rcr
sbb
pop
dec
sub
fdivr
mov
pop
xor
push
lock
fdivrs
add
das
xchg
jne
mov
add
icebp
xchg
lahf
pop
xchg
mov
add
sbb
xchg
cld
stos
xchg
mov
xchg
inc
push
xor
pushf
cmp
jmp
fwait
xor
mov
lret
mov
les
addl
shlb
dec
imul
pop
mov
fiaddl
push
lods
repnz
movsl
and
cltd
shl
xor
jg
xor
testl
mov
inc
mov
fldlg2
icebp
clc
push
loope
out
and
push
in
lds
testl
rorl
in
mov
add
clc
imul
push
lods
mov
enter
stos
cmp
mov
mov
popf
cmp
addr16
and
sbbl
jo
adcb
mov
clc
test
pop
andl
push
push
test
rcr
mov
js
int3
arpl
dec
outsl
push
sub
cmpsb
dec
popf
sub
xchg
cs
add
je
filds
loopne
push
cs
lea
pop
ss
fwait
shlb
ja
call
in
jmp
nop
pop
imul
imull
xchg
aam
bound
push
push
xor
mov
adc
inc
cmpsl
out
pusha
or
xchg
stos
xchg
out
sub
lock
fnstcw
fldenv
fstps
not
sub
fiaddl
push
pop
repz
or
stos
lcall
sub
outsl
push
and
jb
mov
jmp
cmc
push
push
nop
sub
ss
mov
mov
pop
push
scas
adc
aaa
ss
neg
fwait
arpl
mov
sub
into
pop
xchg
pop
jle
repz
pop
and
gs
pop
xchg
and
sub
out
mov
fldcw
subb
cmp
mov
inc
or
add
loop
add
fidivrs
imul
xchg
pop
mov
icebp
cmpsb
cmp
add
or
popf
pop
out
xchg
out
and
xor
lea
iret
out
push
andb
mov
fsubrp
bound
les
xchg
sbb
inc
jo
scas
mov
xlat
jbe
jecxz
add
mov
mov
cmp
fisttpll
or
in
aam
sahf
add
lods
fsubrl
push
stos
sub
xchg
mov
dec
movsl
push
and
in
inc
mov
or
call
rcll
out
push
fldl
movsb
fs
pop
setbe
shlb
mov
shl
addl
mov
pop
mov
push
sbb
adc
aam
imul
sbb
dec
push
sbb
movsb
cmpsb
cmp
mov
fstpl
cld
sbb
orb
mov
shrl
push
xor
in
jns
or
xchg
xor
test
ljmp
jge
xor
pop
cmp
jl
jge
icebp
pushf
mov
js
stos
sbb
out
sbb
into
insb
lahf
dec
lds
les
out
dec
test
mov
lods
mov
sahf
push
lea
mov
jb
push
insb
mov
dec
mov
inc
orb
xchg
and
mov
sti
and
jb
jp
lcall
mov
push
jne
or
sbb
stos
mov
sub
mov
and
mov
inc
jp
fnstenv
pop
inc
mov
sbb
lret
loop
ljmp
dec
mov
mov
xor
cld
imul
scas
add
xchg
add
pushf
fwait
lods
lea
jle
pop
cmp
jg
mov
sahf
cmp
xlat
pop
outsl
and
pop
jbe
call
inc
out
push
inc
push
push
adc
push
loopne
out
xchg
add
adc
push
cmp
outsl
adc
inc
mov
je
fwait
xor
ja
or
lock
cmp
movb
mov
pusha
sbb
loopne
and
add
push
shll
push
loopne
pop
push
jns
sbb
mov
pop
loope
inc
insb
xchg
push
push
push
add
sbb
inc
js
mov
xchg
xchg
out
cs
cmp
or
mov
xor
jne
inc
cld
mov
cltd
in
ret
dec
inc
jbe
clc
aad
sub
lock
push
imul
int
pusha
inc
fwait
mov
xor
fnstsw
cli
push
xlat
nop
repz
jecxz
mov
sahf
int
shll
jae
jns
fsub
stc
shlb
mov
mov
ret
inc
cmpsb
jns
movsb
dec
fsts
ss
cmp
mov
daa
rcrb
pslld
stos
xor
sub
mov
clc
cmp
adc
out
mov
loopne
cmp
mov
pop
mov
inc
mov
xchg
pop
mov
test
in
jl
xor
pop
pop
fadds
sbb
popf
inc
arpl
sub
mov
jmp
cld
lret
push
xchg
shll
pop
cmp
in
sub
push
mov
iret
cld
es
mov
mov
mov
out
movl
pop
stc
fs
out
enter
and
test
add
pop
addr16
insb
sbb
mov
or
mov
xlat
ljmp
inc
decl
mov
stos
mov
shlb
shrl
dec
pop
jno
mov
leave
pop
pop
jb
mov
add
test
in
adc
inc
lret
test
xor
xchg
bound
pop
lret
fbld
xchg
mov
and
dec
loop
push
dec
out
shrl
out
push
negl
xchg
cs
sarb
cltd
jmp
mov
jecxz
fadds
xchg
and
inc
enter
jno
js
push
mov
xor
dec
xchg
stos
shlb
push
call
fcoms
inc
in
cld
push
xor
call
mov
xlat
xlat
and
test
loope
pop
jae
out
repnz
rorl
test
cmp
dec
popa
gs
pop
xchg
mov
push
mov
clc
test
push
ss
imul
mov
lcall
dec
push
fwait
xor
nop
dec
xchg
mul
inc
sub
mov
push
inc
sub
imul
xchg
sti
repnz
mov
lret
adc
std
movsb
add
push
mov
inc
nop
fsubs
cmp
sbb
cmpb
push
mov
popf
cmp
shr
repz
subb
outsb
lea
push
cmp
fbld
cmc
or
xchg
mov
loope
pop
mov
pusha
or
scas
loop
addl
pop
and
add
adc
mov
push
lahf
mov
inc
js
cmp
dec
mov
mov
sub
xor
shll
add
fstpt
test
int3
out
movsl
icebp
aad
mov
sbb
xor
or
push
insb
iret
notb
addb
xchg
mov
fiadds
mov
jbe
stc
mov
bound
mov
mov
rclb
adc
pushl
jecxz
nop
lcall
xchg
seto
add
xor
in
fcomps
lock
stc
cmp
lds
xchg
dec
lods
jecxz
push
mov
fbstp
insl
cmpsl
mov
and
or
adc
cmp
pop
sbbb
sub
dec
push
std
sbb
mov
xor
pop
cmp
cld
and
icebp
mov
and
xchg
shlb
lcall
fldcw
and
ret
out
sbb
cmpsl
mov
cmp
and
out
insb
mov
jg
hlt
mov
add
xor
mov
or
sub
cli
jg
inc
sbb
jmp
sbbb
mov
scas
pop
das
sbb
pusha
jge
xor
sub
lea
sub
pop
adc
adc
jl
out
and
xchg
cmp
pop
notb
pop
jb
xchg
loope
mov
push
inc
jae
xchg
sbb
xchg
mov
movsb
dec
jp
sbb
lods
fwait
shlb
or
add
sub
das
sub
inc
call
pop
xchg
or
push
out
adc
icebp
aam
shll
or
inc
mov
pusha
mov
pop
jbe
aas
andb
dec
push
in
enter
xor
je
push
inc
fdivl
jae
xchg
push
add
std
orb
adc
imul
pushf
push
and
in
loopne
pop
sahf
imul
call
shl
jge
and
insb
xorb
cmp
js
scas
inc
arpl
pop
adc
cwtl
xor
sahf
cmc
mov
sub
out
mov
ret
push
xor
cmp
adc
fimuls
adc
dec
add
mov
push
jmp
test
mov
int
mov
or
ret
pop
push
jae
in
in
pop
xor
fs
inc
pop
and
or
push
xchg
pushf
in
xchg
sbb
sub
mov
stos
test
lret
mov
pop
negb
shl
in
cvtps2pi
jg
or
xor
scas
inc
jbe
lds
lods
daa
lret
cwtl
fstpl
mov
pop
scas
fdivrs
popf
loop
mov
cld
add
dec
out
pop
mov
xlat
imul
aaa
mov
subl
and
adc
cmp
imul
pop
xor
inc
nop
dec
jecxz
jns
in
cmpsl
sbb
cmp
jnp
mov
push
cmp
xlat
outsl
sarl
les
adc
xchg
rcr
add
inc
aas
sbb
adcl
add
and
notl
cwtl
jl
xor
popf
pop
ja
or
clc
jnp
pop
jmp
inc
sbb
pop
negb
imul
lret
pop
sbb
les
cmc
lods
loop
adc
test
movsl
add
int
pop
mov
lds
adc
pop
ficompl
movsl
ret
sub
sub
dec
add
fstp
xchg
add
dec
fiadds
test
push
jecxz
out
dec
iret
dec
in
pop
add
mov
fdivl
jb
arpl
subl
loop
push
pop
fcompl
add
jmp
and
cmpsb
jb
inc
int3
adc
and
mov
orb
sarb
shr
push
pop
inc
fimuls
push
frstor
xor
jmp
jno
push
mov
or
decl
lret
adc
xchg
mov
xor
popa
cmc
adc
fiadds
push
mov
adc
mov
mov
mov
imul
mov
xchg
cmpsb
and
push
rclb
addl
lods
enter
aas
inc
xor
push
dec
pop
sbb
out
cmp
push
mov
adc
cmp
and
xor
xchg
icebp
cld
lcall
sahf
stos
mov
push
stos
add
jecxz
scas
inc
mov
fsubrs
xor
mov
icebp
or
pop
mov
icebp
xchg
xor
sahf
test
and
dec
call
lret
adc
mov
adc
rorb
loopne
and
iret
decb
xchg
or
shl
sahf
push
movl
xor
fs
rolb
add
push
and
mov
and
push
mov
les
xchg
addr16
rcrb
sub
jl
xchg
or
mov
bound
push
ja
inc
scas
fcompl
shrb
loopne
idivl
push
inc
popa
xor
and
arpl
jno
inc
std
or
mov
fmull
push
loope
mov
jmp
or
and
jns
inc
mov
push
enter
pushf
stc
xchg
inc
add
sbb
out
sti
ja
aad
pop
scas
and
pop
add
ss
loopne
xor
and
scas
lods
test
add
jno
add
jns
mov
xchg
test
xchg
fistl
xor
mov
jge
sbb
std
xchg
outsb
nop
scas
inc
into
int
insb
scas
push
dec
pusha
mov
repz
lods
cmp
xor
jecxz
stc
fwait
jne
jae
cmp
icebp
in
test
mov
sub
loopne
sti
dec
jmp
insl
mov
frstor
imul
mov
mov
lcall
xlat
imul
addr16
ret
push
xchg
decb
fdivs
jo
loopne
push
cwtl
push
adc
sbb
in
ss
inc
add
ja
das
adc
jae
out
add
cmp
or
dec
repz
xor
push
test
out
lahf
push
cmpsb
lock
repnz
dec
xchg
xchg
jbe
push
inc
jge
enter
inc
pop
lret
scas
adc
aad
fwait
sub
xchg
push
pop
out
mov
dec
movsl
aas
scas
inc
and
icebp
inc
int
hlt
pop
pop
imul
or
mov
mov
push
movsb
stos
xchg
push
popf
push
outsb
ja
or
or
lods
adc
int
sti
test
mov
jne
insl
jg
fsqrt
orl
sbb
ffree
mov
outsb
call
jp
push
movsb
lods
lcall
outsl
jle
pop
cli
or
and
jo
mov
jp
mov
lcall
mov
pop
cli
mov
mov
dec
decb
scas
inc
sub
xor
lret
inc
bound
sub
xor
lea
fmul
fcmovnb
add
pop
fiadds
mov
and
mov
sbb
jb
cmp
mov
mov
xchg
dec
fiaddl
insb
popa
into
mov
mov
fisubs
dec
sbb
mov
push
mov
fimuls
and
jb
sbb
mov
testb
xchg
adc
sbb
xor
outsb
pop
loope
inc
pop
inc
popa
mov
push
jno
mov
into
mov
in
stos
adc
negl
sti
ficoms
xor
jno
mov
xor
pop
lock
mov
movsl
add
fsts
insl
cmp
fidivs
cld
daa
fsubrp
aas
outsb
mov
cmp
jmp
int3
xchg
push
in
inc
pop
outsl
add
cltd
add
jbe
inc
add
mov
xlat
ret
push
scas
mov
mov
pop
sbb
aas
push
out
fcmove
adc
adcb
adc
xchg
loope
xor
sahf
add
xchg
imul
pop
insl
fstps
mov
push
jmp
in
pop
mov
jmp
adc
xchg
imul
inc
aam
in
pop
nop
sub
cmpsl
scas
inc
fadd
push
bnd
dec
adcb
incb
sbbl
jmp
loop
sub
inc
dec
cmp
mov
mov
ss
cmpsl
testl
and
lahf
cmp
cmp
fsubrl
push
scas
je
fcoms
jae
arpl
dec
pop
stos
popa
aam
lds
or
ja
adc
mov
jns
sub
adc
push
add
mov
pop
mov
jmp
cmp
clc
lret
and
mov
dec
pop
xor
mov
jmp
rolb
repz
inc
mov
dec
and
cld
jae
fstpt
in
ja
sub
insl
add
push
mov
push
lods
mov
fidivs
mov
notl
dec
test
es
xlat
push
loopne
clc
testl
jl
dec
loope
xchg
testl
dec
sub
pop
aam
lea
movsl
cmp
sbb
xchg
push
sub
push
shl
mov
lret
movsl
cmp
and
xchg
xchg
cli
dec
loope
hlt
mov
jle
xchg
mov
dec
fstl
repnz
leave
test
adc
mov
jb
dec
push
icebp
dec
out
in
stos
es
xchg
mov
cwtl
mov
stos
test
ret
je,pn
sub
sbb
xchg
insl
shr
push
movsl
xchg
orps
dec
loop
jns
pusha
and
push
push
call
sbb
sub
in
daa
ret
ljmp
clc
or
loop
lds
out
mov
jae
ja
push
sbb
mov
jne
add
or
fwait
push
dec
pushf
or
pop
aas
out
rcrl
mov
mov
sbb
addr16
les
into
xchg
out
jecxz
sub
mov
shlb
jle
arpl
in
jne
stc
cmp
fwait
xor
int
xor
mov
or
sub
outsl
jmp
jns
xor
xchg
orb
outsb
add
aam
loop
lods
inc
push
add
rorl
pop
mov
lret
and
mov
pop
jno
fiaddl
fprem
pusha
shrb
add
xchg
xor
jg
dec
int3
cmp
aas
fnstcw
loop
loope
ss
add
inc
cmpb
lahf
jp
xor
mov
out
aas
inc
cmpsl
addr16
sub
icebp
or
push
test
push
fstpl
fsts
mov
mov
test
mov
andb
push
cmp
addr16
scas
jb
mov
xor
fnsave
arpl
mov
pop
jne
xchg
jmp
adc
inc
xchg
cli
jl
inc
add
adc
stc
dec
mov
jle
push
bound
pop
mov
lock
mov
cmp
pushf
repz
xchg
fmulp
shlb
int
mov
dec
jecxz
xchg
pop
mov
int3
adc
insl
adc
jae
sbb
sbb
mov
outsb
cld
icebp
jb
lock
and
or
insl
aaa
inc
add
push
cmc
mov
andb
pop
nop
aam
adcl
or
cmp
gs
xchg
adc
ja
inc
cmpsb
andl
jecxz
mov
shlb
and
dec
mov
gs
xchg
jo
push
rcrb
mov
cmc
jmp
pop
and
sub
cmpsl
hlt
mov
out
fimull
jecxz
pop
sub
nop
pop
cmp
scas
jle
fstpl
orl
popl
test
dec
pusha
adc
ss
xor
mov
or
daa
jl
out
out
jp
js
cs
jns
pop
cmc
mov
pop
sub
pop
jne
xchg
daa
mov
jb
inc
enter
loop
xchg
jae
push
jp
xchg
pop
jge
shl
insl
fldl
or
pop
lret
mov
lret
dec
xchg
mov
pop
jl
ficoml
addl
mov
adc
sbb
pop
pop
jae
fisttps
mov
shl
jb
pop
ret
mov
lock
lods
iret
cmc
jne
iret
scas
and
test
leave
lcall
sahf
sub
add
mov
inc
fldcw
arpl
cmp
ljmp
or
fsubrp
cltd
add
xlat
in
pop
push
sub
xchg
sub
into
pop
outsl
pop
das
int3
inc
ss
or
jbe
sbb
stc
testl
mov
cmc
jmp
mov
gs
and
dec
xchg
enter
lods
dec
jg
in
xchg
imul
sbb
sub
daa
ja
pop
xor
stc
ret
ret
mov
add
add
lea
fimuls
sub
pop
jne
pop
stos
out
sbbb
mov
and
loope
push
jge
mov
shrl
fldenv
addb
pop
xor
lock
or
icebp
lods
mov
push
cltd
ret
sub
adc
dec
xchg
mov
mov
cmpsl
daa
mov
push
push
dec
mov
notl
and
aad
popa
lret
push
add
cmpb
xchg
jmp
leave
pop
mov
outsl
subl
lret
jle
jne
aas
sbbl
hlt
mov
insb
mov
insl
jno
js
push
cld
pop
loopne
add
arpl
mov
push
loop
xchg
in
pop
shrl
fidivrs
jmp
cs
and
jno
xchg
xor
lret
shrl
decl
test
jl
push
adc
ret
aam
sbb
add
mov
add
es
pop
pop
dec
leave
xchg
es
sbb
xchg
add
dec
iret
cmc
push
sbbl
lret
test
xchg
into
test
or
xchg
jnp
adc
sub
popa
bound
loop
sti
addr16
mov
mov
mov
jb
or
scas
pop
aam
ret
mov
push
repz
dec
inc
adc
add
sahf
andb
jo
std
jno
lods
sbb
mov
mov
sub
out
stc
arpl
in
cmpsl
and
nop
adc
mov
push
or
sub
movsl
js
ljmp
pushf
mov
xchg
out
movsl
jg
out
xchg
xchg
pop
jns
mov
stc
add
push
clc
flds
dec
out
imul
pop
popa
js
xchg
jge
jno
mov
and
xchg
push
cmc
movsl
xchg
and
jge
xor
xchg
mov
sbb
dec
mov
js
jmp
scas
xor
or
inc
lock
cld
mov
jmp
cmpsb
adc
leave
jbe
jmp
mov
inc
outsl
xchg
outsl
sti
stos
or
sbbb
mov
xor
fdivr
mov
adc
pop
lds
mov
insl
sarl
gs
sbb
jb
pop
inc
cmp
add
shlb
sbb
sbbl
das
xchg
and
pusha
in
mov
fucomip
out
sbb
adc
out
dec
scas
cli
mov
cwtl
mov
cmpl
in
xlat
data16
mov
jg
fsubl
daa
test
xchg
iret
decl
mov
iret
push
xor
xchg
push
gs
mov
aas
test
sbb
pop
pop
out
mov
jl
pop
rorl
orl
scas
jb
dec
xor
xchg
push
ret
dec
loopne
js
jno
test
add
popa
mov
xchg
jae
jno
jg
cmc
and
iret
push
testl
outsb
adc
out
shlb
cmp
inc
fildl
pop
inc
data16
rcrl
or
jmp
sub
push
scas
les
adc
jge
aam
xor
xchg
bound
dec
jecxz
lock
add
and
scas
adc
or
movsb
push
mov
lods
push
andl
mov
sub
ljmp
movsl
mov
add
and
out
repz
and
mov
dec
lds
push
sahf
sub
into
push
aaa
mov
mov
ss
adc
insb
pop
and
popf
scas
sbb
jno
pop
jg
push
mov
popf
out
mov
repnz
enter
sarb
inc
lods
std
pop
je
or
xor
xchg
lcall
jle
call
into
lock
mov
mov
sbbl
sbb
xchg
rorb
fcomps
jno
mov
sub
pop
jnp
pop
idivb
lahf
jge
shll
xor
jmp
xchg
jmp
int
lret
mov
adc
mov
add
ds
mov
icebp
mov
daa
pop
xor
mov
push
push
mov
cmp
mov
pop
movsb
out
stos
or
mov
imulb
subl
std
icebp
mov
scas
out
sub
imul
cmp
inc
adc
mov
jmp
shlb
out
mov
test
fidivs
mov
or
sub
and
dec
loopne
mov
aad
imul
mov
dec
pop
sub
emms
cld
jae
insl
ds
fsin
sbb
imul
fs
jo
adc
or
adcb
ror
repz
sahf
lods
sub
into
in
fstpl
jae
pop
gs
dec
inc
pop
dec
xchg
sub
pop
repz
pusha
dec
dec
mov
sbb
hlt
mov
cmp
loop
lret
xor
in
call
fwait
cli
jmp
sbb
or
push
test
mov
push
pop
mov
stos
add
or
pop
inc
fcmovb
rorl
pop
xchg
adc
sbb
imul
pop
lods
adc
and
outsb
lock
xchg
fs
in
std
cltd
dec
mov
aad
das
repnz
lds
jge
sbbb
out
leave
push
xchg
mov
cmp
test
or
or
sbb
es
loop
mov
inc
add
jle
adc
out
test
sbb
rolb
dec
out
hlt
lock
test
xchg
lods
xchg
and
sub
jg
in
cmp
adc
incb
lahf
inc
fildl
in
sahf
sub
insb
add
insb
add
aas
cltd
jae
push
xlat
gs
cs
stos
sbb
in
pushf
dec
decl
add
jne
inc
mov
sbb
inc
fs
xchg
loope
sbbb
fsts
or
js
daa
xlat
and
add
add
mov
add
xchg
dec
cmp
mov
mov
sbb
icebp
adc
cmp
and
adc
data16
pop
jg
inc
dec
scas
add
pop
shlb
fstpl
jnp
jmp
test
subl
and
aam
add
ret
dec
push
repnz
sarb
imul
mov
hlt
or
add
pop
and
cmp
in
fdivrs
xor
cltd
add
or
out
dec
cmc
adc
daa
sub
insb
or
cmp
and
sbb
dec
subb
jecxz
icebp
mov
push
sbb
jp
jnp
cmp
mov
mov
psadbw
dec
push
cmp
push
lods
inc
push
jno
insb
mov
int3
or
pop
jmp
ja
pop
nop
rol
dec
insl
adc
push
cmpsb
mov
in
add
mov
into
push
ljmp
and
or
sbb
les
inc
xchg
pop
popf
cmpsl
test
aam
loopne
sub
ds
test
loop
insl
dec
push
cmp
faddl
cld
xchg
or
arpl
arpl
popa
leave
push
sbb
inc
sub
outsb
jg
loop
notl
xchg
inc
ss
pop
sub
and
jns
push
call
adc
or
or
fildl
and
mov
icebp
xchg
dec
cmp
ss
outsl
xchg
xchg
jl
in
cmp
in
dec
push
sti
pop
jne
mov
mov
xchg
fisubl
cmp
frstor
ss
xor
lea
inc
data16
movsl
jno
pusha
mov
jmp
mov
push
movsl
fwait
sub
push
sub
das
cmp
cmp
cmp
jns
dec
mov
or
xor
imul
lock
aad
inc
mov
loope
lret
and
das
mov
xchg
fdivl
cmp
bound
adc
aad
clc
xchg
fwait
test
jge
pop
repnz
mov
in
loopne
push
test
sbb
mov
sti
pop
stc
fnsave
ja
aam
push
mov
mov
test
aaa
inc
mov
call
add
mov
outsb
aam
adc
mov
jb
mov
adc
or
push
sub
ret
xor
push
jo
or
es
cs
cwtl
sub
outsb
shl
mov
mov
loop
mov
pusha
repnz
jl
jbe
dec
mov
push
mov
lods
rorb
xchg
mov
lret
int
bswap
and
int3
cmp
mov
mov
fcmovb
sbb
pop
subl
stos
pop
clc
or
xchg
pop
fidivrl
jno
inc
xchg
stos
jnp
jns
pusha
and
loope
jg
sahf
and
or
in
lcall
inc
and
outsl
testl
iret
cwtl
cmp
xor
aas
push
mov
cmp
cmp
lea
and
callw
rorl
sti
dec
iret
in
or
jb
xor
jne
jecxz
ret
and
into
jne
clc
fsave
mov
sbb
insb
mov
lods
dec
daa
cmp
movsb
xchg
pop
jmp
or
jo
adc
loop
sbb
push
fsubp
add
add
lret
fdivrl
ja
int3
lret
push
mov
mov
int
xlat
out
stc
mov
cmp
mov
cltd
xor
lcall
jg
or
pop
cld
lahf
sbbl
sub
lret
pop
adcl
int
mov
mov
xchg
out
into
test
lods
push
mov
sbb
xchg
dec
je
sti
cs
lahf
ror
or
repz
imul
cltd
mov
lcall
cmp
test
mov
sub
push
adc
stc
dec
imul
movsb
sbb
pop
outsl
imul
mov
sub
in
jle
and
or
push
dec
into
pop
hlt
lcall
xchg
xchg
imul
inc
dec
jg
ljmp
inc
aad
repz
sbbb
dec
sbb
daa
jb
mov
ja
rcl
mov
stc
push
or
mov
dec
or
nop
std
insl
jl
popf
mov
dec
jle
xchg
sub
sahf
sahf
shll
sub
xchg
inc
movsl
icebp
out
xchg
stos
mov
movsb
mov
sub
ret
fists
jb
jmp
mov
cmpsl
ret
outsl
inc
out
outsb
mov
ret
jl
lcall
in
stos
rcrb
xchg
cli
jmp
add
inc
sti
and
hlt
push
mov
inc
ja
dec
xchg
sbb
lret
out
stos
push
fldcw
jle
add
fiadds
or
js
scas
mov
mov
inc
push
repnz
es
icebp
xchg
xchg
andl
bound
xchg
sub
ret
adc
in
mov
xchg
shl
repnz
push
stc
pushf
lret
lret
rol
stos
imul
inc
out
pop
inc
fmull
repnz
push
iret
stos
cmp
mov
mov
imul
mov
push
call
in
hlt
sbb
mov
adc
cmp
sarl
jno
dec
test
fld
leave
push
clc
add
add
cmp
sahf
insl
les
cmp
xchg
jl
iret
insl
mov
sub
jmp
cmp
cmp
mov
andl
insb
cmp
pop
mov
icebp
cmpsl
jp
jns
jns
cmpsl
push
or
sbb
xor
gs
enter
mov
xor
rclb
or
adc
sbb
rcrb
dec
fsub
stc
xor
push
xchg
sub
inc
xchg
add
subb
cmp
or
adc
adc
movsb
mov
xor
cmp
in
les
or
imul
xor
lcall
push
inc
lods
popf
fidivrs
cmp
xor
ret
ret
ret
pop
adc
and
ret
lods
dec
cmp
imul
dec
xchg
xchg
inc
ffree
adc
loope
pop
xor
into
loop
cmp
notb
pop
fucom
mov
test
repnz
mov
cmp
xchg
addr16
push
pushf
cmp
dec
aas
jg
outsb
jl
fstpl
pop
jbe
inc
cmp
int3
lret
inc
call
imulb
repz
addb
aad
mov
insl
push
out
mov
fwait
popa
loopne
lds
repnz
fisttpl
sbb
je
loop
incb
jns
fcompl
mov
das
mov
ja
cmpsb
jl
popf
lods
mov
sbb
dec
cmp
test
xor
push
jno
into
mov
pushf
aam
int
fmul
and
mov
test
mov
sbb
cmp
shlb
test
or
push
je
dec
adc
push
xchg
mov
xchg
or
push
test
popf
in
hlt
push
cltd
mov
pop
push
xor
jg
cli
in
loope
int3
shrl
xchg
xor
dec
sbb
ficoms
aaa
push
pop
mov
outsl
xor
mov
or
out
add
xchg
sub
fiaddl
mov
cmp
mov
xchg
add
xor
repnz
scas
pop
or
fistl
out
jne
pushf
aaa
stos
jg
shll
lret
test
add
filds
dec
dec
negb
or
inc
jl
ds
enter
mov
jp
fstl
pop
push
into
cmpsl
imul
pusha
mov
int3
mov
scas
sub
fimuls
jg
sbb
push
frstor
mov
and
adc
pop
subl
sub
mov
in
sub
ss
shrl
sbb
dec
mov
mov
ret
xor
shlb
test
cmp
push
jae
shrb
jp
out
mov
fdivs
pop
insb
negl
adcl
sub
in
add
nop
sub
aas
into
cwtl
ret
pop
jo
or
insl
pop
jp
test
mov
out
jnp
mov
push
arpl
mov
push
stos
into
gs
popa
or
mov
pop
adc
cmp
mov
popf
movsl
adc
mov
push
push
push
and
repz
wbinvd
sbb
ja
mov
ret
and
out
sbb
iret
jns
orl
stos
mov
dec
pop
xchg
xor
in
stc
nop
mov
fldcw
aaa
repz
test
sbb
shlb
inc
dec
lret
aaa
inc
dec
stc
popa
inc
pop
scas
mov
in
inc
push
mov
cmp
pop
fs
in
xor
cwtl
rorl
push
sbb
push
xlat
cmp
sahf
lds
loop
and
or
inc
cs
fistps
xor
dec
push
sbb
loope
mov
fimull
iret
gs
xchg
sbb
popa
call
adc
adc
jb
mov
loope
sbbb
loopne
fdivs
pop
xchg
std
int3
movsb
pop
fimull
mov
hlt
pop
push
pop
ja
jle
testb
inc
mov
xor
xor
pop
jb
push
xchg
mov
cmp
pop
call
out
cmpsl
dec
loop
imul
lcall
out
outsl
ret
cmp
cmp
sbb
insl
jecxz
mov
in
cli
dec
pushf
mov
mov
addl
enter
fimull
or
sub
pop
sahf
cmpsl
pop
movsl
cmp
iret
jge
or
subl
mov
xchg
clc
sbb
arpl
cld
lds
jmp
out
outsl
loop
pusha
dec
add
test
pop
inc
push
jge
outsb
add
mov
mov
sub
mov
call
xchg
jg
push
mov
cmpsl
xchg
loopne
inc
cs
pop
mov
ljmp
rorb
test
sub
mov
sbb
lea
pop
sbb
push
cmp
add
pushf
jmp
push
add
shlb
cs
mov
inc
ds
cs
shlb
jmp
into
push
xchg
lea
call
add
call
mov
adc
inc
xor
hlt
cmpsb
adc
or
fs
scas
or
adc
dec
je
pcmpgtd
xchg
rcll
aas
ret
jno
dec
data16
shrb
pop
stos
sub
out
adc
xchg
jmp
xor
insb
cvtps2pd
cmp
sub
lock
dec
loop
fisubl
push
stos
in
ljmp
imul
and
push
lds
sub
mov
mov
pop
inc
inc
push
repz
jge
ljmp
xchg
sub
loop
push
ret
adc
xchg
and
bound
fildl
sbb
bound
mov
es
add
xchg
push
fisttpll
stos
dec
pop
test
inc
push
sbb
add
or
cmpsb
push
push
addr16
popf
out
and
fidivrl
xor
inc
dec
popa
cld
xchg
outsl
into
pop
jge
in
add
out
pop
movsl
lret
adc
movsb
repz
xor
push
fwait
xchg
sub
mov
enter
shrl
and
sahf
push
sbbl
add
sbb
fimull
jl
pop
gs
adc
ss
lods
inc
lcall
in
test
jl
cmpsl
fwait
jo
dec
loope
xchg
and
ja
inc
lods
test
fs
xor
cmpsb
ret
inc
aas
add
jo
imul
xchg
sbb
mov
add
js
je
in
insb
or
mov
cli
fnsave
adc
aas
lea
enter
or
ror
and
ljmp
out
or
dec
mov
dec
mov
dec
push
xchg
cmp
push
aaa
jp
sti
mov
loope
popf
insb
inc
xchg
push
test
mov
out
jb
jg
unpckhps
popf
xor
push
mov
adc
stos
popa
sti
lock
out
mov
cmp
std
push
fisttpll
sti
dec
lahf
iret
dec
lahf
jne
icebp
mov
aas
inc
aam
cwtl
pushf
inc
sub
pop
outsb
xor
dec
hlt
ds
insb
adc
mov
mov
inc
sub
sub
adc
push
cmp
inc
adc
test
mov
mov
lea
aad
test
or
inc
mov
int3
lcall
jecxz
fbld
and
idivl
jmp
pop
fstpt
lods
push
pop
sub
jl
cmp
mov
dec
ret
pop
enter
lcall
sbb
repz
or
cmp
jp
dec
out
mov
outsl
mov
xchg
jbe
mov
xchg
push
mov
xchg
stos
scas
fwait
xor
sbb
dec
inc
mov
mov
scas
mov
arpl
inc
fdivrs
xchg
lods
or
inc
aas
sub
fucom
jp
xchg
ds
jno
ret
pop
cmp
jg
pop
jo
cmp
sbb
push
call
cmc
fstpl
pop
add
cld
xchg
popf
and
repz
scas
push
lods
and
xor
lock
pop
testb
fdiv
add
ss
cmp
inc
push
bound
aaa
enter
fwait
xor
mov
add
adc
sbbl
sbb
inc
ficoml
repz
rorl
cmpsl
scas
and
mov
jb
jbe
scas
and
xchg
out
aam
add
xchg
inc
fildl
jl
jbe
daa
bound
jae
cmpsl
arpl
pop
scas
push
dec
mov
in
fsubrs
cltd
nop
daa
or
mov
add
out
sbbl
lret
jmp
std
jmp
fwait
xchg
push
jnp
jle
sbb
xchg
adc
hlt
xchg
xlat
outsb
or
data16
insb
push
inc
fnstenv
lea
mov
fwait
mov
imul
or
cmp
xchg
sub
in
mov
push
sbb
dec
je
add
xorb
mov
jp
or
pusha
lods
sub
jle
rcll
adc
popf
inc
cmp
xchg
lea
pop
mov
jb
jmp
jl
jo
stc
movsb
aam
or
outsb
cmp
push
lea
mov
xchg
pop
hlt
in
sub
pop
dec
lahf
ss
dec
fbstp
mov
out
cli
mov
int
dec
fnstenv
sahf
push
jmp
lahf
pop
lock
fidivs
pop
jnp
xchg
push
cld
xchg
test
test
fcomps
mov
test
ret
hlt
in
in
sbb
insb
add
or
mov
mov
shr
jg
jae
sub
mov
hlt
jne
dec
cmpsl
or
xchg
cmp
pop
sbb
imulb
movsl
cmp
push
xchg
sub
pop
ret
pop
mov
pop
loope
xor
inc
imul
xchg
addl
dec
stc
das
mov
imul
mov
into
ljmp
and
lahf
push
push
push
out
aas
jae
mov
xchg
jns
lods
mov
mov
jns
pop
lods
mov
aaa
movsb
repz
push
lods
mov
xchg
mov
gs
es
ja
xchg
cmpsb
test
insb
mov
arpl
mull
jle
adc
jbe
in
cmpsb
mov
mov
mov
xchg
imul
lea
mov
data16
cmpsb
xchg
outsl
stc
popf
lea
rorb
cmp
xchg
dec
loopne
nop
data16
les
dec
sbbl
nop
movsb
shrl
mov
jmp
icebp
cltd
xor
pop
daa
mov
je
and
inc
lds
sbb
and
mov
outsb
inc
xchg
sub
mov
jbe
fidivrs
inc
adc
testl
stos
andl
cmp
sub
nop
popa
xchg
mov
shrl
cwtd
xor
test
ret
add
imul
ljmp
out
jnp
xchg
stos
mov
testl
mov
pop
div
popa
adc
push
mov
mov
push
jle
sub
pop
nop
jno
jp
push
aas
adcl
mov
xlat
mov
mov
jle
popf
movsl
cmp
fst
push
inc
stc
nop
jbe
mov
adc
jecxz
pop
adc
sahf
jle
xchg
cmp
jmp
jnp
js
mov
cmp
jmp
xchg
imul
int
cmc
in
and
jnp
shlb
lret
daa
mov
dec
cmc
jecxz
sub
pop
cmc
adc
clc
xor
pop
lock
in
fstps
loop
rclb
adc
stos
inc
push
adc
ss
fiadds
jecxz
icebp
adc
loopne
inc
pop
out
xchg
aad
sti
pop
jecxz
pop
adc
lds
adc
pop
lock
and
jbe
push
std
js
xor
shrb
jecxz
fwait
adc
jb
pop
add
loop
int
addr16
dec
in
adc
xchg
dec
repnz
cmp
mov
hlt
jne
sub
push
push
stc
inc
fisubrl
ret
repz
and
pop
cld
xchg
xor
je
sti
loope
insb
adc
insl
popa
add
mov
addr16
outsb
add
data16
cmp
arpl
and
push
out
icebp
in
and
xchg
out
cmc
test
inc
push
cwtl
sub
gs
xor
adc
adc
xchg
sub
pop
cmc
and
jmp
mov
jno
shld
repnz
add
cmpsl
xor
sbbb
dec
inc
fnstcw
loop
adc
jmp
cmp
adc
pop
icebp
add
xchg
push
adc
insb
inc
loopne
dec
adc
sbb
pop
dec
sbb
push
jo
xor
les
cmpsl
clc
adc
pop
dec
sbb
xchg
dec
imul
push
jb
shll
mov
std
adc
adc
cmp
mov
mov
arpl
dec
adc
dec
loope
or
cmp
adcl
sbb
int3
push
xor
addl
and
addl
xor
movsb
dec
adc
stos
cmpsl
xchg
sub
ja
cmp
cmpl
into
insl
mov
out
mov
das
scas
xchg
dec
loopne
jb
andl
or
ret
sub
pop
pop
lret
bound
mov
and
ret
jg,pt
outsl
mov
aad
out
out
test
pop
jne
lcall
sub
insl
pop
cmp
xchg
insb
ret
repnz
mov
test
sub
cltd
pop
aas
stos
inc
outsb
ret
repz
or
sub
mov
insl
mov
jge
mov
fld
pop
packsswb
xchg
xor
js
mov
mov
mov
js
cmp
pusha
aam
xchg
cs
fcompl
cli
xchg
in
pop
imulb
int
inc
sti
pop
iret
data16
jle
push
lods
sbbl
jno
mov
add
ret
clc
push
mov
jb
movsb
inc
pop
insb
std
adc
not
jmp
rcrb
jle
lcall
fs
inc
xchg
in
adc
jecxz
js
outsb
add
jge
nop
push
imul
in
adc
hlt
mov
call
popf
mov
cmc
or
ja
pop
add
xor
and
xchg
dec
gs
cmpsl
push
fstps
adc
sub
fwait
mov
dec
out
add
mulb
loope
inc
repz
push
adcb
mov
adc
inc
jmp
xor
imul
sbb
mov
xchg
xchg
dec
call
pop
scas
cld
adc
and
imul
insl
lods
inc
mov
ror
hlt
inc
pop
divb
xor
pusha
stos
add
hlt
inc
sbbl
sub
xor
jnp
filds
sub
jb
flds
push
rcll
xchg
jp
fwait
inc
lds
scas
cmpsb
insb
pop
sub
push
jne
psrad
rclb
adc
dec
and
loopne
outsb
xchg
xchg
cmp
or
inc
jnp
shll
push
dec
iret
insl
jbe
les
sub
xor
dec
out
and
mov
xor
ret
jg
loopew
sarl
xor
leave
cs
or
enter
lods
cltd
xlat
sub
int3
mov
or
fstps
es
insb
xchg
sub
rclb
adc
in
call
xchg
stos
add
adc
hlt
sub
or
pop
stos
xchg
lret
push
das
cli
mov
dec
inc
leave
mov
insb
ss
test
pushf
test
fcoms
loop
jae
scas
sub
out
sbb
loop
inc
aaa
sti
fs
sub
mov
push
inc
ficoml
mov
in
sub
dec
stos
inc
imul
push
sub
arpl
jle
imul
cwtl
xchg
repnz
jl
fbld
fsubl
out
xor
ret
fldcw
lods
inc
gs
into
cmp
inc
fcomps
mov
inc
mov
jecxz
data16
add
clc
test
arpl
sbb
pop
scas
int3
lcall
shrb
imul
out
nop
stos
jo
movsl
and
sbb
or
fiaddl
out
notl
stos
push
aad
jns
push
stos
js
cmc
pop
iret
xorl
lret
mov
and
int3
aas
cltd
das
fnsave
jl
shlb
movsl
xor
dec
xchg
fnstenv
test
cmp
jle
pop
inc
test
jnp
popa
xchg
inc
lock
pusha
mov
jle
in
xlat
out
in
loop
or
jnp
inc
jno
inc
mov
lea
popa
movsb
xchg
add
or
dec
mov
pop
mov
lods
jne
bound
lret
lea
push
mov
ja
cmp
pop
stos
bound
cmp
mov
ret
data16
into
jno
adc
mov
lock
shll
and
push
sub
xchg
les
mov
repnz
fldenv
mov
aad
push
lahf
add
push
jecxz
popl
add
jl
hlt
cwtl
jae
adc
mov
stos
dec
sbb
sbb
movsb
xchg
out
adc
cmpsl
jo
ds
out
fs
movl
push
movb
or
cltd
ss
call
dec
mov
fcmovnbe
dec
fucomp
lds
fisubrl
insb
out
fdivrs
sub
mov
rcrb
adc
cltd
or
jnp
add
cmp
jp
inc
enter
aad
jg
out
sbbl
je
jo
movb
in
jecxz
and
fiadds
add
cmp
or
sbb
mov
hlt
lret
sub
inc
or
adc
sub
les
fsubp
push
adc
mov
or
cmc
mov
jg
test
push
stc
lea
cmpsb
push
mov
sbb
and
out
sahf
adc
and
das
rorl
loopne
xchg
sbb
and
aam
je
and
mov
adc
imul
add
stc
rolb
xor
daa
sbb
mov
hlt
sub
in
data16
sbb
pop
decl
mov
mov
repnz
dec
mov
push
mov
dec
fbstp
repz
fadd
push
push
notb
and
cwtl
fdivrs
rorb
sbb
or
incb
fdivrl
pusha
imull
lock
mov
cmp
rcr
out
rorl
mov
jb
jp
push
inc
cwtl
lea
xor
std
int3
pop
movsl
push
xchg
into
adc
rorl
pop
lahf
loopne
sub
mov
stos
test
mov
sti
push
ror
call
cmp
in
aam
add
scas
inc
iret
pop
push
dec
clc
xchg
push
fsubs
out
dec
les
shlb
or
ja
roll
in
xor
inc
pushf
xlat
dec
and
rolb
pop
pop
ret
sub
mov
mov
inc
hlt
cmp
into
push
movsl
cmp
mov
adc
mov
and
adc
and
loope
cld
ss
mov
push
adc
hlt
and
int3
lcall
xlat
jge
and
and
fmull
cmp
sbb
in
pop
shrl
mov
out
xor
pushf
fidivs
fcoms
loop
xchg
adc
or
lea
mov
or
negb
out
xchg
test
mulb
out
mov
ljmp
lcall
push
cmpsl
leave
xor
out
xor
mov
xor
cli
fdivl
mov
pusha
xchg
jmp
mov
push
pushf
mov
sbb
loope
imul
mov
dec
aam
js
cwtl
inc
shrl
in
dec
jno
jge
push
add
pop
and
in
das
fisubrs
push
mov
in
sahf
sub
mov
or
xlat
mov
xchg
shlb
adc
js
loop
nop
out
test
mov
pop
add
mov
sahf
jl
mov
mov
pop
mov
cmp
mov
pop
xor
jae
jmp
call
xor
add
arpl
int3
mov
lret
jmp
popf
push
test
imul
and
sub
add
mov
cmpsl
dec
mov
cmp
pusha
lods
out
je
cmpl
pop
repz
pop
or
dec
xchg
inc
mov
cmp
adcl
daa
std
jne
pushf
xchg
sbb
xchg
repz
in
and
inc
ret
pavgb
xlat
cs
push
pushl
sub
dec
outsl
xlat
outsb
mov
ret
divb
fmuls
leave
pusha
fsubrl
les
mov
in
mov
or
adc
add
and
push
adcl
cmc
xor
sbb
aas
lods
mov
shrb
pop
adc
lods
pop
mov
aas
ljmp
xor
jb
insb
outsl
push
dec
iret
jg
nop
jp
cmp
nop
mov
push
jno
push
jne
fwait
dec
xor
cwtl
pop
outsl
mov
mov
jns
mov
sub
xor
dec
pop
decl
int3
inc
cs
pop
mov
push
jecxz
cltd
mov
fbld
clc
fldl
sbb
jns
imul
lods
mov
clc
sbb
or
sub
cmp
fbstp
push
xor
adcl
fildll
jmp
stos
jge
int
push
jb
subb
sbb
aas
jb
sub
imul
jg
jo
push
adcb
adc
inc
pop
sti
cs
popa
fisttpll
dec
enter
mov
push
dec
jne
jl
stc
xor
cwtl
xchg
add
bound
aas
sbb
push
xchg
clc
xor
dec
movb
inc
enter
repz
inc
sub
data16
sbb
mov
loope
insb
cwtl
xor
test
add
jmp
and
and
xor
adc
sbb
idiv
xchg
inc
test
ret
inc
cwtl
jp
adc
shll
dec
mov
lea
jns
push
sti
ss
or
pop
loopne
daa
fnstcw
rcll
iret
cmp
pusha
and
pop
adc
cmp
in
and
fisubrl
daa
out
mov
cli
dec
cld
jae
and
mov
stos
xor
arpl
cmp
cmpsl
dec
cltd
cmp
xor
rorb
or
aas
inc
testb
xchg
mov
lds
pop
mov
pop
leave
push
sahf
dec
cwtl
sub
xor
sbb
mov
ljmp
js
pop
dec
bound
divl
cmp
push
inc
or
aaa
imul
popa
imul
lcall
jnp
push
sub
imull
call
addb
jae
stos
mov
add
pop
into
xchg
es
inc
jns
inc
mov
sahf
sbb
cmpl
fldcw
int3
inc
enter
mov
aam
stos
mov
pop
rcrb
mov
dec
jecxz
icebp
mov
je
jo
cmp
mov
frstor
call
dec
iret
adc
push
dec
movsl
xor
jb
into
dec
cli
jns
and
popa
cs
aad
or
notl
leave
mov
iret
and
adc
push
fmulp
lds
mov
lods
inc
mov
mov
xor
mov
lods
adc
pop
rolb
add
out
inc
mov
sbb
jmp
xor
jno
ret
dec
mov
sbb
dec
das
loope
sahf
sti
and
cmpsl
jb
lods
pop
imul
dec
ret
imul
into
xend
mov
fdivrl
out
xor
pop
fucom
jle
cmp
adc
in
cmpl
lret
dec
rorb
sbb
fwait
ds
mov
and
orb
jno
lret
ds
ljmp
ds
roll
ss
sbb
adc
stc
adc
icebp
xor
xor
enter
es
inc
sbb
xlat
call
lret
sub
mov
nop
xchg
cmp
jp
adc
aam
pop
jle
imul
push
sarb
mov
insb
sub
adc
jle
ljmp
nop
dec
lds
mov
xchg
xor
pop
outsb
adc
mov
insb
mov
or
cmpsb
pushf
adc
scas
mov
cmp
repnz
xor
iret
sbb
std
lock
ret
scas
add
adc
jmp
fimuls
int
sub
dec
ret
loope
cmp
cmp
add
jmp
cmc
daa
and
ja
lret
push
ficoms
cli
outsl
int3
movsb
pop
rolb
push
pop
rcrl
sub
mov
enter
jp
int3
push
lods
popa
stos
pusha
xor
in
incl
fidivl
pop
pusha
test
sbb
stc
inc
mov
push
std
addr16
out
xor
popf
or
mov
jecxz
nop
cmc
lret
fdivrl
sub
into
test
sbb
movsl
adc
mov
aaa
shlb
loopne
sbb
ljmp
add
test
adc
mov
out
mov
xchg
adc
dec
mov
test
mov
pop
pop
aad
jnp
cmp
mov
mov
gs
scas
push
hlt
icebp
insb
sarb
fistpl
in
aaa
inc
aam
test
and
jne
test
sbb
xchg
insb
and
nop
addb
ja
imul
sub
into
inc
sahf
xchg
sub
inc
inc
mov
fwait
sub
mov
icebp
adc
xlat
and
mulb
leave
or
sahf
mov
cmpb
stc
push
lock
stos
sub
scas
xchg
lcall
rcrb
in
xor
fsts
sub
or
lds
lods
xchg
mov
mov
mov
loope
or
out
jnp
xchg
insb
scas
sub
setns
nop
jns
ljmp
mov
aad
jnp
test
jnp
sbbl
push
xchg
loop
sub
dec
jnp
jp
dec
mov
sahf
push
insl
mov
jp
push
mov
test
jns
cmpsb
jle
add
xchg
cwtl
cmp
stc
in
xchg
sub
mov
je
sarl
ss
ss
lret
dec
pop
jmp
lds
cmp
push
addl
jg
mov
and
out
and
xchg
sbbb
lret
jl
dec
jno
inc
lahf
pop
and
sbb
sub
lahf
cmp
and
mov
xor
dec
mov
push
add
mov
in
jle
mov
or
sbb
or
enter
fprem
and
scas
ret
push
or
iret
push
loope
add
mov
ds
std
xchg
cmp
pop
movsb
cmp
jo
lret
inc
stc
ret
dec
ret
int
cmpsl
mov
clc
js
cwtl
xchg
daa
dec
push
add
outsb
mov
xor
mov
mov
xchg
ja
or
ja
dec
inc
or
mov
push
icebp
pushf
xchg
ret
sbb
jecxz
imul
lret
xchg
outsb
in
flds
mov
mov
and
insl
add
add
dec
test
xchg
rcll
mov
enter
daa
dec
loopne
loopne
jae
aaa
ss
mov
stos
xchg
sbb
push
mov
adcl
xlat
cmp
pop
jecxz
lahf
fstpl
inc
jns
stos
pop
lods
cmp
outsb
mov
mov
imul
lcall
pusha
imul
pop
je
popa
loopne
cmpsb
aam
pop
stc
daa
xlat
dec
shr
xor
aaa
mov
add
mov
mov
ss
ffreep
out
stos
xchg
cs
aad
push
push
mov
cmp
pop
ret
loopne
lahf
ss
cmpsb
mov
arpl
jnp
imul
dec
mov
cmp
jno
lods
jp
popa
inc
ljmp
ss
sub
sarl
xor
es
inc
std
das
popa
stos
sbb
sub
test
iret
pushf
nop
iret
pusha
ss
xor
pop
shlb
or
mov
test
pop
int
xchg
and
pop
stc
xor
cs
and
add
mov
out
lods
ret
cmp
sbb
cmp
push
out
int3
aas
loope
and
insb
inc
cmp
dec
shl
sub
jecxz
mov
cld
out
iret
aas
loop
jno
lret
push
add
sarl
pushf
insb
add
xor
cli
sub
and
mov
mov
lock
jns
jg
enter
cmp
xor
bound
orl
outsb
cld
and
fwait
stc
push
mov
lock
pop
sbb
xchg
sub
test
int3
sub
xchg
jge
nop
inc
faddl
jmp
jb
and
aaa
mov
hlt
in
aad
popf
xchg
push
negb
aam
outsb
mov
ret
jecxz
pop
mov
clc
jae
fnstcw
mov
pop
cli
aas
imul
inc
outsb
sbb
mov
inc
or
sahf
inc
jno
push
or
xchg
pop
dec
jecxz
mov
or
jne
adc
idivb
and
mov
and
inc
sub
dec
ja
test
fisubrl
jnp
js
xor
cmp
xor
mov
fstpt
cmc
out
in
fsubl
aad
and
outsl
popf
lock
mov
test
or
push
adc
ss
mov
add
cmc
cmp
mov
inc
push
gs
subl
test
lret
xlat
addl
repz
push
loope
push
sub
popa
push
cmpb
iret
and
jns
lea
in
cmp
dec
xor
push
fs
out
sbb
scas
dec
sbb
pop
cld
in
andl
dec
lcall
xchg
dec
test
sti
pop
jo
popl
xchg
push
rorb
push
xchg
mov
mov
les
sbb
lcall
lret
int3
dec
push
loopne
clc
mov
out
inc
cwtl
fdivs
xor
jmp
in
pop
pop
stos
inc
leave
or
dec
insl
mov
es
dec
or
or
xor
lods
pop
and
test
lret
aam
sahf
mov
ss
adc
test
outsl
mov
or
mov
adc
mov
cmp
sub
xor
sahf
pushf
push
stc
wbinvd
adc
xchg
sbbb
dec
mov
stc
add
lahf
cmp
je
addr16
out
sub
dec
stc
das
dec
or
add
jecxz
insb
push
repz
jno
mov
enter
movsb
imul
sbbl
push
pusha
jbe
xor
sbb
or
and
and
bnd
rorb
and
xor
negl
adc
test
xchg
fdivl
pop
push
into
dec
out
das
les
jecxz
out
stc
inc
pop
or
sbb
inc
mov
add
test
repz
push
js
push
cmp
imulb
in
and
std
aas
xor
test
test
fldenv
push
jmp
aad
add
or
divl
in
pushf
and
imul
mov
mov
mull
xor
adc
scas
int
xchg
jmp
mov
test
pop
ret
lret
out
sbb
out
xchg
aad
fcmovne
js
xchg
adc
mov
out
loopne
pop
scas
jns
sub
sbb
fisubl
cmp
sarl
and
xlat
lcall
stc
leave
ja
jo
fistl
pand
inc
xor
push
in
and
fwait
jne
inc
enter
mov
dec
sbb
repz
cmp
lcall
insb
fisttpl
fisubl
insb
cltd
xor
je
ret
call
or
pop
iret
pop
mov
pop
in
stos
add
test
or
mov
hlt
add
pop
in
popa
or
test
insl
fwait
push
mov
xchg
cmp
add
mov
nop
sub
jle
adc
sbb
imul
mov
cmpsl
or
xchg
pop
lret
push
in
xchg
lds
xor
nop
xchg
loop
push
mov
mov
pop
movsl
pop
popl
into
cmp
jnp
and
repz
fnstcw
or
cli
adc
icebp
stc
std
das
in
mov
in
or
mov
mov
in
mov
and
sbb
aaa
push
or
inc
push
and
jg
mov
xor
test
push
ret
dec
pop
jp
xchg
insl
add
add
rcrl
jne
outsb
dec
mov
and
pop
test
cmp
lea
sub
mov
andb
pop
or
jmp
sbb
xor
jl
ret
pop
dec
xor
push
stos
push
in
lock
rcrl
fistps
cmc
xor
dec
ss
mov
ds
in
pop
popa
and
xor
xchg
sbb
and
mov
jl
push
scas
sub
jecxz
adc
mov
jl
inc
jb
sub
inc
sub
sub
shlb
and
add
sbb
xor
inc
ret
fidivl
xchg
xor
fistpl
mov
enter
ljmp
jno
idivw
ret
sub
jno
jle
in
pop
push
in
pop
or
sub
data16
jnp
mov
jmp
jb
pop
in
out
mov
xor
or
pop
notb
call
fcmovnu
pop
jae
outsl
fstpl
repnz
push
jmp
movsl
sti
daa
ljmp
sub
call
ret
xlat
or
ficoms
insb
stos
or
xchg
pop
xchg
mov
xchg
ja
cmp
pop
pop
mov
in
fwait
cltd
orl
sbb
or
mov
daa
or
mov
mov
clc
addr16
inc
mov
scas
or
inc
scas
sub
push
xchg
jmp
xchg
int
repnz
xchg
loopne
scas
ret
adc
lret
jecxz
leave
cmpsb
or
mov
push
xor
xor
adc
in
add
mov
sub
mov
or
push
out
int
pop
mov
test
adc
pop
std
xchg
xchg
jb
or
jnp
cmovb
push
push
subb
fdivl
imul
sbb
cmp
sbb
sbb
stc
xor
addr16
shrb
xor
pushf
xor
gs
test
imul
mov
das
jecxz
repnz
out
and
adc
les
nop
pop
xlat
adc
push
or
cwtl
push
pop
repnz
mov
xor
ret
lods
sub
out
mov
mull
mov
pushf
ss
lock
mov
repnz
das
rcl
add
rcr
jo
and
int
mov
outsb
fnsave
bound
fmul
dec
shrl
in
sti
pop
leave
ret
sbb
pop
test
push
mov
mov
push
cmp
mov
icebp
adc
mov
hlt
and
ret
inc
bound
incb
mov
sbb
mov
scas
mov
repnz
lods
iret
sbbl
mov
or
out
add
cs
orl
loop
pushl
lods
mov
mov
add
subb
xchg
cmc
mov
inc
js
je
adc
enter
insb
jmp
dec
out
cmp
imul
lock
xor
movsl
adc
test
ret
data16
pop
or
dec
loope
sub
push
lcall
and
mov
aas
push
rol
pop
add
es
pop
lret
mov
push
cmp
dec
into
sub
ljmp
in
mov
or
loop
fwait
inc
fcmove
inc
sbbl
in
pop
repz
lcall
mov
mov
addb
fsubrs
and
sahf
push
aam
in
aam
stos
pushf
std
mov
fnstenv
jg
fnsave
shll
notb
sbb
cmp
lea
xor
push
in
stc
add
mov
dec
in
jnp
mov
aam
data16
cmc
imul
push
test
push
fidivl
jp
sti
movsl
jl
xchg
add
and
negb
and
outsl
in
aas
push
adc
popf
xor
push
jmp
stc
mov
or
cmp
shrb
pop
push
inc
int3
xor
into
test
mov
push
hlt
jecxz
mov
push
and
es
js
cmp
es
xchg
hlt
notl
push
xchg
add
lcall
ss
cmp
icebp
xchg
mov
jne
test
xor
cmp
push
lock
xchg
push
mov
imul
lods
into
and
cs
shrl
cwtl
xor
loop
add
loopne
test
fstps
loop
gs
arpl
and
mov
and
addr16
add
cwtl
pop
push
mov
lahf
pop
jnp
mov
adc
test
xchg
inc
pop
test
out
add
insl
das
mov
mov
shr
jae
jg
cmp
sahf
lds
ljmp
loope
pushf
aam
fucom
lret
sub
push
and
xchg
aad
popa
inc
aam
clc
fnsave
js
movsb
lea
addr16
cltd
mov
sbb
fistpl
push
inc
pop
and
or
iret
pop
shlb
inc
jo,pt
cld
out
pop
std
push
lods
push
cmp
mov
or
andb
jecxz
fwait
dec
or
and
or
mov
sbb
cwtl
mov
jle
call
fisubs
xor
popa
add
sbb
sahf
push
jmp
dec
loop
mov
sahf
insl
adc
inc
xor
popf
fisttpl
mov
and
icebp
push
loopne
fstpt
mov
je
xlat
hlt
bound
jne
push
sbb
fisubs
int
xlat
jle
add
inc
add
pop
push
push
add
mov
out
pminub
sub
cmc
fidivrl
dec
push
int
and
repnz
test
pop
loop
lcall
pop
xchg
pop
cmp
sub
mov
xchg
inc
and
jae
insb
test
stos
push
pop
fcompl
je
jl
cmpsl
in
fnstenv
cmovp
jle
movsl
cwtl
adc
in
fistps
jbe
xchg
das
fisttpll
adc
inc
div
mov
cltd
add
cmpsl
jmp
or
test
sbb
cld
mov
cmp
jo
mov
add
popf
and
cwtl
xchg
dec
dec
out
aaa
jg
test
dec
add
cmp
jae
into
loop
insb
aam
std
xchg
popa
jne
push
add
or
mov
adc
popf
xor
daa
in
test
cmp
pop
lods
aas
in
test
push
fbstp
ffreep
pop
shl
or
arpl
imul
stc
jp
dec
out
sbb
call
mov
aas
xchg
adc
push
mov
add
xchg
shrl
sbb
lods
lea
fs
test
pusha
xchg
xchg
sub
out
fldcw
dec
mov
ret
addb
fisubrl
xchg
dec
or
rcl
cmpsl
outsb
or
push
sbbl
xlat
roll
mov
mov
lods
push
push
addr16
gs
cltd
jns
sbb
int3
jns
xchg
xchg
cltd
jns
inc
pop
sti
mov
out
fwait
js
sbb
dec
cli
push
push
dec
xchg
push
rcrb
in
push
out
sbb
dec
jno
test
inc
cwtl
aad
dec
sbb
sti
bound
test
filds
xchg
xor
fcoms
repz
cmp
lods
xor
sub
push
cmp
iret
xchg
and
inc
bound
or
dec
je
jb
mov
mov
mov
jae
xchg
inc
test
cmp
and
les
negb
iret
test
inc
pop
inc
test
movsb
mov
test
repnz
mov
scas
lcall
aaa
loop
jge
pop
les
jo
out
sbb
push
shlb
lods
dec
adc
dec
cmp
pusha
adc
enter
jecxz
dec
push
testl
sbb
lret
popl
fldl
push
js
mov
mov
gs
pop
dec
adc
test
jnp
pop
dec
imul
pop
cmpsb
js
fildl
mov
jg
insl
fistps
add
mov
jle
xchg
pop
sub
and
arpl
cmp
jns
fsub
dec
xchg
repz
ds
sbb
sti
mov
stos
jbe
mov
adc
inc
jg
dec
dec
or
push
lahf
or
adc
sub
adc
test
sub
or
fsts
mov
les
add
adc
xor
sarb
add
and
or
cmpsl
cmp
scas
test
popa
out
mov
mov
into
jge
xor
add
shll
fwait
inc
xor
mov
test
inc
callw
xor
es
adc
popf
jns
outsl
dec
mov
cwtl
mov
std
ret
xchg
dec
or
xchg
inc
mov
mov
call
mov
shrb
mov
mov
mov
jo
push
into
and
jp
cmp
mov
cltd
popf
cmp
push
add
cwtl
ds
insl
aas
and
pop
jecxz
xchg
inc
movsb
sti
push
mov
movsl
shlb
test
mov
pop
mov
sub
das
test
adc
ret
dec
cmp
adc
push
sarb
jo
in
dec
pop
lret
add
lock
lahf
jnp
xchg
aas
mov
mov
sbb
mov
inc
fwait
aaa
dec
mov
pusha
adc
cmc
dec
mov
dec
xchg
sub
imul
xor
and
mov
push
jecxz
xor
push
inc
inc
adc
mov
arpl
shrb
mov
pop
mov
mov
jp
or
clc
pop
lds
mov
das
adc
rclb
dec
mov
nop
jg
mov
mov
roll
pop
cwtl
adc
mov
mov
mov
push
pop
mov
adcb
shll
push
and
inc
fistpll
call
sti
pop
jnp
xchg
inc
aaa
mulw
sub
and
mov
ret
iret
mov
out
adc
mov
lock
sub
xchg
and
add
jne
inc
adc
gs
jns
xchg
inc
xor
repnz
cs
adc
mov
ret
add
repz
inc
adc
mov
ret
repnz
add
nop
sbb
inc
add
sbb
ds
xchg
fs
or
mov
cmp
daa
js
cld
and
cmp
jmp
mov
push
xchg
imul
mov
mov
mov
pop
mov
test
mov
out
cmp
xor
mov
xchg
mov
mov
stos
outsl
out
push
pop
jl
xor
mov
inc
sahf
mov
les
sub
and
call
inc
xor
or
addr16
outsl
out
test
mov
iret
filds
jae
pop
xsaveopt
add
outsl
cmp
mov
rorb
or
cltd
jmp
push
or
pop
repnz
add
mov
in
mov
mov
pop
js
adc
shll
add
aam
jle
test
popf
and
ja
dec
mov
js
push
adc
jecxz
push
stc
jmp
jmp
sti
mov
dec
jno
sarb
lods
pop
add
adc
stos
xor
jp
adc
inc
jnp
xchg
dec
xchg
mov
popf
insb
cmc
inc
dec
pop
add
xchg
call
mov
fs
adc
enter
pop
sbb
aad
inc
insl
cmc
jl
pop
add
ret
lods
xor
fisubs
clc
bound
mov
insb
divb
pop
add
addr16
mov
lock
push
outsb
and
bound
jg
adc
cmp
lock
in
add
lcall
xor
and
pop
mov
mov
movsl
ret
adc
cmp
pop
gs
mov
lods
hlt
push
mov
mov
fadds
adcb
fistpll
mov
movsl
test
outsl
push
xor
mov
jne
or
fbld
lods
cs
xchg
sarb
push
mov
lods
das
imulb
orb
stos
xor
xor
push
mov
and
sub
cmp
nop
xor
dec
mov
mov
cmp
mov
ja
enter
add
mov
pop
pop
fstpt
add
std
outsl
loopne
jno
dec
or
imul
mov
push
lahf
bswap
fmull
jl
je
sarb
outsl
sbb
insb
repz
loope
insb
in
cmp
lret
daa
hlt
gs
mov
pop
cmp
cli
add
popa
lds
sar
leave
mov
enter
data16
push
mov
mov
push
movsb
ss
inc
push
xor
lods
sub
stos
int
ret
or
ds
test
aad
pop
mov
fbstp
orb
jno
rcl
sub
sbb
add
cs
pusha
repnz
dec
and
cmp
xchg
fdiv
sbbl
adc
mov
test
in
imul
pop
jne
mov
test
pop
cmp
jne
test
dec
pusha
mulb
mov
mov
mov
mov
jmp
adc
or
negl
mov
jae
add
pop
scas
inc
lea
mov
fs
xchg
cmp
jne
xchg
xchg
add
adc
jecxz
push
mov
ljmp
add
dec
inc
pop
inc
add
addr16
xchg
sahf
inc
mov
lods
call
repz
lret
call
sbb
mov
xor
inc
cmpsb
push
ret
mov
ja
sub
push
lds
fistpll
insb
push
call
aaa
mov
roll
jns
movsb
xor
sbb
sbb
cld
enter
jge
jnp
sbb
hlt
sbb
sbb
dec
xchg
cmp
dec
and
je
sahf
test
xchg
mov
sub
out
outsb
lock
adc
xchg
xchg
sub
mov
stos
data16
mov
fwait
aaa
rcrb
adc
xor
addr16
dec
or
imul
mov
popa
out
scas
pushf
inc
mov
stos
das
sub
shlb
aas
hlt
pop
lret
pop
push
fstps
jne
sub
pop
add
sti
pop
lods
sub
mov
rcrb
imul
lds
or
push
cmpsl
mov
aas
mov
cld
inc
pop
add
sarl
cmp
add
mov
mov
orb
sub
stos
mov
fiaddl
sarb
adc
lahf
aas
jmp
call
ja
bound
stc
out
test
mov
stc
in
andl
push
mov
aam
push
xchg
inc
push
les
dec
and
mov
loop
add
dec
jb,pt
mov
pop
mov
jmp
cmp
xor
mull
movsb
push
add
push
jb
cmpsb
les
jg
rcrb
fstpl
outsl
aaa
mov
add
sahf
push
pop
stc
test
mov
jnp
mov
xchg
out
add
push
pop
push
lds
pop
into
iret
ljmp
test
repnz
jae
orl
push
stc
xchg
bound
ljmp
jge
cmpl
push
fdivs
sahf
and
inc
xchg
xor
xchg
cmp
add
cli
inc
sub
xorl
cmpsl
or
xchg
aas
mov
mov
loop
xor
nop
inc
mov
or
mov
push
stos
add
popf
or
add
mov
test
aam
out
push
in
orl
push
dec
or
xor
in
movsb
mov
lcall
and
and
pop
add
mov
aam
jno
cld
pop
clc
call
cld
mov
sub
je
mov
mov
inc
mov
push
add
nop
clc
pop
out
sahf
cmp
mov
movsb
xor
xchg
fdivrs
fucom
jne
test
push
mov
or
xchg
mov
mov
fwait
cmp
fnstenv
sbb
add
out
pop
dec
loopne
dec
stc
pusha
sbb
dec
adc
popa
jb
mov
jno
popa
mov
les
xor
sub
call
pop
fwait
or
jno
ja
les
call
out
cs
fwait
sti
pushf
inc
xchg
into
leave
xchg
dec
les
jbe
pop
cli
xor
sahf
movsb
sub
xor
das
rclb
test
xchg
mov
cltd
cmp
movsl
or
or
inc
push
push
aam
cs
push
arpl
ret
xchg
mov
and
sbb
mov
lods
cmp
shrb
push
divl
movsl
cld
popa
push
sub
mov
addl
or
repnz
mov
or
cmp
dec
pop
cltd
daa
sub
movsl
es
pop
pop
dec
fcomip
jp
out
cmpsb
jnp
lret
push
fucom
jle
xchg
div
pop
int3
repz
test
push
pop
stc
xor
adc
jle
and
mov
mov
xchg
test
fdivrs
test
cmpsb
mov
cmpsb
mov
and
aas
cltd
pop
push
and
dec
xchg
jge
jae
sti
mov
pop
mov
out
das
test
cli
ljmp
test
hlt
jmp
clc
cli
pop
mov
fmull
imul
jecxz
push
add
incb
shl
lds
xlat
rcll
or
push
xor
cmp
pushf
sub
test
shlb
sbb
xor
fldl
les
sub
int
aaa
imul
fstpl
lds
dec
adc
xlat
or
adc
gs
mov
cmpsb
movsl
das
mov
adc
out
push
pop
fidivl
add
mov
lret
into
xchg
cmpsb
xor
push
popa
repnz
ds
lret
mov
pop
xchg
adc
adc
pop
push
jp
xor
vdivps
push
inc
adc
or
mov
pop
bswap
pop
aas
push
leave
mov
mov
fidivrs
mov
int3
aad
icebp
loop
jg
lock
cmp
inc
pcmpeqb
xchg
sub
cmpxchg8b
int3
xor
inc
adc
sub
jg
pop
lock
outsb
cmc
mov
pop
les
aas
lods
and
xor
jl
pop
pushf
jp
cmp
lret
push
jg
inc
hlt
mov
leave
mov
mov
scas
sub
arpl
pop
loopne
lods
in
int
jmp
mull
daa
or
mov
dec
add
or
fs
pop
pop
test
mov
adcl
insb
divb
cwtl
inc
nop
popa
add
les
ds
mov
sub
fs
mov
sbb
adc
xchg
cmp
dec
adc
loop
cltd
inc
nop
notb
adc
aam
lahf
ds
sub
push
xchg
loopne
pop
push
fidivrl
pushf
xor
mov
pop
movsl
adc
adc
gs
sub
ljmp
ja
iret
lock
clc
pop
bswap
ja
mov
mov
xchg
inc
scas
ret
aas
cltd
mov
jo
mov
cmc
shll
add
in
xchg
inc
adc
data16
sbb
mov
or
adc
fs
pop
imul
mov
scas
mov
xor
incl
addb
mov
mov
dec
push
xchg
popf
mov
ret
js
sbb
test
jmp
push
sub
dec
cmpsb
sub
scas
outsb
icebp
mov
and
pop
fidivrs
sbb
cmp
stc
movsb
pop
pop
icebp
out
jo
push
arpl
enter
push
mov
lock
popf
mov
and
cmp
repz
insl
and
cmp
pop
clc
insb
cmp
dec
outsl
js
sub
repz
insl
jmp
xchg
repz
and
repz
outsb
repz
repnz
lods
mov
xlat
jnp
or
and
pop
pusha
jmp
dec
orb
xlat
lcall
push
xor
movsl
lret
fs
xchg
cmp
sbb
aaa
jbe
add
xchg
bound
jae
lcall
sbb
je
sub
jp
test
cld
pop
inc
fists
insb
hlt
pop
cli
pop
jb
scas
cld
cmp
scas
jecxz
outsl
fdivs
mov
sub
orl
dec
cmp
jns
stos
adc
imulb
jle
call
mov
aam
mov
dec
ret
mov
dec
adc
orb
dec
adc
cmpsl
lret
xchg
jno
into
lea
outsl
popa
test
dec
jns
xor
movsl
add
je
jb
lahf
imul
icebp
shrl
adc
mov
pop
sbb
and
aaa
scas
xor
ror
pusha
orb
jb
call
negl
dec
das
mov
add
xor
fidivrs
cmp
or
add
int
sub
mov
xor
and
ds
rorb
aam
insl
xor
dec
or
and
bswap
in
aas
rolb
mov
test
out
jnp
xchg
or
or
es
or
mov
push
pop
cld
pusha
roll
pop
mov
mov
mov
movsl
adc
imul
sbb
dec
pop
mov
shr
xchg
cmpl
mov
xor
mov
xor
sti
cmpsb
cmp
outsl
dec
int3
xchg
idivb
or
pop
mov
outsb
or
aad
jnp
icebp
xchg
lcall
cmpsl
inc
add
out
mov
ror
negl
mov
pop
scas
call
inc
cmp
sbb
ficompl
orl
popa
xor
sbb
mov
fldl
xlat
sbbl
int3
or
mov
mov
mov
arpl
mov
adc
xlat
ja
mov
data16
and
sub
push
das
xorl
pop
sbb
dec
push
incb
loopne
cmpsl
xchg
sbb
and
xor
subl
and
jg
dec
xchg
adc
je
cmpsl
xor
lcall
mov
lods
scas
daa
gs
jge
scas
inc
clc
pop
test
jmp
lea
test
adc
sti
repz
aad
orl
repnz
sbb
fstpl
ret
outsb
push
sub
and
jne
push
xor
stc
pop
cltd
cmp
popf
jae
les
or
add
notb
push
sub
pop
repnz
push
adc
mov
ds
adc
andl
cmp
shl
insl
pushf
jmp
xor
cmc
out
mov
adc
xor
xchg
ds
je
mov
lods
push
cld
xor
pop
add
aam
pushf
jb
pushf
aas
and
sbb
adc
pop
in
push
mov
mov
mov
lods
call
cmc
insl
out
sbb
mov
popa
ja
fnsave
movsb
sub
mov
out
xchg
popf
mov
cltd
ret
out
and
cwtl
inc
xchg
xor
push
cmp
bswap
aam
sahf
inc
movb
clc
adc
test
mov
movsl
pop
pushf
test
dec
jbe
push
jb
mov
out
or
je
or
or
jp
lock
inc
adc
lock
adc
sub
dec
in
sti
cmp
sub
and
cmc
mov
adc
outsb
mov
push
mov
aad
ret
jo
stos
das
mov
pushf
inc
test
mov
sahf
inc
push
adc
xorl
daa
lods
cmp
rolb
rorl
push
stos
das
test
mov
mov
mov
sbb
and
movsb
insl
cmc
scas
pop
call
inc
jns
or
nop
test
dec
push
dec
mov
mov
ret
icebp
pop
xor
rcll
mov
fstpt
xchg
inc
and
xor
ret
orl
mov
jecxz
pop
dec
add
xor
and
xchg
inc
jle
test
fbstp
lcall
sub
cltd
pop
add
dec
adc
xchg
rcrb
sub
mov
cmp
imul
and
pop
adc
jb
cmp
sub
adc
jae
lods
xor
add
pushf
movsl
jns
mov
movsb
and
mov
add
jb
aaa
and
mov
jnp
in
loopne
and
stos
lea
jae
arpl
shrl
push
add
lret
pop
sbb
dec
add
popa
xor
cld
xchg
sahf
push
mov
addr16
das
mov
js
test
inc
mov
xor
dec
adc
sub
cs
mov
pop
add
mov
lret
xchg
mov
adc
mov
mov
std
xchg
adcb
mov
loop
add
lret
sti
cmp
adc
dec
out
push
je
xchg
dec
cmp
negb
sub
push
js
out
lahf
lcall
add
sub
mov
and
dec
jno
mov
mov
adc
rcll
push
adc
and
rol
push
movl
test
pslld
dec
adc
out
in
push
cwtl
inc
jns
outsl
out
push
outsl
fiaddl
fsubrs
mov
stc
dec
pslld
aam
out
and
cli
imul
outsl
loopne
sbb
sar
and
lcall
pop
or
or
ja
pusha
out
sub
xchg
cmp
test
std
pop
movl
mov
loope
insb
push
pop
mov
cmp
decb
int3
mov
xor
in
jle
std
lods
sub
pop
fdivs
movl
cmp
xor
int
pushf
cmp
mov
push
cwtl
dec
fistpll
rorl
push
push
sub
lods
xor
cli
mov
hlt
in
mull
js
and
insl
nop
cmp
lret
testl
sete
loope
lcall
aas
xlat
jnp
sub
jne
movsl
cmp
or
jp
insl
out
dec
jo
in
and
xor
test
mov
stos
adc
sbb
jl
and
cmp
dec
or
in
mov
push
pop
incb
fistpll
lock
aam
pop
in
int3
xchg
test
lods
rcrb
mov
mov
arpl
xor
jle
jp
subl
mov
in
and
je
cmpsl
std
sub
jno
ljmp
or
lods
xor
orl
mov
push
mov
scas
jb
xchg
scas
stc
loopne
loope
loope
ss
int3
sub
pop
icebp
dec
and
je
imul
lcall
inc
cmp
sub
add
adc
cmc
rorb
and
xchg
inc
mov
xor
mov
adcb
mov
xchg
lea
fiaddl
nop
in
adc
repnz
mov
or
loop
jg
cli
negl
lds
mov
in
lods
sahf
lods
das
test
test
int
bound
cmpsb
cmpsl
jb
jb
mov
cltd
pusha
rcr
addb
xlat
xchg
sarb
add
push
sbb
outsl
adc
inc
or
mov
push
xor
es
popa
mov
pop
negl
call
loopne
xor
jg
stos
adcl
xor
push
movl
es
pushf
xor
popf
cmp
sub
mov
pop
jmp
sarb
or
mov
stos
mov
cmpsb
add
or
xor
arpl
test
push
sub
and
pop
movsb
lds
test
and
repnz
sarl
xor
test
cwtl
dec
rorl
iret
aad
outsl
out
cmp
sub
nop
and
mov
or
into
mov
fcomip
gs
addr16
or
mov
adc
in
rorb
xlat
out
mov
out
cs
inc
movsl
icebp
xor
imul
xchg
jne
insb
cmpsl
lret
repz
dec
repz
cs
push
sub
fld1
addr16
adcb
dec
or
shl
jno
daa
pop
sti
nop
xor
sbbb
mov
mov
and
mov
add
or
lret
negl
data16
scas
outsl
rorb
outsb
orl
mov
xchg
adcl
sub
imul
cmpsb
jne
xchg
xor
mov
xchg
lea
adc
xchg
add
cmp
mov
int
daa
cmpsl
loope,pn
sbb
cmpsl
lret
rcrl
fstp
out
jbe
or
enter
out
je
mov
lahf
pusha
aas
scas
xor
je
and
orl
pop
add
mov
out
or
mov
dec
adc
fimull
movl
adcl
xchg
inc
repz
jmp
xor
mov
gs
pop
ja
cmp
movsl
lods
les
xchg
xor
pusha
push
int3
lods
daa
test
outsl
call
mov
xor
or
push
push
mov
adc
xlat
cmp
or
push
ljmp
and
and
out
xor
mov
adc
cmp
lods
mov
xchg
cmpsl
mov
mov
lods
adc
pusha
icebp
push
dec
dec
push
push
je
test
aaa
xchg
inc
and
add
jg
mov
fs
push
loope
bswap
test
aaa
mov
loopne
je
iret
pushl
jb
mov
push
fidivrs
mov
imul
mov
in
or
jmp
sbb
fildl
push
inc
inc
or
pop
cmc
pop
pop
sub
pop
fs
loopne
fbstp
lret
pop
or
xor
inc
add
out
imul
jmp
jbe
orl
dec
outsb
sub
outsb
xchg
pushf
cmp
je
mov
pop
enter
mov
mov
inc
stc
add
std
xchg
mov
adcb
popa
out
ss
xor
or
add
mov
lods
add
pushf
pop
sarl
lret
mov
stos
or
sbb
sub
das
mov
jecxz
cmp
sub
repnz
inc
xor
dec
cmp
stc
pop
and
cmp
subb
push
add
lcall
int3
jle
sub
ret
push
adc
dec
pop
mov
cmp
mov
inc
mov
mov
clc
or
xchg
sub
pop
xchg
gs
test
pop
filds
xchg
iret
xchg
enter
and
xchg
xchg
sbb
test
pop
stc
lock
ret
jmp
lret
test
fisubs
cmc
mov
and
sub
orl
dec
adc
les
inc
loop
lret
cli
ret
lods
dec
push
lods
lahf
cmp
lock
jb
test
sahf
xlat
andl
sbb
jb
mov
pop
sti
ljmp
and
jp
lea
ret
and
imul
nop
cmc
lds
jno
test
outsb
adcb
iret
mov
mov
sub
loop
mov
cmc
or
or
jecxz
xchg
inc
lret
add
scas
movsl
sbb
cli
ror
xchg
inc
push
movd
pop
inc
jmp
mov
mov
mov
inc
adc
xor
xchg
push
mov
cld
outsl
repz
leave
xchg
xchg
jo
push
jle
jno
inc
sbb
jne
mov
cmpsl
insl
cmp
adc
push
add
sub
mov
xor
addr16
jns
js
or
movsb
cmp
xor
mov
inc
adc
stos
push
add
xor
mov
mov
cmp
xchg
arpl
jg
int
ret
adc
push
icebp
sbb
or
mov
es
dec
push
cmp
lahf
shll
jg
lret
push
cli
xchg
push
popf
enter
push
and
stc
or
pop
cwtl
inc
mov
mov
mov
mov
sbb
iret
push
mov
pop
and
pop
or
xlat
jl
add
pop
mov
pop
add
movsb
inc
or
mov
sarl
mov
fs
lock
adc
mov
arpl
adc
jle
inc
test
jg
push
lret
stos
xor
adc
in
jo
inc
or
in
daa
add
cs
pop
out
jo
orl
dec
xor
pop
add
mov
pop
inc
adc
pop
popa
lock
cmp
push
lret
pop
inc
fnstcw
test
mov
repnz
clc
outsb
jmp
xorl
push
dec
inc
adc
push
mov
outsl
fidivrs
mov
fcompl
ret
pop
icebp
icebp
mov
cmp
es
jns
and
js
mov
addr16
aad
movsb
sbb
testb
and
leave
push
adc
sbb
sub
stc
insl
fcoms
mov
arpl
lcall
lea
push
jle
ret
push
xor
daa
cwtl
inc
rcr
and
push
mov
mov
adc
popf
loop
mov
fdiv
mov
pushf
cmp
stos
mov
inc
or
test
test
mov
xor
cmpsb
out
xchg
loope
adc
cmp
mov
jl
or
xchg
cmp
iret
push
mov
ja
or
bound
push
lahf
jp
or
mov
ss
daa
mov
cs
pop
data16
cmp
in
jnp
and
dec
or
pop
roll
xor
fs
or
jp
stos
xchg
daa
push
lods
push
jecxz
enter
sbb
inc
sub
pop
shlb
mov
inc
or
flds
out
fldt
mov
cld
gs
out
shl
mov
pop
add
adc
es
loop
adc
orl
inc
jb
mov
jbe
repnz
xor
and
pop
sbb
lret
pop
pushl
fsubr
xchg
inc
sub
push
mov
cmp
mov
cli
adc
sbb
cmp
insl
fsubl
xchg
cmp
xor
lret
lock
rcrb
movsb
nop
cwtl
inc
les
mov
dec
sub
mov
lods
push
je
orb
sub
jg
shrb
stos
bound
mov
sbb
dec
stos
mov
fadds
push
pop
xor
fcomps
shrb
orb
mov
sarb
mov
mov
jns
shll
pop
inc
fcoms
mov
int3
add
pop
sub
mov
add
loopne
clc
pop
dec
sti
inc
adc
xor
and
mov
mov
adc
ds
cmp
push
int3
in
dec
inc
mov
test
jno
aam
popa
outsb
repnz
jmp
jmp
cmc
xor
sbb
adcl
mov
es
cltd
cmp
jo
call
ret
jnp
and
pop
fs
add
xchg
jae
mov
push
mov
push
aas
leave
pusha
mov
xor
jle
jae
or
jns
xor
test
in
test
loop
jge
or
jmp
inc
or
push
add
mov
sahf
mov
sub
pop
scas
inc
push
dec
push
cli
jo
in
shll
push
out
add
or
xor
inc
pop
rorb
dec
inc
pusha
movsl
xor
push
jnp
cmp
add
loope
mov
mov
xchg
cmp
mov
or
outsl
push
dec
loop
add
dec
and
adc
inc
xor
push
pop
iret
xchg
adc
xchg
cwtl
inc
out
je
lret
or
push
sub
push
sbb
or
xor
and
repz
outsl
or
in
cmp
pop
mov
sahf
aas
in
sbb
out
cld
mov
fdivl
sahf
in
or
out
mov
icebp
pop
dec
ja
push
stc
cltd
jns
mov
jae
push
fnsave
dec
stos
jp
in
mov
jo
into
or
aas
jmp
xor
or
enter
jl
jne
adc
stos
sahf
cwtl
inc
and
mov
out
lcall
jo
lds
xlat
mov
mov
enter
gs
sti
pop
sub
sbb
adc
in
jne
inc
mov
ret
push
ljmp
jno
sti
scas
es
stc
nop
addb
inc
xor
pop
scas
rclb
arpl
test
push
ljmp
jno
lret
mov
sbb
lods
inc
jo
stc
and
lret
les
pop
ja
jmp
xor
imul
and
jno
fldl
push
xchg
clc
pop
das
popa
clc
pusha
out
lods
pop
cmpb
cmp
imul
push
jmp
pop
fnsave
fnstenv
xor
mov
test
push
xlat
lret
jne
lret
call
call
scas
sbb
dec
iret
and
add
and
push
shrb
adc
bound
jle
mull
sbbb
pop
sahf
ljmp
mov
lock
inc
fisttpl
scas
stc
loopne
push
lods
xchg
add
lret
out
lahf
xchg
push
ljmp
jno
mov
scas
es
stc
nop
jg
scas
inc
xor
int3
arpl
test
sbb
sti
or
leave
dec
es
sbb
inc
fcmovnbe
cmp
stc
and
adcb
in
adcb
sahf
xor
push
mov
jno
faddl
or
cs
clc
pop
in
lods
push
cmpl
push
mov
mov
fdivl
push
jnp
jo
das
mov
add
adc
popa
or
movsl
sub
jg
push
call
lods
sbb
dec
into
and
ljmp
and
push
mov
popa
clc
mov
les
mulb
xchg
pop
sahf
xor
call
or
mov
out
pop
inc
fisttpl
stc
fisubs
scas
xchg
incl
int3
out
sahf
xor
cmp
jb
mov
fidivl
scas
nop
daa
loopne
clc
jge
scas
inc
xor
int
xchg
xor
and
push
jmp
sub
jo
dec
daa
mov
sbb
lods
inc
insl
repnz
and
sbbl
adc
lahf
ss
popf
data16
push
sbb
fiaddl
or
pusha
negl
pop
scas
push
jg
adc
push
mov
mov
fdivl
push
jns
outsl
stos
das
es
int3
testb
pop
adc
bound
jb
lret
jmp
call
lods
push
jo
dec
int
mov
fwait
pop
inc
fistl
lods
inc
out
jno
stc
mov
ret
adcb
jmp
ss
mov
sahf
out
mov
mov
out
pop
inc
fisttpl
stos
stc
fsubl
scas
xchg
std
adcb
mov
int
push
sahf
xor
cmp
jae
mov
fidivl
lods
xchg
sub
dec
clc
jnp
mov
xor
gs
xor
pop
cmpsl
in
sbb
push
jmp
sub
sub
sbb
lods
inc
imul
sti
and
sbbb
loopne
jg
xchg
mov
popf
fs
mov
fdivl
fadds
or
pusha
negl
sbb
scas
ss
rcrb
mov
or
cs
daa
pusha
lret
cld
subl
arpl
jo
lret
ljmp
jp
lahf
stos
adc
pop
inc
int3
es
cltd
push
inc
fmull
lods
inc
in
jo
cli
mov
ret
hlt
pusha
jmp
aaa
inc
mov
sahf
in
mov
mov
in
push
inc
fisttpl
test
sbb
sub
dec
sahf
xor
aaa
mov
je
mov
fidivl
lods
xchg
sub
inc
clc
jns
mov
xor
into
gs
xor
push
cmpsb
in
sbb
push
jmp
sub
sub
pop
sahf
inc
cmp
and
sbb
jg
xchg
mov
popf
arpl
mov
mov
outsb
xlat
inc
nop
cli
xchg
ret
negl
sbb
scas
xor
pushf
xor
mov
and
or
fsubrs
sub
testb
sbb
lods
dec
ror
arpl
es
jns
lahf
stos
adc
inc
lret
es
cwtl
sbb
lods
inc
jmp
arpl
mov
roll
xchg
adc
aaa
inc
mov
sahf
jecxz
mov
mov
in
push
inc
fildl
test
stc
fldenv
mov
cli
adcb
mov
into
in
sahf
xor
mov
je
mov
fidivl
stos
xchg
sub
inc
clc
js
mov
xor
into
gs
lret
sbb
ds
jmp
sub
sub
push
popf
inc
aaa
lods
inc
imul
lret
inc
sbbb
fsubrp
jg
xchg
mov
popf
call
and
mov
fdivl
inc
flds
cli
xchg
shrl
negl
sbb
lods
xor
int
into
pushf
xor
xchg
and
or
jne
outsl
cmpsl
sub
daa
pop
enter
jg
inc
mov
adc
arpl
xor
lahf
and
push
call
test
lret
sti
mov
dec
mov
arpl
lahf
or
bound
pop
jmp
aaa
inc
mov
sahf
loop
mov
mov
jmp
inc
fildl
cmpsl
stc
fcomps
mov
stc
adcb
mov
into
jecxz
sahf
xor
xor
push
je
mov
fidivl
stos
xchg
sub
inc
clc
ja
mov
das
cltd
push
lods
lret
gs
lret
sbb
in
adc
push
jmp
sub
sub
adc
lods
inc
push
mov
popa
mov
fucomp
jg
xchg
mov
popf
popa
out
push
sbb
fdivl
aad
flds
mov
xchg
shlb
negl
sbb
lods
xor
int
int
xor
test
and
or
je
jo
sub
mov
jge
inc
scas
sbb
lods
dec
ror
arpl
insl
xor
sahf
and
adcl
or
inc
enter
fs
es
sbb
dec
mov
inc
jmp
or
arpl
sbbl
adc
lahf
loope
mov
mov
jmp
or
xchg
cmp
arpl
xlat
pop
sbb
sub
lahf
ss
push
in
xor
je
xchg
test
sub
inc
stc
nop
jbe
mov
sub
dec
into
gs
int3
sbb
push
ljmp
jno
roll
js
es
inc
xor
fs
sbb
sbbb
fsubr
orb
mov
sahf
pusha
in
push
pop
andb
push
inc
fiaddl
es
clc
push
fistps
scas
adc
push
stos
xor
int
int3
popf
xor
adcl
mov
or
jae
jno
sub
clc
jnp
inc
lods
sbb
scas
dec
into
int3
arpl
insb
xor
adcl
or
inc
es
xchg
sbb
dec
mov
inc
call
or
cmp
orb
or
xchg
add
mov
out
inc
fldl
fs
pop
sbb
sub
mov
in
xor
je
test
fdivl
cmpsb
xchg
sub
inc
cli
xchg
jne
mov
sub
into
gs
ss
mov
push
jmp
repz
rolb
jbe
nop
daa
adc
scas
inc
ljmpw
int3
arpl
fucomi
orl
jecxz
push
adc
fdivl
roll
mov
xchg
mov
fstpl
scas
push
js
pop
stos
das
ss
lret
sahf
xor
mov
mov
or
es
daa
pop
kmovb
jns
inc
stos
sbb
scas
dec
int3
int3
arpl
push
int
pop
jmp
push
mov
or
inc
les
mov
xchg
push
inc
fldl
scas
inc
out
fs
cltd
pop
into
cmp
in
orl
mov
xchg
ljmp
mov
out
inc
fldl
mov
sbb
daa
lods
cmp
fimuls
aaa
jp
push
in
xor
or
movsl
xchg
sub
inc
cli
xchg
je
mov
sub
into
gs
ss
lahf
in
adc
push
jmp
repnz
mov
loopne
daa
adc
scas
inc
gs
int3
arpl
orl
or
adc
es
rolb
add
stc
push
fcompl
scas
or
cs
lret
cld
adcb
mov
or
and
stc
nop
idivb
inc
stos
pop
sbb
std
imul
adcb
jmp
jno
mov
aas
ret
daa
mov
xchg
adc
scas
inc
in
fs
cwtl
push
into
cmp
in
orl
or
xchg
sub
in
inc
fldl
mov
sbb
lods
cmp
fldl
aaa
jns
push
in
das
fwait
mov
or
movsb
xchg
sub
inc
cli
xchg
jae
mov
sub
into
gs
ss
sahf
in
adc
push
jmp
icebp
or
mov
fists
ffree
xor
sti
sbb
sbbb
fldl2e
orl
sub
lahf
pop
loope
push
adc
mov
rolw
mov
xchg
mov
fistpl
scas
or
adcb
sub
sahf
xor
mov
mov
or
jo
jb
and
daa
push
ret
stc
nop
cmc
ja
inc
test
lret
cld
push
jmp
dec
mov
or
ds
repz
xchg
sub
mov
inc
in
fs
xchg
add
sbbb
pop
in
orl
or
nop
std
sub
in
inc
fldl
mov
sbb
and
inc
mov
in
cs
sub
xchg
sub
inc
cli
xchg
jb
mov
sub
gs
ss
popf
in
or
push
jmp
lock
mov
ficoms
ffree
xor
sti
sbb
sbbb
fsubr
orl
sub
lahf
pop
loopne
push
adc
mov
rolb
xchg
xchg
mov
ficompl
scas
or
pop
cmpsl
sub
int
enter
jle
jmp
sbb
or
outsl
and
nop
hlt
jbe
inc
test
sbb
sti
addr16
sbb
orb
jmp
outsl
or
cmp
pop
xchg
sub
mov
inc
jecxz
fs
xchg
add
gs
sbb
push
in
orl
or
cld
sub
jecxz
inc
fnstsw
cld
xchg
mov
sbb
and
cmp
fildl
aaa
ja
push
in
sub
dec
je
sub
jae
mov
cli
xchg
jno
mov
daa
xchg
sbb
jp
ss
pushf
in
or
push
jmp
out
or
mov
fstl
ffree
xor
sti
pop
test
arpl
xlat
ljmp
sub
lahf
pop
fistpll
mov
fs
inc
fildl
xchg
xchg
mov
fstps
scas
or
cmpsb
sub
int
sahf
xor
scas
sbb
or
outsb
and
nop
repz
inc
cmpsl
adc
scas
inc
enter
data16
sbb
orb
jmp
outsb
or
cmp
daa
mov
adc
inc
mov
inc
loop
fs
xchg
add
gs
push
in
orl
or
mov
sub
loop
inc
fnstsw
cld
xchg
xor
push
sbb
and
mov
in
sub
mov
or
fdivl
mov
cli
xchg
jo
mov
es
sbb
jns
ss
fwait
in
or
push
jmp
out
or
mov
fcoml
ffree
das
scas
inc
popa
in
sti
push
or
mov
sbbb
ljmp
sub
lahf
pop
fidivrs
mov
arpl
inc
test
xchg
mov
arpl
push
xlat
sbb
movsl
sub
int
lahf
ss
jnp
jmp
sbb
or
insb
fdivl
and
xchg
icebp
jae
inc
movsl
adc
mov
int
clc
fs
into
xchg
sbb
orl
in
out
or
cmp
xchg
sub
scas
mov
loopne
gs
xchg
add
xor
test
cmpsl
or
mov
sub
sub
inc
fidivrs
xchg
xor
sbb
and
mov
out
sub
jne
jge
fnsave
xchg
sub
cmp
xchg
outsb
repnz
and
sbb
ja
aaa
into
adc
push
in
gs
or
mov
ficoml
faddp
sub
gs
adc
int
mov
sbbl
aam
addb
mov
mov
push
jp
mov
popa
int3
inc
fdivr
cmp
mov
fs
dec
aad
mov
jno
sbb
les
in
stos
pop
mov
or
push
je
push
xchg
sub
sti
xchg
out
jno
inc
mov
into
mulb
iret
xchg
pop
in
test
push
in
in
or
cmp
sub
lods
mov
fisubs
std
xchg
dec
xor
in
test
or
mov
sub
sub
inc
fidivrs
xchg
xor
sbb
test
sbbl
cmpsb
cmp
xlat
inc
mov
out
sub
or
sbb
sti
xchg
insb
icebp
mov
and
shlb
loopne
into
adc
push
in
arpl
or
sbb
jae
mov
sub
outsb
fcoms
ffreep
sub
std
adc
fs
test
data16
addb
cmp
fcmovnb
push
or
fidivs
lret
sti
cmp
sti
dec
aam
mov
outsl
sbbb
es
push
ret
hlt
js
in
test
lret
cld
push
xchg
sub
sti
xchg
in
jo
dec
mov
ret
iret
data16
pusha
cmp
xchg
push
out
test
push
in
jecxz
or
lcall
shr
xchg
sub
stos
mov
fcompl
nop
std
iret
data16
mov
sbb
push
in
test
mov
ret
cmc
sub
lods
loopne
fiadds
fidivrs
xchg
xor
sbb
sub
sbb
movsl
cmp
aas
mov
out
sub
jbe
jnp
fnsave
xchg
sub
cmp
xchg
imul
dec
and
shlb
fbstp
into
adc
push
in
ljmp
mov
sub
insl
xlat
xchg
sub
vprotb
scas
inc
pop
loope
std
adc
fs
test
gs
addb
mov
mov
or
daa
mov
pop
leave
inc
fdivr
cmp
mov
fs
dec
rcrl
mov
outsb
sbbb
and
mov
in
test
mov
or
fnsave
sbb
sub
sti
xchg
in
outsl
mov
mov
ret
hlt
pop
cmp
nop
adc
push
in
loop
or
cltd
add
xor
push
xchg
sub
test
decb
data16
sbb
dec
in
test
mov
ret
hlt
sub
and
inc
inc
fidivs
xchg
xor
sbb
sub
sbb
mov
out
daa
xchg
mov
or
pop
pushf
xchg
sub
cmp
xchg
push
mov
and
addr16
aaa
into
setbe
test
xor
popa
jmp
jae
mov
sub
insb
xchg
sub
mov
mov
loopne
std
adc
fs
xor
add
or
or
mov
pop
enter
jg
xchg
mov
fs
dec
rcrb
mov
insl
sbbb
and
iret
push
shlb
cmpsl
adc
or
fnsaves
xchg
sub
sti
xchg
jmp
mov
mov
ror
repz
cmp
adc
test
push
in
loope
or
cwtl
add
xor
sub
ljmp
loopne
test
dec
ficompl
decb
idivl
xchg
orb
mov
es
xchg
mov
cmpsb
scas
or
sub
scas
xchg
push
inc
adc
mov
mov
add
jl
add
fimuls
mov
leave
gs
xchg
mov
pop
lcall
xchg
push
jbe
mov
fs
mov
filds
lds
and
dec
cli
cmp
dec
cmc
enter
lods
stos
xor
stos
lock
lock
ja
loope
enter
sub
pop
jb
pop
movsb
aad
int
sbb
adc
ret
dec
xchg
jne
in
dec
mov
dec
aam
jae
je
insl
xor
out
or
in
andb
mov
sbb
cltd
and
dec
and
and
dec
jb
inc
adc
cmp
out
pop
in
sti
shrb
sbb
cmpsb
xor
mov
sub
dec
push
fiadds
mov
ficompl
mov
data16
shll
jno
test
cwtl
lret
leave
sub
lret
pop
mov
cmp
mov
lcall
ret
mov
dec
imul
scas
testb
xor
js
imul
inc
and
leave
mov
add
out
jb
pop
inc
cmp
lds
mov
jb
repnz
dec
adc
xor
xchg
jecxz
paddusb
cmp
fcomp
sub
cli
add
xchg
roll
xor
mov
jne
leave
dec
mov
fwait
dec
je
dec
ja
icebp
test
mov
mov
pop
gs
je
enter
dec
bound
mov
daa
int
push
pusha
jns
mov
mov
daa
mov
cmc
out
jmp
adc
pop
sbb
sub
inc
sub
pushf
mov
add
add
xor
add
add
add
add
xor
and
leave
push
dec
inc
mov
ss
adc
and
xchg
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
cmp
outsl
les
jle
loope
cmp
jl
roll
stc
jns
arpl
jns
mov
dec
cmp
outsb
ret
sub
shll
movsb
call
