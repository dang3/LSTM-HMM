push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
push
push
push
xchg
adc
push
adc
jo
adc
je
push
xlat
mov
mov
adc
jo
mov
push
push
lea
mov
xor
pop
xor
adc
or
pop
push
and
sbb
mov
lods
dec
jge
fldl
xchg
jge
fstpl
pop
stos
pop
mov
je
push
push
push
push
push
xchg
push
push
inc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
push
divl
fstl
adc
mov
xchg
push
jo
adc
je
push
xlat
mov
push
dec
adc
jo
inc
pop
push
push
divl
push
xchg
adc
push
push
push
push
xchg
adc
inc
add
push
xchg
push
jo
push
push
push
cmc
je
adc
xchg
push
push
push
push
push
xchg
push
adc
adc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
mov
adc
jo
cwtl
dec
push
push
lea
mov
xor
pop
xor
adc
or
test
and
lods
fstl
movsb
filds
movsb
fldl
mov
sub
push
fists
mov
mov
filds
movsb
jge
fldl
test
pop
mov
add
test
mov
leave
ret
push
mov
mov
call
nop
nop
call
xchg
push
adc
adc
push
push
cmc
js
adc
mov
push
fstl
movsb
xchg
push
jo
je
push
mov
fstl
jo
xchg
adc
inc
je
push
int3
mov
jo
sbb
fists
mov
fists
movsb
fstl
jo
int3
mov
jo
push
dec
push
push
fists
movsb
fstl
mov
rcll
fstl
jo
xchg
push
jo
add
push
mov
call
test
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
xlat
lods
push
and
inc
xchg
push
jo
push
push
push
mov
xlat
mov
adc
adc
fists
inc
fstl
jo
fists
pop
fstl
jo
fists
pop
fstl
mov
xlat
mov
mov
add
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jae
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
inc
sub
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sbb
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
in
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
and
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
and
add
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xlat
sub
and
push
push
push
push
push
add
js
fnstenv
jo
mov
adc
xor
adc
sub
movsb
filds
mov
aad
jmp
mov
test
pop
fists
pop
cmp
push
jge
fstpl
pop
stos
pop
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
add
push
adc
adc
xor
adc
adc
mov
adc
adc
adc
adc
test
push
je
adc
push
push
push
xchg
adc
fists
mov
adc
sbb
rcll
push
filds
mov
adc
adc
fists
pop
fstl
mov
rcll
flds
fists
mov
jecxz
push
fstps
push
push
push
push
filds
mov
adc
adc
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
xlat
sub
inc
fists
pop
aam
push
and
adc
pop
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
fists
pop
fstl
mov
adc
adc
push
push
push
fists
lods
outsl
adc
pop
filds
lods
push
xchg
fists
pop
push
adc
fsts
lods
stos
push
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
fstl
test
adc
adc
fists
pop
filds
lods
push
xchg
fists
pop
insb
push
and
adc
mov
lods
stos
push
mov
add
test
movl
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
adc
push
jo
xor
adc
and
adc
dec
fists
pop
fstl
jo
fists
test
push
jo
push
stos
stos
stos
call
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
xlat
sub
inc
filds
pop
fists
pop
fcoml
adc
inc
stos
pop
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
push
jo
insb
adc
pop
push
push
xlat
mov
stos
stos
stos
xchg
adc
cmp
add
jo
xor
and
jo
insb
adc
pop
push
push
xlat
mov
push
shrb
fstl
mov
fst
sub
jo
iret
insb
adc
add
jo
jo
stos
stos
fst
sub
stos
stos
xchg
adc
cli
insb
adc
add
jo
pop
test
and
stos
stos
xchg
adc
jmp
adc
add
jo
mov
sarl
stos
stos
stos
xchg
adc
test
add
jo
test
cmp
stos
stos
xchg
adc
mov
adc
add
jo
loopne
stos
stos
fst
xor
jo
mov
roll
stos
stos
stos
fstl
mov
fst
xor
stos
stos
xchg
adc
stos
insb
adc
add
jo
sub
or
jo
pop
insl
adc
add
jo
xor
stos
stos
fst
or
stos
stos
fists
pop
fstl
mov
aad
sbb
pop
rcll
push
push
push
filds
mov
push
push
adc
push
pop
sarl
push
push
xchg
adc
adc
xchg
adc
push
push
push
push
fsts
push
jo
bound
jo
inc
push
push
push
xchg
adc
push
push
push
push
fsts
mov
push
jo
dec
stos
stos
stos
fsts
mov
adc
fsts
adc
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fists
pop
fstl
and
xlat
mov
rol
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
inc
push
push
xchg
adc
push
push
push
push
xchg
push
jo
push
push
push
or
xlat
mov
fists
rclb
push
fists
rcr
adc
fists
mov
push
jo
shll
stos
stos
stos
test
mov
rclb
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
aam
adc
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
stos
test
mov
fists
aam
push
pusha
and
aam
adc
fists
mov
push
jo
shrl
stos
stos
stos
stos
test
mov
inc
adc
push
push
xchg
adc
push
fs
push
fists
movsb
fists
fstl
jo
fists
movsb
fists
fstl
jo
fists
mov
push
jo
shll
stos
stos
stos
test
mov
stos
stos
stos
xlat
jmp
push
pop
ror
push
push
push
xchg
adc
push
push
push
push
fists
movsb
fists
fstl
jo
fists
pop
fstl
jo
add
stos
stos
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
push
push
push
push
fists
movsb
pop
jecxz
push
outsl
rcrl
stos
stos
stos
sub
add
push
push
sbb
xchg
mov
push
test
push
push
lods
push
push
push
fstl
mov
push
push
push
push
fists
mov
adc
filds
mov
push
inc
fstl
jo
filds
mov
stos
stos
push
push
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
stos
push
mov
inc
push
push
push
push
xchg
adc
push
push
push
push
fists
movsb
xlat
xchg
pusha
fstl
jo
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
add
stos
stos
fst
in
push
push
xchg
rcrl
stos
stos
push
push
push
push
fists
movsb
fst
adc
adc
jae
rcll
stos
stos
stos
xlat
xchg
dec
fst
adc
stos
stos
xlat
jmp
push
and
rcll
stos
stos
fists
fst
sbb
stos
stos
xchg
rcll
stos
stos
push
push
push
push
adc
stos
stos
outsl
rcrl
stos
stos
and
rcll
stos
stos
stos
push
fists
shrb
push
mov
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
test
mov
fstl
xor
xlat
mov
pop
push
aam
push
xchg
adc
push
push
push
push
fists
pop
fstl
or
stos
stos
stos
test
mov
add
test
leave
ret
nop
push
mov
sub
nop
nop
call
xchg
adc
xchg
adc
fists
mov
adc
pop
rcr
push
push
push
filds
lods
fists
mov
adc
jecxz
push
fstl
movsb
fists
test
jecxz
inc
push
adc
adc
adc
fldl
flds
push
push
push
push
fsts
mov
filds
movsb
fldl
xchg
mov
push
adc
adc
adc
adc
mov
pop
push
and
adc
add
inc
fists
mov
pop
call
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
push
and
test
adc
push
adc
push
and
adc
mov
add
test
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
pop
fists
pop
jno
push
push
push
xor
adc
jecxz
scas
filds
pop
pop
jecxz
lods
sbb
push
push
push
adc
sbb
adc
adc
pop
push
push
fsts
movsb
gs
filds
pop
pop
jecxz
mov
pop
push
push
fsts
movsb
push
inc
call
test
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
adc
adc
filds
fsts
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
xor
add
test
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
push
fsts
lods
gs
fists
pop
filds
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
in
sbb
leave
ret
nop
push
mov
push
sub
nop
nop
call
xchg
adc
sub
mov
aad
mov
sub
add
lods
xchg
mov
fstl
adc
mov
insl
adc
ficomps
adc
fsts
lods
stos
push
mov
push
push
push
push
xchg
adc
sub
mov
xchg
adc
sub
mov
pop
fists
pop
push
adc
test
adc
push
fists
mov
push
xchg
adc
fsts
movsb
stos
push
mov
fisttps
lods
filds
lods
fists
mov
insl
adc
int
adc
adc
adc
xchg
adc
sub
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
filds
lods
fists
mov
sbb
lods
fists
mov
adc
push
fsts
lods
xlat
push
push
mov
push
push
push
push
xlat
sub
mov
aad
mov
sub
fsts
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
fists
lods
xchg
mov
fstl
adc
sbb
lods
xchg
mov
fstl
adc
fsts
mov
clc
fsts
lods
stos
push
mov
add
test
add
pop
pop
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
incl
add
add
incl
add
add
add
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
jb
outsl
push
ret
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
inc
lret
fisubrs
lret
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
pop
mov
mov
leave
push
arpl
dec
repnz
mov
popa
xorb
data16
cmp
sub
sbb
push
cli
jge
xor
int
test
sub
and
mov
pop
or
or
mov
scas
sub
es
or
cmpl
lahf
dec
push
sbb
jns
push
sbb
jns
divb
and
mov
and
xchg
mov
mov
and
mov
and
mov
and
loop
jl
cwtl
fwait
jne
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
sbb
pop
mov
out
xchg
mov
and
mov
and
mov
and
jne
jbe
hlt
out
adc
xor
adc
pop
xchg
push
in
int
shl
and
inc
iret
mov
enter
fsubrs
mov
push
sbb
scas
out
mov
and
sbb
push
inc
cmp
cmp
inc
bnd
imul
or
cli
sub
in
gs
xchg
and
jbe
icebp
inc
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
jge
mov
mov
ret
fisubs
movsl
add
cli
or
cltd
repz
ror
jne
or
dec
dec
paddusw
add
sbb
cltd
shr
push
data16
inc
push
cs
lret
lret
int3
arpl
jmp
cli
jg
lods
movsb
sbb
inc
mov
scas
add
das
sbb
cs
jo
mov
fxch
mov
jecxz
adcl
frstor
and
imul
mov
adc
stos
aam
pusha
xchg
xor
aas
cwtl
xchg
mov
sarl
ja
insl
cs
and
insl
push
jno
jge
inc
bound
outsb
pop
jbe
hlt
in
gs
sahf
in
dec
push
adc
or
push
in
enter
jge
out
in
gs
imulb
in
sub
xor
jecxz
cld
push
movsb
sbb
in
dec
mov
push
or
mov
gs
push
insl
xchg
push
jl
lahf
dec
orb
pop
push
mov
cmp
adc
push
mov
aad
sbb
pop
sub
and
push
sub
cwtl
jnp
cltd
and
pop
das
jns
call
xor
sti
fwait
fwait
adc
mov
jecxz
jno
push
sbb
cli
test
loopne
leave
jnp
loop
lods
int3
leave
orl
or
call
inc
pop
sub
or
jns
jb
jae
cmc
hlt
sbb
or
scas
sahf
and
push
rclb
scas
add
mov
mov
jecxz
pop
and
scas
cmp
sub
mov
out
aaa
dec
scas
push
xchg
cmp
lds
xor
ds
xchg
fidivl
xor
push
rcrb
jo
fs
or
orb
dec
push
lcall
in
xor
adc
jge
xor
js
xchg
jno
pushf
jmp
jmp
mov
or
loope
sub
pop
mov
outsl
data16
mov
xor
repnz
mov
mov
and
cmpb
popa
stos
pop
dec
test
add
mov
jl
cmp
or
in
pop
xlat
rclb
sub
fstps
and
jno
int
cwtl
shl
jmp
imul
jmp
insb
or
jb
scas
sub
outsb
adc
lods
inc
fld
gs
jp
mov
imul
jmp
pop
mov
mov
dec
add
pop
or
jb
movsb
xchg
pop
rcr
dec
mov
int3
cmp
pushf
fwait
or
push
push
mov
repz
inc
shrb
and
pop
mov
arpl
cltd
xchg
mov
cmp
scas
jae
icebp
and
mov
and
mov
mov
sbb
cld
js
xor
sbb
sub
dec
lcall
psubsb
arpl
pop
into
push
shrl
inc
sahf
push
inc
aaa
pop
sub
cmc
xor
xchg
mull
mov
scas
das
cmp
xor
xchg
and
add
sbb
inc
mov
and
aaa
sub
outsb
fistl
sbb
jae
leave
addl
faddl
repz
mov
sbb
sbb
mov
addr16
jnp
pop
scas
xor
cmp
add
sbb
mov
xorl
mov
leave
push
fsubrp
outsb
stos
nop
mov
mov
aas
xchg
dec
jno
inc
lcall
or
call
cmp
test
fadds
scas
gs
sbb
loope
dec
les
int3
dec
xchg
dec
in
std
add
stos
cmp
and
jmp
add
pop
repz
cltd
inc
popa
push
movsb
mov
pop
mov
scas
int3
add
shlb
mov
jp
popf
insb
mov
out
gs
xor
push
jns
push
sub
push
mov
add
mov
jb
cwtl
loopew
sbb
cmp
or
pop
push
mov
cltd
pop
popa
fcmovnbe
cmp
xor
and
lods
inc
enter
rcrl
adc
xor
cs
test
push
loopne
fdivrl
pushl
mov
pop
cmp
jmp
add
push
xchg
aas
mov
inc
stc
sub
mov
imul
incb
dec
out
dec
hlt
ljmp
cmpsb
or
gs
push
lock
mov
pop
pop
ret
lods
outsl
pop
rclb
add
repnz
imul
sbb
lock
xorl
aad
push
sbb
icebp
mov
test
xchg
out
push
push
frstor
mov
xorl
call
jl
addr16
ffree
cli
pusha
inc
xchg
cld
pop
mov
ljmp
out
addr16
data16
popa
inc
fidivl
xchg
xor
mov
fdivs
xchg
sub
mov
call
jmp
xor
ds
sub
cld
adc
cld
push
sbb
sbbl
gs
cmc
rolb
movsb
test
mov
test
xlat
popf
notb
pusha
xchg
push
push
xor
adc
mov
push
push
imul
dec
lods
adc
icebp
iret
das
xor
or
fs
xchg
or
jno
stc
sbb
idivl
lahf
mov
sbb
xor
out
fdivrl
sbb
and
adc
aam
popa
sub
loop
lods
ja
flds
fcomip
aas
fsub
mov
mov
into
mov
out
inc
xorb
lret
pop
fcoms
dec
aaa
xchg
stos
add
pop
mov
popf
mov
mov
push
mov
lods
mov
in
ljmp
inc
out
cli
push
shl
add
fdiv
or
push
in
cmpsl
es
movsb
jb
or
pop
jle
into
or
movsl
ja
in
pop
dec
daa
pop
xor
push
xchg
cmpsb
mov
and
andl
inc
dec
lock
mov
xchg
adc
lea
repz
xlat
fwait
cmp
jge
inc
mov
repz
and
xor
jno
jge
rcr
and
cli
in
int
lret
fwait
dec
cmp
shl
adc
add
cmc
inc
dec
aad
popa
or
jge
mov
xchg
inc
dec
aad
popa
or
ficoml
xor
mov
jne
movsl
sub
jg
jnp
lds
test
cmp
std
cmp
fcomip
and
and
popa
insb
aam
inc
mov
adc
stc
scas
jb
pop
push
jb
loopne
push
add
add
enter
xor
lds
fcoml
push
aad
inc
mov
mull
in
add
aam
mov
loope
push
out
lods
arpl
lret
xor
add
sub
ljmp
call
lret
pusha
mov
cmp
sti
pop
jno
es
xchg
in
sub
je
push
insb
aaa
push
movsb
cwtl
and
mov
and
ret
cmp
sub
divl
mov
cmp
lret
jo
js
insl
mov
lock
fdivrl
cmp
incl
addr16
icebp
add
mov
cmp
pop
mov
or
imul
pop
mov
popa
inc
fstpt
adc
mov
iret
mov
inc
cmp
fucomip
adc
mov
iret
mov
jp
jp
pop
pop
push
and
leave
adc
push
test
shlb
addb
add
and
ss
cmp
fildl
lret
dec
mov
mov
jmp
mov
jecxz
xchg
out
mov
mov
shrl
xchg
int3
cmpsl
xchg
ljmp
xlat
je
push
insb
aaa
push
mov
lock
lock
sub
out
xchg
pop
sub
je
push
insb
aaa
push
pushl
or
push
imul
js
mov
xchg
jo
or
cmpsb
or
inc
adc
pop
push
and
mov
sbb
sub
iret
or
dec
in
mov
mov
fildl
lret
dec
mov
gs
repnz
mov
mov
pop
sbb
xchg
sti
loope
fnstsw
and
lock
lcall
push
cmp
pushf
sbb
mov
dec
mov
push
mov
cmp
and
andb
iret
mov
stos
imul
addl
xchg
xor
out
lea
mov
mov
and
pop
aas
inc
dec
repz
inc
jmp
pop
mov
sti
stc
xor
dec
iret
sub
mov
cmpsl
pop
mov
hlt
sbb
sub
dec
cmp
fldt
repz
sbb
pop
jp
or
dec
cli
shrb
outsb
aaa
fcomps
xchg
jecxz
mov
push
and
addr16
add
stos
push
xor
imul
movsl
mov
incl
test
and
xchg
test
outsl
jns
outsl
out
or
inc
pop
cmp
sub
std
enter
leave
sti
fucomi
scas
or
lahf
fsubl
loopne
cltd
out
or
aad
sbb
mov
sbb
sbb
pop
push
cltd
in
mov
adc
push
mov
or
sub
je
jecxz
cmp
add
push
xor
inc
hlt
add
and
xchg
jecxz
andl
mov
or
sub
xchg
fidivs
ds
icebp
fists
sarl
sti
cwtl
jbe
and
mov
insl
pop
and
jnp
jl
das
lods
ret
ror
sub
xor
adc
shll
jns
jae
mov
xchg
lahf
mov
xor
push
fnsave
rcr
es
inc
mov
lcall
fnstenv
stc
mov
xchg
pusha
dec
pop
shl
add
adc
push
outsl
dec
jl
outsb
int
cmp
push
icebp
clc
stos
jne
sbb
fisttpll
pusha
idivb
jecxz
xor
lret
test
loopne
aad
hlt
sbb
add
cmpsb
xchg
jecxz
cmp
add
mov
mov
lcall
push
mov
hlt
push
lret
push
out
lret
fwait
sti
pop
stos
cmp
out
push
adc
les
test
and
mov
mov
xchg
jl
push
mov
pop
xor
push
sbb
jo
push
lds
cltd
insb
mov
or
stos
xor
cmp
mov
mov
jp
aaa
dec
and
sbb
cld
or
jo
scas
and
aam
adc
int3
xchg
pop
add
dec
lods
addb
cmpsl
mov
fstpt
shld
sub
adc
pop
out
push
and
js
mov
jb
push
pushf
clc
sti
lods
inc
stc
add
pop
pop
je
pusha
push
sahf
stc
jo
or
push
mull
in
call
fsubl
adc
pop
mov
adc
and
dec
adc
push
int
or
fs
mov
push
jge
cmc
in
add
mov
loope
cmpsb
jb
sbbb
popf
insl
add
jp
adcb
and
and
shl
jecxz
mov
test
jns
andl
push
in
add
fxch
inc
sti
cmpb
mov
fwait
in
aam
pop
mov
cltd
fimuls
jecxz
xchg
jo
rclb
fcmovnb
mov
or
clc
int
ror
cmc
jecxz
out
add
rorb
sbb
mov
jns
and
nop
adc
mov
aas
incb
mov
in
outsl
dec
fmull
sub
mov
ljmp
outsl
dec
stc
fwait
gs
movsl
fs
out
xchg
sbb
mov
adc
and
bound
adc
inc
sbb
mull
cmp
add
pop
push
mov
and
pop
fcoml
adc
pop
cmp
inc
rcrl
jb
fnsave
fadds
add
dec
loope
lock
outsb
xor
popa
or
pushf
xlat
lcall
inc
fildl
lahf
inc
lea
out
dec
das
sbb
fwait
or
js
jg
sbb
add
repnz
sbb
loop
jae
loop
lea
sub
sbb
fdivr
js
xchg
daa
cmc
and
fcomps
xchg
xchg
test
outsl
jns
outsl
out
or
inc
pop
cmp
sub
xor
sub
outsl
jne
mov
push
fsubl
cmp
jp
inc
aad
sbb
stos
or
cmpsb
cmp
xchg
fldcw
mov
push
cltd
in
fiaddl
fsubl
insb
or
sub
popa
jnp
inc
cmpsb
lods
jecxz
cmp
add
loope
stos
nop
push
add
and
xchg
jecxz
sbb
jns
rclb
or
sub
xchg
fidivs
ds
icebp
fists
or
loope
inc
cltd
cwtl
jbe
and
mov
mov
mov
jnp
lods
ret
ror
shll
cmp
push
dec
jl
pop
shll
or
arpl
or
fnsave
aam
mov
add
pop
in
loopne
stc
nop
out
and
push
shrl
cmp
pop
idivb
and
mov
add
ror
sub
enter
jl
outsb
int
cmp
push
je
outsl
push
adc
or
push
out
dec
inc
pusha
addr16
xor
mov
fcompl
lret
test
loopne
aad
int
pusha
dec
loopne
sbb
cmpsb
xchg
jecxz
cmp
test
mov
iret
mov
lcall
in
stos
dec
mov
hlt
push
aaa
xor
stos
ja
cmpsl
pop
stos
cmp
out
push
xchg
bound
sub
lods
mov
loope
and
mov
mov
xchg
jl
push
out
js
push
push
xchg
fildl
sbb
xlat
cli
mov
cltd
insb
mov
or
mov
push
stos
sub
mov
movsl
lret
das
xchg
and
sbb
aad
rcll
nop
mov
jnp
aam
call
fmuls
pushf
or
dec
lods
addb
sbb
mov
shld
sub
adc
pop
out
push
and
adc
mov
jecxz
jb
push
pushf
popl
jp
rcrl
pusha
push
sahf
test
popa
xchg
sub
mov
call
fsubl
lock
pop
mov
adc
leave
scas
mov
adc
push
mov
pop
imul
jge
out
cmpsb
aam
xor
sbbb
popf
insl
add
jp
adcb
xchg
shll
les
cmc
jecxz
mov
mov
andl
push
mov
outsl
les
repz
cmpb
mov
add
cltd
push
sub
cltd
fimuls
jecxz
xchg
fwait
mov
jb
ljmp
mov
fistpll
mov
jb
lret
cmc
jecxz
inc
lods
movsl
outsl
sti
mov
sbb
mov
jns
and
nop
adc
mov
jno
out
dec
shrl
dec
std
in
outsl
dec
fmull
sub
mov
pop
out
pop
iret
fs
scas
add
dec
pop
or
sub
mov
sarl
cmp
adc
imulb
loopne
dec
sub
inc
sbb
mull
cmp
add
arpl
sub
and
pop
jb
cmp
in
cltd
sbb
cmp
inc
rcrl
jb
fnsave
fadds
add
data16
outsl
push
or
popa
or
push
push
push
stos
adc
xchg
roll
inc
push
lahf
inc
je
add
jbe
outsb
xchg
adc
fwait
or
mov
jp
add
cltd
in
add
in
mov
loop
lea
fcomi
cmp
xchg
daa
cmc
and
pop
sub
or
ljmp
or
mov
shll
popa
push
or
ss
sbb
repz
xor
sub
jns
adc
push
mov
int3
icebp
jecxz
jecxz
cld
es
sbb
mov
mov
pop
repz
leave
cmc
add
or
out
xor
jnp
mov
cs
sub
sbb
fstps
test
roll
movb
and
xor
es
mov
loopne
push
add
pop
mov
mov
stos
shrb
push
fildll
mov
in
gs
mov
and
mov
and
mov
and
add
test
sbb
test
sbb
mov
sbb
mov
push
sbb
mov
pusha
popa
outsb
jge
lods
bnd
shrb
rorl
dec
jge
rorl
pop
dec
xchg
pop
dec
xchg
filds
into
or
shll
fstpl
lahf
test
addl
in
gs
mov
and
add
test
sbb
mov
sbb
mov
pusha
popa
outsb
jge
lods
cmp
dec
jge
rorl
pop
dec
xchg
out
shll
pop
pop
or
stc
jge
jbe
lds
add
stos
sbb
and
aas
aam
test
dec
xchg
add
push
jnp
fwait
in
sbb
add
fsubr
rclb
dec
sub
in
gs
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
add
xchg
hlt
scas
cli
or
or
popa
adc
dec
adc
cmpl
sbb
mov
jle
pop
mov
and
mov
add
lds
sbb
add
insb
jl
aad
imul
ljmp
addr16
push
jno
inc
cmp
mov
aas
inc
std
mov
je
js
fwait
sbb
and
scas
jb
outsl
add
and
clc
push
mov
lds
lods
mov
sbb
aad
out
lods
lcall
dec
stos
pop
loopne
shlb
pop
pusha
adc
testb
outsb
dec
mov
jne
ss
sub
jecxz
scas
lods
jmp
xor
cmp
xor
sbb
xor
popf
frstor
xor
lret
mov
loopne
sbb
cwtl
and
or
cmp
fwait
pop
xchg
mov
inc
jmp
nop
cmp
int
out
fs
cmc
xchg
push
jg
mov
pop
cltd
rcr
push
xchg
jp
xchg
jno
jnp
cmp
shl
out
add
add
mov
fwait
and
sub
jb
inc
sbb
int
loope
outsl
xchg
inc
mov
mov
mov
lds
or
jecxz
lds
xchg
push
imul
sbb
jle
pop
bnd
mov
mov
inc
xor
cltd
lods
imulb
xchg
mov
ds
dec
bound
es
pop
loope
dec
and
jg
movsl
ljmp
jle
push
cmpsl
push
inc
aas
test
inc
in
push
jo
pop
push
push
mov
leave
bound
add
lret
popl
or
enter
xchg
insb
adc
stos
push
inc
lods
addb
mov
addr16
lret
jecxz
dec
xor
adc
xor
cmp
inc
test
leave
sbb
out
incl
pop
cmp
arpl
aaa
xor
ja
mov
xor
roll
leave
loop
sahf
adc
nop
call
push
fdivrp
ja
stc
inc
ds
xlat
inc
mov
cltd
out
and
sbb
in
mov
push
test
dec
push
sub
test
jbe
outsl
xorb
fldl2e
and
in
push
push
xchg
jle
aad
pop
push
push
cltd
lcall
aas
loope
mov
mov
addr16
push
sbb
dec
outsl
sub
dec
enter
mov
xor
lret
sti
icebp
jmp
mov
ljmp
ret
dec
push
je
mov
loope
in
cld
push
sub
arpl
aad
mov
adc
push
mov
shrl
add
das
fs
lcall
sub
mov
jl
xlat
repnz
pop
std
xchg
mov
ret
xchg
sarl
nop
push
cwtl
push
in
mov
int
data16
stos
jp
nop
dec
adc
inc
lahf
or
inc
xor
mov
cmp
repz
add
push
jne
xor
jnp
xchg
mov
sbb
mov
dec
iret
cmp
push
scas
xor
inc
unpcklps
push
popa
mov
mov
clc
test
xor
inc
jge
movb
xor
into
mov
cmp
mov
daa
ja
dec
inc
sub
mov
in
fstpl
mov
mov
mov
sub
and
pop
mov
loopne
fdivs
xor
inc
push
ret
or
inc
inc
cmp
or
dec
mov
mov
cwtl
je
mov
xchg
push
or
ret
mov
out
mov
dec
inc
xor
jmp
jmp
xchg
mov
sub
fstpt
inc
fistl
cs
push
push
fs
es
inc
subb
cs
stc
xchg
or
push
jle
adc
cwtl
pop
jl
es
lds
movsb
sub
and
lock
xor
sahf
scas
test
imul
push
pop
inc
inc
sbb
xchg
jg
xchg
aaa
push
xchg
inc
dec
loop
mov
add
push
and
or
xor
je
popa
cld
dec
mov
jns
lds
pop
cli
xor
mov
out
or
mov
sub
call
aam
cmp
dec
xor
in
fs
divl
int3
mov
add
push
das
jo
dec
adc
sti
mov
sbb
stos
jne
xor
std
loop
aam
les
xor
jl
scas
dec
add
push
insl
jns
jmp
cmp
scas
mov
sub
aas
out
pop
inc
imul
pop
push
push
pop
mov
lods
mov
dec
pop
xchg
adc
das
aas
xchg
cli
jbe
inc
cmp
insb
mov
nop
test
and
insb
mov
nop
test
and
xor
addr16
out
orl
addr16
out
movsl
js
sbb
mov
jbe
js
sbb
mov
jbe
js
sbb
mov
jbe
js
sbb
mov
jle
pushf
fstps
cmp
add
pushf
fstps
cmp
add
pushf
fstps
cmp
add
pushf
fstps
cmp
add
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
jge
call
lcall
push
lcall
push
lcall
push
lcall
push
lcall
push
lcall
push
lcall
int
or
aas
mov
pop
pop
jg
sbb
or
cli
push
inc
xlat
mov
inc
push
inc
hlt
or
xor
call
js
dec
call
stos
orb
in
cmc
stos
orb
inc
push
push
adc
mov
cmp
push
adc
mov
cmp
push
adc
mov
cmp
push
adc
aas
sub
or
sub
or
sub
or
sub
js
jle
adc
xchg
jle
adc
xchg
jle
adc
xchg
jle
adc
xchg
jle
adc
xchg
jle
adc
xchg
jle
adc
xchg
jle
adc
cmpb
lahf
cmpb
lahf
cmpb
lahf
cmpb
lahf
cmpb
lahf
cmpb
lahf
cmpb
lahf
cmpb
dec
lea
cmp
or
mov
in
divb
add
xchg
jno
sub
mov
out
loop
mov
lret
xor
xor
and
xorl
lahf
cltd
out
je
outsl
mov
lahf
cltd
out
je
outsl
scas
mov
sahf
repz
stos
scas
mov
sahf
repz
stos
dec
pop
or
cli
push
inc
xlat
dec
pop
or
cli
push
inc
xlat
mov
inc
push
inc
hlt
or
mov
inc
push
inc
hlt
or
xor
call
js
dec
call
js
dec
call
js
dec
call
stos
orb
in
cmc
stos
orb
in
cmc
stos
orb
in
cmc
stos
orb
inc
push
push
adc
mov
cmp
push
adc
mov
cmp
push
adc
mov
cmp
push
adc
aas
sub
or
sub
or
sub
mov
outsb
cli
dec
add
push
mov
or
xchg
in
push
sub
push
adc
pop
pop
push
das
sahf
mov
inc
movsl
mov
sbb
hlt
cmpsb
sub
lret
mov
popf
and
lds
lods
lods
sub
or
ficoml
mov
sahf
and
bound
dec
jmp
aam
jae
jecxz
fldl
mov
and
push
mov
or
xchg
in
push
sub
push
mov
xor
ja
repnz
inc
inc
xorl
mov
xchg
push
sti
push
or
mov
aas
iret
fistl
hlt
inc
pop
loop
xchg
xchg
pop
pop
xchg
dec
mov
or
push
loop
mov
shrb
xor
lods
sub
jne
sub
loopne
out
push
sub
sub
int
push
lods
test
shll
sub
sub
xchg
lret
vpminub
push
xlat
pop
in
push
xchg
aam
xlat
rol
daa
std
jmp
pop
xor
pop
push
icebp
adc
cmpsl
out
mov
xchg
add
pop
push
repnz
fisubrl
fisttps
pop
outsb
inc
orb
cwtl
imul
inc
jae
sbb
push
inc
push
test
push
ror
push
jne
push
jo
js
dec
add
and
lret
xchg
lcall
lods
xchg
std
aad
in
movsb
dec
xchg
int3
mov
and
mov
jnp
cmpsb
lldt
daa
sarl
out
push
xchg
dec
jne
cltd
pushf
mov
mov
mov
das
inc
mov
pop
rcr
xor
push
int
movsb
loope
mov
push
popa
imul
andb
push
pop
jnp
daa
test
clc
jnp
sbb
jle
std
js
xchg
xlat
repnz
fisttps
rolb
sub
pop
sbb
jl
insb
lea
mov
imul
jge
adc
aad
pop
add
popf
xor
ret
ret
inc
testl
inc
sub
sub
test
sar
fbstp
arpl
cs
outsb
sarl
pop
xchg
jle
jb
cmovno
jns
jmp
jne
xchg
ret
mov
ds
icebp
push
in
jno
lods
outsb
mov
sub
sub
sbb
sti
add
in
psubsb
pop
mov
es
or
dec
inc
or
or
leave
mov
je
pusha
pop
fstps
sub
or
sahf
test
or
cltd
cmp
pop
movsl
sti
push
lods
mov
lahf
and
mov
popa
sbb
add
sahf
jp
xor
cmpsb
push
mov
lods
lods
inc
cmp
ljmp
push
fwait
dec
lea
leave
lahf
mov
frstor
mov
mov
idivl
ja
lods
add
sbb
testb
and
jns
clc
clc
cld
loopne
pop
inc
int3
jb
sub
popa
jae
in
jg
xor
popf
popf
dec
ljmp
sbb
loop
loope
and
dec
dec
jne
jp
jl
cmp
add
inc
sti
in
dec
insb
movsl
fsubrs
mov
outsb
mov
lcall
mov
not
jb
jmp
and
xchg
test
xchg
cmpsb
push
xchg
inc
xor
inc
add
in
notl
adc
pop
cmpsb
lods
mov
lock
jno
ret
xor
iret
mov
jmp
push
dec
ficompl
fwait
sti
lods
test
std
shll
insb
inc
es
mov
sub
movsb
adc
and
ret
xor
lea
adc
fcom
in
in
inc
inc
ds
dec
mov
mul
cmp
pop
xchg
or
pop
out
inc
xchg
cmc
push
pop
mov
inc
lods
add
insb
inc
xchg
aas
cld
es
into
andb
and
arpl
xrelease
gs
pop
or
cli
xchg
hlt
xor
inc
lret
xlat
push
repnz
cld
mov
and
pop
push
fistpl
leave
lret
push
xchg
mov
mov
sub
pushf
xor
stos
pop
insl
cmovb
and
mov
lea
lea
ja
js
in
push
jo
jle
jge
xchg
hlt
xor
jne
lods
jecxz
gs
or
arpl
jbe
movl
add
push
mov
sbb
stos
ds
and
sub
aam
std
aaa
mov
inc
mulb
movsl
call
or
ds
inc
imul
xor
mov
lods
inc
js
lret
and
jno
pop
inc
and
stos
fisubl
sub
xchg
adcl
push
mov
lcall
adc
pop
aas
pop
test
jecxz
stos
jb
mov
pushl
pop
xor
and
mov
xorb
push
mov
adc
cmp
and
and
loop
es
jmp
mov
lret
ljmp
add
xor
sbbl
cmp
cmp
nop
mov
es
aas
pushf
add
stos
xchg
push
sbb
out
sahf
rcll
int
xchg
push
xor
xor
xchg
out
adc
xchg
data16
mov
aam
fisubrl
pop
lock
jae
pop
mov
sub
add
insb
call
pop
pop
push
sub
xor
leave
ljmp
push
loopne
mov
mov
daa
dec
cltd
inc
inc
loopne
ret
cmpsb
aam
sub
xchg
subl
mov
mull
and
in
xor
popa
pop
stos
aam
popa
inc
ror
mov
call
mov
sbb
ficompl
jle
mov
mov
test
ret
push
loopne
lock
pop
shlb
scas
mov
mov
aaa
adc
mov
mov
dec
test
dec
sbb
frstor
out
mov
pop
dec
fsubrs
push
cmc
xor
inc
inc
mov
push
xor
es
mov
sub
push
dec
test
enter
iret
lods
mov
mov
add
adc
sbb
enter
add
sbb
gs
jmp
inc
sbb
mov
push
ljmp
les
scas
inc
adc
movsl
xor
popl
mov
or
icebp
sarb
adc
or
outsb
rcrl
add
xchg
iret
rclb
push
insb
pop
and
flds
xchg
cmp
sbb
dec
cmp
aad
cmp
sbb
pusha
jl
xchg
jne
divl
xlat
aad
or
sub
add
xchg
cmp
repnz
orl
mov
icebp
test
pop
les
jecxz
adc
cmp
sub
movsb
or
cmp
pop
fsubrs
imul
repz
sub
cmpsb
mov
addr16
or
inc
stos
in
mov
pop
mov
scas
add
iret
cmp
lods
int
push
das
test
xchg
or
rcrl
pusha
add
jne
mov
inc
adc
movsb
and
out
mov
inc
loope
push
add
adc
fiadds
ficoml
jmp
pop
inc
les
jecxz
mov
test
mov
out
iret
stc
pop
dec
inc
add
xor
ljmp
std
xchg
lret
dec
mov
jns
mov
les
mov
sub
lods
rolb
cmpsb
es
in
push
outsb
pusha
or
mov
xor
push
lahf
push
and
mov
and
movsb
sbb
cmp
push
ror
fsubrl
mov
push
ret
sub
ljmp
inc
mov
cltd
and
lods
lock
fld
leave
mov
inc
jne
fisttps
inc
push
jg
jmp
cmp
push
in
movsb
cmp
rorl
push
or
enter
ja
mov
mov
idivl
mov
lods
mov
loope
or
mov
rcrb
rcl
les
or
lods
lods
inc
jge
mov
xor
sbb
add
adc
adc
cmp
sub
icebp
adc
jae
int3
xor
aam
jge
mov
sbb
mov
push
jno
ja
mov
and
mov
jle
dec
mov
fsubr
push
test
push
scas
push
sub
outsb
jo
sbb
adc
cmp
fldenv
test
fwait
popf
repz
insb
mov
movsb
mov
jb
or
sub
je
push
cli
xchg
shll
or
loop
push
enter
scas
enter
mov
cmp
dec
push
stos
cmp
imul
xchg
dec
mov
std
loopne
inc
push
icebp
pop
and
mov
jns
mov
push
sub
lds
mov
shll
or
mov
es
push
push
dec
addl
in
or
inc
add
ret
mov
inc
mov
adc
je
and
jge
dec
lock
cmp
or
jo
mov
loopne
std
sub
dec
xor
mov
inc
outsb
jmp
pop
dec
mov
insb
and
lods
push
add
sbb
addr16
ret
push
add
push
inc
out
xor
fdivrp
popf
xchg
add
js
js
mov
mov
stc
lock
out
data16
int
mov
repz
xor
jl
inc
adc
test
adc
sbb
fldcw
repnz
mov
xchg
pop
pop
lods
pop
scas
pusha
jp
sub
or
sub
or
xor
decb
jo
xchg
fbstp
inc
adc
dec
test
or
repz
jne
push
add
push
push
fdivr
sub
inc
dec
add
call
xlat
orl
sub
addb
sbb
mov
add
xchg
xor
dec
sub
pop
adc
mov
out
popa
cmp
scas
lgs
das
adcl
mov
ljmp
out
mov
dec
nop
je
jo
xchg
rcr
push
cmp
loopne
xor
or
imul
mov
sbb
mov
sub
repnz
jecxz
sarb
enter
and
andl
ret
mov
stc
ds
lds
ret
sbb
mov
in
cli
sub
xor
clc
push
ret
ret
xor
je
xchg
lds
cmp
insl
push
in
jecxz
std
inc
sarb
in
arpl
jg
mov
push
je
test
push
push
lahf
pop
sub
insb
sbb
clc
and
sbb
xor
cmpsb
adc
add
cmpsb
inc
dec
dec
icebp
lsl
rolb
xchg
fdivr
sbb
jbe
aaa
xchg
push
xchg
mov
cwtl
rorl
insl
out
pop
imul
sarl
and
push
lods
lret
jmp
dec
movsb
mov
ror
sub
mov
adcb
jg
ds
sbb
clc
ds
loop
mov
xorl
ss
ja
cs
xchg
adc
enter
xchg
aas
fists
pop
pushf
and
xor
and
popa
xor
or
push
xchg
stc
jb
jbe
pop
enter
or
inc
cmpsl
loopne
repz
add
mov
lahf
das
xchg
add
jl
sbb
add
dec
xchg
xor
adc
iret
or
in
mov
inc
jl
fisttps
jecxz
mov
lahf
xor
ja
cld
rolb
jno
test
repnz
js
out
jle
and
cmpsl
scas
icebp
mov
dec
mov
decl
aaa
aam
pop
fldt
push
sub
mov
sbbb
fdiv
jg
ret
ljmp
jnp
xor
repnz
mov
cs
xor
into
les
lret
add
subl
xchg
mov
mov
pop
jae
inc
gs
push
mov
mov
xor
adc
mov
sub
int3
test
cwtl
lock
test
mov
xchg
mov
mov
jae
pusha
adc
mov
inc
jnp
fists
mov
mov
pop
in
cmp
jae
dec
jno
hlt
call
sbb
addr16
test
clc
pushf
push
xor
lahf
imul
fwait
and
push
mov
adc
fwait
dec
lock
or
inc
push
push
cs
in
imul
jne
out
sahf
dec
push
jmp
aad
inc
mov
xchg
or
pop
mov
sbb
pop
or
lock
shll
lahf
or
jmp
or
xor
test
jle
inc
insl
mov
adc
imul
scas
leave
dec
xor
aad
adc
push
nop
inc
push
add
clc
stc
mov
mov
lods
es
inc
sub
xor
bound
xor
add
lcall
cmp
dec
and
out
jne
jp
rorb
clc
out
adc
pop
movsl
inc
adc
or
jmp
inc
inc
aad
inc
stos
dec
enter
mov
lahf
mov
testl
inc
sbb
fnsave
pop
and
int
in
stc
into
mov
push
dec
ds
fnstsw
out
mov
lret
mov
and
adc
xor
dec
mov
pop
inc
mov
mov
lret
push
xor
cmp
jnp
jle
iret
icebp
adc
sbb
sub
int3
xchg
or
and
ja
lds
or
jg
mov
mov
push
adc
pop
test
lcall
enter
clc
mov
push
arpl
loop
shrb
pop
pop
mov
ljmp
jne
lods
setno
shrl
jmp
push
sub
cmpsl
cltd
cmp
stos
ljmp
inc
inc
std
adc
and
int3
movsl
lds
cmpsl
mov
test
dec
sbb
aam
xchg
or
popf
sub
sbb
ljmp
and
and
dec
orb
sbb
jecxz
orl
mov
push
and
lods
pop
xchg
cli
pop
sysexit
fdivl
push
mov
sbb
gs
addr16
sarl
jns
add
scas
jle
mov
mov
loop
sbb
and
cltd
pop
push
fiaddl
subl
xchg
out
xor
into
sbb
mov
adc
insb
adc
inc
xor
in
popf
sub
int
out
aad
test
push
mov
pop
inc
push
push
test
int
imull
xor
call
mov
add
stos
xor
inc
or
push
aas
and
inc
cmpsl
or
fmull
dec
jo
push
das
shlb
fcom
xchg
sbb
pop
adc
mov
outsb
dec
sbb
lds
jbe
shlb
icebp
cs
mov
jp
fisttps
gs
loop
cmp
adc
dec
add
jle
pushf
mov
in
sub
and
lcall
pop
ret
dec
mov
cmpsb
sub
inc
sti
add
push
imul
enter
pushf
in
nop
mov
jno
in
int
movsb
mov
mov
or
std
mov
add
jge
or
in
je
stc
int3
out
sub
lahf
mov
sarb
jge
inc
int3
test
jne
cmp
lds
ljmp
mov
xor
pop
push
ljmp
cld
ss
js
jge
and
scas
xor
mov
dec
fnstenv
loop
jne
fbstp
mov
jmp
rolb
pop
sarl
sub
sbb
push
fs
mov
ljmp
pop
xchg
xor
mov
stc
or
iret
call
adc
push
pop
insl
xchg
mov
fists
push
pop
mov
sub
mov
test
fisubl
in
jmp
mov
cwtl
icebp
sub
mov
inc
repnz
xchg
mov
jg
insb
mov
pop
xchg
inc
stos
jle
popl
adc
dec
leave
lret
bound
push
cmp
xor
es
jle
jmp
mov
adc
insl
movsl
jbe
jmp
sub
mov
mov
jp
or
adc
push
add
push
fisubl
testb
ljmp
ret
aad
jp
sbb
push
cmpsl
dec
cmp
pop
push
or
lret
mov
jge
jno
pop
and
sbb
call
sub
inc
jmp
pop
xchg
or
jno
sub
imul
push
dec
jb
jae
scas
mov
icebp
add
lret
xor
arpl
add
inc
fsubrs
fwait
or
sub
lds
mull
and
popf
jnp
or
sbb
das
cmpsb
sub
std
mov
imul
mov
mov
or
lahf
jg
outsl
adc
into
jb
mov
cwtl
push
sbb
jae
lcall
ja
mov
loop
xor
out
jp
push
mov
or
test
push
mov
pop
pop
mov
xchg
mov
add
addr16
mov
hlt
ror
pop
call
sub
shll
mov
loopne
jg
push
mov
sbb
popf
or
je
xor
fidivrs
les
lcall
inc
add
divl
pop
popa
dec
or
out
jae
push
test
imul
rorl
std
ja
sub
mov
add
xlat
jg
xchg
jae
and
sbb
sbb
inc
push
aaa
dec
popf
adc
into
sbb
push
mov
cltd
lcall
notl
adc
call
push
jp
sti
sbb
std
cwtl
xchg
xchg
notb
fnsave
cmp
lcall
pop
cmp
bound
aaa
lret
fsubrl
pop
xchg
nop
call
sub
pop
loopne
push
push
test
pop
imul
sbb
int
int3
mov
cmp
je
pop
dec
scas
mov
repz
inc
push
inc
and
mov
ja
sbb
adc
lods
nop
or
mov
mov
inc
pop
add
adc
jb
mov
fs
pop
shlb
pop
jb
cltd
pop
xchg
stc
push
adc
js
sub
in
xchg
jecxz
pop
fldenv
adcl
outsb
sbb
cmc
inc
push
scas
repz
daa
sbb
cmp
mov
push
pop
push
fmull
dec
in
or
sti
iret
push
scas
sbb
inc
or
inc
or
add
or
into
sbb
flds
cmp
fstpt
test
enter
sbb
jb
jmp
lcall
dec
mov
ja
aam
push
mov
ds
inc
test
int
inc
xor
sub
cs
cmp
ret
insb
pop
jl
mov
pop
pop
scas
push
cmp
mov
xchg
xchg
push
rcrb
js
mov
mov
or
nop
add
push
push
inc
mov
sbb
pop
sahf
xor
lock
lret
xchg
dec
add
jno
sub
out
fcomps
add
in
and
inc
sbb
ss
decb
xchg
out
repz
sbb
orl
scas
test
cmp
sub
jo
mov
adc
imull
nop
mov
aaa
rcr
sbb
out
cli
loopw
pop
lods
imul
add
or
mov
sub
ror
push
mov
xorb
mov
test
cmp
das
lcall
push
test
and
stos
aas
sbb
cmp
inc
lahf
mov
sbb
push
push
dec
cli
je
push
cmp
popf
add
mov
into
jp
sbb
and
fdiv
mov
sbb
cmp
loop
pushf
add
xchg
sbb
pop
sarb
push
inc
inc
repnz
push
mov
test
cmp
sub
ljmp
fwait
push
inc
xlat
xchg
mov
aas
jb
mov
mov
mov
dec
ret
aam
push
add
pop
or
mov
cmp
sub
aad
nop
jo
add
mov
int3
dec
sub
jg
dec
data16
inc
hlt
std
sbb
mov
mov
hlt
fmuls
call
pop
mov
int
gs
es
insl
dec
add
into
cmp
pop
xchg
and
jmp
push
inc
mov
fwait
push
iret
stc
adc
shll
mov
mov
sbb
repz
mov
shrb
xchg
sub
je
cmp
andl
cmpsb
popa
fisubl
xchg
iret
orb
mov
dec
lret
ret
add
dec
push
pop
cmp
leave
xchg
movsl
out
mov
dec
ja
ds
lods
fadds
pop
je
cmp
push
or
pusha
xchg
sbb
xchg
ja
push
lods
add
movb
jge
xor
inc
les
les
mov
push
and
mov
je
and
mov
sub
adc
dec
fisubl
push
dec
push
mov
ficoms
add
into
movsl
repz
fldl
sub
mov
push
dec
mov
adcl
aad
jmp
cmp
leave
lock
int3
into
xchg
cmc
cmp
and
repz
jecxz
xchg
inc
mov
push
ljmp
gs
lahf
xor
js
mov
addb
call
and
mov
jp
aas
lods
jne
enter
jne
sahf
jns
loop
pop
mov
add
mov
bound
shl
out
cld
in
sarb
outsl
adc
xor
mov
sarl
enter
push
jg
fs
cltd
mov
sti
adc
mov
ret
in
lahf
out
xor
mov
mov
ret
dec
daa
mov
xor
pop
sbb
je
das
sub
daa
iret
ror
jge
push
dec
pop
inc
fcmovnb
fsubrs
pop
adc
mov
test
xchg
popa
test
enter
jmp
scas
ljmp
ja
in
mov
popf
aaa
sbb
fmull
xchg
pop
pop
sub
dec
jnp
mov
jmp
sahf
je
das
and
lahf
jbe
add
sbbl
mov
mov
inc
in
push
cmc
inc
ret
pop
iret
cmpsb
jle
test
sbb
ret
ret
in
xchg
and
das
inc
lret
add
daa
ret
add
jle
add
incb
call
jp
sbb
in
dec
es
addr16
xor
xor
push
in
movsl
mov
bnd
sarb
and
pop
adcb
jbe
movsl
icebp
gs
dec
fwait
mov
jle
mov
int3
in
mov
or
cmp
cmpsb
push
in
dec
lret
mulps
pop
sbb
addl
lods
lods
mov
movsl
stos
or
mov
jl
outsl
cli
add
cmp
pop
ds
dec
xchg
push
test
mov
sarb
or
fsts
and
pop
arpl
pop
cld
aam
jmp
add
jge
movsb
dec
xchg
adc
add
in
xor
cmp
arpl
add
test
and
sti
push
dec
call
xchg
cmp
and
subb
inc
dec
test
cmp
xlat
popf
pop
insl
fidivrl
mov
sbb
shr
fs
and
dec
ljmp
scas
in
out
pop
mov
insb
outsl
pop
dec
insb
add
push
mov
ds
xor
jg
cwtl
pop
bound
fbld
pushf
out
out
add
sub
jb
adc
mov
andb
inc
stos
gs
pop
add
mov
test
jae
sub
movsb
xor
push
popf
out
popf
mov
test
push
cmc
aam
cltd
sbb
fwait
hlt
xchg
sub
pop
ss
repz
and
cmp
int
jmp
iret
push
fstl
roll
dec
rorl
lea
xorl
jbe
mov
jp
repnz
push
pop
icebp
fcomip
sarb
insl
dec
push
mov
inc
cs
mov
stos
inc
insb
push
mov
push
icebp
in
in
les
loop
mov
push
push
xor
fsts
fnstenv
movsb
fs
mov
insl
les
stc
inc
mov
ja
mov
call
iret
jne
popl
fwait
mov
mov
cltd
and
cmpsl
mov
jno
xchg
push
xor
ret
in
jae
roll
aad
xchg
pop
sub
ret
push
sub
gs
dec
sub
les
movsl
mov
sbb
jmp
jno
stc
cmpsl
mov
bound
aas
adc
sti
sub
outsb
in
add
or
out
lds
adc
mov
insb
push
inc
jmp
mov
inc
fwait
in
mov
cmp
lock
sub
js
jmp
dec
xorb
cmp
cmp
int
mov
lret
cmpsl
shlb
mov
mov
les
addr16
cmpsb
push
js
cmp
mov
int3
sbb
cmp
lods
mov
adc
outsl
xchg
push
nop
pop
cwtl
orl
push
mov
sub
insl
push
and
and
test
ret
ss
pop
mov
or
cmp
pop
js
ljmp
repnz
push
jg
xor
pop
and
in
push
pop
cmp
xor
das
call
sbb
sub
add
add
mov
test
shrl
pop
popa
pop
mov
or
mov
fstl
je
sub
mov
push
in
push
lret
dec
inc
sbb
jge
fsubr
mov
cwtl
or
mov
mov
push
leave
mov
and
sub
data16
je
mov
pop
mov
or
push
or
in
testl
inc
jp
xchg
xlat
mov
inc
sub
int3
dec
lahf
and
push
cmpsl
jae
fs
lods
call
mov
movsl
dec
jmp
jl
pop
ja
sbb
pusha
push
movsb
ljmp
lret
aas
xchg
jnp
inc
insl
xchg
jp
int
dec
fwait
pop
inc
mov
cmp
ja
outsb
mov
cltd
xchg
sahf
test
shlb
pop
push
inc
jno
jp
scas
ficoml
loopne
xchg
jmp
shll
faddl
insb
jno
cmpsl
scas
dec
pop
es
push
idivb
mov
mov
cmp
mov
cld
jbe
lret
insl
mov
scas
jge
adc
mov
push
aam
cmpl
fcompl
add
adc
les
aas
out
scas
sub
xchg
cmc
cmpl
xlat
xchg
adc
insb
xlat
add
and
sbb
jae
shld
stos
inc
fmull
dec
xchg
add
push
jg
stos
mov
inc
call
xchg
add
lds
mov
lods
es
ret
pop
pop
inc
sbb
fwait
jae
mov
mov
xor
mov
cltd
scas
jno
pop
xor
jae
ljmp
gs
lea
lods
and
jmp
arpl
mov
test
cmp
mov
mov
jne
fstps
adc
aad
jne
mov
xor
imul
test
test
movsl
xor
cmp
fsubs
xchg
popl
mov
cs
or
mov
push
sbb
pop
pusha
flds
push
and
repnz
mov
jecxz
loop
mov
mov
jp
sbb
cwtl
pushf
mov
dec
int3
sahf
and
imul
adc
mov
adc
jp
iret
add
je
test
shll
mov
dec
mov
test
mov
in
pop
outsb
imul
test
mov
mov
sub
jecxz
aam
fwait
mov
addl
orb
adc
push
clc
lret
push
loopne
pop
mov
out
xchg
es
iret
jb
dec
pop
inc
insb
mov
or
push
aam
in
pop
sbb
mov
adc
bound
mov
cmp
xor
sub
sbb
sarl
ljmp
add
cli
sub
cld
std
cmp
and
popf
and
lea
mov
jo
subb
xchg
popa
imul
adc
dec
xor
sbb
pop
fisttpl
test
cld
add
cmp
inc
mov
inc
sub
mov
mov
fadd
mov
iret
adc
mov
repnz
xchg
sahf
out
stos
shlb
push
ret
das
jl
pusha
loopne
je
lods
sub
into
icebp
adc
cmp
js
push
inc
cltd
stos
cmc
xorl
outsl
push
inc
mov
jb
int
dec
lds
sbb
dec
test
sub
dec
mov
pop
stos
pop
mov
ret
call
or
jb
mov
pop
lods
xor
pop
lods
xor
shr
sub
push
orl
pop
or
sti
jb
sub
aam
orb
rcll
inc
xchg
push
or
ds
std
pop
ds
fwait
adc
loop
jo
cmpsb
mov
aaa
jmp
leave
bound
daa
stos
sti
pop
sbb
mov
dec
test
inc
jmp
cmp
xchg
repz
test
lahf
shr
shrb
push
leave
push
rcrl
xor
dec
inc
inc
lods
mov
stos
sbb
cmp
dec
mov
aas
or
iret
sbb
mov
stos
xchg
test
pop
fadd
decl
out
xchg
loop
outsl
lret
in
mov
pop
subb
leave
dec
pop
mov
push
mov
cli
xor
push
int3
jne
cmp
pop
inc
bound
mov
inc
into
lds
enter
pop
js
push
push
leave
in
out
fwait
push
scas
adc
add
js
daa
shll
jbe
movsb
clc
or
das
test
insl
fcomps
fldcw
mov
cwtl
or
add
push
xor
pop
pop
iret
xchg
lds
lods
cld
sahf
int
mov
subb
or
and
mov
orl
ja
lcall
dec
test
jno
stos
inc
cmp
ss
imul
ror
lcall
faddl
rol
gs
icebp
jbe,pt
pop
data16
inc
pop
jns
repnz
mov
clc
and
sbb
out
pop
adc
mov
sbb
into
test
sbb
cld
out
fsubrs
push
xor
jl
sub
push
mov
int
stos
outsl
or
jge
imul
jns
jb
sbb
inc
iret
negb
mov
movsl
cmpsl
xor
cmp
jp
int3
call
inc
enter
mov
mov
loope
adc
xchg
xor
jecxz
stos
out
gs
xchg
sarl
stos
adc
xchg
adc
dec
mov
rcll
or
cli
iret
jnp
or
sub
sbb
xchg
mov
mov
mov
sbb
mov
jne
fldl
mov
sti
push
sti
cmpsb
sub
jmp
lret
and
or
sarl
test
mov
sbb
mov
repz
jl
sti
cmp
out
inc
dec
pushf
sbb
mov
mov
pop
or
push
test
jnp
lret
test
dec
mov
lret
mov
dec
add
mov
fwait
mov
loope
popa
jmp
dec
out
xlat
in
pop
jo
enter
pop
call
dec
xor
pop
mov
jb
push
push
xchg
push
and
daa
fisttps
fmull
shl
orl
test
inc
fcmovbe
lcall
lods
ficoml
mov
pop
ljmp
jle
xchg
cli
lret
stc
add
hlt
push
jge
jae
ror
mov
cmp
push
fistl
sub
adc
mov
call
or
pop
sahf
xor
mov
test
movsb
jnp
adc
push
cmpsb
adc
out
out
rorb
mov
dec
jae
int
dec
nop
inc
subb
ret
scas
mov
and
fcoml
xchg
stc
and
jmp
jmp
repz
and
mov
lahf
cmp
loop
sub
enter
xchg
loop
mov
ds
dec
scas
ss
adc
sub
loop
stos
int3
dec
aad
pop
inc
xlat
adc
lods
jg
addr16
inc
pop
call
ljmp
mov
scas
pop
jae
inc
or
or
dec
icebp
ret
mov
cld
lret
in
mov
scas
inc
ljmp
mov
nop
test
mov
mov
clc
into
inc
pmaddwd
pusha
cmc
jno
sbb
lret
and
mov
cmp
cltd
push
addr16
jmp
sbbb
das
pop
repnz
mov
and
ja
cmpsl
push
inc
aam
ljmp
sbb
mov
lahf
adc
or
ss
adc
test
cmp
insl
adc
out
adc
xchg
jns
jno
fs
dec
enter
daa
xlat
aas
jl
or
mov
jbe
js
orb
add
dec
movsl
fsubrl
add
fiadds
xchg
xor
xorl
fcomps
addr16
push
push
and
int3
stos
cmpsb
dec
inc
ss
aam
mov
sub
fwait
mov
std
out
cvtps2pi
loopne
aad
imul
andb
sbb
mov
popa
sbb
clc
xchg
cs
out
mov
pop
js
lods
mov
fnstenv
xor
aaa
dec
adc
ror
jecxz
dec
add
dec
sarl
cmp
push
icebp
cli
ss
aad
push
pop
sbb
lock
out
xchg
sbbl
jb
or
mov
fs
cmp
out
xchg
movsb
stos
outsb
pop
das
mov
add
lahf
and
fstp
sbb
lock
ljmp
add
adc
das
pop
int3
mov
pop
insb
xchg
lahf
jecxz
cmp
mov
pop
cmp
pushf
ljmp
cmp
xor
push
dec
add
jbe
jb
pop
mov
mov
sti
cmp
call
std
js
mov
jnp
push
scas
xchg
mov
sub
hlt
jbe
dec
pop
jl
loop
cmpsl
add
lea
xchg
pusha
xor
xor
stc
mov
dec
sar
in
incl
mov
mov
mov
outsb
ds
pop
xchg
mov
jmp
lcall
pop
or
xchg
lret
fistpl
sub
sub
shrb
into
jns
and
jbe
rorb
lret
adc
incb
sbb
and
aad
stos
fimull
xor
scas
mov
add
inc
sar
sbb
cmp
sbbl
jge
push
xor
add
repz
stos
je
push
icebp
test
ja
add
inc
mov
mov
jno
bound
in
cmp
stc
divb
aad
jne
mov
add
gs
pop
mul
add
push
xor
aad
jp
mov
xor
pop
add
ffreep
mov
mov
jne
adcl
or
cmp
scas
or
adc
add
dec
pusha
loopne
pop
ret
mov
hlt
rcl
and
scas
xchg
iret
stc
pop
xchg
jecxz
das
cmp
idivb
jg
jo
cmpsb
jno
pop
fwait
sbb
push
mov
sub
push
loop
dec
sbb
pusha
mov
repz
inc
shlb
filds
lods
dec
xchg
add
int3
stos
aam
shl
pop
nop
push
subb
jge
test
inc
add
xchg
mov
in
xchg
push
or
inc
or
sbb
mov
cmpl
xchg
movsl
pop
dec
push
les
lds
inc
ret
adc
xor
mov
dec
or
out
sti
hlt
cltd
jb
loope
test
fimull
test
cltd
addl
xchg
add
or
shl
nop
adc
push
xor
push
ret
jmp
mov
pop
sbb
subb
mov
cmc
dec
dec
mov
sub
lret
sub
dec
outsl
cmp
insl
imul
loopne
cmp
js
fninit
leave
into
jecxz
lahf
xor
leavew
outsb
popa
pop
in
sbb
out
push
inc
cmp
aad
mov
call
test
cmp
mov
lea
fsubl
dec
dec
mov
movsl
mov
sarl
push
lret
bound
inc
sbb
imul
mov
push
call
lods
les
test
xchg
mov
ror
test
push
jmp
pop
or
inc
inc
rep
mov
jecxz
sbb
pushl
and
dec
sbb
pop
fsubrp
xor
add
or
shrb
mov
sti
mov
xchg
pop
pop
lcall
lock
cltd
cmpsl
adc
mov
push
cmc
jecxz
mov
loope
imul
adc
pop
aaa
mov
mov
mov
adc
xor
jbe
cwtl
xchg
push
mov
insb
mov
inc
mov
dec
xor
adc
ret
jns
push
pusha
jp
xor
add
sbbb
xchg
popf
pusha
xchg
stos
notb
ss
aaa
jmp
jl
aaa
scas
push
adc
incl
cmpsl
shl
enter
or
lds
jmp
add
mov
pop
xchg
js
jmp
ljmp
sbb
negl
xlat
shll
push
xchg
mov
popa
mov
inc
daa
mov
mov
jbe
mov
aaa
arpl
cmc
enter
mov
add
std
jp
mov
daa
loop
hlt
out
and
imul
cli
pop
lds
sub
mov
fwait
or
movsb
add
lret
out
jmp
dec
inc
roll
xlat
xchg
mov
xchg
push
add
mov
or
ss
xor
aas
sbb
jmp
movsb
mov
jbe
xchg
sbb
test
jnp
sbbl
mov
cmc
dec
cmp
and
iret
movsl
xor
lods
sahf
ret
popa
pop
cmp
lret
fbld
jmp
scas
and
inc
adc
pop
cmpsl
jne
push
push
xor
rorb
add
popa
cld
rcrb
push
mov
mov
movsl
xchg
stos
jae
sarb
sarl
arpl
jbe
dec
stos
dec
mov
outsb
mov
fistpl
out
cld
je
add
lods
js
inc
xor
or
xchg
xor
mov
jl
xor
stos
xor
cltd
jg
out
xchg
push
test
dec
rcrl
inc
les
or
pop
repnz
sbb
pop
insb
outsb
rcrl
lods
movsb
adc
es
adc
lods
mov
clc
inc
adc
fimull
dec
aam
cmc
xor
xlat
dec
aad
jnp
adc
jmp
jg
mov
outsl
lcall
loopne
xchg
jno
push
scas
sub
aad
mov
scas
std
nop
dec
inc
xchg
imul
arpl
cmpsb
ss
fdivl
push
stos
mov
adc
outsl
mov
sub
je
and
lret
xchg
fcmovnbe
xor
loop
jbe
fcmovbe
cmp
xor
inc
push
jmp
push
mov
and
jo
aaa
or
in
pusha
xchg
ds
pop
stos
pop
mov
int3
cmpsl
xchg
jmp
adc
push
shrl
jo
push
sbb
pop
int
lods
dec
xchg
call
push
xor
ds
sub
mov
outsl
aad
cmc
pop
lahf
pop
sub
xorl
dec
mov
loopne
lret
sbb
into
mov
sub
xchg
addr16
cmpsl
or
out
and
mov
mov
mov
ljmp
xchg
jns
js
pminub
dec
cltd
sti
cmp
mulb
out
imul
scas
adc
pop
and
lods
pop
sbb
cmpsl
add
movsl
fdivr
pop
test
dec
or
or
cli
sub
leave
jle
xchg
add
jp
rorl
mull
out
sbb
out
out
mov
push
mov
and
jb
add
add
insb
xchg
add
sbb
leave
adc
addr16
stos
and
mov
xor
mov
mov
jbe
lods
pop
stos
fcoml
jae,pt
push
scas
aam
sbb
push
outsb
or
adc
jbe
ja
in
test
adc
adc
ja
adc
dec
lcall
adc
movsb
leave
push
movsl
and
dec
sbb
cld
pop
fimuls
imul
movsb
inc
jne
ss
into
add
add
pop
test
loope
ds
xchg
sbb
icebp
mov
jle
add
mov
insb
push
mov
lods
mov
mov
data16
mov
test
or
pop
lret
mov
pop
push
jns,pt
imul
or
xor
into
sarb
jle
dec
xor
cmpsl
addl
sti
jge
in
push
cmpsl
xchg
add
add
into
sub
das
lds
mov
imul
les
or
enter
jge
pop
mov
cmpsl
jb
jmp
mov
xchg
sub
add
mov
jno
cltd
mov
sub
jb
sub
cmp
out
sbb
jae
adc
mov
lret
pop
int3
enter
daa
fnstcw
jno
jg
jns
mov
fisttpl
sub
xchg
add
bound
mov
inc
mov
inc
or
jg
mulb
pop
push
and
pop
in
movb
pop
jl
mov
stos
mov
call
xchg
mov
lcall
push
xor
adc
lods
cmpsb
dec
lds
addr16
lret
sbb
test
sarl
addr16
mov
ljmp
das
lret
cmp
mov
mov
pop
push
mov
pop
das
inc
mov
push
cmpsl
jbe
rorb
shl
mov
mov
push
push
inc
lcall
push
pop
dec
aas
xor
sub
add
xchg
jmp
jge
xlat
out
mov
mov
xor
adc
fdivrs
sub
les
int
push
mov
dec
cmp
stos
cmpsb
loope
mov
inc
sub
enter
icebp
push
fcmovb
adc
iret
cmp
cwtl
arpl
push
xchg
jg
or
push
xor
outsl
or
lods
pop
mov
jecxz
sbb
nop
stos
repz
jo
fidivrs
lea
xor
stc
sub
lock
push
int
sbb
jno
inc
push
ret
sbb
orl
ljmp
inc
mov
cmpsl
in
stos
add
jle
les
pop
pop
add
movsb
lods
adc
xchg
pop
pop
fisttpll
sub
lret
push
xor
imul
xor
mulb
and
sub
jmp
ret
dec
dec
jbe
or
decb
aad
iret
rcrl
push
inc
mov
sub
in
in
test
je
mov
sub
cwtl
or
mov
enter
or
mov
jae
dec
fdivp
mov
mov
int3
jo
mov
jae
test
mov
insl
cwtl
aad
iret
pusha
mov
fistps
mov
orl
pop
aam
mov
pop
mov
mov
mov
addr16
ljmp
shrl
and
push
jle
leave
imul
mov
inc
xor
or
dec
scas
mov
stc
xor
mov
sahf
rcrb
mov
pop
int
xchg
ficompl
pop
sti
inc
repnz
lods
jbe
sbb
bnd
jb
mov
icebp
shll
fidivl
cmp
sbb
dec
sti
cwtl
mov
jp
inc
or
inc
xchg
pop
fdivs
subb
add
xor
int
es
lods
and
xor
pop
adc
jb
mov
mov
inc
xorl
fiaddl
insb
inc
pushf
pop
sub
mov
inc
inc
jno
out
jmp
clc
gs
pop
addr16
add
push
or
pop
sahf
xchg
lods
add
push
cmpsb
pop
xchg
jns
adc
dec
xor
jle
mov
pop
lea
mov
das
jg
ja
and
inc
popl
cmp
sbb
daa
or
cmp
pushf
les
sbb
movsb
inc
test
xchg
int3
bound
leave
and
out
dec
pop
add
mov
fists
fnstenv
cwtl
lds
enter
inc
std
pop
jl
ret
cmp
into
clc
or
pop
mov
fcoml
insl
push
pop
push
movsl
push
enter
mov
loopne
pop
cmp
loop
bound
stos
pop
mov
jg
les
test
clc
roll
orl
data16
int3
sbb
nop
push
sarb
push
test
rorl
jmp
test
adc
es
dec
push
push
pop
sub
xor
repz
push
mov
push
popf
mov
leave
mov
sbb
insl
cmp
stos
daa
cltd
mov
sbb
call
cmp
jns
push
decb
push
inc
loope
imul
mov
mov
inc
adc
stos
mov
adc
adcb
adc
cmpsb
pop
aam
sub
das
sub
sti
xor
psubsb
add
and
std
push
ss
push
add
aam
mov
mov
sub
loope
rcl
sbb
add
cmp
or
or
shrb
dec
pop
or
pop
add
add
sub
lea
push
aam
cmp
bound
cmp
test
mull
add
repnz
shr
adc
lret
xchg
and
sbb
ds
rcll
jl
bound
loope
sbb
sub
test
fs
mov
cs
jl
dec
cmp
bound
fisubs
xlat
add
testl
xor
fistpll
mov
imul
sti
xchg
cmpsb
xor
inc
je
lods
lret
mov
xchg
les
lds
push
sub
in
cmp
mov
mov
outsb
test
mov
mov
adc
icebp
inc
or
andl
jg
jnp
movsb
mov
push
ret
jp
push
das
mov
adc
xchg
sbb
pop
pop
jle
pushf
cmp
xchg
aas
aam
push
ficoms
cltd
in
xchg
inc
mov
rcrb
push
xor
mov
xlat
sbb
mov
cmp
mov
jo
add
xchg
js
inc
inc
ret
push
push
loope
add
lds
sub
lcall
ds
mov
xor
dec
nop
mov
mov
sub
or
orps
scas
in
rorl
movsb
les
cmp
in
mov
sbb
shrb
in
jmp
xorl
add
mov
nop
mov
adc
fidivl
inc
shr
jae
bound
adc
sbb
aad
adc
jecxz
rcrb
movsb
fcoms
imul
out
jbe
inc
ljmp
xchg
pop
adc
add
lret
fucomi
mov
nop
repz
xchg
jne
insl
mov
xor
add
and
mov
insb
out
mov
hlt
es
rol
inc
das
xor
adc
aam
xchg
dec
into
or
cmpsl
aam
testl
andl
xchg
sub
push
into
cmpsl
pushf
mov
pop
dec
dec
push
test
cld
dec
pop
lret
lea
test
xor
in
test
imul
cmp
jle
or
push
mov
sub
mov
inc
mov
cmp
daa
push
es
xor
sbb
pop
ja
cmc
xor
fbld
lcall
mov
leave
gs
push
sbb
pop
sub
inc
xor
jecxz
push
rorl
fcomps
rclb
push
jns
sub
push
mov
bound
insb
aam
imul
dec
xor
pop
mov
pop
jne
inc
mov
aas
sbb
scas
mov
test
push
mov
push
loopne
sbb
add
push
into
sub
imul
add
in
js
dec
xlat
push
insb
adc
mov
lahf
sub
jne
add
xchg
xchg
push
or
cmp
jmp
insl
loop
mov
mov
je
imul
btc
fcompl
movntps
adc
arpl
jmp
sarl
add
lods
adc
pop
insl
push
dec
inc
rorl
push
xchg
jg
mov
jno
xlat
inc
adc
insb
in
lock
add
xchg
push
sahf
push
mov
mov
xchg
pusha
aad
out
stc
mov
lods
mov
ljmp
jp
fwait
xchg
pop
cmp
adc
dec
test
daa
push
lcall
lds
ret
dec
inc
inc
bound
mov
mov
lods
mov
ret
add
jecxz
movsb
es
shll
je
fwait
jo
fstpl
xchg
cmpb
push
sbb
sbb
or
lods
lea
cltd
cmpb
shrl
cmp
add
scas
or
out
jmp
sbb
stc
loope
jb
jecxz
fldcw
hlt
andb
or
addr16
pop
sbb
mov
loopne
dec
inc
into
push
mov
and
aas
add
dec
es
sbb
cmp
pop
aaa
mov
fs
push
cmp
les
xchg
dec
mov
xchg
dec
xor
and
dec
cs
insl
mov
push
jmp
movsb
orb
cmc
mov
fstp
aas
insl
dec
nop
dec
mov
ret
or
mov
inc
adc
movsl
cmp
add
mov
inc
dec
add
imul
mov
js
xchg
mov
pushf
test
cltd
sti
fnsave
test
mov
mov
jmp
testl
gs
lret
sub
lcall
pop
mov
sub
sahf
or
scas
xchg
fistpll
pop
sub
adc
jbe
scas
or
in
xchg
xor
das
lock
fs
sub
dec
inc
rorl
mov
inc
xchg
pushf
and
or
or
xlat
push
int3
push
call
sti
adc
jecxz
bnd
and
fnstsw
mov
enter
or
inc
cmp
adc
jp
insl
in
sub
or
mov
push
stos
mov
inc
pop
mov
and
adc
dec
sti
mov
popf
sarb
aam
xchg
dec
xchg
insb
popf
insl
jns
enter
outsl
inc
es
out
or
sbb
mov
pop
mov
and
or
mov
and
mov
and
mov
and
mov
and
mov
das
jmp
dec
addr16
daa
stos
in
and
cltd
bound
js
add
popf
and
repz
push
inc
dec
adc
jle
mov
xchg
pop
add
vsubpd
hlt
scas
add
roll
mov
cmpb
cmpsb
xchg
pop
add
ljmp
int
shl
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
in
xchg
ja
imul
mov
out
mov
ja
imul
mov
out
mov
pop
cmp
or
cmp
lret
cwtl
jbe
inc
dec
in
xchg
ja
imul
mov
out
mov
loopne
jbe
inc
dec
in
xchg
ja
imul
mov
out
mov
mov
in
gs
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
ret
jmp
or
xlat
push
int3
push
decl
pop
push
xlat
push
int3
push
lcall
push
pop
stos
std
aad
sbb
pop
push
xlat
push
int3
push
decl
pop
push
xlat
push
int3
push
decl
pop
push
xlat
push
int3
push
decl
pop
push
xlat
push
int3
push
decl
pop
push
xlat
push
int3
push
decl
pop
push
xlat
push
int3
push
decl
pop
push
xlat
push
int3
push
lcall
push
pop
stos
std
aad
sbb
int
shl
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
xchg
cmc
xor
mov
push
jecxz
fsubl
xor
or
jo
mov
dec
pushf
mov
mov
fisubs
and
pushf
or
mov
ljmp
fstl
add
xchg
rorl
push
cs
dec
mov
push
out
push
add
pop
outsb
repz
inc
and
lcall
pop
jl
mov
cmp
test
lahf
dec
insl
pop
add
adc
pop
outsb
movsb
lds
test
ljmp
fldenv
adc
lods
pop
iret
fwait
bound
xlat
mov
addr16
adc
jl
ds
jae
arpl
mov
push
mov
nop
mov
and
fistl
or
dec
jne
lahf
xor
cmp
mov
adc
test
out
popa
pop
pop
leave
dec
daa
pop
pop
mov
push
outsb
push
dec
stos
das
fcoml
fldl
push
sub
sub
dec
lahf
and
and
xor
mov
pop
aad
imul
clc
push
fistps
rcr
fwait
xchg
out
pop
dec
inc
xchg
pop
pop
inc
cmc
mov
inc
mov
cld
lret
or
sbb
or
aaa
scas
or
cmp
fmuls
loop
cmpsl
cmp
popf
and
push
lods
and
lea
cmp
or
movsl
insb
arpl
xchg
and
stos
inc
push
movsl
hlt
in
or
mov
shrb
xchg
inc
stc
push
and
sahf
bound
js
cli
movsl
sub
popa
sbb
adc
out
cmp
mov
xchg
pop
add
lds
jge
push
mov
mov
mov
cmpsb
xchg
pop
add
lds
lret
mov
push
int3
mov
pop
jle
jg
mul
mov
out
adc
ss
mov
mov
push
es
aas
in
jecxz
xchg
jb
sahf
fbld
jmp
xchg
popa
js
in
dec
push
lret
in
les
jg
mov
sub
push
pusha
mov
icebp
pop
dec
push
mov
in
rcrb
xchg
mov
mov
call
sub
sbb
cmp
or
movsl
insb
arpl
xchg
and
stos
inc
push
movsl
hlt
in
or
mov
shrb
xchg
inc
stc
push
and
sahf
bound
js
cli
movsl
sub
popa
sbb
adc
out
cmp
mov
xchg
pop
add
lds
jge
push
sub
and
inc
xor
out
xor
push
sbb
mov
cmpsb
inc
jae
jp
or
ficompl
int3
mov
pop
jle
jg
mul
mov
out
adc
ss
mov
mov
push
es
aas
in
jecxz
xchg
jb
sahf
fbld
jmp
xchg
popa
js
in
dec
push
lret
in
les
jg
mov
sub
push
pusha
mov
icebp
pop
dec
push
mov
in
rcrb
xchg
mov
mov
call
sub
sbb
push
enter
mov
and
mov
and
mov
and
mov
sbb
mov
shll
subl
jl
int
shl
and
mov
and
mov
sbb
mov
int
shl
and
mov
and
mov
and
mov
and
jne
out
cmp
jns
int
shl
and
mov
and
mov
and
jb
cmp
mov
and
mov
and
mov
sbb
mov
jmp
inc
jne
int
shl
and
mov
and
arpl
popl
aam
mov
repz
xchg
arpl
mov
in
gs
mov
and
andb
movsb
sub
jge
or
xchg
arpl
mov
in
gs
mov
and
pop
fimuls
jmp
enter
adc
mov
and
mov
and
xlat
mov
ljmp
push
pop
push
xchg
pop
sarl
and
mov
and
mov
sbb
sub
jl
in
push
in
gs
mov
and
arpl
push
pushf
xchg
jle
rcrl
mov
js
jle
adc
stc
cmp
push
loope
xchg
mov
xor
and
xor
and
insl
xchg
in
mov
xchg
mov
xor
and
xor
and
inc
lods
xchg
fcmovnbe
mov
in
gs
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
adc
out
mov
push
aam
add
mov
and
dec
inc
insl
add
insb
sti
add
add
icebp
js
xlat
push
pop
arpl
pop
mov
cmp
dec
jl
dec
imul
mov
mov
and
mov
push
mov
aas
aas
test
sbb
pop
lods
and
cmc
xor
push
ljmp
lock
cltd
insb
sbb
aaa
rorb
in
inc
xorl
addr16
mov
lea
sbb
xchg
push
in
xor
dec
orb
pop
fwait
inc
xchg
or
enter
aam
sahf
lea
sub
mov
xchg
cli
push
sub
out
adcb
repz
mov
shlb
repz
pop
push
xchg
cltd
inc
mov
xor
loopne
add
les
dec
out
jo
pusha
sub
push
aad
sub
mov
and
xor
xchg
ja
push
insb
xor
loope
jb
scas
movsl
cli
and
aas
orb
dec
mov
jl
adc
orb
stos
dec
sub
jnp
popf
js
fldl
mov
mov
fdivrs
push
mul
xor
icebp
inc
jb
movsb
call
mov
mov
and
push
fidivs
inc
mov
and
push
fmuls
je
pop
outsl
jp
addb
dec
fucomp
inc
adc
xchg
sti
hlt
push
jp
push
xor
dec
pusha
jne
movsb
adc
xchg
scas
cmc
cmpsb
out
ret
jae
fld
inc
mov
out
push
ja
ja
les
addl
inc
pushw
in
insl
cmp
push
dec
push
out
and
pusha
adc
mov
and
add
push
adc
shrb
fistpll
mov
testb
sbb
cmp
and
movsb
into
cmovne
loop
sbb
in
mov
inc
call
sbb
sub
pop
or
sti
mov
fnsave
outsb
scas
pop
push
push
leave
cmpsl
inc
lret
sahf
mov
dec
push
testl
pop
popa
or
lret
add
push
inc
dec
rep
mov
cmp
sub
hlt
mov
cmpsb
sub
add
mov
cld
stc
adc
or
mov
imull
std
fwait
es
push
fstps
sahf
lcall
mov
push
adc
out
mov
dec
adc
sub
jmp
stos
lods
jbe
pop
pop
cwtl
push
jl
aam
dec
loopne
push
cmp
loop
mov
rcr
pop
fstl
imul
xor
add
sub
fcomp
js
sbb
into
jecxz
jbe
pushf
cmp
xor
inc
pop
pushf
shll
push
or
sub
mov
cld
loope
mov
mov
sbb
mov
cmp
loop
jle
cmp
out
iret
sub
sbb
push
and
jae
sub
inc
aad
mov
jns
lods
fs
push
pusha
sar
dec
fildl
mov
je
insb
add
int3
je
rolb
push
dec
pop
pop
cltd
mov
mov
sbb
cmp
pop
push
xor
xchg
jns
sahf
cmc
inc
aam
dec
ret
ret
cwtl
fisttpll
add
ds
jnp
in
jl
dec
lock
inc
in
mov
fsts
mov
stos
cwtl
fs
cmp
popf
adc
popa
adc
xchg
push
mov
add
push
mov
nop
leave
imul
pop
mov
sub
and
pop
stc
inc
pop
pop
sub
pop
iret
mov
xchg
mov
lock
mov
pop
movsl
stos
pop
cmc
pop
pop
lcall
lea
ss
pop
loopne
add
sti
push
test
xor
movl
cmp
clc
dec
xor
jbe
or
cmc
cvtps2pd
lret
ds
test
pusha
mov
fdivs
loope
jno
pop
enter
ss
xchg
and
sub
add
cmp
xor
add
adc
cmp
mov
push
das
jnp
lret
inc
mov
inc
movsb
in
cld
mov
cs
movsb
js
add
push
into
leave
inc
daa
lds
push
push
push
and
stos
mov
in
and
adc
mov
imul
call
iret
lahf
adc
fisttps
jns
pop
cld
loop,pn
and
outsl
mov
out
cwtl
add
lock
lock
xchg
pop
add
push
cs
xchg
adcb
sarl
stc
inc
rorb
popf
mov
xor
add
push
movsb
fbstp
mov
push
add
dec
jmp
test
inc
gs
and
rol
lret
test
pop
add
loope
dec
mov
or
xchg
jp
aaa
iret
out
mov
sub
outsb
push
or
iret
jle
xor
add
and
outsl
sub
xchg
and
adc
jmp
jl
inc
ljmp
inc
mov
push
movsl
loopne
cmp
add
sub
mov
lret
mov
insb
ss
inc
push
inc
dec
ret
adc
mov
pop
mov
mov
mull
sub
adc
cmp
jmp
adc
and
sub
and
or
dec
cltd
aas
ljmp
sbb
rclb
mov
inc
divl
pop
jns
dec
movsb
pop
popa
ss
repz
inc
add
xor
sbb
into
cmp
sbb
mov
movsl
lods
sbb
repz
mov
mov
xor
mov
jg
mov
push
xchg
js
push
mov
fadds
mov
mov
fadd
ds
xchg
jmp
jbe
cmp
and
out
subl
lahf
jge
or
cwtl
cld
xchg
mov
push
inc
mov
lea
jns
push
jp
cwtl
sbb
decl
push
ds
or
stc
arpl
daa
or
jecxz
add
inc
mov
jg
test
mov
lds
cmp
in
jp
xor
adc
cmpsb
data16
jp
cmc
sub
jge
ja
cmp
cmpsl
cmp
xchg
outsl
xor
xchg
mov
mov
test
bound
fs
outsb
jae
cwtl
lea
mov
imul
daa
mov
cmpsb
inc
hlt
shll
pop
xchg
mov
mov
jnp
pusha
jle
cmp
mov
xchg
push
sub
xchg
cmp
mov
mov
jge
dec
xor
fisubs
ror
push
or
mov
ja
xchg
insl
mov
shlb
push
loopne
add
lods
cmpsb
mov
cmp
scas
out
mov
mov
sub
sbb
push
ljmp
mov
loopne
repz
pop
jp
sahf
dec
mov
ror
out
mov
sub
push
cmp
and
insl
jmp
push
jnp
push
daa
xor
mov
loop
lret
pop
in
stos
mov
shrd
es
mov
push
push
inc
hlt
ds
enter
leave
mov
divl
bnd
mov
cli
lahf
and
add
add
andb
pop
xchg
ror
fimull
push
xor
dec
loopne
add
pop
les
rcll
mov
adc
push
ja
mulb
shl
inc
cmp
scas
ret
insb
dec
and
icebp
mov
fadds
ucomiss
sbb
mov
or
outsb
fimuls
and
jno
adc
ss
ja
js
icebp
inc
mov
cmp
inc
test
push
test
in
dec
nop
mov
inc
jbe
std
repnz
adc
mov
pop
negl
faddl
into
js
push
mov
push
insl
mov
int
shl
and
pop
mov
cs
addr16
inc
mov
mov
add
or
sbb
dec
and
popf
sub
insl
fists
jnp
lods
mov
cmc
mov
test
and
xor
aam
inc
into
jnp
cltd
cld
clc
push
loope
jo
fcmovbe
addb
or
sub
insl
cmp
aam
inc
into
mov
hlt
mov
icebp
mov
in
or
fcmovb
xor
sub
sbb
in
mov
xchg
sub
xrelease
es
jo
jl
xchg
in
jle
push
outsl
mov
sarl
repnz
pop
pop
xor
pop
xor
adc
mov
jg
mov
and
cmp
add
call
adc
je
sub
inc
aas
mov
in
adcl
mov
pop
andb
pushf
dec
rcrb
leave
mov
cmpsl
ret
jg
adc
in
aam
jnp
or
adc
dec
push
or
in
test
add
inc
jg
adc
in
aam
jnp
or
adc
outsb
pop
in
ror
int3
jae
push
mov
xchg
fistps
scas
std
inc
cmp
push
push
dec
cmpsl
mov
lcall
fadd
dec
inc
cmpsb
test
pop
inc
mov
mov
pop
add
and
addr16
mov
les
adc
sub
pop
xor
push
push
pop
push
inc
dec
xchg
add
jge
fimull
mov
clc
xor
add
jmp
mov
int
fimull
mov
clc
xor
and
cmp
loop
or
jns
stc
mov
sahf
sub
ja
push
movsb
jno
and
pop
cpuid
dec
inc
stos
adc
lcall
jno
inc
mov
dec
sub
repnz
jp
cmp
xchg
es
mov
xor
aaa
mov
and
mov
xchg
mov
call
xor
adc
mov
add
test
in
out
aad
scas
sbb
pop
jnp
loope
pusha
mov
xor
xchg
pop
jno
cmp
sbb
push
cs
mov
mov
repz
cmp
jl
leave
stos
mov
aaa
xorl
mov
mov
ja
xchg
dec
aas
in
int3
xchg
mov
sbb
xchg
pop
push
leave
dec
xchg
cmpsl
mov
xchg
ret
mov
lds
inc
sub
scas
js
or
mov
sbbl
icebp
inc
ret
xchg
cmp
add
mov
ss
xor
arpl
pop
cmc
adcb
xchg
inc
mov
sub
jbe
push
lahf
mov
xor
arpl
pop
cmc
inc
dec
mov
int3
fstps
xchg
pusha
and
mov
pop
adc
xor
aad
test
jno
fucomp
and
int3
aas
push
lret
fcompl
shll
aas
xor
aas
dec
sbb
cmp
cltd
fmuls
inc
rcr
inc
inc
or
pushf
pop
out
adc
and
arpl
aaa
jmp
das
js
adc
fnsave
lock
xchg
mov
mov
stos
mov
push
scas
fstl
in
aas
jno
push
dec
divb
mov
pusha
dec
and
aad
xor
xor
dec
cmp
rclb
lret
movsl
movsl
or
divl
call
jg
ss
outsl
or
fstps
ja
xor
add
push
lods
insl
mov
imul
divb
xchg
sub
out
test
cmp
inc
sub
sub
pop
sbb
jnp
push
sub
push
pop
xchg
jo
jb
mov
mov
xchg
push
lcall
pop
inc
stc
bound
jo
add
packsswb
in
mov
aad
rcrl
call
push
xchg
jg
test
dec
pop
mov
ljmp
fsubrl
in
into
js
push
mov
pop
negl
faddl
into
js
push
mov
ds
rolb
pop
out
inc
add
mov
call
ret
cmp
ss
inc
push
or
sbb
addr16
pop
inc
xor
lods
ja
sarl
outsl
hlt
mov
and
adc
daa
loop
int
xchg
cmc
mov
push
sarl
dec
popa
stc
stos
inc
dec
ds
aam
repnz
push
add
add
std
sub
cmp
push
sbb
adc
lods
cld
call
sub
ret
mov
cs
mull
cwtl
cmp
test
ds
pop
xchg
mov
push
sub
ja
pusha
xorl
and
mov
jle
mov
lock
mov
adc
push
pop
xlat
and
es
cld
cwtl
add
cmp
mov
xchg
test
push
push
les
cmc
jge
xchg
fucomp
xor
pop
iret
push
push
cwtl
out
mov
jmp
fs
pop
mov
xor
add
add
jl
sbb
add
add
cmp
mov
pusha
shrb
sbb
cmp
sub
push
sub
mov
es
jo
int3
es
std
std
scas
inc
lock
mov
cmpsb
jecxz
sbb
rcr
dec
in
fcmovne
and
adc
ja
xor
das
aaa
ret
test
outsb
daa
pop
ss
ja
test
pop
test
jb
icebp
sub
cld
ds
adc
nop
cwtl
dec
or
fcmovb
xchg
cmc
into
push
mov
ret
outsb
and
mov
or
int
rcr
push
mov
xor
inc
imul
pop
scas
mov
pop
sbb
mov
fisttps
jo
or
dec
add
pushf
xor
pop
push
fists
mov
repz
inc
add
cs
add
or
sbb
jbe
stc
lods
test
fldcw
jmp
mov
add
jb
clc
lcall
cli
dec
aas
lock
mov
sti
les
mov
icebp
test
loope
fstpt
mov
sbb
jmp
and
mov
adc
enter
jb
sbb
jno
push
hlt
push
idivl
out
xchg
hlt
pusha
cmp
xchg
fdivp
sbb
mov
xchg
mov
cmp
jns
push
add
fs
cmp
pop
ds
jbe
imul
mov
and
xor
xor
sbb
int
stos
test
jnp
mov
mov
repz
arpl
pop
adc
xchg
xchg
sub
nop
leave
mov
std
xor
dec
imul
or
sbb
sbb
repnz
addl
loopne
jp
lahf
xchg
jmp
mov
lock
repnz
test
cmpl
pushf
push
push
stos
iret
push
in
insl
dec
ret
jl
popa
push
insb
cmp
push
cmp
jbe
clc
mov
cltd
or
push
jge
or
mov
outsb
lds
pop
mov
xchg
repz
loop
out
or
mov
mov
lcall
push
repz
cwtl
inc
fmulp
pop
cwtl
out
cmp
or
cmp
mov
dec
sub
jo
xchg
lods
push
and
scas
int
cmp
leave
jmp
js
test
jns
xchg
xor
aas
push
dec
lret
mov
pop
push
inc
cltd
jge
int3
dec
mov
inc
sub
cmpsb
xor
bound
hlt
or
fiadds
lcall
nop
mov
jl
bound
sub
test
rcr
imul
loope
xchg
cmp
mov
add
push
mov
enter
adcl
popa
add
cmc
pop
dec
stos
aam
imul
adcb
mov
adc
movsb
sub
sub
cmpsl
cltd
pop
sbb
and
repz
jne
mov
mov
imul
in
mov
and
insl
jg
push
sub
adc
mov
mov
sti
inc
xchg
xor
insb
nop
xchg
jge
shll
fwait
adc
mov
cmp
xor
add
ljmp
sbb
aam
in
adc
dec
push
xor
bound
out
adc
inc
mov
dec
mov
mov
mov
push
pushf
mov
mov
stc
fstpt
jle
cmp
sbb
xchg
jo
sarb
stos
popa
xchg
sbb
mov
scas
xor
imul
iret
std
enter
and
jne
mov
jb
add
push
rorb
repnz
or
ret
cmpsl
xlat
fistps
sbb
push
int
es
data16
mov
iret
mov
in
mov
imulb
or
inc
push
cld
call
movsl
test
xor
xor
pop
inc
lret
fimuls
or
decl
fidivrs
ljmp
shr
dec
adc
inc
fildl
repz
push
jp
push
mov
inc
jl
scas
das
hlt
xchg
aad
imul
rcll
cld
push
jle
sbb
jno
xor
jp
mov
sbb
sti
jmp
mull
test
addb
xchg
mov
stos
adc
decb
fmuls
ret
jo
stc
inc
lods
aas
inc
and
pop
movsl
mov
mov
mov
jne
fbstp
and
jmp
loope
mov
or
cmp
aas
sar
ss
mov
push
dec
stos
mov
push
iret
leave
lods
fcompl
lods
test
mov
push
fimull
mov
dec
cmp
pop
pop
stc
rolb
cmpsb
das
add
popa
push
jecxz
mov
cltd
sub
jo
sbb
daa
gs
in
jmp
cmc
jns
cmpsb
jg
inc
test
or
dec
lock
xchg
in
adcb
arpl
addl
dec
das
xor
dec
push
inc
test
inc
pop
fidivrl
sbb
scas
in
jge
push
scas
js
lret
sbb
xchg
sbb
lods
cmp
pop
test
xchg
shrl
hlt
cmp
xchg
pop
stos
inc
jb
mov
sahf
sarb
sarb
xchg
inc
jg
frstor
popa
cli
imul
push
mov
aam
bound
pop
lret
fucomp
int
mov
test
shrb
pop
and
lds
adc
mov
jmp
cmp
pop
adc
adc
shll
shlb
mov
in
dec
mov
fwait
xchg
sub
sbb
mov
mov
dec
std
fwait
sub
cltd
ss
jle
aas
cwtl
inc
push
imul
out
out
inc
xchg
fisttpl
fsqrt
pop
imul
out
inc
out
imul
mov
mov
rcr
mov
int
or
and
pop
addr16
call
cs
enter
sbb
jno
imul
stos
pushf
clc
fidivs
enter
test
cwtl
and
cmp
sbb
insl
out
jae
push
ja
adc
dec
out
sarb
mov
into
ja
cmpsl
adc
cmpsl
cmpsb
call
icebp
aas
pop
push
fucomp
cmp
push
insl
call
cmpsl
je
and
xchg
push
ljmp
lret
decb
jne
dec
mov
push
xchg
dec
pushf
dec
mov
inc
dec
loope
out
fisubs
stos
aad
or
and
sub
aad
add
mov
pop
aam
lcall
ret
cmp
das
mov
gs
inc
pop
rep
in
stc
mov
out
lods
stos
xchg
dec
sbb
and
push
cmp
adc
into
sub
test
fwait
push
imul
adc
aas
movsb
push
je
inc
pop
xor
ss
xchg
insb
push
imul
cli
push
pusha
mov
push
cld
jno
out
cmp
lcall
and
and
idivb
lcall
lea
jb
cmp
xchg
rorb
and
jecxz
fdivs
adcl
cmc
xor
inc
pop
ljmp
stc
inc
sahf
or
cmpsl
mulb
std
fadd
lret
lods
sub
push
rclb
or
cmp
sub
and
mov
pop
negl
movsl
jle
rclb
adc
int3
call
bnd
sub
or
aad
data16
xchg
cmpsl
mov
or
mov
pop
xchg
push
loopne
push
mov
rcr
gs
push
xor
gs
fildll
inc
xor
lret
outsl
mov
pop
jg
cmpsb
gs
xchg
into
dec
xchg
stc
and
lret
pusha
sub
sbb
int
mov
ss
add
adc
aas
add
cmp
loop,pt
nop
mov
call
ds
subl
clc
cmpsb
pop
sahf
cmp
rcl
in
insl
fcmovbe
js
jle
mov
mov
ds
mov
sub
lea
pop
xor
dec
stos
repnz
fcmovb
add
pop
sbb
ss
imul
mov
xchg
cmp
mov
sbb
jne
mov
mov
xor
mov
push
jns
or
or
mov
mov
xchg
xor
daa
add
xchg
mov
push
pop
lods
ja
adc
adc
adcl
lret
stos
mov
nop
or
sbb
add
loope
push
mov
pop
or
mov
addb
stos
cld
sbb
pop
push
scas
sub
fnstsw
dec
add
fldcw
dec
adc
loop
outsl
lods
ja
inc
jl
sbb
aam
ret
sbb
es
push
lahf
js
sub
xchg
and
ljmp
sbb
or
pop
dec
shll
mov
pop
mov
mov
jmp
lahf
testb
push
dec
cmpsl
push
shrl
out
mov
test
dec
popa
out
andb
adc
and
sub
mov
dec
and
nop
jmp
and
add
sub
inc
push
sbb
jle
adc
aaa
cli
inc
push
call
pusha
add
test
test
cld
push
hlt
sbb
mov
push
and
filds
xchg
adc
fists
pop
addb
sahf
fmull
dec
out
aas
dec
mov
into
xchg
std
adc
test
mov
ficoms
jmp
call
repz
pop
sub
dec
jns
or
xor
leave
loopne
cwtl
cmp
cmc
rcrb
shl
lcall
fsubs
enter
mov
or
adc
in
mov
mov
jmp
or
nop
std
lods
and
xchg
test
adc
cld
jle
mov
add
push
pop
push
sbb
decb
or
rcrb
pop
repz
xchg
ja
insl
iret
scas
push
sbb
mov
sub
cmpsb
mov
fisubrs
std
sbb
inc
orb
xor
mov
icebp
lods
add
cmp
leave
js
dec
xor
xor
sub
scas
lock
pop
rcrl
xchg
mov
call
inc
sub
repnz
mov
push
pop
sarl
sbb
ss
or
and
inc
adc
cmp
xchg
arpl
data16
push
jne
inc
insl
lcall
imul
test
or
push
mov
pusha
stos
ret
ficoms
mov
xchg
dec
es
sub
xor
ret
test
loop
ret
cld
repz
mov
add
push
imul
aad
pextrw
popa
xlat
bound
xorl
out
cmp
push
sbb
cmp
cmp
ljmpw
add
xor
xor
mov
adc
fwait
das
movsb
mov
xor
cli
xchg
push
lahf
inc
xchg
lods
dec
cmp
cld
add
sti
sahf
test
mov
test
xor
fdivrp
jp
leave
sbb
push
dec
rolb
or
insb
aad
inc
ficomps
shll
add
fsts
in
rorb
insb
in
add
addb
jo
pop
shlb
push
je
add
sub
scas
arpl
push
mov
pop
pusha
testl
cli
cwtl
sub
or
push
mov
push
icebp
cmp
xchg
mov
negb
xchg
shlb
cmp
shrl
sbb
mov
xlat
sub
mov
xor
and
jp
sbb
sbb
nop
or
adc
xchg
or
push
test
cmp
mov
movl
inc
push
imul
leave
mov
lahf
roll
xor
stos
jno
pop
jae
dec
das
jg
cmp
ret
jno
in
cli
pop
and
out
cli
xchg
ficompl
loope
andb
dec
in
push
mull
arpl
pusha
sub
add
mov
cmc
xchg
jl
call
nop
sub
sbb
popa
divb
adc
das
ljmp
cmpsb
jno
test
push
jne
aam
xor
mov
pop
xchg
sub
movsb
adc
push
aad
sub
mov
nop
dec
xchg
mov
push
fisttpl
mov
mov
out
lods
shl
xor
mov
jl
push
mov
roll
and
push
aas
sbb
push
aaa
mov
pop
or
mov
ja
mov
or
enter
in
nop
push
jmp
mov
mov
and
inc
lea
mov
in
pushf
sbb
push
adc
nop
fisubrs
imul
repz
and
pushf
xor
mov
sahf
or
aaa
ss
insb
and
mov
xchg
data16
int3
pop
xchg
xchg
int3
push
loop
inc
gs
inc
scas
xor
xchg
jb
cmpsb
sahf
movsb
addr16
mov
cmp
mov
fs
mov
lock
lods
and
movsb
cmp
push
xchg
nop
loop
or
mov
or
stc
add
fisubs
mov
cwtl
dec
push
mov
lret
and
lahf
xchg
imul
dec
nop
inc
pop
fbld
arpl
jp
rclb
clc
ja
adc
inc
mov
jge
and
ds
fcomps
add
cmpsl
mov
lret
or
xor
enter
push
sbb
xchg
cmpsb
fcoml
xchg
sahf
mov
mov
jmp
xchg
out
inc
rorl
cli
in
ret
xchg
loop
mov
ds
out
push
mov
cmp
rcrl
add
adc
nopl
mov
mov
add
lods
jae
jb
pop
adc
and
inc
test
xor
dec
sti
rcl
pop
mov
cmp
cmc
push
inc
xchg
call
lret
xchg
movb
pop
dec
inc
cmpl
dec
pop
mov
enter
mov
incb
cmp
popf
daa
addr16
arpl
in
sar
icebp
outsb
or
adc
and
sub
ret
cmp
mov
dec
loopne
cmp
push
stos
sbbb
in
fcmovne
push
or
arpl
out
mov
push
or
jg
jae
mov
mov
stos
mov
nop
adc
stc
inc
testb
xchg
jnp
jp
fucomi
xchg
xchg
dec
test
adc
fstps
mov
test
push
in
pop
aam
pop
pop
mov
cli
negl
sbb
data16
in
test
mov
dec
jns
iret
mov
clc
jge
xor
jge
xchg
ret
adc
mov
add
mov
in
mov
or
stos
repnz
hlt
in
or
pusha
adc
test
stos
movsb
adc
dec
std
inc
jbe
sub
or
fdivrs
jmp
pop
test
jne
inc
jle
sbb
adc
sub
mov
xorl
dec
push
sahf
fwait
inc
aas
xchg
sbb
jae
ljmp
int
add
outsb
int3
imul
fnstenv
in
mov
push
sub
jne
test
push
or
imul
loope
jbe
in
roll
call
push
inc
lds
push
push
mov
adc
dec
sbb
xchg
aas
dec
adc
push
cmc
addr16
arpl
xchg
iret
cmpl
in
orl
lcall
mov
movsb
insl
and
dec
mov
jle
adc
fldcw
push
mov
mov
in
xor
fdivl
pop
icebp
int
adc
jnp
adc
or
jo
push
in
jmp
fimull
jmp
ret
sarl
mov
mov
in
mov
jle
hlt
cmc
lret
out
pop
add
shll
xchg
or
jge
mov
sbb
fsubs
xor
xor
out
imul
aad
jp
inc
cmp
xor
je
stos
add
sbb
aam
sub
inc
in
scas
fs
mov
xchg
or
adc
les
rcll
push
and
mov
in
gs
jns
lods
out
sub
daa
inc
push
cmpsl
stos
mov
enter
jb
bound
test
divb
push
sbb
mov
mov
mov
or
inc
adc
xor
sbb
mov
adc
cmc
cmp
fwait
jno
in
adc
or
in
movsb
sarl
ljmp
mov
insb
push
push
rcr
sub
rol
or
mov
call
data16
sbb
pop
es
shl
mov
int
mov
pop
inc
xchg
jb
fsts
jmp
ljmp
imul
pop
fcom
cmp
mov
ljmp
pop
or
aas
mov
aad
xchg
cs
sbb
lods
lcall
pushf
mov
out
mov
and
jp,pn
subb
xchg
mov
int
dec
dec
pop
ss
add
sbb
xchg
sbb
mov
xchg
test
sbb
adc
bound
inc
fisubrl
loope
mov
pop
add
dec
dec
sub
int
std
aaa
jmp
inc
jle
xchg
cmpsb
or
xchg
lock
pop
mov
aas
imul
and
stc
push
cmpsb
dec
mov
push
cmp
dec
icebp
push
cmp
xchg
pop
std
hlt
mov
popf
push
aad
stc
push
imul
or
dec
or
dec
xorb
popf
cmpl
scas
ja
jle
add
movsb
cltd
jbe
pop
and
or
push
mov
xorl
aad
dec
mov
out
pop
iret
aam
in
ljmp
clc
pop
dec
clc
loope
pop
cmp
lock
xor
lahf
push
sub
mov
cwtl
insl
out
pop
loop
inc
mov
and
mov
pop
imul
or
or
xorb
add
fisttpll
rolb
inc
in
xchg
sub
pop
test
xlat
mov
rcl
stos
loop
mov
xchg
incl
insl
sbb
jns
mov
div
xchg
inc
arpl
mov
sbb
loopne
test
xchg
sbb
fidivrl
xor
out
mov
push
ficoms
xchg
mov
fsubrl
jmp
loopne
dec
adc
aad
arpl
pop
pop
or
mov
push
cmp
imul
repnz
shr
sub
stos
jne
push
pop
adc
aad
jg
mov
dec
jo
cmp
scas
out
cmp
loop
sti
cmp
jno
mov
push
push
fistpll
stos
inc
repnz
push
scas
roll
cmp
mov
push
arpl
addl
push
leave
popa
gs
or
cmp
mov
incb
mov
inc
sbb
mov
sbb
nop
scas
nop
cmc
push
repz
imul
jle
imul
add
xor
xor
shlb
inc
dec
or
int3
push
adc
cmpsb
jne
std
loop
mov
arpl
mov
jl
roll
pop
lahf
push
or
jae
mov
movsl
jmp
push
jmp
mov
mov
scas
dec
or
enter
xchg
xor
or
or
or
pop
into
dec
cli
jl
sti
mov
cwtl
fs
xchg
xor
out
xor
dec
pushf
int
sbb
jne
sub
ja
dec
add
xor
ror
dec
or
xor
fs
clc
jbe
push
push
or
jnp
adc
sub
leave
fincstp
mov
and
add
fwait
clc
jo
adc
xor
out
mov
pop
mov
add
enter
mov
popa
cmp
daa
fwait
xchg
add
scas
push
cltd
and
add
sbb
ffree
add
jae
leave
js
pop
outsl
out
inc
out
sti
cli
dec
mov
mov
inc
or
push
test
mov
popa
pop
loope
mov
pusha
fdivrs
sbb
sti
sub
ret
imul
in
or
mov
js
in
js
je
shr
ret
push
push
sub
lods
call
imul
sbb
out
adc
mov
mov
mov
ljmp
stos
dec
in
imul
add
push
addr16
cmpl
loop
fistpl
pop
mov
pop
push
lret
lahf
cmp
xor
leave
cmpsl
cli
mov
jae
mov
lcall
imul
dec
fnsetpm(287
fildll
iret
in
pop
les
mov
xchg
rorl
inc
aas
arpl
jbe
cmp
push
mov
add
xchg
push
cmp
push
dec
outsb
insb
mov
aas
add
mov
dec
mov
push
enter
push
aas
pop
divl
mov
pop
out
dec
lea
lock
xor
pop
adc
xchg
jnp
int
sub
aad
leave
add
leave
pop
xor
push
imul
and
mov
inc
jne
int3
mov
popa
mov
fnsave
jge
push
push
popa
imul
shrl
hlt
push
jne
jp
ljmp
lahf
dec
push
outsb
pop
in
push
mov
cmp
ljmp
imul
dec
sbb
gs
sbb
int
mov
js
loopne
or
dec
sti
sarl
movsb
push
push
shlb
cld
lahf
jg
test
leave
cmp
insl
adc
pop
mov
sub
int
cmp
pop
sub
inc
popf
cmpsl
xchg
imul
sahf
subl
sub
add
mov
in
popa
sarb
mov
dec
cmp
sbbl
xchg
dec
bound
mov
test
mov
dec
xchg
and
xor
stos
pop
and
dec
fidivrs
push
aad
repnz
xchg
cmp
cmp
xchg
mov
jl
mov
movsb
jl
xor
stos
out
push
xchg
ret
stos
aaa
cmpsl
cmp
mov
std
rcrb
in
mov
scas
and
xor
xchg
enter
mov
jmp
pop
fnstcw
lret
or
das
insb
jns
sbb
adc
jne
cmp
imul
pop
cmp
lcall
sbb
bound
ja
mov
stc
mov
lods
xor
jo
add
or
in
in
sub
jns
mov
mov
cmp
mov
stc
jns
sub
test
push
ds
in
pushf
cwtl
push
or
mov
mov
scas
fs
pop
jg
mov
jne
jbe
sub
mov
mulb
fucomip
aad
dec
pusha
pop
insl
jp
sbb
adc
ret
movsl
daa
out
jecxz
adc
jns
inc
bound
mov
mov
jbe
jge
add
pop
fdivl
dec
cs
dec
ja
fisubs
mov
ret
retw
aas
cmp
les
scas
inc
cs
cmp
repz
mov
pusha
std
bound
mov
loope
sbbb
aam
cld
pop
and
add
fs
pop
jg
mov
les
scas
xchg
sbb
in
mov
xchg
mov
out
add
enter
lods
jle
sti
stos
sti
pop
xchg
push
mov
adc
nop
cmc
flds
or
test
xorl
mov
push
sbb
pop
shll
pop
int3
iret
xchg
mov
ss
icebp
jle
movsb
scas
jge
cltd
loope
jp
int
mov
cmp
test
shll
jbe
int3
or
cmp
xchg
cmp
mov
push
stos
ret
push
adcb
daa
loope
inc
xchg
fistpl
rorl
icebp
enter
inc
in
dec
or
fmuls
jge
std
fcomps
add
pusha
push
int3
gs
push
xchg
and
adc
and
leave
add
push
xchg
mov
or
mov
push
jecxz
cmp
out
add
xor
out
push
leave
lahf
lea
cli
jbe
lahf
add
fmuls
movsb
repnz
xchg
ljmp
xor
into
mov
sub
push
push
bound
pop
or
mov
push
xor
pop
adc
push
xlat
xor
divl
and
movsl
or
inc
adc
push
inc
mov
xlat
test
xchg
xor
xchg
inc
std
push
dec
mov
lods
sub
mov
je
cmp
mov
mov
add
popa
ret
xor
movsl
fnsave
fs
sahf
iret
pop
call
mov
int3
dec
push
pusha
aad
inc
pusha
jp
sbb
and
xchg
jle
movsb
call
mov
stc
xor
and
loope
movsb
push
into
pop
arpl
stos
sahf
sbb
mov
mov
out
xchg
lahf
rorb
push
add
scas
repnz
stc
jb
aas
push
mov
mov
pop
xchg
test
pop
loopne
dec
mov
mov
or
mull
or
lcall
dec
aas
shll
out
in
repz
enter
cmp
sbb
imul
lock
call
sub
xor
and
mov
mov
adc
inc
cmp
jbe
add
or
andl
pop
cld
jb
add
rclb
adc
imul
in
mov
cmpsb
enter
mov
ret
mov
mov
sbb
and
cmp
jmp
mov
insl
scas
cmpsl
cltd
adc
decl
xor
push
jp
push
xchg
mov
pop
push
dec
sarl
out
int3
fisttpll
push
mov
pop
jo
xlat
pop
jo
inc
jmp
push
repz
pop
aaa
ret
std
or
add
or
imul
push
movsl
lods
stos
add
inc
mov
mov
aam
push
js
out
adc
mov
xor
pop
daa
iret
cwtl
dec
jecxz
push
adc
daa
and
int
fs
nop
stc
xor
pop
nop
ja
xchg
push
mov
xchg
imul
mov
jnp
mov
jl
cmp
cltd
mov
jmp
ljmp
adc
and
lea
movsb
fs
adc
ds
outsb
push
xchg
or
out
insl
sbb
add
in
int3
mov
in
sahf
popl
inc
sahf
stos
jno
insl
jle
xchg
cs
xor
mov
aas
add
mov
stc
dec
pop
jl
shll
packsswb
sbb
jg
xorb
cmp
das
clc
push
cwtl
nop
sub
sbb
cli
mov
pop
xor
cs
cmpsb
or
cmp
cmpsl
mov
jge
xchg
and
repz
rorl
pusha
sub
jne
outsb
sub
pop
lret
and
dec
mov
jno
mov
pop
fisubrl
pop
pusha
sahf
popf
xor
ret
push
mov
std
std
fs
mov
mov
ds
jge
jecxz
fdivl
pop
out
adc
shll
dec
hlt
arpl
push
addw
mov
movsl
int3
and
and
push
mov
shll
pusha
pop
mov
sub
insb
repz
sbb
xchg
insl
fistpll
ja
sub
mov
loopne
ja
int3
push
lods
or
icebp
hlt
cmp
push
daa
push
repz
adc
add
cltd
inc
sbb
nop
sbb
mov
mov
mov
enter
nop
mov
fistpll
in
test
out
jp
xchg
add
lods
pop
ja
mov
lock
or
dec
iret
stos
inc
aad
xor
test
jbe
jbe
add
sub
dec
xchg
mov
pop
test
mov
ss
jne
out
mov
jge
in
dec
dec
std
shlb
jecxz
jecxz
jecxz
inc
xchg
lret
mov
in
jbe,pt
mov
je
ret
inc
xor
out
icebp
mov
lea
mov
adc
dec
push
orl
xchg
dec
int3
fidivs
shr
push
mov
sub
push
lea
xor
jo
pop
xchg
adcl
insl
mov
stos
mov
jle
dec
fwait
or
shrb
fucom
into
xchg
push
mov
mov
pop
jl
jge
add
adc
repnz
dec
adc
arpl
lds
push
jns
inc
adc
and
mov
xor
fsts
mov
adcl
adc
mov
dec
adc
addl
xlat
push
or
xlat
fistps
popa
sub
pusha
xor
mov
push
xor
inc
mov
lds
mov
mov
into
imulb
and
loopne
push
cld
sti
adc
sbb
pushf
gs
dec
jmp
cmp
inc
adc
pushf
fdivrl
js
ret
fcompl
shlb
sbb
lea
jae
jp
inc
mov
push
test
xchg
les
dec
mov
les
inc
jb
adc
scas
and
bound
inc
mov
clc
inc
icebp
pop
dec
in
insl
bound
iret
in
cmc
repnz
aad
popa
cmpsb
and
cmpsl
repnz
adc
rcrb
pusha
pushf
mov
lock
dec
mov
pop
xor
and
stos
les
or
cmc
cltd
scas
arpl
movsl
and
push
insl
sbb
rol
inc
push
or
push
jae
mov
mov
push
stc
int3
jne
std
push
jno
and
adcl
sub
js
inc
jnp
mov
cld
ds
pop
inc
mov
pop
xor
mov
ret
xor
fwait
aaa
mov
sbb
icebp
loope
cli
push
and
shll
dec
std
sub
dec
pop
ffree
rcrl
scas
ficomps
mov
mov
xor
fists
mov
movsb
push
xor
dec
fldl2t
ss
movsl
push
into
xchg
out
jl
sbb
push
lds
dec
mov
std
or
and
int
push
mov
out
cltd
cwtl
mov
push
loop
arpl
fists
in
cmp
add
int
in
xlat
enter
dec
sbb
xchg
rorb
cmp
int
add
imul
ss
or
idiv
or
out
call
sub
adc
out
cld
in
call
jno
and
mov
pop
lea
add
imul
push
loop
aam
scas
in
dec
je
mov
xchg
scas
out
mov
mov
imul
pop
xor
and
sti
pop
pop
sbb
jne
add
cmpsb
sub
cmp
pop
add
imul
mov
sub
sub
in
pop
int3
mov
ds
xor
push
gs
mov
aad
push
pop
push
push
movsb
pop
cmp
sbb
in
cmp
pop
lahf
mov
es
repz
stos
jno
sbb
in
sbb
mov
sub
insb
jmp
lret
xor
mov
sbb
arpl
fs
mov
lret
dec
and
mov
sbb
dec
dec
packssdw
jge
sbb
out
rorl
iret
xor
jne
xchg
out
ljmp
push
adc
cmpb
loope
jnp
jae
and
fnstenv
mov
hlt
outsl
or
hlt
dec
and
inc
cmc
mov
adc
jmp
jbe,pn
xchg
ss
sub
es
inc
clc
push
aad
outsl
inc
xor
inc
and
cmp
push
test
test
int
dec
jecxz
mov
sub
mov
push
mov
lds
test
xchg
pop
adc
mov
push
cmp
arpl
pusha
fs
mov
or
dec
out
lret
cmp
call
sub
out
icebp
adcl
sbb
dec
adc
std
pop
fucom
iret
scas
sub
mov
push
aam
int3
adc
xchg
or
cld
fwait
inc
mov
enter
mov
pusha
gs
mov
sub
pusha
push
inc
int
es
dec
inc
addr16
pop
mov
popf
enter
mov
adc
mov
fs
dec
rclb
test
insl
mov
stc
sbb
xchg
dec
jle
xchg
sbb
push
xor
push
pop
lds
stc
fcompl
imul
inc
mov
mov
in
outsl
sub
gs
lret
add
and
or
insb
dec
add
or
fdivr
out
loop
sub
lcall
dec
fmuls
mov
outsl
push
sahf
sbb
ds
ret
test
add
loopne
arpl
pusha
mov
pop
out
out
lds
mov
push
rcl
jmp
sti
xchg
adc
pop
in
scas
out
pop
lods
dec
rcrb
jp
dec
add
push
das
mov
das
mov
jo
push
fdivs
imul
pop
or
jp
aas
pop
les
loope
rorb
sbb
lret
aaa
lret
and
loope
inc
push
push
paddd
out
sahf
gs
rol
sti
les
aam
out
cs
inc
lods
pop
pop
or
pop
cmp
lods
in
arpl
adc
push
cld
and
movsb
xchg
arpl
push
shll
arpl
pop
scas
and
jmp
shr
fdivs
lods
mov
pop
into
rorl
add
frstpm(287
xlat
adc
dec
loope
out
or
lahf
clc
or
test
jno
cmp
pop
nop
mov
fs
sub
mov
lea
push
lea
in
jecxz
ret
or
faddl
sbb
ss
test
add
sbb
jg
popa
mov
xchg
xchg
imul
js
cmp
insb
jp
mov
out
repz
pop
inc
in
ds
sub
aam
add
loope
pop
xchg
pop
dec
jg
adc
sub
sbbb
jle
sbb
mov
icebp
sub
xor
mov
mov
es
lock
subl
xor
ds
and
sbb
mov
push
dec
jp
fnstsw
push
pusha
hlt
mov
dec
fwait
jp
aas
aam
push
cmc
jle
outsb
mov
sbb
dec
lds
out
jg
dec
jge
lds
mov
insl
test
out
push
xchg
les
inc
and
push
inc
movsb
mov
jl
test
in
xor
and
shl
inc
xchg
xor
sbb
pop
sub
scas
jns
aaa
cmp
mov
dec
adc
test
iret
dec
jns
loope
sub
hlt
cmp
test
xor
lods
push
bound
mov
in
ja
cld
test
cmpsl
out
mov
push
fistl
adc
or
adc
mov
into
out
repnz
je
xor
sbb
jae
mov
xchg
addb
in
dec
cwtl
jle
je
out
mov
sub
scas
clc
mov
mul
stc
cmpsl
fwait
push
add
sbb
out
test
mov
test
aad
xchg
jb
inc
leave
cmp
xlat
jmp
out
sahf
xchg
adc
aad
mov
mov
mov
jp
test
inc
imul
call
lcall
dec
push
aam
mov
and
pop
in
jle
int
test
ret
mov
roll
jl
idivb
xchg
sbb
clc
insl
dec
mov
inc
rcl
outsb
adcl
stc
pushf
insl
out
sbb
ds
stc
and
sbb
lahf
test
xchg
movl
jecxz
enter
insl
mov
mov
xchg
pop
addr16
mov
sbbl
cltd
mov
dec
call
push
pop
fs
mov
test
lcall
shr
xor
sahf
add
aaa
ret
sub
xor
push
arpl
enter
insl
dec
add
je
add
pop
mov
aam
test
stos
insb
cmpsl
add
in
add
out
rcrb
inc
mov
pop
cmc
mov
add
add
mov
push
jl
movsl
clc
cli
inc
mov
and
pop
mov
mov
jecxz
aaa
enter
daa
pop
jnp
cwtd
xchg
inc
pop
jecxz
sbb
push
and
sub
xchg
mov
adc
test
icebp
xor
rcrl
pushf
ret
xchg
xchg
lret
int
mov
mov
jae
sahf
and
out
and
ds
out
stc
rcrl
sbb
sahf
mov
orb
test
shl
push
in
inc
sbb
std
mov
stc
notl
sub
sbb
mov
pop
add
rolb
cmp
sbbl
data16
data16
cmp
lret
push
mov
out
dec
mov
das
mov
ret
ret
or
sub
push
ret
sub
test
cmp
mov
add
adc
adc
sub
jmp
add
jl
mov
mov
jg
aam
push
call
add
mov
fs
or
and
add
push
movsl
sub
mov
mov
or
xor
mov
fdivs
rol
push
daa
popa
fistl
mov
outsl
or
out
inc
pop
pop
adc
fscale
or
fs
int
adc
inc
loope
adcb
or
inc
lods
sub
pop
stc
daa
andb
ret
jo
jno
sub
out
pop
lret
mov
pop
jbe
sub
insl
push
aaa
sbb
fisubl
push
xchg
scas
je
mov
push
cmp
mov
jmp
cs
xor
jecxz
sub
push
dec
or
jae
cmpl
mov
mov
gs
cmp
jbe
fsubrs
and
inc
adc
int
pop
insb
roll
mov
loop
imull
and
rcl
push
xor
dec
test
jle
insb
add
mov
dec
stc
rorl
fcoml
nop
loopne
inc
out
xchg
fdiv
ret
xor
pop
lods
nop
jno
jb
rorb
jge
clc
jg
xchg
mov
jp
xor
out
cmp
call
xor
out
pop
xor
std
dec
scas
pusha
add
pop
xchg
sbb
mov
icebp
adc
ds
in
mov
jbe
mov
lahf
aam
test
push
frstor
div
xorl
cs
movsl
xor
aad
cmp
std
inc
cmpsl
xchg
adc
loop
or
push
cmp
into
or
sahf
mov
mov
mov
shr
outsl
ljmp
jecxz
push
dec
xor
icebp
lahf
cmp
jl
inc
stos
add
push
loopne
push
push
icebp
jl
pop
push
lret
xchg
inc
out
mov
adc
mov
outsl
shr
adc
arpl
cmp
movsl
and
cwtl
or
aad
movsl
jge
mov
pushf
test
stos
pop
in
pop
xlat
ss
fistpll
ret
push
or
call
xor
push
add
mov
fisttps
cmp
add
std
sbbb
lea
cmpsl
pop
pop
mov
scas
shlb
mov
imul
cmp
jl
xchg
shr
add
adc
sub
inc
mov
adc
outsl
leave
jae
pop
mov
lcall
dec
ficoml
push
insb
xchg
iret
lret
das
stos
popl
popa
pop
orb
fcmovne
jns
sub
dec
mov
push
ficoml
push
insb
xchg
iret
lret
addl
rolb
inc
xor
lock
mov
adc
jno
push
test
adc
gs
dec
out
adc
xchg
mov
dec
mov
test
xchg
pop
fs
out
jbe
test
mov
scas
ds
jl
sub
mov
test
fdivrl
dec
in
inc
stos
dec
mov
iret
or
ss
dec
fsubrl
scas
lcall
test
pop
add
in
nop
sbb
and
pusha
dec
stos
xchg
mov
mov
outsl
xchg
and
fcmovnbe
out
and
inc
cli
inc
dec
pop
add
roll
lock
inc
xchg
xchg
xor
mov
hlt
out
aam
ret
int3
add
cmc
xor
or
mov
xchg
pcmpgtb
inc
mov
scas
and
mov
inc
add
popl
pop
dec
out
pop
repz
jae
xchg
hlt
cmpsl
and
mov
push
mov
imul
lods
jo
adc
movsl
push
stos
std
add
adc
mov
popa
adc
pop
adc
push
xchg
out
add
cmp
daa
push
mov
clc
mov
out
cmp
fdiv
mov
mov
aam
cmpsl
and
shll
sbb
cmp
movmskps
xor
inc
push
iretw
insl
sbb
mov
rcrb
cmc
mov
sbb
mov
dec
fdivr
mov
xchg
mov
jns
push
insb
cmp
mov
mov
fdivr
out
ja
sbb
inc
pop
cli
or
jp,pn
push
add
cmp
add
xlat
andl
lock
jns
mov
stos
dec
gs
pop
and
push
sbb
or
into
cli
push
jl
nop
add
push
push
jp
sahf
cld
popf
xchg
fdivrs
mov
add
inc
ret
test
call
enter
ds
inc
mov
inc
ja
xchg
out
loop
bound
and
test
xlat
mov
cmp
add
mov
fildl
push
aas
dec
in
dec
das
inc
idivb
sbb
xchg
lods
mov
sub
cld
dec
lahf
lods
jb
andl
call
or
shrb
sub
push
leave
adc
mov
sarb
shlb
adc
mov
xor
std
sub
or
push
sub
je
xor
pop
mov
fs
int
add
jnp
add
dec
add
lcall
out
add
dec
push
mov
into
mov
les
pusha
fwait
pop
lods
jle
stc
mov
jg
add
adc
ret
into
inc
mov
std
pop
jae
cld
lea
and
pop
mov
mov
mov
pop
fcmovb
jmp
xchg
and
in
inc
lea
pop
stos
xlat
fcoms
xchg
rcll
popf
mov
int
imul
lds
push
cs
pop
sub
pop
sub
lcall
jecxz
or
push
imul
push
mov
add
sarb
cwtl
push
lds
rcrl
xor
jmp
insl
lods
xlat
outsl
push
mov
or
orb
cmpsl
mov
push
pusha
push
and
push
addr16
loop
xor
dec
cli
jl,pn
inc
inc
jo
pusha
sub
out
loope
inc
sbb
push
icebp
bound
push
in
mov
sbb
cmp
pop
jno
mov
adc
lds
dec
mov
sbb
add
shlb
out
add
int
ja
ret
out
test
in
inc
scas
mov
lret
or
hlt
jmp
mov
jbe
call
mov
mov
out
jno
cmp
jb
mov
push
jle
mov
pop
push
mov
dec
aas
pop
and
lea
aas
cld
movsb
mov
inc
pop
in
mov
xchg
jg
mov
inc
aam
pop
fimull
outsl
aas
inc
pop
push
lcall
mov
cltd
aam
insb
sub
cli
sub
call
or
dec
cmpsl
dec
in
loopne
in
sahf
mov
sub
sahf
add
ds
movsb
jbe
cmp
cs
jns
je
out
push
lock
cmp
loopne
dec
stc
jae
icebp
xor
inc
pop
ret
xchg
je
ret
insb
pop
or
aad
mov
int3
cmpsl
imul
decb
cltd
inc
adc
mov
or
jno
dec
movsb
fdivl
jge
mov
pop
lods
mov
pop
add
cli
pop
fnsave
xor
mov
jo
push
fidivl
mov
fwait
sub
rolb
jno
subb
pop
fsts
xchg
pop
pop
sbb
xor
mov
adc
cmp
in
mov
imul
fiaddl
lret
movsl
or
call
xor
out
inc
xor
inc
cmpl
dec
mov
xchg
xor
xchg
popf
push
lock
add
sbb
mov
xchg
movsb
sbb
in
mov
xchg
fistpll
pop
sar
ror
stos
pusha
out
dec
cwtl
xchg
aad
loop
test
xlat
jg
jb
mov
adc
jne
in
or
sub
fbstp
pop
and
fisttps
daa
outsb
xor
lock
movsb
loopne
dec
jb
add
or
and
imull
sbb
lret
mull
popa
ret
mov
test
clc
and
stos
mov
jae
push
cmp
adc
insb
xchg
mov
je
xor
cli
xchg
mov
jl
fcompl
cmp
imul
iret
pop
xor
mov
mov
xchg
cs
or
shlb
push
inc
sbb
dec
popa
sub
xlat
push
adc
push
mov
out
mov
outsl
jg
fwait
mov
pop
enter
jae
mov
out
jae
rcrb
dec
neg
jge
push
loopne
xor
inc
test
and
out
push
pop
push
mov
repnz
icebp
fstpl
pop
hlt
xor
fs
mov
aaa
pop
mov
mov
js
dec
ljmp
mov
pop
or
pop
add
dec
je
cs
adc
in
mov
cmp
mov
and
ds
mov
lods
out
orl
pusha
pop
mov
push
sub
ja
and
jg
aas
jge
loop
je
out
cmp
je
in
push
shl
mov
jne
mov
test
ljmp
cmp
repnz
das
add
adc
call
or
adc
test
xor
sub
sub
jb
movl
xchg
jns
stos
xlat
fistpll
aas
lds
cmpsl
aaa
sbb
mov
ss
es
mov
call
movsl
push
pop
ret
pop
or
sbb
pusha
std
sbb
cli
mov
inc
lea
mov
push
andl
xor
in
mov
xor
pop
mov
std
sbb
repz
outsl
and
xchg
push
jae
scas
sbb
inc
aas
add
mov
scas
inc
mov
jp
stos
cmp
jno
sbb
call
jmp
mov
xchg
push
rcrb
or
dec
mov
push
aaa
fldcw
mov
aas
lods
inc
xor
loope
jl
pusha
test
roll
jno
pop
mov
xchg
repz
sub
mov
cwtl
sbbb
nop
mov
pop
sub
and
sub
aam
test
fs
jmp
gs
test
ljmp
addr16
mov
lds
dec
jmp
pop
mov
les
mov
or
aad
jbe
or
ret
adc
orb
adc
jl
cmpsb
jb
cmp
loope
shr
push
mov
lods
ss
fcompl
dec
sbb
push
jmp
sbb
loop
or
mov
test
sub
not
push
repz
nop
pop
cmp
fists
sub
dec
repz
jmp
dec
xchg
add
lret
lcall
xor
pop
add
ja
xor
jge
mov
adc
fsubs
cltd
cmp
stc
push
mov
aam
popa
xchg
and
xchg
loope
cmp
insb
adc
pop
dec
lret
mov
out
jbe
orb
mov
cmpsl
sbb
into
fwait
xchg
call
mov
xlat
and
test
daa
cltd
dec
sbb
and
adc
mov
pop
rclb
or
stos
or
into
daa
sahf
or
xchg
loop
in
inc
sti
jmp
ds
jmp
sbb
fisttpl
pop
clc
push
cld
jb
jp
cmp
push
adc
and
lods
lods
mov
mov
lea
das
loope
and
shl
jb
daa
ret
ljmp
dec
adc
gs
mov
fwait
jnp
les
repz
sub
lret
cmpsb
adc
stos
cmpsl
jmp
adc
lahf
std
stos
test
inc
sub
mov
inc
add
ret
subl
fs
into
push
dec
push
fidivrl
nop
enter
cmp
ftst
mov
fistpl
inc
cmp
xor
orl
xchg
repnz
loope
add
imul
out
jl
fisubl
pop
pop
pop
mov
jg
push
cmp
pop
bnd
jecxz,pn
popf
aad
popf
loop
jo
pop
mov
js
pop
add
cmp
rcll
pop
jo
arpl
out
lds
ret
mov
cmp
xor
jecxz
pop
inc
inc
nop
mov
mov
dec
mov
xchg
cmp
insl
push
lcall
psrlw
dec
adc
lret
mov
cvtpi2ps
outsl
xor
je
sub
aad
push
cmp
push
les
push
rorl
xor
cmpsb
pop
fisubrl
cmc
test
cld
sub
cmp
sub
sbb
and
lods
in
and
mov
adc
scas
pop
div
mov
test
aaa
push
je
imul
dec
sub
push
lahf
xor
jle
sbb
mov
int3
out
mov
mov
popl
inc
or
dec
mov
mov
stc
psubsb
cmp
sub
xor
and
imul
and
jno
insb
sbb
cmp
inc
mov
cmp
lret
cmpsl
in
push
in
cmp
lds
mov
dec
xchg
push
fisubl
cmpsl
icebp
into
mov
push
push
jp
mov
movsb
daa
adc
or
lcall
xchg
arpl
iret
imul
xchg
or
ljmp
lret
scas
out
dec
mov
dec
shl
mov
xor
aad
out
push
sahf
add
lods
sbb
xor
stos
mov
js
add
sub
decl
xor
xchg
xor
lds
mov
ret
inc
movsl
jl
enter
int
lods
fists
pop
sahf
cmp
sbb
cmp
popf
fcmove
push
mov
or
push
iret
fsubs
inc
ja
out
enter
vphaddubd
xchg
popf
les
test
dec
into
lods
int
popf
ret
inc
xchg
jns
imul
sbb
mov
jge
subb
mov
dec
push
out
xchg
adc
pop
clc
xchg
sti
into
dec
enter
movsl
jbe
arpl
adc
jno
xchg
stos
sbb
pop
cmpsb
push
ret
mov
mov
icebp
and
jp
sbb
clc
punpcklbw
pop
push
inc
xchg
in
and
xor
sti
xlat
in
fdiv
inc
leave
lods
push
push
push
and
lds
cli
push
push
ds
ret
cmpsl
adc
cmp
inc
and
pushf
or
ret
cwtl
xchg
cli
adc
cmp
rcrl
imull
pop
push
jno
pop
iret
std
mov
and
lea
in
sub
in
daa
jne
in
je
xorl
es
sbb
adcl
stc
in
mov
js
pusha
xchg
fisttpll
lock
mov
pop
mov
bound
or
shlb
push
dec
leave
lret
sbb
sub
xor
xor
dec
cli
push
out
dec
xchg
scas
cmpsb
test
dec
push
push
pop
and
fwait
mov
add
insb
add
popa
aad
aas
movsb
pop
stos
mov
cltd
and
aas
scas
mov
out
and
ss
test
push
mov
xchg
popf
adc
add
xor
mov
lods
or
push
shll
shrd
mov
push
rcll
es
pop
ds
lcall
xchg
and
push
jno
xor
inc
push
pop
cmp
movsl
cltd
mov
push
mov
mov
cli
dec
mov
sbb
mov
daa
or
lds
cmp
cld
pop
push
dec
fsubrl
out
or
jle
xchg
test
out
dec
mov
dec
dec
xor
inc
inc
loope
push
cmc
sbb
cmp
push
repnz
pushf
adc
jne
cld
popl
dec
ret
push
repz
mov
roll
test
std
and
pusha
mov
dec
ljmp
xchg
lcall
dec
repz
testb
jns,pt
and
inc
cmp
mov
ljmp
adc
ja
clc
test
negb
sar
lock
lock
andl
arpl
das
cld
mov
or
popf
aaa
loope
popf
test
jbe
cmp
xor
mov
ret
sbb
dec
mov
movsb
sub
je
in
fldt
lahf
repz
add
int
jns
mov
add
mov
adc
pop
xchg
cmc
movsb
mov
ljmp
outsl
imul
xchg
jne
roll
xor
dec
stos
sub
jno
sbb
cmp
cmp
aad
xchg
out
arpl
scas
int
in
aas
mov
dec
repz
jmp
ja
popa
sbb
pop
sbb
mov
insb
mov
test
mov
daa
fst
xor
sbb
les
xchg
mov
fldcw
lret
outsl
insl
jne
and
jne
push
in
ret
xchg
nop
popf
test
pushf
sub
fstpt
cmpsl
mov
out
sbb
cmp
jmp
rol
fbstp
rcr
jae
jmp
add
mov
mov
or
or
push
and
int3
add
dec
pop
test
pop
in
xor
cs
dec
jg
inc
add
fistpll
fucomip
std
or
imul
ljmp
sub
pop
cli
lock
fistpll
ficompl
pop
or
add
cmp
cmp
test
dec
pop
lcall
pop
mov
lret
aam
cmp
ds
mov
out
fyl2x
cmp
test
push
pop
loop
lret
dec
aam
sbb
shlb
movsl
add
in
jmp
pop
inc
jl
scas
mov
jae
out
faddl
aaa
sbb
movsl
pop
enter
repnz
xchg
inc
pop
push
loope
xchg
lods
lret
sbb
adc
outsb
inc
dec
les
and
lods
scas
and
lock
xchg
jnp
imul
je
rcrl
cmpsl
lock
nop
and
xor
xchg
shlb
ret
cmp
push
insl
mov
lret
mov
add
mov
cmpsb
popa
lahf
and
lcall
xor
xor
fwait
shll
les
data16
pop
movsb
jnp
xchg
stc
cmp
push
adc
mull
out
addr16
out
movb
rcrl
aaa
mov
out
dec
cmp
ja
mov
popa
aad
mov
int3
shrb
jp
test
aam
movsb
call
inc
nop
add
jmp
mov
add
lods
jle
lods
sbb
and
shrb
mov
fldpi
icebp
and
std
gs
xchg
lods
sbb
cmp
rolb
xchg
hlt
imul
pop
incb
jg
xchg
insl
add
dec
fucomip
mov
and
or
jmp
pop
inc
push
popa
jg
and
inc
and
enter
enter
insl
rcrb
loopne
sti
icebp
test
test
dec
fldt
loop
out
mov
lret
push
adc
loop
sub
push
xchg
jecxz
add
sub
cmp
add
add
fwait
popa
cmp
mov
rclb
push
mov
sub
iret
dec
into
fiaddl
out
xor
cld
into
popa
insb
and
enter
xor
rcrl
or
xor
sbb
pop
adc
jne
xchg
outsl
ljmp
les
ja
mov
push
xchg
cltd
mov
dec
shl
cmp
shl
pop
pop
inc
lods
stos
jge
dec
xor
mov
arpl
sti
pop
xchg
xchg
hlt
bound
mov
pop
push
add
dec
addr16
movsl
dec
icebp
pop
jnp
jns
xor
xor
test
aas
inc
inc
pushf
pop
idivl
cmp
in
xlat
hlt
shlb
in
insb
jae
dec
or
cs
cmpsl
call
fs
xor
call
cmp
lods
lds
sbb
dec
jle
sbb
loop
rcrl
ljmp
enter
ret
and
into
fwait
xchg
jo
push
or
mov
ja
jnp
scas
and
push
xor
lret
dec
or
mov
shrb
sub
mov
mov
leave
outsl
cmp
addr16
pushf
xor
fnsave
ret
rcrb
sub
cmpsb
xchg
push
jmp
sbb
mov
ficomps
loope
loopne
jno
cmp
in
inc
lea
xor
out
rolb
popl
fnstsw
or
lret
jno
adc
push
pop
pusha
js
add
mov
in
dec
cmp
and
adc
mov
out
mov
fidivl
int3
rorb
add
lds
and
xor
push
push
les
cmp
xor
rcrb
jae
test
xlat
popf
xlat
leave
xor
inc
xchg
leave
shll
shlb
leave
add
fdivs
in
popl
xchg
lret
fdivl
push
out
xchg
cmpsb
insb
fimuls
bound
mov
push
xor
jne
and
mov
sar
inc
or
fisttps
bnd
push
sbb
xchg
cltd
fwait
mov
int
xchg
js
and
dec
popf
pop
and
xchg
loope
iret
ret
mov
mov
es
fstl
xor
cmp
imul
mov
add
sbb
cmpl
sbb
or
or
stos
sahf
call
inc
stos
add
lods
roll
mov
pop
repz
int
je
push
mov
in
fiaddl
jb
aad
psllq
addr16
lock
test
aad
push
leave
lods
pushf
xchg
in
inc
add
sbb
sbb
inc
repnz
stos
in
mov
scas
les
enter
or
adc
sbb
test
and
bnd
mov
sub
or
loope
xor
mov
dec
loop
popa
loop
jp
dec
jecxz
jo
outsl
dec
sub
cmp
nop
pop
sbb
mov
jl
pushf
mov
frstor
jo
fcom
ret
cs
and
out
dec
jne
iret
xchg
add
les
jmp
stc
xor
scas
loop
cmpsl
out
inc
jp
incl
mov
lahf
xor
adc
push
xchg
mov
sti
fildll
sarl
test
jmp
icebp
xchg
or
mov
mov
jns
and
roll
push
inc
enter
add
test
xor
xchg
in
test
ret
test
sbb
les
lods
loope
rcl
inc
aam
and
jmp
ds
lea
int3
push
psubsb
icebp
mov
into
cmc
aaa
jp
mov
xchg
mov
sbb
icebp
mov
dec
out
movsb
in
hlt
decb
adc
outsb
lods
mov
inc
fdivrl
inc
test
mov
loope
and
cld
movsb
subb
movsb
imul
or
shlb
push
push
push
xor
pop
jns
loopne
rcll
inc
outsl
sub
les
jne
mov
test
bound
iret
fs
inc
bound
fs
std
mov
or
imul
notb
or
cltd
push
ffreep
enter
or
or
xor
rcrb
test
leave
mov
sbb
or
pop
push
cs
push
jle
mov
roll
pop
lods
in
mov
inc
mov
pop
sahf
lret
lea
mov
cmp
adc
arpl
lcall
push
in
mov
test
push
lods
mov
jp
dec
sub
push
xchg
lcall
rolb
mov
pop
xor
xor
out
sbb
aas
inc
pop
xor
fsts
sub
or
aam
sbb
inc
pushf
lret
pop
mov
aaa
mov
and
jecxz
pop
mov
lds
out
sbb
adc
aaa
add
xchg
mov
aas
xor
xchg
jns
clc
test
insb
arpl
sub
mov
dec
and
mov
clc
lods
pop
dec
mov
mov
sub
testb
sbb
jae
push
enter
leave
arpl
lock
mov
mov
push
fs
mov
sub
dec
test
fstl
adc
pop
sarb
mov
pop
enter
xchg
hlt
ret
push
pop
jns
xchg
aam
mov
fistpl
outsb
mov
mov
lret
pop
mov
aaa
mov
pop
addr16
in
add
adcl
loop
dec
std
es
jp
lahf
sarl
sub
js
pop
push
out
and
out
jae
test
fwait
rcrb
add
aaa
jle
sbb
sub
ret
push
dec
jmp
gs
cli
mov
in
sahf
je
push
add
push
push
pusha
inc
dec
adc
mov
pusha
jno
jno
nop
fmul
sbb
fwait
psubw
adc
xchg
jno
movsb
stos
pop
sbb
shll
es
sub
and
push
cmovbe
cmp
lret
test
mov
mov
shrb
insl
cwtl
cmpsl
outsb
pop
sbb
mov
mov
mov
or
xor
loopne
lcall
push
jo
ret
mov
in
mov
dec
xor
jbe
mov
rorb
inc
and
ficomps
cltd
cli
repz
test
jbe
lcall
add
pop
sub
mov
mov
addr16
sbb
shrb
and
pop
sahf
lret
pushl
xchg
stos
dec
out
insb
or
push
inc
popl
loope
and
lret
mov
sahf
mov
dec
mov
cmp
push
rcl
sub
testb
stc
lahf
loope
fimull
popf
pop
mov
cmp
popa
add
movsl
xor
mov
enter
cltd
sbb
cmpsl
rcl
sti
mov
int
sub
stos
jmp
xor
icebp
fbld
mov
add
sub
xchg
add
imul
rcl
ret
push
jbe
and
mov
pop
pop
pusha
inc
mov
xchg
xchg
push
loopne
adc
jnp
jp
icebp
iret
push
lods
cld
sub
push
xchg
dec
xor
addr16
sbb
sub
sub
mov
cmc
jnp
test
push
add
lret
add
cs
fcoml
add
addr16
shll
xchg
test
jecxz
mov
loop
enter
pop
add
sbb
inc
and
cmp
repz
fstps
int
dec
ror
out
and
aad
push
in
xor
sub
adcl
test
jo
mov
fldenv
das
mov
mov
pop
mov
test
add
cld
xchg
jl
add
push
mov
jae
sti
pop
mov
mov
fmulp
jne
std
inc
mov
ret
push
fstpt
ret
xchg
inc
pop
fstps
adc
push
xchg
fwait
data16
push
xlat
test
inc
pop
xchg
mov
add
int
sbb
mov
xor
sbb
add
bound
imul
lcall
loop
xor
bound
addr16
scas
jne
sbb
int3
xlat
mov
dec
inc
jo
popl
push
cmpsb
je
jnp
mov
or
out
cmc
inc
popa
push
mov
xor
mov
inc
jg
adc
and
inc
push
sub
sub
dec
sti
cmp
sbbb
cmp
outsb
into
mov
mov
cmc
addb
inc
jle
adc
push
inc
pusha
adc
push
mov
cli
les
es
add
rcrl
adc
mov
push
fidivl
int3
ror
xor
testb
les
pop
andb
jns
sarl
fsubs
fs
inc
mov
sahf
and
xchg
inc
adc
mov
and
rorl
scas
sub
xchg
mov
mov
loope
fmull
xlat
xchg
mov
out
cmp
bswap
outsl
pop
cmp
push
out
stos
ljmp
sub
ljmp
mov
lea
mov
orl
mov
push
stc
int3
lea
jle
aaa
out
test
or
xchg
sbb
xchg
pop
inc
xchg
scas
add
cld
fldz
xchg
push
in
xchg
mov
adc
or
cwtl
push
cs
sub
xor
mov
xor
mov
int3
addr16
xchg
imul
inc
fnsave
jnp
cli
movsb
push
push
mov
xor
mov
popf
bswap
mov
fdivr
xor
and
cmp
jg
hlt
call
dec
adc
dec
std
xchg
outsl
js
sub
mov
stos
test
dec
cmc
inc
cli
xchg
xchg
xchg
inc
pusha
adc
repnz
xor
inc
inc
lahf
pop
inc
push
sub
mov
xor
inc
divb
aaa
pop
inc
cmpsl
testl
dec
and
adcl
ja
cmp
stos
sbb
mov
call
jge
in
outsb
cwtl
gs
xor
aad
fsubrp
andb
mov
mov
leave
subb
loopne
sub
dec
lret
nop
cmpsb
pop
mov
push
inc
pop
int
inc
out
lret
scas
or
mov
mov
push
ss
jns
pop
call
dec
leave
ss
add
arpl
ljmp
mov
dec
pop
iret
push
and
xlat
shlb
inc
mov
pop
mov
cmp
xchg
mov
pop
es
insl
js
push
roll
jbe
sbb
das
sbb
jo
cmpsb
iret
jge
push
adc
enter
mov
or
inc
sbb
xor
fistl
lds
and
xchg
cli
outsl
cmp
and
cli
push
mov
xchg
faddp
loope
loopne
inc
xchg
popa
jae
ret
pop
dec
xor
xor
ret
sbb
imul
fdivrl
cltd
or
in
arpl
setp
stos
jnp
out
xchg
sub
int3
lock
loope
adc
and
adc
push
xlat
out
mov
popf
and
lods
push
jb
cmp
add
iret
in
imul
pop
imulb
dec
xchg
sbb
cmp
adc
dec
popf
mov
push
or
push
bound
test
push
cs
idiv
dec
sarb
push
inc
jg
or
sub
xchg
test
stc
and
xchg
lret
jo
pop
jl
xor
fs
inc
xor
inc
jg
ljmp
in
shrl
imul
fsub
inc
bound
mov
mov
pop
mov
inc
subb
mov
push
sarl
imul
jno
sti
xor
inc
out
jp
inc
push
sub
xchg
test
xchg
xor
popf
int
mov
ja
lret
xor
jecxz
mov
pop
mov
adc
xchg
adc
mov
adc
icebp
lock
int3
imul
aaa
jle
lods
cmpsl
cmp
xor
xor
pop
jno
mov
mov
data16
sti
frndint
lret
mov
enter
cmp
or
lret
cmpsb
jo
mov
xor
int
ljmp
xchg
aas
inc
push
fdivrs
sbb
je
cmp
arpl
fistps
jae
shll
mov
pop
mov
ds
sub
lret
push
int3
pusha
lret
adc
sbb
fidivl
or
cwtl
nop
les
push
mov
test
mov
cmpsb
add
fisttpll
dec
into
leave
jp
mov
mov
or
movb
out
fstl
or
xor
and
push
xor
xor
and
mov
jle
stc
push
mov
icebp
sub
push
aam
stc
adc
xor
outsl
enter
pop
lahf
sbb
je
inc
mov
adc
inc
sub
out
jae
mov
hlt
jge
push
dec
ret
mov
inc
pop
das
mov
mov
dec
add
shrb
outsl
or
cmp
or
fld
add
cmp
push
idivb
xor
pusha
cmp
inc
outsb
pop
xor
cmp
jp
popa
dec
sbb
hlt
aad
adc
jecxz
inc
call
add
add
mov
ljmp
jp
lahf
push
int
mul
das
ret
adc
loop
mov
mov
cmc
adc
mov
adc
out
adc
mov
jnp
imul
xor
xchg
dec
xor
data16
negb
cmp
aad
pusha
test
imul
outsl
xchg
inc
or
dec
gs
out
xchg
jnp
cltd
pop
aaa
push
inc
cmc
inc
xchg
ljmp
and
in
add
ret
mov
lcall
nop
mov
outsb
cld
jmp
lods
enter
cwtl
in
sbb
push
pop
out
imull
imul
stc
sbb
loope
adc
lahf
cmp
cmp
int3
lahf
add
into
xchg
xchg
cmp
jp
or
enter
popf
inc
push
outsb
mov
cli
insl
addr16
mov
cwtl
xchg
je
mov
mov
mov
and
lods
out
adc
jecxz
mov
dec
aam
mov
in
sbb
or
stos
mov
mov
inc
push
and
dec
and
and
test
lock
les
xchg
ss
faddl
out
in
call
jne
adc
cld
lahf
push
inc
jmp
mov
iret
cmp
repnz
stos
aas
es
cmc
fmuls
jbe
pop
xor
add
cltd
push
pusha
xchg
mov
pop
stos
dec
cltd
push
aas
adc
stos
cmp
scas
mov
in
or
and
xchg
shl
mov
push
dec
notb
mov
nop
xchg
xchg
sub
mov
lods
inc
lret
inc
jg
dec
push
inc
inc
loopne
imul
or
mov
xchg
test
dec
dec
mov
adc
nop
clc
jmp
or
inc
js
imul
and
push
xchg
dec
movsl
jae
push
lods
aas
jnp
dec
jb
mov
pusha
jmp
mov
xchg
enter
nop
and
in
std
negb
stos
stos
xor
in
int3
mov
xchg
and
data16
lcall
sbb
jno
ret
shr
dec
jmp
gs
mov
pop
mov
outsl
sbb
xchg
mov
frstor
pop
in
fiaddl
xchg
dec
fmull
or
sub
das
dec
cmovne
xchg
adc
aam
cs
and
mov
dec
lret
cmpsl
incl
test
cltd
jmp
sub
or
xchg
es
lret
je
mov
cli
xchg
sub
inc
lcall
stc
lock
mov
cmc
jmp
mov
jnp
in
into
and
jge
cmp
lds
aas
ret
scas
in
cmovl
xor
sbb
cmc
xor
jecxz
xchg
jl
ficompl
adc
push
scas
jo
sarb
sbb
push
call
cltd
xchg
mov
popf
fucomi
shrl
daa
and
mov
dec
clc
cld
imul
orl
add
push
mov
test
jmp
add
pop
cmc
stos
or
mov
rol
add
aad
mov
insl
lods
xor
imul
and
into
cmpb
mov
sub
mov
pop
cmpsb
sbb
es
or
stos
cltd
push
dec
imul
lahf
xorb
add
mov
insl
sbb
dec
adc
test
mov
stos
ja
jp
hlt
mov
ljmp
cmp
imul
roll
fldenv
lea
jno
cmp
push
xor
sub
pop
insl
cli
outsb
addr16
dec
stc
xchg
push
cmpsb
int
mov
orl
ror
and
lock
mov
mov
sbb
bound
orb
fistpl
push
cmpsl
cmp
and
xchg
fildll
roll
pop
or
and
jg
mov
addr16
mov
push
and
pop
mov
cmpsb
loop
sbb
inc
sahf
sbb
lods
xor
sti
in
inc
fwait
mov
js
lds
mov
out
xor
push
dec
inc
adc
xchg
pop
arpl
lahf
push
ljmp
mov
pusha
mov
ljmp
mov
leave
mov
popf
aaa
mov
pop
loop
out
add
push
push
sbb
test
les
shrl
xchg
push
sbb
push
jbe
subps
pusha
cli
inc
pop
add
test
push
jno
mov
shl
call
mov
xorb
ret
orl
mov
shlb
cld
push
mulb
or
inc
mov
nop
dec
cmp
idivb
xor
xor
loope
mov
push
ja
pop
xor
push
mov
jl
xchg
xchg
jo
pop
push
xlat
adc
mov
andb
rcl
xchg
xchg
sbb
mov
cmp
filds
push
adcb
jo
jle
stos
mov
sub
inc
shrb
cmp
add
mov
test
push
aas
fistpll
push
imull
dec
out
fwait
xor
cmp
dec
jecxz
loopne
clc
and
aad
mov
test
repz
ffree
sub
jnp
adc
ja
cwtl
xor
sub
addl
stos
sbb
in
addr16
sub
mov
xchg
inc
fadds
mov
sub
out
leave
shll
push
lods
sbb
in
je
dec
push
cmp
push
pushf
mov
std
lods
push
jl
push
jle
out
sub
ja
out
mov
fimuls
mov
and
insl
nop
xor
adc
sbb
xor
or
or
out
mov
cmc
fisubs
decl
mov
fsubl
add
mov
jecxz
mov
mov
xchg
jg
stos
lods
sbb
test
sbb
movsb
cmp
inc
aaa
mov
lea
std
push
and
sub
cmp
cs
aas
add
jl
cmc
icebp
in
addr16
xchg
imull
cmc
xchg
sti
imulb
aaa
cmc
pop
repz
sbb
xchg
lahf
adc
mov
xchg
add
sbb
pop
and
ljmp
mov
pop
in
xchg
out
ljmp
mov
jb
in
hlt
push
call
jecxz
push
sub
jno
push
dec
dec
push
xlat
out
sahf
add
xchg
cmp
fsubrl
fld1
cmp
fcoml
xor
int
loopne
jb
inc
sbb
pusha
ljmp
repz
outsb
inc
push
clc
fcmovnu
pop
repnz
psadbw
and
loopne
xor
dec
iret
mov
pop
popa
inc
sahf
movsl
test
les
xor
test
out
aad
fadds
data16
xchg
int3
enter
or
sub
imull
fstl
hlt
xor
sbb
push
adc
pusha
popa
imul
fsubs
testl
pushf
mov
mov
jns
push
insb
lahf
add
cmp
push
int
adc
mov
adc
or
push
and
dec
fildl
mov
and
cmp
sbb
add
aas
je
jae
loop
test
imul
lret
hlt
shll
sbb
inc
cmpsb
std
sub
in
ret
pop
pop
mov
out
cs
mov
pushf
repnz
icebp
xchg
fs
in
push
fwait
pop
adc
movsb
jge
jg
adc
cmc
addl
mov
shrb
in
dec
inc
loopne
adc
scas
xor
dec
imul
nop
mov
filds
cs
in
xchg
sbb
mov
outsl
mov
je
out
mov
cmc
mov
dec
mov
call
xchg
mov
movsw
cs
lahf
mov
add
fsts
loope
inc
dec
push
imul
pop
add
pop
sub
cld
jnp
mov
icebp
sbb
fwait
mov
je
mov
jae
loopne
out
iret
add
jb
jle
pminub
lods
cwtl
sub
inc
fildll
rcrb
jo
sub
add
mov
xchg
add
dec
stos
mov
or
mov
addr16
cwtl
inc
cli
cs
cmpsl
mov
jmp
mov
lea
test
sub
mov
dec
mov
shrl
je
jecxz
sub
leave
or
cltd
shll
std
subl
sbb
xchg
adc
jne
pop
mov
jmp
dec
cmp
and
or
mov
xchg
not
jl
pop
lea
stos
inc
xlat
stos
fbld
mov
adc
scas
jp
add
jg
lock
out
mov
xchg
jl
push
jmp
in
mov
inc
pop
dec
or
hlt
push
mov
shrb
fnstenv
out
ja
and
in
push
jmp
add
push
imul
inc
cmp
or
in
jl
loop
xchg
aam
subl
or
insl
pushf
pop
inc
cmp
push
pop
lret
imul
loop
pop
jns
jle
inc
inc
fxam
push
mov
push
xchg
mov
cmp
test
mov
xor
mov
cmp
dec
les
mov
dec
shll
rcrb
push
in
lret
mov
rcrb
lret
ss
dec
test
in
icebp
adc
mov
rcl
enter
bound
shll
pop
sbb
bound
dec
les
pop
cwtl
inc
arpl
adc
jo
ja
xchg
stc
dec
jmp
fprem1
pop
adc
cwtl
arpl
cmp
add
jbe
out
inc
subb
add
shll
sti
add
gs
loopne
or
pop
scas
or
icebp
jg
jmp
lods
adc
adc
cmp
roll
jnp
mov
pop
lods
iret
daa
mov
jo
pusha
dec
mov
pop
dec
gs
in
into
cmp
push
sbb
cmp
icebp
into
out
lods
dec
lods
das
sahf
jae
orl
fstpl
push
jo
xchg
dec
ja
outsb
cmp
cmp
adc
or
dec
push
inc
sub
mov
addr16
arpl
in
adc
lret
mov
lcall
push
shll
or
inc
inc
add
fistpll
fs
in
nopl
add
mov
or
das
lret
enter
ja
xchg
mov
lcall
sub
jnp
pop
negb
enter
fdivl
clc
or
cmpsb
sahf
aam
mov
mov
movsl
dec
ljmp
or
bound
mov
shl
mov
xor
sti
xsha1
cmpsb
into
jo
push
push
pop
mov
inc
mov
fbld
add
sti
nop
roll
pop
mov
pop
fs
push
andb
cmp
nop
ret
push
dec
data16
hlt
xor
xlat
mov
leave
lcall
xorb
bswap
outsl
xor
popa
iret
pop
psadbw
push
das
shl
mov
mov
into
js
stos
pop
outsl
mov
outsl
adc
in
mov
mov
push
pop
sub
nop
scas
jle
iret
inc
pop
or
flds
sub
jle
sbb
and
fistpll
test
inc
cmp
iret
jno
div
popa
in
mov
dec
jnp
sahf
mov
gs
gs
push
sar
cwtl
idivb
fldl
lret
mov
add
pop
cmp
mov
dec
fmul
enter
lods
dec
mov
sbb
aaa
jl
pop
pop
and
push
ja
clc
inc
test
out
test
xor
arpl
cli
adc
push
mov
imul
addr16
hlt
push
js
jno
adc
imul
sti
add
push
inc
push
inc
xor
mov
pushl
sbb
jmp
loope
fsubrs
sub
xchg
inc
sahf
loope
bound
mov
mov
adc
mov
add
popf
loop
adc
imul
repnz
sbb
stc
gs
jno
fwait
cmp
shl
mov
cmp
push
movsb
xor
movsl
repnz
xor
sub
jno
test
pop
add
lea
inc
or
dec
aam
lea
push
xchg
sub
xor
pusha
xor
fcompl
cli
push
or
inc
mov
dec
sti
jbe
dec
mov
ret
movsb
jno
or
imul
mov
xchg
mov
pop
or
sbb
pop
loope
repz
ljmp
aaa
adc
sub
jge
dec
cmc
add
jbe
push
stos
sbb
jle
fistps
sub
shrl
push
inc
divb
xor
mov
inc
in
sbb
and
jg
fmuls
nop
popf
jle
cmp
push
inc
in
pusha
or
inc
jg
mov
andl
cwtl
filds
xchg
int
aad
mov
jae
rorb
jp
cmpb
sub
cmp
and
jl
mov
adc
mov
ja
jp
sub
jo
adc
xchg
jo
je
test
ret
mov
cmpsl
ja
push
dec
xor
cwtl
jecxz
inc
mov
xchg
dec
fldenv
xchg
dec
test
lods
mov
cmp
js
mov
mov
in
adc
cmp
lahf
xor
lock
repz
sti
hlt
popa
insb
and
jecxz
cmp
dec
cmp
sahf
cli
jnp
mov
lea
test
test
lahf
mov
add
stos
dec
imul
mov
jle
inc
pop
cltd
icebp
jecxz
jmp
push
sbb
ds
add
fsub
sub
xchg
push
or
xchg
test
inc
cmp
dec
insb
xor
and
push
inc
cmpsb
add
fwait
sub
cmp
int
out
scas
or
jo
in
xlat
xor
cmp
outsl
xor
push
sub
imul
lahf
data16
pop
ss
call
in
push
aam
cmp
or
icebp
test
sbb
cmp
rorl
xor
and
mov
je
insb
mov
adc
add
lahf
xchg
lret
popf
pushf
das
aas
push
mov
xor
or
imul
ljmp
pop
push
sbb
adc
xor
cmp
add
jmp
std
inc
adc
or
dec
jns
mov
mov
mov
scas
pop
rcll
ret
ds
ja
es
push
icebp
xchg
mov
cmpsb
movsb
mov
cltd
push
mov
jg
sahf
sahf
es
test
shl
add
fsubrl
fisttpl
int3
cmp
jnp
jne
neg
fucomip
es
sub
int
cmpsb
jnp
shll
popf
stos
mov
clc
fimuls
cwtl
add
xchg
fsts
xchg
fidivrl
jbe
add
pusha
shll
ss
test
add
adc
mov
and
mov
in
nop
movsl
inc
addr16
adc
cmpsb
scas
sbb
pop
add
shl
insb
dec
adc
add
or
mov
or
gs
enter
push
fdivrs
inc
jg
pop
dec
add
out
cmpsb
pop
scas
lcallw
daa
jmp
and
cmpsl
add
xchg
sbb
pop
xor
sbb
jecxz
pushf
xor
cmpsb
jno
aam
jmp
cmc
or
pop
mov
sar
punpcklwd
sub
jl
mov
adc
push
dec
jns
push
sub
adc
mov
xor
aaa
xchg
mov
outsb
sbb
out
andb
pop
fisttps
fidivl
push
jge
pop
aaa
xchg
int
aad
fstl
test
push
push
daa
js
fcoml
test
mov
outsb
push
push
push
xchg
push
cli
call
ret
lahf
jae
idivb
test
sbb
insl
dec
push
or
cmp
rclb
dec
jg
imul
push
bound
hlt
inc
fisubrl
outsl
out
ljmp
push
xor
mov
popf
pop
sbb
test
add
subl
mov
inc
rcrl
and
movsb
jne
sbb
dec
mov
ret
mov
jns
mov
push
dec
out
fwait
sbb
push
popa
outsl
sbb
stc
lods
or
outsl
lcall
xchg
fwait
es
jl
jne
loope
cmp
sub
dec
lods
test
stos
loope
push
addl
adc
push
rorl
xor
adc
inc
movsb
and
xchg
push
leave
pop
xchg
jge
repz
pop
mov
cwtl
jo
pop
dec
mov
loopne
or
mov
es
aaa
pusha
lahf
sbb
sbb
mov
pop
inc
ljmp
pop
inc
lods
ret
xchg
inc
mov
inc
loop
rcpps
jl
iret
push
test
bound
int3
push
add
enter
sub
test
lock
ficoml
fwait
pusha
popf
jbe
fcmovnbe
frstor
cmpsb
sub
fistpll
fisttpl
cmc
pop
adc
dec
mov
and
inc
xchg
stos
addr16
fs
aam
mov
cwtl
stc
push
pop
cmp
push
in
clc
lea
add
xor
or
in
fisttps
int3
xchg
cmp
adc
pop
stc
xchg
pop
pusha
loop
inc
shlb
testl
mov
int
cltd
mov
cmpb
adc
adc
mov
xchg
xor
xor
pop
inc
adc
mov
sbb
or
xchg
pop
stos
jo
add
push
sbb
icebp
jge
cs
rolb
push
outsb
subl
push
daa
je
pop
mov
sti
fs
sbb
or
bound
idivb
sub
test
fsubs
xchg
mov
andb
pop
xchg
loope
or
ljmp
insl
lret
cmp
scas
push
mov
in
push
or
dec
xchg
scas
push
add
dec
and
push
mov
push
xchg
incl
out
lods
ret
push
insb
mov
add
fs
jo
pop
mov
ds
ja
loopne
or
cwtl
add
out
jo
test
daa
mov
mov
and
inc
stos
fwait
cs
pop
fs
stc
mov
cmc
mov
adc
pop
pop
clc
out
icebp
push
or
stos
nop
xchg
cmp
out
out
out
es
jmp
fs
jns
xlat
xor
adc
mov
loop
xlat
loop
fwait
jle
adc
ret
fbstp
pop
sub
scas
rcrl
das
cmp
and
cmpsb
adc
rep
in
dec
mov
jp
shll
lods
in
xor
cmpsb
call
inc
mov
cltd
jae
fiaddl
out
mov
fsubrp
outsl
dec
push
push
stc
in
lret
mov
pop
sbb
lds
dec
dec
rolb
or
mov
and
add
ljmp
sbb
or
xor
loopne
xlat
sbb
or
ret
fs
mov
xchg
cmp
out
mov
mov
rcll
pop
xor
aam
adc
ret
daa
sbb
mov
mov
data16
mov
jg
lds
lret
sub
mov
mov
xor
xchg
sub
imulb
aaa
push
jle
jns
lea
xchg
mov
das
repz
rcl
jb
sbb
xchg
movl
mov
stos
xchg
sahf
or
pop
pop
mov
jnp
por
xchg
out
test
gs
js
test
nop
push
dec
mov
repnz
mov
test
xor
clc
or
push
das
dec
subb
pop
popf
inc
xorl
or
adc
fildl
out
adc
pop
xor
cmpsl
mov
mov
mov
es
cli
std
or
std
aad
imull
jle
pop
loope
mov
cmp
insb
daa
das
dec
out
scas
mov
push
xchg
sub
insb
into
inc
stos
xor
call
adc
adcl
gs
fadds
mov
cmpsl
inc
cmp
add
dec
mov
pop
int
xchg
das
pop
inc
sar
and
mov
jg
sbb
enter
mov
test
out
sbb
lock
shlb
ljmp
insl
cmpsl
dec
push
adc
mulb
jno
xchg
push
mov
mov
sub
in
mov
xchg
push
dec
inc
nop
fwait
aad
add
cld
xchg
aad
and
call
les
shl
pop
int
xchg
into
xchg
mov
push
in
mov
mov
insl
lods
xor
fcoml
adc
pop
movsb
xchg
out
daa
mov
push
data16
and
test
mov
arpl
pop
repnz
push
lret
fstps
aaa
push
shl
stos
mov
sub
scas
or
add
lret
insl
scas
mov
adcl
xchg
test
lcall
pusha
je,pt
ret
stos
xchg
cmp
scas
sub
xor
pop
inc
cmp
nop
rclb
ret
mov
push
addr16
and
lret
insb
negb
nop
test
bound
jno
adcb
shlb
adc
lods
mov
dec
icebp
jmp
ds
jg
lret
xorl
pop
inc
loope
push
jge
outsl
addb
mov
pop
xor
lock
cltd
mov
negb
adcb
cmpl
jp
add
push
and
fwait
inc
ljmp
addr16
ja
icebp
pop
sub
cmpsl
cwtl
dec
aad
mul
pop
imul
cmp
push
mov
enter
push
pop
out
mov
fs
mov
mov
and
cmp
sub
sti
roll
mov
stos
sbb
int
fcomp
sbb
mov
pop
cmp
dec
inc
jge
dec
aad
mov
pusha
outsb
adc
mov
fcmove
push
inc
loope
cltd
dec
mov
push
hlt
and
divb
stc
push
mov
jl
xor
sbb
loopne
ret
push
fsubs
out
pop
negb
or
pusha
int
fcmovne
mov
or
cmpsl
ud0
push
cmc
dec
je
push
into
scas
or
icebp
dec
lock
in
mov
mov
jne
testb
sub
jmp
cmpsl
add
jno
ret
xlat
mov
cmpsl
ljmp
jle
icebp
les
imul
jns
jbe
out
int3
mov
add
push
push
mov
cmp
fcmovnb
andl
inc
push
out
add
pop
lods
xor
cs
bound
data16
pop
jl
push
sti
fmulp
mov
bound
mov
jo
mov
repz
dec
cmp
pop
push
push
sub
mov
xchg
push
and
aad
pop
shll
cmp
jne
addr16
push
mov
insb
xchg
je
stos
addr16
scas
stos
cmpsb
out
cmp
add
ret
cmp
sub
fisubs
iret
in
jecxz
mov
pop
mov
in
jge
andb
ret
icebp
mov
icebp
data16
dec
xor
mov
mov
pop
or
add
in
mov
mov
push
insl
icebp
sbb
bound
lods
cwtl
ficoml
mov
in
lods
cmp
movsb
adc
jmp
filds
pop
rcr
inc
popa
or
adc
loop
test
es
sub
pusha
shl
xchg
mov
add
out
outsb
test
xchg
add
or
jns
pop
or
dec
inc
xchg
hlt
test
jmp
mov
ret
jecxz
adc
lds
pushf
mov
jb
hlt
je
repz
outsl
insb
mov
lods
subb
and
popa
aam
xor
repz
mov
and
jnp
fisubs
jbe
out
xchg
lock
icebp
pusha
and
jbe
jg
shll
push
imul
xchg
shl
fildl
sbb
mov
jbe
lcall
or
xchg
adc
popa
dec
into
testb
les
sub
inc
lods
popf
pop
movsb
xchg
loopne
rcll
iret
je
push
jmp
inc
enter
insb
sarl
lret
mov
sbb
adcl
lods
jne
jb
xlat
outsl
dec
or
lock
jecxz
or
or
ficoms
pop
sub
pop
cmpl
mov
jns
add
and
lds
push
shrb
loope
jl
pop
xchg
xchg
dec
clc
xchg
sub
jb
mov
lret
stos
dec
push
js
test
inc
mov
les
cmpsb
sbb
addr16
sbb
lret
dec
dec
arpl
fs
jae
jmp
xor
sti
jno
inc
pop
mov
outsb
inc
mov
push
and
cmp
cmp
es
insl
pop
dec
rcr
aam
adc
pushw
xchg
sub
decb
or
sahf
mov
mov
pinsrw
out
mov
shl
push
cmp
mov
bound
inc
xor
jle
and
mov
pop
xchg
into
outsb
pop
fnsave
int
cmp
cmp
mov
mov
mov
cs
pop
or
add
or
bound
xorb
outsb
mov
push
inc
or
xchg
xchg
push
pop
sbb
bound
orl
out
js
loop
enter
mov
sbb
inc
ds
wrmsr
xchg
scas
mov
pop
sub
hlt
in
arpl
mov
das
and
xor
outsl
jbe
stos
cmc
out
enter
in
push
fiaddl
pusha
cwtl
mov
fs
ljmp
repnz
mov
push
dec
dec
jne
xchg
lds
pop
lret
enter
in
push
fiaddl
push
popf
add
addr16
fisubrs
lock
sti
in
xor
popf
push
cli
push
pop
push
out
xlat
add
pop
inc
add
xchg
mov
ret
cmc
dec
ret
mov
fdivr
out
inc
fcomp
pop
mov
or
dec
xor
add
adc
in
xor
mov
dec
mov
cmp
jmp
clc
or
sbb
shlb
xchg
ret
mov
dec
mov
push
popf
push
add
mov
stos
push
dec
ret
jecxz
subb
xchg
or
pop
sbb
and
aad
inc
pop
test
push
xchg
cmpsb
sbb
cmc
jl
imul
add
jmp
xor
bound
inc
or
ja
mov
gs
scas
push
lea
testb
dec
and
push
rcll
into
add
cmp
cmp
cs
lret
popf
sub
inc
or
adc
mov
and
add
sbb
ficoml
jne
jbe
jle
outsb
pusha
mov
push
out
popa
xchg
cmp
pop
cwtl
xor
xchg
add
push
ja
mov
pop
stc
jmp
and
inc
adc
inc
ljmp
jno
xor
pop
inc
aaa
push
cli
mov
fcmovnbe
push
cmpsb
sbb
sbb
insl
popl
sbb
movsl
jp
add
mov
push
mov
jno
inc
aas
jl
mov
mov
leave
push
ja
lret
xchg
cltd
clc
inc
xor
pusha
or
leave
push
js
push
xchg
xor
test
mov
mov
lret
mov
adc
outsl
push
stos
insb
push
imul
das
cld
jg
test
ret
push
in
inc
incl
outsb
push
pop
mov
hlt
mov
outsb
mov
sbb
cli
pop
xor
pop
dec
stos
sbbb
add
lock
lds
lock
mov
sub
arpl
sub
sar
rcr
cli
scas
jmp
dec
jl
jp
xorb
ljmp
test
or
iret
jge
insb
fcomps
daa
test
aam
popa
mov
fadds
lret
out
popl
fstpl
cltd
movsb
mov
mov
dec
ret
or
stos
aaa
push
dec
mov
dec
xor
push
cli
out
pushf
add
in
sbb
dec
push
lea
fdivrl
push
xchg
or
sbb
pop
jg
sub
daa
std
pop
sbb
mov
insl
lret
mov
adc
std
pop
xor
pop
icebp
dec
jnp
cmp
fmuls
pushl
xor
data16
xor
cmc
enter
pop
in
and
sub
lods
mov
cli
cmp
or
add
mov
mov
xchg
out
bound
scas
dec
fistps
sub
je
mov
add
in
loopne
sub
fcom
mov
in
cmp
push
adcb
test
mov
arpl
adc
jp
dec
or
js
arpl
cmpsl
lods
sub
jmp
aam
xchg
cmp
mov
aaa
mov
test
gs
inc
xor
add
mov
xor
subb
dec
inc
mov
pop
push
inc
outsl
pop
jp
cmpl
mov
add
arpl
pop
pushf
testb
cs
in
popa
mov
push
and
jae
adc
sti
mov
int
xchg
pop
std
adc
sarb
pop
jbe
test
cli
mov
cltd
cmp
xchg
sub
or
sub
inc
or
daa
out
out
pushf
adc
sub
cmc
std
mov
insb
jp
das
cmp
pop
push
rcll
push
adc
push
push
adc
xlat
ss
pop
shrl
inc
jmp
test
rorb
ret
cs
xor
jmp
pushf
inc
or
fcmovne
xor
out
add
sar
or
push
sub
repnz
xor
test
clc
fistpll
cli
cmpsl
mov
jb
lea
push
or
hlt
movsb
out
in
lds
mov
mov
test
sti
hlt
mov
push
sbb
into
mov
and
inc
cmp
sub
inc
fdivp
add
or
pop
fs
in
xor
loopne
and
call
lcall
aam
loop
jae
or
outsb
inc
aam
or
xor
ja
push
int3
ja
iret
aad
and
and
or
stos
sbb
cmpsl
jb
mov
out
int3
sbb
repz
out
mov
test
inc
lret
pop
enter
adc
add
pop
mov
sbb
fwait
into
cmp
clc
dec
jns
sbb
push
sahf
loopne
pop
and
mov
cmpsl
es
jnp
cld
dec
sbb
cmp
js
push
out
add
mov
lods
pop
sbb
sarb
les
cmp
ds
ret
jae
cltd
daa
xchg
add
outsl
add
dec
mov
pop
cmp
inc
lds
jo
sub
leave
jbe
test
cmp
aam
cli
mov
adc
mov
xchg
hlt
adc
mov
fsubs
mov
jmp
sub
add
lret
fstpt
js
in
add
cli
ret
jnp
lods
sbb
fldcw
fnsave
into
add
mov
sub
scas
je
xchg
repnz
push
xchg
xor
jmp
push
sbb
mov
jnp
xor
sub
insb
lods
push
pop
mov
loope
mov
sub
negb
cmp
xlat
add
cmp
mov
push
cltd
ljmp
in
jb
test
add
fsubl
pop
lods
mov
xlat
sbb
scas
mov
jecxz
fwait
mov
or
or
ljmp
lahf
fwait
mov
pop
sbb
into
ror
mov
adcb
xor
les
enter
cmc
mov
fadds
in
adc
adc
dec
or
lahf
jbe
test
dec
dec
mov
dec
xchg
ret
push
popa
in
inc
fisubrs
mov
inc
pop
sbb
mov
cmc
mov
mov
clc
adc
inc
in
xchg
aad
jle
adc
lods
mov
mov
jmp
test
pop
scas
push
lahf
dec
sbb
addr16
jne
iret
mov
call
mov
ds
loope
mov
lea
mov
lods
push
xchg
scas
faddl
int3
stos
adcb
mov
lock
sti
mov
jge
cli
gs
pop
call
xor
icebp
data16
int3
loopne
xchg
xor
sbb
nop
and
cmp
mov
jbe
mov
adc
loop
stc
mov
cmc
pop
imull
mov
rcrl
loope
nop
movsl
mov
cmp
sbb
das
xlat
xlat
loop
into
sbb
andb
push
fidivl
pusha
hlt
aas
xchg
ret
xor
mov
cltd
mov
jmp
ret
mov
fiaddl
movsb
in
fimuls
test
nop
xor
mov
fcoms
xchg
sbb
in
ds
xor
fs
jl
je
jmp
mov
adc
xor
cmp
sub
out
repz
loope
sbb
lret
ja
pop
or
shll
add
rcrb
mov
mov
pop
insb
add
pop
push
inc
aad
loopne
push
pop
mov
ss
jae
rcrl
loopne
or
or
push
sub
fwait
pusha
and
jo
mov
mov
subl
and
fildll
addb
jns
in
les
xor
punpcklwd
sub
push
popa
jb
or
std
push
movsl
pop
xor
mov
sbb
insl
xchg
outsl
xor
xchg
adc
aas
dec
jnp
popa
inc
lea
mov
fistpl
ret
adc
ret
xor
scas
inc
repnz
add
movsb
sbbl
sbb
dec
mov
adc
xor
pop
std
add
jecxz
mov
pusha
xchg
mov
inc
stos
adc
cli
sarl
loopne
stc
sbb
int3
cmp
xchg
xor
sti
sbb
lds
cmp
fbld
mov
mov
jnp
sbb
sbb
enter
sbb
fs
push
int3
cmc
fsts
cmp
nop
mov
dec
cmc
addr16
bound
sar
and
sub
mov
into
es
jnp
mov
push
loope
test
mov
push
repz
pop
mov
xor
vmovaps
jmp
xor
cmc
loop,pt
mov
dec
fnstsw
and
fbld
sub
xor
iret
lret
scas
mov
decl
add
je
sahf
adc
in
mov
mov
stos
rcll
lods
jmp
push
adc
jle
js
xor
dec
sahf
adc
xchg
cmpsb
scas
movsbl
pop
add
sti
adc
test
pop
lret
sub
cmp
xor
add
stos
dec
imul
cmpb
popl
jg
sahf
pop
inc
push
add
pop
pop
lds
mov
shlb
mov
mov
mov
inc
into
mov
and
outsl
ds
xchg
and
inc
xchg
cmp
dec
jg
out
nop
leave
jbe
dec
js
sbb
call
mov
sub
outsb
or
outsl
daa
mov
mov
xchg
xor
jge
mov
jmp
test
adc
pop
daa
jae
and
mov
add
pop
mov
and
sbb
push
test
test
jbe
test
xchg
xchg
push
pop
test
adc
scas
loope
sbb
add
test
loop
inc
dec
mov
mov
cld
mov
gs
mov
shrb
push
xor
shll
cli
sbb
mov
cmp
call
or
cmpsb
mov
mov
jo
cs
mov
and
fisubl
jp
mov
adc
adcb
adc
scas
push
ds
jb
pop
adc
adc
sbb
sbbl
mov
lock
cs
fwait
test
jecxz,pn
sbb
imul
divb
xor
adc
lcall
jg
and
popf
mov
xchg
sahf
popa
and
or
mov
mov
into
jno
jo
sbb
and
cltd
gs
xchg
ds
scas
xchg
fstps
loope
inc
pop
sbb
arpl
add
fisubs
mov
jbe
jo
dec
dec
inc
add
push
rcrl
sti
cwtl
dec
xchg
sarb
adc
imull
fs
or
pop
pop
lcall
nop
mov
out
add
adc
inc
leave
sbb
sub
movsb
jns
test
pop
sbb
cmp
pop
cltd
out
jnp
mov
dec
jl
inc
movsl
mov
xchg
cmc
mov
mov
adc
or
jle
jno
fnstsw
mov
and
lret
bound
or
ss
fmull
pop
dec
popf
data16
and
push
je
mov
cmp
repnz
push
pop
cltd
lret
push
fdivs
cmp
addb
mov
in
mov
sbb
les
push
cmpb
int3
fnstcw
mov
mov
repz
das
mov
add
call
add
shlb
xchg
xchg
dec
lcall
xor
sbb
push
aad
mov
mov
sub
test
xlat
push
and
jnp
test
mov
inc
shl
xor
ror
in
test
mov
frstor
stos
sbb
adc
jno
ja
mov
movsl
push
jno
in
int3
xlat
adc
stos
and
lds
ds
aam
or
loope
mov
sbbl
inc
jl
fcmove
gs
popf
pop
notb
aas
jecxz
adc
iret
mov
mov
aas
and
xchg
addr16
dec
mov
leave
jg
mov
mov
dec
pop
xchg
pop
pop
aaa
inc
dec
loope,pt
scas
add
mov
fisubrl
insb
pop
sbb
cmp
adc
xchg
push
jne,pn
mov
add
and
push
jp
in
ret
sbb
in
cltd
mov
fisubs
shll
mov
mov
push
orl
int
flds
stos
jae
cmpsb
cld
lods
roll
stos
imul
mov
mov
arpl
push
lahf
mov
mov
mov
mov
sub
or
xchg
pop
mov
rcr
xor
sbb
sbb
out
divl
xor
jbe
sub
stos
push
push
adc
jae
push
sbb
inc
dec
outsl
cld
mov
test
inc
outsl
dec
sbb
cs
or
addr16
adc
mov
pop
pop
lds
xchg
addr16
dec
adc
fdivrl
mov
add
out
sub
cltd
jnp
add
lods
or
aad
jmp
push
icebp
into
mov
andb
jbe
out
in
mov
popf
inc
pop
cltd
out
fmull
dec
dec
inc
pop
pushf
pop
mov
mov
and
repz
je
lods
sub
stos
xchg
int
mov
dec
testb
jmp
iret
sahf
testl
or
add
iret
adc
xchg
fnsave
sub
push
adc
jo
cli
mov
daa
addr16
jmp
mov
out
dec
dec
fdivp
inc
outsl
leave
push
cltd
es
xchg
lock
outsl
lea
mov
cmp
mov
test
dec
pushf
pop
sub
inc
adc
mov
jge
mov
cmp
loopne
fdivs
out
roll
movzbl
inc
adc
les
xchg
popa
jecxz
das
push
mov
mov
sub
insb
lret
mov
pop
add
push
fcoml
adc
adc
adc
push
rol
adc
mov
push
fcomps
inc
jnp
fwait
jae
aad
cli
dec
loopne
and
cltd
or
push
add
dec
rcrl
dec
and
shrl
fdivrp
or
xchg
inc
imul
popa
dec
sub
dec
in
jns
in
add
loop
mov
in
test
fstl
jecxz
xor
xor
insl
xor
and
mov
mov
adc
inc
mov
mov
mov
sbb
xor
movsl
mov
fists
jne
inc
je
inc
sub
in
popf
data16
mov
push
addl
adc
lret
xor
inc
jl
xchg
enter
in
pusha
xchg
add
xor
in
dec
mov
inc
notb
cmp
sub
and
jns
subl
aam
int3
cld
inc
inc
ds
outsl
xchg
insb
mov
push
and
decl
je
les
mov
insb
enter
jl
lds
dec
repz
and
inc
pop
push
jge
lods
xchg
negb
jnp
das
cld
fistpl
sbb
enter
push
mov
cld
lcall
fwait
ds
adc
cwtl
adc
dec
jno
jae
jae
lds
pushf
aad
in
inc
int3
xchg
push
or
sub
inc
mov
cmp
jbe
push
cmp
loopne
ret
cwtl
ds
push
jecxz
sbb
lcall
popw
cli
in
or
outsb
jecxz
loopne
add
jge
cmp
jg
push
mov
enter
and
popa
pop
pop
lahf
inc
push
or
aas
jo
fiaddl
or
rclb
adc
dec
xor
sbb
add
and
pusha
scas
fcompl
push
jge
jae
jp
push
int
xor
repnz
or
pop
xchg
int3
xor
dec
outsb
jge
in
cmp
push
adc
xchg
pop
pop
sbb
add
xor
outsl
sahf
rol
test
sub
xchg
shlb
fs
loope
sbb
pop
mulb
movsl
cs
dec
daa
xor
pop
jnp
lret
fcoml
inc
push
and
nop
in
cmpl
and
add
lcall
mov
push
adc
lock
daa
jge
or
push
cli
rcrl
pop
subl
mov
fcmove
adcb
pop
adc
jnp
cmp
addr16
stos
jne
sbb
cmp
fiaddl
pop
repnz
ficomps
mov
les
sbb
fwait
roll
xchg
add
jle
ds
imul
mov
decl
out
hlt
xchg
arpl
out
cld
stos
in
xor
cs
mov
popf
scas
pusha
add
pop
jle
ret
xchg
fidivrs
pop
clc
data16
inc
mov
and
sbb
stc
lret
popa
dec
pop
jnp,pn
movl
jbe
sbb
push
push
icebp
lods
mov
mov
iret
sub
ds
repz
js
das
cmp
mov
fbstp
shlb
sbb
es
movsb
mov
lock
push
inc
pusha
adc
cmpsb
dec
repz
pop
add
dec
enter
mov
push
adc
imul
imul
mov
adc
inc
and
std
push
mov
ljmp
fwait
adc
and
or
test
fidivl
les
adc
jl
scas
and
stos
mov
incb
fldt
nop
testl
mov
inc
lods
ss
popl
icebp
or
lods
mov
jae
mov
mov
push
aam
inc
inc
mov
ds
sub
mov
jp
push
or
xor
call
sub
adc
sbb
ret
cmp
xor
pop
fs
add
in
icebp
jno
inc
or
jno
push
cltd
sbb
mov
nop
stos
dec
fdivr
stos
inc
inc
lods
ja
pop
ss
test
lcall
adc
push
sbbb
xor
adc
mov
repz
in
mov
cmpsl
jb
push
adc
dec
and
cmc
dec
fiadds
push
cmp
test
hlt
jo
cmp
or
cmp
and
inc
dec
or
add
and
aaa
hlt
mov
dec
imul
mov
je
add
jo
aaa
js
rol
xchg
cmp
aaa
mov
ja
dec
mov
jecxz
push
mov
das
adc
sbb
pop
scas
test
das
mov
pop
add
push
ja
and
mov
or
push
jbe
xchg
mov
jp
leave
addb
inc
push
add
inc
push
adc
ja
stos
push
dec
push
mov
cmp
ja
es
scas
mov
arpl
rolb
pop
pop
xchg
mov
and
rcl
mov
fdivs
push
js
push
repz
xchg
popf
dec
push
lcall
test
test
mov
out
mov
mov
inc
aas
cld
push
cmp
cmp
jns
movsl
dec
popf
pop
lahf
jg
call
test
in
mov
jnp
xchg
movzbl
cmc
xchg
sub
pop
popf
pushf
pop
daa
lcall
and
cmp
pop
nop
dec
sti
scas
lahf
and
repz
xlat
rcrl
xchg
mov
xor
cli
push
or
lret
cwtl
mov
shll
and
inc
sbb
xchg
lea
stos
loop
pop
fsubl
std
lcall
sti
rcll
addb
scas
das
sub
imul
mov
loopne
cli
jmp
es
mov
insb
cmpsl
outsb
inc
daa
xor
pop
pop
xor
mov
inc
ret
sbb
dec
mov
mov
aaa
or
lods
fstps
adc
loopne
push
mov
cs
sbb
shrb
sbb
cld
xchg
into
xchg
stos
js
inc
out
test
stos
aaa
ljmp
inc
mov
test
pop
jp
mov
lods
adc
cld
movsb
xchg
xchg
cli
cmp
sbb
mov
mov
mov
sbb
into
adc
cmp
nop
fdivrl
fucomi
xchg
push
or
mov
orl
stc
or
shrb
jae
movsb
insb
sbb
cwtl
xor
sahf
xor
pop
pop
jmp
mov
pop
inc
xchg
cmp
mov
roll
sbbl
mov
aad
push
stc
or
rcrb
dec
cld
test
stc
rolb
add
mov
mov
mov
rolb
orl
mov
cwtl
out
mov
push
xchg
push
xor
push
insl
adc
inc
adc
mov
jne
xchg
push
xchg
insb
inc
lret
mov
loop
fs
jge
lahf
les
jb
lock
testb
or
adc
cmpsl
pop
mov
dec
scas
jmp
fsts
fneni(8087
dec
xchg
mov
mov
mov
fcoml
or
mov
shrb
or
mov
and
inc
into
jmp
sbb
or
jno
stc
inc
sbb
ret
mov
loope
dec
daa
mov
jne
xor
xor
movsb
xchg
in
mov
int
jmp
leave
data16
fisubrs
incl
insl
push
out
popa
xchg
cmp
mov
or
cltd
push
sbb
mov
inc
aad
xchg
pop
add
pusha
mov
dec
push
jb
adc
mov
jns
es
sub
lea
cltd
pop
mov
pusha
jno
fs
sub
inc
jae
aaa
pop
cmc
int
lods
insl
js
test
push
lock
cmp
lret
mov
pop
cld
outsl
mov
or
cli
out
mov
inc
jg
or
je
jns
jns
sub
cmpb
in
push
jge
insl
aad
add
mov
js
lds
add
add
xor
push
gs
cmp
fstpt
dec
xchg
inc
push
out
jne
push
xor
push
gs
jno
lds
mov
out
test
jg
cmp
lods
insb
or
adc
jge
fcompp
lock
dec
dec
ret
mov
loop
xchg
xor
popa
mov
mov
pop
xchg
in
dec
popf
adc
pop
mov
push
insb
insl
jns
dec
sub
lahf
sbb
mov
inc
sti
or
icebp
sub
xor
mov
dec
aam
inc
aam
sbb
mov
fdiv
xchg
mov
mov
lds
dec
add
lock
int
mov
jp
dec
add
push
jno
push
mov
jb
mov
test
cmp
loopne
rcrb
and
xchg
out
leave
leave
and
pop
outsb
push
outsl
jbe
dec
pop
andb
mov
pop
push
imul
repz
pop
push
xsaveopt
sub
out
add
mov
inc
cmpsl
pushf
add
mov
pushf
sti
sbb
out
push
push
pop
push
nop
rclb
xchg
cmpsl
push
xchg
sub
lea
popa
xor
insl
push
in
sub
and
add
jno
sbb
ret
jl
jns
in
test
xchg
sbb
sbb
data16
mov
je
or
cltd
mov
dec
insb
subl
imul
inc
push
hlt
addb
pop
jns
dec
xchg
jecxz
stc
movsb
and
dec
push
adc
adc
add
movsb
imul
cmc
inc
add
fmul
gs
xor
daa
adc
shr
mov
fistpll
xchg
fistpll
adc
push
fwait
jmp
sbb
jmp
in
imul
add
popa
push
ret
int3
pop
push
stos
fisttpll
cmp
test
in
jnp
jl
ljmp
mov
jmp
xor
inc
inc
add
push
aad
lret
sahf
jl
dec
or
shrb
shll
dec
in
pop
ss
sub
lcall
rorb
xchg
xchg
jp
sub
jae
jmp
aam
add
mov
sub
fwait
add
lods
sbb
out
add
lock
cmp
xlat
mov
gs
inc
ret
outsl
mulb
inc
dec
test
cmp
push
loope
idivb
fxam
add
dec
jl
mov
xlat
in
mov
es
pusha
mov
or
jns
inc
hlt
mov
out
dec
movsl
cmp
xrelease
mov
mov
das
into
stc
mov
sub
sub
aam
ja
aad
loopne
jb
mov
imul
stos
adc
dec
jbe
mov
psubsw
popf
stc
ljmp
into
lret
cmc
arpl
mov
mov
cmp
dec
push
and
jecxz
push
test
enter
sti
in
loope
and
out
cmp
sahf
aam
adc
mov
cltd
xor
movb
inc
sub
sbb
aaa
push
adc
inc
mov
push
cmpsb
fdivs
sti
fwait
pop
dec
mov
repz
test
cmp
stos
jb
push
orb
xor
sub
fldcw
enter
lret
inc
sbb
gs
sbb
aam
movsl
enter
fwait
cltd
scas
fdivrl
mov
lcall
cmp
jnp
adc
mov
bound
mov
mov
dec
sbb
leave
mov
outsl
popf
xchg
push
inc
in
push
or
lret
imull
data16
fdivr
subl
jns
pop
loopne
hlt
stos
in
data16
icebp
mov
ficomps
popa
dec
adc
sub
lret
fwait
or
dec
ja
mov
in
jle
cmpl
jle
jmp
pop
and
es
andl
clc
cmp
sub
loope
inc
push
cli
mov
das
mov
and
insb
mov
incb
adc
stos
je
jl
in
cmc
mov
in
adc
lock
mov
sarl
cmp
loopne
mov
stc
dec
sbb
push
roll
sub
mov
jg
insl
outsb
and
aad
mov
inc
jecxz
pop
sbb
and
or
inc
leave
push
repz
mov
and
arpl
out
xchg
cmc
inc
jle
rcll
negb
xchg
sub
sbb
loope
or
cmpb
movsb
lret
inc
inc
pop
add
mov
or
jge
sub
js
jg
jl
test
aam
add
sub
xor
mov
ja
or
and
fnsave
int3
pop
loopne
jle
cs
mov
adc
imul
fidivrs
mov
jecxz
imul
shlb
es
rorl
or
sbb
mov
sti
in
loope
lahf
xchg
pop
dec
sub
push
repz
mov
xchg
mov
or
daa
pop
stc
adc
jl
lret
loope
arpl
mov
jbe
mov
sbb
inc
pop
icebp
popa
lds
xor
and
bound
cmp
pop
fwait
add
cld
clc
mov
sub
ret
add
push
jns
inc
scas
xor
sbb
arpl
xor
cmp
and
leave
sub
mov
cmp
enter
xchg
enter
sbb
dec
mov
mov
or
adc
dec
inc
cmp
std
mov
shrb
repnz
clc
fs
xor
ss
outsb
ret
rorb
push
aaa
adc
imul
mov
pop
inc
mov
pop
cmpsl
scas
fs
bound
cmp
lahf
xchg
mov
shlb
mov
ljmp
or
mov
mov
sbb
stos
push
xor
add
insb
xchg
push
adc
push
jnp
insb
loope
out
daa
bound
add
mov
fdivr
leave
fwait
addr16
into
push
dec
sti
inc
cli
aas
lea
jne
mov
mov
in
mov
repz
rcr
mov
fisubs
and
lret
xor
call
mov
mulb
xchg
jp
jecxz
xlat
arpl
push
popf
sbb
cmc
or
aam
icebp
out
sbb
add
enter
xlat
rclb
mov
popf
cmp
popf
popf
push
bound
and
pop
aas
xchg
pusha
xlat
movsb
jo
pop
adcl
ljmp
cmc
jmp
jae
iret
add
jae
xchg
cmpsb
lds
inc
popa
out
mov
test
rcrb
hlt
mov
jb
adc
push
popa
or
ret
mov
ss
sahf
aad
rcll
mov
mov
imull
bound
js
jp
lea
and
pop
dec
xor
mov
cmpl
sbb
push
adc
out
mov
dec
addr16
sbb
popa
jno
dec
aad
and
cld
push
and
mov
push
mov
ret
mov
cmp
or
push
lods
jb
lods
add
stos
pop
cltd
ret
xchg
sbb
fildl
add
cmp
push
insb
leave
aad
cmp
dec
lahf
push
call
or
wbinvd
inc
cwtl
push
imul
push
stc
test
cs
invd
xchg
xlat
frstor
mov
mov
cli
rep
jg
inc
call
mov
push
add
pushf
int3
push
and
push
ja
popa
and
mov
add
push
int3
rolb
bound
add
add
cmpsb
adc
inc
rolb
jg
arpl
pop
jno
in
dec
pop
xor
ljmp
les
or
es
dec
mov
ret
dec
pop
sub
sub
mov
sub
dec
inc
cmp
push
xor
lahf
stc
jno
cs
jo
enter
iret
jb
adc
aad
jecxz
insl
insl
enter
or
mov
bound
xchg
push
inc
lret
icebp
or
add
mov
or
int3
shlb
and
or
ljmp
je
and
dec
xor
aad
push
adc
clc
pop
sbb
roll
dec
adc
das
daa
adc
pop
in
push
cmpsb
cmp
xchg
cmc
stos
mov
scas
inc
fstpl
mov
and
push
sbb
push
jg
ja
inc
cmpsl
pop
repz
mov
sbb
pop
or
jle
xchg
mov
popa
call
clc
or
adc
dec
sbb
int3
shl
or
push
stc
lock
mov
cmc
jmp
das
rcrb
mov
frstor
or
cwtl
xor
mov
adc
ffreep
jp
and
add
mov
das
jp
in
adc
and
inc
std
jl
ret
dec
mov
dec
jmp
or
sbb
adc
inc
mov
ss
dec
mov
jg
call
mov
add
jecxz
movsb
sbb
jb
notb
xchg
sbb
push
xor
pop
std
ret
sub
pop
mov
jno
repz
lock
dec
aas
data16
aad
test
inc
sbb
push
jecxz
mov
idivb
adc
out
xor
stos
and
movsb
and
sarl
std
adc
pushf
jl
push
push
xchg
dec
jbe
sub
loopne
jge
xchg
enter
inc
add
and
sub
pushl
mov
mov
and
cltd
addl
sbb
push
push
aaa
sub
mov
nop
adc
and
sub
xchg
cmpsl
scas
inc
cmc
xchg
js
in
cmp
jge
lds
xchg
xchg
pop
imul
mov
mov
mov
sti
loopne
mov
cmpsb
out
inc
arpl
mov
dec
mov
and
hlt
dec
lods
mov
shlb
mov
rcl
xchg
sub
add
adc
xor
cmp
ret
pop
jnp
je
and
and
dec
frstor
imul
xchg
adc
mov
adc
inc
arpl
loopne
jae
mov
or
cmc
shl
dec
xor
jne
ljmp
es
jnp
popa
pop
pop
mov
push
cmp
xchg
push
arpl
int
xlat
mov
jge
and
and
cmp
lret
add
stc
mov
icebp
rolb
dec
dec
icebp
movsb
icebp
das
cs
dec
cmp
add
jbe
pop
dec
out
scas
out
dec
lea
enter
cli
jle
fiaddl
jnp
xchg
out
rcll
inc
cli
adc
pop
xchg
shll
sbb
xorb
clc
mov
fidivrl
lock
xchg
aam
fmuls
dec
and
cmp
push
out
sbb
addb
sub
sbb
pop
popf
xchg
add
or
mov
ss
repnz
stos
mov
jo
xor
adc
sti
cmp
xchg
mov
xchg
popf
sub
mov
cltd
or
and
sahf
xor
pop
popf
pop
call
aas
adc
lods
in
popf
por
decb
lcall
or
out
push
add
dec
sub
inc
mov
fcompl
inc
aad
lcall
lcall
shlb
ja
jno
jp
sbb
clc
aaa
pop
mov
inc
cs
dec
icebp
cwtl
and
out
mov
int
cmpsb
or
pop
sbb
xor
movsb
data16
cwtl
pusha
outsb
inc
out
out
mov
addr16
pop
adc
sbb
loopne
pop
mov
dec
inc
dec
and
sub
add
mov
imul
mov
imul
cmp
sbb
jo
pop
xor
cmpsl
or
int
bound
icebp
sbb
or
pop
addr16
loope
inc
pop
js
imul
cmp
enter
shufps
dec
jmp
pop
popf
or
hlt
aaa
ljmp
mov
adc
hlt
les
inc
add
in
test
pop
inc
test
mov
xchg
jp
sbb
clc
aaa
pop
mov
xchg
add
pop
pop
jb
dec
inc
out
mov
int
cmpsb
or
pop
test
push
jb
es
sub
cs
cmp
mov
cmpsb
and
xchg
in
out
xor
outsl
mov
lods
mov
jecxz
lock
pushf
sbb
inc
cld
xor
xor
mov
xor
xorb
sbb
lds
fldl
push
push
pop
or
loope
inc
push
lods
jle
aas
sub
add
cld
cs
xchg
sbb
sar
jo
loopne
push
hlt
xor
sbb
stc
fldenv
cmp
sub
xor
orb
mov
sub
mov
divl
dec
push
dec
jne
rcrl
pop
out
mov
lahf
sti
frstor
mov
iret
mov
into
stos
push
mov
aad
pop
mov
mov
push
enter
shlb
and
adc
inc
aad
sbb
pop
xor
cmp
daa
enter
and
in
out
lahf
outsb
mov
dec
mov
pop
push
popf
mov
shlb
dec
sbb
mov
fdivrs
icebp
je
xlat
push
ljmp
and
leave
xchg
pop
sti
or
or
xchg
call
cmp
adc
jge
push
cmp
filds
push
gs
xor
push
aaa
or
lret
pop
nop
mov
xchg
scas
aaa
mov
mov
cmc
push
cmp
enter
iret
std
clc
dec
xlat
mov
ret
pop
push
stos
jbe
jg
push
shll
stc
adc
sub
lea
jo
add
rcl
ret
addl
mov
or
aas
jbe
sbb
jno
cmp
cld
mov
mov
push
cmp
lcall
rolb
cli
in
push
shrb
cmp
hlt
jle
adc
jl
xchg
or
repnz
and
rcl
xor
or
and
sbb
xchg
or
movsl
mov
fwait
dec
dec
adc
loopne
inc
sbb
or
in
pop
jmp
hlt
add
mov
test
push
or
js
xchg
in
out
jo
push
lcall
push
int
repnz
pop
push
gs
inc
adc
fsub
inc
sarl
das
mov
out
cwtl
fdivl
negl
into
mov
cwtl
pop
scas
shrl
fildl
add
imul
dec
mov
insb
pop
mull
pop
jg
addr16
mov
hlt
xor
dec
cli
push
ss
mov
ja
xchg
repz
movsb
mov
into
dec
testb
es
xor
pop
pop
jb
lahf
je
dec
scas
push
or
sub
daa
xchg
mov
cmp
jns
mov
shlb
or
pop
das
pop
cmp
js
mov
bound
adc
add
lret
mov
stos
or
mov
stos
add
fistpl
mov
cmp
mov
fdivrp
lock
mov
out
inc
mov
sub
xchg
jne
fistpll
mov
mov
push
and
sbb
cmp
test
dec
sub
clc
stc
popf
push
negb
inc
divb
xor
imul
in
inc
sub
sahf
mov
adc
popa
cld
pop
int3
mov
pop
lahf
add
and
fcomp
decb
push
cld
inc
addl
mov
sbb
jne
and
push
pop
mov
das
mov
notb
dec
jl
jl
nop
imul
jg
cmp
and
fstpl
fldt
fistps
das
pop
or
jne
jg
sub
mov
inc
and
call
hlt
pop
sub
fwait
rolb
inc
xchg
xchg
jp
jecxz
xlat
arpl
push
popf
sbb
xchg
add
adc
dec
dec
push
push
mov
jbe
pop
mov
sub
lods
mov
testl
cmpsb
adc
xor
xor
je
pop
and
mov
cmp
ror
lret
sub
dec
xor
jp
mov
lret
sbb
es
push
mov
ja
fcomps
push
pushf
std
adc
and
outsb
loopne,pn
in
cmc
outsl
sbbb
cwtl
mov
dec
xchg
in
rcrl
cld
test
mov
scas
push
and
cmc
fimuls
or
jb
pop
inc
xchg
push
gs
rcrl
jno
xor
cmp
sub
mov
sbb
pop
or
dec
inc
out
mov
inc
repz
int
imul
xchg
cmp
adcl
mov
xor
add
call
pop
fistpll
mov
mov
and
sub
rclb
inc
int3
ja
cld
mov
rorl
xchg
xchg
xor
es
cmp
or
nop
mov
imull
les
mov
push
jecxz
shrb
sarl
xlat
inc
push
mov
ficoms
dec
arpl
mov
mov
ret
sub
push
and
imull
lods
sar
out
xchg
push
mov
and
std
and
bound
push
dec
xor
jne
stos
pop
or
fsubs
stos
xor
cli
xlat
sbb
sbb
mov
out
dec
jb
pop
mov
aaa
lods
add
sar
filds
mov
mov
cmp
pop
cmpsl
lret
jecxz
fs
mov
or
notb
sub
sub
aad
psubq
in
mov
cmpsl
adc
mov
push
or
in
jo
and
xor
popa
add
cmpsl
cli
mov
and
dec
test
lods
lret
ret
popf
ja
mov
sbb
lds
aas
inc
arpl
jmp
jbe,pn
cmp
sbb
aaa
addr16
adc
loopne
inc
and
dec
jp
test
xchg
sub
ret
movsb
scas
cltd
mov
jb
push
shrl
jne
mov
sarl
xlat
inc
push
mov
and
bound
in
xor
cmp
xor
pop
in
sub
inc
repnz
mov
mov
jbe
stc
xor
scas
pop
das
in
pop
ret
sahf
mov
mov
dec
xor
inc
lret
clc
je
cmc
sub
add
das
push
jle
inc
dec
dec
add
out
push
dec
lods
dec
loopne
cld
fstp
mov
cltd
xchg
cmpsb
scas
mov
pop
test
xchg
test
cmp
cmpsl
cld
fisubs
pop
lds
repz
sub
aad
push
popf
push
or
bound
out
mov
int3
int3
in
jle
push
sbb
lea
stos
push
mov
pop
jo
mov
gs
loop
into
mov
test
scas
sarl
cmp
dec
and
dec
stc
out
push
mov
scas
lock
mov
je
fisubrs
mov
jmp
jge
or
call
icebp
jbe
sbb
fiadds
mov
dec
mov
push
push
push
arpl
and
imul
subl
pop
inc
fldcw
cs
xor
mov
jno
add
and
add
icebp
adc
sbb
lods
sub
mov
incb
xor
out
stos
xor
aam
out
jp
lods
bound
jp
fidivrl
push
sarl
movsl
jne
mov
repnz
add
or
lret
adcb
repz
adc
testb
cwtl
ffreep
sbb
and
addr16
cmp
cmp
cmp
dec
xor
jg
orl
and
mov
push
adc
push
cmpsl
cmp
hlt
ret
push
push
push
cmp
dec
and
cli
sub
lock
test
lahf
lret
sbb
hlt
pop
push
xchg
or
push
cltd
cmp
sbb
mov
or
ret
adc
inc
inc
in
imul
bound
cmp
lock
lods
pop
cmp
cwtl
cmpsl
mov
cmp
lcall
jne
jge
xor
jmp
mov
push
push
test
xor
je
aam
inc
out
mov
sahf
sub
and
out
arpl
arpl
shrd
adc
arpl
and
cmpsb
push
inc
sti
sbb
xor
push
fs
xchg
test
popa
pop
mov
int3
lahf
ret
dec
mov
mov
cmp
and
sub
mov
pop
sub
mov
xchg
subl
mov
jae
insb
fimull
test
inc
mov
pop
lods
inc
gs
lret
movsl
in
test
cmp
loop
aam
mov
aad
mov
jo
cli
mov
xchg
setb
jecxz
fistpll
iret
xchg
bound
aad
outsl
push
cmpsl
mov
sbb
dec
mov
rclb
iret
shl
negb
popa
clc
adc
pop
mov
insl
lods
xor
xor
push
in
loop
jle
mov
nop
orl
jns
arpl
orb
and
jno
cmp
xor
push
jp
jecxz
fcompl
inc
mov
xchg
push
push
xlat
mov
in
pop
insb
sbb
pop
cwtl
jmp
and
pop
iret
mov
xchg
bound
leave
sbb
ljmp
icebp
mov
rorb
and
jo
mov
jbe
lock
shrb
xchg
dec
mov
mov
cltd
sub
cltd
pop
ds
xchg
mov
mov
subb
pop
pop
iret
and
adc
or
je
adc
cmp
outsb
push
ficoml
out
add
out
xor
push
cmp
in
inc
push
stos
lods
scas
mov
sub
aad
sub
jns
mov
push
ljmp
xchg
push
bound
jp
lock
xchg
mov
pushf
mov
aam
push
dec
stc
ljmp
mov
mov
jmp
fs
xchg
xor
test
aas
loop
sub
add
or
mov
stos
outsb
dec
mov
test
imul
rolb
pop
stc
loop
adc
cld
jecxz
es
push
xchg
mov
loop
jle
lahf
lock
add
dec
jo
inc
ds
mov
push
mov
cmpsb
mov
call
clc
addr16
mov
and
jns
pop
pop
push
adc
fcompl
dec
fsub
pop
mov
xchg
cmp
dec
sub
scas
add
cmc
std
addr16
inc
and
pop
aaa
mov
hlt
pop
sbb
movsl
rcl
or
sbb
sbb
mov
and
cmpsb
jmp
das
mov
mov
sub
enter
push
bound
jmp
sub
inc
ret
sbb
add
dec
sub
xchg
test
xor
jne
sbb
or
inc
sbb
sbb
and
cmp
push
sub
add
das
mov
pop
or
je
adc
and
dec
inc
ficomps
add
cmp
add
aam
pop
sysexit
mov
add
icebp
pop
xor
sarb
mov
pop
mov
push
test
xor
adcb
and
sub
std
fldcw
cmp
inc
in
lret
mov
jmp
leave
cltd
push
jbe
sub
or
xchg
aas
dec
cmp
dec
mov
movsl
add
sar
fwait
mull
dec
mov
mov
loope
jne
xchg
rcrl
pop
sub
arpl
cmp
stos
adc
jns
dec
push
lods
adc
inc
out
lahf
not
cli
dec
mov
mov
mov
arpl
gs
stc
aad
mov
loop
mov
mov
push
xchg
data16
mov
cmp
sbb
test
mov
adc
and
lock
mov
or
aad
ret
add
push
std
imul
movsl
mov
iret
sub
mov
mov
jg
sbb
xchg
pusha
in
push
lret
mov
cmp
test
adc
shl
sbb
xor
mov
or
jl
mov
outsl
jle
jae
lret
sbb
sbb
mov
cltd
sqrtps
mov
fcomi
mov
mov
imul
add
loopne
inc
int
ja
int3
insb
mov
xchg
arpl
pop
jno
pslld
mov
out
dec
loopne
jno
jnp
clc
add
pop
jp
or
cld
jp
push
xchg
xor
idiv
cmp
xor
scas
out
sub
mov
adc
xor
pop
data16
xchg
push
rdmsr
pop
mov
cmp
shll
mov
mov
xlat
outsl
lds
and
mov
xor
insb
push
cmp
popf
xor
aas
xchg
sbb
cmp
mov
or
mov
testl
popf
mov
lods
out
or
rcl
in
insb
ror
fwait
and
inc
cmp
add
test
test
cs
loopne
ds
ficomps
cmp
sub
nop
push
sbb
or
fnstsw
cmp
lods
leave
push
jecxz,pt
adc
add
push
mov
daa
add
sbb
orl
psrad
jnp
insl
test
sbb
and
mov
cmp
mov
test
lods
dec
xchg
adc
test
aas
dec
xchg
lds
cmp
ret
xor
adc
mov
je
and
and
inc
ret
mov
pop
push
dec
mov
gs
push
sar
pusha
xor
pushf
push
lods
fcmovnb
fsubrl
and
test
mov
dec
les
call
jle
cmp
ds
movsl
mov
jae
adc
ja
lea
inc
sahf
dec
out
out
out
add
outsl
adc
sbb
jmp
jmp
adc
pop
dec
lcall
dec
and
jns
fwait
hlt
in
jae
in
mov
mov
mov
jae
mov
sbb
jmp
add
cmp
aas
arpl
sbb
inc
movsb
push
inc
add
imulb
jl
mov
in
cltd
mov
sahf
cld
or
daa
fs
aas
fnstenv
sahf
stos
xor
cltd
mov
adc
mov
mov
cmpsl
ljmp
test
movsb
stos
or
cmp
xchg
imul
idivb
es
inc
inc
dec
dec
xchg
xchg
adc
dec
fwait
jo
clc
or
out
jecxz
push
rol
sbb
push
mov
xor
lds
jno
cmp
xchg
and
idivl
sub
or
filds
mov
mov
lods
xor
inc
bound
mov
cmp
sbb
mov
pushf
mov
push
mov
xor
nop
add
mov
lret
and
fistl
mov
fcmovnu
adc
inc
inc
movsb
inc
and
pop
in
push
lcall
iret
and
into
out
xchg
adc
sbb
add
xchg
iret
insl
mov
fdivrl
adcl
stos
ss
jnp
mov
test
inc
shll
aaa
mov
push
repnz
xor
shll
pop
mov
sub
mov
out
aad
or
cmp
push
jae
adc
inc
into
mov
iret
sbb
lock
dec
sbb
or
pushf
leave
push
shll
mov
pop
nop
adc
cld
pop
imul
fwait
loopne
das
fld
sub
aas
mov
out
loop
cltd
xchg
sbb
out
lret
lds
mov
push
dec
insb
scas
ja
mov
psubusw
push
lock
or
xor
leave
xchg
pusha
fidivrs
popa
push
daa
ret
push
cmp
add
sub
stos
loope
ljmp
aas
lds
and
cmc
cmp
inc
lahf
push
pop
or
xchg
rep
ret
outsb
sbb
repnz
dec
in
aad
cld
sarb
dec
addr16
xchg
fxch
fwait
daa
dec
inc
sub
sahf
adc
imul
cmpsb
inc
jns
test
sub
enter
ret
jae
gs
sub
adc
push
nop
loope
dec
data16
test
out
sar
mov
aaa
jno
xchg
out
pushf
in
and
icebp
jg
popf
xchg
add
mov
test
fistl
xchg
xor
or
mov
enter
mov
icebp
clc
xchg
aaa
outsl
or
add
mov
movl
pop
and
adc
out
roll
cld
mov
add
popf
loop
sarb
fs
popf
mov
fcmovb
mov
push
or
dec
ss
sarl
dec
push
sbb
mov
sbb
or
mov
and
sbb
xor
jg
test
jp
adc
sbb
inc
xchg
and
sub
mov
lods
out
fdivl
mov
inc
jecxz
mov
dec
or
sub
mov
outsb
int
aad
push
push
add
inc
xor
mov
mov
mov
cmp
push
shrb
push
pop
aad
xor
mov
pop
in
push
loop
data16
insl
iret
adc
mov
cmp
sbb
ret
insb
rorl
sbbb
pushf
dec
adc
sub
scas
xchg
cmp
sahf
pushf
repnz
test
cmp
hlt
mov
sub
inc
sub
ret
daa
jg
inc
inc
push
mov
dec
push
inc
or
xchg
fildl
mov
jl
add
imul
loope
push
mov
and
xor
std
cmpsb
andl
pop
orb
or
das
sub
roll
dec
test
incb
es
jmp
pop
std
and
mov
aas
test
or
push
push
jno
jg
fsubrl
daa
push
loope
adc
adc
lret
out
xchg
into
nop
flds
cmp
adc
enter
fdivl
add
mov
rorl
fs
call
enter
push
inc
test
bound
inc
cmp
or
pop
movsb
cwtl
pop
xchg
sub
frstor
sbb
bound
adc
sbb
jmp
adcl
xor
andb
outsb
aaa
fadds
ja
pop
add
mov
rcpps
mov
push
xor
mov
jmp
in
mov
fwait
in
inc
icebp
push
pop
push
insb
out
xchg
pop
dec
out
aam
roll
push
cmpsb
fmull
insl
daa
jle
es
sub
out
mov
imul
jmp
push
pushl
inc
aaa
je
and
push
and
fnstcw
in
test
mov
cmp
ljmp
fsubl
inc
jns
cmpsb
int
insb
adc
push
mov
xchg
pop
lods
add
movl
add
jg
adc
or
rcr
add
add
or
push
out
xchg
inc
sbb
jo
mov
cmpsl
xor
movnti
je
bound
sbb
pop
ss
mov
fld
pop
or
push
enter
mov
cld
pop
mov
or
and
in
sub
or
push
shll
pop
int3
jle
shlb
cs
addl
aad
sub
inc
push
movsl
lret
pop
xchg
or
jp
and
lock
out
cltd
pop
xchg
dec
fwait
outsl
add
add
sub
and
rolb
leave
or
xor
and
ret
inc
scas
or
mov
push
xchg
ja
sbb
leave
cmp
jo
xchg
xchg
inc
push
imul
cmp
adc
xlat
jae
dec
push
or
push
je
movsl
stos
out
fucomp
sbb
mov
adc
das
ret
inc
fwait
mov
dec
and
rol
mov
or
insb
xor
or
in
inc
sbb
xchg
xor
in
adcb
dec
mov
sbb
push
jns
test
pop
ja
sbb
int3
jmp
les
loope
js
sbb
jno
sub
inc
or
addl
lds
add
fstpt
inc
aas
lods
popa
or
popw
sti
jg
repnz
outsb
xchg
fcom
inc
test
cmp
pop
cwtl
cli
out
dec
adcl
mov
test
jmp
insb
je
mov
je
or
sbb
enter
xchg
inc
test
xor
rorb
subl
imul
js
aaa
cs
xlat
xor
push
repnz
enter
pop
inc
dec
pop
and
gs
jl
lea
movb
sti
xor
adcb
stos
lods
xorb
lret
movsb
fwait
les
push
adc
call
movsl
pop
dec
ds
adc
out
cmp
or
or
outsl
pop
clc
popf
int3
sub
das
cmp
popf
in
adc
stc
ror
or
mov
jno
xchg
loope
push
mov
rcl
out
repnz
inc
sbb
mov
fists
mov
add
mov
test
adc
adc
stos
arpl
xchg
push
or
pop
daa
cmp
and
xor
cld
sub
xor
xor
dec
mov
fsubrl
mov
hlt
inc
cmp
and
mov
mov
xor
outsl
out
xchg
ja
sub
xor
movsb
stos
shl
cmp
loop
lcall
testb
add
rcl
xor
and
repz
xchg
xchg
fbstp
or
fidivs
jae
and
add
gs
loop
jb
imul
enter
adc
sub
mov
xchg
add
sbb
ret
pop
call
int3
fisubs
data16
aaa
ljmp
fisubrl
xor
stos
ja
idivb
pushf
jmp
lahf
adc
xchg
pop
out
mov
xor
insl
sbb
xchg
xchg
cli
out
sub
adc
pop
pop
addr16
pusha
xor
fcomps
mov
leave
mov
pop
mov
pop
xchg
dec
inc
jne
adc
add
cmp
popf
pusha
shlb
rclb
lds
sarl
cld
hlt
int
jecxz
in
jno
mov
xchg
loopne
cmp
je
dec
jae
test
pop
mov
mov
push
and
or
fdivrs
jmp
push
inc
jecxz
jne
jecxz
imul
cmp
repz
cltd
aam
shl
mulb
sbb
pop
cltd
jg
ja
jmp
jbe
les
out
adc
lahf
mov
push
ljmp
push
pop
mov
xlat
sub
stc
rclb
cmp
sbb
mov
sbb
xchg
mov
mov
pop
subl
cmpsl
jns
adc
mov
out
jg
sbb
mov
fisubl
mov
pop
fisubrl
lods
mov
jbe
mov
cmp
cmpsl
clc
pop
add
xchg
pop
mov
sti
and
data16
addr16
push
jmp
push
xchg
and
cmp
pop
jmp
sub
pop
ljmp
xchg
call
pop
fsub
shr
leave
test
divl
icebp
repz
in
sub
pop
in
cltd
fisttpll
xchg
fucomi
ja
icebp
jbe
js
and
cwtl
lods
sbb
mov
stos
bound
adc
dec
enter
jge
fs
pusha
hlt
push
mov
pop
cmc
inc
mov
add
xor
shrb
pop
jnp
jmp
push
test
mov
cmpsb
adc
fmuls
mov
dec
push
inc
cmp
sub
push
xor
xlat
cltd
ret
pop
sbb
fcompl
and
filds
nop
inc
sahf
or
les
dec
jl
mov
fcmovnu
mov
cld
mov
or
hlt
lcall
outsl
sbb
mov
adc
outsl
out
outsb
xor
imul
inc
mov
rcll
ljmp
lcall
fistl
ret
jbe
mov
or
lods
sub
mov
pop
xchg
fsubrp
outsb
out
cmc
ja
fidivrl
and
cmp
mov
pop
pop
loop
int
adc
popf
stc
mov
cli
push
add
dec
mov
xor
lret
aad
inc
push
jp
jp
push
mov
xor
sti
push
xor
mov
bnd
sub
imul
movsb
loop
pop
lock
push
repnz
pop
push
fdivrl
jne
nop
mov
mov
cmp
neg
in
stos
lods
xorb
pop
dec
cwtl
dec
std
cmp
add
jmp
sti
xchg
rcrl
insb
mov
das
mov
xchg
lods
xor
xchg
mov
inc
fwait
test
call
lcall
and
repz
rolb
jge
add
sub
adc
fs
adc
mov
pop
pusha
or
in
sti
mov
jne
mov
xchg
sarl
and
sbb
push
int3
call
gs
mov
fdivrs
imul
mov
xchg
scas
lea
xchg
gs
inc
cmp
pop
sub
mov
call
stos
sbb
add
inc
leave
repz
dec
nop
push
fists
inc
inc
pop
iret
clc
test
shll
mov
sub
mov
daa
or
cmp
xchg
jbe
leave
and
xchg
push
f2xm1
inc
mov
jl
inc
sysret
add
les
pop
jne
lods
cmp
cmpsl
mov
fstpt
leave
sub
not
jmp
stc
adc
dec
cwtl
in
test
ljmp
std
cmp
repnz
movsl
cmc
jns
cmp
pop
ss
dec
ds
sub
sarl
test
or
es
enter
lahf
mov
ljmp
xchg
aam
add
fistl
and
jbe
lods
push
pop
sbb
daa
dec
insl
xchg
inc
xchg
mov
aas
mov
fdivrp
xchg
cmp
pop
sub
jle
and
and
add
or
jp
insl
mulb
divl
push
cmp
icebp
add
dec
test
xorb
push
outsl
sub
jbe
iret
fidivrl
dec
test
push
nop
jbe
xor
push
add
out
int3
mov
mov
push
insb
sbb
mov
jmp
adc
aam
mov
stos
hlt
pop
out
inc
add
mov
cld
in
mov
test
adc
iret
roll
adc
jge
xchg
shr
mov
push
push
mov
inc
inc
aas
mov
imul
out
sub
icebp
xchg
testl
arpl
stos
shl
dec
and
hlt
loope
jno
push
iret
or
into
jge
outsb
mov
mov
mov
push
hlt
cmp
xor
ret
rol
jl
loope
js
dec
add
rclb
add
fiadds
pushf
in
mov
ja
adc
dec
and
xor
andb
push
ror
dec
dec
imul
out
daa
movsl
and
push
into
adc
les
inc
movsl
and
mov
in
xor
sbb
adc
jnp
pop
push
shll
cmp
mov
mov
fcmovne
jb
dec
test
cs
jb
mov
xorb
jge
ret
cwtl
jge
jae
mov
add
pusha
jle
pop
xchg
lahf
cmc
inc
pop
movsb
repnz
jle
dec
fcomps
aam
int
push
rclb
add
and
dec
cld
pop
inc
xor
sub
fwait
lock
inc
mov
jb
fcmovu
repnz
xchg
push
sbb
hlt
sub
inc
adc
jle
addr16
jnp
or
repz
pusha
push
mov
jl
outsb
and
fcoml
movsl
or
lcall
pop
inc
test
call
or
stos
movsl
fcompl
mov
cs
add
sub
add
mov
cltd
sti
call
sbb
bound
sbb
inc
aaa
insl
imull
cmc
inc
mov
lret
jns
into
out
cli
add
pop
dec
clc
mov
add
lods
shll
or
pop
test
mov
ljmp
pop
mov
sbb
pushf
mov
push
push
sub
mov
mov
add
push
mov
jg
fstpt
dec
jns
mov
add
or
pop
pop
in
adc
jp
dec
or
cmp
adc
jecxz
ss
sub
ret
add
mov
dec
jmp
addb
rolb
and
lods
movsb
enter
testb
inc
cld
fnstenv
sti
rol
xchg
leave
sub
or
sbb
fcom
cltd
ret
push
jecxz
cmp
mov
js
mov
xor
decl
out
out
fidivs
mov
add
xor
andl
fadd
cltd
sarl
loop
pop
dec
icebp
push
test
les
mov
lcall
out
idivb
and
jl
add
inc
in
pop
cmp
pop
stos
fsubr
xor
mov
arpl
enter
mov
mov
lock
in
pop
outsb
jecxz
add
sub
clc
sub
cltd
fadds
clc
adc
xchg
cld
cmpsl
shll
loope
pop
mul
icebp
aam
stos
jecxz
cmp
std
bound
mov
dec
enter
iret
pop
mov
movsb
into
xor
scas
add
ds
mov
mov
lret
fnstcw
or
loope
mov
adc
out
jecxz
out
mov
push
fucomip
jnp
pop
movsb
xor
lcall
inc
imul
and
in
mov
inc
mov
rorb
int
stos
pop
mov
int3
pop
cli
fsubl
cmpl
sub
stos
loope
and
outsl
add
sbb
in
push
xor
ds
fdivl
data16
aaa
js
lock
movsl
lret
jecxz
ljmp
jo
fsubl
stos
add
mov
push
add
daa
call
mov
iret
stos
add
arpl
int3
and
loopne
ds
add
inc
leave
push
mov
test
in
call
pop
add
incl
dec
jno
lock
jg
cld
insb
xor
cmp
dec
push
jne
adc
repnz
inc
push
inc
cmc
xor
mov
mov
mov
sub
fcmovu
lahf
movsb
mov
leave
aas
hlt
and
scas
clc
xchg
ret
sbb
pop
adc
xlat
testl
jecxz
lahf
pop
add
imul
fmul
adc
cmp
cmc
lret
xor
aaa
fisubrl
pusha
fisttps
repnz
aam
pop
sub
sub
js
scas
ds
push
stc
lods
jl
mov
in
mov
arpl
mov
jne
dec
and
out
ret
xor
jp
cmp
insl
int3
mov
cmp
lea
jl
addr16
xchg
movsl
xchg
les
mov
in
pop
xchg
push
jbe
dec
jne
jge
push
xor
xchg
ret
add
mov
jmp
adc
into
popf
adc
push
xchg
roll
dec
mov
xor
mov
nop
hlt
hlt
call
jno
fldcw
outsl
sbb
sbb
call
out
xor
scas
jmp
jbe,pn
les
sbb
mov
fiaddl
push
pop
push
sub
enter
push
clc
push
and
addb
lret
cld
adc
and
mov
pop
dec
push
push
lahf
and
test
and
mov
nop
sbb
mov
or
scas
inc
dec
cwtl
stos
cld
sub
aam
push
pushf
push
mov
mov
cwtl
pop
push
stos
adcb
add
lahf
int
xchg
out
add
std
and
dec
rol
lahf
jb
lahf
cld
mov
out
cmp
scas
push
sub
sub
push
pushf
pop
lahf
adc
sub
mov
pop
stos
pop
jecxz
pop
sahf
mov
popa
lret
in
ret
xchg
and
fnstcw
mov
js
push
pop
dec
mov
mov
xchg
icebp
add
mov
mov
scas
pop
cmpl
inc
fmul
cmpsb
mov
dec
push
jg
rcrl
xchg
or
sbb
adc
pusha
into
aaa
iret
push
push
je
mov
out
pop
sub
lret
call
rolb
orb
bound
pop
cs
push
test
mov
mov
out
icebp
or
and
mov
or
cmp
inc
mov
jbe
gs
jno
xchg
movsl
fdivp
and
pop
jecxz
push
pop
fstpl
jb
lods
mov
mov
push
aaa
xchg
mov
cmp
fnstsw
fdivrs
adc
ret
scas
mov
push
dec
loopne
xlat
push
je
fdivs
iret
lret
mov
sbb
pop
add
inc
fs
shr
stos
sahf
xchg
sbb
daa
sub
inc
or
mov
test
call
dec
cmp
pop
push
jae
xor
or
test
xchg
js
enter
cmpb
mov
arpl
push
lahf
dec
js
push
jg
fwait
je
push
lret
insb
repz
inc
jge
push
jbe
gs
mov
sbb
sbb
add
mov
xor
add
sub
adc
inc
sbbl
jg
mov
lahf
pop
aam
ds
cld
dec
add
pop
mov
cmpsb
popf
in
cmp
jae
sbb
and
test
lds
mov
divb
jae
aam
aam
sub
popf
push
xchg
xor
ss
mov
popf
test
mov
or
mov
adc
in
lods
fsubrl
mov
fld
ljmp
testl
idivb
in
fidivrs
cmp
jb
test
or
and
xlat
loope
pusha
out
outsb
into
adc
jmp
fildl
cltd
xchg
pushf
in
aad
inc
lcall
js
xchg
cmp
insb
cmpsl
cwtl
scas
cmpsb
xchg
popa
sti
je
insl
adc
fs
lds
cld
lret
shlb
and
mov
andb
lods
sub
sbb
inc
lea
daa
push
cld
cmp
mov
testl
je
inc
call
mov
lcall
in
sbb
xchg
sar
jno
jp
push
jecxz
fst
pop
jae
inc
jle
scas
jle
pop
cmp
push
push
sub
js
sbb
loope
pop
jns
shll
nop
mov
mov
xor
push
mov
rcll
jno
ljmp
outsl
dec
jge
adc
imul
mov
mov
mov
outsb
sarl
lret
jg
fwait
xor
aad
rcrb
dec
xchg
adc
das
lods
push
das
mov
es
cmpsl
cmp
test
arpl
push
out
mov
mov
hlt
out
pop
or
ss
sarb
dec
push
aaa
sub
stos
cltd
sbb
mov
adc
push
ja
lods
cmp
nop
cmc
pop
bound
jb
shr
add
lods
pop
ret
lahf
cmp
pop
loopne
ja
push
das
jmp
jae
in
int3
push
push
aas
movsl
mov
push
adc
in
jbe
jae
xchg
jge,pt
mov
adc
stc
jg
call
jecxz
xchg
ficoml
aad
dec
fbld
in
loope
cmp
mov
dec
shr
sub
pop
leave
loope
adc
mov
jns
lahf
dec
sbb
xchg
mov
repnz
jecxz
scas
push
sbb
pop
and
mov
popa
dec
mov
pop
push
jecxz
and
mov
adc
add
dec
sbb
into
xor
jmp
mov
inc
imul
xchg
dec
ret
or
xor
fisttps
mov
pop
clc
add
sub
stos
jle
sbbl
fidivl
arpl
xchg
jne
arpl
and
aad
das
inc
and
or
dec
add
mov
inc
jg
pop
mov
push
cmpsl
daa
adc
sub
out
xor
test
push
xor
push
pushf
loope
dec
sahf
pop
add
rcl
pop
mov
cmp
xlat
icebp
jb
lcall
fadds
lods
es
jae
imul
and
push
gs
scas
movsl
bound
or
sub
jo
sbb
sub
nop
mov
xor
jne
cwtl
xor
and
jno
out
xlat
in
inc
testb
cli
jecxz
mov
scas
mov
xor
push
cmpsl
scas
in
fisubl
dec
into
lret
aad
adcb
and
insl
and
jb
adc
pushf
jle
mov
in
ljmp
notb
rcr
cmp
shrb
data16
mov
out
das
push
mov
xor
sub
repnz
cmp
lret
push
aas
stos
lcall
mov
lds
mov
dec
xchg
jge
push
xchg
pusha
lahf
insb
divb
sahf
sub
fidivl
sbb
push
dec
loopne
fdivrs
pop
inc
mov
mov
push
test
jne
fcomip
ret
in
lods
ds
data16
fs
in
or
bound
int3
jle
sbb
mov
dec
movsb
ljmp
xchg
repnz
mov
add
into
mov
and
jmp
add
fbstp
jmp
adc
rolb
mov
nop
xor
test
cwtl
inc
cmpsl
nop
bound
xor
push
push
jecxz
int
jmp
adc
rolb
mov
nop
xor
cmp
jmp
das
mov
push
jecxz
int
xchg
out
dec
or
inc
jnp
rolb
fmull
mov
bound
xor
and
out
ffree
divl
outsl
inc
jno
movsb
dec
cmpsl
shrl
cmp
or
xlat
add
adc
js
push
dec
push
inc
fmull
or
subl
mov
mov
lahf
or
pop
pop
push
bound
adc
lds
jle
mov
lds
clc
mov
mov
pop
subb
sbb
sahf
sub
repnz
or
cli
cmp
sub
pop
pop
scas
sar
daa
mov
push
test
mov
fsubrl
and
out
leave
inc
pop
or
fstpl
cmp
repz
inc
ds
pushf
mov
jo
je
test
ret
jb
outsl
inc
mov
popf
sbb
add
ljmp
stos
icebp
mov
inc
or
and
rolb
mov
rolb
das
xchg
push
jno
mov
push
mov
out
es
mov
lcall
lret
idivb
push
or
mov
sarb
loope
jnp
js
add
mov
sub
push
std
fwait
sahf
popf
sbb
xchg
nop
jg
test
jmp
popf
push
dec
fstpt
xor
pop
cmpl
jmp
cmc
push
inc
dec
lahf
mov
fldenv
dec
cld
stos
test
sahf
mov
sub
fnstenv
fs
lahf
es
popa
xchg
fmull
sbb
mov
les
imul
pop
sub
lds
pop
pop
jmp
ja
nop
or
fmuls
mov
add
mov
mov
sbb
mov
lret
push
jae
fstpl
xchg
and
push
pushf
lock
push
mov
popf
test
or
in
mov
xchg
pushw
jp
and
cmpsw
cmc
cmp
dec
add
and
cli
popf
or
push
jno
and
push
cmpsl
fnsave
inc
outsl
shrl
fnclex
imul
and
push
out
push
loop
push
add
ljmp
lock
bound
adc
shll
xchg
push
push
subl
cld
dec
test
add
stc
jns
bound
or
push
outsl
pop
cli
notb
lcall
lock
scas
xor
jae
and
push
mov
jmp
pop
mov
mov
mov
pop
mov
cmp
adc
rcr
xchg
rorb
clc
in
faddl
repnz
subb
outsb
pop
mov
ret
xchg
ja
ds
add
mov
out
cmovp
push
clc
leave
xchg
dec
mov
inc
xor
mov
aam
or
sahf
add
flds
mov
mov
jle
xor
pop
das
je
cmc
call
xor
stc
mov
stos
mov
cmp
not
add
out
mov
call
sbb
cli
ret
js
data16
jle
add
movsb
jecxz
push
ror
sub
mov
ret
or
adc
ret
inc
sarl
in
scas
mov
and
rcr
inc
mov
orl
mov
and
ss
pop
xchg
lcall
lret
fucom
add
dec
int
inc
cmp
push
data16
fs
dec
mov
icebp
test
jae
ja
mov
mov
cmc
pop
add
rcll
inc
lods
test
sub
aam
rcrl
mov
jns
dec
jle
ret
movsb
pop
sbb
out
dec
lcall
mov
mov
pop
orb
js
pop
mov
push
frstor
xor
adc
jne
or
ss
popa
and
jecxz
mov
cmp
into
mov
loop
cwtl
aas
shrb
ss
iret
or
enter
call
mov
mov
fstpt
xor
addr16
push
decl
pop
dec
pushf
pop
lahf
testb
mov
imul
icebp
jo
jl
adc
xchg
cltd
xor
adcb
clc
jl
and
rcll
push
mov
inc
mov
cmp
fsubrs
fisttpll
mov
fcomps
pop
xor
lret
sub
and
add
inc
adc
cmp
ss
xchg
mov
mov
imul
xor
fwait
clc
cmp
adc
clc
fisubs
cmpsb
mov
pop
inc
notb
test
xorl
outsb
sub
inc
push
data16
int
int3
push
mov
or
clc
mov
mov
aad
pop
stos
shld
test
in
push
insb
and
iret
sub
xlat
not
sub
inc
jecxz
dec
mov
fistpll
jmp
addr16
das
sbb
test
xchg
int3
movb
cmpsl
mov
gs
or
sbb
and
shlb
call
movsl
add
loope
xchg
daa
insl
in
aaa
add
lahf
push
in
mov
cmp
test
xchg
pop
push
lret
jns
in
xor
divb
popa
int
push
loop
and
sbb
enter
xor
and
mov
in
notb
leave
mov
aad
and
adc
push
popf
pop
les
jle
add
add
test
xor
and
mov
push
cmp
js
cli
loope
iret
loope
and
out
test
hlt
cli
in
xchg
rorl
pushf
add
dec
adc
mov
pop
scas
std
jp
mov
jmp
mov
or
imul
xor
xor
mov
xchg
jl
lcall
subl
imul
inc
mov
sti
add
outsl
in
outsl
cld
rol
cwtl
adc
mov
push
mov
xchg
mov
jecxz
sahf
cld
pop
xor
mov
movsb
mov
faddl
add
adc
jg
jmp
insl
mov
pusha
jecxz
sub
adc
push
mov
mov
pusha
mov
out
push
ret
cmpsb
dec
cwtl
inc
repz
mov
mov
fs
mov
inc
daa
out
push
xchg
or
xchg
or
pushf
rcrl
dec
jg
inc
enter
dec
mov
pop
mov
add
sub
xchg
add
cmp
ljmp
iret
push
sarb
push
push
cmp
dec
inc
adcb
mov
lret
sub
out
xchg
in
jecxz
lods
enter
lea
xchg
dec
sub
insb
xor
pusha
lahf
sbb
inc
xchg
mov
cmc
stos
es
fbstp
jg
aas
lock
ss
inc
push
mov
andb
mov
cli
push
movsb
jns
aas
fwait
mov
out
sti
jge
add
jge
ret
sub
aad
push
testb
shlb
arpl
pusha
popa
cmpsl
mov
insb
jp
shlb
nop
int
movsb
hlt
lods
fldenv
cwtl
sub
imul
and
and
jae
sbb
adcl
inc
and
xchg
ret
sbb
sbb
fptan
scas
pop
inc
sbb
imul
jmp
mov
les
dec
xlat
cmp
and
ljmp
xchg
adc
pop
sub
xor
sub
inc
pop
push
fwait
insb
std
sub
fimuls
dec
jo
push
push
fs
xchg
xchg
push
xchg
fmuls
push
or
cmp
push
out
mov
cli
pusha
xchg
aaa
mov
inc
sub
js
xchg
lock
inc
in
movsb
lahf
sar
jg
jnp
in
stc
in
std
stos
cwtl
or
jp,pt
loopne
sub
ret
mov
inc
insl
push
mov
iret
cmp
sti
lret
jne
pop
shll
icebp
stc
arpl
outsb
mov
jge
iret
std
cmp
fucomp
jo
mov
pop
popf
nop
scas
pop
das
xchg
push
adc
idivl
aaa
mov
mov
aas
push
divb
sbb
sub
in
push
insl
outsb
jbe
push
xlat
imul
pop
xor
fldenv
and
jno
xchg
cs
sub
xorb
bswap
lret
lds
in
mov
movsb
in
sti
pop
cmp
mov
repnz
stos
flds
push
inc
push
aad
fsub
mov
repnz
push
shl
int
pop
mov
mov
sub
js
xor
add
sbb
sub
sar
mov
jae
sub
and
insb
or
or
mov
ficompl
cmpsb
mov
lea
jp
loope
jmp
inc
aas
mov
push
pop
add
loope
dec
orb
xchg
sarl
cmpsb
fldl
call
rcrb
mov
sbb
and
cmpsl
sbb
inc
jno
xchg
mov
fistpll
mov
mov
out
or
lds
sbb
lds
push
pop
push
add
or
mov
adc
xchg
jns
sbb
jmp
stc
popf
sub
push
jb
pushf
aam
mov
xlat
ljmp
inc
cmpsb
fwait
or
xchg
jae
cwtl
cld
jg
sbb
sbb
cmp
cmpsb
xchg
sub
gs
pop
and
xchg
cmp
aaa
mov
lret
data16
dec
jmp
ficoml
mov
fidivs
jae
inc
mov
fsubr
lock
mov
jns
lea
in
in
mov
or
mov
cmp
jnp
xor
push
fwait
sub
lahf
or
cli
xor
adc
dec
loopne
test
repnz
incl
les
and
sub
cli
std
jne
lahf
out
mov
sbb
push
or
loopne
mov
adc
in
jge
nop
dec
xchg
cmc
outsl
xchg
push
sub
adc
xchg
cmpsl
xlat
xor
xchg
scas
push
and
lret
insb
mov
loope
out
and
int3
loop
cwtl
sbb
sbb
cltd
add
pushf
cli
jmp
lahf
push
jle
cs
es
xchg
imul
popa
add
add
inc
mov
xchg
mov
leave
out
push
scas
rol
xchg
xchg
imul
ja
mov
leave
mov
sbb
test
xchg
xchg
xor
out
or
xchg
or
iret
add
mov
push
imul
mov
adc
arpl
lods
cmp
js,pt
and
pushf
or
sbb
inc
mov
cld
jns
cmp
xchg
popf
and
and
pop
mov
iret
jmp
mov
push
xor
push
xchg
sti
mov
rol
sbb
xchg
mov
adc
or
mov
mov
xor
or
xchg
ljmp
repz
push
dec
push
ljmp
sahf
xlat
repnz
out
ss
jbe
popf
sbb
and
cli
leave
or
sbb
scas
sahf
mov
sarl
lods
add
cmc
adc
call
jle
stc
sti
mov
lea
cli
dec
aad
push
xlat
add
cmp
push
daa
mov
ds
mov
mov
mov
pop
add
jecxz
fcompl
dec
xchg
or
test
cld
aaa
sbb
push
std
xor
aaa
in
push
test
jne
cmp
xchg
jl
ljmp
popf
cld
cmp
into
adc
jo
add
rorl
pop
sti
sbb
dec
xor
outsb
fiadds
push
sub
mov
xchg
bound
mov
adc
pop
inc
sbb
add
mov
mov
push
faddl
mov
and
jge
or
cmp
pop
xor
les
cmp
nop
out
js
xchg
sub
scas
insb
mov
sbb
sti
cli
xor
mov
jns
inc
cmp
int3
movb
mov
cmpsb
mov
and
jb
sahf
cmp
lahf
cmp
or
jne
shrl
repnz
andb
rdmsr
push
jge
lret
imul
add
enter
mov
sub
imul
addl
jge
test
push
cmp
lock
sub
test
or
ret
dec
sti
pop
add
inc
imul
test
push
aas
call
leave
lods
mov
fstps
mov
inc
shlb
add
enter
insb
unpcklps
pop
out
fdivs
cs
cld
and
sub
adc
fdivl
pop
mov
lock
vpunpckldq
mov
out
mov
mov
or
and
xchg
fildl
fmul
out
pop
in
adc
and
lea
sti
dec
leave
fdivrp
or
lcall
cwtl
inc
sub
repnz
das
sbb
cmp
cmp
stos
pop
jp
pop
xlat
cmp
mov
cwtl
rol
mov
lret
rcl
inc
mov
jbe
jne
jne
daa
dec
rol
and
int
cmp
inc
push
scas
cwtl
jecxz
repnz
shlb
pop
lcall
pop
cmp
or
add
mov
mov
lock
cmpsb
loop
add
out
out
ficompl
adc
xchg
fdivrs
xor
lret
push
jmp
mov
cmp
jmp
inc
outsl
adc
and
mov
and
adc
sbb
enter
add
sbb
jge
imul
dec
ljmp
sbb
scas
xchg
or
aaa
neg
ljmp
out
jns
mov
add
sbb
cli
in
test
clc
lret
jp
ss
fldenv
movhps
inc
xor
jle
imul
dec
loop
jg
movsl
movsl
loopne
sbb
xchg
lahf
xorb
inc
in
push
dec
imul
mov
push
jo
sub
aas
into
inc
xlat
int3
push
jb
stc
rol
xchg
out
das
addr16
pop
bound
cmp
jg
inc
mov
jp
test
sub
xor
lret
jmp
shll
xchg
mov
xlat
sbb
cwtl
adc
sub
cmp
aas
shlb
test
ret
incb
out
push
push
pop
dec
movsb
add
push
hlt
loope
mov
xor
mov
lock
push
pavgw
lret
adc
inc
aas
aas
js
mov
or
push
outsb
hlt
push
cmp
lret
rol
xchg
push
popa
add
test
cmp
xchg
ret
popa
mov
xchg
xchg
lods
xor
inc
iret
test
mov
cmp
and
or
lods
fs
jbe
mov
and
and
mov
lds
push
je
push
xchg
data16
ljmp
popa
xchg
mov
and
jl
cmp
and
mov
jno
pop
xchg
lcall
pop
xchg
add
mov
mov
pusha
or
sti
sbb
xor
dec
loop
mov
mov
enter
ja
std
int3
repnz
add
dec
addr16
call
out
fisttpl
pop
addb
dec
inc
lcall
stc
fdivs
cmc
arpl
lods
or
xor
sub
xor
addr16
xor
sbb
jb
pop
stc
jo
je
in
push
inc
pop
jge
inc
sbb
lret
adc
daa
loopne
lret
andl
enter
mov
push
int
cwtl
push
incb
and
imul
xchg
js
daa
add
movsl
or
inc
xor
mov
enter
pop
and
scas
and
jmp
inc
pavgw
insl
mov
sbb
ret
push
or
imul
imul
or
imul
mov
add
mov
push
lods
in
popa
mov
push
ret
inc
adc
push
mov
outsb
sbb
rcll
cmp
daa
push
aaa
leave
mov
lods
lods
sbb
pop
push
stos
cmp
push
notl
cmpsl
or
lret
ljmp
cwtl
mov
or
or
fnstenv
xchg
or
test
cmp
and
and
adc
lcall
add
je
cmc
enter
fimull
dec
shlb
ja
inc
push
hlt
test
jge
push
or
push
add
lret
sahf
mov
imul
pop
sub
in
cmp
ljmp
xor
or
out
adc
sahf
add
popf
psrad
mov
inc
out
gs
ja
sub
jle
add
mov
dec
and
sub
jo
xlat
hlt
jg
sbb
test
aas
cs
mov
in
sub
ss
addb
sarl
dec
push
inc
aam
push
test
pop
inc
insl
mov
dec
cwtl
aas
dec
cmp
aad
pushl
inc
test
push
and
jns
pop
push
fstps
push
test
shll
and
test
int
nop
lcall
loop
scas
lods
xchg
mov
outsb
andb
arpl
pop
or
add
clc
mov
sub
ja
xlat
loope
call
xor
fnstcw
arpl
or
dec
repz
testb
mov
or
sbb
cmp
xor
cmp
adc
lea
fstpl
cmp
cltd
stos
mov
jge
out
sahf
lods
mov
cmpsl
fldt
fs
aas
icebp
sbb
push
ljmp
mov
and
mov
pushf
inc
movsl
aam
mov
int
cmp
mov
mov
mov
mov
add
pop
sub
stos
inc
in
sbb
repnz
sti
dec
into
cmp
sbb
jo
aam
leave
in
dec
shll
xor
adc
ds
cmp
xchg
mov
mov
pusha
outsb
sub
cmpb
lods
lret
dec
orl
aam
cmpsb
es
lds
nop
adc
inc
and
sub
leave
mov
push
rclb
pop
push
scas
sbb
mov
and
sbb
xor
push
add
xchg
push
loopne
mov
mov
add
pop
pop
push
loopne
pop
rol
adc
int
pop
in
sbb
pop
add
loopne
sarl
pushf
aaa
xchg
fs
ret
add
fmulp
sbb
sbb
repz
jns
cs
inc
mov
in
mov
test
or
or
jns
cmc
push
insl
mov
dec
aad
rcr
jle
pushf
and
pop
div
mov
mov
leave
idiv
aam
add
jl
lock
pop
test
idiv
pop
pop
sbb
xlat
xorl
inc
ljmpw
add
mov
push
xchg
cmpb
out
sbb
lock
and
bts
negl
mov
cmc
shlb
je
dec
inc
stc
int3
test
imul
iret
push
clc
xchg
or
out
insl
pop
sbbl
add
and
xor
cmc
subb
mov
arpl
hlt
push
lret
xor
mov
ss
jne
mov
xorb
mov
push
sub
fs
addr16
iret
lods
es
and
and
push
jb
adc
rcl
out
cmp
test
dec
dec
test
repz
pusha
orl
jno
xor
cmp
push
cmp
xor
mov
std
jnp
jbe
mov
lahf
in
sbb
and
push
add
jnp
dec
icebp
enter
andps
ss
lods
xor
pop
dec
ja
jnp
mov
jbe
push
fcomi
jns
pop
scas
xor
push
inc
ret
es
ljmp
mul
xor
sahf
je
mov
sub
repnz
jne
jp
lock
xchg
sub
inc
rorb
jno
adc
pop
or
insl
mov
ljmp
cmpsb
out
inc
fwait
addl
mov
push
test
mov
aas
insl
movsb
jmp
hlt
and
jo
and
xchg
frstor
addr16
inc
icebp
dec
xchg
jnp
out
jmp
mov
sbb
mov
dec
fisttpll
rclb
idivb
jnp,pn
das
inc
jge
xchg
pop
sbb
movsb
daa
pop
cmp
cmp
mov
test
mov
arpl
sub
adc
ljmp
jp
cmpsl
idivb
push
icebp
sub
jmp
fs
xor
into
sbb
mov
cmpsl
push
sbb
sbb
testl
mov
inc
fwait
cmp
xchg
or
fmul
or
in
cltd
cmpsb
mov
or
in
mov
subl
xchg
mov
repnz
mov
sbb
inc
xchg
xor
cmc
push
imul
pusha
mov
popa
in
cli
pop
addr16
add
mov
das
popa
addb
out
ljmp
push
mov
lods
fistps
test
cmc
pop
imul
xchg
pop
adc
mov
and
test
loopne
or
xchg
out
or
dec
lock
pop
lret
mov
imul
lret
lret
mov
int
inc
test
xchg
sub
dec
cmp
mov
repz
and
inc
add
in
sub
stc
pop
mov
jl
mov
xor
jns
out
sahf
test
mov
and
movsl
lahf
lock
fisubrl
mov
test
cmp
aam
jl
mov
inc
sahf
mov
sbb
mov
sub
add
in
js
addl
repnz
sbb
mov
mov
inc
adc
or
adc
into
sbb
and
xor
into
and
inc
lock
fcoms
push
gs
inc
push
sbb
fldt
and
insb
aad
xchg
repz
ja
clc
dec
in
lea
std
ss
mov
jns
adc
les
setne
push
mov
imul
sub
cmc
js
jecxz
popa
iret
arpl
imul
movsb
xchg
cmp
sub
faddl
sub
push
push
lret
pop
fcmovnbe
push
loop
cmp
in
mov
loope
hlt
push
aas
sbb
push
frstor
imulb
sub
sub
mov
mov
mov
and
adc
es
sub
jmp
add
jno
jno
or
jb
jg
mov
rorb
cmp
inc
dec
mov
xchg
push
cmpsl
repz
inc
push
mov
add
pop
call
fidivl
mov
scas
cmp
lcall
push
testb
cltd
jne
sub
shlb
fistpll
pop
push
cmc
jg
sarl
movsl
pop
test
add
sbb
sub
loopne
add
xor
inc
mov
and
sub
sbb
jae
in
xor
or
mov
jnp
inc
ffree
pusha
mov
inc
outsb
jnp
out
stos
fdivp
push
in
nop
or
fiadds
mov
lds
js
sarl
or
dec
mov
das
mov
andb
arpl
push
push
mov
ja
push
scas
out
das
pushf
lret
scas
or
sbb
loop
pop
ficompl
mov
pop
bound
movsb
data16
sahf
or
mov
or
push
fs
jne
mov
cmpsb
ja
stos
arpl
cmp
movsb
mov
aas
dec
sahf
shrb
lcall
xchg
pop
jge
ret
sbb
pop
iret
pop
mov
fdiv
add
lret
sbb
xor
jno
lock
jmp
or
aam
jo
sbb
pop
push
sarl
pushf
ljmp
fcmove
ret
pop
mov
mov
inc
jbe
arpl
add
shlb
pop
insb
mov
push
or
or
mov
mov
mov
cmp
fcoml
cwtl
rorl
sbb
mov
mov
outsb
and
fwait
popf
or
aad
std
xchg
pop
push
inc
lcall
cmp
jb
fcomps
popa
or
dec
add
or
pop
dec
dec
sub
or
mov
jp
sbb
pop
push
cltd
ja
mov
and
mov
int
push
les
inc
insb
jg
daa
mov
stc
xchg
int
cmc
popa
push
faddp
mov
out
bound
pop
test
sbb
adc
jbe
mov
out
adc
fildl
push
jmp
pop
stos
cmp
pushf
mov
adc
pop
xchg
scas
pop
mov
jp
cwtl
mov
jge
inc
cs
adcl
or
call
nop
addr16
jmp
push
ljmp
mov
out
ficompl
adc
iret
xchg
bound
jnp
leave
bound
xlat
sub
xorb
bound
mov
or
icebp
scas
xor
clc
push
pop
test
xchg
jnp
xor
loope
adc
js
push
add
clc
inc
pop
fsubrl
cmp
aaa
add
or
cmpsl
inc
mov
xchg
push
xlat
mov
movsb
std
scas
testb
sub
push
ret
ret
mov
or
jno
std
push
add
adc
push
jmp
sarl
and
jno
inc
fnstenv
lds
push
xchg
adc
gs
xchg
dec
mov
mov
inc
jno
imul
xor
pop
xchg
mov
sub
sub
insl
inc
push
and
test
adc
daa
push
lock
jbe
out
adc
mov
cmp
mov
insl
scas
or
and
out
in
xchg
inc
mov
cs
add
cmp
outsl
rcrl
cmp
gs
in
xchg
push
ja
mov
cmp
pop
jo
std
out
jle
dec
push
jo
insb
std
xor
inc
xor
aad
sti
dec
es
ljmp
cmc
dec
dec
mov
leave
cmpsl
xchg
popf
int3
mov
les
rorb
mov
mov
mov
xor
pop
addb
dec
loop
and
icebp
pop
mov
imul
push
shlb
nop
insb
pop
xor
push
and
mov
nop
and
dec
inc
fcmovnb
aas
std
xchg
mov
mov
add
lock
clc
cld
jge
cmp
pop
cmpsb
ror
inc
pop
mov
cmp
std
mov
cmp
sub
dec
sbb
ret
xchg
pop
mov
les
dec
mov
fadds
nop
xchg
sbbb
or
jns
lret
sub
dec
popf
cwtl
nop
inc
mov
xchg
adc
or
jb
xor
push
mov
push
inc
or
fimuls
dec
xchg
mov
dec
cli
xchg
scas
sbb
mov
pop
lods
jmp
mov
push
inc
cmp
data16
cmp
push
sti
add
push
xor
cltd
add
fnsave
rol
xchg
out
xchg
cmc
rcrl
shll
push
orl
ss
cmpsb
xchg
sbb
xchg
mov
test
lods
ja
cmp
aad
add
push
mov
mov
adc
outsb
fistps
xor
sbb
adc
sbb
sbb
std
cli
or
lds
cmp
jge
cmp
aaa
into
out
pop
dec
in
pop
pop
shrb
or
lods
js
sub
pop
icebp
pop
mov
jp
dec
adc
mov
popf
dec
jecxz
inc
sbb
dec
dec
cmp
ret
mov
push
mov
xchg
das
jbe
addr16
xchg
mov
aad
out
mov
popa
xchg
xor
jl
aaa
or
arpl
pop
not
ret
sub
sbb
or
push
cmp
adc
bound
push
xchg
xor
sbb
mov
jnp
lods
xchg
test
pop
push
mov
dec
into
dec
in
inc
jle
fstpl
push
aaa
aad
mov
mov
aad
jg
xlat
shr
pushf
xchg
inc
push
movsl
adcl
add
out
jne
hlt
popa
hlt
mov
push
out
pop
sti
fisubl
push
fs
and
and
dec
ljmp
ljmp
lock
pop
dec
gs
xchg
dec
hlt
mov
outsb
mov
je
out
sbb
push
adc
pop
mov
xchg
xor
pop
jae
in
jb
jnp
sahf
sbb
pop
fnstenv
cmp
inc
mov
insb
adc
xor
mov
mov
jmp
enter
lods
push
add
int
je
ret
cs
fwait
mov
push
mov
mov
popf
mov
inc
mov
push
sbb
shl
inc
fs
cmp
push
dec
sahf
xlat
ljmp
sbb
ret
xchg
addb
stos
dec
popa
std
mull
into
xchg
fists
inc
popf
cmp
xor
es
subl
xor
cwtl
xchg
ret
imul
sarl
and
pop
pop
xchg
push
loop
call
lahf
outsl
sub
es
stc
push
cmp
fucomp
inc
inc
sbb
in
xchg
ja
push
xlat
mov
insl
dec
addb
shll
jns
shrb
ljmp
out
push
dec
gs
lock
test
pusha
or
jle
xchg
jl
xchg
xor
lods
push
pop
shrl
insb
testl
enter
push
xor
xor
sbb
stc
jecxz
push
loope
icebp
pop
push
pop
dec
add
inc
cmpsb
loop
ret
cwtl
push
xchg
pop
inc
or
cmpsl
loopne
xchg
cmp
cmp
imul
cli
dec
jo
ret
cli
cwtl
jl
mov
cmp
iret
pop
mov
inc
das
test
pop
negl
xchg
add
int
fsubrp
ljmp
push
mov
aam
jle
and
push
jmp
sbb
xchg
mov
mov
js
and
xor
xchg
lcall
icebp
ja
addl
popa
fadds
xchg
push
adc
pop
fdivrp
les
xchg
daa
push
cmp
dec
out
xchg
inc
cmpsl
addr16
movaps
jmp
jmp
push
push
add
pop
xchg
xor
jo
push
nop
jmp
push
lds
sahf
fstpt
in
mov
xchg
lock
mov
lret
jle
mov
sub
pushf
mov
cmp
les
cmp
das
and
xor
xchg
test
lret
xor
cmp
pop
out
fisttpll
lret
out
dec
sbb
jmp
gs
outsl
xchg
out
or
jecxz
jnp
inc
or
dec
and
ss
cld
jbe
pop
ret
xor
jle
aas
pop
or
mov
cli
cld
and
daa
push
inc
fbstp
pop
loopne
je,pn
pushf
jo
out
jns
ljmp
lock
cli
aaa
ljmp
mov
lds
cmc
pushf
int3
mov
ja
das
jle
fstl
sbb
inc
cmpb
lock
jne
inc
imul
das
xor
and
mov
mov
sub
xchg
es
xchg
add
daa
and
dec
cmp
test
jge
or
cmp
std
leave
fwait
arpl
aaa
jne
bound
cli
aas
lea
je
das
stc
pop
inc
and
adc
sbb
lret
jae
movsb
in
adc
xor
fldenv
xor
fnstsw
pop
sub
icebp
addb
push
adc
cmp
test
or
or
arpl
mov
and
and
dec
mov
cmp
xor
adc
insl
in
sub
movsl
jne
popa
scas
scas
cmp
mov
cwtl
mov
idivb
mov
sub
or
dec
inc
xchg
jp
jae
mov
sbb
add
ret
xor
mov
mov
scas
iret
mov
sahf
lahf
je
xor
leave
lahf
mov
data16
movsl
lods
iret
fwait
mov
jle
adc
mov
mov
out
mov
in
or
clc
insb
je
or
mov
cwtl
adc
bound
jno
mov
add
and
xor
test
push
pushf
in
out
mov
pop
dec
fsubs
daa
lret
push
jne
add
mov
dec
loopne
cmpsb
jecxz
pop
js
stos
test
dec
rcl
mov
push
push
inc
cmp
ljmp
lea
sbb
mov
adc
nop
jbe
pop
cmpsl
enter
fnsave
mov
mov
mov
jb
mov
push
nop
sbb
push
loop
in
mov
es
stc
mov
inc
popf
sarl
nop
inc
stos
or
mov
cmp
scas
pop
es
fstp
push
xor
xchg
xor
push
test
inc
xchg
ss
insl
xchg
xor
xor
ret
pop
xlat
aaa
sub
dec
push
inc
lds
std
cmp
mov
in
fists
repz
nop
movsb
mov
cli
pop
gs
lds
lret
xor
or
push
inc
rcrl
cli
mov
push
mov
push
push
push
jmp
pop
adc
jbe
xchg
pop
push
dec
mov
shlb
push
sub
mov
fbld
pushf
push
lret
movsl
xchg
lods
addr16
jae
pop
loope
mov
pop
ds
or
hlt
rorb
fimuls
ret
movl
insl
iret
aam
or
xchg
xchg
mov
add
lods
mov
leave
dec
adc
push
outsl
sbb
cmp
ret
push
ret
cltd
jmp
mov
cld
out
and
mov
mov
cltd
jnp
mov
das
or
add
aam
jg
sbb
push
mov
frndint
inc
in
cwtl
adc
mov
adc
aas
or
loopne
ficoml
cwtl
mov
and
sbb
js,pt
test
je
into
mov
sbb
arpl
je
ja
int
dec
mov
fcoml
jno
xchg
pop
cmc
out
pop
mov
lock
mov
sbb
div
ror
xchg
inc
push
mov
fisubrs
aam
repnz
outsb
outsb
inc
sahf
rolb
sbb
or
cmp
ds
mov
popf
jle
lods
shlb
dec
sbb
sahf
scas
pusha
out
and
cmp
sub
adc
or
push
mov
das
mov
fnstsw
sar
push
dec
fwait
inc
push
push
xlat
pop
sbb
out
push
aaa
xor
dec
or
cmp
stc
push
or
adc
testl
xlat
enter
div
out
cltd
jae
add
mov
lock
cwtl
aaa
add
xor
mov
push
fwait
jl
xor
lods
shll
dec
or
call
adc
push
xor
das
and
test
fdivp
adc
lods
add
stc
sahf
fisubrl
sub
std
push
movsb
jno
popa
leave
and
cmc
cmp
sub
aam
xchg
mul
lcall
test
sbb
xor
mov
jmp
xor
rcl
lds
xor
push
jne
dec
inc
mov
outsb
clc
je
sbb
mov
sbb
jno
xlat
inc
fs
lods
aam
aam
mov
shlb
xor
lahf
push
inc
mov
adc
inc
mov
add
pusha
pop
insl
gs
scas
dec
jmp
xor
daa
jne
inc
jb
push
movsl
dec
sub
jns
lock
out
pop
fadd
add
ret
iret
sbb
int3
mov
xor
int3
in
and
lret
or
cmp
dec
mov
sub
add
mov
adc
xchg
fsubr
pop
pushf
dec
mov
out
mov
and
fdivr
push
lock
aam
and
ja
lret
lcall
push
jb
mov
mov
ret
shlb
jae
pop
xor
imull
add
xlat
sbb
icebp
adc
addb
inc
mov
mov
dec
aas
daa
jb
hlt
mov
aaa
xchg
out
or
or
cmp
push
aas
int
mov
sbb
sahf
adc
aaa
push
jmp
outsl
push
push
xchg
test
mov
fwait
xchg
and
mov
cmp
int
adc
xchg
add
dec
leave
js
and
sti
xor
jno
xchg
out
shl
fisubs
or
loop
jg
or
gs
insl
jnp
cmpsl
data16
xchg
pop
xchg
leave
insl
adc
adc
or
pop
mov
jne
daa
pop
lods
mov
mov
inc
fadds
dec
test
sbb
mov
xchg
mov
add
pop
jecxz
das
es
js
repz
pop
popa
mov
and
dec
xor
push
and
aad
mov
pop
cltd
adc
sub
mov
out
insl
inc
or
mov
sub
aaa
packssdw
insb
pop
enter
sbb
xchg
xor
adc
mov
inc
cmpsb
jb
shll
pop
lods
in
and
popf
adc
sahf
cli
repz
pushf
cmpsb
stc
hlt
pop
mov
lea
es
inc
ljmp
jg
jp
mov
xchg
test
lahf
popl
sub
push
xchg
movsl
jp
mov
push
add
rorb
andb
andb
xchg
xchg
sub
sti
in
or
xor
cwtl
aad
rorb
or
filds
push
sbb
aas
push
in
sub
xchg
movsl
subb
inc
shll
jle
gs
xchg
jle
sbb
mov
fcoms
enter
push
add
adc
pusha
xor
test
mov
sub
sbb
xor
ds
clc
in
ja
mov
inc
lds
divb
pop
inc
ret
push
lock
decl
inc
xchg
and
mov
js
ud0
mov
xlat
dec
and
pop
dec
enter
scas
xor
push
xchg
fmul
nop
stos
repz
cwtl
out
pop
lds
dec
lret
scas
jb
out
dec
stos
mov
sbb
jne
lret
ss
inc
out
mov
ret
cmp
popa
mov
jl
roll
push
and
movsl
fisttps
jmp
ss
es
push
testl
test
xchg
into
jns
jnp
stc
popa
push
cli
pop
or
jmp
aad
xor
lret
int
into
cli
jle
lds
sub
mov
mov
sbb
pop
xchg
cmp
sbb
inc
ss
jno
pop
lock
xchg
pop
xchg
ret
movsl
lods
dec
dec
andl
inc
jmp
push
mov
shrb
ds
repz
mov
mov
pusha
and
arpl
mov
push
lahf
and
fstl
adc
bound
dec
push
enter
sbb
mov
jp
adc
repz
setp
arpl
jnp
jp
jge
in
mulb
fucom
mov
and
jecxz
fisttps
push
sbb
pop
ret
pop
adc
push
int
scas
cmp
dec
and
pop
cmpsl
mov
ror
cmpsl
aam
js
xor
je
stos
fadds
shlb
push
inc
push
pop
or
lods
pop
mov
or
inc
xor
aaa
adc
aas
add
or
sub
repz
push
mov
fnstsw
jecxz
push
int
aas
jp
inc
lods
push
cmp
sti
addl
add
mov
pop
sti
fsts
pop
cmpb
aam
in
test
scas
mov
sub
add
insl
mov
mov
add
insb
rolb
hlt
xor
gs
inc
rorl
pushf
fldt
jo
cmp
push
ds
pop
mov
test
mov
sbb
or
mov
cmp
xchg
movb
push
and
movsl
loope
aad
xchg
pop
sbb
mov
sbb
jg
sub
xchg
cmc
jle
rcr
or
mov
sub
mov
divb
aas
add
mov
cmc
sbb
scas
sbb
repz
sub
add
xchg
and
mov
or
inc
int
addr16
mov
sbb
out
lds
adc
mov
pusha
mov
push
clc
leave
xchg
dec
and
cli
fwait
loopne
jg
inc
mov
and
out
hlt
in
int
js
inc
xchg
pop
add
xchg
ja
xor
les
pushf
push
mov
pop
and
stos
push
add
repz
jns
out
sub
out
dec
aad
push
ljmp
sub
out
cmp
aam
and
jecxz,pn
add
inc
ss
cmp
fwait
mov
sub
jmp
sub
mov
out
jecxz
pop
jmp
arpl
pop
or
cmp
incl
test
jge
faddp
cmp
lahf
sub
add
cmp
je
fs
call
cmpsl
ret
pop
pop
cmp
pop
adc
pop
push
ficoml
or
mov
cmpsb
jp
mov
jecxz
add
leave
mov
and
xchg
dec
cmp
js
jnp
xchg
stc
xlat
mov
cwtl
cwtl
mov
rolb
icebp
rol
fmull
lods
push
sub
add
dec
lret
mov
or
jne
pop
popa
fdivrp
push
imul
pushf
mov
stos
inc
ja
adc
jmp
dec
jle
xor
in
enter
push
cmp
icebp
cmp
into
jns
adc
sbb
fimuls
mov
out
bound
test
or
xchg
add
cltd
nop
les
out
bound
cmc
adc
push
inc
inc
icebp
aas
sbb
jg
stc
mov
rorl
subb
dec
cmpsb
in
pop
sbb
sub
pop
movsb
out
push
ror
cltd
cmp
add
dec
loop
and
xorl
xchg
ffreep
xor
pushf
lcall
xor
jnp
pop
cld
xor
jp
adc
mov
sbb
dec
adc
jg
and
mov
xchg
gs
dec
pop
sahf
ljmp
sbb
shr
dec
add
xchg
mov
insl
out
push
cmc
lea
push
mov
pop
mov
fwait
mov
mov
and
std
pop
repz
sahf
out
rcl
pop
dec
cli
lock
pushf
push
mov
dec
push
pop
rcl
mov
cmp
lods
jg
imul
xchg
xor
xchg
sbb
push
dec
shrl
add
mov
leave
dec
add
iret
push
dec
pop
stos
pop
pop
mov
cmc
in
into
xlat
outsb
ja
jmp
loopne
push
arpl
sbb
xor
add
insb
and
cmp
das
add
push
cmp
xor
cmc
push
aad
cwtl
lea
std
mov
and
lods
fldenv
and
pop
test
in
jge
loop
cld
cmp
jns
sub
jmp
xor
pop
inc
ret
test
inc
test
add
push
mov
insb
inc
movsl
out
int
inc
roll
mov
lcall
pop
int
mov
sbb
xchg
rorb
mov
test
jge
movsb
stc
aam
pop
mov
pop
repz
aas
daa
nop
add
jg
mov
mov
xchg
outsl
xor
xor
cs
and
shll
lods
aas
push
fiadds
cld
int3
dec
jns
in
fs
lock
shll
xchg
scas
out
repnz
in
aaa
or
jns
adcl
mov
rolb
xlat
aam
cmpsl
and
fistpll
sub
push
sbb
add
mov
sbb
and
add
lods
arpl
push
inc
jecxz
push
in
ljmp
jnp
push
xchg
in
sahf
in
jp
inc
sti
dec
jb
mov
pop
jge
jecxz
xchg
rorb
jno
enter
adc
lea
aad
or
sarb
cltd
mov
insb
or
xchg
clc
outsl
les
and
rcr
pop
imul
jne
test
pop
mov
cwtl
mov
stc
xor
outsb
xor
xchg
scas
mov
mov
inc
xchg
xor
dec
inc
test
int3
adc
sub
sbb
sub
shrl
jae
xor
add
daa
test
mov
or
xor
loope
jp
stos
xchg
loope
and
rol
in
das
repnz
pop
xchg
mov
orb
js
int
inc
sbb
or
test
inc
out
mov
lods
jp
bound
and
out
mov
jae
mov
xor
sahf
pop
jg
jmp
pop
movsl
fbld
add
jbe
and
cmp
xor
test
call
leave
inc
inc
sub
jb
imul
jb
aam
sub
das
pop
xor
push
mov
in
std
es
jmp
movb
shrb
jg
cld
fwait
out
mov
stc
loop
or
in
cs
mov
xor
std
jl
scas
lods
outsl
xchg
movsb
ret
adc
add
cltd
and
in
jo
jne
mov
cld
cmp
jbe
dec
inc
push
movsl
loop
mov
and
decl
mov
xor
mov
ret
cmp
pop
push
jmp
dec
sub
shrb
or
testl
xchg
movsl
jns
push
or
out
adc
mov
xor
push
push
mov
add
sub
jns
aaa
jns
jo
inc
adc
adc
fidivl
sub
test
or
fsubrs
fisubs
sbbb
xchg
lret
add
xchg
out
ret
fs
pop
int
addl
fistps
cmpl
xor
xlat
enter
popa
and
imul
dec
lret
cmp
cs
leave
dec
sub
icebp
mov
movsb
lcall
push
sbb
cmp
add
mov
jno
loopne
xor
xor
mulb
nop
sahf
enter
lcall
in
xchg
les
mov
add
sbb
cmp
mov
adc
mov
jo
stos
sub
mov
push
lods
mov
dec
nop
add
stc
dec
push
dec
inc
xor
sbb
adc
sbb
aam
mulb
je,pn
icebp
xor
popf
imul
movsl
cmp
add
call
add
in
enter
int
adc
fidivrs
popf
and
xchg
pop
popf
push
pushf
xor
lods
lcall
lods
push
mov
fistps
out
jb
paddsb
xlat
xor
pop
mov
xor
mov
insl
adc
jns
incl
lret
push
pop
push
sub
bound
mov
xchg
push
or
cmp
dec
push
mov
cmpsb
sbb
out
scas
repz
mov
mov
jae
push
mov
xchg
lods
mov
add
push
sub
ja
cmpsl
jbe
pushf
pop
enter
xor
or
add
aam
sub
out
mov
ljmp
jne
adc
mov
xchg
xchg
in
mov
push
das
cmp
push
and
dec
outsl
or
shrb
xlat
in
lods
vmovd
inc
inc
inc
jno
aam
out
call
in
xor
insl
inc
jae
popf
cmc
leave
push
jle
cmp
mov
mov
sbb
or
popl
aaa
insl
je
dec
pushf
mov
lds
xchg
mov
rcr
cmc
jge
sbb
mov
pop
adc
data16
int3
lock
dec
lcall
inc
cmpsl
dec
fistpl
daa
insb
test
rorl
xor
out
fisubrs
sbb
inc
scas
addb
and
jb
lods
mov
sbb
jl
in
xor
and
fxch
and
out
addr16
add
mov
lcall
and
pusha
shr
pop
loope
cs
add
lahf
sbb
mov
mov
mov
add
and
outsb
into
cli
push
movsl
xchg
adc
std
outsl
enter
dec
sub
cmp
test
cmp
sbb
dec
inc
mov
das
lock
adc
into
add
push
inc
add
add
xchg
dec
push
stc
cmp
shl
dec
mov
push
inc
test
cmpsb
xchg
test
and
dec
push
insl
aas
in
cld
adc
push
inc
addl
add
cltd
clc
sbb
cmp
push
sbb
lret
lret
lods
push
clc
mov
cmp
repz
mov
gs
lods
sub
imul
orb
insb
xchg
sub
sbb
cmpsb
imul
add
xlat
pop
fsubrs
in
sbb
das
int3
lods
dec
ja
ror
out
test
and
add
pop
cwtl
mov
pushf
jg
movsb
data16
inc
repz
xchg
repz
loopne
lds
lahf
iret
std
push
stos
mov
dec
outsb
fwait
xor
test
mov
rclb
sub
pusha
cmp
sarl
addb
repnz
cmp
mov
adc
sub
and
clc
pop
ds
daa
test
sarb
jle
sbb
jmp
cwtl
xor
add
cmp
cmpsl
fcoms
jnp
xchg
pop
shrl
mov
mov
xchg
or
pusha
mov
or
push
aam
add
out
cmp
lcall
and
lods
cltd
pushf
jns
add
jae
dec
mov
pusha
mulb
or
cmp
inc
dec
inc
add
lret
mov
adc
ja
repz
ret
xchg
or
insl
jae
nop
mov
shrl
maskmovq
imull
pop
push
es
mov
mov
les
fs
in
jnp
mov
pop
push
pop
sub
idiv
dec
and
add
dec
dec
mov
test
in
mov
xchg
or
push
jb
fiadds
fidivrl
add
fstp
call
sub
push
dec
enter
add
add
fstl
pushf
popa
inc
xor
add
cmp
dec
fbld
mov
mov
cmpsl
mov
mov
adc
ds
and
dec
fs
mov
dec
pop
ja
in
hlt
jg
xchg
cltd
xchg
cmc
xor
sbb
xchg
push
mov
hlt
scas
cmpsl
xchg
dec
jnp
cmp
pop
cwtl
cld
and
repz
jbe
outsl
jl
sbb
push
cmc
and
push
cltd
push
sub
pop
jb
out
cmpsl
push
bound
lods
mov
ss
cli
or
xor
mov
dec
lock
sbb
pop
fsubrp
xchg
push
pop
mov
rclb
mov
mov
mov
in
inc
xchg
aam
cmp
popa
cmp
or
pop
test
and
and
inc
pop
push
jno
lcall
adc
mov
aaa
jo
xor
repnz
aad
loopne
hlt
mov
scas
pusha
dec
test
xchg
or
sub
mov
pop
mov
jo
jl
stos
mov
gs
adc
cli
mov
mov
mov
les
and
sub
lods
jo
rol
jle
inc
cs
mov
cs
out
int3
xor
add
xchg
xchg
xchg
mov
out
out
dec
fdivrp
inc
mov
mov
pop
mov
and
xor
int3
mov
and
cmc
popf
push
jmp
dec
lds
bound
or
fdivrs
cmpsb
cmp
fcompl
push
jns
mov
push
aam
negb
jp
popf
ljmp
push
xchg
mov
pusha
shlb
jne
in
pop
in
dec
mov
cmpsl
add
sbb
sub
cwtl
js
jg
movsl
addr16
lea
rcl
and
test
fimull
mov
enter
sbb
std
add
dec
test
divl
mov
sbbl
cwtl
adc
mov
mov
xor
stc
ficompl
mov
sub
dec
testl
in
and
rclb
sub
int
cmp
fildl
jge
xchg
xchg
rcl
leave
les
sub
addr16
lods
loopne
outsb
sbb
andb
rorl
add
inc
add
testb
mov
jae
push
inc
es
sti
sbb
pop
cwtl
std
dec
cmp
rclb
cmp
stos
jbe
aas
ret
xchg
fldl
inc
push
sbb
dec
fmull
mov
sbb
inc
outsl
jg
xor
mov
jp
insl
or
mov
jnp
das
pop
add
xchg
mov
imul
in
add
add
adc
scas
into
sti
movsb
out
xor
insb
mov
push
jns
push
arpl
sub
push
into
popf
or
inc
leave
popa
sub
mov
insb
outsb
push
pop
es
jno
fmull
cli
mov
punpckhdq
lods
dec
xchg
sarb
push
pop
xchg
les
mov
jecxz
xlat
ss
mov
stos
adc
sbb
test
xor
pushf
pop
mov
shrb
rcrb
xor
and
add
mov
push
out
and
int3
lea
push
fstps
sub
inc
ret
push
cmp
cmp
addr16
dec
lds
push
shll
and
and
sub
pop
cmp
or
pusha
and
pusha
inc
pusha
stos
mov
sbbl
sbb
scas
xchg
pop
push
sbbl
pop
ds
pop
sub
dec
sahf
repz
clc
and
sbb
jl
fimull
cltd
add
jo
mov
sbb
pusha
xor
ret
mov
cmp
push
sub
pop
xor
pop
clc
scas
or
scas
movsb
fldt
xchg
shrb
push
mov
faddl
movsb
movsl
push
mov
lret
in
xor
pop
pop
sbb
movsl
incl
xor
jle
rorb
gs
sahf
iret
outsb
jae
or
jge
or
mov
out
adc
rcr
lret
out
fistps
and
fwait
lret
and
mov
jnp
fmulp
and
add
enter
das
aaa
xor
xor
filds
scas
xchg
testl
mov
xlat
rcll
jmp
mov
mov
dec
xor
aas
mull
push
idivl
imulb
pop
jmp
inc
jl
hlt
cmp
lods
mov
add
xchg
rorb
lods
xchg
jecxz
jb
push
pusha
dec
outsb
int3
pop
rcrl
mov
sbb
jbe
outsb
sbb
jle
inc
mov
js
add
out
adc
or
ss
insl
lcall
je
push
rcrl
stos
lahf
pop
adc
ljmp
loop
dec
push
mov
or
and
add
aad
cmp
mov
leave
and
in
movaps
inc
mov
es
mov
cmc
jmp
std
movsl
xor
nop/reserved
sbb
add
inc
in
or
mov
mov
nop
xor
imul
push
pop
cmp
sbb
cmp
cmp
jp
jb
ret
push
js
shr
fisubl
pop
or
and
clc
push
outsb
call
rep
lds
int3
push
cmp
adc
mov
stos
lahf
test
xor
in
xchg
push
xchg
mov
and
sbb
cs
cmp
mov
ret
cmp
xchg
jae
sbb
xchg
mov
inc
dec
jbe
pusha
mov
sbb
lret
dec
push
ret
fsub
mov
aam
aas
rcr
inc
mov
enter
ftst
adc
jp
push
push
inc
pop
aam
lods
lods
push
scas
shlb
lea
jo
mov
in
das
arpl
sub
add
decl
call
adc
push
mov
adc
jo
or
push
mov
sti
cli
adc
int3
popf
or
std
sarl
lcall
test
pop
mov
pop
sbb
sbb
sar
stc
jne
sbb
pop
adc
sub
pop
scas
and
jmp
shr
fdivs
and
repz
popf
cli
leave
or
push
enter
xor
test
das
imul
jb
jno
push
mov
mov
pushf
fstps
xlat
scas
lcall
jp
add
jg
lock
pop
dec
mov
loopne
fisubs
insl
or
mov
outsl
ja
or
and
lods
pop
das
push
dec
sbb
mov
push
xchg
mov
jle
das
js
out
enter
push
out
sbb
insl
and
and
mov
ja
pop
mov
sub
in
out
xor
shll
popf
pushf
into
bound
add
cmp
insl
cltd
xor
cmc
jmp
adc
out
pextrw
cmpsb
loope
bound
sub
iret
bound
ficoml
add
or
dec
adc
imul
mov
pop
sbb
sub
je
mov
push
lods
xor
data16
xchg
leave
jmp
push
mov
rcrl
test
lea
data16
xor
cli
add
add
fs
pop
sti
mov
call
enter
es
mov
in
dec
das
out
and
cld
ljmp
mov
jl
xchg
jle
mov
xchg
mov
inc
fnstcw
insl
xchg
and
sub
inc
sub
sub
inc
or
cmp
cmp
push
push
cmpb
xlat
xlat
test
xchg
pop
xor
jp
test
mov
sti
es
sub
call
pop
jecxz
jo
pop
ret
inc
sti
in
jns
pop
push
mov
scas
arpl
push
dec
xor
jae
loop
sbb
shrl
sbb
inc
stos
fcompl
xor
aaa
push
and
xchg
cli
inc
sub
fwait
ds
scas
loope
xor
rcr
xchg
icebp
fildll
hlt
insl
aad
ret
je
aas
fwait
imul
mov
xor
dec
cli
push
add
push
aas
cmp
push
daa
popf
rcll
ret
popa
inc
mov
inc
and
xchg
insl
mov
cltd
fs
jne
das
insl
in
stc
lret
sub
and
or
xchg
jecxz
ljmp
push
stc
jno
lods
int
ds
lods
mov
into
movsb
xchg
repz
sbbb
rcll
gs
imul
add
pop
mov
shrb
cmp
int3
and
in
push
stc
lock
mov
cmc
jmp
cmp
xchg
punpcklwd
add
cs
add
dec
sbb
cltd
or
mov
push
js
jno
dec
decl
in
and
mov
mov
and
sbb
add
inc
leave
mov
mov
sub
bnd
movsb
mov
cld
mov
or
or
roll
sbb
inc
hlt
imul
jp
mov
jo
test
jns
lock
out
nop
sub
push
lret
jle
xchg
add
jmp
xchg
sub
xchg
add
inc
push
je
mov
xor
leave
sar
jnp
push
or
adc
in
test
je
repz
dec
cld
pop
xchg
repnz
add
push
push
fldcw
dec
and
outsl
sub
sbb
mov
add
ss
xor
fwait
mov
arpl
mov
lods
fidivs
sbb
in
push
jo
and
inc
jo
or
xor
xchg
ror
fwait
jmp
adc
mov
and
xor
mov
mov
sarl
repz
mov
loop
or
adc
dec
dec
popa
orb
and
subb
addl
outsb
lods
jae
leave
mov
cmpsb
inc
shll
je
pop
xchg
push
mov
jbe
jle
out
push
mov
out
inc
int
push
js
dec
mov
hlt
mov
js
mov
lods
cmp
push
push
outsl
into
or
cmp
mov
sbb
in
or
movsb
or
sbb
mov
lods
cmp
popa
mov
sti
fdivl
push
fdiv
adc
into
mov
inc
mov
insb
push
mov
aas
dec
in
shrb
nop
jo
mov
dec
cli
pop
outsb
popa
mov
in
sub
adc
fdivl
sti
lods
sbb
sub
mov
inc
pusha
mov
pushf
fimuls
cmp
testb
add
jne
repz
mov
cli
insl
xor
and
icebp
in
aas
jns
and
int3
aaa
je
xchg
dec
or
fisttps
lret
jnp
rcrl
jb
test
push
cmp
pusha
adc
mov
adc
into
test
or
dec
scas
sarl
dec
aam
pop
clc
push
out
leave
cld
inc
xchg
cmp
mov
sbb
iret
xor
scas
mov
out
dec
inc
ret
add
fidivs
stc
dec
and
gs
xchg
in
and
insl
dec
or
stos
mov
inc
pop
or
leave
jbe
inc
push
popf
xor
incl
sar
dec
sbb
and
sbb
cmp
cmp
ljmp
push
rorb
repnz
jge
rorb
mov
incb
imul
xor
jmp
mov
and
jns
or
mov
and
add
aam
adcl
jae
int
ret
sbb
gs
repnz
cmp
xchg
das
jecxz
and
sbb
js
fidivl
mov
adc
sbb
xor
mov
and
inc
mov
mov
mov
pop
roll
dec
xor
aad
jb
pusha
dec
adc
push
aad
lods
pusha
push
mov
call
push
or
mov
dec
xchg
test
test
or
clc
ror
jne
sbb
add
xchg
sub
or
cltd
lods
pop
xor
mov
xchg
sub
sub
scas
xchg
mov
div
xor
movsb
popf
inc
pop
inc
mov
push
repz
dec
xor
or
std
lret
xchg
and
pop
fimuls
out
push
add
sbb
out
adc
cld
call
or
adc
push
push
lods
int
push
rolb
fwait
lret
insl
movb
dec
lods
push
shl
jne
pop
dec
xor
subl
push
nop
mov
pop
shrb
xor
add
push
add
cmc
cmp
pushf
fwait
clc
push
test
and
arpl
pop
adc
dec
and
add
outsb
mov
pop
rcrl
mov
cmp
in
mov
push
fnstenv
std
add
ja
adc
dec
aam
mov
fiadds
push
inc
insl
push
or
aad
cltd
inc
cmp
insl
xchg
pop
xchg
xor
adc
ret
test
scas
js
adc
push
inc
aam
cmpsb
out
hlt
sub
sahf
rolb
adc
aaa
inc
lahf
test
and
lds
jo
xchg
into
mov
pop
mov
sub
jb
jecxz
pop
imul
insb
std
add
in
jp
mov
cmp
sahf
mov
sub
xor
push
sti
in
cmp
fcos
test
sahf
cmp
inc
movsb
lock
push
adc
mov
scas
dec
xlat
imul
jne
scas
test
pop
push
fs
in
daa
dec
frstor
rcl
push
stc
jns
xchg
mov
sbb
fstps
push
lcall
imul
arpl
repnz
mov
or
mov
stc
xlat
jne
leave
pop
cmc
je
xchg
inc
stos
sub
mov
dec
push
shrl
in
lahf
jmp
mov
inc
jge
mov
sub
rclb
les
push
cld
inc
or
mov
ficoms
pop
mov
push
adc
jge
cmc
loop
cmp
xchg
and
pusha
push
mov
pop
es
adc
decb
lahf
scas
sti
push
out
mov
out
cmp
movsl
lcall
pop
ret
pop
xchg
popf
dec
xchg
push
loope
or
xor
xchg
jle
lods
cli
lods
js
test
xor
sahf
mov
das
adc
pop
mov
jno
and
pop
clc
lea
cltd
sub
mov
push
cmpsl
pop
xchg
dec
aaa
add
movsb
and
cmpsb
push
pop
sub
imul
xchg
xlat
into
push
je
cld
adc
bound
ja
les
lcall
shrl
xchg
xor
jae
stos
or
and
sub
in
mov
mov
aaa
ret
stc
mov
loop
stos
jg
pop
sbb
outsb
nop
pop
jmp
xchg
push
dec
push
rclb
push
loopne
stos
in
jae
int3
xor
addr16
icebp
jae
push
sbb
or
sub
jp
cmp
in
sbb
sub
xlat
pop
mov
ja
mov
cmc
pop
push
ja
addb
out
adc
movsl
or
lock
lcall
inc
rcrb
jg
push
js
mov
sub
cmp
insl
xor
je
cmp
sarb
xchg
pop
pop
fiaddl
pusha
lods
lahf
ret
sub
sub
adc
stc
int3
ja
add
push
aaa
jp
mov
inc
xor
popa
adc
outsb
add
je
lock
les
sub
add
test
loope
mov
cmp
adc
mov
xor
out
es
or
inc
test
lret
out
stos
inc
dec
mov
imul
not
movsl
sub
loope
out
add
sbb
movsl
ljmp
es
lods
mov
setle
data16
ffreep
and
mov
or
dec
in
mov
mulb
fnsave
pop
fwait
adc
cltd
mov
push
insl
fstps
std
jns
icebp
or
xor
pushf
mov
pop
inc
rorl
adc
add
pusha
adc
push
cmpsb
pop
inc
push
scas
jmp
push
mov
jno
ss
cmpsb
inc
pop
stos
push
dec
jae
push
out
cmpsb
mov
mov
and
mov
loopne
mov
xor
mov
jae
mov
das
jg
neg
dec
gs
and
push
push
mov
sbb
arpl
mov
popf
and
arpl
or
shl
pusha
scas
push
jecxz
cmp
add
imul
test
testb
sbb
xor
loopne
sub
ret
or
adc
insb
sarb
jle
sub
cs
daa
sahf
pop
test
fsub
in
xor
pop
pcmpgtd
mov
cltd
push
push
imul
data16
mov
jne
lds
jle
out
outsl
jge
pop
stos
xchg
je
push
push
rcrl
mov
enter
xlat
pop
sbb
mov
stos
xor
and
push
or
jl
in
push
pop
rorl
push
cltd
xor
aam
clc
dec
es
dec
jcxz
add
iret
aad
enter
lret
pop
pushf
loop
cmp
out
lret
das
cs
test
and
out
repz
add
sbb
sbb
pop
hlt
movsb
call
cmpb
lods
jl
and
sub
jno
rcll
int3
rcrb
es
pop
inc
out
sub
dec
test
pop
shll
cwtl
int
and
cli
sbb
sub
mov
js
shrb
ds
sbb
mov
inc
je
out
mov
aam
push
cmp
and
stos
sub
adc
cmpsb
cmp
xor
cs
push
mov
mov
fdivr
push
inc
jnp
add
adc
fists
push
and
pop
push
aas
call
jae
pop
push
mov
clc
fwait
push
mov
fnstcw
sbb
inc
pusha
inc
daa
mov
push
and
add
addr16
cmp
idivl
cli
flds
adc
cmp
shrb
repz
pop
shl
popa
or
movsb
stc
sub
add
imul
fdivrl
lret
pop
test
sahf
ret
popa
adc
fildll
bound
in
mov
xchg
and
push
mov
in
or
mov
push
pop
shrl
test
push
mov
je
xor
inc
faddl
xchg
mov
inc
pop
test
stos
stos
jmp
ret
xorb
test
mov
je
outsb
hlt
cmpsb
push
pop
sub
xor
push
dec
push
mov
inc
rcll
pop
adc
xchg
cmp
lock
stc
mov
clc
fld1
and
xor
push
push
rol
clc
inc
pop
jl
in
push
adc
sub
cli
in
lcall
cmpsb
test
pusha
aas
and
lret
in
jp
je
mov
pop
pushf
xchg
push
movsl
inc
cmp
adc
pop
shrl
stos
stos
cmp
mov
decl
adc
sar
addl
cltd
outsb
cmc
pop
gs
stos
xor
sbb
mov
push
inc
jnp
and
cmpsl
out
and
pop
push
push
test
cmp
je
inc
lret
mov
movsl
sahf
addr16
pushf
xor
jl
jne
inc
lcall
hlt
push
notb
stos
lcall
icebp
lods
aas
jae
dec
iret
imulb
mov
and
js
mov
jecxz
sti
mov
popf
pop
mov
rcr
insb
pusha
mov
stos
bound
cmp
dec
mov
inc
mov
jb
loope
add
xchg
das
mov
icebp
lcall
ljmp
lock
or
sti
pop
outsl
sub
in
mov
into
aaa
std
jecxz
js
es
pop
xor
je
fnstsw
test
add
pusha
in
xor
push
idiv
xor
cld
sarl
mov
sbb
mov
mov
stos
jle
shrb
daa
cli
ret
mov
iret
xor
repz
mov
pop
stos
xor
arpl
or
xlat
das
sbb
mov
mov
arpl
lret
in
add
fsubrl
leave
mov
sub
push
das
lahf
stos
cld
aad
int3
shll
sbb
outsb
jns
filds
loopne
sbb
data16
push
mov
mov
and
mov
aad
int3
ror
xlat
lods
xlat
icebp
pop
push
pop
cs
rcrl
mov
int
test
loope
jno
loop
push
ljmpw
cmp
jp
jne
xchg
pop
cmpsb
int3
jo
sbb
sub
cmp
mov
out
or
dec
push
adc
jnp
push
bound
stos
je
jnp
xor
hlt
pusha
loope
test
test
mov
xchg
inc
stc
mov
jecxz
fwait
cmp
outsb
fmuls
aaa
sbb
mov
pop
cs
icebp
mov
sbb
std
or
mov
adc
xchg
cmpsb
js
movl
dec
mov
mov
jae
test
dec
fadds
js
out
push
outsl
pop
sbb
and
mov
js
lods
addr16
cltd
fidivs
enter
cltd
in
inc
push
frstor
rcl
push
stc
insb
rorl
repz
addr16
in
xchg
pushf
adc
sbb
lds
mov
imul
inc
int3
inc
xlat
pop
cmp
xchg
shlb
lahf
ja
xchg
out
adcl
adc
jg
sbb
test
std
adc
orl
ret
mov
cmp
sub
jmp
cli
fwait
sub
out
call
in
jns
cmp
insl
lahf
mov
and
scas
mov
lock
cmp
xchg
jecxz
orl
jo
fimuls
rolb
cltd
das
jns
stc
xchg
add
push
inc
pop
xchg
iret
ds
xchg
push
orb
mov
sub
shlb
test
je
pop
pop
scas
cwtl
adc
mov
mov
mov
scas
fst
gs
mov
jae
xchg
lods
aaa
xor
push
or
adc
inc
les
in
fsubp
gs
jo
push
data16
out
jb
out
and
enter
cmp
outsb
insb
xchg
or
inc
xchg
and
xorb
dec
in
push
mov
jb
orb
in
int3
ret
fistps
scas
repz
lahf
nop
mov
insl
inc
mov
pop
fidivs
test
clc
mov
sbb
daa
jg
ret
or
daa
xchg
push
pop
and
mov
clc
jne
int3
sbb
xor
jl
daa
js
stos
idiv
out
pop
leave
mov
lock
pop
es
adc
and
std
mov
divb
add
mov
mov
cwtl
push
push
or
andb
iret
aaa
cmp
sahf
jg
sbb
out
lret
les
mov
jmp
jno
inc
fistpl
sbb
sbb
loopne
or
fidivl
cmpsl
loop
stos
jbe
ss
gs
push
mov
jl
mov
cmpsl
xchg
sbbl
push
add
lret
loop
outsl
das
cwtl
insb
jge
mov
imul
push
lds
notb
orl
jo
movb
or
sbb
fcmovu
or
lea
insb
or
xchg
push
imul
sub
push
clc
sub
outsb
cmp
mov
decl
int
lods
jmp
push
push
fldcw
inc
mov
xor
es
or
adc
push
or
orl
inc
stc
pushf
pop
or
addl
adc
sbb
adc
jnp
jge
scas
xchg
jae
and
orb
in
popf
xor
pop
test
bound
jecxz
and
sbb
daa
lea
push
sahf
xchg
punpcklwd
push
mov
imul
lahf
add
sub
call
jmp
dec
xchg
xchg
mov
outsl
ss
loope
cs
cltd
cmp
rcl
mov
addl
imul
leave
stos
jne
xor
mov
sarl
ss
lahf
pop
jmp
mov
cs
repz
stc
sti
cs
mov
sub
xchg
movsl
sbb
mov
pop
add
sar
leave
or
xor
cmc
data16
test
out
jmp
pop
mov
and
lods
and
cli
jbe
cmc
movb
add
and
or
dec
shrb
push
data16
mov
add
call
lret
rorl
and
pop
lods
lea
movd
jp
add
imul
cmc
adc
fistpl
mov
rolb
or
xchg
adc
lods
adc
cltd
test
addb
andb
out
das
popa
call
or
pop
mov
stos
cmp
daa
outsb
and
pop
jbe
sbb
push
imul
leave
aad
push
ficompl
stc
in
and
and
call
sbb
mov
ja
aam
gs
mov
pop
or
add
movsb
push
in
cmp
xor
iret
ss
lahf
or
ffree
sub
fwait
inc
lahf
dec
xor
and
fimull
std
inc
cmp
hlt
sbb
and
lret
cmp
xor
mov
je
add
cmp
sahf
sarl
pop
mov
and
dec
ja
mov
das
aaa
dec
xor
movsl
dec
mov
scas
bound
push
mov
inc
add
mov
mov
jmp
lods
xchg
je
lret
inc
cmp
imul
mov
shll
aad
cmp
aam
cmpsl
cwtl
into
and
add
out
ds
test
jmp
clc
iret
pop
les
jae
xchg
sub
divb
scas
movsb
push
orl
dec
mov
sub
or
mov
lahf
repnz
push
sbb
ja
mov
sahf
mov
fcmovu
or
lea
insb
or
xchg
push
imul
sub
push
clc
iret
dec
cmpl
ret
scas
js
out
repnz
add
sar
out
pop
cmp
movsb
push
jp
xchg
hlt
add
lcall
dec
ficoml
repnz
cmpsl
lret
push
cmpl
sub
shl
push
jecxz
pop
mov
cmp
leave
test
push
sbb
push
sbb
jp
pop
pop
scas
movhps
xchg
mov
mov
xor
push
aas
outsb
or
enter
lods
fdivl
rclb
mov
roll
call
shll
adc
lods
push
je
push
pop
test
out
push
bound
mov
mov
inc
push
call
fimuls
fstpl
xchg
mov
mov
push
loopne
push
adc
pop
lods
sahf
ljmp
cmp
aam
sub
pop
pop
adc
repnz
add
jmp
adc
jl
or
jecxz
xchg
mov
sbb
mov
inc
mov
pop
rolb
sub
mov
pop
imul
cmc
adc
out
push
mov
aad
push
mov
aad
push
mov
aad
popa
add
mov
iret
xor
aas
sbb
dec
popa
add
mov
iret
orl
iret
andl
jae
mov
cmpsb
int3
mov
adc
xchg
enter
out
shll
scas
jl
loopne
mov
or
stc
jnp
push
xchg
mov
mov
jmp
cmp
jne
jmp
inc
mov
and
call
mov
jecxz
in
pop
jg
pop
cmp
jge
dec
add
test
out
adc
js
cli
mov
push
aas
mov
cmp
shrb
daa
rcrb
bnd
std
popa
xchg
imul
mov
cmp
push
addr16
sahf
aaa
push
lods
ficoms
scas
decl
jge
sub
in
hlt
sub
stc
mov
dec
or
jecxz
push
lret
les
inc
or
mov
in
pop
sar
push
dec
nop
nop
and
inc
lds
in
mov
out
mov
xor
pop
dec
xchg
adc
inc
scas
hlt
sub
ds
sub
push
xchg
pop
mov
jp
dec
jbe
cmp
je
mov
cli
inc
fs
inc
imul
pop
cmc
nop
mov
sub
aad
int
mov
cs
adc
and
imul
test
int3
pop
fucomp
imul
sbb
mov
shll
fildl
stc
sbb
adc
gs
jcxz
daa
push
movsl
xchg
mov
mov
pop
pop
xchg
xor
and
ss
sbb
mov
push
repz
inc
jmp
hlt
mov
pop
shrl
cmp
cmpsl
and
sub
dec
xchg
push
bound
push
mov
xchg
aaa
aaa
insb
repz
cwtl
daa
movsl
push
dec
mov
in
push
mov
sub
lods
ds
pop
mov
fdiv
mov
mov
ss
in
int
test
pop
fldenv
cmp
adc
xor
sub
jbe
and
mov
inc
and
jno
ljmp
and
mov
fs
inc
das
scas
xchg
subl
cmp
sbb
pop
cmc
xor
cmpsl
cli
xor
cmpb
sub
in
loope
loope
mov
pushf
stc
rorl
sub
mov
icebp
imul
jmp
dec
and
add
fsubl
mov
rolb
in
pop
rol
lea
jge
mov
shlb
sbb
inc
and
xchg
in
daa
adc
dec
pop
sbb
add
jmp
lret
and
mov
jne
mov
push
mov
mov
mov
in
xchg
dec
call
imul
aaa
inc
sub
les
fs
out
mov
jl
popf
and
cmp
aaa
sarb
icebp
xchg
das
pushf
repnz
xor
cmp
pop
mov
xor
mov
arpl
mov
outsb
out
mov
inc
xchg
je
aam
loop
lret
inc
lahf
stc
xchg
sbb
jns
test
jg
jno
leave
pop
xor
test
lock
in
outsl
mov
fsubs
lret
mov
and
add
dec
fistl
mov
sbb
mov
in
sub
push
mov
mov
lret
imul
aaa
loopne
jmp
getsec
mov
int3
xchg
xlat
dec
test
or
mov
mov
jmp
popf
fs
dec
dec
push
mov
out
pop
cmp
pop
jp
jge
add
fxch
ret
add
cmp
sub
lds
je
and
pop
movsb
xor
insl
insb
jl
subb
dec
testb
add
inc
out
sti
call
mov
out
lcall
jno
sub
dec
in
stos
xor
push
loop
mov
mov
pop
xor
lods
xchg
sub
push
scas
add
mov
dec
push
aam
std
xchg
pop
mov
xor
sbb
mov
xchg
ss
ret
or
jg
sti
mov
jnp
or
adcl
das
addr16
adc
cmpsl
out
sub
outsl
cmp
cmp
sti
and
pop
scas
popf
je
fnstenv
cmp
sti
xor
test
inc
mov
inc
mov
into
mov
je
mov
add
fidivl
cmp
lahf
ficoml
sub
dec
iret
pop
xchg
adc
lock
rorl
lods
add
cli
in
insl
xchg
push
add
add
into
cmp
int3
loope
jg
sub
leave
out
mov
fldcw
icebp
mov
insb
inc
xlat
push
jmp
into
mov
sahf
stos
lock
ficoml
inc
jno
inc
jne
out
push
sbb
inc
pop
cmp
sbb
movsb
xchg
movsl
mov
rol
pop
ds
push
sub
and
pop
mov
fstpt
enter
sbb
cmp
push
or
or
sahf
aad
push
ds
push
push
lret
mov
dec
mov
and
subb
iret
cmp
imul
loop
adc
mov
addl
push
adc
ja
dec
cmp
fs
mov
aad
or
add
test
dec
dec
jns
mov
pop
inc
fcos
lea
roll
out
sbb
scas
lahf
popa
out
dec
cmp
jno
rol
lret
loop
movsb
push
mov
xchg
xchg
mov
push
dec
loope
add
mov
fiadds
xchg
add
leave
jbe
andb
lods
jecxz
aaa
dec
iret
hlt
jl
mov
xchg
push
xchg
pop
add
inc
push
js
mov
mov
ret
imul
stc
pop
cmpb
psrlq
or
sbb
push
sub
push
and
out
inc
test
mov
not
push
faddp
out
or
jge
pop
pop
fists
pusha
je
push
cmp
and
jl
xchg
pop
mov
mov
pop
test
nop
scas
sbb
add
push
dec
lret
push
jge
pop
and
fbstp
andl
xchg
outsl
pusha
and
xchg
mov
lods
push
adc
pop
je
call
shrb
rorb
into
outsb
mov
sahf
cmp
adc
adc
arpl
orl
cli
dec
mov
mov
mov
fistpll
movsb
sbb
and
and
js
pop
sbb
nop
lds
push
js
and
stc
sbb
in
mov
dec
fwait
andl
ds
and
xchg
out
ljmp
mov
mov
repnz
sub
out
dec
lds
shrl
pop
mov
out
cli
push
ss
test
icebp
cmp
dec
or
push
inc
pop
adc
or
inc
dec
scas
lods
xor
jns
jbe
dec
lock
dec
jb
mov
adc
es
inc
je
inc
jmp
cmp
add
xchg
xchg
push
lds
pusha
fadds
dec
jge
ficoms
data16
xor
fcmovnb
push
mov
nop
push
mov
sbb
lds
fs
outsl
aad
aad
lret
popf
jg
out
outsl
and
sub
fucom
jne
ret
dec
dec
xor
test
mov
dec
push
ss
add
push
arpl
lret
sub
loopne
cmpsb
aam
dec
add
fsubr
inc
sti
xchg
pushf
add
repz
sbb
bound
sub
sub
add
push
shlb
sub
pushf
mov
pop
pop
test
daa
or
add
or
and
mov
cwtl
or
pop
loop
mov
xor
jne
mov
mov
push
jbe
pop
sub
addb
add
inc
lods
adc
imul
push
fwait
es
push
in
cmp
push
jb
mov
dec
daa
mov
mov
insl
es
movsb
orl
and
fidivl
mov
pop
inc
lret
sti
sbb
into
xchg
cltd
inc
adc
test
jo
lods
leave
ss
mov
cmp
stc
lret
dec
fdiv
pop
loop
rol
and
sbb
cmp
out
or
adc
aas
push
cltd
sbbl
pop
fs
shl
push
add
ss
repz
jno
test
ja
aaa
mov
inc
and
mov
rol
inc
xchg
add
cmp
sbb
pop
sub
leave
enter
mov
push
push
icebp
scas
inc
cld
inc
cmpsl
xlat
in
popa
out
loope
leave
fidivrs
add
mov
dec
imulb
lcall
setl
fxch
mov
call
sbb
sub
xchg
cmp
push
add
cltd
stos
mov
jge
dec
cli
adc
push
lods
rorl
xor
xor
aad
mov
stos
add
jo
daa
jbe
push
sbb
jmp
fs
cmp
es
xor
push
sub
jle
jge
add
vmulps
popf
mov
leave
ds
dec
jae
push
jb
xor
push
popf
movl
ljmp
loop
cmp
imul
pop
and
ficoms
mov
fisttpl
push
nop
mov
ja
push
cli
adc
push
in
fcompl
adc
cli
inc
movsl
addr16
mov
pop
sub
xor
cmpsl
mov
bound
popa
xchg
mov
fidivl
mov
cs
stos
out
adc
pop
sub
dec
lret
lcall
js
sub
stos
hlt
push
mov
sbb
out
insb
dec
and
mov
imul
js
push
stc
inc
mov
lods
pop
push
sub
fcomp
inc
jmp
aam
das
adc
fdivl
pop
push
or
fwait
lret
scas
dec
dec
movsb
lret
std
and
outsl
xor
jnp
and
mulb
mov
sbb
mov
inc
pop
test
stc
pop
cmpb
call
popa
mov
icebp
and
xor
movsb
or
pop
testb
push
stc
insl
pop
lock
push
jle
cltd
pop
push
or
clc
push
int
inc
xchg
icebp
js
mov
addr16
fmuls
scas
and
push
mov
mov
and
stc
jmp
fdivs
movsl
cmp
popa
inc
pop
dec
mov
lahf
paddusb
loope
imul
xor
shll
ficompl
fwait
sbb
stos
movsl
jmp
hlt
jbe
sub
shl
outsl
adc
inc
push
fsts
ficoms
int
mov
emms
mov
loope
push
lods
and
lahf
push
sub
jo
int
data16
stos
into
es
pop
push
popa
movsb
mov
xchg
mov
push
adc
inc
push
movsl
jnp
cltd
aaa
mov
cmp
sub
pop
xor
xchg
dec
aad
fs
daa
jg
lods
aam
icebp
mov
push
testl
jb
ljmp
aam
mov
cld
es
popl
and
clc
fmuls
xor
mov
inc
xor
xor
pop
adc
lock
fildl
xchg
cmpb
nop
frstor
ficoml
out
mov
adc
ss
je
push
dec
mov
adc
xchg
insb
xchg
or
lret
popa
dec
pop
jle
outsb
mov
lret
push
les
fsubrs
cmp
pop
push
stos
cmp
jecxz
mov
stos
out
mov
pop
aam
pop
out
movups
adc
sub
pusha
es
xor
mov
dec
in
mov
sbbb
and
adc
push
lret
cmp
cmp
flds
sub
xchg
inc
inc
pop
sarb
call
mov
jecxz
hlt
mov
and
push
push
push
sub
xchg
lods
sub
sbb
add
divl
xchg
mov
mov
outsl
adc
pop
adc
scas
fstpt
aam
dec
mov
or
xchg
jg
mov
out
cmp
cmp
sub
mull
cmc
cmc
shlb
jnp
sti
xchg
call
inc
mov
pushf
pop
mov
lods
iret
xchg
incb
fmull
insl
ja
movsl
scas
xchg
push
insb
inc
dec
icebp
mov
hlt
pusha
jge
adc
popa
outsl
adc
nop
ret
jl
insb
and
std
shll
pop
fnstcw
xchg
sub
outsb
adc
aam
jbe
mov
push
push
xorl
mov
lea
in
jle
neg
push
aas
jl
inc
mov
rclb
lret
mov
scas
out
aam
adc
pop
jns
aad
pop
pop
aam
cmpsb
loop
sar
sub
lcall
fisubrl
jns
push
imul
jns
into
jb
aaa
mov
sbb
nop
ljmp
xor
jp
mov
xchg
insb
ss
scas
inc
mov
mov
jns
leave
xlat
mov
xor
mov
js
jno
test
shr
inc
pop
stos
adc
fnstsw
ljmp
je
inc
in
or
jp
lods
add
ficoml
rolb
in
add
fidivs
je
icebp
stos
std
jecxz
test
mov
push
inc
repz
mov
xor
roll
sbb
aas
into
popa
or
mov
pop
cmpsb
loopne
out
cmpsl
pop
jno
sbb
rcrb
and
out
and
les
and
add
inc
leave
mov
shr
cmpsb
test
adc
pop
mov
shll
popf
inc
mov
jbe
popf
stos
lock
pop
inc
scas
pop
addr16
shrb
mov
leave
pop
add
sub
test
adc
mov
sti
add
ja
or
push
sbb
push
cmp
xor
sbb
jecxz
mov
xor
mov
mov
jp
dec
inc
and
outsl
adc
mov
hlt
es
adc
idivb
jo
jno
aaa
push
and
cwtl
test
and
pushf
inc
shll
mov
out
mov
rcll
xor
or
out
and
stos
dec
rorb
pop
or
push
les
lock
je
xor
roll
pop
fsubs
xchg
sbb
arpl
jo
mov
lahf
fisubrs
shl
mov
add
push
pop
mov
cwtl
test
out
imul
sarl
sub
adc
or
mov
and
testb
sub
int
push
fists
out
fisttpl
xor
pop
aam
out
dec
pop
cmp
fsubl
push
shlb
mov
push
std
fiaddl
mov
adc
add
inc
mov
add
ja
loop
cs
inc
cmp
imul
xor
test
dec
fidivs
push
pop
adc
mov
dec
sbb
inc
mov
mov
std
or
dec
inc
aad
je
inc
dec
nop
pusha
push
fcompl
cwtl
mov
add
pop
pop
scas
sbb
pop
mov
mov
mov
je
and
js
mov
add
dec
xchg
pushf
sub
dec
movl
push
insl
in
daa
into
loope
push
push
xor
jne
adcl
mov
lahf
repz
cltd
enter
cmp
add
mov
push
or
jne
scas
xor
lods
cmc
push
lea
jl
dec
into
in
aas
dec
in
push
xchg
mov
push
loop
out
mul
cld
jo
mov
pop
int
xor
jbe
mov
and
xor
leave
mov
dec
clc
or
aad
lea
aaa
jecxz
sbb
xchg
scas
fldt
stos
fs
xchg
subl
xor
fcmove
loope
xchg
test
pop
push
jno
sarl
add
loop
cmp
and
dec
and
mov
cmc
push
mov
push
jp
pop
inc
inc
test
mov
flds
push
push
sahf
repz
mov
inc
aas
mov
stos
or
dec
mov
dec
addr16
cmp
shlb
xchg
sahf
iret
outsb
jae
or
add
daa
pop
je,pt
push
sbb
test
pop
inc
sahf
pop
add
inc
aam
aam
adc
les
mov
out
or
jmp
or
cmp
mov
popa
xchg
pop
and
and
int3
inc
ret
pop
cmp
daa
fcomi
test
xor
fiadds
xchg
fdivrs
dec
pop
or
sbb
xchg
es
mov
icebp
mov
sarb
inc
xor
or
ret
ljmp
pop
cmpb
pop
das
outsb
sbb
outsb
lds
cmp
sti
outsl
adc
dec
xor
out
jp
xor
cmpsl
jb
cmp
cmc
out
xor
push
mov
or
lret
adc
dec
outsb
add
stos
dec
imul
and
test
add
inc
push
or
out
ret
call
mov
push
stos
fcomps
lahf
and
test
and
js
mov
ret
push
or
add
loopne
or
mov
xchg
add
hlt
push
xor
mov
shll
cmpsl
pushf
out
movsb
mov
push
enter
daa
mov
outsl
dec
mov
dec
sub
and
push
shlb
xor
les
les
fdivl
js
jo
xlat
pop
xor
mov
ljmp
sub
jnp
pop
cld
mov
repnz
or
jl
xchg
push
dec
ss
pop
mov
inc
inc
std
cltd
xor
pop
sbbl
shrl
decb
mull
mov
loop
push
dec
mov
pop
mov
dec
sub
fcmovne
inc
lahf
push
adc
mov
mov
shrl
adc
sub
xor
mov
sub
sub
mov
sub
and
out
ret
test
adc
pushl
mov
sub
ljmp
mov
xchg
or
inc
std
adc
cmpsl
pop
mov
and
xchg
sub
clc
pop
bound
jno
ja
mov
cld
ja
aaa
mov
loop
xchg
std
faddl
ljmp
into
loopne
mov
je
sti
xchg
xchg
xchg
fstpl
pop
mov
pop
int
mov
scas
xorl
sub
pop
and
mov
xor
pop
cltd
sub
xchg
enter
icebp
push
and
negl
inc
daa
roll
jno
cmp
cltd
push
inc
test
sar
popa
daa
inc
pop
xlat
xlat
in
xchg
aam
rcl
cmp
and
scas
xor
leave
nop
in
mov
jl
sbb
test
mov
roll
cmpsl
pop
push
adc
or
test
aaa
mov
nop
test
push
push
push
aad
out
pushf
jl
jmp
scas
add
enter
repz
add
push
cmp
pop
outsb
push
jle
mov
jns
xchg
jmp
add
stos
ja
mov
insb
push
push
push
dec
xor
cmpsl
mov
divb
xor
stc
add
push
sarl
popf
daa
xlat
decb
cmp
in
mov
outsl
inc
and
icebp
adc
test
sbb
sub
cmp
jb
push
and
pop
outsl
loope
jno
push
or
xchg
js
dec
xchg
jns
add
xchg
bound
shlb
pop
mov
dec
jmp
shlb
mov
push
ret
outsl
jmp
repz
rclb
mov
movb
dec
xchg
pushf
maxps
push
jge
inc
arpl
cmc
cs
inc
divl
fimull
xchg
int
pop
cwtl
lock
mov
adc
decb
cmpsl
push
mov
jo
das
sbb
dec
pop
or
pop
jno
pop
call
xchg
sub
xchg
fbld
jae
or
out
sub
gs
pusha
mov
push
mov
adc
lock
and
cwtl
sub
filds
outsb
mov
popf
stc
xor
sub
test
loope
mov
in
in
repnz
jp
dec
outsl
xor
jo
int
data16
lds
pop
aas
insb
or
or
testl
out
shl
in
xor
cld
xchg
js
mov
pop
popf
inc
push
data16
das
in
int
lcall
inc
fisubrl
or
aas
in
loope
mov
das
jno
js
and
fdivrs
fucomi
out
adcb
push
xchg
stos
les
das
and
inc
jecxz
add
in
cmp
aas
into
fidivrs
daa
stc
add
jmp
mov
ror
addr16
stc
xchg
int
imul
iret
push
leave
leave
jg
les
mov
xlat
es
js
fidivrs
daa
stc
add
push
push
je
jge
jmp
lods
out
mov
jl
adc
xchg
push
mov
js
sub
adc
ja
mov
ja
cs
insl
aad
cld
iret
mov
mov
shrl
cmp
aam
pop
jns
dec
pop
sbb
shl
sub
leave
dec
lcall
lods
inc
iret
push
daa
arpl
in
cmp
dec
test
pop
iret
fwait
inc
int
addr16
int3
sahf
xor
ds
lret
mov
stc
data16
mov
ja
mov
add
sub
pop
ljmp
mov
sub
mov
frstor
leave
test
lret
ss
leave
insb
inc
mov
lahf
aam
push
dec
sub
mov
or
jle
mov
fdivl
mov
mov
pusha
or
add
mov
inc
cli
daa
pushf
sub
cmp
add
in
xor
jmp
je
xchg
dec
inc
pop
popf
inc
push
xor
add
cld
xor
fidivl
sub
and
sbb
push
icebp
and
loop
xchg
mov
sahf
outsl
xchg
popf
xchg
sub
xor
stc
ds
dec
mov
ljmp
divb
jp
sbb
div
adc
push
sbb
ret
jp
scas
mov
push
sti
int3
inc
aas
pop
sbb
push
je
fldt
gs
lahf
je
call
incl
das
subb
inc
outsb
movsb
push
scas
cmp
cmpsl
inc
xchg
inc
jl
mov
scas
push
pusha
xchg
sub
std
xchg
rorb
mov
js
sarl
jns
ffree
mov
push
out
mov
iret
adc
push
add
popf
cltd
inc
xor
repnz
cltd
mulb
popf
mov
push
or
std
and
mov
pop
subb
mov
addr16
push
and
push
xor
out
popl
out
dec
data16
shll
shl
adc
adc
stos
or
imul
ret
sub
push
ljmp
cs
in
mov
arpl
jb
inc
cli
jne
or
cmpsb
repnz
out
lock
fisttpl
cmp
testl
sub
scas
aam
loop
cmp
mov
jae
sub
push
pop
ds
jge
das
and
test
inc
xor
sbbl
jle
jb
xchg
rol
in
pop
js
stos
sub
sbb
ret
pop
stc
xlat
and
mov
cmc
and
inc
repz
lcall
addl
and
ret
xchg
xlat
cwtl
xorl
mov
jns
xor
adc
sahf
roll
test
lahf
add
jmp
repnz
ss
xor
jl
xchg
sbb
jne
pop
leave
jge
jl
push
mov
push
mov
movsb
sahf
mov
xor
or
std
xor
cmp
xor
in
xchg
out
ljmp
idivl
jge
adcl
sub
cmp
push
mov
das
push
cmc
mov
divb
jmp
sarb
and
dec
loop
outsb
pop
loopne
adc
push
and
and
xchg
adc
lock
adc
or
je
daa
xor
sbb
stos
roll
popa
cltd
jg
les
pusha
les
or
ds
and
mov
mov
push
jne
dec
adc
push
xchg
rcrl
pop
sub
in
pop
int3
leave
jne
cmp
cmpsb
out
testl
mov
cltd
int3
out
dec
cmp
adc
pop
pushf
adcl
or
scas
add
sahf
xchg
xchg
push
leave
and
sarl
sbb
and
and
and
sub
push
mov
and
repnz
mov
ret
cmp
hlt
fisubs
dec
outsb
pop
sub
xchg
je
fstl
addr16
inc
fisubs
jmp
pop
or
clc
pop
adc
addr16
sbb
cmpsb
xchg
lret
cmp
pop
pop
cs
mov
orb
mov
orl
push
sub
sub
filds
outsl
xor
pop
sbb
or
inc
ljmp
rcrl
mov
mov
adc
xor
call
add
mov
fadds
adc
mov
loopne
mov
aas
mov
inc
test
shlb
inc
lods
inc
dec
fdivrl
push
enter
movsl
xchg
cmpsb
lds
xor
clc
jns
gs
ljmp
dec
and
lret
shlb
rcll
call
sub
ficompl
pop
lods
cmp
aaa
and
mov
push
sub
cmp
mov
sub
pop
inc
sbb
aas
test
and
sub
aam
push
test
xchg
rcrl
aaa
out
sbb
sbb
cmp
mov
fiadds
sbb
jp
pop
cmpsb
or
in
pop
pushf
mov
ljmp
or
pop
mov
mov
in
iret
and
sbb
inc
xor
ss
lds
mov
jge
push
and
imul
lea
ss
mov
add
cmpb
daa
add
nop
fimuls
sub
or
fidivrl
fiadds
movl
pusha
jnp
scas
js
vpcmpeqb
mov
mov
mov
clc
fistpll
scas
jecxz
jno
fidivrs
add
ljmp
call
xchg
xorb
test
fbstp
icebp
out
pop
sub
adc
std
mov
xor
iret
aas
adc
mov
push
inc
push
insb
sub
add
xchg
popf
pushf
sbb
pushf
xor
adc
out
cwtl
xor
fisttpl
xchg
outsl
xchg
data16
add
mov
cmp
adc
out
mov
dec
fmuls
xor
cs
sub
mov
jae
aad
cmp
stos
mov
das
and
pushf
sbb
sub
sbb
ret
insl
add
dec
movsl
movsl
jne
mov
push
pop
pop
stos
sub
xchg
in
and
pop
xchg
aad
jo
inc
mov
or
mov
xchg
stos
loopne
xchg
inc
hlt
outsb
mov
inc
js
push
in
inc
lock
test
fidivl
sub
mov
adcl
dec
insb
xchg
pusha
pop
jb
dec
mov
adc
aam
mov
dec
push
xor
mov
fidivs
jg
xorps
mov
out
mov
lock
aaa
fsubs
les
sub
pop
mov
xchg
out
mov
test
pop
jmp
jl
or
xchg
sbb
pushf
rclb
adc
je
jns
pushf
not
and
imul
mov
cmpsb
test
mov
leave
daa
add
adc
cmp
sub
jl
mov
jp
sbb
jmp
pop
incb
dec
push
imul
arpl
or
in
xchg
hlt
pop
mov
push
divb
jp
sbb
or
imul
clc
dec
out
shr
jae
dec
add
inc
nop
aam
jb
and
setnp
pop
inc
push
or
mov
mov
or
xchg
loope
data16
ja
stos
data16
leave
ss
divl
and
sub
push
mov
in
xchg
dec
inc
mov
push
jg
and
imul
xchg
pop
mov
das
jns
or
stos
add
cmp
push
pop
hlt
xor
scas
movsb
out
dec
in
movlhps
mov
ret
cwtl
inc
hlt
mov
push
sub
push
cmpxchg
addr16
icebp
xor
das
test
fwait
sub
std
add
add
or
or
push
lret
pop
pop
pop
es
stos
div
popa
pop
xchg
pop
cmpsb
dec
loopne
jmp
xor
imul
xor
sahf
mov
push
out
dec
mov
push
stos
fbld
into
push
scas
pop
jl
dec
cmpsl
out
mov
sahf
cld
jg
pop
hlt
add
adc
aaa
clc
mov
cmp
stos
icebp
dec
or
jb
lods
call
outsb
jb
and
leave
push
cs
xchg
repz
fsubrs
rcrl
lret
addl
mov
mov
enter
fistpl
call
ss
mov
scas
mov
mov
jecxz
add
or
insb
in
rcrl
lret
mov
adc
or
js
jl
mov
and
jle
xchg
cmp
mov
xchg
sub
je
hlt
add
shlb
xchg
and
jge
add
mov
dec
inc
push
xor
or
push
orb
sub
loopne
fwait
xchg
stc
add
fwait
cmp
andb
cmpsl
pop
fnstsw
sti
outsl
xchg
jle
xchg
pop
sub
out
in
flds
jae
roll
imul
in
xchg
xchg
mov
push
into
cmpsl
cmc
pop
lods
in
int
sbb
mov
adc
xor
repnz
adc
das
pop
xchg
push
xchg
test
je
add
sbb
inc
int
pop
xor
dec
xchg
in
or
lock
sub
lahf
lock
add
mov
std
inc
outsl
idiv
ret
mov
cmpsb
test
int3
sbb
add
movsl
into
subl
push
xchg
imul
mov
ret
pop
sti
gs
mov
mov
outsb
push
cwtl
lret
push
cmp
sbb
adc
cli
popf
outsb
add
clc
fs
addl
xor
mov
lret
orb
jnp
sbb
push
into
lods
xchg
jg
jmp
repz
dec
inc
mov
mov
mov
mov
lcall
int
or
hlt
push
imul
bound
aaa
movsb
aaa
cmpsl
lcall
inc
or
pop
cmp
fcmovnbe
push
out
mov
pusha
add
add
pop
pop
loop
jmp
jae
push
or
shl
sbb
inc
jnp
and
insb
fwait
test
data16
push
mov
pop
sti
sbb
pop
mov
int3
sbb
xor
sbb
mov
loop
test
lret
aad
pop
add
lahf
cmpsl
mov
fnstenv
aad
imul
adc
dec
inc
mov
sar
jle
jge
enter
pushf
sbb
aas
pop
jle
jg
dec
into
add
sahf
mov
mov
add
cmp
outsb
fldl
push
mov
lcall
pop
aad
sbb
sahf
mov
leave
movsl
aas
stc
jle
sub
or
pop
dec
aaa
sub
pop
mov
sub
cwtl
mulb
cmpsb
jae
dec
jo
pop
dec
jbe
inc
jp
test
stc
shlb
mov
push
pop
jnp
cmp
sahf
or
adc
js
std
adc
mov
popf
fwait
sti
cmpsb
adc
lret
enter
test
bound
or
nop
dec
repz
xor
cmp
mov
jp
pop
addb
scas
jecxz
nop
adc
cltd
jle
jae
outsl
aad
pop
inc
cmpsb
or
dec
mov
mov
sbb
fcom
rcrb
jno
xlat
pop
js
mov
insl
icebp
cld
jno
push
nop
or
test
inc
mov
rcll
sbb
dec
lret
adc
xor
mov
lret
loopne
adc
cltd
push
clc
out
ret
sbb
inc
stos
ss
mov
not
and
mov
cld
adc
movsb
add
cld
pop
add
jl
sbb
jle
xchg
adc
sarl
repnz
lahf
add
sbb
xchg
cmpsb
leave
sub
movl
push
jbe
or
aad
int
cs
pop
dec
gs
rcrl
pop
jecxz
jle
pop
aam
mov
xchg
lret
sub
mov
out
jne
stos
pop
loopne
cmpsl
mov
sbb
lea
arpl
movsb
dec
bound
hlt
into
js
mov
cmp
ret
cmp
pop
das
jge
xchg
inc
cmp
mov
loopne
in
in
test
push
lds
outsl
cmp
inc
mov
mov
and
stc
das
push
lea
pop
sub
push
lods
pop
sub
mov
loope
add
shlb
mov
and
mov
push
clc
imul
loope
xchg
in
das
out
das
out
xor
pop
sub
xor
orb
lcall
ja
fidivl
gs
shll
mov
ds
test
cmp
data16
sub
xchg
pop
sub
mov
push
dec
inc
mov
stos
cli
pop
or
int3
lcall
push
inc
pop
movsb
push
pop
subl
or
mov
jge
push
ja
xlat
addr16
xor
cmp
mov
push
out
icebp
mov
loopne
in
adc
sbb
mov
jnp
out
fcomps
ret
aad
mov
jge
adc
mov
mov
sub
hlt
dec
inc
divb
xor
loope
mov
xchg
push
fisttpl
or
sub
sbb
inc
insl
out
aad
inc
jge
outsb
jle
sub
add
mov
add
nop
mov
mov
loop
xor
cmp
push
mov
push
mov
int3
lret
mov
fdivrs
push
push
sbb
adc
adc
push
inc
dec
cmp
jl
sub
gs
les
push
dec
inc
xchg
das
mov
scas
pop
mov
shlb
pop
push
ljmp
mov
in
push
jge
rcr
xchg
fstl
sbb
cmp
and
nop
call
int3
add
popa
push
insl
aad
lock
std
aad
adc
gs
pusha
and
notl
cmp
testl
xchg
mov
mov
nop
xor
jns
adc
jmp
pop
ljmp
xor
sbb
repnz
mov
and
mov
mov
add
fdivl
sbb
test
sub
out
mov
jg
push
mov
jb
mov
out
test
cwtl
outsb
xor
mov
jne
insb
popa
loopne
push
xchg
pusha
dec
rol
pop
mov
ret
flds
jmp
or
xchg
leave
loopne
nop
je
mov
out
jecxz
pop
jmp
jge
dec
sbb
sub
pop
leave
add
pop
sbb
xchg
pop
sbb
out
mov
jge
cwtl
jae
inc
and
add
fdivrs
pop
mov
pop
xchg
stos
jo
cltd
call
mov
lea
jo
add
mov
inc
sbb
fisttpl
jns
ja
imul
ret
ret
aad
mov
jb
cltd
es
pop
jmp
sahf
adc
stc
loopne,pn
cs
pop
push
lds
inc
popa
aam
jae
scas
ret
push
dec
int3
popf
out
mov
test
lahf
loop
mov
cwtl
test
movl
in
scas
jg
shll
test
aam
jae
lods
test
push
adc
push
and
in
lods
hlt
adc
dec
inc
ror
out
inc
sub
cs
mov
mov
lods
addr16
pop
inc
pop
xchg
in
scas
mov
inc
push
popa
aam
jae
vpsadbw
out
mov
test
cmp
jns
shrb
add
leave
xor
lcall
jmp
mov
push
mov
xchg
jmp
pusha
jmp
or
jno
push
xlat
pop
cmpsl
in
xchg
rcrb
inc
sbb
stc
push
push
shll
mov
test
in
xor
cs
fmuls
js
xchg
mov
xor
jbe
les
dec
out
inc
clc
mov
push
dec
mov
test
cmc
jecxz
mov
push
in
fsubrl
lea
aas
imul
xchg
movsb
mov
adc
inc
or
cs
adc
cld
push
bound
adc
sub
sahf
lock
nop
scas
in
and
push
push
add
les
dec
outsl
and
rcrl
scas
xchg
ljmp
sbbl
imul
scas
add
aam
in
inc
jae
jb
add
enter
add
cmp
jmp
dec
mov
pushl
js
pop
sbb
mov
fstps
lahf
mov
dec
ret
cld
add
lods
outsb
jp
mov
sbb
icebp
adc
xchg
aam
shlb
add
es
into
scas
xorb
push
sub
mov
mov
mov
loope
sahf
dec
call
loope
stos
push
mov
fmull
push
ljmp
mov
push
je
pop
sub
push
nop
ret
ljmp
lret
adcb
mov
and
push
jl
mov
imul
mov
xchg
rorb
rcll
leave
xchg
dec
ret
insb
dec
or
push
mov
dec
rol
cmp
lret
imul
inc
mov
fdivl
inc
stc
push
rol
ret
mov
stos
lcall
mov
and
sub
out
scas
cmpsl
movsl
dec
lock
dec
and
cwtl
xor
dec
dec
inc
push
iret
addr16
and
jg
clc
push
incb
jl
dec
mov
mov
mov
dec
jg
pusha
insl
bound
mov
mov
lods
loopne
and
shlb
fnsave
dec
popl
es
jno
js
mov
xlat
xor
shr
mov
mov
mov
ret
and
fistpl
push
add
daa
add
fisubrl
inc
imul
paddusw
xchg
dec
fcomip
mov
daa
ret
dec
adc
movsl
jno
gs
aam
fnstsw
popa
cs
and
xor
cmp
into
test
push
mov
mov
xchg
std
mov
xchg
inc
inc
insl
add
lods
repnz
popa
xlat
out
rolb
test
jl
xor
std
and
cwtl
ds
sbb
jle
mov
inc
pop
or
aaa
and
sub
imul
mov
lods
cmpsl
cs
pusha
loop
aam
stos
mov
or
dec
adc
adc
pushf
mov
dec
call
cmp
pusha
xchg
xchg
popf
sbb
insb
cmp
loopne
or
icebp
push
shl
bound
xor
in
dec
cmp
mov
rcr
inc
sbb
scas
arpl
mov
imul
int
popa
shr
lret
jg
rcl
int3
movsl
test
pusha
aas
and
rcl
inc
sub
js
gs
bound
ficompl
or
xor
sbb
add
icebp
pop
stc
jb
push
movsl
repnz
loope
cmp
dec
mov
mov
cld
dec
add
sbb
enter
inc
aad
pop
sarl
jg
adc
not
repz
cmp
cmp
add
enter
jg
popf
cmpsb
push
outsl
dec
daa
xchg
pop
das
sub
push
das
adc
and
xchg
insl
fwait
pop
push
mov
sub
or
and
lret
outsl
rorl
jmp
incl
adc
xorb
adc
sub
sbb
sub
mov
cmp
enter
jle
lock
and
add
pop
push
aaa
mov
pop
add
sbb
or
sbb
jne
push
push
decl
imul
sub
jecxz
push
fcoms
fidivl
mov
add
aam
mov
pusha
mov
cmp
pop
mov
sbb
add
xchg
lahf
movsl
and
sub
cmp
sbb
js
mov
enter
jle
addl
cmp
les
mov
loopne
push
ss
inc
sbb
repz
cmp
or
push
fldcw
mov
loop
mov
pop
push
mov
adc
es
xchg
ret
mov
push
sub
stc
in
je
clc
lea
scas
int3
sar
xchg
popa
xor
xchg
in
or
jmp
inc
int3
scas
sub
xchg
fstps
arpl
pop
pop
fsubr
add
sbb
adc
mov
loopne
push
jbe
aas
addr16
mov
hlt
aad
adc
xor
das
jbe
addr16
sti
pop
out
adc
fnstsw
shll
dec
mov
mov
popa
mov
sub
xchg
shl
and
cwtl
dec
mov
pop
push
addr16
ret
add
xchg
scas
es
aad
xor
imul
je
mov
cli
add
lcall
scas
loope
adc
xchg
hlt
pop
push
fnstenv
jbe
pop
cmpsl
scas
jae
lock
fwait
mov
je
pusha
fidivl
lret
mov
jbe
push
repz
cmpl
sub
mov
add
loope
dec
pop
fimull
sub
dec
xor
cwtl
adc
int
jmp
repnz
adc
leave
mov
lahf
mov
js
jo
fwait
add
fadds
je
loop
lds
lock
mov
and
cli
repnz
iret
je
xchg
mov
mov
lock
lods
mov
icebp
out
pop
js
sub
jns
xlat
notb
jl
push
mov
lods
xchg
push
sub
xchg
sbb
aas
ficoml
inc
sahf
add
cmp
sbb
cwtl
push
les
test
mov
push
dec
stos
ret
mov
xor
cli
add
push
rcrl
cmp
sub
push
rol
push
nop
cwtl
sbbl
sub
adc
push
pop
mull
cmp
js
push
xor
sbb
push
insl
and
cmp
mov
cmp
pop
sub
std
jb
mov
repnz
dec
rolb
repnz
fdivrs
inc
pop
scas
imul
mov
xor
into
addr16
inc
and
dec
mov
faddl
push
mov
jno
cli
iret
sbb
js
rcll
push
je
and
xchg
aad
movsl
or
push
jmp
sbb
out
popf
cmp
sub
mov
mov
cmp
je
jg
sub
xchg
or
test
xorb
sub
mov
stos
add
push
outsb
dec
iret
in
scas
test
mov
fucomip
hlt
mov
or
cmpsl
dec
mov
arpl
jp
sbb
int
iret
out
hlt
aam
in
mov
xor
repz
and
mov
mov
pop
push
push
sub
mov
into
dec
push
stos
pavgb
fadd
xchg
inc
inc
insl
add
or
cmp
aas
les
cs
addr16
mov
push
add
icebp
mov
rclb
loopne
mov
jle
rcl
xchg
dec
adc
and
loop
xchg
mov
adc
mov
pop
inc
outsl
cmc
xchg
mov
repz
push
popf
sub
sub
mov
es
sbb
lds
push
or
lret
and
call
xchg
stc
cmpsb
stos
fbstp
ja
adc
rclb
add
scas
jne
add
xor
mov
incl
pop
pop
insl
adc
mov
dec
or
xchg
ds
jmp
dec
jo
sti
xor
adc
clc
xor
mov
adc
pop
push
fsts
cmpsl
inc
jo
mov
sbb
add
inc
les
test
push
pop
movsb
cld
jg
outsb
pop
rclb
lods
mov
roll
daa
mov
cmp
adc
xchg
cmp
icebp
mov
cmp
clc
mov
loopne
in
cmc
std
jb,pn
into
outsb
inc
xor
sti
stos
gs
ret
repz
daa
jns
mov
dec
or
mov
lods
cmp
cmp
add
shlb
fs
or
mov
ds
add
es
int
adc
jp
jns
cmp
pop
xchg
and
cmp
or
iret
scas
mov
mov
mov
xchg
test
jno
repz
mov
cmpb
add
int3
dec
leave
push
cltd
mov
call
add
arpl
pop
push
in
aam
test
jb
cmp
cwtl
es
mov
xor
mov
mov
aam
xor
pusha
iret
mov
xor
mov
jne
cmc
ret
repnz
mov
gs
popf
xchg
in
jbe
aam
out
imul
aaa
dec
lock
jecxz
sub
sti
inc
xchg
cmp
out
mov
movsb
lret
cmp
inc
mov
dec
xor
cmp
out
mov
cmp
mov
sub
fs
mov
pop
mov
loopne
and
xchg
cld
repnz
out
jmp
or
addr16
push
dec
test
jnp
fisubrs
in
movsb
outsb
jbe
pop
leave
push
push
repz
mov
gs
mov
addr16
pop
adc
mov
imul
loopne
or
fbstp
xchg
iret
pop
push
xorl
jns
jge
jae
ret
testl
mov
xchg
push
jae
ja
xorb
add
jae
out
push
inc
ja
or
popa
js
inc
cmp
sbb
adc
jge
push
repz
int
mov
lds
rcrb
and
lcall
pop
loop
push
test
aam
cld
test
shl
imul
in
mov
movb
scas
or
pop
insl
mov
inc
out
into
cli
or
insb
mov
sbb
push
cmpsl
test
fstps
mov
mov
int3
ret
lcall
mov
mov
mov
xor
leave
mov
push
pop
inc
pop
sbb
mov
data16
push
fcom
lcall
lock
jns
jbe
call
insl
es
gs
outsl
xchg
or
jb
leave
cmp
cmp
cmp
ret
mov
repnz
add
inc
adc
mov
push
loopne
insl
and
sahf
mov
lods
inc
jbe
push
lds
scas
and
adc
jg
hlt
adcl
out
jge
xchg
movsb
int
into
icebp
cmp
adc
stos
dec
dec
es
add
mov
xchg
xchg
jp
std
inc
sbb
iret
test
adc
jnp
mov
imul
int3
sti
inc
adc
js
enter
jg
fs
pop
jne
mov
out
ret
fcmovnbe
roll
add
dec
cmp
adc
fucomip
cmpsl
std
scas
adc
mov
mov
subb
or
loope
mov
lcall
sbb
mov
nop
xor
sbb
out
les
inc
add
popa
popa
xchg
cmc
out
decb
in
xchg
cmp
ds
rcll
inc
adc
pop
les
jg
adcb
insl
inc
xor
add
lahf
je
stc
xchg
sbb
push
lcall
das
inc
hlt
jnp
lret
push
dec
jno
popf
aas
xchg
dec
xor
inc
leave
or
mov
scas
cmpsl
outsl
push
add
cmpsb
xchg
cmp
cwtl
sarl
jp
imul
push
and
xchg
push
dec
jne
add
and
jp
mov
test
movb
ljmp
ljmp
sub
pop
push
mov
add
out
ljmp
out
aas
lds
adc
sti
sub
inc
test
ffree
add
pop
neg
jne
aas
into
fildll
mov
cld
incb
jl
dec
mov
sarl
stc
push
pusha
adc
pop
jns
mov
pop
jno
mov
xor
lret
inc
leave
sbb
cmp
or
sbb
pop
das
cmp
jmp
scas
jno
add
xchg
pop
rol
xlat
fistpll
push
in
icebp
mov
daa
ds
sti
cs
into
adc
iret
addl
or
repz
inc
dec
push
leave
iret
insb
jo
outsb
outsb
xor
push
cld
push
push
inc
adc
cmpb
iret
pop
ljmp
mov
cmp
movsb
outsb
xchg
mov
or
mov
xor
ret
cmp
pop
sbb
imul
cltd
fs
push
dec
xchg
inc
cmp
cmp
adc
and
cmp
dec
ja
pop
daa
or
pusha
push
fwait
mov
repnz
add
loop
test
notl
in
mov
aas
popf
ret
mov
imul
jmp
and
int
adc
adc
out
pop
insb
test
cmpsb
xchg
stc
dec
xchg
ret
jmp
push
dec
jnp
arpl
lret
push
add
jge
int
inc
imul
es
push
negb
std
and
sbb
lcall
sbb
fistpll
mov
sub
inc
push
repz
sarb
fwait
popa
mov
in
lcall
ds
add
inc
inc
mov
movsb
xor
lret
jno
pop
roll
aaa
add
push
mov
lahf
pop
icebp
sub
xor
mov
pop
cs
adc
jge
cld
add
fnstsw
add
out
jmp
mov
cmpsl
cmpl
shlb
add
or
inc
sub
cmp
push
dec
jmp
lods
in
sub
pop
mov
aad
add
push
mov
jo
sbb
and
or
test
out
fwait
out
pop
jmp
aaa
call
jle
mov
scas
movsb
push
jge
inc
mov
ss
mov
add
hlt
adc
pop
repz
cmc
pop
push
add
xor
out
or
sbb
mov
sub
mov
cmp
popf
xor
cld
xor
xchg
addr16
cmpsl
dec
inc
popf
xchg
test
push
fisubs
ret
call
or
cmp
outsb
out
scas
xchg
mov
les
and
test
mov
jno
jnp
dec
fildll
in
sbb
sub
xor
imul
mov
subb
shr
out
imull
mov
jbe
popa
xchg
call
aad
mov
push
cld
scas
fnclex
out
inc
bound
push
mov
jge
cmpsl
dec
push
imull
les
push
cmpb
mov
mov
outsl
jno
xchg
inc
or
stos
out
xor
andl
pop
rol
add
sbb
push
popa
icebp
xchg
mov
int
adc
je
add
jmp
mov
in
cmpsb
mov
mov
dec
adc
xor
jmp
cmc
sub
call
xchg
sub
cmpsb
jle
jg
pop
push
sub
fdiv
push
xor
push
stos
mov
lahf
cmp
cmpsb
xlat
cld
xchg
jns
movsb
pop
pop
pop
add
sub
arpl
push
lret
mov
jmp
inc
and
sahf
ds
jbe
lods
in
mov
sti
dec
pushf
jmp
dec
mov
pop
jge
lret
jae
test
mov
fwait
scas
bound
stos
stos
shll
dec
xor
outsb
pop
lcall
add
leave
inc
xchg
cs
fstpt
negl
sbb
push
aam
dec
movsl
add
adcl
outsl
sub
ror
mov
dec
fildl
in
mov
sbb
sti
and
pop
mov
dec
clc
mov
std
lahf
fisttpl
int3
mov
aad
lea
jnp
inc
sbb
cmp
dec
shlb
pop
scas
mov
mov
cld
mov
int
sbb
fiaddl
push
in
hlt
cmp
aad
push
and
aaa
pop
jnp
push
outsl
movsb
cmp
stos
stos
jbe
les
shlb
in
jp
out
ljmp
repnz
xor
jl
ret
lret
xchg
mov
mov
cmp
movsb
and
repz
je
add
cli
ja
std
enter
pop
testl
mov
cmpsl
lahf
lock
test
xlat
inc
int
xchg
cmp
push
and
cmp
test
push
mov
jns
pop
push
cmp
subb
or
mov
pushf
addl
mov
cmpsb
xchg
subl
fisttpll
mov
mov
jo
adc
cmp
leave
in
js
arpl
or
mov
xor
dec
add
scas
ljmp
negl
lea
mov
xor
div
push
rcrb
jle
mov
xor
and
ds
fldl
fiadds
jmp
push
pop
pop
inc
jae
xchg
addr16
xchg
call
push
inc
int
bound
and
int
in
inc
push
shll
sahf
addr16
sub
push
movsb
adc
stos
lea
out
push
pop
inc
into
mov
sbb
pop
push
cmpsl
pop
pop
stos
mov
xor
rcrl
xchg
int
add
outsb
test
jo
xlat
fs
mov
inc
idiv
pop
popa
cmp
pop
dec
aam
or
fmuls
cmpsb
fs
pop
fs
and
pop
xchg
lods
add
xchg
fimuls
int
scas
pop
in
mov
js
sar
push
push
mov
ret
fistpll
lods
rolb
mov
in
rol
and
imul
jae
pop
test
cmp
cmpsb
je
dec
sbb
repnz
scas
cmpsl
xchg
inc
jg
push
sbb
pop
add
aam
xor
lea
mov
pop
adc
cld
jns
push
mov
mov
stos
cs
shrb
add
pop
mov
loope
adc
cwtl
jmp
fwait
dec
out
inc
fisubrl
sbb
mov
mov
dec
in
fcmovnu
icebp
lods
push
imul
imul
inc
sbb
test
cmpsb
xor
dec
sub
jl
sbb
inc
cmp
test
push
outsb
stos
mov
cmp
mov
int3
push
mov
sbb
dec
stos
je
pop
inc
lcall
arpl
sbb
jp
or
cmp
lock
out
jo
jl
adc
int3
mov
lcall
loopne
divb
fdivs
push
lds
xchg
dec
adc
xor
mov
push
pop
loope
push
rcrb
mov
sti
cmc
xor
and
fildll
dec
xor
or
int3
xor
xchg
sub
sti
pop
xorb
ljmp
jno,pn
in
pop
jle
mov
inc
inc
nop
insl
adc
fidivrl
jp
aas
loop
lret
dec
bound
stc
jo
test
push
mov
fcompl
mov
mov
cld
leave
inc
adc
push
icebp
push
test
jo
fs
xor
popa
movsl
cli
ljmp
cwtl
jecxz
push
icebp
popa
lahf
xor
or
leave
inc
lea
out
mov
sub
and
popa
pop
in
call
mov
stos
lods
into
xor
pop
cwtl
mov
lcall
lcall
mov
dec
pop
loopne
sbb
pop
mov
dec
loope
and
dec
stc
add
sub
hlt
and
inc
andl
clc
arpl
pushf
daa
test
sbb
cmpsb
inc
push
sbb
sahf
mov
mov
cmp
xchg
dec
or
scas
fstpl
add
jne
insb
push
inc
sahf
movsl
test
les
cmp
dec
xor
out
mov
addr16
xor
dec
in
in
sbb
fs
jb
addr16
jmp
out
sahf
into
in
inc
ljmp
hlt
fisttpl
les
lret
pop
stos
cwtl
jecxz
sub
sub
and
subb
push
pop
sub
inc
and
xor
nop
scas
mov
or
adc
scas
pop
mov
pop
test
imul
and
jns
and
and
xor
leave
push
pushf
lret
into
adc
mov
jnp
and
mov
popf
jmp
dec
mov
and
mov
push
ror
adc
mul
insl
sbb
gs
into
add
xchg
enter
push
or
les
mov
lret
mov
jno
adcl
and
scas
or
xchg
mov
movsl
stos
push
jg
out
jmp
pop
scas
outsb
or
jg
scas
fsubrl
cmp
scas
pop
aas
int3
inc
outsb
std
add
fisttps
and
mov
out
popf
dec
imul
mov
cmc
mov
mulb
clc
mov
movsb
jecxz
rcrb
out
inc
pusha
mov
mov
pop
jle
fs
xchg
jge
sub
mov
call
cmp
mov
xor
push
jno
or
notl
imul
cmp
int
push
insl
pop
cmpsl
aam
or
jmp
cmp
inc
jbe
jl
dec
cmpsb
cwtl
xchg
arpl
insl
int3
and
fcomps
cltd
test
push
mov
fcmovne
mov
pop
mov
mov
adc
cmp
insl
push
pop
fimuls
dec
std
andl
popf
pop
cmpsl
imul
and
mov
test
add
sub
jo
inc
push
pusha
fbstp
fs
and
and
mov
addr16
adc
dec
dec
inc
jae
int3
jno
push
cmp
xlat
adc
xchg
fwait
daa
sbb
inc
arpl
push
push
sub
jo
shlb
jne
sbb
push
and
sub
adc
leave
jbe
jo
out
lods
mov
lahf
add
test
push
adc
sbb
lods
or
jl
add
push
jbe
ljmp
xchg
cmpsl
add
jb
test
pop
icebp
stos
fmul
ss
sbb
faddl
cmp
jns
int3
ljmp
cli
xor
aam
push
add
mov
scas
jge
push
dec
or
jne
push
xor
mov
pop
orl
xor
ret
or
jp
in
push
and
int
mov
fdivrp
or
xchg
inc
imul
imulb
leave
dec
push
cmpsl
sub
shrl
inc
dec
lods
fbstp
popa
push
fisubs
sub
test
iret
inc
movsl
in
dec
rorl
inc
stos
and
or
cmpsb
lods
insl
pop
or
pusha
pop
cmp
movsb
pop
fadd
mov
fbld
clc
xor
sar
out
aam
loope
sub
mov
inc
sbb
xor
pop
mov
jmp
xchg
adc
pop
rcrb
and
fidivl
add
jno
mov
dec
arpl
cwtl
pop
xchg
adc
sarl
dec
or
or
or
cmpsl
jmp
mov
in
push
ds
ret
std
scas
das
mov
lret
pop
test
sub
push
psubb
add
mov
cmpsb
das
adc
int3
cli
jp
dec
addr16
scas
mov
jg
xchg
adc
pusha
xor
sbb
mov
aad
inc
fimull
loop
adc
and
inc
push
pusha
pop
lret
insb
xor
call
loopne
push
repz
adcl
in
sti
adc
fimull
jo
pop
mov
sbbl
inc
mov
pop
and
and
push
inc
stc
shl
in
jl
shrb
std
fsub
jl
out
lcall
push
adc
ljmp
inc
pop
lods
test
and
dec
jmp
int
inc
inc
jecxz
mov
loope
xor
ss
out
in
js
dec
or
test
shlb
push
push
cmp
add
test
cmp
sub
mov
out
icebp
pushf
sarl
adc
das
mov
sti
out
jl
inc
mov
cli
mov
pop
mov
scas
leave
fdivrp
ret
push
js
inc
sub
lods
jns
xchg
rorl
and
andb
shlb
int3
mov
lds
and
pusha
jno
ljmp
add
dec
jnp
mov
and
lods
adc
pop
sub
clc
jg
cmpsb
sbb
neg
into
movsb
das
cli
add
test
adc
iret
shl
lock
xchg
inc
lea
insb
fistl
aam
push
fadd
cmp
movsb
gs
sbb
push
push
sbbl
outsl
add
mov
or
inc
xchg
xor
loop
mov
insl
lahf
shl
js
xchg
cmp
mov
dec
add
je
rcrb
cli
sbb
mul
inc
idivb
out
fisttpl
add
frstor
daa
in
std
shlb
in
mov
push
cmp
or
loop
pop
das
mov
add
cmp
std
in
iret
dec
cwtl
jmp
push
dec
mov
cmp
sub
bound
fstl
add
rorl
sbb
mul
jecxz
icebp
ds
and
arpl
xorb
or
jbe
inc
adcl
add
mov
push
repnz
xor
sub
sbb
stc
cmpsl
mov
pop
dec
adcl
push
insl
rcrl
cmp
int
pusha
sbb
sahf
cmp
test
loope
xchg
fimuls
cmp
add
lret
inc
cmp
data16
and
and
rcrb
in
jno
xchg
cli
aam
add
rorl
lcall
xchg
aaa
mov
lcall
and
adc
jecxz
pop
xchg
jle
repnz
jns
icebp
dec
xchg
push
mov
sbb
lcall
adc
push
or
sub
cltd
mov
push
mov
rcl
jle
gs
xorl
mov
mov
cmp
es
aam
sbb
and
add
sbb
jne
out
dec
xchg
decb
adc
movsb
call
mov
icebp
into
fwait
dec
mov
mov
push
fisubrs
call
push
shl
fdiv
mov
fwait
mov
subl
jg
xor
lret
inc
cmpsb
shrb
test
pop
aas
adc
and
ret
mov
test
xchg
inc
cwtl
cmpsb
mov
fnstcw
sub
lock
jbe
pop
mov
test
push
xor
push
out
popf
inc
and
mov
xchg
jecxz
sbb
xchg
mov
incl
jb
daa
int3
outsl
inc
test
sbb
mov
pop
inc
in
into
sbb
inc
push
outsb
mov
out
je
and
jle
pusha
popa
push
mov
lret
jo
lret
lahf
jg
mov
push
jb
test
mov
leave
xchg
mov
push
rcrl
dec
sbb
mov
jl
inc
xchg
leave
js
jg
add
push
or
xor
stos
xchg
jae
push
cmp
rclb
lret
sar
and
or
xchg
popf
xor
cli
stos
xlat
arpl
jb
add
rcrl
sub
xchg
xlat
rolb
and
xchg
mov
leave
mov
or
cmp
aam
imulb
aam
jae
mov
das
jo
lock
negl
or
iret
testb
jecxz
xor
add
mov
adc
aad
jno
add
std
test
xchg
jbe
movsl
adc
das
loope
cmpsb
adc
mov
test
test
jecxz
fs
js
test
stos
dec
mov
call
mov
arpl
push
cmp
cld
push
mov
sbbl
or
mov
pop
arpl
mov
je
or
jl
setl
sub
xchg
nop
incl
into
lds
cwtl
add
orl
jns
es
lds
jmp
lret
mov
ja
add
fcomip
cmpsl
das
xchg
mov
add
aad
adc
rclb
adc
jae
insl
cmpsl
sbb
repz
xor
xchg
jg
jno
movsl
jno
mov
cmp
mov
push
add
sbb
or
inc
and
jl
in
testb
mov
xor
shlb
mov
mov
movsl
js
pop
pop
dec
xlat
xor
xor
sbb
in
repz
das
dec
pop
mov
jmp
mov
test
shlb
shrb
dec
ds
push
enter
or
or
popa
lds
gs
aas
fists
aas
add
lea
out
jge
sub
sub
out
sbb
jge
xor
mov
repnz
adc
nop
test
inc
sub
cs
pop
or
fcoml
sbb
and
or
adc
imull
mov
jae
xchg
sub
mov
in
mov
sahf
fsubrs
cmpb
fiaddl
cmc
mov
inc
insl
imul
sbb
mov
rorb
cmpl
orb
js
movsl
jne
mov
das
pop
cmp
adc
ffreep
sub
icebp
inc
jne
or
cmc
out
dec
stos
mov
push
ja
xchg
push
mov
cs
xchg
jle
or
push
jns
mov
push
popa
out
aad
arpl
inc
sbb
iret
js
xchg
imul
push
loope
mov
out
int
orl
mov
bound
xor
inc
add
ficompl
jne
outsb
pop
dec
add
jmp
mov
xchg
xlat
push
or
mov
push
in
movsb
cmpps
pop
jl
fldl
pop
imul
xor
hlt
in
stos
add
adc
leave
push
aam
or
or
daa
shrb
cmp
add
pop
xchg
jno
jecxz
jle
aaa
cwtl
xchg
push
cmp
jo
pop
out
xchg
pop
ja
lret
faddl
inc
mov
and
clc
adc
out
cs
daa
les
fldl
test
xchg
cmp
sbb
rclb
add
inc
push
inc
ljmp
dec
fisubl
daa
mov
mov
xchg
pusha
shrl
subb
fbld
dec
aam
xor
gs
int
add
loopw
adc
int
mov
push
inc
insb
mov
inc
dec
call
xchg
fldenv
fsubrl
dec
pop
or
daa
or
repz
cmpsl
imul
jne
mov
call
stc
cltd
sarl
add
jo
adc
mov
ja
push
inc
jbe
and
rcl
xor
repz
aas
out
jge
or
stos
fbstp
inc
and
adc
mov
pop
sti
sub
mov
inc
pop
imul
sbb
hlt
fnstcw
and
mov
inc
ss
cmp
inc
js
xchg
or
out
cmovg
mov
and
dec
push
clc
push
adc
mov
pop
fldt
mov
stos
int
mov
inc
cmp
mov
mov
in
xor
xor
inc
andl
mov
push
sub
jl
xor
mov
push
loopne
mov
in
or
aad
js
hlt
imul
les
mov
mov
out
sbb
test
adc
sbb
outsb
fnstsw
enter
es
fwait
adcl
repz
loop
dec
adc
mov
adc
inc
insb
pop
scas
cmp
mov
lret
push
jnp
decl
sub
sub
mov
ds
jmp
negb
mov
mov
xor
xor
push
push
push
addr16
mov
inc
fsub
sub
cmpsb
mov
or
pop
ss
bound
call
sub
xorb
out
bound
adc
dec
test
cltd
push
jne
jmp
and
and
cld
jge
out
pop
imul
mov
aas
mov
jle
cmpsl
mov
repz
adc
ja
incl
mov
xchg
fdivrs
rclb
inc
cmp
mov
rep
dec
and
mov
sub
shl
add
pop
mov
scas
cld
daa
out
js
pop
repnz
jmp
ret
push
mov
ja
out
test
aas
fcmove
mov
dec
shll
sub
sbb
mov
pop
and
adc
dec
mov
push
push
push
push
mov
fnsave
mov
mov
je
fxch
cwtl
push
add
xchg
bswap
pop
or
les
mov
jnp
inc
insb
push
push
leave
movsb
dec
in
xchg
and
push
xchg
scas
ljmp
and
popf
pop
xor
mov
out
andb
data16
xchg
aam
testl
fucomp
jl
in
repz
enter
ljmp
jbe
pushf
mov
xor
out
popf
sbb
movsb
js
pop
adc
arpl
loope
jb
or
sub
jp
imulb
inc
dec
in
dec
xor
arpl
gs
sub
inc
cwtl
test
xchg
dec
push
sbb
cmp
call
jecxz
and
jno
in
dec
xchg
testb
pop
aam
in
xor
jno
out
mov
pop
pop
push
mov
nop
sbb
jo
mov
cmp
adc
mov
int3
aad
adc
addl
xor
jno
out
mov
pop
pop
push
mov
nop
dec
push
push
movsb
dec
fwait
mov
cmp
movsb
fwait
ret
jne
fstpt
sub
movsb
jp
pop
cmp
stc
into
push
pop
subb
pop
rorb
inc
in
cmc
sub
lods
movb
cli
movb
dec
sub
cmc
jns
adc
sti
test
pushf
fwait
push
pop
mov
pop
loop
sub
cmp
jo
cmp
rorb
or
dec
stos
adc
test
popl
hlt
test
movsb
rolb
test
adc
cmpsl
push
mov
test
xor
fldcw
dec
iret
sbb
pop
inc
test
adc
les
xchg
push
xlat
push
or
cmpl
call
pop
sbb
fmull
xor
dec
lds
out
insl
push
sbb
dec
ret
ds
pop
movsl
mov
outsl
lret
movsb
pop
dec
sub
popf
call
mov
fwait
scas
sub
andps
inc
or
adc
jp
es
xchg
int3
inc
or
push
decl
pushl
movsl
loopne
orb
xchg
dec
loope
and
xchg
mov
imul
add
push
aad
scas
les
adc
les
sub
jnp
stos
lds
mov
dec
xor
mov
mov
mov
xor
jo
outsb
cld
mov
sub
insb
hlt
js
test
xor
dec
inc
push
inc
add
repnz
das
inc
and
shrb
shl
sarl
imul
mov
fisttps
mov
js
aam
ret
out
xchg
xchg
mov
sub
inc
mov
lock
add
mov
and
xor
mov
push
jne,pn
mov
push
dec
test
ret
or
xor
push
leave
xor
cs
rolb
sub
pop
cli
mov
dec
pop
movsb
jbe
and
sbb
dec
push
push
rcll
mov
inc
add
jne
in
inc
xchg
cmp
into
xchg
add
adc
mov
sar
xor
nop
jne
ds
ficompl
negl
insl
adcl
adc
rolb
sub
jb
pop
repnz
push
xchg
mov
sbb
stos
jb
xchg
pop
xor
mov
inc
popa
jmp
xchg
call
jnp
mov
jnp
ds
adc
leave
lds
mov
sbb
sub
xchg
bound
daa
mov
fadd
call
push
jb,pt
jno
mov
mov
and
mov
sbbb
fcoml
movsb
jns
dec
and
push
mov
test
mov
fdivr
leave
fwait
pop
adc
pushf
jg
sbb
mov
ljmp
push
sub
scas
movsb
icebp
shr
adc
ret
mov
lods
mov
and
xchg
or
loope
enter
test
lret
jae
add
fs
dec
sub
inc
or
push
stos
mov
fstpt
aas
jmp
pop
fldt
into
adc
pusha
gs
lods
or
add
adc
ja
ret
fnstenv
repz
adc
idivl
adc
cmc
shll
dec
adc
loop
lret
cmc
outsl
or
push
fmuls
sbb
cld
xchg
jno
outsb
outsb
iret
int
test
pop
loope
sbb
and
shlb
popf
mov
je
dec
pop
lret
jl
out
xor
mov
push
filds
rep
mov
out
mov
sti
jg
jae
jns
std
jbe
mov
inc
lods
dec
fisubrs
sub
mov
adc
push
mov
out
addb
mulb
cmpsl
jmp
out
pop
sbb
cli
insl
cmp
mov
int3
xorl
adc
mov
push
and
inc
ror
sub
cmp
mov
and
cwtl
lods
lret
adc
aaa
inc
fistpl
or
mov
push
dec
mov
int
adc
sbb
cmp
aaa
xor
pop
push
cltd
and
mov
imul
testl
stc
add
movsl
cmp
imull
sbb
stos
iret
sbb
pop
or
jle
mov
cmp
mov
cmp
loopne
dec
movsl
dec
das
ja
inc
xchg
mov
jmp
dec
ret
cli
or
js
push
jecxz
pop
mov
dec
ds
cld
stos
and
lods
insl
jl
mov
fdivl
pop
mov
jge
shr
std
mov
dec
mov
in
pop
push
test
xor
out
push
outsl
mov
in
sbb
rorl
add
cmc
lock
and
jecxz
rclb
sbb
push
ja
out
dec
pusha
lds
addr16
sbb
imul
sahf
rcrl
mov
int3
mov
dec
fildll
pop
std
jns
addr16
pop
fsub
ljmp
mov
addb
xor
and
adcb
push
movsl
inc
mov
fbld
iret
data16
pop
je
pop
jmp
or
test
sarl
test
lds
out
test
pop
gs
cmc
jnp
xor
stos
fiadds
mov
mov
mov
ss
in
mov
aaa
js
or
add
inc
pop
inc
or
icebp
jo
xchg
add
divb
add
or
adc
and
shlb
adc
or
push
dec
jno
fs
cmpsb
out
cmp
mov
pop
ljmp
test
inc
ja
inc
mov
enter
out
push
inc
sbb
pop
stos
fs
pop
test
dec
sub
add
sar
lods
jle
shlb
repnz
mov
cmp
stc
jo
adc
or
cmpsb
jb
stc
movsl
mov
xchg
push
inc
cmpb
movsl
aad
mov
cmp
cwtl
pop
popf
xchg
pop
hlt
in
inc
or
pop
mov
gs
test
cs
lods
adc
jp
lods
lods
mov
lea
cmp
mov
and
push
mov
jp
jnp
lods
into
mov
mov
push
repnz
jp
mov
stc
sbb
repz
inc
and
mov
xor
mov
cmpsb
aas
shlb
ja
jb
inc
lret
dec
xor
xor
lcall
stos
xchg
push
loopne
xor
iret
dec
jecxz
mov
std
fsin
push
mov
movsl
sti
jae
mov
lret
clc
loopne
pop
sub
sarl
pop
and
xor
dec
adc
cmp
call
xchg
shlb
sub
shrb
lret
fdivrs
pop
pop
mov
xchg
mov
sub
mov
imul
lret
enter
mov
and
pop
pop
jo
fwait
sbb
imul
pop
inc
sbb
fisubl
xlat
in
sahf
adc
fildl
lds
or
pop
xor
xor
fidivs
inc
xor
dec
mov
fiadds
mov
enter
testl
cmp
pop
inc
andl
imul
pushf
cmp
xor
inc
push
in
repnz
sbb
jg
pop
mov
imul
cmpsb
add
out
cmp
out
mov
hlt
add
adc
cltd
lods
jne
sahf
cld
inc
add
addr16
cmp
nop
pop
cmp
dec
lea
pusha
scas
fsubr
test
xor
mov
aaa
stos
mov
in
mov
clc
adc
or
into
aad
lods
inc
jecxz
adc
push
inc
push
pop
test
fs
mov
leave
sbb
push
dec
mov
movsl
mov
cwtl
icebp
cmp
iret
movsl
sub
mov
and
add
dec
inc
stos
cli
cld
mov
dec
nop
stos
std
or
inc
fidivrs
divb
xchg
punpckhwd
scas
and
lahf
addr16
cli
in
imul
pop
enter
dec
repz
xor
or
repnz
ds
push
sbb
fld1
inc
pop
mov
arpl
inc
push
dec
and
call
push
mov
adc
mov
mov
fsubrl
mov
pop
dec
imul
jle
jp
cmp
pop
push
mov
xchg
int
cs
adc
jle
and
popa
fldln2
aas
mov
adc
push
mov
xchg
add
stc
rcrb
sahf
or
mov
nop
pop
cmp
adc
push
sub
jg
jmp
jle
adc
pusha
xor
repz
jecxz
sbb
dec
data16
fistps
dec
scas
stc
arpl
inc
into
xchg
jo
ret
sub
jbe
add
mov
or
jae
out
icebp
jnp
pop
inc
push
push
adc
ret
inc
cmp
test
cmp
pushl
jg
repnz
outsl
mov
js
andl
pop
loopne
or
xor
adc
test
mov
push
dec
shlb
lcall
ss
adc
cmpsl
dec
insl
add
loope
and
fcoml
addr16
inc
pop
mov
push
test
int3
xchg
and
stc
mov
popa
push
push
cwtl
sarb
push
jns
in
or
lcall
js
mov
pop
rcrl
and
mov
and
xchg
fs
ds
xchg
mov
lock
mov
stos
cmc
out
xor
je
or
ret
mov
ljmp
push
push
ss
icebp
jnp
mov
iret
sbb
or
pusha
jg
rorb
gs
xor
inc
outsb
adc
mov
xchg
dec
lret
mov
xor
mov
repz
dec
sbb
rorl
loop
nopl
push
shlb
cs
push
loope
pusha
add
mov
adc
sub
sbb
fcompl
sbb
adc
jb
in
xchg
inc
out
ja
ljmp
push
ffree
out
xor
add
addr16
or
xor
lahf
inc
mov
fsubl
addr16
adc
shr
push
cs
jbe
push
jecxz
cli
sub
enter
test
jo
lods
adc
subb
mov
rorl
cli
xchg
xchg
push
or
mov
jno
dec
aad
mov
roll
ljmp
rorb
fldcw
in
shrl
fs
xor
jmp
adc
mov
push
fisubrl
fisttps
call
mov
hlt
inc
push
pusha
clc
sahf
lods
bound
sbb
setns
adc
jecxz
dec
out
and
inc
adc
fildll
mov
aas
mov
not
mov
rcrb
jmp
mov
sub
xor
mov
in
ret
mov
xlat
daa
mov
xor
push
sub
loopne
lods
add
add
cmp
xchg
mov
push
ja
subb
inc
mov
clc
das
pop
repnz
inc
insl
in
in
ds
repnz
scas
scas
sub
test
test
adc
movsl
mov
ds
insl
xor
xchg
fisttpl
test
gs
sub
xor
adcb
gs
push
ficompl
mov
inc
or
mov
loop
lock
int
roll
xchg
jg
xchg
cmc
int
push
js
pop
mov
lcall
inc
and
lds
add
push
jmp
in
nop
cli
out
jecxz
jnp
adc
dec
ja
out
mov
mov
clc
movsl
pop
rcl
int
mov
xchg
cs
inc
add
push
adc
ret
jp
dec
push
flds
shll
clc
push
iret
lock
scas
mov
stos
or
cmpsb
fiadds
icebp
mov
mov
add
cmp
iret
and
loopne
pop
inc
test
mov
cltd
push
add
loopne
fcomi
inc
test
push
and
mov
int3
cld
fcomi
and
add
lahf
fnstenv
dec
popa
push
rcr
xchg
mov
add
jbe
mov
out
sbb
adc
mov
jp
pushf
mov
decb
lahf
into
fstps
loopne
xor
push
std
inc
mov
and
jl
out
sub
cmc
and
mov
jnp
lcall
div
jbe
lret
aad
out
sub
mov
add
inc
out
andb
jl
xchg
shll
inc
jp
movsl
fildl
push
mov
cmc
jmp
iret
fnsave
js
scas
pop
push
test
das
frstor
mov
leave
call
and
cmpsb
aam
jmp
jns
dec
aas
push
mov
sbb
inc
or
insl
nop
xor
xchg
xor
add
or
repz
ljmp
and
jbe
push
mov
xor
sbb
lock
mov
xchg
pop
and
cmp
push
adc
mov
punpckhwd
enter
pushf
sbb
lcall
pop
rcll
ret
in
jbe
mov
sub
lret
xchg
xchg
xchg
jbe
mov
xchg
aaa
je
addr16
pop
and
cmpsb
call
push
pop
mov
pop
scas
daa
push
xchg
adc
mov
sub
out
push
cld
movsl
jecxz
test
xchg
mov
in
mov
fldt
mov
addl
mov
pop
xchg
enter
mov
pop
call
inc
rorb
mov
push
bound
test
push
sbb
dec
out
jecxz
pop
ss
cld
xchg
test
aad
push
out
lods
push
dec
pusha
lods
mov
mov
push
jns
lock
imul
add
jbe
mov
inc
nop
scas
or
lahf
lret
cmpb
and
push
push
fmul
sub
lods
fldt
cli
setne
mov
and
clc
icebp
mov
dec
or
mov
dec
ret
hlt
sbb
xor
js
iret
mov
mov
repnz
adc
lret
inc
push
dec
sbb
dec
jmp
jg
cwtd
cmc
arpl
and
add
hlt
jle
cmc
icebp
icebp
push
xorb
rclb
cmp
mov
jne
imull
cmp
xchg
push
dec
lea
and
sub
inc
push
dec
lret
sbb
push
cli
repz
movsb
outsl
mov
arpl
scas
jp
cmp
xchg
jmp
test
sbb
fsubrs
lock
and
sbbb
incl
dec
add
add
mov
test
idivb
mov
insl
adc
movsb
aaa
pop
push
inc
pusha
adc
cmp
dec
dec
cmova
icebp
adc
push
popa
add
pop
cmp
or
pop
cmp
inc
xchg
push
inc
scas
xor
push
pop
pop
clc
cmpsl
adc
pop
jecxz
jne
fcmovbe
push
fadds
lds
in
xchg
pop
mov
sub
leave
shlb
cmpb
scas
mov
in
mov
cltd
push
xlat
fsubrs
movsl
sub
out
adc
ljmp
mov
mov
sub
cmp
int
pop
insb
hlt
call
fstpl
mov
fimull
int3
dec
fcomp
jmp
jns
cmp
decl
and
mov
cmc
adc
mov
and
xor
xor
fbld
mov
test
fwait
and
push
les
mov
xor
imul
hlt
jnp
jp
mov
and
aaa
xchg
mov
movsb
scas
pop
and
push
or
push
fisubrl
ljmp
mov
in
ret
adc
push
mov
sahf
hlt
scas
ret
pop
jg
dec
aad
adc
sbb
and
dec
xchg
scas
test
scas
in
in
lcall
repz
aam
or
cwtl
inc
jns,pn
pushf
scas
dec
pushf
mov
stos
mov
sbb
push
xchg
xchg
and
rorl
sbb
xchg
out
sub
push
cmp
cmp
call
jge
jns
mov
cld
sbb
imull
lea
les
push
inc
sbb
scas
ja
pop
xchg
adc
fldenv
xchg
lods
jmp
ljmp
sbb
push
sbb
roll
push
daa
repnz
sub
in
inc
cmpsl
fbstp
cld
les
jmp
jno
inc
mov
dec
sbb
and
jecxz
xchg
stos
jne
shll
fucom
cld
repz
cmpsl
push
mov
nop
fbld
aaa
pop
pop
push
popf
div
sbb
cmp
or
out
or
scas
xchg
mov
adc
hlt
inc
shlb
test
mov
incb
jl
dec
mov
xchg
push
pushf
fstl
fcmovne
hlt
push
dec
movsl
pop
jno
loop
mov
cli
sub
jle
dec
mov
arpl
add
or
rcrb
cli
xchg
sbb
push
sbb
push
push
sbb
or
or
iret
loop
cli
hlt
lods
cmpsl
faddl
mov
insl
cmc
ss
loop
outsl
push
ffreep
into
jnp
cli
jle
ret
sub
lea
mov
popa
jno
inc
shrb
lea
mov
cmp
mov
test
pavgw
lock
in
ret
sbb
leave
cmpb
aaa
aas
andl
test
dec
stos
sub
pop
ret
mov
mov
mov
mov
jo
mov
loopne
adc
ret
xchg
in
insb
loope
test
mov
vmovntdq
iret
popf
adc
xor
xlat
stc
mov
stos
xlat
mov
test
lock
add
push
push
adc
xchg
daa
push
insb
dec
adc
in
daa
in
xchg
testl
lock
xchg
dec
outsl
jne
sbb
push
sbb
cmpl
push
jle
int
test
or
aas
iret
aad
cmp
scas
repz
das
dec
sub
and
pop
jecxz
inc
pop
mov
aas
ja
std
arpl
stc
adc
outsl
sub
push
icebp
cs
mov
daa
rcr
imul
or
idivl
ret
sub
cmp
cmp
sub
sbb
orb
aaa
xchg
dec
cmpl
mov
insb
lods
rol
out
je
mov
pop
loopne
inc
jmp
and
cli
cmp
adc
shl
insl
fdivs
pop
pop
inc
std
enter
push
inc
inc
inc
lret
mov
iret
xlat
arpl
cmp
shll
add
lret
jg
mov
or
dec
jge
into
or
imul
mov
outsb
mov
cmp
sub
xchg
push
xchg
scas
gs
sbb
mov
or
lret
sub
jg
mov
add
lcall
out
pop
mov
in
pop
mov
ret
stos
cli
add
add
inc
or
cli
xor
cli
in
cld
movb
loopne
and
shl
sbb
dec
in
repnz
or
cmp
xor
jns
sub
inc
mov
adc
std
pop
in
push
push
movsl
int
xor
mov
fwait
bound
xor
push
sarl
push
xchg
imul
in
push
mov
into
cmpsl
mov
shlb
outsb
xchg
ret
jno
push
inc
and
inc
xchg
out
sub
ds
dec
cmpsl
push
out
insb
imul
inc
loop
data16
pop
or
sub
sub
push
adc
outsl
inc
sub
xor
test
pop
inc
adc
dec
cmc
hlt
test
push
pushf
sti
xlat
daa
cmc
arpl
cmpsb
inc
mov
sbb
jae
mov
xchg
pop
test
movb
mov
mov
lds
dec
out
inc
xchg
pusha
xchg
cmc
cltd
pusha
adc
dec
jne
sbb
fisubrs
stos
inc
jl
cs
add
add
imul
sub
shrl
pop
ds
mov
dec
fsts
clc
sahf
jo
mov
xor
cwtl
or
jp
out
stc
lea
rorb
gs
ss
movb
sbb
xor
xchg
test
mov
adc
aam
pop
call
sbb
stos
push
les
sbb
dec
out
add
iret
xchg
dec
rclb
scas
in
sbb
sarb
inc
pop
daa
test
repz
fs
fimuls
shlb
ret
imul
test
in
cmpsl
mov
inc
sbb
mov
fsubr
mov
into
or
mov
popa
ja
inc
out
cli
or
lods
mov
sub
rolb
mov
mov
xchg
xor
cmpsl
lds
push
mov
mov
dec
add
fs
sbbl
lret
add
popf
mov
add
mov
push
adc
test
push
jge,pt
mov
pop
cli
sar
cwtl
mov
mov
out
lock
sub
mov
fs
xlat
and
push
add
test
dec
out
and
xchg
push
cwtl
push
outsb
sbb
sub
outsb
out
mov
mov
xlat
insb
push
je
mov
adc
popf
lahf
jge
inc
mov
xchg
jne
movsl
dec
in
mov
xor
sbb
xor
xor
imul
dec
out
into
dec
or
mov
fs
mov
pusha
and
fxch
inc
lahf
out
mov
aam
fisubrl
mov
ret
jae
and
test
dec
push
add
mov
jns
xor
cmp
aas
sarb
lret
call
cld
sbb
mov
cwtl
ret
in
push
out
jo
cmp
mov
mull
add
xchg
xor
jae
mov
lods
dec
xor
movsb
dec
adc
nop
jl
dec
cmp
push
lea
pop
mov
add
out
xchg
inc
xlat
jmp
mov
pop
pop
inc
jle
add
and
sti
dec
sub
mov
sub
jle
mov
xor
mov
mov
xchg
cmpsl
fsts
sbb
or
mov
mov
daa
sub
jp
and
push
stc
adc
cmc
and
push
jl
add
notb
fldt
pop
pusha
ret
mov
mulb
gs
sbb
jmp
add
fst
sbb
fidivrs
into
popf
adc
cmpsl
mov
and
into
imul
xchg
cli
in
loope
repnz
cmp
jbe
cmp
sub
cmp
dec
sub
xchg
repnz
jmp
stc
and
test
imul
inc
sbb
daa
push
cmpsb
data16
popf
xor
mov
scas
mov
mov
jmp
cmp
das
add
lret
mov
testb
subb
jne
adc
popf
inc
adc
das
arpl
mov
mov
shlb
cld
ljmp
lcall
jle
out
test
cwtl
into
std
int
sahf
add
add
psrad
add
push
js
mov
fisttps
hlt
pop
dec
sbb
mov
jge
lods
out
and
test
imul
adc
add
push
out
ret
mov
es
jl
adc
mov
dec
cmp
loop
sbb
sbb
mov
insl
sub
or
pushf
adc
adc
repnz
test
jl
dec
shr
sbb
lods
lods
xor
mov
sbb
pop
xor
out
push
push
rcrb
jmp
jne
imul
push
shll
sbb
mov
push
or
xchg
fisttpll
xchg
gs
and
inc
pop
divb
xchg
aaa
aam
fstl
mov
jo
ret
mov
psubd
test
incl
loope
jl
pop
arpl
pop
popa
bound
inc
lods
or
mov
sub
js
cmc
push
fcoms
push
nop
cmp
in
pushf
sub
jb
adc
fadds
cmc
mov
test
std
out
dec
sub
mov
jmp
pop
and
gs
iret
int3
aaa
jle
aad
outsb
mov
and
and
push
push
mov
cwtl
push
jb
add
jge
mov
jge
lret
xchg
sbb
mov
adc
scas
fisttpll
sbb
imul
and
rolb
dec
pop
cmpb
or
lds
out
fs
or
cmp
or
add
add
adc
mov
inc
outsb
adcl
lds
or
push
je
add
sarl
rolb
mov
nop
xor
add
or
add
xchg
dec
call
sub
pop
jecxz
scas
pop
push
jg
xchg
dec
fdivrs
xchg
cli
mov
mov
or
mov
adc
push
idivl
cmp
or
dec
add
pushf
cmp
scas
pop
xor
dec
xor
int3
aas
lcall
outsl
sarb
mov
xor
xchg
dec
repz
shll
push
sub
sbb
xchg
push
inc
inc
js
or
ja
out
and
out
and
test
mov
sub
mov
sbb
push
xchg
insb
push
add
mov
mov
jbe
jno
cmpb
mov
pushf
mov
rorl
and
sbb
ss
jg
outsl
into
and
push
cmp
push
in
shrb
sbb
xchg
mov
mov
stos
arpl
and
sti
push
fistps
dec
in
das
xchg
dec
subl
xlat
jae
inc
mov
mov
popf
orb
inc
xor
jbe
push
sub
mov
mov
aad
es
and
outsl
lods
fisubrl
or
xchg
daa
push
pop
outsb
enter
jne
or
xchg
xor
rcll
je
jno
test
mov
pop
sub
sub
pop
dec
test
mov
je
fwait
cwtl
pop
insl
mov
push
or
fs
notl
jbe
ss
sub
dec
add
sub
sahf
andl
pop
mov
push
sub
pop
lock
shl
mov
add
xchg
xchg
pop
sub
jg
add
aad
les
xchg
sub
xlat
mov
loope
pop
mov
jl
sub
aam
stos
xchg
js
push
xor
cmp
xchg
hlt
mov
mov
push
insl
add
jo
pusha
shrb
xchg
mov
mov
xor
and
xor
movsb
fwait
jmp
cmpb
mov
cmpsb
loopne
jne
mov
inc
sbbb
imul
mov
fdivl
ret
inc
sarb
dec
cmp
mov
popa
push
and
sbb
push
cmc
scas
dec
shl
call
std
push
bound
popa
and
pop
sbb
std
lock
jecxz
mov
or
pop
sti
jle
mov
sbb
mov
enter
jecxz
adc
pop
or
pop
je
nop
rolb
inc
lahf
cmp
lods
jb
shrb
jl
sub
jo
xchg
dec
jecxz
stc
mov
inc
ja
aaa
jae
cmpsl
mov
pop
pop
jb
inc
int3
adc
adc
adc
insl
jle
testb
lcall
or
mov
cmpsb
sbb
aad
int
xchg
lods
and
cmp
mov
out
addr16
imul
fwait
push
insl
sbb
jge
inc
lcall
dec
xor
mov
mov
loopne
stos
out
xor
scas
mov
sbb
stos
cmp
loop
jb
aaa
mov
call
adc
sub
sub
and
cltd
jno
cmp
mov
cmp
imul
or
mov
aaa
outsb
ror
fnstcw
inc
push
inc
push
xor
mov
pop
or
pop
cmp
mov
cltd
fcmovbe
adc
cmp
or
aaa
xchg
jp
insb
aas
fiadds
dec
jmp
shll
arpl
aas
add
push
jns
mov
push
dec
xchg
cli
loopne
and
mov
mov
mov
mov
xor
mov
repz
inc
jecxz
xor
pop
es
mov
mov
sub
cmp
or
inc
repnz
int
int3
mov
pusha
sub
int
enter
add
into
jo
scas
ret
sarl
test
lret
cmc
cmp
xor
aad
mov
shr
cmpsb
in
dec
cs
sub
test
dec
in
test
adc
jo
lds
cmp
enter
leave
sbb
jle
mov
test
dec
ds
pusha
jns
dec
pop
test
push
sbb
jnp
ret
ret
fisttps
xor
pop
loope
add
test
data16
adc
mov
cmpsb
inc
in
sub
sub
sub
mov
sbbb
insl
lret
jmp
or
or
mov
in
mov
jb
xor
pop
repz
pop
sub
jb
lds
gs
aas
daa
mov
push
jne
push
or
mov
mov
inc
cmpsl
hlt
sahf
mov
stos
mov
xor
xorb
mov
jecxz
dec
sbb
mov
stc
sahf
inc
pop
and
jns
push
imul
pop
lret
push
outsl
mov
outsb
imul
push
dec
fidivl
les
fwait
in
dec
xchg
in
enter
push
sbb
pop
push
test
xchg
pop
lea
cmp
push
add
popa
xchg
dec
push
ds
push
popa
xor
xchg
xchg
cltd
cs
cmpb
push
call
fbld
leave
imul
xchg
push
push
data16
ljmp
jbe
mov
js
pop
fwait
scas
lret
xchg
mov
mov
mov
fwait
std
push
out
sbb
and
bound
jmp
pop
inc
sti
mov
aad
outsl
mov
cmpsb
out
scas
notl
cltd
mov
xchg
sub
add
cmpsb
out
scas
notl
adc
pop
int
cmc
xor
ret
fisttps
addr16
push
roll
push
in
das
jne
mov
sbb
jge
pop
mov
into
leave
fstpt
lcall
inc
pop
jmp
xor
or
add
adc
ret
into
xchg
push
mov
add
shll
adc
push
imul
jp
int
mov
lods
jg
test
mov
push
sbbb
inc
cld
jne
test
push
lods
shll
sarb
sub
jno
ja
pop
cli
repnz
mov
aaa
movsl
scas
push
sbb
add
pop
popa
sbb
repnz
inc
dec
dec
sbb
sbb
add
adc
adc
mov
jecxz
cld
lds
cs
int3
popa
or
sahf
ficomps
fdivrl
xchg
xor
in
xchg
out
ljmp
sbb
pop
add
es
lds
mov
inc
lret
insl
lahf
mov
stos
or
popf
aam
scas
cmp
daa
dec
dec
test
stc
addl
xchg
push
mov
loope
jecxz
rcrb
xor
nop
dec
inc
xchg
sbb
daa
in
lods
and
inc
movsl
mov
mov
sbb
lods
mov
jnp
imul
ljmp
pushf
scas
xchg
je
call
cmp
push
mov
out
mov
mov
insl
stc
cmpsb
and
mov
out
lock
xor
push
ljmp
pop
call
mov
jno
xor
dec
sbb
mov
mov
inc
repz
sbb
push
jb
and
and
or
sbb
popl
stc
cld
incb
jl
dec
mov
push
or
dec
mov
scas
sbb
lods
or
jl
mov
mov
nop
ret
push
test
pusha
push
push
xchg
lahf
movl
or
test
inc
js
addr16
jp
dec
in
dec
in
out
rclb
cmp
add
add
push
lcall
js
or
dec
subb
adc
xor
sbb
dec
push
mov
push
ljmp
pusha
popl
hlt
sbbl
xor
andl
push
lahf
mov
add
es
mov
aam
mov
dec
mov
fisttpl
or
gs
or
add
outsb
sub
ret
push
test
and
movsl
cld
pop
push
fistps
in
push
mov
inc
shlb
mov
movsl
or
rclb
or
add
inc
xor
lods
pop
and
sub
or
pop
inc
aaa
or
lds
push
aam
or
add
jle
movsb
dec
or
scas
inc
pop
push
mov
push
pusha
outsl
aas
int3
xor
outsl
mov
jno
stos
test
xor
imul
add
cmp
add
test
fs
mov
push
inc
mov
add
cmp
jg
jp
inc
pop
stos
add
jmp
jmp
cmpsb
out
pop
cmp
xor
cmp
pushf
xorb
mov
repz
sbb
xchg
mov
insl
mov
inc
or
sub
rcll
or
sub
shl
inc
sbb
outsb
scas
sub
in
rcl
into
jecxz
mov
into
xor
sub
inc
pop
push
adcl
push
jge
or
mov
js
es
aam
stos
insl
lods
push
pop
cmp
sub
mov
callw
loope
lret
cltd
or
cld
xchg
push
mov
std
subb
outsl
pop
mov
out
mov
pop
ljmp
sti
loope
pusha
cwtl
cli
jecxz
std
jb
pop
gs
fs
mov
xor
insb
pop
cli
pop
int3
rol
sub
cmp
outsb
popf
insl
shl
pushf
adcb
sub
arpl
outsl
xchg
loop
mov
xchg
sub
xchg
mov
cmp
data16
or
xchg
sub
cmp
sub
dec
xchg
cli
out
mov
test
jnp
mov
pop
aaa
repz
addb
cmpsl
scas
push
je
es
cmp
mov
out
inc
or
jne
jb
test
decl
aad
fstpl
push
out
shlb
mov
cmpsb
jecxz
mulb
mov
and
pop
dec
lea
lahf
cmp
push
mov
sbb
hlt
add
xchg
leave
out
movsl
push
jl
adc
add
lahf
or
fstpl
std
mov
mov
inc
mov
mov
sbb
popf
or
movsl
sti
adc
cltd
jo
adc
sub
das
fidivs
arpl
popf
xchg
xor
push
cmp
in
std
pop
or
inc
sub
lods
mov
sbb
mov
adc
cltd
jo
adc
sub
das
inc
lock
push
mov
cmp
push
cli
and
mov
repnz
mov
lock
mov
es
pop
inc
pop
cmp
sar
sub
mov
nop
int
pusha
cmp
scas
lahf
shl
arpl
add
push
or
daa
inc
loope
repz
jae
or
mov
mov
ret
dec
mov
jo
sti
push
pop
cs
stos
stos
rcll
mov
shrl
dec
insb
lret
sarb
xchg
mov
pop
sbb
out
test
fbld
dec
scas
cltd
adc
mov
mov
aad
pop
mov
cli
movsb
repnz
call
mov
jns
cli
mov
sbb
out
jl
pop
int3
or
push
fiadds
sub
dec
and
mov
inc
inc
js
aad
in
mov
iret
pop
mov
ds
inc
sbb
adc
mov
fistl
imul
mov
sbb
in
out
sti
or
ret
mov
movsl
sbb
lret
xor
adc
addr16
cmp
mov
add
add
out
std
add
pop
loopne
jo
mov
dec
cltd
jne
push
out
je
ret
cltd
stos
fcoml
mov
mov
mov
push
aas
mov
scas
add
inc
or
pop
std
xchg
jo
je
test
ret
add
mov
and
xor
les
loope
and
mov
addl
push
jns
sub
icebp
fbstp
jo
je
test
ret
es
push
mov
es
jge
test
lods
xchg
sti
cmp
mov
pop
mov
das
popf
loopne
fstpt
xchg
mov
jmp
icebp
aad
ret
add
out
adc
mov
test
cwtl
xchg
test
lret
push
inc
cmovl
mov
xlat
mov
xchg
xchg
loope
adc
stc
out
push
sub
ds
jge
lahf
and
cmpsb
fmuls
scas
push
and
fwait
dec
inc
xorl
dec
outsl
pop
inc
sbb
repz
idivl
repnz
repnz
ficompl
into
imull
mov
push
jne
into
pop
sub
je
and
sub
ljmp
imul
pushl
int3
xorl
or
ja
out
cmp
fcmovb
add
out
cwtl
or
mov
lock
iret
divl
jns
enter
mov
dec
repnz
lcall
inc
sub
mov
jns
jb
inc
sub
xchg
js
pop
hlt
testb
jecxz
mov
fwait
out
mov
stos
jne
inc
bound
pop
mov
jb
mov
xchg
mov
mov
sbb
test
xor
jbe
stos
and
stos
pop
cli
lahf
mov
or
jbe
jl
or
adc
xor
cmp
ds
stos
sub
sub
xlat
xchg
push
adcb
adcb
adc
addr16
mov
add
adc
imul
jl,pt
into
int
clc
mov
push
loope
movl
pop
inc
push
ja
loop
sbb
outsl
inc
jne
add
inc
fisttps
mov
loope
sub
mov
aam
pop
jg
pushf
scas
sbb
jno,pt
xchg
mov
fsts
ret
loopne
dec
cmpsl
hlt
mov
out
jo
shlb
adc
rcr
mov
add
xchg
jl
xor
divb
ljmp
ds
mov
loope
push
adc
mov
and
test
mov
fs
inc
pop
lahf
jnp
mov
mov
jbe
jbe
xorl
jg
stos
xchg
xor
arpl
out
inc
adc
aaa
add
test
ret
jb
stos
xchg
pop
xchg
mov
sbb
mov
cmp
pop
pop
pop
loop
mov
mov
sarb
decb
loopne
xor
je
pusha
mov
fstps
rclb
cmp
jno
daa
test
lods
lret
stos
jecxz,pn
and
cs
cmc
push
test
mov
lret
add
and
push
sub
add
jno
jb
lret
adcb
scas
sub
dec
adc
in
fwait
outsb
cs
lcall
je
cltd
insl
insb
sti
jns
es
gs
cwtl
push
mov
or
test
cwtl
sarb
in
inc
out
movsb
pop
jmp
je
push
mov
cmp
popf
or
xchg
mov
loop
mov
cmpsb
loope
add
jg
cli
mov
push
mov
lret
dec
pushf
xchg
mov
xchg
cmp
sti
pop
push
shl
nop
sub
fiaddl
xor
or
addr16
lods
cmp
flds
push
sub
mov
cmpsl
test
insl
or
cli
fcmovnbe
repz
xchg
rorb
addr16
xor
sub
mov
mov
jns
dec
pop
add
cmp
arpl
mov
xchg
fidivrl
cld
cmp
out
scas
sbb
insb
jmp
dec
call
xchg
lcall
jl
push
movsb
push
bound
or
scas
lods
mov
mov
pcmpeqd
xor
xor
jecxz
jg
adc
iret
cs
cmp
xor
xchg
les
cmp
es
into
iret
aaa
add
ret
cmp
inc
pop
push
aaa
je
or
shl
adc
add
in
or
movsb
aas
cmp
mov
ds
push
negl
and
iret
int3
hlt
flds
inc
jp,pt
xor
pop
ss
test
scas
inc
ss
mov
jnp
les
insb
mov
jecxz
jle
jno
out
push
pop
sub
push
adc
pop
loope
decl
movsl
cmpsl
out
jecxz
pop
jmp
dec
popa
mov
adc
jmp
in
xchg
cmpsb
lea
sub
leave
ds
aad
dec
das
pop
dec
cmpsl
adc
dec
stc
push
pusha
mov
lea
pusha
cmp
adc
mov
imul
pop
dec
nop
mov
stc
repnz
jl
fdivr
movsb
shlb
incl
sbb
in
out
jecxz
mov
mov
add
mov
dec
adc
cmp
add
sbb
es
jo
icebp
enter
xchg
xor
jae
mov
int
dec
andl
push
xchg
dec
out
mov
inc
push
jae
rcrl
or
add
sub
pop
xchg
data16
lcall
mov
sar
bound
mov
cmp
lret
sahf
mov
loopne
pop
pop
sub
sub
xor
gs
jnp
movsl
fsubs
jg
jecxz
mov
lods
adc
xchg
stos
push
ds
lds
loopne
jge
clc
jle
aaa
daa
insl
data16
sbb
jle
cmpsl
gs
mov
mov
xchg
das
xchg
xor
jnp
rolb
stc
sti
xchg
cmpsl
add
stos
add
or
pusha
sub
movsb
push
cld
or
cmp
dec
ljmp
inc
dec
scas
cmp
imul
int
push
outsb
add
daa
mov
js
or
into
adc
jo
and
pop
dec
xor
mov
repz
mov
mov
adc
mov
subb
jmp
sub
in
scas
pop
addr16
cmp
pop
adc
add
test
dec
xchg
or
sti
pop
cmp
pop
jg
addl
xor
ret
sub
inc
stos
jmp
sub
and
gs
mov
mov
sub
xor
add
pop
cwtl
add
dec
dec
push
mov
ret
bound
insb
jle
sub
and
add
fisubs
mov
ljmp
and
sbb
mov
adc
add
pop
cltd
aaa
add
nop
mov
mov
loop
xor
dec
mov
scas
enter
adc
int3
lret
mov
pop
fimull
lcall
jb
inc
inc
aas
out
sti
ja
aam
mov
imul
push
stos
test
mov
mov
cmpsb
xchg
lods
push
dec
int
std
stos
out
pop
hlt
inc
bnd
shr
fcmovb
cld
mov
clc
or
loop
pushf
mov
fld
inc
fdivs
lods
or
int3
imul
mov
mov
aaa
addr16
dec
push
inc
sub
outsb
sbb
cli
cli
cmp
xchg
mov
mov
test
inc
inc
movsb
sbb
mov
cmp
dec
inc
dec
mov
xor
insl
aaa
data16
push
and
enter
xchg
lcall
push
xchg
les
movsb
flds
pop
sbb
cld
incb
jl
dec
mov
fisubs
dec
mov
hlt
cwtl
and
in
out
xchg
rorl
pop
jle
jmp
and
nop
pop
sub
shll
pop
and
mov
xchg
lahf
xlat
xchg
test
decl
ficoms
pop
sbb
mov
pop
jae
sbb
jle
cmpsb
jl
adc
test
sti
xor
cmpsl
out
roll
mov
data16
xlat
xchg
in
cs
add
sti
lods
sub
mov
test
push
pop
or
push
mov
sub
testb
xor
push
or
push
jge
cmp
add
mov
enter
push
cli
enter
push
je
ljmp
inc
add
sub
repz
xor
mov
je
push
mull
pop
clc
xor
xchg
push
jl
lods
aam
add
xor
xchg
repz
jbe
stc
mov
stc
aaa
sbb
hlt
fnstsw
and
xlat
mov
push
adc
movsl
scas
ljmp
and
shlb
addl
punpckldq
push
lcall
outsb
xor
insb
jmp
subl
mov
nop
das
jmp
xchg
push
adc
ljmp
xor
add
inc
test
add
test
dec
insb
scas
sbbb
inc
addr16
xchg
jb
and
lret
sbb
data16
stc
orl
jl
sub
les
fisubrl
pop
test
std
pop
arpl
aad
jecxz
sbb
mov
outsb
jbe
jl
or
jecxz
enter
jmp
inc
jmp
or
fidivl
imul
push
sbb
xor
mov
or
jae
xchg
xor
dec
test
push
dec
cmpsl
and
testl
xchg
dec
jmp
mov
mov
adc
jbe
push
cmp
adc
int3
shr
mov
leave
mov
popf
mov
lods
leave
je
insl
inc
fucomip
push
ret
sbb
pop
adc
or
or
xchg
test
pop
dec
pop
cli
and
lahf
push
loopne
cmp
mov
jnp
lcall
fistl
or
push
test
loopw
lods
or
scas
cltd
sbbb
mov
pusha
pusha
jne
or
adcb
push
inc
mov
cwtl
lods
adc
push
pop
pop
js
out
lock
test
adcb
push
lret
je
data16
jge
test
xor
fldcw
stc
jmp
dec
mov
push
or
mov
idivl
shll
add
out
mov
inc
test
fimuls
jb
sub
adc
aaa
sbb
lods
imul
notb
popa
adc
loopne
clc
ja
inc
and
or
fidivl
ljmp
inc
call
pop
hlt
inc
out
sar
popf
or
insb
push
or
mov
lds
insl
testb
ret
push
les
stos
jle
stc
aam
adc
cli
cmpsb
gs
iret
imul
sub
shll
pop
jbe
sub
pop
stc
mov
dec
cmc
fs
jne
insl
out
lea
ljmp
xchg
jnp
xchg
mov
add
clc
jmp
mov
stos
push
pop
push
inc
xchg
sti
frstor
adc
test
inc
jno
pusha
sahf
sbb
pop
push
adc
pop
jno
add
jae
xor
and
psubd
xchg
scas
cmp
dec
pop
jbe
aas
or
xchg
lahf
mov
jle
inc
lock
aad
dec
scas
mov
adc
jle
fisttps
mulb
cli
out
and
xor
cmp
test
xchg
pusha
xchg
xchg
mov
imul
dec
mov
jg
gs
push
push
outsl
xchg
push
cmp
xchg
pop
sub
leave
push
push
roll
pop
daa
adc
stos
stc
je
xchg
push
xor
xchg
pop
xlat
sub
cld
dec
jg
mov
jp
mov
lret
jge
int3
mov
fsubrs
push
test
fwait
imul
mov
sbb
stos
cmpsb
imul
add
xor
das
or
cmp
cmpsl
in
cmp
xor
sub
dec
nop
jnp
jle
or
and
popa
mov
cmp
mov
lods
sarb
xchg
jle
mov
cs
xor
xchg
add
jno
jo
adc
scas
stc
pop
out
shll
dec
jecxz
add
mov
pop
xor
pusha
xchg
cmc
das
clc
daa
ret
xor
jae
xchg
or
jbe
pushf
inc
dec
daa
aas
jo
out
adc
add
ret
std
xchg
mov
cwtl
adc
test
jp
xchg
test
mov
pop
add
pop
sbb
adc
shl
jns
push
ficomps
or
sbb
cmp
xor
push
out
ljmpw
add
dec
add
xlat
ror
lods
jno
xor
and
push
inc
clc
sub
push
test
je
jne
cwtl
xchg
or
push
push
fistl
stc
mov
out
or
jnp
xchg
mov
jns
adc
mov
sub
mov
sub
lcall
dec
cwtl
sub
sbb
imul
les
or
imul
jb
and
mov
dec
dec
daa
inc
cmpsl
adc
es
fs
adc
jp
cmp
inc
leave
mov
sub
fiadds
je
lahf
shll
jo
fisubrl
aad
out
xchg
jp
das
pop
fidivs
int3
cmpsb
mov
xchg
or
xchg
sub
dec
ret
jb
and
xchg
in
lret
cmp
xor
cmp
rcrl
xor
lea
push
dec
and
ret
sbb
loop
xchg
sti
test
cmp
rcrb
xchg
scas
sahf
sbb
xchg
inc
lock
sbb
ljmp
mov
xor
lock
add
in
cmp
sar
lahf
xchg
sti
dec
rcrb
sahf
mov
loop
shlb
loopne
mov
dec
inc
out
mov
mov
and
repnz
pop
jl
xchg
add
lahf
test
xor
dec
cltd
cmp
out
dec
jp
fildl
insl
xor
inc
ljmp
data16
outsb
push
push
jbe
jb,pt
mov
xchg
push
inc
adc
repz
lock
mov
jp
push
cmpsl
inc
outsb
mov
sub
sub
pusha
and
aam
push
adc
sub
mov
xchg
nop
lret
lods
xchg
dec
mov
test
inc
or
mov
loope
adc
mov
pop
call
stc
aas
clc
push
fstps
lds
test
or
mov
xor
pmulhuw
xchg
add
cwtl
add
or
shlb
lock
inc
cmp
roll
stos
lret
add
jae
ljmp
call
add
mov
jns
fistpl
js
shrb
pop
xlat
mov
or
fsubrl
push
vpandn
arpl
scas
testb
cs
pop
sub
pop
push
adc
jo
je
test
ret
repnz
mov
adc
pop
icebp
mov
loope
fdivp
push
enter
movsb
lret
out
out
gs
xchg
fwait
loope
ja
dec
sbb
icebp
mov
inc
leave
mov
pop
fwait
clc
adc
jmp
fwait
add
outsl
jmp
andl
inc
cmp
or
ror
push
aam
inc
xor
dec
pop
pop
sbb
mov
cmp
sbb
inc
pop
comiss
dec
loop
cltd
pop
jge
sub
lret
andb
fildl
arpl
popf
adc
sub
shrl
into
ret
in
push
fists
loope
push
push
outsl
cmpsb
cli
shrb
lret
cwtl
mov
adc
adc
mov
test
sub
test
lahf
sbb
lods
adc
xchg
cld
sub
in
cli
call
test
testl
loopne
fcoms
or
jne
inc
mov
xchg
adc
scas
pop
nop
inc
repz
add
mov
insl
add
lea
xchg
sub
scas
or
mov
cmp
and
adc
cli
dec
rol
cmc
xchg
mov
mov
push
push
test
lahf
sbb
scas
arpl
inc
jno
jl
call
add
fwait
lahf
inc
cmpsl
lcall
mov
push
sarb
xor
adc
outsb
sub
adc
or
idiv
lods
scas
xlat
push
fmul
xchg
push
mov
cwtl
push
sbb
adc
xchg
mov
mov
cli
insb
jbe
push
out
je
fisttpl
repnz
dec
jg
scas
loope
notl
sub
jns
cmpsb
xchg
mov
movl
out
lock
fisttpl
pop
cmp
cwtl
xor
mov
imul
xor
std
mov
aaa
mov
mov
jnp
pop
xor
stos
out
inc
pop
lods
addl
push
cs
les
outsl
icebp
mov
dec
rorl
jge
jg
into
jecxz
cltd
outsb
jle
xchg
movsl
fnstcw
rorl
loop
aam
or
dec
inc
out
stc
mov
push
test
xor
sbb
jb
idivb
es
inc
test
xor
sbb
and
les
stos
cmpb
sub
add
jp
popa
mov
icebp
pusha
cwtl
daa
sarl
inc
popa
loopne
inc
std
add
inc
lea
dec
mov
test
sub
sub
jle
loope
pusha
or
sbb
outsl
and
out
jp
mov
ret
mov
jg
or
xor
std
addr16
jmp
stc
jmp
add
leave
std
push
movsb
ja
jg
inc
sbb
xor
mov
inc
add
xor
pop
fs
and
sbb
in
out
rcr
lcall
xchg
xor
arpl
je
and
jg
jmp
popa
ficoms
inc
adc
mov
movsb
mov
lret
ret
jb
mov
cmp
shlb
push
insl
sbb
mov
imul
mov
cmp
fcomps
sbb
dec
sbb
jle
sarl
mov
push
test
adc
test
cwtl
in
sub
cs
xor
jnp
cmp
dec
fldt
and
add
adc
sub
mov
stc
daa
xor
ja
jmp
fs
mov
fbld
arpl
pushf
fstps
xlat
dec
sti
pop
arpl
pop
add
idivb
out
scas
adc
fbld
fidivrs
aad
stos
test
into
rcrl
nop
xchg
mov
jl
shlb
std
int3
data16
into
ret
pop
adc
jno
sahf
in
mov
std
adc
dec
lods
divl
cmp
adc
sbb
lods
pusha
pop
js
push
mov
xchg
sti
icebp
rcr
nop
daa
cmp
rcrl
ret
add
nop
lods
mov
jl
aam
lcall
stos
or
add
inc
leave
jno
test
xor
inc
lret
and
and
jle
fsubrs
imul
jbe
push
push
add
outsl
sahf
xchg
ds
xchg
sub
das
inc
xchg
mov
lret
insl
inc
fildl
push
dec
jnp
je
iret
jns
sub
pop
fisttpl
xchg
jb
andb
cwtl
dec
pushf
imul
push
int3
pushf
inc
xchg
loop
ds
andb
popa
orl
pusha
add
cli
stos
fiaddl
xchg
mov
mov
test
and
test
cmpl
arpl
push
jnp
cmp
in
and
loope
insb
out
jecxz
push
nop
nop
or
push
adcl
mov
sbb
ljmp
scas
inc
sbb
adc
scas
sbb
data16
xor
call
jle
rorb
jbe
cmpsl
xchg
gs
test
inc
iret
out
test
out
div
insb
push
push
shll
lret
scas
js
rolb
inc
sbbb
dec
outsl
test
rcr
mov
in
or
rclb
jg
mov
push
lret
jg
cmp
pop
bound
test
mov
or
lcall
aad
xor
sbbl
pushf
xlat
jp
fiaddl
xor
pop
dec
in
mov
mov
or
sub
ljmp
inc
xchg
scas
mov
xchg
jl
xlat
push
adc
idivl
inc
ret
lock
adc
jbe
mov
xor
jae
jo
movsl
movsl
xchg
call
imul
push
xchg
add
push
lcall
iret
mov
push
inc
in
std
repnz
fadds
or
adc
add
jmp
xor
sub
jge
and
dec
ret
arpl
dec
outsb
inc
lods
movsb
mov
ljmp
push
pop
jno
mov
ret
adc
pop
lds
xchg
repz
pop
sbb
dec
and
pop
call
pop
rol
mov
inc
or
fdivrl
mov
mov
push
shl
mov
or
cmp
push
xor
mov
loope
test
mov
xor
mov
jne
jle
insl
pop
in
adc
push
dec
pop
xor
inc
and
push
xchg
xchg
xchg
or
mov
es
int
ffree
in
bound
mov
addr16
int
addr16
shll
test
fidivrs
inc
cmp
cld
js
scas
aam
lea
jo
arpl
aas
jg
imul
shrl
or
pop
jmp
test
add
mov
ret
and
pop
das
ss
cmpb
dec
add
sbb
mov
cmp
push
lcall
fsts
scas
fcomi
lds
rcrl
xor
in
int
repnz
in
jb
dec
pop
mov
dec
cld
lock
adc
pop
inc
sub
xchg
lret
xchg
in
je
xchg
mov
loopne
pop
lock
mov
sbb
push
cmp
lods
das
stc
outsl
mov
sti
lret
pop
add
push
xor
ds
xor
pop
adc
or
jo
mov
push
xchg
cmpsl
dec
vxorps
dec
mov
bound
mov
je
jge
and
mov
mov
test
pop
mov
subb
jns
sti
adc
mov
fcoml
cmp
cmpsb
or
fidivs
xor
mov
fs
push
mov
hlt
pop
inc
nop
lods
int3
test
pop
leave
outsl
mov
push
movsb
ret
push
mov
lret
fsub
es
repz
xchg
add
out
add
pop
mov
mov
pop
sbb
insb
and
iret
mov
sub
fsubrs
clc
mov
pushf
sar
xchg
dec
iret
int
test
sbb
aad
shlb
jbe
and
cmpsl
adc
ret
out
inc
ror
jecxz
add
lock
aaa
test
cmpsb
sub
jmp
sbbb
frstor
pop
xchg
pop
sbb
mov
or
mov
aaa
fcmovnb
es
mov
test
sub
sti
mov
jbe
mov
ficompl
shrb
jb
je
ds
pusha
lds
leave
faddl
mov
repnz
add
jo
xchg
ret
inc
sahf
sbb
aas
sti
out
mov
gs
jecxz
xor
xchg
imul
popa
cmpsl
orl
or
mov
xor
jbe
rol
sbbl
xchg
and
mov
stc
sbb
xchg
fwait
sub
in
cli
cwtl
adc
repz
inc
add
adc
pop
jge
add
jnp
mov
mov
test
mov
add
leave
es
jmp
fs
inc
or
call
movsl
dec
mov
mov
lret
dec
xor
arpl
mov
xlat
push
jno
subb
cmpsl
push
icebp
es
cmp
jmp
fsubs
fsubrs
adc
fisttps
pop
fisttpll
subl
sbb
add
stos
mov
jle
dec
loop
cmpsb
jno
cmp
dec
mov
xor
loopne
and
in
mov
inc
cmp
icebp
xlat
movsb
jl
int3
mov
xorb
cmpl
push
clc
out
cmp
jb
mov
pop
cmpl
test
jp
xor
xchg
xlat
sbb
jno
jno
roll
out
das
mov
jno
sub
fnstcw
jl
add
aam
mov
dec
aas
mov
orl
xorb
aam
es
ja
mov
negl
xor
pushf
sub
pop
into
arpl
pop
xor
sub
jle
shll
inc
xchg
repz
sub
daa
inc
lret
sub
rcr
imul
popa
es
nop
sub
outsb
sbb
cmc
mov
sub
test
in
loop
push
addl
mov
mov
outsl
insb
lcall
jg
js
jmp
cld
stc
cmp
mov
ljmp
push
sbb
adc
mov
jne
jnp
loop
aas
and
sbb
int3
jo
mov
push
and
ljmp
sbb
mov
jae
mov
ret
test
sbbb
cmp
jl
and
xor
notb
cmpsl
aas
imul
in
ret
xchg
xchg
js
test
cmp
test
icebp
out
in
out
dec
mov
pop
aas
cmc
pop
mov
pop
adc
mov
popa
icebp
mov
mov
cmp
push
jl
insb
test
xor
inc
sti
cmpsl
lret
adc
popa
xor
into
daa
mov
adc
dec
xchg
and
clc
pop
add
out
inc
xor
mov
imul
cli
xchg
out
nop
cmp
aam
inc
shl
jmp
test
dec
jnp
daa
les
push
jns
ret
or
icebp
pusha
iret
mov
sub
jle
test
and
into
adc
test
sti
cmpsl
lret
adc
popa
xor
in
inc
add
adc
dec
xchg
and
inc
cmp
test
lea
cmp
das
stc
lds
or
aaa
and
add
stos
cmp
xor
adc
dec
es
ret
fnstsw
lods
sbb
cli
lds
lds
mov
adc
hlt
cmc
bound
icebp
sarl
mov
popa
push
mov
mov
cmp
int3
push
popa
push
fcomi
stc
in
jmp
add
mov
cld
jg
add
pop
cmp
sti
pop
ret
push
lds
inc
gs
push
mov
in
pop
sub
rorl
loope
inc
or
dec
aaa
pop
adc
xchg
xchg
jno
jmp
lahf
test
mov
add
mov
lret
scas
popa
jle
pop
xor
pop
sbb
add
mov
testb
lock
je
lea
mov
mov
mov
mov
inc
and
insb
xor
pop
mov
sbb
inc
ret
shlb
popf
out
cmp
int3
adc
shlb
ljmp
shlb
mov
cli
mov
jle
fmuls
hlt
cltd
jns
pop
repnz
mov
mov
popf
push
fmuls
negl
dec
mov
outsb
fsubs
imul
xlat
mov
dec
xchg
outsb
loop
les
cmp
inc
aaa
sarl
outsb
movsb
loopne
cmp
inc
cmp
mov
hlt
xchg
jmp
sbb
xchg
xor
stc
inc
jle
je
addb
adc
mov
hlt
lods
mov
js
mov
adcl
testb
sub
mov
sbb
ret
dec
push
mov
loopne
fs
mov
fsts
xchg
sbb
add
aam
mov
out
add
mov
pop
sub
inc
sbb
inc
adc
xor
jne
jg
mov
mov
cmpb
fadds
xchg
nop
ja
jmp
es
repnz
js
pushf
cld
mov
inc
push
push
mov
inc
sub
scas
mov
sbb
cmp
ret
sub
jns
fdivr
mov
jg
insl
inc
jbe
mov
jp
push
jle
test
rorl
dec
scas
inc
fmull
sbb
xchg
out
xor
pop
aaa
aam
mov
ficoms
sbbl
es
fstl
or
pop
push
ret
push
xor
cmp
push
mov
xlat
adc
add
pop
mov
lods
push
mov
ss
mov
xor
inc
push
in
xor
pop
pop
aas
adc
rolb
pop
adc
jo
mov
mov
pop
mov
cmp
aaa
jb
mov
inc
std
mull
fucom
std
popa
mov
adc
or
lods
imul
mov
mov
jb
cmp
xlat
lods
push
mov
inc
aad
popf
jo
xchg
or
scas
iret
repz
aad
cwtl
xchg
inc
jbe
out
mov
cmc
mov
cld
push
movd
xor
insl
int
fistpll
mov
add
mov
outsb
aad
or
int3
push
daa
mov
jg
cs
ds
pop
cmp
mov
dec
add
test
xor
and
push
mov
inc
sbb
mov
mov
xor
adc
cmp
pop
loop
jl
fwait
xchg
into
push
mov
and
les
in
incl
mov
jne
inc
add
dec
cmp
or
push
and
push
jno
push
jns
xchg
cwtl
je
xchg
data16
mov
xor
inc
cli
arpl
fistl
scas
sub
dec
push
sbb
fmuls
imul
das
push
xor
xorb
mov
pop
push
fsts
adc
sbb
mov
cmc
cmp
jl
and
push
stos
lds
jne
insl
add
cmpsl
frndint
sub
pusha
int
dec
adc
test
pop
mov
push
jmp
adc
rcrb
enter
inc
repz
ljmp
push
lret
test
test
add
mov
fsub
cld
inc
mov
js
je
adc
mov
fwait
nop
dec
cltd
jg
inc
pop
mov
xchg
cmovae
sub
loop
pushf
add
cwtl
jge
jmp
jg
aam
dec
leave
outsb
push
inc
sbb
ljmp
lcall
jl
add
cli
mov
pop
stc
jne
mov
xor
mov
lret
sahf
dec
pop
push
push
fwait
in
and
stc
or
hlt
sub
dec
jnp
mov
pop
and
cmp
add
jo
data16
fdivrs
ss
mov
mov
or
roll
icebp
clc
fcmovbe
dec
mov
dec
mov
shl
fsubrs
adc
pop
jns
mov
stc
inc
inc
incl
roll
jmp
xchg
data16
sbb
sahf
xchg
out
ds
sub
popa
sbb
sub
adc
aaa
shll
rcll
fists
pop
jl
fnstsw
fsubrl
pop
push
pop
enter
jmp
inc
shll
mov
push
pop
sub
sbb
add
mov
dec
and
or
std
xchg
xor
mov
pusha
fsubrl
rorb
sarl
test
mov
and
mov
pushf
stos
xchg
scas
sbb
ret
lcall
xor
mov
ja
test
mov
sub
mov
sbb
mov
pop
or
out
push
mov
js
hlt
gs
stc
lds
xchg
jnp
fscale
ffree
ljmp
cmp
enter
push
enter
sahf
loop
push
iret
push
movsl
pop
pop
jno
mov
sbb
dec
pop
push
imul
movsb
xlat
into
clc
dec
dec
push
add
ret
pop
adc
mov
add
aad
cwtl
push
imull
imul
and
pop
jmp
clc
jae
mov
adc
addl
fs
ficompl
addr16
push
lods
aad
mov
pop
jns
mov
stc
inc
lds
andb
pop
mov
ret
push
jbe
mov
fnstenv
rcll
shll
and
imul
xchg
adc
sbb
xchg
pop
repz
dec
cltd
fimull
enter
inc
mov
jo
imul
es
jmp
mov
out
fcomps
add
outsb
jle
add
pop
adc
mov
insb
icebp
je
sti
sahf
cmp
sub
aas
pop
pop
mov
push
loop
add
cmp
sub
leave
cmp
pushl
jne
into
add
or
jnp
shlb
and
scas
jg
sub
adc
fucom
insb
lds
mov
mov
adc
sbb
inc
and
arpl
ret
test
ds
dec
cli
icebp
pop
out
pop
and
inc
xchg
fistl
insl
xchg
mov
fstpl
or
jo
es
loop
cmp
cli
xchg
push
xchg
adc
scas
pop
test
test
mov
push
addr16
movsb
and
push
popa
mov
fcompl
dec
rcl
pop
scas
insb
jo
dec
mov
inc
test
sbb
mov
lcall
jo
test
inc
pop
push
mov
inc
jecxz
idivl
arpl
and
jne
out
pop
or
pop
popf
ja
xchg
mov
lahf
bound
xchg
and
sbb
jo
imul
es
ljmp
pop
aas
lds
xor
popa
ljmp
dec
loop
out
ja
fcmovnu
in
xchg
push
mov
mov
sub
cmp
call
nop
add
pop
out
addb
bound
pop
lret
arpl
sbb
push
cmp
cmp
jge
xor
leave
es
mov
mov
add
lods
push
ret
test
into
sbb
insl
insb
sub
adc
add
imul
rclb
pop
xchg
adc
jge
dec
decb
rclb
push
or
mov
xor
push
dec
mov
xchg
sub
movsl
mov
mov
xchg
and
out
out
mov
loopne,pn
or
mov
subb
dec
gs
pop
jle
xlat
outsl
mov
pop
mov
stc
idiv
stos
mov
sub
jbe
sbb
xchg
in
fists
mov
stos
dec
addr16
add
es
in
mov
cmp
das
imul
mov
repz
popf
out
dec
xor
and
xchg
aaa
dec
leave
call
into
sbb
pop
arpl
fwait
push
or
sbb
mov
mov
sahf
pop
notl
ss
and
jb
stos
aam
push
rorb
push
mov
sbb
mov
test
sti
out
mov
pop
ret
scas
cwtl
push
lds
jns
jecxz
enter
fidivl
jg
inc
push
notb
inc
out
fisubl
push
sub
sub
rorb
sub
push
shll
outsl
insl
push
cld
fmull
mov
aas
loope
jbe
or
in
lret
inc
jecxz
hlt
fsubrs
cld
pop
push
fwait
mov
mov
aas
leave
cmp
clc
xchg
or
ljmp
and
mov
xor
cld
lcall
sbb
jge
arpl
adc
jecxz
jmp
mov
popa
add
ret
bound
jb
out
cmpsl
pop
mov
gs
clc
mov
std
and
pop
xlat
rcr
aas
lea
out
mov
cltd
ret
je
cmp
mov
bound
sub
popa
incl
xor
mov
popf
cwtl
ret
adc
mov
cmpl
cmpsl
out
fdiv
adc
in
jle
orb
mov
icebp
or
aaa
or
xchg
adc
sub
and
aaa
inc
adc
dec
outsl
int
mov
mov
mov
dec
mov
mov
movsl
nop
dec
sbb
dec
into
das
outsl
sbb
xor
mov
push
or
pop
pop
scas
cmp
fbstp
inc
cmp
and
aaa
mov
shll
adc
and
rorb
mov
mov
lret
push
ret
add
loopew
mov
mov
push
arpl
or
or
add
rcrb
push
adc
nop
mov
mov
mov
jnp
or
dec
paddw
insl
insb
xor
cmp
adc
pop
lret
push
inc
scas
das
push
pop
jecxz
enter
ret
sbb
mov
mov
jae
xchg
shl
and
hlt
cmpsl
sti
fs
pushf
push
mov
or
cmp
or
ja
add
xchg
jno
jp
sbb
lea
fsubs
jbe
jmp
lahf
and
bound
mov
and
jle
mov
faddl
movsb
push
cmc
outsl
mov
xchg
sub
adc
or
test
adc
and
mov
sbb
ljmp
or
xor
out
xchg
sbb
sub
test
mov
xchg
lods
or
jo
lods
cmp
cmpsb
pop
inc
mov
jecxz
ja
mov
into
push
mov
hlt
adc
ja
leave
movsl
shl
jae
and
dec
fcoms
push
jno
jo
dec
push
xor
xchg
pmaxub
dec
rorl
mov
and
add
mov
lock
push
inc
lahf
mov
or
dec
movsb
pop
adc
gs
or
inc
or
and
aam
pop
and
pop
xlat
adc
jbe
out
push
jle
int
test
ret
mov
mov
dec
mov
jecxz
mov
adc
jno
ljmp
fbld
scas
stc
or
fildl
cltd
pusha
sub
cld
and
out
aam
or
mull
and
loopne
cmp
in
cmpsl
jae
testb
lods
mov
mov
idivb
mov
adc
out
jecxz
subb
cmp
cmp
adcl
push
sub
lods
xchg
mov
jno
jae
jno
xlat
cli
jns
pop
dec
ss
push
mov
xchg
aas
and
aas
dec
dec
inc
pop
fistps
dec
pop
in
out
inc
stc
rcr
pop
testb
and
jb
mov
jle
test
in
adc
les
xchg
incb
hlt
rcrl
adc
fucomp
decb
xor
inc
adc
cmp
cwtl
sub
push
push
cli
cli
jae
int3
fstps
insb
mov
call
xchg
push
daa
dec
inc
in
shlb
inc
mov
pop
cmpb
bound
cltd
aad
je
sub
mulb
das
lods
or
loop
mov
js
xrelease
lahf
pusha
pop
cmp
jb
xchg
out
mov
int
popa
aaa
push
mov
cmp
lods
sahf
dec
frstor
inc
and
add
aaa
sub
push
cmpl
in
addr16
sbb
jecxz
inc
push
mov
cmp
jl
or
push
mov
xorb
xchg
loopne
cwtl
inc
in
data16
xchg
sahf
dec
mov
negb
and
dec
or
scas
or
repnz
adc
mov
sub
pop
jbe
lea
daa
cwtl
mov
ja
cwtl
fsubr
xor
push
cmpsl
xorb
xchg
mov
cld
ret
fidivs
negl
or
test
xor
in
cmpsl
popf
mov
fwait
mov
dec
out
xchg
jo
out
mov
pop
mov
sarb
shrl
and
mov
test
in
repz
cmp
fdiv
push
fs
test
xchg
xor
int3
xchg
insb
lea
fcoms
icebp
cmp
jne
inc
adc
inc
test
lcall
pop
sub
push
sub
dec
jg
and
repz
mov
imull
sti
popa
mov
xor
stos
imul
fdivl
leave
adc
adc
movsb
in
add
lds
add
or
and
or
scas
xchg
test
fs
pop
cli
iret
loopne
shl
cmp
mov
call
cwtl
sbb
pushf
mov
and
call
xor
test
mov
mov
xlat
pop
push
push
or
pop
mov
xchg
in
cmp
es
adc
mov
cli
pop
add
mov
adc
mov
sub
push
push
jns
ror
ret
mov
aaa
jp
inc
jno
pop
add
mov
mov
sub
rorl
aam
sbb
cmovge
in
ja
or
aaa
mulb
fsubs
and
push
push
fcomps
mov
inc
mov
aaa
cltd
ret
dec
daa
dec
cmc
dec
stos
bound
xor
pop
imul
notl
popa
pop
jg
cli
pop
je
mov
in
ror
mov
mov
dec
jl
sbb
dec
fldl
loope
jnp
cmp
ret
lods
stos
lea
push
hlt
jnp
popa
inc
mov
push
xchg
imul
out
shrl
and
aas
jb
pop
mov
xor
lds
jg
cmp
repnz
jp
pop
sbb
xchg
or
mov
xchg
or
mov
gs
mov
es
out
inc
jecxz
fisubrs
pause
inc
xchg
pop
fildl
push
mov
ret
mov
and
scas
lods
insl
mov
cmp
or
repz
or
dec
out
mov
mov
sub
pop
push
xchg
xorl
push
pop
mov
mov
out
inc
ror
push
in
addr16
dec
fcomps
jecxz
mov
push
stc
mov
dec
sbb
push
jb
popa
push
cwtl
and
int
fwait
xor
decl
xor
and
dec
ds
lcall
xor
pop
ja
mov
in
and
xlat
sub
inc
mov
por
lcall
dec
sub
loope
insb
add
shlb
xlat
and
clc
lock
ss
xchg
les
xchg
scas
jle
and
and
add
xor
cld
push
cmpsb
fcoml
lret
adc
mov
xor
and
ret
cld
xchg
stc
stc
loope
test
xor
lods
pop
pop
push
push
pop
and
scas
or
mov
faddl
lds
fld
fwait
cmc
popa
cmpsl
adc
mov
stos
push
pushf
xor
hlt
cmp
push
mov
in
push
js
xor
xor
rcrl
jns
mov
aaa
sub
test
jle
dec
nop
mov
jae,pn
fsubrs
adc
in
mov
push
push
les
push
loop
clc
nop
pushf
sub
addr16
or
outsl
add
andb
imul
or
lsl
dec
imul
inc
dec
dec
xchg
in
jnp
xchg
mov
cmp
add
sbb
dec
xchg
xchg
das
pop
xor
sub
cmp
cli
mov
into
subl
sub
sahf
into
jo
push
jno
adcl
sbb
sub
pop
and
mov
xchg
mov
inc
cs
lea
inc
shrl
add
sbb
adc
in
mov
pop
cmp
jb
inc
xor
inc
shrb
jmp
inc
aas
clc
jmp
cld
pop
jns
out
push
decb
pop
mov
jbe
pop
movsl
mov
pop
dec
mov
loopne
xor
xor
pop
add
jp
mov
or
test
pop
jp
popa
sti
mov
cmpsb
and
and
mov
lock
jae
ret
fisttps
decb
push
shlb
pop
add
sbb
push
enter
es
fwait
adcl
fnstenv
jecxz
pusha
orb
pop
ja
and
fwait
test
sub
push
subb
mov
push
aam
xchg
mov
jnp
xchg
fs
les
and
xchg
push
pop
or
out
add
negl
call
pop
js
outsl
add
mov
xchg
pop
lods
inc
sub
cmp
inc
and
lds
stos
mov
push
loope
inc
pop
sub
mov
dec
into
pop
sbb
cmp
push
xchg
lods
xadd
jp
cmp
xchg
stc
sbb
ror
jle
dec
and
jbe
inc
add
xchg
scas
ficoms
mov
ficomps
cmp
mov
and
jns
and
std
in
shrb
loopne
in
xor
lcall
xor
int
das
mov
je
icebp
test
push
rolb
inc
or
push
lret
inc
jnp
xchg
mov
pop
pop
push
cld
adc
add
shl
lahf
cmpsb
js
xchg
pop
bound
xchg
fs
and
lahf
arpl
filds
cmp
mov
inc
enter
jge
hlt
daa
mov
aas
test
xor
test
xor
xor
loop
mov
inc
inc
aad
add
movsb
adc
jbe
clc
outsl
lea
mov
int
les
cmc
mov
out
inc
push
loop
imul
pop
sub
push
xor
stos
mov
cmp
fwait
push
add
fdivr
jmp
pop
pusha
ja
popa
mov
mov
sub
test
push
sbb
mov
jg
mov
fcomi
lret
mov
loopne
xor
insl
and
jge
xor
push
iret
mov
movsl
and
mov
in
mov
lods
testl
jns
cmp
xchg
clc
fmuls
cmp
mov
push
icebp
mov
mov
add
mov
into
shl
mov
mov
das
mov
cmc
push
inc
mov
lods
dec
outsl
add
and
mov
hlt
cld
out
jecxz
adc
adcl
pop
add
sbb
adc
ret
addr16
fs
cmc
xlat
loopne
int3
dec
xor
sub
in
mov
lret
add
dec
sub
sahf
xchg
outsb
dec
mov
addr16
inc
lock
cld
push
jle
inc
loope
gs
adc
fcompl
aam
jle
mov
xchg
rcrb
arpl
jno
xchg
ficoml
dec
cld
lods
xor
inc
imul
cmp
in
pusha
cltd
loop
mov
cmpsl
stc
insb
sub
loope
test
ret
sub
push
test
add
add
cmp
daa
js
shlb
iret
stos
mov
lods
gs
dec
mov
loop
ljmp
xor
pop
ljmp
pop
repnz
int
and
and
jl
imul
add
sub
mov
dec
adc
pushf
pop
in
incb
scas
inc
out
lock
fnstcw
push
or
popa
jg
aaa
xchg
push
pushf
xchg
pop
jno
insb
jge
jne
addr16
mov
mov
imul
pop
loop
add
inc
aam
dec
lahf
int3
movsl
xor
push
insl
sbb
jp
mov
test
sbb
cmp
jecxz
add
cmp
mov
popa
fnsave
imul
imul
and
mov
sbb
sub
mov
xor
jmp
mov
mov
dec
mov
or
enter
imul
out
mov
std
pop
stos
dec
xor
divl
out
xor
fistl
mov
jnp
mov
mov
sub
pop
sbb
xor
sahf
pop
sub
or
testb
xchg
xchg
fs
int
jp
faddl
outsb
ljmp
and
dec
das
cmpxchg
addr16
xchg
test
mov
or
sub
push
add
pop
dec
push
sub
mov
sbb
ret
add
mov
adc
mov
jae
adc
cmp
stos
dec
ficoms
xor
push
fsubrs
jmp
lcall
cmp
lahf
test
test
js
ret
mov
addr16
jae
pop
jg
push
sbb
push
and
dec
stos
std
out
dec
xchg
movsl
mov
jo
cmp
sbb
cmp
arpl
mov
stc
sub
inc
cwtl
inc
mov
popf
push
and
and
inc
jo
out
cmp
push
push
mov
push
fldl
push
sub
mov
jmp
divb
gs
ds
sbb
stos
mov
lock
repnz
push
mov
insb
lods
jb
pop
dec
xor
add
dec
xchg
gs
ds
sbb
stos
xchg
jbe
test
repz
mov
lea
mov
adc
gs
ds
sbb
stos
xchg
inc
cmp
pop
push
movb
xor
and
lds
fcmovnu
sub
sub
stc
insl
inc
clc
icebp
aaa
movsb
mov
out
clc
sbb
xchg
pop
pop
lret
insl
xchg
mov
xor
fisttps
and
aaa
dec
xor
pop
jg
xor
ret
nop
xor
mov
push
cmp
xchg
ret
jnp
ret
movsl
int
and
enter
lahf
leave
lahf
xchg
push
aas
add
out
mov
pop
sub
xchg
aaa
xchg
xor
dec
mov
or
xchg
leave
mov
movl
inc
push
fiaddl
mov
cmp
stos
clc
sub
mov
jge
int3
data16
sbb
cmp
das
shl
fnsave
jg
ljmp
sbbb
xor
sbb
xchg
dec
add
jg
aas
rcrb
pop
das
mov
lds
mov
orl
cmpb
cmp
das
hlt
sahf
dec
inc
xor
sar
xchg
mov
lret
xchg
cmp
mov
push
sub
sti
pop
cmp
add
inc
jle
leave
fisubrl
fdivrp
rcrb
jbe
xor
dec
mov
xor
sub
mov
jno
mov
lahf
adc
dec
add
jno
push
sub
xor
jle
les
mov
pop
jmp
dec
adc
jmp
repz
aaa
mov
repnz
test
adc
and
scas
xchg
iret
xor
arpl
jno
sti
sbb
xlat
das
dec
sbb
movsl
sub
lahf
cmp
lods
jb
in
data16
mov
xchg
stos
pushf
or
sub
sbb
mov
cs
dec
sbb
repz
cmc
pop
pop
jb
shr
ljmp
lods
add
cwtl
lret
test
addps
flds
mov
fisubrs
sub
out
add
imul
cmp
push
and
fistl
jns
je
xchg
sarl
int3
cmp
lcall
xor
test
fwait
push
push
dec
or
dec
cli
push
popa
iret
arpl
mov
cwtl
movsb
loope
xor
pop
or
sbb
and
mov
jg
sbb
mov
push
call
pop
int3
cli
bound
sarw
mov
ret
mov
sbb
xor
das
pop
inc
or
and
daa
popa
lds
pusha
adc
inc
pop
out
add
lock
mov
sub
adc
divl
and
ds
aaa
ljmp
int
imul
fsubr
pushf
clc
ja
mov
xchg
pop
adc
pop
xchg
loope
mov
mov
out
inc
js
aad
pop
call
popa
push
aaa
out
rclb
fistps
jb
addr16
add
dec
shlb
adc
sbb
mov
jge
dec
call
mov
add
icebp
call
and
push
scas
xchg
push
aaa
outsl
fstps
xor
in
sub
sbb
imul
dec
mov
xchg
cmpsb
or
ja
dec
insb
push
out
jle
scas
jae
mov
punpckldq
push
lcall
fsubrl
out
cmc
push
jmp
inc
xlat
lea
jne
add
jg
cltd
add
loop
inc
or
sbb
out
mov
fdivs
sbb
xchg
xchg
fstpt
imulb
inc
pop
testb
in
fs
mov
jno
jns
push
lods
and
fcompl
add
loop
dec
mov
or
pop
loop
xor
pop
in
jbe
push
repnz
push
push
mov
mov
shrl
movsl
lcall
aad
xchg
sarb
das
outsl
lea
inc
lahf
jge
sbbb
xchg
fcomps
imul
ljmp
jne
add
mov
data16
fiadds
cld
out
cmp
aas
in
call
in
lcall
jne
adc
xor
adc
pop
mov
jg
clc
mov
and
cld
data16
stos
gs
push
pop
fmull
cltd
pop
dec
jo
cmp
mov
in
xlat
popa
jge
arpl
sub
xchg
push
adc
and
xor
sbb
les
sub
js
andl
sbb
data16
push
nop
and
xchg
adc
pop
xacquire
inc
out
sbb
cmp
orl
pushf
adc
and
and
sbb
inc
pusha
and
outsl
stos
out
mov
hlt
or
mov
in
xlat
xchg
cmp
xor
ret
xor
sub
cs
and
sbb
repnz
or
pop
cmc
fcoms
fdivs
stos
inc
cmpsl
sub
std
test
and
repnz
popl
fdivrl
sbb
in
popf
bound
daa
mov
adc
mov
mov
gs
mov
cmp
sbb
sbb
add
in
jne
push
or
sub
fmull
dec
add
fxrstor
jb
sti
clc
mov
pop
imul
dec
xor
negl
mov
cmp
dec
insb
dec
jae
mov
inc
out
mov
out
add
aas
stc
add
or
push
imul
pop
idivl
fcompl
mov
in
sbb
cmp
dec
call
jb
xorl
andb
mov
test
fwait
dec
dec
pop
ds
fcmovnbe
lods
push
fwait
mov
sub
cmp
ret
je
call
jno
jmp
arpl
out
cmp
mov
sbb
sbb
sub
pop
outsb
sub
outsl
jmp
mov
and
ds
xor
cltd
inc
rol
out
clc
sahf
stos
xchg
dec
dec
mov
or
push
or
pop
inc
incl
ds
xor
cltd
inc
rol
out
clc
sahf
stos
call
push
cmpsl
mov
rcr
outsl
inc
mov
adc
jp
pop
cmp
lret
sub
call
daa
push
mov
into
xor
mov
dec
mov
inc
and
xchg
add
mov
sbb
test
cmc
or
out
sbb
mov
or
add
divb
push
inc
sbb
pop
pop
test
bound
or
test
bound
fidivs
push
jl
dec
sbb
jg
out
popa
mov
cld
pop
add
push
imul
mov
out
sbb
sub
out
add
sbb
xchg
and
jp
mov
test
mov
xor
push
push
movsb
mov
mov
nop
jle
vpsraw
hlt
adc
std
mov
lahf
je
out
repnz
bound
mov
gs
loop
jno
sbb
inc
lcall
xor
lcall
xchg
pop
mov
dec
pop
mov
enter
test
or
sub
shl
xor
lock
rcrl
loope
jmp
das
loopne
int
jno
xchg
xor
dec
gs
shrb
aas
sbb
jne
movsb
and
lock
pop
mov
sub
aam
sbb
mov
or
outsb
cmc
pop
fs
sub
or
cwtl
scas
mov
add
fimull
rorl
sub
int
mov
lods
mov
xor
out
daa
mov
jnp
les
cld
pop
and
icebp
aad
movsl
adc
test
cmp
push
fildll
push
sub
adc
int
jnp
loop
fisubrs
clc
sbb
clc
cmpsl
mov
adcl
jb
fcoms
sbb
jns
scas
xor
out
ret
int3
pusha
or
popf
mov
add
jo
sbb
xchg
test
ret
push
adc
sbb
hlt
jl,pt
push
out
xor
cmpl
pop
scas
mov
jno
xchg
mov
lods
cmp
push
add
add
sarb
jnp
or
movsl
and
cwtl
cmp
mov
inc
cmp
in
push
jb
or
clc
shll
jle
gs
xchg
mov
or
mov
out
jnp
in
scas
adc
mov
outsb
xchg
or
imul
jo
xor
push
lahf
rclb
scas
mov
sbb
push
cmp
lret
insl
lret
call
xchg
int
rorb
sbb
xchg
cltd
int3
in
pop
push
mov
lret
fdivrl
xchg
push
test
mov
jae
mov
bound
aad
outsl
sub
rcrb
inc
es
push
mov
cmp
cld
enter
xchg
mov
push
mov
push
imul
out
rcrl
xor
sti
xor
test
outsb
inc
jns
in
mov
and
ret
rep
jmp
push
and
pop
mov
stc
ja
outsb
inc
les
cli
cmp
and
arpl
cwtl
bound
aaa
adc
bnd
movsl
cmp
sub
cld
add
add
call
mov
enter
mov
mov
test
or
shll
out
je
sbbb
popf
call
pop
insl
xor
scas
and
stc
mov
popa
in
mov
jmp
sbb
daa
mov
sarl
xor
dec
push
out
sub
adc
out
mov
push
and
pop
lret
in
sbb
test
insb
stos
and
fbld
mov
pop
enter
xchg
inc
loop
push
fwait
add
fildl
or
outsl
lock
jge
int3
pop
add
pop
inc
in
ficomps
cltd
xor
aam
push
int3
push
divl
hlt
test
fadds
mov
adc
mov
lahf
jnp
jmp
and
xor
jle
stc
mov
pop
push
int3
pop
lahf
fsubp
sub
cli
or
cmc
int3
mov
xchg
xor
mov
int3
out
lea
in
leave
jp
test
mov
lods
sbb
jno
icebp
adc
pop
cmc
dec
pop
push
rol
daa
cmp
jge
mov
cmp
out
es
out
out
clc
jno
jo
jo
and
or
xor
scas
cmpsl
inc
sbb
js
adc
outsl
ficoms
repz
shll
lods
popa
add
scas
repnz
sbb
xchg
lock
or
enter
xor
movsl
stc
lods
sbb
add
lret
dec
dec
cmp
jne
push
ljmp
mov
inc
cmp
aas
popa
jmp
jb
out
and
push
xchg
sub
pop
fadds
pop
mov
push
stos
rol
mov
xorl
dec
clc
mov
std
xchg
clc
inc
bound
add
push
lods
pop
test
je
mov
xor
pop
inc
cmp
pop
rcrl
dec
xor
cltd
inc
ljmp
jb
jp
repz
lock
iret
dec
scas
ds
pushf
mov
stc
and
cmpsb
mov
mov
xor
mov
movsl
mov
pop
push
dec
bound
aam
mov
mov
adcb
mov
mov
or
aas
test
mov
adc
dec
sbb
sub
fcoms
xchg
out
xchg
xlat
test
ret
and
and
subb
sbb
jbe
jae
xor
scas
je
jne
cld
push
pop
movsl
mov
adc
lret
ljmp
jl
push
ffreep
jle
hlt
lahf
mov
pop
sbb
js
sbb
cltd
aam
test
mov
pop
sbb
mov
dec
push
int3
jno
scas
je
jne
cmpsl
push
pushf
in
mov
jecxz
mov
inc
cwtl
adc
add
scas
nop
xchg
call
jge
mov
rcr
xor
fimull
fstpt
inc
xor
test
adc
mov
push
fists
dec
fisttpl
inc
aad
push
ljmp
mov
xor
movsb
sbb
lcall
orb
mov
pop
test
dec
enter
adc
decb
cvtps2pi
in
pop
clc
mov
cmp
pop
stos
cmp
imul
xchg
lds
adc
add
shlb
jb
push
xorb
adc
fmull
sti
pop
sub
scas
lret
into
cmp
pop
inc
add
mov
mov
xchg
push
int3
dec
inc
lret
daa
fstp
jne
jne
push
xchg
cmpsb
sbb
lds
jg
adc
sub
sbb
cli
fildl
pop
xor
leave
mov
ret
add
cmp
scas
mov
arpl
pop
xchg
xor
mov
js
dec
and
movsl
out
aad
in
jp
mov
mov
xchg
mov
and
out
ds
adc
mov
inc
leave
pop
push
std
sbb
push
push
pop
mov
push
mov
sbb
jecxz
jne
lcall
ror
cli
jp
movsb
shlb
stos
in
mov
dec
adc
cli
and
lahf
mov
dec
adc
adc
add
xchg
sbb
das
xor
cmp
ds
adc
jo
rcr
fwait
ds
jmp
xchg
out
sbb
jge
jne
cwtl
inc
jecxz
adc
repnz
push
mov
push
dec
pop
mov
sahf
clc
out
iret
mov
aam
add
xlat
dec
cmp
in
push
fs
out
in
popa
pop
and
xchg
jne
shrl
popa
rcrl
out
xchg
xchg
mov
push
cmp
mov
and
in
or
add
test
inc
xchg
shll
jnp
je
inc
mov
adc
sbb
xchg
dec
dec
jns
lea
inc
leave
ret
jno
cmp
xor
sbb
outsl
xor
sbb
mov
jmp
xchg
mov
idivl
repz
sbb
sti
popa
inc
ljmp
stos
fcomip
and
je
and
and
adc
xchg
repz
dec
inc
dec
push
jne
addr16
xor
or
cmp
fistl
mov
fbld
mov
outsl
cwtl
jbe
jo
adc
daa
icebp
jecxz
aam
sub
repnz
cs
adc
push
mov
pop
jl
mov
test
adc
xchg
mov
aam
push
lret
pop
movsl
in
jp
push
cmp
or
mulb
fsubrl
xor
adc
out
xchg
cli
pop
loopne
es
das
push
xchg
pushf
mov
jnp
sub
jmp
sahf
nop
add
push
stos
je
pop
movsl
pop
pop
lock
sarb
mov
cs
divb
sub
test
sbb
pushf
lock
fabs
stos
mov
les
pop
popa
cmpl
and
ret
decl
ds
iret
mov
sub
pop
sub
popa
test
mov
xor
xchg
decb
rolb
push
inc
inc
aas
mov
int
shl
inc
sti
ljmp
sub
lret
add
pop
int
or
fs
jns
std
insb
adc
adc
xor
jge
lret
pushf
inc
jmp
push
std
inc
mov
lahf
pop
push
mov
dec
popf
and
js
pop
cmpsl
push
dec
pop
rclb
pop
test
aaa
jp
loop
pushf
stos
aas
cmc
and
or
or
mov
ret
rcrb
sarl
and
addr16
addl
or
mulb
dec
outsb
sbb
cmp
xor
cmp
sahf
lcall
mov
gs
push
cmp
mov
aam
fsubs
out
mov
mov
xchg
nop
int3
mov
adc
ret
adc
mov
frstor
add
xorb
inc
sub
jg
mov
push
adc
sbb
jns
push
mov
xor
aaa
add
sub
jle
pop
mov
movsb
rcl
imul
inc
fisttpll
lcall
or
fs
jp
mov
insb
push
sarb
or
cs
repnz
sub
in
das
xchg
in
pop
ret
adcb
and
jno
jb
loope
jae
jne
lcall
fisttpll
adc
addr16
jae,pt
or
xchg
mov
scas
ljmp
sub
add
push
jle
test
divl
jns
pop
push
sub
dec
add
inc
pushf
sbb
jle
add
pushf
js
mov
cmp
fimuls
sbb
movsb
inc
sub
mov
fnstenv
std
cli
ret
roll
fisubl
ret
mov
sbbb
nop
insl
xorb
add
or
inc
aaa
dec
sub
pop
jne
push
popf
in
cmpsb
ret
pop
test
fcoml
and
or
xchg
and
cltd
je
jo
jmp
sbb
push
lahf
fisttpl
repz
jp
test
std
je
aad
imul
xlat
sub
pop
adc
xchg
dec
or
ffreep
push
adc
or
ret
leave
mov
xor
xor
mov
cs
divb
sub
test
sbb
pushf
lock
test
mov
rclb
aaa
sarl
scas
pop
pop
pop
cwtl
adc
push
dec
pop
xor
jmp
and
repnz
cmp
stc
xchg
daa
repz
xchg
fdecstp
js
pop
popf
add
inc
enter
sbb
inc
add
mov
cs
test
pop
sub
inc
in
dec
push
inc
out
xor
dec
adc
inc
push
icebp
pop
dec
fbstp
rcr
scas
jp
stos
arpl
outsl
mov
or
hlt
cmc
ret
inc
nop
or
cmpsl
add
jge
xor
sub
jnp
ret
jecxz
or
pop
loopne
aam
push
cmp
and
aaa
push
mov
loopne
fstps
dec
mov
or
jbe
adc
scas
mov
rcll
lret
ret
inc
in
and
sbbb
push
mov
or
push
arpl
divl
clc
insl
sub
cld
cmpsb
lock
sti
xor
fcos
in
cmp
xchg
xchg
out
cmc
sbb
push
sbb
add
add
dec
adc
pop
ja
jnp
into
and
imul
xchg
and
dec
adc
cvtps2pi
mov
movsl
aas
xchg
mov
xchg
hlt
fisubrl
inc
mov
mov
dec
lods
fdivs
pop
xchg
or
call
inc
cmp
lods
or
xchg
add
sar
aaa
nop
mov
insl
dec
jmp
std
mov
popa
popf
sbb
and
lret
icebp
adc
xor
add
fiadds
jo
sbb
cltd
je
je
dec
insl
xor
cmp
dec
push
stc
dec
adc
in
lods
aaa
enter
add
adc
sahf
push
insl
aas
idiv
movsl
mov
mov
popa
inc
add
cltd
inc
sub
add
movsl
dec
stc
mov
clc
fbstp
in
mov
jl
xor
pop
sub
lods
pop
xchg
repnz
push
inc
cmp
mov
cmc
push
cltd
xchg
int3
mov
xchg
and
push
mov
sbb
and
mov
jmp
pushf
out
xchg
cmp
jecxz
popf
in
or
mov
or
out
xor
or
mov
je
cmp
mov
shrb
loope,pt
mov
pop
lret
fsubs
pop
xlat
test
pop
push
repz
adc
push
fisubrs
cmp
test
xlat
ret
arpl
sbb
push
bnd
cmc
or
or
addl
les
bound
jae
fwait
dec
outsb
sub
imul
mov
cli
xchg
inc
mov
adc
std
test
xchg
mov
jecxz
aad
jmp
mov
or
lock
add
adc
int3
push
pushf
sahf
cmc
ret
jmp
xchg
dec
or
sub
sbb
nop
push
pop
rcll
inc
adc
out
or
lds
jae
in
hlt
aam
loope
mov
adc
and
rcrl
int
loope
cmp
nop
push
sti
cmp
jmp
mov
mov
pop
lock
aad
or
repnz
sbb
test
jmp
lds
push
lret
in
dec
out
add
test
mov
stos
push
dec
shlb
je
call
push
pop
in
scas
shr
xchg
mov
movb
mov
xor
push
shl
jmp
pop
aas
jg
fst
lock
test
test
cli
jae
jmp
add
aad
int
les
pop
pop
xchg
cwtl
lret
or
test
pop
loope
pop
mov
stos
mov
sbb
nop
jmp
xchg
shl
cmc
popf
mov
sarl
xchg
jo
jno
out
std
cmpsl
cmp
movsb
sub
rclb
arpl
mov
fldcw
data16
xor
sub
xchg
loope
hlt
sub
inc
fidivrs
cltd
orl
mov
mov
aad
je
sub
cmp
scas
push
ja
dec
in
decl
add
pop
icebp
inc
push
pushf
jge
push
out
repnz
or
adc
icebp
enter
popf
scas
add
nop
lock
push
stos
je
fs
inc
outsl
or
ficoml
jp
cmpsl
pop
cmc
dec
jge
adc
add
pushf
push
imul
lret
loopne
mov
sub
fisttpll
ficoml
cmc
stos
jo
sub
mov
loop
rol
push
cmpsl
xchg
shufps
orb
push
jecxz
add
jno
aam
push
add
les
adc
gs
mov
out
adc
or
adc
sti
xor
and
shl
adc
push
sub
adc
and
inc
push
jnp
xor
xchg
pop
pushf
movsb
dec
outsb
xchg
iret
mov
std
aas
pop
xor
push
pop
out
es
add
add
mov
sub
ud2
pop
fsubrl
dec
mov
les
pop
popf
push
push
sub
cmp
out
jno
push
mov
outsl
mov
sub
fmull
inc
out
addb
mov
push
xorl
cltd
jge
in
add
sbb
cmp
xor
jae
lret
in
adc
pop
testb
or
ljmp
repz
popa
loope
add
dec
or
mov
push
mov
cmp
sub
pop
xor
xor
pop
sub
cltd
rcrl
xchg
mov
imul
mov
leave
mov
ja
xor
mov
pop
mov
lods
out
sbb
call
sahf
imul
stc
lea
push
lea
fcmovu
mov
js
xchg
sbb
pop
push
sarb
push
movsb
loopne
cmp
mov
mov
push
adc
mov
pop
sti
jb
pop
add
fwait
les
cmp
jle
xchg
arpl
dec
test
mov
jp
movsb
and
stc
jne
rcl
or
ret
jne
jbe
gs
xor
mov
add
mov
and
ja
hlt
in
out
popa
idiv
test
jnp
popa
mov
sahf
adc
out
les
call
and
mov
xor
xor
mov
mov
fwait
outsb
sbb
gs
jnp
mov
jge
inc
gs
mov
mov
xchg
mov
mov
aaa
dec
or
mov
hlt
std
push
out
idivl
pop
lods
adc
test
sub
fsqrt
stos
call
aam
and
ss
mov
scas
fsubrl
mov
or
les
or
fnstsw
rolb
pusha
or
mov
sbb
sub
pop
push
dec
mov
fisubrs
lods
mov
and
sub
fstpt
mov
sub
pusha
mov
fcoms
daa
ret
jne
jbe
gs
ja
jb
jmp
dec
jmp
pop
push
and
add
or
jb
jg
dec
xor
inc
mov
adc
mov
fstp
sub
jae
test
mov
inc
ljmp
cmc
test
dec
das
mov
inc
test
mov
push
movlps
in
or
jnp
xor
push
or
xchg
sbb
lret
nop
fadd
pop
sbb
cmp
insl
jo
in
dec
imul
scas
insl
pop
xchg
fcmove
pop
and
fiaddl
ljmp
mov
and
faddl
popf
out
arpl
mov
dec
fdivrs
sbb
jg
and
in
mov
and
lds
mov
add
in
imull
push
inc
in
les
sbb
popl
jge
dec
mov
mov
into
not
or
nop
gs
cltd
sti
gs
pop
es
pushf
popa
jmp
mov
dec
inc
pop
push
in
or
ds
aaa
mov
xchg
inc
sti
mov
cld
push
mov
push
fsubr
sbb
jecxz
pop
neg
xchg
cmp
push
je
rorl
and
mov
and
pop
pop
add
and
and
mov
lret
jecxz,pn
repnz
mov
icebp
cmp
pop
stos
dec
or
push
mov
and
shlb
les
rcrl
push
sub
es
ret
imul
lahf
inc
pop
dec
cld
mov
imul
mov
mov
or
test
xor
test
dec
jecxz
push
shlb
push
xor
es
nop
sub
iret
lock
shl
test
cmp
ret
ja
nop
sbb
and
cmpb
shlb
icebp
orl
add
movsl
mov
dec
aam
cli
ljmp
and
scas
jo
jecxz
loopne
fiaddl
cwtl
push
or
lea
add
xor
arpl
leave
jno
int3
ja
arpl
dec
std
sbbb
push
jne
xor
mov
lret
cmc
sbb
shl
or
punpcklwd
popf
or
hlt
jne
pushf
xor
es
rcr
hlt
jg
pop
rcll
mov
test
lds
js
mov
adc
pop
push
push
pop
scas
fcmovnb
mov
mov
lods
sbb
mov
xchg
sub
cmpb
int
mov
ja
repz
adc
adc
nopl
cli
jge
dec
inc
push
sub
out
inc
push
pop
pop
fs
mov
sbb
or
pop
mov
dec
aaa
mov
aad
mov
pop
sbb
pop
adc
shll
loope
mov
aam
clc
jl
divb
ret
sarl
inc
jp
movsb
int3
data16
push
jecxz
dec
add
es
cs
aad
iret
xchg
lods
loop
call
inc
ja
sub
mov
mov
cld
daa
in
les
xchg
jge
cmp
jmp
or
sbb
xor
push
pop
out
outsl
repz
push
lods
movsl
repz
add
adc
mov
sub
data16
adc
mov
out
leave
cmp
insb
popf
aas
rol
test
cs
lods
jg
mov
mov
stc
mov
aaa
push
pop
jne
cld
into
lods
and
and
bound
iret
inc
adc
xor
add
pop
jecxz
cmpb
mov
inc
mov
mov
imul
inc
add
cwtl
fisubrs
pushf
xchg
push
repnz
push
cmp
cs
pushf
dec
aad
movsl
and
inc
repz
repz
adc
xchg
outsl
adc
mov
pusha
jae
xchg
sti
add
stc
test
sbb
out
or
nopl
jbe
pop
sbb
cmp
pushf
data16
cmp
ljmp
mov
or
push
add
es
xor
out
jns
jno
fidivl
ficoms
xor
push
pushl
and
mov
outsb
and
test
push
push
push
jmp
cs
xchg
out
jg
lds
jg
push
sbb
sbb
push
out
xlat
int
and
in
adc
call
in
icebp
push
adc
les
sti
dec
jl
add
push
mov
mov
dec
or
out
inc
mov
imul
cmp
lods
sub
adc
mov
add
mov
shl
int3
cmp
fwait
outsl
ret
push
and
add
push
sbb
and
push
xchg
subl
xor
lock
stos
xorb
clc
push
jb
loopne
or
test
mov
add
shll
lds
pushf
icebp
sub
mov
int
and
call
push
loop
in
aad
push
push
dec
repz
pop
sub
adc
lods
inc
sub
cwtl
out
push
cmpsl
or
test
push
dec
adc
lret
add
out
jae
xchg
cmp
cltd
push
push
pushf
das
or
jmp
mov
out
sbb
shlb
dec
pop
add
lds
ljmp
pop
fs
mov
push
mov
repnz
popf
stc
adc
inc
mov
mov
rorl
sbb
lea
pop
cmc
mov
insb
push
in
adc
test
pop
stos
push
xchg
repnz
ret
test
mov
subl
push
or
mov
ret
cmp
test
mov
inc
out
mov
push
shrl
aad
shll
es
xor
add
arpl
movsb
xor
adc
daa
sbbl
add
ds
cwtl
int
cwtl
sbb
jle
mov
push
dec
cmp
xchg
inc
pop
mov
in
loop
pop
mov
mov
aaa
jg
xchg
insb
imul
mov
call
xchg
cmp
mov
jne,pn
jne
mov
or
cli
clc
movsb
dec
adc
cwtl
mov
and
cmp
sbb
xchg
int
cld
and
lahf
shl
test
pop
lods
mov
xlat
push
mov
inc
fiaddl
pop
lret
push
lds
mov
mov
pop
ss
sub
inc
repnz
jmp
adc
push
cmpsb
mov
in
mov
hlt
mov
es
cmpl
pushf
inc
adc
sub
adc
inc
int3
sbbb
cmp
mov
mov
pop
sbb
cmp
pushf
fnstcw
aad
jp
jb
dec
xchg
sahf
sub
mov
inc
lods
mov
out
xchg
jae
dec
jecxz
sbb
in
cmp
sahf
imul
outsl
xchg
lret
xlat
xchg
xor
pop
daa
nop
adc
or
jg
xchg
jbe
lock
lods
mov
gs
dec
cmpsl
sub
test
cmp
adc
jo
xor
rorl
movsb
fwait
subb
lea
xor
ror
aam
imul
movsb
shl
and
rcrb
cwtl
lea
push
sub
mov
sbb
dec
lahf
aad
pusha
xor
sbb
xlat
mov
jle
rol
xchg
pusha
scas
adc
imul
jmp
adc
loop
xor
dec
shr
sub
or
loope
fldl
sahf
fidivl
sub
loop
jo
scas
inc
jno
je
mov
sbb
push
adc
jle
not
xchg
push
pop
stos
je
jle
push
xchg
push
cs
lcall
aad
lods
cmp
das
or
xchg
xchg
sub
jge
jge
jmp
mov
jmp
sbb
in
sahf
jnp
stos
mov
xchg
lods
roll
sbb
std
mov
push
xchg
add
mov
push
stos
cmpsb
xlat
cmp
in
lock
imull
pop
icebp
cwtl
shl
fdivrs
pop
pop
push
xor
or
sbb
popf
mov
faddp
fisubs
mov
ret
in
jp
mov
adc
mov
or
mov
cs
mov
mov
cmp
shl
rclb
push
sahf
push
mov
icebp
xor
js
pop
mov
pop
and
mov
dec
outsb
lahf
pop
xchg
add
pop
xchg
adc
ljmp
mov
shr
ja
cmp
fidivl
xor
or
sti
push
push
jns
lret
adc
add
xor
cmp
xor
clc
decl
test
in
insb
aas
aad
bound
sar
cmp
aam
sti
es
in
int3
cmpsl
outsl
ljmp
jmp
sub
pop
push
add
aas
pop
or
aam
cld
call
sbb
mov
push
kmovw
pop
addl
jge
sbb
xchg
leave
popf
jl
fs
movsl
add
xor
push
jmp
cs
pop
lods
jae
insl
jl
sbb
pand
aaa
fstpl
gs
jp
lret
or
push
inc
ret
repz
mov
lods
cmp
inc
notb
pop
jb
sub
and
bound
jle
dec
push
sbb
icebp
xchg
popa
and
inc
sbb
repnz
pop
add
inc
cwtl
xchg
mov
inc
adc
adc
ds
or
mov
xor
or
outsb
mov
popf
dec
mov
js
xchg
jne
push
out
scas
pop
push
stc
inc
cwtl
cs
rorl
sahf
test
dec
es
ret
jne
push
fs
jo
xor
xor
nop
mov
pop
add
and
cltd
xchg
xor
aas
in
pop
cmp
dec
shll
cmpsl
arpl
jl
cmp
sbb
xchg
test
addr16
pushf
xchg
mov
insl
jecxz
cmpsb
stos
mov
inc
and
repnz
and
sub
mov
lret
mov
dec
xchg
adc
mov
xchg
mov
dec
cmp
jmp
mov
pop
inc
mov
fs
lds
adcb
mov
sbb
insl
js
inc
gs
lret
sub
push
lea
sbb
sbb
inc
in
dec
imul
lret
bound
pusha
fwait
mov
cmp
mov
xlat
ret
iret
mov
fbstp
jnp
add
imul
mov
jecxz
adc
mov
xor
test
daa
inc
jnp
enter
mov
cmp
cmp
mov
cli
lret
mov
or
cmp
cmpsb
or
popa
divb
mov
fistpl
pop
xor
cmp
mov
test
arpl
jecxz
test
xchg
fnstsw
iret
in
mov
subb
sub
sub
cmpsb
mov
mov
mov
stc
imul
adc
xlat
mov
dec
or
stos
movsb
xchg
push
push
mov
jns
lods
roll
ljmp
fistpll
sub
mov
cmpsb
mov
push
push
sbb
xchg
inc
mov
jmp
lds
pop
jno
jno
jge
ss
arpl
dec
jp
into
push
xorb
xchg
pop
push
pop
jg
jge
add
popa
pop
jle
mov
and
push
nop
in
fs
lcall
cmpsb
xor
loope
mov
push
aad
scas
addr16
popf
dec
int
xor
cmc
jno
jg
jmp
sbb
sub
cmpsb
je
push
xchg
jns
andl
xor
jb
repnz
dec
aad
jo
nop
mov
loopne
jle
outsl
dec
add
sti
jbe
daa
call
adc
stc
xor
stc
out
jns
stc
mov
daa
mov
cmpsb
cli
mov
icebp
and
jp
push
add
pop
xchg
add
mov
shll
clc
pop
sub
cmpsb
ja
and
adc
jns
inc
imul
jae
icebp
fsubrl
test
in
lds
sub
iret
testl
cmp
jnp
stc
xchg
xor
movsb
add
push
pop
int3
adc
jecxz
mov
xchg
fdivs
loope
loop
xchg
inc
dec
pop
shr
cmp
mov
int
es
inc
jg
lret
push
movsl
lea
scas
jecxz
pop
mov
dec
push
jmp
mov
ucomiss
and
insb
jecxz
test
push
mov
shll
loop
xchg
xchg
aas
or
fidivl
jns
das
std
add
imul
pop
popf
inc
cmp
pop
push
sub
add
loop
mov
adc
and
cli
xchg
xchg
mov
in
js
arpl
fwait
mov
push
pop
scas
add
add
cld
es
test
pop
in
cmp
push
mov
sub
scas
pop
inc
outsl
fsts
andl
push
pop
loop
rcr
lret
jae
mov
mov
scas
mov
xchg
or
into
add
mov
mov
mov
arpl
ret
cmc
iret
ds
inc
add
dec
pop
cmp
addr16
fs
fisubl
jge
scas
imul
and
or
or
and
adc
bound
je
adc
xor
out
mov
mov
lret
pop
in
ds
hlt
jge
loopne
or
xchg
repnz
pop
xchg
push
lret
aad
movsb
imul
lods
scas
scas
nop
lret
jecxz
jb
push
outsl
push
sbb
aam
lret
loop
cs
pop
xor
mov
jns
outsl
lods
jnp
pop
fbstp
push
dec
popf
mov
adc
inc
push
fstl
dec
mov
push
lret
jmp
jl
sub
jnp
cmp
in
cld
fisubl
push
push
xor
rorl
inc
jnp
dec
xlat
mov
repnz
mov
inc
outsl
mov
or
popl
bound
movsb
imul
aad
or
stc
or
cli
xor
push
fs
je
std
push
fldt
pushf
mov
push
jmp
push
lea
test
clc
xlat
outsb
adc
jnp
shl
ret
fisttps
xchg
je
popa
ds
xor
dec
ljmp
push
sbb
pop
xchg
fsubrl
cmc
shl
pop
stc
shlb
cmp
loope
in
loop
inc
pop
adc
notl
lret
test
nop
mov
push
or
push
fwait
push
fstpt
arpl
xor
aas
cwtl
xor
push
inc
mov
rep
cmp
clc
loope
iret
nop
filds
aam
mov
rcrl
aad
cmp
sbb
fstl
xchg
cmp
push
lret
add
sub
scas
jl
add
xor
pop
or
lods
sub
cs
es
jbe
ljmp
push
sbb
js
loopne
xchg
loope
cmp
cmp
popa
xchg
jbe
fiaddl
adc
fisttpll
movsb
xchg
xor
aaa
mov
mov
jg
and
mov
xchg
and
aaa
jne
aaa
cmp
push
fldenv
sub
xchg
jp
push
pushf
mov
gs
in
cmpsl
mov
mov
cli
mov
fwait
test
jnp
adc
dec
adc
ja
xchg
sbb
lods
sub
pop
pop
fidivs
lea
stc
xchg
jg
mov
out
ret
push
int3
cs
jbe
lods
xor
lret
pop
mov
inc
or
lods
rcrl
or
and
int
pop
cwtl
cmp
lret
push
rclb
sub
std
scas
mov
mov
pop
or
xchg
loope
cwtl
sub
bound
popa
cmpsb
inc
aad
inc
mov
lcall
in
rcrb
adc
push
je
loopne
mov
popa
test
or
jae
cmp
lods
test
daa
repnz
scas
leave
mov
int3
inc
adc
mov
lret
cmpsb
lods
xchg
jecxz
xor
lahf
jle
popa
push
aam
adc
gs
xchg
pop
stc
gs
iret
aas
adc
shlb
mov
add
fwait
sahf
mov
and
arpl
repz
call
loope
ds
dec
ret
push
jno
sbb
cmp
addr16
inc
out
popf
push
in
hlt
push
inc
ja
cmp
or
and
and
add
punpcklwd
pop
adc
xor
hlt
mov
jnp
in
mov
push
and
push
mov
adc
loope
rolb
or
jge
ret
adc
sbbb
aad
fstpl
adc
sti
inc
dec
cmp
mov
in
xor
mov
daa
mov
in
xchg
daa
loope
cmp
cli
cmc
arpl
js
aaa
mov
cmpsl
ret
loope
into
mov
pop
mov
adc
pop
testb
dec
cmp
movsb
repnz
mov
fisubl
out
arpl
sbb
sub
sub
in
jp
xor
push
nop
mov
jge
xchg
push
in
inc
out
inc
inc
adc
in
jmp
xchg
mov
sub
lcall
push
into
imul
in
mov
shl
xchg
sarl
cs
add
aad
lds
cmp
add
cmp
dec
aad
pop
or
or
xor
add
mov
inc
es
and
fisttpll
or
cld
add
lods
push
xor
repnz
lods
aad
adc
cs
or
dec
add
sbb
pop
dec
cwtl
xlat
imul
out
mov
dec
test
add
add
jecxz
or
fwait
jmp
sub
adc
or
bound
mov
ret
pop
dec
in
sub
popf
std
sub
sarl
mov
pop
sahf
jecxz
cli
mov
arpl
lods
imul
ss
or
mov
sahf
adc
mov
outsl
outsl
dec
popa
lret
cmc
aaa
jmp
add
aas
mov
and
mov
pop
mov
inc
jmp
int3
bnd
sub
inc
cwtl
cmpsb
pop
add
sbb
adc
jp
push
ficomps
mov
lret
insl
cmpsb
cmp
mov
outsl
mov
xor
pop
fiadds
mov
inc
mov
notb
or
enter
xor
xchg
sub
sbb
pop
add
xor
data16
out
imul
mov
lock
test
add
sub
adc
pop
imul
and
jae
jnp
dec
stos
nop
mov
or
dec
cmp
inc
pusha
add
inc
lret
fidivs
cmp
ret
sub
push
imul
sub
movsl
ret
insl
pushf
sbb
mov
sahf
and
mov
outsl
mov
xor
cmp
xor
movswl
mov
inc
mov
inc
rclb
xchg
enter
xor
xchg
sub
add
out
jnp
adcb
inc
mov
cmpsb
add
iret
std
mov
test
fcomps
shrb
out
mov
pop
inc
push
fiadds
inc
jmp
push
loope
add
adc
push
pop
xchg
or
and
call
push
pop
push
aad
loope
jae
pop
jl
cs
js
dec
xchg
mov
inc
xor
push
pop
sub
xor
add
mov
or
pop
movsl
push
jb
sub
xlat
dec
dec
or
mov
xor
fbld
mov
mov
fistpll
fs
or
push
push
and
lcall
cld
dec
ret
sub
test
jo
dec
scas
fwait
loope
and
and
sahf
in
shl
mov
lods
mov
sub
and
cmp
add
repnz
ss
xor
mov
pop
rorl
test
hlt
test
fnsave
push
jo
fisubl
es
mov
push
shll
pushl
mov
mov
xchg
xor
shlb
xorb
adc
psadbw
imulb
pop
loopne
lcall
int
stos
jge
mov
push
mov
jne
push
scas
stos
je
leave
dec
loope
push
sub
gs
mov
or
imulb
fxch
add
jle
and
sub
scas
and
push
cmc
lods
pop
adc
inc
mov
mov
insb
adc
cmpsb
ret
push
dec
vpperm
test
nop
adc
filds
dec
and
and
scas
enter
and
or
mov
add
xchg
dec
adc
mov
dec
push
cld
addb
cmp
cmp
jb
mov
lcall
sar
test
idiv
adc
jbe
stos
shll
push
xchg
dec
mov
ss
pop
leave
ljmp
iret
sub
into
push
test
mov
add
jecxz
jo
stos
push
jno
gs
pop
add
mov
outsl
lds
xor
jb
mov
xor
mov
dec
repnz
fsubrs
inc
insl
mov
adc
test
xchg
and
aas
ficoms
mov
cmpsb
xchg
ljmp
je
inc
cli
mov
dec
call
mov
add
aad
pop
mov
push
test
das
cmc
jno
xchg
mov
cmp
dec
jns
into
sti
inc
jns
push
lds
mov
in
fistpl
push
dec
jecxz
cwtl
cs
xor
shr
lahf
imul
add
mov
mov
fnstcw
pop
cli
loope
stc
cltd
sarl
add
mov
or
push
inc
jbe
arpl
mov
insl
lret
xchg
imul
popa
sti
es
sbb
mov
mov
dec
push
dec
mov
ret
jmp
pushf
mov
pop
adc
sarl
daa
xchg
inc
in
xor
out
jp
pop
dec
jns
in
sarl
push
cmp
je
jmp
std
jb
adc
adc
fmuls
dec
loopne
stos
xchg
sti
or
outsl
iret
cmc
test
enter
sti
mov
adc
mov
jle
adc
movsl
xor
xchg
pop
dec
js
sahf
xchg
out
mov
sub
fildll
int3
into
push
push
add
je
or
cmp
xchg
enter
iret
arpl
out
and
cmc
ret
rcrb
xchg
lcall
inc
push
mov
negl
jo
es
jp
mov
mov
push
inc
sbb
mov
cmp
addr16
pop
xchg
push
loopne
jge
mov
sbb
out
jl
xchg
bound
xchg
loope
push
outsb
and
add
xor
lods
stc
test
jp
mov
mov
push
inc
lods
mov
sub
push
jg
lods
fmuls
aaa
sti
fs
jno
mov
jnp
jb
fs
popa
dec
pop
adc
pop
icebp
cmpsb
adc
popf
pop
mov
pop
mov
std
mov
xorl
mov
push
ret
mov
in
adc
mov
adc
je
test
jle
movsl
popa
or
sub
jmp
or
test
pop
push
mov
and
xor
xchg
jmp
lods
jg
sbb
push
ficoms
pop
enter
dec
adc
fildll
aas
xchg
fs
sub
push
add
fwait
fwait
add
mov
es
jns
and
sbb
pop
adc
xchg
inc
xor
xor
push
in
cs
ss
es
fcomp
aam
xlat
xchg
push
daa
cmp
leave
or
or
push
arpl
mov
sub
into
jp
inc
out
add
enter
fs
lcall
add
push
inc
int3
mov
popf
mov
inc
stos
ret
xchg
or
pop
push
int3
ficoms
filds
movsl
xor
adc
enter
jl
pop
lea
xorl
adc
cmpl
sbb
mov
fdivrp
pop
cmp
jecxz
cwtl
mov
mov
push
xchg
sub
int
clc
sbb
cmc
ja
mov
out
lahf
mov
sbb
rcl
jmp
push
adcl
xchg
popf
mov
mov
ljmp
jp
icebp
mov
jb
and
xchg
test
addr16
push
push
movsl
test
imul
cmpsb
cmp
add
lods
addps
jbe
lcall
and
test
push
ja
adc
sub
test
lock
cmp
out
stc
andl
outsl
xlat
adc
lods
jns
call
xor
gs
or
adc
lret
dec
stos
ljmp
jbe
roll
push
mov
xchg
fcomps
add
cmpl
inc
pop
enter
sub
jg
scas
xlat
stc
cs
mov
adc
mov
out
jbe
xchg
fiaddl
movsb
and
jecxz
aam
add
or
scas
xchg
mov
pushw
enter
jo
lds
inc
mov
mov
push
xchg
ret
adc
in
lcall
fs
mov
add
push
int
jno
negl
fdivs
adc
rcrb
out
adcb
xlat
mov
mov
pop
movsb
rcl
and
jne
in
fmulp
imul
mov
stc
popl
or
adc
enter
loope
mov
jge
push
out
dec
arpl
in
imul
rcrl
add
sub
js
pop
cmpsb
jne
xchg
xor
incb
or
scas
or
lcall
orb
xor
pop
jmp
movsl
int3
cld
test
in
jl
mov
jl
dec
in
pop
mov
fs
pop
lods
mov
mov
frstor
in
pmaddwd
aam
mov
les
lret
xchg
out
sbb
jle
jp
js
push
stos
in
mulb
imul
fdivrs
mov
xchg
scas
mov
inc
push
add
in
pop
scas
jne
jnp
jp
xor
pop
push
nop
lds
xor
mov
scas
movsl
xor
mov
pop
dec
lret
vfmsubadd213pd
mov
shll
test
xchg
xchg
mulb
push
sar
int3
and
dec
xchg
aaa
mov
mov
in
in
mov
rcrb
mov
test
call
test
lret
cld
shlb
sbb
lea
pop
ljmp
mov
cmpsb
pop
mov
lahf
aam
pop
fs
test
loope
repz
mov
inc
movsb
nop
fbstp
movsl
add
outsl
clc
cmovp
xor
inc
cmp
cmp
mov
mov
test
ficompl
adc
xchg
imul
push
dec
cmp
dec
push
sahf
out
inc
jne
mov
pop
push
lret
cmp
nop
push
mov
or
loope
dec
sub
or
sti
sub
jge
or
mov
dec
mov
popf
sahf
cmpl
stos
xchg
push
jns
in
repz
movsl
mov
cmpsl
mov
mov
xchg
negb
or
push
jg
dec
int
inc
and
iret
out
push
je
xchg
jecxz
faddl
fs
mov
imul
dec
cmpsb
in
jg
repz
pop
mull
pushl
fcomps
inc
mov
sbb
cli
adc
dec
cwtl
and
test
dec
aad
or
mov
inc
fcmovbe
sbb
sarl
cmp
in
sub
lahf
arpl
xchg
int
or
inc
out
scas
inc
fidivs
sub
mov
stc
mov
inc
push
ja
and
lcall
fidivl
scas
fwait
push
jno
les
adc
jno
pop
push
cmpsb
popf
add
sbb
mov
inc
mov
push
js
gs
push
int3
jmp
mov
cs
mov
mov
jle
mov
cmp
jmp
call
hlt
ret
mov
jne
xchg
push
sub
test
mov
popa
or
test
push
adc
dec
mov
inc
or
fcompl
das
jl
dec
pop
adc
push
cmc
jmp
popa
cmp
xchg
and
cwtl
pop
cmp
jl
in
push
xor
js
mov
out
push
xor
cmp
aad
repz
in
insb
clc
popa
xchg
sti
pop
js
and
imul
push
push
aas
pop
gs
out
addr16
jne
add
pop
lds
scas
cmp
pop
lea
lea
jbe
rcl
jns
and
subb
jmp
sub
call
adc
xchg
add
pop
repz
xor
jno
je
rcrb
les
inc
mov
sub
and
cli
fwait
loopne
lea
pop
psubusb
add
mov
sbb
dec
imul
aaa
movsb
insb
stos
pop
out
xorb
mov
mov
ss
xor
jo
int3
loope
out
sub
mov
orl
std
popf
xchg
scas
mov
xor
mov
dec
mov
cmp
inc
mov
jmp
pop
lods
icebp
inc
test
or
in
insb
into
popa
aaa
pusha
pop
dec
xor
insl
lds
mov
mov
mov
iret
mov
add
mov
xchg
mov
xchg
jp
dec
pop
and
sarl
outsb
push
loop
lods
lods
sbbl
movsb
and
popa
or
jecxz
in
test
leave
sbb
add
nop
stc
mov
cltd
sbb
leave
sahf
imul
lods
add
pop
dec
push
icebp
test
mov
movsb
in
gs
popa
rclb
js
dec
shl
jmp
cwtl
cmp
imul
xchg
incb
out
jo
outsb
addr16
aam
sbb
adc
mov
and
jae
loopne
ljmp
sti
xchg
movb
adc
cmp
jae
pop
scas
inc
push
cmp
mov
int
in
sbb
subl
das
jne
cmp
shr
adc
xchg
and
add
aam
js
mov
in
arpl
imul
scas
enter
lock
in
roll
mov
iret
ljmp
fs
ret
add
ss
test
and
aam
push
notb
mov
pop
push
decl
cmpb
push
test
add
add
mov
or
cmp
ror
or
and
sbb
jmp
xchg
push
xchg
or
mov
adc
iret
mov
imul
xlat
jmp
xchg
jmp
or
shlb
push
inc
out
or
mov
jge
lahf
imulb
dec
add
aaa
lahf
in
test
sahf
dec
adc
mov
fst
icebp
push
push
inc
xchg
test
lea
xor
cmp
mov
int
in
mov
lds
dec
std
mov
or
push
ja
xchg
push
ror
push
lock
js
xchg
dec
xchg
sbb
mov
dec
cltd
jle
shrb
mov
push
cs
fsubrl
jo
push
jg
adc
mov
push
rolb
in
push
int3
xor
in
push
hlt
je
lcall
sbb
inc
or
mov
iret
mov
and
inc
cmpsl
cli
enter
xchg
mov
mov
cmp
mov
push
jmp
push
out
pop
ret
fiadds
enter
movsb
xor
leavew
push
or
cmc
mov
jo
ret
fs
pushf
pushf
pop
das
xchg
je
and
mov
stos
add
shrb
cli
lods
repnz
gs
cld
pop
andb
inc
adc
repnz
pop
push
adc
shlb
call
dec
dec
in
out
and
lret
iret
mov
test
ds
dec
cli
pop
pop
or
push
inc
jg
iret
std
arpl
aad
and
das
out
cli
jnp
pop
xchg
mov
mov
add
fwait
insl
stos
fnsave
test
inc
lahf
or
add
mov
xchg
push
mov
mov
repnz
inc
jmp
sahf
addr16
fisubl
ss
subl
icebp
mov
jmp
xor
jmp
pop
cltd
jg,pt
lock
cwtl
outsb
test
mov
mov
mov
shll
cs
pusha
scas
stos
stos
inc
int3
dec
scas
xor
clc
js
xchg
add
xchg
incb
rcll
adc
shlb
imul
imul
cwtl
and
jmp
mov
mov
jge
add
dec
loop
pop
mov
add
mulb
cmp
and
add
inc
leave
or
cli
push
adc
in
jne
cmc
or
or
popl
shlb
fidivl
mov
cmp
push
aaa
insb
cltd
push
pop
in
cmp
adcl
stos
dec
sarb
notb
mov
jns
in
xchg
or
sub
fdiv
shlb
mov
xchg
sbb
and
js
shll
nop
jmp
stos
stos
inc
int3
dec
scas
xor
clc
js
xchg
aas
fnstenv
adc
pop
xchg
incb
rcll
adc
arpl
int3
ret
adc
imul
cwtl
and
push
push
shrb
cli
lods
inc
mov
imul
inc
adc
repnz
pop
push
xor
push
lcall
pop
dec
dec
in
mov
xchg
lock
lret
iret
mov
test
ds
dec
cli
leave
add
jns
orb
scas
ds
les
pop
add
out
cli
sub
out
cmp
cltd
cmp
add
adc
shrl
sarb
sbb
insb
mov
mov
add
lods
push
in
cmc
shlb
sub
inc
cmpsb
xor
mov
dec
sarb
lea
mov
jl
cmp
xor
lods
fcompl
cmp
je
mov
fcomps
xchg
imul
int3
ret
ds
mov
lahf
jmp
mov
shll
test
arpl
mov
repnz
pop
pop
sti
lds
xlat
mov
lret
jle
bound
cli
pop
mov
or
inc
cmpsl
and
aad
shlb
ja
push
xorl
test
push
fdivrs
dec
aas
push
roll
ret
xchg
sti
mov
idivl
gs
es
loope
jge
push
fcmovnu
in
xchg
push
mov
ja
call
jns
int3
inc
mov
xor
lret
into
dec
push
dec
stos
popa
insl
mov
dec
push
pop
mov
in
add
xchg
arpl
and
adc
aam
mov
push
nop
jecxz
fcoms
adc
sbb
add
pusha
dec
xor
in
mov
cmpsb
repz
outsb
addr16
cltd
xor
hlt
movsb
and
xchg
test
dec
test
fs
clc
mov
xchg
je
imul
addr16
or
xor
xor
mov
outsb
imul
jo
outsl
or
xlat
jle
push
jb
in
push
mov
cmpsl
or
sbb
fwait
fwait
sub
daa
and
xchg
cli
fdivr
es
cli
adc
ret
out
fsubrs
rorb
call
jnp
add
daa
int
aad
xor
dec
test
cltd
cmp
dec
mov
rcr
push
add
lock
bound
stos
out
adc
push
mov
mov
pushf
sub
jbe
mov
sbb
jae
adc
pop
and
mov
dec
xchg
jae
mov
xor
xchg
stos
lea
aam
aas
mov
mov
lds
ficomps
or
jns
movsl
repnz
xchg
dec
add
pop
cltd
push
mov
mov
mov
mov
int
leave
mov
fbld
sub
loopne
fwait
dec
ljmp
dec
sub
stc
jno
xchg
leave
and
int
push
xchg
out
ret
popfw
adc
cmp
jmp
jmp
cs
leave
loop
fiadds
imul
dec
lea
inc
cmp
or
cld
fwait
inc
mov
mov
dec
jno
incb
or
sbb
sahf
ds
pop
push
lret
movsl
mov
fwait
lcall
arpl
nop
ret
movsl
aas
cmc
int
ret
jo
jbe
xchg
push
cmpsb
jp
and
jae
test
pminub
sbb
push
push
xchg
jge
mov
leave
dec
push
sahf
inc
xlat
inc
mov
hlt
fldcw
dec
cmp
xchg
dec
mov
inc
inc
repz
in
dec
jmp
mov
dec
add
mov
xchg
pop
sub
mov
ss
aad
fistl
and
aad
ret
cmp
iret
or
jnp
adc
sbb
sbb
ljmp
clc
mov
movsl
push
inc
cmp
lahf
mov
out
xor
dec
mov
mov
mov
pop
sbb
ljmp
addr16
icebp
pop
enter
sbb
test
adc
cmp
insl
shrl
subb
push
addb
aad
dec
stos
pop
mov
cmc
adcl
xor
aad
bound
dec
sti
push
sbb
in
push
xor
decb
pushf
or
xchg
dec
push
xchg
lods
std
scas
fucom
repnz
enter
into
pop
push
stos
xchg
xlat
cmpsb
test
push
or
mov
xlat
fdivrl
add
mov
insl
cmp
daa
pop
pop
fists
xchg
jge
out
xor
negb
lcall
popf
or
in
call
mov
icebp
mov
adc
push
mov
stc
fidivs
loop
cld
jnp
aas
andb
or
cmc
movsl
aas
in
lahf
fisttps
mov
pop
and
das
jmp
aam
cmp
or
rorl
clc
ds
enter
mov
adc
idivl
outsl
aad
and
lret
arpl
les
in
jb
loopne
decl
adc
or
and
int
sbb
xor
add
add
push
cmp
inc
sub
cltd
pusha
jnp
xchg
in
test
mov
imul
andb
enter
mov
jge
xor
cltd
mov
shll
pop
es
cwtl
push
call
cltd
ja
xor
mov
jecxz
lahf
jb
xchg
mov
add
xor
sti
jo
decb
sub
dec
push
out
inc
push
shlb
imul
xor
sbb
cmp
pop
sahf
shlb
mov
pop
pop
cmp
outsb
push
mov
jbe
sub
push
fs
into
in
mov
ret
inc
stc
and
and
loopne
dec
test
repz
dec
push
sub
sbb
add
dec
cmp
or
xchg
or
data16
nop
pop
lcall
in
lahf
sub
jb
cmp
jp
xchg
lret
test
and
imul
sbbb
mov
sub
addb
int
clc
jge
iret
push
add
aam
gs
or
xchg
mov
bound
add
cmp
jo
call
mov
push
mov
pop
or
lock
jp,pn
rcll
orb
and
mov
outsb
lret
ss
stos
jmp
push
mov
xchg
ret
scas
push
sub
fisubs
inc
lret
je
xlat
paddsw
out
fcomi
clc
push
jns
pop
fdivp
jae
add
std
jmp
xor
add
lret
lahf
icebp
add
push
into
pop
cld
fidivl
add
fiaddl
pop
or
popf
push
cltd
sahf
cli
mov
add
xchg
mov
scas
push
xorl
sub
mov
imul
and
push
mov
mov
addb
fsubrs
lcall
and
xlat
testb
xor
and
das
sub
sub
cmp
xchg
ja
xchg
mov
gs
cmp
push
cmc
push
sbbb
inc
add
inc
xchg
adc
aaa
test
in
test
pop
dec
mov
std
pop
sbb
xchg
dec
sbb
jl
das
or
insl
fistpl
je
xchg
mov
sets
les
imul
mov
pushf
mov
and
push
shlb
int
sarl
scas
sbb
popa
mov
fwait
mov
leave
cmp
mov
imul
mov
jmp
push
pop
sub
mov
lock
out
mov
xchg
jl
out
xor
sub
fidivrs
lret
xchg
out
scas
in
inc
insb
push
scas
sub
push
mov
loop
cmc
push
leave
imul
mov
xchg
mov
jbe
or
insb
repz
enter
outsb
sbb
imull
mov
sahf
push
mulb
jmp
lret
ret
cmp
push
daa
cltd
imul
dec
icebp
pop
jnp
test
and
mov
in
push
enter
push
xchg
into
lods
jg
cmp
inc
push
ja
call
sbb
sbb
inc
xchg
addl
sub
ss
pop
push
or
inc
enter
or
sbb
pop
adc
cmp
mov
add
xchg
imul
idivb
cltd
xchg
repnz
sub
sbb
les
subl
inc
in
je
ret
gs
gs
sub
sub
sbb
mov
push
pop
insl
outsl
inc
imul
xor
adc
leave
iret
sahf
ret
ja
les
notl
cli
ja
mov
sub
in
and
ja
gs
shrb
cmp
das
fwait
mov
lds
icebp
in
int3
loope
sti
test
pop
sub
inc
scas
dec
cmp
inc
adc
sahf
jge
orb
inc
inc
test
aad
cltd
jecxz
sbb
fidivrl
loop
pslld
or
xorb
das
xchg
dec
inc
push
lods
push
roll
or
mov
add
lods
bound
decl
idivb
std
fsubrl
jo
lahf
lcall
jo
je
test
ret
test
jl
mov
aad
mov
ja
sbb
or
inc
sub
sbb
fdivl
pop
pop
out
jnp
mov
push
addr16
and
fistl
push
xor
es
jmp
sbb
mov
cld
shll
lock
jne
int
push
rorb
jg
or
data16
dec
in
mov
and
cmp
xorl
or
xchg
mov
paddusw
jecxz
inc
ljmp
adc
adc
les
testl
incb
jns
sarl
in
fbld
popf
aam
je
push
imul
insl
lock
lret
jbe
inc
scas
gs
pop
rclb
dec
mov
add
and
dec
ret
push
push
popf
cmp
hlt
in
cmpb
rcll
or
jbe
lds
roll
jb
imul
sbb
repz
sub
cltd
and
daa
sub
inc
xor
arpl
mov
and
insb
or
push
imul
roll
inc
test
cs
movsl
push
test
mov
leave
loope
nop
pushfw
pop
add
test
cld
or
ss
sub
gs
into
lods
xchg
cld
or
ss
mov
clc
sub
ficomps
jb
lods
xchg
cld
or
ss
out
jecxz
adc
mov
fistpl
cmp
add
and
shrl
and
lcall
ds
rolb
leave
xchg
fsubrs
mov
add
fistl
push
xlat
arpl
popa
loopne
out
xchg
mov
jle
push
xor
imull
sti
mov
add
test
sbb
stos
jle
loop
mov
daa
dec
xchg
sbb
loope
popa
fnstcw
adc
lret
les
push
es
cmp
fcmovb
mov
bound
sbb
in
lods
out
pop
cltd
nop
jne
cmp
repz
xchg
inc
fiaddl
es
mov
inc
popf
jne
popf
mov
or
add
or
fwait
int
fldt
push
xchg
lods
mov
mov
aad
pop
jmp
and
mov
out
daa
jmp
in
sbb
int3
call
daa
daa
jnp
add
mov
rorb
pop
cltd
pop
cmp
dec
sbb
pop
icebp
jno
adc
and
xlat
clc
sti
aam
push
arpl
fsts
addr16
adc
int
es
mov
test
inc
lock
insl
mov
mov
rdtsc
push
sbb
or
xchg
mov
sbb
ror
xor
repnz
scas
xchg
cmp
dec
arpl
fisubs
in
jecxz
shlb
cs
outsb
jo
push
mov
pushf
loope
lock
daa
dec
mov
stos
add
je
daa
out
clc
mov
jne
in
cmp
fstpl
or
or
lahf
pop
movsb
jmp
fsubl
lcall
not
subb
sub
andl
cmp
and
inc
insb
xor
inc
add
hlt
xchg
or
cmp
int
pop
ljmp
cld
test
jno
pop
and
xchg
cmpsb
lds
xor
jge
inc
mov
nop
mov
mov
dec
and
fadd
dec
fucomi
aad
xlat
inc
sub
cmovle
popf
push
push
inc
jne
jle
mov
push
sub
cmp
call
xchg
xor
dec
cmpsl
lock
iret
jns
xchg
xor
rcl
mov
lods
out
test
stos
jg
repz
es
push
out
loop
insl
imul
mov
repz
lea
cli
aaa
icebp
sub
arpl
jns
push
enter
sub
xorb
leave
xor
ret
loop
push
push
out
test
out
lcall
repnz
jns
xor
loope
mov
stos
loope
cmpsl
jo
bound
pushf
out
push
loop
lea
ret
xor
mov
mov
pop
rcrb
jmp
xor
pop
dec
mov
mov
xor
push
sbb
test
int
mov
popa
dec
push
sbb
jmp
das
xor
rcl
outsb
pusha
inc
test
cmovno
mov
inc
mov
jecxz
add
das
test
jge
add
outsl
subb
jp
movsl
mov
mov
mov
pop
hlt
fistps
popf
inc
pop
or
mov
mov
pop
jp
jae
mov
sbb
imul
jno
jecxz
std
fisubrl
js
cmp
shl
jl
xchg
sti
push
xor
test
jne
and
adc
pop
sub
sub
inc
mov
hlt
lret
mov
or
test
outsl
jb
loop
fwait
test
mov
les
jmp
mov
dec
cmp
shlb
push
arpl
pop
lds
jp
test
and
ret
lret
dec
pushf
popa
test
dec
mov
scas
pop
mov
cmp
incl
add
sbb
rsqrtps
lretw
fisubl
xor
xorl
je
scas
repnz
lds
test
adc
int3
out
sti
pop
sbb
jns
icebp
add
adc
mov
mov
jl
dec
mov
dec
mov
cs
mov
lret
inc
mov
xchg
ss
icebp
adc
jno
out
sub
pop
repnz
dec
popf
sbb
or
call
out
divl
in
dec
repnz
inc
cmp
out
in
das
out
sub
test
outsl
mov
ljmp
mov
rcl
int3
push
xor
pop
or
cmp
jge
xchg
cmp
leave
cltd
xor
sbb
pop
mov
inc
sarb
lods
ds
inc
popf
test
and
enter
xchg
into
popa
cmp
in
fwait
adc
das
mov
jle
outsb
mov
xor
in
pop
es
nop
shr
sahf
jp
pop
xchg
insb
lock
out
dec
negb
inc
and
and
jns
xor
xchg
mov
out
or
jp
mov
das
in
jae
xor
lahf
inc
jne
jmp
xchg
fiadds
and
mov
imulb
xor
das
gs
sar
int
sub
enter
add
pop
loope
ljmp
cmp
int
adc
in
out
mov
add
call
aad
add
cmc
mov
lahf
xor
lods
repnz
mov
cmpl
cltd
add
les
inc
ret
ds
jae
push
xor
dec
cmp
les
cmpsl
mov
cli
cmp
ja
push
popa
adc
lret
or
or
out
lahf
xor
out
mov
xchg
fdiv
or
dec
mov
mov
stc
and
add
mov
sarl
push
pop
mov
jl
xor
mov
xchg
vpunpcklwd
cli
sbb
sub
pop
jmp
xchg
xor
cmpb
xchg
add
add
pop
push
xchg
or
jmp
test
mov
jecxz
into
pop
and
mov
mov
xorb
adc
sarb
pop
pop
jmp
movsb
mov
adc
jp
pop
inc
adc
arpl
mov
sbb
fstps
popa
pop
pop
fsubrs
and
ret
pop
or
push
xor
xlat
mov
fstp
fmul
mov
pop
pushf
or
sbb
and
testl
and
ljmp
divps
hlt
pop
jp
jge
or
and
pop
ret
outsb
sub
lds
nop
and
mov
or
lds
xchg
jo
mov
mov
mov
xchg
iret
lods
and
popa
cltd
aad
jae
jl
and
or
outsb
ret
iret
iret
xchg
xor
sbb
lds
xor
cmp
push
fistpll
push
jl
aam
inc
mov
outsb
stos
bound
loopne
mov
pop
dec
push
aaa
outsl
jb
loop
lcall
cli
iret
and
dec
fadds
movsb
mov
adc
xor
sub
cmp
lods
lds
and
sbb
mov
adc
mov
enter
popf
fdivrp
sub
jp
arpl
cwtl
nop
adc
inc
cld
push
bound
jb
out
das
or
add
mov
cmp
fstpt
dec
pop
or
outsb
lahf
add
nop
jp
cmpsl
and
jo
inc
xchg
sub
and
xchg
cld
repz
test
xor
aaa
orb
es
push
xchg
call
adc
jns
lret
jns
cmp
in
sahf
push
fs
sti
scas
pop
jecxz
std
lock
sbb
scas
mov
mov
push
in
fldt
or
mov
sar
hlt
cld
inc
cwtl
push
sbb
cld
mov
and
daa
int3
fcmove
jae
aaa
pop
jns
or
xor
mov
xor
aam
rclb
arpl
pop
nop
sub
call
scas
add
not
mov
cmpsl
mov
mov
loop
lds
mov
mov
sbbl
ret
or
pop
add
sahf
fwait
adc
idivb
sbb
pop
pop
and
jne
dec
pop
xchg
or
xchg
scas
mov
popf
cltd
sbb
arpl
adc
jae
jb
mul
fidivl
inc
or
adc
jge
enter
inc
cltd
mov
mov
cmp
ds
mov
cmpsb
mov
mov
mov
cwtl
cs
cmpsb
cmp
ljmp
addb
dec
add
gs
pop
test
gs
xor
adc
adc
dec
lds
lock
jl
and
ret
std
add
xchg
sub
imul
fisubrs
jecxz
pop
adcl
fisubrl
sbb
js
pop
inc
iret
dec
cmp
lock
nop
stc
test
and
xor
mov
in
inc
pop
lret
outsb
lahf
fbstp
adc
mov
cmp
or
or
sti
mov
out
push
xor
lock
lret
mov
jbe
xchg
push
inc
dec
data16
ss
or
sbb
sub
ljmp
je
cmpsl
sahf
mov
in
jge
lret
jno
movsb
pop
out
leave
xchg
dec
stc
jns
stos
sti
add
cmpsl
cmp
leave
insb
shr
std
mov
mov
lahf
fsts
inc
mov
fs
inc
jo
test
imull
int3
inc
pop
pop
cmpsl
cmpsl
stos
inc
mov
mov
add
aas
and
pop
jecxz
ds
or
std
inc
cmp
pand
fwait
shll
jle
jle
js
popf
sti
flds
into
mov
sub
xlat
inc
inc
lods
mov
hlt
mov
test
pushf
xchg
xchg
out
mov
inc
into
inc
sub
outsl
jge
pop
test
out
jmp
outsb
hlt
xlat
in
movsb
xchg
insb
or
sti
inc
sub
mov
mov
fimuls
clc
stc
fwait
ljmp
insb
scas
inc
icebp
xor
ror
je
iret
outsl
cli
jge
pop
int
decl
fimuls
mov
push
mov
cltd
fsubl
lds
xchg
jo
mov
mov
stc
and
xor
xlat
stos
insl
mov
push
es
sub
mov
cmp
lods
or
aad
nop
pop
dec
int3
testl
cmp
push
icebp
xchg
xchg
scas
stos
pop
jmp
inc
flds
pushl
pop
pop
add
fcoml
pop
clc
adc
sbbl
xchg
mov
loopne
cmpsb
fstpt
in
push
pusha
adc
rcll
outsl
jb
outsl
mov
rcrb
fsubrl
xor
fiadds
ret
pop
push
sub
jnp
in
inc
cmpsl
mov
outsl
cmp
push
stos
loop
xor
bound
inc
sbb
les
jbe
jge
fwait
sub
aaa
aam
dec
jb
push
mov
cli
jnp
pop
push
xchg
sbb
add
in
lret
sub
loop
addl
xchg
mov
jecxz
aaa
fnstenv
mov
pop
in
in
jae
adc
mov
pushf
add
add
js
jo
lods
push
sub
dec
push
mov
adc
fdivrp
shlb
scas
test
sbb
gs
push
lods
mov
mov
and
sub
testb
mov
pop
pushf
xor
cmpsb
or
sub
pop
sbb
push
mov
dec
push
dec
stc
sub
pop
xchg
mov
inc
aas
daa
sti
cmp
or
cmc
cmp
mov
xor
int
arpl
das
pop
insb
arpl
jae
imul
test
repz
mov
fwait
dec
loop
sub
mov
xor
lret
sub
jl
jmp
mov
pop
xchg
push
sub
lret
popl
popf
lods
jo
cli
cmp
outsl
mov
mov
mov
mov
dec
incb
and
insl
xchg
cs
sti
mov
imul
scas
pushf
xchg
sbb
adc
jbe
inc
data16
xchg
mov
mov
rcll
sbb
fildl
sub
imul
js
aas
fs
adc
and
mov
push
lahf
push
jnp
add
mov
loopne
push
mov
test
adc
int
shl
outsl
push
pop
out
pop
adc
and
lods
inc
pop
and
cmp
inc
jge
xchg
fwait
sarl
jg
push
fsubs
inc
gs
lcall
inc
mov
mov
mov
pop
add
mov
ljmp
lret
std
jne
mov
xchg
test
out
xchg
je
jns
scas
mov
mov
into
xor
in
sbb
sbb
andb
ljmp
sbb
lret
push
scas
jno
mov
mov
dec
xchg
fbstp
fsubl
push
sbb
jg
add
fwait
cmp
imul
fidivs
cmp
sar
jns
iret
mov
cmp
lcall
add
ret
daa
pusha
loope
and
cmpsl
movsb
mov
cmp
iret
cmp
mov
cli
mov
shl
cmp
inc
adc
in
lds
movsb
mov
cmc
insl
push
inc
scas
add
xor
sarl
call
pusha
mov
or
scas
aas
out
cwtl
or
inc
lcall
jg
push
stos
inc
mov
insl
pop
sub
mov
js
xchg
mov
push
clc
mov
movsl
pop
mov
testb
jbe
adc
push
test
or
std
lea
pop
xchg
jns
cmp
mov
pop
scas
xchg
mov
push
inc
jp
insb
bound
push
test
inc
jb
setg
mov
mov
push
lods
pop
stc
xor
jmp
or
push
hlt
leave
sub
cld
rorb
ss
pop
popf
xor
sbbb
mov
push
clc
sub
loope
cmc
sahf
and
jge
cmp
xorb
imul
jnp
ffree
cmp
imul
xor
xor
push
inc
lds
arpl
xchg
xor
fwait
lret
mov
fists
mov
and
cmp
or
pop
leave
popa
inc
cs
cmpsl
incl
jae
sahf
fdivrs
mov
or
lret
inc
mov
faddp
jmp
dec
dec
lret
inc
lahf
aad
or
aaa
or
or
inc
adc
fsubs
leave
arpl
enter
jmp
scas
fsubp
xchg
out
popf
push
inc
inc
lahf
xor
mov
inc
xor
rorl
jbe
xchg
stos
aad
vandps
roll
mov
aam
stos
inc
dec
dec
cli
decl
pop
add
or
jle
in
pop
sbb
out
aad
data16
push
outsl
inc
pop
jg
jne
jbe
cltd
xchg
ret
outsl
xchg
pop
iret
ss
xor
mov
dec
inc
popa
add
adc
mov
sub
dec
adc
leave
hlt
fisttpl
and
mov
sub
or
cltd
jl
lcall
mov
in
test
push
adc
fldt
lods
lret
inc
pop
int
call
cmpsl
jp
jg
add
icebp
push
jg
xchg
sbb
xor
cmp
cmp
pushf
and
in
sbb
mov
mov
outsl
push
mov
or
pop
aas
xor
and
add
adc
loopne
xchg
int3
lds
cmp
pop
push
push
sbb
setl
stos
xchg
loopne
or
xchg
push
adc
pusha
popf
sbbb
lock
mov
push
ljmp
mov
push
popa
movsb
cmp
add
popf
pop
xor
loope
push
das
push
popf
scas
pushf
inc
push
mov
jbe
adc
imul
pop
cmp
mov
data16
lea
sti
xchg
movsl
or
add
mov
test
or
mov
jns
or
xor
lahf
aaa
push
aas
into
int
xor
popa
pop
inc
or
inc
lcall
mov
adc
push
les
sub
lret
addr16
call
mov
cld
cwtl
sti
jbe
lret
and
cld
fisubl
es
aad
loopne
pop
push
mov
out
shlb
fidivl
inc
std
out
mov
pop
lea
xchg
mov
scas
mov
push
mov
clc
push
mov
es
xor
sbb
std
leave
es
and
dec
test
int3
mov
pop
mov
pushf
jns
inc
pop
cmp
dec
ret
jecxz
jle
dec
les
or
push
in
or
dec
push
pop
movntq
data16
gs
jb
sbb
pop
push
xchg
cmp
fdivrs
sbb
add
xchg
cli
xchg
fs
mov
pop
mov
ljmp
adc
aas
lea
and
dec
loopne
and
popa
pop
sub
adc
bound
int
mov
jg
xchg
inc
push
xchg
mov
lret
je
outsl
fstpt
inc
je
sti
fstl
xor
stos
and
sbb
cmc
cmp
out
xchg
loope
jns
fs
mov
push
cmp
aam
dec
stos
mov
daa
mov
je
test
jo
push
dec
add
xor
imul
les
cmp
mov
inc
ficompl
scas
xor
fdivl
mov
xchg
jns
push
cmc
int3
data16
mov
outsb
rcrb
dec
stc
and
sub
push
inc
lcall
xchg
outsl
xchg
imul
xchg
jmp
sbb
aaa
sbb
sub
dec
sarl
loopne
dec
movsb
pop
sub
pusha
leave
fs
add
test
data16
or
stc
push
sbb
cli
addr16
add
movsb
or
inc
cli
jp
jnp
repz
popf
mov
jg
bound
jmp
xchg
out
insb
jnp
frstors
inc
mulb
mov
lea
cmc
or
sbbl
or
nop
pop
add
jmp
mov
cltd
data16
in
pop
dec
bound
cmpsb
sbb
and
cltd
inc
push
js
dec
fs
cmp
cli
cmp
popf
push
dec
shll
pop
pop
jne
push
lods
mov
cmc
int
pop
jnp
ja
out
lea
push
mov
mov
jg
fdiv
jns
dec
out
xchg
addr16
xlat
insl
dec
icebp
pushf
dec
mov
rolb
push
scas
cmp
cwtl
loope
inc
inc
add
adc
aaa
fldcw
ret
jo
lret
arpl
and
mov
jle
cltd
xchg
cld
push
xor
movsl
mov
inc
fucomp
enter
int
sarl
fcomp
jne
lcall
mov
sub
or
cld
lds
sahf
cmpsl
repz
push
rcrb
test
test
jae
cwtl
js
pusha
dec
mov
in
pop
pop
push
add
hlt
jmp
in
pop
jo
push
fcmovne
out
or
or
mov
mov
sub
xor
mov
stc
aam
ljmp
jno
mov
pop
addr16
aas
test
sub
gs
push
inc
insl
xchg
lods
pop
jge
stos
cli
mov
fiaddl
les
cmc
xchg
adc
popa
arpl
stc
cmc
cmc
push
pop
cmp
dec
mov
mov
orb
pop
fildll
fmuls
mov
jl
daa
es
pusha
cmp
and
cmp
and
frstor
les
mov
jecxz
shl
movsl
push
movsb
mov
mov
jecxz
bound
bound
fcoms
pop
xchg
movsb
stc
sbb
xchg
pop
inc
call
insb
aaa
testb
mov
xchg
cmp
dec
cld
out
jo
mov
retw
pop
js
clc
jae
add
mov
inc
and
xor
sub
pop
adc
push
movsl
pop
ljmp
out
icebp
mov
mov
lret
test
mov
xor
push
insl
cmp
mov
enter
repnz
xchg
add
push
mov
fdiv
xchg
test
ret
adc
sub
push
pop
or
xchg
xchg
pop
push
sub
jl
ret
push
testl
not
pushf
or
insl
imul
jg
lret
stos
lods
adc
dec
and
jg
out
bound
and
push
out
out
xchg
adc
lock
adc
fcompl
jnp
jo
adc
into
insl
jno
lcall
jmp
ss
dec
add
fcompl
ja
repz
adc
xchg
jp
push
mov
jmp
or
mov
xchg
lock
addr16
cs
je
cmp
jl
ljmp
inc
std
adc
pop
mov
dec
insb
jne
aas
add
inc
xlat
cmpsb
cmp
aam
test
dec
xor
xchg
hlt
mov
ficoml
mulb
in
sarl
and
and
pop
lock
xor
testb
inc
mov
cmpsl
pop
es
adc
cmc
and
push
dec
popf
pushf
cmp
jne
jae
test
adcl
ljmp
cmpsb
rcrb
into
pop
mov
mov
push
out
out
fcomps
jns
popf
imulb
fiaddl
mov
je
icebp
jno
pusha
mov
mov
mov
mull
popf
repnz
sbb
shlb
pop
fstpl
inc
jbe
or
push
add
push
push
mov
in
int
je
xor
push
or
lock
cmp
lds
ja
fsubl
test
add
icebp
mov
mov
out
popf
adc
sub
mov
mov
adc
and
and
mov
mov
and
call
adcb
or
mov
cmp
cmp
test
das
int
mov
rcrb
mov
adc
repnz
mull
mov
xchg
or
or
add
repnz
fisubl
pop
int3
mulb
mov
pop
popf
or
mov
xchg
aaa
xchg
jl
lret
sbb
sbb
mov
arpl
jle
cmp
jge
stc
jo
dec
in
mov
push
sub
pop
jmp
mov
cmp
push
and
sbb
aam
xlat
pop
ror
push
xchg
lods
in
cmp
lea
loope
in
and
rcrl
int3
into
add
mov
loop
daa
pop
adc
pop
dec
mov
fs
fcmove
adc
stos
test
bound
or
mov
mov
imul
mov
push
pop
push
fld
outsb
inc
xchg
mov
jmp
adc
mulb
xchg
and
jle
inc
sub
xor
das
test
inc
test
scas
jmp
out
enter
xchg
imul
cs
mov
scas
aas
out
dec
mov
repnz
cmpsb
push
repz
test
fdiv
xlat
mov
pop
pop
frstor
movsl
ss
sbb
adc
xchg
push
sti
mov
pop
lods
mov
sub
out
xchg
int
push
cli
push
aad
testl
xor
add
into
fisttpll
mov
stos
cmp
cmp
aad
cmp
xchg
fadds
mov
rclb
push
leave
je
das
fwait
xchg
fs
mov
xor
xor
xchg
scas
rcrb
ficompl
push
jp
pop
arpl
pusha
cli
call
fldl
int3
inc
test
and
cmp
mov
ret
dec
and
mov
or
push
orl
pusha
roll
mov
pop
add
and
or
cmc
jnp
pop
push
sbb
fidivrs
xchg
push
mov
inc
or
add
add
pop
lea
insl
cmp
addr16
sbb
mov
clc
imul
xor
lea
jmp
jo
mull
dec
pop
leave
pop
test
inc
xor
aaa
sub
xchg
jl
dec
pop
cmp
loopne
push
and
cmp
push
cmp
inc
and
mov
lock
xchg
or
cwtl
pop
stos
lret
enter
popl
sub
lds
sub
push
adc
rcr
shl
mov
sbb
cmpb
in
mov
and
xchg
imul
mov
sub
mov
cmp
xchg
fisubs
pmovmskb
pop
lock
pop
mov
mov
xor
test
gs
mov
cmp
cmp
out
int
xor
aaa
sub
stc
xlat
loope
inc
out
push
cmp
xchg
xchg
or
cmp
push
rolb
dec
mov
xor
mov
xlat
push
inc
es
cmp
ss
inc
and
and
add
hlt
lds
out
ret
xorl
pop
mov
inc
inc
mov
cmp
push
loope
dec
mov
xor
pop
jo
ds
xor
pop
les
mov
pop
scas
adc
cmp
sub
pushf
mov
fildll
imull
jae
fwait
in
add
xchg
add
lods
subb
insb
outsb
gs
xor
xor
jl
jae
pusha
dec
or
scas
clc
and
mov
scas
push
scas
icebp
testb
mulb
addr16
or
add
lcall
and
cmc
cs
pop
jmp
xor
push
pop
add
cmp
cld
jmp
adc
movsl
mov
ret
mov
les
cmpsb
pop
les
add
xchg
imul
fdivl
xchg
pop
xchg
in
pop
mov
pop
movsb
push
add
ret
enter
stc
cmp
lcall
clc
xor
stc
add
inc
mov
out
push
adc
mov
jae
cmpsl
add
mov
sbb
mov
stos
add
jl
shrl
push
lock
xchg
jmp
and
mov
push
fnstsw
xor
cmp
mov
mov
or
fdivs
inc
lahf
jae
dec
mov
std
mov
adc
jecxz
addb
bound
stos
sahf
push
inc
aam
push
jns
in
outsl
push
arpl
mov
cmp
dec
hlt
jno
sub
jne
popa
imul
dec
mov
jp
inc
mov
ret
int
sub
adc
sub
clc
xchg
mov
mov
jmp
in
movsl
jne
pop
mov
mov
mov
insb
or
stos
dec
int3
push
fsubs
repz
push
fwait
in
add
out
fwait
cmpsl
add
ljmp
adc
mov
es
hlt
cmpsl
vcvtpd2psy
fucomi
xchg
pop
fs
mov
add
pop
dec
sub
lret
sub
rorb
loopne
das
cmp
jge
push
jl
dec
into
and
mov
scas
xchg
aas
ja
test
sub
outsb
push
sarl
jle
and
lret
out
or
add
adc
insl
inc
repnz
pop
mov
add
rol
mov
int3
dec
xchg
cs
xchg
mov
pop
add
cltd
pop
jmp
movsb
xor
mov
das
adc
xchg
arpl
xor
stos
ret
fisttpl
cltd
jae
xor
jb
push
fs
mov
cmp
stc
fidivl
sub
popa
insb
scas
jb
dec
jle
incl
mov
xchg
jp
and
jle
scas
out
notl
imul
mov
xchg
jle
stos
pusha
jbe
out
hlt
mov
lods
inc
mov
inc
stos
jno
call
fdiv
sbb
or
sbb
sub
xchg
lds
mov
inc
rolb
mov
mov
mulb
lahf
mov
push
mov
xor
cmp
xorl
shlb
cld
pop
push
and
divb
cld
pop
add
jbe
pop
or
dec
dec
imul
out
xchg
mov
sarb
nop
or
mov
mov
cmp
mov
inc
pop
scas
sbb
jge
fists
sbb
sbb
scas
jbe
mov
push
test
cmp
push
movsw
lret
stc
bound
inc
out
inc
mov
insb
loope
lret
repz
mov
ds
int
icebp
add
call
repz
cmp
stos
adc
mov
das
mov
xor
sub
xchg
xor
cmp
dec
sub
lods
sub
inc
enter
push
ret
imul
cmpsl
xchg
in
cld
sbb
insb
sbb
insb
fcmovb
adc
fisubl
ja
loopne
cmpsb
jmp
clc
mov
add
cs
xchg
gs
and
pusha
jecxz
or
sub
cmpsb
mov
xorb
int3
jmp
in
jg
dec
sbb
call
mov
rorl
xchg
or
jne
lock
jnp
push
mov
or
sbb
es
je
stos
mov
add
clc
divl
pop
sbb
leave
mov
and
insl
pop
cmp
lea
hlt
enter
push
test
roll
out
shlb
cld
cmp
xchg
inc
inc
std
es
jg
sbb
cmc
push
ficomps
jne
push
mov
jg
lock
mov
cld
pop
add
jbe
pop
or
mov
xchg
addr16
xchg
add
cmp
dec
shrb
mov
dec
jmp
jle
pop
bound
out
addr16
jmp
inc
jg
xor
jmp
shl
data16
pop
movsl
incl
xor
cmc
xor
push
xor
jl
stos
push
dec
enter
cmp
cmp
mov
in
mov
push
loopne
inc
movsb
dec
push
js
test
adc
sub
loop
mov
push
out
fcos
mov
outsl
sbb
xor
lods
xchg
jp
xor
imul
mov
int3
mov
jno
xchg
out
nop
cli
stc
xchg
int
lahf
call
mov
mov
cs
sub
std
adc
in
jl
jl
js
sbb
inc
xchg
xor
adc
xchg
std
jp
and
mov
into
push
and
rcrb
adc
mov
mov
sub
call
cli
xchg
mov
sbb
xchg
cmpsb
packuswb
das
outsb
out
sbb
aad
xor
xor
adc
adc
mov
xor
shlb
rol
lahf
sbb
stos
lea
dec
cmp
push
cmp
mov
mov
pop
insl
add
xchg
pop
cli
and
or
imul
xchg
notb
push
xchg
mov
add
fwait
push
shlb
cld
pop
push
xorl
sti
push
mov
adc
inc
fbld
outsb
push
adc
sahf
fcmovu
and
add
push
xor
push
mov
push
cmp
mov
mov
pop
push
sbb
rcll
or
test
arpl
cli
mov
sar
jno
lahf
popf
jmp
push
pop
mov
dec
popa
or
push
out
pop
addl
pop
jecxz
xor
ja
das
jl
rol
and
push
mov
ficomps
add
fiadds
mov
in
into
insb
push
xor
jo
xchg
pop
jg
loop
sbb
push
xor
push
dec
into
jo
sti
push
repnz
ljmp
in
test
std
hlt
rolb
js
arpl
lods
xor
xor
mov
cmp
inc
lahf
incb
testb
dec
je
or
xchg
mov
and
sub
inc
inc
std
imul
test
js
lcall
ljmp
sub
js
inc
int3
stos
or
and
and
cmp
mov
cld
pop
push
sbbl
ljmp
push
movsb
les
aam
sbb
jmp
ficoms
dec
and
into
movsb
je
pop
push
dec
dec
lahf
dec
mov
scas
dec
adc
pop
xor
xor
push
imul
add
push
daa
mov
popa
or
cmp
and
fsts
dec
cmc
es
jns
addr16
sbb
xchg
sbb
cmpsl
pop
jns
mov
mov
sbb
outsb
push
or
sbb
add
ja
shl
pop
xchg
xlat
sar
stos
or
sbb
roll
rorb
cmp
in
js
sub
inc
inc
std
dec
xlat
or
jnp
jg
setbe
mov
ret
lock
out
and
ret
or
enter
addr16
mov
inc
sub
pop
dec
inc
popa
fld
enter
das
int
movsl
pop
push
xchg
pop
fldl
addb
pop
xchg
pop
pop
add
cmc
sbb
push
sub
pop
cmp
aam
lret
leave
je
stos
imul
fmulp
pop
jne
push
arpl
or
gs
cmp
mov
imul
cli
lds
xchg
push
mov
test
rclb
mov
sbbl
push
cmp
and
loop
jp
cmp
cmp
das
pop
push
adc
and
jle
sahf
ret
ret
inc
out
xchg
mov
xchg
insb
iretw
insl
jbe
pop
mov
or
clc
lcall
clc
mov
sbb
cmp
rcr
xchg
hlt
dec
loopne
adc
ret
sub
hlt
xchg
and
je
test
and
hlt
cld
pop
fisubl
test
adc
push
popa
ljmp
loope
push
lods
and
push
mulb
pushf
repz
mov
test
adc
cmp
pop
and
dec
lcall
std
lea
mov
sub
shrl
push
pop
add
and
test
lret
sbb
shlb
dec
or
xor
imul
ret
das
sub
std
jecxz
pop
sbb
sbbb
loopne
lods
mov
sub
js
lea
pop
adc
popa
sub
out
push
jmp
push
rorl
fldlg2
repz
pop
ja
std
ret
sbb
jmp
movsb
xor
mov
pop
fisubl
addl
add
loope
inc
inc
clc
imul
stos
jae
aaa
push
mov
xchg
or
shlb
clc
sbb
xor
sub
out
fisttpl
aad
arpl
call
sub
fsts
das
cwtl
pop
popf
orb
xor
jl
out
lock
std
cmpsb
pop
out
cmp
clc
and
dec
xchg
aad
lcall
add
add
xchg
mov
xor
repz
lret
mov
sbb
int3
jmp
and
repz
lret
add
mov
mov
push
or
sub
push
sbb
shlb
inc
cmpsb
jg
xor
fnsave
push
nop
xor
in
lahf
xchg
push
mov
outsb
mov
xchg
fucomip
cmp
test
or
ror
jl
mov
sub
jae
aaa
mov
mov
shr
xchg
pop
mov
xor
pcmpgtb
arpl
mov
cmc
mov
movsl
pop
mov
add
push
lds
mov
sub
push
loope
or
xchg
shr
in
scas
mov
ret
push
cld
xor
jle
xor
repz
fsts
cwtl
bnd
pushf
and
sub
cltd
jae
xchg
cmp
xor
iret
push
add
adc
mov
jae
addr16
cld
ret
int
ss
insl
adc
enter
sub
xchg
test
rclb
repz
addr16
popa
jge
arpl
pop
push
ds
xlat
mov
add
addr16
cmp
movsl
je
adc
loope
loopne
pushl
imul
cmpsl
inc
xchg
movsl
adc
in
into
pop
cltd
std
xchg
pop
leave
xlat
loopne
fimull
xchg
adc
jl
adc
push
mov
fisttps
jge
inc
dec
in
xlat
stc
hlt
subl
lcall
ret
mov
test
jno
jmp
adc
mov
and
dec
mov
hlt
sub
xorl
fs
add
xor
mov
icebp
xchg
int
loop
xor
scas
push
mov
addr16
xor
cltd
jecxz
out
pop
bound
add
sub
jge
xchg
shr
push
mov
aaa
mov
mov
into
adc
mov
jbe
gs
cwtl
xchg
test
mov
andl
push
gs
aaa
mov
pop
dec
xor
jnp
lea
xor
ja
enter
lcall
mov
ljmp
icebp
das
inc
sub
xchg
mov
jl
and
enter
aas
es
push
push
xor
add
fcomp
cmp
iret
sub
mov
sti
and
inc
adc
mov
or
addr16
movsl
cmp
sarl
sahf
jb
mov
imul
sub
sub
inc
dec
xchg
or
and
rorl
leave
add
or
pop
scas
adc
mov
leave
push
cmp
sarl
stos
andl
in
or
xchg
mov
iret
roll
and
push
loope
lea
mov
andl
aas
cmp
jmp
inc
daa
or
mov
daa
sarl
mov
jl
adc
pop
mov
dec
out
loop
pop
and
xor
scas
lea
sub
adc
cmp
and
dec
or
insl
rcl
repz
cltd
les
or
or
xor
dec
mov
jmp
ffreep
adc
sti
sub
loopne
jecxz
cmp
and
cs
mov
jbe
cs
mov
divl
jecxz
mov
lock
int3
pop
push
lret
movsb
aam
aam
xchg
cmp
xchg
icebp
or
fimull
pop
xchg
mov
xor
mov
out
mov
scas
jo
icebp
aaa
xchg
lods
pop
cmp
les
dec
mov
mov
shl
mov
jb
inc
mov
cltd
dec
repnz
and
xchg
insl
sbb
mov
sub
aam
pop
xor
pop
popf
es
cmpsb
or
xchg
cwtl
xor
or
out
aas
fnsave
idivb
out
dec
addr16
lahf
dec
bound
pop
lret
out
mov
rcrb
lds
pop
dec
or
mov
aas
movsl
call
dec
addb
shll
or
mov
cmp
inc
push
pusha
sub
jecxz
mov
cs
jge
push
aam
push
ja
mov
ja
clc
pushf
fadd
out
int3
inc
pop
repnz
fmuls
stos
das
in
lods
insb
cmp
pop
clc
notl
inc
repz
loopne
sub
nop
cmp
dec
mov
inc
cwtl
inc
cmp
movl
popf
xchg
or
in
push
enter
adc
xchg
iret
daa
rolb
push
mov
xchg
or
fbld
jle
xor
jl
dec
and
cmp
push
or
movsl
int
lret
stos
not
lods
repz
adc
jg
xor
xchg
scas
cli
nop
dec
push
add
cmp
ljmp
xchg
sub
mov
adcb
jne
push
das
mov
xchg
sbb
cmp
fldt
push
xchg
loope
or
jbe
pop
dec
sbb
aad
out
rorb
lock
fs
addl
idiv
outsl
and
dec
or
getsec
imul
bound
bound
mov
mov
jp
inc
stos
lods
out
sub
xchg
jbe
jne
add
jno
mov
femms
pop
cmpsb
in
arpl
aas
sti
rcl
lcall
jo
scas
adc
pop
cld
adc
dec
iret
cltd
xchg
mov
cmpsl
in
into
gs
or
lods
push
repz
fisttpll
push
sbb
insb
sbb
mov
les
mov
sub
pop
jae
dec
mov
mov
jle
repnz
jg
lock
xor
stos
sti
out
out
xchg
inc
adc
imul
or
sbb
cmpsl
scas
add
test
xchg
mov
add
es
and
inc
xlat
inc
lahf
clc
loopne
icebp
fisttpll
adcb
and
cwtl
arpl
cmp
popf
mov
and
int3
leave
das
add
stos
push
jecxz
imull
jge
mov
mov
cmpl
or
jle
test
adc
xor
sbb
mov
ss
pop
or
into
test
jno
dec
call
adcb
cmpsl
das
xchg
push
inc
xchg
or
sub
nop
dec
dec
mov
add
push
adc
push
xlat
add
jo
test
sbb
out
es
ss
inc
adc
xor
dec
test
adc
pop
out
sub
enter
hlt
fsincos
repz
les
add
hlt
push
cmp
cmp
push
mov
mov
mov
jmp
repnz
mov
mov
push
push
xor
in
les
fsubrs
xchg
jmp
jae
xchg
cmp
scas
aam
je
jne
fwait
ljmp
scas
cmp
mov
shll
popa
mov
xchg
inc
jge
ret
enter
sahf
mov
les
fs
int3
adc
stos
std
jno
jmp
push
mov
leave
test
icebp
scas
pushf
loopne
xchg
in
jae
pop
xchg
dec
shll
xor
pop
stos
clc
rcrl
cmp
or
in
stos
scas
push
xor
mov
push
addr16
xchg
test
mov
mov
cmp
jge
and
mov
sub
push
fs
divb
pop
or
cwtl
cmpsb
fnsave
jb
sub
std
insl
push
lock
adc
out
mov
test
rorl
outsb
shll
and
les
pop
jne
cmpsb
rolb
xchg
xorb
add
or
mov
pushf
mov
mov
add
lods
imul
xor
das
inc
xorl
out
mov
or
fcmovnb
jmp
popf
mov
sbb
hlt
push
push
jne
outsb
fsts
bndldx
subl
test
testl
ret
inc
data16
icebp
sub
pop
pop
jae
xor
test
inc
mov
stc
sbb
mov
ret
xchg
pop
sub
pop
enter
xor
rcrl
movsb
test
mov
test
inc
mov
pop
fsubrl
mov
jne
jl
je
std
out
adc
inc
sbb
or
xchg
mov
pushf
adc
jle
int
push
adc
and
inc
push
insl
adc
xor
cmp
mov
inc
cmp
lock
mov
aaa
pop
insl
inc
in
outsl
fs
cmp
cmc
stos
mov
ret
ja
inc
scas
push
fistl
mov
push
cmp
cmpsl
scas
pop
pop
adc
xor
xchg
fldl
lret
daa
dec
insb
mov
stc
popf
repz
push
pop
dec
sub
test
add
iret
fistl
add
dec
into
sbb
push
div
nop
mov
leave
mov
cmp
out
or
mulb
pop
mov
and
ds
imul
movl
cld
sarb
or
jo
mov
test
cltd
inc
inc
push
jne
popa
inc
loopne
dec
popa
inc
sti
fldt
das
outsl
xor
sbb
xor
push
popa
inc
popa
lret
jae
out
inc
adc
cs
dec
lcall
push
jmp
add
imul
or
add
xlat
push
int3
sub
adc
and
and
rclb
popf
loop
mov
jbe
jno
int
add
push
mov
insl
insb
or
xchg
add
mov
mov
cwtl
or
xchg
xlat
repnz
inc
or
std
int
adc
mov
lret
xor
orl
adc
pop
fistl
xlat
pop
mov
sub
loop
cmpsb
mov
xor
es
inc
repnz
xor
rcr
dec
scas
push
scas
sahf
mov
mov
loope
jns
gs
repnz
xchg
adc
rcl
lahf
repz
fisttpl
xor
imull
sbb
cld
inc
mov
leave
adc
mov
out
test
fistl
loope
push
lea
loop
push
std
cmp
inc
cli
xlat
sarl
add
dec
out
rcr
ret
sar
push
js
test
sar
sub
orb
fs
cmpsl
mov
fstpl
xor
mov
fidivs
lret
mov
cld
fimuls
xchg
sahf
ret
stos
aaa
clc
add
ror
jns
mov
pop
in
cmpsl
add
xchg
mov
pop
mov
lret
sub
out
loope
mov
pop
rolb
add
sub
data16
mov
pop
xchg
mov
aas
or
or
jg
add
pop
jp
or
shr
pop
sbb
cltd
cmp
adc
lret
push
mov
mov
pushl
aaa
int3
stos
data16
ret
outsb
outsl
jge
mov
fldt
push
mov
aad
call
int
es
je
data16
lock
ret
ds
sub
sti
add
jbe
fwait
push
and
push
sub
pop
mov
inc
mov
ds
jg
jae
xchg
std
add
cmp
pop
cs
lcall
lock
cltd
std
pop
or
bound
shl
test
stos
pop
mov
in
int3
sbb
sarl
xor
xor
jge
cmpsl
mov
adc
xor
lret
aas
sub
and
idiv
mov
adc
pop
and
unpckhps
int3
sub
inc
sbb
lods
xchg
push
arpl
fwait
inc
inc
test
adc
outsl
fildll
into
mov
add
sti
shll
imul
fsubl
cmp
fiaddl
mov
dec
lds
cmp
in
mov
idivb
push
and
adc
or
mov
pop
jo
lods
inc
xchg
in
imul
rcll
inc
std
enter
test
mov
popf
pushf
dec
les
jb
fistpll
int
imul
push
test
or
jo
mov
test
popa
mov
popa
movsb
sbb
test
xchg
lods
xchg
mov
xor
sbb
xor
push
popa
inc
popa
lret
jae
out
inc
adc
cs
dec
lcall
push
dec
mov
push
xchg
jecxz
rcr
jae
sbb
repz
jg
fs
fnsave
xchg
sub
mov
xchg
xchg
fisubrl
xchg
shrl
loop
mov
sub
push
inc
jmp
test
aaa
cmp
mov
into
xchg
orb
or
add
xchg
fnstenv
mov
repnz
sti
rcrl
dec
mov
push
cmp
test
testb
mov
jb
ja
popf
or
cmp
ljmp
fidivl
inc
sub
inc
mov
int3
adc
cwtl
adc
lcall
pop
jp
xor
repz
jl
lcall
lahf
push
cmp
cmp
gs
inc
je
sti
inc
shlb
cmp
pop
clc
sub
pop
mov
test
bound
popf
jne
pop
or
or
mov
jl
cmp
icebp
jnp
jo
pop
jmp
insl
setnp
jno
jmp
pop
jmp
std
cmc
fmuls
inc
jmp
jmp
xchg
inc
jne
inc
or
pop
pushf
or
adc
hlt
ret
fwait
ljmp
lahf
adc
pop
sbb
clc
inc
and
out
pop
fnstenv
mov
gs
das
xor
shlb
and
mov
pop
movsb
xchg
cmc
lds
sbb
xchg
and
leave
pop
loop
mov
pop
hlt
bound
out
stc
push
loopne
outsl
cmp
add
lcall
mov
push
iret
xlat
jmp
cmp
mov
add
mov
fisubrs
cli
jg
int
lea
cmp
notb
nop
fwait
jb
pop
neg
bound
dec
push
mov
mov
xchg
jnp
push
aam
int
jne
aaa
mov
pop
or
pop
jo
andb
inc
sbb
lret
xor
mov
lods
clc
adc
sub
dec
xchg
sar
sub
pop
dec
push
mov
mov
inc
xchg
aaa
popa
daa
push
in
and
xchg
sub
aaa
mov
pop
or
add
push
adc
push
scas
sbb
mov
push
mov
and
int
or
mov
cmpsl
jo
jne
pop
mov
lds
das
pushl
clc
add
daa
and
lret
mov
pushf
rclb
xchg
cs
sub
mov
loope
movsl
xor
stc
iret
push
mov
test
jl
mov
mov
push
andb
daa
inc
nop
rcl
mov
out
out
xor
xor
push
mov
out
imul
and
sub
sbb
add
out
mov
cmpsl
xchg
hlt
jmp
jl
xor
sbb
int
push
decl
cmp
lods
inc
jl
sbb
or
xor
inc
pop
scas
mov
mov
adc
pop
sub
call
ret
xor
pop
mulb
addr16
les
test
jl
scas
pop
xchg
sbb
jp
test
push
ds
test
loopne
xchg
out
mov
loope
subb
roll
sbb
int
cmp
addb
xor
inc
adc
mov
pushf
inc
pop
scas
mov
loopne
dec
out
add
scas
arpl
addr16
jecxz
mov
retw
xor
adc
mov
addr16
test
jl
xor
pop
push
lret
jbe
cmpsl
test
push
ds
test
addl
pop
xchg
mov
xlat
push
cs
add
dec
inc
add
pushf
adc
aaa
or
mov
jmp
inc
or
aas
call
fwait
jb
inc
scas
add
lret
xchg
repnz
and
pop
dec
adc
iret
mov
sub
ret
bound
dec
dec
sbb
inc
sub
mov
int
fdivrl
idivb
mov
jecxz
push
or
sarl
add
cmpsl
mov
mov
and
dec
push
add
js
imul
sbb
adc
lods
dec
pop
cli
lods
mov
cltd
push
add
mov
lret
call
imul
jns
in
stos
mov
ljmp
loopne
dec
movsb
sub
add
scas
icebp
push
push
xchg
fmuls
rsqrtps
add
pop
adc
popa
test
jne
je
in
movd
lds
pop
cmp
test
loope
sbb
mov
cmp
ret
fwait
mov
mov
cmp
and
fldl
push
push
cmp
das
mov
inc
push
cmpsb
add
sub
lret
jge
lahf
or
sbb
stc
sbb
jnp
popf
insl
or
pop
push
call
pop
scas
movl
pop
test
popf
add
loop
iret
int
add
aaa
mov
adc
sbb
movsb
jecxz
les
xchg
cmp
mov
add
add
rorl
outsb
rcl
test
fisttps
popf
stc
xchg
inc
in
jb
push
cli
or
push
outsl
ds
aad
ja
mov
dec
dec
std
jmp
sub
mov
push
in
xchg
dec
inc
stos
or
push
fistl
es
add
or
jl
dec
stos
out
mov
loope
mov
inc
pop
adc
lds
mov
lret
xor
xchg
in
dec
fdivs
fcompl
idiv
jae
jmp
lods
lds
cmp
mov
pop
add
jb
pop
and
dec
sbb
test
aas
loop
jbe
add
mov
fcoml
jge
push
aam
push
ja
xorl
aad
pop
fstpt
leave
mov
lret
fcomp
fcompl
cld
pusha
sbb
and
je
pusha
out
push
imul
sti
and
push
sub
hlt
mov
imul
lds
cmpsb
mov
movsl
cli
outsl
cmp
mov
or
data16
aaa
pushf
das
loopne
bswap
movsl
jb
pop
mov
lods
enter
les
in
pop
mov
sahf
sahf
push
decb
mov
mov
ret
nop
add
mov
or
in
pop
pop
mov
dec
xchg
dec
push
out
daa
je
mov
cmp
xchg
mov
add
sub
mov
stc
stos
add
out
pop
mov
mov
lock
mov
or
aam
int3
cli
fdivs
call
stos
es
sub
in
je
lcall
imul
daa
popa
mov
jge
jbe
jmp
pop
cs
jne
push
pop
fadd
andl
iret
movsl
jb
pop
mov
mov
jl
clc
insb
sub
add
xchg
fbld
fcoms
cmp
xchg
subb
mov
add
mov
fwait
test
pop
sub
mov
fs
lahf
xchg
roll
and
and
lock
mov
shl
pop
xchg
xchg
cmc
pop
adc
das
das
push
mov
xchg
pop
test
shll
jge
cmp
mov
mov
sbb
cmpsl
fst
mov
sbb
in
call
or
mov
jl
out
test
jns
lcall
fidivrs
xchg
ljmp
pop
mov
sbb
pusha
xor
int
ss
inc
sar
mov
sbb
negb
push
ja
jl
fs
daa
shrl
cwtl
push
cmc
fistpll
mov
xor
and
mov
fstpl
addr16
out
xchg
mov
imul
pop
rcll
adc
push
arpl
jbe
je
test
mov
pop
inc
pop
inc
inc
test
sbb
lods
jnp
idivl
and
inc
incl
jb
insb
push
icebp
xchg
mov
ss
rcrl
add
push
cmpsb
shrb
sbb
cmp
imul
mov
addr16
xchg
pop
lret
jp
pop
shll
and
pop
stos
xchg
jo
in
mov
mov
adc
dec
loope
push
inc
pop
push
sahf
mov
shrl
mov
mov
inc
dec
xor
sti
fdivp
subl
dec
mov
into
push
lods
sarb
data16
lret
xchg
push
mov
cmp
data16
sarb
add
fstpl
and
xchg
mov
add
mov
inc
pop
orb
arpl
mov
cld
pop
jmp
adc
adc
jne
arpl
or
scas
sti
jge
add
mov
xchg
sbb
mov
lret
jecxz
jmp
mov
fadds
js
cmp
inc
sahf
mov
flds
push
mov
arpl
or
mov
cwtl
push
movsb
mov
xchg
mov
xchg
popa
lret
add
cmp
repz
sub
or
adc
adc
pop
lcall
cmpsb
sub
jmp
nop
xor
or
mov
jl
out
test
jns
lcall
fidivrs
lds
cmp
push
mov
bound
flds
cli
cmc
and
jge
imul
and
mov
mov
and
cmpsb
push
fwait
test
outsl
jge
mov
mov
ss
dec
mov
mov
adc
sti
std
cmp
sbb
repnz
xchg
cmp
xor
cltd
inc
push
add
inc
xchg
out
fsubr
lds
lahf
push
adc
push
sbb
cmp
push
xor
xor
into
push
movsb
pop
sbb
cmp
js
dec
push
mov
cmp
sub
mov
data16
scas
cli
negl
data16
mov
mov
push
sahf
lds
sub
cmp
jns
insb
dec
mov
mov
mov
dec
frstor
xor
lea
sub
inc
dec
jnp
inc
shl
sbb
cs
push
dec
dec
aam
arpl
popf
add
mov
xchg
mov
fdivl
jp
addr16
mov
sub
adc
ficomps
cmpb
es
popf
insb
or
inc
sbb
xor
xchg
mov
lock
adc
repz
fwait
shlb
scas
xor
jmp
jl
ret
xchg
sbb
sbb
movsl
adc
push
inc
jmp
xor
inc
push
fpatan
aas
inc
xor
inc
xchg
in
call
and
cmp
inc
sub
cmc
push
in
notb
mov
nop
cld
add
std
stc
test
in
sbb
dec
add
cmpsb
jmp
nop
xor
or
mov
jl
out
test
jns
lcall
fidivrs
sub
sarl
mov
add
int3
xchg
add
adc
cs
hlt
rcll
stos
mov
enter
pop
das
or
ljmp
nop
lcall
rcrl
and
into
inc
repnz
adc
out
inc
inc
cltd
sti
add
inc
gs
fldl
add
arpl
or
sbb
and
mov
lea
fiadds
lock
or
mov
and
aaa
jb
pusha
aad
pop
lcall
ljmp
in
sbb
pop
call
xor
lods
adc
push
pop
pop
fcmovbe
xor
cmpsl
lock
out
shll
test
lcall
ret
loop
xchg
cmp
jmp
jnp
movsb
and
and
je
aas
or
pop
add
mov
mov
fstpt
stos
aaa
insl
orb
test
cmp
dec
add
pop
jmp
inc
jbe
and
jge
and
push
inc
movsl
icebp
ljmp
subb
dec
or
dec
mov
pop
mov
jae
mov
pop
mov
lods
push
fdivrl
movsw
cmc
sbbl
cld
push
or
out
mov
lea
popf
jl
xor
push
popf
and
mov
mov
pop
hlt
shrb
jl
pop
hlt
cltd
cmp
xchg
pop
icebp
xchg
pop
mov
addr16
outsl
clc
aas
andl
repnz
out
push
jne
pop
dec
sbbb
jne
mov
pop
hlt
shrb
add
cmpsb
pop
sub
inc
mov
insb
push
daa
int3
enter
ljmp
pop
lcall
dec
ret
xchg
ret
rclb
push
out
aam
test
jo
cs
xchg
push
fsubr
jle
adc
les
icebp
jmp
or
cmp
cli
loopew
stc
mov
loope
mov
mov
test
in
aas
test
mov
sbb
mov
lds
int3
imul
out
idivb
or
xor
xor
cmp
mov
cmpl
sub
leave
xor
adc
inc
sub
push
adc
shrl
pop
mov
inc
loope
mov
or
aad
jg
adc
add
ja
dec
pop
and
sub
adc
lea
fistpll
scas
sbb
divps
shll
sti
jne
mov
xor
mov
adc
sub
imul
fistl
das
jnp
popa
pop
mov
leave
in
out
jnp
dec
or
cmp
inc
sbb
repz
insb
xchg
dec
push
push
mov
mov
sub
mov
add
ja
adc
ficompl
add
dec
je
insb
adcb
repz
xor
cmp
sbb
jnp
repnz
cmp
mov
cwtl
sbb
cmpsl
mov
pop
adc
popa
sub
out
push
jmp
push
out
enter
adc
fmuls
lods
ja
mov
dec
stos
gs
ret
or
std
jne
push
out
mov
test
inc
push
repnz
mov
sbb
pop
or
ja
insl
hlt
mov
mov
in
int3
sbb
sarl
xor
xor
jge
cmpsl
mov
sub
loope
jae
pop
mov
sbb
mov
or
add
outsl
stos
mov
mov
push
adc
dec
ret
xchg
in
stc
xchg
es
push
je
cmpsl
inc
shll
inc
xchg
inc
and
fsts
movsb
inc
aaa
stos
mov
cmpsl
mov
pop
push
ljmp
fwait
jns
sahf
pop
inc
fs
xchg
or
scas
pushf
stos
ljmp
outsb
push
jno
pop
adcl
imul
jg
out
inc
adc
repz
arpl
mov
or
sub
pop
mov
call
jnp
sub
test
mov
sbb
pop
bound
addr16
dec
movsl
jmp
cld
outsl
enter
xchg
lret
xchg
xlat
rcr
es
sub
stos
shlb
in
lds
dec
mov
addr16
lcall
les
inc
push
andb
sbb
scas
jp
int
ror
dec
popa
inc
push
repnz
or
fwait
rcr
xchg
ficoml
int3
push
sbb
mov
repz
icebp
or
bound
push
cmp
loopne
sub
roll
cmc
xor
push
out
cmp
out
loop
cmp
push
mov
addb
rcrb
cwtl
xor
mov
inc
loope
cmpsb
push
lahf
repz
fisttpl
or
sbb
rorb
in
dec
or
das
xchg
loop
xor
fwait
adc
add
es
cld
push
mov
lock
fisubs
mov
lock
in
stos
subl
xor
mov
dec
lcall
inc
inc
test
out
mov
fstl
cmpsb
rolb
andl
loope
or
cmc
out
push
jp
inc
int
lds
shlb
cwtl
icebp
popf
inc
aam
inc
adc
xor
sbb
xor
sahf
fxtract
push
enter
or
inc
jno
cmp
mov
test
lret
ss
inc
sbb
stc
push
filds
lock
gs
aas
dec
outsb
pop
es
popf
sub
mov
fiaddl
mov
cmp
mov
mov
inc
mov
inc
sti
fidivs
movsl
inc
mov
fcoml
cmpsb
and
ja
mov
roll
mov
or
loopne
pop
pop
sub
xchg
jnp
jne
sub
movl
cmp
fwait
cs
shlb
les
int
ljmp
inc
mov
xor
adcb
or
in
pop
xchg
sbb
aad
out
sub
jnp
cli
jns
mov
stc
and
dec
ds
mov
sbb
mov
loope
cmpsl
and
arpl
adc
mov
push
mov
dec
mov
adc
ljmp
xlat
or
and
loope
xchg
push
cmc
and
xchg
inc
lods
jo
shl
ror
mov
mov
mov
sbb
into
jmp
dec
inc
je
jge
mov
lret
cmp
cmp
sbb
push
cmp
push
jne
xchg
cmp
cmpsl
jmp
fxtract
rcll
test
jnp
call
or
shrb
nop
repz
repnz
jb
rcr
pop
stc
repnz
addr16
push
adc
pop
inc
sub
fwait
lods
loope
adc
jnp
pop
dec
imul
pushf
add
fnstenv
int3
xchg
popa
or
rcl
pop
fmul
lea
adc
add
cmp
add
dec
pushf
xor
fcomip
leave
sbb
jbe
inc
enter
jl
movsl
fisttpll
bound
cld
add
lods
cmp
in
ficomps
adc
mov
mov
jae
fcoms
das
mov
jecxz
cmp
inc
mov
push
mov
dec
mov
lods
lock
in
sbb
and
and
adc
arpl
pop
xor
loope
push
inc
xlat
es
push
xor
or
lcall
push
dec
in
or
jo
jns
into
cmpsb
mov
mov
mov
lds
jno
jbe
das
lods
cwtl
and
push
and
pop
cmpb
out
push
shll
outsl
fcoml
dec
fildl
rcrl
call
aas
fs
xchg
enter
mov
nop
adc
and
inc
pop
sarb
fisubl
mov
pop
shrb
xor
mov
fbstp
in
ljmp
shlb
lock
movsb
ds
fwait
inc
dec
pusha
sub
loopne
leavew
ja
cltd
mov
add
and
bound
sahf
xor
cmc
jecxz
loopne
mov
jnp
or
es
fbld
pop
lret
add
es
push
popa
and
pop
mov
mov
sbb
and
mov
notb
xchg
adc
shrb
outsl
addl
xchg
loop
mov
das
dec
pop
adc
int
int3
mov
and
pop
pop
lods
mov
dec
nop
jbe
inc
lods
mov
dec
test
or
and
pop
popa
mov
xorl
jne
push
lods
push
sub
cmp
test
fisttps
bound
push
inc
lods
hlt
in
pop
imul
dec
adc
cwtl
adc
mov
inc
push
divb
pop
sub
rcll
in
subb
in
pop
adc
iret
xor
inc
aam
arpl
adc
pop
in
dec
enter
mov
lret
pop
sbb
lahf
fstl
popf
mov
test
inc
stc
js
sahf
into
cltd
ja
sub
popf
or
nop
pop
and
or
gs
test
cmp
notb
cmpsl
jae
pop
sub
mov
adc
sarb
jne
fstps
adc
pop
data16
cmp
clc
lods
mov
cs
clc
pop
aam
fbld
mov
pop
popf
rcrl
inc
mov
ror
call
setne
sti
add
mov
lret
lea
gs
dec
mov
mov
imul
fimull
jb
and
je
fcoml
subl
adc
sbb
mov
adc
mov
call
lods
push
loope
push
mov
add
loop
jb
mov
dec
or
in
daa
pop
cmp
test
dec
inc
pop
ret
mov
push
out
icebp
add
fcom
lahf
mov
out
xchg
dec
dec
bound
jbe
sbb
jg
and
push
jb
mov
xchg
fucomi
clc
popf
inc
repnz
xchg
fwait
aas
xor
mov
cmpsl
inc
les
jg
imulb
fs
add
sub
fucomi
inc
fs
inc
jne
mov
cltd
push
sbb
in
mov
inc
jno
stc
push
xor
xchg
inc
in
inc
push
call
mov
lret
fstl
mov
mov
daa
test
push
mov
mov
shlb
insl
std
stos
xchg
cld
test
cli
cmpsb
push
mov
dec
mov
sub
lahf
sbb
lods
loop
sub
lret
int
pop
xor
mov
jle
jnp
test
cmp
sub
arpl
jne
pop
xor
mov
push
add
xchg
adc
mov
mov
lret
mov
test
outsb
test
xor
sahf
jne
out
enter
not
pop
repz
repz
xor
lahf
sti
int3
cmp
mov
scas
pop
pop
pop
test
mov
and
ret
sarl
pusha
mov
imul
or
jle
mov
idivb
adc
pushf
push
shll
jmp
xor
mov
int3
pop
fwait
test
xor
mov
sbb
xchg
inc
sbb
dec
stos
testl
add
jl
mov
test
push
pop
mov
cmpsb
imul
loopne
data16
imul
hlt
push
cmp
hlt
sbb
cwtl
ss
jae
inc
or
int3
in
fstpt
es
inc
xchg
into
imul
mov
xor
dec
sub
dec
jb
test
cli
pop
jae
arpl
ds
push
shrw
icebp
jb
scas
jbe
imul
xchg
fistpll
fistl
in
sbb
repz
hlt
mov
filds
adc
cmpsb
cmp
int3
hlt
xchg
pop
jle
int3
stc
xor
mov
psadbw
movsb
sbb
sahf
test
jge
push
cmp
pop
jno
jbe
mov
lods
or
mov
fdivrl
cmpsl
mov
mov
mov
loop
scas
push
lcall
xor
mov
movsb
or
fs
inc
fisubrl
and
inc
sub
dec
pop
adc
jle
xchg
and
adcl
lret
dec
lods
pop
mov
or
popa
sbb
dec
loop
xor
out
xchg
cmp
push
jle
cmpsl
imul
inc
test
jmp
inc
sbb
inc
adc
js
fldt
loop
push
repz
and
dec
xor
sbb
xchg
fidivrl
jno
fucomi
cmpsl
xor
mov
outsb
cwtl
and
movsb
jnp
fiaddl
data16
fbld
and
push
movsl
xchg
lds
pushf
loop
scas
push
lcall
sbbl
shrb
sbb
adc
cld
std
stc
nop
mov
fwait
aad
add
and
and
sti
mov
pop
cmp
insb
into
jb
mov
adc
and
aad
adc
es
lods
ss
stos
into
adc
sbb
sbb
push
in
test
sub
xchg
daa
add
outsb
and
inc
dec
jns
cld
xor
push
mov
jo
in
mov
add
adc
mov
adc
insl
cmp
ja
add
xor
icebp
adc
xor
jg
and
mov
dec
jo
dec
pop
sbb
rorl
push
int3
test
lret
push
push
and
outsl
push
dec
mov
mov
mov
aas
int
nop
sub
std
std
xor
cmc
xchg
jno
minps
test
lock
into
mov
pop
jl
pop
sub
out
sarl
shrl
mov
cmp
rol
jmp
pop
push
sbb
jnp
add
das
cltd
mov
mov
sub
add
idivl
xchg
out
jp
pop
lock
nop
pop
inc
cld
mov
jae
enter
in
xor
enter
mov
out
and
call
xchg
xor
cmpsb
mov
aad
add
push
mov
fisubrl
fcoms
xor
or
cs
lods
lahf
aam
pop
jo,pn
stos
faddp
sbb
shlb
ss
rclb
pop
jae
adc
inc
cmp
call
repz
mov
xlat
iret
sbb
lods
fsincos
xor
xchg
out
or
arpl
das
inc
sbb
inc
xor
lcall
pop
in
mov
or
aaa
testl
fs
mov
enter
daa
loopne
rcl
sbb
ret
pushf
int3
mov
xlat
or
jg
out
adc
lret
out
or
xor
adc
sahf
aad
outsb
push
pop
int3
xchg
pop
or
pop
mov
repnz
sub
xchg
jnp
incl
sub
inc
pop
xchg
loope
xorl
cld
sbb
scas
or
add
xor
push
xor
sub
es
je
add
inc
pushaw
jmp
mov
sub
and
icebp
inc
loop
insb
sub
fadd
mul
gs
push
sbb
fs
outsb
add
lock
stc
mov
cmpsl
cmp
mov
mov
dec
out
sbbl
jg
aam
sub
and
stos
mov
outsb
pop
orb
xchg
mov
push
aas
xor
mov
gs
outsb
loope
mov
push
push
pop
lods
xchg
pop
pop
in
mov
cmpsl
jbe
ds
push
sub
int
gs
mov
loopne
popa
inc
mov
sbb
popf
fdivr
std
mov
loopne
test
dec
xchg
mov
sub
push
xor
push
sub
mov
mov
lods
cwtl
cmp
jno
femms
adcb
adc
cmp
pushf
in
popa
aaa
bound
aas
push
mov
jl
lcall
jg
or
xchg
aaa
jo
xchg
js
stos
jmp
fdivrl
out
adc
jae
jg
movsb
icebp
adc
sub
lahf
mov
test
fs
out
inc
repnz
test
mov
pop
jge
cwtl
emms
mov
cltd
mov
and
or
loopne
inc
jo
loope
adc
imulb
loope
pop
xchg
stos
cli
dec
lock
sub
cmp
jno
inc
mov
fdivr
pop
lret
mov
mov
pushf
inc
pushf
pop
scas
pop
outsb
mov
mov
mov
ljmp
rolb
mov
into
jl
lock
cs
adc
mov
rolb
jecxz
js
loope
pushf
test
adc
jnp
int
js
into
rcll
daa
notb
mov
dec
sbb
nop
addl
das
jl
pop
int
mov
add
outsb
lock
int3
out
xor
mov
pop
lahf
lods
movsl
cmp
push
or
adc
mov
or
lea
xor
sub
stos
and
jle
nop
out
aam
cmp
scas
ret
out
stos
sbb
push
out
fucomip
repz
add
or
lret
jo
pop
movsb
std
mov
jb
pop
lret
dec
dec
sbb
aas
cltd
jb
out
or
mov
push
push
mov
xor
jno
cmp
loope
xchg
and
fnstcw
xor
push
and
scas
in
push
rclb
jbe
std
aad
ja
cmp
and
data16
test
stos
pop
sbb
lcall
iret
movsb
xchg
out
xchg
lcall
insb
ret
test
add
clc
push
int3
out
push
cwtl
loopne
dec
in
aaa
cli
gs
mov
and
and
sub
add
les
mov
repnz
ficomps
push
rcr
imul
adcb
mov
jne
popfw
push
shlb
mov
pop
add
xor
fwait
pop
std
pop
pop
fwait
dec
lret
mov
dec
fbld
stos
push
es
insl
into
loop
lods
or
mov
adc
gs
jo
xor
xor
xchg
pop
movsb
sub
inc
out
popa
das
mov
inc
ds
sbb
cmp
and
scas
pop
ss
in
hlt
aam
aam
outsl
sbb
arpl
or
les
repz
add
stos
fmuls
and
xchg
dec
push
and
pop
push
or
popl
mov
subb
cmpsl
sar
ss
out
out
push
or
add
mov
sar
mov
test
sbb
sbb
adc
test
fisttpll
mov
jnp
sub
arpl
pop
fiadds
add
int
into
or
ss
xorb
aad
push
pop
out
test
mov
push
ljmp
sbb
sahf
xchg
sub
notb
outsl
mov
data16
lods
mov
ss
scas
sahf
jecxz
sahf
xor
pop
fwait
push
or
sbb
adc
adc
pop
sbb
mov
cltd
xor
xorl
das
push
repz
jp
ret
adc
jecxz
lea
add
cmpsb
scas
xlat
stc
cs
mov
test
ret
js
stos
std
push
ret
add
popa
cmp
push
pop
sbb
inc
mov
mov
ljmp
jle
cs
fstpt
pmaxub
mov
jbe
in
push
outsb
notb
mov
fwait
scas
xor
add
mov
dec
cmpsb
jp
leave
add
ret
xchg
mov
adc
aad
arpl
add
outsl
notl
dec
jge
sub
mov
sbb
inc
out
and
dec
push
pop
and
inc
inc
pushf
add
xor
cmp
ret
frstor
sahf
mov
insl
dec
pop
adc
push
mov
mov
pop
fnstsw
mov
inc
ret
jns
xor
push
xor
sti
mov
jg
dec
xor
xchg
jecxz
fcoms
pop
pop
jmp
add
inc
jo
or
iret
cmp
sar
lods
mov
lret
add
int3
xor
orb
mov
test
test
mov
sub
mov
gs
cld
out
dec
jecxz
mov
imul
shr
lahf
aaa
mov
and
add
jp
add
jno
mov
add
mov
push
dec
push
add
pop
mov
xchg
test
cwtl
mov
xor
fimull
dec
outsb
dec
mov
mov
inc
cmp
sub
sbb
rcrl
lahf
paddsb
outsb
push
sbb
fdivrl
add
push
ss
leave
mov
jg
pop
nop
adc
scas
mov
mov
in
ret
ja
push
add
lods
pop
dec
jmp
sub
out
cli
jp
or
lods
shrl
or
lret
js
push
lret
andl
cmpsb
or
js
jge
sub
or
jmp
fimull
shll
mov
dec
dec
lock
test
pop
jg
push
stos
cld
incb
jl
dec
mov
and
xor
xor
repnz
lahf
out
mov
js
in
xchg
test
xchg
and
ja
sbb
int3
sar
repz
push
adc
xchg
sbb
repnz
adc
pop
gs
and
xchg
js
xchg
in
mov
push
jg
cmpsl
sbb
mov
popf
in
andb
loopne
lods
xor
inc
mov
aaa
bnd
dec
out
xor
add
lods
mov
mov
sub
movsl
push
icebp
adc
lods
push
leave
ss
fwait
pop
ss
jns
mov
imul
into
insl
aam
sbb
jo
inc
mov
call
lods
cmp
mov
fldl
push
popa
cmp
push
repz
push
fadds
and
push
and
jle
mov
inc
sbb
push
lret
lcall
arpl
out
jmp
aam
nop
testl
ljmp
xor
in
mov
imul
mov
jl
mov
ret
mov
fdivrs
je
adc
jbe
xor
fidivrs
lret
jnp
jnp
cmp
pop
stos
aas
aam
jl
pop
cmp
pop
js
sub
xor
into
pop
xor
aam
inc
popa
push
or
xchg
aas
jne
ret
pop
pop
mov
lahf
bound
ffreep
in
fidivrs
insb
push
fisubs
jge
sbb
xor
push
and
test
dec
xor
add
fwait
mov
out
xor
mov
shl
push
mov
xchg
stos
xor
fstpt
outsl
xor
icebp
in
mov
insl
lds
jle
mov
cld
push
iret
aad
lock
icebp
loope
faddl
rol
pop
imul
mov
divb
cmpsl
je
dec
addr16
fwait
or
sarl
mov
xchg
std
add
pop
dec
movsl
mov
or
xor
es
jge
in
sbb
xor
push
out
add
arpl
insl
cmc
jb
in
jbe
inc
lock
adc
enter
ret
adc
call
das
sub
js
shl
cmc
pop
les
pop
xor
or
iret
xchg
daa
fldt
pop
cmp
sbb
and
mov
mov
push
jecxz
mov
inc
daa
push
and
cmp
cmp
push
pop
sarb
cmp
push
enter
xchg
lcall
mov
inc
xor
arpl
pop
dec
push
ret
hlt
shrb
mov
fsts
xchg
pop
push
mov
and
sbbb
shr
sub
and
jmp
out
pop
aas
aaa
in
cmp
insb
das
sahf
cmp
push
hlt
les
dec
cmp
ret
mov
andl
ror
stos
dec
push
loope
aaa
xor
xchg
ficomps
and
inc
insl
loop
sbb
xchg
push
sub
ret
rcr
and
fldt
jmp
lret
mov
sub
sti
cmpsb
in
cmp
int3
adc
xor
mov
cmp
test
mov
jmp
into
addr16
loopne
mov
xchg
lods
movsb
push
sub
hlt
xor
cmpsb
push
sbb
pop
pop
adc
psadbw
aad
imul
repz
pop
xchg
js
add
jle
daa
xchg
or
outsl
jne
lds
repz
cwtl
mov
popa
dec
es
mov
lock
xor
pop
cmpsl
test
call
test
adc
je
fiadds
sbbl
inc
fadds
or
rorl
aas
mov
mov
stos
cli
dec
pushf
push
cmp
sbb
es
adc
loop
out
test
push
xchg
jae
ret
and
notb
pusha
outsb
xchg
pop
ja
in
xchg
lods
inc
jno
xor
push
and
push
or
sbbb
je
outsl
divl
jmp
ljmp
in
arpl
xchg
jb
push
outsl
pop
cmp
add
int
adc
mov
pop
out
push
push
call
pop
push
add
xchg
xchg
test
sbb
inc
push
out
sub
stos
add
out
sahf
xchg
mov
mov
sub
mov
xchg
xchg
adc
inc
jp
jg
cli
in
data16
dec
pop
cmpsb
sub
in
sbb
sti
mov
pop
xchg
aad
jnp
imull
xchg
xchg
sahf
push
add
pop
outsl
cmp
int
iret
loopne
cld
add
mov
mov
cli
cmp
clc
fwait
std
stos
jp
and
mov
sar
pushf
jg
es
xchg
repz
cmc
push
sahf
jbe
neg
dec
es
jnp
dec
xor
cmp
xchg
mov
mov
pop
cmc
ret
fld
mov
push
adc
xor
andl
inc
aam
sub
das
push
adc
les
int3
pop
mov
mov
sbbb
or
inc
lahf
jae
jnp
push
insb
int
insb
pop
int
push
mov
sahf
stc
xchg
xchg
enter
add
popa
cwtl
lock
scas
jg
mov
jae
orb
xor
dec
movsl
jp
mov
and
movsl
or
subb
cld
inc
adc
mov
sahf
je
inc
adc
sub
xor
sbb
out
push
mov
pop
cli
jle
lcall
roll
popf
adc
cli
lods
xchg
fcmove
das
pop
mov
test
outsb
or
enter
mov
sbb
cld
sub
inc
aad
jl
jno
push
mov
int3
das
fs
gs
clc
cmc
mov
jg
mov
mov
add
mov
xchg
orl
sahf
mov
dec
scas
test
loopne
pop
jbe
dec
stos
fsts
out
pop
mov
cltd
add
cmp
rorb
loopne
xor
adcl
push
mov
push
mov
or
pop
xchg
cmpb
jno
push
push
pop
mov
dec
inc
or
cmp
push
cwtl
xchg
negb
xor
inc
out
sub
popa
popf
shrd
and
xchg
cmp
fcomps
mov
push
pop
imul
mov
jns
push
mov
stc
xor
ret
jne
mov
int3
sahf
out
imul
les
pop
xchg
jl
std
out
addr16
dec
and
nop
mov
push
addr16
and
xor
pop
xor
popa
daa
xor
push
pushf
push
pop
sub
subl
mov
and
push
aam
repnz
std
shll
pop
lods
test
lock
jne
sbb
enter
or
bound
pop
cmp
addr16
jb
xor
divb
test
mov
jle
or
push
fistps
pop
sbb
mov
mov
out
cwtl
xchg
add
ficomps
je
cmp
sti
add
mov
sub
add
sahf
jo
outsb
addl
lods
mov
and
push
cmc
mov
movsb
imul
fdivs
inc
cmp
in
into
adc
loope
gs
cmp
movl
mov
dec
popf
xchg
lods
mov
xchg
pushf
cmp
sbb
pop
out
std
in
in
dec
ret
sbb
dec
sbb
lock
into
pushf
pop
mov
adc
clc
jns
sti
lods
movsb
stc
loopne
bound
and
aas
stos
cmc
xor
mov
add
fsub
and
aam
xor
inc
divl
hlt
mov
jbe
sub
dec
or
mov
test
xchg
in
pop
jle
mov
movsl
repz
xchg
das
adc
push
sub
scas
mov
pusha
push
pusha
pop
pop
ds
dec
mov
insb
cwtl
pusha
push
jb
add
sarl
in
jg
roll
call
lock
loope
and
cld
jb
icebp
test
jge
das
mov
dec
loopne
dec
sub
inc
aad
jb
test
sbb
imul
mov
mov
push
in
js
lock
jg
adc
repz
sub
and
sbbl
es
adc
jne
jb
xlat
xor
sbb
jb
mov
fstpl
cmpsb
and
adc
nop
mov
aaa
pop
idiv
sub
int3
adc
pop
outsl
mov
ljmp
xchg
iret
jmp
push
ret
sbb
mov
or
sub
sbbb
mov
movsl
pop
inc
push
mov
mov
push
xor
pop
inc
decl
mov
fisttpl
shll
push
adc
arpl
xchg
mov
js
leave
ret
mov
into
dec
dec
imul
mov
xor
out
sti
or
or
fistps
jno
adc
jo
insl
push
loope
roll
insb
mov
adc
loope
inc
repnz
and
mov
js
mov
inc
dec
jno
repnz
aam
add
mov
dec
adc
push
hlt
loopne
mov
inc
jb
ss
inc
nop
into
dec
leave
push
adc
mov
arpl
andb
sub
pushf
jge
mov
pop
repz
dec
mov
adc
push
clc
mov
mov
lods
or
mov
mov
arpl
pop
adc
les
mov
add
push
and
push
shlb
or
push
inc
add
mov
nop
push
lret
fsubrs
lock
pusha
pop
mov
add
mov
daa
mov
and
cmpsb
in
push
pop
in
cmpsb
in
mov
pop
pop
mov
inc
mov
xchg
test
aas
cmp
mov
idivb
xchg
cwtl
dec
clc
insl
sub
shll
sub
pop
xchg
or
or
dec
dec
push
jmp
out
pusha
nop
lock
fsub
je
out
and
mull
mov
or
outsl
mov
outsb
arpl
je
insb
cmp
and
xchg
pushf
push
daa
push
adc
pop
add
sbb
sar
push
mov
pop
bound
mov
jno
add
fstps
push
mov
dec
inc
out
mov
mov
xchg
mov
inc
loope
xchg
fcmovne
jns
fisubrs
xchg
ljmp
cmpsb
into
xchg
adc
js
fldcw
pusha
je
pop
int
sbb
pop
mov
or
js
out
fs
fldt
add
into
jnp
xor
and
add
sbb
push
xlat
jp
ljmp
xor
repz
clc
adc
leave
mov
cltd
ret
jle
jbe
cld
sub
adc
push
jmp
test
or
pop
sub
dec
xchg
sbb
xchg
cmp
ret
dec
mov
dec
or
adc
js
lahf
iret
inc
xor
pusha
ds
or
cld
sbb
cli
lds
dec
scas
lret
mov
sub
sub
outsl
subb
lret
add
mov
mov
out
mov
lret
inc
mov
mov
sahf
dec
ficoml
pop
push
cmp
cmp
dec
scas
jp
repz
cmpl
aas
cwtl
decb
sbb
sahf
inc
lods
adc
cmp
addr16
inc
inc
dec
jmpw
scas
outsb
jle
xor
ret
data16
leave
ss
daa
fwait
and
insb
inc
cltd
jo
push
or
lahf
xchg
or
inc
dec
sub
inc
pop
cmpsb
call
adc
or
test
or
mov
loop
pop
cli
mov
loopne
in
call
add
dec
out
mov
adc
adc
pop
das
push
pop
cmp
and
sbb
sub
jb
mov
lods
mov
add
popa
inc
add
mov
xlat
and
jno
or
or
mov
ja
test
push
in
and
cmp
sbb
sti
ret
dec
or
jne
imul
inc
jne
xor
jmp
push
repnz
loop
jns
pcmpgtw
stos
mov
cltd
push
jnp
test
cld
inc
cli
dec
jnp
shlb
iret
idivl
outsb
push
rcrb
fucomi
sahf
das
and
mov
and
cmp
int3
xchg
adcl
push
pushf
jmp
mov
mov
or
mov
es
adc
xor
push
adc
lret
push
in
mov
sbb
mov
int3
ds
dec
in
jnp
aam
stos
out
pop
lret
in
sahf
in
fxch
and
mov
or
fiaddl
imul
adc
sbb
popa
outsb
xchg
sub
cmp
and
jecxz
mov
sub
iret
jp
cmp
aas
movsl
adc
mov
or
cltd
out
lcall
cmp
repnz
imul
add
or
push
mov
adc
imul
jo,pn
add
push
jmp
stos
cmpsl
dec
addb
fmul
or
sub
add
pop
lcall
lock
bound
jmp
leave
std
lea
adc
rol
das
test
aad
loopne
or
repnz
push
mov
push
cmc
lret
xchg
xor
inc
adc
xor
ret
pop
aas
xchg
insl
rcrl
es
popa
push
jl
adc
cmp
pusha
stos
aaa
mov
enter
das
sahf
mov
aaa
bound
imul
cmpb
push
ja
adc
call
mov
testb
loop
sbb
inc
arpl
jne
movsl
mov
xor
mov
mov
js
es
call
pushf
jmp
mov
mov
loope
mov
adc
and
push
mov
ds
xor
pop
stos
ljmp
xchg
dec
xchg
push
push
sti
scas
loope
sub
fadd
or
ljmp
inc
fiadds
leave
lods
fistps
lcall
jl
cmp
jbe
xchg
add
es
adc
roll
or
jbe
xor
test
cli
mov
vlddqu
inc
jle
cmpl
jg
sahf
pop
and
fmul
jo
sbb
int3
inc
push
iret
mov
int3
xchg
mov
sub
je
sbb
out
mov
mov
pop
xor
dec
pushf
cmp
dec
xchg
je
lods
adc
mov
push
imul
int
inc
adc
jnp
gs
jle
cs
sub
scas
fs
xor
xchg
cmp
jmp
pop
inc
in
test
or
mov
cmp
inc
data16
outsb
stos
fnstenv
scas
sub
sub
pop
cmc
add
jl
jg
hlt
shlb
out
or
cwtl
out
jb
stos
and
rclb
filds
mov
cmp
fwait
cmp
xchg
insb
push
scas
pop
mov
mov
test
add
mov
lds
movsl
adc
pusha
ret
pop
inc
push
xchg
addr16
cmp
icebp
cmp
inc
or
sbb
ljmp
inc
mov
popa
xor
mov
mov
loope
int3
out
dec
je
aas
push
insb
decl
pop
mov
arpl
adc
sahf
icebp
xchg
enter
jnp
jnp
clc
mov
jle
xor
cmp
cli
inc
pop
jge
out
mov
dec
sti
push
adcb
ljmp
lds
or
cmp
arpl
mov
mov
inc
adc
movsb
push
mov
stos
test
sub
imul
xchg
dec
jne
xor
jp
cmp
pop
xchg
insb
xchg
pop
ja
fstps
loop
cmp
ljmp
ss
dec
mov
cld
sub
out
xchg
add
jbe
mov
fcomps
cmp
push
adc
inc
pop
adc
stos
adc
and
add
int
and
cmp
shlb
repz
adcb
outsb
sub
lock
push
mov
push
aas
mov
mov
sbb
pop
mov
roll
repnz
cmp
xor
jg
nop
xor
fnsave
jg
inc
mov
bound
xor
dec
cltd
lret
xor
cmp
lods
popa
inc
icebp
addr16
mov
xor
inc
sarl
mov
push
mov
pop
jg
ljmp
or
inc
pop
mov
cmpsl
mov
and
lcall
testl
cmpsb
popa
inc
push
lahf
int3
or
cmpsl
repnz
inc
push
repz
scas
cmc
aas
jne
sub
fiaddl
fucomip
and
test
les
cmp
out
add
inc
jae
sbb
add
jne
pushf
add
pop
or
xchg
xor
and
insl
xor
mov
insb
lods
push
mov
gs
fstps
add
test
aad
cmpsl
insb
or
out
mov
pusha
jne
inc
inc
cmp
jnp
jg
cltd
and
rep
mov
enter
push
sub
mov
lock
stos
cmp
outsl
mov
push
ss
enter
fisubrl
iret
cld
js
add
cmpsb
inc
jecxz
outsl
dec
dec
arpl
aas
enter
adcl
mov
outsb
add
add
mov
inc
sbb
cmp
fwait
ja
push
inc
je
mov
push
loope
ficomps
in
aad
xor
sbb
and
mov
xchg
mov
jecxz
out
cmp
push
mov
add
jp
outsb
cmp
xchg
jle
or
xchg
shrb
push
inc
insl
test
int
test
xchg
jo
push
je
aaa
das
iret
pop
inc
shlb
cmpsb
sbbl
imul
aas
add
sbb
idivb
jl
lods
fidivl
adc
out
scas
jo
test
cltd
mov
aad
subb
shrl
cmpsb
jmp
inc
cs
aas
add
addr16
testb
idivb
aad
add
xor
bnd
movsl
xor
cmp
pusha
scas
fdivrl
mov
jp
call
mov
out
mov
aas
shll
in
test
je
push
jne
mov
test
data16
hlt
xchg
loopne
jnp
std
pop
stos
lods
lods
fdivrp
dec
pop
sub
int3
pop
cmp
jg
or
rorl
pop
enter
inc
gs
repnz
cmc
sbb
sub
or
sub
xor
nop
ja
ret
and
fdivr
out
pusha
loope
in
repz
pop
not
nop
cmp
pop
faddl
inc
pop
fisubrl
jnp
pop
mov
notl
std
pop
or
push
arpl
aam
xchg
pop
into
mov
jae
or
mov
loope
xchg
sub
jbe
add
popa
dec
out
nop
xor
or
jne
lahf
call
push
nop
jle
xchg
inc
out
mov
pop
inc
sub
mov
pop
cmc
sar
xor
inc
add
dec
dec
sbbb
call
cli
and
xchg
mov
push
mov
xchg
mov
inc
mov
pusha
lods
scas
push
inc
mov
pop
dec
outsb
or
sub
stos
divps
mul
aas
or
xlat
xor
das
out
mov
ss
filds
add
adc
adc
aas
mov
fadd
dec
push
fistl
mov
mov
jne
scas
sti
cli
or
xor
es
aad
pop
inc
daa
xchg
jl
mov
popa
dec
dec
je
add
mov
sub
pop
lods
popa
int
or
test
ds
dec
rcrl
lds
lea
cli
cmp
clc
xchg
int3
lds
sub
add
sti
imul
lods
inc
ficompl
lret
stos
or
in
ljmp
mov
repnz
jae
inc
loop
xor
int3
pop
or
xor
xlat
sarl
imul
sti
pop
pop
xchg
je
fsts
mov
jns
mov
into
sub
push
dec
cld
cmp
mov
in
pop
pop
ret
int3
add
in
push
pop
jno
inc
orl
data16
stos
dec
cmp
mov
or
dec
mov
and
gs
rcll
pusha
pop
test
mov
int3
mov
and
xor
jae
xor
popf
adc
aad
xchg
jecxz
sub
sub
jg
lahf
mov
push
jle
mov
stc
mov
stc
sbb
push
mov
fcoms
mov
repnz
mov
ja
mov
push
xchg
cli
lret
dec
test
jo
sarb
js
sub
and
leave
out
fistpl
pushf
or
fildll
hlt
ret
push
push
mov
cmc
mov
movsl
cmp
xchg
push
cmp
repnz
push
cmp
outsl
pop
adc
fucomi
jnp
mov
fcmovne
daa
fisttpll
ljmp
pop
or
add
mov
mov
mov
mov
aad
adc
in
sbb
js
cmp
or
pusha
out
push
sbb
aam
jle
or
out
mov
pop
adc
inc
mov
xchg
xchg
lret
dec
dec
imul
jle
push
outsb
and
dec
cmpsl
push
nop
mov
xchg
mov
dec
or
cmpsb
test
lcall
popa
mov
jns
push
sarb
dec
outsb
ror
out
push
dec
fwait
mov
pop
mov
jp
pushf
pop
es
pop
mov
xchg
xor
xor
or
xchg
in
out
sub
sub
push
add
loop
ret
xchg
stos
leave
ret
sub
sub
arpl
fistpl
cmp
or
sbb
dec
cmp
jl
int3
cmpb
mov
cmp
xor
cmpsl
and
sbb
addl
jecxz
or
icebp
in
mov
fdiv
fs
addb
jb
mov
cmp
scas
sbb
lock
mov
cmp
cmp
and
insb
or
hlt
mov
sub
pushf
xlat
call
pop
ret
lods
push
iret
negl
pusha
rorl
lret
cmovg
and
loop
divb
out
push
es
ds
or
lahf
in
xchg
pop
mov
jnp
shll
cmp
mov
jmp
mov
mov
hlt
movsl
adc
pop
cmp
into
xor
and
sbbb
ret
mov
test
mov
iret
xor
aad
xor
stos
xchg
popa
popf
adc
fimull
in
mov
push
or
outsb
jbe
in
clc
add
and
out
jnp
movsl
xchg
xchg
mov
inc
xchg
lcall
lret
stos
jp
inc
arpl
xchg
push
xchg
test
xchg
pushf
das
add
lret
jo
js
data16
into
scas
sbb
pop
subl
fwait
xchg
and
or
out
jns
jle
sbb
test
dec
adc
jle
push
jl
xchg
xor
aaa
pop
cs
cli
in
inc
lcall
rol
fxch
sub
sahf
les
fmuls
jae
rol
jnp
pop
test
in
jo
xor
or
jnp
iret
adc
add
sbb
cmp
testb
bound
jne
sub
jo
xor
sbb
push
push
out
jnp
lret
fldenv
mov
incl
xchg
stos
cwtl
lahf
jnp
lahf
dec
stos
xchg
mov
test
pop
mov
or
xor
and
xor
stos
pop
pop
js
mov
daa
cmp
sub
sahf
push
call
in
push
repnz
movsb
xchg
sbb
dec
lea
test
push
pop
or
fdivrs
jne
movb
pop
pop
adc
data16
add
test
or
outsb
mov
das
shl
and
jnp
pusha
cmpsl
pop
push
js
and
push
mov
dec
test
pop
daa
enter
sbb
mov
adcl
cmp
sbb
mov
jecxz
pusha
jns
or
adc
pop
sub
stos
fiadds
mov
repnz
cmpsb
incb
cmpsb
jns
icebp
cs
mov
sti
push
fnstenv
lret
dec
pop
ljmp
jbe
test
pop
or
add
pop
mov
push
adc
lds
fsubr
pop
aaa
dec
jecxz
mov
jae
ud1
test
xchg
stos
xchg
push
jnp
nop
addr16
out
dec
xor
fdivl
ss
jno
xchg
aad
sub
pop
sub
cmp
or
scas
push
sbb
lea
adc
test
mov
sbbl
ja
scas
or
mov
adc
out
pop
push
out
inc
mov
mov
lret
xchg
lret
in
out
enter
loopne
aaa
sahf
mov
mov
adc
mov
fmull
pop
xor
push
in
xlat
add
or
ficoms
mov
ss
dec
push
inc
pop
mov
fwait
popa
or
xchg
outsb
xchg
ds
sub
inc
jp
lret
add
lcall
xor
dec
mov
lcall
mov
test
ljmp
jb
ljmp
data16
sbb
nop
pop
loopne
pop
mov
pop
lcall
dec
rol
cmp
fs
sub
aas
movsb
repnz
les
test
in
mov
xor
iret
aam
mov
ret
outsl
mov
popl
lea
in
sti
mov
std
sbb
fwait
inc
adc
or
fiadds
mov
in
scas
stos
repnz
pop
hlt
sar
push
mov
push
xor
addl
add
punpckhwd
sbb
mov
lcall
fdivl
insb
inc
rol
jo
fsub
adc
mov
movsb
pop
sti
fstps
adc
stos
das
loop
and
mov
and
pop
gs
cmc
test
jle
push
and
stos
aam
fwait
stc
test
es
sbb
loop
dec
rcrb
xchg
xchg
adc
inc
inc
jo
fmulp
je
push
push
and
nopl
out
sbb
push
movl
add
sub
sbb
jnp
and
test
xor
push
sbb
xor
int
mov
xor
enter
xor
and
jb
addb
mov
sbb
mov
and
sub
loop
nop
dec
push
shll
pop
pop
test
sub
pop
jmp
inc
jae
ja
mov
jae
push
pop
je
mov
imul
pop
cmpsb
mov
jns
cmp
xor
stc
jae
or
repnz
addr16
fisubrs
lock
inc
inc
xor
and
fcmovu
data16
jno
xchg
jae
adc
mov
and
sub
lds
dec
mov
xchg
jl
mov
sti
std
outsw
cltd
insl
xchg
jl
sti
fwait
scas
cltd
push
loop
jecxz
dec
and
push
cmp
imul
sub
ror
test
outsb
or
int
adc
sar
inc
fsubl
mov
std
cmp
and
push
pop
mov
mov
test
pop
adc
aas
clc
jg
cli
jl
xchg
inc
xor
sub
cs
add
xor
mov
dec
sbb
xor
inc
addb
jp
cli
pop
iret
dec
fwait
insb
jnp
test
nop
dec
cmp
mov
pusha
inc
lods
and
mov
jl
adc
cmc
xor
cltd
insl
sub
mov
jmp
mov
aam
xchg
mov
std
mov
mov
sbb
movsl
or
push
pusha
mov
mov
movsb
ljmp
bound
cld
mov
inc
sbb
sbb
inc
fnstenv
stos
ret
lds
sub
push
lcall
in
jb
xchg
inc
mov
arpl
add
andl
into
cmpsb
mov
fyl2x
push
lret
mov
jnp
lods
jae
insb
loope
inc
cmpsb
or
scas
add
in
in
pop
push
sub
cltd
inc
in
inc
and
jns
adc
fsub
adc
pop
sbb
push
fadds
js
ljmp
push
lods
insl
cmc
xor
test
iret
add
out
aas
xchg
test
jmp
pop
or
cmp
imul
out
fnstcw
add
inc
fsub
in
cld
arpl
mov
dec
push
sti
jl
ret
fimull
rolb
mov
dec
and
pop
data16
mov
and
fsubs
cwtl
cmpsb
mov
push
in
fldl
ja
popf
pop
or
and
sbb
inc
push
cmp
adcl
cmp
aam
popa
mov
outsl
mov
clc
mov
xor
jno
in
dec
movsb
mov
lds
cmp
sub
lds
mov
aad
mov
push
push
pop
mov
adc
call
gs
jne
rcr
mov
cmp
or
enter
or
out
mov
cmp
xchg
inc
dec
add
sub
rorb
call
test
shr
std
cmp
sub
stc
aas
bound
mov
fs
in
add
test
jp
inc
mov
jmp
inc
push
xchg
mov
mov
sub
cmp
scas
push
mov
add
pop
mov
fcomp
sbb
sti
call
push
mov
loopne
fcomps
and
jmp
fsts
pop
and
mov
cmc
mov
lods
mov
out
sub
inc
cli
xchg
mov
mov
inc
lcall
fdivrp
rcll
push
push
dec
mov
or
pop
arpl
adc
jmp
or
mov
fcmovbe
mov
repnz
sar
cld
mov
fists
mov
insl
push
sub
movsl
mov
mov
mov
jno
dec
ja
jbe
leave
push
addr16
cmp
lods
mov
repz
xchg
jg
loope
icebp
test
lds
es
jno
stos
stc
mov
outsl
mov
ljmp
js
dec
out
dec
insl
mov
mov
orb
inc
popf
add
push
repnz
repnz
std
ret
sub
pop
in
or
jl
pusha
xchg
inc
xchg
or
int3
xor
mov
fistl
mov
pop
or
pop
cmp
xchg
or
int3
xor
mov
mov
scas
sbbb
add
jno
std
mov
inc
sub
cwtl
imul
mov
fidivl
aad
pop
movsb
mov
mov
inc
lods
mov
cli
movb
mov
or
flds
test
mov
aas
sarb
in
int
pusha
loopne
push
popf
push
fidivrl
in
ss
and
xchg
pop
xor
and
mov
mov
cmp
push
and
int
push
jnp
add
cmp
lcall
jecxz
pop
mov
sub
leave
push
inc
test
sbb
mov
ljmp
sbbl
std
rorb
gs
popa
in
jl
cwtl
jecxz
or
mov
js
shrl
jbe
or
or
pop
aas
and
ja
hlt
jno
movsb
dec
stc
or
xchg
xor
mov
adc
jo
push
jae
jb
hlt
outsb
xchg
lret
add
je
nop
mov
inc
fisubs
fwait
pcmpgtb
sti
jb
push
pop
or
mov
pop
mov
pop
je
fsubl
mov
fstpt
scas
int3
cmp
mov
clc
jae
mov
mov
ss
add
add
cmc
pop
mov
mov
mov
repnz
cmp
les
jge
inc
aam
in
adc
pop
imul
aas
xlat
imul
sbb
sub
mull
and
mov
clc
cmovg
lahf
out
inc
ret
stc
daa
dec
push
mov
dec
add
xchg
hlt
sbb
mov
js
lods
mov
pop
push
push
jl
xor
std
sbb
adc
insl
push
xor
loopne
and
mov
push
adc
out
jle
aad
sahf
in
out
xchg
leave
cmpsb
lcall
push
enter
pop
jecxz
jle
movsb
cli
cmp
mov
mov
aas
subps
iret
jmp
mov
dec
fidivrs
cmp
aas
repnz
dec
dec
test
mov
bound
ret
jmp
dec
aam
inc
mov
cltd
jmp
push
pop
inc
imul
xor
push
xor
call
ja,pn
sbb
pop
sub
lret
sbb
fbstp
repz
dec
xor
dec
mov
inc
fisubs
xchg
mov
lea
out
fisubs
mov
xchg
hlt
maxps
mov
insb
test
jne
pop
push
adc
ljmp
movsl
std
call
inc
push
cmp
nop
roll
movsl
sbb
pop
and
cltd
push
je
xchg
adc
push
sub
aaa
pop
inc
mov
pop
sbb
and
mov
call
test
scas
pop
and
sub
xor
andl
add
xchg
pop
pop
fs
jmp
and
xor
xor
ds
dec
dec
push
idivl
push
push
fiadds
mov
shlb
test
ret
js
iret
scas
dec
bound
ret
test
push
mov
cmp
and
lret
pusha
add
inc
les
loop
and
add
in
notb
jge
lock
jle
out
xchg
in
lods
leave
jbe
jno
lret
xchg
and
js
xor
js
push
and
inc
mov
inc
sbb
ljmp
mov
loope
arpl
mov
inc
cmpsb
dec
sbb
pusha
les
test
stos
and
in
mov
movsb
inc
push
mov
sub
pop
mov
lret
pop
or
adc
mov
and
or
lret
sub
mov
jmp
or
and
push
pop
mov
mov
sub
cwtl
inc
and
and
add
cmpsl
xor
test
cmc
nop
rcll
lods
aam
xchg
fildl
push
dec
mov
cmpb
repz
repz
out
push
mov
xchg
ljmp
lahf
lds
outsb
ret
inc
cmp
sbb
add
lcall
aad
jle
mov
mov
mov
js
push
inc
sub
arpl
fldt
arpl
mov
inc
popa
pop
and
xchg
arpl
aad
sub
xchg
lock
mov
mov
das
inc
loop
xor
clc
inc
dec
or
jnp
adc
xchg
in
sbb
cmp
arpl
repz
ss
in
mov
and
mov
dec
fchs
fnstsw
dec
jnp
xchg
insl
loopne
sti
in
inc
jmp
fdivs
leave
xchg
cmp
add
fmull
add
mov
pop
jge
inc
mov
cmp
ret
icebp
adc
subl
xchg
add
pop
dec
add
dec
leave
imul
push
push
adc
pusha
adc
xor
pop
push
fwait
mov
mov
aas
leave
cmp
clc
test
pop
mov
or
clc
mov
add
jne
mov
insl
repnz
sbb
mov
fldcw
ret
xchg
icebp
ret
ss
sbb
rcrl
pop
xor
lods
loop
xchg
insb
pop
mov
adc
xchg
or
jmp
sub
jg
dec
enter
scas
xor
push
mov
inc
test
iret
enter
test
test
mov
mov
jo
stos
mov
sbb
jne
mov
pop
lret
enter
enter
aam
xor
sti
lea
cmpsb
sub
push
js
push
out
push
jno
inc
adc
inc
mov
lret
xchg
cmc
data16
xchg
jl
pop
outsl
cmpsb
and
loop
and
adc
cmp
cmp
jle
cmpsb
pop
je
pop
dec
push
testl
mov
add
pop
mov
mov
sub
lret
xchg
jmp
lods
jg
stc
cs
enter
cmp
dec
push
cmp
add
mov
xchg
jo
scas
mov
jns
add
cmp
jo
outsb
xchg
stos
mov
sbb
jne
sub
mov
push
and
or
ret
sbb
pop
pop
out
insl
jp
mov
xchg
xor
mov
ja
scas
xor
in
xchg
outsl
jge
push
bound
cmp
inc
js
or
mov
cmpsb
pop
add
in
dec
repnz
ss
push
push
comiss
lret
scas
jb
imul
lret
lret
pop
lahf
pop
jl
in
jns
adc
and
lcall
adc
pusha
jns
insb
mov
push
into
xchg
repz
data16
in
fbld
push
test
mov
outsb
adc
pop
xlat
cmc
aad
mov
xchg
aad
adc
lret
jp
jnp
test
mov
dec
xor
cli
mov
out
fnstcw
fcmovnbe
sub
wbinvd
lcall
mov
or
pop
cmp
les
int
iret
scas
xchg
xlat
stos
add
adc
xchg
mov
lock
mov
jp
mov
imul
jp
rclb
xchg
jmp
loope
roll
sbb
iret
lcall
mov
pusha
bnd
mov
iret
mov
insb
paddw
arpl
repz
jb
insl
mov
cli
add
cmpsb
push
push
push
push
frstor
leave
xchg
stos
dec
lret
inc
shrl
lock
hlt
or
mov
shll
fnsave
or
in
mov
popf
pop
icebp
xor
pop
ret
pusha
push
cmc
ljmp
jbe
bound
cmp
cmp
in
sbb
inc
pop
repnz
clc
jo
leave
pop
xor
mov
xchg
jp
sarl
adc
lds
and
iret
lret
divl
xor
xor
cmpsl
mov
les
mov
mov
fwait
rorl
rcr
dec
dec
lcall
and
mov
inc
inc
mov
orl
aad
fcomip
pop
lret
dec
into
or
adc
ja
outsl
pop
cltd
push
les
inc
add
push
adc
rep
insl
push
and
inc
sbb
repz
sbb
mov
ret
incl
in
xchg
mov
mov
sub
adcb
cmp
fwait
cs
push
sti
add
push
sbb
dec
in
mov
int3
push
lcall
inc
lahf
xchg
push
sti
add
xor
ja
subb
inc
adcb
push
lds
mov
or
cmpsb
je
and
loopne
pop
push
cmc
jg
jp
fwait
dec
ljmp
xchg
ja
stos
and
pushf
jge
insb
sub
in
mov
jg
fmull
fldl
leave
rol
adc
pop
sbb
je
into
xor
mov
data16
cwtl
jecxz
xchg
adc
orb
sbb
mov
enter
mov
mov
idivb
icebp
add
pusha
lock
sbb
rep
mov
push
ret
or
adc
es
aam
jbe
popf
and
test
popa
add
faddl
push
push
aas
adc
xor
mov
xchg
lret
mov
dec
add
mov
xchg
roll
cmpsb
outsl
aaa
xor
popf
mov
sub
in
and
mov
or
scas
add
or
rcrl
and
ret
cmpsl
push
xchg
push
scas
or
mov
fmuls
push
bound
or
jnp
xchg
fbld
int3
insl
pusha
out
imul
mov
lcall
and
fsubrs
jmp
mov
and
xor
std
paddw
mov
scas
fmull
or
push
jo
jmp
addl
dec
xor
xchg
inc
pop
and
sub
and
xor
pusha
ds
into
test
and
mov
lret
lods
popa
pusha
xor
cmp
in
ja
fcmovb
int
add
pop
mov
push
in
mov
push
pop
push
adc
repnz
in
adc
loop
dec
roll
xchg
inc
sub
shrl
dec
jns
fnstenv
sbb
ja
sub
mov
movsl
data16
cpuid
push
mov
stos
lods
jl
mov
push
push
ret
adc
iret
or
mov
fwait
iret
push
inc
pop
data16
ret
daa
aad
dec
loopne
or
cmc
mov
pop
xchg
imul
xlat
cld
pop
hlt
jo
or
push
sub
out
mov
dec
das
sub
jp
test
les
and
repnz
aas
scas
jo
inc
pop
stos
or
dec
cmpsb
mov
mov
pop
adc
jae
jae
movsb
xchg
insb
xor
jnp
mov
jecxz
mov
jecxz
and
inc
test
rep
fmulp
mov
push
sub
loope
int3
inc
inc
pushf
scas
arpl
das
sbb
or
sub
test
or
adc
cmpl
cmp
shl
mov
sub
push
aaa
mov
bound
mov
mov
dec
mov
mov
lods
mov
cmp
es
push
pop
insb
test
mov
daa
cld
cmp
mov
mov
fucomp
jg
pop
add
and
mov
stc
fcomip
cmp
mov
adc
mov
xlat
mov
cmp
and
out
push
shlb
mov
dec
inc
jae
sub
fsubrl
test
push
out
push
fnstcw
jb
pop
ret
inc
lea
sbb
clc
xorb
mov
setle
lods
jg
ja
fwait
lods
dec
aad
inc
mov
xchg
lods
dec
pop
add
adc
out
lret
sbb
adc
stc
fcompl
ljmp
mov
mov
jp
enter
jns
pusha
insl
adcb
xor
push
sti
flds
aaa
add
jae
mov
mov
pop
dec
fimull
fs
mov
xchg
mov
and
or
test
mov
popa
xchg
mov
adc
incb
push
or
je
jl
cwtl
pop
dec
mov
fs
scas
cmc
xchg
sbb
data16
adc
mov
mov
out
addb
in
int3
ss
sbbl
punpckhbw
lahf
dec
and
push
cli
mov
pop
outsb
pop
lods
push
cli
or
push
fwait
sbbb
and
cwtl
dec
jo
mov
adc
push
pop
and
mov
xor
mov
pop
insb
mov
std
pop
mov
sbb
gs
les
cmpsb
pop
jge
orl
mov
dec
shrb
mov
sub
iret
pop
push
inc
jmp
push
es
stc
mov
fnstcw
push
mov
sbb
sarb
pop
jb
mov
xor
mov
pop
cmpsl
scas
dec
data16
test
iret
out
int
cmp
cmp
xrelease
jo
mov
mov
add
cltd
jnp
sbb
push
das
or
shl
mov
mov
jp
jecxz
loopne
fmuls
jno
inc
roll
xor
mov
lods
cmpsb
mov
hlt
stc
mov
js
arpl
aad
sti
leave
sbb
dec
add
cmc
sti
scas
xchg
cwtl
xchg
cmp
cmp
gs
mov
imulb
jb
mov
mov
or
and
pop
inc
outsl
out
test
mov
popf
movsb
jg
jnp
in
push
adc
addl
aad
mov
subl
std
sub
jne
sti
sub
pop
int3
lods
xchg
je
cmpsb
cmpb
movsb
dec
jg
add
lock
add
or
adc
cmpl
cmp
shl
mov
push
push
stc
daa
adc
or
sub
imul
inc
lahf
mov
dec
ljmp
pop
stos
push
mov
jae
ja
adc
mov
hlt
sahf
insb
sub
push
mov
in
sub
shlb
clc
push
push
or
lods
jmp
add
daa
stos
pop
mov
lea
or
adc
testl
bound
jns
lret
mov
mov
and
lahf
xor
gs
push
cld
mov
pushf
popf
sbbb
mov
xchg
sbb
mov
daa
cmc
sub
xchg
fistpl
popa
mov
mov
repnz
cmp
ss
pop
jne
add
inc
scas
dec
xchg
je
cmc
imul
inc
outsb
cmp
cmp
dec
sbb
mov
pop
and
stos
pop
sahf
dec
insb
adc
jle
jl
addl
add
sub
sbb
sbb
flds
cld
leave
jmp
clc
push
or
test
int
xchg
inc
mov
adc
out
jecxz
push
mov
mov
cwtl
sub
pop
fsubrs
in
imul
sub
mov
jp
enter
jns
pusha
insl
adcb
xor
push
sti
flds
aaa
add
jae
mov
mov
pop
dec
fimull
fs
mov
xchg
mov
and
mov
push
test
pop
loop
sbb
je
aas
fwait
ljmp
pop
push
in
cmp
add
out
rorl
pop
adc
pop
out
jp
push
insb
cwtl
sub
das
adc
push
into
call
in
jae
iret
add
aad
jne
nop
mov
push
lret
sahf
cs
sahf
gs
subb
add
shrb
movsb
loope
shrb
aaa
fmuls
pop
je
mov
pusha
jl
mov
sbb
fdivr
dec
test
popa
imul
cmp
mov
pop
adc
mov
or
sub
push
addr16
ja
fcmovb
int
mov
cmp
cmc
js
jbe
rorl
and
mov
fwait
add
dec
inc
jns
mov
aad
dec
into
imul
popa
icebp
into
dec
sub
in
adc
cs
or
rorb
mov
push
loope
sbb
or
ficoms
pop
movsb
insb
loope
hlt
push
rol
cmp
pop
fcmovnbe
mov
add
xchg
inc
out
cs
jbe
pop
jg
pop
les
repz
and
call
jno
rorl
imul
jo
jecxz
mov
scas
inc
stos
int
cmpsl
out
outsl
sti
add
je
mov
mov
into
out
push
rcll
out
cmp
stc
js
out
shlb
insl
mov
dec
insb
mov
loop
dec
jb
fcomps
xor
int
jmp
mov
jo
shrl
xchg
loop
pop
test
push
and
pop
cmp
lock
movsl
mov
add
inc
xchg
lret
ret
and
or
sub
test
xlat
shrl
push
xor
mov
jg
popf
mov
int3
push
ljmp
insb
outsl
fs
dec
jp
push
addr16
ja
fcmovb
int
jmp
test
enter
push
sub
lods
bnd
repnz
adc
xchg
push
jno
or
arpl
icebp
inc
lret
rsm
fldt
mov
stos
xchg
pop
mov
dec
push
lock
inc
stos
clc
cmp
xchg
imul
inc
mov
and
roll
iret
scas
xchg
or
adc
xchg
push
enter
mov
aam
ljmp
inc
jo
push
lock
mov
mov
xchg
mov
lret
cmc
lds
push
or
lret
jnp
arpl
loop
cld
jo
dec
inc
push
int
push
stos
xchg
inc
flds
out
lret
ljmp
test
jp
pop
mov
lcall
mov
enter
out
jge
pop
fcoms
jne
inc
out
and
std
aaa
and
std
fstpt
jne
out
xchg
mov
incl
cs
cmp
iret
out
ret
test
xlat
push
outsb
je
xchg
dec
adc
les
adc
jle
aad
pushf
addr16
mov
faddp
jbe
inc
insl
mov
in
stc
leave
pop
das
das
inc
fstpt
pusha
pop
pop
das
fs
loop
xchg
test
and
add
popf
pop
jno
cmpsb
loope
cmp
xchg
dec
mov
imul
fs
push
sbb
pop
mov
dec
lret
xor
lahf
outsl
xchg
sbb
in
pop
and
add
fcoms
jne
inc
out
movsl
test
xchg
inc
xor
pushw
add
jecxz
cli
dec
mov
and
test
stc
jnp
pop
inc
xchg
jns
fdivrp
pop
icebp
cmp
in
mov
aas
test
test
jne
divl
int3
inc
sbb
inc
xchg
mov
sub
movl
inc
lcall
inc
jmp
les
int3
jecxz
movsl
inc
ja
fs
or
dec
shlb
lcall
scas
dec
mov
fldcw
jmp
gs
jae
push
out
out
jl
clc
popf
std
arpl
popf
dec
xchg
jmp
dec
out
xor
imul
jbe
rorl
mov
mov
jg
sub
sarb
fsubl
bswap
movsl
push
mov
cs
jge
loopne
repz
cmpsb
mov
popf
pop
add
and
add
shrb
fwait
arpl
in
adc
push
fidivrs
stos
mov
cmpsl
sarb
aad
push
das
mov
xchg
sub
push
fwait
scas
jge
into
fwait
jl
mov
icebp
cs
xor
outsb
outsb
shll
and
dec
adc
call
daa
xorb
testl
cmpsl
inc
test
jg
sub
movq
pop
iret
fsubl
lods
mov
lock
ret
out
or
pop
out
scas
add
mov
inc
aam
jmp
pop
addr16
repz
call
sbb
push
xchg
and
or
mov
inc
inc
adc
sti
testl
int
cltd
jge
inc
in
sbb
add
mov
pop
sub
cwtl
sbb
adc
insl
or
add
shrl
fsubs
call
cwtl
inc
push
iret
cmp
and
fdivrs
fildll
js
cmp
and
push
pop
push
mov
daa
adc
insl
testl
adc
rcll
movsb
jb
jmp
aas
xchg
cld
jno
mov
mov
jmp
mov
out
xchg
push
test
xor
stos
andl
jnp
sub
xchg
push
inc
test
fs
stos
jecxz
adc
daa
pop
pop
ret
or
cmp
mov
std
test
sub
pushf
into
fstpl
jle
xor
fildl
jbe
inc
push
iret
adc
icebp
fs
out
movsl
mov
push
sbb
lods
push
adc
inc
lock
sbb
ljmp
fildl
out
mov
or
lods
stos
jge
lea
mov
sti
push
imul
mov
lods
xchg
shl
jns
lods
sbb
xor
add
xchg
push
iret
roll
jl
dec
je
cs
and
daa
and
mov
sub
movb
mov
xchg
inc
out
jae
mov
enter
jecxz
cmpsb
fsts
dec
push
jns
pop
shlb
inc
shrl
test
mov
pop
daa
sbb
negb
and
stos
push
lds
dec
outsb
mov
sub
gs
mov
addl
or
sbb
mov
mov
push
push
test
adc
add
ret
xchg
cmp
pop
xchg
pop
xchg
repnz
or
cmp
stos
jb
inc
es
jae
insb
sbb
movsb
scas
sub
mull
jno
and
lcall
xchg
jno
dec
jmp
jle
mov
stos
lcall
ficoms
ror
dec
pop
jl
push
mov
jnp
ja
sub
inc
jb
cli
mov
scas
clc
push
test
ror
jl
sti
push
rorb
lock
mov
jecxz
sbb
jge
cltd
mov
outsb
add
push
in
push
sub
cmc
jns
xor
lods
jl
sub
sbb
dec
lock
add
fwait
mov
mov
and
fcmovu
lods
mov
mov
cmp
sbb
xor
mov
sub
js
mov
nop
enter
add
sbb
sub
outsl
outsb
pop
loop
into
out
add
pop
xchg
insb
inc
pop
mov
add
inc
adc
addr16
loope
pushf
jmp
mov
sub
and
mov
xor
or
ljmp
jb
sub
gs
aam
and
jge
jnp
fmull
sbb
and
pop
popf
mov
dec
sarl
int
in
xchg
int
adc
xor
mov
ficomps
jae
cmc
dec
loopne
inc
xchg
add
aam
les
push
orb
and
inc
jmp
shrl
cltd
nop
push
sub
fildll
movsb
pop
mov
or
mov
cs
mov
jo
mov
icebp
and
fidivs
js
mov
cltd
popa
or
push
mov
fistpl
add
outsb
inc
adc
inc
mov
sbb
hlt
xchg
jnp
imul
lret
bound
idivl
inc
mov
jmp
sub
lods
push
aad
popa
ss
or
out
clc
fs
lcall
iret
fdivs
iret
dec
sti
push
ret
mov
push
jns
sub
movsb
inc
mov
xlat
ror
lahf
cmp
les
out
dec
ret
mov
sub
and
adc
inc
xchg
dec
add
jbe
inc
lds
xchg
dec
repnz
fcom
test
insl
push
fstpl
repz
pop
test
push
xor
aad
mov
mov
jg
xchg
or
aas
lds
xor
inc
jbe
dec
mov
add
fistpl
aas
and
adc
shll
inc
je
add
dec
mov
push
stos
lret
adc
jo
ds
clc
and
cmpsb
mov
mov
xchg
cmp
jnp
push
out
adc
out
push
lods
dec
negl
fnstsw
repnz
aas
je
mov
adc
test
pusha
dec
cmp
jle
jge
dec
inc
xchg
dec
add
jbe
inc
lds
xchg
dec
lcall
lret
push
fstpl
repz
and
lods
adc
mov
mov
jg
xchg
or
aas
lds
xor
inc
jbe
dec
mov
add
fistpl
aas
and
push
or
out
mov
cmp
aam
mov
push
stos
lret
adc
jo
ds
push
xchg
push
cmpsl
or
inc
enter
mov
xchg
cmp
sbb
fisubrs
aad
jmp
push
lahf
insb
mov
mov
jg
adc
imul
xchg
mov
scas
ja
addr16
ja
aaa
push
popf
popa
stos
pop
imul
dec
imul
mov
adc
push
mov
hlt
hlt
mov
mov
fsubrl
repz
outsl
sbb
outsb
push
outsb
xchg
cmp
adc
call
loope
cmpsb
adc
adc
movb
clc
or
and
iret
dec
daa
inc
push
sbb
sahf
shrl
sub
xchg
push
inc
test
fs
stos
jecxz
mov
cmp
sbb
fcompl
push
xor
pop
daa
mov
sub
fisubrl
pop
jle
push
cltd
push
call
lcall
xlat
mov
aam
sub
mov
pop
shll
rorl
xlat
cltd
adc
je
cmp
jb
scas
cs
test
sbb
int3
shrl
or
shll
orl
outsl
es
movsl
sbb
mov
jle
lds
popf
lds
sub
cmp
sub
push
cs
adc
test
xor
in
outsb
push
pop
scas
ja
addr16
ja
aaa
push
popf
adc
daa
lock
push
popf
lea
mov
xchg
ljmp
mov
dec
pop
mov
cmp
popl
push
and
jge
cltd
jle
inc
xchg
lods
test
lcall
xlat
ds
inc
pop
push
add
enter
lds
es
pop
xor
dec
scas
pop
test
pop
inc
addr16
sbb
movsl
xchg
loopne
mov
imul
xchg
push
fcoml
das
pop
enter
xchg
fsts
out
jmp
push
inc
test
fs
stos
jecxz
mov
cmp
mov
lock
jns
imul
movsb
addl
and
push
push
das
rorb
dec
popf
mov
mov
add
adc
inc
sub
mov
bound
lock
leave
mov
or
dec
xor
fisubs
mov
ss
repz
mov
cmp
xchg
mov
xor
movsb
sub
adc
dec
cmp
hlt
push
xchg
or
std
mov
dec
lcall
pop
scas
ja
addr16
ja
aaa
push
popf
lcall
insl
flds
fnstenv
sbb
cmp
pop
pop
or
aam
loope
out
xor
push
and
std
pop
adc
stos
push
inc
inc
adc
inc
lock
cmp
shrl
inc
rolb
mov
add
shll
add
ja
cltd
jp
xor
vdivss
pop
std
sbb
mov
xor
inc
add
pop
inc
and
cmp
test
nop
popa
rorl
cmp
or
aam
sbb
push
mov
call
scas
stos
mov
jecxz
lods
adc
or
cmp
out
in
out
mov
sub
mov
jns
cmc
and
inc
jbe
mov
dec
jmp
mov
inc
sti
notb
cltd
test
das
or
sbb
mov
jb
dec
xlat
cmp
js
adc
mov
jp
sti
push
add
inc
pop
sbbb
mov
pop
pop
stc
xchg
aad
push
jmp
fdivrp
pop
or
pop
sbb
int
inc
fildll
popa
ss
sub
pmulhuw
mov
int3
pop
cwtl
ja
lcall
push
pop
pop
inc
lret
pop
inc
xchg
stos
dec
int3
sbb
rcl
pushf
in
bound
sub
mov
call
call
cmp
repnz
jmp
add
stc
mov
mov
xchg
dec
js
sub
sar
out
and
mov
mov
and
enter
mov
sbb
dec
adc
insb
adc
and
xchg
call
pop
scas
pop
mov
daa
push
outsb
push
pop
scas
ja
jcxz
dec
dec
adc
in
mov
jbe
test
cmovl
outsl
inc
add
sbb
sbb
inc
ja
clc
sub
xor
es
test
cltd
subb
loope
push
popa
push
cmc
stos
xchg
js
outsl
mov
inc
repnz
sbb
jbe
mov
xorl
xor
hlt
pop
dec
xchg
push
outsb
push
pop
scas
ja
insl
jns
mov
jbe
in
fwait
xor
xor
cmpsb
shl
adc
dec
fwait
dec
mov
in
jmp
scas
inc
adc
cmp
icebp
push
mov
mov
imul
insb
lret
mov
test
cmp
sbb
add
rorb
popa
ss
mov
xchg
lods
cmp
jmp
dec
pop
in
sbb
xchg
js
pop
cmp
mov
xor
test
inc
notb
inc
rclb
and
dec
stos
jp
push
ret
test
loope
jo
xchg
cmpsl
popa
mov
imul
add
push
inc
adc
ljmp
loop
int
je
inc
inc
jne
fwait
pop
movsb
std
fisttps
mov
add
xchg
scas
inc
sbb
bound
outsl
cmpsb
cmc
ds
outsb
cmp
sub
mov
mov
mov
xchg
sub
je
les
cld
and
fwait
dec
adc
pop
push
fidivl
fwait
leave
mov
mov
mov
push
add
adc
jb
dec
xlat
or
jnp
mov
out
inc
leave
gs
add
adcb
rcll
cmpsl
dec
imulb
addr16
mov
cs
push
lahf
mov
test
sbb
dec
dec
or
jb
cld
mov
int3
add
or
pop
sub
nop
hlt
xlat
push
daa
loope
mov
xchg
push
jnp
adc
fdivl
add
adc
xor
das
adc
dec
mulps
in
inc
ja
bound
pushf
clc
jno
inc
shll
jae
stos
xchg
out
push
stc
imul
pop
push
sbb
sbb
mov
out
xchg
fs
sbb
js
lcall
or
pushf
shl
testb
sahf
jnp
shlb
daa
lret
clc
mov
movsl
push
dec
in
imul
jg
and
xorb
sahf
aam
push
outsb
push
pop
scas
ja
addr16
push
sub
lods
sub
insb
add
lret
cmc
jne
mov
jg
jmp
popf
pop
loope
cltd
lods
add
icebp
outsl
inc
sub
in
jle
adc
sahf
stc
daa
jge
push
test
xchg
or
pop
out
add
lods
xchg
xlat
or
ljmp
pop
iret
movsb
push
ror
cmovs
mov
cmp
arpl
jmp
rcl
cli
adc
jns
in
pop
mov
mov
pop
test
movsb
xchg
cs
adc
lods
pop
mov
push
push
mov
mov
jmp
sbb
sahf
sub
sbb
xchg
mov
mov
mov
mov
xchg
pusha
movsl
loopne
jp
xchg
cmc
or
push
push
ljmp
in
daa
pop
test
data16
repz
dec
push
cmpsl
sahf
jle
add
or
dec
in
add
dec
xchg
mov
sbb
ret
movsb
out
mov
mov
and
adc
out
sbb
rcll
test
out
xor
or
xchg
and
and
mov
jmp
fisubs
ljmp
or
or
cmp
out
mov
add
insl
sbb
pop
stos
mov
icebp
mov
outsb
push
pop
scas
ja
addr16
ja
aaa
push
popf
scas
loope
adc
xor
test
lods
fwait
mov
pop
mov
push
cmc
sub
mov
cmp
cmp
inc
je
test
aam
cmp
popa
dec
inc
outsb
icebp
push
lods
popf
mov
adc
xchg
cltd
lods
add
mov
mov
cmp
pop
loopne
repz
outsb
push
pop
scas
ja
addr16
sbb
sub
insb
add
lret
pop
in
adc
call
jmp
popf
pop
loope
cltd
lods
add
daa
sub
dec
je
dec
cmp
xor
into
pop
out
out
add
lods
xchg
xlat
or
ljmp
pop
iret
movsb
push
ror
cmovs
mov
cmp
arpl
jmp
rcl
cli
adc
cmc
mov
out
cwtl
aad
mov
pop
test
pop
movb
jge
or
mov
jmp
sbb
sahf
sub
sbb
xchg
mov
mov
mov
mov
xchg
pusha
movsl
loopne
jp
xchg
cmc
or
int
mov
sbb
movsl
pop
mov
daa
pop
test
data16
repz
dec
push
cmpsl
sahf
jle
xor
adc
add
dec
xchg
mov
sbb
ret
movsb
out
mov
xchg
fisubs
ljmp
iret
test
sub
sub
cmp
outsl
out
mov
jg
insb
decl
test
lret
movsl
mov
mov
adc
xlat
jb
cli
mov
scas
jnp
test
xlat
dec
push
aas
aam
pop
or
xor
adc
push
sbb
xchg
mov
mov
idiv
sub
sbb
nop
pop
movsl
insb
aas
jne
cltd
adc
imul
xchg
shl
mov
push
cmpb
popf
sbb
mov
push
inc
notl
std
outsl
jbe
jb
out
nop
push
hlt
jno
and
shr
test
lock
das
nop
add
sub
jmp
jae
mov
cmpl
or
pop
inc
or
xor
jo
punpckhbw
dec
loop
fadds
jg
xor
faddl
pop
xchg
stos
push
add
pop
mov
shl
addr16
mov
mov
movsb
inc
and
shll
ss
sets
ljmp
rcr
xor
push
jns
jp
dec
in
inc
pop
js
loop
lock
cmp
lds
add
sub
cli
std
mov
scas
aas
std
inc
bound
or
dec
cli
add
dec
add
add
rcll
fs
sbb
outsl
repz
movsl
lea
mov
push
outsb
push
pop
scas
ja
addr16
ja
aaa
push
popf
ds
dec
mov
sbb
outsl
hlt
fxch
lods
cmc
add
fsts
enter
popa
nop
aas
add
xor
mov
push
mov
popa
adc
mov
inc
jb
and
outsb
mov
adc
cmp
xor
gs
dec
mov
aas
xchg
int
and
int
sub
cmpsl
pop
test
or
dec
ss
pop
out
mov
je
cmp
fadd
pop
mov
pop
hlt
jno
xchg
inc
aaa
pop
rep
mov
sbb
nop
out
stc
std
cmp
lret
insl
inc
imul
dec
scas
adc
daa
inc
push
sbb
popf
adc
sub
xchg
push
inc
test
fs
stos
jecxz
mov
cmp
sahf
xchg
add
stc
push
sarl
cmp
mov
jmp
or
dec
mov
xchg
or
rolb
add
push
sub
inc
jp
bound
sub
cmp
or
faddl
sub
test
movsl
pushf
cmp
stos
icebp
cmp
invd
mov
js
xor
mov
outsb
testl
aaa
or
into
shll
or
aaa
sti
inc
bound
cmp
xchg
nop
sbb
jbe
les
mov
jmp
testb
xchg
and
sub
outsb
inc
je
jge
push
shrb
imul
cld
add
je
adc
icebp
sbb
and
dec
je
ds
aam
xchg
jmp
sub
js
popa
pop
lods
mov
cli
adc
pop
outsl
cwtl
dec
jle
scas
das
mov
ss
test
outsl
xchg
addb
dec
mov
sbb
jle
addb
mov
push
lods
push
dec
fldt
mov
push
xor
arpl
pop
inc
pushf
shll
mov
and
jmp
imul
xchg
pop
cltd
push
ja
pop
push
adc
jae
cmp
rol
jle
sub
fwait
pop
or
jb
pop
xor
mov
mov
call
or
mov
jo
push
mov
jp
cltd
pop
stos
test
lahf
out
mov
mov
clc
and
add
cmp
xlat
cmpsb
lods
mov
out
add
mov
sub
scas
xchg
lods
call
insb
pushf
insb
sbb
add
test
out
mov
pop
mov
or
mov
stos
adc
fsubrs
aas
pop
push
mov
das
mov
movsl
or
jno
loop
lret
cmp
dec
xchg
mov
fdivrl
adc
mov
cmpb
mov
fdivr
xchg
into
jo
adc
pop
insl
ss
add
push
ror
sbb
icebp
or
xchg
adc
add
imul
das
push
or
adc
xlat
stos
add
adc
xchg
mov
fs
mov
xlat
scas
pushl
stos
in
and
inc
sbb
push
frstor
mov
shlb
sarl
lods
jmp
xchg
ds
or
aaa
outsb
jmp
sub
addb
push
xchg
enter
jp
mov
adc
jge
push
insl
orl
lret
shll
cmpsl
popf
inc
sub
sti
jne
xorb
fmuls
mov
pop
fcoms
in
cmc
sti
orl
ret
lods
inc
rcrb
cmp
es
je
cmp
cmp
cmp
pop
jecxz
sub
xchg
andb
adc
out
std
or
ret
fistl
in
or
jmp
push
ret
mov
aas
notb
mov
imul
xchg
pop
jae
mov
cmp
int
iret
scas
xchg
icebp
cmp
cmp
cmp
pop
jecxz
sub
pop
pop
pop
inc
cmp
cvtps2pi
das
adc
outsl
scas
std
fnstsw
push
sti
sbb
shl
or
inc
mov
sub
inc
xor
dec
sbb
jne
mov
mov
push
das
inc
mov
hlt
push
ss
ja
cmpsb
ror
mov
movsb
push
stos
xlat
lds
dec
cmp
xchg
mov
mov
adc
aaa
sbb
sbb
cli
imull
fsubl
in
testl
aaa
dec
jmp
sti
lods
imulb
cmp
sbb
bound
pop
nop
pop
cld
push
ja
xor
inc
xor
jmp
aas
add
dec
dec
xchg
arpl
pop
push
leave
dec
aas
pop
xor
or
xchg
add
push
pop
decl
lret
ljmp
mov
xchg
or
push
fisubl
push
add
adc
data16
ljmp
bnd
and
cmp
add
fnstsw
out
jmp
adc
lea
out
lcall
jle
dec
push
pop
push
outsb
fisubrl
int
stc
sbb
adcb
push
or
dec
cmp
mov
jecxz
jp
push
jle
pop
jo
test
xchg
pop
imull
es
mov
filds
mov
into
jae
loopne
inc
inc
push
mov
mov
push
int
and
push
outsb
fistpll
std
mov
orl
jg
push
push
inc
rorb
adc
into
leave
cmp
data16
inc
push
mov
add
jg
pop
fsts
dec
sbb
test
cmp
xor
sub
shrl
into
lods
fildl
jg
sub
std
leave
jb
pop
mov
stos
mov
xchg
jo
out
mov
or
fnstsw
lods
xchg
adc
scas
xor
jo
jmp
addr16
clc
pushf
lods
jecxz
xchg
aam
jmp
das
lock
fwait
inc
loopne
mov
hlt
inc
add
pop
std
lahf
ljmp
lds
adc
test
sub
xchg
daa
xchg
adc
sbb
cmpsl
mov
pop
into
popf
icebp
addr16
or
iret
push
lods
loope
xor
or
sub
cld
ljmp
sub
sbb
cmpl
fdivrs
sbb
dec
bound
mov
adc
sbb
stc
push
and
dec
push
and
jp
repz
ja
aad
test
adc
movsb
mov
mov
test
or
cltd
test
push
sbb
xor
sub
xor
cmp
xchg
sub
add
jmp
sub
and
shrl
imul
scas
neg
adc
in
cmp
cmpb
mov
ljmp
jns
adcb
call
ss
movmskps
test
jl
arpl
lahf
insl
dec
insl
cmpsl
into
leave
cmp
data16
xchg
jge
add
and
mov
test
cmp
xor
add
add
cli
leave
loop
popa
jg
sub
les
call
jle
leave
xlat
or
push
inc
cmpsl
pop
fldl2e
dec
pop
pop
xchg
jne
xorb
push
push
sub
mov
xchg
adc
dec
or
cmp
jnp
inc
movsb
pop
cmpsb
mov
mov
imul
pcmpgtd
idivb
jle
or
and
ds
xor
cmp
xchg
pop
cld
icebp
xchg
sbbl
mov
dec
pop
xor
push
dec
mov
loopne
daa
fwait
sub
mov
pop
jle
mov
roll
loopne
mov
sbb
cmpl
fdivrs
sbb
dec
bound
mov
adc
sbb
stc
push
and
sarb
scas
fwait
mov
aam
cltd
repz
ja
aad
test
adc
movsb
mov
mov
test
or
cltd
test
push
sbb
xor
sub
xor
cmp
jge
pushf
mov
out
sub
mov
shrl
imul
scas
neg
adc
in
cmp
cmpb
mov
ljmp
jp
cmp
adc
mov
sub
out
movsl
pop
mov
scas
dec
xorb
test
test
jnp
jae
sub
pushf
repnz
dec
outsl
jo
jo
insl
adc
rcl
out
xchg
outsl
mov
arpl
sub
mov
dec
pop
decb
and
and
sbb
dec
mov
add
rcll
jnp
mov
or
pop
leave
adc
leave
pop
addr16
mov
shll
mov
fisttpll
call
push
cld
or
add
arpl
arpl
or
mov
dec
cmpsb
sbb
mov
adc
outsb
sub
sub
jecxz
mov
icebp
mov
lds
cmpsl
loop
scas
test
jbe
ja,pt
mov
enter
inc
mov
jmp
jmp
popf
lds
cmpsl
int
jl
adc
fdivrl
push
push
lret
xlat
leave
pop
xor
stos
fwait
aad
pop
or
lea
xchg
cmp
inc
cwtl
inc
ret
mov
cmpsl
mov
lods
sti
cmp
mov
cmp
sbb
push
out
loope
out
repz
lahf
lods
test
stc
cmp
or
mov
cmp
mov
push
test
jns
inc
xchg
push
dec
aas
push
push
imul
cli
xchg
lret
or
pop
fisubs
lahf
cmp
xchg
fsts
pop
cmp
jmp
fcmove
push
movsb
add
stos
inc
xchg
mov
sbb
pop
jle
rorl
stos
out
sub
add
xchg
jbe
mov
or
sbb
or
pop
inc
xchg
fmuls
inc
push
and
add
idivb
sahf
push
fstpt
sbb
xlat
repz
pop
sarb
bound
cmovnp
testb
adc
cmp
adcb
out
test
rcll
mov
cmp
mov
mov
mov
xchg
jo
test
sysenter
jecxz
jl
lret
pop
mov
jns
pop
testb
stos
dec
mov
imul
clc
mov
rcll
mov
jno
cmp
movb
xor
iret
into
and
js
imul
cmp
mov
fwait
mov
xor
bound
cmp
and
mov
sub
jecxz
addr16
stc
mov
es
pop
int
sub
int3
ret
lock
in
push
insl
sarb
rcll
sbb
clc
mov
cld
push
out
xchg
mov
repz
xchg
sbb
and
add
nop
out
xchg
mov
repz
shlb
jg
rcrb
repz
js
inc
dec
in
mov
and
out
xchg
mov
repz
or
pusha
popa
add
sbb
xchg
mov
repz
lods
sahf
ds
cs
add
nop
out
xchg
mov
repz
popf
or
adc
mov
cltd
cmp
repz
or
clc
subl
hlt
mov
xorl
shrb
xchg
test
push
push
cld
push
adc
sbbb
in
lea
sbb
dec
sbbb
test
mov
jge
dec
and
pop
or
test
mov
fsts
dec
cmpsb
inc
inc
sub
mov
inc
jp
mov
addr16
stos
pmulhw
iret
sub
aam
arpl
mov
leave
add
hlt
jecxz
loope
adc
nop
inc
aas
fcmovbe
dec
lret
nop
shll
adc
jle
and
adc
pop
mov
daa
pop
lock
arpl
inc
inc
movb
pop
fs
push
push
icebp
push
mov
sub
cld
add
mov
addl
lret
cmp
pop
xor
pop
mov
daa
shl
mov
rorb
mov
mov
lods
shrl
mov
stc
testb
fsubs
clc
jae
sti
cmp
or
out
adc
push
mov
inc
fadds
ficompl
and
pop
fisttps
lods
mov
sbb
add
xchg
stos
scas
popa
mov
cmp
pop
lea
pusha
jp
jp
fildl
gs
xchg
jg
cmpsb
cltd
mov
push
in
lcall
add
xor
mov
adc
scas
sub
xor
adc
cmpsb
popa
cs
jle
push
loopne
sub
incl
add
inc
std
mov
lods
ja
sbb
xor
stos
and
cltd
arpl
stos
test
fcmovu
jecxz
mov
push
popf
stos
ds
repnz
dec
jbe
popa
jno
fisubl
jns
xlat
pop
loope
cmc
aam
xor
aaa
or
jecxz
pop
add
out
fwait
add
jbe
out
cmp
and
hlt
ficompl
xchg
mov
leave
jbe
sub
inc
xor
mov
cmp
out
test
cwtl
add
loope
cmp
comiss
add
mov
jl
jp
orb
std
lret
test
and
jb
xacquire
lds
pusha
or
mov
gs
movsb
xor
push
rclb
inc
pop
repnz
dec
push
shll
inc
jnp
and
pop
jo
xor
mov
mov
mov
mov
pop
add
mov
cli
dec
push
mov
add
jmp
out
xchg
inc
xchg
cmpsb
or
mov
or
adc
in
pop
or
add
rorl
add
les
mov
je
and
sub
inc
or
mov
in
xor
add
adc
xchg
mov
sahf
popf
in
daa
xor
ret
je
add
pop
sar
enter
ret
cmp
fsubr
mov
xor
in
push
sub
jg
add
mov
scas
and
mov
jmp
add
or
cwtl
fs
rcrl
and
jnp
jb
and
adc
xchg
or
adc
xlat
stos
add
adc
xchg
mov
sahf
popf
in
daa
xor
ret
pop
clc
movsb
add
insb
push
jmp
jl
icebp
jo
mov
pop
dec
adc
or
xlat
mov
jnp
subb
mov
aam
pop
jno
jecxz
fld
and
sbb
rcrb
cmp
sub
xor
lods
iret
jb
mov
add
ja
mov
jnp
ds
add
in
jecxz
out
fisubl
pop
fistpll
pop
push
aas
and
negl
sub
push
test
sub
cwtl
loope
push
ljmp
clc
std
dec
jne
add
and
adc
xchg
or
adc
leave
pusha
and
inc
adc
jg
shrl
add
cwtl
xor
subb
ds
clc
mov
cmpsl
das
or
pop
mov
jmp
inc
push
push
xchg
mov
and
jae
out
and
push
mov
iret
pop
js
inc
xchg
adc
sbb
dec
repz
mov
mov
jne
xchg
xor
pop
pushf
add
cld
adc
mov
push
test
jb
jmp
lahf
sbb
jp
dec
xor
push
pop
int3
inc
ror
jb
jmp
dec
or
icebp
push
cld
cmpsb
inc
fbstp
push
mov
repz
mov
in
cltd
sti
jnp
fisttpl
jmp
inc
jnp
fsubr
insb
and
xor
int
int
pop
cltd
push
ja
sub
rcll
mov
mov
mov
imul
jns
cwtl
and
adc
cmp
dec
repz
mov
push
out
jb
adc
imul
mov
pop
movsb
sahf
cwtl
cmp
cmp
adc
fcomps
xor
xchg
stos
sbb
in
push
add
test
insl
mov
fcomps
icebp
mov
testl
in
mov
test
fstl
mov
push
test
sahf
fcompl
pop
ret
movsb
xchg
and
cli
inc
std
out
dec
aam
fisttpl
inc
and
fs
lds
out
pop
arpl
stos
push
gs
cwtl
sbb
jb
jp
sub
lds
jge
xchg
xchg
xor
add
inc
jb
loopne
and
ret
pop
mov
mov
mov
mov
lcall
movb
adc
push
dec
inc
and
insb
xchg
daa
sub
fmuls
xcrypt-ofb
cmpsl
jmp
xchg
out
out
cmp
mov
mov
xchg
sbb
dec
daa
rcrb
or
sub
test
or
jno
or
add
lcall
xor
jne
in
leave
aas
pop
mov
sti
inc
leave
in
xor
fldl
fdivrp
push
ds
sub
fldl
fdivrp
add
cmc
and
ss
in
mov
xchg
stos
lods
paddb
mov
mov
out
cmp
inc
stos
cli
mov
push
pop
data16
loopne
sub
repnz
ja
ficoms
xchg
shrl
adc
sub
sbb
ds
dec
loop
cs
fildll
jb
push
das
pop
pop
repz
add
cld
mov
mov
stc
sub
cld
sub
les
jp
fwait
inc
dec
sbb
push
lret
or
mov
ret
mov
shll
cmpsl
shlb
xchg
mov
out
loope
fdivrl
pop
jp
lret
and
mov
jne
js
xor
and
jnp
cwtl
test
pop
rclb
into
jb
lcall
and
sbb
sarb
mov
pop
dec
sub
jb
sub
cld
loopne
adc
into
cmp
xchg
and
jecxz
stos
aam
sbb
fsubrs
mov
mov
lcall
data16
or
or
xor
mov
lods
shlb
mov
mov
jo
xlat
ficoml
xchg
outsb
addr16
pushf
or
negb
fistpl
fisubrl
stc
nop
pop
sub
aam
fmull
sbb
aas
xlat
rcll
xor
sti
pop
incl
lods
shrl
mov
sub
add
mov
scas
pop
mov
sub
xchg
js
sub
push
ds
rclb
ja
ss
xchg
negl
dec
mov
cmp
movsb
and
sub
aam
stos
loope
leave
mov
leave
divb
call
dec
push
fwait
leave
in
inc
rclb
jnp
fstp
add
cmpl
fimull
adc
xchg
add
mov
in
add
cmp
repz
or
and
xor
daa
call
hlt
and
dec
push
sahf
push
and
lcall
push
aam
dec
pop
mov
lahf
or
adc
sub
pop
sub
hlt
pop
add
mov
mov
les
addl
pop
sbb
or
cmp
cmp
inc
inc
loopne
mov
aas
bound
pop
xor
xchg
sbb
mov
xor
ss
dec
test
or
leave
imul
in
jne
negb
lcall
cmc
adc
mov
insl
fbstp
sarb
jl
pop
cmp
leave
fsts
pop
cmp
mov
xlat
and
and
adc
aaa
js
inc
xor
and
popf
imul
fs
mov
mov
ljmp
imul
fwait
jnp
mov
cmc
outsb
and
xchg
test
pop
jo
mov
add
fdiv
add
push
add
and
out
or
mov
pop
mov
xor
xor
jbe
mov
cltd
and
sbbl
fnstsw
ja
mov
sbb
fsubr
and
aad
cld
imul
out
lret
push
gs
loope
jns
stos
dec
sub
cmp
xor
push
cli
lock
stos
sbb
jp
jl
in
jecxz
repz
int
mov
push
dec
inc
and
pop
pop
sti
mov
add
fwait
adc
push
aaa
adc
xor
cltd
in
testb
loopne
pop
lds
movsl
pop
cmp
pop
cli
push
out
or
out
xchg
mov
repz
in
push
dec
in
cmp
pop
outsb
sub
cmp
xchg
int3
ret
lock
jecxz
repz
cld
rcl
inc
jb
sti
xchg
mov
xor
popf
rcll
mov
loopne
pop
lds
cs
mov
cmp
adc
out
xchg
mov
repz
mulb
mov
fisttpll
jne
sub
inc
adc
inc
jno
push
pop
inc
cmp
orb
dec
repz
pop
sahf
nop
bound
push
mov
pop
daa
jl
inc
rolb
sub
xchg
int3
ret
lock
xchg
mov
dec
inc
jl
and
pop
sbb
add
jmp
testb
adc
dec
lds
mov
lcall
push
loop
sbb
jne
notl
jle
or
mov
lahf
insb
dec
add
pop
xchg
xor
popf
data16
mov
xchg
mov
and
adc
scas
pop
pop
or
jne
mov
push
cmpsl
sbb
icebp
or
dec
inc
and
pop
pop
sti
mov
push
scas
add
test
cmp
cmp
testb
js
pop
rolb
es
aad
dec
lret
xchg
imul
repz
push
xor
inc
sub
cmp
and
mov
dec
add
ljmp
cltd
mov
mov
lret
xor
outsl
ss
inc
jl
and
pop
sbb
pushf
push
inc
and
pusha
push
jmp
ss
clc
push
cwtl
test
sub
cmp
mov
insl
testb
adc
or
jg
mov
lcall
pop
outsl
xchg
frstor
sbb
mov
mov
adc
fistpl
xchg
js
xchg
mov
repz
repz
mov
stos
in
jecxz
repz
adc
pop
pop
sarl
push
addr16
mov
jo
mov
sbbl
out
and
out
cmp
mov
cmp
into
push
sti
mov
pop
adc
lahf
adcb
inc
mov
lock
xchg
add
shrb
push
xchg
int3
ret
lock
testb
les
adc
xchg
adc
adc
adc
mov
adc
xchg
and
jo
call
mov
mov
pop
movsl
inc
mov
mov
or
mov
pop
imul
xchg
aas
mov
hlt
mov
inc
js
movsb
ljmp
addr16
mov
dec
test
rol
addr16
mov
iret
cmc
sub
mov
fsubrl
mov
dec
inc
out
imul
inc
mov
test
or
sub
xor
adc
sbb
or
dec
push
sbb
leave
fsts
pop
cmp
movsl
out
or
jo
xor
xchg
xchg
jge
and
out
std
and
xchg
sarb
jmp
fimull
shll
leave
movsb
or
or
movsl
mov
xor
mov
sti
vmptrst
xchg
mov
lds
mov
leave
fsts
pop
cmp
stos
add
adc
xchg
mov
sahf
popf
in
daa
xor
ret
pop
rcrb
xchg
or
roll
cmc
es
and
ficomps
xor
mov
mov
movmskps
sub
push
push
enter
jp
mov
adc
lcall
out
sbb
js
test
loop
std
ja
xlat
mov
out
pop
sub
jne
pushf
shrb
dec
dec
inc
mov
fsubrl
xchg
cli
dec
xor
adc
pop
int
push
mov
cmp
adc
addl
stc
jbe
adc
stos
cmc
cli
decb
adc
jp
sbbb
mov
mov
xchg
out
sbb
ret
in
jo
cwtl
nop
and
inc
push
repz
in
ret
mov
ret
inc
jmp
cmpsb
loop
sub
rcr
cmp
cmc
mov
lds
mov
inc
inc
lods
jns
call
aas
nop
sub
rorl
sbb
pop
std
push
aad
fstpl
ljmp
mov
jno
jno
stc
nop
rorb
and
jo
aam
mov
cmp
loop
xor
cmp
cmp
inc
mov
add
or
and
pop
test
push
dec
add
rcrl
add
int
into
stos
test
aas
mov
xchg
imul
shl
pop
jmp
cltd
fimull
mov
ds
jmp
dec
pop
push
fistps
lcall
mov
xchg
cmpsl
ret
and
adc
cmp
adc
xor
mov
push
add
cmpsl
pop
and
mov
lret
mov
and
dec
pop
push
cmpsl
aas
in
aam
sub
aad
dec
xchg
mov
sbb
rcll
cli
push
push
data16
loope
push
add
fmul
repz
shlb
into
inc
mov
or
jle
shld
adc
rcll
mov
divb
sti
lods
testl
push
inc
and
mov
in
push
movsb
in
xchg
and
loope
lcall
hlt
lret
sub
mov
shlb
xchg
lds
fs
gs
cmpsb
ljmp
movsb
jmp
test
imul
sti
mov
fstps
add
daa
push
xchg
loopne
or
adc
imul
jnp
or
cmp
mov
jo
outsl
inc
ss
scas
stos
jmp
lret
pop
sub
hlt
dec
stc
enter
fidivl
xchg
cmpsl
jb
mov
test
fnstenv
loop
push
lds
sub
dec
push
mov
shlb
mov
dec
testb
stos
cmp
out
mov
out
out
push
enter
enter
lcall
repz
adc
icebp
and
or
adc
pop
in
mov
sub
mov
outsl
fwait
jecxz
vpaddusw
push
push
mov
adc
outsb
pop
inc
cmp
cwtl
add
push
fdivrs
shr
inc
cmp
lock
enter
or
adc
int
sub
adc
push
insb
hlt
xchg
or
or
or
jmp
shrl
addr16
sti
ficomps
xor
and
aas
mov
outsb
push
cmp
dec
pop
flds
out
mov
cmp
inc
adc
pop
shlb
xchg
fsts
pop
cmp
jle
nop
les
popf
cmpsl
dec
sub
pop
mov
inc
push
clc
sub
adc
mov
mov
mov
jbe
cmp
mov
jnp
add
into
and
lods
or
adc
mov
jle
nop
les
popf
cmpsl
dec
sub
pop
mov
inc
push
push
push
ss
cmp
push
jecxz
dec
les
cmp
mov
jnp
add
into
and
lods
or
adc
enter
inc
fstpt
in
sbb
jo
stos
push
test
add
jno
adc
rorb
cmc
in
xor
popw
fiaddl
cmp
shl
stc
sub
sub
add
test
pop
fbld
sub
les
mov
mov
mov
insb
stc
stos
repnz
dec
jl
or
or
sub
push
push
inc
rorb
adc
repz
add
lret
xchg
enter
cmc
inc
xchg
mov
stc
jbe
mov
repnz
into
push
les
xchg
jo
pop
push
xchg
add
inc
repnz
mov
inc
xchg
xchg
loopne
daa
cmpsb
mov
mov
testb
pop
shlb
mov
push
sbb
adc
sub
test
dec
dec
push
in
or
mov
movsl
xor
cs
out
out
push
shlb
data16
cmp
sub
push
mov
and
mov
js
jbe
icebp
arpl
rcrb
add
dec
test
data16
out
jnp
outsl
or
jg
push
push
inc
rorb
adc
pop
or
xor
insb
adc
xchg
subl
jecxz
call
jae
xor
movsl
cmp
dec
jle
aad
aas
mov
loope
fcompl
fidivs
mov
push
xorl
out
or
adc
jecxz
pop
flds
mov
fstpt
in
inc
jle
pop
jno
loope
dec
sbb
pop
mov
cld
subl
add
adc
pop
jmp
aam
jp
pop
lods
iret
pushl
pop
jno
loope
dec
pop
scas
cli
add
and
bound
dec
and
ss
pop
pop
shrb
fnstsw
xchg
push
scas
ret
mov
xchg
fsts
pop
cmp
inc
pop
inc
push
stos
add
mov
cmpsl
pop
adc
stc
push
xchg
push
jp
push
outsl
repnz
pushf
xchg
and
mov
pop
xchg
dec
xchg
mov
lds
loop
in
mov
mov
mov
xchg
push
test
mov
push
inc
push
fmuls
jecxz
pop
and
out
in
sub
mov
shll
or
mov
imul
add
mov
lds
cmp
jmp
inc
repz
cltd
xlat
out
and
rol
xlat
dec
test
add
cmp
lods
mov
push
xorl
jp
push
ds
daa
pop
ret
aaa
sub
mov
in
shrl
roll
xchg
arpl
std
jp
push
ds
jg
push
push
inc
rorb
adc
test
into
repnz
xchg
sbb
push
sub
inc
test
xor
or
fs
push
jecxz
mov
ret
imul
and
xor
in
inc
xorl
out
sbb
pop
addr16
stos
aas
cmpsl
push
icebp
xchg
inc
ret
shrb
push
inc
push
movsl
adc
dec
in
ret
mov
xchg
shrb
xchg
push
sub
outsb
pop
testl
aaa
out
pop
inc
inc
enter
and
mov
xchg
sub
lods
js
add
push
mov
sub
cltd
or
test
pop
stc
js
ja
mov
popf
and
stos
pop
mov
push
inc
icebp
mov
mov
add
or
rcrl
mov
xor
lods
scas
imul
or
ret
jl
push
int
push
mov
rclb
adc
mov
clc
mov
sub
ret
cmp
jecxz
repz
mov
mov
nop
cmp
inc
sbb
push
testl
xlat
mov
add
push
adc
fidivrl
inc
ja
jns
clc
push
mov
dec
sub
andb
xlat
inc
sub
inc
mov
dec
add
jb
adc
rorb
xchg
xor
into
andl
mov
es
xor
lock
mov
jmp
imul
dec
je,pt
ffreep
jp
repnz
popa
sub
cmpsb
int
stc
shll
int3
adc
fs
fcmovnb
push
ljmp
xchg
fs
sahf
mov
mov
subl
inc
std
nop
mov
sarl
decl
enter
aas
xchg
imul
js
and
cs
mov
jno
int3
aam
dec
sbb
inc
and
sub
push
jnp
or
adc
test
mov
pop
nop
and
out
das
mov
in
movsb
sbb
jmp
lret
mov
rclb
cs
cmpsb
jp
jp
xor
hlt
sbb
pushf
aam
push
and
push
dec
fdiv
test
clc
pop
xor
mov
jns
lds
lods
je
sbb
lret
xchg
js
fdivl
dec
test
bound
test
jg
push
add
imul
pop
int
and
pusha
shr
stc
dec
out
outsl
std
and
out
loop
mov
movsb
in
lods
fisttps
je
and
ret
ds
cmpsb
shlb
test
jl
dec
mov
pop
fwait
mov
das
sti
loop
dec
outsb
lods
rdtsc
cmpsb
dec
xor
and
inc
jmp
or
adc
lcall
fstpt
push
in
ret
call
cli
pop
sub
mov
mov
decl
daa
out
push
push
pop
push
sbb
sbb
fdivl
iret
add
leave
lcall
fstps
sahf
and
loope
sbb
adc
add
push
cmpsb
xchg
arpl
sbb
movsb
pop
cs
xor
mov
fwait
ss
xchg
sbb
imul
mov
arpl
push
pop
mov
repnz
jmp
ds
jnp
fbstp
out
pop
call
outsl
pop
xchg
or
lods
jbe
aaa
xchg
mul
pop
mov
inc
pop
and
jecxz
daa
enter
jnp
xchg
cmpsl
ficomps
ret
add
popa
mov
imul
outsb
loop
xchg
pop
arpl
das
inc
mov
jge
sar
rep
push
mov
mov
mov
test
repz
push
scas
sti
ret
out
into
dec
and
sub
jo
cmp
and
adc
cmp
or
pop
test
or
movsb
mov
lret
sub
pop
and
rclb
adc
mov
mov
sti
mov
cmp
sub
std
decl
sub
lcall
mov
jne
add
xor
jne
fstps
and
jecxz
call
adc
push
and
pop
jne
aaa
bound
mov
xchg
cli
fwait
movsl
and
bound
and
std
add
fstps
les
call
fnstsw
cltd
dec
sub
sbb
push
mov
mov
imul
orl
mov
mov
lods
cwtl
lahf
xchg
and
mov
and
lret
gs
sub
pop
sub
std
decl
sub
lcall
mov
jne
add
xor
jne
fstps
and
jecxz
call
adc
push
and
pop
jne
aaa
bound
mov
xchg
cli
fwait
movsl
and
bound
and
std
add
fstps
fsubs
mov
push
push
rcll
movzwl
jg
ret
push
lods
inc
mov
cmp
or
ret
sub
pushf
xorl
leave
idiv
les
loop
jg
sub
lcall
mov
jne
add
xor
jne
fstps
push
mov
xchg
inc
pop
in
xor
ds
pop
jne
aaa
bound
mov
dec
jbe
push
jmp
jne
test
ret
push
dec
lar
jge
xor
push
out
pop
add
push
mov
xchg
cmp
popf
jl
aaa
mov
mov
cmp
add
mov
pop
loopne
cmpsb
fimull
pop
hlt
fs
jb
pop
mov
call
mov
insb
lret
push
call
sahf
jle
add
ss
fildll
js
rcrb
scas
cmp
cmp
cmp
fidivs
sub
sarb
jnp
daa
mov
xchg
xor
pop
pop
leave
xchg
add
leave
rcr
cmp
jns
lods
cwtl
push
mov
mov
imul
add
outsb
jmp
pusha
sti
cmpb
lds
fstpt
jg
mov
adc
inc
mov
mov
sbb
ret
out
inc
cwtl
sbb
xor
and
xor
xchg
outsl
add
arpl
pop
mov
jmp
xlat
and
into
mov
adcl
loope
divb
mov
shrb
aaa
mov
loop
scas
sti
ret
out
movsb
std
aas
sahf
imul
aam
push
jae
inc
scas
fidivs
rorl
stc
ja
pusha
fs
and
or
sbb
adc
je,pt
cmp
mov
inc
push
sbb
adc
mov
data16
push
fcmovb
sub
sti
loope
inc
notl
push
into
daa
movsb
mov
push
hlt
add
sbb
adcl
or
push
add
xlat
xchg
dec
mov
or
sarb
loopne
jl
add
xor
ss
xchg
mov
xor
add
test
jg
ret
push
lods
inc
mov
cmp
or
ret
cmp
fsubs
xor
insl
lea
sbb
sub
lcall
mov
jne
add
xor
jne
fstps
push
mov
xchg
inc
pop
in
xor
ds
pop
jne
aaa
bound
mov
sarb
ds
flds
out
mov
stos
lods
and
dec
jnp
das
ja
xchg
out
mov
dec
enter
push
cmp
stos
xor
shll
sbb
out
jnp
leave
xchg
lret
mov
movsl
adc
adcb
test
mov
imulb
jb
ror
xor
mov
js
push
shlb
jns
pop
shlb
stc
fmull
fcmovu
es
cmpl
xchg
bndstx
pop
lods
lea
or
and
push
or
in
mov
add
mov
adc
adc
das
dec
pop
mov
cmp
push
mov
mov
fdivrp
push
add
adc
inc
es
jne
xchg
jo
loopne
sar
cmp
cwtl
fistpl
and
ret
fsubrs
lods
and
add
adc
xchg
xchg
shll
dec
ss
add
arpl
adcl
imul
mov
add
mov
adc
adc
das
dec
pop
mov
cmp
push
mov
mov
fdivrp
push
add
adc
inc
es
jne
xchg
jo
loopne
sar
cmp
cwtl
fistpl
and
ret
fsubrs
lods
and
add
adc
xchg
xchg
shll
dec
hlt
addr16
out
mov
sbb
jecxz
hlt
shlb
fcoml
out
cwtl
sbb
push
jp
in
jle
pop
pop
push
push
jmp
je
sahf
movsl
pusha
jle
dec
icebp
ss
and
add
dec
in
movsl
cmpsl
cli
into
mov
and
outsb
add
mov
test
out
or
inc
fmull
xor
pusha
cmp
xor
add
fildl
sti
mov
pop
mov
scas
cmpsl
cltd
cmpsl
and
sbb
js
stos
sti
or
sar
scas
add
inc
lods
pop
mov
cli
sbb
test
sub
mov
inc
pop
push
mov
inc
dec
push
mov
ss
and
xchg
roll
mov
dec
mov
enter
cmc
popa
imul
outsb
pushl
push
lods
insl
lock
xchg
jo
mov
xchg
js
sar
mov
rcll
jp
or
xchg
mov
pusha
jns
pop
and
lea
shl
pop
add
mov
xor
scas
mov
sti
inc
cmc
mov
stc
sub
insb
sti
sub
lods
test
pop
xor
sbb
in
add
out
dec
pop
inc
ret
mov
sub
push
push
inc
rorb
mov
int3
mov
mov
es
or
imul
dec
fistpll
call
arpl
mov
dec
pop
das
pop
fsubp
shr
cmp
mov
div
inc
push
popa
loope
xor
loope
cmpsl
enter
jnp
rcll
dec
hlt
jp
adc
and
xor
std
and
in
inc
pusha
pop
and
out
sahf
sarl
jmp
xchg
imul
out
bound
jnp
sti
mov
cmp
fisubrs
pop
add
mov
pop
mov
insb
xchg
incb
mov
jb
push
add
xlat
mov
mov
roll
jg
loop
and
sbb
jb
or
shll
rolb
call
daa
popf
mov
cld
call
fildl
push
ja
jnp
and
and
in
inc
pusha
pop
and
out
sahf
sarl
jmp
xchg
imul
out
bound
jnp
sti
mov
cmp
fisubrs
pop
add
fstpl
mov
dec
mov
mov
sti
mov
mov
and
adc
xchg
push
sub
push
pop
dec
das
repz
cmc
pop
in
lds
in
push
out
popf
jne
add
loope
out
fistpll
or
sarl
jmp
xchg
imul
out
bound
jnp
sti
mov
cmp
roll
cmpsl
push
test
mov
add
cli
stos
rol
jge
jnp
pusha
daa
out
rol
fistpll
sub
cmp
jp
pushf
rclb
outsb
out
fwait
xor
imul
decl
xchg
add
sbb
dec
dec
sahf
dec
adc
jge
lock
test
pusha
and
sbbb
mov
push
inc
mov
push
subb
mov
sbbb
ss
cld
push
dec
pop
push
jecxz
jnp
test
pop
push
adc
dec
into
mulb
enter
jae
fcmovnb
push
lcall
cwtl
dec
lret
pop
movsl
adcb
sub
dec
stos
sub
xchg
int3
loope
xor
or
int
add
out
sbb
push
pop
ret
andb
inc
negl
xor
add
sbb
iret
xchg
mov
int
stos
jmp
mov
or
mov
push
sub
cmp
and
xchg
pop
fucom
push
jae
adc
mov
mov
lock
add
mov
imul
push
mov
popa
aas
in
jno
xchg
jmp
rcrl
jae
push
outsb
mov
dec
rol
jge
jnp
pusha
daa
mov
xchg
xor
lods
sub
aad
jl
push
stos
data16
ret
pushl
jg
pushf
xor
xchg
push
sbb
mov
cmp
and
add
mov
out
movsb
cld
bound
fidivrs
sub
mov
fstpt
cmc
bound
mov
mov
movsl
mov
add
cmp
mov
push
pop
cmpsl
out
cli
jecxz
xchg
das
stc
lods
cs
mov
or
test
or
shr
and
and
dec
mov
aad
push
cmp
push
jg
cltd
xlat
mov
pop
xchg
pop
lea
scas
repnz
inc
mov
aam
or
sub
test
or
adc
pop
push
leave
xchg
jecxz
sarb
dec
push
ret
std
xchg
mov
adc
xchg
in
xor
ss
inc
test
sub
and
cmc
adc
inc
mov
lock
ds
loope
cltd
insl
sub
add
sub
loopne
lahf
xchg
push
jecxz
stos
je
js
add
mov
and
push
ja
pop
repz
aad
cmp
movsb
fwait
add
mov
sbb
push
sbb
or
adc
loopne
jle
cmpsb
fimull
cmp
pop
adc
sti
add
add
stos
push
or
out
xor
cli
dec
cmp
fsubs
push
ljmp
int
xchg
mov
jl
xor
inc
push
stos
rorb
mov
fidivrl
mov
mov
sub
sti
adc
lods
xchg
xor
loop
loopne
std
or
jg
xor
jg
int
iret
scas
xchg
or
adc
loopne
jle
cmpsb
fimull
adc
out
adc
add
adc
aas
mov
xchg
rcrb
pop
xchg
sbb
mov
lret
add
into
inc
daa
sbb
push
jae
mov
loope
cmpsl
call
xor
mov
mov
xor
xchg
fsts
pop
cmp
insb
cmpl
xchg
push
scas
jecxz
clc
dec
lcall
mov
loope
mulb
sbb
push
lods
test
test
mov
out
or
push
ds
mov
out
sbb
repz
pop
pusha
ret
push
fstpt
sbb
shll
enter
xor
lock
and
push
inc
lods
jl
sub
add
pop
pop
sti
sbb
mov
pop
xor
cmp
inc
sub
test
xor
lds
ret
movsl
xor
mov
inc
or
jle
adc
xor
mov
or
mov
and
sub
and
inc
leave
lods
test
pushf
out
xchg
inc
push
dec
jp
push
jle
cmp
aaa
pop
dec
jmp
lret
mov
push
fisubl
das
dec
mov
ret
sub
imul
lea
je
repnz
call
push
xor
xchg
unpcklps
jb
ret
xor
dec
push
cs
arpl
lret
sbb
xchg
enter
push
inc
or
andl
mov
dec
or
inc
popf
jg
or
inc
clc
and
sbb
mov
sbb
sar
mov
push
lea
xor
or
scas
adcb
aam
inc
push
popa
sbb
fdivl
adc
jo
inc
fmul
sub
mov
imul
imul
nop
mov
add
loope
cmp
jl
mov
jns
mov
pop
les
test
clc
jl
loop
fidivs
hlt
mov
lea
sti
sub
and
stc
das
xlat
or
push
sub
gs
xchg
leave
push
aad
out
arpl
test
popa
push
cld
cmp
test
test
cmc
sbb
xchg
adc
or
int3
inc
leave
cs
hlt
icebp
mov
hlt
popa
divb
xor
insl
lret
mov
mov
lock
mov
add
xchg
sbb
cwtl
xor
mov
mov
pop
mov
and
imul
aam
loope
mov
lret
inc
jb
mov
jno
loop
mov
cmp
xorb
and
fistps
out
rorb
inc
enter
add
ss
fcmovu
clc
add
and
pop
daa
fsubl
jne
fsts
pop
cmp
inc
xchg
mov
xchg
gs
xchg
mov
ja
lods
xchg
push
dec
dec
xchg
and
push
test
jbe
shlb
mov
mov
pusha
int
push
cmp
in
scas
push
mov
orl
orl
inc
ret
xchg
or
xchg
popf
add
cmpsl
popf
inc
cmpsl
mov
mov
sbb
push
jbe
mov
sub
and
mov
cmpsl
jno
lods
mov
es
add
xchg
stos
add
cs
imul
xlat
hlt
add
pop
push
stc
out
insl
lahf
fisubrs
xor
sbb
mov
adc
or
adc
dec
adc
or
adc
es
cmc
adc
push
imul
pop
or
jno
pop
inc
imul
ret
gs
adc
testb
rcr
inc
aad
iret
jge
movsl
shlb
inc
add
movsb
jns
jl
inc
dec
jo
pop
push
xchg
push
cmp
mov
lea
sti
dec
hlt
movb
cmp
cmpsl
jmp
cmp
jg
les
lea
insl
adc
lods
idiv
adc
jmp
fadd
xchg
pop
pop
stc
aam
pushf
dec
push
xor
loop
es
fimull
jp
push
addr16
or
adc
jle
xor
aad
arpl
stos
push
test
mov
sbb
mov
jg
cmp
jae
ret
pusha
test
jle
pusha
sarl
call
xchg
xor
mov
stc
mov
pusha
cwtl
dec
cmp
stos
mov
cmp
pop
sahf
adc
ss
test
push
stc
sub
lods
js
call
jns
in
adc
sti
stos
pop
rorl
or
xchg
pop
jp
aam
sbb
insl
mov
adc
jl
jnp
jmp
popa
inc
xlat
mov
xor
jns
jb
and
je
add
push
loope
fs
cmpsl
js
cmp
xchg
xor
mov
or
in
sub
mov
sbb
arpl
loopne
daa
dec
fsubl
cli
mov
push
cltd
test
push
sub
insb
ljmp
pop
loopne
imul
sbb
leave
stc
scas
outsl
sub
mov
dec
xchg
add
mov
cmpsl
xchg
jns
faddl
pop
jo
mov
cmpsb
add
pusha
ja
js
inc
mov
data16
sub
mov
mov
leave
mov
pop
out
pop
ss
in
pop
data16
es
cmpsl
mov
outsb
fsub
stos
xchg
mov
out
bnd
xchg
out
pop
dec
pop
push
jmp
and
ret
outsl
sub
mov
mov
arpl
pop
or
out
outsb
mov
dec
cmp
xchg
xchg
fisubl
hlt
mov
sub
scas
mov
jbe
cwtl
fistpl
and
ret
fsubrs
lods
and
add
mov
and
insl
shll
and
test
push
cmp
insl
clc
dec
adc
mov
xor
pop
data16
testb
shrb
sub
test
or
js
xchg
jg
rcr
pop
mov
xor
test
mov
mov
inc
xchg
mov
or
push
mov
mov
into
jne
push
ret
lods
mov
nop
and
lea
fwait
iret
cmc
mov
jmp
xchg
xchg
mov
jp
or
aam
std
out
cmp
dec
cmpsb
cmpsl
mov
jne
jae,pt
and
movaps
push
adc
mov
mov
xor
inc
movdq2q
mov
cwtl
push
data16
into
jne
push
ret
insb
push
movb
xchg
push
enter
faddp
mov
repz
jae
sbb
pop
insb
mov
lret
jbe
sbb
out
out
add
push
aad
stos
stc
je
pusha
je
sub
scas
jge
xchg
out
push
sub
push
movsl
dec
adc
cli
mov
cmp
imul
sbb
push
ljmp
mov
mov
lcall
jne
mov
adc
negl
dec
call
lods
push
lar
sbb
jae
testb
jp
add
faddl
inc
dec
pop
repz
clc
fsubs
lds
xchg
daa
or
adc
inc
xor
dec
sbb
mov
xor
adc
test
arpl
insb
out
pop
in
push
ror
movsl
dec
jl
lea
dec
fcmovu
or
dec
out
jp
sbb
addr16
imul
mov
jecxz
jge
xchg
out
push
sub
push
movsl
dec
adc
cli
mov
cmp
imul
sbb
push
ljmp
mov
mov
lcall
jne
mov
adc
negl
dec
call
lods
push
lar
sbb
jae
testb
jp
add
faddl
inc
pop
cmpsl
mov
fidivs
sub
outsb
and
jge
xor
inc
repnz
xchg
cmp
jl
and
in
popf
movl
int
inc
dec
movsb
pop
fs
mov
call
xchg
ret
mov
in
push
je
ljmp
xchg
cmpsb
xchg
sub
pop
pop
push
push
mov
out
add
imul
mov
jmp
and
mov
jb
xchg
stos
mov
jp
ss
mov
add
mov
loop
loope
test
adc
sbb
xchg
hlt
mov
movsl
push
mov
ja
push
jge
or
push
push
orb
shr
sub
lret
pop
nop
lods
into
fwait
shlb
dec
daa
enter
jge
std
fdivs
mov
mov
and
cmp
sub
mov
adc
jl
insl
jo
cmp
dec
xchg
test
into
jbe
mov
add
loopne
mov
nopl
gs
ljmp
jno
rcll
cli
push
shll
ss
and
loopne
in
ror
sub
and
arpl
and
shrl
lds
push
xchg
pop
sbb
jecxz
pop
cmp
nop
stos
mov
repz
cmpsb
insb
pop
cmp
sbb
pop
orl
dec
push
cmp
dec
std
jmp
ss
loopne
lret
scas
xchg
sub
aas
pop
outsb
pop
xor
xchg
sbb
movsbl
lds
fcoml
ret
cli
dec
mov
or
xor
pop
aas
cmpl
flds
sbb
in
testb
pop
test
sti
xchg
cmpsl
pop
xchg
or
shlb
mov
ss
jmp
add
push
data16
dec
mov
addr16
push
lcall
inc
cmp
popa
pushf
popa
icebp
pop
push
jne
les
add
pop
push
jle
fwait
xchg
hlt
mov
movsl
push
mov
ja
push
jge
or
push
push
inc
lock
pop
jp
lahf
sbb
fwait
pop
nop
lods
into
fwait
shlb
dec
daa
enter
jge
std
fdivs
mov
mov
and
cmp
sub
cld
dec
dec
loope
lds
lods
hlt
adc
aad
mov
add
popa
sub
ljmp
rorl
mov
mov
adc
pop
loope
test
dec
jmp
jp
sub
pop
xchg
sub
adc
mov
push
mulb
fiaddl
lret
push
lcall
rcrb
push
lock
mov
sub
and
test
sbb
dec
mov
lock
inc
adc
js
lods
jg
sbb
rorl
push
loope
mov
testl
adc
cmpsb
xor
cmpsl
or
cmp
stos
test
or
enter
shrb
fdivs
adc
lea
xorb
jecxz
dec
xchg
push
jne
xchg
inc
dec
les
inc
mov
dec
iret
scas
xchg
lcall
lret
fs
repz
push
ds
gs
ss
imul
in
sub
and
popa
jns
inc
test
outsb
lock
cmpsb
xchg
mov
test
rorl
int
jle
sub
jo
sarb
sbb
cmpsb
mov
lret
xor
repnz
mov
jae
mov
jbe
fstps
paddw
int
fists
sub
das
jmp
inc
xor
mov
lahf
ss
aam
cmpsl
fiadds
inc
test
mov
adc
sbb
mov
sbb
mov
dec
ret
jge
mov
mov
and
adc
jp
cli
mov
and
addr16
popf
std
lcall
in
cmp
loop
fsubs
and
fsubrs
cld
sbbb
lcall
aaa
clc
outsb
rcrl
xchg
lods
mov
lods
arpl
mov
or
inc
mov
and
fcoml
clc
outsl
lret
mov
push
nop
adc
fcoml
cmp
jmp
and
icebp
cld
mov
pushf
jns
pop
sbb
jo
pop
pop
insb
leave
in
add
dec
icebp
test
movsb
mov
addr16
icebp
in
stc
add
test
add
aaa
sub
mov
std
xor
dec
add
cs
push
inc
addr16
push
lcall
lcall
addr16
push
loopne
jl
sub
jb
mov
ja
test
das
ja
test
test
lcall
mov
jecxz
in
in
xchg
mov
add
fmulp
mov
xchg
in
mov
mov
add
adc
xor
pop
mov
fisubrs
push
cwtl
inc
je
or
push
cli
pusha
fisubrs
pop
dec
pop
mov
jae
fists
subl
lret
mulb
add
mov
sbb
mov
int3
scas
int3
sub
out
inc
mov
rcll
jne
out
mov
aam
daa
mov
sbb
test
sbb
dec
es
sub
push
divl
inc
std
xchg
pop
sub
xchg
and
inc
pop
fcomi
add
jg
mov
in
adc
mov
in
fsubs
or
shrl
pop
outsl
sarb
js
sub
inc
lock
pop
movsl
test
test
stos
fisttpl
push
clc
addr16
xchg
jg
outsl
fyl2x
aam
imul
hlt
sbb
sub
adc
cmp
sub
adc
out
jb
push
mov
stos
sub
hlt
js
dec
or
xor
shlb
stc
jle
push
add
iret
jne
data16
lret
lock
cmp
dec
pop
fsub
adcl
shl
dec
addr16
mov
jns
fsubrl
dec
lret
jmp
fs
jge
sbb
aas
inc
cmpb
rcr
pusha
std
in
sbb
into
mov
mov
lret
cmp
cmp
xorl
ds
imul
push
add
xchg
ss
icebp
test
nop
cmp
adc
ljmp
pop
loopne
pop
xchg
gs
stc
lods
ja
jnp
repnz
imul
add
xchg
dec
pop
fsubl
aam
jns
fdiv
enter
mov
xor
dec
xchg
lcall
or
jo
mov
lock
daa
mov
imul
setge
push
inc
push
add
and
idiv
jae
mov
xor
loop
ficoms
stos
setge
lret
fcmovne
imull
mov
fadd
sbb
pop
jb
or
jmp
shrb
inc
das
daa
lcall
sbb
int
repz
rcrb
popf
jbe
add
into
adc
in
lcall
dec
cs
dec
push
fcoms
int
loop
dec
sbb
pop
xor
mov
popa
mov
repz
dec
js
jle
lahf
sub
jmp
mov
xor
loopne
inc
dec
xchg
inc
and
jle
mov
cmpl
sbb
aaa
inc
es
cwtl
cmp
lret
sub
jle
je
int3
push
or
jb
xor
push
push
jp
clc
popa
shr
lcall
fsubs
loopne
rorl
mov
cmp
int
adc
jmp
incb
xchg
popa
ret
lret
repz
mov
push
cmp
jo
sbb
mov
decb
adc
sti
jmp
imul
aas
nop
aad
out
mov
rclb
adc
fcomi
or
mov
mov
arpl
jle
xor
rcll
fidivrl
mov
mov
test
jne
sbb
pop
adc
sarl
add
xchg
in
in
jae
dec
jnp
pop
mov
call
ljmp
sbb
xor
or
fcompl
inc
and
sbbl
ja
cmp
dec
cmp
cs
push
or
xchg
mov
notb
fimuls
lret
aad
sbb
repnz
fmulp
movsl
je
fs
aas
pop
push
adc
sbb
mov
arpl
jb
jmp
arpl
xor
or
or
ja
imul
ljmp
jp
sub
stc
lds
add
notl
popa
and
jmp
gs
xor
sahf
ja
sahf
cmp
xchg
ljmp
mov
pop
hlt
push
test
scas
dec
sub
loopne
pop
aaa
arpl
sbb
xor
cmp
mov
test
shr
andb
sbbb
das
xchg
xor
gs
xor
mov
cmc
sti
rcrl
and
test
dec
movsl
out
sub
sbb
mov
or
cmp
hlt
and
xor
cmpsb
push
loopne
and
loope
inc
aam
pop
mov
or
sbb
stc
add
pop
add
aas
sbb
or
stos
mov
jg
int3
cmpsb
sbb
lahf
push
sub
ds
xor
add
ds
xor
cmpsb
mov
test
stos
or
bound
ret
push
faddp
je
mov
mov
stc
jmp
xor
jmp
bound
in
sub
dec
aad
pop
mov
dec
aas
or
sub
mov
mov
and
das
hlt
es
sbb
xor
stos
fwait
scas
inc
mov
ljmp
js
insb
jno
lret
and
imul
nop
xlat
xchg
or
in
pop
clc
adcb
add
sbb
in
shll
loope
sbbb
insb
jno
lret
and
int3
mov
add
xchg
vmovshdup
cs
outsb
cli
outsl
inc
jo
movsl
adc
lock
cld
push
cmp
std
and
cs
lds
lock
jle
xlat
inc
int
movsb
xor
les
xchg
mov
dec
sbb
xor
les
xchg
bound
movsl
jns
jmp
mov
sbb
xchg
in
je
pop
arpl
sub
mov
push
cmp
sbb
addl
out
jb
js
cwtl
jns
push
iret
xchg
ret
push
sub
jge,pn
inc
xor
ret
push
psllw
andb
aaa
mov
push
inc
cmp
xchg
push
add
out
ljmp
imulb
or
mov
ret
xchg
dec
fstpl
lock
sbb
outsb
inc
xchg
xchg
jmp
jns
ds
cmp
sub
jge
mov
aaa
loop
fistl
jne
fsts
pop
cmp
mov
jb
ja
or
push
or
lock
jnp
lahf
out
das
or
popf
inc
daa
xchg
sbb
dec
xchg
repz
push
fldcw
test
cmp
and
test
or
insb
dec
jne
lret
movsl
cld
and
std
movsl
pop
insl
inc
in
mov
out
mov
sbb
mov
out
arpl
dec
insb
enter
and
sbb
popw
roll
adc
cmp
ret
bswap
aad
jnp
lds
adc
push
xchg
mov
out
or
cmp
ds
jle
arpl
das
push
sub
sub
leave
jae
jle
fs
mov
mov
sub
and
jl
xchg
push
dec
loope
call
loop
cld
cld
xor
xor
scas
jne
and
dec
lods
and
xchg
movsl
and
testl
divl
or
xchg
outsb
scas
mov
adc
pop
cltd
pop
outsb
out
sbb
stos
mov
data16
cmp
dec
jno
hlt
das
aad
jns
pop
movsb
lahf
cmc
aam
imul
mov
scas
mov
mov
mov
dec
mov
ret
inc
xor
popa
pop
sahf
inc
jle
sbbl
fwait
inc
dec
xchg
jmp
aas
mov
in
fdiv
jecxz
imul
sub
lret
or
cld
or
or
mov
jmp
xchg
test
fisttps
push
xor
bnd
dec
ljmp
add
push
stc
imul
mov
mov
push
push
xchg
xchg
in
int3
mov
jle
jmp
and
sti
mov
dec
les
xchg
xor
mov
xlat
int
stc
addr16
notl
fnsave
add
mov
jb
pop
mov
xchg
test
fdivr
test
sbb
sbb
aaa
js
jbe
pusha
xor
into
es
add
or
gs
or
movsl
dec
inc
inc
xchg
mov
cmp
pushf
mov
in
outsl
ret
and
sbb
call
jp
lock
inc
in
jecxz
xorb
popa
sbb
cli
pop
sbb
push
jle
and
mov
push
xchg
pop
daa
pusha
jae
dec
jns
cmp
es
jle
xchg
push
daa
je
sbb
andb
aam
testb
loope
sbb
or
jecxz
aad
xor
or
out
jle
test
sbb
adc
fmull
imul
scas
adc
inc
bound
js
push
or
cmp
imul
sub
sub
jecxz
scas
aam
repnz
xor
lea
shll
pusha
jno
jnp
sbb
or
sbb
adc
adc
shrl
push
hlt
push
jg
in
dec
scas
mov
mov
push
fiaddl
cli
xchg
sti
mull
mov
divb
dec
cmp
cli
je
sbb
fucomp
fcoms
add
mov
movsl
mov
xchg
test
ret
jns
push
jae
cltd
push
jb
mov
call
out
imul
lret
movsl
mov
fcoml
mov
xchg
or
xor
cmp
push
rcrl
sub
mov
loope
dec
inc
in
mov
lahf
in
call
cmpsl
mov
add
inc
mov
daa
sbb
cmpb
dec
je
sbb
jae
inc
adcb
test
out
add
pop
adc
and
cmp
xor
add
ja
xchg
call
pushf
cmp
outsb
add
xchg
add
mov
xchg
fsts
pop
cmp
push
das
sub
data16
inc
lods
call
push
lret
mov
cmp
inc
in
nop
leave
out
dec
fnstcw
loope
into
mov
mov
stos
lds
mov
and
test
mov
mov
and
or
jg
push
push
inc
rorb
adc
mov
dec
xor
cmc
pop
int
cmpsl
ja
test
into
mov
mov
cs
inc
jg
or
test
dec
or
sub
nop
cmp
sub
shll
sbb
mov
xlat
shrl
jne
xor
push
pop
insl
push
push
sbb
jne
cmpsl
xchg
leave
and
jecxz
sahf
cmpb
xlat
scas
daa
hlt
bound
pop
cmp
insl
inc
add
mov
adc
lret
lret
shl
ss
notl
sub
xchg
cmp
add
rorb
xor
inc
out
fnsave
dec
inc
or
in
ret
cmp
pop
clc
push
pop
sub
jbe
or
or
dec
pop
fadds
mov
pop
test
push
fs
stc
mov
inc
push
mov
add
addr16
jo
mov
in
or
adc
repnz
fcmove
mov
or
dec
addb
push
movsl
mov
pop
jp
jmp
mov
ret
mov
cmpsl
call
lods
aas
rolb
jg
cli
add
or
lret
xchg
lea
test
jne
fsts
pop
cmp
xorl
sub
fdivr
xchg
or
clc
leave
mov
insl
cmp
lock
mov
sub
insl
and
dec
sub
pop
bound
movsb
js
xchg
int
or
pop
lock
cmp
pop
cmpsb
xchg
xchg
inc
fbstp
dec
add
xchg
mov
movaps
adc
cmp
xchg
pop
imul
sub
test
aas
sbbb
pop
pop
pop
pop
inc
lea
jns
pop
shlb
xchg
fsts
pop
cmp
data16
imul
pop
cs
mov
in
jnp
les
lret
sub
popa
pop
add
je
mov
ret
push
clc
hlt
dec
call
repnz
xchg
xor
xchg
insb
sbb
and
lock
repnz
jb
std
ret
aaa
or
lods
inc
hlt
lea
loopne
popf
or
push
or
adc
int
or
loopne
sub
inc
jne
mov
out
pop
ja
cltd
ret
lahf
ret
xchg
dec
mov
scas
scas
sub
pop
xor
lret
ret
xchg
dec
sarl
loopne
shll
xchg
jge
mov
jnp
inc
mov
jecxz
sbb
xchg
fiaddl
fisubrs
or
pop
lret
lea
lods
and
mov
out
mov
daa
jns
push
cmp
pop
int3
rolb
inc
sbb
mov
shld
mov
ljmp
sbb
push
or
mov
cltd
testb
imul
fiadds
xchg
imul
or
xor
adcb
out
sub
cli
scas
mov
bound
or
mov
push
idivb
outsb
jb
mov
loope
push
jns
mov
mov
mov
mov
mov
outsb
aaa
lods
inc
arpl
fbld
test
sub
adc
adc
jecxz
jg
stos
dec
jo
popf
sub
adc
and
test
imul
or
rcll
repnz
fwait
hlt
fldl
test
aas
loop
sub
sbb
lret
push
add
or
dec
dec
xor
insl
mov
scas
add
adc
into
push
mov
push
arpl
cltd
cmp
ja
scas
push
fsubr
add
xchg
lock
fs
mov
pop
dec
sbb
clc
out
sub
push
ljmp
cmpsb
and
jae
xchg
cmp
int
ror
int
jmp
jmp
inc
ja
xchg
aas
jnp
ds
mov
mov
and
shll
mov
fs
xchg
lahf
mov
xorl
jl
cmp
inc
xchg
pushf
and
jae
add
cmp
enter
inc
add
out
andb
shl
xor
push
scas
pop
push
xlat
addr16
mov
lret
sub
fwait
movsb
loope
jbe
ja
inc
imul
mov
xor
add
shl
dec
add
iret
cmpsl
jae
fisttpl
nop
jbe
std
pop
shll
lock
addb
das
jns
ret
mov
pop
pushf
push
je
daa
enter
cmpsl
insl
data16
sbb
mov
hlt
int
stc
ja
inc
adc
dec
xchg
mov
xorl
das
rcrb
fisttpl
sub
std
mov
xchg
test
sbbl
movsb
xor
push
stos
sub
das
or
jl
into
sbb
outsb
popa
stos
push
movl
imulb
mov
pop
mov
ja
dec
xchg
xchg
mov
lds
sbb
or
fcoml
inc
pop
dec
cltd
dec
mov
es
xor
ljmp
push
std
cmp
add
or
sub
loopne
sub
jecxz
test
pop
cs
or
dec
sbb
inc
fimull
adc
mov
leave
mov
inc
add
push
sbb
pusha
mov
or
cmp
jecxz
mov
lods
daa
testl
sub
je
add
xor
notb
sarb
or
leave
mov
call
cmc
mov
mov
pop
int3
scas
cmp
fs
daa
stos
lds
insb
or
adc
test
inc
dec
xlat
lahf
loop
mov
mov
adc
xor
dec
aas
xor
test
sub
fwait
call
mov
push
push
test
jb
ljmp
inc
inc
and
or
cmp
insl
mov
push
int
int3
add
push
mov
out
lcall
push
leave
les
hlt
dec
clc
sub
rorl
leave
mov
ljmp
mov
pop
insl
repz
jbe
push
add
and
das
in
stos
dec
mov
push
movsl
roll
sbb
in
cmc
ret
add
std
lods
loop
insb
int3
jnp
and
cmp
cmc
aaa
lock
mov
xor
mov
pop
popa
je
sbbb
xorl
outsl
les
mov
fdivrs
or
sti
aam
add
out
jo
out
lret
or
enter
and
addr16
or
aaa
xchg
out
fisubs
and
fs
lret
cmp
out
xchg
pop
xchg
jne
mov
adcl
arpl
in
das
mov
add
or
fsubrs
fstpt
lret
and
jns
cli
sub
xchg
push
in
xchg
in
push
pushf
call
pop
mov
sahf
mov
or
jmp
jbe
sbb
call
rcll
aaa
mov
jbe
in
mov
mov
les
pop
push
test
mov
and
repz
movl
inc
insb
pop
jmp
jnp
jmp
pop
mov
lods
pop
push
inc
push
or
clc
xor
push
out
xor
cmp
sbb
mov
dec
inc
add
lock
cli
pextrw
jne
adc
jnp
rclb
dec
sahf
xor
insb
dec
adc
subl
xchg
nop
gs
rorl
ss
in
gs
and
stos
cmp
lds
or
lods
fwait
popa
mov
pop
mov
fadd
test
hlt
filds
xchg
adc
push
jmp
xor
or
jnp
xor
add
push
icebp
inc
sub
add
retw
lret
inc
dec
loopne
mov
bound
lahf
jle
test
cmp
mov
mov
inc
add
fisubs
sahf
cmpsb
mov
dec
shr
mov
pop
pushf
into
ds
mov
dec
test
pop
inc
movsl
inc
inc
sub
or
and
lahf
popa
fbstp
test
pop
mov
add
dec
dec
mul
ds
sbb
and
imulb
sub
pop
ja
push
mov
pusha
test
jg
test
in
jne
enter
pop
mov
arpl
dec
jae
and
add
pop
and
stos
add
xchg
ret
les
mov
ljmp
jle
into
xor
add
lds
mov
lcall
lods
fists
mov
jns
cs
adc
cs
cld
in
sbb
stc
pop
lea
xor
shll
jno
aas
mov
sub
mov
icebp
cwtl
and
outsl
cmp
jne
fsts
pop
cmp
gs
sbb
mov
mov
jmp
xor
insl
sarb
jb
push
jp
je
xchg
popa
movaps
adc
in
mov
adc
pop
cli
insl
or
adc
fs
lods
sbb
imul
cmpl
mov
enter
call
int
sub
cmpsl
cmp
push
add
sbb
pop
fmuls
mov
and
mov
cmp
adc
xchg
arpl
push
push
push
sub
adc
testl
cltd
std
sbb
add
jo
dec
inc
das
inc
lahf
dec
lods
adc
out
lret
inc
adc
xchg
loop
adc
loopne
push
data16
xchg
mov
popw
sbb
int
mov
push
std
add
out
jle
nop
xor
mov
movsb
in
enter
pop
rdrand
jne
call
repnz
leave
icebp
adc
dec
cld
mov
dec
mov
push
das
jbe
jge
es
pop
std
fists
fdivrs
das
ret
cmp
lcall
fldt
sbb
pop
loope
or
dec
lock
cmp
outsl
cltd
xchg
clc
cmp
fucomip
jmp
stc
lcall
jae
xor
xchg
push
repnz
shlb
jp
xchg
mov
cmp
or
fstpt
and
mov
and
jl
sar
sub
add
ljmp
lahf
or
pop
xor
movsl
out
hlt
cli
inc
mov
mov
xchg
pop
std
mov
std
cltd
xor
repz
test
mov
sbb
dec
push
lock
pop
ljmp
mov
adc
cmp
nop
fxch
int
mov
dec
jl
cmp
push
cmc
jae
scas
addr16
xor
cmp
mov
dec
es
cld
daa
rolb
cmp
popf
ss
icebp
sbbb
xlat
scas
adc
cs
xchg
aad
adc
add
std
popa
into
add
dec
fnstenvs
shrb
fwait
dec
mov
scas
mov
fildl
addr16
xlat
jge
scas
ret
daa
xchg
pop
mov
std
push
aas
je
mov
nop
stc
pop
mov
dec
add
out
int
inc
popa
popa
adc
out
aam
sub
mov
movsl
ret
cli
mov
call
js
mov
sti
insl
xchg
sbb
movsl
add
push
notl
call
mov
cli
xchg
in
mov
jecxz
lcall
bound
lea
scas
aaa
mov
sarb
push
adc
dec
ds
mov
lcall
loope
scas
cmc
outsl
fcoml
dec
lods
push
enter
mov
add
jo
pop
es
rep
pop
lods
mov
dec
add
aas
test
and
insl
cmpsb
jmp
inc
loop
aad
pop
aam
add
dec
ret
mov
leavew
jns
ret
pop
inc
int
jnp
and
push
test
inc
jo
mov
inc
add
cmp
mov
pop
aas
add
jge
sti
mov
xchg
movsl
jl
mov
pop
lea
push
inc
and
movsl
mov
mov
pop
lahf
imul
jae
pop
das
xor
shl
and
clc
push
jb
aam
push
inc
es
mov
or
mov
std
aad
push
adc
jmp
loope
test
mov
or
cmpsb
aad
mov
mov
clc
fnstenv
mov
mov
cmp
inc
sub
mov
pop
movsb
mov
inc
dec
inc
jle
loope
and
mov
daa
nop
lods
rorb
mov
loope
inc
adc
cwtl
in
leave
add
and
out
es
pop
aad
les
js
imul
shll
imul
lret
int3
or
enter
jl
or
or
mov
mov
mov
add
test
insl
push
imul
aad
sbbb
cwtl
mov
sbb
sbb
dec
orb
outsb
push
stc
mov
bound
loope
push
out
mov
iret
fsubl
orl
fistpl
testl
mov
push
test
scas
les
sbb
mov
mov
push
outsl
stos
jmp
xchg
in
aas
push
aas
and
pop
push
push
push
lods
and
movhps
jb
pop
pop
je
adc
lds
movsb
out
lods
jns
das
cli
pusha
into
mov
push
aad
cmp
dec
jo
in
jnp
ja
dec
jne
fwait
outsl
cltd
mov
cwtl
mov
ror
cmpsl
in
aad
mov
add
aas
std
cltd
push
dec
xchg
lock
flds
aad
jnp
scas
lret
idivb
jnp
cltd
call
idivb
ja
and
imul
pop
pop
test
lods
mov
dec
into
inc
push
inc
fdivs
pop
pop
neg
inc
in
addr16
dec
cmp
ds
int
ret
mov
int3
leave
test
pop
inc
and
or
xor
leave
rcll
std
scas
inc
leave
pop
jns
mov
clc
push
sub
push
sbb
cld
mov
jmp
add
mov
mov
jne
into
xor
add
out
push
std
xchg
xor
int
lret
xchg
clc
repz
out
push
std
xchg
int3
mov
pop
test
push
sub
xchg
xor
int3
dec
jge
pop
lretw
ja
sub
jo
inc
jnp
enter
jbe
pop
push
pop
ret
rcrb
mov
mov
mov
addb
testb
lods
decl
mov
fstpt
sbb
cmpsb
inc
or
ret
je
pop
mov
jno
add
add
jle
cli
cmp
sub
test
cld
mov
pop
mov
push
sub
and
push
js
addr16
inc
add
decl
mov
shrl
clc
hlt
add
inc
faddl
dec
sbb
inc
push
scas
aad
sbb
repz
jg
insb
adc
jl
jge
int
sbb
xchg
out
lahf
inc
ficoml
dec
test
pop
xorl
sarb
push
fstpt
shr
pop
pusha
inc
jae
cmp
ret
mov
jp
outsl
inc
xchg
and
xchg
outsb
inc
inc
xlat
sub
inc
sub
scas
jne
in
mov
fidivrl
push
lret
cmp
sti
cmpsl
ss
pusha
ret
and
or
aas
xchg
hlt
or
addb
pop
sub
mov
test
mov
and
mov
fimull
lds
dec
pop
dec
push
sbb
in
xorb
test
into
or
xchg
dec
fstps
pushf
jo
mov
add
fisttpl
push
mov
and
test
sbb
scas
push
cmpsl
outsb
pop
xchg
mov
cmp
jle
sub
popa
into
sahf
std
sub
inc
andl
cmpsl
aaa
pop
icebp
xor
ljmp
idivb
out
sub
cmp
cwtl
imul
inc
test
not
in
bound
test
mov
mov
sbb
add
push
mov
jmp
fsubrl
inc
add
dec
pop
jne
ljmp
sbb
sub
adc
test
push
push
mov
daa
dec
add
xor
push
stos
mov
insl
mov
pop
cmp
push
ss
add
push
sub
or
add
push
test
jl
push
sub
or
fchs
cld
jmp
xlat
imull
out
inc
and
cli
jg
iret
inc
mov
sbb
pop
cbtw
sub
xor
cmc
jae
dec
pop
or
aam
push
jmp
xchg
sbb
mov
push
mov
mov
push
jnp
jns
leave
pop
fwait
cwtl
das
popf
ret
jmp
lea
jmp
mov
insl
cmpsb
xchg
addb
ja
scas
call
aad
insl
mov
add
sahf
jp
jb
lret
jo
cmp
pushf
outsb
aad
and
xor
fcomi
aam
mov
scas
lret
sahf
nop
and
dec
imul
and
cli
enter
mov
pop
jns
mov
addr16
sahf
not
jns
sbb
subb
imul
xchg
xor
dec
xchg
movsb
mov
push
and
jns
and
rcrb
ja
in
les
sbb
xlat
ss
es
icebp
dec
push
lods
pop
pop
mov
jno
int3
dec
xchg
lcall
sub
sbbb
test
push
stc
mov
xchg
ret
mov
push
xlat
or
sub
mov
push
test
dec
sbb
aas
nop
adc
inc
mov
mov
jno
int3
xor
pop
dec
xlat
shlb
mov
push
cmp
xchg
sbb
insl
pop
pop
or
cmpsl
call
in
lods
mov
je
clc
mov
jl
jge
lock
rorb
out
mov
mov
add
jo
fcoms
movsl
xchg
sub
inc
xor
test
rcll
jle
inc
sbb
mul
jl
je
iret
sbbl
aaa
sti
lods
mov
xor
xchg
and
cmp
ss
jle
clc
mov
mov
dec
test
inc
or
push
cmpsb
push
negl
in
sub
mov
imul
gs
sbb
cmp
cmp
pop
push
mov
cmp
cmp
push
mov
scas
pop
scas
add
jbe
push
push
out
and
scas
or
movl
push
out
and
mov
push
fcomps
ljmp
jb
out
jl
sbb
cmpb
adc
inc
push
adc
call
mov
lds
fcomip
inc
pusha
jg
inc
jp
pop
test
mov
jo
push
stc
dec
push
pop
fisttpl
jb
sub
push
into
jmp
es
pop
pop
pusha
xchg
mov
stos
loopne
dec
ja
push
sbb
jb
xchg
ret
sub
clc
aam
cmpsl
pusha
and
jmp
std
ja
and
pop
in
pusha
adc
out
pop
mov
cmp
push
nop
cmp
pop
ffreep
insb
nop
cmp
jecxz
scas
and
mov
cmpsl
popa
outsl
or
fimull
mov
iret
es
dec
xor
or
stos
adc
mov
stos
mov
loopne
frstpm(287
es
ja
std
cmp
cld
faddl
in
andb
cmpsl
push
pop
into
pop
inc
jb
push
cwtl
lods
lcall
int3
jg
test
pushf
out
xchg
add
jp
push
out
sub
jp
mov
fcmovnu
push
roll
mov
mov
inc
cltd
add
mov
cmpsb
dec
enter
pop
popf
lret
sbb
mov
push
sub
out
xchg
push
dec
pop
xchg
inc
out
iret
jb
mov
push
test
lea
imul
movsl
imul
in
out
cmpsb
and
test
lcall
ja
push
inc
pop
fisubrs
into
js
test
mov
cmpsl
push
sahf
mov
sub
add
push
sub
jno
stc
inc
repnz
sbb
repz
jecxz
add
cltd
bound
loop
fnstcw
je
daa
mov
mov
js
mov
inc
sahf
jle
jecxz
cmp
or
mov
addr16
adc
pop
pop
inc
sub
popf
aas
test
add
dec
daa
outsb
push
shll
nop
out
cmp
push
push
dec
jmp
ss
in
and
pop
or
cmp
or
push
xor
xlat
test
sub
push
fs
shlb
popa
mov
cmp
shrb
ret
xchg
int
loopne
loopne
lret
pop
push
and
fucomip
iret
or
std
mov
jno
mov
push
jge
jl
inc
xor
lea
sbb
lret
data16
dec
sbb
adc
cwtl
ret
xor
push
mov
adc
add
add
mov
out
pusha
out
jnp
jp
mov
jb
jecxz
aad
jp
arpl
push
pop
fdivrl
out
mov
push
pop
test
insb
imul
pop
enter
movsb
sbb
sbb
adc
mov
pusha
hlt
fildll
into
pop
and
in
jl
xor
or
dec
mov
sbbl
push
or
adc
mov
sub
icebp
inc
repz
cmp
xchg
jl
int
shl
je
lock
mov
movsl
jo
scas
adc
or
sub
sub
xor
xchg
into
jge
mov
mov
bound
mov
push
add
imul
jmp
mov
data16
xchg
pushf
fiaddl
out
mov
add
jns,pn
cmp
test
sti
cmp
or
rcrl
movsl
fisubs
dec
cmp
and
sbb
cs
cmp
mov
xchg
std
popa
xchg
jp
movsl
fwait
add
jmp
jg
bound
and
xor
pop
xchg
mov
push
sub
xchg
mov
scas
ss
cmp
icebp
out
cltd
int
add
and
push
inc
cmp
lock
aad
data16
jg
stos
inc
inc
or
fildll
lret
sahf
push
inc
adc
in
adc
or
cmc
jle
inc
jge
in
inc
adc
sarb
or
ja
xchg
jge
out
stos
es
ja
inc
dec
sub
loope
cmp
sub
aad
push
hlt
pop
pop
mov
pop
roll
inc
cmp
cli
pop
jae
inc
gs
jmp
push
stos
cmp
sbbl
stc
lret
mov
sbb
push
mov
mov
fldt
into
pop
inc
into
iret
popa
test
and
push
int3
cmp
test
mov
jnp
and
fisubl
js
cmp
popf
inc
cmpsb
xlat
fcom
xchg
popa
mov
in
inc
cld
jg
or
adc
xchg
out
in
jg
cmpsl
xchg
mov
sub
jge
mov
testl
inc
push
aad
inc
mov
repz
lods
xchg
pop
jne
pop
lods
cwtl
mov
nop
popf
dec
add
sbb
or
mov
and
cmp
hlt
neg
data16
rclb
mov
adc
imul
lds
adc
arpl
scas
fcoml
mov
sbb
adc
ljmp
pop
repz
dec
movsb
loop
loop
sbb
aaa
js
sub
lock
push
jp
ja
lods
adcb
inc
mov
popf
pop
test
dec
mov
cmc
fbld
or
dec
lods
mov
sbb
ljmp
jbe
std
insb
lcall
jecxz
nop
mov
xor
adc
dec
scas
test
outsl
in
ret
cmp
loope
leave
add
or
inc
sbb
lds
adc
mov
xor
test
loope
xchg
lea
stos
fstpt
lret
dec
mov
cld
iret
cmpsb
lret
cltd
pop
jno
pushf
mov
mov
dec
cltd
adcl
push
jb
and
arpl
xor
pop
arpl
xchg
sub
insb
sbb
sbb
test
xor
rcl
or
sahf
and
fstpt
mov
mov
cmp
push
add
test
aad
fcomp
mov
lret
and
ss
jb
aaa
pusha
xchg
and
out
adc
nop
cltd
pop
cmpsl
push
xor
mov
in
pop
sbb
mov
push
pop
test
inc
cmp
fs
adc
ljmp
cmp
scas
cmp
fsubrl
sub
xchg
sbb
cld
sub
add
subl
movsl
out
stos
cli
imul
sbb
psubd
mov
fucomip
ss
or
loopne
push
inc
mov
sti
dec
push
cmpsb
outsb
dec
jno
mov
stc
dec
fnstsw
jmp
sub
sub
or
test
push
arpl
aad
dec
and
or
mov
mov
ds
hlt
dec
push
aas
dec
or
pop
divps
frstor
loop
or
fistps
popa
insb
jo
sub
in
push
pop
or
and
std
inc
movsl
jl
and
adc
iret
daa
in
jb
inc
jbe
cmpsl
sub
pop
je
pushf
push
cwtl
call
and
pushw
sahf
mov
pop
iret
imul
test
adc
lds
mov
xor
sbb
add
sbb
outsb
mov
notl
push
pusha
neg
shll
and
sub
call
shrl
imul
inc
pop
or
sahf
xlat
insb
cltd
jmp
shlb
fs
mov
xchg
test
and
ret
dec
or
into
addr16
push
gs
dec
xor
mov
stc
sub
mov
push
sahf
lds
cwtl
or
mov
out
xor
lods
test
sub
test
xchg
sbb
in
pop
add
in
pop
ljmp
sub
loopne
seto
jns
popa
jp
push
add
out
inc
iret
inc
mov
sub
repz
pop
push
lds
sti
jbe
lret
push
cmp
scas
inc
sbb
push
jnp
push
hlt
popf
xor
inc
xor
xlat
cmpsl
push
jp
dec
fdivs
lret
stos
jl
xchg
xchg
pop
movsl
lahf
jae
push
push
xor
push
pop
stos
stos
xchg
mov
gs
dec
fiaddl
jo
and
mov
pop
xor
sub
aad
and
icebp
mov
adc
andl
adc
xchg
fs
scas
mov
xchg
jnp
pop
adc
push
adc
jns
pop
jbe
cld
test
add
and
stos
xor
xor
jl
xor
mov
lea
sbb
mov
movsb
xor
adc
and
dec
mov
inc
push
or
add
repz
or
lcall
sbb
add
mov
push
ret
stos
popf
dec
sbb
sbb
xor
sub
arpl
ds
xchg
push
add
or
add
dec
mov
push
jge
mov
dec
in
addr16
sbb
ja
lret
push
ljmp
xor
jns
pop
in
and
stos
loopne
aaa
mov
popa
int
mov
rcll
xchg
xor
or
arpl
es
or
and
insl
and
nop
lahf
daa
dec
cmpsl
mov
lcall
sbb
and
xchg
int3
xchg
ljmp
dec
divl
roll
dec
cs
mov
and
popf
sub
sbb
push
xchg
inc
movsl
outsb
dec
pop
inc
xchg
stc
loopne
out
insl
jne
sbb
adcb
call
jae
or
lds
nop
or
pusha
xchg
mov
stc
sub
or
jmp
dec
stos
mov
xchg
inc
inc
or
cmc
or
movsb
cmp
cmpsl
adc
or
push
xor
js
inc
out
adc
mov
cmp
adc
mov
call
fisubrs
ret
or
clc
cmpsl
popa
pop
int
leave
mov
aad
adc
mov
fisubrs
ret
or
clc
cmpsl
popa
pop
flds
xchg
cmc
scas
lods
push
mov
aam
xor
arpl
or
in
bswap
mov
imul
and
inc
in
xchg
inc
fmuls
mov
add
jmp
or
call
mov
loop
fs
jnp
and
xchg
push
int
out
pop
orb
out
pop
pop
xchg
stos
dec
stos
xor
adc
jg
sbbb
ss
sbb
mov
fisubrs
in
fsubrs
sbb
push
sub
dec
loopne
xchg
mov
ja
cmp
or
pusha
xor
lds
pop
inc
xor
loop
out
cmc
outsl
std
pop
add
ret
xchg
xlat
pusha
js
and
jo
dec
hlt
ds
jle
sahf
stc
xchg
fsubl
mov
inc
add
cltd
mov
sahf
lret
fdivrl
mov
dec
add
imul
pop
enter
insl
out
sbb
dec
ljmp
loop
outsl
sub
dec
pushf
xchg
insl
lods
add
add
mov
fbstp
in
mov
xchg
dec
mov
sbb
mov
sub
ja
dec
cs
xor
and
mov
push
adc
push
sahf
aam
pop
xchg
inc
xor
pop
sbb
fldl
jns
imul
insl
out
ret
aam
push
xorl
cs
pop
or
js
sbb
enter
fisubs
js
mov
js
in
xchg
sub
adc
lahf
and
dec
mov
loope
jo
push
daa
and
daa
xchg
jb
test
shll
adc
pop
ljmp
adc
shr
test
jno
fs
jge
movsl
mov
mov
jecxz
es
addr16
out
push
mov
lcall
adc
gs
cmpsl
lock
or
fs
jge
movsl
movsl
das
pop
mov
jno
out
addr16
shl
xor
mov
push
nop
lcall
pop
pushf
xchg
in
insl
inc
data16
repz
inc
flds
sbb
push
cmpsl
push
fs
sbb
movsb
ret
arpl
es
or
lods
fdivl
cmp
sub
repz
inc
flds
popf
popf
jnp
inc
mov
pop
fnstenv
xor
sub
and
loop
mov
push
ljmp
dec
or
jle
xor
loope
pop
fs
fisttpl
mov
cmpsb
or
out
aas
test
inc
das
rclb
loopne
sbb
dec
push
gs
pop
insb
pop
rcl
jle
xchg
mov
aad
cmp
pop
xchg
xor
repz
popf
add
adc
js
out
iret
inc
dec
ret
aas
popf
push
fs
jbe
lret
scas
xor
inc
fs
adc
flds
rorl
insl
sar
sbb
rcr
shrl
push
in
es
gs
cmpsb
addl
push
cmc
cmc
and
aaa
icebp
adc
xchg
dec
not
dec
dec
lods
mov
nop
repnz
mov
pop
test
mov
pop
fisubl
inc
adcl
in
and
es
lcall
or
inc
popf
mov
xchg
add
arpl
mov
mov
mov
inc
add
stos
imull
mov
mov
imul
push
sahf
aam
pop
sbb
es
addr16
iret
leave
push
jmp
mov
pop
xor
adc
imul
or
push
cmc
cmc
and
aaa
icebp
adc
mov
adc
cwtl
add
sbbb
push
push
push
nop
lret
add
jg
xchg
xor
imul
push
sahf
aam
pop
test
add
inc
in
add
stos
es
lahf
fsubrl
sub
mov
dec
sbb
add
lock
dec
lahf
fsubr
push
xor
inc
lahf
and
mov
mov
pop
add
shl
mov
cwtl
mov
lret
call
sahf
sbb
jne
mov
rcrl
fldcw
arpl
out
js
stos
test
aaa
loope
adc
test
xor
bound
push
rolb
cmp
xchg
cmc
mov
or
xchg
xchg
and
xor
imul
inc
pop
mov
hlt
jg
test
jne
out
xchg
mov
push
icebp
cmpsl
dec
push
xchg
inc
mov
test
pop
data16
int
js
and
in
xlat
sbb
lock
mov
pop
pop
gs
out
sub
fsqrt
xchg
daa
or
arpl
es
or
mov
gs
loop
xchg
out
nop
roll
sbb
push
cmp
fs
hlt
mov
or
js
push
pushf
jne
testl
sub
sbb
setae
arpl
push
shlb
mov
gs
les
lds
mov
mov
mov
andb
mov
mov
pop
push
cmc
cmc
and
aaa
icebp
adc
daa
sub
test
scas
push
lcall
push
pusha
nop
cltd
xchg
lret
jo
js
pop
ret
arpl
aas
mov
outsb
stos
insl
add
test
mov
or
or
arpl
es
or
hlt
call
ljmp
sbb
xorb
insl
stos
nop
sbb
arpl
cmp
stos
movlps
lahf
mov
jo
xchg
test
loope
push
iret
int
mov
outsb
enter
dec
adc
sbb
mov
pop
fwait
jmp
or
pusha
movsb
pop
fwait
std
mov
sbb
xchg
cmp
inc
loop
and
mov
inc
outsl
dec
mov
mov
lret
ja
hlt
pop
cmp
popa
dec
jno
int
js
and
iret
fwait
movsl
mov
mov
fisttpl
cmp
xchg
cltd
mov
pop
or
push
subb
decb
out
adcb
divb
push
adc
aas
cmp
stc
adc
aad
aas
xchg
push
mov
inc
stos
sbb
lcall
pop
sub
std
xor
clc
data16
es
sti
aas
inc
sarb
adc
fistps
je
insl
fmul
jge
sti
add
nop
adc
mov
jl
push
pop
das
dec
pop
dec
push
xchg
call
cmc
jne
mov
pushw
cmp
or
or
cmp
or
out
mov
add
jb
add
cmpsl
popa
pop
cmp
in
dec
sbb
or
out
aas
popa
addr16
sbb
xlat
jno
push
jle
mov
insl
jp
divl
mov
fnstsw
and
imul
push
push
lds
cli
outsb
and
xchg
pop
xor
pop
int
int3
jns
aas
popl
push
movsl
sbb
cmp
or
outsb
pop
repz
mov
out
fisubrs
cmp
add
sub
mov
and
jle
js
fwait
jo
insb
rorl
sub
adc
in
fsubrs
hlt
sub
pop
cmp
call
fisttpl
xor
push
jge
int3
and
xchg
and
xor
arpl
dec
adc
pop
dec
je
sbb
addr16
adc
lahf
je
imul
clc
cmpsl
popa
pop
ftst
cli
sbb
icebp
sub
xchg
mov
in
inc
fisttpll
cmp
lock
icebp
mov
enter
xchg
mov
dec
out
scas
and
pushf
scas
fcmove
movsb
xlat
das
and
das
dec
mov
push
std
adc
popf
andb
sbb
addr16
add
add
sbb
cli
outsb
cmpb
dec
dec
loope
cmc
sub
and
outsb
pop
inc
xchg
jb
mov
jnp
scas
ss
or
testl
push
pop
gs
adc
and
loope
add
cld
jnp
or
arpl
es
or
jnp
les
cltd
or
rclb
test
lea
sub
jge
xor
cmpl
jp
ja
aam
sbb
fsubrl
movsl
lods
cmp
push
leavew
mov
adc
iret
in
call
enter
inc
push
mov
mov
aaa
ss
insl
cs
movsb
pop
push
xchg
add
aam
pop
cmc
out
and
dec
sbb
adc
sbb
cmp
inc
data16
repz
inc
flds
test
jle
addr16
ljmp
dec
shrl
dec
adc
jecxz
jmp
adc
out
jbe
jmp
roll
pop
popf
int3
inc
in
leave
std
int3
stos
mov
popf
adc
inc
imul
adc
adc
stc
pop
jecxz
mov
cld
dec
push
orb
nop
out
push
in
cmp
iret
lods
and
jne
std
or
in
mov
lret
call
flds
sbb
mov
fmuls
fmull
es
fmuls
push
test
cmpsl
rcll
adc
ds
xchg
mov
stos
mov
popf
adc
push
nop
jg
sahf
jmp
add
lock
dec
cmpsl
xor
pop
and
fildll
orl
adcl
loopne
inc
les
xor
arpl
mov
mov
js
or
testl
push
pushl
push
incl
mov
mov
ja
call
mov
xchg
sub
test
popf
lret
sub
pop
pop
jnp
adc
sub
in
sub
popa
rorl
pop
push
lret
inc
jb
and
outsb
insl
xchg
pusha
or
and
jp
imul
rcll
xor
xchg
push
mov
ja
mov
arpl
xchg
sbb
orl
decl
fbld
pop
js
cs
lcall
hlt
xchg
orl
xorb
out
xor
inc
ljmp
push
cmp
rcrl
jae
mov
sub
push
leavew
mov
data16
movsl
adc
lret
pop
xchg
adc
ret
test
mov
outsb
fildl
cmp
dec
mov
mulb
dec
add
imul
in
push
out
pusha
mov
jae
fiadds
mov
jg
adc
cmp
and
ss
bnd
cmp
sahf
mov
mov
loope
imul
pop
xchg
xchg
imul
jge,pn
mov
jae
jnp
popa
sbb
dec
push
xchg
call
mov
xchg
scas
das
mov
and
loope
adc
xor
push
pop
movsl
daa
icebp
out
pop
mov
int
mov
and
shl
and
rcrl
or
inc
inc
fcomp
aaa
cmp
add
or
mov
mov
mov
and
push
dec
aam
cmp
inc
xchg
out
pop
popf
push
cmp
shl
sbb
cmp
push
or
inc
in
mov
and
mov
cmpsb
imul
iret
jae
fwait
sub
pop
cmpsl
pop
adc
sbb
fs
ficoms
mov
and
in
xorl
cmp
inc
cmp
adc
loope
push
les
sbb
ret
cmc
mov
and
mov
mov
addb
push
stos
or
insb
rcrl
sub
mov
shl
and
mov
dec
mov
js
pop
dec
jbe
rol
ror
mov
push
or
add
mov
and
es
bound
cld
call
ljmp
lods
add
jl
in
sub
fwait
xchg
mov
in
gs
mov
and
mov
jge
mov
mov
ret
fisubs
movsl
add
cli
or
cltd
repz
ror
jne
or
dec
dec
paddusw
add
sbb
cltd
shr
push
data16
inc
push
cs
lret
lret
int3
arpl
jmp
cli
jg
lods
movsb
sbb
inc
mov
scas
add
das
sbb
cs
jo
mov
fxch
mov
jecxz
adcl
frstor
and
imul
mov
adc
stos
aam
pusha
xchg
xor
aas
cwtl
xchg
mov
sarl
ja
insl
cs
and
insl
push
jno
jge
inc
bound
outsb
pop
jbe
hlt
in
gs
sahf
in
dec
push
adc
or
push
in
enter
jge
out
in
gs
imulb
in
sub
xor
jecxz
cld
push
movsb
sbb
in
dec
mov
push
or
mov
gs
push
insl
xchg
push
jl
lahf
dec
orb
pop
push
mov
cmp
adc
push
mov
aad
sbb
pop
sub
and
push
sub
cwtl
jnp
cltd
and
pop
das
jns
call
xor
sti
fwait
fwait
adc
mov
jecxz
jno
push
sbb
cli
test
loopne
leave
jnp
loop
lods
int3
leave
orl
or
call
inc
pop
sub
or
jns
jb
jae
cmc
hlt
sbb
or
scas
sahf
and
push
rclb
scas
add
mov
mov
jecxz
pop
and
scas
cmp
sub
mov
out
aaa
dec
scas
push
xchg
cmp
lds
xor
ds
xchg
fidivl
xor
push
rcrb
jo
fs
or
orb
dec
push
lcall
in
xor
adc
jge
xor
js
xchg
jno
pushf
jmp
jmp
mov
or
loope
sub
pop
mov
outsl
data16
mov
xor
repnz
mov
mov
and
cmpb
popa
stos
pop
dec
test
add
mov
jl
cmp
or
in
pop
xlat
rclb
sub
fstps
and
jno
int
cwtl
shl
jmp
imul
jmp
insb
or
jb
scas
sub
outsb
adc
lods
inc
fld
gs
jp
mov
imul
jmp
pop
mov
mov
dec
add
pop
or
jb
movsb
xchg
pop
rcr
dec
mov
int3
cmp
pushf
fwait
or
push
push
mov
repz
inc
shrb
and
pop
mov
arpl
cltd
xchg
mov
cmp
scas
jae
icebp
and
mov
and
mov
mov
sbb
cld
js
xor
sbb
sub
dec
lcall
psubsb
arpl
pop
into
push
shrl
inc
sahf
push
inc
aaa
pop
sub
cmc
xor
xchg
mull
mov
scas
das
cmp
xor
xchg
and
add
sbb
inc
mov
and
aaa
sub
outsb
fistl
sbb
jae
leave
addl
faddl
repz
mov
sbb
sbb
mov
addr16
jnp
pop
scas
xor
cmp
add
sbb
mov
xorl
mov
leave
push
fsubrp
outsb
stos
nop
mov
mov
aas
xchg
dec
jno
inc
lcall
or
call
cmp
test
fadds
scas
gs
sbb
loope
dec
les
int3
dec
xchg
dec
in
std
add
stos
cmp
and
jmp
add
pop
repz
cltd
inc
popa
push
movsb
mov
pop
mov
scas
int3
add
shlb
mov
jp
popf
insb
mov
out
gs
xor
push
jns
push
sub
push
mov
add
mov
jb
cwtl
loopew
sbb
cmp
or
pop
push
mov
cltd
pop
popa
fcmovnbe
cmp
xor
and
lods
inc
enter
rcrl
adc
xor
cs
test
push
loopne
fdivrl
pushl
mov
pop
cmp
jmp
add
push
xchg
aas
mov
inc
stc
sub
mov
imul
incb
dec
out
dec
hlt
ljmp
cmpsb
or
gs
push
lock
mov
pop
pop
ret
lods
outsl
pop
rclb
add
repnz
imul
sbb
lock
xorl
aad
push
sbb
icebp
mov
test
xchg
out
push
push
frstor
mov
xorl
call
jl
addr16
ffree
cli
pusha
inc
xchg
cld
pop
mov
ljmp
out
addr16
data16
popa
inc
fidivl
xchg
xor
mov
fdivs
xchg
sub
mov
call
jmp
xor
ds
sub
cld
adc
cld
push
sbb
sbbl
gs
cmc
rolb
movsb
test
mov
test
xlat
popf
notb
pusha
xchg
push
push
xor
adc
mov
push
push
imul
dec
lods
adc
icebp
iret
das
xor
or
fs
xchg
or
jno
stc
sbb
idivl
lahf
mov
sbb
xor
out
fdivrl
sbb
and
adc
aam
popa
sub
loop
lods
ja
flds
fcomip
aas
fsub
mov
mov
into
mov
out
inc
xorb
lret
pop
fcoms
dec
aaa
xchg
stos
add
pop
mov
popf
mov
mov
push
mov
lods
mov
in
ljmp
inc
out
cli
push
shl
add
fdiv
or
push
in
cmpsl
es
movsb
jb
or
pop
jle
into
or
movsl
ja
in
pop
dec
daa
pop
xor
push
xchg
cmpsb
and
or
aas
or
and
dec
outsl
fdiv
xor
mov
ss
pcmpgtb
sub
mov
pop
ror
jnp
jb
test
pop
pop
inc
dec
test
bound
pusha
cli
cld
mov
retw
lods
fs
rcr
fistpll
adc
loope
cmp
negl
lock
dec
push
fwait
movsb
stc
pop
mov
mov
sti
push
and
adc
sbbl
es
mov
insb
pop
mov
mov
mov
sub
add
mov
jecxz
mov
inc
movsl
push
or
repnz
mov
mov
mov
jecxz
and
pop
mov
data16
shl
out
mov
aas
je
andl
icebp
jp
xor
push
adc
or
cli
sbb
add
inc
xor
mov
pop
xchg
and
cld
dec
test
sbb
jne
cmc
rolb
jp
pushf
jmp
dec
insb
pop
test
das
mov
and
shll
imul
mov
mov
leave
inc
cwtl
cmp
aaa
nop
aad
fldenv
imul
mov
dec
adc
mov
lds
mov
pop
out
pop
xchg
cld
mov
xorb
jecxz
xchg
cld
dec
push
add
fcompl
push
xchg
cmp
mov
call
adc
fs
push
jmp
xor
push
mov
sub
nop
add
mov
nop
arpl
stc
cmpsb
sub
rorl
pushf
test
orl
inc
and
cmpsl
repz
scas
mov
or
ficompl
xchg
add
out
stc
jle
xor
aas
flds
push
xor
stos
aas
mov
mov
movsl
lods
neg
xchg
mov
jmp
xchg
mov
and
jno
ficompl
lcall
cmp
xchg
cmp
push
jno
ret
add
jmp
mov
int
je
sbb
cmpsb
ja
xor
imul
popa
inc
fadd
dec
sub
sub
inc
fstpt
xor
push
push
lods
sbb
xor
aaa
fadd
dec
sub
sub
xchg
adc
push
sbb
sbb
add
aad
and
pop
xor
push
push
push
mov
test
cld
insl
ja
test
xchg
div
mov
push
sbb
mov
xchg
in
cmc
dec
stos
repnz
repnz
mov
rolb
mov
mov
mov
ss
in
cs
xor
inc
inc
mov
pop
adc
fcmovu
stos
cmp
pusha
lcall
lea
sahf
scas
out
test
push
aaa
sub
and
mov
int3
adc
mov
sub
add
sbb
lods
push
dec
out
mov
mov
lahf
test
add
mov
mov
add
sbb
add
jne
jp
pushf
mov
xchg
outsb
mov
stos
jo
add
sbb
fs
loopne
sbb
flds
imul
jbe
mov
mov
loope
leave
adc
pop
xor
mov
lock
hlt
repz
ds
adc
jle
aam
addr16
lods
mov
fs
push
mov
daa
or
add
imul
or
fs
sbb
hlt
test
xchg
div
mov
xor
inc
divl
jae
xlat
fs
aaa
mov
mov
inc
cld
add
add
test
and
add
inc
lret
push
push
mov
adc
and
enter
imul
test
sbb
movsl
icebp
jmp
mov
icebp
mov
push
lods
std
addl
add
repnz
mov
dec
push
mov
and
jns
cli
imul
add
sub
das
in
jg
cmpsl
jne
cmp
in
sub
and
cld
sbb
das
addl
mov
inc
and
add
xorl
mov
xchg
pop
dec
test
jp
je
mov
cli
insl
or
adc
es
fstpl
ss
insl
cmp
stc
mov
push
adc
xchg
push
adc
fneni(8087
pushf
cmp
lcall
hlt
mov
mov
xchg
sub
enter
dec
fidivrl
rorl
dec
pushf
es
int
mov
mulb
inc
dec
add
push
cld
fstl
and
lods
pop
jecxz
or
stc
xchg
inc
movsl
xchg
scas
pop
mull
push
jbe
in
xchg
repnz
mov
clc
call
sub
adc
hlt
sub
mov
es
sbb
aas
pop
shlb
mov
mov
repz
xor
arpl
stc
cmpsb
lds
inc
testb
sbb
lea
and
aad
mov
add
xchg
movsl
lcall
cwtl
cs
adc
jg
lret
fcompl
movb
sti
lds
movsb
popa
xchg
inc
adc
dec
in
ss
sbb
out
dec
dec
sub
xchg
in
nop
repnz
out
add
add
sahf
enter
aad
stc
add
out
pop
mov
lret
jmp
or
mov
fiaddl
movb
rorl
push
daa
incl
dec
es
sub
rclb
push
inc
pop
jl
insb
jnp
cmp
sbb
sbb
arpl
push
js
cld
lods
pop
stos
xchg
push
xor
in
adcb
xor
cmp
testl
aas
xchg
icebp
xchg
xchg
cld
dec
push
add
fcompl
sbb
inc
sub
pop
call
xchg
frstor
into
ret
ljmp
imul
shr
aad
jne
jbe,pn
push
es
outsb
sub
push
mov
add
xor
jmp
sbb
movsb
jns
jo
jl
push
test
scas
fucomp
mov
mov
push
sub
lock
daa
sti
aam
addr16
lods
mov
lea
popa
cmp
vpaddsb
or
int
insl
pop
add
clc
nop
pop
les
push
push
gs
jl
fwait
into
fidivrs
test
call
sbb
mov
fistl
mov
pop
insb
mov
and
call
arpl
jmp
shrl
addr16
imul
mov
mov
repz
xor
aaa
pusha
iret
repnz
push
movsb
push
xor
fwait
cmp
lcall
sahf
pop
cwtl
lock
repz
sbbl
aam
xchg
mull
aas
lret
mov
lret
insl
cmp
sbb
adc
pop
js
das
cmp
into
jb
or
ss
xor
push
jno
shll
lahf
pop
imul
cmp
lret
out
or
dec
sbb
or
jne
lret
inc
sbb
sub
in
mov
fiadds
inc
test
ret
int3
push
in
or
in
xor
cmp
testl
fadds
nop
cld
ret
jl
and
lds
lods
aaa
inc
push
les
test
xor
fldenv
jmp
mov
icebp
nop
inc
cmp
mov
jnp
jbe,pt
push
push
sub
and
or
jecxz
nop
mov
push
xorb
jge
add
mov
inc
cltd
mov
dec
sub
rcrl
gs
push
mov
sbb
fsincos
or
stos
call
bound
mov
movsb
mov
leave
ss
hlt
mov
leave
mov
and
test
hlt
xor
test
stos
xchg
int
jge
push
add
dec
push
imul
push
fidivrl
add
in
sub
push
dec
xchg
pop
pushf
mov
mov
in
scas
xchg
outsl
aam
mov
mov
or
stos
cmpsb
stos
mov
cld
fnsave
movsb
incl
xor
lcall
xlat
pop
and
push
mov
test
negb
add
gs
jbe
pop
mov
mov
stos
sbb
xor
pop
or
sub
js
pop
push
fnstsw
punpcklwd
xchg
mov
rcr
jae
push
ljmp
sbb
decl
mov
pop
rcll
inc
adc
dec
cmp
in
mulb
adc
xchg
int3
imul
cmpsb
inc
dec
pusha
push
fdivp
adc
aam
push
aam
mov
xlat
int3
xchg
mov
scas
adc
or
movsb
stos
aad
pop
mov
sbb
sbb
lret
fldt
testl
cmp
cltd
pusha
rol
rclb
in
inc
sbb
jecxz
lock
inc
mov
xchg
into
clc
jne
icebp
xor
and
sub
push
stos
pop
inc
insl
xchg
cld
rol
repnz
rcl
movsb
cmc
mov
adc
jmp
xchg
lret
in
jg
cmp
xchg
mulb
mov
inc
jmp
add
xlat
xchg
cwtl
lcall
jae
movsb
push
or
movsl
repz
adcl
and
cmc
fs
mov
mov
sti
sub
sbb
sbb
imul
inc
and
adc
repz
fstpl
push
andb
lret
xlat
adc
jbe
lahf
push
fs
jbe
sbb
std
insl
ror
or
imul
enter
cmp
mulb
mov
push
popf
xor
daa
ljmp
fiadds
xchg
push
insb
clc
mov
dec
cmp
fadd
sbb
mov
and
cmpsb
enter
ljmp
or
outsb
mov
clc
add
jg
fdivl
adc
in
cwtl
xchg
fisubrl
xor
imul
leave
mov
mov
clc
pusha
aam
mov
hlt
arpl
imul
movsl
je
cmp
repnz
sub
cltd
out
stc
push
cld
cmp
push
lods
icebp
mov
xchg
cmpsl
out
push
insb
call
push
loop
cli
rcrl
daa
das
in
pop
cli
mov
dec
pusha
xchg
jge
xchg
mov
pop
ds
clc
mov
cmp
mov
and
lret
loop
push
adc
sub
es
push
xchg
mov
nop
xor
add
push
jo
in
loop
add
pop
add
mov
add
mov
out
out
lods
rcrl
nop
cs
fsubs
in
jns
shr
sbb
sub
xor
daa
mov
jb
cmp
xlat
mov
jns
fildll
aaa
xchg
push
imull
cld
daa
stos
jns
xor
js
ret
mov
mov
std
mov
leave
xchg
aam
inc
dec
sbb
xchg
cld
imul
push
and
dec
mov
imul
mov
mov
sahf
mov
scas
jmp
lret
fiadds
dec
outsb
inc
les
dec
cmp
mov
mov
mov
pop
xchg
and
mov
ret
test
int3
iret
sbb
add
bound
add
pop
out
mov
fmuls
add
jne
rcl
test
daa
and
push
ds
jns
fcoms
dec
adc
adc
and
cs
enter
shrb
sahf
mov
jo
and
mov
sub
sbb
jae
orl
sub
mov
gs
jmp
fistpl
or
pop
pop
mov
sbb
lahf
mov
push
hlt
movsb
mov
cmp
mov
dec
enter
adc
xchg
mov
mov
push
mov
mov
jns
cmp
pop
dec
push
jo
mov
movsb
push
sub
les
inc
bnd
in
ja
data16
sbbl
lds
mov
jg
jg
xor
sub
push
inc
pushf
shlb
cmp
js
daa
sbb
subl
movsb
or
and
jmp
jge
jbe
scas
stc
add
arpl
adc
repz
int
inc
sbb
sbb
fstps
lds
cmpl
insb
std
inc
mov
dec
imul
xor
fiadds
inc
xchg
insl
repz
pop
jp
mov
pushf
repz
mov
jge
xchg
mov
pushf
pop
fwait
bswap
mov
xchg
cwtl
es
hlt
pop
sbb
add
shrl
cmp
ds
call
or
xchg
es
inc
rolb
cmp
mov
adc
jecxz
cmp
aas
xor
ljmp
decl
mov
add
cmp
jns
adc
out
icebp
aas
dec
lea
cs
lods
push
lret
jmp
push
test
sbb
pop
fmull
jle
pop
xchg
add
cmp
push
xor
xchg
push
xlat
mov
std
negl
xor
mov
fmuls
or
xchg
add
jns
cs
mov
movsb
leave
shlb
jns
xchg
mov
mov
add
bnd
jno
or
push
fnsave
std
jle
stos
cmp
leave
ret
xchg
bound
mov
div
push
dec
into
sbb
sub
mov
shrb
sbb
hlt
cmpsl
push
daa
nop
pop
loopne
incl
pushl
shlb
dec
xchg
push
cwtl
cmp
jb
mov
sub
es
scas
ret
test
ljmp
gs
fwait
clc
jmp
xchg
test
ret
into
mov
call
pop
fisttpl
shrl
mov
or
dec
jp
jo
pop
adc
ss
jp
int3
fwait
mov
sbb
mov
pop
sub
dec
adc
inc
popf
or
je
int
mov
mov
nop
in
pop
adc
hlt
dec
sbb
mov
xchg
lret
sbb
mov
test
adc
push
dec
push
test
cmpsl
sub
ret
scas
test
sbb
jl
cmpsl
ds
popa
mov
shlb
imul
adc
mov
jae
orl
lods
cmp
fisubrl
loop
addr16
imul
loopne
daa
shrl
jp
lds
testl
push
ja
inc
je
fwait
mov
sbb
pop
mov
mov
push
mov
int
repz
push
mov
icebp
ljmp
loop
and
lret
pushf
mov
inc
mov
test
dec
aaa
mov
jle
int
stc
cmp
roll
jns
inc
mov
mov
lock
popa
iret
xchg
adc
xchg
sub
aad
out
loope
and
test
popa
xor
cmpsb
ljmp
dec
cmp
jne
jae
test
push
imul
in
fcomp
fldt
and
sub
ds
int
jns
lock
push
mov
jnp
mov
addl
inc
in
pop
fwait
jno
lods
sbb
loop
arpl
jge
push
pusha
leave
xchg
xchg
fsts
xchg
ret
sbb
fdivrp
cmpb
sti
inc
in
pop
fwait
jno
lods
sbb
loop
arpl
jge
push
adc
arpl
mov
fdivrl
outsl
sti
in
scas
and
clc
or
iret
or
fs
dec
jmp
mov
pop
add
out
mov
xchg
out
in
aad
aam
hlt
sti
mov
mull
xchg
xchg
insl
fiaddl
sub
push
cmp
inc
adc
mov
cmpb
insb
pop
shll
push
das
mov
testl
mov
mov
mov
jno
repz
mov
ret
call
sbb
inc
jge
mov
push
mov
out
sub
jns
lock
lods
rcr
inc
xor
loopnew
dec
jae
cli
xchg
lock
shlb
pop
inc
or
mov
add
jmp
sbb
movsl
pop
jp
or
fldt
jne
sbb
fcomps
mov
shlb
in
ljmp
nop
adc
cmp
bound
push
push
cwtl
add
iret
insl
fiadds
pop
mov
push
lods
rcr
inc
xor
loopnew
dec
jae
cli
add
mov
inc
pop
jp
sub
icebp
sbb
popf
enter
xchg
dec
test
cs
inc
pop
xchg
jns
xchg
mov
inc
adc
add
test
loope
sbb
jle
fcoms
push
cmp
loop
sub
aam
xor
mov
sbb
cwtl
rcll
lret
fbld
xor
xchg
mov
cltd
clc
jbe
xor
aaa
mov
dec
shlb
mov
add
arpl
cmpsl
sbb
popa
push
clc
jae
xor
xchg
repz
and
imul
jl
fmuls
std
xchg
sub
adc
out
andl
sub
dec
in
push
cmpsb
jae
dec
insb
repnz
aad
movsb
aad
mov
andb
test
mull
repz
gs
cltd
sbb
sbb
out
test
add
jo
es
ljmp
dec
push
add
lcall
decb
add
dec
push
std
lea
mov
xchg
adc
mov
xchg
lret
inc
mov
stos
and
push
jmp
js
call
shrb
mov
cmp
xor
icebp
push
xor
pop
mov
jle
or
sbb
mov
fs
xor
xchg
or
jo
int3
andl
inc
and
sub
psraw
lcall
xor
lods
xchg
loopne
mov
inc
mov
sbb
mov
std
int3
adc
add
add
sub
out
push
jbe
jnp
pushf
shlb
dec
fisubrl
sub
xchg
cmp
ja
pop
adc
sbb
dec
dec
mov
jmp
jge
mov
sub
mov
ja
and
jmp
mov
cmp
xchg
mov
es
ljmp
js
xor
js
in
decl
add
rolb
xor
movsl
scas
xchg
addl
cmp
mov
les
or
jg
out
adc
jb
test
int3
popf
sbb
cmpsb
std
je
mov
shl
cmp
xchg
sbb
xchg
faddl
stos
ss
fisubrl
sub
lds
in
loope
jg
cmpb
hlt
inc
dec
mov
xor
add
cwtl
jl
out
mov
lret
jle
and
je
and
lret
pushf
sub
jecxz
or
cmpsl
jp
xor
rolb
shrb
and
movsb
sub
sti
mov
sbb
jecxz
repz
dec
or
fsts
in
orb
sub
sbb
mov
aas
sub
movsl
fsubrs
btc
or
jmp
lea
xor
lea
push
ja
divl
int
in
int
push
rclb
pop
in
sbb
and
lret
lret
lcall
pop
push
jmp
xchg
mov
filds
push
ret
inc
push
push
sahf
sbb
aad
sub
inc
mov
add
mov
insl
les
lcall
push
pop
addr16
jae
sbb
ljmp
mov
cld
out
outsl
sbb
cmp
mov
sub
pusha
jp
lods
jg
jnp
sbb
cmpsb
testl
and
sub
jns
hlt
dec
push
pop
xchg
test
inc
loop
dec
imul
mov
xchg
jle
ds
aaa
push
insl
dec
cmp
pushf
mov
pop
jle
jmp
stos
or
icebp
pusha
shlb
hlt
mov
mov
adc
mov
icebp
xor
xor
sbb
out
repnz
ljmp
push
sub
cmpsl
dec
in
jbe
dec
cmc
sbb
inc
sub
pop
fdivrs
push
rclb
adc
xor
push
jnp
pop
sbb
xchg
or
jb
mov
cld
popa
inc
cmp
pushf
dec
xor
push
in
mov
sbb
push
xchg
mov
xor
lret
pop
mov
jbe
mov
stos
sahf
jp
pop
push
fsubr
mov
hlt
or
cld
xlat
jle
push
xchg
add
sbb
sbbl
push
cvtpi2ps
mov
pop
mov
pop
sbbl
int3
stos
lods
jge
fstpl
push
mov
cwtl
test
sbb
loopne
adc
movsb
jb
adc
adc
and
pop
imul
mov
add
pushf
xor
loop
xchg
inc
and
jge
cmpsb
in
lods
lahf
je
or
neg
test
cwtl
lahf
das
cmpsb
addl
ret
lret
adcb
mov
mov
or
jne
cmp
xchg
sub
jns
push
jne
ljmp
mov
xor
int
jecxz
push
rorb
jp
addl
mov
cld
jne
call
sub
sub
insl
mov
add
movsl
dec
loop
xor
add
rcll
addr16
push
adc
imul
cmp
pop
aam
es
jbe
add
mov
fldl
test
fbstp
out
cmc
push
jmp
add
adc
mov
add
ljmp
pop
fbld
dec
scas
outsl
orl
push
pop
pushf
andl
mov
add
out
sbb
xor
ja
push
inc
jg
jp
mov
incl
shrl
fbstp
aas
lahf
add
push
or
adc
xchg
bound
mov
in
xor
push
adc
jnp
movsb
rorl
mov
cmp
jns
mov
inc
sbb
jno
ljmp
jnp
leave
ja
push
es
cmp
mov
pcmpeqw
mov
mov
push
xor
push
into
dec
inc
and
ficoms
push
fisubl
or
xor
cmpsb
jg
fwait
push
sub
sti
fiadds
cltd
lret
inc
push
test
add
pusha
loope
jne
rol
and
int3
insl
pop
daa
imul
sbb
xchg
mov
and
mov
loop
test
jecxz
dec
add
mov
pop
inc
or
push
dec
andl
pop
add
ds
lcall
sub
pop
in
or
mov
push
add
call
das
popa
and
xchg
jnp
cmpsb
mov
ret
cltd
sbb
outsb
push
loope
cmp
negl
xchg
xchg
cltd
jmp
in
sti
test
pushl
loop
and
call
sbb
stc
in
add
bound
mov
push
popa
xchg
in
sub
or
mov
lock
inc
push
test
cmpb
cmpsb
sahf
cld
cli
data16
push
lret
or
stos
dec
jge
or
or
cmp
jmp
jne
mov
push
mov
sbb
push
fidivrl
and
push
ss
mov
jae
add
sahf
lret
mov
and
fwait
jo
or
xor
psubusw
repz
adc
adc
cmpsb
sahf
cld
cli
data16
aaa
mov
push
lods
sbb
xchg
or
les
cmpl
pusha
xchg
inc
sar
mov
dec
or
mov
or
call
xorb
call
xchg
mov
sub
in
fildl
add
cld
push
bound
xchg
data16
test
lods
sbb
cld
repz
icebp
xor
pop
hlt
sahf
xchg
decl
out
fsubl
cmp
fistps
add
pop
mov
xchg
fwait
cmp
push
pop
dec
push
je
popf
or
mov
popf
popa
fldl
aam
cmpsb
adc
mov
mov
or
addr16
jne
xor
popf
sarl
call
pop
rol
mov
jmp
popa
rcrb
pop
adc
push
mov
adc
sbb
popf
imul
sbb
push
mov
add
and
hlt
adc
mov
outsl
xor
sub
icebp
xor
fdivs
xor
pop
xchg
fwait
lods
push
leave
mov
aad
popf
jns
xchg
dec
int
rolb
faddl
mov
mov
bound
pop
jbe
xor
inc
sahf
push
add
sbb
pop
inc
arpl
pop
add
xor
cmp
inc
scas
sbb
popl
in
push
dec
fcompl
xor
out
in
inc
sarl
lea
rcrl
outsb
icebp
outsb
mov
int3
cli
adc
or
dec
pop
mov
mov
cmpsb
ss
or
pop
xor
icebp
outsb
div
add
adc
xor
fs
push
testb
test
pop
lock
dec
addl
insb
xchg
cmp
sub
sub
in
arpl
ja
add
les
jp
and
dec
or
or
xor
in
jno
ret
test
and
test
mov
pop
sub
push
and
push
loopne
xchg
call
es
aad
fistl
push
testb
and
push
pop
xchg
out
mov
mov
sub
int
mov
mov
int
shl
and
mov
and
mov
and
mov
and
iret
notb
mov
jno
scas
add
addr16
in
test
add
mov
leave
movsb
andl
outsl
lcall
and
ror
mov
ja
scas
cli
or
or
push
sub
dec
aaa
or
mov
push
das
push
in
int
shl
and
sti
cmovl
lcall
out
xchg
mov
int
xchg
and
outsb
jae
sbb
push
dec
jnp
jg
sbb
imul
in
gs
xor
loop
in
mov
cmp
ljmp
mov
in
gs
and
mov
inc
cmp
rcll
dec
arpl
and
icebp
adc
adc
and
cmpsb
xchg
xor
xor
pop
push
xchg
pop
shll
sub
dec
push
jl
rcl
or
mov
cmp
lods
pop
or
mov
int3
and
mov
push
pop
sbb
sub
cmpsl
mov
outsl
iret
xor
mov
dec
sbb
repz
aas
push
inc
je
xchg
add
jne
dec
sub
rcrb
scas
js
jo
fcomp
xor
aad
push
pusha
out
cmp
nop
push
push
inc
push
arpl
adc
in
pushf
ss
sahf
mov
sti
outsl
pop
push
dec
into
push
je
inc
sub
es
fmuls
cmovne
cwtl
pop
jp
push
or
xchg
and
adc
imul
cmp
jmp
sarb
xor
out
in
aad
cmp
push
jns
sub
ja
jecxz
and
insl
push
push
shrb
jns
sub
adc
cmp
movsl
inc
dec
movsb
and
adc
test
lods
push
nop
divl
lea
scas
cld
sbb
outsb
inc
mov
and
inc
not
daa
push
es
pop
cltd
insl
adc
dec
push
mov
ret
aad
push
leave
pop
jno
pop
out
cwtl
imul
in
jle
daa
cmp
jl
addb
ret
out
adc
jg
sti
in
mov
into
inc
or
jno
or
lods
fcoml
pop
xor
and
out
sbb
test
js
dec
mov
fisttps
nop
fs
inc
adc
or
fistl
xor
lods
movsb
dec
xchg
mov
pop
or
aam
fwait
lahf
lahf
or
orl
xchg
jne
movsl
and
mov
in
cs
sub
jge
out
lcall
sub
je
outsb
fildll
js
mov
cmc
jb
dec
imul
jnp
adc
hlt
cmp
jne
fnstenv
jg
mov
inc
adc
xchg
xor
push
push
outsl
push
jnp
fdivr
bswap
sarl
dec
dec
movsb
lahf
xchg
popf
cltd
loop
jns
in
or
aam
adc
stos
gs
or
xchg
sbb
mov
push
cmc
push
mov
insb
fisttps
pop
mov
mov
or
adc
lret
push
sbb
pop
cmp
inc
mov
and
mov
and
vmovdqu
and
ret
int
shl
and
inc
push
pop
mov
mov
and
xchg
push
xor
int
shl
and
notl
sbb
int
shl
and
movsb
cmp
lods
test
mov
and
pop
or
pop
xchg
test
in
gs
adc
clc
push
sub
and
movsl
or
mov
and
sbb
fbld
jno
mov
and
jle
subb
mov
and
lock
cmp
and
lods
frstor
mov
and
inc
mov
add
int
shl
and
rolb
imul
int
shl
and
xor
enter
push
cltd
mov
and
xchg
xor
mov
int
shl
and
mov
out
fnsave
in
gs
and
xor
call
shl
and
and
or
stc
push
popl
in
gs
mov
fiaddl
fwait
inc
xchg
mov
and
xlat
add
jg
xlat
mov
int
shl
and
mov
push
and
int
shl
and
mov
pop
push
fldt
mov
in
gs
testl
mov
int
shl
and
dec
mov
js
mov
and
js
scas
popf
or
mov
in
gs
mov
dec
je
mov
and
sarb
xor
out
ss
and
xchg
mov
sbb
jge
repz
and
iret
enter
lods
or
mov
and
int
cmp
or
and
pusha
lret
xchg
je
add
xchg
mov
and
jb
lret
push
hlt
adc
in
gs
push
cltd
add
mov
in
gs
pop
mov
out
int
shl
and
addr16
sub
mov
and
push
into
jb
outsb
xchg
mov
in
gs
jb
test
sarb
and
jo
xchg
jnp
sarl
and
mov
je
lock
mov
and
ds
adc
in
gs
cmpsl
test
add
mov
and
sub
lret
mov
and
ret
mov
nop
in
mov
and
mov
lcall
in
gs
inc
pop
cmp
int
shl
and
jl
movsb
in
ret
mov
and
imul
sub
int
shl
and
cltd
scas
sub
mov
and
bound
adc
int
shl
and
jne
xchg
push
push
subb
in
gs
dec
repnz
cmp
and
dec
leave
gs
adc
push
mov
and
fwait
mov
push
cmp
mov
in
gs
js
adc
or
in
mov
in
gs
repz
or
mov
sahf
mov
and
lret
xor
aad
mov
and
mov
adc
and
and
insb
mov
into
leave
jmp
mov
in
gs
add
mov
shl
and
arpl
or
stc
sbb
mov
and
mov
inc
in
scas
mov
and
ss
popf
xchg
imul
xor
sub
iret
cli
pop
sarb
cld
int
mov
fdivs
pop
lock
ret
adc
sbb
les
mov
push
sub
cmc
insb
movb
aam
fs
loopne
push
jle
nop
popa
daa
aad
lds
xor
mov
inc
stos
into
or
lahf
xchg
lret
cmpsb
or
stos
jnp
dec
int3
enter
sti
jecxz
stos
jp
dec
jecxz
pop
push
je
xchg
inc
jo
aad
jno
imul
in
gs
mov
and
adc
push
and
ja
and
fsubrs
ret
jp
push
repz
mov
adc
pop
ret
aas
push
fldl
push
lds
sub
push
fs
sub
movsb
ja
jecxz
repnz
sub
pop
mov
xor
push
jae
or
jle
fisubrs
pop
aas
insb
push
loopne
mov
insl
fisttps
rorb
insl
pushf
aas
pop
mov
mov
jmp
xchg
inc
in
mov
rcrb
scas
call
push
sub
aas
mov
in
fisubrs
test
out
sbb
lods
jns
hlt
add
xchg
lods
rcll
or
xor
inc
lcall
jmp
xchg
popf
adc
pusha
jl
std
gs
and
aaa
adc
pop
add
xor
mov
dec
movsb
insl
jae
add
xchg
jp
pop
es
or
xlat
pop
sbb
xor
or
repnz
mov
xchg
ret
push
jmp
in
mov
mov
push
nop
jp
and
loope
fidivrs
int3
subl
clc
imul
jmp
enter
add
mov
int
sub
mov
test
into
xor
in
out
cwtl
xchg
jg
jne
sub
and
push
fmuls
je
pop
outsl
jp
xorb
mov
cmp
bswap
and
or
and
xchg
scas
cmc
cmpsb
out
mov
sbb
gs
iret
mov
stos
imul
pop
es
leave
xchg
stos
or
push
out
and
pusha
adc
adc
shrb
mov
push
add
adcl
mov
sub
sti
sbb
stc
js
js
imul
test
js
jns
pop
jb
xor
jbe
inc
les
sub
pop
outsb
scas
pop
xor
mov
mov
or
cs
jle
pop
xlat
xchg
adc
mov
rep
mov
cmp
sub
pushf
insb
lret
push
fwait
pop
out
mov
jp
neg
or
pop
xchg
sti
test
xchg
mov
imull
aas
repnz
and
cmpsb
xor
subl
fildl
cmpsl
outsl
jl
lahf
jbe
xchg
dec
ret
xchg
jae
out
and
sbb
jmp
stos
lods
pop
shll
bound
mov
push
mov
sahf
fldt
sub
stos
sub
inc
push
pop
cmpsl
inc
pop
imul
xor
add
gs
sbb
mov
popa
inc
dec
sbb
hlt
jns
nop
xchg
loop
cmpsb
aas
mov
jmp
xor
fbld
mov
jp
call
into
nop
cmp
xchg
hlt
imulb
and
stos
or
cli
loop
jle
mov
push
fsubl
jo
cmp
push
scas
xchg
scas
xor
sbb
scas
jmp
sub
add
jns
lods
fs
push
pusha
sar
dec
fildl
jbe
push
pop
xchg
or
lea
mov
jne
push
inc
enter
mov
int3
xor
mov
dec
mov
int3
cli
dec
cmc
lods
scas
das
movsb
sbb
cmpl
xchg
jle
in
jb
cli
dec
pop
lcall
mov
inc
in
mov
jg
xor
xor
xor
cmp
adc
dec
inc
and
and
pop
nop
leave
imul
aad
emms
push
sbb
in
sub
mov
cmc
cs
adc
inc
and
mov
xchg
pop
lock
mov
in
and
lahf
dec
or
mov
popa
sbb
loop
test
cltd
inc
out
fsts
movsb
inc
push
test
xor
movl
in
add
repz
repnz
in
repz
stos
fdivrs
shll
imul
jp
jbe
mov
and
push
neg
inc
in
subb
cmc
jmp
push
testl
push
sub
inc
add
cmp
jnp
lret
inc
mov
inc
movsb
in
cld
mov
cs
movsb
js
add
push
into
leave
inc
daa
lds
push
push
push
and
fucomp
pop
out
adc
mov
int
pop
cmp
stos
push
pop
mov
or
jl
xchg
push
add
push
mov
push
pop
push
pop
in
notb
or
sbb
pusha
fisttpll
mov
fwait
sbb
enter
orl
pop
insb
arpl
lods
movsb
pop
adc
jb
or
test
xchg
cwtl
int
dec
imul
cwtl
shrb
xchg
inc
push
hlt
stc
pop
js
sub
sbb
ds
mov
ficoms
scas
andl
push
cld
insl
adc
stos
dec
outsb
mov
jno
fmuls
test
lock
xor
cwtl
in
ljmp
push
fnstcw
clc
outsb
call
inc
pop
std
xchg
out
notl
faddl
call
mov
xchg
jecxz
pop
lods
push
sbb
pop
pop
push
in
std
push
dec
push
dec
jle
xchg
loope
xchg
lret
adc
mov
xor
xor
daa
xor
cmpsl
mov
inc
iret
in
jp
inc
jae
sub
loope
loope
rcl
mov
lods
xchg
xor
mov
popa
dec
sbb
dec
mov
cli
cmp
orb
incl
jp
dec
pop
sbb
xchg
ja
xor
adc
fs
mov
ja
mov
adc
imul
loopne
jle
adc
adc
scas
sahf
pop
pop
cmpsb
mov
rolb
mov
sarl
push
stos
js
xchg
pop
or
sbb
test
or
out
nop
xor
and
pop
pop
xor
incb
push
cmp
xor
mov
fmull
cmp
ljmp
inc
lret
push
aad
cld
popa
mov
mov
jmp
inc
sbb
mov
ret
ror
push
or
or
mov
dec
mov
sbb
daa
adc
pop
mov
push
sub
or
xchg
cmp
fistl
arpl
pop
inc
lahf
jbe
mov
mov
or
das
push
dec
int
mov
inc
jno
pusha
arpl
pop
cmp
xchg
lcall
shr
mov
addr16
mov
sub
jnp
push
xor
frstor
out
xor
ds
and
lret
mov
cltd
imul
xor
inc
outsb
call
lret
adc
add
sarl
lods
push
gs
and
push
std
xchg
jl
cmp
scas
sbb
mov
add
inc
icebp
popa
bound
call
inc
ds
movd
or
inc
jmp
jl
or
jecxz
sub
scas
stos
out
xchg
or
mov
cmp
pop
sbb
sahf
dec
aas
insl
or
out
adc
and
inc
shrb
inc
lahf
push
add
sbb
add
fcomp
mov
les
jne
lods
push
insb
sub
outsl
sbb
fistl
inc
inc
in
mov
inc
cmpsb
scas
icebp
dec
mov
inc
das
jle
mov
stc
popf
push
jno
sub
mov
pop
shl
pop
adc
xchg
push
cmc
mov
ret
add
addr16
fstpt
mov
in
out
in
scas
out
mov
aaa
lret
xorl
les
sbb
test
adc
stos
cmp
adc
sbb
test
jl
fmull
add
mov
mov
xchg
imul
mov
sbb
sbb
scas
xor
xor
mul
in
sub
frstpm(287
cmp
clc
sti
xchg
mov
cmpsb
jnp
jle
xchg
lods
cmp
mov
mov
fdivl
sbb
xchg
sub
jmp
es
dec
test
clc
ds
divb
push
pop
mov
mov
mov
roll
xor
adc
enter
rorl
frstor
loopne
jns
inc
mov
ja
imul
bound
fimuls
aam
pusha
jo
test
cmc
jp
and
mov
test
enter
mov
cmp
ret
aad
add
mov
dec
dec
add
hlt
xchg
adc
jnp
int
sub
test
jo
mov
xchg
daa
and
xchg
inc
adc
movsb
loop
pop
sub
xlat
cmp
xchg
jbe
test
push
add
mov
fcoml
jne
cld
and
push
outsb
bound
rorl
xor
xchg
aam
loopne
sub
call
jle
and
jnp
mov
add
push
sahf
dec
pop
push
cmpsb
push
adc
movsb
inc
in
inc
mov
aad
ss
pop
gs
xor
sti
inc
repz
fistps
sub
rorl
adc
mov
adc
dec
mov
mov
xlat
push
rcrb
push
push
pop
dec
push
andb
addr16
adc
adc
xchg
cmpsl
addr16
inc
out
sub
mov
sbb
and
mov
or
pop
rorb
push
jmp
hlt
sarb
pop
insl
push
rcll
lret
jmp
push
mov
icebp
int3
enter
or
pop
xor
sahf
xchg
lock
or
insb
cmp
arpl
add
leave
mov
jno
push
stc
ret
xchg
and
xchg
sbb
test
and
fidivl
pop
push
in
add
cwtl
cmp
lock
adc
xchg
enter
jnp
es
scas
ret
inc
cmpsl
xlat
test
and
push
int
cmp
enter
cli
add
adc
pop
sub
mov
push
outsl
cmp
arpl
test
cld
lock
xlat
rcll
push
aad
sarl
popa
pop
xor
sbb
xor
pusha
inc
jns
scas
mov
jne
jmp
lock
jno
cmp
mov
jl
jecxz
stos
push
xor
xchg
dec
insl
sbb
xchg
rclb
cli
ljmp
push
in
xchg
pop
mov
pop
mov
sbb
jae
jl
jle
cli
insb
pop
popa
add
adc
repz
mov
test
mov
cmpl
sub
xor
or
and
fildl
cmp
cs
cmp
ret
test
xchg
std
fwait
xor
rorl
pop
sahf
jecxz
jns
stc
dec
cmc
push
mov
dec
test
xchg
lcall
je
push
and
leave
int
add
outsb
popf
jo
mov
push
ljmp
or
out
add
xchg
or
xchg
fs
fadd
sahf
jo
push
popf
mov
pop
imul
jae
sub
fwait
xchg
loope
sti
sarb
xor
push
shll
ss
cmp
addr16
mov
fs
pop
popf
into
jp
sub
js
and
xlat
push
ss
jmp
shll
mov
lock
xorl
jle
loope
inc
mov
out
ja
xor
jbe
mov
push
cmp
mov
xchg
mov
mov
cld
ss
gs
mov
adc
inc
fsubrl
xor
sbb
add
dec
add
or
inc
int3
pop
std
mov
or
jp
mov
sbb
cmp
aas
xor
fs
hlt
xchg
sahf
adc
jecxz
add
fcmovne
adc
xchg
mov
mov
sbb
pop
sub
scas
test
pop
je
rcrl
and
mov
mov
enter
mov
lcall
ds
jno
jg
je
lcall
add
rcl
adc
leave
lock
lahf
lock
mov
sbb
pushf
insb
jg
cs
and
mov
inc
cmp
xchg
push
and
aad
mov
pop
mov
int
mov
pushf
jne
and
iret
cmpsb
repz
stc
movsl
fmul
sub
xor
mov
mov
dec
mov
lds
and
push
iret
jnp
xlat
push
push
lcall
rclb
scas
aaa
jae
xor
clc
jmp
aaa
fcmovnu
movl
call
lcall
and
lods
dec
inc
pop
jle
repz
push
test
idiv
test
adc
outsb
adc
in
dec
aaa
cli
mov
js
adc
outsb
add
jns
loope
push
std
push
mov
pop
jno
stos
pop
rclb
nop
sbb
cmp
pop
into
xchg
es
mov
pop
xchg
addps
ds
dec
xor
push
xchg
popa
cmp
std
sub
fs
jecxz
jb
out
lea
jp
data16
outsl
push
fistpll
popa
mov
je
stos
adc
and
dec
lods
cmc
ret
mov
ds
sub
sub
sub
or
in
pop
mov
jne
fmul
popf
dec
jmp
inc
ss
stc
sub
push
int3
push
mov
stos
xchg
sub
xchg
add
jle
ret
sbb
bound
cmp
jns
jecxz
push
je
inc
xchg
xor
fucompp
es
aam
xchg
fcoml
adc
jno
mov
mov
mov
in
xchg
lods
es
jmp
fistps
cmp
movsb
cmpsl
imul
lea
push
mov
mov
sarb
mov
jae
pop
xor
dec
int
rorl
mov
imulb
out
imul
outsb
xchg
add
aas
or
test
cmp
sub
mov
pop
mov
fwait
jg
daa
mov
stc
loop
add
push
jae
sbb
bound
daa
dec
nop
sbb
imul
sbb
xchg
xor
adc
stos
lds
and
or
and
das
cld
push
int
push
lea
push
or
fcomip
pop
ret
jne
imul
les
sti
lcall
rclb
push
test
je
lock
lahf
add
jge
test
inc
sub
out
and
pop
push
rclb
ret
fidivl
ret
lea
mov
insl
stos
ficompl
je
xchg
mov
inc
inc
test
jl
add
outsl
or
jno
call
or
stc
or
sub
mov
out
shl
ljmp
pop
test
dec
out
leave
daa
cmp
cmpsl
mov
or
cmpsl
loop
int
movsl
outsb
sahf
cmp
aam
and
aas
ss
mov
mov
jns
js
lods
mov
fimuls
test
add
movsl
sub
incb
ja
movsb
xlat
ret
pop
clc
xchg
push
nop
int3
in
popa
inc
cmp
and
and
sub
push
jecxz
das
and
adcb
mov
jb
xor
shll
sbb
sbb
jl
mov
ret
hlt
adc
stos
in
xorl
daa
ss
cmpsl
lahf
imul
cld
aas
stc
icebp
jns
ret
jmp
jbe
shll
cs
cmc
lret
fstl
das
movsb
cmp
pop
xchg
out
fstl
into
mov
fisttps
and
nop
mov
inc
sub
xchg
adc
sbb
mov
addr16
imulb
xchg
in
pop
in
cmpb
sti
sub
fnsave
sub
mov
test
adc
xchg
out
push
xor
cld
mov
xor
jge
mov
jmp
mov
aas
loop
outsl
ss
std
pop
mov
jle
test
mov
pop
loop
into
aas
shll
les
data16
mov
outsb
push
aad
out
lret
dec
aad
xor
lods
pop
sbb
xchg
dec
rcll
sarb
fs
xor
mov
std
mov
hlt
push
cmpb
sarl
or
push
push
lock
popf
jbe
scas
shll
push
jbe
aaa
cwtl
jae
jmp
adc
ret
cmp
std
hlt
add
fidivs
mov
add
arpl
pop
pusha
pop
dec
add
push
mov
mov
nop
sbb
xor
add
cmp
or
mov
mov
cmc
inc
or
sbb
fldenv
lods
jp
mov
dec
loop
int3
lcall
xchg
and
ret
fstps
add
inc
mov
fsubrl
pop
cmpsl
inc
loopne
scas
shl
outsb
and
xor
jnp
mov
xchg
rclb
outsb
push
cmp
xorb
lock
cmp
jo
or
or
icebp
push
sub
xor
mov
sarb
xor
dec
mov
xor
sbb
xor
push
jb
mov
mov
ficoml
mov
lahf
xchg
add
dec
adc
inc
out
lcall
insl
insb
mov
orb
mov
push
sarb
add
cmp
push
pop
mov
negl
xor
pop
loop
cmp
loope
addr16
in
xor
push
cmc
lods
jge
test
push
lahf
pop
xor
inc
xor
les
movsl
bound
inc
daa
sub
inc
repnz
imul
lods
test
leave
imul
pop
or
sbb
mov
int3
es
mov
or
push
push
insb
out
iret
mov
mov
dec
or
add
xor
movsb
in
xchg
cmp
pop
mov
jo
xchg
pop
loopne
and
imul
mov
movsl
movsb
dec
jl
neg
xchg
stc
into
daa
mov
int3
dec
jo
or
or
cld
dec
sbb
aam
push
lret
dec
push
sub
xor
push
add
enter
inc
sub
out
das
sub
push
test
push
push
mov
push
je
lods
sbb
in
out
pop
mov
cmovg
subb
clc
das
aaa
pusha
icebp
xchg
mov
mov
mov
and
scas
xchg
and
int
pusha
loope
jl
inc
xchg
xchg
cmp
psrlw
sub
sub
ds
cmpsl
add
xchg
mov
push
sub
mov
mov
pop
ret
fisttpll
hlt
sahf
in
mov
xchg
out
sub
fcompl
xor
push
dec
insl
dec
stos
mov
fmull
mov
sarl
pop
stos
scas
sbb
and
xchg
repz
loopne
daa
cmpsl
jecxz
mov
mov
bound
jo
filds
jne
mov
scas
fmuls
outsb
dec
jmp
movsl
shrl
push
hlt
mov
push
iret
mov
cmpsb
jg
cmpb
cwtl
xor
test
mov
jl
inc
pushf
enter
mov
xchg
xor
jecxz
aaa
push
sub
lret
lods
std
jmp
xchg
pop
cmp
frstor
mov
jo
push
sbb
or
ret
mul
in
cld
push
cmc
es
adc
inc
xlat
shrl
rcll
xor
and
cs
cwtl
andb
sahf
add
mov
hlt
xor
jmp
pusha
js
int
push
and
jne
mov
mov
in
add
movsl
add
mov
or
test
xchg
inc
fs
adc
sarl
pop
out
push
dec
les
mov
sbb
repnz
push
xor
or
adc
into
outsb
sbb
lcall
xchg
pop
push
dec
cmpl
pop
xchg
jmp
sub
dec
lret
jp
adc
and
mov
dec
test
sarl
jbe
cmp
pop
imul
mov
cmp
fst
out
idivl
jp
hlt
ret
iret
xchg
pusha
cs
mov
out
and
pop
cmp
fiaddl
das
dec
add
scas
int
jae
cmp
dec
mov
imul
pop
cmc
repz
les
sti
mov
stc
les
xor
loope
popf
fadds
clc
add
push
adc
jbe
or
mov
adc
iret
xchg
icebp
mov
aad
sub
jle
and
mov
sarb
aam
mov
stc
loop
lret
fiadds
fldt
stos
mov
sub
add
mov
out
or
push
push
push
aaa
in
popa
int3
push
add
outsb
cmpsb
out
and
cs
aas
rorb
jne
fcmovb
dec
popf
in
add
sbb
cmp
sti
sbb
and
sub
in
icebp
pop
cmpsb
xchg
loop
fnsave
push
je
lds
fwait
sub
mov
lods
jge
jnp
pop
jb
fcmovu
rol
xor
mov
cmpsl
mov
stc
jl
cwtl
xor
aaa
scas
jg
jg
pushf
push
add
je
jnp
cwtl
scas
cmp
scas
out
xchg
in
sahf
imul
rcl
cmpsl
dec
dec
xchg
jns
mov
lret
jecxz
pop
daa
out
push
xchg
repz
xchg
push
dec
jnp
inc
arpl
adc
rorl
xlat
pop
pop
and
inc
test
pushf
jns
jle
pop
loop
xor
sub
pusha
fs
scas
pop
xchg
ja
sbb
into
jo
nop
call
sub
push
xchg
add
inc
inc
pop
jae
or
pop
and
dec
push
cmpb
stc
sub
je
mov
cmp
fnstcw
jmp
hlt
push
inc
sub
daa
add
rolb
cmpl
dec
adc
xor
sub
and
daa
scas
pop
cmp
pusha
fistpl
aas
sub
mov
ret
jnp
pop
jg
cmpsl
sub
jl
xchg
jb
dec
pop
xchg
add
stos
push
adc
xchg
out
cmc
sub
gs
push
add
fdivrs
movsl
dec
test
pop
push
mov
dec
inc
aad
push
xorl
inc
mov
pop
add
add
sbb
sub
pop
lea
cmpsb
add
fistpll
popl
jb
subl
mov
and
sbb
pop
push
dec
adcl
fldenv
jnp
jne
xor
sub
add
or
in
std
mov
sub
mov
outsl
and
pop
movsl
jnp
inc
pop
add
and
mov
jbe
in
jnp
xchg
mov
cs
pop
lret
sahf
pop
xchg
mov
sub
fldt
mov
and
inc
insl
pushf
lahf
into
mov
popa
cmp
pop
sub
jmp
dec
repnz
or
adc
shrb
lcall
cmp
push
jnp
lahf
mov
rolb
dec
lods
mov
sbb
daa
adc
into
pop
cmpsl
mov
fldz
into
out
xchg
lea
fwait
mov
in
inc
lock
push
xchg
stos
gs
push
or
jno
inc
fadd
xorl
or
orb
jecxz
cmp
xchg
sti
mov
pop
or
cmp
xorl
pop
lea
cld
or
mov
xor
cli
into
jmp
sbb
pop
icebp
mov
push
dec
scas
aam
pop
sub
movaps
and
lds
sub
arpl
mov
loope
popf
call
add
push
cmp
mov
rcll
dec
xchg
pop
arpl
lahf
pop
or
stc
sbb
xor
out
xchg
or
jl
sub
xchg
fs
xlat
cmc
or
mov
shrl
or
mov
sub
mov
lahf
jo
push
push
jg
jg
jb
dec
jl
aas
push
jecxz
enter
mov
pusha
inc
dec
imul
jne
hlt
mov
jne
gs
push
mov
jmp
push
sub
inc
js
inc
xchg
mov
push
popfw
xchg
push
test
dec
ret
sbb
mov
cltd
bound
inc
ljmp
and
mul
fdiv
mov
repz
dec
or
loope
xchg
sar
shrl
xor
test
fstpt
mov
dec
int3
lcall
jmp
or
xchg
pop
int3
addr16
pushf
sahf
push
lock
cli
fwait
shrl
sub
ret
jo
push
js
xchg
jns
xchg
jle
movsl
sti
mov
xchg
and
into
daa
xchg
dec
dec
call
push
jnp
inc
pushf
inc
shrl
adc
jne
adc
daa
dec
cltd
outsl
xchg
mov
dec
mov
cmp
xor
inc
adc
out
iret
pop
mov
mov
jne
jge
loop
sbb
fsubp
shr
and
jp
add
inc
inc
lods
fimuls
imul
data16
fcmovnbe
adc
daa
imul
pushf
xchg
cltd
jo
inc
mov
shrb
dec
int3
movsl
sub
push
add
sbb
mov
push
shlb
aam
mov
in
call
pop
sti
dec
les
adc
jp
outsl
ffreep
fnstcw
cmp
and
imul
mov
dec
insb
mov
cmp
adc
cmp
cmc
cmp
out
push
dec
mov
sar
mov
cmp
insb
outsb
add
in
pop
mov
xlat
jne
push
xchg
loop
inc
repz
sbb
jp
dec
xchg
adc
mov
or
jmp
mov
push
es
dec
inc
fstl
inc
enter
pop
xchg
cmc
jmp
test
pop
fcoml
icebp
sub
lods
fdivr
cs
add
sbb
sub
enter
in
mov
and
pop
fistpll
clc
clc
mov
loopne
ficoml
loopne
in
sbb
xor
stc
dec
inc
jb
popa
mov
pop
cli
jnp
call
arpl
or
add
xor
inc
inc
mov
mov
cli
dec
jbe
lds
mov
cwtl
jmp
and
mov
das
fisubrs
cli
xor
push
pop
and
imul
jns
popa
mov
aad
push
inc
mov
lods
inc
pusha
push
outsl
push
mov
leave
stos
int3
or
loope
and
dec
fstps
mov
cli
out
mov
and
sub
testb
jecxz
push
and
lahf
lret
movsl
in
xchg
cmp
test
movsb
sarb
and
aam
lods
repz
int
sub
dec
les
sub
cmpl
popf
in
sub
aaa
stc
mov
js
sbb
pop
pop
sti
push
cmp
cmpsb
out
lahf
sbb
arpl
xor
or
cmp
imul
pop
dec
outsl
jae
jns
jae
imull
fildll
inc
cltd
dec
lock
out
xor
jle
pop
adc
push
push
in
pushf
pushf
imul
sahf
dec
add
aad
xor
lret
xor
adc
lock
pusha
dec
scas
into
jge
arpl
and
push
jge
xchg
flds
dec
mov
fcomip
out
or
push
pop
mov
pop
sub
jno
add
sahf
stos
xor
aas
cmp
ss
daa
in
lret
cmp
lea
xor
fstl
sbb
xor
hlt
jno
push
jmp
mov
push
icebp
stc
test
pop
es
dec
ficomps
inc
lock
pop
push
nop
inc
pop
mov
inc
pop
sub
mov
jne
push
imul
cli
add
daa
dec
insl
push
ret
xorl
es
add
xor
xchg
and
test
mov
ja
ficompl
aam
and
xchg
in
lret
dec
xor
hlt
outsl
add
push
mov
das
push
lock
rep
jo
inc
jnp
xchg
pop
ljmp
aad
add
sbb
pop
les
aam
repnz
rcr
sahf
jo
nop
jns
imulb
out
sub
xchg
aad
fsts
sbb
mov
mov
jno
imul
xchg
cmp
inc
imul
repnz
and
add
adc
cld
jg
jno
push
and
pop
lock
inc
mov
adc
enter
push
add
mov
push
sbb
mov
pop
jae
leave
call
pop
les
pop
mov
jmp
dec
lcall
mov
in
gs
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
mov
and
add
insl
cmp
arpl
dec
aaa
jle
pop
cmp
sub
inc
fs
dec
inc
add
cld
add
adcb
add
add
add
inc
add
and
incl
inc
add
fdivl
inc
and
add
add
jb
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
add
add
shlb
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
.byte
js
add
add
add
add
arpl
add
add
add
add
sbb
xor
add
add
add
add
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
shlb
shlb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
add
add
fwait
add
imul
jae
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
sbb
popa
je
js
je
add
add
add
add
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
cltd
add
jb
insl
jo
add
add
add
add
inc
jb
popa
je
push
imul
inc
add
add
push
imul
outsl
arpl
add
add
popa
je
push
popa
addr16
add
roll
inc
imul
outsl
ja
add
add
inc
gs
gs
popa
addr16
add
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
jae
push
jne
je
gs
popa
add
add
add
imul
popa
jae
inc
js
add
inc
add
outsl
ja
imul
add
pop
add
outsb
jae
popa
je
dec
gs
popa
add
add
add
pusha
add
add
add
add
add
add
add
dec
inc
dec
xor
cs
insb
add
add
sub
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
xor
cs
insb
add
add
inc
mov
add
add
add
add
add
sub
add
pop
add
adcb
add
mov
add
inc
mov
add
add
add
add
add
inc
add
addb
add
inc
mov
add
add
add
or
add
add
inc
mov
add
add
add
mov
add
addb
add
inc
mov
add
add
add
or
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
in
jo
add
add
add
jae
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
ja
ja
ja
ja
jo
add
add
add
ja
ja
ja
ja
add
pop
jo
add
add
or
jo
or
jo
add
add
mov
jo
or
jo
add
add
mov
jo
ja
mov
pop
jo
add
add
mov
jo
or
jo
add
or
ja
jo
or
jo
add
mov
add
add
or
jo
add
orb
mov
add
mov
mov
jo
or
add
add
add
or
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
addb
lock
decl
pop
jo
xor
lock
decl
pop
jo
xor
lock
decl
add
add
add
add
decl
pop
jo
add
xor
decl
pop
jo
add
xor
decl
add
add
add
add
add
decl
pop
jo
add
add
cmp
decl
pop
jo
add
add
cmp
decl
add
clc
add
push
add
jmp
add
inc
add
incl
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
addb
pop
addb
pop
addb
jg
add
jg
add
incl
add
inc
add
incl
add
add
add
and
add
add
call
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pushf
add
add
add
add
xor
aaa
add
add
inc
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
add
add
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
.byte
