push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
mov
add
call
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
shlb
pop
pusha
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
jecxz
inc
clc
sbb
mov
sub
mov
mov
shl
xor
push
sub
push
mov
mov
mov
cmp
je
add
lea
inc
movzbl
sbb
ja
mov
cmp
jae
nop
mov
cmp
ja
lea
jle
popf
push
pushl
decl
jmp
add
dec
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
pushl
pop
call
add
mov
sub
sub
mov
pop
mov
mov
mov
mov
push
xorl
pop
sub
or
xor
cmp
je
sub
mov
push
push
push
pop
push
pop
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
pop
call
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
push
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
pushl
push
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
mov
add
call
add
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
mov
add
call
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
mov
add
call
add
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
mov
add
call
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
mov
add
call
xor
add
add
adc
add
mov
xor
add
xor
add
add
sahf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
js
add
insb
xor
add
xor
add
xor
add
add
fidivs
add
lcall
add
add
xor
add
add
add
xor
add
add
xor
add
xor
add
add
add
add
add
add
adc
add
sub
add
add
add
push
add
add
add
add
xor
add
add
mov
add
add
add
add
add
nop
xor
add
add
add
add
jl
add
movsb
xor
add
add
add
adc
add
mov
xor
add
xor
add
add
sahf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
add
add
js
add
insb
xor
add
xor
add
xor
add
add
fidivs
add
lcall
add
add
xor
add
add
add
xor
add
add
xor
add
xor
add
add
add
add
add
add
xchg
add
je
imul
je
add
add
dec
popa
jo
imul
insb
gs
add
je
js
je
outsl
fs
push
add
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
jae
gs
popa
insb
jne
add
dec
outsl
arpl
dec
outsl
arpl
aad
inc
imul
add
add
gs
outsl
jbe
inc
imul
jns
add
push
push
je
imul
inc
add
out
inc
gs
imul
bound
gs
add
push
add
je
outsl
arpl
gs
outsb
outsw
inc
add
icebp
add
imul
jb
je
arpl
out
inc
gs
imul
bound
gs
add
sti
add
inc
popa
fs
jb
je
push
je
add
inc
imul
jne
arpl
add
add
je
jb
jbe
push
jns
gs
add
add
popa
jo
imul
inc
jb
popa
je
inc
imul
jns
add
pop
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
or
dec
jae
popa
insb
imul
addr16
add
je
jne
jb
outsb
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
xchg
inc
gs
imul
js
push
add
pop
or
jae
dec
gs
popa
addr16
add
mov
dec
jae
imul
jae
popa
addr16
add
jno
push
gs
jne
jae
jb
mov
inc
imul
dec
gs
popa
addr16
add
fadds
dec
outsl
popa
fs
insl
popa
addr16
add
int
dec
outsl
popa
fs
jne
jae
jb
add
push
gs
outsl
arpl
add
sbb
ja
jo
imul
pop
inc
gs
imul
outsb
addr16
add
rolb
jae
imul
xchg
push
push
gs
jae
addr16
add
in
push
inc
gs
popa
jo
jne
add
push
push
inc
push
xor
cs
insb
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
outsb
jb
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
push
outsb
jb
imul
jb
gs
dec
push
inc
inc
push
inc
pop
push
cs
insb
add
add
popa
jae
outsb
imul
imul
inc
push
dec
xor
cs
insb
add
in
dec
jb
mov
mov
mov
mov
or
add
cwtl
add
addb
mov
jae
shll
pop
jg
cli
sub
loopne
mov
nop
leave
inc
push
aad
xor
adc
mov
mov
rcll
mov
ss
mov
nop
xchg
pop
lock
sbbb
sub
into
jecxz
or
dec
pushf
xor
cmp
ret
cmp
imul
ss
icebp
stc
fisubs
test
mov
jne
ja
scas
scas
das
sbb
shl
cmp
lea
and
sbb
sub
add
jns
clc
xor
cmpsb
pop
xchg
in
add
stos
dec
sbbb
shrb
push
aam
ljmp
or
shr
js
dec
cmpsl
fsubrl
shlb
and
fwait
mov
or
mov
mov
iret
sub
arpl
std
push
ss
sti
jo
jle
pop
mov
or
jnp
sub
inc
test
or
in
lcall
iret
push
mov
xchg
dec
into
or
fs
inc
push
loopne
or
xchg
sahf
mov
jle
test
jno
ror
jb
popf
aas
dec
fstpt
inc
std
jo
hlt
xor
insb
call
cmp
setp
sbb
push
fnstenv
or
sahf
pop
mov
je
sbb
dec
sbbl
mov
loopne
decl
test
cmpsb
fs
sarl
jmp
gs
in
jmp
adc
jb
mov
mov
rol
je,pn
jne
push
jp
ja
lods
je
or
in
push
cwtl
jae
mov
and
add
add
add
add
xor
add
decl
add
add
add
pusha
add
addb
add
add
add
js
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
ss
push
mov
add
sub
add
and
add
inc
add
add
add
add
add
add
add
std
std
add
std
incb
cltd
fwait
fwait
add
lahf
mov
rorb
sahf
sahf
or
cltd
cltd
add
add
add
stos
lods
lods
add
sahf
lahf
sub
cmpsb
cmpsb
movsl
jne
test
mov
mov
mov
scas
mov
jne
stos
stos
push
lahf
sahf
mov
adc
add
add
movsb
sahf
pop
lcall
xchg
cmpsl
scas
scas
les
mov
lret
rcl
jmp
leave
lret
mov
test
pop
cltd
xchg
xchg
and
add
add
rol
mov
sahf
cltd
push
sahf
sahf
mov
mov
mov
mov
into
into
jmp
in
in
in
out
call
call
leave
leave
mov
mov
cltd
cltd
add
std
incl
stos
lods
lods
add
int3
int
cmpsb
cmpsl
cmpsl
sbb
cltd
cltd
xchg
rcrb
test
inc
mov
jmp
out
push
div
std
std
cld
push
repnz
loop
loop
rol
shll
xchg
sbb
add
add
xchg
xchg
pop
mov
mov
nop
xchg
nop
pop
mov
lods
lods
push
stos
stos
stos
scas
popf
sahf
sahf
icebp
fwait
lcall
mov
mov
rol
dec
leave
lret
jmp
in
icebp
repz
cli
cld
cli
sti
cld
cli
jmp
jecxz
dec
into
int
lods
scas
mov
inc
stos
lods
lods
add
nop
daa
mov
cmpsb
cmpsb
pop
test
test
lods
stos
lods
movsl
mov
mov
std
mov
scas
jmp
cmpsl
movsb
pushl
int
cli
aam
clc
out
jecxz
ljmp
repz
repnz
ljmp
cld
scas
mov
fistpl
add
add
xchg
cmp
lods
lods
popf
mov
mov
mov
mov
mov
ret
mov
inc
mov
pushl
movsl
cmpsl
mov
into
ret
lret
lret
fnop
repnz
neg
sti
loope
in
lock
shr
mov
mov
add
push
push
push
push
push
pop
bound
dec
dec
dec
adc
cmp
das
adc
xor
or
add
add
add
add
mov
subl
ret
ret
mov
mov
cmpsl
mov
stos
pushl
lods
mov
shll
dec
leave
ret
sti
leave
shl
enter
int3
leave
repnz
int
mov
mov
popf
mov
lds
add
add
jo
jb
jne
push
pop
pop
gs
dec
dec
push
inc
inc
inc
pop
dec
dec
push
pop
pop
push
pop
cmp
push
sbb
dec
or
ja
xchg
xchg
xchg
inc
mov
mov
cld
leave
leave
leave
dec
leave
pushl
stos
test
jmp
mov
mov
iret
mov
sarl
lock
cld
cmpsl
fwait
cmpsl
lcall
mov
rolb
add
add
nop
mov
test
jnp
jae
jne
insb
insb
imul
je
int
jge
lods
ja
jne
push
popa
bound
stos
test
mov
mov
lock
mov
ret
mov
mov
mov
call
leave
xchg
dec
int
inc
ret
mov
stc
mov
mov
notb
xchg
xchg
call
mov
lea
add
cmpsb
sahf
fsts
mov
lea
mov
mov
xchg
mov
jnp
insb
insl
insl
pop
mov
mov
out
mov
mov
decb
fsubr
cmp
loope
pop
loope
jmp
push
jmp
les
inc
lret
int3
lret
scas
mov
lahf
std
test
mov
lcall
nop
movb
add
shlb
mov
xchg
mov
lea
lcall
cwtl
cltd
cwtl
xchg
cltd
sti
xchg
xchg
out
mov
pop
jg
push
dec
insb
imul
addb
in
sahf
movsb
cmc
push
shl
lcall
xlat
mov
test
movsb
inc
ret
mov
dec
iret
int3
rcl
sar
mov
std
mov
scas
movsl
sahf
mov
jmp
xchg
mov
add
add
les
fldt
xchg
xchg
decl
xchg
xchg
lcall
popf
lahf
lcall
xchg
xchg
cld
mov
imul
jno
jno
test
cltd
lock
lret
mov
mov
rol
call
rcl
jmp
in
jmp
in
push
lock
jmp
inc
mov
stos
lcall
xchg
xchg
ficomps
add
add
sarb
fldt
xchg
xchg
call
cltd
fwait
call
mov
decb
xchg
faddl
xchg
call
mov
cltd
cmp
stos
mov
pushl
mov
int
fnstsw
hlt
repnz
cli
sti
sti
std
cld
sti
sti
out
in
out
call
xlat
fdivr
mov
test
popf
mov
xchg
xchg
dec
add
add
fcom
mov
fldt
mov
lcall
cwtl
fwait
call
xchg
xchg
decb
nop
test
pushf
mov
cmc
mov
pop
stc
mov
mov
std
mov
lcall
ret
scas
jle
sarb
fcom
fdivr
call
cmc
cmc
std
cld
std
clc
stc
clc
fnstsw
mov
hlt
mov
mov
mov
cltd
fwait
push
add
add
leave
les
fldt
mov
movsb
jmp
popf
sahf
jmp
scas
mov
mov
push
inc
xchg
cmp
dec
lea
int3
mov
fcompl
add
jecxz
or
fldcw
xchg
ror
mov
call
stc
clc
cld
cld
std
push
cmc
idiv
jmp
loopne
ljmp
mov
cmpsl
test
fwait
add
mov
mov
mov
ljmp
lods
scas
jmp
stos
inc
mov
inc
cwtl
ds
mov
call
xchg
add
rorl
add
rclb
add
jecxz
add
in
scas
add
repz
push
mov
aaa
ffreep
jne
fst
movsl
jmp
fmulp
jmp
lock
out
in
jmp
fcom
cld
rcl
shl
enter
mov
lods
lods
and
mov
mov
mov
scas
mov
pushl
mov
ljmp
test
fwait
dec
mov
push
fcoms
add
fcomps
add
jecxz
add
out
mov
push
mov
add
cld
ret
cli
ret
or
test
dec
ljmp
call
aad
inc
shlb
test
test
mov
mov
sarl
add
scas
scas
fldt
mov
mov
mov
mov
scas
scas
scas
inc
mov
pop
call
lcall
fistpl
jmp
cmpsb
add
jmp
mov
cli
mov
add
std
les
cld
lds
inc
adc
dec
sbb
std
int
cld
aam
std
aad
out
aad
inc
ret
cmpsl
cmc
stos
stos
test
xchg
fwait
xchg
ds
lods
stos
add
add
add
test
fldt
mov
mov
mov
mov
inc
mov
imul
fistpl
add
fistps
add
lock
clc
rolb
inc
add
std
lds
std
adc
shrl
shrb
shlb
xlat
xor
cld
aam
push
xlat
jbe
mov
stos
mov
xchg
xchg
inc
push
push
push
add
add
add
test
mov
cltd
fwait
lcall
mov
mov
mov
inc
mov
jl
rcrb
add
fbld
add
in
mov
push
mov
add
cld
ret
add
cld
lds
std
fisttpl
fmuls
dec
std
fisttpll
fisttpll
cli
loop
call
shrl
rcrb
add
dec
push
insb
fisttpl
mov
ret
inc
ret
mov
mov
mov
mov
xor
fstpl
add
ljmp
cld
roll
inc
add
std
ret
dec
pop
std
xlat
inc
cld
loope
std
loope
jmp
imul
call
imul
mov
mov
sahf
lahf
pop
cltd
cltd
cltd
or
add
add
dec
pop
pop
pop
pop
fmuls
mov
inc
rol
ret
mov
mov
mov
ret
cmpsl
call
test
jmp
mov
add
repnz
cli
ret
std
movb
dec
add
dec
add
shrb
jecxz
in
xchg
std
in
cmp
in
test
push
mov
push
mov
push
xchg
cld
hlt
xchg
call
shlb
aad
mov
popf
adc
add
add
add
add
popa
inc
jp
jnp
scas
mov
fld
shr
int
shl
int
into
cld
mov
mov
mov
leave
mov
fisubrl
or
repnz
push
mov
add
std
enter
lret
dec
add
fidivrl
in
lock
icebp
popf
std
negb
std
stc
mov
stc
popf
call
aam
mov
mov
xchg
sbb
std
add
add
add
jae
pushf
pushf
sahf
inc
lret
fs
in
loope
jecxz
loopne
loopne
aam
lret
lret
lret
out
into
int3
lret
test
mov
ljmp
sti
ret
cld
movb
inc
add
dec
add
std
lret
std
ficoms
repnz
hlt
mov
push
mov
std
stc
mov
sti
mov
std
clc
mov
mov
mov
cmpsb
test
mov
incb
lods
lods
stos
add
or
lock
adc
repz
in
icebp
inc
in
out
pop
out
in
jne
fnstsw
xchg
xlat
xlat
ret
mov
aad
pop
ljmp
cld
ret
std
ret
cld
movl
dec
pop
std
jecxz
std
test
push
ret
std
cmc
sar
sti
mov
test
cld
sti
stos
call
mov
cmpsb
pushf
mov
addb
add
add
std
incb
std
std
incl
std
std
or
div
sbb
out
repnz
loopne
jnp
int3
ret
mov
adc
divl
add
mov
add
std
les
call
xor
in
mov
std
stc
mov
cli
repz
cmc
lock
jmp
loop
jecxz
mov
fucomip
movsl
sti
loope
mov
ret
mov
cmpsl
xchg
lea
add
add
add
aam
or
int
push
into
mov
sti
out
adc
rep
add
stc
mov
push
mov
out
mov
sbb
out
iret
inc
std
jmp
in
cli
call
fstps
in
aad
in
sarl
rcl
mov
leave
sarb
test
xchg
xchg
sbb
add
add
pop
mov
mov
int
xchg
neg
stos
inc
fldt
cld
shlb
inc
repnz
push
jmp
ret
and
mov
sarb
ret
test
sahf
mov
ret
mov
mov
dec
mov
mov
mov
add
add
add
ret
mov
nop
iret
les
sarb
ffree
mov
mov
mov
movsl
mov
test
ja
mov
push
mov
mov
sub
rcll
int3
push
leave
enter
int
stos
lods
lods
add
add
add
incb
mov
stos
adc
mov
mov
lods
mov
lods
pushf
scas
scas
cmpsb
jns
scas
cmpsb
push
scas
mov
inc
scas
lods
movsb
xor
cmpsb
cmpsb
adc
shrl
xchg
xchg
xchg
pop
lods
lods
stos
add
incl
std
std
std
add
add
add
jmp
add
add
jmp
add
add
jmp
add
add
clc
add
add
add
push
add
add
jmp
add
add
add
inc
add
add
add
incb
add
add
add
clc
add
add
add
push
add
add
add
jmp
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
pusha
add
add
add
add
add
add
add
add
add
add
add
pop
loopne
add
jmp
mov
inc
loop
jb
stos
add
bound
push
jmp
inc
push
test
int
movsb
sti
and
cmp
inc
fidivrl
or
shrb
mov
and
popf
xor
adc
inc
xchg
mov
add
mov
and
cmp
test
cmp
adc
pop
loop
lret
in
jecxz
push
call
xor
push
and
or
stos
inc
pop
sti
pop
hlt
sub
leave
pusha
mov
jnp
jg
out
add
es
dec
es
mov
jns
inc
fdivr
lcall
dec
in
adc
mov
ret
pushf
xor
xchg
dec
in
push
mov
add
mov
push
mov
lods
inc
fadd
pop
push
arpl
xchg
das
jecxz
popa
mov
jmp
mov
jno
cmp
pop
mov
pop
lea
cmp
inc
loopne
pop
repnz
leave
inc
stos
fsubs
mov
leave
sub
jb
dec
mov
jb
add
xlat
les
mov
clc
in
subl
scas
inc
sahf
pop
or
and
ljmp
movsl
or
test
lds
cmpsl
test
aad
dec
jecxz
repnz
orl
or
fcmovb
es
sbb
ds
outsl
data16
xchg
nop
sub
les
xor
pop
in
sbb
cmp
push
mov
add
fimuls
jne
push
mov
xorb
mov
les
mov
test
sub
cmp
dec
dec
loop
jnp
push
out
lcall
xchg
out
pop
cmc
pop
test
mov
inc
jl
jb
cmp
negl
pop
out
dec
ljmp
popf
cmp
cmc
insl
mov
jl
sbb
mov
fdivrs
inc
xlat
jg
xchg
sub
mov
add
jl
das
and
lcall
pop
inc
fidivrs
insb
mov
sahf
cmp
insb
loope
cmpsl
sarl
outsb
loop
pop
adc
adc
data16
lcall
jl
jne,pn
and
lcall
pusha
mov
popa
cmp
call
dec
cmp
shrl
add
jle
lods
icebp
mov
push
add
cmpsb
xor
sub
fsubrs
movsb
dec
loop
dec
pop
idivb
add
sahf
jge
rorb
push
jnp
fwait
xor
popf
movsl
cmp
inc
mov
pop
and
loope
jne
cmc
mov
adc
sbb
cmp
insl
jecxz
out
pop
lock
push
adc
xchg
sub
fsubrl
dec
mov
fcmovnbe
push
mov
out
xchg
add
mov
and
add
es
loopne
int
hlt
js
test
lret
cld
jb
xor
mov
pop
mov
ret
loopne
cmc
imul
popf
push
call
out
imul
shr
bound
xchg
or
outsb
add
xchg
pop
lea
mov
sub
mov
leave
pusha
fistps
push
add
jg
stos
icebp
mov
push
push
popf
test
das
cmpsb
and
xlat
push
sub
fldcw
mov
pusha
idivl
imul
iret
dec
xchg
jp
pushf
xor
pushf
movsl
cmp
inc
mov
pop
and
loope
je
testb
cmp
sbb
leave
sarl
shrb
mov
mov
test
xchg
inc
cmp
and
push
xor
xchg
adc
rolb
aam
dec
sub
jg
lods
inc
fisubl
popa
clc
jb
jo
subb
jge
inc
outsl
push
jae
aam
jp
movsl
cmp
mov
push
ljmp
lods
inc
in
push
out
inc
imul
dec
cli
xchg
jl
pop
sahf
in
insb
add
aas
sbbl
xorb
gs
test
testb
sahf
fidivl
sub
jb
push
push
jmp
jl
nop
stos
stos
fdivl
leave
outsl
push
incl
fwait
xor
push
rclb
cltd
xor
lods
dec
in
mov
imul
adc
js
push
adc
and
mov
pusha
in
xor
and
enter
jns
jne
out
adcl
fcoms
mov
dec
stos
inc
jp
call
fistpl
mov
dec
ss
lahf
and
fcompl
adc
push
add
into
cwtl
mov
int
xchg
cs
pop
and
rcrb
imul
pop
add
mov
adc
sbbl
jle
fwait
jl
lret
xor
sahf
sub
dec
lret
xchg
mov
test
into
lcall
xchg
pop
testb
pushf
inc
fst
arpl
movsl
jbe
dec
out
movsb
pop
out
fsubs
xchg
xchg
dec
shlb
orl
push
xchg
dec
rclb
lahf
ss
clc
pop
bound
jecxz
xchg
nop
mov
adc
xchg
push
mov
test
xchg
xchg
push
xchg
mov
sahf
xor
xchg
inc
mov
jb
adc
imul
jns
xchg
inc
mov
je
out
xchg
xchg
cs
push
movsb
cmp
xchg
test
ret
jle
push
jo
xchg
lods
inc
aad
das
cltd
dec
mov
jg
cmp
shrb
test
dec
xchg
enter
ret
outsb
mov
mov
out
lret
pop
icebp
mov
lea
cltd
or
lret
pop
fnsave
dec
fisttps
cltd
and
je
and
mov
inc
fxch
dec
pop
idivb
sub
loopne
sbb
mov
test
arpl
mov
mov
popa
clc
insb
arpl
out
sbbl
jne
pop
xchg
mov
cmp
into
es
push
inc
mov
or
add
push
stc
push
sub
mov
jnp
add
pop
dec
std
popf
xor
pop
stc
add
data16
xor
xor
xchg
cs
cmc
mov
mov
sub
adc
jmp
gs
pop
or
adc
pop
fmul
fs
jg
mov
rclb
sub
mov
lods
ret
push
aad
mov
js
loope
sbb
mov
inc
mov
int3
arpl
sbb
xchg
dec
and
sbb
or
xlat
stos
pop
stos
inc
inc
jbe
adc
adc
imul
in
sbbl
add
insl
test
jecxz
pop
ja
lret
movsl
or
cmp
lea
jl
mov
jg
ljmp
jb
iret
mov
subl
and
cmp
js
xchg
sub
outsb
lods
inc
lahf
inc
inc
fdivl
lret
lods
sub
popf
xor
mov
es
sub
jo
movsb
cmp
test
fdivl
inc
dec
out
mov
mov
stos
fwait
xor
cmp
and
das
js
adc
roll
xchg
jno
int
jle
push
mov
fwait
mov
mov
sub
inc
fldcw
mov
ret
mov
fistpl
adc
mov
sub
fnstenv
addb
mov
nop
daa
add
fnsave
push
mov
dec
jne
jnp
cmp
mov
movsl
mov
pop
out
xchg
pop
inc
and
jae
pushf
mov
xchg
mov
push
add
sbbb
and
push
ss
es
aaa
mov
ret
out
stc
rcrl
xor
and
pop
sahf
cmpsl
ja
pop
movsl
or
jo
adc
or
inc
fs
xchg
lock
xchg
mov
xchg
in
mov
aaa
pop
aas
xor
mov
mov
inc
xchg
fdivp
fscale
jmp
das
sti
jnp
sub
dec
push
sub
fwait
add
and
inc
jle
jns
sub
lret
xchg
sahf
xor
es
adc
jb
cli
xchg
outsl
xchg
js
lds
sub
cmpsl
sbb
or
outsl
test
mov
jg
mov
bound
push
mov
jle
push
scas
xor
jp
mov
adc
mov
fiaddl
fcmovu
mov
jge
mov
fidivl
and
cmp
fs
fwait
fs
pop
adc
test
mov
xlat
jnp
sbb
push
divb
testb
adc
adc
insl
adc
sbb
jno
push
fdivs
loopne,pn
cs
lods
mov
sarl
dec
push
jp
xchg
pop
mov
sub
les
xchg
sbb
push
jns
mov
xor
push
cmpsb
mov
fs
lcall
fcoms
scas
mov
loope
mov
jo
popa
repz
push
xchg
jg
repz
jmp
cld
cmp
shlb
sub
push
out
in
sbb
sub
or
and
pop
outsl
mov
mov
fadd
xchg
rcr
xor
sub
nop
xor
xchg
pop
pop
addl
clc
rcr
subb
ret
add
sub
lcall
mov
mov
adc
jo
movswl
rorl
scas
xor
imul
inc
pop
outsl
adc
test
xchg
je
test
xor
dec
fistpl
mov
ljmp
dec
ret
jp
mov
subl
adc
rolb
jne
push
adc
xorb
andl
jg
out
movups
cmp
xchg
sbb
push
add
inc
add
mov
andl
jmp
sbb
mov
test
mov
test
pop
cmpsl
add
enter
dec
lahf
stos
push
mov
in
clc
jmp
pushl
dec
sbb
add
clc
jmp
inc
push
xchg
gs
or
push
mov
cmpsb
std
adc
or
in
inc
inc
movsl
out
jne
loopne
daa
xlat
sub
out
xor
int3
iret
aaa
mov
cmp
js
sub
int3
mov
lret
sbb
mov
pushf
fwait
jge
or
push
enter
mov
rorl
cmp
stos
cmp
mov
movsl
dec
subl
imul
jae
adc
fstpt
pop
sub
sub
mov
mov
xchg
repnz
sbb
mov
mov
pop
aam
das
popf
inc
testl
clc
addb
mov
inc
jb
xor
mov
push
jge
push
stc
and
aas
mov
dec
fidivrs
mov
mov
fistps
loope
mov
rorb
add
or
das
or
lcall
lret
sub
push
out
dec
push
in
mov
jle
xchg
sub
movsb
cmp
nop
shrb
push
call
push
mov
fsub
jle
lods
add
and
inc
fnsave
test
adc
imul
mov
call
ds
cmp
insb
int
ror
test
icebp
dec
and
push
dec
insl
lods
out
mov
popa
hlt
mov
xchg
stos
imul
xor
mov
shrb
fisttpl
int3
mov
insl
add
scas
push
mov
cmp
and
cmp
add
inc
fimuls
test
cld
test
iret
je
fabs
add
cli
repnz
sub
mov
inc
inc
fcomps
into
gs
pop
mulb
jge
or
sbb
inc
mov
shrb
cmpsb
cmp
mov
les
xlat
push
in
in
jecxz
pop
or
add
mov
pop
mov
fbstp
aam
nop
loopne
cmp
repnz
pop
call
pop
out
mov
jnp
daa
mov
mov
xor
pop
loopne
push
inc
push
call
inc
inc
outsl
push
add
cmpsl
outsb
sub
lds
aam
jecxz
ret
xchg
and
xor
pop
pushf
xor
mov
cmp
je
fnstenv
popf
push
in
push
testl
lds
ljmp
pop
xchg
call
push
ja
push
data16
cmpb
lea
push
pop
sahf
mov
loopne
stos
mov
aam
enter
jg
mov
push
popf
rorl
and
das
fstps
test
lret
in
aad
xchg
call
repz
lods
cmc
mov
jle
adc
movsb
cwtl
das
aam
xor
mov
mov
in
fists
fs
jg
or
repz
popf
xor
xchg
adc
mov
lret
pop
dec
rorb
cld
outsl
insl
xor
hlt
mov
xchg
test
iret
rdtsc
enter
pop
sbb
movb
jnp
outsb
dec
in
jle
mov
mov
fwait
xor
mov
dec
out
sbb
insl
add
sbb
jle
movsb
mov
pop
out
pushf
ss
test
stos
cmp
pop
iret
push
xor
clc
out
jl
and
mov
add
mov
nop
daa
loope
aas
sub
scas
inc
jmp
pop
hlt
jle
into
gs
fldlg2
sbbl
xor
sbb
mov
xlat
in
cs
dec
loope
inc
add
add
and
je
inc
xlat
outsl
popf
mov
imul
jl
lret
push
repnz
jecxz
xor
ss
addr16
insl
pop
orl
addl
test
mov
rcll
out
mov
inc
insl
xlat
insl
add
xchg
fs
out
and
lret
sti
xchg
lret
inc
test
sbb
mov
fdivr
xchg
sbb
xor
push
in
mov
xlat
jae
mov
int
sub
test
nop
daa
xchg
cmpsl
fnsave
scas
inc
rolb
xchg
add
int3
arpl
and
jmp
push
test
ret
or
shll
jne
jl
inc
fcompl
xchg
xchg
sub
arpl
movsb
push
sbbl
loope
mov
xchg
cmp
xchg
mov
lret
jbe,pn
ret
cmp
js
pop
repnz
xchg
pop
out
out
jns
dec
emms
push
cmp
adc
inc
cmp
dec
cltd
and
jp
mov
push
js
out
xchg
mov
or
enter
ret
popa
clc
lea
jg
dec
add
inc
arpl
sbb
sti
jg
cmp
fcmovb
pop
cld
cwtl
fsubrs
push
aad
cmp
add
jl
repz
rclb
sti
mov
xor
gs
dec
in
push
outsb
add
leave
rorl
sbb
test
pop
cmp
outsl
fnsave
pop
cmp
lcall
and
sub
gs
and
jo
ds
cltd
insb
add
pop
hlt
subb
stos
jnp
loopne
mov
xor
xlat
outsb
sbb
cmp
sbbb
mov
xor
add
in
and
lahf
sbb
mov
andl
sub
jle
sbb
ss
xor
sarb
lods
dec
fsubrs
int3
sub
enter
je
adc
pop
sahf
imul
movsl
insl
xchg
int
out
loop
sub
sbb
cmp
mov
ficoml
xor
sarl
dec
dec
insl
js
or
cmp
hlt
mov
push
sub
and
adc
stc
push
xor
inc
adc
sub
out
push
jne
cmp
insl
add
push
xchg
sub
repz
loop
pop
sahf
or
jnp
mov
pop
lret
xchg
in
jge
cmp
movsl
shrb
fwait
push
jmp
and
jns
inc
xlat
mov
pop
cmc
icebp
adc
cs
sbb
pop
inc
jae
bnd
loop
aam
jns
loope
out
xchg
or
movsb
jno
mov
mov
sub
dec
imul
dec
loopne
stc
repnz
fnsave
mov
adc
jne
lds
mov
jecxz
xor
push
mov
int3
mov
adc
or
bound
rclb
les
aas
inc
fdivp
push
jecxz
push
adc
add
dec
mov
stos
fisubrs
pop
dec
divl
leave
mull
and
inc
icebp
mov
push
sub
jno
stos
lea
imulb
lods
mov
flds
push
call
stc
jp
push
popf
fistps
and
icebp
xor
fidivrl
popa
clc
lods
cmpsl
fdivl
lds
outsl
cli
xchg
sbb
sahf
xor
rep
mov
fidivs
lcall
sub
push
int3
lods
pop
sahf
lret
and
in
mov
push
xor
fiaddl
fidivl
insb
popa
clc
lcall
push
sub
popf
xor
mov
mov
stc
repz
jo
adc
testl
pusha
mov
lret
fnsave
push
call
pop
dec
outsl
push
cmp
mov
push
lea
fisubs
mov
lock
inc
faddl
fbstp
arpl
inc
test
xchg
call
add
cmp
mov
shll
leave
pop
out
sti
popf
fnsave
ja
mov
xchg
shlb
or
sbb
daa
mov
cmpsl
mov
out
xchg
ss
adc
sub
test
dec
loopne
mov
jl
insl
xlat
xchg
xchg
xlat
out
movsb
cmp
add
mov
test
xor
push
shll
daa
jl
in
dec
ds
add
adc
mov
jnp
inc
insb
mov
xor
insl
or
dec
mov
lret
aad
push
int
mov
test
adc
sub
das
and
sbb
in
jge
aaa
hlt
mov
mov
and
je
sahf
test
shll
adcl
xor
jnp
add
aam
xchg
cmp
dec
lahf
test
and
stos
aam
sub
jle
inc
std
and
gs
lds
adc
xchg
xchg
mov
ret
mov
mov
xchg
inc
mov
push
lods
xchg
adc
cmp
add
push
xchg
daa
push
in
push
mov
xor
jne
test
sub
nop
in
mov
dec
call
or
ja
mov
push
popf
mov
push
mov
pop
in
mov
inc
xlat
sub
idivl
or
int3
and
and
xor
enter
data16
into
mov
mov
movsb
inc
cmp
mov
cmpsb
jb
imul
mov
imulb
popa
sub
je
xchg
cmp
push
adc
xchg
fiaddl
dec
das
mov
mov
jnp
addr16
sbb
sahf
adc
daa
xor
or
outsb
mov
inc
jmp
imulb
into
pop
xor
dec
mov
pop
inc
jmp
and
push
mov
mov
into
mov
jmp
mov
xor
mov
inc
out
sub
xchg
fdivp
sbb
ds
push
and
push
rorl
mov
add
pop
test
adc
sbb
cmp
popa
mov
sub
in
xchg
nop
jge
or
push
and
test
fistpl
lock
mov
add
push
pushf
iret
sub
cmc
out
inc
leave
arpl
loopne
inc
xor
adc
ds
sub
test
pop
dec
cli
test
fimuls
xor
dec
cs
jae
inc
cmp
or
aaa
cwtl
pop
setle
sbb
mov
movsb
mov
sbb
aas
mov
add
out
pushf
mov
xor
imul
cmp
shll
jnp
inc
pop
movsl
inc
mov
andb
jecxz
xchg
subb
lret
hlt
loopne
jns
mov
mov
dec
xchg
xchg
loop
jae
and
test
adc
mov
add
js
jno
sbb
xor
jns
dec
xchg
shlb
scas
or
mov
xor
mov
mov
inc
je
fisttpl
cmpb
cmpsb
rcll
sbb
cmp
popf
aad
cmp
mov
mov
jb
fdivrp
xor
mov
cmpl
bound
push
ss
pop
add
push
adc
jb
jp
ljmp
pop
mov
mov
inc
mov
cmp
sub
sub
add
pop
cmp
lock
sub
repnz
js
inc
inc
loope
sub
in
dec
in
push
mov
pop
loopne
mov
add
data16
jle
stc
aad
jnp
xor
cli
sub
pop
loopne
dec
push
insb
mov
xor
rorb
push
test
pusha
bound
pop
lods
mov
mov
stos
sar
sti
rcl
jns
shll
push
sub
adc
xchg
scas
push
repnz
imul
cmp
daa
test
jp
mov
jle
cltd
in
out
jae
push
ret
icebp
insw
iret
xchg
clc
dec
and
sahf
mov
cli
cmp
lret
cwtl
and
jp
or
or
inc
inc
mov
inc
pop
hlt
pop
or
cmpsb
test
orl
into
mov
arpl
fistpll
xchg
imul
scas
rclb
inc
xor
in
push
lret
inc
loop
imul
mov
mov
and
push
cmpsb
mov
jnp
insb
lcall
je
test
dec
dec
out
jecxz
mov
sub
xchg
out
push
enter
and
mov
int
pop
sub
mov
mov
pop
ret
ret
aam
xchg
jb
mov
jle
jae
xor
scas
jo
mov
mov
xor
repnz
cmpsl
and
sub
notb
and
adc
aad
mov
adc
inc
push
pslld
cld
aam
lret
test
adc
das
pop
or
cmp
adc
or
clc
in
push
mov
imul
mov
adc
cmc
jne
dec
pop
rcll
clc
sbb
sbb
add
roll
xchg
fcomi
mov
pop
xchg
ds
sti
jo
dec
not
lods
stos
lea
imul
xlat
lcall
adc
cmpsb
pop
sti
jae
ljmp
xchg
les
cs
lods
adc
loop
cmp
xchg
sbb
sti
mov
bound
ja
adc
jnp
mov
insb
nop
popa
sub
call
iret
sub
cwtl
push
sbb
ljmp
shlb
sub
lods
mov
push
jo
and
mov
jl
sar
into
test
lods
mov
mov
jb
shrl
sbb
sub
std
fucomp
xlat
gs
sbb
subb
push
push
test
pop
xor
sub
repnz
lds
test
add
xchg
insl
xor
ljmp
xor
xchg
pushf
mov
arpl
adc
xchg
and
mov
jg
push
pop
lea
pop
in
ret
sbb
cmpsb
das
sbb
sti
fnstsw
push
adc
jne
nop
push
inc
insl
clc
mov
les
loop
iret
rcll
push
movsl
jl
pop
push
mov
mov
movsb
xchg
dec
into
int3
lock
fidivrs
mov
mov
push
jno
scas
dec
outsl
neg
repz
inc
sbb
imul
cmp
popf
add
insb
fisubs
jo
lret
daa
outsl
or
mov
rolb
xor
sub
mov
ret
ljmp
inc
jb
add
popa
xchg
xchg
daa
mov
jo
lret
jp
ret
js
hlt
inc
fbstp
cmp
xchg
ja
xchg
sub
popl
xchg
clc
inc
je
push
addb
sbb
jg
loopne
js
mov
mov
cld
xlat
orb
mov
imul
cmp
sbb
fmulp
xchg
pop
bswap
push
or
icebp
lds
pop
and
sub
ljmp
inc
popa
loop
les
mov
or
mov
pusha
mov
push
xchg
push
pop
dec
jp
or
sbb
push
sahf
mov
cmpsl
sbb
shll
inc
fnstsw
mov
xor
cmp
loop
es
cmc
std
imulb
enter
jg
and
mov
xlat
loopne
inc
fs
jmp
jmp
sbb
jecxz
dec
jl
sub
or
loopne
andl
sahf
shl
fdivl
enter
cmp
test
outsb
dec
sub
cmpsl
sbb
iret
mov
and
mov
mov
or
mov
mov
call
movsl
inc
push
loop
push
adc
inc
fdivrs
mov
xchg
ja
fisttpll
negb
pop
repnz
jnp
in
xchg
xor
and
je
xor
or
in
movsl
inc
mov
adc
int
sub
pop
push
scas
aas
and
pop
mov
jmp
popa
stos
pop
xchg
test
xorb
jb
insl
mov
inc
dec
xor
push
loop
sub
leave
rclb
push
push
imul
mov
add
scas
into
pop
cmp
jg
jg
in
push
out
adc
lret
mov
lds
imul
xchg
ljmp
sub
inc
jl
and
incb
mov
push
mov
test
dec
in
leave
inc
xlat
cmp
pop
icebp
pop
or
addb
into
cmp
lea
mov
lods
inc
jmp
dec
fsts
test
cs
dec
frstor
push
jg
aaa
add
sahf
dec
out
cmc
xchg
imul
and
ljmp
xor
sbbb
imul
and
cltd
mov
stos
push
stos
sub
mov
push
dec
mov
cmp
in
fisubrs
dec
add
jns
cmp
mov
popf
insb
in
inc
jae
ret
jmp
jmp
aad
out
jp
inc
gs
or
gs
push
xor
test
sbb
dec
mov
in
sub
cs
or
shr
lods
pop
ja
jmp
les
in
shlb
rcll
test
and
adc
sub
mov
mov
test
movsl
js
divb
test
mov
cmp
sub
xchg
iret
add
stos
mov
inc
popf
mov
loopne
mov
insb
out
jmp
mov
cmp
je
mov
shll
push
jmp
sbb
xchg
addb
sub
lds
cmp
icebp
jl
jecxz
and
stos
aam
sahf
xchg
vmovaps
shl
xor
or
aas
icebp
jle
pop
shll
in
xchg
stc
inc
lock
mov
jae
pop
sbb
and
loopne
pusha
lds
fisubrs
fadds
cmp
sbb
push
stos
pop
cmp
ret
mov
jl
fxch
test
out
adc
pop
movsl
cwtl
pop
push
popf
xor
jns
mov
and
imul
leave
test
mov
pusha
add
pop
insb
or
dec
cltd
dec
lea
fsubrs
daa
add
jmp
dec
lret
or
xchg
mov
stos
out
bound
gs
and
icebp
mov
sti
lods
iret
adc
outsb
dec
rcl
aam
daa
arpl
add
lahf
fwait
mov
mulb
clc
lret
ror
pop
or
or
js
lock
fists
and
jge
sub
mov
popf
and
mov
push
cmp
imul
testl
mov
fs
iret
cmp
cli
add
cmpl
xor
add
fisttps
outsl
inc
inc
sub
inc
fs
xchg
in
iret
jmp
in
inc
mov
push
cs
or
imul
cld
push
pop
imul
mov
nop
dec
test
mov
pop
insl
cmp
fdivs
add
xor
movsl
add
fmul
lock
rcr
xor
lea
dec
jne
test
xchg
sbb
fildll
insb
leave
in
add
scas
enter
int3
es
cvtdq2ps
mov
push
adcl
sub
gs
cmp
or
inc
call
std
or
gs
and
inc
shlb
mov
lcall
jb
jmp
fisttpl
xchg
rcrl
aas
jae,pn
int3
std
xchg
cwtl
arpl
mov
inc
push
jns
insb
aam
aad
insb
jbe
mov
test
mov
and
push
add
xor
cmc
fdivl
sub
or
repnz
faddl
or
mov
cmc
mov
push
xorl
and
jecxz
dec
movsb
mov
jg
test
xchg
pop
cld
or
nop
add
cmp
push
adc
inc
fs
pop
in
aad
fucomip
aam
xchg
xor
add
push
mov
mov
enter
test
nop
cmpsl
mov
sbb
dec
mov
insl
mov
and
js,pt
mov
andb
dec
push
xor
insl
shrl
scas
ljmp
push
shlb
shl
incl
imul
mov
mov
and
cmp
out
repz
jbe
xor
dec
or
aaa
mov
or
shll
and
jmp
sbb
aaa
jne
xlat
cs
into
rcl
ss
dec
dec
clc
inc
adc
xchg
add
lods
or
and
cmpsl
lcall
pmaxsw
imul
out
aam
rorb
push
sbb
inc
fs
lods
shr
popf
aad
loope
nop
scas
daa
fwait
aaa
rcl
js
enter
sub
mov
out
pop
cmp
pop
or
xchg
pop
and
sub
sub
jl
out
lcall
das
adc
test
pop
sti
add
sub
jmp
popa
sub
xchg
push
dec
daa
sbb
cmpsb
pop
cmp
mov
bound
sbb
xor
push
add
and
inc
add
adc
mov
xchg
test
into
pop
sub
mov
lcall
subl
dec
lret
push
inc
mov
fdivrs
inc
push
cmc
mov
pop
or
xor
push
and
iret
popa
fcmove
ja
nop
js
pusha
std
lret
pop
mov
js
outsl
pop
lret
subl
seto
add
iret
xchg
jge
cmpsb
shlb
jp
and
jle
pusha
daa
outsb
fisubl
jmp
and
addr16
cwtl
lcall
and
addb
or
std
bound
call
inc
xor
popf
pop
les
mov
xchg
cmpsl
clc
scas
dec
or
jmp
sbb
sbb
lock
aam
or
inc
fldl
scas
dec
negb
dec
jns
lock
or
mov
push
into
test
xchg
cmp
aas
jnp
adc
mov
cld
lret
rcrl
les
add
popf
js
daa
int
dec
dec
jp
imul
lods
xchg
sbb
xchg
add
ja
into
stc
pusha
xor
mov
fwait
mov
lea
adc
pusha
movsl
mov
iret
inc
pop
subl
test
sub
and
incl
xor
mov
je
push
xor
mov
lods
mov
paddusb
shlb
pop
add
mov
fsubrl
xchg
loope
outsb
fcoms
js
add
mov
or
stos
daa
inc
mov
push
lods
sti
rorb
mov
mov
or
jg
mov
jle
or
dec
mov
jnp
xor
filds
mov
or
xchg
mov
arpl
imul
sbb
inc
push
shl
test
jb
inc
lret
call
sti
sub
adc
pop
cwtl
pushf
es
xchg
dec
test
jg
adc
sub
jno
das
jle
mov
repz
add
xor
shl
movsb
and
and
pop
xor
mov
es
mov
jns
push
dec
sbb
dec
sti
adc
mov
xor
hlt
cmp
mov
rolb
inc
inc
xor
mov
shrl
cmp
sbb
leave
inc
imul
ds
jne
adc
out
pushf
mov
adc
dec
mov
push
dec
jecxz
pop
cmp
jp
inc
and
or
mov
outsl
jle
js
data16
fucompp
clc
lahf
das
pop
jae
in
lahf
flds
cli
dec
js
fwait
imul
inc
pop
push
xor
mov
hlt
jl
jg
ljmp
into
in
test
jbe
xchg
test
test
sub
dec
push
es
mov
arpl
and
popf
pop
xor
pop
jno
sti
xor
mov
mov
stc
sub
inc
mov
in
roll
daa
iret
ret
jl
xor
das
lds
push
scas
mov
fcomi
and
jmp
out
add
adc
xchg
sarb
lcall
mov
enter
bound
cmpsl
inc
dec
push
xchg
xchg
fwait
add
xor
and
cmc
adc
mov
insb
lcall
push
cmp
xor
inc
inc
arpl
xor
dec
imul
stos
add
enter
rcll
xchg
cli
lcall
dec
pop
gs
mov
mov
movb
mov
outsl
lret
xor
sub
cmpsb
and
cmp
inc
ss
test
pop
out
or
add
aad
push
clc
fisttpll
mov
mov
push
push
add
xor
aad
add
xchg
xchg
pop
les
insb
bound
mov
cmp
lcall
gs
pop
fidivl
jbe
and
jmp
xor
pop
sti
call
xor
bnd
jae
sbb
sub
jecxz
push
hlt
jno
push
and
data16
lret
add
mov
push
or
loopne
rcrl
je
mov
outsb
cld
pop
cmp
pushf
lods
pop
xlat
clc
push
xor
sbb
lret
dec
popa
iret
mov
subl
mov
mov
or
sbb
mov
lret
shrl
fbstp
cmp
mov
and
pop
and
subb
mov
cmp
ret
addr16
sub
jmp
sbb
imul
mov
lret
push
imul
in
je
mov
cli
cli
mov
push
jecxz
cmp
jns
add
dec
sub
repnz
int
and
push
lock
daa
jb
push
iret
push
addl
cmpsl
ja
dec
xor
xlat
mov
cmc
xchg
div
jmp
sahf
pop
inc
outsb
pop
mov
pushf
and
dec
inc
add
cmp
popa
and
pop
repz
xchg
and
sbb
je
in
inc
sti
subl
ret
cli
mov
dec
jo
loope
fisubl
add
sub
jl
int3
jecxz
js
sahf
or
mov
sti
notl
fildll
loop
lds
xlat
pushf
push
cmp
push
sbb
or
sbb
outsl
jns,pn
dec
mov
les
jge
fiadds
test
jbe
push
pop
xchg
jnp
sub
inc
andl
xchg
stc
ret
or
jbe
arpl
call
inc
ds
pop
xor
pop
add
test
jmp
xchg
fimuls
xor
ljmp
rolb
subb
lret
movsl
scas
add
imul
leave
push
push
ficoml
lds
lret
gs
sub
ds
popf
lcall
add
jmp
lods
push
dec
out
in
inc
add
push
sti
mov
xlat
mov
iret
dec
pop
popf
xor
outsl
push
scas
mov
int
ja
dec
insl
add
negl
sbb
add
insl
rorb
and
std
sub
and
mov
mov
mov
pop
jp,pn
cmp
mov
jne
inc
data16
jl
mov
out
jne
inc
mov
adc
lahf
fwait
xchg
movsb
or
lret
movb
xchg
sti
out
push
hlt
lcall
push
enter
fidivrl
cmp
ljmp
fiaddl
cmpsb
loopne
sbb
sti
sti
sub
scas
wrssd
xchg
cpuid
std
lahf
dec
es
mov
pop
ffreep
fwait
cwtl
sub
shl
mov
scas
out
lea
fdivrp
add
mov
shll
fistl
jmp
je
fildl
mov
dec
xor
orb
jmp
arpl
and
sbb
icebp
mov
inc
pop
cli
cmp
mov
push
shll
add
gs
jae
cmpsl
movsb
jl
movq
mov
call
push
jmp
test
add
fisubrl
ds
mov
mov
ja
mov
and
push
out
jle
jecxz
std
sub
mov
out
pop
add
xor
push
cmp
inc
cmpsb
nop
into
pushf
mov
cmp
xlat
rolb
sub
mov
test
adc
rcr
inc
in
fistpl
mov
out
fimuls
js
mov
sub
bound
dec
pop
pop
addl
and
addb
std
jmp
xchg
cmp
gs
sub
aad
shrb
lods
mov
dec
mov
jl
repnz
loope
cmp
push
mov
xor
push
xor
lahf
pop
lods
jns
xchg
jge
das
mov
out
cli
dec
sub
nop
sub
mov
cmp
inc
les
push
sub
push
sbb
int3
or
sub
jle
adc
mov
and
shl
inc
add
bound
cltd
hlt
ds
cmp
push
mov
pop
pop
pop
dec
out
lret
rorb
hlt
push
inc
mov
adc
rcl
mov
in
push
popf
cs
add
fsubs
sarw
cmp
push
or
mov
cld
ss
dec
add
add
sbb
and
sub
std
mov
ret
nop
jge
mov
int3
mov
icebp
push
xchg
pmaxub
push
mov
shll
int3
push
jp
pop
push
aas
and
dec
outsl
xor
jnp
arpl
lods
sarb
cwtl
xchg
lret
jle
pop
cmpl
mov
repz
repnz
insl
cmp
ljmp
mov
mov
loop
adc
dec
mov
pop
and
or
jbe
rorb
pusha
pop
subl
outsb
mov
mov
adc
movsb
ret
ret
jmp
inc
imul
outsb
inc
fstl
pop
rep
xchg
pop
push
lahf
idivl
out
sarb
push
stos
adc
rcrl
cwtl
rcll
in
add
jbe
adc
mov
mov
mov
adc
repz
ljmp
gs
push
push
push
mov
mov
loope
push
inc
xchg
in
cwtl
sbb
addr16
adc
jbe
push
cmpsb
push
test
jae
pop
and
or
xchg
add
mov
push
mov
popa
sbb
mov
dec
loopne
stos
jo
icebp
jecxz
popf
push
dec
es
sbb
dec
loop
push
inc
rcll
or
push
das
add
mov
add
stos
cmp
les
mov
push
or
es
or
cs
dec
gs
fdivrl
xor
sbb
dec
push
cmp
into
enter
stos
aad
pusha
mov
inc
in
into
jnp
sahf
jl
jg
adc
psubusw
mov
mov
lahf
push
push
xor
pop
icebp
fs
bound
jns
loope
out
fcmovb
cmp
dec
add
cmp
push
popf
nop
stos
push
and
and
adc
popf
inc
push
push
inc
jle
sbb
pop
pop
loope
jne
popf
push
dec
iret
rorl
push
xor
push
xor
incb
ficomps
hlt
insb
jb
dec
push
in
xlat
test
push
jo,pn
push
pop
inc
xchg
sbb
test
jge
data16
dec
sarl
out
mov
inc
mov
push
call
inc
cltd
sbb
sub
sahf
rorl
into
xor
add
xchg
cld
daa
lret
int
pop
jno
movsb
ret
sub
sti
mov
lock
push
or
imul
jg
popf
jmp
inc
popf
sub
cltd
mov
inc
mov
jae
adc
xor
fldl
mov
inc
stc
stc
pushl
inc
in
sbb
test
fisubrs
push
addr16
rolb
xor
push
jmp
cmpsb
insb
inc
jne
imul
mov
or
enter
pop
pop
adc
mov
in
sub
dec
pop
push
jae
push
cltd
adc
mov
movsb
test
adc
pop
fs
adc
fwait
daa
loope
testl
mov
addl
lods
or
movsl
outsb
leave
inc
stos
jno
movsb
fidivl
jne
mov
push
cs
ja
inc
stos
cmpsb
divb
shll
pop
imul
scas
mov
fs
les
xor
xchg
or
jmp
out
push
sub
sbb
aaa
or
pop
imul
or
dec
mov
pop
aas
lds
lcall
stos
out
mov
add
xorb
dec
add
loope
pop
sbb
in
mov
fnstsw
mov
cmp
repnz
mov
es
mov
std
xlat
jp
movsl
jne
push
in
es
mov
addr16
icebp
js
pop
in
bound
adc
sti
sub
in
xchg
popf
call
adc
cwtl
movsb
cmp
out
fstpl
xchg
testb
mov
out
sti
bound
movsl
adc
stc
mov
cmpl
loope
jbe
aam
cmp
jmp
cld
roll
mov
mov
fwait
mov
cmc
cli
ja
mov
add
out
popa
repnz
lea
cmpsl
jg
dec
pop
popf
ja
test
sbb
or
outsb
sbb
lods
pop
jae
rcrb
xor
stos
or
jl
iret
pop
addl
jbe
sbb
adc
add
xlat
je
mov
lds
sti
ljmp
stos
sbb
cmp
xchg
adc
lds
pushf
rorb
sub
aas
aad
pushf
hlt
sbb
cld
dec
es
and
pop
mov
cmpsl
ror
cld
mov
shrb
mov
jb
pushf
lods
rclb
loop
movsl
xor
dec
mov
imul
fsubs
test
loopne
int3
fwait
int3
fwait
scas
pop
test
mov
dec
loopne
and
dec
iret
and
cmp
ret
insb
mov
fidivrs
mov
mov
adc
leave
sub
jg
fwait
mov
inc
mov
xchg
sub
outsl
push
fs
adc
pop
icebp
adc
repnz
arpl
stos
pop
mov
and
xor
das
rcr
adc
jg
add
jnp
lret
cltd
pop
and
xor
inc
mov
mov
aas
pop
lock
loope
das
fs
fstps
sbb
enter
xabort
pushf
pop
iret
cwtl
nop
inc
loop
mov
ds
xor
xchg
les
loop
stc
dec
imul
cmp
mov
or
insl
ss
adc
xchg
aas
mov
ret
cmp
rol
add
enter
or
clc
call
mov
clc
out
lahf
cmp
or
mov
scas
popf
mov
inc
in
jne
movsb
lret
loope
fmull
sub
and
or
add
mov
xchg
das
les
jae
or
pop
xor
dec
xchg
fldt
fs
or
add
js
adc
mov
jge
dec
outsl
sbb
insl
mov
xorb
push
mov
jne
xchg
pushf
dec
lods
inc
jmp
xor
jl
dec
pop
fbstp
pop
insl
cld
aas
aas
cmp
cld
jno
lds
mov
push
outsl
jge
mov
mov
add
rolb
ficoms
push
stc
fs
aaa
xchg
push
adc
jecxz
dec
mov
negl
lods
push
xor
mov
cmc
dec
jecxz
lods
pop
and
cmp
push
add
je
dec
insb
add
movsb
or
sub
data16
test
int
xchg
lods
jb
inc
aad
dec
xchg
dec
cmpsb
mov
lock
hlt
das
sbb
sbb
mov
call
mov
jg
cwtl
mov
stos
mov
cmp
sbb
je
push
es
cmp
out
cmp
xchg
xor
or
push
stos
shll
adc
data16
stos
ja
inc
movsl
and
inc
ds
jae
js
xchg
push
xchg
aas
and
or
sub
hlt
faddp
adc
jle
or
or
ret
jb
div
and
mov
jp
cli
and
adc
insb
dec
cmc
mov
aam
dec
mov
or
mov
and
adc
bound
cmp
mov
push
lods
xor
mov
cld
push
lods
mov
dec
test
pop
cmp
inc
out
fs
xchg
ja
les
testb
sbb
sbb
mov
jge
adc
inc
push
push
pop
sub
jmp
jo
push
testl
out
inc
or
xchg
xor
das
loope
sub
mov
fadds
xchg
dec
out
dec
popa
push
adc
test
mov
xchg
fisubrl
sbb
test
jo
and
or
cltd
push
jno
aam
std
psraw
adc
xchg
jmp
cld
cwtl
out
shl
sbb
lock
push
pop
inc
add
mov
inc
adc
push
xchg
stos
stos
gs
pop
and
push
rcll
lahf
bound
mov
or
mov
sub
or
outsb
pop
cmpsb
add
je
dec
xor
or
shrl
in
inc
cwtl
in
mov
xchg
mov
ss
leave
jnp
mov
cmp
test
pushf
dec
div
std
mov
cmp
movsl
lcall
fnstsw
sub
test
or
xor
es
test
mov
fmuls
cmpsl
ds
adcb
dec
pop
jg
popf
xor
mov
mov
xchg
and
inc
sbb
popa
cltd
cmp
lret
cmpsb
mov
push
ljmp
jne
jo
dec
in
xchg
es
jns
ljmp
int3
sbbl
imul
jmp
dec
lcall
data16
ss
xchg
push
ljmp
jno
shufps
xor
loope
subl
pop
or
loope
pop
adc
lods
fs
xchg
into
and
pushl
inc
fistl
cmp
icebp
mov
les
imulb
movsb
cmp
jno
xor
dec
pushf
push
mov
test
mov
fcoms
cmc
mov
int
sub
xchg
dec
jmp
jle
xor
out
or
cmp
daa
mov
lea
fdivl
and
xchg
arpl
movb
inc
xor
sbbl
xchg
lahf
ss
test
jle
lea
lcall
and
jg
cld
xchg
outsb
mov
cmpsb
cmp
and
js
add
es
pop
lahf
pop
repz
mov
fcompl
add
es
pusha
nop
fidivl
addl
add
aaa
mov
jno
or
int3
jb
jnp
in
mov
pop
into
pusha
div
cmp
popa
sbb
cmpsl
mov
fdivrl
mov
test
popa
or
movsl
xor
fidivs
fucomp
jg
scas
xchg
push
cli
pop
cmc
and
lods
inc
out
jle
test
clc
lahf
push
mov
sbb
dec
adc
cwtl
sahf
xor
mov
mov
xchg
sub
xor
pop
cmc
add
lea
cli
xchg
pop
scas
inc
jle
jne
clc
xchg
repz
add
dec
popf
push
lods
outsl
daa
mov
and
mov
jl
mov
pop
pusha
inc
xlat
cltd
call
loopne
in
ret
push
inc
fdivrs
mov
xchg
mov
flds
cwtl
in
mov
inc
jg
cltd
test
sbbb
leave
cs
cs
inc
fimull
pop
inc
insl
stc
xchg
popa
stc
lcall
push
in
jg
dec
push
jg
inc
insb
xchg
xchg
popa
jle
fwait
mov
mov
in
jnp
dec
push
sti
xchg
inc
insb
stos
inc
xchg
popa
stos
inc
fwait
mov
dec
icebp
mov
iret
dec
push
iret
inc
insl
mov
xchg
popa
ss
mov
jmp
in
jae
cmp
pop
lcall
test
outsl
push
out
inc
dec
sub
ja
scas
inc
mov
inc
loop
mov
and
and
rcrb
or
adc
pop
icebp
insl
mov
popa
mov
lret
bound
ficompl
mov
das
pop
pop
and
push
pop
jp
movsb
jg
mov
dec
fwait
xor
and
imul
decb
std
xchg
movsl
outsb
ljmp
mov
stc
pop
add
out
jp
mov
mov
cmp
test
in
dec
hlt
stc
cs
inc
xchg
push
xor
mov
mov
lahf
dec
notl
dec
xchg
push
and
out
scas
push
call
aaa
cli
mov
out
inc
mov
mov
mov
inc
fisubrs
std
cmp
and
inc
mov
shll
and
sub
and
js
pop
lock
mov
ret
cmp
jecxz
push
sbb
test
jmp
dec
stc
jae
aaa
into
mov
sub
lret
rcrb
pop
das
es
aaa
mov
jo
and
mov
ret
cld
out
dec
loopne
push
lods
inc
dec
cmp
popa
xchg
test
pop
mov
loopne
stc
sbb
lret
bound
fsubl
sub
xchg
mov
add
shll
les
and
xchg
jp
cld
movsb
mov
inc
lock
mov
jb
and
add
mov
xor
les
mov
adc
mov
and
ds
push
in
inc
pop
lods
inc
mov
cmp
mov
insb
add
arpl
xor
push
push
cmp
mov
mov
or
cmc
pushf
xor
dec
sub
jne
and
shrb
inc
sub
mov
jp
inc
lods
inc
jg
insb
add
lahf
arpl
in
jp
call
sub
jns
mov
sbb
mov
mov
mov
jl
dec
jecxz
popf
lods
inc
jnp
cmp
rolb
cwtl
or
pop
sub
pusha
xchg
insl
mov
int
mov
ficompl
xchg
push
xor
cwtl
push
mov
rol
in
repnz
je
adc
hlt
inc
cmp
push
xchg
xchg
cmc
mov
mov
dec
in
outsl
push
and
in
xor
jo
push
insl
test
cmc
mov
in
mov
cmp
add
test
cmp
pop
add
lds
push
push
jmp
jg
push
lods
movsl
jbe
ror
mov
cli
xrelease
sub
pop
dec
dec
movsb
cmp
shlb
lahf
mov
fwait
ljmp
lods
cmp
lock
cmp
xchg
or
out
lret
adc
dec
in
xor
ja
mov
lcall
cld
test
das
addr16
loop
jnp
scas
inc
mov
pop
or
adc
pop
inc
xor
xorb
mov
pop
in
rcr
or
add
imul
xor
or
sub
lret
enter
cmp
and
fsubs
mov
jo
pop
out
mov
in
ret
fildll
add
adc
pop
inc
inc
in
jne
inc
stos
lods
outsl
stc
rol
aam
cld
std
jnp
and
add
and
mov
sub
test
add
cmp
push
outsl
clc
mov
jge
jbe
sub
mov
dec
mov
jge
lcall
out
cmp
in
jb
aaa
mov
movsb
outsb
xchg
jbe
xorb
mov
shll
push
es
pop
and
push
stos
jno
fs
nop
ss
loopne
xchg
and
and
jno
icebp
xchg
popf
lahf
push
hlt
shll
and
add
fiaddl
stos
dec
push
js
repnz
loopw
movsb
test
pop
mov
push
add
mov
mov
cs
lret
add
cmp
ljmp
jp
mov
adc
or
sub
pop
ret
jo
stos
lock
sbb
iret
xor
and
pop
dec
pop
xlat
subb
popf
xorb
ljmp
adc
ss
in
arpl
adc
pop
adc
inc
and
push
xchg
xchg
sti
jle
mov
push
faddp
jmp
pop
sub
pop
mov
jge
inc
lock
cmp
rclb
je
inc
out
in
xchg
pop
and
jne
aam
out
push
ffreep
sbb
scas
xor
dec
jmp
push
cmp
subl
adc
int
dec
add
fstps
cwtl
mov
int3
scas
loop
fucomi
lods
cmp
cmc
sti
xchg
inc
mov
mov
xchg
int3
pop
iret
mov
lock
and
pop
out
push
sti
xorl
pop
pushf
cmpsl
fwait
and
cmc
adc
aas
aaa
and
mov
adcb
cmp
rcll
add
xor
push
jp
or
int
daa
enter
sbb
sub
lahf
insl
andb
mov
ds
outsb
sub
bound
pop
fnstenv
dec
out
sub
test
pop
mov
mov
lods
adc
jbe
aad
dec
incb
xchg
test
je
pop
push
loop
test
jg
mov
and
imul
jecxz
loop
pop
sub
jg
adc
pop
jnp
adc
mov
int3
xchg
sub
ret
mov
or
sti
xchg
bound
leave
pusha
pop
sbbl
mov
jmp
rolb
rorb
mov
pop
and
ret
jnp
lods
jbe
call
dec
imul
and
push
push
sbb
popa
movsl
outsb
mov
mov
shr
repz
rorb
cmp
or
fbstp
mov
mov
cmp
or
xchg
pop
insl
mov
popa
out
hlt
mov
or
cmpb
adc
mov
movb
dec
loopne
incl
xor
outsl
push
sub
pop
hlt
orl
jg
jae
mov
rcrl
stc
nop
es
mov
jns,pn
sbb
dec
lret
out
mov
push
inc
fnstenv
cmp
mov
mov
test
cmpsb
mov
adc
stc
pop
xor
mov
dec
loop
fstl
push
lea
mov
loopne
and
fisttps
inc
bound
scas
inc
pop
adc
les
addr16
in
pushf
sub
add
cmpsl
cmp
mov
shrl
xchg
or
mov
out
jecxz
je
cmpsl
ds
xchg
icebp
mov
fcomps
mov
into
jecxz
adc
das
cmp
repnz
pop
bnd
and
in
xor
xlat
add
arpl
push
cmpsb
cmp
les
ja
shrb
cwtl
in
adc
repz
mov
adc
push
scas
lods
inc
popa
jae
xor
test
data16
mov
lea
add
xchg
aaa
push
adc
xchg
xchg
sub
ljmp
dec
dec
pop
out
jo
arpl
mov
xchg
aad
xchg
sub
adc
inc
xlat
pop
or
int3
jge
jmp
in
lret
bound
mov
push
popf
xor
jl
adc
mov
and
lahf
xchg
shrl
inc
shrl
in
push
cli
es
out
fidivrl
mov
arpl
ljmp
ret
rep
insl
adcb
pop
inc
testl
jg
dec
cmp
rcrl
pop
mov
lea
ss
add
je
cwtl
and
push
int3
adcl
loopne
icebp
xor
and
out
mov
icebp
aad
mov
push
out
cmpsb
in
jno
enter
aas
clc
jno
nop
daa
lea
popa
clc
js
cmpsl
lods
adc
aas
dec
xor
lock
push
push
call
or
mov
or
inc
pop
sub
lea
popa
xchg
scas
dec
loopne
mov
jle
add
add
mov
test
outsl
mov
shrl
cli
xchg
sub
xchg
sub
mov
jmp
lret
add
sbb
in
test
stos
mov
fisttpll
je
xor
add
dec
test
shrl
lods
xor
fisttpll
push
lahf
sub
and
dec
mov
pop
jmp
push
pop
inc
jle
adc
lods
repz
adc
daa
push
push
mov
dec
in
sbb
push
pop
arpl
xor
xlat
hlt
bound
cmp
data16
test
jp
mov
dec
cmc
mov
into
mov
dec
fdivrs
loop
and
into
out
pop
jnp
jnp
pusha
jg
mov
scas
and
push
cs
outsb
mov
mov
mov
imul
sub
cmp
sbb
xor
mov
mov
xchg
adc
ret
jne
fcomip
fistpll
xor
push
hlt
and
mov
jno
and
call
push
in
stc
clc
mov
jge
das
sbb
xchg
xor
fwait
pop
adc
push
test
mov
inc
sbb
cltd
sub
fcomp
and
add
orb
xchg
lret
fdivl
mov
call
test
jo
pushf
ret
hlt
fisttps
push
adc
repnz
mov
pop
sub
shrl
pop
jecxz
dec
pop
pop
repz
mov
lcall
and
dec
cli
jl
shrb
push
in
inc
insl
stc
pop
insl
repnz
mov
push
out
mov
icebp
inc
inc
mov
insl
pushf
xor
jge
mov
or
test
xchg
sbb
pop
scas
xor
mov
cmp
lret
inc
lods
stc
sbb
pusha
jb
push
pop
xchg
add
dec
mov
cmp
pop
xor
out
lods
pop
popa
clc
mov
push
popf
xlat
and
cmp
shrl
ret
inc
fisttpll
mov
imul
stc
pop
sub
push
je
mov
dec
mov
sti
ljmp
dec
pop
jnp
sbb
inc
xchg
popa
clc
ret
test
mov
jmp
popf
sbb
pop
scas
call
jmp
stos
fisttpl
adc
sbb
adc
push
push
lods
dec
and
mov
adc
adc
loope
outsl
push
or
mov
shlb
mov
call
jmp
test
mov
mov
roll
popf
add
adc
cmp
or
cmpsb
je
lods
data16
js
and
pop
fwait
adc
stos
dec
and
idivb
adc
push
scas
and
stos
and
lods
xchg
ret
mov
mov
push
and
lods
mov
stc
and
test
inc
mov
adc
xchg
lret
mov
mov
sbb
test
and
lods
xchg
arpl
mov
rclb
icebp
and
xor
lds
rcrb
mov
jne
jp
inc
insl
or
mov
arpl
mov
out
test
mov
fimuls
add
xor
mov
pop
stc
nop
cmp
imul
into
gs
cmp
and
fidivs
aad
push
xchg
jns
leave
add
push
mov
jbe
push
imul
mov
cmc
mov
xchg
adc
stc
nop
adc
clc
inc
cmp
xor
cli
xchg
shlb
jne
in
outsb
add
insl
sbb
push
mov
int
aas
mov
mov
pop
cmc
pop
xor
cld
cmpsb
jno
nop
mov
int
xor
dec
sbb
rorl
jge
cli
fnsave
aad
ljmp
push
ficompl
push
mov
sbb
push
cltd
leave
cld
xchg
mov
mov
cli
xchg
cmp
push
popf
xor
fnstsw
ror
mov
shl
adc
rolb
sarl
mov
jns
mov
mov
and
mov
aam
inc
pop
cmc
js
cmp
jle
stc
nop
lds
aam
in
sahf
xor
popa
cmp
shrb
cmp
push
test
jne
xchg
inc
flds
dec
cmp
cmp
push
mov
cmp
fisubrl
lods
ds
fistps
punpcklwd
push
daa
stc
nop
pop
xchg
cmp
movsb
push
sub
dec
into
cmp
add
fidivs
pop
sub
dec
jbe
adc
ret
hlt
push
sub
inc
push
mov
aad
jns
hlt
test
sar
repz
aam
sbb
lret
adc
aad
sahf
xor
aad
adc
aad
fwait
xor
lods
adc
aad
fwait
xor
sbb
lret
cmp
jno
cmp
mov
lods
fidivl
aam
adc
dec
ja
cmp
sbb
popa
sub
stos
pushf
mov
inc
mov
stos
dec
loope
dec
sti
xchg
xchg
dec
jmp
cmp
sub
rclb
sub
sarl
jae
adc
jnp
int3
aam
add
out
mov
adc
stos
xchg
push
xchg
aam
aas
mov
cmp
xor
xchg
push
fsub
jge
inc
pushf
xor
lods
cmp
in
and
mov
mov
jp
xchg
das
pop
negb
fsubrp
adc
mov
xor
sub
mov
mov
pushf
xor
xor
mov
mov
fdivl
push
mov
dec
cli
jnp
sub
inc
sbb
jne
repnz
popf
mov
xor
call
xor
nop
xor
xchg
addr16
je
pushf
xor
pop
jb
js
cmp
sbb
sbb
jae
insl
fwait
xor
jnp
mov
sbb
adc
xor
mov
mov
test
jecxz
xor
xchg
push
sbb
mov
sub
cs
jae
test
pop
adc
add
cmp
pop
inc
or
stos
xor
adc
test
stos
sbb
push
mov
dec
mov
scas
inc
xor
dec
out
xor
adcb
cmpsl
adc
and
inc
sub
clc
xchg
mov
inc
sti
xchg
cs
insl
push
mov
out
xchg
cs
adc
mov
fwait
add
fnstenv
jne
mov
push
jg
inc
xchg
xchg
sub
sahf
cmp
mov
mov
xchg
jmp
add
mov
lea
fidivl
push
pop
mov
icebp
jge
and
sbb
in
mov
xchg
fninit
pop
icebp
adc
fdivl
cmp
xchg
insb
iret
cmp
mov
mov
cmp
or
lds
mov
jge
mov
aad
mov
pop
jg
dec
sub
gs
add
repnz
sar
repz
and
dec
cmpsb
add
xchg
pop
fnsave
fdivl
popl
lcall
jl
dec
mov
mov
hlt
jg
out
mov
in
sbb
or
mov
test
shlb
sahf
sbb
dec
fldl
int
hlt
mov
xchg
sub
ret
mov
xor
imulb
imul
fstps
leave
or
stos
cmp
mov
mov
xchg
jno
scas
push
ljmp
hlt
mov
popfw
xor
inc
xchg
sub
jno
setle
rorb
cmc
inc
cli
shrl
test
jbe
pop
lock
jmp
xor
cld
mov
das
and
xchg
inc
push
ljmp
hlt
mov
add
jno
xchg
sub
inc
xor
jne
pop
icebp
push
popf
shrl
cwtl
mov
or
dec
gs
cmp
stos
data16
dec
ret
mov
std
and
push
ljmp
hlt
mov
dec
loopne
adcl
jp
xor
adc
loopne
cmp
push
sahf
xchg
adc
data16
inc
sar
xchg
add
fwait
xor
gs
out
ja
shll
iret
push
pop
repnz
sub
rorl
mov
pop
pop
hlt
ja
mov
sub
pop
repz
insb
pop
icebp
pop
fs
xchg
xchg
popf
xchg
sub
rcrb
sbb
dec
inc
xchg
sub
arpl
jb
xor
movsb
mov
xchg
sub
sbb
dec
sub
pushf
popa
xchg
sub
mov
dec
out
lcall
fs
test
sbb
cmp
sub
sub
stos
sub
xor
loope
xchg
xor
xchg
sub
outsb
add
push
mov
fisttpl
cmp
adc
pop
xorb
mov
mov
cmp
mov
sti
xchg
es
in
push
dec
pop
lods
jns
jne
pop
cltd
xor
leave
jnp
sub
mov
std
ds
insb
push
mov
mov
leave
adc
pop
pop
sbb
jnp
jne
out
aad
cltd
add
imul
sbb
aad
jbe
aas
test
pop
repz
leave
pop
sti
sbb
dec
sbb
jl
insb
cltd
xor
mov
and
inc
adc
inc
gs
mov
mov
jl
jmp
or
out
push
cmp
test
and
adc
xlat
lods
inc
enter
test
enter
mov
js
negl
sub
pushf
pusha
inc
std
xchg
je
and
rolb
iret
aaa
cli
cmp
in
inc
fidivl
cmpsb
jne
sbb
mov
push
mov
add
mov
push
mov
in
test
std
xchg
adc
fnstenv
push
inc
xlat
inc
mov
mov
rcrl
mov
cmc
jge
out
mov
and
cmpsl
adc
xchg
add
int3
arpl
sub
xchg
jmp
ds
sbb
mov
fnstenv
lret
inc
fnstcw
mov
sbb
lahf
int
push
fiadds
icebp
dec
adc
sub
sarl
xor
not
imul
sbb
xchg
mov
jo
leave
cmp
mov
mov
sbb
mov
movsb
cli
xchg
pop
mov
cmp
dec
push
xchg
cmp
cltd
xor
mov
push
pop
or
inc
fisttpl
adc
cld
movsb
cmpsl
xlat
inc
pop
lock
das
hlt
cli
xchg
out
xlat
outsb
jns
inc
fcmovnu
xchg
jo
ret
push
jle
sub
ret
cmp
push
std
xchg
inc
test
mov
sub
cmc
loopne
inc
adc
jp
ljmp
inc
fiaddl
cli
xchg
mov
mov
adc
sub
mov
stos
jge
sbb
sub
mov
xchg
and
aaa
into
pop
and
xchg
je
cmpsl
aam
adc
iret
addr16
incl
mov
jns
add
outsl
outsl
cmpsb
cmp
pusha
leave
inc
fdivr
jbe
adc
inc
cltd
mov
or
and
lret
sti
fistps
iret
adc
arpl
cmp
out
insl
imul
pop
sbb
call
add
xor
inc
mov
ss
sbb
xchg
sub
hlt
mov
es
hlt
mov
push
sub
orl
fisttpl
aas
rep
add
dec
or
cbtw
lods
inc
lret
rorl
in
loop
cmp
in
xorl
adc
pushf
mov
into
add
jl
call
mov
divl
lret
bound
mov
add
aad
mov
xorb
inc
bound
dec
loop
push
jb
dec
fsubr
orl
out
insl
and
and
mov
push
subl
xor
lret
bound
inc
xchg
aaa
sub
inc
push
in
aaa
je
mov
aaa
int
inc
incl
cmpsb
aaa
pop
dec
jecxz
inc
sbbb
jmp
xchg
dec
into
gs
dec
rcrl
sub
dec
push
mov
bound
mov
mov
mov
or
stos
inc
xchg
mov
mov
mov
dec
mov
mov
cmp
push
ds
mov
mov
scas
cmpsl
and
call
sti
pop
pushf
xor
test
rcr
fnsave
fnsave
mov
adc
lods
sbb
xor
daa
loope
decb
hlt
nop
std
es
mov
fidivs
clc
pop
lock
es
xor
pop
push
aam
jae
jge
or
push
es
inc
fcmovbe
jl
jno
icebp
mov
outsl
mov
lea
jo
test
add
xchg
or
cmp
inc
dec
out
cmp
ljmp
mov
jl
and
xchg
cltd
mov
iret
fsubr
or
ja
inc
nop
ret
call
push
in
test
sbb
aaa
jle
mov
xchg
jae
push
fs
pop
repz
cld
xchg
xor
xchg
pop
pop
fwait
xor
test
rcr
dec
das
cmp
cmp
jl
subb
mov
pusha
add
and
xchg
cs
dec
sub
cmp
insl
stos
loop
xor
ds
jo
testl
add
jl
sbb
push
lods
cmpsl
xor
mov
xlat
ret
pop
enter
mov
aad
repnz
pop
std
xchg
nop
xor
xchg
bound
fwait
xor
xlat
cmp
or
sub
cltd
jge
adc
enter
sub
xor
inc
jmp
dec
loope
jmp
in
test
in
outsl
push
filds
mov
xor
and
out
scas
inc
loopne
lret
fsts
stc
test
insb
jecxz
shl
ja
dec
jmp
jle
pop
cmc
test
fidivs
loope
bound
adc
test
insb
add
fsubrs
xchg
mov
dec
fildll
insl
cmp
push
push
jmp
mov
enter
mov
adc
sub
imul
fsubrl
xchg
int3
inc
push
lock
or
jne
lods
inc
movsb
test
aad
into
dec
loop
add
in
test
mov
imul
xchg
push
adc
mov
sub
bound
push
xchg
inc
push
insb
add
stos
or
loope
lods
inc
sub
movsl
cmp
inc
dec
loop
adc
in
add
rcrl
mov
mov
inc
jb
cltd
xor
pushf
dec
loop
sbb
stos
mov
in
adcl
popf
xor
aas
mov
jno
adc
lret
xor
in
bound
sbb
stos
mov
add
fdivp
mov
fwait
or
je
lods
inc
adc
cmp
xchg
sub
in
cmpl
mov
pop
dec
push
in
cmp
sub
pop
xor
gs
pop
scas
js
imul
dec
push
xsha1
cmpsb
dec
adc
repz
cltd
loope
mov
loop
sti
xchg
rorb
cmpb
in
xlat
pop
mov
mov
cmp
dec
jne
pop
jp
push
pop
jns
lea
mov
inc
xchg
sub
repnz
sbb
dec
pop
cmc
jge
push
in
push
xchg
stc
nop
enter
dec
loop
xor
add
cmp
jo
std
xchg
movsl
pushf
cmc
mov
aad
popa
call
inc
fdivrs
xor
pop
insb
mov
imul
mov
test
inc
jle
dec
mov
cld
xchg
cmc
fsts
or
aam
ljmp
rcr
jl
imul
into
aaa
into
shl
sub
add
dec
ja
xor
push
imul
hlt
lahf
sub
nopl
dec
lods
inc
inc
jp
jp
test
ret
test
or
mov
and
mov
jbe
les
inc
mov
xor
cmp
shrl
mov
iret
addr16
cltd
ljmp
sbb
pop
mov
nop
or
mov
adc
rcrl
mov
inc
test
test
sub
test
cmpsb
test
sub
and
and
jle
mov
insl
lds
les
rclb
ret
pop
insb
ss
out
addr16
sub
adc
ret
in
xchg
push
cmpsb
sub
sbb
and
popf
test
lds
popa
ret
cmp
jle
jae
les
jb
mov
fistl
add
insb
sub
xor
mov
test
clc
and
cmc
das
push
or
cmc
leave
test
dec
xor
xchg
xchg
aad
cmc
movsl
xor
xor
jne
in
xor
adc
push
push
popa
test
or
movsb
ds
xchg
sbb
or
lock
ss
out
mov
mov
loope
loop
mov
fidivs
shrl
stos
les
hlt
push
cmpsb
ret
jge
and
push
jmp
lret
xchg
outsb
je
and
adc
or
outsb
repz
cmc
and
je
jns
adc
cs
xchg
lret
daa
add
fldenv
js
mov
inc
pop
xchg
adcl
adc
sub
and
sbb
sub
dec
inc
ss
cmp
jae
ret
pop
aas
arpl
or
lock
rcrb
les
movsl
push
repz
jg
mov
xchg
and
xchg
jle
inc
mov
sub
sbb
dec
lret
mov
mov
mov
push
leave
mov
push
rcr
mov
wrmsr
into
sub
jmp
mov
jecxz
xor
pop
mov
or
pop
je
xor
lds
dec
cmp
mov
and
lcall
repnz
jae
inc
rcr
or
rcr
push
int3
xchg
mov
jge
mov
push
cli
sub
and
repz
inc
mov
lret
ret
stos
loop
and
jno
inc
jmp
inc
adc
pop
jmp
xchg
sbb
mov
push
loop
mov
aaa
lods
lret
repz
push
dec
mov
repz
imul
mov
jns
and
test
inc
pop
out
sub
enter
jbe
jle
out
sbbl
mov
and
and
ja
dec
in
cwtl
mov
add
jmp
push
sbb
fdivl
push
test
fcoml
leave
pusha
das
in
scas
push
push
out
xorl
int
movsb
add
jmp
mulb
mov
push
stc
lret
bound
ja
sub
lret
cld
lahf
pop
sahf
rcrb
and
test
jge
cltd
scas
push
arpl
aas
iret
and
xchg
and
aad
mov
xor
pop
jb
mov
adc
loopne
xor
in
nop
daa
xor
push
out
push
scas
call
inc
inc
sahf
js
fsts
xchg
inc
sub
inc
pop
popa
push
mov
jg
arpl
outsl
and
mov
adc
loope
xor
loope
nop
daa
xor
push
out
push
scas
jmp
push
test
scas
fnstcw
jne
jno
xor
sub
dec
push
ljmp
pushf
xor
imul
mov
and
dec
pop
out
jns
test
or
xchg
in
adc
push
mov
xor
jno
add
out
pop
and
push
mov
fsub
aaa
mov
imul
sub
mov
enter
or
cmp
lcall
xchg
cmp
mov
int
fists
cli
xlat
pop
sbb
frstor
aad
insb
xchg
push
fldl
repz
fs
pop
cmpsb
cmpsb
dec
out
pop
in
adc
jge
mov
fstpl
aam
xor
repnz
adc
cmc
mov
xchg
xchg
cs
sub
stos
pop
ljmp
scas
cmp
dec
out
xchg
icebp
mov
and
push
in
cmpsb
adc
ss
inc
cli
mov
mov
fisubrl
or
out
mov
ret
repz
inc
rol
pop
add
es
pop
mov
call
xor
sbb
loope
shll
or
xchg
popa
adc
out
dec
sahf
sbb
das
and
imull
mov
xchg
bound
pushf
and
push
sub
adc
dec
sub
lods
mov
das
nop
repnz
stos
push
inc
mov
add
xlat
sub
rclb
ficomps
add
xchg
test
sub
test
int3
sub
dec
cwtl
pop
je
xor
jmp
sub
adc
out
hlt
jl
imul
and
sti
cmp
push
mov
push
mov
push
icebp
cwtl
outsb
into
lahf
push
xor
pop
popf
pop
fstpl
int
push
outsb
mov
fnsave
adc
jg
jecxz
xchg
adc
add
scas
push
mov
fsts
push
pop
pop
testb
jnp
faddl
xor
fdivl
dec
jg
shrl
pushf
aad
iret
mov
gs
cmc
mov
cli
in
xchg
cmp
stos
imul
lret
sub
lret
fstl
or
xor
arpl
push
jno
xchg
sub
aam
dec
push
out
inc
sbb
mov
adc
mov
insb
adc
iret
inc
mov
and
jae
andb
iret
lock
stc
pop
jbe
adc
imul
push
test
pop
xchg
in
inc
pop
mov
mov
xchg
in
les
test
inc
sub
in
jecxz
sar
repz
or
inc
cmpsb
xor
add
inc
sbb
stos
sahf
inc
sub
lcall
mov
dec
mull
or
lret
mov
xchg
jmp
jne
sub
mov
into
and
orb
push
test
dec
sub
cli
xchg
fwait
inc
dec
andl
shl
jno
add
adc
xor
dec
jae
inc
xchg
adc
pop
adc
mov
outsl
add
bound
in
lods
cmp
orl
cmp
daa
mov
add
jge
cmp
stos
scas
cmpsb
push
push
cmovle
fnstsw
sti
xchg
andl
scas
sub
mov
sbbl
rclb
xchg
cmp
push
push
lcall
mov
ret
clc
sahf
fidivrl
iret
popa
mov
xlat
mov
nop
in
push
sbb
cmp
test
dec
mov
adc
mull
add
lock
lods
rcll
movsb
or
adc
jbe
loop
je,pt
nop
jnp
fwait
nop
mov
cli
gs
fdivrl
lock
imul
pop
rorl
adc
enter
jmp
cmp
jne
insl
adc
cwtl
loope
dec
mov
jne
leave
out
loop
lahf
stc
lahf
push
mov
mov
mov
dec
mov
popa
mov
add
pop
sti
in
pop
ds
cli
ret
pop
or
adc
jp
inc
cwtl
inc
int3
push
xor
mov
pop
aaa
push
xchg
mov
nop
adc
push
cmpsl
shl
adc
mov
andl
test
daa
cmc
pop
in
sub
test
movsb
fistpll
add
mov
in
push
pusha
push
cld
sub
addr16
or
jae
cli
mulb
xlat
push
out
fistpll
mov
jo
imull
sub
dec
call
movsb
sub
stos
sub
mov
cmp
cs
push
or
test
vpcmpeqb
outsl
bound
xchg
cmpb
out
popa
push
orl
dec
push
mov
pop
lods
lods
lahf
cmc
add
repnz
daa
push
orb
dec
sub
gs
sbb
adc
push
inc
push
dec
sbb
cmp
loopne
inc
cmpsb
add
and
pop
hlt
and
ret
roll
arpl
xchg
jns
inc
lret
pop
cmp
hlt
mov
cltd
push
outsb
jle
jecxz
mov
movsb
jl
pop
lret
mov
push
pop
jbe
hlt
xchg
sbb
and
scas
xor
push
ljmp
adc
jb
icebp
fs
dec
or
pop
sbb
xchg
mov
mov
lods
hlt
jg
add
pop
lea
mov
xor
aas
xchg
inc
sbb
cs
or
notl
rolb
repz
daa
xchg
pop
inc
pop
add
bound
je
mov
xchg
fimuls
xor
jle
sub
cmp
xchg
movsb
ret
push
cltd
cli
mov
mov
push
mov
sub
pusha
pop
mov
mov
pop
mov
mov
mov
popa
mov
dec
xorl
sti
sbb
mov
mov
je
xor
jbe
daa
mov
push
xchg
inc
mov
andb
dec
sbb
nop
mov
fsts
mov
shrb
xchg
sub
or
sbb
subl
pushf
jo
cmp
push
cmc
insb
mov
dec
retw
xchg
jmp
mov
adc
shrl
sbb
outsb
sub
fsub
jmp
and
mov
dec
add
mov
aam
sbb
out
lret
pop
rolb
inc
cmp
pop
fwait
into
mov
xchg
add
in
ss
jbe
xchg
test
pop
push
pushf
ret
mov
stc
ret
ffreep
xchg
lods
sbb
rcll
mov
lods
xchg
inc
or
scas
add
mov
arpl
jp
adc
outsl
mov
in
insl
jns
jg
out
inc
les
push
sahf
jbe
adc
sub
nop
popf
mov
and
sub
sub
dec
push
fdivrs
jl
or
mov
out
popl
js
stc
fisubrl
nop
psubd
pop
pop
movsb
and
push
jns
push
testl
mov
cmp
arpl
jbe
dec
inc
xor
jecxz
cli
push
mov
imul
loop
lock
mov
enter
enter
jno
popa
mov
lar
sub
inc
test
push
fmull
jne
cli
stos
out
pop
mov
cwtl
ss
cmp
jae
sub
jns
jl
jbe
mov
aaa
adc
dec
test
mov
aam
out
rep
mov
rcll
jbe
pop
push
lds
notb
filds
int
test
adc
dec
cmp
rcrb
ja
xor
out
aas
lret
or
shrl
test
or
mov
scas
and
addr16
jg
or
stos
inc
lock
mov
xor
mov
jle
jp
call
jg
imul
add
mov
shrb
add
cmp
and
inc
rolb
stos
adc
jo
xor
xlat
sbb
cli
xchg
pop
add
xor
and
std
stos
pop
mov
jo
inc
insb
add
divl
mov
lahf
or
dec
test
xor
repz
xchg
dec
mov
cld
rclb
inc
dec
rcrb
pushf
dec
adc
cmp
movsl
test
push
clc
nop
in
jnp
mov
into
adc
jge
inc
ficoml
pusha
test
lock
and
jg
testl
xor
enter
popf
jmp
ficoml
dec
sbb
jbe
or
das
gs
xchg
aaa
je
imul
fcompl
cmp
mov
jae
sahf
mov
int
or
mov
push
or
jmp
push
xor
push
or
lods
sub
mov
adc
mov
loope
mov
call
or
cmp
inc
fidivs
and
mov
loop,pt
sbbl
add
pop
cmp
jnp
lea
cltd
fneni(8087
fnsave
and
dec
ds
xchg
mov
mov
aaa
into
or
jp
es
in
pop
inc
cwtl
das
jns
jae
mov
mov
int3
rcll
imul
scas
inc
push
inc
repnz
int
stos
xchg
adc
std
out
push
push
push
js
adc
mov
imul
mov
mov
cwtl
jp
sarb
out
test
loop
rorb
fidivrs
pop
xchg
fs
divl
scas
pop
filds
jb
jp
and
jp
xor
push
inc
psubsb
xlat
fsubrs
pushl
pusha
and
test
xor
fnstsw
inc
sub
leave
push
fldl
nop
push
sbb
scas
cmpsb
insl
fdivl
xor
xchg
repnz
adc
mov
imul
gs
into
xchg
mov
push
in
call
or
fs
xchg
pop
xchg
sub
scas
mov
loope
or
xor
sub
xchg
or
xor
sub
sub
sbb
cmpsb
mov
cld
iret
stc
mov
sbb
dec
fnsave
mov
sbb
imul
ret
repz
cli
sbb
push
call
push
or
sbb
sbb
push
sti
push
mov
nop
mov
jge
and
inc
stos
inc
jle
ss
ret
push
sub
dec
adc
push
or
scas
inc
insl
aam
popa
adc
xor
jecxz
sub
xchg
mov
std
and
pop
out
addl
aaa
sub
sub
lds
imul
push
jg
lds
leave
pusha
in
je
add
addr16
xchg
pop
mov
mov
sub
cmp
xorl
xlat
push
shlb
lods
fildl
mov
nop
adc
pop
xchg
dec
loope
cmpsl
fnstenv
or
insb
cmp
fstps
push
int
xor
lods
mov
xchg
jp
mov
repz
inc
in
test
mov
js
loopne
aas
cltd
inc
fmull
fcompl
mov
sub
rcrl
mov
ljmp
push
and
push
adc
mov
jcxz
sbb
mov
mov
mov
into
lea
or
pop
lahf
xchg
into
xor
fnstenv
push
in
test
mov
cmp
fsubl
mov
insb
stos
mov
fimuls
data16
mov
inc
in
xorb
cmc
pop
inc
pop
cmc
ss
mov
cmovp
es
pop
movsl
call
jo,pn
push
lods
cmpsl
xchg
push
jmp
inc
fsubrs
and
mov
mov
lock
or
mov
add
xchg
dec
cmpsl
or
push
mov
add
adcl
xchg
dec
cmpsl
pushf
xor
sub
imul
stos
or
or
sub
loope
ror
shlb
repz
in
push
lods
add
fsubrs
xchg
pop
sahf
or
push
popf
pusha
sub
jl
or
dec
mov
addr16
daa
push
enter
cmp
sti
arpl
lret
jbe
sub
cmp
fwait
mov
data16
xor
jp
sbb
popf
sti
insl
add
scas
mov
and
aaa
into
or
cs
push
jg
dec
nop
inc
fidivs
pusha
lods
inc
cmpsl
jl
push
mov
cmpsb
cmp
and
mov
daa
stos
inc
pusha
mov
cmpsb
and
inc
movsl
cmp
fstpt
dec
mov
dec
out
mov
sbb
pop
sub
nop
adc
daa
jo
adc
aaa
aaa
mov
cld
or
push
lods
mov
fldl
movsl
lock
loop
sbbl
add
jne
xchg
sub
or
mov
and
nop
daa
pushf
iret
stos
inc
std
mov
mov
iret
dec
push
jmp
xchg
popa
aaa
into
push
inc
lods
inc
jnp
mov
adc
clc
loop
jl
sbb
imul
cmpsl
push
mov
jo
aas
mov
push
test
mov
les
adc
xlat
add
jmp
or
sarb
iret
hlt
popf
test
cmp
xor
xchg
mov
ret
dec
loopne
pop
jae
inc
aad
inc
lock
lcall
mov
or
push
popf
xor
popa
jmp
mov
dec
jns
ja
or
dec
vsubpd
fnstcw
lret
mov
repz
add
sar
adc
out
jl
dec
jae
incb
push
inc
mov
jno
sub
add
cmpsl
lds
fdivrs
ficoml
lret
push
jp
in
out
fimuls
test
in
test
sbb
mov
adcl
scas
inc
movsb
test
inc
cmc
aaa
fidivl
lcall
mov
fsubr
jg
and
ret
mov
loope
lds
adc
cs
test
or
in
test
sub
loop
mov
cmp
loopne
mov
inc
mov
mov
mov
in
jne
jecxz
and
outsb
add
bndstx
pop
fsubrs
inc
fsubs
dec
mov
cli
ret
cs
lahf
aad
les
negb
out
shrb
or
addr16
mov
insl
enter
mov
rorl
cmp
lea
out
jle
leave
lret
cli
sub
jmp
insb
add
or
jmp
adcl
xor
imul
mov
ret
mov
mov
jns
cmp
in
test
shll
jmp
movsl
cmp
cld
or
es
out
sbbb
mov
ja
pop
xor
repnz
push
mov
fcomi
xchg
scas
adc
loopne
mov
pop
jae
test
xchg
xchg
sub
es
mov
cltd
pop
testb
or
stos
ds
lcall
notb
insl
add
jno
lcall
sub
push
adcl
adc
push
cmp
sub
into
hlt
mov
test
leave
ja
shll
pop
scas
hlt
sub
mov
or
imul
call
sub
lds
mov
dec
out
push
lock
mov
lods
arpl
push
pop
daa
mov
addr16
inc
fsubrs
pop
ja
jb
push
mov
add
jge
lods
int3
arpl
lret
mov
dec
out
lcall
in
inc
ret
pop
stc
notl
rorl
insb
add
cltd
mov
push
xor
jl
lret
bound
ret
mov
dec
in
xor
mov
jmp
rcrl
cmpsb
cmp
iret
vmwrite
cmpl
aaa
adc
cmp
inc
xor
lds
enter
fstpt
add
test
jno
out
pop
hlt
fistps
sbb
mov
add
mov
mov
sbb
sub
pop
cmp
pop
stc
pop
cmc
mov
cmp
mov
mov
movsb
andb
repz
int
adcb
xchg
shrb
sbb
sarl
int
lods
into
or
icebp
int
inc
mov
loopne
outsb
shlb
mov
in
jp
addb
mov
or
stos
inc
inc
sub
pop
pushf
clc
insl
add
mov
cmp
add
mov
test
fs
push
gs
pop
jp
sti
xchg
push
mov
mov
popa
push
out
cmp
mov
sub
pop
test
out
fnstcw
mov
lock
lret
call
mov
std
jg
aaa
mov
pop
loop
pop
hlt
insl
add
xchg
test
lret
mov
addr16
in
jo
enter
je
fdivl
xchg
sbb
leave
dec
inc
ficomps
shrb
jns
pop
icebp
mov
frstor
repz
enter
xchg
shll
inc
loop
out
shll
cmp
adc
pop
push
push
jmp
jp
loope
rorl
ret
fstpt
jecxz
out
mov
fmull
mov
adc
ss
push
mov
jne
pusha
ja
ds
mov
mov
fidivs
xchg
jne
and
call
and
and
movsl
femms
cmpsl
push
mov
cmp
mov
mov
sub
pop
lock
dec
fnstenv
popa
insl
add
sahf
out
test
mov
push
out
pop
sahf
and
mov
out
push
mov
cmp
test
lret
cld
imul
lods
out
test
fisttpl
movsl
int3
stos
fnsave
jecxz
outsl
clc
sbbl
mov
lret
stc
pop
repnz
push
mov
rolb
push
inc
lret
inc
fchs
addr16
popf
aaa
add
into
cltd
pop
je
pushf
mov
lods
inc
add
xchg
fs
dec
in
xchg
mov
movsb
adcb
inc
mov
pop
lock
mov
out
pop
mov
pop
shrb
push
mov
mov
das
out
cmp
and
mov
cld
in
stos
in
psubd
leave
ret
test
insb
xor
pop
popa
or
add
fisttps
test
outsl
add
jo
loope
cmp
inc
xchg
mov
pop
in
dec
xchg
lock
cltd
xor
aas
scas
fstpl
mov
inc
pusha
shll
xchg
dec
mov
popf
imul
cwtl
and
xor
xor
sub
sub
cmp
mov
pop
jbe
mov
or
sbbl
stos
into
add
roll
jg
into
jb
sbb
lods
pusha
push
stos
push
push
mov
aad
push
popa
lds
and
mov
sbb
sahf
in
or
dec
stos
mov
cli
ds
vmwrite
in
aam
or
add
sbb
mov
push
jmp
pop
imul
bt
ds
sbb
sbb
out
int
leave
inc
push
lret
aad
test
gs
xor
ss
dec
in
cwtl
inc
dec
cmc
add
hlt
pushf
std
imul
or
mov
roll
in
mov
xchg
push
pop
pushf
mov
inc
jmp
lods
mov
cs
adc
bound
xchg
jle
stos
inc
insb
xchg
jae
les
repnz
nop
ficoml
mov
mov
scas
sub
jnp
imulb
aas
and
or
xchg
xor
insl
add
fwait
xchg
sub
cs
mov
push
in
fisubrs
inc
popf
incl
lock
nop
cltd
jmp
jmp
les
add
icebp
aas
jo
jo
es
jbe
cltd
xor
xlat
mov
mov
inc
fcmove
aam
pop
out
in
and
mov
jp
out
mov
insb
fsubs
and
fnstenv
xor
jb
jmp
stc
nop
adc
imul
mov
in
xor
in
mov
outsb
add
mov
loope
xor
dec
inc
fisubrl
lret
jne
and
cli
xchg
sbb
popf
pusha
cmp
insb
andl
xor
and
xor
dec
out
jecxz
jmp
pushf
cmp
xchg
stos
js
mov
cmc
ret
mov
cmp
dec
add
jb
cli
xchg
push
cmp
std
inc
call
shrl
rcrb
movsl
push
ffreep
pop
or
movsb
jg
push
sbb
data16
jg
adc
fldl
inc
add
jnp
inc
fisubrl
jnp
jg
test
push
ret
and
hlt
mov
scas
inc
fldenv
in
sub
mov
add
mov
xlat
mov
scas
inc
clc
ror
mov
xchg
popf
pop
loop
nop
inc
ret
dec
mov
in
sbb
pushf
xor
dec
out
cmp
fisttpll
xchg
test
testl
and
push
push
or
scas
jle
shrl
leave
int
dec
fnstenv
call
fwait
xor
aad
and
jl
pop
xchg
pushf
shlb
adc
jmp
mov
mov
sar
testb
ficoml
mov
pop
xchg
sub
cmp
test
test
out
dec
fnstsw
add
cli
jbe
dec
in
xchg
xor
enter
sub
sbb
inc
icebp
out
or
fs
xchg
sub
pop
rolb
jmp
xchg
ss
das
inc
jp
lret
aas
inc
rorl
dec
push
jmp
push
jg
mov
jle
les
test
cmp
xchg
inc
jecxz
rcl
int3
arpl
clc
lcall
insb
ja
pusha
rol
pop
ret
inc
or
inc
push
clc
mov
repz
add
mov
in
test
sbb
push
nop
test
in
mov
loope
lret
lcall
xor
into
push
popf
mov
sbb
or
movsl
imul
sbb
and
cli
sub
mov
xchg
call
cltd
lahf
dec
in
mov
pop
scas
iret
xor
mov
int
pop
out
pop
out
and
mov
notb
ljmp
adc
aas
cmp
xchg
pop
cmp
pushaw
jno
dec
xchg
ret
es
fnstenv
int
pop
int3
arpl
inc
fdivrl
arpl
in
fst
insl
call
or
sti
rcrl
pop
repnz
mov
jne
lods
cmp
xlat
into
lock
clc
aas
mov
fstpl
in
arpl
xchg
cmp
pop
mov
pop
cmp
mov
xacquire
mov
xchg
fldenv
loope
in
addl
adc
push
mov
repz
push
mov
push
adcb
leave
pop
repnz
popl
xchg
pop
sbb
mov
pop
les
jnp
mov
negl
mov
pop
insl
add
in
clc
mov
mov
and
pop
sahf
add
sbbl
cmp
mov
imul
fcmove
mov
test
fistpll
ljmp
pop
mov
ret
loop
and
xchg
cmpsl
pop
cmc
repz
fs
arpl
mov
ret
fnstsw
addr16
sti
xchg
mov
filds
imul
ret
push
and
mov
jno
mov
sub
movsb
cmp
int3
arpl
xchg
lcall
dec
insl
and
addr16
scas
inc
sub
fwait
xor
dec
cmpsl
ds
cmp
fs
rcrl
mov
fsubs
mov
jnp
lret
bound
popf
mov
iret
sub
pop
lock
xchg
jg
xor
shrb
shll
xchg
sub
cmpsl
int
repz
int
adc
das
lods
cmpsb
clc
int
gs
push
out
add
in
xchg
hlt
mov
or
add
test
nop
std
cli
adc
fistpl
cmp
mov
ret
inc
xlat
xlat
out
mov
clc
sub
cli
sbb
pop
sbb
dec
jnp
add
inc
out
aaa
and
mov
push
adc
mov
shll
int
stos
add
lea
dec
loope
test
cltd
sbb
out
inc
mov
repz
and
xchg
sbb
xor
sbb
xchg
jp
dec
in
mov
push
dec
in
jl
or
mov
dec
loope
out
xor
dec
xchg
loopne
adc
stc
addl
mov
pop
inc
loopne
xchg
shlb
mov
cli
and
nop
sub
inc
adc
mov
mov
mov
mov
shrl
adc
bound
dec
lods
inc
inc
and
out
xchg
pop
adc
inc
repnz
pop
loop
sahf
xor
jae
in
push
fidivrl
int
addr16
in
sub
adc
adc
mov
adc
xchg
and
xchg
sub
dec
jae
inc
movsb
jmp
sbb
lret
cmp
movsl
jl
addr16
sub
mov
fistpl
mov
daa
mov
dec
out
pop
push
jo
mov
shrb
jp
lds
gs
jae
mov
in
out
es
mov
leave
cmc
test
pop
and
ja
push
ljmp
and
mov
mov
repz
sbb
mov
jle
fldt
rclb
add
pop
hlt
push
and
adc
outsb
mov
pop
sub
insl
sahf
ljmp
pop
cld
ja
jle,pn
and
dec
lahf
ss
lea
jl
xor
daa
mov
ret
cmp
dec
loope
cmp
sub
or
jae
fwait
xor
mov
mov
lret
lock
icebp
jecxz
movsl
ja
cmp
clc
xchg
stos
test
daa
or
movsb
data16
pop
or
decl
cli
aaa
into
fimull
inc
cwtl
jg
and
and
pop
cmpsl
xor
fdivl
push
cs
inc
rol
pop
add
imul
stc
lock
shrl
jb
jo
out
pop
mov
jp
test
insb
add
pop
fidivs
xchg
repnz
sbb
pop
xchg
pop
sub
push
in
nop
push
cmp
cmc
popf
mov
aas
call
iret
stc
nop
add
push
repnz
dec
fs
aas
lock
and
lcall
arpl
push
mov
into
xor
or
xor
jle
test
or
call
pop
stos
daa
imull
je
jbe
dec
cmp
push
ljmp
xchg
push
loope
popa
movsl
cmpsb
in
push
lret
mov
icebp
inc
frstor
fstps
call
cmpsl
daa
xlat
cli
dec
sbb
add
jecxz
jmp
adc
in
data16
mov
pop
int
add
mov
sbb
pop
into
scas
sahf
pusha
test
les
mov
or
or
movsl
call
fcmovnb
pop
mov
out
cmpsb
pop
hlt
xlat
rcr
fcmovnbe
cmp
fxch
mov
in
int
xchg
mov
dec
shl
pop
lret
push
movsb
cmp
testb
and
test
and
popf
pop
xchg
hlt
push
and
mov
arpl
push
xchg
mov
loope
adc
fbld
sbb
jmp
movl
inc
mov
es
jns
mov
int
shl
or
outsl
cmp
pop
shrl
sbb
push
psubb
pushf
inc
outsb
add
sbb
bound
cmp
movzwl
push
es
xchg
dec
loope
insl
mov
lret
jo
popf
mov
or
inc
lea
mov
andl
outsl
shlb
mov
or
push
jmp
sub
pop
add
dec
mov
jg
and
cmp
and
insl
mov
mov
lret
add
out
test
adc
imul
inc
dec
jecxz
pop
cld
xchg
push
jle
lods
xorl
out
insl
pop
out
fsubs
adc
cmpb
push
aam
add
pop
push
movsb
movsl
mov
add
stc
dec
loopne
cs
inc
orl
insb
repz
xchg
mov
lods
test
pop
mov
sbb
mov
nop
icebp
and
sbb
mov
push
lods
loope
push
scas
sahf
incb
fidivrs
xor
xor
out
jne
repz
push
pop
cld
lcall
testl
cmp
jg
pushf
pop
mov
sub
cmpsl
sub
xchg
pop
loope
lods
rcrb
xchg
movb
cli
int
sbb
leave
aad
fimuls
inc
les
rorl
xchg
fstps
jo
gs
dec
mov
jns
arpl
dec
ja
shll
add
inc
cmc
stc
outsb
les
and
xchg
sub
jns
aas
cmp
pop
fidivl
lds
jge
cmc
jecxz
daa
inc
add
push
daa
sbb
cwtl
cmp
sub
rcl
insl
ret
std
sbb
push
push
loop
xchg
pop
arpl
add
mov
xchg
stos
inc
or
hlt
inc
ss
loope
jnp
jno
mov
fimuls
cmp
andb
or
sbbl
ret
pop
add
pop
out
jmp
xchg
fidivs
mov
fwait
push
or
inc
xor
pop
mov
addl
jmp
sbb
adc
mov
inc
adc
xchg
addr16
xor
mov
nop
pop
xor
data16
inc
jle
pop
sbb
jo
out
mov
pop
je
xchg
je
insl
adcl
add
sub
add
push
addr16
inc
pop
add
push
push
inc
faddl
push
adc
stos
pusha
jge
dec
stc
and
mov
fidivrs
inc
sti
pop
xor
iret
xchg
das
xchg
aam
add
dec
lret
cmp
ret
pop
aad
push
out
inc
mov
cmp
pop
fmuls
xor
ja
push
dec
push
repz
xor
pop
outsb
push
or
add
cwtl
gs
and
mov
xor
std
loopne
call
ret
pop
pusha
push
jmp
or
push
movsl
or
xchg
jmp
adc
lahf
mov
outsl
std
leave
sbb
sub
hlt
sbb
mov
sbb
pop
ficoml
add
arpl
xchg
ficompl
mov
push
mov
or
pop
sar
fwait
ljmp
mov
aad
popl
hlt
icebp
out
and
lret
ss
pop
jb
sbb
mov
xor
repnz
inc
jl
push
test
lock
ret
repnz
ja
addr16
mov
lret
pop
in
in
push
inc
dec
jmp
sub
pop
sbb
out
and
movsb
scas
imul
int3
arpl
sub
add
adc
iret
jmp
push
jo
push
in
movsb
or
int3
inc
mov
xor
fdivr
push
xor
dec
xor
pop
inc
xlat
dec
inc
je
jmp
inc
and
aad
hlt
inc
dec
test
jecxz
jp
xchg
stos
popl
pop
fmulp
testl
or
cmp
rclb
adc
ret
or
clc
or
fwait
xor
xor
inc
fisubl
push
push
incb
add
xor
pop
mov
les
cmp
cltd
movsl
test
out
out
mov
test
adc
jecxz
pusha
xor
pop
jnp
mov
sub
pop
hlt
es
outsb
inc
out
cmpsb
loopne
fcomps
jge
aam
jnp
jnp
aam
dec
pop
cmpsl
outsl
insb
add
push
aam
adcb
idivb
shll
push
sahf
mov
xor
pushf
std
data16
loop
push
cli
mov
dec
rol
mov
inc
negl
outsl
imul
inc
dec
ret
push
sbb
add
cmp
loopne
loopne
hlt
dec
jmp
add
xchg
or
mov
or
scas
pop
loope
adc
aas
or
mov
ds
fcmovne
fwait
sti
inc
dec
inc
pushf
mov
mov
mov
push
movsb
int
outsb
push
test
xchg
leave
dec
cmc
jae
adc
aad
rcl
imul
adcl
mov
and
mov
xchg
and
mov
aas
and
mov
cltd
sub
ret
inc
nop
mov
movsb
call
addl
fnstsw
mov
cmc
jae
loope
push
adc
push
cmp
push
inc
test
cmp
xchg
sub
repnz
fidivl
pushl
xor
ret
inc
dec
insb
call
rol
dec
pop
add
outsl
cmp
push
jl
mov
sbb
test
sbb
xor
stos
inc
dec
xor
sbb
loop
js
adc
xor
inc
pop
ljmp
outsl
test
roll
ret
inc
loopne
add
jmp
jle
mov
fbld
lahf
mov
jo
movsl
dec
push
pushf
push
inc
fadds
push
adc
and
xchg
xor
pushf
aaa
mov
rcrb
xchg
lret
dec
jecxz
or
fsubrs
rcrl
xchg
out
and
xor
push
mov
adc
imul
test
outsb
lds
jge
lods
cmp
xlat
outsb
pop
xchg
xchg
sub
cmp
insb
popa
cmc
fldcw
std
lea
push
add
dec
dec
stos
cmpsb
pop
jecxz
mov
pop
out
sbb
jg
pusha
jne
lods
sbb
js
movsb
cmc
gs
ljmp
orl
popf
jo
push
mov
cld
xchg
mov
sub
pop
xchg
lret
sub
and
mov
push
cmp
jb
test
push
jae,pt
dec
and
xlat
dec
pop
cmp
mov
fistps
outsb
add
test
jb
pop
xchg
enter
test
add
xchg
call
push
pop
repnz
xchg
adc
adc
aam
mov
arpl
into
adc
mov
out
inc
fldcw
lods
push
in
shlb
xchg
sub
loop
aad
test
xchg
addb
sub
dec
mov
mov
cmp
mov
es
xor
xor
mov
xor
out
mov
pop
aam
pop
cmc
sbb
out
loope
xor
or
mov
test
inc
cmp
fnstenv
pop
dec
cmpsb
inc
addr16
xchg
notl
jns
sub
movsl
fadd
pop
or
or
ds
lahf
cmp
push
ljmp
jp
leave
in
jp
popa
rolb
call
je
lret
xchg
sub
std
jbe
adcl
or
cmovs
scas
aaa
and
imul
add
test
lcall
add
jge
push
add
xor
es
cmp
pop
mov
jb
sbb
subl
fildl
inc
xchg
push
pusha
iret
jmp
jbe
xor
cld
jle
push
aaa
push
jo
js
jge
sub
hlt
out
adcl
mov
ds
lahf
loope
jns
adc
cmp
mov
cli
jae
push
cltd
and
jge
jb
dec
aad
dec
popa
clc
mov
insl
pushf
xor
repnz
popf
and
ljmp
fwait
mov
sub
pop
shlb
test
out
add
int3
mov
dec
enter
outsb
ja
dec
scas
dec
adc
push
outsl
in
inc
pop
les
or
pop
out
jl
aad
arpl
mov
xor
jae
pushf
xor
addr16
mov
dec
sbb
into
dec
inc
movsb
test
sahf
xor
fiaddl
xor
dec
pop
in
inc
dec
sub
inc
pop
insb
mov
lahf
xor
rcr
insl
shrb
or
cmp
cmpsb
push
cmp
mov
sub
mov
or
and
repnz
mov
or
lret
xor
pop
shr
jge,pn
jp
jo
aam
and
xchg
or
je
daa
cltd
mov
jb
cmpsl
or
jne
adc
jnp
mov
mov
or
jns
jo
lock
jg
lcall
jmp
lahf
sub
nop
adc
xor
lods
sub
cmp
jp
pop
dec
pushf
and
sbb
lea
add
adc
jno
in
mov
pop
shld
movl
int
pop
push
jmp
fwait
leave
pop
arpl
call
js
stc
out
mov
push
pop
cmpsl
cmp
or
mov
xor
and
cld
jb
sub
xchg
sub
dec
mov
lret
insb
cmc
cmp
sub
jge
pop
test
incb
out
test
icebp
add
fimuls
subl
dec
subb
aas
arpl
mov
gs
xorl
push
call
in
dec
or
dec
test
aam
imul
push
enter
mov
cmp
xor
std
outsb
jg
cmpsb
inc
mov
test
add
sbb
fsubp
or
cltd
inc
inc
inc
pop
xor
rclb
dec
lods
call
in
stos
lds
rorb
add
fs
bound
bound
shlb
into
sub
ret
xor
movsb
pop
sbb
sub
andl
shlb
inc
mov
adcl
dec
orl
fldenv
push
mov
imul
dec
or
call
jge
test
jle
sub
mov
movsb
popf
int
push
dec
loop
fs
mov
imul
les
imul
cmc
andl
add
xchg
inc
ss
outsb
push
loop
xchg
scas
jne
test
mov
or
cmpsb
pop
fnsave
aas
jmp
out
into
repz
and
adc
mov
jmp
dec
out
inc
ss
adc
jb
and
cmpsb
inc
inc
lret
pop
cld
es
dec
inc
aad
lods
out
and
xor
adc
movsl
mov
cwtl
jbe
cld
cmpsl
push
pusha
push
or
enter
test
int
aam
pop
jb
push
push
and
ja
aad
inc
push
jg
test
rcr
cmpsl
ds
dec
jo
test
insw
fsubrl
add
mov
pushf
dec
inc
mov
add
and
loopne
inc
mov
loopne
and
sbb
mov
push
push
and
and
xor
mov
dec
fsubrl
fadds
rcrl
mov
dec
mov
call
lahf
testl
shlb
cmp
push
loop
inc
fisubs
xchg
adc
sbb
in
jmp
or
pop
lea
outsb
inc
jecxz
and
xor
mov
in
dec
pop
arpl
dec
xor
xchg
push
pop
hlt
xorb
or
adc
movsb
inc
ljmp
push
test
inc
pop
inc
sub
outsl
mov
roll
mov
and
cmpsl
stc
push
add
out
xchg
lock
xchg
mov
adc
push
xchg
shrl
push
sarl
ljmp
push
inc
push
clc
pop
mov
jp
fcmovnbe
stos
in
inc
andb
sahf
aam
mov
popa
je
cld
ljmp
popf
mul
push
mov
sbb
test
es
imul
lcall
push
lock
rorl
adc
xchg
push
sub
mov
inc
sbb
lods
xor
mov
mov
cs
out
xor
or
sbb
mulb
loopne
push
pop
bound
testl
shlb
and
mov
or
in
mov
cli
xchg
xor
push
in
mov
push
loop
iret
jb
add
fsubrl
mov
jns
fldt
or
and
dec
xor
xchg
ds
leave
jae
aam
fmull
jb
inc
mov
dec
loope
ror
sub
and
lahf
test
pop
dec
stos
cmp
imul
lea
pop
push
cwtl
cmp
jecxz
and
dec
stos
add
xchg
ja
jg
imul
inc
data16
and
test
and
aas
push
pop
add
xchg
push
mov
add
dec
mov
lret
rcrb
rcrb
push
int3
fisubs
aaa
rcrl
cwtl
mov
jb
out
lret
push
push
popa
jno
outsl
movsl
pop
out
mov
push
jp
mov
jne
std
aam
pushf
inc
imul
stos
ljmp
testb
pop
and
out
or
out
xor
push
mov
fs
jb
pop
es
aaa
pop
inc
push
adc
pop
xchg
and
iret
adc
lock
repnz
lcall
lock
xchg
aad
push
mov
add
xchg
and
repnz
sub
or
loop,pt
jae
and
push
dec
hlt
in
sbb
push
push
ret
cmp
cmp
dec
loop
test
leave
sbbb
push
call
dec
push
mov
loopne
sbb
in
not
jnp
data16
pop
repnz
fistl
pop
aaa
icebp
fwait
idivb
movsl
clc
rcrl
bound
xlat
outsb
jo
enter
push
and
sub
jne
subl
sbb
or
or
mov
mov
pop
xchg
outsl
add
jge
insl
out
cmc
adcb
jnp
push
xor
jbe
and
std
movsb
dec
repnz
lahf
xchg
into
fadd
push
mov
add
stos
jno
lahf
dec
sub
pushf
cmpsl
mov
fnstcw
adc
or
xor
int3
cs
pop
jg
mov
jp
movsl
xor
sahf
imul
test
addb
jge
lcall
sahf
push
sub
sbbl
push
loope
imul
rcl
jbe
and
loopne
sbb
push
push
test
cli
jnp
sub
sub
test
and
push
mov
add
xchg
push
or
mov
stos
sbb
daa
jmp
jp
mull
insl
les
mov
les
and
xchg
xor
aas
in
xchg
les
or
xor
lock
mov
shlb
lret
push
xchg
sub
and
jb
or
mov
xchg
adcl
enter
ret
xor
push
dec
ja
add
sbb
daa
xor
rol
std
cwtl
xchg
adc
inc
xchg
sub
or
sbb
aad
dec
cmpl
out
adc
or
mov
cmp
int3
or
cmp
flds
cmpb
add
cmpsl
test
aas
cltd
pushf
ficoml
mov
adc
mov
loopne
lods
popa
ja
enter
sahf
xor
mov
sub
addl
xchg
sbb
out
outsb
add
sarb
cld
sub
pushw
testl
adc
jno
sahf
xor
pmaddwd
lods
inc
roll
clc
sub
mov
mov
push
sbb
or
fstl
pop
xor
cmp
jl
outsb
cs
jg
ret
dec
cmc
jo
add
xchg
push
imul
in
mov
incb
mov
mov
stos
cltd
dec
in
gs
and
push
aas
add
mov
loop
fidivl
mov
cltd
xchg
or
xchg
pop
inc
cmp
sti
push
sti
ss
enter
mov
mov
push
push
lods
pop
xor
mov
nop
sub
in
jle
push
mov
or
data16
ljmp
and
xor
orl
jl
in
lods
fldenv
jmp
or
mov
or
push
out
sub
mov
jp
imul
lods
pop
mov
push
jl
inc
xchg
pop
hlt
ret
inc
inc
cwtl
aas
mov
jnp
aas
xorl
sub
data16
sti
sub
dec
loop
jno
mov
movsl
push
in
push
mov
scas
and
pushf
xor
popf
xor
ja
push
test
lret
cld
mov
testl
mov
ret
xor
hlt
cltd
jnp
lret
adc
cltd
xor
push
mov
jno
mov
or
jmp
mov
pop
cmpsb
lods
stc
jae
insl
into
popf
add
xchg
pop
jle
adc
into
xchg
js
int
cmpsb
mov
mov
lcall
mov
test
ret
mov
jmp
aaa
xor
out
jle
shr
test
aad
adc
push
jge
or
jno
xor
fdivl
mov
in
lcall
jb
rep
jp
jae
mov
xchg
and
inc
fidivs
outsl
sbb
or
add
mov
mov
push
sub
pop
jmp
push
shr
lods
cmpsb
mov
jp
pop
jle
pusha
loop
xchg
cmp
add
fisubs
mov
cmpb
adc
movsl
adc
clc
insl
xor
in
test
andb
add
cwtl
adc
pop
inc
dec
dec
es
push
jle
outsb
jns
lods
mov
in
xchg
mov
sbb
int
mov
inc
xor
pop
inc
mov
adc
inc
push
jb
ljmp
sbb
lods
jmp
ret
xor
jbe
cmp
sbb
cmpsl
push
popa
stos
lds
adc
stc
jge
xor
sbb
push
mov
js
inc
and
aaa
xor
pop
fdivrl
std
addl
pop
in
fstpt
inc
pop
mov
cwtl
or
cmc
pop
xor
pop
cmpsl
mov
mov
push
pop
sti
jnp
pop
testb
orb
jle
or
in
add
inc
or
adcb
aam
sub
je
sub
insl
dec
sbb
adc
cmp
mov
or
ret
fcomip
test
std
aad
sub
loop
jge
mov
jno
outsl
rclb
scas
inc
inc
repz
pushf
push
inc
bound
rcrl
repz
push
sbb
xor
repz
cmpl
push
or
push
test
mov
insl
pop
xchg
sahf
ds
imul
mov
fadd
xlat
or
sub
std
pop
xchg
jbe
icebp
ret
stc
xchg
movl
cmp
lret
js
mov
mov
adc
insb
andl
outsl
cmc
setg
xor
mov
shrl
dec
testl
jmp
inc
pop
mov
lea
loop
jp
jb
add
mov
push
jo
pop
inc
fiaddl
cmpsb
popa
negl
pop
sahf
inc
andb
add
push
sub
pop
fwait
pop
pusha
mov
xchg
jle
ja
xchg
arpl
mov
fldcw
insb
ss
cmp
cltd
mov
xor
pop
outsl
loop
daa
fnstenv
in
xor
je
xchg
jecxz
cmp
jmp
and
inc
cmp
imul
mov
mov
adc
das
andl
jo
lret
cld
out
cwtl
and
ficoms
or
mov
add
xchg
out
xchg
inc
popa
sub
inc
push
push
xchg
bnd
xlat
jmp
push
data16
xchg
das
pop
outsb
push
aam
jge
fisubrl
add
mov
sahf
in
or
mov
add
cmc
js
xor
ret
mov
mov
pop
lcall
sub
ds
daa
aam
call
and
out
test
adcb
push
inc
push
test
gs
jno
inc
mov
jnp
loope
add
xor
push
sub
cmpsb
xor
scas
inc
rol
popf
pusha
xchg
pusha
std
or
jns
xorb
adc
rol
xchg
pop
insl
cmp
and
mov
repz
mov
cmp
fsubrp
scas
lods
inc
jbe
je
hlt
xlat
cli
adc
subb
cmp
repz
xchg
sub
gs
mov
push
pop
inc
xchg
lock
lds
cmp
lods
idivb
das
mov
clc
mov
dec
dec
xchg
int3
cmpsl
sbb
push
test
in
dec
pushl
jle
dec
call
aam
xlat
mov
shll
cmp
xor
mov
mov
scas
mov
jg
sti
jge
mov
sbb
mov
dec
test
shl
xchg
jnp
push
add
int3
movsb
pop
adc
push
mov
test
sub
add
pop
dec
jbe
aam
ficomps
xlat
out
and
gs
pop
push
je
push
pop
push
in
push
jb
cmpsb
jle
subb
stc
sub
push
xor
push
jb
inc
xor
test
jns
ret
cmp
push
enter
inc
adc
and
dec
sub
jno
cmp
in
adc
inc
movsb
incb
pop
dec
stc
xchg
mov
mov
repnz
xchg
xchg
pop
sub
stc
mov
push
lods
add
dec
push
test
adc
lcall
jl
pop
sub
lock
cmc
movntq
out
aad
in
popa
sbb
add
jp
sub
sub
xchg
out
sbb
aas
sub
push
sbb
into
mov
jne
fldt
loopne
cmc
aam
scas
inc
dec
cmpsb
jmp
or
mov
gs
cmpsl
cltd
out
add
push
dec
mov
and
in
cmc
mov
add
rolb
cwtl
das
cmpsb
jl
add
enter
push
sti
xchg
and
pop
cwtl
sub
daa
pop
mov
sub
add
aaa
cmp
insl
pusha
sbb
cwtl
pop
cwtl
cs
or
pop
notb
inc
test
pop
adc
inc
mov
xchg
scas
into
push
loope
lea
push
imul
jnp
mov
rolb
xor
clc
movb
and
popf
and
jmp
les
or
test
cmpsl
mov
and
mov
std
mov
lods
test
and
iret
pop
push
sub
andl
icebp
hlt
jnp
gs
push
testl
push
les
xchg
movsl
stc
jb
pop
lock
test
cmova
push
xor
mov
movsl
cmp
sbb
bound
rol
pop
ret
sub
fldl
lock
sub
pop
aam
sub
insb
not
push
add
mov
lock
pop
scas
adc
scas
sub
add
cli
fdivs
pushf
or
out
mov
jge
xlat
cmp
iret
dec
mov
lret
out
jne
movsb
cmpsb
cmpsl
mov
jno
mov
inc
pop
insb
dec
cmp
jg
inc
in
pminsw
gs
cmp
pop
pop
ja
and
mov
fcom
mov
iret
ds
xchg
jmp
push
ds
mov
leave
popf
and
pop
in
xchg
sbb
loopne
nop
stc
mov
andb
xor
or
andb
fidivrl
pop
jp
mov
xchg
add
cmp
cmp
push
push
or
pop
ja
or
leave
dec
das
jmp
or
aas
std
jo
outsl
cmpsb
sbb
ljmp
das
inc
adc
push
inc
jno
push
xor
dec
std
dec
aad
inc
pop
int3
arpl
mov
mov
call
mov
xor
fnstenv
sub
push
jecxz
push
or
lretw
push
mov
and
jp
or
in
inc
dec
push
inc
vpcomw
gs
movsl
jno
xlat
fisttpl
js
cmpsl
fdivs
xchg
jp
inc
inc
testl
dec
sub
pop
ss
out
jno
mov
jae
stc
das
lret
cld
dec
dec
fisttps
in
push
addr16
pop
sub
xchg
rorb
add
push
jne
xor
lods
arpl
add
pop
test
mov
fstpl
jge
inc
lock
popf
cmp
iret
inc
jmp
mov
insl
fidivl
mov
shr
sbb
shrb
add
pop
mov
pusha
inc
inc
fildll
add
lea
pop
sub
pop
lret
stc
andb
loope
sbb
xchg
loope
mov
repnz
stos
sbb
sub
or
sbb
int3
popl
or
sarl
in
adc
xor
aad
add
sbb
pushf
xor
or
xor
dec
aad
pop
sub
mov
add
push
shlb
xor
repz
cmpsl
ds
lods
ja
mov
add
stc
sub
pop
pop
aam
les
jl
jo
push
daa
mov
icebp
sbb
clc
xchg
sub
cmp
mov
aas
repz
test
cmp
sbb
ds
test
daa
jle
outsb
or
imul
sub
movsb
pusha
aad
scas
mov
sub
lret
bound
pop
rolb
test
jle
pop
mov
or
lods
movsb
pop
les
inc
pop
dec
or
cmp
imul
fldcw
inc
fbld
icebp
push
in
mov
xor
in
adc
xchg
ud1
test
xor
inc
es
jb
add
and
mov
push
xchg
pop
jns
icebp
nop
hlt
shrb
stc
xchg
movsb
mov
sbb
mov
inc
out
inc
ret
sbb
mov
shll
and
jle
rorb
jns
adc
sahf
inc
mov
xor
push
orb
cmp
jbe
int
repz
int3
jae
jmp
lds
mov
cmp
out
xchg
aaa
mov
push
sbb
ds
and
inc
sbb
xchg
sub
rcrb
jno
pop
repz
and
scas
ret
popl
jns,pt
call
push
mov
outsl
cmovnp
push
test
mov
adc
call
loopne
scas
adc
lea
or
enter
movsl
pop
test
fdivs
or
mov
mov
iret
icebp
pop
icebp
and
testl
jmp
dec
cltd
mov
push
cmp
insb
pop
clc
test
js
sbb
xchg
cltd
or
stos
insb
jno
dec
imulb
jnp
inc
ret
sbb
mov
pop
jmp
cmpsl
dec
mov
rcl
xchg
sub
repz
je
sbb
cltd
dec
and
cmp
stc
fwait
call
in
lcall
xor
adc
jp
push
mov
fwait
xor
bound
xchg
mov
sbb
insb
cmc
mov
mov
mov
fwait
inc
loop
sub
das
cld
fiadds
adc
pushf
scas
test
mov
cmpsl
mov
add
enter
shrl
andl
out
mov
mov
and
adc
repnz
sbb
arpl
inc
fistpl
pop
movsl
mov
outsl
push
inc
movsb
mov
fsubl
mov
fimuls
sub
sbb
aad
push
ljmp
out
mov
out
add
inc
hlt
mov
cld
lcall
push
mov
dec
fistps
leave
fnsave
xor
push
arpl
enter
loope
fisubs
or
movsl
js
sub
in
inc
mov
nop
loope
ja
mov
mov
nop
sub
movsb
cmp
addr16
lcall
jg
enter
xchg
repz
popa
loope
inc
adc
test
ljmp
or
add
push
mov
mov
mov
xor
and
push
or
cmp
in
data16
gs
dec
addr16
jecxz
or
mov
repz
adc
sbb
pop
idivl
call
daa
dec
and
push
test
xchg
fidivl
les
sub
outsl
fwait
push
data16
jns
sub
fwait
aad
sbb
popa
dec
loopne
out
sub
inc
addr16
inc
xchg
inc
xor
cmp
push
fisubrl
push
cmp
sub
dec
out
add
sbb
insl
jg
cmp
pop
mov
dec
cmp
test
ja
sub
sbb
dec
ror
and
add
inc
lret
cmp
je
outsb
pushw
xor
mov
repz
adc
pusha
fdivr
test
imul
es
add
jns
fistps
in
bound
xchg
adc
xor
int
pop
cmc
daa
or
test
popa
aad
out
sbb
out
adc
sahf
cmp
add
fstps
sub
dec
push
mov
push
loopne
pop
cmp
push
mov
mov
sub
mov
mov
in
xor
out
mov
mov
jp
pop
rcll
add
push
mov
inc
es
imul
movsb
repnz
mull
mov
dec
xlat
ss
daa
sub
nop
mov
stc
ljmp
adc
lods
jnp
imul
cmc
aaa
stc
pop
sbb
movsb
xchg
call
mov
cmp
mov
mov
jecxz
xlat
mov
popa
jae
xor
sub
rolb
inc
pcmpgtb
and
ljmp
scas
or
inc
addr16
cwtl
push
add
sbb
iret
mov
add
daa
add
arpl
mov
pop
mul
cwtl
icebp
adc
mov
or
aam
mov
aaa
mov
push
inc
ja
jmp
cmp
jp
pop
pop
pop
mov
jno
inc
sahf
popa
data16
repnz
push
sub
mov
pop
imul
popa
inc
adc
and
xor
pop
push
add
jne
xlat
das
int3
pop
jge
jns
push
in
dec
cmpsb
repnz
cmp
mov
lcall
mov
loope
aas
lods
sbb
mov
push
imul
hlt
cmp
add
fldl
xchg
dec
arpl
and
jno
xchg
sub
mov
add
imul
subb
andb
or
inc
insl
sub
into
out
mov
sbb
inc
cld
xor
lods
xor
addr16
mov
add
fs
xchg
nop
add
pushf
test
fisubrl
adc
movsb
shlb
or
jno
test
cmpsb
push
dec
add
pushf
imul
pop
ret
pop
mov
test
ret
lods
or
lret
bound
mov
sub
add
dec
ret
mov
dec
loop
mov
divb
loopne
add
pop
sbb
jnp
jnp
ljmp
xor
or
insl
pop
push
lock
mov
clc
leave
loope
mov
xchg
and
adcb
mov
inc
lcall
inc
out
pop
fdivs
sti
test
cmpsl
fstps
push
dec
in
fistps
imul
popf
pop
mov
mov
fcmovnbe
imul
inc
adc
cmp
sub
xor
sub
add
mov
fdivp
or
add
jns
add
and
movsl
out
scas
push
adc
cmp
and
jo
pop
scas
inc
mov
cli
mov
add
dec
movsl
cld
push
inc
mov
shll
and
jae
or
xlat
mov
adcl
cmp
out
jne
mov
push
mov
roll
int3
mov
loopne
fs
mov
cmp
frstor
imul
iret
mov
or
stos
sub
fcoml
ret
mov
mov
xor
lret
insl
pop
mov
dec
sbb
hlt
imull
xlat
rol
fwait
xor
or
pop
and
pop
cmp
lods
jl
xchg
dec
dec
ds
imul
inc
shl
outsb
test
xor
aad
cld
xchg
test
fcmove
test
push
lds
cltd
xor
icebp
and
dec
pushf
fistpl
mov
rcr
repz
adc
popf
mov
sbbl
and
mov
or
stc
add
out
xor
add
mov
pusha
clc
dec
dec
dec
and
imul
xchg
mov
lds
adc
cmp
imull
cmc
lar
cs
mov
and
popa
daa
ret
addl
out
adc
js
jge
jae
out
ss
push
dec
pop
mov
push
dec
mov
enter
ljmp
sub
xchg
inc
std
cld
insl
mov
xchg
pop
int
mov
dec
mov
cltd
adc
sbb
add
mov
xchg
out
xchg
add
jg
push
icebp
and
outsl
pop
push
xor
shl
lahf
dec
jae
lds
ss
jmp
jg
out
dec
int3
fidivrs
decb
test
adc
mov
loopne
sub
jge
outsb
inc
les
mov
popa
sbb
xor
enter
std
xchg
xchg
fisubs
jle
bound
leave
lahf
cmc
pop
mov
loopne
jmp
pop
cmp
xor
test
call
out
in
pushf
xor
adc
fwait
sbb
lahf
lcall
and
sub
cmc
pop
loopne
dec
pop
lret
mov
push
add
sbb
loopne
xor
dec
cwtl
lds
mov
and
pusha
cld
out
mov
lock
jle
cwtl
sahf
adc
push
movsl
test
sub
jne
jecxz
sahf
xchg
inc
adc
mov
gs
cmp
jbe
insb
or
sbb
inc
mov
lret
fdivs
lret
or
cs
insl
and
std
icebp
push
xor
adcb
mov
sub
push
pop
jmp
scas
mov
ret
mov
stos
add
mov
mov
mov
push
dec
into
int3
jb
and
xchg
push
sub
mov
gs
out
fcmove
xchg
in
sbb
add
ss
or
adc
sub
arpl
jns
cs
rcrb
or
jae
or
jns
fsubrs
pop
inc
clc
int3
test
mov
cmpsb
ds
add
dec
test
ds
jge
inc
dec
sbbl
sbb
or
pop
mov
and
dec
or
push
loop
mov
idivb
pop
push
lock
out
sti
dec
sbb
adc
cltd
xor
das
jg
faddl
push
jne
lds
xchg
jne
rcl
aam
add
push
insl
mov
dec
jmp
sub
push
cwtl
and
dec
cmp
rorl
rcrl
xchg
outsb
jns
outsl
mov
mov
push
inc
sbb
mov
in
adc
push
mov
mov
adc
dec
pushf
dec
aad
das
outsl
cmpb
mov
or
into
imul
push
int
dec
inc
mov
sub
adc
pop
loope
aaa
xchg
cmc
ret
pop
daa
mov
xchg
sub
movsl
mov
int3
dec
add
dec
push
jmp
das
sbb
in
push
out
push
fstps
cli
jne
sub
or
inc
xchg
rorl
outsl
stos
inc
dec
and
mov
mov
fstpt
in
dec
in
pusha
sbb
fistps
fisubrl
mov
adcb
xchg
sbb
xorb
ljmp
xchg
mov
das
cmpb
ljmp
call
jg
pusha
push
jmp
rcrl
xor
jb
inc
cmp
push
insb
mov
andb
xorl
jp
movsl
or
lret
fnsave
pop
jae
sarl
adc
push
inc
push
in
cld
fldcw
push
cmp
cmp
mov
lea
addr16
inc
arpl
pop
jb
test
and
out
xchg
insl
jge
in
cmpsl
xchg
in
xor
push
mov
mov
or
je
movsb
aam
pushl
jle
mov
insb
mov
loopne
cmp
arpl
ds
and
sub
xchg
and
jp
xchg
and
inc
xchg
lods
jns
lds
pop
jne
es
jle
adc
cli
mov
jno
hlt
ficomps
divb
lods
pop
inc
mov
pop
repnz
je
nop
sti
jns
fst
push
adc
push
mov
or
test
fmul
mov
dec
scas
push
pushf
aam
jb
mov
fldl
jns
shrl
lret
movsl
mov
mov
or
xor
cmc
out
daa
lds
roll
ljmp
outsl
mov
push
sub
hlt
mov
enter
insl
enter
in
out
stos
enter
mov
lret
lea
or
inc
ret
adc
insb
aad
jl
add
mov
cltd
lods
sub
mov
push
les
pushf
mov
addr16
jecxz
enter
sti
cmp
inc
push
xchg
pop
push
mov
int3
and
call
sub
mov
pop
xor
aas
popa
pop
lret
test
lea
ja
pop
rcll
scas
mov
icebp
jecxz
dec
xchg
add
push
aaa
andb
aam
cmpsb
fidivrs
add
sub
movlps
fisttpll
outsb
cwtl
repz
adc
jge
or
xor
cltd
xlat
mov
int
xor
ljmp
test
cmp
test
mov
fldt
sarl
sub
push
jp
pop
pop
xchg
jg
fxch
jno
fbld
stc
cmpsb
les
push
mov
das
das
mov
nop
sub
cmc
cmp
dec
and
insb
nop
fbstp
pop
pop
mov
add
aam
and
div
push
scas
fs
mov
mov
push
xor
pop
call
jg
mov
mov
stos
int3
or
aas
scas
les
test
lods
repnz
jo
push
in
aas
scas
inc
ret
jecxz
xchg
roll
xchg
mov
or
imul
push
mov
and
cmp
xchg
jnp
gs
pop
dec
lods
cmp
lcall
inc
cmp
inc
mov
push
ficompl
dec
cltd
int
mov
add
pop
scas
inc
mov
sub
pop
pop
inc
pushf
jg
psllq
sbb
push
fsubs
ret
pop
insl
mov
mov
xor
fstp
inc
dec
jl
mov
in
in
or
pop
imul
daa
mov
sbb
shl
xchg
das
or
jg
insb
fbstp
pop
pop
addr16
xchg
jns
xor
outsl
pusha
mov
sub
rorb
xchg
pop
aaa
inc
in
sarl
push
dec
sarb
push
jle
pushf
mov
in
and
pop
fisubl
lret
xor
adc
iret
or
xor
add
fs
xor
mov
pop
dec
push
popf
cmpsl
xchg
push
pop
aas
ljmp
push
nop
sub
sbb
and
call
pop
cmc
lods
fbstp
iret
jbe
add
push
jl
mov
jno
pushf
lods
jbe
lds
imull
out
scas
hlt
data16
daa
out
test
xchg
and
lcall
dec
scas
mov
add
mov
iret
xor
repnz
inc
inc
test
inc
repz
addl
pop
lods
mov
sub
loope
gs
sbb
mov
ret
jle
xor
xchg
push
sbb
cmp
push
jnp
mov
fcompl
or
lock
pop
rorb
testb
imul
fcoms
andb
pop
jno
add
es
inc
test
jp
test
leave
inc
cmpsl
push
add
cmp
adc
aaa
into
add
out
pop
mov
sbb
or
push
mov
sbb
movsl
xor
int3
mov
push
and
mov
push
int3
add
sbb
scas
testl
xchg
jle
fwait
mov
xchg
and
mov
mov
call
xor
mov
sub
cli
rcrb
cwtl
pop
ds
jle
sti
pushf
mov
enter
adc
xchg
sbb
stc
jbe
andb
into
xlat
jmp
mov
cmpsb
in
sbb
lcall
cwtl
das
pop
bound
shlb
sbb
cmpb
in
lods
mov
mov
add
popf
rol
cmpsb
dec
shl
jns
sbb
mov
push
fdivs
pop
iret
fisttpll
mov
pop
mov
fucomip
outsl
mov
stc
scas
or
cmp
dec
mov
push
shrl
ss
loop
int3
dec
sub
mov
stos
mov
or
adc
dec
sbb
test
cmp
movsb
std
movb
out
lds
test
dec
mov
cmp
arpl
das
ljmp
add
pop
xor
fs
jge,pn
js
movsb
cmp
mov
ja
jae
popa
addr16
cmc
call
ret
jne
pop
lahf
dec
dec
add
mov
mov
inc
jmp
imul
lods
sbb
fiadds
mov
pop
mov
les
aam
in
dec
jnp
js
repnz
cmp
add
cli
mov
aas
adc
add
in
xchg
fdivrp
mov
rcrb
push
or
adc
xchg
sub
das
sub
sbb
dec
dec
imul
mov
push
sub
in
jle
add
mov
sbb
push
arpl
xchg
adc
cmc
ljmp
xchg
enter
popf
popa
cld
sarb
fs
cmp
dec
iret
mov
jo
and
push
mov
jo
out
cmpsl
mov
add
and
inc
xlat
mov
mov
movsb
out
adc
mov
es
jp
sbb
jg
jge
std
mov
cmpsl
shrl
jne
mov
bound
imul
fdivrl
and
out
popa
xor
mov
insl
sbb
xor
pop
sub
sti
sbb
jg
mov
ret
inc
pusha
xor
aad
mov
lock
jne
pop
insb
add
xchg
lock
lret
jnp
xor
sahf
mov
ficomps
cltd
adc
sti
inc
inc
shlb
faddl
sar
cltd
in
xchg
jmp
aad
divb
sti
lret
pop
push
xor
sbb
lret
jp
fcomps
stc
push
mov
outsb
jecxz
sbb
jp
dec
cmp
in
sub
lret
out
pushf
daa
push
sysenter
enter
mov
inc
outsl
out
pop
loop
lea
or
sbb
dec
ret
jae
add
jnp
xchg
jmp
mov
push
xor
call
mov
das
ss
and
sahf
or
fistpll
sbb
add
hlt
inc
out
inc
enter
cmpsb
sub
xchg
mov
push
mov
mov
rolb
mov
inc
mov
pop
fidivrl
test
movsl
adc
push
jl
aaa
mov
dec
jne
xchg
cmp
andb
aam
jno
dec
jb
test
aam
test
push
xor
incb
loopne
mov
cmp
sub
dec
mov
jle
daa
pop
jnp
jmp
adc
pop
jg
sbb
xchg
push
testl
loop
orl
add
sub
fwait
adc
xchg
call
mov
adcb
pop
stos
iret
sub
js
xor
int
mov
add
imul
cmpsb
push
mov
mov
pop
inc
fists
je
test
inc
push
shr
in
jmp
xchg
stos
addr16
or
je
daa
mov
leave
pop
mov
push
sti
inc
aad
loopne
shl
adc
les
out
or
rolb
cli
xor
dec
mov
imul
icebp
es
out
mov
add
dec
mov
adc
aas
aaa
call
in
or
push
ljmp
jno
cld
daa
aas
outsb
sbb
xchg
lods
push
sub
rcrb
cmpl
insl
insl
or
loop
hlt
mov
push
jno
in
jmp
lcall
loope
pushf
or
xlat
pop
or
lahf
inc
dec
das
aam
je
subl
push
pushf
sbb
popa
aam
adc
mov
mov
ljmp
test
int3
leave
pusha
mov
fwait
insb
adc
cmpsl
and
loope
push
add
jnp
iret
xor
jne
loop
lret
add
mov
lods
negl
sahf
aad
push
repnz
mov
mov
leave
shl
adc
jge
push
scas
sti
sub
daa
push
leave
jne
inc
test
mov
js
fildll
pop
xor
loopne
cmp
aam
pop
jmp
int3
inc
add
dec
sub
ss
int3
xlat
sbb
mov
lock
outsl
ret
xchg
push
clc
insl
sub
or
outsl
movsb
fsubr
cwtl
xor
push
sti
adcl
pop
out
fcomip
in
sub
sbb
sbb
insl
aaa
stos
pop
insl
sbb
cmp
mov
cmp
fcoml
loop
popa
mulb
jecxz
andl
mov
lods
add
push
pop
jecxz
xchg
adc
int
lds
fdivs
or
jl
aaa
cmp
or
cltd
icebp
dec
inc
add
pop
mov
lods
frstor
sbb
or
cmp
mov
push
pop
aad
in
mov
cmpsb
fnstenv
sti
xor
sti
sbbb
in
mov
mov
das
repz
pop
pop
sub
sbb
dec
enter
jmp
and
movsl
aam
mov
sbb
jg
xor
into
mov
lea
adc
sub
cli
daa
cmc
xchg
jo
shrl
scas
call
fmul
test
inc
dec
iret
mov
pushf
mov
ret
mov
pop
aaa
rcrb
mov
ret
push
in
mov
jne
xchg
lret
fs
shl
stos
aad
test
cs
mov
lods
ljmp
pushf
add
adc
lcall
xchg
aaa
ljmp
lock
dec
into
scas
sbb
mov
stos
mov
sbbb
imul
mov
adc
xorb
orl
sbb
jbe
sub
mov
stc
mov
lods
jmp
orl
pop
pushf
scas
fildl
push
das
lods
fdivrp
ficoms
cmp
lods
inc
enter
mov
arpl
sbb
inc
xlat
sti
mov
mov
sti
dec
inc
push
jecxz
out
idivl
stc
sbb
or
mov
nop
out
roll
dec
and
push
insl
xchg
cs
cmc
int
aad
add
sbb
adc
lahf
outsl
and
cmp
push
cwtl
add
and
sbb
enter
outsb
inc
push
mov
outsl
xor
pop
loopne
and
dec
xlat
and
mov
aam
sbb
sbb
jnp
mov
nop
mov
cs
add
inc
orl
aam
pop
popa
mov
add
aas
xchg
mov
sub
sbb
and
aam
push
imull
mov
adc
pop
test
rcll
repnz
mov
mov
cmpsb
and
loopne
inc
shrl
fdivs
ror
stc
add
adc
sub
push
sub
cmpb
mov
push
adc
pop
in
fstpt
add
or
pop
gs
add
dec
or
mov
shll
call
insb
inc
fdivrl
mov
pushf
outsl
stc
sub
pop
sbb
mov
dec
mov
sub
in
push
rcl
bnd
or
push
notl
push
loope
aad
clc
fsub
dec
popa
addl
or
push
pop
lea
into
hlt
loopne
loop
dec
push
sbb
jge
jb
scas
mov
lds
mov
ret
popf
iret
xchg
jb
cmp
push
mov
and
dec
fisubs
xor
inc
mov
mov
sbb
jnp
cmp
xorb
pop
cltd
push
or
sbb
rcrb
mov
loopne
cmpsb
cmp
mov
fadds
insl
jp
insl
add
hlt
lea
xor
test
push
cld
jae
dec
test
shrl
mov
adc
push
ret
pop
sub
pop
dec
sub
mov
sbb
xor
mov
mov
cs
lds
jo
fsubr
xor
stos
inc
mov
jne
sub
sub
sarb
inc
inc
movsb
push
fldenv
insl
std
mov
cwtl
mov
les
xor
not
fsubs
movsl
fldl
sbb
mov
add
xchg
loop
inc
in
call
mov
pushf
mov
ljmp
or
fimuls
jg
mov
jl
cmc
ret
jae
popf
add
lods
jno
fists
lods
lret
rorb
mov
lea
add
mov
sub
loopne
and
add
mov
addr16
pop
scas
mov
sti
jnp
jo
lret
push
cltd
jle
push
inc
jnp
rclb
adc
stos
and
in
adcl
cmpsl
mov
pop
fbstp
inc
sub
loopne
push
in
sbb
inc
adc
cmp
lret
push
push
add
jne
in
insl
xchg
dec
and
mov
push
sub
daa
aad
outsl
imul
sub
sbb
in
or
bound
and
pop
int
iret
push
jl
inc
scas
ja
jg
push
mov
or
mov
loopne
lds
or
shrb
cmp
int
loopne
mov
int
mov
inc
nop
sub
decb
out
cld
and
xor
int3
pushf
and
popa
dec
xchg
push
mov
outsb
jmp
jo
pop
mov
push
jecxz
sub
xchg
outsl
push
mov
cmc
mov
fistpll
add
fistpl
inc
push
ficoms
repnz
mov
into
xchg
pop
and
add
sbb
or
popf
mov
cmpb
jg
push
mov
sbb
xchg
lret
cmp
cld
sarl
push
push
pop
sub
enter
rclb
fsub
or
mov
mov
push
xor
leave
pusha
mov
lret
jae
mov
push
fcomps
or
xchg
sbb
and
xchg
sub
loope
cmpsb
mov
push
jno
fstpt
repz
dec
xchg
popl
out
mov
mov
into
push
push
add
cmp
sbb
arpl
subps
push
add
mov
aad
andl
lret
dec
push
mov
lds
lods
add
mov
fldenv
lds
sbb
les
pop
sub
jle
mov
or
jo
inc
push
jmp
add
mov
push
lret
shl
iret
jb
jmp
mov
push
mull
fwait
or
mov
xor
jp
and
into
or
inc
add
movsl
sbb
cmp
stos
mov
leave
rcll
push
push
add
mov
repnz
add
mov
shr
pop
imul
popf
andb
sbb
xchg
loop
aas
outsb
ljmp
dec
ret
rcrl
mov
mov
frstor
and
lods
ljmp
bound
ljmp
push
adc
ss
stos
push
adc
lds
xor
cmpb
mov
leave
dec
adc
popf
or
jl
inc
cwtl
scas
popf
dec
pop
iret
shr
xchg
push
jno
jae
movsb
lods
jl
adc
lret
push
or
xchg
xor
loope
push
pop
inc
enter
adc
stos
fldpi
fcmovne
mov
insl
and
stc
mov
out
cmp
rorb
int
or
and
addr16
stc
cmc
adc
jnp
mov
adc
and
data16
repnz
cmp
add
bound
mov
mov
in
mov
xchg
inc
mov
fnsave
cmpps
fdivs
sti
inc
lods
and
mov
sub
pusha
in
notl
dec
inc
fisubl
mov
shrb
fmull
mov
jg
sub
loopne
pop
sarl
sub
out
cmpsl
pop
sub
push
nop
or
or
xchg
rorb
daa
sbb
dec
nop
xor
or
pop
ja
mov
mov
ds
or
fcomi
xor
or
test
jecxz
push
xchg
add
mov
fnstsw
pop
sbb
mov
pop
ficoml
stc
test
hlt
mov
mov
cltd
mov
push
aaa
ret
mov
popf
cld
sub
and
dec
cli
adc
shrl
outsl
sbb
xlat
push
stc
lahf
cli
in
mov
movsb
push
or
pop
and
cli
inc
jg
pop
jecxz
mov
jl
sub
stos
les
sbb
sbb
scas
imul
shll
and
xchg
mov
cltd
push
push
jmp
adc
ret
scas
push
and
loope
push
fnstenv
ds
mov
imul
ret
out
test
in
mov
xchg
dec
gs
in
loopne
das
sbb
mov
sub
add
adc
fidivrs
mov
arpl
je
xor
dec
dec
or
sub
lods
sbb
fsubrp
aas
push
adcb
in
insb
adc
in
push
xor
fsubrs
cwtl
movsl
inc
push
pop
jb
xor
push
jb
push
mov
lock
and
fdivrp
pop
fwait
push
mov
lahf
les
into
insb
jmp
mov
add
mov
aam
push
sub
or
shl
inc
jns
push
pop
bound
lds
jecxz
rolb
in
jl
addr16
in
rclb
mov
jne
cmp
ljmp
pusha
lods
sub
push
jbe
dec
add
mov
iret
sub
sub
sub
xchg
scas
push
popa
out
mov
pop
repnz
clc
and
push
aad
inc
push
xchg
jbe
gs
xor
out
repz
xchg
aaa
cwtl
push
inc
mov
pop
mov
aam
sarb
lret
push
inc
xor
imul
call
push
iret
mov
mov
mov
leave
cld
movsb
add
int3
dec
pushl
pop
push
enter
jmp
and
cwtl
imul
stc
cli
mov
je
xorl
xchg
outsl
inc
dec
call
push
inc
lcall
inc
sbb
sub
or
imul
cltd
ja
stos
shr
incb
sub
es
loopne
or
mov
lahf
xchg
sbb
push
mov
pop
dec
movd
icebp
mov
sysexit
ss
loop
lahf
out
or
xchg
adc
pusha
in
cmp
iret
pop
add
pop
repz
xor
fucomp
mov
hlt
test
pop
push
sub
or
pop
call
ds
inc
or
cs
pop
push
xor
ja
inc
push
inc
dec
cli
pusha
aad
sbb
stc
xor
fmull
ret
ljmp
lret
enter
in
in
cwtl
xchg
sbb
jne
cmp
jecxz
mov
in
lret
sub
pop
cmp
idiv
cli
lods
test
push
repz
andb
jge
sbb
jno
pop
xchg
lret
push
test
adc
je
sbb
pop
icebp
or
add
lods
js
add
into
adcb
loope
test
sar
insb
nop
push
pushf
pop
imul
repnz
sarl
sbb
add
in
in
add
push
push
sub
jae
imul
jecxz
dec
div
xchg
popa
pop
enter
jb
aaa
jae
test
leave
out
jae
mov
pop
sub
roll
sbb
adc
and
jo
sub
sahf
jne
pop
xor
sbb
jne
cmp
push
cmpb
sbb
shr
rcrb
gs
loop
xor
jp
xor
push
push
fcomp
xor
subb
cmpsb
mov
dec
shlb
jns
mov
push
jne
push
insl
adc
in
fsubs
call
push
mov
int3
cmpsb
sbb
or
jo
mov
cmp
jl
movsb
ds
cmpsl
negl
shlb
and
pusha
call
mov
popa
inc
stos
bound
fsubrl
mov
sub
sub
or
sbb
push
sub
lods
insb
leave
out
add
scas
fcompl
mov
fdivp
int
mov
xchg
adc
pusha
int
push
dec
sub
xor
fs
dec
jmp
jle
sub
neg
test
aad
inc
stc
adc
mov
add
out
loope
roll
pop
dec
movsl
icebp
jns
push
inc
jl
or
xchg
jns
fidivl
inc
mov
je
mov
xchg
leave
dec
inc
es
sbb
inc
int
loopne
stos
xchg
div
and
mov
test
gs
int
sti
xor
aam
push
mov
push
xchg
pop
sub
fyl2xp1
mov
sub
lret
pop
adc
ss
pop
sbb
or
stos
lock
mov
setge
and
loopne
in
pop
loopne
sbbl
cmp
int3
jle
adc
cmc
pop
jg
mov
out
clc
rcrb
loopne
and
sbb
pop
dec
call
mov
popa
fdivrl
scas
into
int3
movsl
clc
dec
push
movsl
jnp
pop
inc
je
cmpl
push
test
mov
rorl
iret
mov
and
lock
rorb
out
sbb
hlt
fwait
sti
cmp
outsb
jl
cmp
leave
jle
cmp
mov
ss
sub
adc
stos
call
mov
mov
insb
sbb
pop
cmp
jnp
add
pop
clc
aaa
sub
repz
shrb
inc
cs
lea
aad
movsl
scas
push
rorb
cmpsl
inc
dec
sahf
inc
loop
out
fmull
aaa
xor
xchg
das
js
mov
addl
repz
sub
jecxz
fstps
xor
mov
clc
push
cmpsb
and
iret
imul
mov
xchg
js
sub
jle
jmp
pop
pop
jnp
stos
test
inc
mov
in
cmc
test
pushf
mov
push
cs
cmpsl
and
insl
dec
jg
mov
les
loopne
push
stos
xor
xor
and
enter
mov
vxorps
push
push
sbb
and
xlat
pop
or
xor
xor
xchg
popa
mov
in
jmp
fcoms
push
call
out
and
xchg
sbb
add
cmp
stos
fnstenv
xor
inc
out
pop
add
sub
push
jns
or
jo
sbb
xchg
icebp
mov
xchg
or
dec
dec
cld
and
loope
push
and
or
icebp
mov
mov
xor
xor
xor
lock
push
mov
dec
mov
bound
adc
inc
mov
repz
sti
out
loope
and
sub
lahf
scas
and
mov
mov
ret
push
lods
dec
pop
ljmp
fstps
push
cmp
fmull
aas
ret
setle
aad
call
je
mov
sub
in
push
ss
push
repz
mov
lret
in
xchg
xor
xlat
dec
daa
pop
pushf
jle
sub
mov
sarb
adc
ss
push
shrb
rorb
jp
push
xchg
push
stos
mov
nop
mov
pop
xor
repnz
push
inc
add
sbb
mov
and
sarb
out
lret
cmp
lret
push
call
mov
add
push
mov
sahf
xlat
jmp
pop
fsubl
loop
sbb
or
jmp
xor
mov
and
inc
int3
gs
push
sbb
jmp
jo
xor
imul
jge
out
mov
notb
icebp
repnz
jl
movsl
lret
xchg
xlat
rcl
mov
cmp
cmpsl
rcr
xchg
rcrl
shr
loop
and
je
in
shrb
mov
test
lahf
data16
inc
mov
in
xor
and
fwait
orl
push
adc
aaa
sbb
aaa
push
std
insb
insb
jno
push
jbe
xchg
jmp
add
cli
adc
int3
pop
dec
mov
push
imul
lcall
push
pusha
pop
mov
mov
rclb
mov
sahf
popf
dec
sub
pop
xor
pop
icebp
inc
sahf
add
es
mov
cwtl
cltd
test
pop
push
xchg
dec
into
lods
mov
cmp
cmpsl
add
ss
lcall
daa
push
pop
pop
and
cli
call
push
jge
xorl
and
fldt
cmpsl
xor
sub
push
inc
xchg
data16
loopne
jno
ret
fists
sbb
pop
es
sbb
xchg
inc
cltd
test
sarl
test
or
xor
dec
mov
dec
mov
leave
cmp
je
push
repz
sbb
cwtl
xor
add
inc
nop
aas
rorl
addr16
sub
xor
cmpsb
gs
sub
pop
xor
inc
mov
mov
std
pusha
test
adc
mov
adc
push
je
pop
lcall
sahf
sbb
outsb
or
lock
push
outsb
xor
repnz
scas
ss
fcompl
push
mul
mov
imul
ret
fidivl
inc
xor
ret
mov
jmp
into
stos
jo
fsubrs
mov
in
dec
push
notl
shrb
fwait
jecxz
xchg
fnstenv
xchg
aas
fidivs
aas
mov
add
jecxz
cmp
xor
popf
mov
xor
subl
sbb
xchg
cmpsl
cmpsb
mov
mov
push
adc
xor
xlat
icebp
scas
xchg
mov
ret
icebp
fmull
repnz
jp
das
sbb
mov
sbb
push
sahf
ljmp
movb
mov
inc
ffree
xor
test
in
leave
fldl
enter
push
lcall
cltd
data16
lret
and
sbb
and
test
sub
pop
stc
lods
shr
repnz
orb
jg
fidivrs
pop
mov
mov
fsubrl
pop
fs
testb
sub
gs
ja
test
inc
or
lret
andl
in
shll
mov
in
jle
sahf
outsl
sbb
out
out
push
and
shrb
inc
xchg
test
or
insl
outsb
sub
fadd
in
push
jecxz
popl
dec
filds
aas
imul
lret
lret
sbb
lods
inc
cmp
sub
cwtl
pop
mov
lahf
mov
lahf
push
xchg
imul
repnz
dec
cltd
ja
fwait
jecxz
cwtl
pusha
sbbb
push
ljmp
cmp
xchg
clc
sarb
sub
mov
imul
xchg
xor
sbb
adc
dec
add
jl
jg
and
js
pop
aas
xor
xchg
in
cltd
fnstcw
lcall
fsts
out
cmp
add
pshufw
dec
loop
out
ljmp
out
test
or
imul
jle
in
mov
or
lds
mov
inc
in
add
sarb
cmp
mov
push
inc
xor
cmp
lock
sahf
lods
cld
and
addr16
xor
bound
into
mov
imul
in
sbbl
pop
jbe
lods
sbb
mov
mov
lds
mov
lcall
sbb
ret
adc
jns
mov
add
or
imul
call
imul
sub
add
sub
pop
testl
fidivl
mov
mov
jo
or
stos
rol
dec
mov
into
pop
notl
push
les
jno
test
in
xchg
sub
jle
bound
repz
cmpsl
stos
outsl
jp
pop
stos
shrb
sbb
inc
rcrb
mov
imul
or
push
fisttpll
push
popa
test
mov
cld
btr
dec
jp
jecxz
sub
and
xor
xchg
xchg
jle
pop
mov
cmp
push
mull
movsl
xchg
pop
push
out
mov
mov
mov
je
push
jo
hlt
inc
mov
popa
fwait
insb
orb
mov
mov
sbb
add
pop
cld
aas
push
push
das
mov
loopne
movsl
jmp
fsts
mov
jnp
mov
sarl
pop
and
xchg
cltd
es
ljmp
decl
jmp
cmp
push
stos
pop
pop
mov
addr16
xchg
cwtl
in
cmp
fcmovu
sub
psllw
addr16
adc
int
jmp
aad
cmp
adc
lods
jge
sti
mov
scas
inc
out
aam
and
inc
inc
pop
inc
sbb
in
push
cli
es
clc
adc
mov
add
insb
push
and
or
jne
cmp
ret
xor
daa
loopne
movsl
mov
shlb
sbb
and
sahf
fwait
dec
idivb
add
fldcw
sbb
push
and
mov
inc
inc
xor
pop
loop
fisubl
cmpsb
movsl
in
pop
dec
repnz
add
sub
adc
sub
addr16
es
xor
cmc
jge
insl
rcrl
nop
popa
and
pop
sbb
inc
std
or
sub
fs
fisttps
mov
xchg
insl
aas
sbb
jo
imul
mov
push
shlb
mov
pop
aam
out
inc
sbb
dec
mov
sbb
sti
adcb
sub
sahf
lods
sub
push
in
mov
dec
jbe
mov
aaa
dec
mov
sbb
mov
mov
es
add
pop
push
lret
push
xor
test
xchg
mov
call
mov
sbb
mov
mov
fistpll
das
pusha
cs
rolb
mov
dec
mov
iret
negb
mov
xor
mov
outsb
jge
inc
xchg
cmc
dec
mov
fs
mov
mov
fsubl
cmp
push
insb
cmp
or
movsl
and
adc
mov
imul
inc
pushf
pusha
push
inc
pop
js
aas
or
test
mov
cwtl
xchg
and
lahf
xchg
sub
scas
out
mov
adc
lods
adc
add
cvtdq2ps
sbb
pop
cmp
roll
loope
xor
inc
ficoml
outsl
mov
ret
xor
aaa
add
test
adc
push
out
cmp
fwait
sbb
xchg
inc
fisubs
sub
mov
add
aam
push
push
lods
or
pop
lock
pop
scas
push
add
into
mov
xadd
mov
out
leave
hlt
cwtl
test
pop
xchg
leave
insb
mov
insb
inc
or
fisttpl
dec
add
mov
subb
in
add
jno
mov
insl
loopne
pusha
mov
push
repz
popf
inc
sahf
and
inc
and
sub
mov
or
push
push
and
lock
ja
out
mov
mov
enter
lret
test
fnstsw
push
fs
push
or
jno
fs
imul
jmp
mov
push
mov
mov
pop
test
mov
loopne
out
ret
decl
cmc
pop
push
and
inc
fildl
lock
and
xchg
gs
xor
andb
or
out
aad
sub
mov
lea
ret
or
testl
pop
js
data16
filds
stc
jl
xor
dec
or
jle
lods
cs
cmp
notb
in
cld
mov
ret
xor
jnp
out
imul
out
adc
repz
push
inc
test
ljmp
dec
xor
repz
and
dec
dec
pop
pop
dec
jp
xor
jmp
cs
xchg
push
or
mov
push
fwait
lods
or
xor
insl
mov
xchg
xor
int
ljmp
add
lods
mov
mov
cli
std
jmp
aaa
xchg
andb
push
pop
sub
fucomip
jmp
repz
xchg
std
or
aad
mov
mov
mov
jns
loopne
cmp
jmp
fnsave
data16
xor
js
insb
mov
addr16
mov
fsub
outsl
mov
ret
hlt
mov
out
or
jb
bound
xchg
adc
clc
jge
sbb
dec
sub
dec
push
xchg
add
pop
mov
addb
adc
pop
add
push
lds
sub
jno
xor
sub
std
sub
out
lods
out
ljmp
sti
mov
push
popf
idiv
hlt
mov
cld
sti
jbe
fcoml
cmc
subb
jle
mov
jmp
daa
xor
mov
xchg
dec
clc
push
adc
popf
sbb
jno
cli
loope
fistl
add
int3
lods
jo
outsl
adc
fnstenv
jb
mov
sub
inc
sub
push
jmp
cli
or
lret
pushf
jp
mov
cmpsb
xor
int
out
fs
fs
and
mov
ljmp
icebp
cli
mov
mov
pop
ljmp
popa
in
cld
popf
push
mov
and
xor
push
xchg
mov
mov
xchg
sti
stos
loop
or
xchg
roll
cwtl
stos
mov
lret
push
ljmp
mulb
xchg
mov
ss
shl
leave
xchg
adc
out
je
mov
fisttpll
sub
rol
dec
push
mov
cld
push
outsl
and
mov
in
outsl
lods
sarb
dec
push
mov
mov
sbb
std
or
scas
pushf
dec
adc
rcll
inc
xchg
int
lret
mov
or
xchg
mov
decl
cmc
sub
push
or
les
jmp
stos
hlt
jecxz
stos
pop
lods
cmp
adc
mov
push
xor
xchg
jecxz
dec
out
data16
std
jg
ret
jle
adc
cmc
mov
pop
imul
inc
scas
dec
sub
sub
jmp
loopne
push
adc
dec
mov
jge
pushf
and
jnp
pop
and
cwtl
mov
mov
nop
pop
push
pop
adc
mov
clc
and
xchg
mov
js
xor
ficoms
push
divb
sbb
adc
dec
pop
popf
lret
adc
pushf
xor
out
inc
sbb
jge
cld
ret
pop
ss
lahf
lods
xchg
mov
in
daa
cmpsb
imul
aad
xchg
jbe,pt
jmp
cwtl
stos
in
or
addr16
ljmp
cmc
dec
testb
stos
adc
add
pop
mov
sbb
cli
inc
pop
or
ds
cmc
shrd
xchg
cld
lds
insl
adc
lds
sbb
add
sbb
es
push
adcl
and
xor
insb
add
dec
add
in
test
push
inc
push
or
movsb
push
lods
mov
sbb
mov
sahf
lock
cmp
jbe
dec
shrl
ret
fbstp
mov
mov
cwtl
subl
cmc
shll
xchg
out
inc
push
cmpsl
xchg
push
in
test
or
packuswb
pop
sbbb
aas
pop
mov
and
and
bound
mov
sti
xor
adc
sarl
xchg
insl
js
lea
mov
cwtl
pop
loop
stos
lcall
call
inc
test
call
sti
ficompl
data16
push
les
cmc
push
shll
pop
add
pop
sub
popf
imul
jg
sbb
lea
push
jne
fwait
ret
das
divl
cmp
aaa
xchg
rcrl
cmp
addr16
pop
jmp
jae,pn
ficoms
lcall
xchg
inc
in
addb
stos
push
or
or
outsl
test
cwtl
stos
cmc
or
mov
outsb
jmp
pop
sbb
xor
mov
imul
mov
imul
mov
pop
jae
test
pop
and
das
cmp
bound
aad
sbb
sbb
cmp
jl
fisubrs
xlat
stc
movsl
push
fsubrs
lods
pop
xchg
fisttps
pop
mov
mov
adc
xchg
arpl
sub
adc
sbb
sbb
test
inc
inc
or
adc
adc
fsubs
xchg
adc
pop
add
mov
sbbl
mov
das
xlat
aad
pop
pop
cltd
addb
pop
xor
movsb
mov
mov
outsb
shrb
push
mov
loop
lret
or
mov
mov
sbb
add
insb
mov
sahf
mov
sub
mov
movsl
addr16
dec
aam
inc
enter
inc
dec
cwtl
xor
rcl
shll
pushf
test
aaa
mov
jp
test
sbb
pop
jns
test
outsl
jle
movsb
lahf
insb
and
lods
fcoml
fidivl
sub
mov
add
mov
icebp
mov
pop
std
sub
push
adc
test
repz
ljmp
push
fldcw
push
xor
sbb
mov
cmpsl
sti
rolb
sbb
cmp
imul
cs
inc
mov
dec
and
shll
mulb
jne
inc
sub
out
lret
xor
mov
ret
jmp
int
mov
daa
pop
or
push
add
mov
gs
mov
xchg
frstor
mov
mov
inc
sar
push
mov
or
adc
fadds
roll
sbb
insb
jle
adc
stc
shlb
ret
aaa
je
movsb
repz
daa
add
jns
add
ja
or
pop
scas
mov
repz
lds
cmpl
movsb
pusha
out
lds
sar
inc
lods
sub
or
loop
scas
nop
and
mov
data16
enter
mov
gs
out
xor
push
jge
test
push
adc
pop
scas
lret
mov
fildll
nop
pop
jno
sbb
xchg
jge
cmc
scas
pop
addr16
jl
sbbl
inc
add
pop
fcompl
loop
cmp
lea
pop
and
test
push
stos
dec
ret
push
out
lcall
rclb
mov
and
aaa
cmp
mov
out
fs
push
mov
out
out
pop
push
mul
pop
cmpsb
ret
sub
jbe
mov
pop
andl
jp
mov
into
push
rcr
sbb
pusha
xor
out
in
sbb
ljmp
aad
adc
ss
mov
inc
lret
adc
outsl
push
test
add
gs
popa
and
mov
outsl
in
mov
and
cli
clc
out
loopne
out
push
jge
mov
add
pop
cmp
mov
out
scas
jno
dec
mov
ss
pushf
mov
ljmp
cmp
sbb
dec
jae
cwtl
nop
cmpsb
mov
daa
mov
sub
mov
sub
pop
lock
and
subl
sbb
add
sbb
inc
add
jnp
cs
adc
dec
xchg
jb
xchg
push
mov
cmp
hlt
pop
mov
cltd
mov
testb
or
push
outsb
es
out
jns
test
lods
cmpsb
cld
loop
jge
add
cmpsb
cmp
push
cmc
xchg
pop
ret
add
mov
xor
fs
pop
or
xchg
stos
or
dec
jno
xchg
scas
mov
out
mov
push
inc
jmp
out
loopne
jne
dec
sub
add
int
inc
scas
mov
pop
jnp
cmp
sub
pop
dec
pop
jge
sarl
and
sub
pop
repnz
int
xchg
mul
dec
in
sub
dec
movsl
lds
dec
scas
sbb
js
inc
in
inc
std
icebp
repz
stos
add
xorb
push
adc
fisubrs
stos
inc
ds
or
pop
movl
fdivl
pusha
arpl
xchg
dec
in
test
sub
es
mov
popa
push
stos
xor
int3
lret
cmpsl
jp
ljmp
xor
mov
jg
out
rcl
pop
out
sbb
rcll
add
lods
repz
xchg
fwait
aas
shl
jnp
push
add
and
pop
or
mov
ret
daa
rcrb
xorl
jnp
int3
andl
xchg
lret
nop
daa
cmc
aam
jmp
mov
iret
jmp
pop
jns
into
mov
mov
sbbl
jo
cltd
pop
insb
or
add
pop
pop
pop
push
lods
inc
in
call
push
add
shr
loopne
push
push
js
mov
sbb
inc
gs
xor
popf
push
pop
push
data16
adc
out
stc
cmp
push
ljmp
sub
mov
and
filds
mov
les
or
cmp
fsincos
imul
jae
repnz
push
ret
lock
pop
cmp
push
je
repnz
imul
xlat
stc
lods
outsl
and
out
xorl
lock
pop
push
iret
mov
inc
cli
test
xor
jge
or
xchg
or
mov
test
mov
pop
xchg
ja
push
ja
inc
pop
xor
aaa
jl
xor
iret
mov
popa
sub
jne
mov
xor
or
int3
sbb
jbe
psubq
loop
cli
in
fldl
mov
iret
push
inc
pop
lret
push
xlat
leave
shl
xchg
loope
pop
or
mov
aad
jnp
cmp
push
adcb
insb
xchg
jno
xchg
mov
push
insb
xchg
push
popf
and
pop
and
decl
cmpsb
repnz
shll
insb
cmp
mov
lea
pop
movsb
xchg
scas
aad
loope
cwtl
adc
cmp
cmp
xor
out
cmp
mov
dec
cmp
mov
mov
lret
inc
mov
fidivl
or
adcl
push
push
cmpsb
pop
cmpsl
pop
push
push
adc
sahf
or
cmpsl
dec
mov
jo
sub
pop
sbbb
es
push
inc
test
inc
out
mov
setp
pop
adc
aas
inc
xor
je
lahf
sbb
pop
shrl
push
jns
jp
out
xchg
pushf
xor
divl
insl
push
jge
pop
jl
fnsave
sbbl
lods
mov
cmpsb
and
pop
repnz
push
and
je
mov
push
xchg
bound
dec
push
mov
insl
add
movsl
lods
jg
jle
sbb
loop
int3
ror
icebp
lods
loope
aam
mov
movsb
loop
add
sarl
sub
xchg
xor
popf
sub
fisubrl
mov
scas
jecxz
jb
clc
fnstcw
subps
xchg
shrb
inc
inc
cmpsb
sbb
std
test
gs
jb
dec
adc
cmp
nop
xchg
out
repnz
pop
pop
outsb
nop
ja
in
movsb
jae
push
rcll
shll
into
int
fcompl
nop
lock
scas
mov
dec
mov
xchg
mov
popf
pushf
xor
fwait
cmp
add
in
test
jne
mov
inc
and
xchg
outsb
rcrb
jmp
push
sbb
cwtl
test
adc
inc
xor
lds
insb
test
sub
subb
clc
loope
inc
mov
add
movsl
sbb
iret
mov
mov
push
xor
fnsave
scas
bound
imul
sbb
jmp
cs
pop
inc
xchg
sub
enter
dec
push
mov
stos
icebp
fwait
cld
inc
jne
lods
xchg
rolb
mov
icebp
enter
push
xchg
enter
cmp
cmp
aad
std
shl
jmp
pushf
xor
inc
out
ss
inc
filds
pushf
pop
movsb
seta
jbe
loopne
adcl
ds
xor
jae
mov
adc
popf
push
adcb
je
xor
dec
negb
popa
mov
jns
mov
sbb
les
jae
and
stc
mov
push
cltd
ret
outsb
xchg
leave
mov
aam
in
pop
cmpsb
and
sub
jmp
cs
cltd
sbbl
mov
incl
xchg
cs
mov
jo
popf
xor
mov
add
adc
and
or
xor
enter
mov
add
popa
or
insb
in
out
xchg
sbb
ss
aaa
and
push
xchg
inc
fnsave
xlat
xor
cmc
cmp
sbbb
out
pop
or
xchg
iret
clc
push
insl
sub
sbb
idivb
push
sub
xchg
pop
xchg
hlt
xor
pop
rolb
cmovnp
mov
mov
test
scas
fnsave
aad
xchg
jb
lret
jmp
inc
push
mov
fisubs
pop
xor
push
adc
adc
int3
add
mov
lcall
fnstcw
mov
adc
sbb
xchg
jmp
clc
mov
dec
jecxz
imul
mov
sti
xlat
or
push
sub
sahf
call
out
xchg
test
inc
push
xor
shlb
mov
and
inc
ljmp
xor
push
ja
cmp
sub
in
nop
jbe
out
imul
call
sub
aas
hlt
lods
adcb
cmpsb
mov
lcall
dec
loope
cld
dec
pop
cs
addr16
sub
les
dec
data16
adc
sti
inc
rolb
test
sbb
mov
lods
inc
leave
std
sbb
ljmp
cmpsb
fs
jns
xchg
fwait
call
mov
lret
cmp
popf
mov
or
addr16
ss
add
pop
mov
mov
les
stos
push
insl
inc
sbb
test
push
xchg
sbb
dec
cmp
repnz
xor
jg
jg
jae
push
jae
inc
sub
lea
rcrl
call
ret
andl
lret
clc
dec
rsm
and
loope
mov
mov
adc
fcoml
int
aad
les
insb
sbb
cmp
add
jbe
or
daa
arpl
xor
push
mov
push
repnz
leave
loope
cmpsl
lock
xchg
out
adcl
mov
pusha
jge
outsb
in
adc
pop
loopne
mov
popf
sbb
and
outsb
dec
dec
ds
adcb
cmpsb
or
lods
shll
hlt
in
popf
iret
stc
pop
dec
in
or
pop
dec
leave
sbb
out
imul
lcall
lret
das
and
push
dec
js
cmp
xor
mov
xor
loope
cli
push
out
push
mov
add
lret
pop
jmp
icebp
push
loopne
mov
in
jbe
insl
jle
xor
ret
sub
lret
lods
jge
sbb
loop
orps
test
push
popf
mov
fcomps
rcrl
sub
repz
xchg
rorl
pop
sbb
mov
sub
jns
bound
inc
jmp
fdivs
call
rorb
pop
adc
adc
data16
scas
mov
loopne
dec
neg
imul
jb
aam
sbb
mov
outsl
add
mov
cmp
lret
and
ret
in
imull
cli
mov
das
loop
jo
pop
mov
fstps
shll
repnz
cmpsl
and
in
aad
out
outsb
xchg
cs
push
pusha
or
push
xor
shlb
mov
mov
xor
dec
icebp
jecxz
jmp
lahf
lods
sub
test
dec
loope
mov
adc
xchg
jmp
int3
dec
es
mov
pop
mov
pop
lods
xchg
add
inc
xchg
cld
lcall
in
xchg
sub
stc
pop
sub
cs
sub
jmp
out
cmp
aad
lahf
fidivs
sub
ja
inc
push
jmp
jmp
rcrb
stc
mov
les
ficompl
sbb
xchg
or
sbb
sub
aam
or
es
jmp
movsb
push
je
sub
imul
mov
and
mov
cmp
aam
sbb
cmc
cmp
mov
sbb
inc
hlt
fsubr
outsb
mov
inc
dec
scas
repz
push
push
les
mov
call
cltd
jl
xchg
sub
sbb
xor
add
leave
cwtl
das
cli
sbb
push
dec
fistl
xchg
xchg
push
subb
dec
loop
dec
jno
aaa
add
adc
pop
adc
lret
jmp
inc
pop
movb
pop
jg
cs
into
in
imul
jg
scas
lock
and
mov
adc
pop
rcrb
xchg
gs
inc
pushl
inc
out
mov
fistpll
push
sbb
scas
pop
xor
in
or
mov
ret
ds
imul
pushf
and
adc
outsl
shl
xchg
push
lock
out
repnz
mov
imul
movsb
cmp
push
lcall
mov
repz
fcoml
mov
mov
mov
mov
shll
mov
mov
push
jl
addr16
and
push
gs
inc
sub
leave
fs
std
ss
sbb
leave
movsb
mov
mov
mov
movsl
fisttpl
mov
jge
cli
shrl
pop
sub
ds
dec
or
mov
push
loopne
fnstsw
stos
inc
lods
popf
mov
arpl
leave
push
int
jmp
loop
cltd
add
clc
and
in
or
in
and
loop
push
sub
mov
or
addl
negb
out
pop
sub
rolb
aaa
jge
add
nop
fists
cltd
and
neg
mov
adc
lods
ljmp
out
sbb
loop
sahf
dec
or
cmp
out
and
inc
pop
fnsave
pop
shlb
mov
sbb
dec
mov
outsb
add
xchg
mov
xchg
push
out
push
scas
mov
xchg
sub
in
xor
jmp
clc
sbb
xor
loop
je
inc
pop
mov
jl
out
repz
inc
popa
cmp
cmp
sti
mov
nop
push
shrb
add
cmp
das
or
push
mov
leave
sbb
js
pop
ljmp
arpl
ds
sti
dec
mov
mov
or
cmpsb
and
inc
adc
add
pop
pop
outsb
roll
push
cmp
dec
mov
rol
mov
add
inc
enter
ret
push
sbb
insl
repz
and
gs
mov
flds
in
fidivs
pop
std
xchg
jnp
repz
arpl
out
pop
fildl
mov
pusha
stos
xchg
xchg
pop
or
dec
adc
aaa
js
pushf
sbb
pop
inc
or
pusha
pop
and
add
stos
xchg
xor
or
lods
out
test
mov
mov
dec
in
jmp
cmp
push
pop
jl
mov
xor
clc
ss
cmp
jne
rorl
dec
icebp
and
xchg
sahf
xchg
sbb
and
je
out
rcrl
dec
sbb
xchg
xchg
pop
mov
sahf
and
pop
mov
lcall
loope
pushf
testb
mov
jmp
mov
pop
aas
test
add
sbb
sahf
mov
lret
adc
jo
popa
push
sbb
adcb
fcompl
pop
mov
mov
ret
sbb
lea
or
gs
pop
repnz
pop
fs
mov
cmp
mov
aad
sarl
mov
sub
push
push
frstor
fisttps
test
mov
pop
popa
inc
push
push
je
xlat
out
mov
fidivrs
loopne
into
fidivl
mov
repz
call
shrb
xchg
add
lcall
icebp
bound
shl
mov
pop
jl
ret
ret
mov
mov
das
push
test
outsb
add
dec
and
orb
popf
and
xchg
xor
repz
in
and
mov
dec
repz
dec
mov
mov
ja
adc
ficoms
les
jmp
xchg
fdivs
mov
mov
das
addr16
shll
hlt
dec
stc
fldcw
imul
sub
jo
jmp
data16
sbbl
or
paddusb
mov
mov
jge
dec
pushf
scas
jp
xchg
dec
das
sbb
cwtl
dec
dec
scas
inc
xchg
pop
clc
and
aaa
lret
sub
mov
out
dec
add
aaa
xchg
mov
iret
sbb
pusha
mov
and
sub
xchg
int
jmp
dec
out
jo
push
lock
xor
jge
inc
push
rorl
jae
enter
lcall
xchg
or
pop
mov
fsub
pop
ficoml
pop
dec
mov
ret
xchg
pop
jmp
or
mov
cwtl
pop
cmp
insl
shll
add
sub
enter
cmp
dec
or
jg,pn
les
fwait
loop
mov
mov
push
das
lods
ljmp
pushf
insb
ds
jo
jbe
fcoms
scas
shlb
subl
decb
mov
xchg
add
mov
loopne
jge
in
inc
inc
push
sahf
mov
shlb
mov
xor
in
pop
mov
lods
adc
sub
cmpsl
xchg
cmp
mov
fdivs
rorl
adc
xor
insl
mov
cmp
in
add
cmp
xor
in
std
xchg
sbb
push
pop
aaa
lahf
pusha
aam
mov
adc
push
imul
pushf
outsl
pop
out
int
jp
sub
xchg
sbb
out
jge
fcompl
ljmp
data16
std
xchg
cltd
xchg
xchg
arpl
shl
into
gs
add
jmp
in
jo
loop
enter
sub
in
pusha
icebp
enter
cltd
out
test
loopne
push
xchg
outsb
subb
mov
stc
jp
into
ret
ljmp
pusha
stos
adc
pop
mov
jl
negl
aaa
dec
inc
mov
mov
pop
fdivrl
push
jb
jb
and
or
sub
daa
sub
push
out
dec
cmp
mov
push
pop
test
inc
aaa
mov
lahf
mov
xlat
adc
xor
or
dec
nop
jecxz
roll
inc
scas
cld
adc
xchg
loopne
jbe
addr16
ss
test
adc
jge
into
mov
fiadds
fcomps
ljmp
dec
loop
out
cs
mov
xchg
lods
and
and
inc
lret
mov
jae
sub
lcall
pop
data16
xchg
adc
insl
or
pop
outsl
fwait
sbb
lea
and
mov
dec
dec
stos
outsb
or
mov
inc
mov
jae
jno
or
jmp
xchg
js
test
pop
mov
jo
insl
mov
fisttpll
ret
int3
and
add
stc
push
insl
aad
cmp
iret
div
lahf
dec
outsl
sub
insb
and
arpl
ret
cmp
andl
cmp
adc
mov
ds
mov
sbb
fdivrl
mov
xrelease
inc
outsl
cs
mov
fsubrl
sub
jmp
push
shl
mov
lahf
ficomps
test
mov
xor
mov
addl
push
out
sub
xchg
push
xchg
add
jp
or
inc
cltd
xchg
es
rcrb
imul
cs
and
scas
pop
pop
das
lahf
ror
pop
push
jg
or
mov
jp
stc
and
loopne
or
xchg
outsl
ljmp
roll
push
iret
dec
mov
inc
xor
je
mov
jp
and
pushf
test
jle
setge
into
jo
jecxz
cld
call
pop
fwait
mov
test
xor
sti
or
or
jg
jecxz
pop
jbe
les
mov
shlb
in
in
pusha
orl
fildl
xlat
push
xchg
and
add
mov
jae
cld
cmpsl
cmp
lods
and
es
fnsave
jnp
mov
mov
imul
lods
in
jl
dec
ja
repz
je
xchg
or
sbb
std
aas
pop
xor
sbb
popl
mov
mov
outsl
mull
test
es
add
mov
push
daa
sbb
shl
or
rcrl
insb
sub
adc
lahf
push
ljmp
cmpsl
test
push
orb
aad
ss
shl
push
loope
je
inc
xor
dec
dec
ds
arpl
jns
loopne
daa
dec
jecxz
push
dec
arpl
incl
test
mov
aaa
into
outsl
push
pop
repz
add
cld
adc
jnp
push
pop
xor
adc
pop
shlb
stos
insb
jp
stos
sub
mov
sbb
xchg
dec
imul
jp
jno
push
sub
mov
and
jl
sbb
mov
jp
adc
mov
fs
add
into
sahf
clc
mov
std
prefetch
ja
xlat
idiv
lods
push
jge
imul
ljmp
aaa
jecxz
adc
lods
sahf
sti
je
sub
push
les
or
aaa
pop
sub
stos
mov
sbb
int3
and
pushf
nop
push
or
dec
movsl
jno
es
shlb
test
xchg
mov
xlat
dec
mov
dec
push
cwtl
jg
cs
cmp
inc
pop
xor
rcl
ret
ret
dec
lahf
and
pop
fidivl
xchg
inc
xchg
push
iret
or
push
mov
mov
notl
or
pusha
addb
mov
loopne
flds
xchg
jnp
jge
inc
cmp
loopne
adc
or
es
popf
jg
lcall
jl
test
rep
xchg
pushf
cltd
mov
cwtl
adcl
fdivr
pop
daa
jne
or
push
fcoms
in
inc
es
mov
les
push
in
cmp
push
push
lcall
xor
mov
add
and
and
std
sbb
adc
lahf
sub
jecxz
and
inc
out
xchg
sub
xchg
jmp
dec
or
iret
lea
mull
lret
cmp
decl
pop
push
aas
pop
pop
dec
push
insb
sbb
int
addb
shll
add
mov
xor
inc
xchg
push
aad
aaa
inc
repnz
cmp
orb
std
pushw
popf
lret
imul
jae
leave
cmp
bound
sbb
xchg
xor
adc
in
fisttpll
sbb
outsl
icebp
outsb
dec
cmp
mov
mov
fnstcw
out
leave
loopne
xchg
jp
adc
adc
idivb
push
add
mov
ret
xchg
pop
loop
sub
int3
mov
or
push
jmp
jb
rorl
push
add
shr
cmp
repnz
pop
out
cmp
je
add
testl
pop
aas
push
sahf
pop
or
jnp
hlt
dec
hlt
mov
call
sti
mov
imul
mov
stc
je
xor
lds
loop
mov
out
cli
dec
mov
adc
cmc
shr
jg
xor
fistpll
pop
icebp
mov
add
mov
dec
sbbb
jecxz
sbb
jbe
pop
sub
jl
stos
mov
imul
ljmp
mov
enter
dec
mov
sarl
xchg
push
fidivs
mov
sbb
push
mov
push
fwait
push
adc
stc
stos
adc
inc
xor
cmp
call
fldt
push
fstpt
xor
out
popa
inc
lcall
inc
pop
mov
add
sub
lods
fdivl
mov
pop
sub
push
pop
xor
imul
push
mov
add
sbb
pop
push
cmc
mov
cltd
inc
adc
and
mov
ficoms
mov
dec
jo
call
int
pushf
mov
dec
outsb
push
cmp
cli
idivb
aaa
push
icebp
xchg
pushf
add
cwtl
lods
xor
xor
xchg
pop
jmp
mov
push
fcoml
cmpsl
or
xor
cltd
ljmp
hlt
dec
push
mov
clc
or
adc
pushw
cmc
mov
adc
sbb
outsb
pop
mov
pusha
mov
mov
andb
stc
stos
mov
dec
daa
mov
cmpsl
insb
incl
xchg
pop
notb
daa
mov
push
add
mov
adc
jns
test
shlb
pop
fldcw
fdivrp
lahf
xchg
sub
sbb
jns
loope
mov
dec
bound
cmpsl
cltd
das
inc
mov
in
or
xor
mov
mov
cmc
xor
fs
lahf
outsb
fstp
adc
inc
inc
inc
jns
fwait
xor
outsl
sub
dec
xor
loope
xchg
loopne,pt
movsl
je
push
je
arpl
cmp
dec
sub
lock
fisubl
add
adc
nop
push
mov
lret
and
cmc
test
outsl
mov
jae
lret
test
pop
mov
xchg
pop
insb
jae
sbb
inc
pop
push
mov
lds
hlt
in
mov
mov
mov
fcoms
dec
fimuls
xchg
call
xchg
pop
pushf
cmp
jl
out
jnp
cmp
cmc
pushf
mov
inc
es
shr
test
jb
xacquire
arpl
rorl
dec
mov
push
push
or
adc
sbb
add
push
push
mov
jp
jb
xlat
pop
xchg
loopne
call
xchg
pop
adc
jecxz
rcrb
nop
dec
mov
jo
dec
das
stos
clc
outsl
mov
movsl
dec
mov
cmp
mov
mulb
xor
add
je
xchg
pushf
jbe
add
push
dec
or
mov
sbbb
jae
leave
mov
push
test
aam
lods
xchg
jp
ds
sbb
cmp
sbb
cld
and
fsubl
pop
xor
das
punpcklwd
ja
test
pop
mov
out
add
test
jg
or
push
xchg
adc
inc
sub
imul
dec
imul
xor
xor
pusha
ss
out
sbb
pop
dec
pusha
or
andb
shrb
test
xchg
lcall
and
fistps
in
jmp
push
movsb
jnp
xchg
daa
mov
pop
scas
xchg
xchg
push
jp
cli
dec
fildll
mov
data16
repnz
test
stc
iret
sti
fwait
jecxz
xchg
add
cmp
lock
add
arpl
push
fs
and
push
jmp
lods
fucomp
xchg
loopne
xor
shlb
pusha
pop
imul
fmulp
lods
jb
fcomip
gs
jne
mov
ljmp
adc
test
xchg
mov
lret
and
int
adc
dec
jge
xor
xchg
mov
ficoml
in
inc
dec
loopne
xor
cltd
inc
daa
bnd
pop
daa
or
sub
hlt
and
xor
mov
mov
mov
pop
and
sbb
xchg
insb
mov
jp
ljmp
fwait
or
and
inc
leave
dec
js
inc
pop
outsb
adc
dec
inc
nop
inc
mov
iret
xor
subb
sarl
dec
cmp
dec
jne
pop
test
push
pop
lods
stos
fs
and
orl
arpl
add
and
jne
cs
and
jg
addr16
cld
xchg
lcall
xchg
dec
scas
bound
inc
fldcw
fdivrs
test
mov
sti
adc
in
cmovno
cmpsl
pop
and
ss
faddl
movsb
sti
nop
ret
mov
bnd
sbb
adc
push
inc
loope
mov
hlt
cmpsb
mov
jecxz
xor
push
sbb
outsl
ret
bound
or
data16
mov
push
in
pusha
pop
xchg
push
xchg
mov
pop
rcrb
jmp
into
pushf
icebp
rcrb
sbb
jge
add
and
cmpsb
loope
mov
jecxz
andl
adcl
hlt
sbb
mov
dec
mov
outsl
jl
push
lret
es
fnstcw
jl
sub
fdivl
mov
cli
xchg
add
out
movsb
xchg
int
out
mov
lods
int3
pop
in
push
test
imul
xor
mov
push
addr16
xchg
xchg
sub
loop
mov
mov
push
jle
mov
out
mov
mov
rcll
pop
cmp
mov
xor
dec
push
jmp
mov
ficoms
mov
dec
inc
repnz
xchg
cld
mov
fdivl
in
and
imul
sub
dec
xchg
stos
and
sbb
cltd
test
cmp
mov
lea
xchg
mov
cmpsb
ds
sbb
lds
push
clc
fldl
shrb
sar
ret
inc
in
xchg
mov
addr16
test
scas
dec
scas
push
sbb
or
xor
xor
push
sbb
int3
test
stc
push
mov
xchg
mov
lretw
push
lcall
stos
das
pop
imul
adc
mov
xchg
cltd
je
cld
push
in
push
jmp
jecxz
sbb
jb
add
loope
aad
and
pop
xchg
loopne
ret
fildll
push
dec
movsl
lret
sub
ret
xchg
sub
in
mov
xchg
mov
inc
icebp
xchg
fisubrl
mov
pop
jnp
adc
mov
adc
inc
into
cs
pop
mov
int
add
arpl
leave
mov
dec
jl
or
fiadds
or
sub
fs
pop
lea
jne
xchg
lods
mov
les
pop
jp
pop
add
jb
push
sub
xchg
notl
shlb
cs
add
pop
cmpsb
orb
popf
in
mov
inc
fisubrs
dec
xchg
mov
lahf
daa
sub
cltd
xor
mov
push
rorl
mov
hlt
xlat
mov
dec
adc
imul
xor
scas
mov
mov
mov
pusha
aas
js
lods
push
test
mov
cmp
and
mov
cmp
shl
inc
inc
push
lret
cld
jne
inc
adc
add
mov
mov
pop
jb
test
pop
hlt
jg
inc
loope
mov
inc
fisttpll
imul
jl
mov
mov
inc
and
jns
push
test
sub
popf
inc
sbb
adcl
rol
pop
add
adc
jle
xchg
xor
push
pop
push
push
lods
or
xchg
in
pop
xchg
mov
cltd
nop
lock
dec
ljmp
icebp
mov
mov
lahf
fidivs
test
into
test
and
dec
add
insl
stos
pop
dec
movsb
stos
int3
hlt
lret
data16
add
aas
jo
push
je
inc
push
sahf
inc
insl
mov
cld
mov
fwait
mov
push
out
mov
inc
mov
mov
jle
inc
xchg
es
add
test
inc
stos
mov
les
jg
shrl
pop
dec
fidivl
repnz
pushf
mov
dec
cwtl
lods
dec
cli
inc
cltd
outsb
mov
enter
xchg
xor
and
cmpb
push
mov
into
mov
sbb
adc
mov
inc
dec
mov
mov
outsb
outsb
inc
es
mov
test
dec
and
stc
or
les
test
mov
jmp
out
addl
lock
pop
and
movsl
ss
adc
fidivl
inc
insl
cmp
insl
nop
xchg
pop
out
mov
mov
fdivl
rcrb
xchg
fsts
mov
mov
lods
jae
push
pop
cmp
pop
cmp
pusha
insl
cmp
pop
insb
arpl
dec
push
dec
sbbb
push
in
dec
mov
lea
mov
add
xchg
and
addr16
xor
je
sbb
jecxz
test
mov
mov
sub
inc
sbb
cmp
push
flds
and
xchg
test
ret
jg
mov
mulw
cs
sub
mov
loopne
stos
cmp
adcb
xchg
sbb
and
sbb
cmpsb
inc
loope
test
cmpsl
stos
inc
flds
notb
in
call
out
aas
push
push
mov
pop
loopne
and
lods
aad
cmpsb
mov
out
loopne
icebp
or
dec
in
push
call
pop
outsb
sbb
dec
xchg
ljmp
pop
xchg
fs
pop
mov
jno
mov
addl
mov
push
das
sarb
push
cld
and
or
arpl
push
jb
push
jl
xchg
cmpsb
and
dec
add
inc
mov
sarl
xor
mov
xor
pop
xchg
xchg
cmp
xor
mov
lcall
dec
add
clc
dec
or
xlat
stc
inc
sub
cmp
xor
and
scas
xlat
incl
mov
or
sahf
addl
and
xchg
fcoms
xor
enter
and
dec
mov
xor
or
cmp
cld
xchg
lahf
movsb
and
pop
decl
fst
mov
xor
inc
lock
shrl
out
add
std
outsb
jl
into
jne
or
test
and
xor
jecxz
lcall
test
in
rol
movsb
dec
andb
add
das
adc
int
das
pop
pop
inc
cld
lcall
push
loop
cmp
sbb
push
and
lock
insl
loope
bound
cmpsl
jl
cmp
rcrb
cli
cmc
hlt
inc
inc
mov
mov
adc
std
mov
dec
lret
jge
adc
push
popf
fsts
inc
sub
inc
inc
mov
mov
pop
pushf
popa
fcoms
daa
push
outsl
inc
je
xchg
xor
shrl
push
sbb
loope
inc
cmp
jp
in
cmpl
rclb
mov
ljmp
sbb
or
arpl
in
xor
fildl
push
aaa
fcmovnbe
repz
add
and
jo
lods
nop
nop
mov
jmp
pop
adc
xor
push
aaa
into
das
je
push
lods
dec
add
hlt
push
pop
cmp
sub
lock
clc
xchg
loopne
mov
mov
jmp
mov
mov
adc
popa
xor
repnz
dec
adc
cmp
jmp
mov
movb
out
pop
jmp
add
sbb
and
mov
jg
push
mov
mov
iret
cmpsb
fadds
pop
in
mov
or
shll
into
pusha
push
mov
mov
inc
adc
add
or
jg
test
jmp
sbb
and
and
daa
mov
dec
push
hlt
sbb
xor
test
or
jmp
push
jb
cmc
mov
mov
mov
data16
cmp
xchg
iret
das
decl
ss
sbb
mov
stos
and
pop
std
jne
inc
mov
jno
cmp
jg
xor
jnp
repz
inc
and
jno
mov
fmulp
jg
jl
mov
mov
clc
or
push
pop
xchg
mov
jbe
into
cmpsl
pop
cmp
sahf
enter
jle
add
imul
and
mov
gs
ljmp
rclb
jl
inc
mov
mov
aaa
xor
xor
cltd
pop
lret
leave
jns
insb
sbb
sbb
rolb
adc
addr16
sub
pop
incb
sbb
sbb
aas
dec
loopne
daa
dec
out
lret
mov
fdivp
xchg
ja
mov
sti
or
ja
inc
dec
popf
fsubl
nop
xor
xor
xchg
fbld
ja
adc
pop
enter
sbb
sbb
ljmp
sbb
inc
rcl
dec
and
cwtl
rcll
mov
cld
popf
popf
mov
and
les
sub
aas
fldt
xchg
mov
and
out
ret
dec
test
xchg
cmp
sub
jo
push
fmull
int
adc
xor
jmp
or
std
xchg
xchg
movsb
jle
mov
leave
and
aam
mov
bndstx
cs
outsl
sub
xor
loopne
mov
imul
adc
aam
or
add
sbb
push
jo
dec
mov
jno
xor
jnp
mov
xchg
adc
out
gs
icebp
xchg
clc
outsb
inc
aad
xor
jne
mov
into
fdivl
jo
mov
pop
lods
mov
enter
cwtl
lahf
push
out
jp
es
ljmp
lods
sub
aad
inc
lods
mov
pop
mov
lcall
in
clc
int
adc
ud2
inc
ficoms
imul
pop
xchg
shlb
arpl
inc
in
jne
out
les
jl
xchg
xor
push
jb
shrl
popa
jns
jecxz
lcall
and
jp
xchg
les
outsb
mov
fdivrp
and
lock
mov
push
mov
jge
push
xlat
int3
clc
and
push
pop
add
fimull
jnp
pop
outsb
mov
mov
mov
cmp
push
insb
fsubl
stos
repz
mov
in
icebp
bound
mov
xchg
std
xor
adc
inc
jecxz
outsb
jbe
pop
fcomip
xchg
push
xchg
inc
adc
orl
add
ror
stos
lds
sub
xor
xchg
test
jg
pop
jae
aaa
cld
add
add
jp
mov
outsl
mov
push
popf
push
pop
sub
or
jle
aam
incl
das
out
clc
arpl
ds
icebp
cwtl
fs
or
xchg
sbb
mov
and
or
push
mov
pushf
test
jecxz
cwtl
or
lahf
pushl
xor
cs
inc
arpl
lahf
mov
add
fbstp
lcall
out
push
lret
push
sub
pop
and
pop
push
pop
imul
mov
test
test
jmp
ljmp
push
pop
sub
repnz
cli
lret
aas
xchg
mov
out
mov
repz
cmp
imul
pop
insb
fsubl
add
fildl
xor
cs
jge
loop
cmp
cmp
add
subb
ljmp
jge
add
int
imul
orl
call
stc
ja
rclb
cs
inc
pop
stc
jnp
stos
jns
push
push
dec
stos
push
pushf
cmp
fsubl
cmp
mov
mov
jecxz
mov
cmp
add
mov
jg
call
sbbl
add
out
ret
or
out
loope
xchg
and
dec
pop
add
in
mov
iret
jns
jl,pn
cmp
pop
mov
in
loop
icebp
enter
and
pop
mov
shl
sti
ja,pt
mov
fsts
push
aaa
insb
jge
sahf
push
fsubl
test
and
push
adc
popa
ret
pop
iret
mov
sbb
ljmp
add
shrl
adc
scas
xchg
sbb
sbbb
cmp
push
popa
sbb
and
clc
test
mov
out
loop
mov
sbb
pop
icebp
mov
pop
popa
mov
test
ja
shlb
xchg
dec
sub
mov
aam
mov
fildll
and
addb
nop
mov
pop
sbb
mov
fildll
les
sbb
xchg
mov
jl
dec
insb
shl
mov
inc
dec
nop
xchg
dec
mov
iret
push
inc
in
push
jl
jae
cmc
xor
pushf
dec
cmp
mov
loop
jmp
jno
mov
jbe
mov
jp
mov
enter
mov
lods
aaa
pusha
pop
pop
repz
ret
icebp
cmp
sub
dec
rol
dec
mov
sbb
and
inc
insb
add
xchg
in
sub
xchg
mov
ret
xchg
lods
adcl
or
fdivl
cli
ja
cltd
pop
cli
gs
pop
mov
mov
pop
and
ds
jl
jns
test
pop
mov
das
cmp
xor
test
sbb
sbb
fiadds
adc
int3
add
andb
pusha
clc
jne
mov
adc
xchg
add
das
mov
xchg
sub
lea
test
outsb
shrl
aas
sbb
lock
or
xor
outsb
xlat
fistl
test
jne
sbb
arpl
dec
mov
xchg
cmp
mov
jp
fcomps
adc
dec
cmc
pop
cmp
mov
ljmp
outsl
aaa
xor
aam
es
scas
testb
jns
pop
in
stos
dec
les
cmpb
insl
cs
leave
push
inc
pop
inc
jg
mov
sbb
fldenv
sti
in
enter
das
ret
in
mov
mov
push
scas
movsb
xchg
adc
sbb
pusha
jno
or
inc
arpl
mov
pop
xchg
aaa
push
ret
cmpsl
push
push
push
xor
mov
lcall
int
jmp
xchg
cli
pusha
jp
add
bound
stos
in
loopne
out
push
fiaddl
inc
loopne
mov
ja
dec
gs
rclb
fdivrl
jg
imul
iret
fwait
pop
inc
inc
leave
leave
es
adc
push
lea
mov
fwait
mov
push
push
scas
scas
testb
in
and
pop
dec
pop
imul
jbe
pushf
addr16
lret
xchg
out
and
repnz
xchg
testb
icebp
jnp
fs
addr16
pop
int
loopne
xor
stos
jb
dec
mov
adc
inc
xor
nop
out
sub
roll
pop
mov
jmp
repz
jns
outsb
in
jo
push
sub
dec
rcr
or
or
mov
xchg
sub
mov
dec
loope
xchg
jne
inc
ret
gs
stc
xor
push
data16
mov
das
fnstsw
test
data16
xchg
dec
pop
cli
xchg
int
leave
pusha
cmp
js
int
xchg
icebp
push
in
jmp
incb
repz
sub
movsb
shlb
sbb
or
insl
dec
xor
repnz
hlt
mov
test
test
stc
dec
sahf
push
inc
insb
jns
lds
enter
insl
sbb
mov
mov
mov
xchg
push
and
icebp
jp
push
cmp
stos
ret
xor
addl
adc
int3
cmp
pop
jb
sbb
push
cmp
jo
dec
adcb
xorb
pop
push
inc
xchg
adc
aam
push
push
dec
xchg
cmp
xchg
sub
andl
fiadds
cmp
pop
dec
push
and
cmp
jg
adcb
mov
cld
lcall
add
jge
and
ja
andb
movsl
insl
jb
mov
fst
pop
cmp
mov
pop
sub
xchg
sbb
xor
mov
inc
cmp
jmp
ljmp
dec
inc
ljmp
repz
ljmp
sbb
add
pop
cmp
add
jne
jo
sub
sub
jle
xor
add
mov
mov
cmpsl
or
pop
mov
xor
aaa
mov
sbb
mov
jne
lds
leave
shl
ret
xchg
mov
test
sbb
or
push
and
push
mov
fidivs
aam
repz
fidivrs
ror
test
jbe
add
dec
out
xchg
fimull
sarb
cmpsl
jecxz
add
adc
xchg
bound
push
aas
dec
popa
cmpl
pop
in
or
in
xor
test
and
and
jb
aaa
in
ss
sahf
insb
test
sbb
push
adc
xchg
mov
nop
dec
mov
add
lret
test
cmp
sub
fnstcw
add
rolb
divl
arpl
iret
lahf
sub
data16
out
dec
and
rcll
push
pusha
push
inc
shll
push
daa
sti
jns
mov
mov
scas
in
ret
sbb
mov
mov
adc
repz
call
and
sub
dec
outsl
jnp
lret
fucomip
and
jns
inc
das
icebp
ja
add
mov
pushf
xor
or
imul
imul
push
push
int
es
dec
xor
mov
push
sti
fwait
mov
dec
cld
mov
mov
pop
add
rol
jecxz
inc
pop
outsl
push
ss
arpl
mov
jge
sahf
scas
jne
inc
mov
rorl
add
test
mov
sbb
adc
and
addr16
call
out
cmpb
dec
lahf
testl
inc
xchg
mov
stc
in
fcompl
and
fnstsw
xlat
mov
cmp
jo
and
jno
enter
idiv
aas
dec
cs
pop
sbb
add
sbb
jbe
out
out
mov
dec
jle
and
mov
ret
lods
inc
stc
inc
mov
loopne
lret
fadds
jbe
aas
andl
fcomps
mov
std
xchg
leave
std
cld
rcrb
lods
movsb
cmp
cmp
out
ret
fstpt
add
repnz
mov
lds
pushl
fiaddl
outsb
lds
adc
les
repz
mov
add
sub
xchg
addr16
lret
adc
xchg
hlt
sbb
add
or
ljmp
mov
fwait
dec
xor
fs
stos
cmp
dec
dec
sub
inc
adc
xchg
or
stos
sbb
push
push
inc
add
cli
hlt
mov
mov
fidivrl
xorb
mov
insl
sbb
dec
roll
push
daa
dec
mov
lods
mov
rcrl
push
jecxz
pop
aad
std
inc
stos
notb
or
mov
lds
sbb
pop
es
mov
xor
adc
ss
mov
gs
push
push
inc
cmp
in
dec
mov
sahf
xor
cmpsb
jns
sub
pop
dec
mov
int
mov
addr16
lcall
adc
out
xor
jns
xor
jmp
out
cwtl
sti
call
add
sub
push
cmp
or
push
push
lret
int3
call
aam
daa
mov
or
jb
cmp
lods
jo
and
faddl
cmpsl
fs
cmp
popf
in
pop
repnz
xor
xchg
cmpsl
jns
adc
xchg
pop
jno
and
fisubrs
adc
in
dec
pop
jmp
gs
nop
sbb
and
dec
or
pop
mov
pop
mov
xchg
js
scas
fildl
lods
negl
mov
lret
pop
xchg
adc
cmpsl
gs
adc
cld
inc
stos
pop
dec
pop
xchg
inc
sbbb
int3
xchg
dec
xchg
cmpsl
out
xchg
adc
cli
adc
sarb
icebp
sarb
sbb
sarl
sbb
loopne
mov
in
in
adc
mov
or
sbbl
sbb
adc
repz
ss
sbb
loope
mov
call
mov
scas
jg
or
out
sub
jo
inc
xchg
inc
mov
scas
sahf
in
sbb
sub
pop
popf
xchg
mov
and
jmp
mov
in
xor
repz
bound
movsb
sti
and
adc
mov
test
jmp
imul
xchg
push
mov
lock
mov
shlb
sbb
scas
inc
stc
cmp
mov
sub
xor
in
jg
jecxz
cmp
jp
cmp
push
cmc
loope
sbb
mov
push
xor
pop
jb
inc
stos
ds
jmp
jge,pn
lret
insl
mov
fs
movsl
fsts
repz
mov
xor
outsb
ds
jmp
cmp
stos
rcl
ret
popa
in
shlb
pop
cmp
insl
dec
xorb
push
mov
push
leave
adc
or
cmpl
nop
jge
pop
add
js
pushf
add
add
into
idivl
sub
movsl
push
push
inc
aaa
mov
addb
std
xor
sub
ja
cmove
lods
addr16
pushf
data16
push
mov
dec
cmpsb
inc
or
fdivrs
daa
cmp
sub
fidivl
mov
adc
arpl
inc
dec
dec
out
push
std
xchg
insb
or
cld
cltd
xchg
and
push
mov
xchg
in
addl
loope
fistpl
or
jmp
add
ljmp
lea
loop
iret
int3
lahf
or
mov
loop
dec
pop
and
jl
sub
sbb
or
mov
add
jp
add
jnp
sbbb
into
xlat
imul
push
leave
xchg
cwtl
bnd
jecxz
out
stos
add
push
scas
xor
inc
dec
aam
andb
dec
pop
mov
or
pusha
decl
xor
divl
lea
jge
cltd
cltd
sbb
cmp
adc
mov
popa
dec
fiaddl
sbbl
inc
xchg
ret
or
stc
cmc
loope
mov
push
lret
jge
roll
jmp
mov
aad
add
dec
mov
inc
dec
jnp
shlb
mov
cmp
ret
cmpsl
cltd
test
add
pusha
pop
repnz
imul
fcom
stos
cmc
mov
je
jae
xor
popf
nop
andb
insl
insl
fidivrs
pop
push
and
fisubrl
pop
test
jno
shrl
add
mov
fucomi
xor
ret
out
push
sbb
and
mov
ja
xchg
ljmp
into
cmp
inc
or
jne
lock
pop
mov
push
imul
int3
xor
cmp
subl
dec
or
out
out
decb
popf
in
cs
push
jb
sbb
adc
lret
pop
insb
xor
out
pop
shr
inc
mov
mov
pop
cmc
int3
fmuls
jle
or
daa
push
cmc
ss
dec
movsb
js
adc
rcr
cmc
leave
int
add
mov
cmc
add
out
sbb
jp
sub
xor
dec
and
adc
push
jb,pn
iret
add
inc
pop
cmpsb
popa
pop
insb
xchg
inc
mov
stc
insb
sub
rorl
xor
adc
push
jecxz
fs
push
mov
xchg
outsb
inc
enter
fisubs
mov
sbb
inc
adc
add
mov
dec
pushf
or
and
jbe
adc
in
push
adc
mov
xchg
mov
push
push
or
jle
sarb
insb
scas
and
cmp
out
popa
loop
movsb
ja
dec
jecxz
scas
jge
and
pop
lcall
mov
add
dec
call
push
cmp
test
lcall
arpl
shll
stc
xchg
mov
sub
mov
adc
cmp
jo
add
jbe
push
push
shlb
xchg
xchg
mov
adc
or
arpl
push
leave
mov
adc
cli
cmp
jbe
or
jp
in
mov
jne
sub
out
add
xchg
test
lods
fs
jno
xor
mov
inc
aaa
insl
add
cmpsl
jbe
jl
fdiv
xor
ret
ret
mov
xchg
xchg
rolb
sub
ret
gs
scas
lret
pop
outsb
jl
loopne
dec
xor
shrb
loopne
dec
mov
or
outsb
pop
iret
movsb
cmp
loop
cmp
ret
pop
inc
fdivs
test
scas
dec
sbb
shll
or
push
mov
test
stos
xor
xor
ss
stos
in
call
cmpsb
jb
sub
movsb
out
aad
pop
ds
dec
pop
stos
jle
int
push
fwait
fs
and
jp
xor
mov
xor
pushf
aad
mov
clc
push
call
pop
pushf
lea
cli
adc
int3
add
cmp
imul
fisubs
pop
mov
jmp
mov
jo
aad
hlt
mov
pop
dec
in
aad
bound
dec
clc
fisubl
mov
loop
daa
sbb
dec
cmp
ret
cmc
inc
sbb
jl
lahf
push
test
mov
jb
jno
cmp
pushf
cs
lods
pop
mov
pop
push
ss
loopne
inc
negl
outsb
xchg
pop
arpl
imul
aaa
insb
xchg
or
and
insb
rorl
ret
adc
jge
xor
sub
lds
mov
jns
fisubs
scas
sbb
add
or
sub
nop
fcmovnbe
cmc
sbb
notb
mov
nop
daa
jle
and
mov
scas
add
ret
test
cmpl
adc
cmp
or
xchg
inc
mov
or
imul
push
pusha
mov
aad
negl
lock
cmc
testl
cltd
in
cmp
fldcw
mov
arpl
mov
add
scas
lea
test
rcl
cld
lcall
jne
inc
rcl
aad
xor
fucomp
lods
cli
or
sbb
test
cmc
mov
cmp
mov
fyl2xp1
call
pandn
adc
test
fwait
xor
cmp
popa
pop
mov
mov
jle
hlt
popf
mov
das
ficoml
mov
in
sbb
test
dec
pusha
je
or
sub
cmpsb
dec
push
jp
dec
pop
pushf
aad
movsl
inc
shr
jno
fucomi
jae
mov
rclb
dec
pop
adc
mov
outsl
clc
call
mov
sbb
mov
xor
int
fidivrs
mov
inc
sbb
xor
cltd
mov
dec
fiaddl
dec
enter
fidivs
fcoml
cmpsl
iret
popa
and
shrb
mov
push
pop
mov
xchg
pop
mov
sbb
test
popa
cmp
sbb
push
jg
test
push
sbb
or
loope
xor
stos
mov
mov
lock
ret
mov
stos
ja
pop
pop
mov
xor
pop
ret
mov
mov
inc
pushl
shl
lock
decl
add
lcall
movsl
mov
and
jb
push
jmp
pop
loope
mov
sar
or
daa
cmp
shll
inc
gs
data16
adcl
mov
jne
test
inc
pusha
hlt
sub
adc
sub
jg
daa
xchg
imul
mov
cmp
movsl
into
gs
imul
xor
add
inc
popf
cs
dec
mov
xchg
inc
jmp
sub
ret
test
in
jl
sub
xlat
icebp
jbe
xchg
sub
je
sub
scas
cld
pop
mov
pop
in
subb
inc
xorb
mov
mov
cmc
rcll
fisttpl
rorl
mov
xor
jge
jle
icebp
dec
stc
nop
inc
add
imul
outsb
dec
add
mov
dec
aas
adc
jl
daa
jbe
xor
xchg
fldcw
mov
jb
adc
mov
mov
mov
call
xchg
mov
push
and
stos
test
adc
xlat
out
mov
addr16
popf
enter
fcmove
je
pop
repnz
xchg
add
into
std
xchg
icebp
test
cmp
push
inc
mov
addb
push
and
mov
pop
stos
jecxz
add
lds
andb
lret
test
mov
or
sbb
jbe
sbb
inc
jnp
insb
lret
in
push
in
ror
jp
pop
mov
xchg
pop
adc
add
lods
sub
sub
jmp
mov
push
mov
sbb
lds
or
ds
pop
cmp
nop
ds
enter
daa
ljmp
fisubrl
adc
pop
push
movb
in
js
push
sahf
xor
cli
pop
or
mov
lcall
pop
mov
push
mov
ljmp
int
fs
loop
in
sbbl
cmc
add
cmpsb
jmp
pop
xlat
dec
cmp
jnp
jo
shll
les
test
xor
jle
cmpsl
fcoms
icebp
insb
and
jmp
pop
xor
xchg
cmp
jle
imul
fcoms
mov
sbb
fisubrl
or
sub
jnp
inc
in
and
cmp
mov
repz
movsl
add
int
out
add
ret
xor
lods
xchg
cmp
mov
out
out
sub
mov
or
dec
ja
jle
out
push
or
xorl
loop
in
icebp
sub
rcll
cmp
mov
f2xm1
adc
adc
xlat
push
pop
mov
movsl
mov
xlat
mov
xor
movsb
lret
sub
bound
or
push
jecxz
pusha
push
mov
fldcw
bound
stos
test
jae
out
mov
or
int3
arpl
xor
cmp
lods
fiadds
sbb
jp
jnp
mov
inc
pop
movsb
inc
sahf
xchg
xchg
out
test
add
fnstenv
cmpsb
dec
push
mov
lahf
lock
aam
add
dec
in
and
inc
dec
pushf
mov
lret
cmp
push
push
imul
pop
icebp
nop
rcrb
out
mov
inc
jb
pop
add
jl
sahf
push
dec
sbb
jnp
mov
cmp
cmp
jno
or
push
dec
inc
loopne
and
fidivs
or
push
inc
pushf
inc
xchg
and
pushf
xor
insb
fidivl
imul
jb
adc
cmp
nop
jnp
adc
fwait
dec
and
test
push
xchg
sbb
pop
cmp
push
xchg
dec
xor
repz
and
xor
and
bound
sbb
je
aas
mov
dec
jb
orl
addb
sbb
clc
mov
mov
pop
gs
into
jnp
bound
push
data16
cmp
push
arpl
push
imul
mov
das
inc
gs
pop
mov
xchg
push
dec
popa
mul
scas
add
sahf
jle
ss
lret
adc
divl
aaa
les
xchg
mov
cmp
movsl
dec
loop
cwtl
pop
push
lret
add
mov
inc
dec
mov
sub
jns
scas
test
insl
or
pop
daa
push
arpl
test
insl
jno
popa
dec
call
rcrb
mov
pushf
lods
push
add
ss
mov
inc
mov
xchg
jnp
ret
rclb
pop
popf
aam
inc
adc
movsl
imul
out
les
cmc
or
mov
iret
imul
xlat
js
mov
ffreep
pop
xor
push
pushf
xor
aas
mov
int3
rolw
sbb
push
fisubrl
sub
dec
inc
mov
inc
sar
stos
enter
popf
ja
movsb
ret
xchg
pop
cmpsl
leave
and
xor
push
insl
push
stos
imull
enter
repz
sub
iret
lret
dec
and
mov
dec
sbb
adc
mov
iret
jg
push
data16
xchg
xor
or
inc
push
hlt
mov
adc
sbb
xchg
mov
ss
sbb
inc
mov
aam
cmp
inc
pop
sub
sub
imulb
test
mov
adc
addl
clc
xlat
cltd
inc
or
xchg
pop
dec
js
in
pop
les
or
cmp
xchg
loope
pusha
and
ret
or
mov
push
mov
dec
xorl
xlat
dec
mov
jl
xchg
aam
dec
rorb
jns,pn
push
cmp
or
xchg
mov
pop
outsb
adc
and
dec
sarb
xchg
fs
pop
les
and
mov
add
cwtl
loope,pn
mov
ds
nop
insb
or
ss
push
push
inc
or
out
jbe
clc
jp
stos
cmpsl
xchg
dec
mov
out
jnp
dec
lods
popa
insl
sub
or
inc
pusha
xchg
dec
sahf
jno
in
into
ds
aad
mov
in
jb
mov
mov
mov
test
jb
lea
fists
dec
mov
shll
or
and
mov
inc
iret
jb
xchg
xchg
pop
or
fnstenv
inc
sub
mov
cli
or
xchg
push
xchg
and
or
and
mov
repz
mov
in
inc
aam
xchg
add
xlat
mov
sbb
int
push
sub
dec
js
orl
lods
das
jg
mov
mov
jae
into
mov
jl
push
fcomip
dec
ficoml
sub
ror
and
mov
in
mov
inc
in
xchg
push
mov
cmpsl
hlt
rorb
mov
std
adc
movsl
into
subl
fwait
in
push
adc
addr16
pusha
cli
pushf
shlb
add
mov
dec
ret
xchg
pop
insl
sarl
or
push
fwait
mov
push
movsb
es
sbb
xor
mov
out
imul
enter
mov
dec
stc
jge
je
daa
aaa
call
push
dec
ljmp
mov
divb
sbb
in
push
or
sbb
cmp
xchg
jns
lret
mov
stc
inc
loop
sub
ljmp
cli
mov
xorl
or
pusha
jecxz
shlb
ljmp
leave
je
sub
dec
xchg
sbb
iret
negb
cld
inc
xor
jne
inc
out
and
imul
mov
es
jmp
xor
push
xchg
sbb
je
cmp
imul
loop
and
and
adc
imul
push
xor
fwait
mov
cmp
mov
inc
pop
push
aam
roll
or
sbb
aad
fistps
dec
mov
sbb
in
and
iret
rcrb
inc
add
xchg
xor
aas
sbbl
shll
jmp
push
adc
lcall
jbe
pop
mov
jbe
js
out
stos
cmp
push
std
fnsave
push
test
xor
imul
insb
cmp
cmp
mov
bound
jne
cmp
dec
out
mov
fimull
arpl
popf
int
mov
jl
sub
mov
pop
push
js
loope
push
repz
and
push
lcall
in
dec
inc
rorl
sbb
push
jno
jb
push
outsb
test
addl
rclb
insl
adc
xchg
inc
jmp
mov
pop
fsubrs
popa
jnp
mov
inc
or
and
cld
outsl
xor
rcll
add
mov
pop
out
imul
mov
mov
out
std
pop
sbb
enter
and
call
shl
mov
aam
stc
clc
and
orb
mov
shrb
js
sub
out
jae
pop
test
jae
dec
pusha
rcrl
or
ret
fwait
ds
dec
loopne
ret
imul
iret
xor
add
bound
into
data16
lret
jle
adc
sti
pushf
ret
xchg
js
cmp
sbb
add
pop
xor
inc
outsl
adc
pop
ds
mov
pop
pushf
or
cmc
mov
lds
outsl
push
and
ret
push
notl
cmp
pop
hlt
out
aam
ret
sbb
ret
pop
xor
shll
push
imul
fcmovb
xor
add
xorl
and
lods
dec
lea
orb
int
repz
dec
mov
sbb
cmp
arpl
push
xchg
push
scas
les
push
out
pushf
dec
mov
inc
int
cmc
fcmovne
int
xlat
cwtl
mov
or
addr16
adc
mov
add
or
mov
push
fcoml
pop
jb
mov
js
mov
push
mov
add
and
fiaddl
stos
andb
and
cs
sahf
mov
jae
int3
dec
pop
cmc
jg
roll
add
sbb
mov
add
daa
mov
mov
sbb
es
or
fwait
xor
mov
out
pshufd
push
gs
xchg
xchg
or
in
mov
dec
add
jg
jb
sbb
stos
sbb
adc
push
pop
xor
movsl
imul
icebp
lcall
fisttpl
pop
scas
sub
addr16
add
cmp
mov
cmp
scas
fnsave
dec
pop
ror
mov
pusha
sbb
pop
popa
mov
clc
jg
ljmp
into
cmpsl
aad
cmp
pop
cli
cmp
out
mov
int
aaa
repnz
arpl
mov
pop
das
mov
cmp
add
js
jecxz
ret
and
dec
sti
pop
dec
add
sbb
jb
sbb
xlat
lahf
xor
test
xchg
cmpsl
arpl
loope
push
inc
xor
adc
adc
sub
lods
sti
es
inc
ljmp
call
jno
fildl
cltd
or
lods
pop
call
mov
mov
shrl
hlt
cmp
push
inc
or
mov
inc
lods
shrl
stos
mov
mov
fsubrl
mov
pop
push
in
mov
add
mov
mov
xor
and
xchg
and
ficoms
inc
xor
inc
mov
add
jg
in
fwait
cmpsl
sbb
inc
imul
inc
sbb
enter
js
je
dec
pushf
scas
dec
js
pop
out
leave
xor
call
out
test
mov
loope
xchg
cmp
push
in
je
cmp
push
les
stos
aam
sub
les
test
decb
cmc
daa
sbb
fcomp
mov
push
ret
idiv
testw
in
fwait
adc
loope
sub
test
cld
push
nop
xor
mov
out
imul
in
xor
ret
ja
mov
cmp
xchg
sub
pop
xchg
pop
and
sahf
or
cmpsb
ja
scas
faddl
mov
inc
out
data16
xor
test
mov
mov
shlb
stos
or
aam
and
mov
jecxz
inc
dec
jmp
mov
fdivs
das
push
stc
stos
inc
sub
je
push
add
xor
fists
daa
mov
aaa
leave
sbbb
push
in
rclb
cmp
cli
jmp
dec
cmp
dec
fistpl
aas
hlt
sub
push
sbb
xlat
add
lods
cltd
test
std
mov
mov
cmp
rcrb
add
sbb
loopne
js
dec
add
or
mov
daa
in
in
push
test
gs
inc
in
test
jnp
lods
sbb
inc
dec
enter
xchg
insl
mov
out
xor
cmp
jmp
cmpsl
nop
xlat
jno
fildl
xor
lds
xchg
xchg
cmp
pop
imul
mov
jl
repz
xchg
lock
fdivrl
jae
lds
lahf
jle
xchg
adc
imul
cmpb
pop
leave
and
sbb
std
jnp
xchg
loopne
jl
mov
pusha
or
aam
lds
stos
push
cmpsb
rcr
arpl
mov
bound
and
in
pop
xchg
sub
mov
mov
int
push
add
test
sbb
lret
testb
cmp
add
fildl
jb
mov
xchg
in
ljmp
cmpsb
sub
stos
shll
loope
xor
fdivs
xor
fbstp
add
or
inc
adc
dec
mov
push
mov
lods
cmp
or
xchg
lods
cmp
push
hlt
pop
outsb
insl
xor
aam
xchg
addr16
or
jnp
jl
sbb
pop
daa
sahf
scas
or
lds
mov
mov
sti
mov
mov
pop
loopne
imul
aaa
scas
movsb
inc
sub
mulw
push
in
push
add
out
fcmovnu
jae
mov
jbe,pn
xor
inc
mov
add
mov
dec
inc
lret
cmp
rcrb
inc
mov
in
cmpsl
sahf
xchg
jb
add
xor
pop
out
subl
outsb
lods
mov
and
repz
inc
dec
mov
movsb
push
adc
or
cmp
xor
pop
shlb
lcall
push
daa
leave
and
jae
rcrl
push
xchg
jae
fbld
cmp
cld
cmp
mov
pop
xchg
xchg
test
xchg
dec
lock
loope
shrb
ja
call
adcl
imul
sub
cmp
jae
jmp
out
and
ljmp
pop
inc
lret
shrb
cld
jl
inc
popf
stos
pop
xor
jne
imul
xchg
cmp
gs
call
inc
push
mov
inc
sahf
loop
dec
ds
cs
lods
xchg
fsubrs
dec
lods
inc
push
ss
les
dec
adc
pop
in
xorl
mov
jmp
or
aam
popa
pop
adc
popa
and
int3
push
jns
ret
jo
or
shl
fucomip
jo
lret
jp
fs
test
lods
repz
add
jmp
add
or
jle
jp
inc
mov
bound
mov
push
outsb
adc
xchg
sub
sbb
fsubrs
je
es
out
notb
cmc
mov
dec
adc
sbb
inc
divl
int
iret
pop
movsb
add
sbb
loop
xchg
mov
dec
out
pop
repz
ja
jb
jp
out
xchg
jle
pop
jns
push
adc
add
dec
adc
jbe
push
cmp
xlat
ljmp
jecxz
mov
out
adc
dec
ds
cmp
shlb
movsl
rcrb
adc
lods
push
mov
mov
xchg
decl
cmp
fs
pop
mov
jb
sbb
push
cmp
jmp
sbb
leave
mov
paddsb
out
mov
bound
lahf
sub
mov
lea
mov
pop
mov
ret
inc
push
in
xchg
push
or
aaa
mov
sbb
icebp
loop
mov
adc
data16
loop
pushf
icebp
aam
dec
popf
push
test
clc
mov
int3
xor
add
test
inc
fiadds
fisubs
add
aam
imul
in
pop
fsubr
orl
mov
loop
xchg
mov
jae
outsb
xor
out
dec
xor
jne,pt
or
xchg
mov
sub
enter
xor
xor
testb
loope
sub
cltd
add
xchg
jmp
mov
and
into
jnp
adc
or
mov
mov
inc
push
mov
int
xchg
fdiv
jo
ja
pop
dec
mov
pop
cmp
and
dec
push
incl
xchg
loopne
aam
or
cmp
lcall
dec
xchg
add
lock
or
xchg
and
dec
imul
lds
xchg
movsb
repz
push
stc
nop
adcb
sub
movsl
ljmp
call
adc
push
cmpsl
call
cmp
lret
mov
mov
in
mov
inc
das
addr16
push
pop
and
jo
stos
shlb
loopne
loope
hlt
adc
jle
push
push
dec
or
inc
fcomps
push
loopne
or
push
out
stos
jecxz
icebp
adc
xor
inc
je
repnz
sub
mov
lods
dec
jg
push
aad
and
push
pop
jmp
test
push
sub
out
pop
mov
mov
adc
fs
xor
adc
mov
fstpl
pushf
fstpt
scas
xchg
jnp
xchg
sarb
inc
adc
hlt
inc
in
push
shll
lcall
cwtl
push
jg
adc
aaa
clc
repz
hlt
mov
dec
or
sti
loopne
loope
sub
popa
stos
cmp
outsl
push
xchg
push
test
mov
gs
xor
aad
adc
subb
mov
sbb
adc
add
rcrb
inc
call
orps
gs
cmp
mov
stos
push
in
or
jge
xchg
sbb
pop
mov
sbb
decl
dec
adc
inc
orl
xor
cmpb
jmp
jmp
mov
sub
jl
rclb
push
and
push
fsubrp
xlat
push
pop
dec
iret
jge
aad
push
in
cmpsl
sbb
jns
mov
enter
xchg
out
iret
in
mov
mov
dec
mov
sarb
cmpsb
cwtl
or
es
inc
fists
into
fidivrl
adc
jno
pushf
dec
lea
jo
dec
and
je
shlb
xchg
shrb
inc
aad
insl
sar
jmp
call
test
insl
dec
or
insl
add
aam
lods
mov
mov
std
adc
adc
mov
cmc
or
orl
jp
mov
nop
pop
push
rcll
sbb
and
or
stos
pushl
add
pop
leave
mov
xchg
push
incl
jmp
int3
imul
fstpl
iret
addr16
sbb
out
fimull
cmc
leave
cmpb
in
cld
sbb
dec
jae
mov
sbb
in
pop
hlt
lret
xchg
sub
mov
sbb
jo
cmp
add
imul
das
clc
xor
and
inc
jne
inc
pop
mov
cmp
aad
xor
sbbl
fcomip
in
add
ss
sahf
fsubr
mov
mov
movsl
dec
or
jnp
lahf
divl
lret
aas
lahf
ds
sbb
add
jecxz
vmovq
jae
cmp
stos
cmp
xchg
dec
dec
adc
nop
mov
push
or
iret
rorl
insl
loope
std
add
shrl
ret
fs
mov
push
daa
imulb
scas
jo
mov
inc
xor
xor
dec
dec
leave
jg
cmp
cmpsb
cmp
pop
cli
aas
outsb
addr16
add
das
pop
cmpsb
in
adc
dec
add
add
loope
fs
xor
in
xchg
mov
cmp
pop
dec
dec
xor
cmp
dec
jmp
addr16
fdivs
test
xlat
iret
aas
aam
clc
sbb
subl
inc
aad
cwtl
xor
push
mov
mov
cmp
push
imul
pop
fisubrl
mov
dec
push
sbb
outsl
jno
in
mov
in
push
adc
out
cmp
push
call
mov
jle
in
ja
mov
rol
jnp
mov
outsl
scas
aam
ja
mov
xor
dec
jecxz
push
mov
scas
xlat
leave
insb
pop
incb
lock
ja
cmp
xchg
in
xor
in
sbb
les
push
dec
loope
fadd
out
int
insb
adc
arpl
and
rcr
insb
mov
cwtl
xchg
xor
lea
cmpsl
mov
test
mov
and
pushf
leave
pop
nop
loope
push
pushf
in
and
jbe
movsl
cs
jecxz
xchg
jno
push
pop
clc
bound
mov
cmp
jne
mov
sub
repz
popa
and
dec
sub
cmp
cltd
push
cltd
and
shrl
jo
test
scas
subb
and
adc
push
fdivl
into
xchg
push
pop
push
inc
aam
push
adc
inc
inc
in
fwait
jb
clc
int
insb
dec
mov
ds
xorl
push
and
dec
mov
or
xchg
mov
popf
cli
push
arpl
aam
movhps
sti
xchg
inc
fldl
pop
sti
movsb
cwtl
sub
and
mov
into
sub
adc
sbb
jbe
cltd
les
xor
rcrl
xor
sbb
fisubl
push
sbb
aam
mov
aad
jge
lcall
and
mov
aas
into
mov
inc
push
or
push
sub
adc
inc
xchg
xor
daa
in
in
xor
push
mov
or
cmp
iret
repz
stos
push
or
das
lret
aad
lods
push
dec
call
cld
sub
cmp
stos
sub
adc
or
adc
mov
dec
mov
aad
aam
sub
sub
push
cmp
fidivs
pop
pop
fadds
test
lahf
rcrl
in
pop
fs
movsb
and
pop
push
pop
fistpl
aaa
fldenvs
dec
hlt
xor
or
lods
xchg
xlat
repz
les
inc
sbb
popf
lock
lcall
ja
arpl
pusha
mov
mov
lahf
repz
mov
test
shl
sbb
mov
mov
addl
mov
mov
repz
sbb
cmc
xor
mov
subl
pusha
sti
and
ret
push
mov
push
jae
andl
adc
jnp
and
scas
xchg
scas
xchg
out
inc
dec
lahf
xor
es
pop
lret
cmp
ds
lods
xor
sbb
fcompl
sub
or
and
push
aad
pop
stos
push
inc
push
out
ficoml
cltd
lods
sub
sbb
ret
cmp
stc
sarb
push
cmp
subl
cmovne
dec
mov
inc
xor
inc
fcompl
int3
lret
lock
sub
adc
aaa
addr16
inc
push
inc
jge
lcall
mov
ljmp
mov
ljmp
aas
mov
dec
inc
push
in
test
dec
loop
mov
loop
insb
or
jecxz
cmp
cld
jmp
loope
std
jo
mov
jg
imul
lods
inc
lea
stos
fiadds
xor
mov
mov
dec
mov
add
mov
sarl
aaa
sub
push
mov
adc
rorb
mov
jg
aam
fstpt
jb
cmp
mov
pop
add
xor
mov
bswap
and
mov
adc
xchg
popf
mov
mov
loope
inc
int3
mov
inc
jnp
sahf
cmc
movsl
inc
pop
xchg
jns
pushf
test
and
inc
adc
data16
ja
inc
idivl
jb
dec
pop
mov
cli
push
xor
and
add
outsb
negb
inc
aaa
cmp
dec
insl
pop
or
or
adcl
xor
aas
push
iret
cmp
lods
xor
inc
sbb
lods
pop
and
add
pop
lcall
andl
data16
sub
std
or
pusha
adcb
js
sti
bnd
sbb
mov
cli
xor
xor
fstpl
in
sub
cs
pop
sub
push
dec
xor
jno
in
lds
mov
jg
lea
mov
addr16
mov
rcr
movsl
jl
adc
add
mov
lret
imul
mov
in
arpl
cmp
ds
inc
aad
test
adc
push
mov
pop
mov
iret
mov
sub
add
lret
sub
push
ss
sbb
push
rep
mov
and
push
add
pop
xor
ljmp
pop
cmp
pop
mov
leave
dec
cwtl
pop
scas
int
sbb
inc
lret
cmp
and
stc
cmpsb
xchg
dec
mov
loope
popf
sub
or
into
jge
cmpsl
xor
lcall
mov
mov
cmpsb
jno
and
es
jb
das
pusha
mov
xchg
push
pop
test
xor
xchg
pop
add
adc
call
sbbl
mov
jg
fisubl
or
push
gs
mov
lret
pop
jne
add
or
cmc
fdivl
and
add
lods
fdivrs
rorb
pop
out
sub
xchg
icebp
fstpt
or
xchg
mov
jo
subl
jg
les
xor
lea
les
fdivr
nop
mov
sbb
pop
dec
and
fcmovnbe
fistps
add
test
scas
inc
xor
shlb
aaa
mov
lahf
cmp
xorb
cmpsb
mov
xchg
pop
es
jge
adc
xchg
xor
out
adc
mov
dec
repz
xor
lret
addr16
jge
adc
dec
in
into
and
mov
or
adc
rcrl
setne
in
dec
rcrb
mov
outsb
iret
lcall
dec
js
sub
xlat
xchg
enter
lea
adc
das
and
popa
cli
or
mov
xchg
imul
out
movsb
push
sbb
add
add
aad
shlb
divl
lds
mov
mov
divl
enter
out
in
jbe
test
loopne
or
outsl
inc
and
mov
movsb
dec
jb
jbe
sbb
ja
ja
push
mov
push
movsb
js
inc
jae
mov
xor
test
into
cmp
lea
sub
jae
add
in
cs
mov
nop
lods
sub
dec
es
scas
sub
popf
fldcw
xor
cltd
jne
leave
xlat
xchg
stos
mov
leave
inc
jmp
movsl
mov
jle
add
pop
cmp
sbb
imul
add
lcall
push
jp
in
mov
loopne
xchg
push
jl
sub
sbb
mov
ficoms
xchg
fcoms
or
repz
mov
cli
and
out
outsb
ret
push
mov
je
xor
xchg
out
test
inc
aas
and
nop
lcall
bound
lock
out
mov
xchg
es
cmc
push
inc
sbb
xchg
and
mov
out
test
ja
lcall
xchg
cs
adc
clc
sti
mov
cmp
enter
into
mov
lds
xchg
adc
sbb
lcall
imul
or
bound
popa
inc
fs
and
jp
push
push
std
cmpsb
jae
fcomp
lret
lret
push
jl
sbb
xchg
inc
icebp
sub
push
or
pusha
pop
dec
stos
aaa
insl
clc
insb
das
pop
mov
add
add
adc
push
cltd
sub
cmp
or
cmp
lret
adc
mov
daa
pop
mov
cmpb
mov
push
mov
add
jg
sbb
jbe
xchg
xor
xchg
xchg
shlb
add
data16
or
sbb
mov
cltd
out
or
stc
inc
fldcw
setl
push
push
and
push
mov
push
movsl
xchg
xchg
out
jns
mov
test
bound
sbb
xchg
outsl
loope
jg
mov
xchg
stos
cld
stc
test
loop
repz
icebp
or
lods
xchg
xor
loopne
mov
addps
fdivrp
dec
push
mov
mov
es
mov
xor
lock
das
mov
mov
test
mov
xchg
add
push
xlat
gs
inc
adc
and
daa
xor
shrl
daa
idivl
pop
dec
push
adc
inc
jne
xchg
push
xor
add
pop
dec
sub
adc
imul
adcl
lods
aaa
add
or
fwait
jle
jl
push
pop
loope
inc
stc
or
adc
jmp
andb
int3
pop
mov
pop
out
mov
pop
sub
mul
cmp
adc
pop
fistl
pop
jo
fbld
xchg
sub
test
mov
int3
inc
or
lret
test
pop
repnz
sti
jbe
mull
push
inc
scas
les
les
ret
das
std
inc
and
lret
inc
push
inc
add
xor
in
sbb
fimuls
pop
es
popf
cmpsb
ret
push
sbb
into
enter
fucomp
cs
mov
lar
sbb
jmp
sub
xchg
adc
pop
mov
loopne
jl
jo
out
repnz
shrl
pop
jp
movsb
sbb
outsl
or
pushf
dec
mov
cmpsl
loop
psubsb
subl
rcrb
stc
adc
jg
xor
js
push
shrb
sbb
daa
cmp
mov
fwait
xchg
and
pop
repnz
sub
push
int3
inc
ljmp
xor
ret
push
subb
ret
jnp
out
sbb
mov
adc
test
add
xor
mov
es
xor
add
cli
adc
jmp
jne
mov
gs
divb
nop
in
fstpt
icebp
fs
lret
pop
lock
cld
cli
cmp
addr16
test
cld
or
mov
scas
movsl
out
sbb
notb
cmp
lock
push
push
es
or
fdivs
loopne
sbb
sub
mov
das
hlt
or
gs
ss
mov
mov
mov
sahf
jb
shrl
jg
loope
movsl
rorb
mov
aaa
lods
ljmp
mov
mov
cld
outsl
stos
pop
mov
pop
hlt
cs
lods
sahf
leave
test
mov
add
adc
bound
lods
inc
test
outsb
std
mov
and
xchg
xchg
mov
fmull
mov
outsl
fmull
cltd
repnz
dec
aas
dec
pop
fstps
out
sbb
orps
mov
arpl
aaa
lods
or
daa
ja
addr16
dec
add
dec
cmpsl
xor
stos
mov
xchg
inc
imul
nop
aaa
cmpsl
adc
lahf
lods
movsl
jbe
loopne
fbstp
jb,pn
xor
imulb
mov
lds
pop
outsl
cli
lret
sti
add
inc
sbb
or
repnz
call
mov
fwait
inc
pusha
incb
in
lods
and
fiaddl
aam
jnp
lea
cmp
ja
adc
in
inc
pop
popf
repz
mov
push
adc
or
scas
cmp
lcall
stc
and
mov
mov
push
add
cmp
ja
mov
cmc
popf
push
mov
fptan
test
sarb
inc
loope
je
sub
out
pop
sub
pop
push
jno
jae
mov
lods
xchg
mov
mov
adc
mov
and
mov
imul
push
aaa
cmp
mov
push
cmp
inc
mov
stos
push
dec
and
jg
sub
jmp
pop
mov
iret
das
data16
fs
bound
dec
cmp
cmp
popf
fcomps
jecxz
mov
lock
xchg
xchg
or
sbb
or
xchg
sub
repnz
ljmp
ret
dec
ds
sbb
xchg
push
cli
sub
shll
mov
rcrb
iret
fs
arpl
mov
ljmp
mov
popa
enter
test
pushf
int3
arpl
ss
jae
outsb
hlt
std
das
into
rcrl
mov
in
xor
fidivs
xor
push
push
or
loop
jmp
push
jo
ss
js
aaa
pushf
cmp
sbb
sub
pusha
jbe
mov
fstpt
enter
push
mov
or
sub
outsb
mov
mov
notb
jmp
inc
and
push
dec
xor
cli
push
lcall
cwtl
pop
push
nop
stos
clc
pop
pop
insb
xchg
scas
negl
mov
out
cmp
sbb
leave
mov
addr16
sbb
fidivrl
mov
dec
les
fucomp
in
rorb
pop
outsb
insb
lea
ljmp
mov
xor
gs
or
push
lds
adc
xlat
shlb
adc
mov
mov
adc
xor
xchg
iret
xchg
jmp
aaa
jmp
out
adc
xchg
cmp
mov
push
push
cld
scas
pop
lock
insb
inc
scas
fildl
mov
mov
mov
cld
mov
ljmp
push
cli
mov
and
and
int3
add
lret
ret
pop
pop
cltd
pusha
mov
movsl
daa
pop
mov
js
sbb
cmp
addr16
icebp
sub
xor
adc
mov
into
outsb
jnp
xor
mov
imul
add
test
iret
data16
push
push
data16
and
xor
mov
sub
mov
je
xlat
leave
cmp
pop
mov
xor
fnstsw
in
inc
pop
int3
movsl
aaa
insl
daa
int3
outsb
push
sub
lods
ja
sbb
fcmove
sarl
xchg
adc
jae
movsb
aad
lret
or
repnz
clc
lret
xor
xchg
cmp
fcompl
mov
or
fs
mov
fbld
insl
mov
sbbl
mov
mov
dec
mov
jae
scas
in
fs
fisubrs
int
jp
pusha
insl
add
and
test
jb
test
xor
adc
out
inc
push
aas
icebp
stc
mov
shlb
mov
xor
testb
mov
pop
jp
lock
jp
cmc
pop
cmp
sbb
movb
imul
add
movsb
jae
popa
out
mov
ljmp
ds
iret
pop
jmp
add
hlt
shlb
test
and
incl
pop
jne
mov
push
add
cmp
mov
inc
xlat
dec
or
js
jb
repz
call
bound
sbb
mov
mov
idivb
mov
cld
xchg
pop
ret
cltd
lcall
ja
ds
jo
fcompl
data16
and
sub
lret
mov
jmp
addb
aas
jecxz
sahf
clc
insb
subl
and
lcall
fnsave
popa
mov
pop
inc
mov
in
pop
into
xlat
push
adc
mov
repz
jmp
repz
aad
stos
push
jge
push
mov
ficoml
aam
or
or
xor
fldcw
or
pop
or
divb
xlat
adc
fisubrs
inc
mov
add
icebp
stos
aas
mov
add
es
pop
outsb
push
jp
jae
jp
push
and
push
mov
test
daa
data16
add
mov
cld
or
or
aad
rep
jmp
fistps
fnsave
inc
xor
ret
mov
lods
xchg
sub
cmp
lods
sbb
jo
imul
pop
test
adc
mov
int
stos
iret
stos
pop
sbb
in
inc
cld
sub
test
xchg
insl
xchg
xchg
xor
fisttpl
push
sbb
shrl
pop
inc
rcll
mov
cld
cmp
cs
adc
xchg
pmaxub
mov
pop
push
cmpsb
gs
mov
mov
cli
xor
outsb
mov
jno
hlt
jb
loope
mov
sbb
out
push
ds
setb
sbb
inc
pop
dec
cmp
cmp
punpckhbw
dec
jl
mov
cmp
mov
and
cwtl
lods
sahf
or
pusha
inc
inc
stos
ss
call
mov
hlt
stos
cmp
out
out
jg
jo
es
and
scas
mov
addb
popf
pusha
adcl
mov
mov
mov
lret
and
dec
mov
pop
sbb
popf
sub
fsubs
cld
xchg
cli
aam
xor
mov
sub
pusha
sub
enter
sbb
jnp
jecxz
add
jl
out
aam
mov
inc
mov
add
scas
mov
jmp
xor
adc
inc
stos
clc
mov
sbb
ret
shlb
repnz
sbb
cmpsb
dec
mov
insb
mov
idivl
xor
adc
mov
xor
clc
sahf
add
sub
push
fisttps
ds
inc
mov
mov
inc
cmp
rcl
rolb
sub
lcall
and
es
jecxz
adc
cmpl
shl
jnp
movsb
repnz
fdivl
movsl
test
lods
jmp
je
and
inc
mov
sarb
pop
mov
pop
mov
dec
aad
lods
jl
adc
jnp
test
xchg
sbb
inc
aam
sti
xor
push
and
or
enterw
lret
lret
shlb
pushf
imul
fld
flds
iret
loop
rorb
movlps
int3
xchg
insl
xchg
mov
cmc
add
pop
sbbb
mov
mov
xchg
jno
jp
call
add
and
push
mov
jns
mov
fcoml
je
push
mov
push
mov
inc
pop
or
dec
iret
xchg
inc
fs
mov
fnstcw
adc
dec
lods
inc
aas
out
and
or
inc
mov
cmp
dec
pop
pop
push
sbb
xlat
mov
dec
add
pop
sub
mov
clc
in
cmpsb
inc
addr16
hlt
lcall
pop
and
icebp
gs
mov
nop
pop
mov
icebp
dec
fsts
inc
xor
push
xchg
popf
mov
sbb
or
pop
addr16
sahf
push
xchg
mov
insb
mov
mov
inc
jnp
daa
cltd
xchg
push
loopne
ljmp
test
test
jne
mov
test
adcl
popa
xchg
jmp
adc
xchg
mov
sbb
fcomps
cmp
jno
sahf
sub
push
inc
clc
jae
stos
mov
xor
add
xchg
xor
sub
inc
fsubrl
repz
out
push
or
ror
jo
mov
mov
push
mov
xor
cmpsb
ret
jns
and
push
dec
xchg
sub
loope
inc
pop
dec
xchg
in
int
jmp
xor
adc
push
fnsave
pop
std
push
mov
jecxz
imul
loop,pn
fnsave
cmp
in
clc
mov
cmp
adc
xchg
in
int3
fldt
loopne
fnsave
mov
movsb
scas
lock
ljmp
lcallw
xor
mov
scas
add
mov
add
push
push
cs
pop
inc
das
inc
mov
pop
lock
scas
sahf
cs
psrlq
in
and
sub
ret
jl
xchg
sarl
cwtl
sub
popa
int
inc
jae
test
sahf
out
lahf
icebp
adc
in
add
and
cltd
cmc
lods
push
hlt
mov
xchg
stc
mov
adc
xchg
jmp
hlt
xor
mov
into
dec
mov
jae
aas
and
mov
repnz
or
iret
aas
dec
push
nop
lods
mov
inc
pop
jp
push
mov
cmpsb
sub
movsl
test
in
push
outsl
lds
jmp
outsb
out
rcl
or
jnp
stos
ds
popf
sahf
xor
popl
ljmp
sub
dec
sub
test
call
sbb
or
inc
sbb
xchg
stc
xor
mov
lcall
push
shl
jg
lcall
in
cmc
or
pop
rolb
add
out
inc
cmpsl
aad
xchg
lahf
loopne
aad
mov
test
scas
loop
xchg
inc
fsts
hlt
mov
test
add
mov
cld
loop
leave
mov
mov
shrl
aas
and
sar
adc
sub
outsl
lret
pushf
jmp
jle
je
pop
subb
or
fsub
xor
in
fistps
mov
arpl
xor
dec
mov
repnz
cmpl
stos
push
cwtl
cmp
mov
in
addb
add
mov
mov
jp
cmp
rorb
lcall
jbe
das
movsb
pop
in
jp
sti
test
cltd
push
pop
cld
pop
jle
addr16
sub
fstl
push
lcall
or
js
subl
movsl
mov
adc
pop
dec
sub
add
stos
addl
pop
cmp
cmpb
mov
or
push
fisttpll
enter
imul
or
inc
inc
xor
ret
popa
imul
lcall
add
xchg
stos
xchg
iret
xchg
popa
push
fdivl
inc
cmpsb
dec
xchg
mov
push
mov
mov
xor
push
dec
jnp
int3
sarl
lret
js
mov
pop
call
push
scas
pusha
mull
mov
loope
or
jo
cltd
and
xchg
ds
aas
fistpll
bnd
cltd
jbe
scas
mov
and
mov
je
mov
jbe
movsl
push
sti
mov
into
dec
dec
jp
jecxz
xor
ret
pushf
divb
imul
pushf
cld
mov
sbb
enter
jge
or
mov
dec
pop
adc
shr
cmp
mov
insl
ret
ret
test
mov
adc
jns
cmp
out
in
xchg
mov
pop
adc
shlb
jo
and
xchg
sbb
mov
mov
loop
mov
or
pop
xorb
pop
ljmp
gs
cltd
loope
cltd
fbld
adc
popf
xchg
addr16
jl
pop
movsl
sbb
ret
or
or
xchg
adc
icebp
faddp
or
and
sbb
pop
aad
jne
pop
movntq
pop
adc
cltd
cs
or
mov
jmp
jecxz
xchg
push
cmc
sbb
mov
fistl
icebp
stc
or
cmp
fwait
cmpsb
xchg
mov
add
cwtl
jmp
inc
add
sbb
add
ja
lods
pop
jl
popa
sub
inc
xlat
mov
cmp
xor
mov
cmpb
adc
or
add
pop
cs
js
out
out
ljmp
call
stos
mov
inc
flds
push
pusha
repz
mov
and
jne
and
adcl
adc
sbb
mov
push
cmp
push
out
pushw
jecxz
mov
xchg
sbb
int
push
clc
pop
orb
sbb
in
das
ret
popa
jnp
mov
mov
add
outsl
subl
jp
mov
outsl
add
dec
lods
shrl
outsb
insb
or
dec
lret
popf
cmp
sub
outsl
fbld
xor
sub
subb
pushf
mov
ja
sahf
clc
clc
lods
popf
and
aad
push
nop
mov
int
test
lret
and
dec
cmp
xor
cmpsb
xchg
sbb
sbb
cli
inc
leave
int
lcall
out
ds
addr16
pop
lahf
xchg
jno
xchg
pop
sub
les
es
mov
rcll
cltd
movsl
push
out
jg
push
sbb
push
or
incb
mov
mov
add
orl
push
mov
or
icebp
fnstsw
mov
inc
in
sub
movsb
fisttpl
out
mov
push
inc
xchg
add
add
aam
sub
jns
scas
sub
shl
notl
sbb
xlat
dec
xor
leave
jmp
jecxz
and
in
and
shrl
lahf
inc
dec
out
outsb
das
push
adc
imul
dec
pop
inc
add
cmp
repz
ds
hlt
dec
in
and
sbb
test
inc
pop
adc
inc
jecxz
nop
dec
fwait
xchg
sub
cltd
sub
cmp
pop
dec
sbb
leave
imul
mov
push
inc
lods
in
xor
int3
jge
imul
repnz
lods
loop
mov
sahf
orb
pop
mov
cmp
lahf
adc
in
jle
int
xchg
aaa
push
ret
fsub
jae
inc
sub
cmpsl
cmpsl
daa
out
cli
pop
out
xorl
mov
pop
sti
jbe
fisttpl
jge
cmc
loope
daa
and
xorl
mov
and
push
ljmp
call
sbb
sub
sub
es
nop
adcl
jno
arpl
lds
stos
add
insl
push
fwait
push
jmp
cmp
cmc
js
mov
mov
popf
mov
iret
push
xchg
out
lret
jp
sbb
xchg
pop
xor
lea
lcall
push
xor
in
sub
push
push
test
pop
in
dec
insl
fcom
stos
lea
push
movl
stos
daa
lea
inc
jmp
add
dec
mov
adcl
add
push
stos
xchg
push
or
mov
in
cmp
frstor
sub
jmp
fiadds
movsb
inc
xchg
pop
cmp
adc
in
xor
fnsave
jnp
data16
imul
adc
sbb
shr
popa
test
dec
imul
pop
into
mov
arpl
cmp
xchg
sbbb
loope
mov
sbb
negl
mov
mov
sub
in
nop
adc
xor
jnp
in
das
lds
aas
subl
mov
pushf
scas
and
add
jg
add
fwait
add
or
inc
repnz
mov
fnclex
into
sub
pop
sbb
xor
xchg
lds
sbb
pusha
test
pop
movsl
out
subl
adc
jnp
push
lock
push
movsb
mov
idiv
xchg
scas
pop
mov
js
inc
pusha
cmpsl
popa
xchg
pop
mov
lds
adc
mov
and
popa
or
fadd
xchg
jge
test
and
sbb
push
and
int
aaa
das
mov
pop
adc
jle
movsl
loopne
dec
stc
pushf
pop
test
adc
sub
mov
jmp
push
jae
xor
or
cwtl
jmp
adc
xchg
outsb
push
cmp
sbb
push
adc
xchg
jae
enter
movsl
js
xorl
icebp
jecxz
add
int
stos
scas
out
imul
or
mov
in
dec
fnsave
push
mov
scas
inc
mov
shl
lret
outsb
mov
arpl
stos
and
xchg
xchg
sub
in
or
pop
mov
jbe
loopne
adc
mov
inc
add
sub
and
cmp
aas
jmp
sbb
pop
xchg
cmp
repnz
sub
push
or
lea
adc
cmp
dec
call
push
fcmovnbe
sbb
cmpsl
ret
add
test
jmp
add
je
push
mov
cs
add
mov
push
mov
pop
ljmp
daa
cmc
push
out
rorb
mov
push
sub
cmp
scas
push
loopne
negb
ret
imul
sbb
ds
adc
pop
addr16
xchg
add
pop
into
sbb
add
jno
inc
fildl
add
mov
bound
movsl
sarb
push
test
lock
ljmp
mov
mov
ljmp
jb
add
stos
insl
adcl
inc
or
bound
push
cmp
aad
icebp
xchg
lahf
idivb
or
xor
aas
mov
inc
ficompl
ss
jg
push
cmpsl
js
push
test
test
out
adc
aad
mov
popf
pop
inc
dec
test
lods
fldcw
out
jae
xlat
cwtl
jmp
scas
xchg
mov
xor
call
jb
add
aam
clc
mov
xlat
bound
dec
sbb
lock
stos
jbe
cmc
jb
mov
add
and
movsb
mov
xor
cltd
xchg
mov
inc
fstpl
cs
dec
dec
int
loope
ss
inc
jp
mov
scas
iret
cmp
call
in
outsl
in
push
nop
jne
incb
cmp
in
sub
into
aam
jg
sbb
inc
sub
jno
add
mov
gs
fwait
or
gs
out
cmpsl
insb
cmp
fildll
xchg
add
ljmp
push
lods
pop
outsl
stc
clc
dec
dec
cmp
out
outsb
push
mov
rcl
dec
jecxz
cmp
cmp
push
mov
push
add
mov
lahf
jmp
aaa
or
aad
call
leave
cmp
cmp
out
xor
icebp
shr
inc
mov
rorb
push
scas
xchg
or
fs
inc
loop
lea
or
lock
arpl
sbb
gs
lcall
in
inc
lds
jmp
test
jbe
jg
int
xlat
jae
xchg
out
mov
add
pop
xor
xor
cltd
inc
outsb
inc
add
decl
xchg
sti
mov
gs
cmpsb
jb
pop
insb
mov
inc
popf
outsb
in
test
lock
dec
arpl
in
sbb
mov
sbb
jno
adc
sbb
or
js
ds
add
push
mov
push
jae
rcrl
or
cmpsb
rorb
mov
push
push
cli
test
stos
ja
movsl
pusha
fcomps
lret
xlat
sbb
lods
xor
in
pop
jno
notl
xor
add
cld
and
push
cmp
sub
mov
sbb
dec
scas
in
sbb
xchg
mov
dec
es
imul
insb
or
push
inc
imul
jl
mov
lock
lods
test
cmc
scas
mov
loope
in
stos
lods
shll
fs
sub
mov
xor
in
xchg
xchg
fwait
aas
xor
adc
xchg
jp
or
xchg
fimuls
scas
pop
push
mov
testl
sbb
aaa
rcr
and
arpl
or
mov
dec
xor
xor
xor
int
ret
call
loopne
mov
push
mov
push
lret
imul
adc
add
mov
cli
xor
cmp
aaa
push
and
adc
aas
fdivrl
or
flds
add
or
movsb
lds
push
fdivl
enter
fdivrs
jo
lahf
xchg
inc
fdivl
push
xor
insb
inc
pop
xchg
dec
bound
incl
rcrb
cmpsb
push
and
adc
sbb
jno
cwtl
bound
daa
dec
in
and
cwtl
imulb
int
pop
loop
mov
jge
popa
pushf
and
mov
push
xorl
fidivl
in
rorl
pop
cmp
adcl
dec
dec
out
jl
mov
dec
testl
out
insl
imul
inc
outsl
cli
mov
popf
push
stos
inc
dec
push
out
cmp
int
test
popf
cmp
cwtl
dec
jns
jp
je
stos
and
sub
push
mov
inc
rol
popa
movsl
dec
fmuls
aaa
loope
imul
sub
out
jne
push
xor
push
cli
cmpsb
mov
jo
mov
rcrl
lret
int3
ret
mov
out
es
and
dec
inc
out
dec
and
add
add
jecxz
adc
movsl
cmp
inc
xchg
js
and
outsb
cltd
sbb
mov
mov
fnsave
push
jbe
push
adc
add
insb
fwait
subb
fldt
andl
rolb
ja
lods
xor
mov
imul
iret
mov
inc
fisubl
rdpmc
stc
inc
insb
push
loopne
and
xchg
push
lcall
arpl
mov
cmp
test
int
or
dec
and
push
shr
mov
lret
cmpb
jle
rorb
rorb
cltd
push
push
mov
lret
pop
arpl
sub
stos
mov
inc
ret
inc
fsubrs
dec
repz
aad
push
mov
cmpsl
ds
subl
scas
into
xor
add
xor
ret
outsl
adc
iret
fsubrl
push
mov
inc
dec
aad
loop
fdivs
jge
push
lods
stc
adc
clc
sbbb
pop
jne
mov
sahf
lods
cmp
mov
add
andl
cmp
add
decl
push
fwait
sbb
imul
xor
out
scas
pop
adc
mov
cmp
xor
and
pop
cmp
and
test
add
mov
pop
aam
das
ljmp
andb
inc
andps
inc
shrl
fdivrs
push
push
push
sbb
mov
fbstp
nop
mov
movsb
mov
cmp
mov
jle
pop
jae
xor
pop
aad
pop
adc
movsl
xchg
xlat
mov
enter
mov
add
jns
int3
arpl
inc
jo
fcmovne
fs
and
lds
std
jp
xor
jmp
sbb
add
dec
es
dec
push
aad
and
push
inc
sbb
inc
jae
outsb
xchg
je
or
pop
fldenv
adc
test
shr
je
lret
movsl
iret
dec
movsb
add
test
fneni(8087
dec
mov
push
mov
and
and
cwtl
movsl
movsb
jp
jmp
icebp
pop
mov
xchg
das
and
sbb
into
loop
repz
cmpl
add
jg
imul
enter
push
outsb
add
xor
and
out
mov
cmp
xchg
xlat
sbb
cwtl
cmp
jnp,pn
movd
pop
cmp
fidivrs
sti
mov
fwait
sbb
sar
jnp
aas
fbstp
mov
ljmp
mov
lock
or
adc
xor
clc
int3
and
push
cmpsl
mov
adc
cs
insl
lea
fisttps
pushf
sbb
shl
je
clc
sbb
std
adc
pop
push
fnstsw
cs
pop
cmp
sahf
xchg
scas
cmp
aaa
mov
out
or
movsl
repz
pop
sub
adc
sbb
mov
xor
arpl
pop
mov
jg
push
push
jb
andl
movsl
jg
sbb
scas
push
or
orb
fdivl
push
int
fsubr
lahf
jb
std
mov
xor
lods
fwait
and
cmp
push
hlt
andl
inc
dec
push
cld
sbb
mov
jno
inc
stos
dec
mov
jne
inc
fisttpll
sbb
lcall
xchg
pop
lock
hlt
push
nop
ja
int3
test
rclb
cmp
lods
aaa
nop
xor
dec
cmp
mov
sbb
xor
xchg
sub
notl
xor
cmpsl
out
mov
push
hlt
cmp
xorb
add
pop
stos
sahf
pop
lea
fisubrl
or
ljmp
xchg
dec
fidivs
adc
cmpsb
dec
out
in
jg
shrl
hlt
mov
bound
mov
test
into
dec
popa
adc
int3
mov
lods
loope
cld
and
jne
pop
lret
cld
add
fsubrl
or
dec
add
and
adc
in
or
mov
lmsw
fildl
dec
dec
mov
popa
and
stc
and
popf
test
movsl
fwait
shrl
sti
loopne
icebp
pop
mov
mov
fcmovnbe
idivb
movzwl
mov
sub
shrl
clc
sbb
sbb
dec
cmp
cmp
xor
add
jne
sbb
mov
pop
fwait
loop
jo
adc
jae
pusha
and
cmp
push
jno
scas
dec
xlat
insl
arpl
clc
xchg
scas
sub
xlat
cmp
fbstp
repnz
ret
inc
std
cmp
push
add
cli
sub
sub
insl
inc
add
mov
and
pop
pop
lock
xor
mov
mov
inc
pusha
mov
mov
pop
in
cmp
nop
push
or
inc
and
mov
movsl
xchg
fiadds
insl
add
scas
call
mov
mov
iret
pop
mov
mov
fwait
imul
dec
mov
ss
adc
int3
enter
inc
push
das
add
shlb
test
mov
jp
sbb
subl
cmovns
mov
ficompl
adc
popf
dec
pop
shll
scas
ja
xchg
ja
or
fs
rol
jp
pop
pop
jg
sub
cwtl
rorl
mov
xchg
fwait
aam
push
scas
jns
pop
ljmp
push
je
imul
je
cmpsl
push
sub
push
push
popa
pusha
stos
sbb
dec
dec
sub
icebp
aam
int3
xor
pop
fwait
jb
outsb
lock
mov
aaa
repz
xchg
push
cld
mov
xchg
jle
mov
cmpl
and
push
lock
test
pop
sar
push
stc
push
cltd
cmpsl
popf
dec
push
and
jbe
repnz
in
mov
mov
inc
sbb
fnstenv
stc
addl
add
jmp
xchg
and
cli
and
inc
jg
xor
sbbb
dec
int3
ds
sbb
adc
or
add
dec
jmp
scas
negl
outsl
jge
and
pop
arpl
enter
mov
cmovle
test
sub
mov
nop
push
les
mov
jl
pop
jb
nop
jg
iret
and
ss
clc
push
pop
hlt
enter
sbb
add
idivb
jg
int3
mov
adc
push
and
jo
xchg
xchg
lods
xor
add
and
test
inc
cmp
test
jb
pop
adc
push
lods
ja
jmp
ficompl
clc
sti
fwait
imul
bound
in
xorl
pop
jmp
shrl
mov
in
lea
adc
adc
fsubrs
insb
pcmpeqd
ja
inc
mov
xchg
ljmp
add
aad
sbb
dec
fstps
lea
mov
add
dec
xor
push
sub
fld
mov
mulb
ret
jle
sub
mov
mov
adc
xor
add
rcll
xchg
sub
addl
stos
xchg
je
xchg
std
cltd
lcall
pusha
test
inc
sbb
fcmovne
sbb
mov
hlt
pop
sub
pop
push
jb
and
aaa
ljmp
mov
cmc
rorl
sub
sbb
scas
mov
testb
arpl
cld
xchg
mov
or
mov
cmp
dec
pushf
aaa
cmp
popa
incl
adc
xor
push
and
jle
jge
shrb
or
in
arpl
cmp
add
in
push
nop
xchg
cmpsl
repnz
rorb
pop
out
daa
adc
xchg
clc
movsl
xor
push
jb
add
sbbl
push
push
lock
fmul
inc
roll
mov
das
shrl
adc
movsb
jnp
lret
outsb
shrl
xchg
jmp
pop
mov
mov
rcrl
mov
add
push
vxorpd
cmp
dec
out
push
ret
add
loop
lods
jae
adc
das
andb
jo
jge
lahf
mov
sub
outsl
imul
call
xor
fdivl
or
push
loope
mov
dec
mov
add
cld
adc
movsb
repz
cmpsb
sbb
aad
mov
loope
out
add
lods
bound
push
rorl
ss
aas
mov
jg
adcl
popf
dec
sub
dec
xchg
cmp
out
popa
dec
jae
inc
gs
fsubl
and
jbe
xchg
push
mov
std
cmpsb
fs
mov
icebp
test
cwtl
test
lret
ljmp
push
xor
fistl
push
jmp
enter
out
lahf
adc
repnz
fsubl
mov
fisttpll
sub
jmp
stos
stc
pop
cmc
dec
push
xchg
jb
sbb
sub
insb
cmp
lea
cmp
dec
sbbb
add
leave
mov
add
mov
mov
mulb
mov
fwait
cmp
pop
outsb
mov
pop
popf
xchg
cmp
xor
or
mov
mov
gs
xor
ljmp
xchg
xor
in
push
cmp
and
iret
fldt
push
mov
hlt
jecxz
cs
aaa
xchg
sbb
rolb
cltd
add
pop
cwtl
and
lcall
mov
test
std
loopne
out
out
call
je
mov
add
mov
sbb
cmpsb
popf
or
xchg
or
clc
lcall
js
jl
pop
scas
movsb
out
mov
outsl
sbb
cwtl
aaa
lahf
mov
jg
subl
leave
adc
jae
jns
sti
inc
jnp
in
sbb
xchg
sub
mov
addr16
adc
loop
jae
jne
or
imul
aaa
jp
clc
cwtl
add
je
in
fidivl
mov
sub
sbbl
sub
mov
shr
rcll
push
out
mov
cmc
mov
aam
mov
imul
sbb
pop
mov
jp
add
push
lods
sbb
lahf
stos
fbld
lock
data16
add
push
jne
sub
test
call
mov
lods
dec
adc
out
xlat
add
lds
and
std
cltd
inc
cmpsl
xor
dec
pop
mov
lret
mov
xchg
in
add
cltd
or
mul
inc
out
xchg
sbb
push
leave
inc
xchg
jo
mov
jmp
imul
inc
call
mov
ja
pop
insb
push
or
hlt
out
sbb
pop
rcrb
cmp
cwtl
inc
test
mov
pop
sub
cmp
addr16
lcall
jno
mov
imul
call
adc
xor
add
addr16
push
add
xor
ljmp
inc
jmp
hlt
push
xchg
mov
call
xchg
pop
dec
cmp
outsl
ret
bound
dec
or
jo
loop
shrl
dec
dec
fs
xor
mov
sub
into
push
xchg
gs
jae
pop
cmp
call
outsl
fucomi
add
lcall
cmp
testl
inc
and
repz
xchg
aad
mov
jge
xor
xorb
cmp
jecxz
and
notb
sub
cmp
dec
ljmp
dec
popa
push
xor
cmp
push
icebp
daa
jge
adc
xor
inc
pusha
pop
inc
shlb
int
dec
jmp
sbb
jae
in
mov
mov
jge
mov
sub
dec
in
xchg
mov
shll
xor
mov
ret
push
inc
outsb
call
push
in
dec
jp
mov
std
ret
cli
daa
mov
movsl
add
pop
scas
and
sbb
push
inc
popa
stos
inc
jb
mov
into
sbbb
ja
xor
dec
lods
mov
push
lods
sahf
sub
popa
mov
xor
test
mulb
in
push
fwait
adc
sub
sub
es
cmpsl
inc
fcoml
mov
cmp
cmp
imul
loop
mov
fsubs
push
inc
cmpsl
pusha
xor
jno
into
sub
push
sbb
mov
and
clc
imul
sbb
psubsw
addr16
cmp
or
mov
movsb
jecxz
mov
mov
outsl
fadds
gs
pop
adc
dec
sub
add
xchg
cmpl
pushl
faddl
fisubrl
in
dec
lods
and
xchg
lds
clc
repnz
frstor
cli
or
jae
shlb
minps
lock
xor
ds
lret
stos
call
enter
mov
jle
ljmp
and
das
or
pushf
shlb
icebp
or
pop
jle
fldenv
ret
mov
inc
push
sub
imul
add
inc
aaa
mov
les
test
fnstsw
or
out
xlat
repz
jno
hlt
push
je
je
jp
push
or
xor
mov
adcl
dec
sub
or
dec
pop
mov
adcl
fsubrs
mov
pop
imul
fsubrl
pop
ret
mov
jmp
and
adc
stc
idivb
loope
pop
xor
mov
and
aaa
push
repnz
jb
jnp
push
cltd
cltd
sbb
pop
or
xlat
outsl
cmp
push
pop
outsb
test
mov
divl
pusha
jo
xchg
pop
cmp
in
movhps
inc
dec
dec
stos
sti
leave
sub
sbb
pop
popa
xchg
or
xor
out
call
hlt
xor
jmp
stc
push
xchg
pop
hlt
ret
cmp
pusha
out
cs
out
das
mov
in
push
push
out
cmp
jbe
sbb
mov
jne
and
sti
mov
ss
dec
enter
in
test
push
out
lock
jecxz
outsl
push
push
inc
mov
and
add
incb
cmpsb
arpl
cld
xchg
pop
ret
push
fmuls
mov
sbb
inc
dec
lret
imul
ljmp
xchg
adc
aas
mov
xlat
shll
jge
test
ja
movsb
and
xor
sub
inc
ja
mov
xor
stos
aam
loop
xor
popa
les
inc
mov
andb
jecxz
cs
push
sti
xchg
xchg
ljmp
xchg
mov
cmp
and
xor
xchg
sub
daa
xchg
mov
mov
mov
sub
aad
cmc
inc
xchg
adc
bound
or
pushf
pop
push
popf
ss
pop
test
push
fistpll
adcl
repnz
mov
inc
mov
dec
dec
xchg
jne
add
cmp
and
dec
or
push
dec
aad
fidivs
jmp
lds
sbb
dec
iret
jnp
daa
mov
mov
cmp
dec
pop
push
pop
xchg
xor
nop
test
sar
sub
lcall
test
mov
adc
out
or
icebp
adc
push
stos
fcoms
test
gs
sahf
lcall
cmpb
pusha
testl
jae
push
mov
fbld
adc
fsubr
orl
pop
jo
or
mov
into
call
mov
stos
cmc
dec
mov
lea
xor
mov
mov
imulb
shrb
pop
jbe
lret
xchg
and
leave
sub
push
das
push
mov
mov
dec
cmp
rol
sub
or
mov
and
gs
enter
xorb
xrelease
cmp
fwait
jb
add
pop
and
push
mov
xchg
fistpl
add
es
mov
dec
mov
xchg
std
sub
scas
push
or
dec
dec
jecxz
cmp
push
mov
int
lods
rol
add
fs
mov
inc
addr16
sub
cs
adc
pop
ret
cli
mov
jb
and
in
rorb
jge
andb
popf
sahf
sub
in
lcall
mov
lahf
or
repz
push
jae
hlt
repz
and
push
pop
pusha
notl
xor
arpl
lret
push
dec
std
add
xorb
xchg
mov
aaa
cltd
fdivl
enter
loopne
fnstcw
add
cmpsl
xchg
add
mov
test
dec
icebp
outsl
mov
pop
push
cmp
adcl
sub
movsl
adc
dec
test
push
clc
cs
xor
scas
ljmp
inc
or
xor
out
and
adc
int3
jg
and
and
bound
inc
xor
cmp
xchg
popf
jo
test
sahf
hlt
mov
inc
data16
sub
arpl
pop
pop
addl
pop
clc
out
or
xor
popa
dec
lahf
movsb
testl
and
inc
test
push
jmp
mov
jo
call
lahf
mov
lods
pusha
dec
testl
out
and
ss
scas
xor
lods
loopne
stos
sub
and
loop
jecxz
mov
cmpsl
pop
addr16
pushf
or
ret
push
das
lods
inc
lods
arpl
add
daa
inc
call
nop
mov
jg
cli
dec
ss
jae
lret
inc
pop
cmp
ljmp
jl
ret
xor
xchg
push
in
cmpsb
rolb
pop
iret
sub
loopne
pushl
jae
cmp
lods
inc
cmp
in
ljmp
push
push
sbb
shll
bnd
cmp
inc
lds
les
xchg
mov
push
mov
int3
jnp
out
or
sub
movl
rcrb
pop
scas
es
jp
xchg
mov
cmp
add
icebp
mov
or
shlb
lcall
cwtl
mov
cwtl
pop
add
dec
imul
sbb
notl
push
jmp
mov
pop
repnz
xor
push
pop
push
or
sbb
sub
daa
mov
cmp
push
adc
jmp
mov
inc
outsb
inc
clc
out
jns
fcoml
pop
bnd
jp
andb
sub
into
push
jge
jmp
addl
lods
pop
mov
lret
or
repnz
fucom
mov
mov
ret
lret
push
cld
ret
sub
in
push
fs
pop
pop
icebp
cmpsb
andl
jne
adc
mov
pop
test
xlat
and
push
pop
in
into
push
mov
adc
pop
jmp
out
fwait
jle
mov
add
out
or
mov
clc
sahf
add
inc
lret
cld
add
pushf
mov
lret
es
pop
aaa
incl
scas
test
stos
cmp
out
mov
aas
mov
xlat
cld
outsl
int
xor
pop
hlt
inc
and
ljmp
out
bound
int
xor
or
dec
mov
inc
push
sub
or
or
lock
mov
cmp
sbb
hlt
mov
fucom
jnp
inc
xchg
test
and
jb
out
fcoml
jno
mov
inc
lods
aas
fs
push
mov
daa
std
add
scas
lock
mov
in
or
push
ljmp
outsb
cmc
mov
jno
popa
cs
push
orl
and
inc
add
icebp
call
popa
adc
sti
sub
mov
xchg
dec
push
adc
jbe
sbb
pop
pop
ljmp
add
insl
inc
sub
pop
or
dec
shl
xor
fmulp
and
ja
mov
hlt
push
push
or
sub
jbe
sbb
js
jb
pushf
xor
fwait
xor
orb
in
mov
push
movb
arpl
in
jno
shlb
push
outsb
xchg
mov
push
pop
jl
out
sbb
jmp
mov
pop
mov
test
testb
lods
inc
dec
mov
lret
bound
aad
test
jb
les
sti
or
jmp
fisubrl
cmp
enter
cld
inc
fldt
mov
cmpsb
adc
stc
sub
or
pop
and
cmp
sahf
xor
add
fwait
lcall
sub
xchg
sub
or
inc
mov
ret
in
clc
hlt
inc
iret
mov
inc
jg
int3
mov
ret
pop
xor
mov
dec
loopne
imul
jmp
and
push
lds
inc
scas
cmp
fsts
mov
xor
pop
shrl
test
dec
inc
cmpsl
movsl
lret
xor
lock
add
xrelease
mull
jge
lds
or
dec
or
sub
stos
mov
mov
outsl
je
pop
jmp
jge
mov
les
imul
insl
aam
mov
xor
cli
mov
mov
jg
cs
dec
mov
testl
cmp
movsl
insl
rcrb
ljmp
xor
fwait
scas
mov
jns
orl
aaa
adc
arpl
int
andb
mov
sbb
mov
jmp
fs
repz
sub
pop
sarb
sub
xor
rclb
jmp
inc
mov
add
add
es
sbb
movsl
mov
rorl
and
xlat
jg
add
pxor
add
push
dec
outsb
jb
imul
inc
xlat
lret
clc
jge
jecxz
push
popf
out
xchg
sub
ret
shl
add
dec
pop
pop
mov
mov
push
js
mov
stos
jbe
fstpt
cmpsl
ds
dec
adc
cmp
cmp
dec
jb
jbe
lret
roll
mov
jo
shlb
les
mov
insl
sbbb
mov
cld
lock
cltd
movsb
mov
clc
jae
adc
mov
out
cld
repz
push
js
xchg
stos
sbb
sbb
xchg
pop
xchg
mov
xor
mov
loope
mov
sbb
sub
cmp
lahf
cmpb
pop
adcl
adcb
mov
and
aad
xor
sbb
jl
sti
jbe
adc
rolb
in
cmpsb
ljmp
jns
inc
fimuls
mov
mov
push
arpl
push
out
inc
lcall
pop
cmp
ja
lds
cs
push
shll
cmpb
shrb
xchg
jbe
mov
cmp
push
xor
mov
xchg
addl
sub
dec
cmp
call
jecxz
in
imul
push
push
mov
and
gs
call
mov
sarb
push
roll
cmc
mov
mov
adc
add
xchg
lcall
movsb
xor
push
xchg
add
dec
jbe
out
out
cltd
push
lods
dec
insl
add
into
push
sahf
leave
loopne
rcrl
xor
std
mov
adc
pop
dec
incb
jp
loopne
inc
jmp
fidivrs
out
pop
add
add
popf
push
xchg
enter
mov
adc
out
filds
subl
fldz
test
stos
or
push
inc
ja
fidivrl
xchg
and
test
lods
push
and
gs
mov
push
add
out
test
pop
addr16
sub
sarb
xlat
jbe
sbb
cld
push
arpl
stc
repnz
bound
sbb
stos
mov
sub
pcmpgtw
cmp
out
sarb
inc
xchg
add
pop
fucom
mov
data16
cmpsl
sub
push
cwtl
lahf
test
or
imul
cmp
sbb
cmpsb
inc
push
subb
lcall
push
xor
mov
push
ja
pop
and
xchg
pop
ja
das
out
test
jge
subl
repz
mov
adcb
mov
xchg
ljmp
jne
xor
dec
roll
or
cmpsb
mov
dec
mov
mov
daa
sahf
sbb
push
push
mov
pop
lret
and
rolb
add
call
fsubl
daa
insl
testl
movsb
aaa
mov
mov
ja
jbe
dec
test
mov
fdivr
test
cmpsl
ret
dec
jae
add
or
jge
pop
mov
and
push
mov
dec
inc
addr16
fidivl
ljmp
xorl
jae
hlt
push
inc
ret
aas
ficompl
scas
test
stos
or
xchg
mov
sbb
cwtl
xchg
sub
push
data16
mov
sti
cmp
fadd
push
pushf
lea
jae
xor
cmp
rolb
dec
mov
imul
push
lock
jne
ret
arpl
mov
push
mov
cmpl
dec
inc
popa
mov
je
or
mov
ss
call
int
repnz
ljmp
outsb
std
mov
les
push
jb
in
out
jo
or
xchg
outsb
loope
mov
adc
ss
xor
jbe
mov
test
stos
les
mov
out
push
mov
insl
xchg
daa
popa
cmpsb
dec
daa
pop
subb
test
fs
mov
xor
addr16
cwtl
sub
mov
cmc
icebp
loope
sub
jnp
sbb
pop
mov
and
sub
fucomp
mov
cmp
das
outsb
jle
jne
mov
clc
roll
adc
clc
sarl
pop
cs
and
test
lods
inc
pop
lret
push
mov
loop
jecxz
cmp
add
movups
jne
jecxz
nop
xchg
outsb
sub
pop
push
fldl
les
out
fs
jge
or
or
jg
sahf
aad
scas
push
xchg
incb
std
and
adc
dec
xor
rcrb
jmp
out
rclb
jmp
out
mov
inc
xlat
je
or
mov
xchg
mov
jmp
xor
jne
jge
andl
push
jge
call
mov
sahf
insb
nop
loope
clc
imul
push
lea
xor
mov
push
cmpsb
out
and
xchg
loop
pop
push
xor
lahf
cmpsl
xchg
fsubl
shl
cmp
push
inc
sub
idivb
movsb
popf
pop
mov
jnp
adc
fidivs
jmp
pop
call
xchg
lcall
stc
and
pusha
ret
in
xchg
mov
lods
test
inc
fcmove
mov
add
xchg
out
jecxz
nop
das
test
cwtl
and
test
or
out
in
cmpsb
fsubrs
std
aad
icebp
notb
fadds
jl
je
inc
mov
sub
addr16
aas
cwtl
std
icebp
lret
or
enter
inc
mov
fistpll
adc
neg
add
or
mov
movsb
dec
cmc
lcall
xchg
pop
fcmove
out
jnp
cmp
cmp
sub
ret
in
jb
sbb
mov
aad
imul
jl
cmp
mov
icebp
cmp
hlt
aaa
in
inc
pop
cltd
pop
jl
mov
xor
les
mov
push
sub
fsubrs
push
push
xchg
pop
hlt
mov
or
ret
sbb
pushf
repz
pop
mov
xchg
sub
mov
mov
cmp
add
enter
sbb
dec
push
pusha
shl
repnz
in
in
xchg
xchg
addr16
cmc
adc
sub
push
jne
push
adc
jnp
shlb
cmp
lret
add
outsl
cltd
loopne
or
push
cwtl
imul
jmp
loop
xchg
xchg
ficoml
or
lods
xchg
loop
les
stos
or
rep
mov
cmpsb
inc
stc
xor
loopne
addb
inc
jnp
call
jns
loope
ret
lds
inc
pop
pop
fisubl
sbb
cmpsl
mov
and
shrb
cltd
out
mov
iret
fnsave
and
xchg
fs
ret
push
sbbb
adc
movsl
lret
aaa
mov
mov
cld
mov
in
ja
xor
lcall
add
push
mov
shl
popa
notb
adc
mov
push
out
push
xor
sub
and
imul
mov
mov
inc
mov
fcom
ret
sbb
adc
jns
pop
mov
les
fistl
mov
std
out
sbb
and
jle
ds
test
repnz
out
test
mov
mov
sti
push
sub
scas
or
es
jo
ja
add
push
repz
sbb
ret
push
daa
dec
stos
cmp
fldlg2
test
enter
loopne
orb
jg
sarb
xor
clc
dec
call
cld
inc
sbb
push
mov
arpl
jmp
or
add
xor
out
test
iret
fsts
sub
or
and
rolb
adc
sub
and
int
dec
jnp
ds
xor
lds
fidivrs
adc
jp
and
out
sbb
lret
std
lods
fxch
fstp
out
je
sbb
cmpsl
ffreep
and
mov
lds
test
xor
test
je
and
lcall
cmp
push
mov
pop
jmp
out
int3
pop
mov
iret
addb
les
sbb
sbb
imul
mov
xor
aad
mov
idivl
push
xorb
pop
mov
bound
rcr
jnp
xchg
mov
fmull
mov
cmc
mov
sarb
inc
fimuls
add
sbb
js
cmp
scas
scas
out
push
mov
aaa
pusha
int
les
dec
cli
js
shrl
xor
scas
and
btr
lods
stos
push
pushf
popf
inc
xchg
xor
dec
cmp
inc
push
jge
push
insl
adc
sahf
daa
icebp
mov
inc
andb
std
hlt
sub
push
inc
rcll
pushf
mov
mov
repnz
rorl
adc
xchg
lds
push
ja
mov
mov
out
mov
xchg
xor
arpl
imul
mov
cmpb
cmp
fidivrs
jns
data16
je
or
mov
jae
or
daa
mov
in
sti
push
jnp
push
sbb
cmc
xor
sub
xor
leave
sub
stos
ljmp
xchg
adc
jne
xor
popf
adc
popf
or
xchg
or
pop
adc
or
mov
push
int3
jo
outsl
ds
sub
pop
mov
fcoms
lea
jg
mov
push
jo
xchg
popa
add
loop
enter
dec
mov
lret
fsubrs
outsb
inc
add
mov
push
and
pop
flds
lds
push
push
test
mov
mov
mov
add
rclb
and
xor
sbb
imul
int3
arpl
and
add
mov
loope
movsb
jl
fnstsw
mov
adc
inc
repz
mov
lcall
add
mov
add
sbb
lret
mov
jne
popa
stos
inc
adc
popl
xchg
xor
hlt
jno
mov
in
jae
push
push
or
or
jmp
xchg
in
popf
add
testb
add
call
movsb
cmp
lcall
jl
jmp
sbb
rcl
push
outsl
push
mov
jge
cs
xor
inc
sbb
xchg
add
and
push
sub
imul
popf
push
js
das
mov
fsubl
push
test
push
fbstp
mov
lods
xchg
and
add
inc
xor
inc
enter
iret
pop
cli
inc
enter
leave
outsb
pop
push
xchg
aas
aaa
jns
rorl
sarl
loopne
inc
pop
mov
rorb
testl
int3
cmp
leave
and
dec
push
sbb
insl
sub
lods
lahf
add
cmpsb
cmpl
std
xlat
insl
sti
pop
lahf
clc
xchg
les
xchg
les
or
pop
push
daa
xchg
ret
sbb
sbb
add
cmpsl
jno
in
jle
push
loope
out
xchg
in
push
cmp
lret
mov
js
sub
cltd
ljmp
mov
sbb
sbb
dec
popa
sbbl
pusha
movsl
mov
stos
push
test
out
mov
outsl
scas
fs
jg
movl
jbe
mov
ret
in
loopne
scas
cmp
lods
or
ds
pushl
clc
jno
repnz
pop
inc
lods
cmp
add
repz
inc
ja
gs
mov
fcoms
sbbb
push
adc
xchg
pop
arpl
outsl
mov
aad
xchg
imul
ljmp
mov
push
sbb
dec
decl
mov
insl
or
out
jmp
ja
out
loopne
mov
bound
daa
mov
stos
and
push
push
shrl
out
lock
aas
shrb
adc
push
rclb
loope
aaa
dec
out
add
sbb
pop
ret
mov
iret
sub
xchg
cli
inc
lods
loope
fisttpl
jg
call
or
push
scas
stos
push
inc
das
mov
add
push
xchg
push
and
popf
test
sub
push
imul
movsl
cmp
add
push
mov
lcall
push
outsl
lret
sbb
sbb
jnp
adc
jo
xchg
stos
cwtl
movsl
inc
mov
sbb
imul
xlat
mov
xchg
jmp
sahf
out
ds
popa
into
mov
sti
jl,pn
pop
stos
ja
fistpll
ja
in
test
jecxz
push
xor
ja
xchg
xchg
les
test
xor
int3
popa
idivl
pop
cmc
mov
xchg
notl
adc
sbb
sub
into
push
xor
sbb
adc
loopne
popf
scas
mov
jp
arpl
xor
test
fildll
stos
jns
adc
xchg
pushf
push
mov
stos
movsb
mov
mov
add
inc
lea
pop
aas
in
cld
push
mov
insl
push
jno
ss
outsl
je
sbb
stos
sbb
in
cltd
cmpsl
repnz
testl
jbe
inc
xor
decb
xchg
movsl
pop
jbe
jmp
sub
add
jl
cltd
std
inc
cmpsl
xor
and
push
pop
das
rorb
jne
pop
jbe
leave
fyl2x
xor
add
in
ret
xor
test
ret
cltd
adc
xchg
mov
cld
loopne
fstp
jl
pop
inc
push
clc
jmp
mov
clc
push
inc
data16
repnz
cmp
pop
mov
mov
inc
push
sbb
add
repnz
fs
cmovle
mov
loop
add
lods
sub
xchg
or
pop
dec
in
stc
jge
jecxz
pop
mov
jo
jno
stos
xchg
cmc
popa
je
xchg
mov
xchg
pusha
andl
sub
xchg
das
mov
loope
popf
addr16
in
stc
insb
sub
scas
scas
xchg
fistps
rclb
jb
xchg
enter
clc
sahf
mov
jne
rcrl
mov
jp
xlat
pusha
fwait
loop
mov
loope
test
cmp
or
test
pop
imul
or
and
jno
sbb
pushf
mov
lds
dec
or
mov
mov
fpatan
dec
mov
sub
pop
movsl
mov
cmp
xlat
and
sub
fs
mov
cmp
dec
mov
jne
push
cltd
add
cld
jnp
or
xchg
test
pop
ds
adc
pop
lods
sahf
push
mov
mov
sbb
cmpsl
test
jno
movsb
cld
lcall
jbe
lods
push
and
xor
push
lods
and
sbb
sti
fdivrs
ss
mov
push
sarb
inc
out
xor
mov
dec
enter
pushf
pop
sbb
loope
popa
pop
clc
cmp
or
adc
movsl
pop
jmp
xchg
clc
sahf
jnp
dec
or
loop
sbb
dec
jecxz
cmp
nop
push
xchg
out
test
test
jo
xchg
pop
test
dec
adc
and
xchg
lock
mov
lds
into
in
add
pop
das
xor
jae
jno
insb
shlb
jecxz
ss
adc
jle
adc
sbb
mov
mov
adc
pop
cmp
aad
lcall
in
add
ljmp
out
je
pop
mov
loop
and
pop
sbb
sbb
mov
mov
gs
adc
out
call
add
cs
movzbl
ljmp
dec
mov
add
mov
push
pop
adc
es
adc
xor
add
and
jne
dec
mov
lea
into
leave
jle
pop
mov
pop
mov
dec
inc
sub
movsb
les
inc
insb
jl
and
popf
pop
lret
cmpsl
jp
jbe
lods
xor
mov
lret
xor
inc
fists
mov
scas
push
cmpsb
inc
adc
sub
addr16
imul
testb
popa
xor
or
lods
inc
cmpb
and
in
lds
inc
and
jbe
and
lea
enter
repz
aam
dec
ljmp
jno
cs
jbe
xchg
in
xchg
lcall
out
pop
dec
mov
jmp
lcall
add
mov
repz
out
adcl
hlt
adc
test
inc
cs
addr16
inc
les
test
dec
fwait
push
pop
das
or
loop
sub
popf
mov
inc
add
xor
inc
ret
imul
sub
ja
or
std
pushf
cld
aaa
dec
cli
mov
ret
lcall
lods
pop
cmpsb
mov
les
rorb
adc
mov
ficompl
pushf
dec
inc
mov
and
aaa
mov
add
out
insl
sbb
mov
push
rsqrtps
aaa
enter
mov
jl
pop
lods
xchg
scas
mov
les
lods
insl
pop
cld
dec
inc
push
lods
std
filds
sbb
fldt
adc
insl
mov
jne
popa
inc
fstpl
cld
pop
jg
js
in
xor
lds
mov
jno
daa
mov
jmp
icebp
jnp
imul
insb
and
push
call
xchg
push
fisttpl
jp
jb
xor
xor
in
call
lds
and
mov
pushf
imul
add
xchg
inc
or
mov
scas
sub
mov
loopne
in
imul
enter
mov
dec
sub
stc
fs
imul
and
fsubrp
ss
ja
push
rdpmc
cli
sub
mov
lret
inc
bound
mov
adc
lret
mov
xor
mull
jmp
jbe
fistpl
xlat
inc
ss
lahf
pusha
dec
fmulp
in
xchg
push
xor
fs
subb
sub
sbbb
jg
es
ds
movsb
out
ja
lcall
fbld
fdivrs
and
insb
pop
pop
and
mov
jge
add
adc
pop
mov
pop
inc
lahf
pop
add
jle
inc
fdivl
mov
testl
jg
in
mov
xchg
xor
jne
cmpsb
cmp
aam
les
jnp
xchg
sub
fistpl
icebp
sbb
cmp
mov
xor
push
mov
or
xchg
dec
mov
push
lds
iret
sahf
je
aam
gs
cld
mov
and
data16
mov
mov
fistpl
cmc
push
mov
mov
dec
pop
push
add
rorb
pushf
mov
cmpsl
mov
dec
sub
js
inc
cmp
adc
sbb
xlat
ja
add
push
out
cmp
push
iret
loop
jb
mov
and
movsl
mov
adc
enter
daa
sbb
pushl
lcall
and
ds
sarl
hlt
addr16
push
xchg
or
jo
call
test
popa
dec
cmp
fisubrs
insl
enter
xchg
int
sub
dec
insb
rorb
mov
jb
push
push
les
repnz
ja
sbb
lcall
add
push
adc
pop
out
fcompl
stos
add
daa
mov
dec
pushf
nop
orl
loope
jb
outsl
jae
dec
xlat
das
ret
jno
mov
insb
push
xchg
fneni(8087
xchg
fs
fsubrl
cmpsb
mov
mov
fs
pop
push
adc
cmp
xor
out
xchg
sbb
das
mov
pop
lcall
nop
das
and
xchg
sub
lret
jg
loope
rclb
aaa
pop
outsl
jle
inc
lret
sub
aam
mov
jnp
fmuls
cmc
jno
push
lret
jle
shlb
push
mov
xchg
ljmp
xor
ror
sbb
pushf
insb
inc
into
and
sbb
test
shll
mov
je
std
inc
pop
jmp
jle
push
and
cmp
dec
inc
sti
loop
daa
sub
push
insl
adc
xor
scas
xor
jb
mov
in
xor
sub
popa
int
adc
dec
adc
mov
cmp
or
rorb
add
inc
je
pop
mov
test
mov
or
pop
test
std
aad
xor
xchg
ret
scas
popf
xor
inc
sbb
loop
nop
pop
outsl
popl
mov
fldl
lret
icebp
inc
test
lahf
gs
inc
push
sbb
jp
loope
cmp
js
imul
mov
push
loop
xor
sub
xchg
pop
add
xchg
add
push
mov
adc
test
lea
dec
push
sub
subl
cli
push
jbe
xchg
fs
xor
testl
mov
or
dec
cmpsb
stos
sub
or
fisttps
mov
push
ret
mov
jl
out
lahf
jb
mov
stos
sbb
pop
jbe
sbb
ss
xchg
cmp
rorl
arpl
push
push
movsb
add
fistpl
or
arpl
sub
loopne
mov
mov
sbb
mov
add
lea
call
lret
inc
test
jp
cmp
subl
into
mov
xchg
xchg
sbb
ljmp
cmp
out
mov
push
sub
shr
adc
push
popf
sbb
mov
pop
mov
inc
in
cmp
dec
xor
jecxz
xor
and
cmpsl
ds
int
outsl
jmp
ss
sbb
push
push
mov
insl
dec
dec
iret
jne
fistl
ds
nop
sbb
mov
jns
inc
push
mov
loopne
decl
loop
movsb
dec
add
sbb
lds
testl
xchg
dec
scas
push
jmp
sbb
movsb
and
sub
loop
das
out
sub
jb
inc
movsb
repz
repz
sub
pop
notb
jge
mov
js
aaa
jl
in
and
stos
mov
inc
loope
fwait
xor
inc
xchg
adc
push
mov
sub
push
sbb
sar
ret
lcall
jne
cs
cmp
lcall
ja
xor
dec
push
sub
dec
push
jne
jecxz
pusha
or
out
aas
adc
leave
push
fmulp
fisttpl
rcll
testl
mull
push
mov
sbb
mov
jg
cs
add
ret
jle
dec
xor
hlt
loope
movsl
push
js
sub
sti
loope
jae
imul
xchg
mov
jle
mov
cmp
aas
add
add
pop
cld
mov
cmp
stc
adc
and
fistl
pop
movsb
mov
outsb
aad
mov
ja
std
fsubrl
sub
andb
inc
insb
xchg
imull
sbb
cmp
cmp
insl
imul
arpl
hlt
addr16
inc
ret
std
cwtl
cmp
or
xchg
mov
or
lret
out
dec
inc
jno
lods
fstpl
xlat
jb
rcrb
test
sar
or
lock
sub
icebp
mov
loop
lods
mov
ljmp
or
adc
add
fmul
adc
enter
sub
push
icebp
popf
repz
fs
dec
mov
int3
mov
xchg
jmp
in
cmp
xchg
inc
push
lcall
addr16
xchg
mov
pop
jae
insb
dec
mulb
roll
sbb
leave
iret
or
ljmp
cmp
pop
enter
cmp
aad
mov
add
fisttps
insb
inc
add
xchg
scas
pop
jmp
jns
and
sbb
push
dec
xchg
push
mov
adc
sub
sbb
inc
negl
aad
jns
inc
sahf
ljmp
imul
cmp
xor
ljmp
jl
outsl
mov
mov
int3
ficoml
push
cmpl
cmp
loope
sti
adc
test
psubb
sahf
xor
or
sti
cwtl
inc
dec
lahf
pop
ja
out
mov
pop
loope
xchg
sub
push
sbb
insl
add
mov
cld
ret
ret
dec
loope
adc
sbb
stos
xchg
pop
fdivl
add
sub
jno
or
inc
leave
inc
and
mov
mov
and
dec
in
xor
incb
enter
pminsw
push
mov
add
mov
mov
mov
out
repz
cmovge
repz
add
leave
sub
pop
loope
imul
in
pushf
pop
stc
mov
push
call
jno
inc
pop
out
push
sub
pop
and
inc
movl
push
xchg
icebp
sub
scas
cmp
pop
cmc
jb
xchg
movsl
loopne
jbe
mov
cltd
test
jb
fisttpl
testl
or
fisttps
push
lods
lock
jmp
ja
dec
sbb
mov
mov
ficompl
sarl
mull
pop
pop
sub
js
shll
outsb
fwait
jns
fs
cmc
int3
in
dec
js
mov
inc
add
mov
mov
fdivrl
push
mov
cmp
cld
imul
aam
cmp
test
ja
sbb
and
pop
ret
fldt
push
sub
lahf
dec
sub
cmp
movl
std
hlt
cmp
and
dec
in
imul
mov
and
cmp
adc
mov
sbb
and
loop
icebp
mov
jmp
in
popf
mov
mov
xchg
bound
sbb
adc
xchg
dec
pop
mov
out
and
inc
nop
imul
repnz
cmpsb
mov
inc
push
push
jmp
jo
flds
lahf
cld
sbbb
xor
mov
sbb
mov
faddl
xor
push
test
decb
xchg
xchg
lods
xor
fstl
shrl
pop
outsb
aad
addr16
in
jbe
js
xor
jae
data16
icebp
call
or
mov
dec
mov
push
pop
xor
inc
sub
repz
adc
mov
jno
and
push
test
notb
jecxz
mov
add
loop
stc
jmp
loope
fisttpll
nop
mov
icebp
enter
add
pop
nop
mov
ret
lcall
and
clc
pop
cld
nop
sbb
or
jns
std
xchg
adc
das
into
or
mov
mov
stos
in
incl
adc
cmp
pop
mov
popf
fs
frstor
sarl
jns
in
adc
dec
dec
push
dec
jns
call
or
cmp
mov
cmpsb
mov
adc
scas
out
mov
lods
lods
lahf
stos
ja
insl
push
jmp
add
inc
fld1
mov
xlat
cmp
mov
push
sub
and
clc
sub
fstps
stc
jg
push
aas
sub
cltd
mov
inc
inc
fidivs
xchg
fiadds
add
pop
cmpsb
insl
inc
incl
add
bound
cmp
or
cmp
stc
cmc
sbb
mov
sarl
imul
sahf
lods
outsl
arpl
ret
adcb
out
icebp
xchg
sub
repnz
lahf
adc
jbe
inc
fstps
je
dec
xor
pusha
clc
scas
pop
mov
add
notl
mov
sbb
inc
call
lods
out
add
dec
loop
aaa
hlt
inc
sbbb
adc
lahf
jbe
xlat
adc
in
nop
pop
imul
imul
cmpsl
mov
shlb
mov
into
mov
clc
jmp
cmp
js
cmp
jle
xlat
mov
int
es
jecxz
imul
test
inc
mov
fsts
mov
iret
push
inc
mov
mov
std
xchg
lods
icebp
call
mov
lds
pop
flds
pop
inc
jae
mov
sub
pop
popf
push
stos
mov
mov
add
and
rcrb
adc
mov
pop
dec
leave
add
push
mov
popf
loopne
sub
and
cwtl
mov
xchg
bound
sbb
js
aaa
gs
repz
inc
divb
sub
addr16
xchg
mov
aas
movsb
cmp
mov
jbe
inc
inc
push
pop
xchg
push
mov
sbb
xchg
insb
into
xchg
sahf
mov
cmc
test
inc
daa
mov
les
mov
inc
sbb
inc
or
or
mov
int
scas
pusha
jmp
fdivs
push
rcl
test
divl
pop
pushl
push
xor
mov
cltd
xor
or
or
push
hlt
add
adc
icebp
mov
or
inc
rcrl
incl
arpl
mov
arpl
or
jl
cmpsb
les
popf
ffreep
xchg
dec
add
push
outsb
je
loop
insb
cltd
xor
sti
pop
mov
data16
xchg
push
int
cmp
xchg
sbb
dec
push
sub
sbb
stos
mov
xor
out
call
loopne
inc
jns
xchg
mov
mov
push
insl
clc
ret
outsb
cmp
mov
cli
loopne
xlat
fistpl
stos
cltd
push
mov
pop
sbb
xchg
mov
jo
int
add
xor
mov
xchg
jge
inc
and
sub
pusha
cmpb
rol
sub
xor
push
adc
fs
jno
xor
cmp
push
sub
mov
into
stos
scas
scas
test
lret
addr16
add
xchg
int
data16
cwtl
xor
jo
shlb
or
adc
arpl
stc
fdivrs
mov
movsb
xor
xor
xchg
jmp
aas
jo
pop
mov
iret
and
fistl
outsb
jg
xor
popa
out
cld
lods
jo
loop
jb
cmpsl
loop
je
aam
js
enter
and
adc
mov
adc
idivb
jae
arpl
cmpsb
movl
sbb
gs
sub
outsb
loope
scas
adc
loopne
and
sub
adc
push
stc
negl
rcrl
jp
movsb
ljmp
fistpll
adc
ja
pop
sti
xchg
iret
inc
faddl
adc
mov
aam
enter
hlt
mov
xor
xchg
and
mov
add
js
andb
sub
jbe
push
adc
cltd
std
lret
sub
fistpll
stc
pop
js
xchg
inc
repnz
pop
jp
fidivrl
int3
jmp
adc
movsl
mov
pop
inc
sub
dec
in
out
dec
mov
or
stos
push
cld
inc
and
es
dec
dec
cwtl
hlt
xchg
mov
ret
add
inc
mov
dec
popf
rcrb
or
sbb
movsl
scas
or
mov
vpunpcklbw
loop
js
mov
mov
push
jl
imul
push
cltd
lods
mov
pop
xor
jnp
cmc
cs
call
cmp
inc
inc
in
cmc
ficompl
sahf
xchg
cmp
data16
test
cmp
popf
outsb
cwtl
cmpsl
xlat
aaa
test
andl
outsb
insb
sbb
jmp
cmc
loope
or
aad
sub
jge
es
jp
or
test
sbb
push
imul
in
pop
dec
dec
jecxz
xchg
inc
mov
inc
adc
mov
imul
cld
movsb
jecxz
push
xor
imul
mov
cmpsb
lds
and
aad
insl
pop
test
push
cmp
xchg
cwtl
fwait
dec
dec
mov
mov
inc
push
dec
ja
fsubrs
aam
scas
and
addb
and
popa
mov
add
adc
sbb
cmpl
add
push
mov
cwtl
negl
shr
sbb
inc
cmp
repz
ds
push
sbb
cmp
mov
adc
or
add
ss
mov
xchg
or
and
stos
mov
fmull
mov
aam
mov
jg
pop
xchg
les
orl
push
inc
inc
sbb
loop
push
aas
and
jns
popa
pop
mov
mov
xor
cmp
test
add
scas
lods
vcvtdq2ps
cmp
mov
dec
roll
mov
push
in
pop
aas
imul
xchg
jmp
sbb
cs
push
adc
lds
sub
mov
incl
xchg
sub
mov
outsb
jl
cltd
outsl
jge
insb
adc
jbe
nop
shlb
fildll
into
ret
sub
rcr
out
leave
mov
dec
stos
inc
into
aas
inc
xlat
jecxz
leave
fcoms
addr16
sbb
xchg
adc
xchg
mov
inc
and
bound
mov
cmp
ss
pop
std
pop
sar
pop
adc
jl
imulb
inc
jl
nop
sub
mov
imul
leave
mov
mov
into
cmpsl
ret
sub
push
mov
lcall
inc
cld
or
cmp
push
xlat
mov
movsl
ljmp
and
xor
push
cli
scas
pop
rcr
repnz
outsb
stos
fidivl
and
xor
hlt
aam
pop
pop
enter
imul
cmp
push
sti
popf
jnp
frstor
jp
cwtl
push
lods
lret
pop
test
mov
mov
push
inc
aas
fdivl
xor
arpl
xlat
sub
enter
sub
cld
lret
xchg
mov
dec
pop
adc
add
out
out
mov
les
dec
pop
or
fs
fcoms
inc
jae
pop
push
jb
pushf
xor
fstpt
or
mov
sbbb
sbb
mov
imul
jne
loope
repnz
cld
shl
es
aas
test
sub
pop
aad
push
inc
sti
mov
shll
test
or
inc
cmp
mov
bound
mov
hlt
cmp
jle
inc
add
xchg
pop
pusha
outsl
or
loope
ljmp
call
mov
push
push
jbe
mov
ret
jnp
mov
lock
inc
pop
add
leave
cmp
stos
in
stos
stos
inc
int3
scas
inc
bound
dec
fisubrs
mov
shlb
or
popa
stos
and
adcl
ds
call
add
sbb
aad
adc
pop
xlat
mov
jo
lods
es
sub
sub
das
or
cmpl
in
loope
inc
xchg
or
jb
sub
mov
push
scas
sti
xchg
loopne
popa
clc
push
adc
das
fisubl
mov
xor
push
repnz
mov
cs
stos
inc
insb
daa
inc
inc
inc
fnstsw
and
sub
fwait
cmpb
sub
inc
xchg
jl
hlt
mov
push
lret
mov
mov
jne
mov
shl
ret
jmp
xchg
ret
push
jecxz
sub
inc
pusha
decb
shll
inc
xor
or
insl
call
or
cs
repz
outsl
cmpsl
std
push
mov
lock
cs
pop
adc
jb
out
fcmovne
int3
stc
mov
or
outsb
jl
lock
and
xor
adc
fwait
inc
adc
mov
test
in
jbe
decb
mov
sub
mov
cmp
gs
push
sub
in
stos
pop
enter
adcl
jb
lret
pop
cmp
mov
repz
adc
xor
add
iret
pop
jo
and
cmp
jmp
mov
push
dec
and
cli
cmp
push
insb
cmp
ret
xlat
fadd
sub
or
loope
adc
xlat
jne
xchg
xchg
mov
mov
orl
pusha
or
cmp
xchg
xor
test
arpl
stc
pop
adc
daa
insl
inc
fbstp
movsl
fs
add
adc
xchg
sub
orl
dec
mov
std
xchg
es
xlat
fadds
test
and
mov
sti
jne
dec
sbbb
test
ss
mov
and
push
push
sbb
int
cmp
pop
push
scas
jg
lahf
daa
movsb
cmp
jbe
mov
dec
fs
scas
cmp
cmp
jp
ret
mov
xchg
js
mov
cmpsb
mov
add
push
subb
fmull
mov
aaa
mov
sbb
ret
xchg
lds
mov
loop
mov
inc
lods
insl
adc
hlt
cmp
nop
dec
fadds
pop
in
adc
sahf
add
jb
das
fwait
xor
add
mov
xor
dec
fsts
aam
pop
fldcw
fdivrl
shll
pop
andl
std
ds
jae
cmpsl
push
pop
or
cmp
mov
lcall
adc
ss
gs
and
data16
test
cmp
popf
out
stc
xchg
pop
loopne
jo
std
inc
xchg
scas
jno
jno
mov
sub
add
jae
xor
in
sub
mov
adc
xor
fistpl
test
sti
fldcw
aas
pop
test
ljmp
mov
xchg
jle
into
sarl
sbb
pop
pop
push
push
mov
pop
cltd
cmp
fdivs
adc
inc
xlat
sbb
sub
out
sahf
xor
lahf
notl
mov
cltd
filds
pop
pop
mov
cmp
shl
add
pop
pcmpgtd
nop
imul
mov
je
test
repz
fbstp
sbb
sub
cwtl
pop
addb
lret
dec
and
sbb
mov
xor
in
fldt
xchg
mov
das
jne
pop
or
mov
loop
xchg
add
div
dec
adc
mov
cmp
loop
push
popa
clc
cmpsl
lock
jg
jle
inc
jmp
nop
out
insl
mov
daa
notl
aad
jle
jg
lcall
jge
out
push
lret
mov
iret
sub
mov
sub
adc
dec
loop
xor
dec
jno
fiadds
in
repz
ror
pop
imul
test
jae
daa
mov
push
jmp
mov
mov
dec
rorb
iret
pop
ljmp
sahf
mov
push
push
jmp
pusha
dec
je
mov
icebp
jb
leave
pusha
sbb
mov
pop
mov
or
xor
hlt
mov
cmp
inc
rcrb
dec
dec
rcll
nop
stos
dec
stos
stc
fldl2t
sub
mov
je
hlt
xchg
cmpsl
ds
data16
and
pop
push
or
sti
orb
or
cmpl
insb
jg
or
pop
mov
in
in
sbb
sbb
cwtl
mov
mov
mulb
imul
inc
ss
push
jo
push
in
push
xchg
xlat
xor
or
lret
and
movsb
aas
aam
stos
mov
xchg
and
pop
mov
or
mov
clc
sub
push
iret
push
jp
xor
dec
aam
jnp
mov
push
outsb
xor
test
das
mov
pop
ds
inc
ljmp
out
push
adc
and
mov
xchg
cwtl
adc
mov
mov
rclb
mov
push
test
call
cmp
xchg
sub
mov
xchg
or
imul
xchg
cs
pop
inc
push
or
sub
test
add
fsubs
stc
jo
push
sti
adc
gs
pop
insb
pop
pop
fisubrs
and
jns
jb
iret
xor
xchg
cltd
xor
leave
out
xchg
adc
popf
add
insl
fimull
or
stos
pop
xor
mov
mov
pop
mov
mov
out
mov
js
cmpb
imul
add
and
push
push
sub
inc
mov
jle
sub
lcall
mov
add
popf
sbb
xor
xlat
or
xchg
dec
pop
mov
pop
sub
mov
mov
jae
andl
jg
adc
xchg
jecxz
mov
loop
addr16
dec
das
mov
push
mov
std
or
or
test
incb
sub
pop
mov
add
xchg
jmp
dec
mov
sti
xchg
fstps
and
js
scas
inc
add
ds
addr16
jns
cmp
shll
sub
pushf
faddp
loope
test
xchg
mov
push
dec
mov
aas
lret
push
jmp
sbb
pop
jmp
es
or
cmpsb
mov
fldt
add
mov
adc
test
shll
adc
data16
lret
subl
mov
and
scas
inc
ss
xchg
push
mov
mov
mov
mov
in
mov
fdiv
push
orl
iret
sub
sahf
data16
xlat
xor
inc
enter
aad
ljmp
xchg
mov
aaa
push
pop
jb
mov
mov
or
cwtl
test
inc
aaa
fdivs
mov
adc
cmc
add
xor
sbb
xrelease
leave
daa
aam
into
pop
je
pop
cmpsb
cmp
xorl
dec
popa
xor
add
mov
loope
cmp
daa
sub
stc
lret
jne
out
mov
dec
sti
dec
repnz
imul
mov
arpl
push
cltd
fwait
pop
jmp
sti
dec
xor
and
xchg
xor
cmpsl
mov
sbb
add
xor
sbb
inc
add
nop
push
movsl
sarl
mov
loope
mov
mov
out
shrl
lods
outsb
dec
rcr
dec
test
inc
jae
pop
xor
es
push
sahf
mov
cwtl
pushf
scas
leave
cmpxchg
outsb
int
push
mov
pop
or
and
push
mov
in
out
jb
xorb
leave
iret
sub
inc
outsb
or
mov
movsl
jecxz
add
xor
mov
mov
lret
xor
mov
add
aas
xchg
test
dec
push
sbb
cmp
xchg
ret
push
fs
je
mov
or
ja
shrb
ds
ds
frstpm(287
call
lods
lcall
pop
pop
ret
iret
jnp
pop
push
insl
push
into
pop
jae
add
mov
ret
dec
mov
shrb
into
rol
cmc
lods
push
add
js
jo
clc
out
pop
xchg
lea
mov
jno
scas
outsb
or
pop
cmp
cwtl
mov
and
les
cmc
and
cmp
mov
ret
enter
addr16
sbb
out
jg
pop
add
rol
fisttpll
ret
mov
arpl
xchg
xchg
loop
pop
mov
stos
jg
or
mov
pusha
sub
jns
scas
das
cltd
call
cltd
in
lret
pop
and
jns
es
push
addr16
mov
or
jle
fnstsw
push
sub
inc
dec
insl
add
mov
shl
adc
sbb
or
or
ds
or
sub
mov
sub
repz
dec
sbb
rol
movsl
mov
rclb
jle
popf
stos
popf
sub
daa
leave
jle
sti
test
mov
adc
jbe
enter
insl
jmp
lock
pop
sub
into
test
cmc
dec
inc
mov
std
mov
in
js
ss
mov
push
dec
dec
mov
int
jge
add
adc
or
xchg
jl
push
rcrb
mov
js
imul
mov
xchg
cmp
pop
jne
sahf
ror
xchg
xchg
negb
mov
dec
mov
das
jns
repnz
cmp
scas
xchg
xchg
lahf
pop
ret
mov
and
xchg
inc
xchg
data16
push
lret
and
and
sub
xchg
adc
pop
add
gs
push
cmc
nop
fimuls
cmp
dec
adc
stos
push
mov
mov
incl
out
dec
sub
push
cli
mov
mov
lcall
lds
mov
dec
jecxz
pop
jne
dec
prefetch
fcoms
dec
filds
loop
xor
movsb
xor
push
lds
cmp
sbb
sub
push
pushf
lods
gs
out
sti
xor
xchg
xor
pop
insb
xchg
ret
cmp
mov
mov
sbb
xor
mov
js
pop
jl
mov
xor
adc
loope
mov
or
fs
jbe
jbe
rcl
test
xor
fdivl
xchg
pop
repz
mov
and
jg
aas
dec
andb
cmp
mov
call
pop
cmp
xchg
and
pop
es
sbb
cmpsl
in
sbb
add
xchg
xor
repnz
lret
cmp
inc
inc
sbb
adc
mov
mov
push
js
imul
loope
gs
sbb
mov
sbb
or
test
mov
repz
pop
mov
mul
sub
sbb
test
iret
mov
cltd
push
jns
push
sub
je
leave
hlt
das
mov
fbld
jno
dec
inc
stos
dec
cmpsb
jecxz
out
rcll
push
mov
les
push
out
or
mov
dec
jecxz
lods
mov
dec
orb
cwtl
fpatan
notb
or
leave
pop
out
adc
and
xor
xchg
adc
mov
mov
insb
js
cld
lret
mov
shr
clc
xor
ror
push
sub
cmp
add
cmp
fcoms
fmulp
push
add
or
int
sub
cmp
mov
cmpsl
or
mov
cwtl
das
sbb
mov
mov
les
je
and
dec
adc
inc
mov
xchg
cld
adcb
cmp
add
jle
sub
xchg
data16
sub
fs
push
imul
insl
movsl
dec
mov
mov
jmp
scas
sub
and
dec
jg
inc
sub
lods
fnop
mov
dec
stc
and
add
iret
dec
test
jge
cmp
filds
hlt
xlat
jne
fxch
ja
test
xchg
ds
jl
sbb
js
loop
mov
fsubrs
dec
test
xorl
adc
test
cmovp
and
sbb
sub
jl
jne
in
hlt
xchg
lcall
mov
out
clc
test
mov
pop
mov
stos
mov
shlb
sbbb
fwait
jmp
mov
out
push
mov
or
push
add
jae
adc
and
int3
and
cmp
daa
push
cmp
outsl
push
scas
call
inc
lret
or
xchg
enter
aam
cmp
aad
lret
push
pop
loope
mov
testb
std
adc
push
xchg
test
mov
lds
sub
push
push
dec
sub
jle
addb
mov
push
addl
cli
sub
bound
or
fsubl
push
inc
sub
lds
into
sub
clc
sub
xchg
push
sbbb
movsl
arpl
cmpsl
fisubs
les
cmp
mov
inc
pop
sub
repnz
test
adc
add
adc
int3
gs
jns
and
in
cld
lret
add
inc
sti
jge
mov
into
dec
dec
push
out
jecxz
inc
sbb
inc
fdiv
jl
mov
pushf
arpl
popf
roll
xchg
cmp
lcall
push
out
push
mov
mov
push
and
inc
cmpsl
or
int3
adc
add
and
in
jmp
xchg
dec
jp
shrl
pop
in
xorb
imul
inc
out
mov
fimuls
inc
fucomi
xchg
xor
mov
or
jb
fnstenv
jmp
mov
movsl
aam
inc
arpl
jno
xchg
inc
sahf
clc
out
cmp
adc
push
add
addl
push
mov
lock
cmp
movsb
aaa
pop
aaa
mov
pop
jge
daa
mov
shlb
aaa
pop
or
mov
jnp
adc
xchg
adc
xor
adc
imul
sbb
jle
popf
es
movsb
repnz
dec
sbb
shll
sub
jne
cmp
or
cmp
idivl
mov
push
sbb
add
aad
push
and
mov
pop
aam
mov
jne
cli
in
sub
data16
hlt
mov
pop
bound
xchg
cmpsl
mov
or
popa
in
sbbb
mov
enter
mov
push
movsb
mov
call
add
cmpsb
rcrb
gs
aas
imul
aaa
sub
das
dec
sbb
idivb
repz
cmp
jnp
shl
ja
inc
fcmovnbe
sbb
push
rcrb
adc
leave
cmp
out
movsl
shlb
xchg
mov
inc
arpl
dec
cmp
mov
rorl
test
ds
cmpsb
outsl
pop
xchg
dec
cwtl
pop
or
pop
mov
call
cmp
cmp
mov
clc
sahf
xchg
pop
cs
or
ret
mov
mov
shlb
jno
adc
xchg
mov
mov
mov
imul
add
insb
cmc
out
negl
ficompl
sbbb
lahf
sub
adc
repnz
js
inc
idiv
or
lcall
mov
lds
fnstenv
or
sub
mov
cltd
cwtl
mov
out
int
clc
cs
cmp
das
or
movzbl
outsl
add
pusha
imull
cmp
int3
sti
xchg
or
mov
jb
and
jns
test
lods
xlat
mov
xchg
int
js
mov
int3
jle
aam
lret
sbbb
cmpsl
stc
adc
iret
arpl
add
add
pavgb
into
popa
cmp
outsb
cld
inc
test
pop
addr16
pop
fwait
sahf
cmp
inc
arpl
pushf
adc
repnz
inc
and
insb
push
jns
dec
loope
aad
mov
push
pop
mov
mov
mov
lret
inc
mov
adc
jmp
in
pop
xor
push
cmc
aad
lds
dec
inc
adc
fldenv
push
out
test
sub
dec
imul
xor
sarb
cli
pusha
mov
xchg
shlb
mov
mov
jb
xor
push
iret
sahf
rol
icebp
mov
sub
cmp
fdivr
sbb
cmc
mov
mov
fisubrl
cmpsl
aas
inc
and
fneni(8087
xchg
cmp
or
loope
add
divl
imul
ds
mov
outsl
mov
lock
jo
xchg
xor
add
xchg
dec
outsb
repz
lock
pusha
sbb
andb
xchg
mov
inc
jbe
jmp
add
pop
adc
pop
sub
into
fiadds
mov
sahf
xchg
jne
sahf
es
aaa
xchg
test
sahf
fdivr
xchg
test
sbb
mov
cld
and
jne
jne
xchg
xchg
movsb
adc
and
out
negl
jp
inc
jp
andb
sub
movsl
mov
jnp,pt
pop
loop
add
aaa
mov
ret
aad
out
enter
dec
icebp
push
jno
enter
mov
scas
and
push
mov
icebp
push
lea
sarb
mov
popf
xchg
movsb
sbb
fwait
rolb
mov
inc
cmpsl
push
testb
sbb
xchg
dec
hlt
mov
add
cmpsb
jns
jecxz
loope
in
in
ss
sbb
xchg
xchg
jl
mov
lods
loopne
loope
cmp
nop
clc
ljmp
jbe
stos
xchg
cmc
pop
into
sub
mov
movntq
fsts
shrl
js
pop
mov
stos
js,pn
pop
out
cmovnp
ja
out
push
inc
adc
dec
add
dec
lcall
sbb
or
into
enter
mov
mov
inc
cmp
jge
stos
inc
insb
or
mov
cld
sub
xor
ss
stos
aas
and
jbe
pushf
adc
and
push
xor
fsubr
stos
cld
jo
frstor
dec
das
jnp
movsb
lahf
testl
popf
xchg
scas
mov
popa
mov
es
daa
mov
icebp
leave
inc
jb
pop
jmp
sbb
into
jmp
xchg
adc
es
lock
add
or
jp
idivb
xchg
pop
sub
pop
cmp
stos
ljmp
jo
pop
dec
dec
cmp
loopne
xor
xchg
dec
iret
pushf
data16
out
aam
sbb
pop
jl
cmp
mov
push
and
sub
jl
leave
pusha
lahf
sbb
call
add
adc
inc
dec
popa
fdivrs
mov
rorl
adc
repz
xchg
addr16
inc
mov
int3
jne
call
mov
mov
adc
inc
mov
mov
jae
xchg
cmp
sbb
fnsave
dec
pop
xchg
sar
add
mov
push
mov
aad
stos
pop
mov
inc
outsb
push
dec
mov
push
mov
mov
mov
xor
cmc
push
adc
dec
xor
and
cmp
into
inc
popa
lret
stos
add
dec
imul
inc
sbb
pop
mov
push
pop
lock
mov
pop
into
pop
subb
mov
mov
lods
jns
push
dec
inc
cmpsl
sub
fsubs
fildll
fcmovbe
negb
dec
push
shlb
jle
adc
fwait
and
adcl
daa
xchg
in
call
insb
pop
outsl
shlb
add
clc
inc
and
adc
fcomps
dec
cwtl
jle
mov
nop
jns
jne
pusha
push
stc
or
fisubl
push
inc
cmp
bound
sbb
and
ret
xor
sbb
enter
loopne
jp
rcl
adc
sub
ret
inc
sahf
out
and
scas
mov
xchg
sub
daa
mov
test
xor
arpl
aas
adc
cmp
mov
test
mov
gs
xor
lods
push
jge
jmp
mov
jbe
sub
or
test
mov
stc
jp
lods
and
iret
jne
pop
fnstcw
mov
adc
jmp
dec
sbb
cmp
stos
std
popf
divl
push
adc
sbb
xor
fs
in
xor
sar
dec
mov
and
iret
add
shlb
cld
aad
outsb
inc
xlat
pop
jns
mov
inc
cmp
lods
pop
cwtl
fistps
stc
mov
pop
das
lcall
push
mov
dec
shrl
xlat
out
xchg
inc
dec
xor
adc
int3
inc
dec
icebp
faddl
sub
push
sbb
lret
add
scas
imul
pop
push
xchg
pop
fs
inc
and
je
jl
sbb
fisttpll
cmp
fcoml
or
xor
cli
test
nop
out
mov
xor
cmc
lods
mov
fldt
mov
xchg
or
jb
call
es
adc
jl
and
or
xchg
mov
enter
in
data16
and
pop
call
xchg
idivl
les
cmc
movsb
mov
scas
and
inc
movsb
repnz
cmp
pop
xchg
bnd
lods
lret
mov
dec
push
sub
mov
pop
imul
xor
insb
scas
call
out
lahf
xor
xchg
cmp
jnp
mov
dec
mov
cmp
xlat
out
icebp
xor
mov
aaa
out
mov
xchg
out
ds
dec
or
int
push
sbb
fs
call
dec
adc
and
mov
icebp
jne
mov
jmp
lea
repz
adc
pop
pop
in
subl
push
or
push
orb
pop
cli
or
push
inc
sbb
add
mov
outsb
sub
imul
mov
pop
test
lods
xlat
divl
scas
push
dec
pop
fldenv
sbb
ljmp
sbb
pop
adc
scas
dec
inc
mov
xchg
ret
les
not
inc
inc
lretw
push
push
fsubs
xchg
in
jno
lahf
xchg
sti
inc
add
push
iret
adc
inc
call
mov
xchg
xor
inc
popf
xchg
rclb
dec
ficomps
push
xchg
or
jge
cmp
aam
lahf
pop
pop
cmp
jle
inc
mov
loope
jge
jo
or
and
or
ds
xchg
sub
dec
fbstp
and
data16
mov
pop
adc
int
sbb
jb
js
cmc
scas
push
adc
mov
cmp
lock
sub
test
or
out
inc
jmp
adc
and
out
sahf
push
and
mov
dec
data16
xor
andb
jge
or
add
daa
mov
dec
cmc
mov
ret
rorl
pop
out
jl
bound
mov
popa
dec
xchg
push
adc
push
jge
sarl
stc
dec
push
sarl
je
xchg
sub
out
pop
cmp
xchg
push
shll
xlat
js
iret
and
adc
push
jno
cs
in
inc
lods
inc
xchg
xor
jno
or
out
pop
jecxz
dec
les
sarb
cld
cltd
pop
fdivrl
push
push
out
jp
push
jp
xchg
test
jbe
hlt
mov
imulb
mov
jnp
lods
xchg
sub
mov
std
mov
insb
cli
or
dec
movsb
sbb
sbb
dec
testb
lret
push
push
aam
frstor
adc
push
fsubrp
test
scas
out
push
fidivrl
push
pop
mov
sub
dec
in
dec
jle
sub
or
adc
fwait
lret
pop
loope
cmp
inc
xchg
daa
push
cmpsl
ds
inc
movsb
inc
xchg
inc
inc
idivl
cmp
xor
repz
scas
pop
push
jmp
loopne
or
test
add
imul
rcrb
in
inc
ficoml
outsl
cmp
lods
sbb
dec
jp
pop
lock
popf
ss
xchg
loopne
xor
lock
mov
adc
or
outsl
shrl
xor
and
mov
clc
or
movsb
divl
push
iret
sbb
fdivs
in
mov
sub
ret
outsl
in
clc
and
lods
pop
int
push
js
cmp
inc
adc
xor
test
lods
jb
pop
cmp
movsl
xchg
adc
outsl
push
in
mov
lds
jne
lods
js
sbb
in
jnp
mov
cmp
mov
add
xor
or
lret
push
push
cmp
enter
fdivrl
push
fs
inc
arpl
sub
push
push
add
cs
mov
scas
mov
mov
pop
cmpb
mov
test
inc
fwait
and
rolb
js
mov
mov
pusha
testl
mov
xor
in
push
or
pop
cli
popf
pusha
add
in
dec
pusha
out
insb
xor
mov
shll
jle
mov
mov
cld
pop
lods
mov
daa
jp
shrb
mov
stos
sti
movsb
fisttpl
push
inc
loop
pop
lcall
filds
popf
xchg
shll
fdivl
push
xor
pop
cltd
adcl
adc
mov
add
lods
mov
mov
sub
ficompl
shlb
insl
dec
push
jns
cmp
hlt
pop
in
sbb
sub
ret
loope
mov
xor
leave
inc
mov
cld
jp
movsl
lds
cmpl
xchg
jno
jle
pop
imul
cld
push
pop
pusha
iret
xchg
xor
fmull
adc
mov
xchg
inc
lcall
sub
rorl
leave
xor
sbb
mov
insb
pushf
pop
push
inc
mov
outsb
jl
in
and
cs
pushf
adc
in
imul
fildll
xchg
lret
hlt
and
cmp
mov
fnstsw
jb
xor
inc
adc
fwait
addr16
fstl
xor
fildl
bound
dec
flds
lahf
add
pop
hlt
out
or
ret
sbb
push
mov
test
xchg
in
sub
das
inc
lcall
mov
shrl
jp
xor
push
in
jecxz
mov
cltd
test
mov
jle
shrl
leave
pop
sbb
mov
movsl
mov
adcl
rcrb
lret
mov
imul
in
rcrl
sarl
jb
aas
enter
xchg
int3
dec
or
sti
es
stos
shrb
aam
in
xchg
test
dec
inc
testb
mov
enter
mov
lret
inc
imul
jns
add
mov
xchg
ss
inc
out
push
mov
jns
insb
decb
movsl
out
dec
test
inc
sub
and
test
jo
jmp
mov
push
mov
add
add
add
and
xchg
fwait
sti
sahf
je
insb
xor
nop
cmp
jp
rcll
lods
loope
sbb
fbstp
push
popa
ljmp
xlat
outsb
push
jmp
mov
aad
jae
mov
and
xchg
push
xor
test
into
movzbl
push
adc
js
outsb
test
pop
cmp
pop
inc
stos
mov
repnz
aaa
push
jo
cmc
sub
das
inc
mov
mov
pop
mov
lea
xor
scas
mov
or
jbe
es
rolb
jne
inc
xlat
insl
dec
xchg
and
xor
aaa
jmp
add
push
adc
cmp
jg
lcall
xor
sbb
addr16
or
aas
orl
xlat
loopne
lods
xchg
dec
out
push
dec
jmp
pop
aaa
icebp
mov
pop
es
outsb
cmp
fstps
mov
rcrb
imul
aad
ret
stos
push
fisttpll
push
jl
std
xchg
jo
divps
jge
mov
inc
and
push
inc
leave
int
into
hlt
dec
push
mov
shrb
rorb
roll
jo
xlat
sbb
jnp
add
lods
and
das
mov
sub
hlt
pop
lock
pop
les
idivb
loopne
out
push
sub
and
jecxz
sbbb
add
pop
push
sbbl
jne
xchg
sub
into
push
mov
dec
add
sub
push
in
sub
jmp
or
testl
mov
pusha
sub
cltd
call
cmp
std
xchg
fimuls
sbb
in
popa
mov
outsb
test
into
lods
or
add
cmp
mov
dec
sub
jle
pushf
cli
xchg
shlb
pop
xchg
jbe
andl
int3
xchg
movsb
mov
xchg
add
fs
pop
pop
or
cmpsb
cmp
lcall
cmp
imul
mov
in
lods
dec
mov
adc
adc
xor
adc
sahf
and
shlb
mov
sbb
popl
mov
mov
add
fbld
dec
pop
fdivrl
xchg
adc
lods
cmp
or
fsubrl
shlb
pop
ljmp
fs
test
movsl
movsb
pop
adc
ret
cltd
and
imul
jp
xchg
adcl
popf
std
and
rorb
and
loopne
adc
mov
jecxz
nop
push
jmp
cwtl
scas
add
push
push
sahf
mov
jp
sub
scas
sub
sub
iret
das
or
nop
imul
mov
and
ret
pop
add
adc
jle
inc
nop
test
push
ss
pusha
push
jl
movsl
sub
lcall
cmpsb
imul
jge
out
call
xchg
dec
cmp
test
cmp
xchg
pushf
scas
fistl
dec
int
add
in
cwtl
sub
pop
xor
lret
cld
inc
xor
adc
inc
ljmp
add
jo
cwtl
cmpsl
and
fnstcw
mov
mov
insl
rolb
push
adc
hlt
push
cld
sbb
add
pop
fs
dec
in
cli
or
aaa
rcll
popf
jge
bound
pushf
jo
int
mov
inc
dec
mov
or
or
std
jns
out
adc
in
pop
sub
mov
lds
jl
hlt
sub
ljmp
xchg
mov
jmp
mov
push
pop
leave
push
shlb
in
fwait
arpl
loop
or
test
imull
mov
jge
fwait
movb
dec
pop
vpminsw
sarb
push
aaa
loop
cmpsb
cmp
es
sahf
adc
pop
fists
dec
pop
loope
mov
repnz
lret
lock
xor
fsubrl
in
add
js
imul
sub
insl
es
pop
jle
arpl
and
stos
cltd
fdivl
mov
mov
out
mov
dec
add
lret
mov
cwtl
or
sbb
add
rcr
and
hlt
mov
add
mov
mov
mov
popa
scas
adc
xor
adc
xchg
jmp
inc
pop
mov
lods
push
movsl
bound
aas
outsl
shl
mov
pop
lock
and
adc
dec
out
adc
in
imul
pop
mov
sub
or
jg
pop
sub
jl
dec
ja
icebp
xor
cmpsl
fsubrs
xor
jbe
inc
or
inc
fsubrs
pop
dec
loopne
jmp
and
addr16
xor
and
and
adc
arpl
pop
mov
sub
insb
test
pop
orl
mov
xchg
add
test
pop
jnp
xchg
mov
jge
iret
cmpsb
xchg
ret
inc
jge
jb
frstor
in
mov
xor
inc
mov
nop
in
mov
pop
adc
xor
lahf
andl
gs
jg
js
jecxz
push
in
cmpb
cmc
mov
notb
aad
sub
es
aaa
sarl
bound
jge
out
nop
pop
and
inc
lock
mov
cmp
cmp
mov
sbb
jnp
inc
xor
and
into
test
jne
sub
pop
scas
orl
std
jle
sub
xchg
jae
das
and
jg
mov
mov
push
out
push
inc
notl
adc
lahf
jbe
incl
outsl
jns
outsb
xlat
mov
cmp
push
push
push
pop
mov
xor
fcomps
pop
jmp
mov
or
xor
jmp
sub
in
mov
daa
xchg
imul
daa
stos
fisttps
enter
jge
inc
in
cmc
out
push
roll
leave
xor
jl
scas
cmp
push
cwtl
push
stc
inc
andl
xchg
fs
dec
ss
xchg
mov
fst
icebp
sbb
test
mov
decl
or
in
scas
ret
cmp
push
push
insl
stos
aas
pop
mov
das
test
aad
in
daa
xlat
jp
mov
mov
aam
jg
mov
scas
or
xchg
mov
std
xor
mov
popa
sub
enter
fucomp
push
pop
mov
enter
mov
or
pop
or
mov
xchg
and
out
ss
push
mov
pop
mov
mov
add
test
pop
push
nop
daa
mov
xor
xchg
jmp
out
out
call
popa
push
roll
fdivrl
or
sbbl
inc
pop
add
mov
lods
jmp
mov
bound
out
xor
jmp
popa
clc
es
cli
insl
add
lcall
add
push
pop
test
jae
adc
mov
adc
rcrl
jno
inc
sub
ficomps
mov
xchg
out
in
add
xchg
pop
jg
and
sarl
lock
pop
or
sub
jb
into
add
into
sub
outsl
xor
sub
lock
pop
sbb
js
scas
inc
icebp
push
jnp
adcb
or
daa
xlat
mov
xor
add
sbb
add
fwait
push
test
cwtl
mov
or
inc
sub
push
arpl
movsl
push
inc
rclb
adc
jo
push
shll
ret
sub
pushf
cli
iret
stos
inc
clc
outsl
cmpl
outsb
enter
inc
into
adc
scas
std
loop
jno
mov
fldl
fmul
icebp
push
xor
ljmp
adc
xchg
cmp
sahf
lods
test
rcl
repz
iret
jne
rol
scas
mov
push
cmp
in
sbb
cmpsl
mov
mov
lds
push
jno
xchg
xor
mov
pop
and
ds
or
mov
repz
or
daa
test
xor
or
js
sub
or
add
mov
push
push
xor
or
sub
repz
xchg
xchg
loope
ret
fidivrs
outsb
mov
fildll
out
jnp
and
xchg
xchg
sub
inc
mov
icebp
ljmp
mov
js
test
call
leave
cmp
es
sahf
sub
enter
dec
lods
add
imulb
scas
dec
sub
or
dec
in
jge
or
rcll
jbe
jmp
adc
addb
jecxz
mov
push
mov
inc
out
pop
popa
ffreep
xchg
xorb
xlat
or
push
sahf
mov
push
and
loop
xchg
or
and
fildll
inc
adc
sbb
outsb
idivb
shr
mov
cwtl
fists
inc
fldenv
sbb
xor
jecxz
insb
add
mov
adc
mov
in
mov
sub
call
lcall
jecxz
jne
sub
cmp
jg
icebp
lret
ret
xchg
sub
add
stc
popf
aam
pushf
scas
icebp
adc
xchg
das
fmulp
or
push
out
int3
push
stos
adc
ss
icebp
repnz
jbe
shlb
mov
add
sub
sahf
push
push
pop
push
add
bound
popa
std
movsb
sbb
jle
mov
test
addl
dec
dec
mov
psrlq
sbb
fmul
pop
loope
cmp
imul
mov
push
xchg
adc
mov
movsb
xchg
xor
and
fistl
or
push
add
fnstenv
push
call
xor
cmc
mov
fldl
xor
in
mov
cmp
jl
test
dec
jecxz
cmpsl
std
lods
fwait
mov
pop
jge
out
jnp
xchg
rcl
loop
into
std
dec
fwait
and
leave
push
call
clc
sahf
js
fadds
dec
call
cmc
dec
outsl
jnp
mov
mov
rcrb
rorl
xor
aad
int
outsl
add
fwait
imul
fdivp
dec
pop
xchg
cmpsb
std
or
lret
adc
mov
or
fcomps
mov
call
inc
roll
xor
dec
shlb
jnp
ljmp
cmp
cld
outsb
add
negb
and
test
cmp
and
stc
mov
inc
push
enter
mov
xchg
add
leave
mov
mov
hlt
mov
pusha
push
inc
rorl
lahf
sub
cltd
test
push
jmp
cmpsb
mov
and
inc
xchg
add
adc
testl
ret
sbb
jle
imul
dec
cmp
push
mov
test
arpl
test
mov
xor
jae
xchg
flds
push
jle
mov
sahf
aaa
xchg
pop
xchg
mov
and
sbb
loopne
mov
mov
xchg
sub
in
lods
jno
xchg
subl
nop
addl
xor
fistpl
or
sub
sbb
push
push
fcoms
dec
arpl
lds
or
push
jg
imul
out
into
repz
adc
lea
xchg
dec
adc
clc
push
sub
push
cmp
dec
pop
add
hlt
ja
push
pop
rclb
es
iret
shrb
je
fsts
outsb
adc
lods
jp
sysret
cmpsl
adc
cmp
cmc
jmp
jecxz
mov
jmp
or
pushf
push
push
cmp
ficompl
mov
sti
push
and
sbb
cmp
jo
adc
pushf
ss
sbb
mov
fistl
mov
lods
sub
sub
int
shll
into
sub
shll
mov
sub
rol
xorl
hlt
xchg
dec
cmc
loop
pop
mov
jbe
push
das
jp
shrb
jecxz
loope
ficompl
movsb
sub
popa
rorl
mov
int
inc
xchg
dec
and
mov
jmp
sub
mov
mov
xchg
pop
popf
pop
inc
fisubl
lods
or
into
adc
out
push
xchg
mov
sub
cmp
mov
call
aas
les
sbb
push
dec
jecxz
es
data16
sbb
aas
add
mov
push
pop
push
ror
in
or
dec
jecxz
lods
mov
inc
xorl
inc
ret
rorb
pop
jge
or
xchg
inc
jae
in
mov
pop
fwait
pop
push
add
ja
dec
fistps
jns
push
mov
faddl
fsubl
pop
leave
ss
ljmp
mov
dec
ljmp
cmpsb
jb
pusha
js
xchg
inc
xchg
jo
out
lock
dec
insb
push
sbb
loop
xor
in
leave
dec
lock
pop
hlt
lds
push
cmp
xorb
mov
leave
pop
dec
add
xor
out
pop
or
pop
dec
jecxz
dec
sub
mov
push
dec
dec
fnclex
arpl
and
loopne
shll
lods
into
dec
addr16
imul
stos
sbb
push
sub
add
adc
xor
sub
xchg
mov
push
or
into
insb
adc
cli
mov
cmp
jo
imul
push
xchg
incb
xor
test
mov
xor
and
in
test
push
sub
dec
mov
sbb
test
adc
adc
jmp
in
xor
sbb
sub
adc
lret
sub
scas
je
js
xor
xchg
jmp
in
out
outsl
jne
arpl
inc
mov
xor
rorb
mov
push
mov
and
fwait
cmpsl
cmpsl
ret
pop
sbb
xor
xchg
in
in
inc
stos
ss
cmc
punpckhwd
add
lea
pop
add
int
roll
cmp
ja
jo
mov
das
jge
loopne
arpl
mov
and
inc
add
jl
pushf
out
ss
pop
push
rolb
inc
inc
cltd
mov
lds
cwtl
mov
lock
jge
cmpb
lods
fsubl
cli
test
mov
sahf
adc
aaa
bound
loopne
mov
mov
adc
fstps
sub
cmc
xchg
or
call
adc
andl
dec
jmp
jno
mov
les
ret
es
ds
push
or
mov
xchg
dec
pop
dec
mov
sbbl
rcrl
jb
notl
fldl
leave
xor
add
loop
push
ljmp
jno
fadd
jmp
dec
and
in
add
sub
dec
fstl
push
mov
inc
out
bound
cmp
pusha
push
mov
into
test
adc
scas
fcomip
dec
pop
out
int3
mov
test
mov
inc
add
stos
leave
dec
mov
clc
adc
push
fcmovu
sbbl
pop
repnz
movl
aam
mov
push
xchg
mov
xlat
decb
enter
xor
test
mov
sub
popa
and
dec
es
and
dec
cld
inc
mov
xorps
adc
jge
repz
jle
scas
repz
mov
xlat
sbb
jmp
dec
lds
mov
sub
lea
dec
aam
jo
and
pusha
je
fisubrl
fs
enter
sub
add
pusha
outsb
mov
pop
push
cltd
std
sub
dec
imul
scas
addb
ja
mov
push
stos
adc
nop
inc
bound
enter
aad
cmp
or
cltd
add
fwait
hlt
pop
fwait
sbb
daa
sahf
aaa
push
rorb
cmp
scas
in
mov
sbb
fldl
add
into
ds
outsl
push
call
cld
mov
lods
cmp
adc
cli
push
add
cmp
cmp
clc
rorl
repz
jo
xor
cmp
adc
mov
cmp
push
int
shl
mov
bnd
adc
lods
add
mov
push
sub
dec
sbb
sub
inc
daa
mov
pop
cmc
jno
movhps
popa
jb
mov
orb
enter
fsubl
ljmp
pop
push
sub
imul
mov
cmp
fdivrp
mov
and
subl
hlt
push
clc
shrl
jmp
mov
in
leave
and
cmc
push
ljmp
jns
ret
rcll
mov
cmpsb
cmp
aad
cmp
loop
insb
fsubs
cmpsb
add
pop
jnp
stc
cld
aaa
sbb
dec
pop
sbbl
xchg
fstps
cmp
arpl
ret
lahf
xchg
jge
popf
addl
push
dec
inc
fidivrs
cld
mov
mov
cmp
xchg
stos
insl
iret
data16
dec
in
test
xor
pop
repnz
inc
dec
push
or
mov
pop
in
add
les
cmp
cltd
sub
ds
popf
push
scas
sbb
xlat
jp
lock
das
jecxz
aad
pop
cmp
fbstp
ljmp
in
mov
push
mov
jne
xchg
shlb
loop
jg
mov
lret
movsb
mov
pop
scas
inc
into
pop
mov
sti
pusha
je
mov
xor
das
xor
jno
adc
inc
in
push
pop
dec
add
inc
cmp
xor
jp
cltd
jl
dec
add
hlt
out
fbstp
stos
mov
or
add
inc
std
jo
loope
and
add
leave
in
dec
push
imul
xchg
mov
sub
test
cmpsl
pop
add
outsb
jg
xor
mov
and
push
jns
jle
push
ficoms
push
jge
mov
mov
insl
sbb
scas
add
cmp
jo
jnp
ret
push
movsl
fcomip
mov
add
cmpb
mov
rcrb
dec
push
pushf
jns
jg
dec
xor
or
xor
push
lods
imull
pop
rclb
inc
cli
lods
repz
jno
scas
or
or
jnp
pop
adc
mov
mov
mov
movsb
inc
sub
cmp
dec
cmp
push
lret
fstps
inc
rcrl
jae
or
adc
inc
push
ljmp
cwtl
fnsave
mov
push
mov
xchg
sarb
loopne
out
inc
push
jmp
je
out
mov
mov
out
or
fstpt
mov
mov
pop
lods
pop
mov
pushf
shll
and
inc
adc
fst
and
aas
imul
sub
or
add
inc
or
les
jg
test
movsb
pop
out
and
and
clc
inc
jecxz
mov
dec
test
dec
fs
and
inc
inc
sbb
movsl
cs
es
iret
pop
outsl
lds
std
in
pop
cld
sub
pop
repz
jo
xchg
push
inc
cltd
movsb
aam
push
or
daa
inc
shrb
push
xor
lcall
movsl
cmp
bound
gs
inc
xlat
jbe
int3
push
dec
xlat
fidivl
imul
add
cwtl
add
jo
pop
or
or
gs
loop
mov
pusha
mov
add
fwait
add
pop
insb
mov
xchg
add
lret
lods
sbbb
mov
sbb
lods
and
cmp
shl
cmp
mov
xchg
ror
lds
mov
movsl
add
push
mov
imul
ret
pop
movsb
jg
lock
xchg
sahf
stos
add
fwait
ljmp
jg
push
lods
dec
ds
test
mov
std
data16
lods
imul
lock
popa
xchg
sub
cmpsb
dec
aad
dec
pop
push
jp
jge
nop
and
jb
jp
ret
loopne
inc
testb
sub
sub
pop
push
stos
inc
pop
rorl
mov
pusha
data16
jnp
pushf
scas
out
sub
inc
mov
mov
outsl
sbb
cwtl
and
lds
lock
into
ja
clc
stos
mov
fisttpll
je
and
mull
lea
shrl
stc
push
dec
dec
mov
xlat
cmp
add
and
notl
stc
mov
mov
and
shl
push
fs
insl
mov
lcall
cwtl
lock
data16
jo
xchg
push
jno
mov
add
fsin
shll
push
pusha
mov
mov
sti
mov
fwait
pop
xor
xchg
xor
push
pop
movsb
adc
es
jl
pop
pop
test
sbb
mov
cmpsl
jecxz
sub
jns
fisubrl
sbb
mov
out
xor
sbb
les
fisubrl
sbb
add
jne
insl
sub
push
add
mov
pop
fildll
push
xchg
inc
xor
cmp
xchg
movsb
fnstcw
das
repnz
cmpsl
rorl
xchg
nop
mov
in
sub
aam
sbb
cmp
gs
ja
test
jge
les
std
sbb
pop
xor
pop
fs
nop
mov
inc
cmpsl
imul
lret
clc
test
jg
jbe
sub
mov
sti
xchg
mov
jbe
outsl
ficomps
and
push
jnp
push
popf
rorb
pop
jmp
and
jb
popa
mov
xlat
outsb
fisttpll
lea
mov
sbbb
les
insl
loopne
lret
adc
test
or
cwtl
xchg
insb
jno
or
xchg
imul
repnz
ljmp
stos
cli
shr
jno
pop
hlt
inc
lcall
and
into
cwtl
mov
jp
add
and
sub
jecxz
test
jmp
sub
xchg
outsb
scas
leave
jnp
jp
jmp
dec
jl
int
or
add
mov
mov
test
push
in
mov
push
inc
pop
dec
fsubrl
out
xlat
in
das
mov
inc
in
inc
mov
and
dec
scas
mov
icebp
stc
inc
xlat
push
idiv
sbb
ffreep
pop
adc
sarl
jg
shr
pop
sub
andl
ret
sub
pop
lock
add
mov
das
addr16
outsl
scas
adcl
cmp
fldcw
test
pushf
xchg
sub
push
and
and
jmp
push
sub
add
fimuls
sbb
aaa
sub
movsl
push
fsubl
fmull
in
fsub
xchg
and
and
mov
inc
xor
mov
test
pop
inc
into
or
cmp
mov
mov
lret
mov
xorl
add
in
loop
fbstp
adc
pop
push
sti
repnz
cmpl
imul
pop
mov
test
jne
leave
pop
hlt
cli
std
and
sarb
mul
sahf
sahf
ret
outsb
test
pop
xchg
call
loop
cmpsb
jle
dec
xchg
repz
adc
mov
jp
nop
mov
lahf
ss
jecxz
cmp
dec
xchg
jle
or
push
push
imul
adc
dec
push
sti
push
push
test
ljmp
xor
inc
out
or
mov
mov
in
mov
loopne
in
test
bound
sbb
pusha
mov
mov
mov
inc
shrl
xchg
pushf
mov
inc
add
scas
mov
sbbl
add
inc
add
xor
out
jg
lahf
mov
sub
push
mov
pop
test
adc
xchg
cmp
or
rcl
pop
sub
push
lods
inc
dec
sub
lret
or
insb
jge
cs
and
pop
cmc
inc
into
popa
pop
add
mov
cmp
scas
cld
insl
shrb
daa
push
insb
imul
xchg
ljmp
outsl
call
ffree
lea
je
dec
dec
sarl
sbb
outsb
add
push
sub
ficompl
xchg
mov
lods
pop
dec
jmp
test
lods
pop
mov
xchg
test
dec
jp
outsl
or
or
lret
pop
aam
adc
fnstcw
popa
push
call
push
inc
outsl
inc
sub
das
sub
xchg
mov
inc
mov
nop
mov
pop
xchg
jmp
jbe
push
or
dec
mov
data16
add
dec
cld
sti
or
push
adc
cmp
xchg
mov
pop
mov
pop
cmp
jp
into
mov
or
notb
mov
pushf
jg
push
xor
inc
into
xchg
mov
fs
aaa
pop
sub
mov
add
or
pop
lret
sub
shr
push
gs
dec
scas
inc
sarl
icebp
and
repnz
pop
sub
xchg
hlt
or
movsl
dec
jnp
jge
enter
xchg
or
pop
pavgb
lcall
fwait
xchg
inc
inc
inc
mov
lds
mov
inc
adc
leave
addr16
and
push
div
iret
jnp
add
cltd
stos
push
je
xchg
xlat
push
and
jnp
and
inc
cmp
inc
add
test
je
dec
dec
test
fsubl
dec
adc
test
cmp
adc
mov
jnp
loope
aas
push
inc
movsl
pop
je
cmpsb
pop
icebp
xlat
frstor
mov
sbb
push
setae
addl
mov
dec
cmp
dec
jo
cld
daa
sbb
dec
imul
popf
clc
pop
dec
add
and
stc
inc
iret
pop
xchg
sahf
or
iret
mov
push
ret
movsb
in
nop
push
divl
mov
test
mulb
mov
push
sub
inc
lret
fcmovnb
dec
adc
xchg
lds
sub
pop
shl
mov
in
pop
les
cmc
pop
pop
lret
roll
xor
mov
ret
pop
les
negb
int
pop
inc
add
lds
daa
mov
jae
aaa
fwait
sub
xchg
and
pop
xor
mov
mov
or
push
or
leave
sahf
jp
mov
cwtl
mov
mov
leave
loopne
sub
pushf
lret
mov
pop
std
cmp
cld
sub
daa
loope
jns
call
dec
lods
adc
cmpsl
faddl
sbbl
mov
adc
fcomip
and
jb
xchg
lcall
jecxz
aas
ss
cld
hlt
jmp
cmc
testl
lcall
imul
inc
and
add
popl
mov
adc
and
movsb
cmp
jecxz
xchg
repz
call
andb
neg
pop
mov
enter
or
js
pinsrw
std
hlt
xchg
outsl
jmp
sahf
push
stos
mov
fldt
mov
mov
cmp
gs
pop
xor
pop
aas
mov
jcxz
rorb
in
push
std
mov
faddl
jae
jae
dec
xor
xor
add
je
or
mov
insl
push
inc
cmp
and
xor
pusha
push
movsl
cmp
xchg
push
imul
jnp
xchg
dec
dec
lcall
in
mov
jne
jmp
jae
add
inc
fisubrs
cmp
jle
andl
mov
call
int3
fs
lock
fwait
lods
mov
stc
adc
push
add
xor
xor
adc
pop
lret
test
arpl
jne
lcall
push
add
in
mov
cmpsb
push
pop
pop
pop
pushf
xor
test
loope
dec
in
stos
in
cmp
test
xor
mov
test
sbb
arpl
cmp
mov
push
shrb
jne
cmp
inc
adc
mov
or
imul
pop
movsl
shlb
mov
gs
inc
pop
fidivrs
pop
faddl
or
bound
fmul
inc
xor
bound
out
dec
orl
dec
ds
testl
cld
outsl
add
push
cmp
mov
sbb
ret
sbb
js
mov
sub
daa
outsl
or
sbb
cmpsb
std
icebp
xchg
xchg
jns
inc
adc
cwtl
outsl
ds
cmp
enter
mov
dec
push
mov
ljmp
je
das
mulb
pop
rol
dec
in
in
inc
sbb
add
add
cmp
xchg
les
sbb
pop
pop
cmp
inc
sub
dec
push
cmp
faddp
mov
xchg
std
testb
xchg
dec
and
test
inc
int
sar
adc
mov
mov
loop
push
sahf
push
mov
mov
sub
inc
xor
outsb
in
repnz
les
adc
mov
xor
push
xchg
call
int3
add
add
fwait
lahf
test
adc
jae
in
jae
push
data16
ds
cmp
adc
ss
test
pop
testl
lds
jo
lock
dec
jecxz
popf
ss
imul
and
pushf
sahf
inc
sub
imul
stos
jbe
jnp
jae
mov
jg
or
mov
sub
xchg
mov
out
sti
loope
jne
out
xor
lret
pop
jae
and
adc
in
std
pop
test
fyl2xp1
and
inc
or
xor
lret
xchg
sub
sbb
test
popa
mov
test
inc
cwtl
rol
stc
fwait
aas
push
fsin
cmp
sbb
leave
test
mov
subb
adc
jle,pn
inc
cld
int3
and
push
iret
inc
jne
lcall
arpl
cs
mov
mov
fwait
mov
fsubl
adc
jb
int3
movsb
jg
pop
jo
push
push
inc
sbb
xor
xor
mov
sbb
add
pop
adc
pop
hlt
xor
ficompl
jnp
faddp
cmp
jno
arpl
jg
jb
ja
daa
shl
pop
imul
shl
cmp
fsubl
sahf
leave
jmp
jns
adc
add
xchg
push
push
fidivrl
pushf
out
pop
fwait
and
lds
ljmp
pop
div
inc
fstpt
cmc
pop
jl
sar
mov
mov
push
mov
xor
sub
clc
inc
ret
clc
xor
cmp
aad
sysret
cmpsl
sti
setns
xchg
in
or
stos
adcb
push
xchg
mov
stos
insb
adc
stc
mov
out
sbb
notb
test
fldl2t
in
jl
xlat
loop
setle
xchg
xor
cmpb
popf
push
and
pusha
and
pop
int3
jg
adc
adc
jp
or
xlat
dec
cli
jno
fcoml
fnstenv
aas
insl
mov
pop
divl
imul
popf
jo
mov
loop
mov
outsb
xor
jb
push
inc
cmpsl
in
xchg
fisttpl
jp
jns
lcall
push
mov
pop
pop
cmc
lods
jge
shrl
lods
cs
add
outsb
sub
inc
lods
imul
sbb
xor
scas
fstl
arpl
and
inc
jl
orb
jp
enter
loopne
dec
sub
add
lods
lret
cvtps2pi
pop
mov
enter
xchg
daa
cli
rolb
sbb
and
test
mov
inc
pushf
xlat
push
xchg
xorl
push
inc
out
cmpsl
aas
clc
stos
mov
inc
inc
fisubl
gs
jno
sahf
fnstenv
inc
inc
rcll
hlt
addr16
jbe
imul
xchg
lock
push
movd
sbb
dec
or
jnp
sbbl
and
mov
push
pop
in
adc
adc
pushf
insl
dec
insb
mov
popa
fsub
mov
bound
ret
sub
lret
lock
xor
sub
fldenv
mov
sub
xchg
dec
jecxz
mov
inc
sub
out
ficomps
lea
xchg
in
stos
lahf
dec
cmp
and
in
pusha
out
int3
xorl
shll
pop
loop
leave
jecxz
cltd
jecxz
aad
push
push
mov
andb
scas
fisubs
scas
xor
cmpsl
test
jecxz
jle
cltd
std
adc
xchg
das
lock
nop
and
test
inc
inc
mov
dec
xchg
inc
xor
inc
pop
lahf
mov
cmp
pop
hlt
push
add
out
mov
mov
or
xchg
andl
jbe
adc
push
gs
push
pop
out
repz
outsb
or
pop
xor
das
or
add
xchg
mov
push
insb
mov
and
mov
aaa
mov
xorb
in
and
pop
xchg
adc
inc
push
xor
pop
cmp
add
or
leave
mov
xlat
adc
mov
adc
es
mov
cli
or
sti
sub
jp
mov
cs
lret
dec
shrl
xor
mov
sub
pop
in
lods
mov
mov
push
jbe
sbb
sbb
ret
sub
push
popa
and
iret
aas
fwait
xor
jnp
paddsw
xor
fldt
xchg
sbb
ss
jp
sbb
rclb
out
pop
adc
nop
mov
xchg
xor
test
and
shrl
mov
mov
mov
pop
lret
fnsave
fs
jb
xchg
mov
lahf
repnz
mov
add
push
mov
jl
repz
sbb
aas
shr
mov
xchg
and
repz
shlb
jg
mov
lcall
xor
nop
daa
sub
decb
inc
scas
pop
mov
loop
dec
popa
xchg
test
fadds
and
mov
add
ljmp
mov
fldenv
sbb
jae
cmpsb
jns
outsl
pop
sbb
test
cmpsl
dec
pushf
sbb
into
mov
mov
lret
dec
fsubs
test
fsts
push
cmp
jmp
xchg
jecxz
test
and
lret
je
add
bsr
mov
orb
int
xchg
or
test
jle
clc
mov
addr16
icebp
pop
popa
mov
xchg
jbe
jns
out
lock
outsl
pop
sarl
popf
stos
dec
jmp
rol
inc
push
inc
out
mov
push
dec
cmp
pusha
and
jbe
test
test
das
idivb
xchg
add
rclb
inc
lods
clc
stos
daa
adcl
inc
fxch
pop
pop
push
sub
pop
lret
imul
cmp
test
push
hlt
repz
lret
xlat
fidivl
and
shll
popl
adc
sbbb
sbb
cmp
sub
sti
cltd
into
enter
scas
xchg
aas
mov
add
stos
les
xorl
pop
xorl
mov
pop
adc
jbe
ret
pop
lcall
in
pop
adc
push
or
mov
jns
ret
mov
jno
jae
insl
gs
repz
ds
outsb
incb
ret
test
sbb
inc
pop
pop
shrb
push
lcall
pop
in
rol
mov
je
pop
xor
and
popa
add
in
dec
lcall
test
into
cmp
mov
mov
adc
frstor
inc
fs
std
xchg
inc
push
cmp
lock
out
xor
int3
arpl
mov
fst
addr16
sub
mov
fsubl
inc
sbb
call
xchg
jne
mov
inc
clc
inc
pop
sub
pop
repz
repz
in
inc
or
add
out
test
lods
test
dec
or
sub
xor
cmp
stc
mov
gs
push
scas
enter
pop
add
je
dec
mov
fstpl
aam
lods
jge
push
jmp
push
cs
outsl
inc
pushf
adc
cmp
push
mov
int3
ret
cmc
xor
dec
lahf
jns
es
cli
dec
inc
bound
sub
sub
iret
orb
les
mov
cmc
loope
lea
fs
inc
xor
int3
xor
scas
xor
dec
jg
jnp
cmp
lods
mov
cmc
inc
pop
fsts
adc
mov
daa
les
adc
dec
sbbb
int3
xor
push
lea
icebp
scas
loop
mov
push
sbb
add
sbb
xor
cli
dec
andl
jecxz
xchg
les
sbb
add
aad
sti
xor
xchg
sub
gs
loop
xchg
mov
jmp
mov
sbb
adc
add
jb
or
cld
icebp
pop
in
push
and
and
mov
or
in
inc
pop
pop
xlat
imull
mov
xchg
sub
sub
insl
pop
xlat
outsb
xchg
lea
mov
mov
push
add
lods
cs
cmp
xor
imul
sbb
mov
jl
xor
or
hlt
mov
fsubl
imul
inc
fildll
jge
rorl
jns
mov
shrb
loopne
pop
cmp
and
popa
inc
in
ret
jne
int3
inc
mov
or
mov
jmp
sti
sbb
testl
ss
lock
xchg
cmpsl
test
jbe
mov
mov
jl
adc
mov
daa
xlat
add
cli
pop
mov
jne
shll
sub
shlb
out
cmpsb
les
ficoml
cltd
pop
adc
testb
subl
add
dec
or
pushf
ja
or
mov
mov
jp
fstpt
and
cmp
ljmp
inc
xor
adc
mov
nop
andb
mov
mov
inc
dec
pop
adc
sarl
jp
add
cmp
xor
mov
cmp
pop
adc
and
or
jb
fdivrl
sbb
push
inc
outsl
xor
adc
stos
sub
xchg
in
sarb
pop
jno
xor
ja
stc
rclb
inc
lods
jbe
or
dec
scas
cmp
lds
rorl
pop
xchg
sub
movsl
inc
je
repz
clc
dec
push
fisttps
jb
xchg
dec
das
clc
repz
push
mov
fiaddl
sbb
scas
fiaddl
mov
pop
scas
add
mov
pusha
divl
les
dec
cwtl
sbb
sub
fstpt
arpl
push
leave
mov
je
ljmp
add
stos
sub
pop
push
loop
mov
push
iret
push
sti
or
dec
push
xchg
xorl
int3
repnz
sahf
data16
xchg
int
and
repz
mov
sbb
ret
popa
rorb
outsb
rorl
lret
pop
mov
clc
xor
fwait
sub
cmc
lock
mov
pop
in
inc
std
mov
sub
and
mov
push
dec
pop
jbe
adc
xchg
jae
cmp
cmp
dec
pop
cmp
push
cmpsb
sbb
push
cmc
mov
nop
mov
and
fnsave
cmpb
insb
jle
cs
pop
loope
std
dec
lret
sbb
sbb
repnz
fldl
sub
jle
test
popa
inc
pop
daa
repz
aas
aad
icebp
inc
sbb
ret
lret
gs
mov
in
push
insb
stos
or
fiaddl
sub
push
fistl
shr
repnz
pop
pop
ret
aam
push
fmul
dec
gs
mov
nop
das
ja
jb
jno
cs
shll
int3
sbb
mov
sti
inc
cltd
xchg
adc
pop
cltd
cmp
jecxz
xchg
data16
outsl
push
mov
sbb
or
loop
aas
jb
pop
pop
pusha
cmp
adc
cmp
stos
ss
insl
push
inc
fisttpl
repnz
das
adc
outsb
mov
div
mov
ret
jno
gs
adc
mov
add
es
xchg
iret
jb
mov
rorl
or
xor
or
lds
decb
fcmovu
in
mov
sti
repnz
cs
lahf
push
push
loop
mov
pop
inc
fsubs
or
cmp
mov
cmp
mov
stos
jg
pop
int3
mov
xchg
xor
or
ficoms
pop
inc
pop
mov
pop
jno
and
icebp
test
adc
stos
lret
push
aaa
in
inc
push
adc
xchg
inc
outsl
enter
cmc
mov
les
xor
test
movsl
sbb
scas
lea
rcl
jae
dec
jg
jle
cli
xchg
mov
mov
or
test
rorl
push
mov
pop
push
push
mov
and
dec
dec
movsb
inc
fucomi
jae
mov
xor
shrl
outsl
or
jle
test
sub
inc
gs
shrb
int
inc
sarl
std
es
inc
sbb
add
mov
adc
dec
nop
dec
sub
sbb
leave
jo
lcall
ffreep
mov
inc
bound
orb
fisubrl
dec
mov
mov
enter
mov
dec
int3
cmp
in
jno,pn
and
inc
pop
xor
sub
add
xchg
xor
and
inc
sub
scas
pusha
mov
mov
jle
and
sub
cmp
mov
shll
ss
ljmp
jnp
loope
cmpsb
mov
adc
adc
js
cwtl
xor
add
aam
or
adc
mov
inc
in
cs
or
push
push
pop
xchg
jge
fs
mov
in
jmp
or
pop
sahf
pop
dec
push
sub
repz
vpmaxub
in
cmp
rcrl
cmp
or
mov
in
rcrl
mov
sub
inc
push
stos
jp
sbb
cmp
dec
push
pop
xor
int
leave
loop
lret
addr16
jmp
mov
arpl
fcomps
push
into
mov
ficoms
les
outsl
ljmp
push
mov
fcmovnb
or
mov
movb
pop
lret
orl
and
in
clc
xchg
push
roll
shlb
jne
sahf
imul
and
sub
sbb
inc
xor
nop
push
repz
cmpsl
movsl
cld
lds
loope
xor
lds
lods
cmp
ret
in
sbb
xchg
cmp
xor
dec
dec
nop
sub
popf
lcall
push
and
mov
mov
xor
mov
stos
ret
loop
cltd
sbb
mov
pop
jne
test
xchg
sbb
adc
jbe
fsubs
jno
test
mov
pusha
jbe
mov
enter
inc
cmpsl
daa
xacquire
mov
or
cmp
sbb
scas
lret
in
fwait
stos
xor
push
mov
rol
mov
and
inc
sub
flds
jae
push
popl
cmp
lret
insl
ret
dec
les
push
adc
bnd
jae
icebp
xchg
pop
subb
jnp
fcomip
mov
inc
imull
mov
xlat
pusha
icebp
fistps
jno
in
loop
add
data16
lret
pop
addr16
push
and
inc
mulb
out
sti
push
sub
and
cmpsl
cmp
fbld
outsl
or
sub
sbb
pop
insl
jg
jp
mov
adc
xor
xor
out
xchg
inc
outsb
sahf
xor
movsl
lds
sbb
out
pop
lcall
dec
in
adc
adc
movsl
aaa
into
fcoms
imul
push
outsl
scas
fld
push
push
mov
xchg
fnstenv
pop
fdivrs
cmp
or
sub
mov
xchg
mov
imul
mov
shll
xor
lods
mov
push
icebp
push
sub
cmp
mov
bound
dec
in
xchg
sub
repnz
add
cmp
out
cmp
ret
pop
fcomps
loop
mov
lock
pop
xchg
lods
sbb
xchg
lods
mov
hlt
sbb
inc
mov
dec
xor
cmp
and
mov
js
cltd
pop
iret
sbb
xor
mov
pop
insl
insb
imul
scas
rol
adc
dec
dec
cmp
pop
mov
dec
sahf
pop
mov
inc
lahf
xor
xchg
fs
sahf
jecxz
repz
fs
push
in
test
sub
daa
bound
or
add
add
cwtl
pusha
leave
add
or
mov
nop
daa
lcall
shll
dec
mov
mov
jb
adc
fisubrl
rclb
push
mov
in
loop
outsb
idivl
fsubrl
fists
xchg
mov
out
and
ds
mov
lea
mov
fisubl
jecxz
out
dec
mov
es
ror
jbe
lods
inc
clc
in
lahf
pop
push
movsb
filds
fwait
xor
es
fiadds
mov
cwtl
outsl
push
sahf
enter
cmp
pop
fidivrs
sub
adc
js
mov
push
xlat
lret
pushl
push
push
ds
fsubs
cs
rcl
mov
int3
lret
fbstp
inc
lret
sub
daa
inc
mov
scas
orl
test
mov
xchg
mov
cld
adc
lahf
add
jne
jmp
adc
std
and
jmp
add
imul
adc
adc
cmpsl
je
test
adc
or
xchg
cmpsl
push
fwait
mov
fnsave
pop
lods
aas
adc
and
mov
imul
sahf
aam
mov
sbb
in
mov
pop
imul
sub
iret
js
loope
push
sti
mov
mov
push
jno
push
icebp
sahf
sbb
nop
addr16
mov
jle
inc
mov
mov
add
mov
aam
jecxz
jg
sbb
stc
xor
inc
call
add
cli
pop
dec
xchg
andl
xchg
sbb
leave
cwtl
sub
call
xor
mov
sub
leave
cld
pop
mov
mov
out
push
jo
ja
dec
xchg
add
xor
lahf
andb
rorl
cmpsl
iret
test
adc
mov
aam
pop
xchg
ud2
mov
mov
mov
ret
xchg
mov
mov
push
xchg
mov
repnz
lcall
imul
cs
popa
andl
clc
popl
daa
mov
or
mov
add
pop
add
xchg
jmp
fimull
or
out
dec
mov
mov
xchg
add
ljmp
or
sbb
repnz
jnp
jo
pop
jo
mov
pop
out
inc
aaa
stos
xor
or
pop
cwtl
push
dec
push
pusha
mov
sahf
jnp
or
push
mov
test
imul
inc
adc
lods
test
adcb
rcll
test
sub
jo
add
push
or
lods
xor
test
andb
inc
pop
js
jb
inc
mov
or
pusha
enter
enter
scas
mov
jae
jl
add
xor
lods
cltd
cmp
mov
dec
or
xor
and
pushf
xchg
cmp
mov
jecxz
mov
push
sbb
scas
cmp
push
enter
pop
dec
pop
mov
clc
and
or
fs
shlb
pop
cmpsb
sbb
leave
xor
test
or
aad
pop
pop
pop
shlb
ret
pop
cmp
pop
cmp
xchg
lods
daa
in
cmp
dec
out
jl
in
inc
stos
popf
push
popf
bound
cltd
jo
and
lcall
push
xor
inc
in
ret
out
xor
repnz
cli
daa
and
mov
lock
push
cld
movsb
cmp
mov
add
mov
adcb
fstpl
into
addl
jnp
incl
ds
cmp
adc
cmp
cmc
fwait
mov
arpl
xchg
movsb
pop
fiadds
aad
outsl
and
xchg
movsb
into
and
jae
mov
mov
add
sub
xorl
pop
std
xor
filds
xor
cmpsl
mov
sbb
mov
test
outsb
int
fucomp
cmp
divb
jb
cmc
lcall
jne
xor
jl
push
or
insl
ljmp
sarb
push
cmp
xchg
dec
test
fstl
pop
mov
mov
cmc
mov
sbb
adc
cmp
adc
dec
inc
outsl
mov
jo
movsb
cmp
sbbl
mov
mov
push
cmpsl
loop
mov
inc
mull
mov
or
inc
mov
mov
insl
rcrb
imul
adc
shrl
data16
mov
cmpsl
xchg
ret
ss
testb
or
cmc
imul
adc
xchg
addr16
leave
jmp
ljmp
jp
fsubrp
stos
jbe
jmp
dec
mov
mov
lret
neg
bound
cltd
push
add
or
and
and
outsb
repz
jl
pushf
sub
and
and
out
and
out
jae
or
adc
imul
js
test
out
inc
int3
pop
inc
das
loopne
lea
adc
cld
mov
xchg
int
jg
mov
sub
or
insl
lcall
xchg
pop
out
cmpsl
mov
negb
ds
fcomip
rorl
pop
ffreep
mov
addr16
ds
mov
jge
enter
sbb
push
lcall
inc
xchg
mov
adc
or
mov
pushf
and
sbbb
popf
mov
outsb
inc
pop
ja
das
cs
dec
mov
mov
cltd
mov
mov
in
leave
pop
imul
mov
mov
mov
and
out
andb
or
mov
call
or
adc
mov
loopne
adc
xorl
mov
sub
lds
cmc
or
add
clc
jae
jmp
loop
in
dec
test
nop
add
pop
dec
pop
push
push
pushf
scas
movsb
xchg
mov
inc
int3
notb
gs
jle
xlat
imul
das
mov
dec
inc
cld
addr16
cli
call
fisubrl
leave
adc
cld
xchg
aas
shr
pop
test
test
dec
or
xchg
neg
sub
mov
sbb
fsubrl
push
lcall
dec
xor
je
idiv
aad
stc
sub
cmp
aam
ljmp
add
shl
ja
roll
add
push
push
adc
fwait
dec
dec
cld
cmpsb
mov
outsb
cmpsl
xor
xchg
mov
cli
mov
pop
xorb
xchg
mov
cmp
fcompl
gs
xor
ret
dec
sarb
lds
mov
xchg
push
insl
dec
rcr
clc
xchg
jmp
dec
pop
push
sbb
sbb
mov
mov
scas
dec
pop
ja
repnz
mov
sub
roll
shrb
and
sbb
mov
inc
adc
mov
cmc
fstpl
pop
adc
add
icebp
pop
mov
repnz
dec
and
and
jecxz
add
divb
outsl
lods
sbb
inc
jnp
xchg
mov
and
cs
cmp
mov
les
push
ror
loop
push
fwait
pop
inc
or
icebp
or
inc
push
adc
and
addr16
push
jmp
cltd
xor
scas
xor
push
sub
and
cmp
cmp
movsb
and
insb
in
jnp
aam
add
add
or
das
sub
cmpsl
xchg
inc
aad
out
dec
negl
movsb
in
lock
mov
cmp
or
xchg
sarl
mov
xchg
dec
int
rcrl
cwtl
sbb
mov
in
or
shll
cmc
sub
cmp
fadds
repnz
or
mov
pop
mov
movsl
cmc
or
xor
lcall
dec
fcomps
inc
sbb
int3
jne
sbb
sbb
aad
push
loop
xchg
dec
bound
dec
mov
cmpsl
xchg
jmp
sbb
xor
jg
hlt
sti
es
push
mov
jl
or
xchg
incl
add
mov
nop
dec
dec
pop
jg
stos
and
mov
rolb
pop
pop
imul
xchg
cmp
ds
mov
scas
cld
push
xor
or
cmp
dec
mov
rol
fwait
fwait
jns
mov
mov
repz
lret
mov
ds
and
add
cltd
loopne
ret
int
push
mov
sbb
cli
jmp
out
lahf
popl
test
cmp
sbb
cmp
fiaddl
sbb
lcall
rcl
out
mov
out
out
sub
cmpsb
dec
fsts
fwait
inc
sub
outsl
daa
add
jp
outsb
iret
and
nop
mov
add
testb
inc
psubusw
cld
out
prefetcht2
jl
and
loope
gs
stc
nop
das
xchg
in
cmp
cmp
iret
movsb
mov
mov
mov
mov
mov
ret
sbb
mov
mov
mov
jmp
lret
dec
mov
push
aas
arpl
mov
inc
inc
stos
inc
ja
in
pusha
pop
ror
and
mov
sbb
icebp
fs
dec
in
addl
or
jecxz
lods
mov
add
into
dec
cli
test
mov
mov
xor
outsl
push
adc
cld
sahf
pop
ss
mov
daa
jmp
shlb
or
inc
push
loop
loopne
jge
clc
imulb
aam
lret
fidivrl
lret
pop
ficomps
mov
ret
push
and
loopne
inc
push
cmc
cli
or
pusha
ljmp
mov
add
sub
dec
or
hlt
inc
gs
cmpsb
inc
cmpsb
les
cmc
test
xor
fadds
and
adc
sub
and
into
les
std
data16
xchg
pop
lret
daa
cmp
mull
in
subl
mov
and
outsb
jno
lods
loop
dec
stc
sti
jbe
push
mov
jmp
aam
jo
dec
in
xchg
cwtl
xor
mov
or
xchg
xlat
pop
fwait
mov
cmpsb
jbe
sbb
mov
scas
enter
dec
mov
push
mov
xor
fidivrs
adc
pushf
in
adc
xor
sub
mov
int
into
ja
xor
xorb
push
loope
xor
insb
xchg
mov
fldln2
lea
movsb
xor
dec
jmp
in
ret
lcall
and
stc
add
dec
gs
imul
addl
shl
mov
decb
inc
stc
sbb
outsb
into
push
popf
int
fdiv
fdivrs
mov
sbb
cmpsb
in
test
insl
int3
arpl
xchg
mov
dec
dec
cmp
call
pop
std
mov
jmp
or
adc
xchg
dec
jecxz
arpl
add
mov
sbbl
popl
enter
adc
mov
sub
rorl
out
loop
out
cltd
popf
cmpsl
fsubrp
inc
dec
in
mull
jb
and
sub
cmp
nop
cli
dec
out
xchg
xor
mov
mov
sti
push
add
lcall
gs
fwait
inc
out
dec
push
inc
inc
dec
xor
icebp
pop
repnz
pushf
aam
movsl
push
pop
insb
sub
inc
xor
sbb
shl
outsb
inc
jl
and
and
int3
push
scas
lods
inc
fdiv
xor
cli
jl
xor
push
add
jne
mov
and
xchg
fisttps
sbb
xor
loop
cmp
or
push
dec
adc
xchg
add
fsubr
inc
add
mov
lods
cmp
push
mov
pop
mov
and
pop
lret
cmp
cld
jae
out
lds
inc
in
jmp
mov
scas
sbb
xor
jle
jecxz
sbb
jb
push
mov
gs
mov
jae
xchg
or
or
scas
lods
dec
test
shrb
cmpsb
xchg
sub
mov
mov
adc
xchg
xchg
lret
lahf
mov
cwtl
adc
jb
sub
aaa
imul
roll
or
or
or
mov
arpl
xchg
sub
lods
xchg
insl
push
mov
fs
lahf
mov
sbb
ss
jmp
ret
popf
jbe
call
adc
push
popf
or
aas
ret
fwait
xor
mov
jb
fbstp
jno
sbb
lds
sbb
adc
xchg
add
push
jl
xor
cmp
cld
imul
fcomi
dec
loopne
xchg
pop
cmp
add
insl
in
ljmp
outsb
jne
mov
dec
xchg
add
sbb
popa
push
nop
or
cmp
out
loop
lds
xchg
jne
rorb
call
mov
scas
cmp
xor
push
call
das
dec
mov
movsl
lds
dec
testl
es
sahf
testl
notb
lods
sub
add
and
in
mov
sub
popa
pop
pop
in
test
pop
jmp
push
sbb
mov
xor
insl
add
xchg
pop
leave
xor
dec
pop
push
adc
aad
xor
mulb
das
sbb
js
stc
xchg
pop
fcmovnu
jnp
sbb
stc
xor
out
cmp
dec
jbe
in
push
imul
sbb
sbb
data16
jns
and
mov
jno
xor
lret
push
ljmp
xlat
scas
sub
mov
mov
iret
repz
adc
filds
repnz
jns
pop
xorb
push
mov
push
ljmp
cmpl
jo
add
mov
adc
add
jl
cwtl
das
mov
jmp
jecxz
scas
cs
dec
dec
in
cmpsl
rorl
mov
fisubl
addb
pop
dec
daa
cmpsb
mov
add
scas
sub
pop
pop
add
test
jb
insl
jge
mov
xchg
inc
xchg
ds
pop
dec
adc
and
int3
ror
sub
leave
rorb
jecxz
xor
mov
out
fsubs
dec
cmp
cmp
adc
push
push
call
sub
cmp
xlat
out
fsts
or
lods
dec
add
sahf
fs
push
xchg
add
xor
insb
int3
sub
xabort
cmpsb
inc
sbb
sbb
fmuls
jb
in
sub
pop
xor
inc
stos
add
dec
and
push
jge
test
push
in
daa
out
int3
pop
mov
sub
or
cmp
lret
aas
add
jno
cmp
loope
jle
add
jge
jecxz
stos
push
lock
sbb
ds
cmp
inc
sbb
cmc
dec
aad
mov
and
imul
mov
imul
stos
lcall
dec
clc
sahf
out
sub
cli
imul
mov
mov
and
push
add
rorb
insl
sub
cmp
cmp
pop
insl
mov
insb
gs
sbb
sbb
testl
dec
loopne
fsubrl
inc
cmpsl
movsl
pusha
aaa
enter
test
cmp
xor
cmpsb
xor
addb
jo
inc
loop
or
insl
je
lds
int3
sub
inc
pop
in
repz
xchg
mov
subb
cmp
inc
fistpll
pop
repz
xchg
test
sbb
mov
imul
les
pop
in
pop
out
or
mov
fsubl
test
rcll
xchg
mov
inc
arpl
xchg
sbb
fstl
and
mov
jns
daa
leave
jnp
fdivl
mov
in
sbb
jecxz
jle
push
mov
mov
gs
nop
arpl
sub
xor
lock
pusha
adc
ss
inc
test
pop
fwait
popf
js
pop
stos
adc
sbb
adcb
test
add
push
xchg
rorl
or
adc
popf
sbb
test
cld
sub
jae
int
mov
mov
cmp
mov
nop
lea
mov
stos
xor
in
test
sbb
inc
sub
cltd
pop
insb
lret
dec
mov
fldt
sbb
imul
xchg
cs
mov
pop
sub
mov
cs
sahf
pop
jmp
jge
lret
fdivrs
push
mov
sahf
cmp
nopl
adc
and
in
ds
roll
dec
and
addr16
test
pop
push
adc
idiv
inc
scas
inc
ret
outsb
push
push
and
std
push
jb
xchg
out
adc
xchg
sub
clc
ss
xchg
xor
cs
lahf
das
push
outsl
mov
rcrb
xchg
mov
mov
xchg
cmpsl
adc
addr16
sbb
pop
int
add
push
dec
push
mov
rclb
sub
pop
push
insl
xor
jae
jae
adc
or
cmp
stc
add
add
xchg
clc
xchg
test
popw
gs
ss
mov
sbbb
xchg
je
or
shl
lods
push
xchg
mov
inc
push
mov
pop
jge
xor
ret
or
sub
adc
iret
fistpl
xor
movsb
fistps
sahf
jecxz
xchg
sbb
dec
jp
mov
mov
xlat
addr16
movsb
pop
xor
je
sub
cmp
paddw
cmp
sub
dec
pop
and
popf
insb
gs
cmp
inc
sahf
xor
xchg
lcall
jo
mov
xor
shlb
fistl
sahf
push
ljmp
pop
mov
pop
cmp
cmp
cmpsb
decl
in
dec
pop
scas
mov
mov
push
int
data16
cltd
pusha
mov
jg
mov
movsl
pop
out
push
xchg
push
ja
or
fisubs
jmp
add
mov
push
add
push
in
mov
push
js
into
call
adc
lods
cmp
mov
mov
adc
loopne
popa
lea
shrb
insb
add
mov
sbb
sub
dec
imul
sbb
mov
push
pop
jmp
add
jmp
cmc
fidivl
andb
lcall
cmpsb
and
es
das
icebp
mov
outsb
pop
pop
or
pop
and
ljmp
or
jecxz
aaa
mov
popf
mov
lods
out
pushf
pop
nop
cmp
ds
xor
dec
pop
add
int3
jecxz
ds
add
cmp
je
inc
loop
lods
frstor
and
adc
mov
frstor
jecxz
mov
add
xchg
cmp
jns
test
mov
xor
cwtl
mov
cmp
jmp
inc
fidivrs
addr16
mov
pop
cmp
dec
pop
and
mov
or
mov
dec
shlb
cltd
arpl
shrb
cli
add
adcb
mov
rclb
and
push
and
pop
xor
lock
lahf
and
push
adc
cs
push
hlt
jmp
sub
xlat
sub
outsb
stc
adc
test
xchg
es
pusha
clc
mov
xchg
xor
fs
inc
dec
js
mov
xor
fimuls
mov
lcall
je
xor
int
fdivrs
ffree
fstps
pop
dec
lock
cmpsl
push
ds
cmpsl
inc
rorl
dec
dec
push
arpl
dec
mov
dec
shlb
adc
push
daa
xor
cmp
sbb
dec
cmpsb
aad
loope
das
jb
ret
pushf
xor
adc
jns
ror
mov
pop
std
xor
xor
addr16
cmp
jo
adc
mov
sub
arpl
dec
lahf
mov
dec
es
imul
cmpsl
xlat
and
dec
dec
outsb
mov
pop
out
push
lahf
push
push
jecxz
add
sub
sbb
cs
bound
fdivs
jae,pn
jbe
test
cli
mov
push
xchg
test
push
lock
ja
stc
das
xor
lret
jns
xlat
pushf
add
jbe
cld
outsl
xorl
icebp
mov
pop
adc
cli
adc
push
or
loope
mov
fwait
add
ficomps
pop
jae
gs
lds
ss
jmp
and
inc
movsl
sub
div
mov
push
mov
outsw
and
xchg
les
enter
mov
fidivrl
lret
sahf
sti
out
push
mov
in
pop
lcall
cmpsb
out
pop
mov
push
jnp
cwtl
xor
scas
xchg
cltd
inc
ljmp
orl
fucom
mov
dec
fdivrs
dec
sarb
xchg
cmp
shll
je
xchg
shl
xchg
stos
idivb
scas
or
lods
sbb
mov
jmp
sbb
int3
movsl
cltd
test
cmp
pop
mov
add
not
hlt
mov
xchg
dec
pop
in
outsl
mov
aaa
ficompl
mov
aaa
sub
insl
std
iret
popf
add
cld
pushf
imul
sbb
outsb
jl
cmp
adc
mov
mov
movsl
dec
cmp
test
int3
faddp
dec
lods
push
data16
xchg
ret
hlt
hlt
cmp
pop
scas
mov
data16
mov
cmpsb
adc
out
leave
out
ret
loop
push
add
adc
dec
aam
jno
shl
pop
add
inc
add
inc
dec
xchg
xchg
jge
xchg
ljmp
ss
mov
es
out
cmc
mov
inc
pop
idivl
aam
aad
pop
cmpsb
repnz
xlat
push
mov
dec
adc
imul
add
push
jbe
insb
mov
pop
mov
mov
inc
push
sbb
out
aam
js
loopne
iret
fwait
movsl
add
dec
std
or
xor
imul
in
aaa
xchg
xchg
out
jns
shrl
cmp
jb
sbb
adc
and
mov
or
cmp
or
mov
push
fwait
xor
iret
fbstp
loopne
dec
loopne
adc
and
dec
cmp
jbe
imulb
mov
cmpsb
jg
adc
fildll
adc
aad
push
mov
jbe
or
push
in
inc
sbb
adc
rcr
and
xor
fs
enter
loope
ficompl
mov
out
mull
bound
rcl
mov
xchg
daa
mov
popa
cld
ss
lock
packsswb
das
mov
add
mov
out
mov
shll
aam
fcompl
mov
bound
mov
ja
or
sbb
cmp
hlt
pusha
inc
int3
xchg
imul
xor
cmp
aas
ja
shrb
lods
sbb
sub
movsl
addr16
lret
aaa
cltd
out
inc
pop
cwtl
das
fs
int3
test
lret
jns
pop
push
push
cmp
and
xchg
jmp
jnp
mov
adc
mulb
enter
leave
aas
sti
cli
insb
xor
sbb
mov
mov
hlt
and
jo
loop
adc
jno
inc
movsb
jns
ret
mov
xchg
sbb
xchg
aaa
mov
imul
mov
adc
jl
mov
lods
outsl
in
push
ret
jg
and
jl
adc
inc
bound
add
lret
adc
popa
mov
lret
jb
daa
pop
cmp
adc
lahf
idivl
outsb
jl
jle
lock
test
addr16
xchg
sub
rcr
xor
sbb
add
push
and
mov
jae
inc
push
jns
cmp
lods
cld
cltd
xchg
aad
mov
mov
sbb
mov
and
sbb
out
loope
loopne
mov
mov
push
movsl
daa
in
mov
cld
vmovhps
dec
sti
fnsave
imul
dec
in
out
lds
movl
fidivrs
rorb
adc
loop
negl
leave
sub
repnz
add
test
mov
push
cli
enter
and
adc
iret
xor
adc
xchg
daa
bts
xor
push
push
loope
cmp
pop
jg
mov
add
cmc
sbbb
stos
jbe
and
xchg
jge
sbb
cmp
sub
mov
xor
push
adcl
mov
add
and
dec
dec
or
mov
sbb
sbb
pushf
data16
lahf
jg
dec
pop
in
xor
sub
add
sbb
jbe
xchg
je
inc
add
out
xor
add
sbb
dec
int
and
mov
adc
loop
add
jns
movb
push
xor
jecxz
sub
and
movsl
and
sbbl
push
inc
mov
dec
mov
xlat
repnz
test
movsl
insb
loop
pop
sub
fcmovb
into
fists
ficomps
enter
jno
gs
add
stc
push
pushf
mov
push
test
call
xor
sbb
out
xor
jge
mov
pop
lahf
inc
mov
out
das
cmp
mov
jmp
cmp
and
dec
in
jg
cltd
jbe
repz
pop
pop
and
sti
pop
jmp
mov
ret
xlat
and
jp
or
mov
adcb
xor
imul
push
xor
xor
jnp
mov
push
clc
fisubs
jecxz
loop
mov
sub
inc
inc
fidivl
fsubrs
xchg
ljmp
or
mov
pop
jno
scas
mov
jle
pop
mov
cmp
in
sub
dec
pop
add
sub
ss
movsl
cmpsl
lret
cld
pop
sub
stos
cmp
call
int
test
jnp
divb
rcll
xor
or
mov
push
mov
addl
jmp
test
push
repz
shrl
dec
stc
jl
push
push
or
mov
mov
sbb
jle
lds
fisttps
or
cmpsb
in
inc
in
in
je
push
sbb
push
inc
inc
mov
iret
xchg
or
mov
ja
enter
inc
jae
arpl
cmpsl
sub
mov
add
leave
mov
xor
aam
or
push
andb
pop
stc
daa
inc
loopne
cld
or
aam
adc
in
cmp
dec
jb
jo
imul
xchg
xrelease
push
lahf
inc
loope
fbld
xchg
push
add
cmp
leave
aas
subb
js
xor
sarb
ljmp
xlat
xor
jo
xor
mov
inc
dec
dec
aad
mov
sbb
in
push
adc
xchg
dec
mov
aaa
ss
pop
icebp
nop
or
pop
jle
dec
mov
add
add
jo
jne
push
pop
jne
xchg
cltd
or
mov
push
andb
jo
cld
push
jne
test
mov
repnz
jg
jo
mov
adc
xchg
shrl
out
aad
ljmp
adc
mov
cmpsb
hlt
cmpsb
jg
nop
mov
notb
bound
mov
fstl
xlat
outsb
sub
sub
mov
out
xchg
clc
xor
loop
pop
outsb
jb
into
mov
ja
std
popa
idiv
stos
in
ss
fisubrl
and
mov
sbb
loopne
sub
sub
jl
out
adc
cmp
adc
sbb
dec
dec
xorb
mov
xchg
mov
clc
test
mov
dec
pop
dec
test
sub
fsubl
fbstp
movsl
aas
dec
and
add
sub
shlb
hlt
sbb
lcall
in
cmp
mov
mov
dec
sbb
xchg
lds
mov
pop
adcl
dec
jo
adc
ds
inc
push
loop
dec
dec
leave
adc
stc
test
xchg
addl
bound
push
and
in
rol
dec
xor
leave
xlat
pop
fldl
jle
rolb
sbb
popa
jg
xor
inc
clc
push
leave
int
scas
inc
push
jge,pn
in
into
push
lods
mov
push
push
movsb
cmp
xchg
adc
pop
into
fs
or
cmp
sbb
lds
adc
xchg
jp
pop
lods
stos
push
test
inc
je
jle
shll
out
enter
inc
scas
data16
push
add
cli
das
cmp
xchg
inc
repz
mov
in
xorb
lods
inc
dec
push
push
jno
push
cmpsb
xor
xor
push
sub
xor
xor
sub
movsb
daa
ja
cmp
inc
cmp
mov
push
or
xlat
repz
into
jns
nop
repnz
sbb
call
sub
jno
pop
dec
add
sbb
mov
jns
jnp
clc
pop
cmpsb
test
sbb
sub
out
jns
pop
lea
test
sub
jbe
add
lods
lods
push
mov
pop
out
ret
adc
std
dec
jmp
mov
pop
add
adc
xchg
fldcw
cwtl
xrelease
mov
mov
ja
push
dec
jae
xchg
push
mov
je
imul
outsl
mov
adc
out
jno
pop
mov
dec
movsb
gs
js
and
mov
scas
cmp
mov
call
in
push
ret
mov
clc
sbb
es
adc
mov
xlat
in
les
mov
xor
testl
cmc
add
pop
pop
and
and
sbbb
aaa
dec
sbb
iret
mov
push
jbe
jno
mov
push
dec
aas
push
clc
push
pop
sbbl
orl
or
or
aad
pusha
int3
or
add
xchg
pop
sahf
mov
and
aam
add
aaa
lock
out
xor
dec
adc
dec
cmpsb
popf
cmp
sub
out
pushf
adc
mov
jge
jb
adcl
mov
mov
dec
fwait
sbb
inc
jo
cmp
lret
outsl
adc
and
jo
shlb
jb
notl
iret
cmpsb
xorb
jge
pop
in
test
out
bound
shlb
idivl
push
sar
mov
into
lods
aas
shrl
mov
pop
call
add
push
stos
sub
dec
xor
cld
aam
stos
adc
aam
mov
fcoml
xor
inc
pushf
inc
push
divb
out
inc
sbb
test
sub
cltd
stos
insl
jmp
jns
adcl
and
push
inc
int3
push
or
lock
jne
subb
sub
mov
mov
imulb
sti
mov
subl
mov
imul
xchg
rclb
mov
mov
xchg
pop
sub
push
inc
fsubs
add
enter
dec
sub
pop
movsb
decl
clc
add
sub
jno
ret
jl
shlb
lods
dec
add
out
out
pop
jmp
cltd
insb
or
mov
adc
jp
dec
nop
and
inc
cmpsl
stos
dec
shrb
clc
int3
adc
daa
pop
aam
fisubl
gs
fs
mov
mov
popa
in
xchg
cmpsb
xchg
dec
adc
add
scas
sub
mov
jb
cmp
lock
ret
xchg
mov
pop
sub
sub
lea
mov
rclb
push
test
shrb
dec
loopne
add
mov
mov
es
adc
es
arpl
push
orl
or
les
aam
loop
push
fs
arpl
fnstenv
push
or
lret
loope
adc
in
pop
repz
test
jp
xchg
iret
inc
lret
ja
cltd
mull
jbe
aas
pop
sub
pusha
pushf
scas
xchg
add
mov
fiaddl
jnp
xchg
cmp
sti
and
dec
fcmovnb
mov
push
in
hlt
rcr
or
outsl
rorl
outsl
inc
cmpl
or
xor
enter
push
pop
icebp
sbbl
jmp
fs
dec
mov
mov
aam
push
shll
dec
test
in
xor
xor
mov
lds
push
aas
dec
cmp
mov
mov
testb
or
add
mov
adcb
aaa
int3
inc
lods
js
das
notl
adcl
cmp
in
cmp
movsl
ret
mov
mov
sbb
outsb
ljmp
insl
pop
scas
push
insl
cltd
sub
repnz
aad
lcall
imul
inc
mov
in
inc
ljmp
or
sub
shrl
mov
popa
ljmp
in
decb
and
push
insb
ret
pop
in
fsubl
shrl
sbb
and
mov
or
jnp
xorl
cli
cmpb
dec
add
xchg
mov
sub
xor
or
rcrb
inc
lcall
xorl
rcrl
pop
outsb
pop
outsl
dec
jnp
lret
mov
and
jns
out
in
lcall
ds
fidivs
pusha
rcrl
test
inc
inc
fistps
out
cltd
adc
loopne
movb
jb
ds
mov
rorl
mov
dec
or
adc
inc
repnz
jb
jmp
inc
leave
pusha
jbe
xor
xchg
jb
stos
push
popf
mov
je
aam
xchg
cmp
add
addb
or
jle
cmp
jnp
xchg
mov
pop
xchg
pushf
push
cmpsb
jge
mov
jnp
out
ja
adc
ss
lcall
pop
and
sbb
cmpsl
lcall
xor
lock
mov
jns
daa
jle
push
decl
cwtl
mov
mov
fsubrs
xor
orl
and
pop
jecxz
mov
les
add
in
mov
push
mov
aad
cmpb
or
pop
ficoml
test
lret
add
sub
into
push
mov
call
inc
lret
ss
arpl
mov
andl
jo
ret
andl
sbb
cs
sti
xchg
dec
xor
or
outsb
sbb
enter
shr
cmpsb
and
pushf
cli
xor
sbb
mov
push
shlb
push
pop
stc
push
push
mov
fstl
pop
addr16
lea
mov
aaa
dec
lods
sub
adc
adc
adc
insb
and
lods
push
nop
pop
mov
sub
je
cmp
cmp
push
mov
inc
dec
movsb
cld
mov
push
xchg
or
mov
aas
in
aam
add
push
sbb
outsb
inc
cmp
and
jecxz
mov
pop
mov
lea
inc
incb
push
xchg
imul
adc
mov
cli
cs
mov
inc
outsl
stos
push
push
je
stc
inc
sub
lea
outsb
adc
pop
rclb
inc
jmp
xor
mov
lahf
int
in
inc
or
push
pop
pop
jo
mov
lods
aaa
mov
xor
movsl
mov
mov
leave
js
testl
scas
inc
out
xchg
mov
sqrtps
leave
pusha
cmpsb
adc
aas
lret
pop
cmp
or
mov
das
jno
shlb
ljmp
bound
adc
int3
std
xchg
incl
sbb
inc
dec
fs
jns
lcall
fdivrl
popf
subl
test
lret
mov
cltd
xor
stc
ret
inc
mov
mov
hlt
mov
mov
loope
test
je
js,pt
gs
cmp
cld
xchg
test
daa
push
das
icebp
mov
jbe
cwtl
repz
std
or
cmp
adc
pop
mov
mov
mov
iret
xchg
dec
test
xchg
and
xor
pop
scas
xchg
loope
mov
imul
mov
push
insb
cmp
test
add
cmp
js
inc
nop
ja
lods
insl
les
fisttpl
ret
mov
cmc
mov
xor
es
pop
lcall
test
aam
adcb
sbb
addr16
ret
add
inc
mov
push
mov
cld
imull
mov
mov
push
ss
sbb
test
xchg
js
or
cs
add
bound
mov
cmp
push
or
cmp
xchg
mov
shrb
jno
fnsave
cltd
xchg
sti
fbld
pushf
and
or
mov
xor
xchg
push
loope
xorb
xor
ficomps
and
inc
pusha
push
loop
mov
xor
sub
or
adc
repz
movsb
js
xchg
add
push
ds
xor
fcoml
lods
bound
hlt
xchg
into
popf
pop
sbb
xchg
add
cmp
aaa
push
add
and
stc
out
jmp
or
inc
aaa
ret
xor
pop
jmp
push
jno
push
int3
inc
pop
cmp
push
lahf
push
jo
add
dec
jmp
hlt
sbb
dec
sbb
xor
jne
lock
jae
cs
cmpps
call
jge
pushf
xor
jp
push
and
ss
shlb
and
inc
xor
int3
fs
adc
sbb
arpl
add
test
lret
loopne
add
outsb
or
sbbb
pop
dec
add
adc
and
out
xor
inc
jl
cmc
scas
sub
lret
lcall
cltd
and
cmp
es
outsb
cmp
cmc
push
js
push
negl
clc
shll
je
imul
dec
std
and
int3
sub
arpl
mov
mov
adc
push
xor
cld
bnd
lcall
push
mov
xchg
cli
pop
bnd
sub
aam
mov
pushf
xorb
icebp
mov
sub
aaa
inc
out
fs
mov
mov
xor
adc
imul
test
pop
xor
ljmp
mov
and
mov
mov
popf
shrl
mov
dec
out
int
outsl
aad
mov
dec
repz
mov
pop
stos
pop
scas
fnsave
jne
std
adc
adcl
mov
pop
das
sbb
roll
add
jp
push
dec
mov
and
mov
das
cmp
daa
mov
add
inc
stc
cmpsl
stos
cld
outsl
popa
dec
insb
add
xchg
jno
hlt
dec
mov
gs
cmpl
adc
and
call
mov
jae
fldcw
jae
and
lea
xor
cmp
mov
loop
add
repnz
pop
std
inc
push
insl
enter
pusha
mov
push
push
add
lcall
dec
test
mov
cmpsl
mov
pusha
mov
shll
inc
add
inc
pop
and
xchg
jbe
jg
call
stos
call
xchg
add
and
xchg
push
jne
adc
rcrl
ret
daa
sub
aad
fucomip
movsl
div
mov
pop
fstl
imul
aam
sub
mov
dec
sub
rcll
js
pop
lods
adc
jae
cltd
movsb
cmp
jp
into
or
and
test
test
adc
cltd
inc
mov
or
je
mov
clc
cwtl
dec
jge
jmp
push
dec
call
sbb
xchg
hlt
nop
test
xchg
nop
xchg
cmpsb
cmp
out
xchg
mov
out
fwait
fwait
icebp
shl
fsubrs
cmp
aas
add
fwait
dec
icebp
or
push
and
mov
arpl
inc
add
jp
ljmp
jno
push
std
xor
test
bound
scas
xchg
test
in
mov
popa
add
into
xor
add
adc
cmp
push
jno
xor
scas
or
inc
adc
sahf
jae
shlb
nop
pop
mov
jne
mov
mov
rolb
fscale
push
les
mov
dec
jecxz
jg
jmp
jno
xor
mov
xor
push
call
cmp
dec
pop
and
add
repz
daa
mov
outsl
xchg
lods
xchg
sbb
mov
pushf
pop
sub
push
movsb
cs
add
push
setb
js
fs
stos
cmp
mov
mov
and
mov
enter
adc
or
call
mov
fsubrs
bound
enter
test
ficoml
lods
or
lods
lods
insl
lods
cmp
mov
inc
push
xchg
inc
push
movsb
mov
xor
popa
push
fists
fwait
mov
testl
fcmovnb
mov
fildl
jle
loop
div
out
add
mov
push
loop
pushf
jg,pt
dec
jecxz
jge
mov
inc
pushf
mov
lret
mov
in
inc
arpl
jecxz
pop
or
into
sub
xchg
out
es
jnp
gs
lods
aas
repnz
enter
rcr
inc
jb
scas
cmpsb
shlb
insb
lods
pop
adc
adc
or
rcl
jbe
mov
mov
mov
idiv
loope
push
add
add
cmpsb
sbb
int3
mov
outsl
divl
push
std
sbb
mov
in
and
cs
adc
add
pop
pop
daa
inc
mov
into
gs
leave
mov
enter
add
push
adc
mov
orb
leave
adc
mov
dec
adc
sbb
fmuls
cmpsb
sub
pop
push
or
xor
test
js
cmp
cwtl
clc
mov
mov
enter
xor
mov
lods
lret
fwait
jg
inc
js
es
or
push
xor
push
sahf
nop
imul
xor
push
sahf
mov
stc
fstps
and
jg
dec
mov
into
push
scas
push
cli
mov
ret
sub
mov
xchg
fnstsw
lcall
dec
pop
pushf
mov
mov
sbb
testb
xor
arpl
jbe
fnstcw
push
push
sub
cmp
jmp
iret
int3
jae
enter
rcrl
jae
int3
pop
out
movsb
mov
cmp
int
cli
out
je
popf
dec
dec
push
idiv
clts
dec
movl
dec
dec
pushf
xor
mov
test
shll
sub
fwait
pop
imul
and
je
push
add
push
inc
mov
cmpsb
fnsave
cmp
pop
lret
dec
or
mov
lds
xchg
adc
roll
lahf
jg
fwait
sbb
rcl
out
jae
loope
sub
dec
lds
or
push
out
push
arpl
add
xor
ret
sti
and
repnz
add
dec
cmc
pop
sub
sub
ret
hlt
inc
lods
dec
adc
jne
cld
mov
lock
jbe
ja
rorl
mov
sub
into
enter
or
fimuls
jge
xchg
add
inc
pop
pop
push
lock
sub
fsubrl
and
and
dec
dec
popa
jl
push
cltd
mov
out
sub
pop
insl
add
jne
stos
cmpsb
mov
inc
jecxz
stc
scas
call
idivl
pop
insb
out
sbb
mov
pop
outsl
sub
inc
fldenv
pop
dec
cli
xchg
stos
and
movsl
icebp
sbb
les
xor
ss
ljmp
dec
cmp
or
mov
lahf
popf
out
jle
mov
in
pop
icebp
int
or
test
or
jb
rclb
push
stc
or
loope
loopne
mov
js
mov
ss
cli
pop
cmpsb
cmp
push
mov
jecxz
inc
mov
outsl
fnsave
je
lods
popa
xor
sbb
pop
inc
into
xor
cmp
adc
test
clc
sub
cmc
cmp
jns
fisubs
fwait
ljmp
test
stos
xor
mov
aam
popa
and
cmpsl
xchg
dec
adc
lret
out
jb
sti
shr
icebp
fucomip
imul
xor
nop
mov
shlb
pop
inc
or
inc
fsts
sub
fwait
ljmp
shrb
sbb
mov
pop
and
inc
lcall
and
std
punpcklwd
jmp
fistl
pop
dec
ja
iret
cmpsl
int3
sbb
clc
mov
inc
pushf
cmpsb
aad
inc
inc
and
xor
movb
mov
jns
jnp
fldt
sbb
shrb
leave
dec
sahf
jae
out
push
loop
inc
dec
stos
push
data16
jbe
fsubl
repnz
popa
and
push
je
and
and
or
loop
sbb
jecxz
lcall
inc
aas
inc
adcb
add
rolb
pop
cmp
push
out
and
xor
xor
dec
mov
push
xlat
sarb
mov
mov
insb
push
rol
aaa
insb
push
push
fidivs
jle
add
sbb
loopne
adc
cld
les
lods
mov
inc
and
mov
mul
cltd
push
mov
lret
enter
stos
cmp
sbb
jno
cmp
lret
call
dec
xor
sbb
rclb
mov
mov
push
pop
add
rolb
int
pop
adc
mov
sub
xchg
ljmp
sub
aam
cli
dec
mov
push
mov
sti
imul
mov
pop
xlat
cltd
and
push
lock
int
xchg
pop
push
es
add
jb
inc
sub
pop
out
xchg
and
aas
loope
addb
mov
jp
faddp
cltd
xor
mov
imul
adc
sbb
out
sbb
sub
dec
and
cmp
jecxz
out
cmpsl
in
jns
mov
push
clc
insb
pop
in
popf
std
addr16
and
std
int3
test
sbb
jecxz
in
bnd
neg
mov
xor
shlb
inc
fnstsw
pop
pop
int
mov
ret
test
ss
cmpsb
sbb
and
sti
call
cld
dec
loope
sbb
mov
pusha
fidivs
lea
in
xchg
leave
add
jb
call
dec
fisttpll
dec
gs
test
daa
inc
aaa
aad
mov
pushfw
xchg
ljmp
sub
jbe
xor
ljmp
mov
popf
sub
xchg
pop
mov
jbe
jge
iret
daa
arpl
mov
sub
cmc
fsubrp
rcrl
ss
xor
insl
add
js
test
jmp
lret
mov
jge
xchg
mov
les
lds
inc
lods
out
xchg
sub
popa
jg
call
lcall
push
mov
pop
sbb
rcrl
imul
test
scas
mov
iret
mov
add
and
and
addr16
xor
je
ss
jbe
daa
mov
mov
inc
cwtl
test
cmpsb
inc
and
mov
xchg
in
mov
and
arpl
fwait
test
pop
ret
xorl
fucomip
adcb
add
xor
lahf
shl
out
push
loopne
dec
lahf
jo
std
xchg
xchg
jno
pop
jl
pop
imul
xlat
mov
ret
adc
ss
dec
xor
js
incb
cmp
pop
adc
adc
mov
and
push
cld
in
das
je
add
lret
pop
sub
jo
imul
cmp
fs
adc
cli
dec
fisubl
jb
imull
inc
popa
clc
jae
pop
adc
js
test
pop
sub
push
call
xchg
sub
xor
lahf
addl
push
cltd
scas
mov
stos
in
push
xchg
bound
sbb
inc
ret
jmp
dec
xchg
mov
pop
adc
lahf
push
mulb
mov
ret
sbb
xchg
fsubr
iret
sbb
pop
js
cmc
sub
daa
xlat
out
sub
mov
jns
adc
lret
jbe
adc
inc
ss
xchg
outsb
push
ficoml
hlt
lahf
or
sarb
push
or
ret
xor
sub
dec
add
xor
outsb
inc
jae
xor
in
or
subb
mov
mov
jg
jnp
lahf
dec
pop
rcll
cmpb
popa
jg
pop
or
pushf
int
jge
test
mov
adc
inc
xlat
push
cmc
mov
lods
in
pop
dec
out
stos
sbb
stc
xlat
mov
adc
pusha
xchg
xor
sbb
jle
dec
cmp
pushf
push
adc
jecxz
jnp
and
call
or
cmp
adc
gs
inc
cmc
push
mov
iret
mov
popa
mov
sbb
lds
push
mov
loopne
fsubrl
loope
bound
dec
add
lea
xor
add
add
cmpsl
in
jb
xor
push
jg
cmpsl
ja
mov
mov
mov
mov
push
pop
imul
mov
or
in
push
mov
push
jle
add
stc
sbb
test
pushf
pushf
rol
cmc
fcmove
out
nop
pop
in
lods
outsb
jae
rolb
hlt
shll
inc
gs
xor
sbb
daa
xchg
js
int3
adc
scas
fsubrl
or
stos
jnp
jmp
xchg
add
jmp
fcoms
inc
in
loope
cmpsl
cwtl
pop
repnz
int3
lahf
mov
push
jns
out
fstpl
fisubrl
dec
jmp
aas
add
popa
sub
jae
div
stc
call
adc
in
daa
pushf
pop
loopne
in
sbb
push
ret
mov
ljmp
xor
in
std
cli
loope
xlat
sub
xor
xlat
xor
mov
pop
sub
fstpt
push
stos
cld
and
test
aas
mov
loopne
nop
ficoms
sahf
call
sub
loopne
mov
push
xor
fs
jge
mov
mov
jae
rcll
call
and
ljmp
cltd
aas
not
aas
jmp
std
and
cs
cmpsb
mov
stc
out
ret
jnp
imul
dec
movb
ret
ljmp
lcall
cs
and
xchg
pop
and
push
cwtl
test
adc
jp
sub
xor
out
jo
push
fcmovnb
or
mov
rol
lods
inc
stc
icebp
add
popf
stos
mov
aad
call
push
pop
movsb
mov
jne,pn
or
sarl
ss
es
cmpsb
and
outsb
addb
push
leave
jb
and
fimuls
push
aaa
jne
adc
mov
fwait
in
adc
scas
sub
push
add
imul
add
mov
jne
adc
mov
add
jp
fwait
test
int3
or
add
sub
push
mov
aaa
iret
mov
adc
xchg
insl
add
int3
testl
hlt
add
pop
pop
shll
fidivs
push
cmp
pop
cmpsb
mov
cwtl
lds
lret
sub
test
adc
repz
mov
adc
xchg
cs
aaa
cwtl
push
mov
jo
mov
xchg
dec
xchg
xchg
xlat
outsb
mov
push
leave
xchg
sbb
ljmp
add
jp
lcall
xchg
dec
or
or
xor
mov
aaa
fsubrs
cmp
mov
mov
adc
divl
scas
scas
pop
mov
pushl
pop
and
xchg
adcl
lock
sub
xor
jnp
dec
or
enter
leave
xlat
je
int3
addl
ss
inc
mov
jae
pop
fisubrl
outsb
outsl
lds
pop
cwtl
call
add
das
xchg
seta
push
je
xlat
mov
mov
aad
into
xor
jb
rol
sbb
mov
loope
mov
cs
jno
imul
bound
sub
es
mov
mov
test
mov
xchg
cmp
adc
rorl
pop
jmp
mov
out
mov
cltd
repnz
fisubrs
das
adc
pop
loope
inc
icebp
inc
pop
ficoms
dec
decl
jb
loop
adc
adc
fwait
cmc
sbbl
hlt
in
inc
push
fsubs
mov
imul
adc
sbb
mov
cmp
loop
stos
in
movsb
mov
je
and
sbb
into
xchg
adc
adc
cmp
sbbb
mov
pop
stc
out
scas
jb
repnz
les
or
movsl
lds
mov
lret
pop
push
ret
test
mov
ret
xor
dec
sti
mov
jge
and
pop
add
out
stos
fisttpll
sub
pop
mov
ficoms
ss
test
sarl
or
imull
sahf
sub
jp
in
lcall
mov
mov
scas
fnstenv
je
dec
sbb
rcr
jg
mov
pop
mov
adc
mov
gs
idivb
movsl
out
adc
cmp
insb
jge
int3
aaa
pop
addr16
repz
or
fbld
xchg
movsl
fdiv
sub
and
ds
daa
and
dec
loope
pop
pusha
jle
test
repz
and
imul
pop
fidivl
and
rcll
jb
ljmp
push
not
cli
je
cmp
fs
repz
cmp
mull
sub
nop
js
scas
mov
lret
add
aad
jae
emms
xchg
sub
pop
dec
jge
lret
sahf
aad
ret
cmp
push
sbbl
popf
popa
add
cmp
add
xor
jns
lea
adc
lret
aaa
sbb
push
cld
inc
cmp
sub
and
stos
push
adc
cs
loopne
cld
xchg
sbb
js
lea
pushw
fidivs
cwtl
cmp
adc
sbb
jae
cmpsl
fwait
xor
jne
out
cmpb
fbld
xor
test
cltd
lock
aaa
iret
cmpsb
dec
jecxz
adcb
mov
pusha
xchg
daa
stos
add
xor
mov
pop
jbe
xchg
in
add
testb
nop
stc
pop
icebp
or
js,pn
fwait
je
cmp
shrl
loope
out
ljmp
mov
mov
lcall
inc
fsub
scas
mov
xchg
mov
cmpsb
or
adcb
xchg
mov
insl
stc
and
iret
sbbb
push
add
push
lock
mov
aam
in
adc
fiaddl
out
leave
dec
loope
sub
insb
push
jo
test
mov
cmpsl
jecxz
aad
adc
mov
push
ds
loope
les
dec
roll
in
leave
lods
mov
push
sbb
sub
ljmp
dec
scas
inc
jp
int3
outsl
jbe
push
or
mov
adc
mov
adc
subl
out
mov
mov
sub
adc
and
cmp
inc
xlat
imul
pop
mov
lret
and
sbb
into
int3
jge
or
adc
adc
xchg
scas
leave
cltd
and
adcl
inc
dec
hlt
xchg
das
lret
sbbb
clc
or
sbb
sarl
add
testb
lcall
cmpsl
stos
xchg
into
popa
push
imul
jg
movsb
sub
xor
in
add
jno
pop
aad
lret
movsl
add
mov
cmpsl
mov
cmp
jnp
hlt
xchg
repz
in
stos
sub
sub
pop
and
sub
adc
or
addb
dec
add
mov
push
call
divb
mov
cmc
imul
adc
cmp
or
jo
inc
or
dec
push
sar
shlb
repnz
sub
cmc
and
pop
pop
push
dec
push
jo
jnp
mov
jnp
outsb
loope
cmpsb
out
xchg
xor
das
xchg
sub
sub
mov
cltd
push
xchg
shlb
clc
fs
mov
hlt
xchg
sbb
clc
jae
inc
aaa
into
jno
mov
outsl
movsb
int
jns
cmp
or
test
lret
insb
sub
push
cmp
test
dec
dec
xchg
movsl
dec
add
adc
mov
shrb
xchg
pop
push
test
mov
ss
and
cmp
enter
jl
call
and
stos
andl
aaa
shll
mov
cs
test
or
loopne
push
xor
xchg
mov
ja
fdivrl
push
stos
sub
out
cwtl
dec
fmulp
in
and
xor
movsb
repnz
pop
out
adc
stc
popf
sbb
inc
jmp
xchg
hlt
dec
es
sub
std
or
pop
dec
and
cmp
inc
inc
out
cmpsl
xchg
loop
je
mov
insl
movsl
mov
mov
fldt
sbb
pop
mov
inc
or
jb
cmpl
mov
mov
push
adc
jns
loope
jo
sub
aas
mov
stc
sbb
sahf
fwait
cli
dec
mov
jle
into
enter
out
out
out
lahf
sbb
xor
jg
test
das
pop
popf
push
dec
lds
or
xchg
in
stos
cltd
and
inc
pop
push
sub
push
je
leave
mov
aad
push
lcall
shl
dec
dec
and
xor
mov
sbb
push
fwait
les
and
push
or
out
rep
loope
mov
imull
repnz
cmp
sarb
sub
sub
or
xchg
imul
dec
ror
into
pusha
pop
cli
sub
mov
stos
mov
xchg
test
aad
sub
mov
arpl
mov
sahf
or
test
ja
jns
es
or
sbb
pop
mov
cld
out
jle
xor
adc
mov
stc
push
faddl
jecxz
dec
insb
and
adc
cmp
ds
fidivrl
rcl
enter
movsl
addb
add
add
fsts
je
inc
bound
iret
fidivl
cli
adc
gs
dec
int
bound
or
iret
cmpsb
fsubp
addb
sub
sbbl
or
pop
mov
dec
pushf
mov
adcb
mov
out
adc
xchg
or
adc
pop
push
pop
repz
sahf
or
cmpsl
xchg
leave
insl
sub
ljmp
int
dec
cmpsl
pop
lcall
mov
nop
sub
pop
shl
jbe
scas
fisubs
popf
jp
les
xor
mov
loopne
popf
pop
std
xchg
loop
inc
pop
and
mov
repz
push
sahf
mov
frstor
clc
sub
inc
sbb
fwait
cmc
add
inc
or
pop
xor
pop
cltd
bswap
and
sbb
mov
xchg
pop
es
out
in
cmp
out
jne
push
or
cmp
xor
scas
mov
cmp
sbb
andb
jb
in
xchg
inc
lret
clc
jo
cli
and
inc
sub
inc
mov
cmp
rorl
push
jns
stos
cmpl
sub
mov
insl
and
push
addl
push
stos
in
aaa
stc
cmp
xor
sub
clc
push
push
adc
outsb
xor
fisttpl
push
mov
mov
aad
test
scas
xor
sbbb
in
imul
mov
and
mov
add
outsl
fstpl
cmpsb
mov
cmp
pop
pop
ljmp
jecxz
mov
lods
fldcw
mov
inc
ljmp
xchg
jno
mov
rolb
repz
fwait
stc
jo
jl
inc
sub
testl
or
in
sbbl
mov
testl
pop
ja
sub
xor
inc
mov
cmpsl
cwtl
fsubs
aaa
int
sbb
push
push
pusha
cli
stc
and
push
pop
js
arpl
mov
push
push
std
inc
rcrl
in
sub
push
lods
pusha
in
xchg
dec
sbb
cli
cmp
cltd
imul
mov
cwtl
xor
testl
or
xor
inc
sahf
mov
and
xchg
add
dec
push
or
xlat
sbbb
and
mov
pop
cmpsl
xchg
pop
pop
jns
and
sbb
mov
pusha
pop
lahf
scas
add
mov
cmp
dec
sbbl
add
fwait
les
and
mov
mov
push
enter
inc
xor
js
xor
into
push
addl
sbb
pusha
test
adc
notb
hlt
mov
loope
test
adc
jae
sub
fiadds
cmpsl
ds
or
lds
add
leave
xchg
and
push
stos
roll
pop
lret
xlat
outsb
cld
and
in
xor
mov
dec
sahf
adc
cwtl
mov
mov
gs
notl
int3
loopne
jno
lahf
xchg
shlb
cs
push
loope
nop
mov
ss
aaa
fistps
mov
mov
fbld
adc
std
mov
adc
push
ret
jmp
js
lock
enter
sbb
imul
inc
add
lods
sbb
fidivrl
jo
rol
sub
cmp
testb
xorb
cmp
ss
lcall
cli
sbb
out
movsb
ss
add
xchg
pop
inc
inc
nop
mov
cmp
cmc
std
mov
and
out
xor
mov
ds
fcmovbe
jb
imul
sub
add
pop
dec
outsl
cli
push
sahf
les
sar
pop
repnz
lret
xchg
cmp
jbe
xor
sbb
mov
inc
ret
inc
xchg
jecxz
adc
adc
mov
xor
inc
aam
inc
and
sarb
mov
shl
enter
push
js
push
or
gs
mov
pop
lret
pop
mov
nop
xchg
arpl
jno
adc
cld
es
addr16
stc
je
lret
jmp
pop
and
cld
adc
adc
push
in
push
scas
push
jno
mov
mov
bound
daa
cld
xchg
lds
sub
jp
out
ds
rcl
cmpsb
xchg
daa
sub
call
mov
mov
mov
jo
hlt
rclb
mov
test
das
pop
in
push
mov
xchg
push
dec
adc
inc
div
mov
push
data16
sbbl
cwtl
fbstp
and
xchg
cli
inc
mov
ds
jmp
lods
loopne
pop
mov
mov
js
xlat
cltd
scas
xchg
sub
cmp
mov
mov
arpl
mov
jp
insb
jo
cmp
scas
mov
jns
mov
fists
movd
les
push
mov
mov
loop
daa
mov
add
dec
rcrb
adc
lods
sub
xchg
clc
stos
inc
inc
jo
fidivrl
sub
xchg
mov
cmp
out
adc
jecxz
or
pop
xchg
cmp
mull
push
or
mov
shll
pop
fsubr
xchg
daa
sub
pushf
xor
push
xchg
add
mov
fsts
out
dec
stos
sti
orb
jno
cmp
xchg
push
insb
lahf
or
or
bound
ret
jo
hlt
dec
dec
mov
out
mov
pop
or
sub
inc
loope
jb
inc
in
dec
lret
sbb
jl
or
outsb
mov
pop
mov
fisubrl
into
gs
incb
in
push
add
lea
sti
ret
push
movsl
ss
mov
lahf
mov
or
and
or
inc
inc
fnstenv
mov
aad
pusha
aaa
insb
dec
mov
aam
lret
xlat
pop
dec
push
call
inc
arpl
pusha
out
cmpl
inc
xchg
mov
pop
jmp
mov
aaa
insl
inc
mov
inc
aaa
and
cmp
hlt
mov
mov
movb
nop
scas
adc
aad
iret
sbb
scas
in
into
adc
push
push
sub
mov
loopne
mov
jne
jne
cli
push
mov
mov
cmp
mov
mov
outsb
dec
je
mov
sbb
or
pop
aas
mov
jmp
data16
lock
je
mov
dec
mov
push
mov
and
jmp
xorl
loope
jnp
jbe
push
in
js
and
xchg
in
push
add
mov
sarb
add
push
daa
not
in
stos
adc
lahf
subb
jbe
and
rcl
mov
repz
test
cld
xchg
jle
repnz
nop
das
jl
sbb
jg
movsb
xor
mov
lret
push
cmp
cli
pop
sub
jl
stos
fnstcw
mov
pop
scas
imull
int
cmpsb
adcl
inc
fstpt
push
pop
and
push
je
mov
fwait
outsl
sub
dec
mov
inc
imul
pusha
data16
cwtl
xorl
loope
or
mov
mov
sub
dec
das
jle
push
movsl
notl
inc
inc
cmpsb
in
popa
hlt
push
pop
push
jmp
outsb
mov
hlt
push
inc
pusha
sbb
and
fbstp
clc
mov
push
rcll
mov
std
jl
lds
imul
pop
outsl
loope
lret
mov
fbstp
fsubrs
sub
dec
push
fcomps
in
pop
mov
or
mov
daa
cld
push
pop
js
lret
mov
add
push
repz
stc
push
push
jg
mov
mov
cmpsl
out
cmpsb
sbb
xchg
push
pushf
lods
mov
out
andl
fs
fs
xor
les
lea
aam
and
addr16
xchg
dec
pop
dec
jecxz
xchg
mov
pop
xor
sbb
call
lret
je
jge
push
jns
mov
push
ret
arpl
scas
cmp
sahf
pop
hlt
repz
pop
sbb
push
js
pop
pop
repnz
shl
mov
gs
imul
popa
fidivl
movsl
sti
out
xor
push
lods
in
mov
gs
pop
or
inc
mov
js
jle
inc
jmp
pop
jmp
mov
fmull
pop
repz
push
cmp
cltd
sbb
pusha
sbb
mov
outsb
shlb
cli
cmp
sub
mov
jo
call
sbb
adc
rorl
inc
mov
fisttpl
xor
lcall
loop
cwtl
das
push
std
sub
das
jae
lret
flds
lds
cmc
int
into
lods
sbb
ljmp
mov
inc
mov
std
dec
in
outsl
das
adc
imul
test
mov
push
inc
cld
xchg
fnstcw
outsb
loopne
and
dec
popf
inc
decb
subl
xor
nop
ss
fcompl
loopne
lock
sti
push
cmp
push
int
sbb
fistpll
ficomps
fldl
lret
dec
dec
xchg
dec
pop
dec
out
scas
sbb
xchg
adc
sbb
push
mov
ficoms
push
addr16
movsb
repnz
jg
pop
outsl
adcl
dec
add
add
jnp
sub
jnp
dec
dec
cltd
std
jecxz
in
xorl
mov
xchg
or
popf
imul
imul
jmp
or
add
shll
inc
fldenv
cld
loope
inc
pusha
mov
jno
jae
iret
ds
sbb
repz
repnz
jp
das
pop
and
mov
xchg
xor
jecxz
aaa
bound
js
leave
stos
and
fsubr
testb
or
loope
pop
aad
xchg
jg
das
mov
dec
out
mov
sub
sti
insl
iret
hlt
inc
std
jno
dec
loop
xchg
sub
js
add
popa
insb
xor
xchg
test
iret
fwait
xor
cmpsb
lock
xor
mov
sahf
xchg
add
inc
xchg
sbbl
mov
loop
sbb
inc
cmpsb
nop
negl
mov
mov
cmp
mov
xchg
push
in
int
mov
add
aaa
add
pop
in
xchg
mov
popa
mov
pop
repz
ds
icebp
pop
cwtl
push
xchg
sbb
les
imul
jmp
lods
andl
gs
dec
xchg
sub
enter
scas
mov
mov
adc
jne
xor
mov
push
xchg
mov
add
sub
out
idivb
scas
pop
ja
jge
push
dec
sahf
xchg
pop
adc
mov
mov
addr16
jp
loop
mov
adc
out
iret
jle
lret
mov
movsb
adcl
sub
jnp
iret
loope
movsl
out
push
lods
test
or
lahf
js
adcb
loope
fidivrs
das
jae
add
mov
out
xchg
pop
cmp
shlb
fbstp
jmp
mov
out
fstpt
mov
xchg
add
jb
adc
test
xor
fwait
rcr
jo
dec
out
dec
test
sub
cwtl
cs
jnp
gs
mov
popa
insb
mov
mov
call
dec
andl
xor
mov
cmp
push
in
xor
jae
inc
inc
xchg
push
test
aas
mov
fldl
cwtl
or
and
mov
mov
shrb
fdivrs
int
and
push
in
cmc
and
loop
push
je
xchg
outsl
mov
sbb
dec
push
es
xor
mov
and
mov
loopne
add
adc
sarb
or
sbb
out
mov
or
add
test
sbb
pop
mov
xchg
push
pop
daa
inc
aaa
in
inc
inc
sub
int3
jmp
or
cld
adc
cmpsl
sbb
mov
std
xor
jge
ficompl
jns
push
loope
dec
adc
push
icebp
xor
or
push
xchg
pop
and
fucomp
mov
pop
lods
jo
loope
lods
dec
lret
data16
sbb
inc
lcall
and
mov
movsl
mov
push
sub
inc
es
pushf
jmp
fnstenv
dec
mov
cmp
aaa
jecxz
inc
xchg
cmp
ret
data16
mov
push
js
inc
aam
push
xchg
outsl
xchg
popa
jge
xor
jb
out
fadds
in
test
xlat
ret
repz
cmp
imul
int
into
gs
test
push
add
jmp
sbbl
mov
sub
xchg
cmp
inc
and
xor
mov
sbb
mov
push
jne
int3
arpl
xchg
and
in
outsl
fsubl
mov
mulb
inc
movsl
int
lret
int
scas
push
push
repz
jg
das
and
scas
rcll
pop
mov
andl
adc
mov
mov
mov
popa
lods
divb
mov
sbb
sub
test
jae
and
jecxz
fidivs
cld
aad
addr16
cwtl
sub
mov
push
test
and
mov
pop
lds
cwtl
inc
pop
inc
insb
push
es
stc
pop
insb
xchg
lods
jmp
pop
mov
jp
xchg
rcrb
mov
jns
fdivrs
mov
mov
dec
std
push
mov
cmp
fnsaves
test
sarb
sub
sti
push
icebp
jbe
xchg
pop
xlat
sub
xchg
pop
mov
pop
mov
jle
cmp
in
js
jbe
inc
imul
gs
push
movsl
repnz
pushf
adc
icebp
and
adc
mov
pop
inc
dec
sbb
cmp
icebp
jge
sbb
pop
mov
pop
mov
push
ret
or
popf
jbe
popa
mov
repnz
or
fnsave
add
and
dec
idivl
shll
test
scas
out
jge
jae
ss
mov
xchg
addr16
adc
out
inc
mov
lcall
arpl
dec
cmpsl
push
cmpsb
jnp
xchg
shlb
lret
fdivs
jge
andl
fistps
loop
mov
pop
mov
clc
push
jno
push
repz
fdivs
pop
sarl
adc
mov
stos
sbb
sbb
inc
imul
shrb
mov
and
inc
mov
cmp
jno
sbb
stos
mov
xchg
cmp
dec
and
lret
mov
mov
into
jecxz
shrl
shlb
push
popa
adc
das
add
iret
fs
shll
rep
pop
je
cmc
mov
arpl
adc
aas
or
pop
push
scas
inc
outsl
int
push
cs
cmc
push
sub
in
pop
aam
std
lods
cs
mov
cltd
sbb
stc
arpl
gs
inc
lahf
xor
xchg
imul
repnz
ret
ret
into
and
mov
stos
jg
shrb
add
adc
fsubrl
mov
sbb
mov
xchg
sbb
imul
test
pop
cli
cmp
loop
daa
in
xor
lds
out
rorl
es
movsl
jle
xor
add
add
pop
popa
mov
mov
pushf
mov
loopne
ret
push
es
pop
cli
sahf
jae
scas
adcb
sti
push
pop
jp
xor
lcall
mov
fmull
in
inc
jb
lahf
stos
imul
sub
aaa
movsl
inc
pushf
mov
dec
and
xchg
std
xchg
dec
jg
shll
cli
in
or
enter
cmp
mov
jmp
and
sub
cltd
xchg
ret
ficoms
popa
pop
adc
ljmp
subl
incl
and
bound
ret
xorl
jl
int
icebp
xchg
imul
aaa
mov
lods
mov
ret
pop
repz
cmp
and
shrl
fidivrs
aas
lcall
test
imul
inc
fbstp
hlt
add
insb
mov
lock
and
in
test
aam
ss
mov
mov
test
inc
push
sahf
xor
inc
ret
sahf
sub
test
mov
sbb
mov
or
mov
adc
setg
mov
xor
popa
je
pop
adc
and
xchg
adc
jo
sbb
push
sbb
mov
out
popf
xchg
ret
push
cmp
cmpsl
dec
cmp
dec
dec
push
xor
sahf
and
add
mov
hlt
mov
lahf
lods
pop
mov
mov
sahf
push
or
pushf
fsubrs
mov
xor
jmp
or
and
or
add
clc
movsb
leave
pusha
xlat
int
fistpll
cmp
cmp
dec
sbb
sbb
mov
arpl
xorl
xchg
pushf
mov
pop
icebp
xchg
cld
adc
cltd
mov
std
cltd
cmp
xor
adc
adcb
cmp
or
hlt
mov
stc
inc
sbb
add
cmp
xlat
sbb
xchg
push
cmp
movsl
cs
sub
cs
cwtl
das
test
push
or
jl
push
call
xchg
add
testl
inc
mov
cwtl
fwait
jno
test
mov
jo
popf
pop
in
mov
sub
mov
push
fs
lret
daa
adcl
dec
aam
shll
pop
hlt
adc
fbld
es
and
push
imulb
cmp
subl
fsubr
inc
xor
jge
mov
nop
xchg
out
add
fisubrs
sar
and
dec
les
dec
repz
cmp
in
xchg
out
dec
loopne
cmpsl
ja
add
or
cmp
pop
adc
sub
cmp
cmp
subb
xor
sarl
fstps
int
mov
push
daa
push
sbb
jnp
sub
xor
jecxz,pn
fxch
arpl
sbb
nop
or
push
sub
jne
les
shlb
mov
repz
mov
sarl
mov
and
cmp
scas
out
ljmp
jp
pop
rcrb
and
cld
push
cmp
inc
xchg
jae
out
cmc
mov
test
rcrl
cmp
mov
mov
dec
mov
or
cwtl
xor
icebp
ret
add
js
add
cmp
stos
push
jmp
dec
repz
fmuls
and
test
lret
fwait
test
es
cmpsb
and
sbb
xchg
mov
enter
mov
sahf
lods
or
push
mov
jo
cli
jne
sbb
ficoml
cmp
fistpll
push
push
in
test
push
adc
and
push
das
xchg
stos
xlat
mov
out
adc
and
dec
push
inc
lret
dec
lcall
inc
mov
dec
mov
sub
dec
sarl
add
dec
pop
les
adc
inc
push
inc
push
ja
push
xchg
js
cmc
mov
leave
dec
pushf
push
and
jb
call
testl
adc
aam
xor
int
mov
test
mov
int
out
or
add
xlat
jmp
sub
int
subl
push
mov
aas
add
jno
cmp
dec
jbe
jp
mov
mov
fistl
inc
hlt
cmpsl
mov
or
test
movsb
cmp
scas
cmp
fucomp
cld
lahf
insl
arpl
sbbl
xor
loopne
hlt
push
add
inc
add
xchg
dec
pop
cli
cld
test
gs
dec
jno
rcll
mov
jbe
cltd
popf
jae
ljmp
aas
dec
sub
shlb
mov
cmp
stos
shrb
sbb
xchg
cmp
imul
sbb
inc
pusha
mov
push
mov
les
cmc
mov
cmp
jo
cmp
xchg
cmpsb
inc
jb
mov
lcall
and
cmp
jb
lds
pop
cmpsl
shlb
push
sti
movsb
out
js
adc
jp
push
cmc
jns
sub
mov
call
hlt
mov
push
mov
cmp
pop
rolb
test
and
popl
rclb
inc
inc
subb
sbb
pop
out
mov
outsb
jle
add
add
xchg
push
ljmp
jb
outsb
imul
orl
cwtl
rcll
or
sti
fdivrp
pop
adc
jbe
xchg
call
and
push
jmp
pop
cmp
or
dec
and
xchg
cmp
in
xor
inc
xchg
jns
mov
xchg
mov
jns
push
xchg
test
mov
test
dec
jns
mov
xchg
sbb
mov
outsl
js
cmpsl
stos
cmp
test
mov
gs
js
fadds
cs
push
insl
dec
mov
dec
pop
ljmp
ja
sub
sub
iret
sbb
push
shl
out
xchg
pop
pop
mov
fisttpl
jle,pn
push
leave
add
mov
iret
xchg
leave
insb
andl
daa
mov
push
xchg
inc
sbb
inc
stc
lock
movsb
dec
mov
scas
and
inc
pushf
xor
cld
inc
mov
jg
xor
push
inc
stos
inc
inc
andl
mov
mov
popf
cld
push
mov
sbb
jne
push
scas
movsb
out
bound
inc
in
jns
mov
in
out
daa
cmp
bound
dec
dec
icebp
mov
sub
pop
std
pop
js
shlb
jl
or
sub
mov
call
sbb
hlt
jge
xchg
xchg
cld
mov
sub
push
dec
daa
adc
js
sbb
ljmp
inc
hlt
jl
sahf
fcoms
cmp
cld
dec
sbb
push
int
mov
aaa
aam
rorb
mov
cs
lds
aaa
rorb
rcl
aad
addr16
dec
pop
stos
xchg
mov
cmp
or
clc
aam
dec
sar
adc
loope
decl
aam
in
sbbl
or
and
push
in
insl
es
dec
xchg
or
jl
push
adc
mov
pop
std
pop
xchg
mov
test
jl
dec
femms
cmpsb
and
dec
pop
jno
cmc
fdivl
jl
js
loop
cmp
mov
enter
repz
addr16
leave
push
xchg
ds
mov
aas
mov
in
mov
out
ss
jmp
inc
push
adc
or
add
out
push
push
or
pop
adc
inc
cmp
lcall
sbb
dec
and
fwait
ds
mov
cmpsb
insb
test
sub
outsb
fists
les
jp
std
mov
shl
hlt
mov
mov
fisttps
daa
mov
cmp
flds
or
int
push
mov
add
inc
sti
mov
pop
fstl
dec
std
xchg
jge
inc
add
ret
sbb
sar
cmp
lock
push
add
inc
outsl
push
repz
pop
sub
push
std
test
out
lret
addr16
mov
push
hlt
mov
cmp
mov
dec
sbb
jg
inc
flds
inc
in
gs
jae
lret
cmc
jne
xchg
cli
xchg
push
cli
andb
sbb
cmpsb
outsl
in
dec
bound
jg
rcrb
xor
ja
outsb
jmp
dec
mov
push
addr16
rcr
or
pop
faddl
push
movsl
in
or
jnp
lods
mov
lret
cmpsl
out
add
test
mov
push
mov
jmp
aaa
push
out
icebp
push
mov
mov
in
fidivs
lea
ja
fwait
loopne
negb
mov
xchg
xchg
push
call
cmp
inc
call
add
push
dec
fildll
xchg
inc
sbb
sub
ret
push
fwait
xlat
cmc
cmp
test
sbb
cltd
pop
dec
lret
mov
lcall
sti
jns
xchg
aam
mov
jecxz
inc
jbe
dec
enter
inc
faddl
inc
movsb
movb
fisubs
movb
in
decl
xchg
aad
dec
mov
mov
mov
imulb
mov
cmp
mov
xlat
pop
push
or
mov
jno
mov
dec
and
ret
lret
fcoms
inc
sub
bound
enter
inc
and
outsl
mov
sbb
loope
sub
or
and
out
scas
adcb
or
cmp
cmp
shrl
enter
cmovne
stc
sub
test
or
mov
push
outsb
insl
sbb
jp
ss
pop
cltd
and
cmp
xor
popf
and
divb
and
bound
rcl
xlat
inc
insb
adc
push
mov
jno
dec
xchg
out
and
sbb
ds
mov
xchg
sbb
in
in
cmp
gs
je
out
cmp
jle
inc
mov
push
pop
jo
repnz
xchg
and
xchg
sbb
in
push
lock
push
and
push
add
xchg
fldcw
and
push
call
pop
push
outsl
rcrl
push
out
mov
sbb
lahf
xlat
cmpsl
shrb
imul
push
cli
jne
aad
loopne
ret
hlt
data16
movsl
inc
pop
and
notl
jle
andb
ficompl
jb
movsl
mov
jl
adc
flds
ficoms
jbe
jge
pusha
mov
outsl
aam
mov
push
stc
inc
lret
mov
push
mov
arpl
popa
xor
mov
push
aaa
jg
mov
ret
mov
dec
out
pop
jo
or
push
je
adc
dec
addr16
lods
push
mov
movsb
pop
cltd
push
in
inc
lcall
cwtl
sbb
movsb
mov
enter
xchg
sub
rcr
jmp
enter
xor
ds
cltd
rcrl
mov
jbe
scas
xchg
loope
test
xchg
add
in
xor
jge
inc
xor
xor
mov
adc
out
pop
roll
mov
in
pop
xlat
sub
cmpsb
orl
and
gs
lret
adc
sbb
out
sbb
push
jmp
dec
scas
inc
inc
in
inc
ds
lods
into
jmp
xor
sub
data16
xchg
ljmp
adc
fbstp
fdivs
jecxz
popf
cli
xchg
orl
sbb
jge
pop
mov
popa
jns
ja
push
dec
xor
dec
out
insb
movsl
in
test
into
lods
dec
ljmp
cmp
not
inc
fst
adc
ljmp
shrl
rcrl
mov
adc
mov
adc
jp
xlat
xchg
pop
dec
and
lcall
in
mov
sbb
std
dec
ljmp
jl
aas
push
popa
lods
loopne
xor
pop
addr16
inc
inc
xor
cmp
call
cmp
and
sbb
sahf
cmc
or
mov
sbb
idivl
sarb
insb
fwait
mov
jae
sbb
test
mov
repnz
sub
jae
mov
jnp
adc
scas
sub
mov
jae
popa
jl
fistl
lcall
shrb
and
sub
insl
pop
cmpsb
cmp
std
push
cwtl
mov
cwtl
sbb
mov
adc
cltd
dec
mov
divl
pmaxub
mov
test
in
test
jp
cld
jle
inc
sub
sbbl
clc
push
fsubr
lds
es
aam
jb
dec
pop
adc
icebp
stc
mov
mov
out
out
mov
movsb
jae
xor
rcrb
popa
test
int3
adc
mov
enter
mov
cmp
mov
es
pop
repz
aas
arpl
sbb
add
mov
sub
sbb
xor
cmp
mov
ret
pop
and
sbbb
call
adc
jo
sti
push
jp
jb
pop
mov
jo
lds
mov
push
pop
outsl
push
dec
ss
jmp
rcll
test
sbb
mov
xorb
mov
ljmp
les
aaa
into
fimull
lret
shlb
sbb
repnz
scas
dec
jmp
cmp
aad
dec
int
xor
lea
add
pop
dec
push
cmp
sub
subb
xchg
into
nop
mov
fs
aad
mov
dec
cmpsb
stos
cmp
xor
mov
inc
ljmp
andl
out
test
or
lcall
and
dec
sbb
aam
call
pop
je
std
adc
mov
sarl
imulb
js
pop
sub
push
add
mov
cld
ljmp
cltd
xor
lret
pop
adcl
adc
inc
cmp
cld
outsl
mov
fistl
lods
mov
mov
push
inc
pop
add
clc
pop
and
test
rolb
popa
test
movsb
andb
cmp
rcll
inc
mov
in
push
jle
add
xor
cmp
iret
in
daa
jo
add
xchg
pop
mov
flds
mov
imul
popf
pop
cli
push
or
loop
mov
pop
jno
stos
int3
repnz
fimull
jl
jp
pop
mov
addb
cmp
mov
dec
push
jmp
jae
push
sub
jb
lods
fdivs
into
sub
sbb
push
call
repnz
stos
ret
xchg
lea
dec
mov
sbb
ror
xchg
add
jle
call
jae
es
mov
push
stos
or
mov
lret
adc
mov
jb
mov
mov
dec
push
mul
sub
pop
cmpsb
jge
pop
fwait
sti
mov
dec
mov
in
mov
pop
mov
aad
cmp
mov
mov
or
mov
mov
mov
mov
ljmp
pushf
out
repnz
push
fwait
jmp
adc
mov
dec
pop
arpl
adc
push
xor
aam
xor
push
std
xchg
or
stos
lret
jnp
push
loopne
movsl
pop
cli
aaa
dec
fisubl
cmpl
sbb
int
sbb
lods
cmp
mov
lds
pop
push
imul
mov
jno
dec
mov
push
xor
lds
xchg
sub
push
cwtl
inc
jns
mov
sbb
add
icebp
cmp
xchg
xor
repnz
xchg
inc
inc
fnstenv
or
mov
push
sahf
push
fsubrs
or
mov
adc
lahf
sub
dec
int
sbb
pop
orl
mov
cli
pop
fwait
push
push
add
inc
push
pop
mov
inc
or
inc
push
lahf
push
xchg
stos
cmp
jbe
xor
jl
add
push
push
and
mov
add
jne
test
cli
mov
shl
mov
sbb
jns
int3
mov
xchg
aaa
add
test
dec
loopne
push
lods
xor
addr16
mov
popf
mov
stos
jp
add
adc
jns
popl
out
jae
push
cmp
test
leave
sub
repz
xchg
adc
mov
xor
pop
negb
pop
mov
gs
roll
add
jle
xor
fdivp
inc
out
add
ficompl
inc
js
mov
std
sub
popf
or
or
push
mov
jle
popw
ret
loope
shlb
testb
cld
inc
repz
mov
add
pop
sahf
and
and
and
and
ds
fisubl
dec
pop
repz
pop
lods
push
mov
sbb
ss
insb
inc
xchg
stc
jbe
cld
dec
js
and
jmp
and
mov
aas
test
and
sbb
in
cmp
adcb
sub
xchg
pop
fstps
and
cmp
cmpsl
mov
lds
inc
test
xor
mov
adc
xchg
xchg
outsl
mov
addr16
cltd
mov
dec
and
shl
dec
sub
pop
pop
mov
inc
xchg
jnp
mov
cmc
paddq
lds
mov
jne
jecxz
dec
jns
and
pop
adc
or
jae
andb
pop
jne
xchg
and
cli
or
ret
push
push
in
sub
test
lods
cmc
mov
daa
into
stos
jmp
int
lret
and
inc
cltd
lock
and
int
or
jbe
xor
dec
inc
jmp
adc
sub
loop
lods
mov
pop
jg
sub
out
or
xlat
enter
push
inc
dec
jb
gs
cmp
sub
cmc
inc
repz
sub
pop
and
adc
outsb
mov
mov
movsl
jle
add
in
adc
int
push
js
cwtl
mov
out
fstl
clc
out
je
xchg
mov
insb
mov
nop
push
and
rolw
pop
mov
mov
push
loop
push
enter
sbb
sarb
cmp
cmp
jp
dec
mov
pushf
ss
sahf
rclb
jb
mov
jo
inc
sbb
dec
in
fmuls
mov
mov
adc
add
popf
or
loop
add
push
mov
and
addr16
or
lea
jne
mov
lea
ret
jle
stos
mov
call
jns
enter
sbb
ja
cld
popf
stos
or
out
in
std
pop
or
push
xor
stos
fmuls
and
mov
lock
icebp
sbb
or
roll
lea
cli
xchg
sti
das
test
fisubrs
jmp
or
lods
fstpl
leave
add
lock
loop
mov
xchg
imul
ja
stc
mov
aam
dec
mov
pop
fmuls
hlt
jg
test
rclb
mov
or
cmpsl
dec
mov
mov
or
int3
inc
pusha
jno
xlat
call
lea
iret
push
jl
or
dec
cmp
adc
jmp
fwait
mov
shll
or
mov
pusha
in
mov
dec
jmp
fucomp
push
int
mov
aas
out
inc
dec
out
aad
into
adc
sbb
fwait
test
lock
add
enter
loop,pn
scas
push
and
adc
inc
pusha
push
push
cmp
cwtl
das
rcrl
arpl
je
das
xor
rolb
notb
pop
aas
or
push
jne
cltd
out
ret
and
insb
xor
mov
js
subl
push
add
mov
dec
sub
adc
test
rorl
jo
xchg
pop
lret
inc
adc
fsubrl
repz
call
cmp
jb
outsl
and
dec
xchg
pusha
rolb
push
push
push
mov
inc
and
xor
adc
js
rep
in
jge
and
or
pmulhw
movsl
test
adc
xchg
imul
dec
mov
push
xor
in
mov
pop
cwtl
shlb
add
push
int
pop
imul
movsl
mov
jmp
rcl
push
je
adc
cmc
mov
push
scas
jle
bnd
daa
mov
mov
jl
scas
add
fnstenv
icebp
fs
jbe
sti
aaa
hlt
xchg
bound
mov
mov
in
jne
das
cmp
scas
mov
fucomi
xchg
bound
cmpsb
inc
jb,pt
out
aam
pop
sbb
fs
mov
jo
cmc
fdivrl
cmc
fs
and
pop
sahf
jg
jl
js
add
push
mov
enter
lahf
sbb
les
scas
hlt
in
lods
push
push
sub
mov
jne
frstor
jb
cmpsl
repz
xor
dec
push
andb
daa
mov
xchg
gs
cmp
mov
insl
jl
dec
loop
pop
jno
mov
mov
loop
lock
dec
imul
xlat
jns
les
inc
out
sbb
faddl
enter
inc
aad
test
pop
negl
loop
outsb
stc
or
sub
daa
jo
pop
lea
jno
loope
repz
stc
pop
mov
movsl
icebp
pop
push
rol
push
fwait
or
loopne
cmp
mov
xchg
jns
rorb
subw
jne
add
push
mov
pop
stos
cmp
int
or
pop
ljmp
jo
mov
fsubr
outsl
or
xor
jb
mov
es
roll
push
lock
bound
addr16
mov
jle
jo
into
sub
mov
test
fldl
fidivrl
cmp
nop
jne
mov
ss
inc
sahf
xchg
inc
mov
add
inc
lea
xor
fiaddl
imul
dec
dec
cmpsl
jnp
shlb
or
stc
cltd
push
lods
add
pusha
ss
pop
or
push
push
cltd
test
stc
fildll
lret
jo
mov
jecxz
js
scas
popf
and
xchg
cli
stos
xchg
insb
sub
rolb
adc
dec
imul
xchg
and
test
pop
inc
adc
mov
push
inc
pop
and
cmpsl
jne
ss
das
stc
nop
popa
pop
je
popl
dec
xchg
add
fistpl
push
cs
push
insb
mov
into
sub
add
lcall
lret
ja
int
ja
mov
dec
rcrb
jbe
movsl
js
mov
mov
stc
xchg
mov
mov
dec
fsubs
lahf
jns
dec
dec
fnstsw
and
es
subl
jmp
push
insb
mov
ss
ret
sub
xchg
jle
out
pop
cmp
inc
imul
pop
and
popa
jns
sub
or
loopne
sub
dec
sbb
aaa
icebp
popa
adc
add
sbb
jo
call
fnsave
mov
jecxz
jb
movsl
fs
in
jne
test
cld
push
shlb
shl
pusha
cmc
jo
daa
adc
cmp
dec
jo
test
test
aad
cs
negb
pop
and
std
jp
and
or
push
mov
push
stos
add
xor
std
dec
mov
ret
or
test
sbb
stos
int
daa
mov
out
xor
xor
dec
mul
sub
adc
jno
jmp
aaa
sub
inc
pusha
push
rcrb
lods
imul
push
mov
enter
or
out
jnp
mov
mov
pop
push
push
or
scas
push
push
jo
iret
sub
je
stc
fwait
xchg
out
cltd
cwtl
aaa
mov
inc
in
or
add
jg
movsb
out
dec
lea
mov
rcll
int
iret
jbe
stc
mov
adc
clc
push
pop
jne
decl
out
out
cld
pusha
add
mov
addl
mov
sahf
and
push
imul
leave
mov
das
inc
xchg
xlat
test
mov
in
adc
inc
movsb
mov
jmp
nop
imul
and
sbb
inc
jl
push
or
adc
mov
jg
jle
mov
mov
pushf
xorb
mov
add
lods
fucomi
sbb
cmp
xlat
pop
sbb
cmp
adc
inc
mov
scas
sub
mov
mov
nop
jbe
fwait
xlat
cmp
dec
mov
mov
xchg
cmp
lret
aad
jmp
pop
shll
fnstenv
lret
testl
and
outsl
xchg
mov
call
sub
out
pop
pop
cli
mov
std
imul
cmpsl
call
push
daa
jg
add
pop
ret
mov
int
mov
jl
push
push
cltd
add
mov
mov
push
jbe
sbb
mov
fdivrl
xor
in
mov
inc
fnsave
cs
sbb
inc
pop
jle
and
mov
xor
mov
mov
add
add
int
cwtl
push
cmpsl
dec
and
cltd
xor
inc
adc
add
push
push
addr16
inc
loope
pop
negl
mov
sbb
pop
cli
ljmp
mov
xor
aas
pop
cli
mov
ljmp
stc
add
sbb
jl
xor
sarb
call
sub
mov
mov
add
xor
adc
scas
dec
icebp
pushf
inc
push
jbe
mov
cmp
stc
xchg
sbb
int
pop
mov
test
adc
cmc
cmp
aad
sbbb
xchg
in
sbb
dec
cli
lock
sbb
or
and
sub
gs
inc
push
jb
push
leave
push
sbb
sti
les
movb
and
push
jne
inc
push
mov
out
dec
repnz
js
lea
movsl
rclb
mov
xor
jmp
shr
dec
sbb
ss
out
sti
inc
jmp
sbbl
stc
test
xor
ss
cmp
stc
popf
inc
ds
pop
push
mov
mov
cmp
adc
push
int
mov
xchg
push
cmp
call
test
cmp
shrb
pop
fcmovu
out
nop
mull
ljmp
iret
pop
popa
mov
lods
mov
sbbl
mov
dec
pop
popl
push
add
shrl
xlat
sbb
cmp
push
cmp
shll
add
ss
test
push
jo
movsb
cwtl
mov
test
loope
dec
jmp
fnsave
mov
push
pop
inc
test
sub
test
fcmovbe
cmp
rorb
xor
inc
adc
sahf
loop
inc
adc
push
lcall
ja
clc
adc
inc
sbb
mov
stos
mov
js
dec
inc
push
in
ss
movsl
xchg
cltd
in
std
ljmp
out
xor
push
jb
push
fcoml
in
mov
imul
lock
das
fsubrs
push
dec
cmp
movsb
mov
popa
mov
pushf
out
outsb
mov
test
or
cltd
or
sbb
ja
outsb
es
sub
xchg
test
inc
adc
addr16
cltd
or
cmpl
dec
xchg
rorl
sbb
xor
and
inc
popa
add
or
inc
push
mov
adc
scas
out
js
inc
pop
xor
ljmp
js
lock
addr16
aad
ljmp
xchg
inc
leave
pandn
fisubl
es
sahf
mov
mov
cmpsb
dec
inc
jl
test
aad
pop
push
popa
imull
fnstenv
shr
mov
pushf
or
imul
ljmp
mov
arpl
shrl
lods
adc
aad
sahf
mov
fwait
mov
pushf
mov
lret
adc
adcb
fidivrl
inc
dec
ds
lods
popa
clc
fdivp
and
pop
xchg
and
stos
fisubl
adc
jo
icebp
sub
mov
icebp
in
xchg
jb
cmp
cmp
pop
shll
test
sbbb
fnsave
cmp
or
pushf
inc
out
jecxz
dec
xchg
and
shrd
or
jne
sub
jbe
mov
aad
add
mov
fcmovnu
dec
mov
push
shrl
dec
scas
inc
inc
in
or
leave
push
int3
sub
push
xlat
outsb
adc
dec
push
mov
pop
leave
pusha
mov
xor
in
movsb
cmp
xchg
jns
jg
repnz
pop
add
fldt
shll
in
test
in
cmp
call
push
js
les
xorl
loopne
ret
aad
pushf
xor
imul
fwait
inc
in
xchg
lcall
pop
in
sub
push
stc
jno
sub
ljmp
jg
mov
or
adc
ja
popf
cmpsl
push
cwtl
fdivl
xchg
stos
xchg
divl
xchg
cmp
test
and
icebp
cmpsl
xchg
aad
loop
add
jle
mov
mov
push
punpckhbw
pop
jle
and
push
xchg
add
dec
mov
mov
add
and
sar
xor
add
xchg
sub
pop
cmpsb
mov
repnz
ja
cwtl
pop
xchg
scas
or
adc
mov
dec
pusha
clc
pop
arpl
out
pop
int3
cmp
lods
cld
rcr
iret
popa
ljmp
mov
in
xlat
sarb
adc
in
mov
mov
xchg
and
addr16
lret
or
ret
decb
cmpsl
bound
push
cmpsl
push
cmpsl
lock
popa
xor
cmpb
pop
add
jl
pop
adc
js
bts
adc
adc
mov
push
mov
stos
in
fnsave
adc
divb
and
cld
sub
sub
dec
push
pop
enter
clc
xor
pop
dec
mov
fwait
cmp
ror
cmp
push
cmp
stos
sbb
sbb
fistl
jnp
push
bound
push
out
in
mov
jmp
lcall
in
fadds
dec
pop
push
es
mov
sbb
mov
pop
notb
jge,pt
mov
fists
nop
mov
sbb
xchg
cmpsb
mov
push
mov
in
cmpsb
pop
fwait
xor
clc
ljmp
pop
sub
repnz
imul
push
fucomi
subl
lret
and
mov
fs
imul
mov
aad
dec
rcll
adc
xor
mov
push
mov
or
subb
push
and
cmp
sub
cli
push
or
mov
popf
in
jb
sub
out
cmp
cltd
je
and
pop
mov
sbbl
pop
shr
mov
or
daa
cli
es
sub
dec
jmp
jb
cmp
mov
add
sarb
push
movsl
mov
pop
sub
jae
int
xchg
pop
shll
into
ficompl
test
std
out
mov
test
jns
int
sar
jge
dec
xor
jge
jo
mov
inc
xlat
leave
pop
pop
dec
arpl
xchg
xchg
test
stos
mov
in
inc
adc
inc
lahf
cs
lock
cmp
push
sbbb
shrl
pop
fwait
bound
das
jbe
xlat
mov
cmp
cmp
mov
push
aas
adc
xchg
dec
adc
lahf
sbb
mov
jnp
roll
xchg
test
sbb
cmp
sub
mov
stc
stos
int3
nop
pop
jae
stc
or
rcl
addr16
cmpsb
repz
lcall
rcl
les
ret
in
sbb
into
sub
inc
dec
repnz
js
adc
iret
push
jecxz
dec
data16
ret
mov
xchg
push
shrb
cmp
mov
roll
and
insl
ss
test
in
ljmp
addb
test
inc
dec
xor
mov
enter
cs
and
sbb
sbb
pushf
and
push
outsb
loope
les
insb
ret
int3
lods
pop
cmpxchg
xchg
stos
testb
jb
jecxz
or
mov
xor
xor
push
dec
sarb
push
gs
and
mov
repnz
sti
mov
sahf
lods
call
cld
in
cmpsl
mov
jnp
push
sub
outsl
sbb
mov
mov
mov
loopne
sub
jmp
dec
push
dec
adc
notl
jg
dec
push
push
call
adcb
popa
add
fxch
push
loop
mov
out
xor
out
test
aad
sbb
insl
xchg
enter
jbe
mov
and
and
and
ror
movsl
xor
pop
or
xor
pop
repnz
sarl
fdivs
dec
icebp
je
bound
mov
out
pop
les
rcrb
popf
and
adcl
pop
add
aaa
xorl
push
int
push
mov
and
mov
add
sbb
sahf
lret
fst
loope
dec
loope
xor
stos
inc
inc
sub
xchg
jle
push
sbb
inc
push
out
sub
sahf
scas
call
xchg
inc
sahf
and
add
das
out
cmp
pusha
pop
fsubrs
or
adc
stos
popf
loop
adc
mov
andl
jb
mov
inc
push
shlb
add
call
xor
jecxz
sbb
roll
out
sti
gs
scas
aam
inc
pop
mov
js
out
mov
int
fcompl
ret
pop
or
fdivrl
imul
sarb
stos
jmp
xchg
cmpsl
movsl
std
scas
ret
jp
fadds
dec
cmpsl
fs
mov
enter
or
pop
xchg
sub
daa
adc
aaa
scas
insb
jne
cmp
loop
sub
xchg
or
sbb
adc
pop
jbe
push
out
xchg
adc
cmpsl
mov
and
jg
pop
lock
jnp
push
jb
ja
sbbb
pop
jecxz
les
pop
mov
out
pushf
push
or
sahf
xorl
movsb
lods
and
adc
mov
imul
dec
loopne
out
in
insb
mov
push
cmp
mov
loop
call
into
sub
pop
sbb
inc
popa
jbe
xchg
std
gs
cmpsl
test
push
sbb
cmp
and
jmp
dec
cmpsl
push
jno
lret
mov
push
cmp
mov
bound
push
daa
jno
ljmp
test
scas
mov
fldt
test
push
test
stos
push
push
mov
lcall
sbb
sbb
mov
cmp
mov
sbb
xor
sahf
pop
cmp
notb
out
testb
es
loopne
dec
dec
pusha
jo
addl
push
xchg
add
jge
dec
loopne
outsb
out
inc
and
fiadds
xchg
xchg
jmp
add
test
psrad
push
iret
data16
dec
mov
aad
jp
mov
popa
test
aam
mov
xorl
fucomp
lea
loopne
dec
je
in
xor
adc
dec
ja
ret
je
bsf
xlat
jp
or
sbbl
push
pop
jns
bound
mov
mov
mov
dec
in
sub
xchg
or
das
aas
sbb
or
mov
mov
pusha
and
ja
push
cmp
adc
aas
outsb
lahf
inc
jg
ja
pop
das
pop
xchg
es
test
loop
push
jo
or
add
fsub
jge
pop
leave
mov
xchg
jae
std
das
pop
jle
mov
pop
mov
lret
sbb
lods
mov
cs
into
gs
bound
adc
or
xor
mov
inc
popa
sbb
mov
mov
lahf
ss
daa
mov
aam
inc
fistl
jb
outsl
and
bound
jle
int3
lret
sub
and
fimull
pop
cmp
sbb
pop
out
popa
out
cmpsl
shrb
pop
nop
fistpl
icebp
iret
inc
cmc
mov
test
dec
inc
and
adc
sub
cwtl
dec
lock
ljmp
lock
es
fwait
aas
lock
inc
loop
cmp
out
jp
adc
cmpsl
mov
es
or
ss
jnp,pt
out
mov
loope
sar
and
and
inc
ss
dec
push
xor
push
mov
ljmp
negb
ret
pop
jo
cmp
xor
cmp
pop
cmc
ja
fidivl
scas
ret
sub
sbb
mov
mov
mov
divb
jae
xchg
add
divl
sbb
pusha
int3
gs
fdivrl
push
push
ss
add
sti
xlat
adcl
cmpsl
lahf
stos
dec
shll
xor
arpl
xor
xchg
std
mov
push
xchg
sbb
adcb
and
fs
xor
loop
es
lcall
mov
pop
inc
out
inc
jns
sbbl
jp
div
loop
cmp
ret
push
cli
int
lahf
pop
adc
cmp
add
mov
ja
gs
fsubl
xchg
xchg
aad
cmpsl
lods
pushf
fadds
lcall
inc
inc
jle
sbb
ds
into
push
lea
cmpsb
dec
loope
stc
rcrl
dec
push
jb
mov
push
dec
push
jmp
pushf
icebp
leave
idivl
es
cmp
dec
ret
cmc
rcrl
sbb
mov
ljmp
and
movsb
test
mov
outsl
and
mov
fldpi
jge
xchg
cmp
test
lret
xchg
jo
call
or
stos
xchg
inc
ret
sbb
and
mov
loope
mov
test
icebp
mov
push
inc
and
dec
xlat
jg
loop
int3
stos
bound
in
imul
in
fcoms
sub
fwait
dec
fists
mov
cmpsl
cmp
cwtl
dec
sarb
and
outsb
sbbb
arpl
xlat
jmp
fwait
xchg
data16
cmc
je
daa
sti
push
in
mov
push
mov
adc
push
shl
cltd
inc
testb
mov
mov
pop
xchg
packuswb
xchg
xchg
adc
inc
clc
faddl
cmp
or
dec
pop
mov
dec
push
jg
data16
addr16
xchg
xchg
mov
fildl
add
dec
in
jp
popf
sub
and
adcl
in
pop
or
aad
sub
loope
cmp
xor
imul
rcrb
clc
mov
mov
mov
js
les
dec
adc
hlt
add
push
es
imul
int
ret
dec
push
divb
movsl
test
and
mov
xlat
in
in
mulb
mov
popa
jecxz
sub
xor
push
sbb
cwtl
fstl
sbb
cmpsl
out
pusha
aaa
sar
sub
xor
pop
xor
into
inc
mov
push
adc
pop
cltd
sub
hlt
jp
aaa
sub
jb
ret
inc
movsl
test
push
hlt
mov
clc
pop
ret
scas
outsl
xor
stos
jecxz
fsubr
mov
inc
xor
mov
pusha
or
shl
imul
fidivl
cwtl
or
jecxz
ds
sub
insl
shll
repnz
push
pop
sahf
dec
sti
jne
mov
push
out
dec
cmpsl
out
sbb
xorl
xchg
push
sub
pop
popf
gs
int
mov
mov
push
aas
sub
leave
push
xchg
sti
repz
insb
rcr
repnz
xor
lret
int
fs
or
enter
xor
and
inc
add
pushf
lock
jl
adc
js
sub
jp
imull
xchg
jb
int
inc
scas
ja
out
arpl
push
bswap
test
mov
cmp
xchg
fs
enter
mov
sub
inc
mov
sub
xchg
mov
fisttpl
mov
gs
rcll
mov
or
jle
andb
add
rorl
scas
clc
jns
mov
pop
sub
popa
cmp
je
sbb
orb
les
dec
data16
xchg
sub
sub
in
push
call
loope
sbbl
out
xchg
fistpl
pushf
loop
lods
inc
divb
lret
lret
xor
fimull
cmp
mov
int
aaa
adc
and
push
or
gs
shlb
ss
mov
leave
fnstcw
ret
repz
push
dec
pop
loope
mov
lods
out
shrl
into
mov
ja
out
bound
stos
sbb
fbstp
push
pop
jae
sub
fisubl
adc
out
cwtl
std
xor
mov
mov
fildll
ret
add
int
dec
lock
shr
test
sbb
insb
out
mov
enter
jl
or
lock
mov
outsl
cmpl
loope
pop
push
jno
inc
cmp
jae
gs
sub
test
icebp
cs
dec
movsl
insl
cmp
and
xor
imul
jno
imul
outsl
xor
and
decl
add
cmpsl
cmp
orl
lahf
stc
inc
xlat
sub
pop
insb
add
shll
sbb
fsub
push
shrl
dec
xor
cmpsl
jle
imul
popf
mov
pop
cmp
inc
cmpb
xor
lods
cli
mov
divb
enter
mov
inc
jns
repnz
idivl
test
push
or
ljmp
into
push
mov
pop
mov
fbld
inc
adc
mov
add
aam
mov
pop
call
cli
daa
insb
add
jne
add
pop
or
mov
jl
lods
mov
sub
mov
ss
sbb
daa
xchg
and
dec
jmp
push
inc
add
xor
imulb
imul
rcrl
push
pop
dec
mov
xor
jo
clc
dec
mov
or
push
jns
xor
int3
pop
movsb
jmp
or
pop
and
shll
push
cmpsl
jge
or
in
xor
cmp
sti
repnz
mov
mov
dec
and
add
cltd
pop
pushl
mov
sub
push
push
cmp
pushl
xor
adc
xor
fwait
std
stos
mov
mov
dec
int
loope
mov
loopne
leave
pop
insl
rorl
js
lea
and
aad
bound
testb
xchg
cmp
es
bound
shll
mov
popf
mov
stos
lcall
and
jae
mov
pop
in
push
inc
mov
ljmp
sbb
fcompl
mov
jle
fiadds
and
repnz
sbbl
push
cltd
push
popa
clc
loopne
pop
out
jg
enter
int3
pop
enter
add
and
mov
and
jo
push
mov
sub
add
adc
mov
bound
push
stos
pop
test
cmpsl
and
push
mulb
fbstp
scas
movsl
mov
xchg
std
inc
mov
lret
sub
lea
or
sbb
int
sbb
push
or
jo
push
dec
out
rorl
push
cmpsl
xchg
jo
lahf
dec
imul
idivb
je
int
jb
mov
popf
aaa
fsubrl
cmp
adc
dec
xor
mov
jne
xor
icebp
xchg
fdiv
lcall
stc
and
sarl
cwtl
xchg
call
out
and
and
mov
repnz
sbb
jg
or
pop
and
aaa
pop
cmp
andl
decb
lock
push
fdivrs
jne
mov
cmp
dec
pop
icebp
sub
adc
xor
ds
not
mov
fst
mov
xchg
cmp
mov
mov
mov
mov
lret
in
lea
xchg
adc
xchg
or
test
push
shrb
ds
fidivs
es
das
stos
add
jge
lret
mov
cmp
push
outsb
add
xor
push
sub
and
mov
inc
insb
pop
mov
and
adc
cmp
movl
out
mov
fnsave
inc
mov
mov
xchg
or
mov
rcll
js
xchg
mov
fmull
xchg
sub
dec
pop
addr16
push
jle
pop
push
int
mov
sahf
xchg
ja
or
or
cmp
nop
jnp
ja
pop
xor
sub
cmc
and
test
insl
mov
cmpsl
aaa
push
in
inc
mov
lds
cwtl
loope
mov
mov
lcall
mov
in
leave
adc
cli
ret
cld
cmpsl
push
fbld
int3
andb
xchg
into
addl
mov
pop
inc
adc
push
mov
cmc
ret
pop
adc
jnp
mov
jae
sbbb
xlat
lahf
imul
xor
jns
jl
les
mov
loop
ret
add
enter
jmp
in
stos
push
in
dec
or
leave
lea
or
flds
std
sbb
cmp
dec
and
mov
lahf
sbb
add
sbb
jge
dec
scas
dec
test
or
out
inc
jmp
std
xchg
xor
pop
ljmp
jne
sub
cwtl
lcall
inc
push
or
jmp
mov
mov
or
mov
jecxz
sbb
dec
pop
pusha
dec
mov
jnp
es
inc
pop
imul
addl
cmp
mov
loopne
into
enter
mov
nop
cld
inc
mov
push
test
cltd
std
pop
hlt
pop
int
mov
mov
mov
mov
mov
cmp
sbb
cwtl
sub
rorl
clc
cmpsl
ss
iret
cmp
rcll
subb
jns
cmc
les
out
fcmovb
loop
jecxz
subl
enter
and
mov
inc
jns
rcrb
inc
sahf
cs
xchg
sub
mov
testl
xchg
lea
loopne
in
mov
xor
xchg
hlt
jo
ret
push
add
xlat
js
dec
mov
addr16
mov
fisubrs
or
sub
xlat
mov
mov
into
enter
cmp
out
mov
sbb
mov
dec
pushl
dec
dec
push
dec
xor
loop
ss
xchg
push
icebp
and
test
int
xchg
in
ljmp
and
movsl
mov
daa
addr16
inc
xchg
pusha
or
xor
push
cmpsb
scas
push
xlat
add
jne
dec
jmp
flds
inc
stc
pushf
sahf
push
cli
lret
add
cmp
fs
jg
jnp
stos
xchg
clc
jns
shll
dec
add
pop
bound
fnstsw
or
bound
je
fdivl
mov
xchg
pop
mov
dec
sub
iret
scas
inc
dec
cmp
pop
cmp
divl
adc
fistpll
rcrb
push
je
cwtl
repnz
rorl
icebp
cmpb
xor
push
outsb
popa
ss
mov
ss
jo
xchg
es
dec
mov
popa
xor
and
push
mov
sahf
in
ds
mov
dec
and
mov
add
xor
dec
fcoms
sbb
mov
jae
ljmp
hlt
inc
inc
sbb
or
out
mov
push
sub
ss
dec
insl
adc
pop
es
insl
inc
cld
pop
ret
cwtl
shr
in
lret
add
jp
inc
mov
loopne
enter
test
mov
faddl
lcall
cmp
sbb
add
cmp
pop
jmp
imul
mov
mov
ja,pn
lods
xchg
call
or
hlt
vpsllq
es
or
push
push
outsl
jne
outsl
roll
sbb
jb
dec
push
pushf
ret
and
out
adcl
cmp
dec
push
in
jmp
inc
sbb
int
sub
mov
adc
mov
fisubrs
ret
lcall
movsb
loope
jge
sub
adc
cmp
aad
add
adc
inc
inc
jns
and
jb
xchg
ret
dec
loopne
lea
mov
pop
repnz
pop
xchg
lds
scas
shlb
pop
adc
stos
sub
mov
xchg
sub
inc
andb
mov
push
nop
mov
xchg
roll
jle
sub
fs
ss
cld
dec
adc
cmp
subb
lock
ret
pushf
and
out
pop
push
icebp
sub
add
in
pop
pminub
sbb
push
mov
mov
fstpt
mov
adc
sbb
pop
mov
cmp
pmullw
lea
imulb
iret
test
xor
into
mov
or
out
incb
notb
jecxz
mov
xchg
dec
adc
pop
dec
in
xor
out
cld
gs
mov
add
cmp
fwait
jmp
pop
xchg
mov
fbld
add
fwait
sti
inc
push
lcall
sub
lods
pop
mov
aaa
jmp
scas
call
cmp
pop
mov
mov
outsb
sub
pop
test
jge
stos
xchg
sbb
in
mov
shr
and
add
xchg
mov
fiaddl
cli
cmp
xor
cltd
jg
and
xchg
mov
into
adc
cmp
in
and
mov
push
push
aad
push
add
mov
fsub
mov
icebp
fstl
into
add
pop
test
pop
pop
std
mov
xor
push
int
lods
cmp
cmp
cmpl
and
daa
lods
inc
pop
stc
pop
sahf
and
jb
pushf
scas
out
lods
jg
or
mov
xchg
lret
jne
mov
out
cmp
add
dec
out
out
inc
lahf
jmp
loopne
xor
jg
jae
xchg
sbb
fisttpll
sub
jp
inc
pop
mov
imulb
rcrl
fisttps
xor
orl
rorb
mov
lods
mov
imul
ret
jne
mov
cmp
xor
sahf
pop
push
jns
aas
adc
lods
and
subl
sub
mov
jge
shr
stos
add
adc
es
jmp
xor
cld
cld
or
push
pop
cmpsb
or
call
sub
out
mov
repz
xchg
mov
mov
pop
jno
pop
addr16
mov
xchg
mov
add
in
nop
arpl
loopne
mov
pop
imul
decl
and
cmp
push
movsl
cmp
out
push
rolb
fnsave
push
fiaddl
adc
movsl
and
mov
aas
add
call
add
fildll
js
jl
xchg
pop
pusha
ss
xlat
rcll
sub
sbb
ja
aas
bound
xchg
pusha
pusha
stos
xor
cltd
cmpsl
insl
jae
jge
adc
jae
or
scas
js
push
daa
loopne
push
lcall
mov
sbb
or
in
mov
jge
sti
lret
dec
nop
adc
testb
leave
xor
sbb
jae
mov
xor
inc
mov
std
pop
mov
pop
rcll
fsubrs
sbb
les
xor
push
movsb
inc
movsb
int
mov
repz
mov
and
xlat
ret
adc
cmp
push
ret
pop
mov
notl
pop
xchg
sarl
mov
dec
dec
jecxz
and
call
cmp
sub
aad
in
mov
btr
cmp
xchg
outsb
sub
sub
push
pusha
rclb
inc
lret
into
cmp
pop
or
and
enter
jle
aam
mov
mov
scas
mov
testl
movsl
cmp
jno
cmp
dec
mov
lock
aas
mov
xchg
stc
pushw
fdivs
push
mov
or
push
scas
inc
ret
ret
cwtl
jmp
cmp
cmpsb
sub
sbbl
xchg
sbb
adcb
fbstp
int3
push
mov
or
pop
inc
sbb
lods
xchg
sub
mov
add
movsb
popf
jmp
jle
or
cmp
call
add
mov
pop
jo
cmp
arpl
sbb
push
mov
scas
push
mov
fsubrs
adc
mov
lods
add
xlat
cs
test
arpl
stc
insb
sbb
dec
xchg
xor
sbb
out
xchg
test
sbb
add
pop
inc
out
scas
repz
test
sti
jae
lret
jne
cmova
jmp
push
sbb
sbb
and
loopne
ret
hlt
or
bound
sbb
push
adc
pop
clc
or
dec
divl
scas
imul
pop
or
movb
addr16
sbb
pop
mov
cmpb
and
andb
ss
dec
ficompl
add
mov
inc
or
mov
add
mov
jns
ds
mov
ficoms
scas
xchg
dec
jno
faddl
push
xchg
ss
xchg
cs
pop
push
je
stos
cltd
xchg
lret
jmp
lahf
in
test
daa
sub
movsl
mov
pusha
sbb
pop
cltd
std
cmp
adc
lods
sbb
lahf
test
cltd
xor
lods
inc
pop
fwait
mov
jp
fmuls
es
clc
lock
movsl
pop
movsl
sbb
sub
pop
dec
mov
push
aam
iret
lock
cmp
jg
cmpsl
movsl
iret
ret
outsb
jno
fbstp
lahf
mov
add
pop
jnp
test
jmp
fs
lock
mov
xchg
and
mov
inc
pop
sub
pop
mov
mov
mov
cld
xchg
movsb
jecxz
adc
add
sub
nop
std
pop
pop
test
out
rcrl
sub
insl
ja
mov
les
push
insl
dec
jmp
jg
fcompl
push
mov
ror
push
xchg
jns
outsl
stos
mov
add
iret
data16
mov
imul
addl
mov
jecxz
or
fsubs
sbb
cmp
aam
cmp
data16
adc
rcll
fisubs
inc
sbb
mov
xchg
cmc
das
es
mov
dec
mov
test
sub
bnd
sub
out
pop
addr16
cmp
or
xor
lret
cmp
cli
outsb
pop
dec
mov
mov
adc
inc
sbb
sbb
jne
stos
cs
mov
push
pushf
mov
fldenv
std
dec
stos
js
and
push
clc
test
movsl
jnp
pushf
rol
mov
popa
ret
rolb
cld
fimuls
inc
fdiv
popl
sub
mov
das
jne
ret
movsl
sarb
push
and
out
fucomp
adc
xor
xlat
outsb
lods
push
lods
cmp
test
push
sub
inc
mov
dec
call
test
push
mov
js
es
js
inc
mov
push
fs
sbb
test
inc
cmp
shlb
xchg
mov
or
or
rorb
jns
xchg
fstpt
adc
mov
cmp
adc
es
pushw
or
jns
pop
dec
mov
push
jp
jns
insb
adc
insl
adc
jne
nop
lock
popa
fimull
sarb
call
out
arpl
sahf
jl
mov
jl
es
mov
sub
sub
je
and
orl
push
jno
or
aas
mov
fdivr
cmp
jle
pop
jo
push
aas
dec
cmp
or
sub
in
mov
movsl
in
mov
outsl
sbb
movhlps
add
sahf
out
lret
add
inc
sub
je
xor
mov
xor
push
cmp
imul
rolb
push
cmp
pop
jmp
pop
in
popf
jl
jmp
mov
xchg
daa
mov
xor
and
sti
jne
mov
pop
mov
xorl
mov
xchg
push
or
inc
ret
and
dec
popf
fcoms
cmpsb
out
dec
inc
test
das
xchg
xor
shlb
loop
and
push
mov
cmpsb
das
mov
dec
call
int3
iret
arpl
or
or
stos
inc
push
dec
outsl
mov
in
mov
imul
shl
shl
jns
pop
movsb
cmp
mov
fsubp
imul
and
or
and
iret
push
jmp
mov
jmp
add
dec
push
and
push
gs
std
xchg
and
and
in
imul
xlat
pop
dec
hlt
adc
dec
jecxz
repz
lret
mov
sbb
xchg
loopne
stc
ficomps
sub
cmp
sbb
repnz
test
pop
cmc
xchg
jnp
adcb
flds
stos
enter
sub
ret
inc
dec
and
stos
loopne
push
xlat
mov
and
mov
imul
ss
loope
mov
jecxz
pop
stos
mov
cmc
mov
mov
or
cmpsl
cmp
pop
or
shl
mov
addr16
ss
sub
int
xchg
ret
add
addb
or
int3
lock
int
inc
fadd
out
xlat
fwait
jmp
pop
jb
aaa
das
push
push
mov
push
shrl
imul
andb
and
out
push
sbb
js
js
pop
push
add
or
inc
addr16
pop
nop
xchg
adc
sub
jecxz
insl
lcall
or
loope
dec
daa
xchg
incb
and
je
loopne
and
adc
jae
push
push
lahf
addb
inc
push
jecxz
jae
ja
pop
insl
lods
pushf
pop
loopne
mov
dec
stos
mov
and
cmc
mov
mov
clc
ret
or
add
mov
xchg
dec
mul
push
lods
adc
push
jl
lds
loop
pop
sub
or
jmp
popa
jns
ss
lcall
jnp
orb
dec
or
ljmp
rcrl
fidivrl
sbb
add
xchg
sti
mov
add
mov
in
mov
cmp
test
sub
mov
test
jae
add
inc
insb
neg
nop
jmp
mov
popf
js
mov
test
cmp
iret
mov
mov
outsl
jmp
xchg
sub
add
jb
and
mov
cmc
lea
sub
lret
sbb
sbb
daa
or
lds
dec
popf
lods
jl
fbstp
jns
inc
icebp
scas
clc
xchg
mov
int
leave
pop
xor
xlat
imul
push
jne
loopne
into
push
test
sahf
cmp
aad
rcll
sub
test
mov
inc
mov
or
lret
mov
pop
subb
ja
push
xor
cmp
jne
nop
xor
sbb
inc
cwtl
xor
xor
pop
ficompl
sub
inc
cltd
dec
push
popf
mov
and
cli
popa
adc
inc
sbb
xchg
shl
xor
rorl
cmpsb
mov
aam
cmpsl
imul
xchg
in
mov
lock
lds
stos
jnp
sti
and
cmp
mov
inc
add
icebp
loop
cmp
cld
push
icebp
xor
or
icebp
lahf
scas
inc
mov
push
xchg
push
fmul
fmuls
jb
jae
add
in
adc
and
repnz
and
lods
call
lcall
push
pop
imul
sub
dec
in
push
pop
mov
test
pop
dec
iret
xchg
jno
inc
and
lods
pop
ret
jg
jo
jl
and
dec
in
cwtl
or
pop
mov
ss
movsb
jns
aad
mov
pop
mov
fdivl
aad
or
outsb
pop
repnz
scas
mov
imul
decb
cmp
inc
popa
sub
sub
jle
and
cs
outsl
dec
mov
jge
jecxz
xor
clc
inc
jl
mov
add
adcl
leave
dec
scas
loop
mov
out
dec
insb
incl
les
je
jbe
add
xchg
sets
mov
mov
sub
sub
xchg
jo
mov
fwait
inc
xlat
int3
mov
jbe
lds
imul
push
icebp
cltd
insl
jle
rclb
cmpsl
cwtl
stos
fcomps
jl
add
push
cmc
cmpsl
add
test
clc
pop
shrl
sub
cs
inc
or
repz
inc
and
sti
movzbl
dec
ret
insb
in
xchg
das
cmpsl
adc
sti
xchg
mov
loopne
jnp
pushf
or
aam
jmp
aaa
icebp
pop
stc
adc
jae
out
sti
aas
pop
dec
jno
push
in
adc
loope
movsl
repnz
test
fpatan
cli
dec
dec
fadd
pusha
mov
out
jns
mov
adc
dec
add
xchg
mov
mov
stc
or
sub
adc
insl
add
dec
in
adc
push
imul
stc
mov
rolb
out
sbb
imul
lock
mov
xor
aad
jmp
cli
sarb
in
cmp
in
pop
lds
clc
or
cmp
scas
mov
lea
int3
andl
inc
sub
mov
movsb
fwait
xor
jne
movsl
out
xlat
mov
loopne
add
push
stos
jp
mov
sbb
mov
and
dec
cmp
pop
and
leave
fsubr
leave
and
push
adc
lahf
add
fcmove
adc
iret
pop
jmp
inc
out
xchg
insl
jecxz
xchg
std
pop
stos
js
mov
lods
push
sbbb
dec
mov
pop
ljmp
adc
outsl
push
jns
lahf
push
divb
ja
adc
movl
cltd
push
outsl
push
sub
push
push
mov
mov
add
dec
and
aam
insl
add
or
psubd
xor
call
rolb
mov
scas
sbb
cmove
leave
xchg
insb
mov
icebp
cli
stc
fs
pop
adc
jl
lods
imul
pop
mov
fldcw
adc
nop
jb
jbe
push
stos
cltd
sub
xorl
pushf
hlt
mov
inc
jbe
lea
mov
stos
inc
hlt
or
mov
mov
push
dec
mov
pop
out
loope
and
je
inc
pop
sarl
mov
dec
sbb
dec
cmp
movsl
cmpsb
out
pop
push
inc
add
movsl
xchg
sub
imul
cmp
daa
cltd
or
mov
adc
js
push
stos
sub
fstpt
int
ja
xchg
stos
pop
pop
out
fs
mov
rcrb
mov
push
mov
adc
mov
popf
aad
iret
scas
xchg
pop
mov
cli
and
push
sbb
push
stos
pop
filds
sbb
call
aas
cmpsb
and
aam
sbb
daa
push
push
adc
xchg
or
popf
jp
pushf
and
aas
mov
lods
pop
and
lods
or
pop
pusha
add
jle
shll
add
lret
sarb
add
sbb
sub
mov
push
sbb
cmc
jecxz
jecxz
pop
push
or
movsl
lods
outsl
test
inc
add
xor
leave
leave
mov
jl
cltd
adc
inc
sub
mov
inc
add
push
fstl
xrelease
fstps
sbbl
push
rcrl
loopne
xchg
jb
or
test
push
int
or
cld
bound
call
or
rolb
icebp
test
pop
sbb
scas
sbb
dec
cwtl
jp
int3
xchg
shll
mov
ja
jmp
fsub
cmp
and
cmp
jp
test
mov
test
and
vminss
pminub
mov
repz
pushf
mov
or
lock
pop
inc
ret
roll
sub
push
push
xchg
sbbb
fnstcw
cmpsl
mov
int3
xchg
adc
push
outsl
faddl
sub
enter
jns
mov
gs
rorl
fisubrl
add
icebp
or
and
jne
fbld
jmp
add
cltd
in
fidivrl
pop
call
push
adc
lcall
ret
addr16
dec
pop
mov
mov
sahf
mov
shlb
rcrl
outsb
xor
jnp
pop
stos
loop
adc
test
mov
test
repz
std
je
xchg
in
mov
int
add
xor
pop
and
lea
iret
gs
test
mov
mov
cmc
sbb
stc
jmp
inc
xchg
repnz
push
inc
cmp
adc
leave
push
std
jo
mov
sub
cs
add
mov
jmp
rorb
sbb
lods
pop
jb
adc
mov
call
xlat
or
cltd
dec
pop
cli
addl
mov
mov
sbbb
mov
aas
ds
push
mov
leave
sbb
aam
push
sarl
mov
mov
push
scas
les
aas
mov
dec
xlat
jb
into
mov
data16
pop
aam
xchg
mov
jae
movsl
decb
loopne
nop
lods
cli
pop
aaa
into
lea
fdivrl
test
in
sti
xchg
or
repnz
mov
push
loop
jne
sub
xchg
adc
jle
shr
test
lret
stos
mov
jae
xchg
int3
or
or
outsb
stc
xchg
movsb
inc
or
dec
jmp
or
or
sub
xchg
jge
arpl
insb
push
mov
iret
loop
mov
test
xchg
shll
and
add
sub
cld
or
and
adc
enter
mov
or
adcb
mov
and
xchg
bound
hlt
sub
xchg
out
jae
cmc
int3
adc
push
and
cli
push
inc
out
push
into
cli
inc
das
shr
out
sub
sub
pop
fidivrs
sub
push
mov
gs
fadds
mov
rcrb
jnp
push
push
loopne
xchg
push
cs
adc
or
sbb
push
out
out
or
adc
insb
cmp
imul
pop
push
mov
xor
hlt
cs
pop
jns
and
xchg
and
clc
in
xchg
movzwl
mov
ds
ds
inc
testb
jecxz
fwait
sub
jmp
pop
push
fistpll
xchg
into
daa
in
repnz
mov
insb
insl
push
lret
data16
sahf
push
addr16
movsb
leave
leave
repnz
jmp
sub
ret
mov
mov
push
push
dec
div
and
stos
sub
gs
adc
sahf
xchg
mov
pop
fdivrp
lcall
inc
mov
jle
pop
cmp
rolb
cmp
or
scas
mov
and
xchg
insb
mov
jg
push
jae
push
jns
adc
inc
mov
jge
pop
stos
mov
shr
incl
rolb
sub
std
test
cmpsl
popl
xchg
fists
pop
xchg
push
jnp
shl
mov
mov
pusha
add
jmp
test
inc
cmp
pushf
lock
in
popf
lods
xchg
cmp
dec
sti
iret
jb
in
pop
lahf
sbb
insb
push
jno
jle
push
pop
add
add
dec
push
push
popf
pusha
imul
xchg
out
xchg
in
sub
rcr
das
mov
bound
mov
gs
hlt
xlat
xor
pop
cmpsb
jg
sbb
rorl
dec
push
and
test
xchg
adc
inc
jo
cmp
push
dec
es
std
xor
lcall
lock
orl
and
pop
insb
imul
sub
mov
lahf
push
movsl
lea
push
unpcklps
imul
addr16
mul
lcall
fs
xchg
insb
insb
fistps
mov
fs
in
and
mov
aam
sub
fildll
push
out
cmp
es
add
fstpt
inc
data16
or
repnz
mov
mov
mov
adc
mov
sub
lcall
or
icebp
cmp
mov
popf
mov
mov
inc
mov
out
ljmp
mov
pop
cmp
test
cmp
adc
cmp
sub
adc
mov
cmp
xchg
sbb
pop
jg
loope
jl,pn
test
cs
pusha
lock
cmp
and
push
popa
dec
pop
aad
lea
mov
aam
dec
cs
ficompl
sti
pop
jge
xor
andl
out
sbb
cld
xlat
push
or
or
mov
adc
push
dec
mov
pop
jnp
popf
pusha
cmp
or
push
shll
arpl
jne
jnp
xor
add
cld
fiaddl
inc
or
in
lret
cmpsb
xor
sbb
jmp
andl
in
sbb
roll
push
jo
repnz
dec
pop
jmp
xchg
sub
les
lea
jns
dec
xor
cwtl
cmpsl
ret
leave
cmp
mov
data16
mov
std
loope
stc
popf
out
dec
std
sbbb
inc
push
inc
and
xor
sti
xchg
push
jge
mov
es
in
mov
adc
rorb
sti
nop
dec
cmp
pop
int3
xor
iret
hlt
dec
loop,pt
lock
inc
or
and
es
cwtl
roll
jge
xor
icebp
jo
sarb
icebp
test
cld
inc
lods
insb
clc
add
jne
lcall
sub
push
jb
fldenv
insl
fstl
cmc
decb
pop
mov
cmp
pop
lret
jge
add
pop
push
and
scas
mov
imul
push
jecxz
push
scas
out
or
xlat
pop
push
and
cwtl
stos
mov
fldenv
inc
or
dec
mov
in
mov
test
out
aam
fucom
mov
cmp
mov
add
enter
arpl
fcomip
test
incl
inc
sar
arpl
out
sbb
cmp
jmp
lods
jg
enter
sub
mov
jns
into
and
test
inc
insl
inc
loope
dec
add
xchg
fildll
and
dec
push
in
mov
lcall
cltd
and
xchg
arpl
les
mov
inc
fwait
push
add
pusha
inc
in
sbb
sbb
cmp
mov
and
iret
sub
into
data16
xchg
mov
mov
pushl
icebp
fldcw
loop
mov
xchg
push
test
das
mov
jne
jge
dec
test
add
jns
rol
push
pop
push
aam
inc
loop
in
gs
mov
sub
lcall
dec
es
inc
int
std
jns
sbb
mov
jo
xor
popl
fbstp
jb
push
scas
inc
dec
ja
rolb
fdiv
jb
or
xchg
jle
sahf
jl
fmull
stos
arpl
mov
xchg
lds
inc
adc
cmp
int3
ret
dec
cli
push
add
cmp
and
or
movsl
mov
xchg
movsl
mov
jae
inc
mov
dec
lcall
and
dec
stos
dec
loop
cmp
insb
pop
imul
xchg
inc
xor
xchg
adc
imul
orl
lahf
aam
xor
inc
in
xchg
filds
adc
testl
cmc
mov
xchg
mov
xor
jns
fstpt
fimuls
cld
ljmp
inc
inc
add
out
fldenv
mov
mov
mov
sbb
out
dec
pop
out
lea
inc
clc
ret
fs
jb
loop
outsl
push
jne,pn
jge
add
std
push
and
mov
sbb
mov
jae
xchg
xchg
hlt
roll
jo
aaa
stos
int
fwait
push
pop
addr16
pop
repnz
xlat
lret
xor
mov
jbe
inc
adc
dec
stc
add
ret
inc
test
inc
jle
jno
shlb
and
movsb
xchg
sub
push
mov
fcompl
xchg
pop
sbb
push
leave
mov
xchg
and
mov
mov
sub
lret
imulb
push
or
fs
inc
enter
add
push
push
push
dec
pop
cmp
in
dec
lods
dec
cli
mov
pop
stc
popf
inc
mov
push
ljmp
mov
sbb
shlb
and
roll
jb
xor
jmp
pop
pop
jb
movsl
ljmp
jne
test
inc
lds
mov
shrl
enter
pop
orl
jecxz
and
jl
add
add
jb
push
in
test
dec
dec
ret
cmpsb
je
push
in
stc
adc
je
or
pop
cld
or
cmc
or
pop
adc
mov
addr16
fdivl
scas
jnp
sbb
mov
push
sub
push
push
pop
push
cmpsb
idivb
daa
call
in
pushf
or
int3
sub
sub
cmp
mov
xor
mov
adc
mov
jae
push
add
and
dec
cwtl
stos
jl
mov
jns
andb
mov
inc
rcl
fwait
sbb
arpl
je
icebp
and
adc
inc
leave
js
repz
dec
addb
and
popa
clc
cs
fldcw
or
mov
mov
add
sbb
ljmp
imul
leave
push
lcall
mov
dec
push
and
and
push
sub
mov
jns
lahf
mov
xchg
rolb
pop
test
push
rol
fidivrs
roll
xor
out
lret
add
int3
lret
es
push
mov
std
arpl
mov
pop
cltd
aad
mov
inc
scas
dec
loop
test
sbb
push
push
mov
fistpl
mov
mov
leave
lds
adc
and
movb
cli
loope
insl
pushf
add
dec
cwtl
mov
push
cltd
movl
sub
mov
nop
jnp
rolb
aaa
test
sbb
sub
dec
popa
mov
mov
jb
xchg
stos
decl
push
adc
adc
int
rcr
out
push
int3
lahf
fidivrs
jbe
xchg
das
stos
cld
notl
testb
jge
mov
in
and
aad
add
adc
fbstp
xor
jb
cli
popa
fadd
mov
add
mov
pop
hlt
test
push
jnp
lods
add
popa
js
jno
std
dec
test
dec
outsl
ret
lock
mov
addr16
scas
push
pop
xor
or
cmc
adc
lahf
lods
add
out
push
mov
cld
int3
arpl
xor
ljmp
hlt
sub
test
ja
mov
adc
mov
push
shl
jmp
cmp
push
mov
out
test
mov
xor
dec
inc
into
cmp
dec
push
roll
int
loop
mov
jb
sbb
mov
clc
gs
adc
testb
cld
mov
add
cmc
push
loope
adc
and
pop
cld
jle
test
sahf
dec
xor
movsb
fldcw
dec
dec
ret
sub
je
pop
pop
mov
stos
out
sub
dec
inc
ret
mov
in
out
jp
adc
mov
in
xchg
inc
sti
jbe
fwait
cs
inc
in
cmp
call
mov
jmp
and
loop
int3
int
dec
in
int
inc
jbe
push
inc
jbe
push
inc
pop
mov
add
mov
sub
sbb
cltd
mov
shl
cmpsb
dec
mov
out
insb
adc
outsb
add
and
adc
mov
add
aaa
aam
sub
sub
loopne
fimuls
inc
jle,pt
lods
mov
lret
jle
xor
mov
push
aad
xor
in
aas
adcb
and
sbb
push
mov
push
add
clc
arpl
xor
xor
aam
jl
cmc
jg
cmpsl
xchg
addr16
fcompl
mov
enter
test
jbe
scas
sbb
stos
sub
repnz
cmpsb
sbb
jg
cmc
and
imul
movsb
in
or
jbe
sub
xchg
xor
mov
fsts
inc
cmp
jno
xor
repz
cmp
enter
cli
ret
mov
xchg
and
mov
sarl
cld
outsl
jge
repnz
mov
mov
xlat
ret
int
lahf
in
mov
pop
xchg
shl
pop
sbb
mov
lock
dec
pop
movsl
dec
pushf
pop
andb
jmp
or
and
shrl
sbb
int3
sbb
push
inc
mov
movsl
cmc
lea
sub
jo
inc
mov
and
push
jl
cmp
inc
std
mov
push
pusha
stos
mov
push
jbe
fsts
out
sbbl
mov
pushf
xlat
mov
icebp
fadd
sarl
mov
pop
out
sbb
outsl
sub
nop
mov
mov
sbb
rolb
xchg
jae
and
jmp
test
rcrl
mov
add
mov
xchg
je
xor
gs
xor
and
sbb
sahf
adc
lock
icebp
or
movsb
daa
scas
mov
xor
dec
sbb
jo
jae
mov
es
or
outsl
inc
dec
dec
arpl
int
pop
js
jmp
cs
imull
mov
dec
jae
push
cmp
xchg
sub
or
aad
adc
leave
mov
jle
aam
cmp
jae
xchg
int
pop
insl
sub
lcall
ret
into
push
mov
xchg
cwtl
xor
push
jl
adcl
fbld
mov
mov
mov
popf
jge
jl
in
sbb
xor
inc
arpl
jns
fldenv
test
shll
decl
inc
pushf
fadd
dec
sub
dec
out
mov
movsl
sbb
lret
jae
sbb
cmp
stos
es
cmp
add
sub
jecxz
pop
or
shrb
inc
inc
ret
pop
jbe
add
cld
mov
or
and
clc
adc
pop
add
div
fs
jle
les
xor
pushf
dec
fisttpl
mov
sbb
cmpsl
dec
rcrb
push
xchg
add
cmp
sbbb
mov
sub
mov
xchg
mov
stos
clc
sahf
scas
mov
sbb
cmpsb
inc
pop
jae
fildl
sub
mov
mov
adc
adc
lods
xchg
cmpsl
aam
aad
push
or
fcompl
dec
dec
lcall
mov
dec
jne
sbb
xchg
rorl
loop
jl
imul
or
pop
xchg
in
scas
shll
jg
sub
dec
test
cmpsb
ds
and
int3
sarl
lods
daa
decb
xor
sti
dec
pop
adc
arpl
xchg
call
aad
cltd
xor
inc
fwait
pop
jno
mov
push
push
inc
fildl
fsubl
lea
pop
jg
or
testl
into
cmc
push
pop
sahf
jae
sarb
xchg
sub
jae
push
cs
aaa
pusha
jne
cwtl
mov
mov
ljmp
cmc
and
adc
mov
les
sub
hlt
aas
dec
es
mov
push
mov
sub
mov
cli
adc
push
jne
xchg
stos
nop
jo
mov
sbb
int
dec
out
push
dec
cmp
fcoms
mov
push
or
jnp
mov
mov
loopne
arpl
mov
outsb
aad
xchg
lret
sbb
xchg
fists
sti
add
mov
les
pushl
test
sub
shll
push
push
jbe
add
test
mov
push
repnz
mov
repnz
adc
sub
xor
movsl
ja
js
pushl
and
clc
divl
adc
int3
les
inc
imul
leave
xor
xrelease
loope
neg
movsl
lcall
lods
enter
xchg
sbb
test
sub
cs
sub
jb
or
movsl
icebp
adc
mov
dec
fiaddl
adc
call
mov
leave
inc
inc
lds
clc
out
cltd
xchg
mov
jae
adc
lods
fsubrl
xchg
sub
xor
icebp
or
sub
jbe
adc
adc
sub
mov
iret
jecxz
jae
sub
stos
inc
jmp
cld
inc
mov
dec
popf
push
xor
out
push
mov
in
bound
or
mov
push
adc
aam
mov
andb
pop
fsubs
in
sbb
imul
addr16
mov
aas
fwait
or
mov
frstor
add
sub
pop
lods
xor
mov
iret
sub
ret
mov
out
or
jg
insl
shl
xor
lds
dec
lods
out
stos
xchg
sub
xor
dec
es
ficoms
xchg
mov
lods
mov
enter
xor
ds
jmp
iret
dec
jns
cwtl
out
test
mov
orl
fdivrs
outsb
cmpsb
mov
out
dec
jbe
pushf
or
push
mov
mov
paddb
mov
lret
jno
mov
mov
lock
fnstenv
cmp
inc
iret
fstpl
movb
dec
loope
xor
mov
es
add
dec
leave
cmp
loop
ljmp
pop
in
addr16
stos
sarl
popf
repnz
inc
mov
arpl
mov
mov
in
sbb
push
cmpsb
cmc
push
test
scas
fdivp
scas
aas
xchg
jmp
ret
mov
jb
and
subl
inc
jmp
pop
les
push
pop
in
xchg
jne
out
push
orb
incb
cmpsl
sti
xchg
fldenv
insl
loopne
push
sbb
or
ja
jns
push
jae
cs
imul
aaa
cmp
inc
inc
push
push
lock
out
cmpb
mov
stos
mov
mov
xchg
sub
sbb
incl
rclb
test
push
sub
scas
and
cmp
ja
dec
mov
es
pusha
or
lret
adc
sbb
pushf
cmc
or
add
xor
popf
lods
adc
ljmp
cli
xchg
repz
cmp
pop
add
js
or
sub
imul
lds
pop
sbb
in
int
lock
sahf
push
add
sbb
xchg
inc
loop
cmc
mov
mov
aad
xor
xor
fstpl
mov
clc
das
push
popa
fst
rclb
mov
mov
sub
popf
xorl
leave
or
inc
push
fstl
decb
test
int
xchg
lahf
nop
adc
fwait
lcall
push
jno
mov
cli
pop
sbb
mov
out
pop
hlt
mov
in
stos
xchg
pop
cmpsb
push
mov
jmp
fadds
outsb
ret
call
and
jo
clc
enter
pushf
aas
in
fs
inc
fsubrl
push
in
popf
or
dec
mov
cwtl
or
and
cmc
movsb
xor
insl
loopne
in
out
adc
mov
sbb
lret
and
mov
mov
gs
bound
scas
or
xor
lea
adc
testb
dec
mov
adc
js
iret
add
or
adc
popf
sub
jo
lods
movsl
push
dec
shl
inc
xor
jg
cmp
and
lods
in
sbb
mov
lods
ja
inc
mov
sbbl
out
shll
jge
xor
pop
jmp
popa
mov
push
repnz
or
rorl
mov
pop
sti
inc
sbb
jp
lock
and
jnp
xchg
test
mov
dec
dec
call
aam
inc
cmp
jle
movsb
mov
and
cltd
inc
mov
clc
mov
aas
xor
clc
mov
sti
mov
out
mov
lods
iret
mov
or
mov
mov
push
sub
pop
in
mov
lahf
inc
push
or
ret
test
ja
xchg
jb
push
jmp
ret
and
in
xlat
mov
movsb
cmp
and
push
loopne
ja
aam
and
test
cmpsb
dec
xchg
out
incb
das
lods
out
adc
clc
rcrl
repz
xlat
popf
rorl
in
dec
push
cltd
loope
les
or
cmp
cmpsb
lock
pop
ret
icebp
xchg
xchg
out
or
xchg
pop
sub
pop
js
scas
pusha
js
jno
test
clc
push
jle
jg
je
inc
xor
insl
ret
lock
sub
fnstenv
or
jns
inc
adc
inc
adc
push
sub
mov
sbb
and
lea
rep
daa
cmp
pushf
add
cmpsb
mov
xlat
outsb
out
loop
mov
int
push
add
movsl
mov
mulb
rclb
icebp
mov
in
mov
pop
sbb
fwait
mov
mov
movsb
push
out
xchg
nop
push
in
rorl
rorb
mov
std
pop
aaa
adc
xchg
inc
mov
xor
out
std
push
mov
in
js
dec
inc
adc
loop
xor
lods
jne
out
add
mov
add
mov
mov
dec
fldcw
xlat
mov
add
hlt
icebp
lahf
test
ja
loop
sbb
les
lret
add
orb
dec
and
mov
mov
leave
xlat
inc
xchg
arpl
mov
xor
sbb
and
cs
xor
cmp
mov
push
pushf
scas
xor
jg
pop
fcmovnu
inc
cmpsl
adc
enter
in
std
mov
or
mov
in
je
sbb
aaa
aas
pop
xor
inc
add
push
test
dec
pushf
xchg
lods
cltd
sub
insb
cmpsb
sbb
into
push
jne
jbe
cmp
mov
xchg
inc
fsubrs
push
mov
cmp
out
inc
lret
clc
das
pop
div
sbb
iret
push
dec
pushf
fiaddl
out
mov
daa
pushf
jnp
lcall
and
and
sub
adc
add
dec
or
mov
or
push
sbb
cmp
or
and
repnz
leave
push
adc
fs
sbb
test
jmp
fstpt
loope
and
mov
fcmovnb
fs
das
dec
pop
pop
cmp
loop
popf
negb
dec
mov
jns
aaa
and
insb
iret
outsl
xchg
call
adc
inc
ret
sbb
pop
mov
sbb
pop
lret
mov
loope
sbb
call
inc
test
cmp
xchg
pop
adc
push
push
xchg
add
fs
ret
inc
pop
gs
jae
pushw
sub
inc
out
ja
dec
lret
ljmp
push
mov
insl
push
ret
sbbb
repz
mov
xchg
lcall
clc
xchg
and
jo
fcomps
sub
sahf
daa
mov
repnz
shrb
loop
jecxz
sahf
sub
and
out
and
inc
sbb
test
jecxz
lea
and
cmpsb
rolb
or
cmp
negl
and
out
xchg
out
cmp
cmp
aas
mov
and
pop
pushf
cmp
add
mov
xor
shrl
iret
xchg
pop
mov
sub
adc
dec
sub
movsl
out
lcall
lock
pop
lock
sahf
scas
xor
cltd
jne
mov
negb
rcrl
add
cwtl
mov
mov
fs
andb
cmp
out
roll
std
dec
scas
mov
ds
rcrl
in
int
push
repz
imul
or
push
lock
xor
fisubl
loopne
rcr
add
mov
orb
pop
ret
cmc
pusha
jnp
or
das
jnp
test
or
inc
inc
shrl
fsubl
pop
mov
hlt
or
sub
ficoms
jo
rcr
test
or
xchg
test
push
sbb
jmp
loope
out
or
shlb
and
mov
pop
repz
and
pop
pop
jo
cld
test
pop
loopne
loop
dec
xchg
lcall
out
outsl
fsts
mov
ds
add
add
jae
inc
sub
and
jns
adc
lods
ds
pop
stos
or
stos
inc
mov
icebp
push
add
jns
inc
cmp
add
push
cmp
sbb
and
fldl2t
loope
dec
pop
and
sub
push
inc
nop
imul
daa
sub
mov
outsl
push
jbe
push
test
push
lock
popf
stos
movsl
adcb
bound
jno
iret
ljmp
andl
fildl
les
mov
rcll
dec
aam
popl
add
sbb
fistps
fisubs
stc
rcrb
pop
mov
cmp
mov
fbld
xchg
push
daa
add
subb
ss
sub
cmpsb
sti
push
lcall
fs
jmp
adc
and
or
stos
and
aaa
or
fidivs
lret
mov
fisttps
mov
mov
shlb
ret
mov
repz
daa
cmp
repz
mov
add
sub
rorb
popa
jg
and
out
and
test
jmp
das
push
or
dec
stos
mov
jl
leave
push
cs
dec
mov
xchg
sbb
ds
cs
push
adcl
jle
in
pop
loop
mov
inc
je
pop
adc
jge
jnp
insl
mov
js
test
enter
or
jp
icebp
or
aaa
clc
rcr
xor
xor
sbb
xor
sub
xchg
call
arpl
xor
sub
pop
test
push
xor
repz
pop
bound
xchg
fidivs
xchg
imul
pop
pop
dec
mov
js
push
call
mov
icebp
and
mov
out
int3
test
ret
dec
test
pop
sti
adc
or
pop
add
out
ss
cmp
cmp
cmpsl
clc
movsl
pop
insb
add
cmp
je
getsec
push
mov
xchg
fscale
sub
out
xor
sub
or
out
cmp
lret
or
ret
adcb
push
sahf
scas
enter
ret
adc
aad
mov
sbb
pop
pop
xchg
xchg
fadd
pop
in
test
dec
retw
fdivs
inc
bound
gs
scas
out
stc
adc
cli
test
movsb
adc
inc
jo
sbb
cwtl
sbb
sbb
pop
cmp
add
cltd
sub
stos
iretw
popf
xor
xchg
sub
push
les
mov
pop
imul
dec
mov
repz
push
mov
ret
inc
test
test
jg
or
pcmpgtb
imul
outsl
cmp
xchg
dec
pop
xor
int
jns
mov
mov
shrl
push
fiadds
xlat
stos
test
xchg
adc
scas
lods
ljmp
and
mov
test
xchg
icebp
or
sbb
add
mov
push
rdpmc
mov
push
inc
xchg
sub
scas
in
in
or
mov
and
imull
add
add
or
cmpsb
pop
mov
mov
hlt
dec
inc
jmp
das
addr16
lcall
cld
adc
data16
dec
pop
ret
enter
movsl
dec
jmp
jno
and
xor
dec
cwtl
out
std
stc
or
inc
pop
and
jg
or
fyl2x
dec
out
aas
sbb
adc
xchg
or
stc
sub
mov
dec
repz
push
es
dec
jecxz
test
push
es
bound
movsl
or
sub
pop
mov
dec
icebp
adc
lods
inc
xchg
and
jo
je
dec
shrb
das
testb
adcb
adc
xchg
daa
pop
lods
pop
or
insl
jle
sahf
lcall
sub
sub
lods
arpl
fcoml
test
insb
sarl
inc
andb
or
sbb
xor
sub
and
adc
cmp
xchg
stc
mov
orl
mov
fldt
mov
jns
mov
gs
xchg
sbb
push
inc
daa
pop
fnsave
lods
mov
cmp
jo
inc
aaa
aad
cli
loope
ja
xchg
push
in
bound
xor
cmp
fs
shlb
dec
cmp
popf
outsb
movsl
imul
negb
xchg
aad
fildl
mov
cmc
adc
mov
sbb
dec
sub
test
pusha
pop
addb
sahf
fs
dec
sub
fwait
dec
cs
ja
adc
das
fmull
repz
pop
jmp
fcmove
flds
add
push
jnp
arpl
or
lret
fcomi
jmp
or
add
mov
outsb
scas
pop
cmp
icebp
dec
cmc
es
push
add
dec
cmp
jns
mov
aad
sub
pop
loopne
xor
in
sub
adc
jp
iret
and
bound
jns
or
cltd
mov
add
lcall
jbe
and
fmull
out
jno
jb
adc
aas
int3
loope
inc
inc
test
test
push
ret
inc
sub
fs
xlat
jb
push
mov
jle
cwtl
cmp
popa
and
dec
jns
mov
add
js
push
mov
mov
inc
pop
cmp
sbb
sub
out
inc
xlat
mov
jge
sub
jbe
or
sub
pusha
bound
int3
shr
into
jb
fs
outsb
std
push
stc
inc
or
ja
mov
dec
arpl
xor
or
test
aas
pop
repnz
jne
mov
inc
call
fcmovnb
sti
fwait
imul
xchg
adc
sbb
ret
jne
jmp
adc
xlat
jmp
sbb
aaa
or
call
or
nop
cmp
insb
cmp
xor
inc
sub
sub
and
decb
movsl
mov
pop
sub
mov
jns
in
sub
jecxz
imul
cmp
fisttpl
add
jecxz
cld
ss
cwtl
or
stos
add
insb
inc
dec
sbb
pusha
adc
and
xorb
lock
movsb
arpl
mov
jae
mov
jbe
in
cmpsl
rep
insl
cmp
xor
bound
xor
dec
loope
ljmp
lret
mov
mov
pop
fldcw
inc
pop
out
out
adc
dec
xor
loop
into
gs
sbb
sahf
adc
cwtl
jno
add
pop
mov
shlb
iret
cmp
fsts
test
fistps
js
jne
xchg
mov
adc
pop
or
out
fs
aaa
es
movsl
dec
add
cmpsl
dec
adc
test
and
stos
lea
and
jno
jmp
mov
out
xchg
add
sub
out
pop
in
mov
xchg
jbe
int
inc
dec
nop
or
pusha
daa
mov
pop
sub
jg
inc
and
aad
lock
lods
fistps
xchg
cmpsl
data16
xchg
pusha
test
arpl
enter
dec
cs
sbb
cmpsl
inc
cwtl
cmpsl
lcall
pushf
aas
sarb
sbb
out
and
rdmsr
sbb
inc
sti
pop
adc
lock
lret
fsts
pop
adc
jp
push
mov
jo
add
nop
aaa
pop
enter
push
lahf
sarl
sbb
dec
mov
mov
clc
daa
cmpsb
or
daa
aam
sbb
insl
lods
xchg
jmp
dec
pmulhw
mov
push
mov
xchg
imul
fcmovb
shlb
andb
loop
pop
pop
out
cmp
dec
popa
cld
jo
pop
loop
xchg
sarb
popa
cld
jecxz
std
sbb
jo
cmp
addr16
clc
or
movsl
in
leave
in
mov
fisttps
cltd
sub
push
mov
scas
icebp
mov
sub
push
mov
pop
gs
leave
xchg
test
adc
fistpl
mov
jl
into
popa
or
scas
mov
shrl
xchg
cmpsb
lea
sbb
scas
jmp
mov
into
adc
adc
sub
xchg
pusha
jmp
dec
push
loop
cltd
and
sbb
shrb
enter
xor
pop
fnsave
in
in
adc
jg
pushf
hlt
pop
popa
sub
adc
inc
cs
arpl
and
inc
adc
jo
inc
jae
push
ds
and
shrl
push
inc
stos
fbstp
test
and
sbbl
cmp
cmc
int3
and
int
jb
xchg
shrl
jecxz
hlt
js
pusha
shrl
jo
js
mov
inc
xchg
addr16
arpl
popf
lods
sbb
or
stc
push
sti
pop
loope
or
jo
arpl
and
inc
bound
test
push
pop
add
inc
imul
sub
sbb
or
mov
cltd
gs
push
and
adc
mov
xlat
aad
pusha
cli
push
in
sub
adc
jp
lods
call
push
sbb
adcl
mov
mov
fisttpl
ja
dec
mull
add
xchg
adc
dec
mov
sub
xchg
or
lret
loopw
adc
mov
sahf
push
inc
push
ljmp
and
mov
cmc
jl
imul
or
sbb
lret
cld
push
ds
rcrl
daa
push
fbstp
xchg
add
fwait
repnz
mov
shlb
dec
sbb
or
cmp
sti
pop
scas
cmpsl
pop
das
adc
sbb
jmp
mov
into
lcall
lock
jae
imulb
dec
mov
pop
popa
mov
in
popf
jmp
inc
inc
adc
jae
fcmovne
in
cltd
in
int3
lahf
and
je
je
jns
xchg
mov
test
cs
pop
dec
push
mov
xchg
cmp
mov
aaa
mov
in
test
stc
pop
mov
pop
sarb
mov
jno
sub
arpl
loope
push
xchg
or
jnp
imul
lock
inc
or
jp
mov
faddl
mul
js
xchg
lea
push
xchg
test
adc
dec
dec
sbb
xchg
jp
mov
cli
xchg
mov
push
inc
ljmp
sbb
pop
call
xor
inc
pop
lahf
inc
imul
fwait
jo
dec
inc
lcall
fistl
jnp
loopne
bound
mov
scas
mov
push
imul
test
pushf
inc
bound
sbb
iret
ss
mov
out
int3
sub
pusha
cli
pop
leave
xchg
pop
je
adc
addl
adc
xchg
lcall
cmp
inc
xor
sub
sbb
rcrb
sbb
data16
rclb
addr16
ss
das
cmp
xchg
cld
push
dec
cwtl
add
or
fucomip
sbb
jne
cmp
fwait
clc
add
aaa
jne
les
roll
repz
push
movsl
dec
outsl
lea
subl
or
dec
pop
jbe
push
push
mov
xchg
scas
enter
fcomi
enter
sbb
inc
in
jno
mov
std
mov
jb
xor
adc
mov
adc
pop
pop
in
call
rol
aam
add
nop
jb
dec
filds
out
aas
out
jle
push
out
push
push
repnz
test
mov
incl
out
stos
pushf
adc
into
in
xor
xor
pop
cmpsb
adc
loop
jl
xchg
pop
mov
mov
sarb
fcoms
mov
sub
fdiv
jl
pop
sub
adc
in
cmc
adc
fwait
add
daa
out
fpatan
dec
int
mov
pop
xchg
cli
jl
or
pop
pop
jne
rcl
jne
loop
insl
popf
in
fsubs
in
push
jae
inc
cmp
pop
push
lret
fnstenv
sbb
icebp
je
or
pusha
or
mov
jo
push
cmc
fsubs
dec
outsl
jno
xchg
mov
sub
adcb
xchg
push
mov
sub
pop
mov
fildl
pushf
test
int
outsl
or
xchg
ss
stos
mov
ljmp
add
mov
and
mov
xchg
imulb
sub
loop
add
push
and
sub
mov
push
mov
lret
mov
sub
inc
call
cmpsb
hlt
dec
pop
dec
push
xchg
dec
repnz
push
cmp
mov
sbb
sub
pop
mov
adc
adc
jne
mov
pop
pop
mov
lods
rorl
jne
sbb
popf
enter
out
ds
inc
dec
mov
cli
aad
in
subl
clc
inc
daa
push
adc
fisttps
push
or
es
test
mov
int3
or
cmp
adc
mov
test
jbe
nop
sbbl
sub
push
push
lods
lret
out
xor
add
test
xchg
mov
mov
iret
fwait
inc
push
add
ret
in
dec
cmpsl
mov
jbe
sbb
mov
xchg
sub
push
aas
loopne
out
insl
inc
movsb
jecxz
mov
jl
inc
xchg
mov
mov
jg
xchg
mov
push
and
dec
mov
scas
and
fdivl
sbb
push
adc
xchg
lock
add
and
xchg
and
jl
inc
dec
popa
dec
push
stos
cmp
jmp
cs
mov
jns
subl
jo
mov
mov
fwait
dec
out
inc
jb
xchg
test
xor
inc
dec
mov
repnz
mov
enter
add
lret
std
xchg
bound
shll
pop
jns
or
sub
and
fcomps
jg
dec
repnz
and
push
sub
sbb
out
cmp
and
push
inc
fdivrs
fnsave
cmp
in
in
pop
test
sub
or
pop
mov
xlat
mov
adc
mov
mov
pusha
xchg
sbb
imul
fisttpll
mov
xchg
pop
pop
push
mov
lea
ret
dec
repz
shrb
inc
mov
xor
pusha
fildl
push
fdivrs
sub
or
mov
or
mov
lahf
and
shrl
mov
dec
push
call
je
out
sbb
xchg
stc
test
cmpsb
sbb
fmuls
bt
sbb
pop
adc
movsl
cmc
and
push
rcrb
xchg
sub
xchg
jp
int
in
jns
add
int
pop
mov
push
pop
ret
cmp
into
cmpsl
or
inc
std
sub
pusha
lcall
xlat
daa
mov
sbb
fstl
in
or
orb
orb
std
es
sti
sbb
mov
movsb
xor
rcrb
xor
add
out
push
test
dec
loop
or
add
pop
std
pop
aam
jno
cld
std
pop
cs
clc
push
lea
rcrb
loop
jno
or
test
jbe
push
mov
shl
cmpsl
daa
ss
stc
mov
ret
or
dec
pusha
and
inc
stos
jne
mov
out
pop
add
bnd
mov
mov
enter
xor
es
inc
push
xchg
xchg
dec
pop
leave
enter
in
and
lret
pushf
jle
fisubrl
jecxz
mov
add
pushl
cmp
and
dec
cmp
ret
rorl
inc
insl
dec
repz
mov
rcrb
sbbb
mov
cmp
mov
out
cmp
push
or
shl
arpl
mov
arpl
cmc
lret
and
and
std
fmuls
or
sub
mov
xchg
add
jnp
jle
filds
test
jbe
das
stos
adc
and
ds
jmp
adc
push
inc
mov
jns
ljmp
or
xor
adc
cli
lcall
movsb
in
pop
mov
jb
or
daa
jle
sub
loopne
mov
xchg
icebp
lods
add
scas
test
or
out
add
push
clc
loopne
adc
push
adc
mov
xor
sahf
xor
pop
mov
addr16
cs
xchg
dec
iret
ja
clc
pop
repnz
mov
cld
mov
aad
mov
sti
dec
push
push
mov
ret
and
mov
mov
rcl
jae
lea
adc
sbb
test
inc
pop
jge
mov
sub
aad
std
repnz
sub
ljmp
lea
js
pop
and
or
or
lods
test
push
jae
fcomps
andb
jno
fcmovnb
stos
sub
fdiv
xor
fs
mov
xlat
adc
mov
movsb
cmp
sahf
clc
loop
pop
fwait
clc
jae
pushf
push
int3
fbstp
jns
hlt
addr16
adc
fs
stc
insb
aam
xchg
pop
ret
ret
scas
push
out
pop
fidivrs
or
cwtl
das
ret
mov
stc
sbb
jl
stos
callw
mov
add
scas
push
push
or
data16
mov
js
jb
insb
pop
in
fildll
je
sub
jg
or
rorb
jg
push
lods
inc
xor
push
add
lret
mov
jae
je
scas
xor
loopne
decb
adc
xor
mov
adc
popf
pop
push
and
jle
cs
mov
pop
popa
data16
cmp
push
jb
pop
xchg
into
into
ret
pop
rcl
insl
mov
cmp
mov
fwait
outsl
push
int
lds
lods
andl
mov
pop
out
or
push
mov
loop
ds
bndstx
cmp
out
dec
xlat
mov
loopne
adc
inc
mov
pop
iret
inc
lret
add
in
cmp
inc
jbe
jge
movsb
cli
bound
ficoms
xchg
mov
xor
xor
push
jnp
dec
test
lods
outsb
divl
push
cmp
sub
rorb
clc
cwtl
dec
fwait
inc
add
push
daa
pop
or
gs
xlat
dec
xchg
bound
mov
lea
and
mov
ss
das
insl
jnp
call
add
xor
leave
and
xor
inc
dec
iret
jae
rcl
cmpsb
in
out
leave
popa
orl
inc
pop
out
xchg
push
inc
push
and
push
add
loop
movsb
mull
sarl
stos
loop
test
cltd
push
add
fisubs
and
stos
jns
test
xchg
sub
clc
push
shlb
sub
xchg
test
dec
xchg
pop
jbe
cli
cmpl
push
add
mov
call
sbb
shrl
cmp
stos
and
cwtl
mov
loop
pop
push
jo
pop
movsb
out
test
daa
or
cmpsb
je
push
int3
cltd
sub
out
in
test
xchg
data16
lcall
je
addr16
inc
fistps
loope
inc
mov
pop
jecxz
enter
mov
imul
lcall
adc
xlat
mov
sbb
xchg
push
xchg
xor
mov
jno
inc
inc
lods
jo
push
sub
das
xor
pop
fldenv
insl
insb
and
push
loopne
rol
xor
cmpsl
fsts
jb
lret
sub
popa
int
lcall
cs
je
out
jb
test
mov
fnsave
ja
and
sti
push
repz
gs
adc
push
jb
push
xchg
iret
icebp
pop
aam
pushl
pop
cli
xchg
push
pop
and
mov
cltd
add
jne
outsb
movsb
std
cli
pop
mov
cltd
mov
push
dec
lock
cmp
mov
pop
push
xor
xchg
sub
pop
jmp
sub
add
jge
push
sub
pop
lahf
xchg
sub
push
mov
ret
jno
push
arpl
adc
push
movsb
daa
mov
out
cmp
adc
mov
pop
add
out
clc
adc
test
xor
addl
fs
mov
iret
and
xchg
sbb
mov
cmp
or
mov
cmp
daa
pop
aad
dec
or
inc
cli
and
test
gs
xor
bndldx
jno
adc
clc
arpl
inc
ret
sbb
addl
xlat
imul
adc
mov
shll
std
jecxz
aad
push
and
jle
dec
inc
cli
mov
sbb
push
int
cmp
ljmp
add
and
pop
push
dec
sbb
cmp
cmpsb
ljmp
add
cs
sub
dec
loop
or
in
xchg
shrb
hlt
les
js
mov
cmpsb
dec
call
outsl
sbb
stc
lahf
nop
sub
in
add
scas
mov
cld
fisubrs
mov
mov
xchg
incl
or
cltd
jecxz
adc
push
jecxz
lods
cmpsl
xchg
inc
sar
lcall
or
scas
fildl
shl
dec
add
scas
cmpsb
cmp
roll
fcoms
popf
fisubl
push
xchg
psrad
rorl
pop
icebp
and
mov
loopne
test
mov
xchg
clc
sbb
mov
sbb
or
daa
cmp
iret
xchg
add
popl
rcrb
sub
inc
push
jne
or
xchg
orb
hlt
xchg
adc
lcall
sbb
leave
xor
lods
imul
pop
cmc
inc
jmp
stc
loope
fldcw
sbb
lcall
inc
fbstp
push
inc
iret
cwtl
cli
js
fsubrl
out
mov
scas
pop
inc
push
idiv
fmull
shlb
js
mov
mov
movsb
idivl
sub
cmp
adc
jb
ret
mov
mov
jno
xor
lods
jmp
in
push
push
mov
mov
test
push
movsl
jb
sti
push
sbb
dec
icebp
add
lods
aad
loope
push
push
popf
sbb
repz
dec
jmp
push
fdivl
jle
mov
scas
xchg
xor
jmp
xor
or
pop
test
in
fwait
and
mov
sbb
movsl
jno
clc
sbbb
mov
pushf
sub
lods
rol
pop
or
out
in
lret
sbb
push
test
push
fisubrl
add
sahf
sub
loop
push
lret
and
mov
mov
sub
dec
imul
push
cltd
cmp
xchg
xchg
testb
imul
cmc
pop
sub
loop
rcll
jae
adc
addl
fcompl
lea
xor
pop
lret
sbb
cmpsb
cmp
aas
arpl
jl
inc
fidivl
pop
adc
lea
pusha
insl
jae
fs
push
fst
or
cltd
jge
movsl
inc
imul
movsl
loopne
lock
jno
add
add
mov
or
les
and
lods
jo
dec
out
add
hlt
inc
loope
jnp
aaa
jnp
inc
sub
xchg
loope
inc
leave
sbb
pop
pusha
js
or
es
or
xchg
outsb
cmpsl
jo
les
inc
popf
ret
outsb
adc
and
push
add
in
jb
jmp
inc
in
je
loop,pt
jo
stc
mov
cmpsl
adc
sahf
and
popf
addps
hlt
adc
sbb
xchg
aaa
pop
arpl
mov
adc
in
add
dec
fiaddl
or
mov
add
sbb
adc
mov
push
data16
sbb
cmp
mov
in
push
adc
xchg
lods
push
test
icebp
xor
hlt
pop
push
js
test
rcrl
adc
sbb
inc
sub
inc
arpl
ret
cmpl
or
out
xchg
je
mov
xor
lret
xor
out
bound
push
cli
push
test
outsl
pop
gs
adc
mov
fdivl
add
leave
push
pop
cwtl
push
mov
sub
push
mov
pop
loope
add
jp
xor
adc
dec
or
test
pop
xchg
imulb
and
jl
scas
sarb
fldt
xor
in
ret
iret
out
aas
lock
and
ljmp
pop
into
andb
push
xor
pushf
incb
jae
pusha
and
xchg
pop
mov
cmp
lahf
cmp
push
dec
dec
rcrl
lds
jle
pusha
aaa
test
lret
cmp
or
xchg
sub
sbb
mov
lock
test
push
mov
adc
push
jl
test
das
movb
cmp
fbstp
in
test
jno
cmp
pushl
outsb
cwtl
and
stc
push
sbb
dec
xlat
cmp
jmp
aas
outsl
push
popa
mov
cmp
adc
jg
cmc
mov
xor
xor
sar
cs
cmp
and
mov
push
push
scas
testl
rorb
repnz
push
push
outsb
cmp
mov
xor
imul
mov
outsb
call
push
movsl
and
pop
jmp
sub
push
sub
movsb
testl
or
push
lock
out
pop
leave
xor
adcl
sbb
xor
aas
popa
jnp
dec
inc
dec
cmp
xchg
xchg
dec
pop
xor
jmp
cwtl
les
fbld
push
dec
mov
fsubrl
fisubrs
sub
gs
cmp
mov
sbb
and
cmp
stos
xchg
mov
ficompl
test
jns
xor
jo
daa
arpl
arpl
mov
fs
jl
es
es
push
enter
mov
fisubl
lea
adc
push
fstpl
movd
inc
or
jno
pop
xchg
cmp
xchg
mov
ret
arpl
ret
push
mov
xchg
in
push
popf
aaa
lret
cmp
push
imul
xchg
pop
aaa
nop
jo
sub
pop
inc
inc
jmp
jg
mov
mov
mov
push
fiadds
lods
adc
jno
mov
sbbl
adc
shrb
push
jae
dec
xchg
xor
sub
and
or
or
cmp
test
rcl
inc
sub
call
mov
mov
shlb
mov
fwait
or
dec
xlat
les
push
xchg
inc
cmpsl
ljmp
call
jmp
xchg
iret
pop
dec
sbb
jecxz
loop
je
cmp
outsb
xchg
jmp
dec
shl
mov
mov
sti
pusha
scas
out
iret
mov
hlt
fldl
jg
inc
test
add
xor
subl
sub
mov
xor
stos
loope
in
ss
xchg
cmp
hlt
dec
ficoms
std
cli
shr
sub
lea
add
pop
outsb
mov
adc
mov
add
sub
pushf
pop
ret
loope
cwtl
mov
js
mov
sti
loope
aaa
inc
inc
push
in
arpl
fldenv
inc
pusha
pop
push
popl
aaa
cltd
repz
stc
fistps
push
sbb
hlt
scas
sbb
inc
dec
outsb
test
or
mov
pushf
xchg
in
dec
or
es
and
pop
adc
mov
fnstenv
dec
repz
popa
cmpsb
adcb
rclb
imul
xchg
cmp
outsb
pop
dec
daa
mov
pop
sarb
stos
in
add
fdiv
mov
jae
rol
mov
adc
pop
test
sub
xor
das
dec
int3
mov
popa
push
adc
push
sti
inc
ret
pop
xor
jg
add
pop
mov
loop
ja
xchg
mov
inc
orl
xchg
mov
hlt
mov
dec
dec
test
ljmp
out
inc
pop
adc
mov
mov
jmp
nop
cmp
shr
inc
sbb
lret
test
cmp
cmpb
mov
add
mov
push
cmp
mov
lret
imul
sbb
loopne
sarb
xchg
mov
stc
ljmp
jg
lret
mov
adc
in
push
decb
fwait
in
int
nop
insb
pop
mov
imul
inc
cmp
adc
pushf
shll
sbb
repnz
cmpsl
stos
mov
adc
push
fs
sbb
xor
adc
subl
dec
mov
jg
sub
mov
mov
push
dec
pop
mov
daa
aam
sub
sub
xchg
mov
pop
shl
pop
cli
das
pop
sub
or
and
jne
shll
push
and
int
mov
cmc
cmp
cmp
loop
mov
movsb
add
pop
jbe
andl
pop
mov
cmp
aas
xchg
and
shll
push
xor
dec
imul
das
ret
jg
jno
lock
mov
or
sub
push
clc
sahf
add
cltd
jno
int3
test
sar
jo
popf
inc
daa
test
test
and
arpl
test
jne
mov
and
jl
jbe
mov
inc
lock
cmc
adc
popf
xor
jmp
dec
mov
lock
push
out
jg
add
daa
std
int
decl
clc
mov
hlt
dec
fst
jg
imul
pop
sbb
or
outsb
inc
addl
imul
and
lret
sti
sub
inc
dec
inc
nop
movsb
in
ret
adc
insl
lods
adcb
mov
into
enter
stc
in
xchg
shrd
icebp
in
mov
cs
bound
sbb
push
adc
jo
clc
jle
mov
test
ds
mov
bound
scas
mov
shlb
int
adc
adc
and
lret
das
push
cmp
lea
push
sbb
es
outsb
xor
jle
cmp
dec
movsb
pop
adc
sub
sub
mov
inc
xor
into
data16
outsl
shll
xchg
sahf
clc
mov
inc
dec
or
xchg
xchg
arpl
mov
or
pop
fistpll
fidivl
add
mov
or
or
jg
xchg
leave
cmp
sahf
add
cltd
pusha
dec
and
jb
mov
jmp
xchg
pushf
lods
inc
into
mov
mov
loop
sahf
dec
test
insb
push
push
or
jo
les
andb
xchg
and
xorb
cmp
loop
out
pushw
aaa
jp
out
sbb
loope
out
dec
stos
sbb
call
pop
ljmp
repz
sub
into
sub
mov
shll
jecxz
mov
pop
das
xchg
shrl
pop
lea
or
fadds
leave
adc
ficompl
movsl
dec
mov
pop
sti
loop
jbe
push
data16
push
test
fwait
mov
mov
fmull
dec
xchg
scas
popl
dec
ljmp
call
or
andb
mov
pop
scas
enter
jmp
sub
lret
testl
pop
rcrl
pop
les
add
jl
icebp
xchg
inc
movsb
mov
dec
arpl
mov
test
in
mov
fidivs
lret
gs
fs
clc
adc
sarl
push
leave
stos
gs
fiaddl
inc
out
andl
sbb
sub
cmp
mov
mov
cmp
notb
push
addr16
mov
mov
jbe
mov
push
pop
hlt
mov
pusha
mov
std
adc
jecxz
clc
sbbl
loop
lds
dec
mov
add
test
sbb
add
mov
xchg
dec
fnstcw
data16
les
loopne
xor
pop
mov
fstpl
jl
xor
outsb
icebp
insl
and
and
les
aaa
mov
cmpsl
add
fs
bound
dec
cltd
xchg
jbe
sub
sbb
jg
insl
out
push
outsb
sub
cld
jbe
add
loope
outsb
xchg
js
mov
test
xor
mov
jnp
xchg
nop
and
inc
cmpsl
imul
loope
popa
dec
in
loop
andb
add
xorb
inc
mov
cmpsb
inc
lret
push
mov
or
xchg
cmp
mov
dec
data16
sub
sti
add
sub
inc
arpl
push
jnp
lock
cmpsl
jecxz
pop
out
pop
jl
int
jle
xor
mov
or
imul
jbe
bound
xor
jb
nop
movsb
pop
mov
add
add
fwait
rolb
shrb
push
lea
fucomip
pop
sbb
push
xor
inc
cld
out
loope
or
ja
mov
je
test
call
int
pop
andb
mov
das
lret
jg
movsl
mov
mov
pushf
jg
mov
aad
movsb
mov
sbb
pop
or
shrl
sarl
std
fs
test
push
popa
es
sbb
xlat
das
and
jg
jg
add
jge
jnp
jns
add
jmp
lea
jg
orl
xchg
xor
jns
sub
in
call
outsl
ja
mov
les
cltd
testl
mov
inc
icebp
int3
scas
fwait
push
pusha
or
lea
popf
xorb
xor
inc
cs
mov
popa
mov
jmp
sbb
popf
lods
mov
pop
lahf
adc
and
and
jnp
fs
adc
bound
mov
adc
pop
jne
mov
das
and
ret
clc
push
and
or
push
jno
xchg
jno
add
lock
es
adc
aaa
stos
out
addr16
nop
adc
or
loop
les
sti
pop
loope
mov
jmp
in
sahf
scas
aaa
pop
pop
stos
push
or
hlt
xchg
xor
leave
lcall
jp
sub
lods
cmc
inc
and
rcrl
pop
push
pop
lcall
mov
inc
insl
sbb
push
lock
stc
js
out
movl
pop
sub
mov
add
ret
mov
in
lret
jnp
push
push
mov
popf
nop
dec
adc
cmpl
scas
sbb
test
add
fdivp
add
and
sarb
sub
je
sub
pop
xor
xchg
add
scas
cmc
sbb
fmul
jne
mov
mov
inc
cmp
rcrb
in
loop
cmp
xchg
out
mov
add
les
and
pop
lods
in
adc
int
mov
sarl
pop
pop
mov
lahf
xchg
sub
pop
dec
shlb
lods
sub
dec
push
imull
popf
or
cmpl
push
outsb
aas
mov
bound
dec
aas
mov
or
sbb
popl
adc
jle
fwait
cmp
das
inc
lret
mov
dec
ds
pop
test
fsubrs
push
mov
pushf
dec
pop
sti
push
sti
inc
into
into
out
jbe
shll
aad
jbe
fidivrs
pop
mov
or
idivl
mov
sub
pusha
sbb
into
cltd
cmp
pop
shll
stos
cmc
or
je
repz
cmpsb
mov
ljmp
mov
dec
pushf
rcll
adcb
gs
rorb
lahf
sub
jmp
lahf
scas
mov
fstps
jl
clc
jg
clc
mov
lret
inc
fsubr
lods
mov
mov
jne
aad
or
sub
adc
jge
andl
lahf
lods
fs
mov
rdpmc
sarb
cs
jae
jno
rolb
xchg
cld
inc
addr16
lea
pushf
push
pop
jnp
mov
cmc
ficoml
mov
adc
jbe
xor
mov
push
jecxz
pop
hlt
pop
mov
fbld
repz
in
dec
fwait
jle
je
pushf
idivl
rcrb
jg
push
call
jp
push
hlt
xchg
push
fcoml
cli
jae
ret
xchg
sbbl
or
popf
jg
sbbb
test
push
add
mov
xchg
jle
nop
dec
jl
xlat
push
lods
push
aam
jno
sbb
hlt
pop
lods
stos
adc
loop
adcb
nop
and
shrb
inc
int3
xchg
jg
adcb
inc
xchg
and
cmp
stc
or
nop
mov
push
mov
inc
dec
dec
mov
aaa
pop
mov
add
cltd
loopne
dec
fwait
lret
mov
jmp
out
add
testb
or
xor
addl
inc
mov
sub
mov
push
js
mov
lds
mov
adc
dec
mov
and
adc
dec
adc
or
jle
in
pop
call
pop
add
imul
mov
mov
pop
pop
adc
push
mov
pop
sub
movsl
xchg
pop
mov
xor
cmp
loopne
xor
dec
cmp
add
int
and
push
iret
std
xor
sub
push
sub
frstor
popf
pop
add
push
out
and
jns
xchg
adc
xlat
jnp
sbb
addr16
add
and
fsubrp
loopne
mov
movaps
aas
mov
cli
lret
sbb
push
push
jno
lea
add
adc
adc
jb
out
stos
inc
cmp
jecxz
and
fisttpl
xchg
imul
mov
sub
mov
push
mov
clc
fildl
fwait
mov
mov
aaa
std
push
call
popa
dec
hlt
xchg
cmp
dec
mov
xor
lock
jp
jge
pop
lock
mov
into
movl
xor
pop
cmpsl
push
rclb
ret
mov
xchg
ja
test
js
in
dec
cwtl
sti
imul
jns
push
xor
mov
push
dec
or
lds
lahf
negl
mov
mov
shrl
push
out
int
cmp
jge
and
das
sbb
xor
adc
xchg
push
adcl
adc
sbb
pop
outsb
ret
jl
ljmp
sub
pop
push
cltd
jg
ja
test
cs
or
shlb
testl
mov
sbb
mov
int3
inc
mov
add
push
xchg
cmp
jns
or
enter
outsl
jo
test
gs
jo
push
sub
sarb
cmp
jge
icebp
pop
push
retw
idiv
ficoml
imul
and
into
addl
mov
bound
mov
or
cld
xor
jmp
fucomi
adc
mov
into
gs
mov
jge
and
inc
fidivrl
adcb
inc
sub
dec
fs
mov
and
and
xchg
out
fnsave
dec
xor
into
dec
sahf
pop
xchg
push
push
ss
pop
mov
mov
test
jo
xor
movsb
cmp
mov
loopne
xchg
pop
mov
cwtl
mov
fbstp
add
call
movsl
adc
lds
push
aam
test
cmp
lods
sbb
xchg
mov
mov
das
mov
enter
adc
lcall
cmpsb
jmp
icebp
int3
sbb
add
pop
mov
push
ss
paddsw
cmpb
fidivrl
mov
ja
mov
movsl
add
iret
shlb
test
in
xchg
out
xchg
xchg
xor
cmp
mov
push
mov
outsl
push
call
sub
and
aam
sbb
and
aam
loop
jns
add
std
dec
notb
add
or
add
decl
popa
xchg
or
lcall
outsl
fnstsw
es
push
push
fldt
jp
add
cmp
push
or
xchg
adc
les
loope
test
movb
sub
rorl
loop
mov
add
insb
imul
mov
jl
cltd
fisubrs
xor
cmpsb
mov
jnp
push
mov
pushf
je
rorl
js
xchg
xor
mov
loopne
int3
arpl
aad
xor
out
inc
fstps
bound
or
pop
jae
sahf
ljmp
test
xchg
fnstenv
push
jae
push
call
push
jmp
dec
cmp
stc
fdivl
cmpsb
and
jg
aaa
out
xor
dec
lds
enter
insb
adc
add
das
fildl
pop
mov
scas
fwait
in
and
gs
xchg
lock
and
les
subb
rol
jle
push
rcrl
cmc
shrl
shrb
bound
mov
int3
push
popf
mov
mov
xor
mov
mov
push
fbld
notb
cmc
pop
por
ds
mov
push
adc
and
and
lahf
shl
in
and
jns
sub
xor
sbb
sub
add
and
xor
out
es
movsb
push
push
push
test
je
add
test
notb
sbb
fstl
fnstcw
jno
arpl
xor
cld
push
hlt
push
ret
mov
pop
loop
inc
cmp
push
xchg
push
test
scas
ds
in
push
or
in
mov
sub
mov
testb
xchg
dec
jmp
popa
shl
mov
pop
mov
divl
xchg
pop
hlt
dec
xchg
imul
pop
int3
aaa
notb
gs
add
lret
test
or
test
add
lahf
into
mov
loop
inc
leave
and
cmpsb
sbb
lret
mov
pop
inc
iret
pop
imul
fistpll
aam
sbb
sbb
leave
sbb
bound
ficoml
xor
xchg
pop
lcall
rol
shll
pushl
sub
lcall
dec
gs
inc
scas
inc
add
sub
movsb
adc
lea
mov
inc
sub
jl
mov
inc
add
push
pop
pop
push
daa
shlb
pop
or
xchg
stos
lret
bound
ja
mov
or
dec
mov
jmp
or
dec
or
leave
lock
push
cltd
fstl
push
sbb
xor
pusha
gs
jbe
inc
sub
cwtl
aas
or
int
daa
xorl
push
lret
xlat
sbb
push
repz
sub
dec
aad
nop
and
push
xchg
fdivl
xor
or
into
fmull
lods
sbb
shlb
xor
sbb
jge
mov
inc
lret
xchg
fnstcw
das
notl
int3
push
jo
jo
xor
vzeroall
mov
mov
or
xor
popa
xor
dec
insb
shlw
dec
inc
sbb
into
mov
add
mov
xchg
mov
fstpt
xchg
cmp
cwtl
inc
incb
mov
mov
lods
mov
or
mov
jmp
sub
decb
xchg
test
xchg
adc
scas
sbb
pushf
mov
dec
mov
cmp
lcall
repz
xorb
bound
sub
out
inc
pushf
pop
or
adc
push
cli
imul
dec
add
xor
mov
lcall
and
dec
adc
stos
idivb
sbb
mulb
dec
sbb
pop
nop
js
aad
test
insb
sub
mov
mov
jno
sub
mov
xor
dec
mov
sbb
fwait
jg
pusha
xor
jbe
cmp
mov
dec
mov
add
sbb
push
lahf
in
push
sahf
cmp
pop
in
insl
aam
cmp
pop
fcmovne
pop
cmp
shrb
mov
inc
jmp
dec
cli
jmp
shrl
jle
imul
mov
clc
ljmp
add
in
sbb
sbb
lea
add
dec
fsubr
push
jnp
sar
mov
ss
mov
xor
jmp
dec
mov
hlt
xchg
or
ljmp
aas
fisubl
push
jmp
add
ja
xor
jo
jmp
or
je
loop
dec
xchg
jecxz
cltd
xlat
mov
int
andl
push
arpl
cmc
jb
mov
lock
int
pushf
dec
mulb
or
ljmp
aaa
sub
aas
push
cmpl
outsb
rolb
jmp
aaa
inc
push
sub
inc
pusha
or
scas
pop
pushf
dec
xchg
pusha
xchg
pop
loope
adc
cmp
push
roll
je
add
int3
xor
std
push
enter
mov
dec
mov
jg
ret
loope
pusha
pop
dec
xlat
dec
or
movsl
cmp
in
pop
outsl
pusha
test
push
push
mov
idivb
ss
jp
jg
testl
test
push
dec
arpl
mov
or
push
push
jle
jmp
xor
lahf
div
push
mov
std
push
lcall
xor
or
ret
sti
push
jmp
ljmp
jl
jae
ljmp
movsl
sbb
aaa
mov
add
addr16
cmp
xor
pop
cmp
xlat
inc
rol
and
mov
mov
cs
aam
les
adc
loop
jne
xchg
push
stos
inc
pop
sub
rcll
bnd
jl
push
xlat
fmulp
cs
pop
jmp
or
xor
addr16
jge
repnz
lahf
mov
test
dec
dec
addr16
pop
sub
int3
movsb
imul
jb
pushf
leave
pop
xchg
loop
fwait
sbb
push
cs
xchg
sub
push
push
push
into
insb
push
ja
insb
and
frstor
pop
inc
mov
in
xchg
in
test
or
dec
outsl
or
les
mov
or
outsl
ds
cld
sub
pop
push
mov
js
shll
and
xchg
pop
pusha
sbb
out
dec
pop
xchg
cwtl
pop
jb
mov
lea
mov
imul
mov
push
movsb
lods
lds
mov
cmp
leave
mov
sti
inc
push
pop
popf
xor
jne
nop
push
sbb
sbb
es
lods
pop
inc
stos
into
jb
inc
sub
sub
push
mov
mov
jo
and
dec
pop
xchg
inc
xchg
sub
inc
cmp
dec
jns
xor
inc
jl
sbb
fsubp
dec
dec
dec
test
mov
jmp
inc
pushf
cld
aas
xchg
out
mov
sti
mov
fwait
in
ret
ret
pop
inc
arpl
in
sbb
ja
xor
jecxz
scas
mov
mov
jbe
mov
jl
mov
loop
mov
jbe
cli
notl
fsubrl
in
subb
bound
sub
je
fsubrs
adc
or
testb
rclb
add
ret
xor
loop
dec
loopne
xchg
fwait
pop
repnz
push
pop
and
mov
cmpl
leave
pop
inc
pop
lret
je
pop
mov
dec
rcrb
loop
imul
fcmove
call
mov
scas
dec
add
xor
sbb
lcall
mov
ret
aas
in
shl
rcll
inc
fildl
mov
sub
cwtl
mov
outsl
aaa
shl
nop
pop
test
xchg
add
pop
movsl
je
jl
sbb
fbld
lret
mov
cwtl
int3
rcl
push
fistpll
lds
adc
mov
test
sbb
loopne
decl
es
popa
pop
jae
add
out
mov
and
test
les
pushf
ja
testb
adc
aad
outsb
jmp
std
mov
xchg
jns
loope
es
leave
push
sub
sbb
leave
andl
sub
pop
add
dec
pop
xchg
cs
hlt
pusha
mov
jl
cmp
xor
ja
jbe
dec
int3
cmpsb
and
fsubr
aam
inc
inc
and
les
pop
xor
les
xchg
adc
pop
and
aam
adc
gs
xor
or
data16
sbb
and
lcall
stc
scas
loop
loop
push
jge
cmc
adc
scas
mov
loope
mov
fistl
enter
mov
cmpsb
ljmp
push
push
mov
call
mov
and
pop
jno
or
out
call
mov
adc
scas
xchg
fsubrp
out
push
in
jmp
cmp
mov
repnz
xchg
xchg
add
xchg
sti
lcall
adc
sbb
aaa
shrb
jle
jp
in
dec
and
iret
clc
jle
aam
jmp
sbbb
or
dec
adc
cmp
lret
sar
or
stc
sbb
and
push
insb
fdivp
outsl
adc
scas
dec
andl
jl
push
push
cs
ret
and
jbe
std
mov
sbb
jl
or
add
test
xchg
mov
popa
adc
push
pop
pushf
orl
xor
jl
ds
adcl
push
lds
out
cltd
in
ret
in
test
loopne
frstor
adc
jo
or
xlat
cs
mov
pop
push
xor
dec
cmp
addr16
lea
adc
scas
xor
mov
rcrb
sub
adc
mov
sub
aas
add
push
stos
xchg
sbb
dec
pop
xor
dec
in
push
hlt
mov
cmp
pop
stos
cmp
mov
dec
push
mov
into
xchg
sub
cmp
vmovhps
lret
xlat
jle
ja
enter
dec
push
push
test
bnd
xor
push
fucom
mov
lods
repz
ja
dec
jmp
mov
ret
cmp
vpsrad
inc
push
xchg
or
aaa
adc
jg
or
lcall
data16
sbb
das
inc
loope
jecxz
pop
jmp
mov
pop
pop
cmp
loop
add
dec
mov
sub
aas
inc
mov
xchg
add
pop
pop
testl
mov
or
xlat
cmp
lret
jle
mov
cmpsl
lahf
pop
loopne
adc
push
sub
repnz
jo
lock
and
or
pop
adc
mov
stos
test
rcrl
out
pop
fcoml
fildll
inc
popa
lods
out
shlb
adc
sahf
adc
adc
mov
int
test
dec
fimuls
xchg
loop
clc
add
adc
pop
xchg
add
imul
int3
xlat
jg
dec
push
jb
mov
adc
setg
jg
adc
scas
dec
add
mov
xlat
jg
or
mov
xchg
pop
add
fadds
xor
mov
data16
dec
lret
popa
leave
in
jp
shlb
lcall
mov
mov
sarb
and
loopne
mov
jg
mov
mov
setae
and
xor
movsl
inc
into
mov
imull
xchg
cmpl
push
mov
fstl
xor
push
inc
movsl
cmp
inc
das
addr16
dec
dec
movsl
mov
cld
xlat
mov
adc
jmp
int3
push
push
or
test
int3
imulb
ja
mov
add
outsl
adc
mov
sbb
lods
inc
outsl
xchg
ret
cmp
scas
add
or
sbb
inc
test
jo
test
pop
fimuls
xorl
sbb
xchg
bnd
and
das
fadd
xchg
and
stos
rolb
es
fmull
test
stos
call
push
push
outsb
addb
dec
popa
es
lock
lods
icebp
dec
sahf
outsl
pop
scas
ret
outsl
jns
lds
or
or
dec
lea
jbe
xor
fsts
pop
mov
in
rol
mov
mov
sub
mov
hlt
mov
mov
fcompl
cli
jnp
cmp
loop
lock
push
pop
icebp
addb
fists
jp
aam
push
incl
stos
dec
mov
rcll
rclb
in
and
stos
add
adc
cltd
in
push
sbb
cmp
mov
push
dec
pop
addr16
je
jg
lcall
fldenv
or
or
pop
xchg
adc
jg
sub
jle
gs
jo
sub
les
fucomip
pop
adc
xor
xor
out
dec
cmp
push
pop
mov
fmul
int3
arpl
in
call
adc
mov
iret
jmp
sbb
mov
xchg
push
lret
les
dec
and
rcrb
mov
mov
shll
add
testb
into
sub
arpl
bound
mov
add
aad
and
cmpsb
loop
mov
adc
xchg
pop
xor
dec
xchg
insl
push
sbb
ljmp
sbb
ret
push
jo
cmp
mov
inc
jl
fiaddl
popf
xchg
mov
jmp
js
dec
jne
jl
fdivs
pop
cmp
call
xor
sub
mov
das
add
adc
jge
mov
or
xchg
cmc
mov
lock
or
jecxz
push
or
push
push
cmp
and
cmc
dec
lahf
scas
xor
and
push
xchg
xor
shll
push
outsl
adc
sarl
push
out
orb
lods
inc
xor
test
stc
and
adc
mov
movsl
lock
push
fcmovu
pushf
icebp
sbb
shrb
push
bound
cltd
sbb
daa
jns
mov
sbb
push
mov
cmp
lahf
dec
sbb
cld
addr16
jb
fs
loopne
sub
ss
push
push
mov
xchg
xor
mov
fisttps
sti
dec
xchg
and
rolb
pop
ljmp
lcall
int
inc
adc
fdivrs
cmp
call
shl
push
push
fptan
lds
xor
and
and
xchg
sbb
insb
jle
outsb
dec
cmp
sbb
sbb
pop
sti
inc
nop
ss
movsb
cmp
cmp
and
and
jle
aas
mov
jp
sti
lret
xchg
pop
push
push
lcall
ljmp
jp
je
decl
or
ss
lds
adc
rcr
lcall
mov
push
sbbl
dec
sbb
stc
pop
pop
std
xchg
stc
aad
push
fwait
and
cwtl
cmpb
div
mov
inc
lret
bound
insb
jmp
and
insb
hlt
mov
xchg
adc
addl
lock
mov
jmp
pop
aas
das
scas
scas
hlt
fsubr
push
or
or
pop
outsb
jle
flds
flds
sub
push
sbb
push
jno
push
mov
jle
mov
jge
adc
and
xchg
out
mov
and
xor
aas
cmpsb
inc
xchg
call
mov
mov
cld
push
lods
fwait
pop
inc
fistpll
mov
iret
loope
repnz
aad
icebp
rcl
jnp
inc
inc
mov
push
push
pop
jns
sti
popa
mov
cmp
xchg
rclb
dec
imul
jae
or
jo
mov
stc
pusha
mov
in
mov
or
imul
mov
dec
and
fcmovu
jae
pop
inc
xchg
sub
in
mov
push
jge
push
mov
inc
ljmp
mov
mov
mov
cmp
xchg
push
mov
out
cmpsl
adc
stos
iret
inc
fbstp
jg
loop
sub
add
inc
fnstsw
cmpsb
xor
shll
push
mov
lret
mov
stos
imul
or
out
or
mov
xor
sub
cmpsl
scas
inc
rclb
iret
pop
in
jnp
mov
push
leave
push
sub
fcompl
test
shlb
aas
jnp
int
xchg
clc
stos
repz
aad
cmp
jg
xchg
cmp
xlat
cmp
adc
sbb
mov
out
pop
dec
push
fs
lret
or
pushl
pop
mov
mov
jb
call
test
in
mov
mov
in
push
pushf
stos
xlat
repnz
mov
lahf
jl
repnz
fidivl
adc
test
enter
xor
fstpt
jle
lret
push
xchg
lahf
adc
cmp
popf
imul
outsl
pop
mov
insl
inc
push
enter
cltd
loope
inc
in
lds
inc
inc
add
sbb
cmp
movsb
outsb
sbb
notb
cmp
subb
cmp
pop
pop
cmp
mov
cmp
add
mov
pusha
cmpsl
sahf
fisubrs
dec
mov
gs
lret
mov
sahf
or
cli
or
notl
gs
cmp
pop
sahf
sbb
cmc
dec
aam
movsb
sub
and
dec
pop
aam
mov
cmc
cmpsb
les
add
popa
dec
out
xchg
inc
fisubrl
fcoml
shll
sub
and
es
ljmp
dec
jmp
cmc
mov
xor
les
rcll
stos
ret
xchg
push
mov
dec
pop
and
sahf
xor
aaa
sbb
pop
lds
idivl
mov
and
sub
aas
pop
mov
push
xlat
call
add
mov
mov
cmp
jb
mov
push
mov
push
pop
fidivl
cld
cmp
fidivrs
cmc
inc
loopne
inc
inc
pop
inc
adc
inc
sub
cmc
sbb
aaa
jbe
pop
xor
mov
xchg
je
bound
add
adcl
adc
push
jecxz
cltd
ss
mov
push
push
shlb
in
stos
push
sarb
cwtl
orb
lods
and
sbb
dec
mov
pop
lods
sbb
stos
repnz
fcomi
add
jno
xor
add
mov
mov
add
lea
arpl
das
dec
inc
sbb
outsl
pop
out
mov
mov
push
and
lea
sbbb
inc
out
or
mov
add
mov
daa
add
xor
pop
cmc
arpl
in
sbb
cs
and
dec
in
push
jle
mov
mov
aas
mov
lret
sbb
cmp
xlat
outsb
add
xor
jo
sub
sbb
in
arpl
jnp
scas
mov
fs
int
add
jbe
mov
or
jb
cmp
or
or
mov
into
dec
fsubr
and
pop
inc
stos
cmp
pop
fadds
xchg
add
pop
adc
inc
leave
lcall
movsl
jle
bound
dec
lea
arpl
fidivrs
cmp
pushf
movsb
mov
jmp
int
out
fcoms
lret
push
aas
imul
inc
pop
pop
xor
and
in
push
es
jo
sbb
jno
jae
dec
mov
loop
pop
sub
daa
cs
negl
pop
insl
jb
add
mov
mov
sbb
push
push
imul
pushf
daa
jns
pop
test
jnp
cwtl
cli
mov
ljmp
xorl
aam
mov
outsl
repnz
mov
popf
pop
pushf
lds
jno
ret
xor
clc
scas
lret
aad
test
push
or
out
sbb
cmp
test
dec
add
mov
adc
repz
jne
push
and
scas
pop
fs
stos
mov
fisubs
inc
or
lret
or
shl
sti
cmpsb
or
xor
bound
mov
inc
push
std
outsl
shll
inc
hlt
mov
sti
or
in
jp
int3
lret
mov
int
jmp
nop
sub
mov
push
jg
mov
pop
shll
stos
out
and
fldcw
stos
fsubrs
push
push
pop
sbb
add
sub
adcb
xchg
push
inc
mov
orb
lods
imul
mov
decl
scas
imul
pop
imul
push
lds
jg
or
loop
leave
push
inc
adc
mov
aaa
xor
mov
mov
inc
inc
pop
mov
mov
or
hlt
ss
ret
xor
push
out
gs
mov
pop
or
sbb
pop
jnp
sbb
mov
cmp
loop
pop
xchg
mov
push
mov
shlb
jecxz
jnp
lret
out
push
fsubr
dec
mov
sbb
cmpb
inc
pop
je
mov
jne
add
rcl
les
fisttpl
add
add
jl
stos
inc
icebp
movsl
lock
jbe
test
lcall
in
mov
fwait
jge
out
push
mov
data16
icebp
ds
mov
cli
test
int3
rcrl
shlb
pop
push
lock
mov
inc
mov
push
cwtl
xchg
jbe
mov
test
pop
in
mov
leave
loopne
jae
inc
lret
push
scas
stos
das
sub
fsubrl
fildll
push
fwait
rep
mov
and
xchg
cmp
sarb
outsb
add
dec
or
ds
dec
fmull
or
pop
inc
inc
mov
jecxz
fcoms
pusha
aad
add
je
stc
inc
jecxz
push
dec
les
mov
and
enter
pop
cwtl
cmp
dec
jecxz
push
cmp
sub
xchg
add
dec
or
pshufw
inc
test
jbe
cmc
in
in
cmp
jb
cmp
insl
orl
jmp
sbb
aam
pop
or
enter
loope,pt
cmp
adc
adc
sub
sbb
cld
xchg
daa
shl
retw
addl
xchg
cs
out
out
xchg
pop
push
jae
insl
sbb
mov
pop
and
lods
pop
dec
imul
sahf
in
add
cmp
sub
mov
rorl
in
cmp
mov
in
scas
lcall
jle
arpl
jge
and
xchg
popf
and
leave
mov
inc
insl
out
popf
push
lds
jmp
mov
adc
shlb
sub
push
aaa
dec
fisttpll
adc
cmp
adc
or
jmp
pop
jecxz
sbb
inc
mov
pop
iret
movsb
jae
shl
xchg
xor
push
mov
jnp
lods
lods
inc
fidivl
push
popa
xor
inc
sbb
dec
insb
lods
cmp
lret
mov
xlat
dec
or
adc
cs
cmp
and
sub
enter
xor
mov
add
mov
test
xchg
cmc
mov
fwait
movsb
mov
push
jmp
sbb
push
into
clc
dec
add
xchg
pop
scas
xor
and
mov
jp
fcoml
pop
push
iret
stos
cmp
daa
imul
adc
loopne
aaa
out
imul
push
int3
test
jbe
jo
push
jmp
fstps
int
push
addr16
push
xchg
inc
sbb
les
pushf
xor
rol
fs
mov
push
push
mov
pop
loopne
inc
adc
jne
aas
inc
fidivl
xor
pop
push
sti
mov
pop
data16
xchg
jg
mov
mov
or
out
pop
jb
ja
stc
xor
jnp
adc
js
pop
xor
jae
add
cld
insb
pop
add
loope
popa
int
xchg
push
adc
in
test
orb
movsb
add
mov
lcall
cmp
in
pop
xlat
push
nop
push
xor
popf
lret
popa
cmp
xchg
jecxz
mov
jle
sahf
icebp
andl
mov
xor
das
in
cs
inc
in
scas
sub
push
lret
loop
mov
jbe
jl
jne
add
sub
sahf
cld
lret
cmp
fildll
adc
add
stc
in
and
sub
push
mov
jp
or
xchg
lea
mov
int3
jl
daa
repz
pop
jp
enter
in
mov
xchg
xchg
push
sahf
mov
scas
aas
mov
shr
jl
xchg
aad
pop
pop
mov
nop
inc
mov
aam
inc
andl
jne
jecxz
outsl
cmp
dec
pop
or
popf
mov
jmp
ss
cmp
divl
fstps
xchg
jno
mov
daa
and
sahf
mov
cmpsb
arpl
out
jb
cs
xchg
loopne
adc
inc
mov
cli
icebp
cltd
push
js
cmp
xor
loope
mov
xchg
cmc
pop
dec
sbb
add
inc
push
es
sbb
push
push
dec
pop
mov
add
push
push
sbb
and
sub
add
lret
mov
mov
push
inc
mov
aam
pop
mov
sti
xchg
xchg
push
sub
jge
test
cmpsb
cmpl
jne
test
nop
pop
inc
cli
xchg
xor
shrl
hlt
aam
call
and
cld
xor
nop
daa
sub
pop
sub
sbb
add
lret
sahf
pop
add
cwtl
imul
inc
and
adc
add
lcall
push
push
aad
fdivl
jbe
nop
sub
mov
cmp
filds
in
adc
lret
out
cmp
clc
inc
lret
pop
insl
loopne
inc
lcall
lea
mov
push
std
jle
fdivl
pusha
in
push
mov
mov
or
mov
dec
mov
sbb
xchg
cld
nop
gs
aad
inc
popf
mov
icebp
dec
inc
lods
inc
sti
and
sbb
daa
into
sarw
leave
mov
outsl
xchg
cmp
sbb
mov
xor
xchg
push
mov
sbb
dec
pop
ds
subl
lret
cmp
pop
dec
mov
mov
scas
scas
inc
loopne
inc
loope
cmp
in
fucomip
xchg
adc
xchg
fcomp
pop
push
xchg
clc
mov
sub
push
test
lods
jbe
dec
adc
dec
dec
std
xchg
xchg
insl
repnz
cltd
nop
fwait
xor
inc
cwtl
xor
and
movsl
and
mov
xor
pusha
push
je
push
call
adc
outsl
rolb
jge
xor
lea
adc
adc
jl
ret
dec
dec
and
cmp
sbb
sub
addr16
xchg
sbb
je
add
or
ss
push
ljmp
call
outsl
or
push
mov
divb
xor
pop
std
test
cmp
mov
dec
imul
cmpb
mov
xchg
mov
int3
pop
adc
and
data16
scas
fildll
fiadds
adc
out
pop
xchg
or
sub
imul
push
nop
and
mov
ljmp
jno
ja
jns
pop
pop
std
dec
add
clc
adc
repz
loop
shlb
mov
rcr
adcl
push
sbb
stos
sub
lea
cmp
lea
adc
add
aas
mov
cwtl
xchg
jp
orl
mov
xchg
jns
orb
add
call
lahf
ss
cmp
int
add
cmpsb
pop
lcall
jne
jg
insb
popa
inc
sbb
insl
or
jns
jg
inc
or
filds
fadds
ret
push
fdivs
sbb
sub
shl
cmp
fistps
push
adc
lahf
push
bound
aaa
fmulp
cmp
aam
cld
pop
cmp
inc
int3
out
or
pushf
jbe
sub
push
push
push
mov
test
mov
lds
jl
dec
mov
push
xor
pop
sub
iret
cmpsb
push
scas
std
add
push
adc
mov
pop
pop
cmpsb
mov
xchg
mov
adc
les
jae
test
fisttps
add
dec
loop
cs
cmp
jnp
mov
test
mov
shr
imul
lds
cmp
out
jge
sbb
xchg
mov
fstpl
inc
or
iret
ja,pn
mov
lret
adc
out
scas
js
orl
jno
dec
add
lret
insl
mov
js
gs
fwait
pop
dec
or
push
mov
pop
shrb
nop
mov
sbb
ljmp
xor
in
inc
out
lea
lret
mov
inc
lcall
inc
sbb
loope
cli
sbb
ror
rcl
and
jae
js
icebp
cmpsl
cmp
icebp
xchg
dec
js
enter
imul
stos
cmpsb
add
mov
adc
insb
pushf
adc
push
popa
add
mov
and
push
test
out
test
mov
mov
cld
shr
jg
pop
mov
fidivs
arpl
or
mov
mov
mov
adc
cmp
sub
ret
dec
arpl
cld
inc
fisubrs
out
mov
icebp
adc
out
or
inc
and
jb
add
push
rolb
ja
insl
js
lcall
aas
sub
mov
ds
jno
dec
mov
push
int
jo
outsl
pushf
pop
out
repnz
lret
lds
xor
push
xchg
das
pop
inc
fmull
mov
in
xor
sbb
dec
or
leave
loope
add
dec
ds
mov
xrelease
dec
jne
add
popf
add
ja
popa
das
lret
ss
notb
push
mov
adc
pop
add
leave
je
cli
insl
rcrl
dec
mov
aam
mov
fnstsw
inc
out
pop
movsb
repz
sbb
out
adcl
aaa
js
loope
xchg
mov
aas
lods
fcompl
add
cmpsb
adcb
movl
in
stos
fidivl
pop
daa
ss
mov
lods
inc
mov
inc
xchg
jg
outsl
fnsave
jo
jnp
dec
scas
mov
fdivrp
pop
jmp
and
jge
rcr
jl
nop
xor
out
ja
ja
cmp
testl
or
andb
test
lods
xor
pop
das
lcall
out
ja
sar
test
or
pop
adc
in
jmp
lea
cmp
pushaw
mov
aad
sub
out
mov
pop
lods
xchg
ja
adc
addl
rclb
fnsave
iret
pop
std
jle
movsl
aam
fnstsw
stc
gs
int3
daa
mov
xor
xchg
cmpsl
inc
pusha
data16
addr16
inc
out
xchg
data16
popa
and
adc
xchg
adc
sbb
jmp
push
xchg
icebp
test
adc
xlat
sub
mov
cmpsb
mov
mov
jp
jo
mov
add
in
mov
in
jmp
imul
cmp
mov
ds
test
or
out
cmp
test
mov
xchg
mov
jns
xor
mov
push
shlb
out
sub
fnstsw
pxor
push
push
test
into
int
mov
pop
push
je
mov
or
and
pop
rorb
inc
jle
mov
fs
or
lods
inc
sbb
les
cmp
or
fs
jp
test
xchg
mov
mov
mov
in
sti
mov
mov
mov
cmp
clc
jge
push
int3
popa
fidivrl
in
popf
sub
cmpsl
in
into
lahf
mull
roll
jmp
or
or
lea
sub
test
ret
adc
dec
sahf
cld
cld
push
xor
fldcw
jbe
mov
mov
dec
xchg
lods
xchg
mov
int
aad
cli
xchg
push
out
cmp
nop
scas
call
inc
shrb
cmp
scas
xorb
jno
imull
dec
fdivp
sbb
xor
in
and
xchg
xchg
aad
repnz
cmp
cmpsl
repz
cld
push
aam
xchg
mov
insb
ret
sbb
sub
dec
cwtl
or
mov
pop
mov
inc
mov
push
ss
icebp
push
fcmovb
jecxz
scas
xor
rcrb
adc
dec
in
insl
pop
mov
sarl
mov
mov
ret
test
ds
gs
cltd
xchg
add
xchg
mov
frstor
xchg
add
inc
dec
divl
dec
mov
movsl
inc
dec
sub
shrb
leave
bound
outsl
leave
imul
arpl
scas
aam
outsl
daa
mov
push
pop
hlt
pop
lahf
not
add
or
leave
mov
jp
jp
xchg
xchg
jo
fwait
out
ds
mov
mov
fistpl
rcll
xor
outsl
arpl
fs
lret
mov
pop
pop
mov
push
lret
aad
sub
das
jmp
rcrl
andl
adc
jo
repz
mov
pop
push
lods
iret
sbb
inc
fisubrl
nop
popa
mov
xchg
test
shr
xlat
sub
and
lds
loopne
xchg
lds
mov
scas
data16
cmp
sbb
dec
cmp
cli
xorl
mov
out
cli
sbb
sbb
rcrb
sti
or
fbstp
mov
jge
pop
xchg
jecxz
int
and
fsub
jle
and
add
dec
add
jmp
clc
aam
mov
clc
clc
insb
inc
movsl
mov
fstps
mov
xor
rcl
daa
mov
pop
inc
mov
fldcw
pop
push
inc
shl
idivb
dec
loopne
clc
adc
andl
push
dec
ljmp
mov
lcall
push
xchg
enter
repz
out
and
fnsave
lds
ja
loop
and
movsl
popa
pushf
sub
int
in
xor
push
lds
ret
iret
push
notl
push
dec
fidivs
enter
cmpsl
jl
loope
cmc
inc
push
lods
lcall
or
icebp
xchg
or
adc
add
xchg
xchg
jb
dec
pop
push
xchg
es
sub
js
outsb
sahf
pop
dec
xchg
stos
pushf
mov
sbb
and
pusha
call
sbb
sub
jg
out
xor
imul
cli
into
cld
xor
cli
inc
jecxz
mov
sbb
sbb
jnp
push
mov
pop
loopne
jp
inc
pop
push
bound
mov
fidivs
add
sahf
sub
stc
aaa
divb
aas
sbb
adc
xorb
jl
add
cs
mov
mov
jnp
scas
mov
push
xlat
jmp
sti
xchg
jp
mov
into
mov
adc
cld
pop
pop
or
inc
sub
js
mov
mov
xor
shll
jbe
mov
adc
xchg
scas
pusha
loopne
cmp
nop
sahf
jle
clc
mov
idiv
dec
cmp
rcll
push
lcall
negb
out
movsb
cli
jne
mov
rclb
out
in
xor
cmpsl
xchg
imul
xchg
fistpl
inc
mov
jp
jge
mov
sahf
sub
xchg
stc
outsb
lods
es
mov
enter
pushf
mov
les
insl
dec
mov
shl
or
jle
pop
inc
dec
mov
inc
mov
jmp
push
pop
outsl
push
out
jo
pop
repz
cs
xchg
xchg
sub
lea
cmp
mov
mov
insl
sub
lcall
push
sub
add
fsts
and
mov
add
repz
cld
push
das
cmp
icebp
push
out
movsl
add
in
jl
or
dec
sub
push
jl
push
movsb
lds
xor
mov
mov
ja
cmp
xchg
fcmovne
insl
hlt
mov
cmp
out
test
xchg
push
and
add
stos
xchg
and
pushf
jbe
scas
subl
call
dec
xchg
sub
inc
jmp
dec
sahf
testb
stos
dec
inc
mov
cmpb
scas
hlt
push
mov
jno
sub
mov
aas
mov
mov
inc
stos
aam
and
jne
flds
jp
dec
outsb
in
repnz
pop
test
iret
or
push
or
clc
cmp
pushf
or
int3
mov
sarb
sbb
pop
mov
jnp
in
das
fdivrs
adc
mov
insl
or
shll
inc
sahf
mov
loopne
enter
xchg
int
imul
jno
push
mov
mov
cmp
outsl
jg
icebp
adc
cmpsb
jbe
in
int
push
push
sbb
mov
mov
imul
jg
push
inc
ja
mov
ss
inc
pop
repz
hlt
sbb
xchg
sbb
add
shlb
pop
push
gs
xor
shll
stc
mov
mov
std
push
cmc
xor
lret
bound
hlt
dec
or
insl
out
inc
and
pop
xor
insb
sbb
push
lahf
neg
repz
mov
sub
sbb
mov
int
aas
inc
dec
test
cmp
jb
mov
out
pop
xchg
jns
cmpb
dec
dec
push
insl
icebp
jns
cmp
dec
mov
loope
push
popa
jo
xchg
filds
xchg
xchg
mov
add
xor
and
shlb
push
ret
das
adc
lods
imul
push
cmc
shll
jge
inc
xor
ljmp
movsl
dec
in
hlt
mov
popf
jge
mov
sahf
dec
clc
lock
xchg
enter
mov
test
out
dec
cmc
fistl
mov
sarl
test
cmp
lret
arpl
adc
or
jecxz
inc
fwait
je
mov
push
bound
cltd
pop
mov
pop
fisttpll
frstor
mov
jle
dec
dec
imul
xlat
cmp
inc
sub
cmovo
mov
movsl
cmp
xchg
aam
testb
pop
mov
ljmp
les
test
cmp
fldenv
iret
notb
inc
add
adc
lcall
mov
push
std
mov
stos
rorl
jb
in
rcr
pusha
in
sti
push
pop
fsubrs
xchg
ds
pushf
popa
jb
data16
mov
and
xchg
mov
sbb
inc
xchg
loope
dec
gs
pop
ja
enter
cmp
mov
rolb
inc
jge
ss
cmp
outsb
push
inc
iret
popa
jg
leave
jo
push
loop
inc
aas
mov
ljmp
loop
mov
mov
jle
cmpsb
inc
lea
std
stos
inc
cld
push
inc
xor
in
dec
dec
add
or
iret
sub
loop
aas
add
add
mov
mov
sahf
shrl
rol
push
fcmovb
data16
pop
stc
xor
ja
cld
std
sbb
adc
dec
cmp
js
fiaddl
adc
adcb
add
push
mov
dec
aad
pop
aad
ret
out
add
leave
ficompl
mov
mov
xchg
movsb
dec
jbe
mov
push
scas
fiaddl
mov
pop
int
mov
xchg
push
mov
repnz
jmp
enter
jg
or
push
inc
inc
js
xlat
loope
xchg
pushf
in
test
dec
add
mov
fwait
xchg
clc
pop
out
push
std
mov
lahf
jl
lods
ljmp
pushf
cli
cmc
adc
subl
push
bswap
lea
movsl
sbb
adc
push
cmc
mov
imul
dec
leave
in
sbb
jl
xchg
push
data16
sti
push
lret
pop
nop
mov
jns
cmp
mov
lret
sbb
frstor
cli
cltd
mov
ret
idivb
ljmp
insb
sarl
inc
arpl
mov
push
inc
jno
push
imul
and
mov
sub
adc
dec
fdivl
insb
xchg
es
js
clc
mov
mov
add
nop
sub
mov
jmp
scas
xlat
xchg
stos
andl
outsl
fidivrs
imul
add
addr16
xor
iret
bound
dec
daa
outsl
icebp
out
mov
fwait
pop
loopw
rcll
ds
fidivl
arpl
ret
inc
pop
xor
pop
stos
jg
push
mov
adc
lret
sti
adc
cmpsb
into
pop
es
hlt
or
scas
push
dec
decl
pop
call
cltd
cmpsl
push
fisubrl
js
jle
cmp
xchg
xor
jg
rcll
and
xor
xchg
and
sbb
sub
inc
test
int3
cltd
pop
leave
ljmp
mov
jne
mov
testb
push
sbb
xor
mov
pop
mov
mov
mov
sbb
adc
dec
in
xchg
mulb
scas
xor
subl
pop
js
icebp
jge
adc
mov
loopne
into
sbb
xchg
mov
popa
jae
movsl
dec
aas
add
daa
mov
jmp
add
push
jp
add
push
mov
xor
xchg
stos
sub
push
sub
sub
add
push
inc
xor
sbb
lds
sahf
dec
sarl
cmp
fldt
mov
adc
cmp
enter
pushf
add
pusha
divl
aas
mov
les
ss
mov
std
mov
fs
movsl
fisubl
add
data16
popf
cld
int3
cld
sti
sbb
jle
gs
pop
lcall
pop
add
add
inc
int
divl
ret
pop
sarb
lods
inc
dec
in
rcr
cmp
mov
jle
dec
jnp
or
out
mov
jns
sub
push
in
adc
ss
sbb
testl
jge
lds
or
repz
add
xchg
scas
movsb
cmp
mov
mov
or
cmpsb
cmp
or
imul
das
fidivl
test
ja
das
sahf
xor
mov
dec
movhps
or
xchg
testb
enter
push
xchg
scas
jo
push
pushf
dec
jecxz
push
mov
xchg
dec
out
mov
push
in
pop
vmwrite
jg
shrb
mov
jne
cltd
mov
xlat
je
xchg
mov
mov
dec
ja
mov
jb
js
jle
pop
mov
cmp
pop
add
jne
push
jo
test
nop
daa
test
gs
jp
out
dec
dec
ss
js
cmp
fcomp
inc
adc
pop
aas
fidivrl
pushf
push
push
inc
dec
jae
les
faddl
xchg
inc
leave
jb
jl
pop
je
andb
pop
sub
mov
rep
pop
dec
pop
push
add
dec
shrb
cwtl
mov
push
add
into
push
push
pop
mov
adc
cltd
std
in
jl
sbb
sahf
mov
dec
int
jno
cmp
mov
test
dec
mov
inc
push
in
and
imul
mov
fdivrs
aas
or
fbld
jge
push
mov
pop
lods
ret
mov
dec
loopne
mov
lods
adcl
add
loopne
rorb
gs
mov
push
fiadds
fistl
xchg
inc
xor
inc
mov
xchg
mov
mov
test
das
mov
jmp
test
loopne
ret
push
adc
stos
popa
push
push
in
fwait
jbe
mull
mov
loope
jl
std
mov
inc
cmpsb
out
cmp
lcall
cli
push
idivl
pop
outsl
pop
aaa
loop
jp
sbb
fisubl
movsl
imulb
jp
push
inc
lret
xlat
pop
add
mov
mov
popa
xchg
cmp
bound
vphaddbw
out
subb
sbb
jne
in
lret
mov
mov
lds
lahf
dec
out
and
testl
push
es
stc
xchg
sbb
lahf
mov
add
in
rcrb
enter
iret
mov
push
into
dec
mov
cmc
sysenter
test
sbb
stos
xchg
sub
xor
xchg
sub
andb
push
movsb
js
mov
push
add
lcall
inc
adc
popf
ret
mov
xchg
add
rorb
add
shlb
push
test
jo
pop
adc
sbb
aas
test
push
fs
sahf
xor
mov
jno
dec
out
sub
mov
lahf
nop
sub
mov
stos
mov
adc
jmp
mov
mov
mov
and
xor
sbb
xor
sbb
ja
push
int
xor
or
test
xlat
mov
push
xor
push
repz
arpl
mov
add
out
push
and
or
ja
out
mov
cmp
iret
jecxz
test
adc
icebp
push
cmp
sub
stos
pop
lods
dec
aad
ret
scas
mov
cmp
sbb
jns
mov
rol
iret
pushf
and
insb
cmp
daa
xchg
jg
pop
xor
popa
cmp
inc
cmpsl
mov
cmovge
fiadds
pop
fnstsw
scas
mov
xchg
jle
mov
repz
aas
dec
test
shl
jp
dec
push
in
adc
mov
adc
sbb
mov
rcrb
outsb
jmp
inc
arpl
sbb
cmp
push
sbb
mov
mov
and
orl
sub
movsb
fadds
fldl
pop
lret
in
push
xchg
lods
xchg
lock
fsubrp
push
cmpsb
dec
ret
lret
push
bound
jle
testl
idivl
arpl
hlt
xchg
pop
xorl
in
mov
fcmovnbe
imul
jae
lods
lcall
jmp
cmp
dec
push
test
jp
leave
push
pop
and
inc
or
out
sahf
add
xchg
jge
mov
dec
jge
inc
in
addr16
sub
mov
sub
in
popf
dec
cmp
push
stos
add
inc
lods
shll
or
pop
scas
cmp
orb
insl
pop
lods
sti
adc
pop
repz
mov
mov
in
add
orb
js
sbb
adc
push
or
cmpsb
ror
cld
je
pop
sub
push
cwtl
leave
sub
cli
sbb
rclb
xchg
add
pop
lret
gs
add
mov
push
add
xor
and
mov
ret
sub
xchg
mov
sub
push
push
dec
xchg
sub
cmpb
sbb
lods
cmp
insl
dec
or
clc
stos
and
or
inc
pop
cmp
pop
out
inc
xor
push
cwtl
xor
lods
inc
cmpl
mov
fs
fidivl
pushf
fstpl
imulb
push
sti
push
sub
xlat
jo
shl
push
dec
mov
cmc
cs
loopne
ret
pushf
scas
sbb
mov
fldl
in
jne
pop
mov
es
pop
lahf
jg
lds
test
pop
mov
add
inc
sbbb
shl
test
pop
and
daa
mov
addr16
in
clc
push
mov
notl
add
and
adc
inc
sbbl
test
cli
xchg
lock
inc
fmulp
adc
gs
repnz
shrl
dec
arpl
fdivrp
and
movsl
out
dec
mov
or
pop
sbb
jge
fistpl
mov
iret
test
mov
jmp
dec
dec
in
dec
or
mov
mov
mov
mov
pop
xlat
add
mov
addb
shl
mov
add
mov
aas
addl
lods
aaa
or
adcb
js
jbe
jecxz
lea
shl
adc
leave
cltd
dec
movnti
push
stos
adc
and
das
repz
mov
sub
lods
sbb
lea
popa
scas
and
and
lret
push
mov
xor
sub
call
dec
adc
outsl
cmc
in
test
dec
clc
or
cmp
xchg
inc
jae
daa
mov
into
xchg
mov
xchg
out
pop
cmpsl
in
add
popf
in
push
ret
push
and
int3
push
jge
jecxz
mov
sub
leave
pop
fidivl
out
and
es
pop
add
sbb
mov
lcall
jg
adc
pop
lcall
sbb
test
jmp
push
jecxz
cmp
popf
fdivr
das
lds
arpl
sub
into
gs
aaa
in
jg
sub
adc
les
lcall
scas
lock
or
push
or
lock
adc
stc
sub
sub
std
pop
jmp
push
in
fdiv
lret
inc
inc
pop
ret
push
adc
jbe
adc
push
jbe
cmpsb
les
nop
mov
loop
jp
fsubrs
mov
pop
pushf
push
dec
mov
jns
inc
mov
xor
push
add
and
adc
add
mov
and
cmc
pop
fwait
inc
or
les
addb
xchg
loopne
arpl
xchg
js
cmp
lahf
divb
xchg
push
test
sbb
cmpsl
push
adc
mov
jno
cs
sti
sar
xchg
add
jns
imul
mov
jmp
fidivrl
fistpl
push
cmc
cmpsl
ds
push
mov
lds
mov
test
out
js
add
adc
lret
cld
jg
inc
jp
std
or
cmpl
dec
scas
out
add
lods
stc
aas
xchg
dec
jge
and
xor
inc
clc
jge
jecxz
or
mov
outsl
add
pop
inc
insb
out
jp
pop
xor
pop
jbe
adc
pop
ss
xchg
sub
ds
xor
or
or
sub
fstl
xchg
out
add
les
fisttpll
popf
push
jo
ljmp
mov
jns
push
adc
pushf
add
sub
mov
shl
pop
and
cmp
xor
cmp
rclb
inc
adc
xor
xlat
insb
fnstcw
add
sarb
or
cmp
mov
mov
sbb
sbb
dec
mov
jae
xchg
shrb
mov
outsl
pop
jno
push
pop
add
fwait
jnp
sub
xor
dec
filds
paddsw
add
cmp
in
sub
mov
jnp
in
pop
sbb
jg
out
push
lock
xor
cltd
bound
xlat
test
push
movsl
mov
movsb
or
mov
jno
fcmovb
imul
pop
fdivl
out
xlat
mov
push
mov
and
fsts
mov
or
lea
push
push
push
cs
pusha
mov
inc
dec
push
xchg
pop
dec
mov
mov
test
cmp
ret
pop
mov
jecxz
or
mov
sub
shrb
inc
jns
pop
lret
nop
xchg
aaa
mov
callw
sbb
mov
pop
or
mov
adc
mov
movsb
add
xlat
mov
and
insb
dec
insb
loop
inc
out
sbb
popa
movsl
lods
inc
xlat
mov
mov
push
pop
nop
or
push
cmc
cmp
pop
fisubl
movsl
daa
mov
addr16
les
testb
mov
stos
std
inc
enter
mov
mov
stos
add
push
mov
mov
inc
enter
jmp
arpl
sbb
out
mov
sbb
out
jo
or
je
mov
rcll
mov
imul
rcrb
scas
pop
cli
mov
pop
and
in
sbb
sbb
test
lcall
outsb
lret
std
cmp
jbe
push
jl
push
xor
pop
arpl
in
xchg
inc
sub
sti
mov
mov
leave
xor
add
fsubrs
pop
adc
scas
mov
cld
outsb
and
mov
outsl
inc
fiaddl
mov
imul
fldl
push
lahf
xor
pushf
and
sub
sub
fs
dec
cli
adc
and
mov
mov
jo
mov
mov
out
mov
rclb
psraw
imull
in
int3
cmpsb
sbb
cli
mov
ret
inc
in
add
scas
mov
mov
vpmulhuw
mov
add
arpl
movsl
fisttpl
push
jle
cmc
in
clc
es
pushf
mov
sti
push
stos
and
xchg
push
arpl
stos
test
in
push
mov
mov
cmp
pusha
jnp
xor
shrl
pop
and
addl
inc
push
fs
jns
mov
or
mov
push
mov
mov
fnsave
cmp
cmp
pop
popa
aaa
add
jge
push
out
add
lock
adc
mov
push
mov
mov
jno
into
xorl
xor
or
push
jl
mov
dec
xchg
pushl
pop
psadbw
adcb
mov
into
mov
mov
gs
mov
xor
and
push
inc
js
dec
and
push
icebp
inc
jmp
push
or
mov
fwait
push
push
int
mov
mov
outsl
xchg
aas
mov
mov
sbb
mov
push
addr16
je
mov
fimull
std
stos
arpl
mov
jecxz
xor
es
xor
shlb
stos
pop
int
test
and
mov
lock
js
daa
jnp
pop
mov
into
jne
std
int3
jg
loop
inc
clc
push
xor
push
add
fdivrp
sti
jle
mov
adc
xchg
or
ja
into
rolb
mov
jmp
cmp
idivb
pop
xor
jmp
push
in
mov
lret
loope
ljmp
adc
neg
xchg
mov
fdivrs
lcall
ds
xlat
xor
mov
aad
popf
jne
dec
sbb
mov
outsl
daa
ja
fs
jp
xor
cmp
sbb
adc
data16
sbb
insl
sbb
nop
and
insb
dec
cmpsb
or
pusha
imul
mov
aas
mov
inc
adc
push
jae
lea
cmp
cmp
mov
test
adc
xchg
push
out
cmp
jae
out
call
repnz
mov
aad
cltd
push
sti
mov
inc
movsb
cmpsb
jge
out
fcomi
xchg
mov
fcompl
mov
or
xlat
mov
or
mov
xchg
cli
xchg
icebp
iret
data16
add
jl
and
sti
stc
nop
in
popf
sti
mov
dec
pushf
inc
popf
orb
mov
lcall
sbb
cmp
les
aaa
ja
wrmsr
add
lcall
cmpsl
iret
or
fbld
clc
fstpt
in
sahf
add
push
or
cmp
mov
fildll
shlb
xchg
push
or
pop
outsl
loop
or
hlt
movsl
repz
cmp
xchg
popl
cmp
test
inc
inc
cwtl
fbstp
and
popf
dec
mov
lcall
test
sti
adc
adc
pusha
outsb
adc
jl
add
xor
cli
xlat
repz
test
xchg
push
inc
push
mov
nop
js
xor
add
cwtl
fcoml
xchg
outsb
xor
fcomip
mov
jns
pop
mov
and
loopne
and
sub
movsb
push
in
add
out
std
adc
adc
push
push
jbe
call
ljmp
and
pusha
push
push
jp
xchg
mov
xor
jmp
jb
mov
cmp
xchg
outsb
jle
ret
sarb
lret
hlt
cmp
js
cmc
mov
push
mov
loope
hlt
mov
sub
test
popa
fwait
jb
jmp
cli
inc
or
call
lahf
jnp
cli
lcall
mov
testl
lea
movsl
lret
shr
mov
sbb
jge
xor
sub
popa
enter
int3
insl
popa
cmp
pop
andb
in
adc
pop
rol
call
fldenv
dec
repz
into
icebp
cmp
or
and
fcmovnbe
subb
mov
fbstp
sbb
fnstsw
pop
push
and
push
shrb
push
mov
mov
ret
movsl
add
imul
into
enter
dec
inc
cmpsl
aaa
jecxz
sbb
test
repnz
iret
mov
or
fcoms
lcall
rcr
push
mov
sub
and
out
mov
cmp
ds
inc
inc
xor
xlat
push
sub
lods
sbb
cmp
adc
icebp
pop
jno
jl
rcll
ret
push
or
pop
mov
pop
sahf
push
mov
inc
jmp
push
std
cwtl
shll
dec
pop
dec
inc
js
stos
push
out
mov
ljmp
rcrl
mov
dec
jae
push
mov
dec
mov
in
test
cmp
adc
mov
fistps
mov
or
imul
fs
push
insb
out
xchg
out
test
xchg
ljmp
lock
cmp
fisubrs
sbb
inc
lds
lea
dec
cmc
and
add
inc
lock
aam
fsts
push
jne
ret
out
lds
cmp
jnp
aad
and
shl
js
ror
daa
mov
pop
mov
dec
fcompl
ror
idivb
lahf
fwait
dec
cwtl
das
cmp
inc
popf
sbbb
cmp
inc
sti
sub
ret
pushf
dec
data16
push
push
dec
add
enter
pop
jno
dec
inc
jo
xchg
pop
mov
iret
push
insb
xchg
test
push
add
xchg
or
sbb
xchg
pop
and
jb
aad
fs
sbb
repz
out
insb
es
rcl
cli
repz
or
inc
mov
fisubrs
int
fsts
mov
dec
outsb
pop
dec
mov
xchg
adc
movsb
xchg
sti
cmpsl
lret
or
aad
mov
or
xchg
add
sub
xor
pop
js
mov
mov
data16
or
mov
jge
stos
mov
es
pop
pop
fistpll
mov
ds
add
inc
fwait
out
cmp
adc
xchg
xchg
xor
push
sbb
iret
aaa
imulb
xor
lcall
std
shl
pop
jns
int
clc
mov
clc
cmp
fnstcw
or
loope
out
popf
cmpsl
sub
rcrl
add
jb
cmp
sahf
jno
jge
pop
subb
in
int3
and
setg
shufps
cld
mov
pop
mov
fistpll
loopne
add
repnz
jle
cmp
jbe
cwtl
xor
pop
xchg
pop
mov
xchg
xor
ret
sbb
mov
mov
xor
xchg
adc
ljmp
pop
mov
imulb
iret
inc
hlt
divb
jge
iret
dec
adc
loope
adcb
xchg
movsl
lea
in
xchg
movsl
daa
in
mov
add
mov
mov
xlat
outsb
rolb
mov
sbb
js
jle
inc
repnz
testb
jbe
iret
mov
cmp
imul
and
mov
mov
add
shr
jmp
cmp
xor
push
dec
aaa
int3
push
pop
lods
cmp
inc
mov
popf
inc
popa
sarb
insb
clc
jno
or
rclb
in
jb
xchg
pop
lds
sub
mov
mov
insl
jnp
filds
lcall
push
mov
sysenter
bound
fdivrl
cli
mov
dec
push
movsb
aad
and
mov
xor
xchg
push
cltd
and
ss
sti
sub
pop
cmp
testb
sub
mov
pop
sub
lret
bound
jo
fisubl
sbb
xchg
jp
xor
ljmp
inc
dec
mov
inc
stos
add
jnp
jo
jecxz
insl
dec
sub
pusha
inc
xchg
stos
sti
sbbl
mov
das
jnp
mov
int3
adc
ret
push
fisttpll
test
pop
mov
insb
pusha
mov
jbe
aad
xchg
imul
pop
aaa
mov
jge
inc
mov
pop
addr16
jecxz
in
adc
and
xor
pusha
cs
or
aaa
test
sbb
nop
insl
inc
aam
jo
mov
xchg
lahf
sbb
mov
iret
in
sbbb
cmp
sbb
cmpsl
push
mov
out
inc
popf
push
testb
or
adc
pusha
inc
lds
mov
lock
mov
fidivrs
sub
rolb
add
test
mov
adc
stc
xchg
incb
pop
outsb
sub
or
push
pop
xchg
sbb
aas
lds
dec
cmc
cmp
insl
cmp
stc
in
testb
out
stc
shl
jno
add
push
mov
test
fmull
in
movsl
push
mov
stc
dec
jp
xchg
add
mov
sub
rcl
lods
js
imul
sub
pop
and
jb
stos
jmp
adc
repnz
mov
rcrl
mov
sub
data16
in
push
sbb
sbbb
lea
adc
out
add
fwait
test
xor
hlt
pop
mov
insb
jl
mov
add
sbb
int
add
jmp
cld
push
decb
fstl
jbe
lods
and
daa
das
dec
cmc
pop
jg
pop
imul
jb
cmp
jle
mov
les
and
notl
mov
mov
loop
hlt
push
lea
inc
cmp
jge
sbb
test
sub
rcrb
cmp
imul
popf
lods
dec
and
repnz
push
repz
cmpsl
push
imulb
adc
inc
pop
into
gs
jb
cmp
jl
pop
stos
cmp
xchg
adcl
sub
mov
jecxz
and
aaa
pusha
ss
push
leave
jae
fmull
gs
xor
negb
pop
and
push
and
adcl
mov
push
mov
scas
pop
inc
aad
inc
jg
enter
push
mov
in
mov
mov
pop
scas
dec
repnz
int3
pop
push
insb
add
aas
inc
fisubrs
outsl
ret
subb
dec
loopne
cli
scas
sub
pop
add
movsl
jns
xchg
mov
int3
cld
cmpsl
js
jle
popf
mov
push
inc
mov
lret
rorb
rcr
cmp
data16
pop
cmp
add
ss
sti
adc
sbb
loopne
ret
add
je
jecxz
idiv
or
bnd
nop
imul
insb
xor
hlt
sahf
jl
pop
inc
xchg
rcll
fistps
mov
nop
pop
and
ljmp
mov
mov
cli
out
sub
pop
add
mov
xchg
das
mov
out
and
or
pop
mov
sbb
push
fdivl
stos
inc
in
movsb
dec
std
inc
sti
pop
jg
inc
in
lods
shr
test
mov
mov
into
pop
or
ret
dec
arpl
icebp
push
pushf
xor
das
mov
jno
loopne
and
repnz
pop
dec
hlt
imul
sbb
aas
idivl
pop
and
adc
iret
and
inc
xchg
jae
dec
stos
or
xchg
nop
pushf
outsl
loop
inc
int
mov
and
stc
mov
subl
pusha
or
or
nop
sbb
fwait
jbe
les
lods
dec
and
inc
ret
mov
je
aas
xchg
dec
call
bound
add
cwtl
pop
mov
ds
adc
inc
cltd
pop
sahf
xor
cli
push
and
sbb
loope
xor
add
or
xchg
add
inc
out
fnstenv
stos
mov
test
and
pop
int3
fidivrs
ret
pop
fidivrl
pop
shl
sub
leave
dec
sar
out
push
test
mov
clc
sahf
adc
sub
jmp
das
jg
mov
mov
push
push
test
fisubrl
add
shlb
lds
or
and
dec
stc
out
push
es
dec
mov
test
mov
pop
insl
add
icebp
jl
aam
negl
aam
jb
cmp
and
repz
mov
pop
adcb
dec
pop
mov
loopne
in
insb
or
cmp
xor
jecxz
hlt
xchg
and
test
aas
cmpl
std
jae
cmpsb
cmp
jo
out
mov
dec
pop
cmp
cmp
pop
lds
test
ja
mov
pop
or
mov
pusha
div
add
stos
scas
lcall
mov
adc
enter
lds
cmpsl
push
mov
in
test
jne
fnstsw
push
push
pop
faddl
mov
out
push
inc
pop
sub
pop
loope
cmp
aas
test
adc
mov
adc
add
rcr
adc
jb
inc
outsl
jnp
je
insl
xchg
mov
push
mov
cmc
xchg
scas
imul
orl
mov
sub
lea
int3
mov
pop
inc
sub
mov
dec
dec
aad
pop
mov
out
shl
sbb
mov
cltd
inc
or
lea
mov
lret
lcall
push
mov
shlb
loopne
dec
fnstcw
pusha
outsb
sbb
in
mov
and
fiaddl
pop
je
xchg
cmpsb
jge
cmp
stos
sti
mov
xor
shll
test
addr16
or
popa
adc
push
mov
mov
test
mov
jmp
sbb
lods
cltd
xor
dec
pusha
test
cmp
and
into
inc
nop
fs
xchg
mov
call
dec
filds
test
or
xlat
mov
jg
dec
loopne
stos
testb
fimuls
xor
and
cmpsl
dec
mov
sbb
outsb
xchg
jns
sbb
rorb
or
lea
inc
sub
push
mov
cmc
inc
push
jae
shll
sub
jg
sbb
cmpsb
scas
insl
sbb
pop
jg
sarl
das
and
xor
addl
mov
inc
int
inc
pop
outsb
jne
gs
rcl
aas
xor
mov
xchg
and
sti
xchg
mov
inc
add
in
or
fnstsw
rolb
leave
sub
out
sbb
xor
xchg
sub
inc
inc
add
out
and
jo
push
sbb
out
xchg
cmpsl
cmp
add
cmp
mov
lea
loopne
mov
test
mov
or
popf
mov
lea
icebp
sub
aas
xor
inc
cmpsb
dec
mov
mov
sbb
sub
push
pop
roll
inc
lcall
and
scas
push
jmp
fwait
jns
jmp
mov
jb
int3
aad
cmp
fidivl
iret
rcll
aaa
dec
push
cmp
test
repz
es
or
push
dec
fbld
testb
cld
mov
dec
incl
lds
push
and
daa
pop
sahf
test
adc
jno
mov
lds
movsb
test
xor
xor
out
sub
inc
push
ss
add
push
mov
fcmovnu
mov
inc
mov
arpl
ljmp
adc
stos
in
mov
mov
push
sub
mov
sbb
int3
jge
pop
dec
icebp
pushf
xchg
int
sub
in
in
inc
xlat
iret
adc
loopne
sub
pop
mov
loopne
out
mov
sahf
outsl
push
xchg
adc
xor
mov
jge
subl
or
insl
jnp
cmp
test
sub
cmpsb
push
stos
into
aas
sarl
pop
in
int3
pop
cltd
xor
jmp
jae
pop
xor
std
cmp
push
jae
jg
ret
cwtl
mov
sub
pop
jecxz
sub
ja
mov
dec
xchg
mov
imul
mov
dec
and
icebp
sub
push
pop
dec
and
add
push
movsl
lods
subb
into
inc
leave
fstpt
add
test
rorl
mov
xor
adc
mov
mov
iret
jmpw
fmulp
or
sbb
jle
xchg
ret
ficomps
adc
cs
clc
mov
or
shll
mov
jbe
cmpsb
test
mov
mov
xchg
inc
xlat
mov
inc
shlb
pusha
leave
cmpsl
je
sbb
pop
push
fisubs
xor
pop
xor
or
daa
ret
push
xlat
mov
sbb
imul
xor
sti
push
xor
push
jnp
jmp
cmp
xor
out
mov
mov
sub
pop
push
xchg
xchg
mov
inc
cld
call
add
jmp
popf
sub
dec
sahf
mov
mov
int
fildll
mov
mov
in
cmpl
add
lcall
and
movsb
cmp
shrl
int
fdivl
jo
out
xor
stos
hlt
int
inc
fs
mov
inc
fsubs
sbb
mov
shll
movsl
sbb
pop
sbbb
jge
and
dec
sbb
loop
pop
mov
jo
xor
xor
pop
out
dec
adc
fimull
lret
lahf
xchg
mov
inc
js
in
cmp
jmp
nop
lds
andl
daa
es
pop
stos
push
dec
gs
fistps
mov
mov
jno
loopne
repnz
xchg
sub
adc
sbb
inc
and
mov
pop
inc
lret
dec
sahf
clc
dec
stos
or
adc
punpcklbw
roll
jae
mov
jmp
xchg
sub
cmp
sbb
dec
mov
sub
iret
adc
aas
cmp
in
pop
stos
and
pop
xlat
mov
test
rclb
dec
add
insb
loopne
sahf
adc
inc
mov
sbbb
in
fwait
push
cwtl
sbb
test
out
icebp
mov
jl
icebp
cli
mov
pop
loopne
cmp
lret
sarb
insb
pop
jo
shl
adcb
enter
add
cmp
mov
push
inc
sbb
out
mov
lds
loopne
jb
jle
xor
fadds
push
dec
lods
fldcw
sti
mov
push
xchg
push
scas
fsubs
add
adcb
lods
aaa
sub
inc
fstpt
ss
push
and
push
adc
mov
dec
movsb
sub
lock
leave
cmc
pop
bts
xlat
loop
jg
call
or
pushf
and
dec
fstpl
push
mov
sub
mov
xchg
out
mov
inc
inc
aaa
mov
aad
mov
in
jp
xor
stos
push
cmp
loop
xor
sbb
dec
pop
out
mov
cwtl
sbb
push
mov
test
bndldx
lret
xchg
mov
sbbb
les
jle
sti
shlb
mov
xor
push
les
test
ss
xor
mov
mull
popa
push
add
pushf
xor
popl
inc
addb
pushf
jl
ds
mov
out
mov
inc
inc
pop
lahf
push
data16
arpl
imul
mov
inc
push
daa
std
nop
dec
ffreep
push
xor
xchg
and
push
mov
mov
stc
sub
push
push
adc
inc
mov
lea
jb
dec
push
or
dec
add
insl
cld
shrl
push
lods
pusha
mov
or
scas
nop
setae
adc
add
repz
popf
mov
movsl
mov
pop
test
mov
popf
or
pop
and
std
cmc
mov
int3
xchg
lret
fucomip
fimull
js
xor
in
lret
andl
ja
pop
or
mov
xchg
cbtw
cmp
dec
pop
je
dec
jg
out
mov
sbb
jp
lds
or
shrb
xchg
and
adc
jl
in
jge
popf
sahf
or
xchg
loop
loopne
mov
push
in
push
or
mov
orb
adc
shrl
shrl
adc
mov
push
sbbl
jmp
sbb
inc
loop
cmp
filds
push
mov
add
aas
adc
in
daa
pushf
mov
js
and
push
mov
inc
sbb
jne
test
sahf
inc
in
repnz
sti
fcompl
cltd
dec
inc
cmpb
mov
repnz
push
sbb
jb
sbb
lods
repnz
inc
popf
and
inc
push
outsb
xchg
fwait
adc
lds
cwtl
inc
add
push
add
push
aaa
add
dec
lods
xchg
jge
or
stos
outsl
push
xchg
testl
testb
inc
mov
icebp
popa
mov
outsl
inc
div
push
outsl
dec
xchg
sub
loopne
mov
jno
lods
popa
xlat
inc
sub
xor
jno
cs
into
movb
stc
out
jb
lret
add
inc
sbb
push
jb
push
in
ret
loop
nop
push
rorl
cli
push
cmp
xchg
movsl
je
lret
xlat
stc
xchg
sub
scas
pop
xorb
mov
sub
hlt
sbb
push
in
sarl
xchg
shlb
and
daa
xchg
mov
movsb
adc
je
xchg
mov
into
imul
jmp
pop
mov
imul
sbb
inc
sti
xchg
mov
or
fdivrp
aam
stos
decl
adc
dec
cmp
cmp
jl
jae
cmp
sbb
sub
pop
fdivl
pop
sub
inc
fstl
mov
lea
out
xor
in
mov
aas
loop
cld
mov
adc
or
bound
inc
inc
push
testl
push
int
fmuls
fsubp
cltd
mov
imul
mov
xor
shlb
add
jnp
arpl
inc
mov
arpl
ds
in
subl
aaa
insl
mov
or
pushf
insb
sbb
jmp
cmpl
mov
inc
sahf
insb
pushf
pop
dec
xchg
mov
push
or
sar
bound
test
into
add
push
inc
repz
testb
clc
and
dec
push
ficoml
mov
int
pop
addr16
lea
fldcw
ja
out
add
inc
aad
jg
aad
inc
mov
out
inc
sbb
mov
mov
inc
mov
int
lds
push
mov
adc
stos
mov
inc
xor
inc
fidivrs
arpl
sbb
sbb
ret
dec
and
xchg
jmp
daa
mov
lahf
pusha
jo
in
fwait
gs
and
xor
mov
inc
mov
aaa
stc
out
clc
nop
xchg
pop
in
and
inc
lret
sahf
dec
inc
out
cmpsb
outsl
loop
cmp
jge
jg
inc
adc
cmc
jb
xchg
xchg
nop
add
ja
push
psllq
in
cmp
pop
jae
iret
xchg
shl
iret
dec
cmp
pusha
sub
test
sbb
shll
cwtl
je
inc
cwtl
inc
ret
aas
push
gs
xor
dec
adc
dec
xchg
cmp
mov
add
push
lods
popf
movsl
std
fidivrl
rcr
push
jb
inc
int
fdivrl
shlb
aaa
in
push
stos
push
enter
inc
and
fnstcw
lret
mov
dec
gs
minps
aad
out
sbb
mov
int
shrl
out
or
rorl
push
scas
mov
jo
push
pop
and
clc
test
inc
pop
xor
es
adc
hlt
or
mov
pop
push
and
cmp
repz
lret
scas
pop
cmp
fs
inc
sarl
shll
inc
daa
ss
jle
add
jl
outsb
outsl
sbb
js
and
cmpsb
xchg
addl
pop
xchg
jge
lcall
outsl
inc
mov
cltd
xor
mov
cwtl
jge
pop
lock
sahf
xchg
mov
daa
jae
inc
lcall
fldenv
orb
pop
test
or
imull
addr16
ret
out
stc
popf
inc
leave
lcall
pop
aam
add
dec
sub
xor
sbb
push
xor
ljmp
pop
push
enter
or
pop
aaa
dec
lret
and
cmpb
call
xor
and
in
dec
dec
sub
inc
dec
cmp
ret
in
jle
or
nop
push
mov
pop
mov
int
cmp
push
iret
cmc
out
insl
addr16
jae
lret
jno
mov
xor
aam
mov
es
fs
arpl
insl
sbb
jae
mov
xchg
mov
movsb
cmp
or
cmp
push
inc
mov
sub
inc
pop
xchg
in
ss
mov
out
pusha
push
or
insl
mov
pop
mov
call
cmp
sbb
ja
loope
aam
sbb
xchg
mov
int
mov
lock
pop
cmp
mov
jno
rcll
add
pushl
sbb
in
mov
in
jecxz
js
fucomp
xor
cwtl
mov
mov
inc
es
mov
inc
fistl
add
adc
ss
in
push
mov
in
jno,pt
fsubrl
sbb
dec
dec
iret
enter
mov
mov
aam
and
sti
out
jnp
inc
xchg
sub
add
fldt
pop
or
out
lds
aaa
into
clc
dec
sbb
setne
xor
rorl
adc
pop
lock
xor
sbb
dec
fadds
mov
imul
repnz
xchg
test
arpl
jae
adc
mov
hlt
push
mov
add
xchg
push
pusha
testl
cs
add
roll
push
add
or
insb
jle
pop
test
arpl
les
test
pop
pop
ja
dec
test
dec
cld
xchg
lahf
ss
sbb
push
sub
xchg
hlt
jle
fnsave
mov
mov
and
repnz
enter
testl
std
xor
into
add
xchg
dec
leave
popa
int3
outsl
ja
stc
inc
nop
pop
out
pop
nop
lcall
sbb
push
jecxz
rclb
shrl
jecxz
fldcw
pmuludq
inc
daa
ret
fs
sbb
imul
push
int3
ljmp
std
mov
mov
push
push
mov
jb
cmpsb
push
cmp
lea
fwait
cmp
jne
add
pop
xor
insl
loopne
xchg
pop
in
test
ja
pop
pop
sbb
lea
xchg
aam
adc
fildl
xor
inc
mov
js
mov
movsl
add
xchg
jecxz
or
mov
imul
aaa
dec
mov
sti
xchg
scas
push
outsl
cmp
push
idivb
or
jl
inc
fs
fucomip
ss
push
ljmp
jb
dec
stos
adcb
in
call
mov
ret
xrelease
ja
dec
out
mov
push
in
cli
or
loope,pn
call
or
xchg
cmp
xor
jl
push
lods
pop
mov
xchg
jb
xor
jb
cmp
xchg
pop
ds
mov
fwait
add
cmp
xlat
and
or
mov
mov
test
xchg
dec
push
jnp
xchg
lods
outsb
icebp
movsl
ret
outsb
dec
lods
mov
add
rcl
out
icebp
movsl
inc
pusha
push
rol
jmp
lea
aas
add
test
nop
out
lret
cmpsb
cmp
das
xchg
les
mov
daa
sub
dec
pop
sub
loope
dec
daa
data16
cmp
sub
cltd
mov
jmp
xor
jg
jne
cld
inc
pop
add
cwtl
in
jnp
sbb
cli
mov
mov
lds
lcall
inc
sbbb
sbb
int3
mov
jge
out
dec
pop
int3
push
movsl
mov
in
and
inc
push
je
xchg
pusha
divl
jle
mov
ds
adc
mov
sub
xchg
cmc
test
add
push
int
add
sub
push
ror
lret
and
add
hlt
dec
add
dec
mov
pusha
and
inc
orl
push
xor
iret
push
inc
mov
in
in
xchg
xchg
xchg
test
mov
jmp
insl
add
shll
mov
add
lret
mov
inc
mov
and
cmp
inc
outsb
shl
cmp
sti
mov
xor
out
jmp
inc
test
repnz
push
adc
ja
push
int
adc
push
inc
and
mov
or
aas
inc
shlb
loopne
imul
push
imul
pmulhuw
push
daa
test
mov
fdecstp
repnz
insl
add
adc
popf
dec
in
loope
es
movsl
mov
fsubrl
inc
arpl
jns
pop
rcrb
pop
testb
cli
xchg
int
cmc
pop
bound
jge
mov
sbb
sbb
mov
dec
icebp
popf
jge
das
mov
popa
clc
sti
jmp
push
jmp
ficoms
inc
sti
cmp
add
sarb
jnp
jae
ljmp
mov
loopne
jne
jle
mov
jnp
mov
fldl2t
or
or
sbb
cld
dec
dec
jnp
ja
push
fldcw
sti
cmpsl
aas
jo
mov
pop
cmp
adc
mov
stos
cmpsb
shrl
push
sub
adc
sahf
enter
jne
sbb
dec
xchg
out
mov
sbb
jecxz
push
idiv
xchg
sub
loopne
mov
js
shrb
cmpsl
mov
pop
outsb
add
pop
out
adc
pop
roll
aas
mov
mov
call
int
in
push
nopl
mov
js
xchg
mov
ljmp
test
xchg
in
imul
repnz
mov
loopne
mov
lock
pop
mov
roll
icebp
adc
stos
dec
lcall
jl
push
scas
enter
rcr
xchg
into
mov
or
xlat
sbb
mov
push
mov
dec
pop
daa
push
data16
and
loope
aad
jbe
adc
xchg
insl
js
or
lcall
or
popl
aas
hlt
sub
cmp
mov
and
sti
fidivrs
jp
push
clc
jmp
mov
jne
and
xor
sbb
addb
cld
jl
adc
adc
push
mov
mov
cld
movsl
fwait
ss
stc
mov
pop
inc
out
ret
and
mov
dec
es
sub
in
push
in
dec
lods
fiadds
aad
and
es
sub
sarl
fdivr
xor
cli
int3
mov
add
movsl
cmp
imul
or
or
cmp
in
mov
or
mov
sbbl
in
pushl
sub
movsl
inc
xchg
lret
cmp
aaa
mov
push
nop
and
jl
scas
iret
sbb
lock
popf
sub
sbb
in
mov
push
jo
outsl
sub
subl
mov
push
xchg
addr16
outsl
sti
adc
ficoms
cmp
xchg
fidivl
in
dec
dec
inc
fisubl
lret
insl
sbb
js
xor
loope
sbb
inc
xchg
and
inc
repnz
cmpsb
inc
aas
sbb
xchg
mov
arpl
add
jae
out
out
adc
sub
repz
call
ret
push
and
add
sbb
mov
mov
es
push
leave
mov
lcall
jns
fdivrs
mov
lods
test
sbb
mov
or
mov
pop
inc
sub
inc
lock
repnz
icebp
ja
in
mov
jae
icebp
fiaddl
pop
dec
xor
popf
fs
outsl
mov
pop
jle
arpl
jns
adcb
ret
cltd
test
mov
insb
jl
xchg
xor
dec
inc
iret
mov
lds
bound
mov
das
aaa
mov
je
xchg
aaa
lea
in
mov
and
push
js
in
xchg
jl
xchg
outsb
mov
popf
lods
and
mov
nop
movsl
push
and
pop
in
aas
dec
insb
idivb
movsb
movsl
or
pusha
jl
mov
jne
mov
or
adc
pop
push
mov
das
pop
call
dec
fiadds
repnz
push
sbb
setl
xchg
adc
sbb
push
mov
mov
imul
int
mov
dec
iret
in
mov
and
pop
sub
adc
leave
es
inc
frstor
push
adc
dec
jecxz
dec
dec
mov
dec
push
mov
in
xor
dec
cmpsl
out
jecxz
and
call
mov
adc
xor
lods
pop
test
inc
add
adc
outsl
jle
pop
xor
lods
cmp
lahf
add
mov
sub
pop
xchg
int3
arpl
testb
push
mov
fldt
xchg
mov
repnz
inc
push
cltd
mov
dec
cmp
xchg
add
int
mov
mov
rcrb
test
inc
cmpsb
addr16
loopne
sbb
enter
adc
test
mov
scas
clc
cld
js
gs
cmpsl
inc
pop
popa
mov
add
fldenv
adc
lret
push
addr16
cs
imul
int
fcmovnb
imul
mov
pusha
fistl
xchg
mov
sbb
iret
fldenv
sub
push
popa
std
or
xor
enter
jl
push
outsb
dec
mov
xor
pop
lret
je
out
rcrl
lret
jb
and
adc
rcrl
add
adc
sti
cwtl
push
or
inc
xchg
mov
jns
lods
pop
imul
imulb
mov
fsubs
daa
pop
stc
and
ljmp
loop
xchg
xlat
dec
movsb
inc
imul
out
les
cmc
adc
pop
push
ficompl
add
shrb
jecxz
xor
clc
cmp
rolb
clc
pop
loop
cmp
cmp
int
into
xchg
ret
repz
mov
xchg
add
adc
mov
and
xchg
ds
inc
or
mov
pop
add
fstpt
xchg
rol
add
addr16
adc
mov
pop
jl
pusha
add
cltd
fwait
scas
scas
rcr
mov
clc
insb
mov
xor
dec
mov
in
sbb
ficoml
push
fidivs
test
std
mov
mov
sbb
mov
jb
lahf
jno
jecxz
dec
adc
stos
shrl
stos
aad
fimuls
lds
ret
ds
push
dec
leave
dec
lcall
inc
mov
insb
repnz
mov
ret
and
shrl
pop
movsb
rcrb
ret
subl
push
in
add
and
das
dec
imul
pushl
pusha
cli
cld
sbb
inc
scas
decb
shrb
add
ret
mov
jl
fsubs
ss
icebp
jmp
das
int
clc
jl
lods
lds
adc
and
dec
int3
pop
fstpl
sub
push
mov
ficomps
cmpl
xor
mov
xchg
jmp
sub
push
in
movsl
call
je
jge
shrl
in
cmp
cmp
test
mov
mov
xchg
stos
xor
cld
inc
test
data16
mov
imul
rcll
xchg
lret
cmp
sub
xchg
mov
aad
mov
sub
repz
fs
ss
push
scas
movsb
inc
sahf
sub
scas
xor
fmul
cmp
adc
fs
inc
pop
movsl
lea
jb
nop
ljmp
cmp
scas
out
pop
loopne
jge
push
jne
pop
or
iret
js
sbb
lock
inc
pop
andb
in
ficoms
sub
gs
out
test
xchg
enter
mov
fidivl
or
xchg
sti
aam
ss
gs
mov
ud0
dec
ja
xchg
dec
fsubrl
add
inc
mov
ss
jo
and
ss
lahf
xchg
pop
test
mov
popf
stc
mov
push
outsl
test
xchg
mov
imul
xchg
xchg
outsl
dec
xchg
xchg
mov
jmp
lods
popf
popa
or
push
jecxz
cmp
stos
pop
sahf
cltd
xor
outsb
adc
loop
pop
out
cli
movsl
sbb
cmp
push
outsl
fcomps
mov
fidivs
imul
addl
jo
shll
push
xor
into
insl
dec
das
inc
int3
fidivrs
xchg
or
mov
pop
jo
jp
movb
cmp
mov
add
aad
or
jle
fbstp
jnp
ljmp
mov
outsl
js
mov
jb
mov
pop
movsl
lds
add
dec
fisubrl
rcl
and
popa
ss
push
push
jno
jnp
sbb
sub
push
pop
arpl
pop
pop
loop
mov
sub
sbb
out
adc
jns
aaa
dec
pop
imul
mov
mov
jnp
fs
mov
jo
jo
cli
mov
xor
dec
sbb
roll
iret
out
xchg
add
call
xchg
popa
test
mov
mov
adc
sub
or
das
adc
sbb
or
stos
enter
js
lock
mov
inc
cwtl
loop
xchg
icebp
xchg
mov
sub
mov
pop
and
push
aas
aas
ja
cwtl
insb
sub
addr16
leave
enter
sub
ljmp
xchg
fildll
or
sbb
jne
sub
cmpsb
in
mov
outsb
mov
push
jmp
mov
jge
pop
lods
int3
or
cmc
push
das
rcll
les
leave
scas
xchg
push
fwait
ret
pop
mov
pop
xchg
add
xchg
xchg
dec
jmp
cmp
dec
movsb
jbe
add
sti
xorb
loop
sbb
nop
push
arpl
stc
inc
push
jns
outsl
pop
inc
or
dec
fcmovu
sbb
ret
cmp
mov
imull
fdivrs
cmovp
std
jnp
adc
xchg
pop
imul
push
add
cmp
inc
push
xor
fstpl
popa
fnsave
int3
out
arpl
xlat
repz
and
or
stos
iret
mov
and
cmp
aam
insl
pop
jl
xor
fcoms
add
lcall
lret
sub
mov
loope
cmpsb
rorb
xchg
xchg
arpl
xchg
lods
cmp
scas
imul
sub
aas
mov
or
in
data16
fxch
jp
or
xor
jp
lea
sbb
dec
mov
xchg
dec
mov
inc
je
repz
adc
jge
in
xchg
add
push
cld
inc
mov
adc
cmp
pop
xor
mov
and
pop
movsb
aaa
sub
push
cmpsl
cwtl
das
sbb
idivb
sub
ret
stc
jg
mov
popa
out
xchg
add
sbb
cld
mov
leave
test
arpl
dec
or
push
and
or
cld
clc
imul
pusha
inc
ds
xchg
xor
leave
test
and
inc
mov
sub
inc
push
loop
push
fildl
dec
xor
movsl
sti
shrb
jnp
fwait
mov
xor
mov
adc
mov
aam
jae
jge
fadds
mov
out
hlt
xchg
or
mov
repnz
std
stc
popf
fidivrs
dec
pop
rep
add
or
fisttps
pop
add
fcoms
xchg
inc
stc
fwait
sti
sub
ljmp
pushf
orb
jbe
addr16
and
jns
out
sub
cmp
fisubrs
nop
pop
inc
push
xchg
sbb
pop
mov
dec
mov
push
jns
sub
gs
es
pop
shl
jmp
lcall
inc
sbb
mov
push
or
cmpsb
jbe
jmp
sbb
xor
sbb
adc
mov
frstor
xor
cmpsl
or
jl
mov
cmpsl
sarl
int3
pop
dec
fbld
mov
inc
sar
imul
mov
cmp
stos
inc
rcll
xlat
xchg
lret
repnz
outsl
add
mov
imul
or
mov
mov
add
mov
les
data16
cwtl
imul
adc
push
dec
mov
popa
cmpb
test
dec
mov
pop
les
mov
sbb
aas
dec
xchg
jecxz
test
jns
xor
xchg
pop
daa
inc
sbb
jnp
pop
mov
jp
popa
adc
push
jno
sbb
aam
ljmp
push
mulb
push
out
mov
mov
filds
push
adc
xchg
xchg
sub
lods
ljmp
loopne
fcmovnb
scas
sub
outsb
add
pop
push
jo
mov
push
xchg
fstl
mov
cmp
push
mov
into
enter
cmp
lret
jb
dec
sbb
addr16
push
mov
jp
aaa
push
xor
or
testl
jle
add
xchg
xor
sub
sbb
cmp
or
imul
shll
aad
and
push
jecxz
jg
mov
inc
mov
fisttpl
aaa
call
addr16
in
int3
cwtl
mov
or
in
jae
shlb
popa
addl
bnd
and
xchg
and
jg
rorl
pop
int
dec
fiadds
ficoml
lret
fisubl
jl
js
into
push
sti
push
out
push
mov
jge
sbb
repnz
mov
xchg
nop
out
push
xchg
pop
jae
cmp
fistps
adc
mov
fwait
adc
dec
cmp
inc
bound
inc
les
into
out
insl
sbb
push
jno
call
mov
mov
add
push
sar
bnd
or
enter
je
pop
iret
dec
cmp
xor
inc
out
xor
mov
add
scas
std
inc
and
incl
nop
es
add
test
lahf
mov
adc
test
mov
in
aaa
jge
pop
ret
lods
bound
test
aas
out
stc
dec
mov
cli
mov
sbb
movsb
dec
icebp
loop
pop
and
repz
push
incl
cmp
movsb
pop
pop
and
lret
jle
dec
and
sub
ds
imul
test
enter
mov
rclb
roll
xor
xchg
aaa
add
pop
sarb
ret
lcall
cs
movsb
jg
jl
mov
rcl
inc
outsb
rolb
sub
mov
or
cltd
stos
push
dec
je
jle
dec
lods
cwtl
test
inc
sub
mov
addr16
cld
mov
push
inc
inc
nop
dec
push
out
push
inc
daa
jmp
xor
int
push
fs
xchg
and
cmp
out
fbld
insb
pop
mov
ja
dec
mov
jle
icebp
sets
push
fstp
inc
push
xchg
ljmp
je
pop
mov
mov
mov
rorl
sub
sbb
add
mov
aaa
jg
dec
jle
roll
pop
adc
jle
adc
das
inc
cmp
dec
inc
mov
aaa
push
pop
jae
cli
mov
loopne
jle
mov
dec
imul
pop
test
cmp
push
sub
mov
lods
outsl
pop
jge
mov
cmp
inc
inc
repnz
fiaddl
xor
or
pusha
push
push
inc
pop
pop
adc
lcall
rolb
and
adc
shlb
cmp
dec
imul
je
movb
jnp
fs
cmp
enter
jmp
pusha
test
icebp
out
cmpsb
cmpsl
rorl
or
and
jo
stos
dec
movsb
push
sarl
push
sub
movsb
sbb
or
xchg
bound
inc
sub
mov
decb
xor
shrb
pop
movsl
push
out
call
cmp
adc
enter
mov
test
aad
mov
stos
data16
push
test
inc
pop
lods
jmp
int3
mov
mov
mov
sahf
mov
mov
leave
push
adc
addr16
repnz
pop
push
lcall
testl
sbb
int
movsb
repnz
arpl
data16
and
in
adc
cld
push
sub
loope
pop
ja
repnz
lahf
pusha
jo
sti
jb
and
xchg
mov
and
sub
xchg
fnstsw
icebp
jp
xor
imul
fdivl
mov
jecxz
sti
aam
mov
inc
imul
xchg
xchg
xchg
add
add
rorl
mov
fistl
dec
das
xchg
inc
pop
push
add
arpl
sub
fiaddl
xchg
lods
inc
add
adc
and
dec
nop
idivb
mov
xchg
packsswb
mov
aaa
mov
xchg
jns
movsb
cmc
pusha
fwait
pop
jb
pop
and
insb
push
sbbb
cmp
jnp
adc
lcall
cwtl
push
repnz
pusha
fildll
dec
pop
jnp
fistl
inc
push
inc
xchg
mov
inc
call
inc
popa
test
scas
lods
mov
and
inc
and
fdivrl
add
lcall
xchg
out
int
imul
or
jnp
shrb
jnp
ds
xor
push
and
mov
add
jmp
pop
imul
mov
stos
pop
ja
jmp
pop
pop
jae
xchg
inc
dec
lods
jmp
mov
mov
mov
fsubr
je
or
mov
jae
sub
cltd
push
lock
arpl
int3
lcall
jae
vminpd
mov
test
lods
rorb
int
cmp
ror
cmp
jnp
xor
xchg
aas
push
xor
sti
inc
xchg
pop
inc
stc
pop
cmp
dec
cmp
lock
mov
rcrl
xchg
push
pop
or
fistl
or
sbb
dec
mov
pop
fnstenv
pop
insb
push
push
cmp
outsb
and
clc
mov
dec
shlb
sub
xlat
fisubrl
sub
mov
dec
add
add
rorb
sub
shr
lret
int
loope
in
imul
pop
idiv
jl
adc
test
lret
mov
and
xor
and
mov
fs
pusha
call
sti
cmp
rclb
push
int3
ret
mov
lock
inc
rorb
jbe
shrl
push
jb
jp
add
or
inc
pop
cli
mov
addr16
push
jae
mov
out
int3
inc
test
push
repnz
dec
stc
or
dec
into
test
cmc
sbb
mov
mov
std
fmulp
fldenv
cmp
mov
and
lea
jle
into
dec
inc
push
push
mov
cmpsl
push
por
and
aad
push
jne
xchg
fbstp
mov
ljmp
and
shll
mov
dec
mov
test
pop
xchg
push
or
dec
push
pop
mov
cmc
jg
add
xchg
dec
and
cmp
std
lods
xor
loope
cltd
and
scas
std
jo
mov
xlat
cmp
lret
mov
ret
aad
cltd
xor
or
cwtl
and
inc
pop
mov
sub
and
push
ds
sbb
test
lret
rcrb
fsubr
lock
popa
push
cmp
adc
fildll
ret
shr
icebp
xchg
push
mov
xchg
mov
cmp
sahf
fiadds
das
pushf
mov
out
sbb
jl
test
cmp
fnstenv
fstl
aad
and
sti
ret
pop
lea
loopne
jl
std
mov
or
pop
aaa
subl
test
fisubl
cmp
insl
dec
mov
fimuls
mov
ljmp
ds
rcrb
insb
pop
test
pop
cs
mov
mov
lcall
fs
fwait
sbb
lods
mov
mov
rol
jge
fs
push
jmp
aaa
lret
fnstenv
sahf
sbbb
xchg
sub
cmpsl
popf
fildl
nop
lahf
ds
and
imulb
mov
push
push
dec
and
hlt
mov
test
ja
add
cmpsl
clc
cmp
sti
incb
rolb
cmp
es
test
pop
dec
adc
lods
mov
jle
call
jecxz
mov
sub
int
or
test
sbb
out
dec
or
mov
add
scas
mov
mov
or
xlat
pop
cmp
xchg
dec
mov
xlat
sub
call
rorl
test
push
outsl
sar
nop
imul
loope
fwait
jle
mov
fs
jecxz
push
mov
hlt
sbb
jnp
xor
mov
push
push
sarb
popa
add
or
shl
xchg
push
sub
in
lahf
jge
lret
dec
int
cmp
cs
add
mov
repnz
mov
cmp
adc
shlb
adc
shr
push
or
scas
and
cmp
or
dec
mov
xchg
leave
test
pop
pop
cs
pop
out
aad
pop
call
jg
rep
pcmpgtd
sub
mov
mov
sbb
push
sti
or
cmc
test
mov
cld
inc
sub
cmp
pop
push
je
rcll
xor
xchg
inc
mov
imul
jo
outsl
dec
add
ret
daa
pop
xor
aam
cs
mov
bound
ret
cmpb
and
rcll
jg
sub
pop
lret
push
or
in
and
xchg
data16
push
dec
aaa
into
jg
push
push
stos
dec
mov
mov
and
dec
sub
cltd
out
dec
stos
push
jle
adc
je
pop
cmp
test
mov
mov
imul
fistpl
sbb
mov
mov
inc
cld
clc
data16
push
xchg
push
xor
pop
cmc
pop
mov
push
cmpl
xchg
push
jns
fisubrs
inc
push
inc
ljmp
repz
sti
pop
dec
mov
sbb
adc
lret
dec
xor
cmc
mov
mov
and
loopne
jnp
dec
repz
clc
cmpsl
loop
and
repnz
mov
test
mov
adc
jae
cmpsl
rcl
mov
stos
cmpsl
insb
jmp
dec
andb
aam
mov
sbb
or
sub
jp
push
xchg
inc
or
cmp
stos
notb
jnp
push
pop
shr
in
into
mov
sub
sub
roll
jbe
mov
or
sti
mov
push
call
orb
jae
sub
mov
jnp
out
arpl
xor
rol
mov
insl
mov
push
ret
or
add
sub
pop
into
enter
xchg
xlat
imull
push
lods
lock
xchg
push
loop
mov
inc
leave
inc
or
jecxz
in
adc
in
mov
jg
push
fwait
push
icebp
inc
or
repz
xchg
or
dec
or
sub
outsl
js
lock
inc
push
mov
scas
xchg
sbb
mov
mov
adcl
aaa
or
scas
andps
push
test
jg
stos
mov
xchg
fsubrl
fnsave
dec
pop
jecxz
mov
call
pop
into
cmpsb
jnp
and
pop
gs
mov
inc
push
mov
mov
bound
hlt
cmp
lret
in
test
push
test
mov
and
mov
aam
enter
call
call
movsb
jp
push
mov
pop
mov
pushf
test
add
pop
lret
or
lods
xchg
mov
and
in
shll
std
popa
pushf
add
mov
stos
push
idivb
inc
cwtl
das
mov
inc
into
fistl
jb
loop
leave
sbb
add
int
fwait
mov
scas
cs
mov
add
outsl
push
stos
fwait
in
mov
lcallw
inc
xor
pop
xor
dec
inc
loopne
pop
adc
ljmp
xor
inc
lret
cltd
std
xor
ret
fidivrl
pslld
push
mov
out
add
jne
scas
pop
push
xor
xor
lret
icebp
add
xchg
lods
add
cmp
ds
std
and
or
cmp
xchg
inc
enter
mov
hlt
jae
xlat
subl
btc
pop
jecxz
fstl
fbstp
and
xor
lods
cld
cmc
push
mov
xlat
data16
pop
jno
sbb
repz
sti
shll
leave
in
pop
imul
cmpsb
les
pop
cmp
fcomip
mov
xchg
imul
shlb
mov
push
mov
lods
xchg
adc
lea
out
sub
int
mov
push
aas
rcrb
mov
push
jge
dec
mov
pop
fiaddl
loop
cli
notl
mov
mov
pop
mov
xlat
out
gs
cmp
pop
add
inc
mov
sbb
sti
jbe
lds
fildl
inc
mov
pop
xchg
or
jnp
insl
xorb
jmp
ljmp
inc
ss
cmpsb
loop
mov
aam
lahf
loope
add
cld
sbb
cs
loope
loopne
cltd
je
out
shl
aaa
movl
pop
outsb
push
divl
fwait
dec
jge
and
or
jno
shll
sbb
shr
pop
lds
jmp
ret
cmp
mov
xor
dec
out
mov
jecxz
rcr
sbbb
cmc
jb
adc
out
dec
and
lock
adc
loop
and
inc
out
cltd
ljmp
push
cmp
shrl
lret
cmp
shll
aaa
inc
lds
and
adc
pop
cs
xchg
in
sbb
stc
es
mov
inc
orb
test
xor
cmp
or
cmc
in
xchg
mov
jg
and
adc
lcall
sbb
popf
add
jecxz
ret
out
scas
pop
aaa
cmp
in
add
cld
jno
in
incb
je
jns
adc
shlb
scas
xor
xor
inc
in
cmp
scas
mov
xor
mov
fsubs
or
inc
stos
out
cmp
lea
sub
mov
stc
or
and
hlt
push
dec
jmp
xlat
cmc
dec
ljmp
pusha
fistpl
jns
cmpsl
ret
outsb
loope
jns
lcall
push
or
mov
jecxz
fdivrs
adc
xchg
add
sub
orl
sbb
mov
push
clc
aas
xor
arpl
js
fistps
sub
xchg
dec
cmovl
inc
in
popl
xchg
in
pop
push
inc
into
sbb
subb
clc
inc
adc
das
and
push
cmp
fwait
sti
dec
jp
clc
fwait
stos
mov
rclb
xchg
and
mov
push
cmp
jge
pop
xor
sbb
rolb
jp
add
sahf
repz
and
adc
inc
popa
and
aaa
ss
jmp
fs
data16
jp
arpl
jo
fwait
and
sub
push
repnz
push
out
rcrl
inc
xchg
mov
jb
add
popa
and
jmp
cltd
mov
shll
insl
adc
adc
and
push
sbb
inc
jo
dec
in
jge
ss
insl
sub
mov
sub
mov
adc
fsubr
lods
cmp
and
sub
xor
xchg
lods
rclb
mov
push
pop
enter
neg
lods
dec
or
mov
cmpsl
dec
mov
pop
call
and
outsl
cld
jg
push
cli
mov
in
mov
popa
xor
pop
push
push
shrl
iret
inc
and
test
adc
es
xchg
pop
out
push
jne
mov
daa
nop
orb
mov
dec
call
sarb
cmp
mov
pushf
xchg
push
hlt
lret
add
popa
cmp
inc
fcompl
pop
imul
and
vdivpd
xchg
cmp
add
ffree
cwtl
mov
into
mov
cld
mov
dec
je
repz
push
sub
sub
testb
dec
pop
test
add
jbe
push
pop
jo
pop
ret
jbe
jg
cmpsb
lret
lahf
inc
fucom
jmp
daa
sub
loopne
or
xchg
xlat
imull
or
cmp
cmc
gs
pop
mov
gs
jmp
adc
pop
cltd
adc
ror
clc
stos
popaw
lds
dec
stos
stos
xchg
in
int3
sar
jmp
mov
shl
xchg
in
test
and
mov
sub
aas
shrl
add
push
push
sub
mov
mov
adc
and
daa
out
mov
popf
or
insb
rcrl
jo
mov
add
jp
xlat
push
repz
outsl
dec
push
ljmp
lock
xorl
cmp
pop
jp
lds
push
cmp
ret
cmp
call
push
in
cmp
mov
stc
popf
les
mov
jg
fucomi
ret
lock
notl
xchg
das
add
out
fwait
lret
mov
fadd
jl
mov
mov
or
repz
cli
rorl
fdivrs
mov
leave
daa
pop
add
push
push
inc
mov
mov
mov
sbb
sub
pop
scas
popa
jne
loopne
push
into
cmp
mov
push
mov
or
mov
sbb
ret
clc
inc
out
pavgb
push
inc
out
popa
pop
jg
pop
ljmp
lea
movsb
js
or
add
add
sub
shlb
out
and
mov
jmp
shrb
lea
jecxz
fsubrl
sub
stos
mov
fadd
outsl
xchg
jp
gs
repnz
fadds
lods
adc
in
sbb
mov
jae
dec
sub
cmpsb
push
int
and
pop
arpl
push
xor
das
xchg
jb
jecxz
lahf
push
cmp
ljmp
cmp
ss
push
mov
jno
stos
fildl
out
dec
pop
hlt
cmp
mov
dec
adc
int
pop
mov
cwtl
xor
mov
jge
fsubrl
popf
in
into
dec
arpl
clc
jecxz
pop
cli
arpl
mov
gs
adc
adc
xor
insb
out
mov
sbb
call
jno
outsl
mov
and
push
mov
add
out
outsb
xchg
scas
sbb
pusha
jp
cmp
sbb
rol
aaa
dec
xor
push
push
jge
jecxz
into
inc
aaa
pop
aaa
daa
cmp
mov
outsl
stc
mov
testl
test
shl
push
ss
adc
jl
mov
int
dec
jb
out
jmp
lea
negl
aas
add
out
adc
inc
pop
daa
mov
and
repnz
insl
stos
fcomip
je
lock
stos
add
clc
push
jno
jb
mov
test
daa
es
bound
add
cmp
push
push
das
cmp
pop
arpl
out
sti
testb
lods
sub
aam
add
sbb
lods
ja
cmpsl
pop
insl
mov
inc
sbb
push
and
movsb
and
sub
xchg
jle
dec
mov
sarb
pop
imulb
add
dec
gs
adc
arpl
mov
xor
jno
xchg
sub
xchg
stos
inc
test
add
sub
and
shlb
cwtl
xchg
inc
ljmp
sbb
test
inc
mov
cmp
mov
std
ficomps
mov
xchg
subb
mov
mov
sub
adc
cltd
stc
nop
lret
add
mov
add
push
sbb
aaa
shrb
xor
mov
inc
jle
clc
xchg
mov
xchg
in
lods
or
popf
push
imul
inc
cmp
jae
mov
dec
adc
ljmp
int3
cmp
push
or
sub
lret
lcall
xchg
xor
xor
fwait
or
dec
mov
or
mov
gs
or
sub
scas
sub
insb
daa
rcll
clc
mov
fdivl
jp
jns
lock
xchg
mov
add
adc
in
and
cmpsb
add
pop
or
ja
cs
push
jle
inc
pop
lahf
jne
loope
fimuls
jg
test
notl
dec
lret
push
xor
cltd
mov
jbe
push
sub
and
ret
push
mov
mov
mov
vcvtsi2sdl
out
clc
and
mov
ds
scas
lahf
push
loopne
jg
iret
cmp
push
lods
jg
test
movsl
cmp
mov
inc
and
push
cmp
js
xor
cmpsb
leave
call
fiaddl
adc
mov
lods
outsb
in
push
jo
stc
test
adc
ss
dec
push
scas
push
lods
imul
addb
ss
test
sub
push
sub
dec
mov
mov
les
mov
dec
jne
sar
shlb
or
adc
aas
rcrl
cli
scas
push
push
cs
xchg
sub
cltd
lahf
fcmovnu
fidivrl
sub
cltd
jo
inc
pop
fstl
xor
and
mov
push
out
cmp
shrl
push
sbb
pop
or
and
aaa
roll
in
lret
mov
jmp
mov
mov
out
cmp
sub
aam
xlat
stos
mov
scas
and
jl
or
mov
scas
stos
ror
sub
lods
rorb
add
outsl
push
ljmp
jno
mov
fucomp
adcl
push
cld
into
test
mov
pop
mov
fnclex
jnp
xlat
xor
xor
sarb
mov
arpl
fistpll
icebp
lret
addl
cmove
ret
sbb
pop
mov
loop
sbb
mov
inc
mov
ret
rorl
dec
shr
iret
and
inc
pop
cld
adc
aam
and
dec
daa
jo
add
in
rcll
cmc
mov
dec
pop
fcomi
xlat
shrb
push
pusha
sbb
or
in
adcl
push
push
jbe
jnp
hlt
mov
sbb
mov
fsubrl
push
or
jns
jmp
ret
stc
popf
xor
mov
inc
loop
ror
jmp
loope
imul
or
cmpsl
push
sub
dec
dec
and
adc
popa
xor
ret
call
jmp
stos
sub
movsl
inc
lock
jb
out
xchg
jne
insb
in
sub
pop
stos
cmpl
cmc
or
and
mov
mov
or
ret
sbb
fldt
std
mov
dec
jp
mov
popf
sub
pop
push
push
or
in
fidivrs
into
mov
adcl
mov
dec
hlt
pop
nop
daa
xchg
stos
push
icebp
push
mov
and
sub
cmpsl
pop
scas
dec
xchg
push
jns
lcall
in
andl
add
fcmove
add
adc
cmc
jg
aas
adc
mov
mov
rcll
nop
pop
mov
fsub
sub
jno
dec
mov
sbb
ret
popf
add
call
lea
xchg
mov
and
insb
cli
hlt
cmp
mov
push
pop
int3
jbe
rcrb
push
jne
gs
and
insl
xchg
xchg
xchg
add
jg
loop
pop
lahf
in
in
mov
aam
or
adc
mov
mov
mov
daa
ret
loop
pop
int3
into
gs
inc
and
out
in
lds
xchg
jns
inc
jecxz
jb
aaa
dec
push
jne
shr
dec
pop
fldl2t
inc
pop
fwait
icebp
mov
lods
stc
jno
xchg
add
lcall
adc
xchg
sub
mov
test
pop
mull
pop
adc
mov
mov
sahf
sbb
lock
sar
xchg
pop
mov
out
ret
push
cmp
iret
lahf
popa
push
push
call
shll
outsl
mov
xor
stos
lock
repnz
xor
pop
push
push
hlt
cmpsb
sub
xchg
xor
xchg
mov
jne
nop
xor
out
cmp
cmp
loopne
sbb
inc
loop
xor
out
add
pusha
dec
cmp
jno
into
movsb
lods
adc
out
add
pushl
and
icebp
xor
cmp
add
orl
scas
adc
lcall
neg
loope
jmp
mov
aam
sti
mov
jmp
sub
xchg
rorb
daa
repnz
ret
add
leave
pop
adc
jl
repnz
cmp
mov
popf
ret
xchg
imul
push
fiadds
stos
inc
fnsave
mov
mov
shl
mov
ja
icebp
dec
mov
out
fidivrl
cmpsl
ds
pop
mov
xchg
jmp
pushf
pop
repz
mov
jae
cwtl
rcrl
add
test
sub
cmp
pushl
mov
push
cmp
xchg
add
mov
add
test
or
ljmp
push
jne
add
mov
push
xchg
mov
or
sub
cmpsb
pop
mov
adc
jle
xchg
add
popf
hlt
pop
stos
popa
aas
pop
lret
jl
mov
jns
iret
adc
mov
scas
jae
loopne
daa
inc
xorl
loopne
pop
sbb
in
and
jl
addr16
pop
in
sub
es
mov
xchg
jle
out
xchg
or
jnp
xchg
or
xchg
mov
ret
cltd
or
ret
outsb
into
stos
sbb
divb
shrb
nop
mov
or
xor
sahf
in
shlb
mov
pop
ljmp
inc
jne
mov
adcl
xchg
xor
push
mov
repnz
fidivl
pushf
mov
test
push
sbb
pushl
sub
sub
rclb
sub
addl
lahf
ss
bound
or
push
push
gs
addr16
sub
movsl
lea
adcb
fiaddl
mov
in
and
push
int
jg
dec
aad
cmp
dec
push
addr16
loopne
out
hlt
lea
sub
push
xchg
jp
shrl
cmpsb
out
xorb
or
pop
ja
mov
mov
add
and
mov
or
daa
mov
in
test
lea
in
mov
mov
aas
sbb
lahf
insb
scas
nop
fsubrl
mov
ds
rol
lcall
add
fs
jae
jge
and
pushf
push
ds
sub
xchg
jmp
int
xlat
dec
aaa
push
jl
leave
xchg
jp
fwait
imul
jbe
ljmp
sbb
push
jae
fistps
leave
mov
sub
cli
cli
xchg
xor
je
pop
push
sbb
and
repz
mov
push
leave
sub
cmpsb
hlt
std
push
mov
rcrl
cmc
mov
jecxz
mov
addr16
cwtl
fistps
or
nop
daa
sub
scas
and
sbb
inc
repnz
jge
in
inc
add
shr
test
data16
fdivrl
scas
inc
aas
jne
and
popa
in
and
inc
push
hlt
add
jecxz
iret
out
mov
fstpl
push
pop
lods
inc
dec
mov
push
es
push
scas
movsb
inc
movsl
js
test
and
dec
imul
repnz
sub
mov
xor
mov
lahf
fimull
or
clc
inc
mulb
into
jae
arpl
clc
sbb
ja
push
cltd
loopne
ret
jne
push
mov
rorb
cmp
lods
xchg
jg
hlt
dec
add
mov
repnz
daa
mov
ret
cmpsb
jo
and
aad
insb
fwait
ret
fs
bound
repz
pop
xchg
sub
push
in
movsb
xorl
inc
movsl
aam
repnz
jbe
xor
fdivrp
sbb
mov
mov
icebp
fisubs
mov
jle
pop
das
shll
mov
fstl
mov
cmp
aad
mov
std
popa
mov
cmp
pusha
std
xchg
mov
mov
sbb
inc
test
arpl
xchg
adc
push
dec
sarl
mov
lods
mov
mov
hlt
fsubl
movsb
dec
cs
fstpl
push
in
cmp
shlb
push
mov
and
std
push
lret
xlat
adc
popa
popa
fcmove
pop
rorl
lock
call
ds
and
xor
sbb
pop
int
and
addr16
and
subb
dec
mov
and
sub
lods
sub
lcall
push
mov
iret
popl
add
fbstp
cld
or
stc
inc
inc
inc
test
fsubp
shr
pop
add
mov
aaa
and
int
mov
mov
mov
test
sub
and
jg
adc
js
imul
inc
lock
dec
scas
inc
sti
mov
inc
and
lret
mov
insl
add
mov
fnstenv
jmp
rcrb
jp
imul
adc
test
fnsave
mov
icebp
movsl
pop
jge
xchg
cmp
mov
lods
adc
ss
popf
add
jnp
test
ret
cmc
ret
push
test
enter
cwtl
je
mov
adc
dec
outsb
addl
out
cs
sub
adc
sahf
frstor
pusha
cmp
fxam
xchg
call
cmp
jg
dec
add
mov
adc
fwait
adc
pop
xor
mov
lahf
mul
inc
xor
outsl
xchg
scas
hlt
xor
nop
mov
push
push
ljmp
jno
push
sahf
inc
mulb
jp
je
aam
mov
jl
pop
scas
cmp
mov
cmpsb
adc
push
mov
mov
cmp
adc
pop
outsl
jmp
push
in
out
call
jmp
ss
pop
daa
dec
movsl
imul
hlt
cmpsb
rcrb
arpl
ds
adc
pop
pop
xor
je
add
test
adc
movsb
data16
aam
ja
inc
test
lcall
dec
jae
cmpsl
mov
lock
ret
cmpsb
cmp
out
pop
loop
ror
or
roll
aam
stos
inc
aam
xchg
stc
and
in
fs
loop
inc
mov
mov
js
leave
and
push
ficoms
shr
pop
cld
adc
orb
gs
add
popf
repnz
cmp
sub
xor
push
sub
xor
out
cmp
ret
sti
xchg
fldt
cwtl
pop
or
mov
mov
aam
loop
das
test
mov
scas
ljmp
mov
add
xor
cmp
orl
push
lods
outsl
scas
jmp
inc
lret
jmp
sarl
push
or
adc
mov
popf
adc
push
add
xchg
add
mov
lcall
in
xor
xor
in
stos
mov
je
adc
rcll
dec
stos
and
iret
lock
es
pop
pop
adc
out
hlt
les
mov
push
xor
sub
fwait
lahf
fdivrl
nop
mov
arpl
loop
aad
fs
test
aas
mov
push
in
imul
xor
jns
add
sahf
notl
test
ret
pop
sub
jno
sbb
scas
dec
in
sub
stos
jne
or
js
fdivrs
arpl
leave
push
and
xor
lret
into
sub
jecxz
add
xchg
push
mov
cmovnp
cmpb
or
imul
int
scas
ret
push
addr16
gs
shlb
jo
jns
xchg
mov
xchg
test
cs
inc
lock
mov
push
addr16
sub
push
xchg
xor
aad
sub
pusha
ret
mov
fsubrs
iret
sub
sahf
stc
mov
jmp
lea
fsubr
js
adc
out
cltd
adc
aas
or
sbb
mov
into
pusha
arpl
jmp
push
mov
rcll
mov
nop
xor
pop
jno
inc
sahf
movsl
repnz
cld
iret
jge
xchg
mov
pop
push
icebp
mov
imul
jbe
data16
out
in
inc
lods
imul
pop
daa
jne
inc
popf
repz
fnstcw
insl
jnp
pushf
and
sahf
cs
push
and
push
push
xor
testl
and
dec
and
dec
frstor
add
xorl
in
mov
inc
in
and
rclb
ss
lock
ja
inc
mov
sti
into
mov
lea
mov
jnp
fisubs
jecxz
repz
ret
sti
out
leave
sub
push
inc
dec
std
je
movsb
xor
mov
lcall
cmpsl
movsl
push
mov
mov
cld
insl
mov
sub
push
jge
xor
and
out
mov
ja
jmp
pop
mov
xchg
pusha
and
push
loope
jbe
out
push
ret
cmpsb
xchg
and
fcompl
ret
sub
jl
lahf
andb
or
ss
push
cld
xchg
stc
jle
add
fstpl
aaa
sub
push
mov
int3
sbb
inc
dec
mov
ret
adcl
push
cltd
or
sub
scas
jo
dec
insb
mov
cmp
mulb
inc
ret
movsb
scas
fldenv
insb
lret
xlat
int
xlat
mov
aam
pop
jle
lock
incb
mov
fwait
xor
fdivs
jo
mov
sar
push
stos
cmp
push
jge
push
scas
pop
xchg
cmp
shlb
cwtl
jns
mov
in
fidivl
cltd
and
shl
push
mov
jns
or
les
andl
out
pop
and
out
addb
outsl
xchg
in
push
mov
push
adcb
fsubl
dec
sbb
inc
mov
add
popa
clc
cmpsl
gs
and
mov
popa
xor
repz
pushl
sbbl
adc
pop
fucomip
xor
sub
cmp
les
filds
jnp
pop
push
outsb
jmp
out
or
jmp
mov
ljmp
inc
push
push
test
mov
fcmovbe
xor
popa
jecxz
xchg
iret
lret
in
jns
jbe
cltd
lods
mov
imul
enter
int
cmp
adc
xchg
sbb
jno
and
sbb
mov
arpl
test
adcb
inc
test
pop
mov
loop
jge
enter
lds
pop
dec
pusha
xlat
inc
std
gs
daa
mov
mov
pop
and
add
cwtl
xchg
adc
jle
inc
push
je
and
mov
cmp
fnsave
shll
mov
push
outsb
push
lods
sbb
xchg
inc
mov
sub
add
pop
inc
mov
cli
sbb
leave
std
pop
nop
out
jne
imul
mov
xchg
mov
lds
imull
push
call
add
sti
stos
jecxz
mov
xchg
cmc
lahf
pop
push
pop
std
les
loope
lds
push
subb
ret
inc
adc
test
cmp
xor
movsl
xor
cltd
shrb
push
or
cltd
movsl
cmp
aad
cwtl
xchg
cmp
cmpsl
pop
lcall
xchg
test
push
fstps
push
lods
sub
fdivrl
sbb
jno
pop
mov
dec
dec
push
jo
fldcw
jb
push
cltd
inc
data16
lods
ja
or
mov
add
lret
cmp
mov
xchg
call
xchg
mov
and
sbb
cwtl
mov
xlat
and
add
jg
bnd
outsb
je
push
mov
lcall
and
iret
loope
add
xor
movl
call
push
ljmp
mulb
sub
or
and
sbbl
enter
pop
add
imul
shrl
lea
pop
inc
adc
xchg
add
rol
dec
push
sahf
stc
test
shl
xor
pop
cmp
mov
mov
daa
mov
add
rcl
cmpsb
sbbl
push
js
je
sar
or
fwait
das
popa
inc
mov
ret
fistpll
cwtl
gs
cwtl
sbb
lds
and
lret
mov
cmp
jle
ret
shrl
incb
fs
adc
push
mov
dec
push
pop
jmp
pop
push
jbe
in
es
pop
cmp
fld
push
adcb
pop
sub
mov
pop
push
outsl
xchg
or
jbe
sbb
setle
mov
push
push
movsl
leave
outsb
xor
pop
and
loopne
push
adc
push
mov
sbbl
xlat
loop
mov
and
aas
push
out
xchg
cld
mov
cmp
cli
scas
loope
push
fisttpl
andl
jmp
add
push
fsqrt
insl
mov
jge
cmc
out
cmp
jp
pop
addl
inc
rol
jmp
dec
int
jl
stos
cmp
movsb
mov
add
int3
cmc
movsb
mov
lods
adc
mov
outsl
daa
insb
jg
jle
leave
sub
cld
cli
inc
lcall
xor
dec
push
aas
call
dec
inc
push
subb
shll
pop
mov
lea
dec
out
aaa
sahf
shll
aas
into
xor
std
sub
mov
and
test
shrb
ja
inc
push
sbb
ficoml
cmp
outsb
ret
jns
lret
or
mov
pop
dec
sbb
xchg
cmpsl
mov
jp
test
fbstp
mov
sbb
mov
int3
lret
mov
das
jns
push
aas
adc
and
pop
cmpsl
int3
mov
dec
mov
mov
inc
outsl
mov
aas
loop
push
fbstp
icebp
jl
fistps
shlb
insb
mov
mov
imul
push
mov
cs
cltd
sub
mov
shrl
scas
mov
ds
dec
jge
mov
pusha
pop
mov
mov
sub
sub
mov
add
inc
popf
in
xchg
fists
mov
loope
sub
out
incl
dec
data16
sub
push
push
sti
inc
pop
or
roll
sub
push
add
and
shl
cltd
loope
inc
or
mov
xchg
push
and
mov
lds
nop
addr16
inc
pop
cmp
out
inc
pop
cmp
stos
sbb
ljmp
fcomip
dec
xchg
scas
lcall
fcoms
mov
xchg
jae
sbb
stc
adc
push
stc
cmp
imul
jns
call
icebp
sti
rcpps
push
push
ret
insl
sub
orl
pop
xchg
addr16
scas
data16
or
push
clc
jo
jmp
sbbb
cwtl
mov
mov
stos
push
loop
imul
dec
aaa
xchg
add
lahf
mov
mov
enter
pop
stos
ret
and
xor
int
sub
mov
mov
push
or
push
jno
xor
sbb
stos
iret
inc
inc
gs
repz
repnz
push
push
ret
cmc
mov
aad
ret
in
pop
or
in
cmpsl
push
sarl
push
lcall
pop
les
pop
jns
cmp
loopne
sub
mov
xor
cs
lods
jb
mov
mov
jo
inc
cmp
mov
xchg
sub
inc
inc
cmp
push
js
lock
andb
int
in
or
or
mov
aas
inc
pushf
in
stos
xor
xor
jmp
xorl
jp
jecxz
pop
mov
fwait
andb
mov
stc
and
add
nop
outsl
pop
jecxz
mov
jle
sub
std
movsb
jns
add
lcall
dec
inc
add
push
cmpsl
call
sbb
inc
psraw
mov
popa
jo
xchg
adc
loop
and
repnz
mov
imul
shlb
movsl
sbb
inc
pop
push
leave
mov
sub
and
or
std
cltd
sbb
test
jmp
adc
iret
fsubr
movsb
shlb
jne
mov
lea
outsb
mov
mov
dec
mov
not
push
mov
adc
stos
inc
mov
inc
leave
popa
push
les
sbb
je
icebp
pop
orl
fwait
cmp
cmp
loope
mov
imul
jns
mov
movsb
lret
xchg
pop
mov
out
dec
hlt
or
adc
fisttpll
mov
lods
int3
push
push
xor
das
stc
pop
icebp
mov
pop
or
sahf
cmp
sub
jns
pop
add
mov
jmp
mov
cld
mov
loop
addl
pushf
cmc
or
xchg
add
jo
ss
fiaddl
mov
out
in
push
sub
mov
arpl
push
sahf
push
jbe
sub
je
fldenv
or
and
sbb
insl
cmp
hlt
mov
adc
in
test
cmpsb
mov
xchg
cmp
mov
cwtl
mov
push
daa
cmp
enter
cwtl
and
xor
adc
dec
sbb
std
fsubs
pop
movsb
call
mov
pop
pushf
insl
sahf
sbb
rorb
call
mov
adc
sahf
pop
aaa
jbe
xchg
lods
and
pop
negb
mov
xchg
xchg
test
push
cmc
mov
inc
aam
andb
aaa
add
sub
jo
popf
xchg
mov
add
shll
lahf
mov
push
arpl
enter
cmpb
fmuls
jge
mulb
push
mov
mov
cli
loop
dec
jecxz
decb
push
adc
inc
scas
and
mov
fists
push
sub
jno
lds
fisubrl
clc
pushf
cmp
gs
jb
push
lock
push
adc
fwait
sub
in
fucomp
inc
pop
add
dec
jmp
popf
lods
sarb
inc
imul
ret
sbb
xor
dec
lahf
ret
aas
xor
push
mov
jbe
imull
inc
push
mov
mov
xchg
pop
inc
add
imul
ss
push
xlat
push
or
notb
xchg
sahf
fcmovu
mov
lahf
cld
into
xchg
in
xor
movsl
mov
enter
mov
pop
and
shlb
adc
hlt
xchg
dec
and
adc
les
jle
jo
mov
sub
ret
sub
scas
loopne
mov
jle
test
lahf
out
or
cli
insl
es
push
push
ss
stos
insl
aam
movsb
roll
mov
nop
inc
imull
push
scas
mov
cmpb
push
mov
and
xor
divb
push
xor
mov
nop
sar
in
add
pop
notb
mov
pop
fiaddl
mov
sub
or
sbb
insb
or
pop
xor
or
mov
push
mov
insl
mov
lea
lahf
ss
cmp
push
push
jle
push
xchg
inc
shll
sbb
je
shr
ficoms
aad
clc
and
loope
lods
inc
add
mov
push
mov
aam
daa
popa
xchg
sub
mov
fdivs
xor
inc
push
out
out
adc
test
je
xor
gs
fbld
push
cmp
and
xchg
jecxz
jb
mov
push
jb
and
loope
notl
mov
lret
call
mov
push
rclb
fldl
mov
insl
lock
and
push
mov
imul
das
cmp
mov
cld
mov
pop
sbbl
adc
mov
cli
test
push
lcall
ja
cltd
leave
mov
sub
pop
lcall
fbstp
fs
xchg
xchg
mov
mov
add
je
int3
fisttps
in
push
push
pop
pop
cmp
out
cld
mov
xlat
movsb
cwtl
enter
mov
push
push
stc
nop
jmp
int
xchg
jbe
jle
ret
outsb
push
adc
stc
sub
lods
inc
mov
inc
fs
lret
bound
adc
std
mov
xor
pop
mov
fs
int
and
fisttpl
inc
sbb
inc
push
insl
dec
repnz
stc
sbb
push
xor
nop
mov
inc
aam
xlat
pop
sub
lea
mov
sbb
ror
adc
ret
mov
ret
hlt
and
fsubl
sub
mov
push
mov
mov
sahf
ret
sahf
inc
cwtl
jge
lret
dec
sbb
test
mov
xlat
and
andb
pushf
popa
cli
xchg
xchg
mov
mov
inc
push
xchg
cmp
bnd
fs
adc
std
dec
jmp
decl
aaa
mov
cmpsb
cmp
repnz
divl
push
pusha
adc
dec
push
push
and
sub
pop
pop
sub
xchg
mov
inc
add
mov
fwait
mov
sbb
arpl
mov
je
fwait
cs
jle
outsb
int3
sbb
cmp
mov
ss
inc
ljmp
enter
lods
mov
push
ret
mov
aas
test
sbb
jne
dec
pushf
xor
push
cmp
push
mov
into
cmp
push
jmp
stc
pop
cmp
rol
aad
mov
pusha
xor
inc
and
lret
inc
adc
xor
inc
popa
push
push
mov
push
mov
pop
sbb
mov
mov
jnp
sti
nop
pop
out
mov
jecxz
ret
and
repz
pop
loopne
les
add
inc
add
leave
pusha
mov
inc
int3
jp
out
clts
pop
mov
jg
cmp
stos
and
in
sarb
pop
fbstp
sbb
fwait
jne
pop
dec
cmpsl
cmp
adc
mov
shl
in
in
xor
jbe
shll
or
xlat
outsl
cmp
sbb
jle
adc
sub
cs
int3
lret
clc
or
sahf
inc
mov
pop
xor
es
push
out
jne
xchg
pop
movb
mov
xchg
test
xchg
je
ret
out
mov
pop
repnz
je
dec
jo
cmp
mov
pop
jbe
jnp
subl
push
fyl2x
aaa
out
repz
pop
mov
push
jo
enter
mov
push
inc
icebp
mov
and
pushf
and
inc
cmpsl
xor
push
jnp
inc
fsubrl
push
sbb
inc
jo
xchg
pop
cmp
sbb
push
push
aad
inc
imul
cli
shrd
push
push
cmp
push
jno
xchg
pusha
sbb
jnp
jp
enter
cmp
leave
pop
lods
pop
jne
stc
mov
cmp
test
mov
xchg
mov
ret
sub
inc
or
icebp
nop
push
stos
psraw
dec
lahf
jl
sahf
lods
rcl
jo
xchg
pop
cs
ror
les
dec
xor
fs
insl
test
mov
xchg
std
call
leave
movsb
js
lea
pop
xchg
aas
cmp
pop
out
pop
cwtl
ljmp
pushf
test
fs
addr16
mov
je
arpl
lret
lret
std
xor
fxch
leave
cs
cmpsl
rorl
sarl
clc
adc
inc
xchg
pop
pop
push
jp
dec
mov
ja
sbbb
or
aad
sbb
jo
xor
jp
das
cmp
or
icebp
loop
aas
cmp
mov
ja
stos
jo
leave
shlb
and
xchg
notb
cmp
dec
jmp
jae
pop
xor
lahf
or
sub
aaa
orl
jp
and
and
xorl
pusha
add
pop
dec
push
and
jo
fstpl
nop
mov
loop
ss
mov
insl
test
aad
add
sbb
mov
testb
nop
push
xor
cltd
inc
in
adcb
cltd
std
add
mov
adc
std
out
mov
xchg
sub
xchg
add
into
add
xor
push
sub
ficoms
sbb
push
je
into
in
repnz
mov
inc
mov
dec
add
cs
shll
je
in
rolb
pop
fsubs
and
jbe
ret
stos
mov
fstl
test
mov
mov
xor
cwtl
push
mov
hlt
cmpsl
clc
lea
inc
sbb
adc
inc
gs
imul
pop
std
test
lret
cmp
and
loopne
mov
or
pop
mov
sti
or
cs
adcb
or
cmpsb
js
or
pusha
stos
mov
sbb
mov
mov
gs
mov
popf
jnp
mov
dec
loopne
mov
pop
or
sbb
fcmove
insl
jnp
mov
lods
loopne
sti
mov
test
inc
lods
mov
cs
mov
adcl
out
in
jb
iret
movl
add
adc
shll
pop
ljmp
jle
leave
mov
xor
pushf
mov
call
testl
mov
lea
and
cmova
jg
sbb
pop
lods
out
xor
push
mov
xchg
pop
adc
push
xor
ret
xchg
cmpsl
or
mov
gs
xor
xchg
pop
inc
pop
add
mov
cmpsb
sbb
arpl
jo
jae
adc
mov
xlat
cli
mov
push
call
cmp
popf
cmp
jecxz
lods
dec
jb
and
loop
cmpsb
dec
out
xor
mov
daa
jp
cmpsl
push
and
movsl
jle
out
push
mov
sbb
lock
cmpsb
fdivs
or
push
cmp
stc
lret
iret
push
jmp
fadds
shlb
inc
pop
leave
mov
xchg
xor
mov
popf
clc
cmp
push
sbb
fmuls
mov
cltd
and
pop
adc
push
shrb
pusha
xchg
cmpb
mov
ljmp
sbb
sbb
inc
xor
add
adcb
icebp
cmpl
jo
jbe
or
push
ret
fs
int
mov
rcrl
scas
inc
pop
dec
sahf
add
cmc
int
cmp
xchg
lods
and
jmp
lret
adc
pop
pusha
pusha
inc
fdivrp
add
inc
jbe
lods
push
jns
out
jle
or
repnz
in
pop
mov
xor
sbbb
cld
mov
adc
into
pop
dec
dec
dec
shll
dec
mov
or
shlb
xchg
sub
push
outsb
mov
mov
mov
mov
xchg
inc
fcompp
lods
inc
scas
mov
xchg
mov
dec
mov
int3
loopne
sbb
pop
inc
ds
push
xchg
std
mov
mov
out
lea
int
cmp
inc
sti
push
ljmp
leave
push
xchg
jmp
mov
leave
sub
ss
dec
jecxz
aas
add
js
sbb
fidivl
aas
mov
xchg
gs
mov
cltd
icebp
adc
pop
fdiv
jecxz
stos
xor
mov
test
mov
loopne
mov
jecxz
push
pop
jmp
sub
stos
lea
jnp
cmp
enter
mov
dec
mov
rcll
mov
push
or
jp
xchg
adc
jg
push
ret
xchg
add
pop
push
pop
push
xchg
push
mov
ffreep
stos
leave
pop
mov
lahf
out
test
gs
pop
xchg
pushf
or
adc
ss
lea
decl
sub
inc
ret
dec
xor
xor
imul
jmp
pop
xlat
imul
or
outsl
test
int3
mov
ret
inc
stos
sub
jae
mov
push
mov
dec
rcrb
lahf
or
push
add
in
sub
xchg
cs
jb
test
loop
cmp
mov
cs
mov
mov
in
jecxz
jp
aam
inc
pushf
inc
pop
dec
mov
mov
cmp
add
fadds
and
mov
test
dec
in
and
jns
stc
insb
pusha
cmp
add
addr16
jb
enter
insl
nop
mov
outsl
lods
inc
mov
sti
push
jmp
push
or
cmp
push
shlb
add
gs
in
test
or
xchg
xor
popa
test
aam
mov
daa
sbb
sbb
inc
push
ret
in
mulb
loopne
pop
loope
jo
xor
divl
lds
in
out
inc
sbb
push
clc
int
mov
jne
mov
add
rol
cmp
subb
mov
dec
cli
push
pushf
mov
icebp
and
fnsave
xor
les
inc
setp
push
movsl
xor
mov
mov
xchg
lods
mov
adc
lret
xor
sbb
dec
mov
adc
mov
xchg
sub
or
stc
adc
cmp
xorl
cmp
stos
mov
pop
xchg
xor
outsb
cmpb
pop
jo
xor
ret
jl
lds
xchg
dec
in
je
jnp
pusha
jmp
xchg
enter
ljmp
or
adc
xchg
icebp
scas
gs
mov
jmp
lcall
loope
or
divl
daa
mov
push
push
cmp
or
jns
mov
icebp
cmp
out
imul
dec
push
and
pop
movsb
cmp
jmp
mov
jmp
push
shll
out
mov
jge
jbe
xor
test
or
push
lret
sbb
mov
mov
cwtl
decb
pusha
test
mov
xor
sub
bound
int3
and
jo
xchg
leave
and
sbb
stos
outsb
sub
mov
dec
pop
dec
adc
and
pop
or
divb
mov
sbb
scas
jb
js
or
decb
loopne
adc
inc
cmp
cli
inc
cltd
jg
outsl
mov
xlat
mov
fnsave
scas
push
xchg
jmp
jbe
andb
pop
jmp
mov
inc
mov
push
xchg
push
pop
xchg
xor
movsb
pop
mov
fcomip
and
sub
gs
leave
push
xchg
hlt
push
hlt
int3
adc
iret
add
adc
andl
je
pop
jbe
ss
gs
push
sub
je
mov
jb
cmp
jge
out
and
inc
sbb
pop
mov
push
xchg
mov
dec
push
arpl
dec
iret
add
das
daa
push
jb
jl
and
add
adc
call
push
jb
mov
xor
mov
add
adc
push
sbb
dec
push
sti
pop
aaa
sub
lret
dec
test
fisubrl
and
mov
push
mov
sarb
push
ds
jle
dec
cmp
push
in
daa
sbb
jl
add
and
xchg
fnstsw
adc
mov
mov
lds
inc
ficompl
lods
cld
push
jg
xor
jmp
int
cmp
and
arpl
and
or
lds
jge
mov
in
shlb
aas
mov
lds
pop
lods
shrb
testb
popa
out
xchg
jb
mov
xchg
scas
sbbl
movsb
lods
mov
das
xchg
jp
lret
xor
js
lcall
data16
pop
jno
fsubp
jno
mov
loop
add
jbe
lock
lahf
mov
cmp
xchg
pop
testl
or
mov
pop
es
aas
mov
xchg
sub
repnz
mov
sbbb
les
sbb
idivl
dec
es
dec
ss
mov
xchg
nop
xor
fistpl
outsb
cmpsb
shrb
enter
push
add
lret
data16
in
dec
pop
ret
push
xor
shrl
cmp
and
push
rcrl
jno
or
inc
test
cld
mov
jg
jno
and
push
jo
or
xchg
ljmp
or
dec
cmpsl
cmp
add
inc
dec
jno
or
jg
aaa
xchg
loope
mov
push
mov
and
adc
jp
mov
ja
stos
loope
icebp
push
decb
test
cmp
or
enter
icebp
test
ds
adc
lds
imull
jecxz
aam
mov
inc
inc
and
cmpsl
mov
out
jns
and
insl
mov
adc
cmp
shlb
or
mov
inc
cvtps2pd
sbb
cmp
lock
test
lret
cmp
scas
mov
push
dec
pusha
sbb
jns
jmp
jle
push
inc
mov
fdivp
int
stos
dec
daa
jns
push
cmc
pusha
lcall
dec
pop
lods
aad
aam
shl
jl
js
xor
clc
ja
dec
mov
jge
imul
pop
pop
or
stc
cmp
dec
dec
jae
out
in
jno
ret
icebp
cmp
scas
subl
mov
cltd
or
jno
test
add
push
repz
mov
gs
imul
pop
repz
into
in
adcl
enter
jle
adc
jp
loop
sahf
dec
mov
call
or
pop
or
movsb
jge
sbb
jl
and
sbb
pop
out
psubw
aad
fwait
push
jmp
add
xor
movsb
push
icebp
adc
xchg
inc
cmc
pop
jmp
nop
fsubl
lods
add
jo
or
xchg
jge
or
mov
scas
ds
mov
es
xchg
or
sbb
call
mov
pop
pop
insl
movsl
inc
lds
cli
or
int
call
xor
fs
and
popa
mov
cli
insb
out
jg
mov
mov
loop
xor
pop
mov
inc
insl
je
loope
pop
mov
fists
xchg
jg
jne
jl
sbb
adc
mov
push
daa
mov
fsubr
fsubl
sti
xchg
xor
popf
xor
iret
mov
fsubrl
out
push
int
fsubr
sbb
xor
cmp
dec
testl
sub
fwait
aad
cwtl
in
insb
mov
lds
cld
mov
dec
push
ljmp
push
pop
or
dec
lods
mov
dec
mov
loopne
add
jbe
lea
push
and
mov
dec
stos
jl
daa
dec
and
enter
icebp
jno
rcl
hlt
clc
cmp
filds
push
dec
mov
inc
xchg
mov
xchg
dec
or
pop
inc
pop
fstpt
lret
and
loope
fdivrl
lret
shll
ret
pop
mov
push
dec
or
push
fisubrs
push
cmpsb
xchg
mov
ja
add
call
or
cmpsl
mov
ljmp
xor
add
inc
mov
lea
push
cmpsl
hlt
ret
sub
out
push
lahf
push
mov
lds
imul
push
add
clc
aad
imul
sub
fnsave
fcomp
xor
add
loop
jnp
imul
jae
cmpsb
xchg
cltd
mov
nop
and
adc
iret
push
test
mov
add
fdivp
cmc
out
xor
adc
sbbb
cmp
movsb
mov
and
lds
xor
repnz
js
mov
out
pop
icebp
test
ja
pusha
cli
xchg
xchg
iret
jge
jmp
sbb
jle
aaa
decb
pop
popf
sub
cmp
xor
push
jb
aam
fcmovbe
es
fidivrs
jo
adc
mov
xchg
push
mov
out
xchg
mov
shll
cwtl
in
std
hlt
call
lahf
gs
neg
imul
xchg
cmp
pop
xchg
cmp
sub
enter
mov
sahf
lods
add
jno
jo
jns
and
inc
popa
bound
fsubrl
mov
shrb
push
frstor
sbbb
loop
add
rolb
inc
xor
cmp
xchg
or
test
shl
sub
and
push
or
int
pop
jl
push
cmp
fsubl
pop
xchg
lds
mov
xchg
dec
testl
sarb
push
pop
or
jmp
adc
rcr
ljmp
cmp
jecxz
sub
shrl
scas
jnp
push
insl
jecxz
fcomip
pusha
imul
add
cld
mov
js
pop
insl
lret
stos
push
adc
cmp
or
and
xchg
sub
enter
lret
add
or
jb
cld
mov
scas
jns
and
cmpsl
mov
rcr
fildl
sub
mov
xor
jbe
jae
into
mov
movsl
mov
loopne
xor
loop
mov
into
cmpsb
lock
mov
das
inc
pushl
xor
lret
and
rorl
dec
inc
and
mov
cwtl
cmp
cs
out
mov
pop
mov
ret
jecxz
jmp
or
pushf
mov
ja
dec
idiv
xchg
sub
mov
lods
mov
jecxz
push
mov
clc
mov
mov
pop
mov
inc
or
cmp
call
mov
jecxz
xor
mov
push
mov
and
int3
sbb
mov
mov
adc
cmp
and
imul
imul
cmpl
outsl
enter
push
es
pop
mov
mov
into
inc
cmp
int3
fidivs
test
adc
add
fidivs
es
xchg
lcall
jmp
les
xor
int3
ss
fdivrl
sub
xor
loopne
inc
fstps
and
lea
in
mov
inc
jae
jne
push
call
mov
outsl
push
ja
xchg
cs
cwtl
inc
and
sbb
idivb
fsubrs
pop
movsl
test
int3
ljmp
int
insl
jl
jae
xchg
movsl
push
cld
xchg
jbe
xchg
push
lds
push
adc
sbb
push
xor
icebp
insl
push
repz
dec
gs
and
sbb
xchg
mov
cmpsl
mov
jl
jecxz
mov
roll
jns
loop
cmpsl
lcall
pop
xchg
push
sbb
jae
pop
mov
jbe
mov
or
gs
jne
and
pop
inc
add
inc
aaa
cmp
out
sub
lret
aam
int3
inc
sbb
lahf
jle
jg
shrb
pop
loope
push
mov
test
imul
jg
shll
shr
js
lds
cwtl
inc
notb
lock
outsl
add
mov
iret
les
rorb
push
mov
bnd
inc
popa
xchg
outsl
add
pop
lds
test
sub
add
or
fs
sub
xor
notb
movsb
adcl
mov
shll
lcall
fisttps
xchg
pop
pushf
inc
lods
or
pop
mov
and
xor
jl
fwait
imul
bound
std
cltd
and
iret
in
jns
imul
push
sbb
xchg
xchg
sub
fstps
xchg
mov
ja
call
jge
shlb
mov
dec
sbb
sub
scas
mov
xor
adc
sub
test
mov
dec
subb
sarl
loop
lret
sbb
dec
in
pcmpeqw
xchg
mov
dec
push
sub
scas
push
lea
in
push
iret
mov
mov
dec
mull
aas
mov
xchg
pop
leave
clc
out
fidivl
jecxz
sub
add
sbb
fsubr
scas
call
mov
sahf
hlt
xchg
adc
or
loop
negl
dec
mov
cmc
sub
mov
leave
in
stc
loopne
xadd
rorb
test
push
inc
xlat
ficoml
xchg
and
outsl
orl
and
lods
inc
insb
cmc
fidivl
mov
mov
and
jge
nop
ja
addl
ljmp
loop
lret
dec
cmp
mov
adc
sbb
mov
or
mov
stos
sbb
push
and
lea
mov
mov
adc
jne
lods
mov
cltd
xchg
push
popf
lds
pop
xor
out
add
mov
stc
nop
je
jb
rcl
out
xor
je
loopne
or
rol
orb
jecxz
jo
mov
push
push
push
mov
and
xchg
dec
loope
jmp
push
std
fstpt
add
push
add
pop
mov
dec
fsubr
pop
inc
add
push
inc
pushf
adc
inc
push
cmpsl
movsb
es
xor
push
jne
stos
loop
out
loopne
std
lcall
push
xchg
pop
push
adc
or
in
pushf
or
cmp
add
or
outsb
stc
clc
sub
mov
dec
sbbl
aaa
mov
cmp
cmp
imul
jne
nop
mov
pop
jle
xchg
jo
cmpsl
cmpsl
gs
add
lods
js
sbb
jp
sbb
cmpsl
dec
xor
xchg
push
repnz
arpl
andb
cmc
insl
fstl
push
mov
mov
in
adc
leave
mov
mov
push
filds
sub
fs
repz
sti
or
in
cld
cmp
test
inc
ja,pn
or
daa
jns
cmp
and
add
pop
roll
inc
jb
jmp
jecxz
xchg
adc
jge
xor
inc
scas
inc
orb
push
out
jmp
popa
pop
mov
cmp
imul
push
movsb
test
jle
sbb
dec
std
mov
lods
xchg
xchg
xorb
out
into
mov
cmp
outsb
cld
cli
or
xlat
movsl
lahf
adcl
xlat
sbb
adc
lods
sbb
mov
lods
mov
fmuls
js
mov
lock
lods
push
xchg
adc
fsubs
mov
dec
xor
mov
jnp
aaa
or
pop
dec
mov
loopne
das
arpl
pop
xchg
push
and
xor
fs
push
sbb
or
cli
adc
minps
mov
mov
sub
pop
negl
jle
fdivs
roll
loope
shl
xor
jmp
nop
mov
push
push
jp
data16
and
mov
add
adc
mov
stc
jae
icebp
xchg
cmp
dec
mov
mov
lcall
fstp
ja
mov
cmpsl
mov
jecxz
lcall
lret
push
pop
cld
int3
dec
loopne
or
cld
insb
jbe
sbb
inc
fs
add
or
push
or
mov
or
inc
ret
pop
jns
int3
pop
shll
pop
mull
in
test
xchg
add
enter
loop
fldenv
hlt
cltd
jnp
mov
rolb
fsubl
lds
popa
mov
sbb
in
psubsw
pop
and
inc
and
sub
jo
out
sti
xchg
mov
lret
xchg
inc
cwtl
xchg
in
inc
cmpsl
pop
xor
insl
mov
push
std
jle
rcrl
pop
ljmp
lock
in
jge
fwait
cmp
push
xchg
jns
or
jg
jb
dec
dec
sbb
lahf
pop
cmpsb
movsb
push
cld
xchg
xchg
jp
test
mov
and
sbb
movsl
insb
jle
lods
ffreep
adc
pop
adc
or
jmp
std
inc
loope
push
shrb
insl
xor
fldcw
or
mov
inc
and
aas
outsl
xchg
mov
pusha
mov
adc
mov
shrb
sub
jg
cmpsb
and
push
add
push
pushl
mov
or
loop
mov
jo
std
pop
push
push
iret
adc
jecxz
cmp
xchg
lods
and
add
add
int
adc
cli
es
mov
mov
test
pop
cld
and
jb
xchg
movsl
push
jle
xor
gs
mov
test
adcb
mov
or
xor
mov
xor
push
and
pop
inc
pop
ds
pop
les
and
xchg
sarl
xchg
cmp
mov
pop
add
or
xchg
jae
jle
test
in
popa
push
jl
push
xorl
mov
bound
dec
mov
xor
int3
jp
lods
lret
xchg
sub
push
push
add
and
dec
test
push
shr
xchg
mov
pop
lods
mov
pop
mov
std
cmpsl
jl
bound
ret
call
movsl
shlb
or
icebp
xor
mov
idivl
test
xchg
bound
mov
adcl
int
fidivs
movsl
aam
repnz
push
imul
sbb
das
inc
pop
cmp
sbb
cltd
es
mov
lods
jo
inc
cltd
mov
popf
clc
push
dec
ja
and
pop
testl
fdivp
adc
mov
xor
add
mov
in
inc
jae
pop
outsl
pop
sbb
pop
movsb
dec
pop
ljmp
lock
out
push
notl
in
mov
imul
sbb
arpl
stc
outsl
jnp
adc
ja
sub
fwait
dec
insb
and
xor
xchg
pop
sahf
add
and
test
xchg
insb
mov
push
push
adc
jae
push
cmc
ljmp
cltd
pop
jne
mov
push
add
fcomi
xchg
xor
les
jo
sub
out
push
pop
mov
popa
jl
push
push
aas
fldcw
arpl
aad
push
insb
mov
adc
in
jns
cltd
in
gs
adc
lret
pop
call
mov
add
shrl
xchg
decl
xchg
lret
dec
and
repnz
and
cmpl
popf
mov
inc
outsl
jnp
mov
pop
cwtl
sub
inc
lods
inc
jns
cmc
jp
sbb
arpl
inc
jbe
ja
pop
add
test
push
xor
xchg
fdivl
insl
sub
pop
pop
cli
add
mov
adc
out
orl
xchg
mov
mov
inc
dec
bswap
cmp
pop
dec
arpl
mov
mov
adc
pop
cmp
mov
ljmp
aad
xor
mov
xchg
inc
lret
xor
adc
or
stos
rsm
jmp
cmpsb
icebp
mov
push
sti
stos
aaa
add
sub
fnstsw
push
popf
sbb
jl
sti
mov
sbb
aas
std
mov
mov
push
mov
cmp
movlps
shll
mov
cmp
mov
ja
lea
pop
and
outsb
sbb
jb
inc
bound
push
mov
les
push
lea
outsb
scas
int
data16
out
inc
push
inc
inc
mov
dec
jo
shrb
int
pop
loope
pop
aaa
jbe
sub
jnp
cmp
cs
aam
out
jo
jbe
jae
stc
inc
es
inc
and
push
sti
sbb
or
add
fidivrl
jnp
arpl
sahf
xor
mov
in
ds
cmp
out
push
movsb
outsl
out
ja
shrl
leave
jns
rcll
lret
push
push
imulb
nop
outsb
stos
pop
mov
fwait
insb
ret
adc
xor
jbe
dec
stos
ret
stos
and
dec
cmpsl
mov
dec
clc
pop
cmc
daa
inc
insl
rcrl
xchg
test
int3
js
cmc
outsb
adc
mov
ficoml
xor
repz
clc
fdivl
out
jne
jno
dec
xchg
jl
sbb
rclb
test
das
lds
fisubs
rol
sub
and
add
add
cmp
or
lock
andl
scas
mov
push
push
mov
xchg
and
rcll
call
xchg
nop
das
cmc
dec
lret
bound
hlt
ljmp
cwtl
mov
xchg
mov
roll
add
sbb
sub
fdivrl
add
cmpsl
clc
xchg
out
test
loope
mov
mov
popa
cld
mov
fldl
and
xor
decb
dec
out
sbb
xchg
mov
test
cmp
filds
jge
mov
out
cld
stos
mov
mov
cmp
lcall
nop
mov
inc
jp
or
arpl
dec
sbb
mov
sbb
insl
xchg
xor
push
mov
sarl
push
lods
call
add
xor
sub
adc
mov
lcall
xchg
rsqrtps
js
jae
adc
pop
loope
lea
pop
int3
icebp
adc
das
ss
or
outsb
push
jg
pushf
pushf
das
testb
or
in
mov
ret
jl
sti
sbb
cwtl
mov
repnz
loop
aaa
shll
xchg
add
sbb
push
mov
int3
lahf
loop
sti
push
xchg
outsb
push
fsubs
test
xchg
insb
xor
xchg
lcall
es
or
fnsave
push
mov
fidivl
or
cmp
lret
mov
mov
mov
jp
mov
sub
ds
dec
mov
jae
sub
ficoms
lret
pop
repnz
inc
dec
or
sbbl
outsb
loopne
adc
into
decl
push
in
pop
xor
mov
arpl
out
mov
stc
popa
scas
stos
pusha
std
jnp
sub
inc
aam
adc
ja
sbb
sbb
outsl
loop
adc
push
in
out
dec
scas
inc
jne
jno
xchg
jmp
sbb
pop
pushf
add
push
mov
in
das
xor
adc
mov
jae
xchg
scas
or
arpl
cmp
daa
mov
repz
stos
arpl
aam
dec
push
sub
xchg
pop
mov
into
test
sti
xchg
and
sub
jmp
and
aad
fbstp
xor
nop
xchg
arpl
cs
mov
mov
arpl
mov
jge
nop
mov
aam
lret
addr16
pop
sbb
xlat
lret
sbb
gs
popa
insb
xlat
inc
xor
dec
in
xchg
jns
into
xchg
adc
mov
dec
insb
cli
movsl
cmp
test
sub
jp
dec
mov
fmul
out
mov
or
cmp
mov
out
int
sti
mov
lock
push
cmp
jecxz
xchg
fdivl
dec
add
push
test
mov
jecxz
cltd
movl
in
shll
outsl
clc
xchg
rolb
fistpl
lcall
push
bound
add
inc
inc
out
jbe
imul
test
test
cwtl
fsubl
movsb
xchg
daa
push
arpl
imul
pop
test
adc
cmpsl
scas
mov
sbb
xor
jp
mov
jns
dec
adc
bound
leave
mov
pop
mov
xor
std
lret
jecxz
cld
addr16
push
push
push
add
xchg
mov
dec
es
cmp
xchg
test
push
jns
lea
aam
jecxz
clc
enter
sbb
mov
lock
push
push
push
out
mov
adc
inc
pop
cmpsl
popa
xchg
xchg
sub
addr16
out
push
shrb
or
imul
lods
in
ss
mov
mov
xor
loop
fwait
pop
mov
imul
rcll
jp
inc
mov
inc
sub
xchg
test
sbb
dec
add
adc
and
cld
fs
pop
hlt
pop
stos
orl
out
mov
cmc
call
pop
into
or
push
sti
push
mov
setnp
inc
xor
fidivs
daa
inc
sbb
mov
xor
ss
stos
mov
mov
xchg
push
add
mov
push
out
dec
inc
jmp
xchg
outsl
sub
jp
sbb
ss
fcoml
mov
cs
lods
mov
adc
ss
jb
mov
xchg
mov
lahf
lods
cld
lods
cmp
pushf
in
jno
pop
setge
mov
clc
cmpsl
out
cmp
aam
push
sub
aas
jmp
xchg
fcomps
xchg
test
ss
imul
xor
sbb
bound
bound
les
xor
jns
mov
insl
sub
lcall
sbb
daa
xchg
adc
sub
bound
sbb
push
or
add
add
movsb
hlt
mov
fcomi
and
stos
lods
dec
push
scas
test
add
xchg
dec
xchg
lods
mov
out
aas
pusha
xor
lret
pop
call
add
repnz
std
js
and
out
popa
jns
sub
pop
sahf
sarb
roll
notl
out
mov
jae,pn
bound
addl
in
movsb
fsubs
and
jmp
adc
adc
out
scas
dec
jecxz
dec
addr16
sub
call
std
mov
es
add
daa
scas
fidivrs
or
sub
cmpsb
mov
orb
rclb
sahf
or
or
or
xchg
push
mov
mov
sti
sub
idivl
cmp
cld
inc
add
mov
rcll
outsl
repnz
fnstenv
mov
pop
or
push
std
icebp
movsl
dec
mov
loope
xor
xchg
add
or
cmp
sti
data16
sub
rolb
test
stos
js
in
shr
jnp
fistpl
inc
mov
push
adc
jle
jb
popf
sub
add
sbb
cli
icebp
das
shrb
fwait
push
out
mov
inc
popf
mov
mov
test
push
dec
popl
jge
push
xchg
pop
out
push
mov
jecxz
cmp
repnz
sub
push
adc
mov
popa
ljmp
xor
or
inc
inc
cltd
cli
cmp
lods
lret
frstor
daa
add
jp
mov
push
dec
out
test
stos
fdivrs
test
in
push
mov
sbb
mov
xor
leave
pop
sbb
icebp
mov
je
and
loope
push
jecxz
mov
test
enter
and
pop
adc
push
imul
xchg
sbb
loop
lods
sbb
inc
pop
repz
push
nop
inc
das
pop
scas
sbb
inc
lock
psubsb
in
pop
jmp
ljmp
nop
jecxz
pop
sbb
out
push
enter
adc
mov
call
imul
add
es
mov
mov
shll
add
jb
mov
stc
xchg
lods
xor
adc
mov
mov
lock
shlb
adc
pusha
loopne
aam
jns
xchg
js
mov
or
inc
fnstsw
popa
cltd
xlat
mov
pop
scas
lods
lods
xor
jnp
insl
mov
add
xor
loopne
cmp
xorl
and
adc
roll
das
mov
pop
sbb
add
jp
mov
push
push
sahf
and
cmp
xorb
ja
mov
lcall
addr16
sbb
xchg
and
push
out
lods
dec
jmp
jg
jbe
xchg
shlb
cltd
sub
cmp
dec
pop
loope
bound
mov
cmp
mov
test
hlt
mov
cmc
mov
shrl
add
sbb
lea
adc
jmp
cmc
jae
rcrl
cmp
mov
add
lahf
ror
fildl
jne
jns
or
aaa
adc
xorl
mov
aaa
mov
out
mov
fsubrp
test
mov
scas
ja
cmpsb
flds
jmp
stos
sub
sbb
rcr
jg
stc
add
les
outsb
add
loop
mov
mov
mov
xchg
lahf
lods
int3
cltd
mov
into
adc
xchg
mov
jns
and
sub
sbb
out
mov
mov
pusha
outsl
push
jecxz
mov
fdivr
mov
bound
shr
cmp
lcall
add
insl
mov
loopne
sti
cmc
sub
fwait
or
jne
rcrb
scas
pop
jp
test
pop
xchg
cmp
push
sbb
sbb
clc
js
add
lock
push
addr16
mov
lret
out
daa
scas
stc
sbb
mov
and
and
mov
call
out
pop
mov
push
enter
clc
std
stos
dec
mov
cmovns
fxch
xor
xor
testb
pop
push
shlb
aam
jne
mov
dec
mov
pop
stos
jns
lea
adc
mov
adc
inc
fsubl
stos
mov
mov
ret
mov
add
push
push
in
shr
xor
mov
std
pop
sub
pusha
pop
push
add
enter
inc
gs
xor
insb
subl
mov
call
pop
popl
jns
pop
aas
lahf
sbb
inc
stos
xchg
dec
inc
xchg
stos
jg
cmpsb
sub
daa
in
sub
inc
mov
xor
sbb
sbb
in
cmp
xor
jnp
cmp
or
jnp
addb
and
pop
sbb
scas
push
movsl
jnp
pop
cltd
push
mov
call
dec
push
sub
or
xchg
aaa
std
js
mov
test
jne
xor
cmp
sbb
and
arpl
xlat
fcmovbe
inc
and
mov
fs
or
das
incl
xor
movsl
or
fs
mov
xchg
dec
xchg
lea
push
adc
add
xorb
xor
aaa
pop
jle
fsubr
or
lret
clc
xchg
es
mov
sub
mov
push
nop
mov
imul
mov
mov
mov
mov
outsb
sub
fs
ficoms
adc
add
daa
xor
jmp
fcoml
add
test
pop
mov
mov
arpl
shrb
jp
aas
pop
cmp
out
lods
inc
inc
aam
cmp
lret
and
dec
rcl
test
mov
jmp
repnz
sub
adc
movups
mov
rcll
xchg
lret
leave
dec
cwtl
push
dec
cmp
jl
leave
loope
movsb
xor
jo
sti
lds
sbb
hlt
dec
xchg
loop
cld
leave
push
xlat
and
xor
xchg
add
insl
scas
and
ss
icebp
sub
or
out
ret
mov
in
subl
jno
xlat
mov
mov
mov
push
clc
push
push
out
push
push
jb
xchg
mov
mov
je
and
inc
jns
mov
adcb
out
shrb
lret
arpl
fsubs
jne
outsl
pushf
dec
mov
and
stc
xor
pop
dec
push
mov
call
fsts
jecxz
aas
dec
and
sub
xor
sub
stos
rcrl
icebp
ds
filds
ds
cmpsl
and
xor
je
cmpsl
jmp
test
cmp
mov
mov
shrb
leave
push
ljmp
jno
pop
test
mov
or
test
xlat
cmpsl
pushf
dec
pop
scas
xorb
pop
rclb
jle
aam
arpl
into
int
mov
data16
mov
sbb
add
or
ja
sub
push
cmpsb
push
lods
xlat
push
inc
jge
jo
jo
enter
and
jecxz
jmp
push
cltd
mov
dec
mov
fnstenv
clc
jnp
pop
and
or
xchg
jecxz
fstpl
mov
or
mov
pop
repz
sub
movsb
jno
lret
paddq
pop
call
fs
test
add
nopl
ds
test
jb
sub
arpl
scas
cmp
insb
fcomip
xor
inc
jg
pop
pop
mulb
mov
push
mov
leave
mov
loopne
inc
push
ret
imul
sub
push
sbb
lods
push
ljmp
push
cmp
test
mov
xchg
sub
call
shr
dec
sub
rcrb
push
ljmp
xchg
subl
and
xchg
sarl
xchg
adc
or
sub
in
add
mov
push
push
shrb
mov
je
push
mov
aaa
in
sbb
roll
movb
or
jns
daa
shll
adc
or
pusha
dec
xchg
cmp
push
fs
lret
mov
cmp
xor
test
fistpll
shlb
push
fnsave
mov
or
sbb
xchg
mov
repz
int
insl
lcall
daa
stos
fldcw
add
out
dec
sbb
lret
bound
xor
popf
mov
mov
into
add
ret
insb
into
enter
out
repz
inc
dec
pusha
and
iret
push
mov
mov
daa
and
adc
mov
xchg
xchg
add
in
lcall
and
ret
jns
mov
fwait
mov
push
test
mov
mov
enter
adc
pusha
sub
lea
cmp
sub
std
sub
jo
xchg
xchg
pop
faddl
jb
test
jbe
xor
xchg
jle
jb
xor
in
outsl
mov
mov
cmp
in
xchg
lcall
jmp
xchg
mov
mov
js
dec
xchg
test
lret
mov
inc
inc
push
xchg
aaa
rorb
test
lods
outsl
mov
dec
clc
sub
adc
mov
sub
outsl
push
jne
dec
dec
inc
pop
cs
es
and
sub
lods
push
xchg
leave
adc
cli
mov
mov
shlb
xor
push
push
xlat
insb
adc
sbb
shlb
scas
fwait
aaa
repz
orl
pusha
xchg
jge
ret
xchg
hlt
negl
es
or
cmp
sub
test
mov
pop
cmpsb
in
add
lret
jle
adc
popa
jmp
sub
add
pop
fcoms
test
inc
push
out
ja
das
outsl
and
scas
ret
es
mov
out
and
or
sub
outsl
inc
andl
addr16
inc
push
loope
push
push
in
xchg
pop
jp
jecxz
jnp
roll
sbb
sbb
lcall
and
iret
dec
xor
mov
xor
push
test
xor
push
lahf
pop
in
test
pushf
sbb
rol
sbb
dec
dec
repz
sbb
xchg
mov
fldt
and
call
cli
lods
ss
dec
sub
mov
les
ljmp
imul
or
lods
pop
push
pop
dec
div
jp
sbb
les
out
lods
fwait
adc
jmp
enter
inc
and
xchg
xor
mov
aad
cmc
xor
push
cld
divl
push
loop
in
or
or
xchg
andb
mov
lret
icebp
inc
cmpsb
stos
std
inc
fstps
mov
aam
sub
imulb
jne
add
test
ret
lock
fstpt
pusha
push
leave
mov
inc
pop
rcll
lret
enter
jg
ret
jmp
or
mov
fistps
rcll
mov
out
jecxz
mov
fistpll
iret
cmpsb
adcb
cmp
jno
dec
rolw
pop
and
loop
sub
xor
daa
xor
pop
scas
push
cmp
stos
inc
fsubl
fidivs
in
in
inc
enter
insb
mov
push
fbld
lods
cli
xchg
fists
insb
sub
loope
mov
lret
daa
pop
push
fwait
addr16
shrb
push
pop
inc
inc
fstpt
stos
nop
sti
es
cmp
jo
add
jecxz
mov
das
mov
shrl
or
in
cmp
fwait
mov
scas
mov
xlat
jecxz
mov
push
cli
mov
mov
sarl
jbe
or
std
xchg
subb
inc
mov
ja
adc
mov
mov
push
sbb
clc
add
scas
xor
push
in
rcl
mov
sbb
push
dec
or
xor
push
jmp
push
lea
xor
cmpsl
aam
fnstsw
repnz
xor
popa
clc
addl
inc
add
pop
sbb
mov
ficomps
ss
cmp
repnz
pop
jg
sub
test
dec
popf
sub
inc
repnz
adcb
mov
cs
into
and
mov
add
ror
cli
scas
inc
and
test
inc
int
jl
adc
and
push
lock
inc
popf
lods
jbe
bound
push
sub
and
mov
dec
adc
mov
xor
sbb
nop
dec
in
shrl
rcrb
fisubl
xorw
sarl
cmp
push
dec
outsb
pop
insb
xor
mov
xor
cmpsl
les
cs
xor
adc
aam
clc
xchg
sahf
js
int
bound
sbb
mov
cmpsb
movb
in
sub
xor
jle
cs
cmpsb
push
push
add
jbe
imul
in
push
mov
test
lds
bound
mov
in
es
push
rolb
dec
loope
mov
dec
testb
fmuls
icebp
mov
pop
dec
sbb
nop
daa
add
in
xor
ljmp
lahf
test
in
rclb
add
clc
push
pop
inc
pop
pop
mov
enter
mov
mov
imul
mov
pop
cmp
cmpsl
adc
dec
stos
fisubl
repz
arpl
adc
push
repz
cltd
test
dec
ret
xor
test
ja
lret
pop
out
adc
pop
inc
xor
dec
in
push
add
shlb
mov
scas
xor
out
push
cld
inc
mov
and
cmp
sub
pop
or
xor
adcl
loopne
adc
scas
sbb
mov
adc
sbb
mulb
sub
push
sub
clc
push
aas
inc
dec
movsb
int3
cmp
jle
inc
fnstcw
fisttps
clc
jne
loopne
xor
push
inc
cmpsb
or
in
dec
inc
mov
inc
loop
mov
mov
mov
inc
shrl
push
cmp
inc
cmpsl
pop
sub
xor
cld
stos
repz
mov
jl
lods
pop
in
outsl
add
mov
ljmp
pop
xchg
mov
jp
add
adc
or
mov
add
data16
pop
addr16
add
cmpsb
fisttpll
jnp
jle
xlat
aaa
mov
xor
setno
outsb
mov
decb
shll
rcr
popa
rcrl
mov
daa
clc
push
push
scas
out
fwait
mov
push
and
cmc
mov
sbb
mov
inc
insb
rcll
pop
cmp
dec
popa
cmp
add
cmp
aad
or
fsubrp
bnd
pop
pop
xor
icebp
jnp
int3
inc
adc
xchg
es
ja
out
ret
inc
dec
sub
jnp
and
iret
or
fldcw
enter
in
pop
fisttpll
out
popf
mov
mov
sti
subb
clc
pop
mov
mov
sub
shl
dec
or
mov
outsb
outsb
stos
push
cld
mov
jb
lock
and
arpl
popa
aaa
mov
pop
push
xor
pop
sahf
push
fisubrs
or
negl
cmp
push
pop
sbb
into
fimull
test
pop
cmp
dec
mov
and
rcll
inc
imul
daa
test
xchg
shrb
repnz
inc
gs
test
xlat
jno
sub
sbb
pop
inc
add
xchg
add
das
sbb
out
int3
arpl
outsb
sub
cmc
lods
xor
sub
dec
sahf
scas
inc
enter
dec
call
outsb
xor
shlb
lcall
shr
stos
in
jmp
cmp
cmp
fidivl
mov
pop
jmp
and
cmpsl
aas
or
shll
jbe
adc
and
sbb
stos
cltd
cmc
mov
xor
push
insl
imul
iret
xchg
mov
lret
pop
daa
jbe
iret
push
pop
int
mov
push
in
pop
inc
mov
xchg
fdivrp
cmpsl
out
ss
out
inc
add
leave
int3
push
cmp
dec
icebp
jns
rep
adc
das
pop
lret
xor
loopne
insb
pop
lret
jns
mulb
xchg
mulb
pop
push
jno
push
sub
pop
lock
push
shrb
xor
xchg
add
fnstenv
jle
mov
les
mov
pop
mov
aam
rcl
jp
push
mov
sbb
mov
jns
lahf
cmp
ljmp
movsl
cmp
frstor
add
ds
aam
jbe
fnstenv
xchg
fldl
sahf
xor
inc
in
rcr
gs
xchg
or
xchg
outsl
out
mov
imul
mov
int
pop
dec
nop
outsb
imulb
movsl
cmp
inc
lock
int3
ret
fldl
jle
ret
imul
lret
sbb
int
add
pop
scas
pop
in
and
mov
cmc
mov
pop
adc
aas
cmpsb
in
decb
sbb
arpl
sbb
xchg
or
lahf
sub
xchg
pop
mov
test
sbb
or
cmpsl
mov
cmp
add
push
jo
gs
dec
and
cs
mov
nop
aaa
sub
or
fwait
mov
inc
mov
or
mov
shr
mov
stos
mov
mov
ja
frstor
xor
test
stos
mov
mov
push
or
rclb
rcrb
jo
into
mov
stc
in
xor
ljmp
cld
or
pop
cmp
sarb
fisubrs
scas
jl
pushf
and
add
aas
mov
xor
push
test
iret
insb
add
lcall
jl
aas
loope
and
push
sarb
iret
or
add
xor
sub
pop
in
adc
mov
shlb
mov
int3
inc
cmc
int3
clc
in
repnz
cmp
cltd
dec
into
fsubrs
and
cs
repz
dec
xor
out
ror
loope
jg
push
xchg
jp
test
rep
fldl
lcall
cltd
add
xchg
arpl
lret
pop
dec
and
cmp
mov
cltd
xor
jle
mov
rcrb
and
and
cmpsb
sbb
jne
xor
sub
fsubl
mov
mov
cld
mov
shl
or
mov
add
pop
sbb
loope
cwtl
fsubp
fdivs
andb
cltd
jl
fucomi
push
push
sub
pop
in
add
testl
inc
lret
lds
and
fwait
add
mov
mov
mov
ss
and
add
push
out
imul
sbb
mov
pop
pusha
push
mov
mov
cmp
movsb
adc
imull
lret
mov
out
push
add
xchg
xor
and
or
mov
adc
cwtl
subl
dec
push
inc
rcl
addr16
cltd
imul
jno
fwait
scas
sub
push
aam
or
mov
xchg
jbe
stos
jne
push
pusha
mov
xchg
or
pop
or
sti
push
mov
jge
mov
lahf
mov
sbb
xor
mov
adc
jo
pushf
testb
hlt
add
sub
cmp
jge
mov
jp
cmpsb
jnp
sbb
rorb
xchg
imul
dec
repnz
mov
inc
fisubs
and
andb
jmp
pop
jbe
jp
or
movsb
test
inc
add
repz
mov
jecxz
xlat
outsl
inc
iret
imul
scas
and
pop
lret
xchg
lret
in
loopne
shrb
fstl
pop
inc
xchg
ja
nop
cltd
cltd
push
sbb
xor
jae
hlt
loop
je
orl
push
sbb
test
mov
dec
pushf
xor
mov
mov
mov
sbb
mov
jge
sub
js
std
jmp
xchg
push
call
pop
js
ss
xor
sbb
test
jb
aas
pop
jne
inc
in
inc
test
in
push
ds
sub
into
test
or
jbe
and
xor
mov
ljmp
js
push
decl
call
faddl
inc
mov
or
jge
addr16
daa
lahf
or
xor
add
inc
cli
jp
movsb
outsb
sbb
pop
dec
xsha1
cmpsb
mov
mov
lods
sub
shlb
in
or
mov
fisttps
ficoms
push
sbb
sti
test
movhps
jns
lock
scas
pop
jecxz
push
lea
addr16
push
xlat
ss
bound
or
jae
xor
addr16
data16
das
inc
icebp
pop
mov
add
lods
insl
call
orb
in
out
sub
lret
icebp
adc
inc
mov
aad
xor
stos
jae
mov
add
shll
pop
xchg
lock
add
mov
pop
pop
push
jmp
andl
fisttpl
aam
xor
and
sub
dec
jl
outsl
mov
jmp
gs
stos
dec
sub
test
stc
movsl
rolb
loop
outsb
cmp
mov
clc
adc
mov
jnp
insb
xor
mov
push
cmp
mov
dec
push
call
mov
sbbl
loope
mov
popa
jecxz
pop
adc
push
mov
adcl
mov
adc
shll
xchg
xor
sarb
xlat
repnz
or
shrb
xchg
push
out
clc
add
out
inc
sbb
xchg
je
imul
mov
xlat
loopne
pop
rcr
xor
cmpsb
lods
repz
pop
icebp
cld
jp
dec
lods
or
outsl
jle
fimull
imul
hlt
push
hlt
jns
xlat
jo
adc
pusha
sub
mov
leave
mov
mov
mov
mov
icebp
pop
adc
dec
fwait
xor
repz
sbb
xor
jecxz
jnp
cmp
push
scas
out
inc
inc
aaa
mov
fcmovnb
jne
jnp
adc
std
or
adc
shlb
mov
imul
mov
pop
mov
mov
bound
dec
fildll
pushl
or
mov
adc
sti
stos
jg
cmp
cmp
sbb
cltd
dec
cs
arpl
mov
and
push
mov
out
sti
pop
jb
ret
outsb
jmp
iret
daa
sbb
leave
mov
ret
mov
xchg
dec
mov
cmpsb
aas
xor
out
cmc
rorl
xor
test
lret
cmp
flds
pop
in
rclb
out
sbb
shll
push
popf
out
jo
mov
jne
cmp
sub
std
xchg
in
and
xchg
cmp
andb
sahf
xlat
cmp
mov
or
dec
lret
mov
lods
sub
dec
sub
fdivrl
out
add
dec
loopne
lds
shl
addr16
dec
push
and
sbb
pop
mov
xor
andb
xchg
insb
dec
and
xor
mov
int
mov
shl
push
iret
data16
in
and
add
adc
adc
das
jnp
lds
iret
sub
lock
cmp
and
stc
loope
fcomip
in
sbbl
aas
push
mov
rcrl
mov
popa
pop
and
les
pop
push
cltd
xor
stos
addr16
lods
inc
iret
push
mov
inc
fsubl
xchg
stos
mov
inc
ljmp
xchg
push
movsl
sti
int3
push
fcomp
pop
pop
out
test
or
adc
jmp
cltd
insl
cmp
xchg
jl
pop
mov
out
mov
xor
les
mov
inc
popa
clc
xor
and
aam
rol
xor
dec
sub
ds
xchg
mov
ss
push
loop
inc
or
call
in
nop
mov
add
mov
clc
je
rclb
mov
mov
imul
dec
lcall
shrl
jns
hlt
imul
cmp
adc
and
clc
and
enter
pop
hlt
shll
cs
clc
aad
out
stc
sar
cs
xchg
ljmp
and
inc
and
dec
fcompl
xor
daa
adc
push
sahf
cli
jne
cli
fyl2x
pop
adc
push
cmpsl
sub
adc
mov
jno
call
xor
push
sub
mov
not
fisttps
or
shrb
and
mov
sub
xchg
outsb
repz
xchg
pop
lahf
repnz
cmp
scas
inc
out
mov
lret
jae
andb
scas
adc
sub
sub
push
imul
andl
jg
mov
testb
cmp
mov
push
pop
movsl
mov
jnp
cli
sbbl
mov
cmp
push
jb
mov
loopne
xor
push
faddl
and
stos
add
outsl
cmp
bound
rolb
cltd
xchg
push
cld
ja
cmp
mov
pop
rclb
xor
add
sbb
dec
lods
ljmp
mov
int3
xchg
jb
jmp
aam
test
pop
ds
pop
out
mov
sub
mov
mov
inc
scas
cld
cmpb
pop
lret
sbb
scas
add
sub
cmc
cmc
mov
dec
fwait
icebp
jecxz
adc
mov
jne
repnz
mov
cli
scas
std
mov
loop
fmuls
mov
push
mov
lock
icebp
shrb
mov
sti
fwait
adc
mov
xor
cmpsb
xor
out
inc
push
cmpsb
mov
push
lcall
cwtl
cld
enter
cmp
ja
das
lcall
xchg
xlat
movsl
iret
add
fs
into
inc
testb
or
in
push
xor
xor
sub
iret
xchg
icebp
mov
lock
cmp
nop
sbb
sbb
adc
aaa
pop
stos
inc
inc
popf
cmpsb
inc
jne
iret
jecxz
shl
repz
pusha
out
movsl
inc
jp
aaa
test
test
loope
jg
adc
test
adc
orl
and
popf
dec
imul
and
into
aam
sub
xchg
nop
adc
stos
bnd
adc
cmp
mov
jl
jo
pop
cli
push
stos
stos
insb
sub
fadds
outsb
add
pop
rorl
cltd
sbb
iret
movl
xchg
push
inc
pop
sbb
xchg
jo
xchg
int
xchg
js
sbb
mov
bound
cwtl
idiv
xchg
call
push
mov
aaa
or
cli
xchg
data16
shll
sbb
fcomi
lret
andb
mov
mov
lcall
adc
jp
das
push
sbb
popl
push
mov
mov
add
enter
add
arpl
stos
xor
test
loop
out
hlt
mov
dec
add
cmpsb
shr
pop
sbb
sahf
pop
test
out
sub
jle
nop
and
push
insb
and
nop
xor
jbe
push
negl
imul
repnz
dec
js
iret
lods
aam
push
xor
es
push
jae
push
and
mov
pop
cmp
insb
insl
cmpb
dec
sbb
ret
mov
xchg
lret
dec
mov
mov
daa
mov
lret
cmp
sbb
mov
hlt
pop
cltd
cmp
adc
inc
fninit
or
add
jbe
or
stc
popf
jo
dec
and
mov
cmpsb
ret
jae
movsl
sub
add
xchg
stos
mov
popf
and
stc
nop
mov
dec
pop
dec
add
xchg
into
add
xor
fdivrs
cmp
mov
fxch
mov
jno
shlb
int3
arpl
adc
mov
popa
inc
push
andl
rcrb
mov
adc
jmp
inc
mov
pop
clc
xlat
js
adc
pop
pusha
stos
mov
jmp
jg
and
int3
mov
inc
mov
insl
jnp
pop
and
jge
and
inc
inc
and
inc
xchg
jo
lea
lea
test
lret
repz
jbe
jno
cwtl
xor
mov
fsubr
pop
xchg
sub
fdivl
clc
dec
pop
xchg
xchg
cli
xchg
mov
and
scas
movsl
mov
ret
out
mov
dec
loopne
adc
xorl
bound
insb
pop
mov
int
sub
mov
xchg
leave
out
xlat
mov
aam
inc
pop
mov
dec
insl
in
pop
hlt
mov
repnz
and
dec
int3
arpl
push
popf
push
mov
xor
fiadds
and
loopne,pn
imul
or
jecxz
pop
xchg
jb
or
movsl
insl
xlat
andb
adc
jae
cmp
jecxz
mov
mov
xchg
dec
sbb
xchg
push
fsubs
loop
and
mov
testl
xchg
les
dec
mov
inc
dec
leave
jmp
pusha
outsb
adc
mov
and
mov
or
xchg
xor
loop
sub
xchg
xor
sub
mov
movsb
repz
pop
outsb
adc
lds
out
shl
xchg
ret
hlt
mov
mov
cmp
popa
cmp
ds
ja
sbb
push
mov
dec
daa
lahf
pop
push
jae
add
data16
lea
adc
cwtl
sbb
mov
mov
dec
loope
int3
out
cmp
inc
enter
cmpsb
push
mov
mov
fdivl
pop
pop
test
jnp
fs
jbe
cwtl
aas
cwtl
cmp
popa
mov
jle
mov
ljmp
mov
mov
cmp
rorb
sahf
jecxz
sbb
cmp
cs
sbb
gs
push
addr16
loope
xor
outsl
sub
adc
insl
inc
ret
call
aas
hlt
mov
push
rcrl
shlb
add
sti
jge
movsb
cmp
ja
pop
out
cmp
jmp
into
push
in
fbstp
push
aaa
testb
ljmp
or
test
xlat
mov
xlat
jb
jecxz
push
jmp
orl
sub
pop
subb
add
int
inc
cmpsl
out
mov
ret
les
in
insl
push
inc
dec
dec
icebp
jns
sbb
lea
movsl
jno
out
push
adcl
xor
outsb
sub
mov
xor
bound
into
pop
mov
jmp
mov
lret
or
sbb
jg
cltd
jno
push
addb
add
std
add
or
in
dec
div
aam
test
int
enter
aas
pop
loopne
data16
shll
adc
mov
add
and
push
cltd
das
sub
jbe
cs
pop
pop
pop
pop
jne
pop
jmp
inc
in
call
xchg
into
cmc
dec
pop
das
aad
pop
nop
cld
lea
lods
inc
sub
movsb
in
xlat
cwtl
pop
in
scas
mov
insb
std
adcl
lock
test
add
xchg
fsubrl
mov
mov
pop
test
mov
out
lods
and
ret
cmp
jge
mov
mov
jle
shrl
inc
mov
fs
ss
scas
or
js
fldcw
mov
mov
mov
fistps
cmp
divb
fbstp
push
out
test
cmp
imul
jecxz
and
and
repz
into
push
jae
test
scas
lds
mov
cs
jo
mov
mov
in
aad
push
push
mov
jl
dec
scas
pop
adc
cmc
and
dec
xchg
adc
clc
into
xchg
decl
push
sti
and
mov
pop
mov
or
lds
in
xorl
mov
mov
inc
cli
hlt
pop
pop
hlt
mov
sbbb
icebp
ds
into
lahf
inc
add
out
daa
lock
or
out
jp
lret
mov
call
jmp
out
push
mov
jg
fsave
dec
pop
inc
mov
leave
call
iret
or
jmp
push
inc
xchg
sub
sahf
sub
or
jl
pop
pushf
ljmp
ficompl
addr16
lret
in
lahf
out
bound
lea
mov
sbb
mov
out
sub
repz
jns
inc
adc
xor
mov
sub
mov
adc
insb
orb
mov
addr16
mov
seta
lret
lock
lds
dec
into
mov
out
pop
mov
neg
push
inc
mov
addr16
pop
out
in
cmova
add
sbbb
mov
add
inc
pusha
dec
pushf
inc
push
xchg
jg
push
movsb
push
in
jecxz
addl
dec
mov
mov
push
push
test
std
and
pop
sbb
mov
cmp
mov
xlat
inc
jecxz
in
cltd
les
idivl
and
push
pop
push
dec
xor
sahf
out
dec
jmp
xorl
jns
cli
and
xor
inc
pop
mov
pop
push
push
idivb
js
mov
in
in
inc
xor
mov
mov
les
scas
pop
xchg
psraw
xor
xchg
aas
mov
hlt
out
adc
fwait
cmp
and
negl
icebp
cs
shll
or
bound
and
insl
push
das
ljmp
in
inc
xor
fisubrs
test
repz
mov
call
jne
fldcw
in
mov
inc
add
pushf
iret
mov
mov
push
push
fdivs
mov
xchg
mov
xchg
fs
in
jb
or
aas
test
cltd
movsl
xchg
sub
cmpsl
pop
inc
fs
vsubsd
push
cltd
dec
xchg
mov
mov
pusha
data16
mov
fisttpl
or
mov
xor
sub
imul
mov
cmp
je
cmpsl
xor
sti
jns
jp
data16
decw
notl
das
inc
push
cmp
dec
push
das
call
push
cs
lods
pop
andb
shlb
stc
fcomps
inc
hlt
push
jb
push
insb
out
int
mov
fidivs
adc
mov
mov
push
ds
addb
xchg
ja
jecxz
mov
xchg
repz
and
cmp
addr16
sbb
sti
add
or
hlt
cmp
mov
cmpsl
arpl
lds
test
mov
xor
sub
aas
sub
inc
mov
cmc
scas
sbb
test
js
fwait
sub
or
es
dec
mov
sub
aaa
push
xor
data16
add
cmpb
fcoml
dec
dec
js
xchg
sahf
xor
xlat
in
stos
je
fstpl
notb
outsl
imul
cmpsl
add
loope
jle
in
adc
mov
mov
dec
xchg
rcll
push
insl
dec
pusha
dec
popa
mov
loopne
sub
pop
iret
std
mov
fs
jge
outsl
scas
call
sbb
lods
in
dec
sub
xlat
shrl
mov
js
iret
xchg
jo
dec
testl
mov
arpl
sub
stos
inc
hlt
add
dec
cltd
or
fidivs
pop
pop
push
jge
data16
sahf
sahf
dec
rolb
or
stos
lods
mov
mov
pop
in
in
adc
or
xor
jbe
add
scas
adc
xchg
cs
leave
lods
lods
icebp
push
mov
xchg
pushf
lods
and
insl
sub
hlt
push
stc
mov
pop
cmp
push
jno
arpl
lahf
imul
imul
ret
mov
fisttpl
lea
push
xchg
scas
es
push
movsl
fcompl
jns
sahf
js
repnz
dec
jns
insb
inc
imul
icebp
mov
iret
outsb
push
push
std
cmp
xor
loop
mov
int3
jecxz
jnp
cmpb
mov
xchg
sbb
lahf
mov
xchg
mov
js
xchg
jecxz
loope
pop
and
mov
inc
inc
pop
icebp
jmp
adc
mov
mov
xor
mov
xor
or
ja
or
jmp
ret
or
mov
imul
xchg
test
and
mov
adc
jle
sbb
pop
mov
adc
pop
sbb
cmp
cwtl
stos
int3
les
mov
add
adc
mov
orl
or
mov
movsb
aaa
xchg
push
inc
les
arpl
push
or
xchg
jmp
and
lods
adc
insl
and
pop
push
mov
loope
je
cmpsl
and
jge
sti
xor
iret
xor
leave
inc
xchg
jns
and
and
xchg
in
jbe
mov
daa
mov
in
hlt
push
out
ret
jl
mov
sti
xor
mov
fldt
mov
lds
inc
and
stc
es
nop
lcall
int3
mov
int3
neg
or
push
sub
push
xchg
pop
rol
jae
jns
gs
rcrb
das
xor
jle
jnp
adc
adc
out
mov
sub
cmpsb
insl
arpl
xchg
xor
icebp
adc
sub
xor
push
lds
loope
out
adc
mov
insb
mov
in
xor
inc
cmp
orl
ljmp
fmulp
rcll
sahf
push
push
jg
bound
stc
cmp
pslld
xchg
fisubrs
ljmp
jp
data16
sbb
cmc
arpl
test
lods
xchg
addr16
inc
ds
bnd
js
lods
fisubrl
jmp
push
jns
or
test
inc
scas
std
xor
sub
or
in
imul
or
pop
mov
test
pop
aas
lea
or
mov
mov
mov
aas
fsubr
mov
shrl
push
cmc
loopne
hlt
icebp
mov
sbb
loopne
sbb
mov
pop
cmc
or
sbb
les
jge
mov
mov
in
aaa
xchg
adc
iret
cld
pop
cs
lcall
sbb
aas
jle
cmp
push
iret
sbb
loop
in
pop
jb
dec
dec
sbb
rcrl
fstpt
in
mov
pop
or
cld
mov
inc
fimull
jp
lock
popa
clc
jl
and
push
cli
xchg
jbe
pop
in
lcall
pop
jge
pusha
jle
out
cld
scas
push
jo
je
sti
sahf
xchg
push
mov
xchg
fs
dec
inc
mov
add
es
rorb
loope
insl
imul
inc
insb
xlat
cmp
js
loop
jp
sti
decb
pop
jecxz
dec
test
bound
or
dec
subl
cwtl
shll
leave
pop
ret
shrb
enter
stos
arpl
jno,pt
push
jbe
inc
xchg
scas
and
push
add
pop
sub
and
gs
sub
repnz
jecxz
xlat
xchg
xor
int
sbb
sbb
lea
and
mov
repz
xor
gs
iret
adc
pushf
in
or
lcall
out
adc
lock
gs
adc
lret
in
push
fwait
mov
mov
aaa
inc
enter
outsl
jge
add
mov
push
das
ja
inc
dec
test
icebp
out
enter
dec
out
fdivl
jbe
aad
pushf
or
test
pop
mov
leave
xor
pusha
jne
jmp
cmp
xor
pop
sti
dec
shlb
push
in
push
jle
and
daa
jmp
fiadds
jg
fnstcw
lea
out
adc
aad
cmovl
ljmp
fdivrl
sub
aam
push
or
js
test
jb
xlat
mov
xchg
cli
mov
ja
jne
cmc
das
ret
clc
dec
lret
sarb
xor
sub
or
and
mov
mov
or
jl
push
jns
mov
mov
sti
add
xor
sbb
sub
mov
inc
dec
mov
mov
mov
test
or
xchg
add
cmp
movsl
sbb
jecxz
aaa
push
ret
icebp
jle
mov
enter
fidivrl
pop
or
ret
cmp
adc
imul
shlb
and
jbe
je
dec
into
fs
ljmp
jecxz
lcall
out
stos
aas
inc
pushf
or
push
repz
arpl
sbb
xor
xor
push
in
in
orl
jo
cmp
push
imul
inc
idivb
sub
lock
idivl
cli
and
dec
xlat
inc
pop
subl
cmpsl
adc
add
dec
xchg
pusha
or
cli
xchg
xor
insl
in
std
lods
loope
fldcw
xor
ja
clc
pusha
inc
add
dec
pop
push
scas
xchg
cmpsl
mov
and
pushf
sbb
jbe
loopne
lret
fists
sahf
pop
dec
popa
clc
mov
fstpt
push
fildl
pop
loopne
enter
pop
sub
mov
inc
insl
mov
fcompl
and
nop
push
sub
imul
and
fisttps
ret
aad
fsubrl
jg
lret
add
fs
fwait
or
inc
in
nop
cmp
in
lea
sub
fisttpll
and
pop
push
and
std
jne
inc
pop
daa
xchg
dec
lahf
adc
dec
scas
out
pushl
loope,pt
jle
jg
mov
movsb
ret
pop
imul
in
push
aaa
mov
push
lcall
aad
imul
add
add
js
push
jns
cmpsl
ljmp
jb
dec
mov
aaa
ret
cmc
push
pop
inc
mov
andb
sub
mov
fdivl
jo
cs
dec
cli
frstor
iret
data16
push
inc
lcall
xchg
mov
jo
data16
fstl
ss
pop
test
sbbl
mov
cli
cmpsb
out
mov
pushf
ss
movsl
stc
sbb
ljmp
mov
push
mov
loop
pop
push
imull
insl
rcrb
ds
scas
xlat
addr16
shlb
or
sbbl
imul
inc
push
add
inc
out
paddw
cmpsl
xor
xchg
dec
adc
or
push
sbb
mov
ss
fcomip
wbinvd
lret
jno
into
gs
clc
mov
mov
shll
nop
or
cli
insb
jne
popf
sbb
fdiv
out
mov
pop
fwait
out
ret
scas
xor
push
xor
aad
adc
cmp
dec
cltd
pop
js
js
rcrb
push
clc
push
cmc
movsb
xor
or
ret
jns
js
mov
jge
push
pusha
push
xlat
or
pop
loope
mov
pop
lock
aam
mov
scas
pop
push
roll
call
test
jp
stos
insl
aaa
cmpsb
mov
jle
js
push
cwtl
xor
mov
lahf
insl
mov
or
fisttpl
scas
shll
sub
dec
or
adcb
and
fisttpl
insb
dec
jno
and
shlb
ret
clc
mov
rcl
in
push
jecxz
ljmp
jo
insb
inc
ss
movb
xchg
xor
in
into
cmpsb
xchg
or
cli
popa
inc
and
call
add
lods
hlt
filds
mov
arpl
aam
ja
scas
cwtl
mov
sti
xchg
sub
pop
sbb
movsb
lret
out
xchg
adc
xor
lock
mov
cmp
jge
and
xor
xchg
add
lret
test
mov
clc
enter
push
cmpsl
popf
notl
jge
fsubr
cld
pusha
lods
popa
mov
and
add
sub
scas
pop
ds
stos
push
stc
addb
lret
es
pop
ret
in
mov
pop
test
movsb
les
pop
aas
outsb
out
mov
movsl
xor
mov
jo
out
jp
dec
and
add
add
add
sbb
sahf
mov
ret
fbld
pushf
cli
gs
push
inc
mov
pop
or
shrb
ss
incl
or
loopne
lahf
data16
mov
pop
test
inc
cmpsl
jns
fsubp
push
mov
sub
sub
icebp
mov
cs
cli
push
pop
xlat
jmp
mov
and
or
leave
xlat
mov
dec
mov
daa
dec
jecxz
iret
adc
mov
push
or
mov
icebp
into
sbb
push
fcmovnb
cmp
lds
stc
and
roll
fxch
pop
idiv
lock
pop
xchg
repnz
push
cmp
lds
addb
outsb
test
cltd
cmp
lret
jp
pop
jg
mov
push
movsl
adc
insb
ljmp
pop
jmp
mov
mov
inc
xlat
cltd
push
mov
lods
fs
add
pop
jle
in
scas
jae
jne
cmp
lods
adc
sbb
movsl
jb
pop
pop
dec
adc
jns
jns
int3
xor
mov
add
clc
lods
outsl
push
ljmp
and
xchg
lahf
mov
leave
in
jnp
cmpb
in
decb
xchg
jnp
add
icebp
adc
and
xor
add
xchg
xor
imul
sbb
test
adc
cmpsb
js
pusha
popa
jbe
cmp
dec
loopne
repz
frstor
test
test
dec
mov
fwait
roll
mov
mov
cmp
icebp
mov
cmp
test
imul
rolb
out
mov
add
jmp
add
in
test
enter
sbb
push
sbb
inc
add
lret
stos
sahf
xor
cmpb
cmp
outsl
out
jns
mov
inc
mov
mov
mov
imul
or
sarl
daa
mov
nop
hlt
cmp
and
mov
push
js
cmpsb
push
arpl
out
jl
int3
lock
int3
or
inc
mov
fidivs
fcom
decb
adc
loopne
add
std
repnz
jne
mov
jg
xor
pushf
test
xchg
popa
inc
test
jo
pop
mov
inc
arpl
xor
addr16
fisttpl
cli
xchg
jg
jge
repnz
dec
sbb
cs
or
inc
imul
test
test
repnz
adc
jae
inc
jecxz
xor
loopne
jl
aas
shlb
shll
inc
fiadds
add
mov
sbb
ds
xchg
sbb
push
pop
ret
sub
test
adc
fstl
pusha
out
sbb
mov
mov
repz
or
jg
xchg
in
and
jbe
sub
sub
pop
dec
loop
data16
xor
repnz
push
cs
pop
cltd
int
lret
outsl
lea
mov
push
pop
dec
add
hlt
xor
mov
enter
sti
and
and
adc
add
repz
outsl
push
mov
mov
lods
xchg
inc
ffree
iret
jns
dec
les
cmp
and
cmpsb
sbb
in
mov
mov
inc
insb
sar
leave
test
mov
dec
out
shlb
sbb
into
sbb
mov
mov
in
shr
je
clc
fsubs
push
xchg
cld
int
das
push
mov
psubd
icebp
mov
sbb
arpl
mov
push
imul
or
cmp
std
add
rcrl
xor
test
les
push
adc
scas
push
push
in
sub
and
sub
sbb
lds
mov
inc
pop
inc
jne
notl
in
sar
push
cmp
decl
ss
mov
cmp
imul
pop
icebp
popa
stos
aaa
jne
pop
ss
aad
mov
ss
mov
fstpl
mov
cmpsl
push
not
lret
mov
mov
sbb
ja
add
inc
fcmove
les
clc
inc
sarl
xchg
ffree
jae
test
push
adc
push
in
out
outsb
lahf
test
insb
jne
mov
ret
inc
shrd
iret
fisttpl
inc
aam
ljmp
aam
fdivs
aaa
test
mov
xchg
outsb
cld
jle
cmp
xor
jl
insl
cmp
jp
movsb
out
pop
sub
es
je
mov
push
mov
cmp
mov
add
fmull
mov
mov
aas
rorb
xchg
fdivs
sarb
adcb
out
or
xlat
aaa
push
adc
mov
xor
out
or
mov
or
roll
jecxz
rclb
cltd
and
sbb
stc
push
sbb
cwtl
fdivr
notl
and
cmp
out
lea
jle
xor
mov
fiadds
aam
mov
leave
pop
dec
mov
aad
push
or
shl
and
test
or
add
jnp
sarb
pop
mov
mov
mov
jbe
aam
push
xchg
aaa
pop
dec
adc
mov
aad
or
push
fcomp
mov
pop
negb
mov
sbb
push
out
sub
movl
aaa
xor
pop
arpl
lds
into
pop
xor
adc
dec
mov
mov
fdivrl
insl
mov
sbb
pop
add
es
cwtl
cld
pop
scas
out
mov
xchg
addb
sub
mov
mov
jg
cmp
adc
pop
sahf
jb
fnstenv
movsl
into
add
push
dec
cmp
jge
adc
and
mov
sub
xchg
lods
mov
shl
jg
jno
push
jmp
mov
jb
ret
dec
addr16
loope
daa
push
xor
pop
fs
scas
inc
out
mov
dec
mov
aad
lea
fisttpl
xchg
nop
jbe
xchg
sub
xchg
sbb
sbb
arpl
pop
clc
adc
bound
push
data16
sub
or
pop
jp
sbb
xor
push
push
lret
pop
xor
call
hlt
inc
iret
push
pushf
xor
mov
push
mov
aad
and
pop
add
push
bound
mov
add
cltd
add
push
iret
sahf
xor
pop
aas
jecxz
test
out
pop
hlt
or
lods
xchg
jecxz
lds
add
out
and
mov
or
out
daa
add
lahf
jmp
or
push
in
es
fstl
adc
xor
sti
frstor
jg
xchg
sahf
mov
pop
inc
pop
cmc
in
jp
inc
incb
pop
das
pop
pop
fildl
mov
stc
mov
lcall
xlat
imul
subl
shrl
ljmp
cmp
stc
jo
dec
xor
jae
aam
cmp
andl
sub
mov
ds
and
outsb
dec
ficoml
xor
repz
push
test
push
in
add
cli
and
adc
inc
repz
mov
cmpsb
cmp
and
adc
andl
mov
cli
add
test
movsl
std
xchg
mov
divb
test
mov
aad
popa
or
or
test
mov
ljmp
pushf
loopne
pop
mov
int
push
mov
sub
xchg
jp
scas
pop
xchg
out
mov
iret
cmp
sub
cmpsl
clc
mov
mov
and
jo
adc
inc
in
jmp
rcrb
jb
popa
jns
into
mov
pop
inc
inc
shll
shll
jp
lods
cmp
xor
out
add
das
addr16
das
out
aaa
pop
xchg
sub
add
pop
jecxz
add
pop
loopne
mov
ss
repnz
enter
push
in
lret
mov
arpl
mov
dec
mov
adc
pop
xchg
nop
jns
jns
mov
push
jp
mov
xlat
fs
dec
lret
int
icebp
adc
aad
stos
xchg
int3
mov
jno
les
mov
aaa
push
or
aas
mov
pop
mov
daa
aaa
push
xor
sub
shlb
mov
add
push
jae
subl
jge
into
dec
fistps
push
jl
pushf
xchg
fucomi
ret
lret
sbb
sbb
and
ret
mov
notl
and
sbb
es
fdivs
and
les
test
fidivrl
sub
cpuid
lret
pop
mov
dec
mov
lahf
pop
rclb
insb
jb
jnp
int
inc
add
aaa
lret
hlt
and
imul
and
mov
jle
in
std
push
inc
loop
jo
adc
test
nop
out
sub
mov
test
inc
mov
inc
add
pop
test
add
ja
jle
pop
sbb
push
cld
imul
and
jns
xchg
mov
scas
fdivrp
mov
test
cmp
addr16
aaa
fadd
fldcw
out
data16
jae
lods
cmp
mov
pop
shll
sub
les
clc
sbb
or
jmp
loop
enter
stos
dec
sahf
push
nop
fstpt
adc
aaa
jae
jno
dec
dec
add
cmp
dec
pop
leave
xchg
mov
andb
ljmp
int
mov
ss
jmp
in
pop
push
ret
push
and
pop
inc
mov
push
cmp
lea
jae
jle
mov
dec
pushf
xor
testl
hlt
sub
outsb
pop
adc
lock
iret
pop
mov
mov
push
out
or
and
je
cmpsb
pop
data16
pop
push
out
mov
mov
ds
dec
out
loop
pop
adc
or
cmp
jecxz
push
andl
mov
bound
cmp
push
imul
out
add
pop
cmp
shrl
cmp
dec
push
dec
cmp
imul
mov
fsts
out
hlt
test
scas
inc
dec
mov
mov
and
and
sbb
inc
and
test
or
dec
lret
mov
mov
shll
adc
pop
adc
sahf
scas
and
pop
cmc
mov
xor
sarl
sub
sbb
xor
sub
sub
rorb
loopne
xor
js
push
pop
or
pop
or
mov
or
ror
stos
adc
out
clc
mov
fidivrl
in
fisubs
xor
shl
adc
pop
inc
xchg
xlat
aam
or
push
rclb
pop
imul
repnz
test
pop
inc
sub
jmp
or
jo
nop
mov
sbb
inc
in
sub
push
or
add
xchg
imul
adc
psrad
jle
xchg
icebp
add
mov
xchg
and
ret
setae
call
mov
lea
out
into
mov
jne
sbb
push
jle
repz
pop
repnz
rcl
fmull
add
int
pop
outsl
into
in
out
xor
lcall
dec
subl
mov
xchg
ret
add
icebp
rcrb
fldl
out
mov
sub
or
test
ja
ret
jnp
inc
adc
insl
punpckhwd
testb
mov
xor
push
or
scas
cmp
sbb
jmp
add
or
pop
and
scas
mov
sbb
inc
nop
fsubl
daa
call
push
xchg
sbb
sub
mov
jle
inc
adc
ljmp
jecxz
hlt
stos
push
adc
repnz
mov
inc
add
push
mov
push
mov
lret
into
movsl
sbb
and
xchg
mov
mov
shl
out
mov
popa
lahf
aad
push
push
cli
jo
stos
and
aam
xchg
dec
aad
mov
lock
rcrb
fs
sbb
mov
cmpsb
push
addb
ja
cld
mov
sbb
jae
push
push
lods
test
mov
ja
lea
adc
jmp
pop
lret
in
or
mov
mov
and
adc
adc
ret
adc
notb
mov
stc
ret
pop
mov
je
xlat
cmp
frstor
lea
xchg
sti
add
std
insl
jno
out
das
mov
cmp
adc
in
popf
sub
pop
roll
or
cmp
loop
jg
popf
inc
pusha
adc
not
jecxz
sbb
pop
cmp
cmpsl
lock
mov
add
push
mov
ret
xlat
cmp
push
imul
sarl
popf
dec
stc
popf
repz
movsl
sbb
movsl
jl
mov
xchg
mov
loope
lea
das
mov
mov
sub
push
ror
arpl
cs
stc
lods
fcmovbe
add
shr
cmc
pushf
gs
xchg
jb
sub
sub
jg
movsb
js
into
pop
testl
xor
es
imul
jecxz
ljmp
rcr
dec
adc
jbe
stos
add
loope
test
cltd
data16
js
aam
pop
or
ret
mov
lea
inc
arpl
mov
xchg
mov
dec
addb
mov
btr
out
pushf
sti
inc
pop
es
int
loopne
jns
jns
outsb
inc
and
jp
subb
jno
stc
lock
ret
jle
jns
in
aam
jns
in
sub
mov
ret
and
cli
add
aad
dec
sbb
mov
jo
mov
cwtl
pusha
mov
enter
cmp
mov
int3
jns
pop
icebp
xchg
adc
stc
je
mov
jecxz
xor
jg
mov
dec
push
jp,pt
rorb
inc
jbe
mov
fisttpll
add
stos
inc
ret
and
dec
int
mov
xchg
sub
dec
mov
in
ds
inc
mov
mov
sahf
pushf
sub
cmp
pushf
pusha
gs
push
int
sbb
in
stos
sbb
dec
dec
loop
fnsave
mov
stos
fwait
cmp
mov
mov
push
pop
es
mov
mov
negb
les
pop
mov
imul
push
ret
shl
cwtl
ret
aam
inc
ret
lods
repz
je
adc
xchg
aas
pop
rorl
pushl
add
std
jns
xchg
xchg
lods
decb
xchg
mov
hlt
das
lock
lock
lea
stos
stc
dec
push
gs
lahf
push
addr16
test
xorl
dec
add
cmp
std
push
roll
push
push
sbb
fwait
stc
je
rep
fcmovnu
jne
jo
jge
and
xchg
movsb
sbb
dec
lds
jmp
insl
xlat
mov
dec
push
mov
cmp
lods
fwait
xor
mov
mov
pop
addr16
hlt
pushf
stos
dec
mov
adc
lock
adc
fistps
aam
jne,pt
sub
dec
ret
loop
sub
iret
jg
jne
mov
stc
pop
inc
in
fs
fidivl
jne
iret
cmpsb
sar
pop
test
mov
jl
mov
inc
push
push
push
aam
jns
inc
add
push
cmp
test
xorb
adc
inc
xlat
mov
mov
in
stos
js
out
sub
jbe
mov
rcrb
mov
mov
push
mov
in
sub
jns
mov
push
dec
sbb
xor
pop
inc
in
adc
imul
push
dec
xchg
mov
fadds
pop
jns
jb
push
ja
xchg
pusha
and
push
cmpb
fcomp
xorb
nop
pop
stos
add
test
cmp
inc
jb
dec
fcomps
xchg
lcall
sbbl
pushf
xor
rcr
jp
into
dec
shll
pop
imul
adc
cmp
lea
je
push
loop
xchg
stos
rcl
jns
xchg
inc
fisubs
sbb
dec
mov
push
cltd
mov
ret
xor
dec
lret
add
test
push
pop
hlt
or
out
push
mov
mov
xor
inc
fsubrs
jb
ds
stc
dec
jp
popa
scas
daa
movsl
push
repnz
enter
xchg
mov
jle
imul
xor
cmp
cmp
nop
daa
and
sbb
inc
xchg
ljmp
pusha
sub
xor
adc
inc
push
popf
push
dec
ss
push
adc
es
add
sub
inc
ds
sbb
ljmp
cmp
xor
xchg
outsb
jp
push
mov
add
in
leave
mov
dec
inc
aas
mov
clc
xor
lcall
pop
sub
pop
xor
es
push
or
cmp
xor
fcompl
mov
jo
inc
fnsave
testl
pop
frstor
fucomp
xchg
inc
in
push
call
lret
in
gs
cmp
imul
mov
cld
xchg
ljmp
push
lret
jbe
jae
arpl
dec
adc
mov
inc
or
stos
fisubl
or
js
incl
or
xchg
icebp
scas
inc
ljmp
scas
arpl
cmp
or
mov
mov
mov
pusha
fldl
dec
mov
mov
or
push
scas
cwtl
sub
mov
call
cmp
dec
xor
ds
adc
push
js
xchg
adc
ljmp
cltd
adc
js
dec
and
mov
pop
hlt
iret
pop
movsl
hlt
mov
jnp
jnp
add
pop
mov
adc
loope
xor
jno
xchg
sub
sub
jecxz
lock
repnz
push
sub
mov
lods
insl
cs
xor
mov
push
jb
jno
jno
and
clc
sahf
call
or
ljmp
test
inc
js
jl
mov
arpl
rorb
negl
sub
mov
insb
mov
xorl
jp
dec
adc
mov
movsb
xchg
mov
cld
or
add
cmp
xchg
insl
js
adc
adc
adc
sbb
xchg
loopne
sub
ljmp
inc
cld
sbb
lock
adc
rep
idivw
dec
mov
dec
outsb
mov
sbb
adc
cld
icebp
pop
es
push
ss
test
inc
notl
lahf
sub
fs
test
out
inc
sub
lods
bound
jae
es
or
in
jmp
ret
dec
jae
push
and
sbb
xchg
sbb
mov
iret
jge
xor
pop
sbb
ret
jge
jb
jecxz
jmp
sbb
cmp
mov
add
lea
jno
push
int
fdivl
insb
and
sub
addl
mov
ljmp
ret
inc
push
outsb
fwait
pop
cmp
popa
mov
arpl
mov
jecxz
enter
int
and
into
fnstenv
cld
mov
cmc
cwtl
jne
out
xchg
add
inc
jge
xor
jnp
push
scas
sbb
sub
lret
xorl
xchg
dec
fistl
pop
add
adc
sbb
mov
xor
mov
dec
push
jl
test
or
jle
insb
stos
nop
test
popf
lods
movsb
xor
lret
jmp
and
popa
add
jmp
pop
movups
lret
sbb
imul
xor
repz
lea
push
jecxz
sbb
mov
push
xchg
repz
or
xor
outsl
mov
sub
sbb
push
xor
pop
test
movsl
lds
and
outsl
movsl
mov
mov
sbb
insb
or
loopne
and
jns
jle
sbb
push
sub
mov
push
mov
pop
cmpsb
dec
add
pop
imul
cmp
cmpsl
test
in
sti
fbstp
aad
xchg
push
jne
mov
jne
popa
or
push
out
jp
push
and
or
cmpsb
push
stos
out
lret
xor
scas
lods
mov
cmp
js
daa
pop
mov
mov
sbb
stc
int3
dec
clc
push
xor
xchg
mov
sbb
test
push
xor
shlb
es
leave
mov
pop
dec
mov
shl
mov
std
mov
cmp
push
jb
les
xor
cmp
mov
add
xor
lcall
and
sub
push
fsts
push
inc
je
ss
lcall
jge
mov
xchg
xrelease
dec
and
inc
call
out
shlb
cwtl
sbb
mov
inc
fnsave
data16
and
and
dec
jbe
push
int
rclb
mov
les
mov
jne
cmp
ret
insl
add
pushf
fisttpll
push
out
pop
jmp
sarb
mov
jne
dec
mov
sbb
push
in
ficoms
inc
in
mov
add
int
mov
adcb
loop
imul
popf
adc
adc
mov
mov
rcl
dec
jmp
mov
pop
fstpt
dec
out
jae
adc
fdiv
pop
arpl
jae
xor
xchg
outsb
jno
lret
jbe
scas
and
cs
sahf
xor
mov
movsl
lds
loop
lahf
in
lss
cmp
imul
cs
push
lock
push
fsubr
dec
push
or
filds
mov
cs
mov
pop
lods
jo
mov
jecxz
test
jle
and
fwait
or
mov
xchg
adc
out
scas
inc
push
mov
int
hlt
push
sbb
daa
mov
gs
adc
adc
inc
nop
mov
lock
cmp
cwtl
call
xchg
stos
sub
stos
add
dec
cld
mov
pushf
pop
cltd
cmp
add
call
push
pop
xor
cld
push
test
pop
ds
dec
pop
imulb
xor
lds
xchg
mov
outsl
popf
imul
xchg
mov
cmp
jmp
subl
insl
pop
mov
pop
lret
sti
pop
imul
stc
sahf
aad
enter
call
repz
sub
hlt
pop
mov
cwtl
jg
cltd
jle
scas
cmp
mov
insb
dec
loopne
mov
int
int3
ss
add
jecxz
out
out
lcall
lret
jge
mov
sahf
aas
ret
sbb
or
cs
imul
xor
in
cld
testl
xor
loopne
in
adc
and
fadds
jnp
push
jecxz
inc
inc
add
push
mov
add
dec
mov
mov
mov
pushf
out
pop
icebp
je
in
sbb
xchg
add
icebp
shlb
xchg
addr16
push
cwtl
cmpsl
je
repnz
fidivrl
loope
andl
out
adcl
mov
out
shll
mov
mov
lahf
adc
add
lret
daa
imul
jne
lret
mov
xchg
daa
bound
or
dec
andb
push
lahf
push
mov
pop
aaa
notb
icebp
or
in
mov
add
insb
shl
mov
stos
mov
adc
and
test
lods
xchg
insl
daa
mov
xchg
pop
enter
sahf
jg
shlb
sub
push
push
push
int3
in
mov
mov
add
fisubs
inc
outsb
or
xor
fidivl
daa
add
daa
cs
mov
inc
push
cmc
repnz
aas
sbb
jns
popf
jle
xchg
shlb
cmp
xlat
lods
xchg
adc
mov
inc
cltd
add
xchg
das
xor
xchg
inc
pop
mov
jne
add
cltd
ret
cwtl
sub
mov
mov
imul
pop
pop
inc
mov
xchg
dec
mov
push
dec
pop
inc
imul
adc
mov
in
enter
dec
cs
imul
pop
cmp
lcall
mov
lods
stos
dec
dec
cmp
pop
fisubl
sahf
repnz
xchg
mov
sbb
mov
imul
push
scas
inc
xchg
mov
cltd
test
and
popa
pop
mov
mov
push
decb
stc
push
out
sub
pop
outsb
int
jl
fists
jns
mov
push
lret
inc
mov
xchg
fwait
cld
sbb
xor
ds
movsl
pop
mov
xchg
repnz
fadds
lcall
sub
xlat
out
or
jnp
xchg
je
enter
js
add
enter
jmp
ret
push
ljmp
call
xor
mov
cmp
decb
stc
fcoms
jecxz
pop
adc
inc
scas
jle
add
data16
out
std
cltd
inc
adc
sbb
out
add
mov
pushf
mov
pop
sbb
mov
into
dec
in
jno
and
insb
jle
xchg
cmc
adcb
mov
lahf
mov
fdivl
ljmp
cmp
int
xchg
cmp
scas
cmp
cmp
adc
xchg
pop
imul
and
xchg
inc
and
cmp
clc
inc
and
mov
adc
fs
in
jns
rcll
mov
sbb
lret
hlt
iret
mov
cmp
inc
dec
lods
jge
pop
sub
add
add
push
or
js
fnstcw
loopne
lods
xchg
sub
pop
out
sub
mov
add
repnz
notl
pop
cmpsl
out
sub
out
mov
in
xor
push
ja
xchg
inc
jno
jne
jb
or
cld
push
ficomps
out
hlt
fcompl
test
pop
shl
test
ret
pop
xor
inc
pop
push
ljmp
std
std
mov
arpl
in
das
test
xor
jo
xor
adc
fwait
sahf
jp
dec
in
imul
pop
jbe
mov
cld
lret
popa
xor
xchg
xor
xchg
jp
xchg
pusha
loopne
push
inc
inc
mov
xor
pop
pop
sahf
nop
dec
dec
pop
mov
and
pop
pop
cli
push
adc
test
ljmp
mov
cmp
daa
in
xchg
rcrl
push
add
or
cmc
lds
aas
pop
add
in
cs
sub
das
cmp
xor
pop
cwtl
cmc
aam
mov
cwtl
jg
les
adc
jae
mov
jp
test
lret
xor
iret
dec
pop
insl
js
out
rclb
jp
movsl
icebp
or
fstps
mov
inc
pop
jno
fidivrl
or
std
sub
mov
in
sbb
cld
outsb
rorl
xchg
divl
mov
dec
xor
shrl
lds
jg
push
adc
pop
adc
out
loop
in
ja
inc
gs
inc
jp
in
ss
fistpl
std
and
addr16
xchg
push
or
aas
add
xor
fwait
push
mov
popf
push
shll
fimuls
dec
and
movsl
bound
push
icebp
mov
data16
popf
jecxz
and
mov
rcll
lcall
test
mov
add
sahf
adc
out
insb
push
arpl
inc
movsl
dec
scas
adc
or
push
jne
es
stos
sub
mov
and
pop
data16
into
xchg
xchg
pop
loopne
push
push
out
adc
sub
fisubs
shlb
xor
jg
mov
jge
outsb
movsl
addr16
adc
adc
and
nop
pop
sbb
pop
mov
test
sbb
aad
sub
gs
push
fwait
clc
cmpl
and
lcall
inc
insb
sub
stos
data16
push
inc
mov
jge
jg
sub
aas
imul
xchg
das
aad
shl
sbb
dec
xchg
shll
aaa
xchg
rorl
mulb
out
test
add
adc
lock
dec
sub
call
mov
and
outsl
pop
inc
inc
fnsave
push
popf
lahf
pop
cmp
jp
in
mov
gs
inc
stos
aam
xchg
lods
lret
orb
sub
leave
sbb
push
cmc
arpl
popf
repnz
cmpsl
xor
or
test
jmp
pop
xor
lret
dec
cmpsb
cmpsb
les
fstpl
sub
xor
mov
xor
fcmovnb
repz
inc
leave
cltd
mov
mov
push
mov
sbb
mov
sahf
out
adc
test
sbb
mov
add
packssdw
lahf
dec
and
bound
cmp
push
push
sbb
xchg
in
outsb
jl
insl
rcrb
sub
pop
dec
loopne
es
fdivrp
add
cs
xor
inc
mov
repz
sub
and
or
decl
stc
lds
adc
ret
out
aaa
pop
repnz
andb
rcl
int3
popf
pop
repz
icebp
enter
out
or
clc
mov
jmp
adc
lcall
add
addb
push
xchg
test
jne
mov
push
add
enter
adc
popa
mov
mov
mov
mov
mov
adc
mov
clc
iret
in
lods
jbe
ljmp
jo
and
pop
push
sbb
xlat
insl
and
push
jecxz
cmpl
add
shr
jmp
and
loopne
mov
xchg
gs
mov
cmp
ret
add
lahf
push
push
sti
pop
les
out
enter
jo
cmpsb
sbb
lret
scas
xchg
jno
stos
jg
ror
mov
mov
mov
adc
inc
xor
xchg
jp
int
xchg
ret
mov
subl
imul
shrl
wbinvd
mov
in
dec
adc
lock
fs
pop
jb
xchg
sbb
aas
sbb
int
popf
mov
dec
or
daa
stc
or
sbbl
and
mov
call
mov
outsl
int
lods
popa
shll
push
sbb
inc
out
dec
dec
in
mov
out
jecxz
add
add
push
push
bound
lds
fs
inc
mov
mov
push
or
int
jp
and
movsb
push
mov
sub
out
cwtl
jb
dec
xor
sbb
stc
inc
and
push
inc
push
lods
xchg
and
xchg
or
inc
jecxz
mov
movsl
push
inc
push
add
lret
cld
test
iret
pushf
sbb
or
lds
sub
adc
mov
ljmp
fsubp
push
xor
ret
mov
aam
clc
enter
ja
inc
cs
cmp
push
push
aad
ss
xchg
mov
inc
in
movsl
dec
cli
mov
mov
fisttps
inc
dec
out
int
test
lock
ja
xor
adc
lds
adc
xchg
add
jecxz
xor
pop
sti
cmp
jne
add
jge
das
jecxz
cld
outsl
jmp
jecxz
push
cmpsb
movaps
js
xchg
cmp
fucom
sbbl
cmp
movsb
repnz
fsubl
andl
ret
add
sbb
pop
or
gs
sub
dec
add
test
or
data16
dec
in
and
stos
xchg
xchg
gs
dec
in
dec
xor
aas
sub
dec
rol
xor
mov
sub
push
and
dec
dec
dec
std
das
in
dec
clc
cmp
pop
push
adc
jo
ss
js
fsubs
or
nop
daa
mov
aaa
cmp
cmp
pop
pop
mov
dec
mov
pop
xchg
sub
pop
cmc
decl
nop
ds
rclb
inc
lds
fdivl
jns
dec
mov
dec
out
cmp
xchg
aad
mov
dec
insb
lret
repz
scas
cld
iret
out
push
mov
jecxz
data16
ror
mov
and
hlt
ja
lea
paddsw
lea
push
movsl
ret
add
loope
push
jle
hlt
jo
cmpsl
ds
xchg
jnp
lahf
add
jno
pop
xchg
or
in
jnp
lahf
ss
loop
jnp
popa
clc
fwait
pushf
add
stc
jle
mov
test
sub
pop
lock
aaa
push
mov
cli
mov
inc
lods
sub
mov
jl
ret
cmp
loope
sub
xchg
adc
cmp
fcomps
cmpl
mov
mov
fsubrs
lret
pop
idiv
insb
insl
add
or
cmpsb
enter
jmp
ds
sub
loop
push
mov
add
outsb
inc
fcomps
xchg
xchg
sub
xor
jno
jmp
clc
in
xor
cmc
push
xchg
adc
or
test
pop
in
or
sub
jp
subl
sub
add
stos
inc
inc
or
leave
pusha
xchg
pop
push
mov
add
pusha
push
pop
mov
cmpl
nop
enter
popf
and
dec
out
aas
sbb
ljmp
imul
popf
jl
shrb
iret
out
add
shrl
or
cmp
out
xchg
kmovb
mov
sbbl
or
mov
xchg
mov
pop
imulb
test
adc
xlat
int
add
xor
jb
inc
xchg
jae
stc
nop
mov
movsl
cmp
shr
xchg
daa
or
push
stos
lahf
out
xchg
lret
dec
loopne
dec
shrl
movsb
jnp
fxch
ja
add
xorb
jae
stos
dec
in
aam
ja
inc
jno
jbe
or
rcr
fcmovnb
pop
or
int3
jne
mov
mov
fsts
mov
dec
test
ret
xor
cmp
mov
inc
test
mov
cmovs
jle
test
inc
fstp
mov
jl,pn
add
fisttpll
movsl
cmovle
jl
cmpsl
pop
scas
aad
cmp
adc
cltd
xor
mov
sbb
ljmp
push
call
push
lcall
test
lret
cmp
hlt
jle
das
push
lahf
or
movsb
in
jns
sbb
imul
cmp
dec
outsb
adc
shrl
fs
cltd
jo
call
shlb
cmpsb
push
add
cmpsl
xchg
or
test
and
mov
fs
shll
push
lock
xchg
les
push
and
adcl
outsl
les
pushf
test
fwait
adcl
lret
int3
push
pop
mov
pop
sbb
ret
icebp
aam
cmc
mov
xchg
ret
pop
ret
int
push
adc
inc
jge
xor
ret
test
jno
xchg
jns
xchg
int
leave
scas
stos
inc
ficomps
push
nop
dec
mov
stos
mov
jl
enter
cwtl
pop
pop
cmc
mov
xchg
sub
imul
sub
sbb
loope
jno
pushf
cmp
pushf
mov
jo
push
movsl
daa
ljmp
shr
hlt
jg
and
jp
and
jle
test
jns
clc
stos
fucomip
orb
pop
sahf
scas
sbb
es
fstl
lods
movd
mov
xchg
jne
stos
cmpsl
or
cmp
sbb
adc
cli
pushf
add
push
cmp
xchg
and
add
jg
cmpsb
stc
inc
fsubrs
jns
loop
sti
jmp
sub
mov
test
sbb
loope
pop
adc
cmc
mov
imul
push
nop
leave
pusha
lds
fwait
xor
in
mov
jle
icebp
or
rorb
mov
xor
sub
xor
sti
inc
fisubrl
test
adc
jg
and
in
cmp
nop
pusha
out
pop
pop
mov
nop
in
push
lods
dec
sub
outsb
popa
lds
fidivrs
ds
push
icebp
mov
lea
mov
jno
into
mov
insl
pop
hlt
lahf
js
fldcw
mov
clc
jns
jo
sarb
adc
push
test
jmp
scas
cld
dec
in
int
mov
dec
dec
in
sbb
iret
push
sahf
mov
inc
mov
into
in
inc
cmp
je
outsl
xchg
loop
imul
pop
push
xchg
xchg
mov
pop
lock
sbbl
mov
outsb
push
sub
adc
les
or
mov
in
test
xchg
mov
xchg
sub
insb
shrb
jmp
adc
scas
push
sbb
test
jbe
inc
cmpsl
std
mov
xor
mov
pop
pop
outsl
push
into
cmp
pop
sahf
push
jo
sbb
inc
jl
jne
ficoms
psrlq
xchg
add
arpl
inc
push
adc
adc
shrl
add
sbb
shrl
xlat
push
jmp
cmp
testb
sub
out
push
xor
pop
dec
mov
mov
jb
push
dec
in
mov
sbb
filds
shrb
test
inc
mov
and
loopne
call
or
int
pop
sahf
xor
mov
fimull
movsl
prefetch
in
pop
pop
lahf
ss
jp
int
lods
mov
repz
stc
ret
pop
das
sbb
mov
test
int3
sbb
and
sub
inc
pop
idivb
test
lret
les
aaa
imul
pop
push
push
sbb
mov
push
adc
rorl
sbb
sub
outsl
insl
jo
lahf
nop
in
mov
add
dec
or
mov
shl
not
sub
jecxz
sub
pop
imul
jl
cwtl
lods
mov
mov
pusha
and
push
pop
cli
adc
mov
scas
jecxz
sti
adc
add
cld
xor
push
add
lcall
or
sub
sbb
xchg
and
mov
outsl
push
out
adc
cmp
bound
std
xchg
rolb
cld
jl
enter
pop
hlt
in
out
gs
mov
cmp
jmp
aaa
xor
gs
fs
mov
adc
cmp
lahf
ss
fldl
xchg
ret
inc
sbb
push
xchg
mov
pop
sub
mov
aaa
adc
lahf
jmp
fwait
ret
bound
movsb
mov
xchg
jbe
jmp
int3
pop
sahf
ss
dec
shl
cltd
decl
movsb
jecxz,pt
xchg
stos
pop
adc
mov
add
jb
test
mov
pop
je
popf
dec
push
lahf
xchg
pop
dec
js
push
dec
pop
int3
pop
push
push
mov
cs
rclb
pop
cmp
movsb
popf
mov
and
or
les
cmp
shlb
add
mov
out
add
mov
dec
cli
aad
out
shrb
rcr
lahf
sub
adc
in
movsb
jb
and
test
sahf
testl
jle
sub
ja
mov
pop
hlt
neg
dec
shl
mov
adc
scas
sbb
sti
mov
jmp
and
mov
fsubrs
loop
or
out
out
xor
or
scas
cwtl
fmuls
sti
int3
arpl
dec
popa
movsl
inc
lods
fmuls
das
pop
leave
nop
add
adc
xor
cmpsb
xchg
lods
inc
push
lods
fstps
ja
mov
out
aas
lcall
sbb
push
pushf
test
cltd
xchg
dec
dec
addr16
imul
sahf
pushf
xchg
unpcklps
or
popf
mov
push
stos
sti
push
gs
lods
mov
mov
out
push
shrb
jo
scas
push
sub
adc
dec
inc
mov
outsb
xchg
push
mov
and
add
outsb
pop
icebp
lahf
inc
call
sbb
pop
icebp
sub
xchg
push
cmp
inc
scas
je
mov
cwtl
inc
pop
cmpsl
push
adc
dec
loop
ret
lock
cs
sahf
fdivl
jns
aad
mov
mov
jge
sbbl
dec
mov
cmp
mov
inc
sub
adc
or
fsts
fwait
xchg
std
rol
dec
call
ret
les
das
pop
mov
shrl
xchg
hlt
dec
mov
add
xchg
into
dec
les
xor
mov
adc
lea
es
sbb
shl
add
mov
rcll
sub
or
std
in
pop
fldt
pop
jnp
jmp
idivl
enter
fcoms
mov
sub
mov
pop
sbb
mov
sub
xor
cmp
out
aad
mov
div
mov
mov
and
in
inc
leave
xchg
xlat
dec
and
mov
es
ret
sub
adc
push
out
mov
rorb
jo
aad
jnp
xor
test
cld
xchg
jge
fidivs
cwtl
out
mov
mov
cmc
scas
inc
mov
fisttps
push
fnstsw
rorb
aad
push
in
xor
ret
std
inc
pushf
test
scas
es
sbb
xchg
jge
jg
inc
cmp
jns
insb
dec
lock
cmp
xchg
test
mov
add
fs
mov
repz
clc
and
fimull
inc
xor
test
dec
cmp
xchg
pop
shlb
xchg
xor
inc
lea
xlat
insl
mov
cmp
mov
ret
mov
les
mov
cli
add
pusha
jne
inc
call
fiaddl
es
xor
pop
lret
mov
mov
dec
loope
xchg
movsl
pop
nop
stos
inc
ret
popf
stos
loope
mov
xchg
call
dec
lds
mov
jg
mov
and
sbb
dec
out
cmp
lock
jmp
push
sbb
add
fidivs
rcrb
cld
jg
ja
mov
inc
or
pop
nop
mov
push
pop
jo
nop
cltd
cmpsb
pop
adc
jae
or
mov
movsl
push
dec
xlat
pop
lret
inc
stos
data16
xor
push
sar
adc
inc
lret
ds
push
push
add
fldenv
int3
push
or
cmp
push
pop
out
jmp
or
pop
int
dec
rcrb
iret
lds
jnp
push
cmp
jns
inc
inc
pop
nop
sub
arpl
cld
push
cmp
test
nop
pop
push
cli
pop
adc
scas
pop
inc
fidivrl
and
fisubl
adc
mov
xor
out
into
inc
mov
in
data16
sbb
xchg
idiv
sub
shrl
add
dec
mov
adc
pop
cmpsl
xor
pushf
sub
add
adc
lods
mov
jg
mov
jmp
call
adc
dec
fistl
mov
pushf
out
mov
lcall
ja
sbb
lahf
ss
xor
or
arpl
enter
out
xchg
test
cmc
push
jmp
push
add
in
inc
fmulp
xchg
sbb
int
lock
rorb
stc
lock
inc
inc
mov
lsl
test
cmc
mov
or
sub
push
mov
and
push
xor
jno
mov
popa
icebp
sbb
subl
inc
lock
ss
mov
inc
test
or
inc
mov
push
cmp
inc
into
les
xchg
loope
fs
loope
arpl
jp
pop
adc
stos
sbb
sub
push
movsl
ds
int
clc
stos
inc
sub
inc
into
into
dec
fmuls
inc
fmul
sub
dec
scas
jmp
test
lret
repz
mov
movl
cmp
mov
das
fnstsw
out
ss
push
or
add
and
pop
jo
sub
lods
movsl
jo
sub
jmp
lret
icebp
ds
insl
mov
fcompl
mov
fdivl
cmpsb
popa
inc
xchg
das
repnz
and
out
cmp
je
outsb
cmpsb
lods
sub
dec
jg
dec
iret
test
inc
cmpsl
push
mov
aaa
mov
sbb
cmp
iret
xchg
js
rcll
jns
fyl2x
cmp
mov
fcoml
adc
test
dec
lahf
add
inc
ja
aad
or
fs
jnp
pop
lods
and
jp
repnz
test
and
shlb
lret
push
cmp
test
pop
int
xchg
and
das
icebp
out
outsb
cld
inc
dec
lods
or
lea
aas
inc
and
mov
in
push
int3
shlb
mov
fcmovne
jno
pop
push
movb
push
mov
mov
mov
push
in
cmpl
jecxz
mov
adc
fsub
xor
cld
in
jnp
scas
jp
sub
xchg
mov
popa
dec
je
or
daa
xchg
scas
dec
loop
mov
xchg
push
cmp
or
jl
das
sub
jge
imul
pop
popf
lret
cmp
cmp
mull
out
add
xchg
wrmsr
mov
add
dec
mov
bound
xlat
insb
xchg
inc
mov
lahf
cmp
scas
adc
xchg
mov
les
loop
sub
out
subb
mov
aaa
mov
repz
jne
jbe
std
bound
sbb
or
pop
or
cli
aad
out
repnz
popa
mov
mov
xchg
adc
xchg
pushf
push
repnz
push
mov
lods
pop
rorb
mov
lock
cmp
faddl
packsswb
sbb
loope
out
nop
leave
hlt
sub
add
sub
mov
mov
adc
fiaddl
lcall
pusha
lods
loope
mov
movsl
pop
repnz
add
call
loope
mov
mov
dec
in
xchg
popa
movsb
push
cmp
mov
and
mov
xor
jecxz
mov
cmp
push
mov
negb
push
call
jno
mov
idivl
jne
mov
push
pop
cmpsl
ret
jle
pop
and
jne
pop
mov
pop
xchg
outsb
sub
cmp
fimull
aas
incl
mov
aad
lods
inc
xchg
negb
jl
sti
popl
xchg
jbe
ljmp
mov
mov
jnp
js
das
popf
mov
insb
fldl
mov
push
adc
mov
test
ss
mov
test
push
mov
sub
dec
call
and
pop
cmp
push
fwait
dec
inc
push
sbb
arpl
add
roll
xchg
jle
inc
and
push
enter
js
stos
dec
shlb
or
dec
insb
ret
cs
or
lds
mov
cmpsb
push
adc
add
iret
cltd
cwtl
xor
lock
push
mov
push
rcrl
xlat
sub
mov
pop
loope
mov
xchg
lahf
cmp
adc
cmpsb
popf
cld
test
dec
cmc
mov
lods
pusha
daa
aas
rclb
sbbb
rorb
xchg
rep
add
rorl
ds
mov
test
xor
sarl
pop
add
cmp
xchg
mulb
jne
pop
sbb
jbe
in
and
das
test
dec
add
cwtl
xor
xorl
cmp
rcrb
jmp
arpl
cmpsb
pop
cmpsl
sub
cs
jmp
aad
scas
cld
mov
lret
in
dec
call
lds
xchg
add
add
cltd
pop
sub
loop
aam
inc
xlat
jmp
mov
mov
std
imul
nop
test
sbb
outsl
push
pop
nop
lahf
test
push
int3
inc
push
insl
dec
out
ss
cmp
adc
cmp
cs
in
or
xchg
bound
xor
dec
insl
lcall
addl
cmp
jns
jecxz
sbb
pop
scas
and
dec
lds
fcoms
dec
or
idivb
enter
xchg
cmpsb
dec
shl
movsb
cmp
xchg
loope
pop
mov
add
jns
lock
sub
mov
loop
daa
test
push
jbe
mov
lret
push
sarl
pop
cmc
push
push
cmp
fiadds
in
fdivrl
ljmp
mov
fcmovne
inc
in
loopne
add
mov
js
cmpsb
imul
cmpl
jl
lods
xchg
mov
mov
xchg
mov
cwtl
sub
cs
push
enter
dec
aam
cltd
mov
mov
pop
stc
js
mov
out
push
popf
fisttpl
ss
fildl
ret
pop
xlat
push
imul
mov
lahf
adc
pop
ret
cmpsl
pop
sub
loope
push
lcall
inc
pushf
cmp
pop
push
mov
cltd
or
pop
or
dec
ror
ret
pop
inc
fisubrs
out
pop
add
mov
decl
adc
mov
sti
nop
arpl
xchg
pop
mov
dec
movl
enter
ret
aam
jns
fistpl
out
leave
mov
int3
test
icebp
sbb
in
repz
add
aam
movsl
push
mov
pop
std
or
rcrl
aas
icebp
repnz
mov
and
mov
mov
sub
outsb
ds
sti
sbb
ficoml
mov
pop
and
pop
inc
lret
das
pusha
pop
adc
cwtl
stos
pop
adc
mov
xchg
test
xor
into
lahf
loop
cli
int3
jge
rcrb
or
div
sbb
mov
add
mov
jmp
xor
leave
adc
mov
cwtl
push
mov
idivl
in
xor
push
mov
push
jae
pushf
cmp
test
bound
xchg
dec
bound
repnz
gs
push
cmpsl
dec
sub
push
fs
loopne
test
and
push
dec
mov
xchg
adc
loop
mov
sub
arpl
sbb
xchg
sub
lock
and
pop
mov
fmull
jnp
lret
inc
fcmovnu
fisubs
out
shlb
out
cmc
nop
xchg
into
mov
jg
mov
test
aad
addb
das
jnp
mov
and
lret
cli
sub
outsb
aam
insl
xor
dec
lret
cmp
in
aaa
fsubrl
std
sub
aas
cmp
fnclex
jns
mov
out
syscall
ret
sahf
adc
sub
jecxz
enter
and
jmp
sub
sti
xchg
loopne
and
js
sbb
mov
push
or
subl
and
push
orb
jno
fwait
inc
sub
je
bound
inc
mov
sub
outsb
stos
mov
sbb
cmp
repnz
sbb
dec
stc
in
mov
mov
je
aam
add
in
xchg
cmp
xor
hlt
xchg
cmp
outsb
fldcw
pop
pushf
popfw
jae
jno
sbb
mov
cltd
xor
and
pop
inc
adc
mov
out
jg
mov
mov
icebp
flds
jno
nop
ss
pop
idivb
cmpsl
push
mov
mulb
dec
ret
xchg
pop
das
jecxz
pop
sbb
movsl
sti
or
mov
jne
xchg
jp
aas
add
insl
imul
xrelease
int3
inc
mov
cmpsb
dec
add
cs
insb
loop
negb
int3
ret
inc
shl
cld
xchg
mov
loope
mov
ljmp
pop
adc
push
out
mov
cli
inc
mov
test
test
push
or
mov
jmp
dec
sbb
ds
popf
clc
sub
mov
imull
ret
loope
sbb
in
adc
stos
shrl
push
fiaddl
popf
mov
ljmp
jne
push
int
xor
sub
inc
inc
push
fisttpll
dec
mov
push
js
fs
mov
push
outsb
xchg
sub
shll
mov
in
es
call
xor
nop
mov
or
or
inc
adc
xor
xchg
pop
lds
pushf
xor
adc
test
push
push
cmp
push
dec
fstps
mov
inc
cmpsb
imul
cmp
out
xor
pop
sbb
push
cmp
dec
test
xor
push
push
out
inc
jb
movsl
cmp
xchg
int
adc
out
xchg
adc
add
sub
mov
int3
arpl
sub
xorb
push
or
repz
pop
inc
sbb
jp
sub
arpl
das
repnz
xor
js
push
loopne
or
fisttpl
jp
jl
jbe
fstpt
pop
lahf
je
jge
cs
es
jno
and
cs
in
insb
push
std
sub
and
testl
pop
out
cmp
orl
cmp
fdivl
mov
push
cmp
dec
cmpb
scas
clc
mov
shrb
sbb
add
jbe
shlb
xchg
leave
popa
mov
adc
mov
dec
mov
add
test
cmp
or
addr16
sbb
ds
dec
cmc
jl
pop
inc
mov
in
cmp
xchg
jno
jae
xor
lahf
ljmp
jecxz
pop
leave
cmpb
iret
and
imul
loopne
inc
shlb
sbb
sbb
test
pushl
jo
js
jmp
int3
cmp
dec
mov
cmp
cmp
lods
pop
cmp
jmp
loopne
gs
adc
in
iret
outsw
push
cld
and
xchg
or
sbb
add
add
push
mov
popa
int
sub
dec
scas
popa
pop
push
sarl
inc
aad
insb
jecxz
pop
into
add
pop
mov
mov
sub
fldt
shrl
in
shrb
pop
fldenv
icebp
jg
imul
xchg
jle
mov
mov
cmp
cmp
test
add
idivl
adc
jmp
push
mov
cld
sub
lods
mov
cmp
sub
and
push
xchg
xchg
xchg
sub
imul
addr16
rclb
pop
addl
inc
outsb
add
add
insl
xchg
sbb
test
pop
aad
push
jo
pop
inc
inc
mov
dec
push
push
into
push
sub
mov
insb
pop
xor
ret
mov
hlt
sub
sub
daa
jo
sbb
mov
cmc
call
add
sarl
sbb
fidivs
ja
fists
inc
into
mov
std
or
mov
and
push
testb
int
sbb
lret
add
int
test
gs
push
rolb
pop
pop
jmp
or
sbb
or
fiadds
in
xor
dec
enter
add
mov
xchg
xchg
leave
pushf
addr16
jns
shr
out
and
xlat
outsb
and
pop
mov
addr16
inc
adc
mov
movsb
int
add
mov
out
mov
ljmp
and
sti
aas
call
faddl
sub
push
jmp
fwait
adc
sbbl
and
or
ss
xchg
cmp
adc
incb
fwait
cmp
pop
xchg
jbe
mov
sub
jle
lret
jo
xchg
push
faddl
loopne
fcompl
mov
and
inc
sub
pop
xor
aam
jl
iret
outsb
cmp
adc
jno
into
gs
es
mov
or
and
sbb
orl
fisubrs
or
rclb
pop
stos
mov
negl
outsb
xchg
sbb
pop
mov
rolb
clc
and
cmp
roll
sbb
subb
sub
add
dec
mov
loopne
dec
aad
mov
xor
iret
sub
in
or
movsl
ljmp
add
movsb
pop
cmp
push
fs
pop
inc
and
dec
js
shrb
cmp
cmp
jl
popf
mov
aas
pusha
jb
push
xor
repz
fwait
jg
test
nop
dec
insl
or
push
push
pop
shlb
push
pop
inc
sub
jne
test
dec
xchg
jbe
add
popf
push
mov
adc
test
add
mov
xchg
jnp
in
pop
sarl
dec
add
or
cmp
test
das
stc
xchg
lea
mov
ret
pop
sbb
int3
push
ja
ljmp
jge
pusha
inc
or
jb
pop
lods
cmpl
mov
js
lcallw
lods
inc
and
stos
mov
mov
ljmp
pop
cld
inc
pusha
movsl
push
aad
push
loop
dec
mov
mov
clc
repz
mov
pusha
cmpsb
call
dec
sarb
cmp
ds
inc
lods
cmp
or
mov
jns
std
movsb
insl
lret
pusha
and
xchg
cli
clc
xlat
mov
lock
cld
jno
cs
fists
adc
pop
dec
inc
stos
push
test
mov
pop
push
pop
add
add
sbb
cmp
pop
xor
daa
lods
jp
jge
ljmp
push
lds
or
incb
cli
mov
testb
shrl
xchg
cld
adc
mov
cmpsl
mov
jle
int3
pop
pop
rcrl
add
push
sti
es
mov
inc
sub
aas
jle
xchg
jl
cmp
dec
xor
dec
aad
sbb
fisttpll
sbb
mov
loop
xor
push
adc
push
cmpsb
gs
popa
or
repnz
push
jg
dec
mov
nop
shll
pop
push
movsl
ja
ss
mov
testl
push
sarb
add
push
scas
sbbl
jbe
dec
shll
and
loopne
push
addr16
test
std
sbb
cmpsl
xor
add
into
push
cs
xor
fnsave
rorb
add
mov
adc
sbb
sti
sahf
mov
add
je
lock
mov
test
into
int3
cs
out
sub
iret
cmp
insl
out
xor
and
and
cmp
adc
lahf
addr16
pop
leave
cmp
lea
cmp
mov
push
inc
fldenv
fimull
pop
sar
cmp
push
or
pop
adc
cs
jl
add
and
adc
je
ficompl
lods
imul
mov
push
push
push
out
stc
jno
xlat
xor
daa
mov
sub
es
push
insb
imull
outsl
xor
arpl
leave
into
dec
fwait
xor
into
add
gs
mov
pop
sahf
add
aas
xlat
aaa
jp
fs
and
in
xchg
inc
jp
pusha
repnz
fdivr
xchg
cli
xchg
and
ds
je
orb
mov
insb
mov
sub
pop
mov
dec
stc
pop
lock
xchg
cmp
jge
pop
dec
ss
and
dec
stos
pop
pop
or
movsb
cmp
repnz
negl
inc
es
je
in
lods
cmpl
outsl
add
test
push
pusha
push
imul
in
push
call
aad
outsl
push
jno
xor
daa
xchg
lea
out
inc
sbb
leave
pusha
imul
and
out
mov
loopne
pushf
adc
and
sbb
add
testb
and
pop
loopne
fcoms
jge
xor
sarb
adc
and
outsb
xchg
push
insb
add
stos
mov
fisttpll
adc
mov
lock
out
push
shr
addl
and
push
les
mov
js
fldcw
cwtl
das
or
ret
pop
pop
fnsave
movq
js
xor
nop
stc
frndint
xchg
or
sbb
pusha
ficompl
mov
sbbb
sub
aam
fdivs
pop
ret
repz
xor
cli
xchg
jmp
push
cwtl
and
movsl
mov
or
stos
inc
mov
cmp
pop
fmul
pop
or
out
std
aam
into
add
out
push
in
pop
insl
arpl
sahf
inc
jae
jns
sbbl
lret
fcomps
stos
daa
std
xchg
pop
lret
dec
movsb
cmc
mov
sub
inc
or
outsb
add
movsb
daa
mov
pop
push
out
test
popa
mov
outsb
vmovaps
or
jmp
mov
xchg
adcb
stc
push
sbb
shl
push
adc
jo
sahf
push
xchg
dec
mov
adc
pop
sbb
clc
dec
xor
inc
fiadds
pop
mov
addb
jae
aaa
cld
popa
imul
cmp
pop
sbb
out
aas
push
sbb
out
test
orb
mov
movsb
pushl
jb
inc
lahf
or
into
adc
sarb
cmp
xchg
mov
add
std
push
cltd
lret
jl
push
stc
mov
and
cltd
pop
mov
aaa
and
insl
pop
xchg
cmc
movsl
int
cmp
adc
sub
dec
sahf
jmp
mov
adc
dec
mov
shrb
mov
cli
test
dec
stos
and
outsb
xor
mov
or
fildl
mov
and
sub
cmpl
cltd
xor
mov
das
dec
ja
jge
inc
enter
cli
or
dec
sbb
add
sub
dec
xor
cmp
mov
cmpsl
sbb
mov
push
or
push
scas
and
cmp
sahf
xor
outsl
pop
ljmp
out
lods
mov
fld
adc
pop
addb
subl
mov
pop
test
imul
popa
les
mov
imul
stos
push
lcall
xchg
lret
mov
push
les
int
scas
ds
push
js
mov
adcb
add
sbb
xchg
ja
adc
xorb
cmpsl
dec
dec
stc
mov
or
cmpsb
sahf
repnz
cmpsl
mov
add
jge
jno
mov
and
test
and
mov
pop
into
xor
leave
and
jge
mov
lods
cs
mov
xchg
les
loope
inc
ds
dec
pop
das
xchg
mov
add
imul
dec
pop
or
cli
mov
out
sbb
add
jge
xor
sbb
js
dec
lods
jecxz
dec
lea
xchg
xorb
into
fs
fadd
push
inc
jge
out
das
or
call
push
imulb
je
add
mov
sti
stc
push
and
push
movsl
adcb
inc
and
pop
out
dec
xor
jge
dec
inc
pusha
idivl
ljmp
lret
sbb
lods
inc
pop
adc
cmp
xchg
sub
add
sbb
cmpsl
mov
push
popf
cmp
enter
pop
icebp
mov
pop
xchg
sub
loopne
out
ret
adc
hlt
and
shrb
or
mov
cmc
and
mov
or
jo
repz
xchg
scas
push
and
jecxz
cmpl
test
les
mov
lds
jp
dec
or
or
adc
scas
jp
loope
inc
fildl
add
xchg
pop
cli
dec
cltd
jp
dec
xchg
or
jae
xchg
rolb
inc
and
popf
lahf
fwait
xor
fucomip
dec
or
add
pop
mov
mov
in
imul
xor
ja
iret
xchg
imul
xchg
xor
loope
nop
cli
sub
pop
dec
sbb
cmpsb
push
test
push
aad
mov
cmp
xchg
jae
sub
cmp
mov
mov
int
and
mov
fs
popf
dec
ljmp
lret
int
mov
test
leave
jmp
jmp
cmp
mov
stos
cmp
test
sub
pop
and
inc
pop
cli
mov
mov
stc
add
push
cmp
xor
cs
loop
in
loope
jmp
cld
test
iret
shlb
roll
lahf
xchg
sahf
and
gs
imul
in
into
stc
iret
mov
dec
shlb
loop
popf
add
aaa
in
loopne
push
cmp
or
mov
pop
orb
adc
das
xchg
jecxz
mov
mov
jne
js
rolb
jnp
iret
je
or
cmp
and
xor
fistpll
roll
sarb
push
cld
pop
lret
or
adc
test
mov
negb
or
push
ret
jno
or
lods
mov
pop
sub
pop
add
jle
test
in
movsb
sub
icebp
repnz
pop
sbb
mov
mov
aaa
fldt
inc
jbe
fwait
inc
fs
sti
fs
jae
dec
popa
mov
sbb
dec
repz
cmc
and
shr
dec
adc
jmp
js
sub
add
add
cmp
jae
dec
pcmpgtw
adc
imul
dec
jnp
mov
xchg
inc
inc
lcall
xor
fidivrl
sbb
fwait
shl
dec
or
lcall
sahf
jge
mov
mov
fstpt
adc
sbb
outsl
int
dec
adc
pop
leave
xchg
jle
xor
pop
cld
out
leave
xchg
add
js
adc
xchg
repnz
dec
popf
cld
pop
lret
xchg
lcall
fnstcw
test
fnstsw
push
xor
inc
push
push
push
cltd
std
pop
dec
mov
cli
arpl
jle
jno
mov
inc
or
std
pop
lret
and
fnstcw
les
xor
push
push
test
mov
pop
cmp
pop
stc
mov
inc
adc
fwait
xorb
test
cmp
pop
mov
push
mov
mov
xchg
pop
lods
loopne
sbb
xchg
pop
pop
adcl
test
test
or
pop
test
lods
sub
fdivrl
pop
xchg
mov
test
or
pusha
mov
lods
sub
out
popa
cmp
xor
test
fidivl
inc
adc
in
push
inc
adc
cmpsl
xor
repnz
xchg
rep
xor
shlb
dec
pop
scas
sub
ret
fwait
cmp
push
in
gs
insl
sahf
jl
xor
ret
mov
sub
or
cwtl
cmp
jmp
clc
outsb
call
or
imul
push
test
or
push
lret
mov
ljmp
enter
cmp
imul
sub
lret
push
pop
push
add
nop
push
xchg
imulb
sub
xchg
cs
imul
add
xchg
inc
sar
xor
sbb
cmpl
int
addr16
mov
popaw
adc
pop
jnp
mov
xorl
xchg
sub
sbb
aad
mov
push
or
pop
xor
add
loopne
inc
testb
arpl
lock
add
fidivl
mov
test
jne
mov
jl
outsl
sub
lahf
dec
hlt
cld
pop
xor
les
sbb
movsl
pop
xor
int3
addr16
or
jge
aam
jge
movsl
mov
aaa
mov
mov
mov
loop
inc
nop
orl
int
mov
das
inc
lds
mov
pop
xchg
cmp
leave
push
into
repz
rcrl
xor
mov
scas
inc
or
and
add
dec
dec
popa
out
lcall
cmp
mov
xorb
mov
and
mov
iret
int
loopne
push
stos
das
xchg
add
mov
mov
and
inc
xor
adc
pushf
inc
adc
flds
add
push
stos
xor
das
fstpt
or
lds
mov
jae
add
mov
inc
mov
js
cmpsb
sub
stos
loopne
popf
sub
cmp
cmp
xor
jns
es
jnp
movsb
daa
pushl
cwtl
sub
cmp
inc
cmp
sub
shrl
pop
lock
out
mov
lcall
adc
cmp
sub
xchg
xor
lret
or
loopne
xor
mov
hlt
lcall
shrb
popf
xchg
and
inc
faddl
lret
popa
xchg
dec
adc
jne
xchg
mov
jecxz
dec
push
push
push
sti
pop
mov
cmp
cmp
es
pop
lods
xor
jno
jbe
jg
push
fnstenv
push
sbb
stos
sub
mov
addr16
cli
xor
out
ds
mov
mov
fmuls
jecxz
add
xchg
xchg
inc
mov
out
jnp
push
ret
mov
test
pop
lcall
mov
pop
loopne
add
xor
in
push
ret
je
fnstsw
jo
nop
cmpsb
ss
mov
outsl
add
xchg
jne
ficoms
jmp
pushf
ds
repnz
and
rclb
cmp
jne
lahf
mov
mov
mov
test
mov
or
pop
jnp
lods
daa
jp
fnstsw
addr16
insb
add
xchg
push
pusha
lahf
cmp
xchg
jo
dec
dec
inc
adc
xchg
lock
push
pop
shlb
mov
sti
pop
shlb
push
xchg
popf
cmp
lret
test
addr16
pop
movsl
jns
dec
cmp
rclb
or
idivb
mov
out
cmp
inc
lods
sub
outsb
mov
jae
jl
cmp
pop
insl
imul
clc
mov
cmpsb
adc
sub
dec
idivb
adc
orb
iret
xchg
mov
ljmp
es
pop
jp
shrb
mov
and
xchg
lods
add
pop
repnz
sbb
enter
dec
pop
lock
xchg
inc
shr
pop
fwait
and
mov
sbb
jae
arpl
test
lret
sub
cli
dec
dec
adc
inc
or
lods
ss
in
fistps
xchg
aad
test
sbb
and
popa
in
push
xchg
pop
jmp
lret
mov
mov
movsb
dec
or
pop
or
in
inc
insl
push
add
xchg
sub
and
daa
repnz
in
sub
rorb
push
div
sub
ret
push
in
xchg
cmp
sub
into
repnz
jnp
pusha
ljmp
scas
xor
testl
or
enter
in
loop
leave
xchg
mull
scas
aad
pop
add
push
cld
mov
sti
gs
test
arpl
mov
xchg
out
or
arpl
xor
ss
sub
mov
cmp
aam
sub
dec
bt
xchg
dec
mov
imul
orb
ja
push
lea
addb
dec
xor
sub
jle
jmp
inc
cmpsl
dec
pop
movsb
mov
movsl
ss
cmp
mov
cmp
cltd
inc
and
fstps
xchg
inc
pop
adc
call
mov
xchg
inc
std
scas
and
mov
push
add
jge
pop
sti
and
cmp
push
add
jnp
jnp
stos
mov
mov
sbb
sbb
iret
cwtl
ds
pop
testl
adc
ds
ds
lea
cmp
pop
cld
shll
lret
jns
ret
insb
fiaddl
rorb
xor
fmul
xchg
and
test
ss
or
je
dec
jmp
mov
clc
sub
ss
push
sbb
mov
test
cmp
fs
cs
dec
cli
adc
xchg
cwtl
push
push
and
xor
pop
mov
sbb
adc
pop
mov
sbb
jno
sti
inc
push
pop
popl
shr
inc
nop
inc
mov
jno
in
lods
mov
repz
iret
fildll
push
inc
or
lret
xlat
outsb
call
stc
push
cli
jns
push
std
pop
push
xchg
inc
mov
out
sub
sub
mov
ds
inc
mov
mov
add
sub
sub
insl
leave
out
pop
jns
sarb
fistpll
outsl
in
pop
cs
test
push
mov
fcomip
inc
add
push
jmp
je
push
stos
sub
in
xor
fnsave
and
add
lcall
sbb
cmp
mov
jg
lea
fsubrs
mov
and
xlat
or
cmpsb
sub
lods
xor
and
fldl
and
fadds
scas
daa
das
mov
mov
xchg
ds
into
pop
fucomp
mov
or
mov
jmp
cmpsb
sub
cmp
xchg
mov
mov
adc
or
mov
mov
push
pop
pop
cld
cltd
cmp
subl
cmpsl
xor
fs
pop
not
adc
roll
fstpt
pop
adc
push
ret
push
std
and
sbb
jg
aam
iret
insl
leave
xchg
pop
sbb
jae
dec
dec
pushf
pop
cld
pop
test
jp
pop
fwait
jae
loopne
cmp
insl
dec
movsl
das
add
lods
nop
pop
sub
and
lds
xor
jae
outsl
cmc
mov
sahf
fxtract
pop
hlt
out
pop
add
push
jb
xchg
push
addb
iret
lods
fs
adc
fistpll
mov
shlb
in
sets
mov
mov
fidivrl
adc
arpl
call
fsubs
mov
inc
jns
int
mov
rolb
and
addb
insl
ljmp
adcl
xchg
hlt
popa
cli
dec
mov
dec
lret
mov
dec
push
push
add
xchg
adcl
mov
mov
mov
push
sbb
sbb
lods
je
enter
mov
lahf
lcall
pop
sbb
orl
inc
or
loope
xchg
xor
push
mov
add
sub
push
mov
fwait
xchg
cmp
shrl
and
lock
inc
ss
adc
inc
bsr
jbe
movsl
mov
fwait
test
sub
pop
enter
pop
inc
adc
stos
daa
sahf
xchg
out
sbb
fidivl
inc
jle
pop
fidivs
aas
dec
jmp
dec
push
adc
mov
push
lret
xchg
lods
or
adc
push
jle
pop
daa
add
loope
fnstsw
cld
fdivrs
inc
rolb
stos
lahf
xchg
inc
outsb
mov
jns
lock
xchg
or
and
mov
pop
cli
das
subl
repnz
insb
or
adc
cmp
inc
or
mov
and
fwait
aas
push
pop
push
shrl
jge
cltd
push
imul
xor
ja
and
jmp
or
aam
data16
imul
jo
cmp
cmp
iret
pop
jg
inc
adc
in
push
addr16
pop
xor
mov
dec
mov
es
pop
xchg
std
dec
mov
imul
dec
adc
adc
cwtl
ret
pop
ret
inc
or
orl
push
mov
dec
shll
fcomps
pop
fs
sbb
sub
inc
sbb
leave
cmp
dec
adc
iret
sbb
push
in
sbb
inc
xchg
inc
sbbl
inc
popf
mov
popf
lret
pop
sub
or
cmpsb
fadds
mov
stos
test
cltd
jmp
push
cmp
push
mov
test
fidivrl
or
xchg
mov
dec
or
push
fidivrl
lds
std
adc
or
mov
fdivrs
adc
rclb
lcall
and
add
push
jge
mov
mov
cmpsb
inc
jp
xchg
cltd
inc
ljmp
xor
pop
decl
dec
push
jnp
insb
testb
lcall
into
sbb
mov
mulb
mov
mov
xchg
test
mov
sarb
je
fisubrl
orb
mov
dec
add
push
movsl
sub
xchg
in
jno
cmp
xor
add
xchg
xchg
shrl
cli
jae
cmp
jl
and
out
xchg
inc
xor
clc
pop
xor
add
andb
loope
jg
pop
lahf
aaa
out
push
in
jmp
or
movsl
push
out
popf
inc
adc
mov
inc
out
jb
mov
mov
pusha
in
xchg
cmp
push
shlb
mov
stos
cwtl
aas
mov
into
ja
jp
jns
iret
pusha
out
or
pop
dec
adc
scas
xchg
sub
mov
cmpsl
mov
add
mov
or
mov
mov
add
xchg
push
cs
mov
mov
es
rol
xchg
js
jb
sbb
sbb
jnp
movsb
cmp
popf
into
xchg
jecxz
ret
mov
hlt
pop
add
inc
or
cmp
sbb
outsl
jb
jb
or
dec
pop
pop
rorl
pushf
js
ja
loop
mov
scas
rorb
adc
loop
mov
mov
outsl
mov
xchg
stos
sbb
push
jle
cmp
lods
lahf
jns
mov
inc
or
jne
sub
xor
add
dec
psadbw
pop
fucom
jl
adc
jb
andl
adc
jg
movb
cmc
leave
xchg
ret
leave
push
mov
sti
dec
or
add
insb
pop
ret
jne
and
and
incl
fsts
and
dec
rclb
lock
loop
fidivrl
cli
sub
cmp
xchg
inc
cmp
cmp
pop
and
gs
ljmp
mov
pop
add
and
int3
enter
sbb
jg
lock
andb
sbbl
shll
mov
aam
jb
xchg
inc
inc
outsl
push
loopne
jnp
std
mov
lds
in
pop
sbb
iret
inc
and
inc
fwait
cmp
int3
gs
popf
sbb
push
and
push
mov
inc
or
outsb
lock
in
push
cmpsb
negb
push
sub
xlat
mov
fidivs
adc
inc
pop
loop
add
test
push
dec
xchg
mov
dec
or
mov
pop
push
pop
mov
das
push
push
add
ss
xchg
or
sbbb
cmp
movsb
add
out
xchg
sbb
sti
dec
jg
movsb
mov
push
mov
jg
mov
outsb
sub
cld
ljmp
hlt
js
sbb
mov
inc
pop
loope,pn
movsb
gs
cwtl
jb
fistl
into
sbb
filds
outsl
sbb
fldl
aaa
and
out
dec
cvtpi2ps
mov
jp
add
xchg
pop
imul
inc
cmc
and
add
pushf
and
mov
pop
repnz
outsl
jecxz
mov
mov
addl
mov
fcompl
idivl
add
out
or
adc
outsl
lock
dec
cli
arpl
pop
enter
fs
cli
jecxz
mov
push
mov
dec
mov
push
and
in
imul
cs
loopne
pushf
cmp
icebp
mov
push
int3
rorb
xor
or
aam
add
jle
xor
out
gs
test
or
jl
cs
mov
sub
enter
push
cmpsl
sub
and
mov
das
push
cltd
inc
lds
and
jge
pop
cmp
cld
nop
sarl
in
push
add
pop
fistpll
sbb
push
jle
push
ret
inc
gs
lock
inc
push
push
mov
jge
dec
push
out
mulb
sub
or
insl
loope
xchg
cmpl
lods
pop
aam
loop
mov
test
stc
test
daa
out
popf
inc
repz
or
js
sarb
and
aaa
cmpsb
mov
je
les
fdivrl
sahf
bswap
adc
push
into
out
dec
and
mov
in
repnz
cld
cmpsl
repnz
insl
sub
mov
adc
les
div
inc
fsubrs
sbb
nop
cmp
stc
shrl
movsl
shrl
pop
cmpsb
enter
mov
insb
hlt
mov
mov
push
jmp
add
cli
jecxz
or
pop
add
pop
aad
dec
jne
mov
sahf
mov
inc
lea
aaa
lret
loopne
sbb
dec
enter
sub
and
jno
xchg
cmp
mov
xor
mov
mov
push
leave
adc
lcall
mov
push
sti
mov
stos
cmp
out
aaa
dec
adc
jmp
hlt
push
push
mov
or
push
pop
adc
or
cmc
mov
lea
std
pop
add
pop
dec
movsl
daa
lahf
nop
aad
icebp
lret
xchg
cmp
or
ljmpw
jge
sbb
mov
mov
dec
mov
mov
stos
ss
repnz
in
jno
bnd
ja
icebp
jle
pop
mov
push
and
jnp
loopne
ds
in
mov
loopne
clc
mov
pop
and
and
andl
jg
stos
sub
scas
jne
mul
mov
push
mov
scas
sub
aam
adc
sub
push
cmpsb
das
dec
jne
lock
aam
mov
int3
mov
or
cltd
jg
xchg
call
clc
leave
lea
jns
fsubrl
pop
mov
xchg
xadd
xchg
es
repz
int
add
sub
xor
pop
push
mov
inc
mov
jae
xchg
cmp
cmp
ljmp
jno
jg
mov
mov
mov
ret
mov
sub
mov
cmpsb
xor
les
jl
xchg
shlb
daa
xor
das
adc
jge
das
mov
mov
cmp
xchg
add
adcb
js
rcrb
sub
adc
shll
jmp
add
push
out
orb
lcall
add
faddl
addb
mov
scas
dec
adc
movb
sbb
xchg
cmp
outsl
out
xchg
lea
in
mov
mov
scas
adc
push
rcl
inc
orl
scas
das
xor
pop
add
sub
insl
add
fmulp
mov
xchg
pop
sbb
jnp
mov
jmp
addr16
imul
add
cwtl
or
mov
pop
aam
icebp
pop
push
lds
es
jbe
mov
test
incb
and
aad
or
add
adc
iret
pop
lret
mov
sbb
jge
lock
cmp
jbe
pop
sahf
outsl
rolb
aas
stc
lret
mov
mov
jne
cmp
in
rcll
push
pop
dec
fmuls
cmp
out
sbb
or
ret
ss
add
loope
test
inc
or
lea
shll
push
inc
and
repz
and
popf
inc
sbb
dec
adc
dec
xor
lcall
aas
scas
dec
add
ret
push
ljmp
mov
js
scas
pop
add
lock
mov
decl
fcoms
xchg
inc
add
sub
cmpsb
xor
xor
sub
lret
inc
cmove
and
in
mov
sarl
jo
testl
cli
cmpsl
mov
mov
fimull
fs
xor
xor
imul
in
inc
pop
rcll
sbb
sbb
add
in
inc
jns
cmc
xor
in
sub
divl
lret
jne
je
xor
nop
adc
fwait
inc
cmp
xor
sti
jbe
push
stos
jmp
lahf
inc
cmp
popa
adcb
and
cmp
jp
fstpt
movsb
dec
pop
dec
push
add
adc
fsubs
mov
xchg
bound
data16
les
cli
add
daa
icebp
out
loope
push
out
lock
addb
jns
inc
mov
scas
mov
pop
loop
notl
ss
fadds
mov
pop
rorb
aas
negb
mov
jecxz
and
mov
push
roll
sbb
jmp
stos
ljmp
movsb
xorl
stos
daa
and
dec
or
or
leave
sahf
xchg
pop
adc
test
call
push
mov
fidivrl
test
or
cld
push
mov
in
pop
push
jl
xchg
cmp
insl
dec
adc
jmp
jp
xchg
xor
pop
outsl
lret
outsl
nop
cmp
or
mov
push
js
mov
adc
je
cmp
push
lahf
push
sub
into
jge
ljmp
pop
jg
pop
mov
jp
out
imul
mov
scas
sbb
mov
das
adc
jnp
dec
dec
dec
or
fwait
adc
lea
scas
popa
div
loop
push
cltd
jmp
int3
mov
jge
lcall
mov
scas
xchg
cmp
sub
xor
rolb
test
fnstsw
mov
es
jl
insl
adc
inc
hlt
mov
arpl
insb
push
ljmp
dec
in
sahf
inc
mov
cltd
inc
push
mov
dec
adc
ja
fildl
xlat
xor
mov
mov
dec
or
mov
ds
push
inc
dec
or
inc
mov
mov
dec
and
int
xchg
adc
fidivl
aad
cmp
push
testl
pop
int
xchg
dec
adc
cli
xor
mov
mov
push
les
push
mov
or
ja
pop
out
xor
and
add
into
cmp
jle
insl
push
inc
push
jecxz
xor
loopne
jmp
mov
inc
inc
mov
lahf
and
fcompl
jecxz
stos
push
jno
xlat
mov
push
jmp
sahf
cmp
movsl
imul
mov
adc
stc
lods
std
push
mov
dec
or
dec
or
movsl
pop
cld
push
adc
xchg
jno
and
jecxz
aas
repz
cmp
stc
nop
adc
lods
pop
add
mov
orl
mov
in
aad
mov
scas
pop
add
xchg
add
push
stos
pop
mov
dec
cmp
xor
rorb
sub
lcall
pop
popa
repz
ljmp
adc
pop
in
jl
shll
cmp
mov
sub
inc
pop
adc
add
pop
cmp
inc
nop
dec
ud1
mov
lret
shr
pop
scas
xor
xlat
fiaddl
ret
test
inc
out
cs
xchg
pop
cld
iret
pushf
inc
adc
sbb
scas
jno
pop
clc
dec
imul
xchg
push
jmp
lods
jmp
fiadds
mov
xor
sub
je
xor
or
cmpsb
adc
and
es
sbb
rcll
xchg
cmp
inc
ret
xchg
cmp
test
and
fsts
or
lret
outsl
xchg
adc
inc
dec
int3
and
aad
sti
pop
test
mov
xor
push
add
inc
pop
mov
es
jo
sub
cmp
mov
xor
popf
mul
jbe
leave
lea
test
dec
jnp
xchg
sub
clc
pop
fwait
gs
int3
push
or
xorb
xchg
out
js
rcll
test
add
iret
hlt
push
lods
sub
loop
sti
adc
leave
in
xlat
cltd
adc
into
mov
into
mov
mov
ja
clc
xchg
inc
cli
xchg
xchg
enter
pop
jmp
adc
test
lcall
ret
rolb
or
ja
mov
and
or
push
lds
inc
out
xchg
inc
jge
add
bound
in
jnp
jae
pusha
in
jecxz
cwtl
pusha
push
inc
adc
jge
mov
pop
push
in
or
pop
pop
clc
sahf
cmp
dec
movsb
loop
dec
push
push
ljmp
scas
and
lea
cmp
push
or
mov
rorb
lcall
jp
iret
notb
aam
es
or
je
mov
adc
mov
lds
jg
adcl
out
push
test
jo
into
xchg
outsl
mov
cmpsb
dec
mov
inc
or
rolb
jnp
pop
int3
xlat
imul
hlt
add
mov
in
mov
lods
popa
in
test
ja
frstor
in
jnp
xchg
iret
pop
stc
jl
inc
adc
push
sub
fnstcw
mov
cmpsl
divb
das
lock
jns
lds
rcrb
mov
popa
lret
dec
jle
popa
mov
dec
or
mov
push
sbb
int3
mov
dec
mov
daa
add
sub
ds
cmpsl
xor
jp
mov
movsl
rcll
or
fs
lock
adc
inc
push
sti
xchg
cmp
jp,pt
pop
add
ret
jno
and
pop
int
ss
xchg
cld
cld
roll
ror
xchg
ds
push
xor
and
jecxz
xor
mov
nop
lock
gs
sahf
inc
idivb
out
xchg
in
cltd
lds
cwtl
mov
xchg
ds
les
popa
jns
jae
cwtd
das
sbb
lock
rorl
adc
xor
and
insl
jp
dec
cmp
movl
push
shl
cmp
jge
inc
adc
pusha
pop
fstpt
jns
stos
dec
and
aas
add
adc
sub
lds
sub
add
fnstcw
pop
stc
pop
loope
sbb
pop
fwait
outsb
jmp
xchg
rorl
inc
adc
push
jmp
jl
daa
cwtl
cmp
push
insb
call
inc
inc
outsl
push
jbe
cmp
xorb
testb
push
add
inc
cmc
movsb
ss
pushf
imulb
loop
arpl
and
sub
inc
adc
adcl
dec
fists
mov
movsl
push
fisttpll
mov
and
lea
les
push
idivb
cltd
push
in
xchg
iret
xchg
xor
fwait
inc
mov
fildl
cmp
sub
test
fldenv
mov
mov
xor
sub
ret
negb
daa
pop
movsl
cmp
mov
mov
stos
cmpsb
sub
mov
mov
sbb
mov
pop
mov
mov
cmpsl
xor
mulb
rolb
jnp
fistpll
push
fstpt
andb
xor
sbb
mov
hlt
and
stc
nop
pop
xchg
jnp
jge
ds
pop
add
jo
jne
pop
bound
arpl
out
rorb
ja
add
mov
int3
imul
push
mov
cwtl
inc
adc
cli
inc
inc
mov
add
sti
or
mov
jae
push
mov
mov
lods
mov
jnp
or
mov
stos
lock
add
push
push
cwtl
pop
push
add
movsb
jb
jmp
stc
leave
pusha
sub
aad
dec
repz
rclb
in
test
mov
js
mov
pop
add
call
add
leave
into
xchg
lcall
jg
cwtl
or
pop
push
rorb
cltd
jnp
fstpt
insl
adc
mov
movsl
mov
jo
mov
push
adc
mov
mov
lods
sub
pop
xchg
data16
or
cld
xchg
dec
sub
fwait
xor
mov
arpl
bswap
pop
jg
hlt
jmp
push
adc
sub
mov
mov
cmp
adc
and
aaa
pop
lods
sub
mov
mov
cld
pop
fwait
cwtl
insl
out
add
test
insl
lods
sub
adc
push
mov
jge
mov
outsl
lea
cmp
lret
out
or
rclb
stc
pop
mov
shlb
adc
test
jp
nop
xchg
int
iret
dec
or
add
fcompl
rcl
scas
cli
push
jmp
loop
jo
out
add
test
sub
popa
repz
iret
mov
jno
cli
jl
subl
lods
fs
sbb
iret
mov
fistpll
mov
dec
in
shl
push
jno
dec
addl
ret
or
popa
mov
sbbl
das
sahf
enter
lahf
ds
inc
adc
outsb
cmp
jg
mov
testb
jp
mov
cmp
fimuls
data16
mov
lods
xor
lods
sbb
dec
sub
pushw
pushf
add
lcall
out
je
push
inc
or
inc
jmp
mov
mov
nop
mov
jmp
into
jge
faddl
sbb
aas
or
jno
pop
insl
out
loopne
and
inc
sbb
out
mov
and
imul
insl
repnz
cmp
cmpsl
int3
push
jae
sbb
sbb
cmp
mov
stos
repnz
lods
jge
test
mov
lock
dec
insb
mov
test
mov
or
and
sub
repnz
lods
lods
loop
leave
mov
test
out
je
push
push
stc
or
cld
repz
jl
loope
dec
jnp
pop
add
insb
testb
movsb
aad
sarl
pop
call
movsl
sub
in
cmp
lret
flds
test
cld
xchg
movsl
lret
xlat
test
mov
clc
jmp
iret
or
jge
push
in
pop
sahf
and
or
rclb
clc
je
mov
push
xchg
jg
jbe
gs
popf
xor
lret
cld
cmp
mov
shrb
mov
ret
repz
lods
gs
std
inc
xchg
lret
test
cwtl
fcoms
or
outsl
push
pop
or
lea
pusha
fbstp
shrb
xchg
out
leave
pusha
push
pop
sbb
cmp
jle
pop
cmp
mov
add
out
fcompl
and
dec
std
jbe
das
outsb
inc
fstps
shlb
mov
jg
inc
not
sub
xor
dec
out
test
mov
mov
ds
sub
pop
pusha
clc
xchg
inc
dec
fbstp
push
lods
in
data16
ret
add
test
push
pop
push
ljmp
jno
fmull
es
jne
push
lods
inc
xorl
xchg
arpl
mov
imul
subb
cmp
or
sahf
jl
push
in
pop
popf
and
or
iret
xchg
sub
inc
popa
clc
jae
mov
push
xchg
jg
jne
cmpsl
out
xor
leave
in
cmp
mov
mov
mov
loopne
mov
roll
xor
std
inc
test
lret
test
xchg
xlat
push
call
jmp
outsl
push
pop
or
pop
jl,pt
and
pop
fbstp
iret
stos
inc
add
leave
pusha
push
push
sbb
aaa
jne
jle
pop
cmp
mov
add
out
fistpl
and
dec
cld
jbe
cs
inc
fstps
mov
mov
aam
jg
inc
cmc
shlb
gs
xor
dec
out
test
mov
mov
cmp
pop
clc
xchg
aas
dec
fbstp
push
lods
jecxz
data16
ret
int3
xor
push
push
ljmp
jno
fisttpl
es
jne
push
lods
inc
xorb
xchg
bound
sbb
sub
cmp
pop
dec
pop
sahf
jnp
push
in
pop
pushf
and
or
xchg
sub
inc
popa
clc
jb
mov
push
xchg
jg
lds
cmpsb
out
xor
enter
cmp
mov
mov
fcomip
mov
rolb
xor
std
inc
test
lret
test
xchg
push
call
ljmp
pop
cmp
pop
fbstp
into
stos
inc
add
leave
pusha
push
add
out
cmpsb
push
cmp
mov
add
out
ficompl
and
dec
sti
jbe
sub
dec
xchg
sub
mov
jg
inc
hlt
shlb
fs
xor
inc
out
test
mov
mov
cmp
sub
sbb
ds
fildll
push
lods
loop
data16
roll
int3
xor
test
adc
push
ljmp
jno
fimull
es
dec
lods
inc
subl
lret
aam
sbb
daa
aad
iret
push
dec
pop
sahf
jp
push
in
pop
fwait
and
or
int
sub
aas
popa
clc
jo
mov
push
xchg
jg
ret
jae
movsw
in
xor
in
test
aaa
mov
mov
mov
mov
mov
adc
incb
xor
mov
test
mov
cmp
outsl
push
pop
or
pop
cmp
lea
pop
loopne
int3
stos
inc
mov
xchg
loop
lret
add
jg
push
cmp
xchg
push
popf
mulb
and
push
sub
ficompl
mov
mov
rorl
adcb
repnz
bound
xchg
mov
movsb
leave
or
jb
ljmp
mov
loopne
scas
pop
scas
loopne
addr16
mov
loopne
sbb
push
push
jmp
xor
or
xchg
pop
mov
fcmovu
jbe
dec
scas
inc
jg
std
xchg
pop
mov
sbb
and
inc
or
push
cltd
es
test
lret
xchg
sub
cmp
mov
push
popl
addr16
xor
divl
or
jno
push
ret
clc
or
cs
lods
pop
punpckhbw
inc
xorb
popa
xchg
add
jo
push
or
pop
cmp
and
lret
cld
scas
call
dec
add
mov
jo
andb
pop
sahf
hlt
movsl
pop
icebp
adc
js
sub
fistpl
mov
mov
iret
or
sbb
lock
pusha
lahf
ss
inc
lock
mov
movsl
movl
sub
sbb
xchg
mov
dec
loope
lods
sbb
mov
filds
jmp
xor
test
pop
mov
nop
daa
sub
loopne
or
inc
jge
xchg
pop
sahf
int3
arpl
jg
mov
icebp
ljmp
inc
or
push
xchg
es
test
inc
fistpl
lret
cld
cmp
insb
sbb
adcb
jo
push
adc
out
xchg
xor
dec
xchg
jno
imul
or
lods
pop
push
imul
scas
popa
xchg
xchg
rclb
add
jo
push
or
pop
cmp
and
enter
scas
add
dec
add
mov
outsb
jmp
aam
roll
repnz
pop
repnz
es
sub
fistl
mov
mov
into
or
push
pop
lahf
ss
inc
icebp
mov
push
jecxz
montmul
cmpsb
movb
ss
les
pop
cli
xchg
mov
dec
loop
stos
sbb
mov
filds
jmp
xor
or
test
pop
mov
nop
daa
daa
fabs
js
dec
scas
inc
jnp
call
into
jg
mov
out
ljmp
inc
or
push
xchg
es
test
inc
fistpl
lret
cld
cmp
push
mov
dec
mov
imul
xor
dec
test
jno
imul
loop
sub
lods
pop
push
push
inc
jl
lret
lods
popa
mov
xchg
into
push
jmp
out
jno
push
pop
lds
movsl
pop
jecxz
mov
lods
inc
clc
lods
add
dec
lcall
mov
insl
ljmp
rorb
icebp
mov
daa
mov
daa
gs
fcoml
mov
cli
call
or
push
pop
mov
mov
mov
cmpsb
lds
fnsave
sub
xchg
mov
dec
loop
stos
sbb
mov
fiadds
in
xorb
cmp
mov
ret
pop
mov
xchg
sub
fsub
js
dec
scas
inc
jp
call
int
sbb
andb
cmp
add
mov
push
xchg
daa
mov
cmpsl
out
fcoml
leave
xchg
sub
cmp
imul
sbb
lahf
ss
lock
xor
cmpsb
inc
sbb
mov
sub
nop
or
pop
scas
pop
or
xor
pop
xchg
int
ljmp
jb
push
push
lds
nop
daa
movsb
pop
jecxz
mov
scas
inc
imull
fs
pop
mov
insb
jmp
sahf
push
cmp
mov
rcll
sub
es
fstl
mov
sti
out
mov
int3
or
push
pop
mov
mov
mov
cmpsb
les
fidivs
in
les
push
cld
xchg
mov
dec
loop
test
imul
sub
xchg
cmovle
jg
movsl
cmp
mov
ret
pop
mov
xchg
sub
inc
mov
jns
call
int3
jge
mov
in
in
sbbl
cmp
add
mov
push
xchg
sub
cmpsb
in
fstl
enter
aaa
fs
push
mov
imul
das
mov
cmpsb
inc
sbb
mov
sub
xchg
pop
mov
sbb
jp,pt
int
pop
mov
xchg
int3
push
jmp
mov
cmp
push
add
xchg
sub
les
cwtl
fcoml
into
gs
std
pop
mov
imul
popf
dec
cmp
mov
rclb
sub
inc
repz
and
inc
xchg
js,pn
gs
out
mov
lret
pop
test
cmp
shrl
pop
mov
mov
rclb
montmul
cmpsb
ret
add
jbe
in
les
ss
loop
test
mov
mov
mov
faddl
out
jle
movsl
cmp
lahf
jne
roll
xchg
sub
loope
or
dec
js
call
lret
jl
mov
in
in
test
iret
cmp
add
mov
push
xchg
sub
ret
jae
push
movsl
in
ficoms
ss
sbb
mov
imul
cs
cmpsb
inc
sbb
les
mov
sbb
cmp
pop
mov
nop
lret
push
in
cld
mov
cmp
dec
add
pop
ss
sub
ret
mov
cmc
stos
add
dec
cld
pop
mov
push
test
or
rorl
sub
inc
bnd
and
dec
fists
mov
std
in
mov
lret
sbb
jmp
push
pop
mov
mov
rcrl
montmul
cmpsb
ret
ja
jecxz
les
xchg
xchg
sbb
fadds
cmp
sub
xchg
or
movsl
cmp
sahf
jbe
rolb
xchg
sub
aad
js
inc
mov
ja
call
lret
mov
jmp
test
ds
outsl
and
push
nop
sub
shll
movsb
loop
fists
xchg
sub
sbb
sbb
fldenv
mov
sub
push
pop
adc
cmpsl
inc
jg
jne
gs
mov
sbb
cmp
cmp
test
mov
cli
mov
loop,pt
jne
dec
add
pop
xor
push
in
mov
mov
repz
shlb
sti
and
lcall
mov
rorb
jp
and
loopne
inc
cwtl
das
jbe
addr16
jecxz
mov
leave
add
sbb
sbb
movsb
cmp
stos
ret
nop
adc
xor
lds
xchg
test
sbb
xchg
mov
fisttpl
out
jnp
cmpsb
cmp
into
add
sub
aad
jns
inc
mov
jne
add
enter
stos
jmp
cmp
cmp
mov
push
mov
sarl
dec
fists
lds
std
arpl
mov
dec
test
popf
xlat
mov
mov
sub
push
pop
adc
test
jge
jne
fs
xchg
sar
xchg
add
sbb
cmp
iret
cmpsb
pop
mov
mov
push
in
clc
scas
test
loope
jne
dec
add
pop
xor
xchg
sub
mov
add
inc
cli
and
cwtl
dec
aas
jge
or
ljmp
ret
jnp
and
loopne
inc
cltd
xor
addr16
loope
mov
enter
xor
aad
sbb
cmp
test
adc
loop,pn
adc
xchg
xorb
aam
imul
cmc
cmp
fimull
out
jns
cmpsl
ds
lcall
mov
xchg
sub
aam
jp
inc
mov
jae
add
jns
mov
out
test
int3
cmp
mov
dec
mov
sarl
dec
fisttps
les
std
popa
pop
mov
dec
addb
aad
cmp
mov
rclb
adc
lods
arpl
xchg
into
cld
xchg
add
sbb
cmp
iret
movsb
pop
mov
lds
imulb
jne
dec
add
pop
xor
sub
mov
out
cmpsl
add
fcoms
shlb
stc
and
xchg
dec
inc
xlat
jl
or
call
or
ret
jl
and
lea
xor
fists
xchg
sbb
xchg
hlt
mov
ret
mov
test
sub
xor
adc
xchg
xorb
in
mov
insb
add
out
ja
test
pop
cwtl
jbe
lret
pop
mov
xchg
sub
aas
mov
jno
add
les
mov
in
test
lret
ds
cmp
imul
jnp
mov
ret
cltd
xor
cs
pop
push
mov
sbb
shll
mov
rclb
adc
stos
bound
enter
xchg
mov
out
pop
sbb
cmp
shlb
ret
push
out
hlt
lods
stos
inc
ficoms
enter
xchg
sub
mov
add
psrlw
mull
mov
xchg
dec
inc
xlat
jp
or
cmc
int3
or
cmp
jl
pop
pop
dec
loope
inc
lcall
xchg
mov
sbb
sbb
cmp
cmpsb
ret
lea
test
sub
xor
adc
xchg
jg
dec
in
mov
insb
add
fmuls
out
jbe
test
pop
xchg
jbe
leave
jle
pop
mov
xchg
sub
in
add
mov
jo
add
ret
ja
mov
in
test
lret
sti
aaa
or
push
mov
sarl
dec
fisttps
cltd
xor
sub
mov
sbb
shlb
mov
and
adc
stos
popa
xor
xchg
lret
cld
xchg
std
mov
out
push
sbb
aaa
jo
shlb
ret
rep
stos
inc
fstl
or
xor
sub
mov
add
aad
shrl
mulb
mov
xchg
dec
inc
xlat
jns
or
cmc
lret
pop
sub
cmp
jl
push
pop
dec
loope
aas
lcall
xchg
mov
sbb
sbb
cmp
ret
mov
test
sub
xor
adc
jle
dec
in
lahf
sbb
rolb
cmp
and
mov
or
jne
test
pop
xchg
jbe
enter
scas
jmp
in
add
add
ret
mov
jecxz
test
ss
sbb
dec
mov
sarl
dec
fisttps
rcrl
pop
adc
dec
inc
jle
sbb
shll
mov
and
push
push
push
adc
test
lret
cld
mov
out
sbb
outsb
add
mov
rcll
stos
stos
inc
fcoml
jbe
inc
std
enter
xchg
sub
mov
add
aam
shrl
cmc
and
xchg
inc
inc
xlat
js
or
cmc
lret
ret
aaa
jmp
adc
ds
xchg
mov
sbb
pop
push
movsb
cmp
movsb
ret
mov
test
sub
xor
cmovnp
xchg
jge
dec
in
sahf
sbb
iret
subb
cmp
and
mov
or
out
je
test
pop
xchg
jbe
jl
pop
scas
call
in
add
dec
outsb
and
cltd
push
shlb
jne
mov
loop
test
ds
xor
pop
hlt
dec
xchg
sarl
dec
fisttps
rcrb
pop
adc
sbb
shlb
mov
and
push
push
or
fidivs
pop
xor
nop
leave
cld
xchg
sti
mov
out
sbb
mov
add
xor
push
mov
mov
push
out
icebp
test
jbe
inc
cld
enter
xchg
sub
mov
add
rorl
push
and
inc
inc
xlat
ja
or
cmc
leave
add
jl
sbb
dec
loope
cmp
push
dec
ret
sbb
push
push
movsb
cmp
mov
adc
sub
xor
push
dec
xchg
jl
dec
in
popf
sbb
into
subl
aad
and
inc
pop
out
jae
test
pop
xchg
jbe
jnp
pop
lods
out
sub
iret
in
add
mov
insl
and
cltd
push
mov
shlb
movsl
loope
test
ds
xor
mov
dec
xchg
shll
dec
fisttps
mov
data16
pop
adc
sbb
iret
mov
mov
and
push
push
or
stos
cmp
pop
xor
cli
mov
out
sbb
mov
add
xor
cmp
sahf
push
mov
xchg
stos
inc
ficoml
jbe
inc
sti
enter
xchg
sub
mov
add
rorb
shrl
repz
xchg
inc
inc
xlat
jbe
or
cmc
enter
xor
push
dec
loope
cmp
xor
push
dec
sar
sbb
adc
ss
mov
ret
mov
div
cmc
inc
xor
nop
or
mov
bound
xor
jno
clc
push
mov
pop
sahf
jno
sbbb
pop
xor
xchg
pop
shrb
cmp
jo
in
xchg
push
pop
sbb
cltd
incb
push
sbb
andb
dec
ja
test
xlat
sbb
xchg
xchg
jne
sarb
imulb
pop
xchg
sti
lods
sub
js
aaa
jg
mov
adc
cwtl
mov
and
in
mov
and
jno
and
lahf
jns,pt
and
jno
std
lea
in
add
ret
push
ficoms
faddp
ljmp
repnz
or
leave
push
cmp
in
or
ljmp
mov
xchg
leave
fsubrs
cmp
nop
push
adc
pop
mov
adc
subl
sbb
adc
dec
hlt
mov
cmp
stos
lret
jns
cld
dec
jg
sub
cs
fisttps
dec
ret
mov
add
push
cld
mov
pop
xchg
int
cmc
pop
sbb
rcrb
ss
cli
lods
mov
xchg
imul
jb
sub
scas
sbb
test
pop
js
ljmp
mov
inc
daa
sbb
add
out
popa
stos
js
sti
push
dec
out
sbb
gs
sbb
mov
and
cmp
mov
int
xchg
pop
pop
mov
xor
mov
fimuls
pop
dec
ja
pop
movsb
jp
adc
dec
repnz
cltd
fildl
adc
adc
lods
mov
rorl
inc
outsb
and
mov
lds
iret
jns
dec
sarb
cmp
lahf
or
dec
mov
inc
bound
aas
lock
add
add
and
add
add
and
fs
add
and
mov
fidivl
js
dec
add
int
rol
jnp
test
aad
push
mov
inc
inc
dec
xor
xchg
jg
mov
es
test
mov
in
lcall
pop
clc
clc
sbb
xchg
loope
jge
xchg
leave
aaa
pop
dec
xchg
outsl
hlt
fnsave
into
jg
cmp
xor
sub
sbb
leave
xor
fnsave
mov
scas
mov
mov
movsb
mov
shlb
pop
int
unpcklps
push
or
nop
fimuls
aam
and
mov
push
inc
inc
cwtl
mov
cs
pop
and
movsl
cmpsb
and
cmp
pop
cmp
mov
pop
mov
shll
pusha
daa
and
lahf
mov
ficompl
loop
ficompl
cwtl
xor
fwait
mov
mov
pop
loop
mov
sbb
aas
xchg
xchg
pop
and
mov
xor
jns,pt
xor
stos
ficomps
call
xchg
mov
jne
movsb
push
popa
cmpsl
add
ja
xchg
sahf
test
shlb
xchg
ds
imul
dec
inc
xchg
movsb
inc
push
jb
lea
sbb
mov
push
dec
adc
in
or
arpl
or
add
loopne
mov
push
xchg
mov
xchg
mov
aam
jp
mov
cli
inc
xchg
mov
jb
testb
sub
std
jnp
ret
inc
aam
jno
xchg
mov
je
inc
mov
mov
pop
mov
mov
add
xchg
or
pop
sub
fsubrs
popf
sbb
cmp
xlat
xor
mov
movsb
dec
pop
loopne
mov
pop
fisubs
cli
das
mov
push
adc
cwtl
pusha
popf
ds
lds
lahf
sub
clc
xor
mov
mov
popf
movsl
xor
mov
gs
push
movsl
and
les
push
sbbl
adc
lock
fcos
pop
xchg
nop
push
dec
mov
xchg
outsl
xchg
fildll
dec
add
stos
call
test
pop
lods
xchg
dec
push
ja
popf
inc
jle
inc
out
mov
arpl
rcll
push
loop
in
mov
popf
xchg
jp
push
sahf
pop
fcomps
mov
icebp
add
cli
cmpsl
mov
or
add
xor
dec
or
test
int
sub
xchg
xlat
lahf
jo
sbb
cmpsl
mov
mov
pushf
fdivs
jge
or
mov
jo
js
lret
inc
iret
or
xor
rcrb
mov
arpl
outsb
push
dec
cmp
mov
in
jle
adc
in
mov
in
jl
or
mov
cmc
cmc
paddw
and
std
inc
dec
movl
mov
add
es
daa
ss
sub
mov
out
shrl
js
push
rcrl
pop
mov
inc
and
out
mov
lods
mov
mov
xlat
push
pop
mov
adcl
fsubs
lods
push
popf
jle
dec
scas
mov
pop
jecxz
stc
mov
jp
loope
aas
sub
sbb
jbe
mov
push
jge
add
repz
push
xorb
xor
ja
jnp
xchg
pop
mov
lcall
dec
mov
in
test
cld
imul
mov
xchg
jo
in
lea
or
xchg
rorl
pop
movb
outsb
mov
cmp
and
hlt
push
mov
pop
iret
loop
mov
loopne
dec
or
pop
mov
movsb
div
loopne
dec
mov
pop
mov
xlat
sahf
or
mov
aam
hlt
daa
fimull
inc
mov
fmull
shl
inc
out
and
call
sbb
lock
enter
mov
popa
push
jecxz
push
cmp
stos
mov
movsl
pop
in
arpl
xchg
and
cltd
xchg
lret
jecxz
push
sbb
into
fisubrs
lods
push
push
mul
jge
aaa
call
pop
push
movsl
mov
stos
popa
mov
dec
add
cmpsl
lock
test
mov
addr16
es
add
fnstenv
cs
test
inc
in
mov
lcallw
shrb
mul
lds
push
sbb
stc
je
add
jmp
xor
arpl
fwait
data16
xchg
pop
mov
daa
inc
push
mov
or
mov
fwait
shl
fsubrs
fs
sbb
lret
cmp
pop
stos
je
out
xchg
test
push
mov
cmp
outsb
lock
out
outsl
xchg
in
add
add
in
cmp
sub
scas
push
inc
sbb
in
adc
pop
test
imul
push
cmp
outsl
pop
lock
mov
jns
mov
or
fs
shlb
jnp
pusha
iret
push
in
cmp
mov
jbe
mov
push
mov
mov
shlb
movsl
sarl
pushf
xor
sub
rcrb
cmp
lret
mov
xor
xchg
lahf
imul
loope
dec
push
dec
jecxz
mov
into
cmp
mov
ljmp
mov
icebp
jge
push
outsb
aad
fbstp
xchg
jo
notb
mov
ret
lcall
and
rorl
rolb
cmp
dec
and
mov
loop
in
pop
mov
pusha
dec
inc
aas
mov
or
lret
sub
fwait
pop
push
cwtl
xchg
dec
xchg
das
mov
sub
in
sbb
or
jb
xchg
xlat
sub
in
repz
mov
loopne
xor
or
frstor
dec
mov
mov
cwtl
push
cmp
js
cmp
xchg
fisubl
xlat
cvtps2pi
lock
xlat
gs
xor
add
shll
cmp
inc
incb
sub
ret
xchg
gs
rcl
lcall
mov
cmc
rorb
inc
stos
les
add
clc
mov
mov
dec
pop
fdivrp
bound
mov
dec
in
roll
sbb
mov
jmp
ficoml
leave
cs
mov
jns
dec
addl
mov
test
dec
jge
mov
cmpb
jnp
repnz
addb
or
xor
dec
xchg
fnstcw
ja
clc
adc
lret
push
sbb
mov
add
inc
push
movsb
xchg
xchg
