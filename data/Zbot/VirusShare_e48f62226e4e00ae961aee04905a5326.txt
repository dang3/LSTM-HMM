sbb
add
lods
cld
dec
mov
jns
mov
or
dec
sbb
jb
idivl
add
dec
mov
ja
leave
icebp
fnstenv
ja
sbb
push
fcomip
xchg
mov
or
xchg
xchg
fcmovbe
xchg
push
repnz
or
cmp
and
push
sti
andb
into
push
stos
xor
inc
outsl
imul
inc
dec
call
stos
test
leave
loop
ss
add
cs
jecxz
loop
pop
jae
call
lea
shl
out
out
mov
mov
sbb
sti
xchg
pop
outsb
mov
push
xor
lock
inc
push
fs
cld
mov
mov
add
jns
je
ds
mov
jmp
pop
fcmovnb
flds
cmc
inc
clc
mov
mov
adcl
xchg
fidivl
sbb
shlb
dec
lods
jmp
adc
arpl
sar
pop
imulb
jb
andl
std
dec
and
inc
push
movsb
jbe
cmpsl
xchg
cmpsl
movsb
mov
mov
jo
mov
aad
xor
mov
mov
pop
psubsb
sub
sti
pop
sub
xor
test
or
xor
mov
stos
and
pop
push
lods
fs
popf
mov
cmp
xlat
aaa
lahf
subl
sub
cltd
jmp
add
inc
int
out
loop
pop
std
lret
jne
xor
xchg
fiaddl
movsl
pop
sbb
inc
or
push
sub
mov
aaa
xor
insb
mov
nop
pushf
dec
mov
jo
int
mov
adc
jecxz
enter
xor
jne
push
fwait
or
andl
mov
dec
bound
popa
mov
mov
push
test
je
out
scas
ljmp
loopne
sbb
pushl
lods
pop
cmp
lcall
mov
mov
loop
mov
cmpsb
lahf
cs
imul
xor
push
imul
adc
in
rcl
test
mov
out
andl
push
push
cmp
sbb
into
xor
sbb
or
xchg
pop
sub
xlat
pop
pop
in
xchg
mov
je
out
pop
mov
adc
xor
or
lods
lock
jp
andl
mov
inc
loop
hlt
jmp
pop
mov
fnsave
daa
sub
adc
or
cmp
arpl
adc
cltd
dec
mov
js
add
xchg
mov
jge
lret
hlt
push
xchg
mov
xchg
sbb
pop
fldt
jmp
push
mov
clc
pop
mov
xchg
dec
pop
jge
scas
adc
gs
lods
push
pusha
push
dec
and
sub
outsb
rcll
adc
jp
js
jecxz
out
call
xorl
popf
test
cmpsl
mov
jl
cmp
inc
jbe
arpl
xor
jg
shrl
mov
and
movsb
jb
and
cmovnp
xchg
in
or
scas
setns
jp
add
dec
xchg
jne
xor
js
xchg
out
lds
in
shlb
mov
push
mov
push
and
leave
mov
sbb
stc
fstpl
dec
adc
jnp
imul
into
inc
and
xlat
or
and
movsl
mov
loop
or
shrb
mov
outsl
jg
or
out
xchg
in
and
xchg
test
adc
lea
cmp
scas
xchg
in
inc
push
call
ret
mov
pop
repnz
pop
dec
mov
fucomip
movsb
lret
mov
test
daa
fdivs
fwait
cmpsb
mov
cmpsb
lods
je
aad
fdivs
imul
outsb
dec
jecxz
cltd
addr16
or
sub
dec
fnstsw
cmpsb
cli
pop
daa
inc
mov
jae
repnz
jg
filds
cs
fmulp
loopne
add
fists
lods
jg
stos
dec
xchg
xchg
es
daa
dec
sahf
lret
fs
or
pop
mov
sub
mov
xchg
fcomps
jne
pop
mov
push
jno
dec
and
faddl
add
in
shll
add
fisttps
int
adcb
std
sahf
and
xchg
dec
scas
jno
mov
test
xor
ret
add
in
inc
push
jno
rcll
push
loopne
sub
pop
adc
ds
pop
insb
adcl
pop
push
add
jmp
cmp
hlt
adc
push
fmuls
mov
clc
out
cmp
movsl
lods
aaa
int3
into
dec
sub
dec
cs
or
divl
mov
pop
int
outsl
and
add
cmp
push
out
ss
aaa
cmpsb
mov
dec
nop
getsec
hlt
mov
fildl
into
jns
insb
mov
mov
lds
leave
jae
repz
daa
loopne
ret
clc
cmc
imulb
lods
xor
leave
xchg
je
pop
and
inc
rol
pop
jae
pop
std
and
cmp
or
push
les
ljmp
fs
xchg
or
daa
out
mov
repz
xor
popl
lods
pop
cmp
es
mov
ss
lea
push
mov
mov
popa
cwtl
adc
add
inc
dec
outsb
in
sub
cmp
pop
stos
cmp
lock
adc
iret
xchg
mov
inc
jp
ficompl
out
loopne
cmc
ret
test
lahf
sti
in
sti
clc
inc
out
pop
imulb
cmpsl
push
aad
jecxz
jg
push
adc
push
fstpl
and
jbe
cmp
in
sbb
mov
std
faddl
sbb
xchg
and
jl
aaa
xlat
jbe
mov
pop
and
and
test
repz
cld
cld
fnstenv
shrb
dec
cmpsl
ss
xchg
mov
negl
dec
mov
or
pop
movsb
test
sbbb
inc
ret
lahf
test
inc
imul
mov
jbe
sbb
enter
mov
xorl
ja
xchg
cmpsb
mov
xchg
cmp
test
inc
xor
push
xchg
fildl
jp
imul
gs
inc
pop
mov
mov
jmp
lods
iret
dec
cs
cltd
aaa
nop
xchg
inc
xchg
ss
cltd
inc
shll
sbb
pop
mov
nop
iret
popa
cwtl
inc
sbb
lahf
out
fmuls
pop
imul
pop
ds
ljmp
fcomip
pop
arpl
dec
add
jns
mov
test
imul
inc
sbb
popf
ret
mov
xchg
pop
xor
rcr
jl
inc
repz
adc
adc
imul
push
push
mov
clc
jbe
or
push
push
inc
fsqrt
mov
imul
inc
jl
xor
sbb
arpl
movsb
sbb
adc
not
mov
outsb
out
jae
fld1
cmp
push
add
stos
fistl
fisubl
jnp
iret
pushl
mov
or
mov
add
roll
mov
dec
mov
lret
push
push
lcall
dec
add
pop
out
inc
mov
push
dec
aaa
push
pop
fistpl
mov
xor
repz
mov
into
jge
popa
mov
jns
push
popa
mov
dec
sub
push
cli
adc
adc
clc
outsb
add
add
push
xchg
inc
lods
outsl
sbb
hlt
lds
xor
out
stc
mov
pop
loope
out
call
jnp
xor
and
fistpll
sahf
push
xchg
jae
loope
add
dec
loope
imul
xor
jg
mov
pop
js
dec
jnp
out
daa
mov
pop
repnz
stos
jl
ja
and
je
leave
cld
and
addr16
jno
pop
mov
dec
cld
mov
ss
inc
and
fimull
xor
adc
aaa
mov
sbb
or
subb
lds
pop
cmp
jmp
cmp
in
decb
jp
pop
push
sar
adc
aam
loope
mov
cli
lcall
lock
mov
das
and
add
sbbl
xchg
insb
jbe
sub
or
jae
sbb
sub
js
jecxz
out
repz
shl
and
fsubrs
sbb
and
and
in
or
lret
mov
xor
jae
scas
add
mov
mov
fistps
mov
sub
inc
add
iret
xor
xchg
sbb
adc
arpl
cmp
sbb
pop
es
mov
push
outsb
les
mov
aam
cltd
xchg
inc
dec
mov
out
pop
jp
enter
or
out
add
mov
aam
jns
adc
fisttpl
mov
mov
push
fdivrs
add
and
or
xchg
mov
mov
jp
loopne
insb
adc
je
insl
rcrb
bound
jns
popa
test
pushf
push
daa
adc
call
ds
fstpt
scas
js
sbbl
and
int3
sbb
pop
outsl
inc
mov
loop
adc
pop
cmpsb
enter
in
pop
mov
imul
shlb
lret
inc
stos
popa
stos
push
test
pop
shlb
je
xchg
pop
mov
sub
mov
or
mov
pop
rclb
lret
add
push
ret
or
lret
mov
sbb
mov
mov
jp
jno
out
push
inc
sbb
dec
xor
inc
inc
fucomp
cmp
cld
not
push
stc
cmp
inc
mov
js
cmp
or
cmp
cmpsb
xchg
dec
call
cltd
ret
mov
jmp
jnp
test
aaa
je
cmp
and
cmpsl
pop
dec
std
stc
es
xchg
sbb
loope
ljmp
mov
mov
dec
and
mov
ds
dec
nop
out
in
pop
std
mov
xor
push
lock
mov
dec
mov
cmp
sbb
inc
repnz
jge
ljmp
loopne
cmpsl
addr16
xor
sub
shlb
mov
sub
sahf
jp
xlat
xor
je
push
cmp
mov
add
ficompl
jns
clc
cmp
dec
jmp
push
lock
push
cmpsl
xor
add
push
xor
jno
test
or
repnz
sahf
jle
std
sarl
dec
aas
fisubl
int3
pushf
sbb
mov
out
add
int
ret
call
out
stc
mov
xchg
fsubrs
cltd
repz
mov
jo
and
stos
rolb
sub
jne
xchg
mov
push
jnp
sbb
lahf
je
inc
and
mov
inc
addr16
fsubrs
dec
adc
cli
cmpsb
push
inc
ja
shll
mov
sbb
mov
sub
sarb
push
jle
fcomip
push
pusha
pop
push
dec
xchg
lods
lahf
xor
sub
mov
iret
scas
call
stc
into
adc
mov
dec
mov
jp
addr16
jno
mov
stos
mov
sahf
adc
enter
cmp
adc
test
sti
xchg
pop
repnz
pop
lods
ret
mov
mov
mov
in
xchg
outsb
fdivrl
inc
loop
int3
push
lret
sub
sub
inc
jb
inc
test
out
pop
pop
int3
mov
test
adc
lret
xchg
sbb
xor
cmc
mov
dec
dec
ja
imul
cmp
das
pop
xchg
gs
test
pop
clc
out
jbe
mov
mov
fdivrl
iret
push
aam
data16
movsb
xchg
mov
rcrb
ds
sbb
add
pop
arpl
xor
pop
call
mov
sbbl
out
in
in
mov
xchg
or
mov
sbb
inc
jnp
cmp
ret
push
sub
in
lcall
inc
mov
js
inc
jno
sbbb
mov
jne
adc
cmp
jl
cmp
pop
iret
cmpsb
pop
in
xchg
jecxz
mov
arpl
lret
or
cltd
xchg
rorb
test
xchg
mov
pop
rcr
icebp
mov
and
mov
mov
fisttpl
negl
outsb
inc
bound
mov
fucomi
pop
insb
mov
xor
jbe
mov
mov
sbb
arpl
fdivrs
pop
add
and
mov
je
xor
jmp
ret
imul
or
or
add
daa
pop
int3
movsl
push
test
cltd
pushl
pop
mov
xor
movsb
mov
inc
loopne
pop
add
xor
mov
adc
enter
imul
mov
add
pusha
inc
cs
adc
xchg
mov
jl
lds
test
lods
push
mov
loope
and
pop
ret
xchg
or
xor
add
lods
mov
nop
dec
mov
stos
in
das
xchg
lods
ja
mov
mov
imul
fists
fsubrl
popf
hlt
or
scas
andb
adc
fildl
movsl
gs
cmp
sub
mov
neg
lret
cmpb
rcr
sbb
or
add
fisubrs
fwait
cmpsl
popf
inc
and
les
mov
add
and
mov
mov
testb
fwait
dec
jp
imul
mov
in
push
outsl
xor
stos
nop
scas
adc
cmpl
dec
mov
mov
sti
push
sbb
decl
in
and
pop
mov
popa
lahf
dec
jl
dec
dec
sar
das
sub
or
popa
gs
and
or
aam
mov
xor
popa
not
push
imul
lcall
test
jb
decb
fildll
insl
int
jne
cld
sub
into
mov
mov
clc
cmp
mov
mov
pusha
add
mov
xlat
xchg
pop
mov
mov
mov
pushf
lret
cmp
arpl
fstps
cmp
stos
jo
jp
or
lods
adc
pop
or
xchg
mov
outsb
push
cmpsb
adc
dec
and
mov
jmp
sbb
cmp
mov
gs
insl
jle
stos
shll
adc
test
cmpb
outsl
daa
loop
pop
pop
jb
lret
enter
push
pop
pop
fs
mov
rolb
push
lahf
push
in
addr16
and
pop
jl
fcoms
data16
pop
mov
repnz
arpl
in
push
sub
pop
outsl
dec
mov
aaa
cmpsl
add
xor
mov
pop
jbe
icebp
mov
xor
sub
jno
inc
jne
outsl
push
and
cmp
add
mov
dec
xchg
stos
icebp
scas
push
add
ja
adc
push
push
and
lret
lret
mov
out
not
xor
jle
dec
ror
test
inc
inc
and
mov
push
push
repnz
arpl
out
mov
pop
pop
hlt
and
ffreep
call
pop
mov
testl
mov
jle
fs
sub
addl
jp
test
repnz
sbb
cmc
icebp
call
mov
scas
mov
mov
sub
clc
sbb
popf
icebp
insb
in
adc
popa
iret
idivl
fisttpll
jo
sbb
inc
push
mov
pop
icebp
outsl
cli
sub
loope
clc
lds
nop
cs
dec
pop
xchg
pop
ds
fsubs
fmuls
dec
jmp
bound
hlt
cltd
push
movsb
xor
cmpsb
xchg
repnz
mov
jg
mov
jo
push
mov
cwtl
shrb
jo
fists
sub
or
lcall
call
push
sub
insb
aad
fcmovne
push
push
ja
cld
cmpb
in
out
xor
out
mov
adc
call
bound
sub
mov
addr16
adc
hlt
or
pop
cwtl
lds
jo,pt
das
repz
dec
xchg
cwtl
xor
jge
sub
jle
in
and
xchg
mov
ret
shll
xor
test
ret
jl
jb
cmc
fcmove
imul
xor
fdivrs
jmp
out
out
das
mov
test
lahf
mov
lea
xchg
or
pop
push
xchg
rcrl
xor
jb
loope
dec
push
js
sub
mov
pop
inc
sbb
mov
pop
mov
pop
sti
outsb
lods
xchg
or
mov
cmpsl
and
mov
adcb
and
push
movsl
ja
cmp
dec
adc
lcall
stos
mov
inc
jge
cli
cmp
fs
mov
jns
xor
aaa
mov
call
lcall
cli
rcrb
repnz
je
repnz
sub
rcrl
pop
cmpl
jnp
aam
clc
stc
inc
fs
jmp
jmp
pop
mov
jecxz
loope
or
cmp
and
cmp
push
movsl
ret
xchg
mov
stc
movl
daa
adc
popa
std
or
sub
pop
push
pop
popa
scas
lret
das
lods
popf
sub
dec
fisubrs
sarb
fs
filds
push
cmp
dec
mull
sbb
repnz
fcoml
mov
fwait
int
jmp
int
and
sub
xor
addr16
repnz
lahf
jne
and
inc
not
imul
xor
cmp
enter
mov
test
mov
pop
fisttpl
adc
push
dec
xchg
sub
int
cwtl
outsb
rcrb
ja
inc
sub
mov
imul
ja
fmulp
aaa
notl
or
hlt
mov
mov
inc
test
nop
dec
mov
sti
jns
pop
dec
test
or
push
xchg
gs
fdivrs
mov
pushf
cmpsl
mov
add
push
xor
test
xor
push
mov
cli
outsb
in
fs
aas
ret
adc
enter
icebp
stos
out
test
ds
movsl
pop
push
or
cmc
popf
pop
cmp
cmp
sub
xchg
nop
fistpll
mov
divl
adc
gs
push
pop
mov
dec
out
cmp
stos
hlt
roll
push
jb
mov
cmp
dec
xchg
lret
xchg
addb
pop
aad
mov
or
adc
mov
test
jl
cmpsl
hlt
imul
dec
mov
mov
fwait
int3
fnstenv
call
loop
or
sarb
loopne
lahf
mov
loopne
aaa
sbb
push
adc
sbb
inc
cmp
xchg
dec
pop
loop
and
rol
jo
rcll
adc
xchg
sbb
mov
or
pop
push
call
jnp
lods
aad
push
add
push
lods
js
test
cwtl
push
push
and
xlat
cltd
shll
add
pop
pop
fstps
cmp
xchg
aas
repnz
scas
js
or
idivb
push
mov
fstl
mov
and
jp
xor
out
lods
popa
enter
fs
mov
js
mov
inc
js
test
lods
mov
xorps
pusha
dec
mov
jno
pushf
jae
popa
mov
lock
fistpl
xor
mov
jbe
xorl
jno
dec
test
imul
std
xor
add
cmp
pop
lret
dec
lea
aas
dec
popf
xor
je
inc
xchg
push
or
sbb
mov
cmp
aas
sbb
in
xchg
and
jp
inc
aaa
lretw
jp
push
push
lret
out
cmp
testb
in
addr16
jl
pop
aad
mov
push
mov
jl
and
enter
pop
dec
xorb
pop
pop
loop
inc
out
aas
cmc
push
mov
hlt
lods
in
jge
stc
sub
lods
test
lahf
xchg
and
ret
notl
sbb
and
mov
sub
jae
in
enter
test
sti
push
int
es
adc
add
adc
loop
and
movl
dec
hlt
dec
or
cmc
test
pop
inc
sbb
cltd
add
rcr
sti
mov
in
sub
imul
lods
mov
cmp
aaa
and
add
insl
clc
mov
xchg
mov
mov
je
xchg
add
imul
test
jmp
cmc
push
add
pop
pop
insb
rorb
pop
mov
inc
mov
jmp
dec
jne
pop
cli
je
insb
push
cltd
push
push
pop
add
cmpl
icebp
shl
pop
rorb
test
or
jbe
dec
lods
jbe
js
dec
dec
add
imul
pop
and
mov
insl
repz
pop
inc
xchg
xchg
mov
int3
inc
int3
aad
adcl
inc
mov
dec
std
pop
das
xchg
std
xchg
icebp
jge
notl
cmpsb
js
pop
jb
test
pop
or
push
cmp
sbb
shl
add
mov
push
lret
mov
popf
push
je
jbe
inc
or
and
mov
sarb
pop
cmc
mov
sbb
lcall
js
outsl
xchg
mov
js
ds
mov
es
push
fildl
pop
mov
xchg
jbe
insl
pusha
aam
outsb
dec
mov
stos
pop
call
inc
roll
ljmp
pusha
ret
fldenv
ds
loope
pop
lods
fdivs
jecxz
cmp
dec
sub
pop
inc
loopne
and
dec
mov
cmpsb
fimuls
in
mov
and
pop
push
sti
test
dec
jbe
dec
popa
mov
push
sbb
leave
out
aam
mov
ret
jge
lods
rcl
inc
imul
js
stc
and
aas
or
dec
xchg
daa
and
jnp
xor
pop
jb
dec
daa
adc
jae
daa
xchg
dec
cmp
shl
mov
cmp
dec
cmc
out
cltd
jnp
iret
cltd
mov
mov
lret
mov
clts
nop
out
repz
sbb
int3
push
mov
cmp
test
jnp
lret
out
jae
mov
sub
mov
fsub
push
lret
cmpsl
inc
fdivrl
push
mov
enter
leave
scas
pextrw
je
cmp
pop
xchg
rcrb
adc
pop
push
add
shll
int3
mov
jmp
imul
or
popa
add
and
pop
inc
add
js
stos
sti
dec
fucomi
push
mov
es
sbb
daa
pop
ret
lods
lods
arpl
sbb
test
sbb
xchg
mov
repz
ds
fidivl
xchg
arpl
mov
xrelease
add
lret
and
fs
pop
adc
jge
sub
mov
add
pop
mov
push
in
fists
mov
scas
add
mov
mov
xor
insb
pusha
icebp
xchg
xor
scas
jo
xchg
dec
dec
out
jecxz
pushf
aaa
push
dec
ficompl
andl
dec
int
jns
or
into
test
call
test
mov
ss
int3
or
and
dec
sbb
mov
test
pop
mov
adc
pusha
jae
es
jnp
enter
mov
pop
mov
stos
pop
cmc
scas
pop
dec
inc
cmp
movsb
sbb
cmc
cmp
push
imul
mov
fisubrl
jns
std
or
push
jecxz
jae
mov
out
gs
sbb
mov
jbe
cmpsb
lods
xchg
push
aam
cs
push
adc
mov
movsl
iret
aad
pusha
pusha
xchg
jecxz
cs
pop
push
int
aam
popa
push
lock
loop
les
xchg
fsubr
xchg
test
dec
ja
dec
inc
pop
test
outsl
aad
iret
mov
xor
divl
sti
fucomp
lea
mov
movsb
inc
out
cmp
imull
sbb
out
shll
fwait
inc
mov
xchg
into
call
das
cmp
sub
inc
imul
xchg
xchg
aad
imull
cwtl
lock
aas
xor
sub
js
push
test
xchg
jb
scas
jnp
add
cmpsl
sub
std
stc
cmpl
cmpl
popf
and
test
jl
hlt
andb
xchg
mov
jecxz
jmp
xchg
or
movsl
aam
loopne
repz
pop
lds
jbe
sbbl
cmp
xchg
rclb
xchg
mov
jmp
lret
lcall
jbe
mov
scas
sbb
jle
xor
mov
loop
lcall
sbb
xchg
push
fistl
inc
add
or
push
lcall
into
adc
shl
add
mov
imul
icebp
inc
jmp
repz
or
arpl
incb
outsl
nop
decw
mov
mov
jns
sbb
test
pop
arpl
shrb
pop
dec
mov
xlat
lods
pop
or
out
pop
imul
imul
arpl
movsl
idivl
test
sbbb
insb
sbb
test
into
push
or
add
inc
aam
les
iret
dec
hlt
stos
or
scas
xchg
mov
mul
jge
inc
jbe
push
testl
jp
in
pop
add
xchg
inc
lret
call
adc
inc
es
mov
scas
shrl
mov
xlat
call
xchg
lea
adcb
and
adc
inc
push
push
cmp
add
inc
adc
mov
sbbl
inc
movsb
pop
int3
aad
mov
cmpsl
out
adc
sti
imul
mov
dec
in
ds
lcall
add
or
push
cmp
jbe
jmp
mov
pop
stos
jmp
pop
ja
dec
test
sub
lret
imul
adc
lea
sbb
cmp
imul
mov
sahf
arpl
cmp
jo
mov
lea
sbb
adc
je
cmp
clc
pushf
cmp
adc
jmp
stc
rcrb
pop
inc
les
or
adc
jmp
dec
inc
push
mov
int3
mov
pop
jae
cli
push
xor
push
cmc
aam
mov
push
add
stc
mov
xchg
mov
jb
inc
jl
popf
dec
mov
fdivp
das
mov
add
jae
movsb
rolb
mov
stos
out
test
add
adc
and
nop
adc
lcall
xor
sub
adc
hlt
add
rclb
aad
and
icebp
out
daa
je
loope
fcompl
push
pop
xchg
mov
mov
jp
pusha
pop
sbb
out
int3
cmp
mov
adc
sahf
in
imul
aaa
inc
pushf
or
jp
stos
popf
lds
xor
cmp
repnz
dec
aad
sbb
ljmp
mov
cwtl
cmp
out
pushf
sti
ret
sub
push
jns
mov
cmp
xor
pop
cmp
ljmp
xchg
andb
mov
xchg
mov
xchg
inc
arpl
sbb
mov
cld
inc
or
andl
pop
push
push
mov
out
jae
lods
sbb
jo
mov
cmp
mov
out
imul
cmpl
xor
inc
xchg
mov
xor
mov
adc
and
cmp
xchg
dec
ss
test
adcb
lea
movsl
testl
aam
xchg
cld
inc
movsl
rcl
lcall
fcmovu
and
and
mov
rorl
xor
mov
mov
or
sbb
push
out
sbb
sub
xor
or
inc
sub
push
jbe
addr16
mov
dec
dec
adc
xor
push
cmpsb
movsl
arpl
test
cmpb
jecxz
inc
sub
out
xchg
jnp
or
lock
adc
xchg
mov
fstl
dec
ss
push
dec
fldcw
or
repz
and
xor
inc
nop
out
out
mov
adc
fists
aam
xor
mov
jecxz
lcall
out
lods
test
aad
dec
pushf
idiv
cli
mov
jno
int3
dec
adcb
inc
faddp
push
push
repnz
out
push
and
leave
scas
or
pop
pusha
and
test
sub
cmp
dec
dec
push
dec
fiadds
lret
pop
lret
out
movsb
pop
pop
addr16
adc
jbe
add
bound
aas
cmpsb
lret
dec
data16
sbbl
sbbl
in
loop
lods
popa
stos
repz
nop
xchg
dec
pop
fsin
jno
mov
mov
loop
push
aad
stc
cld
dec
adc
cwtl
inc
sbb
sbb
push
mov
xor
sbb
push
jge
in
add
jle
jb
dec
fwait
pop
scas
mov
pop
fnstenv
jno
mov
pop
jle
push
sahf
out
adc
mov
pop
std
in
ljmp
in
adc
loope
xor
push
cmpsl
sbb
sarl
leave
jns
daa
pop
bnd
addb
mov
movsl
in
int3
push
lea
jb
std
ds
aaa
insb
orb
pop
adc
jnp
add
mov
mov
ret
dec
fidivrs
mov
jne
fs
std
or
and
and
sbb
enter
xor
lea
mov
decb
je
xor
ja
loope
lret
popf
scas
jp
inc
fdivs
bound
xchg
jnp
sbb
clc
lods
pop
mov
sbb
sbb
add
mov
xor
xchg
popl
js
cmpsb
xchg
add
das
repz
iret
test
mov
cmpsl
jnp
call
xor
mov
shll
repz
in
sbb
addl
xchg
paddsb
mov
jg
scas
iret
pop
push
int3
jp
xchg
bts
mov
adc
andb
mov
rep
xchg
push
jb
mov
adc
imul
mov
dec
jmp
test
lds
mov
pop
into
jnp
aad
icebp
test
fs
aas
nop
pop
orb
mov
ds
scas
push
sbb
inc
xor
dec
insb
mov
add
es
add
sub
fisubs
xchg
inc
pop
outsb
and
xchg
mov
into
mov
xor
sbb
pop
nop
les
jbe
sub
notl
fsubs
xchg
lock
add
cs
bound
movsb
stos
stos
cmp
mov
jmp
sub
fwait
scas
push
sub
sub
xor
iret
das
scas
mov
ljmp
scas
cltd
mov
imul
pslld
xchg
lcall
push
cmova
jbe
pop
cmp
push
cmp
inc
inc
xor
jb
test
scas
daa
adc
fisttpll
pop
sti
dec
jb
pop
lret
mov
jle
jo
movsl
pop
and
out
mov
cmp
sub
aaa
jb
mov
push
cmp
jl
dec
iret
arpl
xchg
jp
mov
sub
pop
fbstp
repz
jo
int
cmp
fistpll
ficompl
lret
mov
fwait
add
xor
sbb
inc
in
icebp
push
jg
stc
adc
mov
or
pusha
ja
xchg
out
dec
les
in
mov
sbb
ja
jge
mov
mov
int3
xchg
mov
lcall
mov
xchg
cmp
adc
sbb
and
inc
rclb
jo,pt
lea
rdtsc
sbb
mov
addr16
jne
mov
xor
je
lcall
mov
push
xchg
sbb
pop
addr16
add
xchg
mov
loope
mov
or
jae
leave
pushf
xchg
int3
mov
mov
xchg
cwtl
andl
inc
in
mov
pop
cmp
stos
xchg
mov
fiadds
int
cmp
mov
test
jo
xor
fstpl
in
adc
loopne
pushf
sarl
sbb
sub
sbb
cld
movsl
add
push
repnz
into
mov
push
xor
mov
xchg
lret
ret
out
cmp
lret
dec
cmpsb
aaa
adc
test
ljmp
push
cmc
sbb
shll
sahf
fs
inc
and
je
jl
or
cmp
rclb
inc
jns
lds
cld
cmp
mov
or
cmc
lcall
notl
faddl
lcall
into
rclb
sub
cmp
icebp
scas
jge
inc
loope
movsb
testl
sub
pop
sbb
cli
push
add
shll
ss
add
add
rcll
js
or
dec
loopne
sub
inc
jo
addl
mov
jmp
adc
mov
mov
sbb
in
je
stos
icebp
cltd
outsb
or
cltd
das
xlat
inc
inc
test
mov
out
mov
mov
sub
pop
subl
aaa
mov
fadds
dec
cmpsb
xor
mov
jb
sbbb
addr16
sub
std
inc
arpl
adc
sbb
add
outsb
aam
ja
mov
repnz
pop
aaa
pop
lock
addr16
fsubr
imul
mov
xchg
push
mov
cmp
pop
cmpsl
repz
or
iret
shlb
rolb
mov
pop
fbld
pop
call
or
mov
cld
push
arpl
dec
rclb
test
loopne
mov
fisttps
mov
mov
jae
lods
xlat
insl
jae
ljmp
mov
movsb
mov
jnp
in
roll
lahf
cmpsl
movl
jae
leave
dec
into
xor
mov
shlb
lret
call
in
jbe
sbb
jp
xchg
loopne
pop
into
or
fwait
aam
cli
sti
inc
repz
repnz
aad
addr16
and
cmp
rorl
xor
aaa
std
push
loope
dec
ret
add
shr
sub
mov
scas
xor
repnz
fldl
xchg
xchg
pop
mov
lds
std
leave
test
mov
dec
mov
enter
push
or
push
sub
add
xchg
leave
std
sub
xor
pusha
arpl
lret
aad
outsb
or
cmp
imul
cli
repz
icebp
iret
push
faddp
ja
pop
mov
lcall
pushf
cli
pop
xor
push
xchg
test
inc
lret
xor
mov
cmp
xchg
inc
int3
push
movsl
ja
xchg
mov
clc
push
add
mov
cmpsl
mov
inc
dec
adc
sbb
xlat
dec
mov
fisttpll
mov
add
out
xor
es
popf
test
out
out
and
push
cmpsb
or
mov
jl
inc
scas
arpl
aaa
or
pop
enter
inc
jp
loop
inc
pop
fcmovnu
dec
into
das
gs
or
jge
movsb
int3
sbb
xlat
add
cmp
loope
cmp
and
stos
loop
jp
dec
enter
sub
repnz
sbb
orl
mov
imul
or
popl
jle
jp
nopl
mov
fnstenv
push
das
ds
or
pushf
sub
jbe
sahf
lock
in
test
jns
popf
in
pop
jl
ret
test
les
iret
and
stos
dec
xchg
scas
mov
mov
cltd
rorl
xor
imul
ficoms
dec
add
cmp
test
outsl
movsl
jp
mov
je
and
in
popf
mov
xchg
jg
pop
cmp
inc
add
fidivs
repnz
adc
pop
test
xchg
aad
test
shl
pop
in
cltd
mov
sub
add
and
aas
xlat
or
daa
pop
push
fstpt
xor
test
inc
sbb
dec
sub
loope
incl
mulb
loopne
rcl
dec
and
adc
push
sub
loope
mov
sahf
and
loope
lods
pusha
shlb
xchg
pushf
push
fnstenv
mov
push
cmc
jl
mov
and
mov
mov
cmp
aad
test
fwait
pop
jmp
fcoms
xorl
pop
dec
push
xor
and
into
fdivs
cltd
sub
fildll
das
mov
lahf
jne
jbe
inc
jae
jecxz
inc
xchg
pop
adc
inc
cmc
jnp
pop
cmpsl
sub
mov
mov
out
inc
bswap
ds
xor
rcrb
js
mov
adc
xchg
cltd
int3
xchg
mov
jl
dec
aam
xchg
out
push
adc
cmpsb
pop
cmovl
sbb
mov
fnsave
or
loop
ss
and
sub
xchg
xor
jbe
xchg
into
push
das
jb
lds
mov
push
jne
test
or
cmovl
dec
sub
fcomi
scas
sahf
jg
and
mov
lcall
into
in
push
test
inc
rcrb
jge
xchg
rclb
hlt
pop
mov
pop
mov
lret
mov
sahf
dec
dec
in
sbb
sub
push
add
push
pop
je
mov
add
shll
mov
cmc
insb
pop
adc
sbb
jno
divl
shl
and
faddl
mov
movsb
jbe
hlt
out
jp
lock
inc
mov
out
mov
xchg
sarl
xor
lea
xchg
jb
mov
mov
int
jbe
cmp
lds
andb
shll
jecxz
outsb
or
stc
movb
mov
xor
rorl
mov
pop
mov
and
dec
fs
int
sub
jo
mov
xchg
clc
or
ja
clc
mov
sbb
sbb
pop
and
pcmpgtw
movsb
lahf
xor
or
jbe
stc
adc
add
cli
mov
pop
pusha
jae
repz
testl
mov
dec
jae
pop
test
jb
lds
push
xchg
xchg
movsb
dec
xor
push
fimuls
addr16
xor
push
mov
dec
xchg
in
adc
adc
loopne
mov
mov
push
fldl
subl
not
ret
and
jmp
jb
mov
test
xor
adc
jo
pop
repnz
adc
jnp
cmpsb
icebp
ss
jge
mov
shlb
xor
repz
pop
jns
xlat
pop
inc
daa
cmp
pop
or
ja
jns
mov
clc
mov
ds
arpl
mov
mov
mov
pop
inc
mov
in
cli
ficompl
arpl
pop
leave
mov
bnd
inc
stc
test
jno
pop
cmp
fucomi
int3
lea
push
loop
xchg
mov
mov
fwait
lret
mov
mov
inc
shll
sub
out
ja
mov
ret
xor
in
xlat
xchg
repz
je
jb
pop
aam
es
sbb
jg
pop
scas
mov
insl
xchg
cmp
int3
push
push
sti
lock
or
sbb
adc
out
adc
mov
icebp
mov
adc
fs
mov
dec
xchg
lea
fs
jno
inc
dec
and
inc
mov
movsb
inc
and
jmp
jge
sub
stos
inc
int
imul
imul
sbb
int
push
or
or
jbe
lret
scas
inc
iret
popa
xorl
clc
adc
inc
fdiv
push
inc
mov
leave
dec
push
xlat
xor
jae
outsb
add
sbb
or
push
add
xchg
sbb
test
and
popf
push
inc
stos
jle
ficompl
out
jmp
jnp
xchg
pop
jne
mov
lcall
popf
je
xchg
adc
shl
sub
jo
ret
fwait
es
sub
and
daa
int3
es
mov
inc
imul
mov
and
lahf
stos
sub
fistpll
addr16
push
xor
ss
and
dec
and
popa
pop
and
sahf
fs
fcomps
sub
cld
dec
addl
mov
dec
mov
cmp
ficompl
loop
nop
jb
jbe
subl
mov
jl
xor
pushf
insb
insl
ds
pushf
sub
cs
roll
insl
pause
sub
xchg
outsl
orl
jecxz
mov
add
inc
dec
mov
xor
mov
rolb
sub
repz
lahf
dec
adc
loope
push
imul
ds
in
jle
test
imul
inc
inc
push
rcll
inc
call
leave
andb
lock
xchg
imul
cmpl
js
fs
loop
inc
int
scas
imul
pop
sub
cwtl
push
negb
shll
inc
div
enter
adc
pop
popw
repz
dec
inc
in
jl
js
xchg
add
icebp
cmpsb
pusha
ja
inc
xchg
inc
int
arpl
sbb
andb
xchg
adc
cltd
push
pop
leave
imull
mov
mov
in
xlat
push
mov
jecxz
out
rcl
pop
fcoms
jns
mov
mov
mov
mov
addr16
sahf
or
std
jge
pop
cmp
or
das
mov
jg
loopne
jns
fstpt
sbb
repnz
push
iret
clc
inc
stos
inc
aam
in
aaa
and
inc
out
cld
push
xchg
sub
in
inc
inc
popa
xchg
sub
ljmp
add
daa
pushf
pop
add
stc
and
leave
or
push
in
or
mov
inc
sar
adc
stc
int3
cwtl
imul
outsb
dec
lcall
inc
jge
and
jns
int
stos
and
jmp
jne
sarb
cltd
adc
jmp
or
dec
mov
lret
aad
jecxz
mov
and
nop
push
xor
xchg
fnsave
insb
and
mov
and
add
popf
cmp
aas
repz
imul
cmpsl
int3
sub
pop
je
add
xor
sbb
and
fistl
imul
and
outsb
ret
mov
or
nop
mov
setp
add
ror
and
fldenv
mov
js
lock
ret
push
inc
dec
jae
dec
cmpsl
andb
and
inc
or
repnz
imulb
icebp
push
adc
mov
or
push
js
adc
imul
jge
mov
cwtl
inc
scas
ss
push
cmp
or
insb
inc
sbb
sub
cli
aam
xor
add
dec
icebp
scas
cltd
cmp
flds
mov
imul
cmp
mov
fcomi
aam
stos
push
sbb
test
sbb
cltd
fimull
enter
and
dec
push
ljmp
cmpsl
aam
mov
int
call
or
add
jl
dec
push
cld
insb
mov
push
mov
jp
mov
or
sub
inc
test
dec
fcmove
push
aaa
sbb
outsb
pop
push
lea
inc
faddl
cli
lret
adcl
loop
js
nop
in
dec
cmp
fbstp
iret
inc
js
cli
out
xchg
cmpsl
and
stos
push
scas
fadd
movsl
in
xchg
jae
test
pop
and
mov
int
mov
jo
sbb
add
inc
jnp
fistps
xchg
push
push
decb
loope
mov
cwtl
push
loop
das
es
cmpsl
push
movsb
pushf
out
int
and
movsl
pop
and
sbb
xor
es
jle
push
out
sbb
xor
lds
cli
cmove
and
cmc
push
dec
bound
cmc
push
xchg
lods
mov
and
int
and
or
jl
lahf
test
test
jge
aad
sub
or
enter
rolb
inc
jnp
rclb
jle
push
aaa
je
mov
pop
or
mov
or
imul
pop
fstps
ja
loopne
adc
sarl
shrb
ljmp
enter
push
imul
ret
mov
add
xchg
fs
scas
subb
xchg
testl
shll
pop
cs
adc
lock
pop
add
scas
aaa
mov
mov
movsb
testb
imul
dec
aad
and
push
pop
jbe
sbb
add
jle
lret
loop
xchg
xor
pop
cld
add
in
pusha
xor
loop
les
jns
fbld
mov
mov
jg
adc
inc
faddl
jnp
cli
lods
repnz
jno
xchg
and
imulb
popf
inc
lcall
test
fldln2
push
xchg
out
imul
xchg
bound
les
mov
add
xchg
dec
sub
repz
js
jnp
outsb
aam
sbb
adcl
mov
adc
push
xchg
lahf
cmp
xor
sbb
jne
jne
mov
int3
loope
scas
rorb
xchg
lock
test
pop
cmp
iret
outsb
dec
mov
sbb
ret
popf
stc
xchg
cmp
pushf
insl
inc
mov
imul
cmp
outsb
out
call
pop
xor
jmp
repz
das
xchg
cmp
in
pop
pop
xchg
mov
out
movsl
mov
lret
xchg
test
jno
fnsave
xchg
clc
js
sahf
test
mov
xor
enter
xchg
mov
jl
xchg
sbbb
sti
ljmp
rorb
shrb
lcall
mov
jo
xchg
loopne
jge
xchg
int3
inc
jecxz
pop
sub
pop
fnsave
aam
sbb
mov
and
rorl
mov
push
addl
mov
mov
xor
sbb
cmpsb
aam
sub
dec
push
call
cmc
iret
add
ret
insb
sub
test
shlb
ret
sub
dec
push
mov
add
stos
fsubl
xor
mov
jns
xor
sbb
iret
aaa
pop
imul
imul
movsl
lcall
xchg
adc
cld
xor
inc
push
jmp
aam
sbb
adc
xor
xchg
lods
lcall
and
pop
addr16
into
das
fldl
test
fdivrl
xor
std
mov
pop
jns
inc
ljmp
cltd
aas
outsb
pop
pop
out
mov
stc
mov
loope
insb
mov
sub
pusha
push
adc
sub
mov
mov
std
or
jbe
mov
jge
mov
lret
pop
ss
mov
cmpsb
in
cmpb
cmpsl
dec
and
rcr
push
push
mov
pop
cmpsl
mov
loop
xchg
mov
sub
jnp
outsb
outsb
dec
sbb
push
cld
jns
out
lret
aam
adc
fidivrl
loop
addb
mov
cs
jo
pop
testb
popa
pop
jnp
shrl
movsb
lea
jnp
out
pop
icebp
sbb
inc
aam
mov
movsb
or
mov
jo
andb
add
insl
mov
jns
lea
test
enter
mov
mov
push
std
iret
and
mov
int
add
pusha
mov
outsb
daa
ret
mov
jecxz
xchg
icebp
enter
loopne
xchg
shl
es
pop
push
sub
dec
adc
mov
fcmovu
mov
popf
ds
jno
inc
fisttps
loope
loopne
mov
sete
mov
icebp
cmp
push
aaa
jb
lods
jg
add
pop
ret
add
ficomps
pop
popf
pop
mov
xchg
sbb
mov
push
inc
push
popa
mov
lret
fisubrs
adc
cmpl
cs
shll
ss
rorb
jp
shrl
fildll
cltd
cwtl
mov
dec
cmp
mov
clc
push
cmp
sub
insb
lods
mov
sahf
repnz
mov
out
pop
mov
jne
popf
les
mov
jp
inc
ret
aaa
repz
je
add
dec
jmp
call
fcoms
adc
nop
sbbb
rorb
inc
or
pushf
dec
out
jle
ficomps
or
negb
data16
mov
mov
lea
pop
pop
lock
es
pop
cld
outsl
jo
repnz
jns
jp
cs
jmp
adc
dec
outsl
sub
xlat
or
mov
cmp
scas
stos
mov
mov
repnz
test
aaa
addl
or
sbb
mov
dec
or
mov
lds
inc
add
das
loop
lock
ljmp
push
inc
outsl
and
dec
lods
ja
push
mov
fmull
leave
aam
xchg
roll
and
dec
aaa
inc
xchg
nop
popf
xor
jno
and
sar
push
or
push
xchg
test
das
hlt
nop
jle
adc
jmp
lret
jnp
popa
pop
push
es
loop
out
jle
and
pop
mov
inc
mov
es
mov
ja,pt
sbb
out
xchg
les
jnp
cs
add
inc
aam
out
orb
cmp
cmp
dec
rclb
call
dec
and
add
sti
shrb
sbb
pop
push
jae
mov
xor
or
mov
mov
call
push
call
xchg
add
loope
inc
scas
xchg
repnz
out
adc
mov
sbb
pop
lahf
and
pop
mov
outsl
mov
lea
lea
mov
aaa
loope
std
and
mov
jb
jne
fcomip
fdivrs
inc
lahf
mov
jg
js
std
mov
int
xchg
mov
sbbl
dec
call
test
movsl
imul
inc
sub
nop
daa
jge
adcb
popf
imulb
negl
lods
sub
repz
xor
or
push
pop
mov
arpl
sti
and
xlat
pusha
lret
mov
out
push
cmpsl
push
pop
loopne
or
pop
ds
es
cmpsb
push
xorb
ror
pop
enter
cwtl
jle
es
orb
or
mov
orl
sahf
shlb
inc
add
out
cmc
dec
bound
lret
daa
sub
dec
test
dec
les
lret
fmulp
adc
dec
fstpt
inc
or
shll
cmp
mov
pop
test
sarl
out
jge
pop
adc
xor
loope
dec
dec
fwait
pop
int3
lcall
dec
stos
addb
rolb
push
int
sub
xor
call
dec
xchg
out
lahf
push
fildll
mov
and
mov
incb
mov
or
pop
dec
insl
mul
cmp
inc
icebp
sbb
cmp
dec
mov
and
pushf
add
cmpsl
jmp
fdivl
dec
fcoml
jno
or
adc
xchg
rcr
cmp
mov
mov
int3
pushf
into
add
dec
sub
fs
sub
in
das
outsl
mov
scas
jno
sbb
sbb
or
aaa
movsb
xorb
outsb
shlb
push
shl
ss
pop
lock
into
xchg
xor
fst
push
mov
mov
jl
sbb
pop
shrb
xchg
push
or
xor
in
inc
pop
movsb
rcll
adc
mov
dec
jo,pt
mov
icebp
call
dec
pushf
inc
enter
adc
enter
test
fs
sub
jmp
icebp
mov
es
adc
ror
dec
sti
mov
xchg
pop
xchg
push
enter
movsl
or
dec
or
pusha
mov
adc
xchg
gs
pop
xchg
fs
mov
mov
sub
inc
push
dec
pop
dec
out
push
inc
xchg
pop
jbe
insb
call
sbb
test
insl
mov
stos
aaa
je
and
push
icebp
fnstenv
scas
incb
add
or
push
cli
add
movsl
sbb
mov
je
sti
mov
pop
or
dec
mov
ret
mov
xchg
pop
in
mov
adc
icebp
pushf
push
fnstenv
jb
cmp
scas
mov
notl
imul
icebp
lock
mov
lock
xchg
sarb
push
push
cmp
ret
mov
sub
iret
mov
enter
cli
dec
cmp
jecxz
mov
sbb
ficoml
mov
add
jge
stos
stos
inc
or
pop
call
sub
xor
pop
es
push
gs
cli
dec
mov
sahf
sub
xchg
sbb
push
pop
fistpl
dec
stos
xor
cmp
cmc
xor
arpl
mov
inc
jge
and
jmp
aam
leave
psubb
nop
jae
cmc
outsl
add
and
aam
sbb
inc
fnstcw
es
in
mov
adc
dec
fwait
stc
adc
dec
sahf
es
jge
popf
push
pop
enter
loop
cmpsb
out
idivl
adc
cmp
leave
mov
int
jne
dec
sahf
mov
fstl
in
pop
xor
push
loope
scas
xchg
cltd
pop
adc
aam
fimull
inc
mov
scas
mov
loopne
ficoml
enter
ljmp
sub
xchg
fcos
push
shrl
pop
pop
push
aaa
sub
scas
in
cmp
mov
imull
push
sti
ljmp
mov
enter
leave
sti
adc
mov
push
out
dec
pop
xchg
or
lock
xor
sub
shll
fwait
add
daa
push
inc
adc
mov
adc
push
jno
pushf
sub
mov
scas
fistl
cmp
ret
into
and
inc
mov
ljmp
inc
mov
adc
jae
shll
mov
scas
mov
mov
insl
mov
jge
mov
imull
inc
mov
fidivs
sub
imul
movsb
andb
sub
xchg
or
add
mov
in
xor
dec
int3
fnstenv
sbb
or
mov
sub
cmp
ficoml
pop
cld
ljmp
pop
out
cmp
dec
and
inc
iret
push
pop
fnstsw
inc
push
fldt
cmp
sbb
sbb
pop
pop
jp
outsb
enter
inc
jl
sbb
scas
mov
sub
pop
mov
lea
push
test
adc
adc
pop
mov
jne
xchg
and
mov
cmpsb
test
pop
inc
call
sub
cmp
push
jle
xor
out
push
enter
je
mov
sarl
and
sub
aam
push
inc
icebp
test
add
xor
iret
push
push
cmp
lret
pop
adc
cmp
mov
mov
xchg
xchg
adc
jne
mov
in
rcrb
les
test
ja
or
push
lods
in
ss
sti
dec
repnz
fadd
enter
xchg
pop
or
aad
add
sub
pushf
in
aaa
add
data16
cmp
jg
jns
shl
leave
std
dec
push
ficoml
sub
jns
daa
mov
add
inc
ret
test
iret
cmp
mov
push
mov
ficoms
mov
mov
fldl
and
dec
dec
test
mov
arpl
dec
mov
sahf
sbb
pusha
dec
popf
out
ret
inc
or
jg
scas
cmc
jg
lcall
ds
sbb
mov
dec
andb
cmp
out
xchg
add
cmp
pushf
int3
clc
mov
fsubrl
or
mov
bound
push
fwait
movsb
pop
and
sti
arpl
pop
test
ret
subb
scas
xchg
xlat
jbe
repz
shrb
call
fnstcw
and
dec
inc
push
dec
dec
loope
sbb
loopne
mov
cmp
pop
mov
push
mov
arpl
andl
scas
sbb
jae
test
adc
push
xor
mov
addr16
mov
push
push
jp
cmp
jb
out
pop
pop
int3
xchg
cmp
repz
cmp
insb
adc
std
mov
or
fsubl
adc
outsl
mov
jg
cmp
cmpsb
loopne
in
outsl
push
lcall
cmp
adc
lahf
jmp
pop
xorb
jae
push
and
pop
sahf
pop
loopne
sbb
andl
inc
xchg
mov
cs
push
inc
test
xchg
push
sbb
subl
jg
call
push
or
push
mov
or
push
into
sti
leave
cmp
jno
jo
or
cltd
iret
divb
push
pop
mov
inc
repz
std
sahf
hlt
and
int
hlt
xchg
cmp
add
mov
subb
into
lds
jp
aam
add
or
sub
push
cs
mov
iret
aam
and
cmpsl
xlat
cmpsl
jp
stos
mov
int
dec
ret
imul
stos
or
xor
xchg
inc
jbe
mov
cmp
xchg
enter
out
popf
mov
mov
pusha
les
rorb
or
mov
imul
or
out
cmp
cli
cld
cmc
sub
out
lret
data16
test
inc
loop
jl
mov
sbb
loopne
cltd
test
adc
stc
insl
stc
icebp
ficomps
pop
ret
sbb
ret
pop
and
cmp
xchg
mov
or
jae
in
sbb
mov
mov
enter
xor
adc
fmuls
std
adc
xchg
and
mov
shrl
xlat
fsubl
push
inc
mov
pop
cmpsl
jl
inc
dec
inc
shll
shrl
xlat
movsb
shlb
sbb
or
adc
fisttps
pushf
outsl
call
mov
mov
add
and
fistl
and
test
sbb
gs
adc
scas
jecxz
stc
sbbl
dec
jb
call
stos
divl
push
ret
mov
movsl
sub
cmp
frstor
cltd
sti
mov
pop
in
push
and
ja
neg
or
loop
xlat
dec
inc
dec
xor
inc
outsb
cmpl
jnp
movsl
mov
sub
inc
push
xchg
scas
scas
mov
jbe
into
xchg
fldt
scas
pop
bound
mov
cmpsb
imul
enter
cld
adc
pop
mov
xor
pop
repz
sti
sub
movsl
cs
je
and
sbb
pop
xlat
sub
cmp
or
sub
ret
loope
push
cmp
inc
xchg
scas
cmp
add
and
sbb
out
sub
or
push
xlat
inc
lea
xlat
mov
lea
loope
aam
mov
in
xchg
jb
daa
test
movsl
sbb
mov
mov
popa
jne
jns
mov
lock
sti
xor
mov
test
and
xor
sbb
pop
dec
test
enter
jnp
fldl
cmc
pop
ret
outsl
xor
in
aad
inc
xlat
push
das
jge
pop
mov
jp
faddl
sahf
cmpsb
nop
rcrl
add
cld
push
push
clc
stos
xlat
out
push
adc
mov
ljmp
jb
fs
add
iret
and
sub
jno
mov
std
in
in
adc
fwait
cmp
jae
daa
fucomp
ret
and
out
pop
stos
or
jmp
jno
and
cmpb
scas
cld
mov
adc
mov
lea
icebp
in
inc
or
xor
jl
idivl
and
stc
stos
jo
push
and
popf
daa
push
pop
push
sti
jl
faddl
lods
shll
jo
xor
mov
jecxz
xor
xor
lods
les
cmc
mov
icebp
pop
sahf
cld
push
insb
xchg
arpl
add
sbb
jns
cld
test
popa
popf
lock
mov
pop
ds
cmp
jne
in
push
pop
aam
dec
mov
sub
jge
dec
stc
test
aaa
inc
pop
and
add
mov
mov
inc
int
test
or
int3
in
mov
cli
andl
cli
jne
cmp
outsl
jecxz
stos
fadds
xor
adc
adc
dec
jp
sahf
sbb
icebp
mov
xor
gs
adc
adc
dec
pminub
aas
inc
ljmp
dec
cmc
pop
shr
outsl
test
lods
out
test
rcrl
subb
stos
xor
test
mov
movsb
xchg
ljmp
stos
xor
mov
clc
scas
repnz
clc
mov
inc
movb
lahf
pop
xor
lock
adc
cs
inc
pop
test
and
shl
fisttps
stc
adc
js
and
in
ret
cltd
pop
sub
in
jl
mov
jp
fimuls
xchg
rcrb
outsb
mov
inc
int3
and
dec
dec
mov
ss
outsb
mov
sbb
and
outsb
hlt
lea
dec
cmp
addr16
sub
shlb
push
stc
out
mov
fucom
mov
or
cmp
loopne
ret
mov
out
roll
daa
pop
mov
insb
cmc
fmuls
pop
lods
add
dec
mov
scas
xchg
dec
xchg
inc
leave
jae,pt
out
sbb
mulb
jne
popf
outsl
mov
fiadds
outsl
xor
out
sbb
fistpl
sub
cmp
sbb
sub
stc
pop
xchg
lret
leave
cs
xchg
and
aam
pop
and
inc
push
adc
lods
dec
mov
dec
push
push
add
aad
adc
adc
jb
mov
xchg
test
mov
iret
add
xor
xor
add
cli
mov
pop
fneni(8087
aad
xor
jo
repnz
xchg
adc
cli
pop
mov
cmp
dec
jno
mov
leave
js
dec
adcl
movsb
cmp
inc
xchg
mov
add
inc
jmp
push
shrb
inc
xchg
or
cmpsb
push
test
sub
push
lret
leave
into
mov
cmp
sub
jmp
ret
test
add
lret
jne
push
mov
js
test
out
mov
adc
mov
lret
cmp
lock
scas
fs
push
cmp
icebp
leave
lret
int3
cmp
mov
dec
add
adc
sub
jge
dec
fistl
mov
lahf
cmpsb
jae
push
mov
fiadds
les
dec
mov
ljmp
inc
push
pushf
and
jne
sbb
pop
lods
mov
add
and
xor
movups
sbb
sub
lcall
or
pop
add
mov
outsb
xchg
push
or
cmp
add
pushf
lret
pushf
data16
fs
mov
in
enter
sub
mov
lahf
lahf
shr
movsl
push
inc
xor
jge
std
js
leave
popa
fidivl
and
mov
jmp
sub
mov
mov
pushf
push
push
pmulhuw
ret
mov
inc
sahf
stos
loope
hlt
push
dec
add
mov
cwtl
insl
mov
js
lret
movsb
gs
sub
xchg
push
movsb
xor
mov
pop
xchg
imul
push
push
hlt
call
inc
cmpsl
addl
mov
ficompl
ret
out
cmpsl
dec
pusha
jno
mov
dec
jae
jnp
sbb
std
and
into
fwait
xchg
and
subb
sti
pop
jne
mov
ficoml
inc
and
xchg
sub
stc
or
inc
push
push
xchg
xchg
add
push
mov
jne
jp
and
pop
loopne
enter
xor
loop
dec
adc
cmp
mov
hlt
clc
push
pop
pop
mov
sub
mov
lods
fstpl
in
stos
jl
jmp
enter
movsl
cmp
sbb
push
lret
jg
dec
mov
ds
mov
jo
cwtl
pop
dec
sbb
pcmpeqw
stos
out
dec
pop
push
push
and
pop
in
pop
movsb
aas
xor
or
cli
outsb
sub
push
jb
adc
test
les
lret
push
movsb
dec
in
cltd
xor
cmp
sub
push
scas
lret
jl
dec
or
adc
pinsrw
in
xchg
idivl
cmp
and
inc
xchg
shll
sbb
mov
push
push
fidivrl
sbb
dec
push
or
test
adc
jp
cmpsb
and
xor
pop
xor
xchg
jb
jae
xchg
das
sbb
pop
ja
test
lea
movsl
ret
xor
pop
int
pop
andl
outsl
pop
dec
sahf
fwait
mov
inc
adc
out
movlps
loope
xchg
in
jp
mov
adc
roll
xchg
sub
push
xlat
cmp
sbb
mov
xor
call
repnz
movsb
lcall
lret
mov
cmc
inc
lock
popf
xchg
inc
add
mov
adc
mov
hlt
nop
push
popl
cmp
sub
movsl
pop
mov
push
ret
or
bound
stos
sub
push
cli
fcmovnb
popa
dec
in
int3
add
in
push
loop
or
enter
lds
inc
jb
iret
pop
push
or
rcll
dec
inc
push
cmp
push
pop
ret
or
xchg
divl
arpl
jge
sub
mov
test
in
mov
and
dec
nop
cmp
ja
dec
shlb
inc
pushf
xor
add
testb
push
or
add
lret
test
sbb
outsl
shll
jbe
mov
add
pop
xor
mov
mov
sub
stos
pop
inc
xchg
lock
popa
dec
sbb
out
xor
xchg
notb
jle
mov
dec
adc
sbb
inc
xchg
push
inc
stos
into
repz
hlt
lods
idivb
cmp
outsb
sbb
cwtl
jbe
stos
lea
push
pop
repnz
push
jg
push
push
xchg
repnz
mov
aaa
mov
sbbb
pop
add
dec
sbb
push
push
int
fistpl
sti
mov
fnstsw
inc
test
fld
lret
insb
adc
xor
sbb
sti
push
sub
fwait
out
mov
enter
jo
inc
mov
jmp
outsl
sbb
xchg
mov
dec
sbb
sub
mulb
in
into
xor
add
sub
pusha
and
pop
and
outsb
call
jp
sub
adc
mov
rol
dec
push
nop
das
into
popf
imul
out
out
repz
mov
hlt
pop
rolb
sub
cmp
loope
pop
sub
out
push
mov
lahf
jno
jle
xchg
arpl
jo
pop
iret
inc
fdivs
insl
repnz
adc
cmp
dec
js
jmp
or
or
or
or
push
testb
lods
pop
cmp
sub
xchg
aas
jb
rcrb
shr
dec
or
call
add
gs
into
jno
fwait
sbb
push
daa
lds
gs
stos
xor
or
jno
sbb
push
jg
pop
imul
and
cmpsb
imul
push
push
ss
dec
xor
fldl
aas
in
adcl
sub
and
pop
mov
jl
mov
push
out
arpl
cwtl
dec
out
mov
js
or
jbe
or
xchg
xchg
dec
fmull
jb
xor
push
mov
notb
sub
mov
rcrl
popf
fs
ljmp
fdivl
data16
int
sbb
ja
movsb
mov
mov
inc
ss
stc
fists
repnz
mov
sti
sub
push
enter
jnp
pop
ljmp
xor
push
outsl
js
xlat
lret
arpl
mov
mov
test
cmpsl
sub
push
cmpsl
adc
lahf
andl
inc
mov
aaa
sbb
lret
enter
fwait
int3
or
lock
xor
andl
inc
ret
jo
jecxz
fcomps
ret
mov
ljmp
add
push
aas
sub
push
inc
xchg
pusha
xor
adc
jle
hlt
jle
stos
dec
sbb
sbb
push
push
scas
repnz
or
icebp
mov
adc
dec
dec
push
inc
je
cmp
xor
jl
and
leave
jne
cmp
push
mov
popa
push
rcrb
cmp
jbe
pop
dec
outsl
fildl
rcl
stos
movsl
rorl
sbb
loop
sti
lcall
orb
mov
sti
pop
mov
mov
je
fcoms
inc
mov
add
scas
dec
dec
xchg
test
lahf
cmpb
and
les
jecxz
call
ja
int3
pop
push
jl
xchg
stos
imul
into
cmp
mov
fucomi
and
outsl
or
mov
outsb
ljmp
xchg
shrb
add
les
out
cmp
ret
mov
int3
inc
shlb
xchg
mov
dec
insl
rorl
or
push
fwait
call
int3
ja
pop
push
hlt
push
mov
imul
add
or
dec
push
mov
mov
add
imul
inc
adc
shlb
or
xchg
sarl
sub
clc
neg
shlb
mov
call
xchg
mov
ljmp
pop
adc
sub
pop
ljmp
das
std
outsl
stos
imul
leave
insl
imul
pop
add
add
andl
mov
adc
rcl
xchg
call
pop
cmp
adc
dec
jae
cmp
lds
mov
jbe
mov
popf
sub
jmp
pusha
aam
push
pop
or
lea
aaa
and
dec
lahf
xchg
mov
shll
xchg
sbb
frstor
inc
clc
adc
pop
shlb
sbb
push
mov
or
lea
push
in
fsubs
mov
scas
in
out
out
sub
cltd
int3
pop
pop
or
mov
jle
pop
std
sti
mov
test
cmp
xchg
dec
pop
lds
mov
mov
repz
jmp
roll
dec
sub
ss
mov
mov
xor
into
jg
and
cli
in
and
repz
ds
pop
cwtl
xor
fisttpl
lahf
pop
push
cld
nop
xor
testl
iret
dec
jmp
stc
repz
enter
sbb
jne
sub
and
and
xchg
fmull
aad
xchg
mov
adc
push
fists
xchg
call
and
mov
sbb
sub
xchg
ret
dec
dec
cmp
inc
pusha
pop
pop
decb
pop
inc
push
sub
sti
lahf
sbb
add
jmp
icebp
repnz
test
cwtl
jmp
inc
mov
lock
jg
mull
rolb
enter
fsubs
nop
ljmp
add
dec
jb
jne
dec
mov
rorb
dec
push
xor
add
dec
mov
das
in
loop
dec
mov
repz
fidivrs
dec
mov
xchg
and
mov
fs
jbe
idivb
xor
add
sahf
pop
pop
or
into
imul
daa
fwait
sub
dec
xor
xlat
dec
daa
xor
in
decb
test
cmp
xor
into
sti
push
test
dec
jmp
mov
dec
stc
mov
adc
sbbb
fdivl
popa
add
imul
push
jb
dec
and
sbb
sub
mov
mov
gs
or
inc
pop
addr16
sahf
or
insl
push
fdiv
jp
jb
push
rol
sub
leave
mov
es
imul
pop
dec
pop
mov
xchg
jae
add
sti
pop
jbe
dec
lds
scas
fsubr
mov
enter
shl
lock
push
push
sahf
loopne
scas
mov
and
lock
mov
test
push
mov
loope
mov
or
cli
mov
insl
es
mov
sbb
repz
jne
ds
psubsw
stc
jl
sti
fsubrl
jns
popf
test
jbe
xchg
lock
jno
pop
jle
xor
pop
lret
jmp
daa
mov
cmp
cmp
loopne,pn
xor
outsb
add
xor
xchg
mov
jmp
push
sarl
cmp
cmpsl
ret
bound
dec
cmpsb
mov
ja
lahf
pusha
xorb
fcompl
lods
xchg
jns
or
cmp
nop
arpl
mov
call
mov
pop
push
jle
jnp
out
add
lods
cmp
test
jno
pop
and
dec
cmp
popa
adc
sub
xlat
popa
dec
mov
adc
fisubl
sti
leave
dec
sub
cmp
mov
and
push
pop
repz
jmp
cmp
push
or
mov
or
cmp
daa
sub
and
mulb
loopne
xlat
add
nop
nop
jecxz
dec
cmp
insb
sub
jecxz
mov
xor
or
sub
inc
inc
push
fidivl
cmp
lret
and
pusha
adc
or
outsb
fwait
scas
mov
addl
lcall
xchg
sub
inc
push
out
pop
jmp
dec
loopne
push
popf
jno
loopne
sub
xor
movsb
cli
fs
stos
inc
or
enter
out
inc
sub
fwait
xor
movsl
lret
mov
jbe
xor
jo
xor
sarb
cmp
cli
mov
nop
push
or
pop
jb
push
mov
mov
mov
inc
out
jno
or
ret
adc
jb
loope
pop
dec
push
jp
jnp
ss
sbb
stc
add
xor
je
aad
adc
mov
insb
push
out
inc
mov
mov
dec
cmp
ljmp
shll
lret
sub
push
cli
leave
ret
pusha
add
dec
sbb
adc
rolb
mov
out
cmp
push
jne
out
adc
icebp
loope
loopne
xor
stos
and
and
out
push
data16
jno
xor
rorb
leave
or
mov
sbb
lea
repnz
add
mov
adc
std
movsb
int
cld
add
dec
dec
rolb
add
mov
mov
je
dec
lret
mov
jne
or
sbb
call
cmpl
lret
scas
sub
or
mov
add
lea
xchg
mov
adc
pop
subb
push
stc
mov
sub
call
dec
lret
repz
loop
add
inc
data16
arpl
fisttpl
or
nop
mov
adc
mov
movsb
dec
adc
adc
xchg
jge
movsb
mov
lcall
sbb
dec
mov
das
adc
jno
mov
cmc
ds
mov
aad
adc
sbb
pop
insb
mov
sahf
in
xchg
sbb
adc
cmp
les
aad
push
push
imul
mov
ss
cmp
push
mov
cmp
pop
gs
negb
pushf
pop
outsl
xor
mov
and
jnp
movsb
sbb
jmp
inc
jg
and
jne
mov
test
or
xchg
icebp
sbb
xchg
shr
popa
hlt
sbb
pop
mov
loop
or
xchg
int
loop
stc
cmp
fisttpl
xchg
add
test
pop
popa
cmpsb
xchg
xor
mov
dec
popf
jecxz
iret
dec
jmp
cltd
dec
sbb
jo
adc
fdivrl
fists
mov
cs
mov
ljmp
add
inc
js
dec
adc
idivb
or
push
es
fsubrl
xchg
jb
jl
stc
xor
nop
scas
fsubs
iret
lret
out
inc
movsb
sub
mov
xor
or
mov
ss
sbbl
ror
mov
push
jecxz
popa
xor
add
aam
test
lods
cmc
push
test
and
rol
jl
scas
lret
out
ret
cmpsb
cmp
lea
cs
es
out
sub
loopne
mov
scas
dec
and
inc
xor
iret
mov
push
jno
push
insl
jae
icebp
xchg
sbb
mov
leave
pusha
popf
mov
inc
lret
mov
jnp
mov
repz
hlt
add
xlat
iret
adc
xchg
mov
lcall
mov
cli
cmp
sub
and
mov
shlb
xor
adc
inc
rorb
add
out
in
lods
dec
test
mov
sub
mov
mov
loopne
jge
sub
flds
pop
aam
rcrl
push
cmpl
jle
std
les
repz
mov
push
mov
sti
and
in
or
add
lock
mov
dec
stos
cwtl
sub
mov
mov
jmp
ja
movsb
mov
push
sahf
xchg
mov
push
jg
shr
xor
in
sbb
dec
jle
lock
jae
sbb
sbb
inc
popa
add
loop
aam
mov
and
xchg
jno
adc
insl
outsl
cld
loope
inc
fcmovb
iret
mov
push
stc
mov
push
cmp
fsubrl
sub
hlt
dec
test
and
out
repz
sub
cmp
fstpt
mov
sub
aad
nop
and
xor
push
sbb
out
push
pop
lahf
push
dec
mov
nop
pusha
and
test
sbb
xchg
rorl
rclb
mov
stc
mov
push
inc
cmp
push
xor
iret
stc
push
add
mov
sbb
roll
int3
ret
jmp
sbb
inc
mov
or
sbb
inc
jle
sbb
mov
xchg
in
test
jle
jg
call
call
xor
lahf
andb
cmp
xchg
xchg
sbb
jmp
sub
insb
loope
out
and
xchg
gs
jl
test
dec
shlb
aam
fnstsw
pop
inc
cmpb
inc
pop
lahf
xchg
mov
dec
popf
addl
out
idivl
nop
cs
mov
int
jns
sbb
xor
in
ret
xchg
ja
in
cwtl
jle
mov
arpl
rolb
dec
dec
add
xchg
dec
fmul
ja
mov
rolb
push
scas
fwait
fwait
mov
mov
jne
sub
ret
jp
sbb
gs
xchg
sbbl
mov
divb
data16
inc
or
sub
xchg
sub
pop
push
push
cwtl
jecxz
xor
adcl
jmp
lret
jae
xchg
dec
jle
cmp
cmp
not
inc
loop
fistpl
ss
aad
das
gs
stos
pop
mov
rolb
pop
inc
int
cmpsl
xchg
fistl
out
sub
dec
sbb
test
inc
test
rorb
push
jno
cmp
pop
lret
js
loop
imul
pop
aaa
cwtl
stos
sub
mov
push
ret
iret
dec
lcall
mov
ret
jae
sub
adc
stos
aam
and
or
push
out
jmp
sub
out
addr16
xor
ds
shlb
cmp
adc
loopne
jne
jno
fadds
out
mov
or
clc
out
lret
lret
jmp
inc
loope
lcall
xchg
mov
cld
ret
push
lcall
push
hlt
pushf
fiaddl
std
push
pop
in
sbb
imull
pop
iret
dec
mov
sbb
and
jmp
pop
jns
xor
sbb
loope
stos
or
push
repz
inc
xlat
mov
notl
sub
push
mov
fnstenv
pop
ss
fimull
jbe
out
or
push
inc
jge
cmp
fiadds
pop
add
pop
pusha
lret
mov
or
jle
fisubrl
sub
cmp
xor
mov
cs
inc
dec
xor
mov
mov
int
das
pop
jb
push
dec
jo
add
ss
sbb
mov
pop
mov
in
pop
adc
adc
sbb
sbbb
inc
hlt
int3
lahf
cmc
push
jp
addr16
and
into
loope
int3
cmc
cmpl
aas
test
push
dec
jmp
repz
add
movsb
or
mov
cmp
nop
push
sub
das
dec
dec
popa
mov
imul
inc
push
in
xor
and
or
sub
je
fstpl
sahf
pop
rol
inc
or
aad
pop
hlt
cmpsl
rcll
rcrl
mov
lret
outsl
push
push
xchg
into
ficoms
out
sbb
jns
dec
xchg
pop
adc
fs
pop
mov
adc
loop
push
jo
les
or
cmp
add
add
cli
inc
aam
and
stos
jg
into
or
test
scas
out
push
cmc
xlat
jae
rolb
jge
aad
xor
jne
xor
lret
shrb
mov
outsl
sbb
sbb
dec
test
arpl
and
add
nop
or
icebp
sub
aam
mov
inc
adcb
sub
popa
mov
push
lret
mov
xor
gs
mov
dec
lods
sbb
je
pop
hlt
cmc
mov
dec
pop
mov
or
iret
arpl
es
sbb
test
inc
cmpsl
sbb
mov
mov
imul
scas
ds
ss
jecxz
sub
inc
ret
les
ffreep
sub
jge
push
sbb
out
fiadds
enter
jge
push
mov
mov
mov
repnz
inc
mov
in
orps
pop
roll
outsb
inc
xchg
inc
dec
pop
mov
idiv
clc
lahf
jge
mov
call
aaa
pop
enter
mov
cld
jbe
mov
push
dec
jecxz
jecxz
push
outsl
jbe
popa
sar
xchg
fxch
xor
jo
push
add
into
fwait
mov
cltd
push
inc
fiaddl
lods
mov
mov
adc
add
cli
pop
fstpt
fbstp
fwait
cmp
sbb
sar
pusha
jns
cmp
xchg
loopne
mov
xor
enter
std
enter
fcmovbe
push
mov
mov
lods
cmp
lds
stos
das
mov
repz
push
stc
out
scas
stos
ja
mov
jecxz
pop
cld
cmc
imul
push
xchg
jmp
stc
scas
xor
sub
push
sarb
lea
in
pop
xchg
cli
fmull
or
sbb
push
jbe
xchg
or
mov
sbb
insb
mul
xchg
jle
scas
ret
jmp
mov
jge
loope
and
xchg
fcmovu
inc
adc
test
ds
fisubs
push
fists
and
mov
cmpl
dec
lods
lock
adc
sti
adc
scas
adcb
mov
and
int
add
lods
lahf
mov
cmp
int
or
ficompl
inc
and
jle
inc
int3
paddb
push
in
aam
sbb
inc
inc
sbb
cmp
or
mov
cmp
shll
jge
ljmp
hlt
or
xchg
ja
rorb
lahf
js
mov
in
icebp
dec
adc
sbb
sub
add
popa
les
inc
je
fcmovnb
clc
push
sbb
cmp
flds
aas
jl
pop
movsb
jbe
sub
add
and
lret
sub
pop
test
add
add
push
aaa
mov
pop
aad
mov
dec
int
cmp
cltd
cmp
cmp
clc
shll
cmp
test
mov
mulb
push
and
ret
push
lcall
sub
lcall
push
aas
sbb
and
outsb
fildll
push
shrl
mov
xorb
pusha
cmpl
push
cmc
ret
mov
pop
ds
std
add
call
lahf
push
ficompl
and
push
dec
in
push
lahf
enter
xlat
data16
sub
or
pop
jg
xchg
fdivp
addr16
pop
and
iret
xor
cmpsl
negb
decb
xchg
sbb
inc
xchg
add
xchg
dec
jle
mov
lods
repnz
fcoms
mov
fnstcw
fld
push
push
push
sub
sbb
push
rcl
jo
inc
and
imull
cmpsb
inc
rep
lods
int
push
lds
sbb
dec
or
mov
xchg
and
cmp
xor
mov
xchg
addr16
sub
les
pop
xor
jae
pop
mov
ret
rcrl
ds
push
inc
cmp
xchg
leave
vdivsd
push
and
insl
aas
and
sbb
test
push
imul
sbb
push
and
jp
call
or
movsb
or
mov
rcrb
pop
add
push
aad
imul
mov
fwait
and
out
addr16
xchg
mov
imul
movsl
cld
dec
stos
cmc
test
and
scas
lcall
or
idivb
cs
fcoms
add
mov
mov
ret
imul
shlb
in
xchg
add
jne
sub
adc
fiaddl
jge
sbb
cmpsb
iret
mov
jp
andb
and
pop
adc
outsb
dec
xchg
mov
jp
ds
imul
leave
cmp
in
lea
mov
ror
in
push
mov
xchg
out
adc
in
jae
pop
xlat
pop
mov
jne
pusha
add
in
sbb
inc
jbe
push
scas
mov
pop
mov
fwait
icebp
leave
push
test
addb
jp
mov
xor
test
loopne
xor
sbbb
lret
inc
pop
je
jl
add
lods
jl
mov
sbb
std
mov
or
stos
sti
mov
mov
test
iret
xorb
bound
xor
push
pop
addr16
cwtl
cmp
test
inc
mov
push
add
cmp
adc
fisubs
iret
notl
cmc
ficoml
mov
cmpsb
scas
push
repnz
mov
into
jl
movsl
js
loopne
push
int
movsb
lods
lea
gs
xchg
sub
pop
dec
nopl
fistl
push
adc
call
fs
push
and
lret
cmp
push
sarl
pop
jns
clc
outsb
leave
jns
gs
cld
imul
xchg
iret
not
repnz
in
mov
les
cmpsl
fimuls
js
sbb
dec
or
popf
mov
nop
push
fsubrl
push
mov
test
mov
incb
std
movsb
das
mov
add
repz
rclb
jbe
push
rolb
sub
ret
cmc
xor
add
mov
jnp
push
jl,pn
sub
mov
lret
jbe
jl
clc
js
aad
push
addl
vcvtsi2sdl
je
loop
fs
adc
mov
cld
aad
cmpb
inc
xor
pop
and
jnp
xlat
add
shrb
mov
aas
ss
add
scas
jecxz
iret
sub
push
aas
dec
mov
in
icebp
mov
jbe
xor
mov
aad
mov
outsl
xchg
insl
and
or
test
cmp
jb
movsl
stos
test
imul
out
add
xor
inc
xor
jne
jne
adc
mov
pop
adc
mov
imul
push
xchg
jae
shrb
pop
or
fstpt
mov
enter
ljmp
in
mov
arpl
div
cli
rorb
stos
sarl
xchg
stc
mov
dec
aaa
fidivrs
rcr
cltd
mov
jg,pn
insb
add
inc
clc
pop
ret
sub
pop
leave
pop
fcmovbe
int3
pop
sbb
pushw
insb
push
in
test
shl
push
jp
xchg
addr16
ret
test
dec
cltd
cmp
adc
cwtl
les
addr16
imull
mov
push
out
cmpsl
rcrl
in
sbb
inc
jne
or
pop
add
push
mov
push
stc
fcmovu
cmp
xor
jbe
enter
push
int
call
imul
inc
pusha
jp
cmp
movsl
adcl
mov
xor
xchg
add
jb
xchg
nop
inc
fnstenv
sahf
and
push
fdivrl
lcall
cmp
addr16
mov
stc
add
xchg
aas
fldl
fs
ljmp
pop
cs
test
lcall
push
jg
add
lcall
stc
dec
pop
xchg
push
mov
xchg
push
fidivs
mov
dec
mov
xchg
add
or
leave
or
lcall
jge
xchg
dec
lahf
jb
gs
roll
dec
sub
movsl
ja
fnsave
pop
dec
push
push
std
dec
pop
mov
divb
push
and
jnp
and
inc
and
or
int3
add
inc
aam
push
pop
daa
popf
out
sbb
inc
jle
pop
popf
sub
mov
lret
cli
pop
jge
push
outsl
and
sbb
repz
lds
adc
jle
xchg
lahf
daa
movsb
popf
adc
les
enter
sbb
subl
ficomps
insl
stos
mov
xchg
push
dec
repz
lock
repnz
fs
dec
scas
cmp
filds
and
xlat
insl
inc
xchg
aas
pop
cmpsl
adc
daa
in
loop
aad
and
pop
and
imul
shl
inc
les
test
stc
fdivs
mov
mov
mov
mov
push
sub
xlat
pop
movsl
jnp
lahf
jne
pop
cmp
xchg
jne
add
inc
push
shr
cmp
out
outsb
pop
mov
mov
es
iret
inc
lcall
ret
mov
xchg
inc
movsl
enter
fwait
jo
sub
and
jl
xor
iret
sahf
jp
add
cmp
es
fldenv
fiaddl
push
mov
addr16
jecxz
inc
push
mov
jle
dec
cltd
cmp
dec
and
or
or
lods
jne
mov
sub
movsl
mov
rclb
inc
clc
ja
icebp
es
and
lods
repnz
cmp
mov
jne
sahf
lcall
ret
arpl
mov
fs
ds
jns
rcll
mov
and
cmp
mov
cld
popf
xchg
out
cmp
push
inc
in
jge
outsb
lds
mov
inc
loope
rcrb
cwtl
jno
inc
mov
xor
cli
testl
push
inc
mov
in
out
sbb
mov
sub
flds
hlt
pop
inc
into
mov
mov
movsl
out
enter
fbstp
mov
outsb
imul
je
insb
sub
mov
fildl
test
fwait
mov
inc
lods
cmp
insb
sbb
shrb
lret
lods
fisubl
jnp
les
lret
js
jecxz
icebp
add
jnp
sbb
push
inc
cs
push
jge
mov
cmp
mov
fs
in
jnp
jmp
lods
mov
fstpl
lock
and
jnp
stc
neg
pop
adc
int3
int3
pop
or
pusha
lods
imulb
pop
out
out
out
imul
cmp
inc
pop
cld
jle
xor
scas
mov
scas
nop
fsubs
loope
mov
dec
mov
ljmp
in
out
push
dec
into
fnstsw
mov
ljmp
add
cmp
adc
je
inc
inc
scas
lods
xor
movl
lock
xchg
pop
sbb
mov
outsb
icebp
fs
jg
push
movsl
xor
and
sub
inc
js
sub
loopne
xchg
inc
in
mov
and
sbb
call
jp
test
mov
sbb
mov
outsb
mov
bound
jns
stc
cmp
aam
enter
aad
sti
xor
rclb
add
mov
push
jae
outsb
add
inc
mov
pop
xchg
aad
fs
adc
in
rorl
ja
push
push
rorl
fwait
add
mov
sub
negl
dec
ja
fildl
jno
icebp
push
int
out
rol
in
pop
dec
lock
dec
rclb
arpl
data16
and
sbb
stc
dec
icebp
loope
jecxz
out
ja
dec
dec
xor
add
xor
cmp
movl
loope
adc
xchg
jl
std
mov
sahf
mov
cltd
mov
cmpsb
aad
loop
cmp
pop
push
lcall
sbb
mov
adc
test
jo
inc
xlat
fwait
decl
sbb
insb
mov
arpl
xchg
sarb
test
inc
dec
jbe
js
mov
sub
gs
addb
push
xchg
ljmp
popf
das
cld
js
mov
sbb
add
test
adc
test
shll
cld
out
leave
pop
cli
xchg
pusha
mov
mov
push
push
add
vxorpd
movsl
inc
mov
mov
jg
sbb
sahf
out
scas
inc
mov
lcall
jecxz
cmpsl
es
hlt
fdivrs
dec
lret
test
jbe
xchg
divb
xor
std
dec
fistpll
inc
das
je
minps
inc
jl
adc
stc
mulb
dec
and
mov
lcall
lds
incb
xchg
lret
js
es
xchg
jp
addr16
pop
leave
xchg
mov
jae
imul
and
ret
xor
xor
cli
loope
cmp
nop
xchg
movhlps
mov
pop
sub
in
or
fldcw
xor
inc
and
jnp
lret
xlat
test
inc
aas
push
mov
lret
pop
cltd
inc
dec
outsb
dec
das
mov
pushf
and
leave
mov
out
dec
xchg
cmp
test
in
test
xchg
push
or
xchg
mov
jb
idivb
cltd
mov
mov
enter
cmpsb
xor
jnp
jns
jg
mov
xorl
test
dec
js
adc
rclb
push
loopne
inc
push
lods
and
addr16
xchg
cli
push
in
xchg
sub
xor
and
mov
inc
and
in
inc
lds
mov
mov
and
in
xchg
jmp
or
out
dec
mov
dec
jge
fstpt
cli
adc
push
scas
push
xchg
sub
add
outsl
cmp
aas
lea
rcl
loop
outsl
adc
push
repnz
dec
mov
fistpll
bound
jge
test
or
sahf
cmp
jo
ljmp
fs
bnd
xchg
sbb
cs
imul
pusha
xchg
mov
mov
or
mov
and
sarl
shll
stos
aam
push
shrl
int3
push
cmpsb
push
fcmovbe
and
in
push
mov
lcall
add
pop
nop
js
mov
or
test
dec
mov
adc
push
mov
mov
add
sub
repz
sbb
in
cs
daa
addr16
push
fs
xor
push
ret
aam
inc
test
mov
pop
lea
mov
pop
adc
pop
mov
sbb
jb
pop
and
mov
daa
repz
sbb
nop
adc
jae
movsb
fwait
add
sbb
push
jb
mov
outsb
push
lahf
jbe
movsl
lods
and
arpl
push
and
shrb
daa
cltd
icebp
and
or
fistl
std
mov
popa
icebp
xor
jp
lret
lret
push
pop
cld
lds
xchg
mov
mov
cmpsl
inc
jnp
outsl
jmp
inc
push
mov
mov
ds
cmp
pop
add
mov
mov
jmp
mov
rorl
cmp
cltd
test
ret
imul
ret
insb
sbb
aaa
mov
gs
or
and
sbb
dec
mov
lahf
pop
gs
dec
addr16
loope
dec
loope
lahf
jne
mov
mov
jns
aaa
divl
cmc
into
out
sub
fdivrp
rcll
mov
insb
clc
int3
popa
clc
inc
lock
nop
mov
mov
into
data16
xlat
inc
in
decl
sti
xchg
mov
lock
xor
jo
cmpsl
xchg
and
mov
dec
ret
mov
mov
ljmp
xor
jns
lea
out
scas
rcl
jge
and
mov
dec
inc
sub
xchg
icebp
jecxz
inc
and
insl
into
mov
int3
in
enter
and
dec
out
mov
jb
cmp
adc
dec
pop
xchg
xor
scas
nop
mov
aaa
adc
arpl
pop
adc
mov
movnti
sbb
push
dec
pusha
mov
mov
call
shlb
mov
ja
sub
repnz
add
dec
dec
mov
mov
add
imul
cmp
mull
outsl
jmp
jg
popf
daa
sub
sarl
mov
and
and
add
movsb
fs
ljmp
arpl
arpl
jns
mov
das
inc
or
cwtl
mov
pop
push
xlat
mov
pop
inc
ds
cld
xor
stc
stos
and
rorl
ljmp
dec
adcb
sub
mov
ret
lods
ret
ljmp
xor
cmp
pushf
push
add
mov
sub
dec
imul
mov
rcrl
les
or
insb
push
insl
pop
pop
mov
testl
add
mov
gs
dec
popa
adc
xor
jmp
dec
xor
jb
sahf
jmp
insb
ja
inc
stos
div
mov
aas
insb
in
xchg
lret
out
bound
mov
data16
out
mov
push
xorb
sub
cwtl
dec
arpl
outsb
add
lret
div
cld
mov
push
mov
nop
pop
fwait
mov
mov
dec
and
inc
movsl
das
dec
stc
adc
sub
cmc
adc
and
xchg
daa
sbb
dec
sahf
in
mov
cwtl
stos
movsl
imul
and
mov
repz
xorl
rorl
scas
adc
neg
scas
pop
popa
jae
push
cmpsl
inc
mov
cli
roll
aam
bnd
push
mov
push
and
sub
clc
sbb
imul
and
adc
mov
cmpsl
xchg
push
sbb
xor
clc
mov
or
popa
in
scas
sbb
fimuls
adc
in
aaa
ficoml
mov
pop
sahf
or
sbb
dec
inc
cmp
dec
inc
rcr
pop
push
inc
and
iret
cmp
jle
xlat
pusha
ljmp
push
mov
sahf
neg
dec
xor
aaa
xor
sub
aad
int3
jle
xor
dec
xlat
jbe
sbb
lret
sti
mov
fldl
enter
jecxz
pop
mov
hlt
inc
push
std
jb
inc
xor
pusha
in
jae
inc
and
xor
mov
aaa
js
int3
xor
mov
sub
xor
ljmp
mov
scas
push
pop
adc
lds
cld
leave
test
fcom
cmp
dec
lcall
sub
neg
iret
sub
sub
pop
into
dec
mov
das
push
sbb
sbb
mov
and
jl
mov
in
push
or
fwait
stc
cmpsl
testl
push
cli
mov
inc
push
icebp
stc
push
xadd
int3
dec
pop
mov
outsb
add
inc
xchg
sarl
scas
cmc
loopne
js
xchg
js
cltd
rcll
sbb
test
xchg
ds
je
call
out
push
repnz
clc
bound
push
xchg
pop
adc
mov
ret
fwait
mov
add
outsb
jnp
dec
repz
xchg
leave
mov
sub
dec
and
xor
add
ret
dec
pop
or
data16
push
pusha
adc
pop
repnz
mov
inc
mov
shlb
adc
std
repnz
repnz
pop
pop
fcomip
aam
lods
pop
push
dec
leave
mov
mov
test
aam
out
mov
stos
cmpsl
lods
and
push
pusha
sub
xor
jg,pt
movsl
jbe
pop
inc
mov
lods
pop
adc
adc
jbe
aad
cli
push
mov
shr
vpcmpeqd
lahf
dec
mov
fbld
lahf
popf
cs
jecxz
lods
xchg
rcrl
sbb
push
xor
xor
mov
adc
and
js
mov
fwait
loope
pushl
mov
xor
test
xchg
test
ror
xchg
xor
or
dec
cmc
popf
orps
stos
das
lcall
xor
in
jns
mov
jp
ud2
aad
adc
xchg
aaa
rorb
adc
ja
sbb
dec
jecxz
sub
out
jl
pop
leave
out
push
sub
jmp
xchg
pop
xchg
in
pusha
jbe
and
jb
and
int3
fmul
notb
mov
sbb
adc
cmpsl
test
adc
stos
jbe
jnp
add
push
sbbl
lods
jl
adc
adc
aas
lret
adc
push
je
fidivl
mov
sub
and
into
aam
xor
add
add
xchg
loop
dec
ffreep
inc
xor
push
push
xor
inc
mov
out
xor
mov
add
mov
scas
clc
enter
iret
pop
xchg
and
test
jns
mov
xchg
aaa
cwtl
call
or
dec
adc
cmp
ud0
fnstenv
sub
jbe
inc
aad
jae
jb
je
xchg
sub
cmp
in
inc
ret
imul
pop
movb
xor
filds
fisubrl
pop
repnz
das
outsl
cmp
xchg
push
gs
xor
xorl
adc
or
scas
sub
push
dec
sbb
imul
negl
pop
aas
jnp
or
fmul
mov
out
pop
adc
sub
aas
add
pop
pop
mov
adc
xchg
xchg
int3
mov
mov
xchg
jnp
shl
mov
mov
movsl
adc
push
in
es
sub
cmp
je
out
pushf
add
mov
mulb
pusha
shll
sahf
sbb
aas
push
xor
pusha
or
aam
xchg
cwtl
in
adc
insb
les
mov
mov
pop
pop
fs
fdivrl
testl
loope
jle
mov
jg
mov
or
aaa
subb
jae
xor
adc
ss
loope
xchg
cmp
nop
push
pop
mov
cmpsl
inc
or
sub
xchg
adc
sub
cld
mov
callw
cli
inc
lods
aad
jge
in
rorb
pop
movsl
xor
mov
cmovge
in
inc
scas
ret
stos
in
pand
xchg
cmp
inc
out
inc
dec
loopne
adcb
es
test
test
xlat
out
outsb
sbb
inc
xchg
sub
mov
js
sbb
in
push
mov
andl
xchg
mov
cmp
shrl
sti
test
sbb
and
in
add
xchg
movsb
les
dec
push
dec
xchg
pop
mov
dec
mov
sub
cmpsl
jns
jno
inc
xchg
lock
rcrb
cwtl
adc
xlat
hlt
and
mov
enter
or
cmp
mov
leave
enter
and
pop
into
adcl
adc
ja
push
arpl
or
imul
adc
mov
jg
sub
mov
adc
xchg
add
inc
cs
mov
mov
push
pop
data16
in
and
sub
int3
adc
addr16
fsts
and
push
pop
aaa
push
imul
xchg
inc
imul
in
cmp
adcl
add
out
int3
mov
jecxz
jg
popf
in
cltd
hlt
lret
call
adc
pop
jo
lret
sub
pushf
out
pop
and
stos
and
pop
xchg
xchg
shlb
das
xor
jb
mov
test
ds
out
and
dec
dec
mov
repnz
lahf
mov
mov
sarb
pop
mov
mov
movl
enter
and
mov
mov
add
xchg
push
enter
imul
push
clc
add
xor
arpl
and
and
mov
mov
pop
movsb
pop
pop
and
jmp
inc
sbb
pop
jmp
push
lock
adc
and
testl
sarb
cmp
sub
dec
cmp
push
imul
push
mov
out
add
jecxz
pop
cmpl
fisttps
int
dec
and
xlat
mov
lods
mov
idiv
cmpsl
rorl
loop
jge
ror
and
and
xchg
mov
jl
sbb
add
int3
pop
in
movsb
fcomps
hlt
rcll
sbb
xor
rclb
repz
out
inc
sub
sbb
test
jbe
xchg
and
adc
das
stc
test
pusha
push
mov
cmc
xchg
mov
sahf
inc
test
sub
loope
fbld
popf
lahf
scas
nop
mov
pop
add
and
or
jecxz
fists
sbbl
lret
insl
lds
pop
data16
push
or
std
stos
adcl
push
pushf
js
clc
adcl
fwait
dec
into
jmp
cs
xor
sub
fimull
mov
sti
scas
sti
push
sahf
xchg
inc
jb
cmp
cli
adc
or
sbb
xchg
mov
mov
pop
sub
cs
inc
add
adc
repz
mov
leave
jne
pop
xor
mov
pop
mov
insb
mov
mov
push
mov
adc
xor
lcall
test
fwait
xchg
mov
enter
and
and
jne
gs
cli
leave
mov
xchg
cmpl
out
repz
bound
ret
xchg
fdivr
sub
out
icebp
mov
aam
lahf
icebp
and
mov
pop
mov
loopne
push
sbb
fcmovb
mov
js
mov
sub
js
movsl
pop
dec
sub
cli
jp
pop
dec
xchg
mov
das
xchg
xchg
xchg
outsl
push
jp
xor
mov
xor
sub
outsl
fwait
mov
sub
sbb
insb
dec
cli
xor
shlb
or
ljmp
cmpsb
sbb
pusha
pop
jne
sub
aad
enter
mov
mov
xchg
xchg
mov
mov
or
insb
push
rclb
lea
sbb
rorl
insl
sbb
ljmp
movsb
jno
test
inc
fistps
and
outsb
mov
adc
lcall
dec
lret
leave
mov
sarl
jnp
dec
mov
lods
mov
mov
or
cli
sub
push
push
dec
aad
and
in
outsb
fiadds
mov
sbb
sbb
jge
ljmp
mov
je
fs
dec
cld
jmp
sbb
push
sub
in
jg
popf
lods
loope
out
int3
sub
xor
in
int3
loopne
sahf
outsl
ret
fcoms
xchg
rcrb
inc
cld
add
mov
xlat
lea
movsb
jp
lret
popf
lret
or
add
mov
jecxz
add
sbb
xor
mov
shl
or
pusha
cld
push
sub
jo
xor
inc
lds
inc
call
cmp
and
xchg
adc
pop
pop
stos
adc
jmp
mov
add
mov
lret
ret
in
mov
hlt
mov
mov
movsb
sub
push
out
mov
sub
mov
insl
mov
xor
outsb
mov
mov
adc
or
add
xor
lcall
or
in
pop
xchg
popa
jno
lret
in
mov
mov
inc
dec
rol
in
imul
adc
sub
test
mov
jnp
es
adc
and
mov
jmp
add
fstpl
push
jae
and
adc
and
out
xor
out
aas
xchg
in
inc
dec
clc
out
and
mov
push
inc
stc
mov
xchg
je
mov
imul
loope
arpl
fucomip
or
test
icebp
das
cmp
popf
call
mov
inc
arpl
push
pop
daa
jno
into
pop
sbb
dec
adc
xchg
lret
rclb
pop
cmp
aam
bound
add
cli
sbb
shr
push
into
dec
mov
pop
and
fsubrs
xor
xchg
push
mov
jb
shl
lods
ret
jb
push
push
push
cmp
jne
jns
xor
mov
in
addb
int
stos
add
jnp
mov
adc
push
fimuls
mov
mov
lds
mov
add
imul
mov
cld
cmpsb
or
lret
aad
fistl
out
ret
cmp
push
stos
dec
lcall
inc
cmp
int
int3
xor
mov
ds
push
js
push
inc
dec
mov
ret
jbe
fdivl
pop
mov
rcrb
mov
mov
pop
push
es
dec
xor
outsl
xchg
loop
cmp
mov
mov
mov
mov
movsb
inc
add
add
call
xor
xor
hlt
adc
xchg
jb
das
sub
mov
sub
xchg
shl
les
outsb
mov
add
and
push
and
push
clc
js
jmp
jmp
jmp
daa
pop
out
jns
xchg
test
cltd
arpl
and
js
loop
mov
bound
outsl
or
loopne
addr16
mov
popf
dec
dec
fistpll
lods
ja
sub
imul
adc
popa
pushf
das
scas
inc
sub
sub
xor
out
sub
xchg
mov
lahf
and
lcall
and
sar
push
lahf
lret
jno
pop
nop
loope
pop
add
inc
fwait
jns
into
mov
and
sbb
sub
shr
nop
and
jb
add
or
in
sub
sbb
jmp
std
gs
push
adc
mov
pop
mov
mov
xchg
xorl
in
mov
sub
sahf
inc
push
sahf
nop
adc
in
or
jg
jmp
add
lock
mov
cmpsl
pop
orl
and
lods
mov
sub
and
mov
add
ss
xchg
add
mov
cmp
aaa
loope
ja
inc
test
out
int
divl
popf
mov
int
fwait
fwait
push
push
pop
mov
icebp
ret
jmp
mov
push
jle
jnp
insl
movsb
or
adc
jne
jnp
insl
hlt
aad
aaa
jmp
push
shll
mov
icebp
mov
cmp
fldt
add
test
mov
sbb
cmp
enter
push
cmp
adc
sarl
repz
mov
insb
idivb
pushf
out
sbb
xor
dec
outsl
add
aaa
popa
mov
push
scas
inc
jp
push
sub
dec
mov
arpl
pushf
pop
xchg
adc
xchg
iret
dec
aas
jnp
mov
pop
xchg
sub
fsts
fwait
inc
mov
popf
mov
dec
movsl
adc
cltd
push
lret
dec
or
loope
enter
js
sbb
sbb
int3
inc
xorl
cmp
fbstp
sub
bound
add
mov
ds
les
sub
pop
insl
shlb
adcb
mov
xchg
jl
lods
adc
les
hlt
push
gs
pop
mov
jne
inc
ss
arpl
push
push
push
clc
xchg
cmp
cmc
loop
xchg
sbb
lcall
dec
inc
jns
divb
jns
std
mov
rolb
out
and
adc
mov
int3
divb
es
sub
and
and
lea
daa
aas
jp
scas
movsb
pusha
cmp
icebp
sbb
scas
ja
insl
icebp
sarb
ja
aas
adc
sbb
inc
mov
mov
nop
stos
add
dec
fdivrs
jo
je
jne
cltd
jg
std
insl
pop
cltd
jl
iret
je
lret
ljmp
pop
js
ror
sarb
lret
jmp
inc
popa
dec
insb
dec
mov
and
cmp
loope
lea
cmpsl
stos
sub
das
in
scas
cli
push
outsl
add
cmp
int
sub
loop
jno
jne
hlt
sbb
insb
and
cmp
stos
inc
popf
sti
mov
mov
fidivrs
xor
in
mov
mov
mov
gs
mov
adc
int3
test
sahf
in
adc
mov
mov
ret
stos
lea
sarb
pop
inc
stos
dec
jo
xchg
or
fwait
xchg
in
je
test
mov
xchg
lds
sub
shll
sbb
fwait
dec
push
jmp
cmpsl
daa
xchg
mov
jecxz
cwtl
bound
sahf
and
les
insb
pop
outsl
test
jle
fwait
cltd
outsl
or
xchg
test
call
rcl
cli
jns
mov
add
jg
xor
xor
jbe
dec
dec
inc
sub
pop
push
add
out
xor
or
cmp
ss
sbb
pusha
add
inc
in
nop
mov
adc
outsl
mov
and
adc
cmp
xchg
pushf
pop
jmp
dec
loop
fwait
inc
decl
mov
push
dec
fisubrl
and
sbb
test
jnp
pop
iret
jae
mov
loopne
mov
push
loopne
loopne
into
sbb
fucomp
dec
lea
stos
and
out
adc
mov
add
cwtl
mov
sbb
out
adc
mov
loop
push
std
inc
fsub
sub
inc
sahf
iret
stos
jecxz
cli
es
jae
cmp
stos
sub
stc
push
cmp
adc
dec
ficomps
mov
xchg
cmp
fiaddl
xor
xchg
mulb
lcall
div
inc
dec
ja
mov
test
aaa
xchg
jns
insl
mov
mov
jp
add
xchg
cltd
xchg
inc
inc
ds
fs
out
inc
mov
out
mov
imull
sub
pop
data16
cmp
pop
enter
int
lret
les
ret
adcb
mov
push
jmp
cmp
fs
sarl
xchg
ret
xchg
lret
adc
stos
stos
roll
jl
xchg
psubw
stos
mov
push
iret
ds
pop
cmp
dec
sbb
mov
out
adc
push
inc
andl
dec
jbe
jge
push
fnsave
data16
std
jnp
push
adc
ss
shlb
push
mov
xchg
xor
rcr
adc
sbb
aas
push
pop
negb
mov
dec
or
xchg
push
add
dec
xchg
push
cmpsb
pop
mov
xor
xchg
pop
adc
cmp
pop
dec
sub
or
out
rcrb
stos
xlat
mov
insl
in
test
mov
jle
stos
add
and
popa
pop
cmp
pop
dec
insb
shl
inc
insb
fisubrl
xorb
ret
dec
sets
jnp
lds
mov
push
xor
inc
movsb
mov
dec
sub
out
jl
mov
add
clc
mov
pop
cmp
xor
mov
pop
pop
loope
fistl
stos
jns
pop
bound
mov
in
mov
push
iret
dec
scas
xor
xchg
push
jmp
icebp
jnp
cmp
dec
movsl
repnz
hlt
mov
fisttpl
data16
push
subl
sbb
dec
cli
mov
sti
fcmovb
ret
mov
pop
push
mov
scas
mov
inc
cli
mov
xchg
dec
sarl
push
push
les
in
mov
jne
jne
popa
cld
fst
inc
call
inc
push
pop
cli
jo
mov
cli
sub
push
xor
push
pcmpgtb
call
sbb
in
adc
add
cmp
cmpsb
pushf
js
repz
mov
cmp
push
clc
dec
xchg
and
push
push
lods
aas
push
ret
inc
cmp
in
or
cli
cs
sahf
push
mov
mov
fiadds
inc
inc
fnstsw
std
add
adc
mov
dec
lcall
sub
dec
mov
dec
xlat
scas
ja
jge
ret
mov
idiv
inc
jb
pop
cmpsl
in
pop
nop
xor
inc
rcrl
xlat
sahf
ffree
lds
pmaxsw
enter
jno
mov
ljmp
cmp
call
test
sbb
lock
mov
cmpsb
imul
lret
cmc
xchg
cli
mov
insb
sub
push
sarb
sti
inc
or
nop
daa
push
rcr
leave
ds
std
dec
sahf
add
add
in
jmp
push
mov
sub
ss
dec
push
xor
inc
notb
xchg
ds
mov
lds
mov
push
mov
or
imul
repnz
out
mov
clc
and
pop
dec
in
mov
cmp
inc
cmp
dec
push
push
popa
jbe
xor
and
jg
dec
jecxz
sbb
cmc
adc
inc
es
incb
add
or
add
sub
lods
movsb
push
xlat
outsb
nop
dec
sub
mov
cld
int
lcall
mov
mov
xor
cmpsb
popf
fdiv
or
xlat
jg
je
stc
outsb
inc
negl
mov
outsl
xchg
jg
pop
and
adc
setnp
fisttpll
mov
cwtl
xor
xor
leave
xor
push
test
xchg
mov
movsl
jnp
out
addr16
cltd
ss
jb
mov
push
push
rclb
pop
add
insl
xor
pop
rcr
clc
pusha
cmp
and
inc
inc
sbb
inc
add
cmovge
push
dec
inc
mull
push
iret
sub
or
ds
or
xchg
ret
pop
lret
inc
xchg
push
inc
push
enter
mov
ss
lahf
stos
shrl
mov
lea
xor
in
adcb
push
jl
inc
in
pop
mov
scas
lea
nop
imul
sbb
aam
or
mov
fists
je
mov
mov
fsts
adc
stc
inc
jge
push
shl
mov
enter
mov
mov
mov
ret
je
mov
stos
arpl
or
data16
in
fs
pop
daa
test
xor
pop
sbb
mov
ret
and
fldln2
popf
ja
movsl
xor
sbb
test
aaa
cmp
sbb
test
mov
adc
pop
outsb
or
cwtl
jle
or
push
sub
inc
pop
inc
test
lcall
or
fcmovb
sbb
pop
insl
loopne
adc
adc
ljmp
test
pop
rep
bound
mov
xchg
dec
cmp
mov
and
push
xor
rcr
rorl
pop
xchg
mov
adc
daa
cld
add
mov
stos
ret
test
out
add
push
adc
sbb
push
pop
mov
push
lret
mov
aaa
idivb
rol
ret
mov
fstpt
mov
push
mov
int
push
adc
fdivrs
mov
ffreep
add
cmp
clc
add
adc
outsb
popa
js
out
fisttpl
xchg
cmp
add
mov
icebp
jp
dec
dec
xchg
xchg
adc
adc
xor
mov
pop
jp
cmp
into
popf
lea
scas
lods
dec
scas
cltd
rorb
add
iret
or
idivl
inc
adc
sarl
sub
cs
shr
cmp
xor
mov
lret
rcll
xchg
sbb
push
pushf
bound
nop
lret
hlt
mov
or
sub
xchg
shr
dec
aas
aaa
clc
aas
add
mov
lds
mov
push
xchg
loope
gs
pop
outsl
pushl
sahf
jg
mov
adcl
inc
negl
sbb
outsl
mov
xchg
lahf
lcall
adc
sbb
adc
push
pop
inc
inc
push
push
inc
lret
or
pop
adc
out
stos
mov
ljmp
arpl
dec
inc
mov
adc
sub
inc
mov
aas
mov
pop
cmp
jmp
clc
fs
lock
in
scas
push
loop
xchg
testb
dec
stos
cmp
or
mov
in
cltd
xchg
add
cmp
leave
mov
imul
mov
inc
dec
enter
dec
push
xchg
mov
stos
ret
mov
mov
mov
sbb
sbb
and
push
ds
push
push
pusha
je
inc
out
inc
jle
ficoms
sti
jnp
lgs
jp
sub
scas
shrb
sub
inc
fs
and
pop
stc
ja
fimuls
lock
lock
jae
out
lret
fdivs
add
sub
movsb
scas
shr
dec
call
or
popa
or
or
or
jmp
faddl
pop
mov
mov
ret
popa
aas
pushw
push
dec
test
mov
mov
movsb
jmp
and
inc
mov
jp
test
xlat
lods
pop
es
mov
inc
in
les
adc
stc
js
hlt
pushf
add
push
and
jge
jne
mov
sbb
sub
popa
std
movb
cmpl
lods
stos
outsl
xchg
cld
shrb
mov
popf
orl
out
xchg
nop
mov
cmp
mov
test
and
sbb
mov
sbbl
jp
inc
mov
xlat
pop
out
mov
xchg
popa
mov
pop
jns
cvtdq2ps
int3
int
scas
cmp
test
iret
addb
test
int
pop
imul
cmp
push
inc
fidivrs
mov
jnp
pushw
add
mov
xlat
je
nop
dec
push
jnp
dec
mov
cld
mov
repnz
mov
hlt
xchg
pop
push
jl
add
push
mov
rorl
push
or
add
push
stos
inc
psubd
jne
pusha
cld
stos
int3
adcb
imul
inc
sti
dec
mov
repz
add
mov
sbb
dec
sbb
pop
repnz
leave
mov
iret
stos
and
push
cs
push
add
loop
std
add
jmp
dec
add
add
divb
mov
cld
mov
jg
mov
test
xchg
movsb
jns
mov
jne
aam
mov
std
sub
mov
jmp
in
push
jp
loopne
mov
mov
ret
jle
lret
sbb
pop
arpl
cmpsl
sbb
and
inc
xor
pop
pop
cs
insl
icebp
xor
lods
insl
inc
sahf
add
inc
pcmpgtw
inc
cmpsb
in
cmpsl
roll
mov
or
stos
test
inc
mov
mov
push
lock
in
scas
lret
mov
inc
andl
enter
inc
pop
cmp
push
push
jo
cmpsl
xchg
sahf
push
in
xor
call
out
sbb
aad
and
sbb
bound
mov
loope
cmp
call
add
pop
lea
xor
arpl
movsb
mov
cltd
xor
stos
push
clc
mov
testl
bound
ret
cwtl
sub
or
pop
pop
adc
pop
cmpb
mov
out
mov
lock
std
test
orl
jae
xlat
in
sub
ja
cli
lds
xor
cld
pusha
int3
inc
mov
out
pop
sub
xor
lock
ds
push
lods
add
cwtl
jmp
pop
xor
cmp
outsb
jmp
scas
mov
out
xchg
xchg
imul
xor
inc
add
push
jl
rol
xchg
int
mov
mov
stos
adc
push
scas
mov
sub
rolb
push
mov
fs
cmpsl
pushf
mov
repz
mov
stos
call
orb
xor
in
dec
cmp
fldenv
in
push
adc
loopne
mov
test
inc
jne
es
xor
jb
hlt
imul
jge
outsb
lret
or
call
mov
inc
pop
jp
lea
sbb
lret
adc
inc
in
test
into
pop
leave
jb
fcom
jo
insb
out
mov
add
out
cmpsb
dec
or
out
mov
stc
xchg
mov
scas
jns
mov
sub
aas
mov
aam
or
in
fwait
scas
push
push
test
xchg
test
xchg
es
push
outsl
pop
scas
jp
push
in
xchg
dec
pop
jmp
les
mov
fxch
dec
cmp
daa
arpl
shl
in
out
push
xchg
bound
imul
fs
mov
out
movsb
dec
imulb
cmp
xlat
or
subl
test
push
lahf
xchg
push
lods
adc
xchg
sbb
xchg
add
push
popf
dec
dec
mov
fnstsw
xorb
pop
sub
lods
lret
fdivl
mov
loopne
std
jecxz
mov
push
js
outsl
in
dec
imul
imul
in
hlt
daa
pop
inc
push
fs
dec
aaa
xor
jmp
mov
out
loopne
repnz
pushf
es
sbb
leave
addl
xchg
jb
adc
rorb
lahf
arpl
in
jb
sbbb
outsl
sbb
daa
div
pop
insb
or
dec
lods
mov
lcall
roll
mov
aaa
mov
mov
test
or
push
xor
clc
dec
xor
push
xchg
clc
imul
lret
push
cmc
mov
push
in
int
or
dec
adc
insb
mov
imul
sti
mov
and
mov
jno
lods
jns
addr16
push
jbe
xchg
mov
adcb
inc
push
mov
pop
xchg
rorb
cli
and
push
adc
xchg
push
add
sub
jle
mov
test
push
mov
rclb
aad
sahf
mov
andb
fstl
ja
dec
nop
shl
in
out
or
mov
mov
lods
out
fsubs
jl
push
stc
cmp
mov
xchg
xor
fdivr
jle
adc
sub
or
subl
or
mov
aad
shrl
rcrl
dec
mov
cmpsl
aaa
scas
lods
or
sub
mov
xchg
out
imul
push
in
xchg
negl
sbb
aaa
dec
hlt
out
lahf
fldcw
in
jnp
pop
cmc
dec
xor
push
dec
pop
ljmp
cmc
and
sbb
lahf
xor
js
call
lcall
inc
aad
js
xchg
adc
fcoms
filds
xor
add
mov
sbbl
cs
inc
cmc
mov
shll
call
inc
insl
xorl
aas
aas
fstps
dec
xor
es
push
imulb
xchg
mov
in
mov
mov
inc
push
cmpb
dec
in
mov
adc
push
push
mov
dec
test
lods
sti
fs
and
mov
cmp
xor
stc
push
mov
xchg
in
mov
fwait
ret
stos
or
loop
dec
or
cs
lahf
sbbl
cmp
xchg
fcomp
sbb
orl
loopne
jae
test
mov
pop
cmpsl
mov
insl
repz
adc
in
popf
push
xchg
push
cvttps2pi
js
lret
lret
pop
jmp
outsl
in
cmp
mov
sbb
cmp
jo
dec
inc
aam
jno
sub
dec
inc
call
dec
adc
popa
xchg
aaa
popa
pop
popf
test
pop
add
sub
xchg
iret
xchg
adc
das
xor
adc
cmp
stos
clc
mov
in
cli
daa
movsb
cmp
jmp
aas
mov
push
xlat
adc
out
shll
test
sub
mov
out
cmp
lret
aas
daa
mov
cmp
es
mov
sti
xchg
dec
ffree
jb
xor
jnp
jmp
mov
sub
pop
or
cmp
mov
insb
out
adc
loope
sub
idivb
hlt
dec
das
pop
dec
aaa
je
mov
insl
popa
test
lahf
cs
xchg
pop
mov
loopne
iret
mov
cmp
cmp
aam
add
push
stos
outsl
mov
iret
daa
mov
add
inc
int
sub
mov
or
and
aad
cmp
outsb
pop
add
scas
mov
cmp
loopne,pt
out
popf
xchg
pop
insb
mov
mov
in
sub
int3
outsb
mov
jg
iret
inc
insb
jecxz
xchg
cli
adc
xor
mov
add
js
mov
in
add
fcoms
inc
or
leave
shlb
add
push
mov
jmp
fidivrs
jecxz
xlat
adc
shl
scas
inc
sar
dec
pop
jnp
and
xchg
jbe
fwait
mov
mov
xor
dec
cmp
push
inc
mov
sub
fidivrl
in
pop
loop
mov
fnsave
mov
add
rcll
xor
mov
out
lahf
test
stos
ss
cs
psubq
shll
jmp
mov
jp
jnp
dec
rcr
ss
daa
cld
scas
cmp
jbe
sar
sbb
cmp
jle
jnp
push
xchg
test
push
adc
mov
and
mov
pop
mov
aas
lds
jp
and
push
sahf
imull
dec
dec
xor
cmp
sbb
cmpsl
and
inc
aas
mov
or
repz
bnd
and
fimull
daa
xchg
pop
push
test
fdivr
scas
enter
popa
push
addr16
xor
xchg
outsb
repz
fdivp
add
stos
iret
or
cmp
jmp
xchg
inc
push
addb
inc
inc
cmc
inc
icebp
push
inc
fists
mov
sar
ds
jp
rorl
add
jns
mov
or
shl
sbb
insb
out
out
mov
shrb
cmp
push
cli
xchg
xor
aad
sub
shlb
xchg
out
mov
outsl
cmpsl
mov
and
test
notb
dec
sahf
rep
mov
dec
adc
adc
push
sbb
andl
lret
push
jp
xorb
clc
outsl
movsb
or
mov
jnp
gs
fwait
xchg
push
std
dec
and
adc
jnp
int3
jge
cmpl
mov
push
mov
mov
sub
xchg
jb
inc
test
push
movl
in
outsl
mov
inc
test
inc
sbb
movsb
movsb
iret
mov
sub
mov
jbe
mov
dec
and
call
adc
adc
inc
or
addr16
dec
testl
sbb
rcll
notb
rol
add
leave
jne
jns
xchg
icebp
das
mov
jns
pop
add
lds
clc
push
sub
dec
ss
stos
aam
push
dec
adc
arpl
mov
push
fnstsw
and
in
ds
je
cmc
sbb
dec
les
icebp
jl
xor
pushf
cwtl
test
bound
imul
or
lcall
cmp
and
mov
lds
clc
pop
push
nop
xchg
add
in
jge
pop
arpl
inc
cmp
add
and
mov
push
add
jle
cmc
popl
mov
adc
call
roll
xchg
mov
jge
leave
gs
mov
dec
cltd
sub
ja
add
mov
int
cmp
mov
or
cmc
dec
into
adc
xchg
sub
push
dec
loope
mov
sub
pop
cmp
arpl
xor
sbb
cmpl
dec
mov
es
clc
cld
insb
fldenv
stos
xchg
cmpsl
xor
gs
dec
clc
and
pop
jns
fcmovne
ret
dec
sub
stos
pop
adc
lods
xor
mov
lods
mov
jb
outsl
mov
dec
add
inc
inc
lahf
pop
outsb
push
and
inc
insb
loopne
dec
dec
xor
je
mov
fldcw
in
insl
fs
arpl
pop
sub
pop
les
sbbl
mov
stos
imul
lret
call
ret
out
mov
pop
loop
inc
bound
lret
mov
push
outsb
dec
loopne
out
cmpsl
mov
pusha
test
imul
jle
cld
sub
adc
aam
xchg
sarl
cltd
bound
fucom
inc
add
repnz
aam
cmp
mov
cmovo
jb
cmp
cmp
inc
dec
sarl
fdivs
xor
cmp
adc
cwtl
cltd
xlat
repnz
rorl
jo
stos
ljmp
scas
mov
cmpb
aad
cltd
cmp
nop
xor
das
mov
push
shrl
sbb
loope
cmp
pop
or
out
bound
mov
into
stc
mov
pop
pop
cmp
mov
inc
xor
jmp
repnz
ret
leave
pop
cmpsb
sub
xor
aam
push
xor
mov
jge
stos
or
loope
aas
cmp
jnp
repz
or
out
cmpsb
js
xor
imul
pop
add
push
cmp
pop
ljmp
adc
push
scas
sbb
cmpsb
and
in
std
mov
cmp
xchg
sbb
inc
adc
sahf
jno
jne
popa
cwtl
mov
and
lods
and
loopne
mov
jl
mov
popa
or
hlt
cmpsl
cmpsb
pop
xor
mov
es
inc
and
mov
aas
mov
push
in
and
inc
mov
mov
pop
orb
test
mov
xchg
repnz
cmp
aaa
fwait
xor
jns
repz
int
and
cli
cltd
push
xchg
adc
add
sub
mov
out
in
mov
out
call
and
mov
out
push
lock
pop
psubsb
mov
sbb
mov
rcrb
shrb
icebp
mov
mov
int
inc
movsb
in
sbb
in
cmp
minps
sub
test
fisttpl
popf
imul
and
push
pop
adc
stc
mov
push
push
les
ja
or
fucom
jmp
ficoms
xchg
push
pop
add
xchg
or
mov
mov
jl
out
inc
jg
mov
fstps
mov
rolb
add
ret
xchg
xchg
mov
dec
xchg
lcall
fidivrs
gs
faddl
popa
stos
pop
dec
inc
pop
push
inc
out
mov
mov
sbb
fisttpl
mov
add
cmp
mov
daa
inc
pop
int
mov
mov
mov
movsl
pop
dec
aad
dec
xchg
clc
pop
push
cmp
cmp
xor
in
xchg
lods
fucomi
xchg
enter
mov
and
je
dec
lcall
test
mov
mov
pop
repnz
shlb
dec
insb
push
rcrl
test
dec
sbb
jg
leave
xchg
inc
mov
add
mov
enter
sub
lock
mov
jne
sub
cltd
adc
adc
sub
or
dec
ljmp
imul
adc
in
add
xchg
pop
push
sbb
and
test
sub
inc
fcomp
mov
clc
mov
add
and
loopne
loopne
jnp
mov
jne
pop
pop
mov
ja
adc
push
push
sub
test
xor
es
or
fcomps
xor
pushf
dec
mov
add
sbb
mov
jns
and
aad
jp
push
mov
stc
sub
clc
pop
cs
int
fs
dec
dec
lcall
xchg
fsts
jo
sub
cmp
insl
jg
insb
dec
rcr
mov
pop
mov
stc
pop
cmp
loope
push
mov
jae
xor
add
xchg
add
test
mov
or
dec
aad
push
mov
jge
ja
icebp
aad
ret
aas
lret
pop
mov
lock
xor
pop
lods
mov
adc
subl
enter
cmpsb
mov
cmpb
pop
gs
mov
jp
inc
cmp
jb
cmpb
pop
test
test
call
jecxz
inc
jl
js
fs
mov
pop
xchg
enter
sbb
shll
lcall
mov
xor
mov
mov
jne
into
lret
mov
or
cld
mov
bound
je
in
jp
dec
or
sbb
cmpsl
aam
and
push
aam
pop
stos
lea
jle
push
inc
add
sub
pop
dec
nop
fmulp
cwtl
mov
sbb
sahf
inc
repnz
jge
pop
lret
and
dec
xlat
cmp
outsb
adc
and
subb
inc
clc
xor
cmc
and
push
adc
stos
xor
rclb
cmpl
fs
inc
rcrb
aam
and
add
stc
xchg
cmpsb
push
aam
inc
inc
xor
mov
mov
dec
mov
leave
es
adc
pop
nop
gs
scas
cs
mov
jnp
jle
xor
push
dec
adc
xchg
jbe
push
scas
clc
sarb
xchg
lahf
pop
loopne
mov
adcl
popf
mov
test
adc
or
xlat
xor
or
ret
test
dec
fwait
and
insl
jno
loope
xchg
add
jbe
sbb
std
rcll
popf
sbb
adc
push
leave
shlb
jge
mov
mov
rolb
sbb
lds
mov
sbb
jg
repnz
nop
sbb
test
mov
scas
repnz
dec
push
cli
fsubrl
lret
cmpsl
loopne
cmp
xchg
outsb
pop
xchg
adc
jns
and
adc
cmpsb
mov
sbb
xchg
pusha
jl
mov
fwait
test
aam
pop
adc
add
mov
sub
mov
dec
inc
push
mov
jno
jns
push
imul
add
pop
mov
nop
pop
xchg
inc
jb
xor
andb
push
mov
fstp
and
push
lcall
fisubl
push
or
xor
jmp
outsb
mov
add
sub
mov
sub
xor
icebp
lret
leave
push
pop
xlat
and
sbb
and
mov
mov
arpl
xor
lods
out
inc
adc
subb
push
lea
test
cmp
and
gs
cmpsb
call
call
ret
movsl
jae
lods
out
push
and
and
cltd
cli
outsb
jecxz
lds
jecxz
in
mov
mov
jbe
ffree
cmpl
dec
jns
mov
cmpsb
mov
xor
mov
and
mov
aad
inc
jb
mov
mov
fistpll
mov
adcb
pop
mov
jb
jecxz
fidivrs
out
cmp
mov
rcll
xchg
test
dec
inc
cmpsb
push
mov
adc
xchg
loopne
mov
mov
pop
sub
mov
scas
mov
imull
add
xchg
stos
loope
xor
les
push
test
repz
sbb
jae
lret
xchg
cld
jmp
nop
adc
fnstsw
mov
mov
push
or
das
mov
xchg
xor
and
sub
jb
dec
cmp
fdivl
mov
sub
loopne
in
pop
jge
test
bound
add
xchg
push
movsb
sbb
in
inc
mov
aas
arpl
sbb
inc
jmp
pop
test
pop
shrb
loop
fistps
dec
cmp
int
and
mov
daa
and
jle
inc
jmp
fmul
out
popf
adc
ss
lea
and
fstps
in
ljmp
int3
bound
sbb
jns
or
ljmp
out
xchg
dec
pop
xchg
mov
mov
jmp
ss
orb
and
cmpsl
shrl
stos
or
xchg
push
std
ljmp
adcl
pusha
rclb
insb
aad
cmp
mov
test
jns
mov
adc
pop
xchg
or
add
inc
xchg
push
add
jp
jne,pt
mov
icebp
pop
into
popa
mov
loop
stos
cwtl
sar
gs
sbb
lea
inc
push
fnstenv
shrb
outsl
test
lods
dec
aaa
idiv
pusha
xchg
movsl
outsb
fwait
and
inc
sub
faddl
jbe
push
inc
xchg
test
xlat
in
mov
lods
mov
inc
out
sub
adc
aad
cmp
add
out
sahf
xorl
test
pop
push
or
push
or
inc
enter
push
dec
jg
popf
pushf
lock
lahf
sti
les
out
mov
nop
in
sbb
or
add
pop
inc
and
jge
jnp
mov
leave
xchg
mov
fildll
int
xchg
mov
adc
js
ss
adc
add
mov
out
jge
or
icebp
out
jae
in
test
shlb
repnz
sub
dec
add
mov
fnsave
fdivrl
ret
inc
fdivl
or
lret
dec
in
xchg
pop
jle
icebp
cmp
jge
lea
repnz
push
push
inc
pop
fucomip
adc
gs
pop
movsb
popa
inc
jne
push
cld
pop
jp
or
xchg
repnz
out
outsb
add
mov
mov
push
mov
sbb
cmp
jbe
push
adcl
fwait
add
sbb
mov
adc
xor
mov
dec
std
push
sub
xor
lret
jmp
mov
jnp
xor
popf
and
push
rolb
sbb
cmpl
pop
mov
sub
jp
jo
or
mov
sub
xchg
xlat
addr16
inc
xchg
pop
inc
subl
mov
sub
adcb
sbb
cmpsb
cmpsb
mov
push
testl
mov
pop
push
xchg
jnp
js
fwait
cmp
add
aam
sub
xor
and
or
js
scas
mov
push
jae
dec
jae
loop
lret
or
repz
scas
mov
movsb
xchg
fwait
pop
in
push
movsl
fsubs
adc
and
orl
ss
aaa
xor
and
lock
mov
mov
pop
fldl
scas
push
push
addl
add
btc
sbb
xchg
sub
or
icebp
cltd
scas
push
pop
scas
add
popf
cmp
movsb
lock
insb
push
sbbl
mov
xor
ret
sti
sti
inc
xor
mov
gs
int3
xor
fstps
lock
xor
mov
fadds
or
fstl
jp
xchg
sbb
adc
jl
add
dec
mov
or
in
pop
or
inc
fildll
cmp
or
test
test
mov
imul
fstpl
insl
insl
js
sub
dec
jo
pop
mov
pushf
into
inc
add
jb
mov
pop
test
mov
xchg
sub
push
cmp
outsb
daa
das
mov
cmp
ret
push
shrb
inc
adc
aad
mov
xchg
lahf
insb
out
xchg
enter
std
xchg
sbb
in
fadd
das
cld
pop
xchg
or
push
rorl
test
adc
sbb
mov
sub
shlb
lea
mov
iret
add
xchg
cltd
cli
ret
mov
in
adc
clc
iret
cs
lcall
out
pop
sbb
cmp
not
int
dec
sub
lcall
das
popf
call
mov
test
pusha
push
jns
fstpl
cli
lods
jns
out
and
inc
lret
pop
and
pusha
mov
shll
insb
stc
sbb
adc
mov
jge
xchg
cmpl
in
push
mov
mov
sahf
jne
lods
pop
mov
stc
dec
lahf
mov
cmp
cmp
jns
in
pop
dec
das
adc
test
xor
les
adc
add
xchg
jp
jge
pop
in
mov
popa
inc
int3
into
inc
imul
mov
loop
mov
shl
push
adc
popf
test
mov
sub
pop
movsb
xor
pop
mov
movb
mov
lcall
mov
outsl
clc
adc
cli
insb
mov
sub
sub
repz
aam
filds
mov
pop
push
jnp
inc
cmc
or
jb
pusha
and
shl
xor
mov
push
pop
lret
dec
push
cmp
mov
in
cmp
jno
int
mov
push
fsubl
pop
test
scas
and
in
fs
pop
pop
or
add
and
and
xchg
mov
sahf
mov
push
lock
jne
xchg
js
mov
add
movsb
mov
insl
mov
and
das
not
addr16
inc
cmp
in
and
mov
dec
push
int
andb
je
adc
nop
scas
popl
or
fcoms
mov
sbb
cli
ficoml
xlat
inc
pushf
xchg
popf
test
cmp
outsl
stos
movsl
add
push
mov
push
dec
cmp
push
lock
mov
mov
fidivs
ja
xchg
mov
repnz
fisubrs
repnz
out
pop
pop
ja
xor
out
lret
adc
cmp
jb
out
mov
xor
and
ret
push
repnz
lret
mov
outsb
divb
sti
pop
jne
xor
in
adc
adc
or
mov
pop
cmc
push
or
or
fisubs
add
mov
mov
pop
cmp
sbb
or
hlt
divl
aaa
xchg
and
lret
inc
pushf
outsb
jge
out
xor
rcr
xchg
pop
and
aas
bound
fisubrl
push
mov
and
in
xchg
test
mov
test
scas
sbb
ds
pop
in
dec
sbb
sbb
and
movsl
cs
push
cld
sti
out
adc
daa
jo
adc
and
out
fs
jns
mov
rcr
mov
shlb
test
dec
and
push
gs
out
repz
pop
jecxz
xchg
lods
sbb
inc
xor
gs
test
jecxz
out
shrb
or
pop
inc
sub
movsl
jl
imul
addr16
lret
rorb
jns
dec
out
je
rorb
cs
imul
in
aaa
push
jno
mov
mov
mov
ss
lret
push
rcll
push
jge
sub
movsl
jle
xchg
xchg
adc
jne
and
cmp
push
and
cs
inc
pushf
dec
sub
call
arpl
or
dec
in
jb
js
and
shll
sbb
mov
sbb
sub
jp
cmp
and
adc
pop
xchg
lds
pop
data16
pop
jl
pop
add
mov
loopne
pop
stc
lods
out
mov
mov
nop
or
push
xchg
lea
or
sbb
push
push
mov
mov
push
xor
dec
cmpsl
inc
cmp
and
loope
mov
add
aas
xchg
mov
ljmp
out
pop
adc
imul
or
mov
jae
pop
int
shl
mov
push
mov
lahf
sti
pop
cs
addl
enter
cltd
jle
arpl
jecxz
push
in
aaa
int3
inc
cmp
xor
cld
shlb
test
dec
xor
mov
fimuls
test
jle
pop
adc
je
in
jg
test
pop
bound
mov
lods
imull
js
sub
sbb
adc
les
xchg
ret
xor
xchg
iret
in
ja
dec
sub
scas
mov
push
je
ja
add
imul
add
push
icebp
out
js
cwtl
sbb
pop
jmp
sub
insb
fistpll
push
pop
repz
inc
lods
outsl
lds
test
pop
and
cld
jmp
mov
movsb
cmp
mov
dec
dec
call
jo
in
sbb
sub
and
lods
mov
cmpsb
push
cmp
dec
repnz
cli
mov
mov
clc
lds
jecxz
arpl
inc
adc
inc
fucomi
addr16
mov
imul
bound
pop
sub
cs
mov
mov
int3
mov
lret
pop
cli
aas
ja
out
inc
mov
push
hlt
out
dec
imul
push
repz
es
xchg
arpl
mov
insl
inc
pop
mov
adcl
pop
ret
call
jno
aas
lret
pop
push
repnz
sbb
sub
adc
fstp
jmp
xor
xor
in
and
cltd
jnp
xlat
out
or
icebp
mov
inc
popf
cs
mov
sahf
push
int3
out
push
loopne
leave
sahf
mov
adc
and
popf
cli
cmpsl
subb
xchg
es
out
dec
rcl
clc
test
jne
addr16
mov
adc
aad
push
fwait
outsl
or
daa
lods
xchg
lcall
push
add
cld
fcompl
cltd
xor
outsl
aad
xor
jmp
pushf
outsl
jns
inc
and
xchg
push
iret
insb
or
ds
shr
out
in
or
cmp
pop
scas
dec
jae,pn
adc
mov
lret
sahf
xchg
scas
add
cmpsb
inc
in
inc
sub
or
mov
nop
jno
sahf
jp
adc
daa
mov
cmp
rorl
fisubs
mov
mov
sub
mov
pop
adc
push
les
fisubs
repnz
in
lock
sub
lods
gs
repnz
add
xor
push
movsb
mov
cld
adc
mov
lret
stos
and
insl
xchg
cmp
inc
lock
jnp
jge
pop
in
adc
mov
inc
adc
lret
lea
mov
push
lahf
add
test
fwait
addb
pop
mov
push
insb
js
jecxz
push
add
outsb
aaa
lds
in
and
pop
imul
ljmp
xor
mov
movsb
je
dec
mov
out
and
rorb
adc
cld
jb
mov
mov
add
push
enter
cmp
cltd
inc
cs
in
add
rcr
in
sti
mov
xchg
sar
ret
mov
and
out
repnz
mov
lds
js
jle
push
ljmp
sbb
xchg
sbb
adc
add
imull
pop
jg
sbb
jp
icebp
xorl
in
popf
lahf
sub
lcall
adc
into
dec
sub
sub
cmp
sbb
cmp
mov
loopne
mov
mov
cmpsb
or
push
xor
andl
mov
subl
ret
or
push
in
xor
dec
lods
push
jle
mov
fildl
adc
lods
movsb
lcall
sbb
divl
icebp
add
push
add
shll
xlat
ljmp
mov
xor
loopne
inc
pop
mov
loope
iret
leave
xor
mov
and
jecxz
pop
xor
cmpl
cmp
push
mov
mov
jne,pn
pop
push
inc
mov
jp
jecxz
das
pop
xlat
sub
loope
loopne
in
test
dec
imul
dec
push
cmpsb
jnp
dec
fwait
mov
hlt
scas
push
xchg
jnp
loopne
mov
scas
push
fisttpll
mov
call
aad
mov
adc
mov
sbb
out
negb
dec
mov
push
add
stos
imul
xchg
ret
pop
sbb
xor
rcrb
xlat
lods
sbbl
sbb
xor
ds
or
push
or
jle
xchg
nop
xchg
add
jbe
cmp
mov
jno
mov
push
mov
test
in
popf
mov
popa
mov
xor
outsl
or
pop
orb
cmpsl
jne
sub
wrmsr
add
mov
or
je
and
sbb
roll
test
ret
dec
pop
sahf
stos
lret
fs
stos
or
or
andb
sub
fimuls
and
fcompl
lds
jl
and
lcall
fidivrs
stc
nop
sbb
dec
pop
mov
xchg
sbb
test
das
in
inc
std
and
test
jle
jle
jbe
cld
fisttps
sub
xor
lret
pop
cmp
cmpsb
rcll
ds
sbb
fistpl
sub
xchg
mov
push
fwait
cmp
clc
daa
cmpsl
add
ja
addb
xorl
sbb
repnz
cltd
push
mov
pop
das
cltd
xor
add
inc
xor
jae
ljmp
jmp
mov
push
and
fs
add
jge
jne
cmp
jle
jne
and
mov
sti
xor
mov
or
loope
or
out
stc
push
cmp
or
mov
pop
and
clc
sarl
fs
and
sbb
pop
push
mov
push
aam
add
loope
test
jns
out
dec
rorl
push
cmpsb
into
enter
gs
xchg
js
popa
mov
mov
sub
test
loop
ljmp
ljmp
xchg
aam
pop
les
rolb
mov
push
jmp
out
dec
adc
neg
popf
sbbb
and
dec
push
push
fs
push
mov
daa
xchg
push
cmpxchg
fidivl
pushf
sarl
cmp
xorb
cmp
adc
bound
loope
insb
jbe
mov
push
aam
push
ret
sub
push
pop
jno
cmp
dec
insb
sub
mov
pushf
loop
jmp
cmc
fdivs
ds
daa
inc
daa
mov
xor
or
mov
fmull
jb
stos
shrl
pop
int
fcmove
pop
dec
mov
leave
stos
dec
loopne
ss
mov
nop
stos
in
pushf
adcb
or
jae
repz
add
scas
imul
cmpsl
adc
mov
cld
sub
and
mov
sbb
stos
jne
cmp
imulb
sahf
in
push
andb
in
in
sbb
sbb
lret
mov
lock
sub
aas
sub
subb
leave
push
mov
xor
test
xchg
jg
mov
stos
fdivrl
mov
or
cmc
test
out
daa
jno
in
cmc
or
sub
int
iret
xor
xor
or
insb
push
mov
mov
push
pop
cmc
ds
sbb
roll
pop
insl
xor
mov
push
pop
aaa
loop
mov
mov
push
jg
idivl
in
cmp
ljmp
aad
std
scas
mov
lds
lods
add
push
loope
or
popf
arpl
test
outsb
xor
dec
sar
adc
pop
mov
push
iret
xchg
push
push
mov
lods
gs
or
push
outsb
jge
shlb
xchg
rcr
out
pop
add
fadds
or
loop
cmp
fists
mov
xor
loopne
iret
lahf
cli
test
enter
pop
outsb
pop
lret
cmp
sti
iret
orl
lds
xor
negl
sub
and
insb
dec
sub
shr
loopne
mov
xor
fsubp
in
ret
int
xchg
and
popa
xor
faddl
jp
movsb
clc
js
sbb
adc
lds
mov
aam
movsb
inc
push
cmpsb
push
cmp
clc
pop
stos
mov
ffree
dec
call
ja
or
or
mov
dec
dec
imul
and
ret
cwtl
sbb
adc
mov
mov
loop
xchg
repz
pop
das
push
icebp
pop
mov
lret
add
lret
jae
sub
dec
hlt
pop
sbb
scas
int
cwtl
jns
push
lret
xchg
ss
or
lock
mov
movsl
es
pushf
ljmp
roll
scas
scas
pusha
mov
and
lods
dec
cmp
inc
sub
popf
jmp
xor
or
add
xchg
inc
sub
sbb
sub
into
push
mov
cs
data16
or
mov
dec
pushf
sti
sti
and
popa
or
lret
hlt
mov
push
push
aam
test
fnsave
cmpsb
loop
xchg
test
jo
dec
jne
lods
xchg
sti
clc
out
insl
pop
xor
mov
jg
mov
pop
adc
ss
shlb
out
xor
ret
jp
pop
movsb
test
push
push
mov
scas
push
lret
test
push
hlt
mov
cmpsl
lcall
popa
xchg
sbb
sbb
lods
xor
pop
push
mov
into
add
scas
inc
fdivp
jmp
test
and
mov
out
orb
xorb
sub
imul
pop
pusha
mov
clc
inc
adc
mov
movsl
js
pop
dec
inc
mov
mov
inc
iret
mov
dec
rorb
mov
imul
mov
sbbb
imul
and
mov
mov
jp
xchg
add
xchg
sahf
xchg
pop
ret
pop
and
fidivrs
push
pop
mov
adc
push
xchg
xchg
pop
cli
lods
cmp
or
icebp
cmc
jne
push
aam
pop
or
pop
out
stos
test
dec
adc
mov
fimuls
leave
fsubs
shl
mov
cmp
std
cmc
adc
popa
in
lods
adc
mov
adc
mov
inc
subl
mov
xor
jecxz
idivl
rolb
rorb
cltd
pop
push
push
jp
pop
inc
psubsb
in
cmp
jmp
xchg
jb
cmpb
adc
sarb
jp
cmpsb
mov
jecxz
lcall
pop
xchg
icebp
mov
jns,pt
ljmp
je
outsl
push
mov
ja
movsl
nop
push
xor
ret
into
pop
jmp
cwtl
cmp
outsl
das
lret
mov
xchg
les
ljmp
or
test
test
xchg
and
in
xchg
mov
fisubs
pusha
and
fs
loop
aam
stos
lods
cmp
xchg
les
xor
cmp
jle
xor
pop
shl
incl
jg
imul
stos
cs
sub
add
sahf
outsb
mov
pushf
jne
test
in
pop
and
and
scas
aas
jmp
mov
lods
mov
push
or
les
pop
mov
mov
stos
adc
inc
sti
sbb
rcrl
jno
sub
scas
pop
test
adc
imul
insl
dec
jb
imul
sub
adc
push
movsl
push
out
push
or
push
clc
mov
push
pop
xchg
adc
dec
lods
mov
or
fcmovb
adcl
scas
movl
dec
jecxz
test
pop
push
pop
subl
jmp
daa
xor
shrl
sub
ret
lods
sahf
lods
iret
add
loop
daa
scas
cmp
push
int
sahf
lods
or
sub
push
sarb
pop
clc
push
addr16
dec
jmp
dec
pop
fildl
test
in
lret
mov
test
pusha
imul
addl
inc
xchg
test
frstor
movsl
or
inc
jbe
mov
cmp
movsb
outsb
mov
pusha
rol
push
test
add
mov
sub
dec
xor
pop
mov
or
push
adc
push
cwtl
cmpsl
jecxz
or
lcall
incb
or
fimuls
inc
negl
lods
fmulp
ret
mov
mov
xchg
rcrl
jo
jno
sbb
add
shl
mov
cs
es
mov
in
jnp
pop
xor
mov
xor
xor
into
add
xchg
xlat
mov
pop
pop
sbb
rcrb
aaa
and
aas
addl
and
lret
nop
pop
pop
out
das
push
inc
jmp
inc
adcb
out
lods
idiv
inc
dec
cli
xchg
adc
nop
ss
test
data16
mov
cwtl
pop
pop
data16
stos
pop
loope
cli
cmpsl
ret
inc
lods
inc
mov
add
or
js
or
stos
push
test
ja
popl
std
xor
dec
xlat
fiadds
inc
push
sub
rorl
or
sub
or
and
sub
sti
jp
xchg
ss
mov
jno
cld
mov
lods
scas
sub
xlat
cmp
push
std
fsubs
scas
push
sub
adc
dec
jns
dec
pop
fs
dec
sbb
int
aam
cmp
mov
in
lcall
mov
push
gs
push
jl
add
repnz
dec
dec
call
or
enter
jnp
mov
scas
cwtl
je
sub
xor
sub
pop
pop
jb
sub
sub
fisttpl
mov
aaa
push
inc
cli
bound
mov
scas
push
imul
das
jecxz
xchg
sub
out
bound
sub
and
ret
jae
cwtl
push
add
mov
push
pusha
daa
cmp
push
sahf
cwtl
xor
xchg
sti
cli
cmp
popf
pop
jbe
pop
fldcw
insl
movsb
inc
inc
add
out
add
outsb
es
mov
sbb
push
popf
sub
jo
dec
addr16
fsubs
outsl
cmp
sub
roll
imul
ja
push
pop
loop
dec
pop
fisttpll
sti
pop
clc
fdivl
clc
insb
mov
loopne
out
loope
test
icebp
out
mov
cmp
bndldx
and
lret
mov
sbb
xchg
pop
mov
lods
or
mov
orl
pop
orb
xor
std
push
xor
sub
aaa
or
push
mov
add
cs
pop
stos
mov
aad
movsl
faddl
jmp
jmp
fmull
xchg
mov
fstps
jmp
jp
dec
loopne
sbb
inc
jmp
loop
add
xchg
fistpl
or
mov
dec
js
mov
or
lock
movl
cwtl
pushl
lods
mov
fcmovnb
xor
cmp
xchg
lock
add
fsubr
mov
cmp
push
arpl
jns
popf
and
shll
orb
dec
mov
mov
aad
jnp
mov
test
sbb
jl
pop
xchg
xchg
cli
ljmp
mov
cmp
ljmp
ljmp
jno
gs
sarl
leave
arpl
dec
dec
fidivs
rcrl
loope
and
cmpsb
insl
lods
sti
add
pop
mov
dec
outsl
mov
fwait
subb
xchg
setne
aas
in
ljmp
mov
enter
stos
sub
in
ds
mov
mov
lret
imul
push
cs
arpl
gs
push
mov
daa
int
mov
cmp
lods
aaa
pusha
xchg
add
jno
and
std
pop
ficompl
and
andl
daa
call
xor
and
inc
inc
xor
xchg
jg
cmc
cmp
pop
lret
sub
call
push
push
push
cmp
mov
cmpsl
sub
jmp
fwait
ljmp
mov
or
je
pop
jb
xchg
movsl
cmp
pop
mov
push
das
sub
test
cli
in
aas
pop
sub
xor
es
mov
sub
test
dec
mov
cmovb
outsb
sub
enter
cmc
xor
lods
repnz
mov
fcmovb
jle
dec
popf
fisttpl
imul
jae
je
outsl
orb
pop
inc
push
pusha
pop
out
scas
xchg
push
fadds
cmpsl
in
lods
pop
ljmp
sarb
loop
addb
movsb
push
dec
mov
out
add
mov
aam
push
dec
or
mov
insb
dec
jnp
inc
pop
ljmp
stos
fs
iret
xchg
fbstp
cld
xor
lcall
lret
cmp
xor
ja
lock
jo
out
clc
xor
aaa
out
in
pushf
imul
cltd
dec
mov
fisubs
push
cmp
pmaxub
adc
and
sub
mov
cs
in
xchg
aas
xorl
hlt
xor
adc
jl
dec
js
inc
fwait
in
sahf
enter
call
xlat
fistl
jmp
xor
sti
inc
mov
jl
das
insl
arpl
and
movsl
stc
push
push
stos
lods
popf
rcll
and
test
jo
mov
push
sbb
pop
mov
sub
icebp
in
adc
fistpll
cmc
dec
push
xchg
and
adc
and
cli
lods
or
scas
mov
int3
jp
add
ret
cwtl
and
je
jo
cmpsl
or
pop
pop
and
mov
xchg
mov
add
addr16
adc
les
sti
pop
ret
cld
bound
dec
div
clc
mov
push
icebp
aam
in
shl
cs
dec
mov
scas
out
mov
hlt
xchg
pop
pmulhuw
inc
and
push
xor
pop
mov
nop
fsubs
adc
test
and
scas
xor
jle
cltd
push
aas
xor
dec
negb
cmpsl
add
rcl
sbb
mov
sahf
pop
sbb
stc
pushf
mov
add
mov
stos
sahf
mov
out
pop
push
xor
loopne
xchg
inc
out
iret
or
push
lret
jns
xor
xchg
pop
xorb
nop
loope
jmp
adc
pop
ret
test
xchg
inc
sub
adc
in
mov
adc
hlt
pop
xchg
cwtl
inc
sarl
jb
and
sbb
loopne
jnp
out
jae
pop
and
cmp
hlt
cmc
mov
test
push
xor
mov
jp
push
rclb
pop
es
clc
sbb
stos
inc
and
xchg
mov
adc
jg
clc
dec
sub
jl
lock
mov
imul
movsb
mov
mov
adc
lods
mov
cmp
pop
jnp
push
out
repz
divl
lds
repz
insb
test
lock
ret
sbb
mov
push
cltd
mov
outsl
adc
mov
lahf
jae
cmp
test
or
fisttps
pop
xlat
push
or
add
ret
sbb
mov
xchg
enter
inc
add
es
cli
dec
jecxz
movsl
sbb
pop
sbb
loopne
push
andl
in
lds
pop
add
add
addb
stc
mov
or
push
pop
fisubrl
testl
arpl
loope,pn
mov
test
or
push
push
cltd
clc
add
js
push
pop
inc
jne
push
mov
movsb
jl
dec
ret
ljmp
mov
lds
sbb
imul
ror
mov
repz
and
into
mov
xorb
addl
ret
lock
pop
adc
mov
add
test
arpl
jno
shll
lcall
xor
xor
cmp
and
shrb
inc
jmp
inc
gs
mov
jae
pushf
fildll
inc
insb
cmp
sbb
pop
andl
mov
shll
rorb
mov
pop
fdivl
jne
dec
fsubrl
lods
bound
push
xor
mov
iret
rol
outsb
out
adc
mov
xlat
test
pop
nop
inc
imul
mov
pop
add
movsl
push
out
fsts
pop
jns
adc
ss
ja
outsl
or
dec
xchg
or
jne
mov
repz
xchg
push
mov
shr
out
jnp
add
xor
xor
lret
hlt
out
cmp
jbe
inc
add
inc
aad
clc
xchg
lcall
mov
cmp
jns
testb
xor
lret
fdivrl
sbb
cmp
push
mov
adc
pop
sub
movsb
push
jae
out
sbbb
es
push
daa
into
xor
jae
sub
pusha
lcall
or
imul
adc
fwait
cs
sarb
rcr
repnz
xchg
jbe
int3
lods
daa
pop
cmpsb
jns
int3
xor
adc
jo
mov
adc
loopne
jno
pop
scas
je
sub
outsb
add
sbb
mov
mov
ljmp
lret
dec
movsl
fxch
rol
les
jb
add
mov
inc
daa
aam
pop
fnstsw
sbbb
or
and
and
xor
sbb
cwtl
fsubp
scas
and
cli
mov
jp
sti
mov
or
adc
push
jae
test
mov
xor
and
cld
sahf
sub
inc
and
shll
and
aam
mov
rdpmc
dec
call
add
lods
adcl
sbb
fcmovnu
and
dec
push
ds
jge
mov
adc
test
lret
push
mov
xchg
jnp
mulb
insl
out
xor
add
lock
aaa
popa
rclb
out
mov
cvttps2pi
mov
imul
lret
fwait
andl
mov
inc
xchg
xor
mov
jnp
mov
je
pop
jo
sub
or
insl
out
xchg
in
inc
jo
ja
dec
add
push
sahf
imul
jno
fadds
fwait
lahf
xchg
je
cwtl
sub
mov
mov
mov
dec
xor
mov
jge
repnz
push
mov
mov
lds
mov
fucompp
repz
adc
mov
jno
std
sub
das
outsb
jno
bswap
xchg
imul
roll
mov
lret
push
repz
popf
and
stos
shlb
nop
sub
mov
mov
add
jp
xchg
stos
sbb
xchg
outsb
enter
negb
icebp
inc
jnp
movsl
push
dec
jecxz
adc
and
dec
testl
sbb
lods
sub
mov
rcll
pusha
aam
leave
ljmp
mov
jns
leave
dec
addr16
loop
sub
mov
dec
adc
xchg
in
repz
gs
inc
or
mov
inc
pusha
jnp
jle
faddl
jbe
out
pop
lea
ljmp
inc
cmc
sub
xchg
mov
xor
jecxz
jo
cli
scas
mov
mov
mov
pxor
sbb
loope
xchg
sub
pop
int
jecxz
mov
test
mov
aas
jns
into
bound
ror
sub
gs
mov
push
push
inc
add
add
call
lret
inc
fidivrs
pop
das
pusha
lods
scas
push
ss
rclb
idivl
sub
aam
lahf
dec
push
push
mov
xor
mov
xchg
inc
je
adc
outsb
sarl
push
mov
adcl
jmp
mov
in
rorb
je
push
inc
imul
push
xor
push
dec
push
jns
push
lods
inc
cmp
adcb
mov
push
aaa
mov
xor
in
ret
add
lods
scas
sbb
daa
out
scas
sbbb
and
mov
add
mov
pushf
mov
pushfw
cmp
sahf
sbb
xor
cs
ljmp
sbb
and
clc
adc
rcrl
push
xlat
cltd
fsubr
add
mov
aam
pop
out
cs
orl
dec
xchg
outsl
int
jecxz
inc
and
adc
fistpl
mov
jl
pop
pop
add
lods
inc
imul
pop
repnz
leave
mov
dec
jb,pt
cmpsl
imul
imull
loope
and
inc
xor
sub
in
mov
xor
aam
lret
xor
int3
sub
in
xchg
and
lcall
and
xchg
inc
jmp
lds
sub
xor
movsl
push
into
sbb
cld
test
imul
das
js
in
call
sbbl
pop
sub
adc
dec
pop
out
xor
mov
adc
aas
mov
push
mov
mov
fwait
cmpsb
mov
test
jb
ss
mov
es
call
adc
popf
lock
jnp
mov
mov
lds
cltd
cmpsl
pop
mov
inc
xorb
cmp
sbb
in
leave
fstl
inc
push
add
daa
rclb
pop
or
lea
push
sbb
hlt
pusha
sbb
pop
pop
je
cmp
mov
data16
orb
lret
loop
pop
push
inc
dec
cmp
test
scas
cs
icebp
out
mov
pop
pop
insb
or
add
seta
xchg
stos
test
aaa
xor
aam
inc
cli
pop
mov
push
adc
ss
or
je
aad
push
inc
cltd
leave
repz
sti
mov
pop
and
cmp
int
adc
pop
sub
in
call
enter
int3
fcoms
adc
sbb
mov
sbb
pop
ret
stos
icebp
cmp
ljmp
ljmp
inc
sub
iret
jno
test
push
lods
jecxz
shll
jnp
mov
js
inc
sub
aad
fcmovnbe
ffreep
xchg
rcrl
movsb
clc
pop
inc
mov
push
daa
xor
inc
cmp
inc
in
xchg
stos
addr16
mov
inc
loopne
imul
sub
dec
loope
xor
xor
mov
adc
push
or
aam
gs
outsl
or
or
in
mov
scas
aas
sbb
jne
imul
out
jnp
push
xor
test
std
and
mov
das
stos
push
in
hlt
mov
imul
stos
scas
mov
lods
adc
cmpsl
sarl
xchg
push
inc
outsb
fcmovu
xchg
push
and
push
dec
xor
movsl
test
mov
jecxz
nop
scas
out
cmp
fs
and
dec
inc
mov
in
mov
sbbb
das
and
fistps
data16
cwtl
movsl
andb
test
cmp
ja
icebp
sub
mov
xor
rcrl
xor
js
dec
adc
sub
sub
lock
scas
inc
inc
leave
into
inc
in
xchg
lods
cmp
sbb
in
outsb
aas
push
jnp
ss
or
push
popa
andl
or
gs
cmp
insb
mov
pop
add
inc
xchg
push
xor
movsb
jne
daa
addr16
lcall
cltd
cbtw
repnz
add
dec
inc
outsl
push
inc
lahf
add
das
cmp
push
xor
ret
js
add
in
bound
pop
cs
mov
push
mov
pop
jle
fimull
sbb
out
rol
int3
pop
pop
pcmpeqb
xor
lcall
push
cmp
add
or
pop
decl
fistpll
xor
data16
mov
imul
xchg
je
sahf
adc
add
xor
inc
mov
daa
lret
push
add
in
rolb
mov
dec
jnp
loope
cld
int3
ss
push
repnz
inc
inc
and
movsb
stc
subb
jne
aas
rolb
ja
test
mov
push
adc
bound
cmc
fidivrs
cmpsl
and
mov
adc
xor
pop
call
mov
or
fisubrs
mov
mov
pop
pop
or
or
lret
mov
fstps
mov
push
jle
push
sahf
test
mov
inc
lods
sahf
mov
xchg
dec
and
out
xor
rcrb
inc
xchg
pop
ret
jno
daa
fdivs
and
fwait
aas
xor
cmp
daa
sbb
lods
mov
mov
adc
stos
mov
fidivrl
in
arpl
xlat
lret
fucom
inc
outsl
ficomps
es
rorl
pop
xchg
sub
cld
shrb
fbld
and
ljmp
pop
mov
pop
fs
andl
test
push
mov
int
ficoml
pushf
xchg
mov
test
leave
shll
rcrb
jb
sbb
movsl
cmp
and
pop
aaa
sbb
jge
cmc
push
fidivl
pop
add
std
lock
test
cwtl
add
andl
and
es
xor
mov
into
movsl
sete
cmp
mov
ljmp
mov
aam
jns
daa
jmp
cld
jmp
loop
cmp
ja
iret
inc
mov
or
adc
mov
pushf
std
dec
movsl
fdivrl
cmp
mov
and
ljmp
push
add
sub
and
xor
dec
cltd
ja
fmull
pop
dec
lea
mov
sbb
lods
in
scas
pop
fwait
pusha
push
out
push
addr16
shr
fadd
rolb
sub
sbb
sub
les
roll
cwtl
add
xchg
mov
dec
ret
push
rclb
pop
xchg
cltd
jmp
mov
lds
push
push
out
lds
cmp
hlt
xlat
push
xor
cwtl
cmpsl
ds
inc
sbb
sub
or
movsl
cvtps2pi
sar
mov
jg
or
cmp
pop
and
cmp
mov
pushf
dec
pop
mov
jmp
fs
add
inc
mov
push
ss
es
xorl
push
daa
mov
xchg
inc
aad
popa
test
xchg
push
push
idivb
into
cwtl
push
lret
push
arpl
xchg
popf
or
dec
out
daa
fsubp
data16
lret
push
dec
jno
mov
arpl
imul
out
jae
lahf
clc
cmovnp
imul
aad
xchg
adc
pop
xchg
out
jle
loope
mov
ja
jo
push
dec
js
inc
int
pop
add
daa
fs
cmp
lods
jae
aas
cltd
stc
xor
sub
aas
aas
sar
sysret
lods
lret
cmc
out
lcall
jg
inc
dec
mov
mov
dec
fwait
dec
jecxz
jmp
stc
aad
or
mov
cmpsl
pop
push
fistpll
jl
xor
icebp
fmuls
cmpsl
lods
jo
pop
or
outsb
outsl
test
xchg
pop
filds
dec
or
xchg
xor
imul
cs
fiaddl
mov
pop
in
pop
push
push
js
sub
shlb
insl
aas
pop
cmp
dec
fstpl
enter
xlat
adc
cli
pop
sbb
jg
jnp
popf
push
les
shrb
inc
cmpsl
out
sub
stc
jbe
outsl
cltd
lret
cmp
and
inc
fstl
loop
subb
nop
loope
adcb
fcmovbe
movsb
jl
repz
mov
mov
daa
or
in
mov
jno
mov
les
push
pop
call
bound
movl
mov
gs
outsb
sahf
sbb
mov
mov
sti
ljmp
sbb
jmp
scas
adc
jl
and
data16
rorb
out
repnz
orl
or
imul
and
add
jne
out
insb
inc
xchg
movsl
aaa
rclb
xchg
repz
mov
inc
aam
push
mov
push
or
jo
xor
and
mov
fcoms
xlat
dec
insb
out
lcall
mov
inc
lods
fstpl
dec
lret
inc
int3
imul
shlb
imul
aaa
jbe
mov
xchg
fmulp
int
jmp
add
pushf
int
sbbl
sub
lret
dec
add
sub
xor
aam
cs
inc
xchg
imul
xor
mov
inc
test
sub
xchg
mov
mov
mov
or
mov
push
ljmp
mov
ret
scas
scas
cli
sbbl
test
adc
xlat
or
scas
shl
push
lods
cmpl
in
or
aad
pop
or
pop
enter
nop
roll
in
enter
lock
mov
lahf
dec
dec
add
out
shr
jl
xor
fdivr
imulb
jns
dec
xchg
inc
lcall
and
mov
jecxz
pop
dec
xchg
scas
in
pop
pop
inc
pop
lods
jmp
mov
insl
xlat
je
and
cmp
inc
leave
jns
mov
testl
pop
push
mov
push
adc
push
inc
mov
add
or
repz
mov
jno
and
xlat
lcall
outsl
mov
enter
movsl
in
orl
mov
rcr
dec
cs
and
les
mov
dec
and
scas
movsl
xchg
sbb
jae
outsl
out
adc
mov
inc
loopne
je
fbstp
inc
xchg
js
pop
scas
adc
mov
dec
jle
adc
push
cmp
sarb
push
cmc
in
pop
rorl
push
mov
enter
fimuls
jb
push
jb
push
push
push
sub
testb
pop
ss
popa
incb
pop
adc
add
cmpsl
mov
push
adc
inc
mulb
add
cmp
mov
fdivs
inc
and
add
pop
int3
and
sbbb
je
mov
hlt
and
ljmp
add
and
sub
aam
lods
adc
push
xchg
inc
and
xor
movsb
push
and
movsl
mov
aaa
jg
rol
jle
stc
ret
push
pop
jo
nop
sub
inc
sbb
lods
fldl
mov
push
loop
call
and
adc
icebp
int3
and
mov
cmp
lret
les
mov
and
daa
cmp
ret
pop
rorl
loopne
nop
in
xchg
adc
xchg
inc
orl
jp
cmp
fildll
sahf
and
xchg
mov
test
insl
inc
aaa
loopne
mov
mov
fisttpl
xchg
test
addb
das
stos
iret
jmp
test
jnp
ja
test
mov
insb
jno
pop
ret
loop
dec
sub
mov
lret
fwait
or
mov
into
repnz
inc
sarl
sarb
std
add
xlat
add
sbb
jne
mov
push
mov
lahf
xchg
es
sbb
push
push
aas
mov
test
mov
inc
fwait
and
inc
iret
cwtl
imulb
mov
sar
sub
or
aas
push
jge
lock
jae
inc
scas
add
idivl
jo
mov
lcall
mov
dec
out
dec
mov
nop
mov
jb
test
cmpsb
mov
nop
inc
jns
in
lcall
lods
sub
mov
cmpsb
jno
jmp
push
testl
jnp
jecxz
or
and
and
les
adc
loop
test
xor
cmpsl
xchg
push
cs
adc
add
push
or
cmp
into
lret
std
int3
jbe
add
xchg
fnstcw
xchg
lahf
jle
ljmp
push
sti
lock
pop
movsl
sbb
fmul
dec
cmp
xor
lret
cmp
clc
outsb
sbb
sub
enter
jo
pop
mov
ficoml
or
rolb
clc
popa
test
lds
xor
ret
push
jno
or
mov
ret
jle
fwait
sarb
and
ljmp
push
push
jmp
sub
shrl
adc
lock
jge
or
scas
jns
test
mov
pop
ret
cmpsl
scas
xchg
mov
and
scas
lds
in
mov
mov
pusha
rol
jle
pop
stc
psrld
subb
repz
or
das
mov
push
bound
mov
imul
fwait
inc
or
mov
hlt
sarl
xor
lret
aaa
lods
test
daa
test
dec
out
push
sbb
bound
xchg
push
sub
outsb
mov
mov
out
sub
lods
push
inc
or
call
out
pushf
cmpsl
cmp
push
stos
test
dec
jge
push
jl
pop
xchg
bound
and
lods
pop
mov
aas
xchg
and
mov
mov
xlat
mov
sub
sahf
push
inc
add
push
adc
fistl
imul
pop
stc
pop
inc
aad
xor
sub
arpl
int3
mov
pop
movb
push
loop
imul
out
lret
scas
pop
insl
sub
or
push
shll
mulb
bound
xchg
jne
decb
movsl
mov
stc
xchg
int
ret
pop
or
inc
dec
and
mov
icebp
pushf
add
or
stos
cmp
and
fwait
jle
dec
inc
push
test
push
xor
leave
scas
cli
push
or
jg
adc
add
fisubs
and
insb
pushf
inc
jge
or
sbbl
xchg
mov
movl
sbb
jecxz,pn
jns
jno
mov
dec
xchg
out
cld
sbb
inc
jns
push
mov
out
xchg
fdivs
or
xchg
int3
shll
sub
dec
aad
inc
xor
sti
imul
jmp
test
mov
add
add
xor
xor
dec
xor
jg
mov
out
mov
mov
movsb
or
mov
dec
xor
test
andb
lock
and
jge
dec
xchg
dec
out
insb
movsl
pop
stc
mov
icebp
inc
pushf
jnp
mov
xchg
mov
mov
repz
cwtl
popl
dec
enter
scas
mov
adc
push
xor
xlat
pop
push
repz
setae
mov
jg
jmp
add
sahf
jle
mov
ljmp
pop
adc
jp
cltd
xchg
mov
mov
push
xchg
andl
scas
popa
inc
jb
jb
add
and
or
push
stos
cli
xchg
stc
hlt
and
add
xor
js
cmp
xchg
dec
shrb
stc
jg
aam
or
sbb
dec
enter
fmuls
inc
sbb
bound
frstor
andb
push
lret
mov
stos
jnp
call
es
aaa
andl
lock
and
cmc
stos
fisubrs
out
addl
pop
gs
cmp
or
mov
sbb
cwtl
xor
sahf
pop
push
push
scas
mov
push
jge
jge
or
adc
xchg
dec
cwtl
sti
sub
sbb
xchg
mov
sub
push
mov
mov
push
dec
cltd
mov
mov
nop
pop
mov
cmp
stc
mov
sub
mov
push
xor
bound
jmp
call
cmp
inc
nop
test
ja
xchg
fmull
icebp
sbb
fwait
sbbb
sub
loope
sub
fwait
icebp
out
popa
test
in
rclb
stos
jge
sub
fldcw
cmp
xchg
scas
cmp
scas
fldt
jp
pushf
cmp
je
mov
jecxz
mov
xchg
mov
outsl
pavgw
pop
mov
push
in
lcall
adc
cltd
dec
cltd
pusha
in
pop
sbb
jae
cld
jns
popa
sbb
mov
insl
movsl
jle
mov
movl
inc
ja
cmp
scas
fsubp
aad
out
adc
mov
sub
push
dec
mov
shr
push
mov
adc
pop
sub
pusha
fistps
pop
aas
push
lds
imul
icebp
dec
jecxz
jl
outsl
enter
add
or
push
mul
dec
mov
repnz
lock
jne
dec
sbb
pop
aas
mov
jge
test
jge
ja
xor
aas
stos
in
fldpi
add
in
xchg
lods
lds
pusha
mov
in
lret
out
icebp
mov
pop
js
ret
jge
cmp
cwtl
rcll
dec
mov
das
mov
sub
fsubrs
pop
adc
adc
pushf
loopne
inc
xchg
push
mov
xchg
rorb
insb
test
mov
dec
les
cmp
sbbb
jne
add
dec
adc
daa
imul
xchg
inc
cmpsl
or
cli
test
ljmp
or
xchg
clc
mov
test
push
or
adc
repz
cld
cmp
test
test
stc
dec
xor
inc
out
fldl
pop
mov
xchg
fisubs
pop
mov
xchg
pushf
mov
adc
add
mov
out
fstl
adc
or
jg
pop
shlb
ljmp
out
sub
adc
xchg
jb
add
dec
add
jmp
out
adcl
das
lret
js
sub
jp
out
shll
xchg
rcl
or
lcall
or
stos
sbb
je
mov
jg
loopne
cmp
xchg
fiadds
inc
cmc
icebp
dec
cmp
jp
xchg
je
fwait
cltd
dec
push
dec
pop
sub
test
or
and
in
push
hlt
cmp
inc
int3
push
add
inc
les
and
data16
bound
dec
sbb
fadds
icebp
push
insl
lret
aas
cmp
cmp
dec
adc
fstl
pop
push
ja
cmp
aad
inc
stos
add
call
add
mov
lock
inc
or
imul
stos
jno
ret
scas
push
rcr
shlb
mov
sub
sbb
fildll
mov
mov
js
mov
ljmp
std
dec
add
sbbl
clc
push
mov
pop
push
les
enter
jecxz
sub
or
fldenv
sub
shr
fcomps
call
fidivrs
dec
fadds
in
es
aaa
mov
scas
dec
cld
stos
mov
nop
imul
jle
push
pop
and
push
sbbb
aas
mov
push
pusha
paddusb
mov
cmpsb
mov
ljmp
sbb
mov
notb
dec
ret
sahf
or
cmpsb
mov
inc
idivl
adc
or
xchg
fsubs
cmpsb
int
es
dec
and
jno
fldenv
mov
adc
sbb
ds
jb
add
pop
in
mov
and
int
sbb
xchg
mov
push
iret
push
aam
loope
dec
xchg
pop
jns
add
or
popf
push
ss
sbb
insl
push
je
insb
lahf
pop
ljmp
and
push
imul
sbb
repnz
adc
pop
xor
jns
jbe
or
test
neg
repnz
inc
fisubrl
ljmp
inc
repnz
lods
pop
mov
cwtl
push
in
and
sbb
push
mov
jmp
inc
or
fsubrs
cmpsb
rolb
lret
outsb
fiadds
clc
aam
xchg
inc
test
mov
xchg
and
les
mov
mov
sti
sub
pop
aas
sub
jp
and
aam
loopne
mov
loopne
lods
mov
int
repnz
pushf
xchg
mov
lea
jb
pop
add
jl
mov
xor
hlt
fwait
mov
mov
pop
movsb
test
push
mov
and
out
or
mov
js
clc
inc
inc
mov
bound
nop
xlat
sbbb
das
scas
idiv
sbb
lret
outsl
pop
mov
push
add
and
xor
cmpsl
mov
aas
test
movsl
gs
jg
or
test
add
pop
pop
pop
cmp
push
dec
add
clc
mov
test
and
xor
mov
xor
popf
jge
sub
in
dec
fnstenvs
xchg
mov
scas
les
pop
es
mov
xchg
inc
int
scas
mov
mov
cmp
sub
movsl
ljmp
scas
rorb
lds
sbb
sub
pop
push
mov
and
sarl
test
xlat
repz
pop
and
cmpsb
enter
insb
movsb
add
mov
sarl
cwtl
or
xchg
fstl
fnstcw
or
outsl
dec
inc
outsb
shl
repnz
cmp
dec
out
pminub
mov
sarb
jno
repz
lret
sti
cmp
mov
int3
xchg
ret
lock
imul
push
lret
movsb
movsl
out
cwtl
and
inc
mov
lods
aad
ret
dec
iret
test
sbb
daa
fidivrs
lds
pop
gs
testb
push
js
xor
cli
daa
bound
in
jp
loopne
xchg
test
cmp
sbb
bound
test
mov
pop
aaa
mov
pop
and
mov
outsb
pop
gs
das
ds
push
das
cmc
inc
call
sti
fisubrs
fstps
mov
xchg
aas
loopne
pop
inc
imul
test
lds
cmp
cld
push
push
add
sbb
xchg
push
xchg
nop
imulb
jns
jg
push
or
and
adc
mov
push
xchg
repnz
mov
pop
dec
out
outsl
sbb
movsb
aaa
lds
psrad
inc
fidivs
xchg
arpl
adc
out
out
cmp
mov
into
sbb
inc
mov
mov
aaa
and
test
loopne
cld
xor
fisubs
in
sub
xchg
sub
jne
mov
in
cmp
mov
mov
add
leave
into
in
sbb
xlat
sbb
pusha
xchg
mov
jmp
xor
fdivs
subb
ja
pop
xor
add
fnsave
or
cld
jmp
fwait
clc
addr16
out
cmp
cmc
sti
mov
xor
and
add
stc
imul
adc
dec
fwait
push
pushl
and
xchg
sub
inc
push
dec
repnz
or
ja
or
add
sub
cmp
ss
inc
test
jns
add
or
cmc
dec
das
xor
jg
or
xchg
adc
or
fnsave
insb
lds
mov
mov
xchg
jns
sbb
sbb
shlb
and
stos
test
and
imul
lea
addl
cmp
adc
cmpsb
push
mulb
jae
or
sbb
sub
pop
std
xchg
mov
mov
loope
inc
data16
shl
daa
jmp
and
pop
loopne
pop
xchg
sbb
insb
pushf
dec
pop
push
sub
fcmovne
dec
inc
add
in
mov
hlt
decb
jg
xchg
push
mov
nop
dec
mov
sub
in
jg
aas
mov
les
pop
je
add
and
subb
ljmp
out
inc
xorl
jmp
jg
daa
out
mov
arpl
jmp
xchg
and
test
ljmp
pop
andb
ljmp
std
pop
mov
dec
cmp
into
shll
xorl
mov
dec
fnstsw
xchg
xchg
inc
movsb
test
cmpsl
shr
jns
mov
loop
pop
cmp
mov
jno
push
lahf
xor
lcall
scas
rcrl
pop
xchg
inc
ljmp
adc
jnp
xor
inc
cmp
xlat
pop
mov
push
xor
pop
xlat
sbb
fwait
roll
pop
repz
ja
mov
das
lds
repz
movb
pop
mov
leave
cmp
insb
shr
push
outsl
in
xor
loop
inc
bound
adc
cwtl
mov
cltd
sub
jae
or
adc
sbb
mov
cmpb
mov
jg
jno
pusha
les
das
fcoms
lds
popf
rcrb
pop
loopne
test
or
sub
les
mov
push
xchg
out
pop
mov
mov
adc
mov
in
lods
mov
test
mov
add
ret
arpl
jmp
mov
and
jg
and
leave
jp
xchg
cmp
js
test
ss
mov
mov
inc
popf
pop
loope
sbb
cmp
push
sub
jne
popa
pop
jp
stos
addr16
and
xlat
leave
int
push
adc
and
push
pop
adc
mov
data16
mov
sbb
stos
sbb
pop
jmp
test
xor
cs
push
movsl
cmp
aam
jno
push
inc
cmp
pause
ss
fsubs
mov
popa
xor
movsb
mov
mov
sahf
xchg
xor
std
faddl
cmpsb
subb
les
incb
xor
xchg
or
cs
ret
div
pop
dec
sub
mov
repz
mov
cltd
add
fisubs
and
cmp
cmp
sti
js
and
push
xchg
inc
xor
mov
sub
sub
enter
lret
popf
pusha
adc
outsb
inc
push
xchg
outsb
push
dec
jae
ljmp
push
sub
sti
repnz
add
dec
cmpsb
cwtl
push
xor
sub
std
repz
mov
pop
ljmp
mov
push
int3
sbb
mov
pop
dec
out
leave
inc
or
test
and
movsl
xchg
icebp
add
or
cmc
xor
mov
pop
xchg
push
int
xlat
sub
add
add
add
adc
push
rcrl
push
pop
push
add
js
rol
adc
int
jp
mov
ficomps
je
mov
lret
std
inc
sbb
hlt
stos
pop
jp
cmp
ja
cmc
and
mov
fnstenv
adc
cmp
push
aaa
out
xor
mov
sti
sbb
outsl
sub
mov
add
pop
popf
test
and
dec
in
xor
jle
mov
stos
xchg
iret
lea
je
aam
test
sub
divb
pop
fcoml
xor
int3
pop
jecxz
mov
sbb
lds
push
push
mov
bound
add
mov
mov
hlt
ret
add
insl
cmpsb
stos
and
rcll
aaa
rorb
loopne
pop
dec
inc
xor
in
loope
mov
lret
inc
inc
lods
xchg
mov
mov
test
sub
popf
test
jne
push
hlt
add
adc
or
pop
loop
cmpsl
xchg
cmp
inc
pushf
push
add
or
xor
aas
into
xor
cli
ja
mov
xor
push
push
mov
sbb
cmp
mov
mov
inc
xor
adc
jmp
sbb
xor
in
out
xorb
mov
xor
imul
clc
pop
cli
adc
lock
mov
in
test
add
fidivrs
insl
adc
iret
loopne
popf
pop
enter
jecxz
mov
push
loopne
in
ss
ljmp
loopne
repnz
jb
cld
mov
andb
or
xchg
xchg
or
jb
pop
cmp
push
push
mov
push
sub
pop
push
or
mov
sub
add
inc
xchg
inc
sbb
xchg
notb
test
ret
cld
out
add
sub
push
pop
add
sti
jmp
and
add
push
mov
mov
shlb
inc
mov
cmpsb
subl
lods
and
push
push
dec
data16
iret
lret
mov
jmp
sub
adc
lahf
jp
or
xor
nop
dec
sbb
clc
mov
xorl
cli
repnz
cmc
test
pop
lret
add
les
jmp
adc
jge
inc
mulb
mov
jns
and
pop
xchg
imul
fs
xor
cmp
popf
adc
dec
ljmp
xor
in
loope
xchg
xor
repnz
insl
dec
mov
aaa
xchg
daa
into
mov
adc
sub
xor
rol
sbbl
mov
add
jns
xchg
test
dec
pop
xor
pop
or
sti
inc
cld
mov
inc
test
jb
mov
cmpsl
into
push
xchg
ss
int
jecxz
roll
jae
mov
mov
out
and
push
push
push
jbe
cmpsl
xchg
stos
jmp
out
inc
sbb
add
mov
fs
rcll
das
lahf
int3
inc
adc
test
add
or
xchg
xor
mov
mov
cmp
pop
mov
out
xor
cs
mov
mov
adcl
dec
in
pop
mov
and
cmp
xchg
and
add
push
xlat
lea
lcall
shr
shll
fsubrs
push
mov
pop
jnp
xchg
jmp
movsb
das
and
icebp
push
jnp
test
bound
loope
sub
or
dec
lret
stos
pop
in
std
and
push
xor
adc
leave
fwait
iret
js
xlat
shl
mov
add
or
pop
jg
cmp
test
loope
mov
mov
imul
rol
fisubrl
mov
mov
movsb
adc
mov
cmp
mov
cmpsl
ficomps
mov
or
mov
pop
cltd
jmp
sub
outsb
push
lcall
cmpsl
dec
icebp
adc
daa
repnz
mov
xor
sub
sub
pop
mov
xor
icebp
flds
repz
movsb
xor
icebp
call
sbb
loop
mov
mov
inc
nop
sub
or
std
inc
les
cmpsl
push
add
xchg
popa
loope
pop
aaa
sub
daa
rol
pop
push
sbb
scas
out
mov
fsubrl
sbb
xchg
pop
pop
pop
ret
push
sub
mov
leave
in
jae
pop
jae
jae
lods
adc
fldt
jmp
in
mov
jle
or
repnz
ljmp
pushf
out
sub
sbb
lock
jne
jae
push
repz
repnz
mov
sbb
mov
sub
adc
cmp
jne
scas
adcb
idiv
repnz
or
and
inc
adc
cmp
leave
call
push
nop
push
or
mov
gs
mov
nop
loop
push
ljmp
push
add
stc
out
pop
mov
iret
mov
shlb
or
jne
xor
cli
cli
sub
mov
mov
jno
pushf
pop
stos
fs
mov
add
scas
cmpb
xor
faddl
xor
and
cmovp
jns
ret
push
pop
jge
pop
les
jo
cwtl
cmpsb
or
mov
mov
jmp
cs
cmpb
push
cmp
mov
cmp
mov
adc
shrl
das
xchg
xchg
push
or
lea
cmp
icebp
out
jno
cmp
mov
jmp
fs
inc
int
je
loop
xchg
stc
add
icebp
sbb
xchg
mov
mov
jp
mov
dec
movsl
orb
fisttpll
sbb
in
in
int
sbb
adc
add
jl
pop
push
ja
call
push
daa
xlat
push
pop
pop
sbb
mov
enter
add
mov
pop
leave
sbb
lods
negb
xchg
sbb
in
sub
es
xor
scas
mov
loopne
add
addb
adc
es
fldl
ret
push
rcrb
mov
insl
pushf
jo
orl
inc
shll
movsb
push
xor
push
and
les
js
pushf
mov
mov
fbld
inc
repz
ja
mov
fisttpl
mov
sahf
push
outsl
jecxz
aas
xorb
movsb
push
pop
mov
in
push
les
add
fcoms
ret
inc
loopne
push
repz
and
xchg
dec
out
adc
inc
xor
xchg
fldt
push
dec
sahf
fnsave
mov
mov
daa
shrl
inc
cld
dec
pop
nop
lods
mov
in
sbb
fmull
or
mov
rcll
jne
jno
sub
pop
jp
push
mov
call
hlt
out
mov
das
cmp
and
mov
loop
cld
js
jbe
cmpsl
inc
arpl
dec
arpl
out
xor
push
cmp
in
daa
sub
popf
xor
mov
imul
out
scas
xchg
loop
fadd
aad
sub
hlt
test
pop
es
cmp
scas
or
popa
mov
mov
ljmp
fs
pop
ficompl
sbbl
movsb
mul
sub
jge
ret
stos
pop
xchg
push
xchg
lock
dec
jns
and
pop
xchg
jl
sbb
icebp
xlat
sub
sub
push
pop
fmull
push
sbb
pop
jb
int
lods
pop
insb
aad
adc
loop
fs
fwait
mov
xchg
or
sub
movsl
lds
inc
hlt
dec
les
lret
test
pop
stos
cmc
jl
loopne
xor
out
or
insb
ljmp
imul
clc
inc
adcl
dec
jle
mov
icebp
out
sub
std
jae
xor
inc
adc
mov
mov
insl
mov
cmc
inc
dec
cmp
mov
mov
int
pop
or
xor
inc
add
fistpl
out
repz
dec
inc
call
xor
test
inc
xor
cltd
daa
xchg
cmp
mov
adc
or
add
push
xchg
adc
clc
mov
mov
cli
arpl
dec
mov
jmp
decl
mov
andl
xlat
jmp
fstpt
pushf
dec
mov
jmp
ds
loopne
xlat
movsb
xorl
addr16
leave
jbe,pt
outsl
mov
daa
divl
mov
in
inc
mov
mov
adc
scas
scas
mov
int3
fwait
mov
cmp
mov
dec
aam
xchg
adc
xor
pop
mov
mov
push
mov
xchg
aaa
push
add
js
dec
xor
call
cli
fs
les
xchg
ffree
inc
xchg
mov
enter
loope
lock
sub
in
rclb
lock
dec
stos
movsl
rcrl
mov
int3
fwait
test
in
inc
insl
pop
sbb
jo
xor
jecxz
dec
cmp
imul
jecxz
mov
outsb
fmuls
dec
lods
in
les
inc
push
lock
enter
fucom
popa
mov
je
mov
adc
lods
les
sub
mov
lds
scas
lret
mov
xchg
fcmovbe
rcll
mov
sub
xor
mov
test
in
jo
repnz
inc
dec
faddl
addb
xlat
repz
shrb
lods
mov
mov
dec
jo
fwait
std
std
rcll
mull
add
in
push
xlat
stc
into
cltd
dec
int3
and
mov
sahf
adc
movsl
loop
lcall
jae
leave
cli
xchg
lret
xor
aad
aaa
cmp
inc
sub
aad
std
clc
outsb
cs
mov
int3
cmc
shll
mov
fisubs
add
cs
scas
pop
pop
ljmp
xchg
test
cmp
xchg
adc
out
mov
loop
aad
mov
lock
sahf
mov
mov
pusha
stos
addl
and
push
push
lcall
loope
into
inc
mov
mov
cmp
decb
hlt
mov
insb
test
or
aaa
outsl
pop
enter
add
aam
out
or
scas
idivb
xor
push
fnstsw
xchg
xor
jo
enter
je
xor
push
add
cmc
or
mov
xchg
jge
mov
mov
add
push
ja
out
aad
push
add
mov
jb
inc
std
movsb
mov
mov
loopne
cmp
into
pop
push
sarb
push
test
mov
mov
repnz
pop
mov
lea
clc
sub
jle
xor
mov
imul
ja
test
int3
sti
sbb
adcl
test
mov
outsb
in
mov
scas
mov
insl
sbb
mov
nop
xchg
pushf
mov
cwtl
lret
cld
sbb
lret
add
test
sub
clc
dec
pushf
sbb
sub
inc
test
jle
ror
jnp
adc
mov
rcl
jle,pn
popl
lods
sbb
icebp
jp
push
test
fcmovu
imul
dec
mov
mov
int3
addr16
sbb
cmp
inc
xor
fs
out
dec
lretw
and
adc
xor
sahf
aas
imul
lret
adc
add
test
add
inc
sbb
shr
sti
int
dec
sbb
sub
rorb
jbe,pt
push
add
lret
add
mov
cmp
ds
push
sbb
loopne,pn
orl
and
jl
push
or
popf
iret
add
lds
inc
jno
cmp
sub
jle
repnz
sbb
push
stc
mov
pop
movsl
stos
cli
xchg
dec
std
roll
out
or
adc
adc
sub
push
fidivl
mov
in
pop
adc
insl
add
xchg
out
xorl
jbe
fnstenv
xchg
test
adc
dec
testb
xchg
fdiv
sub
mov
xchg
mov
cmp
fisubl
roll
jge
xchg
cwtl
sub
mov
fwait
jno
dec
loop
pop
jns
ficoms
xchg
jae
shll
adc
movl
in
test
xchg
aas
test
test
sbb
and
cmp
out
mov
repnz
in
je
ljmp
or
jns
xchg
out
rorb
repnz
and
or
sahf
ljmp
loope
stc
stos
pop
xor
mov
xchg
out
xor
add
pop
add
aam
dec
jo
xchg
mov
lret
jg
lret
decl
mov
push
xchg
movsl
push
test
jmp
sub
data16
out
lods
scas
xor
repz
sub
mov
cmpsl
iret
ljmp
icebp
js
divl
pop
lahf
loopne
enter
lods
jl
add
pop
test
loop
out
sbb
fwait
pop
sub
add
enter
xor
inc
fwait
psubusb
movsb
jbe
mov
call
rolb
mov
enter
bound
icebp
mov
sbb
movsl
popa
div
pop
and
insl
xor
popa
mov
dec
stc
pop
test
jle
inc
mov
cltd
sti
je
pop
add
std
inc
rolb
or
imul
ja
mov
cmp
and
test
stc
movl
sbb
pop
or
mov
inc
divb
adc
add
mov
push
pop
and
push
cmp
pop
lods
jge
fwait
jg
jnp
in
insl
jp
xlat
cmp
sbb
lods
leave
xchg
xor
test
add
mov
outsb
xor
mov
aad
pusha
enter
gs
fimuls
imul
hlt
fbstp
push
mov
dec
xchg
aad
mov
push
dec
jae
lods
mov
cs
scas
mov
mov
in
enter
lock
clc
test
cmc
mov
movsl
out
loope
push
xchg
loop
lret
xchg
cmc
mov
and
fnstcw
aam
push
add
addr16
sahf
call
int
mov
fcmovnu
fs
push
fs
pop
push
jg
or
pusha
and
or
das
jge
ret
lods
in
xlat
es
aaa
test
gs
pop
je
insb
push
mov
xchg
ds
jno
mov
mov
cmpl
ss
lock
out
shlb
cmc
pop
lcall
or
mov
xorl
jne
xchg
mov
scas
pop
xchg
test
pop
lock
mov
shl
push
and
icebp
lret
add
mov
lea
adc
lcall
pop
cmp
cmp
daa
std
rcrl
fidivrs
push
or
scas
clc
jo
adc
sbb
adc
scas
jne
cmp
jmp
jecxz
push
add
mov
loope
pusha
ljmp
roll
out
and
test
lret
lds
rorb
add
mov
sar
pusha
nop
adc
pop
cs
cmp
lods
cmpsl
shlb
js
aaa
fwait
and
push
out
and
shr
outsl
fwait
mov
enter
pop
out
push
inc
mov
adc
andb
cltd
je
shlb
pop
sbb
sbb
jae
fcom
icebp
cmc
xchg
sbb
jp
jns
inc
jmp
mov
jg
dec
and
adcl
pop
mov
ret
pushaw
ja
pusha
and
sahf
push
mov
std
or
jg
lods
push
xchg
pop
jns
pop
stc
into
ret
push
sbb
and
mov
push
ds
pop
insb
add
mov
inc
pop
jg
jo
xchg
in
loop
std
sahf
fdivl
setbe
sub
test
push
ret
or
orb
sub
xchg
xchg
or
icebp
jmp
and
out
stos
arpl
cld
cld
push
in
ret
xor
int
call
pop
mov
mov
adc
iret
fcmovnb
xor
imul
and
dec
leavew
clc
adc
jae
mov
and
or
lret
mov
pop
jge,pn
mov
cmp
or
fucom
jmp
stc
repz
pop
adc
xchg
stos
push
and
lahf
lods
jb
dec
sbb
jno
lret
cld
lret
ret
lcall
or
adc
loope
xlat
adc
fsubrl
ss
cmp
mov
mov
inc
cmp
test
inc
xlat
xchg
out
fs
xchg
cmp
movsl
and
cmpsb
add
out
shll
dec
add
push
stc
add
aam
or
or
jns
cli
sub
je
cmp
mov
notb
xor
insl
mov
add
stos
test
inc
push
outsb
in
and
addr16
out
xchg
lds
bound
clc
dec
mov
sbb
sahf
sbb
push
fisttpll
loop
add
jne
ds
imul
push
sbb
mov
mov
jns
push
aam
mov
sbbl
push
jo
cmp
mov
jnp
mov
dec
xor
push
xchg
ret
jo
rclb
mov
push
cmp
test
inc
mov
mov
mov
mov
push
mov
mov
loop
jmp
in
into
ficompl
mov
sub
and
jno
insb
mov
lret
xchg
cmp
adc
add
cwtl
or
adc
or
das
in
pop
jo
popf
sbb
jecxz
xor
sbb
popa
jp
inc
in
daa
mov
out
xchg
jl
mov
xchg
mov
js
mov
push
sub
xor
std
addr16
mov
pop
sbb
push
jle
and
movsb
loop
fdivrs
sahf
pop
cmpsb
mov
clc
push
add
imul
add
jne
arpl
dec
pop
pop
enter
pop
stos
pushf
test
jge
mov
movsb
incl
fcompl
sub
or
push
sbb
dec
xchg
mov
jmp
jp
mov
fiadds
mov
dec
sub
and
xchg
xchg
lods
jmp
hlt
sbb
aam
fwait
es
jbe
mov
mov
mov
shr
mov
push
push
cld
jno
mov
jle
lret
add
loop
cmp
int3
xchg
dec
dec
aad
push
fs
xor
xchg
adc
fadds
out
xchg
jle
popl
or
push
push
repz
lahf
pop
test
add
push
sub
enter
push
mov
cmpsb
jl
dec
fbstp
push
out
mov
insl
sahf
ret
xlat
mov
dec
add
icebp
outsb
inc
mov
bound
sahf
mov
jbe
clc
jg
push
movsb
sbb
icebp
sbb
stc
pop
stos
mov
loopne
mov
aaa
and
bound
mov
pop
sbb
pop
fnstsw
lods
xchg
dec
out
out
std
pop
rcrb
and
sub
dec
push
mov
ret
jmp
test
es
cs
loop
cmp
add
sub
pushf
jmp
xor
sub
xchg
iret
push
xchg
push
dec
sbbb
xor
inc
jne
jno
push
les
pop
mov
fldcw
sub
in
inc
mov
mov
add
push
dec
int
loopne
fs
int3
push
push
ljmp
nop
shrl
gs
arpl
loop
int3
cmpb
pusha
sti
dec
or
xor
ds
sub
leave
or
scas
push
push
and
jb
cmp
daa
mov
xchg
jo
fidivrs
aam
pop
inc
xlat
daa
push
addb
sbb
rolb
inc
jo
nop
fdivl
fmuls
cli
push
outsb
pop
xchg
jmp
sub
stos
jp
clc
mov
inc
push
mov
pusha
or
push
adc
push
lret
dec
mov
jno
lock
pop
rcl
fstps
push
cmp
aam
cmp
aas
scas
fcomi
in
xchg
push
imul
mov
dec
icebp
std
loop
pop
jmp
push
movsl
arpl
es
rcrb
lds
push
mov
repz
leave
mov
imul
mov
sbb
and
ljmp
les
fisubl
cmp
rcll
xor
dec
mov
push
or
popa
dec
cli
mov
bound
out
insl
xchg
inc
sbb
xchg
jmp
ljmp
rolb
jns
cmp
jo
mov
test
add
adc
push
inc
pop
pusha
pop
push
mov
hlt
xchg
jb
xchg
in
mov
pushf
mov
xchg
sub
loope
pop
cmp
dec
push
and
and
sub
mov
scas
call
in
dec
inc
andb
cwtl
cmp
fsubp
or
push
int3
leave
idivl
or
inc
add
add
jmp
faddl
outsl
sub
lcall
xchg
or
inc
je
sbb
mov
sub
dec
jb
push
jne
stos
jp
leave
pop
mov
and
mov
add
jae
mov
pop
mov
adc
sahf
negl
movsl
cs
pop
push
dec
mov
sbb
sbb
sub
xorl
lods
push
iret
shlb
or
xor
and
mov
lock
test
xchg
repnz
sub
jl
inc
mov
cs
dec
inc
cmp
sti
sbb
mov
mov
inc
pop
lds
cltd
bnd
jbe
mov
mov
sub
cmpsl
or
xchg
es
inc
dec
sub
fs
movsb
shrl
jmp
dec
ja
xor
mov
mov
hlt
mov
sub
ficomps
push
dec
pop
rcll
pop
mov
dec
lahf
jg
scas
faddl
push
mov
jecxz
dec
xchg
mov
jle
xchg
mov
test
fadd
push
mov
inc
pop
adc
movsb
das
cwtl
mov
xor
les
jg
add
cs
push
fidivs
lods
add
or
push
std
mov
mov
dec
fisttpl
cwtl
loop
icebp
mov
imul
pop
add
mov
in
add
jb
test
mov
push
lea
iret
lock
lods
lods
pop
and
pusha
sahf
test
xchg
loopne
add
dec
xchg
lahf
loopne
cmpsb
mov
ret
pop
fmul
movsb
cmp
sti
fwait
out
and
or
sbb
pop
mov
pop
std
xchg
aad
inc
pop
add
jbe
addl
xor
cli
stc
pop
push
rcrl
and
adc
inc
bound
mov
push
ret
lahf
push
ljmp
push
dec
cmp
cld
dec
pop
shl
xor
out
call
sbb
jmp
out
fidivl
das
outsb
push
pop
and
insl
loop
fistps
mov
rcrb
mov
outsl
fcoms
rorb
sub
in
xchg
cmp
call
pop
icebp
xor
adc
lcall
pushf
xchg
sbb
in
insb
sub
cli
loopne
jo
mov
daa
mov
or
mov
shll
inc
mov
sub
filds
add
cmp
adc
sub
pop
cmp
cld
daa
mov
inc
out
push
repz
test
sub
insl
lret
mov
jl
sub
push
sub
mov
or
pop
sahf
push
mov
cmp
decb
repnz
inc
cltd
stos
inc
push
sbb
jb
and
adc
sbb
popa
mov
das
lahf
or
ss
fxch
repnz
jns
sbb
and
inc
cld
or
mov
lods
dec
push
xor
pop
aas
nop
sbb
xorl
push
stos
lret
cmp
dec
mov
or
out
fstpt
pop
mov
inc
shrl
or
jecxz
movsb
in
rcrb
xchg
andb
scas
test
popa
fnsave
fsubs
sahf
inc
cmc
mov
mov
xchg
sbb
mov
cmp
xor
icebp
pushl
sub
xchg
out
call
arpl
pusha
sub
cmp
push
js
fwait
inc
xor
mov
add
add
and
icebp
and
outsl
aas
pop
mov
or
sbb
into
mov
mov
daa
cmp
nop
loop
daa
psubb
pop
jno
add
xchg
rcll
push
rorb
jb
int3
push
xor
or
clc
iret
or
or
xchg
mov
xlat
mov
jl
cli
fildll
mov
js
imul
cltd
or
inc
cmp
ja
fldenv
mov
sub
push
jbe
cmc
xchg
mov
sbb
pop
cmp
rorb
bound
in
cmp
sbb
push
xorl
push
fmuls
std
dec
jae
stos
cltd
or
cmovle
sbb
pop
js
add
cmp
aad
mov
test
push
mov
add
movsb
stos
outsb
add
add
subb
fs
stos
lret
shll
or
jp
cmp
inc
pop
push
dec
sub
fmulp
call
adc
cmpsl
xchg
adc
push
pop
xor
fs
xor
or
scas
ljmp
xor
or
gs
lods
xchg
addr16
cmp
aad
ret
test
xor
adc
push
mov
sahf
pop
pushf
dec
rcr
movsb
test
adc
inc
aad
lds
xor
jl
data16
aaa
or
xchg
inc
xchg
sub
repz
jge
cmc
mov
push
mov
out
sbb
fmuls
fidivrs
es
push
xor
repz
push
stos
adc
dec
enter
int3
xchg
movsbl
dec
push
pop
pop
mov
ss
lahf
inc
sahf
push
mov
dec
xchg
jns
movlps
stos
adc
stos
mov
call
and
cmp
mov
mov
or
xor
xchg
jb
out
fsubrs
cld
stos
sub
int3
stc
je
xchg
lea
sbb
sbb
mov
or
xor
ficompl
jno
push
dec
call
js
sbb
psraw
popf
push
push
mov
loop
enter
pusha
das
mov
push
xchg
fwait
loope
pop
inc
mov
icebp
icebp
add
nop
mov
xchg
mov
xchg
and
lret
gs
cmp
push
mov
pop
fimuls
dec
mov
push
test
fisubrl
clc
add
imul
jge
pop
les
stc
pop
inc
out
sub
push
fldl
jne,pt
in
cmpsl
mov
les
mov
movsb
sbb
jmp
dec
enter
mov
pop
pop
mov
sbbb
repz
cmp
repz
or
movsl
outsb
pop
add
lds
mov
jmp
in
sbb
jns
cmp
in
orl
push
stos
jb
cmp
push
dec
xor
or
into
subb
fsubr
call
aas
out
inc
movsl
divb
out
icebp
jle
setg
ret
cmpsb
fsubrs
outsl
les
and
loop
fs
scas
insl
test
mov
and
test
gs
cli
inc
push
adc
imul
pop
xchg
sub
xchg
in
and
add
call
sub
pop
daa
mov
lock
scas
dec
addb
outsb
xorb
daa
jnp
loopne
push
subb
loope
cs
enter
ret
popf
inc
inc
sub
loopne
and
push
bound
addr16
or
in
sub
out
cltd
lds
lret
xchg
shlb
cmc
mov
sbb
inc
stc
js
sbb
add
cmp
pusha
push
xchg
pop
icebp
mov
push
int
xor
mov
pop
sbb
fsts
fidivl
ljmp
dec
inc
in
test
fisttpl
and
mov
xchg
roll
adc
cmp
or
movsb
push
mov
push
xor
mov
jle
loop
or
outsl
scas
mov
mov
sbb
popa
jae
shll
addr16
cmp
mulb
call
or
push
loop
sbb
ret
cmp
in
push
push
popf
push
iret
inc
xchg
inc
or
movsl
jge
add
fnclex
data16
mov
lock
mov
add
pop
mov
mov
insl
cld
sbb
sub
movsb
dec
loop
fcomps
shlb
mov
mov
mov
ljmp
jnp
fimull
push
repnz
xchg
jae
fdivs
and
mov
cmp
xchg
xor
mov
mov
or
inc
cmp
mov
mov
push
aad
les
fiaddl
lahf
inc
icebp
jnp
js
xchg
jno
push
int3
and
inc
mov
mov
stc
std
mov
adc
sbbb
xor
dec
xlat
outsl
outsl
int3
sub
jne
dec
push
cmpsl
or
or
mov
jg
lahf
push
inc
testl
pop
mov
jbe
mov
das
cmp
cli
icebp
dec
iret
icebp
and
stc
xchg
sti
adc
push
and
not
lea
ret
xchg
mov
aas
inc
out
xor
dec
imul
int3
aad
cmp
xor
addr16
xchg
test
adc
lock
and
ret
pop
mov
mov
js
inc
cmc
or
gs
bound
sarb
push
sub
xchg
scas
shl
push
decl
mov
adc
das
lcall
test
das
call
adc
lods
xor
icebp
mov
hlt
xor
dec
xchg
stos
shrb
dec
lcall
fmull
test
mov
dec
int
xchg
mov
jnp
cltd
jl
roll
adc
ret
out
mov
scas
inc
icebp
pop
lods
cmp
test
repz
xchg
pusha
adc
cs
adc
jp
test
scas
and
sub
jo
jmp
mov
jns
pop
das
xor
aad
inc
imul
and
test
cmp
add
push
std
mov
jmp
sub
xchg
out
sbbl
stos
in
stc
or
dec
cmp
dec
xchg
mov
inc
push
xor
push
dec
mov
out
lods
lret
shl
mov
add
adc
add
jmp
cmp
scas
dec
push
and
xchg
gs
sbbl
jbe
mov
outsl
inc
push
inc
or
sub
test
sub
inc
push
jl
stos
push
pop
nop
pop
xchg
test
daa
xchg
push
jg
sub
push
xor
cmp
add
lds
lods
push
push
int3
xchg
sbb
xchg
cmpsb
add
in
es
dec
aas
pusha
lret
adc
mov
ja
mov
arpl
cmp
fmulp
xacquire
je
idiv
or
cmp
insb
sub
mov
jge
mov
push
pop
jge
xchg
cli
out
lret
and
mov
or
or
sbb
mov
std
add
sahf
fnstenv
sti
or
lret
fists
mov
pusha
push
adc
or
mov
clc
stc
movsb
sarb
hlt
dec
mov
cmc
or
incl
xchg
fcoms
cmp
and
add
inc
adc
mov
mov
js
mov
scas
or
lret
lret
or
xchg
mov
jno
mov
sbb
inc
ljmp
dec
js
xor
lds
bound
pop
mov
repz
gs
mov
or
out
pusha
push
adcl
mov
aaa
ja
jae
mov
pop
inc
jo
clc
in
outsl
sbb
ja
jae
popa
fcoms
dec
mov
sub
movsl
cmp
outsb
fidivl
dec
lret
scas
xchg
or
rclb
scas
lcall
dec
mov
adc
and
jg
jmp
sbb
mov
mov
mov
jbe
shl
testb
cmpsl
fadds
or
sub
add
stos
fnsave
jo
mov
imul
repz
popw
jne
add
sbb
inc
loop
popw
sarl
lahf
cmpsb
xorl
outsb
jp
dec
sub
cmpsl
pushl
shll
push
or
or
mov
inc
cld
mov
js
jl
cmc
push
and
fs
inc
push
cmpsl
mov
sub
cmpl
in
scas
xor
xor
dec
inc
fdivrp
mov
add
aas
xchg
dec
cmpsb
mov
sub
mov
addr16
movsl
jl
imul
xchg
sarl
mov
inc
push
adc
scas
xor
sbb
dec
repnz
out
pop
loopne
ret
push
faddl
inc
mov
mov
pop
loop
jmp
mov
pop
add
in
dec
in
andl
inc
lret
sub
jle
mov
inc
bound
or
push
fs
cmpsb
or
loope
fistpl
sub
dec
and
xor
pusha
push
adcb
push
scas
mov
dec
push
mov
push
js
fdivrl
cmp
sbb
inc
fimull
popa
fmuls
shlb
je
push
jno
xlat
js
mov
test
gs
mov
push
rolb
in
fbstp
add
ret
inc
loop
sahf
jmp
iret
ret
cmp
cmp
sahf
mov
pusha
sub
and
scas
test
sahf
adc
jp
cmpsl
inc
ljmp
pop
pop
test
cmp
jnp
imul
mov
adc
lods
movsb
jle
sbb
movsl
bnd
dec
std
addr16
push
push
xor
fcoms
pop
cld
mov
imul
fstpt
fsubl
into
cmp
jg
imul
dec
popa
iret
mov
loopne
sub
mov
and
adc
sub
imul
push
jne
lods
jg
stc
stos
cmp
mov
cmove
pop
xor
out
cmp
lea
cs
fiadds
popf
aam
dec
pop
mov
test
push
mov
stc
ret
insl
repz
add
adc
lcall
xor
insl
out
stos
idivl
mov
fldt
stos
pop
ja
jae
push
cli
push
jle
pop
addb
loop
scas
pop
scas
and
lea
mov
and
jl
or
into
lds
out
mov
pop
inc
mov
mov
xchg
lcall
stos
or
pop
lcall
push
movsb
mov
addr16
scas
pushl
sub
jbe
sbb
bound
daa
out
mov
pop
lret
jg
rolb
inc
mov
or
jne
xor
dec
adc
mov
mov
out
and
into
loopne
cmp
or
repz
jne
mov
scas
lods
repz
cmp
pop
mov
sub
pop
out
mov
pop
bound
pop
sarb
into
fiadds
mov
xchg
out
test
jg
adc
into
sbb
inc
insb
mov
inc
out
push
shrl
inc
loop
aad
add
loop
mov
jnp
out
jb
cmp
jb
mov
xchg
jo
mov
iret
push
mov
pop
push
ss
loope
sub
jne
rolb
xchg
lea
loopne
push
sub
aad
repnz
fcompl
jecxz
push
rcll
sbb
xor
or
cmpsb
jnp
mov
inc
call
lret
mov
xor
lock
dec
xchg
sub
xchg
imul
xor
scas
iret
and
or
cmp
dec
in
adc
icebp
mov
std
subb
out
jl
mov
into
xchg
jg
jne
lahf
push
cmpl
sub
add
mov
jo
pop
cltd
mov
push
push
xchg
popa
jle
pop
lcall
cmc
ror
push
stc
not
add
shr
xor
mov
stos
mov
sbb
dec
mov
jne
addr16
cmc
xorl
pop
das
sbb
xor
ljmp
test
adc
popa
mov
stos
arpl
or
addr16
mov
fcmovnu
xchg
adc
dec
mov
and
nop
cmp
mov
insb
dec
mov
mov
or
pop
push
in
sahf
add
and
jmp
xchg
jg
pop
loop
outsb
repz
mov
sub
imull
outsb
pop
or
xchg
xchg
loope
jae
push
or
xchg
into
imul
sub
scas
mov
je
fsubl
xlat
pop
xchg
test
xlat
lock
cmp
or
jae
cmpsl
xor
push
in
xchg
lret
push
fadds
and
cmp
loopne
loop
mov
pop
xor
adc
pusha
jo
xor
rorl
dec
rcrl
cmp
mov
push
jbe
mov
dec
inc
in
xor
jg
test
xchg
mov
push
out
jns
dec
add
push
gs
fisttpl
dec
insl
into
scas
lret
cwtl
popa
cmp
stos
sbb
inc
cltd
js
and
lret
mov
pop
fnsave
push
sub
or
jge
inc
xchg
cmpl
or
add
ret
pop
test
xor
mov
jns
add
mov
mov
nop
xorl
out
bound
push
sahf
ficompl
sbb
dec
adc
mov
xchg
sub
xor
lods
push
sbb
pop
popa
jno
sbb
sbb
idivl
aas
cwtl
push
dec
stos
and
sbb
cs
push
fstl
add
mov
add
xchg
pop
in
out
addr16
popl
inc
and
or
add
mov
ljmp
jae
push
lods
sub
or
sub
fstl
push
dec
enter
sub
xchg
add
cwtl
aad
xor
into
scas
jg
ret
in
push
jne
imul
dec
lock
je
cmp
idivl
mov
popa
aad
clc
dec
das
xchg
sub
add
push
mov
mov
andl
jnp
scas
insb
pop
jo
sbb
mov
cmp
cld
in
mov
das
pushf
loop,pt
scas
cwtl
mov
pop
popl
push
adc
sub
fwait
push
jb
push
loop
test
mov
mov
xchg
jecxz
lea
jecxz
mov
sbb
fstl
into
push
jb
out
jno
ret
sub
and
insl
add
mov
mov
jl
cld
jl
adc
pop
jo
jg,pn
cmp
pop
imul
lret
je
sti
and
sbb
cmp
sbb
dec
stos
insb
dec
xor
imul
xor
jp
push
ss
stc
cmc
sub
loopne
mov
xor
aam
jmp
push
loope
mov
mov
cmp
aaa
mov
outsb
jb
popf
mov
scas
aaa
jns
mov
xor
dec
mov
movsb
test
loopne
addb
push
mov
lahf
aas
popa
xor
jb
add
sub
push
and
pop
jp
shrb
cltd
add
sub
pop
sbb
xchg
scas
dec
push
xor
ja
cltd
inc
or
jg
mov
jae
and
bound
lret
jmp
pop
cmp
aam
test
lods
push
sub
fdivr
jecxz
jg
test
mov
popf
iret
or
test
sub
popf
sbb
mov
mov
test
push
mov
xor
cmp
mov
rclb
andl
and
dec
stos
clts
and
scas
adc
fcom
inc
lock
xchg
sahf
xchg
cmp
jl
rorb
pop
add
adcl
inc
imul
lret
fcoml
adc
imul
ret
insb
sbb
lcall
inc
outsl
cmpsb
rcrb
jns
xor
sbb
jl
sbb
adc
imul
lret
inc
aam
sbb
pushf
fs
or
cmp
and
sbb
pop
jmp
push
shlb
fiadds
lods
and
mov
cmp
pop
gs
mov
enter
je
cmp
cmp
xchg
sub
in
stos
incl
popf
sub
test
and
adc
out
rcrb
jne
outsb
mov
push
ret
jmp
sbb
jg
mov
je
ficompl
or
les
notl
pusha
decl
lea
psubq
mov
xchg
out
xchg
inc
and
mov
sti
or
std
and
in
hlt
mov
push
dec
add
jl
jmp
stos
imul
push
xor
sub
pop
jbe
cmp
push
les
sub
mov
cs
cmc
cltd
adc
push
pop
cmp
mov
mov
rcr
and
or
loopne
dec
lods
enter
and
in
or
adc
pop
loopew
sti
dec
mov
mov
int3
cmp
cmp
fs
lcall
bswap
aas
fistpl
jmp
dec
cmpsb
sub
inc
pop
nop
lahf
jo
mov
lea
imul
test
jb
scas
pop
daa
pusha
fisttpll
imul
mov
inc
mov
es
rolb
mov
jb
jae
lret
fwait
push
stos
dec
fiaddl
orb
pusha
incb
outsl
xor
mov
or
push
jns
pop
fildll
pop
popf
arpl
sbb
pop
lret
mov
ljmp
sub
inc
inc
scas
and
jns,pn
fistpll
frstor
xor
cmpsb
jecxz
push
add
jmp
test
leave
xor
lea
dec
jl
add
adc
cmp
xrstor
rorl
cmp
rcll
iret
sub
lret
or
jo
aas
lret
mov
aam
inc
xchg
sub
or
test
mov
ljmp
cmp
cmpsb
in
add
push
sar
icebp
rolb
jns
test
hlt
sub
repnz
insl
add
push
add
cli
nop
cli
out
test
or
push
int3
jae
mov
mul
adc
inc
push
add
fbld
ljmp
int3
stc
cmpsl
out
cmc
jno
lea
cmp
lea
sahf
dec
mov
fsubl
jno
jl
add
cmp
lret
push
xchg
popa
data16
add
dec
pop
int3
and
mov
clc
mov
fwait
push
es
aaa
aad
sbb
inc
das
jecxz
aas
pop
movsb
pop
sub
mov
and
sbb
je
js
xor
das
xchg
enter
in
xor
cmp
movsb
ror
adc
or
mov
pushl
popf
push
and
xor
sbb
lock
shrl
jl
aam
jl
inc
jne
in
shlb
in
cwtl
and
std
xchg
fdivrl
cmp
inc
cwtl
and
xorb
mov
inc
adc
inc
stos
inc
xchg
jp
push
out
push
push
cmp
rclb
leave
jae
cmp
out
jno
outsb
mov
inc
jne
mov
faddl
out
insl
sti
jbe
jo
push
daa
jo
inc
sbb
pop
insb
mov
into
cs
push
call
push
movsl
in
loopne
ficoml
add
sub
or
hlt
cmp
mov
test
mov
ljmp
and
addr16
and
insl
stos
sub
les
pop
scas
rep
pop
cwtl
xchg
xor
mov
sarl
or
stos
dec
fildll
and
adc
notb
ds
outsb
dec
jecxz
test
ds
pusha
in
inc
je
inc
leave
push
mov
add
xchg
les
sbb
push
mov
into
sub
sub
sub
mov
mov
mov
loope
dec
test
xchg
fsubrs
jmp
and
adc
mov
lods
push
pop
fisttpl
push
pop
mov
jbe
push
xor
stos
inc
ds
cli
fidivs
push
adc
subl
adc
or
shlb
sti
add
out
mov
xor
fdivl
xor
cwtl
lret
jg
cmpsl
jp
mov
xchg
push
mov
insl
les
jne
jg
push
leave
mov
lret
shr
push
inc
inc
xchg
and
xchg
cmp
adc
push
addl
mov
rcrl
fisttps
xchg
sbb
test
stos
bound
mov
xchg
xor
jae
ljmp
lods
testb
add
mov
outsb
sub
mov
lret
stc
andl
inc
sbb
int
mov
mov
fisubrl
and
mov
lock
stos
dec
testb
mov
or
test
push
iret
or
gs
sub
xchg
dec
stos
xor
imul
jecxz
push
pop
ljmp
in
pushf
dec
inc
test
cmpsb
fdivl
xchg
icebp
in
rcll
shll
mov
repz
pop
add
sbb
popf
push
and
push
call
das
xor
or
or
mov
cmp
or
ret
add
adc
or
push
ja
mov
jge
ret
cmpsl
rorl
push
aaa
imul
cmp
inc
loope
movsl
test
push
mov
dec
jbe
testl
pop
int
fistpl
mov
mov
aam
push
test
insb
es
push
test
xchg
sub
or
int3
push
add
iret
jle
cmp
je
ror
stc
sarb
mov
push
insb
mov
int3
mov
lea
or
and
out
cmpsb
add
xor
xor
jg
jnp
pop
pop
jmp
inc
in
jbe
imul
jg
push
adc
lret
fidivl
add
in
movsb
test
enter
divl
inc
lret
in
adc
das
xor
and
cmp
xchg
aaa
add
lods
xor
test
push
mov
or
lock
cld
addr16
mov
mov
xchg
mull
mov
add
aam
add
in
mov
sub
pop
mov
lods
ja
xchg
ret
xchg
add
repnz
ljmp
xlat
clc
xchg
aas
mov
sbb
jecxz
jg
jnp
jg
adc
xchg
das
mov
fimull
mov
dec
pop
xchg
jae
aad
in
mov
out
sbb
sub
mov
push
das
mov
sbb
jecxz
dec
and
daa
mov
in
gs
pop
dec
in
dec
sub
pop
int3
sub
ja
fildll
adc
or
int
jp
jl
jmp
xchg
test
pop
out
mov
sub
lock
lret
cbtw
cmpsb
fwait
pushf
xchg
push
call
pop
xor
jns
inc
xchg
fcomps
rclb
mov
scas
arpl
mov
imul
por
aad
xor
dec
mov
xchg
dec
movsb
aas
dec
mov
lods
jbe
lds
cmp
push
pusha
mov
clc
movsl
sbb
jbe
insl
mov
clc
push
popa
nop
repnz
stos
sub
ret
clc
xchg
arpl
rol
roll
bound
mov
or
fistl
insb
push
jo
push
movsb
rcl
xor
ds
adc
mov
push
add
int
pop
sbb
or
dec
pop
call
mov
inc
pop
stos
dec
pushf
sub
pushf
mov
inc
push
inc
and
icebp
inc
data16
sub
jnp
xor
mov
add
pop
pop
mov
jge
sbb
mov
adc
imul
pushf
sar
das
cmp
frstor
jg
pop
nop
popf
push
dec
sbb
pop
leave
mov
call
cmovne
push
lods
push
push
jo
sub
pop
fidivl
mov
sbb
pop
cmp
sub
shlb
sub
mov
jge
lahf
inc
mov
mov
hlt
push
jmp
lahf
cmp
push
lock
jmp
std
xchg
inc
fiaddl
ja
sub
arpl
pop
fmuls
mov
dec
push
std
jnp
adcl
cmp
aam
pusha
pop
int
sahf
pop
jmp
add
or
pop
scas
test
lods
and
xor
jno
aaa
adc
mov
and
inc
loop
inc
int
dec
pop
out
pop
adc
ss
sahf
ret
push
es
push
cmpsl
cmp
imul
andl
imul
fsubl
sbb
sub
stc
mov
popa
xor
test
cmp
mov
bnd
stc
fimull
in
movsb
inc
and
cmovno
into
popa
sub
leave
pusha
mov
inc
mov
mov
aam
xor
xchg
aaa
cmp
lcall
and
mov
pop
loop
adc
mov
dec
jb
jmp
popa
inc
std
sbb
inc
jne
xor
call
pop
repz
mov
lea
push
icebp
dec
out
data16
negl
push
xchg
pop
jns
or
lock
sbb
xchg
aas
mov
add
jbe
xor
adc
out
daa
dec
cltd
int3
pop
xor
call
xor
xchg
dec
loop
iret
cmp
decl
push
subl
inc
cmpsb
sub
js
jnp
add
xchg
cwtd
mov
outsl
dec
loopne
mov
iret
mov
sbb
add
clc
or
sbb
mov
js
out
cltd
jmp
enter
fistpl
lcall
push
xchg
lcall
inc
cmp
pop
inc
mov
jge
lret
fwait
xlat
mov
jp
inc
lret
insl
pusha
pop
lds
insb
fs
data16
aas
adc
pop
or
push
loop
jge
pop
pop
cli
mov
dec
xchg
and
arpl
clc
divl
jmp
test
xlat
fcomps
xchg
outsb
mov
dec
push
movsl
std
leave
lea
icebp
mov
mov
or
fimuls
xchg
and
mov
and
fsubrp
ds
fcmove
push
in
cld
push
loopne
mov
push
adc
mov
into
rep
push
lds
inc
xorl
out
ret
and
add
and
dec
cwtl
sbb
cs
movsl
dec
xlat
into
cmp
pop
xchg
and
pop
ret
mov
add
insl
les
cld
add
sub
sbb
push
pop
jae
sbb
xchg
pop
mov
sahf
sbb
pop
mov
mov
sub
fsubrs
pop
les
aad
cmp
addr16
lret
pusha
mov
pop
lock
mov
aam
jle
in
mov
cltd
jno
mov
add
inc
test
sti
fdivs
sbb
test
xor
sub
cmp
push
in
sub
xchg
cmp
call
in
cmp
decb
and
push
sbb
test
imul
data16
adc
ret
cmp
dec
adc
mov
and
pop
mov
pusha
mov
stc
push
pop
inc
jb
xor
mov
cmpsb
gs
nop
mov
flds
mov
pop
shll
adc
out
dec
mov
fisubrl
loope
jbe
mov
lods
jle
pop
adc
jge
mov
cmp
sub
xchg
xor
in
cmc
mov
popa
xlat
test
xor
fmul
or
sbb
call
mov
dec
and
ljmp
sti
js
mov
jns
mov
inc
add
in
push
shll
leave
imul
cld
sahf
pop
cmp
xor
xchg
sbbb
fwait
or
loope
dec
inc
push
pop
push
push
pop
repz
mov
repz
adc
push
shl
movsl
jnp
cmp
arpl
imul
inc
leave
mov
imul
cmp
outsl
xor
arpl
inc
mov
ds
pop
hlt
cwtl
push
mov
inc
mov
lret
data16
cmp
out
sahf
mov
dec
loop
cmpsl
mov
mov
ret
sbb
scas
dec
aad
rorl
orl
mov
jne
outsl
ljmp
cmp
jecxz
into
push
loop
fucompp
gs
test
mov
cmp
pop
jne
loope
inc
sub
dec
adc
out
iret
add
dec
lret
jb
dec
test
xor
push
sbb
xlat
sbb
mov
fisubs
inc
inc
or
lods
jp
std
jmp
enter
out
xchg
push
pop
add
sbb
mov
cwtl
ret
adc
aad
addr16
pop
xlat
push
dec
jb
cmp
lret
loop
mov
jne
mov
lods
and
adc
xchg
mov
and
in
addr16
cli
lods
xchg
dec
xor
inc
stos
fildl
pop
aam
das
lcall
xlat
push
jl
aam
dec
cmp
dec
fmull
mov
sbb
and
jl
fs
popf
xchg
mov
es
sbb
scas
add
addl
xchg
aaa
push
mov
push
cmp
inc
mov
inc
pop
mov
jbe
mov
in
lahf
adc
adc
mov
xchg
sbb
jns
and
cld
in
sub
add
adc
sahf
sub
inc
mov
pop
mov
xor
sub
cmp
dec
dec
decb
in
in
pop
cmp
sbb
push
stos
movsl
inc
stc
inc
mov
fcomi
add
lds
sahf
push
jg
imul
push
push
mov
int
vlddqu
ficompl
xchg
lock
jmp
mov
loop
movsb
stos
jp
and
ret
jge
ljmp
dec
push
ljmp
sbb
jae
xchg
xchg
pop
add
stos
add
clc
nop
lea
scas
pop
sub
pop
aad
push
fwait
xchg
fdivs
adc
repnz
les
sbb
mov
fs
lods
mov
js
testb
imul
sub
xchg
call
dec
mov
outsb
cwtl
lret
popf
pop
xchg
stos
or
sti
std
cmp
pop
scas
push
inc
fstpt
add
sbb
out
and
sub
inc
jp
mov
dec
and
popa
lcall
jns
mov
ds
push
sub
leave
in
aas
cmp
mov
sbb
ret
call
or
inc
arpl
xchg
adc
xor
or
mov
jl
das
cwtl
pop
addr16
cmp
xor
dec
and
dec
mov
jne
repz
adc
cs
mov
inc
push
dec
xorb
mov
dec
push
ret
inc
ss
cmp
cmc
sbb
sti
xor
xor
xchg
fildll
repz
rclb
sub
dec
and
mov
mov
push
les
mov
int3
sbb
push
mov
cmc
aas
sub
loopne
mov
pop
and
fldcw
mov
xor
stc
testl
mov
mov
shrb
nop
test
mov
and
mov
inc
and
jnp
outsb
in
fwait
lret
mov
lods
loop
xchg
mov
mov
and
aaa
inc
sahf
ret
mov
jns
xor
push
call
push
das
jb
push
mov
xchg
lea
jl
fnstcw
jle
push
push
aas
test
jae
ffreep
xor
mov
lret
sbb
hlt
lret
jo
ds
push
xor
mov
data16
push
je
mov
ljmp
sbb
cmpsl
or
movsl
insl
jle
inc
jno
lret
or
pop
or
inc
xor
pop
gs
add
adc
adc
jle
sti
lcall
cmp
or
mov
test
bound
mov
in
iret
push
adc
aas
addb
xlat
dec
fsubrl
push
aad
test
mov
xlat
cmp
xchg
push
aas
push
jecxz
cmp
in
xchg
jno
popf
mov
mov
aam
and
and
ret
or
jmp
aam
sbb
or
in
mov
pop
call
mov
xor
mov
call
push
into
aas
test
aas
jmp
sbb
shl
sahf
xor
mov
mov
cltd
ljmp
mov
mov
cmp
sti
or
pop
fists
fistps
out
scas
iret
and
push
dec
jne
test
fcomi
xchg
mov
mov
jecxz
xchg
mov
pop
fistpll
mov
cmp
dec
mov
xor
lods
mov
mov
out
subb
in
lret
clc
cmp
jg
out
imul
cmp
lea
jmp
stos
inc
call
pop
cmpl
pop
and
clc
lods
ret
in
pushf
leave
adc
xor
lahf
insl
fadd
lret
aam
jno
lret
js
mov
adc
pop
mov
sbb
inc
inc
xchg
jae
xor
in
outsb
lcall
jbe
aaa
dec
pushf
stc
out
aam
cltd
addr16
mov
fistpll
nop
xchg
cmp
scas
cmpl
fs
mulb
jmp
repnz
aad
scas
and
jns
inc
cs
sarl
mov
jecxz
ret
outsb
je
ds
pop
mov
mov
add
or
mov
mov
mov
adc
adc
js
ret
jp
bts
mov
sbb
jmp
push
sub
push
imul
push
dec
sbb
popf
inc
push
push
push
inc
adc
and
aam
push
shll
and
sbbb
fcoml
shrl
mov
push
xor
call
mul
pop
mov
pop
cwtl
inc
dec
data16
fcompl
or
sbb
add
iret
shl
pop
loope
clc
notb
xchg
data16
test
xor
scas
roll
insb
mov
loop
and
rcll
ret
sbb
or
ljmp
rol
sbb
mov
fcoms
sub
stos
mov
aad
sti
lcall
cmp
push
int3
and
push
stc
jg
icebp
lcall
std
mov
repz
sbb
inc
and
mov
outsb
mov
inc
ss
mov
sahf
inc
push
mov
xchg
loopne
push
push
das
cmp
lods
mov
push
lock
ja
fnstsw
les
sub
data16
pop
ljmp
jae
jnp
xchg
mov
movsl
adc
mov
push
lahf
mov
incb
sub
mov
mov
icebp
jle
cmp
les
dec
jb
ljmp
adc
sub
popa
mov
add
jo
dec
stos
dec
adc
dec
lock
das
ljmp
adc
movsb
push
mov
sub
icebp
or
lret
movsl
mov
inc
push
out
xor
imul
call
xlat
sub
clc
xor
mov
jecxz
loopne
push
mov
sbb
sbb
jnp
cwtl
jg
es
or
add
fstpt
lods
dec
bound
pushf
sub
add
and
jns
lcall
mov
sbb
mov
and
mov
xor
mov
repz
stc
sbb
adc
mov
mov
jae
jmp
ret
inc
xchg
xor
idivb
xorb
mov
sbb
ficompl
imul
xchg
rclb
dec
call
outsl
push
imul
pop
cmp
push
xor
xchg
xchg
cmpb
idivb
xor
pop
mov
int3
sub
dec
sbb
stos
aas
call
xchg
int
and
cs
imul
iret
pop
xor
ret
ljmp
insl
xor
mov
fstl
inc
xchg
idivl
jecxz
leave
scas
xchg
sbb
movsl
add
ret
push
and
sbb
sbb
lods
leave
cwtl
sub
scas
or
and
adc
mov
dec
pop
mov
xchg
repnz
mov
lret
dec
cmp
lods
mov
inc
aam
loope
dec
int3
pop
xor
movsb
xlat
push
push
xchg
loop
mov
xchg
scas
fsts
rorl
and
dec
jnp
int3
outsl
lods
dec
push
jg
ds
xor
pop
dec
push
rolb
dec
pop
mov
in
cli
testb
adc
fwait
inc
aaa
loopne
push
ret
cmc
sbb
hlt
dec
loopne
cmpb
jl
mov
xchg
mov
mov
push
cmp
pop
cmp
les
roll
cmpsb
hlt
test
sbb
push
adc
push
push
cmp
stc
test
lock
mov
inc
mov
dec
mov
or
lods
lret
xchg
imul
mov
and
adc
rcrb
imul
mov
dec
lahf
push
in
push
das
jnp
xchg
mov
cltd
inc
shrl
pop
in
push
mov
mov
int3
jp
adc
push
fwait
jl
push
inc
stos
ljmp
ss
lods
lret
jle
cmpsl
aad
sti
dec
mov
push
fwait
sahf
ljmp
push
movsl
sub
push
sub
push
test
jae
rol
ret
scas
pusha
lds
repnz
imul
push
jecxz
lock
mov
aam
in
xlat
xor
out
cmpsb
jl
push
add
xor
into
aas
movsl
call
lcall
jns
fcoms
jecxz
stos
lea
pop
das
es
inc
outsl
and
das
cmp
pushf
jno
aad
popf
push
out
jle
jnp
das
int
fsubs
pop
ds
leavew
cmp
faddp
xor
inc
push
ss
cmpb
or
fcmovbe
rcrb
aaa
sti
inc
mov
cmp
or
bound
xchg
or
popf
push
out
fcomps
stos
scas
push
jb
rcl
inc
pop
push
jae
push
jnp
sub
adc
dec
loop
fbstp
imul
pop
push
roll
out
scas
xor
push
es
popa
das
xor
ja
iret
daa
mov
rcl
shrl
scas
dec
xchg
in
cmc
mov
scas
mov
sbb
scas
cli
add
mov
sbb
jbe
mov
outsl
roll
mov
pop
out
adc
je
clc
mov
inc
in
mov
iret
cmp
inc
call
shrl
aas
jns
decb
popf
push
repnz
jno
jns,pt
or
push
out
pop
lahf
mov
das
sar
cmp
sbb
adc
inc
rcrb
xorb
push
lcall
push
mov
jl
outsb
cmpsl
shlb
adc
push
bound
add
test
sti
cmp
rcrb
push
xchg
movsb
xchg
xor
and
cli
sbb
push
push
xchg
mov
mov
das
cvtpi2ps
and
leave
mov
lds
std
mov
idivb
jns
mov
das
cld
es
test
push
jg
shll
cmp
leave
lea
fneni(8087
aam
pop
cmp
aam
pop
sub
mov
test
dec
cltd
outsl
arpl
jecxz
inc
lret
push
arpl
and
lea
or
jecxz
clc
mov
dec
sti
adc
int3
adc
inc
add
call
push
inc
sti
call
test
rorl
jge
mov
mov
mov
out
es
ds
test
pop
push
int3
inc
mov
loope
clc
sbb
xor
xchg
jne
pop
mov
pushf
add
xchg
test
addr16
add
aad
sub
xor
push
fnstenv
gs
pop
in
sbb
sub
lods
cwtl
inc
shrl
subb
sub
lcall
pushf
out
adc
fistpll
lock
xchg
adc
mov
mov
mov
push
fistl
negl
inc
lods
mov
loopne
fiaddl
jle
in
in
jns
test
dec
pop
or
je
and
fwait
jmp
les
push
pop
rolb
cmpsl
cwtl
or
mov
sub
add
mov
stos
xor
mov
pop
lock
sbb
and
cltd
out
mov
mov
ss
test
outsb
inc
gs
xchg
sub
js
lcall
cltd
stos
aas
add
mov
lcall
adc
jecxz
push
mov
fnstcw
adc
sbb
xchg
xlat
fs
lock
fisubs
push
js
insl
fildl
mov
cli
and
popf
xchg
fs
shlb
loop
movsb
xorb
stc
xchg
in
lock
sarl
fsts
jle
and
int
sbb
mov
cs
push
xlat
cwtl
das
dec
dec
scas
or
push
loope
dec
pop
cmp
stc
stos
push
adc
add
lock
lahf
lret
sbb
repz
xchg
loop
test
pop
push
mov
mov
cli
xchg
xlat
jp
xlat
or
std
xchg
jge
loop
add
mov
popf
cli
icebp
or
popf
sti
pop
cmp
lea
push
cmc
arpl
sbb
pop
and
or
mov
mov
testb
cmpsb
or
nop
inc
jnp
pop
mov
imul
mov
into
pop
xchg
filds
pop
das
dec
stos
inc
xorb
rclb
jnp
in
ja
push
lcall
sub
xchg
xchg
xchg
sub
in
rcll
je
cwtl
adc
je
pop
fadds
mov
mov
and
test
cmp
add
push
xor
xchg
cltd
adc
loope
or
cmp
jl
fnstenv
aas
cmpsb
ss
xorb
jae
scas
jp
xlat
dec
ljmp
add
int
adc
jo
adc
cmpsb
aas
mov
out
sahf
and
cmp
lea
jp
loop
out
sbb
mov
lahf
jne
mov
das
and
mov
xchg
cmc
cs
idivb
js
aam
sbb
scas
xor
xchg
mov
in
into
fwait
mov
movl
arpl
sbb
inc
in
jecxz
scas
ret
cmpsb
pop
dec
clc
popl
sbb
movsl
adc
add
xchg
outsb
dec
cwtl
xorb
lods
inc
mov
and
jnp
adc
xchg
ret
push
dec
movsl
push
cld
mov
stos
push
mov
fistpll
or
jl
dec
push
xor
shll
jle
test
mov
pushf
mov
fdivs
popf
inc
cmp
push
xor
ljmp
lock
pop
pusha
cs
mov
dec
pop
mov
mov
jno
imul
lea
mov
mov
into
int3
or
ja
stos
or
xor
cmc
sti
xchg
shrb
scas
xlat
call
mov
xor
mov
repnz
sub
and
push
stc
or
pop
in
rcrl
sub
mov
add
add
push
inc
icebp
cld
in
xchg
mov
dec
mov
mov
lahf
jb
push
inc
mov
mov
sub
jo
leave
mov
pop
mov
pop
and
xchg
dec
out
cmpsl
test
dec
dec
lock
rclb
popf
shlb
out
or
push
test
aad
or
in
xchg
add
mov
mov
adc
push
lock
inc
fbstp
push
jb
js
xor
and
dec
mov
test
stc
mov
push
loope
repz
fs
xchg
inc
je
cli
sub
adc
xchg
loop
pop
idivb
movsb
mov
sub
xlat
mov
push
rorb
sbb
pushf
test
popl
inc
pusha
inc
les
fld
icebp
rolb
mov
popa
adc
dec
push
jb
iret
push
mov
rcr
mov
push
pop
dec
cmpsb
sub
popa
repnz
scas
pusha
hlt
push
mov
lock
inc
jl
and
out
lret
fldt
jmp
sbb
cmp
ljmp
jns
push
sahf
scas
mov
xchg
sub
jne
cmp
rorb
and
dec
pop
orl
push
scas
xchg
in
sbb
sub
mov
jbe
fucomi
sti
sub
and
mov
mov
ret
adc
and
fadds
fidivs
jmp
repz
mov
lods
insb
sarl
mov
cmp
scas
dec
out
sub
frstors
scas
loope
mov
in
push
sbb
sbb
cmp
jne
mov
mov
sbb
jmp
sub
sub
mov
mov
xchg
cld
pop
jne
cmp
sub
es
fiaddl
enter
cmp
and
xchg
add
lods
cmp
int3
mov
adc
jecxz
cmpsl
cmp
jbe
lods
and
int3
inc
xchg
xchg
fwait
fs
stc
iret
popf
mov
cltd
cmp
sbb
dec
pop
or
push
repnz
jo
pop
call
ja,pt
mov
xchg
fiadds
aad
xor
jge
add
or
fcmove
adc
ds
xchg
dec
stc
repz
leave
xchg
enter
or
fsubr
xor
and
jge
aas
pop
shl
pop
out
cbtw
cmp
xor
lock
rorb
sub
fmull
iret
lret
insb
outsb
icebp
out
aaa
imul
cmp
movsl
xchg
cmpsb
daa
fimull
int
mov
cmp
adc
fistps
dec
dec
mov
shll
jmp
mov
jg
in
push
dec
adc
pop
pop
rorl
or
lods
cmp
jmp
lock
fadds
inc
mov
rcrl
movsl
cmp
ret
add
outsl
out
add
mov
inc
mov
dec
push
jno
lods
pop
sbb
xor
pop
icebp
ljmp
and
lods
sbb
dec
test
cli
es
test
xor
icebp
mov
imul
sbb
leave
cld
xor
sbb
icebp
jg
cmp
lret
test
inc
lea
shll
arpl
test
cmp
pop
push
mov
lds
cwtl
rcrb
fldl
push
aad
daa
loopne
gs
iretw
repnz
jg
jb
xchg
dec
ficoms
mov
in
call
push
push
dec
aad
cwtl
ret
xor
inc
lods
sbb
mov
enter
popl
into
adc
mov
sti
in
repz
mov
mov
cltd
iret
sub
push
mov
inc
jb
mov
and
test
sbb
mov
sbb
stos
mov
call
in
in
pop
std
in
fcmovnb
xchg
es
mov
pop
fsubrs
and
movsl
jecxz
add
addr16
xadd
xor
pop
sub
pop
outsb
pop
inc
xor
and
adc
out
push
test
mov
sarb
xor
xorl
cmc
xor
mov
adc
mov
push
mov
cmpsl
lea
lock
addr16
mov
aas
pop
sub
pop
mov
add
dec
pushf
insb
mov
test
mov
jle
pop
push
mov
int
sbb
ret
cmp
mov
jge
xorb
das
sbb
mov
pop
dec
hlt
xlat
mov
sub
cwtl
mov
add
call
pop
xor
push
addl
push
popf
mov
or
out
out
mov
inc
jmp
or
push
sarl
mov
shll
cmp
loop
and
aad
fcomp
or
mov
into
mov
inc
mov
stos
out
dec
xchg
pop
adc
mov
clc
dec
mov
push
add
fs
lea
test
pop
add
ljmp
enter
xor
xchg
adc
clc
sbb
repnz
enter
stc
enter
or
sub
cmp
call
pop
xchg
gs
mov
adc
lcall
add
sub
push
mov
mov
clc
fwait
pusha
xor
rorb
filds
mov
mov
cmpsl
push
xchg
xlat
aam
pushf
mov
out
dec
call
pop
in
push
das
test
jnp
lahf
mov
scas
movsl
mov
jl
out
icebp
ffree
add
enter
incb
fistpl
push
push
or
stos
push
xlat
cli
out
mov
jb
sbb
in
fcmovbe
popf
js
mov
adc
out
mov
and
push
scas
jae
sahf
adc
xor
push
and
stc
xor
scas
sub
insb
pop
insb
dec
adc
mov
ds
inc
push
jmp
testb
nop
imul
repz
clc
aas
xor
andl
ficoms
les
insl
push
daa
push
mov
flds
mov
data16
mov
stos
inc
xchg
in
mov
sbb
and
sahf
xor
mov
lds
jp
dec
or
jle
ljmp
adc
adc
aad
ljmp
jno
jp
pushw
test
mov
mov
push
js
mov
jmp
mov
xor
ret
sub
pop
outsb
jo
not
leave
lods
inc
rol
call
adc
out
push
inc
fldt
jl
jmp
rep
xchg
scas
shll
in
stos
mov
dec
in
sbb
mov
dec
push
fistl
push
xchg
testl
and
pop
push
popa
lods
jmp
imul
xchg
fisttpl
mov
hlt
mov
aad
ss
xchg
shll
mov
pop
mov
add
sbb
cmc
jbe
push
mov
mov
adc
repz
fstpt
orb
xor
jg
jns
xor
popf
in
icebp
int3
xchg
and
aam
sub
dec
lea
or
push
movsb
jp
cli
cmp
hlt
stc
rep
dec
inc
std
inc
hlt
jne
sub
repnz
mov
and
push
mov
lret
hlt
lods
cs
cmpsl
mov
cs
addr16
clc
xchg
mov
hlt
movsb
loope
stos
mov
dec
jp
mov
hlt
leave
popf
shr
lcall
mov
lock
iret
push
cmp
and
dec
mov
xor
out
mov
test
jmp
pop
mov
out
cltd
pusha
and
mov
enter
mov
out
insb
mov
add
cmp
outsl
mov
push
cmpsb
pusha
scas
jg
cmp
out
stc
dec
jp
test
jmp
adc
fs
mov
inc
push
xchg
into
jno
insl
inc
sbb
popf
sub
sub
fisubrs
jnp
jno
ds
cmp
sbb
pusha
jecxz
cmpsl
pop
jbe
cwtl
push
jecxz
repnz
loop
cmp
subl
ds
cmpsb
mov
xlat
jae
jl
aam
lock
outsb
test
lods
mov
and
sbb
xchg
mov
sub
mov
psadbw
mov
sub
lahf
inc
adc
inc
mov
jmp
dec
out
cwtl
stos
pop
ja
adcb
pop
mov
push
pop
add
fstpt
add
push
push
dec
add
outsl
sub
jp
dec
not
cwtl
fcomip
mov
sbb
out
jle
sub
mov
mov
sbb
dec
in
xchg
mov
adc
cmpsl
jecxz
es
push
or
push
jecxz
int
inc
or
lods
mov
pop
fstps
sbb
push
xchg
push
dec
lret
pop
xchg
jbe
jno
jecxz
scas
dec
loope
adc
fidivl
mul
mov
lahf
mov
cmpsl
mov
mov
push
xor
push
or
jbe
dec
mov
clc
cmp
mov
push
ficomps
loop
lock
cmpsl
in
jp
mov
pop
pop
cmpsl
jg
xor
xchg
jmp
dec
sbb
xchg
pop
mov
add
dec
pushl
mov
mov
rep
fisttpl
aas
repz
repz
cmpsl
push
cmp
mov
lret
fsubs
sbb
xor
pop
cld
push
xor
arpl
imul
mov
pop
pop
push
sbb
shll
jo
insl
jae
lds
icebp
jmp
push
ds
pop
test
dec
mov
imul
psubusw
imul
sti
sbb
sbb
jmp
lret
push
scas
sub
test
fwait
xchg
stos
sbb
ja
inc
scas
dec
je
push
daa
cld
jns
lahf
jecxz
cmp
sbb
xchg
aas
fs
jo
shlb
jle
arpl
mov
movsl
lea
cltd
mov
push
in
mov
jmp
fs
cmc
adc
cli
sub
cmpl
push
dec
mov
dec
loope
pop
popa
jg
rcrl
js
or
xor
insb
mov
push
jecxz
mov
xchg
add
push
lret
mov
mov
dec
xchg
sbb
popa
mov
dec
add
sahf
sub
je
jg
and
int
push
aam
std
xchg
in
inc
inc
inc
aas
pop
inc
pop
cmp
xchg
ljmp
cmc
cmp
xorb
mov
hlt
arpl
clc
clc
hlt
aas
pop
add
ret
dec
and
imull
mov
aad
not
or
stc
inc
adc
aaa
icebp
push
test
or
push
test
mov
iret
aam
adc
cmpsb
xchg
testl
adc
bound
idivl
daa
cltd
sbb
xchg
call
leave
mov
cmc
adc
pop
inc
in
mov
mov
jb
mov
pop
lret
jb
rcll
rclb
xchg
gs
push
pushl
nop
dec
daa
fwait
cmc
adc
cli
or
repnz
enter
movb
dec
iret
andl
ljmp
push
pop
stos
fcmovnb
sbb
sub
jge
fisubs
inc
insl
or
insb
mov
fstl
enter
addb
push
xor
pop
lods
dec
iret
pushl
pop
push
into
xor
arpl
pop
ja
add
xor
add
andl
sbb
inc
gs
dec
xchg
inc
gs
js
imull
cmovs
sbb
imul
out
lods
dec
add
mov
sub
cld
jb
and
mov
mov
cmc
jge
aaa
sub
ficomps
cmp
popa
outsl
lods
test
inc
mov
mov
leave
jns
inc
jge
sub
pop
push
push
sub
sub
xor
xor
inc
mov
test
cmc
movsb
cmp
sbb
or
shlb
addl
and
insb
lds
mov
pusha
xor
mov
mov
imul
adc
into
pushl
in
test
lret
or
mov
or
or
add
loopne
outsb
xchg
aaa
and
mov
sbb
mov
sti
lods
pop
push
imul
inc
add
pop
and
and
mov
insl
xchg
and
xchg
jb
dec
ss
sbb
lods
jp
mov
jp
mov
int
inc
or
das
mov
popa
add
sub
jmp
add
data16
fwait
pop
in
jle
nop
adc
enter
pop
movsb
fsubp
in
je
pop
mov
inc
sub
lahf
sub
cmpsb
pop
xor
dec
adc
sar
xchg
out
xchg
scas
arpl
jbe
pop
imul
jo
cwtl
repz
in
popf
sbb
dec
xor
sbb
divb
aam
gs
fwait
notl
fwait
out
sbb
pop
jno
imul
outsl
mov
jmp
adc
mov
lods
or
jb
pop
test
xchg
push
cmpsl
cmp
int3
adc
dec
sub
loope
push
mov
movl
jle
add
adc
mov
push
fiadds
mov
add
jne
dec
jae
negb
int3
or
hlt
or
dec
std
comiss
rcl
or
into
inc
std
pop
push
fisubs
fadds
bound
push
shrb
sar
clc
xchg
pusha
pop
ret
cmpsb
mov
or
lahf
push
outsb
xor
stos
int
push
stos
inc
pusha
mov
push
int
in
push
hlt
push
xchg
sub
stos
sbb
sbb
and
inc
cmp
adc
pop
mov
inc
in
adc
imulb
or
jno
xchg
xor
outsb
cld
daa
adc
insl
in
jno
sbb
inc
push
jmp
push
xor
std
and
stc
aam
mov
pop
adc
lods
subl
mov
shll
mov
xchg
sti
xchg
xlat
push
jge
movb
jns
shll
mov
xchg
pop
in
fistpll
pop
pop
out
or
fwait
test
loop
mov
and
mov
ss
sbb
out
xchg
into
iret
loop
mov
out
fisubl
push
lods
xchg
and
loop
das
shl
push
out
imul
sub
xor
imul
inc
shl
btr
lret
pop
stos
cli
lods
pop
addr16
pop
xlat
pushf
sub
push
pop
mov
cmp
mov
in
in
clc
adc
lods
pop
jo
insb
mov
xlat
mov
ficompl
ret
in
mov
popa
fsubrs
or
or
lods
inc
jno
push
sbb
mov
out
movsb
inc
pop
sbb
mov
ds
aam
pop
mov
les
adc
cld
imul
test
cmp
fmuls
and
enter
outsb
xchg
xlat
lock
insb
lahf
cmpsb
mov
in
adc
movl
xchg
subl
dec
aaa
xor
mov
sub
sbb
and
mov
fdiv
addr16
push
xor
ds
popf
mov
cmpsl
pop
push
ljmp
sub
adc
lock
fiaddl
shlb
adc
push
mov
xchg
ds
aaa
jle
std
xchg
sub
mov
mov
cmc
or
cmp
ja
std
stos
push
xor
inc
push
cmc
cmc
das
pusha
or
je
adcb
xor
push
pop
out
out
fs
scas
xchg
daa
sbb
mov
mov
leave
ljmp
mov
int3
xorl
mov
sbb
arpl
and
jmp
sbb
imul
fisttpll
daa
sbb
xor
inc
fmuls
movsb
jno
pop
mov
inc
inc
orb
cmp
inc
lahf
adc
mov
test
imul
cmpsb
sub
repz
hlt
popf
jl
and
push
push
push
test
inc
addr16
pusha
xchg
xor
cmpsb
push
xorl
push
fs
js
cmp
push
out
pop
mov
aad
inc
loope
add
lds
xchg
clc
or
fcoms
cmpsl
mov
inc
sub
js
fstl
fisubrl
adc
fldenv
lock
xchg
xor
mov
xchg
out
xchg
push
imul
inc
pop
sub
xchg
push
and
cmp
inc
inc
xor
call
mov
fdivrs
movsb
shrl
scas
call
fiadds
aaa
cli
dec
xor
mov
jle
lods
cmp
mov
jbe
jl
jg
fmull
repz
xor
jecxz
das
ljmp
outsl
sub
push
ja
shrl
push
inc
lret
je
aas
pop
mov
mov
jns
cld
adc
jmp
mov
or
jecxz
ljmp
stc
push
std
je
sub
pop
clc
push
pop
pop
loopne
xor
mov
pop
repnz
pushf
fbld
jno
sbb
insl
push
mov
dec
dec
pop
or
mov
out
sub
inc
jnp
hlt
sbb
and
dec
jnp
xor
imul
mov
lods
adc
mov
and
and
sub
out
inc
sub
pusha
sub
inc
clc
lcall
jle
pop
cmp
inc
adc
aad
addr16
addr16
add
adc
cmpsl
imul
inc
jns
adc
test
add
mov
hlt
scas
mov
sbb
aaa
adc
jl
mov
mov
push
jae
stos
lods
pop
hlt
cld
sub
repnz
inc
sbb
shll
xchg
cld
pop
push
inc
stos
mov
jmp
lods
jecxz
pop
loope
sub
ja
jp
lret
pop
sti
xor
sub
inc
mov
jno
insl
sbb
scas
rcrb
inc
sub
addr16
cmp
and
hlt
mov
push
fadd
cmp
popf
add
inc
inc
inc
movsl
sub
or
sub
inc
scas
xchg
cmp
pop
dec
jg
shrl
loopne
imul
stos
outsb
mov
js
jmp
adc
mov
mov
and
cmp
mov
or
or
in
dec
mov
sbb
movsl
xchg
xchg
lods
or
sbb
shr
imul
mov
push
mov
call
push
jp
push
dec
fwait
adc
mov
aam
adc
dec
dec
adc
insb
xchg
dec
dec
cli
out
popf
push
inc
adc
adc
sti
in
hlt
xor
mov
pop
add
idivb
sahf
pop
mov
or
inc
leave
cmp
mov
jle
mov
subb
ja
and
jmp
ja
push
pusha
mov
ficompl
fcoms
push
je
js
sbb
scas
scas
dec
pop
xchg
mov
pop
std
test
mov
data16
cmp
dec
sub
or
push
mov
in
shll
mov
mov
movsl
push
adcb
nop
mov
inc
loop
xor
pushf
sub
cmp
jmp
aam
decb
inc
popa
pop
sub
fninit
aam
scas
and
sahf
aad
ja
sub
stos
pushf
xchg
adc
mov
jl
fadd
or
fwait
xchg
jbe
insl
outsb
js
jno
cmp
xor
jge
ss
fisubl
dec
imul
cmc
test
leave
xchg
aam
rcll
fs
cmovp
mov
sub
push
out
ss
lock
je
popf
sbb
mov
sub
pop
and
cmpsl
das
push
and
and
mov
fsubs
sbb
mov
jmp
jb
mov
int
jmp
jno
or
stos
pushf
cli
lods
xchg
lret
push
and
and
pop
mov
out
add
or
movb
mov
pop
sub
jl
jmp
insb
cmc
or
cwtl
aad
and
loop
pop
daa
add
mov
mov
jnp
stos
xchg
sub
mov
lock
in
inc
xchg
sbb
inc
xchg
xchg
lret
dec
jmp
jmp
lret
jns
xchg
cmp
add
sub
test
add
outsb
in
and
hlt
push
and
mull
adc
and
repnz
push
or
call
jbe
cli
hlt
jnp
nop
pop
mov
dec
lods
je
or
and
scas
hlt
loop
scas
out
adc
mov
mov
clc
mov
xchg
loop
mov
arpl
adc
data16
push
inc
ds
jg
ficomps
leave
and
mov
scas
lods
icebp
xchg
sub
mov
call
and
outsb
or
push
xchg
mov
shl
dec
sub
xchg
lods
push
clc
ljmp
xchg
jp
sub
lods
or
sub
cs
shlb
in
push
jl
hlt
ss
ds
and
sbb
test
sub
mov
shlb
dec
and
lea
imul
je
iret
jb
es
cli
sbb
stos
sbb
popa
jmp
and
leave
adc
xchg
mov
mov
dec
mov
out
adc
xlat
mov
sti
cmpsb
xor
inc
dec
test
push
loop
mov
or
int
mov
pop
xor
or
push
jg
xchg
pusha
and
aas
push
imul
or
inc
jecxz
mov
jae
xchg
mov
aam
mov
shll
aas
outsb
lret
jp
out
inc
mulb
inc
outsl
cmp
cmc
pop
or
mov
xchg
loopne
insl
and
cmp
sub
jne
hlt
lahf
rol
loopne
cmc
inc
out
je
push
in
mov
insb
jb
jp
call
pop
push
and
jae
jg
push
shrl
inc
test
lock
notl
dec
sub
and
or
ja
xor
lahf
sbb
bound
mov
cmc
test
hlt
sbb
and
or
js
cmpb
loope
cli
call
in
push
test
clc
call
lds
push
mov
aaa
xor
jge
test
paddsw
and
cwtl
int3
lea
sub
jge
sbbl
add
dec
out
dec
test
mov
push
mov
sub
movsb
repz
mov
mov
lahf
pop
and
dec
adc
mov
cmp
fdivrl
jb
negb
add
inc
loop
inc
pop
sub
mov
outsl
pop
mov
pop
sarl
jmp
std
mov
xor
mov
sti
icebp
dec
std
aaa
inc
mov
jo
mov
mov
aam
negl
add
push
addr16
outsb
inc
repz
jno
int3
pop
dec
call
cltd
lods
aas
xorb
xchg
mov
push
les
mov
in
data16
test
out
lahf
lret
pop
testl
bound
out
cmpsl
iret
pop
jbe
add
or
sbb
nop
cli
test
in
mov
adc
jns
jb
push
nop
pop
popl
mov
adc
icebp
or
js
pop
xor
push
dec
setne
sub
xchg
lods
bound
sub
js
add
rol
pop
daa
daa
or
stc
mov
mov
inc
bound
push
xor
push
subl
iret
push
xchg
xor
cmc
repz
repnz
fcmovb
add
imul
pop
loop
sbb
cld
stos
into
mov
adc
dec
stc
and
mov
xor
push
fdivrs
cmp
mov
or
testl
jae
mov
shr
cmp
or
jle
addr16
sbb
inc
xchg
fwait
pushf
xor
imull
cmpsl
or
nop
lret
and
or
jne
pop
mov
mov
jno
movsb
loop
dec
ljmp
or
cmp
and
pop
ret
setns
mov
jmp
mov
adc
push
nop
add
dec
pop
and
aas
jl
ret
dec
shlb
or
in
push
mov
outsl
push
adc
js
pop
fwait
or
xchg
sbb
dec
fwait
pop
scas
ljmp
addr16
push
shrb
xor
push
jbe
and
mulb
pop
pop
js
mov
cs
lret
cld
push
icebp
sub
and
movsl
cmp
xchg
ja
lds
pop
and
adc
add
push
aad
lret
cmp
lock
cld
flds
xchg
xor
rorl
push
xor
out
mov
xor
mov
adc
mov
int
xor
je
aam
jae
cmp
daa
insb
sarl
in
in
bound
adc
int
js
stc
out
aas
inc
das
xchg
in
xchg
mov
xor
xor
cmp
pop
xor
push
pop
dec
jle
out
pusha
mov
sbb
or
xor
aas
mov
mov
cmpsb
inc
hlt
imul
and
aaa
pop
imul
push
ja
pop
leave
xchg
aad
mov
into
jne
jns
xchg
orl
gs
cmp
push
dec
pop
pop
call
repnz
xchg
mov
mov
cmp
lds
pop
cmp
push
scas
pushf
pop
adc
xor
push
lcall
dec
push
sbb
mov
ficompl
mov
jmp
pop
inc
test
dec
xor
jae
out
pop
data16
cmp
fisubs
cmp
mov
pushf
jecxz
call
xor
rcr
ds
and
push
ja
cmp
movsb
popf
pusha
cmpsl
fs
pop
sbb
add
and
xor
in
jo
fimuls
push
jb
into
shlb
icebp
inc
aas
sarb
sub
adc
pop
ret
mov
lock
hlt
lahf
loop
adc
xchg
mov
jmp
stc
xor
dec
sbb
mov
idivl
jno
hlt
and
xorl
push
ja
movsl
inc
inc
inc
push
mov
pop
push
adc
loop
mov
inc
xor
bound
mov
sahf
mov
xor
fadd
push
movsl
incl
scas
fcmovu
xchg
aas
loope
sub
imul
jecxz
push
movb
dec
out
loopne
sbb
imul
xchg
mov
xchg
call
insl
aad
ja
cmp
dec
inc
sbb
stc
adc
stc
clc
fs
add
pop
lock
aas
fisubl
or
jecxz
fstpt
stos
sarb
cmp
sub
aam
call
xor
add
out
add
ret
mov
clc
mov
push
sbb
sub
mov
pop
lret
adc
jmp
pushf
dec
iret
call
outsb
push
movsl
repnz
int
mov
xchg
out
mov
scas
dec
rolb
xor
js
imul
movsb
cmp
cmp
fwait
sar
faddp
mov
cli
cmp
lea
idivb
ret
add
out
mov
cs
lahf
cmc
bound
pop
mov
jle
cmpl
dec
lods
sub
mov
filds
addr16
lret
sar
imul
into
es
jmp
inc
mov
sti
mov
dec
ds
sub
outsb
mov
cmp
mull
xchg
rcrb
stos
mov
mulb
and
dec
push
sbb
xchg
gs
jg
loope
fidivrl
mul
mov
enter
dec
adc
adc
adc
icebp
xchg
das
sbb
adc
addr16
xchg
adc
test
movsb
repnz
pop
in
dec
dec
mov
orl
xor
out
xor
jl
xchg
sub
jle
cmp
test
push
pop
inc
cmp
mov
popa
sub
icebp
jecxz
push
xchg
out
mov
ficompl
out
testl
sbb
cmp
cmp
push
mov
xor
divb
or
mov
pop
sbb
imul
sub
mov
scas
push
push
stc
pop
and
mov
lea
pop
scas
ret
imul
sub
and
daa
sub
add
cmpsl
mov
push
orl
imul
cld
out
pop
sbb
xchg
add
daa
popl
stc
shlb
in
repz
xchg
inc
sbb
push
mov
add
push
int3
inc
push
sbb
dec
inc
shlb
jp
movsb
mov
mov
jne
mov
notb
fnstenv
jge
pop
sbb
imul
adc
or
pop
pop
call
in
mov
imul
out
pop
movsl
pop
cli
out
test
adc
aad
shlb
cmp
jno
xchg
faddp
pop
push
xor
icebp
mov
dec
in
adc
pusha
inc
mov
insl
enter
faddp
in
mov
insl
add
jo
in
xchg
and
or
dec
fnstcw
dec
push
or
mov
mov
aam
in
pop
mov
stc
dec
push
in
cltd
or
lcall
aas
stc
adcb
mov
xlat
pushf
subb
outsb
xorl
jns
adc
mov
inc
mov
cmp
pop
test
mov
push
mov
xor
dec
jb
or
or
aad
jbe
mov
add
pushf
jo
pop
pushf
hlt
popf
add
xchg
rolb
lods
andl
stos
fcomps
orl
jbe
and
jbe
adcb
push
jmp
mov
shll
mov
cwtl
mov
inc
ret
jne
notl
pop
jns
mul
cltd
inc
scas
adc
outsl
mov
add
adc
shlb
xchg
movsl
pop
or
dec
push
xchg
lea
fsubrs
mov
xor
scas
bound
and
jns
les
push
scas
mov
mov
mov
mov
ljmp
jae
pop
mov
push
adc
inc
test
xchg
push
mov
in
mov
sbb
clc
lods
mov
icebp
inc
jmp
clc
pop
adc
sbb
push
cli
jo
xor
inc
cmp
jecxz
dec
inc
pop
insb
and
or
cmp
dec
rorb
adc
mov
not
test
push
loope
iret
fiaddl
test
aad
sbb
scas
loop
aaa
mov
dec
sbbb
fistl
mov
mov
dec
cmp
icebp
lret
aas
shrl
mov
mov
xchg
aam
stc
mov
enter
cmp
jge
pop
mov
test
and
sub
sub
xor
fstpl
mov
add
mov
stos
out
flds
mov
je
dec
sahf
int
push
je
mov
icebp
insl
add
stos
pop
pop
aad
sub
jge
adcl
sbbb
out
outsb
fidivrs
daa
notl
js
pusha
sti
adc
jmp
xor
cmpsb
sub
addr16
pushf
inc
mov
jae
add
cmp
ret
inc
bound
jle
adc
ret
adc
push
jge
dec
aas
pop
pusha
mov
leave
repnz
rcrl
sbb
or
mov
bound
mov
inc
cmp
cmp
mov
mov
orl
lea
lods
je
js
ljmp
pusha
sbb
and
or
imul
and
clc
out
lods
les
push
outsl
sbb
xor
icebp
jbe
add
inc
aas
int
loopne
inc
xchg
pcmpeqd
out
in
or
in
jp
xchg
sub
movb
adc
dec
or
int
repz
jge
mov
ds
in
lods
mov
test
jmp
mov
les
xchg
lahf
mov
xor
rol
dec
dec
jno
aaa
push
or
std
pop
fidivs
aad
mov
movsb
mov
adc
in
and
dec
into
lods
bound
sub
xchg
outsb
mov
aam
xor
movzwl
fsubrp
pop
loope
std
dec
cmpsb
lahf
xorl
nop
jne
mov
inc
outsl
jmp
mull
push
push
sbb
aam
jnp
out
sub
addr16
std
and
mov
fs
adc
inc
pop
jmp
sub
fstps
push
dec
jo
sub
fcomi
push
rcll
pushf
out
or
fwait
dec
adc
mov
jle
bound
in
pushf
mov
mov
sbb
mov
jbe
outsl
pop
nop
push
mov
sti
mov
test
and
int3
adcl
inc
and
decl
aas
push
movsb
push
in
adcl
pop
nop
adc
js
repnz
sub
pusha
pusha
mov
cmp
jle
int
dec
iret
mov
add
dec
inc
mov
or
nop
mov
add
int3
push
cli
fisubrl
pop
pop
mov
mov
mov
sbb
push
pop
jbe
or
sahf
test
and
jmp
rolb
jbe
fidivrl
loop
filds
jno
cld
pop
lcall
dec
xchg
dec
add
jg
sti
popa
repnz
mov
movb
and
mov
movsl
jb
sbb
mov
leave
inc
xchg
and
into
mov
in
pop
mov
call
sub
inc
rcrb
scas
add
mov
popa
jge
sbb
and
push
jg
out
repnz
mov
sub
adc
inc
push
xchg
dec
sti
mov
mov
mov
in
mov
test
int3
and
jge
pop
daa
jnp
push
leave
mov
sub
cmc
outsl
lahf
dec
rolb
xchg
xor
cmp
inc
outsb
imul
lret
insb
inc
enter
test
sahf
and
add
fstpt
scas
cmpsb
and
shl
fs
jl
push
sub
and
nop
xchg
stos
test
cmc
and
sbb
or
cld
hlt
data16
fnstsw
sbb
mov
dec
loope
mov
fimull
fdivl
idivb
jmp
adc
inc
enter
fwait
movsl
xor
inc
stos
xchg
xor
xor
jo
div
push
jge
mov
cli
mov
mov
and
mov
ret
fdivrp
or
mov
iret
test
push
js
sbbl
repz
rclb
fsts
outsl
push
xor
imul
mov
pop
xchg
xchg
out
mov
push
dec
andb
cmp
incl
ror
pop
les
adcl
jo
enter
lcall
mov
push
jns
inc
loop
or
jne
mov
add
or
dec
or
mov
push
cli
push
lret
imul
dec
jns
push
xor
lahf
xor
add
xor
inc
out
push
ss
vpsadbw
add
pop
int
adc
mov
xor
jns
insl
sub
mov
std
loope
add
or
lcall
sbb
repnz
jmp
pop
xchg
mov
insl
dec
fscale
shrb
add
sbb
ja
imul
push
repz
out
jmp
jne
add
xchg
int3
mov
jg
std
je
dec
add
dec
nop
fldl
adc
or
pushf
add
jnp
xlat
dec
sbbl
mov
sub
cmp
imul
mov
lret
decb
outsl
jecxz
insb
mov
pop
or
and
loop
cmp
and
push
leave
xor
mov
pop
lahf
sahf
jo
cmp
std
movsl
push
out
out
xchg
push
aam
iret
mov
leave
jnp
ret
jb
fstl
in
add
fists
pop
xchg
popa
cmp
pop
push
or
addr16
out
inc
jp
dec
lock
enter
fsubrs
xchg
jno
sub
repz
iret
mov
xchg
out
popf
daa
fsts
dec
pop
push
and
aad
fmull
mov
out
push
cmp
mov
pop
dec
push
jl
fs
movzwl
push
ja
stos
dec
mov
js
add
add
mov
fcmovnbe
cli
push
ret
jno
pop
test
outsl
or
mov
insb
xchg
sub
and
movsl
xchg
add
loop
add
adc
xlat
add
fstpl
aaa
enter
adcl
add
xchg
std
inc
lods
rclb
inc
adc
add
iretw
test
mov
pop
push
push
pushf
adc
fisubs
data16
call
push
ss
int3
jmp
int
sahf
sbb
int3
push
add
jecxz
das
aam
sarl
add
pop
xor
add
xchg
test
stc
das
lahf
mov
add
idivb
lahf
mov
lret
pop
scas
sub
testl
mov
fldcw
in
mov
xchg
mov
mov
and
jmp
or
outsb
dec
loope
xchg
mov
and
leave
sbb
imul
pop
int
stc
push
lods
rolb
roll
pop
mov
mov
xlat
xlat
xchg
lahf
mov
pushf
dec
nop
jge
pop
loop
std
adc
orl
sti
sub
jp
rcrl
int
xchg
aam
mov
cmp
pusha
or
lret
stos
jns
jg
and
jae
jl
fistpl
andb
popa
mov
movsb
idiv
rcl
shrl
xchg
add
jmp
cmp
cs
int
mov
push
push
mov
jg
idivl
push
dec
lods
out
jns
adc
mov
sub
movl
cs
or
sub
lahf
in
dec
shrb
adc
sbb
loopne
mov
das
sbbb
jo
iret
xorl
mov
popf
cwtl
es
xor
jmp
lods
sub
pop
data16
popa
or
xchg
adc
aaa
jne
ret
pusha
into
inc
pop
fwait
icebp
jbe
pop
divb
outsl
sub
mov
sub
jle
icebp
xchg
fdivl
ja
fwait
data16
ret
lods
fwait
sti
adc
sub
mov
push
xchg
mov
xor
jle
push
lods
push
cli
mov
and
mov
out
loop
mov
dec
popa
ret
dec
test
aaa
pop
add
ficompl
cs
mov
or
lea
pop
repnz
out
inc
mov
push
int3
lret
hlt
ds
jns
pop
xchg
ficoml
test
add
lds
ror
cld
xor
lods
push
test
and
inc
adc
loop
jo
adc
insl
push
pop
iret
inc
mov
cmp
push
sbb
mov
fisttps
dec
inc
movsb
sbb
lcall
jle
aad
pop
imul
cltd
sbb
outsb
hlt
sbb
mov
and
adc
nop
dec
arpl
add
cli
inc
ficoms
out
or
test
xchg
out
push
push
mov
stos
ret
popf
in
xchg
fs
sub
cmpsl
stc
adc
nop
loope
inc
shlb
sub
sti
pusha
xor
dec
push
loop
cmp
jecxz
sahf
sub
pop
shr
mov
push
pop
xchg
add
pusha
xor
mov
gs
fisubl
push
adc
jns
sbb
outsb
jo
or
jl
cwtl
insb
push
cmp
xchg
les
pop
inc
adc
loopne
adc
cmpsl
jecxz
test
pop
push
adc
pop
aaa
adc
divl
lret
xchg
pop
jbe
popa
testb
popf
leave
movsl
movsl
test
ds
and
jecxz
add
aad
sub
mov
xor
lea
sub
adc
or
es
cmp
int3
test
jae
jmp
inc
cld
mov
test
sub
ljmp
or
rcr
mov
mov
aaa
rol
clc
aam
pusha
fistpll
jns
dec
ret
mov
sub
sbb
aam
or
dec
mov
in
jne
cs
pushf
inc
into
repnz
int3
decl
sahf
mov
pop
sbb
adc
repz
dec
sub
out
mov
push
add
jae
sub
dec
xor
mov
or
add
dec
leave
lcall
pop
js
jmp
xchg
das
test
outsb
sub
xor
leave
xchg
shrl
iret
jbe
xchg
shll
and
adc
cltd
test
into
mov
neg
icebp
repz
ret
pop
push
adc
cmp
mov
jne
mov
sbb
pop
sbb
and
loopne
insl
enter
test
mov
mov
sub
and
xorl
cmp
mov
push
mov
add
or
jb
insb
dec
in
test
fcoml
mov
pop
xorb
push
ja
shrb
lds
or
mov
mov
xor
or
mov
mov
dec
imull
xchg
and
fstpt
lcall
jp
sahf
cmpsb
mov
xlat
jl
mov
mov
xchg
mov
popf
stos
loopne
lods
xor
sti
loopne
fnstsw
xchg
xor
mov
or
jno
int
and
cmp
cmpb
xor
dec
testl
xchg
into
lods
push
adcl
jb
push
ficompl
add
jo
test
push
sbb
data16
push
fwait
negl
lcall
mov
mov
mov
lods
inc
test
daa
arpl
dec
cmp
test
insl
pop
pop
sub
nop
mov
inc
ljmp
call
xchg
pop
xorl
adc
in
jo
lods
mov
or
lea
pop
push
pop
sahf
jp
mov
cs
mov
mov
scas
nop
leave
pop
jecxz
and
mov
mov
out
jo
mov
jno
cmc
pop
stos
sbb
inc
rcll
fstpt
lock
jbe
sub
mov
enter
mov
rolb
mov
pop
fstpt
pop
popa
jle
fnstcw
loope
jle
aaa
fldt
rcrl
sbb
shl
in
mov
out
jae
sarb
push
sub
cmp
adc
cmp
jne
mov
adc
ret
push
mov
movsl
mov
sahf
and
mov
mul
lcall
mov
adc
pop
mov
clc
adc
cmp
pushf
adc
jo
popf
add
mov
cmp
out
adc
xchg
add
pop
pop
dec
or
loopne
mov
dec
mov
add
add
fwait
push
lahf
jne
push
mov
cmp
mov
mov
mov
jl
push
cld
mov
jmp
leave
cmp
mov
fnclex
leave
xchg
jg
pop
fmuls
in
push
les
in
jne
cwtl
cmpsl
pushf
push
das
addr16
ss
pop
movsb
cmp
pushf
xchg
jb
cmp
call
pushf
incl
out
adc
push
xor
das
adc
inc
add
pop
mov
dec
mov
xor
xor
mov
popf
mov
aam
dec
das
mov
pop
dec
shlb
pushf
push
pop
loop
ds
mov
jbe
xchg
xchg
rcrb
repz
outsb
sbb
hlt
test
insb
mov
xchg
into
inc
into
insb
insb
pop
addr16
ja
or
outsb
in
lods
aam
iret
test
imul
iretw
popf
es
fsubrs
mov
sbb
out
cmp
insl
stc
arpl
push
sbb
add
lock
in
pop
mov
in
push
jne
mov
lock
sbb
insb
test
lcall
mov
xor
jge
sub
mov
fisubrs
mov
lock
xchg
push
dec
shl
aas
adc
sub
imul
repz
pop
pop
pop
repz
xchg
mov
push
cmp
pop
dec
aas
mov
mov
mov
cs
jnp
lcall
call
mov
sbb
adc
push
adc
stos
in
scas
or
and
dec
pop
inc
pop
mov
pop
dec
and
ss
jbe
jmp
cmpsl
sub
cmpsl
inc
jecxz
push
jnp
adc
leave
jmp
outsb
cmp
inc
inc
xor
scas
inc
inc
add
add
int3
cmp
xchg
dec
stos
loop
insl
jnp
testl
stos
cmp
test
lahf
scas
loop
clc
leave
icebp
in
or
pop
les
or
and
sub
or
mov
in
mov
icebp
mov
xor
test
and
idivl
dec
mov
mov
sub
mov
dec
outsb
lret
or
and
and
pushf
cltd
mov
or
stos
sti
adc
sbb
sub
and
stos
inc
shrb
mov
in
xor
cmpsb
or
mov
adc
repnz
cmp
outsl
push
icebp
cli
fimuls
dec
jb
out
push
lods
push
and
int
fcompl
mov
ror
mov
jae
push
scas
mov
push
hlt
sbb
insl
outsb
mov
ret
jne
xchg
leave
sub
fldl
addl
cmp
cmp
bnd
pushf
cmp
movsb
sub
test
adc
dec
mov
ret
in
mov
jns
dec
jo
lea
mov
pop
loop
jmp
mov
mov
mov
js
insl
jb
scas
ror
sbb
inc
adc
sbb
sbb
cmp
mov
lods
adc
mov
dec
jb
xor
mov
cltd
pop
call
sahf
sbb
pop
andl
sbb
inc
mov
lock
cwtl
popa
aaa
pushf
sbb
and
sub
xor
pop
sbb
cmp
ret
lret
nop
sti
cltd
mov
inc
cmpsl
sbb
jg
out
xchg
fistpl
fistpll
sub
and
fldl
pop
mov
cmp
inc
addr16
jle
cmp
mov
cli
mov
push
loope
test
je
movsb
and
xor
mov
jecxz
xchg
mov
jg
dec
mov
jp
std
dec
sbb
xor
pop
cmpsl
sbb
push
enter
fmuls
arpl
mov
pop
or
xor
sub
scas
lret
or
dec
pop
mov
sti
mov
popa
std
xor
in
rcll
lds
pop
xchg
sbb
or
outsb
mov
xor
dec
pop
jp
xchg
add
push
add
loope
in
inc
ret
xor
in
fwait
mov
jne
clc
icebp
int3
xchg
xlat
inc
dec
pop
out
xlat
inc
daa
adc
movsl
jmp
pop
mov
jo,pt
cmp
mov
add
popf
data16
inc
hlt
out
push
sbbb
push
repz
sub
insb
cmp
lcall
mov
fistps
inc
inc
sub
cmp
mov
sbb
push
test
in
lock
sub
inc
cmpb
inc
or
mov
jle
test
outsl
cmp
sbb
std
insl
xchg
and
mov
ljmp
mov
out
jecxz
dec
cmpsl
cwtl
mov
or
adc
movsl
inc
movsb
sbb
cmc
and
sub
pop
cld
cli
jb
mov
cmpsl
inc
inc
clc
aam
pop
loopne
sub
orb
into
std
xlat
pop
loopne
adc
xchg
lods
or
mov
sub
mov
out
and
pop
mov
mov
jno
jae
mov
or
jnp
lds
and
loop
nop
push
repnz
or
ja
int
mov
sbb
out
mov
or
lods
clc
mov
outsl
idiv
xchg
hlt
push
inc
mov
jae
jo
je
sbb
loope
xor
adc
inc
pop
aam
dec
sbb
ret
and
in
dec
subl
enter
dec
mov
insl
mov
int
ficompl
jp
and
cs
addr16
cmc
cwtl
and
xchg
test
inc
jle
test
bound
out
inc
hlt
rol
lods
out
daa
cmp
add
repnz
sub
loope
cmp
loopne
hlt
cmp
mov
inc
insb
scas
loop
jp
mov
or
outsb
dec
iret
cli
jne
mov
xchg
lret
jae
pusha
repz
rclb
aam
mov
mov
lods
stos
ret
xchg
add
or
inc
pushf
mov
dec
jbe
adc
inc
test
dec
xor
jle
jp
add
dec
cmp
lods
mov
add
pop
insb
fldcw
push
test
lds
test
push
jp
sbb
orb
inc
mov
fwait
push
lods
add
adcl
sahf
ljmp
jl
in
mov
mov
aaa
hlt
add
adc
scas
jp
and
fistps
sbb
push
push
es
or
int3
pusha
xor
negl
add
shrl
or
mov
mov
pop
inc
cmpl
cwtl
out
imul
add
sub
cs
or
mov
mov
flds
mov
test
xchg
lock
lret
movsl
fimuls
cmp
mov
sahf
cmpsl
loopne
pop
pop
shr
int
sub
aas
fldenv
ja
add
bound
jo
mov
push
pop
pop
and
cmp
adc
movsb
aam
push
std
add
mov
daa
mov
repz
call
jbe
repnz
dec
or
sahf
mov
les
dec
and
xchg
in
jge
cmp
icebp
icebp
out
int3
push
pop
ljmp
mov
xor
imul
ljmp
cltd
sti
jge
repz
in
mov
repz
sbb
pop
xchg
les
mov
sub
and
rcr
mov
lcall
cmc
imul
inc
mov
mov
jbe
dec
xchg
dec
rcll
push
mov
sub
or
pop
mov
je
mov
mov
jnp
sub
push
js
loopne
mov
jl
add
jns
out
inc
stos
fwait
pop
aad
inc
mov
jnp
push
in
testb
lret
add
ret
and
inc
pop
out
pop
and
popf
jno
mov
xchg
sub
data16
lds
leave
adc
jle
dec
insl
push
dec
test
add
out
or
rcr
jb
adc
xor
repz
shlb
leave
negl
sbb
pmuludq
lret
lods
cmp
sbb
in
jns
dec
out
and
dec
mov
dec
mov
mov
mov
ss
sub
sti
sub
or
push
mov
jmp
pop
daa
xor
icebp
pop
mov
push
xor
mov
add
push
mov
rcr
loopne
jbe
fldt
jmp
xchg
and
mov
div
mov
out
jp
mov
test
test
test
dec
jecxz
icebp
dec
shll
and
pop
sbb
arpl
test
nop
pop
ret
pop
mov
addr16
imull
pop
and
xchg
push
call
mov
pop
adc
les
mov
jbe
mov
pop
adcl
movsl
psubusw
push
add
insb
std
pop
add
xor
in
mov
xor
iret
sbb
mov
push
xchg
sub
ds
ret
lods
sub
dec
aaa
dec
xor
les
inc
jge
pop
pop
sub
int
ret
arpl
mov
mov
add
adc
xchg
dec
outsl
mov
lds
jae
xor
andb
jge
shr
fmull
xchg
pop
xchg
or
ljmp
jl
ja
cmp
and
js
or
add
mov
popa
sbb
add
sub
mov
dec
add
adc
ret
inc
push
jae
cmp
lret
inc
jo
pop
add
push
sbb
imul
mov
jns
push
mov
gs
cmp
popa
icebp
stos
xorl
sub
xor
test
cmp
xor
dec
pop
push
inc
lcall
icebp
aaa
jo
pushf
scas
and
lds
shrb
xor
test
xchg
pop
push
adc
add
and
mov
lods
and
ror
add
mov
js
xor
mov
add
cmp
adc
dec
pop
jge
cmp
lahf
dec
cltd
mov
and
ds
idivl
ret
ds
dec
fwait
sub
xchg
and
mov
fnsave
andl
movsl
mov
fsubrs
xor
push
mov
pop
sub
lret
bnd
lahf
sub
jae
or
es
mov
into
je
movsl
cmpsb
std
inc
andl
xchg
aad
xchg
jl
mov
jl
push
jg
jnp
test
icebp
fistpl
mov
ret
xor
mov
in
stc
movsb
and
push
adc
xchg
pop
out
inc
les
movsl
icebp
jle
xchg
jo
push
pop
inc
les
mov
lret
mov
pop
fcompl
mov
push
inc
inc
mov
cmc
or
dec
cmp
xchg
enter
and
sbb
push
jge
outsb
mov
push
pop
mov
mov
xor
jo
xchg
data16
movsl
das
mov
out
es
or
mov
inc
sti
fucomi
pop
cs
cmp
call
in
add
mov
xchg
dec
movl
icebp
pop
pop
dec
inc
dec
loope
xchg
push
decl
cmp
cli
pop
mov
add
repz
jns
jg
rclb
inc
pusha
or
jne
dec
ffree
or
pop
jg
sbb
xlat
mov
aas
ret
ss
in
jecxz
fsubl
xorb
mov
mov
fs
cmp
out
incl
mov
add
je
add
mov
subl
add
mov
mov
dec
pop
sti
push
pop
shlb
xchg
xchg
adc
push
aad
push
mov
mov
insb
push
dec
cmpsl
xor
adc
add
push
xor
mov
test
mov
lret
cmp
sbb
jae
insb
pop
iret
sub
lea
movsl
adc
mov
loop
mov
inc
ss
inc
jge
mov
mov
addr16
fistps
popf
lret
mov
xor
sbb
pop
mov
hlt
mov
fisubs
mov
xor
out
insb
scas
shlb
inc
std
and
mov
adc
cld
andb
mov
mov
and
gs
mov
fildl
jne
xchg
jb
icebp
scas
arpl
mov
mov
dec
push
mov
imull
lea
xor
mov
adc
lea
cmpsl
ror
cwtl
mov
mov
add
sub
xchg
stos
out
inc
out
into
push
mov
push
or
nop
pusha
scas
scas
mov
std
adc
pop
hlt
add
pusha
sub
mov
add
xchg
pop
mov
scas
imul
shlb
jbe,pn
adc
xor
add
std
xchg
mov
sahf
lcall
dec
cmpb
das
pop
jnp
or
pop
xor
enter
leave
push
mov
add
lahf
daa
sbb
fistps
out
pop
stc
fwait
cltd
mov
add
jae
inc
mov
pop
push
push
mov
aas
pop
icebp
lret
sub
jno
cmp
cld
xchg
jmp
cwtl
daa
fcompl
jns
int3
pop
pusha
mov
iret
push
push
cli
jb
mov
aas
lea
imul
xlat
dec
icebp
mov
repnz
push
ret
dec
sbb
sbb
pushf
pop
mov
mov
test
xchg
imul
insb
push
ret
push
mov
shr
pop
or
add
mov
nop
lcall
mov
pushf
mov
mov
add
xor
roll
movsb
xor
add
push
bound
notl
outsl
push
insl
ds
push
divb
lcall
outsl
jbe
xor
jo
xor
sbbl
rclb
fsubrs
and
push
and
std
xchg
mov
jne
rcll
sbb
pop
push
inc
stc
idivl
cltd
aam
cli
stos
imul
add
and
fsts
subl
sub
ds
jnp
mov
cmpsl
mov
orl
fs
push
nop
ds
jnp
cmp
inc
lsl
stc
test
adc
shlb
and
sub
mov
sbb
jns
fldl
mov
pop
mov
int3
inc
add
cs
sub
test
inc
cmp
lret
mov
rclb
ret
pop
push
sub
out
jmp
sar
mov
inc
or
xor
pop
mov
push
adc
xchg
pop
xor
sub
daa
push
fnstenv
jp
sub
out
in
or
sbb
fildll
mov
mov
mov
call
mov
dec
cmp
push
cmpsb
pop
jecxz
cli
sysenter
inc
std
rorb
out
sub
xchg
sbb
repz
jge
jmp
icebp
mov
sti
inc
test
mov
add
ljmp
mov
mov
hlt
mov
into
xchg
mov
xor
or
scas
pusha
daa
ljmp
imul
jl
int3
call
push
jns
add
mov
sbb
push
inc
xor
pop
mov
popa
inc
inc
jmp
pop
mov
sub
loopne
push
pop
insl
cmp
jo
pop
inc
fimuls
hlt
adc
sbb
cltd
dec
jl
jbe
test
inc
loop
imul
adc
dec
adc
mov
push
cmp
dec
mov
jo
pop
and
cmp
jecxz
inc
scas
gs
les
and
adc
lret
pusha
out
dec
shll
lds
mov
lret
inc
push
or
lcallw
push
or
push
testl
pop
inc
jo
cmp
jp
fs
cmp
das
mov
push
outsl
sbb
inc
xchg
shlb
sbb
sbb
sbb
les
addr16
frstor
movl
stc
nop
movups
addr16
bound
in
lret
push
in
movsl
push
hlt
jmp
cwtl
jg
lods
inc
mov
negl
in
out
cltd
xor
je
push
xchg
and
fdivrl
and
ror
jb
cmc
mov
inc
pop
jb
mov
xorb
out
xor
idiv
test
pop
jno
jle
add
cli
sub
pop
inc
adc
cmp
mov
scas
ret
mov
call
clc
or
aaa
shlb
and
jecxz
popa
xchg
push
push
pop
bound
clc
stc
pop
je
xchg
lcall
jbe
add
and
sub
enter
pop
pop
mov
push
into
xchg
sti
adc
cmpb
jo
clc
inc
mov
inc
pop
mov
sbb
inc
out
cmp
gs
adc
iret
add
mov
mov
jmp
mov
cmp
ficompl
mov
dec
js
adc
iret
push
push
pusha
inc
dec
adc
and
and
pop
xchg
pop
mov
data16
repz
nop
dec
push
lods
testl
cmpsl
mov
xchg
and
rcrb
iret
lods
out
and
cmp
scas
jge
jne
decb
inc
or
es
and
test
idivb
add
inc
fs
or
in
add
sub
xchg
cmp
inc
ret
xor
and
jmp
gs
popa
popa
aam
dec
int3
decl
pop
imul
cwtl
or
mov
jecxz
sub
push
outsb
mov
inc
ret
rcrb
cmp
fistpl
and
push
push
xor
popf
or
out
mov
cli
add
xor
or
xchg
lock
and
out
movsb
lret
sub
mov
push
push
not
pop
inc
push
push
sbb
or
xchg
loope
mov
mov
jl
xor
sbb
dec
ss
mov
mov
dec
test
adc
cmp
mov
pop
or
loop
test
movsb
sbb
inc
std
repnz
inc
mov
cli
test
rolb
dec
xor
sub
mov
or
mov
sbb
imul
or
push
push
test
cmp
or
and
mov
mov
push
ficoms
js
push
mov
mov
xor
sub
pop
in
addl
inc
cli
sbb
leave
sub
repz
in
shll
and
dec
xor
pop
test
jns
inc
shrb
or
in
das
cmpsb
bound
aad
popf
cmp
clc
sarl
out
pcmpeqb
inc
enter
dec
arpl
fnstsw
sarb
shll
pop
dec
sbb
cmpsb
cmc
adc
sub
xchg
pushf
fistpl
push
rcr
loope
cmpl
mov
scas
mov
bound
and
test
sbb
dec
adc
nop
dec
mov
into
push
popa
push
sub
int
imul
icebp
xchg
adc
enter
fidivl
es
xchg
mov
clc
js
pusha
sbb
fldcw
inc
xor
test
fs
inc
inc
sub
rcrb
int3
insl
xor
mov
icebp
addr16
js
insl
mov
nop
cs
fwait
push
shlb
stos
xchg
lods
add
jae
mov
cwtl
stos
jmp
push
bound
sbb
push
inc
nop
incb
test
push
add
inc
mov
pop
orl
mov
sbb
jno
sbb
outsb
pop
imul
mov
pop
cmp
das
cltd
add
outsb
jmp
test
int3
cld
nop
pop
inc
inc
jge
data16
sub
mov
das
rorl
ja
pop
lods
xchg
negl
sub
xor
in
mov
stos
aam
test
divl
shlb
jmp
mov
test
add
js
mov
es
lds
imul
cmp
in
shrb
lods
daa
ret
mov
dec
fsubrl
push
jmp
add
push
adc
sahf
dec
mov
jle
mov
in
cmp
in
daa
pop
pop
jns
dec
adc
pop
mov
lods
mov
mov
out
sbb
aaa
pusha
xchg
mov
inc
inc
push
js
lods
cmp
test
lea
sbb
sub
cmc
mov
sub
jbe
sbb
pushf
cmpsl
iret
lahf
pop
jmp
testb
xor
dec
pop
inc
cld
push
mov
and
mov
mov
fwait
and
das
xor
xor
out
xchg
ds
pop
sbb
mov
pop
and
jmp
and
xchg
pop
cmp
add
mov
adc
fimuls
and
cltd
cmp
imul
push
xor
push
repnz
ja
sub
stos
mov
or
jecxz
push
outsb
mov
subb
jecxz
sahf
xor
sbb
mov
sti
loop
mov
mov
int3
or
and
mov
mov
hlt
xchg
jae
adc
cmpl
jo
enter
pop
insb
out
sub
jl
sti
jp
daa
shl
add
or
filds
sub
imul
mov
push
popa
xor
fnstcw
pop
clc
shl
dec
pop
dec
push
mov
popf
and
jecxz
lret
sbb
vphaddbw
inc
into
jp
cmp
mov
into
movsb
pop
mulb
cmc
shrb
pop
adc
or
mov
jbe
xor
pop
push
mov
bound
in
aam
sbb
mov
mov
pop
test
icebp
mov
inc
sbb
sbb
into
bound
outsl
jno
fldcw
mov
adc
outsl
pushf
sbb
xchg
pop
adc
push
push
dec
lahf
imul
dec
int
shrl
pop
les
jne
add
jno
addl
and
inc
pushf
push
fstl
es
dec
inc
vpshld
mov
nop
inc
dec
ss
fmuls
adc
xchg
push
fnstenv
fwait
mov
subb
cltd
hlt
mov
inc
pop
mov
push
je
and
jo
jge
mov
inc
mov
and
popa
aad
cmp
mov
xor
cld
loope
hlt
pop
out
or
mov
int
xchg
xlat
sahf
dec
xchg
das
xlat
xchg
push
push
shlb
cld
stc
addb
jno
push
adc
mov
pop
out
clc
jg
push
and
and
nop
leave
xchg
push
push
cmp
or
and
ret
ficoms
int
test
mov
add
pop
pop
dec
jns
push
or
push
jmp
pop
cld
inc
pop
jb
or
push
cmpsb
gs
mov
mov
dec
jns
sbb
out
jecxz
icebp
push
cld
mov
mov
sbb
add
inc
xchg
jo
push
inc
xchg
xor
mov
and
divb
or
fwait
push
inc
test
adc
orb
xor
movb
out
outsl
pop
popf
inc
enter
imul
iret
int3
clc
add
xchg
enter
jo
dec
mov
push
xor
test
aam
mov
dec
aad
repz
das
push
pop
lods
les
jge
inc
mov
mov
xor
out
test
stos
iret
enter
ja
dec
pop
in
mov
inc
xchg
pop
fidivrl
jb
in
inc
stos
cmp
pushf
loope
xor
call
xchg
jbe
enter
ss
addr16
add
sbb
jg
lahf
pusha
ffree
pop
jne
out
ret
lods
clc
lods
xlat
in
sbb
xchg
movsb
push
mov
mov
lds
mov
mov
and
jge
fistpll
mov
cltd
xlat
das
popa
xlat
pop
fwait
clc
or
push
cmp
dec
cltd
fstenv
dec
je
cmpsb
jno
lret
sub
push
enter
inc
xchg
lcall
push
or
dec
insb
test
mov
mov
repz
call
nop
xchg
cmp
push
add
cmp
sub
push
inc
cld
dec
lahf
incb
imul
or
mov
or
sbb
jns
xor
arpl
pusha
mov
push
stc
lods
dec
xchg
lods
andl
lret
adc
into
pop
cmp
xchg
sbb
dec
imul
repz
insl
outsb
mov
push
out
push
push
aas
add
scas
xchg
fldt
scas
push
jne
cmp
jl
push
movsl
les
xor
sub
imul
stos
test
inc
or
adcb
divb
mov
in
inc
lods
pop
inc
fdivp
add
push
add
pop
push
outsl
inc
pop
pop
mov
out
data16
je
and
or
cmp
imul
inc
and
outsl
and
cmp
push
les
jb
xor
popf
verr
ljmp
pop
fdivr
bound
fstl
adcl
xchg
adc
xchg
mov
mov
push
in
cli
inc
rorl
xchg
cwtl
insl
sub
cwtl
mov
cmpsl
xchg
ror
out
lea
stos
mov
and
test
mov
mov
xor
out
and
fldenv
xchg
insl
popa
leave
cmc
push
push
test
jle
rorl
jmp
int
sub
dec
xor
int3
push
loop
stos
fcomps
into
out
and
cltd
pop
out
jae
ret
mov
mov
fisubrl
in
repnz
and
sub
jmp
cmp
outsl
sbb
mov
bound
mov
dec
or
mov
push
pop
cmpsl
popf
adc
xchg
iret
lods
fs
jle
or
lods
out
xchg
push
jp
icebp
sub
inc
dec
cmpsb
mov
push
sub
movsb
pop
push
mov
dec
outsb
pop
cmpsb
idivl
fildl
sbb
leave
sahf
sub
dec
fs
cmp
pop
or
add
test
enter
adc
and
sub
mov
mov
mov
jp
out
ljmp
mov
dec
ja
imul
push
cld
out
arpl
jp
lods
sbb
pop
adc
mov
mov
rolb
ret
cmc
out
push
xor
in
std
aas
inc
inc
or
push
xor
or
es
loop
push
xadd
mov
pop
jnp
or
pop
fs
scas
cmp
out
dec
ret
and
adc
xchg
xchg
das
jmp
mov
xor
addr16
popa
aam
iret
ja
mov
mov
movb
xor
xchg
xchg
roll
push
cmp
testb
lea
xor
jbe
gs
dec
cmpsb
iret
ffreep
sti
cmp
xchg
adcb
je
cmc
sbb
out
xor
push
and
lcall
inc
cltd
iret
ljmp
inc
stos
pusha
add
inc
leave
in
je
pop
adc
ljmp
mov
jmp
mov
out
aaa
enter
or
mov
xor
adc
dec
ret
stos
loope
cwtl
insl
fldl
fcom
mov
mov
out
adc
mov
jne
leave
mov
outsb
mov
test
dec
jg
test
das
scas
jg
cmp
sti
push
out
push
push
sub
jno
outsb
mov
and
pop
inc
rcrb
xor
mov
sub
xor
inc
js
loope
jge
and
cld
testb
popf
rorl
pop
scas
into
jb
xor
pop
adc
leave
cwtl
sti
adc
sbb
sbb
out
adc
mov
push
add
in
das
add
mov
mov
mov
inc
outsl
add
dec
jmp
cld
inc
ds
adc
stc
scas
in
inc
call
neg
push
out
xchg
inc
aam
cmp
andl
push
mov
adc
pop
insl
adc
and
loopne
hlt
stos
fisttps
inc
out
mov
mov
aas
add
sub
and
xchg
lcall
andl
faddl
push
sbb
das
dec
mov
or
les
mov
xchg
jb
ljmp
cwtl
or
jl
iret
out
aas
mov
jg
mov
mov
shll
addr16
sarl
xchg
call
pop
push
xor
add
dec
popl
addl
mov
inc
cli
idivb
jmp
stos
jl
sbb
outsl
jmp
mov
adc
sub
rorl
push
and
fiadds
dec
and
fmuls
cli
mov
out
in
lahf
xchg
push
aas
js
leave
jp
mov
enter
cmp
inc
xlat
push
test
cmp
mov
repnz
insb
xchg
mov
cs
pop
aas
push
sub
jge
mov
xor
add
rcll
cmp
shr
enter
push
jbe
movsl
cmp
insl
push
mov
mov
cmp
mov
lret
lcall
loopne
inc
push
push
xor
fildl
mov
sar
mov
pop
fwait
iret
lret
pop
pop
pop
rcrb
xchg
xchg
xchg
andl
or
cmc
rcrb
adc
pop
sbb
adc
lock
and
cmp
adc
in
cld
adc
lret
je
fsubs
add
inc
sahf
and
sbbl
sub
mov
sbb
cs
fildl
test
jmp
dec
popa
dec
and
lret
or
cmp
sub
leave
aaa
lahf
xor
jle
adc
cmp
and
iret
int
push
sbb
adc
jg
int3
mov
cmp
mov
or
cmc
movsl
add
jno
add
pusha
xor
cmp
mov
lea
push
xor
cli
inc
push
or
and
jmp
into
sbb
fwait
enter
insl
cmp
mov
mov
ret
push
mov
sub
inc
dec
xor
movb
sbb
lcall
arpl
stc
movsb
xor
jnp
sbb
stos
lret
inc
jmp
add
add
mov
inc
jnp
add
rcrb
pop
addr16
jp
outsb
push
mov
cltd
dec
and
dec
mov
cli
out
pusha
icebp
xchg
and
outsl
stos
xor
rol
in
or
or
pop
popf
leave
push
into
sbb
dec
daa
mov
xchg
mov
dec
rclb
dec
mov
sahf
lret
leave
push
cltd
mov
add
adc
decl
xchg
daa
xor
inc
sub
out
inc
cmp
xor
lock
call
arpl
ljmp
mov
add
xor
mov
cmc
clc
mov
mov
and
loope
lahf
sbbl
inc
add
flds
fdivl
jge
arpl
idivb
pop
mov
in
mov
mov
in
or
test
fidivrs
and
adc
adc
aaa
mov
stos
jae
arpl
dec
or
sahf
out
daa
test
mov
mov
or
or
mov
push
cli
cmp
push
mov
lock
mov
xchg
add
or
add
cs
push
xchg
ficoms
cmp
stc
into
xchg
jmp
mov
xor
push
sub
lret
das
mov
mov
push
jmp
xchg
or
setle
adc
out
jp
dec
add
in
pop
pusha
fimuls
stos
sbb
notl
xor
sub
add
pop
aaa
lds
jmp
ds
mov
push
inc
imul
aad
push
mov
sti
xchg
enter
pop
add
mov
push
aaa
es
bound
mov
nop
xchg
adc
out
pop
sub
data16
in
xchg
and
push
stos
dec
mov
mov
cwtl
adc
adc
pop
xchg
cld
jmp
mov
inc
push
xchg
pop
adc
mov
movzwl
add
stos
cmpsl
cmpsb
xor
mov
fisubl
leave
push
adc
test
lahf
pusha
dec
dec
aad
fiaddl
xchg
pop
fmul
inc
fucomp
inc
inc
jp
adc
xchg
push
les
pop
jle
iret
pop
movsl
sbb
cmp
cmp
sbb
add
lods
fisttpl
lahf
inc
mov
sahf
out
nop
fisubs
lds
pop
fadd
mov
jle,pn
divb
or
movsb
jl
mov
shll
pop
shlb
sbb
adcl
fsubrs
icebp
ja
into
lret
pushf
push
and
movsl
daa
or
fsubs
lret
movsl
ud2
mov
fcoms
in
add
push
xchg
xor
push
imul
jns
mov
dec
ss
lods
fistl
adc
and
mov
cld
xlat
mov
outsl
sbb
ljmp
ds
daa
jp
add
data16
dec
pop
dec
shl
sbb
insb
sub
bound
lock
jecxz
outsb
rorl
test
lret
imul
inc
into
fldenv
xbegin
xlat
andl
movsl
jbe
sahf
orb
mov
shrb
mov
xchg
sub
popf
sub
test
ss
jg
clc
in
inc
push
into
test
aas
repz
cmp
popf
xchg
ret
popa
shl
int3
pop
add
xorb
imul
gs
sub
adc
mov
sbbl
sbb
push
loopne
mov
cltd
xchg
pop
jne
cld
mov
ja
or
pop
inc
and
loope
imul
add
movsl
mov
xor
aad
lock
movsl
test
jmp
bound
inc
sbb
xchg
flds
dec
push
insb
test
cmc
and
mov
pop
inc
lods
or
mov
dec
adc
outsb
lret
sarb
mov
jae
test
pop
inc
sbb
subl
mov
fmull
insb
dec
pop
xchg
add
dec
or
mov
mov
cmp
fnstsw
movsb
mov
mov
or
pop
insl
and
test
adc
lock
pop
loope
fs
push
xor
fdivs
jb
out
inc
xchg
fistl
inc
mov
or
inc
lret
mov
sbb
sub
jne
loope
jns
push
dec
les
cmpsl
xor
movsl
mov
adc
jo
xchg
xchg
mov
inc
push
and
int3
daa
mov
pop
lret
mov
loope
test
inc
cmp
imul
or
std
fdivs
pop
cli
sarb
std
mov
movsl
mov
mov
jmp
test
rorl
cld
sub
pop
int3
jae
xchg
mov
mov
sbb
xchg
and
test
cltd
scas
mov
das
sahf
in
dec
or
push
aad
xor
mov
or
mov
dec
dec
cmp
test
inc
inc
sbb
loopne
rorl
inc
data16
or
leave
jne
push
stos
fcomps
lock
data16
jae
movsl
repnz
roll
adc
jno
and
cli
es
fs
mov
fbstp
push
test
inc
push
and
adc
jns
mov
mov
dec
idivb
ljmp
sub
lea
cmp
mov
adc
and
stos
call
add
dec
xchg
mov
pop
jl
push
lahf
ret
int
mov
inc
pop
mov
dec
jecxz
dec
test
data16
fwait
xor
xchg
xlat
or
mulb
cmpb
lret
int
daa
pop
inc
mov
push
fs
pop
popa
bound
out
sbb
insb
dec
lds
loopne
pusha
out
push
mov
fcoms
sub
mov
cmp
dec
fadds
sub
mov
sub
ljmp
daa
fnstsw
leave
push
xlat
sub
fisubs
mov
imul
mov
pop
jg
movsb
xor
cmp
jg
jno
fisttps
out
mov
jg
mov
lcall
dec
push
sub
dec
daa
xchg
andl
aam
push
xchg
xchg
iret
lea
cmp
mov
je
je
jns
shlb
sti
mov
fwait
stos
gs
ret
pop
nop
cmp
jno
inc
addl
xchg
ds
xorl
hlt
jo
mov
out
daa
mov
push
in
add
jecxz
mov
repz
sub
dec
lods
mov
iret
stos
fidivs
mov
jle
xor
mov
lret
fdiv
mov
jmp
xchg
inc
sub
push
xor
mov
in
xchg
aam
cwtl
data16
fs
xchg
mov
loopne
adc
loop
or
and
fwait
cmp
jno
cmpsb
jbe
les
push
push
jle
xchg
pop
adc
mov
pop
cmp
xor
stos
rorb
xchg
or
sub
cmpl
adc
jno
int3
hlt
pop
test
or
test
mov
jmp
inc
cmp
mov
icebp
iret
ret
fs
dec
add
jp
lahf
mov
rorl
aad
mov
add
mov
mov
or
xor
add
les
xorb
mov
arpl
pusha
rcll
dec
cs
mov
push
out
popa
pop
push
dec
dec
jns
sub
mov
addr16
fdivl
repnz
sub
push
fsubrl
adc
add
sbb
inc
in
cmp
test
jmp
mov
sbbl
or
add
test
mov
in
push
mov
fwait
cmpsl
or
leave
test
xor
aas
and
mov
mov
xor
loope
mov
cltd
jle
or
push
jle
jbe
out
jl
cmp
out
inc
movsl
cmp
cmpsb
jbe
test
idivb
test
in
or
lcall
fdiv
pushf
fcmovnbe
push
fldcw
add
jle
dec
xor
bound
bound
jmp
popf
je
or
mov
aas
add
cli
pop
adc
cmc
mov
loope
pop
stc
imul
push
add
dec
jg
or
inc
lea
push
into
imul
or
push
mov
adc
repz
push
shll
cs
mov
sbb
aad
aaa
or
sbb
cmpsl
and
dec
stc
dec
stos
out
in
mov
shll
test
mov
jae
mov
inc
mov
pop
aad
fs
lea
xchg
mov
addr16
adc
inc
and
and
push
std
mov
sub
in
push
xchg
push
push
adc
sahf
jbe
inc
adc
xlat
jle
fs
popf
outsb
or
inc
mov
pop
movsb
xchg
lods
cmpsl
sbb
mov
inc
inc
clc
sub
mov
aaa
imul
xchg
cmp
or
mov
push
sub
adc
push
sbb
jbe
dec
fsubl
loope
in
jmp
stc
loope
fidivs
jne
lods
and
add
xor
sbb
pop
test
mov
push
and
mov
cmp
js
jne
jns
jns
fldl
xchg
add
pop
add
outsl
pop
arpl
pop
fisttpl
or
shrl
mov
lods
xchg
pop
ss
xchg
and
add
gs
loop
inc
xlat
cld
pop
sarb
xor
aaa
jnp
cmp
jb
repnz
xor
xchg
mov
popf
push
divl
jnp
push
sbb
repz
push
repz
jl
sub
jmp
mov
mov
mov
mov
adc
jp
ljmp
out
aas
cld
insb
les
inc
es
mov
mov
push
jae
lahf
rclb
leave
cld
sbb
add
aaa
push
pop
and
or
ret
test
xor
popf
cli
sub
iret
jge
and
stc
jne
adc
dec
xor
outsb
stos
loope
pop
mov
adcl
xlat
push
add
sub
add
mov
out
push
dec
loope
xor
lahf
std
data16
jl
xor
insl
in
inc
sub
jmp
xchg
ficompl
subl
ja
xchg
sub
push
mov
mov
push
sub
and
into
loope
scas
movsb
bound
leave
enter
lahf
or
sbb
push
out
out
scas
dec
adc
in
shlb
aad
sub
adc
repnz
xlat
sbb
stc
int
lcall
lods
mov
out
das
stos
adc
or
jmp
in
test
cltd
pop
sub
outsb
outsb
jno
sbb
mov
mov
dec
xor
pop
jg
push
lret
fwait
insb
popf
xchg
mov
push
add
pop
icebp
mov
lods
dec
push
test
jb
data16
std
lock
adcb
mov
mov
push
inc
gs
jb
cld
add
int3
scas
cmpsl
pop
loope
or
xchg
gs
cmp
mov
xchg
rcl
xor
repz
sub
adc
lcall
lahf
sub
scas
aad
dec
shlb
lahf
ret
xchg
sti
rcl
rolb
cmp
bound
sub
mov
loope
es
mov
add
cmpsb
mov
pop
out
notl
shll
out
std
add
push
pop
mov
sbb
mov
sub
lods
mov
jns
ds
rolb
xor
push
and
add
mov
in
fnstcw
push
xlat
xchg
xchg
mov
or
int
xor
call
clc
push
jp
lret
sbbl
jecxz
ret
movsb
stc
decb
jbe
cld
push
adc
fcmovu
pop
mov
lods
xlat
das
fs
testl
xor
pop
pop
and
test
jbe
jnp
sbb
sbb
fcomps
pop
or
pop
ficompl
push
and
pop
adc
nop
mov
adcl
nop
sbb
bound
in
icebp
es
std
adc
out
int3
and
loop
mov
dec
das
imul
shl
mov
shll
cmpsb
popf
mov
loopne
or
iret
aaa
dec
inc
sbb
inc
mov
icebp
push
ljmp
adc
push
pop
int
div
pushf
jb
lcall
sbbl
dec
ljmp
sbb
lods
setp
pop
lods
call
fidivrs
mov
add
xlat
lret
mov
mov
jno
adc
cld
push
pop
jmp
cli
and
popf
jl
fmuls
cmp
pushf
jmp
mov
adc
out
ds
popa
push
adc
xor
lods
push
push
cltd
adc
dec
std
iret
mov
xor
xchg
sbb
mov
test
fcmovu
lcall
call
sub
loopne
inc
mov
push
inc
inc
dec
sub
jnp
add
xchg
cmp
clc
fs
xor
mov
or
int3
mov
cmp
sbb
sbb
mov
je
xor
jo
adc
movsl
out
aas
mov
or
push
jmp
test
cli
sub
inc
sub
push
sub
stos
add
adc
in
lret
faddp
or
fildll
mov
xchg
cmpsb
mov
imul
lea
cwtl
dec
cmp
mov
stos
sub
mov
push
xor
cmpsb
or
xor
ja
jno
popf
dec
mov
pop
or
sub
loope
in
or
aad
cwtl
je
cmp
inc
xorl
lcall
jg
cld
dec
sar
inc
stos
das
adc
fisubrl
ss
adc
cmp
stc
mov
mov
test
add
cwtl
mov
xchg
xchg
adc
sbb
push
fstl
in
insl
mov
add
test
add
jmp
int3
ja
mov
lcall
mov
aad
loopne
outsl
popa
cmpsl
fsubl
movsl
mov
roll
filds
dec
or
pop
stos
shlb
daa
rorl
es
and
ret
jns
mov
mov
xchg
fpatan
sbb
fs
add
pop
inc
aas
fcmovu
push
out
cmp
test
push
jbe
mov
ss
dec
adc
pusha
testb
pop
add
sbb
push
je
pop
push
or
xor
jge
add
add
cwtl
in
fildll
fucom
imull
js
into
lret
sub
cli
test
mov
sub
push
loope
add
popl
int3
pushaw
pop
pop
pop
pop
mov
jnp
jl
jge
add
in
arpl
nop
cmp
leave
push
mov
into
js
fmuls
subb
paddb
cmpsl
popf
lods
out
data16
xor
ja
dec
sbb
mov
lock
shl
jg
arpl
xchg
mov
push
addb
ja
mov
mov
pusha
rcrb
push
adc
popf
add
push
test
fcompl
repnz
jge
sub
cld
or
cmp
sti
cltd
daa
and
cmp
jb
xor
pushf
xchg
pop
andb
push
inc
inc
dec
iret
adc
scas
jne
iret
sub
inc
sbb
icebp
fwait
sbb
xor
insl
adc
jns
mov
imul
andb
or
fiadds
pop
and
scas
sarl
xchg
jp
dec
dec
fcmovnbe
lock
cmp
or
sbb
negb
fwait
sub
adc
outsb
and
inc
push
pushf
push
mov
xor
pop
out
push
dec
fnsave
push
fcomp
roll
addr16
and
adc
or
mov
int
or
enter
jle
lahf
scas
fmull
jecxz
test
dec
push
push
mov
je
and
lahf
pop
inc
in
fbstp
scas
call
adc
das
xor
xchg
sbb
jp
lea
jb
andb
cwtl
hlt
rorb
inc
rolb
dec
mov
or
add
add
lds
xchg
lahf
aas
int
cmp
addr16
sub
jo
movl
mov
lods
les
ja
test
mov
push
pushf
xchg
fs
add
dec
pusha
js
xchg
jecxz
pop
andl
fadd
lret
sub
lret
out
and
orl
and
icebp
ds
and
lret
xchg
or
cmp
add
adc
inc
cltd
aaa
outsb
sub
and
lock
or
sub
mov
mov
inc
or
notl
je
lock
gs
jne
push
xchg
xorl
xlat
int
push
into
std
faddl
aad
push
or
fbld
hlt
outsl
test
in
daa
mov
leave
lds
das
repz
add
add
sbbb
lods
lock
dec
or
shrb
push
pop
xlat
mull
push
in
mov
aad
stos
nop
mov
movsl
inc
mov
push
adc
or
sahf
icebp
adc
adc
dec
enter
in
lahf
outsb
push
inc
dec
or
mov
scas
dec
lcall
mov
orl
xchg
loop
ja
push
scas
xchg
out
lods
or
xlat
scas
cmp
sbb
push
mov
add
mov
sbbb
dec
add
out
mov
mov
cwtl
movsl
js
mov
arpl
push
loop
lods
cld
jb
inc
sbb
in
lods
mov
mov
in
xchg
mov
lret
loope
jo
repz
cmc
xchg
ret
push
stos
xchg
rcr
push
xchg
xor
xor
jbe
mov
and
or
ds
add
adc
in
gs
or
jmp
inc
sub
add
jle
and
cmp
insb
push
sahf
pop
or
mov
fucom
out
inc
mov
fidivrl
sbb
mov
mov
push
mov
into
mov
jae
pop
jae
fcmove
or
or
xor
mov
mov
pop
jae
push
fcom
inc
sbb
mov
lret
mov
popa
scas
lods
and
pop
jne
or
inc
out
daa
divl
clc
inc
cmp
add
lcall
mov
lret
imul
js
jno
pop
push
jge
mov
ss
sbb
xchg
sub
push
sub
lods
push
addr16
fs
scas
cmp
pop
adc
push
out
data16
mov
mov
add
mov
mov
or
pop
mov
int3
mov
inc
pop
mov
or
mov
cltd
rcrl
pop
lret
cmp
jno
loopne
xchg
inc
notl
adc
inc
mov
cwtl
loope
cmpsb
jo,pn
or
leave
mov
jl
push
stos
rorb
or
and
ja
pop
leave
fwait
repnz
mov
mov
xor
cltd
sbb
repz
cmp
call
sub
lret
inc
cmp
jo
lock
pop
lret
and
fdivrs
es
lahf
fistl
popa
pop
or
shll
or
xchg
jns
sub
lcall
xor
push
sbb
lods
xor
lods
sbb
ss
pop
push
lods
sub
and
xor
inc
cmp
ret
cmc
add
sub
sbb
imul
adc
lods
clc
outsb
xlat
jge
insb
sbb
push
loop
pop
xor
cwtl
xchg
adcl
xchg
mov
mov
stos
int
cli
or
es
pop
inc
ret
mov
ret
enter
sbbl
dec
loop
sti
jbe
pop
and
push
jmp
stos
cmpb
cmp
repnz
inc
addr16
pushf
mov
lds
or
loope
imul
or
aad
insb
fstl
dec
add
lods
cmp
mov
or
rorl
sub
loopne
push
ficompl
push
ret
xor
in
add
xchg
mov
shlb
add
sub
cmp
aam
cld
scas
dec
lea
clc
int
iret
xor
adc
dec
sub
hlt
adc
repz
incl
or
adc
jg
scas
sbb
mov
lret
inc
sbb
sub
movsb
out
push
or
sbb
shl
outsb
push
out
inc
inc
pop
aaa
pop
jbe
scas
testb
push
pop
insl
push
das
cmpsb
dec
pop
adc
inc
stos
and
adc
fcomps
das
sarl
dec
xor
fsubp
dec
mov
inc
mov
into
gs
inc
cmp
fldt
popa
xchg
stos
mov
frstor
lods
and
adc
rclb
fs
nop
jne
sbb
mov
sub
hlt
add
xor
or
lea
daa
stc
inc
dec
mov
pop
test
iret
in
into
das
das
jbe
std
lret
imul
sbbl
xchg
clc
leave
mov
data16
lds
ret
add
add
adcb
jg
call
lea
loopne
mov
dec
jg
mov
cmp
mov
xchg
mov
fstpt
adc
adc
cmp
cmpsb
insb
fstpl
nop
aaa
lahf
lret
xor
jae
mov
scas
nop
scas
ss
scas
insl
int
mov
ja
lds
dec
jg
xor
fadd
repz
mov
jnp
xchg
mov
xor
fs
inc
jp
dec
cmp
aaa
cld
cmp
int
cs
push
aad
out
out
iret
add
mov
int3
mov
loop
rolb
out
xchg
dec
lahf
push
icebp
mov
into
in
arpl
ljmp
stos
cltd
dec
repz
sti
or
adc
popa
dec
int3
xor
ljmp
dec
testb
and
inc
rol
sbb
or
dec
into
repz
fcomps
adc
pop
pop
pop
xchg
out
xlat
lds
pop
je
ss
jle
popa
out
mov
xor
xor
sti
arpl
aas
push
jne
pop
fists
cmp
in
dec
mov
mov
xor
imulb
push
gs
sbb
lds
inc
lret
mov
add
mov
dec
mov
fsubrs
aas
sbb
repz
xchg
rcr
rorb
repnz
lret
cltd
add
sbb
repz
lret
faddl
and
inc
sbb
rcr
outsb
outsl
in
xor
jle
pop
sbb
mov
test
loopne
xor
jle
xchg
jno
pop
cmp
push
pop
or
in
loope
les
mov
mov
stos
cmp
mov
fnstsw
mov
mov
push
xchg
std
inc
daa
leave
into
lcall
jmp
out
jbe
test
or
int3
add
xchg
shl
mov
lea
jo
loop
insb
mov
jae
sbb
jbe
jmp
push
pop
fdivs
jge
sar
in
add
js
clc
and
push
insb
add
push
in
add
mov
sub
notb
outsb
repnz
sbb
and
fistl
pop
sub
push
sub
shll
sub
int
xchg
ret
rorl
xor
and
mov
sbb
mov
fs
lods
repnz
mov
addr16
loopne
ss
sahf
sbb
gs
push
in
and
and
ret
jbe
mov
fidivrs
jmp
je
inc
add
int
lret
mov
lds
cmc
fldl
pop
cli
icebp
mov
pop
and
cmp
fidivl
xchg
add
jnp
test
rolb
mov
ja
out
adc
incl
cltd
add
loope
movsl
stos
or
jmp
scas
push
cwtl
in
addl
push
repnz
repnz
mov
and
test
dec
jne
sub
stos
data16
mov
outsl
mov
mov
mov
adc
pshufw
mov
loopne
sub
jl
xor
sbb
imul
jecxz
pop
jae
or
out
mov
lret
xor
test
inc
dec
add
sub
dec
mov
pushf
xchg
addl
shrb
jmp
and
mov
inc
sub
icebp
cmp
movsb
push
pusha
mov
cltd
notl
pop
or
frstor
hlt
insl
int
fisttpl
std
mov
test
inc
aaa
sub
mov
and
stos
inc
xchg
pop
std
jb
mov
fadd
dec
xchg
rolb
push
fucom
xlat
and
shl
cmp
sub
in
sbb
push
jle
dec
stos
out
cmp
inc
and
imul
jl
xor
add
ja
lret
mov
push
leave
enter
and
bound
ret
jo
movsb
jno
sahf
or
ja
xor
sbb
int3
mov
rcrl
pusha
adc
sbb
mov
mov
movsb
sbb
push
gs
faddl
adc
pop
pop
insl
fcomps
aaa
mov
pop
inc
cmp
push
push
push
fsubs
and
xorb
xchg
and
fisubrl
loop
dec
push
pop
mov
enter
outsb
dec
adc
movsb
sar
dec
mov
loope
fiaddl
mov
mov
adcl
mov
addl
lahf
enter
jle
push
ret
lret
ja
mov
jo
or
mov
push
lret
push
testb
and
sub
mov
aas
push
pushf
mov
adc
xchg
push
cmpsb
add
sbb
aas
jns
repnz
pusha
aaa
mov
lcall
fsts
inc
mov
ficoml
sti
clc
mov
xchg
ja
sub
mov
test
cltd
jo
mov
inc
stc
mov
sbb
outsb
test
jns
inc
jle
ja
inc
mov
xchg
adc
push
lret
inc
mov
pop
cmc
popa
pusha
jp
xchg
push
push
clc
jmp
int
nop
inc
loop
xchg
das
imul
cmp
jmp
test
mov
jno
adc
aam
imul
pop
lock
movsl
ss
or
mov
inc
ret
scas
jne
test
clc
add
pop
or
ss
gs
mov
xchg
imul
add
mov
sahf
cmp
jne
aas
gs
and
call
mov
or
popf
xchg
sbb
dec
cltd
lcall
pop
popa
sub
adc
dec
cmpb
outsb
movb
in
add
xor
fsub
pop
lds
cwtl
test
test
sar
fildl
xorb
int3
test
sarb
stc
push
inc
mov
imul
mov
jge
cmpsl
pusha
cwtl
sub
mov
out
cltd
jl
xor
cltd
ret
fcoml
ds
xor
stc
jb
push
ljmp
xchg
aam
xchg
dec
shlb
mov
pop
subb
scas
bound
and
pop
push
fadds
lock
pusha
pusha
push
iret
adc
xor
xor
fidivrl
in
in
repnz
pop
test
cwtl
mov
push
sbb
pop
mov
xchg
xor
jne
xlat
dec
or
andl
adc
clc
dec
fistpl
adc
repz
lcall
in
insl
scas
data16
into
iret
movl
arpl
or
mov
data16
jg
les
xacquire
in
lcall
inc
inc
add
sahf
sarb
xlat
lcall
jae
inc
nop
and
and
push
mov
jecxz
push
push
in
jp
insb
das
sbb
inc
sbb
shr
pop
pop
cld
cmpsb
jmp
push
jle
jbe,pn
jecxz
pushl
dec
mov
int3
xorl
push
mov
js
repz
sbbl
add
idivb
sub
adc
aam
incl
rcrl
ficomps
jne
fs
push
shll
pop
mov
test
or
out
aad
inc
sbb
xchg
pop
inc
pop
jl
push
mov
adc
scas
js
mov
les
testl
fwait
fwait
sub
les
outsl
xor
and
push
fcoml
adc
ljmp
mov
inc
add
inc
pop
movsl
sti
and
xor
cmpsb
cmpl
cmp
mov
mov
addr16
xorl
push
lahf
sbb
xchg
mov
jb
jmp
push
aad
push
sub
imul
push
jmp
push
mov
or
sub
sti
data16
xchg
sbb
mov
cmpsb
in
adc
sbb
mov
and
push
jae
adc
jg
sbb
mov
jmp
std
push
orb
insb
pop
addb
push
aas
mov
call
adc
adc
inc
cmp
xchg
push
mov
movsl
mov
sub
pop
xchg
push
jns
iret
or
and
mov
andl
dec
jmp
in
stc
das
lahf
mov
adc
scas
sbb
data16
inc
pushf
jno
cld
sahf
dec
pop
out
jnp
xchg
out
push
sahf
js
jne
cmpsb
jno
xor
aaa
cmp
faddp
lret
in
popf
int
sbb
adc
lcall
lock
cmp
xor
xchg
mov
or
in
xor
ret
shrb
inc
pop
stos
mov
test
push
push
jnp
stos
stos
addr16
pop
decb
add
mov
leave
jne
popa
push
sahf
test
fsub
scas
mov
add
and
xlat
sub
adc
fbstp
sar
ljmp
jae
insl
push
sahf
mov
inc
xor
pop
sub
mov
leave
mov
xchg
jg
pop
inc
mov
mov
imul
pop
add
lds
push
xchg
mov
adc
div
jle
jle
mov
pop
pop
add
hlt
xor
pushl
sub
or
dec
das
jo
fidivs
pop
adc
shrb
cli
lahf
add
jo
icebp
mov
cltd
rcll
aas
mov
mov
mov
push
int
mov
fprem
fadds
cmc
inc
cmp
pop
mov
test
adc
and
pushf
leave
sti
push
pop
shrb
add
jmp
xchg
inc
dec
rcrb
xor
out
cmp
and
push
push
aad
add
shrl
sbb
sub
xlat
inc
je
mov
xor
rorb
movsl
stos
test
in
mov
push
mov
imul
mov
push
loope
and
push
dec
xchg
scas
mov
fisttpl
ljmp
xchg
inc
fsubs
cmp
gs
push
pop
jl
pop
inc
pop
sbb
in
imul
mov
dec
js
push
out
push
add
or
xor
popf
in
test
mov
push
addl
lds
mov
or
adc
fnop
shlb
add
xor
adc
push
jns
lzcnt
ja
jecxz
add
ret
mov
pop
cmp
cli
test
das
mov
notl
xchg
dec
roll
and
xchg
inc
push
adc
mov
pop
xchg
inc
xlat
cli
test
xchg
mov
shrb
xlat
insl
inc
jns
and
xchg
outsb
xor
mov
daa
andl
sub
mov
int
inc
imul
lods
jae
stos
ficoms
cmpsl
cmp
lock
fiadds
xchg
dec
adc
das
push
imul
add
jb
and
push
add
pop
xchg
pop
push
fstp
mov
sbb
inc
push
test
mov
fimuls
nop
stc
scas
fisttps
add
jae
nop
sbb
push
cmpb
das
dec
les
mov
das
inc
xor
mov
cmovbe
pop
fucomip
mov
push
scas
xchg
fs
ret
insl
popa
sbb
dec
jmp
popf
dec
daa
rcrl
mov
or
sub
jae
movsl
test
push
xor
cmp
pushf
mov
and
in
inc
dec
adc
inc
cli
gs
les
test
mov
lcall
or
ds
setae
stos
or
mul
and
push
jns
aas
xchg
sub
lods
inc
loop
je
setne
mov
mov
xchg
jge
sub
jecxz
push
lods
sbb
cmp
ret
xor
xlat
inc
ja
dec
outsb
mov
sbb
comiss
popa
rcrb
imul
mov
xor
outsb
add
sub
iret
icebp
cwtl
pop
pop
sar
xor
add
adc
hlt
add
mov
cli
xor
jge
mull
inc
insb
mov
aad
push
cltd
sub
int3
mov
popf
jl
sub
pop
loop
xchg
dec
stc
jg
push
out
sbb
call
ficoms
and
xor
or
fidivrl
pop
xchg
add
and
and
mov
das
int3
pop
jo
shlb
pop
mov
cmp
add
jo
pop
cmp
cmpsl
lods
fsubs
sahf
add
lds
fxtract
inc
daa
test
clc
dec
mov
nop
dec
or
push
xlat
repnz
mov
jno
cs
pop
jp
mov
mov
jo
sarl
jo
bound
int
sub
rorb
jl
mov
add
mov
or
adc
add
ret
fstps
jb
addl
mov
adc
enter
sub
scas
sbb
mov
adc
sbb
sbb
inc
mov
out
sub
pop
mov
jle
in
or
cmpsb
and
iret
mov
xchg
je
cmp
cs
gs
es
sbb
test
mov
pop
push
adc
mov
pushf
mov
push
daa
loop
popf
jno
push
daa
movsl
inc
pop
ss
fadds
cmp
and
mov
movsb
loope
xchg
lods
outsb
js
xor
pop
jg
movsl
mov
or
test
dec
fucomp
mov
cmpsb
inc
mov
push
add
xor
xchg
dec
dec
gs
insl
xor
mov
insl
dec
out
insb
sbb
mov
lods
push
push
mov
sub
cmpsl
add
inc
push
or
or
aaa
and
mov
sub
jne
fs
in
add
cld
popa
insl
and
subb
ljmp
push
cmpsb
dec
fdivrs
insb
movsl
pop
push
jae
mov
arpl
mov
leave
cmc
data16
mov
and
mov
dec
outsb
and
pop
or
jg
xchg
inc
add
or
sar
push
push
stc
xor
stc
cmc
cld
popf
mov
jle
sbb
iret
insb
sarl
xlat
or
push
jge
cltd
hlt
inc
dec
mov
push
dec
add
cltd
inc
insl
inc
stos
push
lods
adc
push
test
pop
mov
lcall
adc
xchg
xchg
or
and
shrw
xchg
jae
out
fsubrl
subl
lret
pop
in
into
es
cmp
adcb
lods
rcr
sub
movswl
in
aad
adc
xor
xor
mov
ja
add
sahf
push
fisttps
jo
pushf
cltd
aas
jle
xor
insb
jge
aaa
inc
cmp
insb
clc
dec
repz
jp
inc
pop
out
add
pop
scas
add
adc
xor
sti
dec
lds
mov
pop
in
cmpsl
and
lock
jne
pop
mov
adc
adc
push
fs
dec
les
jmp
sub
out
popf
in
jp
cmp
in
pop
sub
ds
popf
icebp
popa
or
jl
or
cmp
pop
popf
ret
mov
in
out
mov
or
jecxz
fidivrs
std
adc
ja
jl
adc
pop
dec
sbb
daa
xchg
test
sbb
inc
outsl
mov
out
into
mov
mov
lret
and
jp
and
cmpsb
aas
or
test
fs
sub
insb
pushf
or
xchg
sbb
cld
popf
dec
jge
aas
add
sub
sbb
push
cmpsl
cmp
js
mov
cli
mov
inc
int3
xor
out
sub
xchg
aaa
das
pop
out
cmp
js
ljmp
cmc
pop
stos
shrb
leave
push
push
xor
mov
loope
cmp
std
and
int
fdiv
and
rcrl
push
scas
mov
xlat
test
adc
adc
sub
pop
cmc
pop
repz
mov
out
sti
fidivrs
or
inc
xcrypt-cfb
cmpsl
and
fs
cvtdq2ps
dec
mov
jno
mov
bound
jmp
insb
out
add
inc
xor
sahf
inc
or
fdivrl
dec
push
cs
pop
leave
xor
in
mov
mov
mov
inc
dec
or
and
cmp
test
or
pusha
fisttpll
ret
in
pop
pushf
pop
les
and
sarl
ja
and
popa
pop
mov
rolb
lret
push
mov
imul
push
push
jo
mov
push
pop
std
xchg
xor
dec
cmp
out
stos
movsl
jmp
adcl
sbb
inc
add
sbb
dec
adc
add
aas
scas
call
out
lock
stos
stos
push
outsl
mov
aas
add
cltd
loop
jae
jb
int3
xchg
push
xchg
or
add
xor
cmpsl
mov
out
out
pop
pushf
jmp
push
push
popf
fwait
pop
jecxz
es
fwait
arpl
push
dec
arpl
js
loopne
xchg
push
mov
mov
cmp
test
pop
cmp
push
stc
mov
outsb
sub
lcall
mov
jnp
popf
in
mov
popa
pusha
push
adc
pop
inc
dec
dec
daa
adc
outsb
jge
rcrl
in
add
adc
add
outsl
adc
jge
pop
bound
out
cltd
mov
push
call
out
and
mov
ret
test
out
roll
push
sti
xchg
mov
jmp
hlt
test
jmp
or
cmp
cmp
xor
repnz
fisubs
push
xor
out
aad
jae
add
dec
mov
mov
test
out
mov
fsubrp
push
xchg
xchg
jle
std
jp
mov
push
pop
jecxz
push
mov
push
cmp
cmp
pop
imul
rep
mov
lret
out
into
pop
scas
xchg
data16
sbb
rcll
mov
nop
dec
cwtl
sbb
lods
sub
fdivrs
cmc
lret
jge
aad
pop
jae
pop
insb
xor
lods
pop
and
push
cmp
mov
adc
sti
mov
mov
fldt
scas
xor
outsb
cmpsb
inc
mov
and
cltd
xor
ljmp
pop
fisubrl
or
lds
mov
repnz
adc
icebp
mov
ret
in
jg
hlt
mov
test
iret
xorb
push
bound
sub
mov
cmpsb
mov
push
movb
sub
mov
gs
notrack
arpl
adc
xlat
imul
imul
lods
adc
mov
xor
push
or
cmpsb
fdivrl
cmpb
fmull
sub
ret
enter
cmp
cld
push
push
test
fsubp
cli
push
add
and
or
sbb
dec
pusha
cmp
test
push
push
push
push
adc
mov
ret
pop
sbb
cmc
pop
jo
int3
sub
pusha
test
or
js
sub
test
push
cmp
addl
adc
mov
xor
lret
xor
cmpsl
dec
imul
popa
movsl
adc
imul
inc
ret
xlat
sbb
mov
or
cmp
inc
lcall
dec
and
repz
mov
loopne
push
fcmovbe
push
mov
jle
sbb
loopne
xorb
dec
popa
sti
es
sbb
pop
mov
aam
ja
and
mov
inc
fwait
or
mov
pusha
mov
xchg
mov
jl
mov
push
cli
je
mov
shrb
dec
mov
xchg
movsb
push
or
cmp
xor
sbb
imul
loope
fidivl
or
jge
mov
jmp
jl
popf
inc
outsl
sub
testl
scas
jo
and
push
jge
rclb
sarb
mov
push
adc
mov
jge
jo
mov
push
pop
sub
mov
cmp
inc
mov
popw
cmp
adc
mov
ja
sarb
push
fisubs
push
or
iret
xchg
jne
inc
or
push
adc
cwtl
js
xchg
lcall
ret
xor
dec
aaa
test
and
iret
rcrb
lock
jecxz
pop
stos
sbb
shrb
aam
cmp
scas
enter
scas
cli
xor
push
inc
xor
mov
outsl
jge
loop
mov
pop
add
rorl
leave
mov
insl
fsubrl
xor
dec
mov
jmp
mov
into
inc
sub
bound
add
mov
rolb
adc
add
mov
fisubl
imul
movsb
in
or
add
pop
xchg
jp
add
das
hlt
dec
scas
push
sar
dec
adc
lret
pop
adc
mov
test
repnz
insl
jp
fdiv
sbbb
mov
sub
sti
outsb
cmpsl
sub
cmp
dec
mov
jmp
mov
pop
mov
loopne
xchg
lahf
sub
or
es
and
movsb
gs
adc
dec
push
sub
cmp
cmpsl
lret
loop
sub
cld
pop
ret
arpl
cmp
mov
jecxz
cmp
cli
sahf
cld
mov
push
dec
cwtl
lds
mov
jg
mov
and
mov
mov
aam
dec
ret
fistps
out
mov
inc
mov
mov
and
cltd
mov
inc
movl
lret
cmp
pop
dec
cld
aam
and
xchg
cmpsl
mov
and
out
addr16
adc
or
push
ds
jle
fmull
and
testl
cmp
out
mov
das
push
cwtl
mov
jge
xchg
push
test
vpaddsb
les
or
cmp
dec
outsl
xchg
lret
lea
lcall
gs
mov
in
aad
adc
mov
pusha
jns
test
sti
xchg
invd
cs
jge
notl
cmp
ret
lahf
shrb
shll
adc
mov
mov
sub
les
enterw
aas
push
dec
xchg
pop
js
dec
cwtl
mov
pop
lods
push
inc
or
aam
stos
daa
dec
sbb
cmp
xchg
jle
lods
mov
pushf
inc
mov
ret
cmc
dec
mov
std
lret
push
xchg
stos
pusha
and
movsb
pop
add
mov
adc
stos
xor
gs
mov
shrb
cmp
cltd
call
lahf
pushf
in
data16
enter
call
cmp
mov
lret
sbb
scas
lret
daa
cltd
cvtps2pi
inc
nop
test
inc
and
add
jle
test
fs
lret
pop
jmp
enter
push
mov
sub
add
mov
loopne
cmpl
xchg
test
mov
test
push
xor
pop
sbb
enter
jecxz
xchg
xchg
nop
pop
out
add
out
out
jno
push
push
or
rol
stos
fstl
cmp
into
and
rorb
fcomps
mov
dec
mov
rolb
je
lods
cwtl
sbb
neg
jne
stos
cli
mov
mov
pop
mov
or
mov
inc
cli
push
xlat
or
and
test
ds
xlat
push
jo
cmp
ds
add
mov
shrb
sub
jmp
loopne
mov
inc
sbb
mov
cmp
dec
pusha
pop
mov
mov
out
lcall
adc
int3
xchg
dec
pusha
fwait
jl
xchg
clc
testl
mov
mov
xchg
mov
es
dec
int3
mov
ss
add
enter
add
rcll
lds
dec
xorl
sub
cmp
loop
sahf
mov
repz
sar
loopne
enter
arpl
adc
or
lret
fmulp
xor
cmp
pop
mov
xchg
cmpsb
sub
push
test
xchg
dec
repz
icebp
out
rol
ss
test
loope
pop
mov
pop
gs
xorb
mov
mov
cmp
imul
test
sahf
cmc
popf
inc
mov
mov
in
cmc
fbstp
dec
arpl
bound
jo
cs
sub
cmpsb
xor
and
lea
push
xor
mov
mov
movsl
iret
cmpsl
or
cmp
mov
fcompl
xchg
pop
dec
and
add
lret
add
push
add
adc
ficoml
inc
inc
gs
out
adc
push
lcall
mov
jno
push
call
out
jmp
bound
jge
xchg
xor
pop
sub
movsb
mov
jns
pop
mov
jg
add
sti
lods
pop
and
mov
xor
adc
and
in
inc
cltd
hlt
mov
sub
inc
xchg
mov
pop
aad
mov
cwtl
lock
adc
iret
movsl
xor
aad
dec
push
clc
xor
mov
dec
xor
je
fiadds
test
cmpsl
out
ja
inc
loopne
sub
cs
jb
jb
mov
fldl
mov
sbb
push
xchg
mov
jnp
data16
sar
fsubs
push
cmp
bound
xchg
cmp
and
xor
mov
cmp
fisttps
fimuls
in
lahf
xchg
je
popf
push
pop
shr
adcb
mulb
cmp
insl
movsb
adc
xchg
mov
cmp
jl
sub
jbe
lfs
outsb
imul
sub
jg
mov
or
dec
jbe
mov
sub
stos
push
pop
dec
jge
aad
sub
or
push
push
sub
mov
das
es
pop
jg
mov
pusha
test
mov
adc
gs
sub
rclb
stos
shlb
push
fmuls
leave
pop
cpuid
jns
cmpsb
push
dec
addr16
push
int3
pushf
dec
xor
test
push
faddl
cli
sub
dec
mov
outsb
fs
add
and
push
lods
or
test
in
add
jmp
jnp
sbb
int3
xchg
or
push
fxam
adc
xor
dec
out
pop
mov
outsl
stos
pop
add
nop
lcall
and
sub
in
out
xor
sub
loopne
inc
mov
jnp
cmpsl
jns
lcall
out
pop
jb
dec
mov
decl
lods
data16
lods
and
les
jnp
out
or
outsb
movups
enter
mov
jnp
enter
inc
inc
cmp
jmp
rclb
jmp
shr
pop
xchg
xchg
pop
mov
inc
cmpsl
dec
in
mov
or
movsb
subl
dec
add
sbb
outsl
movsb
test
mov
cltd
dec
aam
mov
fiadds
mov
outsl
jp,pt
sub
adc
add
fwait
lds
shrb
mov
and
lea
cld
mov
call
fildl
stos
imul
xor
xchg
arpl
lock
adc
bound
mov
jg
fcoml
xor
bound
popa
fcomip
in
add
jp
xchg
inc
push
mov
jmp
lahf
or
jmp
daa
mov
icebp
cmp
xor
jmp
movsb
mov
adc
lcall
mov
jge
sbb
je
repnz
cmpsb
jnp
jecxz
imul
xor
push
add
scas
lahf
loop
pop
xchg
sub
jb
push
test
not
add
mov
test
xchg
repnz
movsl
pushf
mov
pop
jb
jnp
xchg
dec
std
je
int3
mov
xor
iret
aam
leave
popa
sub
jp
add
loope
mov
xchg
inc
call
jno
test
inc
cltd
fstl
adc
int
xchg
add
cli
stos
icebp
inc
mov
mov
mov
adc
sub
fldenv
loope
ficoms
in
sbb
jbe
das
pushf
inc
xor
cmp
xor
add
or
shlb
jae
lret
daa
popf
subb
popl
sbb
jb
cli
push
rcrb
stos
iret
push
push
or
imul
repz
inc
or
xor
sbb
dec
icebp
cwtl
adcl
fbld
and
xorl
add
add
ds
movsl
pushf
adc
subb
push
mov
push
push
xor
adc
sbb
jecxz
aas
sub
stc
scas
out
mov
pushf
jge
mov
mov
out
je
outsl
mov
mov
sbb
ja
push
jae
jae
icebp
xor
icebp
test
out
loopne
adc
rcrl
push
fwait
cmp
mov
pop
cs
adc
xlat
data16
sarb
jg
repz
pushw
out
cmpsl
imul
je
or
or
jns
add
test
movsl
lods
push
jno
push
mov
repz
add
fucom
pop
sbb
ljmp
add
mov
push
push
mov
pop
mov
gs
push
jmp
lds
xor
lds
adc
jmp
aam
cmp
mov
xor
das
mov
leave
add
fwait
jbe
clc
xor
aas
xor
mov
and
push
adc
in
xchg
or
mov
ss
mov
insb
loop
sub
pop
add
sbb
int3
les
sbb
cmp
push
psllq
dec
outsb
in
nop
iret
out
pop
pop
pop
cmpsb
pop
jae
mov
and
inc
inc
popa
sbb
jb
mov
inc
test
arpl
mov
aad
mov
push
and
xor
cmp
repnz
fbstp
aaa
adc
mov
jbe
jo
imul
fbld
lock
cwtl
insl
mov
mov
loopne
lcall
cmp
dec
pop
jo
lret
mov
lods
inc
mov
lea
sahf
sahf
cwtl
test
in
cmp
fstps
je
sub
sub
dec
or
dec
xchg
lods
es
icebp
pop
push
sbb
es
mov
cmp
adc
or
packuswb
inc
xor
ret
sub
or
mov
xchg
jmp
bound
daa
ret
stos
testl
inc
pop
xchg
shrb
into
inc
mov
jae
imul
jmp
mov
push
inc
test
xor
mov
stos
jno
cltd
pusha
push
sahf
and
notl
push
or
or
repnz
add
cmp
push
mov
loop
fidivs
dec
add
or
pop
adc
lea
repnz
mov
in
push
aaa
loop
mov
jl
inc
lea
sahf
aaa
jle
repnz
aad
test
sub
xor
jb
das
pop
dec
movsl
shll
dec
mov
lock
fidivrs
iret
or
insb
mov
popf
fistpll
and
inc
daa
outsl
sbb
push
mov
addr16
jae
push
pusha
lret
pandn
and
es
arpl
and
mov
fdivrs
fdivrs
lods
inc
jne
jno
push
push
jg
adc
adc
lret
and
fstps
or
ljmp
xchg
fdivrs
test
lods
mov
sub
jle
xchg
add
mov
mov
ret
xor
jno
test
test
mulb
mov
inc
jmp
push
dec
lahf
in
add
pop
push
or
dec
and
pusha
lcall
pop
insl
fs
outsb
jmp
push
es
dec
add
jno
fwait
inc
nop
add
inc
stc
lret
lods
lods
arpl
popa
ljmp
dec
adc
inc
dec
insb
mov
dec
mov
xor
pop
ss
popf
pop
mov
sub
lods
inc
int3
mov
or
cs
imul
aas
xor
in
dec
in
aam
out
inc
es
insl
push
aas
std
gs
das
popa
sti
es
divb
add
jg
and
inc
divb
push
jp
mov
jge
fnsave
add
aad
jae
sbb
cmpsb
pop
fisttps
pusha
xlat
int3
mov
popa
stos
push
insl
adc
lea
js
sub
popf
jp
cmp
fimull
ret
mov
sub
aaa
cmp
push
adc
mov
imul
pushf
iret
std
lret
ficomps
repz
lds
fcmovbe
jns
mov
test
in
pop
mov
inc
cli
mov
rclb
add
out
mov
fistpll
clc
rolb
mov
pop
mov
jns
cmp
sbb
cwtl
cs
xchg
lret
push
lret
sub
inc
ds
jp
adcl
add
das
push
lret
ds
out
mov
sub
cmpsb
cmpsl
mov
mov
or
into
xchg
nop
movsb
test
outsl
cmpsl
pop
lods
push
add
xor
ljmp
xchg
fistpll
dec
bound
outsb
dec
daa
push
int3
out
push
cwtl
jl
hlt
mov
lods
fcom
add
outsl
stc
rclb
aaa
test
lret
lea
xor
sbb
add
int3
mov
sti
inc
mov
mov
mov
lcall
jg
jle
xlat
dec
and
aad
inc
sahf
ja
push
and
clc
mov
in
adc
cltd
lcall
rcrb
mov
sub
mov
pop
jl
clc
xor
xchg
insb
pop
popf
sbb
cmc
ret
aam
ljmp
xchg
pop
mov
loopne
out
inc
xchg
out
push
shll
cmp
nop
pop
mov
fsubl
cmc
dec
lds
jg
stos
ret
xchg
mov
cld
dec
dec
out
xor
sbbb
add
push
and
mov
mov
data16
das
mov
jmp
dec
and
jbe
jns
sbb
imul
nop
imul
jge
or
inc
test
int3
pop
daa
cmp
push
cmp
xchg
repz
int
lahf
js
jo
and
adc
adc
cmp
sub
push
xchg
das
sub
ret
outsb
movsb
lcall
rolb
jb
addr16
out
and
xchg
sahf
out
mov
sbb
jae
push
xchg
rcll
jp
xchg
scas
xchg
or
leave
shll
push
mov
addr16
addr16
insl
sbb
bound
ds
jg
push
adc
pop
mov
jge
xchg
sub
lcall
cmpsb
inc
das
call
cltd
rcr
dec
sub
test
ret
sbb
jl
mov
leave
mov
add
aad
mov
in
fadds
push
inc
addl
movsl
pop
enter
out
sub
pop
cmp
scas
push
addr16
jmp
xchg
loopne
fwait
rolb
outsb
lret
imul
xor
mov
aad
cmp
lods
cwtl
shrb
xchg
xor
in
jle
notl
stos
adc
fwait
sbb
hlt
fisttps
push
xor
add
dec
jno
cmc
push
nop
add
nop
xor
into
cmpsl
push
nop
filds
dec
rcrb
in
stc
sub
repz
jo
mov
outsb
sub
sub
outsb
stos
inc
scas
test
sbb
inc
push
sub
psubq
or
dec
sti
dec
addr16
fisttps
xchg
insl
and
enter
in
enter
pop
adc
xlat
and
add
out
inc
mov
lods
std
ja
mov
push
dec
pop
mov
lahf
jnp
cmp
clc
dec
dec
ljmp
cmp
xor
push
sbb
xor
add
jno
scas
pusha
xchg
sar
repnz
adc
sbb
pop
xor
sar
lcall
int3
xchg
jb
daa
hlt
stos
mov
dec
jge
cwtl
test
fiadds
lcall
jg
lret
xchg
or
test
jnp
dec
pop
inc
inc
push
loop
dec
shll
push
dec
and
jb
lcall
data16
shl
sbb
fucom
pop
mov
jb
andl
pop
and
cli
adc
dec
sub
add
xor
ss
push
cmp
shll
xchg
inc
or
jns
cmp
mov
pop
incb
cmpsb
add
ljmp
cmpsb
js
loop
xor
movsb
sub
aam
xor
clc
mov
xchg
jno
shrl
pop
mov
cmp
pop
iret
dec
cmp
pop
xchg
inc
adcb
lcall
sti
iret
mov
lret
adc
int3
jae
xchg
sahf
dec
sub
insl
xor
jae
rcrl
out
jns
cmc
mov
pusha
outsl
lcall
int3
decb
push
scas
cltd
push
mov
iret
outsl
xlat
scas
pop
scas
pop
mov
inc
insb
jp
inc
push
mov
dec
xorb
int
jo
and
out
sbbb
cmpsb
jae
push
dec
inc
pop
daa
ja
lret
scas
stos
mov
and
les
mov
mov
mov
jle
sub
out
xchg
mov
out
inc
ficoms
sbb
arpl
adc
imul
pop
fimull
insb
push
scas
fwait
fs
push
fisubrl
gs
enter
fsubs
add
mov
mov
inc
xchg
dec
lahf
in
sbb
loope
push
fs
jle
jb
mov
or
xor
adc
rcll
shrl
inc
inc
cmp
stos
add
out
out
sub
mov
add
pop
sub
cwtl
andl
add
shl
arpl
js
add
repz
out
mov
rcll
xor
das
popf
shrb
clc
push
sub
in
or
or
cli
push
enter
orb
jnp
filds
add
repnz
hlt
xlat
mov
jle
ljmp
test
xchg
adc
fwait
and
adc
loopnew
cmpsl
push
imul
ss
sbb
jg
mov
data16
push
ss
jp
jae
or
jg
int
pop
fwait
negb
dec
push
sub
roll
addr16
les
aam
cmp
fcomps
out
mov
stc
adc
les
aam
aam
cld
xchg
aas
jecxz
push
int
adc
lret
call
push
sub
push
lods
inc
adc
add
in
fwait
and
popf
pop
cmp
push
mov
fildll
test
xor
add
cwtl
and
inc
js
loopne
hlt
add
or
sbb
ss
dec
call
cld
stos
stos
push
dec
fwait
mov
lret
stos
lea
lods
xor
mov
push
mov
stc
rcl
pop
test
int3
sbb
std
and
inc
xor
inc
dec
mov
cli
daa
fidivrl
jge
adc
mov
lods
fcmove
pop
jo
mov
test
pushf
xor
das
imul
push
jne
mov
or
es
and
test
jnp
sub
push
inc
mov
fs
shrb
and
gs
rclb
mov
out
mov
add
lret
dec
xor
mov
jbe
push
fucomip
mov
sbb
aam
fcmovb
jle
pop
adc
loopne
sbb
iret
into
enter
dec
js
fs
leave
adc
mov
cmpsl
push
and
das
fisubs
dec
aad
xchg
sti
or
xor
push
daa
cld
push
andb
and
into
sti
dec
bound
sahf
pop
imul
lcall
adc
dec
pop
div
mov
jno
popf
mov
xor
rorl
mov
xor
aad
test
mov
jbe
cmp
mov
jl
jmp
ficompl
jb
repz
lret
jbe
xchg
fs
push
sbb
out
out
inc
test
scas
adc
mov
scas
imul
out
fadd
cmp
or
call
dec
or
lock
enter
cld
je
out
jno
test
push
pop
test
jb
orl
and
ss
xchg
je
pop
add
out
mov
out
inc
stos
xor
mov
loopne
mov
push
gs
pop
call
rcrb
lret
sti
je
fs
mov
adc
je
adc
push
or
sbb
dec
xchg
sub
xchg
dec
jb
inc
adc
popa
fcoml
cli
mov
inc
push
movsl
shll
xlat
lods
div
push
into
and
push
or
in
xor
incb
push
pop
shrl
loopne
mov
sub
or
push
push
nop
push
ljmp
movsl
scas
int
outsl
xchg
in
fimull
idivb
movsl
in
jns
xchg
mov
cmpsl
ret
stos
cmpb
sbb
cmp
cli
xor
arpl
addl
add
push
lcall
jp
dec
xchg
sub
mov
shll
sbb
out
in
or
or
scas
and
dec
in
cltd
mov
ds
aam
inc
xchg
jno
fidivl
jg
out
jbe
pop
push
xchg
call
movsl
jge
jecxz,pn
das
pusha
mov
shl
jns
or
cmpsb
jmp
insb
sbb
std
jno
in
push
iret
jp
insb
lds
pop
xchg
push
fsubrs
insl
dec
jle
push
push
jb
ret
scas
jne
lock
mov
outsl
push
or
jbe
inc
mov
lcall
pop
pop
xor
clc
pop
xor
dec
mov
pop
mov
lock
pop
out
pop
ss
js
add
jo
jb
aad
cltd
fisubs
sub
jae
in
in
rolb
and
ret
outsl
sarl
add
sub
adc
lds
mov
cmp
sti
inc
jbe
jns
out
jbe
mov
push
stos
cs
cli
pop
jno
lods
add
mov
dec
inc
loop
mov
pop
in
pusha
idiv
loopne
cmp
lret
mov
scas
cwtl
mov
cmpb
jp
int
fstpt
lahf
out
into
xchg
add
jns
rcrl
addb
stos
fisubrl
adc
adc
pop
fst
pslld
lods
push
or
adc
pop
es
push
dec
jmp
sub
shl
mov
add
bound
test
adc
lcall
cli
sarb
mov
dec
mov
add
out
mov
dec
add
adc
mov
pop
ss
pop
iret
sbb
ret
inc
cmp
pop
shll
sbb
mull
adc
and
dec
test
cli
jb
jnp
xor
push
scas
dec
ret
pop
fbld
or
inc
mov
adcl
pop
inc
sti
and
loop
imul
sbb
pop
daa
pop
cmp
popf
push
aas
mov
cld
cmc
xchg
or
and
int3
scas
imul
mov
clc
rcl
cmpsl
sbb
insl
int
sbb
pop
mov
xor
mov
dec
cmp
dec
adc
hlt
or
add
in
inc
adc
rol
push
cmp
mov
mov
add
pop
mov
sub
insl
mov
push
into
inc
dec
sahf
neg
gs
or
mov
loope
push
sahf
lea
mov
mov
inc
jle
inc
sahf
dec
mov
jge
mov
cwtl
notl
decb
lcall
subb
dec
cmp
mov
mov
push
imul
xor
inc
push
rcrb
push
xorl
imul
ja
jle
int
inc
push
add
loop
add
loopnew
lret
push
add
out
xor
in
push
fnstsw
xor
scas
or
mov
movsb
mov
or
xor
inc
sbb
mov
data16
add
aas
add
mov
mov
les
shl
jecxz
push
das
icebp
rcrb
mov
lods
add
cli
mov
adc
stos
loopne
dec
jp
aad
xlat
inc
outsb
dec
mov
insl
mov
sbb
or
mov
mov
add
mov
int3
enter
add
xorl
icebp
sub
inc
sbb
cmp
cltd
lods
out
aaa
sub
lock
jae
mov
outsb
insb
ja
into
pop
xor
and
push
mov
push
xchg
jge
jb
enter
jg
stc
aam
mov
dec
addr16
leave
lret
std
xchg
popf
lds
jp
in
xchg
or
cwtl
iret
mov
rcrb
pop
iret
push
mov
push
loopne
pop
mov
pushf
cld
xchg
mov
push
lcall
shlb
cmp
cmp
push
test
cwtl
fidivrl
rclb
daa
ss
and
push
ret
sub
sbb
mov
sub
fstl
lds
ss
or
cld
mov
dec
loop
sbb
mov
sbbl
sub
pop
pop
gs
xchg
loop
repnz
inc
shl
add
jp
mov
lods
pop
jnp
imul
dec
scas
xchg
in
push
cmovg
ss
fwait
clc
ss
pop
roll
scas
int3
push
jb
neg
cmpsl
xor
mov
mov
mov
inc
mov
xor
mov
ljmp
pusha
aam
repz
negb
adc
test
and
imul
outsl
dec
jmp
mov
daa
cmp
mov
jmp
addr16
or
adc
pop
inc
sub
das
push
sahf
and
cmpsb
gs
jle
push
pop
push
dec
xchg
adc
das
mov
xor
sub
movsl
adc
xchg
stc
test
mov
gs
jmp
xchg
and
repz
mov
sub
dec
ret
outsb
ret
xorl
pop
cmpsl
xchg
fldl
mov
std
push
test
icebp
and
ja
xchg
lods
mov
inc
nop
lcall
cld
inc
mov
lods
push
loop
cmc
inc
push
nop
lret
inc
out
outsb
adc
mov
mov
add
xchg
jmp
fsts
imul
lods
push
sbb
call
sbb
in
bound
mov
data16
jae
aas
cs
inc
and
jno
jbe
lcall
jnp
sub
arpl
arpl
mov
rcrl
mov
movsl
in
cmp
push
adc
loope
add
push
lds
pop
out
cs
mov
pop
sub
sub
pop
or
mov
inc
jo
sbb
fidivrs
leave
mov
push
push
xor
andb
mov
jnp
idiv
adc
int
imul
sub
jge
iret
rcrl
push
shlb
and
inc
std
rorl
lahf
mov
pop
dec
mov
sub
pusha
xor
insl
mov
pop
icebp
mov
scas
inc
or
and
stos
cwtl
pop
cmp
out
adc
mov
int
mov
xchg
mov
xchg
inc
int
lods
fadd
push
jg
lahf
mov
push
out
shr
xor
into
hlt
dec
idiv
inc
or
pop
mov
lds
bound
mov
and
out
xchg
test
bound
lea
lahf
in
rcr
or
push
in
aad
test
ret
test
lcall
dec
in
and
movsb
mov
cli
shrl
mov
pop
mov
int
mov
iret
filds
lds
dec
fidivl
mov
sub
add
adc
js
jl
mov
or
mov
mov
or
mov
inc
incb
xor
xor
xchg
and
xor
mov
iret
jp
xchg
sub
lods
loopne
mov
pop
in
or
jns
loope
clc
repnz
lods
out
pop
jnp
outsb
add
mov
lea
xchg
mov
or
mov
jb
out
rcll
call
sbb
adc
bound
popa
inc
push
pushf
adc
dec
stos
push
inc
pop
mov
adc
ds
xchg
out
mov
in
sbb
jmp
pop
cli
sub
ja
push
loop
pushf
sbb
fs
loop
loopne
in
stc
leave
rclb
loopne
pushf
adc
inc
in
in
arpl
fimuls
or
into
push
inc
inc
mov
push
notl
out
pop
aam
xor
jne
pop
adc
pop
push
dec
mov
mov
jge
cltd
loope
in
repz
repz
cmc
cmpsb
sahf
xor
and
dec
push
addr16
lret
cwtl
and
iret
call
fildl
das
sub
in
lods
mov
cmp
lcall
sub
jo
lea
mov
xchg
loope
dec
mov
push
sbb
loope
adc
xchg
pushl
xchg
add
push
xchg
sahf
rcl
push
mov
push
sbb
cmp
ss
jbe
fsubp
mov
dec
xchg
int
mov
mov
cmp
push
es
rcl
ret
add
cli
mov
cwtl
rorb
mov
in
fdiv
adcl
repnz
mov
sub
scas
jmp
fmul
incb
pop
cld
int
fidivs
inc
and
shll
inc
sub
rorl
ret
ds
out
mov
and
aad
xchg
cwtl
push
mov
adc
xchg
and
cs
movsl
test
decb
gs
cmp
mov
and
test
pop
or
inc
inc
add
fsubs
outsl
fildll
dec
dec
hlt
sbbb
out
xchg
add
jg
or
mov
rcrl
std
jns
fisttpll
lods
testb
xchg
outsb
lock
scas
jp
test
jns
fstps
or
rclb
push
test
pop
sub
xor
je
ljmp
sub
repnz
mov
or
jne,pn
loopne
push
lret
lcall
ss
loopne
in
pop
push
hlt
cmp
add
sub
popf
sti
jne
push
jnp
xor
sub
lods
dec
icebp
loop
fs
pusha
test
or
xor
mov
stc
ljmp
out
sahf
mov
sub
ja
xor
ret
and
sahf
xor
popf
mov
es
mov
orb
or
add
pushf
mov
xchg
sbb
das
jns
cmp
pop
mov
out
icebp
push
out
jmp
clc
ret
into
fcom
or
add
and
ret
push
dec
pop
test
cmp
ret
inc
sbb
rcll
push
cwtl
xor
xchg
or
mov
cmpsb
jp
pop
fadd
and
xchg
push
mov
pop
fnstenv
cmp
enter
nop
pusha
outsb
add
adc
xor
insb
outsl
notb
outsb
pop
fadd
adc
call
jge
sbb
out
mov
out
popl
push
mov
mov
addr16
xchg
addr16
inc
push
dec
bound
sbb
lret
add
loope
mov
jg
mov
inc
clc
inc
jb
mov
sub
aas
ret
data16
and
mov
mov
adc
out
xchg
dec
push
sar
inc
inc
lret
imul
lcall
outsl
and
or
cmp
icebp
push
mov
inc
hlt
sub
or
jmp
in
add
sub
mov
aaa
mov
scas
out
ret
por
xchg
sbb
push
aam
sbb
pop
inc
jbe
sbb
sbb
jbe
mov
ret
mov
mov
ja
lret
outsb
mov
ss
mov
cmpl
pop
adc
outsb
enter
adc
adc
sbb
leave
xor
push
push
add
mov
inc
dec
jp
mov
lret
test
ficomps
rclb
mov
repnz
cwtl
dec
sbb
lds
add
push
adc
xchg
sub
pop
lods
cltd
pusha
in
insl
push
mov
inc
js
jae
mov
aad
fcompp
mov
push
lock
mov
pop
cmp
sahf
lds
orb
clc
add
ja
vmovq
sub
push
outsb
sub
jb
out
shlb
dec
or
inc
mov
mov
pushf
outsb
imul
xor
adc
and
pushf
fstpl
fnsave
fidivrl
ret
test
jmp
push
ror
bndstx
loop
cmp
add
cwtl
mov
xchg
adc
cs
rcll
inc
add
and
pusha
xchg
jnp
sbb
sbb
nop
repnz
and
jns
out
jecxz
push
sbb
lret
pusha
jg
or
xchg
xchg
es
pop
push
cmp
add
test
push
fsubrl
scas
mov
sbb
push
and
int
jmp
lcall
adc
bound
insb
scas
scas
sub
mov
movsl
sub
ljmp
pop
and
push
mov
jne
cmpsb
repz
mov
js
mov
xor
sbb
add
mov
add
std
inc
xchg
aad
jb
and
push
xchg
rolb
jle
mov
jmp
push
insl
xor
mov
loope
push
addr16
cli
push
jo
fidivl
sub
cmp
sbb
xchg
out
sub
out
clc
inc
cmp
int3
mov
sbb
adc
push
ja
dec
outsl
xchg
push
rol
xlat
inc
pushf
jbe
sti
int
dec
jmp
mov
clc
push
test
dec
sahf
in
mov
pop
dec
hlt
dec
bound
test
int3
push
test
notb
rol
push
stos
push
add
cmp
mov
rcrb
push
lods
pushf
enter
xchg
icebp
mov
inc
aas
or
mov
test
pop
mov
inc
fisttpll
push
adc
mov
rcrl
push
std
jp
test
idivl
hlt
stc
into
sub
push
sahf
in
mov
xchg
daa
mov
jae
addr16
in
xchg
lods
punpckldq
dec
adc
imul
fnsave
mul
or
in
into
aam
or
mov
clc
lcall
xchg
movsb
test
scas
movsb
cmpb
shr
add
push
mov
add
push
int
sbb
aad
push
hlt
cmp
test
and
aas
lea
sti
rcll
push
sbb
mov
lcall
shrl
inc
inc
push
cltd
icebp
clc
ret
loop
in
dec
or
pushf
dec
push
cmpsb
lahf
loope
sahf
es
add
jo
mov
dec
push
jg
dec
into
js
and
decb
or
mov
hlt
shrl
call
mov
cs
mov
adc
popa
sub
mov
cmovp
fsubs
shll
jle
sbb
mov
rcrl
pop
dec
addl
popa
into
add
std
daa
lea
or
jmp
push
mov
aad
in
data16
call
mov
fmull
sahf
adc
das
aas
cmp
sarb
loope
add
int3
mov
xor
mov
jp
push
sub
xor
lret
cmp
pop
jbe
leave
fcompl
lock
dec
and
sahf
shl
mov
imul
js
xchg
push
das
int
fwait
ret
push
cmp
loopne
repz
dec
mov
fsubl
mov
xor
ss
sahf
mov
adc
adc
jmp
and
xor
jle
insl
pop
dec
pop
mov
mov
and
jl
jbe
cmp
shrl
mov
push
test
js
jns
and
repz
insl
out
and
cld
sub
nop
fnsave
mov
ja
mov
testb
mov
cmp
pop
and
cmp
ja
pop
addb
pushl
mov
xor
push
fmuls
std
rcrl
mov
mov
popf
js
sarb
outsl
or
and
rcrb
notb
xor
add
add
mov
adc
bound
and
adc
push
sub
mov
pop
dec
lock
cwtl
pop
outsl
hlt
sti
subl
lcall
adc
mov
mov
vdivpd
and
sti
int3
mov
aas
loope
arpl
pop
movsb
repnz
sbb
cmpsl
jns
fs
enter
mov
xor
lods
lds
and
je
lcall
lods
sbb
into
aad
rcl
cmpsb
ret
enter
xorb
sbb
popa
sub
out
jle
out
aas
lds
arpl
push
andb
dec
addr16
adc
iret
imul
add
gs
shrb
add
or
xor
loop
push
rcrb
dec
mov
xchg
out
inc
push
js
pusha
xor
pop
xchg
mov
subb
xchg
mov
lods
lcall
movsl
daa
call
mov
push
add
andb
adc
addr16
add
mov
dec
push
lock
mov
out
sbb
push
lods
pushf
sub
inc
jo
inc
test
popa
insl
jmp
push
pop
icebp
int3
in
rclb
rcrl
and
xchg
loopne
shlb
call
and
fdivl
ljmp
and
fisttpl
add
mov
test
adc
popf
xorl
hlt
je
scas
xor
push
sti
inc
jns
iret
jl
mov
cmp
test
jne
pop
pusha
das
xor
or
push
pop
push
pop
in
mov
into
xchg
push
mov
mov
push
push
lcall
sub
test
pop
jo
mov
aam
and
xor
arpl
stc
enter
pop
cli
jl
cwtl
sbb
inc
and
cltd
popa
notl
push
cmp
sub
iret
dec
loopne
sub
and
mov
andl
add
add
sub
xchg
ret
mov
andl
xorl
stos
rcr
sub
cwtl
in
insl
inc
jo
adcl
loope
push
sahf
loopne
lods
adc
cmpsl
arpl
inc
jnp
jmp
sbbb
inc
xor
les
fldl2t
sub
call
mov
pop
inc
dec
mov
lods
in
xor
add
xchg
rol
xchg
push
mov
cmpsl
pop
in
daa
scas
sbb
rcrb
mov
ja
ret
movsl
pop
mov
out
movsb
cmpsb
orb
or
adc
inc
cld
cld
push
sti
sub
ljmp
push
fmull
xor
cmp
test
mov
int
jl
lret
and
xor
cmpb
adc
enter
dec
sahf
push
dec
dec
pop
pop
psrlq
cmp
sub
icebp
ja
cltd
jnp
xor
or
push
mov
add
test
test
out
rorb
xchg
enter
pushf
insl
xchg
mov
fisubl
cld
adc
xchg
sbb
inc
loopne
lods
sub
adc
or
out
jp
adc
jo,pn
pop
aaa
incb
jns
and
cmpb
sub
pop
lods
ficompl
test
rcrb
test
subl
xchg
fcompl
sub
test
pop
cmp
pop
mov
dec
adc
cmp
clc
dec
cmp
mov
movsb
mov
cs
and
mov
insl
sahf
pop
nop
sti
imul
or
gs
rorl
sbb
testb
xor
insl
into
int
or
xor
test
sub
sbb
insl
push
dec
push
orb
not
pop
xchg
or
std
xor
push
aam
rorl
sahf
stc
add
pop
clc
out
enter
in
xchg
mov
mov
push
inc
sub
xchg
enter
cltd
add
inc
mov
cmp
fcoms
stc
test
xor
pusha
mov
mov
sbb
adc
lea
pop
sbb
das
loop
jmp
ja
paddsw
subl
outsb
icebp
or
add
cmpneqps
lds
in
mov
inc
ret
sahf
xchg
ds
xor
mov
xor
or
frstor
adc
dec
fbstp
sub
push
sbb
inc
fisubs
push
leave
movsl
sub
fisttps
jecxz
inc
inc
gs
or
std
rcll
xor
ficoml
inc
jne
imul
daa
leave
rcrb
pushf
xlat
cli
xchg
pusha
jl
mov
add
sbbb
push
inc
test
test
mov
xchg
stos
lahf
pushf
dec
jecxz
push
sbb
mov
or
lds
out
insl
and
fs
mov
adc
xchg
sbb
dec
daa
push
push
sbb
mov
out
mov
cmp
add
cld
or
shl
pop
imul
jge
xor
cli
push
das
and
xor
cmp
jns
das
lds
mov
aas
dec
loope
mov
enter
clc
jg
inc
movsl
jbe
cli
repnz
dec
adc
pop
lock
in
xchg
inc
mov
orl
or
call
inc
xchg
or
scas
icebp
adc
hlt
dec
subl
jge
scas
adc
adc
xchg
or
pushf
data16
adc
in
cmp
js
leave
xchg
ffree
and
aaa
xlat
inc
mov
adc
js
jmp
jbe
test
push
ds
cwtl
jo
sbb
push
in
cmp
push
jno
cmp
inc
rol
and
fisttpll
shlb
lar
daa
rorl
repz
pop
cmp
les
fwait
insb
popa
dec
sbb
int3
loopne
pop
inc
testb
in
inc
mov
xorl
out
or
mov
out
sbb
pop
push
lods
es
sub
fs
ds
movsb
mov
pop
out
mov
dec
and
mov
push
gs
ljmp
hlt
push
repz
jne
sub
xchg
inc
mov
cmp
jne
push
scas
pusha
into
sbb
clc
lods
es
mov
push
mov
pushf
mov
push
cmp
outsb
cli
xor
mov
mov
push
push
mov
icebp
lret
nop
clc
into
pop
jo
icebp
and
mov
loop
rolb
mov
xchg
stc
into
xchg
shl
ficoms
pusha
push
dec
outsl
js
jp
stos
push
inc
test
iret
push
sti
mov
mov
shl
mov
pusha
add
lods
rorl
add
mov
inc
lret
mov
adc
mov
fs
clc
mov
jno
rcr
xchg
jmp
lahf
clc
mov
int
cmp
cli
es
call
inc
xlat
push
scas
lret
pop
sbb
mov
push
in
repnz
sarl
inc
and
cmp
adc
xchg
pop
mov
test
push
dec
pop
pop
test
jle
outsb
mov
cltd
xchg
push
cld
xor
push
mov
lret
mov
fsubl
lods
mov
dec
sbb
cmp
jle
popf
inc
push
xchg
sbb
clc
push
lahf
jnp
pushf
in
lds
add
xchg
add
push
pushf
jne
scas
mov
jo
push
fpatan
mov
je
int3
or
fldenv
sahf
les
stc
sub
xlat
push
cwtl
and
cmp
andl
cmp
lods
out
lods
je
movl
sar
sahf
fldcw
pop
lods
ret
and
and
xor
rcl
mov
add
xchg
jbe
or
sbbl
call
pop
jo
inc
je
test
xor
cwtl
call
xor
add
add
and
inc
call
sbbl
int
cmc
cld
fldt
dec
mov
popa
fcomi
jmp
adc
cmpsb
or
movb
and
repz
jae
mov
adc
push
out
rdpmc
dec
dec
push
lds
xor
or
mov
shll
lds
mov
outsb
sub
xchg
xor
out
inc
jbe
stos
or
jmp
sub
ja
inc
jo
std
pusha
daa
dec
int
lds
pop
ror
test
into
mov
push
lock
in
into
rorl
ret
enter
push
mov
bnd
jmp
fnstsw
pop
push
movsb
push
sbb
hlt
mov
outsb
inc
call
inc
pop
gs
ret
es
inc
fdivrs
cld
or
cmp
dec
adc
aam
cwtl
std
mov
cmpsb
push
lcall
in
fs
divl
xor
xchg
mov
rorb
pop
xor
into
cwtl
xchg
dec
sub
push
ret
add
mov
cli
push
inc
sub
cmp
xchg
add
test
jo
subl
dec
orb
imul
in
push
adc
pop
dec
leave
and
mov
mov
mov
pop
pop
stos
bound
jae
and
imul
sub
cmpsb
out
xchg
dec
push
ret
dec
jge
push
into
popa
insb
sub
cmc
fdivs
xorl
sub
and
cmp
testb
dec
rorb
xor
in
pop
insb
mov
mov
sbb
ror
add
hlt
and
stos
sub
adc
push
repnz
mov
fldt
int3
jae
sub
aas
int
cmp
cs
addr16
int3
scas
xchg
orb
aas
cli
mov
out
hlt
add
and
in
mov
sahf
xor
fld
sahf
into
or
mov
shlb
fists
std
xchg
sahf
inc
xor
out
test
mov
lock
cmp
xor
xchg
sub
push
sbb
cmpl
xchg
mov
das
hlt
fidivs
loope
jp
jae
daa
xor
aaa
jnp
jne
sub
inc
jnp
lcall
or
push
mov
sub
dec
and
icebp
lds
sub
movsb
hlt
and
dec
int3
inc
jb
cmp
addr16
dec
rclb
rolb
fisttps
sbb
sub
xchg
sbbl
in
sub
shll
popf
out
mov
sbb
mov
dec
xchg
push
mov
les
xor
in
add
out
std
stos
pusha
das
repnz
or
icebp
cmc
mov
mov
popa
and
fbstp
jmp
jle
fldt
xchg
mov
in
lret
jle
mov
jne
lahf
sub
ret
leave
je
inc
movsb
ficompl
push
mov
jmp
repz
bound
cmp
mov
xor
mov
movsl
mov
push
dec
hlt
sbb
outsl
mov
xchg
or
in
pop
xor
aad
cld
and
mov
loopne
and
sbb
popa
rcr
adcl
iret
lods
dec
adc
pop
sub
stos
imul
xchg
stos
sub
outsb
ret
fmuls
jo
inc
mov
loop
push
xor
sbb
idivl
mov
add
add
mov
popa
jge
lods
mov
lock
test
pop
dec
jae
std
jge
scas
insb
mov
dec
mov
out
pop
mov
fisubrs
pop
jecxz
cmp
push
loope
ja
mov
movsb
pop
fistps
pop
jl
and
sub
xor
adc
filds
sub
mov
test
xchg
pushf
xchg
ljmp
jp
push
sti
lret
add
nop
xchg
jmp
mov
outsl
stc
js
xchg
pushf
arpl
add
jmp
and
arpl
push
xor
in
repz
dec
pop
outsb
lds
pop
shr
dec
lea
dec
mov
adc
repz
lret
inc
sub
sub
adc
enter
sbb
rol
das
dec
sti
push
adc
push
bound
cmc
arpl
roll
scas
mov
out
dec
xchg
push
sarl
mov
ret
xchg
adc
or
test
div
mov
xchg
lock
or
out
pop
jmp
mov
add
sub
into
add
icebp
cs
lds
push
out
jnp
int3
jbe
les
cmp
xor
fs
adc
inc
cmp
incl
sub
and
imul
fidivl
adc
push
fcom
jb
stc
mov
push
push
pop
mov
push
mov
pandn
add
jmp
test
jp
fisubrl
jl
cltd
sbb
fisubl
or
sub
aaa
fcomps
xchg
neg
cmp
pop
sbb
mov
push
cmc
inc
add
sbb
mov
sti
lahf
cmp
outsl
fcoms
inc
int3
cmp
add
cmp
sbb
mov
xchg
pop
or
das
push
adc
add
sarb
or
mov
and
jo
jl
adc
insl
or
xor
lods
add
pop
filds
faddp
xlat
mov
movsl
ror
push
cmpsl
or
sub
lea
dec
mov
xchg
push
mov
out
mov
into
push
cmp
sar
pop
cli
test
in
fisttpll
cmpsl
ljmp
mov
mov
incl
shlb
cmp
cld
add
sbb
lret
mov
rcrb
pop
jae
cltd
popa
push
xor
loop
out
cmp
mov
inc
in
sbb
loopne
outsb
sub
ss
loop
adcb
pop
aam
cltd
pop
cmp
movsb
mov
call
adc
xchg
lods
pop
loopne
into
aam
add
shlb
scas
jge
rcl
aad
dec
daa
cs
add
in
leave
mov
mov
pop
jl
add
push
push
shrl
push
ret
into
push
xchg
and
add
in
pop
mov
push
cli
movsb
pop
mov
das
lods
adc
scas
add
push
mov
sbb
outsl
push
pop
push
outsb
rclb
addl
test
adc
fcomi
pusha
out
jns
jecxz
adc
insl
dec
adc
cmp
test
scas
rorb
mov
fmuls
or
iret
test
pop
scas
ret
mov
jle
movsl
ret
in
sbb
adc
mov
push
jne
push
ror
iret
in
sarb
dec
loop
stc
mov
or
sbb
andb
fldcw
sti
and
neg
ret
outsb
inc
inc
arpl
in
inc
daa
jmp
mov
xchg
int
mov
push
sbbb
outsb
out
inc
and
or
pusha
mov
lcall
xchg
cltd
imul
cld
iret
push
inc
jmp
scas
cld
xor
int
rcr
cmp
je
stc
sbb
dec
cs
push
jmp
xor
out
rol
aas
jb
mov
les
mov
pusha
sub
sbb
mov
les
push
clc
rcr
inc
pop
and
push
repz
test
jnp
xlat
sbb
into
dec
imul
lds
stc
push
ljmp
or
jns
test
or
push
mov
scas
xchg
and
fsubrl
gs
xor
adc
mov
mov
sbb
pop
test
mov
pop
int3
shl
je,pn
int
jge
mov
scas
rorl
sub
xchg
jno
sti
sbb
repz
shll
dec
adc
das
cli
push
gs
mov
jbe
mov
mov
push
sti
imul
rorb
pop
jmp
lds
cld
ds
testl
cltd
xor
rorb
and
imul
cmp
cmp
insb
testb
and
in
call
sub
cmpsb
and
inc
mov
fstpt
inc
jns
dec
add
faddp
hlt
ss
or
jo
iret
xor
popf
ret
jp
and
inc
outsl
sbb
repz
enter
mov
jge
and
sub
ja
mov
repz
gs
jmp
fcompl
cmp
clc
insb
cwtl
mov
call
gs
dec
out
add
fldt
ds
lcall
outsb
stos
mov
mov
push
or
push
out
adc
bound
inc
nop
enter
adc
out
enter
lds
add
testb
sub
xchg
xchg
icebp
push
cltd
comiss
out
scas
fbld
cltd
sahf
mov
or
lock
out
xorb
mov
aad
sub
pop
push
clc
dec
filds
cmpsl
insl
mov
fsubs
push
es
ds
xor
hlt
shlb
dec
adc
inc
js
loope
push
hlt
je
inc
push
iret
fldenv
xlat
cld
xor
lret
mov
push
cs
push
cmovle
dec
dec
jg
dec
cmc
and
dec
jnp
ret
pop
mov
nop
cmp
rcrl
push
popf
pop
aas
add
les
dec
out
pop
loope
sub
cmp
pusha
dec
hlt
shl
mov
sbb
call
push
test
push
or
sbb
cmp
daa
pop
ds
daa
movsl
int3
ret
xchg
mov
cli
pop
jmp
mov
add
mov
adc
dec
nop
loopne
mov
popf
ret
enter
inc
dec
mov
aam
jno
jae
sbb
or
pop
jle
pop
aaa
cli
test
or
in
sbbb
mov
pop
pop
sarb
xchg
mov
ljmp
mov
xchg
bound
mov
add
fiaddl
pushl
cwtl
push
sub
imul
or
cmp
sarl
rcrl
adc
push
std
test
inc
jne
mov
dec
mov
pop
xor
das
jne
push
mov
inc
xchg
int
mov
mov
clc
outsl
cmpsl
xchg
fwait
pop
stos
pop
or
lahf
cmp
or
mov
and
lret
jge
jmp
out
shll
push
iret
push
push
xchg
enter
or
shrl
scas
imul
xor
push
aaa
pop
insb
sti
pop
cs
adc
aas
sub
inc
std
push
mov
jle
xlat
push
js
and
pop
sahf
inc
aaa
cmp
mov
outsb
insl
test
mov
decb
inc
mov
gs
hlt
inc
test
arpl
push
lcall
add
cmp
mov
xor
popf
sbb
lret
mov
push
adc
mov
push
mov
dec
push
adc
stc
jecxz
aas
xchg
pop
jp
in
mov
aas
pop
arpl
stos
syscall
push
mov
mov
and
es
jae
test
mov
xchg
lea
mov
sub
xchg
insl
dec
jns
dec
ret
pop
ficomps
in
xor
xor
adc
repnz
jb
fists
cli
cwtl
jbe
dec
push
test
movsb
out
mov
int3
jmp
cmp
stos
mov
or
xor
fadds
add
jb
adc
stos
testl
in
push
sub
mov
int
scas
imul
movsl
jns
aas
and
xchg
fwait
mov
sbb
addl
cmc
in
xor
mov
mov
cli
push
aaa
std
call
js
pop
imul
sub
js
or
jnp
decl
and
in
enter
adc
insl
mov
xchg
imul
ret
arpl
scas
imul
loope
mov
stc
aad
lahf
jne
push
adc
rclb
push
cmp
lret
imul
out
lret
jmp
movsb
das
test
mov
pop
std
test
cmp
push
fidivrl
or
nop
dec
sub
int3
xchg
sahf
xor
jne
xchg
shll
ja
bound
pop
cmp
aas
add
mov
test
jne
inc
rolb
sahf
xchg
outsb
outsl
jbe
inc
mov
fbld
pop
mov
lahf
aaa
xor
or
pop
std
sbb
popf
incl
fnstsw
sti
sub
aam
cmp
cmp
bound
pop
icebp
mov
clc
pop
arpl
iret
adcb
push
hlt
sub
mov
sbb
inc
fs
or
js
cmpsb
out
xchg
sarb
or
mov
ret
cli
jecxz
push
sub
out
pop
aad
inc
adc
std
inc
push
xchg
cmc
mov
dec
lods
lock
and
loop
dec
clc
sub
int
pop
lock
sbb
mov
sub
add
icebp
popf
add
dec
push
test
mov
and
aaa
stc
inc
addr16
pop
jno
scas
jnp
mov
popf
jmp
add
xor
pop
push
jno
xor
jne
fbld
out
xor
sbb
fimull
and
pop
pop
jns
fcos
enter
mov
mov
pop
mov
orl
insl
into
mov
dec
jl
test
out
cmp
adc
jno
dec
jbe
jmp
pop
outsl
xorl
jbe
test
sub
idivb
rcrb
mov
and
mov
fbstp
popa
sahf
insb
jge
arpl
jno
and
push
lahf
mov
pop
xor
inc
dec
subl
jmp
inc
sub
ficomps
idivb
adc
jl
jns
adc
rcrb
loope
cmpsl
push
ficomps
orb
lods
call
inc
dec
clc
test
xchg
into
aaa
cmpsb
popa
cmp
pop
repz
test
outsl
incb
cmp
inc
in
mov
push
gs
pop
rclb
and
aas
mov
dec
cmpsb
js
cmpsl
lods
shll
inc
out
pop
pop
xor
push
push
sbb
in
sahf
test
and
in
add
js
xor
mov
fadds
aad
xchg
mov
mov
scas
inc
mov
imul
shll
enter
scas
ret
inc
jmp
clc
adc
shrl
imul
sub
lahf
cld
insb
scas
out
rcl
push
cltd
clc
push
or
sbb
push
push
pop
mov
dec
pushf
fbstp
xor
mov
fiadds
leave
or
shrl
inc
jge
and
out
aam
jno
mov
ret
jle
sbb
sti
sub
cmp
ljmp
push
dec
clc
sub
lcallw
sarl
pusha
pop
cmpsl
fildll
mov
lea
fcomp
pop
mov
dec
pop
mov
rolb
es
cmp
das
fisubs
dec
xor
adc
popf
cmp
icebp
mov
dec
daa
sub
out
cmpb
out
xor
mov
dec
and
inc
loop
sbb
dec
andl
daa
sub
mov
sbb
test
imul
lcall
push
cs
subb
aas
dec
adc
imull
push
adc
jae
lahf
sahf
pop
cmpsl
push
imul
scas
push
jns
jmp
mov
adc
mov
pusha
and
pop
adc
xchg
divb
sbb
push
jae
stc
pushf
mov
ret
mov
loope
dec
mov
ds
pop
inc
mov
les
cmp
pop
into
mov
xor
pop
and
push
pop
jbe
mov
jge
cmp
ret
fbld
inc
out
push
mov
mov
inc
cs
mov
inc
ret
xchg
sbb
sub
xor
loop
cmpsl
xchg
popa
popf
cmp
push
or
ret
daa
add
int
dec
fwait
adc
imul
mov
dec
lock
subb
lret
dec
mov
fld1
xchg
mov
jmp
dec
sbb
jo
out
fldt
or
cmpl
gs
mov
stos
lahf
xchg
sub
arpl
pop
mov
xchg
imul
jb
sarb
es
test
loopne
sub
jle
stos
mov
sarl
inc
mov
ss
sbb
push
test
out
push
outsl
cmpsb
notl
push
push
ds
in
repz
imul
subl
mov
fstps
stos
fs
push
push
cwtl
jmp
call
xchg
je
jecxz
fdivrp
and
and
push
ja
cmc
bound
add
shrl
cmp
xor
adc
loopne
fwait
out
pop
std
inc
std
mov
inc
dec
outsl
mov
aas
sarl
inc
lods
push
mov
mov
cmp
cmp
xchg
xchg
lods
mov
ret
hlt
in
out
sbb
inc
xchg
add
xor
cwtl
mov
shrl
out
cmp
xor
insb
jle
fs
mov
cld
inc
jno
aaa
sbb
dec
lock
mov
insl
adc
cmp
cmp
aaa
mov
lods
loop
das
mov
ljmp
xor
fstpt
push
jb
add
shll
jb
cmc
jns
sti
loopne
push
mov
push
add
push
daa
dec
xlat
cltd
push
jns
div
rcr
out
loopne
xor
cmp
mov
lock
jmp
dec
sarl
lock
sub
jmp
cmp
cmpsb
or
mov
ret
dec
and
add
int
mov
xchg
in
xor
xor
inc
test
aam
daa
inc
outsb
lret
xchg
popf
and
imul
icebp
and
imul
pop
and
int3
test
sbb
sbb
test
lea
sub
pop
xchg
repnz
push
push
push
and
test
dec
mov
push
xchg
dec
xlat
addr16
mov
or
or
push
xor
fucomi
adc
mov
out
push
fsubrs
out
popa
addr16
dec
aaa
lcall
mov
xorb
dec
inc
unpckhps
addr16
pop
adc
or
jg
xor
inc
bound
jle
inc
xchg
pop
popa
xchg
es
ja
cmp
mov
push
insb
cli
cmpsb
pop
out
daa
scas
stos
stos
and
lock
fs
mov
fwait
adc
inc
pop
mov
or
cs
xor
lods
nop
sub
in
ja
and
adc
mov
and
xchg
test
adc
push
fists
xor
aas
repnz
movsl
lret
mov
inc
jecxz
mov
insl
popa
cmp
mov
shll
push
jnp
pop
pop
sbb
xor
in
outsb
shlb
aaa
pop
cli
gs
in
pusha
mov
mov
shrb
or
fidivrs
jb
popf
mov
adc
imul
xchg
out
cmp
stos
arpl
lds
lods
sbb
push
out
and
dec
xor
jp
loop
dec
mov
cltd
ljmp
pop
xor
xor
dec
loope
pop
icebp
icebp
mov
dec
ja
cmc
add
cmpsl
pop
or
icebp
cld
cmpsb
out
fiadds
xchg
and
imul
sbb
cmp
mov
xor
sahf
cmp
push
push
lcall
or
cmpb
add
xlat
jle
jb
loope
and
inc
stos
mov
jae
push
dec
out
fstl
fsubrs
add
shrl
outsl
sbb
iret
ret
test
fisubrs
and
push
dec
negb
adc
sbb
sbb
jo
dec
out
jb
ss
clc
xchg
js
gs
sbb
push
test
int
repnz
mov
popa
mov
sub
or
cmpsb
lock
inc
into
xorl
loope
subl
aad
inc
jg
out
cmp
push
cmpl
fsubrl
cmovne
mov
xor
loop
xlat
or
subb
jno
rcr
inc
xchg
outsl
lods
xor
roll
push
mov
xchg
fs
inc
scas
or
rolb
jne
mov
inc
pop
mov
jmp
shlb
mov
popf
xchg
add
jecxz
out
cmc
int3
movsb
sub
sub
stos
sar
cmpsb
push
das
cmp
test
xchg
xchg
xchg
fwait
mov
pop
cmp
lret
rorb
rorb
jl
cmpsl
ds
je
xor
hlt
dec
dec
das
and
rcrb
pop
and
insb
adc
pushw
mov
xchg
int3
cmp
mov
fildll
loope
fistpl
inc
dec
mov
adc
inc
ljmp
inc
stos
mov
push
cmp
cmpsb
sbb
mov
hlt
aam
push
pop
aam
aam
xor
push
inc
xchg
pop
pop
xchg
xchg
mov
pop
cmpsl
imul
and
fimuls
sti
sub
fidivl
jmp
jge
shrb
or
add
int
sub
lahf
ret
jnp
mov
stc
push
ret
inc
push
mov
adc
das
lods
sub
mov
mov
sti
outsb
lea
sub
dec
mov
out
frstor
push
push
lock
sbb
dec
jmp
adc
repnz
sahf
sub
cmp
cli
outsl
mulb
fbld
xchg
mov
pop
shrl
loopne
push
fcomps
jnp
dec
lock
fs
sbb
mov
xchg
test
and
movsb
xor
pop
dec
cs
fsubrl
xor
jecxz
push
xchg
add
sub
inc
stc
insl
pxor
jl
stos
xor
cmp
mov
ficompl
into
cmpsb
jmp
aad
sarl
cmpsb
inc
sbb
sbb
jo
in
push
aad
mov
test
dec
jmp
sti
sbb
mov
cmp
cmp
push
fwait
xchg
mov
stos
das
and
mov
je
pop
and
fidivs
jmp
push
test
adc
jecxz
aam
xchg
daa
popf
cs
cltd
sbb
mov
sub
inc
push
sub
ficoms
cmp
fisubl
cmpsl
mov
pushf
sbb
in
lret
sbb
inc
xchg
outsb
xchg
sub
aas
jmp
mov
xchg
movsb
inc
xor
cs
or
jns
push
adc
mov
pop
movsl
add
aas
mov
jp
cmpsb
cmc
cld
lods
or
adc
sbbl
lea
and
lods
cmp
and
push
out
dec
lret
lea
mov
pusha
mov
ja
je
aas
push
jmp
addr16
mov
out
mov
sbb
fwait
pushf
fs
shrb
add
fwait
cltd
lods
or
jge
in
and
adc
in
push
push
pop
bound
sahf
lea
add
test
adc
xchg
push
test
cld
xchg
icebp
aad
xchg
setp
xchg
pop
loop
xor
imul
ljmp
sbb
pushf
xchg
push
in
jge
cld
mov
inc
pusha
lea
mov
lods
jp
cmp
jo
dec
xchg
repnz
scas
mov
test
testb
insb
jge
jle
jg
jns
or
xchg
jns
jne
aaa
ret
push
dec
dec
mov
jno
out
add
jp
pop
or
and
bound
data16
jmp
insb
out
jno
and
out
pop
adc
inc
push
xchg
leave
cmpsl
cltd
cld
mov
dec
dec
jmp
mov
jne
in
das
orl
rcrb
sahf
imul
jle
sar
nop
lock
mov
loopne
shll
loopne
mov
push
fcomps
arpl
xor
cmp
jae
mov
repnz
imulb
pop
fildl
mov
lret
les
mov
add
dec
movsl
inc
out
mov
inc
jecxz
jle
repz
test
mov
loop
sbb
ss
and
mov
inc
sub
jecxz
mov
xchg
push
lds
fld
lds
jbe
lods
incl
imul
mov
cmpsl
in
mov
push
test
push
mov
test
xchg
roll
inc
hlt
jecxz
pop
jecxz
adc
jl
inc
orb
fsub
icebp
mov
xor
or
ds
movsb
fisttps
fdivr
dec
dec
iret
mov
adc
pop
mov
fldcw
je
stos
dec
and
ljmp
xor
adc
sub
es
nop
call
mov
pop
shlb
xchg
popf
popa
cmp
pop
jle
pop
adc
jne
xor
inc
add
test
imul
rorl
jge
dec
pop
mov
add
in
movsb
enter
imul
clc
mov
or
inc
iret
push
sub
rcl
mov
xchg
pushf
lahf
in
hlt
fabs
jle
and
mov
hlt
jle
mov
loop
cmp
xor
repz
cmc
addb
inc
sbb
aad
mov
cli
bound
sbb
insl
fstpl
jp
sub
add
fisubrs
pop
push
cmpl
int3
sahf
and
inc
outsb
inc
loope
push
xor
ds
icebp
loopne
or
std
iret
out
xor
fwait
cld
jl
ret
add
mov
lods
cltd
pop
adc
sbb
aam
sbb
test
mov
mov
jbe
sti
push
sbb
jle
pop
es
xchg
xor
push
je
mov
fisttpl
mov
fs
lahf
and
cmp
cmp
pop
lcall
cs
sub
sub
in
mov
add
pusha
test
mov
popa
and
pushaw
lcall
lcall
lahf
fs
pop
ljmp
push
ss
mov
mov
mov
sbb
mov
iret
inc
adc
or
out
jb
call
mov
sub
or
rsqrtps
jne
mov
push
push
jge
push
cmpsl
js
dec
jmp
jbe
rcrl
arpl
lret
loop
sahf
cmp
clc
inc
xchg
dec
push
cmp
xchg
fiaddl
sbb
in
movsl
subb
adc
iret
dec
stos
and
dec
sub
daa
fcomps
sar
inc
stc
inc
stos
fwait
mov
cmp
jno
sbb
iret
stos
dec
adc
pop
inc
dec
in
iret
jmp
in
mov
shlb
dec
dec
pop
dec
loope
mov
or
mov
xchg
push
jmp
sub
outsb
cmpb
sbbl
xchg
mov
push
sti
jmp
pop
mov
pop
mov
xchg
xor
mov
repz
cltd
pcmpeqw
daa
clc
in
cmp
arpl
sub
inc
cmc
js
jne
fmull
scas
mov
stc
rcl
shrl
mov
mov
add
pop
xor
jae
bound
add
add
cmp
push
mov
pop
leave
and
dec
cmp
es
cmp
push
sub
pop
sub
sub
repnz
mov
sbb
loop
cltd
rclb
ljmp
mov
mov
outsl
aas
negb
testl
mov
nop
lods
inc
shrl
cmc
adc
andl
push
inc
mov
or
jg
int3
xchg
pusha
push
cltd
stc
and
or
movsl
xchg
fstl
jecxz
cmpsb
mov
jnp
mov
push
mov
jb
sub
jecxz
mov
or
inc
out
lret
mov
fs
pop
jp
mov
xorl
sub
out
test
pop
cmp
clc
mov
push
fwait
mov
or
shr
adc
fiaddl
into
pop
mov
sub
xchg
jae
pop
outsl
fadd
in
mov
xor
mov
or
pop
cmp
scas
call
or
cmp
in
cli
jmp
jg
or
adc
cmc
sbb
sbb
lcall
push
pop
jl
mov
fs
jmp
adc
xchg
iret
outsl
pop
pop
std
push
xor
push
hlt
jl
adc
and
jecxz
sarl
shlb
add
jno
mov
lods
stc
sbb
mov
push
sub
sub
push
lret
adc
popf
dec
lods
es
shll
stc
lret
or
lret
aaa
push
loopne
fwait
push
addb
sti
fnstenv
sub
inc
pop
pop
jns
mov
rclb
jge
lret
mov
xchg
jge
xorl
data16
dec
cld
js
repz
mov
lods
dec
enter
out
mov
xor
inc
nop
cmpsb
iret
in
dec
gs
sub
shrb
mov
sbb
loope
mov
clc
out
dec
lret
push
enter
xchg
add
jecxz
mov
and
jbe
lods
out
sub
jecxz
popa
push
sbb
or
ljmp
inc
dec
pop
pop
cmc
inc
mov
push
xor
add
mov
sub
jo
cmp
jne
pop
fists
and
inc
movsb
leave
popf
lret
aam
lea
xchg
pop
pop
stc
lret
xor
into
sub
push
testl
pusha
jp
shll
xchg
xchg
jnp
mov
das
jae
push
jmp
inc
lret
or
or
jge
mov
xchg
aad
out
cmpsl
xor
fadds
sbb
sub
sub
inc
sti
or
int3
mov
out
lret
pop
or
inc
arpl
cmp
push
cmp
out
mov
ret
mov
mov
notl
cmpsl
sub
cs
fcmovne
jge
leave
scas
push
gs
mov
xor
pop
lahf
inc
sub
loope
lret
js
stc
stc
loop
cmpsl
mov
xchg
adc
outsl
shll
ja
xor
jp
lds
mov
mov
insl
push
addr16
daa
dec
jb
daa
test
arpl
lahf
leave
testl
stc
pop
dec
movsb
xchg
stc
jl
decb
inc
add
stc
les
pop
push
test
divb
pop
or
ret
jle
shl
pmuludq
out
sub
subl
pop
pop
jo
into
sub
popa
iret
pop
data16
mov
popf
cwtl
leave
xor
mov
into
adc
mov
mov
xor
and
mov
or
out
pushf
fstps
pop
mov
dec
adcb
cs
popf
xlat
fidivl
mov
sbb
cmpxchg
or
adc
rcrb
xor
pop
sahf
cmp
jg
inc
mov
pop
rclb
insb
scas
mov
mov
xchg
pop
jb
out
test
mov
neg
push
js
mov
fucomip
ljmp
mov
push
push
push
or
pop
imul
fidivl
sbb
sub
mov
jo
sbb
repz
push
movsb
dec
pavgw
sbbl
adc
call
mov
mov
and
pop
out
pop
stos
movsl
test
orb
or
mov
inc
and
cld
adc
xchg
xchg
push
test
adc
popa
cltd
aas
sti
loop
or
in
lret
in
dec
mov
mov
adc
into
bound
and
mov
jg
data16
clc
subl
ss
jb
jge
jns
icebp
push
add
test
outsl
xlat
mov
adcl
or
cmpsl
sbb
lods
adc
mov
xchg
mov
add
mov
sub
cmp
jmp
test
ficoml
dec
xor
jle
mov
popa
ret
pop
or
dec
ficomps
cmp
pop
add
mov
inc
dec
mov
and
jno
fcomps
test
fisubl
nop
xchg
push
jmp
or
lock
sub
lret
lar
daa
mov
test
push
pop
sarb
inc
fs
push
bound
jl
cmp
fimuls
aaa
lret
dec
imul
test
push
bswap
movsb
stos
dec
outsb
inc
mov
dec
out
xor
insl
and
inc
sbb
jne
pop
mov
jl
push
jmp
jbe
ss
dec
aad
out
jmp
mov
mov
clc
in
cmp
bound
xchg
xchg
into
dec
int
sti
mov
mov
pop
lea
pop
cmp
repnz
sub
jmp
test
cmp
push
hlt
mov
sub
inc
cmp
pop
inc
xchg
jb
cltd
adc
sub
inc
or
bound
cmp
mov
push
inc
inc
loope
and
cmp
dec
inc
push
cltd
add
in
outsl
loopne
scas
mov
and
sbb
pop
inc
pop
sbb
pop
movb
out
int3
loop
adc
lock
pop
pusha
std
dec
or
sub
out
add
xor
mov
adc
cld
inc
or
mov
pop
ljmp
mov
lods
stc
push
add
jge
xchg
pop
add
in
sub
add
das
imul
mov
mov
loopne
sub
sbb
mov
out
sbb
sbb
scas
lea
clc
cli
pushf
aas
mov
out
and
fadds
lods
aam
sub
pop
bound
dec
mov
mov
insl
mov
int3
pop
and
popa
scas
pop
int
mov
cmp
mov
cwtl
jmp
cltd
ss
mov
enter
jle
loop
jae
paddq
shll
test
jnp
sbb
sub
cmpsb
clc
lds
mov
outsl
sub
nop
fwait
jnp
stc
imul
dec
aam
ljmp
mov
ja
jne
and
xchg
scas
push
push
cmp
enter
xchg
ds
movsb
cmpsb
adc
xor
xchg
lret
pop
cmp
je
movsl
test
lcall
out
jge
scas
mov
std
cmp
fiadds
popa
add
jp
mov
pinsrw
sub
mov
test
stos
bswap
aam
in
leave
pop
cmp
ja
sahf
and
push
jecxz
pushf
inc
pop
imul
adc
ja
mov
cwtl
aaa
fdivr
popf
cmp
cmp
scas
test
inc
mov
pop
je
test
in
push
mov
lock
jmp
push
imul
cli
or
push
xchg
iret
push
mov
ja
ljmp
insb
dec
incb
xchg
ljmp
mov
jmp
mov
aam
outsl
movsb
xchg
dec
in
mov
cwtl
aas
cmp
push
inc
sbb
lret
iret
ljmp
imul
aaa
sbb
or
js
shlb
pop
in
into
repnz
les
test
and
das
in
rcr
inc
stos
pop
mov
xlat
movsb
cmp
cmp
aaa
xchg
xorl
add
sbb
shll
mov
mov
push
jne
icebp
push
or
jge
arpl
repz
shl
mov
aaa
adc
push
or
xorl
jne
jnp
xor
cmpsb
mov
loope
mov
jmp
dec
in
in
ljmp
outsb
and
out
insl
push
js
aaa
bnd
push
imul
inc
neg
cwtl
pop
cwtl
ljmp
push
jg
jl
jl
inc
scas
dec
cmp
push
lea
push
les
jl
push
jb
mov
in
sub
stc
mov
add
push
je
bound
push
hlt
fstpt
jp
ss
push
test
mov
fs
cmp
pop
das
popf
xlat
movsl
pop
js
test
pop
xor
fwait
inc
data16
mov
xor
ret
add
lock
iret
fs
dec
cmpsl
mov
xchg
mov
jmp
sahf
iret
hlt
out
mov
add
push
and
jne
mov
call
lods
pop
stos
mov
out
fwait
shrb
xchg
xor
xor
xor
inc
lret
lock
xchg
mov
xor
and
or
jecxz
xor
adc
mov
cwtl
iret
in
dec
jns
jle
pop
cmp
sub
cwtl
sbb
imul
xlat
loop
int
jns,pn
adc
sbb
cltd
shll
cmp
scas
mov
xchg
mov
mov
dec
bound
outsl
movsb
in
in
pusha
int
cs
pop
ss
xor
std
mov
out
and
aad
rcll
ljmp
cmp
data16
aas
in
sbb
add
dec
dec
mov
and
stc
loop
lods
ret
fbstp
in
ret
lds
add
int
cmpsb
jecxz
jbe
and
out
pop
pop
jno
arpl
and
xor
cmp
add
pop
push
outsb
pop
lods
ljmp
pop
rorb
pop
xchg
bound
pusha
pop
add
jmp
cli
stc
arpl
dec
cmpsb
jp
and
or
scas
stos
into
cmc
loop
stos
jae
shlb
or
cmp
test
mov
jb
xchg
mov
jns
inc
out
iret
jge
imul
jbe
or
fidivrs
mov
int
leave
int
repz
shlb
jo
sbb
jno
cltd
aad
cmp
int3
in
jle
push
mov
mov
fs
in
out
push
flds
loopne
xchg
fs
fs
scas
cmc
call
lods
push
subb
gs
mov
xchg
cmp
mov
jne
jmp
test
adc
xor
insb
mov
clc
adc
mov
inc
sbb
xchg
shrl
inc
daa
nop
xor
bswap
test
fldenv
mov
xchg
fistl
xchg
test
fs
leave
mov
scas
mov
into
jl
popa
xor
mov
ret
and
mov
scas
pop
or
adc
or
mov
adc
add
dec
in
daa
je
or
dec
cld
and
xchg
mov
add
orb
call
outsb
out
dec
and
mov
xor
and
cs
arpl
scas
inc
scas
cmp
pop
inc
mov
call
sub
cmp
bound
cmp
test
enter
call
fs
push
inc
clc
mov
and
in
mov
mov
add
lods
fcmovnbe
and
pop
jg
cmp
fdivrl
xor
jb
push
mov
jae
scas
test
iret
xchg
movsl
rcrl
mov
pop
xchg
daa
add
jmp
mov
aas
dec
decl
imul
cltd
in
gs
pop
aaa
cmp
pop
mov
cmpsl
sahf
test
int
adc
jmp
es
addr16
cmpsl
scas
xor
and
icebp
jne
mov
mov
lret
or
and
hlt
outsb
loopne
mov
scas
push
sbb
call
fstpt
pop
shll
fisubs
imul
leave
arpl
repnz
int3
mov
test
shll
dec
add
das
imul
ret
lcall
call
jns
sub
loop
or
mov
aam
lods
cmp
icebp
push
imul
sbb
cmp
lea
and
jge
adc
ljmp
xchg
mov
xchg
decl
js
jp
dec
mov
insb
xchg
xchg
sti
sbbb
add
cmp
push
and
scas
push
es
movsl
pop
dec
cmp
sub
xor
xor
lea
cli
pushf
rcll
ljmp
add
scas
push
sahf
sub
or
xchg
pop
out
sub
and
pop
loope
sarl
punpcklwd
jg
idiv
cmp
or
lret
aas
and
add
push
sti
xor
adc
push
in
ja
adc
sbb
inc
dec
das
ret
aas
fs
jp
sbb
enter
xor
mull
sarl
aam
mov
rorb
and
sbb
push
ss
pop
test
mov
cmp
aas
or
sub
mov
call
or
sub
push
mov
lahf
test
jb
shrb
fstpt
ljmp
scas
clc
shl
jmp
rcrb
inc
aas
out
test
lds
mov
mov
mov
push
mov
jno
iret
dec
sahf
imul
rcll
sub
jg
mov
std
or
push
pusha
xor
rcrl
mov
call
pop
insb
inc
test
fstl
adc
cltd
mov
mov
xor
adc
fidivs
push
sahf
add
pushl
popf
cwtl
fistps
pop
test
sarb
mov
dec
clc
ret
sub
mov
decl
insl
cli
outsb
repz
int3
mov
stos
scas
cli
lea
ss
inc
dec
in
pop
and
sub
cmp
cmp
inc
mov
lret
mov
negl
mov
out
jno
cmpsb
xchg
int3
adc
sbb
lahf
ljmp
xorl
lock
pop
add
stc
out
sub
pop
enter
mov
ss
inc
mov
mov
pop
es
jg
cltd
scas
mov
pop
mov
push
pop
mov
inc
mov
inc
adc
xchg
or
outsl
stos
movsb
cmc
ja
ss
negl
fcoms
add
sub
cmp
mov
insb
xor
push
mov
mov
cmpsl
mov
jnp
mov
mov
cmp
fnstcw
cmp
scas
ljmp
add
mov
es
push
data16
adc
cwtl
mov
xor
imul
call
cmpsl
test
dec
cmp
xchg
lret
and
movsl
dec
in
mov
jne
jne
mov
int3
test
arpl
sub
lds
bound
lods
dec
add
repnz
daa
div
fimuls
and
add
inc
sbb
dec
fcoml
test
imul
loope
cmpsl
inc
test
push
cltd
jno
sar
andl
or
cmpsb
lahf
adc
sub
cmp
and
inc
cli
mov
in
add
frstor
nop
mov
push
shr
xchg
push
les
scas
mov
xchg
push
cmp
inc
adc
out
mov
mov
sbb
adc
call
lret
dec
add
push
sub
sbb
incl
shlb
mov
push
out
xchg
outsb
nop
mov
into
fs
data16
mov
stos
pushf
sbb
mov
ret
push
loopne
roll
and
dec
cwtl
cmp
add
jle
jne
adc
dec
imul
rclb
call
push
add
mov
mov
jo
xor
fsubrs
jns
add
mov
jecxz
ds
xchg
iret
push
jbe
rcrb
int3
mov
and
jno
xor
fs
cmp
jne
test
out
iret
nop
adc
push
push
pop
popa
pop
pop
jae
sbb
push
aam
hlt
adc
sbb
mov
imul
xchg
and
pop
dec
dec
push
push
mov
dec
xor
negb
jp
dec
aas
aam
pop
addr16
mov
pop
dec
adc
adc
mov
mov
sbb
outsb
cmp
adcb
sahf
imul
mov
js
mov
sbb
sub
push
std
cmp
push
outsb
rcrb
dec
sub
cmp
mov
xchg
dec
add
fimuls
insl
stos
mov
jne
jns
movhps
mov
scas
xor
arpl
fldl
addr16
pop
mov
out
repz
and
xchg
cmp
popa
hlt
adc
pop
fcoms
lahf
mov
push
leave
adc
jnp
or
idivb
scas
aas
lds
notl
push
mov
ret
xchg
xor
push
ss
decb
inc
pop
pop
dec
and
push
repz
mov
jo
inc
xchg
fldt
inc
jns
int
mov
mov
cmp
js
scas
cli
mov
outsb
ret
sub
jno
and
jmp
loop
cmp
arpl
lahf
mov
test
jbe
push
iret
sbb
cmp
popf
frstor
inc
loop
lock
dec
sti
iret
push
mov
nop
cli
push
dec
hlt
dec
idivb
sub
push
or
dec
fs
shl
cli
fisubl
adc
shlb
pop
pusha
jmp
mov
lods
bound
sbb
sahf
inc
mov
dec
pop
insl
xlat
sti
fmul
fcompl
shll
inc
xchg
and
es
mov
shll
sbb
cmpsl
fistps
dec
push
mov
jmp
push
call
in
push
jno
lds
adc
jno
dec
mov
jne
movsb
in
pop
lock
pop
xor
push
movsb
cmp
repz
data16
sbb
and
es
imul
jl
inc
push
lret
mov
fiaddl
lds
orl
ja
pop
dec
imul
sti
push
int3
jp
std
ljmp
icebp
mov
jns
adc
xchg
mov
mov
rcrl
and
xchg
gs
xchg
jl
cmp
dec
fisttpll
setbe
leave
repz
add
dec
jp
cwtl
in
les
mov
mov
push
add
xor
and
cmp
xor
out
adcl
jge
push
xchg
outsb
mov
xor
loopne
out
decl
pop
lret
jb
dec
jne
icebp
mov
jb
or
imul
aas
mov
imul
pop
sbb
mov
test
shlb
mov
sub
iret
roll
cld
sbbl
addl
test
jnp
pop
dec
rolb
popf
xchg
add
fisttps
inc
pop
mov
jle
push
mov
ret
mov
push
push
scas
clc
mov
mov
dec
sahf
movsb
mov
mov
cmp
sbbb
mov
jne
mov
adc
lds
fildl
push
mov
add
popa
lds
jbe
mov
xor
jmp
cltd
inc
jb
xor
ss
push
cmp
xor
pusha
dec
outsb
mov
leave
push
xor
add
dec
icebp
jmp
xchg
sbb
imul
pusha
cmp
cmp
mov
imul
dec
fcmovb
pushf
cs
aas
cmpsb
sub
je
daa
cmpsb
call
aam
fildll
sub
or
jge
pushf
jge
inc
aam
hlt
mov
bound
jp
xchg
jle
push
stc
cmp
or
lea
mov
cmp
fistl
in
or
xchg
sbb
lods
inc
push
sub
shll
mov
insb
lods
jnp
jns
cmp
icebp
sbb
dec
and
notb
lret
sbb
cmpsb
push
arpl
pop
mov
dec
cmp
ficoms
cmpsb
js
ret
les
sbb
push
loopne
mov
push
sarb
fmulp
mov
pop
aad
cmp
test
xor
cmp
nop
aad
loope
push
lahf
dec
cmp
lea
mov
cmp
xchg
popa
xor
and
and
sub
push
mov
mov
inc
popl
lahf
add
aaa
fs
dec
mov
jecxz
repnz
in
xor
fldenv
and
xlat
in
xor
shr
mov
or
push
add
aaa
das
ret
repnz
sbb
jae
fsub
in
xchg
fadds
xor
sub
outsl
je
out
test
mov
xor
xchg
sub
lret
and
ret
mov
xchg
mov
xchg
xchg
jl
push
sub
xlat
call
out
les
xchg
subb
mov
outsl
repz
test
and
divb
shl
push
out
repnz
push
popa
xchg
js
push
sbb
or
mov
sti
mov
dec
dec
xorl
adc
pop
push
cmp
and
mov
and
mov
mov
fists
arpl
cltd
pop
mov
xchg
adc
dec
pop
out
scas
pop
lret
pop
push
cltd
les
push
stc
adc
std
push
cwtl
add
xor
adc
in
cmpb
loope
dec
cwtl
or
mov
and
movsl
loopne
jge
insb
add
inc
mov
pop
insb
test
out
xchg
add
data16
push
imul
sbb
xor
in
adc
or
xchg
out
push
jns
lcall
cmp
mov
sbb
xor
divb
popf
mov
push
pop
mov
int
adc
pop
mov
mov
jb
or
orl
adc
cmp
loope
pop
imul
insb
xor
mov
dec
or
xor
pop
enter
movsb
lret
and
jp
scas
pushf
call
out
sbb
xchg
inc
mov
repz
repnz
inc
outsl
add
cld
jns
movsl
shll
adc
jg
add
sub
hlt
fnstsw
dec
fadd
gs
sub
jl
pop
jne
mov
lea
lods
jl
in
mov
jns
pop
sub
std
sbb
push
mov
addl
fisubl
push
push
fwait
xor
lcall
push
or
jno,pt
pop
mov
ret
movl
push
or
inc
scas
data16
rcl
push
sub
inc
xchg
insl
cmp
in
stos
bswap
jmp
lds
sbb
push
xor
inc
mov
inc
std
sbb
pop
add
cli
cmp
dec
mov
or
adc
aam
adc
clc
aaa
popf
shrb
fwait
mov
int
cli
jmp
xor
mov
imul
xor
mov
push
adc
jb
push
flds
cmp
ror
mov
bound
mov
sub
adc
add
es
loope
xor
pop
sbb
mov
out
sub
cvtdq2ps
sbbl
movsb
mov
sub
mov
imulb
jmp
and
xchg
sbb
or
push
in
lock
xchg
sbb
or
int3
sbbl
jae
dec
mov
jne
add
jno
in
jo
pop
and
movsb
lcall
mov
cs
xor
or
lea
xor
les
push
sti
pop
mov
in
mov
jae
test
dec
mov
xor
add
lods
test
movsl
sub
xor
mov
iret
inc
mov
mov
push
leave
aas
test
test
loope
sti
inc
mov
sti
jbe
sti
mov
jle
testl
inc
mov
fsubrp
mov
sub
rorl
sub
mov
add
xor
bnd
lods
fs
mov
push
dec
subb
lret
and
mov
add
xchg
push
adc
and
push
lods
mov
ljmp
ret
cmpsl
add
mov
cs
push
stos
sbb
adc
cltd
dec
iret
sti
sarl
les
adc
sub
andb
sbb
pop
fsubs
call
xchg
cmpsb
mov
mov
pop
arpl
pop
in
mov
add
loop
mov
mov
jmp
stos
out
xchg
inc
loop
stos
adc
sub
pushf
or
sbb
mov
pop
lds
bound
shr
adc
dec
in
cmp
insb
push
jae
in
nop
and
cmp
lret
stos
add
or
xchg
subw
out
add
repz
push
jge
aas
xor
gs
and
ljmp
lea
stc
cs
sbb
je
sbb
sbb
popa
add
aaa
cmp
test
or
outsl
pushl
clc
jo
cld
add
add
enter
push
das
loope
nop
pop
pop
stos
mov
cwtl
stos
faddl
pop
imul
pop
and
out
mov
gs
inc
push
fidivs
jge
lods
mov
fstpt
sub
add
cmp
pop
mov
aaa
bnd
pop
mov
push
cli
push
sti
mov
xchg
and
mov
rcrl
xchg
jmp
hlt
insl
xchg
inc
jno
pop
stos
sbb
fdiv
sub
out
xchg
mov
push
mov
cmp
test
jl
sbb
jae
cmp
rol
inc
jno
popf
or
add
test
hlt
mov
fcmovu
jb
movsb
mov
ret
dec
xchg
and
daa
into
cli
pushf
xchg
and
mov
out
inc
icebp
imul
adc
fwait
cmp
cmp
stos
lahf
adc
mov
faddp
ja
inc
jmp
pop
mov
fiadds
mov
dec
pop
or
loop
lret
pop
int
and
cmp
jp
cmp
sarl
or
lds
fnstsw
testl
in
pop
lret
test
sub
outsb
and
filds
xor
xchg
add
push
sbb
cld
or
jp
jnp
shrb
mov
insb
ret
sti
popa
or
mov
xchg
fwait
in
or
inc
lods
ljmp
mov
push
xchg
lods
loop
pop
out
cmc
cmc
dec
and
adc
or
push
inc
setae
imull
or
mov
imul
dec
lea
faddl
adc
imul
xor
mov
mov
mov
jno
shll
pop
add
lss
mov
sub
mov
loopne
cli
dec
jle
cmp
mov
ss
pop
out
mov
jae
xor
sub
in
loope
add
movsl
xchg
ret
imul
lods
cmp
jmp
bound
sub
pop
mov
stos
fcomp
sub
cmp
jb
lret
aaa
ljmp
push
add
add
inc
adc
mov
xor
lret
xchg
ror
xor
in
rclb
mov
add
sbb
test
xchg
cmc
dec
ret
add
int3
cmc
pop
push
pop
or
xchg
pop
aas
add
dec
fisttps
sbb
dec
aad
aad
pop
mov
sub
insl
out
aas
sbb
dec
add
or
ret
pop
xchg
add
ja
push
xchg
flds
jae
ds
insl
daa
shlb
mov
inc
sub
sbb
pushf
jg
adc
lahf
pop
mov
xchg
sbb
aam
fcmovbe
and
mov
clc
lret
cmpsb
and
sub
inc
cmp
cs
loopne
push
sbb
push
out
fucomip
arpl
add
or
inc
int3
pusha
xchg
mov
int
or
inc
js
dec
or
jecxz
stos
jae
xlat
jnp
test
pop
cmp
or
inc
int3
mov
shlb
push
cli
fisubrl
sbb
jp
fistl
or
sbb
jp
push
xor
adc
xor
inc
jp
mov
lods
out
jno
pop
dec
sarb
sbb
adc
mov
xor
mov
scas
mov
test
add
jle
mov
fidivs
xor
push
push
dec
pop
xor
add
shrb
push
pop
or
mov
dec
add
fcmovne
mov
jnp
inc
loope
add
ret
orl
jmp
or
cmp
test
sbb
lds
pop
inc
push
push
ret
mov
inc
adc
dec
xchg
mov
push
push
movsb
cltd
jne
jle
ret
psllw
pusha
cmc
push
scas
sbb
sar
lret
rcrl
sbb
ljmp
or
iret
xchg
xlat
loope
test
outsl
inc
negb
and
scas
sub
or
orb
cmc
pop
push
ss
movsb
in
sub
xor
or
loope
ljmp
sbb
xchg
out
sub
lahf
xchg
test
jne
out
jmp
scas
int3
add
or
jo
inc
adcb
repz
and
loop
mov
sti
jecxz
adc
mov
mov
scas
aaa
test
mov
cmc
xchg
out
iret
inc
imul
aad
inc
sbb
lcall
mov
outsl
enter
hlt
lahf
sbb
mov
loope
and
in
leave
add
cmp
adc
xchg
ret
aad
xor
xor
mov
dec
cwtl
push
mov
or
shrb
mov
ljmp
lret
pop
cs
pop
sbb
sbb
jle
pop
aaa
lcall
jmp
daa
mov
xlat
push
leave
xchg
jge
push
xor
nop
add
inc
inc
sub
xor
out
fdivl
subl
sbb
push
loope
insb
add
aaa
testl
sbb
inc
insb
jp
fwait
ror
lret
fcmovbe
orl
mov
xchg
out
ret
jmp
pop
std
bound
pop
dec
mov
scas
mov
jp
and
repz
cmp
popa
addb
sub
cmp
dec
test
sarb
sar
jl
xchg
out
ss
call
notb
xchg
dec
loope,pt
mov
sub
scas
adc
into
fsubrs
xchg
divb
lahf
xor
xchg
popa
ret
popf
sub
pop
sahf
movaps
mov
push
pop
or
es
push
and
mov
cmc
cs
and
ja
daa
cmpsl
fsubrl
add
dec
loop
popa
das
and
pop
pushf
mov
pushf
mov
jno
fidivrs
bound
mov
xchg
or
adc
pop
dec
or
mov
stc
mov
loope
popf
cwtl
das
cmpsb
scas
imul
cmovbe
testl
jne
out
dec
sbb
out
stc
rorl
popf
xchg
loope
into
mov
hlt
lret
jbe
inc
fnstsw
pop
mov
and
sbb
test
mov
dec
idivl
pop
mov
test
fsubl
add
rorb
adc
clc
cmp
sub
push
sbb
mov
sbb
in
popf
lea
ja
mov
sub
inc
fcoml
xchg
mov
jb
lcall
sub
cltd
xor
jp
lock
jnp
rolw
pop
movsl
bound
push
js
imul
xor
sbb
insb
sbb
xchg
mov
pop
and
repnz
outsb
scas
outsb
or
or
dec
dec
inc
xor
adc
inc
lods
shll
adc
push
out
or
or
pushf
jl
and
sbb
lcall
into
lods
inc
loopne
das
andb
fcompl
pop
add
gs
xchg
orl
notl
aam
jae
fists
out
aas
js,pn
incb
fnstenv
jmp
push
cli
mov
dec
adc
fwait
and
xor
adc
cmpsb
pop
ret
loope
mov
xor
ds
inc
jecxz
outsl
jne
shll
popa
pop
pop
or
repnz
pop
or
rcrl
dec
dec
xor
cli
mov
pop
cmpsb
dec
cmpsb
pop
jno
inc
cs
add
cs
push
repnz
jb
movsb
inc
xchg
and
jns
stos
rcll
jno
xchg
and
pop
adc
inc
xchg
loope
jl
mov
sub
push
sbb
sub
cld
or
test
dec
int3
popa
cmpb
mov
cmp
adc
dec
test
push
fdivrs
and
jns
lret
pop
repnz
fdivl
idiv
and
js
inc
loop
inc
mov
in
push
js
and
scas
mov
xor
mov
cmp
mov
orl
or
addb
xlat
push
sbbb
cld
mov
mov
mov
mov
sbb
pop
push
ja
lea
dec
cmpsl
pushf
xchg
xlat
cmp
xchg
addr16
push
fcmovne
rcl
cmpsb
sbb
nop
sub
add
jnp
jbe,pn
leave
insb
dec
divl
mov
sbb
in
stos
jp
sbb
sub
xor
inc
adc
add
stc
test
push
lock
insb
mov
push
enter
or
cmp
xchg
aaa
insl
repz
xchg
call
pop
mov
sahf
push
push
popl
pusha
movsb
push
xor
stos
dec
ret
mov
nop
negl
jno
ret
mov
and
imul
adc
mov
lea
sbb
daa
cs
outsl
rcr
adc
dec
jg
inc
add
mov
dec
adc
push
int
mov
mov
mov
jbe
lea
push
jno
pop
testb
aaa
add
push
jp
dec
xchg
adc
inc
adc
xor
adc
dec
lea
push
sbb
dec
add
bound
shl
loopne
cltd
aaa
xchg
int
in
push
adc
mov
cmp
fcompp
test
push
leave
enter
cld
rorl
jge
inc
int3
pop
pop
xor
scas
dec
movsb
or
push
ret
scas
mov
wrmsr
dec
xchg
push
icebp
dec
insl
mov
into
lcall
inc
mov
push
cmp
sub
addl
rolb
dec
and
cmp
dec
scas
sbb
adcl
es
pop
cmc
scas
cwtl
push
xor
dec
mov
xchg
push
cmpsb
jae
xor
lods
jne
movsl
ret
sub
xor
aaa
data16
jp
sbb
mov
outsl
xchg
pop
mov
xor
dec
les
add
pop
xlat
add
dec
push
hlt
stos
loopne
pop
inc
inc
imul
jbe
pop
cmc
loopne
push
mov
cmp
xchg
sub
dec
out
nop
fs
jno
fwait
in
subb
mov
dec
aaa
aad
lock
cmpsb
es
jo
mov
mov
or
cmp
cmp
test
test
mov
dec
lret
cmpsl
adc
mov
cmp
or
sbb
out
divb
sbb
nop
lods
pusha
push
mov
rcll
inc
rol
fsubrs
cmp
jnp
mov
mov
es
mov
inc
mov
ret
and
fdiv
mov
dec
push
lcall
pop
sub
idiv
lds
mov
mov
inc
cld
mov
and
ja
jmp
dec
fiaddl
leave
push
lcall
ss
aam
and
stos
cwtl
cmp
pop
jmp
addr16
test
pop
das
dec
jp
adc
dec
push
cmpb
xchg
fstpt
jo
mov
sub
rorl
cli
push
movsb
fs
jle
jbe
adc
pop
cmp
cmp
jecxz
jnp
movsb
sar
jmp
push
push
rol
out
out
je
sub
dec
sbb
dec
push
bound
push
addr16
je
lods
test
inc
movsb
mov
add
lea
mov
rcrl
push
lods
dec
incl
jmp
or
push
cmp
das
fistps
mov
adc
xor
dec
outsl
mov
sbb
imul
imul
jae
enter
cmp
mov
in
lahf
out
dec
rcrl
sub
mov
mov
movsb
xorl
outsb
insl
rclb
xchg
pop
xor
aam
ss
cmp
jl
sbb
sbb
push
jno
pushf
fs
xchg
test
test
in
not
aaa
adc
enter
xchg
or
jmp
cmp
jae
mov
xor
or
pop
jecxz
call
pop
adc
mov
test
sbb
ss
repz
add
mov
jmp
push
mov
mov
inc
cmc
xchg
jmp
pop
xor
cmpsb
or
mov
xchg
cmpsl
dec
mov
pop
inc
sahf
xor
clc
in
mov
xchg
or
mov
push
pop
jnp
sub
std
mov
movsl
xchg
and
mov
dec
pop
xor
out
cmp
rcll
fwait
sbbb
test
jo
lds
sub
pcmpgtd
push
mov
and
enter
jne
xorl
enter
stc
lret
das
pop
sbb
fwait
pushl
sub
or
xchg
int
cmp
mov
mov
enter
repnz
adc
dec
fistpll
call
sqrtps
lret
jno
mov
fs
stos
lods
dec
push
out
popl
sahf
mov
js
in
dec
sbb
or
mov
push
and
repz
aad
sbb
enter
sbbb
and
pop
mov
pop
and
stos
pusha
scas
or
xchg
and
call
js
xchg
cs
gs
orb
rcrl
es
inc
sbb
dec
cmp
push
inc
insb
es
fcomps
js
rcrl
xor
sub
dec
or
int
mov
fdivrs
dec
push
cltd
cltd
sub
mov
mov
pop
push
push
xchg
ret
aaa
pop
call
cltd
or
and
fmulp
iret
add
mov
fistps
daa
push
stos
inc
sbb
mov
in
pop
xchg
iret
pop
arpl
inc
dec
repnz
repnz
ds
jae
mov
in
scas
xor
repnz
int
adc
fisubs
je
mov
inc
cltd
mov
shlb
fstps
inc
mov
cld
out
sbb
xlat
lea
mov
or
xchg
jo
add
mov
test
cli
xor
fldenv
dec
sbb
add
sbb
cmc
push
push
daa
xchg
mov
dec
fs
sub
or
icebp
mov
pop
aaa
ja
or
mov
jle
sbbl
lcall
test
out
push
fcmovnu
les
cmp
cmp
outsb
and
test
sbb
loop
aas
dec
pop
mov
movsb
mov
daa
fucompp
dec
xlat
xor
mov
inc
out
sbb
push
sub
mov
test
loopne
and
cmp
inc
lret
add
cmp
rcr
sub
fisttps
dec
shll
cmp
clc
jo
cmp
pop
cmp
popl
jmp
xlat
dec
push
add
gs
lret
mov
hlt
popf
push
sbb
nop
push
fcmovu
in
ja
movsl
in
pop
jg
sbb
mov
fcmove
rol
sub
mov
bound
rcl
inc
loopne
shlb
ljmp
es
jmp
jbe
mov
in
push
fucomp
and
stos
mov
mov
jae
mov
push
or
mov
aas
adc
sbb
and
or
mov
out
test
mov
xchg
pop
lods
sub
subl
pop
and
xor
lds
stos
dec
popf
xchg
push
or
js
mov
cwtl
mov
popf
jl
mov
inc
enter
dec
mov
in
mov
and
out
xchg
fbstp
xor
sbb
adc
jp
in
xor
cwtl
jne
inc
pop
rcrb
mov
mov
out
fidivs
js
je
sbb
into
lret
xchg
inc
cs
sti
ja
push
and
sbb
sahf
push
xchg
or
fldcw
out
mov
hlt
int3
push
push
xchg
and
xchg
rolb
mov
test
call
mov
mov
inc
fsubl
mov
dec
push
mov
adc
mov
jno
xor
outsl
aad
jp
cmp
ja
fcmovnb
lods
mov
aam
hlt
xchg
dec
add
bound
roll
add
popa
inc
xor
inc
push
repz
fcompl
xchg
mov
add
cmpsl
lret
stos
aaa
in
sbb
aas
shll
pop
jo
je
into
xor
aad
fistpl
in
es
ret
jl
mov
or
push
ss
imul
fnstenv
lahf
popf
scas
cmpsl
jmp
xchg
rolb
es
cmpsb
loope
xlat
mov
out
shrb
sub
xchg
neg
imul
add
xlat
mov
data16
mov
mov
pop
fwait
sahf
movd
cmp
data16
sub
ret
cld
pop
add
and
lahf
dec
xor
jnp
sti
out
andl
pop
dec
pop
cmp
movsb
daa
cmpxchg
and
out
imul
rcrb
inc
paddusb
xchg
mov
mov
and
daa
fistpl
test
mov
adc
pop
xor
sbb
nop
lea
jecxz
xor
pop
adc
mov
pop
daa
pop
fidivrl
test
imul
roll
xchg
lahf
data16
adc
sahf
add
enter
add
push
dec
mov
sbb
and
lea
in
sub
shrb
scas
sahf
cmp
jbe
adc
pop
cmpb
fistpll
or
sub
insl
xchg
clc
inc
push
mov
xchg
push
dec
scas
iret
dec
pop
inc
push
dec
pop
or
and
push
arpl
add
ror
mov
test
in
cwtl
ljmp
dec
pushf
and
and
lods
loop
subl
mov
mov
dec
mov
push
and
neg
adc
mov
into
lock
fldcw
jne
and
outsw
mov
mov
mov
pop
dec
jl
aad
mull
sub
push
loop
and
xlat
and
out
xor
dec
cmc
lcall
pop
iret
mov
icebp
rcl
mov
cmp
push
jns
iret
loopne
das
notl
jmp
loopne,pn
or
push
add
cld
inc
clc
sub
cltd
aam
je
outsb
push
push
mov
icebp
add
pusha
test
outsb
lahf
pop
xchg
mov
mov
adc
scas
dec
push
in
pop
shll
imul
lea
or
inc
inc
mov
sub
xor
xor
inc
push
dec
mov
lds
lea
mov
sbb
mov
xor
lret
fists
shrb
pop
mov
jne
add
out
sbb
int3
xor
xor
das
and
push
insb
scas
shr
jae
mov
cmp
test
fcoms
test
or
mov
xor
cmpsl
loopne
mov
in
hlt
and
subb
push
negl
ficoms
xchg
jbe
loop
popf
mov
cmp
mov
call
jle
inc
sub
scas
es
repz
mov
xor
jne
enter
leave
mov
mov
inc
pushf
out
pop
nop
sbb
dec
movsb
cmpsl
ljmp
aas
in
or
cmp
adc
dec
stos
xor
and
aaa
aad
icebp
cmp
clc
nop
loopne
jne
jnp
addb
ja
mov
cmp
and
push
mov
aad
cmp
inc
adc
loop
xor
mov
fwait
push
bound
loop
mov
add
jp
test
js
jge
push
clc
mov
and
pop
push
mov
mov
filds
gs
lods
loop
cwtl
dec
hlt
shrl
arpl
ret
jmp
or
aad
add
mov
das
add
rcll
jg
or
loopne
sarl
movsb
push
cli
sbb
imul
cwtl
ret
add
aaa
mov
pop
mov
in
and
clc
int3
or
imul
mov
mov
das
test
xor
and
xor
sbb
rcrl
icebp
aad
repnz
insl
aas
insl
out
mov
xchg
push
lcall
xchg
iret
inc
fs
cmc
arpl
adc
lret
data16
sbbb
or
inc
mov
mov
lahf
or
nop
mov
les
cmp
arpl
jae
pusha
rcrl
sbb
and
sbb
dec
mov
decl
jl
mov
nop
adc
fldenv
jle
fwait
cmc
xchg
xlat
mov
xor
jecxz
imul
mov
dec
lds
rorl
add
outsb
mov
mov
int
xlat
pop
or
lods
jbe
mov
andl
pop
out
lods
fwait
mov
pushf
push
mov
dec
ljmp
shlb
addr16
jns
int
mov
ret
lods
dec
jmp
xchg
adc
loope
aam
es
and
in
dec
lcall
fsubl
pop
loop
push
xor
ja
cmp
mov
stos
or
mov
xor
xor
sub
lcall
in
out
nop
cli
loop
dec
mov
andb
mov
and
fdivrs
dec
adc
fsub
inc
jae
addl
out
inc
pop
mov
add
movsl
or
fstpt
jo,pt
fnstenv
out
pushl
jno
js
daa
paddb
icebp
inc
and
sub
mov
pop
ds
int3
jae
and
mov
pushf
int3
mov
dec
xchg
lds
test
lcall
inc
ss
add
mov
xchg
pop
cmp
xchg
push
dec
std
mov
imul
or
and
sbb
jmp
pop
inc
mov
scas
std
je
cmp
icebp
adc
sahf
adc
add
mov
pusha
and
test
bound
or
out
inc
data16
xchg
pushl
adc
cmp
mov
xchg
sub
adc
insl
test
xchg
or
cmp
jg
mov
jne
flds
icebp
add
or
clc
cli
out
sti
gs
scas
jg
push
pop
jle
jbe
divl
aaa
ja
dec
pop
mov
insl
sub
enter
pop
mov
addr16
xchg
dec
ljmp
pop
hlt
xchg
mov
pop
mov
xchg
aas
fdivrl
lret
cmp
cmpsb
divb
xor
dec
inc
or
or
mov
inc
cwtl
out
xor
push
inc
xor
popl
test
ret
and
mov
xorb
cs
rcl
mov
push
jb
inc
sbb
sbb
mov
push
dec
mov
adc
jns
imul
popa
pop
inc
add
adc
mov
lea
sub
inc
roll
orl
shlb
aad
push
push
sbb
pushf
add
cmp
loop
or
leave
inc
rorb
push
or
dec
or
loope
sub
xchg
dec
cmpl
inc
lret
call
repnz
push
push
bound
cmp
sti
adc
popl
sbb
int3
das
es
mov
pop
rolb
test
or
fadd
aas
addr16
pop
jnp
sar
mov
test
jge
adc
sbb
arpl
mov
out
psraw
push
add
mov
ja
icebp
mov
inc
sub
mov
jge
ret
mov
outsl
jnp
nop
das
add
hlt
daa
and
int3
pushf
xor
leave
pop
fcmove
mov
test
rcrb
cmp
in
aam
aad
and
mov
movsb
mov
mov
mov
push
gs
testl
test
insl
xchg
dec
scas
jae
lret
pop
addr16
mov
and
fstp
fmull
stos
xor
testl
mov
push
insl
cmp
mov
popa
lea
mov
inc
jae
dec
and
repnz
xchg
fidivrs
or
lcall
add
add
mov
repz
push
ret
cmpb
inc
cmc
lea
jg
iret
cmp
sbb
push
xchg
pushf
loopne
and
mov
test
outsl
inc
jb
or
shrb
and
xor
clc
xor
and
stc
fmull
bound
dec
cld
leave
fbld
dec
lods
mov
leave
add
daa
or
fcomps
push
add
ljmp
push
mov
loop
push
push
mov
lods
add
mov
mov
insl
sub
test
push
push
ret
cmp
ret
push
jmp
lods
repnz
test
scas
and
rclb
adc
addr16
ss
mov
mov
and
xor
punpckhwd
jno
sbb
add
add
sbb
or
push
mov
fstp
insl
idivl
jb
push
lea
pop
les
shrb
es
popa
push
sub
ss
jmp
pop
test
insb
aam
pop
xchg
push
push
cmc
sbb
xor
shr
push
test
hlt
jae
sub
sub
mov
pop
pop
mov
out
cmp
jno
mov
pop
pusha
lds
gs
sbb
mov
inc
xchg
lds
add
ja
xorb
add
idivl
lock
jno
pop
pop
loope
mov
les
sub
or
pop
addr16
popa
out
cmpb
fldenv
test
and
sub
sarb
inc
pusha
adc
or
xchg
sbb
jmp
pop
jo
sti
test
mov
inc
xchg
jno
ret
pop
je
loop
xor
faddl
pop
and
dec
sarl
mov
int
js
push
mov
mov
xchg
jo
ja
das
jb
add
or
cwtl
xchg
or
mov
shlb
mov
or
cmp
fisttps
ss
jge
push
aad
xor
adc
jbe
mov
mov
or
pop
mov
inc
loope
inc
and
mov
outsl
rcl
pop
lahf
fildll
mov
jbe
cmp
add
lods
test
stos
bound
sar
fimuls
int3
negl
xchg
mov
xchg
cmp
sub
mov
ret
dec
ja
aas
icebp
sbb
in
mov
fwait
int
mov
ja
popf
ret
mov
and
push
nop
inc
xchg
inc
cltd
xor
scas
lea
sub
je
ds
add
sbb
cs
imul
xchg
push
sahf
mov
mov
addb
mov
jns
push
or
mov
or
and
dec
out
lret
mov
inc
adc
or
jns
xor
xor
dec
leave
hlt
adc
mov
xor
mov
aad
xor
shrl
mov
movsb
insl
jge
and
outsl
mov
daa
jg
mov
das
negb
xor
adc
pusha
xchg
add
sub
sar
lret
xchg
pop
or
xchg
dec
cmp
pop
sahf
xchg
repnz
mov
sub
inc
mov
inc
test
adc
sub
mov
sbb
mov
cmp
jbe
cmp
dec
jb
leave
stos
adc
and
nop
arpl
sbb
nop
js
lds
xchg
xchg
inc
sahf
incb
popa
stos
jne
cmp
in
arpl
mov
pop
iret
cld
xor
sub
hlt
cmpsl
add
fmul
shrb
add
cmp
push
stc
jb
cwtl
sub
out
test
push
or
out
fnstsw
push
pcmpgtd
ret
test
or
mov
iret
in
pushf
cmc
jmp
mov
xchg
pop
xor
lcall
sbb
pushf
andb
cmpsl
inc
neg
dec
imul
out
je
fists
stos
add
jbe
dec
int3
xchg
push
fisttpll
insb
mov
cmc
xor
pusha
xchg
fdivr
dec
cmpsl
shlb
sbb
call
xor
xor
jl
mov
fs
pop
stos
xor
mov
jo
lahf
test
mov
fcoml
rcrb
in
adc
mov
into
xchg
sub
shrb
xchg
cmp
mov
inc
jo
lods
divl
out
ljmp
dec
push
jl
and
loopne
sub
and
jp
int3
dec
repz
cmp
push
lahf
adc
shll
pop
and
lcall
mov
jecxz
push
movl
lea
mov
dec
sbb
gs
sahf
cmpl
outsl
sub
adcb
aas
push
testl
inc
or
xor
fmul
cmp
test
cli
insb
data16
imul
jne
popf
mov
push
push
loope
iret
pushf
dec
enter
mov
lcall
out
outsb
hlt
mov
cmc
and
mov
adc
out
cmp
push
pop
cld
ja
xchg
fucom
pushf
mov
xor
pop
iret
shr
jmp
aad
cmpsl
repz
push
mov
pusha
pusha
into
stos
imul
pop
mov
lret
nop
xor
mov
mull
icebp
cli
add
cld
mov
jns
push
int3
xlat
lea
ret
or
add
sbb
ficoml
jmp
jl
ss
fs
adc
leave
lcall
mov
sub
clc
cld
es
sub
ljmp
add
cmpsl
cmp
jg
jmp
mov
dec
lcall
pop
testl
mov
lock
jnp
js
dec
fmul
xor
mov
xor
dec
xchg
xchg
jl
loope
stos
aaa
jecxz
divl
inc
aam
add
cmp
in
jnp
das
sub
ja
and
push
cmp
pop
or
mov
movsl
ret
jnp
pop
ret
and
rcl
repz
cmp
sub
cmp
lret
sbb
imull
adc
test
xchg
insb
ss
rol
jmp
mov
scas
cmp
pop
das
stos
imul
pop
sbb
int
sub
fistps
mov
pusha
pop
push
xchg
out
ljmp
mov
pop
and
xchg
ret
push
pushf
sbb
arpl
rolb
and
fchs
cmp
inc
jno
repnz
in
test
fnstsw
xor
and
loop
xor
inc
jg
decl
enter
sbb
cmp
mov
sub
adcb
test
imul
mov
mov
test
jae
push
push
adcb
loope
pop
loopne
jmp
adc
pop
pop
sub
jns
jnp
lret
adc
mov
sti
mov
lcall
cmp
leave
pop
daa
adc
and
daa
loopne
sbb
les
dec
mov
fwait
bound
mov
clc
jno
add
xchg
sbb
test
xchg
mov
sub
sub
jl
movsb
clc
mov
loopne
lcall
jmp
push
sub
sbb
jl
cltd
out
sti
dec
jmp
adc
xor
and
jns
movsl
or
lods
add
movsb
xor
cmp
test
addb
cmpsl
push
xchg
push
cli
adc
push
push
movsl
jbe
jge
xor
insb
bound
push
lret
imul
fists
repz
xchg
cmp
fmuls
jne
mov
aam
inc
aas
xor
rcl
repnz
test
pop
adc
jae
addl
jecxz
cmpps
push
xor
pop
xchg
xor
add
mov
dec
rorl
pop
les
xchg
or
inc
xor
adc
aas
mov
push
cwtl
outsb
jmp
or
cli
cld
iret
pop
cmp
push
inc
mov
pop
lods
cmp
cmpsb
rclb
sbb
call
outsb
xor
xchg
mov
xor
sub
mov
and
pop
daa
xlat
push
inc
add
dec
lock
and
xchg
mov
pusha
in
xchg
pop
or
or
jl
mov
in
fcomip
add
out
push
lds
scas
push
cmpsb
outsb
cs
add
repz
pop
in
addb
inc
outsl
lods
cmpsl
ja
xchg
subb
repz
cmpsl
lret
jb
inc
mov
pop
adcl
sbb
adc
inc
push
mov
add
clc
mov
out
dec
pop
mov
ss
scas
into
pusha
movsb
out
orl
fs
scas
scas
shrb
movsb
dec
xchg
out
add
pusha
aam
mov
js
jmp
jbe
ljmp
mov
fimull
jecxz
mov
and
cmpsb
rcrb
mov
mov
inc
shrl
and
and
mov
inc
push
cmp
push
lahf
inc
sbb
clc
push
push
xchg
xchg
fbld
into
inc
into
or
les
mov
hlt
pop
std
int
cmpsl
out
adc
into
inc
xchg
out
cltd
cmp
mov
loop
push
xchg
push
jae
cmp
fidivl
cld
daa
call
pop
stos
or
aas
sub
pop
mov
inc
in
push
push
mull
addr16
and
icebp
sbb
or
fwait
add
mov
xchg
cmc
std
dec
adc
xlat
mov
fstps
scas
popa
or
mov
or
inc
test
cmp
add
loope
push
jns
jp
fidivs
call
std
rorb
push
in
cltd
dec
xchg
sbb
lds
hlt
xchg
or
add
inc
aam
pop
les
fisttpll
and
pop
lds
lds
jno
sub
repnz
and
or
sti
lahf
inc
rorl
or
out
dec
cwtl
nop
dec
ret
fs
sbb
xor
xor
dec
aaa
cmp
lods
jge
cmpsl
cli
cld
popa
inc
push
aam
jo
cli
std
mov
out
lock
xor
out
es
inc
push
push
ds
cld
xchg
sahf
mov
add
jp
mov
adc
inc
sarl
stos
in
jg
fsub
shl
test
push
and
ficompl
shll
shl
sub
fiadds
cwtl
cmp
xchg
pop
mov
outsb
push
leave
push
hlt
imul
aam
jecxz
inc
push
add
loopne
imul
outsl
imul
cmc
sti
repz
cwtl
sbb
out
ret
cmovp
xor
push
jno
mov
sub
push
push
mov
and
sbb
jbe
mov
pop
int3
sbb
mov
sub
and
loope
lahf
pop
mov
movsb
sbbb
mov
sahf
lods
lds
idiv
vxorps
jl
pop
pop
pop
rcll
outsl
xchg
ret
test
jnp
rcr
jae
sub
mov
mov
in
cmc
aad
mov
add
xchg
jecxz
sbb
mov
sbb
pusha
idiv
jns
push
je
in
pop
dec
jecxz
orb
jo
lret
adc
sbb
mov
out
lds
in
jle
mov
jbe
adc
mov
daa
mov
clc
clc
sti
hlt
bound
mov
sbb
mov
mov
rorl
sarl
leave
jg
jge
js
shlb
or
cmc
xchg
nop
cmp
sub
leave
popf
mov
and
adc
lods
add
or
cmp
push
adc
xchg
inc
ret
std
push
cld
xor
in
jns
in
jl
jbe
mov
in
pmulhuw
subb
test
pop
lock
xchg
inc
jno
mov
jne
out
sti
loope
adc
mov
xchg
mov
push
ljmp
cmp
sbb
lock
orb
cmp
jp
dec
sub
shl
incl
xchg
mov
ljmp
cmp
int
add
mov
mov
fnsave
or
ljmp
add
idiv
repz
adc
mov
and
push
shr
je
js
jge
push
xor
mov
dec
adc
add
or
test
inc
jnp
fldz
dec
fs
subb
and
lret
push
mov
sub
testl
mov
or
outsb
pop
movsb
push
cli
sub
ds
pop
andps
mov
sbb
adc
cmp
mov
ret
dec
dec
dec
shrl
jl
pop
out
lahf
push
add
loope
jmp
sbb
out
ret
inc
pop
lahf
les
addr16
leave
push
or
or
nop
push
test
jp
xor
push
xlat
test
push
jo
inc
lahf
mov
xchg
adc
daa
lret
int3
lcall
jnp
xchg
loopne
lahf
jle
lcall
xlat
mov
xor
xchg
sub
negl
outsl
imul
ret
aad
lcall
adc
xchg
in
xchg
fbld
lcall
mov
add
xlat
bnd
push
scas
scas
jns
movsl
add
xchg
mov
out
dec
lret
jb
mov
cmp
fcmovnbe
cmp
and
or
or
xor
mov
cmp
enterw
call
imul
mov
loopne
lock
or
sub
mov
push
scas
dec
mov
cmpsl
in
fs
dec
mov
outsb
lret
loope
loopne
cmp
cmp
in
xchg
sub
pop
and
mov
inc
xor
inc
sbbb
call
arpl
cmp
fnstenv
sbb
or
mov
sub
pop
setae
mov
cmp
dec
lfs
or
aas
jo
adc
sub
fdivrs
in
xor
mov
or
jg
add
arpl
leave
bound
mov
xchg
xchg
ret
jl
movl
push
jl
dec
imulb
mov
sbb
and
lock
imul
inc
fisttpll
mov
out
imul
stos
nop
adc
int
loope
ljmp
mov
inc
loopne
and
mulb
ljmp
adc
aaa
push
xchg
movsl
add
ljmp
and
lods
sub
or
jg
pop
or
mov
mov
mov
or
lahf
mov
hlt
fmuls
jo
inc
imul
repz
push
imul
movsl
push
sbb
mull
sbb
mov
sbb
add
inc
scas
xchg
das
mov
pop
rolb
xchg
aaa
jl
int
call
test
fwait
inc
xchg
xor
cmp
std
sbb
clc
xchg
push
adc
inc
mov
push
mov
enter
cmp
dec
les
xchg
shll
inc
sbb
push
dec
shlb
int
addb
iret
out
cmp
adc
data16
je
std
fists
test
mov
test
cld
sbbl
std
stc
xchg
cmp
cld
mov
fisttps
pop
and
mov
lret
popa
jge
outsl
movsb
pop
jp
mov
dec
stos
andb
lods
mov
inc
xor
xchg
ffree
and
es
imul
jno
incb
mov
and
or
jp
cld
jne
cwtl
pop
scas
inc
and
repnz
push
scas
mov
push
mov
pop
out
pop
xchg
inc
xor
sub
into
ljmp
mov
fdivl
cmp
outsl
out
dec
add
mov
sbb
push
cli
js
cltd
dec
rcl
out
push
pop
shr
pop
outsl
jo
dec
iret
scas
mov
jge
add
mov
icebp
test
sbb
out
cld
rolb
xor
and
add
fs
inc
les
mov
addr16
xlat
lret
mov
loop
lds
rcrl
ret
sbb
inc
cmp
stos
push
loop
jns
cmpsl
loope
sbb
jmp
in
add
or
aas
adc
xor
sub
aam
pop
stc
jecxz
jg
adc
lock
imul
pop
shl
cmp
into
xchg
cmpsl
idiv
sub
movsl
cs
testb
mov
dec
data16
push
mov
jnp
loopne
sub
push
mov
ljmp
daa
pop
mov
stc
leave
jmp
jbe
mov
sbb
inc
and
cld
mov
mov
pop
add
fisttps
jmp
int
fwait
orl
mov
in
push
jmp
sub
addr16
pop
and
jle
popa
cld
or
mov
loope
ja
lret
xchg
mov
or
pop
xchg
out
dec
xor
push
inc
js
repz
sub
dec
mov
rcrb
push
push
iret
mov
in
push
gs
sub
ljmp
xchg
dec
xor
jge
repnz
test
sbb
gs
jno
inc
sar
in
jmp
mov
jne
sar
movsl
int
sbb
cmpsb
push
mov
cmp
fs
mov
fisubrs
in
xchg
cmc
das
xlat
adc
bound
stos
mov
popf
cmp
mov
fistpll
mov
dec
inc
std
hlt
mov
inc
cmp
xor
sbb
pop
xchg
inc
add
rcrl
push
call
xor
pinsrw
and
mov
mov
aam
incb
dec
dec
popa
jmp
test
aas
mov
icebp
in
cmc
adc
jae
negl
adc
rcll
out
es
ret
imul
iret
leave
lods
out
push
repnz
jbe
movsl
lock
in
in
mov
enter
das
enter
pop
icebp
push
mov
pusha
lcall
pop
scas
xlat
add
adc
mov
fsubr
push
cmpsb
jge
mov
jecxz
and
mov
or
in
test
dec
stos
test
andb
adc
jl
shr
in
add
pop
loope
and
sub
and
je
out
subl
roll
into
mov
jae
pop
and
or
in
fstpt
add
aam
ret
pushf
movsb
aad
jl
stos
push
sarb
xchg
enter
xchg
jge
outsl
dec
xchg
push
and
cs
dec
rcrl
pop
outsl
and
out
jne
cmp
sbb
aad
mov
jmp
cmp
lret
rorl
adc
sti
cwtl
loope
and
cmp
jmp
dec
daa
lahf
pusha
cltd
mov
sub
movsb
sti
cmpl
mov
test
bound
fs
cld
fldenv
and
shl
cmp
clc
les
addl
pop
out
call
sub
std
mov
xor
lods
pop
sti
and
adc
inc
lcall
and
das
insl
test
stos
repz
sbb
inc
sub
xor
push
xor
mov
push
mov
xchg
ja
jge
push
decb
xchg
aam
inc
push
mov
sahf
in
add
addr16
ret
or
inc
mov
pop
xor
imul
sub
xor
mov
xchg
or
insb
enter
pop
aad
lds
leave
or
and
mov
imul
sti
in
mov
push
cwtl
mov
rcrb
mov
es
clc
mov
jns
sbb
pop
xlat
iret
xlat
jle
push
mov
fiadds
loopne
dec
push
fs
popf
pop
daa
dec
and
movsb
test
sub
shr
dec
jns
outsb
fchs
inc
repz
and
nop
loop
stos
cmp
fstps
fcoml
push
dec
jae
cmc
sub
scas
es
inc
rcrb
andb
aad
sbb
rdmsr
sbb
inc
dec
add
add
cmp
ficompl
clc
adc
pop
xlat
cmpsl
adc
insl
divl
mov
movsl
lock
adcb
cmp
and
xor
in
jmp
lods
popa
mul
out
dec
mov
add
fildll
repnz
aam
xchg
lds
addr16
fs
js
popf
push
nop
xlat
mov
xchg
loope
sti
movsl
mov
jmp
mov
add
btc
xchg
cld
jnp
cli
pop
clc
or
fwait
inc
lahf
outsb
push
push
push
insb
scas
mov
pop
sub
sub
pop
sub
imul
add
jmp
aam
push
sbb
adc
xchg
inc
test
xor
adc
ljmp
cs
push
mov
adc
sub
jns
rolb
xor
rclb
xlat
xchg
jl
add
mov
orps
push
dec
cmp
popa
lock
mov
clc
jmp
push
rclb
dec
pop
clc
xchg
stc
sub
in
imul
scas
enter
test
adc
lods
int
shll
mov
cmpl
xor
adc
out
iret
jne
mov
mov
fiaddl
pusha
jb
out
mov
xchg
inc
add
jae
in
lods
dec
jno
fcoms
fwait
idivl
mov
inc
lahf
call
sub
push
add
test
stos
lock
lods
insl
xor
out
ret
fimull
xchg
adc
jecxz
rclb
rcll
pushf
mov
push
add
iret
cmp
dec
movzbl
ss
fsts
pusha
lock
or
outsb
sub
xchg
lock
jne
sbb
ret
imul
xchg
mov
push
xorl
push
fs
addb
or
mov
idivb
xchg
call
mov
mov
outsb
les
insl
and
jo
xchg
stos
pop
jl
adc
jno
jae
xchg
outsl
sti
push
into
loope
mov
mov
loopne
mov
dec
ja
stc
jnp
loopne
mov
sti
int3
push
or
cltd
jl
jns
mov
xor
and
test
aas
push
push
scas
mov
sub
cwtl
es
mov
bound
call
jge
adc
add
pop
dec
fidivrs
addl
imull
sbb
shll
clc
ja
gs
lahf
dec
cmp
daa
ljmp
dec
mov
adc
ret
push
or
fcom
clc
in
loop
in
push
jae
mov
push
push
jmp
sub
mov
fdivrl
and
push
shrl
fwait
jbe
jmp
xchg
es
sub
movsl
int
ret
fildll
dec
pop
hlt
jl
cmpsl
xorl
mov
mov
push
push
xchg
dec
adc
fsubp
repnz
mov
fwait
jle
fists
mov
inc
or
push
enter
adc
mov
cltd
out
test
jge
xor
into
fs
int
bound
ret
out
xor
xchg
pop
adc
push
outsb
cs
cmp
lret
scas
push
dec
and
and
inc
and
dec
addr16
lcall
cmpsb
push
or
test
mov
add
push
sbb
xchg
adc
out
lcall
mov
sub
fwait
jmp
imul
sbbl
jnp
dec
lcall
and
cmc
mov
lods
xchg
pop
pop
les
into
mov
imul
movsb
inc
sub
and
cmpsb
jle
mov
arpl
lods
aad
out
outsb
mov
sbb
xchg
icebp
sub
int3
xchg
pop
bound
aas
mov
push
fisubs
movsl
jle
inc
xor
movsl
fstpt
mov
xchg
ret
leave
push
andl
or
adc
enter
in
jle
xor
into
orb
aaa
call
jle
xchg
arpl
out
xor
pop
dec
mov
mov
stos
and
or
lods
cmc
leave
add
mov
adc
fcmovne
hlt
in
dec
push
outsl
or
push
sbb
cmp
fidivrl
push
mov
jne
adc
or
jb
inc
out
xor
push
je
jno
decl
iret
xor
adc
iret
and
addr16
sub
xor
adc
sbb
inc
dec
pop
dec
sub
xchg
push
repnz
repz
loope
adc
into
push
jbe
xor
sub
stos
andb
push
ljmp
add
cltd
jbe
xor
pop
mov
fidivl
ror
movsl
out
xchg
cmp
mov
jecxz
cmp
outsb
mov
in
xchg
xchg
xchg
aaa
loop
mov
sub
and
inc
add
lcall
mov
cmc
mov
jge
nop
push
stc
ds
test
test
aad
mov
fs
test
push
jmp
sbb
xchg
stc
in
and
push
fwait
push
xor
movb
add
jae
cmpsl
dec
and
jp
sub
or
dec
je
fs
lret
mov
into
loop
jecxz
in
stos
mov
fcoms
aad
jg
lea
aad
loope
cmc
pushf
and
out
arpl
dec
divl
test
out
stos
sarb
mov
pop
js
sub
inc
inc
popf
add
mov
mov
out
mov
sti
aam
lods
popf
testb
push
int3
aas
inc
push
sbb
and
inc
add
inc
out
xor
test
inc
out
dec
loopne
sub
iret
ds
push
enter
jnp
push
addr16
push
ret
iret
push
jbe
adc
ja
gs
orl
dec
loopne
repnz
sub
push
scas
mov
xchg
inc
fdiv
int3
sbb
or
in
inc
push
es
jne
loop
test
mov
sub
push
jne
pop
js
xlat
adc
pop
xchg
call
test
push
jnp
adc
push
mov
push
mov
xorb
popl
and
cmp
sub
xor
in
int3
sbb
push
or
pusha
add
xor
leave
mov
into
arpl
mov
push
mov
outsb
fnclex
sbb
dec
cmpb
cmpl
iret
rcrb
inc
test
cmpsb
lret
xchg
outsl
repnz
mov
inc
out
xor
push
jge
push
mov
je
in
stc
cltd
jne
xchg
mov
pop
cmc
xlat
and
add
popa
mov
push
repz
sbbl
lea
add
dec
test
mov
and
jmp
sub
call
jno
adc
adc
sbb
adc
stc
fsubr
jne
or
repnz
sub
mull
imul
and
jno
mov
out
and
insl
out
dec
arpl
adc
dec
movsl
leave
inc
ss
dec
pop
xlat
xchg
pop
ret
sbb
adc
add
aad
mov
xor
lcall
testl
notl
sub
aaa
sti
dec
sarl
pop
mov
je
xchg
jg
vpcmov
in
int3
bound
sub
repnz
lahf
xor
ljmp
inc
loopne
outsl
mov
arpl
mov
test
popa
or
cltd
jp
fwait
jno
and
hlt
lds
mov
xchg
mov
in
icebp
nop
cmp
cli
and
loop
dec
cltd
mov
jae
or
jnp
mov
xchg
cs
push
into
outsl
add
stos
sarl
in
cmpsb
ds
xchg
sbb
push
mov
adc
jmp
sbb
gs
add
push
jne
outsl
sub
out
lret
adc
dec
push
or
cmp
push
lods
flds
cs
daa
mov
push
push
lea
sbb
jb
push
cld
or
es
inc
test
and
aas
sahf
lahf
lods
push
xchg
sub
and
cld
jmp
xor
and
outsb
cmc
arpl
cmp
sahf
mov
sti
and
loop
fs
add
xchg
clc
dec
in
dec
mov
pop
ficoml
mov
and
or
adc
mov
xor
dec
shlb
lea
xchg
pushf
les
popa
xchg
push
lods
inc
aad
mov
cwtl
fldl
cwtl
arpl
pop
jle
mov
leave
mov
aad
cwtl
pop
lods
or
mov
out
int
ljmp
cli
lds
pop
pop
scas
in
fdivp
inc
sub
imul
inc
mov
jns
popf
mov
dec
xchg
xor
jp
cmpsb
or
sbb
cmp
out
mov
xchg
pusha
popa
mov
jns
sub
movsb
push
lock
cmp
sbb
add
imul
addb
gs
sub
mov
loop
jnp
mov
mov
repnz
mov
jp
mov
imul
mov
orl
or
xchg
ss
sub
or
cmc
and
mov
lds
and
iret
pop
mov
cmp
pop
shll
or
cmp
mov
push
arpl
cli
xor
pop
lret
inc
mov
mov
pop
jns
int
xchg
adc
pop
inc
fistpl
mov
idivl
jecxz
mov
pop
pop
xchg
in
jmp
add
out
or
or
adc
ror
jle
push
pushf
xor
sti
out
aam
push
mov
xchg
xchg
call
das
shll
sub
cld
sub
jp
les
push
aad
inc
xchg
inc
or
outsl
xchg
dec
mov
mov
test
jb
push
adc
int3
js
daa
je
cmp
dec
lds
test
shll
or
push
loop
out
sub
mov
loopne
test
add
cmp
in
and
dec
lea
test
mov
dec
and
stc
jmp
sub
scas
mov
pop
lret
push
and
and
adc
icebp
aad
mov
jmp
cmp
dec
test
repnz
xchg
es
dec
inc
jmp
icebp
mov
or
movsb
sbb
xchg
add
mov
sub
pop
and
mov
icebp
adc
in
aas
push
lods
add
sub
cmc
hlt
jne
data16
sub
xchg
mov
jbe
cltd
fdivp
inc
sub
dec
inc
ja
xchg
stc
adc
mov
sbb
inc
xchg
push
push
push
test
mov
cmpsl
fsubrs
dec
jbe
nop
or
adc
cltd
jns
lcall
pop
push
loop
cmp
test
fadds
fsubs
nop
cli
enter
jmp
mov
hlt
aam
mov
test
push
outsb
and
movsb
ss
nop
dec
xchg
je
out
sub
push
pusha
xchg
xchg
jmp
jbe
out
popf
mov
inc
or
int
std
clc
lods
pusha
pop
iret
pushf
sbb
xchg
in
inc
scas
sti
into
or
loop
fbld
cmp
sbb
xchg
cmpsb
ljmp
sbb
push
jp
je
add
cmp
jg
xchg
cmovb
dec
sbb
scas
mov
push
or
lret
arpl
jmp
xchg
sbb
pop
jle
es
sbb
xchg
sub
dec
xchg
in
pusha
add
jp
imul
hlt
cld
adc
push
je
xchg
stos
add
and
sub
sti
stos
incl
dec
sbb
sar
mov
jecxz
sbb
xor
push
dec
scas
sub
les
ret
cmp
jno
popa
xchg
movb
xchg
fisubs
cmp
fstl
jmp
jp
mov
jne
push
add
loopne
ds
idiv
test
ficompl
dec
notl
test
xchg
mov
rolb
pop
xchg
fwait
mov
pop
loope
xor
jno
shrl
mov
bound
mov
mov
push
mov
sbb
out
xchg
mov
data16
xorb
xchg
ud0
push
dec
add
cmpl
add
es
pop
mov
xor
mov
xchg
mov
mov
ss
negb
push
je
lock
lock
test
pop
out
inc
pop
lock
ret
scas
xchg
push
jg
xchg
divb
jmp
dec
scas
xchg
xor
xchg
push
pop
inc
ret
push
fcmovnb
add
pop
jmp
ljmp
std
dec
pusha
or
lods
pop
aad
leave
inc
scas
jns
and
scas
fwait
loope
cmp
sbbb
addr16
imul
cwtl
sub
xchg
fdivrl
push
lret
cld
sub
cmp
dec
inc
add
add
cmp
sti
out
loope
shll
in
jmp
jg
push
fwait
mov
sub
sub
jmp
ret
aas
aad
mov
pop
xchg
repnz
add
jo
or
mov
std
pop
mov
push
cli
jge
test
inc
push
mov
sbb
rolb
inc
les
adc
xorl
frstor
data16
add
mov
inc
mov
push
jl
sub
leave
out
popl
nop
test
fistpl
fdivrs
xor
jne
sbb
int
loopne
and
mov
mov
lods
int
fstpl
cli
es
xchg
mov
and
xchg
pop
xchg
fwait
sub
cmp
jp
in
test
lret
lcall
lock
insl
stos
lods
nop
mov
push
lret
jl
icebp
sub
sub
or
lahf
js
js
pusha
loop
jb
push
repnz
jne
adc
sbb
sub
scas
dec
fstps
pop
lock
and
jns
inc
outsb
fmulp
data16
in
popa
jns
sbb
outsl
popa
shrb
mov
cmp
push
add
jbe
and
iret
jl
repnz
sub
enter
mov
push
sbb
mov
inc
adc
fbld
mul
xchg
rclb
or
aas
ds
push
cltd
hlt
daa
es
pop
sbb
mov
push
jns
popa
inc
add
and
roll
xlat
je
xor
cmc
mov
jno
aas
shrl
mov
sub
dec
mulb
add
ds
inc
imul
xchg
notb
dec
inc
push
xchg
mov
mov
std
xor
xchg
inc
mov
xor
movsl
jp
jb
rol
pop
lret
test
outsl
fdivp
cmp
ja
mov
aas
dec
cltd
leave
push
ret
mov
or
hlt
outsb
mov
scas
xchg
movsb
ret
mov
mov
xchg
xchg
or
ret
cmpl
xchg
rolb
mov
jne
lock
jno
mov
dec
loope
xor
inc
pop
dec
aas
dec
push
hlt
mov
sub
lds
enter
mov
ljmp
pushf
lret
ljmp
xchg
push
mov
xchg
mov
and
xchg
and
pop
into
jne
inc
andb
mov
loopne
in
jge
push
xchg
icebp
outsl
out
xchg
xor
pop
es
dec
mov
lods
inc
and
aas
inc
mov
lock
inc
mov
mov
jmp
fiaddl
shl
inc
mov
add
adc
lds
hlt
jmp
cltd
push
dec
test
pop
sbb
ljmp
push
pop
sbb
sbb
ss
dec
xor
cld
std
mov
bnd
shll
and
pop
cmp
insl
neg
xchg
shrb
pop
cmp
hlt
sbb
out
sub
push
or
add
orb
sub
iret
push
pop
cmp
cmp
jno
mov
mov
mull
mov
add
mov
sub
dec
rol
outsb
xor
xor
test
push
lock
imul
lods
repnz
and
sub
ljmp
inc
in
add
mov
call
mov
imul
fistpl
test
scas
leave
lds
leave
jl
pop
add
adc
addb
popf
inc
lea
aam
or
and
imul
adc
out
jp
es
inc
adc
mov
fnstenv
fwait
dec
js
xchg
shll
cs
jo
gs
and
xor
movups
dec
push
out
pop
out
mov
sbb
fistps
jae
cltd
fists
sbb
or
inc
outsb
add
push
fiadds
adcb
push
fdivs
inc
insl
cs
imul
adc
mov
fimull
rorl
inc
sub
push
ss
pop
pmulhw
jbe
pusha
repnz
loope
xchg
pop
push
or
insb
cmp
rolb
cmc
int3
add
jb
mov
adc
xor
imul
jnp
loopne
fcmovnb
fcmovnb
mov
pop
xchg
mov
push
add
dec
test
jae
cmp
faddp
sub
imul
test
imul
lods
rorb
push
sbb
cwtl
cmp
add
push
sbb
shrl
pop
jmp
push
push
inc
insb
sbb
pop
in
cmc
call
dec
jnp
add
mov
mov
add
adc
repnz
adc
push
ja
jo
popf
xor
insb
pcmpgtd
push
call
loop
fbld
sti
and
mov
das
jns
push
jnp
int3
cwtl
popf
pushf
mov
clc
xor
xor
popa
mov
cmpsl
movsl
lock
lds
sbb
xchg
out
adc
xor
fnsave
adc
add
call
mov
adc
jge
xor
lret
lret
frstor
add
lcall
stos
pop
xchg
add
jno
cld
xor
out
and
adc
mov
out
push
pop
out
cwtl
push
loop
mov
rcll
ficomps
pop
adc
inc
xor
add
adc
not
loope
mov
lods
xor
js
stc
push
jmp
and
sbb
fldt
mov
daa
int3
test
jl
dec
xor
fstl
xchg
jb
in
repz
aaa
mov
xchg
mov
dec
fs
in
fwait
adc
or
dec
sbb
adc
xor
xchg
lock
pop
loope
jae,pn
cs
xchg
dec
aas
cmp
aam
add
push
int3
mov
pop
mov
inc
out
aas
mov
mov
fwait
test
and
iret
xchg
mov
arpl
in
pop
in
lods
in
jns
daa
inc
in
leave
mov
mov
mov
mov
xor
xor
jg
jecxz
xor
or
mov
adc
outsl
test
lahf
dec
jb
dec
sbb
popa
cmp
mov
sbb
fcmovbe
push
ja
roll
jge
imul
int
pop
sbb
pop
pop
mov
fs
jo
mov
fisttps
mov
inc
test
jb
fidivl
and
inc
lahf
test
sbb
mov
lds
sub
lcall
add
lock
jmp
loopne
fistl
arpl
pop
out
sbb
cmc
push
sarb
leave
addr16
xor
cmp
add
sbb
jae
mov
repz
das
repz
and
shrl
loopne
inc
nop
mov
outsl
or
std
jo
xor
nop
out
sahf
ljmp
jno
mov
into
push
stc
mov
cli
xchg
jb
cld
imul
dec
add
jmp
fsubrl
xchg
cltd
scas
insl
xor
push
test
fimuls
jmp
adc
cld
mov
std
add
outsb
popa
test
pop
push
sub
xchg
or
xor
mov
xchg
jge
push
dec
add
rcrb
popf
stc
and
cmpsb
xor
and
xorb
mov
data16
data16
xchg
sbb
or
pop
mov
push
jo
clc
out
subb
push
cmp
sti
ficomps
push
xchg
scas
xchg
cmp
aam
js
push
xor
mov
cs
adc
jno
popa
aam
lahf
pusha
adc
inc
xor
sub
lret
aas
sbb
int3
jae
outsb
and
repz
jb
scas
jl
dec
xor
inc
iret
cs
lcall
shl
adc
adc
mov
out
mov
pop
add
dec
and
lret
or
inc
pop
inc
inc
mov
inc
xor
adc
shll
nop
push
in
xor
jne
sbb
ss
xor
sub
inc
xchg
jbe,pn
shl
or
mov
add
xchg
xor
in
cmp
lock
adc
je
cs
pop
xchg
ds
add
int3
push
imul
sbb
daa
sbb
push
xlat
push
lods
or
leave
das
xor
aaa
adc
in
pop
and
sahf
scas
mov
push
jg
jnp
inc
jb
xchg
rorl
sub
mov
inc
dec
pop
inc
stos
fdivp
mov
add
rcl
lahf
dec
daa
mov
push
imull
repz
lods
repnz
or
pop
out
mov
insb
hlt
hlt
mov
popa
add
push
adc
cmp
insb
mov
xchg
or
negb
and
adc
mov
or
push
aad
and
cmp
pop
pop
push
enter
out
add
sbb
pushf
dec
out
repnz
je
jae
dec
push
xchg
sub
lock
test
das
out
pop
push
mov
xor
cld
sbb
leave
rdtsc
pop
jmp
fisubrl
outsl
pusha
xchg
pop
xchg
popf
sub
jecxz
nop
sar
xchg
pop
dec
jl
jp
push
xchg
xor
cmp
cmpb
or
popl
repnz
rorb
outsl
popa
xlat
xor
mov
inc
jecxz
xchg
lds
mov
fbstp
jmp
inc
mov
mov
icebp
mov
push
cs
or
lods
fcoms
int
inc
xlat
fdivs
mov
xor
bound
out
sub
rorb
mov
mov
lods
and
xchg
and
and
aas
cmp
loope
inc
aaa
cs
lret
ficoms
sbb
enter
mov
outsl
pushf
nop
jnp
imul
dec
vminsd
add
fildl
xchg
adc
data16
in
xchg
mov
sbb
jo
push
dec
or
popf
and
sub
hlt
jge
mov
lock
mov
jmp
jmp
mov
movsb
rcrb
xlat
pandn
dec
outsb
rorl
dec
call
jl
imul
aam
lcall
jg
fisttpll
push
int3
les
mov
adc
jge
sub
test
mov
lds
int3
xor
push
paddusb
shl
sti
and
mov
mov
jb
sub
pop
scas
out
pop
loop
cmp
cmpsb
lds
iret
aaa
sahf
outsl
fsts
into
push
add
mov
enter
pop
fwait
jg
cmp
add
fcmovnbe
adc
cmp
arpl
in
nop
xchg
push
mov
cmp
faddl
movsl
and
scas
sar
pop
mov
adc
je
mov
xor
mov
movsl
add
mov
adc
es
and
push
mov
rorb
mulb
mov
xchg
sub
inc
xchg
sub
test
dec
jmp
aam
insb
into
in
out
push
ds
aas
ss
ss
shl
xor
imul
loop
mov
sub
outsl
ficompl
ja
pop
xchg
nop
repz
push
pop
jns
ljmp
push
jo
mov
das
rolb
neg
mov
test
mov
nop
cmp
xchg
or
xchg
ss
and
mov
test
sbb
push
pop
cld
mov
adc
sub
popf
cmp
mov
stos
popa
push
adc
cld
mov
cs
aad
shrb
inc
stos
sub
mov
jno
mov
fimuls
scas
movsl
cmp
inc
nop
adc
notl
lcall
inc
push
mov
cmp
cmp
lahf
push
add
mov
es
retw
lock
mov
xor
je
into
pop
cmp
mov
sbb
pop
dec
in
scas
pop
aam
fnop
dec
jne
mov
sub
sbb
mov
sbb
loope
std
adc
out
pop
jp
push
jne
push
adc
jmp
add
outsb
pushf
mov
pop
push
mov
pop
icebp
daa
lock
stos
mov
rorl
aam
jge
lgs
pusha
xlat
sahf
sbb
cmp
mov
add
pusha
lea
xchg
test
and
inc
insb
sub
div
mov
push
fistpl
int3
sub
adc
pop
adc
and
sbb
out
pop
xor
andl
sti
sbb
adc
neg
stc
xchg
popf
sti
mov
icebp
sub
or
shl
dec
scas
or
xor
mov
into
mov
push
arpl
adc
rolb
and
mov
mov
jmp
cmpsl
incb
enter
cli
jno
aas
mov
jb
push
add
mov
add
and
int
fsubrl
jo
in
out
sbb
jg
subl
mov
fistpll
xchg
mov
inc
push
ret
push
mov
sbb
les
sub
xchg
out
mov
mov
xchg
adc
xlat
push
out
mov
sarl
mov
rcrl
int
iret
in
aam
pop
out
ret
adc
std
fwait
xchg
dec
out
popa
dec
mov
xchg
adc
rclb
sub
dec
scas
out
nop
es
rorb
lcall
push
xchg
dec
jb
xchg
in
ljmp
rcr
pop
mov
inc
cmp
das
shr
shlb
jg
int
pop
cwtl
shll
insb
xor
bound
push
dec
push
mov
movsb
push
add
dec
xor
jno
pusha
fwait
das
cmp
and
pop
lret
insl
les
andl
jg
les
pop
fnstsw
andb
lcall
cwtl
int
mov
popf
das
scas
add
xor
test
push
cmp
pusha
sub
xchg
jmp
inc
lcall
icebp
add
stos
outsl
and
mov
arpl
and
imul
ja
cmpsb
mov
sbbb
std
in
mov
jnp
push
repz
les
xorb
mov
fwait
loopne
fcompl
xchg
xchg
mov
cmp
jp
iret
push
mov
xchg
popl
jmp
mov
ret
lcall
or
xchg
cwtl
push
push
adc
mov
repz
mov
loop
mov
shrb
test
jp
mov
jle
sahf
push
mov
sbb
xor
inc
subl
or
mov
repnz
xchg
mov
or
test
inc
dec
aam
in
outsb
pop
js
inc
pop
in
and
mov
adc
fwait
popl
lret
inc
and
jns
xor
test
cmpsl
sub
and
enter
xchg
push
je
test
ljmp
add
and
scas
faddl
pop
sbb
add
add
mov
mov
les
adc
ss
xor
cwtl
sbb
subl
fs
in
mov
add
je
dec
ja
int
mov
cmp
loopne
lret
pop
nop
aam
enter
push
push
sbb
bound
or
lock
add
xchg
mov
insl
mov
xchg
sub
aas
push
mov
outsb
arpl
clc
in
add
ret
sub
cli
lds
push
xor
cld
cmc
mov
scas
sahf
mov
in
inc
pop
sbb
lea
shrl
sbb
or
lock
pop
add
jge
arpl
inc
in
int3
bsr
push
shlb
mov
lcall
std
add
hlt
jb
or
sbb
test
mov
mov
jnp
test
and
fwait
jl
hlt
dec
jnp
aas
mov
adc
inc
in
test
dec
add
int3
ja
std
int3
jle
mov
cmpsb
jl
lahf
xorb
dec
cli
mov
xchg
loop
inc
inc
fnsave
fsubrl
pop
mov
scas
sub
mov
inc
dec
ret
enter
data16
xchg
ss
xchg
xchg
jb
mov
fwait
rcrb
push
sub
ficoms
xor
or
xor
sub
mov
xor
icebp
mov
sub
push
les
add
fsubrl
fnstenv
push
mov
jns
jp
or
and
mov
xchg
mov
xchg
jno
pop
jg
lods
ficoms
test
mov
clc
pop
into
sarb
icebp
cli
mov
or
js
adc
push
sbb
inc
lods
lds
leave
outsb
xchg
daa
mov
in
sbb
mov
sbbl
addr16
mov
movsl
lds
shrb
push
stc
es
push
mov
push
cmovge
jecxz
cmp
cld
cs
inc
and
mov
movsl
sub
adc
add
mov
mov
repnz
jg
sarl
inc
lcall
fdivs
sub
add
sbb
js
sbb
insb
pop
stos
jg
shrl
loopne
cwtl
xchg
cmpsb
push
int3
pusha
sub
mov
movb
cmp
sub
mov
jbe
pushf
and
adc
test
andb
iret
data16
aad
jecxz
jg
xor
rcrb
mov
js
push
dec
rol
pop
add
call
and
nopl
les
enter
dec
or
cmp
mov
out
adc
mov
push
and
adc
jae
pushf
clc
insb
js
inc
mov
or
mov
dec
sarb
repnz
xchg
and
jmp
clc
xchg
rolb
daa
test
adc
adc
ret
xor
sbb
int
add
inc
jns
cs
loopnew
pop
or
jne
add
mov
sahf
add
xchg
lock
es
jmp
repnz
lret
notl
insl
faddp
inc
inc
dec
push
call
leave
inc
push
scas
adc
out
lds
sub
and
adc
sub
mov
les
ret
xor
lret
test
push
sbb
jnp
and
jne
std
scas
cwtl
movd
add
pushf
and
jae
jp
jns
stos
cmc
lea
jl
lret
loope
faddl
shlb
xchg
repz
in
outsb
mov
lds
mov
ja
das
iret
aam
into
ficomps
in
push
push
jle
push
mov
pusha
cmp
jmp
jo
pop
insl
xchg
cltd
int
cmpsl
pop
mov
sub
out
lods
sub
cmp
test
ljmp
mov
fmull
push
sbb
mov
pop
sbb
ficoms
mov
and
hlt
lret
shll
data16
jb
out
or
xchg
jno
jno
repz
adc
xchg
adc
rclb
out
sub
push
gs
sub
ljmp
mov
aaa
lock
mov
cmp
movsb
or
push
adc
and
call
xor
daa
dec
jne
sub
or
es
cs
dec
or
jns
pop
sahf
dec
in
fstps
pop
shl
das
pop
mov
xchg
sahf
sbb
test
loopne
fmul
jge
push
sbb
out
sarl
sbb
fsub
or
inc
hlt
lcall
or
popf
std
cmp
enter
sub
ficomps
jp
stc
inc
jb
cwtl
mov
mov
fbstp
jae
in
inc
lahf
mov
shll
mov
push
push
scas
icebp
pop
push
dec
mov
shl
sub
xchg
insb
push
pop
adc
ss
outsl
mov
dec
into
sbb
adc
inc
dec
sbbl
hlt
jae
xor
fwait
cltd
inc
nop
es
mov
ljmp
nop
leave
xchg
adc
mov
fimull
mov
xlat
lea
clc
push
mov
xchg
cmp
mov
mov
cmpsb
push
call
adc
xchg
sahf
xor
xor
or
imul
jo
fcoms
popa
in
xchg
in
nop
push
dec
js
push
xor
je
cmpsl
leave
xor
lock
daa
ja
ljmp
cmp
sbbl
enter
into
and
pop
leave
pop
notl
mov
jb
xor
add
xor
ljmp
cmp
push
enter
lret
clc
mov
sbb
jecxz
test
in
std
jb
jae
jecxz
mov
xchg
sub
into
insb
mov
cs
das
xor
push
mov
pop
mul
jle
and
mov
addl
notl
out
cmpsb
ret
pop
enter
xor
iret
xchg
dec
int
or
xor
lock
jecxz
imul
ret
out
adc
add
test
lea
dec
pop
cli
in
lea
lret
mov
cltd
outsb
das
arpl
sub
pop
std
pop
dec
xor
imul
rol
mov
rep
or
pop
inc
xchg
inc
insb
xor
lcall
xchg
mov
mov
je
cmp
mov
push
dec
push
pusha
jns
dec
jp
adc
adc
lahf
scas
cld
mulb
and
cmc
mov
sub
fcompl
xchg
jno
inc
cmpsb
push
cmp
into
cltd
fstps
cld
call
cwtl
lret
js
fadd
mov
xlat
dec
cld
movb
cltd
shll
push
mov
push
dec
jecxz
add
lods
cltd
sub
call
mov
cmp
jno
mov
mov
dec
xor
enter
cmp
or
ss
lods
and
outsl
and
jge
push
repz
mov
lock
pop
push
loope
dec
pushf
pop
nop
jmp
jae
divl
sahf
push
pushf
idiv
xchg
adc
push
sbb
das
add
sub
xor
rclb
lea
out
and
lock
xchg
dec
or
rorl
stos
mov
insb
fsubrl
sbb
loopne
clc
aad
or
or
js
jns
ret
jne
sub
pop
scas
mov
push
or
or
arpl
sub
xorb
xchg
xchg
adcb
inc
or
not
pop
pusha
lcall
inc
aam
gs
ja
mov
adc
and
pop
pop
ljmp
lods
xchg
dec
fsincos
mov
mov
scas
cltd
sub
add
cs
push
mov
push
mov
adc
xlat
sarb
inc
pop
repz
sbb
mov
sub
mov
adc
out
addr16
jb
xchg
loope
cli
pop
lea
aad
cmp
and
ds
lcall
mov
nop
cld
push
inc
inc
mull
mov
lret
es
or
or
adc
flds
insl
iret
sub
add
or
xchg
imul
shll
div
sub
and
xchg
lods
scas
and
mov
push
xchg
jmp
jle
dec
xor
lods
cmp
push
int
ret
pop
add
aam
fdivl
ja
testb
mov
inc
xchg
dec
sub
push
adc
aas
clc
out
nop
and
push
out
dec
mov
js
adc
int
flds
jo
sub
and
lret
fldln2
xchg
or
pop
add
leave
and
xchg
adc
pop
popa
ljmp
or
cmpsl
inc
cmp
add
pop
jle
cmp
rclb
hlt
je
xor
sub
in
sbb
push
inc
testb
outsl
or
and
xor
outsb
out
xor
jo
dec
lcall
xlat
adcl
cs
lods
sbb
inc
popf
jle
popf
xchg
mulb
jl
lods
stos
and
sub
test
or
or
mov
andl
call
bswap
lcall
xchg
mov
arpl
mov
push
and
dec
and
fildll
cmp
popa
sbb
loop
jb
loop
xchg
push
dec
das
pop
loop
or
jmp
sub
mov
or
lret
dec
int
aam
bound
cmpsl
shlb
idivl
icebp
test
ret
sti
adc
add
in
adc
movsl
sbb
loopne
aas
jne
mov
xchg
out
out
xor
data16
cmp
mov
sbb
daa
jge
loopne
dec
xchg
and
das
lods
jl
cmp
xor
jnp
out
in
stc
js
lods
out
pop
andb
inc
cltd
loope
jmp
jnp
notb
mov
or
push
pushf
xor
dec
aam
pop
and
ficoms
iret
stc
adc
dec
xor
or
or
fidivrl
mov
notl
xchg
xor
xchg
mov
outsb
and
ja
mov
xor
xor
sti
ja
or
or
cs
sub
xchg
pop
push
push
push
xchg
jb
mov
or
and
xchg
test
aaa
xchg
mov
xchg
jo
add
test
jge
subb
sbb
mov
jno
addr16
in
lock
or
sub
and
dec
mov
in
shr
and
xchg
js
mov
sub
cld
add
mov
mov
add
push
mov
mov
inc
fldcw
fwait
pop
sbbb
ret
jb
aam
decb
cmp
ja
jno
int3
out
inc
cmp
clc
lret
and
sarl
jb
xor
pop
movsl
lods
mov
xchg
xchg
sbb
sub
lea
inc
mov
adc
lds
mov
pop
shll
ds
fwait
pop
or
cltd
inc
js
and
xchg
xchg
es
lcall
jne
bound
roll
mov
fwait
jo
lret
xchg
adcl
cmp
lods
cmc
lcall
push
rcrl
mov
and
outsl
dec
inc
jge
adc
clc
fwait
pop
ret
popa
xor
mov
leave
lahf
insl
pop
mov
ret
andb
mov
sub
cld
jns,pn
push
imul
nop
adc
iret
std
movsl
mov
stc
sbb
mov
adc
insl
idiv
add
fs
mov
fwait
xchg
or
sbb
push
jmp
in
sarb
jl
push
loope
xor
cmpb
adc
xor
and
or
gs
ret
mov
loope
mov
and
lret
movsb
and
enter
jo
fsubp
jne
mov
push
test
insb
sub
mov
nop
mov
push
jge
mov
loope
mov
mulb
rorb
fiaddl
rolb
lock
mov
popf
adc
pusha
pusha
lods
pop
outsl
sub
push
cmp
add
ds
js
mov
mov
jge
xor
and
xchg
outsb
push
push
inc
aaa
or
cld
sbb
aaa
sub
es
pusha
mov
gs
sbb
rorl
push
or
dec
iret
insb
jecxz
pop
or
cwtl
addr16
push
add
dec
lods
and
or
bound
mov
imul
or
mov
call
loop
sbb
inc
sbb
sub
adc
outsb
and
stc
lock
sub
insb
push
jmp
repnz
mov
rcll
mov
out
xchg
insb
cmp
mov
jle
pop
xchg
and
jl
aas
mov
fistps
icebp
lret
cmc
jo
popf
out
imul
lcall
push
xchg
sahf
mov
add
xchg
shlb
pop
jno
jne
xchg
dec
mul
shll
mov
divl
push
out
stos
sub
lahf
push
dec
dec
ss
rolb
dec
push
repz
rclb
mov
imul
lret
mov
stos
mov
aam
push
jno
xor
pop
addb
sarb
imul
imulb
mov
je
testb
fucom
ret
jle
je
pop
jno
or
sub
adc
fisubrl
sbb
mov
sub
adc
frstor
sbb
shrb
xor
pop
jbe
xor
inc
or
pop
mov
stc
int
adc
adc
pop
sub
int
fdivrs
dec
sbb
push
mov
push
adc
outsl
mov
xor
xor
xor
sbb
inc
test
push
mulb
sbb
insb
aas
rolb
xchg
in
pop
lret
pop
insb
mov
pop
push
outsl
into
.byte
pop
movsb
sbb
add
lods
cld
dec
mov
jns
mov
or
dec
sbb
jb
idivl
add
dec
mov
ja
leave
icebp
fnstenv
ja
sbb
push
fcomip
xchg
mov
or
xchg
xchg
fcmovbe
xchg
push
repnz
or
cmp
and
push
sti
andb
into
push
stos
xor
inc
outsl
imul
inc
dec
call
stos
test
leave
loop
ss
add
cs
jecxz
loop
pop
jae
call
lea
shl
out
out
mov
mov
sbb
sti
xchg
pop
outsb
mov
push
xor
lock
inc
push
fs
cld
mov
mov
add
jns
je
ds
mov
jmp
pop
fcmovnb
flds
cmc
inc
clc
mov
mov
adcl
xchg
fidivl
sbb
shlb
dec
lods
jmp
adc
arpl
sar
pop
imulb
jb
andl
std
dec
and
inc
push
movsb
jbe
cmpsl
xchg
cmpsl
movsb
mov
mov
jo
mov
aad
xor
mov
mov
pop
psubsb
sub
sti
pop
sub
xor
test
or
xor
mov
stos
and
pop
push
lods
fs
popf
mov
cmp
xlat
aaa
lahf
subl
sub
cltd
jmp
add
inc
int
out
loop
pop
std
lret
jne
xor
xchg
fiaddl
movsl
pop
sbb
inc
or
push
sub
mov
aaa
xor
insb
mov
nop
pushf
dec
mov
jo
int
mov
adc
jecxz
enter
xor
jne
push
fwait
or
andl
mov
dec
bound
popa
mov
mov
push
test
je
out
scas
ljmp
loopne
sbb
pushl
lods
pop
cmp
lcall
mov
mov
loop
mov
cmpsb
lahf
cs
imul
xor
push
imul
adc
in
rcl
test
mov
out
andl
push
push
cmp
sbb
into
xor
sbb
or
xchg
pop
sub
xlat
pop
pop
in
xchg
mov
je
out
pop
mov
adc
xor
or
lods
lock
jp
andl
mov
inc
loop
hlt
jmp
pop
mov
fnsave
daa
sub
adc
or
cmp
arpl
adc
cltd
dec
mov
js
add
xchg
mov
jge
lret
hlt
push
xchg
mov
xchg
sbb
pop
fldt
jmp
push
mov
clc
pop
mov
xchg
dec
pop
jge
scas
adc
gs
lods
push
pusha
push
dec
and
sub
outsb
rcll
adc
jp
js
jecxz
out
call
xorl
popf
test
cmpsl
mov
jl
cmp
inc
jbe
arpl
xor
jg
shrl
mov
and
movsb
jb
and
cmovnp
xchg
in
or
scas
setns
jp
add
dec
xchg
jne
xor
js
xchg
out
lds
in
shlb
mov
push
mov
push
and
leave
mov
sbb
stc
fstpl
dec
adc
jnp
imul
into
inc
and
xlat
or
and
movsl
mov
loop
or
shrb
mov
outsl
jg
or
out
xchg
in
and
xchg
test
adc
lea
cmp
scas
xchg
in
inc
push
call
ret
mov
pop
repnz
pop
dec
mov
fucomip
movsb
lret
mov
test
daa
fdivs
fwait
cmpsb
mov
cmpsb
lods
je
aad
fdivs
imul
outsb
dec
jecxz
cltd
addr16
or
sub
dec
fnstsw
cmpsb
cli
pop
daa
inc
mov
jae
repnz
jg
filds
cs
fmulp
loopne
add
fists
lods
jg
stos
dec
xchg
xchg
es
daa
dec
sahf
lret
fs
or
pop
mov
sub
mov
xchg
fcomps
jne
pop
mov
push
jno
dec
and
faddl
add
in
shll
add
fisttps
int
adcb
std
sahf
and
xchg
dec
scas
jno
mov
test
xor
ret
add
in
inc
push
jno
rcll
push
loopne
sub
pop
adc
ds
pop
insb
adcl
pop
push
add
jmp
cmp
hlt
adc
push
fmuls
mov
clc
out
cmp
movsl
lods
aaa
int3
into
dec
sub
dec
cs
or
divl
mov
pop
int
outsl
and
add
cmp
push
out
ss
aaa
cmpsb
mov
dec
nop
getsec
hlt
mov
fildl
into
jns
insb
mov
mov
lds
leave
jae
repz
daa
loopne
ret
clc
cmc
imulb
lods
xor
leave
xchg
je
pop
and
inc
rol
pop
jae
pop
std
and
cmp
or
push
les
ljmp
fs
xchg
or
daa
out
mov
repz
xor
popl
lods
pop
cmp
es
mov
ss
lea
push
mov
mov
popa
cwtl
adc
add
inc
dec
outsb
in
sub
cmp
pop
stos
cmp
lock
adc
iret
xchg
mov
inc
jp
ficompl
out
loopne
cmc
ret
test
lahf
sti
in
sti
clc
inc
out
pop
imulb
cmpsl
push
aad
jecxz
jg
push
adc
push
fstpl
and
jbe
cmp
in
sbb
mov
std
faddl
sbb
xchg
and
jl
aaa
xlat
jbe
mov
pop
and
and
test
repz
cld
cld
fnstenv
shrb
dec
cmpsl
ss
xchg
mov
negl
dec
mov
or
pop
movsb
test
sbbb
inc
ret
lahf
test
inc
imul
mov
jbe
sbb
enter
mov
xorl
ja
xchg
cmpsb
mov
xchg
cmp
test
inc
xor
push
xchg
fildl
jp
imul
gs
inc
pop
mov
mov
jmp
lods
iret
dec
cs
cltd
aaa
nop
xchg
inc
xchg
ss
cltd
inc
shll
sbb
pop
mov
nop
iret
popa
cwtl
inc
sbb
lahf
out
fmuls
pop
imul
pop
ds
ljmp
fcomip
pop
arpl
dec
add
jns
mov
test
imul
inc
sbb
popf
ret
mov
xchg
pop
xor
rcr
jl
inc
repz
adc
adc
imul
push
push
mov
clc
jbe
or
push
push
inc
fsqrt
mov
imul
inc
jl
xor
sbb
arpl
movsb
sbb
adc
not
mov
outsb
out
jae
fld1
cmp
push
add
stos
fistl
fisubl
jnp
iret
pushl
mov
or
mov
add
roll
mov
dec
mov
lret
push
push
lcall
dec
add
pop
out
inc
mov
push
dec
aaa
push
pop
fistpl
mov
xor
repz
mov
into
jge
popa
mov
jns
push
popa
mov
dec
sub
push
cli
adc
adc
clc
outsb
add
add
push
xchg
inc
lods
outsl
sbb
hlt
lds
xor
out
stc
mov
pop
loope
out
call
jnp
xor
and
fistpll
sahf
push
xchg
jae
loope
add
dec
loope
imul
xor
jg
mov
pop
js
dec
jnp
out
daa
mov
pop
repnz
stos
jl
ja
and
je
leave
cld
and
addr16
jno
pop
mov
dec
cld
mov
ss
inc
and
fimull
xor
adc
aaa
mov
sbb
or
subb
lds
pop
cmp
jmp
cmp
in
decb
jp
pop
push
sar
adc
aam
loope
mov
cli
lcall
lock
mov
das
and
add
sbbl
xchg
insb
jbe
sub
or
jae
sbb
sub
js
jecxz
out
repz
shl
and
fsubrs
sbb
and
and
in
or
lret
mov
xor
jae
scas
add
mov
mov
fistps
mov
sub
inc
add
iret
xor
xchg
sbb
adc
arpl
cmp
sbb
pop
es
mov
push
outsb
les
mov
aam
cltd
xchg
inc
dec
mov
out
pop
jp
enter
or
out
add
mov
aam
jns
adc
fisttpl
mov
mov
push
fdivrs
add
and
or
xchg
mov
mov
jp
loopne
insb
adc
je
insl
rcrb
bound
jns
popa
test
pushf
push
daa
adc
call
ds
fstpt
scas
js
sbbl
and
int3
sbb
pop
outsl
inc
mov
loop
adc
pop
cmpsb
enter
in
pop
mov
imul
shlb
lret
inc
stos
popa
stos
push
test
pop
shlb
je
xchg
pop
mov
sub
mov
or
mov
pop
rclb
lret
add
push
ret
or
lret
mov
sbb
mov
mov
jp
jno
out
push
inc
sbb
dec
xor
inc
inc
fucomp
cmp
cld
not
push
stc
cmp
inc
mov
js
cmp
or
cmp
cmpsb
xchg
dec
call
cltd
ret
mov
jmp
jnp
test
aaa
je
cmp
and
cmpsl
pop
dec
std
stc
es
xchg
sbb
loope
ljmp
mov
mov
dec
and
mov
ds
dec
nop
out
in
pop
std
mov
xor
push
lock
mov
dec
mov
cmp
sbb
inc
repnz
jge
ljmp
loopne
cmpsl
addr16
xor
sub
shlb
mov
sub
sahf
jp
xlat
xor
je
push
cmp
mov
add
ficompl
jns
clc
cmp
dec
jmp
push
lock
push
cmpsl
xor
add
push
xor
jno
test
or
repnz
sahf
jle
std
sarl
dec
aas
fisubl
int3
pushf
sbb
mov
out
add
int
ret
call
out
stc
mov
xchg
fsubrs
cltd
repz
mov
jo
and
stos
rolb
sub
jne
xchg
mov
push
jnp
sbb
lahf
je
inc
and
mov
inc
addr16
fsubrs
dec
adc
cli
cmpsb
push
inc
ja
shll
mov
sbb
mov
sub
sarb
push
jle
fcomip
push
pusha
pop
push
dec
xchg
lods
lahf
xor
sub
mov
iret
scas
call
stc
into
adc
mov
dec
mov
jp
addr16
jno
mov
stos
mov
sahf
adc
enter
cmp
adc
test
sti
xchg
pop
repnz
pop
lods
ret
mov
mov
mov
in
xchg
outsb
fdivrl
inc
loop
int3
push
lret
sub
sub
inc
jb
inc
test
out
pop
pop
int3
mov
test
adc
lret
xchg
sbb
xor
cmc
mov
dec
dec
ja
imul
cmp
das
pop
xchg
gs
test
pop
clc
out
jbe
mov
mov
fdivrl
iret
push
aam
data16
movsb
xchg
mov
rcrb
ds
sbb
add
pop
arpl
xor
pop
call
mov
sbbl
out
in
in
mov
xchg
or
mov
sbb
inc
jnp
cmp
ret
push
sub
in
lcall
inc
mov
js
inc
jno
sbbb
mov
jne
adc
cmp
jl
cmp
pop
iret
cmpsb
pop
in
xchg
jecxz
mov
arpl
lret
or
cltd
xchg
rorb
test
xchg
mov
pop
rcr
icebp
mov
and
mov
mov
fisttpl
negl
outsb
inc
bound
mov
fucomi
pop
insb
mov
xor
jbe
mov
mov
sbb
arpl
fdivrs
pop
add
and
mov
je
xor
jmp
ret
imul
or
or
add
daa
pop
int3
movsl
push
test
cltd
pushl
pop
mov
xor
movsb
mov
inc
loopne
pop
add
xor
mov
adc
enter
imul
mov
add
pusha
inc
cs
adc
xchg
mov
jl
lds
test
lods
push
mov
loope
and
pop
ret
xchg
or
xor
add
lods
mov
nop
dec
mov
stos
in
das
xchg
lods
ja
mov
mov
imul
fists
fsubrl
popf
hlt
or
scas
andb
adc
fildl
movsl
gs
cmp
sub
mov
neg
lret
cmpb
rcr
sbb
or
add
fisubrs
fwait
cmpsl
popf
inc
and
les
mov
add
and
mov
mov
testb
fwait
dec
jp
imul
mov
in
push
outsl
xor
stos
nop
scas
adc
cmpl
dec
mov
mov
sti
push
sbb
decl
in
and
pop
mov
popa
lahf
dec
jl
dec
dec
sar
das
sub
or
popa
gs
and
or
aam
mov
xor
popa
not
push
imul
lcall
test
jb
decb
fildll
insl
int
jne
cld
sub
into
mov
mov
clc
cmp
mov
mov
pusha
add
mov
xlat
xchg
pop
mov
mov
mov
pushf
lret
cmp
arpl
fstps
cmp
stos
jo
jp
or
lods
adc
pop
or
xchg
mov
outsb
push
cmpsb
adc
dec
and
mov
jmp
sbb
cmp
mov
gs
insl
jle
stos
shll
adc
test
cmpb
outsl
daa
loop
pop
pop
jb
lret
enter
push
pop
pop
fs
mov
rolb
push
lahf
push
in
addr16
and
pop
jl
fcoms
data16
pop
mov
repnz
arpl
in
push
sub
pop
outsl
dec
mov
aaa
cmpsl
add
xor
mov
pop
jbe
icebp
mov
xor
sub
jno
inc
jne
outsl
push
and
cmp
add
mov
dec
xchg
stos
icebp
scas
push
add
ja
adc
push
push
and
lret
lret
mov
out
not
xor
jle
dec
ror
test
inc
inc
and
mov
push
push
repnz
arpl
out
mov
pop
pop
hlt
and
ffreep
call
pop
mov
testl
mov
jle
fs
sub
addl
jp
test
repnz
sbb
cmc
icebp
call
mov
scas
mov
mov
sub
clc
sbb
popf
icebp
insb
in
adc
popa
iret
idivl
fisttpll
jo
sbb
inc
push
mov
pop
icebp
outsl
cli
sub
loope
clc
lds
nop
cs
dec
pop
xchg
pop
ds
fsubs
fmuls
dec
jmp
bound
hlt
cltd
push
movsb
xor
cmpsb
xchg
repnz
mov
jg
mov
jo
push
mov
cwtl
shrb
jo
fists
sub
or
lcall
call
push
sub
insb
aad
fcmovne
push
push
ja
cld
cmpb
in
out
xor
out
mov
adc
call
bound
sub
mov
addr16
adc
hlt
or
pop
cwtl
lds
jo,pt
das
repz
dec
xchg
cwtl
xor
jge
sub
jle
in
and
xchg
mov
ret
shll
xor
test
ret
jl
jb
cmc
fcmove
imul
xor
fdivrs
jmp
out
out
das
mov
test
lahf
mov
lea
xchg
or
pop
push
xchg
rcrl
xor
jb
loope
dec
push
js
sub
mov
pop
inc
sbb
mov
pop
mov
pop
sti
outsb
lods
xchg
or
mov
cmpsl
and
mov
adcb
and
push
movsl
ja
cmp
dec
adc
lcall
stos
mov
inc
jge
cli
cmp
fs
mov
jns
xor
aaa
mov
call
lcall
cli
rcrb
repnz
je
repnz
sub
rcrl
pop
cmpl
jnp
aam
clc
stc
inc
fs
jmp
jmp
pop
mov
jecxz
loope
or
cmp
and
cmp
push
movsl
ret
xchg
mov
stc
movl
daa
adc
popa
std
or
sub
pop
push
pop
popa
scas
lret
das
lods
popf
sub
dec
fisubrs
sarb
fs
filds
push
cmp
dec
mull
sbb
repnz
fcoml
mov
fwait
int
jmp
int
and
sub
xor
addr16
repnz
lahf
jne
and
inc
not
imul
xor
cmp
enter
mov
test
mov
pop
fisttpl
adc
push
dec
xchg
sub
int
cwtl
outsb
rcrb
ja
inc
sub
mov
imul
ja
fmulp
aaa
notl
or
hlt
mov
mov
inc
test
nop
dec
mov
sti
jns
pop
dec
test
or
push
xchg
gs
fdivrs
mov
pushf
cmpsl
mov
add
push
xor
test
xor
push
mov
cli
outsb
in
fs
aas
ret
adc
enter
icebp
stos
out
test
ds
movsl
pop
push
or
cmc
popf
pop
cmp
cmp
sub
xchg
nop
fistpll
mov
divl
adc
gs
push
pop
mov
dec
out
cmp
stos
hlt
roll
push
jb
mov
cmp
dec
xchg
lret
xchg
addb
pop
aad
mov
or
adc
mov
test
jl
cmpsl
hlt
imul
dec
mov
mov
fwait
int3
fnstenv
call
loop
or
sarb
loopne
lahf
mov
loopne
aaa
sbb
push
adc
sbb
inc
cmp
xchg
dec
pop
loop
and
rol
jo
rcll
adc
xchg
sbb
mov
or
pop
push
call
jnp
lods
aad
push
add
push
lods
js
test
cwtl
push
push
and
xlat
cltd
shll
add
pop
pop
fstps
cmp
xchg
aas
repnz
scas
js
or
idivb
push
mov
fstl
mov
and
jp
xor
out
lods
popa
enter
fs
mov
js
mov
inc
js
test
lods
mov
xorps
pusha
dec
mov
jno
pushf
jae
popa
mov
lock
fistpl
xor
mov
jbe
xorl
jno
dec
test
imul
std
xor
add
cmp
pop
lret
dec
lea
aas
dec
popf
xor
je
inc
xchg
push
or
sbb
mov
cmp
aas
sbb
in
xchg
and
jp
inc
aaa
lretw
jp
push
push
lret
out
cmp
testb
in
addr16
jl
pop
aad
mov
push
mov
jl
and
enter
pop
dec
xorb
pop
pop
loop
inc
out
aas
cmc
push
mov
hlt
lods
in
jge
stc
sub
lods
test
lahf
xchg
and
ret
notl
sbb
and
mov
sub
jae
in
enter
test
sti
push
int
es
adc
add
adc
loop
and
movl
dec
hlt
dec
or
cmc
test
pop
inc
sbb
cltd
add
rcr
sti
mov
in
sub
imul
lods
mov
cmp
aaa
and
add
insl
clc
mov
xchg
mov
mov
je
xchg
add
imul
test
jmp
cmc
push
add
pop
pop
insb
rorb
pop
mov
inc
mov
jmp
dec
jne
pop
cli
je
insb
push
cltd
push
push
pop
add
cmpl
icebp
shl
pop
rorb
test
or
jbe
dec
lods
jbe
js
dec
dec
add
imul
pop
and
mov
insl
repz
pop
inc
xchg
xchg
mov
int3
inc
int3
aad
adcl
inc
mov
dec
std
pop
das
xchg
std
xchg
icebp
jge
notl
cmpsb
js
pop
jb
test
pop
or
push
cmp
sbb
shl
add
mov
push
lret
mov
popf
push
je
jbe
inc
or
and
mov
sarb
pop
cmc
mov
sbb
lcall
js
outsl
xchg
mov
js
ds
mov
es
push
fildl
pop
mov
xchg
jbe
insl
pusha
aam
outsb
dec
mov
stos
pop
call
inc
roll
ljmp
pusha
ret
fldenv
ds
loope
pop
lods
fdivs
jecxz
cmp
dec
sub
pop
inc
loopne
and
dec
mov
cmpsb
fimuls
in
mov
and
pop
push
sti
test
dec
jbe
dec
popa
mov
push
sbb
leave
out
aam
mov
ret
jge
lods
rcl
inc
imul
js
stc
and
aas
or
dec
xchg
daa
and
jnp
xor
pop
jb
dec
daa
adc
jae
daa
xchg
dec
cmp
shl
mov
cmp
dec
cmc
out
cltd
jnp
iret
cltd
mov
mov
lret
mov
clts
nop
out
repz
sbb
int3
push
mov
cmp
test
jnp
lret
out
jae
mov
sub
mov
fsub
push
lret
cmpsl
inc
fdivrl
push
mov
enter
leave
scas
pextrw
je
cmp
pop
xchg
rcrb
adc
pop
push
add
shll
int3
mov
jmp
imul
or
popa
add
and
pop
inc
add
js
stos
sti
dec
fucomi
push
mov
es
sbb
daa
pop
ret
lods
lods
arpl
sbb
test
sbb
xchg
mov
repz
ds
fidivl
xchg
arpl
mov
xrelease
add
lret
and
fs
pop
adc
jge
sub
mov
add
pop
mov
push
in
fists
mov
scas
add
mov
mov
xor
insb
pusha
icebp
xchg
xor
scas
jo
xchg
dec
dec
out
jecxz
pushf
aaa
push
dec
ficompl
andl
dec
int
jns
or
into
test
call
test
mov
ss
int3
or
and
dec
sbb
mov
test
pop
mov
adc
pusha
jae
es
jnp
enter
mov
pop
mov
stos
pop
cmc
scas
pop
dec
inc
cmp
movsb
sbb
cmc
cmp
push
imul
mov
fisubrl
jns
std
or
push
jecxz
jae
mov
out
gs
sbb
mov
jbe
cmpsb
lods
xchg
push
aam
cs
push
adc
mov
movsl
iret
aad
pusha
pusha
xchg
jecxz
cs
pop
push
int
aam
popa
push
lock
loop
les
xchg
fsubr
xchg
test
dec
ja
dec
inc
pop
test
outsl
aad
iret
mov
xor
divl
sti
fucomp
lea
mov
movsb
inc
out
cmp
imull
sbb
out
shll
fwait
inc
mov
xchg
into
call
das
cmp
sub
inc
imul
xchg
xchg
aad
imull
cwtl
lock
aas
xor
sub
js
push
test
xchg
jb
scas
jnp
add
cmpsl
sub
std
stc
cmpl
cmpl
popf
and
test
jl
hlt
andb
xchg
mov
jecxz
jmp
xchg
or
movsl
aam
loopne
repz
pop
lds
jbe
sbbl
cmp
xchg
rclb
xchg
mov
jmp
lret
lcall
jbe
mov
scas
sbb
jle
xor
mov
loop
lcall
sbb
xchg
push
fistl
inc
add
or
push
lcall
into
adc
shl
add
mov
imul
icebp
inc
jmp
repz
or
arpl
incb
outsl
nop
decw
mov
mov
jns
sbb
test
pop
arpl
shrb
pop
dec
mov
xlat
lods
pop
or
out
pop
imul
imul
arpl
movsl
idivl
test
sbbb
insb
sbb
test
into
push
or
add
inc
aam
les
iret
dec
hlt
stos
or
scas
xchg
mov
mul
jge
inc
jbe
push
testl
jp
in
pop
add
xchg
inc
lret
call
adc
inc
es
mov
scas
shrl
mov
xlat
call
xchg
lea
adcb
and
adc
inc
push
push
cmp
add
inc
adc
mov
sbbl
inc
movsb
pop
int3
aad
mov
cmpsl
out
adc
sti
imul
mov
dec
in
ds
lcall
add
or
push
cmp
jbe
jmp
mov
pop
stos
jmp
pop
ja
dec
test
sub
lret
imul
adc
lea
sbb
cmp
imul
mov
sahf
arpl
cmp
jo
mov
lea
sbb
adc
je
cmp
clc
pushf
cmp
adc
jmp
stc
rcrb
pop
inc
les
or
adc
jmp
dec
inc
push
mov
int3
mov
pop
jae
cli
push
xor
push
cmc
aam
mov
push
add
stc
mov
xchg
mov
jb
inc
jl
popf
dec
mov
fdivp
das
mov
add
jae
movsb
rolb
mov
stos
out
test
add
adc
and
nop
adc
lcall
xor
sub
adc
hlt
add
rclb
aad
and
icebp
out
daa
je
loope
fcompl
push
pop
xchg
mov
mov
jp
pusha
pop
sbb
out
int3
cmp
mov
adc
sahf
in
imul
aaa
inc
pushf
or
jp
stos
popf
lds
xor
cmp
repnz
dec
aad
sbb
ljmp
mov
cwtl
cmp
out
pushf
sti
ret
sub
push
jns
mov
cmp
xor
pop
cmp
ljmp
xchg
andb
mov
xchg
mov
xchg
inc
arpl
sbb
mov
cld
inc
or
andl
pop
push
push
mov
out
jae
lods
sbb
jo
mov
cmp
mov
out
imul
cmpl
xor
inc
xchg
mov
xor
mov
adc
and
cmp
xchg
dec
ss
test
adcb
lea
movsl
testl
aam
xchg
cld
inc
movsl
rcl
lcall
fcmovu
and
and
mov
rorl
xor
mov
mov
or
sbb
push
out
sbb
sub
xor
or
inc
sub
push
jbe
addr16
mov
dec
dec
adc
xor
push
cmpsb
movsl
arpl
test
cmpb
jecxz
inc
sub
out
xchg
jnp
or
lock
adc
xchg
mov
fstl
dec
ss
push
dec
fldcw
or
repz
and
xor
inc
nop
out
out
mov
adc
fists
aam
xor
mov
jecxz
lcall
out
lods
test
aad
dec
pushf
idiv
cli
mov
jno
int3
dec
adcb
inc
faddp
push
push
repnz
out
push
and
leave
scas
or
pop
pusha
and
test
sub
cmp
dec
dec
push
dec
fiadds
lret
pop
lret
out
movsb
pop
pop
addr16
adc
jbe
add
bound
aas
cmpsb
lret
dec
data16
sbbl
sbbl
in
loop
lods
popa
stos
repz
nop
xchg
dec
pop
fsin
jno
mov
mov
loop
push
aad
stc
cld
dec
adc
cwtl
inc
sbb
sbb
push
mov
xor
sbb
push
jge
in
add
jle
jb
dec
fwait
pop
scas
mov
pop
fnstenv
jno
mov
pop
jle
push
sahf
out
adc
mov
pop
std
in
ljmp
in
adc
loope
xor
push
cmpsl
sbb
sarl
leave
jns
daa
pop
bnd
addb
mov
movsl
in
int3
push
lea
jb
std
ds
aaa
insb
orb
pop
adc
jnp
add
mov
mov
ret
dec
fidivrs
mov
jne
fs
std
or
and
and
sbb
enter
xor
lea
mov
decb
je
xor
ja
loope
lret
popf
scas
jp
inc
fdivs
bound
xchg
jnp
sbb
clc
lods
pop
mov
sbb
sbb
add
mov
xor
xchg
popl
js
cmpsb
xchg
add
das
repz
iret
test
mov
cmpsl
jnp
call
xor
mov
shll
repz
in
sbb
addl
xchg
paddsb
mov
jg
scas
iret
pop
push
int3
jp
xchg
bts
mov
adc
andb
mov
rep
xchg
push
jb
mov
adc
imul
mov
dec
jmp
test
lds
mov
pop
into
jnp
aad
icebp
test
fs
aas
nop
pop
orb
mov
ds
scas
push
sbb
inc
xor
dec
insb
mov
add
es
add
sub
fisubs
xchg
inc
pop
outsb
and
xchg
mov
into
mov
xor
sbb
pop
nop
les
jbe
sub
notl
fsubs
xchg
lock
add
cs
bound
movsb
stos
stos
cmp
mov
jmp
sub
fwait
scas
push
sub
sub
xor
iret
das
scas
mov
ljmp
scas
cltd
mov
imul
pslld
xchg
lcall
push
cmova
jbe
pop
cmp
push
cmp
inc
inc
xor
jb
test
scas
daa
adc
fisttpll
pop
sti
dec
jb
pop
lret
mov
jle
jo
movsl
pop
and
out
mov
cmp
sub
aaa
jb
mov
push
cmp
jl
dec
iret
arpl
xchg
jp
mov
sub
pop
fbstp
repz
jo
int
cmp
fistpll
ficompl
lret
mov
fwait
add
xor
sbb
inc
in
icebp
push
jg
stc
adc
mov
or
pusha
ja
xchg
out
dec
les
in
mov
sbb
ja
jge
mov
mov
int3
xchg
mov
lcall
mov
xchg
cmp
adc
sbb
and
inc
rclb
jo,pt
lea
rdtsc
sbb
mov
addr16
jne
mov
xor
je
lcall
mov
push
xchg
sbb
pop
addr16
add
xchg
mov
loope
mov
or
jae
leave
pushf
xchg
int3
mov
mov
xchg
cwtl
andl
inc
in
mov
pop
cmp
stos
xchg
mov
fiadds
int
cmp
mov
test
jo
xor
fstpl
in
adc
loopne
pushf
sarl
sbb
sub
sbb
cld
movsl
add
push
repnz
into
mov
push
xor
mov
xchg
lret
ret
out
cmp
lret
dec
cmpsb
aaa
adc
test
ljmp
push
cmc
sbb
shll
sahf
fs
inc
and
je
jl
or
cmp
rclb
inc
jns
lds
cld
cmp
mov
or
cmc
lcall
notl
faddl
lcall
into
rclb
sub
cmp
icebp
scas
jge
inc
loope
movsb
testl
sub
pop
sbb
cli
push
add
shll
ss
add
add
rcll
js
or
dec
loopne
sub
inc
jo
addl
mov
jmp
adc
mov
mov
sbb
in
je
stos
icebp
cltd
outsb
or
cltd
das
xlat
inc
inc
test
mov
out
mov
mov
sub
pop
subl
aaa
mov
fadds
dec
cmpsb
xor
mov
jb
sbbb
addr16
sub
std
inc
arpl
adc
sbb
add
outsb
aam
ja
mov
repnz
pop
aaa
pop
lock
addr16
fsubr
imul
mov
xchg
push
mov
cmp
pop
cmpsl
repz
or
iret
shlb
rolb
mov
pop
fbld
pop
call
or
mov
cld
push
arpl
dec
rclb
test
loopne
mov
fisttps
mov
mov
jae
lods
xlat
insl
jae
ljmp
mov
movsb
mov
jnp
in
roll
lahf
cmpsl
movl
jae
leave
dec
into
xor
mov
shlb
lret
call
in
jbe
sbb
jp
xchg
loopne
pop
into
or
fwait
aam
cli
sti
inc
repz
repnz
aad
addr16
and
cmp
rorl
xor
aaa
std
push
loope
dec
ret
add
shr
sub
mov
scas
xor
repnz
fldl
xchg
xchg
pop
mov
lds
std
leave
test
mov
dec
mov
enter
push
or
push
sub
add
xchg
leave
std
sub
xor
pusha
arpl
lret
aad
outsb
or
cmp
imul
cli
repz
icebp
iret
push
faddp
ja
pop
mov
lcall
pushf
cli
pop
xor
push
xchg
test
inc
lret
xor
mov
cmp
xchg
inc
int3
push
movsl
ja
xchg
mov
clc
push
add
mov
cmpsl
mov
inc
dec
adc
sbb
xlat
dec
mov
fisttpll
mov
add
out
xor
es
popf
test
out
out
and
push
cmpsb
or
mov
jl
inc
scas
arpl
aaa
or
pop
enter
inc
jp
loop
inc
pop
fcmovnu
dec
into
das
gs
or
jge
movsb
int3
sbb
xlat
add
cmp
loope
cmp
and
stos
loop
jp
dec
enter
sub
repnz
sbb
orl
mov
imul
or
popl
jle
jp
nopl
mov
fnstenv
push
das
ds
or
pushf
sub
jbe
sahf
lock
in
test
jns
popf
in
pop
jl
ret
test
les
iret
and
stos
dec
xchg
scas
mov
mov
cltd
rorl
xor
imul
ficoms
dec
add
cmp
test
outsl
movsl
jp
mov
je
and
in
popf
mov
xchg
jg
pop
cmp
inc
add
fidivs
repnz
adc
pop
test
xchg
aad
test
shl
pop
in
cltd
mov
sub
add
and
aas
xlat
or
daa
pop
push
fstpt
xor
test
inc
sbb
dec
sub
loope
incl
mulb
loopne
rcl
dec
and
adc
push
sub
loope
mov
sahf
and
loope
lods
pusha
shlb
xchg
pushf
push
fnstenv
mov
push
cmc
jl
mov
and
mov
mov
cmp
aad
test
fwait
pop
jmp
fcoms
xorl
pop
dec
push
xor
and
into
fdivs
cltd
sub
fildll
das
mov
lahf
jne
jbe
inc
jae
jecxz
inc
xchg
pop
adc
inc
cmc
jnp
pop
cmpsl
sub
mov
mov
out
inc
bswap
ds
xor
rcrb
js
mov
adc
xchg
cltd
int3
xchg
mov
jl
dec
aam
xchg
out
push
adc
cmpsb
pop
cmovl
sbb
mov
fnsave
or
loop
ss
and
sub
xchg
xor
jbe
xchg
into
push
das
jb
lds
mov
push
jne
test
or
cmovl
dec
sub
fcomi
scas
sahf
jg
and
mov
lcall
into
in
push
test
inc
rcrb
jge
xchg
rclb
hlt
pop
mov
pop
mov
lret
mov
sahf
dec
dec
in
sbb
sub
push
add
push
pop
je
mov
add
shll
mov
cmc
insb
pop
adc
sbb
jno
divl
shl
and
faddl
mov
movsb
jbe
hlt
out
jp
lock
inc
mov
out
mov
xchg
sarl
xor
lea
xchg
jb
mov
mov
int
jbe
cmp
lds
andb
shll
jecxz
outsb
or
stc
movb
mov
xor
rorl
mov
pop
mov
and
dec
fs
int
sub
jo
mov
xchg
clc
or
ja
clc
mov
sbb
sbb
pop
and
pcmpgtw
movsb
lahf
xor
or
jbe
stc
adc
add
cli
mov
pop
pusha
jae
repz
testl
mov
dec
jae
pop
test
jb
lds
push
xchg
xchg
movsb
dec
xor
push
fimuls
addr16
xor
push
mov
dec
xchg
in
adc
adc
loopne
mov
mov
push
fldl
subl
not
ret
and
jmp
jb
mov
test
xor
adc
jo
pop
repnz
adc
jnp
cmpsb
icebp
ss
jge
mov
shlb
xor
repz
pop
jns
xlat
pop
inc
daa
cmp
pop
or
ja
jns
mov
clc
mov
ds
arpl
mov
mov
mov
pop
inc
mov
in
cli
ficompl
arpl
pop
leave
mov
bnd
inc
stc
test
jno
pop
cmp
fucomi
int3
lea
push
loop
xchg
mov
mov
fwait
lret
mov
mov
inc
shll
sub
out
ja
mov
ret
xor
in
xlat
xchg
repz
je
jb
pop
aam
es
sbb
jg
pop
scas
mov
insl
xchg
cmp
int3
push
push
sti
lock
or
sbb
adc
out
adc
mov
icebp
mov
adc
fs
mov
dec
xchg
lea
fs
jno
inc
dec
and
inc
mov
movsb
inc
and
jmp
jge
sub
stos
inc
int
imul
imul
sbb
int
push
or
or
jbe
lret
scas
inc
iret
popa
xorl
clc
adc
inc
fdiv
push
inc
mov
leave
dec
push
xlat
xor
jae
outsb
add
sbb
or
push
add
xchg
sbb
test
and
popf
push
inc
stos
jle
ficompl
out
jmp
jnp
xchg
pop
jne
mov
lcall
popf
je
xchg
adc
shl
sub
jo
ret
fwait
es
sub
and
daa
int3
es
mov
inc
imul
mov
and
lahf
stos
sub
fistpll
addr16
push
xor
ss
and
dec
and
popa
pop
and
sahf
fs
fcomps
sub
cld
dec
addl
mov
dec
mov
cmp
ficompl
loop
nop
jb
jbe
subl
mov
jl
xor
pushf
insb
insl
ds
pushf
sub
cs
roll
insl
pause
sub
xchg
outsl
orl
jecxz
mov
add
inc
dec
mov
xor
mov
rolb
sub
repz
lahf
dec
adc
loope
push
imul
ds
in
jle
test
imul
inc
inc
push
rcll
inc
call
leave
andb
lock
xchg
imul
cmpl
js
fs
loop
inc
int
scas
imul
pop
sub
cwtl
push
negb
shll
inc
div
enter
adc
pop
popw
repz
dec
inc
in
jl
js
xchg
add
icebp
cmpsb
pusha
ja
inc
xchg
inc
int
arpl
sbb
andb
xchg
adc
cltd
push
pop
leave
imull
mov
mov
in
xlat
push
mov
jecxz
out
rcl
pop
fcoms
jns
mov
mov
mov
mov
addr16
sahf
or
std
jge
pop
cmp
or
das
mov
jg
loopne
jns
fstpt
sbb
repnz
push
iret
clc
inc
stos
inc
aam
in
aaa
and
inc
out
cld
push
xchg
sub
in
inc
inc
popa
xchg
sub
ljmp
add
daa
pushf
pop
add
stc
and
leave
or
push
in
or
mov
inc
sar
adc
stc
int3
cwtl
imul
outsb
dec
lcall
inc
jge
and
jns
int
stos
and
jmp
jne
sarb
cltd
adc
jmp
or
dec
mov
lret
aad
jecxz
mov
and
nop
push
xor
xchg
fnsave
insb
and
mov
and
add
popf
cmp
aas
repz
imul
cmpsl
int3
sub
pop
je
add
xor
sbb
and
fistl
imul
and
outsb
ret
mov
or
nop
mov
setp
add
ror
and
fldenv
mov
js
lock
ret
push
inc
dec
jae
dec
cmpsl
andb
and
inc
or
repnz
imulb
icebp
push
adc
mov
or
push
js
adc
imul
jge
mov
cwtl
inc
scas
ss
push
cmp
or
insb
inc
sbb
sub
cli
aam
xor
add
dec
icebp
scas
cltd
cmp
flds
mov
imul
cmp
mov
fcomi
aam
stos
push
sbb
test
sbb
cltd
fimull
enter
and
dec
push
ljmp
cmpsl
aam
mov
int
call
or
add
jl
dec
push
cld
insb
mov
push
mov
jp
mov
or
sub
inc
test
dec
fcmove
push
aaa
sbb
outsb
pop
push
lea
inc
faddl
cli
lret
adcl
loop
js
nop
in
dec
cmp
fbstp
iret
inc
js
cli
out
xchg
cmpsl
and
stos
push
scas
fadd
movsl
in
xchg
jae
test
pop
and
mov
int
mov
jo
sbb
add
inc
jnp
fistps
xchg
push
push
decb
loope
mov
cwtl
push
loop
das
es
cmpsl
push
movsb
pushf
out
int
and
movsl
pop
and
sbb
xor
es
jle
push
out
sbb
xor
lds
cli
cmove
and
cmc
push
dec
bound
cmc
push
xchg
lods
mov
and
int
and
or
jl
lahf
test
test
jge
aad
sub
or
enter
rolb
inc
jnp
rclb
jle
push
aaa
je
mov
pop
or
mov
or
imul
pop
fstps
ja
loopne
adc
sarl
shrb
ljmp
enter
push
imul
ret
mov
add
xchg
fs
scas
subb
xchg
testl
shll
pop
cs
adc
lock
pop
add
scas
aaa
mov
mov
movsb
testb
imul
dec
aad
and
push
pop
jbe
sbb
add
jle
lret
loop
xchg
xor
pop
cld
add
in
pusha
xor
loop
les
jns
fbld
mov
mov
jg
adc
inc
faddl
jnp
cli
lods
repnz
jno
xchg
and
imulb
popf
inc
lcall
test
fldln2
push
xchg
out
imul
xchg
bound
les
mov
add
xchg
dec
sub
repz
js
jnp
outsb
aam
sbb
adcl
mov
adc
push
xchg
lahf
cmp
xor
sbb
jne
jne
mov
int3
loope
scas
rorb
xchg
lock
test
pop
cmp
iret
outsb
dec
mov
sbb
ret
popf
stc
xchg
cmp
pushf
insl
inc
mov
imul
cmp
outsb
out
call
pop
xor
jmp
repz
das
xchg
cmp
in
pop
pop
xchg
mov
out
movsl
mov
lret
xchg
test
jno
fnsave
xchg
clc
js
sahf
test
mov
xor
enter
xchg
mov
jl
xchg
sbbb
sti
ljmp
rorb
shrb
lcall
mov
jo
xchg
loopne
jge
xchg
int3
inc
jecxz
pop
sub
pop
fnsave
aam
sbb
mov
and
rorl
mov
push
addl
mov
mov
xor
sbb
cmpsb
aam
sub
dec
push
call
cmc
iret
add
ret
insb
sub
test
shlb
ret
sub
dec
push
mov
add
stos
fsubl
xor
mov
jns
xor
sbb
iret
aaa
pop
imul
imul
movsl
lcall
xchg
adc
cld
xor
inc
push
jmp
aam
sbb
adc
xor
xchg
lods
lcall
and
pop
addr16
into
das
fldl
test
fdivrl
xor
std
mov
pop
jns
inc
ljmp
cltd
aas
outsb
pop
pop
out
mov
stc
mov
loope
insb
mov
sub
pusha
push
adc
sub
mov
mov
std
or
jbe
mov
jge
mov
lret
pop
ss
mov
cmpsb
in
cmpb
cmpsl
dec
and
rcr
push
push
mov
pop
cmpsl
mov
loop
xchg
mov
sub
jnp
outsb
outsb
dec
sbb
push
cld
jns
out
lret
aam
adc
fidivrl
loop
addb
mov
cs
jo
pop
testb
popa
pop
jnp
shrl
movsb
lea
jnp
out
pop
icebp
sbb
inc
aam
mov
movsb
or
mov
jo
andb
add
insl
mov
jns
lea
test
enter
mov
mov
push
std
iret
and
mov
int
add
pusha
mov
outsb
daa
ret
mov
jecxz
xchg
icebp
enter
loopne
xchg
shl
es
pop
push
sub
dec
adc
mov
fcmovu
mov
popf
ds
jno
inc
fisttps
loope
loopne
mov
sete
mov
icebp
cmp
push
aaa
jb
lods
jg
add
pop
ret
add
ficomps
pop
popf
pop
mov
xchg
sbb
mov
push
inc
push
popa
mov
lret
fisubrs
adc
cmpl
cs
shll
ss
rorb
jp
shrl
fildll
cltd
cwtl
mov
dec
cmp
mov
clc
push
cmp
sub
insb
lods
mov
sahf
repnz
mov
out
pop
mov
jne
popf
les
mov
jp
inc
ret
aaa
repz
je
add
dec
jmp
call
fcoms
adc
nop
sbbb
rorb
inc
or
pushf
dec
out
jle
ficomps
or
negb
data16
mov
mov
lea
pop
pop
lock
es
pop
cld
outsl
jo
repnz
jns
jp
cs
jmp
adc
dec
outsl
sub
xlat
or
mov
cmp
scas
stos
mov
mov
repnz
test
aaa
addl
or
sbb
mov
dec
or
mov
lds
inc
add
das
loop
lock
ljmp
push
inc
outsl
and
dec
lods
ja
push
mov
fmull
leave
aam
xchg
roll
and
dec
aaa
inc
xchg
nop
popf
xor
jno
and
sar
push
or
push
xchg
test
das
hlt
nop
jle
adc
jmp
lret
jnp
popa
pop
push
es
loop
out
jle
and
pop
mov
inc
mov
es
mov
ja,pt
sbb
out
xchg
les
jnp
cs
add
inc
aam
out
orb
cmp
cmp
dec
rclb
call
dec
and
add
sti
shrb
sbb
pop
push
jae
mov
xor
or
mov
mov
call
push
call
xchg
add
loope
inc
scas
xchg
repnz
out
adc
mov
sbb
pop
lahf
and
pop
mov
outsl
mov
lea
lea
mov
aaa
loope
std
and
mov
jb
jne
fcomip
fdivrs
inc
lahf
mov
jg
js
std
mov
int
xchg
mov
sbbl
dec
call
test
movsl
imul
inc
sub
nop
daa
jge
adcb
popf
imulb
negl
lods
sub
repz
xor
or
push
pop
mov
arpl
sti
and
xlat
pusha
lret
mov
out
push
cmpsl
push
pop
loopne
or
pop
ds
es
cmpsb
push
xorb
ror
pop
enter
cwtl
jle
es
orb
or
mov
orl
sahf
shlb
inc
add
out
cmc
dec
bound
lret
daa
sub
dec
test
dec
les
lret
fmulp
adc
dec
fstpt
inc
or
shll
cmp
mov
pop
test
sarl
out
jge
pop
adc
xor
loope
dec
dec
fwait
pop
int3
lcall
dec
stos
addb
rolb
push
int
sub
xor
call
dec
xchg
out
lahf
push
fildll
mov
and
mov
incb
mov
or
pop
dec
insl
mul
cmp
inc
icebp
sbb
cmp
dec
mov
and
pushf
add
cmpsl
jmp
fdivl
dec
fcoml
jno
or
adc
xchg
rcr
cmp
mov
mov
int3
pushf
into
add
dec
sub
fs
sub
in
das
outsl
mov
scas
jno
sbb
sbb
or
aaa
movsb
xorb
outsb
shlb
push
shl
ss
pop
lock
into
xchg
xor
fst
push
mov
mov
jl
sbb
pop
shrb
xchg
push
or
xor
in
inc
pop
movsb
rcll
adc
mov
dec
jo,pt
mov
icebp
call
dec
pushf
inc
enter
adc
enter
test
fs
sub
jmp
icebp
mov
es
adc
ror
dec
sti
mov
xchg
pop
xchg
push
enter
movsl
or
dec
or
pusha
mov
adc
xchg
gs
pop
xchg
fs
mov
mov
sub
inc
push
dec
pop
dec
out
push
inc
xchg
pop
jbe
insb
call
sbb
test
insl
mov
stos
aaa
je
and
push
icebp
fnstenv
scas
incb
add
or
push
cli
add
movsl
sbb
mov
je
sti
mov
pop
or
dec
mov
ret
mov
xchg
pop
in
mov
adc
icebp
pushf
push
fnstenv
jb
cmp
scas
mov
notl
imul
icebp
lock
mov
lock
xchg
sarb
push
push
cmp
ret
mov
sub
iret
mov
enter
cli
dec
cmp
jecxz
mov
sbb
ficoml
mov
add
jge
stos
stos
inc
or
pop
call
sub
xor
pop
es
push
gs
cli
dec
mov
sahf
sub
xchg
sbb
push
pop
fistpl
dec
stos
xor
cmp
cmc
xor
arpl
mov
inc
jge
and
jmp
aam
leave
psubb
nop
jae
cmc
outsl
add
and
aam
sbb
inc
fnstcw
es
in
mov
adc
dec
fwait
stc
adc
dec
sahf
es
jge
popf
push
pop
enter
loop
cmpsb
out
idivl
adc
cmp
leave
mov
int
jne
dec
sahf
mov
fstl
in
pop
xor
push
loope
scas
xchg
cltd
pop
adc
aam
fimull
inc
mov
scas
mov
loopne
ficoml
enter
ljmp
sub
xchg
fcos
push
shrl
pop
pop
push
aaa
sub
scas
in
cmp
mov
imull
push
sti
ljmp
mov
enter
leave
sti
adc
mov
push
out
dec
pop
xchg
or
lock
xor
sub
shll
fwait
add
daa
push
inc
adc
mov
adc
push
jno
pushf
sub
mov
scas
fistl
cmp
ret
into
and
inc
mov
ljmp
inc
mov
adc
jae
shll
mov
scas
mov
mov
insl
mov
jge
mov
imull
inc
mov
fidivs
sub
imul
movsb
andb
sub
xchg
or
add
mov
in
xor
dec
int3
fnstenv
sbb
or
mov
sub
cmp
ficoml
pop
cld
ljmp
pop
out
cmp
dec
and
inc
iret
push
pop
fnstsw
inc
push
fldt
cmp
sbb
sbb
pop
pop
jp
outsb
enter
inc
jl
sbb
scas
mov
sub
pop
mov
lea
push
test
adc
adc
pop
mov
jne
xchg
and
mov
cmpsb
test
pop
inc
call
sub
cmp
push
jle
xor
out
push
enter
je
mov
sarl
and
sub
aam
push
inc
icebp
test
add
xor
iret
push
push
cmp
lret
pop
adc
cmp
mov
mov
xchg
xchg
adc
jne
mov
in
rcrb
les
test
ja
or
push
lods
in
ss
sti
dec
repnz
fadd
enter
xchg
pop
or
aad
add
sub
pushf
in
aaa
add
data16
cmp
jg
jns
shl
leave
std
dec
push
ficoml
sub
jns
daa
mov
add
inc
ret
test
iret
cmp
mov
push
mov
ficoms
mov
mov
fldl
and
dec
dec
test
mov
arpl
dec
mov
sahf
sbb
pusha
dec
popf
out
ret
inc
or
jg
scas
cmc
jg
lcall
ds
sbb
mov
dec
andb
cmp
out
xchg
add
cmp
pushf
int3
clc
mov
fsubrl
or
mov
bound
push
fwait
movsb
pop
and
sti
arpl
pop
test
ret
subb
scas
xchg
xlat
jbe
repz
shrb
call
fnstcw
and
dec
inc
push
dec
dec
loope
sbb
loopne
mov
cmp
pop
mov
push
mov
arpl
andl
scas
sbb
jae
test
adc
push
xor
mov
addr16
mov
push
push
jp
cmp
jb
out
pop
pop
int3
xchg
cmp
repz
cmp
insb
adc
std
mov
or
fsubl
adc
outsl
mov
jg
cmp
cmpsb
loopne
in
outsl
push
lcall
cmp
adc
lahf
jmp
pop
xorb
jae
push
and
pop
sahf
pop
loopne
sbb
andl
inc
xchg
mov
cs
push
inc
test
xchg
push
sbb
subl
jg
call
push
or
push
mov
or
push
into
sti
leave
cmp
jno
jo
or
cltd
iret
divb
push
pop
mov
inc
repz
std
sahf
hlt
and
int
hlt
xchg
cmp
add
mov
subb
into
lds
jp
aam
add
or
sub
push
cs
mov
iret
aam
and
cmpsl
xlat
cmpsl
jp
stos
mov
int
dec
ret
imul
stos
or
xor
xchg
inc
jbe
mov
cmp
xchg
enter
out
popf
mov
mov
pusha
les
rorb
or
mov
imul
or
out
cmp
cli
cld
cmc
sub
out
lret
data16
test
inc
loop
jl
mov
sbb
loopne
cltd
test
adc
stc
insl
stc
icebp
ficomps
pop
ret
sbb
ret
pop
and
cmp
xchg
mov
or
jae
in
sbb
mov
mov
enter
xor
adc
fmuls
std
adc
xchg
and
mov
shrl
xlat
fsubl
push
inc
mov
pop
cmpsl
jl
inc
dec
inc
shll
shrl
xlat
movsb
shlb
sbb
or
adc
fisttps
pushf
outsl
call
mov
mov
add
and
fistl
and
test
sbb
gs
adc
scas
jecxz
stc
sbbl
dec
jb
call
stos
divl
push
ret
mov
movsl
sub
cmp
frstor
cltd
sti
mov
pop
in
push
and
ja
neg
or
loop
xlat
dec
inc
dec
xor
inc
outsb
cmpl
jnp
movsl
mov
sub
inc
push
xchg
scas
scas
mov
jbe
into
xchg
fldt
scas
pop
bound
mov
cmpsb
imul
enter
cld
adc
pop
mov
xor
pop
repz
sti
sub
movsl
cs
je
and
sbb
pop
xlat
sub
cmp
or
sub
ret
loope
push
cmp
inc
xchg
scas
cmp
add
and
sbb
out
sub
or
push
xlat
inc
lea
xlat
mov
lea
loope
aam
mov
in
xchg
jb
daa
test
movsl
sbb
mov
mov
popa
jne
jns
mov
lock
sti
xor
mov
test
and
xor
sbb
pop
dec
test
enter
jnp
fldl
cmc
pop
ret
outsl
xor
in
aad
inc
xlat
push
das
jge
pop
mov
jp
faddl
sahf
cmpsb
nop
rcrl
add
cld
push
push
clc
stos
xlat
out
push
adc
mov
ljmp
jb
fs
add
iret
and
sub
jno
mov
std
in
in
adc
fwait
cmp
jae
daa
fucomp
ret
and
out
pop
stos
or
jmp
jno
and
cmpb
scas
cld
mov
adc
mov
lea
icebp
in
inc
or
xor
jl
idivl
and
stc
stos
jo
push
and
popf
daa
push
pop
push
sti
jl
faddl
lods
shll
jo
xor
mov
jecxz
xor
xor
lods
les
cmc
mov
icebp
pop
sahf
cld
push
insb
xchg
arpl
add
sbb
jns
cld
test
popa
popf
lock
mov
pop
ds
cmp
jne
in
push
pop
aam
dec
mov
sub
jge
dec
stc
test
aaa
inc
pop
and
add
mov
mov
inc
int
test
or
int3
in
mov
cli
andl
cli
jne
cmp
outsl
jecxz
stos
fadds
xor
adc
adc
dec
jp
sahf
sbb
icebp
mov
xor
gs
adc
adc
dec
pminub
aas
inc
ljmp
dec
cmc
pop
shr
outsl
test
lods
out
test
rcrl
subb
stos
xor
test
mov
movsb
xchg
ljmp
stos
xor
mov
clc
scas
repnz
clc
mov
inc
movb
lahf
pop
xor
lock
adc
cs
inc
pop
test
and
shl
fisttps
stc
adc
js
and
in
ret
cltd
pop
sub
in
jl
mov
jp
fimuls
xchg
rcrb
outsb
mov
inc
int3
and
dec
dec
mov
ss
outsb
mov
sbb
and
outsb
hlt
lea
dec
cmp
addr16
sub
shlb
push
stc
out
mov
fucom
mov
or
cmp
loopne
ret
mov
out
roll
daa
pop
mov
insb
cmc
fmuls
pop
lods
add
dec
mov
scas
xchg
dec
xchg
inc
leave
jae,pt
out
sbb
mulb
jne
popf
outsl
mov
fiadds
outsl
xor
out
sbb
fistpl
sub
cmp
sbb
sub
stc
pop
xchg
lret
leave
cs
xchg
and
aam
pop
and
inc
push
adc
lods
dec
mov
dec
push
push
add
aad
adc
adc
jb
mov
xchg
test
mov
iret
add
xor
xor
add
cli
mov
pop
fneni(8087
aad
xor
jo
repnz
xchg
adc
cli
pop
mov
cmp
dec
jno
mov
leave
js
dec
adcl
movsb
cmp
inc
xchg
mov
add
inc
jmp
push
shrb
inc
xchg
or
cmpsb
push
test
sub
push
lret
leave
into
mov
cmp
sub
jmp
ret
test
add
lret
jne
push
mov
js
test
out
mov
adc
mov
lret
cmp
lock
scas
fs
push
cmp
icebp
leave
lret
int3
cmp
mov
dec
add
adc
sub
jge
dec
fistl
mov
lahf
cmpsb
jae
push
mov
fiadds
les
dec
mov
ljmp
inc
push
pushf
and
jne
sbb
pop
lods
mov
add
and
xor
movups
sbb
sub
lcall
or
pop
add
mov
outsb
xchg
push
or
cmp
add
pushf
lret
pushf
data16
fs
mov
in
enter
sub
mov
lahf
lahf
shr
movsl
push
inc
xor
jge
std
js
leave
popa
fidivl
and
mov
jmp
sub
mov
mov
pushf
push
push
pmulhuw
ret
mov
inc
sahf
stos
loope
hlt
push
dec
add
mov
cwtl
insl
mov
js
lret
movsb
gs
sub
xchg
push
movsb
xor
mov
pop
xchg
imul
push
push
hlt
call
inc
cmpsl
addl
mov
ficompl
ret
out
cmpsl
dec
pusha
jno
mov
dec
jae
jnp
sbb
std
and
into
fwait
xchg
and
subb
sti
pop
jne
mov
ficoml
inc
and
xchg
sub
stc
or
inc
push
push
xchg
xchg
add
push
mov
jne
jp
and
pop
loopne
enter
xor
loop
dec
adc
cmp
mov
hlt
clc
push
pop
pop
mov
sub
mov
lods
fstpl
in
stos
jl
jmp
enter
movsl
cmp
sbb
push
lret
jg
dec
mov
ds
mov
jo
cwtl
pop
dec
sbb
pcmpeqw
stos
out
dec
pop
push
push
and
pop
in
pop
movsb
aas
xor
or
cli
outsb
sub
push
jb
adc
test
les
lret
push
movsb
dec
in
cltd
xor
cmp
sub
push
scas
lret
jl
dec
or
adc
pinsrw
in
xchg
idivl
cmp
and
inc
xchg
shll
sbb
mov
push
push
fidivrl
sbb
dec
push
or
test
adc
jp
cmpsb
and
xor
pop
xor
xchg
jb
jae
xchg
das
sbb
pop
ja
test
lea
movsl
ret
xor
pop
int
pop
andl
outsl
pop
dec
sahf
fwait
mov
inc
adc
out
movlps
loope
xchg
in
jp
mov
adc
roll
xchg
sub
push
xlat
cmp
sbb
mov
xor
call
repnz
movsb
lcall
lret
mov
cmc
inc
lock
popf
xchg
inc
add
mov
adc
mov
hlt
nop
push
popl
cmp
sub
movsl
pop
mov
push
ret
or
bound
stos
sub
push
cli
fcmovnb
popa
dec
in
int3
add
in
push
loop
or
enter
lds
inc
jb
iret
pop
push
or
rcll
dec
inc
push
cmp
push
pop
ret
or
xchg
divl
arpl
jge
sub
mov
test
in
mov
and
dec
nop
cmp
ja
dec
shlb
inc
pushf
xor
add
testb
push
or
add
lret
test
sbb
outsl
shll
jbe
mov
add
pop
xor
mov
mov
sub
stos
pop
inc
xchg
lock
popa
dec
sbb
out
xor
xchg
notb
jle
mov
dec
adc
sbb
inc
xchg
push
inc
stos
into
repz
hlt
lods
idivb
cmp
outsb
sbb
cwtl
jbe
stos
lea
push
pop
repnz
push
jg
push
push
xchg
repnz
mov
aaa
mov
sbbb
pop
add
dec
sbb
push
push
int
fistpl
sti
mov
fnstsw
inc
test
fld
lret
insb
adc
xor
sbb
sti
push
sub
fwait
out
mov
enter
jo
inc
mov
jmp
outsl
sbb
xchg
mov
dec
sbb
sub
mulb
in
into
xor
add
sub
pusha
and
pop
and
outsb
call
jp
sub
adc
mov
rol
dec
push
nop
das
into
popf
imul
out
out
repz
mov
hlt
pop
rolb
sub
cmp
loope
pop
sub
out
push
mov
lahf
jno
jle
xchg
arpl
jo
pop
iret
inc
fdivs
insl
repnz
adc
cmp
dec
js
jmp
or
or
or
or
push
testb
lods
pop
cmp
sub
xchg
aas
jb
rcrb
shr
dec
or
call
add
gs
into
jno
fwait
sbb
push
daa
lds
gs
stos
xor
or
jno
sbb
push
jg
pop
imul
and
cmpsb
imul
push
push
ss
dec
xor
fldl
aas
in
adcl
sub
and
pop
mov
jl
mov
push
out
arpl
cwtl
dec
out
mov
js
or
jbe
or
xchg
xchg
dec
fmull
jb
xor
push
mov
notb
sub
mov
rcrl
popf
fs
ljmp
fdivl
data16
int
sbb
ja
movsb
mov
mov
inc
ss
stc
fists
repnz
mov
sti
sub
push
enter
jnp
pop
ljmp
xor
push
outsl
js
xlat
lret
arpl
mov
mov
test
cmpsl
sub
push
cmpsl
adc
lahf
andl
inc
mov
aaa
sbb
lret
enter
fwait
int3
or
lock
xor
andl
inc
ret
jo
jecxz
fcomps
ret
mov
ljmp
add
push
aas
sub
push
inc
xchg
pusha
xor
adc
jle
hlt
jle
stos
dec
sbb
sbb
push
push
scas
repnz
or
icebp
mov
adc
dec
dec
push
inc
je
cmp
xor
jl
and
leave
jne
cmp
push
mov
popa
push
rcrb
cmp
jbe
pop
dec
outsl
fildl
rcl
stos
movsl
rorl
sbb
loop
sti
lcall
orb
mov
sti
pop
mov
mov
je
fcoms
inc
mov
add
scas
dec
dec
xchg
test
lahf
cmpb
and
les
jecxz
call
ja
int3
pop
push
jl
xchg
stos
imul
into
cmp
mov
fucomi
and
outsl
or
mov
outsb
ljmp
xchg
shrb
add
les
out
cmp
ret
mov
int3
inc
shlb
xchg
mov
dec
insl
rorl
or
push
fwait
call
int3
ja
pop
push
hlt
push
mov
imul
add
or
dec
push
mov
mov
add
imul
inc
adc
shlb
or
xchg
sarl
sub
clc
neg
shlb
mov
call
xchg
mov
ljmp
pop
adc
sub
pop
ljmp
das
std
outsl
stos
imul
leave
insl
imul
pop
add
add
andl
mov
adc
rcl
xchg
call
pop
cmp
adc
dec
jae
cmp
lds
mov
jbe
mov
popf
sub
jmp
pusha
aam
push
pop
or
lea
aaa
and
dec
lahf
xchg
mov
shll
xchg
sbb
frstor
inc
clc
adc
pop
shlb
sbb
push
mov
or
lea
push
in
fsubs
mov
scas
in
out
out
sub
cltd
int3
pop
pop
or
mov
jle
pop
std
sti
mov
test
cmp
xchg
dec
pop
lds
mov
mov
repz
jmp
roll
dec
sub
ss
mov
mov
xor
into
jg
and
cli
in
and
repz
ds
pop
cwtl
xor
fisttpl
lahf
pop
push
cld
nop
xor
testl
iret
dec
jmp
stc
repz
enter
sbb
jne
sub
and
and
xchg
fmull
aad
xchg
mov
adc
push
fists
xchg
call
and
mov
sbb
sub
xchg
ret
dec
dec
cmp
inc
pusha
pop
pop
decb
pop
inc
push
sub
sti
lahf
sbb
add
jmp
icebp
repnz
test
cwtl
jmp
inc
mov
lock
jg
mull
rolb
enter
fsubs
nop
ljmp
add
dec
jb
jne
dec
mov
rorb
dec
push
xor
add
dec
mov
das
in
loop
dec
mov
repz
fidivrs
dec
mov
xchg
and
mov
fs
jbe
idivb
xor
add
sahf
pop
pop
or
into
imul
daa
fwait
sub
dec
xor
xlat
dec
daa
xor
in
decb
test
cmp
xor
into
sti
push
test
dec
jmp
mov
dec
stc
mov
adc
sbbb
fdivl
popa
add
imul
push
jb
dec
and
sbb
sub
mov
mov
gs
or
inc
pop
addr16
sahf
or
insl
push
fdiv
jp
jb
push
rol
sub
leave
mov
es
imul
pop
dec
pop
mov
xchg
jae
add
sti
pop
jbe
dec
lds
scas
fsubr
mov
enter
shl
lock
push
push
sahf
loopne
scas
mov
and
lock
mov
test
push
mov
loope
mov
or
cli
mov
insl
es
mov
sbb
repz
jne
ds
psubsw
stc
jl
sti
fsubrl
jns
popf
test
jbe
xchg
lock
jno
pop
jle
xor
pop
lret
jmp
daa
mov
cmp
cmp
loopne,pn
xor
outsb
add
xor
xchg
mov
jmp
push
sarl
cmp
cmpsl
ret
bound
dec
cmpsb
mov
ja
lahf
pusha
xorb
fcompl
lods
xchg
jns
or
cmp
nop
arpl
mov
call
mov
pop
push
jle
jnp
out
add
lods
cmp
test
jno
pop
and
dec
cmp
popa
adc
sub
xlat
popa
dec
mov
adc
fisubl
sti
leave
dec
sub
cmp
mov
and
push
pop
repz
jmp
cmp
push
or
mov
or
cmp
daa
sub
and
mulb
loopne
xlat
add
nop
nop
jecxz
dec
cmp
insb
sub
jecxz
mov
xor
or
sub
inc
inc
push
fidivl
cmp
lret
and
pusha
adc
or
outsb
fwait
scas
mov
addl
lcall
xchg
sub
inc
push
out
pop
jmp
dec
loopne
push
popf
jno
loopne
sub
xor
movsb
cli
fs
stos
inc
or
enter
out
inc
sub
fwait
xor
movsl
lret
mov
jbe
xor
jo
xor
sarb
cmp
cli
mov
nop
push
or
pop
jb
push
mov
mov
mov
inc
out
jno
or
ret
adc
jb
loope
pop
dec
push
jp
jnp
ss
sbb
stc
add
xor
je
aad
adc
mov
insb
push
out
inc
mov
mov
dec
cmp
ljmp
shll
lret
sub
push
cli
leave
ret
pusha
add
dec
sbb
adc
rolb
mov
out
cmp
push
jne
out
adc
icebp
loope
loopne
xor
stos
and
and
out
push
data16
jno
xor
rorb
leave
or
mov
sbb
lea
repnz
add
mov
adc
std
movsb
int
cld
add
dec
dec
rolb
add
mov
mov
je
dec
lret
mov
jne
or
sbb
call
cmpl
lret
scas
sub
or
mov
add
lea
xchg
mov
adc
pop
subb
push
stc
mov
sub
call
dec
lret
repz
loop
add
inc
data16
arpl
fisttpl
or
nop
mov
adc
mov
movsb
dec
adc
adc
xchg
jge
movsb
mov
lcall
sbb
dec
mov
das
adc
jno
mov
cmc
ds
mov
aad
adc
sbb
pop
insb
mov
sahf
in
xchg
sbb
adc
cmp
les
aad
push
push
imul
mov
ss
cmp
push
mov
cmp
pop
gs
negb
pushf
pop
outsl
xor
mov
and
jnp
movsb
sbb
jmp
inc
jg
and
jne
mov
test
or
xchg
icebp
sbb
xchg
shr
popa
hlt
sbb
pop
mov
loop
or
xchg
int
loop
stc
cmp
fisttpl
xchg
add
test
pop
popa
cmpsb
xchg
xor
mov
dec
popf
jecxz
iret
dec
jmp
cltd
dec
sbb
jo
adc
fdivrl
fists
mov
cs
mov
ljmp
add
inc
js
dec
adc
idivb
or
push
es
fsubrl
xchg
jb
jl
stc
xor
nop
scas
fsubs
iret
lret
out
inc
movsb
sub
mov
xor
or
mov
ss
sbbl
ror
mov
push
jecxz
popa
xor
add
aam
test
lods
cmc
push
test
and
rol
jl
scas
lret
out
ret
cmpsb
cmp
lea
cs
es
out
sub
loopne
mov
scas
dec
and
inc
xor
iret
mov
push
jno
push
insl
jae
icebp
xchg
sbb
mov
leave
pusha
popf
mov
inc
lret
mov
jnp
mov
repz
hlt
add
xlat
iret
adc
xchg
mov
lcall
mov
cli
cmp
sub
and
mov
shlb
xor
adc
inc
rorb
add
out
in
lods
dec
test
mov
sub
mov
mov
loopne
jge
sub
flds
pop
aam
rcrl
push
cmpl
jle
std
les
repz
mov
push
mov
sti
and
in
or
add
lock
mov
dec
stos
cwtl
sub
mov
mov
jmp
ja
movsb
mov
push
sahf
xchg
mov
push
jg
shr
xor
in
sbb
dec
jle
lock
jae
sbb
sbb
inc
popa
add
loop
aam
mov
and
xchg
jno
adc
insl
outsl
cld
loope
inc
fcmovb
iret
mov
push
stc
mov
push
cmp
fsubrl
sub
hlt
dec
test
and
out
repz
sub
cmp
fstpt
mov
sub
aad
nop
and
xor
push
sbb
out
push
pop
lahf
push
dec
mov
nop
pusha
and
test
sbb
xchg
rorl
rclb
mov
stc
mov
push
inc
cmp
push
xor
iret
stc
push
add
mov
sbb
roll
int3
ret
jmp
sbb
inc
mov
or
sbb
inc
jle
sbb
mov
xchg
in
test
jle
jg
call
call
xor
lahf
andb
cmp
xchg
xchg
sbb
jmp
sub
insb
loope
out
and
xchg
gs
jl
test
dec
shlb
aam
fnstsw
pop
inc
cmpb
inc
pop
lahf
xchg
mov
dec
popf
addl
out
idivl
nop
cs
mov
int
jns
sbb
xor
in
ret
xchg
ja
in
cwtl
jle
mov
arpl
rolb
dec
dec
add
xchg
dec
fmul
ja
mov
rolb
push
scas
fwait
fwait
mov
mov
jne
sub
ret
jp
sbb
gs
xchg
sbbl
mov
divb
data16
inc
or
sub
xchg
sub
pop
push
push
cwtl
jecxz
xor
adcl
jmp
lret
jae
xchg
dec
jle
cmp
cmp
not
inc
loop
fistpl
ss
aad
das
gs
stos
pop
mov
rolb
pop
inc
int
cmpsl
xchg
fistl
out
sub
dec
sbb
test
inc
test
rorb
push
jno
cmp
pop
lret
js
loop
imul
pop
aaa
cwtl
stos
sub
mov
push
ret
iret
dec
lcall
mov
ret
jae
sub
adc
stos
aam
and
or
push
out
jmp
sub
out
addr16
xor
ds
shlb
cmp
adc
loopne
jne
jno
fadds
out
mov
or
clc
out
lret
lret
jmp
inc
loope
lcall
xchg
mov
cld
ret
push
lcall
push
hlt
pushf
fiaddl
std
push
pop
in
sbb
imull
pop
iret
dec
mov
sbb
and
jmp
pop
jns
xor
sbb
loope
stos
or
push
repz
inc
xlat
mov
notl
sub
push
mov
fnstenv
pop
ss
fimull
jbe
out
or
push
inc
jge
cmp
fiadds
pop
add
pop
pusha
lret
mov
or
jle
fisubrl
sub
cmp
xor
mov
cs
inc
dec
xor
mov
mov
int
das
pop
jb
push
dec
jo
add
ss
sbb
mov
pop
mov
in
pop
adc
adc
sbb
sbbb
inc
hlt
int3
lahf
cmc
push
jp
addr16
and
into
loope
int3
cmc
cmpl
aas
test
push
dec
jmp
repz
add
movsb
or
mov
cmp
nop
push
sub
das
dec
dec
popa
mov
imul
inc
push
in
xor
and
or
sub
je
fstpl
sahf
pop
rol
inc
or
aad
pop
hlt
cmpsl
rcll
rcrl
mov
lret
outsl
push
push
xchg
into
ficoms
out
sbb
jns
dec
xchg
pop
adc
fs
pop
mov
adc
loop
push
jo
les
or
cmp
add
add
cli
inc
aam
and
stos
jg
into
or
test
scas
out
push
cmc
xlat
jae
rolb
jge
aad
xor
jne
xor
lret
shrb
mov
outsl
sbb
sbb
dec
test
arpl
and
add
nop
or
icebp
sub
aam
mov
inc
adcb
sub
popa
mov
push
lret
mov
xor
gs
mov
dec
lods
sbb
je
pop
hlt
cmc
mov
dec
pop
mov
or
iret
arpl
es
sbb
test
inc
cmpsl
sbb
mov
mov
imul
scas
ds
ss
jecxz
sub
inc
ret
les
ffreep
sub
jge
push
sbb
out
fiadds
enter
jge
push
mov
mov
mov
repnz
inc
mov
in
orps
pop
roll
outsb
inc
xchg
inc
dec
pop
mov
idiv
clc
lahf
jge
mov
call
aaa
pop
enter
mov
cld
jbe
mov
push
dec
jecxz
jecxz
push
outsl
jbe
popa
sar
xchg
fxch
xor
jo
push
add
into
fwait
mov
cltd
push
inc
fiaddl
lods
mov
mov
adc
add
cli
pop
fstpt
fbstp
fwait
cmp
sbb
sar
pusha
jns
cmp
xchg
loopne
mov
xor
enter
std
enter
fcmovbe
push
mov
mov
lods
cmp
lds
stos
das
mov
repz
push
stc
out
scas
stos
ja
mov
jecxz
pop
cld
cmc
imul
push
xchg
jmp
stc
scas
xor
sub
push
sarb
lea
in
pop
xchg
cli
fmull
or
sbb
push
jbe
xchg
or
mov
sbb
insb
mul
xchg
jle
scas
ret
jmp
mov
jge
loope
and
xchg
fcmovu
inc
adc
test
ds
fisubs
push
fists
and
mov
cmpl
dec
lods
lock
adc
sti
adc
scas
adcb
mov
and
int
add
lods
lahf
mov
cmp
int
or
ficompl
inc
and
jle
inc
int3
paddb
push
in
aam
sbb
inc
inc
sbb
cmp
or
mov
cmp
shll
jge
ljmp
hlt
or
xchg
ja
rorb
lahf
js
mov
in
icebp
dec
adc
sbb
sub
add
popa
les
inc
je
fcmovnb
clc
push
sbb
cmp
flds
aas
jl
pop
movsb
jbe
sub
add
and
lret
sub
pop
test
add
add
push
aaa
mov
pop
aad
mov
dec
int
cmp
cltd
cmp
cmp
clc
shll
cmp
test
mov
mulb
push
and
ret
push
lcall
sub
lcall
push
aas
sbb
and
outsb
fildll
push
shrl
mov
xorb
pusha
cmpl
push
cmc
ret
mov
pop
ds
std
add
call
lahf
push
ficompl
and
push
dec
in
push
lahf
enter
xlat
data16
sub
or
pop
jg
xchg
fdivp
addr16
pop
and
iret
xor
cmpsl
negb
decb
xchg
sbb
inc
xchg
add
xchg
dec
jle
mov
lods
repnz
fcoms
mov
fnstcw
fld
push
push
push
sub
sbb
push
rcl
jo
inc
and
imull
cmpsb
inc
rep
lods
int
push
lds
sbb
dec
or
mov
xchg
and
cmp
xor
mov
xchg
addr16
sub
les
pop
xor
jae
pop
mov
ret
rcrl
ds
push
inc
cmp
xchg
leave
vdivsd
push
and
insl
aas
and
sbb
test
push
imul
sbb
push
and
jp
call
or
movsb
or
mov
rcrb
pop
add
push
aad
imul
mov
fwait
and
out
addr16
xchg
mov
imul
movsl
cld
dec
stos
cmc
test
and
scas
lcall
or
idivb
cs
fcoms
add
mov
mov
ret
imul
shlb
in
xchg
add
jne
sub
adc
fiaddl
jge
sbb
cmpsb
iret
mov
jp
andb
and
pop
adc
outsb
dec
xchg
mov
jp
ds
imul
leave
cmp
in
lea
mov
ror
in
push
mov
xchg
out
adc
in
jae
pop
xlat
pop
mov
jne
pusha
add
in
sbb
inc
jbe
push
scas
mov
pop
mov
fwait
icebp
leave
push
test
addb
jp
mov
xor
test
loopne
xor
sbbb
lret
inc
pop
je
jl
add
lods
jl
mov
sbb
std
mov
or
stos
sti
mov
mov
test
iret
xorb
bound
xor
push
pop
addr16
cwtl
cmp
test
inc
mov
push
add
cmp
adc
fisubs
iret
notl
cmc
ficoml
mov
cmpsb
scas
push
repnz
mov
into
jl
movsl
js
loopne
push
int
movsb
lods
lea
gs
xchg
sub
pop
dec
nopl
fistl
push
adc
call
fs
push
and
lret
cmp
push
sarl
pop
jns
clc
outsb
leave
jns
gs
cld
imul
xchg
iret
not
repnz
in
mov
les
cmpsl
fimuls
js
sbb
dec
or
popf
mov
nop
push
fsubrl
push
mov
test
mov
incb
std
movsb
das
mov
add
repz
rclb
jbe
push
rolb
sub
ret
cmc
xor
add
mov
jnp
push
jl,pn
sub
mov
lret
jbe
jl
clc
js
aad
push
addl
vcvtsi2sdl
je
loop
fs
adc
mov
cld
aad
cmpb
inc
xor
pop
and
jnp
xlat
add
shrb
mov
aas
ss
add
scas
jecxz
iret
sub
push
aas
dec
mov
in
icebp
mov
jbe
xor
mov
aad
mov
outsl
xchg
insl
and
or
test
cmp
jb
movsl
stos
test
imul
out
add
xor
inc
xor
jne
jne
adc
mov
pop
adc
mov
imul
push
xchg
jae
shrb
pop
or
fstpt
mov
enter
ljmp
in
mov
arpl
div
cli
rorb
stos
sarl
xchg
stc
mov
dec
aaa
fidivrs
rcr
cltd
mov
jg,pn
insb
add
inc
clc
pop
ret
sub
pop
leave
pop
fcmovbe
int3
pop
sbb
pushw
insb
push
in
test
shl
push
jp
xchg
addr16
ret
test
dec
cltd
cmp
adc
cwtl
les
addr16
imull
mov
push
out
cmpsl
rcrl
in
sbb
inc
jne
or
pop
add
push
mov
push
stc
fcmovu
cmp
xor
jbe
enter
push
int
call
imul
inc
pusha
jp
cmp
movsl
adcl
mov
xor
xchg
add
jb
xchg
nop
inc
fnstenv
sahf
and
push
fdivrl
lcall
cmp
addr16
mov
stc
add
xchg
aas
fldl
fs
ljmp
pop
cs
test
lcall
push
jg
add
lcall
stc
dec
pop
xchg
push
mov
xchg
push
fidivs
mov
dec
mov
xchg
add
or
leave
or
lcall
jge
xchg
dec
lahf
jb
gs
roll
dec
sub
movsl
ja
fnsave
pop
dec
push
push
std
dec
pop
mov
divb
push
and
jnp
and
inc
and
or
int3
add
inc
aam
push
pop
daa
popf
out
sbb
inc
jle
pop
popf
sub
mov
lret
cli
pop
jge
push
outsl
and
sbb
repz
lds
adc
jle
xchg
lahf
daa
movsb
popf
adc
les
enter
sbb
subl
ficomps
insl
stos
mov
xchg
push
dec
repz
lock
repnz
fs
dec
scas
cmp
filds
and
xlat
insl
inc
xchg
aas
pop
cmpsl
adc
daa
in
loop
aad
and
pop
and
imul
shl
inc
les
test
stc
fdivs
mov
mov
mov
mov
push
sub
xlat
pop
movsl
jnp
lahf
jne
pop
cmp
xchg
jne
add
inc
push
shr
cmp
out
outsb
pop
mov
mov
es
iret
inc
lcall
ret
mov
xchg
inc
movsl
enter
fwait
jo
sub
and
jl
xor
iret
sahf
jp
add
cmp
es
fldenv
fiaddl
push
mov
addr16
jecxz
inc
push
mov
jle
dec
cltd
cmp
dec
and
or
or
lods
jne
mov
sub
movsl
mov
rclb
inc
clc
ja
icebp
es
and
lods
repnz
cmp
mov
jne
sahf
lcall
ret
arpl
mov
fs
ds
jns
rcll
mov
and
cmp
mov
cld
popf
xchg
out
cmp
push
inc
in
jge
outsb
lds
mov
inc
loope
rcrb
cwtl
jno
inc
mov
xor
cli
testl
push
inc
mov
in
out
sbb
mov
sub
flds
hlt
pop
inc
into
mov
mov
movsl
out
enter
fbstp
mov
outsb
imul
je
insb
sub
mov
fildl
test
fwait
mov
inc
lods
cmp
insb
sbb
shrb
lret
lods
fisubl
jnp
les
lret
js
jecxz
icebp
add
jnp
sbb
push
inc
cs
push
jge
mov
cmp
mov
fs
in
jnp
jmp
lods
mov
fstpl
lock
and
jnp
stc
neg
pop
adc
int3
int3
pop
or
pusha
lods
imulb
pop
out
out
out
imul
cmp
inc
pop
cld
jle
xor
scas
mov
scas
nop
fsubs
loope
mov
dec
mov
ljmp
in
out
push
dec
into
fnstsw
mov
ljmp
add
cmp
adc
je
inc
inc
scas
lods
xor
movl
lock
xchg
pop
sbb
mov
outsb
icebp
fs
jg
push
movsl
xor
and
sub
inc
js
sub
loopne
xchg
inc
in
mov
and
sbb
call
jp
test
mov
sbb
mov
outsb
mov
bound
jns
stc
cmp
aam
enter
aad
sti
xor
rclb
add
mov
push
jae
outsb
add
inc
mov
pop
xchg
aad
fs
adc
in
rorl
ja
push
push
rorl
fwait
add
mov
sub
negl
dec
ja
fildl
jno
icebp
push
int
out
rol
in
pop
dec
lock
dec
rclb
arpl
data16
and
sbb
stc
dec
icebp
loope
jecxz
out
ja
dec
dec
xor
add
xor
cmp
movl
loope
adc
xchg
jl
std
mov
sahf
mov
cltd
mov
cmpsb
aad
loop
cmp
pop
push
lcall
sbb
mov
adc
test
jo
inc
xlat
fwait
decl
sbb
insb
mov
arpl
xchg
sarb
test
inc
dec
jbe
js
mov
sub
gs
addb
push
xchg
ljmp
popf
das
cld
js
mov
sbb
add
test
adc
test
shll
cld
out
leave
pop
cli
xchg
pusha
mov
mov
push
push
add
vxorpd
movsl
inc
mov
mov
jg
sbb
sahf
out
scas
inc
mov
lcall
jecxz
cmpsl
es
hlt
fdivrs
dec
lret
test
jbe
xchg
divb
xor
std
dec
fistpll
inc
das
je
minps
inc
jl
adc
stc
mulb
dec
and
mov
lcall
lds
incb
xchg
lret
js
es
xchg
jp
addr16
pop
leave
xchg
mov
jae
imul
and
ret
xor
xor
cli
loope
cmp
nop
xchg
movhlps
mov
pop
sub
in
or
fldcw
xor
inc
and
jnp
lret
xlat
test
inc
aas
push
mov
lret
pop
cltd
inc
dec
outsb
dec
das
mov
pushf
and
leave
mov
out
dec
xchg
cmp
test
in
test
xchg
push
or
xchg
mov
jb
idivb
cltd
mov
mov
enter
cmpsb
xor
jnp
jns
jg
mov
xorl
test
dec
js
adc
rclb
push
loopne
inc
push
lods
and
addr16
xchg
cli
push
in
xchg
sub
xor
and
mov
inc
and
in
inc
lds
mov
mov
and
in
xchg
jmp
or
out
dec
mov
dec
jge
fstpt
cli
adc
push
scas
push
xchg
sub
add
outsl
cmp
aas
lea
rcl
loop
outsl
adc
push
repnz
dec
mov
fistpll
bound
jge
test
or
sahf
cmp
jo
ljmp
fs
bnd
xchg
sbb
cs
imul
pusha
xchg
mov
mov
or
mov
and
sarl
shll
stos
aam
push
shrl
int3
push
cmpsb
push
fcmovbe
and
in
push
mov
lcall
add
pop
nop
js
mov
or
test
dec
mov
adc
push
mov
mov
add
sub
repz
sbb
in
cs
daa
addr16
push
fs
xor
push
ret
aam
inc
test
mov
pop
lea
mov
pop
adc
pop
mov
sbb
jb
pop
and
mov
daa
repz
sbb
nop
adc
jae
movsb
fwait
add
sbb
push
jb
mov
outsb
push
lahf
jbe
movsl
lods
and
arpl
push
and
shrb
daa
cltd
icebp
and
or
fistl
std
mov
popa
icebp
xor
jp
lret
lret
push
pop
cld
lds
xchg
mov
mov
cmpsl
inc
jnp
outsl
jmp
inc
push
mov
mov
ds
cmp
pop
add
mov
mov
jmp
mov
rorl
cmp
cltd
test
ret
imul
ret
insb
sbb
aaa
mov
gs
or
and
sbb
dec
mov
lahf
pop
gs
dec
addr16
loope
dec
loope
lahf
jne
mov
mov
jns
aaa
divl
cmc
into
out
sub
fdivrp
rcll
mov
insb
clc
int3
popa
clc
inc
lock
nop
mov
mov
into
data16
xlat
inc
in
decl
sti
xchg
mov
lock
xor
jo
cmpsl
xchg
and
mov
dec
ret
mov
mov
ljmp
xor
jns
lea
out
scas
rcl
jge
and
mov
dec
inc
sub
xchg
icebp
jecxz
inc
and
insl
into
mov
int3
in
enter
and
dec
out
mov
jb
cmp
adc
dec
pop
xchg
xor
scas
nop
mov
aaa
adc
arpl
pop
adc
mov
movnti
sbb
push
dec
pusha
mov
mov
call
shlb
mov
ja
sub
repnz
add
dec
dec
mov
mov
add
imul
cmp
mull
outsl
jmp
jg
popf
daa
sub
sarl
mov
and
and
add
movsb
fs
ljmp
arpl
arpl
jns
mov
das
inc
or
cwtl
mov
pop
push
xlat
mov
pop
inc
ds
cld
xor
stc
stos
and
rorl
ljmp
dec
adcb
sub
mov
ret
lods
ret
ljmp
xor
cmp
pushf
push
add
mov
sub
dec
imul
mov
rcrl
les
or
insb
push
insl
pop
pop
mov
testl
add
mov
gs
dec
popa
adc
xor
jmp
dec
xor
jb
sahf
jmp
insb
ja
inc
stos
div
mov
aas
insb
in
xchg
lret
out
bound
mov
data16
out
mov
push
xorb
sub
cwtl
dec
arpl
outsb
add
lret
div
cld
mov
push
mov
nop
pop
fwait
mov
mov
dec
and
inc
movsl
das
dec
stc
adc
sub
cmc
adc
and
xchg
daa
sbb
dec
sahf
in
mov
cwtl
stos
movsl
imul
and
mov
repz
xorl
rorl
scas
adc
neg
scas
pop
popa
jae
push
cmpsl
inc
mov
cli
roll
aam
bnd
push
mov
push
and
sub
clc
sbb
imul
and
adc
mov
cmpsl
xchg
push
sbb
xor
clc
mov
or
popa
in
scas
sbb
fimuls
adc
in
aaa
ficoml
mov
pop
sahf
or
sbb
dec
inc
cmp
dec
inc
rcr
pop
push
inc
and
iret
cmp
jle
xlat
pusha
ljmp
push
mov
sahf
neg
dec
xor
aaa
xor
sub
aad
int3
jle
xor
dec
xlat
jbe
sbb
lret
sti
mov
fldl
enter
jecxz
pop
mov
hlt
inc
push
std
jb
inc
xor
pusha
in
jae
inc
and
xor
mov
aaa
js
int3
xor
mov
sub
xor
ljmp
mov
scas
push
pop
adc
lds
cld
leave
test
fcom
cmp
dec
lcall
sub
neg
iret
sub
sub
pop
into
dec
mov
das
push
sbb
sbb
mov
and
jl
mov
in
push
or
fwait
stc
cmpsl
testl
push
cli
mov
inc
push
icebp
stc
push
xadd
int3
dec
pop
mov
outsb
add
inc
xchg
sarl
scas
cmc
loopne
js
xchg
js
cltd
rcll
sbb
test
xchg
ds
je
call
out
push
repnz
clc
bound
push
xchg
pop
adc
mov
ret
fwait
mov
add
outsb
jnp
dec
repz
xchg
leave
mov
sub
dec
and
xor
add
ret
dec
pop
or
data16
push
pusha
adc
pop
repnz
mov
inc
mov
shlb
adc
std
repnz
repnz
pop
pop
fcomip
aam
lods
pop
push
dec
leave
mov
mov
test
aam
out
mov
stos
cmpsl
lods
and
push
pusha
sub
xor
jg,pt
movsl
jbe
pop
inc
mov
lods
pop
adc
adc
jbe
aad
cli
push
mov
shr
vpcmpeqd
lahf
dec
mov
fbld
lahf
popf
cs
jecxz
lods
xchg
rcrl
sbb
push
xor
xor
mov
adc
and
js
mov
fwait
loope
pushl
mov
xor
test
xchg
test
ror
xchg
xor
or
dec
cmc
popf
orps
stos
das
lcall
xor
in
jns
mov
jp
ud2
aad
adc
xchg
aaa
rorb
adc
ja
sbb
dec
jecxz
sub
out
jl
pop
leave
out
push
sub
jmp
xchg
pop
xchg
in
pusha
jbe
and
jb
and
int3
fmul
notb
mov
sbb
adc
cmpsl
test
adc
stos
jbe
jnp
add
push
sbbl
lods
jl
adc
adc
aas
lret
adc
push
je
fidivl
mov
sub
and
into
aam
xor
add
add
xchg
loop
dec
ffreep
inc
xor
push
push
xor
inc
mov
out
xor
mov
add
mov
scas
clc
enter
iret
pop
xchg
and
test
jns
mov
xchg
aaa
cwtl
call
or
dec
adc
cmp
ud0
fnstenv
sub
jbe
inc
aad
jae
jb
je
xchg
sub
cmp
in
inc
ret
imul
pop
movb
xor
filds
fisubrl
pop
repnz
das
outsl
cmp
xchg
push
gs
xor
xorl
adc
or
scas
sub
push
dec
sbb
imul
negl
pop
aas
jnp
or
fmul
mov
out
pop
adc
sub
aas
add
pop
pop
mov
adc
xchg
xchg
int3
mov
mov
xchg
jnp
shl
mov
mov
movsl
adc
push
in
es
sub
cmp
je
out
pushf
add
mov
mulb
pusha
shll
sahf
sbb
aas
push
xor
pusha
or
aam
xchg
cwtl
in
adc
insb
les
mov
mov
pop
pop
fs
fdivrl
testl
loope
jle
mov
jg
mov
or
aaa
subb
jae
xor
adc
ss
loope
xchg
cmp
nop
push
pop
mov
cmpsl
inc
or
sub
xchg
adc
sub
cld
mov
callw
cli
inc
lods
aad
jge
in
rorb
pop
movsl
xor
mov
cmovge
in
inc
scas
ret
stos
in
pand
xchg
cmp
inc
out
inc
dec
loopne
adcb
es
test
test
xlat
out
outsb
sbb
inc
xchg
sub
mov
js
sbb
in
push
mov
andl
xchg
mov
cmp
shrl
sti
test
sbb
and
in
add
xchg
movsb
les
dec
push
dec
xchg
pop
mov
dec
mov
sub
cmpsl
jns
jno
inc
xchg
lock
rcrb
cwtl
adc
xlat
hlt
and
mov
enter
or
cmp
mov
leave
enter
and
pop
into
adcl
adc
ja
push
arpl
or
imul
adc
mov
jg
sub
mov
adc
xchg
add
inc
cs
mov
mov
push
pop
data16
in
and
sub
int3
adc
addr16
fsts
and
push
pop
aaa
push
imul
xchg
inc
imul
in
cmp
adcl
add
out
int3
mov
jecxz
jg
popf
in
cltd
hlt
lret
call
adc
pop
jo
lret
sub
pushf
out
pop
and
stos
and
pop
xchg
xchg
shlb
das
xor
jb
mov
test
ds
out
and
dec
dec
mov
repnz
lahf
mov
mov
sarb
pop
mov
mov
movl
enter
and
mov
mov
add
xchg
push
enter
imul
push
clc
add
xor
arpl
and
and
mov
mov
pop
movsb
pop
pop
and
jmp
inc
sbb
pop
jmp
push
lock
adc
and
testl
sarb
cmp
sub
dec
cmp
push
imul
push
mov
out
add
jecxz
pop
cmpl
fisttps
int
dec
and
xlat
mov
lods
mov
idiv
cmpsl
rorl
loop
jge
ror
and
and
xchg
mov
jl
sbb
add
int3
pop
in
movsb
fcomps
hlt
rcll
sbb
xor
rclb
repz
out
inc
sub
sbb
test
jbe
xchg
and
adc
das
stc
test
pusha
push
mov
cmc
xchg
mov
sahf
inc
test
sub
loope
fbld
popf
lahf
scas
nop
mov
pop
add
and
or
jecxz
fists
sbbl
lret
insl
lds
pop
data16
push
or
std
stos
adcl
push
pushf
js
clc
adcl
fwait
dec
into
jmp
cs
xor
sub
fimull
mov
sti
scas
sti
push
sahf
xchg
inc
jb
cmp
cli
adc
or
sbb
xchg
mov
mov
pop
sub
cs
inc
add
adc
repz
mov
leave
jne
pop
xor
mov
pop
mov
insb
mov
mov
push
mov
adc
xor
lcall
test
fwait
xchg
mov
enter
and
and
jne
gs
cli
leave
mov
xchg
cmpl
out
repz
bound
ret
xchg
fdivr
sub
out
icebp
mov
aam
lahf
icebp
and
mov
pop
mov
loopne
push
sbb
fcmovb
mov
js
mov
sub
js
movsl
pop
dec
sub
cli
jp
pop
dec
xchg
mov
das
xchg
xchg
xchg
outsl
push
jp
xor
mov
xor
sub
outsl
fwait
mov
sub
sbb
insb
dec
cli
xor
shlb
or
ljmp
cmpsb
sbb
pusha
pop
jne
sub
aad
enter
mov
mov
xchg
xchg
mov
mov
or
insb
push
rclb
lea
sbb
rorl
insl
sbb
ljmp
movsb
jno
test
inc
fistps
and
outsb
mov
adc
lcall
dec
lret
leave
mov
sarl
jnp
dec
mov
lods
mov
mov
or
cli
sub
push
push
dec
aad
and
in
outsb
fiadds
mov
sbb
sbb
jge
ljmp
mov
je
fs
dec
cld
jmp
sbb
push
sub
in
jg
popf
lods
loope
out
int3
sub
xor
in
int3
loopne
sahf
outsl
ret
fcoms
xchg
rcrb
inc
cld
add
mov
xlat
lea
movsb
jp
lret
popf
lret
or
add
mov
jecxz
add
sbb
xor
mov
shl
or
pusha
cld
push
sub
jo
xor
inc
lds
inc
call
cmp
and
xchg
adc
pop
pop
stos
adc
jmp
mov
add
mov
lret
ret
in
mov
hlt
mov
mov
movsb
sub
push
out
mov
sub
mov
insl
mov
xor
outsb
mov
mov
adc
or
add
xor
lcall
or
in
pop
xchg
popa
jno
lret
in
mov
mov
inc
dec
rol
in
imul
adc
sub
test
mov
jnp
es
adc
and
mov
jmp
add
fstpl
push
jae
and
adc
and
out
xor
out
aas
xchg
in
inc
dec
clc
out
and
mov
push
inc
stc
mov
xchg
je
mov
imul
loope
arpl
fucomip
or
test
icebp
das
cmp
popf
call
mov
inc
arpl
push
pop
daa
jno
into
pop
sbb
dec
adc
xchg
lret
rclb
pop
cmp
aam
bound
add
cli
sbb
shr
push
into
dec
mov
pop
and
fsubrs
xor
xchg
push
mov
jb
shl
lods
ret
jb
push
push
push
cmp
jne
jns
xor
mov
in
addb
int
stos
add
jnp
mov
adc
push
fimuls
mov
mov
lds
mov
add
imul
mov
cld
cmpsb
or
lret
aad
fistl
out
ret
cmp
push
stos
dec
lcall
inc
cmp
int
int3
xor
mov
ds
push
js
push
inc
dec
mov
ret
jbe
fdivl
pop
mov
rcrb
mov
mov
pop
push
es
dec
xor
outsl
xchg
loop
cmp
mov
mov
mov
mov
movsb
inc
add
add
call
xor
xor
hlt
adc
xchg
jb
das
sub
mov
sub
xchg
shl
les
outsb
mov
add
and
push
and
push
clc
js
jmp
jmp
jmp
daa
pop
out
jns
xchg
test
cltd
arpl
and
js
loop
mov
bound
outsl
or
loopne
addr16
mov
popf
dec
dec
fistpll
lods
ja
sub
imul
adc
popa
pushf
das
scas
inc
sub
sub
xor
out
sub
xchg
mov
lahf
and
lcall
and
sar
push
lahf
lret
jno
pop
nop
loope
pop
add
inc
fwait
jns
into
mov
and
sbb
sub
shr
nop
and
jb
add
or
in
sub
sbb
jmp
std
gs
push
adc
mov
pop
mov
mov
xchg
xorl
in
mov
sub
sahf
inc
push
sahf
nop
adc
in
or
jg
jmp
add
lock
mov
cmpsl
pop
orl
and
lods
mov
sub
and
mov
add
ss
xchg
add
mov
cmp
aaa
loope
ja
inc
test
out
int
divl
popf
mov
int
fwait
fwait
push
push
pop
mov
icebp
ret
jmp
mov
push
jle
jnp
insl
movsb
or
adc
jne
jnp
insl
hlt
aad
aaa
jmp
push
shll
mov
icebp
mov
cmp
fldt
add
test
mov
sbb
cmp
enter
push
cmp
adc
sarl
repz
mov
insb
idivb
pushf
out
sbb
xor
dec
outsl
add
aaa
popa
mov
push
scas
inc
jp
push
sub
dec
mov
arpl
pushf
pop
xchg
adc
xchg
iret
dec
aas
jnp
mov
pop
xchg
sub
fsts
fwait
inc
mov
popf
mov
dec
movsl
adc
cltd
push
lret
dec
or
loope
enter
js
sbb
sbb
int3
inc
xorl
cmp
fbstp
sub
bound
add
mov
ds
les
sub
pop
insl
shlb
adcb
mov
xchg
jl
lods
adc
les
hlt
push
gs
pop
mov
jne
inc
ss
arpl
push
push
push
clc
xchg
cmp
cmc
loop
xchg
sbb
lcall
dec
inc
jns
divb
jns
std
mov
rolb
out
and
adc
mov
int3
divb
es
sub
and
and
lea
daa
aas
jp
scas
movsb
pusha
cmp
icebp
sbb
scas
ja
insl
icebp
sarb
ja
aas
adc
sbb
inc
mov
mov
nop
stos
add
dec
fdivrs
jo
je
jne
cltd
jg
std
insl
pop
cltd
jl
iret
je
lret
ljmp
pop
js
ror
sarb
lret
jmp
inc
popa
dec
insb
dec
mov
and
cmp
loope
lea
cmpsl
stos
sub
das
in
scas
cli
push
outsl
add
cmp
int
sub
loop
jno
jne
hlt
sbb
insb
and
cmp
stos
inc
popf
sti
mov
mov
fidivrs
xor
in
mov
mov
mov
gs
mov
adc
int3
test
sahf
in
adc
mov
mov
ret
stos
lea
sarb
pop
inc
stos
dec
jo
xchg
or
fwait
xchg
in
je
test
mov
xchg
lds
sub
shll
sbb
fwait
dec
push
jmp
cmpsl
daa
xchg
mov
jecxz
cwtl
bound
sahf
and
les
insb
pop
outsl
test
jle
fwait
cltd
outsl
or
xchg
test
call
rcl
cli
jns
mov
add
jg
xor
xor
jbe
dec
dec
inc
sub
pop
push
add
out
xor
or
cmp
ss
sbb
pusha
add
inc
in
nop
mov
adc
outsl
mov
and
adc
cmp
xchg
pushf
pop
jmp
dec
loop
fwait
inc
decl
mov
push
dec
fisubrl
and
sbb
test
jnp
pop
iret
jae
mov
loopne
mov
push
loopne
loopne
into
sbb
fucomp
dec
lea
stos
and
out
adc
mov
add
cwtl
mov
sbb
out
adc
mov
loop
push
std
inc
fsub
sub
inc
sahf
iret
stos
jecxz
cli
es
jae
cmp
stos
sub
stc
push
cmp
adc
dec
ficomps
mov
xchg
cmp
fiaddl
xor
xchg
mulb
lcall
div
inc
dec
ja
mov
test
aaa
xchg
jns
insl
mov
mov
jp
add
xchg
cltd
xchg
inc
inc
ds
fs
out
inc
mov
out
mov
imull
sub
pop
data16
cmp
pop
enter
int
lret
les
ret
adcb
mov
push
jmp
cmp
fs
sarl
xchg
ret
xchg
lret
adc
stos
stos
roll
jl
xchg
psubw
stos
mov
push
iret
ds
pop
cmp
dec
sbb
mov
out
adc
push
inc
andl
dec
jbe
jge
push
fnsave
data16
std
jnp
push
adc
ss
shlb
push
mov
xchg
xor
rcr
adc
sbb
aas
push
pop
negb
mov
dec
or
xchg
push
add
dec
xchg
push
cmpsb
pop
mov
xor
xchg
pop
adc
cmp
pop
dec
sub
or
out
rcrb
stos
xlat
mov
insl
in
test
mov
jle
stos
add
and
popa
pop
cmp
pop
dec
insb
shl
inc
insb
fisubrl
xorb
ret
dec
sets
jnp
lds
mov
push
xor
inc
movsb
mov
dec
sub
out
jl
mov
add
clc
mov
pop
cmp
xor
mov
pop
pop
loope
fistl
stos
jns
pop
bound
mov
in
mov
push
iret
dec
scas
xor
xchg
push
jmp
icebp
jnp
cmp
dec
movsl
repnz
hlt
mov
fisttpl
data16
push
subl
sbb
dec
cli
mov
sti
fcmovb
ret
mov
pop
push
mov
scas
mov
inc
cli
mov
xchg
dec
sarl
push
push
les
in
mov
jne
jne
popa
cld
fst
inc
call
inc
push
pop
cli
jo
mov
cli
sub
push
xor
push
pcmpgtb
call
sbb
in
adc
add
cmp
cmpsb
pushf
js
repz
mov
cmp
push
clc
dec
xchg
and
push
push
lods
aas
push
ret
inc
cmp
in
or
cli
cs
sahf
push
mov
mov
fiadds
inc
inc
fnstsw
std
add
adc
mov
dec
lcall
sub
dec
mov
dec
xlat
scas
ja
jge
ret
mov
idiv
inc
jb
pop
cmpsl
in
pop
nop
xor
inc
rcrl
xlat
sahf
ffree
lds
pmaxsw
enter
jno
mov
ljmp
cmp
call
test
sbb
lock
mov
cmpsb
imul
lret
cmc
xchg
cli
mov
insb
sub
push
sarb
sti
inc
or
nop
daa
push
rcr
leave
ds
std
dec
sahf
add
add
in
jmp
push
mov
sub
ss
dec
push
xor
inc
notb
xchg
ds
mov
lds
mov
push
mov
or
imul
repnz
out
mov
clc
and
pop
dec
in
mov
cmp
inc
cmp
dec
push
push
popa
jbe
xor
and
jg
dec
jecxz
sbb
cmc
adc
inc
es
incb
add
or
add
sub
lods
movsb
push
xlat
outsb
nop
dec
sub
mov
cld
int
lcall
mov
mov
xor
cmpsb
popf
fdiv
or
xlat
jg
je
stc
outsb
inc
negl
mov
outsl
xchg
jg
pop
and
adc
setnp
fisttpll
mov
cwtl
xor
xor
leave
xor
push
test
xchg
mov
movsl
jnp
out
addr16
cltd
ss
jb
mov
push
push
rclb
pop
add
insl
xor
pop
rcr
clc
pusha
cmp
and
inc
inc
sbb
inc
add
cmovge
push
dec
inc
mull
push
iret
sub
or
ds
or
xchg
ret
pop
lret
inc
xchg
push
inc
push
enter
mov
ss
lahf
stos
shrl
mov
lea
xor
in
adcb
push
jl
inc
in
pop
mov
scas
lea
nop
imul
sbb
aam
or
mov
fists
je
mov
mov
fsts
adc
stc
inc
jge
push
shl
mov
enter
mov
mov
mov
ret
je
mov
stos
arpl
or
data16
in
fs
pop
daa
test
xor
pop
sbb
mov
ret
and
fldln2
popf
ja
movsl
xor
sbb
test
aaa
cmp
sbb
test
mov
adc
pop
outsb
or
cwtl
jle
or
push
sub
inc
pop
inc
test
lcall
or
fcmovb
sbb
pop
insl
loopne
adc
adc
ljmp
test
pop
rep
bound
mov
xchg
dec
cmp
mov
and
push
xor
rcr
rorl
pop
xchg
mov
adc
daa
cld
add
mov
stos
ret
test
out
add
push
adc
sbb
push
pop
mov
push
lret
mov
aaa
idivb
rol
ret
mov
fstpt
mov
push
mov
int
push
adc
fdivrs
mov
ffreep
add
cmp
clc
add
adc
outsb
popa
js
out
fisttpl
xchg
cmp
add
mov
icebp
jp
dec
dec
xchg
xchg
adc
adc
xor
mov
pop
jp
cmp
into
popf
lea
scas
lods
dec
scas
cltd
rorb
add
iret
or
idivl
inc
adc
sarl
sub
cs
shr
cmp
xor
mov
lret
rcll
xchg
sbb
push
pushf
bound
nop
lret
hlt
mov
or
sub
xchg
shr
dec
aas
aaa
clc
aas
add
mov
lds
mov
push
xchg
loope
gs
pop
outsl
pushl
sahf
jg
mov
adcl
inc
negl
sbb
outsl
mov
xchg
lahf
lcall
adc
sbb
adc
push
pop
inc
inc
push
push
inc
lret
or
pop
adc
out
stos
mov
ljmp
arpl
dec
inc
mov
adc
sub
inc
mov
aas
mov
pop
cmp
jmp
clc
fs
lock
in
scas
push
loop
xchg
testb
dec
stos
cmp
or
mov
in
cltd
xchg
add
cmp
leave
mov
imul
mov
inc
dec
enter
dec
push
xchg
mov
stos
ret
mov
mov
mov
sbb
sbb
and
push
ds
push
push
pusha
je
inc
out
inc
jle
ficoms
sti
jnp
lgs
jp
sub
scas
shrb
sub
inc
fs
and
pop
stc
ja
fimuls
lock
lock
jae
out
lret
fdivs
add
sub
movsb
scas
shr
dec
call
or
popa
or
or
or
jmp
faddl
pop
mov
mov
ret
popa
aas
pushw
push
dec
test
mov
mov
movsb
jmp
and
inc
mov
jp
test
xlat
lods
pop
es
mov
inc
in
les
adc
stc
js
hlt
pushf
add
push
and
jge
jne
mov
sbb
sub
popa
std
movb
cmpl
lods
stos
outsl
xchg
cld
shrb
mov
popf
orl
out
xchg
nop
mov
cmp
mov
test
and
sbb
mov
sbbl
jp
inc
mov
xlat
pop
out
mov
xchg
popa
mov
pop
jns
cvtdq2ps
int3
int
scas
cmp
test
iret
addb
test
int
pop
imul
cmp
push
inc
fidivrs
mov
jnp
pushw
add
mov
xlat
je
nop
dec
push
jnp
dec
mov
cld
mov
repnz
mov
hlt
xchg
pop
push
jl
add
push
mov
rorl
push
or
add
push
stos
inc
psubd
jne
pusha
cld
stos
int3
adcb
imul
inc
sti
dec
mov
repz
add
mov
sbb
dec
sbb
pop
repnz
leave
mov
iret
stos
and
push
cs
push
add
loop
std
add
jmp
dec
add
add
divb
mov
cld
mov
jg
mov
test
xchg
movsb
jns
mov
jne
aam
mov
std
sub
mov
jmp
in
push
jp
loopne
mov
mov
ret
jle
lret
sbb
pop
arpl
cmpsl
sbb
and
inc
xor
pop
pop
cs
insl
icebp
xor
lods
insl
inc
sahf
add
inc
pcmpgtw
inc
cmpsb
in
cmpsl
roll
mov
or
stos
test
inc
mov
mov
push
lock
in
scas
lret
mov
inc
andl
enter
inc
pop
cmp
push
push
jo
cmpsl
xchg
sahf
push
in
xor
call
out
sbb
aad
and
sbb
bound
mov
loope
cmp
call
add
pop
lea
xor
arpl
movsb
mov
cltd
xor
stos
push
clc
mov
testl
bound
ret
cwtl
sub
or
pop
pop
adc
pop
cmpb
mov
out
mov
lock
std
test
orl
jae
xlat
in
sub
ja
cli
lds
xor
cld
pusha
int3
inc
mov
out
pop
sub
xor
lock
ds
push
lods
add
cwtl
jmp
pop
xor
cmp
outsb
jmp
scas
mov
out
xchg
xchg
imul
xor
inc
add
push
jl
rol
xchg
int
mov
mov
stos
adc
push
scas
mov
sub
rolb
push
mov
fs
cmpsl
pushf
mov
repz
mov
stos
call
orb
xor
in
dec
cmp
fldenv
in
push
adc
loopne
mov
test
inc
jne
es
xor
jb
hlt
imul
jge
outsb
lret
or
call
mov
inc
pop
jp
lea
sbb
lret
adc
inc
in
test
into
pop
leave
jb
fcom
jo
insb
out
mov
add
out
cmpsb
dec
or
out
mov
stc
xchg
mov
scas
jns
mov
sub
aas
mov
aam
or
in
fwait
scas
push
push
test
xchg
test
xchg
es
push
outsl
pop
scas
jp
push
in
xchg
dec
pop
jmp
les
mov
fxch
dec
cmp
daa
arpl
shl
in
out
push
xchg
bound
imul
fs
mov
out
movsb
dec
imulb
cmp
xlat
or
subl
test
push
lahf
xchg
push
lods
adc
xchg
sbb
xchg
add
push
popf
dec
dec
mov
fnstsw
xorb
pop
sub
lods
lret
fdivl
mov
loopne
std
jecxz
mov
push
js
outsl
in
dec
imul
imul
in
hlt
daa
pop
inc
push
fs
dec
aaa
xor
jmp
mov
out
loopne
repnz
pushf
es
sbb
leave
addl
xchg
jb
adc
rorb
lahf
arpl
in
jb
sbbb
outsl
sbb
daa
div
pop
insb
or
dec
lods
mov
lcall
roll
mov
aaa
mov
mov
test
or
push
xor
clc
dec
xor
push
xchg
clc
imul
lret
push
cmc
mov
push
in
int
or
dec
adc
insb
mov
imul
sti
mov
and
mov
jno
lods
jns
addr16
push
jbe
xchg
mov
adcb
inc
push
mov
pop
xchg
rorb
cli
and
push
adc
xchg
push
add
sub
jle
mov
test
push
mov
rclb
aad
sahf
mov
andb
fstl
ja
dec
nop
shl
in
out
or
mov
mov
lods
out
fsubs
jl
push
stc
cmp
mov
xchg
xor
fdivr
jle
adc
sub
or
subl
or
mov
aad
shrl
rcrl
dec
mov
cmpsl
aaa
scas
lods
or
sub
mov
xchg
out
imul
push
in
xchg
negl
sbb
aaa
dec
hlt
out
lahf
fldcw
in
jnp
pop
cmc
dec
xor
push
dec
pop
ljmp
cmc
and
sbb
lahf
xor
js
call
lcall
inc
aad
js
xchg
adc
fcoms
filds
xor
add
mov
sbbl
cs
inc
cmc
mov
shll
call
inc
insl
xorl
aas
aas
fstps
dec
xor
es
push
imulb
xchg
mov
in
mov
mov
inc
push
cmpb
dec
in
mov
adc
push
push
mov
dec
test
lods
sti
fs
and
mov
cmp
xor
stc
push
mov
xchg
in
mov
fwait
ret
stos
or
loop
dec
or
cs
lahf
sbbl
cmp
xchg
fcomp
sbb
orl
loopne
jae
test
mov
pop
cmpsl
mov
insl
repz
adc
in
popf
push
xchg
push
cvttps2pi
js
lret
lret
pop
jmp
outsl
in
cmp
mov
sbb
cmp
jo
dec
inc
aam
jno
sub
dec
inc
call
dec
adc
popa
xchg
aaa
popa
pop
popf
test
pop
add
sub
xchg
iret
xchg
adc
das
xor
adc
cmp
stos
clc
mov
in
cli
daa
movsb
cmp
jmp
aas
mov
push
xlat
adc
out
shll
test
sub
mov
out
cmp
lret
aas
daa
mov
cmp
es
mov
sti
xchg
dec
ffree
jb
xor
jnp
jmp
mov
sub
pop
or
cmp
mov
insb
out
adc
loope
sub
idivb
hlt
dec
das
pop
dec
aaa
je
mov
insl
popa
test
lahf
cs
xchg
pop
mov
loopne
iret
mov
cmp
cmp
aam
add
push
stos
outsl
mov
iret
daa
mov
add
inc
int
sub
mov
or
and
aad
cmp
outsb
pop
add
scas
mov
cmp
loopne,pt
out
popf
xchg
pop
insb
mov
mov
in
sub
int3
outsb
mov
jg
iret
inc
insb
jecxz
xchg
cli
adc
xor
mov
add
js
mov
in
add
fcoms
inc
or
leave
shlb
add
push
mov
jmp
fidivrs
jecxz
xlat
adc
shl
scas
inc
sar
dec
pop
jnp
and
xchg
jbe
fwait
mov
mov
xor
dec
cmp
push
inc
mov
sub
fidivrl
in
pop
loop
mov
fnsave
mov
add
rcll
xor
mov
out
lahf
test
stos
ss
cs
psubq
shll
jmp
mov
jp
jnp
dec
rcr
ss
daa
cld
scas
cmp
jbe
sar
sbb
cmp
jle
jnp
push
xchg
test
push
adc
mov
and
mov
pop
mov
aas
lds
jp
and
push
sahf
imull
dec
dec
xor
cmp
sbb
cmpsl
and
inc
aas
mov
or
repz
bnd
and
fimull
daa
xchg
pop
push
test
fdivr
scas
enter
popa
push
addr16
xor
xchg
outsb
repz
fdivp
add
stos
iret
or
cmp
jmp
xchg
inc
push
addb
inc
inc
cmc
inc
icebp
push
inc
fists
mov
sar
ds
jp
rorl
add
jns
mov
or
shl
sbb
insb
out
out
mov
shrb
cmp
push
cli
xchg
xor
aad
sub
shlb
xchg
out
mov
outsl
cmpsl
mov
and
test
notb
dec
sahf
rep
mov
dec
adc
adc
push
sbb
andl
lret
push
jp
xorb
clc
outsl
movsb
or
mov
jnp
gs
fwait
xchg
push
std
dec
and
adc
jnp
int3
jge
cmpl
mov
push
mov
mov
sub
xchg
jb
inc
test
push
movl
in
outsl
mov
inc
test
inc
sbb
movsb
movsb
iret
mov
sub
mov
jbe
mov
dec
and
call
adc
adc
inc
or
addr16
dec
testl
sbb
rcll
notb
rol
add
leave
jne
jns
xchg
icebp
das
mov
jns
pop
add
lds
clc
push
sub
dec
ss
stos
aam
push
dec
adc
arpl
mov
push
fnstsw
and
in
ds
je
cmc
sbb
dec
les
icebp
jl
xor
pushf
cwtl
test
bound
imul
or
lcall
cmp
and
mov
lds
clc
pop
push
nop
xchg
add
in
jge
pop
arpl
inc
cmp
add
and
mov
push
add
jle
cmc
popl
mov
adc
call
roll
xchg
mov
jge
leave
gs
mov
dec
cltd
sub
ja
add
mov
int
cmp
mov
or
cmc
dec
into
adc
xchg
sub
push
dec
loope
mov
sub
pop
cmp
arpl
xor
sbb
cmpl
dec
mov
es
clc
cld
insb
fldenv
stos
xchg
cmpsl
xor
gs
dec
clc
and
pop
jns
fcmovne
ret
dec
sub
stos
pop
adc
lods
xor
mov
lods
mov
jb
outsl
mov
dec
add
inc
inc
lahf
pop
outsb
push
and
inc
insb
loopne
dec
dec
xor
je
mov
fldcw
in
insl
fs
arpl
pop
sub
pop
les
sbbl
mov
stos
imul
lret
call
ret
out
mov
pop
loop
inc
bound
lret
mov
push
outsb
dec
loopne
out
cmpsl
mov
pusha
test
imul
jle
cld
sub
adc
aam
xchg
sarl
cltd
bound
fucom
inc
add
repnz
aam
cmp
mov
cmovo
jb
cmp
cmp
inc
dec
sarl
fdivs
xor
cmp
adc
cwtl
cltd
xlat
repnz
rorl
jo
stos
ljmp
scas
mov
cmpb
aad
cltd
cmp
nop
xor
das
mov
push
shrl
sbb
loope
cmp
pop
or
out
bound
mov
into
stc
mov
pop
pop
cmp
mov
inc
xor
jmp
repnz
ret
leave
pop
cmpsb
sub
xor
aam
push
xor
mov
jge
stos
or
loope
aas
cmp
jnp
repz
or
out
cmpsb
js
xor
imul
pop
add
push
cmp
pop
ljmp
adc
push
scas
sbb
cmpsb
and
in
std
mov
cmp
xchg
sbb
inc
adc
sahf
jno
jne
popa
cwtl
mov
and
lods
and
loopne
mov
jl
mov
popa
or
hlt
cmpsl
cmpsb
pop
xor
mov
es
inc
and
mov
aas
mov
push
in
and
inc
mov
mov
pop
orb
test
mov
xchg
repnz
cmp
aaa
fwait
xor
jns
repz
int
and
cli
cltd
push
xchg
adc
add
sub
mov
out
in
mov
out
call
and
mov
out
push
lock
pop
psubsb
mov
sbb
mov
rcrb
shrb
icebp
mov
mov
int
inc
movsb
in
sbb
in
cmp
minps
sub
test
fisttpl
popf
imul
and
push
pop
adc
stc
mov
push
push
les
ja
or
fucom
jmp
ficoms
xchg
push
pop
add
xchg
or
mov
mov
jl
out
inc
jg
mov
fstps
mov
rolb
add
ret
xchg
xchg
mov
dec
xchg
lcall
fidivrs
gs
faddl
popa
stos
pop
dec
inc
pop
push
inc
out
mov
mov
sbb
fisttpl
mov
add
cmp
mov
daa
inc
pop
int
mov
mov
mov
movsl
pop
dec
aad
dec
xchg
clc
pop
push
cmp
cmp
xor
in
xchg
lods
fucomi
xchg
enter
mov
and
je
dec
lcall
test
mov
mov
pop
repnz
shlb
dec
insb
push
rcrl
test
dec
sbb
jg
leave
xchg
inc
mov
add
mov
enter
sub
lock
mov
jne
sub
cltd
adc
adc
sub
or
dec
ljmp
imul
adc
in
add
xchg
pop
push
sbb
and
test
sub
inc
fcomp
mov
clc
mov
add
and
loopne
loopne
jnp
mov
jne
pop
pop
mov
ja
adc
push
push
sub
test
xor
es
or
fcomps
xor
pushf
dec
mov
add
sbb
mov
jns
and
aad
jp
push
mov
stc
sub
clc
pop
cs
int
fs
dec
dec
lcall
xchg
fsts
jo
sub
cmp
insl
jg
insb
dec
rcr
mov
pop
mov
stc
pop
cmp
loope
push
mov
jae
xor
add
xchg
add
test
mov
or
dec
aad
push
mov
jge
ja
icebp
aad
ret
aas
lret
pop
mov
lock
xor
pop
lods
mov
adc
subl
enter
cmpsb
mov
cmpb
pop
gs
mov
jp
inc
cmp
jb
cmpb
pop
test
test
call
jecxz
inc
jl
js
fs
mov
pop
xchg
enter
sbb
shll
lcall
mov
xor
mov
mov
jne
into
lret
mov
or
cld
mov
bound
je
in
jp
dec
or
sbb
cmpsl
aam
and
push
aam
pop
stos
lea
jle
push
inc
add
sub
pop
dec
nop
fmulp
cwtl
mov
sbb
sahf
inc
repnz
jge
pop
lret
and
dec
xlat
cmp
outsb
adc
and
subb
inc
clc
xor
cmc
and
push
adc
stos
xor
rclb
cmpl
fs
inc
rcrb
aam
and
add
stc
xchg
cmpsb
push
aam
inc
inc
xor
mov
mov
dec
mov
leave
es
adc
pop
nop
gs
scas
cs
mov
jnp
jle
xor
push
dec
adc
xchg
jbe
push
scas
clc
sarb
xchg
lahf
pop
loopne
mov
adcl
popf
mov
test
adc
or
xlat
xor
or
ret
test
dec
fwait
and
insl
jno
loope
xchg
add
jbe
sbb
std
rcll
popf
sbb
adc
push
leave
shlb
jge
mov
mov
rolb
sbb
lds
mov
sbb
jg
repnz
nop
sbb
test
mov
scas
repnz
dec
push
cli
fsubrl
lret
cmpsl
loopne
cmp
xchg
outsb
pop
xchg
adc
jns
and
adc
cmpsb
mov
sbb
xchg
pusha
jl
mov
fwait
test
aam
pop
adc
add
mov
sub
mov
dec
inc
push
mov
jno
jns
push
imul
add
pop
mov
nop
pop
xchg
inc
jb
xor
andb
push
mov
fstp
and
push
lcall
fisubl
push
or
xor
jmp
outsb
mov
add
sub
mov
sub
xor
icebp
lret
leave
push
pop
xlat
and
sbb
and
mov
mov
arpl
xor
lods
out
inc
adc
subb
push
lea
test
cmp
and
gs
cmpsb
call
call
ret
movsl
jae
lods
out
push
and
and
cltd
cli
outsb
jecxz
lds
jecxz
in
mov
mov
jbe
ffree
cmpl
dec
jns
mov
cmpsb
mov
xor
mov
and
mov
aad
inc
jb
mov
mov
fistpll
mov
adcb
pop
mov
jb
jecxz
fidivrs
out
cmp
mov
rcll
xchg
test
dec
inc
cmpsb
push
mov
adc
xchg
loopne
mov
mov
pop
sub
mov
scas
mov
imull
add
xchg
stos
loope
xor
les
push
test
repz
sbb
jae
lret
xchg
cld
jmp
nop
adc
fnstsw
mov
mov
push
or
das
mov
xchg
xor
and
sub
jb
dec
cmp
fdivl
mov
sub
loopne
in
pop
jge
test
bound
add
xchg
push
movsb
sbb
in
inc
mov
aas
arpl
sbb
inc
jmp
pop
test
pop
shrb
loop
fistps
dec
cmp
int
and
mov
daa
and
jle
inc
jmp
fmul
out
popf
adc
ss
lea
and
fstps
in
ljmp
int3
bound
sbb
jns
or
ljmp
out
xchg
dec
pop
xchg
mov
mov
jmp
ss
orb
and
cmpsl
shrl
stos
or
xchg
push
std
ljmp
adcl
pusha
rclb
insb
aad
cmp
mov
test
jns
mov
adc
pop
xchg
or
add
inc
xchg
push
add
jp
jne,pt
mov
icebp
pop
into
popa
mov
loop
stos
cwtl
sar
gs
sbb
lea
inc
push
fnstenv
shrb
outsl
test
lods
dec
aaa
idiv
pusha
xchg
movsl
outsb
fwait
and
inc
sub
faddl
jbe
push
inc
xchg
test
xlat
in
mov
lods
mov
inc
out
sub
adc
aad
cmp
add
out
sahf
xorl
test
pop
push
or
push
or
inc
enter
push
dec
jg
popf
pushf
lock
lahf
sti
les
out
mov
nop
in
sbb
or
add
pop
inc
and
jge
jnp
mov
leave
xchg
mov
fildll
int
xchg
mov
adc
js
ss
adc
add
mov
out
jge
or
icebp
out
jae
in
test
shlb
repnz
sub
dec
add
mov
fnsave
fdivrl
ret
inc
fdivl
or
lret
dec
in
xchg
pop
jle
icebp
cmp
jge
lea
repnz
push
push
inc
pop
fucomip
adc
gs
pop
movsb
popa
inc
jne
push
cld
pop
jp
or
xchg
repnz
out
outsb
add
mov
mov
push
mov
sbb
cmp
jbe
push
adcl
fwait
add
sbb
mov
adc
xor
mov
dec
std
push
sub
xor
lret
jmp
mov
jnp
xor
popf
and
push
rolb
sbb
cmpl
pop
mov
sub
jp
jo
or
mov
sub
xchg
xlat
addr16
inc
xchg
pop
inc
subl
mov
sub
adcb
sbb
cmpsb
cmpsb
mov
push
testl
mov
pop
push
xchg
jnp
js
fwait
cmp
add
aam
sub
xor
and
or
js
scas
mov
push
jae
dec
jae
loop
lret
or
repz
scas
mov
movsb
xchg
fwait
pop
in
push
movsl
fsubs
adc
and
orl
ss
aaa
xor
and
lock
mov
mov
pop
fldl
scas
push
push
addl
add
btc
sbb
xchg
sub
or
icebp
cltd
scas
push
pop
scas
add
popf
cmp
movsb
lock
insb
push
sbbl
mov
xor
ret
sti
sti
inc
xor
mov
gs
int3
xor
fstps
lock
xor
mov
fadds
or
fstl
jp
xchg
sbb
adc
jl
add
dec
mov
or
in
pop
or
inc
fildll
cmp
or
test
test
mov
imul
fstpl
insl
insl
js
sub
dec
jo
pop
mov
pushf
into
inc
add
jb
mov
pop
test
mov
xchg
sub
push
cmp
outsb
daa
das
mov
cmp
ret
push
shrb
inc
adc
aad
mov
xchg
lahf
insb
out
xchg
enter
std
xchg
sbb
in
fadd
das
cld
pop
xchg
or
push
rorl
test
adc
sbb
mov
sub
shlb
lea
mov
iret
add
xchg
cltd
cli
ret
mov
in
adc
clc
iret
cs
lcall
out
pop
sbb
cmp
not
int
dec
sub
lcall
das
popf
call
mov
test
pusha
push
jns
fstpl
cli
lods
jns
out
and
inc
lret
pop
and
pusha
mov
shll
insb
stc
sbb
adc
mov
jge
xchg
cmpl
in
push
mov
mov
sahf
jne
lods
pop
mov
stc
dec
lahf
mov
cmp
cmp
jns
in
pop
dec
das
adc
test
xor
les
adc
add
xchg
jp
jge
pop
in
mov
popa
inc
int3
into
inc
imul
mov
loop
mov
shl
push
adc
popf
test
mov
sub
pop
movsb
xor
pop
mov
movb
mov
lcall
mov
outsl
clc
adc
cli
insb
mov
sub
sub
repz
aam
filds
mov
pop
push
jnp
inc
cmc
or
jb
pusha
and
shl
xor
mov
push
pop
lret
dec
push
cmp
mov
in
cmp
jno
int
mov
push
fsubl
pop
test
scas
and
in
fs
pop
pop
or
add
and
and
xchg
mov
sahf
mov
push
lock
jne
xchg
js
mov
add
movsb
mov
insl
mov
and
das
not
addr16
inc
cmp
in
and
mov
dec
push
int
andb
je
adc
nop
scas
popl
or
fcoms
mov
sbb
cli
ficoml
xlat
inc
pushf
xchg
popf
test
cmp
outsl
stos
movsl
add
push
mov
push
dec
cmp
push
lock
mov
mov
fidivs
ja
xchg
mov
repnz
fisubrs
repnz
out
pop
pop
ja
xor
out
lret
adc
cmp
jb
out
mov
xor
and
ret
push
repnz
lret
mov
outsb
divb
sti
pop
jne
xor
in
adc
adc
or
mov
pop
cmc
push
or
or
fisubs
add
mov
mov
pop
cmp
sbb
or
hlt
divl
aaa
xchg
and
lret
inc
pushf
outsb
jge
out
xor
rcr
xchg
pop
and
aas
bound
fisubrl
push
mov
and
in
xchg
test
mov
test
scas
sbb
ds
pop
in
dec
sbb
sbb
and
movsl
cs
push
cld
sti
out
adc
daa
jo
adc
and
out
fs
jns
mov
rcr
mov
shlb
test
dec
and
push
gs
out
repz
pop
jecxz
xchg
lods
sbb
inc
xor
gs
test
jecxz
out
shrb
or
pop
inc
sub
movsl
jl
imul
addr16
lret
rorb
jns
dec
out
je
rorb
cs
imul
in
aaa
push
jno
mov
mov
mov
ss
lret
push
rcll
push
jge
sub
movsl
jle
xchg
xchg
adc
jne
and
cmp
push
and
cs
inc
pushf
dec
sub
call
arpl
or
dec
in
jb
js
and
shll
sbb
mov
sbb
sub
jp
cmp
and
adc
pop
xchg
lds
pop
data16
pop
jl
pop
add
mov
loopne
pop
stc
lods
out
mov
mov
nop
or
push
xchg
lea
or
sbb
push
push
mov
mov
push
xor
dec
cmpsl
inc
cmp
and
loope
mov
add
aas
xchg
mov
ljmp
out
pop
adc
imul
or
mov
jae
pop
int
shl
mov
push
mov
lahf
sti
pop
cs
addl
enter
cltd
jle
arpl
jecxz
push
in
aaa
int3
inc
cmp
xor
cld
shlb
test
dec
xor
mov
fimuls
test
jle
pop
adc
je
in
jg
test
pop
bound
mov
lods
imull
js
sub
sbb
adc
les
xchg
ret
xor
xchg
iret
in
ja
dec
sub
scas
mov
push
je
ja
add
imul
add
push
icebp
out
js
cwtl
sbb
pop
jmp
sub
insb
fistpll
push
pop
repz
inc
lods
outsl
lds
test
pop
and
cld
jmp
mov
movsb
cmp
mov
dec
dec
call
jo
in
sbb
sub
and
lods
mov
cmpsb
push
cmp
dec
repnz
cli
mov
mov
clc
lds
jecxz
arpl
inc
adc
inc
fucomi
addr16
mov
imul
bound
pop
sub
cs
mov
mov
int3
mov
lret
pop
cli
aas
ja
out
inc
mov
push
hlt
out
dec
imul
push
repz
es
xchg
arpl
mov
insl
inc
pop
mov
adcl
pop
ret
call
jno
aas
lret
pop
push
repnz
sbb
sub
adc
fstp
jmp
xor
xor
in
and
cltd
jnp
xlat
out
or
icebp
mov
inc
popf
cs
mov
sahf
push
int3
out
push
loopne
leave
sahf
mov
adc
and
popf
cli
cmpsl
subb
xchg
es
out
dec
rcl
clc
test
jne
addr16
mov
adc
aad
push
fwait
outsl
or
daa
lods
xchg
lcall
push
add
cld
fcompl
cltd
xor
outsl
aad
xor
jmp
pushf
outsl
jns
inc
and
xchg
push
iret
insb
or
ds
shr
out
in
or
cmp
pop
scas
dec
jae,pn
adc
mov
lret
sahf
xchg
scas
add
cmpsb
inc
in
inc
sub
or
mov
nop
jno
sahf
jp
adc
daa
mov
cmp
rorl
fisubs
mov
mov
sub
mov
pop
adc
push
les
fisubs
repnz
in
lock
sub
lods
gs
repnz
add
xor
push
movsb
mov
cld
adc
mov
lret
stos
and
insl
xchg
cmp
inc
lock
jnp
jge
pop
in
adc
mov
inc
adc
lret
lea
mov
push
lahf
add
test
fwait
addb
pop
mov
push
insb
js
jecxz
push
add
outsb
aaa
lds
in
and
pop
imul
ljmp
xor
mov
movsb
je
dec
mov
out
and
rorb
adc
cld
jb
mov
mov
add
push
enter
cmp
cltd
inc
cs
in
add
rcr
in
sti
mov
xchg
sar
ret
mov
and
out
repnz
mov
lds
js
jle
push
ljmp
sbb
xchg
sbb
adc
add
imull
pop
jg
sbb
jp
icebp
xorl
in
popf
lahf
sub
lcall
adc
into
dec
sub
sub
cmp
sbb
cmp
mov
loopne
mov
mov
cmpsb
or
push
xor
andl
mov
subl
ret
or
push
in
xor
dec
lods
push
jle
mov
fildl
adc
lods
movsb
lcall
sbb
divl
icebp
add
push
add
shll
xlat
ljmp
mov
xor
loopne
inc
pop
mov
loope
iret
leave
xor
mov
and
jecxz
pop
xor
cmpl
cmp
push
mov
mov
jne,pn
pop
push
inc
mov
jp
jecxz
das
pop
xlat
sub
loope
loopne
in
test
dec
imul
dec
push
cmpsb
jnp
dec
fwait
mov
hlt
scas
push
xchg
jnp
loopne
mov
scas
push
fisttpll
mov
call
aad
mov
adc
mov
sbb
out
negb
dec
mov
push
add
stos
imul
xchg
ret
pop
sbb
xor
rcrb
xlat
lods
sbbl
sbb
xor
ds
or
push
or
jle
xchg
nop
xchg
add
jbe
cmp
mov
jno
mov
push
mov
test
in
popf
mov
popa
mov
xor
outsl
or
pop
orb
cmpsl
jne
sub
wrmsr
add
mov
or
je
and
sbb
roll
test
ret
dec
pop
sahf
stos
lret
fs
stos
or
or
andb
sub
fimuls
and
fcompl
lds
jl
and
lcall
fidivrs
stc
nop
sbb
dec
pop
mov
xchg
sbb
test
das
in
inc
std
and
test
jle
jle
jbe
cld
fisttps
sub
xor
lret
pop
cmp
cmpsb
rcll
ds
sbb
fistpl
sub
xchg
mov
push
fwait
cmp
clc
daa
cmpsl
add
ja
addb
xorl
sbb
repnz
cltd
push
mov
pop
das
cltd
xor
add
inc
xor
jae
ljmp
jmp
mov
push
and
fs
add
jge
jne
cmp
jle
jne
and
mov
sti
xor
mov
or
loope
or
out
stc
push
cmp
or
mov
pop
and
clc
sarl
fs
and
sbb
pop
push
mov
push
aam
add
loope
test
jns
out
dec
rorl
push
cmpsb
into
enter
gs
xchg
js
popa
mov
mov
sub
test
loop
ljmp
ljmp
xchg
aam
pop
les
rolb
mov
push
jmp
out
dec
adc
neg
popf
sbbb
and
dec
push
push
fs
push
mov
daa
xchg
push
cmpxchg
fidivl
pushf
sarl
cmp
xorb
cmp
adc
bound
loope
insb
jbe
mov
push
aam
push
ret
sub
push
pop
jno
cmp
dec
insb
sub
mov
pushf
loop
jmp
cmc
fdivs
ds
daa
inc
daa
mov
xor
or
mov
fmull
jb
stos
shrl
pop
int
fcmove
pop
dec
mov
leave
stos
dec
loopne
ss
mov
nop
stos
in
pushf
adcb
or
jae
repz
add
scas
imul
cmpsl
adc
mov
cld
sub
and
mov
sbb
stos
jne
cmp
imulb
sahf
in
push
andb
in
in
sbb
sbb
lret
mov
lock
sub
aas
sub
subb
leave
push
mov
xor
test
xchg
jg
mov
stos
fdivrl
mov
or
cmc
test
out
daa
jno
in
cmc
or
sub
int
iret
xor
xor
or
insb
push
mov
mov
push
pop
cmc
ds
sbb
roll
pop
insl
xor
mov
push
pop
aaa
loop
mov
mov
push
jg
idivl
in
cmp
ljmp
aad
std
scas
mov
lds
lods
add
push
loope
or
popf
arpl
test
outsb
xor
dec
sar
adc
pop
mov
push
iret
xchg
push
push
mov
lods
gs
or
push
outsb
jge
shlb
xchg
rcr
out
pop
add
fadds
or
loop
cmp
fists
mov
xor
loopne
iret
lahf
cli
test
enter
pop
outsb
pop
lret
cmp
sti
iret
orl
lds
xor
negl
sub
and
insb
dec
sub
shr
loopne
mov
xor
fsubp
in
ret
int
xchg
and
popa
xor
faddl
jp
movsb
clc
js
sbb
adc
lds
mov
aam
movsb
inc
push
cmpsb
push
cmp
clc
pop
stos
mov
ffree
dec
call
ja
or
or
mov
dec
dec
imul
and
ret
cwtl
sbb
adc
mov
mov
loop
xchg
repz
pop
das
push
icebp
pop
mov
lret
add
lret
jae
sub
dec
hlt
pop
sbb
scas
int
cwtl
jns
push
lret
xchg
ss
or
lock
mov
movsl
es
pushf
ljmp
roll
scas
scas
pusha
mov
and
lods
dec
cmp
inc
sub
popf
jmp
xor
or
add
xchg
inc
sub
sbb
sub
into
push
mov
cs
data16
or
mov
dec
pushf
sti
sti
and
popa
or
lret
hlt
mov
push
push
aam
test
fnsave
cmpsb
loop
xchg
test
jo
dec
jne
lods
xchg
sti
clc
out
insl
pop
xor
mov
jg
mov
pop
adc
ss
shlb
out
xor
ret
jp
pop
movsb
test
push
push
mov
scas
push
lret
test
push
hlt
mov
cmpsl
lcall
popa
xchg
sbb
sbb
lods
xor
pop
push
mov
into
add
scas
inc
fdivp
jmp
test
and
mov
out
orb
xorb
sub
imul
pop
pusha
mov
clc
inc
adc
mov
movsl
js
pop
dec
inc
mov
mov
inc
iret
mov
dec
rorb
mov
imul
mov
sbbb
imul
and
mov
mov
jp
xchg
add
xchg
sahf
xchg
pop
ret
pop
and
fidivrs
push
pop
mov
adc
push
xchg
xchg
pop
cli
lods
cmp
or
icebp
cmc
jne
push
aam
pop
or
pop
out
stos
test
dec
adc
mov
fimuls
leave
fsubs
shl
mov
cmp
std
cmc
adc
popa
in
lods
adc
mov
adc
mov
inc
subl
mov
xor
jecxz
idivl
rolb
rorb
cltd
pop
push
push
jp
pop
inc
psubsb
in
cmp
jmp
xchg
jb
cmpb
adc
sarb
jp
cmpsb
mov
jecxz
lcall
pop
xchg
icebp
mov
jns,pt
ljmp
je
outsl
push
mov
ja
movsl
nop
push
xor
ret
into
pop
jmp
cwtl
cmp
outsl
das
lret
mov
xchg
les
ljmp
or
test
test
xchg
and
in
xchg
mov
fisubs
pusha
and
fs
loop
aam
stos
lods
cmp
xchg
les
xor
cmp
jle
xor
pop
shl
incl
jg
imul
stos
cs
sub
add
sahf
outsb
mov
pushf
jne
test
in
pop
and
and
scas
aas
jmp
mov
lods
mov
push
or
les
pop
mov
mov
stos
adc
inc
sti
sbb
rcrl
jno
sub
scas
pop
test
adc
imul
insl
dec
jb
imul
sub
adc
push
movsl
push
out
push
or
push
clc
mov
push
pop
xchg
adc
dec
lods
mov
or
fcmovb
adcl
scas
movl
dec
jecxz
test
pop
push
pop
subl
jmp
daa
xor
shrl
sub
ret
lods
sahf
lods
iret
add
loop
daa
scas
cmp
push
int
sahf
lods
or
sub
push
sarb
pop
clc
push
addr16
dec
jmp
dec
pop
fildl
test
in
lret
mov
test
pusha
imul
addl
inc
xchg
test
frstor
movsl
or
inc
jbe
mov
cmp
movsb
outsb
mov
pusha
rol
push
test
add
mov
sub
dec
xor
pop
mov
or
push
adc
push
cwtl
cmpsl
jecxz
or
lcall
incb
or
fimuls
inc
negl
lods
fmulp
ret
mov
mov
xchg
rcrl
jo
jno
sbb
add
shl
mov
cs
es
mov
in
jnp
pop
xor
mov
xor
xor
into
add
xchg
xlat
mov
pop
pop
sbb
rcrb
aaa
and
aas
addl
and
lret
nop
pop
pop
out
das
push
inc
jmp
inc
adcb
out
lods
idiv
inc
dec
cli
xchg
adc
nop
ss
test
data16
mov
cwtl
pop
pop
data16
stos
pop
loope
cli
cmpsl
ret
inc
lods
inc
mov
add
or
js
or
stos
push
test
ja
popl
std
xor
dec
xlat
fiadds
inc
push
sub
rorl
or
sub
or
and
sub
sti
jp
xchg
ss
mov
jno
cld
mov
lods
scas
sub
xlat
cmp
push
std
fsubs
scas
push
sub
adc
dec
jns
dec
pop
fs
dec
sbb
int
aam
cmp
mov
in
lcall
mov
push
gs
push
jl
add
repnz
dec
dec
call
or
enter
jnp
mov
scas
cwtl
je
sub
xor
sub
pop
pop
jb
sub
sub
fisttpl
mov
aaa
push
inc
cli
bound
mov
scas
push
imul
das
jecxz
xchg
sub
out
bound
sub
and
ret
jae
cwtl
push
add
mov
push
pusha
daa
cmp
push
sahf
cwtl
xor
xchg
sti
cli
cmp
popf
pop
jbe
pop
fldcw
insl
movsb
inc
inc
add
out
add
outsb
es
mov
sbb
push
popf
sub
jo
dec
addr16
fsubs
outsl
cmp
sub
roll
imul
ja
push
pop
loop
dec
pop
fisttpll
sti
pop
clc
fdivl
clc
insb
mov
loopne
out
loope
test
icebp
out
mov
cmp
bndldx
and
lret
mov
sbb
xchg
pop
mov
lods
or
mov
orl
pop
orb
xor
std
push
xor
sub
aaa
or
push
mov
add
cs
pop
stos
mov
aad
movsl
faddl
jmp
jmp
fmull
xchg
mov
fstps
jmp
jp
dec
loopne
sbb
inc
jmp
loop
add
xchg
fistpl
or
mov
dec
js
mov
or
lock
movl
cwtl
pushl
lods
mov
fcmovnb
xor
cmp
xchg
lock
add
fsubr
mov
cmp
push
arpl
jns
popf
and
shll
orb
dec
mov
mov
aad
jnp
mov
test
sbb
jl
pop
xchg
xchg
cli
ljmp
mov
cmp
ljmp
ljmp
jno
gs
sarl
leave
arpl
dec
dec
fidivs
rcrl
loope
and
cmpsb
insl
lods
sti
add
pop
mov
dec
outsl
mov
fwait
subb
xchg
setne
aas
in
ljmp
mov
enter
stos
sub
in
ds
mov
mov
lret
imul
push
cs
arpl
gs
push
mov
daa
int
mov
cmp
lods
aaa
pusha
xchg
add
jno
and
std
pop
ficompl
and
andl
daa
call
xor
and
inc
inc
xor
xchg
jg
cmc
cmp
pop
lret
sub
call
push
push
push
cmp
mov
cmpsl
sub
jmp
fwait
ljmp
mov
or
je
pop
jb
xchg
movsl
cmp
pop
mov
push
das
sub
test
cli
in
aas
pop
sub
xor
es
mov
sub
test
dec
mov
cmovb
outsb
sub
enter
cmc
xor
lods
repnz
mov
fcmovb
jle
dec
popf
fisttpl
imul
jae
je
outsl
orb
pop
inc
push
pusha
pop
out
scas
xchg
push
fadds
cmpsl
in
lods
pop
ljmp
sarb
loop
addb
movsb
push
dec
mov
out
add
mov
aam
push
dec
or
mov
insb
dec
jnp
inc
pop
ljmp
stos
fs
iret
xchg
fbstp
cld
xor
lcall
lret
cmp
xor
ja
lock
jo
out
clc
xor
aaa
out
in
pushf
imul
cltd
dec
mov
fisubs
push
cmp
pmaxub
adc
and
sub
mov
cs
in
xchg
aas
xorl
hlt
xor
adc
jl
dec
js
inc
fwait
in
sahf
enter
call
xlat
fistl
jmp
xor
sti
inc
mov
jl
das
insl
arpl
and
movsl
stc
push
push
stos
lods
popf
rcll
and
test
jo
mov
push
sbb
pop
mov
sub
icebp
in
adc
fistpll
cmc
dec
push
xchg
and
adc
and
cli
lods
or
scas
mov
int3
jp
add
ret
cwtl
and
je
jo
cmpsl
or
pop
pop
and
mov
xchg
mov
add
addr16
adc
les
sti
pop
ret
cld
bound
dec
div
clc
mov
push
icebp
aam
in
shl
cs
dec
mov
scas
out
mov
hlt
xchg
pop
pmulhuw
inc
and
push
xor
pop
mov
nop
fsubs
adc
test
and
scas
xor
jle
cltd
push
aas
xor
dec
negb
cmpsl
add
rcl
sbb
mov
sahf
pop
sbb
stc
pushf
mov
add
mov
stos
sahf
mov
out
pop
push
xor
loopne
xchg
inc
out
iret
or
push
lret
jns
xor
xchg
pop
xorb
nop
loope
jmp
adc
pop
ret
test
xchg
inc
sub
adc
in
mov
adc
hlt
pop
xchg
cwtl
inc
sarl
jb
and
sbb
loopne
jnp
out
jae
pop
and
cmp
hlt
cmc
mov
test
push
xor
mov
jp
push
rclb
pop
es
clc
sbb
stos
inc
and
xchg
mov
adc
jg
clc
dec
sub
jl
lock
mov
imul
movsb
mov
mov
adc
lods
mov
cmp
pop
jnp
push
out
repz
divl
lds
repz
insb
test
lock
ret
sbb
mov
push
cltd
mov
outsl
adc
mov
lahf
jae
cmp
test
or
fisttps
pop
xlat
push
or
add
ret
sbb
mov
xchg
enter
inc
add
es
cli
dec
jecxz
movsl
sbb
pop
sbb
loopne
push
andl
in
lds
pop
add
add
addb
stc
mov
or
push
pop
fisubrl
testl
arpl
loope,pn
mov
test
or
push
push
cltd
clc
add
js
push
pop
inc
jne
push
mov
movsb
jl
dec
ret
ljmp
mov
lds
sbb
imul
ror
mov
repz
and
into
mov
xorb
addl
ret
lock
pop
adc
mov
add
test
arpl
jno
shll
lcall
xor
xor
cmp
and
shrb
inc
jmp
inc
gs
mov
jae
pushf
fildll
inc
insb
cmp
sbb
pop
andl
mov
shll
rorb
mov
pop
fdivl
jne
dec
fsubrl
lods
bound
push
xor
mov
iret
rol
outsb
out
adc
mov
xlat
test
pop
nop
inc
imul
mov
pop
add
movsl
push
out
fsts
pop
jns
adc
ss
ja
outsl
or
dec
xchg
or
jne
mov
repz
xchg
push
mov
shr
out
jnp
add
xor
xor
lret
hlt
out
cmp
jbe
inc
add
inc
aad
clc
xchg
lcall
mov
cmp
jns
testb
xor
lret
fdivrl
sbb
cmp
push
mov
adc
pop
sub
movsb
push
jae
out
sbbb
es
push
daa
into
xor
jae
sub
pusha
lcall
or
imul
adc
fwait
cs
sarb
rcr
repnz
xchg
jbe
int3
lods
daa
pop
cmpsb
jns
int3
xor
adc
jo
mov
adc
loopne
jno
pop
scas
je
sub
outsb
add
sbb
mov
mov
ljmp
lret
dec
movsl
fxch
rol
les
jb
add
mov
inc
daa
aam
pop
fnstsw
sbbb
or
and
and
xor
sbb
cwtl
fsubp
scas
and
cli
mov
jp
sti
mov
or
adc
push
jae
test
mov
xor
and
cld
sahf
sub
inc
and
shll
and
aam
mov
rdpmc
dec
call
add
lods
adcl
sbb
fcmovnu
and
dec
push
ds
jge
mov
adc
test
lret
push
mov
xchg
jnp
mulb
insl
out
xor
add
lock
aaa
popa
rclb
out
mov
cvttps2pi
mov
imul
lret
fwait
andl
mov
inc
xchg
xor
mov
jnp
mov
je
pop
jo
sub
or
insl
out
xchg
in
inc
jo
ja
dec
add
push
sahf
imul
jno
fadds
fwait
lahf
xchg
je
cwtl
sub
mov
mov
mov
dec
xor
mov
jge
repnz
push
mov
mov
lds
mov
fucompp
repz
adc
mov
jno
std
sub
das
outsb
jno
bswap
xchg
imul
roll
mov
lret
push
repz
popf
and
stos
shlb
nop
sub
mov
mov
add
jp
xchg
stos
sbb
xchg
outsb
enter
negb
icebp
inc
jnp
movsl
push
dec
jecxz
adc
and
dec
testl
sbb
lods
sub
mov
rcll
pusha
aam
leave
ljmp
mov
jns
leave
dec
addr16
loop
sub
mov
dec
adc
xchg
in
repz
gs
inc
or
mov
inc
pusha
jnp
jle
faddl
jbe
out
pop
lea
ljmp
inc
cmc
sub
xchg
mov
xor
jecxz
jo
cli
scas
mov
mov
mov
pxor
sbb
loope
xchg
sub
pop
int
jecxz
mov
test
mov
aas
jns
into
bound
ror
sub
gs
mov
push
push
inc
add
add
call
lret
inc
fidivrs
pop
das
pusha
lods
scas
push
ss
rclb
idivl
sub
aam
lahf
dec
push
push
mov
xor
mov
xchg
inc
je
adc
outsb
sarl
push
mov
adcl
jmp
mov
in
rorb
je
push
inc
imul
push
xor
push
dec
push
jns
push
lods
inc
cmp
adcb
mov
push
aaa
mov
xor
in
ret
add
lods
scas
sbb
daa
out
scas
sbbb
and
mov
add
mov
pushf
mov
pushfw
cmp
sahf
sbb
xor
cs
ljmp
sbb
and
clc
adc
rcrl
push
xlat
cltd
fsubr
add
mov
aam
pop
out
cs
orl
dec
xchg
outsl
int
jecxz
inc
and
adc
fistpl
mov
jl
pop
pop
add
lods
inc
imul
pop
repnz
leave
mov
dec
jb,pt
cmpsl
imul
imull
loope
and
inc
xor
sub
in
mov
xor
aam
lret
xor
int3
sub
in
xchg
and
lcall
and
xchg
inc
jmp
lds
sub
xor
movsl
push
into
sbb
cld
test
imul
das
js
in
call
sbbl
pop
sub
adc
dec
pop
out
xor
mov
adc
aas
mov
push
mov
mov
fwait
cmpsb
mov
test
jb
ss
mov
es
call
adc
popf
lock
jnp
mov
mov
lds
cltd
cmpsl
pop
mov
inc
xorb
cmp
sbb
in
leave
fstl
inc
push
add
daa
rclb
pop
or
lea
push
sbb
hlt
pusha
sbb
pop
pop
je
cmp
mov
data16
orb
lret
loop
pop
push
inc
dec
cmp
test
scas
cs
icebp
out
mov
pop
pop
insb
or
add
seta
xchg
stos
test
aaa
xor
aam
inc
cli
pop
mov
push
adc
ss
or
je
aad
push
inc
cltd
leave
repz
sti
mov
pop
and
cmp
int
adc
pop
sub
in
call
enter
int3
fcoms
adc
sbb
mov
sbb
pop
ret
stos
icebp
cmp
ljmp
ljmp
inc
sub
iret
jno
test
push
lods
jecxz
shll
jnp
mov
js
inc
sub
aad
fcmovnbe
ffreep
xchg
rcrl
movsb
clc
pop
inc
mov
push
daa
xor
inc
cmp
inc
in
xchg
stos
addr16
mov
inc
loopne
imul
sub
dec
loope
xor
xor
mov
adc
push
or
aam
gs
outsl
or
or
in
mov
scas
aas
sbb
jne
imul
out
jnp
push
xor
test
std
and
mov
das
stos
push
in
hlt
mov
imul
stos
scas
mov
lods
adc
cmpsl
sarl
xchg
push
inc
outsb
fcmovu
xchg
push
and
push
dec
xor
movsl
test
mov
jecxz
nop
scas
out
cmp
fs
and
dec
inc
mov
in
mov
sbbb
das
and
fistps
data16
cwtl
movsl
andb
test
cmp
ja
icebp
sub
mov
xor
rcrl
xor
js
dec
adc
sub
sub
lock
scas
inc
inc
leave
into
inc
in
xchg
lods
cmp
sbb
in
outsb
aas
push
jnp
ss
or
push
popa
andl
or
gs
cmp
insb
mov
pop
add
inc
xchg
push
xor
movsb
jne
daa
addr16
lcall
cltd
cbtw
repnz
add
dec
inc
outsl
push
inc
lahf
add
das
cmp
push
xor
ret
js
add
in
bound
pop
cs
mov
push
mov
pop
jle
fimull
sbb
out
rol
int3
pop
pop
pcmpeqb
xor
lcall
push
cmp
add
or
pop
decl
fistpll
xor
data16
mov
imul
xchg
je
sahf
adc
add
xor
inc
mov
daa
lret
push
add
in
rolb
mov
dec
jnp
loope
cld
int3
ss
push
repnz
inc
inc
and
movsb
stc
subb
jne
aas
rolb
ja
test
mov
push
adc
bound
cmc
fidivrs
cmpsl
and
mov
adc
xor
pop
call
mov
or
fisubrs
mov
mov
pop
pop
or
or
lret
mov
fstps
mov
push
jle
push
sahf
test
mov
inc
lods
sahf
mov
xchg
dec
and
out
xor
rcrb
inc
xchg
pop
ret
jno
daa
fdivs
and
fwait
aas
xor
cmp
daa
sbb
lods
mov
mov
adc
stos
mov
fidivrl
in
arpl
xlat
lret
fucom
inc
outsl
ficomps
es
rorl
pop
xchg
sub
cld
shrb
fbld
and
ljmp
pop
mov
pop
fs
andl
test
push
mov
int
ficoml
pushf
xchg
mov
test
leave
shll
rcrb
jb
sbb
movsl
cmp
and
pop
aaa
sbb
jge
cmc
push
fidivl
pop
add
std
lock
test
cwtl
add
andl
and
es
xor
mov
into
movsl
sete
cmp
mov
ljmp
mov
aam
jns
daa
jmp
cld
jmp
loop
cmp
ja
iret
inc
mov
or
adc
mov
pushf
std
dec
movsl
fdivrl
cmp
mov
and
ljmp
push
add
sub
and
xor
dec
cltd
ja
fmull
pop
dec
lea
mov
sbb
lods
in
scas
pop
fwait
pusha
push
out
push
addr16
shr
fadd
rolb
sub
sbb
sub
les
roll
cwtl
add
xchg
mov
dec
ret
push
rclb
pop
xchg
cltd
jmp
mov
lds
push
push
out
lds
cmp
hlt
xlat
push
xor
cwtl
cmpsl
ds
inc
sbb
sub
or
movsl
cvtps2pi
sar
mov
jg
or
cmp
pop
and
cmp
mov
pushf
dec
pop
mov
jmp
fs
add
inc
mov
push
ss
es
xorl
push
daa
mov
xchg
inc
aad
popa
test
xchg
push
push
idivb
into
cwtl
push
lret
push
arpl
xchg
popf
or
dec
out
daa
fsubp
data16
lret
push
dec
jno
mov
arpl
imul
out
jae
lahf
clc
cmovnp
imul
aad
xchg
adc
pop
xchg
out
jle
loope
mov
ja
jo
push
dec
js
inc
int
pop
add
daa
fs
cmp
lods
jae
aas
cltd
stc
xor
sub
aas
aas
sar
sysret
lods
lret
cmc
out
lcall
jg
inc
dec
mov
mov
dec
fwait
dec
jecxz
jmp
stc
aad
or
mov
cmpsl
pop
push
fistpll
jl
xor
icebp
fmuls
cmpsl
lods
jo
pop
or
outsb
outsl
test
xchg
pop
filds
dec
or
xchg
xor
imul
cs
fiaddl
mov
pop
in
pop
push
push
js
sub
shlb
insl
aas
pop
cmp
dec
fstpl
enter
xlat
adc
cli
pop
sbb
jg
jnp
popf
push
les
shrb
inc
cmpsl
out
sub
stc
jbe
outsl
cltd
lret
cmp
and
inc
fstl
loop
subb
nop
loope
adcb
fcmovbe
movsb
jl
repz
mov
mov
daa
or
in
mov
jno
mov
les
push
pop
call
bound
movl
mov
gs
outsb
sahf
sbb
mov
mov
sti
ljmp
sbb
jmp
scas
adc
jl
and
data16
rorb
out
repnz
orl
or
imul
and
add
jne
out
insb
inc
xchg
movsl
aaa
rclb
xchg
repz
mov
inc
aam
push
mov
push
or
jo
xor
and
mov
fcoms
xlat
dec
insb
out
lcall
mov
inc
lods
fstpl
dec
lret
inc
int3
imul
shlb
imul
aaa
jbe
mov
xchg
fmulp
int
jmp
add
pushf
int
sbbl
sub
lret
dec
add
sub
xor
aam
cs
inc
xchg
imul
xor
mov
inc
test
sub
xchg
mov
mov
mov
or
mov
push
ljmp
mov
ret
scas
scas
cli
sbbl
test
adc
xlat
or
scas
shl
push
lods
cmpl
in
or
aad
pop
or
pop
enter
nop
roll
in
enter
lock
mov
lahf
dec
dec
add
out
shr
jl
xor
fdivr
imulb
jns
dec
xchg
inc
lcall
and
mov
jecxz
pop
dec
xchg
scas
in
pop
pop
inc
pop
lods
jmp
mov
insl
xlat
je
and
cmp
inc
leave
jns
mov
testl
pop
push
mov
push
adc
push
inc
mov
add
or
repz
mov
jno
and
xlat
lcall
outsl
mov
enter
movsl
in
orl
mov
rcr
dec
cs
and
les
mov
dec
and
scas
movsl
xchg
sbb
jae
outsl
out
adc
mov
inc
loopne
je
fbstp
inc
xchg
js
pop
scas
adc
mov
dec
jle
adc
push
cmp
sarb
push
cmc
in
pop
rorl
push
mov
enter
fimuls
jb
push
jb
push
push
push
sub
testb
pop
ss
popa
incb
pop
adc
add
cmpsl
mov
push
adc
inc
mulb
add
cmp
mov
fdivs
inc
and
add
pop
int3
and
sbbb
je
mov
hlt
and
ljmp
add
and
sub
aam
lods
adc
push
xchg
inc
and
xor
movsb
push
and
movsl
mov
aaa
jg
rol
jle
stc
ret
push
pop
jo
nop
sub
inc
sbb
lods
fldl
mov
push
loop
call
and
adc
icebp
int3
and
mov
cmp
lret
les
mov
and
daa
cmp
ret
pop
rorl
loopne
nop
in
xchg
adc
xchg
inc
orl
jp
cmp
fildll
sahf
and
xchg
mov
test
insl
inc
aaa
loopne
mov
mov
fisttpl
xchg
test
addb
das
stos
iret
jmp
test
jnp
ja
test
mov
insb
jno
pop
ret
loop
dec
sub
mov
lret
fwait
or
mov
into
repnz
inc
sarl
sarb
std
add
xlat
add
sbb
jne
mov
push
mov
lahf
xchg
es
sbb
push
push
aas
mov
test
mov
inc
fwait
and
inc
iret
cwtl
imulb
mov
sar
sub
or
aas
push
jge
lock
jae
inc
scas
add
idivl
jo
mov
lcall
mov
dec
out
dec
mov
nop
mov
jb
test
cmpsb
mov
nop
inc
jns
in
lcall
lods
sub
mov
cmpsb
jno
jmp
push
testl
jnp
jecxz
or
and
and
les
adc
loop
test
xor
cmpsl
xchg
push
cs
adc
add
push
or
cmp
into
lret
std
int3
jbe
add
xchg
fnstcw
xchg
lahf
jle
ljmp
push
sti
lock
pop
movsl
sbb
fmul
dec
cmp
xor
lret
cmp
clc
outsb
sbb
sub
enter
jo
pop
mov
ficoml
or
rolb
clc
popa
test
lds
xor
ret
push
jno
or
mov
ret
jle
fwait
sarb
and
ljmp
push
push
jmp
sub
shrl
adc
lock
jge
or
scas
jns
test
mov
pop
ret
cmpsl
scas
xchg
mov
and
scas
lds
in
mov
mov
pusha
rol
jle
pop
stc
psrld
subb
repz
or
das
mov
push
bound
mov
imul
fwait
inc
or
mov
hlt
sarl
xor
lret
aaa
lods
test
daa
test
dec
out
push
sbb
bound
xchg
push
sub
outsb
mov
mov
out
sub
lods
push
inc
or
call
out
pushf
cmpsl
cmp
push
stos
test
dec
jge
push
jl
pop
xchg
bound
and
lods
pop
mov
aas
xchg
and
mov
mov
xlat
mov
sub
sahf
push
inc
add
push
adc
fistl
imul
pop
stc
pop
inc
aad
xor
sub
arpl
int3
mov
pop
movb
push
loop
imul
out
lret
scas
pop
insl
sub
or
push
shll
mulb
bound
xchg
jne
decb
movsl
mov
stc
xchg
int
ret
pop
or
inc
dec
and
mov
icebp
pushf
add
or
stos
cmp
and
fwait
jle
dec
inc
push
test
push
xor
leave
scas
cli
push
or
jg
adc
add
fisubs
and
insb
pushf
inc
jge
or
sbbl
xchg
mov
movl
sbb
jecxz,pn
jns
jno
mov
dec
xchg
out
cld
sbb
inc
jns
push
mov
out
xchg
fdivs
or
xchg
int3
shll
sub
dec
aad
inc
xor
sti
imul
jmp
test
mov
add
add
xor
xor
dec
xor
jg
mov
out
mov
mov
movsb
or
mov
dec
xor
test
andb
lock
and
jge
dec
xchg
dec
out
insb
movsl
pop
stc
mov
icebp
inc
pushf
jnp
mov
xchg
mov
mov
repz
cwtl
popl
dec
enter
scas
mov
adc
push
xor
xlat
pop
push
repz
setae
mov
jg
jmp
add
sahf
jle
mov
ljmp
pop
adc
jp
cltd
xchg
mov
mov
push
xchg
andl
scas
popa
inc
jb
jb
add
and
or
push
stos
cli
xchg
stc
hlt
and
add
xor
js
cmp
xchg
dec
shrb
stc
jg
aam
or
sbb
dec
enter
fmuls
inc
sbb
bound
frstor
andb
push
lret
mov
stos
jnp
call
es
aaa
andl
lock
and
cmc
stos
fisubrs
out
addl
pop
gs
cmp
or
mov
sbb
cwtl
xor
sahf
pop
push
push
scas
mov
push
jge
jge
or
adc
xchg
dec
cwtl
sti
sub
sbb
xchg
mov
sub
push
mov
mov
push
dec
cltd
mov
mov
nop
pop
mov
cmp
stc
mov
sub
mov
push
xor
bound
jmp
call
cmp
inc
nop
test
ja
xchg
fmull
icebp
sbb
fwait
sbbb
sub
loope
sub
fwait
icebp
out
popa
test
in
rclb
stos
jge
sub
fldcw
cmp
xchg
scas
cmp
scas
fldt
jp
pushf
cmp
je
mov
jecxz
mov
xchg
mov
outsl
pavgw
pop
mov
push
in
lcall
adc
cltd
dec
cltd
pusha
in
pop
sbb
jae
cld
jns
popa
sbb
mov
insl
movsl
jle
mov
movl
inc
ja
cmp
scas
fsubp
aad
out
adc
mov
sub
push
dec
mov
shr
push
mov
adc
pop
sub
pusha
fistps
pop
aas
push
lds
imul
icebp
dec
jecxz
jl
outsl
enter
add
or
push
mul
dec
mov
repnz
lock
jne
dec
sbb
pop
aas
mov
jge
test
jge
ja
xor
aas
stos
in
fldpi
add
in
xchg
lods
lds
pusha
mov
in
lret
out
icebp
mov
pop
js
ret
jge
cmp
cwtl
rcll
dec
mov
das
mov
sub
fsubrs
pop
adc
adc
pushf
loopne
inc
xchg
push
mov
xchg
rorb
insb
test
mov
dec
les
cmp
sbbb
jne
add
dec
adc
daa
imul
xchg
inc
cmpsl
or
cli
test
ljmp
or
xchg
clc
mov
test
push
or
adc
repz
cld
cmp
test
test
stc
dec
xor
inc
out
fldl
pop
mov
xchg
fisubs
pop
mov
xchg
pushf
mov
adc
add
mov
out
fstl
adc
or
jg
pop
shlb
ljmp
out
sub
adc
xchg
jb
add
dec
add
jmp
out
adcl
das
lret
js
sub
jp
out
shll
xchg
rcl
or
lcall
or
stos
sbb
je
mov
jg
loopne
cmp
xchg
fiadds
inc
cmc
icebp
dec
cmp
jp
xchg
je
fwait
cltd
dec
push
dec
pop
sub
test
or
and
in
push
hlt
cmp
inc
int3
push
add
inc
les
and
data16
bound
dec
sbb
fadds
icebp
push
insl
lret
aas
cmp
cmp
dec
adc
fstl
pop
push
ja
cmp
aad
inc
stos
add
call
add
mov
lock
inc
or
imul
stos
jno
ret
scas
push
rcr
shlb
mov
sub
sbb
fildll
mov
mov
js
mov
ljmp
std
dec
add
sbbl
clc
push
mov
pop
push
les
enter
jecxz
sub
or
fldenv
sub
shr
fcomps
call
fidivrs
dec
fadds
in
es
aaa
mov
scas
dec
cld
stos
mov
nop
imul
jle
push
pop
and
push
sbbb
aas
mov
push
pusha
paddusb
mov
cmpsb
mov
ljmp
sbb
mov
notb
dec
ret
sahf
or
cmpsb
mov
inc
idivl
adc
or
xchg
fsubs
cmpsb
int
es
dec
and
jno
fldenv
mov
adc
sbb
ds
jb
add
pop
in
mov
and
int
sbb
xchg
mov
push
iret
push
aam
loope
dec
xchg
pop
jns
add
or
popf
push
ss
sbb
insl
push
je
insb
lahf
pop
ljmp
and
push
imul
sbb
repnz
adc
pop
xor
jns
jbe
or
test
neg
repnz
inc
fisubrl
ljmp
inc
repnz
lods
pop
mov
cwtl
push
in
and
sbb
push
mov
jmp
inc
or
fsubrs
cmpsb
rolb
lret
outsb
fiadds
clc
aam
xchg
inc
test
mov
xchg
and
les
mov
mov
sti
sub
pop
aas
sub
jp
and
aam
loopne
mov
loopne
lods
mov
int
repnz
pushf
xchg
mov
lea
jb
pop
add
jl
mov
xor
hlt
fwait
mov
mov
pop
movsb
test
push
mov
and
out
or
mov
js
clc
inc
inc
mov
bound
nop
xlat
sbbb
das
scas
idiv
sbb
lret
outsl
pop
mov
push
add
and
xor
cmpsl
mov
aas
test
movsl
gs
jg
or
test
add
pop
pop
pop
cmp
push
dec
add
clc
mov
test
and
xor
mov
xor
popf
jge
sub
in
dec
fnstenvs
xchg
mov
scas
les
pop
es
mov
xchg
inc
int
scas
mov
mov
cmp
sub
movsl
ljmp
scas
rorb
lds
sbb
sub
pop
push
mov
and
sarl
test
xlat
repz
pop
and
cmpsb
enter
insb
movsb
add
mov
sarl
cwtl
or
xchg
fstl
fnstcw
or
outsl
dec
inc
outsb
shl
repnz
cmp
dec
out
pminub
mov
sarb
jno
repz
lret
sti
cmp
mov
int3
xchg
ret
lock
imul
push
lret
movsb
movsl
out
cwtl
and
inc
mov
lods
aad
ret
dec
iret
test
sbb
daa
fidivrs
lds
pop
gs
testb
push
js
xor
cli
daa
bound
in
jp
loopne
xchg
test
cmp
sbb
bound
test
mov
pop
aaa
mov
pop
and
mov
outsb
pop
gs
das
ds
push
das
cmc
inc
call
sti
fisubrs
fstps
mov
xchg
aas
loopne
pop
inc
imul
test
lds
cmp
cld
push
push
add
sbb
xchg
push
xchg
nop
imulb
jns
jg
push
or
and
adc
mov
push
xchg
repnz
mov
pop
dec
out
outsl
sbb
movsb
aaa
lds
psrad
inc
fidivs
xchg
arpl
adc
out
out
cmp
mov
into
sbb
inc
mov
mov
aaa
and
test
loopne
cld
xor
fisubs
in
sub
xchg
sub
jne
mov
in
cmp
mov
mov
add
leave
into
in
sbb
xlat
sbb
pusha
xchg
mov
jmp
xor
fdivs
subb
ja
pop
xor
add
fnsave
or
cld
jmp
fwait
clc
addr16
out
cmp
cmc
sti
mov
xor
and
add
stc
imul
adc
dec
fwait
push
pushl
and
xchg
sub
inc
push
dec
repnz
or
ja
or
add
sub
cmp
ss
inc
test
jns
add
or
cmc
dec
das
xor
jg
or
xchg
adc
or
fnsave
insb
lds
mov
mov
xchg
jns
sbb
sbb
shlb
and
stos
test
and
imul
lea
addl
cmp
adc
cmpsb
push
mulb
jae
or
sbb
sub
pop
std
xchg
mov
mov
loope
inc
data16
shl
daa
jmp
and
pop
loopne
pop
xchg
sbb
insb
pushf
dec
pop
push
sub
fcmovne
dec
inc
add
in
mov
hlt
decb
jg
xchg
push
mov
nop
dec
mov
sub
in
jg
aas
mov
les
pop
je
add
and
subb
ljmp
out
inc
xorl
jmp
jg
daa
out
mov
arpl
jmp
xchg
and
test
ljmp
pop
andb
ljmp
std
pop
mov
dec
cmp
into
shll
xorl
mov
dec
fnstsw
xchg
xchg
inc
movsb
test
cmpsl
shr
jns
mov
loop
pop
cmp
mov
jno
push
lahf
xor
lcall
scas
rcrl
pop
xchg
inc
ljmp
adc
jnp
xor
inc
cmp
xlat
pop
mov
push
xor
pop
xlat
sbb
fwait
roll
pop
repz
ja
mov
das
lds
repz
movb
pop
mov
leave
cmp
insb
shr
push
outsl
in
xor
loop
inc
bound
adc
cwtl
mov
cltd
sub
jae
or
adc
sbb
mov
cmpb
mov
jg
jno
pusha
les
das
fcoms
lds
popf
rcrb
pop
loopne
test
or
sub
les
mov
push
xchg
out
pop
mov
mov
adc
mov
in
lods
mov
test
mov
add
ret
arpl
jmp
mov
and
jg
and
leave
jp
xchg
cmp
js
test
ss
mov
mov
inc
popf
pop
loope
sbb
cmp
push
sub
jne
popa
pop
jp
stos
addr16
and
xlat
leave
int
push
adc
and
push
pop
adc
mov
data16
mov
sbb
stos
sbb
pop
jmp
test
xor
cs
push
movsl
cmp
aam
jno
push
inc
cmp
pause
ss
fsubs
mov
popa
xor
movsb
mov
mov
sahf
xchg
xor
std
faddl
cmpsb
subb
les
incb
xor
xchg
or
cs
ret
div
pop
dec
sub
mov
repz
mov
cltd
add
fisubs
and
cmp
cmp
sti
js
and
push
xchg
inc
xor
mov
sub
sub
enter
lret
popf
pusha
adc
outsb
inc
push
xchg
outsb
push
dec
jae
ljmp
push
sub
sti
repnz
add
dec
cmpsb
cwtl
push
xor
sub
std
repz
mov
pop
ljmp
mov
push
int3
sbb
mov
pop
dec
out
leave
inc
or
test
and
movsl
xchg
icebp
add
or
cmc
xor
mov
pop
xchg
push
int
xlat
sub
add
add
add
adc
push
rcrl
push
pop
push
add
js
rol
adc
int
jp
mov
ficomps
je
mov
lret
std
inc
sbb
hlt
stos
pop
jp
cmp
ja
cmc
and
mov
fnstenv
adc
cmp
push
aaa
out
xor
mov
sti
sbb
outsl
sub
mov
add
pop
popf
test
and
dec
in
xor
jle
mov
stos
xchg
iret
lea
je
aam
test
sub
divb
pop
fcoml
xor
int3
pop
jecxz
mov
sbb
lds
push
push
mov
bound
add
mov
mov
hlt
ret
add
insl
cmpsb
stos
and
rcll
aaa
rorb
loopne
pop
dec
inc
xor
in
loope
mov
lret
inc
inc
lods
xchg
mov
mov
test
sub
popf
test
jne
push
hlt
add
adc
or
pop
loop
cmpsl
xchg
cmp
inc
pushf
push
add
or
xor
aas
into
xor
cli
ja
mov
xor
push
push
mov
sbb
cmp
mov
mov
inc
xor
adc
jmp
sbb
xor
in
out
xorb
mov
xor
imul
clc
pop
cli
adc
lock
mov
in
test
add
fidivrs
insl
adc
iret
loopne
popf
pop
enter
jecxz
mov
push
loopne
in
ss
ljmp
loopne
repnz
jb
cld
mov
andb
or
xchg
xchg
or
jb
pop
cmp
push
push
mov
push
sub
pop
push
or
mov
sub
add
inc
xchg
inc
sbb
xchg
notb
test
ret
cld
out
add
sub
push
pop
add
sti
jmp
and
add
push
mov
mov
shlb
inc
mov
cmpsb
subl
lods
and
push
push
dec
data16
iret
lret
mov
jmp
sub
adc
lahf
jp
or
xor
nop
dec
sbb
clc
mov
xorl
cli
repnz
cmc
test
pop
lret
add
les
jmp
adc
jge
inc
mulb
mov
jns
and
pop
xchg
imul
fs
xor
cmp
popf
adc
dec
ljmp
xor
in
loope
xchg
xor
repnz
insl
dec
mov
aaa
xchg
daa
into
mov
adc
sub
xor
rol
sbbl
mov
add
jns
xchg
test
dec
pop
xor
pop
or
sti
inc
cld
mov
inc
test
jb
mov
cmpsl
into
push
xchg
ss
int
jecxz
roll
jae
mov
mov
out
and
push
push
push
jbe
cmpsl
xchg
stos
jmp
out
inc
sbb
add
mov
fs
rcll
das
lahf
int3
inc
adc
test
add
or
xchg
xor
mov
mov
cmp
pop
mov
out
xor
cs
mov
mov
adcl
dec
in
pop
mov
and
cmp
xchg
and
add
push
xlat
lea
lcall
shr
shll
fsubrs
push
mov
pop
jnp
xchg
jmp
movsb
das
and
icebp
push
jnp
test
bound
loope
sub
or
dec
lret
stos
pop
in
std
and
push
xor
adc
leave
fwait
iret
js
xlat
shl
mov
add
or
pop
jg
cmp
test
loope
mov
mov
imul
rol
fisubrl
mov
mov
movsb
adc
mov
cmp
mov
cmpsl
ficomps
mov
or
mov
pop
cltd
jmp
sub
outsb
push
lcall
cmpsl
dec
icebp
adc
daa
repnz
mov
xor
sub
sub
pop
mov
xor
icebp
flds
repz
movsb
xor
icebp
call
sbb
loop
mov
mov
inc
nop
sub
or
std
inc
les
cmpsl
push
add
xchg
popa
loope
pop
aaa
sub
daa
rol
pop
push
sbb
scas
out
mov
fsubrl
sbb
xchg
pop
pop
pop
ret
push
sub
mov
leave
in
jae
pop
jae
jae
lods
adc
fldt
jmp
in
mov
jle
or
repnz
ljmp
pushf
out
sub
sbb
lock
jne
jae
push
repz
repnz
mov
sbb
mov
sub
adc
cmp
jne
scas
adcb
idiv
repnz
or
and
inc
adc
cmp
leave
call
push
nop
push
or
mov
gs
mov
nop
loop
push
ljmp
push
add
stc
out
pop
mov
iret
mov
shlb
or
jne
xor
cli
cli
sub
mov
mov
jno
pushf
pop
stos
fs
mov
add
scas
cmpb
xor
faddl
xor
and
cmovp
jns
ret
push
pop
jge
pop
les
jo
cwtl
cmpsb
or
mov
mov
jmp
cs
cmpb
push
cmp
mov
cmp
mov
adc
shrl
das
xchg
xchg
push
or
lea
cmp
icebp
out
jno
cmp
mov
jmp
fs
inc
int
je
loop
xchg
stc
add
icebp
sbb
xchg
mov
mov
jp
mov
dec
movsl
orb
fisttpll
sbb
in
in
int
sbb
adc
add
jl
pop
push
ja
call
push
daa
xlat
push
pop
pop
sbb
mov
enter
add
mov
pop
leave
sbb
lods
negb
xchg
sbb
in
sub
es
xor
scas
mov
loopne
add
addb
adc
es
fldl
ret
push
rcrb
mov
insl
pushf
jo
orl
inc
shll
movsb
push
xor
push
and
les
js
pushf
mov
mov
fbld
inc
repz
ja
mov
fisttpl
mov
sahf
push
outsl
jecxz
aas
xorb
movsb
push
pop
mov
in
push
les
add
fcoms
ret
inc
loopne
push
repz
and
xchg
dec
out
adc
inc
xor
xchg
fldt
push
dec
sahf
fnsave
mov
mov
daa
shrl
inc
cld
dec
pop
nop
lods
mov
in
sbb
fmull
or
mov
rcll
jne
jno
sub
pop
jp
push
mov
call
hlt
out
mov
das
cmp
and
mov
loop
cld
js
jbe
cmpsl
inc
arpl
dec
arpl
out
xor
push
cmp
in
daa
sub
popf
xor
mov
imul
out
scas
xchg
loop
fadd
aad
sub
hlt
test
pop
es
cmp
scas
or
popa
mov
mov
ljmp
fs
pop
ficompl
sbbl
movsb
mul
sub
jge
ret
stos
pop
xchg
push
xchg
lock
dec
jns
and
pop
xchg
jl
sbb
icebp
xlat
sub
sub
push
pop
fmull
push
sbb
pop
jb
int
lods
pop
insb
aad
adc
loop
fs
fwait
mov
xchg
or
sub
movsl
lds
inc
hlt
dec
les
lret
test
pop
stos
cmc
jl
loopne
xor
out
or
insb
ljmp
imul
clc
inc
adcl
dec
jle
mov
icebp
out
sub
std
jae
xor
inc
adc
mov
mov
insl
mov
cmc
inc
dec
cmp
mov
mov
int
pop
or
xor
inc
add
fistpl
out
repz
dec
inc
call
xor
test
inc
xor
cltd
daa
xchg
cmp
mov
adc
or
add
push
xchg
adc
clc
mov
mov
cli
arpl
dec
mov
jmp
decl
mov
andl
xlat
jmp
fstpt
pushf
dec
mov
jmp
ds
loopne
xlat
movsb
xorl
addr16
leave
jbe,pt
outsl
mov
daa
divl
mov
in
inc
mov
mov
adc
scas
scas
mov
int3
fwait
mov
cmp
mov
dec
aam
xchg
adc
xor
pop
mov
mov
push
mov
xchg
aaa
push
add
js
dec
xor
call
cli
fs
les
xchg
ffree
inc
xchg
mov
enter
loope
lock
sub
in
rclb
lock
dec
stos
movsl
rcrl
mov
int3
fwait
test
in
inc
insl
pop
sbb
jo
xor
jecxz
dec
cmp
imul
jecxz
mov
outsb
fmuls
dec
lods
in
les
inc
push
lock
enter
fucom
popa
mov
je
mov
adc
lods
les
sub
mov
lds
scas
lret
mov
xchg
fcmovbe
rcll
mov
sub
xor
mov
test
in
jo
repnz
inc
dec
faddl
addb
xlat
repz
shrb
lods
mov
mov
dec
jo
fwait
std
std
rcll
mull
add
in
push
xlat
stc
into
cltd
dec
int3
and
mov
sahf
adc
movsl
loop
lcall
jae
leave
cli
xchg
lret
xor
aad
aaa
cmp
inc
sub
aad
std
clc
outsb
cs
mov
int3
cmc
shll
mov
fisubs
add
cs
scas
pop
pop
ljmp
xchg
test
cmp
xchg
adc
out
mov
loop
aad
mov
lock
sahf
mov
mov
pusha
stos
addl
and
push
push
lcall
loope
into
inc
mov
mov
cmp
decb
hlt
mov
insb
test
or
aaa
outsl
pop
enter
add
aam
out
or
scas
idivb
xor
push
fnstsw
xchg
xor
jo
enter
je
xor
push
add
cmc
or
mov
xchg
jge
mov
mov
add
push
ja
out
aad
push
add
mov
jb
inc
std
movsb
mov
mov
loopne
cmp
into
pop
push
sarb
push
test
mov
mov
repnz
pop
mov
lea
clc
sub
jle
xor
mov
imul
ja
test
int3
sti
sbb
adcl
test
mov
outsb
in
mov
scas
mov
insl
sbb
mov
nop
xchg
pushf
mov
cwtl
lret
cld
sbb
lret
add
test
sub
clc
dec
pushf
sbb
sub
inc
test
jle
ror
jnp
adc
mov
rcl
jle,pn
popl
lods
sbb
icebp
jp
push
test
fcmovu
imul
dec
mov
mov
int3
addr16
sbb
cmp
inc
xor
fs
out
dec
lretw
and
adc
xor
sahf
aas
imul
lret
adc
add
test
add
inc
sbb
shr
sti
int
dec
sbb
sub
rorb
jbe,pt
push
add
lret
add
mov
cmp
ds
push
sbb
loopne,pn
orl
and
jl
push
or
popf
iret
add
lds
inc
jno
cmp
sub
jle
repnz
sbb
push
stc
mov
pop
movsl
stos
cli
xchg
dec
std
roll
out
or
adc
adc
sub
push
fidivl
mov
in
pop
adc
insl
add
xchg
out
xorl
jbe
fnstenv
xchg
test
adc
dec
testb
xchg
fdiv
sub
mov
xchg
mov
cmp
fisubl
roll
jge
xchg
cwtl
sub
mov
fwait
jno
dec
loop
pop
jns
ficoms
xchg
jae
shll
adc
movl
in
test
xchg
aas
test
test
sbb
and
cmp
out
mov
repnz
in
je
ljmp
or
jns
xchg
out
rorb
repnz
and
or
sahf
ljmp
loope
stc
stos
pop
xor
mov
xchg
out
xor
add
pop
add
aam
dec
jo
xchg
mov
lret
jg
lret
decl
mov
push
xchg
movsl
push
test
jmp
sub
data16
out
lods
scas
xor
repz
sub
mov
cmpsl
iret
ljmp
icebp
js
divl
pop
lahf
loopne
enter
lods
jl
add
pop
test
loop
out
sbb
fwait
pop
sub
add
enter
xor
inc
fwait
psubusb
movsb
jbe
mov
call
rolb
mov
enter
bound
icebp
mov
sbb
movsl
popa
div
pop
and
insl
xor
popa
mov
dec
stc
pop
test
jle
inc
mov
cltd
sti
je
pop
add
std
inc
rolb
or
imul
ja
mov
cmp
and
test
stc
movl
sbb
pop
or
mov
inc
divb
adc
add
mov
push
pop
and
push
cmp
pop
lods
jge
fwait
jg
jnp
in
insl
jp
xlat
cmp
sbb
lods
leave
xchg
xor
test
add
mov
outsb
xor
mov
aad
pusha
enter
gs
fimuls
imul
hlt
fbstp
push
mov
dec
xchg
aad
mov
push
dec
jae
lods
mov
cs
scas
mov
mov
in
enter
lock
clc
test
cmc
mov
movsl
out
loope
push
xchg
loop
lret
xchg
cmc
mov
and
fnstcw
aam
push
add
addr16
sahf
call
int
mov
fcmovnu
fs
push
fs
pop
push
jg
or
pusha
and
or
das
jge
ret
lods
in
xlat
es
aaa
test
gs
pop
je
insb
push
mov
xchg
ds
jno
mov
mov
cmpl
ss
lock
out
shlb
cmc
pop
lcall
or
mov
xorl
jne
xchg
mov
scas
pop
xchg
test
pop
lock
mov
shl
push
and
icebp
lret
add
mov
lea
adc
lcall
pop
cmp
cmp
daa
std
rcrl
fidivrs
push
or
scas
clc
jo
adc
sbb
adc
scas
jne
cmp
jmp
jecxz
push
add
mov
loope
pusha
ljmp
roll
out
and
test
lret
lds
rorb
add
mov
sar
pusha
nop
adc
pop
cs
cmp
lods
cmpsl
shlb
js
aaa
fwait
and
push
out
and
shr
outsl
fwait
mov
enter
pop
out
push
inc
mov
adc
andb
cltd
je
shlb
pop
sbb
sbb
jae
fcom
icebp
cmc
xchg
sbb
jp
jns
inc
jmp
mov
jg
dec
and
adcl
pop
mov
ret
pushaw
ja
pusha
and
sahf
push
mov
std
or
jg
lods
push
xchg
pop
jns
pop
stc
into
ret
push
sbb
and
mov
push
ds
pop
insb
add
mov
inc
pop
jg
jo
xchg
in
loop
std
sahf
fdivl
setbe
sub
test
push
ret
or
orb
sub
xchg
xchg
or
icebp
jmp
and
out
stos
arpl
cld
cld
push
in
ret
xor
int
call
pop
mov
mov
adc
iret
fcmovnb
xor
imul
and
dec
leavew
clc
adc
jae
mov
and
or
lret
mov
pop
jge,pn
mov
cmp
or
fucom
jmp
stc
repz
pop
adc
xchg
stos
push
and
lahf
lods
jb
dec
sbb
jno
lret
cld
lret
ret
lcall
or
adc
loope
xlat
adc
fsubrl
ss
cmp
mov
mov
inc
cmp
test
inc
xlat
xchg
out
fs
xchg
cmp
movsl
and
cmpsb
add
out
shll
dec
add
push
stc
add
aam
or
or
jns
cli
sub
je
cmp
mov
notb
xor
insl
mov
add
stos
test
inc
push
outsb
in
and
addr16
out
xchg
lds
bound
clc
dec
mov
sbb
sahf
sbb
push
fisttpll
loop
add
jne
ds
imul
push
sbb
mov
mov
jns
push
aam
mov
sbbl
push
jo
cmp
mov
jnp
mov
dec
xor
push
xchg
ret
jo
rclb
mov
push
cmp
test
inc
mov
mov
mov
mov
push
mov
mov
loop
jmp
in
into
ficompl
mov
sub
and
jno
insb
mov
lret
xchg
cmp
adc
add
cwtl
or
adc
or
das
in
pop
jo
popf
sbb
jecxz
xor
sbb
popa
jp
inc
in
daa
mov
out
xchg
jl
mov
xchg
mov
js
mov
push
sub
xor
std
addr16
mov
pop
sbb
push
jle
and
movsb
loop
fdivrs
sahf
pop
cmpsb
mov
clc
push
add
imul
add
jne
arpl
dec
pop
pop
enter
pop
stos
pushf
test
jge
mov
movsb
incl
fcompl
sub
or
push
sbb
dec
xchg
mov
jmp
jp
mov
fiadds
mov
dec
sub
and
xchg
xchg
lods
jmp
hlt
sbb
aam
fwait
es
jbe
mov
mov
mov
shr
mov
push
push
cld
jno
mov
jle
lret
add
loop
cmp
int3
xchg
dec
dec
aad
push
fs
xor
xchg
adc
fadds
out
xchg
jle
popl
or
push
push
repz
lahf
pop
test
add
push
sub
enter
push
mov
cmpsb
jl
dec
fbstp
push
out
mov
insl
sahf
ret
xlat
mov
dec
add
icebp
outsb
inc
mov
bound
sahf
mov
jbe
clc
jg
push
movsb
sbb
icebp
sbb
stc
pop
stos
mov
loopne
mov
aaa
and
bound
mov
pop
sbb
pop
fnstsw
lods
xchg
dec
out
out
std
pop
rcrb
and
sub
dec
push
mov
ret
jmp
test
es
cs
loop
cmp
add
sub
pushf
jmp
xor
sub
xchg
iret
push
xchg
push
dec
sbbb
xor
inc
jne
jno
push
les
pop
mov
fldcw
sub
in
inc
mov
mov
add
push
dec
int
loopne
fs
int3
push
push
ljmp
nop
shrl
gs
arpl
loop
int3
cmpb
pusha
sti
dec
or
xor
ds
sub
leave
or
scas
push
push
and
jb
cmp
daa
mov
xchg
jo
fidivrs
aam
pop
inc
xlat
daa
push
addb
sbb
rolb
inc
jo
nop
fdivl
fmuls
cli
push
outsb
pop
xchg
jmp
sub
stos
jp
clc
mov
inc
push
mov
pusha
or
push
adc
push
lret
dec
mov
jno
lock
pop
rcl
fstps
push
cmp
aam
cmp
aas
scas
fcomi
in
xchg
push
imul
mov
dec
icebp
std
loop
pop
jmp
push
movsl
arpl
es
rcrb
lds
push
mov
repz
leave
mov
imul
mov
sbb
and
ljmp
les
fisubl
cmp
rcll
xor
dec
mov
push
or
popa
dec
cli
mov
bound
out
insl
xchg
inc
sbb
xchg
jmp
ljmp
rolb
jns
cmp
jo
mov
test
add
adc
push
inc
pop
pusha
pop
push
mov
hlt
xchg
jb
xchg
in
mov
pushf
mov
xchg
sub
loope
pop
cmp
dec
push
and
and
sub
mov
scas
call
in
dec
inc
andb
cwtl
cmp
fsubp
or
push
int3
leave
idivl
or
inc
add
add
jmp
faddl
outsl
sub
lcall
xchg
or
inc
je
sbb
mov
sub
dec
jb
push
jne
stos
jp
leave
pop
mov
and
mov
add
jae
mov
pop
mov
adc
sahf
negl
movsl
cs
pop
push
dec
mov
sbb
sbb
sub
xorl
lods
push
iret
shlb
or
xor
and
mov
lock
test
xchg
repnz
sub
jl
inc
mov
cs
dec
inc
cmp
sti
sbb
mov
mov
inc
pop
lds
cltd
bnd
jbe
mov
mov
sub
cmpsl
or
xchg
es
inc
dec
sub
fs
movsb
shrl
jmp
dec
ja
xor
mov
mov
hlt
mov
sub
ficomps
push
dec
pop
rcll
pop
mov
dec
lahf
jg
scas
faddl
push
mov
jecxz
dec
xchg
mov
jle
xchg
mov
test
fadd
push
mov
inc
pop
adc
movsb
das
cwtl
mov
xor
les
jg
add
cs
push
fidivs
lods
add
or
push
std
mov
mov
dec
fisttpl
cwtl
loop
icebp
mov
imul
pop
add
mov
in
add
jb
test
mov
push
lea
iret
lock
lods
lods
pop
and
pusha
sahf
test
xchg
loopne
add
dec
xchg
lahf
loopne
cmpsb
mov
ret
pop
fmul
movsb
cmp
sti
fwait
out
and
or
sbb
pop
mov
pop
std
xchg
aad
inc
pop
add
jbe
addl
xor
cli
stc
pop
push
rcrl
and
adc
inc
bound
mov
push
ret
lahf
push
ljmp
push
dec
cmp
cld
dec
pop
shl
xor
out
call
sbb
jmp
out
fidivl
das
outsb
push
pop
and
insl
loop
fistps
mov
rcrb
mov
outsl
fcoms
rorb
sub
in
xchg
cmp
call
pop
icebp
xor
adc
lcall
pushf
xchg
sbb
in
insb
sub
cli
loopne
jo
mov
daa
mov
or
mov
shll
inc
mov
sub
filds
add
cmp
adc
sub
pop
cmp
cld
daa
mov
inc
out
push
repz
test
sub
insl
lret
mov
jl
sub
push
sub
mov
or
pop
sahf
push
mov
cmp
decb
repnz
inc
cltd
stos
inc
push
sbb
jb
and
adc
sbb
popa
mov
das
lahf
or
ss
fxch
repnz
jns
sbb
and
inc
cld
or
mov
lods
dec
push
xor
pop
aas
nop
sbb
xorl
push
stos
lret
cmp
dec
mov
or
out
fstpt
pop
mov
inc
shrl
or
jecxz
movsb
in
rcrb
xchg
andb
scas
test
popa
fnsave
fsubs
sahf
inc
cmc
mov
mov
xchg
sbb
mov
cmp
xor
icebp
pushl
sub
xchg
out
call
arpl
pusha
sub
cmp
push
js
fwait
inc
xor
mov
add
add
and
icebp
and
outsl
aas
pop
mov
or
sbb
into
mov
mov
daa
cmp
nop
loop
daa
psubb
pop
jno
add
xchg
rcll
push
rorb
jb
int3
push
xor
or
clc
iret
or
or
xchg
mov
xlat
mov
jl
cli
fildll
mov
js
imul
cltd
or
inc
cmp
ja
fldenv
mov
sub
push
jbe
cmc
xchg
mov
sbb
pop
cmp
rorb
bound
in
cmp
sbb
push
xorl
push
fmuls
std
dec
jae
stos
cltd
or
cmovle
sbb
pop
js
add
cmp
aad
mov
test
push
mov
add
movsb
stos
outsb
add
add
subb
fs
stos
lret
shll
or
jp
cmp
inc
pop
push
dec
sub
fmulp
call
adc
cmpsl
xchg
adc
push
pop
xor
fs
xor
or
scas
ljmp
xor
or
gs
lods
xchg
addr16
cmp
aad
ret
test
xor
adc
push
mov
sahf
pop
pushf
dec
rcr
movsb
test
adc
inc
aad
lds
xor
jl
data16
aaa
or
xchg
inc
xchg
sub
repz
jge
cmc
mov
push
mov
out
sbb
fmuls
fidivrs
es
push
xor
repz
push
stos
adc
dec
enter
int3
xchg
movsbl
dec
push
pop
pop
mov
ss
lahf
inc
sahf
push
mov
dec
xchg
jns
movlps
stos
adc
stos
mov
call
and
cmp
mov
mov
or
xor
xchg
jb
out
fsubrs
cld
stos
sub
int3
stc
je
xchg
lea
sbb
sbb
mov
or
xor
ficompl
jno
push
dec
call
js
sbb
psraw
popf
push
push
mov
loop
enter
pusha
das
mov
push
xchg
fwait
loope
pop
inc
mov
icebp
icebp
add
nop
mov
xchg
mov
xchg
and
lret
gs
cmp
push
mov
pop
fimuls
dec
mov
push
test
fisubrl
clc
add
imul
jge
pop
les
stc
pop
inc
out
sub
push
fldl
jne,pt
in
cmpsl
mov
les
mov
movsb
sbb
jmp
dec
enter
mov
pop
pop
mov
sbbb
repz
cmp
repz
or
movsl
outsb
pop
add
lds
mov
jmp
in
sbb
jns
cmp
in
orl
push
stos
jb
cmp
push
dec
xor
or
into
subb
fsubr
call
aas
out
inc
movsl
divb
out
icebp
jle
setg
ret
cmpsb
fsubrs
outsl
les
and
loop
fs
scas
insl
test
mov
and
test
gs
cli
inc
push
adc
imul
pop
xchg
sub
xchg
in
and
add
call
sub
pop
daa
mov
lock
scas
dec
addb
outsb
xorb
daa
jnp
loopne
push
subb
loope
cs
enter
ret
popf
inc
inc
sub
loopne
and
push
bound
addr16
or
in
sub
out
cltd
lds
lret
xchg
shlb
cmc
mov
sbb
inc
stc
js
sbb
add
cmp
pusha
push
xchg
pop
icebp
mov
push
int
xor
mov
pop
sbb
fsts
fidivl
ljmp
dec
inc
in
test
fisttpl
and
mov
xchg
roll
adc
cmp
or
movsb
push
mov
push
xor
mov
jle
loop
or
outsl
scas
mov
mov
sbb
popa
jae
shll
addr16
cmp
mulb
call
or
push
loop
sbb
ret
cmp
in
push
push
popf
push
iret
inc
xchg
inc
or
movsl
jge
add
fnclex
data16
mov
lock
mov
add
pop
mov
mov
insl
cld
sbb
sub
movsb
dec
loop
fcomps
shlb
mov
mov
mov
ljmp
jnp
fimull
push
repnz
xchg
jae
fdivs
and
mov
cmp
xchg
xor
mov
mov
or
inc
cmp
mov
mov
push
aad
les
fiaddl
lahf
inc
icebp
jnp
js
xchg
jno
push
int3
and
inc
mov
mov
stc
std
mov
adc
sbbb
xor
dec
xlat
outsl
outsl
int3
sub
jne
dec
push
cmpsl
or
or
mov
jg
lahf
push
inc
testl
pop
mov
jbe
mov
das
cmp
cli
icebp
dec
iret
icebp
and
stc
xchg
sti
adc
push
and
not
lea
ret
xchg
mov
aas
inc
out
xor
dec
imul
int3
aad
cmp
xor
addr16
xchg
test
adc
lock
and
ret
pop
mov
mov
js
inc
cmc
or
gs
bound
sarb
push
sub
xchg
scas
shl
push
decl
mov
adc
das
lcall
test
das
call
adc
lods
xor
icebp
mov
hlt
xor
dec
xchg
stos
shrb
dec
lcall
fmull
test
mov
dec
int
xchg
mov
jnp
cltd
jl
roll
adc
ret
out
mov
scas
inc
icebp
pop
lods
cmp
test
repz
xchg
pusha
adc
cs
adc
jp
test
scas
and
sub
jo
jmp
mov
jns
pop
das
xor
aad
inc
imul
and
test
cmp
add
push
std
mov
jmp
sub
xchg
out
sbbl
stos
in
stc
or
dec
cmp
dec
xchg
mov
inc
push
xor
push
dec
mov
out
lods
lret
shl
mov
add
adc
add
jmp
cmp
scas
dec
push
and
xchg
gs
sbbl
jbe
mov
outsl
inc
push
inc
or
sub
test
sub
inc
push
jl
stos
push
pop
nop
pop
xchg
test
daa
xchg
push
jg
sub
push
xor
cmp
add
lds
lods
push
push
int3
xchg
sbb
xchg
cmpsb
add
in
es
dec
aas
pusha
lret
adc
mov
ja
mov
arpl
cmp
fmulp
xacquire
je
idiv
or
cmp
insb
sub
mov
jge
mov
push
pop
jge
xchg
cli
out
lret
and
mov
or
or
sbb
mov
std
add
sahf
fnstenv
sti
or
lret
fists
mov
pusha
push
adc
or
mov
clc
stc
movsb
sarb
hlt
dec
mov
cmc
or
incl
xchg
fcoms
cmp
and
add
inc
adc
mov
mov
js
mov
scas
or
lret
lret
or
xchg
mov
jno
mov
sbb
inc
ljmp
dec
js
xor
lds
bound
pop
mov
repz
gs
mov
or
out
pusha
push
adcl
mov
aaa
ja
jae
mov
pop
inc
jo
clc
in
outsl
sbb
ja
jae
popa
fcoms
dec
mov
sub
movsl
cmp
outsb
fidivl
dec
lret
scas
xchg
or
rclb
scas
lcall
dec
mov
adc
and
jg
jmp
sbb
mov
mov
mov
jbe
shl
testb
cmpsl
fadds
or
sub
add
stos
fnsave
jo
mov
imul
repz
popw
jne
add
sbb
inc
loop
popw
sarl
lahf
cmpsb
xorl
outsb
jp
dec
sub
cmpsl
pushl
shll
push
or
or
mov
inc
cld
mov
js
jl
cmc
push
and
fs
inc
push
cmpsl
mov
sub
cmpl
in
scas
xor
xor
dec
inc
fdivrp
mov
add
aas
xchg
dec
cmpsb
mov
sub
mov
addr16
movsl
jl
imul
xchg
sarl
mov
inc
push
adc
scas
xor
sbb
dec
repnz
out
pop
loopne
ret
push
faddl
inc
mov
mov
pop
loop
jmp
mov
pop
add
in
dec
in
andl
inc
lret
sub
jle
mov
inc
bound
or
push
fs
cmpsb
or
loope
fistpl
sub
dec
and
xor
pusha
push
adcb
push
scas
mov
dec
push
mov
push
js
fdivrl
cmp
sbb
inc
fimull
popa
fmuls
shlb
je
push
jno
xlat
js
mov
test
gs
mov
push
rolb
in
fbstp
add
ret
inc
loop
sahf
jmp
iret
ret
cmp
cmp
sahf
mov
pusha
sub
and
scas
test
sahf
adc
jp
cmpsl
inc
ljmp
pop
pop
test
cmp
jnp
imul
mov
adc
lods
movsb
jle
sbb
movsl
bnd
dec
std
addr16
push
push
xor
fcoms
pop
cld
mov
imul
fstpt
fsubl
into
cmp
jg
imul
dec
popa
iret
mov
loopne
sub
mov
and
adc
sub
imul
push
jne
lods
jg
stc
stos
cmp
mov
cmove
pop
xor
out
cmp
lea
cs
fiadds
popf
aam
dec
pop
mov
test
push
mov
stc
ret
insl
repz
add
adc
lcall
xor
insl
out
stos
idivl
mov
fldt
stos
pop
ja
jae
push
cli
push
jle
pop
addb
loop
scas
pop
scas
and
lea
mov
and
jl
or
into
lds
out
mov
pop
inc
mov
mov
xchg
lcall
stos
or
pop
lcall
push
movsb
mov
addr16
scas
pushl
sub
jbe
sbb
bound
daa
out
mov
pop
lret
jg
rolb
inc
mov
or
jne
xor
dec
adc
mov
mov
out
and
into
loopne
cmp
or
repz
jne
mov
scas
lods
repz
cmp
pop
mov
sub
pop
out
mov
pop
bound
pop
sarb
into
fiadds
mov
xchg
out
test
jg
adc
into
sbb
inc
insb
mov
inc
out
push
shrl
inc
loop
aad
add
loop
mov
jnp
out
jb
cmp
jb
mov
xchg
jo
mov
iret
push
mov
pop
push
ss
loope
sub
jne
rolb
xchg
lea
loopne
push
sub
aad
repnz
fcompl
jecxz
push
rcll
sbb
xor
or
cmpsb
jnp
mov
inc
call
lret
mov
xor
lock
dec
xchg
sub
xchg
imul
xor
scas
iret
and
or
cmp
dec
in
adc
icebp
mov
std
subb
out
jl
mov
into
xchg
jg
jne
lahf
push
cmpl
sub
add
mov
jo
pop
cltd
mov
push
push
xchg
popa
jle
pop
lcall
cmc
ror
push
stc
not
add
shr
xor
mov
stos
mov
sbb
dec
mov
jne
addr16
cmc
xorl
pop
das
sbb
xor
ljmp
test
adc
popa
mov
stos
arpl
or
addr16
mov
fcmovnu
xchg
adc
dec
mov
and
nop
cmp
mov
insb
dec
mov
mov
or
pop
push
in
sahf
add
and
jmp
xchg
jg
pop
loop
outsb
repz
mov
sub
imull
outsb
pop
or
xchg
xchg
loope
jae
push
or
xchg
into
imul
sub
scas
mov
je
fsubl
xlat
pop
xchg
test
xlat
lock
cmp
or
jae
cmpsl
xor
push
in
xchg
lret
push
fadds
and
cmp
loopne
loop
mov
pop
xor
adc
pusha
jo
xor
rorl
dec
rcrl
cmp
mov
push
jbe
mov
dec
inc
in
xor
jg
test
xchg
mov
push
out
jns
dec
add
push
gs
fisttpl
dec
insl
into
scas
lret
cwtl
popa
cmp
stos
sbb
inc
cltd
js
and
lret
mov
pop
fnsave
push
sub
or
jge
inc
xchg
cmpl
or
add
ret
pop
test
xor
mov
jns
add
mov
mov
nop
xorl
out
bound
push
sahf
ficompl
sbb
dec
adc
mov
xchg
sub
xor
lods
push
sbb
pop
popa
jno
sbb
sbb
idivl
aas
cwtl
push
dec
stos
and
sbb
cs
push
fstl
add
mov
add
xchg
pop
in
out
addr16
popl
inc
and
or
add
mov
ljmp
jae
push
lods
sub
or
sub
fstl
push
dec
enter
sub
xchg
add
cwtl
aad
xor
into
scas
jg
ret
in
push
jne
imul
dec
lock
je
cmp
idivl
mov
popa
aad
clc
dec
das
xchg
sub
add
push
mov
mov
andl
jnp
scas
insb
pop
jo
sbb
mov
cmp
cld
in
mov
das
pushf
loop,pt
scas
cwtl
mov
pop
popl
push
adc
sub
fwait
push
jb
push
loop
test
mov
mov
xchg
jecxz
lea
jecxz
mov
sbb
fstl
into
push
jb
out
jno
ret
sub
and
insl
add
mov
mov
jl
cld
jl
adc
pop
jo
jg,pn
cmp
pop
imul
lret
je
sti
and
sbb
cmp
sbb
dec
stos
insb
dec
xor
imul
xor
jp
push
ss
stc
cmc
sub
loopne
mov
xor
aam
jmp
push
loope
mov
mov
cmp
aaa
mov
outsb
jb
popf
mov
scas
aaa
jns
mov
xor
dec
mov
movsb
test
loopne
addb
push
mov
lahf
aas
popa
xor
jb
add
sub
push
and
pop
jp
shrb
cltd
add
sub
pop
sbb
xchg
scas
dec
push
xor
ja
cltd
inc
or
jg
mov
jae
and
bound
lret
jmp
pop
cmp
aam
test
lods
push
sub
fdivr
jecxz
jg
test
mov
popf
iret
or
test
sub
popf
sbb
mov
mov
test
push
mov
xor
cmp
mov
rclb
andl
and
dec
stos
clts
and
scas
adc
fcom
inc
lock
xchg
sahf
xchg
cmp
jl
rorb
pop
add
adcl
inc
imul
lret
fcoml
adc
imul
ret
insb
sbb
lcall
inc
outsl
cmpsb
rcrb
jns
xor
sbb
jl
sbb
adc
imul
lret
inc
aam
sbb
pushf
fs
or
cmp
and
sbb
pop
jmp
push
shlb
fiadds
lods
and
mov
cmp
pop
gs
mov
enter
je
cmp
cmp
xchg
sub
in
stos
incl
popf
sub
test
and
adc
out
rcrb
jne
outsb
mov
push
ret
jmp
sbb
jg
mov
je
ficompl
or
les
notl
pusha
decl
lea
psubq
mov
xchg
out
xchg
inc
and
mov
sti
or
std
and
in
hlt
mov
push
dec
add
jl
jmp
stos
imul
push
xor
sub
pop
jbe
cmp
push
les
sub
mov
cs
cmc
cltd
adc
push
pop
cmp
mov
mov
rcr
and
or
loopne
dec
lods
enter
and
in
or
adc
pop
loopew
sti
dec
mov
mov
int3
cmp
cmp
fs
lcall
bswap
aas
fistpl
jmp
dec
cmpsb
sub
inc
pop
nop
lahf
jo
mov
lea
imul
test
jb
scas
pop
daa
pusha
fisttpll
imul
mov
inc
mov
es
rolb
mov
jb
jae
lret
fwait
push
stos
dec
fiaddl
orb
pusha
incb
outsl
xor
mov
or
push
jns
pop
fildll
pop
popf
arpl
sbb
pop
lret
mov
ljmp
sub
inc
inc
scas
and
jns,pn
fistpll
frstor
xor
cmpsb
jecxz
push
add
jmp
test
leave
xor
lea
dec
jl
add
adc
cmp
xrstor
rorl
cmp
rcll
iret
sub
lret
or
jo
aas
lret
mov
aam
inc
xchg
sub
or
test
mov
ljmp
cmp
cmpsb
in
add
push
sar
icebp
rolb
jns
test
hlt
sub
repnz
insl
add
push
add
cli
nop
cli
out
test
or
push
int3
jae
mov
mul
adc
inc
push
add
fbld
ljmp
int3
stc
cmpsl
out
cmc
jno
lea
cmp
lea
sahf
dec
mov
fsubl
jno
jl
add
cmp
lret
push
xchg
popa
data16
add
dec
pop
int3
and
mov
clc
mov
fwait
push
es
aaa
aad
sbb
inc
das
jecxz
aas
pop
movsb
pop
sub
mov
and
sbb
je
js
xor
das
xchg
enter
in
xor
cmp
movsb
ror
adc
or
mov
pushl
popf
push
and
xor
sbb
lock
shrl
jl
aam
jl
inc
jne
in
shlb
in
cwtl
and
std
xchg
fdivrl
cmp
inc
cwtl
and
xorb
mov
inc
adc
inc
stos
inc
xchg
jp
push
out
push
push
cmp
rclb
leave
jae
cmp
out
jno
outsb
mov
inc
jne
mov
faddl
out
insl
sti
jbe
jo
push
daa
jo
inc
sbb
pop
insb
mov
into
cs
push
call
push
movsl
in
loopne
ficoml
add
sub
or
hlt
cmp
mov
test
mov
ljmp
and
addr16
and
insl
stos
sub
les
pop
scas
rep
pop
cwtl
xchg
xor
mov
sarl
or
stos
dec
fildll
and
adc
notb
ds
outsb
dec
jecxz
test
ds
pusha
in
inc
je
inc
leave
push
mov
add
xchg
les
sbb
push
mov
into
sub
sub
sub
mov
mov
mov
loope
dec
test
xchg
fsubrs
jmp
and
adc
mov
lods
push
pop
fisttpl
push
pop
mov
jbe
push
xor
stos
inc
ds
cli
fidivs
push
adc
subl
adc
or
shlb
sti
add
out
mov
xor
fdivl
xor
cwtl
lret
jg
cmpsl
jp
mov
xchg
push
mov
insl
les
jne
jg
push
leave
mov
lret
shr
push
inc
inc
xchg
and
xchg
cmp
adc
push
addl
mov
rcrl
fisttps
xchg
sbb
test
stos
bound
mov
xchg
xor
jae
ljmp
lods
testb
add
mov
outsb
sub
mov
lret
stc
andl
inc
sbb
int
mov
mov
fisubrl
and
mov
lock
stos
dec
testb
mov
or
test
push
iret
or
gs
sub
xchg
dec
stos
xor
imul
jecxz
push
pop
ljmp
in
pushf
dec
inc
test
cmpsb
fdivl
xchg
icebp
in
rcll
shll
mov
repz
pop
add
sbb
popf
push
and
push
call
das
xor
or
or
mov
cmp
or
ret
add
adc
or
push
ja
mov
jge
ret
cmpsl
rorl
push
aaa
imul
cmp
inc
loope
movsl
test
push
mov
dec
jbe
testl
pop
int
fistpl
mov
mov
aam
push
test
insb
es
push
test
xchg
sub
or
int3
push
add
iret
jle
cmp
je
ror
stc
sarb
mov
push
insb
mov
int3
mov
lea
or
and
out
cmpsb
add
xor
xor
jg
jnp
pop
pop
jmp
inc
in
jbe
imul
jg
push
adc
lret
fidivl
add
in
movsb
test
enter
divl
inc
lret
in
adc
das
xor
and
cmp
xchg
aaa
add
lods
xor
test
push
mov
or
lock
cld
addr16
mov
mov
xchg
mull
mov
add
aam
add
in
mov
sub
pop
mov
lods
ja
xchg
ret
xchg
add
repnz
ljmp
xlat
clc
xchg
aas
mov
sbb
jecxz
jg
jnp
jg
adc
xchg
das
mov
fimull
mov
dec
pop
xchg
jae
aad
in
mov
out
sbb
sub
mov
push
das
mov
sbb
jecxz
dec
and
daa
mov
in
gs
pop
dec
in
dec
sub
pop
int3
sub
ja
fildll
adc
or
int
jp
jl
jmp
xchg
test
pop
out
mov
sub
lock
lret
cbtw
cmpsb
fwait
pushf
xchg
push
call
pop
xor
jns
inc
xchg
fcomps
rclb
mov
scas
arpl
mov
imul
por
aad
xor
dec
mov
xchg
dec
movsb
aas
dec
mov
lods
jbe
lds
cmp
push
pusha
mov
clc
movsl
sbb
jbe
insl
mov
clc
push
popa
nop
repnz
stos
sub
ret
clc
xchg
arpl
rol
roll
bound
mov
or
fistl
insb
push
jo
push
movsb
rcl
xor
ds
adc
mov
push
add
int
pop
sbb
or
dec
pop
call
mov
inc
pop
stos
dec
pushf
sub
pushf
mov
inc
push
inc
and
icebp
inc
data16
sub
jnp
xor
mov
add
pop
pop
mov
jge
sbb
mov
adc
imul
pushf
sar
das
cmp
frstor
jg
pop
nop
popf
push
dec
sbb
pop
leave
mov
call
cmovne
push
lods
push
push
jo
sub
pop
fidivl
mov
sbb
pop
cmp
sub
shlb
sub
mov
jge
lahf
inc
mov
mov
hlt
push
jmp
lahf
cmp
push
lock
jmp
std
xchg
inc
fiaddl
ja
sub
arpl
pop
fmuls
mov
dec
push
std
jnp
adcl
cmp
aam
pusha
pop
int
sahf
pop
jmp
add
or
pop
scas
test
lods
and
xor
jno
aaa
adc
mov
and
inc
loop
inc
int
dec
pop
out
pop
adc
ss
sahf
ret
push
es
push
cmpsl
cmp
imul
andl
imul
fsubl
sbb
sub
stc
mov
popa
xor
test
cmp
mov
bnd
stc
fimull
in
movsb
inc
and
cmovno
into
popa
sub
leave
pusha
mov
inc
mov
mov
aam
xor
xchg
aaa
cmp
lcall
and
mov
pop
loop
adc
mov
dec
jb
jmp
popa
inc
std
sbb
inc
jne
xor
call
pop
repz
mov
lea
push
icebp
dec
out
data16
negl
push
xchg
pop
jns
or
lock
sbb
xchg
aas
mov
add
jbe
xor
adc
out
daa
dec
cltd
int3
pop
xor
call
xor
xchg
dec
loop
iret
cmp
decl
push
subl
inc
cmpsb
sub
js
jnp
add
xchg
cwtd
mov
outsl
dec
loopne
mov
iret
mov
sbb
add
clc
or
sbb
mov
js
out
cltd
jmp
enter
fistpl
lcall
push
xchg
lcall
inc
cmp
pop
inc
mov
jge
lret
fwait
xlat
mov
jp
inc
lret
insl
pusha
pop
lds
insb
fs
data16
aas
adc
pop
or
push
loop
jge
pop
pop
cli
mov
dec
xchg
and
arpl
clc
divl
jmp
test
xlat
fcomps
xchg
outsb
mov
dec
push
movsl
std
leave
lea
icebp
mov
mov
or
fimuls
xchg
and
mov
and
fsubrp
ds
fcmove
push
in
cld
push
loopne
mov
push
adc
mov
into
rep
push
lds
inc
xorl
out
ret
and
add
and
dec
cwtl
sbb
cs
movsl
dec
xlat
into
cmp
pop
xchg
and
pop
ret
mov
add
insl
les
cld
add
sub
sbb
push
pop
jae
sbb
xchg
pop
mov
sahf
sbb
pop
mov
mov
sub
fsubrs
pop
les
aad
cmp
addr16
lret
pusha
mov
pop
lock
mov
aam
jle
in
mov
cltd
jno
mov
add
inc
test
sti
fdivs
sbb
test
xor
sub
cmp
push
in
sub
xchg
cmp
call
in
cmp
decb
and
push
sbb
test
imul
data16
adc
ret
cmp
dec
adc
mov
and
pop
mov
pusha
mov
stc
push
pop
inc
jb
xor
mov
cmpsb
gs
nop
mov
flds
mov
pop
shll
adc
out
dec
mov
fisubrl
loope
jbe
mov
lods
jle
pop
adc
jge
mov
cmp
sub
xchg
xor
in
cmc
mov
popa
xlat
test
xor
fmul
or
sbb
call
mov
dec
and
ljmp
sti
js
mov
jns
mov
inc
add
in
push
shll
leave
imul
cld
sahf
pop
cmp
xor
xchg
sbbb
fwait
or
loope
dec
inc
push
pop
push
push
pop
repz
mov
repz
adc
push
shl
movsl
jnp
cmp
arpl
imul
inc
leave
mov
imul
cmp
outsl
xor
arpl
inc
mov
ds
pop
hlt
cwtl
push
mov
inc
mov
lret
data16
cmp
out
sahf
mov
dec
loop
cmpsl
mov
mov
ret
sbb
scas
dec
aad
rorl
orl
mov
jne
outsl
ljmp
cmp
jecxz
into
push
loop
fucompp
gs
test
mov
cmp
pop
jne
loope
inc
sub
dec
adc
out
iret
add
dec
lret
jb
dec
test
xor
push
sbb
xlat
sbb
mov
fisubs
inc
inc
or
lods
jp
std
jmp
enter
out
xchg
push
pop
add
sbb
mov
cwtl
ret
adc
aad
addr16
pop
xlat
push
dec
jb
cmp
lret
loop
mov
jne
mov
lods
and
adc
xchg
mov
and
in
addr16
cli
lods
xchg
dec
xor
inc
stos
fildl
pop
aam
das
lcall
xlat
push
jl
aam
dec
cmp
dec
fmull
mov
sbb
and
jl
fs
popf
xchg
mov
es
sbb
scas
add
addl
xchg
aaa
push
mov
push
cmp
inc
mov
inc
pop
mov
jbe
mov
in
lahf
adc
adc
mov
xchg
sbb
jns
and
cld
in
sub
add
adc
sahf
sub
inc
mov
pop
mov
xor
sub
cmp
dec
dec
decb
in
in
pop
cmp
sbb
push
stos
movsl
inc
stc
inc
mov
fcomi
add
lds
sahf
push
jg
imul
push
push
mov
int
vlddqu
ficompl
xchg
lock
jmp
mov
loop
movsb
stos
jp
and
ret
jge
ljmp
dec
push
ljmp
sbb
jae
xchg
xchg
pop
add
stos
add
clc
nop
lea
scas
pop
sub
pop
aad
push
fwait
xchg
fdivs
adc
repnz
les
sbb
mov
fs
lods
mov
js
testb
imul
sub
xchg
call
dec
mov
outsb
cwtl
lret
popf
pop
xchg
stos
or
sti
std
cmp
pop
scas
push
inc
fstpt
add
sbb
out
and
sub
inc
jp
mov
dec
and
popa
lcall
jns
mov
ds
push
sub
leave
in
aas
cmp
mov
sbb
ret
call
or
inc
arpl
xchg
adc
xor
or
mov
jl
das
cwtl
pop
addr16
cmp
xor
dec
and
dec
mov
jne
repz
adc
cs
mov
inc
push
dec
xorb
mov
dec
push
ret
inc
ss
cmp
cmc
sbb
sti
xor
xor
xchg
fildll
repz
rclb
sub
dec
and
mov
mov
push
les
mov
int3
sbb
push
mov
cmc
aas
sub
loopne
mov
pop
and
fldcw
mov
xor
stc
testl
mov
mov
shrb
nop
test
mov
and
mov
inc
and
jnp
outsb
in
fwait
lret
mov
lods
loop
xchg
mov
mov
and
aaa
inc
sahf
ret
mov
jns
xor
push
call
push
das
jb
push
mov
xchg
lea
jl
fnstcw
jle
push
push
aas
test
jae
ffreep
xor
mov
lret
sbb
hlt
lret
jo
ds
push
xor
mov
data16
push
je
mov
ljmp
sbb
cmpsl
or
movsl
insl
jle
inc
jno
lret
or
pop
or
inc
xor
pop
gs
add
adc
adc
jle
sti
lcall
cmp
or
mov
test
bound
mov
in
iret
push
adc
aas
addb
xlat
dec
fsubrl
push
aad
test
mov
xlat
cmp
xchg
push
aas
push
jecxz
cmp
in
xchg
jno
popf
mov
mov
aam
and
and
ret
or
jmp
aam
sbb
or
in
mov
pop
call
mov
xor
mov
call
push
into
aas
test
aas
jmp
sbb
shl
sahf
xor
mov
mov
cltd
ljmp
mov
mov
cmp
sti
or
pop
fists
fistps
out
scas
iret
and
push
dec
jne
test
fcomi
xchg
mov
mov
jecxz
xchg
mov
pop
fistpll
mov
cmp
dec
mov
xor
lods
mov
mov
out
subb
in
lret
clc
cmp
jg
out
imul
cmp
lea
jmp
stos
inc
call
pop
cmpl
pop
and
clc
lods
ret
in
pushf
leave
adc
xor
lahf
insl
fadd
lret
aam
jno
lret
js
mov
adc
pop
mov
sbb
inc
inc
xchg
jae
xor
in
outsb
lcall
jbe
aaa
dec
pushf
stc
out
aam
cltd
addr16
mov
fistpll
nop
xchg
cmp
scas
cmpl
fs
mulb
jmp
repnz
aad
scas
and
jns
inc
cs
sarl
mov
jecxz
ret
outsb
je
ds
pop
mov
mov
add
or
mov
mov
mov
adc
adc
js
ret
jp
bts
mov
sbb
jmp
push
sub
push
imul
push
dec
sbb
popf
inc
push
push
push
inc
adc
and
aam
push
shll
and
sbbb
fcoml
shrl
mov
push
xor
call
mul
pop
mov
pop
cwtl
inc
dec
data16
fcompl
or
sbb
add
iret
shl
pop
loope
clc
notb
xchg
data16
test
xor
scas
roll
insb
mov
loop
and
rcll
ret
sbb
or
ljmp
rol
sbb
mov
fcoms
sub
stos
mov
aad
sti
lcall
cmp
push
int3
and
push
stc
jg
icebp
lcall
std
mov
repz
sbb
inc
and
mov
outsb
mov
inc
ss
mov
sahf
inc
push
mov
xchg
loopne
push
push
das
cmp
lods
mov
push
lock
ja
fnstsw
les
sub
data16
pop
ljmp
jae
jnp
xchg
mov
movsl
adc
mov
push
lahf
mov
incb
sub
mov
mov
icebp
jle
cmp
les
dec
jb
ljmp
adc
sub
popa
mov
add
jo
dec
stos
dec
adc
dec
lock
das
ljmp
adc
movsb
push
mov
sub
icebp
or
lret
movsl
mov
inc
push
out
xor
imul
call
xlat
sub
clc
xor
mov
jecxz
loopne
push
mov
sbb
sbb
jnp
cwtl
jg
es
or
add
fstpt
lods
dec
bound
pushf
sub
add
and
jns
lcall
mov
sbb
mov
and
mov
xor
mov
repz
stc
sbb
adc
mov
mov
jae
jmp
ret
inc
xchg
xor
idivb
xorb
mov
sbb
ficompl
imul
xchg
rclb
dec
call
outsl
push
imul
pop
cmp
push
xor
xchg
xchg
cmpb
idivb
xor
pop
mov
int3
sub
dec
sbb
stos
aas
call
xchg
int
and
cs
imul
iret
pop
xor
ret
ljmp
insl
xor
mov
fstl
inc
xchg
idivl
jecxz
leave
scas
xchg
sbb
movsl
add
ret
push
and
sbb
sbb
lods
leave
cwtl
sub
scas
or
and
adc
mov
dec
pop
mov
xchg
repnz
mov
lret
dec
cmp
lods
mov
inc
aam
loope
dec
int3
pop
xor
movsb
xlat
push
push
xchg
loop
mov
xchg
scas
fsts
rorl
and
dec
jnp
int3
outsl
lods
dec
push
jg
ds
xor
pop
dec
push
rolb
dec
pop
mov
in
cli
testb
adc
fwait
inc
aaa
loopne
push
ret
cmc
sbb
hlt
dec
loopne
cmpb
jl
mov
xchg
mov
mov
push
cmp
pop
cmp
les
roll
cmpsb
hlt
test
sbb
push
adc
push
push
cmp
stc
test
lock
mov
inc
mov
dec
mov
or
lods
lret
xchg
imul
mov
and
adc
rcrb
imul
mov
dec
lahf
push
in
push
das
jnp
xchg
mov
cltd
inc
shrl
pop
in
push
mov
mov
int3
jp
adc
push
fwait
jl
push
inc
stos
ljmp
ss
lods
lret
jle
cmpsl
aad
sti
dec
mov
push
fwait
sahf
ljmp
push
movsl
sub
push
sub
push
test
jae
rol
ret
scas
pusha
lds
repnz
imul
push
jecxz
lock
mov
aam
in
xlat
xor
out
cmpsb
jl
push
add
xor
into
aas
movsl
call
lcall
jns
fcoms
jecxz
stos
lea
pop
das
es
inc
outsl
and
das
cmp
pushf
jno
aad
popf
push
out
jle
jnp
das
int
fsubs
pop
ds
leavew
cmp
faddp
xor
inc
push
ss
cmpb
or
fcmovbe
rcrb
aaa
sti
inc
mov
cmp
or
bound
xchg
or
popf
push
out
fcomps
stos
scas
push
jb
rcl
inc
pop
push
jae
push
jnp
sub
adc
dec
loop
fbstp
imul
pop
push
roll
out
scas
xor
push
es
popa
das
xor
ja
iret
daa
mov
rcl
shrl
scas
dec
xchg
in
cmc
mov
scas
mov
sbb
scas
cli
add
mov
sbb
jbe
mov
outsl
roll
mov
pop
out
adc
je
clc
mov
inc
in
mov
iret
cmp
inc
call
shrl
aas
jns
decb
popf
push
repnz
jno
jns,pt
or
push
out
pop
lahf
mov
das
sar
cmp
sbb
adc
inc
rcrb
xorb
push
lcall
push
mov
jl
outsb
cmpsl
shlb
adc
push
bound
add
test
sti
cmp
rcrb
push
xchg
movsb
xchg
xor
and
cli
sbb
push
push
xchg
mov
mov
das
cvtpi2ps
and
leave
mov
lds
std
mov
idivb
jns
mov
das
cld
es
test
push
jg
shll
cmp
leave
lea
fneni(8087
aam
pop
cmp
aam
pop
sub
mov
test
dec
cltd
outsl
arpl
jecxz
inc
lret
push
arpl
and
lea
or
jecxz
clc
mov
dec
sti
adc
int3
adc
inc
add
call
push
inc
sti
call
test
rorl
jge
mov
mov
mov
out
es
ds
test
pop
push
int3
inc
mov
loope
clc
sbb
xor
xchg
jne
pop
mov
pushf
add
xchg
test
addr16
add
aad
sub
xor
push
fnstenv
gs
pop
in
sbb
sub
lods
cwtl
inc
shrl
subb
sub
lcall
pushf
out
adc
fistpll
lock
xchg
adc
mov
mov
mov
push
fistl
negl
inc
lods
mov
loopne
fiaddl
jle
in
in
jns
test
dec
pop
or
je
and
fwait
jmp
les
push
pop
rolb
cmpsl
cwtl
or
mov
sub
add
mov
stos
xor
mov
pop
lock
sbb
and
cltd
out
mov
mov
ss
test
outsb
inc
gs
xchg
sub
js
lcall
cltd
stos
aas
add
mov
lcall
adc
jecxz
push
mov
fnstcw
adc
sbb
xchg
xlat
fs
lock
fisubs
push
js
insl
fildl
mov
cli
and
popf
xchg
fs
shlb
loop
movsb
xorb
stc
xchg
in
lock
sarl
fsts
jle
and
int
sbb
mov
cs
push
xlat
cwtl
das
dec
dec
scas
or
push
loope
dec
pop
cmp
stc
stos
push
adc
add
lock
lahf
lret
sbb
repz
xchg
loop
test
pop
push
mov
mov
cli
xchg
xlat
jp
xlat
or
std
xchg
jge
loop
add
mov
popf
cli
icebp
or
popf
sti
pop
cmp
lea
push
cmc
arpl
sbb
pop
and
or
mov
mov
testb
cmpsb
or
nop
inc
jnp
pop
mov
imul
mov
into
pop
xchg
filds
pop
das
dec
stos
inc
xorb
rclb
jnp
in
ja
push
lcall
sub
xchg
xchg
xchg
sub
in
rcll
je
cwtl
adc
je
pop
fadds
mov
mov
and
test
cmp
add
push
xor
xchg
cltd
adc
loope
or
cmp
jl
fnstenv
aas
cmpsb
ss
xorb
jae
scas
jp
xlat
dec
ljmp
add
int
adc
jo
adc
cmpsb
aas
mov
out
sahf
and
cmp
lea
jp
loop
out
sbb
mov
lahf
jne
mov
das
and
mov
xchg
cmc
cs
idivb
js
aam
sbb
scas
xor
xchg
mov
in
into
fwait
mov
movl
arpl
sbb
inc
in
jecxz
scas
ret
cmpsb
pop
dec
clc
popl
sbb
movsl
adc
add
xchg
outsb
dec
cwtl
xorb
lods
inc
mov
and
jnp
adc
xchg
ret
push
dec
movsl
push
cld
mov
stos
push
mov
fistpll
or
jl
dec
push
xor
shll
jle
test
mov
pushf
mov
fdivs
popf
inc
cmp
push
xor
ljmp
lock
pop
pusha
cs
mov
dec
pop
mov
mov
jno
imul
lea
mov
mov
into
int3
or
ja
stos
or
xor
cmc
sti
xchg
shrb
scas
xlat
call
mov
xor
mov
repnz
sub
and
push
stc
or
pop
in
rcrl
sub
mov
add
add
push
inc
icebp
cld
in
xchg
mov
dec
mov
mov
lahf
jb
push
inc
mov
mov
sub
jo
leave
mov
pop
mov
pop
and
xchg
dec
out
cmpsl
test
dec
dec
lock
rclb
popf
shlb
out
or
push
test
aad
or
in
xchg
add
mov
mov
adc
push
lock
inc
fbstp
push
jb
js
xor
and
dec
mov
test
stc
mov
push
loope
repz
fs
xchg
inc
je
cli
sub
adc
xchg
loop
pop
idivb
movsb
mov
sub
xlat
mov
push
rorb
sbb
pushf
test
popl
inc
pusha
inc
les
fld
icebp
rolb
mov
popa
adc
dec
push
jb
iret
push
mov
rcr
mov
push
pop
dec
cmpsb
sub
popa
repnz
scas
pusha
hlt
push
mov
lock
inc
jl
and
out
lret
fldt
jmp
sbb
cmp
ljmp
jns
push
sahf
scas
mov
xchg
sub
jne
cmp
rorb
and
dec
pop
orl
push
scas
xchg
in
sbb
sub
mov
jbe
fucomi
sti
sub
and
mov
mov
ret
adc
and
fadds
fidivs
jmp
repz
mov
lods
insb
sarl
mov
cmp
scas
dec
out
sub
frstors
scas
loope
mov
in
push
sbb
sbb
cmp
jne
mov
mov
sbb
jmp
sub
sub
mov
mov
xchg
cld
pop
jne
cmp
sub
es
fiaddl
enter
cmp
and
xchg
add
lods
cmp
int3
mov
adc
jecxz
cmpsl
cmp
jbe
lods
and
int3
inc
xchg
xchg
fwait
fs
stc
iret
popf
mov
cltd
cmp
sbb
dec
pop
or
push
repnz
jo
pop
call
ja,pt
mov
xchg
fiadds
aad
xor
jge
add
or
fcmove
adc
ds
xchg
dec
stc
repz
leave
xchg
enter
or
fsubr
xor
and
jge
aas
pop
shl
pop
out
cbtw
cmp
xor
lock
rorb
sub
fmull
iret
lret
insb
outsb
icebp
out
aaa
imul
cmp
movsl
xchg
cmpsb
daa
fimull
int
mov
cmp
adc
fistps
dec
dec
mov
shll
jmp
mov
jg
in
push
dec
adc
pop
pop
rorl
or
lods
cmp
jmp
lock
fadds
inc
mov
rcrl
movsl
cmp
ret
add
outsl
out
add
mov
inc
mov
dec
push
jno
lods
pop
sbb
xor
pop
icebp
ljmp
and
lods
sbb
dec
test
cli
es
test
xor
icebp
mov
imul
sbb
leave
cld
xor
sbb
icebp
jg
cmp
lret
test
inc
lea
shll
arpl
test
cmp
pop
push
mov
lds
cwtl
rcrb
fldl
push
aad
daa
loopne
gs
iretw
repnz
jg
jb
xchg
dec
ficoms
mov
in
call
push
push
dec
aad
cwtl
ret
xor
inc
lods
sbb
mov
enter
popl
into
adc
mov
sti
in
repz
mov
mov
cltd
iret
sub
push
mov
inc
jb
mov
and
test
sbb
mov
sbb
stos
mov
call
in
in
pop
std
in
fcmovnb
xchg
es
mov
pop
fsubrs
and
movsl
jecxz
add
addr16
xadd
xor
pop
sub
pop
outsb
pop
inc
xor
and
adc
out
push
test
mov
sarb
xor
xorl
cmc
xor
mov
adc
mov
push
mov
cmpsl
lea
lock
addr16
mov
aas
pop
sub
pop
mov
add
dec
pushf
insb
mov
test
mov
jle
pop
push
mov
int
sbb
ret
cmp
mov
jge
xorb
das
sbb
mov
pop
dec
hlt
xlat
mov
sub
cwtl
mov
add
call
pop
xor
push
addl
push
popf
mov
or
out
out
mov
inc
jmp
or
push
sarl
mov
shll
cmp
loop
and
aad
fcomp
or
mov
into
mov
inc
mov
stos
out
dec
xchg
pop
adc
mov
clc
dec
mov
push
add
fs
lea
test
pop
add
ljmp
enter
xor
xchg
adc
clc
sbb
repnz
enter
stc
enter
or
sub
cmp
call
pop
xchg
gs
mov
adc
lcall
add
sub
push
mov
mov
clc
fwait
pusha
xor
rorb
filds
mov
mov
cmpsl
push
xchg
xlat
aam
pushf
mov
out
dec
call
pop
in
push
das
test
jnp
lahf
mov
scas
movsl
mov
jl
out
icebp
ffree
add
enter
incb
fistpl
push
push
or
stos
push
xlat
cli
out
mov
jb
sbb
in
fcmovbe
popf
js
mov
adc
out
mov
and
push
scas
jae
sahf
adc
xor
push
and
stc
xor
scas
sub
insb
pop
insb
dec
adc
mov
ds
inc
push
jmp
testb
nop
imul
repz
clc
aas
xor
andl
ficoms
les
insl
push
daa
push
mov
flds
mov
data16
mov
stos
inc
xchg
in
mov
sbb
and
sahf
xor
mov
lds
jp
dec
or
jle
ljmp
adc
adc
aad
ljmp
jno
jp
pushw
test
mov
mov
push
js
mov
jmp
mov
xor
ret
sub
pop
outsb
jo
not
leave
lods
inc
rol
call
adc
out
push
inc
fldt
jl
jmp
rep
xchg
scas
shll
in
stos
mov
dec
in
sbb
mov
dec
push
fistl
push
xchg
testl
and
pop
push
popa
lods
jmp
imul
xchg
fisttpl
mov
hlt
mov
aad
ss
xchg
shll
mov
pop
mov
add
sbb
cmc
jbe
push
mov
mov
adc
repz
fstpt
orb
xor
jg
jns
xor
popf
in
icebp
int3
xchg
and
aam
sub
dec
lea
or
push
movsb
jp
cli
cmp
hlt
stc
rep
dec
inc
std
inc
hlt
jne
sub
repnz
mov
and
push
mov
lret
hlt
lods
cs
cmpsl
mov
cs
addr16
clc
xchg
mov
hlt
movsb
loope
stos
mov
dec
jp
mov
hlt
leave
popf
shr
lcall
mov
lock
iret
push
cmp
and
dec
mov
xor
out
mov
test
jmp
pop
mov
out
cltd
pusha
and
mov
enter
mov
out
insb
mov
add
cmp
outsl
mov
push
cmpsb
pusha
scas
jg
cmp
out
stc
dec
jp
test
jmp
adc
fs
mov
inc
push
xchg
into
jno
insl
inc
sbb
popf
sub
sub
fisubrs
jnp
jno
ds
cmp
sbb
pusha
jecxz
cmpsl
pop
jbe
cwtl
push
jecxz
repnz
loop
cmp
subl
ds
cmpsb
mov
xlat
jae
jl
aam
lock
outsb
test
lods
mov
and
sbb
xchg
mov
sub
mov
psadbw
mov
sub
lahf
inc
adc
inc
mov
jmp
dec
out
cwtl
stos
pop
ja
adcb
pop
mov
push
pop
add
fstpt
add
push
push
dec
add
outsl
sub
jp
dec
not
cwtl
fcomip
mov
sbb
out
jle
sub
mov
mov
sbb
dec
in
xchg
mov
adc
cmpsl
jecxz
es
push
or
push
jecxz
int
inc
or
lods
mov
pop
fstps
sbb
push
xchg
push
dec
lret
pop
xchg
jbe
jno
jecxz
scas
dec
loope
adc
fidivl
mul
mov
lahf
mov
cmpsl
mov
mov
push
xor
push
or
jbe
dec
mov
clc
cmp
mov
push
ficomps
loop
lock
cmpsl
in
jp
mov
pop
pop
cmpsl
jg
xor
xchg
jmp
dec
sbb
xchg
pop
mov
add
dec
pushl
mov
mov
rep
fisttpl
aas
repz
repz
cmpsl
push
cmp
mov
lret
fsubs
sbb
xor
pop
cld
push
xor
arpl
imul
mov
pop
pop
push
sbb
shll
jo
insl
jae
lds
icebp
jmp
push
ds
pop
test
dec
mov
imul
psubusw
imul
sti
sbb
sbb
jmp
lret
push
scas
sub
test
fwait
xchg
stos
sbb
ja
inc
scas
dec
je
push
daa
cld
jns
lahf
jecxz
cmp
sbb
xchg
aas
fs
jo
shlb
jle
arpl
mov
movsl
lea
cltd
mov
push
in
mov
jmp
fs
cmc
adc
cli
sub
cmpl
push
dec
mov
dec
loope
pop
popa
jg
rcrl
js
or
xor
insb
mov
push
jecxz
mov
xchg
add
push
lret
mov
mov
dec
xchg
sbb
popa
mov
dec
add
sahf
sub
je
jg
and
int
push
aam
std
xchg
in
inc
inc
inc
aas
pop
inc
pop
cmp
xchg
ljmp
cmc
cmp
xorb
mov
hlt
arpl
clc
clc
hlt
aas
pop
add
ret
dec
and
imull
mov
aad
not
or
stc
inc
adc
aaa
icebp
push
test
or
push
test
mov
iret
aam
adc
cmpsb
xchg
testl
adc
bound
idivl
daa
cltd
sbb
xchg
call
leave
mov
cmc
adc
pop
inc
in
mov
mov
jb
mov
pop
lret
jb
rcll
rclb
xchg
gs
push
pushl
nop
dec
daa
fwait
cmc
adc
cli
or
repnz
enter
movb
dec
iret
andl
ljmp
push
pop
stos
fcmovnb
sbb
sub
jge
fisubs
inc
insl
or
insb
mov
fstl
enter
addb
push
xor
pop
lods
dec
iret
pushl
pop
push
into
xor
arpl
pop
ja
add
xor
add
andl
sbb
inc
gs
dec
xchg
inc
gs
js
imull
cmovs
sbb
imul
out
lods
dec
add
mov
sub
cld
jb
and
mov
mov
cmc
jge
aaa
sub
ficomps
cmp
popa
outsl
lods
test
inc
mov
mov
leave
jns
inc
jge
sub
pop
push
push
sub
sub
xor
xor
inc
mov
test
cmc
movsb
cmp
sbb
or
shlb
addl
and
insb
lds
mov
pusha
xor
mov
mov
imul
adc
into
pushl
in
test
lret
or
mov
or
or
add
loopne
outsb
xchg
aaa
and
mov
sbb
mov
sti
lods
pop
push
imul
inc
add
pop
and
and
mov
insl
xchg
and
xchg
jb
dec
ss
sbb
lods
jp
mov
jp
mov
int
inc
or
das
mov
popa
add
sub
jmp
add
data16
fwait
pop
in
jle
nop
adc
enter
pop
movsb
fsubp
in
je
pop
mov
inc
sub
lahf
sub
cmpsb
pop
xor
dec
adc
sar
xchg
out
xchg
scas
arpl
jbe
pop
imul
jo
cwtl
repz
in
popf
sbb
dec
xor
sbb
divb
aam
gs
fwait
notl
fwait
out
sbb
pop
jno
imul
outsl
mov
jmp
adc
mov
lods
or
jb
pop
test
xchg
push
cmpsl
cmp
int3
adc
dec
sub
loope
push
mov
movl
jle
add
adc
mov
push
fiadds
mov
add
jne
dec
jae
negb
int3
or
hlt
or
dec
std
comiss
rcl
or
into
inc
std
pop
push
fisubs
fadds
bound
push
shrb
sar
clc
xchg
pusha
pop
ret
cmpsb
mov
or
lahf
push
outsb
xor
stos
int
push
stos
inc
pusha
mov
push
int
in
push
hlt
push
xchg
sub
stos
sbb
sbb
and
inc
cmp
adc
pop
mov
inc
in
adc
imulb
or
jno
xchg
xor
outsb
cld
daa
adc
insl
in
jno
sbb
inc
push
jmp
push
xor
std
and
stc
aam
mov
pop
adc
lods
subl
mov
shll
mov
xchg
sti
xchg
xlat
push
jge
movb
jns
shll
mov
xchg
pop
in
fistpll
pop
pop
out
or
fwait
test
loop
mov
and
mov
ss
sbb
out
xchg
into
iret
loop
mov
out
fisubl
push
lods
xchg
and
loop
das
shl
push
out
imul
sub
xor
imul
inc
shl
btr
lret
pop
stos
cli
lods
pop
addr16
pop
xlat
pushf
sub
push
pop
mov
cmp
mov
in
in
clc
adc
lods
pop
jo
insb
mov
xlat
mov
ficompl
ret
in
mov
popa
fsubrs
or
or
lods
inc
jno
push
sbb
mov
out
movsb
inc
pop
sbb
mov
ds
aam
pop
mov
les
adc
cld
imul
test
cmp
fmuls
and
enter
outsb
xchg
xlat
lock
insb
lahf
cmpsb
mov
in
adc
movl
xchg
subl
dec
aaa
xor
mov
sub
sbb
and
mov
fdiv
addr16
push
xor
ds
popf
mov
cmpsl
pop
push
ljmp
sub
adc
lock
fiaddl
shlb
adc
push
mov
xchg
ds
aaa
jle
std
xchg
sub
mov
mov
cmc
or
cmp
ja
std
stos
push
xor
inc
push
cmc
cmc
das
pusha
or
je
adcb
xor
push
pop
out
out
fs
scas
xchg
daa
sbb
mov
mov
leave
ljmp
mov
int3
xorl
mov
sbb
arpl
and
jmp
sbb
imul
fisttpll
daa
sbb
xor
inc
fmuls
movsb
jno
pop
mov
inc
inc
orb
cmp
inc
lahf
adc
mov
test
imul
cmpsb
sub
repz
hlt
popf
jl
and
push
push
push
test
inc
addr16
pusha
xchg
xor
cmpsb
push
xorl
push
fs
js
cmp
push
out
pop
mov
aad
inc
loope
add
lds
xchg
clc
or
fcoms
cmpsl
mov
inc
sub
js
fstl
fisubrl
adc
fldenv
lock
xchg
xor
mov
xchg
out
xchg
push
imul
inc
pop
sub
xchg
push
and
cmp
inc
inc
xor
call
mov
fdivrs
movsb
shrl
scas
call
fiadds
aaa
cli
dec
xor
mov
jle
lods
cmp
mov
jbe
jl
jg
fmull
repz
xor
jecxz
das
ljmp
outsl
sub
push
ja
shrl
push
inc
lret
je
aas
pop
mov
mov
jns
cld
adc
jmp
mov
or
jecxz
ljmp
stc
push
std
je
sub
pop
clc
push
pop
pop
loopne
xor
mov
pop
repnz
pushf
fbld
jno
sbb
insl
push
mov
dec
dec
pop
or
mov
out
sub
inc
jnp
hlt
sbb
and
dec
jnp
xor
imul
mov
lods
adc
mov
and
and
sub
out
inc
sub
pusha
sub
inc
clc
lcall
jle
pop
cmp
inc
adc
aad
addr16
addr16
add
adc
cmpsl
imul
inc
jns
adc
test
add
mov
hlt
scas
mov
sbb
aaa
adc
jl
mov
mov
push
jae
stos
lods
pop
hlt
cld
sub
repnz
inc
sbb
shll
xchg
cld
pop
push
inc
stos
mov
jmp
lods
jecxz
pop
loope
sub
ja
jp
lret
pop
sti
xor
sub
inc
mov
jno
insl
sbb
scas
rcrb
inc
sub
addr16
cmp
and
hlt
mov
push
fadd
cmp
popf
add
inc
inc
inc
movsl
sub
or
sub
inc
scas
xchg
cmp
pop
dec
jg
shrl
loopne
imul
stos
outsb
mov
js
jmp
adc
mov
mov
and
cmp
mov
or
or
in
dec
mov
sbb
movsl
xchg
xchg
lods
or
sbb
shr
imul
mov
push
mov
call
push
jp
push
dec
fwait
adc
mov
aam
adc
dec
dec
adc
insb
xchg
dec
dec
cli
out
popf
push
inc
adc
adc
sti
in
hlt
xor
mov
pop
add
idivb
sahf
pop
mov
or
inc
leave
cmp
mov
jle
mov
subb
ja
and
jmp
ja
push
pusha
mov
ficompl
fcoms
push
je
js
sbb
scas
scas
dec
pop
xchg
mov
pop
std
test
mov
data16
cmp
dec
sub
or
push
mov
in
shll
mov
mov
movsl
push
adcb
nop
mov
inc
loop
xor
pushf
sub
cmp
jmp
aam
decb
inc
popa
pop
sub
fninit
aam
scas
and
sahf
aad
ja
sub
stos
pushf
xchg
adc
mov
jl
fadd
or
fwait
xchg
jbe
insl
outsb
js
jno
cmp
xor
jge
ss
fisubl
dec
imul
cmc
test
leave
xchg
aam
rcll
fs
cmovp
mov
sub
push
out
ss
lock
je
popf
sbb
mov
sub
pop
and
cmpsl
das
push
and
and
mov
fsubs
sbb
mov
jmp
jb
mov
int
jmp
jno
or
stos
pushf
cli
lods
xchg
lret
push
and
and
pop
mov
out
add
or
movb
mov
pop
sub
jl
jmp
insb
cmc
or
cwtl
aad
and
loop
pop
daa
add
mov
mov
jnp
stos
xchg
sub
mov
lock
in
inc
xchg
sbb
inc
xchg
xchg
lret
dec
jmp
jmp
lret
jns
xchg
cmp
add
sub
test
add
outsb
in
and
hlt
push
and
mull
adc
and
repnz
push
or
call
jbe
cli
hlt
jnp
nop
pop
mov
dec
lods
je
or
and
scas
hlt
loop
scas
out
adc
mov
mov
clc
mov
xchg
loop
mov
arpl
adc
data16
push
inc
ds
jg
ficomps
leave
and
mov
scas
lods
icebp
xchg
sub
mov
call
and
outsb
or
push
xchg
mov
shl
dec
sub
xchg
lods
push
clc
ljmp
xchg
jp
sub
lods
or
sub
cs
shlb
in
push
jl
hlt
ss
ds
and
sbb
test
sub
mov
shlb
dec
and
lea
imul
je
iret
jb
es
cli
sbb
stos
sbb
popa
jmp
and
leave
adc
xchg
mov
mov
dec
mov
out
adc
xlat
mov
sti
cmpsb
xor
inc
dec
test
push
loop
mov
or
int
mov
pop
xor
or
push
jg
xchg
pusha
and
aas
push
imul
or
inc
jecxz
mov
jae
xchg
mov
aam
mov
shll
aas
outsb
lret
jp
out
inc
mulb
inc
outsl
cmp
cmc
pop
or
mov
xchg
loopne
insl
and
cmp
sub
jne
hlt
lahf
rol
loopne
cmc
inc
out
je
push
in
mov
insb
jb
jp
call
pop
push
and
jae
jg
push
shrl
inc
test
lock
notl
dec
sub
and
or
ja
xor
lahf
sbb
bound
mov
cmc
test
hlt
sbb
and
or
js
cmpb
loope
cli
call
in
push
test
clc
call
lds
push
mov
aaa
xor
jge
test
paddsw
and
cwtl
int3
lea
sub
jge
sbbl
add
dec
out
dec
test
mov
push
mov
sub
movsb
repz
mov
mov
lahf
pop
and
dec
adc
mov
cmp
fdivrl
jb
negb
add
inc
loop
inc
pop
sub
mov
outsl
pop
mov
pop
sarl
jmp
std
mov
xor
mov
sti
icebp
dec
std
aaa
inc
mov
jo
mov
mov
aam
negl
add
push
addr16
outsb
inc
repz
jno
int3
pop
dec
call
cltd
lods
aas
xorb
xchg
mov
push
les
mov
in
data16
test
out
lahf
lret
pop
testl
bound
out
cmpsl
iret
pop
jbe
add
or
sbb
nop
cli
test
in
mov
adc
jns
jb
push
nop
pop
popl
mov
adc
icebp
or
js
pop
xor
push
dec
setne
sub
xchg
lods
bound
sub
js
add
rol
pop
daa
daa
or
stc
mov
mov
inc
bound
push
xor
push
subl
iret
push
xchg
xor
cmc
repz
repnz
fcmovb
add
imul
pop
loop
sbb
cld
stos
into
mov
adc
dec
stc
and
mov
xor
push
fdivrs
cmp
mov
or
testl
jae
mov
shr
cmp
or
jle
addr16
sbb
inc
xchg
fwait
pushf
xor
imull
cmpsl
or
nop
lret
and
or
jne
pop
mov
mov
jno
movsb
loop
dec
ljmp
or
cmp
and
pop
ret
setns
mov
jmp
mov
adc
push
nop
add
dec
pop
and
aas
jl
ret
dec
shlb
or
in
push
mov
outsl
push
adc
js
pop
fwait
or
xchg
sbb
dec
fwait
pop
scas
ljmp
addr16
push
shrb
xor
push
jbe
and
mulb
pop
pop
js
mov
cs
lret
cld
push
icebp
sub
and
movsl
cmp
xchg
ja
lds
pop
and
adc
add
push
aad
lret
cmp
lock
cld
flds
xchg
xor
rorl
push
xor
out
mov
xor
mov
adc
mov
int
xor
je
aam
jae
cmp
daa
insb
sarl
in
in
bound
adc
int
js
stc
out
aas
inc
das
xchg
in
xchg
mov
xor
xor
cmp
pop
xor
push
pop
dec
jle
out
pusha
mov
sbb
or
xor
aas
mov
mov
cmpsb
inc
hlt
imul
and
aaa
pop
imul
push
ja
pop
leave
xchg
aad
mov
into
jne
jns
xchg
orl
gs
cmp
push
dec
pop
pop
call
repnz
xchg
mov
mov
cmp
lds
pop
cmp
push
scas
pushf
pop
adc
xor
push
lcall
dec
push
sbb
mov
ficompl
mov
jmp
pop
inc
test
dec
xor
jae
out
pop
data16
cmp
fisubs
cmp
mov
pushf
jecxz
call
xor
rcr
ds
and
push
ja
cmp
movsb
popf
pusha
cmpsl
fs
pop
sbb
add
and
xor
in
jo
fimuls
push
jb
into
shlb
icebp
inc
aas
sarb
sub
adc
pop
ret
mov
lock
hlt
lahf
loop
adc
xchg
mov
jmp
stc
xor
dec
sbb
mov
idivl
jno
hlt
and
xorl
push
ja
movsl
inc
inc
inc
push
mov
pop
push
adc
loop
mov
inc
xor
bound
mov
sahf
mov
xor
fadd
push
movsl
incl
scas
fcmovu
xchg
aas
loope
sub
imul
jecxz
push
movb
dec
out
loopne
sbb
imul
xchg
mov
xchg
call
insl
aad
ja
cmp
dec
inc
sbb
stc
adc
stc
clc
fs
add
pop
lock
aas
fisubl
or
jecxz
fstpt
stos
sarb
cmp
sub
aam
call
xor
add
out
add
ret
mov
clc
mov
push
sbb
sub
mov
pop
lret
adc
jmp
pushf
dec
iret
call
outsb
push
movsl
repnz
int
mov
xchg
out
mov
scas
dec
rolb
xor
js
imul
movsb
cmp
cmp
fwait
sar
faddp
mov
cli
cmp
lea
idivb
ret
add
out
mov
cs
lahf
cmc
bound
pop
mov
jle
cmpl
dec
lods
sub
mov
filds
addr16
lret
sar
imul
into
es
jmp
inc
mov
sti
mov
dec
ds
sub
outsb
mov
cmp
mull
xchg
rcrb
stos
mov
mulb
and
dec
push
sbb
xchg
gs
jg
loope
fidivrl
mul
mov
enter
dec
adc
adc
adc
icebp
xchg
das
sbb
adc
addr16
xchg
adc
test
movsb
repnz
pop
in
dec
dec
mov
orl
xor
out
xor
jl
xchg
sub
jle
cmp
test
push
pop
inc
cmp
mov
popa
sub
icebp
jecxz
push
xchg
out
mov
ficompl
out
testl
sbb
cmp
cmp
push
mov
xor
divb
or
mov
pop
sbb
imul
sub
mov
scas
push
push
stc
pop
and
mov
lea
pop
scas
ret
imul
sub
and
daa
sub
add
cmpsl
mov
push
orl
imul
cld
out
pop
sbb
xchg
add
daa
popl
stc
shlb
in
repz
xchg
inc
sbb
push
mov
add
push
int3
inc
push
sbb
dec
inc
shlb
jp
movsb
mov
mov
jne
mov
notb
fnstenv
jge
pop
sbb
imul
adc
or
pop
pop
call
in
mov
imul
out
pop
movsl
pop
cli
out
test
adc
aad
shlb
cmp
jno
xchg
faddp
pop
push
xor
icebp
mov
dec
in
adc
pusha
inc
mov
insl
enter
faddp
in
mov
insl
add
jo
in
xchg
and
or
dec
fnstcw
dec
push
or
mov
mov
aam
in
pop
mov
stc
dec
push
in
cltd
or
lcall
aas
stc
adcb
mov
xlat
pushf
subb
outsb
xorl
jns
adc
mov
inc
mov
cmp
pop
test
mov
push
mov
xor
dec
jb
or
or
aad
jbe
mov
add
pushf
jo
pop
pushf
hlt
popf
add
xchg
rolb
lods
andl
stos
fcomps
orl
jbe
and
jbe
adcb
push
jmp
mov
shll
mov
cwtl
mov
inc
ret
jne
notl
pop
jns
mul
cltd
inc
scas
adc
outsl
mov
add
adc
shlb
xchg
movsl
pop
or
dec
push
xchg
lea
fsubrs
mov
xor
scas
bound
and
jns
les
push
scas
mov
mov
mov
mov
ljmp
jae
pop
mov
push
adc
inc
test
xchg
push
mov
in
mov
sbb
clc
lods
mov
icebp
inc
jmp
clc
pop
adc
sbb
push
cli
jo
xor
inc
cmp
jecxz
dec
inc
pop
insb
and
or
cmp
dec
rorb
adc
mov
not
test
push
loope
iret
fiaddl
test
aad
sbb
scas
loop
aaa
mov
dec
sbbb
fistl
mov
mov
dec
cmp
icebp
lret
aas
shrl
mov
mov
xchg
aam
stc
mov
enter
cmp
jge
pop
mov
test
and
sub
sub
xor
fstpl
mov
add
mov
stos
out
flds
mov
je
dec
sahf
int
push
je
mov
icebp
insl
add
stos
pop
pop
aad
sub
jge
adcl
sbbb
out
outsb
fidivrs
daa
notl
js
pusha
sti
adc
jmp
xor
cmpsb
sub
addr16
pushf
inc
mov
jae
add
cmp
ret
inc
bound
jle
adc
ret
adc
push
jge
dec
aas
pop
pusha
mov
leave
repnz
rcrl
sbb
or
mov
bound
mov
inc
cmp
cmp
mov
mov
orl
lea
lods
je
js
ljmp
pusha
sbb
and
or
imul
and
clc
out
lods
les
push
outsl
sbb
xor
icebp
jbe
add
inc
aas
int
loopne
inc
xchg
pcmpeqd
out
in
or
in
jp
xchg
sub
movb
adc
dec
or
int
repz
jge
mov
ds
in
lods
mov
test
jmp
mov
les
xchg
lahf
mov
xor
rol
dec
dec
jno
aaa
push
or
std
pop
fidivs
aad
mov
movsb
mov
adc
in
and
dec
into
lods
bound
sub
xchg
outsb
mov
aam
xor
movzwl
fsubrp
pop
loope
std
dec
cmpsb
lahf
xorl
nop
jne
mov
inc
outsl
jmp
mull
push
push
sbb
aam
jnp
out
sub
addr16
std
and
mov
fs
adc
inc
pop
jmp
sub
fstps
push
dec
jo
sub
fcomi
push
rcll
pushf
out
or
fwait
dec
adc
mov
jle
bound
in
pushf
mov
mov
sbb
mov
jbe
outsl
pop
nop
push
mov
sti
mov
test
and
int3
adcl
inc
and
decl
aas
push
movsb
push
in
adcl
pop
nop
adc
js
repnz
sub
pusha
pusha
mov
cmp
jle
int
dec
iret
mov
add
dec
inc
mov
or
nop
mov
add
int3
push
cli
fisubrl
pop
pop
mov
mov
mov
sbb
push
pop
jbe
or
sahf
test
and
jmp
rolb
jbe
fidivrl
loop
filds
jno
cld
pop
lcall
dec
xchg
dec
add
jg
sti
popa
repnz
mov
movb
and
mov
movsl
jb
sbb
mov
leave
inc
xchg
and
into
mov
in
pop
mov
call
sub
inc
rcrb
scas
add
mov
popa
jge
sbb
and
push
jg
out
repnz
mov
sub
adc
inc
push
xchg
dec
sti
mov
mov
mov
in
mov
test
int3
and
jge
pop
daa
jnp
push
leave
mov
sub
cmc
outsl
lahf
dec
rolb
xchg
xor
cmp
inc
outsb
imul
lret
insb
inc
enter
test
sahf
and
add
fstpt
scas
cmpsb
and
shl
fs
jl
push
sub
and
nop
xchg
stos
test
cmc
and
sbb
or
cld
hlt
data16
fnstsw
sbb
mov
dec
loope
mov
fimull
fdivl
idivb
jmp
adc
inc
enter
fwait
movsl
xor
inc
stos
xchg
xor
xor
jo
div
push
jge
mov
cli
mov
mov
and
mov
ret
fdivrp
or
mov
iret
test
push
js
sbbl
repz
rclb
fsts
outsl
push
xor
imul
mov
pop
xchg
xchg
out
mov
push
dec
andb
cmp
incl
ror
pop
les
adcl
jo
enter
lcall
mov
push
jns
inc
loop
or
jne
mov
add
or
dec
or
mov
push
cli
push
lret
imul
dec
jns
push
xor
lahf
xor
add
xor
inc
out
push
ss
vpsadbw
add
pop
int
adc
mov
xor
jns
insl
sub
mov
std
loope
add
or
lcall
sbb
repnz
jmp
pop
xchg
mov
insl
dec
fscale
shrb
add
sbb
ja
imul
push
repz
out
jmp
jne
add
xchg
int3
mov
jg
std
je
dec
add
dec
nop
fldl
adc
or
pushf
add
jnp
xlat
dec
sbbl
mov
sub
cmp
imul
mov
lret
decb
outsl
jecxz
insb
mov
pop
or
and
loop
cmp
and
push
leave
xor
mov
pop
lahf
sahf
jo
cmp
std
movsl
push
out
out
xchg
push
aam
iret
mov
leave
jnp
ret
jb
fstl
in
add
fists
pop
xchg
popa
cmp
pop
push
or
addr16
out
inc
jp
dec
lock
enter
fsubrs
xchg
jno
sub
repz
iret
mov
xchg
out
popf
daa
fsts
dec
pop
push
and
aad
fmull
mov
out
push
cmp
mov
pop
dec
push
jl
fs
movzwl
push
ja
stos
dec
mov
js
add
add
mov
fcmovnbe
cli
push
ret
jno
pop
test
outsl
or
mov
insb
xchg
sub
and
movsl
xchg
add
loop
add
adc
xlat
add
fstpl
aaa
enter
adcl
add
xchg
std
inc
lods
rclb
inc
adc
add
iretw
test
mov
pop
push
push
pushf
adc
fisubs
data16
call
push
ss
int3
jmp
int
sahf
sbb
int3
push
add
jecxz
das
aam
sarl
add
pop
xor
add
xchg
test
stc
das
lahf
mov
add
idivb
lahf
mov
lret
pop
scas
sub
testl
mov
fldcw
in
mov
xchg
mov
mov
and
jmp
or
outsb
dec
loope
xchg
mov
and
leave
sbb
imul
pop
int
stc
push
lods
rolb
roll
pop
mov
mov
xlat
xlat
xchg
lahf
mov
pushf
dec
nop
jge
pop
loop
std
adc
orl
sti
sub
jp
rcrl
int
xchg
aam
mov
cmp
pusha
or
lret
stos
jns
jg
and
jae
jl
fistpl
andb
popa
mov
movsb
idiv
rcl
shrl
xchg
add
jmp
cmp
cs
int
mov
push
push
mov
jg
idivl
push
dec
lods
out
jns
adc
mov
sub
movl
cs
or
sub
lahf
in
dec
shrb
adc
sbb
loopne
mov
das
sbbb
jo
iret
xorl
mov
popf
cwtl
es
xor
jmp
lods
sub
pop
data16
popa
or
xchg
adc
aaa
jne
ret
pusha
into
inc
pop
fwait
icebp
jbe
pop
divb
outsl
sub
mov
sub
jle
icebp
xchg
fdivl
ja
fwait
data16
ret
lods
fwait
sti
adc
sub
mov
push
xchg
mov
xor
jle
push
lods
push
cli
mov
and
mov
out
loop
mov
dec
popa
ret
dec
test
aaa
pop
add
ficompl
cs
mov
or
lea
pop
repnz
out
inc
mov
push
int3
lret
hlt
ds
jns
pop
xchg
ficoml
test
add
lds
ror
cld
xor
lods
push
test
and
inc
adc
loop
jo
adc
insl
push
pop
iret
inc
mov
cmp
push
sbb
mov
fisttps
dec
inc
movsb
sbb
lcall
jle
aad
pop
imul
cltd
sbb
outsb
hlt
sbb
mov
and
adc
nop
dec
arpl
add
cli
inc
ficoms
out
or
test
xchg
out
push
push
mov
stos
ret
popf
in
xchg
fs
sub
cmpsl
stc
adc
nop
loope
inc
shlb
sub
sti
pusha
xor
dec
push
loop
cmp
jecxz
sahf
sub
pop
shr
mov
push
pop
xchg
add
pusha
xor
mov
gs
fisubl
push
adc
jns
sbb
outsb
jo
or
jl
cwtl
insb
push
cmp
xchg
les
pop
inc
adc
loopne
adc
cmpsl
jecxz
test
pop
push
adc
pop
aaa
adc
divl
lret
xchg
pop
jbe
popa
testb
popf
leave
movsl
movsl
test
ds
and
jecxz
add
aad
sub
mov
xor
lea
sub
adc
or
es
cmp
int3
test
jae
jmp
inc
cld
mov
test
sub
ljmp
or
rcr
mov
mov
aaa
rol
clc
aam
pusha
fistpll
jns
dec
ret
mov
sub
sbb
aam
or
dec
mov
in
jne
cs
pushf
inc
into
repnz
int3
decl
sahf
mov
pop
sbb
adc
repz
dec
sub
out
mov
push
add
jae
sub
dec
xor
mov
or
add
dec
leave
lcall
pop
js
jmp
xchg
das
test
outsb
sub
xor
leave
xchg
shrl
iret
jbe
xchg
shll
and
adc
cltd
test
into
mov
neg
icebp
repz
ret
pop
push
adc
cmp
mov
jne
mov
sbb
pop
sbb
and
loopne
insl
enter
test
mov
mov
sub
and
xorl
cmp
mov
push
mov
add
or
jb
insb
dec
in
test
fcoml
mov
pop
xorb
push
ja
shrb
lds
or
mov
mov
xor
or
mov
mov
dec
imull
xchg
and
fstpt
lcall
jp
sahf
cmpsb
mov
xlat
jl
mov
mov
xchg
mov
popf
stos
loopne
lods
xor
sti
loopne
fnstsw
xchg
xor
mov
or
jno
int
and
cmp
cmpb
xor
dec
testl
xchg
into
lods
push
adcl
jb
push
ficompl
add
jo
test
push
sbb
data16
push
fwait
negl
lcall
mov
mov
mov
lods
inc
test
daa
arpl
dec
cmp
test
insl
pop
pop
sub
nop
mov
inc
ljmp
call
xchg
pop
xorl
adc
in
jo
lods
mov
or
lea
pop
push
pop
sahf
jp
mov
cs
mov
mov
scas
nop
leave
pop
jecxz
and
mov
mov
out
jo
mov
jno
cmc
pop
stos
sbb
inc
rcll
fstpt
lock
jbe
sub
mov
enter
mov
rolb
mov
pop
fstpt
pop
popa
jle
fnstcw
loope
jle
aaa
fldt
rcrl
sbb
shl
in
mov
out
jae
sarb
push
sub
cmp
adc
cmp
jne
mov
adc
ret
push
mov
movsl
mov
sahf
and
mov
mul
lcall
mov
adc
pop
mov
clc
adc
cmp
pushf
adc
jo
popf
add
mov
cmp
out
adc
xchg
add
pop
pop
dec
or
loopne
mov
dec
mov
add
add
fwait
push
lahf
jne
push
mov
cmp
mov
mov
mov
jl
push
cld
mov
jmp
leave
cmp
mov
fnclex
leave
xchg
jg
pop
fmuls
in
push
les
in
jne
cwtl
cmpsl
pushf
push
das
addr16
ss
pop
movsb
cmp
pushf
xchg
jb
cmp
call
pushf
incl
out
adc
push
xor
das
adc
inc
add
pop
mov
dec
mov
xor
xor
mov
popf
mov
aam
dec
das
mov
pop
dec
shlb
pushf
push
pop
loop
ds
mov
jbe
xchg
xchg
rcrb
repz
outsb
sbb
hlt
test
insb
mov
xchg
into
inc
into
insb
insb
pop
addr16
ja
or
outsb
in
lods
aam
iret
test
imul
iretw
popf
es
fsubrs
mov
sbb
out
cmp
insl
stc
arpl
push
sbb
add
lock
in
pop
mov
in
push
jne
mov
lock
sbb
insb
test
lcall
mov
xor
jge
sub
mov
fisubrs
mov
lock
xchg
push
dec
shl
aas
adc
sub
imul
repz
pop
pop
pop
repz
xchg
mov
push
cmp
pop
dec
aas
mov
mov
mov
cs
jnp
lcall
call
mov
sbb
adc
push
adc
stos
in
scas
or
and
dec
pop
inc
pop
mov
pop
dec
and
ss
jbe
jmp
cmpsl
sub
cmpsl
inc
jecxz
push
jnp
adc
leave
jmp
outsb
cmp
inc
inc
xor
scas
inc
inc
add
add
int3
cmp
xchg
dec
stos
loop
insl
jnp
testl
stos
cmp
test
lahf
scas
loop
clc
leave
icebp
in
or
pop
les
or
and
sub
or
mov
in
mov
icebp
mov
xor
test
and
idivl
dec
mov
mov
sub
mov
dec
outsb
lret
or
and
and
pushf
cltd
mov
or
stos
sti
adc
sbb
sub
and
stos
inc
shrb
mov
in
xor
cmpsb
or
mov
adc
repnz
cmp
outsl
push
icebp
cli
fimuls
dec
jb
out
push
lods
push
and
int
fcompl
mov
ror
mov
jae
push
scas
mov
push
hlt
sbb
insl
outsb
mov
ret
jne
xchg
leave
sub
fldl
addl
cmp
cmp
bnd
pushf
cmp
movsb
sub
test
adc
dec
mov
ret
in
mov
jns
dec
jo
lea
mov
pop
loop
jmp
mov
mov
mov
js
insl
jb
scas
ror
sbb
inc
adc
sbb
sbb
cmp
mov
lods
adc
mov
dec
jb
xor
mov
cltd
pop
call
sahf
sbb
pop
andl
sbb
inc
mov
lock
cwtl
popa
aaa
pushf
sbb
and
sub
xor
pop
sbb
cmp
ret
lret
nop
sti
cltd
mov
inc
cmpsl
sbb
jg
out
xchg
fistpl
fistpll
sub
and
fldl
pop
mov
cmp
inc
addr16
jle
cmp
mov
cli
mov
push
loope
test
je
movsb
and
xor
mov
jecxz
xchg
mov
jg
dec
mov
jp
std
dec
sbb
xor
pop
cmpsl
sbb
push
enter
fmuls
arpl
mov
pop
or
xor
sub
scas
lret
or
dec
pop
mov
sti
mov
popa
std
xor
in
rcll
lds
pop
xchg
sbb
or
outsb
mov
xor
dec
pop
jp
xchg
add
push
add
loope
in
inc
ret
xor
in
fwait
mov
jne
clc
icebp
int3
xchg
xlat
inc
dec
pop
out
xlat
inc
daa
adc
movsl
jmp
pop
mov
jo,pt
cmp
mov
add
popf
data16
inc
hlt
out
push
sbbb
push
repz
sub
insb
cmp
lcall
mov
fistps
inc
inc
sub
cmp
mov
sbb
push
test
in
lock
sub
inc
cmpb
inc
or
mov
jle
test
outsl
cmp
sbb
std
insl
xchg
and
mov
ljmp
mov
out
jecxz
dec
cmpsl
cwtl
mov
or
adc
movsl
inc
movsb
sbb
cmc
and
sub
pop
cld
cli
jb
mov
cmpsl
inc
inc
clc
aam
pop
loopne
sub
orb
into
std
xlat
pop
loopne
adc
xchg
lods
or
mov
sub
mov
out
and
pop
mov
mov
jno
jae
mov
or
jnp
lds
and
loop
nop
push
repnz
or
ja
int
mov
sbb
out
mov
or
lods
clc
mov
outsl
idiv
xchg
hlt
push
inc
mov
jae
jo
je
sbb
loope
xor
adc
inc
pop
aam
dec
sbb
ret
and
in
dec
subl
enter
dec
mov
insl
mov
int
ficompl
jp
and
cs
addr16
cmc
cwtl
and
xchg
test
inc
jle
test
bound
out
inc
hlt
rol
lods
out
daa
cmp
add
repnz
sub
loope
cmp
loopne
hlt
cmp
mov
inc
insb
scas
loop
jp
mov
or
outsb
dec
iret
cli
jne
mov
xchg
lret
jae
pusha
repz
rclb
aam
mov
mov
lods
stos
ret
xchg
add
or
inc
pushf
mov
dec
jbe
adc
inc
test
dec
xor
jle
jp
add
dec
cmp
lods
mov
add
pop
insb
fldcw
push
test
lds
test
push
jp
sbb
orb
inc
mov
fwait
push
lods
add
adcl
sahf
ljmp
jl
in
mov
mov
aaa
hlt
add
adc
scas
jp
and
fistps
sbb
push
push
es
or
int3
pusha
xor
negl
add
shrl
or
mov
mov
pop
inc
cmpl
cwtl
out
imul
add
sub
cs
or
mov
mov
flds
mov
test
xchg
lock
lret
movsl
fimuls
cmp
mov
sahf
cmpsl
loopne
pop
pop
shr
int
sub
aas
fldenv
ja
add
bound
jo
mov
push
pop
pop
and
cmp
adc
movsb
aam
push
std
add
mov
daa
mov
repz
call
jbe
repnz
dec
or
sahf
mov
les
dec
and
xchg
in
jge
cmp
icebp
icebp
out
int3
push
pop
ljmp
mov
xor
imul
ljmp
cltd
sti
jge
repz
in
mov
repz
sbb
pop
xchg
les
mov
sub
and
rcr
mov
lcall
cmc
imul
inc
mov
mov
jbe
dec
xchg
dec
rcll
push
mov
sub
or
pop
mov
je
mov
mov
jnp
sub
push
js
loopne
mov
jl
add
jns
out
inc
stos
fwait
pop
aad
inc
mov
jnp
push
in
testb
lret
add
ret
and
inc
pop
out
pop
and
popf
jno
mov
xchg
sub
data16
lds
leave
adc
jle
dec
insl
push
dec
test
add
out
or
rcr
jb
adc
xor
repz
shlb
leave
negl
sbb
pmuludq
lret
lods
cmp
sbb
in
jns
dec
out
and
dec
mov
dec
mov
mov
mov
ss
sub
sti
sub
or
push
mov
jmp
pop
daa
xor
icebp
pop
mov
push
xor
mov
add
push
mov
rcr
loopne
jbe
fldt
jmp
xchg
and
mov
div
mov
out
jp
mov
test
test
test
dec
jecxz
icebp
dec
shll
and
pop
sbb
arpl
test
nop
pop
ret
pop
mov
addr16
imull
pop
and
xchg
push
call
mov
pop
adc
les
mov
jbe
mov
pop
adcl
movsl
psubusw
push
add
insb
std
pop
add
xor
in
mov
xor
iret
sbb
mov
push
xchg
sub
ds
ret
lods
sub
dec
aaa
dec
xor
les
inc
jge
pop
pop
sub
int
ret
arpl
mov
mov
add
adc
xchg
dec
outsl
mov
lds
jae
xor
andb
jge
shr
fmull
xchg
pop
xchg
or
ljmp
jl
ja
cmp
and
js
or
add
mov
popa
sbb
add
sub
mov
dec
add
adc
ret
inc
push
jae
cmp
lret
inc
jo
pop
add
push
sbb
imul
mov
jns
push
mov
gs
cmp
popa
icebp
stos
xorl
sub
xor
test
cmp
xor
dec
pop
push
inc
lcall
icebp
aaa
jo
pushf
scas
and
lds
shrb
xor
test
xchg
pop
push
adc
add
and
mov
lods
and
ror
add
mov
js
xor
mov
add
cmp
adc
dec
pop
jge
cmp
lahf
dec
cltd
mov
and
ds
idivl
ret
ds
dec
fwait
sub
xchg
and
mov
fnsave
andl
movsl
mov
fsubrs
xor
push
mov
pop
sub
lret
bnd
lahf
sub
jae
or
es
mov
into
je
movsl
cmpsb
std
inc
andl
xchg
aad
xchg
jl
mov
jl
push
jg
jnp
test
icebp
fistpl
mov
ret
xor
mov
in
stc
movsb
and
push
adc
xchg
pop
out
inc
les
movsl
icebp
jle
xchg
jo
push
pop
inc
les
mov
lret
mov
pop
fcompl
mov
push
inc
inc
mov
cmc
or
dec
cmp
xchg
enter
and
sbb
push
jge
outsb
mov
push
pop
mov
mov
xor
jo
xchg
data16
movsl
das
mov
out
es
or
mov
inc
sti
fucomi
pop
cs
cmp
call
in
add
mov
xchg
dec
movl
icebp
pop
pop
dec
inc
dec
loope
xchg
push
decl
cmp
cli
pop
mov
add
repz
jns
jg
rclb
inc
pusha
or
jne
dec
ffree
or
pop
jg
sbb
xlat
mov
aas
ret
ss
in
jecxz
fsubl
xorb
mov
mov
fs
cmp
out
incl
mov
add
je
add
mov
subl
add
mov
mov
dec
pop
sti
push
pop
shlb
xchg
xchg
adc
push
aad
push
mov
mov
insb
push
dec
cmpsl
xor
adc
add
push
xor
mov
test
mov
lret
cmp
sbb
jae
insb
pop
iret
sub
lea
movsl
adc
mov
loop
mov
inc
ss
inc
jge
mov
mov
addr16
fistps
popf
lret
mov
xor
sbb
pop
mov
hlt
mov
fisubs
mov
xor
out
insb
scas
shlb
inc
std
and
mov
adc
cld
andb
mov
mov
and
gs
mov
fildl
jne
xchg
jb
icebp
scas
arpl
mov
mov
dec
push
mov
imull
lea
xor
mov
adc
lea
cmpsl
ror
cwtl
mov
mov
add
sub
xchg
stos
out
inc
out
into
push
mov
push
or
nop
pusha
scas
scas
mov
std
adc
pop
hlt
add
pusha
sub
mov
add
xchg
pop
mov
scas
imul
shlb
jbe,pn
adc
xor
add
std
xchg
mov
sahf
lcall
dec
cmpb
das
pop
jnp
or
pop
xor
enter
leave
push
mov
add
lahf
daa
sbb
fistps
out
pop
stc
fwait
cltd
mov
add
jae
inc
mov
pop
push
push
mov
aas
pop
icebp
lret
sub
jno
cmp
cld
xchg
jmp
cwtl
daa
fcompl
jns
int3
pop
pusha
mov
iret
push
push
cli
jb
mov
aas
lea
imul
xlat
dec
icebp
mov
repnz
push
ret
dec
sbb
sbb
pushf
pop
mov
mov
test
xchg
imul
insb
push
ret
push
mov
shr
pop
or
add
mov
nop
lcall
mov
pushf
mov
mov
add
xor
roll
movsb
xor
add
push
bound
notl
outsl
push
insl
ds
push
divb
lcall
outsl
jbe
xor
jo
xor
sbbl
rclb
fsubrs
and
push
and
std
xchg
mov
jne
rcll
sbb
pop
push
inc
stc
idivl
cltd
aam
cli
stos
imul
add
and
fsts
subl
sub
ds
jnp
mov
cmpsl
mov
orl
fs
push
nop
ds
jnp
cmp
inc
lsl
stc
test
adc
shlb
and
sub
mov
sbb
jns
fldl
mov
pop
mov
int3
inc
add
cs
sub
test
inc
cmp
lret
mov
rclb
ret
pop
push
sub
out
jmp
sar
mov
inc
or
xor
pop
mov
push
adc
xchg
pop
xor
sub
daa
push
fnstenv
jp
sub
out
in
or
sbb
fildll
mov
mov
mov
call
mov
dec
cmp
push
cmpsb
pop
jecxz
cli
sysenter
inc
std
rorb
out
sub
xchg
sbb
repz
jge
jmp
icebp
mov
sti
inc
test
mov
add
ljmp
mov
mov
hlt
mov
into
xchg
mov
xor
or
scas
pusha
daa
ljmp
imul
jl
int3
call
push
jns
add
mov
sbb
push
inc
xor
pop
mov
popa
inc
inc
jmp
pop
mov
sub
loopne
push
pop
insl
cmp
jo
pop
inc
fimuls
hlt
adc
sbb
cltd
dec
jl
jbe
test
inc
loop
imul
adc
dec
adc
mov
push
cmp
dec
mov
jo
pop
and
cmp
jecxz
inc
scas
gs
les
and
adc
lret
pusha
out
dec
shll
lds
mov
lret
inc
push
or
lcallw
push
or
push
testl
pop
inc
jo
cmp
jp
fs
cmp
das
mov
push
outsl
sbb
inc
xchg
shlb
sbb
sbb
sbb
les
addr16
frstor
movl
stc
nop
movups
addr16
bound
in
lret
push
in
movsl
push
hlt
jmp
cwtl
jg
lods
inc
mov
negl
in
out
cltd
xor
je
push
xchg
and
fdivrl
and
ror
jb
cmc
mov
inc
pop
jb
mov
xorb
out
xor
idiv
test
pop
jno
jle
add
cli
sub
pop
inc
adc
cmp
mov
scas
ret
mov
call
clc
or
aaa
shlb
and
jecxz
popa
xchg
push
push
pop
bound
clc
stc
pop
je
xchg
lcall
jbe
add
and
sub
enter
pop
pop
mov
push
into
xchg
sti
adc
cmpb
jo
clc
inc
mov
inc
pop
mov
sbb
inc
out
cmp
gs
adc
iret
add
mov
mov
jmp
mov
cmp
ficompl
mov
dec
js
adc
iret
push
push
pusha
inc
dec
adc
and
and
pop
xchg
pop
mov
data16
repz
nop
dec
push
lods
testl
cmpsl
mov
xchg
and
rcrb
iret
lods
out
and
cmp
scas
jge
jne
decb
inc
or
es
and
test
idivb
add
inc
fs
or
in
add
sub
xchg
cmp
inc
ret
xor
and
jmp
gs
popa
popa
aam
dec
int3
decl
pop
imul
cwtl
or
mov
jecxz
sub
push
outsb
mov
inc
ret
rcrb
cmp
fistpl
and
push
push
xor
popf
or
out
mov
cli
add
xor
or
xchg
lock
and
out
movsb
lret
sub
mov
push
push
not
pop
inc
push
push
sbb
or
xchg
loope
mov
mov
jl
xor
sbb
dec
ss
mov
mov
dec
test
adc
cmp
mov
pop
or
loop
test
movsb
sbb
inc
std
repnz
inc
mov
cli
test
rolb
dec
xor
sub
mov
or
mov
sbb
imul
or
push
push
test
cmp
or
and
mov
mov
push
ficoms
js
push
mov
mov
xor
sub
pop
in
addl
inc
cli
sbb
leave
sub
repz
in
shll
and
dec
xor
pop
test
jns
inc
shrb
or
in
das
cmpsb
bound
aad
popf
cmp
clc
sarl
out
pcmpeqb
inc
enter
dec
arpl
fnstsw
sarb
shll
pop
dec
sbb
cmpsb
cmc
adc
sub
xchg
pushf
fistpl
push
rcr
loope
cmpl
mov
scas
mov
bound
and
test
sbb
dec
adc
nop
dec
mov
into
push
popa
push
sub
int
imul
icebp
xchg
adc
enter
fidivl
es
xchg
mov
clc
js
pusha
sbb
fldcw
inc
xor
test
fs
inc
inc
sub
rcrb
int3
insl
xor
mov
icebp
addr16
js
insl
mov
nop
cs
fwait
push
shlb
stos
xchg
lods
add
jae
mov
cwtl
stos
jmp
push
bound
sbb
push
inc
nop
incb
test
push
add
inc
mov
pop
orl
mov
sbb
jno
sbb
outsb
pop
imul
mov
pop
cmp
das
cltd
add
outsb
jmp
test
int3
cld
nop
pop
inc
inc
jge
data16
sub
mov
das
rorl
ja
pop
lods
xchg
negl
sub
xor
in
mov
stos
aam
test
divl
shlb
jmp
mov
test
add
js
mov
es
lds
imul
cmp
in
shrb
lods
daa
ret
mov
dec
fsubrl
push
jmp
add
push
adc
sahf
dec
mov
jle
mov
in
cmp
in
daa
pop
pop
jns
dec
adc
pop
mov
lods
mov
mov
out
sbb
aaa
pusha
xchg
mov
inc
inc
push
js
lods
cmp
test
lea
sbb
sub
cmc
mov
sub
jbe
sbb
pushf
cmpsl
iret
lahf
pop
jmp
testb
xor
dec
pop
inc
cld
push
mov
and
mov
mov
fwait
and
das
xor
xor
out
xchg
ds
pop
sbb
mov
pop
and
jmp
and
xchg
pop
cmp
add
mov
adc
fimuls
and
cltd
cmp
imul
push
xor
push
repnz
ja
sub
stos
mov
or
jecxz
push
outsb
mov
subb
jecxz
sahf
xor
sbb
mov
sti
loop
mov
mov
int3
or
and
mov
mov
hlt
xchg
jae
adc
cmpl
jo
enter
pop
insb
out
sub
jl
sti
jp
daa
shl
add
or
filds
sub
imul
mov
push
popa
xor
fnstcw
pop
clc
shl
dec
pop
dec
push
mov
popf
and
jecxz
lret
sbb
vphaddbw
inc
into
jp
cmp
mov
into
movsb
pop
mulb
cmc
shrb
pop
adc
or
mov
jbe
xor
pop
push
mov
bound
in
aam
sbb
mov
mov
pop
test
icebp
mov
inc
sbb
sbb
into
bound
outsl
jno
fldcw
mov
adc
outsl
pushf
sbb
xchg
pop
adc
push
push
dec
lahf
imul
dec
int
shrl
pop
les
jne
add
jno
addl
and
inc
pushf
push
fstl
es
dec
inc
vpshld
mov
nop
inc
dec
ss
fmuls
adc
xchg
push
fnstenv
fwait
mov
subb
cltd
hlt
mov
inc
pop
mov
push
je
and
jo
jge
mov
inc
mov
and
popa
aad
cmp
mov
xor
cld
loope
hlt
pop
out
or
mov
int
xchg
xlat
sahf
dec
xchg
das
xlat
xchg
push
push
shlb
cld
stc
addb
jno
push
adc
mov
pop
out
clc
jg
push
and
and
nop
leave
xchg
push
push
cmp
or
and
ret
ficoms
int
test
mov
add
pop
pop
dec
jns
push
or
push
jmp
pop
cld
inc
pop
jb
or
push
cmpsb
gs
mov
mov
dec
jns
sbb
out
jecxz
icebp
push
cld
mov
mov
sbb
add
inc
xchg
jo
push
inc
xchg
xor
mov
and
divb
or
fwait
push
inc
test
adc
orb
xor
movb
out
outsl
pop
popf
inc
enter
imul
iret
int3
clc
add
xchg
enter
jo
dec
mov
push
xor
test
aam
mov
dec
aad
repz
das
push
pop
lods
les
jge
inc
mov
mov
xor
out
test
stos
iret
enter
ja
dec
pop
in
mov
inc
xchg
pop
fidivrl
jb
in
inc
stos
cmp
pushf
loope
xor
call
xchg
jbe
enter
ss
addr16
add
sbb
jg
lahf
pusha
ffree
pop
jne
out
ret
lods
clc
lods
xlat
in
sbb
xchg
movsb
push
mov
mov
lds
mov
mov
and
jge
fistpll
mov
cltd
xlat
das
popa
xlat
pop
fwait
clc
or
push
cmp
dec
cltd
fstenv
dec
je
cmpsb
jno
lret
sub
push
enter
inc
xchg
lcall
push
or
dec
insb
test
mov
mov
repz
call
nop
xchg
cmp
push
add
cmp
sub
push
inc
cld
dec
lahf
incb
imul
or
mov
or
sbb
jns
xor
arpl
pusha
mov
push
stc
lods
dec
xchg
lods
andl
lret
adc
into
pop
cmp
xchg
sbb
dec
imul
repz
insl
outsb
mov
push
out
push
push
aas
add
scas
xchg
fldt
scas
push
jne
cmp
jl
push
movsl
les
xor
sub
imul
stos
test
inc
or
adcb
divb
mov
in
inc
lods
pop
inc
fdivp
add
push
add
pop
push
outsl
inc
pop
pop
mov
out
data16
je
and
or
cmp
imul
inc
and
outsl
and
cmp
push
les
jb
xor
popf
verr
ljmp
pop
fdivr
bound
fstl
adcl
xchg
adc
xchg
mov
mov
push
in
cli
inc
rorl
xchg
cwtl
insl
sub
cwtl
mov
cmpsl
xchg
ror
out
lea
stos
mov
and
test
mov
mov
xor
out
and
fldenv
xchg
insl
popa
leave
cmc
push
push
test
jle
rorl
jmp
int
sub
dec
xor
int3
push
loop
stos
fcomps
into
out
and
cltd
pop
out
jae
ret
mov
mov
fisubrl
in
repnz
and
sub
jmp
cmp
outsl
sbb
mov
bound
mov
dec
or
mov
push
pop
cmpsl
popf
adc
xchg
iret
lods
fs
jle
or
lods
out
xchg
push
jp
icebp
sub
inc
dec
cmpsb
mov
push
sub
movsb
pop
push
mov
dec
outsb
pop
cmpsb
idivl
fildl
sbb
leave
sahf
sub
dec
fs
cmp
pop
or
add
test
enter
adc
and
sub
mov
mov
mov
jp
out
ljmp
mov
dec
ja
imul
push
cld
out
arpl
jp
lods
sbb
pop
adc
mov
mov
rolb
ret
cmc
out
push
xor
in
std
aas
inc
inc
or
push
xor
or
es
loop
push
xadd
mov
pop
jnp
or
pop
fs
scas
cmp
out
dec
ret
and
adc
xchg
xchg
das
jmp
mov
xor
addr16
popa
aam
iret
ja
mov
mov
movb
xor
xchg
xchg
roll
push
cmp
testb
lea
xor
jbe
gs
dec
cmpsb
iret
ffreep
sti
cmp
xchg
adcb
je
cmc
sbb
out
xor
push
and
lcall
inc
cltd
iret
ljmp
inc
stos
pusha
add
inc
leave
in
je
pop
adc
ljmp
mov
jmp
mov
out
aaa
enter
or
mov
xor
adc
dec
ret
stos
loope
cwtl
insl
fldl
fcom
mov
mov
out
adc
mov
jne
leave
mov
outsb
mov
test
dec
jg
test
das
scas
jg
cmp
sti
push
out
push
push
sub
jno
outsb
mov
and
pop
inc
rcrb
xor
mov
sub
xor
inc
js
loope
jge
and
cld
testb
popf
rorl
pop
scas
into
jb
xor
pop
adc
leave
cwtl
sti
adc
sbb
sbb
out
adc
mov
push
add
in
das
add
mov
mov
mov
inc
outsl
add
dec
jmp
cld
inc
ds
adc
stc
scas
in
inc
call
neg
push
out
xchg
inc
aam
cmp
andl
push
mov
adc
pop
insl
adc
and
loopne
hlt
stos
fisttps
inc
out
mov
mov
aas
add
sub
and
xchg
lcall
andl
faddl
push
sbb
das
dec
mov
or
les
mov
xchg
jb
ljmp
cwtl
or
jl
iret
out
aas
mov
jg
mov
mov
shll
addr16
sarl
xchg
call
pop
push
xor
add
dec
popl
addl
mov
inc
cli
idivb
jmp
stos
jl
sbb
outsl
jmp
mov
adc
sub
rorl
push
and
fiadds
dec
and
fmuls
cli
mov
out
in
lahf
xchg
push
aas
js
leave
jp
mov
enter
cmp
inc
xlat
push
test
cmp
mov
repnz
insb
xchg
mov
cs
pop
aas
push
sub
jge
mov
xor
add
rcll
cmp
shr
enter
push
jbe
movsl
cmp
insl
push
mov
mov
cmp
mov
lret
lcall
loopne
inc
push
push
xor
fildl
mov
sar
mov
pop
fwait
iret
lret
pop
pop
pop
rcrb
xchg
xchg
xchg
andl
or
cmc
rcrb
adc
pop
sbb
adc
lock
and
cmp
adc
in
cld
adc
lret
je
fsubs
add
inc
sahf
and
sbbl
sub
mov
sbb
cs
fildl
test
jmp
dec
popa
dec
and
lret
or
cmp
sub
leave
aaa
lahf
xor
jle
adc
cmp
and
iret
int
push
sbb
adc
jg
int3
mov
cmp
mov
or
cmc
movsl
add
jno
add
pusha
xor
cmp
mov
lea
push
xor
cli
inc
push
or
and
jmp
into
sbb
fwait
enter
insl
cmp
mov
mov
ret
push
mov
sub
inc
dec
xor
movb
sbb
lcall
arpl
stc
movsb
xor
jnp
sbb
stos
lret
inc
jmp
add
add
mov
inc
jnp
add
rcrb
pop
addr16
jp
outsb
push
mov
cltd
dec
and
dec
mov
cli
out
pusha
icebp
xchg
and
outsl
stos
xor
rol
in
or
or
pop
popf
leave
push
into
sbb
dec
daa
mov
xchg
mov
dec
rclb
dec
mov
sahf
lret
leave
push
cltd
mov
add
adc
decl
xchg
daa
xor
inc
sub
out
inc
cmp
xor
lock
call
arpl
ljmp
mov
add
xor
mov
cmc
clc
mov
mov
and
loope
lahf
sbbl
inc
add
flds
fdivl
jge
arpl
idivb
pop
mov
in
mov
mov
in
or
test
fidivrs
and
adc
adc
aaa
mov
stos
jae
arpl
dec
or
sahf
out
daa
test
mov
mov
or
or
mov
push
cli
cmp
push
mov
lock
mov
xchg
add
or
add
cs
push
xchg
ficoms
cmp
stc
into
xchg
jmp
mov
xor
push
sub
lret
das
mov
mov
push
jmp
xchg
or
setle
adc
out
jp
dec
add
in
pop
pusha
fimuls
stos
sbb
notl
xor
sub
add
pop
aaa
lds
jmp
ds
mov
push
inc
imul
aad
push
mov
sti
xchg
enter
pop
add
mov
push
aaa
es
bound
mov
nop
xchg
adc
out
pop
sub
data16
in
xchg
and
push
stos
dec
mov
mov
cwtl
adc
adc
pop
xchg
cld
jmp
mov
inc
push
xchg
pop
adc
mov
movzwl
add
stos
cmpsl
cmpsb
xor
mov
fisubl
leave
push
adc
test
lahf
pusha
dec
dec
aad
fiaddl
xchg
pop
fmul
inc
fucomp
inc
inc
jp
adc
xchg
push
les
pop
jle
iret
pop
movsl
sbb
cmp
cmp
sbb
add
lods
fisttpl
lahf
inc
mov
sahf
out
nop
fisubs
lds
pop
fadd
mov
jle,pn
divb
or
movsb
jl
mov
shll
pop
shlb
sbb
adcl
fsubrs
icebp
ja
into
lret
pushf
push
and
movsl
daa
or
fsubs
lret
movsl
ud2
mov
fcoms
in
add
push
xchg
xor
push
imul
jns
mov
dec
ss
lods
fistl
adc
and
mov
cld
xlat
mov
outsl
sbb
ljmp
ds
daa
jp
add
data16
dec
pop
dec
shl
sbb
insb
sub
bound
lock
jecxz
outsb
rorl
test
lret
imul
inc
into
fldenv
xbegin
xlat
andl
movsl
jbe
sahf
orb
mov
shrb
mov
xchg
sub
popf
sub
test
ss
jg
clc
in
inc
push
into
test
aas
repz
cmp
popf
xchg
ret
popa
shl
int3
pop
add
xorb
imul
gs
sub
adc
mov
sbbl
sbb
push
loopne
mov
cltd
xchg
pop
jne
cld
mov
ja
or
pop
inc
and
loope
imul
add
movsl
mov
xor
aad
lock
movsl
test
jmp
bound
inc
sbb
xchg
flds
dec
push
insb
test
cmc
and
mov
pop
inc
lods
or
mov
dec
adc
outsb
lret
sarb
mov
jae
test
pop
inc
sbb
subl
mov
fmull
insb
dec
pop
xchg
add
dec
or
mov
mov
cmp
fnstsw
movsb
mov
mov
or
pop
insl
and
test
adc
lock
pop
loope
fs
push
xor
fdivs
jb
out
inc
xchg
fistl
inc
mov
or
inc
lret
mov
sbb
sub
jne
loope
jns
push
dec
les
cmpsl
xor
movsl
mov
adc
jo
xchg
xchg
mov
inc
push
and
int3
daa
mov
pop
lret
mov
loope
test
inc
cmp
imul
or
std
fdivs
pop
cli
sarb
std
mov
movsl
mov
mov
jmp
test
rorl
cld
sub
pop
int3
jae
xchg
mov
mov
sbb
xchg
and
test
cltd
scas
mov
das
sahf
in
dec
or
push
aad
xor
mov
or
mov
dec
dec
cmp
test
inc
inc
sbb
loopne
rorl
inc
data16
or
leave
jne
push
stos
fcomps
lock
data16
jae
movsl
repnz
roll
adc
jno
and
cli
es
fs
mov
fbstp
push
test
inc
push
and
adc
jns
mov
mov
dec
idivb
ljmp
sub
lea
cmp
mov
adc
and
stos
call
add
dec
xchg
mov
pop
jl
push
lahf
ret
int
mov
inc
pop
mov
dec
jecxz
dec
test
data16
fwait
xor
xchg
xlat
or
mulb
cmpb
lret
int
daa
pop
inc
mov
push
fs
pop
popa
bound
out
sbb
insb
dec
lds
loopne
pusha
out
push
mov
fcoms
sub
mov
cmp
dec
fadds
sub
mov
sub
ljmp
daa
fnstsw
leave
push
xlat
sub
fisubs
mov
imul
mov
pop
jg
movsb
xor
cmp
jg
jno
fisttps
out
mov
jg
mov
lcall
dec
push
sub
dec
daa
xchg
andl
aam
push
xchg
xchg
iret
lea
cmp
mov
je
je
jns
shlb
sti
mov
fwait
stos
gs
ret
pop
nop
cmp
jno
inc
addl
xchg
ds
xorl
hlt
jo
mov
out
daa
mov
push
in
add
jecxz
mov
repz
sub
dec
lods
mov
iret
stos
fidivs
mov
jle
xor
mov
lret
fdiv
mov
jmp
xchg
inc
sub
push
xor
mov
in
xchg
aam
cwtl
data16
fs
xchg
mov
loopne
adc
loop
or
and
fwait
cmp
jno
cmpsb
jbe
les
push
push
jle
xchg
pop
adc
mov
pop
cmp
xor
stos
rorb
xchg
or
sub
cmpl
adc
jno
int3
hlt
pop
test
or
test
mov
jmp
inc
cmp
mov
icebp
iret
ret
fs
dec
add
jp
lahf
mov
rorl
aad
mov
add
mov
mov
or
xor
add
les
xorb
mov
arpl
pusha
rcll
dec
cs
mov
push
out
popa
pop
push
dec
dec
jns
sub
mov
addr16
fdivl
repnz
sub
push
fsubrl
adc
add
sbb
inc
in
cmp
test
jmp
mov
sbbl
or
add
test
mov
in
push
mov
fwait
cmpsl
or
leave
test
xor
aas
and
mov
mov
xor
loope
mov
cltd
jle
or
push
jle
jbe
out
jl
cmp
out
inc
movsl
cmp
cmpsb
jbe
test
idivb
test
in
or
lcall
fdiv
pushf
fcmovnbe
push
fldcw
add
jle
dec
xor
bound
bound
jmp
popf
je
or
mov
aas
add
cli
pop
adc
cmc
mov
loope
pop
stc
imul
push
add
dec
jg
or
inc
lea
push
into
imul
or
push
mov
adc
repz
push
shll
cs
mov
sbb
aad
aaa
or
sbb
cmpsl
and
dec
stc
dec
stos
out
in
mov
shll
test
mov
jae
mov
inc
mov
pop
aad
fs
lea
xchg
mov
addr16
adc
inc
and
and
push
std
mov
sub
in
push
xchg
push
push
adc
sahf
jbe
inc
adc
xlat
jle
fs
popf
outsb
or
inc
mov
pop
movsb
xchg
lods
cmpsl
sbb
mov
inc
inc
clc
sub
mov
aaa
imul
xchg
cmp
or
mov
push
sub
adc
push
sbb
jbe
dec
fsubl
loope
in
jmp
stc
loope
fidivs
jne
lods
and
add
xor
sbb
pop
test
mov
push
and
mov
cmp
js
jne
jns
jns
fldl
xchg
add
pop
add
outsl
pop
arpl
pop
fisttpl
or
shrl
mov
lods
xchg
pop
ss
xchg
and
add
gs
loop
inc
xlat
cld
pop
sarb
xor
aaa
jnp
cmp
jb
repnz
xor
xchg
mov
popf
push
divl
jnp
push
sbb
repz
push
repz
jl
sub
jmp
mov
mov
mov
mov
adc
jp
ljmp
out
aas
cld
insb
les
inc
es
mov
mov
push
jae
lahf
rclb
leave
cld
sbb
add
aaa
push
pop
and
or
ret
test
xor
popf
cli
sub
iret
jge
and
stc
jne
adc
dec
xor
outsb
stos
loope
pop
mov
adcl
xlat
push
add
sub
add
mov
out
push
dec
loope
xor
lahf
std
data16
jl
xor
insl
in
inc
sub
jmp
xchg
ficompl
subl
ja
xchg
sub
push
mov
mov
push
sub
and
into
loope
scas
movsb
bound
leave
enter
lahf
or
sbb
push
out
out
scas
dec
adc
in
shlb
aad
sub
adc
repnz
xlat
sbb
stc
int
lcall
lods
mov
out
das
stos
adc
or
jmp
in
test
cltd
pop
sub
outsb
outsb
jno
sbb
mov
mov
dec
xor
pop
jg
push
lret
fwait
insb
popf
xchg
mov
push
add
pop
icebp
mov
lods
dec
push
test
jb
data16
std
lock
adcb
mov
mov
push
inc
gs
jb
cld
add
int3
scas
cmpsl
pop
loope
or
xchg
gs
cmp
mov
xchg
rcl
xor
repz
sub
adc
lcall
lahf
sub
scas
aad
dec
shlb
lahf
ret
xchg
sti
rcl
rolb
cmp
bound
sub
mov
loope
es
mov
add
cmpsb
mov
pop
out
notl
shll
out
std
add
push
pop
mov
sbb
mov
sub
lods
mov
jns
ds
rolb
xor
push
and
add
mov
in
fnstcw
push
xlat
xchg
xchg
mov
or
int
xor
call
clc
push
jp
lret
sbbl
jecxz
ret
movsb
stc
decb
jbe
cld
push
adc
fcmovu
pop
mov
lods
xlat
das
fs
testl
xor
pop
pop
and
test
jbe
jnp
sbb
sbb
fcomps
pop
or
pop
ficompl
push
and
pop
adc
nop
mov
adcl
nop
sbb
bound
in
icebp
es
std
adc
out
int3
and
loop
mov
dec
das
imul
shl
mov
shll
cmpsb
popf
mov
loopne
or
iret
aaa
dec
inc
sbb
inc
mov
icebp
push
ljmp
adc
push
pop
int
div
pushf
jb
lcall
sbbl
dec
ljmp
sbb
lods
setp
pop
lods
call
fidivrs
mov
add
xlat
lret
mov
mov
jno
adc
cld
push
pop
jmp
cli
and
popf
jl
fmuls
cmp
pushf
jmp
mov
adc
out
ds
popa
push
adc
xor
lods
push
push
cltd
adc
dec
std
iret
mov
xor
xchg
sbb
mov
test
fcmovu
lcall
call
sub
loopne
inc
mov
push
inc
inc
dec
sub
jnp
add
xchg
cmp
clc
fs
xor
mov
or
int3
mov
cmp
sbb
sbb
mov
je
xor
jo
adc
movsl
out
aas
mov
or
push
jmp
test
cli
sub
inc
sub
push
sub
stos
add
adc
in
lret
faddp
or
fildll
mov
xchg
cmpsb
mov
imul
lea
cwtl
dec
cmp
mov
stos
sub
mov
push
xor
cmpsb
or
xor
ja
jno
popf
dec
mov
pop
or
sub
loope
in
or
aad
cwtl
je
cmp
inc
xorl
lcall
jg
cld
dec
sar
inc
stos
das
adc
fisubrl
ss
adc
cmp
stc
mov
mov
test
add
cwtl
mov
xchg
xchg
adc
sbb
push
fstl
in
insl
mov
add
test
add
jmp
int3
ja
mov
lcall
mov
aad
loopne
outsl
popa
cmpsl
fsubl
movsl
mov
roll
filds
dec
or
pop
stos
shlb
daa
rorl
es
and
ret
jns
mov
mov
xchg
fpatan
sbb
fs
add
pop
inc
aas
fcmovu
push
out
cmp
test
push
jbe
mov
ss
dec
adc
pusha
testb
pop
add
sbb
push
je
pop
push
or
xor
jge
add
add
cwtl
in
fildll
fucom
imull
js
into
lret
sub
cli
test
mov
sub
push
loope
add
popl
int3
pushaw
pop
pop
pop
pop
mov
jnp
jl
jge
add
in
arpl
nop
cmp
leave
push
mov
into
js
fmuls
subb
paddb
cmpsl
popf
lods
out
data16
xor
ja
dec
sbb
mov
lock
shl
jg
arpl
xchg
mov
push
addb
ja
mov
mov
pusha
rcrb
push
adc
popf
add
push
test
fcompl
repnz
jge
sub
cld
or
cmp
sti
cltd
daa
and
cmp
jb
xor
pushf
xchg
pop
andb
push
inc
inc
dec
iret
adc
scas
jne
iret
sub
inc
sbb
icebp
fwait
sbb
xor
insl
adc
jns
mov
imul
andb
or
fiadds
pop
and
scas
sarl
xchg
jp
dec
dec
fcmovnbe
lock
cmp
or
sbb
negb
fwait
sub
adc
outsb
and
inc
push
pushf
push
mov
xor
pop
out
push
dec
fnsave
push
fcomp
roll
addr16
and
adc
or
mov
int
or
enter
jle
lahf
scas
fmull
jecxz
test
dec
push
push
mov
je
and
lahf
pop
inc
in
fbstp
scas
call
adc
das
xor
xchg
sbb
jp
lea
jb
andb
cwtl
hlt
rorb
inc
rolb
dec
mov
or
add
add
lds
xchg
lahf
aas
int
cmp
addr16
sub
jo
movl
mov
lods
les
ja
test
mov
push
pushf
xchg
fs
add
dec
pusha
js
xchg
jecxz
pop
andl
fadd
lret
sub
lret
out
and
orl
and
icebp
ds
and
lret
xchg
or
cmp
add
adc
inc
cltd
aaa
outsb
sub
and
lock
or
sub
mov
mov
inc
or
notl
je
lock
gs
jne
push
xchg
xorl
xlat
int
push
into
std
faddl
aad
push
or
fbld
hlt
outsl
test
in
daa
mov
leave
lds
das
repz
add
add
sbbb
lods
lock
dec
or
shrb
push
pop
xlat
mull
push
in
mov
aad
stos
nop
mov
movsl
inc
mov
push
adc
or
sahf
icebp
adc
adc
dec
enter
in
lahf
outsb
push
inc
dec
or
mov
scas
dec
lcall
mov
orl
xchg
loop
ja
push
scas
xchg
out
lods
or
xlat
scas
cmp
sbb
push
mov
add
mov
sbbb
dec
add
out
mov
mov
cwtl
movsl
js
mov
arpl
push
loop
lods
cld
jb
inc
sbb
in
lods
mov
mov
in
xchg
mov
lret
loope
jo
repz
cmc
xchg
ret
push
stos
xchg
rcr
push
xchg
xor
xor
jbe
mov
and
or
ds
add
adc
in
gs
or
jmp
inc
sub
add
jle
and
cmp
insb
push
sahf
pop
or
mov
fucom
out
inc
mov
fidivrl
sbb
mov
mov
push
mov
into
mov
jae
pop
jae
fcmove
or
or
xor
mov
mov
pop
jae
push
fcom
inc
sbb
mov
lret
mov
popa
scas
lods
and
pop
jne
or
inc
out
daa
divl
clc
inc
cmp
add
lcall
mov
lret
imul
js
jno
pop
push
jge
mov
ss
sbb
xchg
sub
push
sub
lods
push
addr16
fs
scas
cmp
pop
adc
push
out
data16
mov
mov
add
mov
mov
or
pop
mov
int3
mov
inc
pop
mov
or
mov
cltd
rcrl
pop
lret
cmp
jno
loopne
xchg
inc
notl
adc
inc
mov
cwtl
loope
cmpsb
jo,pn
or
leave
mov
jl
push
stos
rorb
or
and
ja
pop
leave
fwait
repnz
mov
mov
xor
cltd
sbb
repz
cmp
call
sub
lret
inc
cmp
jo
lock
pop
lret
and
fdivrs
es
lahf
fistl
popa
pop
or
shll
or
xchg
jns
sub
lcall
xor
push
sbb
lods
xor
lods
sbb
ss
pop
push
lods
sub
and
xor
inc
cmp
ret
cmc
add
sub
sbb
imul
adc
lods
clc
outsb
xlat
jge
insb
sbb
push
loop
pop
xor
cwtl
xchg
adcl
xchg
mov
mov
stos
int
cli
or
es
pop
inc
ret
mov
ret
enter
sbbl
dec
loop
sti
jbe
pop
and
push
jmp
stos
cmpb
cmp
repnz
inc
addr16
pushf
mov
lds
or
loope
imul
or
aad
insb
fstl
dec
add
lods
cmp
mov
or
rorl
sub
loopne
push
ficompl
push
ret
xor
in
add
xchg
mov
shlb
add
sub
cmp
aam
cld
scas
dec
lea
clc
int
iret
xor
adc
dec
sub
hlt
adc
repz
incl
or
adc
jg
scas
sbb
mov
lret
inc
sbb
sub
movsb
out
push
or
sbb
shl
outsb
push
out
inc
inc
pop
aaa
pop
jbe
scas
testb
push
pop
insl
push
das
cmpsb
dec
pop
adc
inc
stos
and
adc
fcomps
das
sarl
dec
xor
fsubp
dec
mov
inc
mov
into
gs
inc
cmp
fldt
popa
xchg
stos
mov
frstor
lods
and
adc
rclb
fs
nop
jne
sbb
mov
sub
hlt
add
xor
or
lea
daa
stc
inc
dec
mov
pop
test
iret
in
into
das
das
jbe
std
lret
imul
sbbl
xchg
clc
leave
mov
data16
lds
ret
add
add
adcb
jg
call
lea
loopne
mov
dec
jg
mov
cmp
mov
xchg
mov
fstpt
adc
adc
cmp
cmpsb
insb
fstpl
nop
aaa
lahf
lret
xor
jae
mov
scas
nop
scas
ss
scas
insl
int
mov
ja
lds
dec
jg
xor
fadd
repz
mov
jnp
xchg
mov
xor
fs
inc
jp
dec
cmp
aaa
cld
cmp
int
cs
push
aad
out
out
iret
add
mov
int3
mov
loop
rolb
out
xchg
dec
lahf
push
icebp
mov
into
in
arpl
ljmp
stos
cltd
dec
repz
sti
or
adc
popa
dec
int3
xor
ljmp
dec
testb
and
inc
rol
sbb
or
dec
into
repz
fcomps
adc
pop
pop
pop
xchg
out
xlat
lds
pop
je
ss
jle
popa
out
mov
xor
xor
sti
arpl
aas
push
jne
pop
fists
cmp
in
dec
mov
mov
xor
imulb
push
gs
sbb
lds
inc
lret
mov
add
mov
dec
mov
fsubrs
aas
sbb
repz
xchg
rcr
rorb
repnz
lret
cltd
add
sbb
repz
lret
faddl
and
inc
sbb
rcr
outsb
outsl
in
xor
jle
pop
sbb
mov
test
loopne
xor
jle
xchg
jno
pop
cmp
push
pop
or
in
loope
les
mov
mov
stos
cmp
mov
fnstsw
mov
mov
push
xchg
std
inc
daa
leave
into
lcall
jmp
out
jbe
test
or
int3
add
xchg
shl
mov
lea
jo
loop
insb
mov
jae
sbb
jbe
jmp
push
pop
fdivs
jge
sar
in
add
js
clc
and
push
insb
add
push
in
add
mov
sub
notb
outsb
repnz
sbb
and
fistl
pop
sub
push
sub
shll
sub
int
xchg
ret
rorl
xor
and
mov
sbb
mov
fs
lods
repnz
mov
addr16
loopne
ss
sahf
sbb
gs
push
in
and
and
ret
jbe
mov
fidivrs
jmp
je
inc
add
int
lret
mov
lds
cmc
fldl
pop
cli
icebp
mov
pop
and
cmp
fidivl
xchg
add
jnp
test
rolb
mov
ja
out
adc
incl
cltd
add
loope
movsl
stos
or
jmp
scas
push
cwtl
in
addl
push
repnz
repnz
mov
and
test
dec
jne
sub
stos
data16
mov
outsl
mov
mov
mov
adc
pshufw
mov
loopne
sub
jl
xor
sbb
imul
jecxz
pop
jae
or
out
mov
lret
xor
test
inc
dec
add
sub
dec
mov
pushf
xchg
addl
shrb
jmp
and
mov
inc
sub
icebp
cmp
movsb
push
pusha
mov
cltd
notl
pop
or
frstor
hlt
insl
int
fisttpl
std
mov
test
inc
aaa
sub
mov
and
stos
inc
xchg
pop
std
jb
mov
fadd
dec
xchg
rolb
push
fucom
xlat
and
shl
cmp
sub
in
sbb
push
jle
dec
stos
out
cmp
inc
and
imul
jl
xor
add
ja
lret
mov
push
leave
enter
and
bound
ret
jo
movsb
jno
sahf
or
ja
xor
sbb
int3
mov
rcrl
pusha
adc
sbb
mov
mov
movsb
sbb
push
gs
faddl
adc
pop
pop
insl
fcomps
aaa
mov
pop
inc
cmp
push
push
push
fsubs
and
xorb
xchg
and
fisubrl
loop
dec
push
pop
mov
enter
outsb
dec
adc
movsb
sar
dec
mov
loope
fiaddl
mov
mov
adcl
mov
addl
lahf
enter
jle
push
ret
lret
ja
mov
jo
or
mov
push
lret
push
testb
and
sub
mov
aas
push
pushf
mov
adc
xchg
push
cmpsb
add
sbb
aas
jns
repnz
pusha
aaa
mov
lcall
fsts
inc
mov
ficoml
sti
clc
mov
xchg
ja
sub
mov
test
cltd
jo
mov
inc
stc
mov
sbb
outsb
test
jns
inc
jle
ja
inc
mov
xchg
adc
push
lret
inc
mov
pop
cmc
popa
pusha
jp
xchg
push
push
clc
jmp
int
nop
inc
loop
xchg
das
imul
cmp
jmp
test
mov
jno
adc
aam
imul
pop
lock
movsl
ss
or
mov
inc
ret
scas
jne
test
clc
add
pop
or
ss
gs
mov
xchg
imul
add
mov
sahf
cmp
jne
aas
gs
and
call
mov
or
popf
xchg
sbb
dec
cltd
lcall
pop
popa
sub
adc
dec
cmpb
outsb
movb
in
add
xor
fsub
pop
lds
cwtl
test
test
sar
fildl
xorb
int3
test
sarb
stc
push
inc
mov
imul
mov
jge
cmpsl
pusha
cwtl
sub
mov
out
cltd
jl
xor
cltd
ret
fcoml
ds
xor
stc
jb
push
ljmp
xchg
aam
xchg
dec
shlb
mov
pop
subb
scas
bound
and
pop
push
fadds
lock
pusha
pusha
push
iret
adc
xor
xor
fidivrl
in
in
repnz
pop
test
cwtl
mov
push
sbb
pop
mov
xchg
xor
jne
xlat
dec
or
andl
adc
clc
dec
fistpl
adc
repz
lcall
in
insl
scas
data16
into
iret
movl
arpl
or
mov
data16
jg
les
xacquire
in
lcall
inc
inc
add
sahf
sarb
xlat
lcall
jae
inc
nop
and
and
push
mov
jecxz
push
push
in
jp
insb
das
sbb
inc
sbb
shr
pop
pop
cld
cmpsb
jmp
push
jle
jbe,pn
jecxz
pushl
dec
mov
int3
xorl
push
mov
js
repz
sbbl
add
idivb
sub
adc
aam
incl
rcrl
ficomps
jne
fs
push
shll
pop
mov
test
or
out
aad
inc
sbb
xchg
pop
inc
pop
jl
push
mov
adc
scas
js
mov
les
testl
fwait
fwait
sub
les
outsl
xor
and
push
fcoml
adc
ljmp
mov
inc
add
inc
pop
movsl
sti
and
xor
cmpsb
cmpl
cmp
mov
mov
addr16
xorl
push
lahf
sbb
xchg
mov
jb
jmp
push
aad
push
sub
imul
push
jmp
push
mov
or
sub
sti
data16
xchg
sbb
mov
cmpsb
in
adc
sbb
mov
and
push
jae
adc
jg
sbb
mov
jmp
std
push
orb
insb
pop
addb
push
aas
mov
call
adc
adc
inc
cmp
xchg
push
mov
movsl
mov
sub
pop
xchg
push
jns
iret
or
and
mov
andl
dec
jmp
in
stc
das
lahf
mov
adc
scas
sbb
data16
inc
pushf
jno
cld
sahf
dec
pop
out
jnp
xchg
out
push
sahf
js
jne
cmpsb
jno
xor
aaa
cmp
faddp
lret
in
popf
int
sbb
adc
lcall
lock
cmp
xor
xchg
mov
or
in
xor
ret
shrb
inc
pop
stos
mov
test
push
push
jnp
stos
stos
addr16
pop
decb
add
mov
leave
jne
popa
push
sahf
test
fsub
scas
mov
add
and
xlat
sub
adc
fbstp
sar
ljmp
jae
insl
push
sahf
mov
inc
xor
pop
sub
mov
leave
mov
xchg
jg
pop
inc
mov
mov
imul
pop
add
lds
push
xchg
mov
adc
div
jle
jle
mov
pop
pop
add
hlt
xor
pushl
sub
or
dec
das
jo
fidivs
pop
adc
shrb
cli
lahf
add
jo
icebp
mov
cltd
rcll
aas
mov
mov
mov
push
int
mov
fprem
fadds
cmc
inc
cmp
pop
mov
test
adc
and
pushf
leave
sti
push
pop
shrb
add
jmp
xchg
inc
dec
rcrb
xor
out
cmp
and
push
push
aad
add
shrl
sbb
sub
xlat
inc
je
mov
xor
rorb
movsl
stos
test
in
mov
push
mov
imul
mov
push
loope
and
push
dec
xchg
scas
mov
fisttpl
ljmp
xchg
inc
fsubs
cmp
gs
push
pop
jl
pop
inc
pop
sbb
in
imul
mov
dec
js
push
out
push
add
or
xor
popf
in
test
mov
push
addl
lds
mov
or
adc
fnop
shlb
add
xor
adc
push
jns
lzcnt
ja
jecxz
add
ret
mov
pop
cmp
cli
test
das
mov
notl
xchg
dec
roll
and
xchg
inc
push
adc
mov
pop
xchg
inc
xlat
cli
test
xchg
mov
shrb
xlat
insl
inc
jns
and
xchg
outsb
xor
mov
daa
andl
sub
mov
int
inc
imul
lods
jae
stos
ficoms
cmpsl
cmp
lock
fiadds
xchg
dec
adc
das
push
imul
add
jb
and
push
add
pop
xchg
pop
push
fstp
mov
sbb
inc
push
test
mov
fimuls
nop
stc
scas
fisttps
add
jae
nop
sbb
push
cmpb
das
dec
les
mov
das
inc
xor
mov
cmovbe
pop
fucomip
mov
push
scas
xchg
fs
ret
insl
popa
sbb
dec
jmp
popf
dec
daa
rcrl
mov
or
sub
jae
movsl
test
push
xor
cmp
pushf
mov
and
in
inc
dec
adc
inc
cli
gs
les
test
mov
lcall
or
ds
setae
stos
or
mul
and
push
jns
aas
xchg
sub
lods
inc
loop
je
setne
mov
mov
xchg
jge
sub
jecxz
push
lods
sbb
cmp
ret
xor
xlat
inc
ja
dec
outsb
mov
sbb
comiss
popa
rcrb
imul
mov
xor
outsb
add
sub
iret
icebp
cwtl
pop
pop
sar
xor
add
adc
hlt
add
mov
cli
xor
jge
mull
inc
insb
mov
aad
push
cltd
sub
int3
mov
popf
jl
sub
pop
loop
xchg
dec
stc
jg
push
out
sbb
call
ficoms
and
xor
or
fidivrl
pop
xchg
add
and
and
mov
das
int3
pop
jo
shlb
pop
mov
cmp
add
jo
pop
cmp
cmpsl
lods
fsubs
sahf
add
lds
fxtract
inc
daa
test
clc
dec
mov
nop
dec
or
push
xlat
repnz
mov
jno
cs
pop
jp
mov
mov
jo
sarl
jo
bound
int
sub
rorb
jl
mov
add
mov
or
adc
add
ret
fstps
jb
addl
mov
adc
enter
sub
scas
sbb
mov
adc
sbb
sbb
inc
mov
out
sub
pop
mov
jle
in
or
cmpsb
and
iret
mov
xchg
je
cmp
cs
gs
es
sbb
test
mov
pop
push
adc
mov
pushf
mov
push
daa
loop
popf
jno
push
daa
movsl
inc
pop
ss
fadds
cmp
and
mov
movsb
loope
xchg
lods
outsb
js
xor
pop
jg
movsl
mov
or
test
dec
fucomp
mov
cmpsb
inc
mov
push
add
xor
xchg
dec
dec
gs
insl
xor
mov
insl
dec
out
insb
sbb
mov
lods
push
push
mov
sub
cmpsl
add
inc
push
or
or
aaa
and
mov
sub
jne
fs
in
add
cld
popa
insl
and
subb
ljmp
push
cmpsb
dec
fdivrs
insb
movsl
pop
push
jae
mov
arpl
mov
leave
cmc
data16
mov
and
mov
dec
outsb
and
pop
or
jg
xchg
inc
add
or
sar
push
push
stc
xor
stc
cmc
cld
popf
mov
jle
sbb
iret
insb
sarl
xlat
or
push
jge
cltd
hlt
inc
dec
mov
push
dec
add
cltd
inc
insl
inc
stos
push
lods
adc
push
test
pop
mov
lcall
adc
xchg
xchg
or
and
shrw
xchg
jae
out
fsubrl
subl
lret
pop
in
into
es
cmp
adcb
lods
rcr
sub
movswl
in
aad
adc
xor
xor
mov
ja
add
sahf
push
fisttps
jo
pushf
cltd
aas
jle
xor
insb
jge
aaa
inc
cmp
insb
clc
dec
repz
jp
inc
pop
out
add
pop
scas
add
adc
xor
sti
dec
lds
mov
pop
in
cmpsl
and
lock
jne
pop
mov
adc
adc
push
fs
dec
les
jmp
sub
out
popf
in
jp
cmp
in
pop
sub
ds
popf
icebp
popa
or
jl
or
cmp
pop
popf
ret
mov
in
out
mov
or
jecxz
fidivrs
std
adc
ja
jl
adc
pop
dec
sbb
daa
xchg
test
sbb
inc
outsl
mov
out
into
mov
mov
lret
and
jp
and
cmpsb
aas
or
test
fs
sub
insb
pushf
or
xchg
sbb
cld
popf
dec
jge
aas
add
sub
sbb
push
cmpsl
cmp
js
mov
cli
mov
inc
int3
xor
out
sub
xchg
aaa
das
pop
out
cmp
js
ljmp
cmc
pop
stos
shrb
leave
push
push
xor
mov
loope
cmp
std
and
int
fdiv
and
rcrl
push
scas
mov
xlat
test
adc
adc
sub
pop
cmc
pop
repz
mov
out
sti
fidivrs
or
inc
xcrypt-cfb
cmpsl
and
fs
cvtdq2ps
dec
mov
jno
mov
bound
jmp
insb
out
add
inc
xor
sahf
inc
or
fdivrl
dec
push
cs
pop
leave
xor
in
mov
mov
mov
inc
dec
or
and
cmp
test
or
pusha
fisttpll
ret
in
pop
pushf
pop
les
and
sarl
ja
and
popa
pop
mov
rolb
lret
push
mov
imul
push
push
jo
mov
push
pop
std
xchg
xor
dec
cmp
out
stos
movsl
jmp
adcl
sbb
inc
add
sbb
dec
adc
add
aas
scas
call
out
lock
stos
stos
push
outsl
mov
aas
add
cltd
loop
jae
jb
int3
xchg
push
xchg
or
add
xor
cmpsl
mov
out
out
pop
pushf
jmp
push
push
popf
fwait
pop
jecxz
es
fwait
arpl
push
dec
arpl
js
loopne
xchg
push
mov
mov
cmp
test
pop
cmp
push
stc
mov
outsb
sub
lcall
mov
jnp
popf
in
mov
popa
pusha
push
adc
pop
inc
dec
dec
daa
adc
outsb
jge
rcrl
in
add
adc
add
outsl
adc
jge
pop
bound
out
cltd
mov
push
call
out
and
mov
ret
test
out
roll
push
sti
xchg
mov
jmp
hlt
test
jmp
or
cmp
cmp
xor
repnz
fisubs
push
xor
out
aad
jae
add
dec
mov
mov
test
out
mov
fsubrp
push
xchg
xchg
jle
std
jp
mov
push
pop
jecxz
push
mov
push
cmp
cmp
pop
imul
rep
mov
lret
out
into
pop
scas
xchg
data16
sbb
rcll
mov
nop
dec
cwtl
sbb
lods
sub
fdivrs
cmc
lret
jge
aad
pop
jae
pop
insb
xor
lods
pop
and
push
cmp
mov
adc
sti
mov
mov
fldt
scas
xor
outsb
cmpsb
inc
mov
and
cltd
xor
ljmp
pop
fisubrl
or
lds
mov
repnz
adc
icebp
mov
ret
in
jg
hlt
mov
test
iret
xorb
push
bound
sub
mov
cmpsb
mov
push
movb
sub
mov
gs
notrack
arpl
adc
xlat
imul
imul
lods
adc
mov
xor
push
or
cmpsb
fdivrl
cmpb
fmull
sub
ret
enter
cmp
cld
push
push
test
fsubp
cli
push
add
and
or
sbb
dec
pusha
cmp
test
push
push
push
push
adc
mov
ret
pop
sbb
cmc
pop
jo
int3
sub
pusha
test
or
js
sub
test
push
cmp
addl
adc
mov
xor
lret
xor
cmpsl
dec
imul
popa
movsl
adc
imul
inc
ret
xlat
sbb
mov
or
cmp
inc
lcall
dec
and
repz
mov
loopne
push
fcmovbe
push
mov
jle
sbb
loopne
xorb
dec
popa
sti
es
sbb
pop
mov
aam
ja
and
mov
inc
fwait
or
mov
pusha
mov
xchg
mov
jl
mov
push
cli
je
mov
shrb
dec
mov
xchg
movsb
push
or
cmp
xor
sbb
imul
loope
fidivl
or
jge
mov
jmp
jl
popf
inc
outsl
sub
testl
scas
jo
and
push
jge
rclb
sarb
mov
push
adc
mov
jge
jo
mov
push
pop
sub
mov
cmp
inc
mov
popw
cmp
adc
mov
ja
sarb
push
fisubs
push
or
iret
xchg
jne
inc
or
push
adc
cwtl
js
xchg
lcall
ret
xor
dec
aaa
test
and
iret
rcrb
lock
jecxz
pop
stos
sbb
shrb
aam
cmp
scas
enter
scas
cli
xor
push
inc
xor
mov
outsl
jge
loop
mov
pop
add
rorl
leave
mov
insl
fsubrl
xor
dec
mov
jmp
mov
into
inc
sub
bound
add
mov
rolb
adc
add
mov
fisubl
imul
movsb
in
or
add
pop
xchg
jp
add
das
hlt
dec
scas
push
sar
dec
adc
lret
pop
adc
mov
test
repnz
insl
jp
fdiv
sbbb
mov
sub
sti
outsb
cmpsl
sub
cmp
dec
mov
jmp
mov
pop
mov
loopne
xchg
lahf
sub
or
es
and
movsb
gs
adc
dec
push
sub
cmp
cmpsl
lret
loop
sub
cld
pop
ret
arpl
cmp
mov
jecxz
cmp
cli
sahf
cld
mov
push
dec
cwtl
lds
mov
jg
mov
and
mov
mov
aam
dec
ret
fistps
out
mov
inc
mov
mov
and
cltd
mov
inc
movl
lret
cmp
pop
dec
cld
aam
and
xchg
cmpsl
mov
and
out
addr16
adc
or
push
ds
jle
fmull
and
testl
cmp
out
mov
das
push
cwtl
mov
jge
xchg
push
test
vpaddsb
les
or
cmp
dec
outsl
xchg
lret
lea
lcall
gs
mov
in
aad
adc
mov
pusha
jns
test
sti
xchg
invd
cs
jge
notl
cmp
ret
lahf
shrb
shll
adc
mov
mov
sub
les
enterw
aas
push
dec
xchg
pop
js
dec
cwtl
mov
pop
lods
push
inc
or
aam
stos
daa
dec
sbb
cmp
xchg
jle
lods
mov
pushf
inc
mov
ret
cmc
dec
mov
std
lret
push
xchg
stos
pusha
and
movsb
pop
add
mov
adc
stos
xor
gs
mov
shrb
cmp
cltd
call
lahf
pushf
in
data16
enter
call
cmp
mov
lret
sbb
scas
lret
daa
cltd
cvtps2pi
inc
nop
test
inc
and
add
jle
test
fs
lret
pop
jmp
enter
push
mov
sub
add
mov
loopne
cmpl
xchg
test
mov
test
push
xor
pop
sbb
enter
jecxz
xchg
xchg
nop
pop
out
add
out
out
jno
push
push
or
rol
stos
fstl
cmp
into
and
rorb
fcomps
mov
dec
mov
rolb
je
lods
cwtl
sbb
neg
jne
stos
cli
mov
mov
pop
mov
or
mov
inc
cli
push
xlat
or
and
test
ds
xlat
push
jo
cmp
ds
add
mov
shrb
sub
jmp
loopne
mov
inc
sbb
mov
cmp
dec
pusha
pop
mov
mov
out
lcall
adc
int3
xchg
dec
pusha
fwait
jl
xchg
clc
testl
mov
mov
xchg
mov
es
dec
int3
mov
ss
add
enter
add
rcll
lds
dec
xorl
sub
cmp
loop
sahf
mov
repz
sar
loopne
enter
arpl
adc
or
lret
fmulp
xor
cmp
pop
mov
xchg
cmpsb
sub
push
test
xchg
dec
repz
icebp
out
rol
ss
test
loope
pop
mov
pop
gs
xorb
mov
mov
cmp
imul
test
sahf
cmc
popf
inc
mov
mov
in
cmc
fbstp
dec
arpl
bound
jo
cs
sub
cmpsb
xor
and
lea
push
xor
mov
mov
movsl
iret
cmpsl
or
cmp
mov
fcompl
xchg
pop
dec
and
add
lret
add
push
add
adc
ficoml
inc
inc
gs
out
adc
push
lcall
mov
jno
push
call
out
jmp
bound
jge
xchg
xor
pop
sub
movsb
mov
jns
pop
mov
jg
add
sti
lods
pop
and
mov
xor
adc
and
in
inc
cltd
hlt
mov
sub
inc
xchg
mov
pop
aad
mov
cwtl
lock
adc
iret
movsl
xor
aad
dec
push
clc
xor
mov
dec
xor
je
fiadds
test
cmpsl
out
ja
inc
loopne
sub
cs
jb
jb
mov
fldl
mov
sbb
push
xchg
mov
jnp
data16
sar
fsubs
push
cmp
bound
xchg
cmp
and
xor
mov
cmp
fisttps
fimuls
in
lahf
xchg
je
popf
push
pop
shr
adcb
mulb
cmp
insl
movsb
adc
xchg
mov
cmp
jl
sub
jbe
lfs
outsb
imul
sub
jg
mov
or
dec
jbe
mov
sub
stos
push
pop
dec
jge
aad
sub
or
push
push
sub
mov
das
es
pop
jg
mov
pusha
test
mov
adc
gs
sub
rclb
stos
shlb
push
fmuls
leave
pop
cpuid
jns
cmpsb
push
dec
addr16
push
int3
pushf
dec
xor
test
push
faddl
cli
sub
dec
mov
outsb
fs
add
and
push
lods
or
test
in
add
jmp
jnp
sbb
int3
xchg
or
push
fxam
adc
xor
dec
out
pop
mov
outsl
stos
pop
add
nop
lcall
and
sub
in
out
xor
sub
loopne
inc
mov
jnp
cmpsl
jns
lcall
out
pop
jb
dec
mov
decl
lods
data16
lods
and
les
jnp
out
or
outsb
movups
enter
mov
jnp
enter
inc
inc
cmp
jmp
rclb
jmp
shr
pop
xchg
xchg
pop
mov
inc
cmpsl
dec
in
mov
or
movsb
subl
dec
add
sbb
outsl
movsb
test
mov
cltd
dec
aam
mov
fiadds
mov
outsl
jp,pt
sub
adc
add
fwait
lds
shrb
mov
and
lea
cld
mov
call
fildl
stos
imul
xor
xchg
arpl
lock
adc
bound
mov
jg
fcoml
xor
bound
popa
fcomip
in
add
jp
xchg
inc
push
mov
jmp
lahf
or
jmp
daa
mov
icebp
cmp
xor
jmp
movsb
mov
adc
lcall
mov
jge
sbb
je
repnz
cmpsb
jnp
jecxz
imul
xor
push
add
scas
lahf
loop
pop
xchg
sub
jb
push
test
not
add
mov
test
xchg
repnz
movsl
pushf
mov
pop
jb
jnp
xchg
dec
std
je
int3
mov
xor
iret
aam
leave
popa
sub
jp
add
loope
mov
xchg
inc
call
jno
test
inc
cltd
fstl
adc
int
xchg
add
cli
stos
icebp
inc
mov
mov
mov
adc
sub
fldenv
loope
ficoms
in
sbb
jbe
das
pushf
inc
xor
cmp
xor
add
or
shlb
jae
lret
daa
popf
subb
popl
sbb
jb
cli
push
rcrb
stos
iret
push
push
or
imul
repz
inc
or
xor
sbb
dec
icebp
cwtl
adcl
fbld
and
xorl
add
add
ds
movsl
pushf
adc
subb
push
mov
push
push
xor
adc
sbb
jecxz
aas
sub
stc
scas
out
mov
pushf
jge
mov
mov
out
je
outsl
mov
mov
sbb
ja
push
jae
jae
icebp
xor
icebp
test
out
loopne
adc
rcrl
push
fwait
cmp
mov
pop
cs
adc
xlat
data16
sarb
jg
repz
pushw
out
cmpsl
imul
je
or
or
jns
add
test
movsl
lods
push
jno
push
mov
repz
add
fucom
pop
sbb
ljmp
add
mov
push
push
mov
pop
mov
gs
push
jmp
lds
xor
lds
adc
jmp
aam
cmp
mov
xor
das
mov
leave
add
fwait
jbe
clc
xor
aas
xor
mov
and
push
adc
in
xchg
or
mov
ss
mov
insb
loop
sub
pop
add
sbb
int3
les
sbb
cmp
push
psllq
dec
outsb
in
nop
iret
out
pop
pop
pop
cmpsb
pop
jae
mov
and
inc
inc
popa
sbb
jb
mov
inc
test
arpl
mov
aad
mov
push
and
xor
cmp
repnz
fbstp
aaa
adc
mov
jbe
jo
imul
fbld
lock
cwtl
insl
mov
mov
loopne
lcall
cmp
dec
pop
jo
lret
mov
lods
inc
mov
lea
sahf
sahf
cwtl
test
in
cmp
fstps
je
sub
sub
dec
or
dec
xchg
lods
es
icebp
pop
push
sbb
es
mov
cmp
adc
or
packuswb
inc
xor
ret
sub
or
mov
xchg
jmp
bound
daa
ret
stos
testl
inc
pop
xchg
shrb
into
inc
mov
jae
imul
jmp
mov
push
inc
test
xor
mov
stos
jno
cltd
pusha
push
sahf
and
notl
push
or
or
repnz
add
cmp
push
mov
loop
fidivs
dec
add
or
pop
adc
lea
repnz
mov
in
push
aaa
loop
mov
jl
inc
lea
sahf
aaa
jle
repnz
aad
test
sub
xor
jb
das
pop
dec
movsl
shll
dec
mov
lock
fidivrs
iret
or
insb
mov
popf
fistpll
and
inc
daa
outsl
sbb
push
mov
addr16
jae
push
pusha
lret
pandn
and
es
arpl
and
mov
fdivrs
fdivrs
lods
inc
jne
jno
push
push
jg
adc
adc
lret
and
fstps
or
ljmp
xchg
fdivrs
test
lods
mov
sub
jle
xchg
add
mov
mov
ret
xor
jno
test
test
mulb
mov
inc
jmp
push
dec
lahf
in
add
pop
push
or
dec
and
pusha
lcall
pop
insl
fs
outsb
jmp
push
es
dec
add
jno
fwait
inc
nop
add
inc
stc
lret
lods
lods
arpl
popa
ljmp
dec
adc
inc
dec
insb
mov
dec
mov
xor
pop
ss
popf
pop
mov
sub
lods
inc
int3
mov
or
cs
imul
aas
xor
in
dec
in
aam
out
inc
es
insl
push
aas
std
gs
das
popa
sti
es
divb
add
jg
and
inc
divb
push
jp
mov
jge
fnsave
add
aad
jae
sbb
cmpsb
pop
fisttps
pusha
xlat
int3
mov
popa
stos
push
insl
adc
lea
js
sub
popf
jp
cmp
fimull
ret
mov
sub
aaa
cmp
push
adc
mov
imul
pushf
iret
std
lret
ficomps
repz
lds
fcmovbe
jns
mov
test
in
pop
mov
inc
cli
mov
rclb
add
out
mov
fistpll
clc
rolb
mov
pop
mov
jns
cmp
sbb
cwtl
cs
xchg
lret
push
lret
sub
inc
ds
jp
adcl
add
das
push
lret
ds
out
mov
sub
cmpsb
cmpsl
mov
mov
or
into
xchg
nop
movsb
test
outsl
cmpsl
pop
lods
push
add
xor
ljmp
xchg
fistpll
dec
bound
outsb
dec
daa
push
int3
out
push
cwtl
jl
hlt
mov
lods
fcom
add
outsl
stc
rclb
aaa
test
lret
lea
xor
sbb
add
int3
mov
sti
inc
mov
mov
mov
lcall
jg
jle
xlat
dec
and
aad
inc
sahf
ja
push
and
clc
mov
in
adc
cltd
lcall
rcrb
mov
sub
mov
pop
jl
clc
xor
xchg
insb
pop
popf
sbb
cmc
ret
aam
ljmp
xchg
pop
mov
loopne
out
inc
xchg
out
push
shll
cmp
nop
pop
mov
fsubl
cmc
dec
lds
jg
stos
ret
xchg
mov
cld
dec
dec
out
xor
sbbb
add
push
and
mov
mov
data16
das
mov
jmp
dec
and
jbe
jns
sbb
imul
nop
imul
jge
or
inc
test
int3
pop
daa
cmp
push
cmp
xchg
repz
int
lahf
js
jo
and
adc
adc
cmp
sub
push
xchg
das
sub
ret
outsb
movsb
lcall
rolb
jb
addr16
out
and
xchg
sahf
out
mov
sbb
jae
push
xchg
rcll
jp
xchg
scas
xchg
or
leave
shll
push
mov
addr16
addr16
insl
sbb
bound
ds
jg
push
adc
pop
mov
jge
xchg
sub
lcall
cmpsb
inc
das
call
cltd
rcr
dec
sub
test
ret
sbb
jl
mov
leave
mov
add
aad
mov
in
fadds
push
inc
addl
movsl
pop
enter
out
sub
pop
cmp
scas
push
addr16
jmp
xchg
loopne
fwait
rolb
outsb
lret
imul
xor
mov
aad
cmp
lods
cwtl
shrb
xchg
xor
in
jle
notl
stos
adc
fwait
sbb
hlt
fisttps
push
xor
add
dec
jno
cmc
push
nop
add
nop
xor
into
cmpsl
push
nop
filds
dec
rcrb
in
stc
sub
repz
jo
mov
outsb
sub
sub
outsb
stos
inc
scas
test
sbb
inc
push
sub
psubq
or
dec
sti
dec
addr16
fisttps
xchg
insl
and
enter
in
enter
pop
adc
xlat
and
add
out
inc
mov
lods
std
ja
mov
push
dec
pop
mov
lahf
jnp
cmp
clc
dec
dec
ljmp
cmp
xor
push
sbb
xor
add
jno
scas
pusha
xchg
sar
repnz
adc
sbb
pop
xor
sar
lcall
int3
xchg
jb
daa
hlt
stos
mov
dec
jge
cwtl
test
fiadds
lcall
jg
lret
xchg
or
test
jnp
dec
pop
inc
inc
push
loop
dec
shll
push
dec
and
jb
lcall
data16
shl
sbb
fucom
pop
mov
jb
andl
pop
and
cli
adc
dec
sub
add
xor
ss
push
cmp
shll
xchg
inc
or
jns
cmp
mov
pop
incb
cmpsb
add
ljmp
cmpsb
js
loop
xor
movsb
sub
aam
xor
clc
mov
xchg
jno
shrl
pop
mov
cmp
pop
iret
dec
cmp
pop
xchg
inc
adcb
lcall
sti
iret
mov
lret
adc
int3
jae
xchg
sahf
dec
sub
insl
xor
jae
rcrl
out
jns
cmc
mov
pusha
outsl
lcall
int3
decb
push
scas
cltd
push
mov
iret
outsl
xlat
scas
pop
scas
pop
mov
inc
insb
jp
inc
push
mov
dec
xorb
int
jo
and
out
sbbb
cmpsb
jae
push
dec
inc
pop
daa
ja
lret
scas
stos
mov
and
les
mov
mov
mov
jle
sub
out
xchg
mov
out
inc
ficoms
sbb
arpl
adc
imul
pop
fimull
insb
push
scas
fwait
fs
push
fisubrl
gs
enter
fsubs
add
mov
mov
inc
xchg
dec
lahf
in
sbb
loope
push
fs
jle
jb
mov
or
xor
adc
rcll
shrl
inc
inc
cmp
stos
add
out
out
sub
mov
add
pop
sub
cwtl
andl
add
shl
arpl
js
add
repz
out
mov
rcll
xor
das
popf
shrb
clc
push
sub
in
or
or
cli
push
enter
orb
jnp
filds
add
repnz
hlt
xlat
mov
jle
ljmp
test
xchg
adc
fwait
and
adc
loopnew
cmpsl
push
imul
ss
sbb
jg
mov
data16
push
ss
jp
jae
or
jg
int
pop
fwait
negb
dec
push
sub
roll
addr16
les
aam
cmp
fcomps
out
mov
stc
adc
les
aam
aam
cld
xchg
aas
jecxz
push
int
adc
lret
call
push
sub
push
lods
inc
adc
add
in
fwait
and
popf
pop
cmp
push
mov
fildll
test
xor
add
cwtl
and
inc
js
loopne
hlt
add
or
sbb
ss
dec
call
cld
stos
stos
push
dec
fwait
mov
lret
stos
lea
lods
xor
mov
push
mov
stc
rcl
pop
test
int3
sbb
std
and
inc
xor
inc
dec
mov
cli
daa
fidivrl
jge
adc
mov
lods
fcmove
pop
jo
mov
test
pushf
xor
das
imul
push
jne
mov
or
es
and
test
jnp
sub
push
inc
mov
fs
shrb
and
gs
rclb
mov
out
mov
add
lret
dec
xor
mov
jbe
push
fucomip
mov
sbb
aam
fcmovb
jle
pop
adc
loopne
sbb
iret
into
enter
dec
js
fs
leave
adc
mov
cmpsl
push
and
das
fisubs
dec
aad
xchg
sti
or
xor
push
daa
cld
push
andb
and
into
sti
dec
bound
sahf
pop
imul
lcall
adc
dec
pop
div
mov
jno
popf
mov
xor
rorl
mov
xor
aad
test
mov
jbe
cmp
mov
jl
jmp
ficompl
jb
repz
lret
jbe
xchg
fs
push
sbb
out
out
inc
test
scas
adc
mov
scas
imul
out
fadd
cmp
or
call
dec
or
lock
enter
cld
je
out
jno
test
push
pop
test
jb
orl
and
ss
xchg
je
pop
add
out
mov
out
inc
stos
xor
mov
loopne
mov
push
gs
pop
call
rcrb
lret
sti
je
fs
mov
adc
je
adc
push
or
sbb
dec
xchg
sub
xchg
dec
jb
inc
adc
popa
fcoml
cli
mov
inc
push
movsl
shll
xlat
lods
div
push
into
and
push
or
in
xor
incb
push
pop
shrl
loopne
mov
sub
or
push
push
nop
push
ljmp
movsl
scas
int
outsl
xchg
in
fimull
idivb
movsl
in
jns
xchg
mov
cmpsl
ret
stos
cmpb
sbb
cmp
cli
xor
arpl
addl
add
push
lcall
jp
dec
xchg
sub
mov
shll
sbb
out
in
or
or
scas
and
dec
in
cltd
mov
ds
aam
inc
xchg
jno
fidivl
jg
out
jbe
pop
push
xchg
call
movsl
jge
jecxz,pn
das
pusha
mov
shl
jns
or
cmpsb
jmp
insb
sbb
std
jno
in
push
iret
jp
insb
lds
pop
xchg
push
fsubrs
insl
dec
jle
push
push
jb
ret
scas
jne
lock
mov
outsl
push
or
jbe
inc
mov
lcall
pop
pop
xor
clc
pop
xor
dec
mov
pop
mov
lock
pop
out
pop
ss
js
add
jo
jb
aad
cltd
fisubs
sub
jae
in
in
rolb
and
ret
outsl
sarl
add
sub
adc
lds
mov
cmp
sti
inc
jbe
jns
out
jbe
mov
push
stos
cs
cli
pop
jno
lods
add
mov
dec
inc
loop
mov
pop
in
pusha
idiv
loopne
cmp
lret
mov
scas
cwtl
mov
cmpb
jp
int
fstpt
lahf
out
into
xchg
add
jns
rcrl
addb
stos
fisubrl
adc
adc
pop
fst
pslld
lods
push
or
adc
pop
es
push
dec
jmp
sub
shl
mov
add
bound
test
adc
lcall
cli
sarb
mov
dec
mov
add
out
mov
dec
add
adc
mov
pop
ss
pop
iret
sbb
ret
inc
cmp
pop
shll
sbb
mull
adc
and
dec
test
cli
jb
jnp
xor
push
scas
dec
ret
pop
fbld
or
inc
mov
adcl
pop
inc
sti
and
loop
imul
sbb
pop
daa
pop
cmp
popf
push
aas
mov
cld
cmc
xchg
or
and
int3
scas
imul
mov
clc
rcl
cmpsl
sbb
insl
int
sbb
pop
mov
xor
mov
dec
cmp
dec
adc
hlt
or
add
in
inc
adc
rol
push
cmp
mov
mov
add
pop
mov
sub
insl
mov
push
into
inc
dec
sahf
neg
gs
or
mov
loope
push
sahf
lea
mov
mov
inc
jle
inc
sahf
dec
mov
jge
mov
cwtl
notl
decb
lcall
subb
dec
cmp
mov
mov
push
imul
xor
inc
push
rcrb
push
xorl
imul
ja
jle
int
inc
push
add
loop
add
loopnew
lret
push
add
out
xor
in
push
fnstsw
xor
scas
or
mov
movsb
mov
or
xor
inc
sbb
mov
data16
add
aas
add
mov
mov
les
shl
jecxz
push
das
icebp
rcrb
mov
lods
add
cli
mov
adc
stos
loopne
dec
jp
aad
xlat
inc
outsb
dec
mov
insl
mov
sbb
or
mov
mov
add
mov
int3
enter
add
xorl
icebp
sub
inc
sbb
cmp
cltd
lods
out
aaa
sub
lock
jae
mov
outsb
insb
ja
into
pop
xor
and
push
mov
push
xchg
jge
jb
enter
jg
stc
aam
mov
dec
addr16
leave
lret
std
xchg
popf
lds
jp
in
xchg
or
cwtl
iret
mov
rcrb
pop
iret
push
mov
push
loopne
pop
mov
pushf
cld
xchg
mov
push
lcall
shlb
cmp
cmp
push
test
cwtl
fidivrl
rclb
daa
ss
and
push
ret
sub
sbb
mov
sub
fstl
lds
ss
or
cld
mov
dec
loop
sbb
mov
sbbl
sub
pop
pop
gs
xchg
loop
repnz
inc
shl
add
jp
mov
lods
pop
jnp
imul
dec
scas
xchg
in
push
cmovg
ss
fwait
clc
ss
pop
roll
scas
int3
push
jb
neg
cmpsl
xor
mov
mov
mov
inc
mov
xor
mov
ljmp
pusha
aam
repz
negb
adc
test
and
imul
outsl
dec
jmp
mov
daa
cmp
mov
jmp
addr16
or
adc
pop
inc
sub
das
push
sahf
and
cmpsb
gs
jle
push
pop
push
dec
xchg
adc
das
mov
xor
sub
movsl
adc
xchg
stc
test
mov
gs
jmp
xchg
and
repz
mov
sub
dec
ret
outsb
ret
xorl
pop
cmpsl
xchg
fldl
mov
std
push
test
icebp
and
ja
xchg
lods
mov
inc
nop
lcall
cld
inc
mov
lods
push
loop
cmc
inc
push
nop
lret
inc
out
outsb
adc
mov
mov
add
xchg
jmp
fsts
imul
lods
push
sbb
call
sbb
in
bound
mov
data16
jae
aas
cs
inc
and
jno
jbe
lcall
jnp
sub
arpl
arpl
mov
rcrl
mov
movsl
in
cmp
push
adc
loope
add
push
lds
pop
out
cs
mov
pop
sub
sub
pop
or
mov
inc
jo
sbb
fidivrs
leave
mov
push
push
xor
andb
mov
jnp
idiv
adc
int
imul
sub
jge
iret
rcrl
push
shlb
and
inc
std
rorl
lahf
mov
pop
dec
mov
sub
pusha
xor
insl
mov
pop
icebp
mov
scas
inc
or
and
stos
cwtl
pop
cmp
out
adc
mov
int
mov
xchg
mov
xchg
inc
int
lods
fadd
push
jg
lahf
mov
push
out
shr
xor
into
hlt
dec
idiv
inc
or
pop
mov
lds
bound
mov
and
out
xchg
test
bound
lea
lahf
in
rcr
or
push
in
aad
test
ret
test
lcall
dec
in
and
movsb
mov
cli
shrl
mov
pop
mov
int
mov
iret
filds
lds
dec
fidivl
mov
sub
add
adc
js
jl
mov
or
mov
mov
or
mov
inc
incb
xor
xor
xchg
and
xor
mov
iret
jp
xchg
sub
lods
loopne
mov
pop
in
or
jns
loope
clc
repnz
lods
out
pop
jnp
outsb
add
mov
lea
xchg
mov
or
mov
jb
out
rcll
call
sbb
adc
bound
popa
inc
push
pushf
adc
dec
stos
push
inc
pop
mov
adc
ds
xchg
out
mov
in
sbb
jmp
pop
cli
sub
ja
push
loop
pushf
sbb
fs
loop
loopne
in
stc
leave
rclb
loopne
pushf
adc
inc
in
in
arpl
fimuls
or
into
push
inc
inc
mov
push
notl
out
pop
aam
xor
jne
pop
adc
pop
push
dec
mov
mov
jge
cltd
loope
in
repz
repz
cmc
cmpsb
sahf
xor
and
dec
push
addr16
lret
cwtl
and
iret
call
fildl
das
sub
in
lods
mov
cmp
lcall
sub
jo
lea
mov
xchg
loope
dec
mov
push
sbb
loope
adc
xchg
pushl
xchg
add
push
xchg
sahf
rcl
push
mov
push
sbb
cmp
ss
jbe
fsubp
mov
dec
xchg
int
mov
mov
cmp
push
es
rcl
ret
add
cli
mov
cwtl
rorb
mov
in
fdiv
adcl
repnz
mov
sub
scas
jmp
fmul
incb
pop
cld
int
fidivs
inc
and
shll
inc
sub
rorl
ret
ds
out
mov
and
aad
xchg
cwtl
push
mov
adc
xchg
and
cs
movsl
test
decb
gs
cmp
mov
and
test
pop
or
inc
inc
add
fsubs
outsl
fildll
dec
dec
hlt
sbbb
out
xchg
add
jg
or
mov
rcrl
std
jns
fisttpll
lods
testb
xchg
outsb
lock
scas
jp
test
jns
fstps
or
rclb
push
test
pop
sub
xor
je
ljmp
sub
repnz
mov
or
jne,pn
loopne
push
lret
lcall
ss
loopne
in
pop
push
hlt
cmp
add
sub
popf
sti
jne
push
jnp
xor
sub
lods
dec
icebp
loop
fs
pusha
test
or
xor
mov
stc
ljmp
out
sahf
mov
sub
ja
xor
ret
and
sahf
xor
popf
mov
es
mov
orb
or
add
pushf
mov
xchg
sbb
das
jns
cmp
pop
mov
out
icebp
push
out
jmp
clc
ret
into
fcom
or
add
and
ret
push
dec
pop
test
cmp
ret
inc
sbb
rcll
push
cwtl
xor
xchg
or
mov
cmpsb
jp
pop
fadd
and
xchg
push
mov
pop
fnstenv
cmp
enter
nop
pusha
outsb
add
adc
xor
insb
outsl
notb
outsb
pop
fadd
adc
call
jge
sbb
out
mov
out
popl
push
mov
mov
addr16
xchg
addr16
inc
push
dec
bound
sbb
lret
add
loope
mov
jg
mov
inc
clc
inc
jb
mov
sub
aas
ret
data16
and
mov
mov
adc
out
xchg
dec
push
sar
inc
inc
lret
imul
lcall
outsl
and
or
cmp
icebp
push
mov
inc
hlt
sub
or
jmp
in
add
sub
mov
aaa
mov
scas
out
ret
por
xchg
sbb
push
aam
sbb
pop
inc
jbe
sbb
sbb
jbe
mov
ret
mov
mov
ja
lret
outsb
mov
ss
mov
cmpl
pop
adc
outsb
enter
adc
adc
sbb
leave
xor
push
push
add
mov
inc
dec
jp
mov
lret
test
ficomps
rclb
mov
repnz
cwtl
dec
sbb
lds
add
push
adc
xchg
sub
pop
lods
cltd
pusha
in
insl
push
mov
inc
js
jae
mov
aad
fcompp
mov
push
lock
mov
pop
cmp
sahf
lds
orb
clc
add
ja
vmovq
sub
push
outsb
sub
jb
out
shlb
dec
or
inc
mov
mov
pushf
outsb
imul
xor
adc
and
pushf
fstpl
fnsave
fidivrl
ret
test
jmp
push
ror
bndstx
loop
cmp
add
cwtl
mov
xchg
adc
cs
rcll
inc
add
and
pusha
xchg
jnp
sbb
sbb
nop
repnz
and
jns
out
jecxz
push
sbb
lret
pusha
jg
or
xchg
xchg
es
pop
push
cmp
add
test
push
fsubrl
scas
mov
sbb
push
and
int
jmp
lcall
adc
bound
insb
scas
scas
sub
mov
movsl
sub
ljmp
pop
and
push
mov
jne
cmpsb
repz
mov
js
mov
xor
sbb
add
mov
add
std
inc
xchg
aad
jb
and
push
xchg
rolb
jle
mov
jmp
push
insl
xor
mov
loope
push
addr16
cli
push
jo
fidivl
sub
cmp
sbb
xchg
out
sub
out
clc
inc
cmp
int3
mov
sbb
adc
push
ja
dec
outsl
xchg
push
rol
xlat
inc
pushf
jbe
sti
int
dec
jmp
mov
clc
push
test
dec
sahf
in
mov
pop
dec
hlt
dec
bound
test
int3
push
test
notb
rol
push
stos
push
add
cmp
mov
rcrb
push
lods
pushf
enter
xchg
icebp
mov
inc
aas
or
mov
test
pop
mov
inc
fisttpll
push
adc
mov
rcrl
push
std
jp
test
idivl
hlt
stc
into
sub
push
sahf
in
mov
xchg
daa
mov
jae
addr16
in
xchg
lods
punpckldq
dec
adc
imul
fnsave
mul
or
in
into
aam
or
mov
clc
lcall
xchg
movsb
test
scas
movsb
cmpb
shr
add
push
mov
add
push
int
sbb
aad
push
hlt
cmp
test
and
aas
lea
sti
rcll
push
sbb
mov
lcall
shrl
inc
inc
push
cltd
icebp
clc
ret
loop
in
dec
or
pushf
dec
push
cmpsb
lahf
loope
sahf
es
add
jo
mov
dec
push
jg
dec
into
js
and
decb
or
mov
hlt
shrl
call
mov
cs
mov
adc
popa
sub
mov
cmovp
fsubs
shll
jle
sbb
mov
rcrl
pop
dec
addl
popa
into
add
std
daa
lea
or
jmp
push
mov
aad
in
data16
call
mov
fmull
sahf
adc
das
aas
cmp
sarb
loope
add
int3
mov
xor
mov
jp
push
sub
xor
lret
cmp
pop
jbe
leave
fcompl
lock
dec
and
sahf
shl
mov
imul
js
xchg
push
das
int
fwait
ret
push
cmp
loopne
repz
dec
mov
fsubl
mov
xor
ss
sahf
mov
adc
adc
jmp
and
xor
jle
insl
pop
dec
pop
mov
mov
and
jl
jbe
cmp
shrl
mov
push
test
js
jns
and
repz
insl
out
and
cld
sub
nop
fnsave
mov
ja
mov
testb
mov
cmp
pop
and
cmp
ja
pop
addb
pushl
mov
xor
push
fmuls
std
rcrl
mov
mov
popf
js
sarb
outsl
or
and
rcrb
notb
xor
add
add
mov
adc
bound
and
adc
push
sub
mov
pop
dec
lock
cwtl
pop
outsl
hlt
sti
subl
lcall
adc
mov
mov
vdivpd
and
sti
int3
mov
aas
loope
arpl
pop
movsb
repnz
sbb
cmpsl
jns
fs
enter
mov
xor
lods
lds
and
je
lcall
lods
sbb
into
aad
rcl
cmpsb
ret
enter
xorb
sbb
popa
sub
out
jle
out
aas
lds
arpl
push
andb
dec
addr16
adc
iret
imul
add
gs
shrb
add
or
xor
loop
push
rcrb
dec
mov
xchg
out
inc
push
js
pusha
xor
pop
xchg
mov
subb
xchg
mov
lods
lcall
movsl
daa
call
mov
push
add
andb
adc
addr16
add
mov
dec
push
lock
mov
out
sbb
push
lods
pushf
sub
inc
jo
inc
test
popa
insl
jmp
push
pop
icebp
int3
in
rclb
rcrl
and
xchg
loopne
shlb
call
and
fdivl
ljmp
and
fisttpl
add
mov
test
adc
popf
xorl
hlt
je
scas
xor
push
sti
inc
jns
iret
jl
mov
cmp
test
jne
pop
pusha
das
xor
or
push
pop
push
pop
in
mov
into
xchg
push
mov
mov
push
push
lcall
sub
test
pop
jo
mov
aam
and
xor
arpl
stc
enter
pop
cli
jl
cwtl
sbb
inc
and
cltd
popa
notl
push
cmp
sub
iret
dec
loopne
sub
and
mov
andl
add
add
sub
xchg
ret
mov
andl
xorl
stos
rcr
sub
cwtl
in
insl
inc
jo
adcl
loope
push
sahf
loopne
lods
adc
cmpsl
arpl
inc
jnp
jmp
sbbb
inc
xor
les
fldl2t
sub
call
mov
pop
inc
dec
mov
lods
in
xor
add
xchg
rol
xchg
push
mov
cmpsl
pop
in
daa
scas
sbb
rcrb
mov
ja
ret
movsl
pop
mov
out
movsb
cmpsb
orb
or
adc
inc
cld
cld
push
sti
sub
ljmp
push
fmull
xor
cmp
test
mov
int
jl
lret
and
xor
cmpb
adc
enter
dec
sahf
push
dec
dec
pop
pop
psrlq
cmp
sub
icebp
ja
cltd
jnp
xor
or
push
mov
add
test
test
out
rorb
xchg
enter
pushf
insl
xchg
mov
fisubl
cld
adc
xchg
sbb
inc
loopne
lods
sub
adc
or
out
jp
adc
jo,pn
pop
aaa
incb
jns
and
cmpb
sub
pop
lods
ficompl
test
rcrb
test
subl
xchg
fcompl
sub
test
pop
cmp
pop
mov
dec
adc
cmp
clc
dec
cmp
mov
movsb
mov
cs
and
mov
insl
sahf
pop
nop
sti
imul
or
gs
rorl
sbb
testb
xor
insl
into
int
or
xor
test
sub
sbb
insl
push
dec
push
orb
not
pop
xchg
or
std
xor
push
aam
rorl
sahf
stc
add
pop
clc
out
enter
in
xchg
mov
mov
push
inc
sub
xchg
enter
cltd
add
inc
mov
cmp
fcoms
stc
test
xor
pusha
mov
mov
sbb
adc
lea
pop
sbb
das
loop
jmp
ja
paddsw
subl
outsb
icebp
or
add
cmpneqps
lds
in
mov
inc
ret
sahf
xchg
ds
xor
mov
xor
or
frstor
adc
dec
fbstp
sub
push
sbb
inc
fisubs
push
leave
movsl
sub
fisttps
jecxz
inc
inc
gs
or
std
rcll
xor
ficoml
inc
jne
imul
daa
leave
rcrb
pushf
xlat
cli
xchg
pusha
jl
mov
add
sbbb
push
inc
test
test
mov
xchg
stos
lahf
pushf
dec
jecxz
push
sbb
mov
or
lds
out
insl
and
fs
mov
adc
xchg
sbb
dec
daa
push
push
sbb
mov
out
mov
cmp
add
cld
or
shl
pop
imul
jge
xor
cli
push
das
and
xor
cmp
jns
das
lds
mov
aas
dec
loope
mov
enter
clc
jg
inc
movsl
jbe
cli
repnz
dec
adc
pop
lock
in
xchg
inc
mov
orl
or
call
inc
xchg
or
scas
icebp
adc
hlt
dec
subl
jge
scas
adc
adc
xchg
or
pushf
data16
adc
in
cmp
js
leave
xchg
ffree
and
aaa
xlat
inc
mov
adc
js
jmp
jbe
test
push
ds
cwtl
jo
sbb
push
in
cmp
push
jno
cmp
inc
rol
and
fisttpll
shlb
lar
daa
rorl
repz
pop
cmp
les
fwait
insb
popa
dec
sbb
int3
loopne
pop
inc
testb
in
inc
mov
xorl
out
or
mov
out
sbb
pop
push
lods
es
sub
fs
ds
movsb
mov
pop
out
mov
dec
and
mov
push
gs
ljmp
hlt
push
repz
jne
sub
xchg
inc
mov
cmp
jne
push
scas
pusha
into
sbb
clc
lods
es
mov
push
mov
pushf
mov
push
cmp
outsb
cli
xor
mov
mov
push
push
mov
icebp
lret
nop
clc
into
pop
jo
icebp
and
mov
loop
rolb
mov
xchg
stc
into
xchg
shl
ficoms
pusha
push
dec
outsl
js
jp
stos
push
inc
test
iret
push
sti
mov
mov
shl
mov
pusha
add
lods
rorl
add
mov
inc
lret
mov
adc
mov
fs
clc
mov
jno
rcr
xchg
jmp
lahf
clc
mov
int
cmp
cli
es
call
inc
xlat
push
scas
lret
pop
sbb
mov
push
in
repnz
sarl
inc
and
cmp
adc
xchg
pop
mov
test
push
dec
pop
pop
test
jle
outsb
mov
cltd
xchg
push
cld
xor
push
mov
lret
mov
fsubl
lods
mov
dec
sbb
cmp
jle
popf
inc
push
xchg
sbb
clc
push
lahf
jnp
pushf
in
lds
add
xchg
add
push
pushf
jne
scas
mov
jo
push
fpatan
mov
je
int3
or
fldenv
sahf
les
stc
sub
xlat
push
cwtl
and
cmp
andl
cmp
lods
out
lods
je
movl
sar
sahf
fldcw
pop
lods
ret
and
and
xor
rcl
mov
add
xchg
jbe
or
sbbl
call
pop
jo
inc
je
test
xor
cwtl
call
xor
add
add
and
inc
call
sbbl
int
cmc
cld
fldt
dec
mov
popa
fcomi
jmp
adc
cmpsb
or
movb
and
repz
jae
mov
adc
push
out
rdpmc
dec
dec
push
lds
xor
or
mov
shll
lds
mov
outsb
sub
xchg
xor
out
inc
jbe
stos
or
jmp
sub
ja
inc
jo
std
pusha
daa
dec
int
lds
pop
ror
test
into
mov
push
lock
in
into
rorl
ret
enter
push
mov
bnd
jmp
fnstsw
pop
push
movsb
push
sbb
hlt
mov
outsb
inc
call
inc
pop
gs
ret
es
inc
fdivrs
cld
or
cmp
dec
adc
aam
cwtl
std
mov
cmpsb
push
lcall
in
fs
divl
xor
xchg
mov
rorb
pop
xor
into
cwtl
xchg
dec
sub
push
ret
add
mov
cli
push
inc
sub
cmp
xchg
add
test
jo
subl
dec
orb
imul
in
push
adc
pop
dec
leave
and
mov
mov
mov
pop
pop
stos
bound
jae
and
imul
sub
cmpsb
out
xchg
dec
push
ret
dec
jge
push
into
popa
insb
sub
cmc
fdivs
xorl
sub
and
cmp
testb
dec
rorb
xor
in
pop
insb
mov
mov
sbb
ror
add
hlt
and
stos
sub
adc
push
repnz
mov
fldt
int3
jae
sub
aas
int
cmp
cs
addr16
int3
scas
xchg
orb
aas
cli
mov
out
hlt
add
and
in
mov
sahf
xor
fld
sahf
into
or
mov
shlb
fists
std
xchg
sahf
inc
xor
out
test
mov
lock
cmp
xor
xchg
sub
push
sbb
cmpl
xchg
mov
das
hlt
fidivs
loope
jp
jae
daa
xor
aaa
jnp
jne
sub
inc
jnp
lcall
or
push
mov
sub
dec
and
icebp
lds
sub
movsb
hlt
and
dec
int3
inc
jb
cmp
addr16
dec
rclb
rolb
fisttps
sbb
sub
xchg
sbbl
in
sub
shll
popf
out
mov
sbb
mov
dec
xchg
push
mov
les
xor
in
add
out
std
stos
pusha
das
repnz
or
icebp
cmc
mov
mov
popa
and
fbstp
jmp
jle
fldt
xchg
mov
in
lret
jle
mov
jne
lahf
sub
ret
leave
je
inc
movsb
ficompl
push
mov
jmp
repz
bound
cmp
mov
xor
mov
movsl
mov
push
dec
hlt
sbb
outsl
mov
xchg
or
in
pop
xor
aad
cld
and
mov
loopne
and
sbb
popa
rcr
adcl
iret
lods
dec
adc
pop
sub
stos
imul
xchg
stos
sub
outsb
ret
fmuls
jo
inc
mov
loop
push
xor
sbb
idivl
mov
add
add
mov
popa
jge
lods
mov
lock
test
pop
dec
jae
std
jge
scas
insb
mov
dec
mov
out
pop
mov
fisubrs
pop
jecxz
cmp
push
loope
ja
mov
movsb
pop
fistps
pop
jl
and
sub
xor
adc
filds
sub
mov
test
xchg
pushf
xchg
ljmp
jp
push
sti
lret
add
nop
xchg
jmp
mov
outsl
stc
js
xchg
pushf
arpl
add
jmp
and
arpl
push
xor
in
repz
dec
pop
outsb
lds
pop
shr
dec
lea
dec
mov
adc
repz
lret
inc
sub
sub
adc
enter
sbb
rol
das
dec
sti
push
adc
push
bound
cmc
arpl
roll
scas
mov
out
dec
xchg
push
sarl
mov
ret
xchg
adc
or
test
div
mov
xchg
lock
or
out
pop
jmp
mov
add
sub
into
add
icebp
cs
lds
push
out
jnp
int3
jbe
les
cmp
xor
fs
adc
inc
cmp
incl
sub
and
imul
fidivl
adc
push
fcom
jb
stc
mov
push
push
pop
mov
push
mov
pandn
add
jmp
test
jp
fisubrl
jl
cltd
sbb
fisubl
or
sub
aaa
fcomps
xchg
neg
cmp
pop
sbb
mov
push
cmc
inc
add
sbb
mov
sti
lahf
cmp
outsl
fcoms
inc
int3
cmp
add
cmp
sbb
mov
xchg
pop
or
das
push
adc
add
sarb
or
mov
and
jo
jl
adc
insl
or
xor
lods
add
pop
filds
faddp
xlat
mov
movsl
ror
push
cmpsl
or
sub
lea
dec
mov
xchg
push
mov
out
mov
into
push
cmp
sar
pop
cli
test
in
fisttpll
cmpsl
ljmp
mov
mov
incl
shlb
cmp
cld
add
sbb
lret
mov
rcrb
pop
jae
cltd
popa
push
xor
loop
out
cmp
mov
inc
in
sbb
loopne
outsb
sub
ss
loop
adcb
pop
aam
cltd
pop
cmp
movsb
mov
call
adc
xchg
lods
pop
loopne
into
aam
add
shlb
scas
jge
rcl
aad
dec
daa
cs
add
in
leave
mov
mov
pop
jl
add
push
push
shrl
push
ret
into
push
xchg
and
add
in
pop
mov
push
cli
movsb
pop
mov
das
lods
adc
scas
add
push
mov
sbb
outsl
push
pop
push
outsb
rclb
addl
test
adc
fcomi
pusha
out
jns
jecxz
adc
insl
dec
adc
cmp
test
scas
rorb
mov
fmuls
or
iret
test
pop
scas
ret
mov
jle
movsl
ret
in
sbb
adc
mov
push
jne
push
ror
iret
in
sarb
dec
loop
stc
mov
or
sbb
andb
fldcw
sti
and
neg
ret
outsb
inc
inc
arpl
in
inc
daa
jmp
mov
xchg
int
mov
push
sbbb
outsb
out
inc
and
or
pusha
mov
lcall
xchg
cltd
imul
cld
iret
push
inc
jmp
scas
cld
xor
int
rcr
cmp
je
stc
sbb
dec
cs
push
jmp
xor
out
rol
aas
jb
mov
les
mov
pusha
sub
sbb
mov
les
push
clc
rcr
inc
pop
and
push
repz
test
jnp
xlat
sbb
into
dec
imul
lds
stc
push
ljmp
or
jns
test
or
push
mov
scas
xchg
and
fsubrl
gs
xor
adc
mov
mov
sbb
pop
test
mov
pop
int3
shl
je,pn
int
jge
mov
scas
rorl
sub
xchg
jno
sti
sbb
repz
shll
dec
adc
das
cli
push
gs
mov
jbe
mov
mov
push
sti
imul
rorb
pop
jmp
lds
cld
ds
testl
cltd
xor
rorb
and
imul
cmp
cmp
insb
testb
and
in
call
sub
cmpsb
and
inc
mov
fstpt
inc
jns
dec
add
faddp
hlt
ss
or
jo
iret
xor
popf
ret
jp
and
inc
outsl
sbb
repz
enter
mov
jge
and
sub
ja
mov
repz
gs
jmp
fcompl
cmp
clc
insb
cwtl
mov
call
gs
dec
out
add
fldt
ds
lcall
outsb
stos
mov
mov
push
or
push
out
adc
bound
inc
nop
enter
adc
out
enter
lds
add
testb
sub
xchg
xchg
icebp
push
cltd
comiss
out
scas
fbld
cltd
sahf
mov
or
lock
out
xorb
mov
aad
sub
pop
push
clc
dec
filds
cmpsl
insl
mov
fsubs
push
es
ds
xor
hlt
shlb
dec
adc
inc
js
loope
push
hlt
je
inc
push
iret
fldenv
xlat
cld
xor
lret
mov
push
cs
push
cmovle
dec
dec
jg
dec
cmc
and
dec
jnp
ret
pop
mov
nop
cmp
rcrl
push
popf
pop
aas
add
les
dec
out
pop
loope
sub
cmp
pusha
dec
hlt
shl
mov
sbb
call
push
test
push
or
sbb
cmp
daa
pop
ds
daa
movsl
int3
ret
xchg
mov
cli
pop
jmp
mov
add
mov
adc
dec
nop
loopne
mov
popf
ret
enter
inc
dec
mov
aam
jno
jae
sbb
or
pop
jle
pop
aaa
cli
test
or
in
sbbb
mov
pop
pop
sarb
xchg
mov
ljmp
mov
xchg
bound
mov
add
fiaddl
pushl
cwtl
push
sub
imul
or
cmp
sarl
rcrl
adc
push
std
test
inc
jne
mov
dec
mov
pop
xor
das
jne
push
mov
inc
xchg
int
mov
mov
clc
outsl
cmpsl
xchg
fwait
pop
stos
pop
or
lahf
cmp
or
mov
and
lret
jge
jmp
out
shll
push
iret
push
push
xchg
enter
or
shrl
scas
imul
xor
push
aaa
pop
insb
sti
pop
cs
adc
aas
sub
inc
std
push
mov
jle
xlat
push
js
and
pop
sahf
inc
aaa
cmp
mov
outsb
insl
test
mov
decb
inc
mov
gs
hlt
inc
test
arpl
push
lcall
add
cmp
mov
xor
popf
sbb
lret
mov
push
adc
mov
push
mov
dec
push
adc
stc
jecxz
aas
xchg
pop
jp
in
mov
aas
pop
arpl
stos
syscall
push
mov
mov
and
es
jae
test
mov
xchg
lea
mov
sub
xchg
insl
dec
jns
dec
ret
pop
ficomps
in
xor
xor
adc
repnz
jb
fists
cli
cwtl
jbe
dec
push
test
movsb
out
mov
int3
jmp
cmp
stos
mov
or
xor
fadds
add
jb
adc
stos
testl
in
push
sub
mov
int
scas
imul
movsl
jns
aas
and
xchg
fwait
mov
sbb
addl
cmc
in
xor
mov
mov
cli
push
aaa
std
call
js
pop
imul
sub
js
or
jnp
decl
and
in
enter
adc
insl
mov
xchg
imul
ret
arpl
scas
imul
loope
mov
stc
aad
lahf
jne
push
adc
rclb
push
cmp
lret
imul
out
lret
jmp
movsb
das
test
mov
pop
std
test
cmp
push
fidivrl
or
nop
dec
sub
int3
xchg
sahf
xor
jne
xchg
shll
ja
bound
pop
cmp
aas
add
mov
test
jne
inc
rolb
sahf
xchg
outsb
outsl
jbe
inc
mov
fbld
pop
mov
lahf
aaa
xor
or
pop
std
sbb
popf
incl
fnstsw
sti
sub
aam
cmp
cmp
bound
pop
icebp
mov
clc
pop
arpl
iret
adcb
push
hlt
sub
mov
sbb
inc
fs
or
js
cmpsb
out
xchg
sarb
or
mov
ret
cli
jecxz
push
sub
out
pop
aad
inc
adc
std
inc
push
xchg
cmc
mov
dec
lods
lock
and
loop
dec
clc
sub
int
pop
lock
sbb
mov
sub
add
icebp
popf
add
dec
push
test
mov
and
aaa
stc
inc
addr16
pop
jno
scas
jnp
mov
popf
jmp
add
xor
pop
push
jno
xor
jne
fbld
out
xor
sbb
fimull
and
pop
pop
jns
fcos
enter
mov
mov
pop
mov
orl
insl
into
mov
dec
jl
test
out
cmp
adc
jno
dec
jbe
jmp
pop
outsl
xorl
jbe
test
sub
idivb
rcrb
mov
and
mov
fbstp
popa
sahf
insb
jge
arpl
jno
and
push
lahf
mov
pop
xor
inc
dec
subl
jmp
inc
sub
ficomps
idivb
adc
jl
jns
adc
rcrb
loope
cmpsl
push
ficomps
orb
lods
call
inc
dec
clc
test
xchg
into
aaa
cmpsb
popa
cmp
pop
repz
test
outsl
incb
cmp
inc
in
mov
push
gs
pop
rclb
and
aas
mov
dec
cmpsb
js
cmpsl
lods
shll
inc
out
pop
pop
xor
push
push
sbb
in
sahf
test
and
in
add
js
xor
mov
fadds
aad
xchg
mov
mov
scas
inc
mov
imul
shll
enter
scas
ret
inc
jmp
clc
adc
shrl
imul
sub
lahf
cld
insb
scas
out
rcl
push
cltd
clc
push
or
sbb
push
push
pop
mov
dec
pushf
fbstp
xor
mov
fiadds
leave
or
shrl
inc
jge
and
out
aam
jno
mov
ret
jle
sbb
sti
sub
cmp
ljmp
push
dec
clc
sub
lcallw
sarl
pusha
pop
cmpsl
fildll
mov
lea
fcomp
pop
mov
dec
pop
mov
rolb
es
cmp
das
fisubs
dec
xor
adc
popf
cmp
icebp
mov
dec
daa
sub
out
cmpb
out
xor
mov
dec
and
inc
loop
sbb
dec
andl
daa
sub
mov
sbb
test
imul
lcall
push
cs
subb
aas
dec
adc
imull
push
adc
jae
lahf
sahf
pop
cmpsl
push
imul
scas
push
jns
jmp
mov
adc
mov
pusha
and
pop
adc
xchg
divb
sbb
push
jae
stc
pushf
mov
ret
mov
loope
dec
mov
ds
pop
inc
mov
les
cmp
pop
into
mov
xor
pop
and
push
pop
jbe
mov
jge
cmp
ret
fbld
inc
out
push
mov
mov
inc
cs
mov
inc
ret
xchg
sbb
sub
xor
loop
cmpsl
xchg
popa
popf
cmp
push
or
ret
daa
add
int
dec
fwait
adc
imul
mov
dec
lock
subb
lret
dec
mov
fld1
xchg
mov
jmp
dec
sbb
jo
out
fldt
or
cmpl
gs
mov
stos
lahf
xchg
sub
arpl
pop
mov
xchg
imul
jb
sarb
es
test
loopne
sub
jle
stos
mov
sarl
inc
mov
ss
sbb
push
test
out
push
outsl
cmpsb
notl
push
push
ds
in
repz
imul
subl
mov
fstps
stos
fs
push
push
cwtl
jmp
call
xchg
je
jecxz
fdivrp
and
and
push
ja
cmc
bound
add
shrl
cmp
xor
adc
loopne
fwait
out
pop
std
inc
std
mov
inc
dec
outsl
mov
aas
sarl
inc
lods
push
mov
mov
cmp
cmp
xchg
xchg
lods
mov
ret
hlt
in
out
sbb
inc
xchg
add
xor
cwtl
mov
shrl
out
cmp
xor
insb
jle
fs
mov
cld
inc
jno
aaa
sbb
dec
lock
mov
insl
adc
cmp
cmp
aaa
mov
lods
loop
das
mov
ljmp
xor
fstpt
push
jb
add
shll
jb
cmc
jns
sti
loopne
push
mov
push
add
push
daa
dec
xlat
cltd
push
jns
div
rcr
out
loopne
xor
cmp
mov
lock
jmp
dec
sarl
lock
sub
jmp
cmp
cmpsb
or
mov
ret
dec
and
add
int
mov
xchg
in
xor
xor
inc
test
aam
daa
inc
outsb
lret
xchg
popf
and
imul
icebp
and
imul
pop
and
int3
test
sbb
sbb
test
lea
sub
pop
xchg
repnz
push
push
push
and
test
dec
mov
push
xchg
dec
xlat
addr16
mov
or
or
push
xor
fucomi
adc
mov
out
push
fsubrs
out
popa
addr16
dec
aaa
lcall
mov
xorb
dec
inc
unpckhps
addr16
pop
adc
or
jg
xor
inc
bound
jle
inc
xchg
pop
popa
xchg
es
ja
cmp
mov
push
insb
cli
cmpsb
pop
out
daa
scas
stos
stos
and
lock
fs
mov
fwait
adc
inc
pop
mov
or
cs
xor
lods
nop
sub
in
ja
and
adc
mov
and
xchg
test
adc
push
fists
xor
aas
repnz
movsl
lret
mov
inc
jecxz
mov
insl
popa
cmp
mov
shll
push
jnp
pop
pop
sbb
xor
in
outsb
shlb
aaa
pop
cli
gs
in
pusha
mov
mov
shrb
or
fidivrs
jb
popf
mov
adc
imul
xchg
out
cmp
stos
arpl
lds
lods
sbb
push
out
and
dec
xor
jp
loop
dec
mov
cltd
ljmp
pop
xor
xor
dec
loope
pop
icebp
icebp
mov
dec
ja
cmc
add
cmpsl
pop
or
icebp
cld
cmpsb
out
fiadds
xchg
and
imul
sbb
cmp
mov
xor
sahf
cmp
push
push
lcall
or
cmpb
add
xlat
jle
jb
loope
and
inc
stos
mov
jae
push
dec
out
fstl
fsubrs
add
shrl
outsl
sbb
iret
ret
test
fisubrs
and
push
dec
negb
adc
sbb
sbb
jo
dec
out
jb
ss
clc
xchg
js
gs
sbb
push
test
int
repnz
mov
popa
mov
sub
or
cmpsb
lock
inc
into
xorl
loope
subl
aad
inc
jg
out
cmp
push
cmpl
fsubrl
cmovne
mov
xor
loop
xlat
or
subb
jno
rcr
inc
xchg
outsl
lods
xor
roll
push
mov
xchg
fs
inc
scas
or
rolb
jne
mov
inc
pop
mov
jmp
shlb
mov
popf
xchg
add
jecxz
out
cmc
int3
movsb
sub
sub
stos
sar
cmpsb
push
das
cmp
test
xchg
xchg
xchg
fwait
mov
pop
cmp
lret
rorb
rorb
jl
cmpsl
ds
je
xor
hlt
dec
dec
das
and
rcrb
pop
and
insb
adc
pushw
mov
xchg
int3
cmp
mov
fildll
loope
fistpl
inc
dec
mov
adc
inc
ljmp
inc
stos
mov
push
cmp
cmpsb
sbb
mov
hlt
aam
push
pop
aam
aam
xor
push
inc
xchg
pop
pop
xchg
xchg
mov
pop
cmpsl
imul
and
fimuls
sti
sub
fidivl
jmp
jge
shrb
or
add
int
sub
lahf
ret
jnp
mov
stc
push
ret
inc
push
mov
adc
das
lods
sub
mov
mov
sti
outsb
lea
sub
dec
mov
out
frstor
push
push
lock
sbb
dec
jmp
adc
repnz
sahf
sub
cmp
cli
outsl
mulb
fbld
xchg
mov
pop
shrl
loopne
push
fcomps
jnp
dec
lock
fs
sbb
mov
xchg
test
and
movsb
xor
pop
dec
cs
fsubrl
xor
jecxz
push
xchg
add
sub
inc
stc
insl
pxor
jl
stos
xor
cmp
mov
ficompl
into
cmpsb
jmp
aad
sarl
cmpsb
inc
sbb
sbb
jo
in
push
aad
mov
test
dec
jmp
sti
sbb
mov
cmp
cmp
push
fwait
xchg
mov
stos
das
and
mov
je
pop
and
fidivs
jmp
push
test
adc
jecxz
aam
xchg
daa
popf
cs
cltd
sbb
mov
sub
inc
push
sub
ficoms
cmp
fisubl
cmpsl
mov
pushf
sbb
in
lret
sbb
inc
xchg
outsb
xchg
sub
aas
jmp
mov
xchg
movsb
inc
xor
cs
or
jns
push
adc
mov
pop
movsl
add
aas
mov
jp
cmpsb
cmc
cld
lods
or
adc
sbbl
lea
and
lods
cmp
and
push
out
dec
lret
lea
mov
pusha
mov
ja
je
aas
push
jmp
addr16
mov
out
mov
sbb
fwait
pushf
fs
shrb
add
fwait
cltd
lods
or
jge
in
and
adc
in
push
push
pop
bound
sahf
lea
add
test
adc
xchg
push
test
cld
xchg
icebp
aad
xchg
setp
xchg
pop
loop
xor
imul
ljmp
sbb
pushf
xchg
push
in
jge
cld
mov
inc
pusha
lea
mov
lods
jp
cmp
jo
dec
xchg
repnz
scas
mov
test
testb
insb
jge
jle
jg
jns
or
xchg
jns
jne
aaa
ret
push
dec
dec
mov
jno
out
add
jp
pop
or
and
bound
data16
jmp
insb
out
jno
and
out
pop
adc
inc
push
xchg
leave
cmpsl
cltd
cld
mov
dec
dec
jmp
mov
jne
in
das
orl
rcrb
sahf
imul
jle
sar
nop
lock
mov
loopne
shll
loopne
mov
push
fcomps
arpl
xor
cmp
jae
mov
repnz
imulb
pop
fildl
mov
lret
les
mov
add
dec
movsl
inc
out
mov
inc
jecxz
jle
repz
test
mov
loop
sbb
ss
and
mov
inc
sub
jecxz
mov
xchg
push
lds
fld
lds
jbe
lods
incl
imul
mov
cmpsl
in
mov
push
test
push
mov
test
xchg
roll
inc
hlt
jecxz
pop
jecxz
adc
jl
inc
orb
fsub
icebp
mov
xor
or
ds
movsb
fisttps
fdivr
dec
dec
iret
mov
adc
pop
mov
fldcw
je
stos
dec
and
ljmp
xor
adc
sub
es
nop
call
mov
pop
shlb
xchg
popf
popa
cmp
pop
jle
pop
adc
jne
xor
inc
add
test
imul
rorl
jge
dec
pop
mov
add
in
movsb
enter
imul
clc
mov
or
inc
iret
push
sub
rcl
mov
xchg
pushf
lahf
in
hlt
fabs
jle
and
mov
hlt
jle
mov
loop
cmp
xor
repz
cmc
addb
inc
sbb
aad
mov
cli
bound
sbb
insl
fstpl
jp
sub
add
fisubrs
pop
push
cmpl
int3
sahf
and
inc
outsb
inc
loope
push
xor
ds
icebp
loopne
or
std
iret
out
xor
fwait
cld
jl
ret
add
mov
lods
cltd
pop
adc
sbb
aam
sbb
test
mov
mov
jbe
sti
push
sbb
jle
pop
es
xchg
xor
push
je
mov
fisttpl
mov
fs
lahf
and
cmp
cmp
pop
lcall
cs
sub
sub
in
mov
add
pusha
test
mov
popa
and
pushaw
lcall
lcall
lahf
fs
pop
ljmp
push
ss
mov
mov
mov
sbb
mov
iret
inc
adc
or
out
jb
call
mov
sub
or
rsqrtps
jne
mov
push
push
jge
push
cmpsl
js
dec
jmp
jbe
rcrl
arpl
lret
loop
sahf
cmp
clc
inc
xchg
dec
push
cmp
xchg
fiaddl
sbb
in
movsl
subb
adc
iret
dec
stos
and
dec
sub
daa
fcomps
sar
inc
stc
inc
stos
fwait
mov
cmp
jno
sbb
iret
stos
dec
adc
pop
inc
dec
in
iret
jmp
in
mov
shlb
dec
dec
pop
dec
loope
mov
or
mov
xchg
push
jmp
sub
outsb
cmpb
sbbl
xchg
mov
push
sti
jmp
pop
mov
pop
mov
xchg
xor
mov
repz
cltd
pcmpeqw
daa
clc
in
cmp
arpl
sub
inc
cmc
js
jne
fmull
scas
mov
stc
rcl
shrl
mov
mov
add
pop
xor
jae
bound
add
add
cmp
push
mov
pop
leave
and
dec
cmp
es
cmp
push
sub
pop
sub
sub
repnz
mov
sbb
loop
cltd
rclb
ljmp
mov
mov
outsl
aas
negb
testl
mov
nop
lods
inc
shrl
cmc
adc
andl
push
inc
mov
or
jg
int3
xchg
pusha
push
cltd
stc
and
or
movsl
xchg
fstl
jecxz
cmpsb
mov
jnp
mov
push
mov
jb
sub
jecxz
mov
or
inc
out
lret
mov
fs
pop
jp
mov
xorl
sub
out
test
pop
cmp
clc
mov
push
fwait
mov
or
shr
adc
fiaddl
into
pop
mov
sub
xchg
jae
pop
outsl
fadd
in
mov
xor
mov
or
pop
cmp
scas
call
or
cmp
in
cli
jmp
jg
or
adc
cmc
sbb
sbb
lcall
push
pop
jl
mov
fs
jmp
adc
xchg
iret
outsl
pop
pop
std
push
xor
push
hlt
jl
adc
and
jecxz
sarl
shlb
add
jno
mov
lods
stc
sbb
mov
push
sub
sub
push
lret
adc
popf
dec
lods
es
shll
stc
lret
or
lret
aaa
push
loopne
fwait
push
addb
sti
fnstenv
sub
inc
pop
pop
jns
mov
rclb
jge
lret
mov
xchg
jge
xorl
data16
dec
cld
js
repz
mov
lods
dec
enter
out
mov
xor
inc
nop
cmpsb
iret
in
dec
gs
sub
shrb
mov
sbb
loope
mov
clc
out
dec
lret
push
enter
xchg
add
jecxz
mov
and
jbe
lods
out
sub
jecxz
popa
push
sbb
or
ljmp
inc
dec
pop
pop
cmc
inc
mov
push
xor
add
mov
sub
jo
cmp
jne
pop
fists
and
inc
movsb
leave
popf
lret
aam
lea
xchg
pop
pop
stc
lret
xor
into
sub
push
testl
pusha
jp
shll
xchg
xchg
jnp
mov
das
jae
push
jmp
inc
lret
or
or
jge
mov
xchg
aad
out
cmpsl
xor
fadds
sbb
sub
sub
inc
sti
or
int3
mov
out
lret
pop
or
inc
arpl
cmp
push
cmp
out
mov
ret
mov
mov
notl
cmpsl
sub
cs
fcmovne
jge
leave
scas
push
gs
mov
xor
pop
lahf
inc
sub
loope
lret
js
stc
stc
loop
cmpsl
mov
xchg
adc
outsl
shll
ja
xor
jp
lds
mov
mov
insl
push
addr16
daa
dec
jb
daa
test
arpl
lahf
leave
testl
stc
pop
dec
movsb
xchg
stc
jl
decb
inc
add
stc
les
pop
push
test
divb
pop
or
ret
jle
shl
pmuludq
out
sub
subl
pop
pop
jo
into
sub
popa
iret
pop
data16
mov
popf
cwtl
leave
xor
mov
into
adc
mov
mov
xor
and
mov
or
out
pushf
fstps
pop
mov
dec
adcb
cs
popf
xlat
fidivl
mov
sbb
cmpxchg
or
adc
rcrb
xor
pop
sahf
cmp
jg
inc
mov
pop
rclb
insb
scas
mov
mov
xchg
pop
jb
out
test
mov
neg
push
js
mov
fucomip
ljmp
mov
push
push
push
or
pop
imul
fidivl
sbb
sub
mov
jo
sbb
repz
push
movsb
dec
pavgw
sbbl
adc
call
mov
mov
and
pop
out
pop
stos
movsl
test
orb
or
mov
inc
and
cld
adc
xchg
xchg
push
test
adc
popa
cltd
aas
sti
loop
or
in
lret
in
dec
mov
mov
adc
into
bound
and
mov
jg
data16
clc
subl
ss
jb
jge
jns
icebp
push
add
test
outsl
xlat
mov
adcl
or
cmpsl
sbb
lods
adc
mov
xchg
mov
add
mov
sub
cmp
jmp
test
ficoml
dec
xor
jle
mov
popa
ret
pop
or
dec
ficomps
cmp
pop
add
mov
inc
dec
mov
and
jno
fcomps
test
fisubl
nop
xchg
push
jmp
or
lock
sub
lret
lar
daa
mov
test
push
pop
sarb
inc
fs
push
bound
jl
cmp
fimuls
aaa
lret
dec
imul
test
push
bswap
movsb
stos
dec
outsb
inc
mov
dec
out
xor
insl
and
inc
sbb
jne
pop
mov
jl
push
jmp
jbe
ss
dec
aad
out
jmp
mov
mov
clc
in
cmp
bound
xchg
xchg
into
dec
int
sti
mov
mov
pop
lea
pop
cmp
repnz
sub
jmp
test
cmp
push
hlt
mov
sub
inc
cmp
pop
inc
xchg
jb
cltd
adc
sub
inc
or
bound
cmp
mov
push
inc
inc
loope
and
cmp
dec
inc
push
cltd
add
in
outsl
loopne
scas
mov
and
sbb
pop
inc
pop
sbb
pop
movb
out
int3
loop
adc
lock
pop
pusha
std
dec
or
sub
out
add
xor
mov
adc
cld
inc
or
mov
pop
ljmp
mov
lods
stc
push
add
jge
xchg
pop
add
in
sub
add
das
imul
mov
mov
loopne
sub
sbb
mov
out
sbb
sbb
scas
lea
clc
cli
pushf
aas
mov
out
and
fadds
lods
aam
sub
pop
bound
dec
mov
mov
insl
mov
int3
pop
and
popa
scas
pop
int
mov
cmp
mov
cwtl
jmp
cltd
ss
mov
enter
jle
loop
jae
paddq
shll
test
jnp
sbb
sub
cmpsb
clc
lds
mov
outsl
sub
nop
fwait
jnp
stc
imul
dec
aam
ljmp
mov
ja
jne
and
xchg
scas
push
push
cmp
enter
xchg
ds
movsb
cmpsb
adc
xor
xchg
lret
pop
cmp
je
movsl
test
lcall
out
jge
scas
mov
std
cmp
fiadds
popa
add
jp
mov
pinsrw
sub
mov
test
stos
bswap
aam
in
leave
pop
cmp
ja
sahf
and
push
jecxz
pushf
inc
pop
imul
adc
ja
mov
cwtl
aaa
fdivr
popf
cmp
cmp
scas
test
inc
mov
pop
je
test
in
push
mov
lock
jmp
push
imul
cli
or
push
xchg
iret
push
mov
ja
ljmp
insb
dec
incb
xchg
ljmp
mov
jmp
mov
aam
outsl
movsb
xchg
dec
in
mov
cwtl
aas
cmp
push
inc
sbb
lret
iret
ljmp
imul
aaa
sbb
or
js
shlb
pop
in
into
repnz
les
test
and
das
in
rcr
inc
stos
pop
mov
xlat
movsb
cmp
cmp
aaa
xchg
xorl
add
sbb
shll
mov
mov
push
jne
icebp
push
or
jge
arpl
repz
shl
mov
aaa
adc
push
or
xorl
jne
jnp
xor
cmpsb
mov
loope
mov
jmp
dec
in
in
ljmp
outsb
and
out
insl
push
js
aaa
bnd
push
imul
inc
neg
cwtl
pop
cwtl
ljmp
push
jg
jl
jl
inc
scas
dec
cmp
push
lea
push
les
jl
push
jb
mov
in
sub
stc
mov
add
push
je
bound
push
hlt
fstpt
jp
ss
push
test
mov
fs
cmp
pop
das
popf
xlat
movsl
pop
js
test
pop
xor
fwait
inc
data16
mov
xor
ret
add
lock
iret
fs
dec
cmpsl
mov
xchg
mov
jmp
sahf
iret
hlt
out
mov
add
push
and
jne
mov
call
lods
pop
stos
mov
out
fwait
shrb
xchg
xor
xor
xor
inc
lret
lock
xchg
mov
xor
and
or
jecxz
xor
adc
mov
cwtl
iret
in
dec
jns
jle
pop
cmp
sub
cwtl
sbb
imul
xlat
loop
int
jns,pn
adc
sbb
cltd
shll
cmp
scas
mov
xchg
mov
mov
dec
bound
outsl
movsb
in
in
pusha
int
cs
pop
ss
xor
std
mov
out
and
aad
rcll
ljmp
cmp
data16
aas
in
sbb
add
dec
dec
mov
and
stc
loop
lods
ret
fbstp
in
ret
lds
add
int
cmpsb
jecxz
jbe
and
out
pop
pop
jno
arpl
and
xor
cmp
add
pop
push
outsb
pop
lods
ljmp
pop
rorb
pop
xchg
bound
pusha
pop
add
jmp
cli
stc
arpl
dec
cmpsb
jp
and
or
scas
stos
into
cmc
loop
stos
jae
shlb
or
cmp
test
mov
jb
xchg
mov
jns
inc
out
iret
jge
imul
jbe
or
fidivrs
mov
int
leave
int
repz
shlb
jo
sbb
jno
cltd
aad
cmp
int3
in
jle
push
mov
mov
fs
in
out
push
flds
loopne
xchg
fs
fs
scas
cmc
call
lods
push
subb
gs
mov
xchg
cmp
mov
jne
jmp
test
adc
xor
insb
mov
clc
adc
mov
inc
sbb
xchg
shrl
inc
daa
nop
xor
bswap
test
fldenv
mov
xchg
fistl
xchg
test
fs
leave
mov
scas
mov
into
jl
popa
xor
mov
ret
and
mov
scas
pop
or
adc
or
mov
adc
add
dec
in
daa
je
or
dec
cld
and
xchg
mov
add
orb
call
outsb
out
dec
and
mov
xor
and
cs
arpl
scas
inc
scas
cmp
pop
inc
mov
call
sub
cmp
bound
cmp
test
enter
call
fs
push
inc
clc
mov
and
in
mov
mov
add
lods
fcmovnbe
and
pop
jg
cmp
fdivrl
xor
jb
push
mov
jae
scas
test
iret
xchg
movsl
rcrl
mov
pop
xchg
daa
add
jmp
mov
aas
dec
decl
imul
cltd
in
gs
pop
aaa
cmp
pop
mov
cmpsl
sahf
test
int
adc
jmp
es
addr16
cmpsl
scas
xor
and
icebp
jne
mov
mov
lret
or
and
hlt
outsb
loopne
mov
scas
push
sbb
call
fstpt
pop
shll
fisubs
imul
leave
arpl
repnz
int3
mov
test
shll
dec
add
das
imul
ret
lcall
call
jns
sub
loop
or
mov
aam
lods
cmp
icebp
push
imul
sbb
cmp
lea
and
jge
adc
ljmp
xchg
mov
xchg
decl
js
jp
dec
mov
insb
xchg
xchg
sti
sbbb
add
cmp
push
and
scas
push
es
movsl
pop
dec
cmp
sub
xor
xor
lea
cli
pushf
rcll
ljmp
add
scas
push
sahf
sub
or
xchg
pop
out
sub
and
pop
loope
sarl
punpcklwd
jg
idiv
cmp
or
lret
aas
and
add
push
sti
xor
adc
push
in
ja
adc
sbb
inc
dec
das
ret
aas
fs
jp
sbb
enter
xor
mull
sarl
aam
mov
rorb
and
sbb
push
ss
pop
test
mov
cmp
aas
or
sub
mov
call
or
sub
push
mov
lahf
test
jb
shrb
fstpt
ljmp
scas
clc
shl
jmp
rcrb
inc
aas
out
test
lds
mov
mov
mov
push
mov
jno
iret
dec
sahf
imul
rcll
sub
jg
mov
std
or
push
pusha
xor
rcrl
mov
call
pop
insb
inc
test
fstl
adc
cltd
mov
mov
xor
adc
fidivs
push
sahf
add
pushl
popf
cwtl
fistps
pop
test
sarb
mov
dec
clc
ret
sub
mov
decl
insl
cli
outsb
repz
int3
mov
stos
scas
cli
lea
ss
inc
dec
in
pop
and
sub
cmp
cmp
inc
mov
lret
mov
negl
mov
out
jno
cmpsb
xchg
int3
adc
sbb
lahf
ljmp
xorl
lock
pop
add
stc
out
sub
pop
enter
mov
ss
inc
mov
mov
pop
es
jg
cltd
scas
mov
pop
mov
push
pop
mov
inc
mov
inc
adc
xchg
or
outsl
stos
movsb
cmc
ja
ss
negl
fcoms
add
sub
cmp
mov
insb
xor
push
mov
mov
cmpsl
mov
jnp
mov
mov
cmp
fnstcw
cmp
scas
ljmp
add
mov
es
push
data16
adc
cwtl
mov
xor
imul
call
cmpsl
test
dec
cmp
xchg
lret
and
movsl
dec
in
mov
jne
jne
mov
int3
test
arpl
sub
lds
bound
lods
dec
add
repnz
daa
div
fimuls
and
add
inc
sbb
dec
fcoml
test
imul
loope
cmpsl
inc
test
push
cltd
jno
sar
andl
or
cmpsb
lahf
adc
sub
cmp
and
inc
cli
mov
in
add
frstor
nop
mov
push
shr
xchg
push
les
scas
mov
xchg
push
cmp
inc
adc
out
mov
mov
sbb
adc
call
lret
dec
add
push
sub
sbb
incl
shlb
mov
push
out
xchg
outsb
nop
mov
into
fs
data16
mov
stos
pushf
sbb
mov
ret
push
loopne
roll
and
dec
cwtl
cmp
add
jle
jne
adc
dec
imul
rclb
call
push
add
mov
mov
jo
xor
fsubrs
jns
add
mov
jecxz
ds
xchg
iret
push
jbe
rcrb
int3
mov
and
jno
xor
fs
cmp
jne
test
out
iret
nop
adc
push
push
pop
popa
pop
pop
jae
sbb
push
aam
hlt
adc
sbb
mov
imul
xchg
and
pop
dec
dec
push
push
mov
dec
xor
negb
jp
dec
aas
aam
pop
addr16
mov
pop
dec
adc
adc
mov
mov
sbb
outsb
cmp
adcb
sahf
imul
mov
js
mov
sbb
sub
push
std
cmp
push
outsb
rcrb
dec
sub
cmp
mov
xchg
dec
add
fimuls
insl
stos
mov
jne
jns
movhps
mov
scas
xor
arpl
fldl
addr16
pop
mov
out
repz
and
xchg
cmp
popa
hlt
adc
pop
fcoms
lahf
mov
push
leave
adc
jnp
or
idivb
scas
aas
lds
notl
push
mov
ret
xchg
xor
push
ss
decb
inc
pop
pop
dec
and
push
repz
mov
jo
inc
xchg
fldt
inc
jns
int
mov
mov
cmp
js
scas
cli
mov
outsb
ret
sub
jno
and
jmp
loop
cmp
arpl
lahf
mov
test
jbe
push
iret
sbb
cmp
popf
frstor
inc
loop
lock
dec
sti
iret
push
mov
nop
cli
push
dec
hlt
dec
idivb
sub
push
or
dec
fs
shl
cli
fisubl
adc
shlb
pop
pusha
jmp
mov
lods
bound
sbb
sahf
inc
mov
dec
pop
insl
xlat
sti
fmul
fcompl
shll
inc
xchg
and
es
mov
shll
sbb
cmpsl
fistps
dec
push
mov
jmp
push
call
in
push
jno
lds
adc
jno
dec
mov
jne
movsb
in
pop
lock
pop
xor
push
movsb
cmp
repz
data16
sbb
and
es
imul
jl
inc
push
lret
mov
fiaddl
lds
orl
ja
pop
dec
imul
sti
push
int3
jp
std
ljmp
icebp
mov
jns
adc
xchg
mov
mov
rcrl
and
xchg
gs
xchg
jl
cmp
dec
fisttpll
setbe
leave
repz
add
dec
jp
cwtl
in
les
mov
mov
push
add
xor
and
cmp
xor
out
adcl
jge
push
xchg
outsb
mov
xor
loopne
out
decl
pop
lret
jb
dec
jne
icebp
mov
jb
or
imul
aas
mov
imul
pop
sbb
mov
test
shlb
mov
sub
iret
roll
cld
sbbl
addl
test
jnp
pop
dec
rolb
popf
xchg
add
fisttps
inc
pop
mov
jle
push
mov
ret
mov
push
push
scas
clc
mov
mov
dec
sahf
movsb
mov
mov
cmp
sbbb
mov
jne
mov
adc
lds
fildl
push
mov
add
popa
lds
jbe
mov
xor
jmp
cltd
inc
jb
xor
ss
push
cmp
xor
pusha
dec
outsb
mov
leave
push
xor
add
dec
icebp
jmp
xchg
sbb
imul
pusha
cmp
cmp
mov
imul
dec
fcmovb
pushf
cs
aas
cmpsb
sub
je
daa
cmpsb
call
aam
fildll
sub
or
jge
pushf
jge
inc
aam
hlt
mov
bound
jp
xchg
jle
push
stc
cmp
or
lea
mov
cmp
fistl
in
or
xchg
sbb
lods
inc
push
sub
shll
mov
insb
lods
jnp
jns
cmp
icebp
sbb
dec
and
notb
lret
sbb
cmpsb
push
arpl
pop
mov
dec
cmp
ficoms
cmpsb
js
ret
les
sbb
push
loopne
mov
push
sarb
fmulp
mov
pop
aad
cmp
test
xor
cmp
nop
aad
loope
push
lahf
dec
cmp
lea
mov
cmp
xchg
popa
xor
and
and
sub
push
mov
mov
inc
popl
lahf
add
aaa
fs
dec
mov
jecxz
repnz
in
xor
fldenv
and
xlat
in
xor
shr
mov
or
push
add
aaa
das
ret
repnz
sbb
jae
fsub
in
xchg
fadds
xor
sub
outsl
je
out
test
mov
xor
xchg
sub
lret
and
ret
mov
xchg
mov
xchg
xchg
jl
push
sub
xlat
call
out
les
xchg
subb
mov
outsl
repz
test
and
divb
shl
push
out
repnz
push
popa
xchg
js
push
sbb
or
mov
sti
mov
dec
dec
xorl
adc
pop
push
cmp
and
mov
and
mov
mov
fists
arpl
cltd
pop
mov
xchg
adc
dec
pop
out
scas
pop
lret
pop
push
cltd
les
push
stc
adc
std
push
cwtl
add
xor
adc
in
cmpb
loope
dec
cwtl
or
mov
and
movsl
loopne
jge
insb
add
inc
mov
pop
insb
test
out
xchg
add
data16
push
imul
sbb
xor
in
adc
or
xchg
out
push
jns
lcall
cmp
mov
sbb
xor
divb
popf
mov
push
pop
mov
int
adc
pop
mov
mov
jb
or
orl
adc
cmp
loope
pop
imul
insb
xor
mov
dec
or
xor
pop
enter
movsb
lret
and
jp
scas
pushf
call
out
sbb
xchg
inc
mov
repz
repnz
inc
outsl
add
cld
jns
movsl
shll
adc
jg
add
sub
hlt
fnstsw
dec
fadd
gs
sub
jl
pop
jne
mov
lea
lods
jl
in
mov
jns
pop
sub
std
sbb
push
mov
addl
fisubl
push
push
fwait
xor
lcall
push
or
jno,pt
pop
mov
ret
movl
push
or
inc
scas
data16
rcl
push
sub
inc
xchg
insl
cmp
in
stos
bswap
jmp
lds
sbb
push
xor
inc
mov
inc
std
sbb
pop
add
cli
cmp
dec
mov
or
adc
aam
adc
clc
aaa
popf
shrb
fwait
mov
int
cli
jmp
xor
mov
imul
xor
mov
push
adc
jb
push
flds
cmp
ror
mov
bound
mov
sub
adc
add
es
loope
xor
pop
sbb
mov
out
sub
cvtdq2ps
sbbl
movsb
mov
sub
mov
imulb
jmp
and
xchg
sbb
or
push
in
lock
xchg
sbb
or
int3
sbbl
jae
dec
mov
jne
add
jno
in
jo
pop
and
movsb
lcall
mov
cs
xor
or
lea
xor
les
push
sti
pop
mov
in
mov
jae
test
dec
mov
xor
add
lods
test
movsl
sub
xor
mov
iret
inc
mov
mov
push
leave
aas
test
test
loope
sti
inc
mov
sti
jbe
sti
mov
jle
testl
inc
mov
fsubrp
mov
sub
rorl
sub
mov
add
xor
bnd
lods
fs
mov
push
dec
subb
lret
and
mov
add
xchg
push
adc
and
push
lods
mov
ljmp
ret
cmpsl
add
mov
cs
push
stos
sbb
adc
cltd
dec
iret
sti
sarl
les
adc
sub
andb
sbb
pop
fsubs
call
xchg
cmpsb
mov
mov
pop
arpl
pop
in
mov
add
loop
mov
mov
jmp
stos
out
xchg
inc
loop
stos
adc
sub
pushf
or
sbb
mov
pop
lds
bound
shr
adc
dec
in
cmp
insb
push
jae
in
nop
and
cmp
lret
stos
add
or
xchg
subw
out
add
repz
push
jge
aas
xor
gs
and
ljmp
lea
stc
cs
sbb
je
sbb
sbb
popa
add
aaa
cmp
test
or
outsl
pushl
clc
jo
cld
add
add
enter
push
das
loope
nop
pop
pop
stos
mov
cwtl
stos
faddl
pop
imul
pop
and
out
mov
gs
inc
push
fidivs
jge
lods
mov
fstpt
sub
add
cmp
pop
mov
aaa
bnd
pop
mov
push
cli
push
sti
mov
xchg
and
mov
rcrl
xchg
jmp
hlt
insl
xchg
inc
jno
pop
stos
sbb
fdiv
sub
out
xchg
mov
push
mov
cmp
test
jl
sbb
jae
cmp
rol
inc
jno
popf
or
add
test
hlt
mov
fcmovu
jb
movsb
mov
ret
dec
xchg
and
daa
into
cli
pushf
xchg
and
mov
out
inc
icebp
imul
adc
fwait
cmp
cmp
stos
lahf
adc
mov
faddp
ja
inc
jmp
pop
mov
fiadds
mov
dec
pop
or
loop
lret
pop
int
and
cmp
jp
cmp
sarl
or
lds
fnstsw
testl
in
pop
lret
test
sub
outsb
and
filds
xor
xchg
add
push
sbb
cld
or
jp
jnp
shrb
mov
insb
ret
sti
popa
or
mov
xchg
fwait
in
or
inc
lods
ljmp
mov
push
xchg
lods
loop
pop
out
cmc
cmc
dec
and
adc
or
push
inc
setae
imull
or
mov
imul
dec
lea
faddl
adc
imul
xor
mov
mov
mov
jno
shll
pop
add
lss
mov
sub
mov
loopne
cli
dec
jle
cmp
mov
ss
pop
out
mov
jae
xor
sub
in
loope
add
movsl
xchg
ret
imul
lods
cmp
jmp
bound
sub
pop
mov
stos
fcomp
sub
cmp
jb
lret
aaa
ljmp
push
add
add
inc
adc
mov
xor
lret
xchg
ror
xor
in
rclb
mov
add
sbb
test
xchg
cmc
dec
ret
add
int3
cmc
pop
push
pop
or
xchg
pop
aas
add
dec
fisttps
sbb
dec
aad
aad
pop
mov
sub
insl
out
aas
sbb
dec
add
or
ret
pop
xchg
add
ja
push
xchg
flds
jae
ds
insl
daa
shlb
mov
inc
sub
sbb
pushf
jg
adc
lahf
pop
mov
xchg
sbb
aam
fcmovbe
and
mov
clc
lret
cmpsb
and
sub
inc
cmp
cs
loopne
push
sbb
push
out
fucomip
arpl
add
or
inc
int3
pusha
xchg
mov
int
or
inc
js
dec
or
jecxz
stos
jae
xlat
jnp
test
pop
cmp
or
inc
int3
mov
shlb
push
cli
fisubrl
sbb
jp
fistl
or
sbb
jp
push
xor
adc
xor
inc
jp
mov
lods
out
jno
pop
dec
sarb
sbb
adc
mov
xor
mov
scas
mov
test
add
jle
mov
fidivs
xor
push
push
dec
pop
xor
add
shrb
push
pop
or
mov
dec
add
fcmovne
mov
jnp
inc
loope
add
ret
orl
jmp
or
cmp
test
sbb
lds
pop
inc
push
push
ret
mov
inc
adc
dec
xchg
mov
push
push
movsb
cltd
jne
jle
ret
psllw
pusha
cmc
push
scas
sbb
sar
lret
rcrl
sbb
ljmp
or
iret
xchg
xlat
loope
test
outsl
inc
negb
and
scas
sub
or
orb
cmc
pop
push
ss
movsb
in
sub
xor
or
loope
ljmp
sbb
xchg
out
sub
lahf
xchg
test
jne
out
jmp
scas
int3
add
or
jo
inc
adcb
repz
and
loop
mov
sti
jecxz
adc
mov
mov
scas
aaa
test
mov
cmc
xchg
out
iret
inc
imul
aad
inc
sbb
lcall
mov
outsl
enter
hlt
lahf
sbb
mov
loope
and
in
leave
add
cmp
adc
xchg
ret
aad
xor
xor
mov
dec
cwtl
push
mov
or
shrb
mov
ljmp
lret
pop
cs
pop
sbb
sbb
jle
pop
aaa
lcall
jmp
daa
mov
xlat
push
leave
xchg
jge
push
xor
nop
add
inc
inc
sub
xor
out
fdivl
subl
sbb
push
loope
insb
add
aaa
testl
sbb
inc
insb
jp
fwait
ror
lret
fcmovbe
orl
mov
xchg
out
ret
jmp
pop
std
bound
pop
dec
mov
scas
mov
jp
and
repz
cmp
popa
addb
sub
cmp
dec
test
sarb
sar
jl
xchg
out
ss
call
notb
xchg
dec
loope,pt
mov
sub
scas
adc
into
fsubrs
xchg
divb
lahf
xor
xchg
popa
ret
popf
sub
pop
sahf
movaps
mov
push
pop
or
es
push
and
mov
cmc
cs
and
ja
daa
cmpsl
fsubrl
add
dec
loop
popa
das
and
pop
pushf
mov
pushf
mov
jno
fidivrs
bound
mov
xchg
or
adc
pop
dec
or
mov
stc
mov
loope
popf
cwtl
das
cmpsb
scas
imul
cmovbe
testl
jne
out
dec
sbb
out
stc
rorl
popf
xchg
loope
into
mov
hlt
lret
jbe
inc
fnstsw
pop
mov
and
sbb
test
mov
dec
idivl
pop
mov
test
fsubl
add
rorb
adc
clc
cmp
sub
push
sbb
mov
sbb
in
popf
lea
ja
mov
sub
inc
fcoml
xchg
mov
jb
lcall
sub
cltd
xor
jp
lock
jnp
rolw
pop
movsl
bound
push
js
imul
xor
sbb
insb
sbb
xchg
mov
pop
and
repnz
outsb
scas
outsb
or
or
dec
dec
inc
xor
adc
inc
lods
shll
adc
push
out
or
or
pushf
jl
and
sbb
lcall
into
lods
inc
loopne
das
andb
fcompl
pop
add
gs
xchg
orl
notl
aam
jae
fists
out
aas
js,pn
incb
fnstenv
jmp
push
cli
mov
dec
adc
fwait
and
xor
adc
cmpsb
pop
ret
loope
mov
xor
ds
inc
jecxz
outsl
jne
shll
popa
pop
pop
or
repnz
pop
or
rcrl
dec
dec
xor
cli
mov
pop
cmpsb
dec
cmpsb
pop
jno
inc
cs
add
cs
push
repnz
jb
movsb
inc
xchg
and
jns
stos
rcll
jno
xchg
and
pop
adc
inc
xchg
loope
jl
mov
sub
push
sbb
sub
cld
or
test
dec
int3
popa
cmpb
mov
cmp
adc
dec
test
push
fdivrs
and
jns
lret
pop
repnz
fdivl
idiv
and
js
inc
loop
inc
mov
in
push
js
and
scas
mov
xor
mov
cmp
mov
orl
or
addb
xlat
push
sbbb
cld
mov
mov
mov
mov
sbb
pop
push
ja
lea
dec
cmpsl
pushf
xchg
xlat
cmp
xchg
addr16
push
fcmovne
rcl
cmpsb
sbb
nop
sub
add
jnp
jbe,pn
leave
insb
dec
divl
mov
sbb
in
stos
jp
sbb
sub
xor
inc
adc
add
stc
test
push
lock
insb
mov
push
enter
or
cmp
xchg
aaa
insl
repz
xchg
call
pop
mov
sahf
push
push
popl
pusha
movsb
push
xor
stos
dec
ret
mov
nop
negl
jno
ret
mov
and
imul
adc
mov
lea
sbb
daa
cs
outsl
rcr
adc
dec
jg
inc
add
mov
dec
adc
push
int
mov
mov
mov
jbe
lea
push
jno
pop
testb
aaa
add
push
jp
dec
xchg
adc
inc
adc
xor
adc
dec
lea
push
sbb
dec
add
bound
shl
loopne
cltd
aaa
xchg
int
in
push
adc
mov
cmp
fcompp
test
push
leave
enter
cld
rorl
jge
inc
int3
pop
pop
xor
scas
dec
movsb
or
push
ret
scas
mov
wrmsr
dec
xchg
push
icebp
dec
insl
mov
into
lcall
inc
mov
push
cmp
sub
addl
rolb
dec
and
cmp
dec
scas
sbb
adcl
es
pop
cmc
scas
cwtl
push
xor
dec
mov
xchg
push
cmpsb
jae
xor
lods
jne
movsl
ret
sub
xor
aaa
data16
jp
sbb
mov
outsl
xchg
pop
mov
xor
dec
les
add
pop
xlat
add
dec
push
hlt
stos
loopne
pop
inc
inc
imul
jbe
pop
cmc
loopne
push
mov
cmp
xchg
sub
dec
out
nop
fs
jno
fwait
in
subb
mov
dec
aaa
aad
lock
cmpsb
es
jo
mov
mov
or
cmp
cmp
test
test
mov
dec
lret
cmpsl
adc
mov
cmp
or
sbb
out
divb
sbb
nop
lods
pusha
push
mov
rcll
inc
rol
fsubrs
cmp
jnp
mov
mov
es
mov
inc
mov
ret
and
fdiv
mov
dec
push
lcall
pop
sub
idiv
lds
mov
mov
inc
cld
mov
and
ja
jmp
dec
fiaddl
leave
push
lcall
ss
aam
and
stos
cwtl
cmp
pop
jmp
addr16
test
pop
das
dec
jp
adc
dec
push
cmpb
xchg
fstpt
jo
mov
sub
rorl
cli
push
movsb
fs
jle
jbe
adc
pop
cmp
cmp
jecxz
jnp
movsb
sar
jmp
push
push
rol
out
out
je
sub
dec
sbb
dec
push
bound
push
addr16
je
lods
test
inc
movsb
mov
add
lea
mov
rcrl
push
lods
dec
incl
jmp
or
push
cmp
das
fistps
mov
adc
xor
dec
outsl
mov
sbb
imul
imul
jae
enter
cmp
mov
in
lahf
out
dec
rcrl
sub
mov
mov
movsb
xorl
outsb
insl
rclb
xchg
pop
xor
aam
ss
cmp
jl
sbb
sbb
push
jno
pushf
fs
xchg
test
test
in
not
aaa
adc
enter
xchg
or
jmp
cmp
jae
mov
xor
or
pop
jecxz
call
pop
adc
mov
test
sbb
ss
repz
add
mov
jmp
push
mov
mov
inc
cmc
xchg
jmp
pop
xor
cmpsb
or
mov
xchg
cmpsl
dec
mov
pop
inc
sahf
xor
clc
in
mov
xchg
or
mov
push
pop
jnp
sub
std
mov
movsl
xchg
and
mov
dec
pop
xor
out
cmp
rcll
fwait
sbbb
test
jo
lds
sub
pcmpgtd
push
mov
and
enter
jne
xorl
enter
stc
lret
das
pop
sbb
fwait
pushl
sub
or
xchg
int
cmp
mov
mov
enter
repnz
adc
dec
fistpll
call
sqrtps
lret
jno
mov
fs
stos
lods
dec
push
out
popl
sahf
mov
js
in
dec
sbb
or
mov
push
and
repz
aad
sbb
enter
sbbb
and
pop
mov
pop
and
stos
pusha
scas
or
xchg
and
call
js
xchg
cs
gs
orb
rcrl
es
inc
sbb
dec
cmp
push
inc
insb
es
fcomps
js
rcrl
xor
sub
dec
or
int
mov
fdivrs
dec
push
cltd
cltd
sub
mov
mov
pop
push
push
xchg
ret
aaa
pop
call
cltd
or
and
fmulp
iret
add
mov
fistps
daa
push
stos
inc
sbb
mov
in
pop
xchg
iret
pop
arpl
inc
dec
repnz
repnz
ds
jae
mov
in
scas
xor
repnz
int
adc
fisubs
je
mov
inc
cltd
mov
shlb
fstps
inc
mov
cld
out
sbb
xlat
lea
mov
or
xchg
jo
add
mov
test
cli
xor
fldenv
dec
sbb
add
sbb
cmc
push
push
daa
xchg
mov
dec
fs
sub
or
icebp
mov
pop
aaa
ja
or
mov
jle
sbbl
lcall
test
out
push
fcmovnu
les
cmp
cmp
outsb
and
test
sbb
loop
aas
dec
pop
mov
movsb
mov
daa
fucompp
dec
xlat
xor
mov
inc
out
sbb
push
sub
mov
test
loopne
and
cmp
inc
lret
add
cmp
rcr
sub
fisttps
dec
shll
cmp
clc
jo
cmp
pop
cmp
popl
jmp
xlat
dec
push
add
gs
lret
mov
hlt
popf
push
sbb
nop
push
fcmovu
in
ja
movsl
in
pop
jg
sbb
mov
fcmove
rol
sub
mov
bound
rcl
inc
loopne
shlb
ljmp
es
jmp
jbe
mov
in
push
fucomp
and
stos
mov
mov
jae
mov
push
or
mov
aas
adc
sbb
and
or
mov
out
test
mov
xchg
pop
lods
sub
subl
pop
and
xor
lds
stos
dec
popf
xchg
push
or
js
mov
cwtl
mov
popf
jl
mov
inc
enter
dec
mov
in
mov
and
out
xchg
fbstp
xor
sbb
adc
jp
in
xor
cwtl
jne
inc
pop
rcrb
mov
mov
out
fidivs
js
je
sbb
into
lret
xchg
inc
cs
sti
ja
push
and
sbb
sahf
push
xchg
or
fldcw
out
mov
hlt
int3
push
push
xchg
and
xchg
rolb
mov
test
call
mov
mov
inc
fsubl
mov
dec
push
mov
adc
mov
jno
xor
outsl
aad
jp
cmp
ja
fcmovnb
lods
mov
aam
hlt
xchg
dec
add
bound
roll
add
popa
inc
xor
inc
push
repz
fcompl
xchg
mov
add
cmpsl
lret
stos
aaa
in
sbb
aas
shll
pop
jo
je
into
xor
aad
fistpl
in
es
ret
jl
mov
or
push
ss
imul
fnstenv
lahf
popf
scas
cmpsl
jmp
xchg
rolb
es
cmpsb
loope
xlat
mov
out
shrb
sub
xchg
neg
imul
add
xlat
mov
data16
mov
mov
pop
fwait
sahf
movd
cmp
data16
sub
ret
cld
pop
add
and
lahf
dec
xor
jnp
sti
out
andl
pop
dec
pop
cmp
movsb
daa
cmpxchg
and
out
imul
rcrb
inc
paddusb
xchg
mov
mov
and
daa
fistpl
test
mov
adc
pop
xor
sbb
nop
lea
jecxz
xor
pop
adc
mov
pop
daa
pop
fidivrl
test
imul
roll
xchg
lahf
data16
adc
sahf
add
enter
add
push
dec
mov
sbb
and
lea
in
sub
shrb
scas
sahf
cmp
jbe
adc
pop
cmpb
fistpll
or
sub
insl
xchg
clc
inc
push
mov
xchg
push
dec
scas
iret
dec
pop
inc
push
dec
pop
or
and
push
arpl
add
ror
mov
test
in
cwtl
ljmp
dec
pushf
and
and
lods
loop
subl
mov
mov
dec
mov
push
and
neg
adc
mov
into
lock
fldcw
jne
and
outsw
mov
mov
mov
pop
dec
jl
aad
mull
sub
push
loop
and
xlat
and
out
xor
dec
cmc
lcall
pop
iret
mov
icebp
rcl
mov
cmp
push
jns
iret
loopne
das
notl
jmp
loopne,pn
or
push
add
cld
inc
clc
sub
cltd
aam
je
outsb
push
push
mov
icebp
add
pusha
test
outsb
lahf
pop
xchg
mov
mov
adc
scas
dec
push
in
pop
shll
imul
lea
or
inc
inc
mov
sub
xor
xor
inc
push
dec
mov
lds
lea
mov
sbb
mov
xor
lret
fists
shrb
pop
mov
jne
add
out
sbb
int3
xor
xor
das
and
push
insb
scas
shr
jae
mov
cmp
test
fcoms
test
or
mov
xor
cmpsl
loopne
mov
in
hlt
and
subb
push
negl
ficoms
xchg
jbe
loop
popf
mov
cmp
mov
call
jle
inc
sub
scas
es
repz
mov
xor
jne
enter
leave
mov
mov
inc
pushf
out
pop
nop
sbb
dec
movsb
cmpsl
ljmp
aas
in
or
cmp
adc
dec
stos
xor
and
aaa
aad
icebp
cmp
clc
nop
loopne
jne
jnp
addb
ja
mov
cmp
and
push
mov
aad
cmp
inc
adc
loop
xor
mov
fwait
push
bound
loop
mov
add
jp
test
js
jge
push
clc
mov
and
pop
push
mov
mov
filds
gs
lods
loop
cwtl
dec
hlt
shrl
arpl
ret
jmp
or
aad
add
mov
das
add
rcll
jg
or
loopne
sarl
movsb
push
cli
sbb
imul
cwtl
ret
add
aaa
mov
pop
mov
in
and
clc
int3
or
imul
mov
mov
das
test
xor
and
xor
sbb
rcrl
icebp
aad
repnz
insl
aas
insl
out
mov
xchg
push
lcall
xchg
iret
inc
fs
cmc
arpl
adc
lret
data16
sbbb
or
inc
mov
mov
lahf
or
nop
mov
les
cmp
arpl
jae
pusha
rcrl
sbb
and
sbb
dec
mov
decl
jl
mov
nop
adc
fldenv
jle
fwait
cmc
xchg
xlat
mov
xor
jecxz
imul
mov
dec
lds
rorl
add
outsb
mov
mov
int
xlat
pop
or
lods
jbe
mov
andl
pop
out
lods
fwait
mov
pushf
push
mov
dec
ljmp
shlb
addr16
jns
int
mov
ret
lods
dec
jmp
xchg
adc
loope
aam
es
and
in
dec
lcall
fsubl
pop
loop
push
xor
ja
cmp
mov
stos
or
mov
xor
xor
sub
lcall
in
out
nop
cli
loop
dec
mov
andb
mov
and
fdivrs
dec
adc
fsub
inc
jae
addl
out
inc
pop
mov
add
movsl
or
fstpt
jo,pt
fnstenv
out
pushl
jno
js
daa
paddb
icebp
inc
and
sub
mov
pop
ds
int3
jae
and
mov
pushf
int3
mov
dec
xchg
lds
test
lcall
inc
ss
add
mov
xchg
pop
cmp
xchg
push
dec
std
mov
imul
or
and
sbb
jmp
pop
inc
mov
scas
std
je
cmp
icebp
adc
sahf
adc
add
mov
pusha
and
test
bound
or
out
inc
data16
xchg
pushl
adc
cmp
mov
xchg
sub
adc
insl
test
xchg
or
cmp
jg
mov
jne
flds
icebp
add
or
clc
cli
out
sti
gs
scas
jg
push
pop
jle
jbe
divl
aaa
ja
dec
pop
mov
insl
sub
enter
pop
mov
addr16
xchg
dec
ljmp
pop
hlt
xchg
mov
pop
mov
xchg
aas
fdivrl
lret
cmp
cmpsb
divb
xor
dec
inc
or
or
mov
inc
cwtl
out
xor
push
inc
xor
popl
test
ret
and
mov
xorb
cs
rcl
mov
push
jb
inc
sbb
sbb
mov
push
dec
mov
adc
jns
imul
popa
pop
inc
add
adc
mov
lea
sub
inc
roll
orl
shlb
aad
push
push
sbb
pushf
add
cmp
loop
or
leave
inc
rorb
push
or
dec
or
loope
sub
xchg
dec
cmpl
inc
lret
call
repnz
push
push
bound
cmp
sti
adc
popl
sbb
int3
das
es
mov
pop
rolb
test
or
fadd
aas
addr16
pop
jnp
sar
mov
test
jge
adc
sbb
arpl
mov
out
psraw
push
add
mov
ja
icebp
mov
inc
sub
mov
jge
ret
mov
outsl
jnp
nop
das
add
hlt
daa
and
int3
pushf
xor
leave
pop
fcmove
mov
test
rcrb
cmp
in
aam
aad
and
mov
movsb
mov
mov
mov
push
gs
testl
test
insl
xchg
dec
scas
jae
lret
pop
addr16
mov
and
fstp
fmull
stos
xor
testl
mov
push
insl
cmp
mov
popa
lea
mov
inc
jae
dec
and
repnz
xchg
fidivrs
or
lcall
add
add
mov
repz
push
ret
cmpb
inc
cmc
lea
jg
iret
cmp
sbb
push
xchg
pushf
loopne
and
mov
test
outsl
inc
jb
or
shrb
and
xor
clc
xor
and
stc
fmull
bound
dec
cld
leave
fbld
dec
lods
mov
leave
add
daa
or
fcomps
push
add
ljmp
push
mov
loop
push
push
mov
lods
add
mov
mov
insl
sub
test
push
push
ret
cmp
ret
push
jmp
lods
repnz
test
scas
and
rclb
adc
addr16
ss
mov
mov
and
xor
punpckhwd
jno
sbb
add
add
sbb
or
push
mov
fstp
insl
idivl
jb
push
lea
pop
les
shrb
es
popa
push
sub
ss
jmp
pop
test
insb
aam
pop
xchg
push
push
cmc
sbb
xor
shr
push
test
hlt
jae
sub
sub
mov
pop
pop
mov
out
cmp
jno
mov
pop
pusha
lds
gs
sbb
mov
inc
xchg
lds
add
ja
xorb
add
idivl
lock
jno
pop
pop
loope
mov
les
sub
or
pop
addr16
popa
out
cmpb
fldenv
test
and
sub
sarb
inc
pusha
adc
or
xchg
sbb
jmp
pop
jo
sti
test
mov
inc
xchg
jno
ret
pop
je
loop
xor
faddl
pop
and
dec
sarl
mov
int
js
push
mov
mov
xchg
jo
ja
das
jb
add
or
cwtl
xchg
or
mov
shlb
mov
or
cmp
fisttps
ss
jge
push
aad
xor
adc
jbe
mov
mov
or
pop
mov
inc
loope
inc
and
mov
outsl
rcl
pop
lahf
fildll
mov
jbe
cmp
add
lods
test
stos
bound
sar
fimuls
int3
negl
xchg
mov
xchg
cmp
sub
mov
ret
dec
ja
aas
icebp
sbb
in
mov
fwait
int
mov
ja
popf
ret
mov
and
push
nop
inc
xchg
inc
cltd
xor
scas
lea
sub
je
ds
add
sbb
cs
imul
xchg
push
sahf
mov
mov
addb
mov
jns
push
or
mov
or
and
dec
out
lret
mov
inc
adc
or
jns
xor
xor
dec
leave
hlt
adc
mov
xor
mov
aad
xor
shrl
mov
movsb
insl
jge
and
outsl
mov
daa
jg
mov
das
negb
xor
adc
pusha
xchg
add
sub
sar
lret
xchg
pop
or
xchg
dec
cmp
pop
sahf
xchg
repnz
mov
sub
inc
mov
inc
test
adc
sub
mov
sbb
mov
cmp
jbe
cmp
dec
jb
leave
stos
adc
and
nop
arpl
sbb
nop
js
lds
xchg
xchg
inc
sahf
incb
popa
stos
jne
cmp
in
arpl
mov
pop
iret
cld
xor
sub
hlt
cmpsl
add
fmul
shrb
add
cmp
push
stc
jb
cwtl
sub
out
test
push
or
out
fnstsw
push
pcmpgtd
ret
test
or
mov
iret
in
pushf
cmc
jmp
mov
xchg
pop
xor
lcall
sbb
pushf
andb
cmpsl
inc
neg
dec
imul
out
je
fists
stos
add
jbe
dec
int3
xchg
push
fisttpll
insb
mov
cmc
xor
pusha
xchg
fdivr
dec
cmpsl
shlb
sbb
call
xor
xor
jl
mov
fs
pop
stos
xor
mov
jo
lahf
test
mov
fcoml
rcrb
in
adc
mov
into
xchg
sub
shrb
xchg
cmp
mov
inc
jo
lods
divl
out
ljmp
dec
push
jl
and
loopne
sub
and
jp
int3
dec
repz
cmp
push
lahf
adc
shll
pop
and
lcall
mov
jecxz
push
movl
lea
mov
dec
sbb
gs
sahf
cmpl
outsl
sub
adcb
aas
push
testl
inc
or
xor
fmul
cmp
test
cli
insb
data16
imul
jne
popf
mov
push
push
loope
iret
pushf
dec
enter
mov
lcall
out
outsb
hlt
mov
cmc
and
mov
adc
out
cmp
push
pop
cld
ja
xchg
fucom
pushf
mov
xor
pop
iret
shr
jmp
aad
cmpsl
repz
push
mov
pusha
pusha
into
stos
imul
pop
mov
lret
nop
xor
mov
mull
icebp
cli
add
cld
mov
jns
push
int3
xlat
lea
ret
or
add
sbb
ficoml
jmp
jl
ss
fs
adc
leave
lcall
mov
sub
clc
cld
es
sub
ljmp
add
cmpsl
cmp
jg
jmp
mov
dec
lcall
pop
testl
mov
lock
jnp
js
dec
fmul
xor
mov
xor
dec
xchg
xchg
jl
loope
stos
aaa
jecxz
divl
inc
aam
add
cmp
in
jnp
das
sub
ja
and
push
cmp
pop
or
mov
movsl
ret
jnp
pop
ret
and
rcl
repz
cmp
sub
cmp
lret
sbb
imull
adc
test
xchg
insb
ss
rol
jmp
mov
scas
cmp
pop
das
stos
imul
pop
sbb
int
sub
fistps
mov
pusha
pop
push
xchg
out
ljmp
mov
pop
and
xchg
ret
push
pushf
sbb
arpl
rolb
and
fchs
cmp
inc
jno
repnz
in
test
fnstsw
xor
and
loop
xor
inc
jg
decl
enter
sbb
cmp
mov
sub
adcb
test
imul
mov
mov
test
jae
push
push
adcb
loope
pop
loopne
jmp
adc
pop
pop
sub
jns
jnp
lret
adc
mov
sti
mov
lcall
cmp
leave
pop
daa
adc
and
daa
loopne
sbb
les
dec
mov
fwait
bound
mov
clc
jno
add
xchg
sbb
test
xchg
mov
sub
sub
jl
movsb
clc
mov
loopne
lcall
jmp
push
sub
sbb
jl
cltd
out
sti
dec
jmp
adc
xor
and
jns
movsl
or
lods
add
movsb
xor
cmp
test
addb
cmpsl
push
xchg
push
cli
adc
push
push
movsl
jbe
jge
xor
insb
bound
push
lret
imul
fists
repz
xchg
cmp
fmuls
jne
mov
aam
inc
aas
xor
rcl
repnz
test
pop
adc
jae
addl
jecxz
cmpps
push
xor
pop
xchg
xor
add
mov
dec
rorl
pop
les
xchg
or
inc
xor
adc
aas
mov
push
cwtl
outsb
jmp
or
cli
cld
iret
pop
cmp
push
inc
mov
pop
lods
cmp
cmpsb
rclb
sbb
call
outsb
xor
xchg
mov
xor
sub
mov
and
pop
daa
xlat
push
inc
add
dec
lock
and
xchg
mov
pusha
in
xchg
pop
or
or
jl
mov
in
fcomip
add
out
push
lds
scas
push
cmpsb
outsb
cs
add
repz
pop
in
addb
inc
outsl
lods
cmpsl
ja
xchg
subb
repz
cmpsl
lret
jb
inc
mov
pop
adcl
sbb
adc
inc
push
mov
add
clc
mov
out
dec
pop
mov
ss
scas
into
pusha
movsb
out
orl
fs
scas
scas
shrb
movsb
dec
xchg
out
add
pusha
aam
mov
js
jmp
jbe
ljmp
mov
fimull
jecxz
mov
and
cmpsb
rcrb
mov
mov
inc
shrl
and
and
mov
inc
push
cmp
push
lahf
inc
sbb
clc
push
push
xchg
xchg
fbld
into
inc
into
or
les
mov
hlt
pop
std
int
cmpsl
out
adc
into
inc
xchg
out
cltd
cmp
mov
loop
push
xchg
push
jae
cmp
fidivl
cld
daa
call
pop
stos
or
aas
sub
pop
mov
inc
in
push
push
mull
addr16
and
icebp
sbb
or
fwait
add
mov
xchg
cmc
std
dec
adc
xlat
mov
fstps
scas
popa
or
mov
or
inc
test
cmp
add
loope
push
jns
jp
fidivs
call
std
rorb
push
in
cltd
dec
xchg
sbb
lds
hlt
xchg
or
add
inc
aam
pop
les
fisttpll
and
pop
lds
lds
jno
sub
repnz
and
or
sti
lahf
inc
rorl
or
out
dec
cwtl
nop
dec
ret
fs
sbb
xor
xor
dec
aaa
cmp
lods
jge
cmpsl
cli
cld
popa
inc
push
aam
jo
cli
std
mov
out
lock
xor
out
es
inc
push
push
ds
cld
xchg
sahf
mov
add
jp
mov
adc
inc
sarl
stos
in
jg
fsub
shl
test
push
and
ficompl
shll
shl
sub
fiadds
cwtl
cmp
xchg
pop
mov
outsb
push
leave
push
hlt
imul
aam
jecxz
inc
push
add
loopne
imul
outsl
imul
cmc
sti
repz
cwtl
sbb
out
ret
cmovp
xor
push
jno
mov
sub
push
push
mov
and
sbb
jbe
mov
pop
int3
sbb
mov
sub
and
loope
lahf
pop
mov
movsb
sbbb
mov
sahf
lods
lds
idiv
vxorps
jl
pop
pop
pop
rcll
outsl
xchg
ret
test
jnp
rcr
jae
sub
mov
mov
in
cmc
aad
mov
add
xchg
jecxz
sbb
mov
sbb
pusha
idiv
jns
push
je
in
pop
dec
jecxz
orb
jo
lret
adc
sbb
mov
out
lds
in
jle
mov
jbe
adc
mov
daa
mov
clc
clc
sti
hlt
bound
mov
sbb
mov
mov
rorl
sarl
leave
jg
jge
js
shlb
or
cmc
xchg
nop
cmp
sub
leave
popf
mov
and
adc
lods
add
or
cmp
push
adc
xchg
inc
ret
std
push
cld
xor
in
jns
in
jl
jbe
mov
in
pmulhuw
subb
test
pop
lock
xchg
inc
jno
mov
jne
out
sti
loope
adc
mov
xchg
mov
push
ljmp
cmp
sbb
lock
orb
cmp
jp
dec
sub
shl
incl
xchg
mov
ljmp
cmp
int
add
mov
mov
fnsave
or
ljmp
add
idiv
repz
adc
mov
and
push
shr
je
js
jge
push
xor
mov
dec
adc
add
or
test
inc
jnp
fldz
dec
fs
subb
and
lret
push
mov
sub
testl
mov
or
outsb
pop
movsb
push
cli
sub
ds
pop
andps
mov
sbb
adc
cmp
mov
ret
dec
dec
dec
shrl
jl
pop
out
lahf
push
add
loope
jmp
sbb
out
ret
inc
pop
lahf
les
addr16
leave
push
or
or
nop
push
test
jp
xor
push
xlat
test
push
jo
inc
lahf
mov
xchg
adc
daa
lret
int3
lcall
jnp
xchg
loopne
lahf
jle
lcall
xlat
mov
xor
xchg
sub
negl
outsl
imul
ret
aad
lcall
adc
xchg
in
xchg
fbld
lcall
mov
add
xlat
bnd
push
scas
scas
jns
movsl
add
xchg
mov
out
dec
lret
jb
mov
cmp
fcmovnbe
cmp
and
or
or
xor
mov
cmp
enterw
call
imul
mov
loopne
lock
or
sub
mov
push
scas
dec
mov
cmpsl
in
fs
dec
mov
outsb
lret
loope
loopne
cmp
cmp
in
xchg
sub
pop
and
mov
inc
xor
inc
sbbb
call
arpl
cmp
fnstenv
sbb
or
mov
sub
pop
setae
mov
cmp
dec
lfs
or
aas
jo
adc
sub
fdivrs
in
xor
mov
or
jg
add
arpl
leave
bound
mov
xchg
xchg
ret
jl
movl
push
jl
dec
imulb
mov
sbb
and
lock
imul
inc
fisttpll
mov
out
imul
stos
nop
adc
int
loope
ljmp
mov
inc
loopne
and
mulb
ljmp
adc
aaa
push
xchg
movsl
add
ljmp
and
lods
sub
or
jg
pop
or
mov
mov
mov
or
lahf
mov
hlt
fmuls
jo
inc
imul
repz
push
imul
movsl
push
sbb
mull
sbb
mov
sbb
add
inc
scas
xchg
das
mov
pop
rolb
xchg
aaa
jl
int
call
test
fwait
inc
xchg
xor
cmp
std
sbb
clc
xchg
push
adc
inc
mov
push
mov
enter
cmp
dec
les
xchg
shll
inc
sbb
push
dec
shlb
int
addb
iret
out
cmp
adc
data16
je
std
fists
test
mov
test
cld
sbbl
std
stc
xchg
cmp
cld
mov
fisttps
pop
and
mov
lret
popa
jge
outsl
movsb
pop
jp
mov
dec
stos
andb
lods
mov
inc
xor
xchg
ffree
and
es
imul
jno
incb
mov
and
or
jp
cld
jne
cwtl
pop
scas
inc
and
repnz
push
scas
mov
push
mov
pop
out
pop
xchg
inc
xor
sub
into
ljmp
mov
fdivl
cmp
outsl
out
dec
add
mov
sbb
push
cli
js
cltd
dec
rcl
out
push
pop
shr
pop
outsl
jo
dec
iret
scas
mov
jge
add
mov
icebp
test
sbb
out
cld
rolb
xor
and
add
fs
inc
les
mov
addr16
xlat
lret
mov
loop
lds
rcrl
ret
sbb
inc
cmp
stos
push
loop
jns
cmpsl
loope
sbb
jmp
in
add
or
aas
adc
xor
sub
aam
pop
stc
jecxz
jg
adc
lock
imul
pop
shl
cmp
into
xchg
cmpsl
idiv
sub
movsl
cs
testb
mov
dec
data16
push
mov
jnp
loopne
sub
push
mov
ljmp
daa
pop
mov
stc
leave
jmp
jbe
mov
sbb
inc
and
cld
mov
mov
pop
add
fisttps
jmp
int
fwait
orl
mov
in
push
jmp
sub
addr16
pop
and
jle
popa
cld
or
mov
loope
ja
lret
xchg
mov
or
pop
xchg
out
dec
xor
push
inc
js
repz
sub
dec
mov
rcrb
push
push
iret
mov
in
push
gs
sub
ljmp
xchg
dec
xor
jge
repnz
test
sbb
gs
jno
inc
sar
in
jmp
mov
jne
sar
movsl
int
sbb
cmpsb
push
mov
cmp
fs
mov
fisubrs
in
xchg
cmc
das
xlat
adc
bound
stos
mov
popf
cmp
mov
fistpll
mov
dec
inc
std
hlt
mov
inc
cmp
xor
sbb
pop
xchg
inc
add
rcrl
push
call
xor
pinsrw
and
mov
mov
aam
incb
dec
dec
popa
jmp
test
aas
mov
icebp
in
cmc
adc
jae
negl
adc
rcll
out
es
ret
imul
iret
leave
lods
out
push
repnz
jbe
movsl
lock
in
in
mov
enter
das
enter
pop
icebp
push
mov
pusha
lcall
pop
scas
xlat
add
adc
mov
fsubr
push
cmpsb
jge
mov
jecxz
and
mov
or
in
test
dec
stos
test
andb
adc
jl
shr
in
add
pop
loope
and
sub
and
je
out
subl
roll
into
mov
jae
pop
and
or
in
fstpt
add
aam
ret
pushf
movsb
aad
jl
stos
push
sarb
xchg
enter
xchg
jge
outsl
dec
xchg
push
and
cs
dec
rcrl
pop
outsl
and
out
jne
cmp
sbb
aad
mov
jmp
cmp
lret
rorl
adc
sti
cwtl
loope
and
cmp
jmp
dec
daa
lahf
pusha
cltd
mov
sub
movsb
sti
cmpl
mov
test
bound
fs
cld
fldenv
and
shl
cmp
clc
les
addl
pop
out
call
sub
std
mov
xor
lods
pop
sti
and
adc
inc
lcall
and
das
insl
test
stos
repz
sbb
inc
sub
xor
push
xor
mov
push
mov
xchg
ja
jge
push
decb
xchg
aam
inc
push
mov
sahf
in
add
addr16
ret
or
inc
mov
pop
xor
imul
sub
xor
mov
xchg
or
insb
enter
pop
aad
lds
leave
or
and
mov
imul
sti
in
mov
push
cwtl
mov
rcrb
mov
es
clc
mov
jns
sbb
pop
xlat
iret
xlat
jle
push
mov
fiadds
loopne
dec
push
fs
popf
pop
daa
dec
and
movsb
test
sub
shr
dec
jns
outsb
fchs
inc
repz
and
nop
loop
stos
cmp
fstps
fcoml
push
dec
jae
cmc
sub
scas
es
inc
rcrb
andb
aad
sbb
rdmsr
sbb
inc
dec
add
add
cmp
ficompl
clc
adc
pop
xlat
cmpsl
adc
insl
divl
mov
movsl
lock
adcb
cmp
and
xor
in
jmp
lods
popa
mul
out
dec
mov
add
fildll
repnz
aam
xchg
lds
addr16
fs
js
popf
push
nop
xlat
mov
xchg
loope
sti
movsl
mov
jmp
mov
add
btc
xchg
cld
jnp
cli
pop
clc
or
fwait
inc
lahf
outsb
push
push
push
insb
scas
mov
pop
sub
sub
pop
sub
imul
add
jmp
aam
push
sbb
adc
xchg
inc
test
xor
adc
ljmp
cs
push
mov
adc
sub
jns
rolb
xor
rclb
xlat
xchg
jl
add
mov
orps
push
dec
cmp
popa
lock
mov
clc
jmp
push
rclb
dec
pop
clc
xchg
stc
sub
in
imul
scas
enter
test
adc
lods
int
shll
mov
cmpl
xor
adc
out
iret
jne
mov
mov
fiaddl
pusha
jb
out
mov
xchg
inc
add
jae
in
lods
dec
jno
fcoms
fwait
idivl
mov
inc
lahf
call
sub
push
add
test
stos
lock
lods
insl
xor
out
ret
fimull
xchg
adc
jecxz
rclb
rcll
pushf
mov
push
add
iret
cmp
dec
movzbl
ss
fsts
pusha
lock
or
outsb
sub
xchg
lock
jne
sbb
ret
imul
xchg
mov
push
xorl
push
fs
addb
or
mov
idivb
xchg
call
mov
mov
outsb
les
insl
and
jo
xchg
stos
pop
jl
adc
jno
jae
xchg
outsl
sti
push
into
loope
mov
mov
loopne
mov
dec
ja
stc
jnp
loopne
mov
sti
int3
push
or
cltd
jl
jns
mov
xor
and
test
aas
push
push
scas
mov
sub
cwtl
es
mov
bound
call
jge
adc
add
pop
dec
fidivrs
addl
imull
sbb
shll
clc
ja
gs
lahf
dec
cmp
daa
ljmp
dec
mov
adc
ret
push
or
fcom
clc
in
loop
in
push
jae
mov
push
push
jmp
sub
mov
fdivrl
and
push
shrl
fwait
jbe
jmp
xchg
es
sub
movsl
int
ret
fildll
dec
pop
hlt
jl
cmpsl
xorl
mov
mov
push
push
xchg
dec
adc
fsubp
repnz
mov
fwait
jle
fists
mov
inc
or
push
enter
adc
mov
cltd
out
test
jge
xor
into
fs
int
bound
ret
out
xor
xchg
pop
adc
push
outsb
cs
cmp
lret
scas
push
dec
and
and
inc
and
dec
addr16
lcall
cmpsb
push
or
test
mov
add
push
sbb
xchg
adc
out
lcall
mov
sub
fwait
jmp
imul
sbbl
jnp
dec
lcall
and
cmc
mov
lods
xchg
pop
pop
les
into
mov
imul
movsb
inc
sub
and
cmpsb
jle
mov
arpl
lods
aad
out
outsb
mov
sbb
xchg
icebp
sub
int3
xchg
pop
bound
aas
mov
push
fisubs
movsl
jle
inc
xor
movsl
fstpt
mov
xchg
ret
leave
push
andl
or
adc
enter
in
jle
xor
into
orb
aaa
call
jle
xchg
arpl
out
xor
pop
dec
mov
mov
stos
and
or
lods
cmc
leave
add
mov
adc
fcmovne
hlt
in
dec
push
outsl
or
push
sbb
cmp
fidivrl
push
mov
jne
adc
or
jb
inc
out
xor
push
je
jno
decl
iret
xor
adc
iret
and
addr16
sub
xor
adc
sbb
inc
dec
pop
dec
sub
xchg
push
repnz
repz
loope
adc
into
push
jbe
xor
sub
stos
andb
push
ljmp
add
cltd
jbe
xor
pop
mov
fidivl
ror
movsl
out
xchg
cmp
mov
jecxz
cmp
outsb
mov
in
xchg
xchg
xchg
aaa
loop
mov
sub
and
inc
add
lcall
mov
cmc
mov
jge
nop
push
stc
ds
test
test
aad
mov
fs
test
push
jmp
sbb
xchg
stc
in
and
push
fwait
push
xor
movb
add
jae
cmpsl
dec
and
jp
sub
or
dec
je
fs
lret
mov
into
loop
jecxz
in
stos
mov
fcoms
aad
jg
lea
aad
loope
cmc
pushf
and
out
arpl
dec
divl
test
out
stos
sarb
mov
pop
js
sub
inc
inc
popf
add
mov
mov
out
mov
sti
aam
lods
popf
testb
push
int3
aas
inc
push
sbb
and
inc
add
inc
out
xor
test
inc
out
dec
loopne
sub
iret
ds
push
enter
jnp
push
addr16
push
ret
iret
push
jbe
adc
ja
gs
orl
dec
loopne
repnz
sub
push
scas
mov
xchg
inc
fdiv
int3
sbb
or
in
inc
push
es
jne
loop
test
mov
sub
push
jne
pop
js
xlat
adc
pop
xchg
call
test
push
jnp
adc
push
mov
push
mov
xorb
popl
and
cmp
sub
xor
in
int3
sbb
push
or
pusha
add
xor
leave
mov
into
arpl
mov
push
mov
outsb
fnclex
sbb
dec
cmpb
cmpl
iret
rcrb
inc
test
cmpsb
lret
xchg
outsl
repnz
mov
inc
out
xor
push
jge
push
mov
je
in
stc
cltd
jne
xchg
mov
pop
cmc
xlat
and
add
popa
mov
push
repz
sbbl
lea
add
dec
test
mov
and
jmp
sub
call
jno
adc
adc
sbb
adc
stc
fsubr
jne
or
repnz
sub
mull
imul
and
jno
mov
out
and
insl
out
dec
arpl
adc
dec
movsl
leave
inc
ss
dec
pop
xlat
xchg
pop
ret
sbb
adc
add
aad
mov
xor
lcall
testl
notl
sub
aaa
sti
dec
sarl
pop
mov
je
xchg
jg
vpcmov
in
int3
bound
sub
repnz
lahf
xor
ljmp
inc
loopne
outsl
mov
arpl
mov
test
popa
or
cltd
jp
fwait
jno
and
hlt
lds
mov
xchg
mov
in
icebp
nop
cmp
cli
and
loop
dec
cltd
mov
jae
or
jnp
mov
xchg
cs
push
into
outsl
add
stos
sarl
in
cmpsb
ds
xchg
sbb
push
mov
adc
jmp
sbb
gs
add
push
jne
outsl
sub
out
lret
adc
dec
push
or
cmp
push
lods
flds
cs
daa
mov
push
push
lea
sbb
jb
push
cld
or
es
inc
test
and
aas
sahf
lahf
lods
push
xchg
sub
and
cld
jmp
xor
and
outsb
cmc
arpl
cmp
sahf
mov
sti
and
loop
fs
add
xchg
clc
dec
in
dec
mov
pop
ficoml
mov
and
or
adc
mov
xor
dec
shlb
lea
xchg
pushf
les
popa
xchg
push
lods
inc
aad
mov
cwtl
fldl
cwtl
arpl
pop
jle
mov
leave
mov
aad
cwtl
pop
lods
or
mov
out
int
ljmp
cli
lds
pop
pop
scas
in
fdivp
inc
sub
imul
inc
mov
jns
popf
mov
dec
xchg
xor
jp
cmpsb
or
sbb
cmp
out
mov
xchg
pusha
popa
mov
jns
sub
movsb
push
lock
cmp
sbb
add
imul
addb
gs
sub
mov
loop
jnp
mov
mov
repnz
mov
jp
mov
imul
mov
orl
or
xchg
ss
sub
or
cmc
and
mov
lds
and
iret
pop
mov
cmp
pop
shll
or
cmp
mov
push
arpl
cli
xor
pop
lret
inc
mov
mov
pop
jns
int
xchg
adc
pop
inc
fistpl
mov
idivl
jecxz
mov
pop
pop
xchg
in
jmp
add
out
or
or
adc
ror
jle
push
pushf
xor
sti
out
aam
push
mov
xchg
xchg
call
das
shll
sub
cld
sub
jp
les
push
aad
inc
xchg
inc
or
outsl
xchg
dec
mov
mov
test
jb
push
adc
int3
js
daa
je
cmp
dec
lds
test
shll
or
push
loop
out
sub
mov
loopne
test
add
cmp
in
and
dec
lea
test
mov
dec
and
stc
jmp
sub
scas
mov
pop
lret
push
and
and
adc
icebp
aad
mov
jmp
cmp
dec
test
repnz
xchg
es
dec
inc
jmp
icebp
mov
or
movsb
sbb
xchg
add
mov
sub
pop
and
mov
icebp
adc
in
aas
push
lods
add
sub
cmc
hlt
jne
data16
sub
xchg
mov
jbe
cltd
fdivp
inc
sub
dec
inc
ja
xchg
stc
adc
mov
sbb
inc
xchg
push
push
push
test
mov
cmpsl
fsubrs
dec
jbe
nop
or
adc
cltd
jns
lcall
pop
push
loop
cmp
test
fadds
fsubs
nop
cli
enter
jmp
mov
hlt
aam
mov
test
push
outsb
and
movsb
ss
nop
dec
xchg
je
out
sub
push
pusha
xchg
xchg
jmp
jbe
out
popf
mov
inc
or
int
std
clc
lods
pusha
pop
iret
pushf
sbb
xchg
in
inc
scas
sti
into
or
loop
fbld
cmp
sbb
xchg
cmpsb
ljmp
sbb
push
jp
je
add
cmp
jg
xchg
cmovb
dec
sbb
scas
mov
push
or
lret
arpl
jmp
xchg
sbb
pop
jle
es
sbb
xchg
sub
dec
xchg
in
pusha
add
jp
imul
hlt
cld
adc
push
je
xchg
stos
add
and
sub
sti
stos
incl
dec
sbb
sar
mov
jecxz
sbb
xor
push
dec
scas
sub
les
ret
cmp
jno
popa
xchg
movb
xchg
fisubs
cmp
fstl
jmp
jp
mov
jne
push
add
loopne
ds
idiv
test
ficompl
dec
notl
test
xchg
mov
rolb
pop
xchg
fwait
mov
pop
loope
xor
jno
shrl
mov
bound
mov
mov
push
mov
sbb
out
xchg
mov
data16
xorb
xchg
ud0
push
dec
add
cmpl
add
es
pop
mov
xor
mov
xchg
mov
mov
ss
negb
push
je
lock
lock
test
pop
out
inc
pop
lock
ret
scas
xchg
push
jg
xchg
divb
jmp
dec
scas
xchg
xor
xchg
push
pop
inc
ret
push
fcmovnb
add
pop
jmp
ljmp
std
dec
pusha
or
lods
pop
aad
leave
inc
scas
jns
and
scas
fwait
loope
cmp
sbbb
addr16
imul
cwtl
sub
xchg
fdivrl
push
lret
cld
sub
cmp
dec
inc
add
add
cmp
sti
out
loope
shll
in
jmp
jg
push
fwait
mov
sub
sub
jmp
ret
aas
aad
mov
pop
xchg
repnz
add
jo
or
mov
std
pop
mov
push
cli
jge
test
inc
push
mov
sbb
rolb
inc
les
adc
xorl
frstor
data16
add
mov
inc
mov
push
jl
sub
leave
out
popl
nop
test
fistpl
fdivrs
xor
jne
sbb
int
loopne
and
mov
mov
lods
int
fstpl
cli
es
xchg
mov
and
xchg
pop
xchg
fwait
sub
cmp
jp
in
test
lret
lcall
lock
insl
stos
lods
nop
mov
push
lret
jl
icebp
sub
sub
or
lahf
js
js
pusha
loop
jb
push
repnz
jne
adc
sbb
sub
scas
dec
fstps
pop
lock
and
jns
inc
outsb
fmulp
data16
in
popa
jns
sbb
outsl
popa
shrb
mov
cmp
push
add
jbe
and
iret
jl
repnz
sub
enter
mov
push
sbb
mov
inc
adc
fbld
mul
xchg
rclb
or
aas
ds
push
cltd
hlt
daa
es
pop
sbb
mov
push
jns
popa
inc
add
and
roll
xlat
je
xor
cmc
mov
jno
aas
shrl
mov
sub
dec
mulb
add
ds
inc
imul
xchg
notb
dec
inc
push
xchg
mov
mov
std
xor
xchg
inc
mov
xor
movsl
jp
jb
rol
pop
lret
test
outsl
fdivp
cmp
ja
mov
aas
dec
cltd
leave
push
ret
mov
or
hlt
outsb
mov
scas
xchg
movsb
ret
mov
mov
xchg
xchg
or
ret
cmpl
xchg
rolb
mov
jne
lock
jno
mov
dec
loope
xor
inc
pop
dec
aas
dec
push
hlt
mov
sub
lds
enter
mov
ljmp
pushf
lret
ljmp
xchg
push
mov
xchg
mov
and
xchg
and
pop
into
jne
inc
andb
mov
loopne
in
jge
push
xchg
icebp
outsl
out
xchg
xor
pop
es
dec
mov
lods
inc
and
aas
inc
mov
lock
inc
mov
mov
jmp
fiaddl
shl
inc
mov
add
adc
lds
hlt
jmp
cltd
push
dec
test
pop
sbb
ljmp
push
pop
sbb
sbb
ss
dec
xor
cld
std
mov
bnd
shll
and
pop
cmp
insl
neg
xchg
shrb
pop
cmp
hlt
sbb
out
sub
push
or
add
orb
sub
iret
push
pop
cmp
cmp
jno
mov
mov
mull
mov
add
mov
sub
dec
rol
outsb
xor
xor
test
push
lock
imul
lods
repnz
and
sub
ljmp
inc
in
add
mov
call
mov
imul
fistpl
test
scas
leave
lds
leave
jl
pop
add
adc
addb
popf
inc
lea
aam
or
and
imul
adc
out
jp
es
inc
adc
mov
fnstenv
fwait
dec
js
xchg
shll
cs
jo
gs
and
xor
movups
dec
push
out
pop
out
mov
sbb
fistps
jae
cltd
fists
sbb
or
inc
outsb
add
push
fiadds
adcb
push
fdivs
inc
insl
cs
imul
adc
mov
fimull
rorl
inc
sub
push
ss
pop
pmulhw
jbe
pusha
repnz
loope
xchg
pop
push
or
insb
cmp
rolb
cmc
int3
add
jb
mov
adc
xor
imul
jnp
loopne
fcmovnb
fcmovnb
mov
pop
xchg
mov
push
add
dec
test
jae
cmp
faddp
sub
imul
test
imul
lods
rorb
push
sbb
cwtl
cmp
add
push
sbb
shrl
pop
jmp
push
push
inc
insb
sbb
pop
in
cmc
call
dec
jnp
add
mov
mov
add
adc
repnz
adc
push
ja
jo
popf
xor
insb
pcmpgtd
push
call
loop
fbld
sti
and
mov
das
jns
push
jnp
int3
cwtl
popf
pushf
mov
clc
xor
xor
popa
mov
cmpsl
movsl
lock
lds
sbb
xchg
out
adc
xor
fnsave
adc
add
call
mov
adc
jge
xor
lret
lret
frstor
add
lcall
stos
pop
xchg
add
jno
cld
xor
out
and
adc
mov
out
push
pop
out
cwtl
push
loop
mov
rcll
ficomps
pop
adc
inc
xor
add
adc
not
loope
mov
lods
xor
js
stc
push
jmp
and
sbb
fldt
mov
daa
int3
test
jl
dec
xor
fstl
xchg
jb
in
repz
aaa
mov
xchg
mov
dec
fs
in
fwait
adc
or
dec
sbb
adc
xor
xchg
lock
pop
loope
jae,pn
cs
xchg
dec
aas
cmp
aam
add
push
int3
mov
pop
mov
inc
out
aas
mov
mov
fwait
test
and
iret
xchg
mov
arpl
in
pop
in
lods
in
jns
daa
inc
in
leave
mov
mov
mov
mov
xor
xor
jg
jecxz
xor
or
mov
adc
outsl
test
lahf
dec
jb
dec
sbb
popa
cmp
mov
sbb
fcmovbe
push
ja
roll
jge
imul
int
pop
sbb
pop
pop
mov
fs
jo
mov
fisttps
mov
inc
test
jb
fidivl
and
inc
lahf
test
sbb
mov
lds
sub
lcall
add
lock
jmp
loopne
fistl
arpl
pop
out
sbb
cmc
push
sarb
leave
addr16
xor
cmp
add
sbb
jae
mov
repz
das
repz
and
shrl
loopne
inc
nop
mov
outsl
or
std
jo
xor
nop
out
sahf
ljmp
jno
mov
into
push
stc
mov
cli
xchg
jb
cld
imul
dec
add
jmp
fsubrl
xchg
cltd
scas
insl
xor
push
test
fimuls
jmp
adc
cld
mov
std
add
outsb
popa
test
pop
push
sub
xchg
or
xor
mov
xchg
jge
push
dec
add
rcrb
popf
stc
and
cmpsb
xor
and
xorb
mov
data16
data16
xchg
sbb
or
pop
mov
push
jo
clc
out
subb
push
cmp
sti
ficomps
push
xchg
scas
xchg
cmp
aam
js
push
xor
mov
cs
adc
jno
popa
aam
lahf
pusha
adc
inc
xor
sub
lret
aas
sbb
int3
jae
outsb
and
repz
jb
scas
jl
dec
xor
inc
iret
cs
lcall
shl
adc
adc
mov
out
mov
pop
add
dec
and
lret
or
inc
pop
inc
inc
mov
inc
xor
adc
shll
nop
push
in
xor
jne
sbb
ss
xor
sub
inc
xchg
jbe,pn
shl
or
mov
add
xchg
xor
in
cmp
lock
adc
je
cs
pop
xchg
ds
add
int3
push
imul
sbb
daa
sbb
push
xlat
push
lods
or
leave
das
xor
aaa
adc
in
pop
and
sahf
scas
mov
push
jg
jnp
inc
jb
xchg
rorl
sub
mov
inc
dec
pop
inc
stos
fdivp
mov
add
rcl
lahf
dec
daa
mov
push
imull
repz
lods
repnz
or
pop
out
mov
insb
hlt
hlt
mov
popa
add
push
adc
cmp
insb
mov
xchg
or
negb
and
adc
mov
or
push
aad
and
cmp
pop
pop
push
enter
out
add
sbb
pushf
dec
out
repnz
je
jae
dec
push
xchg
sub
lock
test
das
out
pop
push
mov
xor
cld
sbb
leave
rdtsc
pop
jmp
fisubrl
outsl
pusha
xchg
pop
xchg
popf
sub
jecxz
nop
sar
xchg
pop
dec
jl
jp
push
xchg
xor
cmp
cmpb
or
popl
repnz
rorb
outsl
popa
xlat
xor
mov
inc
jecxz
xchg
lds
mov
fbstp
jmp
inc
mov
mov
icebp
mov
push
cs
or
lods
fcoms
int
inc
xlat
fdivs
mov
xor
bound
out
sub
rorb
mov
mov
lods
and
xchg
and
and
aas
cmp
loope
inc
aaa
cs
lret
ficoms
sbb
enter
mov
outsl
pushf
nop
jnp
imul
dec
vminsd
add
fildl
xchg
adc
data16
in
xchg
mov
sbb
jo
push
dec
or
popf
and
sub
hlt
jge
mov
lock
mov
jmp
jmp
mov
movsb
rcrb
xlat
pandn
dec
outsb
rorl
dec
call
jl
imul
aam
lcall
jg
fisttpll
push
int3
les
mov
adc
jge
sub
test
mov
lds
int3
xor
push
paddusb
shl
sti
and
mov
mov
jb
sub
pop
scas
out
pop
loop
cmp
cmpsb
lds
iret
aaa
sahf
outsl
fsts
into
push
add
mov
enter
pop
fwait
jg
cmp
add
fcmovnbe
adc
cmp
arpl
in
nop
xchg
push
mov
cmp
faddl
movsl
and
scas
sar
pop
mov
adc
je
mov
xor
mov
movsl
add
mov
adc
es
and
push
mov
rorb
mulb
mov
xchg
sub
inc
xchg
sub
test
dec
jmp
aam
insb
into
in
out
push
ds
aas
ss
ss
shl
xor
imul
loop
mov
sub
outsl
ficompl
ja
pop
xchg
nop
repz
push
pop
jns
ljmp
push
jo
mov
das
rolb
neg
mov
test
mov
nop
cmp
xchg
or
xchg
ss
and
mov
test
sbb
push
pop
cld
mov
adc
sub
popf
cmp
mov
stos
popa
push
adc
cld
mov
cs
aad
shrb
inc
stos
sub
mov
jno
mov
fimuls
scas
movsl
cmp
inc
nop
adc
notl
lcall
inc
push
mov
cmp
cmp
lahf
push
add
mov
es
retw
lock
mov
xor
je
into
pop
cmp
mov
sbb
pop
dec
in
scas
pop
aam
fnop
dec
jne
mov
sub
sbb
mov
sbb
loope
std
adc
out
pop
jp
push
jne
push
adc
jmp
add
outsb
pushf
mov
pop
push
mov
pop
icebp
daa
lock
stos
mov
rorl
aam
jge
lgs
pusha
xlat
sahf
sbb
cmp
mov
add
pusha
lea
xchg
test
and
inc
insb
sub
div
mov
push
fistpl
int3
sub
adc
pop
adc
and
sbb
out
pop
xor
andl
sti
sbb
adc
neg
stc
xchg
popf
sti
mov
icebp
sub
or
shl
dec
scas
or
xor
mov
into
mov
push
arpl
adc
rolb
and
mov
mov
jmp
cmpsl
incb
enter
cli
jno
aas
mov
jb
push
add
mov
add
and
int
fsubrl
jo
in
out
sbb
jg
subl
mov
fistpll
xchg
mov
inc
push
ret
push
mov
sbb
les
sub
xchg
out
mov
mov
xchg
adc
xlat
push
out
mov
sarl
mov
rcrl
int
iret
in
aam
pop
out
ret
adc
std
fwait
xchg
dec
out
popa
dec
mov
xchg
adc
rclb
sub
dec
scas
out
nop
es
rorb
lcall
push
xchg
dec
jb
xchg
in
ljmp
rcr
pop
mov
inc
cmp
das
shr
shlb
jg
int
pop
cwtl
shll
insb
xor
bound
push
dec
push
mov
movsb
push
add
dec
xor
jno
pusha
fwait
das
cmp
and
pop
lret
insl
les
andl
jg
les
pop
fnstsw
andb
lcall
cwtl
int
mov
popf
das
scas
add
xor
test
push
cmp
pusha
sub
xchg
jmp
inc
lcall
icebp
add
stos
outsl
and
mov
arpl
and
imul
ja
cmpsb
mov
sbbb
std
in
mov
jnp
push
repz
les
xorb
mov
fwait
loopne
fcompl
xchg
xchg
mov
cmp
jp
iret
push
mov
xchg
popl
jmp
mov
ret
lcall
or
xchg
cwtl
push
push
adc
mov
repz
mov
loop
mov
shrb
test
jp
mov
jle
sahf
push
mov
sbb
xor
inc
subl
or
mov
repnz
xchg
mov
or
test
inc
dec
aam
in
outsb
pop
js
inc
pop
in
and
mov
adc
fwait
popl
lret
inc
and
jns
xor
test
cmpsl
sub
and
enter
xchg
push
je
test
ljmp
add
and
scas
faddl
pop
sbb
add
add
mov
mov
les
adc
ss
xor
cwtl
sbb
subl
fs
in
mov
add
je
dec
ja
int
mov
cmp
loopne
lret
pop
nop
aam
enter
push
push
sbb
bound
or
lock
add
xchg
mov
insl
mov
xchg
sub
aas
push
mov
outsb
arpl
clc
in
add
ret
sub
cli
lds
push
xor
cld
cmc
mov
scas
sahf
mov
in
inc
pop
sbb
lea
shrl
sbb
or
lock
pop
add
jge
arpl
inc
in
int3
bsr
push
shlb
mov
lcall
std
add
hlt
jb
or
sbb
test
mov
mov
jnp
test
and
fwait
jl
hlt
dec
jnp
aas
mov
adc
inc
in
test
dec
add
int3
ja
std
int3
jle
mov
cmpsb
jl
lahf
xorb
dec
cli
mov
xchg
loop
inc
inc
fnsave
fsubrl
pop
mov
scas
sub
mov
inc
dec
ret
enter
data16
xchg
ss
xchg
xchg
jb
mov
fwait
rcrb
push
sub
ficoms
xor
or
xor
sub
mov
xor
icebp
mov
sub
push
les
add
fsubrl
fnstenv
push
mov
jns
jp
or
and
mov
xchg
mov
xchg
jno
pop
jg
lods
ficoms
test
mov
clc
pop
into
sarb
icebp
cli
mov
or
js
adc
push
sbb
inc
lods
lds
leave
outsb
xchg
daa
mov
in
sbb
mov
sbbl
addr16
mov
movsl
lds
shrb
push
stc
es
push
mov
push
cmovge
jecxz
cmp
cld
cs
inc
and
mov
movsl
sub
adc
add
mov
mov
repnz
jg
sarl
inc
lcall
fdivs
sub
add
sbb
js
sbb
insb
pop
stos
jg
shrl
loopne
cwtl
xchg
cmpsb
push
int3
pusha
sub
mov
movb
cmp
sub
mov
jbe
pushf
and
adc
test
andb
iret
data16
aad
jecxz
jg
xor
rcrb
mov
js
push
dec
rol
pop
add
call
and
nopl
les
enter
dec
or
cmp
mov
out
adc
mov
push
and
adc
jae
pushf
clc
insb
js
inc
mov
or
mov
dec
sarb
repnz
xchg
and
jmp
clc
xchg
rolb
daa
test
adc
adc
ret
xor
sbb
int
add
inc
jns
cs
loopnew
pop
or
jne
add
mov
sahf
add
xchg
lock
es
jmp
repnz
lret
notl
insl
faddp
inc
inc
dec
push
call
leave
inc
push
scas
adc
out
lds
sub
and
adc
sub
mov
les
ret
xor
lret
test
push
sbb
jnp
and
jne
std
scas
cwtl
movd
add
pushf
and
jae
jp
jns
stos
cmc
lea
jl
lret
loope
faddl
shlb
xchg
repz
in
outsb
mov
lds
mov
ja
das
iret
aam
into
ficomps
in
push
push
jle
push
mov
pusha
cmp
jmp
jo
pop
insl
xchg
cltd
int
cmpsl
pop
mov
sub
out
lods
sub
cmp
test
ljmp
mov
fmull
push
sbb
mov
pop
sbb
ficoms
mov
and
hlt
lret
shll
data16
jb
out
or
xchg
jno
jno
repz
adc
xchg
adc
rclb
out
sub
push
gs
sub
ljmp
mov
aaa
lock
mov
cmp
movsb
or
push
adc
and
call
xor
daa
dec
jne
sub
or
es
cs
dec
or
jns
pop
sahf
dec
in
fstps
pop
shl
das
pop
mov
xchg
sahf
sbb
test
loopne
fmul
jge
push
sbb
out
sarl
sbb
fsub
or
inc
hlt
lcall
or
popf
std
cmp
enter
sub
ficomps
jp
stc
inc
jb
cwtl
mov
mov
fbstp
jae
in
inc
lahf
mov
shll
mov
push
push
scas
icebp
pop
push
dec
mov
shl
sub
xchg
insb
push
pop
adc
ss
outsl
mov
dec
into
sbb
adc
inc
dec
sbbl
hlt
jae
xor
fwait
cltd
inc
nop
es
mov
ljmp
nop
leave
xchg
adc
mov
fimull
mov
xlat
lea
clc
push
mov
xchg
cmp
mov
mov
cmpsb
push
call
adc
xchg
sahf
xor
xor
or
imul
jo
fcoms
popa
in
xchg
in
nop
push
dec
js
push
xor
je
cmpsl
leave
xor
lock
daa
ja
ljmp
cmp
sbbl
enter
into
and
pop
leave
pop
notl
mov
jb
xor
add
xor
ljmp
cmp
push
enter
lret
clc
mov
sbb
jecxz
test
in
std
jb
jae
jecxz
mov
xchg
sub
into
insb
mov
cs
das
xor
push
mov
pop
mul
jle
and
mov
addl
notl
out
cmpsb
ret
pop
enter
xor
iret
xchg
dec
int
or
xor
lock
jecxz
imul
ret
out
adc
add
test
lea
dec
pop
cli
in
lea
lret
mov
cltd
outsb
das
arpl
sub
pop
std
pop
dec
xor
imul
rol
mov
rep
or
pop
inc
xchg
inc
insb
xor
lcall
xchg
mov
mov
je
cmp
mov
push
dec
push
pusha
jns
dec
jp
adc
adc
lahf
scas
cld
mulb
and
cmc
mov
sub
fcompl
xchg
jno
inc
cmpsb
push
cmp
into
cltd
fstps
cld
call
cwtl
lret
js
fadd
mov
xlat
dec
cld
movb
cltd
shll
push
mov
push
dec
jecxz
add
lods
cltd
sub
call
mov
cmp
jno
mov
mov
dec
xor
enter
cmp
or
ss
lods
and
outsl
and
jge
push
repz
mov
lock
pop
push
loope
dec
pushf
pop
nop
jmp
jae
divl
sahf
push
pushf
idiv
xchg
adc
push
sbb
das
add
sub
xor
rclb
lea
out
and
lock
xchg
dec
or
rorl
stos
mov
insb
fsubrl
sbb
loopne
clc
aad
or
or
js
jns
ret
jne
sub
pop
scas
mov
push
or
or
arpl
sub
xorb
xchg
xchg
adcb
inc
or
not
pop
pusha
lcall
inc
aam
gs
ja
mov
adc
and
pop
pop
ljmp
lods
xchg
dec
fsincos
mov
mov
scas
cltd
sub
add
cs
push
mov
push
mov
adc
xlat
sarb
inc
pop
repz
sbb
mov
sub
mov
adc
out
addr16
jb
xchg
loope
cli
pop
lea
aad
cmp
and
ds
lcall
mov
nop
cld
push
inc
inc
mull
mov
lret
es
or
or
adc
flds
insl
iret
sub
add
or
xchg
imul
shll
div
sub
and
xchg
lods
scas
and
mov
push
xchg
jmp
jle
dec
xor
lods
cmp
push
int
ret
pop
add
aam
fdivl
ja
testb
mov
inc
xchg
dec
sub
push
adc
aas
clc
out
nop
and
push
out
dec
mov
js
adc
int
flds
jo
sub
and
lret
fldln2
xchg
or
pop
add
leave
and
xchg
adc
pop
popa
ljmp
or
cmpsl
inc
cmp
add
pop
jle
cmp
rclb
hlt
je
xor
sub
in
sbb
push
inc
testb
outsl
or
and
xor
outsb
out
xor
jo
dec
lcall
xlat
adcl
cs
lods
sbb
inc
popf
jle
popf
xchg
mulb
jl
lods
stos
and
sub
test
or
or
mov
andl
call
bswap
lcall
xchg
mov
arpl
mov
push
and
dec
and
fildll
cmp
popa
sbb
loop
jb
loop
xchg
push
dec
das
pop
loop
or
jmp
sub
mov
or
lret
dec
int
aam
bound
cmpsl
shlb
idivl
icebp
test
ret
sti
adc
add
in
adc
movsl
sbb
loopne
aas
jne
mov
xchg
out
out
xor
data16
cmp
mov
sbb
daa
jge
loopne
dec
xchg
and
das
lods
jl
cmp
xor
jnp
out
in
stc
js
lods
out
pop
andb
inc
cltd
loope
jmp
jnp
notb
mov
or
push
pushf
xor
dec
aam
pop
and
ficoms
iret
stc
adc
dec
xor
or
or
fidivrl
mov
notl
xchg
xor
xchg
mov
outsb
and
ja
mov
xor
xor
sti
ja
or
or
cs
sub
xchg
pop
push
push
push
xchg
jb
mov
or
and
xchg
test
aaa
xchg
mov
xchg
jo
add
test
jge
subb
sbb
mov
jno
addr16
in
lock
or
sub
and
dec
mov
in
shr
and
xchg
js
mov
sub
cld
add
mov
mov
add
push
mov
mov
inc
fldcw
fwait
pop
sbbb
ret
jb
aam
decb
cmp
ja
jno
int3
out
inc
cmp
clc
lret
and
sarl
jb
xor
pop
movsl
lods
mov
xchg
xchg
sbb
sub
lea
inc
mov
adc
lds
mov
pop
shll
ds
fwait
pop
or
cltd
inc
js
and
xchg
xchg
es
lcall
jne
bound
roll
mov
fwait
jo
lret
xchg
adcl
cmp
lods
cmc
lcall
push
rcrl
mov
and
outsl
dec
inc
jge
adc
clc
fwait
pop
ret
popa
xor
mov
leave
lahf
insl
pop
mov
ret
andb
mov
sub
cld
jns,pn
push
imul
nop
adc
iret
std
movsl
mov
stc
sbb
mov
adc
insl
idiv
add
fs
mov
fwait
xchg
or
sbb
push
jmp
in
sarb
jl
push
loope
xor
cmpb
adc
xor
and
or
gs
ret
mov
loope
mov
and
lret
movsb
and
enter
jo
fsubp
jne
mov
push
test
insb
sub
mov
nop
mov
push
jge
mov
loope
mov
mulb
rorb
fiaddl
rolb
lock
mov
popf
adc
pusha
pusha
lods
pop
outsl
sub
push
cmp
add
ds
js
mov
mov
jge
xor
and
xchg
outsb
push
push
inc
aaa
or
cld
sbb
aaa
sub
es
pusha
mov
gs
sbb
rorl
push
or
dec
iret
insb
jecxz
pop
or
cwtl
addr16
push
add
dec
lods
and
or
bound
mov
imul
or
mov
call
loop
sbb
inc
sbb
sub
adc
outsb
and
stc
lock
sub
insb
push
jmp
repnz
mov
rcll
mov
out
xchg
insb
cmp
mov
jle
pop
xchg
and
jl
aas
mov
fistps
icebp
lret
cmc
jo
popf
out
imul
lcall
push
xchg
sahf
mov
add
xchg
shlb
pop
jno
jne
xchg
dec
mul
shll
mov
divl
push
out
stos
sub
lahf
push
dec
dec
ss
rolb
dec
push
repz
rclb
mov
imul
lret
mov
stos
mov
aam
push
jno
xor
pop
addb
sarb
imul
imulb
mov
je
testb
fucom
ret
jle
je
pop
jno
or
sub
adc
fisubrl
sbb
mov
sub
adc
frstor
sbb
shrb
xor
pop
jbe
xor
inc
or
pop
mov
stc
int
adc
adc
pop
sub
int
fdivrs
dec
sbb
push
mov
push
adc
outsl
mov
xor
xor
xor
sbb
inc
test
push
mulb
sbb
insb
aas
rolb
xchg
in
pop
lret
pop
insb
mov
pop
push
outsl
into
mov
fisttpl
hlt
xor
fmuls
dec
fwait
adc
jle
cmp
adc
stc
inc
sbb
repz
xchg
mov
xchg
mov
pushl
pop
int
sarb
cmp
mov
dec
call
repz
hlt
outsw
rcll
add
pop
and
mov
mov
mov
out
adc
xor
sub
pop
add
insb
and
out
addb
or
push
enter
lods
jne
loop
push
inc
jb
mov
add
fsubs
repnz
in
scas
lds
adc
aas
add
dec
push
mov
adc
stc
mov
cmp
ja
mov
adc
shll
out
sbb
in
push
sbbb
shll
in
std
adc
sbb
jmp
inc
pop
stos
push
adc
inc
xor
shrl
inc
fnstsw
aaa
pop
lds
mov
pop
add
imul
cmpsl
rcll
mov
sbb
mov
adc
nop
in
ljmp
mov
jns
lret
test
jle
mov
test
dec
cwtl
or
pop
mov
clc
enter
push
push
aam
addr16
stos
mov
and
add
cmp
dec
pop
shrl
cli
push
ret
jle
xchg
sub
shl
out
mov
ret
mov
fimull
mov
mov
inc
sub
mov
ret
filds
or
mov
cmp
in
and
fildl
xor
and
mov
test
mov
leave
lods
sub
add
stc
xchg
mov
cmp
aam
jb
adcl
inc
jo
cmp
pop
or
shl
out
and
loope
out
mov
push
mov
loope
cmpsb
mov
xchg
sub
filds
or
and
xchg
clc
sbb
jb
cmp
lahf
inc
cmp
stos
aas
add
mov
adc
lret
les
jbe
jo
in
sub
mov
imul
push
dec
lahf
dec
int
or
sub
pop
daa
lret
movsb
inc
xchg
sub
inc
dec
mov
sti
mov
negb
in
sti
xor
mov
enter
cld
jp
add
mov
sub
lret
or
andb
rcll
xchg
orl
loopne
popf
popf
dec
sbb
test
popf
mov
mov
or
jne
mov
push
scas
xchg
icebp
insb
pop
and
mov
xchg
fucomp
mov
stos
or
inc
xlat
xchg
dec
fld
mov
lea
jmp
inc
adc
daa
loop
mov
xlat
ficompl
in
loopne
sub
xchg
movl
fs
xor
jmp
rcl
in
not
movsl
inc
in
mov
out
scas
jne
cld
fwait
jmp
lods
pop
orb
jecxz
roll
jb,pn
cltd
and
cmc
test
mov
insb
xor
or
enter
stos
jb
out
out
pop
sub
lcall
mov
mov
xchg
xchg
std
dec
fstl
movsl
push
and
xor
or
xchg
fwait
push
nop
sahf
addb
dec
movl
clc
in
push
dec
lock
es
out
push
rcrl
rcrl
aam
clc
outsl
cmp
sbb
and
xorl
cmp
add
add
scas
dec
shll
test
cld
int
xchg
push
and
dec
lea
sub
incb
jge
xchg
cmp
loope
imul
xor
jp
mov
dec
pop
push
dec
xor
xlat
dec
sub
xchg
jg
mov
jo
pop
shlb
jl
inc
incl
ret
jno
iret
sub
addr16
inc
movb
pop
inc
dec
jb
sahf
stos
fidivrs
cs
ja
cwtl
out
rcrb
cmp
or
test
or
sub
sbb
jae
mov
jno
and
pop
in
scas
push
add
lahf
push
ficompl
loopne
loope
fstpl
rolb
inc
and
imul
mov
les
loopne
push
test
arpl
loopne
add
push
daa
pop
sub
adc
bound
mov
mov
std
movsl
movsl
xchg
cmp
arpl
inc
incl
ret
mov
push
cmpsl
pop
cmp
inc
xchg
subl
or
hlt
mov
stos
fimuls
faddp
sbb
pusha
mov
out
inc
jecxz
pop
arpl
mov
lret
add
sbb
mov
jge
sub
aam
adc
add
subb
sub
lea
cs
in
hlt
in
lds
lds
fistps
and
stos
js
adc
or
cmp
lods
fildll
test
pop
mov
insl
mov
mov
lds
int3
cmpsb
popf
in
lds
and
pusha
inc
lret
in
into
idiv
push
jns
xchg
push
outsb
dec
mov
hlt
and
loopne
pop
aam
test
test
inc
in
jae
jno
loop
clc
or
je
ficomps
bound
movsl
mov
aaa
pushf
loopne
sub
push
test
push
xor
mov
insb
mov
mov
cmc
gs
rcll
mov
sysret
outsb
cld
or
xchg
mov
dec
dec
daa
andb
ljmp
mov
pop
sub
hlt
fwait
imul
in
mov
sub
nop
push
jnp
xor
lods
bound
sbb
lcall
cmp
std
lea
jns
std
popl
adc
jno
pop
mov
add
repz
insb
setb
aam
push
xorl
outsb
aam
fstl
int
scas
inc
sti
cmc
lret
dec
push
sbb
inc
arpl
jecxz
and
fcoml
mov
cmp
insb
aam
inc
push
pop
lret
lahf
sbb
popf
jo
cmp
bswap
in
repnz
jo
pop
pop
popa
xchg
mov
sub
cld
xchg
subl
jns
mov
push
getsec
or
sub
rorb
push
outsl
mov
add
push
lcall
xchg
mov
mov
mov
jae
mov
xchg
sub
xchg
jg
xor
cmpb
cmp
adc
dec
and
jle
pop
adc
sar
jb
mov
in
lcall
sbb
clc
xchg
notl
mov
cmp
insl
and
nop
leave
imul
push
inc
mov
jbe
mov
xchg
sub
scas
push
cmp
lcall
rclb
sbb
push
mov
inc
mov
out
cmp
jne
push
cmp
jb
sub
or
pop
shlb
or
sahf
repz
imul
shlb
es
and
subb
pop
xor
das
push
xchg
test
sub
cmpsb
andb
xor
dec
pusha
xor
sub
mov
test
ss
cmp
and
xor
orb
in
xchg
push
push
push
push
loopne
lret
pop
pushf
mov
jo
jae
cwtl
adc
or
xor
sub
add
xor
cmc
xlat
in
pop
sar
fldcw
ffree
stos
pop
xor
xchg
mov
lds
pop
or
or
testb
clc
mov
mov
inc
mov
dec
or
push
push
pop
mov
cmp
ret
adc
lods
daa
push
je
loop
inc
sub
loop,pt
pop
rclb
scas
lahf
dec
scas
xor
push
mov
cld
pop
into
pop
mov
sub
shll
pop
mov
icebp
or
out
jo
push
imul
cmc
pop
xchg
pusha
lcall
sarb
repnz
pop
xor
loop
jnp
push
sbb
or
or
inc
stos
loope
mov
aad
movsl
xchg
mov
xchg
jno,pn
sbb
sub
bound
xchg
jmp
and
jl
imulb
inc
das
sub
ret
inc
jecxz
pushf
sbb
nop
ljmp
std
dec
imul
xor
lret
xor
sbb
cmpb
out
loope
xchg
cmp
fsubr
mov
mov
sbb
push
popa
sbb
jb
sub
fstp
inc
ss
loop
mov
incb
outsl
push
call
xchg
jp
in
adcb
daa
mov
inc
jns
cltd
cli
pop
cmp
call
lret
cmp
push
in
xchg
inc
pop
push
das
add
fdivrp
inc
out
mov
mov
sbb
adc
or
fbld
inc
jmp
in
adc
cltd
adc
pop
add
jo
ss
adc
dec
xor
sti
dec
aad
dec
mov
aam
jne
loope
mov
gs
xor
lock
dec
insb
sub
lods
sbb
out
adc
inc
pop
mov
fs
add
lock
add
inc
jb
add
pop
imul
out
mov
mov
jmp
pop
xlat
mov
mov
in
xchg
pop
into
test
int
movsb
push
sarl
ja
rcrl
fnstcw
call
pop
sti
push
into
jmp
xor
push
je
adc
push
cmpsb
xchg
jle
xchg
mov
fcmove
lea
and
enter
outsl
clc
xor
fwait
add
and
inc
fdivl
adc
shl
cli
js
or
xorl
xchg
cmpsl
and
movsl
or
or
dec
pop
cli
call
xchg
es
mov
dec
and
fisubrs
push
jns
mov
xor
and
ret
mulb
cmpb
das
xor
xor
dec
test
add
dec
stos
icebp
bnd
xor
fmull
jb
pop
mov
repnz
clc
xor
jle
mov
insb
pop
loopne
cmp
adc
push
cli
mov
loope
daa
mov
mov
call
jmp
filds
std
sub
xor
popa
nop
mov
pop
and
cs
nop
cmc
mov
sub
pop
fildl
enter
ja
insb
inc
mov
xchg
lcall
push
cli
leave
or
push
cmp
add
repnz
rcrl
imul
adc
js
cmp
or
cmp
cs
add
mov
push
jecxz
mov
ja
stos
ret
pushf
sbb
rcrl
in
mov
sbb
pop
shrb
cltd
rcrl
movsl
mov
gs
lret
adc
repz
and
mov
mov
sbb
push
xchg
add
and
adc
rolb
mov
push
js
sbb
mov
and
stos
mov
xchg
adc
pop
cmpsl
mov
add
sbb
cmp
sub
inc
pop
das
sub
add
mov
stc
inc
jne
push
lret
push
outsl
inc
shrl
lods
sbb
pop
sarb
pop
daa
lea
mov
or
sahf
cmp
adc
dec
in
or
pushf
and
out
xor
xchg
in
out
add
jns
push
movsl
lods
and
test
ja
and
scas
imul
inc
jmp
pushf
orl
ret
jle
imul
and
and
mov
add
pop
es
pop
lock
xchg
adc
sbb
jmp
sbb
mov
lea
and
jo
cmpsb
pop
sub
outsb
xor
ja
test
cmp
xchg
fimuls
mov
testl
jne
add
aas
inc
pop
xor
add
inc
jg
aaa
ret
les
test
sbb
add
lret
pop
pusha
pushf
aaa
jns
out
sub
push
ja
stc
arpl
fisttps
imul
push
test
push
pushf
mov
js
sub
lods
out
sti
sub
movsb
mov
rcrl
icebp
popa
adc
dec
adc
pop
mov
xor
cs
mov
push
inc
dec
push
and
jae
push
pop
sub
cs
mov
mov
shll
mov
mov
repz
mov
stc
sahf
outsb
jb
push
outsb
int3
cmp
repnz
mov
push
lea
rolb
push
dec
jo
dec
scas
mov
and
cld
fistl
loopne
loop
inc
cld
inc
adc
mov
sbb
and
in
cmp
testl
jle
out
stc
mov
xor
xchg
pop
pop
lods
call
jmp
pop
cmp
jo
pop
fadds
mov
test
xchg
or
addb
dec
mov
pop
push
dec
pop
mov
dec
xchg
cltd
jne
or
add
sub
hlt
or
fimuls
pop
ret
out
or
aaa
insl
mov
sub
bound
rcll
imul
adc
outsl
pop
rclb
shlb
sbb
jmp
lret
xchg
out
imul
or
inc
mov
movsb
mov
data16
xchg
jg
imul
add
or
or
or
int
popa
pop
int3
das
inc
out
int
adcl
adc
mov
out
dec
cmp
and
addb
fcoml
mov
add
xchg
rcrl
cmp
push
je
divl
push
sub
gs
cmp
mov
jge
ss
out
imul
mov
lret
mov
pop
mov
inc
mov
or
dec
int3
adc
std
push
dec
push
mul
cmp
imul
pop
ffree
pusha
shl
or
jb
jg
add
scas
adc
loopne
cmc
jecxz
jbe
pop
or
push
bound
shr
es
xchg
vpshuflw
inc
sti
push
subl
mov
mov
mov
pusha
je
popa
sbb
pop
fldcw
ljmp
or
cmp
and
mov
popf
rcl
mov
mov
jns
jmp
pop
movsb
cwtl
fisttps
stos
xor
cmp
pop
sub
sub
jns
mov
rcll
xchg
add
outsl
pop
or
xchg
popa
add
shl
or
jge
aaa
xchg
sbb
sub
out
movsb
xchg
inc
and
lahf
cld
scas
stc
mov
push
cs
addr16
inc
clc
inc
popf
aas
pop
lret
mov
dec
sbb
or
out
xor
cli
sbbb
or
mov
adc
in
adc
sbb
imul
ret
iret
ljmp
stos
xor
lea
sahf
mov
xor
insl
arpl
pushf
inc
push
gs
fstpt
push
dec
std
sub
cmp
rorb
movsl
pop
jno
fldenv
push
push
add
sahf
lret
jne
shrb
test
jg
out
jecxz
lods
xchg
cmp
nop
xor
sub
cmpsb
jg
inc
dec
iret
iret
mov
pop
fwait
je
xchg
xchg
lret
rorl
mov
cli
popa
and
cmc
sub
loop
or
subl
mov
adc
movsb
movsl
dec
pop
stos
mov
jle
js
sbb
shll
or
xor
ret
jmp
int3
pop
jb
pushf
xor
add
mov
sub
jmp
ja
clc
fildll
dec
dec
data16
imul
adc
loopne
jnp
rolb
repz
loopne
sbb
int
add
sbb
xchg
and
mov
fcomp
push
adcb
push
push
jmp
ds
arpl
into
in
out
cmpsb
shll
lods
push
testl
les
cmpsl
andl
scas
mov
xchg
leave
out
insb
pop
icebp
push
cmp
push
and
rcll
subb
jo
fs
jb
loop
rcll
lahf
add
ret
pop
lahf
adc
cmpsl
out
sahf
stos
mov
sti
call
jae
clc
pop
fs
mov
cmpsb
stc
ret
roll
inc
iret
mov
add
push
xchg
xor
push
push
adc
inc
and
cmpsl
out
adc
and
jnp
cs
movsb
push
in
scas
jo
lahf
push
xchg
dec
stos
lahf
shl
inc
push
jnp
in
mov
scas
ret
cltd
int
fldcw
inc
add
cmp
adc
into
mov
bound
jns
jno
and
jo
in
cmpsb
push
test
stc
xchg
sub
filds
mov
pcmpeqb
ficompl
xor
std
imul
sbb
cs
sti
and
lahf
push
xchg
xor
adc
movsl
pop
ficoms
loop
shlb
push
push
jnp
inc
pop
mov
imul
pop
call
and
pushf
xor
cld
nop
push
adc
adc
orb
pop
mov
sbb
cmp
lods
push
xor
lret
sarl
movl
mov
pop
les
in
scas
stos
ret
out
mov
das
xor
or
sbb
mov
pop
pop
cmp
xorb
xor
adc
jbe
stc
fldt
jae
mov
fs
mov
les
scas
out
ror
outsl
xor
push
jmp
jp
and
aam
push
sbbb
loop
gs
aaa
add
pop
pop
jne
jne
std
jmp
fwait
negl
jg
pop
stos
loopne
add
or
lock
stos
sahf
lds
sub
out
bound
xor
incb
aam
cli
lret
inc
push
cwtl
mov
mov
inc
dec
icebp
out
jbe
in
aas
mov
iret
hlt
in
ret
push
sub
or
out
cmp
icebp
xorl
ret
xor
push
pop
out
popf
sub
fwait
movq
lret
les
push
repnz
loop
adc
ja
or
test
ret
sar
xor
jg
cltd
mov
sub
arpl
push
test
sbb
repnz
test
mov
add
xchg
cmp
test
mov
or
fidivrs
rol
or
test
insl
mov
cld
rorb
push
push
inc
pop
cmpsb
incl
cmpb
mov
rorl
lret
in
into
sub
stc
sbb
mov
adc
inc
mov
lds
cwtl
out
rcr
push
ljmp
sub
call
popa
push
test
stc
out
loop
jecxz
fwait
mov
loope
inc
rclb
sahf
movsb
mov
pop
push
sub
fwait
mov
rolb
sub
push
movl
push
mov
xlat
mov
pop
add
push
push
ffree
dec
popf
adc
sub
mov
xchg
pop
mov
lods
shrb
lock
pushf
xor
repnz
out
or
fisttpll
jmp
lock
sub
xor
xor
leave
cmp
xchg
or
jp
cmpb
sub
lock
push
inc
push
sbb
pop
mov
lcall
and
scas
sbb
ja
adc
xchg
lcall
outsb
xor
mov
sub
sub
imul
movsl
popa
inc
jne
into
les
add
cs
mov
jmp
lds
cmp
outsb
xor
loopne
popf
cmpb
cmp
movnti
xor
inc
cwtl
aam
push
mov
dec
stos
movsb
repnz
jge
push
int3
cmc
jnp
and
nop
out
testb
js
mov
xor
xor
sbb
flds
sub
and
xor
pop
dec
push
push
dec
cmpsl
pop
jne
lahf
popa
jl
in
mov
sbb
aam
xchg
dec
push
test
lods
movsl
std
or
bound
cmp
jmp
sub
rcrb
push
push
aaa
jmp
add
add
sbb
jne
sahf
lods
xor
lret
sarl
test
mov
fdivl
es
and
ret
mov
das
push
jae
enter
push
mov
sbb
bound
sub
cwtl
or
es
xchg
in
jge
js
sbb
insb
lcall
repz
shlb
and
fsts
push
fidivrl
add
insb
cld
xor
pop
cli
push
addb
add
push
ret
push
xchg
out
pop
fwait
sti
add
add
push
push
add
subl
sahf
nop
xchg
sbb
mov
pop
movsl
in
add
adc
push
popa
cmpsb
pop
andb
push
and
and
mov
je
pop
pusha
ss
test
adc
aad
push
push
push
lea
jecxz
sub
cmpsl
out
adc
xchg
dec
rorl
test
loop
push
pop
add
lock
inc
stos
adc
sahf
jmp
arpl
shll
mov
cmc
dec
testl
cmp
lock
cmp
xor
xchg
pop
loope
fs
aaa
test
rclb
sub
or
mov
or
movsl
fsubrl
fs
fsubl
lahf
xor
scas
ja
movsl
adcl
mov
xchg
inc
fs
mov
sahf
stos
push
lock
xor
pop
sbb
xor
mov
notl
call
out
out
mov
cmp
jno
sub
push
in
jge
inc
enter
push
and
pop
les
lcall
mov
push
cmpsl
inc
insl
leave
add
dec
movsb
call
scas
rclb
popf
ficoml
push
push
fwait
stos
mov
scas
out
popa
sub
jl
rcrw
jnp
push
push
nop
out
jnp
js
cmpsb
imul
shrl
dec
sub
jl
loop
out
test
xor
out
ja
mov
sub
repz
loopne
daa
loope
adc
xlat
adc
je
mov
repz
pop
cmp
lret
add
mov
mov
push
cmpl
pop
stos
add
ljmp
js
lds
pop
jp
push
mov
scas
inc
ja
sbb
adc
sub
ret
lcall
loop
scas
repnz
cmc
mov
lea
push
sub
jg
push
jb
dec
mov
xchg
xchg
imulb
cli
push
mov
call
cmpl
and
into
jle
cli
and
fnstsw
std
in
mov
out
push
push
jns
or
push
jp
lds
fldenv
mov
xor
add
cmp
cmp
cmp
xchg
adc
add
xor
add
aaa
clc
ja
and
and
sbb
rolb
push
and
dec
mov
cltd
sbb
adc
pop
dec
jb
lds
loope
mov
push
leave
push
add
es
fcmovb
cmpsb
xchg
pop
ja
cmp
xchg
lret
xchg
push
push
add
fs
jnp
xor
aas
dec
pop
mov
jg
xor
mov
jmp
pop
lds
pop
xor
and
xor
out
sub
inc
push
xchg
mov
imul
adc
xor
hlt
dec
ret
cs
rclb
cmp
out
adc
cmp
bound
push
cwtl
and
mov
mov
inc
imul
dec
test
pop
push
xorb
mov
iret
dec
adc
es
push
and
mov
loopne
xchg
inc
sub
fnstsw
ds
mov
or
movsl
mov
jnp
test
push
int3
lock
xchg
mov
es
pop
psllw
test
pop
mov
mov
das
or
std
loope
xchg
call
insl
add
dec
sti
call
sbb
int3
sarb
clc
movsb
push
fiadds
mov
or
aam
or
mov
sub
dec
fprem1
jae
jecxz
jb
imul
pop
callw
rcrl
sub
aaa
add
mov
xor
dec
jg
out
pop
push
jl
pushf
test
enter
pop
mov
cs
jo
negb
cmp
leave
pop
ficoms
std
mov
cltd
mov
out
pop
sbb
adc
dec
daa
add
add
push
outsl
and
mov
stc
mov
jbe
fistps
cmc
lcall
jbe
lret
sbb
out
cld
mov
jle
push
leave
mov
xor
mov
and
scas
xchg
pop
in
cmpsl
outsl
imul
nop
dec
insl
jnp
mov
out
dec
loope
cmp
in
movsb
inc
insl
push
call
and
rcrb
sub
sbb
pop
in
cltd
push
jo
mov
xchg
nop
loope
xchg
and
test
div
mov
pop
sub
add
cwtl
iret
lcall
mov
dec
push
mov
pushf
sbb
mov
mov
cmc
jecxz
pop
ss
jle
out
in
mov
mov
imul
ss
cmp
push
icebp
mov
xor
xlat
out
ffree
sub
into
xchg
in
push
push
mov
mov
xlat
sub
test
sub
adc
xchg
push
icebp
xlat
add
xor
or
iret
mov
xchg
inc
test
inc
daa
or
pop
mov
orb
jmp
test
in
dec
sbb
push
lret
adc
sub
fildl
or
sbb
adc
pop
adc
mov
inc
mov
divb
adc
cld
xchg
mov
sbb
dec
cmpsl
xor
cltd
mov
sbb
lods
cltd
movsb
dec
push
jle
xor
int3
jnp
cld
data16
mov
out
push
pop
enter
mov
inc
mov
and
cld
xchg
cmp
movsl
xchg
cs
cmpsl
fwait
mov
push
xorl
jl
jno
push
mov
pop
mov
ss
sbb
xchg
adc
inc
xchg
fstl
xchg
and
xor
inc
mov
std
jle
mov
sbb
icebp
lahf
jge
addb
pop
lock
mov
scas
sti
enter
into
and
scas
lods
jae
adc
clc
mov
inc
mov
loopne
mov
jo
jae
fists
int
ss
mov
mov
mov
jg
xchg
cmpsl
cmp
push
mov
push
xor
aam
std
nop
js
lock
add
arpl
in
push
pop
jmp
ret
hlt
dec
fistps
mov
mov
ds
xorl
push
lret
sub
or
adc
insl
daa
cltd
jb
ret
mov
pop
mov
lea
jae
loope
jno
jp
aam
pop
jb
cmc
or
mov
mov
cmp
mov
test
fwait
lods
push
dec
pop
pop
xchg
mov
in
sub
popf
cmp
ficoml
or
dec
lret
cmp
inc
ss
and
sub
call
push
pop
fstpl
imul
gs
outsb
movl
sarl
out
arpl
mov
pop
fdivrs
add
sub
mov
xor
lock
mov
stos
jbe
xor
push
bound
shll
aas
sub
cwtl
inc
das
mov
jbe
data16
sbb
cmp
pop
dec
mov
mov
mov
mov
roll
test
sbb
arpl
daa
test
je
lods
scas
sbb
es
in
inc
or
outsb
or
cmp
popa
and
fwait
fs
repnz
add
hlt
push
fs
xor
outsb
es
movsl
leave
pushf
scas
lds
cmp
jo
and
adc
pop
xchg
dec
fwait
inc
int
int3
pop
add
sub
push
and
rclb
loope
pop
and
out
mov
scas
ljmp
das
cltd
dec
fchs
cmp
xor
outsl
icebp
jnp
adc
stc
lcall
mov
sahf
aam
cmp
or
mov
add
jecxz
sbb
cmp
pop
fs
das
sti
or
mov
adc
pop
sbb
adc
loopne
clc
dec
adc
loope
xchg
addr16
test
aam
popa
in
dec
pop
mov
adc
push
push
adc
movsl
cmp
fnstsw
fnsave
mov
data16
pop
or
dec
test
in
xor
test
dec
jns
in
xchg
sbb
cld
cmp
ret
mov
push
adc
pop
fisubrs
jl
or
es
loope
fidivs
aas
dec
popf
pop
popl
in
out
push
insb
jo
add
sbb
aaa
mov
ss
and
mov
cmpsb
and
dec
mov
movsl
sub
jo
sub
frndint
sub
iret
mov
mov
cmpsb
pop
xor
inc
gs
add
mov
lock
lar
and
js
incl
push
jbe
pusha
loop
loope
imul
sbb
add
cmpsl
mov
pop
push
pop
repz
in
aaa
dec
cmp
jnp
fmull
inc
decb
cld
and
jnp
pop
js
pop
push
xchg
pop
jb
fimull
pushf
mov
inc
mov
xchg
xchg
mov
pop
add
orl
neg
jmp
les
out
push
cmp
cltd
pop
jno
push
cmp
dec
shll
and
movsb
out
adc
int
roll
in
mov
ds
cmp
inc
cmp
push
jp
adc
xor
mov
test
or
mov
jge
push
leave
jle
push
insl
xchg
xor
lcall
out
xchg
ja
fcomp
pop
and
push
shr
mov
push
sub
nop
mov
rcr
jne
mov
test
cmpsb
lret
cs
cmp
pop
sub
fs
sub
stos
jno
shl
mov
mov
xchg
push
jge
or
adc
push
stos
xchg
stc
xchg
in
cmpsl
arpl
ss
imul
dec
pop
daa
lret
daa
gs
sub
pop
push
out
mov
dec
jae
xor
daa
mov
je
xchg
mov
jg
pop
sub
dec
and
xor
pop
out
loope
mov
or
je
push
xchg
jnp
push
and
push
fimuls
fnstenv
adc
sbb
push
mov
xchg
jmp
ss
iret
add
sub
sti
sub
xchg
and
repz
aam
inc
fcomps
scas
imul
pushf
sbb
rcrl
fldl
mov
ror
cmp
inc
aaa
jb
subb
mov
jbe
outsl
inc
or
sub
sbb
jb
push
fdivl
inc
rcll
adc
push
cld
out
dec
and
jge
clc
mov
icebp
push
addl
in
pushf
sbb
mov
std
gs
repz
fwait
insl
pushf
add
lea
outsb
add
pop
in
int3
fisubl
gs
in
xchg
ljmp
jl
les
and
pop
lods
cmp
cmc
lea
nop
roll
cli
clc
in
testb
insl
test
imul
jo
pop
add
cli
or
mov
and
fmul
dec
add
xor
mov
movsl
push
jbe
sub
pop
out
xchg
sub
sbb
mov
jnp
addr16
rcrb
imul
xchg
sbb
imul
insl
dec
lods
sbb
cmpsb
push
pop
xor
jne
and
xchg
insl
push
cmc
lea
mov
lds
out
and
out
inc
ljmp
mov
fisubrl
imul
pop
add
in
and
movsb
mov
add
in
xchg
ljmp
data16
divb
inc
loope
sahf
mov
mov
xor
add
filds
das
sbb
mov
mov
add
add
test
clc
mov
xchg
and
xchg
mov
adc
jecxz
or
dec
inc
or
out
and
xor
inc
mov
push
imul
sub
ret
roll
xchg
mov
inc
jns
xchg
aas
bnd
loope
mov
cmp
clc
dec
ret
into
shl
addr16
dec
push
xlat
les
jp
scas
outsb
pusha
mov
adc
push
add
mov
int3
sbb
adc
xabort
sbb
xchg
imul
nop
mov
cmpsl
cld
repz
inc
xchg
das
xor
testb
into
add
out
dec
jecxz
push
adc
cmpsl
and
int
movsl
pop
test
push
pop
or
int
pop
mov
shll
test
lea
sbb
cmc
loope
out
dec
push
xchg
sub
shrl
sbb
loope
push
push
inc
movb
mov
mov
lds
mov
sub
shll
sarb
es
in
cmpsb
repnz
inc
mov
in
adc
subl
les
jle
test
jnp
xchg
jbe
fldenv
ja
or
pop
outsb
test
cmp
inc
push
es
cli
hlt
cli
adc
int3
icebp
aas
ret
and
sub
scas
lret
dec
cmpsb
or
cmpsl
xchg
mov
rcll
fmull
fwait
cmp
pop
xchg
fs
adc
scas
testl
jg
push
and
dec
std
cltd
dec
test
cld
mov
and
aas
pop
in
add
subl
mov
iret
pop
adc
mov
mov
mov
cwtl
push
mov
mov
sbb
cmp
sti
jl
mov
jne
mov
mov
jb
dec
pop
add
mov
pop
jbe
ja
in
cmp
mov
lcall
pop
lahf
das
xor
xchg
pop
and
mov
mov
stos
std
push
jl
ss
mov
imul
push
xchg
mov
cmp
xchg
cli
xor
pusha
push
nop
sub
cmpsb
cli
sbb
cmp
and
jae
mov
mov
enter
cmp
insl
xor
sahf
data16
aas
xchg
flds
push
push
push
out
xchg
in
mov
lcall
adc
arpl
sbb
cltd
mov
inc
push
cli
sbb
repnz
shrl
je
sbb
dec
lret
fldcw
in
lahf
cli
push
push
aaa
subl
sahf
and
or
outsl
bound
fidivrs
push
mov
imul
fcmovne
cmp
scas
inc
and
outsl
movsl
inc
cvtdq2ps
pop
idivl
sbb
sbb
adc
pop
in
cld
pop
xchg
push
push
test
push
inc
jecxz
mov
push
cltd
orb
jl
in
and
in
aad
mulb
and
mov
fistpll
or
inc
je
mov
std
xor
push
idiv
decl
out
inc
lcall
jg
test
loop
add
outsl
sub
adc
mov
lahf
jo
xchg
pop
inc
add
jno
adc
lcall
xor
cmp
pusha
sub
or
rclb
addr16
icebp
shl
fisttpl
push
xchg
daa
adc
pop
pop
cs
mov
ja
add
xlat
and
push
push
setp
stc
push
cld
sti
in
int
out
dec
pusha
inc
adc
sbb
out
push
pop
ds
push
pop
dec
add
and
jle
pop
cmpsb
mov
rorl
pusha
dec
dec
cmp
outsl
jle
push
fistpl
movsb
insl
ss
popa
adc
add
out
mov
cmpsl
inc
adc
sub
cwtl
push
repz
mov
mov
push
mov
jno
pop
iret
rclb
or
mov
push
add
and
ds
fwait
rcrb
lock
stos
imul
mov
jp
enter
lret
pop
mov
fiaddl
xchg
sub
imul
das
ja
aaa
xchg
lret
fmull
mov
mov
jle
js
inc
jg
sahf
jne
arpl
int
movsb
mov
jae
mov
or
dec
test
or
sub
mov
adc
mov
xor
popa
or
notb
dec
add
pop
xor
loope
ret
cmpb
mov
nop
popf
shll
pop
mov
into
dec
and
cmp
sub
sub
cltd
push
dec
leave
jae
jb
xchg
popa
pop
xor
mov
xchg
sbb
jb
mov
aaa
rep
pop
and
mov
push
scas
icebp
fs
daa
dec
test
mov
adc
rcrb
ljmp
imul
into
test
sahf
lret
lea
pop
out
in
pop
xchg
and
mov
and
jle
and
adc
mov
add
mov
aad
cmc
cs
xchg
fdivl
push
aas
mov
mov
pop
xor
mov
xchg
incb
sbb
stos
add
jno
mov
fldt
adc
and
loopne
lcall
mov
popf
pop
test
loop
jg
or
xorl
mov
rorb
jnp
mov
or
iret
movl
out
lcall
imul
jbe
inc
fstpt
ljmp
outsl
xchg
loope
popa
mov
movsl
mov
rcrb
jno
mov
push
cltd
dec
pusha
xor
xor
pusha
andb
lcall
int
adc
ljmp
jne
in
cld
pop
mov
adc
jne
lcall
sub
dec
mov
add
or
sbb
jl
push
call
xchg
sbb
sub
insb
shlb
dec
jecxz
in
mov
cld
addb
jbe
xor
hlt
test
pop
idivl
mov
daa
fs
pop
mov
aam
or
push
cmp
push
mov
push
push
jne
in
lds
adc
xchg
les
test
jb
cmp
jbe
clc
les
cwtl
pop
in
sbb
testb
sbb
flds
dec
mov
mov
xchg
xchg
add
pushf
cmc
inc
in
stc
sub
and
cld
scas
and
icebp
jno
mov
insb
xlat
add
lret
mov
dec
jnp
push
ret
xor
mov
int
or
pop
mov
mov
mov
push
or
cmp
les
sahf
call
mov
fwait
divl
pop
sbbb
jae
or
dec
leave
xchg
adcb
or
mov
cmpsl
cld
orl
pushf
imul
adc
rcrl
leave
outsb
push
int
cmpsb
add
loope
andb
add
arpl
stos
mov
ss
sbbl
test
jbe
cmpsb
out
outsl
and
and
add
jg
cwtl
and
imul
shll
enter
jmp
out
pop
xchg
pop
and
das
imul
loopne
jns
push
dec
sub
mov
lret
xchg
add
daa
mov
xchg
xchg
xor
lock
es
mov
adc
inc
orb
pop
xor
lock
mov
pop
add
mov
dec
repnz
mov
lahf
sahf
pop
push
stc
adc
jnp
lods
xchg
mov
scas
or
test
arpl
inc
insb
sbb
or
lret
inc
cmp
mov
outsb
dec
orb
mov
fdivrs
ss
and
andnps
pop
adc
mov
adcl
lcall
lret
dec
aam
add
jno
lret
pop
icebp
call
ror
fs
pop
push
lret
mov
dec
jb
nop
lcall
ja
push
fisubrl
sar
mov
and
popa
shll
ljmp
addr16
push
popa
enter
fsubr
mov
stos
mov
fidivl
insl
and
xlat
lds
jg
lea
fwait
lods
test
adc
push
pop
or
in
inc
stos
in
xchg
push
hlt
ss
mov
aam
sbb
fldenv
notl
arpl
push
mov
or
into
jecxz
loope
mov
push
shrl
fdivrl
dec
pop
sahf
sbb
stos
pop
mov
cmp
sub
aad
lds
inc
in
cmp
mov
xor
jp
sub
inc
or
mov
outsl
mov
push
pop
pop
ret
pop
nop
inc
and
pop
test
xchg
test
fnstsw
xchg
mov
imul
fisttpl
mov
test
insb
int
cmp
cmpsl
and
repz
mov
scas
inc
aas
inc
jmp
adc
pusha
mov
leave
shr
jbe
and
cmp
sahf
mov
jecxz
add
jo
out
lcall
into
lahf
pushl
inc
icebp
mov
cmp
js
icebp
sbb
int
and
cmp
dec
sbb
aas
outsb
shlb
mov
das
test
bound
imul
lods
cmp
mov
or
rorb
cmp
xchg
subl
cmp
lea
sub
cmp
imul
xchg
es
ljmp
or
andb
add
std
adc
sbb
cmpsl
add
rcll
ret
scas
fwait
aaa
int3
jne
jmp
adc
dec
ljmp
dec
repnz
shlb
iret
push
out
push
mov
inc
inc
inc
xchg
cmp
inc
mull
mov
movsb
cmc
cli
xchg
scas
mov
mov
adc
jb
dec
push
sub
pop
lret
dec
subl
bound
xchg
mov
xor
lahf
icebp
popf
adc
nop
cmp
jne
xor
notb
fistps
pop
adc
push
pop
add
fsubs
xchg
mov
add
adc
mov
fidivs
push
and
push
inc
push
ljmp
or
loopne
idivb
clc
int
cli
cmp
adc
andb
gs
lods
mov
movsb
sahf
mov
adc
xor
int3
and
cmp
dec
or
flds
sarl
inc
pop
leave
ljmp
mov
add
dec
and
in
dec
ret
in
dec
sbb
jae
and
lcall
test
shll
fwait
add
lret
pop
jecxz
js
add
fiaddl
sub
push
or
fldenv
dec
subb
mov
fistl
or
add
add
and
xor
aas
out
sub
xchg
add
jbe
sbb
int3
sti
insb
sub
mov
mov
push
gs
jge
aaa
das
mov
addr16
jns
cmp
push
cld
pop
movsl
mov
inc
insl
mov
daa
push
push
sub
cmc
add
hlt
jmp
cld
lahf
xlat
jg
cltd
pop
idivb
jecxz
popf
or
data16
sub
xchg
fnsave
in
dec
dec
outsl
je
mov
shll
in
and
or
movnti
outsb
and
test
in
aaa
fstpt
add
mov
adc
fidivl
dec
dec
repz
mov
lods
xor
sub
mov
pop
and
pusha
and
ret
push
add
xchg
je
outsl
lock
xor
int
jmp
mov
sub
jle
inc
pop
rcrl
stos
jnp
enter
movsbl
sub
and
sbb
cld
push
and
inc
mov
mov
mov
movsb
inc
dec
in
push
inc
fisubrs
loopne
pushf
icebp
jb
iret
iret
dec
add
xchg
fsubs
icebp
call
repz
or
sub
paddsb
pop
lods
fnstsw
mov
cmp
or
mov
incb
ja
cmp
sahf
cwtl
and
mov
push
xchg
xor
popf
xor
and
push
dec
loope
jp
push
or
dec
dec
or
inc
outsb
outsl
mov
add
js
js
sar
sbb
into
xor
adc
inc
inc
and
mov
leave
xor
lahf
push
xchg
sti
call
addr16
xchg
add
sti
jl
rorb
adc
jne
cmp
fisttpll
fwait
sbb
dec
loop
jne
std
inc
in
pop
ret
push
mov
mov
inc
fs
pop
cli
mov
pushf
je
cli
stos
xchg
adc
adc
xchg
icebp
fiadds
lea
mov
adc
lock
fcomi
insl
mov
pop
in
mov
mov
in
cli
ja
push
pop
cld
adc
ja
adc
mov
inc
jecxz
xchg
cmpb
pushf
lock
loope
mov
lods
add
mov
test
mov
mov
ja
add
jb
inc
or
cmpsl
or
repnz
sbb
ss
add
cs
dec
push
ljmp
les
dec
addb
sbb
adc
cltd
lods
fwait
xor
pop
xchg
testb
fisttpl
sub
iret
and
es
shl
ret
rorb
push
out
movsb
ljmp
inc
popf
inc
xor
jno
pushf
cmp
sub
lret
pop
mov
adc
jne
ss
aaa
test
pop
lock
push
pop
mov
repz
scas
jne
dec
mov
xor
sbb
push
mov
cmp
adc
mov
test
and
jle
or
or
fwait
jae
jne
cmpsb
jae
lock
mov
jne
les
sahf
outsl
stos
cli
sub
xor
mov
xchg
out
xlat
and
imul
cmpsl
std
pusha
xor
popf
add
xchg
aam
xchg
insl
subl
loope
inc
rorb
ror
daa
dec
lcall
cs
jb
adc
lea
adc
dec
out
and
insl
mov
and
mov
in
cmp
adc
inc
faddp
push
lret
testl
imul
insl
mov
adc
ficompl
jge
frstor
pop
xor
pusha
clc
xchg
push
or
aad
fdivl
xchg
sub
sub
ficomps
popa
cmp
adc
sbb
inc
mov
pop
test
insb
ja
push
push
bound
jge
cmpsl
lock
fisubs
dec
and
or
es
mov
jecxz
push
fcoms
pop
cmpsl
div
sub
testb
push
popa
add
cmpsb
mov
arpl
jno
pop
inc
pop
add
fildll
fwait
xor
and
popa
repz
pop
push
inc
push
test
add
jne
or
sbb
jge
out
cmpsb
loop
jno
imul
mov
loope
js
sub
hlt
push
dec
imul
lcall
test
mov
adc
fsubp
icebp
push
int
in
push
push
outsb
dec
mov
out
aaa
pop
jmp
add
enter
pop
xchg
mov
aas
dec
sbb
or
push
or
idiv
xchg
add
add
mov
jmp
pusha
adc
andb
mov
mov
pop
mov
inc
xor
out
lds
pop
push
xor
sti
outsb
mov
adc
ret
cmp
xchg
inc
sbb
rolb
sbb
cmp
mov
repz
jmp
jno
fidivl
sub
add
in
jo
jle
insb
and
addb
push
or
imul
test
sub
stos
lahf
sbb
hlt
frstor
lahf
xchg
adc
je
xchg
sub
popa
loop
test
subl
cmp
xchg
xlat
push
in
push
adc
jb
mov
clc
pop
int
fcmovne
cmp
sub
cld
mov
aas
sbb
pop
push
mov
popf
out
les
out
jmp
push
jne
test
jmp
inc
aas
dec
mov
rclb
and
xor
lret
icebp
jns
std
je
lret
fucomi
pushw
cltd
xchg
inc
stos
hlt
jbe
ret
lods
inc
test
xchg
sbb
add
mov
pushw
popf
mov
inc
roll
cmp
fadds
adcb
inc
mov
pop
sbb
jns
xor
jge
xor
mov
ucomiss
ja
clc
rol
popa
xchg
add
sti
ret
mov
mov
ss
dec
in
bound
jmp
in
mov
push
jno
xlat
cmp
lret
jp
lcall
je
or
xchg
dec
and
xorb
sbb
xchg
dec
dec
inc
in
js
mov
jae
ret
shll
in
lods
scas
mov
mov
add
add
cs
loop
pcmpeqd
imul
outsb
xchg
cmp
adc
mov
roll
adc
test
push
add
mov
out
inc
cltd
pop
inc
push
dec
dec
jns
lret
push
cmpsl
stos
jb
aam
dec
aam
dec
das
jnp
in
and
fcos
adc
or
ds
loopne
pop
mov
shl
pop
fildl
sub
mov
mov
adc
sbb
sahf
fmul
mov
popf
mov
stos
dec
sub
faddp
push
or
jae
xor
leave
push
fmull
andb
jne
repnz
xchg
mov
ret
fs
insl
pop
xlat
dec
inc
mov
sbb
imulb
cmovnp
mov
inc
call
fdivp
xchg
jae
add
ljmp
jbe
xchg
shlb
jp
add
data16
out
xor
push
or
jl
insb
push
dec
jle
inc
dec
xor
xchg
and
ds
sbb
mov
popa
inc
mov
jbe
jge
iret
inc
or
sbb
and
mov
mov
dec
xor
adc
fimuls
cmc
subb
and
jo
lfs
test
stos
xchg
inc
stos
mov
jo
jns
fmulp
leave
sub
add
jecxz
jo
or
neg
aas
dec
out
fdiv
icebp
sbb
jae
in
sub
lods
ret
inc
sbb
xlat
test
paddw
jge
or
pop
ficomps
mov
dec
mov
insb
mov
andb
lods
mov
adc
jl
aam
in
cmp
mov
icebp
hlt
iret
js
enter
mov
mov
or
out
sahf
mov
enter
jns
mov
arpl
mov
sub
adc
popa
sbb
xchg
or
mov
dec
xorb
cmp
xor
add
adc
push
test
sarb
cmc
les
jb
xlat
mov
imul
ret
mov
stc
fistpl
inc
imulb
mov
fs
mov
iret
fstp
push
cli
mov
cmp
and
cmpsl
xchg
jle
and
sbb
or
shrb
inc
fimull
fimuls
cmpsb
lods
xor
mov
adc
xchg
adc
lret
jbe
loopne
sub
fnstsw
lret
sub
les
and
xchg
leave
dec
cmp
jbe
rorl
xchg
mov
or
inc
dec
bound
mov
adc
jb
adc
push
dec
outsl
xor
jle
mov
jae
mov
xor
out
jae
xchg
inc
xchg
mov
mov
mull
xchg
jp
repnz
jns
movsb
mov
and
adc
enter
add
lea
inc
fistps
popa
test
lods
sbb
mov
xchg
insb
pop
xchg
out
fiaddl
lds
fcmovnu
push
arpl
inc
xchg
sbb
aaa
stc
sub
call
mov
pushf
lret
pop
dec
movsl
mov
mov
ror
mov
das
jmp
push
cmp
cmpsl
jle
repnz
int3
sub
add
fwait
jecxz
push
xchg
add
gs
jbe
mov
mov
mov
jne
popf
mov
mov
inc
or
pop
sbb
jp
out
ret
inc
fsubrs
stos
fxch
mov
sub
bound
add
push
ja
and
sub
xor
daa
in
jne
dec
mov
sbb
dec
add
mov
xor
sbb
loop
push
pop
dec
or
ret
inc
push
inc
fdivs
lret
sub
cwtl
cmc
int3
and
fidivs
dec
jb
adc
jno
rcl
xchg
cmc
push
and
xor
mov
insl
orb
push
mov
flds
jecxz
aam
stos
sbb
xchg
xchg
inc
cs
inc
add
xor
jb
dec
dec
jno
mov
les
dec
dec
ja
scas
stos
inc
pop
test
mov
cmp
sub
inc
ljmp
test
push
sti
xor
adc
push
xor
rcll
pushf
xchg
inc
fidivrs
call
pushf
in
sbb
lock
fwait
lret
idivb
ret
jl
insl
rcrl
rolb
dec
mov
pop
lret
pop
aad
in
or
sbb
movsb
xchg
stc
insl
and
lods
mov
adc
fldcw
mov
or
pop
add
out
mov
pop
push
daa
dec
mov
flds
fnsave
cs
adc
add
push
inc
adc
out
popa
sti
outsl
dec
lret
outsb
sub
stos
shlb
jno
fwait
jno
xlat
or
outsb
jle
xchg
stos
adc
inc
arpl
aad
push
pop
mov
in
xchg
inc
push
stos
xchg
fists
leave
popa
repnz
stos
and
dec
inc
rcl
sbb
adc
movsl
push
stc
jns
int3
mov
push
or
mov
sbb
rcrb
fsubl
mov
or
fnstsw
add
xchg
sbb
mov
sub
dec
fimull
and
vunpcklpd
les
clc
cltd
addb
test
sbb
imul
push
push
pop
cltd
pusha
cwtl
imul
lret
orb
xor
mov
sbb
subb
ficomps
jno
jge,pt
jne
mov
inc
mov
or
fldl2e
and
or
jle
and
loope
jle
pop
fcoms
loop
mov
dec
pushf
aaa
dec
daa
fwait
mov
jmp
xchg
jnp
out
push
lods
fsubrl
or
cmp
outsb
mov
mov
jne
inc
pop
mov
dec
add
cmp
roll
or
add
cmpsb
lcall
xor
or
clc
int3
push
xchg
in
dec
cmp
push
int
cld
lahf
hlt
subl
sti
and
nop
push
imul
and
dec
push
test
fcoml
outsb
mov
mov
sbbl
jle
lods
mov
pop
inc
test
cmp
in
mov
gs
aas
mov
mov
stos
jae
push
fwait
inc
or
xlat
push
inc
xchg
pop
sbb
cmp
dec
lcall
and
xor
fbstp
xchg
add
xchg
xor
adc
xor
sbb
or
mov
dec
pop
data16
mov
sbb
mov
fiaddl
stos
mov
mov
in
xlat
and
imul
push
xchg
push
pushf
or
dec
hlt
adc
xchg
addl
lds
adc
insb
daa
int
aaa
clc
movl
mov
outsl
aad
out
push
dec
and
nop
pop
push
daa
sub
aaa
fldcw
shr
sbb
lahf
and
and
fs
cmpl
sub
jg
jae
lahf
mov
cmp
lea
leave
fcmove
jg
js
add
cld
outsl
add
push
test
sbbl
divl
in
lods
xor
cmp
mov
cld
jecxz
decb
ret
cs
sti
jo
inc
jmp
fimuls
and
je
sub
sub
inc
cli
push
jae
sub
jle
and
aad
insb
out
lock
cmp
cmp
mov
dec
jne
inc
loop
int3
adc
mov
lret
jmp
mov
cs
pop
lret
push
out
iret
mov
je
mov
and
jl
mov
std
push
lcall
sbb
gs
pop
jmp
jne
loope
sbb
cmp
aad
bound
or
loop
daa
shl
adc
std
pop
enter
mov
cmp
push
sbb
int
dec
push
push
movsw
mov
or
push
cmc
pusha
lea
or
mov
orl
cwtl
mov
mov
movsl
jg
or
jne
sbb
punpcklwd
ss
scas
fcomps
jne
and
getsec
lcall
in
pop
xor
mov
daa
or
fildl
jns
sbb
mov
sbb
or
js
mov
jae
inc
ja
shlb
andb
mov
or
xchg
mov
fsubs
scas
fldenv
lret
mov
cli
mov
test
daa
je
pop
pop
enter
insb
mov
pop
data16
push
ss
xor
enter
sbb
loopne
push
xor
mov
xor
lret
rcll
shlb
xor
inc
dec
push
pop
and
mov
sub
push
push
int3
notl
push
insb
mov
sub
mov
add
mov
and
pop
lea
xchg
roll
xchg
in
pop
pop
mov
mov
or
fnstsw
pop
sub
jbe
adc
dec
cwtl
xor
das
jne
lcall
sbb
mov
xchg
stc
adc
fisubrs
frstor
push
inc
jo
out
aad
pop
mov
mov
lahf
addl
in
aam
call
icebp
pop
dec
clc
vshufps
ret
sub
and
jb
sahf
lret
add
push
call
mov
cli
mov
mov
nop
and
fdivl
into
and
mov
imul
or
mov
jne
cmp
mov
mov
test
imul
jo
pop
lds
or
movb
mov
loop
lret
mov
stos
fdivr
mov
ja
inc
mov
lcall
dec
icebp
and
lods
pop
mov
inc
mov
add
mov
inc
je
lret
scas
stos
sbb
mov
gs
inc
xchg
out
loop
push
cmp
scas
push
push
dec
rcll
data16
test
lret
sub
mov
ss
ret
push
sbb
push
add
into
adc
xchg
mov
lret
sahf
daa
and
mov
out
mov
mov
pop
lret
add
nop
or
xlat
xchg
dec
in
mov
push
inc
test
cld
pop
cmpsb
in
jmp
xchg
aaa
adc
cltd
mov
pop
or
mov
rorb
imul
fdivs
stos
xchg
addb
cmp
aas
mov
jle
mov
adc
push
in
xor
subl
adc
push
popf
fwait
jg
shlb
outsb
int
mov
nop
lcall
mov
jae
jae
mov
nop
std
inc
add
jo
inc
jne
and
loope
adc
cmp
hlt
hlt
daa
jo
cmp
outsb
mov
and
out
xchg
lock
cmp
movsl
xor
inc
ljmp
inc
dec
xchg
inc
out
xor
dec
sub
lock
sar
movsb
outsb
mov
mov
add
lret
mov
and
lea
push
lea
in
sbb
jge
ficoml
sub
and
pop
inc
cmpsl
movsl
test
jge
inc
lods
outsb
mov
jnp
xchg
mov
xor
inc
xchg
jl
decl
sar
mov
sti
loope
int3
cs
rcl
imul
idivb
jne
pop
adc
lock
jo
add
cwtl
pop
xchg
sub
sub
inc
test
in
cmpsb
scas
ljmp
dec
pushl
sbb
aam
ret
stos
test
mov
mov
pop
dec
sub
cmp
mov
scas
bound
xorl
adc
pop
outsl
adc
xchg
xlat
push
in
sbb
lea
mov
std
dec
test
test
jp
jmp
cmp
xor
movsl
xchg
loopne
enter
incl
cmp
cmc
or
int3
lret
pushf
adc
fwait
jle
fsubs
fisttpl
push
jmp
sahf
mov
popf
sbb
lock
mov
mov
dec
fs
sbb
lret
inc
outsw
in
xorl
xor
out
loopne
jno
mov
xchg
jne
jno
mov
cmp
pop
mov
mov
fldcw
fstps
daa
pop
mov
mov
add
std
iret
roll
aas
adc
imul
in
mov
out
or
adc
sbb
jle
pop
in
orl
mov
mov
fldl
inc
inc
mov
mov
or
lds
sub
sbb
enter
mov
ds
pop
push
push
dec
mov
fwait
out
jl
fbstp
cs
int3
pop
lea
decl
mov
loop
xchg
or
mov
mov
addr16
jne
mov
xchg
out
xor
or
lds
sahf
aaa
jecxz
in
lds
sbb
imul
push
xchg
insl
jb
jle
mov
fidivrs
cmpsl
bswap
in
dec
inc
dec
or
mov
inc
sbb
mov
dec
push
lret
lea
pop
cmp
outsb
jge
fstl
pop
pop
js
fnsave
ja
out
or
jno
js
jg
push
repnz
bsr
repz
inc
adc
data16
adc
or
pop
adc
adc
unpckhps
repnz
stc
xor
add
mov
xchg
jno
adc
lcall
fcompl
adc
mov
inc
inc
mov
jge
lcall
imul
mov
sub
mov
and
js
xchg
sti
pop
out
or
mov
pusha
sub
stc
mov
cmp
cmp
dec
rcrb
pop
ljmp
and
div
in
es
fnsave
fucomip
mov
add
cmp
out
outsl
test
add
fsts
loop
into
imul
sbb
jmp
idiv
mov
and
pop
bound
loopw
cmp
stc
mov
jns
ds
mov
and
aam
mov
xchg
rclb
fscale
cmp
divl
in
pop
loope
jo
add
shll
mov
jp
sub
lret
lahf
les
jno
jp
mulb
mov
cmp
sub
aam
or
dec
sti
stos
mov
xchg
loope
call
int3
mov
mov
je
xchg
notl
lcall
or
inc
dec
push
aas
dec
imul
pop
pop
or
ret
push
mov
scas
xchg
rcrb
or
mov
adc
repnz
pop
out
leave
jno
sahf
into
in
outsb
push
cltd
lea
shll
adc
mov
mov
movsb
push
dec
or
cltd
xchg
and
cltd
enter
movsb
call
adc
mov
loope
enter
push
pop
gs
lret
insb
adc
gs
mov
out
stos
out
lcall
mov
push
fs
testb
notl
xchg
push
adcl
clc
sbb
repz
pop
or
xor
test
xchg
sub
les
or
xor
sbb
pop
decl
jl
out
pop
mov
scas
inc
in
getsec
decb
push
mov
adc
mov
into
mov
push
inc
decl
inc
clc
dec
jne
adc
xor
or
gs
test
xor
popl
insb
or
negl
scas
lret
shr
inc
sbb
std
or
rol
movsb
pop
outsl
lahf
cmp
int3
aaa
pop
shr
xor
cmpsb
xchg
jnp
or
xchg
xchg
xchg
cs
inc
mov
lret
shr
test
xor
jno
xchg
imul
or
sahf
push
loop
add
mov
out
out
das
lcall
imul
outsl
in
std
cltd
mov
push
cld
add
sarb
imul
jecxz
cli
sbb
outsb
stos
fs
push
mov
out
in
repnz
push
pop
mov
pusha
leave
jns
adc
push
aas
addr16
mov
xlat
imul
loop
clc
bound
jns
mov
repnz
mov
jo
or
mov
aam
out
push
xchg
out
sbb
pop
popa
xchg
aad
jp
les
or
xchg
enter
jne
nop
push
add
loope
out
hlt
push
mov
jl
cld
pop
mov
dec
js
add
mov
repnz
sub
stos
jo
cmp
or
mov
xchg
adc
in
mov
aad
lods
add
test
pop
push
cmc
rorb
sub
aaa
xchg
pop
stc
aas
fisubrs
nop
inc
divl
into
add
lret
dec
outsb
sub
pop
xor
fdivr
jle
insl
xor
and
jg
push
pop
loope
adc
jle
iret
movsl
push
movsl
push
leave
imul
push
pop
dec
loopne
hlt
and
add
addr16
jl
adc
cs
lahf
sbb
lcall
das
xor
mov
cmp
push
scas
fs
test
push
imul
lea
xchg
aas
je
push
cmp
mov
jo
xlat
dec
cmpsb
inc
inc
js
dec
lods
in
jnp
adc
xchg
out
negb
jmp
test
hlt
loop
sub
inc
and
xor
push
lahf
into
sub
loopne
fiaddl
cmovbe
out
hlt
jns
inc
jp
and
test
scas
push
adc
mov
xor
fwait
inc
cmp
sbb
and
mov
adc
and
lock
dec
subb
pusha
mov
dec
sbbb
inc
xchg
lret
andb
inc
jg
cmp
mov
inc
fistpll
xchg
cwtl
xchg
loopne
jecxz
mov
jno
ljmp
dec
jge
mov
xor
stc
jae
push
add
cld
mov
bound
loop
push
adc
cmc
aad
mov
jne
mov
push
testl
shll
xchg
mov
pop
sbb
mov
daa
or
jns
add
mov
fadds
push
fwait
outsb
mov
adc
add
mov
inc
aad
dec
ja
pop
hlt
mov
fistl
mov
enter
push
or
addr16
cmpsl
daa
xchg
xor
cmp
jmp
in
loopw
jecxz
dec
test
xor
cmp
fimuls
inc
push
imull
adc
xorb
pop
add
bound
outsl
mov
push
stc
fstps
hlt
ds
add
dec
sbb
xchg
pop
and
xor
imul
mov
sub
cmovae
sub
xchg
jne
push
mov
test
loop
movsl
ss
and
jno
push
lahf
xor
xchg
call
pop
xchg
cmovg
dec
ds
mov
gs
push
movsb
pop
pop
mov
mov
mov
jl
mov
adc
addb
rclb
aad
mov
mov
inc
cmpsb
dec
mov
cld
lret
gs
mov
das
cmp
and
mov
mov
jb
adc
movsl
cmpsl
or
or
mov
add
adcl
pop
sub
pop
sbb
and
sub
ljmp
and
pop
or
insl
jnp
inc
insb
pop
xor
scas
mov
inc
sub
jmp
jge
lcall
mov
call
in
fidivs
sti
mov
gs
jne
dec
lea
mov
xchg
mov
stos
or
push
shrl
or
inc
push
imul
or
repz
call
pop
in
loopne
jp
xlat
pop
imul
dec
loop
std
or
int3
fsts
insb
sarl
sarl
inc
dec
repnz
rcl
cmp
cmp
jge
loop
gs
pop
mov
aas
mov
dec
mov
les
imul
xor
jecxz
jle
push
sbb
fisttps
lret
and
dec
and
xlat
js
jne
push
fldcw
orl
cltd
js
pop
movsl
inc
lods
js
or
lahf
or
les
cltd
cmp
push
fcomp
arpl
mov
movsb
rol
out
inc
test
stc
rcrl
and
js
inc
push
icebp
pop
mov
push
cmp
sbb
addr16
cmp
cmp
mov
or
cli
mov
shrb
add
scas
es
call
rol
std
push
clc
mov
cmp
outsb
call
mov
xchg
adc
inc
mov
pop
aam
test
adc
movsl
imul
push
pop
sub
xlat
sbb
lods
jbe
popa
dec
sub
fwait
add
cmpsb
ret
aaa
test
repnz
or
sbbb
dec
cltd
push
repz
out
fcoms
subb
xchg
lea
jae
lcall
mov
mov
sub
mov
dec
shl
mov
xor
fwait
popl
ficompl
xor
push
jo
int
cmp
fidivs
jmp
mov
mov
push
in
mov
xlat
jb
mov
xchg
dec
rcrl
jo
call
sbbl
fwait
pop
mov
xor
icebp
cltd
int3
jg
xchg
dec
jno
testb
add
inc
mov
mov
or
ret
push
mov
mov
jbe
mov
in
lock
pop
in
mov
and
jb
add
xchg
sbb
jp
lods
dec
ret
outsl
mov
in
push
std
inc
lret
js
fwait
push
pop
in
shll
pop
cwtl
jge
imul
ja
dec
sbb
fisttpll
mov
dec
or
inc
dec
sbb
add
int3
test
outsb
repnz
arpl
cmp
push
push
mov
scas
std
pop
ljmp
sbbl
inc
stc
xchg
movsb
xor
push
cltd
mov
ss
sub
test
push
add
jle
adc
sbb
sub
xchg
test
push
sbb
popa
dec
je
inc
mov
test
fldcw
ljmp
movsb
pop
movsb
mov
cmp
sub
lahf
and
and
out
xor
xor
adc
jp
and
or
pop
push
out
mov
cltd
xor
inc
sbb
inc
movsb
insl
lods
adc
inc
lahf
and
cmc
or
push
inc
or
data16
adc
xor
jg
mov
jle
lea
popa
add
mov
test
jb
mov
jne
pop
xor
fists
ret
lret
push
hlt
xlat
cmp
fwait
test
push
pusha
mov
fwait
push
imul
pop
fisubrl
popa
mov
pop
fmull
das
cli
push
gs
rorb
inc
shr
mov
fwait
lods
xor
loopne
xor
into
scas
insl
xchg
adc
sub
stos
cli
dec
xchg
imul
mov
faddl
dec
sub
jmp
add
fistpl
and
outsb
stos
add
mov
repz
aaa
and
outsb
sub
ficompl
mov
cmp
xchg
push
out
sbb
je
movsl
push
clc
imul
pop
clc
mov
in
rcr
cmp
enter
bound
cmp
sar
mov
lock
popf
pop
jo
or
insl
pop
xchg
test
ljmp
mov
rcll
out
or
aaa
dec
mov
das
inc
rorl
jne
loopne
xor
gs
inc
mov
pusha
push
and
idiv
dec
xor
dec
pop
sub
jge
sub
push
repnz
pop
mov
adc
or
pop
push
push
mov
aas
cmp
inc
mov
cltd
movsb
das
fnsave
fpatan
fisttpll
std
out
outsl
pop
sub
fistpl
rcrl
test
push
xor
mov
fcomps
or
mov
sahf
push
js
add
test
pop
js
xorb
mov
or
lret
jecxz
pushl
daa
add
les
fbld
dec
jge
jbe
mov
sub
pop
std
dec
lahf
fdivs
mov
data16
sahf
lods
cmp
cmpsb
push
fcmovb
scas
cmp
mov
adc
cmp
jo
sahf
mov
ljmp
jns
dec
in
aaa
fisubs
aam
inc
dec
ret
push
xchg
sub
out
push
les
icebp
jnp
repz
daa
movb
out
dec
dec
xchg
leave
dec
imul
mov
sub
push
jge
lsl
dec
mov
into
shrb
jmp
adc
pop
xchg
xlat
xlat
xor
dec
jl
xchg
mov
mov
and
or
xchg
cwtl
jnp
fdivrl
shrl
jbe,pt
xor
mov
mov
push
daa
movl
mov
jl
push
int
out
inc
jb
jp
dec
popa
xlat
add
mov
xchg
pushf
pop
sub
xchg
sbb
js
jne
xchg
pop
sti
int3
mov
fcompl
mov
nop
mov
mov
jl
imul
pop
mov
popf
icebp
inc
push
fmulp
out
jg
adc
into
xlat
xchg
mov
xchg
mov
cmp
icebp
push
rolb
mov
cs
popf
hlt
cli
sbb
add
push
test
xchg
xor
push
inc
lcall
or
fcomip
imul
lods
xorl
out
mov
mov
loop
fidivrs
and
jg
arpl
push
call
mov
lret
popa
or
mov
leave
adc
mov
jnp
popf
das
pushf
mov
sbb
or
int
push
aam
andl
mov
pop
scas
and
js
outsb
dec
xchg
push
clc
adc
dec
mov
pop
in
imul
aad
mov
and
in
or
shlb
adc
mov
jmp
movl
lods
dec
gs
sbb
ja
insl
inc
hlt
repz
rcl
add
cmp
jmp
aas
sub
int3
dec
jnp
push
rorb
iret
loop
test
fucomip
sbb
jbe
aas
testl
in
ret
inc
es
mov
or
adc
lock
sbb
and
iret
ds
adc
sbb
pop
and
jbe
cltd
dec
and
push
scas
cmpb
stc
mov
xor
lods
dec
lods
add
pop
add
mov
xor
outsl
mov
cmc
jnp
jne
xchg
shlb
repnz
arpl
mov
xor
jbe
or
out
push
mov
jmp
jmp
in
dec
imul
xchg
test
repnz
push
mov
cwtl
fwait
jl
stos
xor
mov
icebp
es
mov
push
icebp
jns
mov
fidivl
adc
push
pop
fmuls
cltd
cs
jbe
loop
or
jmp
shr
mov
gs
or
shll
test
addl
sti
nop
and
push
adc
lds
mov
mov
pop
arpl
testl
flds
pop
nop
popf
xchg
add
jne
adc
mov
inc
mov
inc
mov
ficompl
in
jnp
arpl
out
xchg
nop
pop
rorl
jl
repnz
fsubl
inc
out
stos
and
test
cmp
in
out
jns
hlt
mov
adc
mov
jp
rorb
xchg
stos
aaa
cwtl
sbb
fisttps
pop
in
mov
ss
ror
xchg
or
ds
in
push
xor
test
pop
jmp
loop
lock
out
lea
cmp
push
mov
pop
sbb
js
push
scas
sbb
sub
lock
jg
lods
inc
push
sub
aaa
sub
nop
mov
hlt
mov
push
cmp
stc
or
stos
cmpsl
gs
in
std
push
aaa
fstps
scas
je
test
mov
xchg
dec
xlat
bound
out
test
jmp
sahf
push
adc
ss
mov
les
pop
xor
xor
cmp
in
mov
push
repz
push
insl
pop
adc
cmpl
dec
es
push
xor
pop
enter
movsl
push
push
pop
lcall
dec
push
pop
and
push
inc
cltd
mov
jb
mov
fdivrl
jmp
add
ret
jae
inc
mov
je
je
test
movsl
hlt
mov
clc
mov
mov
pushaw
mov
sub
jmp
jg
jae
ljmp
outsb
inc
mov
inc
or
inc
inc
shrl
inc
cmp
imul
push
mov
inc
pop
iret
sub
adc
rorl
ret
jge
loopne
in
int
add
rcrb
add
sbb
adc
sbbl
mov
pop
jle
ficoml
and
pop
xchg
mov
jns
stos
mov
mov
mov
leave
sbbb
mov
push
mov
or
cwtl
push
cmp
mov
mov
movsl
leave
push
aaa
mov
aas
xchg
popf
mov
clc
pop
sbb
je
or
sub
iret
lcall
push
jne
out
ss
into
loop
rolb
rcll
das
insb
mov
pop
sub
icebp
pop
das
insb
xor
adc
adc
mov
outsb
push
ss
jg
icebp
and
cmp
xchg
fdivr
or
mov
sti
pop
mov
pop
cld
xor
jno
xchg
addr16
popa
shll
movsl
cmpsb
or
xor
adc
in
ss
aam
add
fcmovbe
or
stc
in
push
mov
testb
sub
lcall
adc
mov
call
jmp
insb
jmp
pop
xor
dec
xchg
jecxz
lcall
and
and
dec
add
out
mov
insl
stc
sub
subb
xor
sub
mov
in
or
daa
and
cld
inc
mov
daa
jo
ret
sub
push
xor
lret
mov
sub
mov
cwtl
lods
inc
jno
jo
pop
fistl
mov
jle
mov
pop
std
cmp
or
mov
push
sub
rcrl
mov
lret
lret
jbe
dec
aaa
mov
dec
mov
jae
daa
aam
fmull
and
in
and
jecxz
push
imul
dec
push
push
daa
mov
fucomip
out
dec
ret
or
jbe
jno
lahf
xor
and
mov
xchg
lcall
push
jp
in
push
mov
mov
sub
rcll
nop
movsbl
leave
test
sti
mov
scas
lock
pop
stos
aaa
inc
and
out
xchg
and
jo
xor
pop
inc
cmp
daa
sub
scas
inc
nop
inc
jge
mov
addr16
mov
scas
test
lahf
ret
outsb
sbb
insl
mov
cmp
ja
sbb
inc
movsb
test
les
popa
aam
leave
mov
cwtl
jl
dec
sbb
std
dec
aaa
lahf
pop
lcall
and
lods
push
mov
pop
imul
loopne
cs
mov
inc
add
dec
mov
stc
cmp
jne
mov
repnz
fsubrs
arpl
mov
jbe
push
sti
loopne
ja
outsl
int
jae
cmc
mov
sub
sbb
sarb
pusha
sbb
iret
jne
pop
stos
jb
jne
dec
movsl
add
cld
xchg
das
xchg
jae
leave
pusha
inc
add
sub
cmpsb
mov
sbb
repnz
cmp
icebp
xor
cmp
or
xor
cmp
pop
add
jge
push
cli
inc
xor
inc
or
into
imul
aas
js
in
inc
add
mov
shll
add
fdivl
cmp
ljmp
shlb
xor
ljmp
fprem1
push
sbb
xchg
or
imul
and
aaa
jcxz
bound
add
sbb
gs
clc
sub
and
add
fnsave
lds
jmp
mov
mov
jecxz
pop
adc
dec
sub
cltd
cmp
adc
sub
rcr
pop
jge
outsl
push
fs
or
jnp
xor
cmpsb
lcall
jno
leave
and
xor
jmp
jne
shr
sahf
ret
int3
sbb
mov
xor
pop
or
popf
add
xchg
add
iret
es
loopne
cmp
scas
inc
dec
sbb
ret
mov
or
xor
push
imul
les
stos
fistl
mov
mov
leave
jne
pop
ficomps
in
mov
jl
pop
sbb
insb
cmovge
xchg
pop
xor
xor
push
cmp
enter
inc
add
hlt
adc
mov
pop
and
push
fisubl
mov
push
dec
insb
in
lahf
cld
out
imul
test
mov
outsb
rclb
jp
xchg
push
pop
xchg
mov
ror
outsb
rcr
fsubrp
push
mov
or
iret
stos
sti
bnd
mov
js
mov
adc
out
leave
adc
jne
dec
jmp
in
inc
pop
jg
test
test
in
cmc
frstor
jecxz
jmp
fsubrs
aam
lcall
cmp
lods
fdivs
xor
inc
inc
or
mov
popf
and
gs
xchg
out
inc
in
xchg
ljmp
out
mov
and
or
ljmp
dec
xchg
ret
popa
insl
mov
and
or
ds
xchg
push
or
or
std
sbb
dec
pop
mov
ss
js
xchg
js
sarl
test
or
aaa
ret
cmp
xchg
mov
lds
scas
rcll
ret
sbb
push
ficoml
jae
sub
mov
sahf
shrl
jle
movsl
call
pop
in
xor
jle
mov
add
ret
fcomps
sti
xchg
mov
mov
stos
insl
or
nop
clc
or
mov
jne
shll
pop
call
enter
ret
aaa
aaa
xchg
fs
jmp
pop
stos
inc
dec
xchg
hlt
and
lea
and
imul
adc
jnp
sub
cmp
loopne
cmpsl
aaa
cltd
push
sub
adc
insb
lds
pusha
xchg
cmp
mov
cltd
cmp
push
lret
cld
jb
add
inc
int
xor
jno
xchg
mov
cmpsb
aaa
mov
lods
push
fidivrs
mov
add
in
pushf
sahf
fs
mov
test
je
jno
or
mov
cmp
lods
xchg
push
inc
mov
lds
inc
jnp
pop
in
cld
mov
push
insl
dec
popa
add
xchg
mov
sub
jne
or
in
pop
ficompl
inc
cmc
fbstp
jo
dec
xor
pop
dec
test
pop
cmp
and
aaa
xor
lock
or
jns
mov
xchg
add
scas
ret
lss
pop
fnstsw
pusha
inc
adc
xor
shlb
lret
test
ret
mov
ds
xchg
cltd
fwait
aam
mov
xchg
outsb
loop
mov
or
or
hlt
and
pop
leave
xor
add
leave
filds
cmpsl
and
jb
jbe
pop
push
xchg
out
cltd
dec
jle
sbb
js
or
mov
ds
sti
add
dec
mov
jne
ljmp
or
clc
scas
int3
sarb
xchg
dec
dec
repz
mov
arpl
jle
popa
jg
push
xchg
jmp
mov
icebp
cs
and
xor
adc
stc
mov
lcall
mov
add
inc
mov
movsb
jge
jg
in
pop
outsl
in
rol
xchg
jo
and
xchg
testl
inc
mov
mov
repnz
fstpt
cmpl
sbb
into
ljmp
pusha
ljmp
adcl
mov
cld
daa
dec
sbb
pop
sbb
dec
sub
test
xorb
ret
cmp
mov
inc
and
or
shll
jle
xchg
mov
jno
xor
xchg
mov
cli
add
jnp
ja
sbb
jae
shll
push
idivb
jge
or
icebp
and
adc
cmp
imul
repnz
inc
repz
inc
adc
cmc
cmp
test
or
lahf
sbb
mov
js
outsb
in
out
pusha
aas
insb
push
or
and
adc
dec
mov
push
lcall
xor
stc
scas
mov
clc
push
add
xchg
out
cmp
pop
and
movsb
fisttps
cmpsb
mov
xchg
mov
push
jae
fwait
push
cmp
rcrl
xchg
mov
pop
jnp
iret
ss
lret
inc
test
divb
dec
addr16
in
add
xchg
push
cs
or
test
cmp
in
pop
mov
clc
pop
adc
insb
push
mov
push
out
out
sti
xlat
in
fsts
testb
pop
out
pop
pop
adc
sub
dec
pusha
inc
or
mov
fsts
and
in
xchg
and
sub
adc
sub
pop
rcrl
into
xor
inc
pop
sti
inc
jbe
add
sbbb
fcoml
ljmp
pop
insl
sbb
leave
adc
lcall
mov
cmp
scas
out
stc
outsl
enter
movb
and
stos
cmp
inc
pop
add
fidivrs
std
dec
sahf
js
cmp
cmpsl
cmpsl
push
push
or
mov
push
add
cmpsl
aad
sbb
jae
adc
mov
das
pop
pop
in
mov
scas
test
or
add
push
sbb
xor
ss
mov
dec
popa
cmpsb
lea
pop
clc
int3
xchg
aad
rcll
push
and
mov
repz
into
inc
out
popf
and
scas
push
jb
mov
test
arpl
mov
lods
dec
xchg
mov
jbe
les
lds
lret
jecxz
test
dec
push
ror
outsb
movsb
push
mov
ds
push
mov
js
fcoms
jg
out
sub
pop
cmc
scas
jb
int3
loopne
or
or
lcall
mov
and
aaa
loope
jl
in
push
nop
lcall
jb
insb
add
jge
add
ss
bound
iret
cmp
jge
xchg
xor
mov
mov
jae
jmp
jnp
shlb
out
loop
inc
scas
flds
push
mov
fld
loope
lock
mov
adc
jno
mov
rolb
push
notb
mov
imul
sarl
loop
inc
ret
or
pushf
pop
fisttps
cmc
xor
imul
loopne
xchg
ds
insb
lret
mov
jne
cli
mov
hlt
frstor
cmpsl
push
repnz
fcomip
lret
fwait
mov
stos
test
and
gs
add
and
mov
push
add
add
out
xor
sub
out
inc
lret
fstpl
jl
xor
scas
nop
cmp
xor
dec
clc
bound
ja
and
jl
ds
push
pop
jae
aaa
dec
outsl
jg
xor
lock
ficompl
sbb
xor
shll
pop
sbb
mov
jl
mov
jp
sbb
sarl
mov
xchg
hlt
push
inc
jg
adc
lahf
sarb
push
aas
addr16
in
pop
roll
mov
fisttps
iret
push
cmp
sub
or
jg
lahf
mov
mov
xchg
ja
jg
aam
inc
mov
inc
das
imul
xor
fisttps
mov
std
inc
pop
psubd
lret
out
ds
and
jg
adcb
xchg
loop
add
xor
pop
subb
xchg
shrb
rcr
jno
mov
xor
pop
inc
ja
sbb
push
xlat
addr16
cmp
lret
push
xchg
pop
push
jl
stos
and
or
xchg
inc
dec
mov
in
jo
and
push
mov
mov
mov
push
and
jp
xchg
in
sbb
pop
xchg
and
stos
mov
sub
xorb
les
lret
and
gs
cli
mov
dec
push
iret
push
lret
mov
mov
push
and
vmovdqa
mov
into
cmpb
pop
push
xchg
push
jl
mov
repnz
addb
leave
in
mov
sbb
mov
or
movsl
dec
adc
test
dec
xchg
divl
xchg
pop
int3
jmp
mov
sub
mov
je
lods
aam
jno
ret
push
out
inc
lods
mov
cmp
movsl
in
int3
and
mov
sub
mov
hlt
scas
out
add
mov
iret
mov
cmp
push
imul
stos
pop
ret
adc
insl
cmc
das
mov
icebp
dec
and
or
mov
sub
lahf
sbb
and
sbb
jecxz
fisubrl
jge
and
xor
es
mov
daa
jle
addr16
aaa
sub
icebp
jae
xchg
loope
jnp
shll
rcrb
push
push
cmpsb
push
mov
mov
inc
push
lock
pop
mov
jnp
lahf
xor
daa
cli
jno
jae
test
push
xchg
in
in
call
add
inc
ja
loope
mov
pusha
push
sbb
test
scas
or
testb
push
js
fists
scas
push
mov
aaa
pusha
adc
rcl
lret
mov
les
out
sbb
pushf
les
js
lods
jmp
in
into
popa
movsl
std
rcr
sub
enter
cltd
lahf
cwtl
pop
int
push
sbb
push
and
je
leave
leave
dec
sub
adc
popf
mov
xchg
ja
jo
scas
jne
mov
mov
cmpsb
pop
jl
jg
and
outsb
js
pop
in
into
or
in
adc
sub
lock
adc
push
pushf
rclb
addl
add
js
fs
jae
cmpsb
mov
add
inc
fcompl
xchg
stos
mov
imul
ja
cli
addr16
jecxz
adc
int3
inc
adc
inc
rcr
jns
xchg
gs
repz
call
testb
lret
lea
mov
ds
rol
xor
mov
or
int3
push
sbb
adc
jns
pop
and
xor
cwtl
jge
repz
imul
and
xchg
gs
shr
cmpsl
sti
pop
pop
pop
rcl
rol
mov
adc
xchg
and
movsl
nop
or
js
pop
cld
test
movsb
cmp
addb
ja
jns
jne
jae
lods
test
push
cmpsb
in
and
xchg
out
js
imul
xchg
dec
xor
and
sub
iret
xor
add
xchg
gs
cmc
xor
and
pop
stc
out
sub
push
push
das
push
adc
and
cli
dec
out
pop
dec
sub
mov
add
jno
insl
and
shll
jnp
outsb
cmpsl
ss
sbb
pop
ljmp
call
in
ficompl
out
xchg
add
mov
mov
jnp
jb
add
inc
hlt
jno
add
js
xchg
push
outsb
loopne
adc
jecxz
mov
jmp
pop
push
imul
pop
xor
in
hlt
inc
js
adc
jmp
sti
icebp
negb
pop
sbb
lds
repz
nop
roll
arpl
pop
mov
mov
es
mov
aaa
outsl
or
loop
ss
cmpsl
fsts
jnp
shrl
out
mov
aam
fisubl
sbb
dec
cmc
jmp
movsl
or
cltd
sbbb
add
push
dec
jno,pt
icebp
je
or
rcrl
enter
mov
arpl
icebp
rcrb
imul
in
mov
scas
mov
test
out
mov
cmpsl
bound
jecxz
mov
mov
data16
sbb
lock
sub
jle
das
cmp
lods
mov
out
pop
int
add
leave
outsb
cld
mov
jae
insl
jo
xchg
fldcw
jbe
inc
mov
pusha
lods
push
mov
adc
and
leave
scas
jecxz
das
sub
xor
mov
pop
imul
add
push
and
mov
enter
movsb
xor
adc
cltd
fwait
icebp
jl
jbe
inc
xor
hlt
and
push
inc
jmp
out
xchg
mov
adc
xlat
clc
mov
mov
outsb
xchg
bnd
add
push
cmp
cmpsl
mov
adc
push
imul
lds
or
icebp
xchg
fmuls
sub
pop
imul
gs
jae
lret
lahf
jns
movsb
cmp
or
mov
in
fistpll
in
cld
mov
iret
mov
je
push
mov
cltd
data16
ret
lock
adc
cli
clc
ja
pushf
lods
ds
mov
loop
mov
inc
out
ds
jmp
xchg
xor
inc
out
or
mov
movsl
sbb
dec
test
jb
xchg
std
pop
sub
pushf
and
popf
xorl
in
fcmovnb
popf
or
mov
add
fidivs
adc
les
call
add
xor
jns
xor
and
pop
iret
repz
sbb
dec
in
xor
or
and
mov
jmp
in
iret
xchg
xor
rcll
lock
orl
jns
cmp
loop
push
leave
mov
insl
sbb
sarb
das
inc
loopne
xor
mov
scas
popf
xchg
lret
add
adc
xor
dec
dec
nop
cwtl
cmp
dec
add
test
cmp
test
fs
ss
mov
dec
lret
addr16
lods
sarl
add
xor
mov
fwait
movsb
jecxz
cmpsb
mov
cmpb
push
jle
leave
bound
mov
fdiv
or
and
aam
inc
sub
xchg
sbb
bound
adc
xor
or
adcl
mov
inc
and
inc
or
xchg
dec
idiv
in
lret
adc
fcomi
movsb
push
xor
negl
push
jne
dec
cmc
adc
or
scas
mov
das
sbb
pop
push
arpl
aam
jle
lock
pop
clc
aas
and
shlb
scas
push
addr16
in
jne
ja
push
xlat
ret
lcall
div
xchg
movsb
mov
orb
mov
inc
rorl
xor
popa
push
push
mov
es
push
push
out
sub
lret
jae
sbb
sub
stos
push
cmp
mov
add
imul
jp
inc
movsb
movsb
sti
mov
add
hlt
lds
jmp
inc
cmp
dec
mov
jno
add
add
lcall
cld
dec
ret
test
mov
jns
pop
shlb
pop
mov
push
dec
mov
in
mov
dec
imul
setnp
cs
rorl
lea
sbb
int
lret
rcr
jae
cs
dec
popf
xor
sub
sub
movsl
test
jne
cld
sbb
int3
bound
jno
das
xchg
lock
movsl
lea
add
lahf
pop
fadds
test
movsb
xchg
stos
push
sbb
jne
push
pop
cmp
cmpsl
shrb
mov
cmp
ds
jmp
add
mov
xorb
sub
ja
int
outsb
add
popa
cmpsb
iret
push
sarb
xchg
sub
arpl
pop
mov
mov
out
xchg
mov
cmpsb
data16
cmc
clc
scas
bound
rolb
xchg
xrstors
push
and
cmp
fwait
sbb
add
fisubrl
mov
jmp
es
jb
pop
cmpsb
dec
nop
add
or
imul
leave
roll
cmp
in
dec
subl
xor
je
add
fdivr
and
xchg
int
xor
pusha
movsl
outsl
push
pop
out
sbb
or
fs
insl
les
orl
cmpsb
jb
inc
sub
and
jno
inc
arpl
iret
sbb
fcompl
push
addb
push
test
mov
mov
sbb
frstor
xor
lcall
inc
std
std
scas
adc
addb
fdivrp
sarl
mov
xchg
jg
out
pushf
cmp
lds
adc
fbstp
add
lea
fsubrs
outsb
adc
andl
mov
mov
xor
rolb
inc
stos
idiv
ret
adc
xor
ljmp
push
out
jmp
arpl
inc
insb
in
push
jg
push
out
cli
fldcw
ret
inc
cmp
out
lods
into
cmpsl
rolb
lahf
adc
bound
push
testl
jne
enter
add
sbb
mov
jo
sub
call
popa
sbb
es
ljmp
inc
outsl
scas
outsl
bound
lds
test
je
fidivrs
xchg
jge
dec
movsl
pusha
into
push
jae
test
push
ficoml
imul
iret
adc
and
mov
jg
and
cltd
in
sub
rorl
jmp
sub
xor
mov
pop
ret
or
mov
lret
jmp
es
add
push
aaa
jne
mov
adc
mov
pop
xchg
enter
mov
sub
push
hlt
outsl
sbb
out
aad
sahf
ret
inc
popf
daa
fst
sub
add
xchg
into
cmp
aaa
mov
in
scas
inc
push
jecxz
cmc
ret
es
fwait
inc
mov
dec
jl
leave
xor
dec
push
sub
add
jo
pop
rol
adc
sub
or
cmp
test
aaa
adc
cmpsb
lea
test
dec
ret
mov
bound
cmpsb
lret
cmpsb
push
jl
pop
push
loop
xor
mov
pop
repz
adc
pop
add
lods
adc
push
call
negb
inc
lea
cmp
push
outsb
push
pop
inc
mov
jmp
stos
jg
aas
jo
sbb
pushf
jae
and
jns
or
mov
lret
pop
adc
movsl
mov
pop
fcmovu
into
cmpb
dec
mov
xchg
call
sbb
mov
ljmp
sub
cld
mov
xor
jne
test
rcll
stos
xchg
lods
mov
je
inc
xchg
pushf
jmp
and
sub
add
push
mov
push
push
pop
fisttpl
aaa
lods
jns
pop
cmp
cli
jmp
push
cmp
inc
xlat
xor
or
sbb
mov
iret
mov
decb
and
cmp
push
imul
inc
adc
mov
cli
jns
mov
loop
in
cli
cmc
sub
cwtl
sbbb
mov
repz
pop
fwait
ss
jo
add
clc
ss
jne
mov
popf
xor
sub
push
sub
xor
addr16
das
dec
pop
clc
imul
inc
sti
lea
jmp
sub
shll
adc
mov
xchg
pop
fcoms
pop
std
shlb
mov
fidivs
mov
js
cwtl
fsubp
mov
push
es
shll
mov
loopne
fwait
lea
push
push
push
test
out
mov
mov
frstor
mov
test
js
pop
pop
pop
fcoms
stos
fs
and
outsl
aas
mov
loopne
lock
mov
out
inc
and
push
shlb
jle
adc
aam
and
aam
lea
in
and
pusha
push
sub
jne
cmc
ljmp
inc
fsubrl
jp
inc
jno
mov
mov
hlt
and
mov
imul
mov
pusha
int3
dec
and
xchg
outsl
arpl
add
in
mov
clc
insl
or
push
push
mov
or
popa
aam
aad
fsts
xor
dec
xorl
ret
pop
cwtl
jl
xchg
fwait
sbb
cmp
daa
sti
xchg
cs
push
and
popa
insl
stos
and
mov
add
push
mov
popa
push
mov
movsl
lret
outsl
ret
jp
mov
and
adc
leave
lock
addr16
lods
sbb
jo
mov
lods
pop
xchg
sbb
jmp
pop
mov
sub
or
imul
xchg
inc
adc
lahf
and
ja
in
stos
jb
mov
lods
imul
shrb
lahf
jle
pushf
movsb
or
int3
or
test
cwtl
daa
or
aad
bound
xchg
lods
fcomip
cmp
xchg
fcoms
or
adc
into
mov
shlb
mov
movb
les
cmp
clc
loop
or
stc
sub
cmpsb
out
push
daa
jb
jge
mov
or
in
mov
mov
insl
mov
jle
fistl
mov
bound
push
andl
loopne
xchg
cmp
jmp
and
in
sbb
push
scas
adc
call
dec
mov
nop
pop
dec
xorl
jp
push
leave
pop
mov
xlat
clc
mov
xchg
push
nop
shr
outsb
xor
fcoms
fstl
scas
rclb
mov
pop
daa
ljmp
enter
fs
repnz
pop
mov
xchg
mov
out
xchg
test
pop
movsb
xor
icebp
cltd
call
push
movsb
aaa
scas
daa
pop
loopne
ror
notl
addr16
sub
cmp
adc
imul
nop
pop
push
mov
stc
jb
inc
pop
xchg
int
push
or
jae
mov
xchg
xchg
out
in
notl
loopne
test
ljmp
mov
mov
lods
push
xor
test
mov
enter
in
dec
inc
dec
pop
or
push
cmp
outsl
shrb
je
and
icebp
and
and
push
or
sti
adc
pushf
fadds
popf
ret
jge
dec
push
roll
punpckldq
cmpb
lea
jge
sbb
pop
fsubrs
inc
out
pop
pop
mov
add
shlb
jae
fwait
adc
das
pandn
or
repz
roll
hlt
lods
mov
xchg
ja
jmp
add
sub
dec
inc
adc
ljmp
incl
lcall
cmpsb
lods
lock
push
pop
add
inc
sar
dec
call
adc
rclb
sbb
push
movsl
fsubs
in
test
sahf
imul
andl
and
filds
mov
dec
dec
xor
pop
roll
xchg
dec
push
cwtl
push
aaa
xlat
insb
cmpsb
and
popa
cli
adc
jg
pop
xor
cmpsl
incb
cmp
push
mov
in
pop
sti
xchg
mov
mov
fstpt
sub
fcomip
xor
pop
out
push
out
imul
ret
out
mov
pop
fdivrp
xchg
adc
pop
dec
repz
xchg
cmpsl
mov
jne
loopne
inc
adc
out
jmp
loop
mov
popf
pop
mov
and
cmp
out
popf
sbb
mov
lea
fwait
jl
outsl
test
pop
and
jle
std
mov
cmp
adc
jmp
or
call
insl
xor
inc
ljmp
shrl
mov
int
aam
xor
fmull
rcr
cmp
push
add
gs
fdivrs
xchg
lret
mov
push
xor
xchg
pop
jl
cmp
sbb
mov
sarl
cmp
dec
outsb
jb
fwait
sub
sub
daa
mov
push
jno
stc
out
divl
push
push
es
in
pop
mov
add
xor
lock
jb
sub
ja
loop,pt
mov
bswap
push
or
fdivl
add
mov
mov
in
mov
or
push
ret
movb
cmp
das
ficomps
popf
gs
ret
ljmp
and
fsubs
in
push
lods
loope
mov
orl
adc
xor
out
rcrb
mov
mov
dec
cmp
adc
lods
jl
mov
and
push
cmpsb
sbbb
xchg
or
lret
dec
addb
push
pop
fldcw
stc
orb
lods
andl
jge
pop
jo
inc
inc
pop
test
push
ja
addr16
js
jo
into
lock
outsb
mov
push
arpl
jecxz
rorb
and
call
mov
out
add
das
pop
xchg
aaa
push
mov
and
repz
aad
adc
mov
and
loopne
es
iret
sbb
mov
sarb
inc
andb
xchg
in
or
cld
add
ficoml
xchg
dec
mov
xchg
imul
addr16
lcall
sbb
push
cmpsb
mov
add
or
xor
mov
sub
dec
js
outsb
jmp
data16
rcl
rorb
or
clc
jp
loope
adc
sub
pop
ret
mov
jns
lea
imul
push
mov
xchg
or
mov
mov
cmc
ljmp
icebp
jp
jae
add
daa
fcoml
xchg
xchg
addr16
sahf
sahf
int
add
data16
hlt
add
fdivrs
and
decl
add
inc
pop
pusha
popa
sub
cmp
iret
mov
ret
mov
or
scas
je
dec
jl
or
push
mov
add
rcrb
and
out
data16
aad
fwait
mov
mov
jmp
xorl
xor
cmpsl
xor
push
mov
mov
loopne
and
or
and
pop
jecxz
xor
push
dec
mov
mov
mov
jecxz
inc
xor
add
mov
xchg
mov
addb
aas
push
in
mov
sbb
movsb
sahf
mov
xor
inc
lret
movsb
xor
repz
inc
fcmovu
add
xchg
mov
in
das
mov
cmp
jmp
daa
jmp
jmp
mov
jp
aam
in
inc
mov
mov
lock
icebp
jmp
adcl
xor
or
lock
outsl
dec
or
repnz
or
dec
sti
dec
pop
inc
std
and
xor
ficomps
test
xchg
and
xchg
lahf
arpl
or
fdivrl
ret
imul
loopne
and
int3
push
enter
lods
mov
fdivrs
inc
insl
and
mov
lea
jbe
adc
addr16
cmp
popf
push
dec
fbstp
add
das
push
inc
mov
aam
jne
sub
cmp
outsl
mov
push
lods
fistl
cld
sub
inc
dec
mov
lock
or
cmpsl
movsb
mov
or
nop
jo
and
fdiv
cmp
lret
pop
pop
loope
ret
xor
sbb
cli
add
mov
mov
lods
sub
push
lock
mov
adc
fldt
in
jmp
imul
add
push
sti
xor
bound
or
jmp
arpl
dec
mov
cli
pop
mov
jecxz
fildll
mov
cmp
ret
int
push
mov
lea
scas
outsb
insb
ljmp
cmp
xor
sub
xchg
mov
pop
add
inc
stos
and
jns
arpl
xor
xchg
cmpsl
aas
lcall
cmpsl
mov
loope
pop
imul
test
cli
cmp
lds
jmp
ljmp
mul
xchg
and
xor
push
mov
mov
in
xor
in
gs
cli
push
aam
mov
mov
cltd
xchg
fldcw
xchg
popf
fisubrl
cmp
std
pop
or
add
push
popf
dec
imul
fdivrp
xchg
and
jb
lock
push
setl
out
jmp
lret
mov
pop
dec
cmp
mov
dec
inc
outsb
push
xchg
xchg
insl
fistps
inc
inc
ds
test
mov
dec
and
ja
out
xchg
mov
mov
xchg
sub
addr16
daa
dec
out
xchg
pop
out
adc
add
adc
sub
add
add
add
add
add
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
push
push
nop
push
nop
push
nop
add
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
or
add
add
push
add
add
add
add
add
call
add
add
add
addb
add
sub
add
cwtl
add
orb
add
add
enter
adc
add
push
add
add
add
add
add
addb
addb
add
or
add
out
add
add
adc
add
add
orb
add
add
add
sub
add
push
add
addb
add
or
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
in
std
add
call
add
add
add
add
add
aam
add
add
add
add
add
add
add
add
add
addb
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
dec
add
cmp
add
jo
add
cwtl
add
xor
add
rolb
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
es
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
ljmp
addb
add
or
add
add
add
add
add
add
add
add
add
add
jo
add
add
add
or
add
add
xchg
dec
add
add
add
add
add
add
push
add
add
add
pop
add
add
add
addb
add
lock
cmp
add
sbb
cmp
add
inc
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
push
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
cmp
add
add
add
sub
add
push
add
add
js
add
mov
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
mov
add
add
add
add
add
add
push
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
sbb
add
inc
push
add
add
add
or
add
push
add
in
cmpsb
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
sbb
adc
add
add
add
addb
addb
add
or
add
cmpsl
add
add
add
add
add
add
push
add
add
add
or
add
push
add
rclb
add
add
lock
add
add
add
adc
add
add
sub
add
adc
sub
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
loopne
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
bound
and
dec
add
je
ja
outsl
add
imul
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
add
outsl
add
add
outsl
add
add
jb
add
outsb
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jbe
popa
add
jns
and
inc
add
jp
add
add
popa
add
imul
add
inc
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
je
je
jns
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
add
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
jb
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
stos
add
add
stos
add
add
stos
add
add
stos
add
add
stos
add
add
stos
add
add
stos
add
add
stos
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
jb
fs
insb
add
ja
outsl
arpl
fs
insb
add
je
jo
xor
cs
insb
add
insb
insl
outsl
outsb
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
ja
je
je
jae
gs
inc
add
add
gs
gs
jae
jb
add
inc
gs
gs
imul
dec
gs
gs
dec
insl
jo
jb
inc
imul
add
je
insb
popa
jae
push
push
dec
add
add
je
outsl
arpl
