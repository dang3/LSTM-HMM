incl
sahf
subl
mov
clc
sbb
jmp
out
dec
xor
and
jnp
loope
inc
adc
cmp
arpl
in
push
jle
mov
xor
add
pop
addb
push
cmp
ja
push
popa
mov
push
adc
imulb
push
icebp
inc
int
sbb
fnstenv
lcall
jecxz
mov
add
fistps
out
ds
inc
stos
rcll
push
je
aad
mov
lcall
and
jno
jg
lahf
push
sub
cmp
dec
scas
mov
cmp
clc
icebp
cmpsl
stos
lods
jge
aaa
fwait
cmovbe
out
cltd
iret
mov
xchg
dec
jg
stc
sub
out
lock
shrl
pop
insl
jo
mov
dec
addl
adc
mov
mov
cmove
scas
aam
lcall
imul
lret
add
loopne
push
add
add
fisttps
sbb
jns
add
jo
and
ja
out
xchg
xchg
xchg
es
incl
cmp
jp
mov
and
jge
adc
in
lock
scas
xor
inc
fucomi
mov
jl
or
xor
add
shl
cmp
xchg
iret
mov
stc
lcall
clc
add
loopne
push
inc
inc
add
mov
mov
call
jmp
stos
lock
out
mov
pusha
mov
xor
push
push
out
out
out
test
std
sbb
add
shlb
fldt
ret
mov
fsubs
test
add
andl
xor
adc
adc
in
pop
lods
inc
ret
int3
dec
repz
dec
and
mov
add
inc
mov
ds
cli
inc
mov
mov
mov
pop
dec
mov
pusha
mov
dec
xor
call
mov
aaa
out
mov
incl
mov
add
pop
fbstp
das
pmaxsw
push
cmp
jne
lahf
xchg
filds
adc
lock
sbb
inc
call
std
fcomip
add
mov
add
mov
sub
js
push
daa
cmp
or
jne
fbstp
xor
pop
lahf
out
movsl
jae
jg
jge
sbb
xor
lods
idiv
incl
cmpsb
mov
les
stos
cmp
cmp
xor
repz
mov
call
jp
sarb
movsb
jne
sub
je
mov
lea
or
test
xchg
call
subl
inc
xor
lea
inc
push
dec
mov
stc
dec
sub
insb
imul
jno
cmpsl
mov
shl
jo
mov
mov
cmp
les
dec
je
or
push
xchg
lock
aas
or
imul
jnp
jnp
int3
stos
mov
mov
decl
jle
data16
sbb
mov
mov
int3
xchg
negl
sub
pop
push
rcrb
jnp
sbb
jbe
fcoms
cltd
adc
pop
add
popl
pushl
bound
dec
rclb
xchg
gs
mov
adc
mov
dec
nop
pop
lock
or
aaa
cld
incl
aam
pushf
xchg
dec
cmpsb
stos
push
mov
popf
jp
arpl
mov
decl
push
sbb
xor
jns
add
pop
cmp
jnp
or
fcomps
pmaxsw
mov
cmp
clc
lock
push
cmpsl
pop
out
and
adc
ljmp
je
inc
out
push
jl
fs
mov
cld
movsb
xor
stos
mov
je
mov
inc
test
jmp
add
nop
inc
add
add
subl
inc
add
lcall
stos
fisubrl
jecxz
xor
mov
xchg
idiv
jmp
jbe
xor
cmp
cs
addr16
dec
sbb
add
ja
jecxz
xor
call
inc
inc
jmp
and
gs
xor
pop
xchg
fildll
push
mov
inc
pop
xor
mov
mov
int3
push
data16
xor
je
mov
not
cmp
sub
mov
popa
mov
lods
out
mov
fisttps
daa
inc
imul
into
dec
fnstenv
and
pop
jbe
loop
loopne
add
jno
mov
dec
cmp
push
cmp
adc
xchg
and
fstpl
outsl
test
mov
push
dec
add
ja
ds
mov
loopne
jle
pop
testb
jg
pop
mov
xlat
cwtl
rcrb
push
lret
test
js
into
mov
add
sahf
lret
lcall
adc
lret
sti
ret
inc
push
cmpsb
jg
iret
sbbb
mov
daa
jbe
mov
addr16
jp
push
pop
cltd
push
dec
lcall
push
int
roll
inc
out
sarb
xchg
sbb
xor
xchg
ljmp
int
pop
cli
inc
mov
xchg
imul
mov
xchg
js
xor
mov
mov
inc
dec
or
dec
test
cwtl
pop
adc
pop
push
jg
outsl
aaa
or
insw
or
cmp
test
repnz
xchg
arpl
push
dec
mov
arpl
inc
leave
mov
clc
jl
out
incl
mov
inc
adc
dec
jp
lds
pop
dec
inc
inc
or
decl
dec
mov
rolb
mov
pop
sbb
sub
push
jg
call
xlat
jp
mov
stc
fcoms
mov
mov
push
sar
popa
les
mov
rclb
scas
test
jmp
or
push
divb
pop
shrb
call
scas
add
fstps
std
cs
fistpl
clc
movsl
outsl
pop
mov
mov
outsb
or
aam
mov
decl
fdivs
push
sbb
lea
sub
int
mov
cwtl
ret
popa
jmp
xlat
push
ljmp
inc
sub
inc
pop
call
cmpb
sti
xor
jb
or
cs
xchg
sub
mov
and
movsl
test
ja
xorl
incl
mov
incl
jle
rolb
pop
loop
mov
xor
stos
cmpsb
cwtl
sub
jg
stos
push
inc
xlat
out
jb
insb
ds
arpl
cmc
or
push
outsb
push
cmp
jb
sti
pop
mov
sahf
adc
and
pop
stc
add
jbe
cmpsl
ljmp
and
out
stos
push
scas
popa
dec
mov
addr16
mov
xchg
xchg
adc
out
inc
adc
push
xchg
mov
call
stos
cmp
mov
ret
in
and
ds
and
call
xor
mov
lds
and
push
inc
lret
xchg
mov
sahf
dec
and
iret
ds
mov
iret
and
fnstsw
fildll
cmp
mov
ret
mov
and
and
aas
sub
pop
cld
in
jp
divb
rol
rolb
mov
push
cs
out
fisttps
mov
andl
push
mov
into
ds
ss
dec
mov
xor
mov
incb
stos
into
test
and
fnsave
fcomip
fldcw
cmc
sbb
cmp
mov
cs
mov
pop
repz
mull
sbb
nop
xchg
stos
std
outsl
mov
jge
js
cmp
movb
cmpl
xrelease
xor
and
dec
pushl
iret
and
push
xchg
incb
cld
addl
xchg
push
push
sahf
push
add
pop
insb
clc
rclb
outsb
lea
xor
xchg
mov
and
mov
and
stc
xor
push
mov
shrb
hlt
adc
sub
push
push
repnz
cmc
mov
push
test
mov
jle
mov
test
shll
mov
xor
adc
and
sub
mov
test
pushf
xchg
test
dec
je
aad
pop
mov
fdivs
test
pop
lock
add
push
shrb
push
cs
aam
push
mov
mov
sbb
inc
push
fisubrs
jg
push
lret
mov
mov
mov
out
xchg
mov
enter
cmp
roll
fisubrl
popa
ret
add
sahf
out
aad
pop
inc
inc
movb
outsb
or
push
les
xchg
jmp
das
movsl
push
inc
push
stc
out
mov
es
and
insl
sti
out
cmp
dec
sub
push
fcom
mov
inc
mov
jle
scas
jge
cmp
sub
es
push
sbb
mov
jo
not
push
jecxz
push
into
xlat
push
and
ds
stos
jae
jg
push
movsl
and
popa
pusha
test
pop
aad
push
fwait
push
pop
cltd
aad
mov
jg
push
xchg
es
ret
pop
adc
stos
aad
aam
push
lahf
ficoms
aaa
mov
adc
loopne
inc
fisubrl
mov
jle
cmp
add
test
sub
jmp
fsubrl
jmp
movsl
das
mov
adc
cli
jbe
fstpt
cs
fldl
jnp,pt
pop
or
push
decl
and
or
movsl
aad
shrl
xchg
jns
insb
push
ljmp
stc
push
fistpll
mov
ds
adc
filds
pushf
movsl
fistpll
rorl
scas
jae
xchg
aaa
push
jbe
xlat
sahf
cmp
mov
cmc
fnstsw
shrl
sbb
cld
fstpl
fnstsw
fldenv
sub
decl
jmp
cmp
mov
pop
pop
xor
popa
mov
mov
call
pop
jmp
pop
rcrb
rcrl
bound
mov
ds
dec
fcomip
testb
popl
cmpsb
inc
push
sbb
lcall
pop
int3
push
push
ds
push
and
xchg
dec
lcall
out
movl
loopne
dec
in
dec
push
xlat
ljmp
and
dec
pop
ljmp
out
insl
lcall
push
pop
loop
lret
dec
xchg
es
daa
retw
sahf
fbstp
dec
decl
mov
cmp
stos
mov
enter
fldl
stos
movsl
mov
mov
stos
cmpsl
mov
push
arpl
sub
and
sbb
aam
push
ljmp
call
test
sub
push
and
pop
fdivrp
outsl
mov
es
ficomps
aaa
mov
and
call
mov
sub
push
adc
sahf
nop
outsb
push
lahf
nop
push
lock
xchg
push
ds
incl
rcrb
sbb
pop
lahf
mov
fldl
xchg
add
into
adc
sar
test
fisubrl
fimuls
lock
mov
push
push
push
or
das
test
cmp
pop
stc
push
jg
jo
test
jge
fcoms
nop
adc
push
push
insl
inc
jmp
push
into
test
ljmp
cli
add
andl
test
add
ljmp
push
sahf
sub
andl
add
pop
shll
mov
test
cld
add
movsb
jle
or
sub
cmovle
filds
adc
fidivl
out
test
adc
jmp
cld
jg
xchg
pop
aam
hlt
or
adc
ljmp
pushl
test
movsb
pusha
ret
push
jae
out
jg
xchg
add
fstpl
daa
push
insl
cmp
negl
ljmp
insl
int3
pop
call
inc
sti
xchg
fnstcw
fisttpl
adc
shr
out
out
nop
dec
clc
push
mov
jmp
gs
push
mov
dec
sub
insb
popa
outsb
popa
jo
mov
inc
gs
jb
imul
je
insl
push
jae
idiv
pushl
popa
je
add
inc
dec
jbe
insl
xor
pop
inc
pop
inc
jb
addr16
jae
fbld
inc
dec
jae
jns
inc
imul
jns
bound
inc
push
fs
je
aaa
push
jo
pop
arpl
mov
push
ja
insl
outsl
inc
inc
push
outsb
fs
jo
push
push
dec
dec
push
push
xor
mov
outsl
jmp
xor
aaa
dec
inc
push
mov
push
pop
xor
dec
inc
jp
aaa
mov
dec
outsb
outsl
cmp
jbe
outsb
gs
dec
xor
dec
xchg
decl
ljmp
insl
jne
inc
push
insl
dec
fs
cmp
repnz
js
aaa
jo
dec
aaa
pop
decl
gs
push
inc
arpl
js
inc
jo
ja
push
inc
insb
dec
inc
dec
pop
jns
jmp
pop
dec
xor
popa
push
inc
jae
arpl
jo
pop
cmp
dec
js
push
pop
push
dec
inc
js
sarl
dec
xor
push
push
outsb
es
dec
jg
call
dec
push
inc
ss
dec
dec
dec
push
push
addr16
fs
pop
xor
aaa
dec
jae
ljmp
cld
jp
dec
insl
push
dec
xor
ds
inc
dec
imul
cmp
inc
imul
xor
popa
lock
xor
arpl
dec
inc
ja
push
xor
popa
jnp
jp
dec
into
jns
push
xor
mov
jg
xor
inc
aaa
inc
push
dec
addr16
movsb
pop
jo
inc
jne
or
push
dec
imul
xor
push
pop
adc
jo
ja
data16
jne
push
insb
or
push
adc
aaa
jbe
inc
inc
jb
stos
dec
sbb
addl
orb
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
call
add
push
add
sbb
fwait
lcall
add
inc
stos
add
add
inc
pushf
dec
lcall
dec
orl
clc
dec
lret
add
or
dec
add
jg
repz
addl
dec
dec
addb
lret
add
sbb
outsl
outsl
incb
push
addb
sbb
mov
rorl
jg
push
xchg
push
pop
or
xorb
ds
xor
ds
orl
std
les
mov
fs
sub
mov
add
sarl
cmp
incl
nop
rorb
test
inc
inc
mov
das
es
inc
add
in
fwait
ret
into
or
or
mov
inc
inc
adc
xchg
mov
mov
hlt
adc
add
push
push
fiaddl
repnz
mov
sub
cmp
imul
sbb
lcall
push
cs
and
xor
insl
mov
xchg
add
insb
xor
je
pusha
or
test
add
mov
add
inc
stos
inc
jecxz
out
xchg
ss
xchg
lods
jb
rolb
mov
dec
into
mov
fwait
divb
fs
mov
xlat
fiadds
pop
add
or
test
cli
les
std
xor
sbb
dec
test
cmp
cmp
jp,pn
sbb
sbb
int
pusha
jbe
out
mov
stos
mov
ret
je
cmp
outsl
pop
repz
fadds
adc
mov
xlat
cld
divb
pusha
add
inc
pusha
ds
js
jb
sbb
scas
loop
lock
pusha
jnp
mov
add
cwtl
ljmp
xor
sbb
mov
loope
or
pop
mov
int
dec
pcmpeqb
pop
inc
mov
mul
movsl
loopne
push
xchg
stos
pop
fcomps
sahf
cmpsb
imul
test
stos
push
cld
push
loop
enter
adc
and
je
jbe
xor
cmpl
pop
loopne
stos
and
adc
imul
orb
push
test
shll
ret
sbb
push
inc
mov
shll
pusha
add
lock
adc
pusha
and
loope
shlb
inc
outsb
mov
dec
lret
add
mov
jo
stos
cmp
pop
cmpsl
flds
shrb
js
xchg
imul
mov
pop
scas
sbb
in
aas
mov
fbstp
or
in
push
jle
fistpl
in
add
pop
push
mov
loopne
mov
push
sarl
rcrb
es
idivb
int
sbb
divl
xor
or
out
adc
xor
insl
mov
bound
push
push
jle
imul
sbb
cmp
into
ror
lock
mov
push
xchg
dec
push
ss
stos
in
stc
shll
cli
mov
and
mov
sbb
adc
loopne
sub
xchg
lcall
or
fisubs
out
fidivl
lcall
jl
pop
sub
push
jo
mov
mov
inc
mov
mov
mov
cmpsb
mul
push
jo
sbb
sub
mov
loop
mov
mov
and
mov
repnz
add
sti
pop
int
aad
stos
add
lock
stos
scas
or
orl
test
inc
stos
int3
inc
in
or
imul
sbb
mov
and
dec
push
sub
dec
sti
sti
add
adc
aad
push
add
dec
insb
adc
lret
fwait
jg
inc
xor
mov
pop
xor
sub
lret
outsl
lcall
pop
dec
pop
add
xor
pop
fwait
jo
xor
lret
pop
mov
push
jno
xor
or
ret
adcl
insl
sahf
mov
sbb
fldt
xor
fdivp
sub
js
and
in
jg
add
add
arpl
ret
add
sub
pop
std
add
dec
mov
pop
ret
repz
mov
push
test
shlb
out
mov
dec
or
push
aas
std
jb
insl
xchg
cmp
xchg
mov
cld
inc
decl
loope
das
cmp
add
testl
data16
decl
jno
stos
mov
or
cmp
fistpll
mov
js
mov
nop
dec
scas
ljmp
out
jge
dec
cmc
fcom
cmp
mov
sbb
mov
xchg
or
jo
pop
pop
inc
sahf
add
sub
jmp
add
cs
sub
sub
adc
ds
cmp
add
ds
cmpsb
or
and
and
das
push
adc
adc
cmpsb
loopne
mov
loopne
icebp
or
lret
pop
je
add
inc
pop
dec
push
int3
enter
dec
str
iret
add
add
push
das
push
sbb
pop
inc
insw
jb
sbb
sub
sub
test
ret
push
lret
add
adcb
sub
add
dec
xor
cmp
inc
inc
adc
dec
jo
add
lods
outsb
sbb
pop
dec
add
jno
push
cmp
dec
bound
push
sub
div
cmpsb
mov
add
das
mov
das
push
sub
mov
add
add
xchg
sahf
rolb
sub
es
sub
add
add
cli
lock
add
add
or
roll
jmp
movaps
imul
jo
aad
add
test
lea
cltd
lcall
dec
imul
sahf
mov
sarl
or
popf
push
xchg
sbb
nop
imull
xchg
pop
cmpsb
xor
or
test
xor
xchg
divb
daa
shlb
adc
mov
adc
idivb
jno
out
add
add
mov
cmc
push
dec
dec
xchg
dec
dec
pop
dec
sub
cli
push
fstl
dec
add
push
inc
add
imul
dec
fbld
mov
and
dec
adc
xchg
rorb
push
sbb
shrb
imul
test
pusha
outsb
addr16
jnp
jns
jg
jge
add
call
add
sub
cs
call
and
daa
and
and
ds
cmp
cmp
xor
or
adc
sub
incl
testb
aaa
xor
add
add
add
add
mov
add
add
add
dec
dec
dec
dec
dec
or
inc
inc
add
in
incl
inc
inc
cld
inc
inc
sbb
lods
add
decl
fs
pushl
add
add
lock
and
aas
add
mov
out
mov
push
sti
popw
push
fldl
or
stos
daa
ss
icebp
cmp
jg
push
stc
addr16
jle
jo
sub
testb
scas
mov
push
or
xor
mov
loopne
mov
inc
decl
mov
cli
or
int3
jecxz
dec
cmc
aaa
or
sub
imull
mov
push
xchg
push
or
push
xor
pop
mov
cmpsl
incl
in
lods
cmp
mov
push
adc
idivl
mov
movsl
subl
inc
add
loope
pop
loop
xor
jnp
and
push
in
push
lods
adc
incl
add
xchg
ja
in
lods
aam
push
inc
rorl
addl
loopne
hlt
mov
adc
or
cmp
dec
mov
jecxz
pop
dec
and
mov
push
adc
push
decl
js
hlt
push
movsb
add
pop
mov
dec
stos
xchg
bound
hlt
xor
mov
inc
addr16
mov
adc
clc
ja
dec
jg
jns
fldl
mov
popf
call
pop
sahf
fcomip
out
clc
sub
mov
aaa
stos
add
or
popf
clc
call
add
add
add
test
mov
mov
cmp
mov
adc
or
inc
jb
push
loop
stos
dec
es
fidivrl
pop
shlb
xchg
adc
add
or
mov
roll
dec
sub
mov
pop
test
rcll
jbe,pn
js
gs
inc
insl
and
or
add
in
mov
mov
lods
adc
inc
cmp
mov
imul
xor
orb
sub
push
stos
mulb
or
or
mov
jg
pop
push
ljmp
dec
push
cmp
pop
dec
add
sbb
rclb
or
or
enter
out
sub
cmp
add
xlat
jae
mov
sub
les
and
lcall
inc
cmp
test
adc
imul
rcll
dec
out
hlt
push
js
cmp
inc
rcr
faddl
push
xchg
clc
or
inc
mov
jle
shrb
shr
push
dec
mov
mov
push
insl
add
cmpsb
xor
and
push
xor
js
inc
xchg
dec
rcrb
fisubl
inc
pop
lret
pop
ds
lods
dec
jo
and
cld
add
lcall
rolb
test
push
or
cmp
ljmp
cmpb
cwtl
into
stos
adc
adc
dec
pop
inc
mov
negb
outsb
rolb
loopne
loop
loopne
scas
lcall
add
jbe
in
test
push
arpl
xchg
add
add
jae
jns
push
mov
pop
loopne
fimuls
mov
or
inc
or
mov
fisttps
inc
loopne
add
sub
mov
jg
cld
xor
or
scas
add
pop
or
push
ljmp
loop
loopne
pop
add
pop
in
loopne
ds
add
sti
sub
loopne
push
lods
into
jle
mov
push
data16
and
jns
pop
or
mov
push
xchg
push
or
sbb
inc
add
mov
sbb
lret
push
add
add
pop
imul
or
rclb
or
mov
adc
mov
cmp
add
loopne
mov
aam
xor
mov
fs
push
cmp
ss
cs
or
add
and
push
daa
in
ds
mov
jbe
clc
loopne
outsb
lods
loope
aam
pop
mov
stos
fildl
loopne
dec
adc
or
xor
shl
int3
or
mov
out
pop
loopne
ljmp
sbb
inc
ret
push
into
loopne
or
out
imul
sbb
inc
adc
mov
push
push
xchg
loopne
or
loopne
jle
pop
cld
inc
shll
mov
push
or
loopne
outsb
lcall
add
push
rorl
or
push
insb
dec
mov
mov
shll
shll
sar
sar
mov
stos
fucom
sbb
pop
out
pop
mov
stos
push
or
add
dec
loopne
sub
imul
rcrb
adc
out
push
pop
outsl
pop
orb
pop
loop
dec
pminub
add
dec
imul
add
mov
xchg
clc
mov
nop
dec
sahf
aam
adc
sbb
loopne
stos
ret
sbb
sbb
add
dec
imul
into
sbb
jnp
pop
push
jb
push
or
and
pop
fidivrl
and
or
jo
in
mov
loopne
and
stos
add
add
xor
stos
mov
loopne
stos
shlb
adc
sbb
pop
out
loope
or
nop
pop
mov
ds
js
and
sbb
jl
dec
int
push
inc
push
jle
push
fadds
ds
hlt
or
cli
mov
or
jno
jge
fstp
sbb
lock
or
add
insb
fidivrs
sub
xor
jo
cmp
sbb
outsl
fwait
neg
jo
add
add
jb
test
mov
jo
pop
mov
adc
lock
or
movsb
jb
cmp
dec
cmpsb
insl
ficompl
repnz
icebp
lods
fnstenv
sub
pop
rorl
push
xor
sarl
popf
daa
push
cmpb
mov
pop
lock
mov
scas
add
fiaddl
lcall
jo
ljmp
cld
hlt
jo
ds
je
bound
imul
cmp
jo
mov
xlat
jge
lock
ljmp
outsl
xchg
jns
push
psrad
sub
lcall
into
cmp
push
jg
loopne
inc
inc
lock
mov
mov
mov
xchg
ret
jo
clc
dec
xor
sbbl
fs
sbb
add
lcall
add
cs
lock
aas
iret
lock
out
bound
jnp
imul
lock
loop
test
jo
stos
mov
push
lock
jecxz
rcr
jno
cli
jno
dec
insb
mov
test
add
rclb
jbe
xor
jne
repnz
fcomip
pop
mov
mov
addl
add
cld
sub
xor
add
fstpl
jmp
or
ss
lock
mov
push
dec
dec
call
adc
dec
out
dec
ja
in
adc
dec
sub
aaa
jg
aaa
adc
loope
cs
out
dec
in
aaa
dec
in
dec
sti
repz
jg
dec
dec
dec
clc
xchg
dec
stc
dec
or
je
cld
dec
adc
jg
aaa
jg
dec
repz
sub
adc
dec
divb
dec
testl
repz
xor
cmc
dec
ss
mov
dec
mov
dec
jae
mov
aaa
jg
dec
dec
dec
addb
dec
push
dec
xchg
test
dec
lcall
fwait
dec
or
or
dec
xchg
adc
dec
and
xchg
aaa
jg
aaa
cmp
dec
sub
pop
dec
test
jo
lods
repz
jg
dec
dec
dec
mov
push
dec
cmpsb
push
dec
movsl
dec
inc
dec
mov
pop
dec
mov
add
dec
sbb
adc
dec
and
cld
add
dec
sub
xchg
dec
jmp
insb
cmpsl
add
mov
add
aaa
roll
dec
jle
adc
cld
dec
outsl
dec
repz
inc
jnp
dec
push
adc
dec
inc
add
dec
mov
adc
push
push
or
and
sub
cmp
dec
inc
rclb
imul
lods
stc
mov
push
dec
mov
enter
dec
add
jmp
mov
adc
dec
jno
dec
add
push
adc
stc
dec
sbb
dec
jbe
int
int
adc
dec
imul
pushw
outsb
adc
jo
dec
lea
fs
or
dec
dec
pop
dec
adc
dec
cmpxchg
dec
cltd
dec
jl
xchg
cmp
dec
and
or
adc
and
cs
lods
adc
inc
xor
pop
adc
popa
or
or
and
adc
dec
mov
cmp
dec
and
fucomi
clc
aaa
adc
dec
xor
je
jmp
fs
dec
inc
jp
adc
stc
fwait
mov
jp
mov
in
dec
mov
loop
jmp
fwait
mov
in
jp
jecxz
out
test
in
lods
jp
mov
jp
dec
mov
sti
call
jp
in
jp
fwait
mov
jp
loopne
cld
dec
loope
std
out
repnz
in
repz
jp
dec
stc
jp
jp
dec
std
jp
repz
dec
icebp
jp
mov
jp
dec
cmc
jp
mov
dec
mov
mov
fwait
mov
jp
cmpb
cmpl
xchg
mov
jp
dec
test
cwtl
jp
dec
lahf
jp
xchg
jp
dec
xchg
jp
mov
jp
dec
xchg
jp
stos
jp
dec
stos
jp
test
out
clc
sahf
dec
scas
jp
shrb
popf
mov
jp
outsl
out
mov
jp
cmpsl
jp
dec
movsl
jp
mov
jecxz
out
jp
dec
inc
dec
icebp
dec
cmpsb
dec
cmc
dec
push
dec
mov
out
adc
mov
dec
mov
mov
dec
outsl
dec
mov
outsl
out
dec
lea
orb
andl
dec
pusha
dec
cmp
dec
xchg
dec
xchg
test
dec
test
lcall
out
jnp
cwtl
dec
js
cltd
jns
sahf
dec
jle
lahf
jg
pushf
dec
out
out
dec
popf
jge
xchg
dec
jb
xchg
jae
nop
dec
jo
stos
out
decb
dec
stos
dec
or
dec
test
push
dec
scas
dec
cmovl
dec
lods
dec
or
mov
dec
dec
mov
out
dec
cmpsb
push
dec
cmpsl
dec
pop
dec
movsb
add
movsl
dec
add
outsl
sbb
sbb
dec
jmp
sbb
dec
add
mov
sbb
lcall
out
dec
pop
dec
in
sbb
dec
sbb
je
adc
dec
adc
adc
dec
adc
int
push
dec
out
fisttpl
adc
in
adc
sti
dec
dec
outsl
stos
adc
dec
clc
dec
mov
dec
dec
decl
out
dec
cld
dec
dec
std
dec
dec
dec
repnz
dec
repz
inc
dec
lock
out
incb
icebp
dec
inc
dec
testb
dec
fimull
inc
dec
cmc
dec
inc
dec
mov
out
add
mov
mov
mov
mov
dec
out
out
dec
mov
dec
lea
orb
orl
out
jae
orl
dec
jbe
test
test
lcall
fwait
dec
add
cltd
dec
or
or
dec
out
out
dec
pushf
jl
popf
dec
js
xchg
push
dec
xchg
dec
add
out
jge
xchg
dec
add
pop
dec
xchg
dec
add
or
dec
stos
mov
stos
dec
pop
dec
test
rorb
arpl
aaa
adc
scas
dec
pop
dec
lods
outsb
loop
pop
fwait
mov
outsl
dec
mov
push
dec
mov
push
dec
stc
fwait
mov
dec
movsb
push
dec
movsl
dec
push
dec
mov
gs
mov
push
mov
push
dec
mov
pop
dec
fwait
mov
dec
mov
popa
dec
mov
dec
mov
bound
addr16
int
mov
dec
mov
dec
mov
pusha
dec
jmp
add
dec
call
ret
cld
int
cld
dec
out
dec
rorb
dec
in
dec
dec
loop
dec
jecxz
loope
loope
cld
int
lds
dec
iret
dec
in
push
dec
out
clc
out
aas
stc
mov
in
decb
adc
dec
cld
dec
fimull
dec
test
dec
xchg
dec
incl
dec
icebp
dec
test
dec
fisttpl
dec
fmuls
dec
dec
fimuls
dec
fisttps
dec
fmull
dec
fisttpll
dec
rorb
dec
rorl
dec
rorb
dec
rorl
dec
dec
xchg
dec
test
add
call
dec
test
dec
lcall
dec
cwtl
dec
les
dec
decl
mov
int3
pushf
dec
lret
in
dec
xchg
dec
loop
xchg
dec
lock
jmp
dec
stos
dec
sti
dec
test
clc
dec
test
decb
dec
mov
dec
fsubrl
dec
repnz
mov
dec
or
repnz
dec
cmpsl
dec
pusha
add
lock
dec
hlt
dec
movsl
dec
clc
mov
pop
idivb
dec
mov
dec
mov
dec
mov
dec
mov
dec
lea
mov
orb
orl
std
imul
inc
xor
inc
push
out
inc
ljmp
in
inc
dec
outsl
in
inc
jmp
loop
jmp
imul
inc
shrl
inc
xlat
imul
call
imul
inc
loop
cli
inc
out
testb
testl
push
mov
jle
mov
push
popl
push
addl
xchg
imul
ljmp
push
nop
inc
enter
leave
push
xchg
inc
pusha
push
xchg
inc
bound
pushl
mov
inc
fisubrl
inc
fldt
push
imul
outsb
stos
inc
decl
test
inc
outsb
test
inc
inc
outsb
scas
inc
inc
outsb
mov
inc
outsb
pushl
outsl
mov
outsl
cmpsl
inc
pop
outsl
movsb
inc
jbe
movsl
inc
lock
add
imul
outsw
mov
inc
mov
loopne
mov
fsubrp
inc
dec
push
inc
dec
push
fisubrl
inc
dec
push
ljmp
inc
dec
push
inc
and
inc
inc
push
inc
inc
push
inc
pop
push
inc
pop
push
inc
imul
inc
insb
push
inc
outsl
push
inc
sbb
inc
pop
imul
sbb
incb
mov
inc
adc
inc
adc
inc
adc
mov
inc
pop
push
inc
arpl
inc
fs
outsl
incl
imul
inc
pop
imul
imul
ljmp
inc
std
outsl
test
outsl
test
outsl
lcall
push
inc
push
push
inc
push
push
inc
push
imul
push
push
insl
xchg
inc
out
xchg
inc
mov
inc
cld
outsl
xchg
inc
test
ljmp
cld
inc
in
stos
inc
lods
ds
loope
out
test
inc
imull
in
pushl
push
inc
loopne
mov
inc
imulb
cmpsb
insb
mov
pushl
inc
sub
sub
movsb
inc
das
insb
mov
call
cld
push
inc
imul
insl
mov
inc
and
insb
mov
inc
std
sub
decl
insb
mov
inc
insb
mov
pop
imul
push
lds
mov
jbe
in
inc
je
loop
jle
inc
outsl
pop
icebp
mov
add
inc
mov
inc
pusha
mov
add
pop
cld
incl
inc
fildll
inc
out
push
inc
inc
imul
push
inc
xchg
inc
call
push
incl
push
inc
lcall
inc
cwtl
dec
test
inc
sahf
dec
scas
inc
lahf
dec
lods
inc
pushf
dec
lods
incl
dec
mov
inc
xchg
dec
mov
inc
xchg
dec
cmpsb
inc
xchg
dec
cmpsl
inc
xchg
dec
movsb
inc
xchg
dec
movsl
incl
dec
mov
inc
stos
dec
mov
inc
test
dec
mov
inc
lods
dec
mov
inc
lods
dec
mov
mov
dec
mov
mov
inc
call
inc
dec
inc
out
inc
dec
inc
out
das
clc
incl
inc
in
inc
dec
inc
in
inc
dec
inc
loop
inc
inc
jecxz
inc
inc
loopne
lock
inc
inc
pushl
inc
out
inc
inc
in
inc
in
inc
inc
cli
inc
pop
inc
sti
inc
pop
inc
clc
inc
pop
inc
stc
inc
lcall
incb
inc
incl
inc
cld
inc
pop
inc
std
inc
pop
inc
repnz
push
inc
repz
push
inc
lock
push
inc
icebp
inc
call
testb
testl
inc
cmc
inc
push
inc
mov
inc
mov
inc
mov
inc
mov
mov
pushf
inc
popl
inc
mov
inc
lea
inc
addb
addl
cmp
incl
inc
addl
inc
xchg
inc
test
inc
test
inc
lcall
inc
cwtl
incl
inc
cltd
inc
jns
sahf
inc
jle
lahf
inc
jg
pushf
inc
jl
popf
inc
jge
xchg
inc
jb
xchg
inc
jae
nop
incl
inc
xchg
inc
je
xchg
inc
jne
stos
inc
or
or
or
or
push
inc
scas
incl
inc
lods
inc
or
lods
inc
or
inc
mov
inc
dec
inc
mov
inc
push
inc
cmpsl
incl
inc
mov
inc
sbb
sbb
sbb
push
inc
mov
inc
sbb
mov
inc
sbb
inc
mov
adc
jnp
call
inc
jns
out
inc
jle
out
inc
jg
in
incl
in
inc
jge
loop
jb
jecxz
jae
loopne
jo
loope
jno
out
jbe
out
ja
in
incl
in
jne
cli
inc
or
inc
or
inc
or
inc
or
inc
push
jnp
inc
cld
incl
std
inc
or
jnp
inc
add
inc
dec
jnp
inc
add
inc
push
jnp
inc
pop
jnp
incl
cmc
inc
add
jnp
inc
sbb
inc
sbb
inc
sbb
inc
push
jnp
inc
pop
jnp
incl
lea
addb
inc
adc
inc
adc
inc
adc
inc
push
jnp
inc
pop
jnp
sbb
adc
test
lcall
jnp
inc
sub
inc
sub
add
insb
ss
lahf
pop
pushf
pop
popf
pop
xchg
pop
xchg
fwait
int
mov
nop
pop
xchg
pop
xchg
pop
xchg
pop
xchg
mov
insb
ss
xchg
pop
stos
pop
stos
pop
test
fwait
int
pop
test
pop
lods
pop
lods
data16
insb
pop
mov
pop
mov
pop
cmpsb
pop
cmpsl
pop
movsb
pop
movsl
inc
daa
jnp
inc
cmp
inc
loop
pushl
jnp
inc
xor
jnp
inc
into
jnp
inc
int3
jnp
inc
jnp
inc
les
adc
and
adc
rcrb
cs
ljmp
mov
sbb
pop
sbb
pop
xor
push
iret
repz
jmp
jmp
iret
repz
loop
loopne
imul
repz
mov
add
iret
repz
inc
inc
inc
inc
inc
pop
ds
repz
push
push
mov
dec
jns
out
sbb
outsl
sbb
jns
out
sbb
bound
imul
imul
sahf
arpl
push
data16
repz
popa
sub
and
cmp
daa
loope
pushf
dec
push
idivl
fistpl
cmp
push
sahf
out
sahf
cmp
cmp
cmp
jns
out
outsb
fsubrl
insb
out
sahf
out
insl
shll
out
push
sahf
imul
iret
repz
addr16
loopne
iret
repz
loope
out
repz
repz
in
in
jnp
out
dec
cli
sub
push
sub
cmp
repz
stc
sub
cs
repz
cld
sub
iret
repz
sub
hlt
leave
leave
leave
add
sahf
out
fimuls
mov
sahf
out
cmp
jns
out
xorb
xor
xorl
out
xchg
jns
out
lcall
sahf
cwtl
into
cltd
iret
sahf
int3
jns
out
lahf
int
ljmp
test
iret
repz
mov
adc
push
push
sub
call
lods
call
xor
bnd
cmp
je
mov
xor
jae
jmp
jmp
inc
pop
jbe
push
gs
jge
dec
lods
and
les
adc
push
cs
add
pushl
pushf
popf
sbb
push
jns
xor
pop
dec
idivb
mov
icebp
mov
sub
lcall
xchg
das
cmp
test
jge
addb
xchg
or
mov
incl
xchg
sbb
sbb
ss
call
mov
sti
fcoml
int
jnp
ja
call
outsb
adc
cli
repnz
jbe
cld
mov
cmpsb
sbb
incl
test
mov
cld
movb
call
pop
iret
imul
jb
jmp
sbb
dec
jmp
sub
testb
notb
or
and
sub
sub
aas
push
cld
ljmp
xor
add
fildl
enter
aaa
push
pushf
and
jmp
jl
outsl
pop
push
fsubl
testl
sub
jp,pt
lods
scas
xor
and
dec
jg
pop
loopne
outsb
xchg
cli
push
sub
jns
sarl
jnp
js
js
js
js
js
mov
int3
lahf
jg
pushf
fs
insb
or
fstpt
loope
push
cmp
xor
call
mov
xchg
negb
xor
or
add
out
xor
jge
xchg
ljmp
sub
cmp
bound
fs
pop
and
jns,pt
jns
jns
jns
jns
jns
jns
pop
out
jecxz
jno
jno
and
mov
xlat
xchg
fisubrl
repnz
xor
pushl
push
jle
jle
jle
jbe
push
jle
jle
jle
jle
cli
stos
inc
sub
xchg
pushf
pushl
dec
or
add
inc
mov
cld
and
xor
jle
jle
jle
jle
jle
jle
jle
jg
jg
rcrb
push
mov
xor
sahf
ret
lret
in
or
xchg
cmp
jg
jg
jg
jg
jg
jg
jg
jg
jg
xor
dec
cmc
stos
push
fistpll
jl
sbb
cmp
aaa
push
iret
jbe
ss
jle
jbe
push
jl
jl
jl
jl
jl
jl
push
jl
cwtl
icebp
push
shrl
jmp
and
pop
mov
decl
add
push
pop
mov
mov
push
jnp
jnp
je
push
fnstsw
mov
call
ret
call
sti
jno
adc
pushl
jno
jno
jbe
jbe
jbe
pushl
jbe
into
inc
mov
jl
sub
push
fmuls
ret
adc
push
inc
fwait
pcmpeqw
idiv
jne
jne
jne
jne
jne
jne
lret
pop
in
repz
ret
pushl
adc
or
fucom
popa
out
sbb
sub
jp
jp
jnp
jnp
jnp
jnp
jnp
js
js
push
fs
mov
lahf
jmp
out
xlat
and
fwait
cmp
adc
adc
aas
cld
jg
jg
jg
jg
jg
jg
jg
xor
jo
out
cltd
inc
and
add
decl
dec
mov
loop
xchg
mov
ja
dec
jl
jl
jl
jl
je
lcall
sub
ljmp
test
fsubl
decl
in
sub
call
shll
subl
jge
jb
jb
jb
jb
jb
mov
repz
push
cmpsl
or
jmp
mov
dec
xchg
xor
pop
mov
bound
jo
jo
jo
jno
jno
jg
incl
jno
jno
jae
lret
mov
mov
dec
test
or
pushl
popf
adc
jbe
ja
ja
ja
ja
ja
ja
ja
shrl
and
lcall
lds
mov
jae
dec
inc
je
je
je
je
je
je
je
pushl
lods
es
cmp
aas
push
push
cmpsl
cmp
imul
ret
dec
cmp
scas
and
mov
imul
sarl
cmpsl
jle
jle
jg
jg
mov
or
inc
movsb
cwtl
add
call
lods
arpl
cmpsb
mov
sub
jae
jo
jo
pushl
jo
jo
jo
cltd
insb
daa
cltd
pusha
push
bound
cmp
movsb
inc
arpl
lea
call
scas
jbe
jbe
jbe
ja
ja
ja
ja
ja
ja
ja
popa
mov
aad
add
xchg
push
insb
xor
repnz
xor
leave
cld
shr
push
daa
inc
lds
jne
jne
jne
jne
ror
push
sar
lcall
rdpmc
pusha
jb
push
push
fidivrl
dec
lret
sbb
adc
sar
jns
aas
cli
imul
inc
xchg
jle
scas
mov
and
adc
ljmp
add
cmp
pop
pop
pop
pop
pop
pop
pop
clc
cmp
push
push
push
push
push
bound
popa
lcallw
jae
jno
ja
jne
adc
test
dec
inc
clc
inc
fsubs
inc
inc
adc
pop
adc
xor
out
jo
lret
leave
into
iret
int3
int
ret
rol
mov
fst
rcl
call
xlat
aam
ljmp
in
loop
loopne
out
in
cli
sti
clc
stc
cld
std
repnz
call
hlt
cmc
mov
lea
xchg
sahf
lahf
lcall
xchg
xchg
xchg
xchg
stos
stos
test
scas
scas
lods
lods
mov
cmpsl
movsb
movsl
mov
mov
mov
mov
mov
mov
pop
mov
add
add
add
mov
or
or
add
pop
add
add
sbb
sbb
xor
pop
sbb
add
adc
adc
adc
ret
xor
adc
add
xor
add
ret
xor
and
and
ret
xor
and
add
xor
add
ret
xor
xor
das
js
or
mov
dec
xor
add
adc
mov
adc
and
mov
sbb
and
xor
pushl
scas
add
jo
addb
xor
or
lea
push
or
cmp
mov
nop
addb
pop
ret
or
adc
fwait
pop
hlt
addb
or
adc
mov
pop
adc
and
clc
in
lcall
pop
mov
aas
add
adc
and
jne
rolb
push
adc
sub
movaps
and
ds
fbstp
or
or
das
sbb
ds
rolb
sbb
sub
jg
add
or
aas
sbb
and
or
loopne
cmp
cmp
loopne
adc
fmul
or
sbb
int3
or
or
or
add
das
les
sub
add
push
sbb
gs
jnp
sbb
add
or
cmp
pop
and
nop
testb
outsl
jbe
inc
inc
add
jp
add
inc
jns
add
push
sbb
mov
movsb
shr
orl
sbb
add
add
mov
push
outsl
rclb
rolb
add
or
adc
xor
or
inc
add
outsl
push
mov
aaa
cmp
and
mov
push
pusha
and
int3
xor
inc
push
cli
decb
add
push
pop
and
push
mov
and
or
mov
cs
add
addb
addb
dec
or
aas
and
mov
pusha
add
in
outsl
int
sbb
cmp
mov
sbb
inc
pusha
ljmp
clc
loope
and
faddl
mov
or
stos
add
sub
in
fnsave
ss
and
adc
cmp
fisttps
gs
sub
daa
gs
loop
jg
add
es
and
cmp
push
xchg
or
fdivp
jmp
dec
sbb
sbb
add
or
mov
inc
cld
or
popa
or
or
inc
jb
add
imul
arpl
in
inc
or
jp
push
xor
jmp
jle
loope
loope
andl
ret
sub
sahf
out
cs
and
and
cmp
leave
add
fmul
fldt
inc
inc
loope
ror
add
into
out
rcr
lret
rcr
testb
dec
pop
inc
pop
mov
movsb
push
fs
cmp
idiv
sbb
xor
add
push
adc
pop
data16
push
push
jnp
push
lcall
call
add
add
scas
inc
mov
xorb
mov
mov
add
out
cmc
or
add
imul
ljmp
dec
jb
js
outsl
js
jle
decl
jo
jb
bound
jns
pop
data16
jg
dec
je
pop
dec
imul
or
push
pop
mov
mov
mov
mov
xchg
test
mov
incl
jecxz
mov
mov
cmc
repz
mov
jecxz
ljmp
cmpsl
add
add
cmpsb
lods
mov
cmc
scas
mov
cld
cli
clc
loope
mov
popa
ja
imul
add
out
xchg
mov
xor
bnd
into
pop
std
ror
in
out
clc
aam
shr
out
loope
test
cmpsb
movsl
mov
add
sub
out
clc
cmp
xor
mov
push
sbb
mov
sub
pop
push
sbb
push
add
sub
cmp
or
cmp
sub
daa
xor
and
and
popa
pop
popf
orl
mov
insl
pop
mov
nop
stos
scas
mov
add
test
mov
mov
clc
pop
mov
ds
gs
int
enter
scas
cmp
rcr
nop
aam
cmp
xor
adc
aaa
mov
jnp
jo
jle
jl
cmc
enter
aad
rol
repnz
ror
fadd
fcmovnb
rol
call
fmulp
int3
pop
loopne
or
lret
repz
lock
rcr
push
cld
out
clc
or
in
pop
dec
pop
add
push
dec
cmp
jmp
jns
add
push
pop
and
add
or
jg
stos
add
push
and
das
cmp
pop
push
aas
daa
cmp
ljmp
pop
xor
jnp
add
add
insb
pop
add
lock
incl
pop
inc
or
inc
or
repz
sti
mov
add
repnz
data16
call
adc
adc
or
mov
mov
push
jg
or
sti
jmp
or
inc
sbb
add
push
loop
in
out
add
mov
jg
cmpsb
pop
jp
add
push
pusha
push
dec
push
push
push
pop
xchg
in
pop
hlt
pop
push
push
dec
or
mov
add
lods
outsl
clc
push
fistps
out
jmp
in
mul
lods
jmp
in
mov
int
push
clc
std
cld
add
std
clc
mov
xor
roll
xchg
cmpsb
inc
idiv
pop
lock
dec
or
fadds
dec
dec
inc
inc
add
add
pop
push
push
pop
push
push
add
push
inc
inc
push
inc
mov
clc
lahf
scas
mov
and
cli
mov
mov
mov
add
cmc
jno
mov
inc
popf
xchg
add
pop
incl
pop
mov
aas
pop
push
add
add
paddw
sbb
pop
pop
add
mov
or
pushl
mov
mov
adc
test
add
dec
add
pop
inc
sbb
sub
adc
rolb
jbe
push
inc
inc
pop
lock
pop
push
dec
dec
gs
das
jp
inc
inc
ret
rol
dec
fcmovnu
iret
fstp
fists
in
fsubr
lcall
in
shlb
sbb
repnz
ret
int
ror
les
ss
mov
add
cmp
cmp
or
scas
clc
test
sub
loope
out
in
jg
mov
inc
add
cltd
pushf
add
xchg
xchg
jecxz
icebp
insl
out
lock
idiv
out
vpaddw
jmp
mov
adc
pop
adc
sbb
sbb
mov
sub
cmp
mov
mov
pop
jbe
fwait
hlt
xchg
orb
inc
mov
cmp
fnsave
aas
popa
insb
jmp
rclb
push
jecxz
in
out
cmc
out
add
xlat
clc
add
add
rorl
fdiv
filds
js
es
ror
push
mov
lock
fildl
dec
pop
pop
lods
push
push
inc
insl
push
inc
dec
add
inc
inc
mov
pop
bound
lahf
cwtl
xchg
xchg
add
mov
mov
or
push
or
sub
push
mov
mov
mov
mov
pop
or
jnp
lock
pop
xchg
inc
inc
mov
fcomi
fdivs
rcl
mov
clc
stos
mov
mov
mov
imul
jbe
pop
jns
gs
addr16
fbld
mov
xor
add
shll
xor
pop
dec
jl
cmp
push
call
ljmp
pop
sbb
movups
arpl
arpl
rcl
jno
inc
fadd
xchg
or
rcr
outsb
push
pop
je
rorl
jne
outsl
nop
repnz
push
or
inc
add
mov
rol
aad
in
lock
xor
in
neg
out
ljmp
push
ljmp
mov
cld
ret
shrl
out
roll
rcrl
int3
add
add
pop
pop
inc
lcall
xchg
push
dec
push
sbbb
mov
hlt
add
adc
sub
ljmp
sub
aaa
insb
jg
jg
cmp
aas
dec
sbb
add
add
call
and
adc
push
adc
ss
jg
iret
inc
stos
or
jmp
jno
jl
dec
pop
and
cld
ret
in
outsl
or
daa
and
ret
pop
rolb
sbb
cmp
xor
jne
jae
cmp
push
or
cmp
nop
cs
jo
ljmp
xor
or
adcl
mov
add
mov
clc
mov
movsl
mov
cmpsb
inc
mov
adc
outsb
push
sbb
jg
xchg
and
push
lahf
or
sbb
outsl
fdiv
incl
dec
add
rcrb
push
dec
push
and
incl
add
mov
push
dec
push
push
sbb
ja
je
gs
aas
jno
xchg
push
jne
popa
jl
push
mov
add
js
testb
jns
dec
sbbb
je
pop
icebp
add
or
adc
adc
push
add
push
lock
aam
sbbb
aad
add
xor
xlat
fldl
into
lret
fcmovne
std
shll
std
stc
mov
cli
loop
loope
pop
shl
push
add
out
cmpsl
mov
lret
fiadds
into
aad
rol
sbb
add
pop
pop
sbb
sbb
add
sub
incl
pop
xor
xchg
cltd
nop
xor
adc
adc
ret
ljmp
aad
rol
fdivrp
mov
out
in
add
fsub
in
add
aam
in
clc
pop
out
repz
ljmp
jmp
in
loopne
lret
add
into
stc
int3
clc
out
push
ror
aad
sarl
xchg
mov
add
add
shr
sti
hlt
clc
inc
mov
mul
out
push
popf
or
movups
in
outsl
or
fadd
repnz
icebp
dec
repz
mov
xor
inc
mov
inc
cmp
xchg
iret
lea
xchg
addl
dec
inc
cli
mov
ljmp
cmpsb
xchg
test
mov
inc
xchg
xchg
mov
lcall
add
dec
fisubl
test
ljmp
cltd
das
sub
xor
mov
mov
lds
push
jl
in
enter
lock
mov
push
fcos
stos
add
mov
mov
inc
cmp
jne
xchg
cs
jne
addb
xor
and
xor
inc
inc
jmp
call
sahf
mov
scas
lods
ljmp
fcmovnu
aam
xor
stos
push
mov
data16
inc
inc
inc
pop
inc
dec
pop
outsb
addr16
inc
push
pop
cld
lcall
jbe
push
inc
push
pop
push
pop
pop
dec
xor
shll
ret
push
fcmove
xlat
shlb
mull
cmpsb
push
icebp
jmp
hlt
out
loope
xor
mov
call
fdivs
and
int
inc
roll
fcomp
lods
push
mov
imul
loopne
push
mov
test
mov
je
hlt
std
icebp
in
or
in
jmp
jne
push
add
aaa
pushf
idiv
push
clc
cmp
and
cmp
les
sub
and
and
pushf
xlat
mov
icebp
add
sbb
pop
push
nop
mov
xchg
or
jo
or
adc
adc
mov
or
add
pop
push
add
or
add
cmp
adc
pop
rcll
add
js
xor
push
imul
outsl
popa
push
inc
push
and
pop
push
loopne,pn
cmp
jmp
repz
cld
mov
cli
mov
gs
dec
sar
mov
dec
hlt
inc
add
inc
cmp
mov
cmpsl
add
push
ljmp
stc
lods
add
and
incb
fbld
pop
xchg
xchg
cwtl
rclb
or
jg
rcl
iret
scas
add
mov
add
lcall
and
sti
test
add
add
mov
addb
pop
add
sbb
sub
push
pop
jle
imul
add
outsb
mov
mov
sub
mov
cmc
rcrb
loope
mov
clc
add
or
mov
mov
mov
enter
mov
mov
sbb
xchg
idivl
dec
jge
pop
push
dec
add
pop
pop
mov
or
pop
inc
dec
pop
add
es
add
push
pusha
xchg
in
xchg
mov
sahf
mov
pop
outsl
mov
cpuid
adc
and
decl
push
jns
insl
js
jle
jbe
js
jg
fs
rcr
mov
lock
inc
hlt
push
jbe
aam
ficompl
dec
mov
or
sbb
dec
sub
or
testl
or
mov
cmpsl
fwait
xchg
mov
cmp
sbb
add
std
mov
and
test
stos
cli
xchg
pushl
lods
orb
jl
outsl
imul
pop
jnp
data16
js
loop
mov
pop
arpl
nop
dec
gs
inc
pop
mov
js
inc
jne
jb
cmp
jge
ljmp
inc
je
jge
add
aaa
inc
fildl
fcoml
fdivr
ljmp
or
sub
adc
femms
add
inc
sub
add
dec
bound
icebp
adc
dec
sbb
pop
sbb
hlt
in
outsl
mov
outsl
cmp
ss
jno
arpl
popa
insb
pusha
jnp
pusha
repz
jmp
in
out
ret
in
std
adc
dec
in
cmc
adc
call
mov
aad
incl
hlt
lock
std
ljmp
incl
lret
fmulp
add
inc
dec
in
and
mov
pop
arpl
jns
jle
inc
insl
outsl
je
aaa
mov
orl
faddl
lods
inc
call
or
adc
add
adc
adc
es
and
mov
movlps
sub
mov
or
adc
or
push
push
sbbb
dec
xor
sbbl
sub
mov
xchg
mov
orb
sbb
adc
sbb
sbb
pop
aaa
add
sbb
pop
sbb
or
add
decl
inc
movsl
out
ret
repz
mov
mov
cmp
mov
jb
enter
jl
decl
ret
int3
xlat
aad
fldl
lds
fcmovu
mov
clc
mov
scas
or
jle
fs
push
adc
insl
jns
xor
sub
add
push
or
shrl
pop
hlt
in
add
rorl
push
cld
inc
int3
fcmovb
fld
add
shr
ljmp
fildll
cmp
cmpsb
icebp
shl
repnz
add
rol
loope
in
clc
in
icebp
loope
push
in
cli
add
cli
in
ret
ret
adc
adc
or
add
push
and
outsl
jmp
adc
roll
lret
ror
jmp
jecxz
decl
or
in
test
xor
aam
fst
xlat
in
add
sbb
add
cmp
fldenv
and
pop
push
pop
pop
xchg
fcomip
ja
adc
or
hlt
cmp
push
add
sub
cmpb
and
xor
or
cmp
cmp
xor
aaa
daa
pop
mov
stos
mov
mov
mov
loop
fimull
dec
xchg
xchg
std
mov
test
mov
mov
mov
icebp
add
stos
mov
add
pop
push
mov
sbb
pop
sbb
push
dec
adc
push
cli
insl
rcll
add
sbb
cli
or
jp
jbe
fdiv
outsl
subb
jno
push
push
sub
push
xor
xor
and
sub
outsl
ljmp
cmp
cmp
aas
jl
inc
push
inc
inc
inc
inc
push
lcall
lcall
pop
sbb
or
sub
rclb
fcmovnu
int3
rorb
cld
lret
xlat
xlat
into
int3
adcb
rcrl
fcomp
aam
ljmp
cld
loop
sti
movsb
stos
add
stc
das
cli
push
std
out
cld
lock
in
cli
out
lea
mov
test
xchg
test
push
xchg
xchg
xchg
nop
xchg
adc
jmp
xchg
xchg
popf
mov
mov
add
cmpsb
jmp
scas
test
pop
mov
stc
add
cmpsl
inc
push
inc
inc
dec
ja
dec
pop
ljmp
shrb
inc
dec
cmovp
decb
adc
xor
add
insl
cli
aaa
sbb
jle
push
mov
jecxz
jl
jne
jb
inc
imul
insl
ja
jmp
push
dec
mov
add
xchg
inc
add
movlps
inc
cmpsb
inc
jle
or
push
add
sub
aas
and
aas
xor
es
adc
mov
xor
add
sub
mov
aaa
iret
ret
and
rcl
lock
mov
add
rol
fcoms
add
ret
int
sbb
ret
cld
adc
or
out
jmp
div
std
push
cld
jmp
mov
hlt
repnz
add
div
cmc
repnz
ljmp
out
lock
pop
dec
push
rcrb
fwait
orl
rcr
fst
xchg
leave
pushl
iret
adc
aad
lcall
pusha
aaa
jge
lock
jne
aad
loopne
lock
fprem
loopne
out
cmp
push
push
pop
xor
rcrl
push
popa
add
mov
cltd
ret
xchg
jo
std
ja
sub
mov
xchg
add
lods
mov
push
pop
lock
mov
in
leave
flds
aad
or
mov
into
aam
jmp
int
out
lret
pop
adc
jg
cmp
sub
leave
movl
inc
mulb
lock
and
add
or
es
cmpsb
scas
je
push
push
push
or
inc
add
and
fwait
sarl
test
in
mov
out
mul
icebp
in
sti
cld
push
jg
enter
inc
in
loopne
add
add
jo
imul
outsb
fs
add
call
jnp
insl
addr16
dec
pusha
mov
imul
cmp
adc
lcall
data16
push
push
sbb
or
or
addb
sub
out
inc
into
rol
or
inc
ror
pusha
push
jge
cmc
lcall
push
jno
add
je
inc
jle
jbe
outsl
xor
sahf
test
sbb
and
imul
rcr
lret
add
add
xchg
iret
add
addl
jl
imul
pop
jl
cmp
jns
adc
sub
cmpl
jns
xchg
add
ja
jg
add
mov
movsl
mov
call
movsb
test
mov
sti
loop
scas
add
sbb
add
jbe
mov
and
js,pt
aaa
cmp
into
incb
data16
and
cs
jb
push
scas
push
mov
or
inc
pop
pop
push
inc
pusha
sbb
mov
sbb
lret
adc
fcompl
decb
faddp
sbb
int
add
ret
mov
adc
loope
repz
aam
ret
cltd
lock
fdiv
lcall
add
fcmove
mov
enter
cmpsl
loope
jle,pn
push
add
pop
popa
add
push
or
push
inc
and
in
decl
push
test
movsl
scas
mov
add
push
push
jle
dec
add
xchg
dec
add
jb
xor
sub
int3
insl
test
fwait
pusha
arpl
js
push
cmpsb
push
pop
loopne
incl
pop
push
add
cmp
push
dec
dec
cmp
jl
bound
fiadds
inc
loope
push
decl
xchg
mov
loopne
mov
ja
xchg
jg
add
xchg
int3
enter
fxch
sahf
scas
mov
mov
in
sbb
sbb
cmp
cmc
in
cmp
rolb
cli
mov
or
lock
mov
inc
clc
mov
and
sub
pop
push
inc
cld
or
sub
add
add
test
sarl
orb
sbb
pop
push
inc
pusha
or
repnz
mov
call
clc
fxch
fcmovb
adc
nop
out
cmp
decl
data16
xor
add
shlb
stos
pop
lock
adc
jmp
add
fdivr
dec
cli
adc
push
pop
pop
pop
adc
sub
adc
pop
inc
add
or
push
mov
adc
jae
or
xor
xor
cmp
loop
cmpb
and
lock
out
jmp
cmpsl
mov
sahf
fdivr
or
hlt
icebp
out
lock
jecxz
lock
movsl
clc
fdiv
pop
mov
add
fcmovu
iret
repnz
add
fstp
shrb
or
into
stos
sahf
mov
cmp
xor
aad
add
add
adc
movsl
add
add
insl
lds
inc
add
outsb
add
push
add
xor
clc
scas
add
clts
add
add
add
and
call
mov
into
push
jno
add
popa
dec
mov
nop
push
add
adc
mov
das
cmpsb
adc
push
pusha
xchg
les
jbe
add
cmp
add
mov
inc
shrb
and
sub
add
xchg
rclb
lret
pop
sub
add
add
add
mov
lcall
and
add
nop
push
andb
add
push
jge
sbb
or
mov
repnz
outsb
xor
fists
or
add
pop
push
sbb
and
add
push
leave
ficoms
les
or
adc
cmp
das
cmp
push
and
sub
sub
xor
or
add
decl
aaa
sahf
sub
ds
push
push
cs
hlt
add
pop
cmp
or
addl
aas
adc
add
and
cmp
sub
rcll
mov
mov
adc
mov
push
mov
popa
push
push
xor
mov
or
insb
subb
cs
xchg
xchg
adc
pop
jl,pt
xor
xor
mov
je
pop
cld
jo
pop
add
pop
add
sbb
or
add
out
call
ss
pop
sbb
ud2
sbb
nop
pusha
dec
xor
jg
std
sbb
add
add
pop
add
inc
or
or
push
mov
sbb
add
add
or
sbb
add
push
ret
add
cmpsb
ljmp
push
sbb
mov
cmp
or
inc
add
dec
inc
sub
sbb
fidivrl
pop
push
sbb
push
mov
data16
repnz
push
inc
mov
pop
fadd
pop
cld
testb
add
mov
add
loop
and
sub
test
pop
or
aam
xchg
mov
ds
sub
cwtl
jg
xchg
and
and
mov
lds
sub
and
jo
pushl
das
cs
das
cmp
sub
and
lock
cmp
scas
ja
or
sub
or
jp
xlat
sar
ss
xor
xor
xor
mov
sub
test
mov
pop
pusha
sarl
shll
or
incb
inc
nop
xchg
inc
and
dec
in
aas
or
cmp
xor
popa
push
or
lods
std
scas
inc
cmp
add
repnz
int3
pop
push
dec
dec
xchg
xor
add
sbb
xor
adc
sub
mov
mov
and
inc
add
pop
daa
lods
sbbb
fs
xchg
xchg
inc
ss
enter
cld
idivb
hlt
cmp
cmp
cmp
cmp
pop
sub
or
mov
push
sbb
add
es
cmp
or
incb
shrb
aas
adc
aam
aas
ds
add
pop
push
mov
cmp
and
pop
test
cld
fwait
popa
sti
sbb
push
push
inc
xor
inc
sub
cld
decl
sbb
movswl
mov
inc
adc
push
sbb
and
and
js
inc
jg
cmp
ljmp
addr16
xchg
pop
stc
sbb
mov
cli
aaa
cld
adc
sbb
and
sbb
adc
icebp
outsl
sub
adc
sbb
jbe
adc
push
sbb
inc
roll
mov
xor
lock
cmp
and
mov
add
dec
inc
jnp
lcall
adc
and
push
or
into
out
push
push
je
mul
in
fwait
inc
xchg
jbe
iret
mov
xor
inc
enter
add
leave
adc
ss
inc
lods
mov
fwait
pop
test
inc
fcomip
add
sbb
push
and
nop
pop
cmp
or
jo
jns
rclb
aas
lcall
push
outsl
js
adc
cmp
cmp
jle
inc
push
dec
rorl
mov
xor
enter
ss
push
xor
add
push
and
daa
dec
sub
add
in
jb
das
or
fnstenv
adc
mov
jo
inc
movsb
call
cmp
and
das
xor
add
loop
sub
ds
adc
mov
pop
or
sub
inc
outsl
mov
arpl
decl
lock
xchg
add
scas
push
dec
inc
lock
daa
nop
cmp
xor
das
jnp
or
dec
pop
mov
lods
scas
xor
dec
mov
mov
xor
sbb
and
sti
in
adcb
sbb
mov
sbb
dec
incb
push
ret
jg
orb
out
push
stos
cmc
dec
pusha
test
inc
mov
add
jl
cld
sbb
adc
mov
mov
mov
add
push
cmpsb
loop
jo
cmp
pushl
push
mov
ret
iret
and
popa
xlat
sbb
push
mov
iret
jb
add
and
push
dec
call
mov
adc
adc
insl
sbb
leave
cmpsb
idivl
adc
andl
iret
repnz
ds
mov
loopne
pop
or
add
cmpsb
pop
scas
mov
mov
jg
into
mov
pop
sbb
aas
repnz
mov
in
outsb
dec
mov
andb
dec
add
lea
dec
in
aas
jns
outsb
pushf
cmp
fcomip
and
add
dec
add
jo
push
xor
dec
ds
adc
cwtl
push
ret
jb
push
orl
add
pop
cld
ja
pop
jl
cmpsl
lcall
push
sarl
ja
loop
xchg
pop
mov
xchg
adc
fcomps
or
dec
xor
cmp
fucomip
mov
xchg
test
adc
cmpb
adc
es
bound
xor
ret
add
add
adc
sbb
outsl
lock
fistpll
or
jae
loop
andb
adc
push
pop
divb
mov
add
add
pop
add
das
mov
mov
inc
mov
mov
mov
cmp
sbb
ss
mov
mov
dec
mov
jp
pop
mov
sbb
js
inc
pop
orb
loope
and
pop
dec
mov
mov
ffreep
sbb
inc
movl
xchg
push
dec
leave
xorl
mov
leave
aaa
adc
ds
addb
aas
cld
das
adc
mov
dec
mov
or
dec
push
xchg
sub
jbe
add
movsb
cmp
mov
ds
or
dec
cmp
orb
or
inc
sti
shrb
mov
sbb
xorb
incl
xor
xchg
push
pop
rorl
sub
int
inc
sub
push
into
cs
sbb
dec
inc
inc
push
push
mov
adc
adc
ss
mov
aas
dec
pusha
fiaddl
dec
rolb
sub
mov
cmp
pop
leave
or
cmp
mov
movb
mov
push
push
iret
mov
and
pop
sbb
mov
mov
pop
inc
and
jns
add
inc
dec
sbb
dec
sbb
xchg
rorb
cmpb
outsb
sbb
hlt
or
shlb
inc
push
add
mov
or
lods
loopne
rolb
lahf
jb
inc
push
sbb
cmpb
mov
or
pop
adc
cmpsb
inc
leave
cmp
xchg
mov
sbbl
sbb
ret
pop
mov
sbb
sub
adc
xor
mov
ljmp
mov
sbb
jb
enter
inc
mov
add
mov
sbb
add
roll
ret
inc
testb
inc
lock
mov
ss
add
loopne
pushf
outsb
scas
cli
aaa
in
inc
xchg
mov
push
mov
les
les
roll
push
test
inc
xor
mov
add
add
sbb
addb
icebp
andl
dec
or
add
scas
or
loopne
mov
inc
sub
outsb
mov
jg
andb
rorb
bound
aas
inc
inc
and
leave
pop
cmp
mov
dec
inc
pusha
cmp
xor
test
adc
sbb
rcrl
inc
jg
pop
or
and
sub
mov
fisttps
add
xchg
aad
pcmpeqb
inc
in
mov
sti
pop
xchg
push
pusha
or
push
inc
rcrb
inc
adc
xor
jmp
orl
pop
add
rolb
inc
addl
xor
add
mov
aas
gs
cs
inc
test
es
sub
pop
lock
mov
iret
in
push
mov
add
cmpsb
dec
jbe
sbb
add
pusha
je
mov
dec
and
incl
mov
pusha
daa
xchg
mov
outsb
dec
dec
push
and
add
addb
and
pusha
xor
sbb
stos
sahf
inc
mov
inc
mov
ds
add
leave
into
call
rolb
adc
mov
dec
add
lods
addb
ja
movsb
repz
adc
mov
adc
ja
lods
call
je
add
mov
hlt
push
dec
mov
and
sub
dec
adc
stos
mov
ds
push
dec
rolb
or
shlb
lret
loopne
cld
mov
mov
adc
mov
xor
pop
and
fs
lcall
cmc
out
aam
and
out
pusha
add
jo
dec
mov
jmp
push
loopne
mov
hlt
adc
or
inc
sarb
lock
xchg
and
lret
or
mov
add
add
je
clc
decl
mov
inc
mov
or
int3
mov
lret
lea
aad
ljmp
and
add
inc
and
pop
es
sbb
or
mov
mov
and
push
mov
or
push
inc
sar
or
add
sbb
dec
sbbb
mov
hlt
scas
mov
add
aad
sbb
outsl
xchg
mov
dec
inc
movlhps
push
adc
scas
in
loope
pop
cmpsb
inc
and
iret
stos
pop
sbb
fistps
mov
pusha
ja
add
pusha
mov
add
mov
inc
outsb
pushf
movsb
les
push
cmpb
sbb
pusha
push
shlb
and
add
loope
cmpl
stos
leave
cmpb
and
decl
fidivrl
mov
dec
mov
aad
cli
mov
mov
or
test
pop
mov
pop
ret
filds
or
mov
add
mov
jl
and
mov
push
adc
filds
add
and
inc
pop
loopne
pop
rcrb
pusha
stos
pop
hlt
ja
push
loopne
add
and
popa
add
sbb
adc
jmp
repz
popa
add
pop
adc
push
sahf
adc
push
pusha
adc
adc
cld
jmp
sbb
adc
adc
dec
jns
sbb
clc
pushl
xorb
dec
mov
mov
sahf
xor
sub
jl
and
roll
sub
das
repnz
and
sbb
jecxz
pop
dec
jle
mov
sahf
clc
push
stos
outsl
clc
fwait
mov
add
aam
adc
xchg
jnp
inc
ret
pop
xorb
pop
adc
imul
xor
jg
cmpsb
dec
pusha
or
sub
sub
or
pavgb
mov
pop
stos
ret
or
adc
loopne
ljmp
add
sbb
xchg
add
add
stos
pop
imulb
and
dec
lret
push
sub
mov
sti
pushf
inc
inc
and
adc
inc
push
xor
push
negb
addb
mov
xor
cld
pop
or
mov
and
and
inc
adc
decl
div
add
mov
pusha
jno
inc
into
lods
clc
filds
dec
out
xor
and
cli
pushf
and
outsb
popa
add
add
aam
jg
je
clc
stos
jp
add
adc
or
adc
inc
jmp
ss
adc
ds
sbb
lods
ljmp
push
push
xchg
pop
sbb
das
adc
xchg
testb
jno
loopne
les
addb
lcall
incl
add
cli
dec
adc
xchg
add
jno
add
mov
add
mov
add
cwtl
and
inc
and
push
and
rolb
mov
mov
sbb
mov
cwtl
and
out
fidivl
push
add
and
pop
cli
pusha
jp
filds
incl
lock
adc
int
repz
xor
or
ret
inc
jns
add
push
imul
and
lods
push
xchg
loop
les
add
mov
pop
cmp
and
cmp
xor
jb
cmpsb
xor
add
sub
rorb
add
mov
lcall
sub
jnp
push
dec
and
pop
inc
xor
jle
add
mov
mov
inc
or
rcrb
xor
adc
sbb
sbb
xchg
pushf
cmc
mov
xor
and
test
push
pushf
ret
movsbl
push
pushl
or
and
and
mov
sub
icebp
pushl
jae
mov
ret
and
push
jg
mov
xchg
mov
dec
shll
pusha
sub
mov
mov
incb
xor
stc
mov
jo
jo
jg
and
adc
fcompl
pop
inc
inc
push
adc
in
clc
stos
mov
orb
cmc
fwait
filds
push
and
pop
fs
xor
or
fbstp
mov
xchg
ds
mov
rcrl
rcll
or
xor
cmp
js
hlt
adc
and
call
jbe
xchg
adc
mov
cld
das
pop
nop
mov
sbb
add
cld
fisubs
cmp
sub
leave
ss
or
cmc
push
fildl
movl
mov
test
fidivs
jae
push
mov
sbb
jp
push
cs
push
pop
icebp
sbb
mov
mov
adc
jbe
pop
and
sbbb
stos
jg
and
mov
loop
add
mov
cmpsl
add
decl
movsb
ret
mov
mov
mov
je
cmp
mov
push
and
ds
scas
jp
test
testl
lock
add
mov
insb
fs
or
mov
ja
addl
mov
pusha
pusha
ss
shrb
xor
pop
pop
andb
leave
outsl
outsb
loop
dec
mov
mov
hlt
outsl
ss
dec
rcrb
inc
push
mov
cli
sbb
sub
arpl
or
or
roll
sbb
mov
mov
dec
xor
xchg
jae
aas
add
popa
mov
inc
mov
jg
pop
and
movzbl
dec
mov
add
icebp
scas
lock
jb
inc
adc
ret
push
mov
xor
ljmp
or
mov
mov
jns
xorl
cmp
inc
sbb
test
cld
pop
pop
jns
lret
test
cs
mov
adc
cmp
push
inc
inc
push
test
rcrl
dec
mov
std
pop
ds
leave
push
ds
dec
jb
pop
adc
or
pop
loopne
or
sarl
nop
push
ret
mov
sbb
lock
fbld
xor
sbb
pop
jns
nop
pusha
or
hlt
push
mov
mov
nop
mov
add
or
mov
sub
aaa
mov
scas
shrl
inc
sarb
ljmp
sub
dec
adc
into
movsb
mov
adc
mov
call
jno
roll
pusha
sbb
pop
rcrl
add
jp
mov
incl
leave
mov
mov
add
pop
shll
inc
lcall
mov
mov
je
jno
xorl
js
fsubrs
xor
mov
and
outsl
cli
push
into
popa
or
andl
add
xor
roll
jne
cmp
movsb
out
mov
pop
popa
icebp
add
sbb
fs
and
adc
leave
add
mov
xchg
rep
xchg
add
pop
add
adc
jmp
outsb
rorl
mov
add
insb
das
cli
shrb
test
push
sbb
pop
fcomps
push
pop
std
pop
jle
adc
xchg
or
rorb
push
push
inc
cld
sbb
xor
dec
mov
sbb
adc
roll
pop
xchg
leave
jae
lods
mov
mov
add
insl
iret
mov
inc
dec
mov
scas
sbb
ja
inc
mov
clc
inc
adc
jg
mov
pop
loop
ja
add
adc
mov
pop
xchg
scas
add
sbb
call
cmpsb
xor
adc
jbe
pop
outsb
jl
or
xor
pop
jnp
xor
jge
or
js
add
or
lea
js
aas
cmp
push
das
mov
das
cmp
sub
sbb
rcrb
dec
jecxz
xor
pop
add
shl
mov
sbb
push
imul
mov
ljmp
call
adc
adc
push
roll
and
pop
hlt
jb
inc
dec
data16
or
dec
fiadds
and
mov
jp
add
adc
leave
aaa
pop
clc
insl
fwait
cltd
mov
pop
and
add
inc
sbb
pop
mov
xor
push
rcr
sbb
jne
pop
push
aas
dec
adc
xchg
in
cmp
andb
mov
scas
bound
incl
xchg
rcrb
and
push
testb
nop
icebp
aad
add
inc
cmpsb
andb
pop
mov
mov
enter
or
inc
aad
shrb
inc
xchg
push
mov
arpl
orb
add
js
mov
mov
and
cwtl
sbb
lret
cs
outsl
push
or
mov
xorl
jno
inc
and
incl
jno
shll
pop
jno,pt
sbb
dec
lock
sbb
push
dec
mov
lea
dec
jl
sub
xchg
andb
dec
mov
imul
test
lahf
sbb
scas
fcomps
jb
aas
xorl
ja
adc
mov
pop
sub
aam
cmpb
push
add
dec
sbb
xchg
aas
lods
xor
adc
pop
cmpb
mov
jmp
push
ret
or
or
je
add
stos
pop
shl
pop
push
xor
add
in
dec
pop
ds
pop
ret
push
cmp
sbb
roll
and
add
ret
add
and
cmpsb
jmp
sarb
ja
pop
ljmp
inc
add
push
dec
or
dec
inc
add
loope
adc
xchg
jge,pt
loope
push
push
mov
and
mov
mov
aas
xchg
push
popa
push
mov
adc
jp
rorb
es
sbb
movsl
loopne
jne
mov
add
dec
add
adc
adc
xchg
std
mov
or
or
mov
incl
pop
jbe
movl
shlb
push
outsb
adc
cmc
rcrb
loop
mov
imul
ficoms
pop
push
push
imul
or
xchg
add
sbb
dec
mov
int
mov
mov
sahf
rol
pop
or
clc
pop
cmpsb
clc
adc
push
rorb
sahf
sbb
xchg
ds
sub
or
movsb
mov
mov
pcmpgtb
test
add
aam
add
mov
ljmp
test
and
pop
cmp
sbb
rol
scas
rcrw
outsb
adc
data16
push
mov
lods
adc
pop
jb
js
inc
add
pop
loopne
jle
dec
and
mov
dec
shlb
adc
add
test
lock
jg
push
aaa
push
adc
push
dec
enter
sbb
mov
push
adc
bound
adc
and
or
push
dec
int3
push
xorl
das
cltd
cmp
ljmp
scas
sub
orl
pop
mov
subb
mov
push
or
fsubrs
cli
adc
mov
fwait
push
fbstp
xchg
rolb
push
into
cld
incl
in
adc
inc
iret
mov
sbb
or
adc
scas
cmpsb
mov
inc
cmp
add
inc
movsb
inc
add
adc
mov
mov
jno
inc
int3
xchg
add
add
rolb
roll
ret
inc
into
jg
fucomip
or
je
movsb
add
addl
stos
stos
iret
add
loope
out
js
add
add
or
push
ret
ret
jl
jno
push
outsl
ss
enter
roll
incl
outsl
jnp
adc
sbb
jb
sbb
add
mov
inc
sub
pop
leave
sbb
pop
sahf
fmull
dec
loopne
ds
incl
jge
loop
xchg
sub
scas
repnz
pop
inc
push
popa
inc
push
sub
dec
adcb
push
add
lock
sub
enter
mov
mov
stos
jp
mov
xchg
mov
mov
adc
scas
mov
mov
add
push
add
pop
inc
popa
es
inc
sarb
add
rcll
ds
dec
dec
add
inc
add
jnp
loopne
ret
les
inc
jl
rolb
mov
cmp
and
push
pop
rorl
push
inc
sti
or
pop
inc
loopne
pop
add
mulb
sbb
inc
lds
push
add
dec
sub
and
leave
scas
mov
jle
loope
jmp
adc
sbb
outsb
data16
iret
pop
cmpb
pop
xchg
or
or
pop
and
pop
push
push
pop
add
je
and
inc
add
inc
int3
mov
push
sbb
mov
pop
and
add
adc
add
push
aad
push
push
hlt
scas
cmp
loopne
push
push
mov
inc
mov
addb
push
outsb
jbe
jbe
mov
mov
adc
add
add
mov
je
jg
je
push
mov
ret
dec
inc
add
pop
ret
popa
xchg
rcll
aam
add
and
ss
jne
adc
dec
mov
jae
and
inc
int
call
in
ljmp
dec
mov
adc
cmp
xchg
dec
roll
ljmp
push
add
sbb
push
fadds
mov
dec
mov
mov
rolb
push
sahf
xor
push
out
jl
add
and
sbb
pusha
xor
bound
dec
add
mov
dec
inc
shll
jmp
pop
stos
hlt
add
lret
add
mov
data16
sbb
push
xor
adc
pop
inc
xorb
inc
shlb
inc
sarb
imul
sub
jns
push
adc
jne
imul
push
inc
inc
ljmp
pop
mov
scas
adc
add
or
ljmp
jle
cmc
inc
push
enter
and
add
loopne
ljmp
cli
sub
cld
add
loop
sbb
push
or
lcall
pop
mov
cltd
roll
or
into
add
sar
jg
jle
jns
xorl
sahf
mov
pop
dec
aas
clc
in
or
decb
jae
dec
ds
adc
ret
dec
mov
adc
pop
jno
mov
dec
ret
inc
inc
push
adc
jne
ljmp
add
mov
dec
dec
hlt
icebp
gs
and
outsb
push
mov
test
and
pusha
and
mov
fidivrs
shrb
mov
neg
sbb
sub
pop
xchg
or
mov
ret
nop
add
jle
pop
icebp
scas
pop
jle
mov
jo
outsb
sbb
add
mov
jb
and
or
sbb
lea
and
mov
push
orl
sub
sbb
inc
xchg
xchg
xor
in
and
mov
mov
sbb
adc
cmp
mov
hlt
sbb
pop
add
xorb
push
jle
push
int3
cld
out
dec
mov
clc
enter
sub
jmp
mov
cltd
subb
xor
push
xchg
push
mov
and
hlt
pop
fnstenv
adc
adc
add
push
inc
sbb
std
and
ds
rorl
aaa
push
xor
jbe
lcall
xor
inc
mov
push
mov
mov
cmp
add
mov
or
jle
adc
popa
or
mov
and
jb
rorb
pushf
adc
and
icebp
punpcklbw
adcb
xorb
inc
or
pushl
bound
or
adc
adc
or
icebp
lock
cwtl
fbstp
bound
fcomip
pushl
push
and
cmp
add
or
inc
pop
mov
inc
ja
nop
clc
sbb
inc
jmp
int3
bound
inc
xlat
pushl
adcb
adc
jo
mov
pop
sbb
or
jno
inc
sarl
dec
rcrb
push
add
push
mov
cmp
cld
cmp
mov
cmp
lret
adc
sbb
or
mov
mov
inc
mov
test
push
insl
pop
inc
or
mov
in
shlb
or
push
test
mov
pop
in
bound
loopne
imul
sub
fisttps
sbb
and
add
and
cwtl
push
jae
cmp
stos
cmp
mov
mov
aas
out
ret
mov
call
jno
and
pop
cli
add
pop
wrmsr
movl
pop
jg
inc
jl
cmp
dec
add
bound
push
dec
rclb
movsl
jno
push
pusha
or
xchg
mov
add
add
xor
jbe
jb
jl
decl
and
jo
add
add
pop
mov
into
ret
or
loop
sti
dec
inc
or
dec
adc
add
mov
insl
decl
jnp
cltd
rcll
push
shll
or
push
pusha
scas
mov
ss
es
divps
loopne
clc
and
imul
push
ret
mov
jmp
mov
dec
xor
enter
cmp
pop
mov
add
sub
adc
pop
cmc
pushl
cmpsl
and
loop
inc
push
sbb
mov
dec
fcomip
mov
outsb
inc
dec
jae
add
aas
dec
roll
pop
loopne
jmp
mov
das
or
out
arpl
pop
fadds
out
xor
dec
shll
push
sbb
or
and
out
int3
push
sub
or
pop
rclb
xor
inc
out
es
xchg
dec
jg
push
sbb
test
mov
mov
jg
inc
jg
loopne
ret
push
ljmp
inc
push
add
xor
idiv
outsl
or
mov
and
add
adc
push
leave
into
lock
movb
cmp
aam
jae
repnz
fbstp
jno
repnz
pop
xchg
add
and
mov
push
jp
mov
hlt
dec
insl
inc
add
dec
and
or
jae
mov
movsb
push
dec
push
dec
push
ret
adc
ret
push
dec
pop
lds
add
add
icebp
jg
push
adc
xor
into
outsb
lret
mov
add
leave
cs
pop
cwtl
mov
dec
add
rcl
inc
pop
mov
and
inc
jae
ret
jle
fisttps
mov
or
shrb
mov
or
pop
dec
iret
push
rcll
add
jno
ret
sbb
inc
sarb
das
rolb
push
inc
and
pop
icebp
js
sub
mov
or
mov
ds
or
sbb
adcl
loope
pusha
sub
ret
aas
sbbb
jbe
jmp
mov
pusha
dec
inc
movsb
pop
mov
sub
pop
jns
push
dec
pusha
fwait
loopne
add
std
neg
jo
mov
xor
add
subb
in
inc
or
mov
or
aas
pop
rcll
dec
inc
bound
xchg
loopne
ja
jae
inc
add
fsubrs
jle
inc
ds
jecxz
mov
push
popa
pop
push
adc
mov
add
add
inc
push
and
or
aaa
ljmp
les
nop
cmp
add
or
dec
ljmp
push
sbb
dec
add
cmpsb
add
inc
xchg
ret
aas
add
inc
pop
andw
sub
inc
cs
sbb
orb
ds
fdivs
jge
ljmp
int3
inc
int3
ret
cmp
add
inc
aam
stos
mov
cmpb
jbe
add
push
adc
xchg
fadds
push
add
fistpll
pop
movsb
mov
inc
icebp
add
hlt
xorb
aas
push
dec
cld
fwait
mov
cmpsl
add
dec
mov
mov
incl
add
mov
dec
adc
bound
arpl
test
xor
add
hlt
or
push
sbb
cmp
adc
insl
mov
push
inc
outsl
and
mov
pop
sbb
lods
popa
push
inc
movsb
xchg
arpl
fdivl
push
outsl
shll
cwtl
in
cli
pop
out
ret
roll
sbbb
dec
or
and
dec
test
inc
bound
outsb
mov
es
test
mov
mov
das
cld
sbb
dec
cmpb
xchg
xchg
and
mov
or
dec
add
push
decb
popa
xchg
sub
add
xor
shr
add
cwtl
inc
dec
rorl
jle
aad
add
xchg
push
inc
adc
inc
fdivr
in
mov
sahf
push
outsl
adc
add
add
sbbl
inc
jp
xchg
aaa
pop
dec
aas
pop
xchg
inc
popa
inc
lods
clc
mov
inc
or
or
loop
stos
mov
or
aaa
pop
cmp
xchg
mov
inc
popa
sbb
data16
insl
lcall
shll
je
add
push
inc
inc
lea
jl
fldl
push
pop
inc
or
mov
sub
leave
mov
iret
mov
outsl
and
pop
inc
push
cmp
add
pop
pop
jmp
or
ret
orb
dec
pop
add
or
aas
and
pop
sar
incl
add
adc
pop
ds
push
add
add
push
cmp
mov
add
jle
mov
pop
inc
mov
mov
add
sbb
sbb
cmpl
inc
push
push
add
pop
or
lods
inc
dec
xchg
add
or
pop
adc
mov
jb
sbb
incl
mov
add
mov
orl
inc
rcrb
inc
andl
mov
add
sbb
or
shll
js
adc
ljmp
push
add
dec
ror
mov
dec
add
adc
movsl
dec
shlb
inc
add
cwtl
inc
cld
mov
mov
inc
and
inc
imul
inc
add
pushl
sub
aaa
cmp
cmpb
mov
inc
andl
and
push
jb
ret
mov
loopne
cwtl
fs
rcrb
pop
ljmp
adc
inc
inc
cmp
rcll
and
jns
sbbb
pop
mov
push
sbb
aas
cmp
movl
iret
xchg
add
loopne
pop
dec
pop
inc
or
push
pop
mov
int3
add
negl
push
repnz
or
lea
ss
test
dec
aas
stos
in
ljmp
pop
mov
inc
add
inc
aaa
cmp
xchg
adc
mov
or
adc
testb
pop
rorb
mov
cld
mov
mov
inc
pop
and
inc
aam
inc
out
push
inc
xlat
orl
jb
cs
jns
sbb
inc
and
jle
mov
popa
fwait
mov
cmp
mov
add
stos
addb
mov
aas
and
fildll
aaa
mov
mov
mov
dec
nop
loopne
cwtl
sbb
cli
sub
andb
rclb
jae
dec
ds
ret
add
and
rolb
add
sbb
sar
outsl
das
fsubr
sub
hlt
das
loopne
shlb
cmpsb
push
pusha
sub
rolb
cs
std
popf
sar
cs
pop
add
mov
sub
xchg
xor
test
in
xchg
inc
or
adc
in
or
loope
sbb
cli
mov
mov
and
fcomip
incl
and
or
add
mov
inc
sbbb
push
cmpsb
loop
inc
jg
in
xchg
out
push
ljmp
add
mov
and
inc
add
add
lret
or
mov
mov
mov
mov
scas
sub
or
nop
mov
and
mov
and
inc
or
mov
lods
pop
or
orb
push
loop
mov
xchg
sbbb
cmc
xchg
sbb
data16
jg
sbb
mov
lret
add
jno
shrb
fstpt
aaa
cld
cs
mov
and
sub
dec
pop
sub
jb
ret
jp
push
aaa
outsb
cli
repnz
call
and
xor
or
shll
inc
aaa
mov
mov
mov
mov
iret
mov
or
add
xor
hlt
lcall
add
adc
or
rcl
pusha
sub
add
ds
shrb
shll
aad
subb
mov
enter
mov
mov
test
mov
call
mov
and
dec
mov
mov
pop
and
sbb
mov
adc
clc
push
jp
pop
push
push
push
sbb
add
aam
es
or
mov
imul
call
jo
sub
stos
inc
sub
add
or
push
add
mov
or
push
push
or
pop
add
add
and
sub
jo
cmp
rcrl
mov
sbb
test
es
ret
adc
jg
cmp
adc
xor
sub
sbb
add
cwtl
rcrl
xor
jb
pop
mov
sbb
mov
aas
dec
adc
lock
inc
inc
cld
pop
mov
cmp
loopne
mov
xor
and
sbb
lcall
mov
and
mov
mov
or
mov
adc
xor
push
dec
and
xchg
shll
lcall
adcb
mov
push
mov
clc
and
adc
movsb
add
push
mov
outsl
xchg
mov
pop
pop
nop
pop
pop
pusha
xor
push
inc
pusha
sbb
mov
loopne
adc
inc
push
test
imul
xchg
add
addl
lret
ret
mov
rcll
nop
mov
cmp
push
xchg
pop
mov
pushf
pop
adc
mov
lods
mov
inc
or
orps
leave
mov
frstor
addb
and
or
push
inc
sub
jmp
pop
jg
push
ds
add
adc
mov
pushf
xor
repnz
inc
scas
lock
or
orl
mov
lock
adc
dec
pop
sbb
out
mov
leave
mov
xchg
mov
popa
pop
dec
pop
adc
mov
mov
lods
jp
movsb
std
lea
mov
pop
inc
stos
or
fwait
les
jl
mov
lea
std
ja
mov
add
mov
inc
and
xor
or
mov
lds
adc
cmp
loopne
mov
and
push
mov
mov
loopne
das
inc
xchg
mov
fsubrs
and
incl
cmp
call
pusha
sahf
nop
bound
jns
push
sbb
sub
outsb
out
bound
scas
das
inc
popa
test
or
add
out
mov
jns
sbbb
sbb
sub
dec
mov
pop
rorl
outsb
push
out
shlb
push
mov
sbbb
fistpll
add
addr16
adc
aas
or
add
push
fnstenv
push
cmpb
cmp
dec
mov
ds
mov
das
mov
lea
mov
jmp
sub
mov
stos
inc
fisubrs
mov
icebp
dec
xchg
push
das
add
or
or
jns
jg
push
add
stos
add
or
mov
mov
mov
or
xchg
mov
filds
pop
mov
dec
inc
add
add
fists
jg
xor
rolb
dec
rol
gs
add
jo
pop
mov
pop
sar
cmp
jb
pop
mov
mov
mov
mov
imull
dec
hlt
push
mov
and
imulb
shrb
jmp
xor
and
test
xor
mov
pop
sub
cli
out
cli
stos
and
or
mov
jns
dec
push
or
push
lahf
and
adcb
mov
inc
add
mov
dec
in
sub
mov
cmp
dec
sbb
xchg
add
adc
negb
cmp
add
inc
add
mov
inc
ret
jb
add
lods
loopne
les
add
pop
cmpsb
and
sub
jbe
add
imul
iret
scas
repz
and
fistps
fimuls
push
ret
mov
roll
and
adc
push
inc
add
lss
push
leave
mov
montmul
cmpsb
add
xchg
push
fisubs
lods
and
ja
adc
inc
leave
mov
in
pop
inc
js
mov
xchg
add
push
xchg
dec
mov
test
sar
or
adc
pusha
sbb
mov
sub
inc
lock
add
stos
jge
and
inc
xor
jg
das
sarb
and
leave
pop
repnz
js
xor
pop
cld
mov
rclb
mov
push
insl
loopne
inc
adc
push
cmp
enter
pop
cmpps
pop
add
push
or
adc
jae
push
rcrb
jp
push
pusha
test
or
dec
pop
jg
dec
xor
into
das
clc
das
clc
nop
adc
and
push
jg
sbb
xor
aaa
inc
inc
jg
jo
sarl
mov
rorl
aaa
cld
add
pushf
cmp
mov
mov
iret
aaa
mov
jnp
inc
stos
inc
jno
cmp
inc
xchg
or
inc
xor
jle
and
or
add
jns
xchg
push
data16
xchg
inc
push
sub
pop
orb
dec
ss
dec
xchg
or
dec
lock
ss
push
add
dec
jo
repnz
mov
iret
add
pop
stos
int3
adc
jp
lock
incl
cmp
pusha
and
nop
or
fcompl
mov
iret
mov
xor
cwtl
in
mov
stos
push
or
das
loop
setb
in
sub
ret
adc
lcall
inc
mov
mov
add
xchg
push
pop
imulb
je
mov
pop
nop
add
or
adc
clc
stos
or
jb
sbb
out
in
push
xor
les
mov
jg
incl
pop
lret
mov
scas
mov
outsl
push
bound
add
mov
pusha
adc
stos
mov
xchg
xchg
xor
aad
scas
adc
jne
pop
sbb
rorb
adc
jnp
push
ret
rcll
fmull
into
push
and
in
add
data16
add
pop
and
fldt
push
pop
or
push
addb
lret
and
mov
add
mov
lock
sub
pop
mov
mov
std
jno
mov
mov
xlat
add
lods
es
ss
jae
dec
outsl
das
aad
mov
mov
push
pushf
pop
sbb
pop
incl
jmp
dec
push
into
rol
inc
add
adc
mov
sub
pop
rorb
add
or
pop
nop
push
outsl
clc
pushl
jl
or
nop
sbb
sub
add
dec
lock
mov
xlat
popa
mov
push
mov
jg
cli
fists
mov
mov
mov
dec
add
cmp
push
inc
adc
std
sub
mov
push
leave
shlb
in
mov
fwait
jp
add
push
les
inc
movb
cmp
dec
xorb
add
push
mov
inc
jo
fnstcw
test
mov
mov
aaa
jno
push
aaa
or
sar
popa
jo
ja
lret
gs
out
nop
or
xchg
pop
sbb
mov
sbb
pop
leave
add
adc
mov
shrb
add
mov
int3
or
add
adc
or
dec
mov
push
or
push
or
lret
shrl
cmp
call
and
insb
xor
dec
add
popa
mov
jg
clc
out
or
rcr
jmp
add
mov
add
mov
rcrb
ret
bound
or
addb
lcall
subl
setbe
insb
cmp
mov
add
inc
xor
or
bound
inc
je
sbb
inc
xor
incb
add
call
ds
mov
cltd
das
adc
mov
movsl
mov
inc
inc
fildl
outsb
dec
or
mov
out
roll
subb
dec
iret
pop
nop
inc
mov
cltd
add
mov
lea
add
xchg
ds
orb
sbb
and
test
dec
add
adc
and
stos
lods
ja
jnp
dec
outsb
icebp
outsl
push
pop
inc
pop
ss
jmp
fiaddl
pop
lcall
rorl
cmpl
jnp
or
data16
sahf
bound
inc
imul
push
subb
jg
rclb
dec
aas
inc
jbe
add
or
sub
add
add
fidivrl
add
outsl
xchg
pop
cmp
push
mov
outsl
loopne
clc
adc
add
sbb
jns
add
test
aaa
inc
and
inc
mov
adc
subb
orb
arpl
dec
mov
mov
inc
sbb
mov
insb
shll
push
jno
aas
dec
dec
or
add
xchg
ja
mov
cmpsb
ret
sbb
pop
mov
cld
inc
addb
dec
adcb
and
inc
test
lcall
loope
xchg
pop
add
lods
hlt
test
jo
or
rolb
leave
mov
sbb
rolb
or
or
rolb
test
add
sarl
rcrl
es
pusha
xor
mov
into
sbbb
cmpsb
xor
lcall
inc
add
inc
add
mov
and
insl
insl
rcrl
dec
sbb
add
loope
loop
cmp
dec
adc
out
or
andl
scas
mov
mov
inc
sbbb
dec
add
or
push
cwtl
push
or
int3
add
mov
sti
in
pop
or
rorb
inc
iret
xchg
sbb
mov
dec
loopne
push
xor
add
mov
mov
negb
xorb
loope
fsubl
add
out
dec
leave
and
jg
adc
or
aaa
out
sub
sbb
insb
sbb
or
mov
out
mov
test
or
lret
mov
cmp
js
mov
dec
dec
sub
or
sbb
outsl
pop
orl
test
aaa
sahf
scas
in
fistps
aas
sbb
setle
inc
iret
sar
call
mov
loopne
dec
jecxz
dec
push
adc
add
add
sbb
or
mov
push
leave
xor
test
add
loop
pop
inc
push
movsl
andb
dec
pop
lcall
inc
sti
and
rclb
dec
loop
loopne
mov
std
or
pop
mov
adc
jecxz
push
addb
iret
orl
jbe
sub
addl
mov
rcrl
dec
cmp
cmp
dec
dec
aas
loop
mov
cmp
lods
mov
dec
pusha
add
or
mov
mov
sbb
ret
pop
mov
stos
mov
pusha
inc
or
or
mov
push
mov
mov
notb
pop
xorb
adc
mov
pop
aaa
pop
push
jo
inc
adc
fildll
cmp
jbe
push
cmp
dec
cmpb
sub
mov
mov
dec
or
cmpsb
das
fsubr
add
sbb
and
das
push
cld
in
mov
cpuid
dec
mov
xor
leave
pop
cmpb
xchg
jne
cld
mov
or
mov
add
paddd
adc
ret
or
jb
fimuls
cmp
call
and
shrb
loope
cmpl
push
loopne
outsl
data16
xchg
push
dec
push
mov
aaa
std
dec
inc
mov
sahf
adc
jno
into
add
pop
leave
xor
jne
mov
jb
add
sub
loop
das
mov
rclb
add
mov
and
add
push
sub
mov
scas
pop
lret
shlb
ljmp
mov
mov
xor
leave
inc
xorl
jno
adc
enter
pushf
mov
add
sarb
jg
mov
jg
loopne
subb
dec
incl
roll
rcrb
add
inc
sbb
inc
mov
aaa
dec
and
sbb
outsb
sbb
test
dec
loope
stos
add
stos
adc
add
mov
repz
push
mov
mov
add
mov
jge
rcrb
cmp
adc
inc
mov
mov
mov
mov
rorb
jae
inc
int3
xchg
dec
inc
mov
pusha
xor
out
call
dec
mov
ljmp
add
inc
or
mov
ja
mov
adc
cmp
mov
mov
push
cmp
push
mov
sbb
loop
push
out
rcrl
fbstp
fcoms
cmp
lea
mov
jo
aaa
adc
mov
or
adc
add
setbe
jbe
jno
cmp
add
xlat
lock
or
jo
mov
cli
and
xorb
jecxz
jle
pop
dec
sbbl
dec
lds
loopne
or
xorb
out
clc
or
jno
bound
mov
jmp
lock
xor
mov
push
lock
add
rcll
outsb
ret
inc
push
mov
ljmp
aaa
xchg
nop
fisubrs
adc
loopne
inc
stos
cmp
outsl
push
add
sub
rorb
mov
add
mov
js,pn
mov
add
and
add
and
shrb
mov
mov
sarl
xor
pop
push
push
nop
insb
cmp
jge
decl
lock
js
or
dec
ds
rcll
roll
add
shlb
inc
cwtl
mov
inc
xchg
mov
sti
push
aad
add
xor
add
inc
sub
push
scas
shrb
add
xchg
push
xor
mov
sub
mov
pop
cmpsb
or
scas
call
aad
sub
nop
loop
xchg
andb
lcall
jmp
inc
xor
mov
inc
icebp
push
mov
repz
dec
repnz
dec
xor
push
push
ret
lock
adc
shll
inc
inc
pop
clc
stos
pop
ret
add
mov
sub
jns
jg
inc
mov
js
add
jo
add
sbbb
or
test
cmpsb
sbb
iret
loope
sbb
das
clc
fcomip
cmc
xorb
adc
add
imul
loop
pop
jbe
ds
jbe
adc
xchg
mov
or
jg
icebp
push
inc
stc
dec
mov
rcrb
cmp
xor
aaa
adc
mov
mov
arpl
pusha
xchg
hlt
mov
add
add
jae
loopne
adc
add
out
dec
add
or
hlt
and
mov
jo
mov
mov
aas
inc
inc
sub
push
loop
lds
mov
ljmp
inc
xchg
push
push
stos
mov
movsb
inc
mov
pushf
repnz
rorl
add
iret
and
scas
cli
jno
dec
inc
add
xor
cmp
push
mov
out
xchg
and
or
add
inc
rorb
jbe
lock
add
adc
data16
shrb
jbe
je
in
cmpsb
sub
out
into
mov
jp
add
xor
and
scas
loopne
mov
imul
test
loopne
push
mov
aam
scas
jo
mov
fidivl
jbe
add
shrb
fmulp
inc
push
loopne
fxch
and
les
outsl
xor
lock
jo
sbb
and
fidivs
dec
adc
push
and
jbe
mov
nop
ja
add
leave
shlb
add
inc
loopne
mov
lods
adc
mov
fbld
or
mov
adc
add
mov
rcrl
push
loope
adc
dec
jb
xchg
jle
and
or
scas
inc
or
dec
ret
mov
nop
mov
in
mov
adc
jae
mov
push
ret
loopne,pn
push
lods
mov
mov
push
lods
lock
push
mov
dec
je
add
lods
mov
mov
adc
sbb
adc
sarb
jno
inc
lods
lods
rcrb
in
aaa
lcall
inc
aaa
fdiv
dec
mov
xorb
mov
cmc
jmp
fcoms
and
pavgb
pop
inc
rolb
fldcw
mov
aas
dec
mov
mov
popa
aas
dec
mov
fildll
and
jno
cmp
sbb
add
testb
pop
mov
arpl
add
xor
insl
insb
push
and
push
cmpsb
or
pop
les
mov
mov
popf
or
add
inc
dec
sahf
jge
pusha
std
cli
pop
pusha
xlat
mov
xor
inc
std
pop
and
mov
lea
ds
pop
cmpsb
decl
cmp
push
sub
pop
addb
add
jno
cmp
inc
icebp
ret
shlb
sub
cld
out
pop
adc
pusha
push
out
clc
stos
decl
xor
fistpl
adc
jno
jbe
incl
pop
aas
cmp
pop
test
ja
aas
repnz
shl
rorb
add
mov
mov
inc
push
mov
fimull
push
cs
adcb
in
outsl
sarb
sbb
aaa
leave
imull
add
mov
inc
fimuls
stos
dec
and
sub
bound
mov
adc
pop
loopne
cmp
imul
push
inc
pop
std
adc
das
mov
pusha
pop
mov
add
add
mov
cmp
pop
dec
xor
or
pusha
xchg
loopne
inc
dec
leave
xor
mov
cmp
mov
add
insl
cli
ja
rcll
dec
insb
pop
jle
add
sbb
jp
dec
sbb
ss
mov
adc
push
hlt
outsl
call
dec
rcrb
lret
inc
enter
adc
xor
outsl
mov
inc
jns
or
dec
lret
xchg
cli
lcall
jno
cmp
mov
mov
mov
or
xor
stos
add
cs
ret
subb
ret
push
or
xor
stos
hlt
mov
cvtps2pd
repnz
pop
add
test
sbb
repnz
sbb
xchg
dec
pop
inc
sbb
ljmp
jb
scas
jno
mov
and
sub
aas
sbb
jo
clc
xor
pop
adc
or
inc
push
mov
or
sbb
int
add
pop
mov
sub
pop
add
add
adc
adc
rorl
xorb
mov
incl
lock
jno
add
jns
mov
add
rclb
sbb
fld
push
shll
fnstenv
or
jb
push
ds
cli
ss
rorl
loope
jno
add
loop
imulb
jg
int
mov
add
andl
lods
adc
fstpt
jno
cmp
scas
add
aas
mov
aaa
pop
and
lds
or
and
cmc
cmp
jae
sub
and
jp
nop
aad
mov
test
jl
inc
add
dec
icebp
ss
mov
jnp
mov
arpl
jae
push
or
cmp
adc
xchg
pop
in
pop
mov
pusha
mov
add
adc
adc
leave
inc
cwtl
sarl
shll
and
add
mov
inc
dec
inc
sub
and
and
mov
and
leave
test
jbe
cmp
cmp
cmpb
add
or
add
jecxz
adc
lock
mov
les
sbb
adc
jb
lds
xadd
dec
rcrl
popa
fwait
sbb
dec
fwait
xor
outsb
scas
xor
mov
sbb
cmp
sub
gs
mov
add
and
ret
or
sbbb
shlb
inc
rcrl
dec
mov
pop
sbb
adc
scas
add
inc
jno
adc
hlt
subl
push
imulb
je
mov
stos
cmpl
dec
jb
aad
fcomps
and
sbb
sbb
dec
dec
inc
or
jno
or
testl
dec
cwtl
push
aam
inc
and
jp
lea
sbb
jb
jae
push
inc
int3
mov
inc
ljmp
push
dec
aaa
mov
cmp
mov
scas
inc
sbb
mov
lods
mov
ljmp
sbb
repz
or
or
push
xor
dec
ljmp
mov
dec
or
add
xchg
int
sbbb
call
xchg
fiadds
push
lret
lods
clc
sbb
xchg
push
orl
mov
roll
out
add
xor
mov
add
jns
cli
es
clc
mov
add
ds
mov
mov
roll
mov
adc
mov
shrb
or
sbbb
cs
inc
lret
jbe
mov
dec
sahf
and
jb
stos
pop
and
pop
or
add
pop
icebp
mov
add
inc
orl
mov
lock
test
bound
xchg
fstps
movsb
jo
or
lcall
mov
rolb
and
fiaddl
xchg
stos
inc
mov
inc
xor
mov
add
dec
ret
pop
add
aaa
inc
inc
call
and
add
mov
or
jo
mov
inc
shll
in
inc
inc
fbstp
hlt
cmp
mov
mov
ds
shlb
hlt
add
jne
mov
and
push
test
ret
es
add
cmp
rolb
dec
inc
loop
shr
sbb
test
adc
in
dec
mov
popa
xchg
dec
mov
push
mov
cmp
add
mov
rolb
cpuid
and
jno
adc
enter
add
adc
add
adc
mov
push
xor
inc
sbb
sbb
ret
pop
or
xor
jp
sub
dec
rolb
inc
adc
mov
push
add
or
enter
ja
inc
add
jg
shlb
fs
pusha
mov
hlt
pop
scas
add
dec
jo
imul
movsb
push
mov
add
cli
aas
pusha
mov
pusha
add
push
scas
add
xchg
jbe
outsl
sbb
push
enter
jge
outsl
add
test
ret
sbb
mov
pop
and
adc
dec
and
enter
sbb
jle
pop
push
add
ret
mov
xor
arpl
push
addb
and
dec
mov
ret
loope
add
pop
or
inc
add
push
loopne
push
add
inc
add
jg
dec
hlt
ss
adc
dec
hlt
dec
cs
jg
clc
and
inc
fisttps
orb
outsb
pop
mov
into
sbb
and
decl
add
sbb
mov
pop
jb
or
or
stc
mov
loopne
adc
lcall
mov
add
loope
push
pushf
adc
pop
and
and
pop
movb
dec
jae
push
jns
inc
push
xor
xchg
add
push
psllw
sub
cli
xchg
cs
jle
les
mov
pop
mov
pop
mov
add
and
pusha
push
push
push
mov
sbb
pop
icebp
and
add
dec
mov
mov
fidivrs
adcl
adc
popa
or
sbb
inc
add
or
pop
loop
out
and
loopne
push
pusha
pop
add
sbb
or
or
std
call
push
pusha
xor
dec
cld
shl
xchg
jle
dec
ss
inc
xchg
pushl
add
sbb
add
adc
add
add
cmp
out
adcb
push
mov
xchg
pusha
inc
popa
aas
movsl
addr16
push
jbe
dec
mov
divb
rclb
add
add
or
inc
leave
stos
je
std
sbb
es
dec
inc
adc
sbb
cmp
les
pop
shlb
cmp
or
ljmp
add
add
jb
mov
push
clc
aaa
mov
rorb
push
rcrb
cli
add
rolw
sbb
repnz
or
jno
cmp
add
and
enter
stos
and
inc
jp
mov
fistps
cmpl
pop
dec
movsb
ret
xor
mov
and
rolb
shll
and
push
faddl
imul
test
out
adc
les
inc
addr16
orb
mov
test
inc
mov
inc
ret
adc
inc
push
and
xchg
mov
mov
pop
rcrb
add
sbbb
inc
cli
pop
aas
xchg
popa
add
and
ret
mov
jo
movsb
mov
add
fadd
stos
xor
dec
xor
push
shl
push
xor
aaa
outsb
jb
cmp
mov
inc
test
mov
mov
cmp
cmp
incl
das
mov
mov
and
decl
inc
ss
inc
pop
bound
sarb
mov
aaa
je
loope
loopne
shll
push
sub
inc
inc
inc
dec
andb
mov
add
dec
or
mov
add
or
sbb
ja
pusha
pop
pop
push
mov
push
and
inc
or
ret
mov
enter
cmpb
loope
xchg
es
xor
std
stos
mov
add
adc
insb
jo
nop
insb
jl
or
inc
rcll
outsl
clc
outsl
push
andb
imul
mov
cmpsb
dec
shlb
fsubs
pshufw
lock
mov
ljmp
ljmp
xorb
loopne
jno
test
pop
loopne
shlb
xor
sub
or
lahf
nop
add
jle
fiadds
xchg
cmp
rcrl
jae
mov
mov
jno
cmp
sub
cmp
pusha
xorb
das
push
pushl
add
rclb
adc
cld
jg
adc
mov
mov
and
pop
test
jg
ja
mov
pop
out
adc
mov
add
xchg
into
push
or
sbb
push
and
inc
sbb
mov
xchg
pause
sbb
pop
mov
inc
or
nop
test
aas
mov
inc
dec
mov
andb
iret
push
mov
ret
aas
mov
dec
out
adc
nop
xor
mov
or
jns
jo
cltd
xor
lcall
or
cltd
jae
cmpsb
inc
iret
rolb
cmpsb
fadds
test
cli
mov
mov
mov
inc
and
mov
repnz
adc
imul
xchg
push
out
add
cwtl
adc
and
jmp
enter
pop
push
add
dec
adcl
dec
mov
lock
adc
mov
pop
lods
mov
add
je
mov
neg
dec
mov
jl
jo
add
adc
rolb
int3
adc
lret
aas
pop
sarb
mov
lock
aas
inc
lock
pusha
inc
xchg
pop
mov
xor
adc
sbb
inc
pop
jo
inc
lret
mov
lret
add
mov
cmp
add
or
add
mov
dec
inc
add
add
sbb
test
filds
mov
sub
ss
mov
clc
cmovp
jne
adc
test
mov
cld
add
add
push
sub
stos
inc
test
inc
xorb
xor
push
add
inc
add
xchg
lods
dec
inc
and
mov
pop
jo
aam
shrb
loope
mov
dec
or
add
mov
fnstsw
dec
sbb
pop
inc
shrl
xor
call
mov
pop
mov
jb
cmpsb
xchg
push
cld
ljmp
add
jno
push
cli
dec
and
xor
inc
push
push
jmp
addr16
adc
push
pusha
push
dec
pop
rcll
repnz
jg
test
and
dec
pop
sbb
clc
das
push
mov
mov
ds
sahf
inc
orb
scas
filds
xor
inc
loope
aas
push
decl
int3
mov
rclb
push
outsb
pop
or
jg
mov
and
cmp
jg
add
outsb
xchg
sahf
sbb
movl
mov
adc
ficoml
arpl
sbb
dec
call
inc
outsb
mov
adc
push
add
add
pop
or
and
cli
jg
cmp
jmp
add
mov
add
jb
push
ret
adc
jge
sbb
add
pop
sbb
addb
add
mov
adc
cmp
mov
ljmp
and
adc
dec
pusha
push
push
sbb
daa
lock
nop
popa
xchg
pop
push
hlt
es
lods
inc
dec
into
rorl
pop
adc
mov
or
insb
cmp
xor
adc
push
cld
sub
push
sarl
mov
sbb
or
scas
or
add
inc
sbb
incl
or
jo
mov
outsb
adc
and
push
mov
rolb
push
adc
jp
or
sbb
and
sar
jbe
test
lods
mov
push
mov
or
jb
push
push
push
adc
ret
push
push
icebp
push
loopne
mov
aam
into
push
adc
cmpsb
addl
ret
xor
sbb
addb
mov
je
mov
ja
sub
mov
or
adc
push
xor
bound
cld
inc
sub
or
push
xor
rcrb
out
decl
add
push
xchg
or
add
scas
jo
mov
mov
xchg
mov
cmp
adc
jg
dec
or
rdtsc
adc
pop
popa
cld
add
cltd
test
sbb
js
push
pop
int3
add
sbb
mov
jbe
xchg
jp
sbbb
hlt
pushl
pusha
pop
inc
loopne
fs
adc
daa
xorl
inc
sbb
push
add
mov
dec
mulb
sbbb
mov
add
inc
or
jb
push
in
jge
sar
test
and
sub
popl
insb
lret
and
cli
sahf
stc
nop
jg
mov
pop
and
cs
nop
add
bound
pop
push
pop
push
sub
in
mov
pop
inc
std
dec
mov
xor
arpl
rclb
notb
add
idiv
jg
xor
inc
add
add
sbb
mov
adc
add
out
lock
loop
aaa
mov
popa
mov
sarl
or
jmp
and
in
or
add
lcall
ret
or
dec
mov
xor
sbb
sahf
mov
ds
insb
mov
nop
and
add
nop
adc
mov
out
or
add
adc
iret
daa
and
mov
push
mov
cmp
enter
jo
outsb
or
add
pop
xchg
rcrl
sub
jne
aas
xchg
ficomps
sub
add
pop
mov
dec
fdivl
mov
mov
movsb
mov
push
mov
loopne
add
mov
aam
dec
stos
and
cld
mov
ss
scas
push
mov
lock
xchg
mov
and
test
adc
stos
les
add
add
inc
loop
mov
inc
subb
lock
pop
or
inc
add
mov
mov
sub
xchg
add
call
adc
and
inc
push
fwait
mov
stos
fidivl
xchg
ds
loopne
lods
or
pop
add
or
dec
and
dec
leave
inc
mov
pop
sbb
push
subb
push
pop
xor
outsl
lret
push
cmpsb
push
dec
pop
add
mov
ss
sbb
sbb
cmp
add
mov
sbbb
adc
ret
test
jbe
and
mov
fnstcw
cmpsl
cmpsb
es
lods
cmp
dec
and
jbe
jnp
rorb
push
lahf
fcmove
mov
and
pop
push
push
add
rclb
or
sahf
add
mov
xchg
fsubrl
popa
sbbb
add
inc
popa
jg
add
clc
stc
leave
outsb
push
insb
dec
mov
mov
es
cwtl
dec
adc
loop
dec
cmpb
mov
fdivrp
insb
jl
fisubrs
aas
daa
sarl
js
rorb
outsl
adc
lcall
mov
sbb
push
insl
add
dec
andl
pop
dec
jecxz
xchg
jle
in
add
or
mov
mov
fadd
or
lea
outsb
loope
push
mov
in
inc
test
cwtl
or
push
and
mov
adc
test
inc
push
cmpl
ss
les
sahf
lcall
xchg
or
add
xorl
or
jae
inc
mov
stos
andb
sbb
ljmp
add
hlt
pop
add
leave
pop
inc
jne
mov
aas
adc
aas
andb
cmpb
ja
sub
inc
outsb
mov
sbb
mov
bound
addr16
push
andb
fstps
testb
mov
dec
add
or
sub
xor
scas
test
fs
mov
mov
mov
movl
mov
dec
call
call
fisttpl
xor
rclb
xlat
add
add
aas
pop
je
add
mov
dec
ja
add
adc
inc
incl
arpl
fwait
and
or
ret
cmpb
ret
testb
clc
pop
or
mov
push
ret
sti
decl
inc
add
pop
rclb
mov
dec
fcmovbe
add
or
mov
mov
lahf
enter
pop
into
cwtl
pusha
ss
test
stos
popa
mov
push
and
clc
sub
dec
inc
test
dec
adc
mov
pop
hlt
cmp
stos
fs
addb
jp
adc
xor
es
add
adc
roll
xchg
push
or
test
outsl
mov
and
lea
mov
in
add
add
jge
andl
push
push
inc
into
cmpl
xchg
mov
and
mov
aas
dec
jl
xor
inc
dec
pop
dec
jle
adc
insl
jl
pop
push
jae
xor
subl
rcl
xchg
mov
mov
xchg
xchg
add
loopne
and
loop
ds
and
inc
and
mov
or
add
or
adc
or
mov
int
sub
bound
out
sub
rorl
mov
ja
dec
movsb
pusha
or
aas
mov
shll
fwait
mov
pop
iret
push
adc
insb
nop
jno
cmp
cmp
pop
incb
jno
aaa
xchg
pusha
jle
nop
rorl
mov
ficoml
sarb
sub
inc
mov
or
stos
mov
jbe
mov
mov
jbe
cmp
adc
data16
mov
inc
cmp
cmp
in
lods
add
stos
pop
xor
inc
cmp
or
std
cmp
mov
mov
inc
into
mov
ljmp
lock
mov
or
lret
add
xchg
test
mov
ds
cmpsl
inc
mov
into
pop
sbb
push
cmp
adcb
mov
ljmp
inc
addb
mov
pusha
rcl
pop
mov
bound
adc
pop
ds
es
pushf
insl
adc
jg
mov
lret
inc
mov
mov
sbbb
fcomip
and
mov
mov
stos
mov
addr16
cld
decl
and
pop
imul
sahf
add
lahf
pop
nop
pop
rcrl
add
mov
enter
mov
add
lcall
cmc
popa
add
roll
add
rcrl
dec
popf
loopne
sub
fcomip
mov
and
inc
xchg
aas
jnp
cwtl
addl
hlt
mov
nop
ds
push
mov
ret
call
sbb
mov
add
insb
sbb
jle
test
test
or
in
pushf
mov
ret
outsb
dec
xchg
sbb
in
bound
rorl
test
mov
push
jmp
sub
add
cmp
pushf
mov
roll
rcrb
test
clc
mov
pop
cwtl
aas
push
xchg
jp
movl
add
mov
cmp
je
or
incl
dec
scas
or
inc
ret
or
dec
ret
ljmp
cmp
sbb
shll
roll
add
jae
adc
loopne
mov
inc
loop
mov
or
mov
mov
sbb
test
add
or
push
jg
and
jo
mov
pop
icebp
push
jmp
dec
add
mov
cmp
mov
adc
xchg
jnp
pop
loopne
jp
dec
xchg
clc
ja
clc
mov
mov
push
and
and
scas
clc
add
adc
andb
mov
std
loope
sbb
lret
mov
jae
pop
cmp
and
mov
add
leave
jp
mov
std
and
jmp
movsb
add
pushl
cmp
xor
pop
xor
add
inc
lret
mov
mov
fs
push
inc
sbb
inc
adc
and
movsb
sarb
inc
out
es
das
xchg
xor
and
out
test
sbb
sbb
jg
test
ds
mov
iret
cs
decl
sub
lods
sbb
and
push
loopne
jp
mov
add
addl
mov
mov
xlat
push
add
jnp
and
aas
fidivrs
fildll
adc
add
dec
add
xchg
cli
dec
les
mov
push
jno
je
lcall
xor
shll
adc
in
xorb
outsb
or
jmp
pop
adc
outsl
mov
adc
xchg
mov
loope
or
xor
adc
movsb
add
cli
fistpll
sbb
mov
push
andb
into
shrl
or
orb
push
inc
es
push
push
loopne
mov
add
add
sub
jmp
jne
cli
pop
sub
jb
mov
push
adc
leave
repnz
sub
cmpsb
ljmp
fsubp
inc
dec
aas
outsb
mov
jecxz
les
adc
rcll
jp,pn
ds
movl
jl
xor
push
adc
shlb
mov
dec
sahf
mov
enter
dec
int
cld
push
adc
mov
and
jl
in
push
jle
adc
lock
xchg
fidivs
insb
sub
jo
and
mov
nop
add
mov
jb
je
or
push
xor
sbb
pop
hlt
push
mov
and
js
mov
add
mov
add
cmc
bound
adc
sub
push
mov
mov
lock
mov
gs
jmp
test
mov
adc
sub
add
add
mov
and
pusha
add
shlb
push
or
dec
and
ljmp
adc
dec
add
andl
leave
cmpsb
and
ja
jecxz
push
in
mov
inc
int3
pusha
or
ret
insl
jo
jle
dec
sarb
xchg
or
xor
or
mov
add
dec
iret
dec
mov
and
movsl
das
movsb
push
cld
inc
push
sbbb
and
mov
jg
xchg
mov
inc
xchg
push
and
aaa
and
shlb
mov
loopne
pusha
and
orb
or
add
rclb
pop
cmpsb
subb
pop
sbb
loope
scas
mov
lock
xchg
and
nop
push
mov
ds
shl
adc
fiaddl
jmp
jmp
cs
jmp
xchg
inc
or
fs
faddp
movl
adc
clc
xchg
out
sarb
jmp
inc
out
ss
sbb
mov
xchg
add
inc
add
lods
add
shlb
add
add
xchg
into
jae
push
inc
add
adc
mov
or
test
dec
add
add
add
cs
dec
ret
xor
popf
pop
pop
add
es
push
mov
inc
fistpll
and
stos
and
mov
and
pop
push
xlat
lcall
or
sub
rcrl
xchg
test
adc
and
pushf
sub
mov
xor
mov
push
sbb
xor
ret
setle
scas
push
cld
test
add
jo
fsubl
mov
popa
sarl
adc
stos
xchg
add
push
sbb
test
bound
add
push
mov
ss
inc
icebp
shlb
pop
add
scas
mov
jp
inc
dec
pop
lock
sub
mov
and
sbb
roll
inc
inc
int
inc
pop
inc
adc
out
pop
icebp
cltd
adc
and
pop
or
and
pop
pop
movsbl
scas
cmp
jo
rorb
scas
push
adc
push
imul
inc
or
mov
les
stos
or
xor
add
sbb
outsl
mov
inc
outsl
and
loop
lret
and
push
adc
mov
and
xor
add
jno
pushl
outsl
push
pop
cmpsb
xor
inc
dec
sub
mov
or
mov
aas
inc
mov
pop
mov
pop
dec
mov
ljmp
add
cmp
sbb
loopne
rolb
dec
add
inc
jl
lret
std
add
movsb
sbb
mov
gs
test
add
dec
bound
test
test
pusha
add
and
dec
inc
add
inc
cmp
adc
mov
or
jg
mov
sti
cmp
pop
cmp
pop
adc
roll
mov
popa
mov
jbe
aas
inc
mov
call
rcrb
out
mov
add
jo
lea
subb
rorb
push
adc
clts
mov
add
rcr
push
push
addb
pop
mov
cmp
push
pop
add
inc
outsb
ret
or
pusha
ret
movsl
into
add
cmp
orb
jno
add
or
push
mov
mov
or
inc
stos
dec
sbb
cltd
add
mov
bound
insb
mov
inc
or
sbbb
xor
clc
push
les
mov
mov
lock
sar
mov
loope
xchg
adc
in
sub
inc
adcb
and
mov
add
and
popa
xor
adc
pop
loopne
adc
mov
mov
cli
fwait
out
popa
pop
inc
sbb
add
insb
mov
lcall
mov
sbb
inc
js
fwait
rolb
or
jbe
mov
popa
pop
add
ficoml
mov
hlt
dec
js
jno
loopne
adc
or
push
or
aam
push
inc
mov
lret
push
aaa
hlt
jo
adc
ficompl
call
or
mov
push
mov
leave
das
cmp
push
fmul
adcb
std
jecxz
imul
inc
adc
add
ret
dec
nop
sbb
and
call
or
adc
cltd
fcmovne
inc
push
addr16
xor
inc
cmpsl
clc
pushf
push
sbb
incb
inc
sbb
fwait
push
add
mov
imul
cmpsb
movb
adc
mov
add
out
add
adc
mov
jae
jg
jb
add
jle
mov
add
rorb
movsl
mov
out
xchg
dec
adc
popa
xor
jb
xchg
inc
add
pop
inc
add
dec
pop
pop
mov
add
sbb
rorl
inc
pusha
cltd
ljmp
aaa
fimull
mov
add
add
push
ljmp
sarl
cli
gs
mov
pop
mov
orl
add
xchg
ret
repnz
mov
adc
mov
jle
fnsave
fldl
mov
ror
cmp
call
inc
add
dec
pop
lods
cld
adc
fidivrl
mov
inc
sbb
xor
add
bound
and
xchg
adc
and
pop
sbb
add
adc
sbb
mov
sbb
loopne
add
mov
or
bound
sbbb
test
adc
ss
outsb
jp
jle
inc
into
aas
test
hlt
sbb
pop
sub
out
daa
adc
fs
jne
or
jl
jbe
adc
adc
fsubl
dec
je
pop
rorl
dec
mov
js
les
cmp
sbb
ljmp
insb
add
lahf
mov
jne
test
andb
in
loop
decl
cwtl
aas
jo
or
sub
inc
xor
orb
hlt
ds
sbb
cmpb
xchg
fimuls
pop
pop
sbb
jle
or
cmp
adcl
add
adc
add
outsb
lret
pushf
imull
pop
sbb
in
js
rcrb
dec
push
mov
and
xchg
fldenv
rcll
movl
mov
dec
dec
mov
and
inc
or
sbbl
dec
or
mov
cli
cmp
dec
jno
aaa
dec
xchg
mov
jb
pop
dec
add
adc
or
ja
or
add
pop
enter
and
add
adc
xorl
test
mov
inc
inc
shlb
dec
xor
pop
add
inc
jp
push
loop
lea
shlb
fadds
gs
mov
push
mov
inc
lret
inc
sbb
jne
jg
sub
aaa
sahf
fdivrl
mov
pop
xchg
arpl
sub
lea
rclb
fisubrl
inc
ljmp
or
push
add
ret
jo
mov
subb
and
cs
es
ljmp
imul
inc
dec
flds
sbb
push
inc
out
and
fsubl
add
es
add
xchg
push
or
mov
jns,pt
ret
add
sub
add
leave
adc
dec
mov
loopne
sbb
loopne
and
pop
jb
insb
inc
xchg
hlt
ret
mov
ret
inc
inc
sbb
lods
sub
pusha
cmp
and
push
insb
mov
rolb
inc
or
test
inc
jbe
xor
mov
lock
pop
ret
and
inc
mov
shlb
mov
mov
push
adc
mov
adc
jg
rolb
push
lock
dec
push
add
sti
dec
sub
in
inc
push
or
loope
incl
dec
orps
adc
inc
insb
add
sbbb
jl
adc
rcrb
in
sbb
xchg
pusha
cmp
mov
fwait
xor
pop
mov
jae
or
push
dec
adc
cmp
lods
shrb
adcb
mov
cli
stos
icebp
push
leave
xor
or
jns
xor
mov
inc
aaa
ljmp
mov
jbe
xchg
inc
pusha
sbb
subb
pop
inc
pop
ljmp
shlb
imul
sar
mov
push
aas
push
rorl
inc
pop
add
jl
and
mov
mov
sbb
add
int3
push
dec
scas
xchg
sub
shrl
add
cmp
sub
push
or
loopne
jo
mov
inc
mov
and
add
and
scas
testl
sbb
dec
mov
adc
mov
pop
into
push
mov
scas
aad
dec
fadd
pop
add
sbb
push
mov
add
pusha
nopl
outsb
sbb
add
or
mov
or
jg
addb
sbb
and
add
cs
dec
stos
cmc
cmp
dec
sarl
mov
clc
sub
loop
add
pop
movl
enter
lods
inc
mov
add
pop
sbb
pop
adc
sub
push
add
mov
mov
add
ja
or
mov
mov
lea
pusha
adc
and
outsl
das
clc
dec
lcall
movsb
mov
movsb
mov
or
loopne
and
cmpsb
mov
mov
pop
mov
cld
inc
ret
or
mov
mov
out
pop
pusha
jno
add
mov
adc
and
mov
add
fbld
jae
pop
addb
mov
cli
loope
xchg
and
push
testb
inc
popa
insb
bound
imul
icebp
add
ljmp
mov
ja
out
add
pop
pop
xchg
cltd
addl
test
dec
das
cli
pop
adc
xchg
sub
dec
in
inc
ret
xor
sbb
mov
orb
mov
adcb
and
into
mov
adc
or
and
sbb
test
andl
test
push
es
pusha
sbb
xchg
mov
and
scas
cmp
cmp
mov
sub
or
mov
adc
mov
xchg
ds
es
jmp
popa
pop
mov
adc
or
repnz
and
ret
adc
add
das
sahf
mov
jno
cmp
add
pop
push
sbb
lcall
jg
inc
dec
add
sbb
add
adc
adc
add
xor
push
jno
xor
add
push
bound
push
mov
push
mov
int3
rorl
ret
mov
jae
mov
aam
push
mov
jp
xchg
int3
ret
or
hlt
rcll
cmpsb
clc
mov
jo
cmpsb
mov
ficoms
mov
or
xor
ret
xor
mov
mov
fbstp
rcl
sub
cmp
dec
push
or
sarl
nop
repnz
pop
pusha
cmp
mov
mov
lret
outsl
pop
lods
push
mov
and
add
sbb
hlt
fsubs
add
dec
adc
or
mov
or
or
mov
loope
or
rcrb
mov
mov
pop
icebp
out
dec
and
mov
cmp
mov
pushf
and
mov
and
sub
call
xchg
push
testl
popa
mov
add
mov
ljmp
rcrb
test
inc
aas
pop
fs
inc
fbld
clc
sbb
inc
pop
add
cmp
push
rcll
cs
lcall
jle
loope
nop
mov
adc
sub
add
jns
fs
decl
xor
adc
or
lret
sbb
mov
mov
mov
xchg
cmp
ret
adc
leave
sub
add
and
mulb
sub
xchg
inc
test
mov
lock
std
or
jo
incl
or
mov
arpl
and
adc
add
add
shlb
sbb
cmp
adc
scas
cmpsb
jns
inc
mov
dec
insb
inc
mov
lock
inc
aaa
pop
adcb
push
ret
inc
loopne
inc
aam
pop
xor
aas
mov
sub
test
fwait
mov
sar
les
dec
mov
add
decl
and
push
jae
pop
push
cmp
lock
add
add
in
je
sbbb
xchg
mov
mov
mov
sbb
inc
add
mov
push
lcall
or
push
insb
xor
pop
mov
xchg
popf
or
xor
ljmp
add
pop
pop
sarb
dec
fwait
movsl
aam
or
jo
outsb
sub
decl
sahf
sbb
jmp
dec
ss
sub
xor
pop
jp
bound
mov
test
sub
adc
int
push
push
cs
ljmp
leave
xor
imul
outsb
xorb
ds
sub
shrb
push
push
bound
inc
pop
movsb
push
add
mov
jb
mov
add
jmp
add
and
jp
sbb
sbb
cld
mov
loopne
push
outsb
adc
push
mov
push
fildll
dec
test
add
mov
es
dec
mov
and
adc
mov
pop
pusha
jo
addb
pop
mov
nop
or
jbe
or
mov
or
fisttpll
add
data16
int3
movl
push
shlb
daa
inc
sbbl
sub
fwait
outsb
fisttps
inc
add
push
cmp
inc
add
pop
sbb
loop,pn
aaa
lock
pusha
imul
cld
pop
pop
mov
push
hlt
sbb
sub
pop
adc
pop
or
or
add
adc
sarb
outsb
inc
mov
sbb
push
and
add
inc
pushl
xor
inc
pop
jno
fisttps
inc
add
push
and
mov
js
lods
movsl
fisttpl
jo
pusha
jno
and
lahf
add
and
adc
xor
call
push
push
push
ret
xor
mov
xor
dec
lea
mov
xor
mov
inc
pop
jo
cld
loop
inc
rorl
mov
loope
mov
rclb
jns
subb
aaa
inc
xor
gs
int
mov
ss
or
mov
dec
fists
jle
enter
inc
ds
cmp
icebp
loop
jl
andb
dec
fisttps
lock
lock
hlt
adc
add
push
pusha
push
data16
and
or
mov
test
or
scas
add
stc
daa
mov
jne,pt
mov
add
add
and
add
daa
loopne
and
pop
and
dec
sarb
and
ds
lcall
mov
cmpb
ret
jge
mov
inc
ficoms
mov
sbb
orb
jecxz
mov
and
aam
stc
mov
and
mov
and
dec
leave
test
outsl
cli
pop
pop
inc
call
add
xchg
push
adc
std
fistl
dec
dec
popa
add
cmpl
inc
xchg
xchg
push
and
or
lock
dec
jo
pop
adc
mov
pop
pop
or
dec
xor
fistpll
sbb
stc
adcl
std
xor
xor
sub
loopne
movsb
filds
clc
adc
xchg
mov
push
in
adc
pop
test
lcall
divps
mov
adcb
xchg
adc
mov
add
ds
xchg
pop
or
insb
in
ds
ljmp
dec
xor
mov
testl
and
jo
add
sub
pop
and
mov
adc
adc
pop
sbb
xor
clc
repnz
les
xor
dec
mov
xor
aam
pop
and
sub
dec
push
pop
stc
inc
mulb
dec
orb
in
xchg
inc
lock
addl
rorb
ret
std
data16
xchg
test
aam
add
or
orb
jmp
pusha
add
add
into
mov
mov
mov
orb
je
cmp
or
add
adc
fimuls
imul
xor
inc
mov
into
or
mov
pop
adc
mov
mov
mov
sbb
or
sub
jg
jb
add
or
out
mov
mov
mov
cmp
out
inc
std
mov
addl
test
add
push
popa
push
mov
outsb
sahf
test
sti
jg
mov
mov
sarl
inc
and
ret
mov
inc
and
inc
or
andb
inc
add
in
sarb
stos
es
gs
or
pop
add
test
fistps
push
rolb
push
add
push
fst
lea
in
orb
dec
dec
fs
add
or
xchg
inc
iret
inc
sub
inc
push
sub
mov
inc
push
and
adc
xchg
or
cmp
dec
xchg
cmpb
adcb
push
inc
orb
inc
add
pushf
inc
mov
adcb
push
mov
sub
les
dec
rclb
mov
push
mov
ret
fistpl
push
pop
test
test
push
inc
push
ret
add
lock
sbb
or
and
subb
incl
and
mov
or
lock
cld
inc
adc
int
pop
bnd
inc
inc
push
inc
nop
std
fbld
mov
mov
cmp
outsl
ss
cmp
int
mov
mov
inc
xor
outsl
ljmp
popf
ret
adc
push
dec
mov
pop
rorb
incb
hlt
sbbl
out
clc
pop
int3
aas
inc
push
sahf
inc
dec
inc
mov
icebp
add
add
sbb
mov
adc
pop
mov
aas
xchg
mov
mov
lock
add
mov
cmp
inc
sub
in
push
or
xchg
inc
fdivs
pop
pop
inc
ljmp
es
push
dec
mov
repnz
out
std
pop
add
xor
dec
iret
xchg
pusha
push
mov
out
add
xchg
cmpsb
stos
adc
push
hlt
adc
pop
mov
iret
andb
ret
xlat
push
loopne
or
fstpt
add
lcall
shlb
inc
cmc
stos
lods
dec
shlb
loop
mov
adc
sbb
subb
mov
hlt
pusha
cmp
mov
fildll
leave
push
add
xchg
add
scas
iret
jbe
fcomip
pop
loopne
rcll
push
and
hlt
push
fsubs
addb
inc
jne
pusha
xchg
inc
mulb
mov
pop
cmc
das
push
sbb
push
sbb
mov
or
les
and
and
mov
add
add
push
mov
mulb
out
mov
xchg
call
pop
xchg
add
ret
leave
mov
pop
je
inc
and
iret
sbbl
lea
add
sub
pushf
cmp
pop
cli
mov
add
jno
iret
and
push
sub
lock
mov
popa
fs
mov
push
inc
pusha
hlt
jg
mov
popa
das
insl
in
push
lret
push
inc
roll
fwait
out
adc
pop
add
clc
pop
scas
aas
js
incl
adc
loopne
fidivs
mov
mov
xor
pop
push
loope
loopne
xor
ret
shl
leave
fprem
das
push
addb
push
sbb
incl
leave
mov
loopne
mov
jo
mov
addl
mov
mov
call
pusha
cmp
pusha
adc
dec
sub
pusha
and
and
mov
test
scas
pusha
xchg
dec
popa
mov
sub
mov
mov
lcall
sbb
pusha
out
inc
in
add
adcl
or
sbb
sbb
sbb
mov
and
add
ret
jb
arpl
hlt
cmpsl
decl
out
jno
mov
pop
popa
jb
aas
gs
add
cmp
pop
xor
mov
sub
or
mov
incl
push
inc
cs
std
fwait
orb
add
pusha
inc
xchg
cmc
rclb
dec
push
sbb
mov
add
add
or
mov
out
push
leave
mov
lods
loope
jne
mov
inc
pop
pop
gs
je
xor
js
movsb
clc
sub
aas
ret
dec
adc
mov
sub
mov
adc
xchg
mov
and
mov
add
push
leave
stos
inc
add
sub
rcrb
decl
jbe
cmp
invd
xchg
aas
push
out
je
and
xor
push
inc
in
xor
cmpsb
sub
icebp
mov
hlt
inc
outsb
fwait
push
sbb
cmpsb
jecxz
mov
sub
ss
ljmp
adc
push
xor
push
add
add
mov
xor
fbld
jae
mov
cld
push
jle
add
sub
or
dec
lock
add
and
and
and
cmp
or
xchg
adc
add
fistpl
fisubrl
adc
fs
sub
sbb
inc
sbb
scas
pop
mov
cli
mov
mov
mov
mov
push
or
inc
xchg
jmp
jns
mov
ljmp
dec
mov
add
call
push
roll
fwait
mov
pop
rcl
fs
jg
icebp
pop
fcoml
push
xor
inc
cmpsb
adc
cmp
mov
cmpsb
sbb
dec
ret
mov
jmp
cs
mov
loopne
subb
inc
dec
adc
add
aas
inc
add
mov
dec
ret
adc
mov
push
ds
mov
xor
adc
mov
ja
roll
leave
mov
aas
push
ret
sbbl
push
inc
mov
test
inc
fists
add
xchg
rolb
push
orb
sbb
inc
mov
mov
movsl
es
sahf
sbb
fnstenv
aas
mov
push
add
decl
add
mov
dec
ror
cmc
scas
cli
mov
pop
xor
or
dec
scas
jg
xchg
pusha
sar
stos
int3
dec
mov
loopne
aas
inc
lock
call
adc
icebp
add
inc
ljmp
push
add
inc
dec
and
sbb
fwait
or
mov
add
push
push
mov
jmp
mov
cmpsb
push
lahf
cmp
jno
lahf
adc
ds
and
lahf
mov
clc
in
movsl
shll
xchg
lods
mov
mov
sbb
mov
and
ret
add
add
xchg
lret
incl
jo
sbb
or
gs
mov
or
mov
and
aam
std
adc
das
aas
inc
or
mov
push
dec
push
and
mov
repz
mov
rcrl
add
push
mov
popa
mov
fwait
mov
mov
add
ljmp
in
inc
mov
mov
adc
adc
add
inc
int
call
mov
mov
mov
fcoml
adc
into
jg
xor
jg
rolb
mov
dec
xor
pushf
mov
arpl
sbb
add
add
or
clc
jno
adc
pop
mov
dec
ds
lods
push
jno
aas
mov
jg
out
inc
and
cmpsb
lods
shrb
aas
addb
dec
push
jmp
lea
mov
int3
iret
popa
and
shrb
cmp
push
inc
imul
pop
mov
jle
mov
fistl
or
shrl
and
scas
jo
mov
and
mov
xor
fisttpl
repnz
xlat
hlt
jg
mov
sub
inc
inc
sbb
or
pusha
sub
dec
popa
sub
jg
add
pushf
dec
cmpb
icebp
call
aas
pop
stos
mov
adc
pusha
or
lock
add
xor
ret
or
movsb
bound
push
ret
incl
jo
sub
cmpsb
add
cmp
xchg
cs
sbb
adc
adc
mov
xor
xor
and
add
xor
and
fcoml
es
jg
pop
xor
mov
inc
inc
lret
ret
sar
jne
dec
rcrb
rcrb
mov
rolb
mov
cmpb
push
jle
out
pop
xchg
outsb
lods
inc
adc
sbb
shrb
adc
xor
cwtl
xor
adc
addb
cmp
pop
jp
ret
push
mov
and
xor
cld
jg
mov
and
mov
mov
mov
inc
cmpb
in
rcrb
push
andl
dec
jnp
xor
mov
aas
out
rcrl
xor
dec
jp
xor
push
jns
js
aaa
icebp
out
mov
test
cwtl
inc
lea
je
adc
jle
lret
mov
jl
push
adc
add
sub
out
mov
dec
jno
mov
sub
inc
dec
mov
and
rorl
pop
and
xor
add
add
loop
dec
sub
aaa
in
fildl
cmpsb
repnz
sbb
mov
ljmp
jo
ds
repnz
inc
dec
jno
and
inc
jno
out
mov
push
outsb
outsb
lock
mov
cmc
ret
loop
sbb
push
rolb
mov
inc
js
lods
pop
push
jo
int3
and
adc
jb
mov
stos
stos
test
sbb
adc
mov
add
push
pushf
inc
add
xor
leave
dec
mov
inc
mov
dec
lret
and
cmp
mov
add
mov
mov
and
bound
shr
sub
cmp
add
sbb
popa
fwait
jno
mov
decl
mov
js
add
dec
clc
rorl
popa
mov
inc
ds
dec
add
or
lock
iret
mov
push
pop
in
xor
pop
rorb
jo
aas
dec
jo
sub
xor
mov
adc
shrb
dec
lock
enter
adc
adc
pop
add
push
dec
and
mov
insb
adc
enter
push
xchg
push
rolb
mov
cwtl
loopne
pop
les
out
mov
or
dec
or
outsb
fistps
adc
mov
hlt
jg
js
mov
xor
inc
iret
filds
daa
leave
ja
pop
or
add
inc
mov
rcrb
push
dec
lods
aam
rorl
add
xorb
add
sub
inc
rorl
and
dec
insl
pop
xor
mov
cwtl
and
scas
or
push
push
mov
dec
leave
add
xchg
sbb
popa
mov
push
nop
int3
test
pop
add
mov
pop
shlb
mov
rclb
dec
vshufps
jb
ret
and
mov
inc
nop
leave
mov
adc
stos
rcll
sub
cs
add
ds
mov
aas
pop
adc
ja
mov
add
push
sbb
ret
add
jle
mov
inc
push
adc
sub
mov
fisubl
leave
sbbb
push
int3
je
or
mov
mov
lcall
mov
or
andb
mov
aad
mov
out
inc
leave
jbe
add
or
mov
aad
add
mov
call
add
or
xor
add
sarb
cmpsb
xor
jp
dec
sbb
and
in
pop
dec
add
push
clc
or
mov
add
mov
cmc
addb
subb
popa
or
push
and
stos
xorb
sbb
sbb
fcomps
aas
data16
mov
dec
out
dec
jno
cmp
icebp
lcall
cmpb
andb
daa
cwtl
inc
xorb
xchg
outsl
pop
loopne
adc
jo
pop
mov
add
jg
xchg
es
add
adc
xor
jg
call
and
test
dec
shll
jg
and
push
pop
inc
pop
ret
rorb
rcrl
add
js
mov
mov
clc
incl
je
inc
imul
inc
arpl
outsb
stos
mov
pop
shlb
or
inc
add
test
sub
mov
js
mov
add
xchg
sbb
fildl
jno
arpl
pop
pop
imul
js
clts
arpl
orb
aaa
ret
or
push
ret
sub
lcall
mov
mov
repz
popa
inc
mov
addl
pop
insb
inc
jl
xchg
inc
add
mov
les
add
or
insb
stos
sub
sbb
stc
mov
rolb
ja
xor
mov
mov
pop
inc
ret
sbb
pop
ss
lea
add
mov
add
in
add
loopne
movsb
push
jge
cmp
pop
popa
lcall
cld
outsl
xor
mov
and
push
pop
add
inc
sub
test
xorl
adc
pop
mov
hlt
mov
add
push
push
add
and
ret
add
outsb
pop
push
dec
xor
clc
cmp
pop
push
nop
jge
and
xchg
test
mov
push
mov
jbe
incl
mov
rolb
inc
add
and
subb
mov
cmpb
test
pusha
inc
outsl
or
jns
cli
inc
inc
and
insb
or
and
sti
mov
inc
enter
cwtl
pop
push
mov
outsl
mov
inc
adc
roll
push
mov
add
adc
ret
adc
or
push
loop
jb
fadds
push
mov
pop
data16
or
mov
ljmp
dec
jae
fisubrs
dec
fwait
add
xchg
or
mov
jmp
es
popa
xchg
jno
adc
inc
enter
adc
add
xchg
ret
or
lock
lods
nop
shlb
das
filds
inc
add
je
fildll
pop
inc
add
ds
add
mov
mov
push
xor
ret
ljmp
call
xchg
and
pop
mov
ret
cli
inc
and
or
mov
mov
xor
test
pop
popa
or
inc
sub
incl
xorb
mov
or
dec
gs
std
gs
cmp
pushl
ds
jbe
xchg
xor
push
inc
cmpsb
mov
adc
and
pusha
add
ss
shl
addr16
or
decl
nop
push
inc
roll
pop
leave
stos
mov
fstl
test
pusha
inc
mov
cmp
incl
push
pop
and
fwait
inc
pushf
add
pop
pusha
push
loopne
addl
and
es
xchg
jg
inc
or
inc
movsl
stos
fadds
subb
dec
loope
sbb
lea
cld
add
lcall
dec
inc
lahf
dec
mov
lret
ds
outsb
inc
or
mov
int
cmp
add
cmp
es
enter
mov
rolb
or
lea
add
push
jb
mov
sbb
add
inc
dec
mov
dec
cli
mov
aaa
mov
jo
adc
popf
test
mov
addb
sub
mov
shll
or
ds
aam
ljmp
sub
iret
roll
sub
mov
or
or
xorb
nop
sar
out
les
test
dec
inc
add
cmpsb
cmp
inc
roll
ficoml
fistl
jno
mov
or
push
shl
adc
das
sarb
xor
mov
inc
data16
dec
pusha
dec
aas
jle
shrl
mov
dec
xchg
dec
dec
xchg
or
pop
xchg
sbb
lret
into
and
cmp
sub
mov
push
mov
mov
jo
and
pop
popa
push
pop
adc
add
imul
mov
and
cmp
iret
int3
push
lock
mov
jo
leave
and
inc
cmpl
sub
clc
cwtl
aad
xlat
stos
xor
xchg
ds
hlt
adc
popa
push
mov
push
push
inc
int3
add
out
adc
xor
aaa
insl
inc
mov
dec
addb
mov
jl
cmp
sbb
mov
ds
out
jo
rcll
and
xorl
mov
or
sbb
dec
cmp
aaa
inc
inc
mov
fisubs
fdivrs
jb
pop
inc
and
mov
push
ret
rolb
or
push
int
rolb
jo
or
add
push
jmp
leave
xor
or
adc
pop
imul
pushf
movsb
aas
sub
ds
inc
add
in
pushf
add
add
outsb
mov
pop
mov
loopne
push
push
sub
pop
cld
stos
add
mov
shlb
andb
or
fwait
mov
rolb
scas
loop
mov
mov
and
je
aas
addr16
push
pop
cmc
mov
add
pop
cmp
stos
dec
add
push
or
hlt
pop
sbbb
andl
aas
dec
fwait
add
push
pop
push
push
pop
cmp
or
or
insb
push
lret
cld
sbb
mov
push
or
push
or
push
lcall
jle
cmp
jns
or
ret
sbb
pop
and
loopne
stc
add
cmp
pop
dec
add
aaa
dec
inc
sbb
add
mov
pop
or
mov
inc
pop
sbb
fimuls
mov
mov
fwait
cmpsb
stos
mov
arpl
jo
push
nop
or
call
adcb
and
mov
repz
lock
push
adc
add
or
clc
call
or
enter
or
scas
icebp
or
push
ljmp
push
or
xchg
and
aaa
add
or
rorb
dec
mov
testb
imul
mov
jmp
add
push
add
sub
mov
std
mov
dec
cmp
or
mov
shlb
aad
push
leave
add
push
loop
inc
or
mov
dec
int3
xchg
cmpsb
fildll
xor
inc
cmp
or
addr16
rclb
ds
ja
insl
adc
ljmp
push
int3
dec
lock
arpl
es
mov
stos
mov
sub
mov
cmc
testb
xchg
mov
movsb
iret
andl
mov
mov
push
repz
mov
pop
mov
and
mov
inc
adc
sbb
jnp
push
jb
push
ja
adc
lock
lret
sub
inc
pop
add
cmp
inc
and
xor
add
push
into
and
push
mov
fidivrl
sub
push
add
mov
mov
add
xchg
mov
mov
in
xor
ja
push
ret
add
addl
mov
fnstsw
xchg
or
into
mov
enter
jge
outsl
push
loope
inc
adc
aam
adc
adc
imul
add
repnz
sbb
and
or
ljmp
jg
loopne
aam
mov
hlt
add
dec
imul
jo
pop
and
add
test
xor
ja
rorl
adc
fwait
mov
sbb
aas
dec
push
dec
jl
jp
add
jbe
jecxz
or
into
nop
lock
cmp
jbe
inc
adc
sbb
push
lcall
or
faddl
jo
aaa
test
xchg
fiadds
repnz
hlt
add
in
aas
push
xchg
add
add
lock
dec
insb
or
inc
hlt
lret
and
xchg
clc
inc
add
arpl
inc
pop
pop
jno
ss
jp
jg
fs
add
mov
dec
sti
pop
lock
aas
jo
mov
movzbl
roll
dec
cld
and
xchg
xor
scas
lahf
negl
dec
push
punpcklbw
mov
outsb
xor
outsb
sbb
sub
data16
add
dec
sbb
inc
lods
xchg
or
daa
mov
xor
clc
push
and
jo
adc
jne
sbb
push
dec
orb
in
dec
pushf
mov
or
xor
add
shrl
inc
or
or
and
pop
jmp
add
inc
xor
roll
add
mov
mov
add
leave
shll
xor
or
push
inc
mov
or
lcall
mov
pop
pop
xor
xchg
push
inc
mov
loop
mov
lret
or
xor
scas
out
push
or
filds
scas
lcall
or
jb
mov
rolb
pop
pusha
dec
or
adc
stos
sub
sahf
enter
cli
or
pop
cmp
ja
push
add
rcrb
inc
push
aad
loopne
dec
mov
or
jg
lea
mov
mov
sub
orl
add
fs
fmull
movsb
cmpsb
mov
add
or
andb
dec
xor
pop
and
add
or
cmp
pushf
xchg
scas
xchg
and
inc
dec
mov
push
inc
pop
lcall
orb
cmp
addb
orl
pop
mov
mov
ss
sti
mov
sbb
pop
pop
mov
aaa
jbe
pop
dec
std
xor
rclb
mov
mov
lret
add
rolb
pop
inc
push
cli
pop
loopne
jne
and
pop
lds
inc
out
add
shlb
cs
gs
outsb
rcrl
push
imul
ret
inc
ljmp
push
push
iret
cmpb
fiadds
or
rorl
leave
mov
clc
cmp
imul
sub
xor
xlat
adc
and
test
lock
adc
pop
jl
js
push
adc
or
pushl
mov
xor
rclb
xor
inc
or
inc
and
inc
lock
inc
or
sub
or
lcall
and
shl
push
push
mov
fistps
xchg
add
add
movsb
mov
jns
lahf
nop
or
lds
inc
or
mov
stos
inc
mov
rcrb
push
cmpsl
fists
and
pop
inc
addr16
push
pop
ret
push
xchg
and
ss
addr16
iret
sub
lds
jae
cmp
push
ds
or
inc
add
rorb
cmp
fimuls
aaa
shll
test
and
push
sub
mov
add
inc
cmp
nop
out
aaa
lds
push
mulb
into
mov
pop
sbb
push
xchg
push
add
add
xchg
mov
lcall
mov
add
std
imul
add
cmp
popa
pop
add
inc
loopne
popa
popf
dec
ret
fcomip
mov
cmpsb
popa
insl
jecxz
jp
ret
loopne
andl
icebp
sbb
xorb
js
pusha
cltd
xor
andb
clc
push
and
inc
pop
mov
mov
mov
loopne
movsb
inc
add
cltd
add
or
xor
add
push
rorl
and
and
mov
push
lcall
push
lret
add
add
jmp
mov
dec
fmull
scas
shrb
mov
add
mov
xor
or
movb
ret
insl
fnstsw
pusha
add
dec
push
xor
loope
mov
push
pusha
nop
cmp
dec
mov
push
mov
and
mov
ret
outsl
fcompl
popa
xorb
push
idivb
add
data16
pop
leave
or
dec
and
nop
rolb
jo
add
outsl
out
sbb
add
mov
dec
mov
popa
lcall
inc
int
sbbb
mov
inc
xchg
addb
add
or
or
jno
inc
adc
enter
xor
int
decb
imul
iret
sub
incl
push
sub
and
scas
xor
mov
cmp
aas
mov
sub
and
pushf
fcomip
ljmp
or
push
add
lret
mov
popa
cmp
movb
or
call
pop
in
mov
add
mov
clc
jg
hlt
add
xchg
pusha
xor
and
stc
add
mov
xor
repnz
ss
adc
cwtl
std
ljmp
push
push
jo
and
into
ret
aaa
add
fwait
mov
xor
test
pusha
adc
or
mov
hlt
lock
pushl
add
loopne
es
rolb
cmpsl
jo
inc
xor
pop
jle
sbb
or
stos
adc
in
xchg
mov
inc
lods
std
neg
add
mov
mov
mov
and
pop
or
inc
jnp
rolb
xchg
dec
pop
mov
dec
sar
inc
pop
sub
pop
and
hlt
push
add
add
inc
mov
dec
inc
mov
push
mov
jne
fcoms
adc
fmull
lock
add
aaa
xor
xor
add
aaa
ljmp
jno
mov
xor
sbb
dec
leave
loope
loop
roll
aaa
aas
sbb
fildll
insl
or
mov
dec
jo
lds
mov
inc
shlb
jbe
push
fs
pop
in
jle,pt
cmp
cli
stc
mov
adc
scas
inc
rcrl
fsubrs
and
inc
push
je
scas
les
pop
pop
pop
int3
xchg
xchg
shr
jnp
inc
lds
jmp
mov
add
shlb
push
lock
lock
lods
clc
mov
cmp
mov
sarb
aas
insb
or
xorl
and
out
push
or
mov
hlt
call
add
mov
add
or
imul
mov
lcall
mov
sbb
cmp
dec
fwait
adc
add
mov
mov
cmovno
sbb
add
lods
in
mov
mov
data16
mov
or
inc
or
test
jg
jae
shlb
std
mov
pop
fisubs
push
lods
rorl
mov
inc
daa
push
shll
xor
test
inc
ss
dec
adc
fcomip
push
insb
jno
stos
push
aaa
push
push
adc
sub
out
addb
add
cmp
push
sbb
pusha
sub
lods
fnsave
pop
add
int
pop
xor
insl
and
mov
mov
negb
mov
pop
ss
loopne
mov
shrb
push
xor
cs
sub
mov
rolb
or
dec
rol
ja
stos
or
dec
dec
mov
add
mov
xor
out
xor
jmp
jo
dec
inc
sbb
sbb
dec
incl
add
jno
ja
jo
and
ss
mov
addb
addb
mov
or
das
andb
cld
jmp
push
dec
shlb
push
or
push
sbb
popf
inc
mov
mov
mov
stos
mov
jg
inc
sarb
push
inc
loope
or
decl
adc
mov
xor
push
imul
nop
addb
mov
pop
and
push
fwait
dec
mov
std
mov
adc
inc
inc
jb
mov
push
mov
sbb
rolb
rolb
dec
or
movsb
enter
sti
stos
mov
mov
in
mov
add
add
adc
push
pop
ret
fbld
or
sbb
or
inc
dec
lea
mov
lret
mov
rorb
aas
push
or
cmc
cmp
pop
into
or
push
ljmp
cmc
add
pop
mov
hlt
add
rcrb
adc
test
int3
mov
mov
jle
pop
imul
adc
test
repnz
lock
mov
sbb
inc
iret
add
inc
mov
mov
jg
push
roll
ret
add
pop
ret
and
mov
mov
add
or
and
xchg
lret
and
or
decl
add
and
and
mov
fnstenv
in
lods
and
rcll
mov
adc
je
dec
dec
add
and
pop
push
es
sahf
stc
mov
dec
lea
aam
ret
in
push
shrb
xchg
add
ret
xor
mov
push
add
or
add
cli
add
rclb
add
sub
sub
or
inc
pop
add
or
mov
dec
test
aaa
and
mov
add
sub
pop
mov
shl
add
les
jg
mov
out
jo
sub
dec
push
ret
addb
push
add
inc
pop
xchg
mov
ret
lock
mov
fs
inc
cmp
stos
inc
lods
xchg
add
sub
xchg
dec
mov
gs
or
lods
xchg
lods
xchg
pop
pushf
loope
add
add
roll
ret
or
jg
pop
addl
push
orb
and
es
inc
add
mov
in
and
sbb
sbb
js
lcall
in
movsb
pop
fmull
adc
inc
stos
int3
ret
aam
imul
xchg
cli
rcll
pop
popl
cmp
enter
clc
outsl
mov
es
push
shlb
or
adc
push
into
js
mov
ja,pn
or
in
push
push
add
xor
and
mov
push
subb
int3
ficomps
ret
lret
addb
insb
add
add
aaa
or
xor
mov
push
test
adc
sbbb
lahf
add
adc
mov
iret
inc
sbb
add
cmp
xchg
xchg
and
or
sub
shr
shr
pushl
push
adc
cmpsb
or
ret
ljmp
pop
push
sbb
push
dec
jo
xchg
mov
sub
pop
or
ja
test
mov
and
mov
ret
sub
cs
jg
sbb
shll
orb
test
inc
inc
and
outsl
jmp
fisttps
mov
fcomps
mov
cmp
xchg
lods
addb
scas
sarb
addb
inc
or
or
lds
ds
mov
mov
pop
mov
bswap
paddd
or
inc
orl
or
icebp
inc
cmp
outsb
adc
mov
sbb
outsl
mov
outsb
addl
cltd
add
jmp
aaa
mov
jnp
cmc
sbbb
pop
mov
outsl
add
push
roll
ds
mov
pop
mov
ljmp
pusha
outsb
pop
add
add
sub
rcrb
stos
ss
inc
pop
or
lods
push
adc
cmp
push
cmp
mov
mov
inc
lcall
dec
jbe
lret
adc
rcrl
push
sbb
test
jl
adc
popa
out
pop
cli
outsl
les
cwtl
mov
and
add
cvtpi2ps
fsubs
mov
bound
mov
lock
inc
mov
out
leave
stos
add
fistps
mov
fmul
loopne
cmp
cwtl
xchg
bound
ljmp
shlb
pusha
adc
bound
cli
js
xor
movsb
and
add
push
clc
pop
fbstp
mov
mov
enter
loopne
out
push
and
adcb
orl
sahf
mov
or
xchg
incl
cs
mov
add
fists
jmp
add
xchg
andl
mov
gs
fstps
popa
add
add
sbb
inc
add
andb
adc
cmpsb
cmp
addb
and
xchg
mov
mov
scas
les
pop
bound
je
or
ljmp
or
or
or
stos
test
push
xchg
or
jle
cmc
dec
push
into
mov
inc
push
mov
pop
sti
outsb
or
and
jb
jo
cmp
jo
mov
mov
xchg
movsl
and
sub
bound
add
push
push
loopne
push
inc
fiadds
loopne
lret
aas
and
mov
cmpsb
inc
cwtl
pop
out
rclb
test
fwait
inc
js
popa
std
add
stc
bound
add
add
mov
lahf
sub
lods
inc
add
popa
inc
sbb
xorl
or
mov
int
mov
fmuls
leave
and
dec
std
enter
lods
ljmp
xor
mov
ds
ja
add
push
mov
lods
sub
iret
enter
xor
leave
lahf
sbb
add
shrb
lea
out
adc
test
sbb
add
ja
mov
or
add
pop
xchg
jg
xchg
mov
cmp
fcomi
adc
outsl
mov
pop
mov
enter
sub
das
fidivrl
push
or
add
mov
andl
mov
xchg
pusha
mov
test
jo
outsl
dec
xor
and
popf
xchg
repnz
pop
ja
jl
inc
stos
bound
in
out
rorl
cmpsl
test
add
cmp
mov
cmp
mov
sbb
mov
mov
mov
pop
fcoml
subl
inc
pop
lock
mov
adc
pop
lods
push
sbb
outsl
sub
inc
or
mov
push
and
call
test
out
xor
lods
and
inc
xor
jnp
adc
add
dec
gs
and
add
mov
jecxz
push
inc
sarl
test
imull
xor
adc
out
xchg
scas
insl
outsb
outsl
push
push
lock
adc
add
nop
stos
lcall
in
in
push
dec
cld
negb
cwtl
mov
xchg
and
or
loop
pop
dec
dec
add
inc
add
and
popa
mov
dec
daa
add
push
push
adc
mov
or
adc
sub
dec
adc
int
test
gs
dec
add
lcall
sub
add
or
popa
rcl
mov
out
inc
add
mov
push
mov
outsl
pop
out
add
test
div
vmread
xor
or
lock
imul
jo
mov
add
pusha
lcall
cwtd
out
jno
fildl
inc
jo
jbe
jmp
add
stc
test
dec
test
jns
pop
push
popa
jnp
ret
push
adc
push
or
insl
fimull
negl
mov
aas
adc
add
add
outsl
xchg
jp
mov
jge
loopne
cli
jns
dec
and
ret
clc
inc
push
add
cmp
sarl
mov
dec
and
mov
lea
fwait
and
inc
sub
sub
inc
or
fcoml
sub
push
aaa
dec
mov
in
cmpsb
or
cld
and
and
push
lock
xchg
out
xchg
push
nop
add
ss
xor
cwtl
and
or
inc
outsl
insl
adc
repnz
add
aas
ss
repnz
add
jne
sbb
sbb
ds
ret
mov
adc
lea
in
cmc
mov
jl
cli
adc
mov
jl
add
inc
lock
mov
inc
pop
loopne
dec
imul
xor
imul
cs
sbb
sbb
cwtl
les
add
sti
aaa
clc
dec
test
shll
pop
call
ret
mov
das
clc
incl
mov
cmovbe
add
push
cmpb
or
das
clc
mov
jno
push
stos
push
cs
es
call
lret
dec
rcl
dec
mov
or
push
or
push
or
in
clc
rcrl
loopne,pt
mov
incl
xchg
subb
add
and
cld
fbld
xchg
iret
push
xchg
add
dec
imul
ret
aaa
testb
inc
push
ja
jg
ss
inc
pusha
adc
push
and
and
pop
lret
aaa
jecxz
lock
sub
pop
push
add
jle
lret
and
add
xchg
aas
stos
in
rorl
add
fcomps
push
sbb
scas
xchg
pop
jl
adc
rolb
mov
xor
iret
jb
js
mov
dec
and
mov
add
ja
mov
or
pusha
sbb
sbb
dec
jbe
add
movl
push
dec
sti
jg
push
add
fwait
and
mov
fbld
and
mov
sbbb
iret
add
ds
mov
xor
daa
mov
push
sbb
xor
xor
xchg
pop
and
adc
pop
popa
mov
push
lcall
lods
mov
je
mov
xorb
xor
and
inc
test
add
or
xchg
rorb
add
rorl
dec
jne
push
test
leave
out
adc
push
sub
jle
jp
or
push
cmpl
xchg
push
xor
xchg
movb
jno
push
xor
adc
sub
mov
inc
repnz
cmp
shll
add
mov
popa
lcall
inc
ror
inc
adc
fs
decl
sahf
rorb
dec
ds
inc
rolb
incl
add
mov
inc
les
orl
push
rorl
outsl
mov
pop
mov
add
add
and
jmp
into
inc
pop
or
mov
insl
clc
mov
add
dec
shll
pop
pop
inc
pop
inc
fdivl
testb
cmp
scas
xor
test
int3
and
or
lcall
pop
cmp
or
push
lock
and
push
fwait
add
jmp
sbb
ret
loopne
popa
pop
push
shld
mov
mov
push
bound
shlb
dec
jo
iret
push
push
xchg
push
dec
stos
add
adc
add
mov
ds
or
cmp
mov
sub
add
pushf
mov
xor
or
sbb
outsb
cmp
jg
inc
add
shl
xchg
addb
mov
mov
push
test
mov
fwait
insb
inc
add
icebp
pop
sbb
jae
push
add
into
mov
call
orb
or
mov
fcomps
sbb
mov
divl
mov
xor
aaa
aam
cmp
cmpsb
mov
fistpll
filds
lods
addl
or
fstl
es
lods
add
jle
and
ret
pop
lods
fcmove
popa
lea
aas
pop
leave
dec
pushf
test
cmp
insb
jb
or
inc
add
loope
add
rol
lret
inc
aas
push
xor
add
mov
cmp
lret
jb
jo
push
or
sahf
inc
mov
jae
aas
mov
mov
mov
mov
sub
pop
add
sbb
xchg
push
xlat
mov
mov
or
push
inc
add
fadd
xor
outsl
outsl
or
cmpb
push
xor
movsb
mov
cld
orl
dec
add
ret
adc
mov
mov
mov
add
insl
scas
mov
pop
pop
fiaddl
ret
stos
lahf
mov
cs
adc
out
cmp
fs
or
sub
pop
cmp
scas
ja
rorb
lods
adcb
jl
add
push
sub
das
cwtl
jno
ds
inc
xchg
les
loop
sbb
mov
mov
pop
test
dec
xor
add
or
popa
dec
sub
pop
outsb
jbe
xchg
or
add
mov
or
mov
mov
lds
xchg
inc
cltd
ret
dec
inc
cltd
add
rolb
mov
xlat
sbb
pop
mov
aad
mov
cmp
jne
outsl
aaa
lods
clc
pop
rolb
aas
push
and
addr16
stos
in
dec
or
rorb
das
notb
cli
mov
out
sub
ja
xchg
ljmp
ds
or
inc
pop
ret
or
mov
push
adc
xor
pop
lock
ss
clc
push
inc
stos
dec
push
push
nop
ljmp
shl
idivb
xchg
inc
mov
dec
dec
mov
adc
enter
and
rcrb
jae
fbstp
mov
ss
sbb
ror
xchg
lcall
mov
push
add
jae
shr
inc
pop
mov
push
shl
or
jo
jns
mov
jmp
mov
mov
aaa
add
data16
ret
and
pop
add
lods
xor
jp
sbb
adc
sub
mov
lret
sbb
inc
or
mov
or
pop
add
sub
data16
shll
add
subb
fdivl
sbb
and
jmp
push
mov
add
mov
rolb
add
ret
hlt
andb
pop
push
sbbb
jg
pusha
push
sti
push
pushl
stos
imul
xchg
addl
adc
rolb
xchg
iret
mov
stos
shlb
adc
add
mov
inc
mov
rcrb
movsl
popa
add
scas
adc
sbb
and
incl
mov
clc
sub
xchg
and
xchg
mov
jp
inc
cmp
stos
stos
lcall
subl
sbb
xor
mov
loopne
lock
rolb
jg
jno
js
cmp
ljmp
adc
bound
and
rol
add
stos
inc
mov
and
add
popf
test
pop
sbb
cmpsb
inc
dec
xchg
mov
adcb
shrl
loopne
lcall
and
add
inc
outsl
test
pusha
sub
or
jg
lods
pop
cmp
sub
adc
rcr
or
and
loop
sub
fisubl
ret
mov
adcb
and
add
mov
pop
mov
and
es
and
xor
push
mov
jle
rcrb
shlb
sbb
nop
aam
fisttps
into
xor
loopne
xorb
aaa
adc
imul
adc
aaa
adc
add
jno
xchg
add
or
pusha
jo
bound
sub
cli
mov
into
ds
leave
or
mov
cmp
movsb
inc
and
adc
rorb
cld
push
inc
adcb
lar
sub
sub
sbb
xchg
sbb
test
push
call
cmp
shrd
test
jg
sub
fcoms
and
and
idivb
push
sbb
xchg
adc
loopne
sbb
cmp
lcall
cld
cmc
sub
movsl
xchg
test
outsb
xchg
or
or
fdiv
add
in
mov
lock
loopne
jg
in
cli
jg
mov
add
data16
loopne
fwait
dec
cmc
add
ja
dec
popf
cmp
jns
jecxz
outsl
pop
int3
ljmp
jo
insb
bnd
xchg
mov
adc
std
sti
call
imul
mov
xchg
and
add
sbb
fildll
mov
adc
cmp
xor
int
cmc
jle
js
mov
xchg
hlt
pop
testb
mov
hlt
mov
pushf
mov
cmp
and
loop
or
xchg
mov
fwait
mov
inc
jbe
sbb
inc
and
adc
fcomp
jmp
jo,pn
icebp
cmp
std
add
lock
pop
mov
in
xchg
dec
xor
test
push
jb
add
mov
mov
mov
sbbb
and
incb
mov
sbb
test
push
mov
out
xchg
lock
lahf
lea
xchg
push
es
inc
sbb
and
cmp
add
pop
add
fstps
mov
rcrl
pop
push
sbb
dec
or
pop
add
mov
adcb
and
addl
pop
cmc
cs
inc
adc
xchg
jb
pop
inc
aas
cmp
mov
or
push
adc
mov
outsb
or
push
loopne
mov
mov
mov
lock
or
jb
or
push
sub
push
or
and
loope
loope
push
pop
add
sbb
out
sub
or
lcall
add
into
outsb
out
xor
inc
inc
mov
sub
mov
pop
adc
or
sarb
jge
mov
rolb
pop
stos
add
xor
push
pop
or
adc
outsb
mov
and
rorb
lock
mov
pushf
ret
mov
and
cmp
xsha1
cmpsb
or
inc
jns
mov
mov
pusha
mov
adc
bound
cmp
cs
enterw
inc
cmp
mov
in
add
nop
es
ljmp
cli
add
leave
je
pop
mov
mov
inc
inc
mov
aaa
push
lcall
ja
mov
xorb
sti
mov
mov
jb
inc
push
test
mov
xor
outsb
pusha
add
add
cmp
dec
mov
aad
mov
pusha
add
loop
and
sbb
sub
jae
inc
ds
insl
jo
ret
inc
sbb
and
movsb
inc
ret
adc
rorl
add
and
sbb
adc
sbb
iret
adc
loopne
icebp
sbb
repz
jle
mov
dec
or
xchg
or
mov
push
and
int3
xor
sbb
incl
jo
xchg
int3
jno
sbb
push
or
jg
ret
adc
cltd
mov
and
mov
mov
push
icebp
dec
dec
mov
fstl
orb
push
pop
lret
or
rorl
les
cmp
pop
ss
popl
addb
add
mov
xchg
pop
pusha
sti
iret
pop
stos
mov
inc
int
nop
adc
mov
testb
lock
mov
jp
and
inc
es
adcb
or
dec
dec
adc
gs
movsb
dec
or
cs
adc
dec
or
or
ret
cs
inc
dec
mov
push
in
lcall
dec
add
andl
push
adc
jle
adc
jecxz
mov
or
pop
and
dec
leave
add
adc
gs
push
xor
sbb
mov
mov
and
jle
pop
or
fbld
nop
test
jbe
jns
ret
inc
or
mov
inc
push
bound
or
fs
sub
or
jb
pop
inc
shlb
add
dec
adc
jg
loopne
adc
mov
enter
ljmp
rolb
movups
stos
insl
sub
daa
sbb
fucomip
pop
andb
aas
and
sbb
inc
push
nop
outsl
decl
or
jo
and
or
lcall
cmp
mov
aaa
pop
push
repnz
sbb
inc
mov
sarb
inc
xor
out
mov
push
pop
pushf
fiaddl
fisubrs
add
das
cli
xor
mov
dec
mov
movsb
jp
push
push
xlat
icebp
pop
push
xchg
aam
outsb
jge
and
or
nop
inc
pop
mov
nop
inc
push
outsb
jbe,pt
in
fwait
mov
dec
outsb
mov
jb
rolb
jp
stos
sub
jle
xor
int3
aad
mov
outsb
sbb
add
dec
loope
add
add
js,pn
jg
and
inc
dec
pop
xor
jne
or
and
rorl
jl
or
pop
and
dec
mov
scas
xchg
mov
pop
nop
sbbb
dec
lcall
mov
fimuls
mov
cmpsl
fistpll
sarl
or
mov
adcb
std
and
loope
mov
pop
mov
pop
inc
mov
mov
int3
loope
test
mov
xchg
push
xchg
jae
jo
sti
add
lret
shll
adc
icebp
shlb
xor
jbe
xor
lods
nop
in
std
pop
mov
inc
add
sbb
sbb
clc
jg
inc
lret
adc
mov
daa
sbb
sub
and
fcomps
xor
test
lea
cmp
and
ds
pop
inc
lcall
mov
andl
mov
cmpsb
cs
sub
mov
mov
lock
loopne
push
in
xor
push
or
sbb
add
pop
mov
push
adc
inc
leave
orl
mov
mov
mov
xor
repnz
inc
sbb
pop
and
or
add
add
or
pop
or
dec
lret
lahf
push
sar
lret
js
ret
push
mov
xor
popf
push
mov
inc
popa
mov
xor
dec
test
insb
push
testb
pop
lock
or
adc
sub
mov
mov
dec
rorb
lock
mov
lock
and
aas
repnz
lret
adc
pop
push
cmp
repnz
or
ret
stos
push
mov
mov
push
push
aas
pop
push
mov
push
test
adc
ret
lret
mov
sub
repnz
mov
imul
xor
loope
inc
xchg
jmp
cmpsb
add
andb
fwait
adcb
movsb
xor
mov
push
mov
js
sbbb
mov
out
cld
mov
nop
jp
and
rolb
dec
and
and
or
rol
ret
addr16
add
ds
fistpl
mov
pop
fwait
pop
sub
jno
in
decl
add
jno
mov
ds
pop
int3
and
push
jb
loopne
add
clc
lcall
imul
push
mov
leave
stos
dec
mov
add
pop
test
add
add
enter
inc
bound
sub
pop
jo
xor
and
das
aaa
adc
mov
dec
dec
cld
lea
ret
je
test
cmpb
and
sbb
cmpsl
cwtl
mov
subb
or
pop
addb
xor
pop
add
shl
daa
add
js
pop
mov
xchg
push
out
add
add
lock
xorl
pusha
mov
test
mov
data16
fisttpll
xorb
and
dec
gs
inc
xchg
or
adc
dec
sub
add
push
push
or
cli
cmpsb
pop
and
mov
ds
mov
pusha
dec
cmpsb
loop
loopne
add
mov
inc
pop
sbb
aas
and
mov
mov
and
mov
dec
adcl
aaa
dec
and
add
mov
je
mov
adc
push
fstpt
add
dec
call
xchg
scas
pop
pop
cmp
sarb
mov
cli
addb
add
adc
add
rcrb
nop
or
dec
dec
add
push
or
adc
add
add
sbb
mov
ja
shlb
stos
mov
repz
ds
fld
data16
inc
stos
xchg
mov
sub
pop
incb
or
and
test
incl
subb
andb
orb
negb
sub
and
pop
add
inc
add
shlb
sub
add
sub
ljmp
inc
shlb
mov
cld
mov
cmp
add
add
es
and
fs
push
frstor
push
adc
inc
leave
mov
sahf
add
sbb
sub
dec
adc
xchg
push
xor
ret
test
mov
sbb
mov
sbb
cmp
outsb
cmpl
add
push
mov
lds
mov
add
mov
or
push
dec
and
jle
or
mov
jbe
mov
mov
movsl
mov
into
nop
mov
rol
popa
sbb
mov
popa
shlb
movsb
hlt
xor
jno
cmp
pusha
adc
sub
dec
add
mov
ds
add
add
jno
dec
add
rclb
or
add
call
push
loopne
les
push
xorb
add
or
roll
andb
jg
mov
inc
push
mov
aas
dec
mov
xchg
pop
test
mov
jg
fsubrs
mov
pusha
mov
cmpl
incl
cmp
sbb
and
sbb
dec
add
adc
rolb
insb
sbb
jle
push
adc
dec
sarl
xor
out
ds
sub
pcmpgtd
rcrl
and
aam
shlb
dec
inc
lcall
sub
loop
ds
ljmp
je
dec
mov
mov
pop
popa
sub
cmpsb
adc
ret
xor
inc
mov
shlb
and
and
xor
xor
idivb
and
and
jbe
mov
and
adc
sti
inc
pop
addb
addl
mov
fimull
mov
inc
jb
mov
push
rorb
and
push
mov
jecxz
add
add
sbb
cli
mov
pop
sarl
loop
adc
xchg
mov
mov
icebp
call
xchg
pop
add
fcmovb
or
mov
push
outsb
mov
and
push
and
push
fs
mov
mov
mov
fcmovb
sbbb
shll
or
jbe
rorb
inc
push
in
mov
ds
into
es
shlb
ja
pusha
pop
jg
rorb
fwait
into
or
mov
subb
movsl
adc
and
adc
dec
subl
dec
je,pt
cmp
clc
jl
cmp
pop
pop
push
cmp
mov
and
jecxz
inc
or
cmp
add
pop
rolb
orb
pop
pop
pusha
sub
dec
jp
mov
push
popf
mov
mov
dec
shlb
popa
pextrw
mov
mov
jp
test
push
addb
roll
xor
popa
xchg
sar
outsb
cmp
and
lcall
jmp
mov
and
sbb
adc
inc
sub
mov
mov
pop
and
mov
mov
lcall
leave
sbb
insb
add
dec
inc
int3
pusha
addb
mov
jne
aaa
aam
mov
pop
hlt
inc
lods
sub
imul
dec
inc
push
cmp
movsb
jno
aaa
and
cs
pushl
aaa
add
inc
cmp
subl
mov
xor
sbb
punpcklbw
pop
jl
stos
mov
mov
or
mov
adc
pop
xor
mov
test
mov
test
xchg
mov
xor
inc
mov
sub
inc
mov
add
adc
cmpsb
in
lock
push
in
in
popa
outsb
add
enter
inc
cmpsb
push
mov
add
push
movsb
repnz
and
add
push
out
add
nop
aaa
inc
jae
and
sbb
mov
adc
js
and
dec
js
fs
ret
inc
aas
dec
shll
jg
lods
std
mov
add
add
bound
das
shlb
dec
aas
ret
loop
add
andl
mov
mov
sti
jg
sub
jg
or
or
adc
push
add
dec
push
inc
lds
ss
adc
and
adcl
and
popa
pop
jo
xor
leave
inc
jmp
cs
lea
mov
mov
call
push
test
dec
repz
add
pop
sahf
cmp
aas
inc
or
inc
negb
fwait
adc
fidivs
xchg
add
add
xchg
pop
sub
push
test
dec
xchg
pop
inc
lock
add
add
inc
add
pop
cli
pushl
clc
add
cmp
and
sbb
jo
bound
flds
push
mov
pop
sub
jne
and
or
push
adc
mov
shlb
bound
or
mov
xor
adc
ret
inc
and
movsl
rcr
and
rcll
ds
adc
adc
rcrb
jno
inc
lcall
sbb
stos
shr
shrb
js
outsb
nop
mov
jg
sbbb
inc
loope
inc
cmp
cmp
and
repnz
adc
sbb
insb
rcrl
add
leave
je
nop
fdivp
push
sub
mov
mov
cmp
gs
hlt
mov
mov
push
incb
dec
xchg
or
mov
es
mov
dec
or
or
das
xchg
adc
les
dec
lea
add
mov
xor
add
add
mov
or
mov
ljmp
popa
add
aas
sub
test
add
pop
ljmp
or
adc
cmpl
push
jl
inc
outsb
mov
popf
add
push
lds
data16
lock
or
inc
mov
mov
xor
decl
ljmp
inc
repnz
adcb
dec
xor
mov
inc
dec
fnstenv
dec
adc
sub
popa
cwtl
mov
pop
add
lock
sbb
pop
cmp
fldt
pusha
addr16
dec
mov
dec
mov
mov
out
hlt
pop
popa
mov
es
sbb
push
mov
fimuls
or
fsubrl
pop
mov
fidivs
lret
xor
push
or
aas
stos
dec
push
cmc
incl
pop
aas
faddp
or
adc
jo
mov
loop
pop
add
inc
xor
push
pop
adcb
arpl
add
lods
les
inc
pop
push
jp
add
jle
adc
roll
adc
mov
ret
ljmp
push
loopne
pop
data16
subb
sub
lods
mov
dec
out
inc
xchg
ss
inc
lock
aaa
or
or
add
sbb
xor
add
scas
jp
jg
xchg
daa
pusha
add
inc
nop
and
xchg
pop
xor
adc
inc
push
cmp
mov
fsub
mov
lcall
xlat
pop
sbb
pop
clc
outsl
jno
xor
mov
inc
ljmp
sbb
pop
add
insl
bound
decb
add
pop
inc
and
aaa
push
sbb
cld
ret
adc
push
lock
add
popl
stos
add
adc
arpl
cmp
sbb
add
nop
push
aas
push
mov
outsl
mov
gs
dec
add
or
popa
and
loopne
in
mov
andb
mov
mov
int3
pop
pusha
adcl
add
nop
or
or
cld
mov
je
adc
or
scas
or
imul
add
outsl
out
xchg
or
or
fwait
or
fwait
push
dec
inc
mov
mov
cmc
aaa
mov
adc
jg
add
sbb
inc
xor
push
mov
xchg
and
jmp
insl
pop
loopne
adc
push
jb
xor
hlt
push
ret
add
xchg
and
push
dec
fstpl
clc
mov
cmp
inc
add
jbe
mov
push
dec
and
sbb
and
lods
es
mov
add
adc
in
jle
lret
js
std
mov
pushf
orl
mov
push
imul
test
ret
dec
nop
pop
sbb
insb
ss
xchg
ret
cmp
pushw
add
add
rorb
adc
loop
cmpsb
in
or
jp
sbb
rorb
push
cli
or
mov
in
lcall
xchg
and
push
lds
cmc
sbb
cmp
sub
mov
int
adc
mov
push
xor
dec
jno
dec
jp
sarl
sbb
xchg
adc
dec
sub
notb
jbe
pop
add
mov
mov
test
clc
and
sbb
shl
rcrb
cmp
add
ds
sub
ds
mov
shlb
clc
mov
and
mov
lock
mov
rorb
bound
or
adc
ljmp
ret
aam
aad
aam
adc
dec
adc
add
push
adc
inc
rolb
jo
int3
or
sub
loopne
lock
inc
outsb
sarb
outsl
popa
jo
ficoml
in
sub
sbb
aad
outsb
pop
lock
adc
sbb
jo
push
sub
outsb
xchg
loop
adc
ja
clc
sbb
mov
mov
mov
decl
movsb
pop
pop
sar
movzbl
mov
test
cli
repnz
scas
add
add
out
push
les
or
jno
aas
mov
loopne
sbb
xchg
cmp
xchg
repnz
js
adc
mov
mov
xchg
fwait
sbb
xor
add
pop
jg
dec
mov
xchg
ds
mov
mov
cmp
add
or
push
or
stos
popa
jb
push
jbe
push
cmp
mov
add
mov
mov
mov
out
sbb
lcall
jbe
xchg
mov
and
add
dec
or
or
adc
or
pop
popa
sbb
dec
jno
aam
in
add
leave
mov
mov
cmp
mov
pop
shlb
orl
sub
add
push
add
xchg
push
lock
pusha
shrl
xchg
add
adc
jle
inc
pop
into
xor
xchg
mov
out
pop
test
adc
iret
cs
adc
stos
mov
inc
push
movsb
out
loopne
cmpb
pop
mov
adc
add
sbbb
movsl
sub
outsl
neg
or
sbb
orl
push
jb
lahf
jg
js
gs
call
cmp
push
pop
pop
sbbl
mov
movsb
jno
pop
lods
sbb
push
add
les
adc
adc
sub
jmp
mov
call
jg
push
inc
cmp
icebp
mov
add
jns
sbb
imull
add
rorb
out
dec
lods
addb
or
pop
je
cmp
sbb
jb
addb
mov
popl
pop
sub
call
call
ss
in
sub
add
ja
xchg
pop
inc
addl
xchg
cmp
or
into
cmpl
xchg
cmpl
jg
sbb
dec
fwait
cmp
stc
xorb
cmp
orl
hlt
add
pop
fsubrs
xor
jbe
and
mov
loop
scas
push
and
and
and
dec
or
dec
and
jmp
shrb
sti
cmpsb
pop
ljmp
cs
mov
adc
add
roll
cmpsl
push
xchg
mov
inc
xor
cltd
sub
imull
adc
mov
add
dec
or
sahf
pop
mov
nop
add
ret
incl
movsb
clc
adc
dec
dec
mov
xchg
jnp
add
jl
clc
jl
add
sbb
decl
push
inc
mov
dec
fcoms
push
cld
sti
fistl
or
les
cli
pushl
adc
xchg
mov
sbb
and
sbb
rep
out
outsl
xchg
add
sbb
cmc
jno
push
dec
and
iret
and
dec
rcr
int
insl
fadds
in
push
cmp
data16
fbstp
push
xchg
out
outsb
xchg
jp
clc
outsl
mov
rorl
cli
mov
dec
ret
mov
push
call
jp
fsubl
jp
insl
inc
cmpb
push
inc
xchg
outsb
clc
push
push
cld
or
outsb
mov
add
or
adc
mov
insb
clc
scas
rolb
fdivr
sbb
insb
or
daa
std
fists
inc
pop
pop
fs
mov
add
pop
dec
inc
cwtl
mov
data16
mov
dec
ret
rclb
rorb
ljmp
subl
mov
pusha
out
push
inc
sub
out
mov
sbb
loope
xchg
aaa
mov
add
and
nop
jns
jp
xor
sub
inc
cmc
pop
push
cmp
cmpsb
mov
test
add
add
loopne
add
add
cmpb
mov
gs
dec
popa
jns
js
xchg
or
jb
cmp
daa
inc
inc
stos
std
mov
push
mov
adc
mov
mov
push
add
mov
inc
cmp
loopne
loopne
pusha
inc
ja
mov
jmp
or
sub
add
pop
mov
add
mov
adc
sbb
adc
mov
and
mov
mov
pop
mov
pop
cld
add
sbb
enter
push
mov
shll
jp
mov
or
rorb
shlb
std
mov
and
add
clc
jg
push
pop
cwtl
pusha
adc
add
aaa
into
bound
xor
xchg
and
jmp
pusha
xchg
and
inc
inc
adc
sarb
enter
lcall
xorb
pop
inc
add
aaa
cmpsb
and
cmpsl
add
push
sub
mov
sbb
ss
data16
adc
push
sbb
add
or
jg
mov
dec
popa
dec
clc
sub
or
mov
jnp
cmp
lcall
add
mov
xor
or
sarb
ret
pushf
jns
sub
sbb
xor
jecxz
or
add
pushf
add
aaa
out
leave
inc
mov
fmuls
push
inc
mov
xchg
add
fadds
mov
scas
push
pusha
rol
mov
cmpsl
inc
push
jg
or
cwtl
addb
adc
or
or
mov
into
mov
int3
out
and
push
inc
orl
or
mov
or
add
icebp
mov
lock
xchg
ret
inc
mov
sbb
pusha
add
aam
mov
add
cmpb
aam
xor
pop
ja
and
and
rcrb
adc
adc
pusha
xchg
inc
shrb
loop
dec
adc
sbb
add
jb
sbb
lcall
adc
ss
ret
test
sub
add
shlb
add
in
int
and
loopne
bound
adc
pop
pop
loope
andb
in
aam
clc
adc
insb
mov
ds
add
sbb
loopne
or
into
stos
and
lock
sub
mov
add
xchg
ret
mov
fldt
mov
jae
pop
loope
shrl
repnz
or
pusha
add
and
shrb
stos
cmp
popa
and
push
or
aam
inc
dec
mov
mov
movsb
add
push
pop
or
adc
xor
inc
inc
or
leave
ret
dec
cs
push
push
add
jp
dec
mov
mov
pop
es
xor
nop
cs
lock
mov
jb
push
ljmp
test
in
scas
mov
pop
xor
aas
add
mov
icebp
cmp
or
ds
inc
and
mov
sbb
cmp
mov
sbb
lcall
cwtl
adc
add
mov
ss
cli
xor
xor
lock
ds
mov
mov
adc
bound
aam
push
pop
popa
mov
jo
adc
faddl
and
mov
js
xchg
mov
hlt
xor
rolb
mov
rolb
or
dec
cwtl
dec
pusha
and
add
aaa
ret
sub
sub
es
add
xchg
sub
aas
inc
ja
test
cs
jae
addr16
sub
lods
adc
xchg
in
outsl
mov
es
roll
ret
or
popa
or
adc
push
or
inc
push
inc
mov
mov
leave
adc
pop
jo
pop
clc
sbb
rcrl
aaa
dec
lret
jbe
ret
add
dec
jno
add
dec
jo
dec
adc
sub
das
xor
popa
adc
cmp
rcrl
push
pop
pop
in
cs
xorb
aaa
mov
and
add
or
add
mov
add
mov
or
add
adc
shll
add
mov
sbb
push
add
nop
and
dec
aas
and
lock
adc
sbb
fildll
mov
adc
dec
or
mov
and
mov
fcoml
mov
inc
lds
pusha
jno
in
push
add
pop
add
jle
push
dec
ds
add
add
push
ja
imul
xlat
ja
les
jl
jno
test
mov
bound
jp
xchg
fs
adc
subb
mov
and
adc
pop
data16
sub
dec
lods
std
mov
add
inc
ds
aam
outsl
inc
jb
loope
and
movsb
mov
push
push
repnz
and
pop
nop
add
inc
decl
mov
add
pop
movsb
jo
mov
mov
xlat
test
lahf
test
aas
test
or
sbb
cli
mov
or
lock
mov
adc
ds
repnz
mov
int3
mov
je,pt
les
shlb
or
ds
rcrb
and
mov
pushl
scas
and
repnz
dec
sbb
movsb
mov
add
push
or
adc
or
mov
mov
movsb
lock
loopne
jge
outsl
adc
dec
ljmp
outsl
loopne
add
push
add
add
pop
and
jg
sbb
xchg
inc
inc
sahf
sub
adc
movsl
movl
jb
mov
and
xchg
rorb
out
xchg
sbb
sub
repnz
or
mov
les
je
and
lfs
or
mov
insb
add
mov
mov
mov
dec
rorl
dec
mov
or
push
loopne
rclb
pop
sbb
mov
adcb
popa
dec
loop
pop
aam
add
or
dec
and
into
xor
das
push
add
mov
add
mov
dec
jbe
add
xor
inc
cmp
mov
dec
imul
mov
cli
mov
mov
and
and
add
mov
jg
jo
mov
inc
push
pop
adc
xchg
dec
add
pop
xor
adc
mov
cs
jecxz
mov
jle
push
mov
loop,pn
dec
outsb
scas
mov
lcall
sub
ds
pop
dec
lret
and
jo
js
add
and
push
and
addr16
shlb
add
push
imul
dec
int3
xor
sub
sub
and
xchg
mov
jbe
push
mov
mov
int3
add
scas
dec
ja
sub
push
and
and
lock
xchg
pusha
in
dec
ds
sarb
mov
add
push
mov
aaa
inc
out
add
xor
push
sbb
sbb
inc
es
add
push
lods
aaa
pop
pop
jle
sbb
fdivs
in
cli
pop
dec
jo
xchg
push
jg
add
test
data16
cmpsb
subb
cwtl
adc
std
add
les
std
rorb
jno
mov
testb
nop
mov
in
cld
jg
cmc
sbb
mov
push
xor
xchg
cmp
mov
cs
pop
push
pop
lock
and
cmpsb
xor
lock
fs
bound
into
int
call
add
and
add
aaa
mov
and
dec
cmpsb
das
clc
mov
pop
push
and
dec
xor
pusha
add
add
dec
and
sbb
mov
or
adc
xchg
out
add
call
xchg
insl
add
int3
adc
sub
sbb
adc
sbb
sbb
add
inc
test
imul
andb
mov
sub
and
ret
inc
and
push
aaa
add
decl
push
pop
adc
inc
adc
gs
xor
imul
jmp
gs
cwtl
adc
ret
inc
aad
ret
fidivrl
mov
push
aam
mov
outsl
pop
inc
shlb
add
mov
jmp
pop
nop
xchg
and
insb
xor
push
mov
add
mov
sahf
mov
mov
and
inc
test
cpuid
pop
jo
sbb
push
pop
loop
insb
jno
aas
pop
sbb
div
rorb
mov
jle
push
cwtl
shll
pop
es
add
clc
pop
sbb
xor
sbb
jno
int3
pop
sbb
mov
push
sbb
mov
or
subb
jb
outsb
mov
jae
lret
inc
mov
add
inc
push
add
and
cwtl
push
adc
scas
pop
ror
out
and
pop
push
mov
int
mov
subb
and
loop
clc
adc
sar
pop
iret
mov
dec
iret
push
mov
or
add
add
mov
icebp
pop
or
lcall
jne
jae,pt
js,pt
push
fs
test
push
add
mov
sbbb
jmp
push
add
pop
test
xchg
and
push
dec
addb
cli
xor
adc
cmp
or
adc
inc
mov
adc
test
xchg
inc
cld
cld
xor
icebp
subb
add
divb
push
adc
push
adc
sar
adc
add
adc
xchg
dec
cs
test
in
rorl
dec
mov
sti
das
or
movl
dec
popa
pop
mov
imul
nop
cmp
push
dec
mov
xchg
push
push
bound
inc
pop
dec
add
addb
lret
roll
roll
inc
adc
int3
js
push
pusha
inc
jl
add
scas
sub
push
test
dec
mov
leave
testb
aas
imul
mov
test
push
decl
inc
or
inc
inc
add
inc
dec
cmp
pusha
mov
sbb
in
push
mov
jge
adc
enter
fwait
lret
lcall
mov
push
rcrl
mov
cmp
fs
movsl
cmp
rcrl
push
add
push
sbb
mov
outsl
lret
test
mov
aaa
ja
dec
pop
dec
pop
inc
add
pop
shrb
jno
cmp
data16
arpl
jo
add
mov
mov
sub
shll
mov
adc
inc
xor
jmp
mov
add
call
or
ss
sbb
pop
sbb
pop
lods
and
pop
jb
xchg
xor
call
add
mov
or
jle
aam
je
pop
xchg
enter
push
shl
pop
stos
mov
ficoml
popf
les
mov
or
add
call
cmp
xor
rcrb
rclb
or
push
inc
mov
hlt
stos
int3
adc
mov
and
fcomp
cmp
sub
sahf
leave
mov
rol
int3
shlb
dec
mov
push
leave
mov
and
or
pop
loopne
pop
push
xor
jno
dec
xchg
or
lea
push
std
outsl
mov
roll
addb
xor
clc
jecxz
xchg
test
or
pop
pop
xor
pop
mov
in
push
sbb
lcall
in
movsl
xchg
sub
adc
mov
rclb
sub
rcrl
lods
ficomps
add
cmp
sbb
inc
into
loopne
pop
cmpsb
lock
cmp
or
jle
adcb
shrb
jo
jbe
adcl
mov
jbe
jae
ds
inc
fmuls
inc
mov
call
lcall
aam
sub
push
loopne
mov
orb
mov
add
inc
jne
data16
lcall
mov
movsl
cmc
ljmp
push
pop
pusha
xchg
inc
pop
into
rolb
mov
inc
cmp
sbb
pusha
ja
jbe
outsl
mov
jmp
mov
les
mov
sbb
dec
sbb
dec
mov
and
inc
inc
std
push
mov
dec
test
and
add
lcall
mov
cmp
jg
rorl
or
movl
add
rolb
ljmp
int3
sbb
sbb
sub
addr16
out
push
lock
push
mov
lods
jbe
inc
outsl
shll
add
mov
add
add
insb
xor
ret
adc
adc
add
popa
xchg
leave
sbb
les
pop
dec
sbbb
or
inc
mov
adc
into
push
ds
mov
and
mov
jmp
push
adc
ljmp
dec
cmp
cmpsb
ds
es
cmpb
and
jne
andb
movsl
lret
adc
mov
dec
pop
outsb
push
jecxz
faddp
and
test
ja
push
sbb
mov
out
and
sub
dec
dec
inc
add
outsb
repnz
sub
movsb
adc
stos
out
insl
ret
ljmp
dec
mov
repnz
push
push
mov
mov
loop
jmp
inc
adc
push
sub
pusha
inc
cmpl
xor
aaa
rol
sbbb
sbb
shll
adc
jae
inc
cmp
inc
or
fwait
sbb
scas
lcall
sbb
ret
mov
push
mov
inc
push
ds
dec
mov
add
pusha
out
push
jle
inc
add
or
loope
sbb
or
arpl
cmp
cli
addb
loop
xor
sub
jo
mov
mov
or
outsl
sbb
sub
int3
add
cmp
or
push
pop
rorb
outsb
mov
cmp
or
push
mov
shll
add
pushf
movsb
inc
stos
das
roll
icebp
fisttps
lea
add
mov
es
ds
cmp
adc
aas
adc
mov
xchg
xchg
add
mov
mov
add
inc
cmpb
mov
mov
shlb
sbb
mov
addr16
and
xchg
mov
mov
insb
icebp
or
ret
ja
cli
mov
xchg
nop
push
adc
mov
push
es
cmp
and
mov
push
repnz
je
movsl
and
test
add
loope
aam
jae
cmp
mov
dec
jbe
mov
ds
in
inc
mov
add
add
push
pop
es
test
cmpsb
leave
stos
fwait
lods
pop
and
lods
inc
bnd
inc
rorb
mov
test
adc
stos
dec
add
and
push
or
adc
inc
mov
mov
lods
xor
in
xlat
mov
jo
imulb
pop
rolb
pop
pop
sbb
push
roll
rcrl
inc
adc
dec
and
add
inc
xor
dec
sbb
add
add
mov
push
cmp
aam
mov
cmpl
or
xchg
mov
test
jle
or
cmp
add
push
adc
jno
push
lret
stos
dec
adc
inc
int
adc
data16
push
inc
cld
sub
rolb
mov
loop
pop
pop
inc
aas
inc
rolb
std
push
pop
push
ss
or
rclb
add
and
test
mov
insb
jmp
stc
sub
cmovbe
orb
push
add
push
mov
xchg
fwait
cs
rorb
mov
push
ret
inc
js
daa
mov
test
dec
xchg
add
insb
cmp
push
dec
mov
adc
sbb
or
pusha
ds
test
inc
or
nop
or
mov
push
shlb
sahf
repnz
pop
nop
jl
mov
or
decl
mov
outsl
add
mov
fidivs
push
dec
add
aaa
dec
cmc
or
bound
cs
adc
pop
and
push
pusha
outsb
push
mov
cs
ret
pop
mov
or
xchg
outsb
jae
pop
stos
pop
sub
or
inc
sub
pop
pop
divb
imul
add
add
mov
ret
pop
pusha
cli
or
and
add
mov
sbb
shlb
aaa
adc
cmpsb
push
fcoml
call
jp
add
scas
add
out
xchg
push
aaa
inc
add
pop
clc
inc
mov
add
lods
in
push
dec
push
jo
aaa
add
mov
cs
sbb
ss
data16
dec
or
rolb
pop
mov
in
scas
sub
int3
inc
mov
or
mov
add
fisubrl
es
sahf
ret
sub
mov
repnz
stos
dec
add
lret
js
stos
lret
cmpb
and
dec
shrl
dec
loop
or
and
mov
xchg
push
push
pop
adc
clc
mov
add
or
dec
add
xorb
mov
cmp
inc
jg
xchg
or
push
jge
outsb
dec
pop
jmp
cld
movl
aaa
or
push
push
fwait
mov
fidivrs
loopne
push
mov
pop
fbld
fidivs
mov
add
jno
sahf
jge
jge
add
lods
lock
mov
lods
and
les
fisubs
aam
xchg
lds
xor
add
bound
nop
adc
xor
les
incl
xchg
ret
lods
xchg
push
xor
mov
insl
ss
rolb
sbb
and
and
mov
or
mov
dec
inc
mov
sub
push
push
ds
testb
and
popa
sbbb
mov
adc
pop
cmpsb
jno
or
movb
rcrb
pop
adc
or
loopne
insb
sbbb
inc
add
ret
adc
fimuls
sahf
orb
xchg
ljmp
inc
dec
add
rcrb
inc
inc
test
ss
add
sbb
jbe
or
mov
adc
push
and
cmp
adc
loop
sahf
dec
adc
dec
iret
xchg
enter
outsb
js
aas
dec
mov
ret
jo
or
sbb
add
xchg
jno
inc
ret
push
push
aas
pop
dec
inc
sub
stos
les
add
ret
imul
js
add
mov
add
sahf
mov
scas
jno
cmp
mov
fisttpll
mov
xor
push
ds
jo
pop
in
jp
lret
ret
inc
adc
dec
cmpsb
lret
pop
adc
or
inc
aaa
mov
int3
push
lret
adc
shl
push
adc
outsl
xor
add
dec
ret
ret
add
mov
push
adc
inc
jo
ds
or
orb
jbe
cmpsb
aas
mov
ljmp
clc
and
imul
dec
jl
add
adc
adc
adc
nop
adc
mov
nop
mov
sbb
jne
mov
test
mov
fstpt
mov
mov
ficoml
adc
jno
inc
xor
pop
sub
add
or
xchg
inc
movb
xorl
dec
call
int3
xchg
pop
and
cmp
loop
pop
in
rcrb
and
cmp
xor
add
ficoms
inc
inc
inc
sub
and
stos
adc
add
das
fs
xchg
jl
sub
inc
jo
sub
push
mov
push
movsb
mov
test
shlb
inc
pusha
cs
fs
aaa
bound
aas
ret
cmp
les
out
and
and
sbb
sub
ret
mov
sti
mov
cmp
loop
mov
pop
mov
cmp
sub
mov
mov
push
mov
dec
loope
push
aas
call
adc
cwtl
add
lds
test
cmp
outsb
sahf
inc
cmp
ret
cmp
jp
cmp
cmp
mov
dec
test
punpcklbw
stos
lods
mov
call
xor
push
jb
inc
pushf
mov
add
sub
xor
inc
dec
fwait
sub
fs
addb
mov
sub
xchg
test
mov
cmp
mov
cwtl
out
push
sub
add
imul
adc
int3
push
hlt
loope
mov
lods
push
push
and
inc
ds
aaa
sbb
ror
cmpsl
mov
pop
inc
imulb
add
cmp
sbb
mov
lods
fs
jae
fs
mov
xchg
jo
mov
add
clc
or
push
inc
adc
dec
and
push
addb
test
add
ret
sahf
lcall
shrb
or
mov
mov
lcall
das
sub
mov
mov
ret
pop
decb
sahf
push
fidivrl
cmp
fiadds
ss
mov
movsb
mov
jo
pop
orl
fwait
popa
in
push
dec
mov
sbbb
andb
stos
orb
pop
inc
push
ss
ret
mov
sahf
sbbb
andb
xor
mov
test
nop
inc
jo
add
inc
addb
add
andb
and
and
into
dec
and
sti
aaa
xchg
loope
mov
dec
lcall
inc
repnz
mov
mov
xchg
mov
sbb
incl
sbb
and
scas
stos
ds
aad
inc
pop
repnz
arpl
pusha
add
xchg
mov
notb
mov
add
adc
mov
std
in
push
adc
mov
push
xchg
adcb
pop
mov
js
mov
add
sub
or
sarb
inc
push
mov
fdivrl
mov
pop
sub
xchg
push
aas
aam
rorb
mov
fisubrl
dec
add
xchg
rolb
xorb
fisttps
cli
inc
add
push
andl
je
inc
orb
mov
jl
sbbb
rorb
loopne
jle
les
add
ret
addl
add
push
xchg
cmp
pushf
inc
inc
jno
cmp
aas
mov
sbb
and
aaa
loope
test
jle
jbe
inc
aas
add
cmp
stc
dec
add
sub
jae
icebp
aas
orb
jle
add
ss
ret
out
adc
xor
adc
inc
insb
and
decb
cmp
clc
or
mov
xchg
cli
push
loope
mov
loopne
adc
push
cmp
inc
cmpsb
xchg
cmpsb
mov
xor
pusha
dec
lret
daa
mov
mov
mov
rorl
lds
mov
mov
rolb
sub
inc
adc
inc
jge
mov
add
jge
push
test
mov
add
rorb
inc
add
or
and
or
add
pop
lock
mov
and
mov
push
sbb
xlat
fnstenv
pop
inc
pop
xchg
or
add
mov
or
lcall
call
fldl
mov
mov
hlt
jae
loopne
adc
xor
inc
cmp
mov
subb
addl
jg
inc
push
inc
and
stc
push
orl
pop
lock
stos
add
incl
sub
jecxz
mov
movsb
pop
mov
cmpsb
std
or
andl
adcb
jp
das
inc
mov
orl
adc
pop
dec
das
inc
movsl
push
jl
outsb
stos
out
dec
ret
sub
int
setb
jno
push
orb
mov
lcall
loope
mov
add
addb
add
and
mov
aaa
mov
adc
loopne
jg
dec
jb
arpl
stos
push
jbe
mov
push
dec
add
pop
bound
add
xor
cmpsb
dec
loop
dec
add
movsl
dec
fmull
adc
clc
push
sti
push
jge
subb
jle
jg
jo
mov
and
or
push
testb
insb
push
and
sbb
sbb
mov
sub
push
mov
mov
and
mov
add
or
aas
repnz
decb
loope
jbe
fisubl
pop
mov
cmp
out
popa
add
push
loopne
pusha
es
subw
xchg
sbb
add
pop
or
subb
adc
xor
clc
push
dec
push
jmp
adc
sbb
jp
add
movl
or
movsb
dec
or
pop
cmp
pop
adc
or
mov
std
fwait
cmp
cld
jno
cmp
push
ret
pushl
mov
addb
mov
pop
lret
dec
mov
inc
and
adc
or
int3
push
jmp
in
mov
xor
pop
inc
xchg
loope
outsl
shlb
sbb
dec
leave
cmpsb
push
sbb
shll
cld
out
cltd
dec
push
enter
sbb
or
xchg
adc
pop
push
sbbb
push
sub
sbbb
cmp
jg
pop
xchg
inc
push
popa
mov
std
mov
sub
loope
xchg
sbb
or
rclb
inc
popa
add
mov
pushf
sub
add
xor
rolb
pusha
popf
xchg
jecxz
and
clc
shrb
cmpsb
and
popa
iret
and
popa
mov
jno
dec
pop
aad
or
inc
or
push
adc
adc
and
or
cld
fistps
adc
test
stos
push
pop
add
in
xchg
mov
cs
cmp
pop
lds
movsb
lcall
jae
push
ret
clc
xchg
lahf
add
enter
jbe
jne
push
mov
lock
sbbl
pushf
add
or
mov
rolb
adc
rcrb
xor
mov
lock
mov
add
cmp
add
cli
aas
test
add
sub
xorb
cmp
fdiv
aaa
pop
push
add
cmp
mov
push
add
je
mov
sbb
nop
jb
add
cli
mov
in
adc
jbe
cmp
cmp
mov
fcmovnu
mov
add
fisubs
xchg
add
mov
add
call
aas
pop
push
jo
movsl
jae
sbb
ljmp
aas
out
xor
mov
rcrl
mov
push
dec
dec
ret
lods
jnp
mov
pop
mov
rcrl
call
sbb
addb
repz
or
jns
sub
mov
scas
pop
pusha
or
mov
add
test
dec
or
and
js
inc
loope
and
jbe,pt
xchg
adc
xchg
jne
sbb
stos
nop
push
add
jb
push
add
dec
icebp
push
je
shl
and
sahf
dec
loopne
add
xchg
mov
mov
pop
add
sbb
ret
mov
dec
add
xor
or
aad
cs
dec
push
rcl
ljmp
cmpsb
rclb
and
in
pusha
cmp
push
mov
adc
sbb
outsl
xchg
adc
jae
sub
xor
dec
clc
push
arpl
mov
ss
mov
pop
sbb
lcall
adc
dec
jns
or
nop
dec
or
inc
add
xchg
mov
cmpb
dec
fwait
mov
ds
push
outsb
dec
sub
rol
inc
ds
pop
cmc
mov
inc
mov
add
mov
movsb
cmp
or
and
adc
pop
and
mov
ret
push
jbe
fisubl
or
movsb
cmp
or
mov
jp
sbb
xchg
rclb
push
or
sbb
sbbb
mov
mov
inc
or
jp
push
inc
lock
or
pushf
or
nop
ret
clc
mov
inc
mov
loop
and
stos
push
mov
and
jae
push
adc
inc
adc
push
sbb
clc
jg
mov
push
inc
inc
fbstp
and
sar
in
jmp
leave
mov
aas
pop
lea
pop
ss
mov
mov
mov
and
mov
pushf
subb
hlt
mov
xorb
outsb
sbb
mov
mov
outsl
push
mov
add
mov
adc
mov
mov
cmp
jo
cmp
in
mov
add
pop
sub
dec
jo
in
push
mov
in
and
ds
inc
mov
adc
popf
das
lea
mov
adc
jo
clc
add
dec
sbb
mov
adc
pop
and
fs
mov
push
sbb
dec
add
or
mov
push
cmp
mov
mov
cs
jo
cmp
sbb
pop
mov
sbb
icebp
cmpsb
adc
hlt
mov
stos
jno
movsl
mov
test
orb
aaa
cs
gs
es
mov
jl
loopne
push
mov
pop
jb
xor
sbb
adc
orb
loopne
adc
adc
add
mov
or
push
sbb
loopne
adc
mov
add
pusha
mov
sbb
push
cmp
mov
xchg
xchg
sbb
je
lods
lods
mov
orb
andb
sbb
push
and
and
lods
fdivrs
nop
lock
ja
and
in
xchg
or
mov
repnz
mov
mov
pop
std
push
push
cli
sub
xchg
mov
push
dec
clc
cmp
add
mov
aam
int
js
loope
leave
and
add
cmpsb
or
cmpb
inc
pop
and
and
xor
movb
add
mov
imul
adc
add
inc
mov
jle
or
dec
ror
shl
mov
push
js
and
mov
sbb
mov
add
clts
inc
shll
sbb
rolb
mov
xchg
lock
stos
enter
sub
xor
xorl
push
xor
push
test
bound
or
xchg
popl
stos
and
mov
cmp
rorl
xor
pusha
inc
sub
adc
mov
xchg
adc
adc
push
lds
push
test
popf
pop
outsb
xchg
push
jo
push
cli
sbbb
cmp
or
mov
adc
add
inc
add
inc
and
aas
sbb
mov
bound
nop
sbb
dec
les
in
ja
addl
xor
pusha
or
adc
ret
mov
jb
inc
sti
shrb
sahf
push
add
adc
rolb
and
scas
add
or
and
adc
jb
push
mov
adc
hlt
jb
pop
dec
loop
fcmovnb
pop
mov
push
insl
pop
jg
ret
lret
or
pop
nop
fs
mov
aas
adc
mov
movsl
add
pop
inc
repnz
mov
cmpl
and
jle
sub
fldl
lcall
cld
sbb
inc
sub
aad
popa
push
into
push
add
dec
pop
roll
inc
adc
inc
jo
pop
pop
pop
dec
pusha
aaa
mov
movsl
push
test
push
rcll
rolb
lock
testb
hlt
sbb
adcb
rclb
mov
add
push
xor
andl
xor
mov
xor
and
dec
adc
insl
js
loopne
adc
inc
mov
or
mov
and
mov
scas
add
pop
mov
or
add
push
ds
push
lcall
jae
fidivrl
jnp
hlt
and
xchg
jp
push
pop
dec
rorb
pop
repnz
rorb
cli
pop
adc
cmp
fs
out
adc
fdivs
fwait
add
xor
orl
jl
pop
je
xchg
es
and
xor
add
adc
cmp
outsb
pcmpgtd
lret
movsb
inc
sbb
das
rcr
mov
cmp
xor
aaa
inc
add
dec
and
add
xchg
dec
je
xchg
add
pop
mov
jge
jns
hlt
add
xchg
pop
ljmp
adc
sbbb
mov
adcb
sbb
rorb
jge
addl
test
jo
pusha
cmpsb
mov
ds
cmp
pop
pop
jl
leave
subb
dec
mov
inc
adc
mov
push
in
imulb
dec
sbb
sbb
addb
mov
dec
jo
push
sub
or
jb
mov
sbb
or
mov
lret
inc
test
adc
add
xchg
ret
and
imul
and
pushf
nop
ud1
xchg
push
hlt
add
push
mov
dec
dec
sbb
hlt
mov
inc
add
jp
loopne
dec
lock
fisubrs
add
mov
mov
mov
nop
mov
rolb
sub
fs
add
adcb
mov
pop
lea
mov
inc
xchg
mov
add
mov
call
pop
add
push
sbbb
pop
test
add
xchg
add
pop
sbbb
test
inc
shlb
and
das
jo
test
xorb
aas
dec
scas
in
call
push
int3
aaa
lret
repz
les
push
push
inc
bound
inc
sub
push
lea
inc
sahf
mov
aam
aaa
cld
filds
and
sbb
push
mov
orb
pop
pop
mov
or
lds
lahf
cmc
fwait
scas
push
test
incl
sub
sub
add
stos
xchg
dec
je
add
add
cmpb
cmp
mov
leave
sbb
and
rorb
sbb
adcb
lea
sub
add
fmuls
cs
add
jno
cmp
scas
nop
inc
ja
sbb
pop
push
dec
add
mov
mov
mov
in
and
dec
sbb
rol
call
pop
ret
lods
add
adc
inc
dec
aas
dec
ret
add
scas
pop
xchg
call
push
jno
cmp
mov
bound
xchg
imul
inc
mov
adc
inc
test
cmp
loop
mov
or
push
xchg
inc
mov
mov
dec
rcl
jg
lods
jg
jno
and
or
cmp
movsl
and
cmp
sarb
cmp
push
push
aaa
outsl
xor
xor
push
mov
shrl
fld
aas
in
push
lret
loopne
sub
or
nop
sbb
and
push
sbb
fildll
sub
or
adc
std
add
inc
inc
repnz
addl
mulb
mov
dec
mov
or
dec
insb
mov
mov
sbb
ret
add
adc
sysexit
sbb
jp
add
jle
or
jo
adc
sahf
mov
mov
and
dec
insb
mov
push
mov
sbb
add
shlb
xlat
fbld
loope
ds
dec
inc
nop
and
sub
push
jbe
stos
or
pop
push
adc
add
rolb
pop
mov
lock
pop
sbb
push
inc
mov
cmp
inc
jp
xchg
aaa
mov
or
shlb
or
popa
inc
subb
and
mov
adc
push
ret
dec
adc
cmpb
mov
inc
ds
leave
mov
mov
fsubl
cmp
xor
inc
rorl
ret
cmp
lea
inc
adc
pusha
add
mov
jmp
mov
and
inc
sub
push
lret
mov
lret
push
sti
and
xor
adc
jo
mov
xor
add
mov
je
mov
mov
les
loope
pop
outsl
ss
mov
comiss
mov
jae
std
in
jmp
xor
mov
outsb
test
sub
mov
push
pop
push
push
mov
mov
rcrb
inc
leave
sbb
add
adc
and
cs
sbb
cmp
int
pop
roll
ret
mov
cs
and
sbb
xor
in
xorb
jg
lds
pop
fisubl
cmp
addb
test
xchg
xchg
lea
adc
inc
pop
jo
loopne
jbe
aam
xchg
mov
dec
loopne
clc
dec
ljmp
inc
push
test
add
roll
mov
dec
ss
ja
inc
mov
jnp
rcr
dec
mov
mov
xor
rcrb
clc
add
sarl
adcb
mov
mov
shlb
loopnew
inc
or
inc
xchg
loop
jecxz
loopne
sbb
sub
jne
lock
roll
orb
and
jb
dec
mov
xor
xor
fimuls
xor
jb
mov
sbb
add
cwtl
jle
push
jmp
push
lods
test
adc
jbe
adc
adc
push
dec
adc
inc
es
dec
pop
add
sarb
push
shrl
aaa
xchg
je
push
pop
xchg
sarb
mov
and
add
gs
repnz
insl
add
fdivs
mov
jp
add
add
xlat
push
or
in
cmpsb
jge
movsb
cmpsl
test
mov
inc
in
push
push
loopne
dec
mov
or
or
add
sbb
sub
mov
mov
adc
shll
xchg
adc
aaa
or
incl
ss
loopne
mov
lock
cmp
mov
or
stos
and
push
sbb
and
stos
inc
dec
outsb
iret
adc
inc
xchg
out
lcall
sub
or
pusha
adc
push
aas
inc
add
sbb
faddl
adcb
add
aaa
adc
pusha
add
out
adc
aas
loop
in
ljmp
mov
ja
adc
iret
pop
stos
hlt
add
adc
shl
sbb
pop
test
gs
add
adc
testb
push
jle
and
mov
fs
leave
xchg
inc
mov
mov
xchg
push
outsl
setle
sbb
add
sbb
es
mov
mov
je
cmc
mov
xor
sbb
cmpsl
mov
outsb
jle
add
mov
mov
add
andb
sbb
dec
mov
nop
add
xor
dec
ja
fisubrs
cmp
xchg
add
cmpb
mov
jo
mov
repnz
mov
adc
push
add
inc
dec
add
inc
mov
push
xor
adc
dec
mov
push
or
jno
js
xlat
les
call
cwtl
mov
add
stos
mov
shrb
push
inc
cmp
jb
repnz
xchg
ret
adc
call
aas
mov
cmp
dec
inc
int3
and
shlb
sar
dec
loopne
ret
loope
add
inc
clc
or
aaa
adc
into
faddl
xor
int
movsl
add
mov
or
stos
dec
shll
or
insl
mov
paddb
shlb
out
push
pop
mov
jle
dec
lods
andb
adc
push
add
iret
orl
js
enter
std
js
sbb
outsl
xor
sbb
sub
and
mov
ljmp
dec
and
repz
nop
sub
xor
and
pushf
adc
pushl
jmp
add
mov
add
mov
test
xor
lock
cmp
ljmp
or
add
nop
ja
and
mov
ja
or
dec
add
sbb
icebp
sub
pusha
cmovnp
add
mov
movzwl
or
push
push
enter
mov
orb
jo
or
jne
subb
cmp
nop
ljmp
or
loopne
repnz
outsb
ret
adc
add
jmp
add
cmp
add
sbb
xor
roll
xchg
sbbb
fistl
adcb
addr16
and
and
and
repz
popa
ret
mov
adc
aam
sub
and
cmpb
push
loopne
jne
mov
adc
dec
bound
sbb
pop
sub
sbb
icebp
or
sbb
ret
fisttps
push
adc
jb
jge
cmp
jo
pusha
add
pop
mov
cmp
and
mov
fcompl
push
jb
adc
inc
pop
mov
add
or
ds
add
or
jp
mov
int3
std
aas
jnp
andl
leave
sub
add
push
and
pop
xor
mov
xor
roll
sbb
rclb
fisttps
pop
movsb
and
xor
sbb
xchg
fmuls
mov
popa
aad
dec
add
aas
fsubrl
jo
jbe
rcll
fmuls
push
jle
or
jno
out
adc
inc
ret
add
ds
sbbl
mov
ss
adcb
xchg
push
lret
inc
sbb
push
je
fistl
jo
sub
or
in
dec
fisubl
addb
push
adc
pop
enter
push
outsb
js
ret
mov
popf
adc
lock
mov
ret
and
ljmp
ret
int3
xor
cmp
mov
pusha
popf
inc
adc
shrb
mov
pop
inc
lock
mov
dec
ds
xchg
jb
jge
test
sbb
decl
adc
subb
jno
pop
push
add
call
in
pop
nop
aas
mov
push
push
sbb
dec
ror
jb
push
jp
add
pop
cmp
pushl
push
pusha
cmp
rcrl
inc
pushf
mov
xor
jg
mov
or
mov
cs
cmp
outsl
mov
inc
add
add
sub
jecxz
cwtl
fcmovbe
repnz
adc
sbb
adc
add
outsb
repz
xor
or
pop
addb
xor
dec
jg
mov
push
mov
lcall
test
push
push
xor
push
roll
loopne
xchg
inc
sub
fstl
cmp
add
and
or
mov
daa
test
xchg
push
mov
loop
jns
mov
das
mov
mov
ret
add
sub
add
mov
fdivr
cmpsb
mov
jae
ds
add
mov
inc
les
mov
pop
sbb
data16
nop
inc
sub
pop
pushl
mov
dec
jo
es
or
mov
nop
mov
loope
cmp
adc
stc
add
push
filds
arpl
inc
je
lock
push
inc
fbstp
inc
inc
push
int
push
mov
push
xor
mov
push
adc
sub
jbe
jge
pop
push
cld
orb
dec
js
xchg
enter
xor
push
mov
xor
adc
ja
inc
and
pop
add
cwtl
outsb
xchg
inc
ficompl
inc
and
hlt
ljmp
mov
adc
xor
nop
loope
movzbl
rorl
xchg
imul
push
in
es
inc
dec
bound
mov
mov
push
pop
push
cltd
add
addl
xorb
xor
mov
jnp
inc
cli
dec
cmp
in
cmp
cwtl
in
pop
dec
xor
sahf
add
or
cmc
xor
nop
push
mov
or
mov
inc
fisttps
mov
jo
popa
test
pop
and
mov
jne
sbb
and
mov
jno
pop
ds
and
sbb
mov
pop
add
leave
dec
fbld
jle
or
inc
sub
test
xor
mov
bound
js
add
decb
pop
mov
adc
pop
mov
inc
sbb
test
add
dec
add
push
popa
jl
mov
mov
add
pop
and
xchg
inc
testb
add
lcall
into
stos
sbb
push
adc
add
add
pop
rcll
cli
push
push
fstpl
add
jne
push
mov
jb
clc
sbb
mov
add
xchg
into
xor
mov
outsl
xlat
add
xor
ret
push
lcall
jns
test
loopne
sbb
mov
xor
add
lock
sbb
daa
and
les
or
les
es
shll
dec
aaa
mov
orb
cmp
movaps
sbb
mov
mov
test
call
pop
orb
call
adc
and
sbb
sub
sub
rorl
add
mov
inc
fisttps
fiaddl
lea
dec
fs
dec
cmpb
andl
xor
mov
outsl
pop
push
dec
add
rorl
orb
orl
add
pop
dec
add
mov
test
dec
jae
loopne
cmp
xor
and
mov
inc
es
push
test
mov
ja
pop
lods
mov
add
mov
les
inc
call
mov
mov
add
or
mov
mov
pop
jo
mov
push
pop
nop
add
xor
cmpsb
mov
icebp
scas
shll
nop
outsb
pop
mov
xchg
int
and
mov
ret
add
jp
inc
sbb
pop
dec
jl
cmp
subb
mov
mov
xor
pop
addl
push
inc
pop
popf
adc
incl
pop
fimull
adcb
rolb
push
lock
ss
add
faddl
pop
jo
mov
leave
inc
lea
aas
rcr
inc
mov
mov
pop
push
add
inc
xor
sarb
test
or
outsb
fs
sub
cmp
inc
inc
lods
and
jo
xor
inc
ja
rclb
and
sbb
dec
push
cmp
adc
lahf
xchg
xchg
pop
push
fwait
test
cli
jno
adc
cmp
push
adc
xorb
mov
icebp
or
mov
inc
test
xchg
push
int
addb
dec
mov
mov
out
mov
pop
lret
cmp
add
ds
adc
mov
cmp
sbb
lret
dec
insl
add
mov
aam
aad
add
int3
mov
les
or
cmp
or
outsl
lcall
rorb
pop
jb
sarl
test
inc
inc
pop
js
movsb
daa
or
movb
sahf
orb
dec
test
add
xchg
addb
or
inc
push
sbb
mov
ds
add
fdivrl
jg
mov
pusha
sbb
inc
mov
push
call
and
ds
data16
push
leave
pop
sub
inc
cli
rolb
mov
jmp
xor
inc
sbb
inc
sbb
mov
xchg
add
sbb
add
xor
mov
push
mov
loopne
xor
adc
inc
add
ss
sub
dec
int
adc
push
inc
test
pop
stos
jl
mov
pop
aam
mov
jg
inc
push
mov
and
add
popa
push
mov
int3
cltd
mov
pop
mov
mov
ja
jle
inc
mov
dec
mov
fists
mov
incb
shrb
and
or
and
adc
adc
movsl
scas
shlb
sbb
push
pusha
jns
call
loopne
pop
mov
xchg
rolb
push
outsb
sbb
push
dec
cmpb
aas
mov
cmp
pushf
add
and
pop
and
push
adc
cmpsl
adc
sti
jg
inc
or
int3
pop
movl
jg
push
sub
pop
inc
std
mov
popa
jl
xor
jecxz
dec
or
mov
pop
int3
inc
and
and
inc
orb
cmpsb
rcrb
sbb
loopne
pop
sbb
loop
movsl
push
rcrb
lea
mov
push
sar
sarl
mov
push
jp
pop
dec
add
cmpsb
repnz
push
push
pop
int3
out
push
loopne
inc
lods
enter
call
add
and
and
or
loopne
xchg
pusha
dec
and
cmp
adc
mov
adc
sbb
roll
xchg
rolb
adc
loope
and
xor
and
ss
lods
cltd
clc
filds
adc
pop
xchg
adc
fwait
ret
pusha
mov
push
incb
add
and
push
mov
rcrb
jecxz
negb
mov
adc
sbb
add
jle
movsb
in
lret
mov
loopne
lret
mov
popa
aaa
and
mov
mov
ds
push
dec
and
pop
bound
enter
mov
xchg
out
xor
addb
aaa
mov
dec
and
mov
cld
decl
dec
add
mov
shlb
mov
lret
loop
pushl
or
dec
mov
loopne
pop
popa
add
mov
or
add
mov
add
rcrb
stos
jp
dec
adc
sub
jge
mov
lods
loop
sub
test
mov
sub
lcall
incb
and
sbb
mov
and
int3
mov
dec
mov
sbb
mov
je
or
pop
jp
sub
pop
and
push
and
mov
dec
dec
inc
add
mov
gs
cmp
jle
mov
dec
or
in
inc
and
adcb
out
es
incl
les
add
mov
adc
pop
test
sbb
fildl
xlat
push
push
or
aam
sbb
pop
sub
mov
xor
das
leave
mov
sbb
les
cltd
shll
mov
push
inc
jno
inc
mov
incl
sbb
pop
jo
sbb
pusha
dec
adc
std
sbb
add
cmp
sbb
and
aad
and
testb
xchg
xchg
mov
jae
or
inc
push
inc
shll
push
add
push
mov
fisubs
pop
rol
add
lea
in
add
cld
push
ret
add
jns
cmpl
rcrb
or
jbe
push
subb
inc
into
mov
loop
push
mov
mov
add
sub
es
iret
adcl
add
loopne
jmp
add
xorb
adc
and
adc
movsl
xor
repnz
filds
or
orb
js
test
in
lea
sbb
lcall
pop
push
mov
xor
dec
dec
adcl
inc
mov
aad
iret
and
ret
call
xchg
mov
lock
outsl
mov
and
cmp
or
andb
or
mov
xor
popf
test
and
es
sbb
mov
mov
shlb
mov
dec
pusha
xchg
mov
add
push
pushf
dec
decl
es
inc
cmp
jo
pop
ds
or
icebp
xchg
xor
cwtl
pusha
or
sub
cld
dec
push
pop
mov
xor
and
and
sbb
push
test
dec
ds
sbb
inc
test
jno
and
fwait
into
xlat
jmp
add
roll
mov
dec
jl
pushl
or
adc
pop
rcrl
adc
decl
mov
je
pop
rolb
mov
cmpb
or
testb
inc
adc
fs
sub
mov
js
sbb
pop
dec
icebp
pushl
orb
jno
cmp
push
aam
or
movsb
push
push
or
jo
push
or
inc
push
leave
xchg
loopne
mov
pop
lods
loopne
pop
addb
mov
mov
mov
mov
adc
mov
or
cmp
push
or
adc
adc
inc
std
mov
inc
ss
lret
inc
xor
lods
leave
mov
mov
cmp
add
dec
lret
or
iret
and
mov
aas
pop
pop
cld
negb
mov
inc
add
fs
add
xor
outsb
mov
mov
cli
popa
xchg
mov
aas
pop
nop
clc
ja
adc
or
lret
ds
jp
pop
lcall
dec
mov
sub
add
cmp
push
rorb
jmp
sbb
and
mov
inc
pop
test
mov
pop
inc
outsl
mov
pop
mov
pop
mov
mov
mov
adcl
into
ret
sar
pushl
cmpsl
shll
add
dec
adc
and
pop
pusha
sub
push
jno
mov
add
lock
sub
lods
cmp
mov
decl
mov
scas
xor
sti
xor
adc
ret
mov
adc
mov
mov
data16
pop
mov
cmp
mov
lea
gs
cmp
lock
aas
pop
inc
les
dec
sub
leave
jo
pop
lock
outsb
je
xchg
inc
or
daa
pushf
lods
adc
cld
jmp
jbe
adc
sub
adc
pushf
push
rcll
fistps
sar
pop
jecxz
add
xor
mov
mov
dec
jae
pop
test
js
inc
int3
icebp
sub
sub
add
cmpsb
roll
inc
loopne
ret
push
push
int3
cmp
dec
or
inc
pop
call
dec
loope
test
add
inc
mov
jb
inc
jp
mov
mov
andb
add
mov
push
xchg
or
mov
mov
adc
mov
mov
pop
xor
or
add
cs
xlat
movsb
add
adc
js
inc
test
sbb
rcrl
subb
rcl
pop
mov
cmpsl
rorb
movsl
lea
shlb
cmp
or
cmp
xor
sub
fsub
clc
add
pop
inc
add
inc
sub
xchg
inc
mov
insb
push
push
mov
and
rclb
mov
add
inc
popa
mov
pusha
loop
ljmp
add
xor
movsb
mov
pop
xchg
shl
add
shrb
rclb
mov
mov
je
push
ret
push
dec
or
xchg
add
popa
mov
in
mov
movsl
mov
addl
aad
clc
call
inc
iret
adc
xor
mov
or
mov
and
mov
das
pusha
or
addr16
rorb
imul
loopne
sbb
jnp
mov
adc
ds
inc
and
push
and
cmpsl
mov
lds
or
or
lret
or
pop
rorl
aam
testb
addb
inc
or
or
jo
or
sbbb
mov
or
xchg
mov
sub
ss
add
stos
or
jle
push
ds
mov
dec
sbb
popf
xor
add
jle
es
dec
xchg
and
cwtl
loop
icebp
sub
jb
push
je
mov
inc
jg
mov
add
jle
add
sub
inc
add
cmc
jp
and
mov
mov
or
call
jp
mov
push
add
pushf
mov
add
lods
mov
adc
movl
les
add
mov
and
push
push
add
pop
divb
jno
lods
adc
test
add
iret
adc
push
mov
xor
dec
dec
sub
out
push
dec
mov
aam
inc
and
shlb
mov
subb
mov
iret
mov
cs
and
add
out
test
mov
or
test
xchg
decb
inc
cli
mov
mov
sub
adc
inc
push
mov
adc
in
sub
leave
mov
lods
push
dec
add
insl
addl
pusha
push
xor
pop
out
ja
pop
sbb
xor
dec
dec
mov
mov
mov
stos
mov
push
mov
and
ds
or
or
insb
sbb
fsubs
cltd
bound
mov
rcrl
pushf
ret
add
xchg
jle
or
or
push
dec
mov
aaa
mov
jbe
shlb
clc
fistpl
popa
push
add
adc
pop
sbb
jno
cmp
jae
je
ja
sub
jo
sbb
cmp
add
cli
addb
ljmp
sbb
cmp
push
lcall
xorb
movsl
cmpb
fsubrs
rolb
cli
cmp
lods
add
mov
pop
add
inc
or
aaa
add
push
mov
mov
inc
or
sbb
aaa
jle
mov
mov
jae
add
xchg
mov
xchg
push
jno
mov
adc
pop
mov
jo
aas
pop
adc
xchg
addb
or
mov
adc
sbb
rolb
ret
push
inc
rcrb
push
sbb
mov
mov
or
ds
pop
cmc
incl
inc
push
cmp
add
dec
addb
lret
mov
add
push
mov
ret
clc
fildll
mov
add
xadd
mov
adc
cmp
dec
bound
sbb
adc
outsl
incl
or
leave
aas
xorb
sbb
push
jae
cmpsb
sub
add
in
add
push
mov
lret
inc
push
pushf
lcall
adc
inc
push
dec
loop
ds
dec
jb
stos
jge
push
pop
jo
add
or
jno
movsb
or
jle
cmp
mov
cmp
xchg
aam
adc
add
and
mov
sub
cmp
inc
sbbb
adc
inc
inc
pop
and
add
mov
dec
seto
or
mov
arpl
pop
js
mov
jmp
pop
adc
rolb
add
mov
movsb
loope
test
mov
shl
xchg
ljmp
or
pop
pop
popa
je
add
test
xchg
or
lret
add
mov
add
add
mov
and
dec
push
push
push
jo
xor
mov
add
shll
shlb
ss
popa
ljmp
add
push
call
dec
or
xor
sbb
sbb
push
xor
mov
pop
push
clc
orb
add
add
insb
pusha
or
lea
push
add
mov
xor
add
ds
add
pop
dec
push
aam
mov
scas
xchg
and
pusha
adc
vminps
and
xchg
mov
push
icebp
sub
les
sarb
cmp
pop
inc
or
adc
mov
pop
insb
xchg
sbb
subb
data16
bound
pop
stos
arpl
mov
adc
xchg
add
sti
ja
shlb
outsb
loopne
xchg
and
sub
loopne
mov
in
cmp
xchg
inc
push
subb
pop
mov
adc
in
fwait
jo
loopne
outsl
xchg
dec
or
jp
bound
add
add
negb
loope
mov
and
sub
decl
sbb
mov
push
jge
lret
mov
pop
ret
mov
or
mov
test
jno
push
and
ret
fldcw
jmp
dec
jns
scas
rolb
in
ret
dec
jecxz
dec
loop
adc
or
sub
pop
pusha
adc
xor
loopne
ret
sub
xorb
or
lods
jl
jge
es
add
push
or
mov
or
cmpb
add
sub
sub
xor
add
xchg
les
loope
sbbb
or
jp
add
call
and
dec
add
sti
movhlps
les
pusha
sbb
pusha
push
cmc
jg
movsb
sbb
arpl
leave
inc
ret
push
movb
push
add
mov
add
lcall
jp
add
shll
dec
cmp
test
stos
sbbb
mov
jo
js
js
or
adc
add
mov
dec
mov
inc
add
add
add
popa
mov
mov
fildll
es
test
jns
add
icebp
add
cli
xor
imul
xchg
adc
orb
xchg
sbb
mov
fstpl
pop
inc
mov
cmp
mov
dec
call
int
test
add
pushf
ret
or
push
aas
inc
pop
xor
mov
pop
mov
pop
mov
mov
fisttpl
jge
dec
ret
push
inc
dec
and
dec
andb
ljmp
push
rolb
inc
jo
inc
pop
sti
or
aas
mov
rolb
mov
and
mov
mov
andl
push
add
lahf
xor
jl
add
addb
add
add
and
cmpb
add
push
mov
inc
push
or
sub
pop
mov
aas
lods
or
inc
add
rol
push
push
inc
popf
push
pop
mov
stos
dec
sarl
push
les
cwtl
lret
pop
add
push
loopne
mov
call
test
mov
dec
inc
add
call
add
clc
ja
ss
loop
shrb
add
outsl
sub
ret
or
mov
adc
jo
push
mov
and
scas
cli
cltd
movb
xchg
add
mov
mov
lods
mov
int
add
inc
addl
mov
inc
dec
inc
shlb
add
rcll
jno
add
mov
pusha
clc
stos
or
add
or
or
cli
add
rolb
leave
vandnps
les
mov
in
mov
push
pop
add
push
xor
outsb
xor
inc
mov
push
aam
call
dec
or
je
pop
mov
leave
mov
add
in
rorb
xchg
mov
or
stos
dec
xchg
dec
inc
mov
mov
rorb
pusha
pop
mov
test
jl,pn
mov
xchg
adc
nop
lock
cmpsb
mov
pop
inc
std
pop
or
push
inc
add
iret
xorl
mov
and
sub
decl
or
inc
add
shl
sbb
sbb
or
or
js
loop
cltd
xchg
dec
add
jg
inc
repnz
sbb
push
pop
sbb
mov
pop
mov
inc
or
add
and
daa
dec
lock
sbb
jecxz
sbb
sbb
adc
loopne
fsubl
and
mov
inc
or
fnsave
sbb
mov
mov
push
xchg
inc
push
rcrb
dec
adc
pop
cmc
sub
and
inc
jle
push
push
adc
and
sbb
rcll
fbstp
dec
ds
js
mov
mov
inc
cli
fst
test
sbbb
xchg
adc
dec
lock
or
nop
fsubrs
leave
mov
inc
orl
aas
cmpsl
dec
lea
mov
xor
cli
pop
or
sbb
and
add
xor
fcoml
loopne
roll
adc
pop
push
nop
pop
adc
dec
and
mov
jmp
xchg
mov
dec
mov
roll
or
mov
inc
or
inc
xor
adc
hlt
mov
jb
mov
mov
jbe
jmp
or
cmc
or
push
shl
loop
mov
cmp
pop
or
or
outsl
add
rcrl
or
mov
sub
or
adc
mov
rorl
pushl
dec
fwait
mov
mov
push
add
rclb
add
or
inc
hlt
push
xor
jp
sbb
rcrl
sbb
push
add
gs
pusha
mov
jb
cmp
inc
in
test
lods
in
pop
mov
cmp
dec
or
rorl
mov
push
cmp
cmp
push
inc
movsl
stos
mov
or
ljmp
aam
dec
ret
nop
xchg
inc
popa
pop
orb
popa
pushl
jno
stos
pop
adcb
adc
xor
xchg
ds
inc
xchg
ja
inc
or
xchg
mov
scas
mov
bound
adc
mov
rolb
lock
pop
dec
leave
inc
mov
clc
push
inc
jg
mov
xchg
inc
mov
add
mov
inc
sar
out
test
xchg
xchg
mov
nop
add
mov
es
adc
data16
mov
jo
jge
nop
popa
addr16
or
mov
add
pop
add
and
adc
adc
sub
sub
mov
add
fimuls
ret
inc
outsl
mov
fisttps
loop
sub
add
adc
xor
add
add
mov
sub
and
shl
push
mov
mov
int3
jg
and
int3
sbb
jno
adc
cs
fcoms
inc
es
mov
cltd
ds
sbb
pop
push
aaa
dec
popa
bound
rol
test
cs
dec
push
mov
jg
adc
mov
push
mov
or
push
dec
loope
incl
mulps
fisubl
add
enter
inc
add
push
mov
mov
xchg
mov
inc
rolb
decb
mov
scas
mov
jb
xchg
sbb
outsl
push
ja
add
sbb
jo
push
mov
and
mov
mov
outsb
outsl
ss
je
loopne
imulb
mov
rolb
mov
add
dec
add
ljmp
notb
or
stos
loopne
outsb
ljmp
inc
sbbb
sbb
xchg
adc
sbb
push
xchg
faddl
push
cmpb
xor
out
and
call
jo
aas
aaa
adcl
inc
sti
pop
dec
pop
lock
mov
pop
mov
aad
out
je
or
sub
aas
cmpsb
rclb
jle
jo
pop
mov
iret
icebp
sbb
sbb
popf
jb
cmpb
or
lcall
dec
sbb
pop
nop
pop
cltd
xor
hlt
inc
and
mov
mov
loop
in
mov
xor
inc
mov
or
push
scas
mov
das
sarb
jb
dec
adc
push
or
push
jmp
or
add
call
inc
mov
sbbb
ret
xor
fidivrl
loopne
sbb
push
or
mov
add
ret
adc
mov
aam
cld
das
clc
ljmp
mov
pop
push
or
adc
push
dec
jo
inc
pop
pop
add
lods
loopne
fbld
add
adc
sbb
sarl
pop
ret
mov
fcoml
inc
cmp
ds
or
aas
sbb
sub
add
xchg
add
mov
jmp
imul
jmp
mov
loop
mov
inc
xchg
enter
rolb
movzbl
mov
mov
int3
sub
mov
adc
adc
or
mov
dec
insb
pop
sub
ret
dec
xor
push
jmp
pusha
sub
aas
inc
sbb
lea
in
add
mov
or
or
xorb
and
outsl
ljmp
mov
cs
gs
inc
jno
stos
dec
inc
shlb
jne
enter
lret
lods
or
adc
or
add
aas
ljmp
and
inc
jno
cmpb
call
or
adc
pop
or
jg
cmpsb
add
andl
push
add
add
in
jg
mov
lods
or
dec
adc
dec
dec
mov
cld
mov
pop
lcall
adc
inc
jg
jecxz
pop
ret
add
inc
jb
ds
pop
xorb
inc
jo
add
stos
loop
insl
add
mov
pop
mov
dec
sub
mov
pop
pop
push
mov
pop
push
xchg
and
sbb
mov
das
clc
aaa
jle
imul
pop
stos
add
ss
mov
out
push
and
push
or
and
addb
push
push
pop
dec
jl
daa
pop
cmp
je
repnz
mov
decl
movsb
sarb
enter
and
leave
lret
sub
xchg
sbb
hlt
fwait
pop
mov
mov
aad
mov
sbb
testb
ss
push
sbb
imul
pop
mov
and
imull
add
rcrb
xchg
sbb
ret
cmpsl
mov
testl
sbb
cmp
inc
push
orb
add
inc
inc
jg
lea
popf
mov
inc
inc
or
sbb
pop
stos
rorb
rolb
adc
sbb
mov
sbb
pop
and
loop
xchg
mov
call
pop
inc
call
and
pop
ljmp
inc
push
loopne
pop
pop
push
ljmp
xchg
xorb
mov
push
rcrb
mov
or
xchg
xchg
push
push
pusha
jp
fisubrs
ss
jmp
popf
sarl
cmp
fisttps
jno
dec
adc
addb
sub
pop
enter
or
inc
and
sbb
inc
pop
inc
sbb
mov
inc
inc
add
or
outsb
mov
add
mov
push
andl
es
or
cwtl
jecxz
push
adc
movsb
adc
les
sub
bound
pop
dec
inc
xchg
mov
out
and
loop
lods
or
ss
ret
mov
pusha
adc
adc
adc
mov
rorl
mov
mov
ret
sbb
insb
and
fisubrl
or
pop
pusha
pop
loop
or
pusha
mov
andl
xacquire
mov
test
mov
inc
loop
ss
out
mov
jp
and
and
mov
cs
xor
into
cli
loopne
or
mov
pusha
mov
sub
dec
jg
cmc
or
pop
and
and
jmp
jmp
or
xor
pop
lret
es
aas
push
movsb
inc
push
adc
pop
cmpl
pop
mov
or
das
xchg
mov
inc
xorl
mov
add
mov
add
and
xchg
xchg
pusha
add
sub
add
xor
popa
and
shrb
pop
sbb
xchg
mov
and
add
add
add
inc
ds
jl
mov
mov
add
or
or
js
push
mov
sub
mov
pop
add
and
cli
adc
dec
push
add
cld
pop
push
scas
add
jl
punpckhdq
mov
out
adc
xor
mov
bound
adc
jle
or
or
outsb
xor
ret
xchg
mov
dec
and
and
fsubs
mov
inc
xor
lock
or
cmpsb
push
loopne
les
add
inc
jo
sbbb
rcrb
or
cmp
pop
mov
int
scas
fdiv
inc
inc
mov
cs
push
and
xchg
mov
stos
mov
mov
cmp
sbb
shlb
or
jns
add
jge
sbb
pop
rol
into
dec
mov
cmpsb
xor
add
mov
inc
jno
ds
dec
jno
add
js
add
sbb
bound
sbb
ss
shlb
bound
out
add
mov
add
loopne
jo
or
and
xor
mov
mov
fistpl
fistps
and
roll
inc
adcb
xor
outsb
xchg
pusha
add
push
std
lods
add
jo
test
xor
mov
mov
stos
xor
addb
adc
lcall
outsb
ret
cmp
add
push
sarb
js
test
sbb
ret
push
sahf
push
add
cld
or
pop
sbb
sub
cmp
pop
or
jo
dec
movsb
or
inc
jae
dec
or
lods
push
mov
or
bnd
int
inc
mov
in
movsb
jle
dec
mov
dec
stos
mov
cs
pusha
data16
or
push
mov
pushf
push
add
imul
and
add
add
and
mov
adc
clc
jo
mov
test
dec
add
cld
adc
mov
lock
icebp
inc
lock
ja
add
test
sti
shrb
pop
push
sbb
pop
xchg
and
sar
mov
pop
leave
sub
loopne
pop
mov
and
add
pusha
sbb
jle
cmpsb
cltd
loop
jg
push
or
ret
leave
xchg
cmp
jp,pt
add
adcb
and
mov
ss
lret
add
arpl
orl
adc
pop
rclb
inc
lock
dec
rcll
mov
fisttps
mov
push
cltd
mov
xchg
out
inc
mov
adc
lock
mov
js
sbb
xchg
or
or
add
xor
jge
ror
fimull
sbb
push
mov
adc
sbb
add
push
add
mov
add
cmpsb
rol
rorl
shll
jno
adc
jb
pop
loop
in
inc
pop
pop
pop
dec
mov
lret
mov
jae
mov
mov
lock
pop
or
adc
mov
mov
idiv
xchg
ret
inc
adc
jbe
cmp
add
cmp
jbe
cmp
fcmovb
sar
inc
out
cmp
lock
inc
sbb
jle
mov
xor
jg
or
push
jle
call
add
mov
xchg
or
mov
push
or
ds
fisubrl
or
adc
pop
or
orb
aad
mov
clc
rorb
mov
cld
add
mov
and
mov
pushl
push
xor
nop
add
xor
xchg
xadd
pushl
jmp
pop
adc
adc
cli
jecxz
mov
push
inc
aas
imul
je
xlat
addb
mov
out
ljmp
andl
push
or
shr
adc
js
lea
dec
xchg
adc
popa
sbb
jp
sbb
mov
bound
lret
mov
mov
mov
out
pop
sbb
add
sbb
sbb
cli
insl
lods
inc
dec
sbb
mov
mov
mov
cli
shl
mov
movsb
aam
mov
lods
add
mov
add
mov
call
add
cmpsl
sbb
cwtl
adc
adc
xchg
out
aad
ljmp
adc
in
pusha
addr16
push
int3
jbe
jo
inc
int
addb
jmp
xor
pop
adcb
sbb
mov
fmull
mov
push
xor
hlt
add
outsb
sbb
test
movsb
fadds
mov
into
mov
int3
mov
addb
pop
or
jno
decl
ss
mov
xchg
and
push
xchg
je
mov
push
mov
sbb
std
add
add
dec
sar
nop
add
push
lret
pusha
push
xchg
add
das
mov
mov
outsb
fnstsw
shll
jno
rcr
les
mov
aam
and
outsl
push
lods
dec
ss
call
outsb
sbb
inc
add
dec
movsb
dec
xchg
jbe
and
in
test
test
inc
and
dec
sbb
push
xchg
add
divb
in
sbb
pop
popa
jo
push
adc
lds
pop
inc
cltd
adc
bound
add
outsb
nop
jge
mov
aaa
mov
and
scas
xchg
add
lahf
stos
inc
mov
incl
dec
and
aad
push
mov
sbb
mov
sub
adc
test
out
add
inc
adc
push
adc
aam
push
pop
sub
call
mov
scas
clc
and
push
or
and
data16
movsb
push
jmp
inc
mov
push
imul
jno
push
cmp
push
cmpsl
push
fldenv
jl
jmp
mov
stos
lods
pop
jmp
cmp
mov
mov
add
pop
add
add
pop
pop
mov
mov
xchg
cmp
mov
in
jbe
or
or
or
or
mov
pop
jo
or
pop
mov
add
pusha
xchg
xchg
rolb
adc
sub
mov
into
push
add
sahf
mov
sbb
inc
pop
mov
and
mov
fcos
add
pop
add
mov
pop
adc
mov
nop
xorb
jge
inc
add
jg
push
mov
mov
mov
inc
mov
push
inc
mov
incl
xlat
or
adc
add
push
push
mov
lea
mov
ret
fisttpl
and
hlt
jno
add
xchg
aas
dec
repnz
mov
pusha
add
dec
dec
roll
loop
rcll
push
popa
add
arpl
lcall
roll
shlb
inc
adc
sarl
addl
xchg
jl
or
or
cmp
xchg
sbb
adc
faddl
nop
xchg
sbb
mov
loop
and
lcall
or
adc
adc
mov
adc
es
jns
std
xor
pusha
inc
es
aam
sti
add
mov
mov
daa
jp
lcall
hlt
stos
andl
inc
push
inc
xchg
xchg
dec
adc
push
adc
mov
adc
mov
inc
sbb
out
add
aaa
or
out
fdivrs
jp,pt
mov
cmpsb
xor
add
sbb
imul
add
push
addb
pop
pop
andl
popa
and
sahf
sbb
xor
and
inc
pusha
dec
pusha
add
pop
sbb
xor
or
cld
mov
add
enter
add
out
and
call
sbb
out
mov
or
mov
stos
sbb
orl
add
stos
xor
push
pop
push
sbb
push
sub
aam
mov
loop
push
inc
mov
scas
xchg
rcrb
sbb
mov
jb
inc
push
mov
sbb
sahf
jg
ss
mov
inc
sub
aas
sub
push
fildll
adc
add
aaa
add
rcrb
sbb
sbb
push
popa
ds
or
mov
repnz
leave
and
sbb
das
sarb
jb
dec
mov
dec
aad
sbb
subb
outsb
cmp
dec
adcb
dec
test
popf
ficoml
xchg
cmpb
dec
cmp
add
adc
and
popa
fs
std
dec
jb
lret
roll
and
xor
scas
rcrb
jno
jbe
dec
or
or
inc
adc
add
inc
dec
test
pusha
inc
pop
cs
sbb
incl
adc
add
inc
sbb
sbb
add
inc
fsubl
adc
pop
dec
inc
add
add
pop
inc
and
pushf
js
mov
mov
cmpl
xor
repz
incl
or
jbe
add
push
test
mov
mov
jle
testb
jg
inc
cmp
pop
aas
xchg
adc
pop
mov
inc
and
lock
enter
loopne
popa
add
mov
aad
in
jmp
popa
and
inc
mov
push
shll
xorb
mov
add
inc
pop
mov
push
sbb
ret
fcomip
mov
ret
sbb
inc
repnz
or
movsl
popa
sub
inc
ljmp
mov
add
inc
jg
pusha
or
inc
mov
popa
call
push
loopne
add
push
pop
rcrl
jp
add
add
push
or
sub
push
adc
clc
insl
es
jmp
and
aaa
fisttps
or
push
test
or
pop
or
ds
pop
dec
and
dec
and
add
jne
mov
in
add
shlb
lods
and
loope
mov
sbb
clc
jle
or
bound
adc
jmp
sub
adc
inc
fsubs
ret
mov
outsl
lea
lret
adc
in
fisttps
xorb
fisubrs
and
pop
add
cmp
adc
ret
dec
jbe
cmp
rorb
push
or
insb
scas
ds
dec
fcoms
sbb
pop
loopne
dec
and
jmp
jbe
fiadds
test
mov
les
pop
add
cmp
and
jae
cmp
and
jg
mov
adc
cmp
add
dec
mov
add
sbb
push
subb
mov
adc
rolb
push
adcb
lcall
loop
adc
jmp
add
mov
sbb
jle
mov
sub
loopne
cmp
jl
dec
inc
int3
je
xchg
lret
jp
fimull
ficoml
mov
xchg
push
lret
xchg
repnz
or
rcrb
jbe
add
std
ror
mov
aas
popa
fs
decl
xlat
adc
cpuid
ss
dec
ds
mov
jg
jp
cli
add
jo
test
out
inc
leave
mov
insl
pop
je
nop
inc
and
add
or
mov
shrb
mov
lret
adc
mov
push
mov
push
xor
nop
sub
xorb
add
sbb
clc
mov
test
add
adc
lods
push
dec
gs
push
pusha
mov
dec
pop
push
movl
andb
sbb
jmp
mov
jbe
or
xchg
push
sub
idivl
mov
xchg
push
and
lock
lea
or
mov
fnsave
lock
and
or
or
cmp
gs
or
inc
dec
insl
adc
call
inc
mov
pop
xor
pusha
es
push
sub
lcall
inc
xor
out
shl
push
scas
dec
loop
test
jne
jns
sub
ja
ljmp
mov
shrb
xchg
pop
jmp
scas
mov
ret
jg
add
mov
jo
aam
adc
out
enter
jmp
add
mov
mov
je
loopne
sar
push
or
mov
add
loopne
and
out
dec
lock
cld
add
xor
bound
dec
push
mov
mov
fs
push
xor
cmp
icebp
mov
rorb
jmp
or
jl
push
in
ret
dec
mov
rorb
lock
ret
inc
fisubrs
jb
mov
inc
sbbl
sahf
jo
aam
shlb
mov
subl
mov
leave
dec
sbb
sbb
pop
fst
test
jp
push
les
or
pop
addb
push
and
sbb
mov
adc
adcl
mov
jo
movsb
jmp
sbb
cmp
sbb
push
mov
loope
mov
scas
cli
push
adc
and
mov
add
insb
pop
jno
ljmp
and
inc
sarl
cmc
mov
pop
into
mov
push
shl
pusha
push
jo
ljmp
cld
es
push
jmp
mov
mov
add
and
shlb
scas
add
xor
pop
rol
push
push
into
scas
testl
enter
pop
call
pop
fcoms
jb
sub
roll
adc
nop
mov
add
jb
or
call
fsubrl
adc
es
dec
loop
push
test
xchg
outsl
sub
fs
loopne
aas
inc
nop
inc
andl
sub
ss
dec
pop
mov
mov
outsl
push
mov
sbb
push
rcrb
xchg
xor
scas
clc
decl
lock
pop
jp
pop
adc
sbb
inc
mov
cli
push
adc
or
mov
xchg
mov
pop
mov
nop
push
xor
ja
or
jg
jo
orb
mov
and
orb
fdivl
test
xor
es
mov
lds
add
fwait
xchg
adc
push
jnp
add
loope
jmp
jno
cmp
lock
jbe
jg
mov
sbb
and
mov
dec
shlb
add
loopne
jle
aas
jle
xor
fs
cli
add
xor
pushf
outsb
divb
es
inc
in
call
mov
in
mov
inc
sub
xchg
sub
add
ds
mov
push
pusha
test
ds
mov
mov
push
sbb
pop
xchg
add
and
xchg
shlb
add
sbb
inc
dec
movlps
cs
outsl
lcall
bound
sbb
dec
mov
aaa
fnstsw
xor
sbb
sbb
jns
inc
insl
jne
mov
daa
sbb
adc
pop
rcl
into
inc
add
subb
mov
inc
add
into
sbb
push
aas
jmp
inc
repnz
add
mov
adc
or
sbb
dec
mov
nop
or
hlt
in
inc
mov
fdivs
repnz
add
cmp
sub
push
dec
mov
xchg
ret
aaa
mov
or
shlb
or
dec
test
and
test
mov
mov
negb
fildl
inc
bound
sub
or
shlb
loopne
je
push
and
xchg
or
icebp
imulb
inc
or
dec
add
xor
mov
dec
ret
push
add
sub
loop
mov
in
sbb
aas
ss
push
stos
sbb
jbe
shll
rol
ret
lock
cli
mov
or
leave
adc
xor
inc
lock
and
scas
pop
loop
jg
mov
andb
popa
inc
mov
sub
lea
sar
jg
push
jp
or
push
mov
inc
pushl
push
xor
sahf
fs
sbbl
jle
push
inc
cmp
mov
popa
popa
mov
jo
mov
cs
mov
ds
add
inc
cli
cmp
pop
mov
shrb
cwtl
push
adc
ss
test
or
jae
jno,pt
aas
mov
sbb
mov
mov
cmp
mov
inc
push
jnp
push
mov
mov
pop
pop
int3
mov
inc
sub
xor
jmp
or
jb
fistpll
scas
cwtl
jo
add
mov
ja
std
jmp
icebp
leave
and
mov
cs
dec
sbb
add
and
pusha
cmovns
out
adc
add
cmp
sub
push
outsb
call
dec
and
adc
add
mov
push
pusha
ret
cmp
inc
rcll
adc
and
and
push
mov
loopne
je
push
or
sub
lods
cmpsb
inc
add
jae
insb
sbb
dec
and
outsb
push
call
add
xor
stc
jo
test
mov
add
shll
outsb
push
inc
sbb
imul
jae
inc
adcb
sbb
adc
nop
pop
or
mov
enter
push
icebp
pop
add
loopne
pop
shll
iret
xchg
sub
push
stc
data16
mov
repnz
imul
mov
jg
and
adc
adc
sub
cwtl
fcom
shl
jbe
jo
insb
leave
das
or
sub
adc
decb
jge
add
sub
mov
push
pusha
mov
jp
mov
imul
xchg
push
sar
xor
add
ficomps
xchg
inc
bound
xor
subl
xor
add
lock
sbb
add
adc
ret
ret
add
dec
arpl
mov
push
mov
or
orb
mov
pop
mov
cmpl
js
add
jmp
jecxz
call
inc
addb
jecxz
jecxz
lcall
ds
fs
mov
sbbb
cmc
push
sub
mov
add
push
lcall
and
push
ds
lock
fisubl
nop
outsb
or
hlt
lods
enter
adc
sub
add
sub
shlb
dec
sbb
or
add
cmp
and
inc
inc
push
mov
sub
hlt
inc
data16
rol
push
fcmovnbe
lcall
sbb
sbb
mov
pop
aad
loope
or
sub
or
dec
sbbb
jge
inc
rorb
and
aaa
lret
rorb
cmpb
stc
dec
lods
or
dec
or
xchg
mov
ds
fdiv
mov
addb
mov
cmp
cltd
icebp
int
hlt
scas
subb
fcomps
or
repz
pop
inc
loope
rolb
pop
test
jbe
sbb
push
mov
dec
bound
mov
inc
or
add
add
adc
sbb
js
in
jle
lock
jle
add
sbb
jl
add
das
ret
mov
jl
xor
xchg
cld
mov
add
inc
push
inc
mov
mov
cmp
add
or
sub
outsb
fisubl
lcall
jg
orb
or
push
mov
xorb
push
dec
ret
or
add
subb
mov
notb
imul
sub
cmpsb
orb
cmp
mov
sbb
push
aas
andl
pop
fidivl
mov
sti
mov
xor
add
push
add
lret
in
stos
shl
out
inc
add
std
movsb
aas
inc
push
fs
nop
ss
mov
add
and
test
loopne
loop
or
push
xor
loop
and
idivb
sub
scas
sub
mov
or
lods
mov
dec
inc
or
mov
std
pushl
inc
and
ret
cmp
adc
or
lds
ret
sbb
loopne
pusha
adc
lds
dec
cmp
out
and
push
push
sbb
or
cltd
sub
jo
adc
loop
andl
adc
mov
add
xor
fists
ret
int
popa
shrb
push
rcrl
rolb
add
mov
loopne
test
sub
bound
and
ja
mov
outsb
adc
inc
and
jmp
imul
incb
pop
inc
push
sbb
je
cmpsb
aas
sbb
aam
sub
nop/reserved
test
jl
push
mov
push
pop
dec
dec
rcrb
es
call
mov
test
or
push
add
popf
loopne
sbb
pop
dec
and
jo
in
sub
loopne
and
hlt
sbb
pop
mov
and
mov
sub
fbld
or
xor
inc
and
and
aaa
or
scas
jo
pusha
inc
xor
mov
pop
shlb
adc
pushf
mov
xchg
mov
loope
inc
xor
and
inc
or
sub
nop
hlt
ljmp
mov
jg
adc
leave
adc
ljmp
mov
and
or
loopne
loope
inc
mov
or
dec
mov
repz
xchg
cld
add
adc
je
sbb
adc
or
das
cli
or
clc
inc
adc
outsl
incl
cmp
lea
pusha
or
fbld
rcrb
xor
pusha
or
and
xchg
outsb
lock
sbb
out
mov
mov
push
add
pop
fsubs
lcall
add
mov
push
subb
aaa
push
movsb
mov
pop
test
jno
mov
push
and
sub
fsubrl
subl
adc
fs
pop
cs
push
cs
mov
mov
rcrb
pop
hlt
mov
inc
mov
subb
xchg
shll
insl
adc
ret
and
out
or
shrb
mov
mov
jp
mov
test
pop
xor
or
or
in
adcb
mov
loope
test
adc
adc
std
and
or
push
jo
js
aas
jno
dec
leave
mov
cmpb
or
outsl
or
fwait
sbb
push
mov
mov
ss
add
mov
or
ret
adc
lcall
inc
ss
int3
add
xorb
xchg
rorb
imul
cld
and
xchg
movsl
mov
xchg
ds
add
ret
shlb
mov
hlt
push
shll
sbb
xchg
mov
add
dec
ss
int
stos
xchg
mov
sbbb
nop
inc
outsb
inc
push
add
mov
and
test
sub
inc
and
inc
xor
dec
clc
out
mov
xorb
mov
mov
shlb
mov
call
jno
inc
rorl
add
push
xor
sub
and
sbb
jl
mov
sbb
imul
rcll
mov
shlb
js
subl
mov
sbb
inc
jo
adc
or
into
dec
inc
cld
ja
jg
loop
cmpb
dec
mov
sbb
xchg
push
in
pop
jno
and
loopne
xor
add
inc
mov
and
add
mov
ljmp
push
push
mov
test
add
pop
rcrb
inc
rolb
ret
push
or
inc
mov
add
cmp
mov
dec
lret
pop
adc
xchg
sbb
mov
cld
mov
mov
mov
pop
enter
or
popa
nop
sbb
test
xor
push
adc
or
add
xchg
add
decl
dec
inc
push
lock
nop
inc
loope
mov
into
das
xor
xchg
mov
add
mov
inc
repnz
adc
insb
faddl
add
push
inc
mov
xchg
sbb
pushl
push
add
push
loopne
into
insb
outsb
push
roll
adc
fsubp
daa
les
mov
lock
mov
fwait
push
jb
pop
pop
mov
ds
rorb
mov
sub
roll
push
jno
clc
lcall
cs
add
subl
add
and
ss
or
cmp
xchg
fsubp
inc
aas
push
out
pop
je
sbb
jbe
or
inc
loope
outsb
xor
or
sub
mov
mov
ficoml
jbe
aam
add
ret
jae
inc
dec
call
mov
xchg
ja
or
fdivrs
add
rcl
adc
ret
sbb
or
and
mov
repnz
pop
rolb
xor
mov
push
push
loopne
sbbb
xchg
or
add
mov
add
cmp
adc
cmp
inc
lock
push
jp
inc
cmp
sub
adc
hlt
mov
or
push
push
test
inc
mov
add
sub
or
sub
mov
mov
or
test
push
loopne
mulb
adc
loopne
dec
rolb
push
sub
jbe
data16
jbe
cmp
jns
in
mov
inc
sbb
cmp
dec
jbe
cmp
jae
cmp
dec
loope
mov
adc
push
or
nop
pop
cmp
popa
test
push
pop
add
sbb
shrb
or
mov
ds
mov
js
data16
or
cmp
inc
test
inc
popa
mov
lods
cmp
xchg
mov
or
fld
sbb
sbb
add
andb
add
jne
enter
pop
mov
sbb
mov
leave
mov
cmp
add
faddl
inc
jg
and
addb
push
inc
sub
dec
ljmp
fwait
jbe
loopne
jae
cmp
add
shlb
into
bound
and
xor
incl
jo
push
wrmsr
add
jo
stos
pusha
sub
add
cmp
pop
cld
test
bound
add
inc
cld
decl
mov
popa
cwtl
repnz
les
mov
jne
push
mov
ret
sbb
orb
shll
mov
or
push
and
daa
stos
popa
mov
jne
jle
add
xor
lea
aam
xor
test
aad
or
pop
pop
mov
outsl
cvttps2pi
icebp
inc
inc
mov
xor
ds
and
pop
sbb
add
push
loope
dec
push
mov
sar
dec
mov
inc
ret
orb
aad
pop
test
inc
daa
cmc
shlb
rolb
lcall
mov
push
imul
pop
out
stos
pop
cmp
pop
or
or
pop
or
mov
dec
pop
push
or
push
or
pop
lock
add
pop
lock
lock
inc
jecxz
sub
sbb
out
push
dec
mov
adc
lea
and
mov
bound
jb
pop
mov
mov
dec
rolb
rclb
dec
pop
sar
fadd
shlb
sbb
inc
and
enter
mov
icebp
incl
cmpsb
rorl
xchg
mov
xor
xor
jp
shlb
jle
jo
mov
mov
or
cmp
mov
or
mov
adc
jb
or
and
push
pop
ja
lods
and
shlb
pop
sbb
inc
adc
push
rclb
inc
pusha
and
pop
or
jbe
popa
mov
fildl
mov
adc
xchg
push
mov
adc
mov
pop
pushf
dec
add
aaa
inc
nop
lcall
orl
dec
sbb
orb
push
or
iret
mov
mov
pop
lea
add
mov
adc
pop
cmc
decl
lock
and
fmull
nop
fidivl
pop
xor
xchg
dec
addb
mov
pop
mov
mov
dec
stos
scas
xor
mov
loopne
ljmp
sarb
jae
adc
ficoml
jno
push
fidivrl
cli
dec
sbb
pusha
pushf
adc
xor
push
xchg
push
ljmp
sbb
sbb
add
lcall
inc
add
jns
xchg
aam
inc
xor
pop
inc
aad
add
out
add
xchg
and
mov
pop
ficoml
clc
das
xchg
cmp
dec
push
adc
leave
lea
jecxz
mov
or
pop
shl
sbb
jg
add
jle
mov
inc
repnz
outsb
sbb
rclb
add
xor
jg
and
mov
clc
sub
pop
js
fsts
rcrb
dec
mov
cmp
and
add
mov
cmp
sub
add
cli
jmpw
mov
add
leave
stos
mov
mov
xchg
mov
mov
leave
insb
jbe
xchg
loopne
ss
mov
pop
in
jecxz
add
sbb
sbb
inc
push
je
movl
cli
push
dec
and
add
push
cmpsb
add
into
ss
push
push
mov
fdivrs
setb
dec
sbbb
and
dec
push
test
add
jg
add
add
dec
add
dec
aaa
scas
mov
add
push
in
rcrb
add
int3
add
data16
aas
and
fadds
shll
and
lea
mov
hlt
jle
inc
and
sbb
pop
imul
push
jo
or
mov
call
adcb
xchg
mov
jne
cli
add
cmp
test
mov
adc
in
into
or
lahf
sbb
adcl
lock
add
or
inc
add
orl
add
ret
rorb
and
mul
adcb
leave
xchg
add
lea
int3
mov
adc
fisubrl
mov
mov
sub
add
lret
and
xorb
lods
xchg
inc
fisubl
lret
sbb
push
adc
out
mov
add
mov
scas
sub
and
add
cmp
pop
pusha
add
outsb
sti
add
and
std
outsl
sbb
adc
pop
push
sbb
ds
inc
imul
push
cmp
adc
test
jg
push
push
or
or
inc
jle
pop
add
inc
or
push
mov
stos
cmpb
jb
aas
pop
fistpl
sbb
or
inc
dec
adc
push
rol
adc
sbb
loope
es
push
add
cli
cmpb
mov
sbb
xchg
stos
sbb
pushf
outsb
adc
xchg
fisttpl
fisubrs
or
or
inc
push
mov
adc
sbb
inc
adc
push
cmpb
cmp
dec
jb
mov
sub
inc
xor
sbb
outsl
lock
andl
add
test
std
shlb
inc
cmpsb
mov
stos
test
xor
fisubrs
mov
les
inc
mov
push
shlb
sub
xor
out
adc
mov
adc
sub
inc
push
mov
ljmp
pop
test
xchg
orb
cltd
mov
jp
mov
sub
push
dec
inc
out
mov
or
push
js
sbb
pop
cmp
add
hlt
cld
mov
jle
rolb
test
sbbb
loop
test
sbb
adc
push
js
ret
xor
add
mov
scas
js
or
jg
push
call
popa
and
and
mov
into
iret
push
push
jg
stos
inc
sub
sbb
add
jecxz
cmc
xchg
into
lock
push
add
mov
je
pusha
add
lahf
inc
mov
movsb
sbb
orb
or
imul
test
ljmp
cmpsb
incl
insb
push
or
loopne
addl
addl
inc
mov
push
stos
sarb
loopne
aas
jg
hlt
adc
dec
mov
arpl
mov
inc
dec
leave
outsl
push
loope
fidivrs
lods
dec
and
adc
adcl
cwtl
clc
inc
inc
cs
adc
add
xor
shrl
sarb
inc
fs
and
cltd
or
mov
dec
lock
add
push
pop
pusha
je
mov
test
and
sbb
xor
dec
push
jl
mov
mov
xchg
cmpb
pop
rcrb
cltd
loopne
and
push
add
movsl
pop
and
mov
push
xchg
or
rolb
adc
mov
adc
sbb
rolb
jbe
loope
test
outsl
sub
lahf
mov
out
adc
adc
pop
jle
or
add
cmp
or
enter
jbe
add
lret
ds
push
and
fwait
inc
push
add
nopl
mov
mov
add
add
and
mov
mov
push
in
cltd
push
add
sub
xchg
push
push
sbb
jmp
fmull
inc
arpl
mov
sbb
pop
add
push
or
mov
add
pusha
or
int
orb
stos
jle
loope
mov
or
push
jo
push
shll
inc
mov
cld
and
out
dec
pusha
ret
ja
inc
sahf
rcrl
ret
push
shrb
xorb
jg
inc
add
jl
enter
ret
xchg
data16
push
jno
xor
gs
push
std
inc
jmp
lret
pop
ds
test
aas
pop
jmp
insb
add
mov
test
inc
addb
iret
pop
andb
aaa
loopne
cwtl
add
incb
sub
cwtl
sub
loopne
outsl
inc
pop
dec
leave
test
cld
inc
push
push
jmp
inc
sar
icebp
pop
inc
loopne
cmpsb
jmp
orb
xorb
rclb
mov
add
in
jnp
lret
push
fwait
inc
in
dec
leave
sub
adc
cmp
cmp
lret
lret
xchg
std
pop
adc
sub
mov
cmp
loop
mov
mov
or
inc
es
pop
push
and
inc
rcrb
add
xchg
push
hlt
insb
dec
leave
add
or
clc
cmp
dec
sub
jl
inc
mull
or
ja
xor
outsb
mov
dec
mov
das
sub
pop
push
aas
inc
inc
add
inc
dec
aam
fisttpll
nop
subb
lret
inc
es
xchg
dec
sbb
test
mov
pop
dec
fiaddl
push
andb
pop
push
sub
add
cwtl
sbb
std
pop
ss
repz
and
dec
jo
mulb
jmp
pushl
in
push
add
adc
sub
add
add
orb
outsl
push
gs
and
add
enter
das
lret
inc
cmp
sub
fwait
imulb
jp
xor
add
adc
arpl
or
jo
ss
pop
cld
ljmp
adc
and
and
dec
mov
add
sub
int3
pop
nop
add
dec
popa
call
mov
mov
push
mov
mov
inc
test
fistpl
inc
test
push
inc
mov
sub
fdivr
jg
mov
mov
fadds
push
dec
add
inc
jge
or
sbb
dec
mov
dec
lret
add
pop
filds
mov
shl
nop
sbb
add
push
push
sbb
jge
or
jo
xchg
int3
out
push
or
enter
dec
aam
adc
jno
bound
mov
fsubs
jg
nop
mov
or
mov
aaa
sti
pop
or
fwait
movsb
xchg
lock
sbbb
add
lock
mov
in
pop
inc
test
sahf
ds
adc
or
jne
adc
outsl
add
cli
jg
mov
movsl
mov
mov
shlb
ja
mov
mov
int3
pusha
lcall
dec
jecxz,pt
outsl
push
push
add
nop
inc
bound
push
add
add
jecxz
inc
inc
mov
lcall
or
fs
pop
mov
xor
push
into
adc
pop
movsb
js
rolb
sar
add
xchg
lea
or
push
mov
pop
icebp
pop
inc
jp
pop
mov
sub
push
push
aaa
fs
es
mov
aas
push
leave
inc
push
add
bound
sbb
test
fadds
jecxz
addb
mov
dec
push
or
and
xor
stos
mov
sbb
inc
movsl
xor
outsl
adc
sub
sub
jg
add
in
aas
imul
incb
add
addb
cmp
add
lock
pusha
sti
push
movsb
mov
jg
add
andl
mov
or
xchg
pop
pop
mov
mov
repz
inc
rorb
cmp
add
mov
xchg
and
xor
dec
add
adcl
pop
jbe
sub
andl
cli
arpl
adc
notb
fstpt
mov
int3
jbe
sbb
fsubrl
pusha
je
inc
cld
push
dec
xor
xlat
xorb
mov
into
fisubs
sub
fdivrs
xor
mov
adc
sub
call
sub
shlb
mov
rolb
rorb
icebp
add
test
les
jo
sbb
loop
imul
add
jp
aaa
fisttpl
pop
les
inc
xor
je
pop
xor
inc
push
add
mov
mov
push
mov
inc
ss
mov
rclb
xchg
or
fstpt
mov
push
adc
gs
lret
jo
cli
inc
stos
mov
incl
or
mov
push
add
ret
add
cmp
stos
add
xor
out
push
lret
mov
scas
add
dec
daa
mov
sahf
ret
outsl
fucomip
add
adc
in
fsubrl
sbbb
jbe
add
xchg
outsb
pop
push
mov
push
sahf
js
shl
mov
xchg
inc
loope
adc
dec
mov
outsl
pop
add
add
push
dec
mov
mov
imul
incl
add
add
inc
loopne
aas
sub
add
test
inc
push
pusha
mov
lock
push
test
aaa
xor
inc
repnz
jg
cmp
stc
push
cmp
xchg
mov
mov
mov
dec
or
add
inc
pusha
addb
or
add
loopne
pop
and
nop
mov
sbb
mov
mov
mov
push
test
dec
mov
and
mov
jb
push
push
adc
mov
cli
jmp
inc
pop
int
jo
cwtl
pop
mov
xchg
fdivs
and
add
rcrl
inc
adc
scas
cs
andb
cmp
insl
bound
das
jp
pop
out
jb
pop
sbb
sub
bound
jnp
pmuludq
into
sub
push
push
adc
xor
mov
dec
outsb
mov
pop
out
add
cmp
push
insb
mov
mov
mov
add
add
jb
insb
andb
xor
add
push
xor
or
in
in
outsb
loopne
mov
push
xchg
add
dec
or
or
mov
mov
addl
stos
mov
push
pop
inc
push
ds
dec
call
fs
add
cs
ret
ficompl
call
fs
or
push
outsl
sub
jbe
jmp
push
and
push
dec
insb
xchg
pop
pop
cmp
pop
inc
jl
mov
mov
aad
add
rclb
jg
dec
fwait
enter
lcall
and
sarl
dec
sub
push
cmp
or
push
aas
int3
cli
inc
xor
adcl
iret
mov
je
inc
orl
mov
mov
and
jle
cmp
and
inc
andl
andb
js
pop
leave
shlb
inc
mov
js
mov
cmp
cld
int
outsl
adc
sbbb
mov
mov
inc
insb
iret
xor
pop
fsubl
add
push
sub
inc
xchg
addl
aas
in
sub
movb
fldln2
mov
push
and
sub
sub
pop
pusha
fisttpl
dec
pop
push
sub
adc
ret
lcall
mov
fwait
sbbb
outsb
mov
adc
jmp
inc
push
into
cli
in
sbb
and
adc
outsb
jnp
mov
push
pop
jp
pop
roll
sbbb
subb
cmp
sarb
pop
pop
sbbl
inc
or
pop
inc
inc
add
inc
bt
mov
and
imul
inc
push
add
and
xchg
dec
push
push
lret
inc
sbb
push
mov
push
aas
gs
shr
ljmp
sbb
orb
orb
push
dec
incl
inc
add
add
rorl
scas
push
sub
and
sub
mov
mov
insl
ds
add
dec
jle
hlt
and
inc
or
or
jbe
aas
push
adcb
adc
and
addb
mov
js
cmp
jge
bound
shrl
mov
jg
or
inc
add
add
sub
ss
xor
or
push
incl
fadds
sbb
adcb
inc
sub
loop
mov
lcall
cli
decl
inc
sbb
push
xlat
inc
push
ret
cmpb
test
mov
xor
ss
jbe
mov
repnz
xor
ds
pusha
xchg
sub
rcrb
add
or
popf
adc
xchg
xchg
xor
mov
dec
cmp
lcall
push
mov
and
lds
pop
scas
flds
jbe
jg
ret
loopne
lods
or
or
pop
mov
mov
push
clc
or
inc
ds
xor
leave
mov
pop
inc
les
or
mov
popa
inc
dec
js
dec
pop
add
loop
popa
subl
in
outsl
es
sbb
push
inc
xchg
inc
mov
add
inc
add
xor
loope,pt
push
jae
mov
sbb
lods
int
pop
arpl
cli
bound
repz
insl
sbbb
push
fstpl
or
jl
mov
mov
ret
inc
or
push
mov
pusha
mov
lret
mov
inc
mov
adc
adc
fsubrl
mov
push
pop
cld
mov
sub
sub
cmp
mov
pusha
popf
and
add
xchg
and
add
inc
push
fisubrs
ljmp
das
xor
pusha
mov
or
mov
les
test
incl
xor
pop
aas
dec
lret
mov
aas
inc
mov
mov
insb
and
mov
into
loopne
loop
aas
fcoms
sbb
cmp
dec
fs
xchg
inc
xchg
out
xor
test
shrb
mov
pop
xor
pop
sbb
jns
mov
mov
add
adc
dec
loope
jl
es
outsl
loop
inc
popa
or
pop
adcb
mov
inc
and
mov
dec
or
test
push
mov
shll
scas
push
xchg
adc
loopne
push
cli
leave
ja
inc
adc
sbb
pop
pop
loope
jmp
mov
add
push
mov
lock
dec
pushf
sbb
xor
inc
and
in
pusha
cmpsb
mov
dec
inc
rcrl
test
andb
in
rol
inc
pop
mov
add
jmp
add
subb
and
inc
add
sbb
xor
add
cli
or
add
jbe
repnz
mov
loope
decl
insb
push
adc
jnp
and
add
pop
push
ljmp
mov
ss
aam
mov
outsl
mov
push
add
inc
out
orb
push
ret
mov
hlt
mov
inc
mov
mov
outsb
add
xchg
mov
mov
mov
add
sbb
ret
push
mov
push
fisubrl
aaa
add
inc
mov
jns
add
out
pop
jmp
ss
sbb
adc
lcall
leave
adc
push
ljmp
mov
or
push
jns
add
adc
xorb
push
xchg
mov
aam
jle
mov
shlb
jg
mov
xchg
and
push
sbb
xchg
adc
xor
and
cmp
adc
mov
xchg
jmp
lock
pop
add
gs
sub
aam
add
outsb
pop
push
mov
mov
bound
imul
or
test
push
sbb
add
dec
add
cmp
lock
ds
adc
mov
add
mov
cmpsb
mov
xor
or
ljmp
orb
dec
mov
and
sub
mov
mov
mov
inc
cmpl
push
orb
mov
sub
sarb
add
adc
add
fisttps
fildl
mov
xchg
dec
test
dec
lcall
adc
fbstp
lods
fmuls
adc
push
add
jo
push
mov
or
and
add
sbb
add
xchg
subl
adc
xchg
add
dec
and
stos
mov
adc
fiadds
pop
or
adc
lcall
ss
int3
adc
add
inc
js
insb
adc
sbb
push
jp
mov
add
xchg
and
pop
or
icebp
inc
inc
ficoms
pop
dec
ret
cwtl
sbb
sub
sbb
inc
cmp
xor
iret
adc
adc
ja
lods
xor
mov
inc
mov
jecxz
jo
mov
adc
mov
js
push
push
scas
ret
aas
push
or
mov
jnp
call
inc
xor
xor
clc
aad
xor
subps
mov
xor
out
adc
dec
js
jo
jp
aas
test
mov
adc
xchg
imul
pop
pop
leave
inc
in
in
aaa
icebp
mov
inc
rorb
cmpsb
push
dec
test
xor
push
mov
ja
ds
inc
js
and
lods
or
add
and
addb
dec
sub
adc
nop
mov
inc
scas
adc
inc
push
subb
dec
and
loopne
inc
call
outsb
mov
sub
mov
insb
fdivrs
pop
rclb
or
aaa
adc
and
mov
dec
or
mov
lods
add
mov
orl
jo
jae
push
jle
nop
sar
cmp
sbb
addb
push
mov
dec
push
call
jbe
inc
mov
adc
adc
add
sbbl
test
movsl
jg
addb
pop
pop
and
mov
adc
xor
lcall
incb
adc
mov
mov
or
lock
out
ss
and
cmp
clc
push
or
mov
jo
jmp
pop
faddl
add
jp
mov
sbb
into
sbb
xorb
test
sub
lds
dec
mov
and
mov
test
dec
push
sub
insb
dec
pop
or
lock
jb
inc
movsb
add
add
and
mov
push
repnz
adc
mov
add
push
popf
adc
push
add
sbb
lcall
dec
into
out
inc
pshufw
and
sbb
adc
lods
cmp
xchg
xchg
xor
not
add
cmp
or
mov
mov
pop
push
fadds
repnz
je
enter
lock
or
push
sbb
add
ds
mov
aas
push
in
xchg
and
mov
rorb
icebp
adc
jb
push
inc
and
mov
push
outsl
inc
mov
add
pop
push
or
adc
test
test
mov
cld
jnp
rorb
add
mov
cmp
add
fdivrl
rcrb
push
jp
inc
js
add
mov
cwtl
inc
cmp
imul
jo
push
mov
call
mov
pop
xor
ljmp
lahf
aas
push
add
mov
adc
ljmp
sbb
inc
adc
jle
sbb
add
gs
or
rorb
or
icebp
push
xchg
xor
mov
dec
loopne
and
and
pop
pusha
push
lock
xchg
push
adc
pop
xchg
shll
mov
outsb
and
nop
pop
ss
loope
mov
pop
push
lea
clc
test
xor
mov
xlat
adc
add
cmpb
jp
int3
cmpsb
insl
mov
mulb
outsb
mov
rcr
fs
roll
add
jno
les
test
sarl
ret
or
and
outsb
mov
dec
popa
add
or
in
adc
jg
lret
add
mov
add
inc
adc
dec
mov
mov
and
xorb
sub
xorb
ljmp
int
pop
insb
mov
jae
into
push
push
push
adc
outsb
xor
stos
jmp
repnz
adc
sarw
das
or
push
dec
das
ret
dec
es
add
jg
add
ss
ret
inc
inc
sahf
mov
call
popa
and
cmp
mov
ffree
cli
or
fnsave
shll
inc
cmp
jns
xchg
add
imul
dec
outsl
ja
lods
orb
push
mov
pop
ljmp
cld
or
add
add
test
fdivr
aaa
jns
inc
filds
js
push
or
add
je
shll
and
ds
xor
sub
fidivs
lret
mov
xchg
hlt
or
ss
nop
pop
jmp
add
outsb
loopne
out
mov
xor
push
mov
jo
jns
inc
jo,pt
jmp
ret
sub
inc
pop
sub
jmp
dec
loopne
sub
xchg
push
outsl
and
jo
sbb
lret
or
xchg
jb
inc
add
lods
dec
pop
and
lcall
sbb
cmp
sub
rclb
dec
mov
rorl
push
bound
push
jp
fidivl
pop
rorb
add
dec
adc
add
aas
fs
das
push
push
testb
and
andb
inc
ds
lea
add
mov
sbb
jb
cltd
hlt
add
pop
xor
xor
dec
sub
test
js
mov
add
or
cmp
sbbb
add
inc
add
fidivrs
lods
pop
inc
pushf
pop
call
push
and
add
inc
ja,pn
add
push
inc
ficomps
imul
cmp
xor
dec
add
or
daa
inc
mov
push
jl
sbb
shlb
dec
subb
mov
data16
call
sbb
fsubl
sub
add
loop
add
ret
fs
mov
mov
pop
pusha
mov
rcrb
mov
adc
push
repnz
adc
cli
cmp
mov
or
mov
pushf
add
test
inc
or
mov
sbbb
inc
or
nop
testb
lock
or
lods
push
jns
xchg
add
or
cmp
lret
mov
nop
xor
nop
mov
dec
add
repz
jl,pn
bound
orl
inc
cmpsb
ds
cmpsb
jl
jbe
pop
sub
gs
mov
add
and
stos
xor
dec
js
insb
outsl
sbb
dec
ret
add
popa
cltd
dec
js
xchg
or
divb
adc
push
ss
sbb
inc
xchg
stos
cmp
std
rcrb
dec
rorl
enter
adc
adc
mov
pop
adc
and
inc
pop
inc
and
sbb
mov
pop
mov
xorb
and
xchg
inc
rolb
jns
cs
cmp
mov
sub
add
mov
cmp
pop
clc
ret
lds
out
adc
inc
xor
or
mov
pop
xchg
mov
inc
fs
mov
mov
test
push
add
fsubrl
test
xchg
cwtl
add
sbbb
adc
dec
mov
mov
adcb
insb
int
add
mov
cmp
ffree
add
sbb
inc
xor
inc
push
fistl
xchg
cmp
xor
inc
xorb
out
adc
add
divl
mov
push
sbb
insb
inc
fbstp
gs
add
sbb
adc
pusha
add
xchg
mov
je
inc
lods
movsb
lock
adcb
aaa
cld
sbb
sub
inc
mov
int
add
inc
or
pusha
and
dec
inc
add
sbb
andl
sub
xor
and
in
and
mov
pop
leave
cmc
pusha
push
mov
xchg
jbe
sbb
iret
sub
mov
jne
adc
int3
aam
and
mov
rolb
mov
adc
movsb
and
xchg
mov
jbe
fistpl
lahf
and
mov
mov
or
xchg
loop
mov
incl
lret
shll
add
add
scas
dec
add
popa
and
and
popf
mov
push
mov
and
add
xor
cs
sbb
and
sub
das
mov
cmp
sarb
xchg
push
pop
pop
movsl
inc
mov
loope
outsb
inc
leave
ja
inc
dec
cmp
pop
cli
mov
push
push
sub
inc
inc
xor
add
pop
and
adc
jno
cmpsb
inc
or
mov
inc
push
mov
or
inc
adc
popa
or
lea
fildll
inc
pop
sbb
repnz
or
xchg
mov
jecxz
decl
mov
push
loopne
repnz
dec
icebp
sbb
adcb
add
adc
dec
pop
andl
addb
mov
add
mov
sub
or
outsb
jo
sub
and
jmp
bound
je
pop
out
js
clc
mov
and
mov
cmp
push
push
dec
cmp
bound
sahf
and
or
pop
icebp
ss
cmp
popa
inc
mov
cmpb
ret
das
cmpsb
icebp
ja
mov
adc
sub
loopne
loope
incl
sbb
mov
mov
sahf
and
arpl
jl
add
shrl
mov
pusha
dec
mov
mov
mov
mov
mov
ret
mov
adc
push
and
add
loop
in
pusha
insl
pop
or
bound
rcrb
xor
and
jge
pushw
mov
sub
mov
dec
jle
outsl
roll
and
rcll
or
or
pop
es
and
xor
fsubs
sbbb
leave
pop
pop
xor
decb
push
outsl
add
and
sbb
inc
sbbb
push
adc
sbb
and
lret
or
mov
add
loope
cmp
hlt
add
xor
xor
and
out
shrb
clc
dec
loopne
jp
jl
push
mov
mov
pop
aas
sub
dec
mov
cld
data16
pop
ss
pop
shlb
nop
and
add
data16
dec
add
int3
and
bound
sub
mov
repnz
js
insl
mov
fmul
pushf
mov
out
push
push
outsb
xchg
jns
inc
imul
arpl
data16
cld
mov
cld
pushl
add
jbe
and
icebp
add
add
outsl
fldt
push
xor
notl
inc
roll
sbb
sub
inc
xor
add
imul
data16
xchg
add
add
inc
loopne
or
filds
repnz
das
sub
or
inc
jbe
inc
mov
inc
dec
rolb
pop
add
hlt
inc
pusha
dec
mov
or
xchg
adc
xor
push
fists
xchg
int3
pop
adc
push
leave
mov
inc
xor
jg
add
js
and
ja
pop
xchg
out
mov
sbb
aam
fcompl
push
add
mov
add
or
mov
push
push
mov
cmpsb
nop
add
add
add
mov
sbb
pop
in
or
mov
push
sbb
dec
xchg
cltd
lea
inc
popa
add
sbb
pop
ljmp
lock
lret
and
inc
adc
lock
cmpsb
xchg
sbb
sbb
incb
rcll
mov
add
pop
adc
ds
std
int
mov
aad
inc
test
cld
lcall
mov
add
je
or
aas
ja
and
decl
or
adc
sub
pop
xchg
mov
add
dec
jo
push
lds
push
int
out
mov
inc
sbb
xchg
arpl
mov
adc
mov
sbb
std
adc
jno
cmp
push
adc
inc
push
inc
rcll
fucomp
adc
and
movsb
mov
xchg
call
push
inc
sbb
mov
mov
inc
aam
jle
push
mov
push
add
jo
test
cmp
mov
lcall
addl
rclb
jg
dec
sbb
cmp
mov
xchg
popa
repnz
mov
or
pop
and
rorl
pusha
cmp
push
jg
loope
fchs
add
daa
pop
mov
hlt
icebp
outsb
dec
jmp
adc
cmpsb
fsubs
xor
shrb
and
addb
into
or
inc
mov
sbb
ss
add
pusha
sbb
cmp
pinsrw
popa
add
ret
push
add
xorb
loop
rcrb
and
and
repz
xchg
mov
inc
clc
ret
jae
cmp
sahf
rclb
pop
mov
pop
cli
pop
pop
jp
inc
orl
jg,pn
pop
or
or
aas
mov
ror
rcrb
add
cltd
lock
popa
cmpsb
cmp
mov
or
inc
or
xor
mov
add
inc
or
sbb
pop
sbb
aaa
lcall
mov
inc
int
out
mov
mov
xlat
mov
or
push
outsl
xor
pop
divb
jb
xor
jg
andb
push
add
push
jge
mov
push
inc
mov
loopne
cmpb
and
out
clc
inc
sbb
mov
dec
mov
je
popf
addb
add
mov
add
inc
push
xor
mov
test
jo
je
test
mov
data16
ret
dec
les
mov
data16
cwtl
mov
mov
adc
sub
mov
mov
or
lret
push
outsb
insl
shll
lods
push
mov
add
ficompl
aad
xchg
mov
lret
cmp
push
mov
push
inc
cli
cwtl
mov
pusha
inc
call
xor
dec
add
aas
and
push
xor
sub
cmp
and
jb
dec
shrb
mov
sbb
pop
aas
jbe
mov
dec
or
push
mov
mov
or
adc
mov
xchg
inc
push
mov
pop
jo
jno
mov
inc
pop
ss
add
inc
mov
mov
data16
adc
push
mov
mov
mov
or
aas
jno
jo
clc
icebp
jp
dec
stos
adc
inc
ss
pop
sub
jbe
mov
dec
mov
sbb
loop
push
lret
test
fnsave
rcrb
in
cs
ror
or
loop
and
cwtl
loopne
inc
and
nop
or
mov
push
push
inc
jb
jo
ljmp
outsb
jo
cmp
xor
sbb
pop
mov
mov
inc
inc
push
nop
cmp
pusha
push
hlt
incl
icebp
xor
ljmp
rolb
divb
mov
jle
pop
mov
inc
aad
mov
add
jae
shlb
or
push
adc
push
lock
std
ljmp
or
xor
jo
pusha
sbb
pusha
or
xor
add
dec
int3
inc
lds
inc
cmp
inc
sbb
pop
and
xchg
xor
mov
push
push
pop
das
xchg
popa
jne
pusha
or
movsl
subb
pop
mov
aad
jmp
xor
mov
mov
das
shrb
loopne
add
mov
push
cli
dec
ljmp
ss
repz
ja
mov
mov
mov
filds
mov
dec
dec
cmpsb
mov
add
dec
inc
jo
ficompl
mov
push
pop
adc
lods
rolb
shrb
dec
push
mov
pop
icebp
fwait
les
aam
and
mov
push
mov
dec
inc
ret
mov
add
lcall
loopne
mov
mov
add
inc
push
ds
sub
pop
xor
orb
dec
ret
push
pop
movsb
cmp
cmpsb
sbb
xchg
push
outsl
jbe
adc
cmp
and
dec
aam
xchg
fsubp
jl
add
mov
mov
cwtl
pop
addl
jmp
jo
inc
jbe
pop
mov
ret
mov
and
add
push
inc
test
shrb
in
jp
push
mov
cs
addb
dec
ljmp
sub
and
pushf
push
dec
insb
or
lsl
ret
xor
jle
push
adc
and
aad
or
sub
mov
sub
enter
add
insl
mov
adc
mov
mov
out
add
dec
cmp
mov
xchg
les
add
xchg
ja
cs
inc
and
outsb
xchg
fisubs
mov
inc
xchg
sbb
add
sahf
inc
or
insb
inc
sbb
xor
mov
and
ds
and
aam
and
adc
sub
or
push
clc
sbb
sbb
int3
xor
mov
add
inc
dec
stos
test
xchg
mov
mov
xor
cmpsb
cmpsb
push
mov
sub
fucomi
adc
jbe
loopne
rcrb
mov
xchg
roll
add
adc
int
push
add
cli
push
rol
mov
xor
jb
sub
push
andb
cmpl
push
lock
cli
stos
loopne
lods
inc
jecxz
lods
push
decl
cli
inc
mov
popw
sbb
popa
inc
sbb
inc
sbb
jo
pop
push
clc
inc
sbb
inc
sbb
ds
insl
mov
inc
dec
ret
xlat
push
lds
sbb
fs
sbb
xorb
jns
rorb
xor
xor
rcrb
add
cmc
pusha
lcall
sbb
addl
sbb
outsb
movsb
pop
inc
or
gs
in
loopew
sar
jo,pt
sbb
sbb
adc
inc
popa
test
int3
pop
in
mov
sbbb
cmpb
jge
sbb
pop
jp
pop
sbb
inc
adc
push
rcr
and
sbb
push
xchg
subb
adc
cmpsb
imul
scas
push
sbb
aas
xchg
std
inc
or
or
xchg
inc
xchg
dec
adcl
xchg
mov
lahf
mov
orb
add
and
mov
adc
cmp
das
push
sbb
jg
in
or
cmp
inc
inc
pop
sbbl
cmp
mov
out
add
rorb
stos
hlt
pop
nop
mov
inc
push
cmpsb
mov
dec
lea
inc
mov
mov
push
lret
mov
mov
pop
mov
in
push
std
testb
loopne
mov
popa
mov
jb
loopne
push
xorl
xor
mov
jg
or
enter
popa
and
clc
push
adc
arpl
ret
lea
imul
je
adc
test
clc
ja
and
add
add
push
ss
sbb
jbe
mov
ret
xchg
int
addb
stos
push
rolb
mov
test
cmp
lcall
add
or
jecxz
dec
dec
cmp
ss
sahf
cmp
push
inc
mov
mov
xor
leave
mov
or
add
mov
sahf
jo
in
jp
or
add
adc
pushf
popa
mov
add
lahf
add
push
sahf
mov
lea
mov
xor
pop
mov
subb
push
adc
aas
mov
sbb
and
loopne
ret
sub
push
add
gs
mov
mov
sbb
andb
mov
add
pusha
xchg
insb
insl
push
add
pop
in
or
dec
pop
lock
outsl
mov
ret
dec
pusha
sbb
or
mov
sub
sbbb
cltd
mov
push
loop
arpl
inc
xor
loopne
dec
test
out
dec
fiaddl
jl
aam
add
popa
pusha
add
pusha
sbbl
mov
xor
loope
lods
jnp
lahf
test
aam
add
and
push
and
push
jns
inc
or
cli
mov
adc
xor
frstor
pop
pop
dec
push
leave
dec
pop
mov
outsl
mov
cmp
xor
or
lret
loopne
sbb
insb
leave
inc
sarb
jg
sarb
pusha
add
adc
mov
sarb
push
pop
add
addb
or
mov
push
sbb
faddl
and
and
add
insl
inc
sub
mov
int
les
and
pusha
dec
and
imul
leave
push
fbld
jecxz
pusha
pop
loopne
mov
dec
add
inc
push
nop
shl
jb
arpl
fildl
sub
cld
and
jmp
cli
mov
cmpsb
lcall
clc
jmp
add
add
cmpsb
inc
xor
mov
inc
nop
or
cmp
jb
aam
and
mov
ja
add
scas
aad
xchg
push
sarb
imul
xchg
inc
cmp
pushf
mov
and
inc
loop
aaa
inc
outsl
xor
inc
js
push
mov
push
in
loope
mov
xor
and
stos
or
add
in
ljmp
in
mov
add
sbb
adc
and
cltd
sub
inc
repnz
mov
jg
addb
inc
cmp
mov
jns
sbb
dec
pop
ja
lods
xchg
fsubl
push
sbb
std
inc
jo
inc
dec
lock
sbbb
mov
add
es
jno
aas
shll
enter
sbb
mov
push
dec
pmuludq
push
and
loop
popa
mov
ja
xor
adc
aaa
push
lock
sahf
andl
inc
push
push
ret
or
mov
push
dec
fdivrs
subb
and
and
push
out
add
inc
enter
outsb
inc
repnz
fdivrp
sbb
loopne
inc
or
adc
rolb
scas
int3
nop
add
ljmp
mov
lods
insl
add
or
xor
add
xor
lret
je
decl
arpl
outsb
add
pop
rcrb
jne
or
cld
int
mov
subl
mov
rolb
mov
mov
and
in
add
scas
cmpsb
push
aaa
mov
add
push
ja
clc
arpl
test
push
fbstp
inc
into
adc
add
and
lea
fwait
mov
mov
inc
in
xorb
arpl
push
mov
or
dec
cmp
push
test
and
lea
xor
dec
pop
orb
mov
inc
dec
add
in
push
inc
adc
add
pop
and
loop
outsb
cmpsb
scas
add
add
repnz
mov
popa
jbe
mov
or
inc
dec
hlt
in
mov
jo
sbb
mov
lcall
nop
xchg
and
lahf
cmpsl
arpl
mov
cmp
subb
jmp
xchg
push
lldt
mov
push
aad
decl
inc
add
imulb
rolb
insl
jmp
aas
xchg
jns
dec
cmp
sbb
call
aam
xchg
jo
add
lea
add
lret
mov
or
je
adc
inc
shll
stos
pop
mov
jmp
imul
dec
enter
or
dec
es
jmp
and
push
mov
or
sub
inc
pop
rcr
cmp
push
xor
push
shrl
dec
cmp
test
mov
add
jno
mov
add
ja
mov
or
mov
adc
fucomip
jno
addb
push
dec
dec
jb
or
xchg
cli
jg
jg
mov
jno
add
cmp
dec
xor
and
daa
and
rcr
cmp
xchg
xchg
mov
mov
jne
adc
es
pushf
pop
xor
fimull
jle
dec
out
and
nop
mov
inc
and
sbb
or
adc
mov
push
add
mov
add
hlt
sbb
push
lock
rclb
jp
add
into
jo
orb
fsubs
sbb
push
test
add
pop
add
fistl
in
add
adc
inc
mov
xor
stos
rcrb
shlb
adc
data16
test
jo
and
push
in
sbb
jg
pop
insl
cld
add
pop
rolb
xchg
iret
cmp
inc
cmpsb
mov
inc
xlat
inc
roll
dec
lcall
cld
xchg
xchg
adc
xor
dec
and
inc
icebp
mov
push
push
mov
lcall
xor
xchg
add
add
xchg
mov
add
adc
lcall
cwtl
mov
push
pop
add
push
mov
mov
sub
ds
testb
dec
roll
xchg
fcoms
pop
mov
mov
nop
or
cmp
or
xchg
loopne
add
rorb
and
or
rcrl
and
add
mov
pop
cmp
jns
cs
paddb
jl
insb
and
rcrb
lret
mov
subb
ja
pop
mov
jo
mov
pop
mov
aam
data16
test
mov
rclb
fcmovbe
pushl
jae
or
adcb
sbb
rolb
xchg
loope
inc
add
mov
data16
rcll
mov
adc
addr16
xor
mov
push
shrb
insl
sbb
xchg
sub
scas
mov
push
mov
xchg
lods
inc
lret
add
loope
mov
add
sbb
and
push
push
orb
and
and
sbb
add
push
pop
jne
ficoml
and
popa
add
hlt
jl
add
scas
xor
add
addl
aam
movsl
mov
adcb
mov
mov
lock
pusha
xor
call
cmp
or
add
mov
and
mov
cmpsb
addb
mov
mov
bound
add
nop
dec
mov
pop
rolb
jne
pop
hlt
inc
or
dec
add
inc
loopne
mov
fisttps
mov
inc
mov
test
push
mov
lds
leave
jle
lock
cli
sub
push
xor
cmpsb
dec
into
popa
adc
adc
xor
rol
xor
inc
fldl
sbb
loopne
scas
movsb
ret
push
mov
cld
mov
push
pop
shlb
mov
fdivrs
jns
xchg
mov
fs
or
popf
mov
shl
push
lcall
cmp
pop
and
pop
in
push
add
pop
ficoml
sarb
dec
jp
mov
scas
push
push
xchg
mov
or
push
xor
scas
lcall
xchg
push
xor
imul
loop
jl
decb
inc
adc
pusha
jl
jb
sbb
push
xchg
dec
dec
pop
cmpb
subb
out
adc
push
mov
adc
cmp
add
or
mov
jl
rorb
outsb
add
mov
std
jg
fimuls
bound
sbb
jno
push
movsl
mov
test
ds
in
mov
call
pop
xor
or
add
add
lea
daa
mov
adc
inc
aas
push
add
lret
pop
adcb
pusha
add
adc
fsub
add
pop
ds
and
daa
cmc
jbe
lods
pop
push
or
rclb
add
add
pop
push
add
sbbb
inc
add
add
sbb
mov
sbb
pop
mov
push
lods
pop
xor
enter
or
xchg
cs
into
or
inc
jno
mov
jl
lock
and
int3
inc
add
shrb
leave
andl
inc
xchg
test
push
and
es
adcb
pop
sarl
sub
adcb
push
and
subb
dec
and
ror
sbb
incb
sub
insl
add
mov
push
lret
lea
outsb
shll
mov
iret
xor
mov
addb
icebp
mov
fst
mov
or
in
mov
daa
add
mov
jl
mov
mov
mov
pusha
pop
mov
push
xchg
les
push
push
sbb
adcl
sub
mov
mov
mov
pop
xchg
addr16
rcrl
adc
jb
movl
or
and
adc
or
test
and
mov
lret
and
pop
sbb
or
mov
pusha
jb
mov
add
mov
ds
push
outsl
cmpsb
lret
mov
aas
pop
scas
test
mov
inc
push
and
mov
test
pop
std
stos
hlt
jg
inc
ja
pusha
into
adc
jl
mov
push
mov
mov
jge
push
or
test
test
pop
adc
xchg
or
movsb
incl
cld
icebp
push
add
add
push
add
push
rorb
add
pop
add
frstor
push
ret
negl
or
divl
fwait
shlb
ret
hlt
ljmp
add
fwait
ja
inc
dec
addb
xchg
add
outsl
shlb
or
sub
or
push
ds
cmc
or
sbb
ret
and
adcb
sti
fbstp
jbe
shlb
jo
xchg
in
xor
inc
xor
inc
ljmp
dec
sub
inc
xchg
std
loope
mov
and
daa
je
xor
data16
jle
cmp
call
call
stc
xor
loope
add
push
scas
sarb
in
sbb
sub
push
divb
mov
sub
ficomps
xor
iret
add
pop
cltd
stos
jge
invd
cld
and
or
roll
xchg
or
pop
mov
sbb
sti
jb
xchg
lods
pop
cmpsb
mov
inc
mov
sbb
cmp
rclb
pop
add
mov
dec
dec
jecxz
fisubl
aad
jl
inc
push
cmp
gs
lret
sub
roll
das
fiadds
mov
push
push
sar
or
sbb
pop
and
addr16
mov
pop
sub
mov
popa
jb
outsl
and
cmpb
rcr
adc
outsl
scas
pop
popa
push
xorb
or
xchg
loopne
loope
orb
fsubl
pop
add
dec
mov
sbb
bound
dec
add
or
shrb
test
dec
adc
adc
ljmp
mov
jp
sub
enter
jg
mov
add
addb
sub
pop
repnz
pop
mov
pop
pusha
mov
sarl
sarl
es
mov
and
push
push
add
clc
cmpsb
ds
addb
and
mov
adc
decb
inc
pop
mov
test
dec
jbe
and
or
aaa
xchg
nop
push
xchg
and
paddusb
sub
push
sub
in
push
or
xor
sbbb
dec
fmull
in
jae
jecxz
dec
push
pop
clc
std
addb
or
sti
sub
cmp
pop
in
pop
add
xor
dec
inc
or
mov
jnp
fiadds
adc
or
push
sbb
add
loop
pop
test
pusha
and
dec
add
jb
mov
inc
adc
mov
cld
push
pusha
jp
mov
inc
xchg
popa
jo
xchg
subb
adc
xor
mov
outsb
jecxz
sahf
cwtl
inc
xor
pop
and
ljmp
add
and
pop
fbld
mov
add
popf
fs
bound
inc
push
mov
icebp
sbb
jo
sbb
xchg
ljmp
ffreep
push
fidivl
mov
mov
mov
shrb
outsb
mov
daa
cmc
jmp
aad
es
xchg
pop
and
out
or
cs
rcrl
insb
insb
mov
ret
mov
and
aad
jle
nop
mov
sahf
in
mov
mov
push
add
cld
and
add
pop
inc
popa
das
add
mov
inc
sbb
mov
push
outsb
clc
sbb
inc
dec
mov
push
adc
fs
jle
mov
xor
mov
add
jecxz
popl
jl
repnz
jecxz
mov
cli
int3
xchg
and
mov
das
bound
orb
xor
into
stc
xor
out
jb
push
cwtl
mov
and
rclb
and
xor
mov
shrb
jbe
mov
shlb
popa
xchg
mov
inc
bound
pop
popa
inc
jle
je
loop
iret
stos
negb
add
mov
xor
loopne
or
xchg
and
lds
in
push
sar
loopne
and
repnz
add
cmc
pop
icebp
and
les
push
addl
into
inc
inc
pushl
sbb
xor
adc
cmp
cmc
fst
inc
mov
add
sub
imul
out
or
sub
adc
xor
push
int3
mov
js
push
dec
loopne
inc
sbb
aad
mov
add
sbb
push
adc
or
lret
add
push
ret
divb
cmc
ss
clc
lcall
sbb
push
into
rorb
add
xchg
lock
insl
adcl
lret
stos
mov
dec
adc
adc
leave
shl
sbb
outsl
ret
shlb
inc
rorl
xor
or
add
aas
repnz
mov
sub
cmp
inc
clc
inc
xchg
sub
ret
or
lock
mov
push
lods
and
cmc
ds
fbld
loopne
push
nop
or
pop
pop
sbb
mov
xchg
push
add
imull
add
leave
rcrb
or
das
or
or
int3
icebp
and
pop
add
add
and
jp
mov
pop
add
push
add
add
or
incl
push
dec
cmp
pop
pop
sub
cmp
es
js
nop
push
adc
pop
or
rorb
and
or
sub
loopne
sbb
sbbb
loopne
fistl
sub
pusha
sub
mov
jb
jae
adc
movsb
fcmovnu
mov
sarb
or
add
or
or
inc
and
xor
add
inc
inc
dec
push
loop
lds
push
mov
pop
pop
add
mov
loope
push
rcll
incl
sub
pop
mov
adc
adc
movsl
adc
pop
data16
xor
adc
incb
cmovne
push
mov
push
jns
pop
dec
adc
mov
adc
or
add
inc
add
add
jp
out
es
push
xchg
fs
jb
and
jo
ret
inc
sbb
iret
xor
mov
dec
imul
pop
jo
nop
add
aaa
nop
and
xor
add
xchg
pop
in
or
jg
test
xchg
mov
pop
cmpsb
jp
pop
sarl
jl
and
sub
pop
enter
or
adc
incl
xchg
pop
adc
add
mov
cs
push
mov
or
jg
push
cli
bound
or
adc
jns
nop
push
nop
or
inc
push
and
or
jmp
insb
mov
jo
lret
fildl
mov
pop
mov
enter
sarb
xor
test
mov
push
nop
mov
loopne
mov
lods
push
adc
xor
push
jge
add
xor
cmp
or
mov
dec
or
scas
add
inc
lock
icebp
or
pop
gs
addb
xor
call
add
sahf
mov
or
mov
rcrl
and
and
pop
dec
clc
mov
subb
push
mov
pushl
pop
and
xor
xor
push
sub
pusha
pop
sub
jns
mov
xchg
adc
add
add
push
and
xor
or
movsl
pop
and
aaa
push
push
std
scas
sub
stos
cmp
pushf
mov
xchg
sub
cwtl
jo
dec
jnp
cs
sbb
mov
loopne
aam
or
xchg
sbb
jecxz
dec
jb
mov
cs
pop
ficoms
mov
inc
lods
imul
or
xor
lods
out
mov
les
pop
sbb
sbb
mov
adc
loopne
add
pop
cli
mov
dec
adc
adc
inc
add
inc
adc
mov
xor
mov
mov
clc
add
shlb
sbb
add
mov
jo
mov
dec
decl
add
loop
mov
xor
popa
mov
data16
movd
aas
jg
outsb
push
mov
or
push
nop
sbb
sahf
add
hlt
out
ds
xchg
aas
push
inc
xor
call
xor
pop
dec
cwtl
jo
inc
adc
nop
jl
mov
nop
adc
pushl
ja
xor
pusha
xor
xor
pushl
ds
je
aas
push
cmp
inc
dec
mov
and
sub
mov
adc
popa
addb
mov
andl
pusha
adc
nop
mov
and
mov
ja
and
sbb
add
inc
mov
push
std
add
dec
ret
nop
aaa
sub
neg
push
lret
sub
int3
push
cltd
sub
std
fbld
xor
jo
rcll
pop
addr16
scas
test
pushl
pop
xchg
aas
insl
loopne
push
pusha
adc
shlb
bound
popa
cs
or
dec
push
in
push
or
icebp
push
mov
lcall
filds
and
inc
push
cmp
mov
jns
inc
inc
mov
scas
and
ljmp
rclb
pop
cwtl
xchg
xor
mov
clc
ret
gs
pop
bound
mov
stos
daa
loopne
xor
rorb
adc
icebp
addl
aam
pop
stos
or
jg
pop
mov
xor
mov
insb
loopne
aam
mov
mov
xor
mov
jmp
ret
jp
sbb
push
sub
sarb
or
rolb
sarl
pop
add
loope
pop
xchg
mov
inc
addl
inc
mov
rolb
lods
add
sbbb
sbb
add
adc
ds
dec
adc
jb
mov
hlt
sbb
jmp
add
push
mov
mov
mov
dec
clc
dec
add
adc
add
sbb
add
xor
mov
fiadds
lock
add
sbb
mov
cs
pop
rolb
cmpl
add
pop
mov
sbb
ret
ja
add
cld
jl
xchg
add
adc
cmc
data16
mov
add
xor
push
rcrl
je
mov
sbb
dec
pop
mov
cmpl
jae
mov
test
and
loope
stos
lods
je
dec
and
adc
cmc
mov
add
cld
mov
add
jae
mov
sti
dec
popa
mov
pop
cwtl
or
push
xorb
dec
dec
adc
out
roll
popa
insl
psubsw
or
loopne
lcall
aas
jns
sahf
test
aas
pop
loop
mov
lahf
jo
lock
inc
pop
test
push
lods
pushf
aaa
rclb
ljmp
push
inc
popa
rcrb
movsb
ja
inc
cs
leave
jbe
fs
add
icebp
xchg
test
out
inc
cld
dec
ret
dec
ljmp
mov
lds
lds
push
stos
popa
cld
cmp
lret
jg
xlat
sarb
adc
inc
push
and
rclb
mov
mov
inc
or
xlat
or
roll
es
pop
add
ret
cld
xor
xchg
loop
xor
add
movsb
dec
xchg
data16
sbb
mov
dec
cld
push
cmp
jne
or
rcrb
dec
int3
stos
rclb
add
jle
mov
mov
ljmp
adc
add
lock
mov
push
test
add
test
add
dec
test
imulb
dec
cmp
ds
call
movsb
aas
outsl
ret
inc
sub
and
push
lock
pop
or
mov
pop
push
sbb
std
and
xor
adcl
mov
shlb
pop
pop
xchg
adcb
idivb
jg
sbb
jp
or
cmp
and
cmp
add
mov
fwait
inc
push
sbb
subb
push
mov
test
add
ljmp
inc
adc
add
and
es
adc
push
mov
fsubrp
add
pop
dec
xor
add
push
push
jmp
sbb
movsb
sub
and
jle
fiaddl
dec
push
insl
faddl
xor
add
mov
xchg
shll
inc
inc
mov
mov
jl
inc
sub
outsb
jp
mov
and
mov
cmp
nop
sbb
mov
xor
push
lea
fwait
add
outsl
nop
sub
add
sbb
jg
cmc
pop
add
adc
add
ds
inc
sbb
ret
inc
pop
mov
add
sub
push
cmp
jle,pt
outsb
fbld
xchg
sbb
jl
push
ja
or
mov
pop
sbb
lea
inc
add
cmpsb
testb
daa
xchg
pusha
push
sbb
add
loopne
fbstp
cmpsb
push
dec
inc
jge
cmp
loopne
into
inc
xchg
inc
jge
mull
add
adc
outsb
add
ficompl
add
and
push
sub
cld
or
enter
andl
lret
cmp
js
inc
inc
sub
clc
adc
mov
adc
dec
mov
loopne
mov
je
pushf
add
add
mov
ss
jbe
ret
push
cmpl
push
push
xchg
popa
inc
jecxz
clc
aaa
or
mov
mov
mov
and
xchg
adc
xor
jbe
dec
lret
add
mov
xchg
dec
adc
sbbb
xor
push
sbbb
sbb
xor
push
mov
dec
lds
ret
adcb
sbb
into
bound
nop
inc
jno
hlt
mov
add
jecxz
or
ja
or
jbe
inc
test
inc
inc
andl
push
push
sub
insb
push
adc
subb
aas
lret
add
xchg
test
pusha
repnz
adcl
out
addb
push
cmc
xchg
mov
add
inc
add
and
push
lret
rolb
inc
test
fwait
cli
or
xchg
sbb
int3
xchg
test
sub
push
sub
add
lcall
mov
mov
and
imul
add
aas
mov
adc
sbb
clc
fistpl
dec
sub
mov
mov
cmc
adcb
sbb
or
mov
xchg
movsb
pop
jns
cwtl
and
arpl
rcll
pusha
pop
add
inc
les
decl
lcall
xorb
add
lods
orb
cmp
add
add
pop
and
cmc
cltd
sub
pushf
sbbl
and
adc
cwtl
jns
mov
sbb
jno
push
adc
fisubl
xor
cmp
cwtl
lret
mov
pop
mov
inc
or
aaa
cmp
dec
pop
add
movsb
mov
and
rorb
or
fwait
test
pop
cmp
jno
nop
aaa
insl
test
and
movsb
sub
lcall
and
cmp
and
and
ja
inc
enter
xor
sarb
mov
mov
or
and
pop
jo
inc
inc
ret
sbb
pusha
and
push
sbb
sbb
ret
mov
push
adc
xorb
pop
dec
adcl
nop
mov
adcb
icebp
scas
inc
pop
xchg
mov
push
popa
mov
pop
sub
daa
pop
mov
push
and
pop
mov
icebp
and
setnp
adc
mov
pop
adc
aaa
inc
add
adc
inc
jbe
aaa
or
adc
sbb
incl
aaa
jbe
fnstenv
aad
or
shll
adc
adc
dec
leave
and
in
sub
mov
gs
adc
test
push
adc
adc
push
sahf
aaa
push
imul
cmp
sbb
hlt
outsb
and
outsl
pushl
push
gs
or
cmp
add
int3
int3
jbe
sub
xor
loope
xor
mov
sub
popa
cmp
pop
mov
ljmp
lods
mov
mov
xor
add
jo
and
adc
push
inc
inc
sbb
bound
idivb
popa
add
icebp
outsl
lods
rcrb
push
bound
shlb
je
push
ret
or
fs
pop
sub
or
cmp
or
hlt
add
test
dec
sbb
and
push
or
push
data16
inc
mov
roll
rolb
jno
outsl
clc
bound
mov
push
adc
sarb
mov
push
movsb
adc
hlt
lds
cmpsb
xchg
push
fcompl
popa
xchg
jp
pop
inc
sub
mov
sbb
mov
ret
jo
out
sub
xchg
dec
add
fisubl
jo
add
push
ret
or
movsb
or
outsb
test
cmc
dec
push
fimuls
repnz
mov
sbb
adc
mov
and
lock
add
push
push
adc
cli
outsb
mov
stos
orb
inc
adc
shlb
lods
nop
insb
or
jmp
push
aas
inc
loopne
dec
push
rolb
pop
pusha
cmp
add
mov
jge
ja
shl
mov
add
data16
jne
cli
pop
inc
clc
inc
lcall
jg
sub
sub
cmp
incl
mov
rorb
jb
push
add
mov
sbb
jb
cmpl
movsl
dec
jp
xchg
jb
dec
sysenter
adc
subl
inc
sub
xchg
leave
push
ds
push
shl
add
or
jb
push
and
fbld
fisubl
add
sub
pop
and
push
aam
cmp
push
or
mov
icebp
xchg
in
push
jmp
lock
ret
cmp
push
aam
push
jle
lock
mov
test
shll
icebp
and
mov
jecxz
xchg
mov
scas
pop
mov
jne
mov
mov
lods
jg
mov
cltd
out
aas
push
mov
xor
sbb
cwtl
cld
push
mov
test
mov
data16
mov
lcall
sbb
inc
xchg
jmp
jle
xchg
pop
sub
es
rolb
mov
sub
gs
pop
jg
push
andb
inc
add
fldenv
ja
shrb
mov
pushf
ljmp
loope
xor
roll
or
and
in
lcall
sbb
dec
mov
ds
popa
sub
mov
int
add
hlt
inc
and
or
hlt
add
mov
pusha
inc
call
pop
inc
faddl
dec
dec
adc
adc
and
add
dec
dec
mov
add
ret
adc
sub
mov
lcall
inc
xor
sbb
das
sub
pop
or
xchg
add
or
rolb
or
or
lods
and
xor
add
cmp
incb
and
sub
test
mov
add
pop
mov
inc
jo
jo
jle
mov
ret
inc
into
outsb
or
sahf
pop
clc
sbb
or
add
add
outsb
idivb
mov
add
mov
rolb
xchg
add
outsl
or
add
or
sbb
sbb
xchg
mov
inc
rcrb
xor
sub
mov
push
outsl
movl
in
mov
int3
lods
dec
adc
outsl
cld
and
das
int3
add
sbb
cmp
jmp
add
xor
cmpsl
test
push
test
xchg
push
mov
or
aas
jp
or
inc
adc
sub
sub
loop
dec
stos
cwtl
sub
and
loopne
cli
lods
add
mov
pop
xor
cwtl
and
xchg
dec
xor
adc
mov
out
data16
push
cmc
and
fcoms
rorl
mov
cmp
or
pusha
inc
add
popf
jno
add
adc
sub
decb
adc
sub
out
aam
sub
xorb
or
sub
xor
mov
add
cmp
dec
ljmp
and
add
sub
inc
test
and
in
mov
ss
add
insb
inc
adc
repz
or
mov
out
mov
jb
dec
xor
jno
push
dec
icebp
add
jp
cmp
or
ret
or
jne
push
fidivrl
mov
xor
andl
cmpsl
sub
xor
fnsave
sbb
out
or
push
xchg
push
jo
sub
xorb
inc
xchg
loope
outsb
add
pop
inc
ss
inc
ss
adc
subl
inc
or
lea
mov
dec
dec
inc
push
ret
movsb
and
cmpsb
les
dec
add
push
fnstsw
or
inc
adc
push
fisubl
addb
add
sub
mov
jno
push
inc
xchg
sub
and
lcall
dec
mov
push
subb
sbb
ret
sbb
xor
pop
push
sbb
add
nop
pop
dec
inc
daa
leave
cli
andb
lret
sbb
add
sbb
lock
add
xchg
cmpb
clc
jg
inc
and
inc
inc
adc
push
test
rolb
adc
scas
add
cmp
add
mov
mov
inc
xlat
push
hlt
pop
shrb
lock
addb
add
push
cmp
add
mov
sub
and
xor
ficoml
sbb
lds
testl
xor
mov
inc
shlb
cmp
aam
adc
jle
inc
scas
pop
and
fisttps
shl
xor
addb
in
push
or
xorb
push
push
lock
je
mov
xchg
and
addb
mov
dec
pop
dec
stos
xlat
add
jg
or
ja
adcl
mov
and
mov
les
ret
pop
xorl
sti
mov
or
setb
rcll
test
scas
dec
sub
and
adc
or
add
arpl
add
mov
xorb
cmpsl
pop
push
add
pop
pop
ljmp
sub
sbb
sub
hlt
ret
pop
fmull
popa
sub
adc
js
xor
cmpsb
inc
sbb
orb
nop
adc
ficoml
pop
push
data16
subb
inc
dec
or
add
rcrb
add
or
push
add
fmuls
and
or
mov
or
or
js
test
and
jg
push
mov
add
loopne
mov
movsb
pop
mulb
sub
into
jle
mov
out
and
aas
ret
adc
loope
sub
outsb
ret
sar
clc
stos
mov
lret
loopne
mov
mov
and
add
incl
test
and
cmpsb
test
shlb
stos
daa
sbb
pusha
enter
xor
mov
das
and
insb
add
xor
sbbb
sbb
jmp
xor
cwtl
and
add
xor
pop
mov
xor
xor
xor
daa
pop
push
lds
movsl
jno
push
jo
xor
inc
adc
pusha
inc
pop
push
mov
shlb
cmp
outsl
pop
das
call
leave
xor
mov
stos
addb
jb
jmp
and
ds
and
mov
mov
daa
insb
xor
aas
nop
data16
mov
andb
outsb
cs
jno
pop
cmp
lret
clc
push
mul
nop
and
ror
pop
push
add
orb
add
add
push
sbb
sti
aas
adc
mov
mov
inc
and
and
nop
add
or
and
inc
daa
gs
das
aam
lcall
lods
add
adc
or
pop
and
add
xor
adc
std
outsl
sub
cli
rclb
adc
and
hlt
fwait
mov
add
insl
clc
nop
mov
pop
cli
inc
shlb
lret
mov
aas
sarb
jo
sahf
jb
cmpsb
jo
inc
push
pusha
pop
rorb
sub
or
ficoms
scas
add
push
inc
or
add
mov
mov
cmp
pop
xchg
and
push
add
pslld
or
sbb
or
pop
aaa
sahf
push
push
daa
inc
jp
cmp
mov
jle
add
in
pop
cmpsb
rolb
add
fwait
cmpsb
mov
sahf
and
and
lcall
dec
mov
aas
xchg
mov
mov
push
push
rorl
jp
xchg
shlb
inc
push
ds
mov
jo
roll
jnp
pusha
inc
xor
lock
mov
or
leave
icebp
pop
and
add
push
adc
jb
loop
mov
ret
jle
or
outsb
js
add
push
adc
je
ljmp
lret
lock
inc
cmp
popa
jno
push
inc
aaa
icebp
enter
fs
sbb
or
dec
loopne
and
add
bound
cmpsb
incl
mov
les
les
andb
mov
push
jl
mov
rorb
sub
dec
jo
add
mov
lock
mov
aas
scas
repnz
mov
ret
mov
cltd
cmp
sbb
jl
rcrb
nop
cmp
pop
pop
push
push
and
and
push
and
test
sbb
in
nop
add
push
sahf
cwtl
xor
pop
adc
cmp
fwait
insb
or
pop
nop
shrb
andl
dec
xchg
push
add
mov
out
add
mov
pop
or
add
cs
dec
push
push
mov
mov
clc
xchg
add
pushf
or
outsb
jo
push
xor
lock
xchg
sbb
sbb
jecxz
call
mov
mov
pop
sbb
xchg
push
cmpsl
aas
loopne
pop
adc
mov
add
clc
or
jle
push
inc
popaw
mov
push
jo
rclb
mov
and
pop
push
outsl
outsl
stos
dec
inc
or
and
mov
rclb
sbb
pushf
jns
out
add
lret
aas
cld
mov
dec
lret
add
ds
dec
clc
loope
add
loopne
sub
faddl
je
jo
int
lods
adc
and
test
xor
xor
pusha
fsub
xchg
xchg
cmp
pusha
fbstp
rcrb
jo
inc
cs
nop
nop
or
imul
adc
in
cmp
je
fildl
rcll
pop
mov
paddq
or
cmp
jo
push
adcl
mov
mov
pop
mov
lods
fistps
and
cmp
ss
dec
or
test
xor
test
lock
dec
nop
out
adc
test
sarb
gs
xor
mov
adc
pop
add
mov
fmull
int
fimuls
or
add
xchg
sub
dec
cmp
inc
add
adc
mov
or
inc
dec
xorb
adc
sub
sub
push
sarb
rcr
add
xor
subb
nop
push
xchg
mov
mov
mov
clc
mov
push
adc
jne
pcmpgtb
clc
add
jae
xor
test
call
insb
add
pop
or
out
cli
add
cmp
cmp
mov
add
xchg
xor
add
lret
adc
add
or
jbe
mov
call
xor
sbb
push
ret
add
rorb
pusha
or
push
pop
jbe
or
cmp
inc
cmp
jbe
inc
adc
mov
inc
sub
mov
sbb
movsb
and
mov
mov
int3
jl
pop
sbb
and
lret
je
or
fcmovne
adc
inc
jo
cmp
andb
inc
iret
out
xor
jo
mov
stos
outsl
adc
adc
dec
ds
in
push
testb
pop
ficoms
incl
and
mov
adc
icebp
movups
pop
push
dec
test
and
jno
cmp
push
add
add
fisubs
gs
push
or
fcomip
add
xchg
add
push
mov
mov
repnz
mov
add
movsb
in
xchg
cmc
fistpll
mov
lret
fmuls
or
rorl
add
or
fimull
jbe
jle
mov
ds
addb
inc
inc
popa
lea
fsubrs
push
cmp
dec
and
les
fcmovbe
add
inc
rclb
movsb
mov
mov
add
add
ret
and
mov
or
lret
inc
mov
popa
xor
dec
lcall
mov
jo
jb
push
adc
int
add
sub
sbb
lds
jp
add
aad
incb
add
shlb
push
mov
cmp
add
sbb
lret
cmp
or
and
hlt
xor
adc
clc
lret
and
decl
test
dec
nop
lret
movsb
mov
lret
fisubrs
outsl
dec
fwait
ret
jp
ret
pop
rorb
inc
jp
nop
or
xchg
add
mov
pusha
adc
dec
pusha
pop
or
jg
pusha
inc
and
ds
mov
add
sub
loope
xor
pop
inc
fldt
cmp
inc
push
push
shr
gs
sbb
dec
xor
lahf
or
dec
mov
sbb
inc
es
loop
sbb
pop
leave
imul
mov
loop
clc
mov
sub
mov
jns
inc
aas
pop
jae
pop
ds
inc
xchg
dec
or
sub
or
ss
rol
push
sbb
cs
loopne
or
dec
jo
aaa
shrl
xorl
or
dec
aas
mov
add
popa
out
add
add
clc
cmp
mov
fstpl
loope
or
inc
xor
dec
mov
fistpll
and
stos
int3
cmp
out
and
add
adc
xor
pop
fmuls
mov
fdivrs
mov
sbb
outsb
xor
ja
sahf
inc
push
add
push
dec
dec
rorb
aad
push
jbe
xor
push
or
add
xchg
add
add
and
xchg
out
adc
mov
mov
add
fmuls
mov
lea
out
clc
sub
sbb
imul
aas
push
cmpb
or
lret
hlt
jg
add
sbb
mov
jbe
push
mov
xchg
addb
pop
push
cmp
sbb
and
clc
jecxz
cmp
adc
mov
xchg
mov
or
jmp
pop
push
inc
dec
add
inc
add
clc
outsl
dec
adc
dec
xor
dec
pop
ret
add
or
orl
loop
dec
xor
dec
sub
jno
cwtl
orb
adc
aam
inc
iret
sbb
push
or
sub
add
push
in
int3
push
jecxz
aaa
sbb
and
inc
push
dec
aaa
add
fisubrl
outsb
and
mov
mov
or
inc
pusha
mov
ret
push
adc
add
loopne
push
pop
pushf
xorl
aaa
inc
inc
pop
decl
cmpsb
mov
repnz
add
inc
inc
adc
jne
cmp
sarl
add
orb
pushf
sarb
or
or
das
add
adc
sbbb
sbb
xor
ljmp
jno
out
das
rcrb
bound
lods
mov
outsl
scas
dec
adc
mov
adc
xorl
add
cmp
sbb
test
cmpb
add
and
lahf
dec
inc
sub
aas
movl
sbb
adcb
mov
fdivl
xlat
inc
mov
bound
mov
or
add
inc
sub
adc
push
add
mov
sbb
mov
loop
push
into
add
jo
inc
int3
or
sub
cmp
jnp
ret
push
or
in
push
sub
inc
rclb
sub
dec
pop
xor
sbb
sub
movsb
jb
pop
mov
sbb
das
sub
xchg
jbe
or
cltd
add
push
and
mov
jo
movsb
push
sbb
pop
jge
sbb
push
inc
les
inc
jns
adcb
add
call
pop
push
mov
add
pop
add
cs
inc
std
insb
leave
mov
xor
mov
push
lret
inc
jecxz
leave
mov
dec
test
into
adc
mov
sbb
mov
pop
push
outsb
insl
sti
out
and
roll
push
adc
adc
push
add
pop
hlt
aas
lock
fdivrs
ja
pop
sbb
push
add
std
leave
sbb
repz
and
mov
sub
shlw
in
daa
call
hlt
rclb
ret
inc
mov
add
out
popa
and
dec
aas
cmpsb
loopne
or
mov
pop
sbbb
add
inc
add
mov
mov
mov
dec
xchg
cmpsb
or
add
mov
and
dec
aas
in
jne
outsb
outsb
pop
mov
inc
incb
inc
push
pusha
pusha
dec
jp
popf
shl
stos
shlb
pop
leave
add
out
mov
aam
outsb
flds
inc
add
ja
dec
dec
lret
cwtl
dec
add
add
mov
outsl
or
loope
and
hlt
orb
incl
bound
dec
mov
add
rorb
rorb
pop
andl
jns
mov
orb
pusha
mov
mov
clc
inc
adc
push
hlt
push
mov
fisubs
leave
mov
jg
es
mov
and
inc
or
add
jne
jge
add
mov
add
test
aam
mov
aaa
test
ret
adc
push
add
cld
movl
or
dec
adc
or
movl
dec
adcb
mov
stos
push
mov
mov
bound
push
addb
add
rolb
jle
mov
out
ja
xor
mov
in
sbb
inc
int
jo
or
cmpsb
push
inc
add
test
and
loopne
dec
jne
outsb
adc
adc
es
inc
rorb
sbb
sahf
repnz
cmp
xchg
add
enterw
mov
add
std
hlt
scas
xchg
xchg
enter
shll
dec
mov
orl
pop
icebp
lcall
sub
in
cmpsb
ss
and
adc
bound
add
es
or
dec
mov
and
leave
lea
sbb
test
adc
sub
sub
adc
dec
cs
mov
std
sub
dec
bound
pop
outsb
add
lods
inc
sarl
and
pusha
lea
ret
or
and
xchg
les
int3
push
push
loope
adcl
jp
ret
push
loope
cwtl
xor
or
subb
sti
sbb
jns
mov
push
sbb
out
int3
add
push
cmpb
mov
or
orb
fldt
mov
insb
js
add
je
mov
dec
mov
rorl
sbb
loope
xchg
hlt
mov
mov
sub
pop
mov
cmp
xor
test
jne
mov
popa
test
inc
or
push
jno
cli
das
fdivs
mov
mov
add
andl
inc
cmp
cmp
iret
add
push
add
lcall
push
ljmp
jmp
lock
or
or
inc
testb
incl
sbb
pslld
lcall
adc
ret
ss
xchg
pop
jl
dec
test
addb
mov
mov
xchg
xor
mov
pop
pop
or
sbb
loop
inc
xor
adc
inc
pop
jb
push
or
dec
cwtl
xchg
sbb
sub
add
sbb
sbb
mov
fwait
lea
leave
mov
test
dec
mov
and
or
bound
adc
xchg
xor
fs
adc
daa
popa
cmpb
adc
xchg
sub
or
bound
inc
fnstsw
jo
orb
xchg
inc
rcrl
pop
test
movsb
fstpt
ret
js
add
or
or
inc
cmp
dec
into
nop
es
or
or
ja
call
or
inc
imul
push
cld
scas
mov
daa
xchg
pop
mov
inc
dec
xor
push
adcb
add
inc
cli
out
inc
fdiv
mov
mov
mov
lcall
inc
add
mov
inc
test
and
mov
push
mov
cwtl
sub
jp
push
or
xor
hlt
sub
add
xor
or
dec
mov
and
push
inc
dec
sbb
mov
shll
and
decl
popa
or
aaa
xor
data16
and
add
add
adc
stos
inc
or
icebp
xchg
mov
jnp
and
and
add
push
add
push
xchg
lret
pop
push
sub
inc
dec
mov
adcb
lcall
sbb
iret
mov
lock
pop
adc
jb
cs
ds
or
jo
lcall
push
cmp
decb
loope
out
mov
in
push
xchg
rolb
sbb
mov
sbb
or
adc
push
mov
inc
cmp
lcall
out
fisubrs
js
aad
lcall
add
mov
add
add
data16
scas
dec
and
and
push
xor
pop
push
aas
mov
lock
enter
cmp
xor
mov
add
pop
jl
or
mov
inc
push
fdivr
inc
dec
movsb
ss
or
mov
pop
dec
clc
adc
enter
push
push
pop
test
dec
orb
cld
xor
fwait
adc
jle
jl
jno
mov
nop
cmp
enter
cmc
mov
lods
dec
push
inc
int
push
cmp
test
push
mov
sbb
inc
add
dec
jl
xor
or
sbb
test
sbb
inc
xchg
pop
clc
push
clc
les
js
add
notl
dec
jl
cmp
dec
mov
push
xchg
pop
das
mov
stos
mov
mov
or
addl
leave
fs
cmpb
mov
mov
push
insl
cli
aaa
push
dec
mov
mov
sub
sbb
cs
add
rolb
mov
cmp
aam
xchg
jb
jb
adc
fldt
ret
add
dec
cmp
call
cld
push
cmpsb
mov
push
aam
jo
xchg
and
sub
cld
fildll
mov
sbb
loopne
inc
jg
add
inc
mov
inc
xor
gs
mov
movsb
movsb
dec
aas
orb
push
mov
nop
ds
push
js
add
decl
mov
or
cmpsb
outsl
frstor
shrb
and
mov
mov
fmuls
jmp
addb
out
xchg
push
add
sbbl
push
push
nop
mov
mov
and
decl
or
jne
add
pop
dec
lcall
bound
mov
movsl
andb
mov
jo
imul
roll
inc
mov
inc
inc
sbb
mov
dec
push
push
mov
dec
mov
popa
leave
ljmp
stos
mov
sbb
stos
inc
sub
dec
enter
pop
push
jl
fbld
addr16
and
or
push
shrl
push
inc
sarl
rorl
xchg
cli
adc
add
mov
jo
dec
pop
rcrl
data16
push
test
pop
push
pop
jno
inc
sub
xor
dec
pusha
mov
xor
sub
push
jno
aas
inc
inc
adc
cs
js
stos
nop
push
cmp
jae
jp
movsb
hlt
out
push
xor
shlb
ss
xchg
mov
adc
inc
mov
movsb
aaa
fcomp
push
or
inc
stos
add
dec
movl
and
dec
mov
mov
sbb
ds
sub
sub
je
push
or
leave
mov
loope
cwtl
shlb
mov
add
adc
outsl
jg
adc
mov
or
cmp
pop
das
push
es
mov
jo
sub
nop
clc
sub
pop
dec
lock
dec
sbb
bound
xchg
int
mov
adc
xchg
mov
fistl
loopne
incl
mov
xor
xchg
push
or
adcb
xchg
mov
imul
cli
pushf
add
incl
mov
adc
adcb
add
sub
add
inc
push
pop
loopne
jmp
push
or
mov
insb
and
mov
aaa
insb
js
inc
dec
rolb
push
mov
lock
aam
rorb
jle
mov
mov
pop
rcll
in
push
adc
push
roll
add
cmp
dec
jp
push
in
add
ret
insb
push
add
push
or
and
data16
test
ljmpw
add
aam
add
addb
mov
xor
cmp
or
je
add
mov
adc
or
dec
jle
ds
andl
pop
add
and
pop
sbb
movl
cmpsl
cld
inc
mov
cmc
pusha
roll
mov
xchg
fidivrl
fcmovb
or
jle
mov
mov
imul
fisttpl
movsl
addr16
dec
roll
mov
pop
pusha
adcb
jl
inc
iret
add
mov
xchg
andb
add
sub
or
push
jbe
les
mov
and
fcoms
pop
pop
andb
adc
push
ret
ret
stos
or
xchg
in
movsl
cs
add
mov
adc
out
add
adcl
lea
push
pop
xchg
xchg
add
sbbb
sbb
add
add
ja
jb
mov
push
frstor
jle
and
mov
lock
xor
scas
sbb
repnz
or
jp
pusha
call
sbb
sub
fadds
sahf
push
cmp
or
adc
add
mov
or
lahf
adc
fisttps
mov
sbbb
push
negb
pop
rclb
cmp
or
cmp
or
cmp
mov
ss
inc
iret
rclb
orb
and
inc
xor
or
pop
push
push
push
lcall
vstmxcsr
add
cmpb
sub
test
push
rcll
enter
pusha
or
adc
jmp
adc
ror
movsb
add
or
fucomi
and
push
sbb
rclb
adc
xor
mov
add
push
jge
movb
incl
push
inc
daa
push
add
adc
and
daa
jb
test
mov
and
adc
fs
mov
xor
rcll
or
lahf
jb
sub
dec
ret
lock
loope
js
rclb
test
ds
mov
inc
fidivrs
pop
rorb
adc
xchg
cld
mov
inc
and
dec
orl
or
pop
xor
aas
xchg
mov
or
add
push
movups
shl
jg
lock
mov
xorb
add
push
pop
jns
jae
decl
scas
movsb
aas
or
roll
leave
mov
adc
mov
leave
pop
sub
inc
pushf
cmp
fbld
mov
ret
adc
ror
or
adc
and
imul
fwait
inc
sub
lahf
add
mov
mov
mov
add
pushf
decl
insb
add
ret
je
mov
movups
mov
xlat
mov
addb
cmp
mov
pushf
fcmovbe
mov
ss
sbb
push
jl
push
loopne
js
arpl
pop
mov
adc
mov
sub
jg
adc
jmp
sbb
push
jmp
dec
or
in
add
sub
or
jp
dec
rep
adc
add
push
and
lret
xor
dec
jnp
mov
add
and
sbb
push
fidivrl
sbb
cli
adc
cmpsb
add
cs
push
adc
mov
add
xor
push
shrb
std
push
push
pop
and
rolb
pop
mov
mov
or
imul
popf
xlat
stos
fdiv
jo
xor
mov
mov
repnz
dec
fsub
out
sti
sbb
mov
inc
mov
xlat
loopne
xchg
jbe
adcb
shrl
fst
mov
ret
pop
stos
popa
add
lcall
and
or
dec
xor
mov
lcall
push
loope
jno
jl
stos
pop
out
mov
sub
es
fdivs
loope
jmp
or
dec
dec
inc
mov
stos
fsubl
xor
xor
inc
push
or
sub
out
mov
addl
or
adc
mov
or
and
fwait
sub
lcall
xor
adc
sbb
add
lea
push
or
bnd
sarb
ss
aad
mov
cs
sub
push
sbb
jb
cli
xchg
add
pop
cmp
sbb
enter
mov
pop
inc
add
mov
les
icebp
cmp
hlt
fs
xlat
js,pt
inc
rolb
rol
sahf
adc
mov
adc
ja
mov
or
insb
call
jno
or
hlt
pop
inc
out
loopne
inc
jmp
push
pop
jl
adc
inc
xchg
dec
pusha
mov
loop
adc
subl
movsl
paddw
into
mov
dec
add
mov
imul
filds
ret
inc
add
adc
pop
or
insb
mov
dec
jp
xchg
test
inc
into
sub
inc
xor
adc
into
sbb
add
xchg
xchg
hlt
pop
lcall
sub
bound
mov
adc
push
jl
mov
data16
cmp
imul
aam
pinsrw
insb
fdivrp
pop
mov
icebp
add
dec
pushf
adc
add
cmpl
sbb
inc
adc
or
lock
insb
xchg
into
ficompl
mov
dec
mov
scas
cmp
push
add
or
into
outsb
rolb
scas
clc
sbb
pop
inc
iret
lret
add
fs
and
in
add
jb
daa
inc
inc
sub
subb
pusha
scas
mov
rolb
fbstp
sbb
push
and
jg
movsl
and
jle
mov
add
les
loopne
fs
sbb
jno
or
inc
push
inc
pop
lret
sub
or
cmp
adc
hlt
arpl
popa
mov
pop
rclb
and
or
pop
adc
ljmp
add
and
jg
mov
adc
inc
and
pop
push
test
ss
ds
and
orps
ljmp
add
xchg
loop
mov
jo
or
mov
mov
or
arpl
adc
mov
mov
adc
cmp
add
les
fmuls
pop
pusha
push
lock
inc
incl
rolb
adc
xor
xor
sbb
or
push
add
jb
clc
pop
cld
xchg
hlt
and
pop
and
ds
push
lret
cmpsb
bound
mov
sbbl
mov
xchg
pusha
outsb
inc
add
fidivrl
push
js
add
les
push
into
popa
xor
mov
or
test
cmp
es
adc
ret
ljmp
loopne
jmp
mov
mov
sub
ret
cld
stos
mov
xor
jg
pop
cmp
sub
jb
or
nop
jns
xor
push
push
pop
xor
add
cmp
sbb
dec
jp
push
add
jmp
filds
mov
push
push
fcompl
cld
fwait
repnz
inc
or
or
scas
shlb
adc
cmp
subb
cmpsb
push
shll
pop
mov
ljmp
inc
andl
adc
mov
mov
push
sbb
inc
mov
push
mov
xchg
sub
enter
outsb
testb
and
fiaddl
loopne
shrb
jo
nop
or
adc
add
fldt
sbb
push
or
push
sbb
add
nop
push
loop
cmpsb
jne
dec
cld
scas
add
dec
and
mov
jle
roll
shlb
pop
inc
cmp
pop
mov
xor
cmpb
nop
pop
mov
sarb
mov
sbb
ds
dec
push
pop
ret
rcll
or
dec
mov
call
mov
and
frstor
mov
andl
sub
shll
sbb
das
shlb
push
add
shr
xor
or
or
loopne
add
call
xchg
outsw
decl
arpl
cltd
sbb
shlb
adc
scas
incl
das
inc
mov
jl
adc
mov
outsb
or
inc
lock
sbbl
das
mov
mov
jg
inc
xchg
add
xchg
add
mov
push
mov
inc
cltd
ret
lods
adc
rclb
mov
ljmp
dec
add
xor
mov
and
mov
outsl
fstpt
arpl
andb
jmp
add
cs
lret
mov
inc
sub
loopne
cs
clc
dec
push
fwait
jg
scas
rcr
pop
sub
and
lret
cmpsb
xorl
lret
pop
lock
stos
push
inc
jnp
popa
cmp
inc
inc
ja
add
pop
sahf
dec
inc
inc
sub
mov
lock
aas
or
scas
pusha
mov
pop
sbb
push
mov
pop
mov
sub
insb
push
adc
adc
push
sbb
push
sbb
sub
jmp
add
adc
cmpsb
adc
je
test
mov
sti
pop
pusha
inc
outsb
mov
adc
outsb
jecxz
inc
repnz
mov
mov
loop
xor
add
xor
decl
push
adc
jl
loope
xchg
sub
mov
or
jbe
shll
mov
movsb
mov
mov
es
loopne
add
mov
cmp
lods
js
cmpb
mov
push
sbb
pop
add
shrb
test
popf
and
mov
or
pop
loopne
push
stos
loopne
cmc
jg
repnz
bt
and
xchg
cwtl
xor
or
inc
jbe
stos
pop
sbb
push
ficoms
add
popa
add
addb
out
ficoml
and
mov
mov
jle
or
jo
inc
mov
std
aaa
fsubrl
inc
mov
imul
push
lods
xor
aam
loop
stos
lcall
xor
inc
lods
jae
add
add
incl
ret
inc
sarl
orb
or
pop
aas
push
outsl
in
test
not
inc
adc
mov
push
jecxz
dec
jno
cmp
loopne
incl
inc
sbb
cmp
mov
push
add
pop
int3
adc
inc
mov
mov
push
sbb
int3
inc
and
arpl
inc
outsb
pop
insb
bound
adc
leave
or
dec
mov
xor
jne
aas
add
or
fdivp
or
mov
seto
dec
jle
fnstcw
jnp
andb
and
andb
mov
xchg
outsl
addl
data16
add
clc
xor
push
or
in
call
xchg
movsb
xchg
mov
outsb
fidivl
xor
rclb
push
mov
in
repz
mov
movsl
lock
dec
arpl
mov
enter
jo
insb
jecxz
push
mov
jae
xchg
push
dec
inc
pusha
adc
mov
sub
add
ds
push
ds
lcall
or
mov
inc
sbb
popf
add
icebp
xchg
outsb
inc
rsqrtps
test
jg
out
adc
add
pushf
add
outsb
and
jmp
adc
es
add
xchg
add
sub
add
xchg
faddp
add
mov
lock
dec
mov
xor
test
mov
mov
xchg
xor
xchg
jno
aas
cs
or
xor
add
push
add
xchg
add
mov
sbb
hlt
sub
addb
dec
push
repnz
stos
add
sbb
pop
jmp
addb
adc
and
mov
orb
xchg
rcl
bound
pop
cmpsb
add
push
push
sub
xor
inc
jb
aas
js
incl
push
xchg
pop
adc
push
mulb
cmpsb
sahf
popa
data16
push
xchg
and
add
inc
push
or
ds
adc
pop
adc
dec
add
and
add
jp
xchg
mov
sbb
xor
insb
adc
add
adc
test
sbbb
mov
dec
mov
add
insl
add
movsb
pop
shlb
add
hlt
and
push
out
add
cmp
adc
outsb
pusha
mov
adcb
mov
lods
xchg
cwtl
push
aaa
mov
shrb
mov
mov
or
pop
cmpsb
jae
inc
cmp
jl
sbbb
rorl
jb
sbb
rolb
adc
add
orl
loop
adc
mov
subl
into
push
jno
cmp
adc
shlb
into
cmp
push
call
jle
mov
ljmp
inc
das
inc
rcrl
loopne
mov
cmp
ljmp
mov
mov
xor
sub
pop
inc
mov
enter
ret
sbb
dec
inc
dec
popa
aas
push
orb
fildll
dec
mov
add
popa
sub
jb
cwtl
mov
pop
or
cmp
int3
js
xorl
add
insb
insl
aaa
adc
mov
shr
int
mov
popa
je
adc
xchg
jne
rorl
mov
hlt
lods
ja
cli
add
mov
adc
adcb
mov
cmp
inc
and
push
les
xchg
mov
or
pushf
stos
hlt
mov
rcll
mov
dec
cmpb
mov
pop
mov
xor
push
addb
xchg
sub
mov
clc
out
sub
leave
mov
inc
adc
std
lcall
and
dec
icebp
subl
pop
sbb
jg
shrb
mov
outsb
add
or
adc
cmpsl
mov
mov
dec
aam
sbb
sbb
sub
loope
js
cmpl
add
add
push
add
bound
xor
sub
mov
in
add
clc
or
cli
dec
xchg
inc
fs
cmpsb
inc
cwtl
inc
lcall
loop
pop
and
iret
dec
mov
sbb
es
cli
mov
cltd
cli
decl
push
adc
xchg
imul
or
pop
stos
fisubrs
jge
incl
pop
or
add
add
inc
xchg
test
lods
push
sub
and
test
cmp
mov
pop
inc
aas
pop
xchg
ljmp
xchg
dec
or
xchg
mov
leave
cmp
ret
popa
xor
and
sbb
std
mulb
cmpsb
jg
push
fistl
adc
hlt
shrb
push
pop
mov
add
mov
call
test
inc
js
xor
cli
fisttps
subb
mov
out
orl
popa
sub
cmp
or
in
mov
test
push
movsb
mov
arpl
pusha
sub
pushf
or
shlb
push
es
outsl
outsl
xchg
or
aas
insb
loop
adc
push
inc
movl
test
and
xchg
push
sub
loop
mov
inc
test
mov
insb
lahf
cmp
mov
cli
add
popf
loopne
pop
lds
sbb
pusha
das
mov
pusha
arpl
push
imul
sbb
inc
push
imul
stos
fcompl
cs
xor
and
cld
outsw
js
jnp
mov
xor
xor
inc
push
cld
mov
loop
dec
inc
inc
mov
mov
nop
dec
dec
pop
inc
sub
cli
dec
testb
and
jp
sub
ret
loopne
clc
mov
cmp
pusha
mov
lret
rcr
dec
inc
movsb
add
or
inc
adc
lcall
cmp
or
add
or
sub
push
orb
push
inc
mov
push
sbb
test
mov
ret
pop
sub
jmp
mov
dec
and
pop
ret
add
jp
mov
cs
bound
jle
or
adcb
mov
mov
and
cpuid
cmp
mov
test
dec
push
and
out
xchg
je
push
clc
imulb
bound
jge
mov
and
adcl
mov
sub
sub
add
imul
pop
pop
mov
jp
ss
pusha
push
or
icebp
jb
inc
pop
add
cmp
nop
xchg
sub
mov
adc
xchg
ljmp
xor
dec
sbbb
push
rclb
mov
fwait
lods
test
roll
lret
lret
mov
cmp
inc
loopne
adc
or
test
adc
jb
cmp
lock
or
inc
add
push
sub
pusha
ret
or
fisttpll
in
pusha
adc
ror
push
mov
stos
push
mov
dec
test
icebp
cltd
int3
push
or
repnz
xor
push
and
loope
ret
mov
adc
insb
jg
mov
or
jae
cwtl
mov
sbb
jecxz
mov
fiadds
pop
add
or
popa
adc
inc
and
rorb
nop
mov
sarb
cld
ljmp
lods
and
add
add
xor
rorl
adc
inc
inc
adc
adc
and
sbb
dec
cld
push
adc
inc
cwtl
sbb
sbb
jmp
xor
ss
add
outsb
sbb
ljmp
fcmove
mov
adc
add
inc
cmovl
lods
adc
sbb
mov
xor
das
stos
lods
dec
movsb
dec
push
and
je
push
mov
je
jns
and
ret
aaa
push
mov
or
push
jecxz
mov
aaa
test
movsb
addps
adc
int
mov
adc
mov
adc
xor
dec
adc
sub
popf
clc
mov
loopne
dec
into
dec
add
shlb
push
adc
test
jne
push
loop
push
mov
ds
lcall
xchg
pop
loopne,pt
inc
sbb
cld
jg
inc
or
push
sbb
mov
push
into
xchg
std
pop
leave
hlt
jbe
jno
pop
sub
nop
addl
push
add
arpl
jmp
mov
lret
add
pop
push
rcrl
into
xor
add
test
mov
xchg
loope
xchg
subl
into
lods
incl
push
pop
dec
sbb
cmp
cli
mov
popa
push
cmpsb
sbb
push
mov
add
jg
cmc
pushf
mov
xor
jb
cs
iret
inc
add
fwait
and
ficoml
ss
hlt
loope
sbb
add
mov
sar
lret
sbb
mov
cld
sbb
or
or
cmp
jle
push
adc
adc
dec
push
pop
inc
sbb
jo
add
aam
loopne
add
jo
and
adc
repnz
js
imul
ret
daa
or
sbbl
dec
add
repnz
push
sub
sbb
aam
pusha
jecxz
xor
mov
adc
pusha
mov
fldenv
add
mov
sbb
and
sbb
ret
aaa
push
dec
jns,pt
and
mov
decl
add
and
rcrl
xchg
push
jb
dec
aam
and
fs
mov
orb
and
mov
pop
sti
xchg
mov
xorb
mov
inc
addl
add
scas
xchg
lods
xchg
sbb
xlat
mov
dec
pusha
pop
sbb
xchg
or
lods
cmp
mov
cltd
in
adc
pop
jge
or
xorb
lcall
sbb
add
or
inc
add
mov
aaa
aam
icebp
stos
mov
inc
and
popa
xor
loop
jo
add
dec
jg
and
imul
stos
add
imul
xchg
add
push
nop
push
fcmovnu
jo
fisttpl
mov
mov
lods
inc
inc
addr16
sub
sub
add
sbb
sub
add
push
cmpsb
sbb
ret
add
push
adc
cmc
pop
repz
adc
add
and
push
adc
jl
mov
es
pop
add
bound
xor
xchg
inc
add
adc
and
adc
loop
mov
add
mov
sbb
test
adc
ljmp
popa
cltd
mov
cmp
add
and
in
xor
clc
mov
cmp
push
add
outsl
push
add
sub
mov
lcall
or
mov
lock
ret
jnp
jbe
add
and
lock
mov
out
add
rcl
mov
add
push
rorb
mov
jle
sahf
mov
rolb
mov
xor
icebp
inc
decl
lcall
loopne
xchg
jno
bnd
arpl
inc
ret
loopne
adc
pop
stos
cs
stos
cmp
mov
mov
popa
xchg
inc
popf
push
inc
mov
lock
and
sub
ficompl
add
mov
mov
sbb
pop
and
jae
repnz
mov
je
filds
xor
jo
xchg
insb
aaa
mov
mov
lcall
xor
push
jo
lock
mov
faddl
aad
aaa
popf
sbb
and
inc
cmp
push
incl
fadds
roll
mov
repnz
loopne
cmp
jl
outsl
jo
stos
inc
cmp
push
lret
or
push
xchg
andl
adc
stos
mov
sub
das
clc
call
adc
mov
add
pushf
subl
scas
jo
push
mov
cs
pop
ficoml
push
outsl
aas
mov
push
add
add
jmp
clc
jg
out
aas
rcr
mov
mov
stos
push
mov
nop
imul
fistpll
movl
pop
mov
xor
push
or
outsb
xor
mov
mov
sub
call
adc
mov
roll
lea
push
aas
jecxz
mov
mov
dec
in
and
daa
sbb
insb
and
sbb
aaa
jne
shlb
or
loopne
or
sub
mov
insb
or
push
add
inc
clc
cmp
dec
int
jecxz
add
dec
arpl
mov
adc
add
mov
adc
adcb
cs
add
leave
mov
fsubrl
pop
rorb
hlt
add
mov
cwtl
push
add
stos
lret
push
inc
sbb
stos
inc
mov
fcomp
add
pminsw
loope
mov
or
add
add
dec
add
dec
adc
add
sbb
call
movsb
dec
xchg
pushf
fbld
jle
push
pop
and
aaa
nop
jp
jbe
jp
dec
andl
and
inc
add
leave
push
sbb
push
pop
mov
imul
xor
outsl
mov
hlt
cwtl
sbb
call
adc
out
lret
xchg
clc
and
pop
adc
mov
addb
and
xchg
je
sub
shlb
movb
sbbl
lret
call
sub
add
xor
jne
add
lret
add
mov
and
nop
movsb
dec
or
jnp
push
pop
mov
mov
call
mov
sbb
push
aas
lcall
popa
ja
add
sbbl
xor
add
scas
test
or
aaa
addr16
pop
xchg
sbb
xchg
aam
movsb
sbb
roll
movl
pop
xchg
pusha
add
rorb
pop
pushl
inc
or
add
cmp
aaa
or
or
push
push
fildll
lds
push
inc
push
mov
sbb
inc
push
mov
inc
adc
add
jmp
adc
add
push
les
mov
test
mov
sub
les
sub
add
mov
js
adc
scas
outsl
pop
xor
mov
outsb
add
jl
and
fisubrl
push
adc
sub
test
mov
cli
mov
mov
or
pop
clc
orb
jae
adc
ss
add
test
jb
sub
sbb
or
jb
sub
js
or
adc
shlb
dec
add
lahf
sahf
enter
mov
mov
jb
cmp
movsb
aaa
xchg
adc
les
jno
adc
jg
and
pop
mov
cmpb
jo
dec
add
add
sbb
jp
mov
inc
add
add
mov
mov
shlb
mov
mov
ret
les
shrb
or
fwait
xorl
and
mov
fwait
sbb
imul
push
das
fwait
xor
and
lcall
push
mov
lods
or
nop
cmp
adc
push
loope
mov
adc
mov
xorb
lock
add
pusha
push
pop
popa
add
xor
push
sbb
outsb
mov
add
xchg
andb
lock
xor
adc
scas
popa
mov
jle
out
or
or
add
faddl
lods
mov
cmp
notb
movsb
filds
push
adc
loopne
popf
cmpsb
and
rcrb
sbb
leave
idivl
sbbb
pop
sbb
jb
mov
test
sarb
adc
mov
adc
and
dec
jns
mov
inc
js
add
pop
or
mov
add
xchg
push
add
mov
daa
fcoml
adc
jecxz
int
adc
fwait
pop
mov
adc
cmp
and
andl
push
movsb
loopne
and
mov
mov
cwtl
mov
leave
add
popa
fsubl
inc
pop
stos
in
push
cwtl
cmpb
mov
add
mov
add
jb
mov
xchg
push
pop
ret
xor
les
cltd
and
fs
push
add
or
cmp
and
sbb
sbb
xchg
shrl
adc
movsb
pop
pop
adc
aaa
xchg
and
ret
rclb
and
sub
inc
imul
sbbb
lret
or
bound
jo
in
rorb
stos
add
push
or
sub
xchg
lock
mov
or
mov
inc
repz
mov
push
jo
cmp
andb
add
add
mov
cmpsb
or
test
lcall
pop
mov
lea
add
pop
cmpsb
lock
ds
push
pusha
sbb
or
jp
mov
loop
xor
push
mov
stos
pusha
adc
sub
xchg
ret
pop
mov
mov
dec
cmp
xor
and
push
mov
into
add
inc
int3
fisubrs
inc
sbb
data16
cmp
cmc
mov
pop
pop
scas
andb
xchg
mov
not
lcall
mov
aam
or
xchg
cltd
xchg
add
out
add
add
pop
inc
pop
adc
push
orl
and
xchg
outsb
push
jp
xor
xor
jl
data16
push
add
jp
jle
adc
mov
inc
and
and
inc
add
add
cmc
xchg
xor
and
mov
and
pop
dec
add
pop
add
xchg
icebp
add
mov
push
shlb
jl
pop
lcall
xor
push
adc
add
inc
adc
or
xchg
loope
into
ret
hlt
mov
cmp
movsl
into
add
into
imul
sahf
pop
ss
roll
inc
bound
or
jg
test
rcr
add
push
mov
lock
js
fadd
adc
push
rolb
clc
pop
inc
ret
sub
les
mov
adc
imul
cli
popf
and
and
orb
adc
push
rclb
inc
add
xchg
rorb
push
add
cmp
sbb
outsb
icebp
pop
push
or
xchg
pop
ret
sub
pop
mov
popa
mov
cld
mov
xchg
or
std
push
adcl
mov
push
xorb
and
add
and
bound
inc
xchg
outsb
adc
xchg
sub
jne
push
les
push
jl
adc
testb
ss
push
mov
jp
xor
mov
sbb
sbb
jmp
mov
ret
add
ja,pn
outsl
mov
mov
push
mov
or
xchg
xor
mov
test
stos
jl
sub
aaa
mov
mov
enter
cmp
bound
popa
inc
push
xchg
xor
jp
je
xlat
lcall
sbb
adc
mov
pop
bound
inc
das
mov
mov
pop
popa
dec
mov
add
and
cmp
jo
xchg
mov
push
cmp
and
adc
out
icebp
ja
mov
mov
push
mov
xchg
stos
sub
and
es
inc
clc
push
jmp
mov
add
add
sbb
add
mov
xor
in
xor
bswap
movsb
std
jmp
or
or
or
mov
add
inc
inc
sbb
inc
pushf
ret
add
add
fisubrl
lds
push
inc
xor
jbe
or
mov
cmp
inc
add
mov
and
fisttps
mov
sbb
dec
test
xor
repnz
jg
cmp
or
cmp
int
push
push
js
pop
pop
insb
jecxz
inc
cmp
sbb
cmp
hlt
jg
pop
lods
int3
mov
cmp
rol
popf
adc
lcall
jge
call
cmp
mov
add
fisubrl
hlt
add
mov
adc
jg
mov
add
clc
cli
repnz
roll
push
mov
xor
repnz
mov
and
test
push
dec
fiadds
aaa
pushf
cmpb
out
push
cmp
mov
mov
outsl
nop
or
cmp
mov
sahf
sbb
xor
mov
add
jg
scas
sub
dec
mov
cs
aas
ds
shlb
inc
mov
sub
cmp
sbb
or
cmp
mov
add
xchg
add
sbb
icebp
dec
leave
sbb
pop
dec
xor
jno
adc
lds
mov
mov
jo
cmp
and
pop
lock
push
cmp
aas
push
daa
mov
mov
pop
inc
movsb
pop
push
mov
inc
fs
movsl
add
les
inc
mov
sbb
or
or
movsb
lret
inc
icebp
scas
cli
int
and
mov
pusha
xor
nop
movsl
movsl
cmp
lock
fistpll
call
adc
push
jo
shl
int3
jp
ficoms
fisubrl
cmpsb
icebp
adc
cmp
das
in
repnz
push
lret
mov
fs
adc
dec
shlb
cmp
hlt
add
add
stos
loopne
push
mov
iret
xchg
mov
ljmp
add
and
loope
cld
push
push
aam
jmp
pusha
adc
ret
icebp
add
add
aas
mov
rcl
rorb
mov
add
lds
inc
sti
outsl
ffreep
stos
inc
inc
push
scas
sbb
notl
std
das
sub
jns
sbb
mov
xor
jne
jmp
jecxz
rcrb
xchg
xor
and
jns
aaa
iret
dec
fwait
or
loope
rolb
jb
and
dec
pop
cltd
subb
add
mov
and
aas
and
insb
lcall
and
push
push
cmp
fcomi
or
loopne
lods
testb
inc
shrb
pop
sub
std
insl
nop
adc
adc
mov
mov
nop
push
xchg
push
pop
dec
test
shl
mov
movsl
dec
int
pop
cmpsl
dec
loope
adc
clc
insb
repnz
jp
out
test
jle
jl
mov
inc
lcall
push
fisubrs
cmc
add
push
push
add
xor
sqrtps
lea
ja
addl
int3
loopne
pop
mov
inc
pushf
mov
inc
add
idiv
add
sbb
sbb
pusha
add
xorb
mov
filds
xchg
adc
xorb
adc
adc
loopne
sub
repnz
add
push
or
add
cmpl
pop
mov
ss
loopne
pop
addl
popa
imul
adc
push
movsb
rclb
sbb
sub
mov
repnz
add
add
add
fisttps
mov
push
adc
fsubrs
or
adc
push
or
xchg
push
cmpb
or
add
data16
add
add
cmp
xlat
add
ds
and
push
add
add
mov
add
and
mov
jns
addb
add
aam
loopne
mov
mov
add
mov
mov
push
cmp
faddp
dec
pop
mov
sbbb
test
jp
ret
sbb
cmp
inc
imul
lss
or
movb
inc
dec
or
cmp
aas
xchg
repnz
lea
cmc
or
lcall
or
push
push
dec
push
or
out
and
push
adc
pusha
add
stc
or
xorb
add
xchg
sub
mov
inc
mov
testb
into
adc
and
mov
fiadds
or
push
addb
push
push
mov
ljmp
mov
enter
lcall
push
es
pop
repnz
sbb
add
or
xor
inc
push
subl
rorb
inc
sbb
int3
idivb
addl
lock
adcb
dec
push
mov
inc
ficoms
inc
lods
mov
out
dec
addl
outsb
lock
add
or
sbb
insl
mov
jg
mov
pop
dec
jo,pt
shrb
arpl
adc
pop
jl
rorb
xor
sbb
outsb
push
push
insl
and
fisttpll
add
add
mov
push
jp
xor
mov
push
lcall
sub
jle
mov
push
push
and
or
inc
or
jbe
cmp
rorb
or
fiaddl
iret
mov
enter
inc
sbb
out
adc
mov
addl
pop
inc
adc
stos
mov
xchg
add
adc
or
add
pop
addl
dec
jnp
stos
pop
sbb
xor
mov
push
adc
add
mov
inc
shll
pop
and
subb
push
addb
push
rorb
ljmp
mov
inc
inc
sbb
xchg
add
pop
aas
pop
add
ds
adc
bound
mov
jle
mov
or
mov
ds
sbbl
xchg
mov
add
and
xor
and
mov
adc
aas
add
push
add
push
mov
pop
adc
lret
inc
rorl
mov
inc
les
pusha
push
sub
call
outsb
ret
add
pop
hlt
push
ljmp
sbb
jle
popf
mov
inc
jo
sub
loopne
push
jo
dec
and
cli
add
ds
fists
mov
sbb
push
add
outsl
or
pop
pusha
xor
hlt
fistpll
push
dec
cmp
xor
jle
add
xor
push
dec
xor
jbe
decb
fisttpl
xor
inc
push
jbe
and
test
jecxz
std
jmp
sbb
push
imul
pop
add
jbe
sbb
loopne
mull
js
pop
hlt
sbb
jp
mov
mov
idiv
push
jge
imul
xlat
add
push
xchg
xor
inc
mov
inc
cmpsb
imul
sub
lock
and
mov
rol
sub
or
add
adc
and
pop
dec
jo
mov
js
inc
add
mov
mov
pop
incb
adc
mov
loop
and
data16
inc
ljmp
xchg
mov
jg
cmp
aaa
adc
mov
popa
enter
mov
cltd
call
aad
add
shrb
iret
loope
aaa
test
mov
lods
movsb
shl
ljmp
mov
add
cwtl
push
cmc
icebp
addb
ds
ljmp
orb
int
rcrb
sub
das
xor
mov
pop
fnsave
adc
mov
in
iret
xchg
loopne
and
add
sbb
mov
sbbb
popa
mov
push
loopne
aaa
scas
mov
into
mov
shrb
leave
cmc
and
jl
shrb
mov
mov
add
cmp
dec
add
lcall
cmc
loopne
mov
add
dec
or
imul
mov
add
push
sbb
lock
xchg
add
sbb
popf
xchg
dec
add
out
gs
mov
adc
aaa
insl
cs
dec
jbe
or
dec
addr16
add
push
test
adc
pop
mov
xchg
jp
inc
xchg
cmp
scas
pop
jo
mov
add
add
mov
rclb
je
add
and
and
rolb
call
into
push
xchg
pop
mov
subb
adc
sub
mov
sbb
mov
stos
inc
sub
xchg
adc
lock
xchg
mov
cmp
mov
push
jnp
insb
pop
test
fimuls
roll
inc
xchg
or
adc
mov
push
push
or
push
inc
lret
add
cs
pop
ss
xchg
mov
push
inc
shlb
icebp
sub
mov
push
shll
pop
or
aaa
adc
and
mov
roll
pop
mov
jno
cmp
addr16
dec
loopne
xchg
insb
dec
dec
pop
inc
inc
inc
inc
adc
sub
cmp
ss
push
hlt
ret
das
mov
fcomps
nop
insb
mov
cmpsl
jge
push
push
xor
and
xor
jl
push
or
es
or
xchg
cmpb
adc
out
xor
lea
or
lret
xor
lret
test
mov
xor
sub
rorl
loopne,pt
aad
push
in
icebp
add
ret
ljmp
add
repnz
xchg
cmp
or
sbb
xor
xor
loope
icebp
xor
por
decl
pop
mov
mov
shrb
jno
jge
sub
sub
jo
outsl
decl
ljmp
add
mov
push
sub
mov
shll
ds
nop
sub
pop
cmpsb
lcall
loopne
inc
sbb
mov
lock
add
das
cmp
lret
xor
shrb
xor
adc
adc
mov
mov
xor
sub
pop
xchg
and
lahf
sbbb
xorl
fwait
decb
scas
mov
and
jg
notb
mov
outsb
ljmp
dec
jl
mov
and
xchg
ss
clc
jno
les
jg
and
pop
ds
ja
lcall
mov
inc
xchg
dec
shlb
shll
ljmp
in
xchg
or
loope
push
ds
adc
inc
xchg
push
inc
dec
call
clc
xchg
jp
push
dec
int3
popa
add
jecxz
xchg
push
push
cmp
aaa
adc
xchg
into
outsb
popa
sbb
mov
xchg
add
cwtl
cmpb
decl
push
js
inc
shlb
mov
lea
inc
sbb
fstpl
dec
mov
outsb
rclb
repnz
outsl
fcomip
push
push
in
or
xor
push
roll
jp
in
fcom
add
mov
repnz
rolb
addl
hlt
andl
inc
lods
int3
fisttpll
cmp
outsl
xor
push
jae
xacquire
inc
add
sarl
stos
clc
or
adc
mov
and
pop
pop
push
test
push
scas
cli
das
push
add
add
add
push
loope
cs
cld
daa
jmp
shlb
xor
xchg
add
pop
hlt
xchg
xor
mov
testb
icebp
dec
add
add
dec
leave
mov
push
adc
lods
lock
jg
add
mov
or
push
orb
mov
aaa
addl
push
fildll
mov
aas
inc
add
pop
adc
mov
pop
inc
mov
pop
rcr
loopne
mov
inc
add
xchg
pop
pop
shlb
xchg
nop
outsl
sbb
popa
or
sti
fistl
adc
cwtl
inc
xchg
shlb
rorb
sub
cwtl
push
pop
adc
dec
and
add
jns
call
or
dec
jo
lretw
adc
jg
outsb
cmpsb
cmp
sbb
lock
pusha
scas
cmp
jg
out
jp
sbb
cld
in
les
addr16
push
sbb
fwait
pusha
iret
and
adc
xorl
dec
bound
inc
xchg
and
adc
xchg
mov
mov
mov
rcl
and
rcrl
rorl
add
roll
test
xor
add
andl
fxsave
jo
or
fs
aaa
outsb
xchg
mov
clts
aas
push
add
fisttps
push
negb
push
repnz
inc
insl
cmpsl
xorb
lahf
and
es
mov
or
or
pop
mov
jo
into
stos
andb
pop
scas
inc
test
lcall
add
pop
repnz
adc
pushf
lock
je
xor
cmp
negb
stos
sub
call
ljmp
mov
pop
mov
mov
pop
cmpsl
pop
or
aad
pop
xor
pusha
pop
lcall
into
and
add
daa
mov
aam
pop
testb
jmp
xchg
lock
xor
test
roll
add
push
pop
sbb
pop
or
xor
add
jae
mov
cmp
push
sbb
pop
or
test
pop
test
add
stc
sub
aas
ret
jp
inc
push
insb
aas
mov
cmpb
dec
jecxz
cs
add
rclb
mov
and
icebp
dec
dec
add
js
inc
mov
xchg
sahf
inc
xor
adc
pop
out
inc
aaa
nop
std
or
lods
mov
outsl
sub
jb
pop
pop
add
cld
mov
jb
repnz
mov
xor
dec
jo
jmp
stc
popa
add
add
fwait
xor
test
xchg
into
repnz
repnz
in
int
cld
or
repnz
inc
or
repnz
add
bnd
mov
fcompl
adc
push
stos
or
fisubs
add
fdivp
test
out
mul
orb
ds
imul
inc
mov
repnz
repnz
andl
repnz
pop
ljmp
mov
out
repnz
repnz
repnz
arpl
repz
scas
sbb
in
fwait
dec
aaa
pushl
or
repnz
add
test
imul
repnz
lock
and
bnd
out
bnd
pushf
add
hlt
add
fistps
repnz
adc
pop
and
repnz
or
cmpb
cs
movsb
or
xchg
pusha
or
mov
mov
jns
cwtl
js
es
repnz
repz
repnz
repnz
xchg
repnz
jns
int
ljmp
repnz
and
int
jl
repnz
lods
repnz
stc
mov
frstor
repnz
cmp
sarw
lds
mov
int
stc
mov
mov
cmp
jae
mov
xchg
add
mov
repnz
mov
sbb
inc
push
mov
outsb
jp
fadds
inc
cmp
xchg
inc
dec
pop
mov
or
adcl
xlat
in
and
pop
repnz
ljmp
pop
xacquire
push
bnd
adc
and
mov
decl
mov
sub
pop
push
ja
sar
push
dec
push
repz
xor
inc
fwait
rcr
push
insb
repz
pushl
pop
adc
adc
mov
mov
clc
add
fs
jle
push
jp
nop
inc
add
pcmpeqd
push
ror
js
or
or
repz
outsb
std
mov
jp
movsb
add
and
mov
mov
rclb
idiv
mov
add
and
or
adc
psubsb
sbb
pop
adc
xchg
ret
cmp
mov
mov
jo
or
bnd
sbb
in
or
mov
outsb
inc
and
bnd
addb
push
repnz
and
ret
inc
jg
adc
xor
repnz
sub
inc
or
lods
out
mov
loopne
inc
add
xor
inc
adc
bnd
or
repnz
xchg
pop
or
shll
cmp
add
sub
cs
jl
jg
or
sub
sub
rorb
mov
jg
jo
dec
fimull
cmp
mov
outsl
les
inc
das
mov
jns
insl
sbb
loopne
pop
mov
pop
or
mov
jns
mov
inc
pusha
lret
test
add
mov
xchg
jns
sub
clc
sbb
leave
popl
xor
xchg
cmc
push
movsl
adc
insl
pop
jbe
add
xchg
xor
mov
mov
push
mov
incl
negl
dec
add
pop
or
roll
aad
sahf
shrl
add
add
add
fistps
and
or
mov
adc
in
cmc
mov
lods
dec
push
loop
clc
pop
addb
enter
dec
jb
inc
iret
add
fwait
clc
and
push
and
xchg
mov
sahf
push
push
mov
test
dec
push
push
add
or
mov
js
dec
xor
repnz
fistpl
xchg
mov
sbb
cli
addb
add
xchg
or
jo
push
addb
cmpsb
sbb
mov
fbstp
mov
pusha
add
shll
cld
cmpsb
adc
fiadds
or
inc
and
mov
xchg
xchg
inc
xor
dec
pop
mov
jbe
ret
stos
mov
push
std
pop
inc
call
cmpsb
popa
push
xchg
dec
mul
or
add
xor
scas
mov
push
xorb
xor
jp
push
and
pushf
adc
adc
mov
out
or
roll
mov
adc
mov
loop
add
fidivs
sbb
xor
mov
cmp
sbb
pop
pop
rcrb
sub
mov
jl
push
push
arpl
subb
inc
pusha
jmp
ljmp
push
sbb
loopne
cli
or
and
das
push
inc
fidivrs
bound
mov
and
in
out
insb
mov
aas
cmpsb
push
in
jo
ljmp
mov
rclb
cwtl
movsb
es
inc
movsb
add
subb
jno
cs
or
and
lock
popa
adc
and
pop
jo
jno
or
or
inc
out
outsb
xor
sbb
or
icebp
add
mov
add
enter
xchg
adc
ret
push
push
pop
dec
pop
sub
cmpsb
adc
repnz
sub
sub
popa
addb
ret
cli
cmp
negl
lcall
mov
mov
mov
out
add
mov
mov
or
gs
adc
push
xchg
scas
dec
loopne
push
add
stos
push
std
pop
xchg
jl
adc
mov
and
xor
xor
push
mov
adc
xchg
imul
and
dec
inc
pusha
lods
push
lret
mov
aaa
xchg
cmpsb
inc
add
movsl
cltd
mov
mov
mov
js
xchg
enter
mov
cld
mov
mov
sbb
add
mov
popf
outsl
sbb
push
mov
adc
dec
pop
cmp
add
push
xor
cltd
lea
add
inc
add
sub
pushf
repz
and
or
push
outsb
jg
cmp
xor
js
inc
add
out
mov
dec
push
pop
or
pop
outsb
lret
aas
xchg
fmuls
decb
or
add
lds
sbb
pusha
arpl
std
dec
sub
adc
leave
mov
and
notb
or
adc
ljmp
or
aas
dec
mov
mov
push
adc
adc
add
fs
leave
mov
fisubrl
or
adc
loopne
add
push
adc
cmp
int
dec
addl
aam
aam
outsb
mov
sarl
adc
mov
push
jp
add
cmp
xlat
or
or
les
fldt
dec
dec
add
mov
push
sub
sbb
dec
push
add
inc
movl
mov
orl
nop
cmpb
add
andl
sub
aad
and
outsl
js
push
add
add
movb
and
int3
push
and
sahf
push
or
adc
in
daa
mov
add
fcoms
pop
push
dec
ret
inc
mov
xchg
andl
mov
nop
pushf
mov
lods
mov
xor
leave
adc
ljmp
outsb
push
insl
insb
xor
lods
rcll
shll
faddl
inc
dec
fwait
mov
fstl
jl
loopne
push
add
int3
and
adc
rcrb
xor
scas
loop
xchg
mov
rolb
inc
sub
mov
add
mov
rolb
adc
push
add
inc
dec
add
inc
sbb
pop
push
xchg
outsb
push
pop
rcll
nop
xor
addb
dec
xor
push
loop
sbb
jo
or
add
dec
jp
and
pushf
dec
sbb
ljmp
adc
pop
push
shlb
faddl
lret
es
jbe
add
mov
insb
fistl
push
stos
pushf
push
call
inc
inc
inc
inc
pop
inc
dec
pop
mov
aas
adcb
push
or
inc
pop
out
add
mov
inc
aaa
repnz
hlt
adc
out
add
jb
add
add
xchg
lea
add
daa
sarb
or
adc
mov
or
ljmp
sbb
mov
add
aaa
fdivr
lar
and
mov
add
push
pop
dec
fmuls
pop
mov
or
adc
inc
dec
push
adc
rorb
inc
sbb
and
mov
pop
lret
ds
mov
add
inc
into
fiaddl
stos
add
jb
push
stc
es
xorb
mov
push
sbb
andl
inc
jns
in
les
imul
inc
into
icebp
adc
adc
push
roll
jo
cmp
loope
adc
and
add
in
mov
push
inc
rolb
inc
or
jo
adc
or
call
cmp
pop
add
popa
add
cmp
pop
in
popa
or
ja
cmp
out
sub
sbb
xchg
lret
dec
pop
sub
mov
adc
or
adc
jb
adc
or
pop
jle
or
add
out
pop
sub
pop
sarl
adc
add
or
adc
int3
or
mov
adc
mov
jbe
inc
cmpsl
xor
push
loop
rolb
in
pusha
lea
xor
and
adc
outsl
adc
das
inc
pop
cmpsb
sarb
and
test
jo
and
roll
add
pop
add
xor
push
mov
sbb
aam
pop
mov
push
jb
jo
shrb
push
orl
inc
ret
dec
pop
icebp
jg
js
or
out
lcall
ret
push
add
add
sbb
sub
aad
xchg
fcom
add
add
mov
xor
xor
mov
pusha
sub
dec
jo
xor
and
add
add
pop
dec
push
or
xchg
popl
xor
jg
adc
repnz
das
xor
jo
xor
nop
imul
shlb
xchg
test
clc
jb
rol
cmpsb
and
mov
sbb
lock
and
xor
rcrb
mov
inc
rolb
mov
insl
cmpsb
adc
add
lock
mov
dec
out
and
or
push
clc
dec
loopne
mov
mov
and
push
sbb
pop
adc
adc
dec
push
and
cmp
xchg
push
hlt
fs
and
rolb
shlb
or
pop
mov
adc
idivb
mov
or
mov
enter
cmpsb
xor
mov
add
inc
sbb
test
mov
cmpsb
sbb
cmp
sahf
cmp
cmpsb
cmp
or
lock
jo
addl
mov
and
sub
fidivl
dec
leave
fists
cmp
mov
or
add
sbb
nop
mov
sarb
es
insb
pop
sbb
push
and
xor
jmp
movsl
add
mov
loopne
add
int3
ja
cmpsb
mov
call
lock
add
pop
xor
dec
je
cmp
push
push
add
and
add
pushl
in
xchg
xchg
lods
add
mov
sbbb
inc
rcll
dec
mov
imull
pop
cli
movsb
cmp
adc
xor
and
in
xchg
decb
add
pop
pop
and
inc
dec
jecxz
mov
scas
inc
loopne
xchg
or
lret
clc
mov
outsl
sbb
imul
insb
mov
add
mov
sbb
sbbb
inc
add
enter
movsb
pop
push
loopne
roll
lock
and
jp
sahf
cmp
or
jno
fwait
cmp
or
or
adc
cld
inc
pop
inc
roll
cmp
shrb
mov
mov
mov
sub
or
or
mov
iret
cmp
mov
pusha
push
sahf
inc
and
insb
xchg
xchg
xor
pop
sub
test
add
addb
push
arpl
fs
dec
inc
xor
add
lock
addl
mov
test
and
sbb
aaa
xchg
cmp
je
inc
add
sbb
dec
pop
jae
inc
fcompl
test
sbb
jp
rcrb
je
add
sahf
rcrl
pop
nop
jmp
adc
dec
dec
sbb
data16
add
push
add
test
jbe
js
leave
jne
pop
add
push
sbb
or
push
xchg
cli
rol
inc
add
testb
sbb
sbb
cld
sbb
inc
les
sbb
push
jae
sub
add
add
inc
adc
orl
enter
inc
mov
push
inc
fcmovb
jo
add
or
call
push
pop
sub
jg
mov
add
scas
jle
test
inc
pop
icebp
dec
ret
push
mov
adc
dec
mov
dec
dec
rolb
add
or
mov
cs
inc
inc
or
rolb
rolb
cwtl
sbb
lods
jo
aas
ret
lock
aas
or
outsb
sbb
push
sub
sbb
cmpb
inc
pushf
mov
sub
sahf
cmp
loopne
mov
mov
adc
sarb
je
outsl
pusha
dec
ja
cmp
dec
in
or
cmp
adc
in
and
cmp
into
iret
and
int3
inc
mov
mov
loopne
inc
scas
push
pop
es
push
and
inc
jmp
sbb
loope
lods
mov
jo
ss
sbb
pop
in
inc
outsl
es
negb
dec
cmp
aas
ja
pusha
or
mov
and
cmp
or
ss
pop
addb
push
popa
add
or
clc
outsb
loope
inc
xor
xchg
xlat
popa
push
or
popa
add
fstl
dec
pusha
test
sbb
fcoml
pop
fsts
insb
and
push
dec
adc
xor
add
mov
adc
and
xor
xor
mov
lcall
dec
dec
and
mov
add
inc
test
lds
lods
or
mov
and
push
bound
ret
cmc
and
and
insl
enter
lock
sub
mov
outsb
mov
mov
ja
xchg
and
inc
or
dec
pop
cmp
pushf
shll
stc
mov
imul
ret
pusha
inc
mov
pop
and
dec
inc
lea
lret
rcr
or
lea
pop
mov
shrb
adc
push
hlt
add
cmp
cmpl
ljmp
pop
loop
mov
leave
mov
bound
es
inc
lock
leave
test
ret
pop
bound
xchg
ds
in
aad
dec
push
mov
pushaw
out
pusha
xchg
test
pushf
mov
outsl
inc
dec
leave
sub
out
mov
dec
data16
sbb
popa
mov
lock
mov
pusha
mov
and
and
test
or
andl
pop
imul
push
push
mov
ret
mov
push
rolb
mov
xchg
jb
jecxz
push
pusha
add
insb
in
pushf
or
inc
or
inc
mov
cmpb
or
push
popa
push
fimull
xchg
add
adcl
cli
inc
adc
add
sbb
inc
or
inc
mov
add
cmp
lods
jg
and
test
data16
push
adc
adc
std
pop
hlt
adcl
and
mov
add
mov
mov
add
inc
adcl
sbb
mov
imul
sar
jg
and
ret
loop
add
mov
mov
or
adc
sbb
flds
rorl
add
call
in
mov
sahf
mov
add
insl
cwtl
loopne
aas
loopne
movsl
fdivr
incl
or
orl
adc
inc
mov
inc
or
fimuls
test
fprem
push
push
nop
add
jne
aam
enter
or
xor
popa
cmp
imul
pop
cs
inc
add
push
mov
add
fs
clc
pop
pusha
cmp
loopne
or
call
adc
sub
add
push
inc
add
ret
xor
sbb
or
mov
dec
push
sub
into
or
mov
pop
xchg
gs
fsubp
fsubs
sbb
sbb
jg
add
out
test
and
bound
shll
inc
mov
pop
bound
mov
mov
clc
or
cmp
faddl
mov
hlt
adc
dec
pop
add
mov
into
lahf
adcl
nop
or
lahf
jp
push
dec
pop
dec
adc
mov
sub
push
cmp
push
outsl
add
pop
jno
mov
push
or
addb
ss
mov
push
sbbl
push
or
mov
push
dec
jecxz
ds
fdivl
insb
inc
fsubl
jle
sarb
mov
mov
and
pop
xorb
add
shlb
in
insb
pop
insl
pop
pop
xor
sbb
add
sub
pop
lock
jns
mov
fcoms
filds
or
xor
into
sarl
xor
andl
iret
and
pop
popa
shrl
or
inc
xor
mov
mov
mov
xchg
add
loopne
add
or
and
loopne
scas
pop
inc
adc
add
push
xsha256
cmpsb
adc
ret
mov
add
xlat
mov
sbb
sbb
mov
pop
jl
rcrb
outsl
rorb
jbe
pusha
fstpl
mov
sarl
mov
mov
mov
or
sub
call
or
adcl
mov
mov
leave
mov
mov
sub
sub
mov
fwait
add
les
inc
aas
push
or
pop
lods
incl
xor
xchg
add
adc
cwtl
loop
mov
xchg
or
push
inc
mov
or
sarb
or
mov
and
or
adc
add
pop
mov
insb
and
add
dec
and
dec
push
xor
push
in
inc
mov
idiv
rcll
decl
lret
mov
mov
adc
add
mov
ret
cs
sbb
lea
add
arpl
dec
lret
push
inc
add
inc
nop
test
mov
lock
dec
dec
and
dec
push
clc
cli
lock
and
test
inc
add
mov
sbb
decl
sbb
mov
ds
cmp
jge
pop
imul
mov
aaa
mov
fnsave
adc
inc
or
pop
add
and
es
pop
rolb
or
inc
outsl
push
pop
jp
sbb
xor
mov
add
sbb
shl
fiadds
mov
pop
pop
mov
push
lret
mov
loopne
shlb
clc
sbb
adc
shrb
addr16
lods
push
test
stos
push
jae
jmp
clc
jns
push
add
movsb
stos
pusha
push
xchg
push
add
xchg
or
sahf
push
xchg
lcall
fbstp
outsb
pop
fisttpl
mov
xlat
orb
mov
mov
out
not
outsl
lcall
cmp
vpshuflw
mov
lea
orb
shl
loopne
and
les
mov
mov
xor
sarb
ljmp
xor
dec
adc
mov
pop
mov
lcall
aas
dec
mov
mov
xchg
daa
cmc
mov
mov
jbe
cmpsl
movsl
sub
adc
push
add
pop
or
mov
mov
adc
xchg
add
and
xchg
jno
sub
mov
bound
jo
lret
movl
inc
nop
jno
cmp
and
outsb
xor
sbb
enter
int3
cmpsb
push
in
loopne
mov
xchg
loopne
or
lods
orb
fimull
push
cmp
mov
push
dec
test
rclb
aaa
cltd
push
lock
or
mov
aam
out
cmp
inc
and
or
adcb
clc
push
jmp
ret
lahf
outsb
xchg
push
adc
test
adc
or
inc
arpl
pop
push
cld
decl
cmp
sbb
add
adc
adc
dec
scas
adc
dec
cmp
ja
mov
mov
xor
mov
roll
mov
lahf
mov
mov
mov
movsl
mov
xor
jo
push
cmp
pop
hlt
filds
lods
mov
pop
add
aam
xor
add
jle
dec
mov
xchg
cmpb
pop
repz
rcrb
or
cs
test
call
mov
add
sbb
rorl
and
push
jb
jg
or
xchg
cmp
push
jmp
cmp
jmp
cmp
call
popa
add
inc
mov
mov
push
adc
jecxz
xor
movsb
sar
inc
adc
inc
andl
pop
adc
pusha
jbe
xchg
sarb
add
rolb
insb
mov
inc
iret
cmp
ljmp
add
clc
add
jg
or
push
cmc
push
jno
mov
pop
sub
mov
add
lods
xchg
pop
sbbb
mov
lock
push
mov
cmp
pop
xchg
into
outsl
push
dec
inc
xor
push
push
ret
test
or
inc
and
cmp
mov
jmp
shll
and
nop
mov
fisubs
adc
or
inc
daa
lods
je
mov
lds
inc
ret
add
iret
pop
add
and
push
movl
or
jp
lods
fsubs
xchg
sub
clc
jmp
pop
push
pop
sbb
ja
push
mov
nop
imul
pop
inc
xor
cs
outsl
inc
add
rcll
stos
adc
bound
inc
leave
scas
pop
add
mov
add
xchg
mov
jle,pt
or
std
jno
cmp
jle
push
stc
jl
add
je
aam
add
sub
adc
mov
mov
iret
test
fldl
adc
cli
add
sbb
lds
add
adc
pop
xor
mov
or
dec
cld
pop
repnz
inc
test
andb
pop
push
and
call
inc
pop
mov
inc
pop
add
add
aad
pop
dec
repnz
push
xor
mov
push
add
and
bound
js
stos
sub
stc
fsubrl
fsubr
mov
jp
cwtl
outsl
push
pop
adc
mov
dec
push
dec
inc
or
inc
mov
dec
sub
dec
fdivrs
addl
mov
stos
and
std
das
mov
int3
dec
adcb
pop
xorb
outsb
lahf
inc
mov
ds
imul
mov
add
roll
push
cmpsb
lods
and
mov
test
pop
test
jp
dec
adc
cli
or
xor
push
inc
mov
sbb
jns
jb
inc
inc
dec
fstpt
and
jo
push
cvtps2pd
dec
adc
sub
adc
push
ficomps
xchg
test
push
sbb
sbb
and
inc
sub
inc
test
int
pop
push
fcompl
fsubrl
mov
push
cwtl
push
sahf
popf
or
jg
add
and
sub
cs
cmpb
and
sub
add
mov
pop
cld
dec
jb
cmp
stos
aas
andb
mov
add
mov
decb
pop
inc
int
inc
inc
inc
pushf
push
aaa
pop
and
push
add
or
push
jmp
in
dec
lock
jae
inc
ds
fcompl
loop
sbb
cltd
rorl
sbbb
mov
xor
mov
jae
inc
movb
cwtl
sbb
add
mov
rolb
movb
mov
jg
bound
or
inc
movb
ret
out
push
and
into
inc
add
ja
and
pop
loop
add
dec
mov
push
xor
dec
outsl
adc
or
insb
inc
adc
mov
ljmp
dec
inc
add
dec
jmp
jmp
iret
stos
or
loop
sbb
mov
inc
clc
sbb
inc
add
bound
lock
roll
orb
mov
adc
nop
hlt
pop
lods
xchg
add
outsb
pop
sbb
pop
xchg
adcl
and
push
fstpt
push
pop
inc
movl
mov
les
xchg
xor
inc
mov
orb
adc
dec
fwait
mov
push
and
mov
sbb
add
fwait
mov
fwait
call
mov
pop
or
mov
add
mov
inc
jno
add
mov
inc
cmp
pusha
cmpl
push
jb
pushf
lock
addl
pop
add
mov
leave
ljmp
mov
sub
and
adc
sbb
icebp
xor
sbb
inc
add
mov
or
sbb
pop
addb
scas
adc
adc
icebp
and
lcall
stos
or
ss
mov
pop
dec
jmp
fadds
jne
jbe
pop
xchg
push
sub
fcoms
inc
loopne
cmp
call
or
or
pop
push
xchg
dec
or
leave
outsb
or
add
gs
xor
add
les
inc
push
es
add
adc
data16
enter
pop
cld
mov
bound
into
pop
sbb
loopne
xchg
mov
repnz
sub
pop
ja
jnp
mov
sbb
ficoml
dec
loopne
ljmp
ljmp
orl
loope
mov
and
sbbl
push
dec
addr16
sub
jg
lock
mov
inc
andb
aas
inc
in
pop
xchg
enter
sbb
and
cmp
mov
cmp
add
push
call
mov
pop
mov
popa
push
stos
adcb
mov
sahf
es
fwait
mov
pusha
addl
adc
rolb
adc
inc
ret
fidivl
jge
xchg
andb
dec
lock
fs
rorb
pop
cltd
sahf
mov
add
scas
and
lock
mov
adc
frstor
sbb
in
mov
bndldx
shlb
dec
sbb
jne
lret
xchg
push
xor
loopne
push
pop
mov
or
pop
inc
push
cltd
mov
push
add
and
pop
push
push
fwait
in
mov
pop
mov
cmp
jmp
ja
sub
add
xchg
inc
adc
mov
and
push
xor
adc
js
outsb
xchg
mov
iret
push
mov
add
cmp
adc
push
jne
push
movsl
pop
imul
je
adc
push
adc
outsb
ficoms
fsubrp
pusha
rcrb
pusha
pop
test
jne
jg
jns
or
pop
sub
pusha
adc
in
je
mov
insl
ret
scas
pop
sar
ss
push
pop
xor
test
push
push
mov
and
inc
jns
add
push
js
or
jb
addl
jae
mov
adc
push
adc
fcmovnu
push
push
stos
outsb
pop
push
icebp
cli
adc
outsl
aaa
and
aad
push
mov
insl
out
mov
push
bound
stos
xor
xchg
and
cmpsb
cs
scas
xor
lock
inc
notb
insl
cs
dec
imul
rolb
out
adc
push
mov
push
ss
push
inc
ds
imul
sub
sub
inc
add
icebp
lods
insl
pop
cmc
push
std
or
es
xor
sbb
loop
jp
data16
out
bound
outsb
push
imul
pop
xor
dec
call
jo
jae,pn
dec
stos
rcr
lahf
cmpsb
inc
lock
sahf
mov
loopne
cmc
pop
loopne
mov
add
dec
pop
test
out
mov
xchg
jo
ja
xchg
ljmp
inc
jae
test
mov
xor
mov
icebp
add
mov
out
add
xorl
add
add
fidivl
ljmp
pushf
dec
jo
mov
daa
clc
mov
push
inc
lods
jbe
stos
mov
add
push
icebp
add
sub
jg
push
and
push
jg
lods
jg
lcall
xchg
push
and
cs
scas
pop
dec
add
out
add
sbb
adc
pop
negb
adc
sbb
xchg
and
dec
loope
jg
push
popa
lods
jo
insl
cmc
add
xor
cmp
dec
repz
push
sbb
xor
add
push
insb
add
inc
jnp
into
add
out
fldt
outsb
nop
xor
fcoml
out
mov
outsb
bound
repz
xor
adc
adc
loope
ret
fidivl
mov
stos
popl
adc
pushf
fiaddl
fs
jo
sbb
push
sub
in
jo
push
aam
jo
fsubs
sbb
mov
jne
inc
gs
iret
xor
inc
lock
and
addr16
rcrb
je
add
js
jno
mov
sbb
cli
dec
addr16
add
xor
mov
push
mov
xchg
mov
pushf
push
or
xchg
in
dec
add
jnp
icebp
mov
jae
jbe
xor
push
stc
outsb
pop
cmp
js
addl
push
jecxz
adc
adc
or
push
mov
jg
mov
sbb
sbb
jae
push
ficoml
fdivrp
sbb
out
lods
mov
test
mov
popf
sarl
out
ret
jo
iret
lret
btr
mov
add
out
aad
test
push
cmpl
mov
push
cmpl
andl
sbbl
mov
lock
js
lcall
mov
popa
lods
lock
addr16
jo
mov
popa
pop
jno
mov
fwait
imul
cmp
es
mov
addb
xor
imul
push
or
lods
pop
jcxz
or
std
stos
mov
repnz
lcall
jns
dec
shr
xor
and
push
jo
and
lret
sbb
sahf
fs
std
lcall
sbbw
xchg
inc
add
lods
mov
or
add
jb
inc
or
cmpb
inc
add
stos
fdivl
add
mov
lods
sub
enter
cmp
outsb
stos
cmp
push
mov
lods
adc
sbb
sub
sub
inc
shlb
mov
xlat
mov
stos
stos
mov
mov
jl
sbb
aaa
outsl
fisttps
xchg
add
stos
lahf
sbb
add
stos
push
pop
imul
sti
add
jge
fisubl
mov
stos
rorl
xor
adc
add
stos
ret
sbb
lret
out
repz
xor
mov
das
mov
lock
add
stos
in
loopne
in
xor
repz
aam
repz
repz
ror
xor
repz
xor
and
sub
dec
repz
adc
sbb
repz
repz
or
je
repz
jo
js
pusha
insb
xor
repz
push
push
pop
pop
xor
repz
inc
dec
dec
mov
mov
imul
sarl
nop
pushf
cwtl
test
cmp
roll
add
push
js
add
sahf
push
loopne
lcall
rcr
fdivrs
cmpsb
jns
ror
xor
jns
cmpsb
xor
and
lcall
adc
jns
cmpsb
jns
dec
or
je
jns
cmpsb
jo
js
pusha
lcall
push
pop
pop
jg
cmpsb
jns
inc
dec
dec
mov
jb
cmpsb
stc
shll
mov
lods
sahf
cmpsb
imul
cmpsb
imul
mov
shlb
mov
add
inc
xor
stos
mov
shl
mov
dec
push
xor
mov
or
clc
push
and
stos
sub
outsl
lcall
sbb
outsb
les
shl
sarl
enter
jge
lcall
data16
imul
mov
scas
dec
sbb
loopne
je
jo
jl
xor
repz
add
push
dec
push
pop
pop
add
inc
or
add
add
cmpsl
imul
dec
roll
xchg
sub
xchg
inc
stos
ret
cmp
push
leave
je
clc
sbb
call
int
xor
sbb
in
call
shll
fsubs
mov
cmp
add
fildl
in
loopne
dec
dec
mov
or
jo
add
jl
or
or
insb
sbb
orb
sub
nop
movsl
mov
xor
rcrl
cwtl
test
cmp
mov
shl
push
mov
andl
sbb
mov
inc
jno
mov
sbb
lcall
sahf
add
dec
aas
imull
adcb
cs
and
outsb
sub
dec
ss
mov
add
mov
cmp
jnp
cmpsl
push
mov
sbb
imul
sahf
cwtl
xchg
das
mov
pop
imul
div
lahf
sti
xchg
out
aam
adc
add
adc
lds
or
punpckhwd
loopne
enter
dec
popa
adc
fbstp
jns
aas
dec
add
sub
sbb
dec
or
push
ljmp
and
dec
mov
gs
adc
mov
add
push
mov
scas
hlt
dec
outsl
lea
outsb
add
dec
adc
and
mov
popa
dec
call
pop
xchg
scas
inc
mov
inc
push
jg
add
fcmovb
add
leave
stos
jb
jge
mov
bound
dec
push
imul
mov
cs
mov
pop
dec
aas
loopne
add
inc
or
add
add
es
push
or
mov
adc
nop
pop
push
mov
and
or
mov
cmpsl
and
test
data16
fbld
jbe
mov
gs
add
adc
mov
add
push
push
dec
adc
mov
decl
add
aas
icebp
add
push
push
add
adc
decl
push
adc
inc
add
or
adc
mov
jg
sbb
aaa
push
in
pusha
and
cmp
roll
dec
dec
adc
ja
xor
jg
push
push
or
inc
inc
mov
push
inc
push
or
clc
nop
sahf
or
mov
pusha
pop
dec
mov
punpckhwd
lock
addr16
adc
lods
rcrb
dec
or
add
pop
je
xor
adc
roll
dec
pop
adcb
add
adc
push
out
idiv
add
adc
mov
adc
and
mov
sbb
add
scas
fdivs
bound
shlb
adcl
ffree
and
mov
push
dec
enter
loop
pop
andl
ljmp
pop
push
aaa
pop
sbb
mov
add
add
mov
or
les
ret
adc
mov
adc
lds
mov
push
adc
nop
and
pop
sub
xlat
and
movsb
sbb
cmp
sub
lock
jmp
dec
mov
icebp
adc
loope
fs
out
mov
adc
js
mov
ret
mov
lcall
jl
mov
lock
add
add
mov
adc
dec
xor
push
push
dec
cli
pop
dec
mov
ret
mov
aaa
mov
aaa
rcl
outsb
push
add
add
mov
clc
add
dec
add
stos
aas
push
xor
push
push
sub
and
clc
call
fcoms
mov
inc
and
es
sbb
aas
pop
repz
add
push
add
popa
fbld
inc
adc
adc
xchg
dec
push
ret
fildll
aam
pop
dec
jo
mov
es
push
dec
aam
pusha
mov
dec
aas
push
aam
or
sub
add
adc
clc
scas
js
mov
dec
rcll
or
js
or
add
scas
mov
inc
dec
inc
dec
dec
in
subb
xor
mov
rolb
xor
repnz
mov
icebp
out
in
xchg
ss
dec
jo
ljmp
loopne
ret
rcrb
pop
outsb
repz
aas
xor
xor
inc
out
pop
mov
pusha
dec
sbb
std
fs
push
ja
je
add
add
insb
stos
and
jg
mov
dec
popa
mov
sbb
push
jbe
int
adc
adc
and
or
jle
idiv
mov
dec
jo
mov
xchg
sub
and
or
mov
sahf
mov
lds
xchg
and
testb
fistl
and
jmp
movsb
or
clc
and
or
pop
mov
xor
and
add
subb
and
dec
dec
pop
add
ds
mov
push
xor
icebp
sbb
cmp
or
outsl
mov
stos
mov
add
arpl
inc
adc
mov
add
lock
adc
repnz
mov
mov
push
jb
add
mov
clc
inc
inc
ds
fldl
mov
cmpsb
incl
or
jo
cmp
push
push
std
iret
add
add
mov
or
sbb
dec
fisubl
ds
inc
or
aas
sbb
dec
push
cld
add
add
les
imul
push
dec
mov
sub
js
add
dec
xor
cmpsb
mov
test
lods
xor
cs
les
xor
sbb
mov
pop
mov
in
xchg
insb
jo
std
pushf
dec
lds
imul
mov
adc
ret
lcall
jmp
push
fwait
icebp
mov
pop
mov
das
sub
inc
add
adcl
fwait
xor
dec
adc
adcb
cmp
push
add
add
adc
dec
fwait
mov
mov
or
fwait
stos
ret
sar
fbld
sbb
cs
mov
in
push
and
in
inc
jbe
adc
ds
push
sbb
fs
paddd
outsl
outsl
jmp
icebp
push
mov
dec
inc
sbb
fidivrl
je
lods
jo
out
jl,pt
in
add
js
aad
fldt
sub
ds
xor
ds
jbe
ds
push
dec
cld
cmpsb
stc
pop
push
add
push
jbe
sbbb
and
nop
call
clc
fisttps
add
les
test
dec
imul
xchg
or
mov
xchg
int3
add
jl
sub
cmc
push
push
push
jge
xor
xorb
mov
int3
clc
enter
jg
or
or
mov
sbb
inc
jbe
sub
push
ja
xorl
ret
mov
stos
inc
adc
inc
sbb
mov
or
inc
aas
jge
scas
fisubl
ret
dec
push
addb
addl
or
sbb
adc
scas
push
push
push
es
out
fidivrl
push
cmpsb
shrb
and
inc
andl
xor
sbb
pop
or
xchg
add
push
test
cmp
testb
jbe
pop
jno
mov
outsb
lret
jecxz
jle
or
aaa
push
out
xor
enter
rcrl
and
andb
ss
jns
add
fisttps
mov
pusha
out
cmp
push
add
pop
adc
daa
mov
mov
push
sbb
inc
sbb
into
jmp
aam
mov
mov
push
insb
fiadds
add
daa
ret
inc
add
mov
ljmp
mov
insl
mov
push
imul
fwait
inc
and
outsb
into
js
or
fisttps
inc
sti
lcall
add
or
mov
sarb
ds
or
and
push
inc
cld
push
xor
addl
sub
pop
dec
mov
and
sbb
cli
lcall
add
mov
rcrb
cwtl
mov
or
or
in
ljmp
sbb
or
loopne
ret
nop
xchg
sub
or
int
jb
xor
push
stos
bound
scas
test
add
into
and
hlt
push
jle
and
adc
xchg
inc
decb
add
jne
jno
out
dec
add
ret
imul
stos
sub
ficompl
dec
sarl
pusha
jo
pop
loopne
push
lcall
mov
push
scas
or
pusha
adc
and
lock
cmp
fsincos
or
pop
mov
inc
nop
test
pop
push
sub
push
xchg
xchg
test
pop
mov
add
call
mov
pop
clc
cs
mov
adc
mov
mov
inc
std
fistpl
push
inc
loopne
popa
add
jo
xor
mov
push
adc
mov
pop
movsl
inc
xor
jo
fs
add
mov
push
jge
ret
icebp
add
cs
aad
js
adc
sub
std
push
cmpsl
imul
or
mov
lcall
out
mov
push
jp
fcmovu
pop
sahf
mov
xor
dec
je
cmp
sbb
mov
in
adc
push
add
mov
pop
mov
mov
jo
test
sbb
lock
xchg
test
je
pop
or
insl
inc
sub
scas
dec
push
add
testl
stos
add
mov
lods
add
inc
int3
mov
movsb
add
mov
call
iret
ljmp
sbb
xor
push
cld
mov
pop
repz
sbb
adc
je
popf
cmc
jbe
mov
fbstp
repnz
arpl
jbe
pop
mov
or
ret
push
push
xchg
push
addr16
pop
dec
shrl
into
fmull
adc
repz
fistps
pusha
sbb
mov
xchg
fldt
cwtl
xor
add
stos
jo
icebp
and
adc
ja
movq
icebp
add
lret
lret
add
cmp
xor
pop
mov
mov
inc
push
xorb
mov
ss
xchg
rcl
into
fcmovnu
jle
rorl
bound
cs
mov
in
aad
ljmp
sbb
data16
push
pushf
lock
in
icebp
inc
xchg
fildl
inc
stos
xchg
sahf
idiv
push
aaa
lock
sub
iret
icebp
push
push
filds
add
fdivr
adc
or
subl
push
stos
adc
addb
jo
lret
mov
push
cli
lcall
mov
sub
stos
test
inc
out
addb
lock
jns
inc
or
ss
sbb
stos
je
loopne
sbb
mov
jl
stos
cmp
subl
or
and
subl
in
ret
loop
mov
pusha
test
xchg
jo
or
js
ret
push
test
push
inc
lock
addb
pop
subl
test
rorb
or
ds
andl
shlb
fistl
xchg
lret
lret
dec
mov
pusha
popa
jnp
sub
pop
lret
pop
mov
or
mov
gs
push
xchg
or
jle
push
xchg
jecxz
movsb
insb
shl
pop
mov
pop
mov
loope
sub
test
mov
loope
add
add
jl
or
cmp
and
sub
popa
andl
das
or
aas
cmp
push
movsb
cs
push
cmpsb
or
dec
clc
jge
ss
inc
das
cmp
cmp
cmp
mov
mov
and
addb
sub
add
stos
cmp
mov
inc
stos
dec
rdmsr
cmp
and
mov
adc
sbb
cmp
mov
dec
jo
push
sub
pop
cli
or
and
push
mov
dec
and
das
push
and
push
and
jo
jb
ds
test
data16
das
daa
cmp
add
xor
pop
sub
ljmp
add
mov
or
es
mov
add
rol
dec
mov
jno
cmp
negb
mov
shlb
add
mov
arpl
push
cli
lds
push
add
add
mov
sbb
and
xor
cs
sahf
negb
and
add
xchg
or
insb
incl
and
cmp
outsb
adc
pushf
add
or
and
decl
add
push
mov
mov
inc
mov
or
fs
xchg
pop
xor
xor
or
fsubs
add
and
and
jo
cmc
ljmp
or
adc
add
rcrb
push
outsl
xor
pop
test
add
cmp
add
cmp
movsb
cmp
das
cmp
in
pop
icebp
outsl
outsl
xor
dec
sbb
loopne
ds
push
iret
je
loop
shld
push
sbb
cmpsb
loopne
sub
or
mov
add
mov
rcrb
sub
xor
sti
jo
dec
or
and
push
add
fbstp
out
orl
das
sbb
inc
and
xor
aas
push
outsl
fldt
lock
es
or
das
xor
in
cmpsb
xor
and
add
push
pusha
outsl
dec
sub
push
or
scas
and
sbb
dec
adc
in
add
xor
fdivrp
cmpb
out
add
jecxz
wrmsr
add
and
add
cmp
dec
sbb
jb
aas
out
mov
and
fmull
jns
jno
outsl
movsb
test
xchg
add
incb
add
and
jbe
sbb
cmp
cmp
and
and
and
add
cli
cmp
xorb
orl
cs
addb
lret
and
xchg
addl
ds
or
sbb
ja
or
sub
mov
jg
inc
pop
sub
xor
int
and
mov
push
loopne
and
rcrb
not
pop
testb
das
or
pop
je
pop
add
jg
or
test
cmpb
test
dec
push
cmp
xchg
push
sub
cmp
inc
call
pop
mov
inc
jge
daa
xchg
andb
jg
outsl
mov
movb
imulb
inc
and
or
adcb
inc
outsb
pop
pop
cli
sbb
sbb
or
cli
cmp
xor
push
and
shrb
outsl
sahf
and
adc
mov
cmpsb
mov
mov
lret
rcll
add
push
insl
cmp
pop
sbb
sub
sbb
test
cwtl
or
out
xor
sahf
mov
add
cli
sub
inc
and
mov
push
test
pop
xchg
call
cmp
or
das
sbb
movsb
add
cmp
cli
out
cmp
popl
pop
inc
ds
lods
inc
or
or
pop
aam
mov
add
or
scas
imul
mov
mov
dec
sbb
jo
pop
sarb
rcll
and
lcall
shr
mov
jo
add
pop
aas
es
insb
jg
aas
sbb
test
jbe
inc
push
xlat
add
and
fwait
jbe
jbe
and
out
orb
xor
dec
mov
mov
push
adc
jle
fadds
cwtl
das
cltd
loope
mov
cs
ja
int3
and
mov
ja
mov
loope
cmp
lds
or
and
cli
push
fwait
inc
jo
cs
int3
cmpsb
andb
cli
mov
out
jp
ret
outsb
and
incl
loopne
and
dec
in
mov
loope
insl
js
fisubl
xor
and
ja
sbb
bound
cmp
sub
sub
and
and
sbb
mov
sub
xchg
mov
push
sub
dec
inc
dec
pushl
cmp
or
or
pop
sbb
dec
inc
call
and
pop
xchg
jecxz
or
or
ret
aaa
addl
add
bound
mov
dec
gs
add
pop
adc
lock
neg
shrb
xchg
loopne
shlb
and
mov
xorb
movsl
push
and
mov
pop
loope
xchg
dec
inc
mov
sbb
insb
or
sbb
push
test
push
push
mov
add
sub
dec
pop
add
cwtl
shrb
mov
push
sub
add
stos
inc
or
adc
aaa
or
add
and
orb
pop
cmp
xchg
pop
lcall
add
mov
mov
add
sub
fiadds
mov
repnz
jl
sbb
fimull
jb
adc
xor
xchg
loop
ret
das
popa
orb
mov
bound
lods
loopne
add
mov
cmp
sahf
dec
or
sub
xorb
jae
adc
hlt
xchg
jp
or
push
lret
arpl
je
push
ss
nop
cwtl
sahf
daa
adc
dec
movsb
jg
std
sub
inc
or
push
arpl
xor
or
adc
aas
mov
mov
add
das
push
mov
jp
pusha
mulb
fs
sub
xor
jns
jmp
or
inc
lcall
out
pop
sar
or
call
out
pop
mov
jg
sub
cmp
add
repz
sar
sub
insb
add
xchg
add
or
daa
rorl
jmp
or
adc
cwtl
mov
pusha
stos
shlb
dec
cmp
cltd
or
cmp
add
cmp
mov
popa
cli
xor
mov
stos
xor
repnz
mov
sbb
orl
add
clc
das
lock
lock
mov
rclb
nop
bound
outsl
stos
mov
dec
mov
push
les
in
shlb
or
and
pop
xchg
add
xor
push
decl
push
aaa
pusha
andb
add
add
pop
cmp
cs
hlt
inc
loop
or
or
sub
xorl
cli
cmp
inc
pushl
xor
mov
roll
sbb
push
push
mov
clc
add
xor
sub
cs
lcall
add
jne
push
add
mov
and
paddusw
jg
pushl
or
pusha
dec
and
push
mov
add
add
mov
mov
jo
xor
mov
jle
mov
add
xor
das
pop
add
fists
adc
roll
mov
loope,pn
inc
adc
jg
or
dec
push
es
adc
add
dec
sbb
fisubrl
and
and
mov
cmp
rcrl
mov
roll
cmpsb
outsl
dec
je
out
xor
pop
xor
pop
fbld
jecxz
cmpsb
dec
ret
fadd
adc
pop
mov
or
mov
sub
std
jmp
pop
mov
mov
or
sbb
fisttpl
mov
add
sub
dec
and
ret
nop
dec
mov
xor
pusha
cltd
repnz
and
add
test
sbb
sbb
out
icebp
add
mov
popf
xchg
dec
shrb
sbb
add
cli
adc
ss
sub
xchg
lret
sub
rcrl
cmp
add
xor
adc
loopne
sbb
cmp
jmp
ja
push
dec
pop
mov
sub
add
or
jecxz
into
mov
or
push
repnz
insb
pusha
xchg
int
adc
push
inc
or
mov
inc
push
or
and
add
cli
add
cmp
int
add
insb
loopne
ja
clc
mov
jg
fstl
jo
les
pop
insl
clc
push
adc
add
dec
nop
dec
xlat
sub
dec
shll
iret
adc
inc
cmp
pop
jo
push
call
jae
pop
ret
int3
rcrb
mov
and
ljmp
adc
loope
mov
and
add
repnz
ljmp
lock
lret
add
adc
and
fwait
adcb
xchg
cmp
sub
rorl
aam
movsb
xor
push
jmp
decl
test
cmp
popa
add
xchg
or
sub
sarl
mov
or
xor
fwait
cmp
cld
sarl
push
and
filds
aas
add
adc
dec
pop
cmp
ljmp
mov
xor
lock
cmp
cmp
jo
add
xor
xorl
ret
inc
mov
xor
inc
add
fcomp
mov
inc
mov
mov
dec
mov
add
enter
aaa
mov
jmp
gs
cs
or
add
cwtl
jb
push
add
xor
pusha
icebp
jg
mov
add
xor
mov
sub
adcl
lret
daa
jo
adc
jo
sub
mov
add
sub
movsb
int3
sbb
sub
inc
or
cld
xchg
mov
and
and
daa
addb
mov
and
idiv
bound
and
nop
or
and
aaa
adc
mov
add
repnz
add
fsubs
jecxz,pt
pushf
xor
or
and
mov
add
cmp
add
inc
push
jl
mov
and
sub
xor
cmp
sub
or
sub
pushf
push
xchg
mov
and
cmp
push
and
andb
js
sub
and
push
mov
add
cmp
sbb
and
ret
data16
push
and
add
jg
add
sub
enter
das
mov
incl
add
add
push
push
fcomip
or
cmp
add
adc
cmp
shl
ds
add
add
and
sbb
decl
pop
cmp
add
pop
and
add
or
sub
mov
clc
imul
cmp
add
cmp
sub
and
jb
sbb
adc
pop
cwtl
ss
aam
xor
jp
mov
xchg
cmp
sub
dec
movb
loopne
orb
or
or
js
out
lcall
and
cmp
adc
scas
jbe
and
clc
or
xchg
cmp
pop
mov
push
subb
loopne
add
dec
adc
test
fdivrp
push
push
adc
mov
mov
xor
loope
loop
and
orb
adc
loope
sbb
ljmp
push
cmp
pop
mov
push
and
and
fisttpl
je
xor
add
push
add
adc
test
inc
sub
stos
inc
xchg
pop
fwait
test
or
dec
add
inc
xchg
add
adc
sbb
cwtl
test
push
loopne
pop
ds
jbe
loopne
cmp
rolb
and
stos
adc
push
outsb
jne
add
movb
xor
int3
pop
rcll
lcall
nop
sbb
mov
xor
es
ret
insb
cmp
repnz
jge
jg
add
inc
xchg
lds
and
dec
sub
ret
das
and
subl
or
inc
sub
pushl
lds
jp
adc
sub
inc
add
sbb
adc
add
add
add
jl
dec
and
push
test
lock
jecxz
or
das
cmp
jg
inc
ljmp
into
adc
mov
les
enter
adc
fbstp
push
cmp
pop
cmp
inc
or
and
rolb
add
pop
and
cli
pop
or
es
shlb
ret
pop
adc
cs
movsb
sub
pop
and
ret
or
xchg
es
mov
cmp
push
jne
fimuls
add
push
and
shll
dec
insl
and
loop
add
cmp
cmp
and
add
or
popa
cld
and
sub
xor
jbe
imul
mov
das
jl
sub
fbstp
mov
arpl
add
add
aaa
mov
xor
sarb
pop
or
add
or
shll
dec
loopne
or
add
sub
movsb
add
data16
cmovo
sub
xor
outsl
mov
add
mov
jl
add
scas
push
push
stos
dec
aaa
xchg
add
sub
sub
sar
pop
mov
adc
push
test
push
lds
push
dec
dec
subl
inc
movsb
les
adc
rcll
and
pop
out
add
sbb
add
push
insl
mov
sbb
fs
cwtl
jl
inc
faddl
std
cmpsb
fisttps
shll
or
cmp
mov
sub
or
loope,pt
inc
lds
jl
pmullw
data16
sub
sub
push
bound
pop
adc
std
scas
mov
pop
cmp
sub
sbb
adc
push
cs
xor
repnz
or
cmp
xchg
mov
mov
call
cmpsb
or
ds
nop
inc
loope
mov
cmpsb
add
cmpsl
add
loopne
mov
cmp
cmp
icebp
andb
les
lds
out
es
out
pusha
add
jmp
and
or
aam
sub
sbb
pop
test
bound
mov
test
sarb
pop
xchg
adc
and
and
nop
loopne
mov
mov
je
adc
test
sbb
adc
call
mov
sub
in
movsb
ljmp
int3
adc
loop
jge
bound
daa
and
out
dec
adc
mov
dec
adc
loopne
add
mov
test
ljmp
and
cmp
and
hlt
sub
cmp
push
jp
mov
nop
daa
cmp
sub
xor
dec
add
cmpsb
int3
js
je
aas
sub
adc
sbb
shlb
psubd
jle
add
xor
addb
dec
adc
add
shlb
insb
cs
jg
call
jo
and
out
dec
nop
adc
out
add
out
clc
in
adc
mov
jns
adc
xchg
and
jmp
sti
push
cmc
inc
push
movsl
add
fsts
add
ss
rcrl
pusha
inc
or
test
lret
push
or
inc
sub
xor
dec
fnsave
dec
mov
mov
adc
sbb
cli
adc
mov
inc
pop
or
div
push
mov
out
push
and
adcl
mov
jmp
add
add
icebp
outsl
ss
out
ljmp
ljmp
add
add
cmp
fcompl
arpl
in
or
jg
add
lret
pop
repz
mov
push
push
fwait
add
or
rolb
or
add
mov
pop
insl
jae
mov
xchg
les
mov
or
jle
test
add
mov
pop
pop
loopne
add
pop
test
lret
icebp
add
in
sahf
mov
test
mov
xchg
ljmp
pop
inc
aas
lret
int3
aas
outsl
lcall
addl
adc
scas
in
flds
jae
jg
clc
cmpsl
sbb
push
pop
ja
outsl
fildll
jno
js
mov
in
mov
out
scas
mov
mov
outsl
pop
hlt
pushl
sub
insl
add
call
and
mov
dec
sbb
or
sbb
rcll
add
jne
ja
popf
jmp
dec
cwtl
add
xchg
add
leave
mov
data16
push
test
pop
mov
std
fwait
mov
jle
push
or
xor
in
cld
and
in
out
decl
add
mov
or
xor
lods
mov
pop
mov
xchg
scas
jne
push
adc
lods
subl
sbb
push
jmp
incl
in
xchg
sub
movntq
fisubrs
mov
lcall
shll
sub
adc
ss
icebp
adc
dec
hlt
fmul
add
int
mov
jne
jne
mov
loop
aaa
out
scas
imulb
ss
hlt
lcall
xor
imul
lret
ja
outsl
or
jnp
clc
das
xchg
cmp
fwait
jb
enter
cmp
jno
xchg
mov
sar
ret
push
sti
mov
pop
into
jo
dec
cld
sarl
jge
fs
jns
push
cwtl
imul
adc
int
mov
out
enter
js
incl
test
clc
pop
in
sbb
push
add
std
pop
outsw
add
add
outsl
add
adc
fcmovnu
sub
mov
aam
ret
ljmp
cli
cmc
sbb
push
sub
dec
fidivs
pop
xchg
aad
test
add
lcall
xchg
inc
xor
sub
jno
mov
push
arpl
and
add
sti
mov
add
ss
add
push
mov
jae
xchg
sti
outsl
lcall
sub
sti
add
jbe
insl
sti
or
imul
mov
fs
add
lods
imul
stos
shll
les
mov
lcall
sub
mov
sbb
lods
inc
aam
adc
push
lods
insb
mov
fwait
data16
sbb
pop
lcall
orb
testl
lahf
inc
repnz
add
xor
test
or
cmp
jg
ljmp
or
jle
or
push
inc
inc
push
or
dec
testb
push
dec
cli
fistl
jo
or
add
pop
bndstx
aam
push
sub
into
jne
stos
sub
ss
push
add
add
push
mov
addb
dec
mov
test
mov
and
add
lods
lcall
cmpsb
sbb
add
cli
inc
test
dec
adc
repz
add
into
sbb
popa
fwait
cmpsb
xor
cmp
push
lret
mov
or
push
pop
sbb
mov
inc
outsb
jge
jge
jb
jb
jb
jb
mov
jbe
push
jb
jb
push
jb
jb
jb
ss
jb
jb
mov
jb
jb
jb
divb
jb
add
ja
divb
add
je
je
je
adc
je
je
je
outsl
out
je,pn
je
je
into
je
je
je
out
je
je
outsl
out
je
mov
sahf
je
scas
je
je
je
cld
in
inc
decl
inc
jne
jne
add
mov
jne
jne
jne
or
jne
jne
jne
pop
jne
push
out
mov
jne
jne
jne
mov
jne
jne
xor
outsl
shlb
add
cs
lock
jg
inc
dec
jp
jp
jp
jp
jp
jp
filds
push
jp
jp
cs
int
cld
jp
jp
jp
into
jp
jp
jp
out
jp
jp
jp
int
mov
jp
jp
scas
jp
jp
jp
dec
jnp
jnp
aaa
jg
mov
mov
jnp
jnp
jnp
push
jnp
jnp
jnp
jnp,pn
aaa
jg
es
jnp
into
jnp
jnp
jnp
out
jnp
jnp
jnp
repz
jg
mov
jnp
jnp
scas
jnp
jnp
jnp
dec
js
js
js
jg
aaa
js
js
js
js
push
js
js
js
js,pn
aaa
jg
es
js
into
js
js
js
out
js
js
js
repz
jg
mov
js
js
scas
js
js
js
dec
jns
jns
jns
jg
aaa
jns
jns
jns
jns
push
jns
jns
jns
cmpsb
xor
fwait
ret
add
jns
out
mov
jns
jns
jns
scas
jns
jns
jns
dec
jle
fsubrl
jle
jle
add
insl
mov
pop
adc
jle
jle
jle
fdivr
int
into
jle
jle
jle
out
jle
jle
jle
mov
inc
addr16
popa
add
insb
or
arpl
gs
jg
aaa
jg
outsb
jg
jg
jg
push
jg
jg
jg
jg,pn
jg
jg
push
xor
fldt
dec
outsl
adc
jg
jg
stc
fwait
mov
mov
inc
jl
jl
outsb
jl
jl
jl
aaa
fwait
cmpb
ljmp
jl
xor
adcb
sbb
repnz
mov
cmp
loopne
mov
loopne
xor
loopne
shrl
adc
add
dec
lcall
int3
jno
jno
jno
mov
mov
ljmp
cli
xorb
jo
add
ja
ja
inc
je
je
je
mov
push
call
jne
loopne
rcr
fisubs
sub
movsb
or
dec
jp
jp
or
and
adc
jp
jp
jp
aaa
fwait
ret
add
hlt
cmp
bound
ss
xor
aam
cs
jle
ret
ffree
mov
jg
pop
test
fwait
and
pushl
and
sarl
ljmp
jg
repz
jg
and
fwait
dec
loope
mov
jg
jl
cmpl
mov
cmpl
xchg
jl
jl
fsts
aaa
movsb
jl
jl
jl
jge
in
loope
push
cwtl
mov
mov
pushl
jb
adc
jae
jae
jae
add
cwtl
mov
jae
int3
jae
jae
jae
int
jo
xchg
add
add
jno
jno
jno
adc
jno
jno
jno
jbe
outsb
jbe
jbe
jbe
inc
addr16
mov
add
fwait
mov
out
mov
cmp
ja
and
ja
ja
loopne
cmp
ret
mov
dec
je
add
mov
cmpsl
add
pusha
ja
fdivs
call
inc
insb
mov
imul
jns
sub
in
lea
jns
sub
add
outsl
pushl
jl
fwait
loopne
jge
jb
and
lcall
popa
shll
popf
jae
add
fsubrl
add
inc
mov
lods
jo
jno
jno
jno
sbb
sbb
xorb
mov
cmc
jbe
jbe
js
jo
sub
int
add
je
je
je
daa
je
je
loopne
test
cld
add
je
je
ror
cmpsb
adc
shrl
push
call
in
sbb
jnp
loope
in
lds
adc
js
js
insl
jns
cmpsb
pusha
stos
popf
mov
int
loopne
add
jb
dec
in
pop
jno
jno
cmpb
lods
jno
jbe
lods
jbe
jbe
ja
add
andb
ja
ja
ja
data16
mov
in
mov
dec
jns
jns
ja
mov
ljmp
mov
or
jg
jl
jge
xor
jge
loopne
cltd
sub
out
mov
jb
jb
jb
insb
jae
jae
jae
mov
adc
pusha
sub
push
jne
jne
and
pop
mov
sub
ljmp
int3
jp
jp
jp
jp
fstpt
adc
jnp
jnp
jnp
add
mov
mov
js
js
adc
jns
pusha
cs
shll
cmp
call
xor
fnstsw
jle
adc
inc
jg
jg
add
push
jg
mov
pop
adc
jb
mov
jb
add
jae
jae
jae
adc
push
jmp
jle
xor
popf
jo
jo
jo
mov
jno
adc
mov
cld
imul
jbe
jbe
ja
call
sbb
xchg
mov
pop
push
shlb
sbb
push
lods
cs
xor
jp
jp
adc
enter
sti
jnp
jnp
mov
push
jns
mov
jns
adc
repz
adc
add
fcomip
aaa
std
jle
jle
jg
bound
jl
push
add
inc
daa
jl
mov
jmp
inc
jge
jge
jge
adc
jge
jge
call
adc
jge
int
fisubl
jge
jge
in
std
jge
decb
mov
mov
push
jno
jno
xor
pop
jbe
jbe
scas
clc
ljmp
jbe
jbe
jbe
jbe
cmp
adc
fwait
jbe
inc
inc
ja
ja
sar
mov
je
jne
insb
mov
lcall
jp
jp
jnp
add
js
js
js
add
jns
jns
dec
inc
jns
jbe
lcall
jg
jg
nop
dec
mov
jg
jg
push
mov
jg
jo
jl
dec
jl
adc
jl
jl
jl
add
xchg
jl
jl
cld
jmp
jge
add
jge
jge
jge
ljmp
add
jne
adc
jb
mov
xlat
jo
jo
jo
adc
pop
hlt
int
lock
jno
xchg
jge
jmp
pop
jbe
leave
jbe
adc
push
add
jne
dec
sbb
into
incl
jp
jp
jp
ds
jnp
jnp
js
add
or
js
nop
adc
nop
jle
jl
jl
inc
pop
icebp
mov
jge
jge
jge
jo
les
xorl
and
ja
in
lods
jecxz
sbb
push
xor
and
je
scas
jle
add
mov
or
ja
cmp
push
mov
inc
inc
jp
jp
js
push
test
decl
xorl
and
inc
mov
jbe
jbe
js
aaa
fdivs
pop
pusha
xchg
je
nop
es
std
jne
pop
mov
stos
xchg
dec
cmp
push
lods
sbb
push
incl
and
dec
cmp
inc
jg
jg
jg
xor
outsl
decl
jg
jg
jg
jg
and
jg
jg
nop
dec
in
rclb
std
fstpt
cmc
jg
pusha
lea
push
adc
jg
dec
xchg
jg
jg
jg
inc
mov
lcall
std
movsl
jg
jg
lock
dec
jl
jl
jl
adc
pop
jl
sub
call
dec
imul
jns
jge
sarb
jl
jl
mov
add
jl
adc
jl
and
jl
adc
sbb
in
push
mov
jge
jge
jge
adc
push
jge
jge
xchg
ret
insl
jge
jge
jge
add
fwait
mov
or
jge
sbb
jge
sub
stc
and
jge
cmp
jge
mov
jge
jecxz
sti
lds
jge
and
jge
jge
jge
add
daa
jb
cs
shlb
jne
call
mov
jo
jp
jp
shll
test
mov
mov
dec
jnp
loop
shrl
xchg
mov
sbb
js
js
js
clc
or
adc
out
sub
mov
mov
add
jle
jle
jle
out
jg
xor
jg
daa
jl
scas
ljmp
ss
fsubp
jge
jge
xor
out
clc
jg
mov
bound
adc
mov
and
jno
mov
dec
mov
pop
jo
sbb
pop
inc
jbe
jbe
jbe
mov
lock
and
scas
orb
adc
xor
stos
inc
nop
insl
ss
shl
jne
jne
mov
or
cli
cmpb
jp
outsb
cmp
jmp
and
push
inc
daa
jnp
jnp
jg
mov
fstpt
jns
push
js
fidivrl
jle
adc
jle
push
push
cld
fisttps
dec
jg
adc
int3
nop
or
lock
dec
jl
std
outsl
cli
inc
jl
jl
outsb
mov
cmp
mov
lret
mov
jge
stos
subb
lock
xor
das
outsl
jae
jae
das
adc
int
and
jae
jae
adc
jae
jae
jae
test
jae
sti
jg
fbstp
jo
int3
pop
jo
jo
jo
inc
lock
sub
ljmp
mov
jno
jbe
jo
dec
ja
add
sub
mov
mov
inc
je
inc
je
je
shll
jne
fcomip
jg
jl
jae
or
gs
jp
jp
ret
repnz
inc
jnp
jnp
mov
adc
pop
rclb
mov
clc
js
jns
lock
lret
jns
jns
xchg
jns
jns
jns
incl
fdivrl
jle
jle
jle
jbe
cmp
jg
jo
imul
jl
cmp
sub
mov
sbb
jno
jno
jo
add
mov
jno
and
push
filds
jno
jbe
jbe
jp
jbe
jbe
or
aad
pushl
jbe
jbe
shlb
xchg
lock
jg
jge
ja
ja
ficoms
test
mov
jns
adc
and
adc
js
adc
incl
dec
jnp
jnp
xor
test
lea
inc
jnp
push
cmc
xchg
xchg
push
test
inc
sti
out
jnp
dec
adc
cmp
aaa
js
js
out
inc
js
js
js
xor
jns
rclb
push
jle
jle
adc
jle
add
pushf
out
push
inc
jg
adc
add
jl
jl
adc
movsb
jge
jb
jb
jb
jb
lds
jmp
dec
jno
repz
jecxz
jne
jl
sub
jo
fstpt
adc
std
decl
or
iret
xchg
cld
jg
mov
mov
sbb
lock
sub
jb
add
jae
jae
or
inc
jae
jae
jo
jo
scas
iret
jno
jbe
jbe
inc
jbe
lret
mov
lods
adc
inc
nop
sbb
jo
mov
fildl
pop
add
jo
mov
ja
jnp
jnp
adc
and
push
jns
jns
jns
jle
jle
inc
jle
or
lods
jle
lock
xchg
mov
mov
jae
add
push
dec
and
fnstenv
je
xorb
add
or
xor
jg
scas
jo
jp
jnp
mov
rcrb
test
jnp
jnp
lock
addr16
decl
adc
add
repnz
js
js
js
xchg
js
jns
jo
adc
inc
outsl
inc
cmp
jle
fwait
mov
dec
jo
adc
jo
jo
shll
sti
jo
jo
mov
xchg
or
jo
adc
adc
les
jno
xor
scas
jno
mov
dec
shlb
jbe
adc
aas
jbe
push
setg
cld
ja
ja
rclb
ja
ja
mov
mov
rorb
movsb
rcl
add
es
out
ds
je
je
out
mov
adc
push
jne
jne
sbb
jne
or
rolb
xor
out
clc
inc
jp
jp
jbe
jp
jp
nop
insb
sub
and
push
jle
jp
push
lods
jp
nop
test
mov
nop
lock
scas
pop
js
js
les
ljmp
ljmp
das
mov
imul
addl
ljmp
sub
and
jg
nop
pop
cld
push
mov
jl
jo
sub
jp
pop
push
int3
jl
jo
jl
jge
jge
mov
and
movsl
jge
jbe
or
stos
xor
push
sbb
push
jae
jae
loope
in
ret
adc
or
inc
addr16
add
xchg
adc
jo
jo
jo
dec
jno
push
or
push
sub
jecxz
xorl
add
jb
adc
adc
jbe
lret
mov
ja
jg
dec
cmpsl
sbb
xor
adc
ja
ja
ja
jecxz
cli
dec
or
ja
dec
je
je
je
mov
outsb
jg
mov
inc
jne
jne
jne
adc
jne
xlat
dec
mov
or
xor
dec
ss
pop
add
mov
nop
cmp
adc
jnp
shll
jnp
cmpb
or
stos
cmp
jnp
jle
adc
in
mov
push
js
mov
cld
int
or
js
js
js
inc
jmp
notb
mov
js
js
mov
jns
fwait
aas
sarb
adc
jns
jmp
xchg
jns
stos
shll
gs
mov
jle
adc
jle
jle
jle
xor
leave
jle
jle
inc
push
pop
mov
je
jg
fnstsw
lock
cwtl
xchg
ss
cmc
adc
mov
jo
adc
pop
inc
dec
mov
outsl
jo
adc
jl
andb
out
adc
jl
idivb
stos
jl
mov
data16
or
ret
xchg
scas
clc
aaa
ljmp
jb
adcb
out
pop
jbe
pop
cmp
xor
adc
push
cld
lods
adc
xchg
adc
cmpsb
jns
pop
mov
pop
cmp
lds
or
jo
xlat
jno
jno
cmp
cld
adc
jbe
jbe
sub
ja
ja
ja
pushf
ja
ja
int
cld
int
mov
je
je
je
enter
xchg
je
cmp
stos
in
jne
shlb
mov
jp
jp
jp
or
jp
jp
adc
hlt
and
mov
bnd
adc
js
lods
jo
in
sub
add
dec
lock
adc
fwait
hlt
jns
jns
testb
jns
jns
jns
adc
je
cs
mov
add
adc
loope
popa
mov
test
jg
sub
out
adc
jno
jbe
xor
xorl
inc
and
and
test
shlb
adc
scas
sarb
xchg
rcr
xchg
inc
add
mov
mov
jnp
jnp
inc
jg
jnp
gs
cmp
adc
or
pop
mov
aam
movsb
jo
jo
jge
mov
and
jbe
push
lret
ja
shlb
das
pop
pop
push
repnz
shrb
jp
mov
xor
jle
pop
mov
or
les
aam
jmp
jle
jg
jg
out
sti
jg
jg
imull
jg
jg
mov
adc
jg
xchg
jg
jg
jg
cmpsl
cmc
jmp
dec
mov
mov
ja
inc
js
sarb
and
push
pop
or
pop
addb
addr16
call
jae
ja
or
add
jl
jl
jl
js
sub
mov
daa
jl
cmp
jl
jl
jl
adc
jl
jl
jl
mov
jg
jl
jl
jl
jl
out
rolb
push
push
jb
jb
inc
mov
outsl
shrb
push
mov
fildll
inc
jnp
and
adc
jno
jno
jno
test
fistpll
mov
jno
jbe
jbe
jbe
jle
jno
adcb
imulb
jbe
jbe
adc
jbe
jbe
jbe
inc
mov
hlt
inc
dec
ja
add
ja
ja
ja
nop
or
ja
outsl
out
ja
and
ja
je
push
je
je
or
je
je
je
xchg
out
jne
clc
das
adc
xor
xor
loopne
xor
jnp
js
loopne
push
mov
cld
push
jle
pusha
arpl
push
fdivrl
dec
pop
mov
mov
jg
loopne
add
mov
xchg
jb
inc
call
pusha
dec
jae
inc
jae
pop
jae
and
add
fs
jae
test
mov
cmp
out
jae
jae
jae
aam
jo
jo
jo
sbb
das
sub
xor
jo
mov
add
and
jbe
jbe
loopne
insb
add
pusha
sbb
mov
ja
ja
ja
stc
ja
je
je
xor
je
cwtl
cmc
xchg
pop
insb
jne
jne
xchg
cli
lods
mov
inc
xor
add
sub
fcoml
jp
ret
xchg
out
out
cld
int
fdivr
js
jns
jns
les
jns
jle
dec
ret
mov
mov
cmp
add
push
push
mov
dec
jae
ja
clc
mov
jo
jno
jbe
push
loopne
loopne
push
idivb
or
adc
pusha
invd
je
add
pop
or
pushl
je
je
pusha
cltd
inc
add
push
mov
inc
push
lock
jns
in
cmc
push
ljmp
or
jle
jle
adc
jle
jle
hlt
inc
pop
jg
add
mov
jae
adc
dec
pop
test
jl
pusha
adc
jg
sub
filds
icebp
jge
jge
inc
jb
jb
jb
addb
jae
jae
inc
xor
add
jae
jae
sbb
inc
jo
jo
jo
pusha
inc
movsb
add
jno
pop
jno
int
push
jp
cwtl
ss
jg
mov
jbe
jbe
cld
push
jl
jbe
mov
arpl
mov
adc
jbe
mov
cmp
pop
sbb
and
repnz
ja
ja
mov
lcall
adc
mov
aaa
mov
add
sbb
and
and
add
aam
loop
pop
inc
aaa
loop
das
xor
jp
pusha
sub
lods
mov
js
sbb
hlt
lods
cmp
stos
jns
add
insb
loopne
ljmp
int3
jl
add
mov
jge
fidivs
adc
jb
pop
add
icebp
mov
call
mov
jno
inc
mov
leave
ja
pusha
test
call
inc
push
incl
jne
adc
jne
loope
push
dec
fcomip
sub
bnd
jp
aam
jp
jp
jp
add
cld
jnp
push
cld
in
test
cmpsl
adc
xor
js
in
jns
jns
jns
or
outsb
jge
jns
jns
xchg
cli
sub
add
mov
jle
pusha
adc
xchg
sub
mov
mov
push
jg
outsb
jg
mov
sub
add
push
rclb
and
lock
adc
push
mov
mov
adc
sub
pop
ljmp
cmp
in
jno
jbe
jbe
stos
cmpsl
xor
ja
ja
test
and
and
push
jnp
mov
int3
jnp
and
pusha
test
mov
js
pop
mov
or
pushl
jns
mov
cmp
mov
push
call
cmpsb
push
inc
jge
jb
jb
and
test
jmp
push
outsl
pop
jbe
ja
ja
ja
pushf
jne
add
jne
lcall
lea
test
loopne
pusha
push
pusha
inc
data16
push
cmpsl
add
aam
adc
sbb
std
ljmp
mov
sarb
xor
mov
jp
adc
test
notb
jp
adc
out
clc
fs
jp
jp
push
push
adcl
lahf
nop
pop
xchg
adc
mov
jp
cmp
dec
xchg
pop
add
out
jnp
jnp
jnp
jnp
adc
gs
jnp
je
or
jnp
jb
jnp
jnp
push
bound
and
jnp
jnp
add
xor
add
sti
cmp
xlat
jnp
jnp
push
enter
icebp
jo
pusha
xlat
scas
jg
jnp
jnp
mov
xchg
xor
push
sbb
jnp
repnz
dec
js
and
push
js
pop
shr
mov
fs
rcrb
push
and
ljmp
sbb
mov
das
jo
and
push
rcrb
jecxz
cli
js
js
dec
mov
fwait
inc
lods
mov
push
jge
js
mov
jns
jle
jle
jb
jg
jl
jl
pop
pop
jge
mov
and
mov
jge
dec
push
cld
add
jb
jb
mov
adc
xchg
inc
push
je
xchg
arpl
ljmp
dec
ja
pshufw
je
je
icebp
es
mov
sbb
jp
sarb
cmc
jnp
jo
push
xchg
hlt
mov
adc
jle
jle
jle
or
and
and
xorb
mov
fisubrs
jno
stos
jo
sbb
lcall
call
subb
xor
fidivrl
call
inc
jns
jns
jns
and
xor
jns
sbb
outsl
add
jg
rolb
mov
fstpt
mov
push
subb
shrb
aaa
add
jb
mov
add
jae
jae
jo
jo
les
cltd
cmp
mov
jmp
push
push
pusha
das
jbe
lock
rcrb
xor
sub
cmp
es
xchg
push
js
sbb
jns
pop
or
dec
sbb
jg
adc
jl
adc
inc
jb
adc
jb
xor
adc
sarb
ss
lret
jno
or
mov
inc
test
xor
fcmovnu
adc
dec
push
push
aas
jb
adc
jb
jb
jb
inc
rclb
inc
jae
jae
jo
sbb
dec
cli
jae
jae
lcall
and
clc
adc
jo
jo
adc
jo
jno
jno
adc
jno
adc
lcall
jno
jbe
jbe
add
cmp
movsl
jbe
adc
push
movsb
sbb
cli
out
bnd
je
je
jne
add
out
or
or
loopne
je
pop
jp
insl
jp
aam
jp
jp
nop
aaa
cwtl
inc
sub
mov
push
mov
js
adc
fdivrl
jle
testb
jb
adc
inc
lock
xlat
adc
jae
lock
jnp
scas
dec
and
in
lea
out
or
das
inc
pop
push
push
jne
lock
js
jno
or
jne
adc
jne
jne
jne
cmp
shrb
adc
aad
out
clc
jne
jne
test
mov
ljmp
lock
jnp
lock
add
icebp
mov
push
insb
js
sarb
push
lcall
sub
jns
sbb
push
xor
sar
lock
or
jns
adc
jns
jns
clc
add
mov
lcall
outsb
rcrb
cmp
push
bound
adc
mov
push
dec
scas
jns
lock
pop
jle
insb
add
add
dec
subb
rcr
inc
into
jle
nop
data16
es
push
and
ljmp
mov
jg
xor
jp
out
fdivrl
or
dec
pop
or
addr16
stos
loopne
jl,pt
push
pop
add
jl
jl
mov
jl
xorb
cmpsb
jl
es
or
stos
in
das
push
dec
jge
jge
jge
adc
add
push
cli
fucomi
nop
jo
data16
jge
and
jge
jge
jge
das
add
das
pop
push
jge
jge
jge
nop
and
and
mov
xor
jge
jge
or
add
and
adc
mov
add
test
mov
mov
lcall
sub
fs
and
and
call
add
rolb
xor
je
dec
sub
fnstcw
jo
ljmp
rcrl
or
and
fnstsw
adc
pop
loopne
add
rcl
repz
int
add
cwtl
inc
push
outsl
cli
cmc
lret
xchg
in
ja
les
sahf
sbb
fiaddl
outsl
pop
cmc
fcomps
jle
roll
push
adc
cltd
insb
xchg
cmp
jg
xchg
mov
sbbb
loop
nop
sbb
jmp
jbe
mov
add
xchg
mov
in
jmp
add
dec
pop
or
je
bound
fisttps
dec
lahf
add
xchg
mov
lods
add
xchg
fxch
sub
loope
test
add
add
ljmp
divl
aas
cmp
inc
mov
mov
sbb
jmp
push
xchg
dec
mov
fiaddl
inc
pop
or
mov
pusha
dec
push
pop
lret
rorb
mov
lahf
xorb
mov
sub
in
stc
movsl
adc
outsl
clc
sti
push
es
lds
outsl
or
xor
push
inc
sti
mov
pop
dec
add
out
fadds
mov
or
add
push
pop
int3
cmp
xchg
pop
sub
jg
jns
lods
rcr
add
aad
popf
or
cmp
adc
in
ljmp
or
pop
aas
pop
cmc
push
pop
xchg
push
cli
and
bound
incl
mov
and
cmp
add
out
clc
add
ljmp
cmovl
lcall
and
cmc
add
adc
add
popf
bound
mov
add
mov
pop
fld
test
pushf
xchg
sbbl
fs
ljmp
and
mov
jmp
fabs
fucomi
int
jg
xchg
mov
xor
add
aam
daa
cmpb
test
cwtl
pop
cmpsl
scas
cwtl
and
adc
add
adc
push
push
and
cltd
add
fisttpl
pushf
fsub
xor
leave
es
out
fwait
mov
pop
outsl
jge
lret
popf
and
fisttpl
cmp
pop
or
call
pop
ja
incl
or
in
adc
fsub
push
call
add
int3
xchg
mov
mov
dec
jg
mov
mov
push
sub
add
inc
test
into
arpl
xor
repz
add
and
jno
inc
aaa
adc
lret
cli
or
or
xchg
insb
gs
jae
cld
mov
je
js
inc
gs
outsl
arpl
push
imul
lods
mov
dec
inc
jo
inc
fs
arpl
gs
js
stc
mov
imul
xorb
outsl
popa
fs
imul
jle
lods
inc
push
inc
dec
popa
cmpsb
inc
jbe
outsb
je
sbb
jb
jne
imul
scas
inc
insb
insb
sahf
inc
rcr
insb
jp
jns
push
mov
push
imul
jb
inc
frstor
outsl
jl
push
or
outsb
mov
dec
popa
push
jns
and
add
fidivrs
jae
imul
jne
lods
std
mov
push
mov
insb
push
outsb
ja
fs
inc
stos
pop
pusha
dec
jnp
daa
dec
outsb
imul
addl
push
push
repnz
clc
insl
je
outsb
addr16
jns
lods
das
pop
or
ja
xor
sbb
mov
pop
popa
stos
jo
outsw
pusha
push
cmp
repnz
mov
jbe
inc
inc
inc
cmpb
xchg
bound
rcrl
push
popa
inc
push
shl
adcl
dec
bound
jge
push
lods
adc
shlb
dec
in
jae
inc
jle
push
gs
imul
inc
imul
pop
xor
mov
aam
aas
push
push
popa
imull
or
lahf
faddl
fistpl
jo
inc
sub
push
mov
mov
jo
loopne
push
rcr
pusha
push
dec
xor
cwtl
insl
sbb
lea
lds
leave
pop
stos
ret
mov
or
dec
dec
jne
dec
shlb
sbb
aas
inc
add
mov
cmp
push
in
gs
scas
push
add
ficomps
and
xor
mov
in
mov
je
outsb
push
pop
adc
rcrl
addb
pop
xchg
inc
push
sub
jno
xor
push
pusha
into
push
xor
ds
lds
xor
ds
negb
and
jbe
inc
push
adc
lcall
outsl
mov
nop
push
xor
xlat
sbbb
notb
dec
cmp
popa
dec
inc
dec
inc
xchg
mov
fistpll
xchg
pop
xlat
inc
inc
push
pop
or
je
inc
add
dec
push
mov
fildll
adc
scas
insb
call
push
incl
gs
add
insl
jo
xor
jo
inc
push
mov
loop
int
mov
sbb
fs
push
shrl
or
inc
add
pushf
cltd
popa
bound
pop
mov
pop
sub
lods
insb
dec
addb
xchg
cmp
sub
dec
outsb
pop
cmpsl
push
rolb
arpl
sub
fadds
mov
adc
mov
inc
test
icebp
shll
xor
rolb
sbb
dec
dec
or
pop
push
pop
imul
pop
sub
lahf
mov
loope
outsl
cmc
iret
sbb
adc
and
arpl
rorl
push
cmc
push
add
int
rclb
outsl
pop
fstpl
add
or
push
mov
push
and
fwait
imul
mov
mov
inc
push
mov
ds
pop
jg
add
hlt
je
xor
mov
out
insl
adc
xor
add
cmp
jne
jb
adc
inc
fisubrs
xchg
adc
fidivl
and
outsl
pop
arpl
jb
addr16
fwait
orb
outsb
fs
and
sbb
div
jb
gs
cmp
jae
sbb
lods
mov
addr16
adc
lahf
pop
mov
std
sbb
mov
pushl
adc
and
xchg
and
add
sbbl
inc
inc
adc
lods
sbb
ja
lcall
ret
fsub
fdivs
testb
mov
push
inc
push
dec
test
mov
subb
add
add
dec
out
in
std
mov
or
inc
inc
pop
leave
insl
fistpl
add
nop/reserved
add
mov
jge
sbbb
loope
add
fwait
add
adc
add
and
outsl
jns
pusha
jb,pn
popa
je
inc
ucomiss
mov
popf
push
dec
and
out
lock
in
cld
faddp
cs
push
xor
add
xor
lock
and
daa
fimuls
pop
dec
inc
into
cmp
mov
push
sarb
add
xchg
and
add
pusha
mov
lea
push
or
jmp
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
nop
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
in
add
add
add
add
add
add
add
addb
add
xlat
cmp
pop
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
add
jae
add
add
add
add
add
jo
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
in
lock
mov
mov
fstps
stos
popa
imul
test
or
cmp
das
lods
ret
and
sahf
xchg
jnp
scas
mov
adc
imul
cmpl
cmp
pop
mov
cmc
popf
xor
sahf
jnp,pt
outsl
or
jp
call
add
in
cmc
add
int3
pop
pop
sub
mov
pushf
xchg
and
fiaddl
getsec
or
lcall
imul
cmp
xchg
aad
repz
xorl
lcall
fnstsw
movsl
xchg
cmp
jns
negb
push
push
scas
inc
or
mov
cmp
call
xor
sarl
das
ficompl
fstl
mov
stos
cmc
cmpsl
shrl
xor
leave
xlat
faddl
jne
mov
sub
out
lock
mov
incl
shlb
test
fildl
pop
pop
sti
jnp
xchg
imul
sbb
sbbb
or
sub
add
mov
cmpl
xor
add
push
or
outsl
rcrb
sbb
enter
pusha
push
rorl
cmc
andb
dec
dec
pop
jo
sbbb
mov
inc
fcompl
fisubrl
in
dec
mov
sahf
cmp
lds
dec
and
mov
or
and
fdivrl
inc
cli
hlt
jo
in
lock
repnz
inc
imul
popa
lcall
mov
repz
stc
sub
xchg
add
mov
jge
popl
into
mov
and
add
push
inc
inc
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
out
add
add
add
add
xor
cmp
xor
xor
inc
add
add
pusha
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
push
and
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
jb
arpl
push
add
jb
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
je
popa
add
popa
add
and
dec
add
jae
push
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
arpl
push
add
jb
add
js
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
arpl
push
add
jb
and
je
outsl
add
insb
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
and
add
inc
add
insl
add
add
je
jae
add
push
add
insl
add
insb
add
and
insl
add
outsb
add
add
jb
and
data16
jb
and
popa
add
arpl
push
add
and
data16
insb
add
jae
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
in
lock
lods
js
ret
cs
test
mov
iret
xchg
xchg
ffree
mov
lods
popf
js
ds
scas
xchg
jo
mov
mov
inc
aaa
loope
push
arpl
xchg
loopne
jno
enter
add
scas
hlt
xchg
bndstx
cmp
xor
es
jl
dec
cmp
push
or
xor
fwait
and
xchg
or
jbe
les
xorb
sub
nop
cmp
repnz
xor
jp
mov
inc
xchg
dec
ret
mov
aad
dec
jmp
jge
out
jns
xchg
andb
adc
ss
jge
dec
pop
mov
add
jne
loope
js
fiaddl
in
push
mov
xor
lock
jmp
push
pop
xchg
xorl
aas
inc
add
aad
add
icebp
pusha
cld
pop
mov
cmpsb
mov
pop
and
push
insb
mov
test
xchg
pop
dec
sbb
mov
das
adc
cmp
imul
cs
int3
outsl
mov
push
xchg
fstl
pop
in
xor
cwtl
xchg
xor
xlat
adc
xorb
scas
mov
add
inc
inc
dec
sbb
pop
push
and
add
insl
das
sub
ret
aam
ljmp
xor
fnstcw
jno
mov
lds
push
xchg
jnp
cltd
cmp
adc
sub
add
and
sub
enter
adc
jmp
fxch
adc
loopne,pn
push
xchg
inc
inc
shrb
in
mov
xchg
mov
stc
cli
jg
push
out
or
sahf
test
cmp
pop
in
in
add
push
iret
jecxz
jbe
pop
ja
lock
cmp
add
inc
dec
push
cmp
adc
cmp
pop
push
cmp
sub
cmp
pushw
cmp
xor
cmp
jb
cmp
cmp
cmp
jnp
cmp
inc
push
cmp
xchg
cmp
xchg
push
cmp
movsb
push
cmp
mov
cmp
ret
add
push
cmp
add
add
fimuls
cmp
add
add
out
push
cmp
add
add
push
add
add
adc
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
cs
insb
add
jne
popa
jo
cs
insb
add
insl
jo
fs
insb
add
gs
insb
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
gs
insb
jne
je
jb
gs
outsb
je
jb
popa
arpl
add
arpl
pop
jb
jo
add
push
je
push
je
push
