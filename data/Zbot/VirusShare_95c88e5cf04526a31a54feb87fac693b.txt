push
mov
pusha
mov
lea
pushf
ror
popf
mov
pushf
mov
popf
lea
lea
cmp
dec
inc
sub
pushf
mov
mov
pushf
ror
popf
mov
popf
je
jae
mov
mov
pushf
ror
popf
mov
pushf
mov
popf
xor
mov
lea
movl
mov
lea
mov
pusha
mov
xchg
xchg
push
pop
and
popa
xor
pusha
mov
xchg
xchg
push
pop
and
popa
push
pop
sub
mov
pusha
mov
mov
xchg
mov
popa
loop
mov
sub
inc
add
add
sub
jae
pushf
rol
popf
mov
cmp
popa
xor
leave
ret
push
mov
sub
push
mov
push
push
call
pushf
rol
popf
mov
cmp
pop
pop
push
pop
pushf
ror
popf
mov
mov
jmp
xor
add
lea
pushf
ror
popf
sub
push
push
xor
call
push
jmp
xor
add
lea
pushf
ror
popf
sub
pop
jmp
xor
add
lea
pushf
ror
popf
sub
test
jne
mov
push
movl
lea
push
push
movl
lea
push
pop
call
push
call
leave
ret
push
pop
mov
add
movl
lea
push
pop
mov
cmp
push
call
pop
mov
xchg
int
fidivl
adc
sbb
fdivrl
ss
lods
cmp
stos
ret
shl
push
nop
rcrl
push
push
imul
decb
rcll
nop
lahf
sbb
inc
mov
adc
pop
dec
cmp
pop
pop
pop
int
pusha
jnp
mov
ds
jge
add
or
push
adc
and
sbb
xor
lea
lret
mov
sub
out
in
inc
imulb
in
xchg
cld
rcrb
insb
stos
aas
cltd
adc
push
dec
punpcklbw
push
xchg
pop
bound
lahf
les
and
int3
add
fimull
sti
mov
mov
mov
mov
push
in
in
dec
pop
cmpsb
out
mov
jo
cli
push
push
mov
sahf
mov
or
adc
pop
pop
adc
and
or
push
pop
pop
sub
rcl
loopne
ljmp
xchg
rcrl
mov
sub
ss
popf
lods
lods
mov
mov
inc
rcr
hlt
fs
out
sar
hlt
repz
push
push
arpl
jo
or
jns
push
or
jge
inc
sub
jp
iret
add
mov
sub
inc
aaa
xor
xor
push
inc
prefetchw
pop
in
adc
das
sub
cmp
push
sar
cltd
in
stos
cmc
divl
xchg
push
out
add
fwait
adc
mov
js
mov
dec
pop
push
push
leave
arpl
popa
outsl
push
inc
mov
imul
sbb
fdivs
pop
in
xor
out
ror
xchg
fsubl
loope
mov
pop
cmc
lock
je
jo
inc
xchg
pushf
jbe
movsl
mov
adc
inc
sbb
mov
mov
cmp
lods
sar
xor
mov
jp
cmp
xchg
and
sbb
sub
xor
xor
jle
rcl
pop
sbb
outsb
add
ljmp
sti
addb
lahf
pop
mov
test
mov
jns
mov
push
mov
bound
imul
push
mov
jnp
add
mov
popf
bound
and
sub
out
cmp
iret
sub
lret
pop
sbb
push
loope
test
fs
cmp
sti
xchg
xchg
xchg
xchg
sbb
pusha
mov
scas
and
mov
inc
loope
mov
mov
inc
ret
pusha
ljmp
jnp
jp
leave
pop
or
sbb
arpl
push
arpl
mov
cmp
cmpsl
mov
stos
lds
lock
cli
mov
xchg
pop
or
scas
pop
ds
or
adc
fstpl
insb
loopne
outsl
jl
scas
lock
mov
xlat
adc
es
xchg
decb
xchg
test
jmp
add
lahf
or
xchg
push
popf
dec
out
adc
mov
add
or
sub
in
dec
hlt
sub
xor
dec
inc
or
imull
ds
mov
sti
cmp
xlat
daa
shrl
lods
test
in
jbe
mov
in
in
add
pop
add
mov
sbb
icebp
pop
repnz
repz
hlt
pop
cmc
mov
clc
pop
stc
pusha
cli
popa
sti
and
arpl
fs
jmp
add
imul
insb
push
insl
pop
outsb
or
jo
jno
jb
jae
hlt
push
jne
js
int
js
jo
pop
int3
jp
mov
sub
mov
repnz
jecxz
mov
mov
inc
in
test
cld
xchg
stos
in
enter
jecxz
jmp
mov
sub
sub
jne
xor
xor
jl
ss
aaa
sahf
cmp
cmp
cmp
movsl
aas
cmpsb
andb
orl
lods
inc
scas
pop
scas
dec
mov
icebp
dec
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
pop
rcrl
ret
pop
pop
vshufps
enter
lret
gs
jbe
addr16
push
shrl
insb
shrl
outsb
aad
divb
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
and
call
test
test
xchg
xchg
mov
mov
mov
mov
mov
hlt
mov
notb
stc
xchg
cli
xchg
sti
xchg
cld
xchg
std
xchg
cwtl
lcall
add
lahf
push
mov
or
or
or
test
cmp
jbe
pusha
scas
adc
mov
ret
sbb
sbb
mov
and
pop
or
xor
popl
lds
sub
cs
xor
xor
xor
xor
xor
xor
sarl
cmp
cmp
cmp
flds
inc
fildl
inc
fldl
filds
inc
loope
loop
jecxz
in
in
out
out
call
push
jmp
in
push
in
push
out
push
out
push
lock
icebp
pop
repnz
repz
hlt
pop
cmc
pop
negb
pop
clc
pop
stc
pusha
cli
popa
sti
cld
arpl
fs
jmp
add
imul
insb
push
insl
pop
outsb
or
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
sbbb
sbb
push
test
xchg
xchg
mov
mov
mov
and
mov
xchg
sub
cs
das
xchg
xor
xor
ss
aaa
sahf
cmp
cmp
movsl
aas
cmpsb
inc
cmpsl
inc
test
test
inc
lods
inc
lods
inc
scas
dec
scas
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
pop
rcrl
ret
pop
les
pop
pusha
popa
enter
lret
gs
data16
into
push
shrl
insb
shrl
outsb
aad
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
and
call
test
test
xchg
xchg
mov
mov
mov
mov
mov
hlt
mov
notb
stc
xchg
cli
xchg
sti
xchg
cld
xchg
std
xchg
cwtl
lcall
add
lahf
push
mov
or
or
or
test
adc
scas
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
shrl
sub
sub
sub
sub
sub
leave
xor
xor
xor
xor
xor
xor
sarl
sarb
sarl
aam
aad
cmp
flds
inc
fildl
inc
fldl
filds
inc
loope
loop
jecxz
in
in
out
out
call
push
jmp
in
push
in
push
out
push
out
ret
icebp
cli
stc
pop
repz
std
pop
notl
add
mov
std
lcall
add
push
add
outsb
or
sub
jo
push
adc
or
clc
sbb
fcomps
js
lret
adc
test
jle
data16
sbb
xchg
xchg
cmpsb
sub
and
call
xor
sub
cmp
xor
xor
xchg
inc
sahf
cmp
mov
aas
repnz
cmpsb
inc
enter
dec
stos
inc
and
lods
inc
ss
scas
dec
sbb
mov
mov
jo
mov
push
pop
mov
dec
pop
mov
push
scas
popa
mov
pop
repnz
ret
imul
popa
mov
enter
lret
jno
addr16
imul
shrb
jns
outsl
cmp
jno
jle
jae
sbb
fdivl
ja
js
test
push
jl
ljmp
xor
subb
ss
out
or
lock
jp
popf
sub
push
xor
sub
and
hlt
push
jl
or
add
add
add
mov
sete
mov
or
or
test
out
fisubl
cmp
out
int
ja
dec
mov
dec
pushf
mov
and
and
out
mov
popf
mov
rcrl
insl
ret
mov
mov
cs
xlat
sub
cwtl
dec
lret
scas
pop
xor
fidivrs
sarl
out
sarl
cmp
mov
aas
and
xchg
inc
inc
jecxz
inc
push
leave
loopne
loope
loop
cmp
in
sbb
add
push
rcrb
push
int3
jmp
push
out
inc
push
sbb
push
adc
adc
shl
pop
xor
xor
adc
pop
sti
mov
arpl
mov
ljmp
lret
adc
mov
push
jnp
outsb
fidivrl
or
or
in
push
jo
jbe
rclb
adc
pop
std
idivb
repz
jge
stc
sbb
pop
jae
cmp
adc
cmp
int3
xchg
and
mov
pop
sub
dec
sub
icebp
out
das
jo
xchg
xchg
decl
cltd
fnstsw
inc
xor
data16
lahf
shlb
ret
movsb
mov
cmp
test
test
jns
inc
lods
push
push
sub
cmp
ds
or
push
enter
push
sub
push
and
pop
in
mov
mov
inc
gs
mov
pop
dec
pusha
rcrl
fwait
leave
push
inc
fs
das
inc
xor
pusha
shlb
sub
insb
mov
daa
outsb
pop
enter
inc
push
fnstenv
jbe
adc
jb
jg
jecxz
sbb
in
jns
sahf
jg
adcb
fnstcw
jmp
xchg
xchg
out
icebp
in
xor
push
loope
cmc
out
loop
xchg
lcall
dec
cld
push
mov
push
lods
add
ljmp
lahf
imul
leave
dec
or
or
push
je
mov
lods
icebp
lods
mov
mov
mov
inc
sbb
mov
mov
out
mov
mov
mov
sar
sub
cmpsb
les
addl
dec
jns
clc
jecxz
int3
popf
push
rorb
popa
shll
aam
aad
jl
mov
fdivrs
xchg
dec
inc
and
fbstp
xor
dec
xor
jae
dec
mov
out
ret
fucomp
sub
jmp
and
push
mov
mov
and
cmp
dec
divl
pop
mov
cli
sarl
xor
pop
pop
xor
shrb
imul
cmpsb
out
or
icebp
add
jne
inc
adc
sbb
adc
test
test
pop
dec
inc
jg
or
fiaddl
out
pop
stc
inc
or
mov
loope
and
jno
xchg
xchg
pop
sub
xor
in
xchg
loope
mov
mov
fwait
xor
jne
and
xchg
aaa
mov
cmp
fidivl
inc
xchg
or
daa
popa
flds
imul
outsl
scas
bound
ret
mov
mov
jle
push
jl
mov
aaa
add
scas
push
mov
js
out
pop
adc
repnz
push
cltd
pop
popa
dec
push
leave
test
sbb
add
fwait
into
jno
adcl
dec
rorl
loope
dec
jno
cmp
sbb
jge
lods
and
ss
jp
mov
xchg
xchg
cmp
xchg
out
addl
xchg
lock
xor
hlt
int
cmpsb
nop
mov
scas
mov
std
xchg
popa
or
dec
push
mov
add
mov
xor
sahf
stc
pop
push
and
or
or
bound
pop
sub
pop
pusha
stos
test
lods
pop
inc
adc
adc
xchg
sbb
sbb
sbb
and
arpl
flds
inc
mov
pop
xor
ret
sub
and
mov
or
aam
das
pushf
dec
pop
xor
mov
leave
cltd
cmp
adc
cmp
cmp
jno
jnp,pn
cmpsl
xlat
xchg
es
inc
and
inc
gs
shlb
sahf
xchg
roll
jecxz
test
dec
or
roll
insl
ljmp
push
or
stos
push
mov
test
pop
ss
cmc
fmull
mull
cli
popf
sti
mov
arpl
jne
pop
stos
push
add
add
xchg
push
add
jns,pn
mov
inc
test
stos
scas
jne
or
adc
pop
push
jp
jnp
xchg
push
movsb
mov
dec
xchg
lret
mov
mov
sbb
jl
repnz
mov
add
outsl
insb
mov
sarl
sub
addr16
divl
out
jbe
scas
lcall
dec
sahf
xchg
xor
and
mov
aas
mov
inc
jl
stos
stos
xchg
pop
lods
inc
add
dec
cmp
dec
dec
fdivs
mov
push
mov
dec
push
cltd
push
mov
sub
pop
push
rol
jnp
xor
lret
dec
jg
aaa
aaa
leave
dec
rorl
jg
data16
loop
push
iret
outsl
cmp
mov
inc
outsb
jecxz
jo
in
jecxz
std
popf
fidivl
fisttpl
rcr
cmpsl
loopne
testb
push
loop
inc
push
lret
andl
test
lea
pop
xchg
jns
les
hlt
mov
xchg
xchg
stc
xchg
pop
xchg
pop
adc
push
std
jno
cwtl
fcmovnbe
outsl
adc
add
add
fistpl
xchg
dec
movsl
cmp
js
cltd
stos
test
fprem
scas
sbb
sbb
subb
lret
mov
jg
mov
xor
and
ret
sub
ffree
jle
inc
sub
and
out
mov
xor
lret
iret
mov
shlb
cmp
cmp
test
sarb
pop
inc
flds
jge
std
fldl
fisttps
mov
jbe
xor
out
sbb
dec
hlt
push
mov
jmp
fists
cmp
or
test
dec
mov
pop
or
cli
aaa
cmp
mov
gs
xchg
pop
fsub
add
add
test
in
xor
int3
jb
pop
insl
mov
xor
testl
leave
push
sub
adc
jle
and
in
scas
andl
push
repz
leave
js
cmp
mov
and
andb
and
mov
xchg
xor
xchg
lcall
pop
cmp
xor
dec
fidivs
and
or
repz
mov
aam
push
cmpsb
scas
push
or
dec
stos
sub
dec
xor
lods
scas
adc
nop
mov
mov
mov
cmp
das
jle
jbe
cmp
jo
pop
or
pop
push
pop
jnp
sub
rol
pusha
bound
mov
data16
dec
add
lods
rclb
insl
aam
icebp
cld
andl
fadds
mov
fsubl
rolb
loopne
inc
icebp
popa
jl
jmp
jle
fnstenv
loope
add
xor
mov
cmpsl
ljmp
fcomip
aaa
cmc
push
pop
xor
adc
xchg
or
adc
adc
add
lock
adc
mov
xchg
push
or
mov
push
test
loope
pop
loop
lods
inc
lods
push
pop
adc
mov
movsb
xchg
mov
outsb
sbb
push
stos
push
mov
ja
jle
and
int3
jmp
sub
ret
popa
out
sub
sub
cld
enter
fidivl
jl
pop
xor
xor
lods
iret
aas
adc
rcrl
cwtl
cmp
xlat
and
mov
inc
cmpsb
lock
inc
addr16
pop
inc
aad
loope
ja
test
xchg
out
dec
movsb
xor
push
call
push
hlt
fst
push
repnz
push
push
xor
not
add
repz
push
pop
push
pop
stc
cpuid
popa
std
cld
xchg
sar
jno
jmp
addr16
arpl
push
jae
movsl
push
insl
rcrl
cltd
jle
or
data16
jb
adc
lret
loope
jp
jnp
fs
jns
add
xor
insb
andl
push
xchg
pop
sbb
test
xor
xchg
lea
or
daa
imul
aam
jl
mov
mov
aaa
dec
xor
mov
aaa
add
pop
mov
into
inc
lahf
movsb
add
aas
cmpsb
loop
inc
in
repz
xchg
inc
les
adc
dec
or
jae
dec
fnstsw
mov
adc
mov
jae
mov
mov
pop
pop
insb
ret
aam
pop
mov
movb
sub
leave
adc
fs
int3
sub
imul
cli
rcrl
outsb
adc
rcrl
test
xlat
enter
mov
jl
jge
sub
lea
out
aas
mov
cmp
dec
in
out
stc
push
inc
lock
orl
lahf
cmc
and
xlat
clc
repz
or
xchg
std
and
inc
cltd
jmp
add
add
add
iret
fsubl
scas
movsl
aad
or
test
adc
lods
push
repz
xchg
dec
mov
cs
mov
sub
jne
cmp
lret
outsb
and
sub
cmp
vmovaps
mov
mov
popa
out
je
sub
xorb
xor
loopne
xor
adc
mov
dec
cmp
inc
inc
das
mov
fnstcw
outsb
mov
xor
dec
roll
out
clc
jbe
sahf
pop
out
call
push
mov
outsl
rclb
cs
rcl
icebp
jle
shl
pop
loopne
cmc
stos
sub
or
sar
dec
cli
or
loop
arpl
in
xlat
push
add
push
insb
out
adc
outsl
inc
pushf
ret
sbb
inc
or
jbe
ja
js
adc
pushf
adc
out
jl
adc
jle
gs
sbbb
inc
addl
xchg
mov
popa
adc
lds
movsl
adc
or
shlb
cltd
dec
xor
xor
movsl
popf
aaa
push
sbb
mov
push
movsb
add
movsl
cmpsb
cmc
cmpsl
push
test
mov
inc
xor
les
dec
or
xor
mov
aas
dec
ss
dec
adc
push
mov
push
push
pusha
aas
iret
popa
mov
stos
mov
fs
pop
xor
enter
lret
pushf
icebp
pop
addr16
sbb
imul
enter
sbb
jae
inc
inc
jne
jbe
lods
fisubrs
jns
divl
loop
bound
push
icebp
loop
subb
xor
xchg
dec
je
or
dec
out
lcall
mov
mov
hlt
mov
mov
mov
gs
arpl
dec
jl
loop
jne
push
lock
sub
repz
or
dec
call
ljmp
rcrl
popf
scas
das
adc
mov
sbb
xchg
mov
je
xchg
mov
jle
jnp
pop
into
mov
je
addr16
lock
lods
pop
sub
xor
or
dec
xchg
int
mov
sub
nop
pop
pop
rcl
cmp
mov
aas
mov
inc
in
fmulp
fbld
aad
adc
rorb
out
out
jg
jmp
pusha
in
in
or
out
xor
call
jge
pop
sub
shll
leave
cld
mov
adc
leave
add
scas
imul
insb
push
imul
jp
or
dec
or
es
adc
push
push
adc
sub
mov
sbb
int
sbb
sahf
test
test
rolb
sbb
ds
sahf
mov
aad
lock
jnp
adc
xchg
pop
out
xor
xor
mov
sahf
inc
sub
jne
pop
cmp
ds
lods
jnp
pop
insl
test
mov
dec
ja
push
inc
lcall
dec
out
inc
dec
and
mov
push
je
mov
sti
inc
push
fstl
push
dec
cltd
jp
sub
in
pop
ret
fwait
les
rcrl
and
jl
pop
mov
add
pushf
lcall
movsl
sarb
shll
rol
add
dec
fsubrs
jl
mov
je
or
jbe
jp
aaa
arpl
jae
cltd
jg
sub
cli
test
out
popa
add
std
mov
ficoml
or
cli
push
enter
mov
add
inc
lahf
rol
pop
movsl
movsl
mov
sbb
pop
stos
int
or
ds
adc
subl
fdivrs
lahf
jb
in
aaa
pop
out
xchg
inc
mov
sbb
and
sub
leave
sbb
leave
movsl
hlt
ret
lret
push
lret
sbb
xor
dec
iret
jne
push
rorl
aam
loop
push
adc
out
aas
pop
inc
leave
stos
add
push
sub
stos
filds
and
jecxz
in
cmpsb
jne
mov
dec
decb
cltd
out
jmp
in
in
dec
push
cmpsb
mov
icebp
fs
adc
sbb
imull
add
pusha
pop
xchg
sti
adc
arpl
sub
sbb
imul
push
or
or
ret
xor
xchg
sahf
adc
mov
adc
cmp
mov
sbb
andl
push
inc
pop
mov
cwtl
and
pslld
iret
dec
or
insb
popa
sub
xor
clc
lret
xor
lock
lahf
mov
sarl
jbe
push
inc
fisubrl
inc
test
inc
lods
lock
dec
mov
mov
mov
ret
int3
fcoms
cmp
cs
pop
sbb
les
pop
sub
cmp
test
loope
dec
enter
sbbl
addr16
mov
and
sbbw
aad
inc
jo
or
jo
sub
je
mov
fimuls
in
loopne
loope
loop
push
xlat
in
out
out
inc
cmpb
add
mov
mov
mov
mov
call
mov
icebp
xchg
adc
xchg
sbb
scas
cltd
cmp
sahf
iret
ja
sahf
rcll
sbb
insl
cmp
dec
mov
xchg
or
loop
stos
lock
adc
adc
movsl
sub
sbb
sbb
sbb
loope
mov
add
add
inc
mov
rol
sub
add
or
fcos
dec
leave
sub
jp
sbb
hlt
xor
lahf
cmp
cmp
ds
dec
flds
mov
xor
pandn
loopne
xchg
int
dec
scas
dec
sbb
decl
leave
call
call
dec
mov
jp
mov
pop
and
inc
mulb
loope
popa
scas
bound
adc
xor
adc
shrb
loopne
inc
push
mov
loope
or
pop
xor
mov
jbe
ja
js
adcb
push
jnp
arpl
or
and
pop
push
push
je
int3
mov
and
inc
mov
mov
dec
daa
cmp
xchg
inc
pop
sub
sub
lock
xor
adc
fwait
jnp
ss
js
mov
mov
iret
sarb
fdivrl
call
sbb
inc
and
inc
dec
outsl
faddl
jo
sub
lret
lcall
data16
jbe
cmp
xor
push
lret
pop
shrb
pop
mov
xchg
pop
iret
pop
mov
ja
bound
arpl
insl
int
mov
push
data16
xor
push
jo
fcomps
pusha
outsb
fdivrl
out
ficomps
jns
sub
mul
jge
movsl
and
sarl
lahf
push
movl
icebp
mov
hlt
mov
push
arpl
sub
mov
xchg
mov
jle
push
mov
or
xor
fwait
push
mov
aad
or
movsl
xor
test
das
cmp
jmp
push
scas
cmpb
mov
pop
mov
mov
clc
mov
sbb
cmpsb
nop
and
mov
mov
sub
and
sub
leave
clc
or
lret
int3
popa
int
not
iret
dec
mov
rcrl
cmp
aam
aad
fdivrl
cmp
inc
push
pop
das
cmp
int
inc
ffreep
insb
inc
inc
dec
hlt
cwtl
jecxz
scas
ret
repnz
out
cli
dec
fnstcw
push
jmp
ss
xlat
adc
push
icebp
push
mov
or
mov
pop
not
fdivr
and
push
sahf
jmp
push
xlat
incl
dec
shrb
rcrb
outsb
and
loope
or
fstl
jne
dec
adc
out
xlat
xor
or
push
jge
sbb
push
adcb
sub
int
xchg
dec
pop
add
xchg
jecxz
mov
pop
stos
mov
dec
xor
or
inc
sub
call
dec
xchg
inc
pop
sbb
push
xor
pop
pushf
test
pop
or
andl
adc
jb
inc
stos
mov
lods
std
lods
lcall
dec
dec
cmp
cld
mov
pop
mov
push
sbb
sbb
mov
push
push
outsb
out
jmp
pop
inc
ret
pop
push
adc
pop
into
mov
xor
int3
arpl
ljmp
cmp
iret
jecxz
shll
mov
add
xchg
cmpsb
push
cmpsl
fcomp
test
out
jbe
inc
fwait
insl
fistpll
int3
jp
jnp
lods
jecxz
mov
add
mov
mov
shr
xchg
cmp
xchg
out
out
rolb
or
jnp
hlt
pop
xchg
push
jge
xchg
or
sti
stc
mov
xchg
cltd
mov
imul
and
mov
test
mov
movsl
mov
mov
test
cltd
lods
mov
scas
push
xchg
movsl
xchg
sbb
filds
mov
je
adc
mov
and
mov
daa
fcomi
es
dec
insb
fmuls
leave
enter
dec
xor
push
into
es
xchg
cmp
xor
pop
outsb
test
mov
fisubrl
in
popf
lahf
rolb
push
aas
fiaddl
mov
clc
sahf
in
out
sub
call
sbb
nop
rcll
xor
jo
push
addr16
popa
in
repnz
mov
negb
stc
xchg
popa
cs
in
imul
outsb
xchg
flds
addl
rolb
xchg
xlat
adcb
cmp
jge
or
xor
pop
push
mov
xchg
rclb
jge
mov
sbb
addb
lret
and
rolb
es
leave
push
sub
nop
enter
mov
nop
mov
xchg
lahf
add
cmp
cmp
loopne
ss
dec
dec
xor
orb
lahf
movsb
cltd
ret
aas
jbe
cmpsl
dec
test
xor
stos
ret
lods
fisubs
dec
cmp
cmp
dec
sbb
push
lea
mov
push
xchg
push
xor
les
mov
mov
jecxz
pop
lret
int
pusha
std
dec
enter
xor
call
scas
iret
xchg
leave
push
imul
ret
rcl
and
fstpt
adc
mov
loop
gs
in
fwait
jg
xor
xchg
ljmp
cwtl
out
sub
mov
cmc
repz
notb
clc
dec
stc
call
cld
jno
or
cwtl
sub
arpl
lahf
shlb
loop
push
movsb
push
in
jle
or
cmp
outsl
stos
sbb
inc
push
test
mov
mov
aam
sbb
jle
pushf
out
pop
mov
mov
sbb
loopne
lods
shrb
cli
jo
ret
inc
mov
sub
pop
xor
dec
xor
xor
data16
popa
aam
orb
fld
push
rcr
mov
push
inc
cmp
cmp
aaa
or
pop
dec
push
push
push
repnz
call
adc
dec
push
js
std
out
sbb
lock
mov
stos
hlt
push
icebp
push
arpl
in
cli
ret
jne
lock
add
pop
add
dec
add
adc
sti
dec
push
andb
outsl
inc
add
imul
or
sbb
loopne
adc
stos
js
sbb
xor
push
mov
jle
scas
mov
out
sbbb
xchg
mov
cmp
lea
xchg
mov
sub
xchg
fcoms
cmp
push
xor
mov
and
jg
mov
cmp
dec
in
cmp
cmpsb
inc
cltd
xor
push
add
mov
inc
div
scas
mov
mov
push
cmc
fisttpll
lock
pop
fdivl
mov
fldt
cmpl
xlat
std
pop
push
sub
xor
ss
adc
sbb
nop
into
dec
inc
pop
shlb
insl
lret
push
mov
jo
ret
xorb
xor
fnsave
jmp
jg
in
cmp
ljmp
jge
test
loopne
mov
xor
jle
inc
clc
inc
xchg
xchg
pop
xchg
inc
sbbl
std
adcb
add
std
pushf
sub
lahf
mov
or
pop
movsb
xor
mov
mov
inc
stos
adc
pop
loop
scas
adc
pop
mov
mov
sbb
mov
and
or
es
jne
sub
ret
inc
push
adc
pop
add
inc
int3
mov
dec
fwait
out
aaa
and
adc
aad
shlb
lret
dec
fiaddl
adc
and
xchg
loopne
inc
pop
xchg
dec
fadd
or
out
out
sub
das
out
inc
push
cmp
in
rolb
and
push
scas
adc
loopne
pop
fnstenv
lret
lods
pop
mov
clc
xchg
add
mov
bound
icebp
inc
fs
push
jmp
dec
jae
cmpsb
add
jmp
mov
pop
nopl
pushf
scas
jge
jb
cwtl
or
jbe
push
test
inc
adc
inc
repz
fcmove
adcl
xor
and
and
je
or
nop
jns
sub
pop
xchg
adcb
xor
sub
push
sahf
push
push
mov
in
mov
in
inc
cmpsl
jnp
hlt
test
cwtl
imul
ds
das
xor
repnz
and
mov
mov
push
call
push
mov
jns
pop
or
rcrl
pop
vpshufhw
enter
lret
gs
int
into
jmp
jmp
fcom
shll
push
jmp
jae
je
jne
aaa
ja
js
jae
jp
jnp
inc
jecxz
in
pusha
cld
jg
adcb
sbb
test
adc
and
outsb
mov
lret
cmpl
xchg
mov
mov
dec
jle
std
cwtl
ds
mov
add
mov
add
add
push
mov
push
or
inc
movsb
dec
daa
or
fsubl
adc
push
stos
repz
adc
loop
and
enter
mov
jnp
mov
add
sub
or
stos
and
mov
lret
lods
sub
ret
faddp
xor
pop
outsl
out
outsb
xor
or
and
sarb
rcr
loopne
aad
xchg
pop
xlat
or
xchg
inc
dec
inc
shrb
inc
xchg
inc
pusha
inc
pop
push
loop
jecxz
in
dec
mov
dec
out
jb
clc
push
ljmp
sbb
fisttpll
stc
repnz
dec
pop
arpl
aas
pop
pop
popa
pop
loope
inc
call
jb
std
ja
gs
outsb
add
add
into
add
add
add
adc
lahf
jb
push
ret
je
jne
jbe
dec
fwait
js
jns
and
adc
out
sbb
insl
sbbb
test
xchg
cmc
pop
outsl
imul
xor
mov
mov
sub
sub
cmc
xchg
addr16
cmp
daa
jno
sub
fisubl
std
sahf
cmc
lahf
push
aad
mov
sub
xor
add
test
mov
cmc
orb
shr
mov
cs
aad
mov
imul
xor
push
xchg
inc
push
sbb
popf
pop
insl
fwait
push
pop
dec
pop
push
imul
sbb
loopne
cld
leave
mov
aam
or
imul
outsb
dec
jmp
repnz
xor
pop
or
cli
pushl
ja
movsl
xor
sbb
add
jg,pn
xor
sub
test
mov
sbb
nop
jle
icebp
sti
and
pop
loopne
inc
nop
testl
mov
std
add
fimull
pop
lcall
mov
xchg
lahf
push
cmp
mov
push
nop
movsl
jge
call
mov
sub
mov
adc
mov
mov
mov
mov
in
pop
rolb
xor
jno
out
es
daa
sub
data16
sub
in
lds
test
ss
sub
xor
lret
iret
push
xor
cwtl
into
xor
shlb
cmpb
int
ds
mov
fstps
cmp
push
in
frstor
mov
loope
cmpsl
dec
push
dec
mov
sub
in
xchg
ljmp
mov
cmpsb
loope
arpl
repz
pop
cmc
sahf
aas
pop
scas
push
or
sti
mov
movsb
add
add
jmp
popf
push
cmp
pop
add
and
add
xchg
shlb
pop
sub
das
push
jl
jge
jle
sbbb
sbb
sbb
lret
test
xchg
dec
and
mov
cmp
sub
je
xchg
sub
mov
mov
negb
xor
sbb
ss
outsl
fldenv
push
cld
cmp
insl
movsl
and
inc
aaa
xchg
roll
cmp
add
inc
scas
arpl
dec
ret
imul
mov
sbb
mov
push
scas
and
inc
sar
xor
insl
les
fsub
test
lret
lret
int
sbbl
imul
fsubrp
aam
aad
mov
xlat
repnz
mov
fucomp
js
sub
pushf
jle
sbb
jle
jg
and
lock
test
test
sub
xchg
pop
out
adc
lret
jmp
ss
std
idivl
or
arpl
fldt
cltd
ja
add
inc
and
popf
pop
push
popf
lahf
sub
lods
mov
adc
cmpsl
fisubrl
dec
stos
lcall
outsl
push
dec
pop
or
or
xchg
adc
hlt
push
mov
adc
rcrb
push
test
shlb
inc
ror
sub
fwait
les
sub
mov
fdivl
enter
inc
repz
adc
shrl
cmp
push
cmp
push
inc
jp
sbb
rorb
ffree
mov
fbld
subl
adc
and
cmpsl
ljmp
inc
mov
mov
lock
pop
cltd
pop
sbb
xchg
cmc
fisubrs
pop
sbb
idiv
and
ficompl
mov
push
or
shrl
mov
xor
jmp
mov
cmp
adc
sarb
repnz
mov
jg
xchg
sbb
sbb
push
loope
insb
and
and
sub
daa
adc
pop
bound
out
xchg
rcll
stc
xor
stos
pushf
scas
popf
sbbb
mov
mov
ds
dec
cli
inc
push
cs
jmp
inc
push
inc
jmp
loopne
pop
mov
mov
mov
sti
pop
mov
cmp
push
int
push
mov
mov
pop
jp
ja
jno
cmpsb
stos
enter
lret
gs
int
pushf
push
shl
add
es
aam
dec
pop
out
imul
shll
push
xor
cmc
fisubrs
fistpll
jp
jnp
cmp
in
inc
sbb
jae
shr
ret
outsb
test
scas
push
xchg
out
push
dec
mov
inc
icebp
jmp
mov
jp
outsl
cmc
push
adc
in
stc
push
test
divb
mov
add
pop
cmp
mov
pop
sbb
movsb
sbb
sahf
cmpsb
cmpsw
subl
inc
loope
scas
cmp
test
mov
outsb
sbb
and
mov
sbb
push
inc
mov
rol
xchg
sbb
sub
dec
cs
dec
mov
and
xor
dec
cmp
xchg
sub
faddl
stos
fsubp
push
shl
loope
test
in
out
outsb
dec
scas
dec
jmp
ljmp
fs
inc
outsb
pop
push
push
hlt
pop
test
sub
fisubs
cmp
push
adc
movsb
data16
add
in
add
jo
sub
hlt
pop
or
loope
or
ret
pop
in
xchg
adc
sbb
jle
mov
xchg
movsb
sbb
test
in
xchg
int
daa
mov
xchg
nop
test
xchg
adc
push
xor
icebp
fbstp
lcall
aaa
mull
cmp
fcoml
cmp
push
inc
js
adc
jmp
aad
fldt
dec
or
pop
mov
bt
aas
mov
test
push
push
mov
mov
pop
sbb
jge
hlt
lahf
cmpsb
ret
into
shll
popa
cmp
addr16
pop
gs
out
into
push
test
subb
outsb
pop
pop
lock
addl
js
mov
imul
aas
adc
jns
shl
std
jl
jge
ja
mov
adc
jmp
clc
in
xchg
xrelease
imul
mov
mulb
xor
cli
dec
inc
and
dec
cmp
adc
inc
adc
pop
pushf
add
adc
imul
push
and
call
call
ret
pop
adc
dec
scas
icebp
insl
pop
sti
sbb
push
ret
mov
mov
push
push
ja
and
dec
xor
and
rol
js
sub
hlt
sub
scas
repz
sub
ss
mov
or
xor
xor
xchg
aam
sub
adc
mov
aas
pop
jo
fmuls
fsubrl
xor
cmp
inc
sti
ljmp
orl
ljmp
push
mov
fbstp
arpl
in
pop
cmc
lahf
aas
sbb
aad
inc
addr16
ljmp
add
push
push
xchg
jne
gs
pop
cmp
movsl
cmpsb
or
cmp
pop
xlat
adc
lcall
adc
inc
bound
cmp
jge
sbb
or
test
stc
and
or
pop
fisubs
xor
insl
xor
xchg
mov
push
add
mov
test
xor
xchg
shlb
jno
lahf
cmp
cmp
cmp
nop
inc
repnz
sbbl
inc
into
lahf
jbe
subl
dec
cmp
add
push
push
xchg
scas
inc
mov
mov
ffree
mov
cmpsb
mov
or
popa
aam
in
das
dec
scas
loop
out
and
lods
in
jno
insb
out
aam
aad
mov
lcall
fdivrl
emms
fisubrs
sbb
movsb
push
jge
ds
push
xorb
jmp
mov
xchg
inc
and
sub
mov
jae
adc
pop
xchg
jle
stc
and
sar
xlat
xor
adc
mov
daa
add
test
out
aas
es
movsb
dec
movsl
and
lods
mov
adc
aaa
fs
icebp
sub
sbb
mov
pusha
daa
mov
push
mov
xor
jb
cltd
xor
ret
push
add
lds
aam
jl,pn
leave
sub
dec
repz
xor
sbb
pop
mov
cmpl
cmpl
push
fnstcw
std
fldl
xlat
inc
xor
sbb
dec
jbe
xchg
dec
in
shl
call
add
add
push
out
sub
icebp
dec
push
or
pop
nop
cmc
idivb
testl
xchg
bound
adc
mov
lahf
add
pop
jno
add
outsb
stos
repz
jno
and
push
je
into
cmove
out
adc
adc
adc
jle
mov
fwait
mov
iret
test
jbe
xchg
adc
mov
je
pop
and
mov
popa
sub
notl
jbe
and
xor
sahf
aam
faddl
adc
cmp
pop
ja
out
test
shlb
or
dec
lods
std
lods
mov
cmp
pop
adc
in
xchg
mov
xchg
jecxz
push
add
mov
out
mov
repnz
jnp
push
in
scas
and
pop
lret
orl
int
xchg
push
mov
shlb
insl
aam
push
and
neg
jb
in
fisubl
jl
fcompl
ja
or
loope
dec
mov
aad
mul
push
imul
push
es
test
mov
insb
mov
and
idivl
inc
dec
stc
mov
loopne
js
xchg
jo
pusha
cmp
std
and
iret
mov
sahf
ja
push
pop
mov
loope
jb
or
jp
cli
test
fdivl
stos
pop
stos
outsb
push
adc
gs
int3
scas
or
sbb
xchg
ficomps
lahf
and
mov
and
cmpsb
push
jb
ret
out
sub
imul
add
xor
xor
int3
rcll
jg
push
shlb
jg
repz
aam
dec
cmp
cmp
icebp
xor
mov
jmp
inc
mov
mov
mov
jecxz
fadd
in
out
out
add
out
jge
repz
xor
rcll
dec
jo
icebp
jne
out
in
jns
cmc
ret
cmp
clc
mov
sti
inc
fisubs
push
lret
lea
pop
add
cld
or
add
popf
mov
or
xor
or
push
outsl
fwait
cltd
adc
aas
outsl
adc
adc
jnp
jl
mov
jle
jmp
sbb
jb
pop
nop
and
cli
orb
adc
test
clc
push
sub
xchg
movsl
xchg
push
test
xchg
sahf
and
cltd
mov
sub
xchg
outsb
sahf
cmp
mov
leave
mov
aas
cmpsb
pop
inc
insb
mov
push
mov
insl
inc
xor
lods
xchg
scas
stc
scas
xor
push
mov
mov
in
add
push
addr16
mov
std
mov
mov
mov
pop
xchg
sub
cmp
pusha
leave
shr
leave
mov
jp
int
sub
xor
dec
bound
cltd
outsb
xchg
fcom
repnz
movsb
pop
mov
jne
pusha
fnsave
push
test
leave
loope
loop
lret
jge
in
add
orl
xchg
adc
icebp
ret
mov
mov
test
in
stc
sti
pop
xchg
popf
xchg
xor
cwtl
push
add
fnstcw
pop
in
and
movsl
out
outsl
aas
in
bound
sbb
mov
and
rcrb
mov
lods
mov
mov
hlt
sbb
or
cltd
mov
xor
shlb
jecxz
sub
add
xor
ret
jb
pop
pop
lds
outsl
das
inc
xor
rcrb
push
xor
ss
shrw
or
cmc
push
xlat
mov
std
dec
inc
fisubrl
mov
inc
pop
sbb
lea
dec
or
dec
push
dec
jmp
sti
ljmp
push
in
or
push
popa
sbb
fdivl
div
imul
notl
scas
daa
mov
in
fs
jmp
mov
adc
push
imul
cmc
or
or
call
addr16
ja
ljmp
adc
push
mov
adcl
push
xchg
inc
xchg
xor
dec
mov
sbb
orb
xchg
inc
subl
xchg
push
xchg
fisubs
push
cwtl
mov
pop
xor
jns
lahf
mov
cmp
mov
inc
test
cmpsl
mov
stos
jb
loop
push
dec
ret
mov
sub
arpl
fcmovb
mov
fs
push
cwtl
mov
fsts
fidivrs
mov
jae
pop
rcrl
add
sahf
rclb
bound
cs
rcll
jmp
dec
imul
shrl
daa
mov
xchg
jmp
insb
adc
cmc
loopne
mov
jge
mov
out
das
xchg
jmp
test
add
xlat
ja
dec
mov
hlt
scas
cmc
inc
mulb
adcb
xchg
inc
cwtl
decl
ret
add
push
pushf
dec
in
pop
sahf
pop
add
mov
jne
jnp
or
jbe
scas
or
xor
pop
data16
cld
repnz
bnd
push
cmp
sub
mov
in
and
les
aas
mov
cmp
mov
lahf
aaa
es
sub
inc
pop
ret
or
in
idivb
or
cwtl
leave
das
adc
loop
xor
fs
xor
adc
jnp
scas
aam
aad
fdivrl
rolb
sub
js
daa
fistps
loop
sbb
mov
lret
jmp
notl
jmp
clc
enter
scas
mov
pop
clc
sbbb
testb
iret
clc
or
sti
cli
gs
andb
orb
push
add
jnp
pop
or
or
push
push
movswl
mov
adc
lret
jp
int
jle
sbb
dec
sbb
sbb
xchg
cs
scas
mov
lea
cmp
mov
xchg
xor
xchg
rorb
das
jns
aam
ret
jbe
add
aaa
loop
lahf
mov
test
mov
lahf
test
cld
stos
xchg
lcall
icebp
dec
mov
popa
pop
push
dec
mov
into
add
xor
add
push
sbb
push
cmpsb
icebp
pop
pop
fdivp
stos
pop
ret
ret
scas
pop
repz
mov
bound
leave
mov
arpl
jle
shll
insb
outsl
mov
jo
jno
add
jae
je
sub
addr16
lods
fidivrs
or
sbb
pop
jge
jle
add
test
nop
test
mov
shl
sti
icebp
out
repnz
inc
mov
out
xchg
adcb
xchg
cmc
push
or
jle
cmp
add
add
fisttpll
mov
mov
cmpsl
fwait
mov
adc
adc
scas
addl
mov
imull
mov
pop
inc
mov
adc
mov
es
xchg
ret
push
cmc
lds
enter
xchg
xor
push
push
popf
int
mov
cmp
inc
cmp
cmp
push
cld
cmp
flds
movsb
jg
faddl
lret
fidivrs
inc
mov
dec
aaa
and
out
out
stc
dec
gs
pusha
das
push
mov
jnp
les
out
push
iret
push
jb
pop
pop
inc
pop
ret
pop
div
sub
clc
xchg
and
arpl
orl
mov
movsl
push
adc
inc
or
xchg
jb
jae
or
setp
and
push
adc
adc
mov
dec
ljmp
cmc
addb
lea
jl
add
mov
sbb
subb
jp
xchg
push
fisttpl
sub
xor
iret
fwait
stos
pushf
loop
sbb
cmp
cmp
hlt
cmp
inc
inc
rolb
data16
stos
jnp
inc
insl
inc
dec
sbb
dec
adc
push
repz
mov
mov
adcl
jb
mov
ficompl
mov
lock
pop
add
adc
mov
add
dec
mov
lea
sub
shll
push
imul
imul
push
xlat
dec
data16
jae
je
push
fdivrp
inc
jmp
and
jnp
shl
test
dec
jg
or
call
pop
rcrl
xchg
call
cmp
mov
push
dec
lea
mov
push
cmp
es
psubq
scas
xchg
mov
lcall
mov
mov
or
ficomps
cmpsb
stos
leave
je
test
shrb
out
push
jbe
setg
jge
std
mov
outsb
add
stos
and
xchg
daa
inc
outsb
ret
jmp
jmp
push
pusha
das
ja,pn
js
leave
movsb
xor
shl
pop
cmp
sbb
aam
movsl
lea
fnstcw
push
inc
in
and
mov
scas
mov
in
in
out
and
call
push
es
movsb
cmp
mov
push
out
mov
repnz
mov
sbb
jecxz
popf
mov
cmp
std
popf
cwtl
out
daa
mov
push
movl
mov
insb
aas
out
pop
mov
outsl
out
stos
mov
mov
mov
orl
pusha
adc
adc
jnp
xchg
test
pop
jle
popa
inc
andb
sbb
pushf
inc
push
das
test
mov
jmp
mov
adc
sub
sub
ja
mov
xchg
call
iret
xor
xor
xor
aaa
adcb
dec
jb
lahf
out
addr16
cmp
mov
scas
cmpsb
inc
cmpsl
lret
jp
dec
inc
je
lods
repz
scas
mov
xchg
mov
sub
adc
fmull
dec
mov
mov
mov
dec
lods
enter
jno
mov
stc
mov
xor
addr16
lods
pop
movb
les
mov
push
xor
into
adc
insb
lds
addr16
daa
sub
jle
xlat
mov
ret
ss
pop
fidivs
fbstp
mov
les
cmp
sbb
popf
inc
out
jmp
mov
or
mov
or
or
mov
sti
repz
xchg
int
cmp
roll
ffreep
fwait
pop
pop
add
jo
sarl
mov
cmp
push
xor
adc
adc
aam
add
and
sbb
fbstp
test
pop
and
das
pop
mov
add
sar
sub
ret
mov
sub
daa
enter
lret
xor
fs
ss
aaa
stos
cmp
cmp
sub
dec
aas
fnstenv
cli
inc
jb
out
fisttpll
loopne
inc
sub
dec
add
out
roll
inc
xchg
push
cltd
out
std
in
and
jge
shrb
sbb
xchg
movsl
out
jmp
inc
sti
bound
outsb
push
stos
adc
out
imul
inc
push
rcrb
inc
outsl
out
jo
jno
in
jne
or
jbe
loope
mov
push
and
insb
sbb
push
cmpb
and
fildl
sbb
and
push
mov
lea
sub
adc
cs
lods
jmp
xor
outsl
sti
out
cli
and
lahf
cmp
mov
cmp
sub
mov
test
inc
dec
aad
inc
or
xchg
dec
mov
jp
movsl
pop
dec
mov
mov
dec
push
mov
add
mov
pop
sub
pop
aam
push
pop
pop
mov
rorb
popa
cld
bound
out
int3
data16
or
imul
mov
scas
test
sbbb
in
enter
ja
xor
jns
xchg
loope
and
pop
in
incb
out
add
jmp
test
out
jmp
push
push
icebp
mov
and
push
hlt
jmp
imul
stc
xchg
xchg
insb
cld
and
lcall
aad
sbb
push
adc
sahf
lret
pop
movsb
negb
xchg
cmpsb
scas
cmpsl
flds
stos
push
mov
jmp
les
sbb
jle
sbb
push
inc
cmpsb
mov
and
repnz
rclb
pinsrw
mov
fcmove
xor
outsl
sahf
xor
roll
xor
cmp
xlat
cs
aas
sbb
aas
inc
mov
addb
call
dec
push
add
ja
dec
cltd
fbstp
call
push
push
push
movsl
std
fldt
out
sub
pop
comiss
jg
pop
arpl
imulb
fidivs
mov
gs
gs
add
fwait
stos
test
push
movsl
add
outsb
dec
outsl
jl
icebp
jno
fisubrs
loopne
push
sub
fsubrl
jns
inc
adc
and
xchg
cmp
sub
push
and
or
xchg
mov
jbe
mov
mov
outsl
jp
es
bound
mov
orb
out
cmp
outsl
add
mov
ret
cmp
cmp
cmpsb
sub
jle
inc
leave
stc
stos
xor
filds
sub
dec
je
daa
lds
mov
jmp
lcall
mov
push
pop
mov
add
pop
xlat
jae
pop
and
inc
sub
push
or
cmpsl
stos
pushf
leave
adc
lret
gs
push
dec
sub
je
pushf
aam
aad
sbb
mov
flds
jno
lcall
ja
andl
jmp
jle
hlt
std
daa
inc
sub
ja
xor
addr16
xchg
or
fdivp
pop
and
repnz
repz
hlt
jo
ret
mov
xchg
das
mov
cmp
sarl
jo
add
leave
in
pushf
pusha
push
add
out
lahf
shlb
into
inc
or
or
test
jl
pop
lods
jne
adc
out
jecxz
aas
out
add
and
jle
and
mov
sbb
xchg
mov
ret
movq
xchg
mov
sub
leave
cli
jae
lret
lahf
imul
mov
xchg
ror
int
sarb
xchg
jg
cvtps2pi
ljmp
pusha
inc
aas
shrb
adc
loopne
imul
in
decl
movzwl
mov
sbb
and
addr16
lock
repnz
xlat
icebp
hlt
aad
divb
xor
ret
stc
pusha
nop
ds
mov
out
push
mov
ss
or
and
or
rcll
jl
push
sub
lods
jno
mov
jg
gs
pop
add
in
test
mov
and
xor
data16
jle
dec
add
mov
in
dec
xchg
mov
imul
scas
lcall
lds
xchg
mov
enter
xchg
js
dec
dec
test
mov
inc
adc
sbb
mov
or
jno
jecxz
push
add
loopne
and
mov
mov
and
mov
push
insl
les
or
andl
or
sbb
mov
fadds
dec
mov
fnstenv
idivl
lahf
mov
xor
sub
in
out
out
das
jae
pop
ljmp
xchg
stos
fcomip
cmp
cmpsl
hlt
mov
cli
mov
cmp
mov
xchg
out
mov
cld
lcall
push
pop
addr16
or
add
mov
cmpsb
clc
movsb
push
rorl
or
or
loope
stos
call
pop
adc
push
sbb
sbb
fwait
mov
fs
mov
mov
and
daa
mov
fsubrs
cmp
mov
push
leave
movsb
pop
xor
xor
xor
repz
cmpsb
shlb
mov
push
shrl
cmp
cmp
fldenv
jg
nop
fmull
inc
mov
fildll
mov
add
ficoml
cmc
ljmp
push
push
outsb
out
scas
lock
pop
jns
repz
lods
pop
or
pop
sub
decl
mov
loopne
and
gs
push
add
out
aaa
push
mov
xchg
xchg
outsl
xchg
jo
jno
pop
mov
or
xchg
adc
add
jmp
sub
mov
jl
jno
jle
fstpl
test
sbbl
test
cmp
cmpsl
and
xchg
and
rorb
xchg
nop
sub
mov
lret
xchg
sub
xchg
test
xor
lret
divl
shl
ret
mov
cmp
movsb
pop
jecxz
cmpsb
sbb
and
cmpsl
stos
xchg
fs
lods
dec
fisubrs
sti
add
mov
mov
xor
mov
sub
mov
pop
ret
mov
add
mov
xchg
lret
adc
add
or
fldcw
insb
mov
inc
push
aad
ret
and
cmpl
push
sarb
call
loop
xlat
cli
in
loopne
ds
addl
xchg
data16
repnz
daa
lea
cmc
push
xchg
xchg
pop
xchg
mov
cli
mov
adc
sahf
pop
lods
lcall
add
repz
cmp
and
jnp
mov
cmpsb
xchg
cmpsl
fwait
inc
mov
out
lods
dec
and
adc
mov
sbb
ret
mov
pushf
push
xor
lea
mov
repz
mov
sbb
lds
sub
pop
xor
push
xor
xor
mov
stc
jno
shlb
mov
iret
out
scas
ds
xchg
xchg
jle
mov
lcall
dec
fs
mov
loope
in
out
xlat
out
call
and
ret
sti
push
xchg
insl
out
mov
ret
pop
pop
dec
cmp
pop
push
clc
lods
stc
dec
jb
dec
cld
cwtl
dec
movsl
scas
gs
inc
push
add
je
insb
ljmp
dec
or
or
xchg
jae
mov
adc
daa
adc
js
add
sti
pop
mov
pop
popf
add
cmpb
and
push
and
xchg
or
aas
shlb
aas
lock
dec
sub
push
xchg
jno
in
xchg
lcall
cltd
cmp
xor
mov
sahf
pusha
outsl
cmp
mov
hlt
inc
add
stos
inc
mov
inc
insb
inc
int3
mov
dec
mov
dec
push
xor
push
dec
js
pop
into
add
xlat
mov
push
lret
mov
pop
out
mov
pop
pop
cltd
lds
movsl
stc
popa
mov
arpl
fs
ror
mov
shl
cmp
or
shrb
aad
loop
jmp
repz
fsubr
mov
lods
js
shl
jp
lret
es
jecxz
in
cltd
jg
cmpb
fldt
push
test
into
out
jne
xchg
mov
repnz
addr16
test
test
fs
jb
cwtl
nop
and
push
add
ss
mov
xor
icebp
aad
dec
daa
adc
sbb
or
pop
jle
inc
adc
adc
push
mov
xchg
xor
pusha
ficomps
pop
inc
out
xor
pop
jo
pop
add
mov
jg
and
into
fisubl
add
jns
nop
sub
les
and
jno
lret
mov
xchg
sbb
push
iret
sbb
push
pop
lock
imul
vpcmpgtd
xlat
mov
aas
xlat
adc
push
fldl
inc
sub
pop
inc
mov
je
jecxz
dec
adc
or
dec
mov
xor
push
push
addr16
cmp
mov
xor
cmp
bound
pop
sub
adc
bound
dec
jbe
stos
lods
mov
mov
add
jg
push
imul
nop
jb
sub
mov
ja
js
pop
adc
jnp
xchg
push
pop
add
and
sbb
dec
rcrb
stc
xor
mov
pop
and
push
stc
push
sub
js
and
mov
xchg
xor
xchg
pusha
fnstenv
mov
les
outsb
cmp
sbbl
test
inc
sbb
icebp
enter
mov
jbe
shrl
in
cmp
pop
add
xlat
mov
out
inc
push
scas
lret
sbb
ficoms
sbb
pop
ds
pop
ret
lahf
push
rol
xor
leave
jg
fs
push
int
into
imul
je
adc
shrl
and
in
call
add
fdivl
lods
and
push
loopne
mov
loop
jecxz
scas
sbb
push
out
xor
call
sub
rcrb
xchg
ljmp
repz
xchg
es
or
and
xchg
ljmp
in
scas
lock
out
fcoms
xchg
imul
mov
dec
push
jns
clc
cmpsb
jne,pn
push
pop
ficoml
jg
ficoml
popf
dec
cmpsl
adc
fisubrl
sbb
test
sbb
sbb
sbb
mov
sarl
jbe
xor
cmp
ret
sub
dec
or
sub
sub
sbb
loopne
cltd
rorb
cmp
in
inc
cmp
ljmp
jp
dec
inc
pop
inc
mov
jne
inc
psrlw
fabs
xchg
mov
dec
in
sbb
out
dec
popa
enter
push
jmp
imul
out
gs
fdivl
pop
inc
mov
and
popa
xor
dec
decb
data16
jnp
fcom
aam
add
sbb
xor
jnp
je
or
or
jbe
push
sbb
jbe
rclb
and
ret
sbb
sbb
and
lods
sbb
sbb
sbb
data16
and
push
xor
sub
dec
sub
push
xchg
add
xchg
insb
mov
loope
outsb
mov
dec
je
cmp
push
mov
pushf
idiv
inc
testl
jge
stos
lods
xchg
xlat
inc
leave
cltd
scas
stos
mov
xchg
aaa
jne
xchg
mov
je
or
fistpll
std
mov
pop
andb
pop
fstpl
cmp
add
lret
gs
int
xor
aam
dec
mov
and
outsl
es
xlat
out
lret
jb
fcmovnu
faddl
insl
fidivrs
in
or
loope
push
es
sub
decl
subb
test
daa
sbb
in
mov
sub
repz
je
nop
or
dec
stc
xchg
js
loopne
cld
xlat
inc
xchg
sbb
rolb
add
addr16
fst
pushf
sahf
les
mov
or
aad
mov
mov
dec
sub
pop
mov
scas
push
dec
outsb
mov
stc
xor
xchg
xchg
sbb
loop
pop
and
mov
sbb
ljmp
jnp
ret
sub
and
repnz
xor
xor
in
ror
push
dec
cmp
negl
aam
pop
cmp
sub
mov
inc
fldl
inc
out
leave
and
jb
in
push
dec
dec
mov
xchg
jns
add
push
out
into
dec
adc
clc
out
jp
pop
sub
push
enter
cmc
out
pop
push
pop
imul
or
add
rcl
add
pop
sbb
outsb
mov
loope
or
jae
addl
ja
pusha
cltd
popf
adc
adc
js
xor
loope
fimull
dec
sbb
sbb
jge
lahf
mov
pop
and
adc
fisubs
insb
sub
xorb
xchg
sub
clc
jbe
imul
mov
fwait
mov
aam
outsl
dec
push
lahf
into
mov
cmp
jbe
cmp
mov
inc
je
ret
inc
push
inc
addl
inc
int
dec
push
xchg
mov
xor
mov
or
push
inc
push
es
xor
mov
ss
push
fistpl
pop
sub
cli
ds
std
bound
xchg
pop
adc
xchg
sub
insl
dec
imul
jbe
xchg
mov
outsl
jmp
pop
ljmp
ds
push
fiadds
loopne
jp
dec
ja
jmp
mov
addb
cmp
int
icebp
bound
adc
popf
and
cmc
cmc
loop
jb
clc
sar
call
cld
xchg
call
and
push
add
shlb
mov
ret
aad
test
push
mov
xor
repz
adc
mov
repnz
mov
pop
sbb
aas
mov
mov
and
les
mov
fcmovb
leave
outsl
sub
cld
xchg
cs
and
or
xor
aam
aaa
shll
enter
cs
xor
fadds
inc
fidivl
mov
test
dec
inc
fnsave
jecxz
cli
loopne
lods
xchg
mov
dec
stc
cltd
xchg
mov
push
push
in
addr16
out
js
push
mov
repz
jmp
xor
negb
mov
cli
mov
lock
mov
mov
add
add
or
push
push
inc
movd
cmp
std
jae
decb
jnp
dec
adc
js
addr16
lea
cltd
jl
jge
iret
mov
pop
cmpb
cmpb
dec
adc
dec
in
lock
xor
and
jae
push
mov
inc
arpl
sub
sub
add
cltd
cmpsb
xchg
xor
insl
mov
scas
nop
and
mov
shrl
xlat
fs
test
movsl
inc
addr16
out
fs
or
pusha
cmp
out
dec
fs
orb
mov
push
lcall
jne
inc
jp
pop
or
mov
ret
mov
dec
mov
pop
aaa
int
jno
inc
test
push
data16
dec
outsb
test
mov
xor
dec
fisttpll
cli
adc
das
daa
dec
loop
jecxz
fcmovu
in
out
or
xchg
jmp
sub
xchg
mov
lock
lcall
mov
or
in
int
je
xchg
jb
cli
loope
lcall
sbb
push
mov
and
movsl
add
or
insl
cltd
stos
cmp
xchg
lods
movb
jg
xchg
mov
mov
add
adc
sbb
sbb
jb
xor
pop
sub
es
mov
inc
ret
stos
pop
sub
out
sub
les
lret
push
in
xor
xor
mov
out
std
sarb
aad
shlb
fcomp
inc
jmp
fldl
xor
adc
mov
in
fcmovb
out
call
push
and
sahf
out
or
or
icebp
push
cmp
mov
mov
add
clc
mov
icebp
cld
cmp
fs
xchg
xchg
add
mov
push
mov
adc
bound
outsl
sbb
jb
and
je
jmp
cwtl
test
mov
call
inc
xchg
jle
adc
or
imul
mov
adc
es
sub
jbe
xchg
mov
mov
cs
das
mov
es
mov
pushf
ss
icebp
cmp
cmp
testb
roll
cmpsl
inc
clc
inc
dec
inc
sti
xchg
ret
fnstcw
jnp
or
ja
push
mov
mov
push
xchg
and
mov
xchg
lods
rcrb
jl
fnstsw
hlt
pop
inc
pop
pusha
pushf
fcmove
mov
lahf
test
pop
rcrl
sarl
insl
mov
aad
xchg
notl
jno
arpl
mull
insl
ffree
js
idivl
jp
out
jl
adc
js
jg
andb
jmp
outsb
in
mov
mov
mov
sub
nop
movsl
xchg
clc
dec
pop
mov
imul
ja
lcall
add
push
or
jns
pop
or
cmpsb
loopne
sahf
test
out
mov
adc
sbb
out
scas
lahf
mov
sub
arpl
push
mov
push
push
std
pop
and
pop
stos
mov
mov
inc
daa
mov
iret
les
sti
mov
and
imul
lret
mov
xor
fcomip
rclb
xor
ret
aam
aas
pop
leave
les
repz
mov
xchg
cltd
loop
mov
in
in
jb
out
push
push
aas
push
loopne
jmp
in
vphsubdq
out
add
push
sbb
repnz
pop
mov
pop
dec
pop
jl
stc
ss
xor
cld
scas
lret
fs
insl
call
and
jbe
cmpsl
adc
orb
int
mov
je
sti
pcmpeqd
js
lret
testb
popa
sub
jecxz
push
adc
xchg
ds
and
mov
xchg
es
sbb
sub
sub
add
aas
xchg
mov
xor
cwtl
xor
sbb
aas
in
out
sbbb
addr16
mov
test
dec
cmpsl
inc
xor
pusha
stos
shrl
cmp
mov
mov
mov
js
mov
mov
lret
mov
push
outsb
mov
mov
mov
pop
pusha
pop
xor
pop
sub
mov
enter
lret
repnz
imul
insb
roll
adc
sbb
movsb
jne
lods
frstor
loopne
loope
jecxz
in
jecxz
mov
jmp
test
lret
adc
mov
inc
lret
pop
mov
push
clc
mov
cli
mov
cld
es
add
or
stos
add
sbb
mov
mov
add
stos
push
cmpsb
adc
adc
movb
pushf
cli
mov
mov
mov
fcompl
or
addr16
mov
lea
and
ror
mov
int3
js
sub
scas
loope
ljmp
inc
xor
rorl
xor
arpl
mov
dec
pushf
add
mov
xchg
rcl
push
in
push
add
inc
or
cwtl
push
xorl
dec
push
dec
es
cwtl
out
imul
mov
in
cltd
out
xor
pop
xchg
pop
lods
pop
mov
imulb
xor
pusha
lds
mov
scas
std
movsb
mov
add
hlt
imul
mov
or
out
or
mov
or
push
jne
js
lods
ds
lds
jecxz
aad
jl
dec
pop
jle
sarl
xorl
popa
xchg
push
mov
jne
scas
daa
cmp
jg
cmp
sub
and
call
push
lcall
sti
sahf
mov
jo
mov
pushf
dec
aas
ds
inc
repz
pop
inc
fdivrl
lods
push
jns
loop
mov
push
dec
cmp
mov
pusha
push
mov
and
xlat
push
call
push
into
push
push
movsl
mov
pop
push
out
pop
pushf
hlt
add
pusha
fbstp
sub
fmul
push
int
into
cmp
insb
inc
insl
sub
and
lods
lret
jae
push
test
xor
xchg
push
loope
xor
push
dec
out
out
sbb
adc
jmp
out
xor
push
les
icebp
mov
leave
repz
fldt
cwtl
xchg
ljmp
mov
cwtl
decl
scas
lcall
add
add
popf
clc
ret
or
or
or
jmp
stos
sub
adc
cs
push
and
jmp
inc
xchg
mov
mov
jo
stc
mov
and
mov
sub
push
push
sub
movsl
push
xor
push
lahf
int
sbb
ss
sarl
repz
xor
adcb
inc
das
mov
sbb
mov
inc
inc
sbb
mov
xchg
adc
and
dec
mov
dec
outsl
jmp
lock
push
je
out
imul
enter
jne
and
div
imul
lcall
bound
adc
pop
ret
mov
imul
mov
outsl
enter
jl
push
xchg
or
push
ja
enter
cltd
adc
mov
je
cwtl
jle
and
xor
orl
bound
xchg
push
dec
mov
mov
fbld
cmpsl
pop
jnp
nop
sub
dec
xchg
add
arpl
test
jmp
mov
xor
aas
cmp
inc
push
cmp
and
pusha
movsl
fstpl
shll
lods
popa
mov
orb
dec
addr16
mov
mov
lea
fimull
out
mov
daa
lret
mov
push
cmp
mov
mov
ret
scas
les
lds
call
fs
push
into
imul
insl
and
or
mov
xlat
shl
fldenv
je
test
jbe
in
fidivrs
jmp
loop
into
jge
cmp
jg
popa
adcl
and
cltd
out
cli
cmp
mov
loop
mov
mov
pop
xchg
orb
sti
test
cwtl
lods
out
add
add
push
popf
jg
fldenv
mov
mov
add
xchg
test
adc
lods
loop
inc
add
push
pop
dec
sbb
cmp
out
sbb
gs
mov
aam
and
es
dec
shrl
cmpsl
ret
adc
lds
inc
into
test
and
rcrl
cmp
cmp
aam
addr16
push
sarl
xlat
aas
sub
cmovno
inc
cmp
js
loopne
inc
dec
dec
or
dec
insl
fxam
xchg
out
jb
call
sbb
inc
in
shr
lret
out
addr16
pop
imul
pop
repz
sbb
daa
clc
movsb
in
cli
push
adc
inc
std
jns
xchg
cmp
push
add
mov
fisttpll
jg
xor
in
or
inc
push
pushl
jbe
leave
enter
loope
adc
cmpsl
push
mov
in
push
sbb
mov
push
test
test
and
lea
push
jle
out
test
mov
jb
pop
xor
jne
push
xor
test
sahf
cmp
push
inc
cmp
in
add
or
test
mov
stc
dec
fsubrl
pusha
fimull
dec
mov
out
test
push
mov
mov
and
out
push
fwait
sarl
pop
arpl
stc
ds
mov
pop
out
and
bound
jg
sbb
mov
loop
push
mov
int
out
aad
cmpb
jb
jae
or
jne
push
lock
movsb
jns
jp
divb
jle
jg
mov
dec
adcb
or
in
sub
orl
stos
movsl
mov
notb
or
ss
mov
pop
std
fldenv
push
add
lods
rolb
into
sub
mov
scas
fisttpl
arpl
repz
lea
stos
scas
xchg
mov
cmp
lcall
in
std
gs
fsubs
sbb
and
cld
and
sbb
add
in
sub
outsl
ret
xchg
les
sub
leave
add
push
push
cltd
int3
int
into
jnp
int
cmp
add
aam
mov
ds
xchg
fnstenv
sub
inc
fwait
inc
pop
lea
loope
loop
jp
cmp
push
push
cmovg
push
cmp
jp
push
or
sub
push
jbe
inc
xor
outsb
negl
data16
push
push
lret
stc
pusha
imul
mov
add
cmp
add
js
enter
jb
adc
jno
add
adc
cmovnp
ja
js
xor
imul
and
jle
imul
flds
adcb
pop
mov
sbb
and
and
add
mov
sub
dec
sbb
imull
out
xchg
rcrb
push
xor
addr16
xchg
mov
ljmp
adcb
jecxz
test
inc
add
adc
cmpsb
dec
mov
mov
dec
into
dec
push
cmp
push
xchg
mov
cs
mov
mov
xchg
movsb
outsl
shll
inc
pusha
push
popa
pop
xchg
arpl
fs
loope
adc
xchg
mov
imul
shrl
outsb
mov
inc
hlt
sub
jb
xlat
jo
fcomi
sub
inc
mov
fists
loop
mov
jg
or
mov
addb
cmpsl
xchg
mov
outsb
icebp
js
adc
xor
push
xchg
pop
xchg
xchg
sti
enter
xchg
jne
jns
outsb
jecxz
jmp
inc
add
sahf
out
add
mov
or
sbb
test
bound
inc
stos
jecxz
and
adc
sub
mov
mov
xchg
sbb
int3
std
out
shlb
cltd
mov
adc
test
stc
es
es
sub
inc
dec
sub
sahf
sti
mov
mov
sub
sbb
int
pushf
xor
or
rcl
shll
mov
aas
xchg
add
adc
fiadds
adc
sbb
dec
in
scas
dec
xchg
adc
mov
push
jne
daa
push
out
popf
dec
movsl
dec
push
dec
popf
repnz
outsb
pop
pop
jecxz
ret
hlt
pop
push
xor
xor
mov
cmp
imul
fildl
add
add
and
xor
pop
jb
jae
je
or
cmp
ds
jns
fsts
adc
cwtl
out
mov
sbb
sbbl
enter
xchg
mov
and
clc
mov
pop
mov
arpl
sub
imull
mov
jbe
sub
mov
iret
aad
out
xor
sahf
lock
push
mov
fldenv
popa
stc
inc
cmp
test
xchg
inc
lods
mov
ljmp
test
dec
mov
mov
cltd
in
fnstsw
pop
pop
push
mov
imul
out
je
add
mov
mov
das
fs
mov
xchg
in
iret
push
mov
shl
inc
insb
or
lcall
fsubs
jae
int3
pop
jne
pop
fucomp
inc
imul
mov
jl
dec
in
inc
jmp
pop
sub
jne
jmp
add
and
mov
nop
repz
xchg
imull
xchg
sti
push
out
sahf
xchg
rcrb
add
lahf
sahf
imul
movsb
shll
xor
push
test
mov
adc
sub
ret
jns
ljmp
ret
std
mov
loopne
or
mov
pop
imul
pop
cmp
loop
inc
xchg
add
nop
lds
subl
scas
lret
ficoms
mov
rcl
pop
in
cli
jb
adc
cmp
push
in
inc
fildl
jno
sub
pusha
inc
cmp
inc
lea
loop
rorb
inc
in
aam
ret
jmp
ret
push
in
xor
push
aam
lock
jb
pop
sub
mov
movsb
mov
pop
xchg
push
jb
mov
cmp
mov
idivl
pop
mov
push
xchg
mov
pop
or
or
dec
add
mov
test
mov
mov
cs
sbb
jb
loopne
or
adc
rorb
pop
pop
lea
xchg
hlt
and
sub
jge
jno
cwtl
xor
sti
pushf
xor
ljmp
push
cwtl
mov
scas
cltd
cli
movsb
frstor
inc
pop
jbe
dec
int
stos
shrb
push
jb
inc
mov
mov
dec
dec
xor
divb
cmpsl
xchg
push
js
and
das
mov
push
stos
ret
pop
pop
cld
lds
inc
push
dec
nop
jmp
aaa
lret
pop
int3
xor
add
xor
fcomip
insl
into
outsb
push
jmp
inc
rcrb
jae
cmp
setg
data16
jns
push
mov
or
stos
out
inc
addl
inc
dec
in
xchg
mov
repnz
or
stos
pop
mulb
mov
xchg
pusha
xchg
and
cld
mov
fsubl
lcall
aam
add
mov
or
pop
movsl
je
scas
cmpsl
in
lcallw
stos
dec
lods
loope
icebp
scas
inc
scas
push
mov
mov
nop
or
xchg
clc
inc
pop
and
mov
and
xchg
sbb
and
push
sub
les
insb
pop
sub
test
xor
sti
outsl
mov
sub
push
cmp
cpuid
fs
fnstcw
fcoml
out
stos
sub
jne
dec
data16
dec
ucomiss
mov
ds
dec
jmp
push
into
jo
push
xchg
das
out
push
addr16
shrl
outsl
jmp
pop
ljmp
add
pop
bound
std
popf
gs
lahf
add
and
imul
insb
aam
shrl
inc
or
or
ret
test
or
xchg
push
ja
adcl
arpl
jnp
mov
rclb
sbb
fiaddl
xchg
js
mov
and
or
sbb
xchg
test
fcoml
sar
xor
xor
sahf
jle
cmp
testl
cmpsb
inc
mov
les
imul
xor
arpl
loop
mov
mov
mov
pop
dec
outsb
pop
fisubs
cmpsb
push
nop
mov
fistl
outsl
pop
rolb
into
loopne
inc
inc
xor
dec
pushf
addb
fisubl
fs
int3
jg
movsb
jge
imul
cmp
outsl
mov
xchg
jno
loop
rcr
fistpl
xor
dec
into
loopne
jmp
sbb
in
cmp
inc
addl
pop
lahf
test
daa
in
mov
and
add
lcall
jns
cmp
xchg
xor
cltd
in
add
add
sbb
mov
mov
inc
movsb
or
bound
mov
stos
mov
iret
adc
adc
mov
frstor
out
mov
push
push
lods
pop
dec
mov
aaa
call
mov
mov
je
repz
ret
jl
xor
mov
std
data16
sub
adc
sarb
das
add
dec
xlat
clc
mov
enter
xor
outsb
fldl
in
inc
out
mov
jecxz
in
jmp
inc
jae
lods
mov
mov
push
popa
push
pushf
push
int
out
cmp
icebp
ret
rep
xchg
pop
mov
pop
dec
push
pusha
cli
call
fs
push
out
add
lock
add
push
adc
insb
cmpsl
insl
pop
outsb
mov
or
fisttpll
sub
mov
ss
leave
push
jnp
jl
in
jle
lret
sbb
push
mov
jo
mov
mov
xchg
lea
xor
xchg
sub
xchg
xor
fstps
xor
sbbl
mov
movsl
scas
cmpsb
in
jg
je
imul
xor
dec
dec
cli
mov
in
imul
dec
mov
out
add
mov
out
popf
pop
rolb
retw
mov
pop
adc
xor
and
jmp
iret
in
or
int3
dec
repnz
sub
mov
jo
inc
test
movsl
or
jo
xor
fistpll
lock
dec
loop
xchg
in
mov
inc
stos
xchg
jecxz
test
cld
enter
decb
decl
imul
stc
ja
xchg
sti
pushf
insl
ss
neg
aam
cltd
cltd
mov
add
jle
lahf
push
sbb
mov
movsb
inc
and
daa
je
adc
mov
jno
shrb
xor
outsb
mov
mov
bound
mov
and
test
hlt
mov
cli
cld
mov
ret
les
or
shrl
inc
jl
xor
xor
sub
cs
cmp
lods
inc
pop
cs
push
xchg
inc
and
pop
cmpsb
loop
jecxz
fsub
jp
hlt
fwait
movsl
jmp
pop
in
mov
add
dec
sub
test
fstpl
stos
das
pop
cld
notb
pop
pop
lahf
leave
cmp
cli
inc
sti
sbb
adc
inc
push
ljmp
fs
pop
pop
loope
outsl
fmul
mov
jae
sub
jne
mov
lea
pop
adc
gs
push
and
jle
jns
adc
sbb
push
je
mov
out
and
int3
lea
nop
cmp
pop
xchg
sbb
sub
imul
add
popf
mov
xlat
cmp
dec
cmp
lahf
pop
ds
insl
cmpsb
pop
dec
jnp
adc
stos
stos
test
cmp
xchg
mov
iret
dec
xchg
mov
mov
xlat
inc
push
adc
sbb
rcl
pop
mov
cmp
inc
mov
vpunpcklwd
leave
or
data16
into
xor
imul
push
insl
and
mov
fcom
mov
sub
ficoms
movsl
mov
sub
mov
and
jmp
test
xchg
addr16
icebp
insb
xchg
cmp
int
addr16
cmc
ljmp
cltd
jg
inc
pop
std
cld
mov
out
cwtl
pop
or
xor
fwait
or
add
pop
sahf
mov
and
pop
or
adc
jne
push
push
pop
and
jg
jl
stos
jl
fimuls
cmp
out
mov
inc
push
mov
repnz
push
mov
lea
mov
inc
mov
ret
mov
adc
outsb
xor
adc
lret
int
xor
in
pop
iret
ss
js
sarb
aad
inc
dec
fsubs
add
inc
jae
fiadds
cld
loopne
orb
jecxz
rol
stos
dec
xchg
jbe
dec
jae
jmp
push
lret
vmovupd
xor
mov
lcall
pop
call
repnz
mov
dec
test
jmp
and
sub
xchg
push
mov
push
or
mov
adc
jb
movsl
arpl
push
lods
paddw
ret
mov
jmp
jle
lods
cwtl
cli
sbb
push
or
mov
push
xchg
cwtl
and
in
push
es
mov
lahf
mul
inc
xchg
sub
stc
adc
sahf
xchg
or
jo
xor
mov
xchg
in
cwtl
and
cmp
pop
jae
cmpsb
inc
cltd
repz
mov
aad
inc
dec
inc
divl
inc
mov
scas
dec
mov
pushl
mov
push
dec
push
mov
push
mov
push
lcall
xchg
sti
pop
ret
test
pop
loope
sub
popa
push
cs
arpl
jbe
gs
mov
adcl
xlat
insb
cwtl
add
sub
and
je
mov
inc
js
repz
loope
xor
jge
and
popa
out
out
aam
or
xchg
xchg
mov
mov
std
cltd
aaa
hlt
push
mov
xchg
push
jnp
xor
xchg
in
cld
push
add
add
mov
lcall
aad
jge
mov
enter
test
in
adc
cli
jle
mov
xor
mov
push
negl
sbb
sbb
mov
das
mov
push
mov
add
es
out
sub
sub
jnp
xor
enter
lret
sbb
into
and
lea
icebp
push
aam
mov
frstor
xlat
and
push
mov
jmp
xchg
in
loope
dec
xchg
xor
mov
out
dec
call
push
jmp
call
sbbl
lock
arpl
je
pop
mov
sub
adc
punpcklwd
cld
xchg
std
out
mov
addr16
pop
imul
lods
xchg
outsb
test
mov
or
dec
jb
jae
iret
sbb
xor
out
jns
lahf
adc
adc
cmpsb
jne
sbb
sbb
es
inc
test
sbb
in
xor
mov
es
ds
sub
aad
cwtl
xchg
mov
das
pop
jmp
cltd
fstpt
xor
jg
ss
sahf
inc
leave
jmp
int3
mov
inc
aas
mov
pop
test
xor
inc
into
cmp
mov
dec
dec
xor
mov
mov
mov
in
push
sub
xchg
mov
xchg
pop
cmpsb
push
int3
loop
pusha
stc
pop
test
pusha
pusha
rol
bound
gs
data16
into
sub
xchg
rclb
test
outsb
push
pop
loopne
inc
jno
jae
jae
std
push
das
fdivl
ja
ffree
jns
jp
enter
jge
ret
in
ret
xorb
cld
outsb
fldl
out
fsubr
int3
sub
xor
in
dec
notb
pusha
xchg
sbb
sti
inc
jge
mov
mov
and
out
sbbl
mov
xor
xor
cmpsl
lods
imul
bound
in
lods
subb
mov
dec
pusha
sub
and
mov
ds
test
jo
sbb
or
and
shrl
sbb
sub
lds
xchg
dec
jno
mov
fcmove
dec
sbb
sar
shrl
out
aad
lods
cmp
fnstcw
fcmovnu
mov
mov
cmp
mov
dec
dec
xchg
cmp
mov
ljmp
and
out
lock
repnz
cmp
pop
xchg
xchg
and
scas
repnz
cmp
jle
mov
leave
adc
pop
pushf
push
ljmp
cmpsb
or
cld
jo
jmp
dec
insl
mov
jne
in
test
iret
inc
mov
jge
jle
mov
xorb
imul
aas
xchg
imul
iret
lea
cmp
rcrb
push
imull
loope
xchg
xor
dec
xor
gs
pushf
pop
out
cmp
cmp
pop
in
sti
cmp
cmpsb
jge
fs
push
inc
call
lods
cltd
fs
dec
and
outsl
test
jl
add
dec
jecxz
sub
push
mov
or
pop
clc
movsb
rcl
add
sbbb
xchg
or
arpl
fldenvs
shrb
ror
ljmp
outsl
daa
inc
cmp
jb
jae
je
lahf
sahf
jbe
js
daa
jbe
fnstsw
jl
push
or
shr
lock
aaa
test
shr
sbb
push
cmp
adc
cmc
adc
outsb
push
xchg
fcomi
in
pop
xchg
sub
cmp
sub
mov
pushf
pop
popf
loop
add
pop
or
adc
dec
or
jg
imul
test
mov
popa
lods
xchg
adc
adc
test
mov
mov
adc
sbb
pop
sarb
and
xor
ret
sub
lds
cwtl
inc
repz
movsb
leave
xor
in
int3
xor
fwait
mov
push
shlb
cmp
gs
je
dec
mov
ja
fildl
lods
out
ficomps
test
in
adc
dec
pusha
dec
movsl
push
inc
dec
cltd
pop
out
jae
jmp
mov
out
xor
push
mov
mov
bound
jmp
negb
jl
mov
shrl
popa
imul
inc
fs
push
mov
pop
and
ret
add
lret
insl
loopne
or
enter
jns
jae
jmp
adc
scas
js
add
dec
jnp
dec
jne
pop
jle
pop
rolb
iret
or
inc
test
mov
fs
sbb
or
cld
sub
jle
xchg
pop
je
xchg
or
in
fwait
sbb
pop
cmp
in
cmp
subl
mov
lods
cmpsl
mov
das
dec
dec
lods
aas
lods
jnp
mov
mov
movsl
dec
dec
pop
jns
mov
xchg
stos
or
mov
cli
mov
cmc
mov
mov
test
mov
cmpsb
cmp
leave
adc
int
gs
jmp
push
imul
add
aam
aad
inc
add
jno
mov
cmpsl
cmpsl
jbe
daa
das
push
fildll
jcxz
jle
aad
orb
nop
adc
jmp
popa
cmp
out
sub
ret
lock
xchg
mov
mov
imul
jmp
jns
lret
sti
aas
es
seta
inc
inc
add
lcall
adc
mov
addr16
movsb
or
push
mov
lea
aad
pop
fistps
mov
mov
lods
sbb
sbb
mov
in
mov
int3
push
loope
mov
sub
xchg
ret
scas
inc
sub
test
das
icebp
ss
fstpl
xor
aam
loopne
sub
mul
xlat
jno
push
inc
ret
leave
mov
fwait
cmp
fiadds
loope
notl
dec
jnp
test
out
out
sti
push
jmp
push
and
cs
push
rclb
nop
icebp
stos
inc
sbb
pop
push
shl
rcrl
xor
pop
inc
adc
sti
push
cld
aam
shlb
push
push
imul
or
mov
bound
jb
mov
mov
fnsave
pusha
cmpl
adc
gs
push
xchg
jle
xchg
sbb
incl
jl
push
xor
sbb
mov
jnp
shll
mov
repz
sbb
cld
xchg
orl
xchg
imul
xor
xor
xor
fwait
int3
iret
out
aaa
data16
aas
push
out
mov
or
aas
loop
push
popa
test
test
inc
adc
lods
imul
mov
shr
out
mov
mov
mov
xor
mov
or
sbb
fistpl
pusha
or
dec
lret
mov
push
push
roll
sbb
jo
lret
inc
aad
jb
adc
pop
out
jae
je
jne
mov
mov
outsl
add
aaa
loop
jg
fnstcw
ret
out
add
jns
hlt
xchg
mov
mov
je
scas
dec
mov
mov
cmp
dec
rorb
mov
arpl
std
and
lcall
testb
jecxz
mov
dec
ror
movsb
cld
clc
nop
cmpsb
cmpsl
jl
arpl
adc
jle
adc
andb
add
aas
sbb
test
xor
sbb
mov
inc
outsl
popf
shrl
sbb
sub
mov
or
jnp
and
inc
xor
movsb
mov
test
fistpll
pop
cmp
pop
xlat
cld
cmpl
leave
jge
leave
inc
pop
mov
inc
jmp
fcomip
loopne
loope
xchg
addl
pushf
jmp
insl
cmc
push
cmp
out
push
out
xchg
jno
icebp
pslld
pop
and
ret
pushf
mov
icebp
pusha
pop
cs
sbb
and
pushf
pop
gs
lea
sbb
pop
dec
push
aas
outsl
jne
or
or
push
aas
mov
adc
adc
sbb
adc
push
movb
pushf
jns
xchg
xchg
scas
and
rorb
cltd
mov
daa
mov
les
insl
sub
jl
xchg
jmp
jbe
xor
xor
ret
sahf
scas
lahf
inc
mov
adc
movsb
xchg
dec
out
cmpsl
frstor
and
inc
pushf
inc
mov
scas
icebp
sub
mov
xor
dec
repz
dec
xchg
push
mov
mov
cmp
xchg
rcl
pop
mov
lds
cli
movl
inc
lret
xchg
push
data16
lods
inc
iret
rcl
aas
imul
call
outsl
iret
icebp
xlat
cmc
jp
fs
adc
mov
stos
je
rcr
jbe
add
mov
cmpsl
jg
sbbb
scas
jmp
bound
jg
mov
mov
sarb
dec
jne
lcall
xchg
jnp
or
cltd
add
jbe
dec
adc
xor
jmp
movsl
xor
cmpsl
push
inc
out
test
ret
ret
adc
push
mov
xchg
mov
les
push
adc
inc
jg
and
xor
pop
inc
mull
into
mov
sub
repnz
sub
inc
xor
xor
sub
icebp
inc
iret
ss
dec
aas
cmp
dec
sarl
jl
aad
stc
cmp
flds
sub
xchg
es
loopne
pop
dec
lcall
xchg
out
mov
push
aas
test
and
push
push
cmpsb
repnz
scas
push
hlt
add
imul
or
jmp
jo
mov
inc
dec
add
xchg
out
nop
add
movsl
leave
outsl
dec
mov
mov
dec
inc
jbe
sub
ficoms
or
call
lds
sbb
ret
addb
sbbb
je
push
mov
fwait
mov
sub
mov
jmp
data16
jge
xor
sahf
push
xlat
das
xchg
enter
and
jb
xor
inc
pushf
xchg
lds
xchg
xchg
lcall
cmp
cmpsl
xchg
inc
test
adc
std
xchg
inc
jae
or
dec
mov
inc
dec
and
mov
mov
push
xchg
push
xor
inc
push
call
mov
fnsave
pop
hlt
dec
les
jns
pop
fidivrl
bound
fs
lret
adc
int
cs
iret
enter
adc
popf
data16
mov
jno
mov
jle
fdivl
test
pop
inc
jns
and
fiadds
in
out
dec
lret
mov
adc
out
push
lock
lea
call
xor
sti
sbb
call
xor
jle
push
xor
add
movsb
and
rep
movsl
in
cmpsb
push
dec
adc
hlt
add
xchg
adc
sub
mov
sub
mov
push
inc
mov
pop
push
mov
hlt
mov
cwtl
mov
add
sub
ret
cld
cmpsb
out
lds
enter
pop
fmul
stc
int3
sti
repz
xor
cmp
adc
sub
cmp
xchg
inc
notl
ss
movsl
fisubrs
fistpll
inc
push
outsb
in
in
xchg
and
jmp
push
stc
sub
push
mov
cli
mov
repnz
mov
cmc
fwait
out
imull
popa
or
cld
xchg
push
sub
sub
xor
imul
pop
insl
jbe
scas
lock
or
jb
jae
inc
jne
test
insb
js
xor
shlb
out
pop
jg
sbbb
mov
push
es
roll
fidivl
mov
mov
sub
adc
pop
iret
enter
mov
xor
lcall
cmp
les
mov
in
mov
test
sahf
mov
inc
inc
inc
scas
cmp
dec
jnp
adc
dec
push
pop
push
mov
push
int
imul
rol
pop
push
ret
xchg
out
sub
arpl
lret
pushf
ja
xor
push
sub
push
rcll
push
mov
adc
sbb
sub
sarb
dec
loopne
sub
loop
push
in
or
orl
test
test
mov
mov
fistps
hlt
jg
aas
loope
xchg
clc
or
ljmp
add
add
in
sbb
inc
mov
fcoml
or
or
adc
push
test
aas
out
sti
adc
adc
stos
scas
andl
sbb
sbb
in
mov
and
stos
mov
daa
pop
sub
adc
call
jp
pop
pop
jecxz
xor
into
data16
shlb
and
ret
or
push
aam
or
cmc
push
fabs
int3
inc
call
inc
xlat
fbstp
jns
dec
inc
shl
push
sbb
pusha
pusha
out
push
dec
xor
dec
sti
push
fcoms
pusha
push
xor
ja
or
pop
mov
sahf
cmc
testb
into
cli
add
repnz
sbb
imul
out
test
push
or
push
repz
cmc
mov
inc
inc
xor
jl
dec
imul
sbb
aas
addb
leave
ljmp
pop
sahf
and
mov
xchg
mov
sub
xchg
add
or
xchg
das
sub
add
bound
in
ss
push
aam
lahf
jae
cmp
stos
cmp
cmp
dec
inc
pop
inc
jns
ret
inc
inc
ret
pusha
push
lods
ret
scas
fsubrp
dec
das
loop
pop
mov
mov
cmp
push
sbb
cs
sub
ss
cmp
push
aam
ret
mov
pop
and
enter
cmp
shlb
addr16
iret
mov
and
shr
outsb
inc
aad
not
jb
insb
or
fildl
fidivs
jns
jp
xchg
xchg
jge
mov
pop
pusha
cmpsb
cmpb
cmp
dec
mov
sub
mov
lock
imul
jnp
std
pop
cli
lock
dec
xor
cwtl
push
mov
jnp
dec
add
lret
add
sbb
mov
or
in
stc
or
aaa
adc
xor
jae
lods
cmp
cmp
sbb
sbb
mov
and
mov
movsl
lods
sub
push
faddp
xor
loope
or
xor
xor
shl
xor
pop
jecxz
rol
and
mov
sbb
cmp
stc
rcr
cmc
fcoml
inc
pushl
mulb
imul
or
jmp
jle
ja
imul
jno
push
loope
sbb
out
push
mov
jp
repnz
pop
xor
pop
arpl
in
popa
sti
lock
fisubl
jmp
or
mov
fisubl
test
jno
repnz
test
jbe
xchg
add
adc
cmp
jnp
xlat
int
orl
addl
xchg
orl
es
xchg
sub
pop
mov
sub
xchg
inc
aaa
cs
imul
cltd
adc
adc
dec
sbb
lods
test
ds
aas
inc
inc
dec
pop
aaa
in
aaa
call
inc
pop
sbb
push
mov
dec
jnp
scas
mov
dec
outsl
repnz
fdivr
mov
push
push
data16
popf
mov
sti
lcall
pop
popw
add
lock
sbb
ret
adc
addr16
pop
imul
js
fisubrs
ds
fsubs
add
jbe
aad
loope
loopne
dec
jnp
jl
aad
icebp
in
aad
pop
pop
call
gs
in
out
mov
shl
xlat
adc
dec
repz
nop
mov
push
xchg
adc
cmp
jo
call
lcall
add
dec
lahf
loope
mov
andb
push
or
push
cmpsl
and
add
shrl
fidivs
mov
fwait
and
es
mov
mov
jp
mov
mov
and
pop
mov
sub
fsts
xor
lds
shlb
push
xor
pop
sbb
xor
outsl
ficomps
ss
push
roll
cmp
push
fnstsw
jl
test
dec
scas
ja
inc
dec
pop
inc
jns
jmp
push
pop
out
repz
div
pop
pop
andb
inc
pop
add
test
pop
add
fs
sub
or
sub
popa
int
mov
push
stos
and
daa
out
rclb
push
add
mov
shll
daa
add
inc
sarb
leave
or
test
mov
mov
pop
and
fsubrl
lret
sub
jns
cld
xchg
dec
xchg
dec
xchg
sahf
arpl
pop
in
push
xor
fcmovbe
xor
xor
ss
sahf
enter
mov
lock
ds
cmpl
iret
lods
jle
out
dec
mov
dec
jg
mov
pushf
mov
or
cltd
jmp
xchg
mov
and
pop
ret
pop
fildl
jns
adc
ljmp
sub
gs
frstor
push
pop
repnz
rorl
shll
sbb
stos
lock
lock
fidivs
fistps
loopne
sbb
adc
xchg
xlat
andb
loope
jmp
jp
pop
in
pop
out
pop
and
adc
mov
cmp
pop
aad
xchg
pop
adc
xchg
loop
dec
insl
cwtl
xor
out
and
popf
push
inc
add
xorb
mov
mov
dec
cmpsl
call
stos
pusha
adc
adcl
xchg
jns
out
mov
push
xchg
sbb
adc
pop
push
xchg
mov
pop
and
lds
fadd
pop
adc
inc
lds
cmp
xchg
xor
or
shlb
movsb
sbb
xchg
shlb
pop
cmp
fistl
inc
movsl
sub
inc
mov
dec
fs
loope
mov
jmp
in
sahf
mov
or
pop
xor
ret
push
and
icebp
fucomip
pop
repz
stc
lods
jmp
lcall
jns
cld
aad
jbe
add
cmp
add
lods
mov
roll
xor
aaa
lds
out
or
lret
je
jne
jbe
in
inc
add
or
adc
sbb
sbb
subl
imul
and
mov
and
mov
aaa
sub
jmp
das
cmc
repz
repnz
xchg
shlb
pushf
js
and
repnz
mov
xchg
movsb
mov
aas
jp
rclb
inc
fistpll
adc
out
sbb
mov
pop
ds
add
mov
mov
out
dec
xchg
push
lret
push
pop
sbb
lahf
pushf
mov
cmp
insl
lahf
inc
pop
sbb
cld
push
popa
mov
in
and
or
imul
jnp
sub
popf
aad
adc
out
lret
jb
pop
fisubl
fucomi
insl
mov
in
fdivrp
lea
rolb
jecxz
aam
scas
jg
shl
mov
lea
in
xchg
xchg
out
mov
icebp
xor
add
cmc
or
add
ret
mov
xchg
mov
push
and
cmp
fwait
sbb
shr
push
jae
mov
or
push
call
mov
stos
xchg
lods
push
push
adc
push
scas
movsb
mov
lods
xor
repnz
adc
cwtl
mov
dec
mov
es
fisubrl
or
jl
push
jmp
or
xchg
xor
xor
lods
cmp
rcll
sbb
mov
popa
aas
cmp
inc
lods
add
sti
test
fbstp
inc
xchg
in
sub
mov
or
adc
sub
in
push
mov
leave
push
and
mov
bnd
pop
jnp
cmc
jl
push
idivl
mov
inc
bound
mov
shlb
dec
aaa
addr16
add
fs
xlat
add
outsb
test
or
or
aad
outsl
test
mov
movsb
aaa
inc
jp
pop
jl
or
sbb
roll
push
sbb
xchg
and
and
xor
and
adc
daa
jbe
push
sub
sub
fwait
std
sub
xor
push
das
and
shrl
je
ss
aaa
jle
lahf
xlat
sbb
xor
mov
add
sti
bound
cmpsl
dec
scas
outsb
test
lahf
or
inc
ljmp
arpl
dec
dec
dec
lock
mov
push
add
push
insb
push
je
adc
out
mov
int3
out
ret
nop
dec
addps
pusha
addr16
pop
and
in
sti
mov
addr16
shrb
push
push
pop
fwait
outsl
jns
or
push
fidivl
push
dec
sahf
fmull
in
jne
fbstp
jp
jnp
jl
ret
arpl
in
mov
add
ljmp
dec
mov
out
pop
lock
fildl
orb
mov
sub
popa
jmp
xor
add
fcomi
pop
fimuls
loopne
orb
movsl
cmp
fsubs
mov
pop
lods
lret
add
mov
mov
xchg
addr16
mov
lock
mov
mov
add
and
pop
mov
or
in
mov
and
xor
fxch
pop
bound
arpl
int3
xor
xor
inc
sahf
ss
jecxz
jb
ljmp
xlat
ds
xor
push
inc
fcompl
fwait
incb
stc
and
loope
clc
dec
push
cmc
in
inc
je
dec
pop
cmpsl
xchg
add
xor
push
out
jecxz
mov
mov
mov
div
cmpsb
pop
add
mov
cld
push
std
lods
nop
loope
jae
lds
xchg
add
and
add
add
fmull
xor
or
or
push
aam
push
inc
jl
js
sub
jl
jge
ljmp
sbb
push
jno
xchg
jecxz
inc
and
and
push
leave
or
jb
xchg
jecxz
cs
xchg
xor
mov
mov
pop
les
dec
aaa
sahf
sub
push
mov
cmp
imul
inc
jmp
test
insb
inc
dec
xchg
stos
inc
dec
or
arpl
dec
xchg
lods
mov
mov
daa
dec
test
push
jmp
push
mov
mov
pop
ret
adc
mov
xchg
popa
cmpl
outsl
or
mov
cld
iret
mov
rolb
adc
jo
in
xchg
call
fsub
xchg
loopne
add
gs
mov
jle
cmp
add
inc
lods
fwait
ljmp
jae
mov
pop
icebp
cld
call
cs
mulb
fs
pop
xchg
mov
mov
addr16
xchg
aad
leave
int
fwait
daa
add
add
dec
or
cli
movsl
nop
xor
dec
add
popf
lods
test
repz
inc
mov
mov
das
sbb
sbb
or
testb
mov
xor
sub
sub
push
xor
xor
and
into
dec
sar
aam
hlt
cmp
push
xlat
dec
fdiv
fadds
mov
mov
loopne
sahf
dec
cmpsl
pop
jecxz
gs
repnz
unpcklps
js
hlt
jmp
inc
push
in
insl
filds
mov
imul
mov
pop
lock
negl
test
cli
mov
movsl
jbe
lock
xor
xchg
movsl
mov
negb
sub
push
packsswb
jae
pop
push
repnz
dec
mov
add
push
call
sbb
lds
pop
loop
test
push
mov
fsts
push
push
nop
xlat
xchg
flds
mov
xchg
fadds
mov
scas
pushf
test
cmp
cmp
sti
loop
fstpt
lret
jle
insl
test
or
push
push
inc
xor
dec
or
pop
pushf
adc
mov
aam
enter
mov
or
push
jg
mov
mov
pop
icebp
sti
ret
pop
ss
pop
les
pop
fwait
outsl
leave
add
stos
imul
push
shrl
jmp
insl
outsb
jg
mov
jno
dec
cmpsl
jae
enter
out
ja
inc
fucomip
inc
jp
movsl
loop
scas
data16
in
or
leave
or
add
in
xchg
out
mov
push
dec
repnz
dec
hlt
sub
mov
out
xchg
lods
xchg
jnp
std
or
jnp
fdivrl
lcall
add
cltd
lahf
loope
pop
dec
or
adc
clc
or
and
xchg
repnz
lods
cld
scas
mov
mov
cmp
mov
mov
sbb
sbb
lock
mov
and
sti
mov
mov
ret
shll
pop
sub
pop
fxch
cmp
lret
xor
std
or
mov
sub
rcrl
inc
ja
mov
cmp
fldcw
xor
inc
fiadds
leave
loopne
jge
loop
jecxz
sub
push
out
shrb
fsubr
push
and
push
adc
jl
icebp
xorl
insl
pop
sarb
cltd
pop
push
pop
push
stc
cmp
pop
cld
inc
push
fs
bound
add
out
or
add
fwait
or
out
out
and
stc
leave
out
push
push
scas
leave
insb
jns
adc
sbb
inc
sbb
sbb
mov
out
subl
int
pop
push
lahf
and
push
mov
push
jne
data16
dec
jecxz
cmpsl
sub
repnz
xchg
ja
push
xchg
in
mov
push
loop
sub
mov
jg
lahf
in
sub
mov
ds
stos
cmpsb
ret
add
mov
inc
popa
lahf
lods
daa
xchg
inc
cltd
dec
xchg
push
adc
stc
mov
sub
jne
movsb
xor
aas
mov
lret
ljmp
icebp
push
sbbl
rcl
pop
mov
ret
xchg
imul
movb
cmp
arpl
test
or
addr16
dec
pop
cli
sahf
xchg
imul
pop
rclb
add
popf
push
jb
lods
ficompl
jne
sbb
ja
js
jns
mov
insl
jge
cmp
in
push
jg
stos
pop
subl
jmp
in
mov
andl
icebp
sahf
sbb
mov
xor
movsl
aaa
xchg
sbb
call
daa
ljmp
mov
push
ret
pop
decl
or
and
push
xor
rcll
and
lods
int3
stc
hlt
scas
lahf
inc
shll
sbb
mov
adc
mov
mov
mov
cmpsl
mov
aas
and
or
loop
ret
lds
sub
xor
xlat
xor
lret
jns
data16
push
pop
lods
aad
daa
xor
jp
fstps
fmul
cli
inc
pop
gs
jmp
data16
lahf
fwait
cld
xor
rorl
xor
pop
adc
jmp
mov
ret
push
fcmovbe
mov
pop
xor
call
push
data16
repnz
dec
ljmp
push
sbb
and
jno
jo
jno
mov
scas
push
cwtl
ret
mov
dec
jp
out
aam
push
fists
sbbl
lahf
sbb
jl
fmuls
and
sbb
lea
clc
push
jmp
nop
in
xchg
das
scas
mov
loope
jl
pop
xor
jns
fstpl
lahf
cmp
cmp
out
xchg
movsl
aas
lcall
xchg
stos
inc
lret
hlt
insl
sti
scas
into
push
dec
mov
jne
xchg
dec
dec
mov
mov
arpl
and
in
shll
in
shr
pop
cmp
mov
sti
pusha
rcr
inc
mov
enter
daa
xor
imul
cmpsb
shll
bound
inc
fdivs
test
fdiv
fldl
loopne
fabs
loop
daa
out
fisttpll
cwtl
or
in
mov
xor
and
out
pop
push
out
pop
icebp
aas
mov
xchg
clc
inc
xchg
outsb
cli
sbb
rcrb
lcall
cmp
xchg
mov
or
ja
cmpsb
pop
cmpsl
jbe
fisubrl
or
adc
push
cmp
add
in
jmp
sbb
test
pop
xor
jg
arpl
rcrb
fisttpl
scas
sub
dec
sub
jno
out
iret
xor
movsb
mov
aam
aaa
jmp
ror
mov
cmp
fidivl
push
or
sbbl
jg
xchg
addr16
in
les
ss
mov
xchg
mov
push
ret
lods
dec
nop
out
mov
dec
pop
lahf
icebp
inc
lods
pop
cmp
push
pop
ret
sbb
mov
adc
fs
mov
add
add
add
sbb
xor
or
push
jb
push
or
daa
adc
clc
dec
adc
pop
adc
pop
jl
add
pop
pop
orl
test
pop
sbb
aaa
push
and
inc
mov
sub
sub
data16
cs
das
insb
fcoml
fpatan
xor
out
pushf
in
inc
sbb
inc
mov
cmp
push
test
inc
addb
dec
aad
pop
dec
scas
ret
jnp
and
call
jno
dec
mov
popa
mov
jo
das
les
inc
arpl
cld
in
ret
pop
enter
pop
adc
shlb
int3
jmp
iret
sub
shrl
aam
scas
pop
jecxz
fsubs
cmc
stos
fisubrl
arpl
cmp
jns
fwait
clc
jnp
jl
sub
inc
pop
out
stos
std
jmp
andb
cmp
imul
clc
cmpsl
mov
xlat
mov
xchg
pop
out
stc
push
cli
aad
xchg
outsl
cmp
xchg
insl
cwtl
cmp
xchg
shll
scas
push
pop
insl
xchg
xrelease
or
bound
test
pop
adc
stos
movsl
adc
adc
mov
pop
xchg
outsl
in
mov
sbb
jae
dec
cmp
sub
mov
jae
and
lret
fs
xchg
es
sub
call
aam
xor
repnz
ror
aam
pop
pop
sub
mov
mov
popa
xor
inc
out
repnz
test
out
add
sub
xchg
out
add
icebp
loopne
mov
or
push
cwtl
pop
inc
adc
ds
popa
insl
cld
xor
and
add
mov
pop
sub
pop
mov
or
jo
or
cmp
stc
mov
dec
adc
and
jge
scas
sbb
mov
andl
outsl
push
mov
clc
mov
fists
push
inc
push
sub
sub
into
sub
xchg
mov
xchg
xor
cmpl
cmp
fsubl
cld
lds
jge
addr16
test
inc
push
jmp
dec
into
jle,pt
mov
cwtl
rorb
mov
mov
push
mov
push
mov
jmp
mov
pop
sub
pop
enter
out
fs
cmc
mov
mov
leave
rclb
shrl
call
incb
je
mov
xor
pop
loope
jnp
in
jge
and
xor
out
imul
in
dec
test
adc
add
daa
out
sub
xor
pop
mov
cwtl
repz
cmc
je
loopne
xchg
pusha
jae
xchg
out
es
test
std
out
cwtl
mov
pop
pushf
mov
test
mov
jnp
or
lods
cmpsl
test
out
or
lods
adc
sar
push
sahf
mov
mov
sti
sbb
push
aas
pop
jns
mov
ret
jmp
and
xor
imul
mov
enter
stc
and
xor
aam
clc
mov
ss
mov
cmp
rorb
test
cmp
pop
into
sbb
addb
jge
fisttpll
push
sti
push
dec
addr16
xchg
arpl
dec
out
out
popa
addb
jmp
je
in
xor
stos
push
icebp
or
push
stc
pop
push
cmp
negb
add
pop
popa
jbe
outsl
je
fs
icebp
pushl
add
add
mov
in
jo
dec
or
cmp
iret
push
adc
imul
lea
jae
fstps
mov
dec
andb
sbb
xor
ret
mov
mov
sbb
test
lods
xchg
movsb
ds
fstl
mov
out
mov
sbb
mov
cmp
loopne
fwait
cmpsb
test
inc
pop
xchg
test
mov
scas
mov
lcall
sti
inc
dec
mov
enter
push
mov
aas
mov
pop
mov
inc
sbb
pcmpgtb
inc
lds
mov
fs
adc
into
dec
xchg
lret
shl
cmp
pushf
push
xchg
int
jo
cli
fsubs
jae
je
pop
icebp
jbe
mov
mov
lret
insb
icebp
loop
mov
cmpl
out
xchg
xorl
jmp
in
imul
out
dec
mov
stos
repnz
mov
mov
pop
jge
loopne
jge
stc
cli
ret
icebp
xchg
notb
add
add
and
cmp
popa
outsb
push
mov
lods
or
or
cmpsl
sbb
test
call
sub
cmp
adc
hlt
xchg
inc
ret
mov
mov
mov
and
and
mov
mov
sub
ret
push
push
and
cmp
xor
sbbb
push
xor
mov
rclb
idivl
sarb
push
xlat
add
cmc
inc
pop
faddl
jl
sahf
fildll
or
and
stos
dec
in
cld
out
int3
dec
jo
jmp
push
push
mov
out
mov
in
xchg
pop
dec
sbb
xchg
cmc
into
lds
test
adc
xchg
inc
arpl
incb
pushf
add
xor
ss
add
out
or
push
cmpsl
or
cmp
pcmpeqd
adc
clc
loopne
int3
jp
pop
adc
sbb
movsb
and
subb
sbb
insl
mov
loope
mov
push
and
mov
mov
stos
mov
xor
imul
ss
aaa
or
lahf
out
cmp
sbb
in
clc
jo
jecxz,pt
sbb
or
fsubrl
xchg
fcomp
dec
add
test
je
and
jnp
roll
mov
jmp
mov
pop
addr16
inc
or
pop
js
mov
push
push
lds
pusha
fbld
bound
gs
lcall
mov
mov
mov
push
jno
sub
ds
push
jne
cld
fnsave
shl
loopne
dec
jecxz
xchg
jb
out
pop
xorl
push
test
xchg
stos
out
mov
mov
hlt
mov
xchg
test
testl
xchg
pop
xchg
pop
cwtl
das
mov
inc
jae
sub
ja
adc
lahf
push
dec
test
mov
cmp
or
test
shrb
add
and
mov
push
mov
fidivs
adc
and
imul
push
outsl
sub
hlt
cmp
jb,pn
enter
and
mov
push
outsl
sarb
sbb
jno
scas
aad
and
inc
je
dec
fldt
out
fbld
xchg
shl
xor
ljmp
imul
jmp
push
rcpps
out
inc
out
into
test
mov
stos
pop
pop
push
negb
mov
pop
pop
cltd
add
jo
out
std
add
fisttpl
data16
add
mov
add
std
nop
add
outsb
mov
out
sbb
mov
pop
lret
sub
pop
in
das
inc
dec
dec
jl
sub
hlt
cmpl
lods
sbb
push
lea
loope
xchg
mov
push
popf
test
sub
hlt
xor
das
or
ficomps
xor
mov
cmp
mov
cmp
cmp
cmpsb
add
test
bound
rorl
movsl
jp
pop
shll
mov
mov
push
mov
pop
scas
test
mov
cs
fadds
rol
mov
data16
les
jg
or
arpl
lret
adc
pushw
sbb
imul
iret
mov
fildl
jae
jo
xchg
in
lods
fnsave
sub
fistpll
adc
jnp
lods
popa
jge
pop
in
mov
pop
jmp
faddl
data16
pop
xchg
mov
xor
fmuls
sahf
sti
in
pop
out
cmp
repnz
push
add
xlat
cs
inc
inc
push
mov
or
or
filds
push
insl
les
jle
pop
lods
shrb
mov
das
push
mov
xchg
and
mov
mov
jmp
and
hlt
pop
mov
sub
xor
mov
cs
shll
aad
mov
outsl
cmp
aam
inc
cmp
cmp
xchg
inc
xchg
adc
fldl
in
cwtl
dec
cmp
cmc
mov
es
dec
cmp
ljmp
push
out
mov
xchg
jae
icebp
insl
ficomps
add
clc
or
clc
popa
bound
jge
or
push
scas
and
xor
xor
outsb
cmpsl
mov
popf
test
jae
mov
adc
movsl
adc
aam
and
sbbb
mov
orb
nop
call
and
fwait
and
aad
and
mov
xchg
rcll
gs
jle
mov
pop
sub
stc
xchg
lcall
scas
xor
lahf
mov
jns
xor
inc
inc
sub
stos
cmp
push
inc
addr16
hlt
and
clc
insb
dec
test
test
mov
cmp
mov
pop
dec
aaa
ret
hlt
sbbb
pop
movl
push
add
xchg
int3
retw
mov
imul
movsl
aaa
inc
xlat
push
jb
pop
fisubrl
push
out
pandn
out
iret
loope
in
in
out
iret
incl
jae
cmp
scas
push
jge
push
cmc
fdivp
mov
xchg
lcall
insb
std
jp
lcall
add
sbb
sahf
das
inc
push
insl
pop
mov
std
scas
or
cmpsl
into
cli
push
jne
test
rclb
mov
mov
sub
leave
inc
js
sbbl
mov
rcrb
and
push
and
and
push
push
sub
sub
mov
sub
leave
mov
popf
dec
xor
jo
test
push
mov
shrb
cmp
popf
add
cmp
out
mov
fcoml
mov
fildll
loop
jecxz
in
sbb
push
sbb
jmp
push
out
sub
out
dec
ljmp
xlat
push
hlt
pop
out
and
push
mov
loop
arpl
and
cmp
xorl
repnz
lea
jmp
cmp
or
or
cmp
gs
sbb
jno
adc
jle
pusha
sbb
mov
cs
mov
and
gs
mov
mov
ja
sub
sub
imul
das
xor
push
jmp
ss
imul
outsl
adc
aas
iret
inc
mov
push
stos
cmp
lods
inc
ds
mov
mov
fisttpl
adc
dec
ljmp
and
mov
pop
sbbb
stc
pop
and
pop
js
cmp
insb
popa
lret
bound
mov
data16
into
pop
fldt
push
scas
sbb
xchg
outsb
xor
jo
sbb
fstps
jp
hlt
and
push
loopne
loope
loop
fisttpll
xor
jg
push
out
call
sbb
test
jae
out
add
scas
icebp
jg
and
ret
hlt
movsl
rorb
xchg
int3
lahf
cli
out
xchg
xchg
fwait
std
fcmovne
dec
add
pusha
fwait
adc
cmpsl
lahf
xchg
mov
test
or
xor
pop
sub
and
cmc
cltd
adc
adc
sbb
sbb
in
push
mov
and
jne
mov
into
mov
sahf
enter
ret
mov
sub
xor
sub
inc
xor
lret
push
xor
xor
mov
aam
inc
test
cmp
jecxz
fistl
pusha
in
fdivp
cmp
xor
dec
jne
adc
push
xchg
aad
call
fucomip
mov
cmpsl
in
stc
out
ljmp
repnz
sar
hlt
push
adc
mov
jb
rcrb
popa
scas
jle
arpl
fists
mov
sbb
subb
push
push
jno
ja
mov
out
jne
test
or
dec
adc
insb
loopne
sbb
pushf
xor
cwtl
test
jns
fs
mov
ljmp
add
sub
dec
xchg
or
sub
daa
xchg
lods
arpl
test
xchg
popl
cltd
dec
xlat
xor
cs
pusha
popf
push
int
xchg
jl
mov
loop
inc
nop
insb
testl
inc
loop
or
fisttpl
dec
push
pop
push
mov
mov
es
mov
mov
setno
jle
pop
dec
push
js
mov
pop
dec
scas
sahf
pop
cmp
fmulp
fwait
pop
mov
popa
jecxz
cmc
sbb
xor
gs
jle
inc
add
pop
shlb
sub
aam
jne
sub
pop
loopne
add
lods
mov
mov
jns
cld
mov
jge
jle
jg
xor
je
cmpb
xor
in
mov
mov
icebp
mov
repz
cmpsl
xlat
lds
clc
xchg
sbb
lods
xchg
cmpl
cwtl
pop
cltd
jne
add
repz
push
sahf
ss
or
adc
add
or
cld
adc
lcall
adc
mov
mov
mov
add
mov
lcall
and
cli
sub
pop
and
in
sub
inc
ret
xor
int3
sub
aad
pushf
lds
inc
xchg
jmp
xor
fnstenv
add
and
cmp
aam
aad
mov
xor
aas
or
inc
xor
inc
push
lcall
or
sti
in
push
cmp
cli
out
inc
dec
jo
ljmp
jno
push
add
and
lods
jb
repz
jbe
adc
negb
pusha
clc
pop
pop
adc
push
pop
gs
imul
ss
test
push
test
jo
jno
pop
or
subl
xorb
test
fistl
ret
adc
sarb
cmp
stos
dec
sbb
sbb
push
mov
jge
and
push
adc
lea
push
and
jns
dec
scas
sub
sub
stos
mov
in
xchg
iret
xor
or
lea
pusha
cs
mov
call
xchg
jle
cmp
cmp
push
fisubs
cmpsl
ss
mov
ret
lods
mov
mov
dec
stos
dec
insl
dec
shr
cmpsl
and
mov
mov
sar
mov
lret
rcrl
mov
pop
sahf
iret
adc
enter
arpl
popf
int
xor
imul
aad
xor
mov
imul
xchg
jae
lahf
lret
fstl
xor
mov
fsubp
push
jns
in
in
incb
stc
adcl
imul
loope
out
faddl
icebp
pop
xor
sahf
out
mov
xchg
xor
fnstcw
xchg
dec
mov
pushf
cmp
pop
ljmp
sbb
or
or
ja
stos
je
cmp
dec
jb
scas
xor
std
mov
es
xchg
sbb
pop
mov
inc
pop
fwait
lds
aaa
and
xor
shlb
ret
sahf
pop
vshufps
xor
mov
std
xor
repnz
dec
cmp
cmp
stos
pop
cmp
cld
aas
sub
inc
inc
in
faddl
call
adc
xlat
loop
pop
cs
lret
sbb
xorb
ret
or
jbe
repz
mov
pop
or
mov
inc
push
arpl
fs
cmp
pop
das
xor
sbb
push
sti
cmp
push
imul
jo
jl
call
push
inc
testl
adc
std
rclb
and
sbb
sbb
push
test
adc
xchg
mov
sbb
bound
insl
adc
mov
dec
xchg
add
push
xchg
das
adc
adc
outsl
jecxz
pushf
mov
fwait
xor
sahf
and
mov
cmpsb
movsb
rol
aas
cmpsb
cmpl
in
stos
pop
xchg
inc
pop
add
dec
sub
add
inc
dec
lock
ret
repz
fcoml
mov
in
push
int
aad
rcrb
pop
out
mov
sti
xlat
movsl
pcmpgtw
lret
fcompl
int
sub
and
push
adc
fnsave
jo
jno
jmp
fcmovnu
dec
jbe
ja
loope
push
loopne
jnp
cli
jge,pt
in
cmp
mov
push
rcr
test
test
jmp
dec
out
push
sub
jmp
cmc
testb
or
or
cmp
jge
inc
mov
sbb
sahf
adc
push
jmp
dec
adc
movsb
push
mov
mov
xor
sub
lods
mov
aad
mov
add
mov
divl
mov
enter
ds
mov
popf
mov
es
xchg
sub
imul
lret
adc
lcall
leave
sarl
cmp
cmp
mov
add
imul
inc
adc
inc
lock
dec
push
mov
in
gs
mov
pop
dec
cmp
jmp
popa
push
xlat
push
pop
jne
cld
dec
ret
sub
pop
lods
pop
les
idivl
push
popa
hlt
pop
cld
mov
sbb
add
xchg
push
imul
or
or
or
fstps
ja
push
outsb
pop
sub
insb
pushf
adc
aad
jo
xchg
mov
xchg
cmpsb
and
and
and
push
sub
sub
xchg
fiaddl
xchg
cmp
mov
cwtl
mov
fwait
push
push
sbb
mov
push
fiadds
rclb
test
dec
lods
add
dec
jne,pn
fidivs
dec
xchg
and
adc
mov
push
cvtps2pd
clc
pop
mov
mov
lcall
arpl
gs
sbb
lods
inc
imul
loope
mov
outsl
sub
mov
jne
sbb
ja
js
mov
mov
das
mov
sub
or
jmp
sub
push
lcall
jb
nop
lea
imul
clc
int3
xchg
xchg
setne
xlat
fwait
xchg
cmovge
cltd
xor
add
into
sahf
add
out
mov
mov
jae
xor
subb
pop
adc
movsl
scas
lret
xchg
sbb
fidivs
add
mov
xchg
mov
mov
adc
cmp
sub
sub
ds
jno
lret
in
xor
insb
shl
xor
cmp
pop
pop
aam
aad
pop
cmp
fnstcw
cwtl
push
inc
jns
loopne
loope
xlat
adc
dec
imul
insb
bound
push
jmp
xorb
mov
push
ljmp
lods
cmc
adc
mov
push
cld
imul
ljmp
add
outsb
dec
iret
or
or
inc
or
adc
cmp
adcb
imul
jnp
adcb
pop
mov
sbb
sbb
bound
adc
imul
inc
push
lea
das
sub
inc
push
sub
xchg
xlat
das
ss
xchg
test
ret
scas
xor
push
nop
xor
sahf
push
or
mov
mov
cmpsb
roll
test
mov
inc
jne
lods
sbb
jns
imull
lahf
mov
mov
fisttps
push
push
addl
mov
lds
addb
add
pop
mov
popa
into
or
xor
es
or
xlat
clc
push
imul
shr
inc
outsb
cmpsl
lcall
scas
out
jbe
fidivrs
jns
mov
jecxz
push
das
in
jbe
out
call
add
in
loop
mov
icebp
mov
mov
xchg
testl
out
sti
hlt
mov
std
sbb
sbb
push
pushf
sbb
pop
sahf
jae
iret
mov
sub
movsl
roll
test
adc
cmp
hlt
jns
pop
cmc
lock
mov
adc
cmp
jecxz
push
fwait
pop
mov
inc
ja
mov
daa
dec
sub
jbe
test
sub
dec
xor
stos
cs
sub
iret
sbb
aaa
ret
sub
add
cmp
jo
or
xor
cmp
mov
aad
jo
mov
dec
in
adc
inc
call
push
add
in
aam
lock
xchg
out
repnz
les
pop
xchg
add
lods
sbb
cld
test
add
jae
faddl
cmpsb
add
push
mov
sti
push
insl
push
aam
outsl
jns
insb
inc
or
mov
movsb
lret
adc
jge
fidivrs
loopne
mov
dec
sbbb
sbb
push
inc
stos
and
and
imul
lea
sub
movsl
sub
pop
xchg
setbe
mov
ljmp
mov
jl
insb
cmp
mov
mull
inc
test
loop
inc
bound
pop
mov
dec
cmp
dec
sahf
adc
mov
mov
mov
xor
xchg
mov
push
pop
shrl
imul
popa
push
dec
fcompl
data16
adc
jbe
jl
movsb
je
ja
outsl
and
sbb
adc
fsubrl
pop
fiadds
scas
push
lcall
jg
sub
call
or
movsl
in
cmp
adc
push
mov
mov
mov
ss
leave
sub
aas
mov
lret
lcall
and
mov
or
or
cmp
push
sti
push
test
sub
loope
movsl
pop
mov
daa
sbb
sbb
sbb
push
jle
mov
sbb
and
cs
daa
call
sub
es
sub
leave
xor
push
dec
int3
dec
int
into
mov
sarb
sbb
das
adc
inc
xor
inc
ficoml
dec
daa
inc
fstp
pop
mov
inc
inc
clc
dec
sbb
dec
pusha
dec
out
jnp
gs
outsb
push
pop
out
jmp
in
xchg
sub
mov
xchg
fdivp
cli
push
pop
and
test
iret
stos
jge
pop
int
jmp
movsb
mov
das
add
sub
sub
cld
or
jb
cmp
jae
je
jne
adc
cmpsl
loopne
pop
jns
ret
adc
jle
enter
mov
sbbb
and
test
loopne
pop
and
mov
and
mov
loop
xchg
lock
lds
das
xchg
adc
xor
mov
scas
xor
andl
inc
aas
rolb
pop
cmp
test
fisubrs
scas
push
js
mov
xchg
dec
sub
mov
popa
outsb
mov
push
cwtl
and
outsb
push
push
pop
insb
cltd
rolb
mov
movb
aam
fs
mov
push
rcl
rclb
cwtl
aam
cmpsb
and
mov
inc
repnz
je
mov
jbe
test
fisttps
jp
mov
jl
push
in
mov
or
sbb
xorl
ret
jno
mov
icebp
mov
out
mov
mul
add
xchg
stc
arpl
sahf
ret
xchg
ret
jg
mov
mov
add
inc
leave
insl
add
add
pop
or
in
mov
or
fists
xchg
test
daa
fists
in
scas
add
inc
ss
mov
xor
push
popw
and
mov
and
roll
xlat
lds
sub
push
xor
mov
int
popa
xor
popf
imul
sbb
cs
jnp
jae,pt
push
inc
xor
inc
pop
pop
es
std
xor
jns
into
mov
dec
jg
push
push
out
sbb
call
push
jle
in
xchg
in
inc
loopne
jae
sub
add
pop
adc
loope
ret
negb
idivl
inc
pop
gs
cld
mov
sti
add
pushf
add
out
add
aas
cs
jns
outsl
or
or
je
pop
mov
jno
jns
jp
mov
lods
push
jge
loope
xor
xchg
sbbl
in
lret
test
dec
sbb
and
cwtl
and
mov
mov
sub
test
pop
xchg
into
mov
add
mov
sahf
in
jno
xor
cmp
cmp
cmpsb
pop
sbb
jp
ds
stos
dec
pop
xchg
add
adc
shrl
xor
stc
dec
mov
mov
js
mov
jb
stos
cli
jge
dec
mov
dec
pop
cs
shr
add
pop
adc
and
andb
leave
arpl
and
mov
xchg
push
out
insb
fdivrs
mov
repz
jae
lods
fcmovnbe
fcompl
sub
insl
loop
sbb
jg
andb
call
test
fbstp
icebp
shll
repz
mov
dec
clc
cmp
xchg
sbb
sti
out
dec
mov
or
lcall
inc
fnsave
pop
scas
xorl
or
jl
or
stc
push
enter
stos
imul
lods
rcr
rcll
sbb
mov
mov
add
push
inc
dec
mov
xor
mov
xor
aam
or
sar
inc
sub
jno
mov
lret
push
int
lahf
dec
cmp
rorb
fcmovnbe
rcl
xchg
in
js
ds
popa
mov
sub
fwait
popa
fbstp
scas
loope
cld
cmp
dec
sbb
dec
add
dec
xor
adc
fsubl
push
xor
cmp
icebp
mov
hlt
pop
lea
clc
xchg
sub
es
cli
arpl
xor
jo
andl
push
fwait
xor
pop
ss
roll
jb
mov
in
adc
adc
rolb
jp
jnp
cmc
cmp
jmp
or
cmp
enter
and
dec
mov
jl
add
jle
and
subb
xlat
cs
jp
lcall
xor
fwait
xor
sahf
int
cmp
cmp
je
js,pt
cmpsb
pusha
std
imul
movsl
inc
inc
mov
fmuls
pop
mov
mov
daa
dec
mov
push
sub
mov
aad
add
xor
push
mov
push
rorl
lds
jle
pusha
pop
or
cwtl
arpl
notb
int
aas
adc
rol
pop
rcrl
push
adc
mov
mov
cmp
inc
mov
test
pop
jnp
jl
inc
aam
les
daa
sti
addl
jne
test
in
loope
xchg
shl
in
mov
addl
imul
xchg
xchg
out
es
inc
ljmp
cwtl
cmp
xchg
ret
add
add
rorl
leave
or
cmpsb
iret
cmpsl
mov
stos
pop
int3
shll
jle
adc
mov
jno
mov
and
mov
mov
mov
and
imul
rcl
addr16
jbe
sub
sub
sub
leave
xor
lret
daa
out
int
jnp
iret
arpl
shll
jnp
icebp
fistpll
mov
lret
inc
push
mov
inc
loop
daa
inc
in
rcll
not
in
in
mov
dec
inc
adc
sbb
hlt
and
into
out
adc
icebp
bnd
cmpsb
hlt
mov
in
cwtl
pop
mov
mov
and
cli
or
bound
pop
jmp
cltd
ds
add
jb
in
mov
fwait
or
rol
jne
in
in
outsl
jmp
adc
push
and
hlt
or
xor
pop
cltd
jnp
and
jno
fmuls
mov
push
popl
mov
pop
push
xchg
setne
pop
xor
jb
ss
xchg
jl
push
mov
jmp
imul
inc
pop
repnz
pop
movb
push
dec
mov
mov
dec
mov
and
mov
add
sbb
aas
jle
mov
repz
std
rcrl
ret
mov
vcvtsi2ssl
cltd
enter
lret
mov
jecxz
push
xchg
imul
rcl
aam
aad
xchg
scas
divb
jae
pushl
and
cmpsb
dec
js
jns
jb
mov
mul
jmp
and
inc
enter
call
popa
ja
in
add
fsubl
pop
adc
add
imul
in
stc
mov
xchg
xchg
push
cld
mov
decl
outsl
fwait
add
gs
rcrb
mov
or
sbb
test
idivl
lods
out
data16
scas
adc
mov
jmp
jo
push
push
mov
xor
and
mov
rcr
xor
jp
clc
lds
sub
leave
jb
dec
movhlps
cmp
add
cld
adc
add
cmp
cmpsb
std
aad
mov
fadds
mov
xor
fldl
filds
imul
cltd
in
in
push
xchg
dec
call
push
jmp
xor
push
fwait
jns
jecxz
push
push
pusha
repnz
dec
jl
addr16
pop
enter
clc
pop
mov
in
arpl
loope
inc
fbld
pop
jl
xor
push
ljmp
cmp
jo
jno
cmpl
add
push
fildl
adc
and
les
call
inc
orb
mov
sbbl
stos
jp
mov
insb
add
in
movsl
sub
inc
sub
inc
xchg
sbbb
loope
cltd
imul
mov
push
mov
int3
mov
mov
inc
int
stos
mull
outsb
pushf
inc
outsl
scas
dec
mov
fidivl
lock
mov
push
push
jbe
push
push
lcall
lahf
arpl
inc
sbbl
xor
mov
lret
gs
data16
into
mov
popa
xor
shll
aam
test
mov
loope
inc
jb
clc
fidivrl
frstor
add
sub
jg
aad
xchg
mov
out
mov
xchg
mov
or
mov
ss
stc
int3
cli
xchg
sti
daa
scas
sbb
mov
mov
add
add
adc
lods
mov
cltd
movsb
push
movsl
in
shll
pop
mov
mov
adc
push
popa
cmc
ficompl
pop
movsl
mov
icebp
clc
mov
flds
mov
out
mov
dec
mov
sub
lds
sub
mov
lret
xor
pop
int
scas
push
arpl
aaa
iret
out
sbb
cmp
lock
jnp
icebp
fmuls
cmp
fildll
mov
inc
pop
popa
loop
jbe
in
inc
dec
jnp
dec
push
xchg
push
ljmp
mov
cmp
push
lahf
push
jnp
push
pop
pop
int3
hlt
xchg
inc
clc
xor
in
pop
pop
inc
cld
cltd
mov
or
loope
mov
jns
push
or
insb
and
jns
sbb
or
leave
jno
jb
outsl
icebp
je
dec
cmovae
popa
adc
daa
adc
cwtl
jge
sbb
jg
movsb
cmp
dec
push
test
inc
and
push
mov
and
mov
icebp
nop
push
movsb
sub
push
xchg
and
lret
ret
lcall
clc
sarb
sbb
pop
xchg
push
andb
sahf
sub
sbb
lods
icebp
or
scas
xor
dec
mov
mov
inc
dec
popa
dec
xchg
das
mov
push
push
mov
inc
mov
add
push
fucomp
mov
jg
pop
call
pop
mov
bound
int3
mov
addr16
iret
sti
shlb
imul
adc
add
arpl
hlt
cltd
jno
xor
fidivrl
gs
mov
scas
loopne
loope
jne
jecxz
jbe
mov
push
testb
popa
in
aad
xchg
lcall
repnz
repz
sbb
je
sbb
stos
xchg
inc
dec
std
sub
aaa
leave
cltd
add
jge
pushf
jmp
imul
insb
invd
dec
xchg
movsb
xor
or
outsb
cmpsl
insl
cmp
test
imulb
adc
sahf
insl
jmp
sbb
test
mov
mov
jae
mov
and
and
pop
mov
sub
mov
lcall
jno
xor
bound
push
xor
lahf
mov
icebp
jno
aaa
or
xchg
mov
xchg
ret
ds
fldenv
loope
inc
rclb
dec
filds
loope
mov
dec
lods
inc
in
bound
out
sbb
mov
ljmp
mov
lock
icebp
cmp
popa
jle
idiv
imull
rclb
popa
or
cld
arpl
ret
pop
lods
add
leave
add
jae
push
lods
or
pop
jno
jo
jno
jb
int3
data16
push
jne
mov
sbb
adc
and
xor
loope
pop
xor
mov
test
cwtl
pop
and
xor
mov
dec
out
loopne
xchg
sub
xchg
cmc
lahf
sub
sub
xor
out
xor
lcall
mov
cmp
xor
ret
sahf
inc
in
les
inc
rolb
cmp
inc
js
cmc
inc
iret
dec
inc
adc
loop
dec
imul
mov
mov
sbb
rclb
in
mov
mov
fstps
jmp
mov
les
fistpl
adc
bound
jbe
int
xor
fs
dec
sub
and
jecxz
jo
sbb
aam
fisubrl
jne
frstor
mov
fneni(8087
jg
jnp
jl
xchg
mov
test
iret
sbb
xor
xor
in
ljmp
icebp
mov
add
adcb
outsb
repz
repz
mov
xchg
adc
xchg
mov
pop
into
mov
or
pushf
jp
or
push
adc
cmpsb
or
data16
adc
adc
sbb
stos
mov
mov
dec
sbb
mov
inc
mov
and
pushf
sub
pop
xor
dec
inc
lds
js
sbb
inc
xor
rol
inc
xor
xor
sarl
cwtl
pop
rcr
sarl
cmpsb
jo
ds
adc
pop
inc
dec
sahf
fiadds
dec
mov
loop
jbe
in
push
out
dec
scas
push
jmp
cli
pushf
aad
lcall
icebp
cmpsb
sbbb
jb
cmc
stos
testb
test
stc
xchg
xchg
lods
cmp
call
mov
add
scas
add
mov
xchg
insb
fs
pop
es
scas
or
mov
fisttpl
pop
shlb
mov
jnp
add
push
sbb
sbb
sbb
push
jecxz
rolw
cmpl
lret
test
mov
sub
xchg
jecxz
xor
xor
xor
cmp
cmp
mov
cmp
ss
or
aad
mov
mov
sti
loope
mov
ja
repnz
int
mov
mov
push
rcll
in
mov
pop
lods
push
mov
or
pop
cli
pop
cmc
pop
mov
fsubrp
popa
enter
fisubl
stos
stc
stos
addr16
imul
sbb
outsl
push
and
add
rolb
adc
or
push
sub
loopne
iret
jnp
cs
adc
jg
xor
adcl
add
test
sbb
xchg
inc
mov
sbb
mov
and
popl
and
xchg
mov
hlt
fs
mov
lcall
pop
dec
adc
lahf
cs
add
xor
movsl
jb
or
test
add
lods
jb
adc
or
inc
sbb
ljmp
nopl
dec
and
and
mov
add
jecxz
les
incb
test
xor
loop
xor
lcall
loop
shrb
ljmp
iret
ds
aas
lret
adc
faddl
ljmp
mov
lcall
xchg
dec
mov
orb
push
dec
int3
ja
pop
push
jb
repnz
repnz
pop
cmpl
lret
ss
jge
addr16
mov
add
mov
push
ds
outsb
leave
mov
fisttps
and
jb
jae
fildl
es
icebp
ja
js
loopne
jp
jnp
rcll
cs
jle
jg
das
sbb
add
sbbl
cmp
mov
and
out
and
fisubs
pop
pop
popl
aas
sub
sti
xchg
insl
xchg
cmp
iret
xchg
adcl
pushf
xchg
add
sahf
mov
repnz
ds
cmpsl
cmpsb
leave
inc
mov
stos
inc
dec
mov
inc
std
fidivl
shl
dec
mov
push
cmpsb
sbb
lahf
mov
push
push
adc
jmp
mov
pop
jmp
mov
and
das
xchg
ja
pop
daa
jb
bound
inc
int3
xchg
popf
pop
into
push
cmp
aam
test
mov
mov
mov
jne
fisttps
xor
jp
sub
fldl
pmulhuw
jl
out
pop
sub
std
or
in
xchg
pop
mov
add
and
cmc
and
nop
neg
push
sbb
shrl
inc
sti
out
push
xchg
std
out
pop
inc
lods
addl
rcrl
iret
aad
out
or
or
mov
mov
adc
mov
leave
pop
mov
add
ja
jmp
and
mov
and
jp
cmp
jae
and
mov
xor
dec
popf
lret
xor
pop
cltd
into
imul
pop
aaa
xor
insl
cmp
push
cmp
arpl
sahf
fsubrl
inc
or
iret
dec
pop
xchg
in
ja
fisttpl
xchg
lds
repnz
push
out
mov
push
or
ret
push
add
push
fdivrp
pop
pop
xlat
xchg
pop
repnz
negb
inc
or
popa
bound
arpl
or
jmp
mov
lret
scas
push
imul
xchg
jo
jno
jb
popf
or
jbe
ja
fisubl
cmpsl
jp
jnp
fistpll
nop
xchg
adcb
cltd
mov
xchg
test
fisubrl
lds
mov
fs
mov
lea
cmp
sub
daa
xchg
lds
mov
add
sub
xchg
and
sub
push
cmp
stc
cmp
push
jecxz
movsl
inc
test
inc
mov
test
inc
and
add
dec
jge
mov
test
jmp
cltd
push
sub
loopne
adc
aas
push
dec
lock
push
ret
adc
stos
xor
les
scas
push
inc
mov
bound
arpl
mov
imul
insb
shrb
int3
aad
int
add
fcoms
lods
fcmovne
adc
mov
loopne
mov
loop
push
jge
sbb
shl
mov
ljmp
fisubrl
pushf
icebp
clc
jmp
mov
out
or
mov
repz
cwtl
loope
push
sub
pushf
sub
fists
pop
mull
or
xor
mov
cmp
adc
push
mov
jo
mov
or
test
mov
cmp
and
xchg
adc
lods
jl
lds
out
sbb
test
ret
int
imul
roll
jno
xlat
ds
ljmp
fsub
outsl
mov
inc
filds
jle
sub
call
out
jp
gs
cmp
in
lock
out
mov
xor
sbb
repnz
repz
cmp
mov
push
stc
sbb
mov
dec
sti
mov
imul
push
pop
incb
insb
or
jae
inc
jne
pop
iret
mov
adcl
data16
jnp
push
push
int
jle
jg
dec
les
jp
push
jbe
stc
and
and
and
sbb
cmp
nop
mov
xchg
sub
xchg
or
xor
fwait
pop
aaa
push
cld
dec
mov
inc
sub
shld
jo
inc
inc
add
push
push
lods
movb
push
fdivl
and
dec
mov
mov
xchg
push
aaa
out
mov
je
mov
xchg
mov
inc
and
sub
xor
orl
lret
negl
mov
addr16
push
jo
loopne
ljmp
in
xlat
imul
fldenv
stos
mov
inc
je
jnp
into
jecxz
xor
cmpb
out
mov
add
xchg
inc
mov
and
ret
sub
clc
sub
ret
dec
into
xchg
xchg
cs
push
ds
mov
pushf
cmp
and
mov
cmpsb
jmp
or
out
or
or
cmp
callw
dec
dec
scas
mov
pop
mov
dec
and
sbb
out
pop
jb
dec
and
mov
pop
pop
and
rcll
mov
arpl
data16
lret
scas
mov
iret
pop
hlt
sub
je
adc
nop
mov
sbb
xlat
stos
sbb
flds
fcmovbe
fidivrs
cli
pop
dec
testb
in
out
adc
test
xchg
push
in
cs
jae
div
div
sub
cmc
add
out
sbbl
stc
adc
cld
xchg
cltd
add
push
cmp
dec
test
pop
mov
shlb
sbb
es
xchg
inc
push
mov
fsts
in
cmp
lahf
adc
dec
push
lock
mov
inc
add
test
add
and
lcall
and
mov
pop
sbbb
ljmp
cs
xchg
jmp
xor
out
fwait
xor
cmp
stc
jp
and
pop
cmpsl
inc
xchg
sbb
push
push
pushf
inc
lods
in
inc
rolb
dec
dec
push
mov
dec
std
in
mov
stos
push
adc
mov
ret
mov
lret
sar
int
adc
ret
pusha
xchg
scas
enter
std
ljmp
into
xchg
mov
and
sbb
roll
daa
lret
jno
or
jbe
and
pop
dec
jbe
rcr
cs
shl
jp
fsub
into
out
jge
pop
in
cmp
mov
aaa
add
mov
mov
in
dec
mov
mov
dec
nop
add
cli
jb
xchg
cld
mov
enter
jle
into
add
add
dec
sbb
pop
cmp
push
xor
lods
sbb
test
adc
xchg
scas
xor
lods
insb
sbb
into
mov
inc
sbb
sbb
pop
cld
mov
mov
rclb
and
dec
sub
sub
leave
lea
lret
xchg
jg
int
popa
ror
pop
rolb
sbb
jno
es
sbb
cmp
data16
cltd
mov
fildl
ja
and
sub
addr16
in
xchg
fisubl
push
push
sub
icebp
cli
mov
push
loope
std
pop
mov
sub
mov
add
cli
sub
jle
dec
std
repz
and
movsl
mov
add
xchg
imul
mov
or
fisttps
jae
fisttpl
dec
bswap
nop
mov
adc
lcall
sub
les
out
sbb
dec
ja
test
and
jge
imul
pop
je
sub
xchg
roll
xchg
icebp
cs
loop
xor
cwtl
xchg
jp
arpl
nop
aaa
or
cmp
call
sub
imul
movswl
inc
jmp
rolb
inc
xor
jno
test
or
call
dec
scas
dec
pop
dec
int3
or
push
in
out
or
push
test
and
in
push
pop
jb
cmp
mov
pop
lock
or
mov
ds
pop
adc
int
sbb
rcrl
aam
aad
add
data16
fnstenv
stos
add
fsubr
fstl
js
outsl
daa
jp
jnp
mov
jge
dec
in
out
hlt
scas
call
xor
fucomi
push
in
stos
dec
push
out
jmp
repnz
repz
fistl
sar
call
adc
sbbl
fwait
js
inc
sub
icebp
call
xor
pushf
pop
jl
or
or
jl
mov
cmp
push
mov
insb
cli
sbb
adc
outsb
pop
insl
and
push
mov
and
mov
inc
ret
movsl
les
pop
pop
pop
mov
cli
xor
xchg
push
xor
roll
inc
sarb
fcmovbe
repz
cmp
popa
fiaddl
sub
xchg
or
dec
aaa
mov
scas
sahf
mov
jmp
nop
imul
push
stc
mov
lret
mov
cli
testb
pop
out
mov
les
popa
inc
jp
arpl
mov
add
add
data16
cmp
jecxz
jb
jae
fdivl
leave
jbe
ja
aas
sarb
lods
adc
in
xchg
push
mov
cmc
sbb
shll
inc
test
jns
rorw
mov
fisttpll
and
push
sub
out
nop
sub
mov
xor
xchg
xchg
jno
xchg
ja
stos
cltd
lret
lcall
xor
lahf
cmp
insl
mov
jbe
mov
test
inc
cmp
sbb
inc
scas
pushf
push
add
xor
jns
out
push
out
push
inc
mov
push
push
push
and
rorb
movsl
testb
and
push
clc
xchg
push
dec
call
fs
out
ds
xchg
jb
imul
aad
jecxz
xlat
aaa
and
fstpt
fsub
dec
or
js
adc
aaa
loope
cmp
push
in
cmp
sub
ljmp
xchg
pop
out
cmpsl
push
mov
jl
mov
or
and
notb
into
in
xchg
cwtl
call
adcl
outsb
lcall
add
cmpsb
lahf
rclb
or
daa
cmpsb
mov
push
mov
cmp
sbb
adc
lods
push
sbb
sbb
loopne
test
push
mov
and
addl
mov
push
xor
scas
test
mov
mov
pusha
out
lods
rcl
mov
aad
mov
and
lods
jb
fucomi
add
push
inc
push
test
out
loop
orb
lea
sub
ds
cmp
mov
xor
sub
addb
pop
fwait
push
inc
hlt
adc
push
testb
jmp
jecxz
cli
ss
bound
adc
data16
cmc
push
push
push
adc
pop
xor
adc
shlb
ret
aam
addr16
dec
aaa
ja
js
mov
adc
dec
movsb
push
jns
cmp
sbb
cmp
xchg
test
imul
inc
jne
nop
pop
and
and
push
sub
sub
movsl
sub
xlat
mov
xor
jno
lcall
aaa
cli
js
adc
lods
dec
andl
inc
sbb
outsb
sub
loop
es
test
test
mov
addr16
scas
dec
jp
mov
mov
mov
add
sub
lret
ffree
mov
ficompl
daa
cltd
dec
cwtl
mov
push
adc
lret
gs
or
imul
push
test
jno
add
jg
inc
enter
ja
aaa
sbb
loop
insl
jl
jge
sahf
in
cmp
out
dec
and
lods
test
in
xchg
ret
shr
inc
lock
repz
cmp
testl
inc
xchg
adc
mov
hlt
add
insl
mov
add
jg
int
mov
or
sahf
add
push
pop
les
push
adc
jae
adc
rolb
paddsb
imul
add
pop
and
and
sbb
fisubrs
jge
cmp
imul
jbe
sub
shll
push
sbb
cs
xor
xor
frstor
aam
jns
jae
daa
inc
fdivrs
pusha
test
and
mov
sahf
mov
add
loope
pop
xor
dec
mov
dec
rorb
dec
js
scas
push
push
sbb
push
xchg
adc
pop
pop
pop
lret
push
clc
jp
iret
cli
insb
sti
shll
and
or
and
insl
add
add
mov
lods
out
insb
pop
outsb
or
sahf
lods
jae
je
loopne
mov
mov
adc
push
jnp
mov
sub
sbb
xor
sub
push
loop
or
push
mov
outsb
sub
ljmp
sti
sub
add
xchg
xor
xor
incb
lods
xor
pop
iret
mov
cmc
push
movsb
ds
sub
in
mov
int3
xchg
inc
jge
je
xchg
jmp
inc
push
ljmp
cmp
icebp
or
mov
pop
push
pop
push
push
sub
mov
sub
and
add
mov
ret
jg
inc
xchg
test
pop
jae
xchg
test
in
mov
pop
dec
mov
imul
cmp
popf
jge
pop
aam
lds
xchg
paddusw
in
mov
sbb
mov
jl
bound
mov
scas
subb
push
pushf
push
xor
test
stos
aam
mov
cmp
and
pushw
jb
callw
and
cmp
and
push
lods
pop
mov
jo
insl
lea
jl
push
dec
ds
mov
movsb
icebp
pop
ret
lods
mov
aad
inc
clc
mov
pop
inc
cld
pop
fsubl
add
fisttpl
cmpsb
loopne
dec
lahf
jp
or
outsb
movlpd
push
cltd
iret
xchg
push
leave
lea
adc
pusha
lcall
mov
repz
sub
push
and
test
jnp
inc
ret
pmulhw
jp
mov
subl
or
inc
inc
lds
lret
pusha
out
jnp
loopnew
xorb
dec
sub
and
test
dec
and
fbld
jb
shrb
insl
dec
clc
and
xlat
mov
cmp
lea
push
loopne
adc
scas
cmp
push
mov
adc
rclb
dec
leave
sarl
jecxz
dec
outsl
cmpsb
jecxz
inc
push
push
icebp
hlt
int
fisttps
out
daa
int3
decb
fwait
int3
dec
mov
iret
test
jmp
les
jecxz
cwtl
mov
icebp
xchg
push
or
out
jle
shll
sub
adc
testb
jnp
mov
adc
or
mov
mov
push
test
push
dec
rcrl
shlb
pop
or
lds
pusha
mov
jo
cmpsb
sbb
call
shrb
mov
outsl
cwtl
sub
sub
pusha
stos
sub
iret
push
cmpsl
push
fidivrs
or
out
jnp
in
dec
dec
out
mov
ljmp
mov
dec
out
mov
repnz
shl
push
adc
clc
dec
stc
or
inc
das
idiv
pop
std
adc
cmp
fwait
add
arpl
sbb
or
mov
dec
or
push
sub
lcall
lods
xor
pushf
mov
sbb
jg
sbb
sbb
ret
and
and
imul
daa
lods
call
rcll
adc
das
mov
xor
nop
mov
stos
fbstp
aaa
rorl
loopne
cmp
lods
imul
sti
jo
ss
inc
fnsave
out
mov
dec
dec
rcll
push
xlat
out
or
jmp
push
call
sbbl
je
xor
pusha
pop
cmpsb
ret
xchg
lods
arpl
idivl
ret
stc
pusha
dec
out
and
push
incl
jg
xchg
or
and
leave
pop
stos
outsl
les
fimull
xor
mov
jno
cmpsl
jnp
push
push
jge
jle
in
psrlq
lods
sbbb
pop
jbe
in
mov
shll
and
sub
dec
ret
fstp
xchg
pop
cwtl
xor
sbb
xor
cmp
popf
xchg
sahf
lret
lahf
aam
pop
mov
add
cmpsb
inc
mov
mov
loopne
inc
in
xchg
lods
dec
scas
lods
cmp
mov
aam
mov
rep
mov
xchg
outsb
mov
mov
mov
test
fistpll
je
shl
mov
xlat
cmpsl
pop
xor
popa
icebp
push
adc
lret
scas
andl
into
iret
jecxz
pushf
bound
insb
xor
aam
mov
movsb
pop
jno
jb
mov
insb
add
push
js
push
loop
sbb
imul
out
out
fs
jmp
mov
repnz
inc
lcall
mov
xchg
pusha
jne
xchg
adc
cmp
add
lods
test
fildl
nop
lahf
jg
pop
movsb
or
ret
fisubrl
movsl
hlt
adc
test
je
imull
jge
xchg
dec
cltd
int
xchg
ja
jbe
mov
lods
or
push
mov
mov
and
mov
mov
lret
icebp
mov
pop
lods
pusha
jae
popa
xor
arpl
xor
test
lds
aas
cwtl
rcrb
stc
aam
aad
inc
cld
loopne
lods
inc
add
add
sub
jl
dec
mov
push
loop
jmp
stc
cmpsl
std
push
in
push
fildl
xchg
lods
push
pop
test
out
out
jns
addr16
shrl
cmc
fidivrl
pop
gs
xchg
sub
jg
jg
pop
mov
cmp
shl
out
add
repz
sub
sahf
pop
cmpsl
outsl
test
adc
scas
mov
pop
cwtl
pop
or
ss
enter
into
cmc
lods
xor
inc
cmp
mov
cmpsb
mov
mov
adc
mov
ja
sub
fdivl
sbb
mov
inc
incb
xor
xchg
jmp
lods
clc
mov
dec
fwait
cld
in
cmp
mov
mov
arpl
aaa
adc
mov
jg
fbld
add
mov
jmp
xor
lahf
mov
sahf
adc
fadds
in
fmull
mov
outsl
jbe
mov
hlt
out
jge
push
popf
jmp
push
ret
dec
mov
push
and
xchg
imul
push
adc
mov
pop
mov
fucomip
hlt
aas
dec
pop
and
sub
and
cmpsl
out
jb
add
insb
inc
arpl
or
inc
cmpsl
xor
push
imul
call
cltd
sub
ficompl
in
mov
pop
mov
xchg
pop
xchg
pushl
xchg
xor
ret
cmpsb
aam
ja
clc
ret
in
ds
in
sub
cli
push
fadd
repnz
push
shlb
cmp
cmp
pop
mov
stc
test
cmpsl
inc
iret
cmp
and
or
inc
dec
sti
stos
clc
test
and
scas
sahf
pushf
pushf
mov
popf
push
mov
addl
mov
add
xchg
adc
mov
pop
cld
mov
enter
movsb
push
lods
mov
and
stos
popa
in
pop
cli
xchg
loopne
ret
dec
loop
mov
hlt
xchg
inc
rclb
cwtl
rol
jl
dec
mov
cltd
mov
shrb
jle
rorl
inc
loop
arpl
add
lods
subb
ficoms
stos
outsl
subb
fwait
loopne
add
test
repnz
mov
icebp
xchg
push
dec
and
xor
bound
jle
cs
xchg
je
in
out
jle
mov
push
mov
popf
xor
push
out
inc
mov
sbb
pop
push
push
sub
push
pusha
rolb
neg
and
sbb
dec
cmp
es
scas
icebp
xor
or
aaa
sub
pop
inc
cmp
ja
jae
adc
inc
out
bound
iret
cmpsb
or
or
adc
push
in
cmp
push
jge
xor
cmp
adc
push
or
xor
push
lock
mov
cmc
push
test
lea
fucomp
sarb
pop
cld
mov
andb
psubsb
jp
adc
push
pop
sub
cmp
dec
xor
jle
adc
push
sub
push
loopne
and
adc
loope
adc
push
icebp
push
cmp
cmp
mov
jmp
es
cmp
jg
and
imul
pop
fldenv
je
imul
xchg
cwtl
xchg
mov
push
and
and
and
test
mov
das
xorb
pop
push
cs
mov
inc
popa
sub
cmpsl
jb
push
inc
jp
mov
pop
pop
mov
inc
jbe
xlat
jo
push
dec
aam
mov
jne
mov
sti
push
js
sub
fsubrl
jge
aam
mov
adc
stc
ljmp
scas
scas
cwtl
xchg
mov
ljmp
test
loopne
push
popf
loop
mov
dec
sbb
gs
mov
enter
ljmp
jb
dec
subb
add
or
mov
mov
ja
push
fst
stc
mov
test
pushf
stos
cld
pop
insl
or
sub
push
mov
mov
cld
rcrl
add
mov
int
lcall
outsb
pop
push
jo
scas
or
data16
outsl
jns
ljmp
cmpsb
mov
in
sub
pop
out
fisttpl
pop
mov
or
mov
mov
and
in
mov
movsb
aaa
fdivl
movsl
jg
dec
inc
arpl
push
cwtl
xor
pop
inc
fwait
xchg
push
or
inc
pop
nop
add
push
xor
shll
cmpsl
push
pop
adc
leave
cmp
or
aad
cwtl
pop
shlb
ljmp
sub
test
stos
enter
mov
or
push
pop
xor
ja
je
daa
cwtl
rcll
sub
and
out
sub
adc
dec
mov
fsts
sti
fistpll
pop
add
or
push
xchg
xchg
sub
mov
jns
sub
dec
shll
mov
mov
jns
dec
int3
dec
push
add
pop
lea
sahf
fdivr
mov
test
pop
xchg
push
xlat
cld
aaa
in
and
mov
insb
push
out
in
add
mov
pop
mov
imul
pop
aad
mov
cwtl
mov
movsb
xlat
pop
sub
push
push
sub
test
imul
daa
jbe
shrb
fwait
mov
or
mov
sbb
mov
mov
out
add
popf
and
sub
loope
icebp
mov
pushf
mov
test
ds
test
iret
nop
test
icebp
dec
aas
lods
jp
mov
jb
shrb
outsb
fucom
pop
add
adc
in
test
divl
movsl
mov
imul
push
mov
mov
and
fdivr
imul
out
or
cmp
stc
jo
cmpb
movsb
fisubrs
fistps
hlt
out
movsl
sbbl
mov
mov
push
sbb
cmp
xlat
cmp
xor
mov
mov
pop
out
xabort
mov
repnz
dec
fnstcw
sahf
jns
xor
lret
push
pop
cltd
das
or
fstpt
test
or
or
or
sbb
sbb
jns
mov
gs
mov
jo
mov
mov
push
iret
xchg
xchg
mov
mov
add
mov
fidivl
push
std
aas
gs
pop
dec
pop
cmp
or
pop
pushf
fdivs
or
cs
mov
push
clc
mov
insl
stos
pop
or
repz
push
rorb
fstpt
adc
inc
in
mov
call
pusha
fsts
adc
pop
push
or
push
and
outsl
imul
pushf
push
stos
inc
jne
mov
arpl
in
mov
imul
mov
add
mov
sbb
add
push
add
popf
jge
rcrl
add
pop
test
sbb
das
or
cmp
mov
inc
xlat
inc
ja
adc
dec
scas
cld
dec
sub
inc
sbb
inc
push
insb
lret
and
repnz
jnp
push
sub
inc
mov
mov
int3
dec
bound
push
sub
imul
scas
dec
push
sub
xchg
cs
cmc
mov
ss
stos
push
cmp
insb
pop
xlat
dec
lcall
out
mov
fsts
add
pop
xchg
pushf
out
adc
nop
outsl
das
add
stos
imul
sar
mov
test
xchg
xor
callw
scas
mov
fwait
sti
shll
add
movsl
sbbb
push
repz
decb
mov
cmp
mov
xor
mov
outsb
mov
cli
inc
int
pop
das
pop
out
popf
aas
pop
js
xor
adc
js
push
lods
addr16
push
sbb
pop
add
mov
xor
mov
or
jne
cmp
push
rcrb
mov
test
dec
sub
mov
shl
xor
and
jo
xor
jmp
add
mov
inc
roll
test
sub
xor
xor
out
cld
test
cmp
shrb
push
adc
aad
or
mov
aas
push
add
jns
aad
or
mov
inc
aaa
and
jmp
les
jecxz
mov
mov
adc
fsubrs
ds
add
mov
or
jecxz
sbb
call
cmp
xor
adc
sub
ljmp
adc
mov
cltd
jae
ja
jg
into
xlat
lods
adc
nop
sbb
loopne
mov
xchg
xchg
push
inc
cmc
lahf
xor
test
in
dec
add
xchg
mov
jge
les
push
add
int3
jp
jmp
add
mov
dec
mov
das
nop
dec
ret
sahf
or
mov
xor
loope
jnp
dec
pop
add
sbbb
mov
or
push
xor
inc
cmp
out
stc
pop
dec
leave
pop
mov
andl
dec
jns
in
stc
int
pop
into
outsb
loop
out
fwait
pop
sbb
cmp
pop
imul
shrl
loope
std
sti
sbb
jle
out
jae
pop
inc
xor
les
pop
lcall
jo
xchg
jns
addl
add
jecxz
imull
loope
fidivrl
xchg
movsl
cmp
jno
das
iret
leave
dec
test
mov
xchg
push
mov
adc
add
mov
test
sub
inc
lock
stos
jb
push
cmp
div
scas
cli
xchg
jle
js
mov
jo
in
fwait
adc
xchg
cmpsb
leave
sbb
and
mov
push
inc
jp,pn
mov
daa
movsl
fisubl
pop
adc
mov
jne
cmp
sbb
push
test
cltd
loopne
out
push
into
ss
jmp
dec
mov
mov
sahf
mul
repz
enter
testl
adc
clc
cmp
dec
jb
stos
xchg
push
push
shll
shrb
cwtl
pop
aam
fs
cmovbe
push
push
mov
cmp
js
pushf
inc
cs
add
fsts
inc
dec
xchg
pop
dec
pushf
xchg
pinsrw
in
aad
adc
enter
jb
xchg
pop
fldt
shrb
fdivs
and
pop
push
mov
push
push
scas
rcl
mov
pop
pop
cwtl
pop
jp
les
mov
pop
movsl
xorl
push
mov
movsb
mov
push
fsubs
jle
push
ret
inc
xchg
out
repz
rcll
int
mov
in
sub
sub
jnp
sub
cli
test
cwtl
test
inc
iret
mov
xor
push
xchg
mov
xchg
jmp
in
lds
repz
mov
jg
mov
dec
mov
out
arpl
daa
push
ret
jae
or
rcll
inc
fld
cs
pop
pop
inc
push
mov
in
in
das
stos
call
pusha
ljmp
mov
dec
es
into
adc
ds
repz
fs
xorb
mov
dec
rol
ret
cmc
out
ret
mov
dec
inc
push
inc
jmp
into
mov
out
pop
xchg
fsubs
pusha
mov
mov
imul
push
jno
lret
inc
inc
or
pop
or
cmovno
xchg
arpl
adc
in
bound
xchg
ret
movb
dec
sbb
sub
xor
adc
and
push
dec
lds
fsubs
call
icebp
sarl
or
js
add
pop
imul
jle
lods
mov
cmpsl
and
xor
sub
dec
lock
mov
push
inc
lcall
xchg
es
lods
push
cli
nop
out
adc
push
xchg
sbb
or
add
pop
push
sbb
push
lret
and
mov
mov
ror
or
movsl
add
push
sbb
popa
scas
cld
jmp
call
icebp
cmp
rorb
or
push
gs
test
pop
and
scas
std
sbb
dec
xorl
and
cs
dec
dec
push
push
inc
push
push
cmpsl
ja
test
add
mov
fsubrl
jl
or
xchg
push
jno
lret
sbb
aad
ss
pop
daa
bnd
push
test
lcall
andb
aam
insl
mov
outsb
mov
das
add
aaa
mov
rcr
mov
pop
adc
cs
mov
sub
cwtl
xchg
das
sub
mov
xchg
daa
and
popa
push
pushf
data16
out
sub
jne
test
rorl
xor
adc
call
mov
mov
sarb
jnp
loope
into
out
add
xorl
sahf
push
add
int3
jle
pop
xchg
mov
fcom
or
inc
push
negl
adc
das
out
je
test
push
sub
jecxz
jp
cltd
clc
test
sub
aad
ficomps
scas
test
push
scas
gs
out
sbb
mov
int3
sub
cld
jb
test
shll
lods
cmpb
pop
ljmp
dec
cmp
mov
pop
stc
insl
sahf
outsb
in
icebp
xchg
xchg
shlb
stos
stc
xor
push
inc
sub
pop
pusha
sub
push
inc
addl
adc
icebp
or
adc
cmpsl
ret
in
ja
mov
cmp
pop
movsb
and
sub
scas
lods
popf
test
push
shll
pop
ja
push
push
jns
hlt
enter
cmp
je
ret
vmovdqu
push
movsl
cli
dec
add
out
push
jle
aam
cmp
out
lea
repnz
lcall
scas
push
jp
or
std
lea
lret
scas
fdivrs
call
jmp
imul
or
popa
lods
data16
popf
es
mov
mov
push
fsubl
cltd
fs
sbb
ja
or
and
sbbl
arpl
and
dec
cmp
or
roll
xor
xor
or
jbe
cltd
fs
or
pop
jecxz
inc
movsb
sub
out
mov
scas
dec
addr16
cmpsb
aam
add
mov
ss
sub
mov
pop
mov
je
mov
bound
pop
jnp
mov
jmp
push
aam
outsb
jns
and
loope
dec
push
inc
sbb
insb
test
jnp
fdivrl
cmc
into
xchg
ret
xlat
push
cmp
test
mov
push
lods
lods
xor
sbb
ja
xchg
adc
and
nop
test
jns
adc
mov
pop
xchg
call
jb
jl
jmp
mov
ds
jno
jns
and
dec
gs
popf
loope
mov
repz
int
rcrl
push
or
in
subl
fs
jecxz
inc
xchg
popa
sar
inc
sbb
xor
fimuls
dec
add
mov
fwait
inc
push
xchg
ret
pop
jg
lret
ret
movsl
cmp
stc
mov
jne
lret
sbb
xchg
xor
mov
jmp
mov
pop
fcomps
les
xor
int
push
cwtl
movsl
arpl
repz
mov
movsb
arpl
sub
cli
pop
sbb
push
stos
mov
lods
lret
ja
xor
outsl
mov
push
scas
push
adc
jae
aas
mov
fisubrs
cld
cmpsb
ret
out
imul
xchg
imul
mov
scas
jmp
dec
es
jnp
out
leave
push
mov
ss
jl
jge
sub
and
mov
outsl
enter
lea
dec
aad
push
or
out
daa
xchg
xchg
adc
repz
cmp
adc
mov
mov
mov
or
in
hlt
inc
and
jb
movsb
cmpsl
mov
lcall
cmpsb
mov
ffree
clc
pop
sahf
gs
cmc
test
push
inc
pushf
leave
loop
loope
imulb
movsb
hlt
fisubs
repz
jl
punpckhbw
xor
stc
scas
test
mov
stos
xor
push
sub
pop
shr
pop
mov
movsl
scas
outsb
push
cmp
and
ja
ds
xchg
in
into
push
test
jl
in
inc
dec
dec
sub
xor
dec
out
into
cmp
mov
lret
fistl
mov
lahf
pop
mov
pop
or
insb
pop
repz
pop
and
call
mov
addr16
in
outsb
xchg
fwait
dec
jp
imul
fs
xor
sbb
pop
adc
outsb
xchg
aad
clc
cmp
sub
je
scas
out
add
mov
jmp
adc
add
sub
arpl
cld
dec
adc
xor
push
test
movsl
or
or
sbb
lods
inc
pop
inc
xor
loope
pusha
add
pop
cmpsb
out
stos
leave
adc
pop
int
xor
cs
add
sub
mov
xor
hlt
and
lahf
and
sub
jl
mull
iret
enter
pop
push
popa
sub
pop
jmp
cmp
dec
call
pop
dec
sbb
push
shrl
js
les
mov
in
xor
xchg
sub
clc
fimuls
xchg
test
out
cmp
test
mov
xchg
mov
add
fstps
pop
sbb
adc
mov
push
jnp
xor
sub
jns
mov
xlat
sbb
cwtl
and
adcb
mov
push
and
and
jno
adc
sub
das
xchg
add
aam
jle
popf
mov
xor
hlt
mov
cld
jbe
mov
test
idiv
mov
decl
mov
dec
mov
outsb
aas
push
inc
sub
sub
daa
push
jbe
jmp
dec
test
push
loopne
mov
push
inc
inc
push
mov
xlat
mov
push
xor
cmc
aaa
jge
imul
ss
arpl
jne
nop
hlt
popf
or
roll
sbb
pushf
push
rcrb
imul
dec
inc
js
cmpl
ret
mov
mov
pushf
mov
pop
lea
clc
jb
or
xchg
loopne
repnz
mov
addr16
stos
cmpsb
popl
jmp
xor
rclb
pushf
inc
jns
push
lcall
scas
mull
sbb
cmpsl
jb
pusha
push
mov
lods
or
addl
loopne
jge
imul
mov
hlt
adc
mov
adc
sub
mov
pop
jno
pop
ja
hlt
jg
mov
and
bound
enter
jb
flds
fnstenv
les
rol
mov
pop
mov
dec
dec
and
jo
loope
push
pop
hlt
andb
jns
orb
push
icebp
mov
push
pop
mov
test
pop
jp
arpl
pop
xlat
mov
inc
repz
jo
pop
cmp
cli
in
inc
dec
pop
ja
cmp
das
jnp
jb
pop
sub
fcomps
sbb
ja
emms
pop
ljmp
cmp
cmp
test
push
sub
add
lea
shrl
inc
xchg
and
xchg
adc
add
dec
in
xor
sbb
push
xchg
dec
adc
pop
inc
xchg
dec
and
mov
mov
outsl
ja
cmp
and
popa
int3
repnz
jno
mov
push
das
mov
adc
mov
popf
lods
xchg
cmp
movsb
in
push
sub
sub
inc
and
dec
enter
push
popf
ja
xchg
in
mov
push
push
mov
das
stos
fcompl
pusha
mov
inc
dec
pop
cmp
jmp
inc
xchg
pop
in
sub
mov
cmp
jge
mov
jnp
pop
dec
out
je
scas
out
or
ja
std
xchg
or
adc
xor
mov
clc
popa
cmpb
add
mov
shrb
pop
pop
jmp
mov
jns
sub
cs
cld
xchg
add
cs
sbb
mov
nop
lods
push
adc
lock
push
sub
lret
mov
add
cli
inc
add
push
add
orb
outsb
jo
push
push
in
dec
xchg
or
loope
imul
pop
adc
bound
xor
sub
aaa
loope
subb
add
gs
data16
aam
jp
jno
cli
les
mov
sbb
pop
push
into
jo
add
jne
push
faddl
ss
std
mov
enter
pop
pushf
and
out
mov
cmp
movsb
in
sbb
xor
lcall
out
cmc
add
jmp
clc
lock
or
or
or
push
mov
push
ret
cmp
rolb
push
sub
cmpl
sub
jmp
in
dec
mov
hlt
sti
rclb
add
divl
jne
gs
mov
fs
sbb
jne
test
int3
addr16
into
loop
lods
insl
popa
cmp
sbbl
out
arpl
and
push
mov
xchg
xchg
xchg
or
hlt
ja
ficoml
push
inc
push
fwait
dec
cmpl
mov
mov
jge
imul
lods
inc
popa
scas
xor
cmpsl
test
jl
mov
cmpb
xlat
ljmp
out
sbbl
mov
adc
or
sbb
ljmp
fisttpl
push
xor
dec
mov
je
data16
imulb
xor
ret
pop
push
mov
orl
add
test
std
ds
xchg
es
sbb
orb
cmpsl
adc
mov
bound
inc
cmp
pop
add
stc
shll
xor
xorl
out
and
je
fisubrs
sub
test
jne
fwait
scas
inc
add
xlat
rcrl
or
fisttps
pop
lahf
iret
xchg
pop
and
adc
ret
cmpsb
push
cld
sub
loop
push
ret
sub
in
sbb
movsb
mov
pop
out
scas
xor
lds
xchg
add
fadd
out
and
loopne
adc
jo
inc
sbb
mov
ja
sub
push
outsl
inc
lods
std
sub
pop
out
aaa
mov
pop
stc
mov
arpl
pop
inc
in
outsb
imul
inc
jge
pop
sti
push
mov
outsb
cmc
lahf
sub
push
mov
dec
push
xchg
ret
data16
leave
pop
push
dec
lret
inc
mov
insb
push
cld
adc
cld
push
fwait
cmpsl
fs
dec
or
std
dec
pf2id
les
xor
and
frstor
jp
cmp
adc
imul
dec
jecxz
loop
imul
adc
outsl
aad
fsts
clc
ss
ss
pop
and
sub
test
int
or
push
push
data16
lret
sbb
mov
inc
pop
int3
xor
int3
sahf
mov
lahf
or
movsl
push
dec
push
test
nop
xchg
add
xchg
xchg
aad
shrb
pusha
xchg
mov
xchg
loop
je
push
sub
inc
sahf
insb
or
pop
les
fldenv
pop
inc
mov
push
push
sub
in
jno
mov
jbe
fists
jg
cld
push
cmpsl
adc
pop
stos
enter
jge
ljmp
jnp
stc
faddp
outsl
scas
mov
lea
push
push
ss
stos
dec
shll
popa
adcl
loopne
sub
insl
dec
clc
lods
loope
jo
fidivl
in
fstl
adc
subb
sti
mov
repz
cmpl
aas
push
sub
pop
or
sub
jge
cmp
mov
sbb
push
mov
fidivrs
xor
imul
xlat
loopne
std
xchg
mov
aaa
and
stos
out
lret
dec
xchg
dec
jae
bnd
icebp
leave
js
icebp
xchg
mov
mov
xchg
sbb
mov
jmp
jnp
xor
sahf
lret
test
lret
faddl
or
add
das
xor
mov
push
sahf
mov
sub
sbb
nop
adcl
insb
mov
pop
idivb
fsts
leave
js
into
insl
xchg
mov
and
add
ds
mov
mov
xchg
jp
mov
add
mov
sub
mov
or
mov
jecxz
stos
jb
pop
aad
xor
ffreep
mov
cmc
sub
add
xchg
sbb
xchg
pushf
addl
out
sbb
data16
loopne
pop
sub
mov
cmp
lds
sub
jae
loopne
test
insb
lea
jbe
sar
shlb
mov
int3
push
or
jl
pop
jae
jo
jb
pop
xchg
int
int3
adc
push
sahf
data16
sub
push
sahf
mov
cmp
adc
dec
mov
xor
mov
cs
cmpsb
push
ds
aas
addb
sbb
movsl
push
pop
cld
jbe
mov
arpl
mov
adcl
lock
sahf
lahf
repnz
aam
add
dec
in
std
xchg
shll
xlat
xor
sahf
jno
cmpsb
sti
jo
lahf
lea
xorl
jmp
sbbb
xchg
push
xchg
xchg
sbb
jle
lods
lahf
fdivr
mov
xchg
pop
inc
int3
mov
out
mov
and
mov
or
sbb
insl
loope
in
jmp
xchg
mov
push
adc
into
mov
jne
fwait
cli
xor
cld
or
icebp
xchg
stos
inc
jae
and
sbb
cli
cwtl
dec
cltd
dec
pop
add
clc
clc
mov
or
dec
pop
cmp
mov
mov
xchg
mov
mov
cld
sub
pusha
pop
push
lods
ret
or
fistl
in
push
push
push
or
cld
push
arpl
or
int3
xor
aas
adc
enter
je
xchg
mov
add
cwtl
jp
lock
call
repz
in
and
jnp
fildll
pop
inc
test
jae
iret
mov
xchg
sub
push
subb
push
or
pusha
push
xchg
xchg
or
xor
loope
shl
test
pop
loop
sti
xchg
sub
push
jbe
adc
scas
jbe
in
dec
test
and
sbb
or
fs
shll
nop
or
and
adc
xchg
ja
test
aaa
dec
jnp
insb
daa
ret
jae
sbb
imul
sub
jmp
mov
aad
or
sbb
gs
mov
popa
jb
popf
test
repnz
jp
xor
mov
into
hlt
add
sbb
or
xchg
and
sti
loop
test
sub
repz
dec
aas
punpckhwd
icebp
sub
in
cmp
hlt
push
dec
push
mulb
mov
lods
jl
ja
xchg
rcll
std
movsb
dec
std
cli
adc
int3
push
into
shlb
jae
xchg
int
adc
stos
sub
dec
mov
in
shrl
jmp
lods
fmulp
xchg
jl
leave
fisubl
add
push
daa
fucomip
scas
xlat
and
filds
movl
stos
fcomip
xor
fwait
add
je
mov
sarb
push
xchg
shlb
movsl
xchg
jge
out
jnp
icebp
add
jb
jae
cmp
sbb
adc
push
inc
ret
xchg
stos
inc
push
add
push
mov
imul
cmpsb
xchg
jnp
inc
push
sbb
in
je
cs
inc
adc
push
adc
mov
into
sub
int3
scas
or
aad
sbb
iret
push
enter
jmp
jg
xor
mov
mov
pop
push
mov
pusha
pop
mov
mov
cmp
push
call
dec
jge
test
imul
in
rcrb
mov
inc
rcr
arpl
test
mov
in
jge
fsts
sbb
lods
inc
pop
jne
xor
dec
push
xchg
adc
ret
cli
repz
nop
cmpsb
jo
ss
flds
adc
mov
sub
xor
add
cs
sbb
cmpsb
sub
pop
outsb
lret
and
fsubp
insl
xchg
pop
sub
cmc
push
lods
cld
or
dec
jno
push
ret
pop
inc
mov
xor
ret
stos
loop
xchg
mov
adc
sub
mov
shl
add
mov
popa
mov
mov
lea
sahf
arpl
and
push
cmc
pop
sti
jno
jnp
cmpsb
push
movsb
adc
inc
out
sahf
cmp
dec
mov
add
sub
mov
and
ljmp
lahf
scas
push
xor
add
cs
rcrb
mov
je
pushl
dec
sub
aad
in
mov
jg
divps
dec
mov
cmc
fisttpll
out
movsb
clc
lcall
pushf
xchg
and
movsl
or
ljmp
or
jmp
ficoms
lret
mov
pop
mov
mov
pop
lret
hlt
int3
stos
pushf
sti
popf
mov
fwait
in
or
test
pop
test
push
mov
pop
xchg
dec
adc
out
inc
lcall
mov
xchg
push
cwtl
or
mov
inc
gs
sbb
mov
cmpsb
mov
jnp
daa
rcll
lods
in
sbb
sub
push
stos
imul
mov
mov
lea
pop
int
xor
in
dec
xchg
jecxz
rorl
fistpll
xchg
fst
add
cld
mov
in
mov
scas
adc
xchg
sub
lods
sbb
adc
pop
sbb
cli
jb
fisubrl
stos
sbb
adc
cli
pusha
data16
push
in
jae
cld
js
ds
pop
sbb
adc
arpl
fimuls
movb
xchg
jmp
mov
std
aas
iret
pop
and
mov
and
mov
sub
rorl
jae
mov
test
xor
or
adcb
inc
mov
cmpsl
and
add
scas
icebp
enter
adcb
xor
push
cmpsl
test
adc
push
lcall
icebp
jbe
and
cli
inc
imul
dec
mov
adc
cmpsl
mov
pop
mov
sbb
mov
pop
or
xorb
icebp
lcall
jl
xchg
in
push
insb
push
jp
fwait
cmpsl
mov
xchg
mov
push
rorl
push
sahf
mov
sbb
cmpsl
jne
sbbl
data16
lods
leave
popa
vpextrq
add
jns
and
dec
cmc
or
ret
std
fldenv
daa
lods
add
fisubl
addr16
fwait
mov
stc
inc
ja
xchg
adc
ret
cli
int
and
ljmp
inc
and
repnz
pushl
loope
lea
pop
xchg
hlt
sbbb
push
jb
push
sub
ljmp
ret
sarl
shrl
push
cmp
sub
inc
and
sub
cmpsb
push
or
fistpl
jo
mov
cli
popa
lret
mov
jle
inc
pop
cmp
jg
and
adc
lret
cltd
cmp
scas
jp
pusha
mov
adc
jne
sub
jge
or
dec
imul
scas
push
cmpsl
inc
dec
push
push
rcll
aaa
pop
push
lods
stos
mov
push
mov
jno
nop
mov
pop
sbb
notb
loopne
loop
push
jnp
clc
pop
stos
ja
rcrl
push
call
xor
or
jg
sub
inc
jle
arpl
jl
push
hlt
ss
ja
push
in
cmp
imul
ja
or
roll
int3
outsb
test
mov
and
mov
cmp
aad
arpl
cmp
movsb
inc
jp
outsl
or
das
fimull
fbld
rcrl
in
sbb
jb
repz
cld
and
mov
lds
adc
mov
ret
bswap
pop
in
push
cmp
dec
dec
ss
ds
adc
push
jg
aas
mov
gs
add
push
les
int3
or
push
mov
dec
xor
insl
push
and
mov
test
outsb
mov
and
mov
push
inc
int3
and
adc
addr16
pop
in
or
xor
xchg
in
in
dec
cwtl
jp
mov
cmp
mov
inc
mov
push
cmp
add
sbb
call
push
sbb
pop
xchg
xor
int
insb
outsb
mov
scas
frstor
mov
loop
ror
xchg
inc
inc
hlt
out
scas
mov
and
bound
mov
andl
inc
loopne
mov
and
iret
mov
sbb
out
stc
outsb
xchg
sub
sbb
dec
clc
push
stc
imul
lret
fcmovnb
xchg
lods
xlat
imull
fs
cwtl
xor
adc
inc
or
inc
sub
ret
aam
push
out
jl
adcl
stos
pop
int
fs
int3
shl
out
cmp
lods
ljmp
enter
mov
hlt
mov
rclb
enter
xchg
clc
lods
clc
jge
push
or
mov
test
and
outsl
or
push
jae
xor
cmp
test
ret
jo
inc
stos
das
sbb
cmp
or
aam
cmp
inc
lcall
inc
and
loopne
xorb
xchg
sbb
xchg
cmc
pop
lret
imul
or
lcall
lods
ret
adc
sbb
leave
dec
xchg
xor
dec
sub
mov
daa
sbb
push
dec
cmp
dec
add
js
xchg
aas
jp
jp
cltd
testl
lods
jl
loopne
loope
mov
xor
xor
mov
jmp
js
fisttpll
sbb
cmc
xchg
cmp
sub
js
xchg
mov
pop
mov
scas
test
pop
rorb
jae
sub
lods
shl
into
insl
cmp
push
fcmovbe
xchg
jb
filds
adc
movsb
mov
in
loop
xchg
push
push
je
leave
mov
inc
dec
and
inc
xchg
fbld
push
enter
inc
xlat
je
xchg
dec
pop
and
out
pop
dec
xchg
out
adc
dec
mov
lret
nop
dec
xor
sbb
loope
sahf
cmp
insb
test
mov
add
xor
into
mov
add
xor
stc
xor
test
aam
pushl
dec
dec
roll
cmp
xor
les
test
repz
push
inc
sub
mov
loopne
arpl
add
or
mov
mov
jg
jno
mov
cmp
scas
lock
and
push
pop
dec
or
sbb
lea
imul
aad
add
je
push
dec
pop
pop
jge
cmp
fcomip
push
dec
divl
xor
ja
aaa
jo
out
push
out
push
jl
add
test
leave
pop
test
pusha
jae
outsb
stos
fbld
inc
sub
jbe
or
inc
sub
adc
pop
push
inc
aaa
jmp
dec
cltd
dec
jmp
pop
pop
mov
jno
into
outsb
cmpsl
fwait
pop
cli
and
lods
leave
ficompl
mov
fs
or
lret
xchg
ds
out
cmp
cmpl
adc
inc
scas
adc
dec
cmpsb
cmove
xchg
xchg
movsb
ljmp
dec
add
es
shll
dec
fs
sbb
ja
jp
mov
add
add
mov
insb
mov
mov
imul
and
inc
in
mov
jbe
ds
and
cmpb
push
fwait
jle
data16
push
outsl
xchg
ds
sub
push
xlat
jl
stc
mov
sbbb
jmp
jecxz
pop
jae
add
out
fisubs
decl
lods
cmpb
mov
imul
adc
add
mov
loop
xchg
repz
fldenv
int
fisttpl
std
push
lret
jne
es
subb
adc
daa
subb
add
in
outsl
pop
add
cli
movsb
jl
cmp
lods
cmp
jl
and
push
movd
sbb
push
and
movsl
cmp
sbb
cld
das
test
xor
cmpsb
lods
pop
fidivl
paddusb
inc
rorw
sub
cmp
jae
outsb
out
and
mov
lret
outsb
jecxz
int3
cli
repnz
daa
adc
daa
cmpsl
xor
arpl
jp
aam
fs
or
pop
lahf
cs
xchg
out
loope
inc
dec
fildl
imul
adc
js
pop
fs
inc
dec
addr16
inc
fists
adc
ja
pop
push
add
pop
push
jns
sbb
leave
push
jns
lret
or
shll
pop
cmp
lock
add
cli
mov
xor
xor
popf
int3
fidivrl
push
xchg
xchg
test
sti
popf
sub
push
or
mov
jp
out
pushf
xchg
enter
xchg
cmp
inc
and
test
jg
addr16
stos
mov
lcall
and
mov
int
jo
aam
sbb
and
jge
inc
sbb
ret
out
ja
pop
mov
mov
cmp
iret
push
mov
lods
fs
iret
cmp
mov
std
jns
pushf
push
adc
aaa
in
in
addr16
jg
je
pusha
inc
inc
shll
cmc
lahf
ja
out
mov
movb
adc
enter
jno
or
add
neg
cltd
fcomps
push
out
pop
mov
in
cmp
jl
cs
imul
andl
fmul
xchg
or
mov
dec
xchg
orb
test
jge
mov
sbbb
lahf
xorb
push
ss
out
fs
dec
negb
nop
sahf
stos
jnp
pop
lret
push
lret
pusha
arpl
out
ss
cwtl
sbb
testl
mov
lret
fisttpl
cmp
ret
pop
push
jb
push
adc
jae
cmp
mov
sub
es
adc
scas
sbb
inc
sbb
adc
push
js
pop
adc
scas
xor
mov
xchg
mov
popf
scas
ret
pop
test
xchg
dec
inc
add
push
jge
icebp
mull
xlat
dec
jbe
push
mov
cmpsb
je
dec
mov
push
stos
jmp
mov
cmp
push
cmp
xor
jl
out
push
xlat
push
add
jne
out
mov
pop
add
hlt
adc
je
jbe
das
push
hlt
dec
jo
out
test
stc
pushf
jbe
pop
nop
fmuls
add
jno
pusha
xor
call
mov
bound
sbb
js
mov
orl
sub
shlb
adc
testl
dec
lock
cwtl
and
mov
push
mul
jo
mov
pushl
xchg
dec
dec
mov
js
fldcw
push
xchg
pop
jno
adc
push
mov
dec
pop
mov
mov
sub
cltd
inc
scas
xchg
xor
inc
in
sbb
cmpsl
sbb
out
js
and
in
fbld
mov
jo
lret
iret
cmp
ds
cmp
push
fistl
and
int3
sahf
mov
loope
rcrb
cli
and
jns
push
dec
daa
pop
repnz
and
lahf
mov
jno
and
cmc
inc
mov
mov
cmp
mov
inc
cltd
cmpsb
subb
jmp
je
jecxz
cmp
sbbl
push
dec
sbb
inc
lret
xchg
push
cs
cmp
push
add
add
pop
push
push
jle
mov
mov
xchg
sbb
or
cmp
push
xchg
aad
sub
insb
ret
sbb
mov
lea
add
les
or
mov
bound
push
ljmp
inc
scas
dec
ss
mov
repz
outsl
jmp
fmull
jne
jmp
inc
push
dec
cwtl
cmpsb
dec
enter
hlt
test
int3
and
pop
dec
or
push
push
jae
in
mov
mov
push
mov
inc
arpl
imul
push
mull
inc
shrb
push
pusha
pop
mov
push
and
in
jmp
cli
lods
jnp
lock
mov
loope
add
ja
icebp
jg
push
push
xchg
sub
add
cmp
add
addr16
nop
inc
adc
insl
sbb
and
sbb
pop
data16
xchg
push
xchg
sbb
jo
jle
and
andb
sub
sbb
aaa
sahf
add
test
das
sub
xor
fsubl
adc
repz
xor
cmp
stc
push
jb
push
les
stos
mov
push
stos
lret
push
dec
scas
test
push
inc
push
rcrb
das
xor
dec
pop
out
ret
add
iret
cmpl
loopne
jbe
jmp
jmp
pop
jns
lret
jns
aaa
loop
ss
pop
std
rol
and
cmp
mov
fisubrl
std
repnz
cltd
mov
cld
lret
xchg
pop
aad
aas
bound
xor
int
xor
mov
cld
iret
cmp
aas
jae
add
mov
pop
sbbl
mov
std
or
fldenv
cmpsb
jno
dec
jnp
das
pop
mov
ss
mov
in
inc
jno
or
sub
adc
mov
test
add
insl
fs
sahf
bound
fdiv
sub
push
ss
sahf
outsl
test
adc
jecxz
push
jp
movsl
das
jge
in
mov
jae
adc
and
arpl
das
mov
mov
fs
jbe
leave
push
push
lret
out
or
popa
ss
adc
dec
stc
dec
repz
loopne
aam
das
push
xor
inc
xlat
push
cmp
xor
inc
fbstp
sbb
les
pop
aam
jae
mov
fdivs
es
pop
adc
push
add
scas
dec
xor
cmc
fwait
mov
jl
arpl
push
xor
mov
add
jle
sbb
cmp
dec
aam
and
add
push
push
push
mov
or
pop
xor
popf
into
sbb
icebp
js
adc
inc
adc
test
out
cmp
fildll
dec
psrld
mov
pusha
out
pop
lea
jns
xor
std
aaa
mov
es
movsl
cmp
push
and
lea
fs
ja
inc
test
ja
es
pusha
and
dec
cwtl
cmp
dec
sub
inc
inc
sbb
mov
inc
mov
inc
mov
aas
sarl
fisubrl
jo
mov
add
cmp
inc
ret
sbb
cltd
mov
jle
pop
add
sarb
adc
ret
dec
mov
sub
fiaddl
popa
mov
das
xchg
enter
pop
test
mov
push
movsb
loope
out
in
push
cmp
adc
lea
mov
mov
mov
mov
decb
sbb
cli
shrl
adc
push
mov
sub
aam
sbb
dec
lea
out
add
insl
cmpsb
out
fnstenv
pop
test
rcll
mov
push
mov
push
insb
mov
nop
daa
andb
aad
jp
out
sbb
adc
and
mov
jge
lcall
mov
sub
sub
mov
xchg
sub
or
pop
bound
mov
popf
jmp
insb
lds
add
or
jb
push
mov
push
cmp
call
mov
dec
sbb
jbe
loopne
add
aas
push
mov
cmp
push
cmp
or
in
cmp
jnp
jp
pop
cmp
pop
add
not
mov
add
pop
pusha
jo
push
ret
insb
cmp
outsb
mov
push
fnsave
dec
adc
fistps
push
loop
mul
in
push
mov
in
andl
pushf
cld
push
fiadds
mov
aas
add
inc
adc
cmpb
push
rclb
sbb
scas
test
outsb
test
and
cmp
nop
stos
inc
lock
jp
jge
imul
js
jle
mov
xor
jp
dec
xor
dec
insb
daa
sti
xchg
and
test
sub
xchg
aas
sbbb
pop
out
cli
push
mov
movl
inc
cmp
fwait
inc
and
das
ss
cli
popf
dec
in
adc
rep
mov
mov
pop
jnp
add
lods
movsl
and
mov
lock
jo
jo
shrb
push
fsubs
xorb
aas
xchg
imul
movsl
push
repnz
jecxz
lea
push
jmp
aam
jnp
movsl
adc
out
mov
flds
mov
cltd
push
mov
mov
cmp
popf
cmpsl
mov
fidivs
pusha
adc
mov
imul
mov
nop
rcll
xchg
xlat
insl
fwait
cmp
mov
icebp
cmp
ficompl
int3
js
movb
add
lds
out
rol
scas
jge
cmp
inc
sub
push
add
sahf
mov
in
stos
daa
hlt
ret
xor
jo
cli
loop
mov
inc
lret
sub
pandn
adc
idivl
popa
xchg
or
jecxz
fsubl
std
dec
insb
jne
ret
lret
mov
mov
xlat
out
dec
ja
cmp
shlb
or
fstpt
lock
es
mov
or
push
xchg
or
jecxz
jne
arpl
dec
pushl
gs
fstpt
mov
cmpsl
shlb
testb
sbb
sub
xchg
ja
inc
shll
imul
rol
mov
pusha
dec
lods
push
out
test
jbe
mov
aaa
jb
or
pop
fsts
sbb
dec
faddl
clc
pop
pop
push
mov
sbb
xchg
into
sbb
es
pop
inc
lret
pop
out
ret
fwait
int3
into
les
loopne
shrb
push
mov
push
mov
pop
stc
notl
movsl
js
xor
mov
xor
xor
lcall
jge
aad
mov
inc
push
pop
cmp
mov
xchg
jecxz
lock
cmp
mov
sbb
adc
add
test
mov
test
inc
xor
add
and
ret
xchg
dec
jg
lea
mov
mov
and
xor
xlat
adc
aam
mov
cwtl
xchg
cmp
hlt
or
pop
stos
cltd
jg
pop
sub
cli
xor
push
cmpsb
fidivrs
cs
and
or
pop
scas
pop
cmpsl
arpl
sti
and
push
sub
sbb
jl
push
push
cld
std
fwait
xor
dec
cmp
and
ret
mov
mov
cmc
leave
and
jg
adc
call
push
loopne
out
in
mov
mov
sbb
xor
das
pusha
or
jbe
gs
push
pop
jle
repnz
loopne
pop
pop
add
mov
les
sub
inc
xchg
decl
ret
dec
mov
inc
roll
inc
outsl
and
push
sbb
inc
jno
and
mov
hlt
or
mov
jno
pop
adc
out
lret
pop
rcrl
cmpb
icebp
lret
cmp
pop
cli
movsl
xor
lea
insl
pmuludq
mov
insl
out
stc
or
add
xchg
inc
lds
sbb
cmp
push
sbb
imul
addb
or
daa
movsl
sub
or
fsubrl
xchg
add
fistpll
mov
int
and
ds
mov
gs
outsb
mov
xchg
aaa
mov
inc
inc
add
popa
push
pop
push
mov
mov
jle
call
cmpsl
mov
jne
xor
xor
and
aam
and
jo
cmp
jl
lds
inc
adc
jle
mov
stos
xor
mov
mov
or
scas
movsl
push
fldl2t
push
lods
push
pop
test
sbbl
pop
in
pop
adc
cmp
popa
or
mov
arpl
popaw
xchg
push
push
imul
outsb
adc
outsl
es
jb
jb
jae
jne
jge
scas
or
push
stc
fs
inc
insl
out
addr16
test
add
imul
pop
lea
or
cli
jae
jo
inc
pextrw
rolb
inc
lret
mov
dec
int
pop
jne
jle
jge
dec
sbb
or
inc
sbb
mov
inc
pop
jbe
rcll
mov
std
pop
dec
call
xor
cwtl
mov
popa
jbe
and
jg
mov
cmp
adc
outsb
adc
adc
insb
add
add
aam
rcll
push
adc
mov
std
lcall
int
dec
cmpl
cld
shlb
xchg
ret
cmp
cmp
or
dec
cmp
xor
andl
sbb
fisttpll
lea
loope
loop
jae
bound
arpl
pop
xor
xchg
jmp
stos
push
out
jnp
outsb
sbbb
repnz
aaa
movsb
pop
jno
pop
icebp
inc
cs
cmp
pop
cmp
repnz
repz
cmc
shl
clc
movsl
clc
pop
cli
mov
pop
sti
jp
push
mov
inc
cld
scas
cld
mov
test
ret
outsb
sti
flds
mov
push
loope
push
lahf
dec
scas
dec
inc
push
imul
jle
mov
js
sbb
jns
push
arpl
jb
int3
and
xor
push
sub
and
and
xchg
sub
xchg
mov
jne
xchg
push
xchg
adc
test
adc
outsl
inc
adc
cmpl
xchg
sbb
jns
lcall
dec
aam
fdivl
dec
inc
or
add
mov
push
or
mov
mov
hlt
lret
dec
pop
rorl
cmp
push
mov
cmp
fs
xor
cmc
pop
and
popa
arpl
lods
test
sub
sub
insl
sub
outsb
sub
jno
jb
jb
outsb
shrl
pop
push
test
jb
jb
jae
je
jne
ja
dec
mov
ja
je
lds
pop
in
lock
sbb
test
mov
sbb
test
dec
mov
mov
icebp
xchg
scas
fcomi
cwtl
std
pop
cltd
and
cld
fwait
out
cld
pushf
negb
jecxz
ret
stos
loop
pop
rclb
loopne
adc
cmp
out
cmp
movsl
icebp
popf
roll
adc
pop
push
push
adc
mov
in
cmpsl
adc
push
add
add
mov
pop
inc
aam
aam
aad
mov
fcomps
mov
cmc
inc
fnsave
ljmp
or
or
pop
cli
add
loopne
loopne
lahf
imul
lahf
stos
cmc
adc
paddsw
and
adc
cmc
bound
out
lcall
push
cltd
out
push
cmc
jns
push
icebp
xchg
repz
hlt
mov
test
imul
adc
mov
lret
push
inc
xchg
inc
test
sub
cli
cwtl
aas
lret
inc
push
fsubp
mov
or
outsl
scas
pop
jbe
js
loopne
jg
mov
or
inc
aas
jle
ds
test
and
and
mov
insb
mov
mov
sbb
insb
sub
in
pop
sbb
pop
and
cmp
cmc
pop
pusha
sbb
lods
cmp
pop
int
cld
sub
sub
or
xor
mov
lock
lret
inc
push
mov
ret
cmp
dec
cmp
sbb
dec
rcrb
and
pop
stos
cmp
push
xor
add
int3
fs
ds
jmp
hlt
gs
cltd
fmulp
sub
xchg
lods
push
jbe
adc
inc
xchg
imul
fsubrl
addr16
ficomps
adc
push
add
rcrl
fisubrs
cwtl
fdivl
js
push
xchg
jnp
add
push
push
adc
leave
cmp
ds
cmpsl
add
adc
lret
or
push
lds
aaa
cmp
or
call
adc
in
dec
lcall
adc
cltd
push
xor
pop
inc
adcl
movsl
loope
or
mov
add
add
sahf
sbb
jge
fwait
inc
lcall
dec
hlt
cmp
or
or
push
repnz
pop
fsts
or
lds
inc
xchg
push
dec
lock
loopne
and
jle
push
xchg
jno
fadds
cs
xlat
sub
out
inc
iret
sub
mov
push
xchg
cs
mov
xchg
icebp
daa
ja
scas
cmp
xor
jne
outsb
pop
push
mov
out
add
ljmp
dec
push
xchg
jbe
mov
add
cmpsb
cmp
sub
das
xchg
cmp
popf
pop
sbb
cmpsb
lock
xor
inc
jae
orl
icebp
mov
lods
vfrczss
ss
jnp
xchg
jecxz
insl
insl
lret
sub
scas
outsb
cmp
add
outsb
cltd
cs
mov
shrb
fsubrs
mov
push
mov
ljmp
adc
jnp
mov
adc
test
cmp
jne
repnz
out
jmp
out
ret
or
in
aaa
mov
addr16
movd
jg
jmp
push
add
imul
and
insb
pop
outsb
sbb
enter
jb
jae
je
jne
push
sbb
dec
and
xchg
sbb
jl
jge
jle
jg
ss
sbb
sub
sbb
xchg
xchg
mov
mov
mov
lea
mov
xchg
sub
cs
das
xchg
xor
xor
cmp
aaa
and
sahf
cmp
mov
cmp
pop
inc
cmpsb
inc
mov
dec
stos
inc
orb
nop
push
scas
dec
mov
mov
ljmp
dec
ss
mov
ss
mov
push
or
mov
pop
push
rcrb
ret
les
imul
arpl
insl
lret
outsl
int3
addr16
imul
aam
je
jno
jnp
jae
jge
jne
jg
ja
sbb
jnp
xchg
jge
mov
jg
mov
cmpl
in
xchg
out
mov
lock
repnz
hlt
mov
xor
clc
xchg
or
cld
xchg
in
mov
add
dec
test
push
mov
jo
or
xchg
mov
test
stos
mov
lods
fidivrl
push
mov
mov
sbb
push
mov
push
xor
das
dec
sub
and
js
pop
sub
inc
daa
inc
xor
push
cs
ds
push
pop
cmp
push
arpl
jo
gs
inc
and
inc
outsb
shll
aad
dec
dec
sbb
jo
jle
or
adc
inc
add
dec
sub
inc
and
in
inc
cmp
dec
and
dec
push
push
cmp
push
add
cs
push
push
and
push
sub
pop
aas
dec
pop
divl
push
fs
add
add
jbe
je
je
jno
push
add
sbb
jb
outsl
xor
sbb
andb
pop
adc
jle
orl
push
jnp
das
pop
xor
push
in
sbb
sbb
std
mov
arpl
xchg
repz
out
roll
fisttps
mov
divb
outsl
xchg
das
mov
jne
mov
in
scas
cmp
popf
clc
jl
lahf
shrb
mov
aas
bound
mov
mov
mov
mov
mov
mov
in
mov
shlb
ret
insb
push
cld
leave
mov
fldcw
cli
rol
pop
mov
shll
flds
fs
leave
mov
mov
aad
rcl
cmpsb
insl
adc
shlb
mov
mov
je
out
out
mov
xchg
fbld
cmc
nop
aad
jg
les
mov
call
mov
std
test
popf
int3
sahf
clc
pushf
lock
mov
add
xchg
add
fwait
sti
mov
jo
jbe
push
add
cld
movsb
dec
or
arpl
js
imul
adc
ja
adc
idivb
jge
insl
daa
push
sbb
push
mov
push
cmovnp
dec
add
dec
xor
rolb
js
push
inc
xor
js
push
das
jb
push
ds
inc
pop
inc
pop
adc
pop
shl
sarl
dec
cmp
dec
inc
dec
inc
pop
cmp
sub
inc
fidivs
loop
inc
sub
push
sub
aas
pop
cs
dec
out
jmp
cmp
inc
cmp
push
cmp
push
and
pusha
pop
rep
cmc
sbb
sub
pop
sub
add
addr16
cmp
es
popa
adc
push
push
dec
pop
sub
insb
sub
jge
push
sbb
fs
mov
push
adc
push
push
mov
jle
mov
jl
outsl
jg
cltd
sbb
test
add
jmp
loopne
mulb
rolb
push
loope
mov
xchg
in
cmc
xchg
xchg
sub
loop
hlt
xchg
in
jae
xor
cwtl
cld
mov
ret
movsl
mov
scas
rcrl
movsb
int
ficompl
sarb
mov
loopne
negb
fidivrl
mov
fadd
lret
lret
movsb
stos
mov
mov
ret
bound
enter
aam
cmpsl
int
in
mov
mov
popf
fisubl
aam
mov
jo
jno
fnstenv
js
jns
in
xor
fisttps
mov
jmp
in
in
jmp
out
mov
mov
sti
nop
xacquire
mov
or
add
cld
mov
xchg
add
or
pushf
rcrb
outsl
add
outsl
mov
jg
imul
imul
or
adc
and
jb
jae
jbe
sbb
push
ja
jnp
push
push
dec
sub
and
push
or
jnp
dec
aaa
dec
les
imul
adc
inc
adc
pop
lret
daa
into
jl
push
cmp
cmp
pop
dec
imul
push
inc
push
push
cmp
icebp
fldcw
push
sub
iret
fiadds
inc
xor
das
dec
and
ss
ds
or
and
push
and
pop
aaa
inc
cmp
lock
pop
push
sub
imul
insb
push
stc
enter
adc
pop
data16
push
push
aas
push
cs
pop
cmp
add
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
sbbb
sbb
push
test
xchg
xchg
mov
mov
mov
and
mov
xchg
sub
cs
das
xchg
xor
xor
ss
aaa
sahf
cmp
cmp
movsl
aas
cmpsb
inc
cmpsl
inc
test
test
inc
lods
inc
lods
inc
scas
dec
scas
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
pop
rcrl
ret
pop
les
pop
pusha
popa
enter
lret
gs
data16
into
push
shrl
insb
shrl
outsb
aad
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
and
call
test
test
xchg
xchg
mov
mov
mov
mov
mov
hlt
mov
notb
stc
xchg
cli
xchg
sti
xchg
cld
xchg
std
xchg
cwtl
lcall
add
lahf
push
mov
or
or
or
test
adc
scas
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
shrl
sub
sub
sub
sub
sub
leave
xor
xor
xor
xor
xor
xor
sarl
sarb
sarl
aam
aad
cmp
flds
inc
fildl
inc
fldl
filds
inc
loope
loop
jecxz
in
in
out
out
call
push
jmp
in
push
in
push
out
push
out
sbb
adc
repz
sbb
stos
popf
push
testl
sti
pop
outsl
arpl
pushf
pop
inc
ljmp
mov
add
pop
add
pop
fwait
add
cmc
stc
leave
or
mov
or
jae
cmovns
inc
adc
jns
jp
jnp
jl
jge
jle
jg
sbbb
sbb
push
test
xchg
xchg
mov
mov
mov
and
mov
xchg
sub
cs
das
xchg
xor
xor
ss
aaa
sahf
cmp
cmp
movsl
aas
cmpsb
inc
cmpsl
inc
test
test
inc
lods
inc
lods
inc
scas
dec
scas
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
push
mov
pop
rcrl
ret
pop
les
pop
pusha
popa
enter
lret
gs
data16
into
push
shrl
insb
shrl
outsb
aad
jo
jno
jb
jae
je
jne
jbe
ja
js
jns
jp
jnp
jl
jge
jle
jg
and
call
test
test
xchg
xchg
mov
mov
mov
mov
mov
hlt
mov
notb
stc
xchg
cli
xchg
sti
xchg
cld
xchg
std
xchg
cwtl
lcall
add
lahf
push
mov
or
or
or
test
adc
scas
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
shrl
sub
sub
sub
sub
sub
leave
xor
xor
xor
xor
xor
xor
sarl
sarb
sarl
aam
aad
cmp
flds
inc
fildl
inc
fldl
filds
inc
loope
loop
jecxz
in
in
out
out
call
push
jmp
in
push
in
push
out
push
out
add
add
adc
add
adc
add
adc
add
adc
add
adc
es
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
lock
push
addb
cmp
add
jb
add
clc
addb
dec
addb
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
push
push
inc
push
xor
cs
dec
dec
add
mov
add
lods
addb
mov
addb
ljmp
add
addb
lods
addb
mov
addb
ljmp
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
jb
jne
insb
inc
jb
add
add
je
jb
arpl
fs
jae
add
add
inc
outsb
jne
push
jns
je
insl
inc
outsl
fs
popa
addr16
add
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
js
je
jb
arpl
jae
or
add
or
add
add
inc
imul
js
popa
jb
insl
inc
