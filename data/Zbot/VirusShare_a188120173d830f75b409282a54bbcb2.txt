std
lcall
leave
mov
pop
and
mov
imul
in
pop
pop
leave
ret
pop
pop
ret
dec
stc
jbe
repnz
inc
xor
dec
iret
ja
mov
add
pop
pop
dec
test
or
and
add
adc
adc
test
or
adc
test
mov
insb
or
mov
and
or
add
jbe
sti
adc
inc
or
and
add
and
xchg
dec
or
add
adc
inc
adc
xor
pop
jge
mov
mov
adc
fstpl
mov
push
sbb
mov
insl
in
lods
sub
adc
jns
cltd
and
insl
mov
jbe
xor
cmp
pop
fwait
insb
lods
movsl
adc
mov
insl
mov
sbb
dec
mov
add
xor
add
add
inc
inc
dec
sahf
cmp
pusha
inc
adc
aaa
or
add
xchg
mov
je
pusha
sub
inc
inc
or
add
mov
adc
jmp
and
subb
dec
cmp
pop
imul
inc
icebp
andnps
aad
xchg
pushf
cmp
flds
xor
push
add
adc
adcb
int
push
dec
sbb
leave
cmp
pop
inc
lds
mov
add
jg
sub
and
bound
push
idiv
incl
add
rorl
xchg
add
add
fs
fiadds
lcall
cmp
call
adc
cmpsl
mov
add
sbbb
xor
adc
int3
mov
push
call
jns
add
movl
adc
idivb
sbb
add
jmp
imul
nop
je
mov
mov
in
mov
fs
popl
jne
xchg
int3
and
ss
add
add
add
ljmp
jmp
add
add
xchg
int3
sub
xchg
and
fs
pusha
mov
in
mov
stc
jo
in
push
add
add
clc
or
xor
mov
adc
mov
mov
ret
call
loop
insl
fcomi
call
ja
add
cmpb
add
jg
mov
sti
outsl
fistpll
repnz
jecxz
leave
or
in
scas
les
lds
cmp
adc
mov
pop
fadds
test
or
lods
mov
jge
or
andl
test
dec
jge
add
add
cmp
lret
add
mov
movhlps
jg
inc
jbe
xor
dec
in
mov
pop
cwtl
push
add
xor
fsubl
ljmp
dec
mov
iret
xor
and
jge
add
sub
push
mov
nop
out
adc
icebp
add
mov
aad
mov
push
sbb
cmp
inc
incl
ret
push
xor
inc
roll
fimull
sub
add
xor
dec
jnp
movsl
pop
mov
add
add
imul
addb
repz
xor
mov
add
inc
addr16
div
das
cmc
movsb
push
paddq
mov
insl
xchg
ds
jg
adc
ss
insb
scas
bndstx
fs
cmp
cmp
jbe
mov
add
cs
les
pop
add
outsl
das
jl
aad
dec
xor
popa
sti
or
mov
pop
mov
sub
push
imull
add
cli
mov
jb
push
cmp
fists
data16
xchg
xchg
test
inc
mov
imul
xchg
sbb
dec
push
test
ret
dec
pop
mov
and
mov
icebp
sub
cmp
test
sbb
xor
pop
mov
out
fisubrs
adc
neg
add
mov
pushl
add
xor
xchg
sub
divb
add
push
scas
push
shll
lcall
fbld
add
fadds
adc
inc
addb
jnp
mov
or
jae
mov
mov
scas
lock
inc
push
add
push
add
pop
sub
add
movsl
add
call
fstps
jge
push
sub
adc
imulb
imul
enter
cwtl
out
or
sbb
jecxz
cmc
or
adc
and
xor
arpl
rcl
pop
inc
test
loop
insb
sar
icebp
jg
rol
aad
cld
fwait
add
push
jmp
sub
jg
jno
add
and
or
sti
sub
pushf
push
mov
dec
or
sbb
outsb
dec
xchg
in
les
jae
or
push
out
or
js
adc
mov
repnz
fstpt
add
and
sarl
push
pop
daa
lahf
push
jg
sbb
mov
cwtl
pop
and
pop
push
repz
popa
loope
testb
add
mov
jb
mov
pop
push
jb
jmp
jnp
and
or
sbb
jns
movsb
dec
inc
mov
xchg
rolb
scas
insl
fstpt
push
sbbl
outsl
or
cmpsl
fistps
xor
fmuls
xchg
and
pop
incl
dec
in
or
push
xchg
inc
mov
xchg
jae
jne
fprem
or
int3
add
xchg
jp
dec
bound
xchg
adc
mov
inc
push
push
push
out
sbb
xor
je
in
or
outsl
cld
inc
sti
ret
hlt
and
arpl
pop
andl
stos
outsl
mov
cld
sub
xor
pop
lret
sbb
mov
call
test
out
mov
sbb
pop
test
fsub
push
sub
mov
stc
mov
daa
add
movsl
ljmp
out
stos
aad
out
mov
lods
movb
rorb
add
mov
add
sub
pop
or
add
stos
lods
sarb
outsb
and
loope
cmpsb
and
enter
lret
cmc
pop
lahf
rcll
insb
mov
mov
das
jl
push
imul
into
cmp
out
repnz
cmp
xchg
bound
rorl
in
test
pop
or
xchg
mov
adc
jmp
in
add
iret
nopl
icebp
push
fcoms
xor
movsl
xchg
mov
int3
xchg
jno
xchg
sub
fstpt
decb
push
mov
sbb
mov
add
jecxz
xchg
stos
push
outsl
mov
cmpsl
shr
or
into
outsl
out
pop
cli
mov
jmp
rclb
inc
push
jg
mov
mov
sub
jae
cmp
call
loopne
out
hlt
inc
jecxz
fwait
xchg
pop
or
cmpsl
fs
mov
jge
fbstp
push
fucomi
call
pop
test
add
rcl
xchg
arpl
pop
xchg
inc
lea
testl
jns
push
dec
js
lcall
pop
adc
mov
jmp
test
sbb
or
insl
pop
jp
pop
push
cwtl
lea
in
jg
movsl
sub
xor
or
out
adc
mov
lods
or
cld
or
mov
push
icebp
rorb
jmp
jb
gs
sbb
sub
movsl
mov
out
in
rolb
add
cld
jg
inc
xor
push
xor
sub
and
loopne
dec
adc
test
adc
add
mov
pop
lea
loopne
lods
sahf
shll
test
frstor
cli
xchg
cmp
mov
adc
lock
cwtl
je
add
pop
jno
and
and
jg
repnz
repz
rcr
xor
lret
mov
pop
and
repz
jge
clc
pop
mov
test
adc
ss
mov
mov
mov
and
fldenv
es
sub
adc
roll
mov
iret
and
nop
subl
mov
sti
sbb
insb
test
mov
mov
divl
pop
roll
ficoml
cld
push
movsl
imulb
dec
lcall
jbe
movsl
add
aam
aam
and
jecxz
negb
lock
add
sahf
aaa
jg
insb
mov
ret
push
cmp
pushf
pop
lea
stc
aas
negb
sti
dec
pusha
sti
ret
or
mov
cmp
pinsrw
rcrb
fcompl
pop
xchg
ss
out
jae
pushl
push
xchg
ljmp
and
mov
jg
and
int3
push
xor
cli
pop
mov
xor
fs
adc
and
inc
mov
cmp
dec
mov
push
sub
add
or
fsubrs
inc
inc
test
aaa
dec
out
fistl
testb
adc
push
pop
xor
sbbl
xorl
lcall
pop
push
movsb
stos
iret
cmc
adcl
jl
jo
xorl
and
xchg
jle
stos
xchg
xchg
mov
xchg
sti
jbe
xor
fstp
mov
sbb
loope
push
lods
sbb
lea
lods
mov
mov
or
jmp
pop
mov
lods
fs
cmp
xchg
aaa
stos
pop
lock
dec
fildll
outsb
pop
and
out
scas
clc
push
stc
or
xor
lea
mov
sub
adc
aad
and
jno
mov
sbb
mov
dec
jle
xchg
adc
mov
pusha
adc
clc
sub
or
sub
push
mov
lock
mov
pop
inc
push
test
jns
fwait
cmp
scas
lret
das
add
add
and
ljmp
outsl
popa
addr16
push
arpl
mov
inc
or
xor
clc
inc
pop
xor
fs
in
enter
in
icebp
or
mov
in
lret
int3
ret
test
mov
sub
dec
fildll
cld
ret
sub
lret
mov
or
inc
inc
int3
repnz
clc
data16
mov
or
add
sbb
jmp
or
imul
mov
leave
cmp
dec
xchg
sub
dec
xchg
pop
clc
mov
sti
lods
jle
and
add
lods
cmp
push
jecxz
adc
aas
mov
popf
cltd
pop
call
xchg
stos
add
in
mov
pop
cld
mov
sar
sub
clc
xchg
rcr
in
pop
adc
inc
decl
mov
or
xchg
jp
clc
push
jne
xor
inc
jmp
mov
pushf
cmp
jb
call
cli
or
hlt
jle
jle
leave
shll
and
fistpl
sub
ret
push
enter
mov
jle
test
inc
outsb
std
incb
clc
andb
lods
aas
lods
aaa
testl
and
xor
mov
or
clc
movsl
popw
push
dec
loope
fs
add
icebp
mov
add
xor
lret
mov
lods
and
xchg
inc
xchg
outsb
or
inc
dec
icebp
cli
push
imul
or
cs
outsb
push
nop
adc
outsb
test
stos
ja
test
mov
pop
cmp
ljmp
sub
mov
add
xor
xor
ljmp
cmp
xor
add
aad
jbe
cmc
adc
clc
lea
adcb
js
xchg
pop
or
test
loopne
mov
shrl
inc
lock
jmp
ret
test
mov
fdivl
mov
mov
movsl
bound
in
inc
sbb
mov
int3
in
jecxz
cmp
loopne
mov
cmp
or
fnsave
arpl
sbb
loop
push
and
mov
xchg
inc
xor
mov
data16
fldl
inc
jae
in
or
ret
mov
add
inc
inc
pop
aaa
rorb
hlt
sbb
test
add
dec
decl
gs
idivb
lea
push
in
jbe
bound
mov
add
cmpsl
pop
or
test
jns
jecxz
aaa
sti
movsb
or
dec
rclb
xchg
es
addr16
mov
jg
ret
mov
scas
enter
pop
out
test
push
inc
rorb
xor
pop
clc
pop
or
es
scas
lcall
testl
sbb
push
mov
add
movl
or
in
incl
dec
sub
adc
mov
pop
fdivrl
std
mov
mov
rcl
pop
mov
jge
out
or
lea
in
adc
adc
mov
sbb
jne
xor
sub
insl
repz
and
jmp
push
add
std
in
xor
mov
and
imul
std
lcall
xor
mov
out
sub
aas
cmc
jge
dec
cmpsl
movsb
mov
pop
inc
hlt
mov
dec
fldt
int
ljmp
or
lods
mov
es
sub
in
fnsave
dec
inc
cmp
dec
xchg
les
add
mov
hlt
inc
aaa
call
pop
hlt
jbe
mov
repz
or
insb
mov
dec
fs
repnz
mov
cmpl
add
or
neg
sbb
adcb
and
inc
pop
mov
out
add
aam
and
cmp
and
xchg
int
or
dec
add
jg
flds
aas
mov
addr16
adc
add
mov
add
rolb
fadd
test
fldl
jo
jae
ss
pop
ret
mov
mov
test
rorl
bound
rolb
out
das
ret
loope
pop
loope
dec
lret
pop
aam
add
lock
mov
roll
mov
mov
imul
fildll
sbb
mov
add
dec
cmp
and
outsl
loope
fistps
test
cmpsb
inc
mov
fdiv
shrb
jbe
add
jae
and
loope
fdiv
add
mov
rorl
mov
outsl
xor
or
and
test
dec
mov
sbb
mov
xlat
arpl
xchg
lods
and
fimuls
nop
int
lret
in
xchg
mov
add
inc
xor
mov
and
ja
sub
sbb
or
xor
pop
pop
fcomps
mov
push
or
mov
movsl
push
neg
dec
mov
mov
cmc
filds
and
xchg
push
dec
add
cwtl
in
imul
jl
or
negl
scas
mov
push
sbb
in
addr16
mov
mov
dec
sbbl
cmc
insb
ljmp
or
cld
dec
std
fisubs
push
sarb
mov
or
dec
dec
dec
out
jecxz
lods
adc
push
jns
daa
fidivl
stc
loopne
add
incb
add
stos
add
sar
add
add
add
sbb
or
arpl
push
jmp
cmpsb
and
imul
dec
cmp
movsl
pop
fcoml
outsl
lcall
pusha
scas
and
add
ficompl
sbb
call
dec
mov
ret
xor
add
mov
ja
mov
dec
mov
das
and
xchg
pop
and
addr16
jb
sbb
lcall
inc
aam
push
sbb
stos
jmp
test
lock
push
or
gs
push
cld
lret
mov
in
mov
sbb
insb
add
adc
xchg
loopne
push
jp
xor
inc
xor
add
mov
nop
dec
addb
inc
aam
aas
subl
and
push
and
cmp
mov
adc
xor
cld
xchg
fwait
and
jp
adc
mov
clc
pop
mov
or
jmp
jecxz
sbb
insl
in
movsl
out
xchg
mov
jg
lock
test
xor
adcl
xor
add
mov
sub
jns
pop
subb
test
inc
add
aaa
jbe
subl
mov
dec
or
mov
loopne
cmp
push
adc
xchg
loope
lcall
pop
out
sbb
jg
jbe
xor
inc
push
sub
orb
and
or
mov
das
ror
fisubrs
jl
outsl
mov
out
adc
stc
cmp
sbb
shll
lods
mov
ss
fistl
es
fsubrp
test
aas
pop
and
inc
into
inc
leave
fidivrs
gs
lcall
and
or
daa
push
dec
test
lock
adc
jl
push
orb
pop
mov
xchg
and
mov
mov
or
into
pop
dec
xchg
pop
jmp
mov
or
ret
ds
ds
loopne
xchg
adc
lea
loopne
and
subb
clc
add
loop
arpl
inc
fmuls
sub
imul
pop
mov
jge
out
inc
cvttps2pi
inc
pop
lock
mov
imul
dec
adc
stos
shll
mov
pushl
xor
imul
fdivs
or
sbb
fdivrs
ss
push
xlat
iret
adc
cmp
xchg
das
cld
sbbb
movsl
popa
and
dec
inc
mov
mov
sub
push
cmpsb
cld
xor
pop
add
jecxz
or
xchg
mov
cld
add
mul
xchg
sub
sbb
fists
orb
shll
jl
fdivl
pop
add
push
insb
insb
hlt
xor
adc
mov
rorl
movsl
cs
jl
idivb
andl
lock
mov
add
push
jmp
and
mov
sub
xlat
sti
gs
fsubs
jle
test
adc
aas
fsubr
outsl
gs
roll
popf
ljmp
cs
outsb
dec
pop
lock
das
and
insl
mov
pop
adc
and
dec
stos
dec
mov
out
adc
sub
ljmp
loopne
sub
push
sti
aam
or
jns
add
jo
or
xor
inc
xor
stc
and
dec
mov
aam
sub
shufps
cmp
fnstsw
les
add
cmc
fldt
addr16
dec
xchg
or
inc
pop
pop
imul
cmp
fldt
or
arpl
loopne
dec
sbb
sub
ds
loope
clc
jnp
add
fdivrp
xchg
xchg
rcrl
mov
data16
iret
and
push
jecxz
ss
and
jg
ja
add
push
inc
popa
outsl
sbb
jno
mov
xchg
sbb
sarl
fdivr
aaa
inc
iret
imul
mov
imul
fstpt
push
and
cmp
js
and
and
outsl
or
rolb
decl
sub
jo
add
mov
pop
ljmp
cmpsl
fs
add
dec
or
cltd
xor
dec
jle
cs
in
mov
int
sub
sub
xor
int3
push
inc
xchg
push
or
push
pop
jnp
pop
mov
push
fisubrl
outsl
adc
dec
nop
and
insl
jb
jae
jge
cmp
lock
mov
jne
mov
pop
jmp
or
mov
mov
int
cmp
mov
push
clc
gs
imul
jmp
push
push
aaa
mov
ret
fistl
jle
test
mov
add
jo
push
cmp
mov
roll
dec
xchg
pop
cmp
popf
adc
and
mov
sarl
scas
pop
out
adc
ret
stos
clc
xchg
rorb
lods
scas
imul
dec
fisttpl
movsl
arpl
adc
add
test
lret
jns
daa
sti
out
leave
mov
hlt
ds
subb
push
fcomip
push
loop
mov
xchg
lcall
xchg
jno
jle
sub
mov
shlb
lcall
shrb
jmp
sti
lret
nop
push
cs
incl
mov
and
lret
and
decl
or
adc
push
aas
fsub
pop
pop
int3
adc
push
mov
jmp
es
xchg
fucom
xchg
repz
test
aad
mov
push
sti
push
in
sub
adc
mov
mov
mov
mov
pusha
mov
mov
out
aad
mov
mov
add
sub
sbb
int3
out
push
cld
push
xor
and
bound
stos
cltd
xor
icebp
iret
js
push
xchg
xchg
es
cltd
cmp
lock
stos
enter
dec
testb
sub
out
mov
or
es
dec
jne
add
ljmp
std
fstpl
or
pop
xor
pop
jne
mov
inc
popa
je
insl
or
fs
int3
add
xor
mov
ds
leave
lahf
inc
pop
add
add
outsl
hlt
add
fmull
jmp
jp
lods
fwait
cli
out
pushf
mov
sub
loope
sbb
jg
sbb
dec
cmp
xchg
inc
add
aad
jl
mov
sub
sub
mov
cs
jns
test
incl
nop
sbb
repz
mov
fisubrs
clc
mov
fnsave
inc
inc
ds
rorl
inc
lods
stc
stc
roll
ljmp
popa
add
cld
jg
sub
sbb
jne
pop
in
sbb
jle
jne
outsl
pop
push
cmp
icebp
lret
xacquire
mov
cmpsb
jg
cmp
loop
jmp
or
mov
pop
ljmp
sbb
out
pop
adc
sub
adc
lock
adcl
int
adc
not
jmp
cs
or
jnp
ret
xor
push
sbb
jge
pop
mov
push
fucomp
or
jge
dec
ja
ja
dec
fsubp
push
test
xor
faddl
inc
mov
mov
add
sbb
or
movsl
adc
lret
jne
and
or
outsl
enter
add
pop
or
push
mov
rcrl
or
lret
dec
xchg
jecxz
lcall
shl
dec
dec
and
add
inc
push
ret
imul
es
insb
fisubl
cli
test
stos
sti
add
push
sub
jge
cmc
pop
jno
enter
dec
mov
sbb
lret
in
sbb
add
add
sbb
xor
or
dec
xchg
xchg
rol
shrb
icebp
sar
mov
push
xchg
sbb
mov
pop
and
movsb
mov
sub
mov
mov
scas
dec
fdivrs
sbb
das
adc
xchg
jns
ret
and
mov
mov
mov
add
sbb
push
dec
mov
mov
or
scas
shl
shl
xchg
lcall
xchg
outsb
cwtl
incb
adc
pusha
test
xor
stos
sarb
jbe
mov
sbb
and
icebp
sbb
sub
mov
or
pop
lcall
aaa
mov
enter
pop
fs
push
mov
cmpsl
push
inc
in
inc
sub
jne
mov
arpl
notb
dec
add
stc
rorl
mov
cmp
out
cli
outsl
fstp
cmpsb
sub
inc
int
mov
mov
fcmovb
bound
mov
fildll
shlb
in
dec
and
mov
aaa
and
scas
cmpsb
mov
sub
and
nop
test
ud1
pushf
push
pop
mov
movsl
adc
sbb
sbb
cli
push
in
in
xchg
push
pop
pushf
ss
in
jmp
and
push
cmp
lcall
lahf
sti
mov
mov
push
mov
hlt
repnz
in
or
xor
call
xor
pop
jge
cld
inc
pop
add
jbe
lds
hlt
inc
std
mov
loop
sub
xor
inc
adc
push
pop
adc
pop
dec
loopne
cmp
test
js
mov
sti
lods
notb
jmp
cwtl
inc
jnp
cmpsb
inc
mov
addr16
cmp
pop
scas
push
cltd
jmp
push
dec
or
lock
outsb
int
call
dec
push
mov
lcall
adc
push
pop
jg
or
orps
ljmp
imul
push
fistps
addl
and
int
mov
mov
sti
mov
aam
dec
lret
es
std
push
jecxz
or
xor
outsl
jg
inc
sti
mov
ljmp
dec
bound
scas
push
stos
xchg
xchg
pop
mov
loopne
test
inc
adc
pcmpeqb
inc
iret
xor
mov
fldt
mov
ss
addr16
shll
ss
inc
in
xchg
inc
in
clc
mov
mov
mov
loopne
or
push
enter
jl
xchg
dec
insb
sbb
sub
or
fisubrs
cmp
addr16
inc
pop
adc
jg
mov
or
or
jmp
adc
push
lods
cld
fsqrt
scas
sbb
jg
sbb
and
pop
mov
mov
subb
jbe
inc
adc
divl
aaa
nop
ret
into
lret
aam
jmp
lret
inc
outsl
push
ja,pt
ljmp
dec
popf
sahf
loopne
icebp
xor
xchg
mov
or
decl
leave
outsb
inc
mov
inc
xchg
mov
cmp
int
push
cli
add
sub
lods
pop
and
or
std
into
lods
push
mov
add
shl
insb
push
pusha
lea
dec
mov
xlat
shl
subl
loop
subb
jnp
inc
repz
push
sti
sub
jge
js
cmpsl
mov
outsb
mov
mov
shll
fiadds
subl
inc
add
xlat
ret
mov
xchg
mov
xchg
pop
lods
ret
adc
repnz
add
xchg
rcll
in
out
pop
jp
xchg
loope
jp
push
sbb
cwtl
cld
or
das
jo
and
push
cli
shl
pop
aam
push
ret
fnstenv
jnp
push
std
es
stc
pop
call
jae
andnps
test
sbb
sbbb
mov
inc
imul
adc
sbb
test
adc
stc
shrl
sbb
fisttpl
xchg
outsl
cmp
cmp
ss
mov
push
sti
push
dec
mov
nop
ja
jle
dec
sub
mov
mov
adc
jo
lret
jmp
divb
bound
xchg
ficoml
adc
data16
sbb
jg
sahf
fwait
sbb
cmpsl
cmp
xchg
jg
add
aam
mov
cmpsl
fadds
jo
movsl
movsl
mov
lret
sbb
js
inc
cltd
shll
insb
fcoml
stc
scas
push
scas
push
hlt
pop
push
mov
outsb
push
popf
xor
jge
dec
push
pop
ljmp
jo
dec
cmp
addb
push
cltd
and
ljmp
inc
int3
sub
cli
movsb
movsl
mov
add
xchg
cltd
push
push
or
or
dec
arpl
rolb
push
sub
and
cs
dec
clc
push
repnz
pop
dec
pop
xchg
ret
sub
and
ds
sub
cmc
sub
mov
pop
clc
insb
lcall
jg
mov
mov
lcall
aad
and
or
xchg
mov
ljmp
cmp
xchg
scas
movb
xchg
ds
push
dec
or
push
mov
mov
cli
js
loope
cmc
daa
jbe
fimuls
fsubl
inc
ja
lret
pop
lret
mov
add
sub
mov
pop
mov
and
sub
dec
push
rorb
inc
sarl
xor
idivl
and
cmp
jl
out
inc
mov
mov
mov
or
test
cmp
mov
decb
or
pop
sti
ja
movsb
mov
xchg
and
add
pop
push
imul
jae
in
jbe
das
push
sahf
test
sub
inc
push
outsb
sub
mov
in
lret
mov
push
xchg
fistl
cmp
icebp
push
or
cmp
sub
jp
scas
mov
or
lods
into
cs
push
mov
mov
pop
and
inc
idiv
xor
aas
testb
enter
dec
daa
pushf
std
popf
jmp
pusha
pop
mov
push
add
lret
or
xchg
jle
mov
fdivrs
sbb
mov
jecxz
test
cltd
xchg
or
sub
lods
sub
filds
push
lahf
lret
adc
sbb
adc
das
inc
ret
and
sub
mov
in
in
js
in
adc
mov
xor
in
mov
xchg
jl
sub
xlat
adc
add
data16
icebp
fmul
ret
lcall
stos
xchg
inc
orb
sbb
jnp
les
mov
gs
jg
jle
fnsave
pop
ds
inc
adc
ja
mov
and
xchg
leave
loopne
clc
lcall
cmp
pushf
pop
push
push
mov
push
loopne
add
sub
mov
mov
pop
mov
xor
ret
mov
and
nop
push
mov
sub
aas
cld
fmull
lock
fstpt
les
push
and
dec
mov
jecxz
sbb
mov
dec
xchg
sub
and
aam
dec
mov
mov
sbb
cwtl
mov
inc
cmp
and
std
call
adc
loop
mov
aam
roll
and
inc
jmp
inc
test
xlat
lea
xor
cwtl
loope
aaa
push
out
inc
push
clc
enter
icebp
pop
fcmovu
ss
nop
cmp
cmp
mov
rorl
aad
fisubrs
push
outsb
mov
arpl
clc
fsubl
outsb
inc
rorl
jg
movlps
push
add
xor
leave
sbb
nop
adcl
mov
or
jnp
xchg
divl
dec
adc
test
cmp
std
adc
push
lcall
sbb
arpl
push
mov
int3
fwait
aad
aaa
xchg
aaa
pop
outsb
imul
ret
jecxz
sub
mov
cmp
js
mov
iret
jnp
mov
daa
xor
xchg
sub
fisttpll
push
jmp
mov
test
fiaddl
pop
dec
xor
cmp
shlb
mov
xor
in
cmp
mov
in
inc
xchg
outsl
push
aas
add
inc
rol
inc
call
sub
xor
loope
rolb
and
xlat
xor
aas
nop
add
lods
cwtl
adc
dec
mov
fimuls
mov
dec
cli
sub
mov
mov
xchg
sbb
inc
sub
ds
or
leave
add
add
push
cmp
sahf
sbb
xor
fisttpl
xchg
and
cld
mov
aam
fstpt
in
adc
mov
sub
inc
cmpsl
push
js
push
stos
push
js
roll
push
sbb
cmp
add
mov
push
mov
sub
stc
inc
outsb
in
insb
fsubr
cmp
xlat
add
fucomip
dec
popf
sub
iret
sbb
lods
mov
add
fucomp
adc
mov
xor
in
mov
and
mov
or
minps
neg
dec
jb
xchg
imul
call
sbb
jge
arpl
sbb
xor
adc
pop
sarl
pop
sbbl
or
mov
adc
out
lods
inc
pop
sub
test
jnp
dec
dec
orb
outsb
into
mov
or
loopne
sbb
icebp
rep
subb
shll
xchg
lret
ret
sti
inc
fimuls
sbb
lock
out
jge
add
or
divb
sbb
cmc
or
jl
pushl
lea
jp
jno
mov
inc
mov
dec
mov
xor
mov
fcompl
dec
int
ret
mov
adc
daa
arpl
dec
hlt
mov
mov
pop
add
in
mov
adc
mov
rolb
loopne
leave
je
push
adc
mov
sti
jnp
btr
sub
adc
jge
or
dec
loopne
loopnew
mov
jp
add
sbb
mov
push
push
test
add
adc
mov
push
ss
push
ret
inc
popa
rorb
out
testl
popa
lock
pop
outsb
jae
outsb
jne
int3
clc
sbb
add
mov
push
xchg
mov
jae
inc
or
ja
movsl
jg
mov
lock
cmp
lock
lock
lock
inc
adc
sbb
in
pusha
mov
fisubrl
mov
sub
lret
jae
lret
jg
pop
loopne
adc
lret
inc
loopne
loopne
repnz
lea
push
enter
mov
out
cwtl
cmp
inc
or
mov
rclb
push
dec
cmp
mov
roll
cmp
scas
ret
or
repnz
push
mov
adc
pop
das
mov
push
cmp
sbb
inc
outsb
xor
push
push
mov
and
mov
inc
js
shl
clc
inc
subb
add
icebp
jge
and
mov
lock
push
push
not
cmp
push
push
pop
xor
enter
xor
repnz
pop
das
pop
add
jmp
push
add
sub
shr
pop
xor
add
sbb
jbe
cld
dec
push
clc
xor
dec
xchg
clc
jae
js
jno
xlat
push
insl
dec
leave
rorl
aad
sar
ret
push
dec
ficompl
sub
stc
xor
mov
push
mov
sti
lcall
push
lock
cmp
es
adc
mov
sub
in
dec
add
inc
sbb
out
jne
add
add
jns
mov
cmp
hlt
xchg
pop
outsb
vsqrtps
cld
add
in
fdivr
hlt
push
push
in
testb
jo
stos
in
dec
or
mov
popf
lods
scas
icebp
mov
cwtl
lock
dec
mov
jmp
aaa
cmc
popa
adc
cmp
enter
push
outsl
mov
and
movsb
add
inc
popl
add
pop
fisttpll
loope
js
inc
retw
inc
mov
jno
shlb
xchg
and
xchg
inc
xchg
pop
mov
nop
mov
cmpb
push
outsb
loop
mov
stos
cmpsl
dec
and
stc
in
test
sub
and
jmp
into
sub
lds
xor
mov
aas
stos
mov
cmpb
imul
pushl
in
adc
or
out
pop
inc
push
movzwl
ficoml
xchg
cmc
mov
push
call
ret
xor
daa
int3
mov
pop
cld
test
xor
pusha
daa
jp
sbb
mov
jle
add
sbb
popf
pop
and
mov
dec
pop
mov
push
add
push
mov
sti
lods
outsb
or
push
cmp
testl
sbb
outsl
or
adc
ljmp
hlt
xor
idivl
mov
sub
adc
arpl
pop
insb
shl
sub
insl
lock
pop
test
nop
outsb
pushf
fists
mov
push
mov
dec
push
xor
mov
xchg
mov
ss
addr16
mov
lea
cmc
or
repz
daa
insb
ret
sti
pop
cmp
scas
mov
sti
xor
jg
push
out
mov
jae
loopne
lahf
sbb
repz
mov
pop
pop
popa
pusha
pop
mov
pop
mov
pop
loopne
pusha
cld
push
clc
push
inc
in
inc
loopne
scas
mov
outsl
add
mov
cmpsb
test
jg
or
je
and
cmp
inc
repnz
dec
leave
jb
jp
push
clc
jnp
icebp
xor
outsl
test
sbb
pop
test
or
and
filds
js
imul
xchg
cmp
sub
std
xor
cmp
jbe
shrb
pop
xor
sbb
add
dec
sbbl
pushf
movsb
sub
cmpsb
popf
inc
loope
push
fisttps
inc
push
mov
pop
mov
ficomps
sub
xchg
out
aaa
cmp
jb
loope
jns
dec
dec
mov
test
or
int
cs
stos
dec
sub
and
jno
or
es
loope
mov
stos
jle
mov
testl
fwait
ja
test
leave
add
sbb
loope
aad
ja
test
sbb
popa
fisttpll
out
pop
or
cmpsb
xor
adc
mov
lods
sub
mov
ret
xor
sbb
adc
push
lret
cmp
ja
test
mov
arpl
std
xor
mov
xor
idivb
jl
out
lods
and
xor
jo
adc
sbbl
mov
sbb
lea
jo
mov
cmp
cwtl
loopne
inc
pop
iret
cli
dec
xor
addb
cltd
in
lret
sbb
mov
pusha
stc
lcall
stos
jle
rcl
test
lds
inc
std
lods
pop
jmp
pop
jmp
cmpsb
mov
clc
and
cwtl
call
add
test
xor
and
fnstcw
ljmp
adc
push
push
mov
cpuid
xor
out
movsl
mov
mov
jmp
lock
push
dec
pop
je
ret
outsl
ja
adc
movsl
ss
mov
mov
rcrl
mov
out
inc
and
xor
mov
inc
lock
cwtl
decl
hlt
or
fninit
pop
cmpsl
lods
jns
sbb
pop
mov
dec
dec
mov
dec
dec
notl
xor
xchg
lock
movsl
dec
xchg
or
and
or
popw
cli
lret
xor
js
mov
lock
push
shrb
push
jo
and
bound
jbe
mov
jle
mov
movsl
xchg
shl
mov
int
js
cmp
enter
sub
in
cs
or
jb
mov
inc
mov
mov
movsl
insl
icebp
mov
loop
cld
test
jl
addr16
cmc
push
mov
inc
sbb
mov
and
mov
jle
iret
pop
adc
jmp
pop
ret
adc
push
inc
dec
xor
sbb
fidivs
mov
cmpb
insb
sub
imull
aaa
aaa
and
mov
jp
fisubs
jmp
stos
add
xchg
and
pop
xor
in
out
sub
mov
in
mov
pop
test
or
cld
mov
roll
mov
fsubrs
insl
xchg
and
add
sbb
sbb
fcomip
inc
jae
jo
mov
and
mov
movsl
pop
int
and
adc
ja
lret
pop
loop
push
pop
es
inc
insb
mov
sub
fcmovb
add
ss
mov
cs
pop
cmc
jnp
cmp
adc
sbb
push
popf
jno
sub
adc
add
in
hlt
nop
mov
lds
dec
test
add
mov
outsb
adc
lds
dec
call
cld
inc
outsb
add
mov
or
pop
repz
arpl
adc
rcl
lahf
enter
add
lods
sahf
aad
adc
fs
mov
push
push
adc
cmp
jecxz
shl
cmp
bound
dec
push
leave
cli
mov
bound
adc
daa
loope
push
inc
das
aas
dec
cltd
mov
adc
dec
gs
and
mov
popa
in
xor
jge
dec
faddl
mov
fwait
les
loop
cmpb
dec
insl
movl
jne
outsb
mov
arpl
in
das
dec
xchg
jo
add
xor
je
mov
xchg
in
xor
inc
inc
dec
sbb
mov
idivb
xchg
lret
pop
dec
pop
testl
in
mov
iret
lds
loope
push
mov
inc
add
fcoml
andps
inc
enter
les
es
push
inc
fs
add
xor
iret
loop
lds
and
ret
dec
int3
sbb
loope
clc
xor
add
std
push
aam
jne
mov
imul
and
scas
or
mov
int3
push
sbb
ja
fisubs
lock
lods
and
test
out
js
and
ficomps
test
lcall
cmp
imul
mov
and
or
inc
xlat
dec
add
into
and
jo
xor
fsubrs
xor
push
fildll
ret
shl
hlt
push
jo
testb
inc
mov
add
sub
mov
mov
mov
or
jecxz
and
xlat
jnp
loope
addl
rolb
rorb
imul
outsb
popf
stos
pop
cwtl
mov
mov
data16
fdivrs
add
ret
jge
or
ret
cmc
push
jne
cmp
in
sub
or
adc
fimull
clc
xchg
mov
clc
and
movsb
and
cli
xor
out
or
sub
xor
insl
jne
mulb
subb
add
jae
fdivs
xchg
inc
jne
ficoml
in
pop
pop
or
ljmp
sarl
or
push
or
push
mov
loope
movsl
adc
push
push
ret
jnp
mov
cld
mov
jo
xor
rcll
fbstp
les
cmc
jge
dec
sbb
and
pop
sarb
push
shrb
cltd
js
call
mov
mov
xlat
cwtl
es
xchg
and
or
rcrb
popf
pop
or
xchg
enter
add
xchg
call
ret
lahf
mov
shrb
daa
mov
fs
jg
scas
insl
mov
andl
cs
xlat
sbb
mov
pop
jne
in
inc
dec
jmp
das
shrb
mov
mov
outsl
leave
out
movsb
icebp
inc
aad
rclb
popa
ja
in
out
xor
add
xchg
mov
insl
fildl
xor
mov
mov
mov
mov
aas
sbb
stc
xchg
std
addl
cmp
xlat
rcrb
pop
add
test
les
mov
or
mov
or
push
mov
dec
mov
sbb
pop
ucomiss
out
push
jns
cmp
pop
xchg
pop
or
loop
sarb
jae
arpl
mov
imul
inc
push
push
daa
jecxz
push
fistpll
fsubrs
imul
xchg
mov
cmc
sub
movsl
pop
push
adc
push
xor
ss
in
inc
push
adc
fcomps
out
fildl
ffree
fs
flds
lods
inc
js
jmp
cmovp
lahf
or
xchg
push
cwtl
in
lea
std
mov
fwait
sbb
ljmp
or
and
pusha
call
jg
adc
es
mov
imul
loop
or
pushf
sahf
sbb
pop
mov
out
je
mov
xchg
pusha
inc
add
dec
mov
dec
std
and
xchg
push
notl
pop
xchg
loopne
sti
mov
rol
mov
out
jmp
mov
lods
cs
mov
pop
shll
push
cmpsl
mov
cs
sbb
movsb
in
pushl
xchg
dec
enter
test
or
push
jp
jg
or
stc
and
sub
xorb
outsl
lock
ss
xchg
mov
test
lret
lret
pop
cli
mov
cs
xchg
sbb
test
sahf
dec
pop
xchg
sub
lds
inc
jecxz
mov
jne
packsswb
pop
pop
pop
fnsave
jecxz
cltd
mov
pop
call
out
subl
aaa
dec
mov
loopne
or
inc
loopne
add
ljmp
sub
and
outsl
mov
fimuls
xchg
mov
mov
js
bound
clc
sbb
xchg
push
in
test
hlt
adc
or
aaa
xchg
and
sti
xor
push
mov
jmp
fcompl
dec
ret
sub
cld
lock
jle
lahf
fildl
js
lea
mov
sbb
push
sub
push
pop
xor
cmp
div
mov
insb
or
sbb
es
jae
push
fisttpl
aam
sub
pop
cmp
dec
add
fists
in
je
test
or
rcr
dec
pop
jbe
or
fstpt
xor
int3
sti
icebp
andb
inc
mov
sub
popa
and
mov
lock
orl
cmp
sbb
call
push
test
pop
outsb
add
lods
mov
dec
jge
sbb
stos
pop
push
mov
testl
jl
lods
lds
shrb
xchg
xchg
mov
decl
das
cmc
adc
xchg
in
inc
int3
out
int3
xchg
cld
jg
sbb
nop
push
xchg
movsb
push
loopne
adc
in
lds
and
inc
insb
movsl
test
mov
add
loop
pop
clc
mov
cmp
in
ljmp
imul
xchg
cmpsl
cld
pop
dec
xlat
mov
push
push
inc
fbld
cli
test
push
shrl
jecxz
addb
fidivrl
mov
mov
hlt
and
pop
stos
sbb
nop
mov
mov
inc
mov
cmp
out
imulb
stos
ror
adc
add
sub
pop
xchg
sbb
sbb
jo
cmp
fisttpl
pushf
mov
pop
outsl
mov
xor
cmp
pusha
sahf
movsl
jg
out
xchg
ds
and
pop
mov
dec
cld
cld
pop
jge
mov
pop
xlat
add
movsb
and
fldt
push
inc
frstor
lods
icebp
cmp
dec
pop
pop
cwtl
sarl
jne
shlb
add
rorb
nop
jle
jl
and
cmc
pushl
fisttpll
lret
push
adc
and
mov
sbb
add
movsl
aam
mov
sti
pop
outsl
sub
xor
shr
pop
lret
mov
xchg
fisubs
jo
mov
and
jp
daa
pop
add
and
lds
fcmovnu
xacquire
cmp
sahf
in
int
ljmp
push
negl
jge
cwtl
cmp
and
and
popa
pop
push
mov
pushf
sbb
mov
inc
lret
jno
int3
jmp
je
cmc
xor
aaa
push
decl
mov
pop
clc
outsl
das
jl
cmp
sbb
stos
rorl
shl
cmp
inc
cli
and
fnstcw
mov
rcrl
frstor
xor
xchg
jg
push
and
pop
pop
mov
adc
cmc
pop
push
jmp
mov
push
xorb
int3
pop
xchg
idiv
pop
mov
fsubrs
insl
mov
or
hlt
inc
outsl
clc
add
movsb
nop
xor
mov
test
mov
mov
sub
jno
inc
and
xor
push
faddl
and
call
pop
cmp
stos
xor
stc
push
outsl
and
cmp
in
pop
stc
mov
push
mulb
notl
orl
push
lcall
cmp
push
sti
das
mov
fcoml
inc
add
popa
pusha
jmp
shrb
insl
adc
je
ror
rcll
outsl
mov
mov
clc
in
inc
lcall
dec
pop
sub
fildl
jmp
add
popf
add
mov
fildll
jecxz
mov
psrld
clc
or
push
adcb
lahf
mov
fistpll
push
testl
add
js
or
imul
outsl
mov
pusha
shl
es
mov
xchg
in
or
mov
mov
popa
lahf
icebp
pop
sbb
jne
jne
insb
rol
das
push
aam
and
mov
inc
jo
mov
adc
or
pushf
add
sbb
js
mov
sbb
or
hlt
sar
lods
jbe
test
insl
lret
mov
mov
mov
fst
cltd
test
jae
out
add
loopne
enter
pop
cmpl
lds
repz
and
movsb
push
push
dec
imul
cmp
mov
out
shll
shrd
repz
sbb
push
push
xlat
insl
popf
loope
adc
push
push
outsl
pop
mov
rclb
lahf
lock
push
test
lods
add
leave
mov
push
jmp
push
dec
loopne,pt
rcl
mov
pusha
jmp
aas
xchg
cmc
adc
fdivrp
pushl
inc
sbb
jne
xchg
mov
sub
mov
add
mov
mov
test
or
scas
incl
pop
ret
xlat
fistpl
push
jp
or
pop
cmp
adc
lea
push
stos
add
xor
jp
in
dec
sbb
pop
enter
mov
sub
jae
stc
in
fnstcw
mov
lea
dec
aas
cltd
add
gs
call
or
or
mov
mov
or
sbb
xor
mov
and
call
iret
sub
inc
inc
pop
jg
cmpsl
sbb
cmp
jne
fnstenv
adc
hlt
mov
stos
dec
inc
and
pop
dec
xor
mov
lret
fmuls
sbb
adcb
sub
inc
lea
adc
fcomps
fiaddl
stos
and
clc
push
xchg
inc
call
lock
ret
test
clts
xchg
movsl
repz
sbb
scas
stos
push
je
popa
push
clc
aam
fnsave
loop
add
jne
pop
cli
dec
mov
and
jns
adc
sbb
add
adc
inc
push
cs
add
je
xchg
test
cli
clc
inc
or
pop
insl
mov
adcb
jl
and
fildl
je
or
dec
jle
lods
mov
add
adc
push
inc
mov
filds
cli
frstor
xchg
pop
cli
lods
push
jno
aas
outsb
out
lock
hlt
and
pop
aam
and
fdivrs
xor
pop
outsb
ljmp
pusha
or
mov
mov
outsl
lds
add
mov
xchg
mov
and
mov
mov
add
pop
cltd
push
outsl
cld
mov
and
push
xchg
dec
jne
mov
adc
pop
mov
inc
scas
ret
arpl
push
pop
jp
jns
add
lds
cli
add
xchg
add
inc
mov
loope
mov
dec
js
es
jbe
rcrb
mov
into
adc
fidivl
cmp
addr16
bound
sbb
add
xchg
inc
push
push
and
cmpsb
outsl
lea
leave
inc
dec
sarl
mov
test
lock
dec
pushf
jo
sub
pop
fdivrs
push
sbb
jo
xchg
xchg
dec
fiadds
rol
dec
js,pn
jo
imul
xchg
jmp
xor
popf
dec
sub
or
adc
mov
insb
dec
test
imul
sub
stos
orl
cmc
lea
ja
pusha
cwtl
mov
outsb
imul
lahf
int3
adc
leave
das
jge
fsubs
ret
cmpsb
xor
lea
push
and
test
outsl
mov
rorb
idiv
sbb
popf
inc
rclb
data16
mov
mov
lock
std
xchg
mov
notb
clc
int
add
daa
sub
aad
cltd
sub
into
faddp
pop
in
ret
cmp
test
aas
das
and
aam
or
notl
xchg
loopne
sbb
call
inc
sbb
js
mov
testl
mov
or
out
inc
sbb
negb
sti
adc
jno
pop
mov
jnp
adc
orl
test
ret
add
pop
jg
pop
jp
ficompl
or
jns
adc
xchg
inc
enter
cli
adcb
fadd
sahf
sub
ss
add
jecxz
mov
add
mov
mov
push
jle
popa
ret
mov
nop
sub
rolb
add
sub
out
cmp
das
ds
adc
call
push
hlt
add
push
cmpsb
sbb
fsub
and
ljmp
mov
fidivrl
add
shlb
push
data16
lea
repnz
or
add
xor
shlb
fsubl
push
mov
enter
subb
fisubrs
inc
mov
add
movsb
lret
sti
mov
push
in
or
movsl
adc
cwtl
push
pop
fistpl
in
mov
fcom
pop
jle
push
lock
jo
das
in
add
jno
sub
add
repnz
mov
lahf
movsl
xlat
push
pusha
mov
xchg
adc
sbb
dec
xor
mov
dec
mov
loopne
add
orl
aam
rclb
cs
xchg
mov
test
pop
adc
cmp
xor
dec
icebp
test
adc
push
das
push
jmp
or
push
inc
add
ret
aam
or
test
dec
and
sbb
push
popf
and
or
lea
adc
lret
pop
in
sbb
test
nop
sti
pop
and
add
mov
imul
or
call
into
xchg
sbb
lcall
sub
sti
xchg
pusha
in
or
adc
out
stos
or
loope
add
addb
ljmp
out
or
mov
push
sub
sbb
adc
ljmp
test
jp
xchg
lea
fcoml
push
mov
or
push
shrl
mov
and
sbb
lea
add
jp
test
pop
adc
stos
lods
sbb
sbb
divb
lock
jbe
addb
in
xor
insl
dec
push
sbb
pop
inc
sbb
or
sarb
lcall
push
sbb
popf
add
clc
push
xor
sub
sbb
in
clc
xchg
jmp
iret
xor
repz
arpl
xchg
jnp
cs
mov
pop
xor
jnp
aas
inc
cmp
cli
mov
and
push
push
and
inc
mov
push
aam
adc
mov
xchg
sub
sub
jo
adc
adc
sub
sbb
shlb
add
sub
xchg
cmp
mov
popa
adc
cmp
loop
fildl
ret
add
call
xchg
mov
sbb
insb
inc
mov
ss
cwtl
jmp
adc
dec
mov
jge
pusha
adc
sub
cmp
sbbb
mov
inc
fcoms
mov
dec
lods
dec
push
mov
xchg
call
cltd
add
scas
dec
push
or
push
sbb
repz
lock
addr16
inc
xor
fdivrs
inc
mov
mov
cmp
loop
enter
aas
or
jge
add
jle
das
nop
cmp
xchg
filds
add
imul
pusha
xchg
cmp
fdivrl
sbb
rclb
dec
icebp
lcall
pop
sub
fcoms
add
bound
push
sti
repnz
add
push
lods
iret
std
xor
out
inc
mov
ss
adc
add
sbb
xchg
pop
in
sbb
pop
jb
cmp
dec
dec
outsl
andl
sub
loope
sbb
push
and
jns
mov
xor
mov
rclb
add
out
inc
shrl
mov
sbb
addr16
add
cld
daa
adc
enter
cmp
loopne
call
mov
cmpl
mov
jge
xor
dec
and
jo
cmpsb
rclb
jmp
addr16
andb
mov
imul
jo
in
add
into
add
daa
rcrb
ss
roll
pop
test
jne
pop
stos
inc
rolb
add
push
aaa
adc
outsb
xchg
cmp
mov
and
aas
push
push
cli
jns
cmpsb
mov
cmp
inc
cli
testl
push
test
loope
fisttps
fsubr
sbb
jmp
lcall
ret
push
sbb
and
mov
xor
push
and
in
jp
loopne
push
outsb
rorb
lea
xchg
mov
icebp
pop
mov
loop
pushf
imul
cli
push
xor
icebp
mov
add
xor
and
loope
adc
add
xchg
push
jecxz
pop
mov
fs
adc
enter
xor
sahf
or
call
or
push
ljmp
ret
dec
adc
push
addb
add
add
mov
push
adc
inc
or
jl
cld
fdivrl
bound
mov
cmp
sub
out
add
js
cs
inc
sub
cltd
mov
sbb
scas
xchg
call
add
enter
xor
fldenv
es
pop
jp
je
sbb
add
fdivrl
push
xchg
cld
sahf
lods
rorb
pop
adc
notb
fcoml
add
pop
fistpll
pop
add
and
loopne
aaa
sbbb
dec
inc
and
sbb
sbb
cmp
sbb
sbb
or
or
dec
in
and
inc
adc
les
fs
sub
es
add
or
lret
inc
aaa
jle
mov
bound
push
mov
loope
mov
or
es
adc
mov
sub
sbb
mov
pop
cmp
jo
popa
dec
mov
sub
lock
push
outsl
push
mov
mov
insb
cld
mov
movsl
or
or
pop
sub
dec
scas
or
jbe
jo
mov
insl
jmp
xchg
xchg
call
sbb
adc
dec
push
cwtl
roll
icebp
mov
and
xor
mov
fstpt
rclb
daa
lock
sahf
jnp
fimuls
loopne
jnp
fwait
iret
mov
out
add
or
xchg
and
adc
inc
sbb
cs
and
ljmp
push
jmp
mov
pop
mov
je
inc
lock
add
jl
int
leave
outsl
inc
fs
orl
clc
xor
ja
divl
push
std
lods
movsl
pop
or
xchg
in
call
ljmp
add
dec
add
lcall
or
clc
inc
cmp
xor
inc
xor
jle,pn
incl
faddp
loopne
cmp
sbb
xchg
add
cld
lock
add
sub
and
aad
mov
jbe
pop
jns
jp
enter
or
shl
loope
sub
loope
into
pop
call
rol
clc
add
addl
adc
mov
add
jg
rcll
mov
add
pushf
and
cmp
movsl
push
daa
push
fnstsw
add
dec
xchg
inc
hlt
dec
mov
add
fistl
aam
xchg
add
add
dec
in
inc
lahf
mov
xchg
add
or
bound
inc
imul
sub
das
sar
stos
add
add
incl
mov
fiaddl
push
dec
dec
mov
outsl
sarb
add
dec
xchg
push
fimuls
cmpsb
mov
sub
adc
adc
push
test
mov
imul
inc
sub
add
or
sub
or
jecxz
jbe
mov
js
in
push
adc
fisubrs
ljmp
fmuls
mov
pop
mov
xchg
mov
dec
push
sub
or
sahf
nop
arpl
out
or
scas
in
add
repz
adc
movsb
add
dec
cld
sub
and
aaa
bound
incb
into
add
and
outsb
inc
pop
je
aam
and
add
adc
in
and
jbe
cld
add
adc
inc
push
hlt
imul
addr16
push
adc
call
push
je
incl
adc
loope
add
push
push
cli
sub
cltd
mov
jnp
and
adc
ja
adc
mov
or
jno
sub
mov
ret
leave
mulb
mov
pop
xor
leave
mov
and
sub
in
mov
and
jne
jle
out
adc
out
cltd
lods
mov
idiv
xchg
push
jns
out
popf
dec
sbb
sbb
sub
adc
and
movsb
inc
loop
cmpsl
cmpsb
add
pusha
add
adc
test
add
pop
sbb
addr16
add
or
mov
push
xchg
push
inc
cmpb
sub
add
or
or
add
inc
test
incl
inc
jl
shr
dec
jae
sub
dec
popf
or
mov
movl
adc
sbb
mov
imul
pop
imul
mov
jnp
stos
stos
xchg
and
insl
or
pop
cltd
xlat
icebp
xchg
fstps
stos
mov
and
xlat
cwtl
sbb
test
mov
jno
addl
push
mov
jbe
cld
jl
add
adc
adc
sarb
push
rclb
inc
sbbb
cmp
aaa
mov
dec
xchg
adc
sbb
clc
jg
incl
inc
mov
and
lret
cmp
dec
pop
loope
stos
or
adc
movsb
add
jns
push
jp
jge
test
lahf
pop
mov
mov
push
pop
sbb
sti
lods
std
cwtl
add
cwtl
dec
push
cltd
movsb
jbe
cmp
pop
push
outsb
jg
insb
push
aad
mov
push
jg
ja
add
ss
mov
pop
sub
push
pop
je
dec
pop
and
and
push
fstpl
test
mov
push
aas
sub
pop
dec
movsl
jg
mov
stos
jg
jb
dec
xorb
mov
push
das
js
ret
push
jnp
jns
dec
sub
jo
lea
leave
adc
jnp
insb
mov
sbb
test
add
aas
xchg
adc
loopne
in
jno
xchg
nop
sub
mov
lret
or
enter
hlt
rolb
aas
adc
or
sub
clc
adc
imul
pop
js
jg,pt
mov
repnz
sbb
ficoms
mov
mov
aad
outsb
adc
xchg
sbb
hlt
out
jnp
inc
adc
and
sub
fnstsw
xor
clc
fldenv
add
loop
js
mov
add
sbb
xor
es
pop
add
stos
mov
inc
or
mov
mov
sarb
popl
mov
or
pop
cwtl
sub
xor
mov
inc
scas
jle
mov
aaa
or
push
or
mov
and
lds
inc
adc
inc
fsubr
insb
fdivrs
subb
cmpsl
fcompp
iret
cmp
sbb
inc
js
push
daa
xor
and
sbb
rcr
fwait
std
add
je
jp
xor
orb
test
add
push
gs
lds
sbb
das
mov
pusha
pop
or
lret
cmp
mov
pop
rorl
xchg
fcomps
call
fwait
cmp
mov
in
adc
das
or
adc
pop
loope
lcall
adc
fsubrs
adc
cwtl
sbb
jle
xchg
lock
shlb
cwtl
lea
adc
or
adc
jb
jmp
dec
adc
pop
jmp
adc
sarl
mov
dec
adc
pop
jnp
ss
dec
cld
rcr
rclb
fbstp
outsl
js
or
mov
xchg
mov
mov
and
sub
and
add
add
or
xchg
ficoml
mov
lea
popl
mov
sbb
xchg
jbe
jge
sar
insl
fcoml
test
jns
push
pop
sub
scas
pushf
stc
push
lds
lds
add
cmp
ret
inc
ja
pop
xor
adc
mov
cmp
add
xor
ja
cli
sbb
int
mov
pop
outsb
inc
pop
pop
stc
xchg
arpl
std
dec
pop
mov
sbb
fsubs
je
stos
outsb
rcll
jnp
or
xchg
mov
or
icebp
arpl
cmp
sub
xor
and
mov
mov
add
cli
push
push
fucomip
inc
xchg
jae
and
mov
dec
sub
add
imul
mov
mov
dec
xor
arpl
push
test
cmpsb
shrb
dec
lret
add
outsl
mov
add
inc
or
loop
mov
add
sti
imul
inc
inc
push
gs
sti
js
adc
jne
inc
jmp
pop
clc
outsl
aad
jae
mov
push
add
sub
xchg
adc
les
loop
call
aas
iret
ja
adc
jge
int
mov
lcall
insb
xor
orb
pop
ja
sbb
mov
call
fucomp
sbb
cmpb
push
mov
mov
in
je
sbb
adc
enter
fildl
movsb
mov
cmpl
mov
fwait
pop
pop
inc
push
cmp
jns
pop
or
cmpsb
fidivrl
xchg
xchg
jecxz
jae
push
or
sbb
testb
adc
mov
jne
sbb
movl
pop
insb
mov
mov
xor
lret
out
cs
out
sub
xor
dec
pop
test
adc
fwait
lahf
adc
sub
mov
out
dec
adc
or
cmp
push
dec
repz
sub
jbe
mov
shl
xor
roll
inc
cwtd
add
loope
or
sub
je
mov
xchg
cmp
hlt
xor
insb
lcall
cs
rcll
add
mov
ljmp
fisubl
pop
in
sbb
mov
ret
jmp
out
jp
mov
push
and
pop
imul
stc
mov
sti
dec
xor
jecxz
or
popa
mov
and
jg
insl
push
shlb
dec
ss
or
leave
inc
std
xchg
hlt
and
mov
movl
jne
add
pop
dec
pop
cwtl
xor
lods
shlb
imul
es
push
push
pushf
ror
repz
add
aam
xor
std
je
mov
and
adc
bound
xchg
lock
sub
adc
and
dec
pop
fcomps
insl
faddl
push
push
mov
aad
rcll
lret
enter
xor
mov
orb
mov
cmpsl
add
cli
sbb
or
addb
loopne
cmc
outsb
add
popa
push
shl
outsb
mov
sbb
cmp
inc
icebp
jg
arpl
das
imul
inc
mov
mov
xor
call
xchg
jge
sbb
ret
sub
mov
or
pop
cli
test
cmc
mov
adc
push
lcall
pop
icebp
femms
cmpsb
les
je
adc
add
xchg
in
test
pop
adc
add
cmp
sub
testb
mov
shlb
ds
push
pusha
imul
push
or
jno
add
std
sbb
pop
mov
inc
data16
xchg
out
sub
inc
out
xchg
or
jmp
hlt
or
repnz
mov
outsb
mov
in
cmp
pop
push
mov
in
pop
jnp
mov
and
mov
std
stos
adc
jg
pop
cmp
pop
jno
jnp
lds
add
icebp
push
std
dec
push
adc
mov
in
sti
and
jl
jo
icebp
push
out
mov
repnz
mov
faddl
xor
push
mov
inc
add
adc
fs
add
es
iret
stos
push
pop
pop
stos
std
stos
fsubs
jnp
inc
fs
pop
clc
mov
je
pop
stc
xor
and
jl
data16
mov
mov
outsb
scas
xlat
mov
clc
dec
in
lods
cmp
insl
fisubs
inc
pop
inc
inc
inc
je
cli
das
je
inc
sub
push
push
push
inc
pop
or
cli
decl
pop
and
xor
dec
mov
arpl
sub
loope
test
inc
or
in
jmp
std
outsl
jp
insl
or
jge
sub
push
dec
inc
psubb
out
pop
inc
js
lret
mov
in
pop
and
sti
outsl
mov
es
xor
leave
std
push
lds
jecxz
inc
into
rorb
xor
test
mov
jl
add
int3
clc
and
adc
roll
sahf
lret
xchg
sar
loope
scas
adc
lret
jo
push
leave
push
dec
xor
lods
push
sahf
sub
or
daa
mov
add
jb
inc
add
xorb
jecxz
xor
call
bound
add
pop
cmp
cvtps2pd
adc
or
mov
call
imulb
fadds
sub
and
int
sbbl
shll
jo
push
adc
nop
add
lods
cli
push
insb
fsts
bound
mov
insl
jmp
outsl
insb
adc
xor
fistl
and
xchg
push
clc
or
add
push
in
popl
pop
cli
das
jge
roll
sbb
sbb
fsubrs
aam
cmp
push
in
ljmp
jmp
aas
push
shlb
or
ljmp
add
xchg
ja
pop
push
mov
sbb
dec
mov
mov
sbb
call
rcrl
xchg
mov
xor
xor
push
xchg
pop
pop
add
inc
rcr
pop
int3
or
insb
in
mov
sbb
mov
das
xchg
das
jnp
and
inc
dec
nop
movsb
gs
add
push
lea
push
jmp
jo
rorb
adc
xchg
jno
push
aam
jmp
aaa
cs
cmp
mov
sub
int3
xor
sub
add
push
sbb
cltd
cmc
inc
nop
jne
add
dec
loop
fstps
fsts
std
dec
ja
dec
int3
pusha
adc
dec
jge
mov
inc
leave
test
sbbl
cmp
jl
gs
dec
jmp
repz
xchg
mov
adc
test
outsl
bound
jmp
sbb
dec
ss
rcrb
cld
nop
jecxz
or
pop
mulb
insl
call
xor
pop
jae
sub
ljmp
mov
fdivs
jmp
ret
push
mov
xchg
fcomps
lret
mov
sti
xchg
addb
repz
sub
shlb
cmp
pop
and
jnp
xchg
cmp
xchg
ret
mov
pop
mov
mov
test
xchg
insl
and
insb
push
mov
addr16
enter
fadds
mov
mov
inc
int3
and
mov
dec
push
loop
pushf
pop
mov
lds
adc
push
add
fs
mov
pushf
sub
sub
cli
push
mov
mov
je
movsl
leave
imul
mov
and
pop
xlat
xor
divb
xor
enter
adc
jmp
xchg
adc
adc
lock
or
fs
pop
test
shlb
mov
or
push
mov
jno
sbb
cmp
addb
stos
mov
sti
jbe
stc
jge
or
push
adc
fwait
mov
mov
pop
sub
fwait
cmp
roll
ret
cmp
xchg
inc
cmp
jne
adc
pop
inc
mov
ja
in
mov
jb
dec
mov
in
dec
jae
mov
sbb
stos
fiadds
movsb
jl
jp
mov
andl
sub
es
pusha
repz
mov
testl
or
subb
jbe
push
inc
mov
sbb
lods
dec
outsl
enter
push
sbb
scas
add
cld
mov
push
mov
scas
dec
leave
jne
mov
mov
jne
pop
bound
sbb
sbb
mov
dec
and
cmpsl
lods
movd
adc
sbb
mov
scas
mov
mov
lock
push
or
fists
nop
mov
push
sti
in
aas
rorl
call
outsb
jmp
xchg
mov
jl
shrb
or
add
loopne
mov
cwtl
arpl
out
rol
movsl
pop
sbb
adc
cs
jmp
xchg
js
mov
xchg
mov
call
pop
add
sar
xchg
bnd
arpl
xchg
xchg
mov
xchg
fsubrl
cld
rorb
dec
mov
scas
roll
fs
popa
arpl
rcrl
inc
add
cmpb
inc
or
ds
xlat
test
in
jecxz
sbb
insl
sbbb
mov
test
fucomp
lret
sbb
insl
jecxz
pusha
sub
inc
ret
mov
sbb
sub
add
mov
lods
adc
jle
inc
sbb
mov
or
push
loopne
cltd
mov
fisttpl
push
fadd
add
movsl
jbe
mov
push
and
pusha
dec
pushl
cmp
es
das
sbb
dec
cmp
adc
iret
movsl
dec
sub
cmc
jecxz
pop
push
mov
cwtl
push
mov
dec
test
jo
mov
dec
and
push
into
and
ficomps
push
mov
out
push
push
cmp
or
out
jmp
mov
inc
sti
pop
push
sbb
cmp
icebp
or
rolb
mov
call
mov
inc
mov
push
sti
fwait
pop
mov
dec
pop
in
ljmp
cmp
popf
inc
cmp
movsl
lret
add
xchg
or
ja
and
inc
outsb
mov
in
rclb
add
sbb
out
ds
inc
add
push
insl
nop
mov
lahf
xor
imul
test
adc
sbb
test
push
inc
repz
push
mov
adc
or
jne
dec
aam
inc
adc
fs
mov
jp
pushl
push
jne
insb
out
rolb
or
sub
pop
int
imul
add
fwait
mov
push
loopne
out
jge
or
add
call
mov
lret
int
rcrl
lret
jge
iret
clc
into
inc
mov
enter
pop
lods
cmp
dec
sub
mov
pop
xchg
stos
movsb
mov
js
jbe
pop
rorb
push
bound
imul
push
jl,pt
inc
and
xor
lock
mov
mov
inc
clc
call
and
lret
loopne
in
add
sbb
call
add
lock
ret
out
cmc
xchg
movl
dec
shlb
divb
mov
sbb
xacquire
call
stos
push
clc
das
test
ret
push
aam
sbb
rol
rolb
dec
test
sub
pop
shrb
mov
pop
rorb
xor
inc
push
rolb
adc
mov
pusha
ret
lcall
cmp
pusha
sub
outsb
cli
push
shlb
inc
push
push
inc
sti
push
cld
ret
dec
adc
sbb
or
mov
rorl
cvtps2pd
dec
jg
pusha
ret
inc
push
popa
mov
cmpsl
or
ljmp
mov
mov
arpl
lds
pop
loop
bound
test
cmp
sub
or
and
pusha
movl
push
movzbl
andl
or
fidivrl
clc
mov
or
out
lea
push
in
add
or
pushf
push
mov
xor
shl
in
popf
imull
or
cwtl
repnz
pop
sbb
mov
inc
popa
test
inc
lret
stos
push
adc
insb
call
adc
push
lea
push
imul
loopne
jns
mov
mov
jge
stos
xor
cmp
cli
pop
ljmp
ljmp
push
or
add
push
mov
mov
cld
sarl
adc
lret
addl
fwait
push
jmp
push
stos
stos
push
fpatan
dec
mov
aaa
rorl
in
jbe
rcr
repnz
push
mov
notb
mov
shl
lcall
aad
inc
psubsw
add
dec
rorl
lret
dec
fldcw
jge
xchg
cmp
imul
push
cld
lock
mov
cld
adc
subl
out
and
push
jecxz
aas
xor
push
es
mov
aaa
in
sar
sbb
fwait
jo
push
push
or
andb
pusha
push
ljmp
adc
decb
inc
fistps
adc
inc
lock
mov
sbb
or
inc
sub
add
jg
call
push
add
lods
cs
mov
cld
fbld
mov
cmp
mov
rolb
pop
push
insl
mov
call
in
and
not
inc
aaa
clc
shlb
fdivr
xchg
add
mov
add
or
pusha
pop
out
mov
adc
cwtl
and
sub
push
cld
mov
xchg
sbb
jle
mul
xchg
pushl
sarb
xor
and
ljmp
mov
stc
xor
in
or
push
mov
push
jne
mov
sbb
jno
xor
cmpsl
push
lods
mov
xor
jae
aad
mov
adc
mov
push
cltd
xchg
push
pop
dec
push
inc
test
sbb
push
sbb
enter
mov
pop
mov
nop
fs
scas
repnz
cmp
dec
mov
cmp
mov
cmp
mov
jecxz
fcomps
rcrb
aad
mov
lock
lea
lods
enter
pop
xor
pop
mov
iret
cmp
push
mov
dec
and
in
pop
stc
push
jmp
popa
pop
jmp
xor
adc
arpl
rorb
sub
js
test
sbb
mov
jge
dec
fucom
das
inc
mov
movb
movsl
lea
sub
dec
sarb
cld
sub
int3
js
std
push
nop
incb
inc
incl
mov
arpl
lock
ljmp
push
loope
lahf
cld
pop
jecxz
sub
inc
jnp
into
xor
sbb
sti
rclb
out
fcompl
dec
ret
add
pop
lret
mov
lcall
lods
or
ja
loopne
xor
outsl
cld
out
xchg
dec
push
mov
fsubp
outsb
clc
incb
jmp
loopne
xor
adc
push
aaa
fsubrs
push
mov
push
xchg
mov
sub
int
fisubrl
insb
hlt
loopne
fmull
xchg
dec
into
pop
mov
adc
enter
in
ret
mov
fucom
push
cmc
mov
inc
lods
cltd
lret
call
lret
cltd
addr16
jo
arpl
add
sbb
sub
cmp
test
in
mov
push
lods
jp
xor
mov
pop
mov
push
clc
cmc
add
push
insb
sub
and
icebp
mov
sbb
push
sbb
push
scas
pop
clc
xchg
rclb
leave
sub
jno
add
movl
loope
mov
pop
jno
ljmp
ljmp
xor
xor
add
xchg
push
sub
dec
das
mov
movsl
pushl
ficoms
lret
jp
mov
and
mov
das
ret
mov
adc
mov
lds
out
nop
stc
or
aaa
push
mov
mov
mov
and
loope
ljmp
xor
lods
push
inc
pop
dec
nop
inc
and
lcall
dec
lods
mov
pop
mov
or
mov
ja
jg
or
subb
mov
fdiv
inc
in
popf
fdivs
das
mov
sti
mov
cs
and
pop
aad
cmpsb
adc
mov
pop
or
cmp
inc
mov
add
loop
and
cwtl
adc
call
inc
mov
or
movsb
xor
sbb
outsl
fwait
imul
and
call
mov
icebp
ffree
cltd
sbb
out
dec
call
push
xor
rcl
cld
test
jmp
pop
outsl
jg
mov
sbb
jno
add
fisttps
adc
adc
mov
push
sub
sub
lods
sub
js
pop
and
fmull
sub
mov
ret
hlt
and
inc
push
jae,pt
pushf
jp
jbe
movsb
push
data16
das
xor
sub
fmuls
xchg
lea
mov
mov
jecxz
mov
xor
sbb
add
mov
in
push
aad
lea
lods
or
inc
rorl
mov
enter
insb
mov
inc
pop
test
xchg
into
cld
sub
sbb
rcl
popf
inc
inc
dec
insb
int
mov
jnp
cs
inc
cmp
imul
cld
outsl
pop
inc
stc
push
into
jne
aaa
int3
es
std
lcall
pop
jbe
cmp
les
xchg
outsl
jge
syscall
jae
cmp
loope
cld
decl
lods
ficomps
popf
mov
inc
gs
mov
push
lret
and
jp
test
movl
dec
loope
pop
stc
push
dec
xor
mov
bndstx
and
mov
mov
movsb
mov
or
lods
jmp
mov
ret
mov
sub
xchg
and
sub
mov
add
enter
lea
stos
mov
sahf
xor
pop
and
or
cmp
mov
add
adc
mov
mov
rol
cld
adc
sbb
cli
dec
pop
pop
push
mov
jge
push
adc
pop
and
adc
sbb
shll
das
mov
mov
adc
inc
xor
es
mov
loope
test
or
and
aaa
inc
adc
fsubrs
jnp
das
scas
enter
mov
mov
inc
lods
jge
jg
inc
test
addb
stos
call
in
inc
fistps
inc
sbb
clc
push
ljmp
loopne
scas
in
shlb
divb
mov
sbb
and
pop
jbe
or
push
ret
mov
and
andb
arpl
adc
mov
stos
pop
jmp
inc
inc
adc
and
jp
loope
sub
add
ljmp
fwait
aam
call
and
jl
xor
insl
rclb
or
inc
push
add
push
cld
insl
loope
inc
dec
pop
mov
xor
pop
xor
inc
ret
dec
push
lock
jmp
aam
in
decl
das
mov
lea
iret
jl
xchg
incb
mov
rcll
jg
xor
sub
imul
cmp
ljmp
frstor
movsb
jmp
cmpb
sbb
jo
fdivs
xor
mov
xchg
aaa
push
stos
push
std
sti
scas
add
scas
repz
pop
push
push
pushaw
jecxz
and
fnstenv
inc
mov
cmp
push
push
push
arpl
or
pusha
sub
fdivrl
bound
xor
push
push
mulb
push
push
fnsave
mov
lock
outsb
fwait
outsl
arpl
mov
fucomp
lea
cld
fstps
lahf
mov
adc
mov
adc
cltd
mov
ret
xchg
insb
jbe
xchg
xor
test
fs
fcompl
or
sub
subl
push
xlat
fsubrs
jl
mov
fisttps
fildl
inc
pop
repnz
cmp
jns
dec
fwait
mov
jno
inc
aas
loop
lret
jnp
daa
mov
adc
cmpsl
cmp
js
popf
sarb
xchg
mov
sub
pop
jmp
xchg
cli
dec
pop
loopne
repz
mov
lds
cmp
mov
xor
rcrb
pop
aad
cmc
sub
xchg
andl
rclb
les
dec
or
adc
shl
jle
std
sub
pop
mov
cli
inc
mov
outsb
int
dec
mov
mov
push
lock
std
push
mov
xor
jecxz
mov
outsl
push
sarl
sub
ljmp
cltd
iret
xchg
and
or
pop
adc
mov
inc
push
loopne
pop
pop
add
roll
push
call
xchg
jle
add
sub
mov
xor
addl
xor
sub
movsl
dec
jne
add
adc
pusha
add
adc
push
shrb
fwait
mov
testb
jns
cmp
inc
pop
or
push
inc
jl
and
repz
inc
jae
cs
add
add
dec
adc
sahf
stc
sbb
mov
mov
push
cld
not
mov
jbe
add
add
add
push
clc
mov
add
add
test
xchg
sbb
jo
pop
adc
pop
outsl
lahf
xorl
test
mov
dec
and
mov
sarl
xor
add
idivl
sub
mov
push
int
adc
mov
fnstenv
bound
or
ljmp
lcall
js
test
jne
adc
or
jb
inc
and
lcall
xor
push
aam
jo
addl
mov
js
xchg
into
mov
sub
add
inc
aad
add
cmp
pop
data16
loope
stos
rolb
nop
aad
pop
inc
pop
popa
lret
mov
mov
jl
xor
jae
xor
and
or
cmp
add
aas
or
fisubrs
or
rorl
out
cmp
jl
test
popa
loope
orb
in
sbb
cmpsl
add
inc
sarb
sti
xor
lcall
and
shrl
jl
xchg
add
dec
add
sbb
adcb
sbb
adc
pop
sub
jb
andl
push
std
sbb
push
leave
push
adc
jl
aam
adc
dec
aaa
sbb
push
insl
jo
clc
roll
divb
imull
gs
aaa
sbb
cmp
inc
mov
jecxz
adc
cmp
aam
mov
imul
jae
jle
cmp
clc
leave
or
aad
test
xor
or
jnp
aaa
jle
fisubl
sbb
mov
push
adc
pop
lcall
popf
and
hlt
cmpsl
push
out
pop
mov
loop
push
mov
ds
jb
outsb
cli
aaa
jne
jg
cmp
out
mov
sub
lock
pop
stos
cmp
leave
lret
pop
push
outsb
mov
mov
jg
sbb
incl
addb
push
pop
xchg
jae
je
mov
out
inc
inc
sbb
lods
xchg
fcmovbe
es
sbb
lds
mov
push
roll
jnp
lock
inc
inc
mov
or
pop
adc
sbb
int
stos
fldt
lea
pop
pop
mov
js
arpl
fildll
pop
loop
mov
sub
add
push
gs
scas
xchg
mov
mov
mov
mov
movsb
mov
pop
or
inc
push
movsl
mov
jle
in
lds
fisubrl
mov
xchg
adc
push
pusha
cmp
ret
jge
movhps
fisubl
lret
jg
dec
enter
inc
repnz
fwait
lock
or
call
int
ret
adc
pop
stos
xor
nop
fidivs
ljmp
mov
incb
pop
push
mov
aas
adc
jns
mov
inc
xchg
loopne
jb
xor
jns
and
addl
das
and
xchg
lods
jl
and
lods
jle
and
xorb
sbb
push
xor
jb
and
je
and
jg
movsl
imul
ljmp
out
xchg
rcrl
jbe
add
add
out
jnp
xor
mov
mov
test
add
or
shl
call
push
aam
push
push
inc
lea
inc
cmpsb
outsl
inc
mov
push
hlt
and
add
lea
mov
mov
or
mov
mov
adc
xchg
sahf
add
mov
xor
sbb
ret
enter
adc
cli
sub
rcll
xlat
inc
cmpsb
loop
test
push
inc
mov
cmp
jnp
mov
loopne
rorb
add
add
mov
dec
loop
push
test
adc
sub
pop
hlt
pop
jno
inc
repz
add
xor
aas
inc
pop
lcall
or
les
xlat
repz
or
filds
repnz
inc
jae
xor
add
mov
xchg
mov
icebp
pop
lds
jae
adc
or
bound
or
adc
cli
or
in
pop
sub
jp
icebp
ficoml
outsb
pop
addb
mov
push
outsb
mov
les
jae
xor
mov
loop
inc
xor
and
test
aam
pop
xchg
popa
xor
mov
lds
xlat
inc
jbe
cltd
xor
or
lods
int3
jl
mov
push
sub
ret
std
xor
inc
adc
xchg
add
int
xlat
fsubrl
cwtl
daa
push
rclb
mov
mov
pop
mov
out
in
jae
mov
repz
in
sbb
push
jne
sub
cmpsl
mov
clc
call
decb
cli
fcomi
add
push
push
push
hlt
and
xor
xchg
aam
mov
sub
mov
inc
sbb
imul
hlt
rolb
aaa
add
and
mov
icebp
pushl
ret
ljmp
movsl
mov
in
addr16
jecxz
inc
mov
mov
lcall
adc
enter
jae
mov
sub
fdiv
adc
mov
jo
fwait
add
int3
add
into
addl
enter
rorl
or
inc
and
loop
cli
addr16
xor
inc
dec
push
sbb
and
mov
int
cs
push
sarl
sarl
or
inc
aad
out
rcrb
movb
in
cmpsb
enter
lods
imul
fadds
nop
adc
shlb
push
mov
fistps
adc
add
das
sub
adc
xchg
or
outsb
pop
les
scas
outsl
lahf
in
subl
in
mov
lea
gs
xor
repz
test
loope
jne
decl
fwait
mov
dec
mov
pusha
shlb
jmp
sarb
adc
dec
sbb
sbb
outsl
inc
hlt
add
or
jmp
cmc
test
fsubrp
adc
mov
cld
inc
add
repz
je
mov
test
mov
push
mov
push
addr16
sub
in
testl
push
std
repz
scas
sbb
add
adc
or
xchg
mov
cmp
pop
dec
mov
push
inc
js
sub
xor
push
adc
inc
sarl
inc
test
rolb
push
mov
adc
adc
jb
adc
call
in
push
pop
js
sbb
sahf
out
cli
and
shll
nop
call
lahf
in
mov
xor
in
sbb
mov
push
test
andb
mov
fnstcw
mov
mov
enter
int
scas
add
push
rcrl
add
idivb
add
push
mov
cmp
cmp
fimuls
mov
ret
mov
das
or
push
in
ljmp
mov
cmp
dec
xchg
or
adc
sub
cmp
adc
or
mov
cmc
in
inc
incb
cmpsl
cmp
jnp
addr16
sbb
daa
inc
mov
dec
outsb
cmc
sarb
add
adc
jnp
jnp
inc
in
cmp
add
rorl
cwtl
sub
and
out
subl
or
or
dec
xor
jmp
mov
movlps
sahf
mov
addr16
or
icebp
or
mov
adc
pop
les
pop
ret
lock
or
lcall
scas
je
add
dec
add
roll
or
push
dec
shll
pop
outsl
push
xor
aam
loope
push
pop
xorl
hlt
mov
inc
push
inc
or
decb
add
fistl
lea
adc
daa
dec
push
arpl
or
push
mov
ljmp
or
incb
and
test
je
xchg
cmp
push
les
add
dec
clc
add
sub
sbb
dec
cmc
inc
adc
jl
push
mov
cmp
adc
dec
xchg
cmp
mov
mov
out
aad
les
test
ljmp
mov
jle
loopne
sti
mov
or
or
cli
push
pop
lret
sub
pop
xor
inc
dec
mov
inc
outsb
push
lods
mov
sbb
push
in
mov
mov
lods
or
inc
sti
mov
xor
xor
sub
lret
push
notb
in
shl
sbb
int3
mov
outsb
ljmp
out
ljmp
fildl
inc
mov
pushf
bsr
cmpsb
add
sbb
in
jge
inc
out
mov
push
cmc
test
daa
mov
inc
jo
inc
outsl
adc
adc
in
pop
outsl
fsubr
fisttps
repz
aam
imul
sub
xor
sub
sub
outsl
sub
add
mov
mov
xor
aad
dec
mov
or
pop
ss
fs
or
je
pusha
loope
push
xchg
inc
or
pop
xchg
cli
outsl
scas
cmc
sub
sub
jp
imul
lret
mov
mov
sbb
in
xchg
clc
jg
pushf
sbb
stos
ficompl
mov
adc
pop
data16
test
addr16
bswap
loop
mov
lahf
cmp
xchg
test
sbb
fsubs
std
push
sbb
add
sbb
push
dec
rcll
push
sbb
push
inc
pop
nop
add
sub
adc
xor
push
cwtl
movsb
xchg
mov
ficoms
aaa
push
pop
rolb
jns
jg
mov
sbb
add
push
xchg
sbb
push
mov
out
clc
sub
ret
jbe
add
incl
add
scas
and
mov
out
jno
pop
bound
xor
lahf
repz
dec
jns
outsl
add
mov
ljmp
mov
ret
icebp
xor
cmp
jb
mov
in
ja
adc
mov
sbb
aad
mov
push
mov
insb
aam
xchg
jnp
xchg
dec
mulb
js
fucomi
add
sbb
mov
test
pop
pop
lcall
and
adc
mov
movsb
movsb
mov
cld
das
dec
test
push
and
clc
sbb
jp
jnp
xchg
jno
jbe
cmpsb
or
aad
fcmovnb
int3
je
inc
lock
add
lret
or
add
test
and
push
jecxz
cmc
mov
idiv
aad
bound
mov
mov
repz
scas
aaa
mov
test
and
xchg
jle
push
icebp
sbb
lret
mov
je
sbb
and
jmp
lods
mov
xor
jg
das
inc
adc
push
pop
cmpsb
add
sbbb
pop
xchg
nop
mov
add
mov
outsl
cmp
lea
sub
mov
jl
sub
push
ljmp
sbb
add
xchg
lods
sbb
fs
orb
test
xlat
icebp
lret
sbb
gs
and
push
sbb
call
into
mov
outsl
xchg
fisttpl
fistpll
rol
fimull
aaa
or
repz
mov
insl
sub
and
icebp
mov
lock
pusha
roll
adc
sahf
xor
sbbb
push
or
mov
test
pop
or
or
mov
aaa
clc
clc
or
lcall
mov
mov
push
stos
or
dec
dec
lcall
push
push
cmp
fld1
or
test
dec
movsl
or
mov
test
inc
ret
and
xor
xchg
fcmovbe
or
push
and
pop
push
gs
nop
push
pop
jbe
loopne
out
or
shrb
popa
repnz
fistps
or
jecxz
int3
pop
nop
jecxz
add
pushl
cmpb
jae
inc
push
imul
mov
lods
adc
testl
stos
adc
ljmp
sub
out
fdivr
add
push
and
mov
insl
call
in
rcrb
lahf
jl
xchg
xor
outsl
neg
mov
aas
icebp
lock
es
and
decl
add
xlat
das
insl
adc
push
in
pop
push
iret
iret
jmp
call
xor
mov
test
clc
push
mov
pop
rol
mov
pop
pusha
mov
lea
or
ret
test
push
mov
orl
lods
cltd
idivl
xchg
adc
push
push
inc
in
data16
cmp
repnz
scas
mov
je
mov
mov
js,pt
cli
or
shrb
adc
mov
sub
ja
xorl
aaa
fimuls
push
pusha
dec
imul
adc
ror
cmp
mov
adc
in
or
xchg
sbbb
or
enter
push
out
sbb
mov
scas
mov
aad
ljmp
enter
mov
xor
inc
sbb
daa
addl
adc
xlat
rorb
dec
mov
loope
inc
inc
mov
out
push
das
push
test
push
gs
stos
scas
adc
shlb
sub
and
inc
fadd
xchg
andb
fmuls
es
iret
adc
pusha
out
dec
enter
jne
aas
jp
repz
xchg
iret
push
in
dec
mov
and
in
mov
mov
pusha
xchg
jb
sub
xchg
test
sub
mov
ja
out
mov
scas
adc
xor
rol
in
cli
pop
jl
pop
push
jmp
add
rol
call
jge
xor
clc
mov
add
pop
fmuls
or
add
rclb
xor
jo
xor
xchg
pop
or
idiv
push
lock
sbb
push
push
xchg
cs
mov
ss
insb
add
add
mov
add
mov
inc
adc
xor
test
mov
jno
std
mov
ficomps
push
ror
out
or
jg
inc
push
mov
jb
imulb
les
and
outsb
std
test
mov
push
movb
sub
fs
cld
dec
or
mov
daa
sub
sbb
and
rol
mov
adcl
mov
or
jle
roll
punpckhdq
fwait
ss
pop
out
sub
mov
fists
sti
addr16
mov
pop
adc
jg
ljmp
insl
mov
jne
mov
cmp
push
cmpsb
dec
popf
fwait
das
filds
and
push
or
test
jmp
and
bound
inc
jl
or
test
imul
das
pusha
lods
mov
addl
outsb
sbb
mov
mov
movsb
xchg
add
popl
push
or
mov
dec
jo
mov
inc
dec
std
sbb
outsl
adc
adc
movsl
dec
fisubs
std
outsl
sub
cwtl
icebp
and
dec
repnz
add
or
or
outsl
sarl
aad
lds
stc
mov
lcall
and
push
leave
lds
cld
mov
xor
sub
inc
jg
addl
cld
outsl
push
sub
mov
xchg
roll
lahf
pop
inc
push
std
lds
and
test
mov
aam
or
fwait
ljmp
sub
popa
and
inc
mov
fistpl
lahf
dec
adc
add
in
test
pop
lcall
insb
adc
lock
mov
mov
lcall
sub
sbb
xchg
fdivs
lahf
decl
jo
cld
pop
push
and
loop
lahf
add
pop
movsb
jne
adc
shrl
inc
inc
int
adc
xor
pop
or
mov
xchg
ljmp
dec
ljmp
lret
rclb
lret
mov
inc
aaa
pushl
jecxz
scas
pop
dec
push
pop
add
mov
adc
in
neg
dec
and
add
jge
rorb
cmp
and
daa
sbb
inc
xor
subl
sbb
lods
push
jg
ss
cmpsl
ds
ret
in
jno
xchg
mov
stos
push
cli
aaa
stos
add
mov
hlt
lahf
push
push
or
xchg
out
test
pop
cltd
inc
and
add
sub
sbb
icebp
nop
add
sar
test
insb
sub
loope
imul
mov
add
jge
adc
test
mov
pop
mov
lcall
or
jne
xchg
pop
loopne
and
in
rcl
jmp
dec
rol
add
aad
mov
in
jne
mov
push
call
ds
xor
push
lods
popl
cmp
lahf
iret
xor
loop
in
jl
je
pop
je
push
add
or
rol
fstpl
mov
test
cwtl
movsl
sub
outsb
mov
out
push
adc
lods
xchg
add
outsb
es
cmpsl
ss
push
addr16
and
cs
pop
jg
enter
jp
js
cmp
mov
sub
sub
cmpsl
fcmovnbe
shlb
dec
cmpsb
loopne
in
pop
pop
mov
push
lahf
insl
stc
push
pop
mov
stos
mov
pop
pop
divl
lds
movsl
orl
xor
pushf
das
into
ss
xchg
xchg
push
push
cmpsb
pusha
jecxz
mov
dec
mov
xchg
ret
sbb
adcb
xchg
arpl
lods
mov
jbe
sbb
sbb
cmpsb
or
aaa
das
sbb
stc
les
fists
loop
les
movsl
lret
cwtl
add
or
fcmovnu
sbb
inc
out
add
xchg
mov
test
xor
or
dec
rcll
ret
add
rol
mov
rorl
or
es
add
mov
adc
subl
sub
mov
roll
xor
inc
rorb
adc
cmp
cli
mov
push
dec
mov
outsb
enter
in
push
adc
out
clc
mov
mov
stos
ficoms
loope
movsb
add
mov
cmp
fwait
xlat
getsec
jo
je
and
jo
pop
loope
jnp
push
mov
mov
push
orl
sbbb
and
jbe
push
cwtl
add
test
lods
sbb
mov
jne
clc
test
cld
and
pop
insl
sbb
jb
decl
pusha
push
popa
push
adc
sbb
inc
lock
movsl
outsl
adc
push
lret
lcall
pop
loope
incl
adc
in
fmuls
mov
xchg
xor
xchg
push
ret
shrl
mov
sub
mov
aam
or
cmp
inc
inc
pop
fisttpll
dec
aad
mov
clc
xor
add
sub
lock
or
popf
sbb
notl
sbb
sahf
mov
and
jl
pop
lods
mov
mov
lcall
or
cmp
sub
pop
mov
cmp
aaa
insb
jo
jae
scas
push
dec
or
lea
add
scas
push
movups
ret
pop
jl
sub
or
jle
cld
iret
out
jmp
popa
pop
cmp
std
mov
jnp
shlb
clc
dec
nop
aam
and
int
cltd
lock
pop
mov
rclb
add
sbb
mov
sarl
pop
jp
sbb
sbb
pop
ficoms
dec
mov
mov
aaa
jae
out
sub
mov
in
xor
mov
mov
rcr
ljmp
xchg
addr16
mov
shrl
mov
adc
xchg
inc
xchg
jno
jbe
add
icebp
sub
shrl
sub
jp
jmp
ret
lock
inc
inc
sub
test
sub
push
xor
mov
mov
dec
cld
test
push
test
cmp
ja
movhlps
nop
jmp
pop
push
fcompl
fcoml
add
pop
sub
push
frstor
sub
imull
mov
pusha
jae
cmp
and
cld
or
pop
sbb
sbb
aaa
adc
mov
aad
cmp
dec
inc
inc
cli
and
sti
movsl
sbb
cmp
inc
xor
lahf
stos
idivl
push
rolb
mov
mov
xor
jge
cmp
add
inc
insl
cld
inc
push
push
mov
dec
cld
aas
ss
inc
shlb
lds
ljmp
inc
push
or
jne
rorl
sbb
sub
fidivrl
add
mov
or
xorb
jo
mov
rcr
in
enter
xchg
pop
xchg
xor
rorl
call
bound
sbb
outsl
pop
push
dec
dec
insl
inc
and
mov
jle
scas
das
jb
int
cmp
pop
adc
and
lock
sbbb
add
in
and
jo
sub
sahf
shrb
add
ret
pusha
orb
imul
pusha
pushf
or
fs
out
in
adc
gs
xor
push
mov
sub
sbb
mov
dec
mov
rorl
xor
lcall
mov
cmp
nop
rclb
mov
add
fwait
push
or
push
clc
out
push
addr16
inc
fstp
stos
out
enter
ret
outsb
cmovno
push
add
pop
mov
push
adc
jo
ja
inc
and
ljmp
adc
test
inc
rcl
cmpsb
pop
imul
jae
mov
jg
stos
lret
adc
sub
stos
fcomps
mov
or
adc
in
shl
movl
xchg
imul
push
or
mov
aaa
adc
gs
scas
icebp
ljmp
cmp
or
add
jp
cld
adc
dec
cld
and
mov
scas
pop
push
xor
sbb
cmp
push
jp
into
test
cmc
loopne
pop
sbb
mov
jno
orb
lods
jp
fimull
bound
call
xor
xchg
sbb
adc
mov
xchg
pop
sbbb
sbb
adc
add
fldl
rorl
or
mov
mul
push
or
jmp
mov
jo
adc
int3
inc
sbb
stos
je
ss
lock
xlat
xchg
inc
int3
lock
sub
pop
inc
int3
sbb
sbb
adc
add
in
add
mov
xchg
jae
imul
lds
addb
fidivrs
sub
lret
lret
mov
add
xor
shll
les
xor
cmp
xchg
mov
and
arpl
pop
push
push
xor
sbb
or
add
lret
icebp
outsl
mov
test
shrl
imull
and
or
leave
mov
inc
js
lret
or
xchg
test
adc
int3
xchg
ret
push
adc
jnp
xchg
and
dec
daa
jne
jge
fimull
test
or
insl
jmp
push
xor
and
cmpsb
cmpsb
test
sub
movsb
sarl
push
sub
int
or
mov
push
sahf
ret
test
mov
insl
rolb
inc
repnz
pushf
loopne
lods
data16
fmull
retw
fwait
cs
add
aam
push
jo
stos
call
shll
mov
popa
sub
mov
sub
cmpsl
inc
addb
mov
aaa
sub
adc
xchg
and
sbb
call
lods
push
mov
ja
shr
jae
sub
xor
jp
outsl
cmp
push
vpsrldq
lock
mov
sub
cld
jp
cltd
scas
xor
cld
add
add
xchg
push
test
xchg
mov
sti
jp
roll
bnd
les
in
loopne
mov
ss
xchg
les
lret
add
or
test
push
adc
pop
cmp
inc
out
sbbb
jae
mov
das
add
fisttps
mov
cmpsl
dec
das
sbb
add
xchg
pmuludq
scas
imulb
jno
aas
xchg
rclb
data16
add
or
pop
and
inc
test
test
mov
jbe
push
push
mov
pmulhw
aaa
sahf
cmp
pop
sbb
cmc
ret
cmp
sub
jno
sub
sbb
stos
mov
call
out
shlb
push
add
jno
push
sbb
inc
mov
dec
mov
int3
shlb
inc
jg
mov
imul
rcrb
bound
lahf
insl
add
or
dec
adc
insb
jbe
in
cmp
insb
negb
sub
xor
mov
or
inc
les
or
cmp
pop
pop
loop
dec
idiv
clc
and
mov
aaa
test
lret
push
dec
call
lods
stos
fwait
mov
cmp
mov
adc
xor
scas
push
test
or
lea
pop
jo
fwait
or
or
dec
inc
pushf
cmp
dec
in
xor
fiadds
cs
mov
stos
adc
inc
js
dec
popa
add
scas
xor
jo
pop
pop
sbb
ss
mov
and
lds
daa
adc
jmp
sbb
add
pushf
int
xchg
ret
cmp
mov
imul
adc
sbb
jo
sbb
inc
out
pop
sbb
jecxz
xor
or
dec
cmc
pop
sub
daa
or
push
xor
nop
add
subl
xchg
push
sub
outsl
pop
sub
add
lret
insl
popa
clc
xchg
xor
ja
nop
or
mov
fidivrl
add
movsb
pop
ret
cs
ljmp
hlt
cwtl
push
sti
inc
in
jle
repz
sbb
push
jne
test
mov
pop
inc
fistpll
in
mov
mov
jb
scas
in
add
test
cmc
mov
neg
shr
pop
mov
test
jne
add
adc
mov
call
mov
add
sti
subb
mov
push
mov
jb
add
lds
jle
filds
add
adc
or
or
out
pop
mov
jg
push
cmp
inc
addr16
lcall
inc
rcrl
jp
or
das
add
cmp
imulb
xlat
aam
popa
arpl
inc
clc
inc
mov
rorb
pusha
sti
test
lret
mov
outsb
pop
and
pop
jg
or
or
pop
daa
add
mov
and
outsl
mov
mov
loopne
add
das
xorb
xchg
fisubrl
scas
pop
xchg
negb
xor
add
or
xchg
inc
test
add
mov
or
adc
inc
add
push
mov
xchg
mov
pusha
add
or
clc
outsl
out
subb
mov
lds
xor
outsl
xchg
cmp
bound
incl
ss
add
mov
lret
ja
orb
dec
add
mov
push
cld
jecxz
mov
or
cmp
mov
add
std
xchg
int3
and
clc
sub
test
add
cmp
add
inc
sti
and
sbb
mov
or
in
xchg
lret
jo
jle
ss
jae
pop
add
pop
cld
mov
pop
push
aam
adc
in
xchg
mov
mov
ficomps
pop
pop
loopne
jmp
inc
dec
pusha
push
add
mov
int
fistpll
mov
std
pop
xor
imul
jl
movl
test
jnp
adc
call
adc
add
sub
inc
add
cmp
outsl
in
or
cmp
mov
shll
adc
repz
dec
or
shll
incl
daa
or
sbb
lods
jns
and
outsl
push
or
pop
sar
lea
pop
cmpsb
lods
scas
addl
mov
dec
aam
mov
jmp
mov
add
fsubrs
sub
popl
int
mov
jno
add
and
aaa
pop
mov
push
add
mov
test
cmpb
xor
jne
lret
in
mov
repnz
arpl
in
xchg
shll
mov
inc
pop
jle
sub
mov
xor
xchg
sub
push
sbb
jle
add
scas
jno
add
inc
mov
sbb
ljmp
add
inc
adc
std
jg
add
inc
cmp
aad
inc
rol
push
imul
mov
push
sbb
sub
and
add
xchg
jle
test
in
test
pop
xor
loope,pn
fildll
mov
and
js
jns
add
jne
imul
rcr
rolb
pop
mov
mov
call
jbe
push
or
repz
mov
push
push
xlat
inc
cmp
aaa
jbe
xor
je
inc
or
imul
fcoml
js
sahf
xchg
push
loop
and
cmc
repz
fwait
lcall
adc
add
sbb
cwtl
jb
clc
inc
lds
nop
sbb
adcb
pushf
or
mov
or
inc
or
orl
pop
les
xchg
pop
add
shl
scas
clc
dec
pop
jo
dec
inc
sbb
or
pop
sbb
es
jg
daa
mov
cmp
add
and
lret
pusha
out
aaa
incl
inc
ds
out
add
inc
lock
jns
inc
fbld
push
pop
xchg
pop
mov
inc
pop
leave
pusha
mov
xchg
sub
add
orl
cltd
out
scas
pop
push
cmpsl
cmp
xor
cmp
sbb
mov
sub
or
mov
mov
add
adc
add
enter
add
shlb
adc
fnstenv
xchg
mov
xor
orl
cld
mov
pop
dec
bound
cmpsl
push
icebp
sbb
std
cmp
xchg
imul
jge
xchg
or
cmpsb
stc
adc
inc
add
fidivrs
adcb
cmp
pop
adc
sbbb
fwait
adc
icebp
inc
mov
add
inc
push
push
nop
push
in
jns
dec
sbb
fldl
dec
mov
lds
and
inc
and
and
jo
movsl
daa
lods
std
test
mov
out
add
and
int3
and
cmp
push
sub
ret
xor
lret
daa
cmc
and
repnz
xchg
xor
stos
psubb
and
xor
xlat
or
add
mov
scas
jl
or
movsb
xor
mov
xor
sub
or
popa
enter
jmp
ljmp
sub
push
outsb
call
lea
lahf
aam
call
mov
fsubs
loope
rolb
fmull
ret
push
outsl
or
jo
lret
adc
lret
call
pop
movb
mov
xor
notb
sahf
dec
js
es
pop
or
out
je
pop
inc
int3
mov
or
or
sbb
add
das
cli
adc
ja
test
ja
cmp
popa
addb
inc
rorl
addl
aam
add
cltd
inc
sub
mov
jo
adc
and
aam
test
outsl
in
cmc
data16
lcall
es
pop
ljmp
cmp
arpl
out
rcr
pop
and
xchg
fdivl
in
and
adc
call
dec
and
dec
cmp
pop
sbb
adc
cmp
shrl
dec
lds
mov
dec
jge
add
add
mov
enter
and
pop
push
int3
dec
insl
cld
arpl
sub
xor
inc
add
or
mov
add
xlat
pop
mov
cli
in
push
lahf
dec
xchg
cwtl
enter
mov
inc
inc
inc
enter
xchg
bsf
dec
das
mov
push
sbb
xor
ss
test
sti
lret
addb
rorl
cwtl
or
scas
xor
int3
adc
insb
push
test
or
lea
rorb
das
aam
xor
aam
inc
jae
push
pop
cmpl
std
mov
xchg
mov
cmp
in
or
test
add
add
or
sbb
inc
fwait
in
adc
rcll
sahf
add
mov
lods
cmp
lcall
mov
ret
shll
test
popf
adc
popa
sub
push
into
rcrl
or
push
sbb
push
sub
fsubs
fsubr
pop
and
out
cwtl
idivb
push
xchg
sbb
adc
sbb
jnp
fistpl
xorl
les
cltd
dec
mov
mov
xor
je
xchg
cmp
mov
insl
ljmp
test
out
mov
cmp
ja
dec
aam
inc
jnp
negl
dec
sbb
xchg
iret
jne
pop
lahf
into
mov
cld
adc
or
cmovno
xchg
mov
and
inc
sbb
arpl
addr16
incl
mov
xor
test
sub
add
inc
shlb
dec
sbb
mov
in
mov
movsb
in
dec
testl
push
rclb
enter
fdivs
fistl
mov
loope
push
inc
push
sub
je
jns
scas
push
hlt
push
ljmp
fs
jo
shlb
faddp
pop
in
mov
xchg
xor
and
outsl
inc
in
jmp
in
bound
in
or
shr
fildl
sarl
js
and
adc
ficomps
adc
test
and
add
pop
insb
push
movsl
mov
or
leave
jg
out
mov
in
mov
lds
loopne
sbb
in
xor
jo
and
call
and
add
test
push
frstor
mov
adc
or
cmc
push
outsl
js
jmp
jle
ret
and
add
push
adc
insl
je
mov
push
mov
fdivr
xchg
push
push
inc
xchg
pop
add
adc
ret
inc
sub
or
push
stos
jge
fsubs
les
push
shlb
outsb
add
sbb
inc
xrelease
mov
pminub
and
xor
xor
iret
adc
loop
addr16
inc
lods
lds
inc
adc
fwait
mov
adc
xor
push
pop
clc
outsl
mov
jae
and
rcrl
sbb
std
pop
popf
jmp
inc
pop
adc
fidivrs
loope
stos
fwait
pushf
je
add
xor
leave
mov
inc
ss
lock
cmc
fmull
adc
or
fistl
cmp
xor
cs
loope
fistpl
xchg
mov
sub
adc
mov
add
xchg
rcr
pop
clc
add
or
inc
add
inc
out
inc
xchg
sbb
cmp
out
push
or
sti
pop
sbb
pop
adc
pop
rcl
mov
mov
mov
or
iret
dec
or
push
mov
sub
fists
inc
sbb
shl
pop
js
fisttpll
push
scas
push
roll
jo
xor
out
cmpsl
jns
xchg
ss
out
mov
mov
sbb
insl
or
ja
adc
xor
les
out
inc
mov
push
imul
jecxz
push
repz
inc
adc
movsb
mov
fstpt
and
sbb
rcr
in
push
lcall
aad
stos
popf
add
add
mov
leave
pop
shr
xlat
pop
test
xchg
fucomip
cmp
lods
or
jns
inc
inc
aaa
sub
loope
int3
dec
mov
das
add
push
adc
add
test
inc
inc
stc
insl
sahf
cmp
and
or
rcrb
and
fisttpl
and
cmp
jg
inc
xor
mov
pop
in
addr16
push
or
cmp
or
adc
sub
mov
in
or
adc
arpl
jae
pushl
sti
mov
sbb
movsb
imul
adc
sbb
xchg
lret
pop
fcmovnb
mov
es
fldt
cld
xchg
jge
push
loopne
xor
jle
lock
jmp
ret
stos
pop
sub
testl
subb
cmp
testb
adc
inc
add
adc
call
sub
scas
aaa
rcrl
nop
mov
push
sti
add
sahf
xor
and
jecxz
mov
jne
xchg
adc
pop
mov
mov
shll
inc
popf
sub
dec
int
jge
arpl
pop
decl
leave
sub
xor
inc
cmpsl
outsb
jns
jmp
outsb
cli
pop
out
pop
fstps
lock
mov
jmp
fs
aaa
push
pop
jne
fs
rcl
jle
cmpb
lahf
xchg
mov
lods
lea
pop
sub
out
leave
push
mov
loop
inc
pop
mov
ret
xchg
or
pop
mov
mov
sub
mov
inc
insl
insb
pop
and
jne
adc
dec
jecxz
daa
std
enter
imul
inc
push
mov
imul
ljmp
sbb
cmp
lcallw
lods
mov
inc
pushf
popa
stos
flds
jo
ret
dec
lods
pop
shll
loope
cltd
imul
inc
jne
or
mov
gs
add
adc
add
mov
pop
aad
das
inc
out
jl
aas
add
ds
sbb
sbb
insl
sahf
jne
arpl
out
mov
loop
mov
sarl
imul
jbe
nop
call
nop
mov
mov
xchg
add
mov
roll
popa
lock
adc
ret
loopne
aad
pop
xchg
out
lcall
addl
mov
out
pop
imul
jns
xor
pop
je
push
xor
mov
lods
jno
stos
call
jl
clc
testb
push
inc
jne
insl
mov
fmuls
push
and
push
inc
lea
outsl
xchg
cmp
push
sub
sub
or
iret
push
pop
jge
rol
sbb
mov
sub
xchg
jnp
cltd
cmp
dec
mov
loope
pop
mov
lock
push
cmp
clc
sarl
add
sbb
pop
mov
push
mov
test
xorb
mov
testl
in
ss
test
add
push
cmpsl
shll
scas
std
and
int3
jmp
push
out
pop
cld
sbb
inc
mov
fmull
outsb
pop
mov
push
push
inc
ljmp
mov
shrb
shlb
inc
outsb
pop
icebp
add
hlt
sub
call
mov
and
xor
and
add
test
dec
xor
fistps
or
stos
add
and
inc
out
jb
ja
xorb
lret
clc
ljmp
shll
inc
mov
cs
inc
cld
mov
sysret
jne
cmp
insl
out
jl
push
adc
jmp
xor
add
vmaxsd
out
jb
adc
jecxz
jbe
jbe
mov
ljmp
pop
fistl
subb
mov
pop
mul
add
push
mov
push
mov
mov
add
andb
int
mov
inc
psrlw
push
repz
movsb
xorb
daa
stos
mov
lret
test
xor
movsl
jle
and
test
xchg
xor
cltd
sub
mov
jle
stos
adc
clc
daa
or
jmp
cld
lret
movsb
push
push
sbb
test
inc
add
aad
or
dec
scas
sahf
push
add
inc
add
cmp
and
push
data16
push
pusha
negb
xchg
mov
xor
sbb
xchg
cmp
stos
pop
lock
test
movl
adc
mov
adc
pop
or
out
adc
dec
inc
in
xor
or
pop
xchg
clc
inc
xchg
test
mov
adc
cmc
add
mov
adc
clc
fimull
jl
push
aad
xchg
inc
jno
and
jl
sub
add
cmp
push
pop
loopne
lds
pop
inc
rclb
push
and
out
vcomisd
or
mov
dec
icebp
adc
nop
push
jbe
xor
sbb
inc
shlb
mov
call
inc
pop
pop
cmp
jl
and
push
lcall
xorl
dec
push
cmp
rcr
loope
add
jmp
je
or
gs
cmc
movzwl
sub
dec
jecxz
push
pushf
xchg
push
pop
jg
lods
sarb
loopne
test
sarb
fwait
aam
xor
clc
das
mov
inc
sub
loope
lret
popf
cltd
lods
sub
shrb
notl
std
jg
inc
add
add
xor
aas
jne
sub
fs
sbb
fs
arpl
js
fmulp
push
gs
aas
mov
jge
mov
pop
insb
lods
std
and
inc
jg
cmc
push
push
in
arpl
lods
add
push
daa
add
sub
pop
ljmp
fdivrs
fdivrs
xor
jo
rcrb
push
jnp
jle
or
cmp
jne,pt
aaa
push
push
daa
sti
and
mov
scas
test
jnp
sbb
sub
imul
adc
mov
add
ljmp
lcall
roll
mov
xchg
sbb
dec
cld
imul
shl
pop
jge
test
jae
in
loope
or
sub
mov
mov
jb
adc
pusha
pop
sub
aas
add
fcmovnu
ss
sub
int3
xchg
jg
jmp
push
scas
jnp
bound
jg
jae
mov
push
mov
mov
movsl
ret
icebp
test
sbb
aad
pop
adc
mov
out
in
mov
add
sti
inc
arpl
rep
adc
cmc
push
das
mov
xchg
fwait
adc
cmp
fdivr
stos
in
les
cs
sub
mov
pop
pop
in
xchg
add
push
stos
xor
int3
push
mov
jg
push
mov
xor
mull
stos
mov
fs
decl
aaa
jnp
outsl
push
dec
adc
icebp
dec
dec
lods
lock
add
mov
sbb
rep
call
xor
pushl
sahf
and
push
adc
sahf
adc
es
mov
fs
negb
ds
push
insb
outsl
jne
cld
fimuls
or
lret
into
inc
xchg
lret
imul
popa
loop
das
add
mov
orl
pop
insl
push
xchg
pop
pop
aaa
adc
fistpll
pop
pop
sbb
ret
xchg
mov
incl
dec
or
movsb
mov
cmpsb
mov
mov
sub
mov
mov
inc
xor
sahf
inc
call
and
shll
cmp
in
leave
test
pusha
out
mov
sbb
outsl
in
cltd
adc
add
loop
xchg
push
push
push
rcr
mov
jbe
mov
shrb
clc
xchg
or
mov
inc
dec
xor
call
mov
xor
add
daa
xor
jbe
clc
jno
insl
sti
pop
jne
movsl
push
push
push
icebp
imul
xor
xor
loop
and
movsb
mov
mov
imul
outsb
cld
sbb
fcmovbe
sbb
daa
popf
int3
pushf
sbb
sub
pop
and
fmull
bound
xorl
push
push
std
ljmp
mov
cmpsl
mov
dec
loopne
pusha
xchg
sub
or
mov
repnz
flds
sbb
inc
jl
ja
sti
sarb
cmp
shlb
rorb
pop
roll
push
ds
testl
pushf
jno
in
in
fsubl
push
in
rorl
out
lea
jecxz
and
xor
lock
or
pop
data16
inc
add
insl
and
les
popa
add
mov
and
mov
cld
cld
clc
mov
sub
les
push
sub
inc
add
mov
mov
sub
adc
push
mov
jmp
add
mov
cmp
inc
and
in
fbstp
dec
adc
pop
add
pop
pop
or
and
or
mov
dec
js
add
or
popa
call
and
lds
xchg
cmpsl
sbb
cmp
xor
shl
jo
inc
cltd
dec
inc
das
add
insl
sbb
add
pop
adc
pusha
add
in
dec
mov
add
add
rol
mov
mov
add
mov
dec
int3
lds
stos
jge
cwtl
cltd
adc
push
popf
push
adc
loopne,pt
imul
orb
inc
loop,pt
or
insl
mov
loopne
add
add
sub
movsl
fnstenv
or
xor
cmp
lret
int3
adc
inc
out
out
dec
add
cwtl
loopne
jb
dec
sub
or
int3
lret
add
sbbl
push
out
test
popa
nop
cmp
jne
jo
jo
outsl
adc
mov
icebp
push
pop
push
inc
insl
cli
loopne
scas
addb
push
push
ret
xchg
mov
jnp
add
push
mov
test
cmp
cmp
loopne
add
add
add
push
lods
das
adc
push
add
loop
add
in
inc
mov
push
mov
pop
add
or
outsl
inc
fcompl
adc
push
jmp
inc
jae
push
test
shr
mov
mov
lcall
adc
jae
xchg
fucomip
cmpb
sbb
or
jo
test
ljmp
mov
in
pop
aaa
outsl
aad
pop
mov
pop
lcall
scas
dec
arpl
ds
xor
stos
daa
stos
test
mov
adc
mov
add
lahf
andl
repz
jg
enter
xchg
jl
sub
das
inc
mov
and
and
xlat
dec
mov
lcall
xor
jmp
dec
lds
incl
jae
push
loope
xor
inc
les
adc
jg
subl
pop
inc
add
sbb
or
mov
adc
dec
movsb
push
ljmp
movb
cmc
pop
gs
loopne
sub
mov
test
and
decb
js
jmp
lock
outsl
fs
testb
arpl
push
ljmp
sub
pop
cmp
mov
inc
lods
test
mov
add
mov
pop
inc
pop
push
or
data16
in
add
sub
mov
sbb
filds
mov
xchg
mov
pop
lcall
push
push
add
inc
add
and
sub
and
test
ss
div
cmpsb
dec
xor
shll
out
and
dec
and
cmp
jns
cmp
add
shlb
xchg
imul
fnsave
lods
jecxz
in
fisttpl
dec
mov
js
mov
adc
dec
add
movsb
add
mov
call
movb
xchg
repnz
movsl
fwait
clc
bound
mov
stos
push
sub
inc
jmp
outsl
rorl
cmp
cmp
scas
xchg
dec
sub
cmp
cmpsl
sub
xchg
add
fstl
mov
fdivl
loope
loope
jb
sbb
sbb
or
insb
in
or
mov
icebp
xlat
icebp
daa
stos
pop
mov
adc
out
jge
push
inc
inc
pop
and
fsubs
mov
inc
hlt
or
push
push
push
aad
mov
add
arpl
mov
mov
add
mov
es
arpl
in
pop
sub
and
dec
jecxz
neg
sub
hlt
mov
inc
mov
sbbb
and
jbe
ss
mov
stos
fisttpl
in
ret
mov
or
test
jmp
lds
adc
inc
cmc
push
and
fucomip
dec
mov
jnp
or
sahf
and
and
out
jne
lods
mov
xchg
dec
mov
orl
out
add
fwait
clc
movsl
mov
and
insl
icebp
in
mov
dec
jno
and
or
jno
rol
lahf
insl
push
sbb
outsl
jae
lret
fmuls
iret
xor
ljmp
je
mov
sub
pop
xchg
pop
loop
fnstcw
pop
sbbb
and
mov
adc
xchg
clc
adc
dec
inc
xchg
adc
cli
xor
aad
inc
bound
je
mov
mov
sbb
push
jb
and
imul
sbb
test
mov
mov
dec
pop
mov
or
xchg
scas
pop
jmp
jecxz
sub
arpl
cmpsb
jns
fadds
jnp
cli
inc
fwait
lds
jg
mov
sahf
sarl
ret
sub
call
push
fisttpll
scas
loope
das
jmp
mov
adc
add
dec
add
in
fbstp
jle
cmp
shl
stc
cmove
xor
jg
mov
aaa
or
popf
adcl
rcll
mov
scas
scas
or
stc
push
fisubrl
jle
scas
mov
ret
out
lock
vpsubw
push
outsl
cld
movsl
outsl
push
rcrl
xor
clc
xor
in
decl
sbb
mov
xchg
inc
incl
ret
adc
add
pushf
pop
xchg
inc
add
dec
jno
daa
or
mov
cmp
mov
outsb
xor
mov
call
xor
xor
sub
mov
imul
loope
je
adc
jns
xor
cmp
scas
mov
add
notb
push
or
inc
jne
and
adc
jbe
mov
cmp
ljmp
sub
psrad
cli
fistl
mov
pop
and
ret
mov
add
jno
adc
jge
jne
xchg
incl
enter
and
cmp
lock
sub
in
insl
mov
inc
jmp
in
aam
aas
in
mov
call
ja
pop
add
loop
xchg
lock
mov
je
lock
sub
inc
iret
push
clc
mov
roll
inc
sbb
cli
decl
push
cmp
sarl
jmp
rolb
cltd
test
es
out
push
xchg
push
ljmp
sbb
jne
adc
sub
lcall
sbb
push
or
fwait
mov
movsl
adc
inc
int3
and
fstps
roll
std
fisttps
dec
jmp
xor
pop
outsb
adc
mov
and
cmp
js
scas
test
mov
pop
push
xor
fiadds
or
fcmovnb
push
adc
sub
cmp
adc
mov
rorb
fdivl
jp
inc
movsl
loop
adc
repnz
pushf
xor
bound
xchg
sub
out
add
clc
push
mov
filds
mov
or
jecxz
push
inc
notb
mov
loope
into
cli
jp
call
shll
add
int3
lods
add
push
xlat
or
push
shll
loop
arpl
cld
pop
mov
sbb
cmp
sub
push
adc
hlt
dec
pop
leave
addb
out
pop
xor
push
mov
and
cwtl
push
inc
jae
xor
bound
jbe
add
out
insl
in
rorb
jbe
mov
and
pop
std
testl
mov
pop
mov
pusha
daa
int3
xor
jle
ret
sub
stos
flds
dec
orl
insl
mov
or
xor
cs
mov
dec
lea
test
add
inc
call
cmp
cs
pop
push
dec
push
shrb
fwait
add
sbb
mov
xor
ret
in
imul
xor
andb
push
or
push
inc
hlt
mov
flds
add
sub
test
cmp
into
inc
adc
fildl
mov
mov
jmp
in
jae
int
movb
sbb
rorb
sub
xchg
es
mov
cmpl
mov
sub
sbb
dec
in
and
mov
lret
add
fidivrl
cmp
mov
dec
testl
leave
or
dec
mov
jl
xchg
out
mull
aaa
lods
inc
clc
jmp
add
mov
movsb
in
adc
mov
leave
add
add
lods
mov
arpl
cmp
movb
gs
repnz
sbb
fwait
xor
shrb
xchg
and
repnz
test
push
lods
jl
std
outsb
inc
cmp
push
mov
xor
sbbb
outsb
or
shr
pop
imul
gs
inc
dec
repz
xor
mov
add
pushl
rol
sub
xchg
add
add
loopne
mov
jge
imul
jle
add
roll
jmp
mov
xchg
dec
mov
dec
dec
mov
sbb
mov
mov
pop
mov
sti
sbb
xchg
cmpsb
jle
adc
inc
std
ja
sub
xor
imul
inc
xor
mov
adc
test
lret
jae
push
sbb
push
call
pop
test
fadds
and
mov
rcrb
aam
call
cmp
adc
pop
fldt
xor
inc
mov
jbe
and
mov
or
cltd
lods
cld
jg
inc
mov
ljmp
xor
inc
dec
mov
or
xchg
push
loope
jne
add
outsl
jo
je
je
in
scas
cmpsl
es
push
fcmovnbe
sbb
xor
test
sub
xor
cmp
gs
push
jecxz
or
mov
nop
mov
ficomps
cmpsl
mov
mov
mov
sub
mov
or
adc
inc
loope
sbb
and
dec
clc
mov
out
jb
add
loop
je
mov
and
lods
add
je
mov
xor
fistl
lock
insl
inc
hlt
mov
dec
cmpsl
movsb
cmpsb
out
add
pushf
and
clc
addl
insb
stos
fidivrs
into
xor
into
dec
and
test
mov
lods
push
dec
dec
push
adcb
adc
or
pop
sarl
hlt
push
xchg
clc
lea
ficoms
call
or
notl
idiv
push
fwait
ret
pop
adc
adc
lea
hlt
ficompl
adc
stos
xor
lods
bound
mov
dec
adc
xchg
lods
repnz
aaa
xor
sbb
push
add
fcomp
adc
pop
mov
and
adc
repnz
add
addb
adc
mov
mov
lods
test
cmp
xchg
in
dec
cmc
call
outsb
int3
ja
sarb
pop
test
iret
jmp
adc
jae
adc
dec
cmp
out
add
xchg
jb
push
mov
push
xchg
popf
jl,pn
adc
loopne
sahf
pop
mov
in
cmp
mov
das
xor
icebp
dec
jo
push
lahf
es
cwtl
or
lds
xchg
and
dec
cld
adc
mov
in
shll
add
insb
jl
outsb
mov
sbb
js
mov
add
outsl
xchg
cmp
and
mov
movsb
push
xchg
icebp
dec
test
test
pop
inc
pop
push
or
pop
popf
cmp
inc
imul
jne
push
mov
leave
rorb
sti
inc
icebp
mov
jge
push
inc
add
sbb
inc
inc
jecxz
cmp
mov
or
imul
decl
xor
xchg
sbb
js
popa
and
andb
push
pop
mov
int3
lahf
mov
cmpsb
sbb
sbb
stos
pop
dec
aas
add
call
cmp
and
adc
les
mov
or
fiadds
lea
and
ljmp
adc
sub
dec
aas
sbb
lods
jne
push
inc
idivl
sub
int
lock
mov
ja
fildl
aad
jg
xchg
mov
fcmovnb
test
test
xchg
push
test
es
je
enter
push
adc
sub
xor
add
xor
cmpsl
lods
adc
call
jmp
pop
jp
sbb
hlt
xor
push
xor
jmp
outsl
mov
jle
dec
dec
mov
pop
cld
inc
xchg
xor
rolb
push
data16
mov
push
push
push
mov
adc
call
call
pop
mov
int3
inc
mov
fisubl
shlb
pop
mov
mov
lods
jo
shll
loop
jb
imul
pop
iret
mov
int3
adc
out
dec
nop
jg
enter
adcl
jge
sbb
mov
bound
or
lock
cmp
mov
xchg
mov
jnp
dec
jg
xchg
sbb
mov
ja
pop
idivb
push
and
shrb
cmp
add
dec
scas
inc
xor
and
mov
or
aad
pop
jb
je
jo
ret
scas
test
fs
mov
mov
mov
add
cmp
mov
mov
mov
adc
adc
pusha
mov
call
ja
inc
jmp
std
lret
loopne
add
jbe
call
inc
scas
push
movsb
js
dec
add
rcrl
mov
es
push
stos
outsl
xchg
movsl
mov
add
or
popa
push
push
push
pop
or
lcall
jb
fcomps
push
cmpsl
mov
or
or
push
lock
shll
popa
mov
dec
mov
inc
xchg
in
sbbl
sub
ljmp
pop
push
mov
aaa
shr
jg
xchg
loop
mov
mov
aaa
jl
or
and
dec
shrb
test
mov
and
sub
xchg
inc
xchg
pop
xchg
jmp
pop
adc
cmpsb
rcr
bound
test
pop
pop
inc
mov
mov
testb
xchg
loop
cmp
cld
inc
lods
jmp
lahf
in
mov
sti
jno
repz
ljmp
fisubrl
push
jno
jmp
xchg
and
add
or
aam
imul
cltd
jo
jecxz
mov
add
je
ret
scas
stos
jb
mov
repz
adcb
out
push
mov
idivl
shll
xor
pop
shrl
clc
int3
call
sub
inc
xchg
mov
mov
lahf
dec
adc
sbb
inc
popa
and
and
and
adc
rclb
push
cmp
dec
in
xor
push
pushf
fs
adc
xchg
js
inc
dec
cmpsb
cmc
imul
repz
fildl
cwtl
aaa
cmpb
dec
push
inc
mov
add
dec
push
stos
pop
ror
and
loop
data16
cld
mov
add
fisttps
mov
addr16
lret
cmpsb
sub
adc
xor
xlat
sub
test
leavew
push
sbb
bound
add
in
test
popf
mov
sbb
mov
xchg
inc
jbe
or
clc
popa
cmpsb
push
and
popl
cli
xchg
mov
testb
or
dec
sub
aad
sub
jp
loop
mov
enter
add
xchg
stos
or
call
loopne
inc
rcll
push
xchg
mov
or
cmp
fiaddl
movsl
icebp
push
cli
jge
jg
pop
add
jp
mov
shrl
cmc
push
fwait
aad
leave
mov
daa
stos
push
xor
mov
adc
adc
pop
clc
dec
push
push
jecxz
enter
popl
lock
jnp
or
pop
mov
xor
push
sbb
sub
js
fs
cli
test
inc
aas
test
pop
lea
xor
iret
nop
repz
xor
adcb
sbb
sub
adc
fimuls
or
adc
sar
or
je
inc
iret
or
addb
jb
adcl
add
mov
mov
mov
cmp
adc
out
mov
notb
jae
cmp
or
jecxz
icebp
push
mov
and
mov
mov
or
add
cs
lea
inc
into
pop
adc
mov
rclb
sbb
pop
sub
add
mov
aaa
mov
sti
mov
xchg
mov
cld
lret
leave
add
lds
or
aam
movb
or
jno
mov
sub
push
hlt
ljmp
cs
jno
add
adc
xor
adc
adcb
cmp
dec
mov
xchg
decl
xchg
lcall
sbb
jne
mov
out
arpl
sbb
push
cld
fdivl
push
xor
ret
mov
data16
pop
sahf
repz
mov
int3
xchg
int3
cwtl
fwait
aad
cmp
add
mov
xlat
out
push
lock
lock
and
inc
or
lea
pop
add
dec
sub
rcl
push
pop
jb
xchg
xor
scas
mov
in
pop
test
add
add
repnz
dec
mov
fcoms
int
repnz
scas
aas
cmp
dec
or
out
push
sub
cs
add
bound
adc
sarl
dec
jbe
cmpsl
inc
ss
repnz
mov
sub
xor
xor
shl
ror
xor
mov
lds
dec
sbb
repz
ret
push
jg
push
dec
rcrl
roll
pop
mov
xor
test
jle
and
test
mov
xor
push
dec
aaa
adc
cmp
inc
cmpsl
lods
test
addl
push
push
mov
sbb
pop
mov
jp
and
push
xor
or
pop
aas
cmp
inc
lds
loope
subl
repz
pop
call
jb
fwait
dec
movsb
xor
mov
mov
dec
mov
in
mov
inc
xor
mov
lret
xchg
mov
ljmp
adc
xchg
add
adc
aad
mov
xchg
push
xchg
sarb
out
fsubs
sbbb
cmp
cmc
in
fistl
pop
or
mov
pop
call
mov
dec
imul
mov
sbb
push
cld
cmp
pusha
in
and
push
mov
jle
push
stos
jno
mov
sti
call
in
fsubrs
xor
clc
loop,pn
adc
pusha
mov
jl
mov
mov
scas
push
gs
xchg
or
les
popf
nop
mov
push
or
push
jg
cmp
fdivr
decl
jecxz
fbld
ret
mov
xchg
mov
insl
add
and
notb
cli
mov
jecxz
dec
cmp
mov
pop
rol
cmpsl
in
dec
or
xorl
pop
call
lods
popa
sub
lcall
push
ret
mov
rcr
inc
cmp
and
adc
jle
or
mov
add
sub
jbe
push
jmp
jo
inc
mov
adc
adc
in
out
and
adc
jno
scas
sub
or
xchg
inc
and
shlb
arpl
mov
inc
jnp
sbbb
inc
test
test
pop
out
mov
lcall
ret
mov
xchg
popf
push
loope
or
or
outsl
enter
mov
sbb
mov
mov
je
or
mov
add
pop
sar
xor
pusha
adc
mov
and
adc
dec
xchg
dec
dec
and
pusha
inc
cmp
js
or
mov
push
mov
pop
add
call
nop
mov
sbb
xor
or
pop
inc
lock
sub
and
mov
and
ret
test
arpl
or
add
or
xchg
les
and
pop
or
mov
or
xor
mov
jbe
repz
mov
add
and
fbld
rorb
clc
inc
fstps
cmp
rorb
aam
scas
dec
pop
sub
inc
scas
add
adc
inc
test
lock
insb
push
test
ficomps
and
loop
bound
mov
jmp
xor
int
rcll
icebp
inc
int3
daa
inc
cmp
adc
and
sbb
xchg
add
xor
rcll
xlat
pop
adc
dec
mov
enter
icebp
lods
popf
inc
sub
pop
or
dec
xor
mov
sbb
inc
push
jo
test
push
lock
sbb
test
sbbb
lret
div
inc
loop
or
add
push
push
push
adc
not
fistpl
add
sub
xor
mov
pusha
ret
pop
push
mov
out
sub
mull
sbb
test
mov
jnp
ja
mov
add
add
pop
repnz
test
xchg
and
icebp
cmp
jmp
pop
fnstsw
fldl
jge
jecxz
scas
fisttps
in
cmp
sbb
clc
les
call
mov
pop
mov
mov
push
inc
sbb
test
cmc
adc
xor
movsb
pushf
nop
and
cli
mov
js
sbb
xor
push
inc
shr
mov
test
pusha
fmuls
or
and
adc
jg
push
ja
add
dec
lock
add
out
sti
outsl
mov
mov
dec
jne
pop
iret
rcll
or
nop
outsb
sbb
push
in
fldt
movsb
mov
inc
js
outsb
insl
gs
fwait
push
or
add
xchg
inc
bound
add
mov
pop
fidivrl
cmp
mov
je
mov
movsb
sbb
lret
add
sarb
adc
mov
and
test
lods
inc
roll
jl
add
movsb
flds
inc
jle
ja
sbb
push
mov
rsqrtps
popa
gs
fdivp
out
call
loopne
andb
mov
insb
loope
or
test
pop
cmp
mov
xchg
lea
icebp
es
jne
movsl
rorb
dec
stc
in
add
fmuls
scas
loope
mov
adc
mov
xor
add
bound
mov
cmp
cld
test
inc
enter
add
pop
pop
outsb
mov
adc
jmp
ja
sarl
rcrb
jle
cmp
xorl
mov
pushl
or
mov
pop
inc
inc
cmc
fs
adc
into
mov
pop
push
add
pop
adc
sub
add
and
add
mov
fs
les
mov
fistps
add
cld
and
sub
popf
add
dec
add
cmp
add
addb
popa
pusha
push
xchg
movsb
into
repz
cmp
dec
jp
int3
adc
test
pop
xor
sbbb
data16
out
insl
inc
outsb
adc
jecxz
xchg
cmp
fisubrs
data16
push
push
adc
add
jnp
cld
in
sbb
mov
dec
add
out
cmp
int
std
in
aaa
jns
shl
mov
incl
aaa
addr16
inc
xor
mov
fimuls
mov
fmulp
add
adc
repnz
sahf
mov
pop
cmp
fildll
jl
dec
add
in
call
add
mov
xor
dec
xor
adc
mov
pop
mov
xchg
xor
inc
mov
jo
lcall
xor
xchg
std
adc
sbb
pop
shlb
or
js
dec
decb
jl
inc
adc
sarb
cwtl
jl
fiadds
and
sbb
dec
and
add
sub
dec
adc
or
jge
insb
lcall
cmp
fmuls
out
out
ret
leave
pop
into
pusha
xor
movsb
shrl
test
imul
test
add
fwait
cmp
sub
imul
scas
mov
loopne
mov
popa
fdivl
rcrl
inc
xor
pop
jge
add
xor
pusha
data16
mov
sbb
leave
add
in
cmp
dec
cmp
ret
bound
sub
xor
in
aas
or
cwtl
jecxz
out
or
sbbl
or
dec
dec
add
fs
jmp
popa
movsb
pop
out
frstor
and
ret
mov
popf
push
mov
insb
or
out
cltd
xchg
cmpsl
addb
jmp
inc
test
push
pop
loopne
stos
or
dec
xor
inc
test
push
mov
xchg
enter
into
mov
fdivrs
movsl
ljmp
pushf
and
mov
pop
sbb
jl
js
mov
int
mov
loop
add
mov
shll
and
loop
and
mov
popf
push
je
jo
shrb
add
subl
dec
sub
loope
adc
sbb
adc
push
or
ds
jno
inc
sub
mov
dec
aam
adc
js
pop
or
fistpll
enter
xor
out
push
nop
enter
subb
rcrb
daa
leave
mov
inc
cld
insl
inc
inc
daa
xchg
out
int
add
fadds
nop
jno
jne
pop
ljmp
in
jbe
pop
and
ds
clc
out
mov
adc
jl
and
xchg
popl
daa
push
notb
aaa
or
pop
pop
mov
add
movsl
mov
xor
sbb
pop
adcb
arpl
pop
push
or
sarb
pop
ss
test
shr
jge
imul
xor
movzbl
je
out
add
jbe
shr
push
inc
pop
xor
cld
add
pop
gs
hlt
sub
and
add
stc
cltd
and
aaa
sbbb
xor
cwtl
adc
loop
mov
push
rcrl
leave
addr16
xor
andl
push
les
adc
jle
loopne
popa
xchg
loopne
std
cltd
add
test
push
bndldx
push
jg
cmp
mov
test
mov
popf
sbb
adc
stos
loope
inc
xchg
sbb
mov
push
adc
test
sub
jbe
mov
push
xchg
add
cld
sbb
fstpt
and
enter
ret
inc
push
inc
inc
pop
sbbb
or
pop
jmp
push
mov
stos
and
shl
add
js
fnsave
push
jg
xchg
cmp
cmp
arpl
push
pop
shll
sbb
outsb
mov
sti
fcoml
sbb
push
or
or
cld
dec
adc
cltd
and
pusha
rolb
dec
loopne
push
xchg
rcll
shrl
scas
fnstsw
mov
cmc
movsb
push
hlt
xchg
ds
into
adc
adc
mov
shll
sti
fmul
push
xor
cmp
or
push
cmp
or
push
insl
adc
pop
inc
icebp
lock
add
and
dec
or
add
pop
sub
mov
fnstenv
loopne
sub
dec
cwtl
add
add
add
scas
or
dec
testl
loop
and
decl
pop
insb
mov
adc
ja
jmp
test
scas
lock
add
fmulp
ja
imulb
jmp
and
mov
lock
inc
and
leave
bound
cmp
js
xor
das
loop
push
rorl
mov
dec
insb
adc
add
jne
rclb
iret
xor
int3
cwtl
inc
xor
and
sbb
pop
loopne,pt
loop
inc
jno
add
test
test
push
test
shrl
jmp
dec
mov
pusha
push
jecxz
push
adc
sbb
xor
or
mov
inc
popa
shrl
aad
pop
and
ret
lock
and
filds
insb
inc
cmp
mov
add
ror
dec
jge
push
rorb
add
popl
repz
clc
xchg
call
adc
xchg
fldenv
xchg
xchg
push
xor
loopne
sbb
push
sub
sbb
and
sbb
or
stos
jns
int3
mov
dec
outsb
xor
ss
xchg
inc
je
adc
push
inc
mov
sub
out
jbe
imulb
inc
int3
add
pop
mov
lcall
addb
mov
sbb
inc
dec
js
jo
je
dec
in
inc
jae
loope
sarl
cltd
push
out
xchg
add
mov
call
jmp
push
dec
mov
gs
icebp
test
mov
stc
in
cltd
loopne,pt
mov
lods
xchg
loop
int
lcall
push
xchg
jp
push
daa
xor
incl
call
ss
jnp
pop
adc
lods
sahf
idivb
push
jns
lods
sbb
shrl
mov
pop
cmp
mov
clc
cmp
push
xchg
test
mov
imul
mov
stos
xor
movsb
fdivrs
aaa
xor
mov
ds
xchg
ds
push
pop
sbb
and
xor
push
jg
jmp
add
repz
cmp
sbb
jge
je
stos
test
ljmp
decl
fs
add
xlat
jbe
ficoms
mov
adc
lds
jl
mov
sub
jg
rcrl
or
xor
mov
call
and
test
cmp
or
add
repnz
and
add
jb
jo
sbb
test
mov
dec
jl
outsl
sarb
or
sub
daa
sub
dec
adc
lcall
and
adc
stos
shlb
je
mov
mov
fwait
mov
push
icebp
lea
shl
sbb
js
cmp
jb
movsbl
incl
push
or
cmp
jns
or
or
mov
fs
call
cmp
inc
jb
adc
filds
mov
cmpsl
or
add
cmp
ljmp
xor
movsl
adc
mov
sbb
xchg
lea
jle
push
sub
call
adc
test
add
jns
add
repz
or
inc
cltd
aas
loopne
sbb
and
popf
icebp
ja
pushl
dec
stc
fisttpll
dec
jb
add
push
push
inc
adc
incb
arpl
shlb
mov
fmul
add
ret
sub
scas
dec
pop
dec
add
push
inc
roll
shll
pop
xlat
repz
fiadds
loopne
out
test
pop
negb
add
ret
add
mov
fisttps
jecxz
fcmovnbe
xchg
loopne
inc
aas
std
or
add
xchg
push
aam
or
jp
subl
mov
add
ret
aam
aam
ret
dec
outsl
ffreep
fidivrl
inc
adc
inc
and
imul
fildll
cmp
out
mov
insb
xor
sub
js
jb
push
les
jg
sbb
xchg
mov
and
adc
push
fs
inc
push
filds
decl
scas
enter
adc
inc
mov
pop
sti
aas
push
js
test
cmp
pop
gs
push
sub
clc
push
icebp
les
scas
repnz
xor
mov
mov
lret
and
sar
sub
jae
out
bound
std
lcall
push
call
ljmp
stos
adc
mov
and
adc
adcl
sti
outsb
fbld
mov
inc
icebp
negb
dec
ljmp
xchg
jmp
pushl
arpl
scas
fs
std
xor
int
test
or
into
mull
mov
insb
fidivl
or
push
and
pop
addl
icebp
pop
sub
movsl
pop
cwtl
inc
push
shl
clc
sbb
clc
outsb
rcr
mov
loop
sbb
fildl
pop
xchg
add
pusha
popa
adc
pusha
push
inc
jmp
imul
add
adc
mov
push
jg
outsb
aas
iret
and
je
xabort
jp
js
dec
imul
into
bound
mov
add
mov
rcl
add
push
push
imul
mov
mov
inc
sbb
mov
or
lds
push
sub
mov
pop
sub
mov
inc
pop
xchg
pop
ljmp
jmp
add
xor
push
xor
xor
aad
pop
std
in
mov
add
fldcw
pop
inc
in
add
jge
mov
jge
sub
faddp
mov
mov
pop
outsl
int3
cmp
cmp
es
addb
pusha
lret
add
mov
mov
pop
jecxz
cmpb
mov
sub
mov
xorl
push
inc
lret
popa
dec
iret
mov
sbb
mov
xchg
or
jmp
fucom
rorb
push
clc
mov
sbb
xchg
test
ret
ret
shl
adc
loopne
or
mov
ret
cmpb
cmp
or
aas
jnp
outsl
mov
in
rcrb
mov
fwait
movsl
fstpl
test
xchg
aad
xor
popa
arpl
shlb
cmc
push
je
adc
test
cs
aas
fs
adc
lds
adc
sub
adc
ja
mov
rcr
call
fdivrp
pop
cltd
add
aas
call
or
imul
adc
push
aam
adc
sbb
fsts
xchg
or
ds
je
adc
aad
je
popf
je
pop
push
test
add
mov
and
push
push
lahf
or
push
pop
jmp
inc
sub
outsb
xchg
enter
in
fistpll
daa
dec
cmp
inc
sbb
xchg
pop
xchg
add
inc
xchg
aad
rcl
scas
lcall
loopne
rclb
int3
jp
add
aad
sbb
add
lea
int
mov
loopne
clc
test
or
inc
lods
or
scas
mov
dec
or
dec
pop
xor
push
lds
xchg
xchg
lret
mov
pop
jg
mov
sbb
xchg
jo
inc
add
cmc
sub
xor
loop
add
loopne
fisubrl
cmp
pop
dec
test
push
jp
dec
mov
mov
daa
pop
movsb
lds
pop
xor
add
icebp
pop
xor
outsl
div
in
or
std
mov
jmp
in
insl
enter
test
cmc
mov
aad
sub
aas
jbe
inc
cmp
fistpll
fdiv
ficompl
pop
out
addr16
and
mov
iret
add
mov
push
pop
mov
mov
hlt
je
inc
dec
and
cmpsb
daa
bound
pop
xchg
nop
int
ret
icebp
out
out
subl
jg
fisttpll
lcall
insl
mov
push
fucomi
push
bound
jb
gs
hlt
lds
push
out
sbb
mov
sbb
mov
test
sub
pop
and
adc
push
lock
pop
mov
dec
mov
cmc
das
je
xchg
ds
push
cmc
int3
pop
mov
mov
mov
pusha
jae
ljmp
into
test
cmp
in
xchg
scas
sub
int3
movsb
adc
mov
xchg
or
inc
pop
add
lea
jne
xchg
cmp
jbe
mov
mov
lods
pop
xchg
shll
inc
imul
movsl
ljmp
pop
rolb
xor
mov
sahf
mov
imul
fildll
jge
fildl
xor
or
idiv
cld
cmp
inc
pop
das
sbb
xchg
repz
and
jle
xchg
sarb
jl
popa
adc
jo
sti
mov
clc
or
lret
mov
pop
mov
mov
dec
stos
or
xor
daa
xor
ljmp
inc
and
lock
inc
and
jbe
js
mov
inc
les
mov
lcall
mov
fistpl
ljmp
dec
repz
js
and
push
push
adc
loop
xchg
loopne
out
mov
ds
fbld
lea
add
addb
push
repnz
cwtl
mov
push
xor
negb
push
das
push
push
jmp
sbbb
cwtl
mov
test
lcall
add
inc
sar
sub
movsb
js
and
add
cld
les
mov
ret
inc
inc
imull
cmp
jp
adc
les
mov
imulb
out
push
adc
push
mov
xchg
enter
nop
lea
dec
fcoms
add
lea
rorb
pop
fistl
mov
std
das
imul
call
call
inc
fistpll
jne
aaa
xor
and
push
sahf
je
xor
xor
dec
inc
xchg
mov
push
add
jmp
push
xchg
sbb
add
jge
or
shlb
inc
mov
inc
and
pop
pop
mov
xor
clc
push
add
lods
add
mov
cmp
scas
pop
inc
insb
adc
insb
shrl
ret
clc
nop
sbb
sbbb
adc
mov
aam
adc
clc
cmpsb
push
adc
add
inc
mov
lock
andb
add
and
xchg
out
fmulp
movsb
shr
add
or
adc
adc
inc
call
or
ret
int3
ljmp
loope
ds
xchg
add
cwtl
movsb
loop
stos
adc
push
add
push
stc
adc
xor
push
cmp
jns
and
repnz
xchg
adc
xchg
dec
push
lea
aas
pop
faddl
in
dec
andl
dec
push
fildl
fwait
push
imul
pop
cmpsb
add
test
sub
lock
leave
ljmp
sbb
cmp
push
mov
daa
jp
andb
add
repnz
mov
in
stc
sarb
hlt
sbb
mov
inc
in
add
cmp
lea
inc
add
push
jae
push
pop
add
pop
pop
mov
pop
jmp
adc
push
sbb
inc
idiv
add
xchg
cmc
add
inc
mov
lock
adc
xor
add
lret
je
loop
sti
ret
push
sub
dec
lcall
and
inc
rcll
jbe
add
adc
mov
push
inc
cld
inc
notb
xor
mov
or
inc
test
test
lret
fistps
jecxz
push
pop
imul
sub
adc
add
xchg
lds
mov
repz
xchg
imul
add
inc
dec
xor
popf
pop
fmuls
or
pop
cmp
xor
pop
loop
xchg
cmp
lods
sbb
out
pop
push
dec
push
fiadds
ds
outsl
in
sbb
repnz
enter
repnz
lock
jb
cmc
push
xor
sub
and
enter
lock
xor
jmp
lds
pop
ljmp
and
mov
mov
hlt
imul
adc
inc
inc
scas
add
ja
sarb
mov
aaa
mov
cmp
sbb
fsubp
and
sub
ss
icebp
inc
xlat
dec
add
mov
std
push
pop
adc
stos
xor
cmp
pop
loopne
subb
jl
pusha
outsl
clc
jl
in
decl
push
inc
push
dec
ja
shrb
add
or
mov
sub
aaa
mov
pop
adc
dec
lock
mov
popf
pop
push
dec
popa
sub
loop
mov
sbb
aaa
fsubs
mov
hlt
les
stc
nop
or
adc
addr16
popa
std
mov
les
fcmovnbe
movsb
ficoml
cmc
and
mov
loopne
pop
mov
test
arpl
push
mov
shrl
adc
inc
add
or
cwtl
inc
sbb
sub
add
shlb
pop
adc
rol
cld
push
or
xor
lcall
and
adcb
aaa
inc
aam
int
movsb
mov
int
sub
xor
push
push
cmpsb
mov
ss
cli
fimuls
test
mov
jno
sub
mov
xor
xchg
add
add
ja
mov
lock
fld
mov
dec
adc
into
insl
add
fwait
insb
and
push
repz
adc
std
outsl
loopne
adc
adc
mov
mov
dec
enter
sbb
out
sub
and
or
cmpl
imul
xor
pop
and
pop
inc
das
addl
sub
jmp
sbb
pop
cmpsl
aad
sub
xchg
dec
add
add
mov
mov
push
insb
jne
test
pusha
scas
loopne
pop
pushf
mov
aad
push
mov
popa
lret
mov
ret
push
sbb
out
xor
push
out
testl
loope
push
sbb
inc
hlt
adcb
and
add
sub
rolb
cmp
xlat
rorb
clc
push
cs
sbb
dec
cwtl
adc
popa
fmull
add
sub
and
add
iret
jg
arpl
push
int3
dec
adc
mov
neg
test
pushf
icebp
push
clc
movsl
inc
hlt
add
and
add
push
les
fsts
fisttpll
mov
add
fs
outsl
mov
and
int3
les
add
repnz
add
adc
adc
mov
mov
jge
pop
pusha
call
test
mov
pop
enter
lar
inc
sbb
mov
aaa
mov
dec
jge
add
dec
cmpsb
popf
inc
inc
inc
mov
inc
out
fsubl
adc
lahf
push
push
mov
and
and
rolb
jmp
or
xchg
repnz
inc
sti
lock
pop
add
movsb
cltd
cmp
jge
in
or
adc
cld
scas
divb
inc
sbb
fimuls
adc
cmp
dec
subl
mov
dec
les
sub
dec
xor
lods
addb
into
divl
mov
and
pop
mov
xor
xor
test
jns
inc
mov
ja
mov
inc
cmp
sub
mov
and
mov
ret
jno
dec
inc
xchg
insb
lret
or
push
std
dec
in
inc
sub
jnp
and
or
dec
sahf
inc
inc
sbb
sub
loope
sub
cli
inc
dec
adc
shrl
mov
out
aad
je
test
pop
push
pop
inc
in
int
dec
mov
es
or
fwait
dec
out
das
aam
icebp
movsl
xor
mov
and
inc
add
nop
xor
dec
sub
xchg
inc
insl
mov
data16
fmull
iret
and
push
adc
mov
push
jo
cmpl
cld
jbe
dec
out
stos
jp
icebp
je
lcall
insb
add
daa
sub
xchg
stos
cwtl
adc
cli
call
sbb
fldl
push
jne
cltd
fucomip
jg
in
leave
ret
sahf
or
dec
sbb
addl
lcall
jae
jns
cwtl
dec
mov
cmpsl
loopne
outsb
push
mov
and
hlt
add
sbb
andl
enter
cmpb
dec
mov
jo
filds
add
pop
sbb
decl
jb
dec
jp
or
jb
add
sub
int
push
cmp
shlb
cltd
mov
mov
lcall
cmp
and
outsb
or
mov
outsb
add
out
testb
push
jle
mov
jg
dec
and
sub
xchg
or
subb
icebp
xchg
add
call
and
jno
gs
cltd
fiadds
xor
adc
andb
data16
add
jg
sub
mov
mov
loop
cld
adc
add
ljmp
xor
push
test
loop
outsl
pop
mov
or
inc
ror
cld
stos
sti
sbb
sbb
xchg
cld
xorl
call
jge
dec
mov
lods
jp
ljmp
xor
push
cmc
push
mov
mov
inc
and
sti
or
dec
hlt
sbb
or
test
mov
jnp
rcrl
ret
xchg
jp
rep
inc
push
leave
fldenv
aaa
stc
push
sub
pop
cli
sbb
nop
add
jge
add
inc
lcall
ja
sbbb
lods
cli
idivb
sbb
dec
imul
repnz
adc
xor
mov
push
mov
js
jecxz
sub
inc
cmc
outsb
push
sbb
pop
jecxz
insb
xor
add
or
inc
stos
mov
inc
mov
int
and
and
jne
enter
xor
pusha
dec
jl
inc
incl
lahf
push
lods
cltd
xor
add
or
add
inc
lock
cmp
pusha
sub
incl
xchg
xchg
test
mov
and
movsl
dec
data16
add
cltd
loope
mov
sar
xchg
push
rorl
xor
loope
outsl
clc
imul
call
xchg
cmp
cmp
shlb
dec
call
mov
push
sbb
fstp
jbe
lods
loopne
pop
jg
mov
decl
add
sub
adc
push
sub
gs
jg
push
add
lret
mov
or
hlt
nop
mov
sbb
mov
inc
mov
push
sub
stc
jl
mov
stos
sub
add
movsb
mov
sbb
out
faddp
data16
pop
aas
pop
sti
dec
out
sub
imul
cmpsl
mov
mov
mov
arpl
fdivr
imul
jecxz
mov
out
dec
mov
into
add
pushf
lret
pop
movsl
aad
outsl
in
or
out
cld
add
roll
push
push
add
nop
mov
adc
cmpsl
test
cli
xor
xor
and
std
and
cmpsb
fdivr
cmc
and
mov
gs
mov
in
or
jns
pop
inc
clc
shll
loope
sub
mov
push
pop
sbb
addl
adcl
adc
jne
hlt
arpl
sbb
ja
repnz
insb
std
mov
mov
push
test
je
cmp
movsl
shrb
or
lea
sbb
adc
add
dec
lret
shrb
orl
adc
mov
mov
sbb
pop
inc
xchg
push
movsb
xchg
mov
je
dec
test
xchg
leave
and
addr16
add
mov
add
out
icebp
mov
pusha
push
pop
in
sbb
shlb
fucomip
pop
jg
or
mov
xchg
mov
mov
out
cmp
nop
sub
insl
xor
adc
ds
dec
jb
setns
clc
in
inc
fisubrl
cli
ljmp
popf
jp
jae
lret
pop
mov
mov
test
incl
scas
mov
mov
les
movsl
jae
movsb
push
push
cli
sub
push
in
cltd
xchg
add
mov
and
mov
cs
xor
outsb
movsb
aam
cmp
xchg
and
and
lods
or
or
and
adc
inc
sub
stc
add
add
in
loope
int
testb
les
std
cmc
xor
cmpb
add
mov
mov
in
inc
std
push
adcb
adc
stc
and
shlb
ficoms
pop
popa
xor
loopne
cmpb
mov
and
scas
das
xchg
push
popf
mov
sbb
mov
out
or
sbb
pop
mov
and
inc
ljmp
lea
testl
xchg
pop
cmp
cmp
fnstsw
mov
test
sub
movsl
clc
out
sub
pusha
repz
addl
insl
mov
or
jg
sub
aam
into
dec
dec
sbb
mov
clc
aas
adc
sub
cltd
dec
mov
sub
out
jo
push
dec
dec
push
or
xchg
cli
sbb
test
or
or
or
cmpsb
icebp
jnp
cs
cmpsl
pushf
es
add
xchg
add
dec
and
add
jp
das
pop
push
icebp
pushl
inc
rcll
sbb
xchg
mov
imulb
inc
mov
adc
pop
push
shrl
sbb
orb
fldl
push
test
sbb
add
sub
cmp
leave
xchg
mov
sarl
cmp
outsb
xor
mov
inc
cli
sub
sbb
mov
cs
outsl
pop
sub
sbb
mov
notl
out
clc
in
sbb
movsl
xor
filds
aas
mov
cmc
pop
lock
fcmovu
dec
in
dec
faddl
and
ret
jne
jmp
lock
mov
add
and
add
jb
mov
sub
inc
cmp
repnz
scas
adc
jmp
pop
cmp
sbb
jl
cwtl
mov
and
icebp
les
sarb
shlb
pop
adc
sub
fbld
ds
and
mov
and
xorb
rclb
jmp
or
pop
fisubrl
test
test
test
int3
sbb
and
stc
xchg
repnz
inc
mov
xorb
or
dec
or
or
std
sbb
outsl
cltd
push
or
mov
sub
rcrl
mov
and
pop
sub
adc
das
mov
jb
test
fcomi
shl
sbb
fwait
add
mov
mov
movsb
movl
push
mov
mov
repz
inc
cmovb
push
push
lods
add
pop
inc
jb
ret
sbb
imulb
jl
or
rcrl
mov
xor
xchg
mov
dec
ljmp
push
sarb
lret
jle
xor
mov
test
add
pop
cltd
jno
mov
push
sbbl
fwait
xchg
push
pop
cmp
sub
in
rolb
and
pop
fsubl
faddl
jle
sti
jns
dec
loope
mov
ja
mov
adc
ret
pop
mov
pop
sub
insb
adc
push
sbb
mov
or
sti
push
pop
in
pop
test
or
jg
sbb
call
and
mov
dec
insl
imul
in
push
or
dec
mov
inc
ljmp
loop
and
lret
int3
mov
dec
sbb
jbe
jmp
xchg
aaa
outsb
push
ja
js
pop
rcl
shll
sbb
incb
xchg
adc
lret
test
jno
mov
mov
pop
add
call
inc
xchg
into
or
lahf
sub
jb
cmpb
gs
call
pop
fsubr
leave
lret
mov
xchg
dec
dec
rorb
push
mov
sbb
fistps
fimuls
scas
aaa
in
xor
jecxz
mov
insl
sub
sub
inc
rol
outsl
das
sub
xlat
test
push
into
scas
xor
mov
aas
pop
xchg
fisubrl
ds
add
jecxz
sbb
adc
push
test
adc
jmp
pop
popa
xchg
jnp
inc
jle
sub
int3
pmulhw
aad
loopne
mov
jmp
push
mov
fildll
insb
mov
pop
and
adc
leave
xor
rol
aad
subl
jle
outsl
jl
frstor
ret
cmp
push
popa
cs
push
loope
testb
xchg
orb
mov
movd
push
mov
add
jne
bound
ror
adc
stc
push
lock
cmp
xchg
xor
adc
stos
cmc
lock
mov
sub
or
psllq
xor
adc
jmp
fcomi
pop
cmp
mov
test
daa
scas
fldt
mov
mov
cmp
pop
push
repz
push
jecxz
xor
inc
addl
add
mov
rorb
pop
ljmp
out
pop
adc
pop
mov
decl
jle
subl
lret
loop
mov
andl
xor
cwtl
adc
ljmp
mov
dec
hlt
mov
scas
mov
pushl
or
sbb
ror
or
cmp
rcr
fidivrl
clc
rcl
dec
xor
mov
repz
aas
ficomps
and
sbb
mov
adc
cli
loope
jo
cli
enter
stc
fidivrl
xchg
rorb
mov
inc
jns
pop
cmpl
add
pop
fldt
inc
icebp
stos
jl
jecxz
inc
mov
mov
arpl
sub
add
push
ljmp
test
jle
cwtl
fistps
add
mov
push
inc
or
sub
adc
sarl
jle
mov
ss
sar
pop
add
jb
cmp
xor
or
sub
in
ja
add
js
xchg
rclb
lds
or
cmp
clc
mov
pop
push
mov
mov
shr
mov
adc
jl
sbb
jg
fnsave
pop
subb
icebp
insl
xorl
into
aas
xchg
push
adc
test
xor
and
xchg
cld
mov
popa
push
outsb
cmc
xchg
std
or
inc
gs
cli
inc
lock
sarl
inc
or
xchg
cs
int
aad
clc
add
push
cmp
scas
pop
aam
sti
pop
jecxz,pt
and
jne
mov
out
sub
jg
hlt
andb
mov
push
xchg
popa
add
push
iret
jnp
icebp
jmp
push
popf
jl
dec
fdivs
lods
aaa
inc
mov
cmpsb
xor
in
icebp
divl
mov
lods
and
decl
aaa
xchg
stos
movsb
dec
mov
int
pop
mov
xor
xor
stc
lea
leave
fildll
ffree
mov
outsb
cld
mov
sbb
cmp
pushf
scas
mov
pop
out
mov
mov
cwtl
in
add
add
pusha
mov
fs
push
adc
in
out
orl
popa
and
test
lea
outsl
data16
push
xchg
adc
sti
das
adc
outsl
insb
push
jl
popa
jecxz
out
cmp
dec
mov
mov
outsb
das
ret
mov
adc
idivb
ret
mov
or
pop
jb
sarl
or
inc
jnp
rcrl
scas
inc
addl
inc
mov
add
orb
repnz
sti
xchg
cmc
shlb
push
sbb
int3
ljmp
xor
or
sbb
mov
jmp
inc
cs
dec
movsl
les
daa
pop
cmp
add
fisubrs
sbb
iret
jo
xchg
or
sub
cmpsb
daa
jne
jne
push
stc
or
mov
es
inc
pop
fldcw
in
mov
mov
or
jp
sub
xchg
repnz
pop
add
fcom
mov
mov
in
outsl
out
mov
or
dec
dec
xor
test
jl
shrl
xchg
cld
cmp
outsl
add
lret
xor
cmp
dec
ds
pop
push
inc
sbb
popl
fdecstp
cmp
mov
dec
insl
adc
push
sub
inc
sti
loope
xor
mov
std
dec
mov
xorb
push
mov
sbb
dec
lods
loope
sbbl
xlat
lods
sbb
dec
hlt
stos
imul
jb
pushf
dec
stos
cwtl
jmp
mov
lock
mov
sbb
inc
divb
je
je
sbbb
iret
enter
sub
in
cltd
pusha
ret
aas
inc
cmp
ss
xor
lods
xor
cmp
lock
sub
bound
cwtl
mov
or
and
push
inc
or
and
cli
pop
divb
or
andb
stos
ljmp
in
scas
lret
xchg
outsb
bound
xchg
mov
fildl
xchg
subb
movsb
callw
test
and
cltd
push
outsb
fists
rcrb
mov
mov
lds
cmp
xchg
negl
jo
ret
add
cmp
ljmp
aad
andb
popf
rclb
repnz
push
and
add
lods
mov
in
sbb
mov
push
daa
je
xchg
fisubrl
adc
push
out
ret
lret
in
imulb
gs
bound
rcr
jnp
sub
add
pop
je
movsl
push
cmp
cs
jb
repz
gs
pop
jbe
test
mov
scas
lock
test
subl
js
das
repnz
add
lock
mov
fadd
outsl
loopne
push
cwtl
sbb
pop
xor
inc
mov
rcr
push
insl
and
aaa
xor
pop
xor
stc
xor
scas
jbe
push
sahf
test
mov
add
mov
insl
insl
pushf
mov
sub
mov
add
mov
lods
clc
pop
push
aas
xor
xchg
call
and
or
xor
push
out
sub
mov
lcall
fldt
or
sbb
aad
adc
insb
dec
loopne
fdivs
xchg
xchg
rcll
filds
or
loope
pop
cmp
mov
xchg
dec
sbb
cs
jnp
add
pop
xor
mov
stos
mov
out
dec
repnz
pop
mov
mov
ljmp
enter
stos
adc
dec
outsl
sub
jo
jmp
mov
mov
cmp
out
ret
dec
jg
fsubs
adc
es
push
sbbb
icebp
jmp
lods
orl
mov
fisttpl
jg
not
iret
pop
jbe
mov
call
mov
fsts
cmp
or
jne
inc
pop
outsb
or
or
sbb
add
ja
lret
pusha
sarl
mov
jg
mov
sub
cs
mov
lahf
dec
cmpl
aas
add
dec
push
je
fildl
in
inc
push
sub
add
std
pop
xchg
in
dec
lock
aam
fwait
xchg
push
repz
jb
sub
add
cmpsb
jp
pop
lcall
push
or
mov
push
test
aas
ljmp
pop
mov
es
push
test
repnz
xor
fwait
cmp
xor
or
repnz
loopne
or
or
push
gs
sub
andl
test
loopne
mov
jecxz
cltd
lock
push
int
dec
mov
cld
lods
imul
mov
jns
mov
dec
mov
push
out
add
mov
addr16
shl
sbb
sbb
sub
or
aad
lods
adc
pop
daa
aaa
mov
add
xchg
sbb
push
ljmp
popf
adc
sbb
push
push
popa
jne
ljmp
stc
pop
fwait
push
mov
cmc
push
clc
push
jo
xchg
shrl
jb
and
test
push
xchg
sti
and
sbb
adc
pop
dec
push
mov
add
aam
push
mov
js
int3
pop
jbe
in
push
decl
mov
rorb
or
jp
lret
or
js
cmp
movsl
xor
lea
dec
adc
xchg
mov
jns
mov
ret
daa
inc
push
sub
mov
icebp
sbb
pop
mov
dec
or
dec
gs
movsl
scas
jl
jmp
xor
frstor
cmp
nop
loopne
loopne
push
lea
lea
mov
inc
jbe
jne
mov
movsb
sbb
mov
jl
cmc
pop
push
stos
cld
cmp
mov
ja
pop
xor
test
push
sarl
nop
sbbb
movb
sub
outsl
cmpsl
loop
or
flds
add
mov
jge
and
test
outsl
jo
sahf
cs
dec
ds
jns
sbb
outsb
loope
add
xor
test
sub
mov
aam
xchg
out
outsb
inc
add
aas
ss
sarb
push
push
clc
mov
lods
das
icebp
es
mov
mov
out
sbb
dec
sti
leave
rcrl
mov
or
shlb
mov
cmc
xchg
pop
and
cli
pop
mov
mov
pop
fsub
je
mov
nop
mov
pop
outsb
jecxz
adc
or
mov
ja
jne
movsb
inc
dec
insl
das
lahf
ja
push
in
mov
outsb
out
outsl
and
into
imul
inc
fs
into
push
dec
mov
or
cmp
cmc
notb
call
and
mov
popf
fistpll
rol
mov
outsb
push
mov
cmp
sub
mov
enter
addr16
push
aad
xor
mov
ret
out
pusha
jae
xchg
dec
out
inc
jns
cmc
loope
aaa
outsb
inc
cmpsl
ret
jg
inc
popa
dec
lods
outsl
mov
pop
dec
dec
hlt
decl
dec
xchg
hlt
sub
inc
xchg
fnstsw
and
mov
jg
leave
mov
sbb
and
cld
xchg
push
cs
or
movsb
out
sbb
std
pop
icebp
push
fisubrs
and
xchg
test
je
xor
jbe
fildl
jo
dec
int
push
push
xchg
jg
jne
outsb
lret
mov
les
sbb
push
dec
mov
inc
xchg
mov
bound
mov
mov
inc
xorb
bound
sbb
xchg
mov
push
mov
fcomps
aaa
es
adc
xor
test
fadd
xchg
pushl
ljmp
cmp
test
sub
call
add
shlb
xchg
lea
lock
js
push
lret
push
pop
hlt
inc
fbld
add
add
mov
xor
ret
push
cmpb
sahf
add
xchg
mov
lfs
mov
int3
jle
loopne
dec
in
mov
and
das
mov
cld
aaa
fcmovbe
cmp
push
cmp
pop
aam
add
and
mov
dec
cmp
cltd
shlb
add
xor
repnz
inc
sbb
or
xchg
push
add
inc
out
sbb
mov
adc
adc
in
mov
mov
xor
das
out
mov
and
add
dec
mov
aaa
or
in
or
or
push
cmp
pop
or
push
inc
fucomip
and
xor
adc
sbb
pop
dec
fisubrl
add
sub
or
inc
mov
jmp
hlt
pop
xlat
mov
jmp
jns
fs
sbb
aam
sub
arpl
mov
push
rcl
inc
pusha
mov
push
out
sub
ret
adc
fwait
ja
loopne
adc
and
sub
and
jl
es
popf
mov
mov
js
pop
jne
sbb
divl
hlt
movsl
lret
or
mov
mov
mov
or
mov
adc
test
jne
ja
in
jge
in
xor
in
push
out
push
in
lea
test
pop
push
push
je
add
hlt
sub
inc
mov
adc
push
mov
bound
adc
add
stos
add
add
xor
jmp
inc
mov
cmp
jnp
stos
or
stos
adc
flds
adc
or
add
push
mov
lea
sar
mov
xchg
xchg
loopne
or
sub
dec
sub
inc
andb
shll
inc
sbb
add
std
sub
aas
loope
cmc
test
add
addb
add
pusha
and
sbbb
in
mov
pop
inc
adc
sbb
adc
clc
fcompp
sub
loopne
out
in
stos
xor
or
shrb
sarl
xchg
mov
mov
mov
popf
mov
sbb
push
xchg
pop
stc
shrb
cld
test
call
call
mov
ret
sub
mov
outsb
call
rorl
rcrb
movsl
lret
and
dec
cmp
jl
mov
sar
lods
out
clc
fldl
scas
add
push
add
lea
das
pop
stc
jg
inc
sub
fistpll
xor
shrb
test
out
add
test
and
xor
dec
adc
enter
idivl
pmulhw
fsubrs
adcl
jp
push
adc
loop
aaa
icebp
fistps
aas
push
ss
in
cmp
pushf
fidivrs
scas
pop
or
cmpsl
mov
jne
sti
repnz
mov
mov
add
adc
shlb
mov
xor
cmpsl
inc
push
sbb
sub
adc
xchg
lods
out
push
rcrb
pop
clc
mov
and
xchg
adc
cmp
inc
and
aaa
in
les
cltd
les
sar
push
jge
jle
cwtl
inc
ret
cmpl
out
or
mov
cmp
movsl
cmp
outsl
pop
stos
call
sbb
pop
push
xchg
scas
add
fstl
push
clc
push
or
nop
data16
lock
lcall
xchg
mov
mov
cmpsb
or
mov
fcoms
scas
add
not
dec
mov
adc
inc
les
outsl
or
sbb
jo
test
add
mov
sub
icebp
sbb
add
sbb
and
add
sbb
roll
inc
lret
loopne
push
ljmp
test
pop
add
or
mov
int3
outsl
outsl
or
sbb
stc
nop
testl
or
mov
adc
enter
out
sti
adc
into
nop
add
push
fcoml
xor
sub
inc
pop
adc
sub
mov
bound
lods
jle
xchg
adc
cmp
or
aam
or
jns
test
loop
inc
jb
outsb
loope
and
xorb
xor
scas
scas
mov
test
stc
sahf
shrb
repnz
mov
xor
cmpsb
push
xchg
jae
add
aas
sub
mov
in
lea
in
inc
ss
scas
std
pop
mov
jo
enter
mov
pop
add
xor
mov
loopne
daa
lock
push
sub
cld
jnp
sbb
and
cli
movsl
adc
fiadds
mov
mov
insb
lock
mov
xlat
lret
shrb
js
sub
xor
add
add
inc
adc
jb
lock
and
lahf
out
loopne
and
adc
js
sbb
mov
enter
psraw
or
jno
or
das
loop
rolb
pop
sbb
sub
int3
and
sub
or
sbb
daa
leave
or
sub
lds
inc
das
pusha
or
inc
xlat
xor
or
or
frndint
push
or
inc
push
sbbb
adc
roll
add
push
add
adc
test
xor
inc
loope
ret
push
stos
mov
xor
clc
sbb
adcl
shl
mov
enter
xor
sbb
xor
loope
movsl
sbb
lock
or
scas
jecxz
mov
cmp
or
inc
add
push
testl
add
inc
or
add
jp
or
push
push
lret
add
xchg
into
mov
jecxz
or
int3
mov
dec
daa
cmp
shlb
jns
inc
mov
jmp
sub
lds
mov
inc
add
mov
mov
loop
ret
cmp
push
adc
mov
data16
sub
add
ljmp
inc
nop
jmp
into
xchg
pop
add
call
push
aam
mov
repz
adc
clc
add
or
ret
imul
push
cwtl
decl
jne
push
jne
fprem1
cs
sub
mov
or
aad
and
add
lock
lahf
clc
xlat
test
xor
xchg
test
mov
or
aas
add
arpl
and
jo
and
pop
leave
sub
pop
clc
jmp
add
loop
mov
or
and
mov
cs
push
and
fidivrl
and
hlt
sti
int3
pop
inc
pusha
js
jnp
int3
push
pushl
xchg
xchg
inc
xor
fldcw
fidivs
es
or
fwait
data16
loop
aam
jge
xor
add
mov
adc
jecxz
mov
les
je
int
in
dec
add
add
sbb
mov
hlt
aam
shrl
cwtl
mov
xchg
inc
clc
mov
push
pop
dec
loop
hlt
imul
push
ret
aaa
insb
and
shlb
inc
mov
dec
int3
sarb
and
xor
lcall
and
jbe
sub
adc
pusha
push
mov
flds
adc
adc
xchg
push
adc
bound
xchg
add
jp
sub
icebp
adc
mov
andb
xchg
cmp
out
movsl
das
pop
movsb
add
fnsave
adc
hlt
dec
pop
push
subl
outsb
adc
hlt
xor
test
mov
in
add
addr16
pusha
sub
push
cmp
jp
sbbb
sub
jbe
inc
cmpsl
popa
dec
add
sub
xchg
sbb
dec
add
xor
add
aas
mov
hlt
jp
adc
inc
adc
mov
andb
cmp
cmpsl
or
add
pushf
adc
and
add
and
mov
pop
clc
ret
jl
shrl
xor
scas
sbb
sbb
add
or
cli
xor
sti
pop
push
mov
adc
lret
inc
or
xchg
loope
push
cmp
popa
ljmp
add
add
mov
cmpl
aam
mov
pop
xor
shll
dec
cmp
movb
inc
sbb
sahf
insl
dec
mov
lods
and
push
int3
int3
loop
adc
inc
jo
add
xchg
jmp
enter
mov
push
fmull
lods
movsl
sub
and
js
int
shlb
jecxz
lahf
add
fadds
fisttpl
pop
sub
xor
out
inc
push
sbb
jno
and
mov
in
jmp
addb
mov
shll
or
adcb
dec
les
fsubrs
cmp
arpl
clc
mov
js
push
out
push
jmp
add
test
lods
outsb
loopne
addb
cmp
mov
flds
fstpt
cmpsb
dec
mov
or
add
push
in
xchg
in
mov
popa
lds
lahf
popa
sub
outsl
mov
adc
push
leave
in
inc
push
xchg
jge
ljmp
shrl
scas
jle
or
mov
add
pop
frstpm(287
push
mov
ja
inc
mov
daa
xor
mov
and
fadds
std
pop
mov
and
jecxz
jno
inc
cmp
fistpl
loop
rolb
add
xor
push
andb
test
mov
mov
stos
cmp
and
movsb
and
fsubrs
mov
add
mov
outsb
adc
adc
pop
or
test
insl
add
mov
in
add
pop
pop
out
fcompl
cwtl
sub
add
xor
xchg
test
jnp
push
jne
add
dec
fisttps
enter
or
pop
mov
fisttpl
out
roll
dec
mov
push
pop
jae
loope
push
shll
dec
es
insb
aam
fs
add
in
mov
pop
stc
cmp
add
push
cmc
add
cmp
add
lcall
and
mov
adc
pop
jp
mov
sbb
insb
sub
or
push
xchg
xor
cli
mov
rorl
adc
test
ret
dec
popa
pop
or
and
inc
movsl
dec
adc
xchg
mov
xchg
call
imul
ds
add
mov
pop
and
imul
xchg
int3
pop
lcall
aaa
loopne
sbb
and
loop
andl
adc
xorl
ljmp
lea
dec
mov
test
add
lods
pop
leave
mov
aas
idivb
jecxz
jns
cmp
out
shl
or
xlat
jge
mov
pop
clc
pop
jae
pop
fwait
out
notl
outsb
insl
call
pop
cmp
lea
or
divb
outsl
xor
mov
cmpsb
push
adc
mov
stos
cmp
inc
std
inc
mov
adc
cmp
stc
mov
push
mov
stos
mov
mov
pop
jbe
movsb
iret
push
fs
test
jg
ret
data16
sub
leave
xor
jg
test
add
adc
jo
and
add
lahf
clc
push
mov
insb
mov
inc
std
je
gs
fldcw
scas
sbb
ret
inc
mov
mov
dec
mov
jecxz
mov
jp
hlt
jecxz
pushf
into
lahf
sar
outsb
jecxz
in
into
adc
add
xchg
divb
loopne
mov
jo
or
in
cli
add
push
pop
fildl
aam
gs
dec
pop
jmp
fldl
mov
leave
jae
mov
push
sub
xor
ret
xchg
sub
movl
adc
sub
sahf
dec
iret
aad
mov
jns
lock
or
xlat
inc
jnp
outsl
and
scas
popa
cmpsb
fstpt
adc
push
mov
push
jnp
add
test
mov
mov
add
jle
inc
test
adc
jbe
test
xor
mov
ljmp
enter
lds
mov
stc
mov
xchg
and
xor
pop
icebp
sbb
push
sub
xchg
cmc
pop
pushf
fsubr
into
add
orb
mov
fmull
inc
jns
xchg
mov
add
loope
sub
add
call
repnz
mov
or
and
rcl
xchg
dec
mov
mov
jecxz
mov
and
add
push
cltd
jnp
adc
sarb
rcr
add
mov
add
sbb
xchg
dec
sbb
daa
nop
imul
mov
adc
fmuls
add
outsl
faddl
cmc
push
fwait
pop
cmp
sbb
test
out
adc
out
add
je
pop
push
out
lret
pushaw
cs
fdivrp
out
jb
push
and
or
jmp
mov
lods
aaa
mov
add
mov
adc
jp
jle
fildll
stos
imul
gs
sub
lock
or
fadds
jb
or
call
jb
std
cmp
out
adc
push
add
fcomi
mov
lods
int3
fists
stos
push
pop
lock
orl
sbb
and
pop
fcoms
repz
xorl
out
or
enter
jp
xlat
adc
bound
ret
pop
and
aas
push
pop
pop
ret
fstps
pop
clc
div
xor
mov
xor
sbb
dec
es
icebp
xchg
push
jns
insb
icebp
mov
pop
iret
adc
out
or
xchg
xor
mov
jbe
pop
out
adc
jnp
and
xor
pop
filds
sub
pop
xchg
dec
or
dec
push
xlat
int3
les
push
aad
clc
insl
int3
into
push
cli
das
aam
pop
decb
nop
out
xchg
pop
test
daa
mov
loope
movsl
ficomps
es
xlat
xor
xchg
cmp
jnp
pop
push
cwtl
add
pop
call
ljmp
xor
in
sbb
dec
add
and
pop
inc
adc
sub
in
inc
subb
js
icebp
pop
and
add
pop
outsb
insl
cld
sub
fnstenv
mov
xor
in
add
lcall
sbb
es
nop
mov
adc
div
inc
test
loope
add
sahf
repz
and
dec
jbe
ja
sbb
mov
mov
mov
adc
and
push
icebp
pop
rcr
negl
sbb
pop
or
testl
incl
cli
out
loopne
loopne
mov
out
shl
mov
aad
add
pop
lock
adc
sti
loope
stos
adc
cmp
out
cmp
mov
out
push
sub
sbb
cmp
xchg
incb
mov
sub
fisubl
out
outsb
cmpsb
adc
add
mov
and
subl
adc
outsl
filds
jl
bound
test
cld
mov
push
call
aam
adc
pop
adc
call
pop
fldt
ds
cwtl
rcrl
in
push
pop
jne
jecxz
push
data16
out
sub
loopne
scas
rcrb
mov
mov
adc
psubd
icebp
add
outsb
adc
jmp
or
cmp
hlt
mov
adc
divb
sti
les
adc
add
repnz
je
aam
dec
pop
orb
scas
mov
jg
sti
push
pop
stos
lods
cmp
incb
xor
dec
adc
cld
push
std
movsb
addr16
or
loop
xor
leave
jbe
outsl
adc
mov
mov
lods
daa
fdivs
inc
xor
mov
outsl
pop
lds
aam
or
or
sub
clc
inc
or
xchg
jnp
or
cmc
mov
aaa
enter
mov
shll
mov
out
sbb
movsb
add
loop
test
stos
or
mov
ljmp
in
xorb
add
imul
subl
xor
ret
xor
mov
clc
or
or
mov
les
and
mov
in
mov
shlb
dec
xor
inc
int3
outsl
mov
inc
sbb
adc
pop
add
push
cmp
mov
adc
inc
dec
push
pop
aaa
popa
xor
mov
cld
push
sbb
dec
loopne
icebp
mov
mov
dec
mov
or
leave
ja
mov
jbe
cmp
insb
xchg
adc
lret
sahf
xchg
inc
inc
adc
aam
xor
outsl
xchg
xchg
push
mov
daa
dec
das
in
xchg
movsb
push
mov
outsl
xlat
sahf
gs
and
dec
mov
nop
cmp
adc
adc
or
jno
ret
fnsave
in
das
mov
stc
lret
sub
cmp
jne
pop
fbld
or
movsl
pop
mov
add
ret
leave
pusha
dec
shll
ds
jmp
lods
push
cmp
mov
or
shrb
add
inc
or
mov
mov
ret
cmp
daa
xor
xchg
mov
es
sbb
movsb
int3
cmp
push
into
inc
ds
add
insl
mov
jae
repz
insl
and
mov
cwtl
aaa
pop
dec
mov
ja
in
mov
adc
xchg
lret
push
movsl
mov
adc
jbe
jge
add
lods
inc
enter
sbb
lds
mov
pop
and
call
jbe
xchg
rcl
xchg
mov
lea
nop
and
jp
jbe
shrb
pop
cmp
jne
mov
imulb
adc
mov
adc
icebp
rolb
jo
add
mov
sub
mov
adc
clc
test
ret
dec
push
or
and
movb
xor
lahf
cld
jne
mov
inc
cmc
outsl
pop
jmp
je
popf
cmp
inc
and
aam
inc
mov
and
and
lcall
negl
push
lea
sub
sub
repnz
fildll
or
outsb
pop
add
mov
or
xor
cld
test
mov
lock
add
push
pop
aad
dec
push
aas
push
das
iret
sbb
inc
xor
call
in
fidivrl
fwait
pop
dec
mov
hlt
xor
mov
inc
add
dec
aam
inc
or
dec
add
lods
lea
test
cld
sbb
inc
fimuls
lret
pop
out
and
cld
insl
add
pusha
lock
fcoms
jmp
lcall
mov
and
push
movsl
add
jnp
stos
pop
add
in
movsb
add
sub
add
pop
or
adc
fimull
and
adc
add
cs
push
fwait
pop
push
sbb
aam
in
and
push
push
lea
add
adc
lcall
mov
sarb
sbb
loope
or
pop
call
leave
loopne
sub
jmp
mov
inc
in
mov
xor
jmp
fnstsw
out
loop
cltd
out
es
aam
sbb
dec
fistpll
cmc
cmc
push
test
dec
sarl
fmulp
pop
sbb
roll
dec
test
mov
jmp
xor
adc
sbb
nop
and
sbb
scas
repz
imul
inc
push
dec
mov
leave
jne
bnd
ds
fstl
push
insb
icebp
sbb
push
sub
inc
push
fwait
in
sbb
stos
add
mov
das
mov
xchg
add
or
mov
fadd
xchg
roll
outsl
push
pop
loope
inc
test
je
add
xchg
add
cmp
shll
testb
inc
or
jmp
mov
mov
mov
lcall
pop
cwtl
add
sbb
mov
sub
loopne
inc
imull
mov
in
xchg
inc
jl
jl
sbb
call
add
mov
shl
fisttpl
ficoms
mov
and
jp
add
fisubrs
movsb
movsb
push
mov
in
or
shrb
pushf
cs
cmpsb
lret
xor
xor
and
xchg
pusha
pop
dec
cmpsb
ror
push
les
mov
lfs
xchg
sbbl
fsubrs
or
bound
popa
xor
cmp
and
adc
xor
not
lods
shl
push
or
adc
dec
dec
jmp
pop
ljmp
insl
sbbb
sub
cmpb
popw
or
xor
mov
dec
ljmp
shrl
stos
adc
aaa
mov
dec
ficoms
nop
jp
jne
push
jmp
adcl
or
test
les
push
or
xchg
dec
pop
shrl
sub
mov
lret
scas
inc
mov
lea
add
xor
les
nop
or
outsl
push
fmul
mov
sub
add
pop
pusha
cld
test
ss
aaa
mov
jns
call
inc
sahf
jecxz
xchg
sub
data16
or
adcb
clc
sbb
adc
cs
sub
inc
arpl
xchg
and
mov
cmp
lods
sbbb
and
jg
add
pop
xchg
xor
incl
add
inc
imul
lock
das
sti
cltd
mov
mov
mov
int
pop
mov
les
mov
xchg
cmp
add
test
mov
icebp
jl
test
lds
and
ret
cmp
lcall
or
inc
mov
push
aaa
xchg
std
aam
jae
in
nop
sbbl
insl
sub
fldt
test
test
into
add
xlat
subl
or
fwait
shr
push
test
test
mov
lds
movsb
push
and
ret
mov
sbb
imul
or
mov
std
icebp
lods
loopne
icebp
aaa
mov
mov
pop
xchg
add
addb
test
inc
xchg
or
adc
mov
les
push
js
imul
insl
ret
jmp
outsb
jecxz
test
mov
nop
enter
and
sbb
in
inc
hlt
mov
and
sarl
pop
mov
add
icebp
cmp
rcr
loopne
and
mov
js
mov
sub
les
adc
dec
mov
push
std
mov
out
jg
pop
shll
mov
mov
sbb
jl
fsubrl
xor
add
fstpl
into
mov
xchg
movsl
insl
in
mov
mov
sbb
in
repnz
jns
mov
inc
mov
push
stos
push
sbb
into
cs
sub
leave
pop
add
cmpsb
lods
add
pop
xor
or
fisubrs
fidivl
negl
lods
or
push
mov
push
or
jle
push
bound
or
adc
sarb
aaa
fimull
inc
mov
mov
dec
jmp
insl
sbb
mov
jge
lret
lock
and
jp
mov
aad
lods
movsl
nop
fdivs
pop
stos
jbe
inc
aam
xchg
insl
cmp
fidivrl
pusha
cmp
mov
inc
gs
aam
daa
outsl
sub
push
aaa
fistpll
xchg
xchg
in
insl
ljmp
pusha
mov
or
mov
adc
pop
subb
ds
js
adc
popl
pop
mov
inc
add
mov
test
inc
std
sti
out
sbb
scas
aam
inc
mov
mov
adc
push
insb
test
ja
pop
fdivrl
jne
xorl
fdivrl
shrb
loope
jbe
out
mov
stc
pop
andb
psllw
es
sub
jmp
aam
mov
push
jl
add
cmpsb
adc
pusha
jl
js
or
pop
sbb
or
xchg
pop
or
jae
push
icebp
add
jl
stos
pushf
sub
test
and
fcmovbe
adc
xchg
mov
or
loopne
testb
ret
mov
dec
ja
jl
push
orb
rol
mov
inc
xor
mov
mov
pop
fnstenv
pop
adc
insl
sub
inc
adc
push
call
aaa
pop
push
xlat
clc
scas
insl
test
mov
loop
mov
and
clc
adc
mov
mov
push
rorl
cmp
mov
pop
dec
jmp
inc
outsb
sahf
mov
xchg
xor
call
mov
aaa
lock
mov
fistpll
jmp
ret
arpl
adc
dec
repz
pop
mov
jl
adc
and
loopne
ficomps
adcl
pop
test
mov
push
jo
mov
or
call
pop
out
push
addr16
hlt
and
sbb
test
mov
test
fisubrs
jns
test
call
sbb
mov
mov
mov
fbld
push
and
jb
mov
aaa
sbb
mov
cmpsb
sti
sarl
sbb
jmp
adc
sbb
lock
fistps
lcall
rolb
fwait
lea
scas
fyl2xp1
decl
jbe
out
pop
push
dec
and
lcall
dec
fcomp
push
fistpll
pusha
pop
call
fdivrl
test
int3
rclb
test
dec
in
add
pop
loopne
btr
xor
or
or
lock
add
scas
call
test
add
inc
push
pop
pop
cmpl
xchg
andb
sti
out
cli
sahf
pop
adc
pop
sbb
push
mov
sbb
icebp
jle
ret
pop
clc
imul
pusha
rclb
pop
pop
fwait
mov
jle
xor
push
in
imulb
roll
mov
pop
call
sbb
pop
cmp
aad
push
mov
insb
adcl
iret
cmpsb
mov
jge
sub
pop
inc
mov
add
xchg
adc
out
jge
sub
imul
xor
pop
mov
jb
or
insb
test
mov
mov
adc
pop
jg
mov
mov
loopne
or
lea
ret
sub
iret
in
stc
xorl
push
stos
adc
lea
mov
scas
ja
stos
icebp
adc
js
push
sbb
test
xor
out
or
sub
enter
ds
sub
push
mov
scas
cwtl
inc
dec
jle
aad
mov
cmp
dec
int
xchg
mov
adc
pop
mov
adc
les
or
cwtl
push
shl
jmp
fiaddl
call
outsl
inc
xchg
inc
push
xorb
mov
xchg
lret
adc
jp
shrl
cmp
incl
roll
push
lahf
pushf
mov
in
scas
es
ffreep
sbb
lcall
adc
cld
push
aam
ret
nop
iret
pop
cmp
dec
stc
js
rcrl
popa
cmpl
jns
jb
adc
and
sbb
das
push
das
scas
mov
dec
divb
mov
lods
outsl
addr16
aas
sbb
add
aad
insl
aas
and
addr16
push
mov
or
add
and
xchg
js
lds
dec
sub
inc
ds
or
fists
sbb
fidivl
mov
test
lods
mov
add
std
in
jae
inc
mov
xor
das
shlb
bound
mov
movups
mov
jns
add
frstpm(287
in
mov
std
fistpll
xchg
or
into
rcl
mov
test
movb
and
js
pop
xchg
jmp
fdiv
pop
add
and
or
inc
cmp
sub
push
pop
fbld
or
sar
add
shl
dec
pop
lret
dec
adc
adc
js
sub
pop
rolb
fbstp
dec
inc
mov
hlt
pop
flds
sub
pop
stos
stos
fistps
pop
cmc
decl
and
pusha
add
ret
adc
adc
cmp
and
roll
mov
sbb
xchg
or
lret
fstl
adcb
pop
fsubrs
test
aam
xchg
andb
dec
jge
shrb
cs
push
jns
lods
mov
xchg
fisubl
mov
roll
daa
or
test
lds
push
stos
or
inc
inc
mov
mov
mov
enter
pop
inc
push
mov
sub
xchg
lret
add
xchg
loope
dec
mov
mov
add
mov
in
mov
int3
adc
xchg
add
mov
sbb
add
push
adc
mov
jnp
into
push
xchg
mov
inc
insb
xchg
popa
idivb
enter
jecxz
sbbb
rolb
sub
into
cmp
adc
and
dec
add
push
add
add
ljmp
inc
nop
subb
push
cmp
lods
cmp
push
xor
sbb
xchg
out
lds
xchg
add
or
or
fisubrs
aad
cwtl
adc
sbbb
pop
push
dec
xor
loopne
cmp
mov
or
jae
nop
fsubrl
adc
int3
out
shll
mov
cmp
sahf
adc
sub
out
adc
xorb
pop
pop
fsubr
or
lock
push
test
add
push
cmpsb
sub
push
adc
ret
sarl
add
xor
mov
mov
cli
sbb
pop
pop
cli
jo
pop
push
add
stos
sbb
gs
test
test
and
lds
cltd
sbb
lahf
insb
mov
adc
jnp
lds
push
bound
mov
icebp
jno
inc
ror
sub
sahf
repnz
and
and
jae
add
test
sbb
or
jmp
inc
js
add
dec
mov
xchg
sub
sbb
add
add
fwait
or
xchg
pusha
sbb
add
adc
push
add
mov
xchg
inc
inc
mov
je
sub
dec
subb
mov
adc
sub
in
push
in
imul
les
cltd
out
scas
xchg
mov
scas
push
or
push
daa
lods
adc
xchg
mov
div
mov
in
push
dec
push
das
rorb
adc
or
sub
inc
jae
adc
push
or
fildl
mov
add
pop
add
cmp
push
iret
adc
adc
hlt
adc
xchg
pop
add
xchg
ja
pop
test
scas
xchg
mov
inc
movsl
adc
mov
push
adc
ficoml
hlt
sub
stos
clc
add
sbb
dec
push
xchg
add
adc
data16
sbb
fcoms
push
dec
test
jl
or
sbb
jl
xor
lcall
jle
push
rcrb
daa
push
adc
outsl
push
mul
mov
clc
dec
notb
xor
sarb
mov
aas
loop
enter
xchg
inc
gs
mov
mov
faddl
push
mov
test
movsb
test
fbld
jnp
mov
rcl
pop
mov
lcall
xor
shr
pop
jmp
addb
jo
sbbb
add
addr16
divb
loope
loope
outsl
fldenv
fsub
stos
test
sub
jb
dec
jle
lahf
push
dec
mov
sub
add
mov
addr16
test
add
sbb
insl
iret
inc
sbbb
dec
dec
jmp
or
sahf
adc
inc
inc
inc
data16
shl
push
push
push
push
jbe
mov
add
sbb
stos
push
bound
sub
dec
mov
addl
dec
push
out
mov
adc
jecxz
mov
xchg
or
jne
fwait
pop
dec
inc
sbb
and
adc
add
in
mov
jl
jl
jo
jo
lods
or
jae
or
mov
adc
jle
xchg
add
icebp
mov
mov
out
cwtl
push
and
add
push
jge
outsl
add
addr16
and
xor
ljmp
sub
dec
stos
pushw
jne
push
jp
jp
insb
out
pop
jecxz
ljmp
test
dec
mov
dec
inc
push
sub
inc
xor
in
dec
lds
cltd
pop
ljmp
das
inc
add
iret
add
add
mov
lcall
mov
and
enter
loope
and
scas
fcomip
xor
add
push
movsb
push
daa
pop
inc
mov
repnz
mov
mov
outsb
imull
inc
std
popa
ljmp
test
cmc
add
lds
addl
dec
dec
cmp
out
popf
add
inc
cld
jl
jmp
in
mov
mov
push
arpl
lea
mov
lea
pop
mov
cli
dec
fdivs
push
xorb
and
dec
and
mov
cmp
icebp
js
xchg
cmp
cli
and
dec
xchg
cmc
pushf
das
xchg
sub
sbb
aam
stos
adc
pop
add
ja
push
or
mov
jg
mov
jne
add
outsl
rclb
fildll
lea
lahf
or
pop
fmulp
sarb
arpl
scas
add
pop
std
mov
dec
adc
pop
iret
jmp
xchg
push
insb
pop
loope
mov
push
mov
fcmovnu
jle
pushf
fldcw
push
dec
push
cmp
sbb
sahf
add
xor
cli
incl
std
repnz
add
dec
mov
stos
inc
mov
inc
sbb
insb
adc
pop
mov
sbb
push
dec
shll
testb
inc
frstor
cwtl
mov
hlt
pop
mov
mov
mov
popl
pop
aaa
subb
mov
inc
sbb
adc
sub
cmp
movsl
in
icebp
pop
sub
pop
add
roll
or
push
xchg
xor
push
or
cmp
push
test
fucomip
mov
popa
mov
xor
adc
insl
pop
pop
and
cli
inc
sbb
cmp
outsb
adc
in
cltd
sysexit
xor
inc
mov
js
cli
jae
loopne
mov
and
jae
inc
dec
or
clc
mov
call
xchg
ja
dec
xchg
popf
lahf
sbb
and
jno
ret
pop
xor
adc
add
and
inc
enter
xchg
sti
push
rorl
inc
or
insl
or
add
add
mov
and
daa
int
or
fdivrs
push
adc
xor
add
add
adc
rcll
rclb
cld
mov
int3
cmpsb
cmp
test
mov
sbb
or
or
into
dec
and
out
or
add
xor
mov
push
cltd
adc
adc
fwait
mov
data16
and
std
ljmp
iret
adcb
mov
lock
mov
and
mov
ljmp
xlat
sub
mov
sub
ucomiss
mov
idivl
sub
rcll
jle
cmp
xchg
inc
adc
pop
mov
xchg
and
adc
adc
sbb
inc
jns
jecxz
push
arpl
sbb
add
cmp
cmc
dec
leave
xchg
aad
icebp
call
mov
inc
sbb
andb
inc
add
cmp
add
xchg
mov
push
loop
js
adc
call
mov
loopne
adc
mov
mov
sbb
sub
and
or
xchg
jno
inc
inc
test
mov
mov
adc
outsb
xchg
lret
and
les
inc
jbe
fs
cmp
mov
mov
scas
mov
xchg
pop
push
cltd
pop
inc
outsb
cmp
push
pop
and
sbb
shr
mov
push
aam
dec
aam
or
adc
mov
add
ljmp
add
inc
lcall
rcrb
push
or
cli
popa
enter
lock
push
outsb
notb
movsb
cld
mov
iret
pop
sbb
dec
pushf
es
adc
mov
push
in
test
or
push
ja
call
hlt
fistpl
popa
add
rcl
popa
insl
imul
push
insl
fs
push
cmp
add
out
mov
mov
mov
hlt
dec
cmp
mov
mov
cmp
imul
testl
sti
loope
aam
shlb
push
push
hlt
shrb
add
adc
adc
xor
aam
cld
cld
and
into
push
xchg
shr
and
inc
scas
adc
hlt
xchg
push
sbb
mov
cmp
cld
test
or
lock
dec
orb
sbb
iret
add
add
outsb
lcall
pop
int3
mov
push
lret
push
jo
add
jb
adc
aaa
sahf
mov
push
push
les
mov
xchg
push
sbb
out
pop
cld
mov
push
fildll
sub
sbb
add
pusha
loopne
aas
mov
push
lahf
xor
add
jne
cmp
jae
mov
add
mov
and
adc
jecxz
andl
stos
inc
out
sub
xlat
shrl
xchg
dec
mov
push
testb
fdivrl
or
mov
push
dec
inc
out
or
nop
dec
jno
dec
sub
or
add
roll
mov
sbb
je
stos
or
and
jmp
mov
loop
or
lock
inc
std
fistl
mov
add
push
cli
lahf
arpl
add
pop
and
subb
or
fcoml
xchg
pusha
icebp
or
ret
adc
daa
and
inc
int
aad
adc
jbe
cmc
or
cmpsl
orb
test
mov
ja
mov
adc
jae
je
mov
jg
cltd
inc
ret
in
and
arpl
mov
test
jnp
loopne
rcr
dec
aam
xor
mov
inc
adc
cmp
adc
and
rcll
xchg
jl
or
outsl
and
das
cld
fwait
outsl
out
mov
loopne
mull
repnz
scas
sti
or
loop
icebp
mov
dec
pusha
xor
and
sahf
push
inc
clc
jg
std
adc
fs
adc
mov
inc
xor
mov
jmp
std
ja
js
insl
mov
shrl
mov
cli
mov
pop
jmp
mov
inc
cld
lds
push
jle
dec
lds
fistpl
or
dec
push
aaa
xor
fsubs
jno
lret
or
arpl
push
jo
and
fsubs
gs
sub
lock
outsb
cmp
push
shll
iret
sub
xchg
es
in
call
push
out
pushf
jl
das
aad
aad
shlb
inc
sarb
ss
ret
pop
dec
jnp
and
xchg
sub
in
icebp
ds
jmp
scas
lcall
cmpsb
mov
mov
dec
stc
inc
or
notb
xlat
push
mov
xor
mov
out
adc
pushf
int
stos
cli
rep
pop
lahf
push
inc
clc
dec
mov
sub
fucom
push
leave
inc
cltd
sbb
ljmp
mov
stc
pop
mov
sub
xchg
sub
adc
inc
cmp
mov
sahf
gs
push
fsubr
fadds
loopne
loopne
inc
leave
sbbb
mov
roll
inc
mov
or
cmp
mov
shl
insl
test
mov
addb
clc
fdivrs
mov
repnz
sbb
push
je
jp
jecxz
xchg
mov
fcoms
jnp
and
gs
inc
int3
mov
adc
pop
mov
push
inc
and
out
subl
add
or
imul
into
mov
enter
shrl
push
and
add
xchg
mov
aaa
add
inc
in
add
pop
bound
add
loopne
mov
dec
jle
shl
repnz
int3
adc
lods
add
scas
xor
int
xchg
cmp
xchg
adc
and
addb
xor
pop
lea
dec
push
mov
cltd
xlat
and
xchg
in
mov
ret
sub
outsb
out
mov
mov
mov
xor
xor
ds
push
or
push
call
outsl
out
add
test
add
or
loope
inc
lret
add
mov
lcall
fsubs
jbe
mov
sub
clc
and
jp
inc
mov
fucomp
int3
movsb
adc
jp
mov
lea
lds
insl
xchg
daa
data16
lods
or
jne
stos
std
orl
movsb
push
mov
jnp
sub
icebp
xchg
xor
ljmp
cli
out
adc
test
pop
loope
out
js
les
testl
mov
adc
jbe
pusha
mov
movsl
mov
cwtl
insb
mov
inc
mov
loope
clc
xchg
push
dec
xchg
pop
mov
mov
daa
xchg
push
sbbb
arpl
imul
mov
add
pop
nop
scas
sbb
inc
andl
xchg
imull
mov
es
sub
imul
sub
jo
rcrl
addr16
out
rol
mov
sub
sub
nop
loope
push
hlt
sbb
push
sub
inc
and
or
sub
adc
inc
rcrb
pop
jle
adc
push
push
xorb
push
mov
scas
push
scas
or
sub
jns
xchg
push
and
sbb
mulb
jmp
xchg
add
xchg
clc
inc
jae
aad
pop
push
xor
insl
adc
fldenv
jp
xchg
insl
outsl
or
add
js
adc
or
lock
and
adc
sarl
stc
dec
push
mov
fisttps
test
subb
jmp
lcall
das
sub
sbb
subl
out
roll
std
call
pushf
jmp
stos
rsm
icebp
test
cmp
das
mov
sub
outsb
icebp
dec
sub
je
divb
xor
xchg
fimull
loopne
clc
add
adc
dec
std
lcall
leave
mov
pop
and
mov
imul
in
pop
pop
leave
ret
pop
pop
ret
dec
stc
jbe
repnz
inc
xor
dec
iret
ja
mov
add
pop
pop
dec
test
or
and
add
adc
adc
test
or
adc
test
mov
insb
or
mov
and
or
add
jbe
sti
adc
inc
or
and
add
and
xchg
dec
or
add
adc
inc
adc
xor
pop
jge
mov
mov
adc
fstpl
mov
push
sbb
mov
insl
in
lods
sub
adc
jns
cltd
and
insl
mov
jbe
xor
cmp
pop
fwait
insb
lods
movsl
adc
mov
insl
mov
sbb
dec
mov
add
xor
add
add
inc
inc
dec
sahf
cmp
pusha
inc
adc
aaa
or
add
xchg
mov
je
pusha
sub
inc
inc
or
add
mov
adc
jmp
and
subb
dec
cmp
pop
imul
inc
icebp
andnps
aad
xchg
pushf
cmp
flds
xor
push
add
adc
adcb
int
push
dec
sbb
leave
cmp
pop
inc
lds
mov
add
jg
sub
and
bound
push
idiv
incl
add
rorl
xchg
add
add
fs
fiadds
lcall
cmp
call
adc
cmpsl
mov
add
sbbb
xor
adc
int3
mov
push
call
jns
add
movl
adc
idivb
sbb
add
jmp
imul
nop
je
mov
mov
in
mov
fs
popl
jne
xchg
int3
and
ss
add
add
add
ljmp
jmp
add
add
xchg
int3
sub
xchg
and
fs
pusha
mov
in
mov
stc
jo
in
push
add
add
clc
or
xor
mov
adc
mov
mov
ret
call
loop
insl
fcomi
call
ja
add
cmpb
add
jg
mov
sti
outsl
fistpll
repnz
jecxz
leave
or
in
scas
les
lds
cmp
adc
mov
pop
fadds
test
or
lods
mov
jge
or
andl
test
dec
jge
add
add
cmp
lret
add
mov
movhlps
jg
inc
jbe
xor
dec
in
mov
pop
cwtl
push
add
xor
fsubl
ljmp
dec
mov
iret
xor
and
jge
add
sub
push
mov
nop
out
adc
icebp
add
mov
aad
mov
push
sbb
cmp
inc
incl
ret
push
xor
inc
roll
fimull
sub
add
xor
dec
jnp
movsl
pop
mov
add
add
imul
addb
repz
xor
mov
add
inc
addr16
div
das
cmc
movsb
push
paddq
mov
insl
xchg
ds
jg
adc
ss
insb
scas
bndstx
fs
cmp
cmp
jbe
mov
add
cs
les
pop
add
outsl
das
jl
aad
dec
xor
popa
sti
or
mov
pop
mov
sub
push
imull
add
cli
mov
jb
push
cmp
fists
data16
xchg
xchg
test
inc
mov
imul
xchg
sbb
dec
push
test
ret
dec
pop
mov
and
mov
icebp
sub
cmp
test
sbb
xor
pop
mov
out
fisubrs
adc
neg
add
mov
pushl
add
xor
xchg
sub
divb
add
push
scas
push
shll
lcall
fbld
add
fadds
adc
inc
addb
jnp
mov
or
jae
mov
mov
scas
lock
inc
push
add
push
add
pop
sub
add
movsl
add
call
fstps
jge
push
sub
adc
imulb
imul
enter
cwtl
out
or
sbb
jecxz
cmc
or
adc
and
xor
arpl
rcl
pop
inc
test
loop
insb
sar
icebp
jg
rol
aad
cld
fwait
add
push
jmp
sub
jg
jno
add
and
or
sti
sub
pushf
push
mov
dec
or
sbb
outsb
dec
xchg
in
les
jae
or
push
out
or
js
adc
mov
repnz
fstpt
add
and
sarl
push
pop
daa
lahf
push
jg
sbb
mov
cwtl
pop
and
pop
push
repz
popa
loope
testb
add
mov
jb
mov
pop
push
jb
jmp
jnp
and
or
sbb
jns
movsb
dec
inc
mov
xchg
rolb
scas
insl
fstpt
push
sbbl
outsl
or
cmpsl
fistps
xor
fmuls
xchg
and
pop
incl
dec
in
or
push
xchg
inc
mov
xchg
jae
jne
fprem
or
int3
add
xchg
jp
dec
bound
xchg
adc
mov
inc
push
push
push
out
sbb
xor
je
in
or
outsl
cld
inc
sti
ret
hlt
and
arpl
pop
andl
stos
outsl
mov
cld
sub
xor
pop
lret
sbb
mov
call
test
out
mov
sbb
pop
test
fsub
push
sub
mov
stc
mov
daa
add
movsl
ljmp
out
stos
aad
out
mov
lods
movb
rorb
add
mov
add
sub
pop
or
add
stos
lods
sarb
outsb
and
loope
cmpsb
and
enter
lret
cmc
pop
lahf
rcll
insb
mov
mov
das
jl
push
imul
into
cmp
out
repnz
cmp
xchg
bound
rorl
in
test
pop
or
xchg
mov
adc
jmp
in
add
iret
nopl
icebp
push
fcoms
xor
movsl
xchg
mov
int3
xchg
jno
xchg
sub
fstpt
decb
push
mov
sbb
mov
add
jecxz
xchg
stos
push
outsl
mov
cmpsl
shr
or
into
outsl
out
pop
cli
mov
jmp
rclb
inc
push
jg
mov
mov
sub
jae
cmp
call
loopne
out
hlt
inc
jecxz
fwait
xchg
pop
or
cmpsl
fs
mov
jge
fbstp
push
fucomi
call
pop
test
add
rcl
xchg
arpl
pop
xchg
inc
lea
testl
jns
push
dec
js
lcall
pop
adc
mov
jmp
test
sbb
or
insl
pop
jp
pop
push
cwtl
lea
in
jg
movsl
sub
xor
or
out
adc
mov
lods
or
cld
or
mov
push
icebp
rorb
jmp
jb
gs
sbb
sub
movsl
mov
out
in
rolb
add
cld
jg
inc
xor
push
xor
sub
and
loopne
dec
adc
test
adc
add
mov
pop
lea
loopne
lods
sahf
shll
test
frstor
cli
xchg
cmp
mov
adc
lock
cwtl
je
add
pop
jno
and
and
jg
repnz
repz
rcr
xor
lret
mov
pop
and
repz
jge
clc
pop
mov
test
adc
ss
mov
mov
mov
and
fldenv
es
sub
adc
roll
mov
iret
and
nop
subl
mov
sti
sbb
insb
test
mov
mov
divl
pop
roll
ficoml
cld
push
movsl
imulb
dec
lcall
jbe
movsl
add
aam
aam
and
jecxz
negb
lock
add
sahf
aaa
jg
insb
mov
ret
push
cmp
pushf
pop
lea
stc
aas
negb
sti
dec
pusha
sti
ret
or
mov
cmp
pinsrw
rcrb
fcompl
pop
xchg
ss
out
jae
pushl
push
xchg
ljmp
and
mov
jg
and
int3
push
xor
cli
pop
mov
xor
fs
adc
and
inc
mov
cmp
dec
mov
push
sub
add
or
fsubrs
inc
inc
test
aaa
dec
out
fistl
testb
adc
push
pop
xor
sbbl
xorl
lcall
pop
push
movsb
stos
iret
cmc
adcl
jl
jo
xorl
and
xchg
jle
stos
xchg
xchg
mov
xchg
sti
jbe
xor
fstp
mov
sbb
loope
push
lods
sbb
lea
lods
mov
mov
or
jmp
pop
mov
lods
fs
cmp
xchg
aaa
stos
pop
lock
dec
fildll
outsb
pop
and
out
scas
clc
push
stc
or
xor
lea
mov
sub
adc
aad
and
jno
mov
sbb
mov
dec
jle
xchg
adc
mov
pusha
adc
clc
sub
or
sub
push
mov
lock
mov
pop
inc
push
test
jns
fwait
cmp
scas
lret
das
add
add
and
ljmp
outsl
popa
addr16
push
arpl
mov
inc
or
xor
clc
inc
pop
xor
fs
in
enter
in
icebp
or
mov
in
lret
int3
ret
test
mov
sub
dec
fildll
cld
ret
sub
lret
mov
or
inc
inc
int3
repnz
clc
data16
mov
or
add
sbb
jmp
or
imul
mov
leave
cmp
dec
xchg
sub
dec
xchg
pop
clc
mov
sti
lods
jle
and
add
lods
cmp
push
jecxz
adc
aas
mov
popf
cltd
pop
call
xchg
stos
add
in
mov
pop
cld
mov
sar
sub
clc
xchg
rcr
in
pop
adc
inc
decl
mov
or
xchg
jp
clc
push
jne
xor
inc
jmp
mov
pushf
cmp
jb
call
cli
or
hlt
jle
jle
leave
shll
and
fistpl
sub
ret
push
enter
mov
jle
test
inc
outsb
std
incb
clc
andb
lods
aas
lods
aaa
testl
and
xor
mov
or
clc
movsl
popw
push
dec
loope
fs
add
icebp
mov
add
xor
lret
mov
lods
and
xchg
inc
xchg
outsb
or
inc
dec
icebp
cli
push
imul
or
cs
outsb
push
nop
adc
outsb
test
stos
ja
test
mov
pop
cmp
ljmp
sub
mov
add
xor
xor
ljmp
cmp
xor
add
aad
jbe
cmc
adc
clc
lea
adcb
js
xchg
pop
or
test
loopne
mov
shrl
inc
lock
jmp
ret
test
mov
fdivl
mov
mov
movsl
bound
in
inc
sbb
mov
int3
in
jecxz
cmp
loopne
mov
cmp
or
fnsave
arpl
sbb
loop
push
and
mov
xchg
inc
xor
mov
data16
fldl
inc
jae
in
or
ret
mov
add
inc
inc
pop
aaa
rorb
hlt
sbb
test
add
dec
decl
gs
idivb
lea
push
in
jbe
bound
mov
add
cmpsl
pop
or
test
jns
jecxz
aaa
sti
movsb
or
dec
rclb
xchg
es
addr16
mov
jg
ret
mov
scas
enter
pop
out
test
push
inc
rorb
xor
pop
clc
pop
or
es
scas
lcall
testl
sbb
push
mov
add
movl
or
in
incl
dec
sub
adc
mov
pop
fdivrl
std
mov
mov
rcl
pop
mov
jge
out
or
lea
in
adc
adc
mov
sbb
jne
xor
sub
insl
repz
and
jmp
push
add
std
in
xor
mov
and
imul
std
lcall
xor
mov
out
sub
aas
cmc
jge
dec
cmpsl
movsb
mov
pop
inc
hlt
mov
dec
fldt
int
ljmp
or
lods
mov
es
sub
in
fnsave
dec
inc
cmp
dec
xchg
les
add
mov
hlt
inc
aaa
call
pop
hlt
jbe
mov
repz
or
insb
mov
dec
fs
repnz
mov
cmpl
add
or
neg
sbb
adcb
and
inc
pop
mov
out
add
aam
and
cmp
and
xchg
int
or
dec
add
jg
flds
aas
mov
addr16
adc
add
mov
add
rolb
fadd
test
fldl
jo
jae
ss
pop
ret
mov
mov
test
rorl
bound
rolb
out
das
ret
loope
pop
loope
dec
lret
pop
aam
add
lock
mov
roll
mov
mov
imul
fildll
sbb
mov
add
dec
cmp
and
outsl
loope
fistps
test
cmpsb
inc
mov
fdiv
shrb
jbe
add
jae
and
loope
fdiv
add
mov
rorl
mov
outsl
xor
or
and
test
dec
mov
sbb
mov
xlat
arpl
xchg
lods
and
fimuls
nop
int
lret
in
xchg
mov
add
inc
xor
mov
and
ja
sub
sbb
or
xor
pop
pop
fcomps
mov
push
or
mov
movsl
push
neg
dec
mov
mov
cmc
filds
and
xchg
push
dec
add
cwtl
in
imul
jl
or
negl
scas
mov
push
sbb
in
addr16
mov
mov
dec
sbbl
cmc
insb
ljmp
or
cld
dec
std
fisubs
push
sarb
mov
or
dec
dec
dec
out
jecxz
lods
adc
push
jns
daa
fidivl
stc
loopne
add
incb
add
stos
add
sar
add
add
add
sbb
or
arpl
push
jmp
cmpsb
and
imul
dec
cmp
movsl
pop
fcoml
outsl
lcall
pusha
scas
and
add
ficompl
sbb
call
dec
mov
ret
xor
add
mov
ja
mov
dec
mov
das
and
xchg
pop
and
addr16
jb
sbb
lcall
inc
aam
push
sbb
stos
jmp
test
lock
push
or
gs
push
cld
lret
mov
in
mov
sbb
insb
add
adc
xchg
loopne
push
jp
xor
inc
xor
add
mov
nop
dec
addb
inc
aam
aas
subl
and
push
and
cmp
mov
adc
xor
cld
xchg
fwait
and
jp
adc
mov
clc
pop
mov
or
jmp
jecxz
sbb
insl
in
movsl
out
xchg
mov
jg
lock
test
xor
adcl
xor
add
mov
sub
jns
pop
subb
test
inc
add
aaa
jbe
subl
mov
dec
or
mov
loopne
cmp
push
adc
xchg
loope
lcall
pop
out
sbb
jg
jbe
xor
inc
push
sub
orb
and
or
mov
das
ror
fisubrs
jl
outsl
mov
out
adc
stc
cmp
sbb
shll
lods
mov
ss
fistl
es
fsubrp
test
aas
pop
and
inc
into
inc
leave
fidivrs
gs
lcall
and
or
daa
push
dec
test
lock
adc
jl
push
orb
pop
mov
xchg
and
mov
mov
or
into
pop
dec
xchg
pop
jmp
mov
or
ret
ds
ds
loopne
xchg
adc
lea
loopne
and
subb
clc
add
loop
arpl
inc
fmuls
sub
imul
pop
mov
jge
out
inc
cvttps2pi
inc
pop
lock
mov
imul
dec
adc
stos
shll
mov
pushl
xor
imul
fdivs
or
sbb
fdivrs
ss
push
xlat
iret
adc
cmp
xchg
das
cld
sbbb
movsl
popa
and
dec
inc
mov
mov
sub
push
cmpsb
cld
xor
pop
add
jecxz
or
xchg
mov
cld
add
mul
xchg
sub
sbb
fists
orb
shll
jl
fdivl
pop
add
push
insb
insb
hlt
xor
adc
mov
rorl
movsl
cs
jl
idivb
andl
lock
mov
add
push
jmp
and
mov
sub
xlat
sti
gs
fsubs
jle
test
adc
aas
fsubr
outsl
gs
roll
popf
ljmp
cs
outsb
dec
pop
lock
das
and
insl
mov
pop
adc
and
dec
stos
dec
mov
out
adc
sub
ljmp
loopne
sub
push
sti
aam
or
jns
add
jo
or
xor
inc
xor
stc
and
dec
mov
aam
sub
shufps
cmp
fnstsw
les
add
cmc
fldt
addr16
dec
xchg
or
inc
pop
pop
imul
cmp
fldt
or
arpl
loopne
dec
sbb
sub
ds
loope
clc
jnp
add
fdivrp
xchg
xchg
rcrl
mov
data16
iret
and
push
jecxz
ss
and
jg
ja
add
push
inc
popa
outsl
sbb
jno
mov
xchg
sbb
sarl
fdivr
aaa
inc
iret
imul
mov
imul
fstpt
push
and
cmp
js
and
and
outsl
or
rolb
decl
sub
jo
add
mov
pop
ljmp
cmpsl
fs
add
dec
or
cltd
xor
dec
jle
cs
in
mov
int
sub
sub
xor
int3
push
inc
xchg
push
or
push
pop
jnp
pop
mov
push
fisubrl
outsl
adc
dec
nop
and
insl
jb
jae
jge
cmp
lock
mov
jne
mov
pop
jmp
or
mov
mov
int
cmp
mov
push
clc
gs
imul
jmp
push
push
aaa
mov
ret
fistl
jle
test
mov
add
jo
push
cmp
mov
roll
dec
xchg
pop
cmp
popf
adc
and
mov
sarl
scas
pop
out
adc
ret
stos
clc
xchg
rorb
lods
scas
imul
dec
fisttpl
movsl
arpl
adc
add
test
lret
jns
daa
sti
out
leave
mov
hlt
ds
subb
push
fcomip
push
loop
mov
xchg
lcall
xchg
jno
jle
sub
mov
shlb
lcall
shrb
jmp
sti
lret
nop
push
cs
incl
mov
and
lret
and
decl
or
adc
push
aas
fsub
pop
pop
int3
adc
push
mov
jmp
es
xchg
fucom
xchg
repz
test
aad
mov
push
sti
push
in
sub
adc
mov
mov
mov
mov
pusha
mov
mov
out
aad
mov
mov
add
sub
sbb
int3
out
push
cld
push
xor
and
bound
stos
cltd
xor
icebp
iret
js
push
xchg
xchg
es
cltd
cmp
lock
stos
enter
dec
testb
sub
out
mov
or
es
dec
jne
add
ljmp
std
fstpl
or
pop
xor
pop
jne
mov
inc
popa
je
insl
or
fs
int3
add
xor
mov
ds
leave
lahf
inc
pop
add
add
outsl
hlt
add
fmull
jmp
jp
lods
fwait
cli
out
pushf
mov
sub
loope
sbb
jg
sbb
dec
cmp
xchg
inc
add
aad
jl
mov
sub
sub
mov
cs
jns
test
incl
nop
sbb
repz
mov
fisubrs
clc
mov
fnsave
inc
inc
ds
rorl
inc
lods
stc
stc
roll
ljmp
popa
add
cld
jg
sub
sbb
jne
pop
in
sbb
jle
jne
outsl
pop
push
cmp
icebp
lret
xacquire
mov
cmpsb
jg
cmp
loop
jmp
or
mov
pop
ljmp
sbb
out
pop
adc
sub
adc
lock
adcl
int
adc
not
jmp
cs
or
jnp
ret
xor
push
sbb
jge
pop
mov
push
fucomp
or
jge
dec
ja
ja
dec
fsubp
push
test
xor
faddl
inc
mov
mov
add
sbb
or
movsl
adc
lret
jne
and
or
outsl
enter
add
pop
or
push
mov
rcrl
or
lret
dec
xchg
jecxz
lcall
shl
dec
dec
and
add
inc
push
ret
imul
es
insb
fisubl
cli
test
stos
sti
add
push
sub
jge
cmc
pop
jno
enter
dec
mov
sbb
lret
in
sbb
add
add
sbb
xor
or
dec
xchg
xchg
rol
shrb
icebp
sar
mov
push
xchg
sbb
mov
pop
and
movsb
mov
sub
mov
mov
scas
dec
fdivrs
sbb
das
adc
xchg
jns
ret
and
mov
mov
mov
add
sbb
push
dec
mov
mov
or
scas
shl
shl
xchg
lcall
xchg
outsb
cwtl
incb
adc
pusha
test
xor
stos
sarb
jbe
mov
sbb
and
icebp
sbb
sub
mov
or
pop
lcall
aaa
mov
enter
pop
fs
push
mov
cmpsl
push
inc
in
inc
sub
jne
mov
arpl
notb
dec
add
stc
rorl
mov
cmp
out
cli
outsl
fstp
cmpsb
sub
inc
int
mov
mov
fcmovb
bound
mov
fildll
shlb
in
dec
and
mov
aaa
and
scas
cmpsb
mov
sub
and
nop
test
ud1
pushf
push
pop
mov
movsl
adc
sbb
sbb
cli
push
in
in
xchg
push
pop
pushf
ss
in
jmp
and
push
cmp
lcall
lahf
sti
mov
mov
push
mov
hlt
repnz
in
or
xor
call
xor
pop
jge
cld
inc
pop
add
jbe
lds
hlt
inc
std
mov
loop
sub
xor
inc
adc
push
pop
adc
pop
dec
loopne
cmp
test
js
mov
sti
lods
notb
jmp
cwtl
inc
jnp
cmpsb
inc
mov
addr16
cmp
pop
scas
push
cltd
jmp
push
dec
or
lock
outsb
int
call
dec
push
mov
lcall
adc
push
pop
jg
or
orps
ljmp
imul
push
fistps
addl
and
int
mov
mov
sti
mov
aam
dec
lret
es
std
push
jecxz
or
xor
outsl
jg
inc
sti
mov
ljmp
dec
bound
scas
push
stos
xchg
xchg
pop
mov
loopne
test
inc
adc
pcmpeqb
inc
iret
xor
mov
fldt
mov
ss
addr16
shll
ss
inc
in
xchg
inc
in
clc
mov
mov
mov
loopne
or
push
enter
jl
xchg
dec
insb
sbb
sub
or
fisubrs
cmp
addr16
inc
pop
adc
jg
mov
or
or
jmp
adc
push
lods
cld
fsqrt
scas
sbb
jg
sbb
and
pop
mov
mov
subb
jbe
inc
adc
divl
aaa
nop
ret
into
lret
aam
jmp
lret
inc
outsl
push
ja,pt
ljmp
dec
popf
sahf
loopne
icebp
xor
xchg
mov
or
decl
leave
outsb
inc
mov
inc
xchg
mov
cmp
int
push
cli
add
sub
lods
pop
and
or
std
into
lods
push
mov
add
shl
insb
push
pusha
lea
dec
mov
xlat
shl
subl
loop
subb
jnp
inc
repz
push
sti
sub
jge
js
cmpsl
mov
outsb
mov
mov
shll
fiadds
subl
inc
add
xlat
ret
mov
xchg
mov
xchg
pop
lods
ret
adc
repnz
add
xchg
rcll
in
out
pop
jp
xchg
loope
jp
push
sbb
cwtl
cld
or
das
jo
and
push
cli
shl
pop
aam
push
ret
fnstenv
jnp
push
std
es
stc
pop
call
jae
andnps
test
sbb
sbbb
mov
inc
imul
adc
sbb
test
adc
stc
shrl
sbb
fisttpl
xchg
outsl
cmp
cmp
ss
mov
push
sti
push
dec
mov
nop
ja
jle
dec
sub
mov
mov
adc
jo
lret
jmp
divb
bound
xchg
ficoml
adc
data16
sbb
jg
sahf
fwait
sbb
cmpsl
cmp
xchg
jg
add
aam
mov
cmpsl
fadds
jo
movsl
movsl
mov
lret
sbb
js
inc
cltd
shll
insb
fcoml
stc
scas
push
scas
push
hlt
pop
push
mov
outsb
push
popf
xor
jge
dec
push
pop
ljmp
jo
dec
cmp
addb
push
cltd
and
ljmp
inc
int3
sub
cli
movsb
movsl
mov
add
xchg
cltd
push
push
or
or
dec
arpl
rolb
push
sub
and
cs
dec
clc
push
repnz
pop
dec
pop
xchg
ret
sub
and
ds
sub
cmc
sub
mov
pop
clc
insb
lcall
jg
mov
mov
lcall
aad
and
or
xchg
mov
ljmp
cmp
xchg
scas
movb
xchg
ds
push
dec
or
push
mov
mov
cli
js
loope
cmc
daa
jbe
fimuls
fsubl
inc
ja
lret
pop
lret
mov
add
sub
mov
pop
mov
and
sub
dec
push
rorb
inc
sarl
xor
idivl
and
cmp
jl
out
inc
mov
mov
mov
or
test
cmp
mov
decb
or
pop
sti
ja
movsb
mov
xchg
and
add
pop
push
imul
jae
in
jbe
das
push
sahf
test
sub
inc
push
outsb
sub
mov
in
lret
mov
push
xchg
fistl
cmp
icebp
push
or
cmp
sub
jp
scas
mov
or
lods
into
cs
push
mov
mov
pop
and
inc
idiv
xor
aas
testb
enter
dec
daa
pushf
std
popf
jmp
pusha
pop
mov
push
add
lret
or
xchg
jle
mov
fdivrs
sbb
mov
jecxz
test
cltd
xchg
or
sub
lods
sub
filds
push
lahf
lret
adc
sbb
adc
das
inc
ret
and
sub
mov
in
in
js
in
adc
mov
xor
in
mov
xchg
jl
sub
xlat
adc
add
data16
icebp
fmul
ret
lcall
stos
xchg
inc
orb
sbb
jnp
les
mov
gs
jg
jle
fnsave
pop
ds
inc
adc
ja
mov
and
xchg
leave
loopne
clc
lcall
cmp
pushf
pop
push
push
mov
push
loopne
add
sub
mov
mov
pop
mov
xor
ret
mov
and
nop
push
mov
sub
aas
cld
fmull
lock
fstpt
les
push
and
dec
mov
jecxz
sbb
mov
dec
xchg
sub
and
aam
dec
mov
mov
sbb
cwtl
mov
inc
cmp
and
std
call
adc
loop
mov
aam
roll
and
inc
jmp
inc
test
xlat
lea
xor
cwtl
loope
aaa
push
out
inc
push
clc
enter
icebp
pop
fcmovu
ss
nop
cmp
cmp
mov
rorl
aad
fisubrs
push
outsb
mov
arpl
clc
fsubl
outsb
inc
rorl
jg
movlps
push
add
xor
leave
sbb
nop
adcl
mov
or
jnp
xchg
divl
dec
adc
test
cmp
std
adc
push
lcall
sbb
arpl
push
mov
int3
fwait
aad
aaa
xchg
aaa
pop
outsb
imul
ret
jecxz
sub
mov
cmp
js
mov
iret
jnp
mov
daa
xor
xchg
sub
fisttpll
push
jmp
mov
test
fiaddl
pop
dec
xor
cmp
shlb
mov
xor
in
cmp
mov
in
inc
xchg
outsl
push
aas
add
inc
rol
inc
call
sub
xor
loope
rolb
and
xlat
xor
aas
nop
add
lods
cwtl
adc
dec
mov
fimuls
mov
dec
cli
sub
mov
mov
xchg
sbb
inc
sub
ds
or
leave
add
add
push
cmp
sahf
sbb
xor
fisttpl
xchg
and
cld
mov
aam
fstpt
in
adc
mov
sub
inc
cmpsl
push
js
push
stos
push
js
roll
push
sbb
cmp
add
mov
push
mov
sub
stc
inc
outsb
in
insb
fsubr
cmp
xlat
add
fucomip
dec
popf
sub
iret
sbb
lods
mov
add
fucomp
adc
mov
xor
in
mov
and
mov
or
minps
neg
dec
jb
xchg
imul
call
sbb
jge
arpl
sbb
xor
adc
pop
sarl
pop
sbbl
or
mov
adc
out
lods
inc
pop
sub
test
jnp
dec
dec
orb
outsb
into
mov
or
loopne
sbb
icebp
rep
subb
shll
xchg
lret
ret
sti
inc
fimuls
sbb
lock
out
jge
add
or
divb
sbb
cmc
or
jl
pushl
lea
jp
jno
mov
inc
mov
dec
mov
xor
mov
fcompl
dec
int
ret
mov
adc
daa
arpl
dec
hlt
mov
mov
pop
add
in
mov
adc
mov
rolb
loopne
leave
je
push
adc
mov
sti
jnp
btr
sub
adc
jge
or
dec
loopne
loopnew
mov
jp
add
sbb
mov
push
push
test
add
adc
mov
push
ss
push
ret
inc
popa
rorb
out
testl
popa
lock
pop
outsb
jae
outsb
jne
int3
clc
sbb
add
mov
push
xchg
mov
jae
inc
or
ja
movsl
jg
mov
lock
cmp
lock
lock
lock
inc
adc
sbb
in
pusha
mov
fisubrl
mov
sub
lret
jae
lret
jg
pop
loopne
adc
lret
inc
loopne
loopne
repnz
lea
push
enter
mov
out
cwtl
cmp
inc
or
mov
rclb
push
dec
cmp
mov
roll
cmp
scas
ret
or
repnz
push
mov
adc
pop
das
mov
push
cmp
sbb
inc
outsb
xor
push
push
mov
and
mov
inc
js
shl
clc
inc
subb
add
icebp
jge
and
mov
lock
push
push
not
cmp
push
push
pop
xor
enter
xor
repnz
pop
das
pop
add
jmp
push
add
sub
shr
pop
xor
add
sbb
jbe
cld
dec
push
clc
xor
dec
xchg
clc
jae
js
jno
xlat
push
insl
dec
leave
rorl
aad
sar
ret
push
dec
ficompl
sub
stc
xor
mov
push
mov
sti
lcall
push
lock
cmp
es
adc
mov
sub
in
dec
add
inc
sbb
out
jne
add
add
jns
mov
cmp
hlt
xchg
pop
outsb
vsqrtps
cld
add
in
fdivr
hlt
push
push
in
testb
jo
stos
in
dec
or
mov
popf
lods
scas
icebp
mov
cwtl
lock
dec
mov
jmp
aaa
cmc
popa
adc
cmp
enter
push
outsl
mov
and
movsb
add
inc
popl
add
pop
fisttpll
loope
js
inc
retw
inc
mov
jno
shlb
xchg
and
xchg
inc
xchg
pop
mov
nop
mov
cmpb
push
outsb
loop
mov
stos
cmpsl
dec
and
stc
in
test
sub
and
jmp
into
sub
lds
xor
mov
aas
stos
mov
cmpb
imul
pushl
in
adc
or
out
pop
inc
push
movzwl
ficoml
xchg
cmc
mov
push
call
ret
xor
daa
int3
mov
pop
cld
test
xor
pusha
daa
jp
sbb
mov
jle
add
sbb
popf
pop
and
mov
dec
pop
mov
push
add
push
mov
sti
lods
outsb
or
push
cmp
testl
sbb
outsl
or
adc
ljmp
hlt
xor
idivl
mov
sub
adc
arpl
pop
insb
shl
sub
insl
lock
pop
test
nop
outsb
pushf
fists
mov
push
mov
dec
push
xor
mov
xchg
mov
ss
addr16
mov
lea
cmc
or
repz
daa
insb
ret
sti
pop
cmp
scas
mov
sti
xor
jg
push
out
mov
jae
loopne
lahf
sbb
repz
mov
pop
pop
popa
pusha
pop
mov
pop
mov
pop
loopne
pusha
cld
push
clc
push
inc
in
inc
loopne
scas
mov
outsl
add
mov
cmpsb
test
jg
or
je
and
cmp
inc
repnz
dec
leave
jb
jp
push
clc
jnp
icebp
xor
outsl
test
sbb
pop
test
or
and
filds
js
imul
xchg
cmp
sub
std
xor
cmp
jbe
shrb
pop
xor
sbb
add
dec
sbbl
pushf
movsb
sub
cmpsb
popf
inc
loope
push
fisttps
inc
push
mov
pop
mov
ficomps
sub
xchg
out
aaa
cmp
jb
loope
jns
dec
dec
mov
test
or
int
cs
stos
dec
sub
and
jno
or
es
loope
mov
stos
jle
mov
testl
fwait
ja
test
leave
add
sbb
loope
aad
ja
test
sbb
popa
fisttpll
out
pop
or
cmpsb
xor
adc
mov
lods
sub
mov
ret
xor
sbb
adc
push
lret
cmp
ja
test
mov
arpl
std
xor
mov
xor
idivb
jl
out
lods
and
xor
jo
adc
sbbl
mov
sbb
lea
jo
mov
cmp
cwtl
loopne
inc
pop
iret
cli
dec
xor
addb
cltd
in
lret
sbb
mov
pusha
stc
lcall
stos
jle
rcl
test
lds
inc
std
lods
pop
jmp
pop
jmp
cmpsb
mov
clc
and
cwtl
call
add
test
xor
and
fnstcw
ljmp
adc
push
push
mov
cpuid
xor
out
movsl
mov
mov
jmp
lock
push
dec
pop
je
ret
outsl
ja
adc
movsl
ss
mov
mov
rcrl
mov
out
inc
and
xor
mov
inc
lock
cwtl
decl
hlt
or
fninit
pop
cmpsl
lods
jns
sbb
pop
mov
dec
dec
mov
dec
dec
notl
xor
xchg
lock
movsl
dec
xchg
or
and
or
popw
cli
lret
xor
js
mov
lock
push
shrb
push
jo
and
bound
jbe
mov
jle
mov
movsl
xchg
shl
mov
int
js
cmp
enter
sub
in
cs
or
jb
mov
inc
mov
mov
movsl
insl
icebp
mov
loop
cld
test
jl
addr16
cmc
push
mov
inc
sbb
mov
and
mov
jle
iret
pop
adc
jmp
pop
ret
adc
push
inc
dec
xor
sbb
fidivs
mov
cmpb
insb
sub
imull
aaa
aaa
and
mov
jp
fisubs
jmp
stos
add
xchg
and
pop
xor
in
out
sub
mov
in
mov
pop
test
or
cld
mov
roll
mov
fsubrs
insl
xchg
and
add
sbb
sbb
fcomip
inc
jae
jo
mov
and
mov
movsl
pop
int
and
adc
ja
lret
pop
loop
push
pop
es
inc
insb
mov
sub
fcmovb
add
ss
mov
cs
pop
cmc
jnp
cmp
adc
sbb
push
popf
jno
sub
adc
add
in
hlt
nop
mov
lds
dec
test
add
mov
outsb
adc
lds
dec
call
cld
inc
outsb
add
mov
or
pop
repz
arpl
adc
rcl
lahf
enter
add
lods
sahf
aad
adc
fs
mov
push
push
adc
cmp
jecxz
shl
cmp
bound
dec
push
leave
cli
mov
bound
adc
daa
loope
push
inc
das
aas
dec
cltd
mov
adc
dec
gs
and
mov
popa
in
xor
jge
dec
faddl
mov
fwait
les
loop
cmpb
dec
insl
movl
jne
outsb
mov
arpl
in
das
dec
xchg
jo
add
xor
je
mov
xchg
in
xor
inc
inc
dec
sbb
mov
idivb
xchg
lret
pop
dec
pop
testl
in
mov
iret
lds
loope
push
mov
inc
add
fcoml
andps
inc
enter
les
es
push
inc
fs
add
xor
iret
loop
lds
and
ret
dec
int3
sbb
loope
clc
xor
add
std
push
aam
jne
mov
imul
and
scas
or
mov
int3
push
sbb
ja
fisubs
lock
lods
and
test
out
js
and
ficomps
test
lcall
cmp
imul
mov
and
or
inc
xlat
dec
add
into
and
jo
xor
fsubrs
xor
push
fildll
ret
shl
hlt
push
jo
testb
inc
mov
add
sub
mov
mov
mov
or
jecxz
and
xlat
jnp
loope
addl
rolb
rorb
imul
outsb
popf
stos
pop
cwtl
mov
mov
data16
fdivrs
add
ret
jge
or
ret
cmc
push
jne
cmp
in
sub
or
adc
fimull
clc
xchg
mov
clc
and
movsb
and
cli
xor
out
or
sub
xor
insl
jne
mulb
subb
add
jae
fdivs
xchg
inc
jne
ficoml
in
pop
pop
or
ljmp
sarl
or
push
or
push
mov
loope
movsl
adc
push
push
ret
jnp
mov
cld
mov
jo
xor
rcll
fbstp
les
cmc
jge
dec
sbb
and
pop
sarb
push
shrb
cltd
js
call
mov
mov
xlat
cwtl
es
xchg
and
or
rcrb
popf
pop
or
xchg
enter
add
xchg
call
ret
lahf
mov
shrb
daa
mov
fs
jg
scas
insl
mov
andl
cs
xlat
sbb
mov
pop
jne
in
inc
dec
jmp
das
shrb
mov
mov
outsl
leave
out
movsb
icebp
inc
aad
rclb
popa
ja
in
out
xor
add
xchg
mov
insl
fildl
xor
mov
mov
mov
mov
aas
sbb
stc
xchg
std
addl
cmp
xlat
rcrb
pop
add
test
les
mov
or
mov
or
push
mov
dec
mov
sbb
pop
ucomiss
out
push
jns
cmp
pop
xchg
pop
or
loop
sarb
jae
arpl
mov
imul
inc
push
push
daa
jecxz
push
fistpll
fsubrs
imul
xchg
mov
cmc
sub
movsl
pop
push
adc
push
xor
ss
in
inc
push
adc
fcomps
out
fildl
ffree
fs
flds
lods
inc
js
jmp
cmovp
lahf
or
xchg
push
cwtl
in
lea
std
mov
fwait
sbb
ljmp
or
and
pusha
call
jg
adc
es
mov
imul
loop
or
pushf
sahf
sbb
pop
mov
out
je
mov
xchg
pusha
inc
add
dec
mov
dec
std
and
xchg
push
notl
pop
xchg
loopne
sti
mov
rol
mov
out
jmp
mov
lods
cs
mov
pop
shll
push
cmpsl
mov
cs
sbb
movsb
in
pushl
xchg
dec
enter
test
or
push
jp
jg
or
stc
and
sub
xorb
outsl
lock
ss
xchg
mov
test
lret
lret
pop
cli
mov
cs
xchg
sbb
test
sahf
dec
pop
xchg
sub
lds
inc
jecxz
mov
jne
packsswb
pop
pop
pop
fnsave
jecxz
cltd
mov
pop
call
out
subl
aaa
dec
mov
loopne
or
inc
loopne
add
ljmp
sub
and
outsl
mov
fimuls
xchg
mov
mov
js
bound
clc
sbb
xchg
push
in
test
hlt
adc
or
aaa
xchg
and
sti
xor
push
mov
jmp
fcompl
dec
ret
sub
cld
lock
jle
lahf
fildl
js
lea
mov
sbb
push
sub
push
pop
xor
cmp
div
mov
insb
or
sbb
es
jae
push
fisttpl
aam
sub
pop
cmp
dec
add
fists
in
je
test
or
rcr
dec
pop
jbe
or
fstpt
xor
int3
sti
icebp
andb
inc
mov
sub
popa
and
mov
lock
orl
cmp
sbb
call
push
test
pop
outsb
add
lods
mov
dec
jge
sbb
stos
pop
push
mov
testl
jl
lods
lds
shrb
xchg
xchg
mov
decl
das
cmc
adc
xchg
in
inc
int3
out
int3
xchg
cld
jg
sbb
nop
push
xchg
movsb
push
loopne
adc
in
lds
and
inc
insb
movsl
test
mov
add
loop
pop
clc
mov
cmp
in
ljmp
imul
xchg
cmpsl
cld
pop
dec
xlat
mov
push
push
inc
fbld
cli
test
push
shrl
jecxz
addb
fidivrl
mov
mov
hlt
and
pop
stos
sbb
nop
mov
mov
inc
mov
cmp
out
imulb
stos
ror
adc
add
sub
pop
xchg
sbb
sbb
jo
cmp
fisttpl
pushf
mov
pop
outsl
mov
xor
cmp
pusha
sahf
movsl
jg
out
xchg
ds
and
pop
mov
dec
cld
cld
pop
jge
mov
pop
xlat
add
movsb
and
fldt
push
inc
frstor
lods
icebp
cmp
dec
pop
pop
cwtl
sarl
jne
shlb
add
rorb
nop
jle
jl
and
cmc
pushl
fisttpll
lret
push
adc
and
mov
sbb
add
movsl
aam
mov
sti
pop
outsl
sub
xor
shr
pop
lret
mov
xchg
fisubs
jo
mov
and
jp
daa
pop
add
and
lds
fcmovnu
xacquire
cmp
sahf
in
int
ljmp
push
negl
jge
cwtl
cmp
and
and
popa
pop
push
mov
pushf
sbb
mov
inc
lret
jno
int3
jmp
je
cmc
xor
aaa
push
decl
mov
pop
clc
outsl
das
jl
cmp
sbb
stos
rorl
shl
cmp
inc
cli
and
fnstcw
mov
rcrl
frstor
xor
xchg
jg
push
and
pop
pop
mov
adc
cmc
pop
push
jmp
mov
push
xorb
int3
pop
xchg
idiv
pop
mov
fsubrs
insl
mov
or
hlt
inc
outsl
clc
add
movsb
nop
xor
mov
test
mov
mov
sub
jno
inc
and
xor
push
faddl
and
call
pop
cmp
stos
xor
stc
push
outsl
and
cmp
in
pop
stc
mov
push
mulb
notl
orl
push
lcall
cmp
push
sti
das
mov
fcoml
inc
add
popa
pusha
jmp
shrb
insl
adc
je
ror
rcll
outsl
mov
mov
clc
in
inc
lcall
dec
pop
sub
fildl
jmp
add
popf
add
mov
fildll
jecxz
mov
psrld
clc
or
push
adcb
lahf
mov
fistpll
push
testl
add
js
or
imul
outsl
mov
pusha
shl
es
mov
xchg
in
or
mov
mov
popa
lahf
icebp
pop
sbb
jne
jne
insb
rol
das
push
aam
and
mov
inc
jo
mov
adc
or
pushf
add
sbb
js
mov
sbb
or
hlt
sar
lods
jbe
test
insl
lret
mov
mov
mov
fst
cltd
test
jae
out
add
loopne
enter
pop
cmpl
lds
repz
and
movsb
push
push
dec
imul
cmp
mov
out
shll
shrd
repz
sbb
push
push
xlat
insl
popf
loope
adc
push
push
outsl
pop
mov
rclb
lahf
lock
push
test
lods
add
leave
mov
push
jmp
push
dec
loopne,pt
rcl
mov
pusha
jmp
aas
xchg
cmc
adc
fdivrp
pushl
inc
sbb
jne
xchg
mov
sub
mov
add
mov
mov
test
or
scas
incl
pop
ret
xlat
fistpl
push
jp
or
pop
cmp
adc
lea
push
stos
add
xor
jp
in
dec
sbb
pop
enter
mov
sub
jae
stc
in
fnstcw
mov
lea
dec
aas
cltd
add
gs
call
or
or
mov
mov
or
sbb
xor
mov
and
call
iret
sub
inc
inc
pop
jg
cmpsl
sbb
cmp
jne
fnstenv
adc
hlt
mov
stos
dec
inc
and
pop
dec
xor
mov
lret
fmuls
sbb
adcb
sub
inc
lea
adc
fcomps
fiaddl
stos
and
clc
push
xchg
inc
call
lock
ret
test
clts
xchg
movsl
repz
sbb
scas
stos
push
je
popa
push
clc
aam
fnsave
loop
add
jne
pop
cli
dec
mov
and
jns
adc
sbb
add
adc
inc
push
cs
add
je
xchg
test
cli
clc
inc
or
pop
insl
mov
adcb
jl
and
fildl
je
or
dec
jle
lods
mov
add
adc
push
inc
mov
filds
cli
frstor
xchg
pop
cli
lods
push
jno
aas
outsb
out
lock
hlt
and
pop
aam
and
fdivrs
xor
pop
outsb
ljmp
pusha
or
mov
mov
outsl
lds
add
mov
xchg
mov
and
mov
mov
add
pop
cltd
push
outsl
cld
mov
and
push
xchg
dec
jne
mov
adc
pop
mov
inc
scas
ret
arpl
push
pop
jp
jns
add
lds
cli
add
xchg
add
inc
mov
loope
mov
dec
js
es
jbe
rcrb
mov
into
adc
fidivl
cmp
addr16
bound
sbb
add
xchg
inc
push
push
and
cmpsb
outsl
lea
leave
inc
dec
sarl
mov
test
lock
dec
pushf
jo
sub
pop
fdivrs
push
sbb
jo
xchg
xchg
dec
fiadds
rol
dec
js,pn
jo
imul
xchg
jmp
xor
popf
dec
sub
or
adc
mov
insb
dec
test
imul
sub
stos
orl
cmc
lea
ja
pusha
cwtl
mov
outsb
imul
lahf
int3
adc
leave
das
jge
fsubs
ret
cmpsb
xor
lea
push
and
test
outsl
mov
rorb
idiv
sbb
popf
inc
rclb
data16
mov
mov
lock
std
xchg
mov
notb
clc
int
add
daa
sub
aad
cltd
sub
into
faddp
pop
in
ret
cmp
test
aas
das
and
aam
or
notl
xchg
loopne
sbb
call
inc
sbb
js
mov
testl
mov
or
out
inc
sbb
negb
sti
adc
jno
pop
mov
jnp
adc
orl
test
ret
add
pop
jg
pop
jp
ficompl
or
jns
adc
xchg
inc
enter
cli
adcb
fadd
sahf
sub
ss
add
jecxz
mov
add
mov
mov
push
jle
popa
ret
mov
nop
sub
rolb
add
sub
out
cmp
das
ds
adc
call
push
hlt
add
push
cmpsb
sbb
fsub
and
ljmp
mov
fidivrl
add
shlb
push
data16
lea
repnz
or
add
xor
shlb
fsubl
push
mov
enter
subb
fisubrs
inc
mov
add
movsb
lret
sti
mov
push
in
or
movsl
adc
cwtl
push
pop
fistpl
in
mov
fcom
pop
jle
push
lock
jo
das
in
add
jno
sub
add
repnz
mov
lahf
movsl
xlat
push
pusha
mov
xchg
adc
sbb
dec
xor
mov
dec
mov
loopne
add
orl
aam
rclb
cs
xchg
mov
test
pop
adc
cmp
xor
dec
icebp
test
adc
push
das
push
jmp
or
push
inc
add
ret
aam
or
test
dec
and
sbb
push
popf
and
or
lea
adc
lret
pop
in
sbb
test
nop
sti
pop
and
add
mov
imul
or
call
into
xchg
sbb
lcall
sub
sti
xchg
pusha
in
or
adc
out
stos
or
loope
add
addb
ljmp
out
or
mov
push
sub
sbb
adc
ljmp
test
jp
xchg
lea
fcoml
push
mov
or
push
shrl
mov
and
sbb
lea
add
jp
test
pop
adc
stos
lods
sbb
sbb
divb
lock
jbe
addb
in
xor
insl
dec
push
sbb
pop
inc
sbb
or
sarb
lcall
push
sbb
popf
add
clc
push
xor
sub
sbb
in
clc
xchg
jmp
iret
xor
repz
arpl
xchg
jnp
cs
mov
pop
xor
jnp
aas
inc
cmp
cli
mov
and
push
push
and
inc
mov
push
aam
adc
mov
xchg
sub
sub
jo
adc
adc
sub
sbb
shlb
add
sub
xchg
cmp
mov
popa
adc
cmp
loop
fildl
ret
add
call
xchg
mov
sbb
insb
inc
mov
ss
cwtl
jmp
adc
dec
mov
jge
pusha
adc
sub
cmp
sbbb
mov
inc
fcoms
mov
dec
lods
dec
push
mov
xchg
call
cltd
add
scas
dec
push
or
push
sbb
repz
lock
addr16
inc
xor
fdivrs
inc
mov
mov
cmp
loop
enter
aas
or
jge
add
jle
das
nop
cmp
xchg
filds
add
imul
pusha
xchg
cmp
fdivrl
sbb
rclb
dec
icebp
lcall
pop
sub
fcoms
add
bound
push
sti
repnz
add
push
lods
iret
std
xor
out
inc
mov
ss
adc
add
sbb
xchg
pop
in
sbb
pop
jb
cmp
dec
dec
outsl
andl
sub
loope
sbb
push
and
jns
mov
xor
mov
rclb
add
out
inc
shrl
mov
sbb
addr16
add
cld
daa
adc
enter
cmp
loopne
call
mov
cmpl
mov
jge
xor
dec
and
jo
cmpsb
rclb
jmp
addr16
andb
mov
imul
jo
in
add
into
add
daa
rcrb
ss
roll
pop
test
jne
pop
stos
inc
rolb
add
push
aaa
adc
outsb
xchg
cmp
mov
and
aas
push
push
cli
jns
cmpsb
mov
cmp
inc
cli
testl
push
test
loope
fisttps
fsubr
sbb
jmp
lcall
ret
push
sbb
and
mov
xor
push
and
in
jp
loopne
push
outsb
rorb
lea
xchg
mov
icebp
pop
mov
loop
pushf
imul
cli
push
xor
icebp
mov
add
xor
and
loope
adc
add
xchg
push
jecxz
pop
mov
fs
adc
enter
xor
sahf
or
call
or
push
ljmp
ret
dec
adc
push
addb
add
add
mov
push
adc
inc
or
jl
cld
fdivrl
bound
mov
cmp
sub
out
add
js
cs
inc
sub
cltd
mov
sbb
scas
xchg
call
add
enter
xor
fldenv
es
pop
jp
je
sbb
add
fdivrl
push
xchg
cld
sahf
lods
rorb
pop
adc
notb
fcoml
add
pop
fistpll
pop
add
and
loopne
aaa
sbbb
dec
inc
and
sbb
sbb
cmp
sbb
sbb
or
or
dec
in
and
inc
adc
les
fs
sub
es
add
or
lret
inc
aaa
jle
mov
bound
push
mov
loope
mov
or
es
adc
mov
sub
sbb
mov
pop
cmp
jo
popa
dec
mov
sub
lock
push
outsl
push
mov
mov
insb
cld
mov
movsl
or
or
pop
sub
dec
scas
or
jbe
jo
mov
insl
jmp
xchg
xchg
call
sbb
adc
dec
push
cwtl
roll
icebp
mov
and
xor
mov
fstpt
rclb
daa
lock
sahf
jnp
fimuls
loopne
jnp
fwait
iret
mov
out
add
or
xchg
and
adc
inc
sbb
cs
and
ljmp
push
jmp
mov
pop
mov
je
inc
lock
add
jl
int
leave
outsl
inc
fs
orl
clc
xor
ja
divl
push
std
lods
movsl
pop
or
xchg
in
call
ljmp
add
dec
add
lcall
or
clc
inc
cmp
xor
inc
xor
jle,pn
incl
faddp
loopne
cmp
sbb
xchg
add
cld
lock
add
sub
and
aad
mov
jbe
pop
jns
jp
enter
or
shl
loope
sub
loope
into
pop
call
rol
clc
add
addl
adc
mov
add
jg
rcll
mov
add
pushf
and
cmp
movsl
push
daa
push
fnstsw
add
dec
xchg
inc
hlt
dec
mov
add
fistl
aam
xchg
add
add
dec
in
inc
lahf
mov
xchg
add
or
bound
inc
imul
sub
das
sar
stos
add
add
incl
mov
fiaddl
push
dec
dec
mov
outsl
sarb
add
dec
xchg
push
fimuls
cmpsb
mov
sub
adc
adc
push
test
mov
imul
inc
sub
add
or
sub
or
jecxz
jbe
mov
js
in
push
adc
fisubrs
ljmp
fmuls
mov
pop
mov
xchg
mov
dec
push
sub
or
sahf
nop
arpl
out
or
scas
in
add
repz
adc
movsb
add
dec
cld
sub
and
aaa
bound
incb
into
add
and
outsb
inc
pop
je
aam
and
add
adc
in
and
jbe
cld
add
adc
inc
push
hlt
imul
addr16
push
adc
call
push
je
incl
adc
loope
add
push
push
cli
sub
cltd
mov
jnp
and
adc
ja
adc
mov
or
jno
sub
mov
ret
leave
mulb
mov
pop
xor
leave
mov
and
sub
in
mov
and
jne
jle
out
adc
out
cltd
lods
mov
idiv
xchg
push
jns
out
popf
dec
sbb
sbb
sub
adc
and
movsb
inc
loop
cmpsl
cmpsb
add
pusha
add
adc
test
add
pop
sbb
addr16
add
or
mov
push
xchg
push
inc
cmpb
sub
add
or
or
add
inc
test
incl
inc
jl
shr
dec
jae
sub
dec
popf
or
mov
movl
adc
sbb
mov
imul
pop
imul
mov
jnp
stos
stos
xchg
and
insl
or
pop
cltd
xlat
icebp
xchg
fstps
stos
mov
and
xlat
cwtl
sbb
test
mov
jno
addl
push
mov
jbe
cld
jl
add
adc
adc
sarb
push
rclb
inc
sbbb
cmp
aaa
mov
dec
xchg
adc
sbb
clc
jg
incl
inc
mov
and
lret
cmp
dec
pop
loope
stos
or
adc
movsb
add
jns
push
jp
jge
test
lahf
pop
mov
mov
push
pop
sbb
sti
lods
std
cwtl
add
cwtl
dec
push
cltd
movsb
jbe
cmp
pop
push
outsb
jg
insb
push
aad
mov
push
jg
ja
add
ss
mov
pop
sub
push
pop
je
dec
pop
and
and
push
fstpl
test
mov
push
aas
sub
pop
dec
movsl
jg
mov
stos
jg
jb
dec
xorb
mov
push
das
js
ret
push
jnp
jns
dec
sub
jo
lea
leave
adc
jnp
insb
mov
sbb
test
add
aas
xchg
adc
loopne
in
jno
xchg
nop
sub
mov
lret
or
enter
hlt
rolb
aas
adc
or
sub
clc
adc
imul
pop
js
jg,pt
mov
repnz
sbb
ficoms
mov
mov
aad
outsb
adc
xchg
sbb
hlt
out
jnp
inc
adc
and
sub
fnstsw
xor
clc
fldenv
add
loop
js
mov
add
sbb
xor
es
pop
add
stos
mov
inc
or
mov
mov
sarb
popl
mov
or
pop
cwtl
sub
xor
mov
inc
scas
jle
mov
aaa
or
push
or
mov
and
lds
inc
adc
inc
fsubr
insb
fdivrs
subb
cmpsl
fcompp
iret
cmp
sbb
inc
js
push
daa
xor
and
sbb
rcr
fwait
std
add
je
jp
xor
orb
test
add
push
gs
lds
sbb
das
mov
pusha
pop
or
lret
cmp
mov
pop
rorl
xchg
fcomps
call
fwait
cmp
mov
in
adc
das
or
adc
pop
loope
lcall
adc
fsubrs
adc
cwtl
sbb
jle
xchg
lock
shlb
cwtl
lea
adc
or
adc
jb
jmp
dec
adc
pop
jmp
adc
sarl
mov
dec
adc
pop
jnp
ss
dec
cld
rcr
rclb
fbstp
outsl
js
or
mov
xchg
mov
mov
and
sub
and
add
add
or
xchg
ficoml
mov
lea
popl
mov
sbb
xchg
jbe
jge
sar
insl
fcoml
test
jns
push
pop
sub
scas
pushf
stc
push
lds
lds
add
cmp
ret
inc
ja
pop
xor
adc
mov
cmp
add
xor
ja
cli
sbb
int
mov
pop
outsb
inc
pop
pop
stc
xchg
arpl
std
dec
pop
mov
sbb
fsubs
je
stos
outsb
rcll
jnp
or
xchg
mov
or
icebp
arpl
cmp
sub
xor
and
mov
mov
add
cli
push
push
fucomip
inc
xchg
jae
and
mov
dec
sub
add
imul
mov
mov
dec
xor
arpl
push
test
cmpsb
shrb
dec
lret
add
outsl
mov
add
inc
or
loop
mov
add
sti
imul
inc
inc
push
gs
sti
js
adc
jne
inc
jmp
pop
clc
outsl
aad
jae
mov
push
add
sub
xchg
adc
les
loop
call
aas
iret
ja
adc
jge
int
mov
lcall
insb
xor
orb
pop
ja
sbb
mov
call
fucomp
sbb
cmpb
push
mov
mov
in
je
sbb
adc
enter
fildl
movsb
mov
cmpl
mov
fwait
pop
pop
inc
push
cmp
jns
pop
or
cmpsb
fidivrl
xchg
xchg
jecxz
jae
push
or
sbb
testb
adc
mov
jne
sbb
movl
pop
insb
mov
mov
xor
lret
out
cs
out
sub
xor
dec
pop
test
adc
fwait
lahf
adc
sub
mov
out
dec
adc
or
cmp
push
dec
repz
sub
jbe
mov
shl
xor
roll
inc
cwtd
add
loope
or
sub
je
mov
xchg
cmp
hlt
xor
insb
lcall
cs
rcll
add
mov
ljmp
fisubl
pop
in
sbb
mov
ret
jmp
out
jp
mov
push
and
pop
imul
stc
mov
sti
dec
xor
jecxz
or
popa
mov
and
jg
insl
push
shlb
dec
ss
or
leave
inc
std
xchg
hlt
and
mov
movl
jne
add
pop
dec
pop
cwtl
xor
lods
shlb
imul
es
push
push
pushf
ror
repz
add
aam
xor
std
je
mov
and
adc
bound
xchg
lock
sub
adc
and
dec
pop
fcomps
insl
faddl
push
push
mov
aad
rcll
lret
enter
xor
mov
orb
mov
cmpsl
add
cli
sbb
or
addb
loopne
cmc
outsb
add
popa
push
shl
outsb
mov
sbb
cmp
inc
icebp
jg
arpl
das
imul
inc
mov
mov
xor
call
xchg
jge
sbb
ret
sub
mov
or
pop
cli
test
cmc
mov
adc
push
lcall
pop
icebp
femms
cmpsb
les
je
adc
add
xchg
in
test
pop
adc
add
cmp
sub
testb
mov
shlb
ds
push
pusha
imul
push
or
jno
add
std
sbb
pop
mov
inc
data16
xchg
out
sub
inc
out
xchg
or
jmp
hlt
or
repnz
mov
outsb
mov
in
cmp
pop
push
mov
in
pop
jnp
mov
and
mov
std
stos
adc
jg
pop
cmp
pop
jno
jnp
lds
add
icebp
push
std
dec
push
adc
mov
in
sti
and
jl
jo
icebp
push
out
mov
repnz
mov
faddl
xor
push
mov
inc
add
adc
fs
add
es
iret
stos
push
pop
pop
stos
std
stos
fsubs
jnp
inc
fs
pop
clc
mov
je
pop
stc
xor
and
jl
data16
mov
mov
outsb
scas
xlat
mov
clc
dec
in
lods
cmp
insl
fisubs
inc
pop
inc
inc
inc
je
cli
das
je
inc
sub
push
push
push
inc
pop
or
cli
decl
pop
and
xor
dec
mov
arpl
sub
loope
test
inc
or
in
jmp
std
outsl
jp
insl
or
jge
sub
push
dec
inc
psubb
out
pop
inc
js
lret
mov
in
pop
and
sti
outsl
mov
es
xor
leave
std
push
lds
jecxz
inc
into
rorb
xor
test
mov
jl
add
int3
clc
and
adc
roll
sahf
lret
xchg
sar
loope
scas
adc
lret
jo
push
leave
push
dec
xor
lods
push
sahf
sub
or
daa
mov
add
jb
inc
add
xorb
jecxz
xor
call
bound
add
pop
cmp
cvtps2pd
adc
or
mov
call
imulb
fadds
sub
and
int
sbbl
shll
jo
push
adc
nop
add
lods
cli
push
insb
fsts
bound
mov
insl
jmp
outsl
insb
adc
xor
fistl
and
xchg
push
clc
or
add
push
in
popl
pop
cli
das
jge
roll
sbb
sbb
fsubrs
aam
cmp
push
in
ljmp
jmp
aas
push
shlb
or
ljmp
add
xchg
ja
pop
push
mov
sbb
dec
mov
mov
sbb
call
rcrl
xchg
mov
xor
xor
push
xchg
pop
pop
add
inc
rcr
pop
int3
or
insb
in
mov
sbb
mov
das
xchg
das
jnp
and
inc
dec
nop
movsb
gs
add
push
lea
push
jmp
jo
rorb
adc
xchg
jno
push
aam
jmp
aaa
cs
cmp
mov
sub
int3
xor
sub
add
push
sbb
cltd
cmc
inc
nop
jne
add
dec
loop
fstps
fsts
std
dec
ja
dec
int3
pusha
adc
dec
jge
mov
inc
leave
test
sbbl
cmp
jl
gs
dec
jmp
repz
xchg
mov
adc
test
outsl
bound
jmp
sbb
dec
ss
rcrb
cld
nop
jecxz
or
pop
mulb
insl
call
xor
pop
jae
sub
ljmp
mov
fdivs
jmp
ret
push
mov
xchg
fcomps
lret
mov
sti
xchg
addb
repz
sub
shlb
cmp
pop
and
jnp
xchg
cmp
xchg
ret
mov
pop
mov
mov
test
xchg
insl
and
insb
push
mov
addr16
enter
fadds
mov
mov
inc
int3
and
mov
dec
push
loop
pushf
pop
mov
lds
adc
push
add
fs
mov
pushf
sub
sub
cli
push
mov
mov
je
movsl
leave
imul
mov
and
pop
xlat
xor
divb
xor
enter
adc
jmp
xchg
adc
adc
lock
or
fs
pop
test
shlb
mov
or
push
mov
jno
sbb
cmp
addb
stos
mov
sti
jbe
stc
jge
or
push
adc
fwait
mov
mov
pop
sub
fwait
cmp
roll
ret
cmp
xchg
inc
cmp
jne
adc
pop
inc
mov
ja
in
mov
jb
dec
mov
in
dec
jae
mov
sbb
stos
fiadds
movsb
jl
jp
mov
andl
sub
es
pusha
repz
mov
testl
or
subb
jbe
push
inc
mov
sbb
lods
dec
outsl
enter
push
sbb
scas
add
cld
mov
push
mov
scas
dec
leave
jne
mov
mov
jne
pop
bound
sbb
sbb
mov
dec
and
cmpsl
lods
movd
adc
sbb
mov
scas
mov
mov
lock
push
or
fists
nop
mov
push
sti
in
aas
rorl
call
outsb
jmp
xchg
mov
jl
shrb
or
add
loopne
mov
cwtl
arpl
out
rol
movsl
pop
sbb
adc
cs
jmp
xchg
js
mov
xchg
mov
call
pop
add
sar
xchg
bnd
arpl
xchg
xchg
mov
xchg
fsubrl
cld
rorb
dec
mov
scas
roll
fs
popa
arpl
rcrl
inc
add
cmpb
inc
or
ds
xlat
test
in
jecxz
sbb
insl
sbbb
mov
test
fucomp
lret
sbb
insl
jecxz
pusha
sub
inc
ret
mov
sbb
sub
add
mov
lods
adc
jle
inc
sbb
mov
or
push
loopne
cltd
mov
fisttpl
push
fadd
add
movsl
jbe
mov
push
and
pusha
dec
pushl
cmp
es
das
sbb
dec
cmp
adc
iret
movsl
dec
sub
cmc
jecxz
pop
push
mov
cwtl
push
mov
dec
test
jo
mov
dec
and
push
into
and
ficomps
push
mov
out
push
push
cmp
or
out
jmp
mov
inc
sti
pop
push
sbb
cmp
icebp
or
rolb
mov
call
mov
inc
mov
push
sti
fwait
pop
mov
dec
pop
in
ljmp
cmp
popf
inc
cmp
movsl
lret
add
xchg
or
ja
and
inc
outsb
mov
in
rclb
add
sbb
out
ds
inc
add
push
insl
nop
mov
lahf
xor
imul
test
adc
sbb
test
push
inc
repz
push
mov
adc
or
jne
dec
aam
inc
adc
fs
mov
jp
pushl
push
jne
insb
out
rolb
or
sub
pop
int
imul
add
fwait
mov
push
loopne
out
jge
or
add
call
mov
lret
int
rcrl
lret
jge
iret
clc
into
inc
mov
enter
pop
lods
cmp
dec
sub
mov
pop
xchg
stos
movsb
mov
js
jbe
pop
rorb
push
bound
imul
push
jl,pt
inc
and
xor
lock
mov
mov
inc
clc
call
and
lret
loopne
in
add
sbb
call
add
lock
ret
out
cmc
xchg
movl
dec
shlb
divb
mov
sbb
xacquire
call
stos
push
clc
das
test
ret
push
aam
sbb
rol
rolb
dec
test
sub
pop
shrb
mov
pop
rorb
xor
inc
push
rolb
adc
mov
pusha
ret
lcall
cmp
pusha
sub
outsb
cli
push
shlb
inc
push
push
inc
sti
push
cld
ret
dec
adc
sbb
or
mov
rorl
cvtps2pd
dec
jg
pusha
ret
inc
push
popa
mov
cmpsl
or
ljmp
mov
mov
arpl
lds
pop
loop
bound
test
cmp
sub
or
and
pusha
movl
push
movzbl
andl
or
fidivrl
clc
mov
or
out
lea
push
in
add
or
pushf
push
mov
xor
shl
in
popf
imull
or
cwtl
repnz
pop
sbb
mov
inc
popa
test
inc
lret
stos
push
adc
insb
call
adc
push
lea
push
imul
loopne
jns
mov
mov
jge
stos
xor
cmp
cli
pop
ljmp
ljmp
push
or
add
push
mov
mov
cld
sarl
adc
lret
addl
fwait
push
jmp
push
stos
stos
push
fpatan
dec
mov
aaa
rorl
in
jbe
rcr
repnz
push
mov
notb
mov
shl
lcall
aad
inc
psubsw
add
dec
rorl
lret
dec
fldcw
jge
xchg
cmp
imul
push
cld
lock
mov
cld
adc
subl
out
and
push
jecxz
aas
xor
push
es
mov
aaa
in
sar
sbb
fwait
jo
push
push
or
andb
pusha
push
ljmp
adc
decb
inc
fistps
adc
inc
lock
mov
sbb
or
inc
sub
add
jg
call
push
add
lods
cs
mov
cld
fbld
mov
cmp
mov
rolb
pop
push
insl
mov
call
in
and
not
inc
aaa
clc
shlb
fdivr
xchg
add
mov
add
or
pusha
pop
out
mov
adc
cwtl
and
sub
push
cld
mov
xchg
sbb
jle
mul
xchg
pushl
sarb
xor
and
ljmp
mov
stc
xor
in
or
push
mov
push
jne
mov
sbb
jno
xor
cmpsl
push
lods
mov
xor
jae
aad
mov
adc
mov
push
cltd
xchg
push
pop
dec
push
inc
test
sbb
push
sbb
enter
mov
pop
mov
nop
fs
scas
repnz
cmp
dec
mov
cmp
mov
cmp
mov
jecxz
fcomps
rcrb
aad
mov
lock
lea
lods
enter
pop
xor
pop
mov
iret
cmp
push
mov
dec
and
in
pop
stc
push
jmp
popa
pop
jmp
xor
adc
arpl
rorb
sub
js
test
sbb
mov
jge
dec
fucom
das
inc
mov
movb
movsl
lea
sub
dec
sarb
cld
sub
int3
js
std
push
nop
incb
inc
incl
mov
arpl
lock
ljmp
push
loope
lahf
cld
pop
jecxz
sub
inc
jnp
into
xor
sbb
sti
rclb
out
fcompl
dec
ret
add
pop
lret
mov
lcall
lods
or
ja
loopne
xor
outsl
cld
out
xchg
dec
push
mov
fsubp
outsb
clc
incb
jmp
loopne
xor
adc
push
aaa
fsubrs
push
mov
push
xchg
mov
sub
int
fisubrl
insb
hlt
loopne
fmull
xchg
dec
into
pop
mov
adc
enter
in
ret
mov
fucom
push
cmc
mov
inc
lods
cltd
lret
call
lret
cltd
addr16
jo
arpl
add
sbb
sub
cmp
test
in
mov
push
lods
jp
xor
mov
pop
mov
push
clc
cmc
add
push
insb
sub
and
icebp
mov
sbb
push
sbb
push
scas
pop
clc
xchg
rclb
leave
sub
jno
add
movl
loope
mov
pop
jno
ljmp
ljmp
xor
xor
add
xchg
push
sub
dec
das
mov
movsl
pushl
ficoms
lret
jp
mov
and
mov
das
ret
mov
adc
mov
lds
out
nop
stc
or
aaa
push
mov
mov
mov
and
loope
ljmp
xor
lods
push
inc
pop
dec
nop
inc
and
lcall
dec
lods
mov
pop
mov
or
mov
ja
jg
or
subb
mov
fdiv
inc
in
popf
fdivs
das
mov
sti
mov
cs
and
pop
aad
cmpsb
adc
mov
pop
or
cmp
inc
mov
add
loop
and
cwtl
adc
call
inc
mov
or
movsb
xor
sbb
outsl
fwait
imul
and
call
mov
icebp
ffree
cltd
sbb
out
dec
call
push
xor
rcl
cld
test
jmp
pop
outsl
jg
mov
sbb
jno
add
fisttps
adc
adc
mov
push
sub
sub
lods
sub
js
pop
and
fmull
sub
mov
ret
hlt
and
inc
push
jae,pt
pushf
jp
jbe
movsb
push
data16
das
xor
sub
fmuls
xchg
lea
mov
mov
jecxz
mov
xor
sbb
add
mov
in
push
aad
lea
lods
or
inc
rorl
mov
enter
insb
mov
inc
pop
test
xchg
into
cld
sub
sbb
rcl
popf
inc
inc
dec
insb
int
mov
jnp
cs
inc
cmp
imul
cld
outsl
pop
inc
stc
push
into
jne
aaa
int3
es
std
lcall
pop
jbe
cmp
les
xchg
outsl
jge
syscall
jae
cmp
loope
cld
decl
lods
ficomps
popf
mov
inc
gs
mov
push
lret
and
jp
test
movl
dec
loope
pop
stc
push
dec
xor
mov
bndstx
and
mov
mov
movsb
mov
or
lods
jmp
mov
ret
mov
sub
xchg
and
sub
mov
add
enter
lea
stos
mov
sahf
xor
pop
and
or
cmp
mov
add
adc
mov
mov
rol
cld
adc
sbb
cli
dec
pop
pop
push
mov
jge
push
adc
pop
and
adc
sbb
shll
das
mov
mov
adc
inc
xor
es
mov
loope
test
or
and
aaa
inc
adc
fsubrs
jnp
das
scas
enter
mov
mov
inc
lods
jge
jg
inc
test
addb
stos
call
in
inc
fistps
inc
sbb
clc
push
ljmp
loopne
scas
in
shlb
divb
mov
sbb
and
pop
jbe
or
push
ret
mov
and
andb
arpl
adc
mov
stos
pop
jmp
inc
inc
adc
and
jp
loope
sub
add
ljmp
fwait
aam
call
and
jl
xor
insl
rclb
or
inc
push
add
push
cld
insl
loope
inc
dec
pop
mov
xor
pop
xor
inc
ret
dec
push
lock
jmp
aam
in
decl
das
mov
lea
iret
jl
xchg
incb
mov
rcll
jg
xor
sub
imul
cmp
ljmp
frstor
movsb
jmp
cmpb
sbb
jo
fdivs
xor
mov
xchg
aaa
push
stos
push
std
sti
scas
add
scas
repz
pop
push
push
pushaw
jecxz
and
fnstenv
inc
mov
cmp
push
push
push
arpl
or
pusha
sub
fdivrl
bound
xor
push
push
mulb
push
push
fnsave
mov
lock
outsb
fwait
outsl
arpl
mov
fucomp
lea
cld
fstps
lahf
mov
adc
mov
adc
cltd
mov
ret
xchg
insb
jbe
xchg
xor
test
fs
fcompl
or
sub
subl
push
xlat
fsubrs
jl
mov
fisttps
fildl
inc
pop
repnz
cmp
jns
dec
fwait
mov
jno
inc
aas
loop
lret
jnp
daa
mov
adc
cmpsl
cmp
js
popf
sarb
xchg
mov
sub
pop
jmp
xchg
cli
dec
pop
loopne
repz
mov
lds
cmp
mov
xor
rcrb
pop
aad
cmc
sub
xchg
andl
rclb
les
dec
or
adc
shl
jle
std
sub
pop
mov
cli
inc
mov
outsb
int
dec
mov
mov
push
lock
std
push
mov
xor
jecxz
mov
outsl
push
sarl
sub
ljmp
cltd
iret
xchg
and
or
pop
adc
mov
inc
push
loopne
pop
pop
add
roll
push
call
xchg
jle
add
sub
mov
xor
addl
xor
sub
movsl
dec
jne
add
adc
pusha
add
adc
push
shrb
fwait
mov
testb
jns
cmp
inc
pop
or
push
inc
jl
and
repz
inc
jae
cs
add
add
dec
adc
sahf
stc
sbb
mov
mov
push
cld
not
mov
jbe
add
add
add
push
clc
mov
add
add
test
xchg
sbb
jo
pop
adc
pop
outsl
lahf
xorl
test
mov
dec
and
mov
sarl
xor
add
idivl
sub
mov
push
int
adc
mov
fnstenv
bound
or
ljmp
lcall
js
test
jne
adc
or
jb
inc
and
lcall
xor
push
aam
jo
addl
mov
js
xchg
into
mov
sub
add
inc
aad
add
cmp
pop
data16
loope
stos
rolb
nop
aad
pop
inc
pop
popa
lret
mov
mov
jl
xor
jae
xor
and
or
cmp
add
aas
or
fisubrs
or
rorl
out
cmp
jl
test
popa
loope
orb
in
sbb
cmpsl
add
inc
sarb
sti
xor
lcall
and
shrl
jl
xchg
add
dec
add
sbb
adcb
sbb
adc
pop
sub
jb
andl
push
std
sbb
push
leave
push
adc
jl
aam
adc
dec
aaa
sbb
push
insl
jo
clc
roll
divb
imull
gs
aaa
sbb
cmp
inc
mov
jecxz
adc
cmp
aam
mov
imul
jae
jle
cmp
clc
leave
or
aad
test
xor
or
jnp
aaa
jle
fisubl
sbb
mov
push
adc
pop
lcall
popf
and
hlt
cmpsl
push
out
pop
mov
loop
push
mov
ds
jb
outsb
cli
aaa
jne
jg
cmp
out
mov
sub
lock
pop
stos
cmp
leave
lret
pop
push
outsb
mov
mov
jg
sbb
incl
addb
push
pop
xchg
jae
je
mov
out
inc
inc
sbb
lods
xchg
fcmovbe
es
sbb
lds
mov
push
roll
jnp
lock
inc
inc
mov
or
pop
adc
sbb
int
stos
fldt
lea
pop
pop
mov
js
arpl
fildll
pop
loop
mov
sub
add
push
gs
scas
xchg
mov
mov
mov
mov
movsb
mov
pop
or
inc
push
movsl
mov
jle
in
lds
fisubrl
mov
xchg
adc
push
pusha
cmp
ret
jge
movhps
fisubl
lret
jg
dec
enter
inc
repnz
fwait
lock
or
call
int
ret
adc
pop
stos
xor
nop
fidivs
ljmp
mov
incb
pop
push
mov
aas
adc
jns
mov
inc
xchg
loopne
jb
xor
jns
and
addl
das
and
xchg
lods
jl
and
lods
jle
and
xorb
sbb
push
xor
jb
and
je
and
jg
movsl
imul
ljmp
out
xchg
rcrl
jbe
add
add
out
jnp
xor
mov
mov
test
add
or
shl
call
push
aam
push
push
inc
lea
inc
cmpsb
outsl
inc
mov
push
hlt
and
add
lea
mov
mov
or
mov
mov
adc
xchg
sahf
add
mov
xor
sbb
ret
enter
adc
cli
sub
rcll
xlat
inc
cmpsb
loop
test
push
inc
mov
cmp
jnp
mov
loopne
rorb
add
add
mov
dec
loop
push
test
adc
sub
pop
hlt
pop
jno
inc
repz
add
xor
aas
inc
pop
lcall
or
les
xlat
repz
or
filds
repnz
inc
jae
xor
add
mov
xchg
mov
icebp
pop
lds
jae
adc
or
bound
or
adc
cli
or
in
pop
sub
jp
icebp
ficoml
outsb
pop
addb
mov
push
outsb
mov
les
jae
xor
mov
loop
inc
xor
and
test
aam
pop
xchg
popa
xor
mov
lds
xlat
inc
jbe
cltd
xor
or
lods
int3
jl
mov
push
sub
ret
std
xor
inc
adc
xchg
add
int
xlat
fsubrl
cwtl
daa
push
rclb
mov
mov
pop
mov
out
in
jae
mov
repz
in
sbb
push
jne
sub
cmpsl
mov
clc
call
decb
cli
fcomi
add
push
push
push
hlt
and
xor
xchg
aam
mov
sub
mov
inc
sbb
imul
hlt
rolb
aaa
add
and
mov
icebp
pushl
ret
ljmp
movsl
mov
in
addr16
jecxz
inc
mov
mov
lcall
adc
enter
jae
mov
sub
fdiv
adc
mov
jo
fwait
add
int3
add
into
addl
enter
rorl
or
inc
and
loop
cli
addr16
xor
inc
dec
push
sbb
and
mov
int
cs
push
sarl
sarl
or
inc
aad
out
rcrb
movb
in
cmpsb
enter
lods
imul
fadds
nop
adc
shlb
push
mov
fistps
adc
add
das
sub
adc
xchg
or
outsb
pop
les
scas
outsl
lahf
in
subl
in
mov
lea
gs
xor
repz
test
loope
jne
decl
fwait
mov
dec
mov
pusha
shlb
jmp
sarb
adc
dec
sbb
sbb
outsl
inc
hlt
add
or
jmp
cmc
test
fsubrp
adc
mov
cld
inc
add
repz
je
mov
test
mov
push
mov
push
addr16
sub
in
testl
push
std
repz
scas
sbb
add
adc
or
xchg
mov
cmp
pop
dec
mov
push
inc
js
sub
xor
push
adc
inc
sarl
inc
test
rolb
push
mov
adc
adc
jb
adc
call
in
push
pop
js
sbb
sahf
out
cli
and
shll
nop
call
lahf
in
mov
xor
in
sbb
mov
push
test
andb
mov
fnstcw
mov
mov
enter
int
scas
add
push
rcrl
add
idivb
add
push
mov
cmp
cmp
fimuls
mov
ret
mov
das
or
push
in
ljmp
mov
cmp
dec
xchg
or
adc
sub
cmp
adc
or
mov
cmc
in
inc
incb
cmpsl
cmp
jnp
addr16
sbb
daa
inc
mov
dec
outsb
cmc
sarb
add
adc
jnp
jnp
inc
in
cmp
add
rorl
cwtl
sub
and
out
subl
or
or
dec
xor
jmp
mov
movlps
sahf
mov
addr16
or
icebp
or
mov
adc
pop
les
pop
ret
lock
or
lcall
scas
je
add
dec
add
roll
or
push
dec
shll
pop
outsl
push
xor
aam
loope
push
pop
xorl
hlt
mov
inc
push
inc
or
decb
add
fistl
lea
adc
daa
dec
push
arpl
or
push
mov
ljmp
or
incb
and
test
je
xchg
cmp
push
les
add
dec
clc
add
sub
sbb
dec
cmc
inc
adc
jl
push
mov
cmp
adc
dec
xchg
cmp
mov
mov
out
aad
les
test
ljmp
mov
jle
loopne
sti
mov
or
or
cli
push
pop
lret
sub
pop
xor
inc
dec
mov
inc
outsb
push
lods
mov
sbb
push
in
mov
mov
lods
or
inc
sti
mov
xor
xor
sub
lret
push
notb
in
shl
sbb
int3
mov
outsb
ljmp
out
ljmp
fildl
inc
mov
pushf
bsr
cmpsb
add
sbb
in
jge
inc
out
mov
push
cmc
test
daa
mov
inc
jo
inc
outsl
adc
adc
in
pop
outsl
fsubr
fisttps
repz
aam
imul
sub
xor
sub
sub
outsl
sub
add
mov
mov
xor
aad
dec
mov
or
pop
ss
fs
or
je
pusha
loope
push
xchg
inc
or
pop
xchg
cli
outsl
scas
cmc
sub
sub
jp
imul
lret
mov
mov
sbb
in
xchg
clc
jg
pushf
sbb
stos
ficompl
mov
adc
pop
data16
test
addr16
bswap
loop
mov
lahf
cmp
xchg
test
sbb
fsubs
std
push
sbb
add
sbb
push
dec
rcll
push
sbb
push
inc
pop
nop
add
sub
adc
xor
push
cwtl
movsb
xchg
mov
ficoms
aaa
push
pop
rolb
jns
jg
mov
sbb
add
push
xchg
sbb
push
mov
out
clc
sub
ret
jbe
add
incl
add
scas
and
mov
out
jno
pop
bound
xor
lahf
repz
dec
jns
outsl
add
mov
ljmp
mov
ret
icebp
xor
cmp
jb
mov
in
ja
adc
mov
sbb
aad
mov
push
mov
insb
aam
xchg
jnp
xchg
dec
mulb
js
fucomi
add
sbb
mov
test
pop
pop
lcall
and
adc
mov
movsb
movsb
mov
cld
das
dec
test
push
and
clc
sbb
jp
jnp
xchg
jno
jbe
cmpsb
or
aad
fcmovnb
int3
je
inc
lock
add
lret
or
add
test
and
push
jecxz
cmc
mov
idiv
aad
bound
mov
mov
repz
scas
aaa
mov
test
and
xchg
jle
push
icebp
sbb
lret
mov
je
sbb
and
jmp
lods
mov
xor
jg
das
inc
adc
push
pop
cmpsb
add
sbbb
pop
xchg
nop
mov
add
mov
outsl
cmp
lea
sub
mov
jl
sub
push
ljmp
sbb
add
xchg
lods
sbb
fs
orb
test
xlat
icebp
lret
sbb
gs
and
push
sbb
call
into
mov
outsl
xchg
fisttpl
fistpll
rol
fimull
aaa
or
repz
mov
insl
sub
and
icebp
mov
lock
pusha
roll
adc
sahf
xor
sbbb
push
or
mov
test
pop
or
or
mov
aaa
clc
clc
or
lcall
mov
mov
push
stos
or
dec
dec
lcall
push
push
cmp
fld1
or
test
dec
movsl
or
mov
test
inc
ret
and
xor
xchg
fcmovbe
or
push
and
pop
push
gs
nop
push
pop
jbe
loopne
out
or
shrb
popa
repnz
fistps
or
jecxz
int3
pop
nop
jecxz
add
pushl
cmpb
jae
inc
push
imul
mov
lods
adc
testl
stos
adc
ljmp
sub
out
fdivr
add
push
and
mov
insl
call
in
rcrb
lahf
jl
xchg
xor
outsl
neg
mov
aas
icebp
lock
es
and
decl
add
xlat
das
insl
adc
push
in
pop
push
iret
iret
jmp
call
xor
mov
test
clc
push
mov
pop
rol
mov
pop
pusha
mov
lea
or
ret
test
push
mov
orl
lods
cltd
idivl
xchg
adc
push
push
inc
in
data16
cmp
repnz
scas
mov
je
mov
mov
js,pt
cli
or
shrb
adc
mov
sub
ja
xorl
aaa
fimuls
push
pusha
dec
imul
adc
ror
cmp
mov
adc
in
or
xchg
sbbb
or
enter
push
out
sbb
mov
scas
mov
aad
ljmp
enter
mov
xor
inc
sbb
daa
addl
adc
xlat
rorb
dec
mov
loope
inc
inc
mov
out
push
das
push
test
push
gs
stos
scas
adc
shlb
sub
and
inc
fadd
xchg
andb
fmuls
es
iret
adc
pusha
out
dec
enter
jne
aas
jp
repz
xchg
iret
push
in
dec
mov
and
in
mov
mov
pusha
xchg
jb
sub
xchg
test
sub
mov
ja
out
mov
scas
adc
xor
rol
in
cli
pop
jl
pop
push
jmp
add
rol
call
jge
xor
clc
mov
add
pop
fmuls
or
add
rclb
xor
jo
xor
xchg
pop
or
idiv
push
lock
sbb
push
push
xchg
cs
mov
ss
insb
add
add
mov
add
mov
inc
adc
xor
test
mov
jno
std
mov
ficomps
push
ror
out
or
jg
inc
push
mov
jb
imulb
les
and
outsb
std
test
mov
push
movb
sub
fs
cld
dec
or
mov
daa
sub
sbb
and
rol
mov
adcl
mov
or
jle
roll
punpckhdq
fwait
ss
pop
out
sub
mov
fists
sti
addr16
mov
pop
adc
jg
ljmp
insl
mov
jne
mov
cmp
push
cmpsb
dec
popf
fwait
das
filds
and
push
or
test
jmp
and
bound
inc
jl
or
test
imul
das
pusha
lods
mov
addl
outsb
sbb
mov
mov
movsb
xchg
add
popl
push
or
mov
dec
jo
mov
inc
dec
std
sbb
outsl
adc
adc
movsl
dec
fisubs
std
outsl
sub
cwtl
icebp
and
dec
repnz
add
or
or
outsl
sarl
aad
lds
stc
mov
lcall
and
push
leave
lds
cld
mov
xor
sub
inc
jg
addl
cld
outsl
push
sub
mov
xchg
roll
lahf
pop
inc
push
std
lds
and
test
mov
aam
or
fwait
ljmp
sub
popa
and
inc
mov
fistpl
lahf
dec
adc
add
in
test
pop
lcall
insb
adc
lock
mov
mov
lcall
sub
sbb
xchg
fdivs
lahf
decl
jo
cld
pop
push
and
loop
lahf
add
pop
movsb
jne
adc
shrl
inc
inc
int
adc
xor
pop
or
mov
xchg
ljmp
dec
ljmp
lret
rclb
lret
mov
inc
aaa
pushl
jecxz
scas
pop
dec
push
pop
add
mov
adc
in
neg
dec
and
add
jge
rorb
cmp
and
daa
sbb
inc
xor
subl
sbb
lods
push
jg
ss
cmpsl
ds
ret
in
jno
xchg
mov
stos
push
cli
aaa
stos
add
mov
hlt
lahf
push
push
or
xchg
out
test
pop
cltd
inc
and
add
sub
sbb
icebp
nop
add
sar
test
insb
sub
loope
imul
mov
add
jge
adc
test
mov
pop
mov
lcall
or
jne
xchg
pop
loopne
and
in
rcl
jmp
dec
rol
add
aad
mov
in
jne
mov
push
call
ds
xor
push
lods
popl
cmp
lahf
iret
xor
loop
in
jl
je
pop
je
push
add
or
rol
fstpl
mov
test
cwtl
movsl
sub
outsb
mov
out
push
adc
lods
xchg
add
outsb
es
cmpsl
ss
push
addr16
and
cs
pop
jg
enter
jp
js
cmp
mov
sub
sub
cmpsl
fcmovnbe
shlb
dec
cmpsb
loopne
in
pop
pop
mov
push
lahf
insl
stc
push
pop
mov
stos
mov
pop
pop
divl
lds
movsl
orl
xor
pushf
das
into
ss
xchg
xchg
push
push
cmpsb
pusha
jecxz
mov
dec
mov
xchg
ret
sbb
adcb
xchg
arpl
lods
mov
jbe
sbb
sbb
cmpsb
or
aaa
das
sbb
stc
les
fists
loop
les
movsl
lret
cwtl
add
or
fcmovnu
sbb
inc
out
add
xchg
mov
test
xor
or
dec
rcll
ret
add
rol
mov
rorl
or
es
add
mov
adc
subl
sub
mov
roll
xor
inc
rorb
adc
cmp
cli
mov
push
dec
mov
outsb
enter
in
push
adc
out
clc
mov
mov
stos
ficoms
loope
movsb
add
mov
cmp
fwait
xlat
getsec
jo
je
and
jo
pop
loope
jnp
push
mov
mov
push
orl
sbbb
and
jbe
push
cwtl
add
test
lods
sbb
mov
jne
clc
test
cld
and
pop
insl
sbb
jb
decl
pusha
push
popa
push
adc
sbb
inc
lock
movsl
outsl
adc
push
lret
lcall
pop
loope
incl
adc
in
fmuls
mov
xchg
xor
xchg
push
ret
shrl
mov
sub
mov
aam
or
cmp
inc
inc
pop
fisttpll
dec
aad
mov
clc
xor
add
sub
lock
or
popf
sbb
notl
sbb
sahf
mov
and
jl
pop
lods
mov
mov
lcall
or
cmp
sub
pop
mov
cmp
aaa
insb
jo
jae
scas
push
dec
or
lea
add
scas
push
movups
ret
pop
jl
sub
or
jle
cld
iret
out
jmp
popa
pop
cmp
std
mov
jnp
shlb
clc
dec
nop
aam
and
int
cltd
lock
pop
mov
rclb
add
sbb
mov
sarl
pop
jp
sbb
sbb
pop
ficoms
dec
mov
mov
aaa
jae
out
sub
mov
in
xor
mov
mov
rcr
ljmp
xchg
addr16
mov
shrl
mov
adc
xchg
inc
xchg
jno
jbe
add
icebp
sub
shrl
sub
jp
jmp
ret
lock
inc
inc
sub
test
sub
push
xor
mov
mov
dec
cld
test
push
test
cmp
ja
movhlps
nop
jmp
pop
push
fcompl
fcoml
add
pop
sub
push
frstor
sub
imull
mov
pusha
jae
cmp
and
cld
or
pop
sbb
sbb
aaa
adc
mov
aad
cmp
dec
inc
inc
cli
and
sti
movsl
sbb
cmp
inc
xor
lahf
stos
idivl
push
rolb
mov
mov
xor
jge
cmp
add
inc
insl
cld
inc
push
push
mov
dec
cld
aas
ss
inc
shlb
lds
ljmp
inc
push
or
jne
rorl
sbb
sub
fidivrl
add
mov
or
xorb
jo
mov
rcr
in
enter
xchg
pop
xchg
xor
rorl
call
bound
sbb
outsl
pop
push
dec
dec
insl
inc
and
mov
jle
scas
das
jb
int
cmp
pop
adc
and
lock
sbbb
add
in
and
jo
sub
sahf
shrb
add
ret
pusha
orb
imul
pusha
pushf
or
fs
out
in
adc
gs
xor
push
mov
sub
sbb
mov
dec
mov
rorl
xor
lcall
mov
cmp
nop
rclb
mov
add
fwait
push
or
push
clc
out
push
addr16
inc
fstp
stos
out
enter
ret
outsb
cmovno
push
add
pop
mov
push
adc
jo
ja
inc
and
ljmp
adc
test
inc
rcl
cmpsb
pop
imul
jae
mov
jg
stos
lret
adc
sub
stos
fcomps
mov
or
adc
in
shl
movl
xchg
imul
push
or
mov
aaa
adc
gs
scas
icebp
ljmp
cmp
or
add
jp
cld
adc
dec
cld
and
mov
scas
pop
push
xor
sbb
cmp
push
jp
into
test
cmc
loopne
pop
sbb
mov
jno
orb
lods
jp
fimull
bound
call
xor
xchg
sbb
adc
mov
xchg
pop
sbbb
sbb
adc
add
fldl
rorl
or
mov
mul
push
or
jmp
mov
jo
adc
int3
inc
sbb
stos
je
ss
lock
xlat
xchg
inc
int3
lock
sub
pop
inc
int3
sbb
sbb
adc
add
in
add
mov
xchg
jae
imul
lds
addb
fidivrs
sub
lret
lret
mov
add
xor
shll
les
xor
cmp
xchg
mov
and
arpl
pop
push
push
xor
sbb
or
add
lret
icebp
outsl
mov
test
shrl
imull
and
or
leave
mov
inc
js
lret
or
xchg
test
adc
int3
xchg
ret
push
adc
jnp
xchg
and
dec
daa
jne
jge
fimull
test
or
insl
jmp
push
xor
and
cmpsb
cmpsb
test
sub
movsb
sarl
push
sub
int
or
mov
push
sahf
ret
test
mov
insl
rolb
inc
repnz
pushf
loopne
lods
data16
fmull
retw
fwait
cs
add
aam
push
jo
stos
call
shll
mov
popa
sub
mov
sub
cmpsl
inc
addb
mov
aaa
sub
adc
xchg
and
sbb
call
lods
push
mov
ja
shr
jae
sub
xor
jp
outsl
cmp
push
vpsrldq
lock
mov
sub
cld
jp
cltd
scas
xor
cld
add
add
xchg
push
test
xchg
mov
sti
jp
roll
bnd
les
in
loopne
mov
ss
xchg
les
lret
add
or
test
push
adc
pop
cmp
inc
out
sbbb
jae
mov
das
add
fisttps
mov
cmpsl
dec
das
sbb
add
xchg
pmuludq
scas
imulb
jno
aas
xchg
rclb
data16
add
or
pop
and
inc
test
test
mov
jbe
push
push
mov
pmulhw
aaa
sahf
cmp
pop
sbb
cmc
ret
cmp
sub
jno
sub
sbb
stos
mov
call
out
shlb
push
add
jno
push
sbb
inc
mov
dec
mov
int3
shlb
inc
jg
mov
imul
rcrb
bound
lahf
insl
add
or
dec
adc
insb
jbe
in
cmp
insb
negb
sub
xor
mov
or
inc
les
or
cmp
pop
pop
loop
dec
idiv
clc
and
mov
aaa
test
lret
push
dec
call
lods
stos
fwait
mov
cmp
mov
adc
xor
scas
push
test
or
lea
pop
jo
fwait
or
or
dec
inc
pushf
cmp
dec
in
xor
fiadds
cs
mov
stos
adc
inc
js
dec
popa
add
scas
xor
jo
pop
pop
sbb
ss
mov
and
lds
daa
adc
jmp
sbb
add
pushf
int
xchg
ret
cmp
mov
imul
adc
sbb
jo
sbb
inc
out
pop
sbb
jecxz
xor
or
dec
cmc
pop
sub
daa
or
push
xor
nop
add
subl
xchg
push
sub
outsl
pop
sub
add
lret
insl
popa
clc
xchg
xor
ja
nop
or
mov
fidivrl
add
movsb
pop
ret
cs
ljmp
hlt
cwtl
push
sti
inc
in
jle
repz
sbb
push
jne
test
mov
pop
inc
fistpll
in
mov
mov
jb
scas
in
add
test
cmc
mov
neg
shr
pop
mov
test
jne
add
adc
mov
call
mov
add
sti
subb
mov
push
mov
jb
add
lds
jle
filds
add
adc
or
or
out
pop
mov
jg
push
cmp
inc
addr16
lcall
inc
rcrl
jp
or
das
add
cmp
imulb
xlat
aam
popa
arpl
inc
clc
inc
mov
rorb
pusha
sti
test
lret
mov
outsb
pop
and
pop
jg
or
or
pop
daa
add
mov
and
outsl
mov
mov
loopne
add
das
xorb
xchg
fisubrl
scas
pop
xchg
negb
xor
add
or
xchg
inc
test
add
mov
or
adc
inc
add
push
mov
xchg
mov
pusha
add
or
clc
outsl
out
subb
mov
lds
xor
outsl
xchg
cmp
bound
incl
ss
add
mov
lret
ja
orb
dec
add
mov
push
cld
jecxz
mov
or
cmp
mov
add
std
xchg
int3
and
clc
sub
test
add
cmp
add
inc
sti
and
sbb
mov
or
in
xchg
lret
jo
jle
ss
jae
pop
add
pop
cld
mov
pop
push
aam
adc
in
xchg
mov
mov
ficomps
pop
pop
loopne
jmp
inc
dec
pusha
push
add
mov
int
fistpll
mov
std
pop
xor
imul
jl
movl
test
jnp
adc
call
adc
add
sub
inc
add
cmp
outsl
in
or
cmp
mov
shll
adc
repz
dec
or
shll
incl
daa
or
sbb
lods
jns
and
outsl
push
or
pop
sar
lea
pop
cmpsb
lods
scas
addl
mov
dec
aam
mov
jmp
mov
add
fsubrs
sub
popl
int
mov
jno
add
and
aaa
pop
mov
push
add
mov
test
cmpb
xor
jne
lret
in
mov
repnz
arpl
in
xchg
shll
mov
inc
pop
jle
sub
mov
xor
xchg
sub
push
sbb
jle
add
scas
jno
add
inc
mov
sbb
ljmp
add
inc
adc
std
jg
add
inc
cmp
aad
inc
rol
push
imul
mov
push
sbb
sub
and
add
xchg
jle
test
in
test
pop
xor
loope,pn
fildll
mov
and
js
jns
add
jne
imul
rcr
rolb
pop
mov
mov
call
jbe
push
or
repz
mov
push
push
xlat
inc
cmp
aaa
jbe
xor
je
inc
or
imul
fcoml
js
sahf
xchg
push
loop
and
cmc
repz
fwait
lcall
adc
add
sbb
cwtl
jb
clc
inc
lds
nop
sbb
adcb
pushf
or
mov
or
inc
or
orl
pop
les
xchg
pop
add
shl
scas
clc
dec
pop
jo
dec
inc
sbb
or
pop
sbb
es
jg
daa
mov
cmp
add
and
lret
pusha
out
aaa
incl
inc
ds
out
add
inc
lock
jns
inc
fbld
push
pop
xchg
pop
mov
inc
pop
leave
pusha
mov
xchg
sub
add
orl
cltd
out
scas
pop
push
cmpsl
cmp
xor
cmp
sbb
mov
sub
or
mov
mov
add
adc
add
enter
add
shlb
adc
fnstenv
xchg
mov
xor
orl
cld
mov
pop
dec
bound
cmpsl
push
icebp
sbb
std
cmp
xchg
imul
jge
xchg
or
cmpsb
stc
adc
inc
add
fidivrs
adcb
cmp
pop
adc
sbbb
fwait
adc
icebp
inc
mov
add
inc
push
push
nop
push
in
jns
dec
sbb
fldl
dec
mov
lds
and
inc
and
and
jo
movsl
daa
lods
std
test
mov
out
add
and
int3
and
cmp
push
sub
ret
xor
lret
daa
cmc
and
repnz
xchg
xor
stos
psubb
and
xor
xlat
or
add
mov
scas
jl
or
movsb
xor
mov
xor
sub
or
popa
enter
jmp
ljmp
sub
push
outsb
call
lea
lahf
aam
call
mov
fsubs
loope
rolb
fmull
ret
push
outsl
or
jo
lret
adc
lret
call
pop
movb
mov
xor
notb
sahf
dec
js
es
pop
or
out
je
pop
inc
int3
mov
or
or
sbb
add
das
cli
adc
ja
test
ja
cmp
popa
addb
inc
rorl
addl
aam
add
cltd
inc
sub
mov
jo
adc
and
aam
test
outsl
in
cmc
data16
lcall
es
pop
ljmp
cmp
arpl
out
rcr
pop
and
xchg
fdivl
in
and
adc
call
dec
and
dec
cmp
pop
sbb
adc
cmp
shrl
dec
lds
mov
dec
jge
add
add
mov
enter
and
pop
push
int3
dec
insl
cld
arpl
sub
xor
inc
add
or
mov
add
xlat
pop
mov
cli
in
push
lahf
dec
xchg
cwtl
enter
mov
inc
inc
inc
enter
xchg
bsf
dec
das
mov
push
sbb
xor
ss
test
sti
lret
addb
rorl
cwtl
or
scas
xor
int3
adc
insb
push
test
or
lea
rorb
das
aam
xor
aam
inc
jae
push
pop
cmpl
std
mov
xchg
mov
cmp
in
or
test
add
add
or
sbb
inc
fwait
in
adc
rcll
sahf
add
mov
lods
cmp
lcall
mov
ret
shll
test
popf
adc
popa
sub
push
into
rcrl
or
push
sbb
push
sub
fsubs
fsubr
pop
and
out
cwtl
idivb
push
xchg
sbb
adc
sbb
jnp
fistpl
xorl
les
cltd
dec
mov
mov
xor
je
xchg
cmp
mov
insl
ljmp
test
out
mov
cmp
ja
dec
aam
inc
jnp
negl
dec
sbb
xchg
iret
jne
pop
lahf
into
mov
cld
adc
or
cmovno
xchg
mov
and
inc
sbb
arpl
addr16
incl
mov
xor
test
sub
add
inc
shlb
dec
sbb
mov
in
mov
movsb
in
dec
testl
push
rclb
enter
fdivs
fistl
mov
loope
push
inc
push
sub
je
jns
scas
push
hlt
push
ljmp
fs
jo
shlb
faddp
pop
in
mov
xchg
xor
and
outsl
inc
in
jmp
in
bound
in
or
shr
fildl
sarl
js
and
adc
ficomps
adc
test
and
add
pop
insb
push
movsl
mov
or
leave
jg
out
mov
in
mov
lds
loopne
sbb
in
xor
jo
and
call
and
add
test
push
frstor
mov
adc
or
cmc
push
outsl
js
jmp
jle
ret
and
add
push
adc
insl
je
mov
push
mov
fdivr
xchg
push
push
inc
xchg
pop
add
adc
ret
inc
sub
or
push
stos
jge
fsubs
les
push
shlb
outsb
add
sbb
inc
xrelease
mov
pminub
and
xor
xor
iret
adc
loop
addr16
inc
lods
lds
inc
adc
fwait
mov
adc
xor
push
pop
clc
outsl
mov
jae
and
rcrl
sbb
std
pop
popf
jmp
inc
pop
adc
fidivrs
loope
stos
fwait
pushf
je
add
xor
leave
mov
inc
ss
lock
cmc
fmull
adc
or
fistl
cmp
xor
cs
loope
fistpl
xchg
mov
sub
adc
mov
add
xchg
rcr
pop
clc
add
or
inc
add
inc
out
inc
xchg
sbb
cmp
out
push
or
sti
pop
sbb
pop
adc
pop
rcl
mov
mov
mov
or
iret
dec
or
push
mov
sub
fists
inc
sbb
shl
pop
js
fisttpll
push
scas
push
roll
jo
xor
out
cmpsl
jns
xchg
ss
out
mov
mov
sbb
insl
or
ja
adc
xor
les
out
inc
mov
push
imul
jecxz
push
repz
inc
adc
movsb
mov
fstpt
and
sbb
rcr
in
push
lcall
aad
stos
popf
add
add
mov
leave
pop
shr
xlat
pop
test
xchg
fucomip
cmp
lods
or
jns
inc
inc
aaa
sub
loope
int3
dec
mov
das
add
push
adc
add
test
inc
inc
stc
insl
sahf
cmp
and
or
rcrb
and
fisttpl
and
cmp
jg
inc
xor
mov
pop
in
addr16
push
or
cmp
or
adc
sub
mov
in
or
adc
arpl
jae
pushl
sti
mov
sbb
movsb
imul
adc
sbb
xchg
lret
pop
fcmovnb
mov
es
fldt
cld
xchg
jge
push
loopne
xor
jle
lock
jmp
ret
stos
pop
sub
testl
subb
cmp
testb
adc
inc
add
adc
call
sub
scas
aaa
rcrl
nop
mov
push
sti
add
sahf
xor
and
jecxz
mov
jne
xchg
adc
pop
mov
mov
shll
inc
popf
sub
dec
int
jge
arpl
pop
decl
leave
sub
xor
inc
cmpsl
outsb
jns
jmp
outsb
cli
pop
out
pop
fstps
lock
mov
jmp
fs
aaa
push
pop
jne
fs
rcl
jle
cmpb
lahf
xchg
mov
lods
lea
pop
sub
out
leave
push
mov
loop
inc
pop
mov
ret
xchg
or
pop
mov
mov
sub
mov
inc
insl
insb
pop
and
jne
adc
dec
jecxz
daa
std
enter
imul
inc
push
mov
imul
ljmp
sbb
cmp
lcallw
lods
mov
inc
pushf
popa
stos
flds
jo
ret
dec
lods
pop
shll
loope
cltd
imul
inc
jne
or
mov
gs
add
adc
add
mov
pop
aad
das
inc
out
jl
aas
add
ds
sbb
sbb
insl
sahf
jne
arpl
out
mov
loop
mov
sarl
imul
jbe
nop
call
nop
mov
mov
xchg
add
mov
roll
popa
lock
adc
ret
loopne
aad
pop
xchg
out
lcall
addl
mov
out
pop
imul
jns
xor
pop
je
push
xor
mov
lods
jno
stos
call
jl
clc
testb
push
inc
jne
insl
mov
fmuls
push
and
push
inc
lea
outsl
xchg
cmp
push
sub
sub
or
iret
push
pop
jge
rol
sbb
mov
sub
xchg
jnp
cltd
cmp
dec
mov
loope
pop
mov
lock
push
cmp
clc
sarl
add
sbb
pop
mov
push
mov
test
xorb
mov
testl
in
ss
test
add
push
cmpsl
shll
scas
std
and
int3
jmp
push
out
pop
cld
sbb
inc
mov
fmull
outsb
pop
mov
push
push
inc
ljmp
mov
shrb
shlb
inc
outsb
pop
icebp
add
hlt
sub
call
mov
and
xor
and
add
test
dec
xor
fistps
or
stos
add
and
inc
out
jb
ja
xorb
lret
clc
ljmp
shll
inc
mov
cs
inc
cld
mov
sysret
jne
cmp
insl
out
jl
push
adc
jmp
xor
add
vmaxsd
out
jb
adc
jecxz
jbe
jbe
mov
ljmp
pop
fistl
subb
mov
pop
mul
add
push
mov
push
mov
mov
add
andb
int
mov
inc
psrlw
push
repz
movsb
xorb
daa
stos
mov
lret
test
xor
movsl
jle
and
test
xchg
xor
cltd
sub
mov
jle
stos
adc
clc
daa
or
jmp
cld
lret
movsb
push
push
sbb
test
inc
add
aad
or
dec
scas
sahf
push
add
inc
add
cmp
and
push
data16
push
pusha
negb
xchg
mov
xor
sbb
xchg
cmp
stos
pop
lock
test
movl
adc
mov
adc
pop
or
out
adc
dec
inc
in
xor
or
pop
xchg
clc
inc
xchg
test
mov
adc
cmc
add
mov
adc
clc
fimull
jl
push
aad
xchg
inc
jno
and
jl
sub
add
cmp
push
pop
loopne
lds
pop
inc
rclb
push
and
out
vcomisd
or
mov
dec
icebp
adc
nop
push
jbe
xor
sbb
inc
shlb
mov
call
inc
pop
pop
cmp
jl
and
push
lcall
xorl
dec
push
cmp
rcr
loope
add
jmp
je
or
gs
cmc
movzwl
sub
dec
jecxz
push
pushf
xchg
push
pop
jg
lods
sarb
loopne
test
sarb
fwait
aam
xor
clc
das
mov
inc
sub
loope
lret
popf
cltd
lods
sub
shrb
notl
std
jg
inc
add
add
xor
aas
jne
sub
fs
sbb
fs
arpl
js
fmulp
push
gs
aas
mov
jge
mov
pop
insb
lods
std
and
inc
jg
cmc
push
push
in
arpl
lods
add
push
daa
add
sub
pop
ljmp
fdivrs
fdivrs
xor
jo
rcrb
push
jnp
jle
or
cmp
jne,pt
aaa
push
push
daa
sti
and
mov
scas
test
jnp
sbb
sub
imul
adc
mov
add
ljmp
lcall
roll
mov
xchg
sbb
dec
cld
imul
shl
pop
jge
test
jae
in
loope
or
sub
mov
mov
jb
adc
pusha
pop
sub
aas
add
fcmovnu
ss
sub
int3
xchg
jg
jmp
push
scas
jnp
bound
jg
jae
mov
push
mov
mov
movsl
ret
icebp
test
sbb
aad
pop
adc
mov
out
in
mov
add
sti
inc
arpl
rep
adc
cmc
push
das
mov
xchg
fwait
adc
cmp
fdivr
stos
in
les
cs
sub
mov
pop
pop
in
xchg
add
push
stos
xor
int3
push
mov
jg
push
mov
xor
mull
stos
mov
fs
decl
aaa
jnp
outsl
push
dec
adc
icebp
dec
dec
lods
lock
add
mov
sbb
rep
call
xor
pushl
sahf
and
push
adc
sahf
adc
es
mov
fs
negb
ds
push
insb
outsl
jne
cld
fimuls
or
lret
into
inc
xchg
lret
imul
popa
loop
das
add
mov
orl
pop
insl
push
xchg
pop
pop
aaa
adc
fistpll
pop
pop
sbb
ret
xchg
mov
incl
dec
or
movsb
mov
cmpsb
mov
mov
sub
mov
mov
inc
xor
sahf
inc
call
and
shll
cmp
in
leave
test
pusha
out
mov
sbb
outsl
in
cltd
adc
add
loop
xchg
push
push
push
rcr
mov
jbe
mov
shrb
clc
xchg
or
mov
inc
dec
xor
call
mov
xor
add
daa
xor
jbe
clc
jno
insl
sti
pop
jne
movsl
push
push
push
icebp
imul
xor
xor
loop
and
movsb
mov
mov
imul
outsb
cld
sbb
fcmovbe
sbb
daa
popf
int3
pushf
sbb
sub
pop
and
fmull
bound
xorl
push
push
std
ljmp
mov
cmpsl
mov
dec
loopne
pusha
xchg
sub
or
mov
repnz
flds
sbb
inc
jl
ja
sti
sarb
cmp
shlb
rorb
pop
roll
push
ds
testl
pushf
jno
in
in
fsubl
push
in
rorl
out
lea
jecxz
and
xor
lock
or
pop
data16
inc
add
insl
and
les
popa
add
mov
and
mov
cld
cld
clc
mov
sub
les
push
sub
inc
add
mov
mov
sub
adc
push
mov
jmp
add
mov
cmp
inc
and
in
fbstp
dec
adc
pop
add
pop
pop
or
and
or
mov
dec
js
add
or
popa
call
and
lds
xchg
cmpsl
sbb
cmp
xor
shl
jo
inc
cltd
dec
inc
das
add
insl
sbb
add
pop
adc
pusha
add
in
dec
mov
add
add
rol
mov
mov
add
mov
dec
int3
lds
stos
jge
cwtl
cltd
adc
push
popf
push
adc
loopne,pt
imul
orb
inc
loop,pt
or
insl
mov
loopne
add
add
sub
movsl
fnstenv
or
xor
cmp
lret
int3
adc
inc
out
out
dec
add
cwtl
loopne
jb
dec
sub
or
int3
lret
add
sbbl
push
out
test
popa
nop
cmp
jne
jo
jo
outsl
adc
mov
icebp
push
pop
push
inc
insl
cli
loopne
scas
addb
push
push
ret
xchg
mov
jnp
add
push
mov
test
cmp
cmp
loopne
add
add
add
push
lods
das
adc
push
add
loop
add
in
inc
mov
push
mov
pop
add
or
outsl
inc
fcompl
adc
push
jmp
inc
jae
push
test
shr
mov
mov
lcall
adc
jae
xchg
fucomip
cmpb
sbb
or
jo
test
ljmp
mov
in
pop
aaa
outsl
aad
pop
mov
pop
lcall
scas
dec
arpl
ds
xor
stos
daa
stos
test
mov
adc
mov
add
lahf
andl
repz
jg
enter
xchg
jl
sub
das
inc
mov
and
and
xlat
dec
mov
lcall
xor
jmp
dec
lds
incl
jae
push
loope
xor
inc
les
adc
jg
subl
pop
inc
add
sbb
or
mov
adc
dec
movsb
push
ljmp
movb
cmc
pop
gs
loopne
sub
mov
test
and
decb
js
jmp
lock
outsl
fs
testb
arpl
push
ljmp
sub
pop
cmp
mov
inc
lods
test
mov
add
mov
pop
inc
pop
push
or
data16
in
add
sub
mov
sbb
filds
mov
xchg
mov
pop
lcall
push
push
add
inc
add
and
sub
and
test
ss
div
cmpsb
dec
xor
shll
out
and
dec
and
cmp
jns
cmp
add
shlb
xchg
imul
fnsave
lods
jecxz
in
fisttpl
dec
mov
js
mov
adc
dec
add
movsb
add
mov
call
movb
xchg
repnz
movsl
fwait
clc
bound
mov
stos
push
sub
inc
jmp
outsl
rorl
cmp
cmp
scas
xchg
dec
sub
cmp
cmpsl
sub
xchg
add
fstl
mov
fdivl
loope
loope
jb
sbb
sbb
or
insb
in
or
mov
icebp
xlat
icebp
daa
stos
pop
mov
adc
out
jge
push
inc
inc
pop
and
fsubs
mov
inc
hlt
or
push
push
push
aad
mov
add
arpl
mov
mov
add
mov
es
arpl
in
pop
sub
and
dec
jecxz
neg
sub
hlt
mov
inc
mov
sbbb
and
jbe
ss
mov
stos
fisttpl
in
ret
mov
or
test
jmp
lds
adc
inc
cmc
push
and
fucomip
dec
mov
jnp
or
sahf
and
and
out
jne
lods
mov
xchg
dec
mov
orl
out
add
fwait
clc
movsl
mov
and
insl
icebp
in
mov
dec
jno
and
or
jno
rol
lahf
insl
push
sbb
outsl
jae
lret
fmuls
iret
xor
ljmp
je
mov
sub
pop
xchg
pop
loop
fnstcw
pop
sbbb
and
mov
adc
xchg
clc
adc
dec
inc
xchg
adc
cli
xor
aad
inc
bound
je
mov
mov
sbb
push
jb
and
imul
sbb
test
mov
mov
dec
pop
mov
or
xchg
scas
pop
jmp
jecxz
sub
arpl
cmpsb
jns
fadds
jnp
cli
inc
fwait
lds
jg
mov
sahf
sarl
ret
sub
call
push
fisttpll
scas
loope
das
jmp
mov
adc
add
dec
add
in
fbstp
jle
cmp
shl
stc
cmove
xor
jg
mov
aaa
or
popf
adcl
rcll
mov
scas
scas
or
stc
push
fisubrl
jle
scas
mov
ret
out
lock
vpsubw
push
outsl
cld
movsl
outsl
push
rcrl
xor
clc
xor
in
decl
sbb
mov
xchg
inc
incl
ret
adc
add
pushf
pop
xchg
inc
add
dec
jno
daa
or
mov
cmp
mov
outsb
xor
mov
call
xor
xor
sub
mov
imul
loope
je
adc
jns
xor
cmp
scas
mov
add
notb
push
or
inc
jne
and
adc
jbe
mov
cmp
ljmp
sub
psrad
cli
fistl
mov
pop
and
ret
mov
add
jno
adc
jge
jne
xchg
incl
enter
and
cmp
lock
sub
in
insl
mov
inc
jmp
in
aam
aas
in
mov
call
ja
pop
add
loop
xchg
lock
mov
je
lock
sub
inc
iret
push
clc
mov
roll
inc
sbb
cli
decl
push
cmp
sarl
jmp
rolb
cltd
test
es
out
push
xchg
push
ljmp
sbb
jne
adc
sub
lcall
sbb
push
or
fwait
mov
movsl
adc
inc
int3
and
fstps
roll
std
fisttps
dec
jmp
xor
pop
outsb
adc
mov
and
cmp
js
scas
test
mov
pop
push
xor
fiadds
or
fcmovnb
push
adc
sub
cmp
adc
mov
rorb
fdivl
jp
inc
movsl
loop
adc
repnz
pushf
xor
bound
xchg
sub
out
add
clc
push
mov
filds
mov
or
jecxz
push
inc
notb
mov
loope
into
cli
jp
call
shll
add
int3
lods
add
push
xlat
or
push
shll
loop
arpl
cld
pop
mov
sbb
cmp
sub
push
adc
hlt
dec
pop
leave
addb
out
pop
xor
push
mov
and
cwtl
push
inc
jae
xor
bound
jbe
add
out
insl
in
rorb
jbe
mov
and
pop
std
testl
mov
pop
mov
pusha
daa
int3
xor
jle
ret
sub
stos
flds
dec
orl
insl
mov
or
xor
cs
mov
dec
lea
test
add
inc
call
cmp
cs
pop
push
dec
push
shrb
fwait
add
sbb
mov
xor
ret
in
imul
xor
andb
push
or
push
inc
hlt
mov
flds
add
sub
test
cmp
into
inc
adc
fildl
mov
mov
jmp
in
jae
int
movb
sbb
rorb
sub
xchg
es
mov
cmpl
mov
sub
sbb
dec
in
and
mov
lret
add
fidivrl
cmp
mov
dec
testl
leave
or
dec
mov
jl
xchg
out
mull
aaa
lods
inc
clc
jmp
add
mov
movsb
in
adc
mov
leave
add
add
lods
mov
arpl
cmp
movb
gs
repnz
sbb
fwait
xor
shrb
xchg
and
repnz
test
push
lods
jl
std
outsb
inc
cmp
push
mov
xor
sbbb
outsb
or
shr
pop
imul
gs
inc
dec
repz
xor
mov
add
pushl
rol
sub
xchg
add
add
loopne
mov
jge
imul
jle
add
roll
jmp
mov
xchg
dec
mov
dec
dec
mov
sbb
mov
mov
pop
mov
sti
sbb
xchg
cmpsb
jle
adc
inc
std
ja
sub
xor
imul
inc
xor
mov
adc
test
lret
jae
push
sbb
push
call
pop
test
fadds
and
mov
rcrb
aam
call
cmp
adc
pop
fldt
xor
inc
mov
jbe
and
mov
or
cltd
lods
cld
jg
inc
mov
ljmp
xor
inc
dec
mov
or
xchg
push
loope
jne
add
outsl
jo
je
je
in
scas
cmpsl
es
push
fcmovnbe
sbb
xor
test
sub
xor
cmp
gs
push
jecxz
or
mov
nop
mov
ficomps
cmpsl
mov
mov
mov
sub
mov
or
adc
inc
loope
sbb
and
dec
clc
mov
out
jb
add
loop
je
mov
and
lods
add
je
mov
xor
fistl
lock
insl
inc
hlt
mov
dec
cmpsl
movsb
cmpsb
out
add
pushf
and
clc
addl
insb
stos
fidivrs
into
xor
into
dec
and
test
mov
lods
push
dec
dec
push
adcb
adc
or
pop
sarl
hlt
push
xchg
clc
lea
ficoms
call
or
notl
idiv
push
fwait
ret
pop
adc
adc
lea
hlt
ficompl
adc
stos
xor
lods
bound
mov
dec
adc
xchg
lods
repnz
aaa
xor
sbb
push
add
fcomp
adc
pop
mov
and
adc
repnz
add
addb
adc
mov
mov
lods
test
cmp
xchg
in
dec
cmc
call
outsb
int3
ja
sarb
pop
test
iret
jmp
adc
jae
adc
dec
cmp
out
add
xchg
jb
push
mov
push
xchg
popf
jl,pn
adc
loopne
sahf
pop
mov
in
cmp
mov
das
xor
icebp
dec
jo
push
lahf
es
cwtl
or
lds
xchg
and
dec
cld
adc
mov
in
shll
add
insb
jl
outsb
mov
sbb
js
mov
add
outsl
xchg
cmp
and
mov
movsb
push
xchg
icebp
dec
test
test
pop
inc
pop
push
or
pop
popf
cmp
inc
imul
jne
push
mov
leave
rorb
sti
inc
icebp
mov
jge
push
inc
add
sbb
inc
inc
jecxz
cmp
mov
or
imul
decl
xor
xchg
sbb
js
popa
and
andb
push
pop
mov
int3
lahf
mov
cmpsb
sbb
sbb
stos
pop
dec
aas
add
call
cmp
and
adc
les
mov
or
fiadds
lea
and
ljmp
adc
sub
dec
aas
sbb
lods
jne
push
inc
idivl
sub
int
lock
mov
ja
fildl
aad
jg
xchg
mov
fcmovnb
test
test
xchg
push
test
es
je
enter
push
adc
sub
xor
add
xor
cmpsl
lods
adc
call
jmp
pop
jp
sbb
hlt
xor
push
xor
jmp
outsl
mov
jle
dec
dec
mov
pop
cld
inc
xchg
xor
rolb
push
data16
mov
push
push
push
mov
adc
call
call
pop
mov
int3
inc
mov
fisubl
shlb
pop
mov
mov
lods
jo
shll
loop
jb
imul
pop
iret
mov
int3
adc
out
dec
nop
jg
enter
adcl
jge
sbb
mov
bound
or
lock
cmp
mov
xchg
mov
jnp
dec
jg
xchg
sbb
mov
ja
pop
idivb
push
and
shrb
cmp
add
dec
scas
inc
xor
and
mov
or
aad
pop
jb
je
jo
ret
scas
test
fs
mov
mov
mov
add
cmp
mov
mov
mov
adc
adc
pusha
mov
call
ja
inc
jmp
std
lret
loopne
add
jbe
call
inc
scas
push
movsb
js
dec
add
rcrl
mov
es
push
stos
outsl
xchg
movsl
mov
add
or
popa
push
push
push
pop
or
lcall
jb
fcomps
push
cmpsl
mov
or
or
push
lock
shll
popa
mov
dec
mov
inc
xchg
in
sbbl
sub
ljmp
pop
push
mov
aaa
shr
jg
xchg
loop
mov
mov
aaa
jl
or
and
dec
shrb
test
mov
and
sub
xchg
inc
xchg
pop
xchg
jmp
pop
adc
cmpsb
rcr
bound
test
pop
pop
inc
mov
mov
testb
xchg
loop
cmp
cld
inc
lods
jmp
lahf
in
mov
sti
jno
repz
ljmp
fisubrl
push
jno
jmp
xchg
and
add
or
aam
imul
cltd
jo
jecxz
mov
add
je
ret
scas
stos
jb
mov
repz
adcb
out
push
mov
idivl
shll
xor
pop
shrl
clc
int3
call
sub
inc
xchg
mov
mov
lahf
dec
adc
sbb
inc
popa
and
and
and
adc
rclb
push
cmp
dec
in
xor
push
pushf
fs
adc
xchg
js
inc
dec
cmpsb
cmc
imul
repz
fildl
cwtl
aaa
cmpb
dec
push
inc
mov
add
dec
push
stos
pop
ror
and
loop
data16
cld
mov
add
fisttps
mov
addr16
lret
cmpsb
sub
adc
xor
xlat
sub
test
leavew
push
sbb
bound
add
in
test
popf
mov
sbb
mov
xchg
inc
jbe
or
clc
popa
cmpsb
push
and
popl
cli
xchg
mov
testb
or
dec
sub
aad
sub
jp
loop
mov
enter
add
xchg
stos
or
call
loopne
inc
rcll
push
xchg
mov
or
cmp
fiaddl
movsl
icebp
push
cli
jge
jg
pop
add
jp
mov
shrl
cmc
push
fwait
aad
leave
mov
daa
stos
push
xor
mov
adc
adc
pop
clc
dec
push
push
jecxz
enter
popl
lock
jnp
or
pop
mov
xor
push
sbb
sub
js
fs
cli
test
inc
aas
test
pop
lea
xor
iret
nop
repz
xor
adcb
sbb
sub
adc
fimuls
or
adc
sar
or
je
inc
iret
or
addb
jb
adcl
add
mov
mov
mov
cmp
adc
out
mov
notb
jae
cmp
or
jecxz
icebp
push
mov
and
mov
mov
or
add
cs
lea
inc
into
pop
adc
mov
rclb
sbb
pop
sub
add
mov
aaa
mov
sti
mov
xchg
mov
cld
lret
leave
add
lds
or
aam
movb
or
jno
mov
sub
push
hlt
ljmp
cs
jno
add
adc
xor
adc
adcb
cmp
dec
mov
xchg
decl
xchg
lcall
sbb
jne
mov
out
arpl
sbb
push
cld
fdivl
push
xor
ret
mov
data16
pop
sahf
repz
mov
int3
xchg
int3
cwtl
fwait
aad
cmp
add
mov
xlat
out
push
lock
lock
and
inc
or
lea
pop
add
dec
sub
rcl
push
pop
jb
xchg
xor
scas
mov
in
pop
test
add
add
repnz
dec
mov
fcoms
int
repnz
scas
aas
cmp
dec
or
out
push
sub
cs
add
bound
adc
sarl
dec
jbe
cmpsl
inc
ss
repnz
mov
sub
xor
xor
shl
ror
xor
mov
lds
dec
sbb
repz
ret
push
jg
push
dec
rcrl
roll
pop
mov
xor
test
jle
and
test
mov
xor
push
dec
aaa
adc
cmp
inc
cmpsl
lods
test
addl
push
push
mov
sbb
pop
mov
jp
and
push
xor
or
pop
aas
cmp
inc
lds
loope
subl
repz
pop
call
jb
fwait
dec
movsb
xor
mov
mov
dec
mov
in
mov
inc
xor
mov
lret
xchg
mov
ljmp
adc
xchg
add
adc
aad
mov
xchg
push
xchg
sarb
out
fsubs
sbbb
cmp
cmc
in
fistl
pop
or
mov
pop
call
mov
dec
imul
mov
sbb
push
cld
cmp
pusha
in
and
push
mov
jle
push
stos
jno
mov
sti
call
in
fsubrs
xor
clc
loop,pn
adc
pusha
mov
jl
mov
mov
scas
push
gs
xchg
or
les
popf
nop
mov
push
or
push
jg
cmp
fdivr
decl
jecxz
fbld
ret
mov
xchg
mov
insl
add
and
notb
cli
mov
jecxz
dec
cmp
mov
pop
rol
cmpsl
in
dec
or
xorl
pop
call
lods
popa
sub
lcall
push
ret
mov
rcr
inc
cmp
and
adc
jle
or
mov
add
sub
jbe
push
jmp
jo
inc
mov
adc
adc
in
out
and
adc
jno
scas
sub
or
xchg
inc
and
shlb
arpl
mov
inc
jnp
sbbb
inc
test
test
pop
out
mov
lcall
ret
mov
xchg
popf
push
loope
or
or
outsl
enter
mov
sbb
mov
mov
je
or
mov
add
pop
sar
xor
pusha
adc
mov
and
adc
dec
xchg
dec
dec
and
pusha
inc
cmp
js
or
mov
push
mov
pop
add
call
nop
mov
sbb
xor
or
pop
inc
lock
sub
and
mov
and
ret
test
arpl
or
add
or
xchg
les
and
pop
or
mov
or
xor
mov
jbe
repz
mov
add
and
fbld
rorb
clc
inc
fstps
cmp
rorb
aam
scas
dec
pop
sub
inc
scas
add
adc
inc
test
lock
insb
push
test
ficomps
and
loop
bound
mov
jmp
xor
int
rcll
icebp
inc
int3
daa
inc
cmp
adc
and
sbb
xchg
add
xor
rcll
xlat
pop
adc
dec
mov
enter
icebp
lods
popf
inc
sub
pop
or
dec
xor
mov
sbb
inc
push
jo
test
push
lock
sbb
test
sbbb
lret
div
inc
loop
or
add
push
push
push
adc
not
fistpl
add
sub
xor
mov
pusha
ret
pop
push
mov
out
sub
mull
sbb
test
mov
jnp
ja
mov
add
add
pop
repnz
test
xchg
and
icebp
cmp
jmp
pop
fnstsw
fldl
jge
jecxz
scas
fisttps
in
cmp
sbb
clc
les
call
mov
pop
mov
mov
push
inc
sbb
test
cmc
adc
xor
movsb
pushf
nop
and
cli
mov
js
sbb
xor
push
inc
shr
mov
test
pusha
fmuls
or
and
adc
jg
push
ja
add
dec
lock
add
out
sti
outsl
mov
mov
dec
jne
pop
iret
rcll
or
nop
outsb
sbb
push
in
fldt
movsb
mov
inc
js
outsb
insl
gs
fwait
push
or
add
xchg
inc
bound
add
mov
pop
fidivrl
cmp
mov
je
mov
movsb
sbb
lret
add
sarb
adc
mov
and
test
lods
inc
roll
jl
add
movsb
flds
inc
jle
ja
sbb
push
mov
rsqrtps
popa
gs
fdivp
out
call
loopne
andb
mov
insb
loope
or
test
pop
cmp
mov
xchg
lea
icebp
es
jne
movsl
rorb
dec
stc
in
add
fmuls
scas
loope
mov
adc
mov
xor
add
bound
mov
cmp
cld
test
inc
enter
add
pop
pop
outsb
mov
adc
jmp
ja
sarl
rcrb
jle
cmp
xorl
mov
pushl
or
mov
pop
inc
inc
cmc
fs
adc
into
mov
pop
push
add
pop
adc
sub
add
and
add
mov
fs
les
mov
fistps
add
cld
and
sub
popf
add
dec
add
cmp
add
addb
popa
pusha
push
xchg
movsb
into
repz
cmp
dec
jp
int3
adc
test
pop
xor
sbbb
data16
out
insl
inc
outsb
adc
jecxz
xchg
cmp
fisubrs
data16
push
push
adc
add
jnp
cld
in
sbb
mov
dec
add
out
cmp
int
std
in
aaa
jns
shl
mov
incl
aaa
addr16
inc
xor
mov
fimuls
mov
fmulp
add
adc
repnz
sahf
mov
pop
cmp
fildll
jl
dec
add
in
call
add
mov
xor
dec
xor
adc
mov
pop
mov
xchg
xor
inc
mov
jo
lcall
xor
xchg
std
adc
sbb
pop
shlb
or
js
dec
decb
jl
inc
adc
sarb
cwtl
jl
fiadds
and
sbb
dec
and
add
sub
dec
adc
or
jge
insb
lcall
cmp
fmuls
out
out
ret
leave
pop
into
pusha
xor
movsb
shrl
test
imul
test
add
fwait
cmp
sub
imul
scas
mov
loopne
mov
popa
fdivl
rcrl
inc
xor
pop
jge
add
xor
pusha
data16
mov
sbb
leave
add
in
cmp
dec
cmp
ret
bound
sub
xor
in
aas
or
cwtl
jecxz
out
or
sbbl
or
dec
dec
add
fs
jmp
popa
movsb
pop
out
frstor
and
ret
mov
popf
push
mov
insb
or
out
cltd
xchg
cmpsl
addb
jmp
inc
test
push
pop
loopne
stos
or
dec
xor
inc
test
push
mov
xchg
enter
into
mov
fdivrs
movsl
ljmp
pushf
and
mov
pop
sbb
jl
js
mov
int
mov
loop
add
mov
shll
and
loop
and
mov
popf
push
je
jo
shrb
add
subl
dec
sub
loope
adc
sbb
adc
push
or
ds
jno
inc
sub
mov
dec
aam
adc
js
pop
or
fistpll
enter
xor
out
push
nop
enter
subb
rcrb
daa
leave
mov
inc
cld
insl
inc
inc
daa
xchg
out
int
add
fadds
nop
jno
jne
pop
ljmp
in
jbe
pop
and
ds
clc
out
mov
adc
jl
and
xchg
popl
daa
push
notb
aaa
or
pop
pop
mov
add
movsl
mov
xor
sbb
pop
adcb
arpl
pop
push
or
sarb
pop
ss
test
shr
jge
imul
xor
movzbl
je
out
add
jbe
shr
push
inc
pop
xor
cld
add
pop
gs
hlt
sub
and
add
stc
cltd
and
aaa
sbbb
xor
cwtl
adc
loop
mov
push
rcrl
leave
addr16
xor
andl
push
les
adc
jle
loopne
popa
xchg
loopne
std
cltd
add
test
push
bndldx
push
jg
cmp
mov
test
mov
popf
sbb
adc
stos
loope
inc
xchg
sbb
mov
push
adc
test
sub
jbe
mov
push
xchg
add
cld
sbb
fstpt
and
enter
ret
inc
push
inc
inc
pop
sbbb
or
pop
jmp
push
mov
stos
and
shl
add
js
fnsave
push
jg
xchg
cmp
cmp
arpl
push
pop
shll
sbb
outsb
mov
sti
fcoml
sbb
push
or
or
cld
dec
adc
cltd
and
pusha
rolb
dec
loopne
push
xchg
rcll
shrl
scas
fnstsw
mov
cmc
movsb
push
hlt
xchg
ds
into
adc
adc
mov
shll
sti
fmul
push
xor
cmp
or
push
cmp
or
push
insl
adc
pop
inc
icebp
lock
add
and
dec
or
add
pop
sub
mov
fnstenv
loopne
sub
dec
cwtl
add
add
add
scas
or
dec
testl
loop
and
decl
pop
insb
mov
adc
ja
jmp
test
scas
lock
add
fmulp
ja
imulb
jmp
and
mov
lock
inc
and
leave
bound
cmp
js
xor
das
loop
push
rorl
mov
dec
insb
adc
add
jne
rclb
iret
xor
int3
cwtl
inc
xor
and
sbb
pop
loopne,pt
loop
inc
jno
add
test
test
push
test
shrl
jmp
dec
mov
pusha
push
jecxz
push
adc
sbb
xor
or
mov
inc
popa
shrl
aad
pop
and
ret
lock
and
filds
insb
inc
cmp
mov
add
ror
dec
jge
push
rorb
add
popl
repz
clc
xchg
call
adc
xchg
fldenv
xchg
xchg
push
xor
loopne
sbb
push
sub
sbb
and
sbb
or
stos
jns
int3
mov
dec
outsb
xor
ss
xchg
inc
je
adc
push
inc
mov
sub
out
jbe
imulb
inc
int3
add
pop
mov
lcall
addb
mov
sbb
inc
dec
js
jo
je
dec
in
inc
jae
loope
sarl
cltd
push
out
xchg
add
mov
call
jmp
push
dec
mov
gs
icebp
test
mov
stc
in
cltd
loopne,pt
mov
lods
xchg
loop
int
lcall
push
xchg
jp
push
daa
xor
incl
call
ss
jnp
pop
adc
lods
sahf
idivb
push
jns
lods
sbb
shrl
mov
pop
cmp
mov
clc
cmp
push
xchg
test
mov
imul
mov
stos
xor
movsb
fdivrs
aaa
xor
mov
ds
xchg
ds
push
pop
sbb
and
xor
push
jg
jmp
add
repz
cmp
sbb
jge
je
stos
test
ljmp
decl
fs
add
xlat
jbe
ficoms
mov
adc
lds
jl
mov
sub
jg
rcrl
or
xor
mov
call
and
test
cmp
or
add
repnz
and
add
jb
jo
sbb
test
mov
dec
jl
outsl
sarb
or
sub
daa
sub
dec
adc
lcall
and
adc
stos
shlb
je
mov
mov
fwait
mov
push
icebp
lea
shl
sbb
js
cmp
jb
movsbl
incl
push
or
cmp
jns
or
or
mov
fs
call
cmp
inc
jb
adc
filds
mov
cmpsl
or
add
cmp
ljmp
xor
movsl
adc
mov
sbb
xchg
lea
jle
push
sub
call
adc
test
add
jns
add
repz
or
inc
cltd
aas
loopne
sbb
and
popf
icebp
ja
pushl
dec
stc
fisttpll
dec
jb
add
push
push
inc
adc
incb
arpl
shlb
mov
fmul
add
ret
sub
scas
dec
pop
dec
add
push
inc
roll
shll
pop
xlat
repz
fiadds
loopne
out
test
pop
negb
add
ret
add
mov
fisttps
jecxz
fcmovnbe
xchg
loopne
inc
aas
std
or
add
xchg
push
aam
or
jp
subl
mov
add
ret
aam
aam
ret
dec
outsl
ffreep
fidivrl
inc
adc
inc
and
imul
fildll
cmp
out
mov
insb
xor
sub
js
jb
push
les
jg
sbb
xchg
mov
and
adc
push
fs
inc
push
filds
decl
scas
enter
adc
inc
mov
pop
sti
aas
push
js
test
cmp
pop
gs
push
sub
clc
push
icebp
les
scas
repnz
xor
mov
mov
lret
and
sar
sub
jae
out
bound
std
lcall
push
call
ljmp
stos
adc
mov
and
adc
adcl
sti
outsb
fbld
mov
inc
icebp
negb
dec
ljmp
xchg
jmp
pushl
arpl
scas
fs
std
xor
int
test
or
into
mull
mov
insb
fidivl
or
push
and
pop
addl
icebp
pop
sub
movsl
pop
cwtl
inc
push
shl
clc
sbb
clc
outsb
rcr
mov
loop
sbb
fildl
pop
xchg
add
pusha
popa
adc
pusha
push
inc
jmp
imul
add
adc
mov
push
jg
outsb
aas
iret
and
je
xabort
jp
js
dec
imul
into
bound
mov
add
mov
rcl
add
push
push
imul
mov
mov
inc
sbb
mov
or
lds
push
sub
mov
pop
sub
mov
inc
pop
xchg
pop
ljmp
jmp
add
xor
push
xor
xor
aad
pop
std
in
mov
add
fldcw
pop
inc
in
add
jge
mov
jge
sub
faddp
mov
mov
pop
outsl
int3
cmp
cmp
es
addb
pusha
lret
add
mov
mov
pop
jecxz
cmpb
mov
sub
mov
xorl
push
inc
lret
popa
dec
iret
mov
sbb
mov
xchg
or
jmp
fucom
rorb
push
clc
mov
sbb
xchg
test
ret
ret
shl
adc
loopne
or
mov
ret
cmpb
cmp
or
aas
jnp
outsl
mov
in
rcrb
mov
fwait
movsl
fstpl
test
xchg
aad
xor
popa
arpl
shlb
cmc
push
je
adc
test
cs
aas
fs
adc
lds
adc
sub
adc
ja
mov
rcr
call
fdivrp
pop
cltd
add
aas
call
or
imul
adc
push
aam
adc
sbb
fsts
xchg
or
ds
je
adc
aad
je
popf
je
pop
push
test
add
mov
and
push
push
lahf
or
push
pop
jmp
inc
sub
outsb
xchg
enter
in
fistpll
daa
dec
cmp
inc
sbb
xchg
pop
xchg
add
inc
xchg
aad
rcl
scas
lcall
loopne
rclb
int3
jp
add
aad
sbb
add
lea
int
mov
loopne
clc
test
or
inc
lods
or
scas
mov
dec
or
dec
pop
xor
push
lds
xchg
xchg
lret
mov
pop
jg
mov
sbb
xchg
jo
inc
add
cmc
sub
xor
loop
add
loopne
fisubrl
cmp
pop
dec
test
push
jp
dec
mov
mov
daa
pop
movsb
lds
pop
xor
add
icebp
pop
xor
outsl
div
in
or
std
mov
jmp
in
insl
enter
test
cmc
mov
aad
sub
aas
jbe
inc
cmp
fistpll
fdiv
ficompl
pop
out
addr16
and
mov
iret
add
mov
push
pop
mov
mov
hlt
je
inc
dec
and
cmpsb
daa
bound
pop
xchg
nop
int
ret
icebp
out
out
subl
jg
fisttpll
lcall
insl
mov
push
fucomi
push
bound
jb
gs
hlt
lds
push
out
sbb
mov
sbb
mov
test
sub
pop
and
adc
push
lock
pop
mov
dec
mov
cmc
das
je
xchg
ds
push
cmc
int3
pop
mov
mov
mov
pusha
jae
ljmp
into
test
cmp
in
xchg
scas
sub
int3
movsb
adc
mov
xchg
or
inc
pop
add
lea
jne
xchg
cmp
jbe
mov
mov
lods
pop
xchg
shll
inc
imul
movsl
ljmp
pop
rolb
xor
mov
sahf
mov
imul
fildll
jge
fildl
xor
or
idiv
cld
cmp
inc
pop
das
sbb
xchg
repz
and
jle
xchg
sarb
jl
popa
adc
jo
sti
mov
clc
or
lret
mov
pop
mov
mov
dec
stos
or
xor
daa
xor
ljmp
inc
and
lock
inc
and
jbe
js
mov
inc
les
mov
lcall
mov
fistpl
ljmp
dec
repz
js
and
push
push
adc
loop
xchg
loopne
out
mov
ds
fbld
lea
add
addb
push
repnz
cwtl
mov
push
xor
negb
push
das
push
push
jmp
sbbb
cwtl
mov
test
lcall
add
inc
sar
sub
movsb
js
and
add
cld
les
mov
ret
inc
inc
imull
cmp
jp
adc
les
mov
imulb
out
push
adc
push
mov
xchg
enter
nop
lea
dec
fcoms
add
lea
rorb
pop
fistl
mov
std
das
imul
call
call
inc
fistpll
jne
aaa
xor
and
push
sahf
je
xor
xor
dec
inc
xchg
mov
push
add
jmp
push
xchg
sbb
add
jge
or
shlb
inc
mov
inc
and
pop
pop
mov
xor
clc
push
add
lods
add
mov
cmp
scas
pop
inc
insb
adc
insb
shrl
ret
clc
nop
sbb
sbbb
adc
mov
aam
adc
clc
cmpsb
push
adc
add
inc
mov
lock
andb
add
and
xchg
out
fmulp
movsb
shr
add
or
adc
adc
inc
call
or
ret
int3
ljmp
loope
ds
xchg
add
cwtl
movsb
loop
stos
adc
push
add
push
stc
adc
xor
push
cmp
jns
and
repnz
xchg
adc
xchg
dec
push
lea
aas
pop
faddl
in
dec
andl
dec
push
fildl
fwait
push
imul
pop
cmpsb
add
test
sub
lock
leave
ljmp
sbb
cmp
push
mov
daa
jp
andb
add
repnz
mov
in
stc
sarb
hlt
sbb
mov
inc
in
add
cmp
lea
inc
add
push
jae
push
pop
add
pop
pop
mov
pop
jmp
adc
push
sbb
inc
idiv
add
xchg
cmc
add
inc
mov
lock
adc
xor
add
lret
je
loop
sti
ret
push
sub
dec
lcall
and
inc
rcll
jbe
add
adc
mov
push
inc
cld
inc
notb
xor
mov
or
inc
test
test
lret
fistps
jecxz
push
pop
imul
sub
adc
add
xchg
lds
mov
repz
xchg
imul
add
inc
dec
xor
popf
pop
fmuls
or
pop
cmp
xor
pop
loop
xchg
cmp
lods
sbb
out
pop
push
dec
push
fiadds
ds
outsl
in
sbb
repnz
enter
repnz
lock
jb
cmc
push
xor
sub
and
enter
lock
xor
jmp
lds
pop
ljmp
and
mov
mov
hlt
imul
adc
inc
inc
scas
add
ja
sarb
mov
aaa
mov
cmp
sbb
fsubp
and
sub
ss
icebp
inc
xlat
dec
add
mov
std
push
pop
adc
stos
xor
cmp
pop
loopne
subb
jl
pusha
outsl
clc
jl
in
decl
push
inc
push
dec
ja
shrb
add
or
mov
sub
aaa
mov
pop
adc
dec
lock
mov
popf
pop
push
dec
popa
sub
loop
mov
sbb
aaa
fsubs
mov
hlt
les
stc
nop
or
adc
addr16
popa
std
mov
les
fcmovnbe
movsb
ficoml
cmc
and
mov
loopne
pop
mov
test
arpl
push
mov
shrl
adc
inc
add
or
cwtl
inc
sbb
sub
add
shlb
pop
adc
rol
cld
push
or
xor
lcall
and
adcb
aaa
inc
aam
int
movsb
mov
int
sub
xor
push
push
cmpsb
mov
ss
cli
fimuls
test
mov
jno
sub
mov
xor
xchg
add
add
ja
mov
lock
fld
mov
dec
adc
into
insl
add
fwait
insb
and
push
repz
adc
std
outsl
loopne
adc
adc
mov
mov
dec
enter
sbb
out
sub
and
or
cmpl
imul
xor
pop
and
pop
inc
das
addl
sub
jmp
sbb
pop
cmpsl
aad
sub
xchg
dec
add
add
mov
mov
push
insb
jne
test
pusha
scas
loopne
pop
pushf
mov
aad
push
mov
popa
lret
mov
ret
push
sbb
out
xor
push
out
testl
loope
push
sbb
inc
hlt
adcb
and
add
sub
rolb
cmp
xlat
rorb
clc
push
cs
sbb
dec
cwtl
adc
popa
fmull
add
sub
and
add
iret
jg
arpl
push
int3
dec
adc
mov
neg
test
pushf
icebp
push
clc
movsl
inc
hlt
add
and
add
push
les
fsts
fisttpll
mov
add
fs
outsl
mov
and
int3
les
add
repnz
add
adc
adc
mov
mov
jge
pop
pusha
call
test
mov
pop
enter
lar
inc
sbb
mov
aaa
mov
dec
jge
add
dec
cmpsb
popf
inc
inc
inc
mov
inc
out
fsubl
adc
lahf
push
push
mov
and
and
rolb
jmp
or
xchg
repnz
inc
sti
lock
pop
add
movsb
cltd
cmp
jge
in
or
adc
cld
scas
divb
inc
sbb
fimuls
adc
cmp
dec
subl
mov
dec
les
sub
dec
xor
lods
addb
into
divl
mov
and
pop
mov
xor
xor
test
jns
inc
mov
ja
mov
inc
cmp
sub
mov
and
mov
ret
jno
dec
inc
xchg
insb
lret
or
push
std
dec
in
inc
sub
jnp
and
or
dec
sahf
inc
inc
sbb
sub
loope
sub
cli
inc
dec
adc
shrl
mov
out
aad
je
test
pop
push
pop
inc
in
int
dec
mov
es
or
fwait
dec
out
das
aam
icebp
movsl
xor
mov
and
inc
add
nop
xor
dec
sub
xchg
inc
insl
mov
data16
fmull
iret
and
push
adc
mov
push
jo
cmpl
cld
jbe
dec
out
stos
jp
icebp
je
lcall
insb
add
daa
sub
xchg
stos
cwtl
adc
cli
call
sbb
fldl
push
jne
cltd
fucomip
jg
in
leave
ret
sahf
or
dec
sbb
addl
lcall
jae
jns
cwtl
dec
mov
cmpsl
loopne
outsb
push
mov
and
hlt
add
sbb
andl
enter
cmpb
dec
mov
jo
filds
add
pop
sbb
decl
jb
dec
jp
or
jb
add
sub
int
push
cmp
shlb
cltd
mov
mov
lcall
cmp
and
outsb
or
mov
outsb
add
out
testb
push
jle
mov
jg
dec
and
sub
xchg
or
subb
icebp
xchg
add
call
and
jno
gs
cltd
fiadds
xor
adc
andb
data16
add
jg
sub
mov
mov
loop
cld
adc
add
ljmp
xor
push
test
loop
outsl
pop
mov
or
inc
ror
cld
stos
sti
sbb
sbb
xchg
cld
xorl
call
jge
dec
mov
lods
jp
ljmp
xor
push
cmc
push
mov
mov
inc
and
sti
or
dec
hlt
sbb
or
test
mov
jnp
rcrl
ret
xchg
jp
rep
inc
push
leave
fldenv
aaa
stc
push
sub
pop
cli
sbb
nop
add
jge
add
inc
lcall
ja
sbbb
lods
cli
idivb
sbb
dec
imul
repnz
adc
xor
mov
push
mov
js
jecxz
sub
inc
cmc
outsb
push
sbb
pop
jecxz
insb
xor
add
or
inc
stos
mov
inc
mov
int
and
and
jne
enter
xor
pusha
dec
jl
inc
incl
lahf
push
lods
cltd
xor
add
or
add
inc
lock
cmp
pusha
sub
incl
xchg
xchg
test
mov
and
movsl
dec
data16
add
cltd
loope
mov
sar
xchg
push
rorl
xor
loope
outsl
clc
imul
call
xchg
cmp
cmp
shlb
dec
call
mov
push
sbb
fstp
jbe
lods
loopne
pop
jg
mov
decl
add
sub
adc
push
sub
gs
jg
push
add
lret
mov
or
hlt
nop
mov
sbb
mov
inc
mov
push
sub
stc
jl
mov
stos
sub
add
movsb
mov
sbb
out
faddp
data16
pop
aas
pop
sti
dec
out
sub
imul
cmpsl
mov
mov
mov
arpl
fdivr
imul
jecxz
mov
out
dec
mov
into
add
pushf
lret
pop
movsl
aad
outsl
in
or
out
cld
add
roll
push
push
add
nop
mov
adc
cmpsl
test
cli
xor
xor
and
std
and
cmpsb
fdivr
cmc
and
mov
gs
mov
in
or
jns
pop
inc
clc
shll
loope
sub
mov
push
pop
sbb
addl
adcl
adc
jne
hlt
arpl
sbb
ja
repnz
insb
std
mov
mov
push
test
je
cmp
movsl
shrb
or
lea
sbb
adc
add
dec
lret
shrb
orl
adc
mov
mov
sbb
pop
inc
xchg
push
movsb
xchg
mov
je
dec
test
xchg
leave
and
addr16
add
mov
add
out
icebp
mov
pusha
push
pop
in
sbb
shlb
fucomip
pop
jg
or
mov
xchg
mov
mov
out
cmp
nop
sub
insl
xor
adc
ds
dec
jb
setns
clc
in
inc
fisubrl
cli
ljmp
popf
jp
jae
lret
pop
mov
mov
test
incl
scas
mov
mov
les
movsl
jae
movsb
push
push
cli
sub
push
in
cltd
xchg
add
mov
and
mov
cs
xor
outsb
movsb
aam
cmp
xchg
and
and
lods
or
or
and
adc
inc
sub
stc
add
add
in
loope
int
testb
les
std
cmc
xor
cmpb
add
mov
mov
in
inc
std
push
adcb
adc
stc
and
shlb
ficoms
pop
popa
xor
loopne
cmpb
mov
and
scas
das
xchg
push
popf
mov
sbb
mov
out
or
sbb
pop
mov
and
inc
ljmp
lea
testl
xchg
pop
cmp
cmp
fnstsw
mov
test
sub
movsl
clc
out
sub
pusha
repz
addl
insl
mov
or
jg
sub
aam
into
dec
dec
sbb
mov
clc
aas
adc
sub
cltd
dec
mov
sub
out
jo
push
dec
dec
push
or
xchg
cli
sbb
test
or
or
or
cmpsb
icebp
jnp
cs
cmpsl
pushf
es
add
xchg
add
dec
and
add
jp
das
pop
push
icebp
pushl
inc
rcll
sbb
xchg
mov
imulb
inc
mov
adc
pop
push
shrl
sbb
orb
fldl
push
test
sbb
add
sub
cmp
leave
xchg
mov
sarl
cmp
outsb
xor
mov
inc
cli
sub
sbb
mov
cs
outsl
pop
sub
sbb
mov
notl
out
clc
in
sbb
movsl
xor
filds
aas
mov
cmc
pop
lock
fcmovu
dec
in
dec
faddl
and
ret
jne
jmp
lock
mov
add
and
add
jb
mov
sub
inc
cmp
repnz
scas
adc
jmp
pop
cmp
sbb
jl
cwtl
mov
and
icebp
les
sarb
shlb
pop
adc
sub
fbld
ds
and
mov
and
xorb
rclb
jmp
or
pop
fisubrl
test
test
test
int3
sbb
and
stc
xchg
repnz
inc
mov
xorb
or
dec
or
or
std
sbb
outsl
cltd
push
or
mov
sub
rcrl
mov
and
pop
sub
adc
das
mov
jb
test
fcomi
shl
sbb
fwait
add
mov
mov
movsb
movl
push
mov
mov
repz
inc
cmovb
push
push
lods
add
pop
inc
jb
ret
sbb
imulb
jl
or
rcrl
mov
xor
xchg
mov
dec
ljmp
push
sarb
lret
jle
xor
mov
test
add
pop
cltd
jno
mov
push
sbbl
fwait
xchg
push
pop
cmp
sub
in
rolb
and
pop
fsubl
faddl
jle
sti
jns
dec
loope
mov
ja
mov
adc
ret
pop
mov
pop
sub
insb
adc
push
sbb
mov
or
sti
push
pop
in
pop
test
or
jg
sbb
call
and
mov
dec
insl
imul
in
push
or
dec
mov
inc
ljmp
loop
and
lret
int3
mov
dec
sbb
jbe
jmp
xchg
aaa
outsb
push
ja
js
pop
rcl
shll
sbb
incb
xchg
adc
lret
test
jno
mov
mov
pop
add
call
inc
xchg
into
or
lahf
sub
jb
cmpb
gs
call
pop
fsubr
leave
lret
mov
xchg
dec
dec
rorb
push
mov
sbb
fistps
fimuls
scas
aaa
in
xor
jecxz
mov
insl
sub
sub
inc
rol
outsl
das
sub
xlat
test
push
into
scas
xor
mov
aas
pop
xchg
fisubrl
ds
add
jecxz
sbb
adc
push
test
adc
jmp
pop
popa
xchg
jnp
inc
jle
sub
int3
pmulhw
aad
loopne
mov
jmp
push
mov
fildll
insb
mov
pop
and
adc
leave
xor
rol
aad
subl
jle
outsl
jl
frstor
ret
cmp
push
popa
cs
push
loope
testb
xchg
orb
mov
movd
push
mov
add
jne
bound
ror
adc
stc
push
lock
cmp
xchg
xor
adc
stos
cmc
lock
mov
sub
or
psllq
xor
adc
jmp
fcomi
pop
cmp
mov
test
daa
scas
fldt
mov
mov
cmp
pop
push
repz
push
jecxz
xor
inc
addl
add
mov
rorb
pop
ljmp
out
pop
adc
pop
mov
decl
jle
subl
lret
loop
mov
andl
xor
cwtl
adc
ljmp
mov
dec
hlt
mov
scas
mov
pushl
or
sbb
ror
or
cmp
rcr
fidivrl
clc
rcl
dec
xor
mov
repz
aas
ficomps
and
sbb
mov
adc
cli
loope
jo
cli
enter
stc
fidivrl
xchg
rorb
mov
inc
jns
pop
cmpl
add
pop
fldt
inc
icebp
stos
jl
jecxz
inc
mov
mov
arpl
sub
add
push
ljmp
test
jle
cwtl
fistps
add
mov
push
inc
or
sub
adc
sarl
jle
mov
ss
sar
pop
add
jb
cmp
xor
or
sub
in
ja
add
js
xchg
rclb
lds
or
cmp
clc
mov
pop
push
mov
mov
shr
mov
adc
jl
sbb
jg
fnsave
pop
subb
icebp
insl
xorl
into
aas
xchg
push
adc
test
xor
and
xchg
cld
mov
popa
push
outsb
cmc
xchg
std
or
inc
gs
cli
inc
lock
sarl
inc
or
xchg
cs
int
aad
clc
add
push
cmp
scas
pop
aam
sti
pop
jecxz,pt
and
jne
mov
out
sub
jg
hlt
andb
mov
push
xchg
popa
add
push
iret
jnp
icebp
jmp
push
popf
jl
dec
fdivs
lods
aaa
inc
mov
cmpsb
xor
in
icebp
divl
mov
lods
and
decl
aaa
xchg
stos
movsb
dec
mov
int
pop
mov
xor
xor
stc
lea
leave
fildll
ffree
mov
outsb
cld
mov
sbb
cmp
pushf
scas
mov
pop
out
mov
mov
cwtl
in
add
add
pusha
mov
fs
push
adc
in
out
orl
popa
and
test
lea
outsl
data16
push
xchg
adc
sti
das
adc
outsl
insb
push
jl
popa
jecxz
out
cmp
dec
mov
mov
outsb
das
ret
mov
adc
idivb
ret
mov
or
pop
jb
sarl
or
inc
jnp
rcrl
scas
inc
addl
inc
mov
add
orb
repnz
sti
xchg
cmc
shlb
push
sbb
int3
ljmp
xor
or
sbb
mov
jmp
inc
cs
dec
movsl
les
daa
pop
cmp
add
fisubrs
sbb
iret
jo
xchg
or
sub
cmpsb
daa
jne
jne
push
stc
or
mov
es
inc
pop
fldcw
in
mov
mov
or
jp
sub
xchg
repnz
pop
add
fcom
mov
mov
in
outsl
out
mov
or
dec
dec
xor
test
jl
shrl
xchg
cld
cmp
outsl
add
lret
xor
cmp
dec
ds
pop
push
inc
sbb
popl
fdecstp
cmp
mov
dec
insl
adc
push
sub
inc
sti
loope
xor
mov
std
dec
mov
xorb
push
mov
sbb
dec
lods
loope
sbbl
xlat
lods
sbb
dec
hlt
stos
imul
jb
pushf
dec
stos
cwtl
jmp
mov
lock
mov
sbb
inc
divb
je
je
sbbb
iret
enter
sub
in
cltd
pusha
ret
aas
inc
cmp
ss
xor
lods
xor
cmp
lock
sub
bound
cwtl
mov
or
and
push
inc
or
and
cli
pop
divb
or
andb
stos
ljmp
in
scas
lret
xchg
outsb
bound
xchg
mov
fildl
xchg
subb
movsb
callw
test
and
cltd
push
outsb
fists
rcrb
mov
mov
lds
cmp
xchg
negl
jo
ret
add
cmp
ljmp
aad
andb
popf
rclb
repnz
push
and
add
lods
mov
in
sbb
mov
push
daa
je
xchg
fisubrl
adc
push
out
ret
lret
in
imulb
gs
bound
rcr
jnp
sub
add
pop
je
movsl
push
cmp
cs
jb
repz
gs
pop
jbe
test
mov
scas
lock
test
subl
js
das
repnz
add
lock
mov
fadd
outsl
loopne
push
cwtl
sbb
pop
xor
inc
mov
rcr
push
insl
and
aaa
xor
pop
xor
stc
xor
scas
jbe
push
sahf
test
mov
add
mov
insl
insl
pushf
mov
sub
mov
add
mov
lods
clc
pop
push
aas
xor
xchg
call
and
or
xor
push
out
sub
mov
lcall
fldt
or
sbb
aad
adc
insb
dec
loopne
fdivs
xchg
xchg
rcll
filds
or
loope
pop
cmp
mov
xchg
dec
sbb
cs
jnp
add
pop
xor
mov
stos
mov
out
dec
repnz
pop
mov
mov
ljmp
enter
stos
adc
dec
outsl
sub
jo
jmp
mov
mov
cmp
out
ret
dec
jg
fsubs
adc
es
push
sbbb
icebp
jmp
lods
orl
mov
fisttpl
jg
not
iret
pop
jbe
mov
call
mov
fsts
cmp
or
jne
inc
pop
outsb
or
or
sbb
add
ja
lret
pusha
sarl
mov
jg
mov
sub
cs
mov
lahf
dec
cmpl
aas
add
dec
push
je
fildl
in
inc
push
sub
add
std
pop
xchg
in
dec
lock
aam
fwait
xchg
push
repz
jb
sub
add
cmpsb
jp
pop
lcall
push
or
mov
push
test
aas
ljmp
pop
mov
es
push
test
repnz
xor
fwait
cmp
xor
or
repnz
loopne
or
or
push
gs
sub
andl
test
loopne
mov
jecxz
cltd
lock
push
int
dec
mov
cld
lods
imul
mov
jns
mov
dec
mov
push
out
add
mov
addr16
shl
sbb
sbb
sub
or
aad
lods
adc
pop
daa
aaa
mov
add
xchg
sbb
push
ljmp
popf
adc
sbb
push
push
popa
jne
ljmp
stc
pop
fwait
push
mov
cmc
push
clc
push
jo
xchg
shrl
jb
and
test
push
xchg
sti
and
sbb
adc
pop
dec
push
mov
add
aam
push
mov
js
int3
pop
jbe
in
push
decl
mov
rorb
or
jp
lret
or
js
cmp
movsl
xor
lea
dec
adc
xchg
mov
jns
mov
ret
daa
inc
push
sub
mov
icebp
sbb
pop
mov
dec
or
dec
gs
movsl
scas
jl
jmp
xor
frstor
cmp
nop
loopne
loopne
push
lea
lea
mov
inc
jbe
jne
mov
movsb
sbb
mov
jl
cmc
pop
push
stos
cld
cmp
mov
ja
pop
xor
test
push
sarl
nop
sbbb
movb
sub
outsl
cmpsl
loop
or
flds
add
mov
jge
and
test
outsl
jo
sahf
cs
dec
ds
jns
sbb
outsb
loope
add
xor
test
sub
mov
aam
xchg
out
outsb
inc
add
aas
ss
sarb
push
push
clc
mov
lods
das
icebp
es
mov
mov
out
sbb
dec
sti
leave
rcrl
mov
or
shlb
mov
cmc
xchg
pop
and
cli
pop
mov
mov
pop
fsub
je
mov
nop
mov
pop
outsb
jecxz
adc
or
mov
ja
jne
movsb
inc
dec
insl
das
lahf
ja
push
in
mov
outsb
out
outsl
and
into
imul
inc
fs
into
push
dec
mov
or
cmp
cmc
notb
call
and
mov
popf
fistpll
rol
mov
outsb
push
mov
cmp
sub
mov
enter
addr16
push
aad
xor
mov
ret
out
pusha
jae
xchg
dec
out
inc
jns
cmc
loope
aaa
outsb
inc
cmpsl
ret
jg
inc
popa
dec
lods
outsl
mov
pop
dec
dec
hlt
decl
dec
xchg
hlt
sub
inc
xchg
fnstsw
and
mov
jg
leave
mov
sbb
and
cld
xchg
push
cs
or
movsb
out
sbb
std
pop
icebp
push
fisubrs
and
xchg
test
je
xor
jbe
fildl
jo
dec
int
push
push
xchg
jg
jne
outsb
lret
mov
les
sbb
push
dec
mov
inc
xchg
mov
bound
mov
mov
inc
xorb
bound
sbb
xchg
mov
push
mov
fcomps
aaa
es
adc
xor
test
fadd
xchg
pushl
ljmp
cmp
test
sub
call
add
shlb
xchg
lea
lock
js
push
lret
push
pop
hlt
inc
fbld
add
add
mov
xor
ret
push
cmpb
sahf
add
xchg
mov
lfs
mov
int3
jle
loopne
dec
in
mov
and
das
mov
cld
aaa
fcmovbe
cmp
push
cmp
pop
aam
add
and
mov
dec
cmp
cltd
shlb
add
xor
repnz
inc
sbb
or
xchg
push
add
inc
out
sbb
mov
adc
adc
in
mov
mov
xor
das
out
mov
and
add
dec
mov
aaa
or
in
or
or
push
cmp
pop
or
push
inc
fucomip
and
xor
adc
sbb
pop
dec
fisubrl
add
sub
or
inc
mov
jmp
hlt
pop
xlat
mov
jmp
jns
fs
sbb
aam
sub
arpl
mov
push
rcl
inc
pusha
mov
push
out
sub
ret
adc
fwait
ja
loopne
adc
and
sub
and
jl
es
popf
mov
mov
js
pop
jne
sbb
divl
hlt
movsl
lret
or
mov
mov
mov
or
mov
adc
test
jne
ja
in
jge
in
xor
in
push
out
push
in
lea
test
pop
push
push
je
add
hlt
sub
inc
mov
adc
push
mov
bound
adc
add
stos
add
add
xor
jmp
inc
mov
cmp
jnp
stos
or
stos
adc
flds
adc
or
add
push
mov
lea
sar
mov
xchg
xchg
loopne
or
sub
dec
sub
inc
andb
shll
inc
sbb
add
std
sub
aas
loope
cmc
test
add
addb
add
pusha
and
sbbb
in
mov
pop
inc
adc
sbb
adc
clc
fcompp
sub
loopne
out
in
stos
xor
or
shrb
sarl
xchg
mov
mov
mov
popf
mov
sbb
push
xchg
pop
stc
shrb
cld
test
call
call
mov
ret
sub
mov
outsb
call
rorl
rcrb
movsl
lret
and
dec
cmp
jl
mov
sar
lods
out
clc
fldl
scas
add
push
add
lea
das
pop
stc
jg
inc
sub
fistpll
xor
shrb
test
out
add
test
and
xor
dec
adc
enter
idivl
pmulhw
fsubrs
adcl
jp
push
adc
loop
aaa
icebp
fistps
aas
push
ss
in
cmp
pushf
fidivrs
scas
pop
or
cmpsl
mov
jne
sti
repnz
mov
mov
add
adc
shlb
mov
xor
cmpsl
inc
push
sbb
sub
adc
xchg
lods
out
push
rcrb
pop
clc
mov
and
xchg
adc
cmp
inc
and
aaa
in
les
cltd
les
sar
push
jge
jle
cwtl
inc
ret
cmpl
out
or
mov
cmp
movsl
cmp
outsl
pop
stos
call
sbb
pop
push
xchg
scas
add
fstl
push
clc
push
or
nop
data16
lock
lcall
xchg
mov
mov
cmpsb
or
mov
fcoms
scas
add
not
dec
mov
adc
inc
les
outsl
or
sbb
jo
test
add
mov
sub
icebp
sbb
add
sbb
and
add
sbb
roll
inc
lret
loopne
push
ljmp
test
pop
add
or
mov
int3
outsl
outsl
or
sbb
stc
nop
testl
or
mov
adc
enter
out
sti
adc
into
nop
add
push
fcoml
xor
sub
inc
pop
adc
sub
mov
bound
lods
jle
xchg
adc
cmp
or
aam
or
jns
test
loop
inc
jb
outsb
loope
and
xorb
xor
scas
scas
mov
test
stc
sahf
shrb
repnz
mov
xor
cmpsb
push
xchg
jae
add
aas
sub
mov
in
lea
in
inc
ss
scas
std
pop
mov
jo
enter
mov
pop
add
xor
mov
loopne
daa
lock
push
sub
cld
jnp
sbb
and
cli
movsl
adc
fiadds
mov
mov
insb
lock
mov
xlat
lret
shrb
js
sub
xor
add
add
inc
adc
jb
lock
and
lahf
out
loopne
and
adc
js
sbb
mov
enter
psraw
or
jno
or
das
loop
rolb
pop
sbb
sub
int3
and
sub
or
sbb
daa
leave
or
sub
lds
inc
das
pusha
or
inc
xlat
xor
or
or
frndint
push
or
inc
push
sbbb
adc
roll
add
push
add
adc
test
xor
inc
loope
ret
push
stos
mov
xor
clc
sbb
adcl
shl
mov
enter
xor
sbb
xor
loope
movsl
sbb
lock
or
scas
jecxz
mov
cmp
or
inc
add
push
testl
add
inc
or
add
jp
or
push
push
lret
add
xchg
into
mov
jecxz
or
int3
mov
dec
daa
cmp
shlb
jns
inc
mov
jmp
sub
lds
mov
inc
add
mov
mov
loop
ret
cmp
push
adc
mov
data16
sub
add
ljmp
inc
nop
jmp
into
xchg
pop
add
call
push
aam
mov
repz
adc
clc
add
or
ret
imul
push
cwtl
decl
jne
push
jne
fprem1
cs
sub
mov
or
aad
and
add
lock
lahf
clc
xlat
test
xor
xchg
test
mov
or
aas
add
arpl
and
jo
and
pop
leave
sub
pop
clc
jmp
add
loop
mov
or
and
mov
cs
push
and
fidivrl
and
hlt
sti
int3
pop
inc
pusha
js
jnp
int3
push
pushl
xchg
xchg
inc
xor
fldcw
fidivs
es
or
fwait
data16
loop
aam
jge
xor
add
mov
adc
jecxz
mov
les
je
int
in
dec
add
add
sbb
mov
hlt
aam
shrl
cwtl
mov
xchg
inc
clc
mov
push
pop
dec
loop
hlt
imul
push
ret
aaa
insb
and
shlb
inc
mov
dec
int3
sarb
and
xor
lcall
and
jbe
sub
adc
pusha
push
mov
flds
adc
adc
xchg
push
adc
bound
xchg
add
jp
sub
icebp
adc
mov
andb
xchg
cmp
out
movsl
das
pop
movsb
add
fnsave
adc
hlt
dec
pop
push
subl
outsb
adc
hlt
xor
test
mov
in
add
addr16
pusha
sub
push
cmp
jp
sbbb
sub
jbe
inc
cmpsl
popa
dec
add
sub
xchg
sbb
dec
add
xor
add
aas
mov
hlt
jp
adc
inc
adc
mov
andb
cmp
cmpsl
or
add
pushf
adc
and
add
and
mov
pop
clc
ret
jl
shrl
xor
scas
sbb
sbb
add
or
cli
xor
sti
pop
push
mov
adc
lret
inc
or
xchg
loope
push
cmp
popa
ljmp
add
add
mov
cmpl
aam
mov
pop
xor
shll
dec
cmp
movb
inc
sbb
sahf
insl
dec
mov
lods
and
push
int3
int3
loop
adc
inc
jo
add
xchg
jmp
enter
mov
push
fmull
lods
movsl
sub
and
js
int
shlb
jecxz
lahf
add
fadds
fisttpl
pop
sub
xor
out
inc
push
sbb
jno
and
mov
in
jmp
addb
mov
shll
or
adcb
dec
les
fsubrs
cmp
arpl
clc
mov
js
push
out
push
jmp
add
test
lods
outsb
loopne
addb
cmp
mov
flds
fstpt
cmpsb
dec
mov
or
add
push
in
xchg
in
mov
popa
lds
lahf
popa
sub
outsl
mov
adc
push
leave
in
inc
push
xchg
jge
ljmp
shrl
scas
jle
or
mov
add
pop
frstpm(287
push
mov
ja
inc
mov
daa
xor
mov
and
fadds
std
pop
mov
and
jecxz
jno
inc
cmp
fistpl
loop
rolb
add
xor
push
andb
test
mov
mov
stos
cmp
and
movsb
and
fsubrs
mov
add
mov
outsb
adc
adc
pop
or
test
insl
add
mov
in
add
pop
pop
out
fcompl
cwtl
sub
add
xor
xchg
test
jnp
push
jne
add
dec
fisttps
enter
or
pop
mov
fisttpl
out
roll
dec
mov
push
pop
jae
loope
push
shll
dec
es
insb
aam
fs
add
in
mov
pop
stc
cmp
add
push
cmc
add
cmp
add
lcall
and
mov
adc
pop
jp
mov
sbb
insb
sub
or
push
xchg
xor
cli
mov
rorl
adc
test
ret
dec
popa
pop
or
and
inc
movsl
dec
adc
xchg
mov
xchg
call
imul
ds
add
mov
pop
and
imul
xchg
int3
pop
lcall
aaa
loopne
sbb
and
loop
andl
adc
xorl
ljmp
lea
dec
mov
test
add
lods
pop
leave
mov
aas
idivb
jecxz
jns
cmp
out
shl
or
xlat
jge
mov
pop
clc
pop
jae
pop
fwait
out
notl
outsb
insl
call
pop
cmp
lea
or
divb
outsl
xor
mov
cmpsb
push
adc
mov
stos
cmp
inc
std
inc
mov
adc
cmp
stc
mov
push
mov
stos
mov
mov
pop
jbe
movsb
iret
push
fs
test
jg
ret
data16
sub
leave
xor
jg
test
add
adc
jo
and
add
lahf
clc
push
mov
insb
mov
inc
std
je
gs
fldcw
scas
sbb
ret
inc
mov
mov
dec
mov
jecxz
mov
jp
hlt
jecxz
pushf
into
lahf
sar
outsb
jecxz
in
into
adc
add
xchg
divb
loopne
mov
jo
or
in
cli
add
push
pop
fildl
aam
gs
dec
pop
jmp
fldl
mov
leave
jae
mov
push
sub
xor
ret
xchg
sub
movl
adc
sub
sahf
dec
iret
aad
mov
jns
lock
or
xlat
inc
jnp
outsl
and
scas
popa
cmpsb
fstpt
adc
push
mov
push
jnp
add
test
mov
mov
add
jle
inc
test
adc
jbe
test
xor
mov
ljmp
enter
lds
mov
stc
mov
xchg
and
xor
pop
icebp
sbb
push
sub
xchg
cmc
pop
pushf
fsubr
into
add
orb
mov
fmull
inc
jns
xchg
mov
add
loope
sub
add
call
repnz
mov
or
and
rcl
xchg
dec
mov
mov
jecxz
mov
and
add
push
cltd
jnp
adc
sarb
rcr
add
mov
add
sbb
xchg
dec
sbb
daa
nop
imul
mov
adc
fmuls
add
outsl
faddl
cmc
push
fwait
pop
cmp
sbb
test
out
adc
out
add
je
pop
push
out
lret
pushaw
cs
fdivrp
out
jb
push
and
or
jmp
mov
lods
aaa
mov
add
mov
adc
jp
jle
fildll
stos
imul
gs
sub
lock
or
fadds
jb
or
call
jb
std
cmp
out
adc
push
add
fcomi
mov
lods
int3
fists
stos
push
pop
lock
orl
sbb
and
pop
fcoms
repz
xorl
out
or
enter
jp
xlat
adc
bound
ret
pop
and
aas
push
pop
pop
ret
fstps
pop
clc
div
xor
mov
xor
sbb
dec
es
icebp
xchg
push
jns
insb
icebp
mov
pop
iret
adc
out
or
xchg
xor
mov
jbe
pop
out
adc
jnp
and
xor
pop
filds
sub
pop
xchg
dec
or
dec
push
xlat
int3
les
push
aad
clc
insl
int3
into
push
cli
das
aam
pop
decb
nop
out
xchg
pop
test
daa
mov
loope
movsl
ficomps
es
xlat
xor
xchg
cmp
jnp
pop
push
cwtl
add
pop
call
ljmp
xor
in
sbb
dec
add
and
pop
inc
adc
sub
in
inc
subb
js
icebp
pop
and
add
pop
outsb
insl
cld
sub
fnstenv
mov
xor
in
add
lcall
sbb
es
nop
mov
adc
div
inc
test
loope
add
sahf
repz
and
dec
jbe
ja
sbb
mov
mov
mov
adc
and
push
icebp
pop
rcr
negl
sbb
pop
or
testl
incl
cli
out
loopne
loopne
mov
out
shl
mov
aad
add
pop
lock
adc
sti
loope
stos
adc
cmp
out
cmp
mov
out
push
sub
sbb
cmp
xchg
incb
mov
sub
fisubl
out
outsb
cmpsb
adc
add
mov
and
subl
adc
outsl
filds
jl
bound
test
cld
mov
push
call
aam
adc
pop
adc
call
pop
fldt
ds
cwtl
rcrl
in
push
pop
jne
jecxz
push
data16
out
sub
loopne
scas
rcrb
mov
mov
adc
psubd
icebp
add
outsb
adc
jmp
or
cmp
hlt
mov
adc
divb
sti
les
adc
add
repnz
je
aam
dec
pop
orb
scas
mov
jg
sti
push
pop
stos
lods
cmp
incb
xor
dec
adc
cld
push
std
movsb
addr16
or
loop
xor
leave
jbe
outsl
adc
mov
mov
lods
daa
fdivs
inc
xor
mov
outsl
pop
lds
aam
or
or
sub
clc
inc
or
xchg
jnp
or
cmc
mov
aaa
enter
mov
shll
mov
out
sbb
movsb
add
loop
test
stos
or
mov
ljmp
in
xorb
add
imul
subl
xor
ret
xor
mov
clc
or
or
mov
les
and
mov
in
mov
shlb
dec
xor
inc
int3
outsl
mov
inc
sbb
adc
pop
add
push
cmp
mov
adc
inc
dec
push
pop
aaa
popa
xor
mov
cld
push
sbb
dec
loopne
icebp
mov
mov
dec
mov
or
leave
ja
mov
jbe
cmp
insb
xchg
adc
lret
sahf
xchg
inc
inc
adc
aam
xor
outsl
xchg
xchg
push
mov
daa
dec
das
in
xchg
movsb
push
mov
outsl
xlat
sahf
gs
and
dec
mov
nop
cmp
adc
adc
or
jno
ret
fnsave
in
das
mov
stc
lret
sub
cmp
jne
pop
fbld
or
movsl
pop
mov
add
ret
leave
pusha
dec
shll
ds
jmp
lods
push
cmp
mov
or
shrb
add
inc
or
mov
mov
ret
cmp
daa
xor
xchg
mov
es
sbb
movsb
int3
cmp
push
into
inc
ds
add
insl
mov
jae
repz
insl
and
mov
cwtl
aaa
pop
dec
mov
ja
in
mov
adc
xchg
lret
push
movsl
mov
adc
jbe
jge
add
lods
inc
enter
sbb
lds
mov
pop
and
call
jbe
xchg
rcl
xchg
mov
lea
nop
and
jp
jbe
shrb
pop
cmp
jne
mov
imulb
adc
mov
adc
icebp
rolb
jo
add
mov
sub
mov
adc
clc
test
ret
dec
push
or
and
movb
xor
lahf
cld
jne
mov
inc
cmc
outsl
pop
jmp
je
popf
cmp
inc
and
aam
inc
mov
and
and
lcall
negl
push
lea
sub
sub
repnz
fildll
or
outsb
pop
add
mov
or
xor
cld
test
mov
lock
add
push
pop
aad
dec
push
aas
push
das
iret
sbb
inc
xor
call
in
fidivrl
fwait
pop
dec
mov
hlt
xor
mov
inc
add
dec
aam
inc
or
dec
add
lods
lea
test
cld
sbb
inc
fimuls
lret
pop
out
and
cld
insl
add
pusha
lock
fcoms
jmp
lcall
mov
and
push
movsl
add
jnp
stos
pop
add
in
movsb
add
sub
add
pop
or
adc
fimull
and
adc
add
cs
push
fwait
pop
push
sbb
aam
in
and
push
push
lea
add
adc
lcall
mov
sarb
sbb
loope
or
pop
call
leave
loopne
sub
jmp
mov
inc
in
mov
xor
jmp
fnstsw
out
loop
cltd
out
es
aam
sbb
dec
fistpll
cmc
cmc
push
test
dec
sarl
fmulp
pop
sbb
roll
dec
test
mov
jmp
xor
adc
sbb
nop
and
sbb
scas
repz
imul
inc
push
dec
mov
leave
jne
bnd
ds
fstl
push
insb
icebp
sbb
push
sub
inc
push
fwait
in
sbb
stos
add
mov
das
mov
xchg
add
or
mov
fadd
xchg
roll
outsl
push
pop
loope
inc
test
je
add
xchg
add
cmp
shll
testb
inc
or
jmp
mov
mov
mov
lcall
pop
cwtl
add
sbb
mov
sub
loopne
inc
imull
mov
in
xchg
inc
jl
jl
sbb
call
add
mov
shl
fisttpl
ficoms
mov
and
jp
add
fisubrs
movsb
movsb
push
mov
in
or
shrb
pushf
cs
cmpsb
lret
xor
xor
and
xchg
pusha
pop
dec
cmpsb
ror
push
les
mov
lfs
xchg
sbbl
fsubrs
or
bound
popa
xor
cmp
and
adc
xor
not
lods
shl
push
or
adc
dec
dec
jmp
pop
ljmp
insl
sbbb
sub
cmpb
popw
or
xor
mov
dec
ljmp
shrl
stos
adc
aaa
mov
dec
ficoms
nop
jp
jne
push
jmp
adcl
or
test
les
push
or
xchg
dec
pop
shrl
sub
mov
lret
scas
inc
mov
lea
add
xor
les
nop
or
outsl
push
fmul
mov
sub
add
pop
pusha
cld
test
ss
aaa
mov
jns
call
inc
sahf
jecxz
xchg
sub
data16
or
adcb
clc
sbb
adc
cs
sub
inc
arpl
xchg
and
mov
cmp
lods
sbbb
and
jg
add
pop
xchg
xor
incl
add
inc
imul
lock
das
sti
cltd
mov
mov
mov
int
pop
mov
les
mov
xchg
cmp
add
test
mov
icebp
jl
test
lds
and
ret
cmp
lcall
or
inc
mov
push
aaa
xchg
std
aam
jae
in
nop
sbbl
insl
sub
fldt
test
test
into
add
xlat
subl
or
fwait
shr
push
test
test
mov
lds
movsb
push
and
ret
mov
sbb
imul
or
mov
std
icebp
lods
loopne
icebp
aaa
mov
mov
pop
xchg
add
addb
test
inc
xchg
or
adc
mov
les
push
js
imul
insl
ret
jmp
outsb
jecxz
test
mov
nop
enter
and
sbb
in
inc
hlt
mov
and
sarl
pop
mov
add
icebp
cmp
rcr
loopne
and
mov
js
mov
sub
les
adc
dec
mov
push
std
mov
out
jg
pop
shll
mov
mov
sbb
jl
fsubrl
xor
add
fstpl
into
mov
xchg
movsl
insl
in
mov
mov
sbb
in
repnz
jns
mov
inc
mov
push
stos
push
sbb
into
cs
sub
leave
pop
add
cmpsb
lods
add
pop
xor
or
fisubrs
fidivl
negl
lods
or
push
mov
push
or
jle
push
bound
or
adc
sarb
aaa
fimull
inc
mov
mov
dec
jmp
insl
sbb
mov
jge
lret
lock
and
jp
mov
aad
lods
movsl
nop
fdivs
pop
stos
jbe
inc
aam
xchg
insl
cmp
fidivrl
pusha
cmp
mov
inc
gs
aam
daa
outsl
sub
push
aaa
fistpll
xchg
xchg
in
insl
ljmp
pusha
mov
or
mov
adc
pop
subb
ds
js
adc
popl
pop
mov
inc
add
mov
test
inc
std
sti
out
sbb
scas
aam
inc
mov
mov
adc
push
insb
test
ja
pop
fdivrl
jne
xorl
fdivrl
shrb
loope
jbe
out
mov
stc
pop
andb
psllw
es
sub
jmp
aam
mov
push
jl
add
cmpsb
adc
pusha
jl
js
or
pop
sbb
or
xchg
pop
or
jae
push
icebp
add
jl
stos
pushf
sub
test
and
fcmovbe
adc
xchg
mov
or
loopne
testb
ret
mov
dec
ja
jl
push
orb
rol
mov
inc
xor
mov
mov
pop
fnstenv
pop
adc
insl
sub
inc
adc
push
call
aaa
pop
push
xlat
clc
scas
insl
test
mov
loop
mov
and
clc
adc
mov
mov
push
rorl
cmp
mov
pop
dec
jmp
inc
outsb
sahf
mov
xchg
xor
call
mov
aaa
lock
mov
fistpll
jmp
ret
arpl
adc
dec
repz
pop
mov
jl
adc
and
loopne
ficomps
adcl
pop
test
mov
push
jo
mov
or
call
pop
out
push
addr16
hlt
and
sbb
test
mov
test
fisubrs
jns
test
call
sbb
mov
mov
mov
fbld
push
and
jb
mov
aaa
sbb
mov
cmpsb
sti
sarl
sbb
jmp
adc
sbb
lock
fistps
lcall
rolb
fwait
lea
scas
fyl2xp1
decl
jbe
out
pop
push
dec
and
lcall
dec
fcomp
push
fistpll
pusha
pop
call
fdivrl
test
int3
rclb
test
dec
in
add
pop
loopne
btr
xor
or
or
lock
add
scas
call
test
add
inc
push
pop
pop
cmpl
xchg
andb
sti
out
cli
sahf
pop
adc
pop
sbb
push
mov
sbb
icebp
jle
ret
pop
clc
imul
pusha
rclb
pop
pop
fwait
mov
jle
xor
push
in
imulb
roll
mov
pop
call
sbb
pop
cmp
aad
push
mov
insb
adcl
iret
cmpsb
mov
jge
sub
pop
inc
mov
add
xchg
adc
out
jge
sub
imul
xor
pop
mov
jb
or
insb
test
mov
mov
adc
pop
jg
mov
mov
loopne
or
lea
ret
sub
iret
in
stc
xorl
push
stos
adc
lea
mov
scas
ja
stos
icebp
adc
js
push
sbb
test
xor
out
or
sub
enter
ds
sub
push
mov
scas
cwtl
inc
dec
jle
aad
mov
cmp
dec
int
xchg
mov
adc
pop
mov
adc
les
or
cwtl
push
shl
jmp
fiaddl
call
outsl
inc
xchg
inc
push
xorb
mov
xchg
lret
adc
jp
shrl
cmp
incl
roll
push
lahf
pushf
mov
in
scas
es
ffreep
sbb
lcall
adc
cld
push
aam
ret
nop
iret
pop
cmp
dec
stc
js
rcrl
popa
cmpl
jns
jb
adc
and
sbb
das
push
das
scas
mov
dec
divb
mov
lods
outsl
addr16
aas
sbb
add
aad
insl
aas
and
addr16
push
mov
or
add
and
xchg
js
lds
dec
sub
inc
ds
or
fists
sbb
fidivl
mov
test
lods
mov
add
std
in
jae
inc
mov
xor
das
shlb
bound
mov
movups
mov
jns
add
frstpm(287
in
mov
std
fistpll
xchg
or
into
rcl
mov
test
movb
and
js
pop
xchg
jmp
fdiv
pop
add
and
or
inc
cmp
sub
push
pop
fbld
or
sar
add
shl
dec
pop
lret
dec
adc
adc
js
sub
pop
rolb
fbstp
dec
inc
mov
hlt
pop
flds
sub
pop
stos
stos
fistps
pop
cmc
decl
and
pusha
add
ret
adc
adc
cmp
and
roll
mov
sbb
xchg
or
lret
fstl
adcb
pop
fsubrs
test
aam
xchg
andb
dec
jge
shrb
cs
push
jns
lods
mov
xchg
fisubl
mov
roll
daa
or
test
lds
push
stos
or
inc
inc
mov
mov
mov
enter
pop
inc
push
mov
sub
xchg
lret
add
xchg
loope
dec
mov
mov
add
mov
in
mov
int3
adc
xchg
add
mov
sbb
add
push
adc
mov
jnp
into
push
xchg
mov
inc
insb
xchg
popa
idivb
enter
jecxz
sbbb
rolb
sub
into
cmp
adc
and
dec
add
push
add
add
ljmp
inc
nop
subb
push
cmp
lods
cmp
push
xor
sbb
xchg
out
lds
xchg
add
or
or
fisubrs
aad
cwtl
adc
sbbb
pop
push
dec
xor
loopne
cmp
mov
or
jae
nop
fsubrl
adc
int3
out
shll
mov
cmp
sahf
adc
sub
out
adc
xorb
pop
pop
fsubr
or
lock
push
test
add
push
cmpsb
sub
push
adc
ret
sarl
add
xor
mov
mov
cli
sbb
pop
pop
cli
jo
pop
push
add
stos
sbb
gs
test
test
and
lds
cltd
sbb
lahf
insb
mov
adc
jnp
lds
push
bound
mov
icebp
jno
inc
ror
sub
sahf
repnz
and
and
jae
add
test
sbb
or
jmp
inc
js
add
dec
mov
xchg
sub
sbb
add
add
fwait
or
xchg
pusha
sbb
add
adc
push
add
mov
xchg
inc
inc
mov
je
sub
dec
subb
mov
adc
sub
in
push
in
imul
les
cltd
out
scas
xchg
mov
scas
push
or
push
daa
lods
adc
xchg
mov
div
mov
in
push
dec
push
das
rorb
adc
or
sub
inc
jae
adc
push
or
fildl
mov
add
pop
add
cmp
push
iret
adc
adc
hlt
adc
xchg
pop
add
xchg
ja
pop
test
scas
xchg
mov
inc
movsl
adc
mov
push
adc
ficoml
hlt
sub
stos
clc
add
sbb
dec
push
xchg
add
adc
data16
sbb
fcoms
push
dec
test
jl
or
sbb
jl
xor
lcall
jle
push
rcrb
daa
push
adc
outsl
push
mul
mov
clc
dec
notb
xor
sarb
mov
aas
loop
enter
xchg
inc
gs
mov
mov
faddl
push
mov
test
movsb
test
fbld
jnp
mov
rcl
pop
mov
lcall
xor
shr
pop
jmp
addb
jo
sbbb
add
addr16
divb
loope
loope
outsl
fldenv
fsub
stos
test
sub
jb
dec
jle
lahf
push
dec
mov
sub
add
mov
addr16
test
add
sbb
insl
iret
inc
sbbb
dec
dec
jmp
or
sahf
adc
inc
inc
inc
data16
shl
push
push
push
push
jbe
mov
add
sbb
stos
push
bound
sub
dec
mov
addl
dec
push
out
mov
adc
jecxz
mov
xchg
or
jne
fwait
pop
dec
inc
sbb
and
adc
add
in
mov
jl
jl
jo
jo
lods
or
jae
or
mov
adc
jle
xchg
add
icebp
mov
mov
out
cwtl
push
and
add
push
jge
outsl
add
addr16
and
xor
ljmp
sub
dec
stos
pushw
jne
push
jp
jp
insb
out
pop
jecxz
ljmp
test
dec
mov
dec
inc
push
sub
inc
xor
in
dec
lds
cltd
pop
ljmp
das
inc
add
iret
add
add
mov
lcall
mov
and
enter
loope
and
scas
fcomip
xor
add
push
movsb
push
daa
pop
inc
mov
repnz
mov
mov
outsb
imull
inc
std
popa
ljmp
test
cmc
add
lds
addl
dec
dec
cmp
out
popf
add
inc
cld
jl
jmp
in
mov
mov
push
arpl
lea
mov
lea
pop
mov
cli
dec
fdivs
push
xorb
and
dec
and
mov
cmp
icebp
js
xchg
cmp
cli
and
dec
xchg
cmc
pushf
das
xchg
sub
sbb
aam
stos
adc
pop
add
ja
push
or
mov
jg
mov
jne
add
outsl
rclb
fildll
lea
lahf
or
pop
fmulp
sarb
arpl
scas
add
pop
std
mov
dec
adc
pop
iret
jmp
xchg
push
insb
pop
loope
mov
push
mov
fcmovnu
jle
pushf
fldcw
push
dec
push
cmp
sbb
sahf
add
xor
cli
incl
std
repnz
add
dec
mov
stos
inc
mov
inc
sbb
insb
adc
pop
mov
sbb
push
dec
shll
testb
inc
frstor
cwtl
mov
hlt
pop
mov
mov
mov
popl
pop
aaa
subb
mov
inc
sbb
adc
sub
cmp
movsl
in
icebp
pop
sub
pop
add
roll
or
push
xchg
xor
push
or
cmp
push
test
fucomip
mov
popa
mov
xor
adc
insl
pop
pop
and
cli
inc
sbb
cmp
outsb
adc
in
cltd
sysexit
xor
inc
mov
js
cli
jae
loopne
mov
and
jae
inc
dec
or
clc
mov
call
xchg
ja
dec
xchg
popf
lahf
sbb
and
jno
ret
pop
xor
adc
add
and
inc
enter
xchg
sti
push
rorl
inc
or
insl
or
add
add
mov
and
daa
int
or
fdivrs
push
adc
xor
add
add
adc
rcll
rclb
cld
mov
int3
cmpsb
cmp
test
mov
sbb
or
or
into
dec
and
out
or
add
xor
mov
push
cltd
adc
adc
fwait
mov
data16
and
std
ljmp
iret
adcb
mov
lock
mov
and
mov
ljmp
xlat
sub
mov
sub
ucomiss
mov
idivl
sub
rcll
jle
cmp
xchg
inc
adc
pop
mov
xchg
and
adc
adc
sbb
inc
jns
jecxz
push
arpl
sbb
add
cmp
cmc
dec
leave
xchg
aad
icebp
call
mov
inc
sbb
andb
inc
add
cmp
add
xchg
mov
push
loop
js
adc
call
mov
loopne
adc
mov
mov
sbb
sub
and
or
xchg
jno
inc
inc
test
mov
mov
adc
outsb
xchg
lret
and
les
inc
jbe
fs
cmp
mov
mov
scas
mov
xchg
pop
push
cltd
pop
inc
outsb
cmp
push
pop
and
sbb
shr
mov
push
aam
dec
aam
or
adc
mov
add
ljmp
add
inc
lcall
rcrb
push
or
cli
popa
enter
lock
push
outsb
notb
movsb
cld
mov
iret
pop
sbb
dec
pushf
es
adc
mov
push
in
test
or
push
ja
call
hlt
fistpl
popa
add
rcl
popa
insl
imul
push
insl
fs
push
cmp
add
out
mov
mov
mov
hlt
dec
cmp
mov
mov
cmp
imul
testl
sti
loope
aam
shlb
push
push
hlt
shrb
add
adc
adc
xor
aam
cld
cld
and
into
push
xchg
shr
and
inc
scas
adc
hlt
xchg
push
sbb
mov
cmp
cld
test
or
lock
dec
orb
sbb
iret
add
add
outsb
lcall
pop
int3
mov
push
lret
push
jo
add
jb
adc
aaa
sahf
mov
push
push
les
mov
xchg
push
sbb
out
pop
cld
mov
push
fildll
sub
sbb
add
pusha
loopne
aas
mov
push
lahf
xor
add
jne
cmp
jae
mov
add
mov
and
adc
jecxz
andl
stos
inc
out
sub
xlat
shrl
xchg
dec
mov
push
testb
fdivrl
or
mov
push
dec
inc
out
or
nop
dec
jno
dec
sub
or
add
roll
mov
sbb
je
stos
or
and
jmp
mov
loop
or
lock
inc
std
fistl
mov
add
push
cli
lahf
arpl
add
pop
and
subb
or
fcoml
xchg
pusha
icebp
or
ret
adc
daa
and
inc
int
aad
adc
jbe
cmc
or
cmpsl
orb
test
mov
ja
mov
adc
jae
je
mov
jg
cltd
inc
ret
in
and
arpl
mov
test
jnp
loopne
rcr
dec
aam
xor
mov
inc
adc
cmp
adc
and
rcll
xchg
jl
or
outsl
and
das
cld
fwait
outsl
out
mov
loopne
mull
repnz
scas
sti
or
loop
icebp
mov
dec
pusha
xor
and
sahf
push
inc
clc
jg
std
adc
fs
adc
mov
inc
xor
mov
jmp
std
ja
js
insl
mov
shrl
mov
cli
mov
pop
jmp
mov
inc
cld
lds
push
jle
dec
lds
fistpl
or
dec
push
aaa
xor
fsubs
jno
lret
or
arpl
push
jo
and
fsubs
gs
sub
lock
outsb
cmp
push
shll
iret
sub
xchg
es
in
call
push
out
pushf
jl
das
aad
aad
shlb
inc
sarb
ss
ret
pop
dec
jnp
and
xchg
sub
in
icebp
ds
jmp
scas
lcall
cmpsb
mov
mov
dec
stc
inc
or
notb
xlat
push
mov
xor
mov
out
adc
pushf
int
stos
cli
rep
pop
lahf
push
inc
clc
dec
mov
sub
fucom
push
leave
inc
cltd
sbb
ljmp
mov
stc
pop
mov
sub
xchg
sub
adc
inc
cmp
mov
sahf
gs
push
fsubr
fadds
loopne
loopne
inc
leave
sbbb
mov
roll
inc
mov
or
cmp
mov
shl
insl
test
mov
addb
clc
fdivrs
mov
repnz
sbb
push
je
jp
jecxz
xchg
mov
fcoms
jnp
and
gs
inc
int3
mov
adc
pop
mov
push
inc
and
out
subl
add
or
imul
into
mov
enter
shrl
push
and
add
xchg
mov
aaa
add
inc
in
add
pop
bound
add
loopne
mov
dec
jle
shl
repnz
int3
adc
lods
add
scas
xor
int
xchg
cmp
xchg
adc
and
addb
xor
pop
lea
dec
push
mov
cltd
xlat
and
xchg
in
mov
ret
sub
outsb
out
mov
mov
mov
xor
xor
ds
push
or
push
call
outsl
out
add
test
add
or
loope
inc
lret
add
mov
lcall
fsubs
jbe
mov
sub
clc
and
jp
inc
mov
fucomp
int3
movsb
adc
jp
mov
lea
lds
insl
xchg
daa
data16
lods
or
jne
stos
std
orl
movsb
push
mov
jnp
sub
icebp
xchg
xor
ljmp
cli
out
adc
test
pop
loope
out
js
les
testl
mov
adc
jbe
pusha
mov
movsl
mov
cwtl
insb
mov
inc
mov
loope
clc
xchg
push
dec
xchg
pop
mov
mov
daa
xchg
push
sbbb
arpl
imul
mov
add
pop
nop
scas
sbb
inc
andl
xchg
imull
mov
es
sub
imul
sub
jo
rcrl
addr16
out
rol
mov
sub
sub
nop
loope
push
hlt
sbb
push
sub
inc
and
or
sub
adc
inc
rcrb
pop
jle
adc
push
push
xorb
push
mov
scas
push
scas
or
sub
jns
xchg
push
and
sbb
mulb
jmp
xchg
add
xchg
clc
inc
jae
aad
pop
push
xor
insl
adc
fldenv
jp
xchg
insl
outsl
or
add
js
adc
or
lock
and
adc
sarl
stc
dec
push
mov
fisttps
test
subb
jmp
lcall
das
sub
sbb
subl
out
roll
std
call
pushf
jmp
stos
rsm
icebp
test
cmp
das
mov
sub
outsb
icebp
dec
sub
je
divb
xor
xchg
fimull
loopne
clc
add
adc
dec
adc
xor
insb
or
mov
add
sbb
lods
adc
push
mov
call
inc
out
cltd
fsubp
mov
test
mov
inc
clc
clc
aaa
dec
push
cmp
clc
popa
into
and
aam
add
pop
sbb
jne
lret
das
std
and
loop
mov
push
lea
sbbb
fdivr
adc
aas
add
jecxz
or
pop
add
rcll
rol
mov
cmpsl
sahf
pop
imul
add
sbb
and
ljmp
xchg
popa
cmp
outsl
subb
shrb
shr
fdivrl
add
rol
cmp
aam
daa
push
and
loopne
movsl
cli
loopne
ret
mov
insb
xor
dec
subb
inc
pusha
dec
test
notl
mov
incb
aam
mov
sbb
bound
mov
mov
pusha
aam
adc
je
or
shll
dec
sbb
push
inc
and
mov
mov
mov
xor
mov
mov
push
dec
loope
or
lock
loopne
mov
mov
xor
popf
ljmp
aaa
cmpsb
movsl
daa
bound
inc
imul
popf
mov
jp
xchg
and
adc
stos
sbb
addl
ss
mov
jno
jg
in
ret
sbb
mov
or
sbbl
inc
push
or
rorb
cli
xor
dec
pop
sub
push
pop
out
int
lock
push
lahf
push
in
or
xlat
and
incl
imul
jmp
adc
ljmp
or
and
lea
cld
sub
pop
adc
lret
mov
insl
sub
add
daa
push
xor
scas
and
inc
cmp
call
inc
imul
pop
mov
lock
xchg
adc
inc
leave
push
sub
ret
dec
ljmp
inc
dec
xor
pop
and
lahf
and
push
adc
mov
js
fsubl
fs
or
xor
roll
adc
imul
add
jp
jecxz
lods
add
jno
xor
shrb
rcrb
jle
sbb
mov
repnz
or
lods
lcall
out
stc
rolb
push
lock
mov
cli
xor
mov
dec
out
or
int
or
cli
lea
push
adc
sarl
daa
loop
inc
adc
lock
push
xor
rolb
lea
inc
mov
xchg
xchg
adc
jl
dec
out
pop
shrl
add
mov
dec
cmp
xor
rolb
mov
outsb
push
cmp
pop
push
xlat
mov
sti
and
pop
cmp
inc
xor
mov
js
subl
out
inc
nop
adc
inc
inc
or
xchg
in
ja
test
and
icebp
adc
jge
add
cmp
jo
and
adc
rorb
jecxz
sub
popf
push
mov
adc
stos
and
jmp
jge
push
lock
xor
icebp
test
push
mov
add
pop
lret
mov
sbb
dec
adc
add
je
pop
xchg
lret
das
mov
iret
adcl
imul
sahf
add
shrb
enter
xor
lods
lds
sub
pushf
inc
xchg
ljmp
add
mov
or
mov
arpl
lock
adc
jnp
shll
daa
fimuls
daa
icebp
push
sbb
xor
add
add
ja
mov
lods
xchg
jb
inc
inc
test
adc
sarb
dec
rorb
out
sub
lock
ret
les
fndisi(8087
dec
mov
bound
jae
popf
je
fs
insb
lods
sub
mov
pusha
push
ljmp
repnz
jmp
rclb
rcrb
inc
push
mov
pop
cld
lods
or
dec
cmp
add
in
add
sub
xchg
push
icebp
push
pop
push
dec
dec
add
in
mov
sbb
dec
call
cltd
mov
sub
xor
push
adc
sub
jmp
and
pop
adc
pop
mov
icebp
and
aam
mov
sub
aam
pusha
add
adc
dec
in
pusha
je
adc
add
adc
lahf
fnstcw
leave
adc
es
cmp
and
jbe
lds
sbb
int
lea
mov
sbb
dec
sbb
rol
and
pop
and
inc
iret
std
insb
xchg
sbb
add
cmp
out
mov
pop
stos
rolb
add
xor
xor
dec
mov
movsl
add
andb
sar
fdivl
pop
cmpb
scas
or
andb
test
jecxz
loope
sub
ret
dec
popa
add
add
out
adc
aad
pop
rorl
add
movsb
test
lods
add
push
jmp
jns
cmpsl
pop
pop
js
inc
xor
ficoms
je
aaa
jno
loope
or
and
xlat
pop
add
cs
popa
push
fiaddl
xor
jle
xchg
lods
and
sbb
add
gs
sub
and
cwtl
dec
xor
fcompl
orb
add
inc
ret
push
adc
ds
dec
sbb
bnd
ja
jo
test
add
jb
push
pop
inc
shll
adc
push
out
add
addl
cmp
es
mov
enter
sub
loopne
dec
and
mov
mov
mov
push
ret
xchg
sub
pop
test
mov
jne
scas
ss
xchg
or
fiadds
popl
inc
lods
add
mov
les
pop
jp
mov
mov
jge
and
cmp
dec
mov
test
sbb
call
add
xchg
sbbb
es
sbb
std
dec
adc
dec
popa
aam
repnz
cs
dec
inc
mov
std
mov
test
add
shrb
std
aad
movsl
mov
out
add
test
cmp
iret
lret
push
mov
fnstenv
in
pop
mov
pop
andl
test
mov
mov
push
jg
mov
sub
mov
std
fildll
inc
dec
subl
pop
mov
pop
xchg
mov
lcall
mov
jbe
xchg
inc
add
add
adc
incl
dec
andb
sub
icebp
sti
fwait
test
add
lods
pop
fsubl
add
and
add
inc
pop
jge
inc
mov
repnz
push
lcall
jp
cltd
mov
rorl
bound
add
and
mov
fmull
add
addb
sbb
loopne
inc
repnz
sub
popf
je
mov
unpcklps
in
and
xorb
sub
xor
add
test
add
xchg
mov
idiv
jl
mov
pop
add
mov
punpckhbw
mov
subb
lods
clc
and
cwtl
inc
pop
sbb
add
incl
adc
cmp
ds
sarb
lds
and
mov
inc
add
aas
push
mov
push
sti
cli
out
pop
repnz
pop
xchg
sbb
adc
push
stos
mov
fldenv
out
mov
xor
mov
dec
dec
pop
mov
dec
loopne
adc
je
dec
push
test
mov
xor
fdivrs
fs
into
fsubrs
mov
pusha
mov
and
adc
inc
cmp
cmp
xchg
pop
mov
push
push
or
inc
in
cmpl
mov
clc
mov
add
xor
shll
sbb
jne
sti
jg
or
iret
arpl
cld
inc
lret
sub
and
ja
aad
and
bound
incl
cmp
or
sbb
dec
mov
lea
add
and
fwait
in
mov
clc
pop
inc
stos
or
adc
ljmp
mov
outsb
mov
sbb
xorb
test
scas
aaa
pop
sbbl
je
idivl
add
incl
dec
ret
adc
fcmovnu
orb
mov
push
pop
ror
push
or
dec
adc
mov
and
inc
inc
and
cwtl
adc
mov
in
subl
or
ja
push
or
sbb
shrb
push
std
mov
pop
xchg
sub
div
stos
call
test
in
sbb
sub
jg
stos
rcll
jno
pusha
inc
pop
mov
test
mov
mov
mov
scas
add
call
mov
sub
push
out
lret
cwtl
pop
popf
mov
std
xchg
jno
lret
jne
lods
adc
sub
aaa
and
mov
xor
sbb
mov
outsl
cmp
jp
mov
dec
and
fsts
cld
pop
scas
add
test
cmp
inc
movb
inc
fmull
enter
scas
mov
jmp
ret
push
jne
rcr
loopne
pop
stc
xor
xor
stos
jae
xchg
xor
outsl
pop
je
xlat
dec
arpl
push
inc
lods
push
and
stos
repz
fs
add
add
or
push
xorl
xchg
fbstp
xor
mov
xor
sub
adc
and
pop
sarl
push
adc
inc
sub
popa
adc
inc
popa
pop
dec
insl
inc
dec
mov
fisubs
and
clc
or
je
mov
sub
enter
lds
or
test
inc
in
dec
cmp
scas
mov
dec
and
fisttps
push
jns
jb
and
cld
jge
push
inc
jnp
jne
shlb
push
mov
cmovnp
adc
cmp
xchg
icebp
addb
cmp
aam
ljmp
push
sbb
push
loope
or
addl
vandnpd
dec
xor
pusha
mov
inc
roll
lret
fs
sbb
sbb
js
test
filds
enter
add
dec
add
movsb
aam
add
sub
mov
sbb
iret
out
mov
jnp
push
mov
adcb
les
shll
jno
das
nop
cmc
pop
inc
in
imul
mov
xchg
adc
jb
mov
push
enter
sbb
lds
shl
int3
rcrb
enter
insl
jl
data16
xchg
mov
mov
das
jns
in
xchg
sub
inc
adc
sub
add
test
enter
test
mov
and
jne
lock
xor
lods
iret
push
inc
inc
mov
mov
and
test
adc
push
jg
push
test
je
hlt
or
mov
gs
jnp
cmp
cmp
jae
jns
sub
loop
data16
sti
xor
add
or
and
test
insl
pop
add
jns
jo
or
jns
add
add
add
sub
xor
cmpsb
cmp
je
and
cmp
pushf
sub
jg
pop
mov
pop
xchg
popf
cwtl
cltd
mov
loop
xchg
and
cmc
cmp
les
mov
ja
orl
cwtl
sarl
insb
xor
adc
cld
in
cld
mov
inc
xchg
lahf
and
adc
hlt
push
fldl
mov
cmp
cmc
jo
adc
shlb
sbbb
cmp
jp
inc
sti
or
mulb
mov
imul
add
decl
mov
inc
ds
aas
mov
adc
push
mov
pop
pop
stos
es
in
or
mov
mov
pop
outsb
and
cltd
jbe
mov
lock
add
sti
ljmp
mov
and
adc
or
inc
rcl
mov
sub
xchg
hlt
cmp
jle
cmp
cmp
mov
mov
in
or
push
pop
sub
jne
xchg
mov
sub
mov
adcl
std
xor
cli
add
or
imulb
cwtl
int3
pop
pop
pop
pusha
xor
cld
sbb
xor
push
enter
mov
mov
mov
jg
lret
push
insb
daa
add
mov
mov
add
test
pop
enter
mov
cmp
hlt
push
hlt
fs
mov
adc
iret
jne
mov
dec
mov
sbb
js
mov
sahf
jo
fsub
lret
or
pop
inc
push
sbb
jmp
test
repz
nop
imul
mulb
test
mov
flds
mov
mov
movsl
sbb
idivl
nop
adc
push
cmpsb
cmpsl
jno
jle
adc
roll
adc
jg
mov
test
xor
xchg
xchg
pop
inc
ja
test
out
push
xor
xchg
xor
stos
xchg
loope
in
sbb
dec
and
jae
pop
dec
push
mov
mov
dec
loopne
jne
cmpsl
in
jle
mov
mov
dec
out
incb
outsb
push
lds
out
clc
jecxz
daa
mov
test
push
jbe
jecxz
adc
pop
and
loopne
paddsw
aas
push
mov
cli
out
mov
dec
nop
mov
jb
adc
int
sub
jo
in
cwtl
cmp
lds
faddl
in
frstor
cmp
push
int3
popf
and
mov
outsl
das
shrl
movsl
fs
mov
pop
popl
into
imul
xor
pushf
jle
in
or
bound
nop
fbld
or
xchg
xor
clc
adc
addr16
lret
imull
mov
xor
and
int3
test
dec
mov
test
mov
pusha
ret
or
fbld
nop
ret
jnp
sbb
xor
adc
jnp
push
xor
loop
and
cmpl
mov
es
adc
inc
inc
cli
ret
inc
push
faddl
scas
and
dec
sub
outsl
mov
push
push
shll
add
add
mov
test
jbe
inc
jo
push
mov
mov
test
xchg
insl
push
dec
sarb
or
popf
ret
mov
sub
fucomi
dec
mov
jne
push
xor
pop
sub
push
add
rorl
lods
test
mov
je
inc
cmp
cs
xlat
clc
add
jb
sbb
pop
inc
ret
inc
add
xorb
popf
mov
outsb
or
jmp
or
or
lret
jno
xor
ja
in
pop
jecxz
cmp
shll
jp
call
ja
pop
pop
xchg
adc
and
leave
into
or
test
add
insl
sbb
jb
aas
sub
scas
pop
adc
je
lahf
sub
stos
stos
jg
adc
sbb
or
mov
push
cs
fcomps
adc
fildl
jne
mov
xchg
inc
stc
push
cmp
test
cli
xor
repz
testb
loopne
pop
mov
hlt
push
dec
in
mov
fildl
aas
imul
push
cld
mov
pop
ret
jp
bound
xor
sub
outsl
lea
mov
xchg
mov
mov
popa
xchg
pop
pop
pop
aaa
dec
jge
push
test
out
jmp
push
sub
mov
rolb
jmp
fcomip
lods
xchg
decl
inc
jne
rcll
xor
rcr
adc
pushf
and
mov
dec
dec
add
lea
xchg
mov
mov
fcmovnb
sbb
dec
std
pop
jge
mov
xlat
push
push
call
mov
inc
push
lods
cmp
pop
std
or
pop
scas
sub
jge
push
push
es
ljmp
jo
pusha
lods
jno
cs
cld
dec
push
negl
in
cmp
mov
jecxz
in
popa
popa
int
sub
push
xor
fwait
je
icebp
inc
mov
push
out
stc
jmp
add
mov
mov
lret
imul
pop
adc
montmul
cmpsb
test
sub
ret
call
jg
lock
add
int3
jne
push
sbb
inc
mov
mov
daa
leave
addr16
xchg
lret
xor
inc
movsl
out
enter
icebp
loope,pn
push
or
jecxz
inc
xor
sub
or
dec
cmp
pop
shrb
inc
xlat
push
sub
or
in
aas
mov
test
lret
mulb
lea
adc
fnstcw
rorl
dec
mov
sub
xor
xor
mov
fildll
xor
add
lret
icebp
clc
xchg
testl
dec
dec
mov
cli
or
xchg
adcb
jmp
test
sub
fwait
sub
jecxz
popf
outsb
cld
dec
mov
xor
jbe
mov
jno
jp
movsb
and
testb
jne
sub
in
pop
shlb
xchg
test
popf
xchg
xchg
xor
mov
cld
dec
int
jo
and
mov
test
daa
test
lahf
ljmp
xchg
adc
and
js
and
jo
hlt
lea
push
and
imul
stos
or
inc
in
fistps
push
gs
cmp
cltd
push
sub
fidivrl
sub
cli
dec
dec
repnz
cld
pop
test
xor
pop
pshufw
mov
adc
daa
mov
fwait
gs
outsl
xor
dec
adc
test
sbb
inc
mov
sub
outsl
sbb
stos
jmp
xor
add
mov
pop
add
inc
push
mov
inc
out
mov
in
xor
ljmp
sub
je
dec
lret
cmp
push
outsl
rorb
sbb
fildll
insb
mov
imul
pusha
xchg
int
jbe
dec
push
jo
and
dec
xlat
int
mov
pop
cmc
lods
sbb
lea
add
clc
sbb
mov
repz
loopne
adc
fildll
adc
cmp
arpl
mov
incl
mov
testl
into
sub
sbb
lahf
mov
pop
iret
xor
xchg
cmpsl
fwait
jle
mov
dec
cmp
subl
or
jns
add
sbb
leave
clc
ret
insl
shrl
add
lea
inc
push
cltd
inc
pop
inc
mov
shrb
cli
lea
push
movsb
mov
call
mov
popa
dec
and
pushl
push
jl
xor
add
xchg
jmp
adc
mov
mov
dec
add
js
cmp
pop
ja
shr
adc
mov
loope
push
dec
pop
jnp
loopne
outsb
mov
daa
shll
sub
dec
xchg
gs
filds
dec
pop
mov
je
icebp
lds
and
lea
xor
adc
mov
jg
mov
cmpb
fisubrl
pop
pop
inc
add
pop
xor
cltd
sbb
addr16
sbb
jo
mov
inc
leave
scas
push
push
aas
incb
adcl
andb
cmp
fwait
or
add
in
add
cmc
sub
nop
popa
aam
fucomp
insl
jecxz
mov
mov
pop
cmp
aam
add
popa
lock
cmp
lock
ljmp
decb
mov
lahf
and
inc
fcmovb
in
fnstsw
adcb
popf
mov
js
sub
aaa
pop
out
syscall
pop
pop
pop
inc
pop
mov
in
dec
mov
sbb
jecxz
inc
iret
imul
stc
aaa
inc
mov
mov
nop
xor
aad
mov
leave
adc
push
and
pushf
mov
dec
stc
push
inc
add
jge
mov
in
addr16
xchg
xchg
sub
push
jg
shll
mov
pop
mov
xchg
pusha
xchg
negl
jg
pushl
pop
ss
push
and
addb
and
xor
ja
jl
sti
mov
cli
cmp
sbb
push
sbb
jp
mov
daa
adc
mov
add
daa
call
inc
mov
std
mov
hlt
ljmp
fldt
push
scas
dec
cmp
mov
xchg
mov
xor
adc
push
js
clc
pushl
push
imul
push
and
adc
loop
pop
fisttpll
lahf
pop
mov
cld
push
shrl
hlt
fwait
xchg
or
lahf
insl
xlat
or
jno
lods
scas
cmp
test
loop
ds
or
dec
cmpsb
pop
in
rolb
adc
lods
mov
mov
cwtl
dec
sbb
xchg
and
imul
sti
push
test
or
sbb
sub
loopne
mov
hlt
int
sbb
jae
mov
adc
ficomps
out
push
fst
pusha
imul
jmp
insl
leave
negb
jge
ds
insb
loope
divb
clc
or
ljmp
add
lea
xchg
neg
je
std
push
jmp
outsl
pusha
pushl
dec
xchg
pop
jge
mov
sub
inc
cs
dec
jg
xchg
lock
mov
mov
xlat
cmpsb
cmc
dec
pop
mov
lcall
call
sbb
repnz
arpl
or
ret
adc
mov
lods
cltd
inc
call
inc
imul
mov
jg
pop
or
scas
cmp
fsubl
inc
sbb
out
mov
xchg
adc
sbb
mov
mov
inc
insb
mov
ljmp
addb
inc
fisubs
mov
ljmp
mov
or
mov
add
pop
popl
js
outsl
test
pop
dec
out
inc
fistpll
cmpsl
fdivrp
pop
aad
adc
and
sub
sbb
inc
popf
adc
aaa
cmc
pusha
repz
repz
fsubrs
xchg
stc
stos
lods
mov
les
roll
push
adc
and
test
cmp
sub
or
cmp
cmp
lret
mov
in
cmp
and
aaa
mov
aas
lcall
hlt
mov
and
and
jg
adc
jo
aam
cmp
dec
inc
test
mov
enter
add
out
filds
pop
and
adcl
pusha
or
sub
mov
testl
jbe
mov
loopne
pop
and
lods
test
mov
shll
mov
add
outsl
rclb
das
mov
jo
iret
dec
int3
sahf
or
insb
cmp
push
ja
add
mov
icebp
cmpsb
push
push
xor
inc
pushf
xchg
ss
lds
rolb
in
dec
imul
add
or
pop
sub
pop
mov
js
inc
les
out
mov
cmp
or
or
and
and
cmp
stos
lret
jmp
pop
negb
xchg
inc
or
sbb
arpl
or
fidivl
adc
adc
fmulp
inc
add
test
pop
stos
sub
subl
adc
out
push
xor
sti
xchg
pop
popa
push
in
pop
mov
jecxz
inc
mov
rol
in
fwait
popf
add
cmp
inc
out
push
push
aam
daa
push
movsl
inc
dec
inc
dec
inc
jo
mov
pusha
adc
pop
push
jg
stos
lahf
adc
pushf
stc
sub
andl
adc
dec
lock
mov
inc
push
addr16
mov
sbb
dec
add
lret
pop
xchg
pusha
mov
stos
aas
and
dec
jmp
scas
xor
addr16
mov
dec
or
js
movsl
test
dec
cmpb
pop
fildll
jl,pt
rorl
sbb
sub
sbbb
rcr
add
fiadds
push
xor
xor
adc
addb
cmp
mov
inc
xchg
ret
add
test
jmp
pushf
mov
outsb
test
push
inc
cmp
xor
js
xor
mov
adc
or
fistps
rorb
lret
shl
or
or
mov
or
shlb
add
hlt
cs
add
jmp
int3
add
mov
sbb
mov
and
imul
adc
pushf
push
aad
sahf
ror
push
cs
adc
and
push
iret
insb
cs
in
inc
icebp
push
add
movsb
dec
and
mov
scas
inc
xor
and
mov
adc
dec
push
mov
push
jge
mov
cmp
test
in
repz
imul
mov
xor
xchg
hlt
out
fiaddl
push
sub
and
roll
push
aam
xor
imul
sahf
push
cmp
jbe
inc
push
fidivl
lret
test
cmpsb
xchg
shlb
inc
push
das
lds
push
push
jne
roll
mov
mov
cmp
faddp
loop
mov
nop
out
pusha
xorl
jb
scas
lretw
inc
push
xchg
sbb
add
mov
mov
je
inc
test
pusha
dec
push
aam
sbb
push
inc
shrb
gs
je
inc
adc
loope
or
dec
jp
and
pushf
cmp
pop
lret
idivb
ret
jmp
mov
mov
adc
enter
lods
xor
or
and
shlb
cmp
hlt
or
int3
jb
push
ds
jno
cmp
mov
sbb
cmp
xchg
cmc
adc
stos
fisubs
jge
xchg
push
adc
rcrb
mov
inc
rorl
xlat
int3
fnstcw
and
mov
add
push
push
push
mov
shll
or
and
addb
mov
mov
mov
xor
enter
cs
dec
cmp
jb
rcll
adc
sbb
in
and
rcl
cmp
inc
add
push
inc
cmp
adc
mull
das
jp
out
add
push
push
sub
adc
xor
mov
repnz
dec
call
pop
fwait
pop
pop
lock
lods
dec
cmc
adc
sahf
xor
fwait
outsb
sub
pop
mov
sbb
add
xor
aam
lcall
pop
and
push
add
shrb
in
incb
adc
scas
ret
icebp
add
push
adc
lret
vshufpd
cli
jg
push
sub
icebp
in
jmp
aad
outsl
mov
mov
push
test
xchg
xor
add
out
cltd
ljmp
mov
negl
mov
cmp
dec
sbb
flds
mov
pop
daa
std
loope
jne
fiadds
sub
aas
popf
inc
add
push
ret
or
enter
fldt
cmpsl
iret
mov
mov
das
and
pop
into
push
mov
lods
jle
ljmp
mov
pop
lods
mov
adc
ret
xor
lahf
shrl
mov
cmp
xor
adc
lock
es
jmp
into
add
mov
movsl
psubw
subl
adc
lret
out
add
mov
aad
das
cmc
cld
jg
push
shrb
stos
scas
mov
lcall
sbb
pop
mov
scas
paddw
add
repz
mov
leave
adc
jns
pushf
test
mov
daa
fsubrs
aam
int3
and
and
adc
pop
je
mull
add
lret
jne
sub
sub
xor
push
sbb
jge
mov
incl
fistpl
pop
lock
push
mov
or
imul
xchg
add
cld
adc
sbbl
or
jbe
and
ret
call
sub
jg
ljmp
and
cmc
jg
mov
pop
nop
adc
lret
sbbb
pop
fldl
loop
mov
subb
cmc
fisttpl
clc
ffreep
inc
sbb
in
inc
and
clc
dec
jb
pop
nop
movsl
sub
ret
lea
pop
pop
pop
loope
scas
mov
xchg
and
pop
test
sbb
fsubrs
stc
fyl2xp1
les
mov
xchg
iret
and
mov
fwait
sub
pop
loop
fmul
push
popf
in
sub
push
pop
pop
adc
das
in
mov
ret
pop
pop
fisttps
adc
cmpsl
mov
pop
push
lret
pop
mov
mov
movsl
lods
jno
pop
add
rorb
lock
outsb
mov
push
or
pop
push
pop
cmp
aad
mov
mov
mov
cmp
pop
aas
push
je
pop
mov
lods
xor
mov
cld
ret
fidivl
shrb
push
in
pop
xor
mov
sub
stos
pushf
aam
adc
cld
mov
aam
movsb
testl
insb
mov
xchg
dec
jne
mov
nop
ficoms
mov
into
xchg
jbe
call
sarb
subl
cld
inc
daa
pop
dec
sub
sbb
pop
pop
addr16
gs
xchg
movsb
pop
clc
lods
push
adc
or
jl
mov
lock
push
jg
push
dec
lods
insb
dec
rorb
pushf
sub
sarb
out
adc
mov
push
mov
push
xchg
push
subl
shrb
mov
xor
cmp
cmp
and
push
mov
cli
cmp
loope
call
push
call
adc
popa
ss
out
js
xor
inc
repz
sbb
sbb
jg
mov
imul
notb
dec
mov
inc
je
mov
inc
rsqrtps
pop
xchg
aaa
jg
adc
into
andb
jg
iret
cwtl
add
sub
inc
push
xor
sbb
call
jl
inc
jg
in
adc
mov
jge
hlt
stos
loop
xchg
sahf
sbb
add
es
push
pop
enter
sub
rorb
or
cmpsb
xor
sahf
add
mov
pop
test
mov
call
xlat
icebp
repnz
push
push
or
inc
or
mov
dec
push
xchg
add
adc
dec
loopne
ret
andl
add
xor
sbb
aad
in
push
mov
sbb
mov
int
push
mov
stos
dec
push
sub
adc
dec
andl
in
inc
cmp
mov
inc
outsl
sarl
pop
xor
push
xor
xor
jb
or
push
mov
mov
dec
lds
stc
mov
pop
adc
sbb
pop
dec
jnp
int
test
and
mov
ret
inc
and
mov
sbb
out
shrb
aam
cmc
in
aas
loope
jnp
aad
enter
es
sbb
inc
mov
jg
pop
sarl
jb
dec
inc
addr16
push
es
sbb
callw
rorl
shll
clc
or
cmp
pop
mov
or
repnz
inc
xor
shll
sbb
dec
lods
sub
sbb
bound
into
dec
pop
sub
mov
out
adc
cli
push
push
push
push
cmp
lock
fisubs
xlat
icebp
jbe
xor
fmull
xlat
push
mov
inc
fimuls
adc
adc
inc
cld
adc
and
test
cmpb
addl
jne
push
add
jmp
daa
lahf
or
stos
xchg
inc
jno
popa
add
cmp
add
int3
rclb
add
mov
fmull
scas
sub
push
pop
test
inc
jmp
add
iret
inc
add
mov
stc
ss
or
or
outsb
sbb
fstps
sub
stos
ja
or
mov
add
movsb
loope
std
mov
add
or
loopne
add
push
push
xor
mov
push
cmp
lds
sub
mov
sbb
ss
out
add
imul
or
and
test
or
clc
inc
xchg
repnz
std
stos
mov
push
jne
or
pop
aad
push
sub
inc
adc
push
cld
mov
out
div
add
test
xor
in
sub
fisubs
inc
cmp
jno
dec
sbbl
mov
add
lock
sbb
scas
xlat
pcmpeqw
vsubsd
jl
adc
loopne
repnz
jecxz
sbb
iret
adc
sub
stos
dec
pop
xor
push
add
insl
flds
pop
mov
pop
loopne
xchg
clc
xor
add
rcl
mov
pop
punpckldq
jb
in
outsl
push
stos
xor
rol
pop
sbb
xchg
push
cld
xchg
xchg
cmp
cltd
pop
sti
and
incl
in
mulb
push
mov
popl
lret
popl
fnstsw
into
ss
and
cmc
and
push
and
stos
or
cmpsl
inc
std
inc
xchg
add
jecxz
jne
pusha
pop
in
loop
aad
jbe
or
lods
push
lock
ret
add
or
mov
les
jnp
mov
mov
cltd
xchg
pusha
mov
or
sub
cmpsl
dec
fsubrl
stc
ja
xchg
sbb
mov
rcrb
pop
pusha
mov
mov
incl
mov
or
xor
or
push
divl
mulb
out
lock
cs
adc
cld
js
push
imul
cmp
dec
sub
or
pop
inc
push
call
xor
loopne
test
dec
cli
lcall
out
mov
cmp
lds
aaa
push
mov
or
into
add
dec
andb
cmpsl
push
shrl
call
aaa
jl
rcll
or
sub
cmpsl
adc
pop
das
popa
imul
and
dec
inc
ss
add
in
int3
jnp
int3
add
js
lods
and
or
mov
adc
pop
jno
or
aam
movsl
test
mov
iret
jne
adc
cmp
lahf
or
leave
mov
add
push
test
xchg
mov
rorb
fidivrs
rcr
pop
xor
push
imul
insl
sbb
ljmp
dec
cld
cmp
sub
cli
add
dec
ret
jg
scas
adc
sbb
fstpt
fwait
dec
loopne
add
test
add
dec
add
mov
enter
jmp
sub
sub
shrl
pop
lds
add
sbb
std
add
pop
add
sbb
mov
andb
push
mov
out
or
mov
add
xchg
xchg
lcall
or
and
inc
or
mov
in
push
shll
loop
adc
ljmp
stos
mov
cmp
jns
out
push
mov
fsubrs
in
adc
adc
daa
loop
test
cmpl
ficompl
xor
icebp
add
fmulp
pop
and
inc
mov
fadds
imul
in
fs
in
cmpsb
adc
inc
inc
pop
xchg
mov
enter
sbb
clc
test
ja
mov
sarb
popf
sub
xor
mov
xchg
mov
add
xchg
loope
mov
icebp
jo
mov
jmp
sbb
insl
pusha
cmp
lahf
testl
pop
dec
or
adc
out
cmp
jb
add
mov
lret
inc
mov
xor
mov
shl
jo
adc
loope
shr
push
push
adc
dec
loopne
dec
roll
cmc
cmp
push
inc
lahf
movsb
out
mov
pop
sub
fcmovbe
nop
loop
add
and
push
sarb
adc
mov
hlt
sub
fisubrl
adc
push
cmp
rcll
or
pop
popa
and
jae
or
xchg
or
cmpsl
hlt
inc
pop
xchg
push
and
inc
std
sub
pop
pop
mov
shll
repnz
pop
and
in
pop
xor
sub
mov
pop
mov
addb
cld
rolb
lock
adc
out
arpl
repnz
xchg
movsb
test
mov
cli
outsl
cmpsb
loop
cs
aam
push
push
movsb
cmpl
sti
xlat
push
jb
stos
repnz
cld
adc
dec
mov
lock
dec
sub
rolb
clc
xchg
xchg
dec
or
add
mov
jecxz
inc
imul
add
outsl
mov
mov
add
or
fistpl
adc
inc
push
pop
ds
aas
js
inc
ja
sub
lods
test
mov
mov
ret
scas
jge
sub
pop
sbbb
pop
ret
add
clc
pusha
ja
add
ficomps
add
cmp
mov
mov
push
pop
addb
xor
mov
hlt
syscall
test
mov
dec
mov
movsb
out
sbb
stos
fbstp
add
frstor
xchg
subl
or
xor
or
mov
pushl
mov
and
mov
jg
mov
add
iret
or
fadds
cmpsb
mov
in
stos
shl
loopne
aas
pop
clc
ds
cwtl
xchg
xchg
lock
outsl
dec
and
push
ds
cmp
pop
xlat
sbb
add
add
pop
fs
adc
or
push
inc
sbb
sbb
aas
mov
adc
lahf
cwtl
lods
push
sub
adc
mov
pusha
cwtl
and
in
into
ret
ds
mov
push
insl
imul
stos
pushf
jl
cmc
call
pop
cmpsb
pop
outsl
cmc
dec
or
lds
xor
mov
mov
adc
lods
add
pop
test
or
adc
ret
iret
fldenv
aad
cld
mov
inc
pop
jmp
dec
insb
add
jb
je
fstl
or
dec
aas
movnti
cmp
mov
push
xor
pushf
out
adc
jg
and
dec
push
inc
and
push
xor
addl
insb
rcrl
inc
mov
inc
stos
in
add
test
scas
test
push
sar
mov
or
test
jg,pt
mov
push
lock
push
addb
push
inc
mov
arpl
cmp
fisubrl
push
scas
loop
loopne
mov
sbb
xor
pop
push
adc
imul
insb
psubusw
xchg
inc
in
xorb
int3
xor
push
cmp
lcall
sahf
sbb
fs
je
and
mov
addr16
cld
les
mov
test
pop
sarb
jecxz
dec
adc
mov
lock
les
lock
loopne
psadbw
adc
mov
xlat
jge
sub
pusha
loopne
lahf
sub
xchg
ja
ret
subb
ss
jge
add
js
xor
sub
stos
mov
ljmp
daa
sbb
insb
sub
add
mov
pop
lea
mov
mov
and
lcall
out
mov
jp
jmp
in
iret
out
adc
jmp
das
sub
popf
adc
aas
inc
cmp
test
shrl
sub
test
cmpsb
xchg
or
jge
mov
lds
into
insb
fistl
adc
lcall
dec
ds
dec
in
dec
push
call
fiadds
xor
add
outsl
mov
xchg
insl
ja
mov
dec
or
push
aad
add
clc
sbb
xor
adc
iret
insb
stos
fisttpl
sub
pushf
push
add
adc
sbb
iret
cmpb
sub
mov
dec
inc
xor
xchg
and
mov
ss
add
pmuludq
adc
cmp
stos
inc
dec
mov
jb
add
inc
nop
mov
lcall
push
mov
pusha
xchg
mov
adc
jae
out
jo
or
and
les
jl
add
jle
mov
inc
pop
dec
pop
mov
xor
sarb
lret
addb
mov
or
fnstenv
cmp
clc
or
xchg
pop
jecxz
test
les
adc
xor
sub
icebp
test
jne
xor
dec
aad
loop
orl
adc
fisubrs
push
mov
sub
iret
sbb
lcall
jp
scas
stos
fistps
or
add
inc
aad
sbb
mov
jnp
jg
popa
pop
push
sti
filds
fidivrs
push
and
aaa
out
ljmp
sbb
mov
mov
bound
sbb
adc
lock
out
add
add
jae
pop
loopne
adc
loopne
jecxz
or
jp
fsubrp
jno
sub
std
add
inc
pusha
movsb
pop
loope
ret
dec
mov
mov
xor
xchg
loopne
aas
push
push
push
cmp
xchg
mov
jp
cs
add
add
aam
sbb
loopne
xchg
out
jne
push
sbb
mov
loopne
pushf
jne
inc
js
push
adc
pop
mov
cmp
push
sub
les
clc
adc
xor
mov
in
insl
push
cmpsl
xor
testb
pop
cmp
cli
adc
sbb
mov
cmp
das
sti
inc
dec
jp,pn
jg
in
dec
hlt
fiaddl
pop
sbb
clc
pop
xor
aaa
adc
jo
stc
gs
mov
incb
outsl
cmp
sbb
or
cli
dec
xor
bound
mov
stos
or
add
shrl
popa
inc
insl
mov
pop
std
cmp
push
aas
inc
sub
aad
adc
scas
jmp
inc
sub
shlb
sub
xchg
sahf
aas
adc
fisttps
gs
cmp
cs
push
jno
mov
loop
sbb
sahf
jp
or
push
adc
shr
pusha
jnp
fdivr
test
fdivrp
pop
sub
dec
in
je
pop
in
pop
dec
mov
add
pop
aas
into
pusha
lcall
nop
and
pop
ja
in
in
mov
cmp
outsl
ds
arpl
mov
sub
mov
rorb
fwait
cmp
adc
movsl
dec
mov
sub
jp
mov
ret
jno
jbe
or
les
xor
imul
xor
jecxz
sub
pop
push
cs
push
sub
mov
ficoms
sub
lods
in
and
add
jne
repnz
or
xchg
push
pop
sbb
add
mov
pop
xchg
popa
sbbb
testb
cmpsb
adc
adc
ds
pop
jae
push
insb
or
lock
daa
sarl
sbb
leave
and
add
push
std
cmp
xor
inc
mov
push
dec
push
out
adc
leave
in
shlb
ljmp
dec
jmp
repnz
std
out
inc
loope
js
add
hlt
jb
pop
inc
or
outsl
daa
aas
loopne
test
or
dec
movsb
test
mov
inc
inc
insl
mov
arpl
push
sub
mov
add
xchg
adc
outsl
js
cltd
mov
xchg
cmp
sbb
xchg
dec
pushf
cmpsl
test
rorl
rorl
xchg
inc
adc
jg
add
adc
mov
mov
rorb
sahf
stos
or
adc
roll
fwait
mov
xor
xor
and
int
mov
sub
rcrl
cmp
fidivs
add
adc
and
pop
mov
xor
add
daa
mov
xchg
sub
sarb
imul
pop
cmp
or
and
and
enter
pop
inc
and
sbb
leave
fidivrl
push
add
inc
bound
pop
jl
ss
push
les
dec
out
xchg
mov
or
mov
or
mov
mov
shlb
daa
adc
lea
ss
add
adc
ret
pop
addb
fisubs
stc
xchg
add
and
mov
orb
or
es
add
cli
or
add
and
cs
jle
mov
jmp
sbb
pop
xor
adc
add
cmp
add
sbb
outsb
add
cmp
int
cltd
repz
sub
cmp
and
xchg
add
or
repnz
push
cwtl
add
jge
adc
cmp
jp
adc
mov
cmc
adc
das
mov
add
inc
in
inc
or
shll
inc
or
andl
movsl
mov
pop
out
pop
push
scas
jge
dec
lock
xlat
repz
jb
mov
addb
push
add
add
cmp
sbb
xchg
cli
jo
rclb
rcll
inc
test
nop
lret
insb
add
pop
pop
mov
cli
dec
jb
sti
add
es
push
fwait
xchg
xor
aas
sbb
fs
jae
pop
xchg
mov
in
or
or
push
dec
xchg
je
outsb
loopne
xor
sub
jb
inc
scas
enter
xlat
movsb
add
nop
sbb
pop
loopne
fimull
lcall
ret
push
xchg
add
sbb
push
cltd
or
push
lds
mov
mov
jmp
shlb
movsb
testl
and
add
inc
xor
dec
js
lds
ss
adc
push
dec
loopne
lds
xchg
pusha
bound
jo
push
jnp
inc
aad
daa
cmp
in
sub
sbb
aam
dec
cmp
les
adcl
mov
jle
fimuls
xor
mov
insb
cmpsl
xor
cmp
or
push
add
inc
or
xor
mov
jbe
daa
fdivl
jp
dec
aam
push
sub
xchg
dec
das
shll
test
inc
roll
hlt
scas
mov
scas
push
addb
mov
adc
and
add
orb
mov
dec
xor
aad
xor
mov
iret
mov
jne
int3
ljmp
mov
test
testl
je
pop
xchg
cli
or
and
jmp
mov
sbb
pop
mov
rol
scas
int3
bound
mov
xchg
lds
lea
aam
xor
mov
dec
insb
or
pop
add
and
sub
dec
pop
add
out
cmp
test
iret
iret
andl
js
test
ret
add
les
lock
inc
pop
shrb
int
testl
push
push
inc
dec
ds
cmp
loopne
mov
jl
jnp
loope
dec
les
add
xchg
push
jno
js
xor
and
insb
rolb
scas
das
enter
dec
nop
test
lods
lds
and
adc
and
mov
jns
sub
mov
lock
inc
xchg
push
inc
push
xor
pusha
ljmp
mov
mov
cmpsb
push
notb
cmp
add
ljmp
cmpl
pop
xor
int3
pop
xchg
mov
lea
mov
jle
leave
out
jp
clts
dec
mov
mov
add
add
jmp
dec
xor
xchg
or
dec
dec
mov
lods
add
sbb
icebp
fsubrl
testl
inc
adc
mov
movsb
clc
or
add
sbb
adc
mov
adc
adc
mov
mov
das
add
aas
jmp
mov
lcall
adc
adc
repz
xor
mov
fisubrs
mov
dec
pop
mov
aam
sub
sub
nop
outsb
cmp
lcall
mov
clc
xchg
sub
push
inc
jns
jnp
push
addb
adc
lea
sbb
pop
xchg
xchg
ljmp
aam
aad
cwtl
dec
imul
add
pop
ret
movsb
repz
leave
xlat
sahf
push
out
pop
push
cmovb
and
cli
jbe
or
xor
mov
and
int3
mov
jo
ret
mov
adcb
outsl
cmp
arpl
adc
lock
leave
lods
lcall
adc
sarb
js
arpl
sbb
dec
adc
lds
inc
add
and
xor
mov
lds
jp
adc
popf
pop
sti
adc
mov
mov
xchg
loope
ja
add
inc
call
inc
orb
mov
adc
cwtl
sbb
xor
in
outsb
and
xlat
push
mov
imul
mov
jp
sbb
inc
jg
enter
shll
outsb
sub
pop
dec
pop
jp
add
loopne
mov
incb
test
add
mov
mov
mov
mov
cli
adc
pop
add
adc
dec
push
add
or
sarb
cmpsl
cmp
ret
jne
xchg
add
jb
iret
addb
insl
insb
xor
push
cli
cmp
mov
or
and
mov
insl
adc
cmp
test
cmp
hlt
daa
push
xchg
xor
inc
movsb
test
cmp
add
iret
add
jmp
cmc
es
or
jge
pop
mov
cwtl
adcb
xor
pop
lds
stos
stos
jne
lds
adc
les
add
mov
hlt
cmpsb
xchg
add
add
cmpsb
adc
out
repz
cs
or
inc
leave
jmp
or
and
add
ret
arpl
mov
add
and
and
jns
sar
ret
call
icebp
inc
scas
lea
add
scas
add
outsl
int3
dec
pop
icebp
stc
addl
dec
sbb
ljmp
mov
inc
popa
cmp
test
mov
mov
imul
push
insb
sbb
call
xor
pop
jo
add
add
shll
mov
mov
ljmp
and
fiadds
add
dec
rolb
cmp
loop
cmp
loopne
and
mov
push
push
pop
xor
test
mov
push
adc
push
jmp
and
jnp
jb
push
mov
sbb
or
les
sbb
sub
aam
aaa
andb
ret
cmp
cmp
inc
orb
jl
outsb
mov
jg
sti
and
jge
std
inc
adc
inc
pop
adc
dec
inc
fisttps
aam
jb
sub
jg
mov
xor
mov
cwtl
and
scas
cmp
aas
add
jne
andb
inc
hlt
mov
rorb
mov
or
stos
and
adc
jno
pop
mov
adc
mov
loopne
adc
inc
or
inc
aas
movsl
adc
outsb
sbb
add
mov
pop
adc
aam
cli
rorb
add
pop
stos
inc
repnz
roll
push
sbb
mov
mov
sbb
ss
andb
adc
icebp
addr16
iret
insb
fs
dec
lds
int3
dec
mov
leave
inc
loop
fsubrp
add
popa
mov
rorl
push
daa
dec
or
push
sbb
das
clc
adc
xchg
and
mov
mov
sub
pop
clc
jns
xchg
in
push
idiv
or
dec
shr
subl
dec
jp
inc
mov
mov
fs
icebp
jle
mov
std
test
ret
xchg
pop
mov
cmp
cmp
shlb
rcll
jl
sbb
loope
xor
mov
dec
mov
ret
andb
add
call
jmp
inc
stc
xchg
cmpl
daa
mov
inc
out
and
xor
enter
adc
int
sbb
mov
je
add
jle
lock
or
inc
stc
push
addb
xor
pop
lahf
mov
fs
test
or
rcll
repnz
pop
cmpsl
aam
or
sbb
ja
mov
or
jmp
outsl
out
negb
or
push
xor
addr16
test
sbb
lods
xor
ss
pop
mov
mov
movsl
sbb
jb
mov
sbb
and
xor
fwait
push
popf
pop
add
push
orb
cmp
xorl
cmc
andb
inc
mov
sub
lret
roll
js
mov
sbbl
jmp
mov
add
out
mov
test
mov
lods
xor
adc
pop
add
loop
out
insb
adc
call
into
add
mov
sub
fisttps
pop
inc
pop
sbb
pusha
adc
xorb
push
mov
pop
lret
mov
in
push
mov
jmp
xor
fsubr
push
sub
nop
sub
movl
and
sbb
mov
dec
sub
inc
cmp
or
xor
insl
sbb
call
jne
and
mov
ret
mov
test
mov
push
adc
loopne
clc
in
inc
test
ss
js
test
add
lock
sbb
push
es
call
dec
loopne
test
rcr
adc
jp
ret
rcll
hlt
lret
cli
outsl
adc
mov
fsubrs
test
outsb
mov
sub
pop
push
int
scas
int3
inc
popf
cmpb
aam
dec
or
pop
loopne
cld
neg
adc
cmpsb
call
lock
lret
sub
and
mov
test
add
xchg
cmp
sahf
in
mov
adc
js
cmp
popa
std
arpl
imul
mov
fs
jo
cli
popa
jns
shll
mov
test
inc
and
sbb
or
loopne
imul
insb
xorb
enter
mov
push
data16
mov
adc
add
call
stos
cwtl
jge
lock
xchg
xchg
push
icebp
insb
xchg
test
jg
test
in
pop
adc
adc
push
lods
add
imul
cli
add
jae
inc
nopl
mov
jno
xor
pop
add
shrl
dec
add
push
jb
je
movsb
sub
xchg
fcoms
pusha
inc
pushf
adc
dec
flds
jmp
pop
leave
ret
adc
mov
test
cld
jg
cmpb
add
add
push
test
fwait
sbb
mov
add
arpl
mov
loopne
stos
or
sub
dec
dec
push
cld
test
xor
xchg
mov
clc
testb
popa
push
cld
sbb
lock
fildl
push
decl
fdivp
add
loop
adc
xor
sarl
dec
pop
cmp
jge
inc
sbb
lock
push
pop
mov
xorl
fwait
add
inc
mov
and
add
ja
outsb
sub
push
popa
or
or
clc
pop
mov
fisttps
add
mov
fistpll
mov
add
mov
push
cmp
add
dec
and
mov
adc
jns
stos
les
add
push
push
push
jl
fldt
cwtl
pop
and
xlat
repnz
inc
add
mov
lock
pop
adc
mov
int
mov
sar
cli
mov
sub
cmp
pop
sti
push
add
sbb
xchg
mov
cs
incb
or
adc
add
cmp
mov
pusha
jnp
out
test
ljmp
adc
imul
mov
add
loopne
mov
jge
xchg
call
push
stc
add
outsl
add
dec
push
lods
xchg
ret
add
mov
pop
jae
dec
adc
jecxz
ret
dec
xchg
adc
ret
in
cmp
pop
loope
or
add
sub
adc
sub
xlat
shll
js
inc
sub
lds
fcmovnb
test
mov
and
add
mov
imull
inc
iret
sbb
enter
or
addb
jge
sti
mov
fisttpll
jmp
loop
orb
cmc
pop
sub
add
movsb
sbb
mov
test
xlat
mov
movb
push
dec
and
inc
push
adc
test
cs
sahf
add
xchg
push
es
cld
mov
jne
mov
push
lret
call
in
sub
shl
mov
ficoml
mov
aad
pop
nop
and
out
icebp
addl
mov
fbld
mov
and
in
sbb
fcomp
in
aas
fistpll
fimuls
shl
xchg
cmp
in
dec
in
nop
add
adc
adc
adc
xchg
mov
push
fs
adcb
or
pop
push
lds
iret
subb
add
cmpsb
ret
add
adc
pop
insb
das
bound
mov
adc
sub
adc
mov
sbb
fcoml
imul
shlb
jg
add
adc
or
mov
dec
fidivrl
ja
add
sbb
movsl
or
clc
dec
push
ljmp
sub
lret
or
mov
sbb
cltd
mov
movsb
ljmp
scas
sahf
mov
add
xlat
sahf
or
sub
push
loope
pop
mov
mov
fdivrl
fdivr
adc
daa
and
cmp
aam
sbb
mov
inc
xor
out
add
imul
sbb
imulb
test
jmp
xchg
mov
add
inc
out
jne
push
aas
stos
lods
clc
adc
add
xor
cmp
sti
add
and
jl
dec
inc
sub
das
mov
mov
cmp
mov
sbb
push
add
push
faddl
mov
pushf
mov
and
rclb
stc
popa
and
push
add
adc
xchg
pop
lds
sub
adc
mov
add
loop
je
sub
fidivrs
lret
filds
js
xor
icebp
and
lret
test
test
adc
js
stos
stos
mov
popf
sbb
xor
pop
pushf
push
mov
mov
pop
push
pushf
add
adc
stc
inc
ret
lods
sub
ret
adc
movsl
out
out
adc
push
test
clc
out
and
xor
sbb
pop
bound
shlb
or
pusha
push
sub
adc
sarb
push
add
subl
inc
xchg
add
xchg
and
xchg
lahf
add
call
add
and
adc
and
push
pop
lea
cld
ret
pop
cmp
clc
and
lds
inc
pushf
mov
ret
hlt
adc
push
adc
or
loopne
inc
mov
inc
out
sbbl
popa
push
mov
add
pusha
add
stos
ret
ds
dec
jae
dec
push
push
push
mov
lret
movsb
bound
lcall
popa
mov
add
or
xor
adc
outsl
outsb
das
xchg
and
pop
push
enter
push
add
stos
sub
pop
adc
jb
mov
mov
mov
xor
add
jp
mov
add
adc
insl
mov
mov
mov
mov
ffreep
lea
mov
xor
fisttpl
es
shll
loope
pop
fbld
clc
sbb
cmp
adc
les
jecxz
mov
inc
daa
dec
push
xchg
xchg
addb
push
mov
pop
push
jle
outsl
and
data16
movsl
xor
xor
das
ljmp
fs
roll
xchg
cmp
mov
xchg
inc
aam
jne
rclb
clc
sub
mov
push
stos
cmp
add
ficoml
addr16
cli
push
in
cld
xor
inc
insb
rcrl
sub
push
mov
dec
nop
xchg
mov
or
inc
mov
adc
ret
bound
dec
or
sbb
inc
movsb
ljmp
add
out
orl
in
js
les
and
fistpll
sub
shrl
mul
xchg
or
xor
cmc
addl
fdivs
lods
insl
into
sub
push
jmp
aam
cmp
inc
mov
and
mov
ds
inc
or
cmp
into
or
jne
pop
push
cmp
lods
sub
inc
out
sbb
pop
fcmovnu
or
out
mov
das
xchg
mov
xorb
aam
mov
pop
push
xchg
jno
xor
adc
mov
iret
add
nop
jbe
int
inc
push
xlat
push
inc
test
mov
in
jno
add
scas
xor
cmp
out
daa
fmull
fsubrl
add
sti
xor
bound
sub
push
cmc
cmp
sti
lock
inc
imul
mov
je
or
and
lds
dec
in
pop
rolb
gs
es
or
mov
stos
xor
push
sbb
jp
cwtl
sub
sbb
pop
ljmp
in
sub
inc
push
or
icebp
mov
dec
das
sahf
or
daa
inc
cwtl
push
mov
and
subl
call
mov
cld
inc
or
push
or
out
pop
add
xlat
jno
pop
mov
sub
jne
aaa
push
mov
clc
clc
rcrb
jbe
or
imul
in
shr
sbb
cmp
icebp
dec
inc
cld
sbb
sbb
bound
int3
jmp
inc
dec
xor
adc
push
fs
xor
cmp
sub
shrb
xlat
out
and
mov
dec
mov
push
stos
icebp
stos
dec
inc
add
popa
fadds
mov
jl
icebp
push
mov
pop
inc
adc
inc
inc
call
mov
cmpsb
orb
loop
cli
pop
add
lret
in
frstor
addr16
xor
repnz
sub
xchg
std
jle
outsl
into
les
or
cli
push
jmp
addb
inc
or
inc
ret
popf
sub
sub
mov
fsubrl
xor
nop
mov
adc
and
mov
mov
inc
xor
cmp
mov
insb
mov
pop
cmc
scas
movsl
or
in
inc
and
les
adcb
push
shl
es
add
push
pop
add
test
shll
js
pop
pop
mov
mov
mov
int
jge
loopne
insl
adc
loopne
pop
inc
mov
mov
je
insl
inc
dec
xchg
mov
adc
cmp
adc
xchg
shrb
pop
lret
int3
bnd
enter
sbb
aaa
and
sub
rcrl
test
cmp
or
cmc
das
repz
dec
outsl
inc
pop
push
or
imul
push
fadd
loop
decb
xor
jbe
negb
adc
mov
inc
ret
imul
scas
pop
add
and
add
js
loopne
fldt
pop
adc
sbb
dec
mov
push
mov
and
add
mov
dec
arpl
dec
dec
js
and
and
fadds
jnp
out
dec
sub
push
push
ret
popf
int
jecxz
cmpsb
adc
jo
adc
adc
loopne
fsubl
adc
lock
cld
push
add
push
push
cld
jnp
dec
xor
inc
jge
je
lds
add
cli
cmp
lods
aam
push
mov
fisubs
stos
pop
aas
enter
mov
jge
mov
xchg
movsb
mull
dec
scas
or
pop
push
pusha
push
ljmp
in
xchg
cs
xor
mov
test
rorl
das
les
mov
inc
sub
movsl
pop
mov
cmp
fists
mov
imulb
xchg
or
add
inc
fimull
jp
xchg
test
inc
mov
pop
nop
ret
inc
cmpb
xchg
std
ficomps
inc
ja
ljmp
aas
imul
push
movl
cld
xor
add
push
inc
xchg
adcl
mov
jbe
add
and
cmovns
push
out
ljmp
addr16
or
pushf
sub
addr16
inc
or
cli
adc
lea
mov
sarl
jnp
std
add
iret
mov
push
and
jge
push
xor
popf
or
ss
and
inc
ss
and
mov
inc
sub
mov
repz
cmpsl
add
mov
sbb
mov
push
mov
fsin
fstpt
inc
inc
jo
sbb
add
insb
add
mov
add
jns
mov
sbb
sbb
and
xchg
xor
jl
adc
mov
aaa
add
pop
jnp
or
aad
out
jl
insb
sub
or
push
outsb
incl
pushf
xchg
xchg
stos
add
movsl
xor
lods
inc
push
cmpsl
or
sub
and
pop
and
mov
mov
ds
into
adc
enter
mov
pop
and
cmp
or
repz
inc
xor
jg
nop
xor
add
add
cmp
lods
popa
sti
sbb
lods
in
das
lret
mov
cmp
pop
xchg
add
push
push
pop
mov
mov
stos
mov
add
or
and
mov
sub
and
inc
mov
lcall
addl
xor
add
aad
dec
addr16
outsl
les
mov
hlt
js
mov
push
mov
sahf
adc
pop
data16
and
fisttps
stos
test
add
and
or
clc
adc
addr16
add
sbb
jge
rsqrtps
shll
add
sbb
rcrb
mov
stos
push
outsb
add
rolb
clc
loopne
cmpb
or
mov
add
adc
adc
sub
pop
mov
jb
adc
xchg
or
push
dec
fwait
mov
xchg
jo
outsl
xchg
adc
push
fidivrl
xor
mov
jno
insl
movsl
push
xor
js
cmc
mov
shrl
jl
lods
addr16
mov
xor
inc
mov
popa
addl
inc
mov
pop
std
push
sahf
add
stos
jp
xor
jnp
loope
out
xchg
cmp
ljmp
sub
add
pop
sbb
sbb
sbb
sub
jno
fiaddl
xchg
jl
sbb
lods
and
and
fadd
and
je
ss
scas
aad
shll
out
hlt
or
sarl
push
cmp
jg
mov
mov
adcb
in
sub
les
add
adc
adc
push
jno
ss
les
and
add
insb
add
or
mov
in
sbb
addr16
or
loopne
loopne
fidivrl
add
xchg
out
dec
add
test
cmp
push
fnstenv
sbb
sub
lock
bound
cmp
dec
cmp
or
lods
dec
inc
add
pusha
loop
rol
loopne
and
adc
dec
xor
pop
inc
xchg
add
inc
test
mov
ret
sbb
cltd
inc
adc
add
lods
cmp
in
mov
adc
mov
adc
movsb
mov
push
sub
int
xlat
ljmp
cmp
push
inc
iret
add
bound
loopne
and
add
lea
shll
scas
in
hlt
loop
adc
xor
ds
enter
and
das
inc
insb
out
lea
and
add
jne
and
mov
push
adc
mov
ljmp
push
int3
pop
imul
push
int
cwtl
xor
loope
andl
in
adc
sbb
mov
outsl
es
shlb
mov
call
je
popf
sub
popa
fisttpl
rcl
cmc
inc
and
and
fisttpl
mov
mov
sarl
add
and
inc
inc
add
pop
jg
and
and
mov
pop
push
incb
mov
sub
pop
push
pop
cs
adc
fcom
out
add
dec
in
cmp
xchg
or
adc
int3
sbb
cmp
pop
xor
stos
add
sub
adc
mov
data16
push
mov
andl
xchg
fistpll
or
add
cmp
clc
mov
and
mov
pop
lods
inc
test
lods
push
inc
sub
aas
clc
or
in
or
mov
mov
jnp
add
subb
imull
cmp
or
xor
mov
push
sbb
sub
ret
addb
lods
adc
push
popl
mov
daa
jne
sti
fidivrs
push
xchg
popl
scas
pop
mov
ss
sahf
add
clc
dec
roll
add
mov
and
ds
or
jg
xor
push
mov
ljmp
in
aad
aam
mov
stos
lahf
xor
pop
jmp
outsl
enter
and
adc
inc
xchg
std
or
inc
hlt
clc
sub
cld
inc
or
rorl
and
test
and
dec
out
adc
popf
stc
mov
pop
mov
out
out
xor
cli
push
and
inc
pop
sub
ja
adc
outsl
testl
test
push
mov
cmp
or
mov
ss
call
xor
add
adc
adc
stos
sbb
inc
xor
pop
movsb
jecxz
imul
loopne
jb
sbb
insl
mov
cli
mov
call
aaa
add
fdiv
jnp
jge
loop
add
adc
or
mov
mov
fidivl
xor
cmpl
loopne
data16
jge
push
and
repz
rorl
out
mov
sbb
test
xchg
mov
xchg
rcll
sub
sbb
add
sub
xor
lods
or
jmp
mov
call
adc
xor
in
pop
sub
mov
mov
mov
insb
daa
mov
lea
and
cld
sbb
imul
push
jmp
and
cmp
shll
xor
std
ret
add
out
cwtl
into
push
cmpl
mov
pusha
sub
mov
xor
cmpsl
add
jae
inc
and
mov
add
js
adcl
call
mov
leave
hlt
xchg
sub
movsl
add
icebp
pop
adc
jo
cmp
fildl
lods
xchg
push
add
cmp
jge
mov
dec
sub
push
inc
js
mov
xchg
push
into
repz
idivb
clc
sbb
add
add
cmp
test
outsl
hlt
or
aam
cmp
gs
ljmp
mov
jo
lret
pusha
jle
mov
mov
and
push
push
rcrb
inc
jle
je
gs
dec
fstl
adc
jae
inc
mov
mov
out
gs
jns
add
inc
pop
jb
ss
sub
add
xchg
adc
loop
push
stos
push
jg
dec
outsb
xor
mov
adc
icebp
jg
pop
movsl
push
jl
loopne
imul
jbe
and
popa
aaa
stos
jno
jle
adc
cmp
push
cmovno
dec
mov
fistpll
xor
mov
aad
in
adc
sahf
push
jbe
or
dec
mov
aam
push
mov
xor
xchg
dec
mov
and
xlat
insl
push
nop
test
sbb
rorb
and
adc
adc
adc
sub
das
cwtl
dec
or
xchg
mov
leave
test
sbb
and
add
dec
hlt
lahf
add
add
inc
xor
popa
notb
jb
jg
mov
in
mov
sub
or
and
scas
jo
int
jne
divl
les
cmpsb
movsb
and
push
xchg
add
mov
add
sub
ret
mov
call
cmp
push
aas
icebp
dec
xchg
lea
rcrb
cltd
bound
cmp
cltd
pop
addl
or
les
add
pop
mov
jbe
or
adc
push
pop
or
mov
cltd
mov
test
out
jge
add
add
sbb
and
dec
jle
or
cwtl
pop
push
outsl
inc
roll
icebp
fwait
aad
mov
rcrl
add
gs
stos
aam
sub
popa
loope
lock
orl
xchg
xor
mov
mov
jno
xor
les
in
cwtl
mov
cmp
icebp
adc
jl
loopne
mov
dec
sbb
cmp
aad
push
xor
lcall
filds
jle
fistpl
sbb
push
push
sarb
add
ljmp
fadd
and
xchg
sbbb
gs
das
add
aas
mov
or
ret
popf
add
aam
scas
loopne
sub
sbb
inc
inc
int3
and
cmpb
push
mov
mov
add
les
and
or
xor
adc
sbb
clc
or
in
mov
clc
dec
add
mov
inc
pop
push
and
inc
or
es
cmpsb
sarl
and
dec
push
inc
and
sub
push
andl
or
rcrb
jg
mov
push
mov
shrb
fnstenv
sub
test
push
aam
cmpsl
aaa
adc
aas
adc
or
movsb
or
cmp
test
or
cmp
les
and
fiaddl
adc
and
es
inc
dec
in
das
roll
in
stos
xor
mov
sbb
add
pop
mov
in
mov
mov
ret
iret
in
push
andb
mov
push
adc
jge
adc
push
data16
sahf
jae
mov
js
xchg
in
repz
xor
aas
mov
and
and
sub
arpl
popa
xor
out
add
ss
push
adc
lock
into
pop
cmp
nop
fmulp
adc
or
cs
iret
mov
adc
iret
mov
inc
push
loope
push
in
adc
addb
mov
or
sub
pop
adc
jecxz
xor
push
loopne
sbb
cld
shl
adc
dec
jl
jne
push
subb
add
push
xor
push
cwtl
out
pop
shll
pop
mov
or
stos
dec
mov
add
mov
jo
adc
aam
dec
adc
inc
inc
cmpsl
push
jmp
cmp
pusha
push
add
aas
push
xor
or
imull
adc
adc
push
aaa
pop
js
imulw
mov
and
mov
shl
and
inc
cld
xor
inc
mov
and
hlt
sbb
es
jmp
or
addr16
or
push
pop
out
stos
nop
pop
mov
lcall
cmp
or
stos
loope
js
or
lcall
fwait
out
jbe
inc
aaa
sub
mov
push
ljmp
mov
add
xor
pop
cltd
adc
imul
test
mov
jl
mov
inc
cmp
lods
push
push
mov
orb
nop
inc
aam
pop
ljmp
pop
sbb
bound
lcall
push
or
add
call
inc
push
dec
stos
jb
lds
mov
cmp
leave
stc
dec
push
das
hlt
ja
xor
notl
loope
jnp
push
inc
in
rcll
dec
pop
jbe
xlat
sbb
mov
mov
mov
add
and
dec
pop
push
add
cltd
es
imul
push
mov
sub
adc
mov
push
andb
cli
dec
pop
shrl
cmp
or
fistps
stos
inc
lea
adc
sub
and
inc
mov
std
or
cmp
dec
rcr
sbb
jbe
inc
hlt
mov
sbb
sar
adc
and
cli
mov
pop
pop
fwait
movsb
stos
jl
icebp
pushf
pop
inc
push
clc
aaa
add
insl
fmul
test
cmp
push
sbb
xchg
je
flds
je
fidivl
mov
lods
imul
shll
cmp
fsub
mov
aad
scas
or
inc
mov
xor
idivb
in
pop
lods
orl
xchg
cwtl
xor
fbstp
adc
clc
mov
pop
jnp
mov
dec
addr16
sbbb
lods
inc
dec
and
mov
jg
xchg
ss
xor
rorl
sbb
movups
pop
cli
es
fstl
mov
xchg
and
je
or
bound
and
imul
xor
xchg
outsb
std
rolb
cmpsl
xlat
rol
pop
add
jno
inc
clc
les
jo
enter
pop
or
sahf
dec
pop
addl
or
call
sbb
mov
daa
cmp
and
xchg
add
cwtl
fsub
xor
add
adc
or
xchg
dec
jne
hlt
inc
xchg
push
xchg
inc
fbld
or
and
pop
add
add
sub
push
dec
loopne
inc
add
xlat
enter
dec
push
psadbw
leave
andl
inc
and
cmpsl
adc
out
fldcw
push
sbb
or
lcall
roll
loopne
jl
jb
movsl
jne
pop
push
push
sarl
or
lds
push
arpl
dec
add
cmc
adc
xor
mov
add
jne
mov
cltd
dec
cmc
mov
lock
out
jne
sub
pop
aad
popl
add
out
mov
and
sub
or
jp
jle
pop
fidivrl
aad
pushf
mov
or
out
xor
dec
inc
pop
dec
stos
loopne
push
dec
mov
fadds
add
cmp
lds
xchg
adc
push
orb
pop
add
insl
jle
cmp
roll
add
cli
inc
fists
insb
cmp
loopne
add
js
pop
or
mov
xor
mov
mov
sti
or
pop
fcom
pusha
adc
popa
push
mov
inc
je
int
test
andb
xor
mov
jecxz
mul
clc
ds
dec
out
dec
adc
push
je
orl
xor
inc
andb
jno
insb
aam
pusha
inc
sbb
adc
mov
add
cld
push
push
int
in
mov
addl
pop
inc
icebp
xchg
insb
or
loope
add
cmp
les
push
jno
inc
cmpsl
lods
mov
fcmovne
out
add
or
mov
lcall
mov
pop
and
pop
lods
lods
jp
dec
out
shr
or
add
mov
xor
dec
loopne
sbb
inc
or
clc
aaa
incl
add
xchg
pop
inc
adc
popa
rcrb
and
push
xor
pop
test
test
leave
cs
adc
mov
xlat
add
test
roll
xchg
sub
outsl
std
pop
sbb
mov
sub
in
adc
mov
jmp
scas
cmc
faddp
xbegin
add
orl
cmc
or
cltd
sbb
jp
call
mov
std
pop
push
mov
fsubrl
lret
ja
pop
cmp
jb
or
call
insb
loope
push
test
or
sub
pop
cli
into
test
mov
sbb
lods
cmp
sbb
sbb
cld
cs
xchg
sub
push
shll
mov
rolb
pusha
sti
mov
decl
rcl
jno
lods
rcrb
mov
cld
add
pop
mov
aaa
add
loope
mov
sbb
dec
cmp
and
dec
xor
subb
arpl
insb
or
in
fistps
inc
xchg
sbb
sbbl
mov
mov
and
in
sub
fistpl
sbb
popa
xchg
pop
sub
filds
insl
nop
push
push
inc
dec
push
or
mov
mov
daa
arpl
sbb
adc
or
pop
int3
loope
add
sub
fiaddl
in
fwait
xchg
loopne
dec
or
pop
scas
js
jo
push
into
out
pop
mov
mov
enter
movsl
insl
add
and
out
sbbl
sub
add
xchg
pop
test
cmc
jp
andl
jb
or
xor
das
cld
fprem
stos
aas
cwtl
test
inc
or
pop
dec
push
jno
sbb
in
push
mov
mov
popf
add
dec
es
and
out
test
and
sbb
stos
out
iret
test
adc
pop
add
shl
movsl
aas
adc
sbb
pusha
je
mov
je
cmp
lret
xchg
es
loope
xor
cmp
lea
js
adc
repnz
adc
popf
push
or
xchg
mov
sbb
sub
repz
push
pop
mov
fwait
sub
and
test
clc
out
shrb
mov
rorb
jmp
sbb
pop
pop
and
lods
decb
jl
rolb
push
add
call
inc
nop
sub
jns
cmp
mov
sub
add
pop
sbb
or
add
cmp
sbb
sbb
push
and
adcb
aam
adc
pop
jge
loopne
testl
inc
mov
xchg
movsl
mov
inc
testl
pop
jb
rorb
ja
clc
outsb
and
adc
addb
out
xchg
je
inc
xor
fsubrl
pop
cmp
lock
loop
jl
add
xor
addr16
cmpsb
fcomps
lods
daa
or
fdivrl
lcall
dec
cld
lods
addb
and
scas
iret
ror
or
sbb
mov
adc
out
dec
call
inc
or
jbe
inc
adcb
xor
xchg
xor
mov
flds
fdivrs
inc
push
mov
mov
cmp
ret
shrb
jo
pop
jo
adc
fadds
mov
lods
jmp
add
xor
sbb
lock
fmull
rolb
inc
mov
jecxz
sub
mov
in
fcoms
cmp
push
and
test
int3
xchg
mov
adcb
mov
cmp
cmp
mov
pop
and
add
xchg
into
add
neg
adc
adc
add
js
fcoml
push
or
xor
xchg
lds
call
test
cmp
or
shlb
add
cli
ror
ljmp
dec
jge
pop
mov
xor
xor
cmp
mov
rcl
add
dec
insl
mov
and
mov
aam
push
pop
cmpsb
inc
lods
inc
pusha
sbbl
ret
loopne
or
add
cs
push
inc
fnsave
mov
jnp
daa
pop
adc
push
pop
clc
mov
push
lcall
fidivrs
dec
imul
nop
out
xlat
stos
cmpsl
leave
adc
cmpb
mov
shll
fidivrs
nop
leave
push
xor
test
jbe
push
mov
inc
inc
int
jne
lret
jo
pop
andb
je
push
js
loop
std
cmp
xchg
or
add
xorl
addr16
mov
sub
test
out
adc
cs
testb
push
push
shl
add
out
pop
addl
cmp
ret
and
inc
xchg
outsb
shl
and
mov
jnp
and
adc
es
gs
fcos
imul
call
in
xor
mov
sti
bound
testl
mov
sub
out
ljmp
adc
filds
jg
push
hlt
unpcklps
jno
lret
jg
pop
pop
or
add
and
cmp
es
dec
sbb
mov
in
call
jne
daa
data16
add
mov
mov
mov
dec
add
xchg
data16
or
dec
cs
pop
orl
shll
cmpb
loop
fbstp
lds
popa
jge
pop
mov
notb
mov
xchg
sahf
jbe
test
xor
cmp
cwtl
cmp
and
adc
push
orl
dec
fnstenv
test
int3
dec
mov
lock
incl
subb
lahf
cmc
sbb
inc
dec
pop
adc
push
int
cmp
sbb
cld
aaa
movsl
and
sub
sarb
ljmp
jp
pop
xor
pop
imul
mov
mov
jne
subl
jb
mov
adc
cld
push
jp
js
and
int
xchg
ret
outsl
sub
xchg
jnp
inc
jmp
scas
and
or
in
adc
mov
stos
mov
adc
cmp
jg
scas
imul
push
mov
in
popa
adc
or
xchg
aam
ret
std
jmp
ljmp
popa
xor
adc
dec
lds
cmp
cli
and
adc
xor
bound
fucomip
daa
addb
xchg
pop
adc
inc
ljmp
xchg
pop
dec
sbb
fcmovnu
pop
je
negl
mov
xchg
js
xchg
ds
dec
inc
xchg
adc
jno
add
mov
or
or
inc
xchg
dec
cmpsl
outsl
inc
inc
adc
add
or
lock
jae
xchg
lret
loop
pop
inc
xor
mov
sub
add
add
mov
adc
fs
sub
sub
mov
jge
scas
bound
in
test
je,pn
loope
enter
or
mov
push
insb
add
xor
sbb
sub
in
or
fiadds
add
xchg
lock
aam
sub
cmp
adc
inc
in
inc
adc
push
sub
cmp
lret
push
aad
cmpsl
inc
fbld
in
decl
scas
pop
and
dec
aad
arpl
xchg
xchg
sub
cs
jp
or
mov
inc
inc
jecxz
adc
outsl
out
lcall
in
sbb
push
xor
repnz
dec
xchg
popf
cmpsb
in
adc
hlt
add
pop
sbb
mov
pop
cmpsb
cmc
das
mov
fs
mov
pop
push
hlt
rcll
adc
push
push
cmp
mov
aam
sbb
loope
outsl
int
mov
push
adc
inc
hlt
pop
stos
fstps
mov
outsl
movsb
dec
movsl
xchg
or
sahf
scas
cli
out
inc
cli
xor
xchg
dec
jl
or
les
or
jbe
push
mov
mov
and
dec
js
dec
xchg
lea
jmp
mov
mov
adc
jl,pn
push
mov
dec
adc
loopne
gs
int3
fistpl
movb
add
jns
mov
sbb
adc
ret
cmc
push
mov
in
out
dec
cmpsb
mov
into
fcmove
jg
enter
or
xchg
pop
jle
mov
stc
xchg
mov
or
jnp
add
xlat
roll
int3
cs
mov
test
mov
and
lods
fstps
jbe
jnp
popa
das
cmp
push
ret
ret
lcall
out
inc
mov
std
mov
adc
xchg
mov
bound
popl
pop
cld
add
into
pop
test
adc
loopne
mov
cltd
popa
inc
scas
mov
decl
mov
and
stos
aad
data16
fidivl
or
add
adc
mov
xchg
add
add
jbe
sub
xor
mov
add
fwait
adc
cmpsb
mov
sub
cwtl
jae
xor
cli
inc
aas
mov
add
jns
jge
and
imul
jnp
mov
fcmovnbe
or
shll
stos
popa
pop
imul
out
dec
push
add
push
push
sarl
sub
xor
imul
inc
jecxz
add
loope
cmp
sbb
sub
sbb
test
xlat
cmc
aaa
push
mov
cli
inc
xchg
in
mov
icebp
movsl
movsl
ljmp
pop
imul
shl
xchg
dec
jno
test
cs
fstl
out
test
pusha
add
add
xlat
cs
arpl
pop
adc
stos
add
jl
jg
mov
iret
xchg
jns
dec
mov
imul
pop
ss
xor
and
insl
adc
inc
mov
std
cmp
ss
pop
arpl
sbb
jmp
fsubrs
push
mov
or
nop
add
dec
fildl
loope
js
sbb
sbb
jge
sub
mov
sbb
mulb
and
sbbl
and
mov
inc
dec
mov
mov
shll
jp
or
adc
stc
stos
out
sahf
or
clc
aad
add
add
test
and
xchg
orl
loop
jecxz
in
inc
daa
int3
and
rol
fwait
mov
xor
insb
mov
fdivs
push
lock
mov
xchg
aaa
nop
jae
dec
scas
lock
sbb
push
ret
test
dec
mov
mov
cmp
clc
fildl
loopne
ret
int
sahf
int
sbb
lret
or
mov
gs
inc
cmp
inc
or
or
pop
sub
and
ds
jo
and
ss
int3
movsl
inc
stos
jp
nop
fidivl
push
sbb
xor
push
call
cwtl
push
clc
es
neg
mov
xchg
jmp
test
add
and
shrb
fbld
sbb
add
push
xor
adc
icebp
sbb
sub
jb
outsl
pop
jnp
sbbl
out
inc
stos
hlt
mov
mov
incl
flds
and
sbb
je
or
mov
dec
rcrb
sbb
lock
inc
or
icebp
bound
adc
jmp
aas
xchg
inc
cmc
fcomi
add
jmp
gs
aad
andl
outsl
adc
push
and
loop
dec
mov
int3
jge
jbe
cmp
sbb
shll
test
sbb
sbb
push
decb
or
add
or
cld
pop
loop
in
cmp
mov
push
pop
cld
fwait
into
imul
nop
jo
dec
sbb
out
xchg
clc
mov
push
and
push
daa
dec
inc
and
jo
mov
data16
test
les
insb
dec
jl
add
push
adc
ret
xor
test
int3
movsb
pusha
mov
ret
push
ss
xchg
cmpsb
push
add
test
les
lcall
cmpsb
rorl
mov
es
xchg
lods
in
outsl
aas
fidivrl
test
adc
data16
mov
dec
sbb
cmp
mov
jle
imul
icebp
pushf
pop
fildl
mov
cld
into
adc
inc
adc
or
jo
mov
loopne
stc
mov
cmpsl
dec
cmp
xrelease
lcall
sbb
shrl
or
lea
repz
or
push
dec
in
test
shrb
adc
push
cmp
das
movsl
or
dec
dec
add
mov
cmpsb
loope
insb
jl
loope
pop
cmp
sbb
mov
xchg
lods
shrb
insb
test
mov
clc
sbb
shlb
ror
jo
cs
lods
aas
pop
inc
imul
out
cmp
xor
mov
fdivr
lea
xchg
inc
sbb
mov
daa
xor
rorb
mov
ret
jg
xchg
ret
sbb
mov
addb
ret
sahf
gs
mov
mov
clc
data16
pop
and
push
pop
inc
sar
dec
xor
mov
cmc
shl
xor
fwait
inc
fwait
test
mov
aaa
hlt
sarb
inc
mov
and
inc
inc
adc
ret
and
fwait
sub
aaa
aaa
vxorps
jecxz
or
inc
xor
push
sti
cld
cltd
dec
and
ss
fstp
mov
in
mov
in
movsl
sbb
xchg
mov
imul
push
or
sub
push
dec
or
decb
enter
mov
rcr
test
shll
inc
push
add
push
or
mov
aam
xchg
gs
lahf
push
inc
jle
rcrl
inc
lret
add
jge
or
dec
add
outsl
pusha
xchg
adc
mov
inc
sub
dec
jae
fisttpl
aaa
push
cmc
or
cmc
push
inc
sbb
pop
mov
inc
xchg
pop
xchg
jmp
cmp
dec
cmp
data16
lock
shll
jg
mov
repz
fildll
cld
fucomp
dec
cmp
lea
daa
sub
shll
dec
jb
or
inc
push
jmp
xor
loopne
cmp
inc
insb
dec
ljmp
add
adc
push
mov
lea
int
push
inc
inc
movsl
rcll
ret
add
xor
push
mov
mov
outsl
enter
popf
sub
neg
arpl
mov
cmp
xchg
jbe
mov
and
testl
sub
cs
shll
add
int3
shl
test
test
mov
outsl
icebp
pop
dec
std
sbb
orb
ret
jne
xchg
dec
and
fwait
cli
popa
movb
dec
mov
test
pop
jns
push
idiv
fcmovnu
adc
add
or
mov
mov
jmp
je
ficompl
inc
mov
xchg
mov
sbb
pop
jle
push
fs
mov
mov
jne
lock
ja
jle
js
ret
and
xor
inc
xor
or
outsl
insb
es
fcomp
inc
mov
inc
push
adcl
pop
mov
cmc
ljmp
rcl
sbb
and
sub
push
adc
pop
mov
inc
dec
sbb
out
loopne
mov
cmp
push
or
jl
out
add
push
pop
pop
push
mov
mov
xor
xchg
xchg
xor
pop
sbb
mov
cmp
mov
sbb
xchg
cmpsb
test
and
iret
icebp
pushf
pop
mov
shl
and
xchg
cmc
pop
stos
test
jg
and
mov
inc
iret
out
mov
inc
jmp
pushl
mov
mov
xchg
leave
cmp
xchg
sar
mov
jne
lods
push
jae
cmp
pop
jmp
loope
sub
push
push
xlat
xlat
fisttpl
cmc
pop
imul
mov
pop
push
repnz
adc
rorb
out
clc
lea
sbb
ja
shrb
mov
sti
mov
push
pop
mov
jmp
pop
test
sub
add
pop
aaa
pop
bnd
pop
or
xchg
pop
adc
imulb
outsl
adc
jecxz
je
rorb
pop
lock
sub
fdivrp
jbe
into
in
add
mov
mov
and
loopne
pop
xchg
mov
cmp
inc
leave
mov
pusha
mov
and
mov
js
add
sbb
or
aad
shlb
idivl
cmpb
push
pop
add
icebp
or
mov
sbb
mov
test
stc
mov
ljmp
arpl
pop
fadds
or
das
jae
push
inc
inc
jno
add
inc
lret
test
jmp
popf
push
lret
push
ffreep
push
or
test
adc
les
add
mov
xchg
out
sti
loope
xor
loopne
add
jle
push
inc
mov
insl
push
insl
push
adc
adcb
inc
out
mov
xor
outsl
xchg
push
push
xchg
add
cmpl
xor
add
inc
lods
cld
and
mov
scas
into
in
addr16
sub
add
cli
add
ret
hlt
ret
adc
adc
xchg
repnz
test
xor
int3
rolb
xchg
fcoml
popf
push
add
or
fcomi
inc
rclb
push
lods
xor
or
hlt
lcall
or
jp
in
push
imul
or
push
ficomps
testl
shrb
jb
mov
je
cmp
in
inc
pop
push
scas
addb
sti
push
or
pusha
add
xchg
sbb
popf
push
push
mov
test
sub
iret
pop
sbb
adc
insb
sub
mov
and
inc
inc
stos
xorb
xor
jb
iret
or
sbb
lcall
push
std
and
adc
jle
sbb
xor
adc
addr16
in
adc
stos
hlt
mov
lods
call
shll
xor
xchg
cmp
lret
cmp
mov
scas
push
fadd
xchg
mov
mov
pushf
outsl
or
push
and
push
test
in
adc
inc
aad
outsl
pop
push
mov
lcall
bound
ret
xor
sbb
ds
hlt
test
fsts
sbb
lahf
std
sub
and
pop
mov
daa
adc
cmpb
jo
xchg
and
lock
pop
sbb
lea
sbb
jle
inc
aaa
loope
mov
subl
push
push
jne
and
aad
sub
xchg
shrl
leave
push
dec
stc
cmpsb
sbb
test
clc
pop
pop
in
movsb
inc
js
lahf
loopw
clc
fs
xlat
imul
rcll
mov
mov
adc
sti
aam
mov
cmp
lea
pop
sbb
cltd
test
mov
icebp
fidivl
add
and
add
inc
xchg
add
outsb
mov
test
adc
fisttpll
mov
or
outsl
adc
lods
repnz
ljmp
call
push
cmp
pusha
pop
mov
sbb
sub
sbb
pop
loop
jl
mov
testl
sbb
orl
das
sub
sub
xchg
lret
enter
sub
xchg
mov
or
inc
adcl
pop
mov
or
lds
dec
or
clc
and
mov
or
add
addr16
mov
push
xchg
or
loop
add
jmp
fdivl
ss
add
add
lds
sbb
inc
mov
pop
roll
pop
bound
jnp
and
xor
xchg
sub
movsl
adc
jae
fldenv
or
pavgw
push
push
testb
call
jmp
andb
adc
std
sub
push
idivb
jmp
add
and
call
mov
inc
dec
test
test
add
cld
add
add
mov
pop
or
and
add
shll
test
adcb
test
mov
adc
lock
adc
and
push
and
fistl
add
and
adc
fstpt
and
add
add
sti
add
dec
adc
pop
sbb
adc
imul
adc
fnstenv
push
add
jo
add
outsl
add
inc
add
nop
dec
pop
pop
or
and
or
adc
add
jle
lea
add
inc
mov
mov
push
leave
add
pop
js
inc
push
dec
xchg
and
jno
nop
xlat
or
cmpsb
jb
adc
push
xchg
mov
mov
sub
rorb
or
dec
aas
divb
dec
imul
ja
adc
sbb
popf
adc
scas
mov
add
ljmp
jbe
or
or
or
and
dec
adc
fcmovnu
and
loopne
inc
mov
movups
int
outsb
or
test
lahf
sbb
pop
fistpl
cmp
rcll
fisubl
add
inc
sbbb
xchg
add
sbb
or
nop
add
xor
testl
push
mov
push
adc
mov
mov
xchg
addr16
aaa
add
sub
mov
test
and
adc
mov
add
xchg
pop
imul
inc
add
push
sub
loop
inc
pop
imul
or
insl
inc
pop
imul
adc
push
lods
shrb
adc
cmp
cmpb
shll
int
imul
mov
mov
fistpl
adc
dec
lds
ss
ret
push
add
addb
adc
lret
jae
mov
push
or
adc
cmp
lcall
inc
stos
mov
ret
adc
lret
in
add
dec
je
adcb
mov
sbb
pop
cmp
pop
fstps
daa
and
inc
imul
adc
pusha
sub
lods
mov
outsb
cmp
nop
addl
outsb
imul
push
js
sbb
insl
pop
stos
rcrb
cmp
leave
loope
arpl
mov
mov
inc
pop
dec
enter
lcall
pop
mov
push
out
cwtl
pop
xor
or
xor
or
loope
repnz
sarl
mov
ret
pop
inc
adc
jne
mov
adc
lods
mov
or
cmp
cmp
sub
push
or
mov
mov
jp
pop
std
and
lcall
inc
add
mov
nop
loop
fists
insb
into
loopne
lock
inc
sub
add
clc
or
shl
hlt
jmp
sub
cmpsb
inc
mov
imul
adc
mov
adc
mov
xchg
or
adc
push
orb
fisttpl
inc
pop
cmpsl
mov
xchg
push
push
add
xcrypt-cbc
cmpsl
adc
push
mov
inc
or
lcall
adc
add
add
xor
sbb
push
imul
mov
insb
pusha
xchg
or
xchg
arpl
xchg
and
xlat
or
test
lods
shll
xor
inc
pop
push
test
xchg
fs
pop
inc
std
mov
dec
lods
push
loop
mov
jb
pop
aad
dec
imul
mov
fisubl
mov
jo
cmp
push
inc
lahf
sub
pushf
lret
aam
and
jbe
add
outsb
adcl
xchg
pop
xor
into
pop
mov
ds
inc
push
inc
add
stos
mov
jecxz
fisubrl
push
hlt
push
imul
adc
cltd
mov
jmp
pushf
insl
xchg
inc
add
add
out
lcall
fcmovnbe
xor
add
dec
xchg
pop
push
lods
arpl
mov
and
lret
cmp
pushf
test
sbb
sbb
jne
or
or
add
rcl
cmp
xorb
insl
int
inc
adc
mov
cltd
lcall
mov
idivb
aad
shll
or
scas
mov
int
das
addb
inc
cmc
dec
scas
add
subb
sbb
pop
jno
and
aam
jnp
popf
or
lret
daa
fdivl
mov
pop
add
inc
jbe
pop
jae
push
movsb
pop
dec
mov
add
add
vsubsd
push
sbb
cwtl
push
rorb
lods
shll
mov
outsl
adc
mov
ds
data16
pop
insb
pop
lret
addl
mov
fisttpl
inc
jmp
xchg
or
inc
ljmp
dec
xchg
dec
ss
cmp
mov
jo
ret
push
mov
scas
xor
pmulhw
fcom
mov
andb
insb
sbb
vmovups
adc
push
ss
aas
xchg
mov
test
inc
add
push
ss
add
pop
and
out
xchg
outsb
adc
mov
scas
rcll
ljmp
icebp
inc
pop
jae
pop
or
lcall
jne
xor
ror
pop
dec
int
pop
mov
cmpsb
scas
sub
pop
xor
adc
mov
add
fiaddl
mov
xorb
rorl
push
scas
mov
push
lcall
js
cmc
lret
jo
push
fs
call
inc
pop
bound
pop
or
test
dec
push
fwait
mov
loopne
add
adc
dec
push
mov
dec
xor
mov
cli
push
lods
mov
push
pop
add
cs
cmp
mov
pop
mov
inc
addb
lcall
fcmovnu
add
add
loope
add
mov
xchg
lea
jmp
adc
xor
loop
testb
inc
jnp
dec
push
sub
add
call
mov
pop
aam
imull
imul
loope
xor
sub
cmpsb
out
sarb
jnp
jl
or
mov
icebp
sbb
sbb
xchg
push
xor
xchg
lods
mov
adc
pop
push
and
xor
push
xchg
mov
jo
sbb
roll
mov
mov
rolb
shlb
popa
mov
popf
test
jae
mov
popa
inc
insl
je
daa
xor
jbe
mov
inc
pop
pop
xchg
or
mov
add
or
mov
int3
stc
pop
add
push
jbe
stc
cltd
test
add
or
lcall
out
push
fnstsw
shl
add
jnp
push
sbb
xchg
mov
nop
in
push
inc
scas
idivb
inc
mov
lds
xchg
sbb
xchg
insb
push
or
inc
cmp
es
adc
lods
nop
inc
sbb
mov
push
sbb
test
adc
adc
xchg
add
pop
bound
rcl
daa
seto
pushf
add
sbb
push
jo
and
pop
inc
imul
js
or
orb
push
xchg
mov
or
xchg
stos
xchg
adc
out
std
sarb
dec
cmpsb
hlt
xchg
and
insl
loopne
sbb
lret
cmpsl
push
cwtl
jo
xor
xor
std
dec
push
fwait
test
jmp
xor
sub
adc
sub
mov
icebp
cwtl
jo
cmp
lods
mov
adc
jle
jmp
xchg
xorb
cmp
movsb
xchg
mov
xor
cmp
jnp
jb
rcrl
and
adc
add
or
cmp
cmp
xlat
xlat
and
out
mov
ret
popa
test
cmp
loopne
jecxz
int
addb
push
adc
inc
mov
cs
add
add
push
xchg
adc
rcll
cmp
mov
sub
popf
mov
stos
nop
adc
sub
push
fimull
hlt
inc
xor
scas
data16
imul
imul
ficoml
mov
enter
call
inc
add
jmp
ret
or
mov
cmp
cmpsb
in
nop
sbb
les
orl
stos
lods
or
lret
fldl
mov
and
int
sbb
lods
loopne
adc
pusha
push
and
jb
pop
and
sahf
push
xchg
imul
call
sbb
mov
test
push
xor
in
fistpl
lret
mov
xlat
or
cmp
xor
test
sbb
mov
pop
sub
pushf
test
cmp
and
push
mov
and
aad
dec
add
lock
int3
xchg
add
adc
das
ss
or
push
sub
sbb
cmp
sbb
pop
sti
add
sbb
xchg
stos
rcrl
jo
fsts
jo
test
push
xlat
pop
jge
and
lret
lcall
pop
roll
add
mov
mov
adcb
int3
pop
adc
cwtl
add
scas
or
out
mov
dec
test
shl
cld
stos
xlat
out
mov
push
pop
or
adc
pop
or
ss
push
into
aam
adc
jae
push
arpl
mov
xlat
add
pop
jae
push
dec
shll
pop
movsl
mov
jae
xor
and
aad
scas
lcall
mov
jl
pop
scas
or
xchg
mov
pop
aad
lods
cmp
aaa
pop
pop
sub
lcall
ja
and
sarl
xchg
push
push
add
scas
jg
mov
ret
mov
lods
push
cmpsb
pushf
or
mov
mov
lea
out
es
into
push
je
stos
xor
test
jo
pop
push
rol
scas
jl
fs
cmp
dec
mov
add
push
xlat
push
imul
mov
stc
xchg
or
shlb
push
xor
inc
nop
jnp
add
cmpb
add
loopne
mov
dec
cmpsb
cmp
ss
aam
outsl
cs
and
dec
push
jno
dec
dec
mov
shlb
xchg
mov
add
push
add
adc
pop
push
cld
test
xchg
cmovg
or
or
mov
jmp
cmc
jg
test
mov
fwait
jae
sbb
adc
adc
adc
std
pop
ja
cmp
imul
add
mov
jo
or
jae
inc
or
inc
aam
push
fisttpll
adc
add
jmp
rclb
xchg
ficoml
mov
popa
push
push
pop
jmp
das
subb
jne
inc
mov
std
lods
add
daa
xchg
fildll
or
adc
push
add
lahf
in
fisubrs
pop
push
inc
pop
sub
jmp
sbb
mov
dec
aas
stos
sub
and
jg
cli
adc
lds
push
jnp
cmp
clc
in
idivb
xor
pop
mov
jo
sub
pop
pop
add
out
adc
es
rcll
push
fadds
xchg
sbb
jp
imul
xchg
cmpsl
and
rorl
pop
sbb
mov
sbb
dec
xor
xchg
out
into
adcb
stos
jg
sarl
rorb
stc
cltd
or
add
movsb
mov
test
push
outsb
mov
pop
and
add
rclb
punpckhwd
out
jbe
mov
xor
xor
pop
sub
pop
rorl
cmpsl
xor
lret
faddl
outsl
ficompl
popf
or
fistpll
jmp
xchg
jno
scas
adcl
adc
cld
cmp
adc
incl
jle
push
push
mov
fwait
clc
ret
imul
push
lea
loopne
inc
mov
call
hlt
into
and
aas
adcl
ja
pop
decb
jmp
fsubrl
mov
out
call
or
mov
or
add
pop
call
sbb
and
jae
mov
adc
dec
aad
cld
mov
cltd
inc
jns
or
hlt
add
stos
pop
sub
xor
adc
scas
jecxz
outsl
jl
pusha
xorl
popa
flds
inc
je
cli
bnd
cltd
add
sub
xor
sbb
or
mov
aaa
cs
fildl
pop
test
mulb
div
pop
mov
rcrb
mov
cltd
jne
mov
imul
sbb
sub
jbe
jg
lret
add
cwtl
inc
ss
pop
inc
out
push
sub
insl
std
sti
mov
decb
js
push
sbb
cltd
adc
fisttps
mov
in
cmpsb
fbld
xor
cmp
mov
push
lahf
jmp
mov
sbb
fidivrs
mov
inc
push
outsl
inc
lcall
or
jg
loop
imull
pop
jle
test
push
xor
fs
mov
ja
loopne
arpl
repz
jmp
lcall
sbb
mov
aaa
sub
insb
lret
add
or
xor
mov
jge
mov
adc
outsb
insb
outsl
ficoms
jl
addl
mov
fisttpl
and
add
mov
lcall
lret
icebp
ret
data16
stc
fldt
or
mov
push
dec
pop
rolb
sub
push
movsl
or
jne
cmpsl
sub
fistpll
ror
mov
ds
dec
in
cmp
dec
xchg
in
inc
ret
sub
pop
mov
int3
test
mov
or
arpl
repnz
or
std
lcall
cmp
xor
adc
call
orb
faddl
mov
dec
sbb
cs
test
je
adc
or
pop
test
mul
fistl
jne
jmp
dec
push
jge
lea
sbb
mov
lcall
pop
add
and
or
dec
lock
bound
adc
mov
mov
idiv
fwait
and
lods
and
decl
or
lods
and
imul
clc
in
lcall
test
test
repz
xchg
das
sub
cmp
into
inc
inc
lret
push
sub
dec
pop
adc
sbb
xchg
pop
fs
shll
mov
cmpsb
xchg
mov
sbb
cmpb
adc
sahf
repz
daa
mov
arpl
sbb
jg
imul
sub
pop
clc
adc
ss
lea
jg
fcoms
add
sbb
in
std
aas
popa
clc
add
sbb
test
pop
popf
out
pop
xor
mov
adc
cmpb
add
cmp
leave
sahf
lock
js
pop
clc
pop
int3
imul
cs
mov
pop
mov
push
ss
xor
cmpb
std
mov
test
enter
cmp
in
outsl
xchg
cs
add
inc
xchg
mov
or
clc
xor
or
mov
les
pusha
jl
inc
insb
xchg
movsl
cwtl
mov
pop
push
lock
iret
sbb
xor
std
inc
sahf
test
xchg
inc
cwtl
sahf
stc
sub
stos
roll
cmp
addl
loopne
es
in
scas
jns
pop
and
jp
fdivrs
mov
cs
aad
adc
jg
loop
fisttpll
loop
mov
adc
loopne,pt
aam
loop
cltd
lret
loop
cmp
add
dec
inc
xchg
fidivrs
bound
jecxz
lcall
sub
or
adc
push
repnz
pop
pop
sub
sub
or
arpl
in
pop
sub
test
add
leave
das
lds
cmp
sbb
or
sbbl
pop
sub
sbb
add
adc
sub
sbb
mov
pop
push
push
outsl
sbb
inc
movsl
xor
xor
cli
ret
inc
inc
test
popf
in
fsts
adc
mov
ja
cmp
ss
ret
xor
xchg
inc
jnp
bound
dec
and
add
sbb
insl
xlat
shl
out
andb
and
loopne
mov
mov
and
dec
cld
xchg
jle,pt
jns
dec
hlt
sbb
cmpl
loopne
mov
push
loop
mov
mov
es
or
inc
in
push
add
jle
rorb
jbe
loop
fildll
push
xor
aad
add
add
or
push
or
cmpb
sub
insl
jmp
lahf
push
adc
add
mov
cmp
cmp
shll
out
ret
jae
dec
aaa
rol
push
stos
clc
sub
test
incl
cmpsb
jnp
lea
int
or
xchg
fwait
daa
mov
ljmp
shll
cltd
popl
sub
fxam
push
lock
cmp
add
xchg
insb
loop
mov
lds
mov
imul
xrelease
jo
pop
lea
sub
cwtl
pop
inc
push
pusha
and
push
xor
adc
xor
xchg
loope
pusha
clc
mov
scas
pop
dec
inc
sub
mov
pop
adc
mov
adc
mov
dec
inc
jp
xor
repnz
push
sub
jo
aaa
pop
int3
movsb
aaa
dec
mov
out
mov
and
sbb
cmpb
and
pop
lods
imul
movsl
mov
cs
out
sub
shlb
mov
adc
mov
aaa
xchg
mov
mov
cmp
jg
sub
lods
sub
pop
jmp
cwtl
movsb
mov
in
or
call
jo
inc
mov
insb
test
sbb
xor
sahf
cmp
push
mov
fwait
lcall
xor
sub
std
mov
inc
mov
test
sub
jg
addr16
push
dec
popa
push
ljmp
pop
jmp
push
out
xorps
push
jge
mov
dec
enter
lds
in
pop
std
dec
jecxz
outsl
call
xor
adc
jne
ja
cwtl
fistpl
jnp
push
xchg
icebp
cwtl
xchg
xor
mov
jns
shrb
xchg
mov
int
sub
jle
or
lods
push
in
pop
sbb
mov
bound
dec
xor
outsl
mov
sub
les
call
fildl
out
jb
out
pop
scas
mov
in
pop
stos
ret
cmp
addr16
mov
faddl
das
mov
sbb
xchg
and
push
sar
cmp
lds
fcomip
xor
or
and
add
inc
repz
push
mov
aad
cltd
andb
rcrb
sub
sahf
cwtl
ret
call
jo
dec
icebp
scas
shll
test
cs
bound
cmpsl
inc
push
adc
cmp
insl
out
push
mov
cmp
shr
dec
adc
sarl
dec
outsl
sbb
scas
out
push
inc
xor
out
xor
test
or
sub
and
cmp
cmp
call
jecxz
xor
adc
flds
into
sti
sub
lea
fiaddl
cmp
sbb
push
divb
fisubrl
dec
push
adc
sub
inc
sub
mov
sbb
sbb
icebp
pusha
mov
inc
daa
mov
pop
mov
mov
mov
lods
adc
rcl
das
push
pop
add
xchg
sbb
call
idivb
and
arpl
stos
and
sbb
jno
shrb
xor
lahf
inc
nop
mov
add
or
loope
and
mov
movsl
jge
sub
add
insb
fdivs
in
incl
or
cmc
leave
je
ds
xorl
outsl
add
mov
adc
or
outsl
add
sub
imul
push
sarb
lea
adc
icebp
inc
rcll
xchg
out
mov
mov
mov
loope
or
das
scas
in
cmp
mov
test
sbb
and
rclb
lock
inc
sbb
xlat
in
cmp
fnclex
out
scas
shll
xor
or
test
add
pop
sub
shlb
xchg
mov
mov
jge
pushl
fldl
ret
mov
stc
mov
scas
mov
adc
scas
jle
push
roll
push
and
or
ljmp
mov
adc
sub
sarl
fstp
and
adc
mov
sub
add
jp
adc
sbb
pop
add
loopne,pn
push
cltd
xor
xorb
out
or
fdivrp
arpl
cmpl
adc
mov
clc
add
mov
cs
lcall
dec
fistpl
in
jg
adc
or
lods
xchg
fildl
or
in
push
in
iret
mov
aad
or
pop
insb
ficoml
adc
inc
lock
adc
pop
test
pop
adc
mov
cmpsl
fwait
sub
pop
mov
pop
push
test
adc
sbb
clc
les
sub
lds
leave
xor
jo
out
inc
adc
mov
jl
mov
data16
ret
test
pop
inc
repz
push
mov
sub
mov
mov
mov
mov
test
cmp
pminsw
inc
inc
lahf
movsb
arpl
inc
bound
or
in
add
push
shrb
dec
dec
xchg
xlat
in
push
xchg
pop
dec
fdivrs
scas
cltd
mov
loopne
ret
inc
jnp
sub
pop
imul
pop
push
dec
adc
push
inc
lods
push
adc
lds
cmpsb
cli
add
faddl
mov
and
mov
aaa
push
in
mov
xchg
and
test
filds
sub
mov
enter
xchg
outsb
mov
loopne
fs
rol
jae
or
fstl
xchg
lods
mov
clc
add
xorl
iret
outsl
lcall
xor
inc
jmp
xor
aas
push
test
scas
cmp
in
inc
stos
lret
xor
mov
adc
or
push
pop
fs
das
jle
add
fistpl
aas
jl
jno
or
imul
mov
xor
xor
ljmp
icebp
jns
inc
xchg
outsl
push
pop
push
push
mov
fisubs
in
in
add
mov
mov
sub
dec
cld
and
add
xor
insl
mov
pop
mov
and
jl
jae
add
fildl
int
loope
inc
pusha
aam
jbe
push
dec
and
add
jo
mov
inc
mov
test
fistpl
cmp
pusha
lock
fidivs
xor
mov
xchg
daa
xor
mov
and
mov
mov
movb
or
sub
popa
add
pop
ret
call
test
movb
sbb
shrl
fcmovnu
enter
cmp
dec
fnstenv
and
fs
push
and
and
inc
mov
and
je
mov
or
aaa
jo
leave
xchg
xorl
push
mov
jae
icebp
sub
pop
or
decl
incb
sbb
scas
movsl
dec
dec
mov
pop
pop
out
stos
mov
outsl
clc
iret
add
fimull
cltd
or
xor
outsb
inc
jbe
mov
inc
mov
lea
jle
fildll
dec
fwait
inc
sbb
add
decb
lret
add
js
or
pop
test
js
push
imul
cmp
insb
aad
push
mov
icebp
and
mov
jb
push
push
imul
aaa
cmp
lret
inc
int3
ljmp
and
mov
mov
pop
push
dec
test
sahf
mov
add
mov
and
inc
jg
inc
add
cmp
mov
push
dec
sub
ret
and
pop
movsl
jbe
inc
pop
push
push
sbb
jo
out
mov
jecxz
jmp
xchg
push
mov
inc
inc
mov
pushf
add
xchg
imul
test
pop
sub
mov
outsl
mov
xor
mov
test
cmc
sbb
outsl
ja
in
loopne
rorb
addr16
push
fnstsw
pop
fwait
cld
bound
pop
fbstp
and
mov
dec
lods
xlat
rclb
ds
lods
cmp
adc
pop
daa
inc
or
mov
jbe
fnsave
adc
mov
fdivrs
push
aad
mov
inc
xchg
pop
push
cmc
rclb
dec
inc
fiadds
sti
lea
or
mov
mov
xchg
fs
popa
aas
hlt
add
addb
jmp
popa
test
pop
and
mov
and
sbb
pusha
test
cwtl
mov
incl
push
clc
jg
inc
cmp
push
mov
mov
aaa
sbb
inc
sub
pop
dec
jmp
mov
mov
cli
popf
addr16
cli
mov
hlt
lods
std
lcall
enter
xorb
add
cld
pop
stos
mov
xchg
mov
outsl
fbstp
push
xor
pop
mov
call
in
mov
jle
sahf
push
cmpsb
xor
mov
adc
cmpsb
aaa
loope
dec
and
pop
xchg
fldt
fbstp
push
in
out
iret
xchg
and
inc
mov
std
pop
dec
fs
mov
sub
add
sbb
jge
add
lock
adc
out
lds
pop
sub
mov
shr
loopne
mov
lret
inc
mov
mov
dec
adc
decl
jp
xlat
mov
out
xor
mov
or
mov
mov
stos
add
test
cli
cmp
cwtl
mov
ret
int
jns
push
das
adc
insl
test
push
idiv
cs
jecxz
fildl
and
fisttps
mov
mov
aad
outsb
mov
and
jns
mov
mov
add
jge
xchg
pushl
fwait
push
mov
lea
scas
subb
hlt
sbb
addr16
es
adc
and
out
push
incl
push
xchg
cmc
jbe
mov
adc
pop
call
jbe
or
popf
add
outsb
adc
inc
aam
lahf
cmpsb
call
fists
test
out
cmp
push
hlt
mov
stc
pop
mov
sbb
push
subb
out
or
stos
in
sub
int
cmp
inc
mov
cld
out
icebp
outsl
fcompl
inc
mov
xchg
xchg
jl
adc
pop
push
pushf
test
pop
sub
dec
pop
pusha
jmp
push
add
lcallw
test
fcomip
pop
fisttpl
mov
jnp,pt
outsl
sub
push
sbb
incl
mov
adc
mov
in
call
in
push
adc
test
dec
jecxz
fnsave
cwtl
fprem
fldt
loop
jl
mov
mov
sahf
ret
add
sbb
lods
out
inc
push
pop
sbb
jg
fsubl
push
cmc
sbb
inc
dec
or
mov
lahf
push
nop
add
add
cwtl
shr
pop
out
cs
pop
mov
xor
inc
mov
popa
and
push
sarl
jecxz
ljmp
xor
loopne
daa
test
lret
xchg
dec
xchg
mov
push
clc
fidivl
push
adc
test
cmpsl
insb
push
or
nop
mov
mov
nop
cmpsl
adc
push
insl
ret
rcl
jbe
jl
mov
aad
idivl
mov
sub
push
mov
xchg
cli
int
test
mov
fbstp
cltd
je
in
push
mov
add
stos
ja
xchg
ret
jge
mov
cwtl
int3
testb
insb
sbb
mov
pop
push
sbb
mov
or
or
cmpl
mov
sarb
sbb
mov
fcoms
ds
sarl
xchg
test
mov
arpl
rcll
ds
testl
cmp
jmp
jl
in
hlt
mov
mov
add
inc
sti
push
ja
add
xor
test
push
sub
icebp
pusha
inc
dec
fstps
mov
mov
mov
ljmp
js
jns
mov
jbe
fs
and
push
out
add
push
push
jns
jmp
add
lret
daa
xor
push
dec
out
ljmp
mov
hlt
test
jbe
jne
xchg
scas
pusha
mov
outsl
setae
loop
mov
loope
int
jns
xchg
xor
mov
fisttpll
outsl
adc
js
mov
mov
mov
cld
std
out
outsb
lea
push
mov
cld
sbb
cs
dec
or
rclb
scas
xchg
int3
test
fisubrs
scas
jl
jb
inc
mov
inc
inc
pop
dec
mov
movsb
push
push
into
sub
lods
jae
sarl
and
lahf
clc
xchg
push
daa
xchg
push
jge
fwait
xor
into
idivl
pop
pop
lret
wrmsr
jnp
jecxz
jno
xor
fimull
push
out
aam
arpl
cmp
xchg
pop
fistl
clc
cmp
loopne
xchg
adc
inc
stos
push
and
mov
sbb
imul
inc
aaa
icebp
aaa
hlt
xchg
xchg
push
or
incl
sbb
sbb
testl
orl
call
jne
adc
nop
pop
or
push
pop
sub
push
dec
leave
mov
jp
clc
shl
xor
out
lds
jg
mov
push
adc
ret
push
outsl
insb
push
aam
mov
xor
xorb
jo
popf
stos
cltd
mov
ret
pop
mov
jns
sar
das
lock
jbe
or
jb
cmp
fistpl
gs
push
mov
sbb
mov
loop
mov
add
movsb
lret
lret
inc
xorl
xchg
add
arpl
mov
ret
je
cmpsl
mov
pushf
test
sbb
sahf
lock
inc
dec
xchg
fnsave
stos
lods
jmp
mov
loop
push
mov
cmp
rclb
dec
sub
pop
mov
mov
insl
sub
mov
push
loope
xor
mov
jne
mov
pop
sti
test
cmp
mov
movsb
daa
ret
test
pop
dec
loope
lcall
pop
std
xchg
pop
pop
dec
mov
test
andb
and
adc
sbb
arpl
les
inc
cmc
lock
cmp
cltd
sbb
je
scas
shrb
pop
test
mov
pop
icebp
int
or
mov
mov
pop
enter
fwait
push
push
lock
scas
lods
push
lret
xor
fidivrs
aas
mov
testb
sbb
jecxz
das
mov
leave
popa
test
adc
xchg
sahf
outsb
mov
mov
mov
sbbb
adc
mov
hlt
sti
dec
out
out
add
enter
xor
pop
out
mov
std
push
mov
cmp
fstpl
jbe
mov
inc
ss
adc
insl
dec
cmp
daa
mov
or
pop
loopne
mov
insb
int3
cltd
notrack
mov
ja
sbb
add
push
xor
mov
ljmp
dec
ljmp
das
fmuls
fcmovnu
inc
adcl
jmp
dec
add
dec
cli
cld
sub
pop
fadd
ret
mov
data16
pop
scas
mov
sbb
std
das
dec
adc
jne
imul
inc
sbb
mov
scas
mov
cmp
sbb
mov
mov
aam
mov
sub
dec
cmpsl
push
cmpsb
decl
mov
lds
jno
psllq
lods
pop
mov
jp
pop
cmc
push
out
pusha
call
jle
loopne
inc
xchg
lock
rorb
loopne
js
sbb
fdivrl
clc
aaa
mov
out
cli
pop
ja
shl
jp
jg
mov
xor
addl
pop
inc
mov
cmp
inc
push
fsubrl
cwtl
lods
adc
mov
fcomps
jle
hlt
pusha
lcall
push
jnp
mov
adc
jnp
xor
cli
lea
test
into
loop
fs
call
sar
test
test
popa
scas
sbb
out
out
jmp
or
mov
sbb
mov
rcll
lock
aas
scas
mov
xor
lea
dec
mov
or
movsb
push
fildl
ud0
ljmp
mov
xchg
cs
lock
add
xchg
scas
jo
push
or
clc
mov
pop
inc
push
clc
sbb
ljmp
dec
jecxz
jp
fstpt
pusha
pop
loope
mov
mov
imulb
or
in
add
enter
js
jg
fs
adc
sbb
insb
aaa
pusha
mov
xchg
call
fcomps
out
push
lahf
adc
aaa
call
mov
in
fcomip
mov
mov
ret
rorl
fstpt
and
call
lahf
xchg
pop
jae
pop
cld
mov
sub
insb
pop
iret
dec
call
je
ds
inc
mov
pusha
adc
push
addr16
or
aaa
std
ret
subl
aam
addl
out
xchg
jns
mov
fadds
lcall
sub
and
and
cmp
mov
add
rcrl
and
jns
in
std
and
and
and
arpl
mov
pop
ss
cltd
test
dec
inc
data16
lods
mov
adc
cmp
jno,pt
loope
jns
push
dec
stos
sub
je
push
jbe
dec
hlt
jmp
data16
mov
add
nop
mov
or
test
dec
adc
mov
sbb
inc
dec
sahf
mov
jo
mov
xorb
xchg
je
mov
xchg
call
dec
mov
and
sub
bnd
xchg
sbb
xor
inc
and
sarb
push
xchg
fdivrs
adc
or
inc
sub
fcmovne
test
cmpsb
inc
roll
mov
inc
lret
sub
loopne
rolb
cld
out
outsl
push
mov
cmpsb
push
movzbl
bound
mov
xchg
and
jge
add
lret
cmp
inc
dec
mov
mov
or
push
push
sbb
push
pusha
mov
out
pushl
sbb
pusha
jge
mov
pop
daa
pop
movsb
push
mov
inc
in
push
mov
aad
mov
loope,pn
dec
mov
call
arpl
or
movsb
and
adc
mov
pushf
add
xor
add
lahf
lock
pop
clc
push
lods
fsubrl
test
decb
test
movsl
lea
aad
cmp
jle
in
jle
mov
stos
sbb
and
cld
and
xchg
push
out
loope
jbe
ljmp
loop
adc
ljmp
pop
test
sarl
cltd
push
cld
and
stc
push
stos
push
dec
loop
sbbl
push
xor
mov
jno
adc
aaa
fs
add
fcmovnb
mov
push
out
mov
cwtl
jg
mov
jg
cmp
sbb
adc
add
in
mov
decb
shl
int
pop
adc
repnz
jg
sub
push
and
jo
cmp
test
push
scas
mov
sbb
add
les
aaa
sub
enter
jle
sbb
jno
in
fistpl
mov
enter
xor
es
dec
cmp
inc
mov
mov
push
jo
sub
jmp
or
push
sub
in
and
mov
mov
cmp
aaa
push
ljmp
or
pop
fcmovu
fildll
or
mov
fbld
aad
mov
out
inc
sub
fbstp
sbb
add
cmp
jno
push
sub
fs
std
test
ss
dec
loop
mov
xchg
sub
dec
dec
lcall
xchg
clc
inc
sbb
test
pusha
addr16
xor
pop
test
fisttps
mov
pop
inc
fistpll
orb
mov
inc
jg
push
mov
pushf
adc
icebp
les
and
cmpsb
scas
cwtl
aad
movsl
test
subl
aad
mov
mov
pop
ds
jo
mov
shlb
push
add
mov
mov
out
jnp
add
push
addb
inc
jo
insl
push
out
mov
mov
push
js
and
mov
cmc
and
mov
pusha
movaps
mov
cmp
aad
push
sub
mov
lret
adc
mov
lahf
cld
rcl
mov
in
mov
dec
loopnew
xor
dec
or
mov
into
and
jg
and
fnstcw
mov
bound
pusha
inc
jle
in
cli
je
dec
xor
in
or
jnp
xchg
add
sbbl
cmp
pop
mov
mov
or
loope
sti
mov
add
sti
mov
out
fistps
andb
lock
push
icebp
ret
psrad
vmovsd
fldz
xor
insb
iret
adc
push
jae
push
outsl
mov
add
sub
push
mov
inc
cmpsl
jno
pusha
jl
addr16
scas
ret
mov
cmp
pop
lret
imul
mov
push
pop
or
fdivrp
ja
mov
pop
adc
leave
add
mov
ret
pusha
scas
je
js
pop
adc
push
lret
cmc
fbstp
mov
jl
mov
mov
bound
xchg
inc
std
pop
std
loope
fisttps
divb
mov
inc
out
sub
push
cld
insl
push
pusha
jb
jo
into
repz
dec
inc
xchg
gs
jl
mov
mov
jle
jne
and
scas
outsl
loope
jmp
and
push
data16
push
xchg
decb
push
or
cs
sbb
aad
gs
adc
fcmovbe
lret
fsts
cmp
sub
xor
cli
ret
scas
aam
sarb
subb
jb
repnz
cmp
push
icebp
std
test
or
push
dec
stc
add
repnz
int3
push
aas
xchg
loope
js
xchg
push
dec
add
dec
jmp
mov
jge
push
and
lcall
test
dec
test
stc
xor
mov
cmp
test
stc
sbb
xor
fcoms
mov
pop
aad
cltd
dec
popf
fldenv
popa
sbb
dec
jb
fwait
aam
mov
ret
and
jmp
loopne
and
or
int
push
xor
jbe
and
mov
inc
push
adc
mov
mov
push
dec
in
gs
dec
pusha
adc
adc
mov
dec
movsb
pop
addl
loopne
ljmp
or
or
xor
clc
add
push
mov
andb
enter
or
mov
jmp
jbe
sub
xor
cmp
sbb
mov
jg
xor
mov
test
testb
pop
lea
jge
push
mov
pushf
ds
mov
xchg
popf
inc
stos
rclb
push
mov
ret
aas
ljmp
pop
ja
lcall
outsb
pop
sub
daa
call
sbb
jbe
jl
cmpsl
aad
or
mov
call
lds
dec
adc
mov
or
loopne
mov
mov
sub
icebp
mov
jbe
jmp
add
and
inc
or
sti
test
daa
out
jl
mov
repnz
sub
jg
dec
aam
mov
jle
fwait
ret
mov
xchg
pop
mov
add
nop
mov
push
push
aaa
cmc
push
jge
push
adc
stos
stos
cmp
subl
jle
sub
icebp
aaa
scas
rcrl
mov
xor
push
insl
sub
ja
movsl
movsl
ss
sub
fisubrl
nop
test
mov
jle
sti
push
je
jne
js
scas
aam
gs
push
sub
mov
mov
xor
or
pop
dec
mov
in
cs
in
je
mov
aaa
dec
aam
push
js
lahf
sbb
testb
imul
insl
decl
mov
sahf
xor
bound
sub
push
and
mov
sbb
je
popf
pop
mov
jnp
adc
inc
inc
cld
pop
xor
mov
fwait
pusha
or
push
das
pop
nop
mov
xchg
mov
test
jb
fcomps
out
and
pushl
out
mov
mov
push
push
inc
stos
mov
push
and
sbb
pop
js
outsl
in
std
mov
add
sub
test
push
jbe
xchg
pop
mov
jno
movsl
movsb
mov
ljmp
jo
push
iret
lret
adc
cmpsb
add
and
sub
xchg
pop
xor
dec
push
test
imul
mov
mov
insb
lods
js
cmp
add
jns
or
add
mov
jmp
sub
icebp
fcompl
jg
mov
xor
xchg
ja
ljmp
hlt
pop
add
repz
gs
outsl
faddl
mov
mov
faddp
decl
mov
dec
imul
scas
lds
cwtl
mov
and
push
mov
jmp
movsl
in
xlat
ret
rclb
mov
push
sbb
xchg
sub
sub
test
fmul
jle
mov
repz
les
std
xchg
cmp
push
aad
outsl
jns
adc
std
in
call
repnz
jo
mov
ljmp
cs
inc
add
fmuls
mov
daa
in
adc
jp
fldt
scas
cs
shlb
jge
cs
pop
mov
xor
pop
cmp
dec
xchg
fdivr
fistl
cmp
and
xor
push
add
out
imul
sbb
notb
loope
xor
inc
idivl
fldenv
shrb
inc
pop
int
sub
lcall
ds
add
push
cs
ror
adc
push
sbb
add
es
cld
lcall
pusha
pop
mov
lcall
inc
out
jns
loopne
mov
push
ja
loope
fcmovb
mov
cwtl
xchg
cmc
adc
xor
lcall
pusha
adc
lds
jmp
dec
icebp
das
xchg
inc
xchg
sbb
fadds
push
mov
pop
inc
push
popa
hlt
sarl
call
aaa
shr
inc
loope
repnz
jmp
dec
lods
cmp
xchg
jecxz
mov
idivb
jmp
and
or
inc
mov
cmp
test
aad
sbb
daa
iret
dec
pop
xchg
daa
lods
mov
shrl
jnp
mov
add
insl
pop
fs
sub
mulb
es
mov
lret
popf
jg
cmc
es
outsb
pop
lahf
xchg
mov
mov
mov
pop
or
xor
pop
push
add
xchg
mov
dec
test
movb
inc
or
sub
add
je
jb
jg
sbb
cmc
test
push
pusha
mov
dec
xchg
stos
and
jge
push
sbb
ret
and
test
adc
mov
je
enter
pop
jp
mov
cmp
rorb
das
cmpsl
jge
mov
xor
aad
aam
mov
pop
xchg
insb
inc
jg
push
nop
xor
frstor
sbb
or
sub
movsb
sbb
das
lock
and
sub
das
push
fiaddl
dec
xchg
mov
push
movzwl
cwtl
dec
xchg
xorb
push
das
shlb
inc
mov
incl
xor
and
mov
rcrb
icebp
aaa
jo
xchg
imul
das
jns
cmpsb
ja
lds
push
es
neg
sbb
das
or
dec
adc
xor
cmpsb
or
mov
sti
cmc
inc
es
jecxz
add
dec
ret
lods
xchg
cmp
pop
sub
popa
fldt
pusha
sbb
sbb
jl
pop
adc
call
or
pop
inc
push
rclb
mov
xchg
fdivr
iret
insb
jns
jno
test
inc
pop
push
pop
pop
outsb
addl
adc
push
push
push
sbb
cld
idivl
and
cli
or
mov
mov
push
xchg
mov
push
pop
mull
jge
lcall
lcall
mov
stos
or
std
sbb
insl
mov
loope
cmp
popf
sbb
push
cmp
push
cli
repz
mov
xchg
fisubrl
and
sbb
movsl
aaa
mov
lods
sbb
fstl
and
xor
out
cmp
dec
or
loope
mov
sbb
cld
and
mov
or
repz
mov
and
addl
lods
ljmp
push
inc
nop
cmp
imul
and
test
cltd
dec
pop
adc
xchg
loope
bound
cmpsb
or
inc
inc
sbb
mov
sub
es
adc
mov
aam
test
mov
lcall
push
lock
or
mov
pushf
mov
xchg
shrl
mov
mov
ret
dec
jo
sub
call
mov
cmp
push
cld
and
sbb
and
sub
xchg
test
jle
push
cli
sub
fistps
movsl
add
loopne
scas
sbb
movsbl
pop
lahf
call
std
es
es
mov
cmpsb
fs
or
int3
dec
lods
mov
mov
repz
push
adc
cmp
xchg
dec
sarl
inc
jns
jbe
ret
rorl
or
shl
dec
lods
mov
cmp
test
mov
adc
shll
push
dec
jbe
adc
mov
outsl
cltd
push
repnz
cmp
test
in
imul
daa
test
clc
jb
add
push
decl
fildl
insl
enter
mov
addr16
or
cmpsb
subb
cmp
xchg
test
inc
push
sahf
push
sbb
push
cmpsl
imul
inc
jo
jbe
rol
stc
cmp
decb
or
adc
mov
cmpl
outsl
fadd
hlt
lock
je
mov
std
xor
mov
adc
das
mov
rorl
es
pop
data16
inc
outsl
outsl
incb
and
xor
adc
dec
mov
or
inc
pop
mov
sbb
loope
mov
jecxz
mov
insl
mov
lods
cmp
subl
adc
stos
imul
xlat
xchg
mov
jmp
jle
xchg
add
mov
push
adc
scas
fstl
and
out
fcmovb
ret
mov
or
outsl
fsubrl
fadds
addr16
addb
pop
jbe
loop
push
mov
mov
inc
sub
jb
mov
outsl
cld
sbb
adc
sbb
bound
adc
xlat
cmpsb
stos
push
mov
add
inc
mov
pop
orb
shlb
add
jecxz
inc
jns
mov
scas
inc
adc
mov
insw
int
xor
shr
jl
xchg
rcrl
jg
mov
mov
filds
mov
hlt
and
test
ljmp
adc
loope
ret
push
lret
shlb
js
ficoms
or
aam
cmp
mov
loopne
adc
xchg
insl
fnstenv
xor
or
cmp
repnz
push
fnstsw
aad
add
cmc
sub
fcmovu
pop
pop
cmp
sbb
mov
inc
push
mov
shrl
add
lods
inc
out
pop
ljmp
aas
push
add
leave
fs
repz
mov
mov
and
cmp
test
xchg
xor
cmp
scas
orb
push
imul
mov
jb
pop
mov
pop
lock
inc
cli
add
repz
aad
test
lds
loopne
cli
inc
fbstp
xchg
lods
mov
mov
pop
clc
lea
mov
push
and
dec
mov
fdivs
sub
in
test
ficomps
mov
popa
jb
pop
repz
and
xchg
sbb
mov
test
les
imul
add
cmp
aas
ds
insl
jne
cli
push
xchg
jecxz
adc
roll
sbb
add
push
mov
pop
push
mov
aaa
enter
xor
inc
movsb
lock
imul
mov
xchg
aad
add
xlat
cmpb
pop
sub
add
addl
mov
sub
mov
mov
adc
outsl
mov
push
pop
sub
fs
fisttpl
rolb
mov
add
xchg
pop
dec
icebp
and
imul
mov
pop
in
call
call
mov
dec
cld
xchg
aam
les
int
push
pop
sub
and
notb
stos
enter
jle
dec
lods
jge
adc
inc
jl
aam
enter
test
xor
sbb
sbb
clc
push
mov
or
test
xchg
push
loopne
add
in
xchg
cmp
addr16
or
rol
ss
fsts
adc
mov
mov
ret
mov
incl
cld
adc
lret
gs
xor
or
lds
fcomp
decl
out
and
push
jle
nop
inc
adc
int3
loopne
mov
mov
lods
fs
cld
movsl
out
nop
cmpsb
push
or
repz
mov
outsl
mov
mov
int
cmp
sahf
cmc
fs
mov
hlt
push
stos
popa
push
popa
lret
jp
jne
out
and
out
das
nop
mov
mov
jecxz
xchg
pop
lcall
mov
loop
add
pushf
xchg
add
mov
cmp
lods
movb
mov
push
ljmp
pop
jno
adc
lahf
cli
xchg
sbb
mov
mov
and
sqrtps
add
movsb
es
mov
aad
iret
ss
push
test
mov
hlt
inc
scas
inc
add
and
and
fldt
cmp
xlat
inc
xchg
lea
sti
pop
xor
mov
pop
imul
popa
dec
cltd
repnz
repz
sub
add
push
dec
rcr
mov
in
add
nop
dec
iret
xchg
xchg
mov
lea
inc
push
bound
push
ljmp
stc
or
lds
rcr
mov
mov
mov
add
mov
enter
lds
mov
pop
popa
mov
je
fstps
or
in
cmp
mov
xor
xor
shlb
push
adc
sbb
add
pop
mov
pop
pop
imul
test
mov
lcall
rclb
or
adc
es
pop
jg
add
and
or
imul
or
ss
ljmp
or
aas
jo
cmp
jecxz
xchg
inc
and
andl
popf
sbb
and
mov
addb
lret
or
xchg
jb
sbb
sbb
cmp
imul
in
aaa
push
sbb
bound
loope
add
call
or
js
lea
mov
hlt
jbe
or
fnstsw
inc
mov
stos
pop
pop
pop
sbb
xor
test
and
ror
repz
mov
vmovlpd
orb
in
inc
sbb
jecxz
sti
and
dec
fstpt
or
push
cltd
sbb
inc
daa
sbb
decb
xchg
pop
sbb
sbb
pop
push
inc
lods
and
adcb
pop
dec
sub
adc
add
cli
xchg
cwtl
push
jmp
xchg
sub
mov
outsl
or
xchg
jl
mov
or
sub
pop
xchg
outsl
lcall
sbb
or
push
nop
push
jnp
fcoms
call
add
mov
or
ret
lods
xor
rcl
cld
in
test
aad
test
dec
aaa
mov
shll
jo
xor
sbb
pop
jecxz
or
filds
cmp
jl
or
decl
pop
push
mov
dec
adc
aas
addr16
sbb
imul
mov
bound
iret
out
movsl
movsl
xor
inc
scas
hlt
shlb
cmp
call
movsl
sub
or
push
dec
mov
out
outsl
out
xchg
fsubl
sti
test
test
cld
add
test
hlt
shlb
or
sbb
jb
adc
jns
inc
jmp
push
push
repz
xor
adc
cwtl
adc
ljmp
fstpt
add
enter
cmp
push
mov
mov
push
cld
fadds
add
dec
jno
lods
sahf
mov
hlt
out
dec
mov
xor
movsl
in
call
je
fimull
adc
cs
pop
xchg
scas
lahf
add
push
lods
test
xchg
mov
xor
pop
sub
out
or
in
pop
mov
push
stos
xchg
test
mov
mov
cmpb
sbb
neg
mov
out
outsl
insb
cmc
inc
push
arpl
adc
jge
sar
mov
xor
jmp
outsl
push
stos
insl
fwait
stc
and
push
gs
repz
add
jmp
data16
test
cltd
pop
ljmp
jmp
mov
adc
dec
mov
inc
scas
push
push
and
push
jge
cmp
arpl
cmpsl
cltd
inc
jl
inc
loope
rol
daa
imul
incb
cs
adc
scas
push
or
push
sbbb
xlat
mov
lods
dec
push
mov
cmc
mov
daa
dec
mov
adc
dec
iret
push
call
ret
jbe
xchg
dec
dec
cmp
jecxz
adc
fwait
hlt
enter
imulb
mov
or
jp
sub
add
outsb
mov
pop
xchg
leave
pop
sub
popf
push
mov
xor
ja
push
push
sbb
xor
fdivs
or
dec
adc
jnp
fdiv
dec
inc
outsl
and
mov
push
jecxz
mov
mov
ficoml
add
sub
or
icebp
aaa
pop
aam
xchg
adc
sub
sbb
adc
add
ljmp
and
cmp
xchg
xor
repz
cmp
roll
or
mov
outsb
lcall
std
pusha
mov
sub
jnp
add
lret
scas
pop
popf
adc
outsb
leave
pop
sbb
mov
ror
mov
adc
mov
jns
push
pop
pop
dec
fdiv
jne
out
andb
inc
mov
and
pop
icebp
lret
xchg
jmp
add
loop
imul
shr
popf
aas
loopne
roll
test
test
ds
add
das
fisttpll
adc
rorl
cli
xchg
subl
outsl
xchg
pop
xor
jg
dec
int3
cmp
arpl
test
lret
in
ss
mov
jecxz
jo
cmp
and
sub
jle
loopne
mov
xchg
ret
mov
pushl
icebp
push
flds
in
ficoml
xor
pop
or
adc
jb
mov
inc
push
push
or
mov
stc
flds
inc
add
sbb
xor
stc
inc
mov
repz
mov
jg
adc
jno
jns
inc
push
popa
arpl
out
shll
and
jecxz
mov
mov
mov
xor
add
dec
rolb
or
xchg
sbb
xor
sbb
pop
gs
pop
inc
mov
rolb
fists
nop
daa
push
test
jno
add
pop
cmp
lock
frstor
enter
jle
adc
adc
add
mov
out
pop
mov
test
rol
jge
rolb
cli
imul
jl
push
lret
in
sub
lds
mov
outsb
imul
push
cli
inc
lock
push
dec
icebp
cld
xor
or
pop
aaa
pop
sbb
scas
call
lahf
add
mov
mov
shlb
inc
sub
xchg
rorl
cmpsb
inc
xchg
test
das
mov
pop
mov
into
sahf
aam
es
loopne,pn
sub
adc
cs
jge
sub
ffreep
mov
cltd
mov
add
call
je
mov
lcall
xchg
loope
mov
inc
push
or
cmpsb
inc
sbb
in
test
lock
cmp
outsb
repz
or
mov
fwait
pop
out
cmp
testb
mov
in
mov
scas
jb
push
add
mov
ds
lods
dec
pop
sbb
sub
push
dec
push
jno
sarl
outsl
cmc
jl
rcll
fstpl
mov
dec
lds
rcrb
out
push
aam
mov
mov
lret
repnz
mov
push
lods
stos
inc
dec
loopne
inc
inc
and
jl
test
mov
push
lods
pop
xor
std
ja
mov
fildll
push
lods
adc
loop
add
or
inc
lock
pop
sbb
jae
hlt
cmp
rorb
pop
out
sbb
add
mov
test
adc
jns
adc
mov
inc
dec
push
jl
jle
rol
ficoms
xchg
adc
outsl
das
cld
fldt
inc
and
add
jle
pop
mov
and
jns
ret
pop
inc
mov
fldt
inc
fidivl
sti
sbb
cltd
mov
add
in
aam
and
andb
js
test
jp
into
out
outsb
pop
sub
add
loop
cwtl
test
xlat
sub
push
or
dec
add
or
out
ljmp
sbb
jp
clc
mov
xor
or
dec
lret
push
fbstp
or
mov
subb
test
fidivrl
outsl
rol
mov
arpl
adc
push
xchg
dec
lock
jno
lods
lea
mov
sbb
mov
mov
aad
aam
cmp
sbb
and
std
push
dec
push
mov
loopne
decl
addb
mov
arpl
jnp
xchg
aad
mov
push
arpl
in
add
sbbl
fildll
adc
mov
addr16
jecxz
push
xor
fcmovnb
flds
inc
mov
test
sahf
in
sub
movsl
adc
add
inc
loope
cmp
push
loopne
fcomps
das
cmpsl
iret
push
and
dec
or
call
rcrb
add
inc
sbb
mov
pop
mov
sub
sti
push
xlat
and
pop
call
mov
ljmp
bound
inc
fcoms
push
int
insb
jg
stos
int
push
mov
mov
std
push
aam
jecxz
fdivs
mov
lock
loopne
iret
and
push
hlt
pop
jns,pn
loop
dec
or
push
ret
or
leave
in
cld
fldl
loopne
push
mov
hlt
rclb
cltd
ljmp
call
and
lret
sbb
adc
push
inc
or
aam
sbb
jg
sbb
stos
xor
insb
inc
adc
adc
xchg
inc
mov
and
mov
test
push
mov
pop
imul
fdivrp
loopne
mov
add
add
stos
or
rorl
sub
cli
mov
adc
mov
addr16
or
mov
inc
adc
mov
jle
add
sbb
incl
iret
sbb
jecxz
push
das
cli
jg
call
xor
ret
js
cmp
sbb
jge
xchg
adc
or
adc
adc
shrl
cmp
in
test
push
inc
imul
pop
arpl
mov
faddp
pop
push
mov
js
movsl
jg
jne
inc
aaa
or
dec
mov
push
mov
pushl
movsb
addl
lcall
or
jmp
in
arpl
aam
or
cltd
cltd
push
inc
inc
test
lea
add
pop
pop
adc
sub
mov
or
aas
insl
mov
jb
loopne
inc
jecxz
ljmp
adc
cs
stos
stc
push
xchg
sahf
je
and
xchg
xchg
ss
pop
mov
add
xchg
mov
adc
loop
inc
jbe
nop
xor
jns
in
sbb
fs
add
pop
or
push
orb
lods
pop
testb
xor
sbb
sbb
and
icebp
mov
jl
push
fdivrp
sub
mov
or
lock
test
int3
jp
or
into
mov
mov
mov
rol
inc
cmp
into
aam
pop
lret
into
and
fdivp
or
adc
cli
inc
jbe
mov
orl
pop
insl
mov
mov
inc
sti
ret
add
pop
nop
jns
aaa
mov
das
pushf
push
sbb
ror
movb
cld
adc
aad
clc
icebp
cmpb
add
imul
das
mov
loopne
fldl
leave
call
outsb
push
push
scas
fisubs
mov
rcll
jbe
xor
xchg
dec
ljmp
jne
xchg
xchg
push
mov
adc
jmp
sbb
cs
rcrb
faddl
icebp
mov
call
das
test
xor
add
sub
sub
lock
lcall
xchg
insl
cmp
ds
pop
push
jne
lret
addl
aad
pop
les
push
cmp
clc
aam
mov
int
pop
sub
ret
pop
mov
pop
dec
popa
or
mov
cmp
dec
imul
popa
mov
mov
pop
cwtl
pop
fs
xchg
add
dec
inc
out
cmp
jnp
js
test
dec
mov
ljmp
lahf
jb
mov
mov
das
fadd
xor
jns
loop
push
fcoml
arpl
dec
or
inc
in
mov
aad
mov
mov
dec
sub
adc
adc
jnp
xor
xlat
cmp
and
sti
sbb
add
adc
mov
rorl
jno
outsl
lret
jb
cmpsb
sub
inc
sub
and
cmc
jo
lea
shrl
test
icebp
imul
fsubr
out
add
test
and
push
out
xchg
sub
dec
shlb
adc
inc
adc
das
dec
stos
adc
out
mov
mov
mov
jae
adc
pop
mov
pop
sub
xchg
fst
and
inc
xor
mov
lds
fcomps
mov
notb
stc
pop
sbb
hlt
pop
clc
adc
sbb
popf
ss
add
mov
or
outsb
xchg
push
add
push
push
jo
aam
sbb
xorb
adcb
data16
and
out
pop
lds
pop
out
insb
inc
cmp
aam
push
jecxz
or
loope
out
mov
fistpl
push
stc
sub
mov
mov
jge
or
sti
pop
lcall
add
push
icebp
cmc
fldz
pop
sbb
mov
mov
loopne
fcoml
xor
xchg
xchg
jnp
or
cmp
jmp
loope
mov
loopne
xchg
mov
push
icebp
add
lret
lods
and
sub
cmp
push
je
lods
or
pop
stos
fcom
addl
imul
xorl
aas
fildl
mov
and
or
es
push
imul
jb
fidivl
sbb
mov
push
cmc
push
xor
inc
push
addb
mov
sub
les
lahf
add
pop
insl
mov
stos
dec
icebp
push
or
push
jle
ljmp
mov
add
add
pop
loopne
bound
push
push
insl
fists
outsb
inc
and
aam
insb
fadds
dec
add
adc
adc
push
xor
pop
cld
adc
mov
les
and
jle
mov
dec
inc
and
mov
dec
jns
rol
add
bound
add
fsts
mov
cltd
adc
ds
push
sahf
jecxz
sub
mov
pop
jp
adc
add
mov
in
or
pushf
imul
cmp
mov
xor
ss
pop
test
mov
sbb
dec
rcll
cli
mov
pop
dec
xchg
push
iret
add
leave
sub
es
repz
fucomip
aam
scas
cmp
out
gs
fadds
dec
cld
pop
insl
dec
sbb
push
fldt
loope
jb
sbb
incl
inc
jno
inc
xchg
movsl
xchg
or
aam
push
int
jg
rcr
test
cs
mov
icebp
bound
popa
adc
mov
dec
adc
enter
inc
clc
mov
out
jecxz
inc
or
adc
aam
mov
push
or
dec
mov
and
push
shll
in
ss
add
xchg
dec
iret
add
cld
in
test
xchg
hlt
lods
inc
adc
out
mov
aam
arpl
enter
lcall
pop
xchg
nop
loop
ja
xchg
mov
sbb
adc
test
dec
add
movsb
xor
pop
add
iret
adc
pop
ja
outsl
sbb
mov
shrb
jns
pop
in
or
mov
pop
and
in
push
adc
xchg
rol
push
xchg
or
mov
fs
dec
push
inc
insl
nop
xchg
outsb
iret
fisttps
or
call
cs
sbb
sbb
lahf
out
mov
outsb
jl
loopw
stos
add
adc
jmp
sbb
jae
rcrb
or
pushf
push
push
mov
mov
xor
js
mov
aaa
mov
dec
mov
hlt
dec
hlt
dec
or
addb
sub
mov
repz
call
xlat
mov
jle
mov
or
add
xchg
aam
iret
loopne
mov
xchg
jge
test
lcall
jl
shr
es
adc
mov
push
cmp
aaa
mov
cs
or
inc
lcall
sbb
mov
add
outsb
or
push
push
dec
ror
enter
inc
loopne
ds
pop
xchg
and
data16
xor
out
loope
lods
dec
lcall
sbb
icebp
aas
xchg
fildll
mov
leave
out
pop
add
test
in
push
push
in
jmp
push
mov
sbb
dec
cmc
negl
aaa
push
xchg
stos
and
sub
pop
hlt
cmp
orb
les
into
mov
cmpsl
push
cmp
and
in
push
xchg
and
jnp
sbb
pop
sbb
pop
and
stos
push
orb
stc
or
int3
fidivl
test
cltd
push
cmp
push
subb
addl
jnp
bound
cmp
ret
loopne
mov
or
nop
mov
mov
xchg
test
xchg
outsl
pop
ret
out
push
outsb
mov
ret
add
loopne
pop
mov
mov
adc
push
mov
jno
aad
push
adc
inc
cli
out
cli
pop
jo
cli
add
push
test
aas
sub
stos
icebp
mov
aaa
jo
cmp
inc
lahf
imul
rorl
dec
jmp
imul
mov
jecxz
and
adc
add
mov
cltd
add
testb
mov
loope
fisubrl
pop
adc
mov
jp
adc
outsl
xchg
push
loop
outsl
add
inc
cmp
in
mov
pop
movsb
ret
mov
insl
mov
popa
xor
mov
lea
ja
inc
sub
mov
bnd
ja
in
add
sbb
push
jae
std
outsl
add
sub
xchg
std
cwtl
imul
mov
push
into
push
lret
test
inc
dec
pushf
cmc
fucomi
push
fmull
outsb
gs
pop
in
sbb
test
xor
push
sbb
cmpl
pop
inc
sub
jae
jmp
adc
push
insl
add
or
cmpsl
ret
or
push
xor
pop
aam
fnsave
sub
adc
pop
nop
inc
je
inc
jle
sub
inc
add
push
daa
or
fcoml
fcomps
mov
xor
sbb
xchg
mov
insl
pop
mov
pusha
fists
lock
fimull
adc
sub
pusha
incl
lods
out
adcl
lock
inc
jmp
and
cmc
adc
cmp
adc
and
loopne
fdiv
dec
enter
enter
rorb
sub
ljmp
aaa
cmp
mov
mov
inc
fistpll
lret
inc
out
mov
xor
rol
int
push
sahf
inc
out
add
fwait
out
add
push
jo
gs
jbe
xchg
push
ds
stos
ds
pop
jl
xchg
inc
add
outsl
sbb
inc
pop
inc
in
lcall
ret
outsl
mov
fistpll
in
push
test
inc
shl
cmp
popf
inc
or
je
or
loopne
add
cmc
xor
sub
mov
cmc
int
je
sub
pop
ja
push
aaa
jle
inc
xchg
dec
repnz
in
sarb
icebp
push
test
pop
shll
and
fs
movsl
jmp
mov
rorl
call
pop
aaa
adc
dec
dec
inc
or
je
add
call
sarl
div
addr16
inc
sub
stos
out
jbe
pop
inc
aas
and
push
insb
push
dec
sub
rcrb
mov
cmp
es
mov
push
aas
and
cmp
fistpl
xor
add
or
jnp
cmp
stos
mov
iret
in
andl
sar
aaa
mov
dec
or
hlt
push
pushl
imul
flds
ret
push
mov
cld
leave
mov
in
mov
ja
add
in
bnd
sti
push
mov
sbb
cli
test
loopne
pop
imul
push
add
out
cs
jo
lcall
pop
aaa
cmp
dec
and
jl
jno
push
hlt
sbb
mov
sub
fisttpll
xor
pop
xor
pop
lods
mov
aad
int3
push
mov
sub
icebp
out
push
jo
dec
jns
mov
jl
cmp
outsl
mov
inc
mov
ret
fisttpl
in
sahf
push
xor
fidivl
in
cs
test
jl
inc
ret
jle
inc
cmp
mov
sbb
mov
loop
inc
push
loope
dec
inc
rcl
mov
mov
adc
dec
rcl
inc
addl
pop
rorl
je
jmp
ds
rorl
int3
lods
inc
adc
sbb
mov
out
inc
mov
add
add
ljmp
ja
fucomi
ret
mov
xlat
shll
fdivl
aas
mov
ficompl
push
mov
jo
sub
rolb
inc
lock
cmpsb
mov
ljmp
aam
and
mov
pop
cmp
jge
pop
add
ss
addr16
push
mov
mov
adc
inc
and
sbbb
mov
test
repz
leave
or
mov
filds
mov
and
loopne
dec
inc
cld
ret
cmpsb
cwtl
mov
jmp
in
lock
dec
cmp
sub
sub
test
adcl
lods
and
and
fsubl
pusha
add
aad
push
jmp
or
sbb
mov
push
ss
adc
jmp
jecxz
inc
fsubrl
xor
and
xlat
fists
dec
inc
lea
aas
and
or
add
or
sub
loopne
inc
or
popa
adc
mov
or
and
mov
mov
outsl
ljmp
mov
mov
xor
pop
into
outsl
push
stos
imul
and
jae
push
mov
fisttps
pop
or
loope
sbb
xlat
rcrl
mov
xchg
popa
mov
sub
mov
aad
mov
lock
push
cs
sub
daa
aad
fsub
pop
js
rorl
adcb
xchg
incb
pop
cmp
call
inc
mov
xchg
popa
rorb
mov
push
fwait
fs
mov
sbb
cld
subl
into
pop
xchg
arpl
das
fdivrl
xchg
stos
pop
andl
mov
mov
aam
std
sbb
jmp
mov
popf
popl
jg
scas
loop
mov
idiv
dec
jge
stc
push
rolb
mov
sbbb
sbb
in
mov
fistl
mov
cmpl
out
pop
mov
in
mov
inc
xchg
xchg
or
stos
adc
lretw
push
popa
mov
pop
mov
repz
mov
inc
fs
enter
movsl
push
xchg
repz
mov
test
fildl
inc
xor
fildll
lock
or
push
test
push
add
add
scas
loopne
rclb
aad
cmp
pop
xchg
sahf
in
bound
das
std
dec
dec
sub
rcrb
mov
arpl
decl
xchg
pop
dec
fiaddl
ds
mov
mov
icebp
outsl
pop
adc
mov
pop
jl
movsl
test
add
add
leave
inc
gs
push
subb
shll
test
add
stc
gs
jne
ret
sar
sbb
xor
push
int
sub
adc
stos
jg
pop
imul
or
adc
add
inc
lds
and
pop
lock
xchg
mov
arpl
inc
inc
inc
push
outsl
outsl
cmp
adc
fisttpll
test
cmpsb
pushl
test
mov
lods
gs
sub
in
out
loopne
scas
jbe
inc
in
mov
dec
inc
inc
syscall
repnz
lea
xor
mov
and
xor
leave
add
stos
cmc
add
push
mov
pop
dec
stc
mov
cmc
ja
es
adc
mov
xchg
stc
enter
xorl
dec
daa
fstpt
jp
jbe
mov
push
dec
sub
js
out
pop
mov
movb
fcmovu
bound
notl
jo
or
add
lods
in
fstpt
ds
xor
push
int
enter
lods
jbe
push
aas
xchg
cli
scas
in
call
ret
or
in
orb
mov
add
push
cli
orl
cmp
mov
pop
stos
loope
adc
adc
int3
shrl
pusha
cli
test
ljmp
shr
data16
outsl
inc
outsl
or
adc
and
stos
fsubrs
lock
int3
push
outsb
push
push
xchg
cs
aas
mov
fwait
jbe
test
leave
in
pop
dec
loopne
testl
and
lcall
fbstp
rcr
loop
idivb
aad
add
adc
sub
push
mov
mov
xor
test
stc
addb
push
hlt
outsl
aad
xor
fistps
adc
inc
sub
shrb
xchg
testl
cmc
daa
push
repnz
mov
pop
fldl
jmp
pop
hlt
sub
mov
cmp
lock
in
xchg
jp
mov
jo
pop
mov
gs
push
push
and
mov
mov
aaa
stc
jle
jbe
mov
cmp
jo
inc
pop
xchg
test
push
dec
insl
sbb
negb
ds
or
mov
lea
test
popf
leave
push
lock
aas
mov
jg
pushf
sub
movsl
add
xchg
stos
test
ja
aam
insl
out
into
sub
repnz
mov
jl
pop
push
hlt
jb
filds
loope
mov
sub
jb
mov
repz
mov
mov
dec
inc
imul
stc
repz
leave
mov
shrb
loopne
pusha
nop
in
call
jo
or
in
fnstenv
jbe
push
push
das
repz
mov
lahf
pop
xchg
stos
adc
enter
test
cli
aaa
lock
xchg
push
bound
hlt
dec
xor
fstpt
lods
mov
inc
mov
mov
adc
insb
test
or
sbb
add
mov
scas
movsb
sbb
mov
call
repnz
call
adcl
add
es
mov
loopne
add
in
sbb
ja
xchg
push
add
pop
and
cmp
cld
jno
sub
mov
or
jge
push
ret
rorb
add
je
or
cmpsb
lods
pop
mov
frstor
aam
mov
adc
jo
ljmp
lcall
loop
xor
decl
inc
stos
add
or
leave
add
add
push
inc
mov
ljmp
sub
inc
pop
mov
das
mov
sub
jns
pusha
pop
test
xchg
ds
inc
xchg
xor
jg
negl
incl
lds
jl
popf
jle
fisttpl
mov
or
lds
callw
imul
mov
or
sbb
data16
js
mov
xchg
adc
mov
mov
xor
push
jg
pop
out
add
push
sub
inc
inc
cmp
hlt
inc
xchg
sbbl
cld
push
and
in
cmp
pop
sbb
mov
cld
dec
mov
push
xchg
fistpl
jg
sbb
nop
ljmp
pop
cli
sub
cmpb
or
es
jnp
int
rcrb
mov
add
xchg
lret
or
out
cli
clc
daa
adc
jg
jg
adc
push
fisttpll
xor
ret
pop
loop
add
jbe
add
adc
jmp
mov
inc
and
movsb
lahf
repz
addl
mov
mov
sbb
ret
jg
add
scas
mov
sub
inc
aad
jle
sahf
xchg
stos
es
push
inc
fstpt
icebp
bound
test
cmp
pop
push
jmp
jmp
es
pusha
adc
clc
test
aad
stc
add
mov
dec
dec
lds
fiadds
loope
xchg
rcll
fistpll
mov
lret
das
xchg
loop
adc
inc
aam
scas
shl
xchg
or
in
sub
sbb
popa
in
adc
xlat
incl
sub
ljmp
sbbl
in
inc
jge
pushl
int3
icebp
inc
aaa
insb
mov
jg
pushf
insb
fwait
mov
in
or
call
cmpb
jle
test
popa
stc
dec
hlt
in
outsb
jnp
jbe
xchg
xor
pop
mov
inc
cs
add
fs
or
mov
adc
sub
stc
ret
loope
punpcklbw
scas
pop
sub
jge
addr16
add
ret
rcrl
and
arpl
div
out
adc
scas
fwait
jp
rcr
out
xchg
cli
popa
iret
adc
sbb
jecxz
mov
shl
outsl
lcall
cld
shrl
jg
icebp
rcrl
dec
imul
and
shlb
sbb
push
push
nop
xor
call
adc
add
mov
cwtl
push
pop
outsl
jg
test
mov
pop
jns
out
pop
push
sti
inc
xor
popf
mov
test
xor
out
sbb
cs
cmp
iret
daa
sbb
scas
sahf
jl
jl
add
cmp
push
mov
in
cmp
xchg
pop
adc
clc
push
cli
jg
or
cmp
add
bound
pop
push
imul
inc
mov
lcall
lcall
negb
sub
or
pop
inc
cmp
fucomip
pusha
adc
and
push
mov
mov
leave
cld
adc
lahf
or
mov
adc
pop
mov
int
scas
shrl
ret
mov
out
aaa
test
mov
js
clc
test
lahf
and
add
lods
clc
loopne
inc
fstpl
dec
pop
sbb
push
xor
push
mov
mov
mov
xlat
add
hlt
sub
jo
in
lods
and
das
mov
ja
xchg
dec
call
push
pop
icebp
adc
sub
mov
sbb
loopne,pn
jb
ja
mov
mov
sub
rorb
jl
lcall
imul
arpl
or
push
sub
test
lock
loope
mov
movsl
xchg
inc
pop
mov
fsubrl
insb
push
cmpsb
push
in
cld
sub
sub
dec
test
dec
loope
outsb
mov
dec
xor
cmc
popf
cld
ret
or
inc
dec
add
fistps
push
push
aad
imul
xor
nop
sbb
lea
clc
pop
mov
jl
mov
or
and
push
ret
inc
add
mov
addr16
adc
mov
imul
mov
aad
loopne
cmpsb
stos
idiv
in
cltd
mov
fdivp
insl
pop
xor
ljmp
xchg
imul
rolb
jge
icebp
xchg
outsb
aaa
bound
mov
sub
jnp
popa
fcoms
mov
pop
out
mov
mov
mov
notb
mov
cld
aaa
stos
and
cmp
cltd
call
mov
fadd
add
ds
cmp
outsb
outsb
loope
mov
push
arpl
pop
cltd
jle
bound
or
push
and
mov
xchg
stos
rorb
push
sbb
insl
fldenv
sbb
inc
aaa
test
movsl
add
inc
dec
lret
mov
rorb
mov
jnp
add
push
sub
ffree
jg
xlat
inc
test
pop
or
insb
mov
cltd
inc
inc
ja
mov
push
mov
cld
sbb
push
xchg
addr16
outsl
les
test
mov
movl
xchg
mov
push
jg
cmp
add
mov
mov
push
push
shrl
out
push
scas
fisubrl
pushl
sub
mov
sti
pop
std
and
cmc
mov
clc
call
and
xchg
pop
das
in
icebp
cmp
adc
in
rorl
mov
insb
or
imul
clc
stos
mov
ljmp
sti
xor
mov
sarl
leave
out
sub
mov
push
enter
sbb
mov
icebp
outsl
pop
outsl
ret
add
mov
pop
into
inc
clc
dec
popf
in
xchg
insl
mov
bound
stos
cmp
or
adc
xchg
aaa
adc
jg
jnp
xchg
ja
inc
das
aam
ds
inc
popf
lods
pusha
cmp
lret
cmp
inc
aaa
mov
push
sub
cmp
cs
popf
aam
adc
ret
xor
addr16
or
add
cmpsb
or
pop
call
and
sub
xor
adc
sbb
rcl
jno
jle
fwait
pop
cmpsb
mov
leave
xor
jle
mov
jne
mov
pop
xchg
sbb
mov
pop
pop
mov
pop
inc
test
jne
jno
mov
dec
repnz
shl
pop
jle
stos
xchg
nop
loopne
add
or
mov
push
les
push
test
pop
pop
loope
and
jne
lret
add
ss
inc
cmpsl
jae
push
outsb
and
dec
dec
rcr
mov
pop
dec
jne
clc
fisubrs
das
xor
mov
insl
ljmp
daa
aaa
dec
mov
pop
xchg
stos
test
mov
mov
loopne
movsl
pop
dec
sbb
dec
add
add
mov
xor
or
xor
pop
inc
sub
sub
jmp
jb
repnz
loope
cmp
ret
test
outsb
mov
stos
mov
jno
lret
mov
and
sbb
xchg
cld
outsl
subl
mov
aas
mov
mov
cmp
jge
fldenv
xor
imul
data16
mov
or
or
test
sbb
sti
inc
inc
jo
mov
mov
xor
subl
insl
imul
sbb
mov
push
pop
ret
mov
inc
jg
mov
femms
icebp
call
sarb
inc
into
add
decl
ja
push
inc
and
aad
enter
sub
decl
int
sub
cmpl
xor
imul
imul
in
jbe
mov
mov
pushl
decl
int
sbb
clc
cmp
imul
sub
movsl
fdivrl
mov
xchg
mov
add
aas
loope
ret
negb
push
mov
push
lods
mov
inc
mov
push
into
clc
ja
pop
add
sub
mov
insb
pop
pop
mov
fwait
add
das
fldl
or
push
jae
push
pushl
pop
inc
and
fwait
xchg
mov
popa
mov
stc
cmp
fdivr
sbb
mov
jnp
jp
xor
aaa
insb
loopne
jcxz
mov
pop
enter
cmp
pop
sbb
lahf
push
ret
ret
rorb
add
popa
xor
aaa
mov
mov
adc
sbb
and
rol
ljmp
jle
es
sbb
adc
cli
aaa
popa
into
inc
or
fs
or
xlat
jbe
mov
cmpb
cmp
ret
add
cmpsl
test
xchg
inc
fs
pop
mov
fdivr
nop
adc
pop
test
jmp
cmp
pop
push
jg
add
mov
mov
pop
pop
lahf
xchg
push
push
rcl
pop
dec
shll
mov
mov
mov
movsb
mov
into
xor
cwtl
and
not
fadds
mov
jno
leave
cmp
es
jno
adc
pop
stc
jg
jmp
xlat
xchg
outsb
pop
subb
fisttpll
dec
push
addl
xchg
rol
fwait
out
clc
imul
out
and
insl
jl
mov
mov
or
cmpl
test
in
bound
and
xchg
ss
fwait
pusha
ss
cmpsb
call
push
xchg
cmc
lods
movsl
dec
hlt
decl
mov
leave
push
cmpb
inc
inc
ja
sarl
xor
cmp
sarb
sbb
lcall
pop
arpl
jmp
fs
mov
mov
xor
in
mov
sbb
and
sub
mov
cmpsb
addps
push
lods
aas
adc
arpl
xchg
push
fbstp
les
mov
cs
jl
inc
xor
xor
fbstp
dec
out
sbbb
cli
fmuls
adc
jno
loope
lret
pop
mov
add
xchg
cli
call
rol
cli
sbb
xor
xchg
mov
aad
pop
outsl
lds
jp
scas
lret
adc
out
popa
into
addr16
mov
int3
cmp
and
outsl
sub
mov
adc
cld
mov
imul
push
in
mov
mov
std
mov
rcll
jg
and
pop
sbb
or
aaa
sub
push
fisubrs
fucom
test
mov
sbb
jge
in
in
push
add
cmc
dec
imul
mov
lea
in
cli
rclb
or
aam
pop
xor
out
pop
xor
adc
xchg
call
or
and
and
mov
sub
mov
dec
out
adc
icebp
lret
imul
dec
add
push
ffreep
sbb
jp
and
pop
mov
outsl
cld
sbb
inc
in
hlt
inc
or
arpl
xchg
test
mov
call
test
scas
sbbl
insb
aaa
cmpsb
das
inc
js
jg
add
jbe
dec
cltd
rcrb
jle
sbb
nop
push
push
ljmp
xchg
js
sbb
or
cmp
outsl
push
push
and
or
dec
cmp
movsl
mov
add
pop
fmull
fsubl
and
sbb
pop
sbb
push
fisubl
sbb
out
mov
fmull
dec
or
addr16
ret
dec
mov
orl
adc
xchg
mov
cld
mov
jl
cli
movl
imul
xor
dec
sub
icebp
nop
stos
mov
cltd
or
cmp
lahf
clc
mov
je
sbb
arpl
sub
ljmp
jle
add
adc
aas
and
push
jmp
mov
adc
xor
dec
inc
cwtl
xchg
cmp
shl
jle
pushf
pop
mov
enter
lods
mov
mov
push
xrelease
cmp
push
jno
pop
or
pushf
lcall
shrb
jg
mov
nop
pop
inc
fimull
call
sarb
mov
repnz
lcall
push
add
es
mov
add
add
test
push
sbb
mov
rolb
xchg
dec
mov
cwtl
aas
add
fidivl
or
decl
lea
popa
or
sar
push
fwait
add
movsl
dec
jne
repz
or
js
std
js
push
incl
or
xor
mov
xchg
mov
pop
mov
cmpsl
dec
pop
pop
add
jbe
push
jbe
add
mov
cmp
out
mov
xor
xorb
mov
push
or
mov
hlt
adc
aaa
mov
clc
jg
inc
or
xor
icebp
push
out
js
outsl
add
adc
mov
lods
sti
add
cs
bound
decb
mov
add
js
mov
out
push
mov
in
sub
rcrl
test
mov
push
test
cmp
pop
js
jmp
dec
jg
inc
xchg
faddl
gs
push
jg
fisubrl
shlb
shl
movb
das
xchg
fistpll
stos
ficompl
pushw
xchg
shll
xchg
jle
insb
cwtl
xor
xchg
mov
lahf
push
dec
pop
pop
pop
rolb
and
cwtl
cld
sub
aas
rcrl
mov
dec
xlat
pop
xchg
lret
dec
mov
xlat
movsl
fst
cmp
adc
fldl
orb
fld
aaa
mov
cmp
pop
or
in
dec
adc
xorl
icebp
mov
out
sbb
sbb
test
fdivs
inc
cmc
jg
xchg
lods
imul
sti
rorb
push
and
ret
push
jbe
in
jmp
fadds
lcall
insl
test
xchg
inc
pop
je
add
ret
mov
or
daa
shrl
xchg
cmp
jo
jg
aas
sub
jmp
divb
jg
inc
popa
test
xlat
ds
add
mov
out
sub
mov
mov
xchg
adc
pop
das
insb
inc
pop
xchg
add
ret
call
lahf
dec
pop
jecxz
xorps
fistpl
pop
add
xchg
inc
movsl
mov
xchg
ljmp
icebp
jne
add
xchg
repz
das
xchg
mov
rorb
xor
mov
clc
pop
sti
mov
mov
or
cltd
and
loop
lds
xchg
mov
insl
adc
popa
or
test
xchg
jmp
fcompl
mov
mov
sub
mov
sti
sbbb
xlat
add
fists
idivl
mov
idiv
push
cmpsl
mov
adc
std
mov
lahf
rorl
sarl
xlat
push
enter
subb
push
cld
enter
test
aaa
inc
or
dec
lods
jo
pop
sbb
adc
ja
jl
sti
mov
or
mov
mov
fnstenv
hlt
in
cmpsb
addb
js
scas
xchg
xor
jbe
push
dec
lahf
dec
pop
loop
and
std
sbb
aas
sub
mov
cmpsb
dec
inc
cmp
push
xor
popa
stos
rorl
mov
sbb
pop
popf
dec
out
mov
pusha
mov
out
cmp
ret
cmp
dec
mov
pinsrw
mov
add
pop
and
sbb
subl
push
adc
mov
sbb
loope
in
out
gs
ret
inc
pop
pop
pop
mov
hlt
stc
cld
nop
jl
sub
cmp
xchg
xor
or
or
outsl
fmull
ljmp
pushf
inc
jnp
loopne
sub
jae
sbb
mov
ficoml
sbb
jmp
mov
cmp
cmc
cmpsb
inc
in
out
icebp
or
cmp
movsb
inc
sbb
std
mov
jne
pop
sbb
movsl
loop
mov
sbb
cmp
in
nop
testl
adc
es
xorb
addr16
pop
inc
out
pusha
stc
ja
mov
outsl
dec
jmp
cwtl
fisttps
mov
hlt
pop
lds
pusha
into
mov
leave
xchg
in
mov
sub
out
shlb
icebp
mov
mov
sbb
jle
mov
aaa
loope
mov
pop
sbbb
mov
fs
mov
cmp
and
das
mov
jg
shll
adc
xor
cmp
and
mov
lods
jmp
adc
mov
fisubrs
jmp
fdivr
inc
clc
movsl
add
or
and
jl
push
mov
push
xchg
loopne
push
or
mov
outsl
and
stos
and
popf
dec
sub
push
cwtl
xchg
and
jns
call
pop
sarl
shll
jge
push
insl
insb
test
mov
push
hlt
lds
mov
push
icebp
or
add
inc
pushf
jae
js
incb
adc
lds
sbb
jle
pop
mov
jmp
push
popa
dec
mov
xor
push
inc
mov
sub
mov
lds
ljmp
int
or
fs
cmp
in
lds
inc
or
je
sahf
or
arpl
cld
lods
sub
or
jp
stos
movsl
inc
sbb
push
xchg
mov
daa
decl
rcrl
jbe
cwtl
aam
and
inc
das
orb
ljmp
jb
adc
cs
in
mov
je
sarb
mov
in
dec
jnp
push
xchg
pop
sarb
into
insb
lret
inc
mov
mov
adc
es
mov
scas
mov
inc
push
cmp
lods
sub
push
arpl
lahf
mov
cltd
jno
rcr
idivl
fwait
sarl
pop
push
ljmp
aaa
add
push
mov
jns
hlt
incl
and
jb
cmpsb
dec
adc
lcall
inc
inc
mov
insl
push
cmpxchg
xor
cmp
push
push
in
and
pop
fs
sub
das
sub
loope
mov
loopne
xor
cmp
test
movsl
or
mov
ficoms
mov
sbb
fnstenv
pushf
push
loopne
pop
pushl
jns
and
push
mov
out
xchg
mov
scas
or
mov
dec
bound
or
pop
pop
mov
push
sub
add
ljmp
aad
cmp
push
mov
rcll
dec
ret
push
das
dec
jo
call
fs
rcrb
mov
lret
jns
cltd
pop
nop
or
mov
add
jae
add
out
fimuls
inc
sub
fwait
lcall
dec
es
xchg
aam
loope
mov
or
enter
or
fistps
mov
and
movsb
and
xchg
gs
add
call
jle
add
adc
sbb
or
mov
pop
sbb
mov
ds
jl
mov
inc
mov
xchg
sub
enter
xor
call
jns
pop
adc
push
lds
in
xchg
orb
repnz
or
jmp
repz
fwait
jg
lea
xchg
jl
ja
or
dec
mov
mulb
data16
mov
ds
sarl
in
lock
push
push
sbb
lea
ss
cmpsl
pop
jb
popa
icebp
push
inc
xor
add
mov
das
inc
jge
mov
sub
loopne
or
xor
out
cmp
mov
sarl
call
add
out
aam
scas
mov
pop
push
jge
repz
add
jl
xor
mov
adc
decl
out
inc
push
cmp
push
or
daa
sbb
pop
mov
aad
cmpsb
pusha
dec
sbb
testl
pop
xchg
in
inc
stos
js
lret
jo
jmp
outsl
cwtl
sub
push
add
xor
arpl
jns
repz
ja
test
imul
rcll
mov
gs
loopne
sbb
mov
lret
adc
push
sbb
push
inc
xchg
out
xor
ss
jp
sti
sub
arpl
lods
jno
addr16
jne
int
jo
adc
sahf
sub
hlt
push
xor
sub
dec
sarl
adc
xor
shrl
push
in
pop
ss
jp
mov
push
arpl
scas
jg
mov
dec
popa
js
mov
adc
scas
add
push
add
add
repnz
xor
mov
xchg
pop
lea
sub
jecxz
les
enter
mov
mov
or
out
and
notb
outsl
pop
inc
popf
in
pop
mov
ljmp
inc
stc
pop
ja
mov
dec
or
jge
mov
adc
jecxz
mov
sti
inc
pop
imulb
int
mov
add
int3
and
push
outsl
mov
xor
and
xchg
sub
jecxz
mov
shlb
shrb
push
ffreep
pop
lahf
in
mov
stc
add
mov
mov
inc
push
xchg
cmp
push
movsb
xchg
loop
test
sbb
xor
cmc
lea
stos
jl
in
or
leave
call
call
xor
pop
jmp
adc
pop
mov
das
cli
je
cld
inc
inc
outsb
inc
mov
out
sbb
jecxz
lds
lcall
imul
cmc
shr
pop
push
fwait
or
add
push
mov
or
jg
push
es
ja
cmp
sub
lods
lea
sbb
ljmp
sbb
movsb
cmp
pop
repz
jmp
in
fwait
in
push
cmc
sbb
aas
push
ficoml
idivl
jle
insb
mov
loop
sbb
add
icebp
cmp
pop
inc
int3
outsb
movsl
xchg
fistpll
adc
mov
imul
popf
fmull
movsl
scas
jecxz
sbb
rcrb
bswap
xor
arpl
sbb
add
sub
sub
rcrl
adcl
subl
and
out
mov
fcom
mov
pusha
test
lea
fstl
std
incl
les
pusha
and
xor
push
fstpl
mov
jmp
dec
xchg
adc
dec
enter
pop
add
or
leave
or
inc
mov
and
lock
ret
inc
push
fildll
test
cmp
sub
push
add
outsl
xor
mov
dec
push
lods
push
pop
mov
cmpsl
sub
mov
sbb
or
sbb
mov
fs
and
test
xchg
lcall
std
mov
loope
inc
inc
cld
inc
fs
sbb
aaa
inc
outsb
or
repnz
imul
xlat
pushf
outsl
ljmp
sti
lods
or
adc
or
push
fcompl
sbb
repz
scas
inc
decl
add
lret
call
push
adc
std
mov
mov
leave
mov
dec
aad
in
cmp
jge
push
rolb
insl
and
aaa
xchg
das
mov
test
addr16
mov
mov
inc
sti
xor
lahf
push
inc
dec
or
test
fistl
push
roll
arpl
add
outsl
jg
cmp
sbb
pop
dec
adc
addr16
fistps
cmpb
or
mov
adc
sti
push
inc
hlt
push
add
movl
jns
jmp
fnstsw
outsb
aas
mov
dec
addb
push
std
mov
lea
adc
pop
push
jae
js
and
mov
push
test
ret
sub
les
repnz
xor
inc
cmp
or
mov
cmp
mov
dec
sub
and
cmpsb
mov
nop
jge
push
mov
dec
jg
push
ret
sub
mov
ret
add
in
push
ret
xchg
test
xchg
xor
xchg
pushf
and
test
pusha
cwtl
mov
sub
jp
enter
xor
cmp
or
inc
or
andb
mov
pop
sarb
jmp
out
daa
xchg
or
mov
cmp
dec
and
or
xchg
dec
sahf
out
inc
pop
xor
jne
add
add
shrl
dec
xchg
pushf
cmp
insl
int
push
rolb
lods
adc
cmp
jecxz
mov
cmp
adc
jmp
es
and
cld
inc
jb
aam
call
push
dec
xchg
dec
or
and
lods
out
mov
mov
and
push
outsb
mov
add
cld
sahf
and
inc
xchg
pushf
loope
inc
pop
pusha
mull
sub
or
dec
mov
adc
imul
pushf
cld
sbb
push
aam
xchg
and
pop
add
sahf
aam
fs
jmp
and
mov
sub
add
cmp
fsubrs
cmp
shlb
aas
sbb
lcall
fcomps
lock
pop
les
and
cwtl
cmc
dec
repz
jne
or
loopne
sbb
or
inc
std
movups
mov
pop
or
dec
scas
mov
loopne
pusha
rolb
lods
sbb
jbe
adc
and
pushf
call
das
xchg
sbb
mov
mov
pusha
dec
or
je
push
cli
jb
pop
sbb
mov
addr16
out
movl
add
testl
rcrl
sbbb
pusha
or
inc
or
cmp
xchg
add
and
sahf
dec
inc
cmp
ss
repz
imul
gs
sbb
aaa
mov
daa
leave
push
mov
jne
adc
mov
mov
lea
insl
mov
lea
ljmp
mov
fs
bound
cmpsb
pop
mov
mov
test
pop
call
shll
cli
push
incl
popa
jp,pt
lahf
pop
aad
std
xor
test
dec
imul
nop
stc
out
pop
adc
fldt
dec
add
std
outsl
push
incl
adc
shll
icebp
jno
icebp
test
add
sbb
mov
mov
out
jp
rcl
mov
test
sub
bnd
icebp
mov
ficompl
mov
push
dec
mov
push
push
mov
sbb
cli
pop
cmp
and
mov
cmpl
mov
imul
orb
inc
dec
test
fistpl
xchg
pop
add
fs
mov
das
mov
jae
lret
lock
movb
adc
mov
sub
dec
cmp
pusha
push
aam
bound
in
sbb
mov
icebp
das
push
cmp
push
je
mov
subb
aaa
outsl
mov
rcll
mov
mov
push
sbb
xchg
and
inc
mov
adc
shlb
push
test
incl
mov
imul
ljmp
aad
lea
jmp
pop
add
push
pop
pop
clc
sbb
repz
push
into
sbb
adc
in
lds
shr
lock
lret
insb
sub
data16
mov
gs
icebp
in
insl
jns
iret
mov
mov
das
pop
push
fldt
lret
cmp
pop
cmpsb
outsl
loopne
push
lods
push
pop
daa
push
leave
inc
sub
mov
scas
clc
es
cli
xchg
gs
push
and
loopne
cld
mov
mov
and
cld
std
cmc
rclb
mov
fstpl
stos
aam
es
inc
aam
gs
ds
pop
sub
sbb
cltd
push
push
push
pop
push
or
ljmp
lahf
lea
loope
inc
push
adcb
bound
mov
xor
push
jmp
push
aas
andb
xchg
out
ljmp
mov
pusha
mov
lods
fwait
jmp
mov
mov
jecxz
daa
jns
scas
adc
mov
or
lahf
fdivrp
jbe
pop
or
scas
jne
cmp
jle
ljmp
cmpl
and
sub
test
and
fistps
and
cld
mov
jg
cmp
cmc
adc
aas
pop
or
sbb
ljmp
sti
adc
imul
mov
shrl
repnz
addl
cmp
jae
jge
outsb
mov
inc
mov
js
stos
jo
rcl
test
cli
lcall
adc
aaa
cmp
xchg
adc
int
lds
push
movsb
and
push
mov
fildl
xlat
and
xor
sbb
mov
jecxz
shlb
xor
dec
dec
push
test
aaa
fucomi
fucomi
or
push
pop
pop
je
adc
scas
add
pop
dec
pushf
and
inc
movsb
mov
xor
jo
mov
fdivr
lods
pop
cmp
das
popa
cmp
out
push
clc
sbb
mov
jmp
ss
cs
cmp
mov
fs
xchg
push
sbb
mov
mov
ret
daa
cmp
adc
or
clc
jo
mov
inc
popa
outsb
cmpsl
mov
dec
adc
es
xchg
mov
loopne
enter
movsb
mov
push
fisttpll
xorb
nop
push
inc
inc
fdiv
jmp
inc
rclb
fistpl
mov
sub
sbb
lcall
or
and
and
int
mov
adc
add
pop
xchg
loopne
fistps
mov
push
and
imulb
mov
das
mov
lods
out
pushf
cmp
arpl
icebp
in
jne
icebp
sbb
jmp
lea
mov
or
ficompl
adc
or
pop
cmp
mov
fwait
add
std
addb
les
popa
mov
xchg
popf
out
adc
int3
dec
mov
cmpsb
shll
push
adc
mov
cmp
imul
push
ja
sbbb
test
mov
mov
icebp
jg
test
jns
inc
xchg
cs
xor
pop
aam
or
cmpb
mov
dec
jmp
movsb
incl
lret
mov
mov
xchg
movsl
jle
xchg
aad
pop
add
shlb
sub
adc
mov
inc
popl
outsl
int
rcll
rorb
cli
inc
push
sbb
sarl
and
dec
and
or
ja
mov
jp
outsb
dec
push
xchg
fisttps
adc
adc
dec
js
sub
fsubrs
js
jmp
mov
ret
cmpsb
add
cmpl
sub
loop
and
jnp
imul
mov
ret
sub
outsb
outsb
jle
inc
or
sbb
lcall
mov
inc
ror
and
sub
jne
xor
nop
cmp
adc
lock
sbb
dec
testl
mov
mov
pop
pop
mov
inc
call
inc
or
sar
out
xor
shlb
and
dec
dec
and
inc
fisttpll
add
sub
mov
xchg
out
lcall
in
rep
and
fcomps
inc
sti
jg
fsts
nop
mov
imul
cmpsb
mov
jmp
lcall
mull
cli
test
ret
mov
leave
sbbb
clc
xchg
dec
mov
mov
mov
sub
jecxz
cld
push
dec
pusha
sub
test
stos
shll
in
or
sbb
add
hlt
scas
add
inc
cmp
mov
jecxz
jnp
add
hlt
mov
jge
adc
jnp
clc
inc
iret
sbb
shlb
test
dec
fildll
inc
mov
and
or
sbb
push
push
arpl
addr16
dec
ljmp
enter
popa
dec
dec
movsl
sub
mov
out
push
xchg
icebp
call
syscall
mull
pop
mov
push
movsl
mov
mov
shrl
mov
adc
adc
incb
xor
cmp
sbb
icebp
jg
ljmp
jns
inc
pop
cmpsb
dec
bound
mov
std
js
icebp
fs
fs
clc
in
inc
add
add
cmc
dec
pop
dec
xchg
mov
jmp
lock
cli
dec
pop
enter
outsb
push
jnp
lea
pop
aas
and
mov
aas
ud2
dec
lds
sti
aad
out
push
das
je
test
jle
loop
pop
mov
in
ror
dec
shll
cmp
dec
inc
sahf
cmp
fnstcw
jb
js
call
dec
js
dec
mov
xchg
lcall
or
movsl
lods
push
pop
and
push
pop
adc
xchg
xlat
sti
sub
mov
sbbb
aad
push
test
xchg
lock
mov
ljmp
push
das
adc
repz
mov
out
shrl
ret
hlt
in
ljmp
sbb
dec
jo
mov
cmc
pop
push
xchg
sub
pop
das
icebp
popa
push
fldt
add
call
xchg
pop
dec
xorb
inc
orl
xchg
mov
mov
cmpsb
jbe
aad
or
lea
push
push
loope
andl
stos
mov
popa
inc
xchg
mov
ja
fildll
push
outsl
xor
inc
in
scas
out
pop
sub
pop
clc
dec
nop
enter
out
std
mov
mov
add
dec
mov
je
pusha
pushf
insl
dec
pop
push
pop
lret
imul
sub
orb
stos
jne
jg
add
lret
sub
adc
in
movsb
jg
lods
dec
jmp
imul
mov
or
mov
inc
in
jns
push
shlb
stos
push
int
xchg
mov
cli
cmc
in
push
das
filds
or
pop
loope
add
incb
xlat
in
push
jo
mov
adc
fwait
lcall
push
pop
decl
sub
std
fcmovb
les
ficoms
cli
ljmp
out
mov
pop
lea
mov
push
pop
mov
fidivrs
lea
fs
and
xchg
dec
push
outsl
fnstenv
jmp
outsl
movsl
inc
pop
icebp
sbb
sbb
loope
call
or
jmp
mov
pop
or
pop
lock
jecxz
sbb
adc
cld
sbbb
pop
mov
add
inc
xchg
jp
pop
dec
xor
mov
fwait
jns
xchg
push
test
inc
or
ficoml
adc
pop
push
orb
cmpsl
sub
xchg
arpl
mov
xor
aad
in
mov
mov
xchg
jbe
ret
xchg
iret
imull
jno
sub
mov
pop
cmp
test
push
mov
push
xchg
push
adc
outsl
pop
loop
jmp
cwtl
addl
or
push
inc
aaa
cmpsl
outsl
pop
cld
data16
fisttpll
jp
xchg
add
xlat
call
mov
mov
repz
or
xchg
fstpt
dec
add
adc
jge
std
xchg
cli
adc
cltd
jp
lahf
xchg
in
dec
cwtl
loopne
jmp
shr
or
fildl
inc
rcl
roll
dec
sub
shll
push
sub
inc
add
test
or
scas
stc
fidivrl
sub
lods
cmp
or
xor
aas
xchg
sbb
or
mov
dec
aam
cmpb
mov
dec
mov
cmpb
ret
adc
mov
push
inc
mov
mov
insl
rcr
cmp
loop
mov
add
add
iret
jle
andl
movsl
fsubr
mov
bound
das
insb
cld
inc
add
jns
jl,pt
mov
and
inc
jmp
and
and
mov
rclb
adc
jno
cmpsb
rclb
add
in
mov
nop
ss
out
dec
adc
add
mov
sub
fiaddl
jb
and
loope
mov
fcmovbe
inc
jle
cmp
daa
fisubrs
repnz
lods
push
scas
pop
ds
lea
jbe
cmp
out
adc
in
xchg
cmpsl
mov
mov
cwtl
sub
or
movsl
pop
clc
aaa
jl
and
xchg
cli
lret
pop
in
pop
mov
sbb
jmp
xlat
stos
arpl
mov
sbb
das
lds
js
xchg
sbb
inc
pop
inc
mov
mov
and
and
gs
test
scas
mov
adcl
les
xchg
mov
add
dec
das
push
mov
mov
in
das
loope
sar
addl
ds
push
in
aas
shrb
jp
pop
rcr
dec
sbb
ja
les
mov
aas
ja
jge
movsl
add
dec
outsl
mov
mov
in
orb
movsl
es
stos
push
hlt
xchg
push
mov
call
idivl
fcomps
call
decl
pop
jb
push
lods
adc
flds
inc
test
movsb
mov
imul
sub
push
dec
or
fcmovbe
xchg
or
clc
push
cld
adc
add
fisttps
cwtl
les
fistl
mov
dec
nop
and
push
aad
pop
sub
inc
mov
cmp
fst
push
div
push
jecxz
imul
test
adc
dec
fisubs
sbb
lcall
mov
idivl
or
adc
and
cmp
adc
mov
jg
sub
loopne
scas
sub
mov
lret
mov
sti
inc
inc
cmpb
fists
and
fimull
xchg
test
cld
dec
in
jecxz
add
or
inc
pop
and
filds
adc
outsb
inc
out
stos
mov
loopne
xchg
pop
jne
pushl
cmp
pop
dec
xchg
push
dec
sbb
pop
ljmp
inc
aas
je
sub
mov
icebp
lahf
and
push
or
cmpsb
das
les
xor
mov
push
outsb
shl
sbb
in
inc
jo
xor
test
outsl
pop
xchg
ret
push
xchg
or
imul
arpl
bound
nop
inc
mov
in
movsl
mov
jo
add
aas
and
stos
mov
mov
int3
notb
sbb
es
cmpl
mov
insl
and
shrl
mov
mov
sbb
mov
orb
rcrb
dec
mov
inc
orl
imulb
mov
int3
pushf
dec
add
jb
xchg
inc
push
nop
andl
mov
jno
xchg
aad
es
test
lods
mov
mov
insl
fadd
cmp
dec
or
jns
aam
sarl
or
or
xchg
or
movsl
push
enter
cwtl
aad
add
jp
pop
or
lret
addl
icebp
adc
in
push
das
xchg
pop
scas
sbb
push
orl
mov
cmpsb
js
fdivl
pushl
aaa
in
mov
sbb
mov
pusha
sahf
dec
mov
mov
push
sub
nop
addr16
out
andb
or
inc
int3
dec
ficomps
imul
pop
in
in
push
lea
aaa
cli
lods
cmpsb
ds
push
xor
sub
aaa
jl
xchg
bnd
mov
das
adc
cmp
lods
pop
jmp
push
and
jp
call
mov
call
mov
sbb
pop
jno
inc
rclb
loope
pop
jbe
pop
andl
mov
outsb
mov
jno
cld
int
push
add
or
pop
mov
inc
pop
lcall
into
imul
negl
xchg
dec
pop
mov
mov
ljmp
test
push
mov
ret
sbb
movsl
in
sub
sbb
inc
jo
jb
lods
xor
stos
mov
loopne
push
pop
mov
xchg
sti
cmp
mov
jne
push
cmp
outsl
dec
test
xchg
stos
repnz
xlat
inc
jl
xchg
jle
clc
inc
dec
loope
xlat
dec
xor
xchg
insl
ja
out
dec
mov
adc
jp
mov
test
mov
lods
mov
or
lret
cmp
daa
shlb
inc
mov
out
lods
mov
cld
shrl
popf
or
add
rorl
jmp
jg
stos
and
js
clc
cli
fmull
xchg
cmp
and
rorb
sub
push
lahf
cmp
or
mov
iret
cld
jb
sahf
jg
aaa
cld
out
sbb
aad
sarl
les
out
stc
fisubrs
inc
sub
jmp
js
push
pop
dec
aaa
pop
mov
or
fiaddl
or
pop
jecxz
and
dec
adc
in
pop
xor
sbb
cld
fwait
sahf
insb
ljmp
testb
shll
or
mov
ret
mov
repnz
jne
add
lods
test
call
mov
in
pushf
ss
and
jle
ret
or
loopne
jb
cmp
movsl
call
push
cld
lea
push
in
adc
out
rolb
cld
rorl
or
adc
hlt
xbegin
dec
pop
pop
fists
mov
adc
lret
mov
nop
cmpsl
repnz
adc
cmpxchg
in
pop
sbb
push
scas
jge
mov
and
into
adc
loope
xchg
jg
lds
xchg
fiadds
adc
or
push
shll
out
shl
mov
pop
int3
mov
fs
in
call
hlt
data16
pop
ret
push
cmp
fists
pop
inc
xor
gs
jp
and
sub
xor
icebp
scas
xchg
fdivp
sub
aaa
fidivs
mov
mov
mov
mov
add
inc
movsl
cli
rcrb
outsb
mov
lods
dec
xor
outsl
roll
xor
lea
movntq
push
cmp
sahf
push
inc
testl
ljmp
push
rclb
cwtl
icebp
push
dec
ds
xchg
mov
inc
cmp
ret
lock
insl
mov
clc
dec
fdivs
push
and
or
dec
xor
sti
inc
popa
imul
nop
pop
push
xor
je
and
pop
lods
mov
sub
mov
sbb
adc
icebp
pop
and
rcrl
xchg
into
or
xor
sub
sbb
jbe
cmp
daa
jmp
push
mov
out
and
das
adc
mov
cld
push
je
pop
sub
pushl
cs
orl
xor
sarb
test
mov
mov
jnp
cmp
push
inc
mov
and
adc
imul
loop
cmp
insl
imul
and
mov
cltd
dec
push
mov
xchg
adc
insb
negb
loop
test
mov
ja
ljmp
lock
inc
and
stos
pop
jnp
sub
push
adcb
clc
out
nop
out
fists
cmpsb
sub
test
sub
clc
es
jecxz
aad
mov
in
sub
clc
pop
inc
enter
xchg
out
pushf
xor
roll
movb
inc
sbbl
loope
adc
xchg
lds
jg
or
dec
xchg
rolb
pushf
sub
loope
fsubrl
out
loop
cmpsl
pop
cmp
xchg
ss
call
jg
stos
clc
fs
je
fbstp
je
and
dec
add
sbb
shl
lods
icebp
cli
mov
loope
pop
mov
popf
rcrb
or
into
popl
jns
insb
fs
push
imul
test
arpl
outsl
outsl
mov
mov
clc
shl
adc
inc
in
xchg
cs
incl
inc
fwait
mov
cmp
sub
pop
sub
leave
mov
cs
dec
push
rclb
in
mov
pushf
dec
mov
jmp
outsl
addr16
lods
xchg
mov
and
ja
sub
gs
xor
sbb
imul
or
ljmp
xchg
pop
pop
call
xchg
dec
xchg
mov
mov
sbb
call
pop
cld
cmp
push
rol
jecxz
fsubrp
sub
push
push
adc
mov
dec
sahf
add
int
push
cmpsl
add
add
aas
cli
cmp
clc
scas
add
cmp
mov
mov
mov
jb
enter
and
aaa
fisubs
popa
push
shll
daa
add
or
inc
xor
lds
push
loop
in
aam
mov
jmp
push
or
pop
fidivrs
push
iret
fwait
outsl
fidivrs
jle
mov
cltd
mov
movsl
xchg
es
add
fsubl
pop
jg
call
andb
inc
push
sub
or
es
jb
loop
push
jns
cld
ja
test
test
push
push
movsb
lea
xchg
xchg
movsl
fdiv
xchg
clc
push
xchg
nop
in
int3
add
imul
adc
fdivs
push
jo
fimuls
dec
jae
pushf
jl
mov
inc
mov
in
push
aas
test
fistpl
jl
mov
mov
lar
std
outsb
daa
inc
in
scas
idiv
cmp
mov
mov
jae
sbb
sbb
ret
xchg
mov
outsl
icebp
add
es
iret
imul
decl
hlt
je
xor
out
popf
inc
ret
inc
xor
dec
jmp
lret
aad
outsb
mov
adc
shll
int
pop
cld
pop
fisubrs
incl
out
test
les
pop
sbb
cmp
stc
mov
inc
aad
add
inc
sbb
stos
ljmp
push
std
mov
sub
pop
push
mov
pop
inc
sti
sbb
mov
lahf
add
mov
loop
jno
dec
jno
push
xchg
shll
adc
adcb
pop
cmpb
stos
ficoml
shlb
bound
pusha
pcmpeqd
lea
mov
and
sarb
sbb
jbe
cmpsl
dec
cwtl
adc
ljmp
bswap
sub
jecxz
mov
test
dec
sub
fdivrp
pop
mov
pop
dec
pop
outsb
and
xchg
mul
lock
pop
cmc
jmp
or
and
ljmp
aad
jae
addr16
add
addb
lock
lea
sbb
test
sbb
mov
and
dec
icebp
sar
subl
mov
call
inc
mov
rclb
out
cmp
push
adc
loope
sbb
fildl
push
adcb
data16
sub
rcrl
in
dec
jno
sbb
icebp
decl
outsb
mov
gs
in
icebp
lock
cld
fbstp
subl
or
pop
ss
pop
mov
fsubr
insl
cli
xor
test
xor
xchg
mov
or
movsb
or
pop
push
hlt
pushl
jle
sahf
xor
ja
das
std
dec
push
mov
jbe
insb
addl
dec
ffreep
lods
test
ss
mov
dec
xchg
ret
cmp
mov
icebp
aad
push
inc
push
sarb
stos
sbb
lahf
pop
cli
push
xchg
daa
adc
dec
pop
pop
in
xchg
lock
cmpl
mull
call
adc
test
in
iret
or
mov
push
andb
test
push
test
xor
cs
inc
jns
mov
enter
outsb
cmp
cmp
mov
cwtl
jne
or
mov
stos
cmp
jo
push
xlat
outsl
push
adc
popf
cmp
or
icebp
dec
mov
or
pop
add
in
jl
lcall
dec
aad
popa
push
sub
mov
int
icebp
je
mov
jnp
xchg
sti
aaa
sbb
cmp
es
nop
int3
rcll
pushl
sbb
je
lret
xchg
and
das
fs
push
sti
ret
jbe
int3
adc
or
mov
lods
ja
mov
fnsave
dec
push
inc
mov
fucomip
mov
mov
sub
push
decl
fisubrl
loop
ret
popf
pushf
stos
jb
and
or
popf
mov
inc
xlat
je
shrb
add
adcb
xchg
jecxz
out
inc
xchg
sbb
aad
xlat
cld
lods
or
pop
sbb
push
adc
in
mov
xchg
loope
mov
cmp
push
in
ja
adc
and
test
mov
inc
xchg
or
xchg
pop
icebp
incl
dec
scas
sbb
xchg
mov
daa
xor
ret
ja
sti
mov
scas
xorl
xor
je
inc
lahf
sbb
arpl
push
add
sub
add
leave
push
dec
sub
inc
jl
mov
loope
inc
in
orl
mov
adc
loopne
and
cmp
je
popa
push
les
xor
sbb
je
out
sub
adc
sahf
pop
ud0
aad
int3
ljmp
adc
xchg
or
xor
enter
loop
mov
stc
xchg
mov
aaa
lock
pushl
fbstp
and
dec
pop
test
pop
sarb
dec
mov
bound
pop
nop
push
mov
or
lret
cmp
sahf
dec
leave
jb
sbbb
pop
fs
scas
mov
aaa
jne
inc
test
das
mov
mov
inc
cltd
add
inc
mov
add
lar
ds
arpl
sub
and
lods
fistps
push
and
in
dec
adc
clc
cbtw
imul
int3
js
inc
mov
push
add
loope
inc
inc
neg
add
and
xlat
aam
add
jmp
mov
adc
imul
cmc
fs
add
dec
repz
fimull
int3
xchg
cmp
insb
jecxz
imull
lock
fbstp
rorl
cmc
jmp
mov
xor
inc
scas
fldl
jg
ss
icebp
es
nop
arpl
in
push
sub
rorb
in
test
or
pop
jbe
test
mov
bound
sbb
dec
pop
movsl
or
sub
push
test
dec
cwtl
mov
cli
es
jae
out
mov
loop
cmpsb
subb
jg
pop
inc
ret
sbb
pushf
push
jne
push
stos
loopne
mov
add
loope
jbe
xchg
push
repnz
fcoms
sub
shll
mov
add
add
add
insl
or
ja
ret
push
in
jno
and
ss
das
xchg
xor
jo
popf
in
mov
jl
mov
jno
loopne
push
aad
push
jg
ret
cmc
addb
fstps
lock
cmp
fsts
push
testl
xor
xchg
clc
ret
jb
dec
xchg
gs
mov
test
movsl
cmp
pop
and
jecxz
jg
jmp
sti
xchg
mov
xor
pop
xor
imul
fdivl
cmc
pusha
sbb
std
loopne
push
ja
mov
loopne
aaa
nop
fdivs
outsb
xchg
es
xchg
fisubrs
fsubl
int
aaa
inc
sbb
mov
jmp
je
das
add
or
aaa
push
insl
push
sbb
mov
or
mov
dec
mov
fstpt
dec
pop
fdivr
ljmp
push
adc
lahf
xor
mov
sub
dec
shlb
aaa
rcll
loopne
sub
xor
push
fs
cs
jne
jge
jnp
cs
add
cmpsb
in
inc
pop
inc
icebp
push
push
dec
xchg
add
test
sbb
loope
scas
data16
xor
mov
inc
push
sbb
xchg
inc
dec
lret
mov
mov
test
xchg
mov
mov
sub
imul
sbb
xor
dec
mov
xchg
sub
pop
cwtl
inc
jl
scas
mov
sub
mov
jle
adc
add
shlb
test
lods
lret
xchg
int3
inc
xor
in
push
xchg
imul
jg
bnd
sub
je
in
push
jp
pop
mov
and
and
fists
push
cld
in
push
sub
scas
negb
sub
daa
mov
jl
sub
xchg
inc
mov
jo
jle
push
dec
mov
call
adcb
sbb
mov
fwait
clc
mov
fstp
push
rcrb
repnz
inc
cmp
jo
pusha
inc
or
and
inc
les
jle
xor
leave
imul
inc
aas
icebp
aaa
adc
inc
jge
popa
inc
adc
pop
mov
mov
out
dec
mov
mov
sub
mov
pop
rorb
sarl
sub
pop
mov
adc
js
lock
jg
push
push
mov
andb
sub
pop
fs
and
jns
adc
test
test
xor
mov
mov
add
dec
push
push
iret
inc
adc
insl
pop
push
fcoms
mov
lea
mov
ss
mov
xchg
es
out
or
lea
mov
xor
jecxz
xchg
inc
xor
dec
cld
push
mov
jl
ret
mov
push
sbb
enter
test
jmp
add
push
test
leave
sbb
cmc
mov
shl
sub
adc
adc
lahf
and
shlb
inc
push
jbe
aam
mov
jbe
adc
cld
imul
clc
mov
pop
fcomps
loopne
inc
faddp
push
inc
dec
lock
rorb
bound
cwtl
adc
rcl
int
loope
adc
aaa
shll
inc
push
test
out
dec
test
ljmp
jno
and
xchg
push
es
add
loop
inc
sub
gs
sub
add
enter
dec
jbe
mov
scas
adc
dec
jp
fldenv
sti
add
add
sbb
mov
outsl
add
jle
adcb
sub
sbb
and
add
aad
loopne
mov
scas
lea
mov
lods
lock
les
jmp
cmc
cmp
add
jne
adc
lret
pop
rcl
js
mov
dec
sbbl
scas
loopne
ss
xchg
mov
mov
push
sbb
xor
sbb
sahf
cmp
lds
or
lock
push
insb
fistl
mov
ja
add
daa
cmpsb
test
fcmovne
cmp
inc
inc
repz
insl
inc
hlt
aad
jo
dec
cmc
push
mov
aaa
ljmp
test
clc
dec
mov
pop
or
mov
pusha
in
lods
jmp
adcl
sbb
pusha
outsb
pop
mov
das
sub
mov
ror
lock
or
hlt
clc
and
pop
adc
push
stos
movb
pop
neg
inc
and
stos
jae
pushf
jl
mov
int3
xchg
ret
je
dec
jnp
xchg
sbb
ds
fwait
push
adc
jg
insl
cmp
outsb
lods
gs
lock
adcl
push
xor
test
jp
dec
pop
movsl
movd
leave
jne
cmpsb
fimull
xchg
mov
sub
pop
repz
sub
and
and
mov
xlat
push
lret
xchg
daa
xchg
xlat
jbe
jmp
xchg
mov
xchg
inc
pusha
jbe
cmpsb
push
ret
dec
outsl
jle
xor
sub
mov
fiaddl
lods
sbb
jl
sar
mov
mov
lea
pop
ljmp
mov
lahf
adc
lods
jne
imul
jb
xchg
cwtl
test
cld
push
mov
mov
xchg
aam
push
fidivl
int
and
pop
stos
insl
loope
sub
lahf
nop
fdivr
les
insl
lds
ror
sbb
jg
neg
and
push
mov
js
decb
or
mov
sbb
scas
orb
inc
sub
inc
cmp
ss
aad
fldt
cmp
or
mov
and
rorb
adc
aam
xor
shld
clc
das
insb
mov
push
iret
mov
mov
add
fldt
mov
jbe
imul
shrb
mov
inc
fwait
and
mov
xor
and
fsubr
es
add
sbb
sbb
test
int3
pop
and
inc
mov
jp
mov
scas
mov
adc
or
out
add
movsl
mov
jg
dec
jp
andb
ret
mov
or
xchg
mov
je
inc
shrl
std
lea
mov
mov
in
fiaddl
mov
fimull
jo
jae
xchg
rorb
xchg
mov
sti
incl
pusha
adc
xchg
pop
dec
sbb
push
fadd
mov
jge
inc
std
incl
es
loope
sbb
push
aaa
sub
fcomi
mov
jecxz
adc
inc
mov
mov
xchg
sub
mov
repnz
xchg
pop
jg
test
stos
pushf
push
leave
cmp
xchg
mov
inc
shll
cmp
jg
jle
sti
popa
mov
mov
adc
in
xor
add
sub
sub
movsl
push
shlb
dec
mov
out
daa
push
fcomip
push
clc
lahf
popa
addl
adc
mov
cmp
loope
inc
sub
inc
jle
xor
mov
lock
out
sub
adc
dec
outsl
hlt
jg
or
popf
mov
loope
jae
cmp
inc
cwtl
pushl
pop
add
mov
cmp
sub
fdivrp
filds
mov
orl
test
or
fistl
or
cs
mov
arpl
decb
fbld
mov
mov
sbb
xchg
das
fdiv
pop
sbb
les
imul
shll
add
push
pushl
addr16
std
mov
or
adc
fwait
dec
cmp
clc
mov
or
xor
mov
ljmp
call
lock
sbb
xchg
es
mov
cwtl
inc
bound
fwait
jecxz
sbb
sub
cs
loope
and
iret
lret
xchg
push
cli
inc
mov
movsl
mov
pop
shrl
mov
insl
arpl
fadd
in
dec
in
or
push
mov
adc
sbb
leave
cmpsl
mov
mov
fildll
mov
jne
or
xor
pop
or
adc
test
mov
movsb
xchg
fistpll
popa
subl
xchg
push
add
inc
pop
in
cmpsb
lcall
pop
xchg
mov
xchg
or
imull
push
jo
xchg
push
out
aad
addr16
loope
pop
mov
movsb
xchg
outsl
inc
test
sbb
into
loopne
mov
shrl
xchg
mov
inc
jecxz
sbb
pop
fbstp
pop
les
adc
or
xor
xorb
ja
inc
loope
or
jnp
enter
jbe
mov
outsl
inc
insl
imul
mov
sbb
inc
mov
xlat
or
ret
pop
nop
push
xchg
movsl
pop
jle
sbb
mov
adc
and
arpl
mov
sbb
pop
outsl
adc
dec
imul
out
outsb
add
aad
or
and
pop
fadds
dec
and
inc
insb
int
aas
mov
sbb
das
and
fisubs
ds
mov
cli
movsl
cltd
cld
hlt
pop
out
ffree
addb
cmp
imul
rclb
fimuls
and
cwtl
aaa
dec
dec
cmpsb
clc
mov
cwtl
sahf
adc
or
pop
mov
push
mov
jl
cwtl
out
filds
fsubrl
push
aam
dec
test
mov
stc
push
ljmp
outsb
mov
add
mov
jne
sub
movsb
out
jl
mov
pusha
push
out
cwtl
adc
lcall
xor
mov
mov
arpl
inc
pushl
test
outsl
pop
sti
push
in
add
mov
mov
pop
mov
or
lods
aas
cmp
rcll
mov
jg
jbe
pop
cwtl
xchg
andl
popa
sti
adc
or
add
je
cli
outsl
js
inc
dec
sbb
dec
lds
mov
test
push
fldt
pop
fnstcw
scas
int3
pop
cld
cmpsl
cwtl
and
loope
sub
hlt
std
lahf
cli
sbb
inc
xor
mov
cmp
addr16
ljmp
loopne
jns
jmp
adcb
mov
ljmp
arpl
xchg
sbb
xchg
adc
dec
sbb
jge
add
outsb
adc
add
sub
fisttps
xchg
adcl
jnp
pop
movsl
mov
jae
dec
dec
xor
notb
xor
dec
sbb
stos
in
repnz
jns
jmp
add
pushf
mov
adc
sbb
jnp
cmpsb
shlb
mov
cs
mov
inc
ret
subb
pushf
add
inc
dec
arpl
aam
adcb
jae
pop
xorl
into
int3
push
and
jae
lea
mov
cmp
cmp
fbstp
dec
push
lret
pop
mov
int
cwtl
cld
call
or
loopne
sarb
cmp
cmp
push
mov
repz
fnsave
add
loop
lods
adc
test
push
mov
push
add
pop
or
pop
jp
xor
sti
sub
scas
dec
mov
jecxz
lods
xchg
aam
cmpsl
mov
call
or
mov
mov
mov
sahf
jg
sbb
sbb
sahf
jno
int
cmp
sbb
jno
mov
int
dec
cltd
bound
ljmp
lds
aas
xchg
pushf
adc
imul
push
shlb
add
and
adc
mov
test
pop
inc
icebp
aad
adc
inc
push
push
push
push
mov
push
add
fistps
inc
decl
adc
xorb
ds
mov
loopne
inc
test
mov
fiadds
mov
test
sub
clc
mov
push
aaa
jnp
jns
sbb
gs
test
and
jne
or
pushl
mov
sti
push
enter
jl
mov
cmpsb
push
sti
push
int3
sbb
aaa
pop
add
cld
and
das
sub
fdiv
sbb
inc
loope
sub
cmc
addr16
mov
loope
pop
fcoms
push
testb
or
mov
cmc
outsl
sub
mov
mov
push
cmp
insb
or
push
arpl
sbb
jmp
or
fldt
repz
push
sarb
int3
mov
and
ret
out
das
inc
fs
mov
loopne
mov
xor
or
fs
or
or
xorb
xchg
movsl
cmp
xchg
into
mov
sbb
xor
dec
shrb
ret
xorl
dec
imul
cmpb
push
push
xchg
lret
andl
add
jmp
mov
inc
mov
adc
mov
xchg
xchg
sar
test
push
push
pop
xchg
aas
push
or
es
fsubp
aaa
xor
pop
lret
sub
dec
dec
gs
pushl
ja
xor
mov
sbb
loop
movsl
imul
nop
and
jecxz
stos
pop
popf
sbb
imul
gs
jge
push
mov
inc
xchg
dec
dec
mov
cli
and
mov
daa
adcb
sbb
arpl
xchg
add
add
scas
sub
mov
aas
add
add
inc
stos
cwtl
sub
pushf
inc
loopne
jmp
pop
or
or
bound
outsl
jp
out
push
sbb
mov
jge
ffreep
sbb
movsb
inc
fwait
lods
mov
ret
lock
or
dec
mov
clc
pusha
inc
roll
sub
lods
inc
mov
add
xchg
fldcw
lods
outsl
push
js
ja
mov
aad
add
cmp
loope
xor
clc
inc
mov
xorl
mov
inc
xor
xchg
sti
fldt
jl
inc
orb
test
push
push
int3
hlt
mov
fwait
dec
jo
lahf
dec
sub
sbbl
inc
sbb
mov
inc
push
dec
int
jle
and
inc
pop
loopne
dec
mov
orb
xchg
adc
mull
out
clc
cli
or
dec
pop
imul
mov
dec
and
sbb
adc
mov
sbb
lret
ud0
loop
sbb
xchg
andl
pushf
fwait
jmp
clc
in
push
pop
cmpsb
movl
in
mov
cmc
popf
or
sub
pop
repnz
pusha
mov
les
lock
jle
daa
xchg
ljmp
cld
movsb
push
cmp
sub
jno
stos
mov
cmp
faddp
push
enter
mov
xor
sbb
inc
and
add
sub
jg
or
dec
jl
inc
mov
mov
fs
into
inc
test
push
notrack
adc
add
aaa
pop
jo
lcall
mov
sbb
push
std
and
mov
jnp
sbb
daa
clc
adc
std
xchg
call
clc
dec
xorl
xor
aaa
xor
mov
sub
cld
or
cwtl
jge
pop
clc
xchg
push
dec
push
jno
sub
dec
fnsave
icebp
push
stc
inc
cmp
dec
lds
inc
sbbb
jbe
outsl
icebp
and
jae
push
adc
jl
daa
and
lret
or
sub
inc
mov
outsl
bswap
xor
outsl
rcll
add
lods
xor
gs
cmp
arpl
push
adc
lock
aas
ficompl
push
mov
adc
dec
repz
iret
jo
mov
aaa
cmp
pop
cltd
fpatan
add
mov
pop
mov
cmc
or
pop
push
adc
stos
inc
pop
xor
pop
testb
outsl
push
mov
adcl
cs
xor
ds
cmc
xorb
dec
mov
movsl
mov
ja
decb
lahf
jno
mov
mov
xor
xor
xchg
lret
loop
lock
or
sbb
push
loopne
popf
mov
mov
pop
test
push
lods
in
push
cli
jae
and
pop
inc
in
fdivrl
adc
fnstcw
or
iret
inc
stos
orb
movsb
jle
fadd
outsl
inc
loopne
test
sbb
dec
insl
call
sbb
jb
or
icebp
dec
sbb
mov
in
or
pushl
mov
sub
cli
test
mov
fabs
sbb
mov
and
pusha
jecxz
inc
sar
or
or
shrb
movsl
cmpl
mov
add
popf
sbb
sbb
sub
adc
mov
test
cmc
xchg
or
mov
es
sub
es
cmp
or
lcall
dec
in
cli
shlb
mov
or
aaa
rorl
dec
pop
inc
and
sti
outsl
std
add
lea
adc
add
jne
nop
lock
jg
or
pop
gs
sahf
sbb
jo
movsl
stos
jne
negl
sar
mov
and
push
nopl
jg
int3
je
mov
and
lods
pop
sub
stc
mov
cld
in
incl
ss
stos
pop
and
push
cmc
dec
push
dec
lock
mov
imul
clc
je
xor
xchg
inc
cld
add
into
outsl
pop
stos
daa
out
sub
lret
rcl
out
dec
and
out
and
dec
mov
or
sub
loopne
xlat
add
jmp
xor
mov
insl
stos
divb
int
pop
call
clc
dec
mov
mov
lods
imul
mov
push
popf
or
ret
mov
cmp
add
call
mov
mov
or
ss
lods
mov
mov
stos
or
xor
test
and
inc
add
xorb
fldenv
mov
aam
lahf
ja
repnz
add
mov
loop
ret
push
fxch
outsl
enter
incl
jo
adc
ficompl
pop
lcall
aas
lds
add
fstpt
cmpsb
xor
loope
je
into
or
icebp
xor
xchg
xchg
loopne
fcoms
stc
inc
lea
adc
mov
mov
mov
adc
or
orb
ja
fucomi
xor
sbb
packsswb
leave
jno
cli
or
push
aaa
push
les
mov
xchg
mov
jle
jl
out
push
pop
lock
test
hlt
in
and
lods
adc
in
lods
xor
dec
sub
sti
mov
lret
pshufw
jne
lahf
cmpsb
mov
mov
test
xchg
pusha
push
mov
mov
push
or
hlt
ljmp
pop
xchg
fldt
aad
mov
sbb
gs
pop
aad
push
xchg
shl
push
in
ret
sbb
pop
sub
or
pop
out
mov
pop
imul
inc
sbb
shlb
std
or
pop
xor
add
nop
adc
jecxz
mov
dec
mov
cmp
mov
dec
and
inc
insb
sbb
or
lcall
adc
mov
sbb
pop
xor
outsb
inc
in
or
jns
jb
out
inc
push
loope
ljmp
mov
jge
mov
insl
adc
nop
add
outsl
icebp
in
mov
mov
lods
rclb
sub
sbb
cmp
inc
push
pop
mov
and
iret
mov
dec
mov
das
pop
lock
sbb
in
sub
outsl
mov
lret
insl
pop
add
insl
push
adcb
outsb
hlt
and
shl
out
jge
xor
push
stos
rorl
lods
stc
and
negb
mov
push
jnp
lret
lea
lret
mov
ja
movsb
mov
repnz
mov
or
or
xchg
sbb
imul
call
ljmp
ror
xor
xchg
movl
pushl
les
inc
xor
inc
push
cmpsb
xchg
push
or
ljmp
mov
xchg
xchg
jge
incb
jb
call
xor
inc
lcall
shll
mov
push
loop
dec
mov
jno
adc
push
add
mov
insb
push
lock
sbb
mov
or
dec
push
mov
shrb
movsl
outsl
jb
pushf
popf
cmp
stc
or
mov
mov
xchg
add
aaa
fidivs
cmp
lret
pop
std
out
mov
mov
je
add
add
pcmpeqb
sbb
inc
push
mov
sar
adc
ss
mov
aam
mov
sti
fbstp
rorb
pop
jb
push
out
fisttps
icebp
addl
stc
or
inc
mov
sub
inc
xchg
dec
inc
stos
sub
mov
xor
mov
pushl
push
mov
aas
into
mov
xchg
push
rcr
inc
add
shrb
sbb
in
push
lahf
clc
cmp
jle
je
xor
add
insl
lea
mov
or
cmpsb
loop
pop
sub
fcmovbe
lods
test
jo
jg
mov
inc
sti
into
or
lret
insb
dec
addr16
or
mov
rorl
mov
pop
fadds
or
push
adc
popa
aas
add
and
fisubrs
cmpsb
nop
inc
movsl
cltd
dec
dec
inc
mov
push
lret
mov
sub
mov
daa
add
mov
jno
addl
and
adc
and
add
les
sbb
and
pop
sub
xorl
xorl
fcmovnu
lock
mov
push
add
push
xor
adc
pop
sahf
or
jg
mov
movsl
sbb
add
movsb
dec
sbb
jne
jno
inc
insl
cmp
xchg
xchg
dec
ljmp
mov
ja
mov
push
iret
jle
and
xor
fcoms
cmp
loope
mov
push
sub
dec
cmp
jle
imul
movsl
inc
in
adc
push
pop
stos
dec
shlb
movsl
xor
mov
jp
mov
sbb
pop
je
popa
and
clc
push
stos
dec
loopne
and
jae
popf
aaa
js
push
xchg
cli
das
xor
fisttps
shlb
mov
or
scas
enter
cmp
push
pop
and
jl
push
dec
fwait
mov
sahf
mov
rorb
aaa
loopne
add
xchg
fnsave
mov
repz
and
sahf
pop
dec
mov
cmp
sbb
mov
addb
orl
mov
out
add
ss
pop
add
jge
inc
jmp
jecxz
fistpll
xchg
pop
add
adc
shr
fwait
adcl
mov
int
push
test
insb
adc
push
imul
pop
lock
mov
mov
jb
nopl
aam
fistps
inc
push
mov
je
sbb
mov
sbb
pop
test
test
icebp
in
lds
ss
outsl
jmp
push
or
out
jno
popa
test
push
dec
adc
icebp
call
cmpb
xchg
mov
cmp
xor
cmp
pop
shrb
push
jmp
repnz
sahf
loope
out
push
icebp
insl
lahf
js
int3
mov
into
aam
add
inc
scas
inc
pop
jg
filds
xor
sub
bound
pop
clc
fnstsw
xor
fs
mov
add
in
add
push
sbb
clc
jp
dec
and
or
psubsw
jp
jmp
mov
xorl
outsl
mov
adc
xchg
mov
xor
fst
das
in
mov
sti
shl
movsl
shll
cmpsb
adc
sbb
and
adc
push
add
test
xchg
clc
imul
stos
cwtl
loopne
adc
jle
out
imul
inc
dec
ds
ss
jo
orl
pop
push
cltd
imul
cmp
andb
dec
push
sub
add
insl
pusha
test
popa
pop
mov
ljmp
pusha
imul
jl
push
bound
orl
push
jno
aas
jmp
cs
mov
fisttpll
push
stos
xor
dec
aas
push
jge
jg
pop
aad
and
decb
repnz
lea
ljmp
loopne
dec
xchg
daa
sbb
outsl
pop
sbb
in
insl
andl
outsb
lea
dec
or
clc
mov
xor
jo
xor
mov
add
rcrb
nop
or
mov
in
mov
add
push
aam
add
pop
cmpsb
mov
push
sahf
jmp
loopne
mov
mov
test
loopne
push
and
jnp
xor
outsb
mov
movsb
and
int
xchg
loope
pop
dec
mov
adc
adc
push
test
and
shl
xchg
mov
fstpl
call
adc
in
outsl
clc
sbb
sub
inc
ljmp
pop
mov
push
fldl
push
popf
inc
andb
lea
and
out
mov
mov
jp
pop
lock
clc
testl
aam
shlb
xchg
push
mov
in
dec
fwait
out
outsl
jb
mov
lock
adc
jo
out
push
push
fwait
adc
mov
icebp
aaa
sahf
rorb
and
mov
jnp
mov
cmp
loopne
mov
add
repz
das
aam
jnp
push
push
in
into
add
das
pop
fisubl
rorl
jo
inc
cli
xchg
mov
test
into
add
test
pop
jmp
jbe
xchg
in
stos
push
pushf
mov
sarl
stos
mov
xor
fidivrs
jnp
mov
xchg
or
or
aam
jnp
js
loope
cld
sbb
fwait
mov
or
mov
jae
adc
or
mov
sti
jle
sub
clc
inc
lcall
or
loopne
aas
adc
jmp
subl
dec
dec
cmp
orb
mov
inc
pop
push
adc
mov
and
adc
push
jo
jne
repnz
cld
das
or
aas
inc
imul
jl
lcall
hlt
pop
sbb
dec
or
adc
xchg
fsubl
dec
push
mov
pop
adc
push
mov
and
mov
cmp
femms
xor
mov
fsts
jns
test
dec
and
dec
dec
push
out
fists
andl
test
mov
cmp
cmp
or
or
pop
mov
mov
and
add
dec
inc
mov
cmpl
fdivrp
dec
fimull
or
or
pop
xor
sti
bound
cmc
mov
dec
fistps
cmp
xchg
pop
andb
mov
jmp
test
xor
in
mov
mov
sti
xor
jbe
dec
mov
add
or
lret
imul
data16
adc
pop
outsl
mov
test
cmp
jmp
sbb
pop
add
test
mov
dec
xchg
arpl
pop
xchg
mov
mov
sub
jae
repnz
out
cli
shl
lods
pop
push
movsb
mov
lea
xchg
add
in
push
sti
mov
leave
and
test
jecxz
or
icebp
dec
outsb
in
rorl
sub
dec
test
std
pop
dec
adc
shrb
js
and
aaa
cmc
ret
jb
aam
xor
xchg
adc
loop
adc
inc
sbb
scas
sbb
jns
mov
std
fwait
andb
out
xchg
sbb
or
ficomps
pop
add
mov
adc
pop
sbb
sbb
push
dec
push
sbb
inc
outsl
inc
push
imull
xlat
divb
arpl
jp
push
cmp
das
sub
ja
cvtpi2ps
inc
neg
and
xchg
and
xor
aaa
jle
adc
rol
or
lret
stos
inc
fs
add
and
cld
inc
leave
dec
sbb
roll
fdivrp
cs
lahf
dec
inc
cmp
mov
dec
dec
mov
ljmp
xchg
cmpsb
pop
call
sbb
lcall
push
in
cld
push
cs
xchg
lea
jmp
aas
sbb
inc
or
pop
push
aad
or
cmp
sbb
mov
cwtl
insb
popa
fdivrs
add
fs
pop
and
or
mov
cwtl
cmp
das
fsubrl
je
divb
sti
pop
clc
sti
cmp
adc
dec
xchg
lods
push
xor
lods
lret
sub
aaa
add
stos
mov
mov
loop
out
decl
lods
in
test
mov
inc
lods
adc
cmpl
jecxz
dec
inc
mov
into
xchg
ljmp
xor
sarb
rcll
adc
decl
outsl
rolb
sahf
inc
lods
lods
inc
mov
adc
mov
jbe
out
stc
insb
push
les
leave
daa
cld
or
call
aam
cmc
push
sub
cmp
sarb
pop
push
sub
or
mov
lock
mov
sub
mov
fsubrs
xor
pop
fistpll
dec
ret
mov
adc
iret
jp
xor
or
pop
or
pop
and
mov
ficompl
pop
lds
pop
adc
or
jle
fisttpll
cmc
idivb
negl
scas
mov
addl
cmp
push
xchg
popf
jp
mov
testb
fwait
inc
test
call
outsb
mov
je
int
jns
decl
inc
dec
add
pop
fisubl
rcll
cmp
xor
loope
jne
dec
call
fisubrs
sbbb
gs
xlat
test
lahf
add
in
inc
std
add
mov
mov
sub
and
and
mov
xchg
fstpl
nop
in
imul
and
scas
jmp
mov
adc
sub
arpl
sub
mov
xchg
jle
jp
jns
mov
sub
insb
sub
testb
jecxz
clc
push
popa
movsl
dec
jle
pop
dec
add
pop
leave
or
pop
inc
ret
mov
lcall
pop
cmp
scas
sbb
mov
lods
adc
hlt
loope
push
jecxz
lea
call
popf
pop
movsl
or
ret
mov
popa
xchg
pop
stos
add
in
xor
fisubs
mov
fadds
xchg
pushf
inc
nop
xchg
pushf
add
jmp
xchg
dec
and
lcall
inc
sti
pop
fucomp
leave
jmp
sub
pop
xchg
dec
fsubl
mov
movsb
loop
mov
movsl
push
in
cmp
sti
rcl
fnstsw
jmp
pop
cmpsb
dec
dec
aam
xor
xchg
cld
mov
xchg
sti
mov
xor
inc
cvtps2pd
ds
jmp
mov
jnp
or
lret
sbb
xor
inc
push
add
mov
adc
pop
sahf
jae
lret
cmp
mov
push
in
outsl
imul
sbb
jl
int
imul
or
cmc
push
cmpb
xchg
aas
cmp
jne
cmpsl
pop
mov
mov
pusha
movsl
outsl
adcl
ja
jno
sbb
jg
mov
mov
jle
mov
push
in
cltd
call
rorl
out
out
aad
jmp
xorb
insb
sub
dec
xor
inc
cmpsb
xor
pop
mov
mov
mov
dec
pop
and
je
push
pop
movsl
push
lret
fstl
sub
jb
outsb
inc
pushf
cmp
scas
mov
imul
mov
lahf
jns
lahf
jbe
in
dec
sub
int
mov
icebp
mov
les
out
out
mov
fimull
jl
ljmp
sbb
loopne
loop
sbb
pop
lcall
mov
push
sub
div
fldcw
repnz
xor
jo
adc
mov
push
mov
or
fcoms
movsl
imul
sub
jo
rcrl
outsl
mov
sbb
cld
xor
inc
sbb
push
pop
sbb
ljmp
adc
add
iret
ss
and
aas
adc
cwtl
mov
stos
adc
mov
test
xchg
sar
mov
stc
aaa
jecxz
mov
push
decb
inc
loop
push
mov
mov
push
ja
adc
pop
xchg
test
hlt
aas
out
dec
loopne
add
cwtl
xchg
mov
mov
es
inc
movsb
fcoml
testl
loopne
push
and
repz
inc
ljmp
cmp
call
test
cmc
jne
fwait
aas
out
cmp
icebp
mov
inc
sub
lds
mov
arpl
cwtl
push
inc
insl
icebp
xchg
and
sub
movsl
mov
aas
xorb
xor
into
in
lea
test
dec
adc
mov
ret
pop
mov
xchg
lds
pop
add
mov
out
faddl
sti
xlat
test
pop
push
loop
or
dec
lock
push
movsl
mov
or
xor
xlat
xchg
pusha
mov
xchg
out
in
mov
inc
mov
rclb
mov
pop
sti
outsl
lcall
call
ret
repz
pusha
pushf
sub
mov
das
or
push
add
clc
sbb
das
mov
scas
jb
loopne
sbb
dec
adc
mov
pop
or
in
gs
mov
fwait
add
clc
nop
xchg
in
in
in
test
mov
aam
and
mov
ja
add
ret
movsl
lods
and
mull
jecxz
insb
xchg
push
and
mov
xchg
or
mov
sbb
fadds
cmp
lret
clc
mov
enter
mov
sbb
cmpsl
pop
das
xchg
nop
pop
or
in
mov
test
inc
out
dec
cmpsb
xchg
dec
ffree
pushl
out
iret
sti
aam
or
pop
mov
or
or
movsb
sub
cltd
mov
push
repz
ja
jbe
jns
stos
lea
test
fdivrs
jno
xor
cmp
sub
divb
test
adc
neg
stc
and
out
xchg
sarb
cmp
int3
add
add
mov
cmp
inc
adc
imul
outsb
lods
stos
aad
xchg
sub
xchg
jo
insl
incl
inc
dec
stc
test
xor
pop
fs
mov
fstps
mov
sbb
fwait
bound
outsl
aas
and
cmpsb
movsl
outsl
out
stos
std
mov
jge
test
sahf
jg
iret
aad
pusha
xorb
or
mov
lcall
cld
das
iret
jp
xor
mov
push
repnz
es
inc
clc
add
sub
nop
inc
dec
out
popa
mov
pop
shll
incl
jecxz
and
add
mov
je
or
jo
and
mov
ret
ret
stos
bound
jmp
push
mov
test
sbb
mov
sbb
outsl
cltd
cmp
inc
xor
xor
or
inc
sub
add
xchg
das
cmp
dec
push
mov
nop
xor
loope
mov
fcompl
pop
mov
inc
jno
sub
imul
push
lds
sbb
ss
out
scas
ljmp
loope
sbbb
and
fcmovne
push
adc
and
les
adc
inc
imulb
fstl
ljmp
pop
mov
lods
xchg
gs
dec
addr16
aad
mov
mov
stos
cmp
aam
adc
scas
mov
push
adc
sub
jl
and
out
push
mov
pop
adc
cmp
int
ret
test
arpl
sbb
mov
test
test
push
dec
divb
pop
mov
inc
shlb
testb
dec
das
cltd
push
cmp
cld
add
cltd
push
jle,pt
pop
inc
fwait
mov
inc
mov
xchg
ds
loopne
mov
sbb
ljmp
adc
adc
xor
push
and
scas
jp
mov
sub
pusha
call
push
daa
or
ret
inc
mov
data16
inc
sub
cmp
fwait
adc
jg
mov
lahf
inc
jbe
aad
pushf
pop
pop
mov
imul
mov
jle
sub
dec
mov
jg
loope
sahf
adc
pop
sarl
cmp
cltd
fldenv
mov
fildl
push
ret
xor
std
sub
outsb
adc
or
dec
mov
mov
stos
xchg
dec
test
rclb
sub
das
mov
in
icebp
and
pop
sub
outsl
cmc
add
jmp
push
clc
jb
ss
rol
sub
in
adc
cmp
add
aam
jae
jo
adc
sbb
aad
push
lret
pop
jg
adc
mov
scas
fimuls
lock
mov
ret
inc
push
pop
jns
mov
out
pop
adc
rol
out
shrb
mov
das
push
cld
pop
pop
push
leave
mov
sub
mov
mov
in
ret
sub
sub
lea
adc
jge
aad
mov
mov
aas
inc
les
insl
inc
add
pop
pushf
dec
push
push
mov
inc
push
jge
mov
enter
sbb
call
test
mov
je
push
not
testb
mov
loopne
add
jecxz
js
xchg
cmc
das
insb
pop
jecxz
jb
lret
xor
jnp
pop
rolb
aaa
xlat
sbb
je
xchg
dec
jp
or
fistpll
mov
scas
inc
lods
adc
mov
repnz
xchg
mov
notl
cmp
xor
mov
push
cmp
sub
sar
jp
dec
leave
add
test
push
cmc
dec
scas
lret
push
cld
outsl
fistps
orb
jge
in
jge
sbb
data16
adc
adc
negb
push
shr
std
jg
ljmp
xor
daa
popa
push
jns
cltd
in
and
stos
adc
mov
popf
inc
jge
sbb
jge
inc
or
fdivs
xor
adc
mov
icebp
jl
mov
jno
lea
inc
and
or
shlb
push
jne
add
test
jg
mov
subb
push
rep
cli
testb
out
shlb
mov
subb
and
hlt
adc
mov
cmc
das
add
sub
jp
addr16
mov
test
shll
fisttps
or
sbb
sbb
fwait
decb
test
enter
mov
test
sbb
out
mov
push
pop
xor
cltd
aad
ret
lock
add
pop
enter
inc
adc
movsl
push
jmp
out
sti
cmp
nop
jb
out
push
mov
je
push
insl
pop
xchg
inc
scas
mov
jo
mov
sbb
in
repz
pop
push
pop
scas
inc
jo
shrl
mov
ret
push
outsb
pop
test
or
add
dec
andl
shrb
loope
cld
push
cmp
ret
loope
aad
je
mov
enter
push
aam
fwait
cli
rclb
mov
or
jge
cld
std
adc
insl
pop
mov
out
ljmp
dec
insb
movsl
nop
or
rcrb
js
je
push
add
aas
pusha
push
sar
call
pop
xchg
sbb
bound
pop
notl
xchg
ds
push
shr
and
dec
ret
ljmp
cmpsb
inc
gs
push
sbb
xchg
adc
outsl
in
push
lock
iret
xor
mov
and
mov
mov
cmp
adc
xchg
fstpt
lea
aam
cvtps2pi
mov
cmp
jg
or
xchg
fmull
and
icebp
mov
push
mov
cltd
lcall
test
adc
incl
jo
xor
inc
jg
test
shrb
insl
lret
or
mov
addl
ret
pop
insl
push
mov
in
pop
push
aam
test
jbe
test
into
mov
lds
mov
test
mov
rorl
repnz
jne
jmp
shll
ja
add
sub
sub
pop
incl
jmp
jg
movsb
cmpsb
inc
int3
cmpsl
sub
je
pusha
mov
addb
mov
mov
mov
fisubrl
sti
js
and
vphaddwq
mov
andl
cs
push
cmpsb
je
mov
xchg
adc
xchg
add
sub
pop
shr
mov
push
mov
rol
inc
jnp
mov
jae
incl
hlt
mov
inc
cmpsb
ret
loop
jl
aam
insl
loopne
add
xchg
loopne
lock
dec
push
jle
call
pop
jne
xchg
outsl
cld
scas
mov
movsb
xchg
sub
mov
test
cld
in
movsb
or
sub
mov
insl
test
sub
xor
sub
pop
mov
enter
sbb
in
test
ffree
cli
mov
jge
aam
xchg
aam
push
test
and
inc
dec
aad
andl
pusha
into
add
int3
pop
loopne
pop
mov
add
cmpsb
jae
mov
add
loopne
cwtl
xchg
mov
jns
jle
sub
orl
sub
mov
xchg
arpl
fcomps
rcll
cmp
pop
add
sbb
aaa
mov
or
imul
jns
and
inc
add
shrl
es
xchg
jb
pop
loopne
es
mov
mov
ficoml
mov
and
les
push
or
movsb
mov
sbb
in
loopne
pop
xchg
sub
shll
mov
xchg
add
insb
dec
test
pop
sub
cmp
push
jg
ret
subl
out
pop
bound
inc
xor
jmp
jge
fldt
pop
test
aaa
mov
pop
or
jle
or
jg
loope
push
cmp
jb
mov
jp
cmp
aaa
or
add
cmc
pop
jg
push
outsb
stos
aad
adc
sbb
sub
jmp
mov
mov
push
jle
pop
fadds
cmp
lcall
dec
push
insb
or
jo
sbb
shl
pop
adc
adc
adc
inc
adc
jge
pop
in
incb
jns
lahf
and
xor
inc
xor
cs
clc
dec
outsb
push
sub
gs
je
int
ljmp
call
ret
jb
lds
loopne
cld
pop
out
mov
hlt
xor
inc
xchg
push
cmp
rolb
sub
add
mov
aam
ljmp
fs
repnz
mov
or
pop
push
adc
cmc
mov
cld
stos
mov
pop
or
stos
jg
and
dec
aas
cmp
mov
jle
xchg
enter
enter
push
push
incl
fdivp
mov
adc
jb
scas
outsb
out
jnp
sbb
fcom
dec
mov
xchg
ficomps
add
outsb
mov
jecxz
fmuls
in
push
cmp
and
jp
xchg
ss
shll
or
pushf
ljmp
sbbb
and
aas
push
push
push
ja
stos
mov
jbe
les
jecxz
cli
or
pop
pop
orl
push
jne
jo
inc
push
orl
icebp
andb
cs
mov
adc
repnz
xor
cmp
mov
add
inc
mov
dec
cmpsb
inc
int3
push
sti
incl
es
push
or
push
sub
push
dec
movsl
pop
clc
fisubrs
dec
fwait
in
fwait
popa
and
mov
pop
sub
pop
jne
bound
mov
sti
or
xorb
leave
mov
sub
aam
xchg
mov
and
mov
pop
cmc
pop
adc
sub
outsl
jge
mov
jecxz
int
bound
sub
out
inc
pop
mov
adc
outsl
xor
inc
repz
stos
push
xchg
dec
repz
jmp
jle
mov
adc
push
dec
push
pop
mov
fists
push
idiv
ffreep
pop
or
pushl
cmp
out
fisttpl
pop
mov
sbb
sub
loopne
pop
adc
imull
pop
gs
sub
xor
sarl
das
cld
aas
xlat
sbb
rclb
call
hlt
lods
subl
and
and
pushf
and
subb
jle
mov
bound
mov
mov
enter
insl
pop
in
imul
insl
outsl
clc
call
shlb
and
pop
mov
test
pop
mov
xchg
fisubrs
ficomps
push
mov
cwtl
test
dec
jl
mov
in
xor
shr
outsl
loop,pn
dec
mov
sbb
inc
add
jne
push
cld
lahf
fcom
and
jl
int3
inc
mov
in
fwait
add
les
adc
pushf
dec
sub
mov
lret
pop
jp
addr16
arpl
cmp
lea
mov
hlt
mov
cmpsb
lahf
repz
outsl
lock
ret
xchg
cmc
dec
daa
and
or
pop
mov
adcl
inc
popa
cmpsb
cs
scas
aaa
fimull
add
cmpsl
cwtl
out
lahf
aaa
or
stos
shll
mov
orb
clc
sahf
mov
stc
in
aam
mov
jle
sarb
cwtl
pop
fidivrs
xor
addr16
cmc
incl
jae
aaa
adc
sub
mov
dec
mov
into
xchg
lods
leave
lcall
aam
jns
mov
imul
fistpl
xchg
ficoml
not
mov
add
lcall
sbb
xor
sub
les
insl
pop
and
mov
inc
call
rorl
test
adc
fwait
add
std
test
add
or
shlb
pushf
test
xchg
outsb
pop
shlb
pop
xchg
push
adcl
sbb
rcll
sahf
sub
dec
lock
inc
int3
xchg
or
aam
pop
adc
sti
into
fsubl
es
ja
xorl
cmp
jne
inc
or
loope
or
mov
and
sarb
xor
test
icebp
fldcw
xchg
fildll
inc
movl
inc
aaa
jle
inc
sti
loope
nop
or
and
stos
rorb
jg
inc
fildl
adc
mov
and
test
mov
les
xchg
mov
fcmovu
and
sbb
sbb
addr16
sbb
cmpsl
xor
xchg
insl
mov
sub
mov
mov
add
es
andl
aaa
push
adc
pop
push
mov
push
test
aas
inc
adc
shll
pop
loop
imul
inc
adc
decl
in
inc
jle
mov
adc
shrb
mov
fisubs
cmp
test
loop
popf
fucomi
mov
jecxz
ror
and
scas
jg
xor
sbb
xchg
add
lahf
clc
and
mov
das
scas
stc
mov
pop
and
xchg
mov
mov
adc
ret
jle
lea
test
jp
pop
lods
push
js
loopne
rcrb
orb
push
mov
mov
jp
dec
fs
loopne
mov
loope
inc
sbb
inc
mov
fildll
mov
and
cmp
sub
fldl
add
mov
sbb
xorb
nop
loopne
or
aam
mov
jp
or
mov
lret
iret
mov
rcr
aam
ret
and
das
dec
pop
add
lock
dec
xchg
cmp
outsl
insb
cld
sbb
mov
jns
bound
xchg
mov
call
sub
fnstsw
pop
push
mov
mov
ror
sub
mov
jmp
sub
popa
jb
cli
push
sub
push
cmp
lods
fistpl
mov
int3
idiv
daa
pushf
outsb
mov
incl
pop
add
push
rcl
ljmp
sbb
shl
cmp
or
pop
cmp
sub
sbb
repnz
pop
cld
jbe
adc
mov
sbbb
sbb
test
push
fiaddl
incl
fdivs
cmp
mov
adc
mov
cmp
test
rolb
lret
jg
aam
jmp
cmp
ret
loope
enter
hlt
insl
sub
insb
add
sbb
fisttpl
mov
pop
pushf
or
ficoml
lods
ficomps
xor
jmp
cmc
test
mov
sub
xor
or
or
or
sbb
call
inc
add
inc
dec
cli
enter
mov
mov
mov
cs
fmuls
pop
int3
out
stos
test
stos
push
jo
mov
mov
jmp
cwtl
ret
aam
out
adc
rorb
fsubl
sbb
loope
sti
xchg
push
jp
lock
push
in
mov
std
inc
jge
adc
xor
pusha
xor
es
lahf
movsb
jle
out
pop
js
lods
rorl
sbb
mov
or
cltd
mov
add
sbb
push
sub
dec
daa
xchg
dec
adc
scas
call
cmp
std
popa
inc
add
fwait
mov
add
insl
pop
insl
je
push
pop
loopne
or
inc
mov
ljmp
push
cli
xor
je
xchg
mov
and
push
push
shlb
inc
pop
sbb
shlb
in
notl
xlat
adc
lret
inc
jmp
mov
lock
js
or
ja
jle
cld
jno
fwait
sub
fidivrs
cmpsb
nop
xchg
xor
scas
jae
cs
mov
xchg
cmp
push
ficoml
adc
adc
test
mov
into
outsb
shrb
jl
add
fsubrl
ss
int3
xor
das
jl
add
testb
xchg
scas
jnp
sub
sarl
jo
and
es
cmp
bound
shlb
or
addr16
sahf
sbb
pop
pop
stos
sub
push
lods
inc
lea
push
cmc
add
mov
adc
mov
dec
jl
cmp
icebp
es
insl
dec
hlt
das
mov
faddl
add
mov
les
or
sbb
cmp
sbb
loope
adc
out
mov
sub
ret
rclb
inc
es
jns
cmp
sub
ja
fwait
mov
cld
push
pop
fcomp
test
push
out
mov
inc
cltd
inc
addr16
xor
ljmp
and
pop
or
cmp
mov
sbb
cli
pop
test
pop
sti
pop
mov
arpl
mov
outsl
cmpsb
jl
ret
insl
sahf
mov
add
call
cli
sbb
dec
movsl
dec
push
leave
pop
mov
in
popa
test
push
mov
out
pop
adc
xor
adc
cmp
mov
jnp
mov
xchg
inc
jg
pop
outsl
push
mov
test
cmpsb
cmp
rclb
dec
push
push
add
lcall
insb
dec
adc
imul
dec
lock
adc
push
ret
dec
ljmp
mov
or
icebp
ror
mov
scas
jle
inc
mov
or
dec
pop
icebp
test
sbb
dec
xchg
mov
xchg
jb
push
movsl
insl
push
lcall
mov
cld
push
decb
ret
xchg
and
or
inc
cmp
icebp
lods
outsb
loope
lock
outsl
xchg
aas
in
mov
jb
rcll
mov
add
fidivrl
mov
mov
fbstp
aam
fs
sbb
add
push
jg
insb
mov
or
mov
xchg
xor
lock
nop
mov
js
cmp
or
xor
in
push
rcrl
pop
pusha
bound
or
dec
lea
mov
out
mov
arpl
fsubrs
ja
out
add
incl
mov
xchg
cli
cld
inc
jg
icebp
fistps
xor
push
gs
adc
fnstcw
out
xlat
std
xchg
fimuls
or
jne
jnp
imull
fs
out
stos
mov
call
pop
adc
mov
add
stc
aas
out
scas
and
fdivrl
xchg
scas
loope
les
hlt
mov
cmp
jmp
cmp
mov
clc
mov
sti
test
xchg
imull
mov
pop
jge
clc
mov
fistl
data16
fimull
lock
adc
jae
enter
insl
stc
pop
sbb
test
jp
inc
pop
adc
mov
dec
xchg
movl
inc
out
pop
and
add
xchg
loope
or
lock
pop
sbb
jnp
inc
mov
lea
icebp
jbe
jl
pushf
adc
add
cmp
aam
and
int
stos
test
aad
mov
dec
sub
adc
imul
in
or
aad
lahf
addr16
fldcw
int
push
add
lea
outsb
fcoml
mov
scas
or
sub
jmp
or
clc
lea
and
adc
daa
dec
cmp
mov
fbld
cmp
cltd
and
cwtl
aas
pop
dec
dec
pop
or
imul
push
popa
xchg
leave
mov
pop
mov
test
jo
rol
mov
adc
mov
hlt
add
int3
shlb
xchg
jp
dec
aaa
jne
nop
xchg
push
mov
lahf
aaa
inc
mov
test
mov
mov
adc
bound
add
das
insl
push
cld
jo
insl
mov
mov
test
mov
push
mov
clc
das
jl
test
mov
cwtl
pop
push
mov
roll
dec
mov
loopne
fmuls
inc
data16
dec
pop
mov
and
dec
jns
ret
dec
in
mov
pop
lret
sbb
or
jg
or
mov
pusha
cmp
int
inc
dec
ss
xor
in
push
mov
mov
aad
inc
xchg
xor
mov
sub
dec
incb
aam
in
inc
dec
inc
xor
push
push
sub
jge
push
aam
mov
push
icebp
cmp
loopne
and
jg
mov
push
in
rcll
cmp
es
inc
dec
pop
jmp
mov
ljmp
jp
jno
rclb
xor
test
aad
pushf
pop
je
dec
add
sub
ret
stos
lahf
xorb
test
pushl
cmc
xchg
inc
loope
movsb
loop
iret
imul
push
sbb
xor
fcomip
jne
jb
sahf
mov
mov
jle
push
lret
repz
call
jo
shlb
ljmp
cmc
push
push
sbb
push
imul
mov
inc
loopne
dec
shlb
fadds
mov
jle
pop
dec
lock
mov
xor
jo
inc
pop
lock
sbb
push
jo
rorl
adc
jns
in
add
mov
std
jmp
pop
mov
scas
into
add
rorb
dec
mov
in
shll
imul
test
mov
cld
jg
sbb
in
mov
lock
add
adc
idivb
inc
movsl
fldenv
rcr
xor
jmp
in
scas
sbb
add
mov
jmp
int3
xchg
out
dec
mov
push
xchg
cmp
fcmove
inc
jle
cmp
or
pop
jo
pop
mov
pop
ljmp
shl
vpshufhw
data16
aas
add
push
sbb
sub
mov
mov
sub
cltd
mov
mov
fdivs
push
jp
in
push
out
mov
lock
cmp
cmpl
fdecstp
sub
or
insb
pop
in
fwait
test
xchg
ud2
mov
ljmp
repz
xchg
adc
cmp
aam
dec
sbb
mov
xchg
inc
xchg
adc
pop
es
xchg
sub
shl
out
repz
mov
ret
fcompl
mov
jp
in
ljmp
loop
fcomip
mov
inc
jns
jecxz
cmp
add
aad
xchg
mov
pop
inc
movsl
inc
fistpl
mov
cmpsl
cmp
fidivrs
jecxz
mov
fcmovb
sub
ljmp
fiaddl
pop
popl
scas
outsb
mov
mov
cmp
jne
jg
sbb
sub
inc
sub
or
inc
mov
push
pop
pusha
add
dec
lahf
or
lds
xchg
xchg
xchg
fcompl
jmp
fs
rcll
xchg
popl
xor
mov
jge
jge
pusha
iret
gs
push
mov
jecxz
fnstenv
xchg
js
jo
inc
imul
pop
scas
push
and
stos
loop
add
sti
mov
dec
loope
cmc
negb
mov
loop
or
fs
lds
pop
int
cs
and
adc
arpl
xor
out
aad
pusha
cmp
pop
icebp
push
jne
imul
inc
dec
cld
and
out
sub
push
es
sub
xor
cmp
jmp
xor
ret
sub
loopne
mov
inc
icebp
jbe
inc
dec
jb
jns
dec
les
mov
rorb
and
add
pop
sub
arpl
sbb
in
cs
add
push
xor
jnp
push
add
into
mov
loopne
aad
push
movsb
cmp
jg
inc
mov
mov
jb
test
ljmp
pop
jl
mov
jecxz
out
jmp
lods
cmp
jo
pushf
mov
add
add
xor
cli
inc
inc
icebp
adc
paddb
aam
les
shlb
ljmp
ljmp
dec
lods
mov
jl
loope
pop
jl
push
lods
lods
sarb
xchg
inc
xchg
sbb
sbb
in
cmp
call
mov
mov
cmp
add
push
push
mov
push
push
js
bound
inc
adc
cwtl
dec
or
xchg
lcall
incl
mov
mov
cmp
outsl
or
lret
ss
or
stc
and
mov
lcall
out
add
xchg
pushl
or
cwtl
les
inc
mov
push
inc
sub
inc
jp
lret
ret
mov
cmp
inc
cmp
in
jbe
fistpll
inc
sub
fistpl
loopne
loop
cld
pushl
mov
movhps
in
call
pop
inc
jl
cmp
adc
loope
add
scas
ret
adc
mov
xor
dec
vmulps
push
outsl
jge
into
into
fsubrp
inc
cwtl
clc
mov
fwait
lea
pop
pop
mov
sub
sub
inc
fisttpll
fbld
mov
decb
les
cli
roll
jge
sub
addps
sub
dec
xchg
xchg
fs
mov
mov
in
mov
aad
pop
push
lret
pop
sub
adc
cld
mov
call
jne
mov
jno
insl
dec
adc
dec
popf
jecxz
mov
adc
enter
cmp
ss
add
jbe
push
je
inc
lret
fucomi
jg
push
aam
sbb
loopne
or
repz
xchg
mov
pop
adc
sub
sbb
test
divl
xchg
popf
adc
mov
sbb
dec
xchg
lods
in
adc
lds
cmp
pop
mov
shll
adc
fldenv
insb
lock
add
mov
out
xor
call
or
push
mov
lods
xor
mov
and
sbb
mov
pop
stos
mov
mov
in
mov
xor
or
shlb
mov
dec
or
lods
hlt
test
sub
mov
popf
psubsb
pop
stos
aaa
sbbl
rol
jg
adc
mov
inc
std
mov
push
rolb
fsubrl
sbb
out
mov
mov
mov
sub
xlat
push
dec
xchg
sbb
jge
scas
or
add
xchg
dec
and
and
movsb
out
mov
fimull
aaa
cs
jbe
lcall
lret
call
lret
or
imul
xchg
jb
lea
or
push
adcb
push
leave
bound
rolb
ret
jbe
jecxz,pn
cmp
call
outsl
rcll
mov
notb
add
add
cmpsb
mov
out
cltd
mov
jno
pop
clc
stc
sub
push
push
or
mov
data16
push
adc
std
mov
jbe
rorb
adcb
pop
rcr
push
js
popf
mov
jne
sub
push
decl
mov
icebp
cmc
jecxz
sub
loopne
imul
loope
aad
mov
movsl
inc
push
es
jg
or
hlt
adc
adc
mov
int
mov
jae
dec
lock
cmp
std
jecxz
mov
push
and
scas
or
fists
test
mov
mov
addb
inc
int3
xor
movb
inc
setg
lds
imulb
lods
iret
sbb
xlat
adc
aam
test
sub
mov
loopne
fwait
inc
ljmp
andb
int3
mov
jl,pn
cmp
ds
and
loope
enter
out
bound
mov
stos
jne
loop
or
sar
mov
or
addr16
les
lret
and
shl
insb
xor
std
dec
std
das
std
stc
push
and
add
adc
in
iret
or
jmp
ljmp
jns
das
cmpsb
je
sbb
ret
jl
ret
push
sub
add
in
lods
sub
imul
test
loope
mov
mov
sub
mov
xlat
and
lods
xchg
mov
leave
xchg
sti
sbb
inc
outsl
jecxz
xchg
push
icebp
negb
sbb
test
loop
mov
movsb
das
and
or
mull
dec
mov
outsl
aaa
push
test
add
mov
dec
push
dec
jecxz
bound
ret
clc
test
cld
xor
jg
rcl
pop
pushf
jl
cmc
adc
and
or
cltd
jge
mov
mov
stos
mov
movsb
aaa
pop
data16
inc
pop
test
push
mov
and
push
xor
fcomip
into
or
jno
sahf
mov
mov
push
dec
and
aas
push
mov
cli
ret
push
incl
push
mov
adc
push
ja
lock
roll
cmp
dec
mov
dec
clc
jg
popf
ret
inc
inc
mov
idivb
mov
pop
pop
sbb
mov
sbb
adc
fdivs
filds
push
dec
lret
xorl
insl
mov
mov
fmuls
inc
loope
ljmp
pop
mov
aas
sub
cwtl
mov
inc
filds
rorl
pop
inc
xchg
inc
xlat
or
out
pushf
jge
sti
mov
lock
lcall
fnstsw
ret
cmpsl
and
add
and
sbb
outsl
sub
lock
cli
roll
xor
cld
jmp
decb
dec
test
hlt
in
daa
repz
xchg
js
data16
cwtl
or
mov
sbb
loopne
sub
push
dec
inc
dec
cmc
lods
incl
mov
jmp
mov
push
xor
loop
mov
lock
jb
test
inc
push
mov
loop
fcoms
lock
clc
sbb
inc
aam
andb
dec
fiadds
jo
movsl
sbb
cmp
popf
scas
pop
mov
xchg
fwait
push
test
dec
inc
push
sbb
cmpl
or
xchg
sbb
aaa
xorb
addr16
adc
or
icebp
xor
jge
xor
dec
add
pop
or
js
jg
inc
test
cli
outsl
ljmp
rorb
popf
mov
sub
xchg
iret
or
jge
leave
aaa
outsb
outsl
cwtl
cmc
sub
movsl
add
js
jno
call
sub
pop
pushf
fdivs
adc
cld
sbb
call
rcr
lods
popa
sub
mov
out
mov
cli
pop
dec
pop
jns
add
fwait
push
push
xorb
inc
loop
mov
movl
ljmp
bound
idivb
inc
hlt
es
and
sub
test
out
jg
incl
mov
mov
inc
or
test
in
xor
mov
mov
jbe
push
add
push
getsec
sub
and
loope
subb
out
jmp
insb
push
test
out
test
stc
jo
iret
stos
mov
mov
das
in
cs
mov
cld
mov
jecxz
mov
jg
sub
mov
push
add
cmp
cwtl
pop
push
jp
shll
adcb
dec
dec
enter
insb
decl
sub
adc
and
out
pop
std
sbb
pop
push
jne
add
fadds
xor
cs
insl
jge
dec
ficoms
jp
ljmp
sub
pop
mov
pop
jb
pushf
adc
or
xchg
aad
clc
int
je
cmp
loop
dec
adc
filds
aad
cmp
lret
pushf
jecxz
sub
mov
in
or
lcall
scas
push
insb
das
adc
sub
inc
inc
cs
inc
inc
push
in
dec
sbb
dec
test
hlt
adc
mov
lock
ret
sub
lock
outsb
inc
pop
add
cmpsl
ret
push
mov
fisttps
pop
cmpsb
popf
pop
adc
push
jnp
mov
adc
jmp
scas
loope
ljmp
xor
sub
sbb
fmulp
mov
pop
bound
dec
cltd
addr16
shlb
mov
fisubrs
cmp
jg
mov
addr16
mov
or
lahf
xchg
fcomps
lcall
or
add
adc
sub
sub
out
sahf
popf
lret
shrl
adc
clc
mov
mov
jno
inc
fiadds
mov
cmp
fmuls
pop
xchg
aaa
ljmp
test
push
iret
fsubrs
shl
inc
je
adc
push
pop
or
pop
inc
nop
fsubrs
gs
xchg
ficoms
jb
jmp
and
dec
and
mov
fcmovnb
push
cmpsb
mov
adc
stc
sbb
add
inc
jne
pop
pusha
sbb
call
aad
inc
xchg
push
or
jp
or
cs
mov
push
xor
sbb
inc
mov
subb
xor
sub
adc
das
cmp
mov
sti
lock
loope
xor
mov
es
je
loopne
xor
or
ret
adc
scas
push
lock
jmp
outsb
out
jle
push
xor
inc
in
ljmp
pop
jo,pn
negb
fistpll
push
and
jmp
adc
cld
shll
push
loope
icebp
mov
pop
pop
sbb
mov
in
inc
sub
movsb
mov
or
mov
ret
in
mov
incb
outsl
add
dec
fwait
scas
lret
ret
aad
sbb
rol
xor
and
mov
pop
mov
jmp
loop
push
loopne
pop
inc
sti
push
adc
das
mov
inc
mov
les
add
ret
cmp
mov
and
nop
cmp
insb
cltd
push
and
dec
pop
jb
mov
cs
xor
lods
adc
movsb
mov
or
call
cltd
and
fs
imul
arpl
mov
outsl
sahf
icebp
std
adc
faddl
dec
std
fldt
popf
movsb
mov
dec
data16
fists
sub
mov
les
js
cmp
cmp
xorb
lods
sbb
xchg
mov
pop
mov
sub
ja
outsb
fidivrl
push
ret
mov
xor
add
js
sti
sbb
and
xchg
pushf
out
mov
lock
mov
add
aaa
push
ss
add
out
aaa
push
test
scas
dec
lods
inc
dec
popa
xor
sub
push
shll
and
jbe
mov
stos
insl
xor
and
dec
jp
dec
jg
mov
aam
aaa
stos
inc
xchg
out
sbb
cld
lea
inc
insb
push
in
loope
pop
test
cld
mov
int3
xchg
jle
or
shrl
ds
pop
rcrl
mov
lds
cs
rolb
mov
sbb
inc
ret
sbb
int3
insb
jecxz
or
arpl
leave
imul
aas
arpl
inc
or
test
call
cli
ret
sbb
dec
push
sub
outsl
mov
inc
in
ds
push
orb
std
jmp
sti
mov
loop
xchg
mov
jg
xor
ret
jns
inc
jbe
mov
das
adc
mov
push
mov
imul
sbb
add
aad
dec
xor
pop
fs
addb
jmp
xchg
in
push
loopne
and
inc
sub
hlt
jge
dec
push
out
lret
fmulp
adc
dec
outsl
repz
filds
test
test
popf
cmp
sub
cld
ret
push
imul
push
mov
lea
jbe
jl
lea
mov
fimull
adc
bound
pop
out
lods
pushf
push
sahf
mov
stc
call
adc
push
fisubrs
jne
es
add
adc
or
inc
xchg
or
jns
decl
jae
leave
jb
or
sbb
cmp
pop
cld
inc
inc
les
jle
jb
xor
lea
pop
mov
dec
pop
or
movsl
jecxz
dec
jl
pop
subb
pop
cmp
mov
dec
mov
cmp
or
jo
xchg
and
gs
xor
rolb
adc
adc
ljmp
sbb
sbb
add
mov
jmp
lea
adc
jp
out
clc
adcb
push
sti
mov
sub
cmpsb
fcoml
fsubrl
gs
je
sub
xchg
push
add
rcr
subb
mov
negb
mov
add
test
arpl
mov
cmp
mov
sbb
fwait
bound
adc
and
add
xchg
fistpll
cltd
fdivr
xor
mov
cwtl
sbb
mov
xor
cli
decl
xchg
cltd
decl
cmpsb
insb
mov
daa
out
push
fs
lods
out
jbe
xchg
es
sbb
in
jno,pn
aaa
arpl
cmp
out
sbb
aaa
cli
adc
fldenv
std
stos
add
xchg
mov
mov
ljmp
sub
jl
mov
inc
mov
arpl
inc
jp
pop
out
je
js
out
mov
ds
lock
push
pop
jecxz
loope
inc
cwtl
lock
clc
inc
lcall
push
sarl
ficompl
inc
ja
xor
add
test
inc
sub
mov
and
mov
jg
outsb
mov
push
insl
jo
cmpsb
push
lea
push
cmp
sbb
shll
in
push
xchg
cmp
mov
das
insl
cmp
test
and
nop
sti
jmp
shlb
sbb
aam
int3
mov
inc
std
jg
lret
lods
add
xchg
ljmp
inc
and
nop
fwait
cmp
jg
inc
xor
push
push
iret
or
or
sbb
xchg
shl
adc
and
mov
cmp
or
jle
test
adc
nop
xchg
and
pop
fsubs
cmp
pop
inc
test
xor
adcb
in
imul
and
ret
subl
adc
jle
push
pop
nop
shl
jle
stc
repnz
loop
repnz
test
sahf
push
push
adc
mov
cltd
lret
lea
rorb
jge
shlb
loope
adc
fstpl
cmpsl
mov
insl
pop
xchg
hlt
aaa
fldt
cwtl
test
jne
test
and
mov
call
dec
addr16
movb
sub
outsb
adc
jo
cs
es
xor
fcompl
loope
fcoml
shl
sub
adc
pop
ljmp
outsl
mov
cmp
xlat
jmp
sbb
jg
push
daa
mov
sarl
jg
dec
in
adc
mov
cwtl
stos
je
cmp
sbb
stc
push
subl
mov
adc
xor
sbb
pop
faddl
nop
adc
add
enter
sub
mov
sbbb
clc
orl
sbb
dec
sbb
ret
jge
gs
inc
cmpsl
xor
push
push
leave
xchg
pop
xchg
repnz
jns
ljmp
xor
xor
cwtl
stos
cmpsb
lds
cmc
rcrb
push
out
mov
pop
cmp
sysenter
jns
fs
dec
sub
adc
mov
sti
iret
loop
and
shrl
xchg
fstp
pop
sbb
test
and
xchg
xchg
mov
push
adc
test
gs
cmpsl
ja
push
je
adc
push
jns
cmpsl
decl
push
dec
sbb
mov
dec
les
aas
lcall
aaa
shll
xor
cld
repnz
dec
cmp
into
pop
xor
jg
push
mov
mov
in
pop
inc
or
das
cld
in
in
imul
pusha
stc
adc
inc
pop
mov
push
jp
add
mov
mov
xchg
push
outsl
leave
dec
cmp
loop
mov
movd
das
aam
inc
jns
push
xchg
xor
sbb
xchg
loope
xlat
pop
adc
mov
data16
lds
cmp
and
iret
jne
sbb
sbb
or
xchg
sub
pop
cmp
jbe
adc
push
es
addr16
jne
leave
std
or
je
scas
imul
aas
or
and
push
pop
add
repz
pop
sub
or
and
fcmovnu
mov
xchg
cmp
pop
sub
stos
fdivs
addr16
jl
mov
fnstsw
idiv
sbb
adc
adc
lock
sti
xor
inc
inc
lods
in
incl
out
in
shlb
loopne
mov
pop
pop
rclb
sbb
add
popf
and
test
sub
add
pop
es
mov
xchg
xchg
ja
in
inc
fs
addr16
sub
dec
addr16
and
cmp
stc
xchg
lea
subl
test
jae
sahf
nop
sbb
lahf
cmp
pop
js
je
xchg
xlat
ficoml
pop
mov
pusha
cltd
pop
repz
adc
inc
mov
in
fs
sbb
mov
cmp
shl
push
addl
jae
loopne
xchg
clc
out
sbb
sub
shrb
aam
mov
lds
stc
lret
push
fcmovbe
lods
dec
jae
data16
mov
cmpsl
js
mov
mov
pop
inc
mov
and
inc
cmp
cmp
vshufpd
roll
sub
insb
jmp
call
inc
cmpsb
mov
pushf
push
mov
pushf
pop
xor
mov
addl
sub
push
loope
jae
adc
cwtl
jb
cmpsl
add
rolb
fst
cmc
mov
cmp
or
test
andb
pop
aad
loopne
loopne
xchg
in
mov
fldt
xchg
xlat
fldt
add
lcall
lods
xchg
iret
mov
pop
fildl
icebp
sub
sbb
and
xchg
add
pop
dec
add
nop
das
mov
dec
pop
cld
fidivl
cmpsl
rorl
setb
push
mov
ret
cmp
inc
mov
xor
scas
jno
inc
aas
push
xor
loop
mov
sbb
lds
cwtl
pop
mov
jne
cwtl
js
push
mov
inc
arpl
cld
les
jmp
loope
sub
lea
stc
je
xchg
inc
rclb
sarb
xor
dec
mov
ja
xor
js
mov
cmp
push
in
jp
and
add
pop
in
xchg
cmp
add
stos
push
in
mov
xchg
push
or
loope
pop
xchg
inc
shll
scas
fwait
xchg
add
mov
push
inc
je
sub
arpl
in
push
data16
fnstenv
and
data16
xor
outsb
aam
adc
pop
ror
fiadds
cmpsb
sarl
mull
or
push
mov
adc
cmp
adc
push
add
mov
lret
scas
add
jl
insl
fcompl
and
push
push
or
sbb
mov
xchg
lret
cmp
or
jmp
adc
enter
pusha
add
adc
frstor
pushl
js
ljmp
or
in
add
xchg
scas
scas
jg
inc
sarb
inc
fmull
mov
add
adc
js
lock
jo
lea
aaa
adc
ds
lods
jns
cmp
jmp
sub
mov
loope
inc
sub
call
xchg
mov
ja
js
inc
pushf
bound
and
and
in
inc
pop
pop
jp
arpl
rclb
in
stc
cwtl
je
adc
lcall
cmp
sub
mov
xchg
clc
decl
lock
ja
pushf
bound
fisubrl
push
sbbb
dec
outsl
popa
mov
cli
in
pop
cli
inc
add
add
mov
inc
jle
outsl
lock
and
clc
dec
ljmp
pop
and
jbe
clc
cs
or
mov
outsl
lock
leave
scas
jg
mov
mov
mov
jo
sub
add
push
xor
mov
outsb
ljmp
daa
scas
stos
cld
es
decl
loop
incb
test
xchg
std
add
bound
pop
mov
adc
in
mov
or
cli
mov
push
sbb
lods
outsl
pop
and
rclb
test
roll
push
nop
or
mov
rcrb
jl
dec
xchg
push
out
fs
mov
sub
mov
jl
adc
addr16
push
and
imulb
scas
mov
pop
movsl
outsb
dec
mov
cld
adc
jb
scas
jecxz
mov
sub
inc
push
js
jmp
adc
xchg
movsl
pop
xchg
aaa
rcrl
and
out
adc
repz
lods
add
jecxz
push
daa
in
stos
fs
jg
sub
insl
dec
add
aaa
rcrl
jg
and
mov
jb
shll
pop
push
hlt
fdivl
rclb
insl
jmp
lods
sbb
dec
or
stos
jle
aaa
push
push
lock
out
cmp
leave
xchg
sbb
ss
inc
or
test
fimull
test
sub
bnd
in
push
inc
sub
ljmp
add
ja
in
ljmp
push
and
inc
rcll
xlat
mov
sbb
push
push
sbb
test
jne
adc
fsubp
sarl
mov
cmc
pop
mov
adc
mov
roll
inc
mov
mov
loopne
mov
pop
ja
fs
into
pop
or
mov
cmp
mov
mov
inc
sbb
sti
lcall
sub
cwtl
mov
iret
loopne
push
out
call
inc
push
movb
mov
jnp
inc
sti
test
xlat
cwtl
test
xlat
jnp
jo
xchg
rcrb
outsl
jmp
in
stc
xorl
notl
pop
clc
adc
mov
repz
lret
insl
mov
pushf
imul
mov
icebp
or
ss
or
add
shrl
cmp
jg
inc
negb
mov
cmpl
lret
call
in
xchg
mov
sti
jge
sub
xor
push
fs
adc
test
lahf
in
adc
mov
mov
cmp
scas
add
xor
sub
scas
and
clc
movsb
call
lret
mov
sti
add
pop
fldl
pop
fcmovnbe
testb
mov
in
add
mov
rcr
and
and
pop
les
xor
mov
mov
mov
loopne
cs
jl
and
add
js
dec
mov
fdivl
cmp
shlb
test
fidivrl
and
movsl
ljmp
xchg
add
push
shll
lock
fwait
push
add
xchg
mov
pop
jno
and
jl
sahf
cmp
jle
xchg
mov
mov
mov
mov
pusha
inc
in
and
in
cwtl
mov
mov
orl
xor
stc
addr16
lcall
or
aam
imul
add
sbb
mov
sarb
jg
stc
xlat
lcall
xor
xchg
cmp
scas
cmpb
addl
dec
shl
inc
sar
inc
fs
fisttpl
push
in
sar
ljmp
popf
shlb
pop
inc
sbb
and
xchg
fstpl
sub
push
orl
dec
mov
mov
add
js,pt
jl
data16
aad
std
cmpl
xor
adc
mov
ret
inc
stos
dec
pop
mov
sub
inc
sbb
std
jnp
in
sub
icebp
repz
xor
push
pop
or
xor
pop
fistl
jg
xor
in
jg
mov
into
sub
andps
pop
pop
and
sbb
pop
lock
leave
add
movsl
lock
lds
psubd
mov
add
cld
push
add
xchg
icebp
or
xor
xchg
dec
loope
mov
push
sbb
pop
inc
ja
add
sbbl
jns
or
mov
lahf
mov
aad
jl
jns
mov
jno
xlat
sub
ds
adc
push
pusha
addl
jle
daa
or
xor
sbb
or
inc
mov
mov
xchg
jmp
ficompl
mov
xchg
adc
aam
fistl
or
or
mov
and
insl
mov
sarl
jle
jl
je
test
pusha
jmp
rorb
jne
xor
imull
int
push
push
and
sbb
push
xchg
shlb
add
mov
cs
dec
int
fs
nop
jnp
push
sub
cltd
mov
or
iret
and
dec
out
and
sub
cmc
or
add
mov
jo
dec
add
jbe
cmp
mov
out
mov
fidivrs
add
and
mov
rcrl
cli
and
outsl
pop
mov
mov
adc
or
mov
shlb
dec
xor
xor
or
dec
push
fwait
cmpsl
dec
lock
mov
std
leave
cmp
sbb
pop
lahf
mov
jno
outsl
inc
cmc
mov
and
ffreep
outsl
orb
iret
mov
int3
ss
std
ret
mov
das
or
cmpsl
cs
xchg
xchg
xor
cld
add
sarb
movsl
push
imul
cmp
fwait
adc
and
lret
xchg
outsb
out
or
lret
out
cmp
mov
xchg
sbbb
jmp
incl
in
xchg
je
lds
ret
dec
or
orb
inc
ret
loop
mov
test
out
sub
call
cli
or
imul
push
xchg
cmpsb
or
iret
lock
mov
dec
shl
ret
push
push
mov
clc
lods
decl
sub
dec
imul
shll
pop
roll
mov
and
inc
popf
adc
jge
or
loop
pop
inc
adc
andl
mov
cmp
mov
mov
xchg
mov
stos
and
outsl
insb
lahf
out
cmp
xor
or
xchg
or
or
test
insb
sbb
outsb
cld
test
xchg
int3
jp
and
add
jbe
lahf
scas
jbe
inc
and
or
fistpll
adcb
adc
and
and
cld
incl
jbe
pop
push
push
lret
and
mov
lock
lds
pop
je
outsl
insb
cld
das
adc
nop
sub
and
cmp
nop
push
out
mov
mov
inc
bswap
xor
push
sbb
and
pop
int3
add
dec
xchg
and
cmpsl
mov
les
mov
inc
or
aaa
dec
push
cwtl
movsl
mov
test
cmp
or
addr16
jge
xor
mov
int3
test
hlt
xchg
das
aas
inc
out
xchg
sub
ljmp
mov
add
lods
hlt
push
addr16
mov
repz
inc
sub
sahf
add
jmp
movsl
sbb
test
ret
out
jmp
cmp
test
nop
inc
stos
mov
xchg
xchg
out
pushf
out
ljmp
jno
les
in
lcall
loopne
rclb
xor
addl
cld
mov
ret
clc
popa
ffree
aad
mov
out
jo
pop
sarl
cmp
mov
das
ja
mov
gs
push
mov
push
les
mov
sub
xor
mov
adc
js
mov
mov
shll
jecxz
cmpsl
sub
push
cltd
out
dec
pop
dec
adc
lds
pusha
fisubs
adc
push
cmp
insb
mov
sbb
dec
sarb
lock
sbb
cmp
mov
movsl
pop
test
and
test
outsb
and
sub
dec
jecxz
push
movsl
dec
jg
xchg
mov
mov
push
movsl
aad
jmp
inc
push
or
lea
jge
sbb
sub
adc
lods
inc
push
int
arpl
or
jp
xchg
mov
dec
pop
add
dec
pop
mov
mov
add
mov
jns
lock
int3
stos
aaa
into
dec
inc
cmpsb
mov
pop
or
adc
je
shll
pop
push
sarl
sbb
mov
mull
cmpsb
add
pop
and
xchg
shll
test
out
mov
push
dec
mov
jb
outsl
loop
test
out
rcrb
or
imul
add
clc
jmp
flds
dec
shr
inc
and
outsl
icebp
outsl
or
dec
cs
imul
push
fdivp
jmp
rorl
stos
xlat
ret
shlb
inc
adc
jle
cmp
push
test
jo
lods
jns
mov
lock
push
inc
mov
popa
jle
add
aas
sbb
aad
dec
insb
or
idivb
adc
pop
mov
cli
in
test
cmpsb
movsb
adc
jecxz
mov
dec
fisttpl
test
ja
subl
adc
insb
stos
xchg
test
mov
adc
mov
adc
sub
jo
ljmp
cli
lahf
add
dec
push
jo
mov
push
xor
and
add
pop
arpl
mov
aad
inc
mov
sbb
in
out
push
fisubs
iret
in
mov
es
xchg
loope
popf
or
in
xor
movsl
inc
or
jns
inc
dec
rclb
int3
jecxz
js
adc
shl
shlb
mov
sub
test
fistl
pushl
rclb
mov
out
hlt
adc
mov
push
sub
js
push
add
ss
dec
pop
test
adc
cmp
sbb
sahf
mov
outsb
or
sti
pop
pop
stos
mov
jmp
mov
repz
in
mov
and
cmp
mov
mov
cmp
fcmovnb
sbb
jle
in
or
in
sbb
int3
es
in
test
mov
ret
mov
xlat
add
adc
sbb
out
pushf
mov
jae
lcall
or
push
jmp
test
mov
mov
xor
push
or
jg
or
xchg
or
add
sahf
jl
shlb
das
pop
or
mov
or
fidivs
or
fsubrs
dec
rorl
mov
mov
mov
xor
sub
imul
jle
repz
or
mov
sub
mov
stos
and
and
sub
xor
call
jl
dec
xor
addb
call
dec
lcall
cmp
pop
cwtl
leave
xchg
mov
clc
pop
pop
fmuls
or
pop
fisubrl
pop
mov
lea
fdivs
and
lcall
mov
xchg
sbb
jecxz
mov
inc
pushf
insl
jns
jge
aad
lods
jns
in
adc
and
dec
cwtl
cs
xchg
outsl
add
daa
jg
mov
jns
or
adc
push
jl
cwtl
sbb
adc
xchg
sbb
mov
mov
push
loope
lahf
leave
add
jge
aas
mov
mov
inc
dec
out
fimuls
lea
mov
pusha
xor
ret
rcrb
cmp
pop
sub
lock
adc
hlt
fs
cmp
mov
leave
shl
movb
push
inc
xor
push
cwtl
out
loop
and
sbb
insl
push
icebp
into
sti
into
and
fistps
push
je
popa
imul
inc
xsavec
push
mov
idivl
or
ss
jg
xchg
lea
adc
inc
push
adc
adc
dec
and
ss
cmpsb
mov
sbb
ret
xchg
cs
fsub
sub
dec
outsl
jns
pushl
mov
and
pop
adc
push
shll
mov
pop
adc
jl
in
mov
push
push
mov
les
loop
inc
outsl
add
add
inc
stos
test
loop
incl
dec
sbb
lock
cmc
insl
sub
fs
mov
add
mov
add
and
call
movsl
cmc
fimuls
sub
add
add
cld
push
pop
mov
push
scas
lock
jb
mov
jle
dec
mov
cmpsb
enter
jmp
dec
or
xchg
outsl
sbb
test
xchg
jo
xchg
nop
sbb
and
fstpl
fidivrl
inc
pop
shlb
cmp
or
clc
mov
imul
xor
fcmovbe
mov
sbb
pushf
cmp
jo
scas
xor
fistpll
mov
or
mov
mov
jl
cmpsb
fadds
mov
push
pop
cmp
aad
cmc
xchg
cld
cs
adc
push
adc
sbb
data16
outsb
xchg
jp
iret
xrelease
ret
jg
add
mov
test
jno
inc
rcrb
daa
adc
mov
mov
jg
sti
stos
sub
mov
cmp
xor
sbb
dec
push
xor
call
adc
loopne
sub
aam
jo
clc
das
mov
test
js
jns
out
jp
lcall
xor
stos
mov
and
ret
iret
push
adc
fisubl
sub
test
cmp
aad
push
jge
fistpll
adc
push
inc
lea
cs
call
pop
sub
fcompl
out
sub
inc
icebp
decl
mov
cmp
call
dec
movsl
cmp
jne
loopne
ds
fldt
fucomip
and
aad
push
or
jne
ficomps
imul
cli
dec
push
inc
add
mov
sub
cmp
ss
and
inc
xchg
lcall
fistpll
fs
xor
fistpl
clc
mov
stos
sti
leave
sbb
add
or
outsl
iret
shlb
cmp
or
test
pop
xlat
inc
jge
je
addl
jecxz
insb
aam
movsl
imul
xor
data16
xchg
aas
xlat
rol
mov
add
sti
dec
mov
out
repz
and
push
sub
lret
fistpl
dec
scas
mov
dec
arpl
push
sbb
xchg
and
pushf
dec
in
out
pusha
lods
fs
dec
inc
test
cmp
fidivs
out
pop
into
pop
push
adc
and
mov
inc
adc
cli
add
jo
xchg
lods
xor
pop
imul
add
add
sbb
mov
lods
jge
or
sti
dec
mov
call
call
movsb
jecxz
push
cmc
sbbb
insl
aas
outsl
add
rcr
loop
jb
jmp
pop
inc
sbb
xor
sbb
sbb
mov
loope
outsl
outsl
sub
or
jl
loope
dec
lds
push
pop
pop
js
hlt
dec
sub
or
inc
filds
pop
adc
stos
test
cmpsb
cli
cs
sbb
insb
fiadds
insl
and
pop
dec
jecxz
fmull
sahf
add
cli
fucomip
jae
pop
std
imul
inc
test
ljmp
xchg
cmp
ficoml
add
sub
popf
mov
imul
test
or
mov
or
inc
adc
lret
pop
sahf
cmp
sbb
in
clc
sub
subl
lods
inc
dec
push
sti
leave
xchg
not
mov
cmp
std
loope
fcmovu
sbb
push
cltd
stc
cwtl
stos
rcll
in
call
aam
idivl
jb
insl
orb
push
mov
fcmovu
sarl
loopne
cmp
xor
mov
dec
out
out
int3
les
xor
jbe
xchg
mulb
sub
lahf
adc
sbb
sti
push
add
inc
and
icebp
mov
movsl
das
cmpsl
and
popl
movsl
add
xlat
test
adc
rorl
das
jne
call
aas
add
enter
pop
mov
cmp
jg
mov
sub
push
scas
push
cltd
mov
adc
adc
mov
inc
ror
iret
outsl
pop
bound
push
test
mov
inc
cld
sbb
cmp
pop
mov
or
ss
inc
rcll
mov
loopne
loopne
out
sbb
xchg
cmc
push
cmp
mov
add
lcall
lods
cltd
fcomi
cmpsl
decl
jne
pushw
jbe
and
and
lods
and
inc
outsl
sbb
inc
cmp
jmp
fstp
lds
and
xchg
loop
ja
cld
push
hlt
lea
clc
sub
in
adc
adc
dec
test
or
out
mov
loopne
popl
adc
ljmp
lds
cld
mov
sub
mov
data16
lock
cs
xchg
jo
int
addr16
inc
adc
fidivs
dec
outsb
pop
cs
aaa
mov
vmovntps
jmp
pop
mov
and
ficoms
push
cmp
insl
pop
roll
rcr
inc
add
ss
call
das
inc
ds
jg
push
pop
dec
jbe
fs
sahf
sar
xchg
pushf
xchg
adc
in
icebp
cmp
cld
xchg
xor
lock
xlat
lahf
and
jbe
jae
jl
test
icebp
sbb
sbb
sbb
sti
sahf
xchg
mov
or
mov
out
mov
incl
mov
or
pop
hlt
clc
outsl
xchg
sub
stos
popa
icebp
jmp
or
mov
cmpsb
adc
subl
xchg
cmpsb
pop
mov
ss
movsb
adc
fstp
pop
xchg
jl
pop
mov
push
dec
dec
jge
sbb
es
into
and
call
fnstcw
sub
ret
push
popf
repz
jno
mov
lods
xor
sbb
pop
std
stos
sub
xor
movsl
out
inc
mov
and
rol
mov
xchg
xor
cmp
mov
dec
push
daa
stos
xor
push
bound
scas
pop
and
aam
inc
decb
fiaddl
ret
push
xor
cmpl
dec
cmp
sahf
out
popa
jno
inc
in
pop
int3
gs
mov
adc
add
jmp
inc
push
xchg
dec
sarl
cmpsb
aad
in
xor
mov
jnp
cmp
daa
ja
and
and
nop
mov
jmp
test
and
sahf
pop
sarb
mov
aaa
clc
sbb
aas
lods
out
call
cli
ljmp
int3
or
xor
xor
mov
loop
insb
push
int
bound
test
adc
cmpsb
dec
push
jo
out
xchg
daa
pushl
addr16
and
push
lret
push
sahf
clc
cltd
pushl
mov
shrd
je
push
loope
push
je
add
ret
mov
sbb
js
decl
out
outsb
mov
fidivl
or
mov
sti
stos
loop
mov
out
mov
pushl
mov
scas
loop
xchg
fsubl
negb
push
and
xchg
and
repz
jmp
jl
inc
push
into
bound
mov
pusha
inc
fdivp
add
or
cli
rorb
push
std
div
decl
cmpsl
rcll
push
fistpl
adc
or
mov
pop
cmpl
jge
push
enter
imul
adc
sbb
ss
cld
cmc
orl
add
aas
xchg
jmp
or
xlat
test
jno
mov
xor
repz
push
loop
imul
imul
mov
mov
xor
ja
mov
xchg
sbb
jg
rcl
aas
ret
out
ss
cmpl
jg
push
xor
xor
sub
xchg
into
xchg
adc
aaa
and
movsl
pushl
in
movsb
adc
adc
call
cmp
cmp
mov
in
inc
dec
cmp
push
push
push
mov
mov
jnp
xor
mov
xor
dec
bound
call
and
lock
cmp
or
pop
adc
add
mov
lcall
sbb
lods
popf
push
cmp
sbb
rol
dec
outsl
sub
imul
mov
out
pushl
mov
xchg
stc
into
fwait
jbe
lret
gs
add
stos
sar
nop
and
idiv
pushl
inc
mov
int
mov
push
inc
sbb
mov
loop
adc
jg
cltd
pop
push
in
mov
es
inc
call
popf
push
pop
pop
loopnew
scas
dec
inc
stos
arpl
cmp
call
inc
std
mov
mov
jbe
adc
pushl
lcall
mov
mov
into
in
push
dec
scas
sbb
adc
mov
incl
les
cli
xchg
and
pop
fs
shll
cmp
push
adc
decl
pop
pop
push
outsl
pop
push
loop
cmpsl
aaa
mov
ljmp
or
sbb
pop
lret
out
xor
cmc
ss
sub
cmp
jmp
mov
jle
cwtl
xchg
mov
outsb
adc
into
fimuls
or
loope
mov
jns
call
sub
addl
xor
cld
popf
jg
pop
daa
aam
subb
xchg
push
call
call
mov
rcll
push
fmull
aad
daa
mov
lcall
xor
push
mov
mov
popa
cmp
andps
aad
jae
fisubrs
mov
icebp
fildll
dec
mov
ficoml
rcl
lcall
insb
and
clc
xlat
jl
sbb
push
push
mov
lcall
mov
fists
dec
pop
add
sbb
cltd
pop
push
fldt
mov
or
stos
xchg
repnz
fimull
lods
call
lret
dec
sub
aad
mov
add
pop
repz
sarl
std
push
sub
loope
lret
in
popa
cwtl
xchg
call
sbb
jg
incl
int3
or
mov
mov
stc
lods
pop
dec
xchg
in
rol
mov
dec
in
add
sbb
xor
sub
test
aam
sti
push
xchg
mov
sub
jbe
out
cmp
cli
fwait
mov
add
popf
lock
xor
loopne
shll
cmp
int3
test
cmp
nop
sar
cli
test
sbb
mov
xchg
lret
push
shll
xlat
pop
cld
inc
pop
inc
pop
inc
cmpl
mov
jmp
add
ret
jg
ret
cmpsb
push
mov
jle
jg
xorl
pop
mov
mov
add
add
jns
loopne
idiv
push
inc
dec
in
in
cwtl
cmp
in
mov
push
pop
rclb
stc
pop
into
or
pop
jmp
xor
add
xor
sbb
mov
adc
push
mov
mov
mov
xchg
mov
cmp
jmp
xchg
dec
push
sbb
adc
or
std
fisttps
mov
inc
lret
jo
dec
add
aaa
mov
cmp
sbb
sbb
sub
std
inc
incl
aaa
pop
add
out
nop
cmp
insb
mov
lcall
adcl
cli
std
jecxz
pop
imul
sub
aad
out
sbb
dec
adc
jp
dec
mov
dec
int
inc
mov
aas
int3
stc
adc
ss
repnz
push
jno
cmpsl
jnp
scas
fidivs
pop
decl
mov
add
sbb
jg
int
pop
nop
icebp
dec
sbb
hlt
in
cli
outsl
std
pushl
arpl
in
push
outsb
dec
aas
jge
lret
enter
inc
in
sub
pushl
mov
stos
mov
das
sbb
pop
and
mov
fistpll
mov
jns
push
inc
cwtl
add
sbb
ljmp
mov
scas
pop
jae
pushl
inc
fnstsw
pop
fidivl
xchg
mov
iret
ljmp
jge
pop
lods
rorb
push
lods
mov
push
mov
incl
lcall
or
in
mov
or
cmpsl
fdiv
cmp
cltd
ljmp
incl
sbb
ret
dec
push
inc
enter
das
mov
pushl
out
push
pop
dec
and
mov
mov
jae
jb
stc
push
repnz
jl
icebp
sahf
repnz
ljmp
rorb
push
pop
xchg
jp
mov
mov
std
xchg
decl
shrb
addr16
xchg
or
push
ret
mov
mulb
je
pushf
loopne
daa
in
xchg
nop
sahf
sub
inc
incl
fs
sahf
jecxz
enter
adc
dec
jl
nop
arpl
outsb
incl
arpl
push
dec
in
cmp
or
add
movsb
cmp
add
scas
cmp
mov
adc
gs
lcall
inc
xchg
mov
jmp
je
mov
mov
cvtps2pd
xlat
xchg
ficoms
aaa
sub
cmp
sbb
mov
or
cmc
dec
js
in
out
outsb
cmc
in
xchg
mov
rolb
jmp
cmp
lahf
add
push
es
lods
stos
mov
incl
decl
add
mov
add
push
stc
imul
call
xchg
sub
inc
xchg
sarl
mov
cmpsb
push
xchg
sbb
xor
call
cli
das
hlt
sbb
dec
lods
int3
insb
xchg
loopne
loopne
push
dec
mov
cmovo
test
xchg
xchg
inc
inc
mov
pushl
adc
or
pop
push
jnp
bnd
andl
mov
jne
lods
xor
sti
lcall
pop
cld
stc
rcr
andl
jno
pop
repz
jg
idivb
dec
cmp
fninit
dec
or
test
cmp
cli
jmp
loop
loop
cmp
push
out
aam
daa
in
fistps
ffreep
fidivrs
pop
mov
fiadds
sub
xor
clc
sti
dec
mov
adc
cmp
shll
adc
out
pop
ds
scas
cmc
or
dec
inc
aaa
test
sbb
xchg
clc
cld
jp
or
lods
dec
or
or
mov
or
inc
pop
insl
lcall
sbb
in
adcb
addb
in
mov
mov
push
mov
add
xchg
jno
and
fnstsw
lahf
xchg
out
mov
jp
inc
or
in
std
enter
daa
jb
cwtl
enter
lcall
fucomip
gs
pushf
int
mov
imul
lcall
adc
fists
and
jb
les
mov
mov
mov
xor
lods
jb
push
loope
out
mov
inc
fstpt
lods
rcrb
jecxz
inc
enter
mov
xchg
jmp
das
cli
lods
scas
adc
xchg
mov
mov
popl
jb
inc
xor
sti
jne
sahf
fucomip
lods
call
pop
aam
popa
pop
nop
inc
outsb
callw
add
push
data16
lcall
test
bound
mov
and
jle
dec
aam
sbb
jae
inc
mov
mov
jp
mov
movsl
ljmp
ret
repz
push
sti
ja
add
inc
cli
xchg
and
push
inc
xchg
dec
call
mov
lcall
std
cltd
pop
jmp
mov
mov
pop
inc
mov
int
lds
push
stos
in
push
push
popa
xchg
enter
pop
pop
dec
sbb
push
hlt
mov
popa
lcall
stos
lods
in
mov
daa
iret
push
pop
mov
outsl
loope
add
jp
fldl
or
xchg
mov
pop
mov
dec
icebp
je
dec
xchg
sti
fwait
mov
outsb
cmp
ret
jg
lock
and
sbb
sbb
inc
fsubrs
inc
repnz
xorl
test
loope
sub
lret
jmp
cmp
jnp
stc
movsl
adc
xchg
inc
loopne
cmc
or
xchg
pushf
in
mov
sbb
lds
mov
scas
jne
or
xchg
sbb
daa
mov
sbb
dec
mov
xor
incl
outsl
adcl
mov
sbb
lock
push
cli
ljmp
data16
rcr
sub
call
jbe
icebp
mov
scas
xchg
jp
ja
movsb
repnz
jb
pushl
jecxz
repz
cmpsl
mov
xor
dec
leave
or
sti
pushl
sub
je
xchg
or
dec
insb
notl
ror
ja
mov
lock
aas
sbb
lods
adc
rcll
aas
movsb
call
add
out
pop
stos
out
mov
lds
pushl
ret
xchg
or
mov
mov
decl
out
out
jb
mov
xor
cs
xorb
clc
pushl
mov
adc
movsb
sub
jle
stc
lea
cmp
adc
jg
call
mov
dec
sub
jp
pop
mov
pop
mov
lock
inc
sbb
mov
mov
adc
js
sbb
xchg
clc
decl
or
jmp
leave
outsl
lret
pushl
inc
popf
stos
mov
cmc
and
cmpsb
lret
imul
add
push
mov
loopne
cltd
sbb
dec
cmp
adcl
cmp
jno
cmp
jmp
inc
nop
sbb
ss
ss
inc
push
cmp
jp
sub
push
sbbl
mov
repnz
cmp
out
or
adc
jecxz
cmpsb
add
xchg
fcoms
out
pop
scas
outsl
cmc
ljmp
push
ds
out
jns
pop
mov
or
inc
divl
cmc
add
cmp
sbb
cmpsl
fidivs
cmpsl
xchg
mov
iret
int3
inc
stc
xchg
outsl
bound
sub
arpl
jo
sub
pop
push
test
pop
push
jnp
jns
jle
pop
les
add
add
data16
mov
test
outsl
hlt
imul
pop
push
xchg
jb
test
aas
loopne
pop
clc
cmp
and
sub
fildl
sbb
int3
pusha
test
jns
clc
mov
out
and
fcoml
neg
push
mov
mov
jmp
loop
xchg
mov
lcall
pop
pusha
push
clc
cmpsl
lods
hlt
dec
mov
fwait
xchg
xchg
fidivrl
pop
push
das
cs
inc
ljmp
xchg
jge
push
test
sub
mov
enter
add
push
outsl
insb
scas
movsb
fnstenv
repnz
js
mov
mov
add
test
pushf
push
add
inc
andl
mov
bnd
insb
xchg
and
jge
in
dec
iret
xor
fnstenv
gs
sub
or
hlt
in
inc
push
bound
adc
xchg
mov
movsl
incb
imul
mov
daa
out
cmp
ljmp
pop
xchg
es
incl
and
jmp
cmc
jb
cmp
pop
cpuid
shll
out
lcall
mov
cmp
pop
lahf
mov
mov
lods
cmp
lods
test
jg
hlt
ljmp
fdivrs
idivb
or
cmp
push
xchg
icebp
sub
cld
outsl
xchg
add
xchg
mov
outsl
hlt
filds
jl
insb
jns
mov
jge
cld
push
pop
fldcw
sti
sbb
hlt
lcall
aaa
add
mov
mov
ss
jg
pop
movb
std
add
in
sarl
mov
push
pop
mov
int
cltd
lea
es
mov
fs
xor
call
xor
call
mov
pusha
std
fadd
test
pop
ret
pushl
cli
cmpsb
je
or
sbb
leave
mov
mov
imul
pop
mov
daa
xchg
cmp
int3
inc
scas
lds
not
aam
cmc
call
cli
xchg
insb
xchg
ljmp
dec
fdivrl
hlt
xchg
push
loope
mov
ljmp
push
and
les
cmpsb
icebp
mov
movsb
dec
in
add
xchg
mov
jb
mov
decl
mov
xchg
xchg
xchg
ljmp
in
sbb
call
cmp
cmp
mov
adc
push
mov
mov
jne
aam
mov
sbb
mov
xchg
pop
clc
inc
dec
sub
or
pop
add
adc
fucomip
push
push
pop
mov
bnd
jg
mov
jnp
stc
std
xor
lods
pushl
mov
cmp
sub
aad
push
adc
sbb
inc
ljmp
decl
aam
aam
mov
shlb
push
rolb
xchg
aaa
xchg
push
jmp
jmp
outsl
push
cmp
jb
xor
add
or
adc
sub
mov
jle
ss
sahf
inc
or
cmp
mov
mov
adc
out
insb
andb
das
iret
aad
call
sbb
je
jp
lahf
cmc
sahf
lahf
insb
sub
fcmovne
das
incl
sub
sbb
cmpsb
jns
test
movsl
sbb
outsl
jnp
mov
or
cmp
pop
loop
jmp
xchg
mov
add
pushf
shrb
cmpsl
cmp
lea
mov
ds
mov
add
pop
loopne
das
hlt
call
pop
leave
leave
sbb
mov
xchg
sbb
pop
clc
outsl
cmp
xchg
lock
inc
lods
mov
adc
rolb
jmp
roll
je
addl
cmc
outsl
jg
jo
repnz
test
pop
int
cmp
push
roll
mov
movsl
rcr
xor
sar
lods
mov
lea
mov
les
arpl
mov
adc
call
inc
add
sbb
xor
test
push
mov
aas
out
shrb
cmp
subb
pop
mov
xor
push
cmp
jg
lods
in
call
rorl
inc
adcl
in
rcll
loop
leave
xor
and
or
into
call
incl
xchg
mov
jae
add
in
jno
cmp
outsb
mov
ljmp
xchg
inc
jno
mov
adc
adc
aaa
neg
scas
ljmp
sar
ljmp
sbb
cmp
outsb
push
jecxz
cwtl
aas
inc
add
out
psllq
xchg
jb
sahf
cltd
jmp
inc
pop
xchg
and
adc
loopne
pop
fcomip
outsl
repz
mov
mov
ror
call
and
inc
clc
fildll
loope
jecxz
mov
hlt
hlt
mov
insl
xchg
sub
mov
lret
and
imul
cmc
addl
push
sbb
pop
lods
pop
jl
call
call
scas
sbb
cmp
mov
mov
dec
cmpsb
idiv
call
cli
mov
movsb
pop
jecxz
mov
lahf
lods
or
movsb
add
xchg
or
sar
lcall
dec
inc
mov
cmp
pop
lock
je
leave
mov
mov
es
ja
mov
mov
and
push
xchg
inc
std
and
or
jg
fnstcw
cli
lret
stc
jo
movsb
or
lods
mov
mov
in
aad
mov
nop
stos
jge
aaa
clc
ljmp
outsb
adc
and
and
sub
xchg
cli
ljmp
adc
or
mov
loope
jecxz
incl
pop
cwtl
push
test
cmp
pop
adc
shl
cwtl
inc
inc
es
and
pushl
test
sub
inc
call
lcall
push
push
mov
addr16
push
push
pop
push
pop
xchg
ljmp
pop
push
lcall
adc
push
sahf
imul
fucomip
call
sub
mov
jno
and
xchg
pop
cwtl
fimull
cld
stos
sbb
push
clc
jg
pop
decl
loop
aad
sub
mov
push
sbb
call
xchg
rcrb
mov
cmp
push
xorl
incl
insb
jo
lahf
lahf
push
or
adc
shll
js
push
decl
sbb
movsl
inc
cwtl
jmp
repz
std
rcrl
arpl
and
dec
ljmp
pushw
inc
lods
pop
shrb
loop
adc
into
clc
xor
cmp
sahf
xchg
out
fwait
in
push
inc
jns
dec
ret
push
cmovnp
in
inc
dec
xchg
push
fcmovu
jmp
or
neg
pop
shrl
mov
pop
xor
lods
lcall
inc
mov
fmull
sti
mov
inc
jp
sti
pop
inc
and
inc
je
lcall
or
mov
aam
fnstsw
insb
mov
adc
push
xor
decl
and
je
fbstp
cltd
sub
jmp
push
dec
mov
pop
cmpsb
inc
and
xchg
mov
adc
je
decl
fldt
test
xor
aad
aad
lock
cltd
fucomp
cld
mov
pop
clc
lcall
mov
hlt
sub
push
cmpb
subl
andl
movsb
and
mov
mov
test
sub
ljmp
shlb
in
out
aas
jg
outsl
xchg
mov
mov
mov
lods
cmc
movsb
push
pushl
stc
pusha
adc
repz
jbe
and
adc
cmpsl
xor
push
xor
mov
incl
in
int3
lret
bound
icebp
popa
divl
sub
fcoml
jne
add
mov
mov
adcl
jo
cmc
les
stc
stc
lcall
pop
add
cmc
movsl
jg
mov
xchg
fdiv
jle
popl
jg
mov
fdivp
jg
mov
push
jnp
adc
ds
out
cmp
pushl
dec
mov
push
rcl
adc
xchg
bound
in
sar
jg
push
mov
repnz
ja
lcall
lds
inc
push
pop
xor
push
or
sbb
sub
rclb
arpl
je
sahf
sub
sub
xor
fucomip
loopne
pop
cld
pop
xchg
es
mov
mov
inc
out
fsubrp
cmp
adc
sub
jae
hlt
call
cli
pushl
ss
sub
cwtl
cltd
arpl
aam
adcl
xchg
shrb
xor
jg
mov
dec
fidivl
mov
fstl
xchg
mov
ss
pushl
xor
movsl
int3
insl
sbb
cmp
ret
inc
sbb
mov
fucomip
mov
sbb
pop
mov
sub
or
das
add
stos
aaa
xchg
add
and
mov
mov
ret
pop
xor
in
dec
push
test
loop
dec
jge
and
stc
lahf
jl
inc
push
outsl
icebp
and
ljmp
pusha
daa
jae
aam
es
test
and
or
js
adc
dec
ret
fidivrs
sbb
mov
fsubp
add
repnz
add
pop
and
outsl
popf
subb
insl
adc
ljmp
stos
dec
lret
inc
push
sbb
rolb
lret
out
lds
outsb
xor
ljmp
mov
adc
enter
roll
fstps
fsubs
outsb
shll
icebp
ljmp
mov
jge
xchg
test
push
push
loopne
cmp
jecxz
lea
lcall
xchg
dec
in
dec
ficoms
fs
sub
cmp
std
das
icebp
incl
dec
jg
rolw
sbb
jg
pusha
aad
decl
mov
lods
jnp
bnd
sbb
std
mov
dec
scas
stos
in
call
sahf
hlt
loopne
jmp
fs
sahf
and
decl
orl
jle
or
outsl
pop
ljmp
testb
ss
fisttps
dec
inc
xchg
dec
ljmp
or
mov
mov
out
xor
stc
or
dec
gs
sbb
mov
xor
pop
and
xor
int
cmp
sarb
mov
aas
scas
cmpl
mov
incl
mov
add
fidivrs
ret
jge
adc
jno
cs
mov
jg
adc
dec
in
fcmovnu
mov
inc
pop
into
pop
push
das
fnstsw
outsb
cltd
clc
and
mov
pop
popf
cmp
int3
xor
inc
leave
dec
ja
call
jno
dec
jae
xchg
jle
inc
lret
stc
decl
hlt
push
shlb
inc
or
std
es
lcall
repnz
mov
pop
mov
adcb
pop
loop
scas
push
fwait
adc
in
xchg
push
loopne
inc
test
rep
ljmp
inc
arpl
cmp
fmuls
pop
jae,pt
sub
inc
pop
push
inc
test
shl
dec
stos
nop
imul
xor
cs
popf
jecxz
leave
fisttpl
fwait
lds
clc
das
icebp
call
ret
mov
sub
xor
mov
mov
jge
xor
sub
aaa
clc
pop
imul
and
push
mov
stos
outsl
sub
mov
cmc
outsb
lcall
mov
int
ds
jg
in
pop
adc
xor
pop
cld
incl
push
jmp
jbe
lock
xchg
dec
cld
call
rcrl
data16
rcll
fxch
mov
jle
pop
inc
sub
adcb
dec
mov
sbb
add
jns
call
lea
js
sub
je
mov
xor
and
in
and
insl
mov
out
loopne
cmpsl
mov
push
insl
jmp
jp
fbld
mov
stos
fdivrs
call
call
fdivl
jns
mov
sar
pop
lea
sub
call
pop
ss
sahf
aaa
add
sbb
sbb
out
insl
insl
push
mov
pushl
js
inc
lea
push
lods
push
arpl
xor
lcall
decl
mov
mov
enter
out
or
push
in
imulb
sti
insl
push
dec
loop
mov
mov
xchg
xchg
pop
cs
mov
mov
std
sahf
lcall
int
mov
inc
adc
cli
lret
movsb
mov
pop
mov
mov
dec
sub
lock
es
imul
xor
fsubp
xor
adc
jbe
lret
sbb
xchg
sahf
sahf
adc
mov
imul
imul
shlb
xchg
inc
mov
mov
loope
int3
adc
mov
lcall
sahf
in
sbb
pop
push
imul
and
xchg
adc
cwtl
mov
cli
decl
push
sub
nop
mov
jb
bound
sti
ljmp
mov
subl
scas
xchg
xchg
popa
xor
inc
jmp
mov
test
stc
and
arpl
stc
cmp
push
stos
lcall
xchg
sbb
aas
mov
inc
inc
mov
repnz
ljmp
inc
push
or
xorl
pusha
cmp
bound
add
sarl
pop
fldcw
jg
jg
mov
outsb
adc
cwtl
ret
mov
sbb
jmp
ljmp
loope
fsubrs
sbb
sarl
mov
cmp
test
cltd
mov
inc
icebp
mov
mov
mov
add
xor
pop
push
test
lahf
mov
fucomip
popf
stc
pop
out
jecxz
jbe
mov
push
jns
xor
add
addr16
pop
mov
addr16
xchg
incl
add
push
push
cli
pushf
dec
jno
and
sbb
adc
incl
cmpsb
push
mov
pop
cmp
jno
push
and
in
clc
stc
jecxz
sarb
ficoms
lock
and
in
pop
loopne
fucomip
jmp
inc
dec
pop
stos
add
es
xchg
dec
cltd
cmp
outsl
lock
and
mov
lods
repz
push
daa
pop
mov
or
call
jae
iret
mov
sub
in
or
xchg
jle
pop
jmp
testb
out
xchg
xor
pop
sti
cwtl
mov
dec
ficoms
sar
fsts
jmp
ljmp
cmpsb
add
mov
sbb
push
fiaddl
inc
jnp
loop
sar
call
xlat
xchg
push
ds
pop
ret
and
fdivl
and
das
push
cmc
mov
fs
lds
call
mov
xchg
mov
cs
rclb
out
icebp
pop
movsl
pop
sub
fs
sbb
inc
sbbl
jns,pn
sub
cmp
sbb
mov
int
pop
cmpsb
lds
ljmp
mov
lock
das
mov
add
icebp
add
shr
mov
in
ss
cmp
sti
pushl
pop
inc
loopne
adc
pop
out
aam
inc
shrb
movsb
pop
testb
jge
mov
ljmp
inc
and
aas
dec
in
icebp
fnstsw
mov
push
stos
idiv
in
sub
pop
mov
sbb
cld
cmpl
inc
cmpsl
arpl
push
sbb
and
mov
mov
mov
and
aas
out
sahf
ficoml
incl
lock
jb
jno
aam
inc
pushw
adc
sbb
inc
mov
incl
and
in
sub
cmp
ret
shl
bound
aas
xor
into
arpl
jbe
scas
push
jge
pop
jmp
cmc
mov
cmp
jae
aas
into
adc
push
jno
mov
xchg
xchg
cli
and
aaa
repz
mov
sar
lcall
adc
and
pop
ret
test
ja
out
pop
movsl
aaa
pop
movsl
ljmp
jp
mov
dec
out
lcall
xchg
repnz
pop
inc
lock
ljmp
test
enter
scas
iret
sub
aaa
cmp
mov
inc
dec
mov
jl
xor
scas
rcr
or
cmp
loop
pop
dec
lcall
icebp
jp
mov
add
popa
cmp
dec
mov
push
ljmp
jne
addl
push
daa
pop
or
mov
mov
pop
test
mov
mov
call
mov
mov
aam
stc
sub
cmp
adc
bound
decl
mov
sub
cli
rcrb
jge,pn
adc
lcall
mov
loop
mov
xchg
adc
and
inc
pop
ljmp
outsb
std
outsb
in
sub
scas
pop
nop
and
jmp
shlb
pop
xchg
dec
outsl
mov
lods
mov
mov
lods
sahf
sbb
das
xor
repnz
mov
mov
dec
cmpsb
aaa
dec
xchg
shl
insl
and
pop
mov
out
push
popf
cmp
jmp
mov
sbb
repz
push
sarb
lahf
cld
dec
pop
jno
sub
or
pushl
push
loop
ds
insb
out
or
mov
mov
xchg
mov
jne
outsb
dec
sbb
insb
sbbl
pop
lcall
sbb
mov
jae
shrl
mov
fistps
movsb
mov
lea
push
scas
pop
sbb
call
insl
imul
clc
dec
mov
sub
shrl
mov
notl
xchg
cmp
lods
fists
fbstp
ljmp
popa
pop
and
cs
dec
add
xchg
dec
xchg
jbe
fsubrs
subb
pusha
mov
cld
lods
decl
lods
xchg
jecxz
subb
sub
lods
add
push
outsw
lds
dec
pop
xchg
sub
add
xor
jae
test
incl
xor
mov
cli
pop
test
jg
insb
testl
sbb
mov
in
mov
outsl
lock
mov
js
mov
mov
mov
jno
jb
clc
adc
sbb
lahf
pop
lret
lods
and
fidivrs
mov
ffreep
or
fucomip
decl
add
int
mov
lods
inc
mov
out
jbe
xor
sbb
mov
decl
std
mov
cmpsl
sub
gs
mov
mov
call
lret
push
insl
pop
fsubrl
lds
pop
cmp
mov
jae
sbb
ret
loop
popf
mov
int
sub
addl
push
shrl
push
xchg
out
movsl
sbbb
pop
fwait
int
jecxz
pop
pushf
lahf
aaa
cmp
or
and
fidivrl
dec
insb
std
incl
jecxz
or
mov
sub
xchg
pusha
call
ljmp
out
dec
jo
add
rorl
imul
ljmp
lock
push
mov
pop
insl
shrl
cs
or
fsub
mov
cmp
arpl
fwait
bound
push
sub
inc
ret
js
adc
outsl
test
adc
aam
test
decl
sahf
enter
mov
adc
gs
xor
mov
aam
add
sbb
sbb
stos
jle
or
mov
in
repz
xor
int
rcll
ror
loope
fs
cmp
push
mov
dec
call
bound
mov
jb
push
sub
call
jns
sbb
push
loope
jae
inc
arpl
out
sar
pushl
test
stos
sti
xor
or
pop
pop
add
adc
or
mov
xchg
test
rcrb
shrb
jns
or
or
mov
mov
xor
xchg
pop
arpl
xor
mov
add
jmp
push
xor
xor
xor
cmp
sti
push
cmp
lret
pop
in
pop
jge
jbe
push
stos
mov
mov
or
jmp
xor
add
pushf
xorl
les
repz
pop
pop
sarl
pop
ljmp
ret
dec
adc
ss
pop
mov
jle
shlb
push
inc
shl
add
in
mov
pushl
rdmsr
movsl
lret
adcb
test
adc
inc
pusha
cvtps2pi
test
call
ljmp
sbb
sahf
adc
jno
sub
sbb
adc
xchg
incl
adc
loopne
sbb
pop
jbe
dec
scas
adc
lea
xchg
jae
xchg
push
jmp
push
popa
add
push
sarl
bound
dec
lret
loop
sbb
push
jmp
add
sub
jo
mov
addl
icebp
pushl
sbb
mov
push
repnz
lahf
dec
out
lcall
pop
addl
mov
pop
mov
dec
mov
mov
cmp
xchg
push
shll
inc
add
movsb
dec
mov
cwtl
or
or
enter
jnp
jge
sbb
std
aaa
xor
xor
inc
loop
daa
cld
outsb
push
insb
cmp
aas
pop
adc
xor
in
push
or
fdivrp
daa
and
jmp
fwait
icebp
call
pushf
insl
inc
mov
mov
sbb
push
and
pop
decl
enter
test
mov
push
push
in
fidivl
popa
pop
push
lret
incl
addr16
movsl
jns
es
adc
adcb
enter
mov
lods
ljmp
test
mov
jg
call
nop
cmc
push
jae
loop
or
ret
sti
js
xchg
sub
incl
dec
mov
test
incl
ret
cmp
test
sbb
fidivs
jge
clc
enter
and
jp
popa
ficoml
fnstcw
cmp
idivl
cmp
test
lock
es
sti
nop
fbld
das
std
in
mov
or
sub
push
inc
es
repnz
xor
jl
sbb
and
or
aas
mov
push
pop
or
xor
lock
lret
mov
push
clc
ljmp
das
stc
add
je
pop
ret
test
gs
lea
and
xor
pop
pop
push
push
inc
and
mov
jl
cmpsb
push
ljmp
mov
lods
incl
rcrl
inc
rorl
inc
gs
mov
int3
dec
ds
jmp
mov
jbe
and
add
gs
call
clc
and
push
test
mov
pop
in
push
inc
sbb
ljmp
adc
lods
repz
cmp
xor
push
out
pop
pop
jge
in
mov
aaa
incl
mov
cmp
dec
adc
sbb
cmp
lcall
jg
aad
fdivrl
xor
or
cmpsb
sbb
jmp
mov
add
jo
fimuls
jp
push
dec
dec
popa
pushf
or
pop
loop
dec
mov
shrl
int
xor
inc
in
aaa
jmp
xchg
cltd
ja
sbb
pushl
jge
xor
mov
int3
jle
xchg
mov
rorl
lcall
std
jle
cmp
jecxz
mov
in
int
out
xchg
cmp
and
xchg
clc
jg
stc
std
shlb
aam
fcmovnbe
jecxz
rcrl
roll
jmp
mov
inc
add
mov
adcl
dec
inc
dec
xchg
xor
cli
call
cmp
es
in
and
int
xor
popa
pop
pushl
fdivrl
int
mov
sti
xchg
push
mov
push
sbb
int3
and
lcall
mov
pop
aam
jl
pop
xchg
and
inc
jae
or
inc
push
cmpsb
jns
pushl
clc
jmp
les
dec
loop
and
and
inc
mov
iret
sar
jmp
xchg
pop
adc
pop
inc
and
mov
xorb
mov
mov
add
mov
inc
lods
xchg
ficomps
pop
and
movsb
push
sbb
aad
lea
in
pop
mov
mov
ljmp
dec
mov
test
cmpsl
inc
int
mov
sub
stos
pop
pop
sub
and
outsl
lcall
mull
adc
int3
pop
jo
out
add
repz
sub
shl
or
inc
mov
jmp
test
mov
push
idivl
cmpsb
pop
cltd
imul
inc
aam
fisttpll
je
ss
lahf
adc
xor
dec
loop
ljmp
gs
push
lret
test
sti
jno,pn
sub
mov
cmp
js
add
xchg
inc
inc
xchg
xor
inc
adc
dec
adc
push
sahf
or
lods
mov
sub
decl
push
mov
or
roll
sbb
addr16
out
mov
xchg
inc
das
lock
or
lock
lcall
push
ljmp
loop
out
mov
into
out
test
movb
pop
std
call
cmp
push
inc
pop
dec
push
addr16
idiv
decl
call
xchg
dec
push
adc
pushf
leave
mov
mov
add
stos
sub
or
pop
jl
push
add
push
jmp
cmc
pop
fwait
jmp
lret
xchg
pop
dec
in
push
pop
mov
lea
mov
pop
incl
mov
jmp
pop
lret
popf
push
and
loop
push
aaa
mov
sbb
in
fwait
jg
ljmp
sbb
stos
mov
dec
sti
or
fcmovb
das
mov
testb
rorb
inc
xchg
fcmovb
xor
pushf
je
dec
mov
pop
stos
addr16
arpl
call
inc
dec
fsubrs
in
and
out
sbb
xor
xchg
mov
mov
fnstsw
or
stc
out
loop
xlat
push
dec
lcall
out
rolb
sub
test
sub
mov
popa
mov
jg
dec
or
push
fld
cmp
rorb
cltd
inc
ljmp
pusha
adc
rolb
xorb
lds
xchg
jg
jecxz
cld
adc
cmp
sahf
dec
adc
std
sbbl
adc
xchg
outsl
lock
dec
pop
mov
out
shlb
pop
pop
jge
or
dec
lcall
idiv
jmp
mulsd
daa
mov
movsl
mov
sbb
icebp
mov
rol
fsubl
inc
pop
xchg
jmp
in
outsl
cmp
xor
and
sbb
adc
pop
aaa
scas
leave
dec
movsl
loop
or
jg
enter
pop
add
ja
movsl
adc
imul
pop
neg
fsts
xchg
mov
jle
cmp
xchg
arpl
add
xor
mov
cld
lcall
dec
ret
dec
fwait
push
test
stc
icebp
ss
call
pop
mov
mov
jbe
add
aam
or
lods
mov
jg
mov
xlat
dec
jl
hlt
sub
lcall
cmp
inc
and
cmpsb
in
lahf
xchg
pop
push
dec
inc
mov
mov
xor
dec
sub
lret
add
xchg
fiaddl
push
jbe
lret
jl
call
mov
cmpsl
fwait
mov
movsl
sbb
adc
mov
int
adc
ljmp
out
mov
xchg
arpl
mov
cmp
push
clc
jmp
call
xchg
mov
lds
jecxz
inc
roll
fbstp
or
cli
das
psubsw
cltd
sbb
cmp
jbe
cmpsb
clc
incl
adc
mov
imul
or
pop
in
jbe
rolb
lret
call
jb
push
scas
outsb
xor
xchg
dec
outsl
mov
call
sti
mov
and
js
sbb
jg
mov
mov
rorb
mov
imul
lea
sub
fistps
sbb
ret
sub
insl
pushl
inc
cmp
aad
push
fimuls
pop
incb
mov
pop
in
cli
pushl
xorl
mov
inc
sar
stc
roll
pop
outsl
cld
mov
xchg
int
jl
scas
pop
xchg
jl
sbb
out
loopne
ds
jg
inc
dec
jge
adc
test
xor
or
in
lds
sub
inc
mov
mov
pop
mov
rcll
std
or
adc
or
adcl
push
adc
lds
aad
js
ja
aad
add
cmp
pop
roll
sbbb
xor
lcall
addb
std
dec
pop
js
pop
add
and
sbb
and
cmp
popf
es
push
jo
adc
inc
ljmp
jecxz
aas
jbe
jmp
or
ljmp
dec
nop
sti
and
sub
sub
repnz
jnp
aas
inc
pop
sub
xchg
jae
mov
and
or
fdivp
push
imul
ljmp
mov
dec
mov
cmc
and
stc
outsl
fdivrs
mov
mov
mov
pushl
sbb
xor
inc
or
mov
mov
outsb
add
sbb
decl
aaa
jmp
or
dec
add
test
mov
dec
dec
inc
cld
data16
jge
out
jg
jmp
movsw
shl
popf
ficoms
jl
pop
inc
stos
xchg
cli
decl
cmp
cmp
lods
sar
bound
sub
push
iret
push
xchg
xchg
push
lcall
sub
xor
xor
sub
mov
test
mov
inc
sar
or
xor
fiadds
popa
out
jmp
mov
ljmp
rorb
or
add
mov
cmc
mov
mov
push
imul
mov
dec
and
inc
bound
sahf
pop
inc
ffree
call
push
and
jg
jo
lods
mov
sbb
dec
mov
dec
and
jg
mov
pop
imul
mov
or
ljmp
lods
jl
ljmp
sbb
mov
pop
out
sub
jmp
aam
pop
pop
cs
pusha
push
ljmp
call
cltd
rcr
mov
mov
xchg
jg
ficompl
loop
ret
push
lods
lock
fwait
ljmp
mov
outsb
dec
fcomi
lods
leave
sub
das
hlt
out
jb
cmpsl
pop
jns
repnz
cmp
lret
pushl
out
fwait
mov
cwtl
lahf
mov
push
jecxz
pop
cld
push
and
ljmp
sbb
or
stc
repnz
pop
xchg
cmp
jnp
ljmp
fs
and
inc
std
jo
ficoms
add
mov
loop
popf
push
mov
push
decl
stos
icebp
cmp
mov
sbb
mov
pop
mov
sub
or
mov
rcll
call
out
pop
sbb
pop
mov
add
je
callw
ljmp
xchg
es
imul
movsl
mov
mov
cmp
std
pushl
rcll
dec
mov
pusha
jnp
xor
cmpsl
lcall
pop
loop
pop
mov
ret
stos
or
les
xor
push
arpl
imul
outsb
xchg
jno
fldl
pusha
mov
pop
xor
jnp
or
fcmovb
cmpsb
lods
sub
pop
push
bound
jmp
clc
pop
jp,pt
test
imul
jo
push
push
pop
dec
gs
fucomip
push
push
inc
cld
push
sti
xchg
cmc
inc
fisubl
pop
inc
imul
ds
lcall
data16
outsb
sbb
cmp
imul
or
popa
or
clc
dec
or
mov
jae
cld
fistl
jmp
popa
pop
inc
jmp
push
xchg
jo
push
xchg
mov
adc
push
ret
jbe
push
mov
nop
inc
fdivrp
jg
pushl
daa
jnp
mov
cmpsb
mov
fsubrl
xor
mov
dec
loopne
scas
cmpsb
incl
incl
pop
inc
insb
jno
xor
adc
mov
pop
aam
jmp
ljmp
sahf
stc
fstl
testl
sub
mov
mov
call
pop
jnp
movups
and
repnz
lcall
mov
loopne
mov
mov
ret
adc
sahf
xchg
daa
rcrb
dec
fisttps
push
push
sub
in
mov
fs
int3
jmp
in
pop
imul
push
test
testb
dec
push
repz
call
or
subl
repnz
mov
mov
adcb
inc
add
cmp
outsl
icebp
call
add
aas
mov
adc
cli
inc
imul
xchg
push
mov
ret
dec
aas
imul
sbb
aam
jecxz
out
ljmp
hlt
call
add
addr16
adc
jno
cmc
lea
push
lcall
mov
fisubs
sub
aas
pushf
out
push
mov
inc
sub
addr16
loopne
jg
call
mov
mov
les
push
mov
cmp
out
push
jmp
test
int3
mov
mov
scas
jmp
leave
int
test
push
pop
xchg
dec
xor
test
aad
dec
or
ljmp
mov
push
cmp
mov
int
sub
fdivl
lcall
cmp
cmp
div
jbe
mov
xchg
cs
sbb
mov
rorl
adc
jmp
xchg
mov
icebp
daa
push
call
dec
pop
xchg
sub
xor
je
jb
lret
loopne
ljmp
hlt
mov
add
mov
mov
adc
clc
pop
clc
daa
pop
push
aad
xchg
push
stc
arpl
jmp
add
testb
outsl
hlt
lcall
cwtl
jecxz
sbb
and
sub
sub
lods
pop
call
jg
bound
ja
lcall
mov
lds
ss
jge
call
ret
lock
pusha
outsl
repz
mov
jmp
mov
testb
es
mov
xchg
inc
add
xchg
into
jnp
jmp
jno
stc
scas
data16
pop
jecxz
jecxz
jge
sbb
in
ljmp
xor
mov
icebp
xor
ret
pandn
cmp
mov
decl
or
sbb
out
pop
rcrl
sti
dec
clc
mov
xchg
mov
out
push
add
sbb
adc
xchg
stos
add
loop
dec
sti
pushf
pushl
xchg
adc
xlat
imul
mov
ljmp
fildll
add
and
fdivr
pop
outsl
fstpl
push
stc
pop
idiv
incl
jae
pop
hlt
jmp
pushf
ss
jbe
into
mov
rclb
shlb
jnp
clc
std
and
jae
fisttpll
jmp
into
test
fstpt
mov
adc
xchg
and
stos
gs
xor
xchg
adc
jno
incl
scas
sbb
lock
jae
ja
xor
xor
cwtl
mov
mov
mov
push
pop
icebp
add
mov
push
jge
out
and
sub
ret
xchg
cmc
dec
pop
mov
sti
hlt
xchg
pop
mov
jmp
fisubs
or
sbb
jecxz
lcall
mov
into
inc
xlat
int3
out
pop
rcll
setno
sbb
jecxz
repz
cld
outsl
cld
mov
imul
xchg
cmpsb
outsl
inc
pushl
gs
or
cmp
out
push
cmp
inc
insb
lock
lods
daa
cmp
xchg
nop
insb
loop
mov
push
sbb
ss
loop
stos
mov
in
mov
add
mov
lcall
rcll
fnstsw
sarl
ss
sub
lock
add
incl
aad
dec
movsb
jns
das
sbbb
ljmp
call
lea
sub
xor
dec
popf
adc
ret
lahf
pop
cli
test
test
js
cmc
call
pop
loopne
stc
dec
lock
imul
or
jecxz
ljmp
adc
int
dec
pop
ja
scas
cli
cmc
clc
scas
pop
mov
repnz
and
clc
mov
lret
push
push
cmpb
push
stos
cs
rclb
stc
pop
mov
xchg
pop
std
out
jo
popa
mov
pop
shl
test
stos
inc
test
ljmp
andl
inc
pusha
mov
lret
fadd
push
scas
subb
addb
in
and
add
sub
or
cmc
adc
mov
add
fdivr
in
das
inc
mov
outsb
adc
mov
roll
xor
sarb
incl
sbb
rolb
xchg
jecxz
inc
mov
rcr
getsec
cmc
mov
outsl
pop
incl
clc
or
jl
add
jb
jle
out
test
movl
sub
test
das
push
and
add
fs
push
inc
fisubs
inc
push
out
fisubrs
imul
int3
pop
and
imul
pop
stos
inc
adc
adc
test
nop
sub
sti
xor
pop
add
and
jg
or
cmp
into
mov
mov
inc
add
faddl
push
sub
outsl
into
pusha
push
mov
sbb
or
nop
xchg
jno
ljmp
clc
pop
inc
les
sub
adc
lahf
test
aas
push
jnp
fildll
mov
pop
pop
add
addb
shl
scas
outsb
mov
inc
jns
or
cltd
addr16
dec
jecxz
pushl
and
mov
call
mov
mov
add
enter
ret
push
lods
cmpsb
mov
outsl
and
movb
adc
mov
sub
test
ja
push
cmp
mov
jnp
decl
add
xchg
gs
cli
pop
imul
pop
cmpsl
add
pop
inc
mov
or
push
cli
pop
orl
mov
push
std
xchg
fisubs
mov
or
xor
cld
decl
add
insb
cmp
mov
aaa
repnz
imul
or
inc
xchg
add
adc
or
add
add
add
insl
sti
jmp
pushl
jb
push
je
imul
dec
outsl
fs
gs
popa
outsb
fs
inc
adc
outsb
inc
imul
and
div
aas
jbe
outsb
push
arpl
je
outsl
pop
je
jb
insl
fistpll
dec
outsb
je
push
adc
pop
push
jb
jae,pn
and
adc
and
divl
jns
push
insl
push
imul
testb
nop
stos
cli
lods
and
jo
outsb
mov
insb
or
popa
in
pop
xlat
mov
sbb
sub
call
fidivl
pop
popa
addr16
cmp
andl
dec
inc
insl
stos
mov
loopne
rsm
pop
inc
jge
mov
cli
add
add
mov
add
outsb
add
or
pop
add
push
pop
add
std
mov
cmp
lods
xchg
add
xor
xchg
or
das
inc
pusha
add
imulb
adc
enter
add
pop
cmp
nop
jne
push
inc
cs
add
mov
add
clc
pop
push
and
inc
cs
pop
nop
pop
popa
insb
mov
mov
jo
mov
daa
addr16
cs
cmp
cmp
cmp
push
add
mov
in
rorb
add
in
dec
add
inc
jae
jbe
mov
cmpsb
cmp
pop
dec
push
add
inc
add
roll
add
add
add
add
add
add
add
inc
add
call
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
xor
sub
jb
shl
mov
inc
xor
je
mov
add
jne
mov
sub
adc
adc
add
jne
mov
sub
adc
adc
jne
inc
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
nop
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
pusha
add
sbbb
add
mov
add
add
add
addb
push
add
add
orb
add
sbb
add
inc
add
orb
add
push
add
add
add
add
add
add
add
addb
add
or
add
xor
add
pop
add
cmp
add
addb
cmp
add
test
add
rolb
add
clc
add
xor
add
and
add
dec
add
xor
add
jo
add
cwtl
add
sub
add
rolb
sub
add
call
add
add
add
sub
add
cmp
addb
add
or
add
add
add
add
or
add
add
add
add
or
add
add
enter
lock
add
add
add
add
add
stc
add
dec
add
add
add
add
cli
add
call
add
add
add
add
add
add
cld
add
push
add
add
add
add
add
add
add
xor
add
or
add
add
add
add
add
add
add
add
add
add
dec
add
add
or
add
add
sub
add
call
add
add
add
add
adc
rolb
add
add
add
add
add
add
add
adc
adc
add
or
add
add
add
adc
cwtl
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
cld
and
mov
add
or
add
and
test
add
or
add
xor
sbb
add
or
add
add
add
add
cmpsb
add
add
add
add
add
add
add
add
add
xor
add
or
add
add
add
add
sub
add
or
add
add
push
add
add
add
add
add
add
add
add
add
or
add
cmp
add
add
xchg
push
add
mov
add
add
add
add
add
add
add
add
add
clc
add
addb
add
or
add
add
add
pop
or
add
jne
add
add
add
add
add
add
add
xor
add
add
xor
add
sub
add
sbb
add
sbb
add
add
add
add
add
and
add
jae
add
jae
add
adc
add
adc
add
add
add
jg
add
add
add
jg
add
jg
incl
add
addb
add
incl
and
out
add
loopne
xorb
add
enter
xlat
rolb
incl
data16
add
pushw
stos
stos
stos
stos
stos
stos
stos
stos
xor
mov
mov
ja
ja
ja
ja
xchg
xor
ja
ja
ja
ja
shll
data16
ja
ja
ja
ja
add
ja
ja
ja
ja
xor
push
ja
ja
jge
xor
ja
ja
ja
ja
and
ja
ja
ja
ja
addl
xchg
ja
ja
ja
shll
ja
ja
ja
ja
ja
add
arpl
push
push
ud0
in
add
arpl
adc
cld
add
arpl
adc
ud0
cld
add
arpl
push
push
ud0
cld
les
add
adc
jae
inc
add
data16
adc
ud0
sar
data16
add
ud0
rol
data16
ja
jl
inc
push
data16
mov
data16
xor
data16
data16
add
add
nop
add
add
add
add
mov
add
add
sbb
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
push
or
add
add
add
add
add
incl
add
add
add
push
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
push
add
add
add
mov
incl
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
fadds
cmpsb
add
incl
add
add
add
push
add
add
faddl
inc
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
jb
push
add
add
add
add
add
push
add
add
adc
insb
add
add
add
insl
add
add
add
add
jns
add
add
nop
add
add
or
cmp
dec
add
add
add
add
and
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
ds
add
add
add
push
add
add
push
add
add
add
add
add
pop
add
push
add
add
push
add
mov
pop
add
incl
add
add
add
push
add
add
or
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
gs
incl
add
add
add
push
add
add
addl
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
add
add
incl
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
and
dec
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
data16
add
add
add
incl
add
push
add
add
dec
add
xor
push
add
add
incl
add
add
add
add
add
add
add
add
add
push
add
add
test
data16
add
add
add
incl
add
add
add
add
add
add
add
add
jl
add
add
add
add
add
add
add
add
add
add
add
add
in
in
add
in
add
les
lods
mov
mov
xchg
lods
lods
add
xor
test
add
movsb
add
add
add
add
add
add
add
add
je
xor
insb
add
add
add
add
addb
test
pop
add
mov
add
xchg
add
add
xchg
add
hlt
hlt
add
in
in
add
jecxz
add
fcmovnu
add
lret
cmpsl
ret
lcall
add
cwtl
cwtl
add
int3
add
mov
add
add
mov
imul
lods
add
rol
mov
lret
add
add
loopne
add
ljmp
dec
test
test
push
aas
outsl
push
push
xchg
add
incl
cmp
jns
add
inc
jp
add
add
test
jbe
test
and
cld
cld
cld
add
adc
adc
adc
adc
adc
push
pop
add
cld
adc
pop
add
add
pop
add
loop
add
lret
lret
or
adc
pop
adc
add
push
repz
incl
add
adc
pop
adc
adc
adc
jecxz
out
pop
adc
loop
add
ret
jecxz
out
pop
adc
push
int
lret
lret
rcl
adc
lret
repz
jmp
add
loope
loope
pop
add
adc
adc
adc
adc
adc
adc
stc
push
incl
add
incl
add
add
add
add
add
add
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
js
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
ds
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
or
xor
cmp
sbb
lods
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
or
add
pop
add
add
add
add
jae
dec
add
jae
je
push
add
add
xor
xor
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
loopne
sbb
xor
push
add
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
loopne
sub
xor
push
add
incl
add
add
add
add
add
add
add
add
add
add
add
push
add
add
loopne
inc
add
add
add
incl
add
add
add
add
add
add
add
add
add
push
add
add
loopne
pop
add
add
add
incl
add
add
add
add
add
push
add
add
loopne
jne
xor
push
add
add
incl
add
push
add
add
loopne
xchg
xor
push
add
add
incl
add
add
add
add
add
add
add
add
add
push
add
add
loopne
xchg
add
add
add
add
incl
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
or
add
add
rolb
add
add
jae
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
adc
cmp
add
cmp
add
cmp
add
inc
aas
add
add
dec
add
sbb
add
add
sbb
adc
das
push
add
cmp
add
push
pusha
add
add
or
add
adc
or
add
add
jl
or
jg
or
jnp
cmp
inc
add
inc
dec
add
dec
push
add
inc
jnp
adc
add
pop
add
inc
add
inc
add
dec
add
dec
add
dec
add
dec
add
push
add
push
add
push
add
add
pop
add
push
add
push
add
pop
add
pop
add
pop
add
pop
add
pusha
add
bound
popa
pop
popa
add
popa
add
push
add
arpl
popa
imul
insb
push
add
jo
jo
jno
jne
jbe
jns
jp
jle
jle
mov
jnp
add
test
add
mov
add
pushf
add
add
add
add
add
or
add
imul
add
jnp
add
jae
add
jp
add
jb
add
jp
add
dec
mov
add
les
add
int
add
int
add
lds
add
jmp
add
in
add
add
pmuludq
add
pop
incl
add
jge
add
mov
or
stos
add
mov
add
mov
mov
add
mov
add
popl
dec
nop
xchg
add
mov
jge
popl
push
lcall
push
sahf
mov
add
mov
add
mov
int3
add
mov
add
mov
ret
mov
rolb
add
add
leave
enter
les
xor
rolb
sub
add
shr
add
xlat
call
add
incl
and
jmp
xor
repnz
sti
incl
xor
incl
cmp
rol
add
fiadds
inc
loope
add
testb
repz
add
add
add
stc
add
mov
add
xchg
fwait
add
sahf
add
mov
mov
xchg
add
cmpsb
add
popf
movsb
add
stos
mov
lcall
add
mov
stos
add
mov
add
mov
add
mov
mov
add
rcrl
add
fsubs
add
fidivs
add
in
add
mov
movb
ror
mov
iret
add
lret
mov
fadds
mov
rcl
add
aad
add
repz
lods
jmp
incl
lret
add
movl
faddp
add
lret
aad
enter
roll
roll
fucomp
rolb
in
add
jmp
enter
aad
jmp
fildl
lock
ret
add
fucomp
add
add
in
add
loop
add
jecxz
add
ljmp
leave
in
add
jmp
clc
add
in
lock
out
sti
add
repz
repnz
repz
repnz
fcomi
incb
fdivrp
incl
out
out
jecxz
in
jmp
jecxz
ljmp
add
hlt
incl
in
idiv
add
stc
incl
ljmp
add
repz
add
hlt
incb
std
repz
incl
cmp
cmp
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
cmp
xor
add
add
add
add
add
insb
orb
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
insb
orb
add
ss
imul
or
or
or
or
or
or
or
or
or
or
or
or
and
push
and
add
add
add
or
or
or
or
or
or
daa
sub
sub
sub
sub
sub
sub
add
add
add
push
adc
cmpsl
or
or
lods
lods
lods
lods
lods
test
or
push
jno
adc
add
sbb
add
leave
or
or
or
or
or
or
shrb
jbe
or
stos
sbb
add
add
dec
pop
add
or
or
or
or
or
jmp
stos
sahf
cmp
or
add
add
add
skinit
or
or
or
or
or
or
out
jmp
daa
or
dec
sbb
add
add
adc
fisttps
jecxz
out
call
or
div
loop
or
lods
or
or
or
pop
dec
adc
add
pop
dec
adc
loop
out
call
or
or
out
imul
or
daa
or
or
or
pop
dec
adc
add
popa
dec
adc
jecxz
out
ljmp
or
out
out
testb
daa
call
daa
popa
dec
adc
add
arpl
add
or
or
or
daa
out
or
or
out
out
out
or
or
or
or
or
arpl
add
add
pop
add
or
or
or
or
or
or
lock
or
or
daa
out
or
push
add
sbb
or
or
or
or
or
clc
clc
lock
or
or
or
or
push
add
sbb
or
or
or
sub
daa
clc
clc
clc
clc
sub
or
or
or
sub
add
addr16
sbb
xor
xor
xor
xor
aaa
inc
cmp
stc
stc
stc
stc
das
clc
or
sub
or
xor
addr16
sbb
add
dec
adc
push
mov
mov
nop
or
xor
stc
stc
divl
stc
sub
or
daa
cmp
jo
adc
push
add
orl
into
or
daa
into
das
jmp
inc
div
cld
cld
cmp
xor
jb
or
add
add
mov
lea
xchg
or
das
cltd
inc
fwait
pushf
cld
cld
cld
cld
inc
divl
inc
das
xchg
push
or
add
add
adc
xor
xor
popf
mov
cld
lahf
popf
inc
xchg
jnp
js
or
pusha
dec
adc
add
pop
dec
adc
fmuls
in
repnz
cmp
popf
cld
mov
std
std
cld
mov
jge
jns
or
or
pop
dec
adc
add
arpl
rorb
rorl
aad
flds
mov
std
std
mov
mov
xor
daa
aad
aad
dec
sbb
add
fs
sbb
aad
fldcw
repnz
inc
cli
mov
loopne
std
std
std
iret
int3
pushf
inc
aaa
repnz
fs
sbb
add
arpl
add
or
or
sub
inc
cli
mov
icebp
std
std
std
std
iret
mov
hlt
aaa
fsubl
xlat
or
arpl
add
add
sbb
or
sub
inc
cmc
scas
std
loopne
std
std
std
iret
cli
pushf
repz
xlat
or
gs
sbb
add
add
push
add
or
or
sub
inc
repz
std
std
mov
imul
or
bound
add
bound
add
sub
cmp
lahf
cmc
mov
sti
sti
sti
test
fimull
or
add
addr16
push
add
daa
fidivl
cmc
cmc
cmc
cmc
popf
faddl
sub
addr16
push
add
add
or
or
inc
fldt
fstp
faddl
fisubrl
mov
push
sbb
add
add
add
movsb
or
or
xor
fcmovu
cmp
das
mov
or
add
jp
jl
add
add
mov
sub
mov
or
daa
movsl
or
jp
jl
add
adc
add
add
daa
movsb
or
sub
or
or
pop
adc
add
add
add
orb
add
or
daa
mov
mov
or
pop
outsl
orb
add
mov
lret
xchg
insl
push
add
add
mov
or
mov
add
push
jg
dec
xchg
insl
push
add
pop
jle
xchg
mov
add
add
mov
mov
mov
mov
inc
das
add
add
test
add
add
push
push
push
pop
daa
inc
or
inc
xor
add
add
add
push
push
push
pop
add
add
add
call
add
add
add
add
add
out
add
or
sub
add
add
add
add
add
add
add
add
add
add
add
adc
imul
add
add
add
add
push
add
add
add
stos
add
add
add
add
add
add
add
add
add
add
add
add
add
or
xor
jns
add
or
xor
jp
add
or
xor
jnp
add
or
xor
add
add
add
add
or
aaa
add
add
or
cmp
jg
add
or
cmp
addb
add
xchg
add
add
add
add
and
inc
add
add
add
add
add
mov
add
sub
add
adc
inc
add
add
adc
inc
add
add
add
add
sub
add
aas
add
add
add
cmp
add
adc
dec
add
add
add
add
xor
add
adc
push
add
add
cmp
add
adc
push
add
add
add
add
add
add
add
das
add
add
add
xor
add
adc
pop
add
add
add
add
add
add
add
add
add
add
cmp
add
addb
add
add
push
xchg
add
add
add
adc
add
xor
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
xor
xor
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addb
add
add
add
add
add
add
xor
add
add
add
add
xor
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
imul
outsl
add
jae
or
inc
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
jo
add
add
add
adc
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
je
jb
insb
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
je
jb
insb
add
add
add
out
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
out
adc
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
push
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
popa
add
and
sub
addb
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addl
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
jl
pop
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addl
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
test
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
test
adc
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
cmp
add
add
add
add
add
add
add
add
insb
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
jns
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
or
inc
add
add
add
add
add
xchg
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
and
xor
add
inc
add
add
or
inc
add
add
add
add
popl
sbb
add
add
add
add
add
add
add
add
add
add
xor
add
add
lea
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
insb
add
add
add
adc
sbb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
adc
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
movsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
sub
add
add
xor
add
add
add
imul
inc
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
enter
add
pop
add
add
fiaddl
dec
add
add
add
add
add
add
add
add
add
add
push
add
add
push
add
add
add
add
add
pop
add
push
add
add
add
add
incl
add
add
add
push
add
add
push
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
push
add
add
push
add
add
add
incl
add
add
add
add
add
add
ds
add
add
add
add
add
cmp
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
push
add
add
push
add
test
or
data16
incl
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
mov
add
add
add
incl
add
add
add
add
add
add
add
add
add
push
add
add
mov
add
add
add
incl
add
add
add
add
add
add
add
add
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
xor
add
aaa
push
add
push
add
xor
inc
cmp
jo
jo
add
add
popl
pop
js
add
pusha
pusha
add
aas
pop
add
pop
add
mov
mov
add
addb
dec
outsl
add
pusha
add
lahf
lahf
add
outsl
add
jo
add
filds
inc
mov
add
addr16
add
push
addb
inc
pusha
add
pop
add
mov
add
jg
add
add
rcl
add
outsl
add
outsl
add
mov
add
addb
mov
add
addr16
popl
add
inc
nop
add
dec
addb
push
scas
add
push
scas
add
dec
jo
add
add
pusha
nop
add
push
jg
push
nop
add
add
jo
add
incl
call
incl
inc
incl
pushl
incl
decl
scas
add
jg
dec
cmpsl
iret
add
js
add
dec
jo
out
mov
add
out
add
pop
iret
add
pop
mov
add
add
add
xor
nop
dec
scas
add
xlat
rolb
mov
lock
loopne
add
pop
popl
add
push
add
xlat
rolb
jg
popl
jo
popl
xor
jg
push
inc
outsl
add
xchg
add
dec
add
lock
aas
push
add
nop
nop
add
iret
iret
add
daa
and
sldt
rol
outsl
outsl
outsl
add
movups
pusha
pusha
pusha
add
adc
pushl
add
lahf
outsl
add
cmpb
pushl
add
pop
add
lock
add
sub
add
sbb
add
aaa
xor
shlb
add
fcomp
add
daa
aas
add
xor
add
jg
shlb
add
push
push
add
sldt
jo
add
push
jg
pop
pop
add
add
pusha
add
jg
add
push
add
and
add
push
add
pop
aas
das
add
addr16
add
filds
add
pushl
add
incl
add
add
add
add
aas
out
inc
add
fdivrs
add
mov
add
rorb
jo
add
jg
add
das
xor
aas
addr16
add
lahf
adc
imul
add
mov
adc
add
add
pop
popl
and
add
nop
adc
iret
xchg
add
xchg
add
das
jg
add
xchg
add
ja
add
test
add
outsl
xor
pop
cmp
shll
add
dec
xor
pop
inc
inc
add
sub
pop
cmp
add
xor
add
fildl
pop
aas
pop
add
xor
and
add
mov
xor
scas
add
stos
stos
add
data16
jg
add
add
add
aaa
push
add
bound
sub
addb
aaa
xor
sub
dec
add
inc
data16
pop
addl
sub
add
add
add
mov
add
addb
das
dec
add
addr16
fcmovnu
add
xlat
xlat
add
dec
add
pop
add
pop
addl
add
add
inc
aaa
push
add
jg
dec
cmp
loope
lds
in
lret
cmp
popl
push
or
sub
sub
add
pop
add
add
arpl
dec
cmp
inc
xor
add
aaa
push
add
ja
outsl
inc
jg
push
cmp
imul
cmp
push
xor
aaa
push
add
pop
add
add
xchg
add
add
popl
jne
js
pop
pop
add
addb
inc
jg
das
dec
ja
dec
cmp
pop
aas
outsl
add
arpl
popf
inc
stos
add
rcl
add
push
jg
xchg
add
jp
jae
addl
mov
mov
mov
mov
mov
mov
mov
mov
data16
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
lods
pop
lods
pop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
or
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
aaa
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
lods
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
mov
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
add
add
add
and
push
popf
popf
popf
popf
popf
popf
popf
popf
popf
cmpsb
lds
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
mov
add
add
add
and
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
sti
and
mov
mov
xorb
add
mov
mov
add
add
add
add
sti
and
mov
mov
mov
mov
sarb
mov
mov
add
add
add
daa
and
add
add
add
sbb
add
test
test
test
test
add
add
add
add
inc
and
js
sbbl
addl
addl
addl
adc
inc
aaa
and
ja
js
js
js
js
js
imul
js
js
js
js
js
add
add
add
add
jl
aaa
inc
aaa
daa
and
ja
ja
addb
js
and
gs
addb
addb
add
add
inc
aaa
daa
and
je
je
je
je
je
je
pop
arpl
and
imul
je
je
je
je
je
add
add
add
add
inc
aaa
daa
and
jae
jae
jae
jae
jae
pop
jns
data16
gs
jae
jae
jae
jae
jae
add
add
add
add
aaa
aaa
daa
and
outsl
jo
jb
jb
jb
jae
pop
addr16
and
push
jb
jb
jb
jb
jbe
add
add
add
add
daa
and
test
test
push
and
push
test
test
add
add
and
add
pushw
push
add
sbb
and
add
pop
add
add
add
add
pop
cmp
arpl
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
pop
pop
and
call
pop
pop
pop
pop
cmp
pop
popa
call
call
call
add
add
add
push
and
inc
aaa
and
and
in
in
in
in
dec
add
dec
pop
in
in
in
in
in
in
out
add
add
add
add
and
inc
aaa
daa
and
sub
pop
std
std
std
std
std
std
std
std
push
dec
inc
push
push
dec
push
std
std
std
std
std
std
std
std
std
std
std
fstps
add
add
add
push
and
inc
aaa
daa
and
dec
push
dec
push
dec
dec
dec
dec
dec
dec
dec
dec
push
dec
push
inc
push
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
add
add
add
add
inc
aaa
daa
and
inc
sub
inc
inc
inc
inc
inc
inc
dec
dec
xor
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
add
add
add
add
aaa
aaa
daa
and
cmp
ds
aas
inc
mov
adcl
inc
ds
inc
add
add
add
add
daa
daa
and
das
das
das
das
das
das
das
das
das
das
das
xor
xor
xor
xor
das
das
das
das
das
das
das
das
and
add
add
add
add
and
sub
sub
sub
sub
sub
sub
push
sbb
out
out
out
out
out
out
out
out
out
out
out
sub
add
add
add
and
and
or
adc
sbb
fcoms
fcoms
loopne
add
push
adc
or
adc
sbb
sbb
loopne
loopne
loopne
loopne
loopne
loopne
loopne
add
add
push
add
adc
or
adc
adc
add
or
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
push
add
or
pop
or
or
add
or
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
push
add
add
pop
or
or
dec
add
add
add
iret
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
out
jecxz
add
add
add
add
add
add
add
add
add
add
incl
incl
add
add
incb
add
add
cld
add
add
pop
clc
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
pop
jmp
add
add
pop
jmp
add
add
pop
push
add
add
pop
push
add
add
pop
push
add
add
ud0
lock
add
pop
push
add
add
aas
push
add
add
jg
push
add
add
jmp
add
add
jmp
add
add
push
mov
add
add
add
add
add
xor
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
xor
xor
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addb
add
add
add
add
add
add
xor
add
add
add
add
xor
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
imul
outsl
add
jae
or
inc
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
or
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
cmp
ds
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
inc
add
sub
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
add
or
add
or
add
adc
add
or
add
adc
add
adc
stos
add
add
add
inc
add
add
add
jle
add
jle
add
jg
add
jg
add
jg
add
jle
add
jl
add
js
add
jo
add
pusha
addb
inc
insb
add
add
add
add
jmp
add
jmp
add
jmp
cld
jmp
cld
jmp
jl
jmp
sbb
jmp
sbb
jmp
and
jmp
cmp
lcall
jg
incl
incl
incl
ud0
add
incl
aas
incl
jg
incl
incl
out
incl
incl
cmp
lcall
cmp
aas
out
call
add
add
add
add
add
add
add
add
add
add
inc
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
adc
add
xor
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
data16
add
add
xor
xor
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
add
add
add
add
add
add
add
je
jb
insb
add
add
add
addb
add
add
add
add
add
add
xor
add
add
add
add
xor
add
adc
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
imul
outsl
add
jae
or
inc
add
add
add
add
add
push
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
je
jb
insb
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
add
sub
add
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cmp
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
arpl
imul
add
add
add
add
add
add
push
add
add
pop
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
imul
push
add
je
popa
add
and
dec
add
jne
je
push
add
data16
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
cmp
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
outsl
add
and
push
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
insb
add
arpl
and
push
add
add
add
popa
add
imul
add
add
jne
jo
je
and
xor
xor
xor
xor
sub
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
outsb
add
insb
add
add
js
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
add
outsb
add
add
jo
jne
jb
outsb
add
add
outsl
add
add
add
bound
imul
push
add
outsb
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
cmp
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
mov
inc
inc
and
add
inc
push
dec
and
push
add
fs
and
add
andb
adc
add
mov
addb
nop
addb
inc
shlb
pop
or
and
test
push
rol
adc
or
and
mov
addb
inc
or
inc
add
add
or
adc
or
add
rcrb
nop
adc
or
or
and
nop
add
sub
adc
cwtl
adc
addb
or
or
or
adc
add
and
push
inc
addb
add
sub
adc
adc
nop
rorb
shlb
add
adc
adcb
and
cwtl
push
inc
adcb
adc
mov
or
add
or
or
adcb
cwtl
rolb
pop
inc
or
cwtl
or
inc
orb
push
rorb
rolb
inc
adc
sub
test
dec
push
adc
adc
and
and
adc
add
and
adc
and
nop
and
or
dec
nop
inc
add
mov
and
pop
nop
nop
and
subb
add
inc
test
or
pop
inc
orb
add
adc
adc
or
or
adc
nop
add
or
inc
adc
or
cwtl
dec
push
rorb
or
inc
or
cwtl
add
pop
adc
adc
mov
adc
adc
and
adc
adc
add
sub
mov
push
or
adc
adc
and
inc
inc
add
push
push
nop
push
dec
or
and
adcb
adc
add
adc
adc
adc
or
inc
or
rcrb
inc
and
or
and
and
or
adc
and
adc
nop
inc
adcb
and
or
add
add
subb
or
adc
adc
test
addb
add
adc
adc
and
add
adc
push
mov
or
nop
nop
or
cwtl
or
cwtl
or
inc
push
sub
adc
adc
push
sub
test
or
and
inc
rolb
adc
inc
or
add
push
inc
add
and
push
push
orb
addb
or
or
and
push
inc
add
add
sarb
add
add
add
add
add
add
add
push
add
out
jbe
add
push
sti
add
pop
mov
add
aam
add
jne
add
aam
add
push
clc
add
jle
add
jbe
add
hlt
mov
add
push
std
add
pop
stc
add
clc
add
pop
cld
add
add
ja
add
fdivrl
add
push
mov
add
jg
add
push
cli
add
push
incb
into
cmc
stc
add
mov
add
mov
add
je
add
idiv
add
cmc
mov
add
pop
incl
fidivs
out
push
incl
into
aam
add
jge
add
jge
add
hlt
cld
add
push
mov
add
cld
mov
add
fdivr
add
std
add
mov
add
jbe
add
push
mov
add
jne
add
fdivrl
add
jl
add
fnstsw
add
ja
add
stc
add
cmc
std
add
jg
add
aam
add
fidivrs
add
push
cli
add
aad
add
push
incb
lret
jg
add
push
clc
add
pop
incl
fidivrs
add
pop
clc
add
ja
add
fdivr
add
jge
add
push
mov
add
jl
add
fdivr
add
push
incl
out
fdivrl
add
idivl
add
push
mov
add
jne
add
jle
add
add
pop
mov
add
xlat
stc
add
jl
add
cld
add
pop
mov
add
cmc
mov
add
push
cld
add
push
mov
add
jge
add
sti
add
xlat
mov
add
xlat
incl
into
cld
mov
add
ja
add
pop
clc
add
ja
add
push
mov
add
mov
add
idiv
add
jg
add
pop
mov
add
idiv
add
incb
cli
mov
add
fdivr
add
push
sti
add
cli
add
push
cld
add
cmc
incb
sti
hlt
stc
add
ja
add
cmc
mov
add
pop
incb
iret
aad
add
mov
add
ja
add
pop
mov
add
fdivrl
add
std
cld
add
aam
add
add
pop
incl
out
pop
mov
add
jge
add
pop
mov
add
jg
add
std
mov
add
ja
add
mov
add
push
incl
xlat
mov
add
je
add
fdivrl
add
cld
mov
add
ja
add
aam
add
std
incl
lret
idivl
add
jg
add
aam
add
jle
add
fnstsw
add
push
mov
add
std
incb
out
aam
add
hlt
incl
out
push
cld
add
jge
add
mov
add
push
mov
add
push
mov
add
fnstsw
add
xlat
mov
add
cld
add
pop
clc
add
je
add
push
incb
cli
fdivrp
add
jl
add
jne
add
fistpll
add
incl
ljmp
add
aam
add
hlt
clc
add
mov
add
push
mov
add
incb
jmp
mov
add
pop
mov
add
mov
add
aad
add
pop
sti
add
cld
stc
add
fdivrl
add
pop
clc
add
cld
incl
cli
fdivrp
add
xlat
clc
add
jge
add
cld
mov
add
cld
cld
add
mov
add
pop
mov
add
idivb
add
fidivrs
add
mov
add
push
mov
add
mov
add
xlat
mov
add
jl
add
jbe
add
mov
add
hlt
cld
add
push
incb
jg
add
aad
add
push
mov
insb
dec
rclb
pop
pop
iret
dec
cmp
jb
adcb
push
mov
daa
add
movsb
push
loopne
sub
aam
inc
imull
pop
inc
cmp
jo
fst
popa
inc
jnp
and
mov
and
push
mov
push
out
xchg
fimull
push
jno
sti
std
arpl
aad
aas
and
sbb
cmp
jo
sub
mov
push
test
ror
outsl
jbe
dec
into
xor
jg,pn
adc
bswap
pushf
mov
dec
ds
jnp
cmp
sub
pop
push
pop
loopne
ss
fsts
test
cld
xor
push
out
lret
daa
shll
dec
jle
sahf
sub
ficoml
imul
pop
aam
test
out
xlat
jg
iret
int3
push
fwait
adc
sahf
orl
fwait
in
popf
mov
pusha
pop
loope
or
fmull
aaa
ficoml
sti
lea
mov
mov
sub
pop
add
icebp
adc
inc
nop
pop
xchg
push
popa
push
in
xor
sub
mov
popa
loope
lds
push
es
lea
dec
xchg
in
decl
fadds
add
mov
dec
fistpll
mov
mov
add
xor
outsl
cmp
leave
roll
pop
in
mov
movsb
rcr
icebp
cmpsb
pop
in
pop
push
outsl
cmc
jo
insl
adc
cmp
mov
push
int3
bnd
sub
iret
jno
xchg
imul
xor
pop
mov
std
pushf
cltd
arpl
ja
xlat
js
inc
push
fcomip
cmpb
loop
mov
lods
push
adc
inc
data16
ljmp
xchg
jne
lret
cmp
push
es
insl
leave
leave
cs
sbb
dec
jbe
cmp
pop
sub
test
add
push
mov
cltd
stc
loopne
ds
cmpsb
inc
shll
out
sub
mov
and
and
and
push
add
in
push
jns
xlat
insb
and
and
push
loope
adc
test
pop
cmp
sti
test
dec
cmpsl
xor
scas
fiadds
ss
out
sbb
testb
ljmp
repz
lds
xor
loop
inc
or
and
jle
das
sbbb
adc
mov
test
test
adc
test
dec
aaa
dec
dec
sbb
cmp
mov
xchg
push
push
jo
clc
push
mov
adc
add
out
std
dec
xor
cmc
movsb
das
jb
mov
pop
mull
lcall
test
shll
loope
push
lret
pushf
dec
cmpsb
add
sub
dec
jge
xor
lret
or
test
ds
pop
insb
sbb
fs
iret
movsl
or
inc
inc
sbb
std
push
aas
xor
scas
je
jo
sbb
add
stc
jnp
add
daa
dec
std
mov
dec
jl
nop
sub
cmp
add
lods
popa
pop
lock
adc
loope
int3
idiv
mov
xor
mov
adc
or
xchg
mov
fists
push
mov
out
sahf
mov
inc
dec
push
insb
popf
cmpsb
xorl
push
or
push
sub
jb
and
je
pop
lods
sbb
push
fsub
fsubl
push
ret
sub
data16
fmuls
aad
pop
and
stos
or
out
sbb
and
in
jae
push
cltd
bound
xchg
and
cld
inc
scas
test
inc
mov
leave
pop
mov
jl
sub
add
inc
pop
inc
push
push
icebp
mov
mov
push
ljmp
pop
dec
adc
mov
mov
xlat
push
test
ret
xor
or
roll
or
cmp
ja
push
repz
pop
sbb
or
pushf
and
cmp
dec
je
call
sbb
jb
daa
aas
xor
imull
daa
and
dec
sub
add
mov
js
mov
nop
push
stos
clc
test
add
fisttpl
add
adc
push
popa
sbb
bound
xor
pop
imul
add
jae
nop
out
push
out
adc
shlb
inc
jnp
xor
test
jne
movsb
push
mov
sub
std
rcrl
in
add
xorl
cli
cmp
mov
xchg
rorl
xor
mov
xor
dec
pop
ds
fstpt
lds
pop
adc
push
stos
and
movsl
gs
xor
hlt
rorb
out
in
imul
jnp
mov
add
mov
enter
mov
out
xor
adc
xchg
xchg
repnz
call
sub
lcall
inc
negb
mov
mov
fstps
jne
aas
jne
psrad
fildll
add
mov
daa
inc
outsb
repz
das
fdivr
inc
lahf
inc
sbb
out
push
mov
fbld
repz
dec
mov
roll
or
call
insl
fcoms
insl
loopne
sbb
testb
mov
cmp
test
in
or
stos
daa
sub
inc
xchg
pop
rclb
fbld
roll
jbe
mov
jbe
xor
add
sbb
xchg
adc
add
dec
add
mov
add
add
dec
add
aam
add
hlt
dec
add
add
add
dec
add
and
add
dec
add
ds
add
add
add
dec
dec
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
outsl
jae
dec
gs
popa
addr16
