call
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
xor
mov
mov
pusha
call
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
pop
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
jmp
ret
std
xor
mov
cld
add
mov
mov
shl
sub
mov
mov
movl
mov
cmp
je
sub
sub
je
sub
lea
mov
sub
jb
mov
sub
ja
mov
jbe
mov
popf
dec
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
pop
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
cmp
je
sub
xor
movl
add
and
addl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
pop
add
jmp
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
push
push
push
pushl
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
call
in
sub
push
pushl
push
push
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
call
in
sub
push
pushl
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
add
jmp
call
in
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
add
jmp
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
add
jmp
stos
stos
stos
scas
and
add
and
add
and
add
add
call
and
add
and
add
and
add
and
add
and
add
and
add
add
test
add
push
and
add
add
add
add
sahf
and
add
add
add
add
pusha
and
add
and
add
and
add
add
les
add
test
add
xchg
and
add
add
inc
and
add
and
add
and
add
add
add
and
add
add
add
or
add
add
add
add
add
add
and
add
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
and
add
and
add
add
call
and
add
and
add
and
add
and
add
and
add
and
add
add
test
add
push
and
add
add
add
add
sahf
and
add
add
add
add
pusha
and
add
and
add
and
add
add
les
add
test
add
xchg
and
add
add
inc
and
add
and
add
and
add
add
add
and
add
add
add
or
add
add
add
add
add
add
add
je
jne
jb
outsb
je
jb
arpl
jae
cmpsb
add
je
gs
imul
repnz
imul
jb
je
arpl
add
push
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
insb
jae
jb
outsb
inc
add
aad
inc
gs
gs
inc
imul
gs
jb
jbe
je
push
jb
imul
push
add
dec
jo
outsb
dec
jne
gs
add
push
push
je
imul
inc
add
roll
dec
gs
jo
jb
add
cmp
fs
imul
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
push
add
outsl
jae
dec
popa
outsb
fs
add
dec
outsl
arpl
dec
outsl
arpl
data16
je
je
dec
popa
outsb
fs
add
aam
inc
gs
jb
jbe
push
jns
gs
add
add
je
imul
bound
gs
add
xchg
add
je
jne
jb
outsb
je
push
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
imul
outsb
je
outsl
insb
add
add
popa
jo
gs
jb
jns
dec
inc
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
imul
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
push
add
addr16
arpl
jo
inc
imul
push
bound
je
add
add
push
outsb
jb
imul
jb
gs
sbb
insb
imul
outsl
outsb
add
add
addr16
jne
jb
inc
imul
push
dec
inc
jb
add
mov
push
push
gs
popa
addr16
outsl
js
add
and
inc
js
jb
arpl
outsl
outsb
inc
add
addb
dec
inc
gs
popa
insb
insb
outsl
arpl
mov
inc
push
add
inc
gs
gs
imul
inc
dec
dec
xor
cs
insb
add
add
dec
dec
outsb
jae
popa
insb
insb
inc
jb
jbe
jb
add
inc
gs
jbe
imul
imul
push
add
dec
inc
outsl
outsb
imul
popa
push
outsl
jne
arpl
or
push
push
dec
dec
outsb
jae
popa
insb
insb
dec
inc
inc
inc
add
dec
inc
inc
inc
inc
push
xor
cs
insb
add
add
inc
push
dec
xor
push
inc
arpl
outsl
insb
add
dec
push
inc
push
dec
xor
fs
insb
add
inc
fwait
inc
dec
cli
dec
add
sub
roll
movsb
mov
addr16
lods
call
sub
fcmovne
push
mov
lds
aas
cld
testb
ja
lods
xorl
fidivl
xchg
mov
lods
stos
es
les
xchg
xor
push
push
add
int
or
cmp
loopne
loopne
sub
push
xchg
xlat
rcl
pop
pop
add
jno
repz
ljmp
xchg
lea
rolb
pop
stc
repnz
pop
fwait
addr16
mov
mov
mov
lods
or
lea
repz
sub
mov
test
pop
push
push
mov
push
mov
pushf
in
fistl
cld
mov
jle
int
push
leave
scas
imul
repz
and
inc
jo
in
shl
pop
pop
adc
xor
cmpsl
insl
jb
iret
lods
scas
xor
mov
jne
pop
mulps
xor
add
shr
cld
add
aam
cmp
das
outsl
test
cmp
inc
and
js
add
pop
push
rcrl
data16
add
jb
enter
add
sub
addl
or
push
in
jge
out
mov
mov
mov
sub
pop
cmpsl
test
rcrl
scas
aas
out
inc
aad
add
loop
imul
cmp
jecxz
mov
adc
pop
and
push
add
cli
psubw
jnp
mov
push
and
jg
cmc
mov
sbb
es
or
inc
movsb
jae
fldt
mov
push
mov
dec
jp
imul
add
jae
sbb
inc
jg
lahf
cmpl
mov
add
add
add
add
xor
add
pop
add
add
add
add
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
jno
add
add
add
add
add
xchg
add
test
add
mov
or
add
mov
add
ss
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
cltd
pop
xchg
xchg
xchg
or
jge
jl
jp
lods
lods
stos
add
cmpsb
cmpsl
push
mov
mov
mov
ret
les
into
int
rcl
in
rcl
shl
rcl
shl
int3
int
hlt
enter
enter
mov
mov
mov
mov
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
lahf
add
mov
jae
mov
lret
rcl
sar
xlat
xlat
std
xlat
xlat
xlat
aam
iret
ror
dec
int3
int3
dec
rcl
inc
vfnmadd231pd
mov
iret
movsl
movsl
movsb
xchg
mov
xor
add
add
add
add
add
add
add
add
add
add
stos
lods
lods
add
scas
scas
sbb
mov
jnp
mov
sar
mov
lret
lret
rcl
sar
fcom
call
xlat
fdivr
dec
int3
int
into
int3
into
call
aam
dec
int3
int
mov
mov
mov
std
cmpsb
cmpsl
test
xchg
xchg
xchg
mov
pop
pop
fs
or
add
add
add
add
add
pop
add
add
add
add
add
add
pop
push
pop
add
inc
add
push
add
push
or
inc
or
sbb
add
add
add
or
or
or
add
add
add
mov
add
mov
inc
mov
mov
mov
mov
ret
enter
into
int
rcl
sar
call
xlat
xlat
call
aam
dec
int
dec
lret
leave
dec
int
inc
mov
mov
mov
cmpsb
cmpsl
cmpsl
jmp
lcall
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
push
imul
pop
pop
pop
fs
sbb
das
femms
sub
aaa
ss
cmp
cmp
and
and
add
add
add
add
add
add
mov
pop
mov
mov
mov
mov
mov
rol
leave
leave
call
iret
sar
aad
call
aad
call
iret
iret
dec
enter
ret
mov
mov
ljmp
movsl
movsl
popf
pushf
popf
xchg
xchg
cwtl
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jno
jg
jle
jg
jg
jo
jb
arpl
mov
cmp
cmp
inc
inc
inc
mov
outsl
outsl
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
leave
dec
lret
leave
dec
enter
ret
mov
mov
ljmp
mov
fwait
call
xchg
xchg
xchg
xchg
xchg
fwait
cltd
fwait
in
test
ds
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsb
jo
add
pop
or
pusha
nop
mov
incb
jp
idivb
jl
outsb
outsb
outsl
out
data16
data16
jne
jg
jge
js
jp
arpl
fs
inc
inc
cmp
sbb
sbb
prefetch
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
nop
incl
test
xchg
xchg
xchg
sahf
mov
mov
mov
jns
jns
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addl
std
mov
jg
jb
jo
jae
jae
jge
jle
test
xchg
addr16
cmp
and
and
jg
jle
lcall
shrb
lods
lods
sti
lods
stos
stos
lods
stos
lods
test
stos
std
mov
cltd
cltd
xchg
xchg
xchg
decl
jg
jns
jns
jl
jp
xchg
xchg
movsl
mov
scas
sti
mov
mov
mov
mov
mov
scas
scas
stos
test
sbb
or
add
add
add
add
add
add
push
pop
adc
movsb
test
mov
mov
xchg
nop
xchg
incl
xchg
mov
xchg
std
xchg
cwtl
xchg
stc
xchg
xchg
xchg
in
mov
or
lea
mov
push
push
push
push
femms
xor
inc
dec
imul
xchg
leave
fwait
fwait
lcall
cltd
cltd
stc
nop
std
mov
mov
mov
mov
mov
cltd
jmp
lods
scas
mov
mov
mov
mov
mov
std
mov
mov
mov
jp
or
add
add
pop
pop
adc
test
call
lcall
incl
xchg
xchg
xchg
xchg
sahf
pushf
popf
std
mov
mov
xchg
in
xchg
nop
in
test
push
jne
push
push
dec
add
add
inc
sub
push
dec
dec
dec
data16
jno
mov
xchg
rclb
xchg
xchg
std
lea
nop
call
lahf
mov
ljmp
test
pushl
mov
test
std
les
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
popf
xchg
fwait
incl
mov
decl
xchg
nop
xchg
xchg
xchg
pushf
sahf
pushf
mov
test
movsb
movsl
mov
fstpt
jl
push
push
push
outsl
dec
dec
dec
popaw
bound
jo
je
jp
jg
orl
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
ss
mov
jbe
mov
cmpsb
mov
mov
mov
stos
lods
stos
mov
movsb
movsb
add
mov
add
pusha
adc
mov
ljmp
popf
decl
nop
call
xchg
xchg
call
cwtl
lcall
lahf
sahf
lahf
movsb
mov
mov
out
xchg
xchg
xchg
xchg
les
cwtl
cltd
in
xchg
xchg
out
lea
stc
xchg
xchg
std
xchg
jae
cltd
push
test
mov
inc
jnp
mov
jns
mov
jb
mov
insl
ljmp
adc
lods
or
ljmp
aas
jg
mov
mov
lods
pushf
movsl
mov
movsl
add
mov
add
pusha
adc
mov
lcall
nop
xchg
call
cltd
fwait
lcall
mov
lcall
xchg
xchg
call
xchg
nop
call
lcall
cltd
lahf
stc
mov
mov
xchg
push
xchg
pop
jg
xchg
dec
jp
lcall
pushf
and
mov
adc
jmp
adc
lods
packuswb
lods
adc
scas
adc
mov
imul
mov
insb
mov
fwait
lods
mov
scas
lods
scas
mov
movsl
movsb
add
add
add
add
mov
pop
pop
adc
mov
ljmp
popf
call
sahf
sahf
lcall
movsl
movsb
jmp
mov
xchg
decl
mov
mov
xchg
jbe
lcall
xchg
dec
jp
xchg
jb,pt
xchg
sub
decl
adc
xchg
or
push
pop
call
add
mov
adc
lods
sbb
pushl
sbb
outsl
mov
and
mov
pop
jne
rolb
les
cli
scas
scas
scas
mov
sahf
mov
movsb
add
pop
pop
adc
lods
mov
mov
cwtl
sahf
lcall
movsl
ljmp
cmpsl
cmpsl
ljmp
cmpsb
cmpsb
lcall
jle
decl
dec
outsl
decl
sub
mov
pop
incl
add
push
incl
add
popl
pop
call
add
mov
or
pushl
es
mov
sub
shrb
inc
sub
jge
cs
leave
inc
mov
mov
cld
scas
mov
lret
movsb
dec
mov
movsl
movsb
add
push
adc
cmpsl
scas
ljmp
sahf
jmp
test
ljmp
lods
pushl
scas
lods
jmp
mov
mov
incl
or
xchg
push
incl
add
addb
incl
add
mov
push
call
add
cltd
add
sahf
add
add
lods
adc
mov
cmp
inc
cmp
dec
cmp
call
cmp
call
cmp
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
cmpsb
ljmp
sahf
ljmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
pop
incl
or
add
decl
add
nop
add
xchg
add
pushf
add
mov
add
lods
add
jb
ret
cmp
dec
inc
call
inc
call
inc
mov
dec
xchg
call
dec
xchg
fisttpl
fmull
ficoml
call
test
std
mov
mov
mov
sahf
mov
add
dec
dec
adc
jnp
movsb
sahf
mov
lcall
test
pushl
mov
pushl
mov
mov
mov
jmp
aaa
insl
decl
sbb
sbb
mov
decl
or
add
add
xchg
add
sahf
add
mov
add
stos
add
mov
fs
and
dec
dec
nop
call
push
cltd
call
push
fwait
ficoml
fstpl
jmp
pop
popf
jmp
pop
sahf
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsb
jne
lahf
lahf
or
xchg
xchg
xchg
add
adc
ja
sahf
lcall
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jne
and
and
call
and
xchg
sbb
xchg
or
nop
add
xchg
add
fwait
add
mov
add
lods
add
mov
gs
mov
xor
call
pop
cltd
fstps
jmp
mov
jmp
cmpsb
jmp
cmpsb
jmp
cmpsl
call
push
stos
fldl
mov
test
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jae
fwait
xchg
lcall
popf
popf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
cltd
outsl
lcall
sub
xchg
pop
call
add
lcall
ljmp
add
mov
pushl
adc
roll
frstor
jmp
jo
jmp
outsl
lods
call
jae
in
je
jmp
mov
in
je
out
je
in
jae
jmp
mov
mov
cmpsb
test
sahf
mov
mov
add
add
add
jle
cmp
imul
lea
lcall
mov
pushl
mov
mov
mov
mov
scas
lcall
xor
sahf
aaa
jne
sahf
aaa
jae
lahf
xor
fwait
push
call
add
lahf
add
movsl
add
test
popa
pushl
add
mov
sbb
fsts
jecxz
mov
call
jg
jmp
mov
push
cmpl
hlt
xchg
push
test
jmp
mov
inc
mov
stos
cmpsl
sahf
sahf
sahf
daa
sahf
lahf
lahf
add
add
add
popa
add
aaa
cmp
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
ret
ret
mov
jmp
cmp
movsb
inc
jle
movsl
inc
jg
movsl
cmp
lcall
lcall
pop
ljmp
add
mov
data16
mov
add
dec
es
mov
in
mov
push
mov
push
nop
sar
nop
ret
push
nop
clc
xchg
clc
pop
out
mov
inc
ret
clc
lods
stos
stos
mov
pushf
pushf
xor
popf
popf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
inc
mov
jl
lcall
dec
cmp
mov
punpcklbw
cltd
add
mov
add
lods
add
mov
arpl
mov
add
movl
call
xchg
lcall
repnz
lcall
negl
into
cld
popf
int3
cld
cltd
lret
push
xchg
sar
mov
dec
mov
mov
mov
nop
nop
add
add
add
xor
or
cmp
outsb
dec
dec
dec
jecxz
pop
popa
decl
mov
mov
mov
sar
vshufps
inc
mov
mov
ljmp
dec
xchg
movsl
sub
lcall
jmp
add
mov
mov
add
leave
add
rorl
jbe
filds
in
mov
push
movsl
int3
push
movsl
into
push
cmpsb
iret
cli
test
cli
cmpsl
sar
cli
cmpsl
iret
stos
sar
cld
test
iret
push
lahf
jmp
mov
dec
lret
mov
mov
lahf
mov
xchg
add
cltd
cltd
add
add
add
xor
or
bound
push
xlat
jne
jb
mov
mov
mov
ret
ret
inc
leave
enter
pushl
push
xchg
scas
push
mov
scas
dec
test
mov
add
jmp
popa
pushl
add
les
imul
add
fists
out
pop
cmpsl
push
lahf
lret
lods
aam
cli
scas
aad
cld
mov
sti
mov
mov
std
mov
std
mov
mov
mov
cld
mov
push
movsl
jmp
mov
call
leave
lret
mov
mov
sahf
mov
xchg
or
add
add
xor
sbb
dec
dec
dec
outsb
outsl
outsb
mov
mov
aad
xlat
jmp
fcomp
not
rcl
std
lret
int
dec
leave
leave
dec
leave
lret
dec
leave
lret
leave
enter
scas
ljmp
push
mov
lods
cmp
lcall
add
add
mov
arpl
mov
add
iret
add
fadds
jb
filds
jne
call
jae
cli
lods
aam
std
mov
fcos
mov
fcos
mov
xlat
cld
mov
xlat
std
mov
fdivr
clc
mov
jmp
mov
call
lret
mov
sahf
sahf
jo
xchg
xchg
or
add
add
xor
add
add
pop
or
movb
in
call
out
test
jecxz
leave
fsub
fcomp
fsqrt
xlat
xlat
std
into
iret
iret
mov
imul
jmp
add
mov
mov
add
lret
call
add
faddl
jne
in
js
out
das
xchg
push
mov
sti
mov
loopne
inc
loopne
inc
loopne
inc
loopne
std
dec
dec
dec
fdivrp
std
enter
lret
cli
mov
leave
call
leave
into
mov
mov
xchg
adc
add
add
std
add
incl
std
incl
hlt
cmc
cmc
or
out
jmp
jmp
out
sub
out
in
dec
ljmp
xchg
call
call
fsubr
les
xchg
cmpsl
cmp
mov
add
test
pop
pushl
add
movb
dec
add
fadds
je
filds
jbe
call
inc
fwait
cli
mov
jecxz
std
lret
dec
out
std
into
jecxz
std
int
dec
jecxz
dec
loope
shl
call
in
std
shl
shl
cld
ret
fcos
out
mov
xlat
inc
ret
test
test
xchg
xchg
xchg
sbb
fwait
cltd
add
incb
incb
idiv
clc
add
hlt
icebp
add
repnz
out
repnz
pop
out
lock
in
in
pop
fsubp
loopne
mov
xchg
sti
mov
pop
pop
jmp
pop
pushl
add
movl
jo
fiaddl
je
jecxz
jns
in
adc
negl
cld
mov
dec
out
shl
shr
std
shl
call
in
aad
xlat
call
std
fldl2t
fucomi
std
shl
push
ret
in
fcos
leave
lret
lret
repz
stos
fwait
xchg
xchg
xchg
and
xchg
cwtl
add
std
cli
add
std
stc
add
cli
stc
add
cmc
cmc
or
aam
xor
je
negb
add
add
scas
add
mov
add
leave
add
add
fldl
jbe
out
jns
out
sbb
clc
jne
sti
ret
fdivrp
fld1
std
std
fldl2t
fucomp
fucomp
fsubr
fucomip
std
fucomip
fucomip
std
aam
push
aam
out
ror
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
add
loop
add
enter
mov
xchg
repnz
pop
lcall
jmp
add
mov
add
into
add
add
filds
jne
ljmp
cli
pop
aam
fsubrp
fsubr
std
fldl2e
std
fucompp
fsub
std
aam
aam
cli
iret
loopne
cld
shl
push
iret
fdivrp
stc
lret
test
out
mov
fcos
sti
mov
mov
lcall
add
add
add
xlat
add
leave
lds
scas
xchg
lcall
add
mov
fs
mov
add
iret
add
xlat
add
loopne
jns
jmp
ss
cli
xchg
enter
sti
int3
jecxz
cld
stc
rcr
idivb
push
mov
into
in
mov
lret
jmp
ror
ljmp
imul
cmc
fnstsw
loopne
mov
mov
xchg
add
add
add
int3
add
sarl
lahf
xor
pusha
ljmp
add
mov
add
int3
or
rorb
je
fsts
jns
loope
cmp
dec
xchg
call
scas
lret
ljmp
std
loopne
cld
fbstp
neg
mov
enter
int3
in
leave
rcr
xlat
shl
aad
out
loope
in
in
test
out
out
popf
jmp
lret
lret
push
lods
stos
lods
adc
test
cmpsb
add
ret
mov
lahf
stos
aam
dec
jg
sahf
sbb
cmpsb
sbb
jo
mov
ja
mov
inc
xchg
les
lret
gs
mov
shlb
rcl
mov
int
rol
int
aad
shll
fcom
aam
fcmovu
fnstenv
loopne
gs
jecxz
call
in
jmp
icebp
div
sub
div
and
lock
or
mov
into
add
add
add
sarl
mov
xchg
stos
jne
ljmp
mov
sarb
mov
les
rcrb
int3
jp
into
into
addr16
rclb
rcl
dec
aad
aad
rcl
xor
fcmovnu
daa
fistpl
fcmovu
ficoms
fsubp
loop
jecxz
out
jmp
jmp
out
add
sti
cmc
add
sti
add
incl
std
add
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
les
mov
daa
int3
rcl
and
aam
rcl
rcll
iret
aad
or
xlat
aam
rcr
fadds
fcmovnu
add
add
jecxz
add
in
jmp
add
incl
mov
mov
add
ret
ret
or
mov
mov
mov
push
rol
or
leave
enter
movl
lret
rolb
rcr
aam
rcl
add
aam
aam
add
add
aad
add
loop
add
fsubp
add
out
add
repnz
std
incb
std
add
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
ret
mov
mov
mov
ja
stos
test
cmpsl
test
xchg
pop
add
add
add
add
add
add
mov
mov
mov
mov
mov
enter
iret
iret
jmp
aam
cmc
rcl
aam
into
rcl
cli
int
int
int3
lret
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
aas
cmp
add
add
add
add
add
add
add
cmpl
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
sar
aad
xlat
call
aad
dec
rcl
dec
iret
into
dec
lret
lret
inc
mov
mov
icebp
cwtl
xchg
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
je
je
gs
inc
dec
dec
cmp
sub
sub
ss
xor
dec
sub
inc
adc
sub
add
add
mov
mov
mov
mov
mov
mov
inc
dec
int3
int3
call
rcl
call
rcl
dec
lret
mov
sar
mov
ljmp
sahf
popf
xchg
cwtl
xchg
jmp
outsl
jno
push
pop
push
dec
add
add
add
add
add
add
addl
test
imul
movsb
push
push
push
stos
push
outsb
insb
push
pop
pop
cmp
aaa
cmp
jno
jo
scas
mov
pop
mov
mov
mov
mov
mov
rol
mov
mov
mov
cmpsl
cmpsl
test
call
xchg
fwait
cltd
cltd
out
addb
wrmsr
add
add
add
add
add
pop
lcall
pop
pushf
xchg
cwtl
fcoml
addb
jl
jge
js
js
jnp
jnp
jp
jnp
jae
je
push
push
push
cmp
aaa
popf
sahf
pushf
mov
scas
scas
repz
scas
scas
sti
scas
scas
lods
std
cmpsl
cmpsl
cmpsl
std
sahf
popf
popf
call
test
call
mov
lods
jmp
lods
lods
leave
cmpsb
movsl
movsb
cltd
jae
je
adc
adc
add
add
add
add
outsb
outsb
insl
pop
stos
movsl
stos
loop
cltd
popf
incl
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
outsb
outsb
outsl
orl
lcall
mov
mov
xchg
xchg
xchg
lcall
movsb
test
std
mov
scas
mov
mov
mov
cmpsl
movsb
cmpsl
pop
addb
add
add
add
popa
or
lods
mov
cmpsl
mov
mov
mov
lcall
sahf
mov
negl
jle
stos
push
push
push
jo
pop
push
outsl
insl
insl
outsl
xchg
subl
xchg
lock
nop
lcall
mov
mov
xchg
mov
dec
mov
mov
mov
out
scas
lods
insl
test
add
add
add
add
pop
or
mov
in
movsb
test
nop
nop
xchg
call
xchg
xchg
lcall
cltd
fwait
cltd
popf
fwait
fwait
sahf
sahf
cli
xchg
xchg
cltd
jmp
xchg
xchg
aam
mov
out
nop
ja
notb
pop
jle
pushf
dec
jl
movsb
inc
jp
scas
aaa
jbe
mov
jae
scas
sbb
imul
sbb
mov
lods
mov
scas
mov
jle
movsl
movsb
push
popa
pop
pop
or
mov
in
movsb
cmpsl
call
popf
sahf
jmp
lahf
lahf
call
mov
xchg
jnp
std
xchg
jae
cld
xchg
pop
cmp
dec
jns
nop
cmp
xchg
sub
xchg
sbb
call
push
pusha
ljmp
sbb
mov
insb
pushl
push
jno
mov
pop
nop
mov
lods
scas
xchg
sahf
popf
sahf
adc
add
add
pusha
popa
pop
or
lods
mov
stos
mov
lahf
jmp
stos
stos
ljmp
xchg
cltd
decl
imul
mov
pop
incl
or
mov
call
add
fwait
add
or
pushl
sub
jge
lds
jg
enter
lret
dec
pop
cwtl
inc
test
mov
test
cmpsl
sbb
add
add
popa
pop
popa
or
movsl
test
cmpsl
mov
cmpsl
pushl
mov
pushl
mov
decl
orps
xchg
push
incl
add
nop
add
xchg
add
sahf
add
add
mov
insl
inc
aaa
cmp
inc
mov
rolb
roll
aad
nop
fmuls
call
popa
lahf
dec
cmpsl
mov
mov
mov
mov
std
add
add
add
popa
or
popf
mov
ljmp
mov
mov
mov
ljmp
jl
sbb
decl
or
decl
add
lahf
add
add
lods
add
jne
rorl
fsts
fistpl
jmp
pop
sahf
jmp
pop
mov
fisubrs
dec
cmpsb
mov
ret
cmpsl
xor
add
add
dec
pop
jl
jnp
pushf
xchg
lcall
scas
scas
pushl
mov
mov
lcall
sub
lcall
and
xchg
subps
xchg
add
popf
add
add
mov
mov
xor
jmp
insl
test
in
lods
ljmp
out
jno
jmp
jp
call
test
mov
test
addb
dec
dec
dec
pop
outsb
outsl
insb
bound
cltd
xchg
pushl
mov
mov
mov
jbe
lcall
cmp
sahf
sub
lcall
add
movsb
add
lods
add
mov
gs
or
inc
xchg
jmp
jns
jmp
test
push
xchg
push
mov
mov
cmpsb
test
lcall
add
sub
push
push
dec
pop
pushw
loopne
mov
mov
sarb
sarb
jmp
inc
cmp
sub
lcall
ljmp
add
add
int
jbe
loope
mov
push
xchg
push
cltd
cltd
clc
fwait
leave
cli
fwait
lret
push
cwtl
jmp
lods
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
inc
xchg
test
ljmp
and
sahf
add
test
add
mov
add
and
push
movsb
int
clc
cmpsl
sar
cli
test
sar
std
lods
sar
cld
lods
sar
sti
test
call
rol
stos
test
pushf
or
add
add
dec
dec
dec
aaa
jb
jb
test
int3
into
out
iret
int3
cmc
lret
sti
enter
enter
mov
mov
test
inc
jg
mov
add
mov
gs
add
iret
add
fiaddl
xchg
push
xchg
sti
mov
mov
xlat
mov
xlat
mov
sar
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loope
loop
loopne
fcmovnu
fcmovnb
xlat
xlat
out
shll
cmpsl
jae,pn
movsl
pop
pop
pushl
add
lret
call
add
jecxz
jnp
repnz
mov
std
loop
inc
dec
fdivrp
std
enter
leave
loopne
cld
fdivr
lock
lret
mov
xchg
sahf
sahf
pushf
sbb
add
add
std
std
add
incb
jmp
out
sbb
jmp
xor
loope
loop
lds
mov
mov
add
pushl
push
fldl
je
call
insl
mov
cld
std
shl
shl
std
shl
std
aam
xlat
call
std
shl
push
xlat
fcmove
sar
mov
mov
and
add
add
std
add
incl
std
std
pop
aam
push
mov
pop
mov
popf
or
stos
add
mov
gs
add
rolb
outsl
fiadds
jne
in
and
cld
shl
fldpi
std
fsubr
std
fsubr
std
fsubr
cld
xlat
out
cld
fsub
std
aam
push
xlat
xlat
sti
mov
sahf
popf
das
add
add
int3
into
into
or
bound
lods
add
mov
add
aad
jb
loope
js
out
xor
sti
int3
loopne
cli
lret
test
aad
repz
out
ret
out
in
jmp
aam
in
fucomp
leave
mov
test
std
incl
aam
push
mov
je
or
imul
pop
jb
int
jl
aad
test
loopne
lcall
mov
out
loop
leave
jmp
fidivrs
int3
leave
faddp
sarl
in
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
scas
xchg
movsb
les
pop
mov
mov
xchg
fidivrl
andb
into
mov
ret
ror
rol
int3
insl
ror
iret
pop
aam
rorb
fcomp
cmp
fsubp
das
jecxz
fsubl
loop
lock
in
in
or
std
std
add
add
add
incb
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
enter
aam
pop
mov
rcl
or
loopne
or
int
add
std
std
add
incl
cltd
cltd
lcall
rol
or
int3
int
stos
stos
stos
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
lcall
daa
ret
mov
leave
mov
ret
ret
ret
mov
scas
scas
scas
insb
stos
stos
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
lods
stos
stos
add
mov
jmp
aam
std
rcl
sar
iret
iret
iret
std
mov
stc
mov
test
jg
pop
pop
pop
add
add
add
add
add
add
add
add
jae
jno
push
inc
dec
das
cs
and
add
add
mov
mov
cmpl
ret
int
call
rcl
dec
int
inc
enter
mov
lcall
mov
push
add
add
add
add
jne
jne
xchg
aad
jo
ret
popa
mov
push
outsl
jb
pusha
bound
pusha
pop
pop
sbb
mov
in
mov
mov
mov
stos
stos
lcall
xchg
xchg
lcall
cwtl
cwtl
lds
jno
daa
daa
daa
das
add
add
add
add
jb
jae
fwait
xchg
pushf
mov
test
clc
mov
test
test
push
push
push
push
inc
mov
pushf
into
mov
lahf
mov
decb
lea
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
cmpsl
test
mov
xchg
xchg
xchg
cld
popf
sahf
popf
cmc
lcall
mov
push
push
imul
jge
lea
xchg
notl
mov
pushl
xchg
mov
stos
mov
test
stos
stos
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
lcall
lcall
xchg
fwait
cwtl
std
xchg
xchg
xchg
out
xchg
mov
loope
jne
out
nop
bound
std
fwait
inc
jbe
cmpsb
ss
scas
sub
mov
jo
mov
insl
pushl
popf
lods
lock
mov
imul
int3
add
xchg
pop
scas
movsl
stos
test
popf
pushf
sahf
jmp
movsl
call
imul
nop
inc
jb
mov
imul
sbb
pop
lcall
or
scas
push
outsl
pushl
es
shrb
inc
ds
rcrl
subl
je
push
movsb
pushf
mov
cld
test
test
scas
scas
scas
pushl
mov
decl
or
xchg
push
decl
add
mov
adc
shll
dec
inc
mov
aad
call
push
xchg
dec
cltd
mov
mov
mov
movsb
mov
add
push
xchg
xchg
test
mov
scas
pushl
mov
movsb
call
sbb
pop
decl
add
mov
add
mov
push
xchg
fcompl
jmp
pop
mov
jmp
movsw
call
fwait
mov
mov
mov
test
cmpsl
pop
add
add
bound
adc
popf
lcall
mov
mov
mov
fwait
dec
jle
fwait
xor
lcall
lcall
add
mov
xor
call
jp
out
jge
out
jg
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
ret
mov
arpl
lcall
add
ljmp
add
or
fimull
out
lea
push
xchg
push
xchg
enter
jmp
movsl
mov
cmpsb
sub
aas
inc
aas
adc
push
xchg
xchg
cld
ret
inc
ret
inc
mov
cwtl
ljmp
pop
jmp
pushl
add
aad
ja
in
outsb
scas
push
test
clc
lods
iret
cld
lods
sar
cld
scas
sar
scas
sar
ljmp
fldenv
incb
xor
outsl
outsl
inc
scas
mov
mov
aam
mov
aad
aam
out
lret
leave
lret
cli
mov
mov
jmp
add
add
aad
jb
out
xchg
testl
fdivr
std
ret
inc
inc
lock
ret
in
test
dec
addb
add
in
or
out
jmp
outsb
fldenv
movsb
daa
outsb
ljmp
add
lret
add
fiadds
jbe
out
cmp
std
iret
out
call
out
call
in
aad
aam
push
enter
int3
in
scas
lods
lods
popa
addb
add
incb
std
incb
lret
int
sub
mov
add
mov
add
loope
js
hlt
push
movsl
std
loop
jmp
std
aad
cld
shl
stc
aam
push
leave
xlat
fmul
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
push
arpl
mov
or
ficomps
cmp
out
mov
shl
call
mov
shl
in
aam
jmp
scas
les
lcall
rol
or
popf
stos
xchg
inc
and
push
mov
ret
int3
int3
jbe
mov
fdivrs
adc
int
xlat
lret
rcrb
rcl
dec
in
fistpll
out
call
sbb
mov
mov
lods
arpl
lods
mov
ret
mov
ret
and
ror
fimuls
int
int
aam
aam
incl
addb
add
add
add
rolb
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
xor
fwait
loope
int
mov
xchg
and
sbb
mov
xchg
cmp
lds
adc
lock
test
lret
ja
push
push
call
mov
fbstp
cmp
xor
push
add
loope
push
xchg
test
lret
sti
jge
loopne
sbb
rorl
incb
outsl
pop
icebp
mov
sarl
je
cmp
mov
dec
cltd
sbb
ja
mov
xchg
lahf
or
sbb
icebp
pusha
adc
inc
mov
pop
lock
add
in
mov
push
call
or
and
pop
mov
mov
cmpsl
ds
imul
add
mov
push
montmul
cmpsb
xchg
add
fiaddl
mov
sti
dec
loop
lcall
jg
pop
repnz
jns,pt
jo
movsl
cmp
xchg
xchg
les
pop
jns
mov
pop
fwait
loope
int
shrl
test
lods
xchg
adc
enter
sbb
aam
fsubrs
idiv
xchg
daa
push
lea
adc
out
pop
xor
dec
repnz
push
call
inc
mov
add
inc
mov
lods
inc
xchg
mov
mov
ficomps
adc
call
xchg
arpl
popf
pushf
test
mov
lods
and
cmp
pop
add
lret
push
in
pop
push
push
call
adc
outsb
add
sub
inc
fidivrl
stos
inc
or
pop
popf
or
cmp
out
lock
jle
adc
xor
arpl
mov
xor
push
fnstenv
xchg
pop
test
in
sbb
aad
das
sub
lcall
and
ror
aas
add
cmpsl
ds
pop
hlt
push
inc
lds
popa
clc
jns
cmpsl
mov
rol
pop
add
sahf
jl
jecxz
pop
popf
and
cwtl
stos
out
inc
mov
frstor
mov
decb
mov
push
popa
sub
pop
mov
mov
int
ljmp
es
xor
insb
negb
mov
dec
dec
out
ss
into
data16
push
in
mov
fidivl
or
cmpb
out
pushf
pop
sahf
int
insl
add
out
and
and
inc
fidivl
test
clc
les
pop
stos
in
push
pop
int3
in
cmp
fwait
push
mov
mov
adc
inc
xlat
cmc
xor
mov
pop
testb
lods
mov
jge
lcall
xor
sub
pop
push
inc
jp
push
lods
fsubrs
int
and
mov
out
lods
inc
push
or
popa
movsl
pop
xor
mov
call
call
dec
outsl
push
xor
popf
push
lea
mov
stos
inc
adc
inc
test
pop
xchg
dec
out
jl
sahf
xor
into
or
mov
popl
fdivs
stc
nop
loop
pop
test
sbb
pop
push
ss
cmp
jmp
mov
or
xlat
outsb
adc
daa
xorb
mov
inc
roll
int3
arpl
fdivs
enter
cmpl
or
scas
in
es
add
test
stc
ret
jbe
pop
test
adcb
lret
cld
aaa
sahf
xor
dec
mov
mov
ret
repz
bound
testb
lods
mov
jge
cwtl
aad
lret
push
mov
push
jmp
aas
jns
pop
lods
in
mov
mov
jg
jno
in
push
sbb
test
jbe
andl
add
push
cmp
sub
adc
arpl
je
inc
test
je
jns
or
cmpsl
test
inc
ficoms
je
mov
je
inc
test
jne
jecxz
or
push
movsl
scas
add
inc
jle
cmp
js
fildll
cwtl
das
cmpsl
sarl
dec
jmp
jno
pop
push
mov
xchg
leave
sub
movsb
cmc
and
popl
fsubrs
push
push
hlt
mov
stc
nop
inc
push
es
inc
ficoms
mov
add
lods
stos
inc
fiaddl
mov
xor
leave
pusha
sub
inc
fistl
cli
pop
imulb
add
mov
sub
mov
jnp
hlt
call
sbb
popa
clc
xor
xchg
sub
cwtl
sbb
aas
or
hlt
mov
mov
loope
jno
sbb
or
clc
jmp
aaa
into
pop
adc
inc
lret
adc
add
dec
loopne
sbb
xchg
sti
fiaddl
sahf
or
test
jge
mov
mov
fistpl
mov
cmp
shrb
fimull
ja
jmp
outsl
push
or
pop
jne
in
push
mov
xchg
sub
jb
adc
ror
hlt
mov
inc
int
jbe
cli
xchg
pop
mov
ds
inc
cmp
jno
es
fdivl
push
out
jns
cld
xchg
insl
mov
nop
in
test
icebp
xor
jb
sub
rorb
hlt
int3
js
add
ret
pop
inc
shrl
rorb
jp
adc
mov
add
adc
aad
add
sarb
hlt
mov
add
jle
hlt
pop
hlt
sub
sti
xchg
adc
pop
hlt
and
movl
cmp
or
fnstenv
sbb
stos
push
jecxz
dec
adc
adc
jns
sub
je
out
mov
add
lea
adc
xchg
inc
out
or
or
fs
inc
sbb
push
add
mov
adc
jbe
push
sarl
aaa
repz
jae
and
jecxz
fisubrl
or
mov
sti
sbb
lcall
xchg
sub
mov
mov
push
xor
mov
shl
add
arpl
push
mov
lods
xchg
push
test
int
stos
fs
fsts
mov
test
mov
ja
jne
pop
test
scas
inc
lahf
push
hlt
mov
xchg
stos
inc
ret
mov
jg
fidivs
mov
aad
jno
out
sub
repnz
mov
fsubrs
pop
das
movb
andb
xchg
mov
push
out
in
mul
jnp
adc
sbb
shr
xchg
cwtl
mov
jg
ljmp
cmp
pushf
xor
out
jbe
jmp
loope
cmp
xchg
insb
add
mov
out
mov
pop
add
pusha
divl
ljmp
and
dec
loopne
sti
mov
sub
out
xchg
mulb
es
stos
inc
ss
mov
xchg
sbb
jbe
pop
or
je
add
xor
push
out
adc
fnstenv
adc
mov
add
cltd
xor
into
gs
adcb
adc
je
loopne
test
or
mov
jne
push
lods
pop
lods
jmp
loope
sub
cmp
push
call
nop
stos
out
fisttpl
mov
mov
loope
sbb
shrb
popf
xor
mov
lret
loope
stos
xor
bound
jle
mov
jns
stos
xor
lret
aas
mov
jp
and
xor
push
cli
cmpl
dec
fsubrp
xchg
outsl
adc
shlb
or
mov
fsubl
add
mov
cmp
mov
leave
xchg
xor
shlb
addr16
pop
jo
add
push
push
push
pop
push
xchg
push
pop
test
mov
mov
inc
pop
sub
push
movsl
pop
dec
test
mov
fnstenv
cli
pop
xor
lods
std
push
shrb
sbb
cmc
mov
outsl
mov
mov
mov
aam
test
mov
movsl
cmp
rcrb
sbb
movsb
mov
ja
xor
xor
push
inc
pop
mov
dec
fs
shr
fstpt
jo
cs
out
push
ret
dec
jnp
and
sbb
gs
mov
sbb
fimuls
push
data16
pop
hlt
test
mov
mov
jns
imul
lahf
sub
shlb
mov
push
pop
pop
repnz
ficompl
mov
mov
sbb
jno
mov
mov
jle
fisubrl
jb
push
mov
les
jl
sbb
push
mov
das
mov
rorb
push
lahf
into
lds
mov
add
stos
in
mov
mov
or
sbb
lcall
imul
scas
push
out
test
stos
pop
loopne
insl
loop
je
fiadds
inc
inc
lret
add
and
into
outsl
es
gs
sbb
xor
ret
cld
test
and
rorl
out
inc
pop
jb
inc
mov
jns
xchg
fsubl
xchg
dec
push
into
push
cmp
subb
jl
repnz
loopne
add
loope
rcrb
inc
fdivl
les
sub
lret
and
pop
lret
sarl
push
lods
adcb
cmpsl
in
mov
push
jbe
mov
stos
xlat
cmp
pop
mov
push
dec
scas
ss
and
ss
sbb
cs
mov
sub
mov
add
dec
and
sbb
jg
repnz
sbb
sub
pop
ja
xchg
mov
fisubl
hlt
sub
and
stos
aas
mov
in
ret
imul
mov
inc
pop
addr16
dec
dec
inc
loopne
cmp
cmp
push
inc
les
dec
into
pop
test
jne
dec
and
hlt
push
pop
scas
xchg
add
or
push
fisttpl
test
out
add
jecxz
cmpsb
cmc
rorb
jecxz
lret
out
pop
xor
xchg
arpl
push
mov
test
out
xchg
xor
xchg
mov
bound
adc
cmpsl
mov
shll
int3
test
or
dec
and
cwtl
hlt
xor
pop
movsl
test
in
insl
xchg
dec
pop
push
xor
daa
cmpb
xor
sbb
sub
jge
sbbb
mov
sbbb
int
aad
addr16
out
mov
mov
icebp
dec
lcall
mov
aad
mov
sbb
call
jno
into
xor
mov
jo
mov
add
loop
mov
pop
cmp
mov
ljmp
sarb
pop
loopne
inc
out
jno
lret
gs
sbb
rorb
inc
sbb
cmp
lahf
imul
push
xor
adc
sbb
movsl
jo
xor
and
push
daa
cmp
fs
in
in
mov
xchg
cs
mov
popa
mov
cmp
imul
call
in
xchg
inc
jns
jnp
sub
aaa
mov
arpl
outsl
subl
dec
cmp
xor
lahf
dec
sarl
sub
jge
fbstp
sahf
add
iret
sar
mov
add
add
scas
cwtl
lahf
gs
lret
mov
jae
loope
inc
xlat
testl
jg
lea
jnp
scas
cltd
xor
mov
pop
scas
mov
or
enter
sub
sub
fwait
dec
fs
cmp
orb
adc
cs
fistpll
pop
mov
pop
lock
push
jg
orb
fistpll
movsb
sahf
xor
adc
mov
mov
or
fsubrs
call
add
add
or
nop
daa
idivl
xor
mov
scas
inc
xor
int
mov
add
test
sbbb
mov
or
sub
mov
nop
lock
fdivr
mov
fs
pop
sbb
sti
js
sbb
mov
aaa
into
iret
push
out
call
outsb
add
movsl
lods
mov
int
xchg
sti
test
sbb
fstpl
ret
mov
lret
das
ljmp
jnp
xor
inc
xchg
xchg
hlt
or
cmp
sbb
ret
pop
dec
in
and
popa
loope
fwait
pop
mov
xchg
ficoml
outsb
sti
hlt
sbb
cltd
xchg
icebp
cmp
mov
pop
icebp
inc
mov
ret
or
vmread
dec
loope
xchg
xchg
sub
cltd
stc
mov
out
xchg
ds
xchg
sub
pop
icebp
mov
dec
mov
fsub
js
adc
push
or
xchg
jnp
clc
mov
lret
sbb
sub
cwtl
xor
xor
mov
loope
cmpl
jno
mov
clc
scas
aas
xchg
sub
enter
sti
pop
mov
xor
and
in
cmp
jmp
imul
mov
dec
and
inc
mov
lret
add
js
jecxz
call
cs
pop
out
les
pmulhw
loop
in
addl
mov
and
inc
dec
aas
subb
sbb
dec
loope
ss
jno
js
mov
int3
xchg
sub
mov
rclb
aad
adc
jne
cmp
mov
out
test
adc
clc
movsl
das
fcoml
sub
shl
dec
in
stc
dec
loopne
push
insb
add
push
pop
sahf
xor
mov
jb
and
push
mov
xor
jo
mov
testl
out
and
lret
aaa
fstpt
jmp
jns
jo
lods
lahf
jmp
and
mov
lods
inc
inc
xlat
adc
mov
xor
pop
mov
pusha
testl
jle
push
jl
mov
loopne
inc
fidivl
loopne
clc
adc
jg,pt
pop
fs
cwtl
jbe
and
shl
out
stos
inc
iret
adc
or
leave
pusha
pop
cs
fdivrs
jle
xchg
pop
divb
add
adc
add
mov
mov
fldcw
mull
pop
lods
dec
jle
dec
int3
shrl
push
lock
mov
push
fnstenv
sbb
mov
fsubrs
test
roll
testb
nop
adc
push
cmp
or
pop
and
out
into
ret
pop
aas
sarb
pop
shlb
ds
cs
je
test
push
mov
mov
mov
cmpsl
shrl
mov
rorl
icebp
mov
aas
lods
cmp
shufps
movsb
sbb
int
pop
lea
add
imul
mov
sub
mov
test
cmp
push
push
lds
inc
xlat
sti
ja
jp
adc
not
movl
adc
aad
mov
push
cmp
inc
int3
xchg
mov
in
fidivl
push
cmp
push
clc
pop
test
mov
aad
or
sti
dec
xchg
sub
stc
les
pop
xor
mov
xchg
push
lods
inc
cld
mov
fbstp
cmp
shll
std
xchg
xchg
pop
dec
fbstp
or
std
loope
sub
leave
or
loopne
push
mov
jp
rcrl
and
jbe
sbb
xor
andb
out
mov
sahf
jmp
outsl
push
or
mov
sbbb
test
shll
push
fnstenv
sbb
sbb
test
and
push
inc
movl
xchg
cli
xchg
mov
aam
scas
testb
pop
aaa
into
push
adcb
adc
outsl
lret
aam
or
in
lea
xchg
sub
bound
addr16
scas
inc
push
nop
inc
fldenv
push
call
mov
jo
cmc
loopne
lods
push
adc
xor
inc
lret
mov
jmp
imul
sahf
dec
mov
pop
mov
inc
fisttpl
or
bound
jmp
or
ret
loopne
and
push
loop
inc
or
jne
add
jle
cld
xchg
pop
cwtl
adcb
jnp
mov
es
mov
movsl
xor
lret
lds
push
call
jne
adcb
sahf
add
out
add
mov
aad
aad
jae
outsb
pop
repz
adc
daa
or
jnp
adc
loopne
xor
cmp
pop
popa
clc
bound
orb
test
inc
cli
xor
loope
mov
out
jmp
pusha
out
push
insl
add
or
jg
fwait
lret
ficompl
mov
jmp
test
pop
or
mov
leave
pop
notb
mov
stc
faddl
adcb
leave
test
xor
mov
mov
push
push
hlt
out
xchg
stc
nop
cltd
jge
mov
mov
scas
int
cmp
add
xor
out
xor
lods
pushl
xor
jno
notl
aaa
and
test
lea
fdivs
xlat
outsb
push
mov
cmc
mov
add
jle
stos
nop
xor
enter
inc
mov
lret
pop
popf
outsb
add
push
out
and
xor
inc
pop
stos
inc
xchg
arpl
mov
mov
ds
loopne
jge
adc
dec
add
xchg
ret
mov
int3
mov
ja
inc
fmuls
mov
mov
sub
jge
sbb
push
xor
xchg
adc
test
mov
lods
pop
rolb
ret
in
adc
loopne
cmp
lcall
and
push
sbb
inc
js
sub
pop
cmc
test
mov
dec
ret
ret
imul
dec
in
lcall
sub
test
fdivrl
hlt
mov
inc
adc
call
movl
xchg
mov
rsqrtps
xchg
sub
or
sbb
or
ss
lock
push
jmp
orb
hlt
push
jb
in
sub
cmp
mov
imul
xor
xchg
sbb
jle
xor
mov
jl
pop
mov
adc
fcoml
xor
int3
cmc
call
inc
sbb
mov
gs
fs
rcrl
mov
test
loopne
cmp
adc
pop
idivl
push
in
gs
outsb
test
je
fcmovnb
cmc
mov
lret
jle
mov
cmp
into
gs
iret
pop
test
in
sub
jge
cmpsl
add
mov
lock
cmpsb
cmp
mulb
mov
sbbl
aad
inc
mov
xor
mov
test
out
push
sbb
aas
aad
aas
pop
pusha
inc
dec
hlt
jno
int3
arpl
roll
cwtl
shl
enter
mov
push
mov
shlb
out
repnz
imul
mov
jne
xchg
cltd
das
dec
out
xorb
ret
jb
push
and
mulb
push
adc
dec
arpl
nop
mov
and
mov
add
add
aaa
cli
pop
loop
mov
call
fldl
lods
sub
xor
add
lds
mov
je
stos
cmc
jo
daa
int
and
dec
mov
xor
inc
je
sbbb
sbb
sbb
cmc
add
lds
inc
xlat
sbb
imul
cmp
xor
shlb
iret
xchg
lea
mov
fs
push
or
ds
sub
and
add
stos
inc
out
mov
mov
fdiv
fiadds
daa
fidivl
test
inc
mov
add
and
imul
pop
testl
jl
xchg
push
daa
pop
xchg
inc
mov
adc
repz
sub
ror
ret
jae
xchg
push
dec
jnp
and
pop
icebp
ja
ljmp
outsl
sbb
out
xor
in
jbe
adc
call
cmp
jmp
jle
es
test
push
stc
push
mov
pushw
and
xchg
cmp
xchg
sarb
aaa
fdiv
jno
xor
cmpsb
gs
cmpsb
sbb
inc
lret
xchg
mov
pop
pop
cs
sbb
dec
xorb
add
bound
bound
sub
aaa
bound
sub
test
loope
dec
and
icebp
mov
adc
js
in
scas
push
fiadds
lahf
clc
lock
xchg
das
cmp
sbb
cmc
into
inc
pop
sub
shll
xchg
mov
jns
repz
lods
sbb
xor
or
mov
or
rolb
loop
cs
dec
mov
adc
push
and
insb
xchg
imul
pop
bound
leave
and
sbb
insb
dec
loopne
and
pop
adc
lret
orb
adc
lahf
cmp
les
jmp
inc
pop
mov
sub
sbb
imul
pop
xchg
or
mov
push
out
jae
cmp
sti
test
pusha
xchg
in
out
out
imul
mov
test
repnz
and
sub
fmul
cmc
or
push
mov
bound
sbb
filds
adc
push
cmp
dec
aam
pusha
lds
fidivl
out
std
cmpsb
out
pop
ja
xor
jp
imulb
inc
push
pop
cmp
mov
dec
cmc
shrb
cmpsl
or
or
std
pop
add
sub
adc
pushf
imul
cmp
test
pop
mov
stos
in
leave
sti
add
and
mov
pop
sub
mov
mov
dec
mov
mov
scas
jmp
mov
inc
push
lahf
popa
dec
adcl
cli
insl
daa
xorb
test
xor
test
inc
xchg
gs
jbe
repz
and
repz
negl
xorl
out
cmp
daa
imul
rorl
or
stos
mov
pushf
cmp
push
jmp
push
ljmp
aaa
stos
roll
lock
leave
sarb
ret
mul
nop
jb
decl
fisttps
cltd
ja
add
bound
pusha
and
xor
xlat
dec
push
in
daa
enter
loope
aaa
ja
push
scas
js
dec
stos
sub
jge
jnp
cltd
dec
xchg
adc
sub
pop
cld
je
mov
jnp
cmpsb
testl
mov
addl
jne
dec
and
xchg
cmp
mov
stos
clc
shrb
dec
add
adc
mov
mov
jo
std
add
mov
or
cmp
aaa
xor
or
cmp
sahf
dec
inc
clc
pop
sub
pop
scas
cmp
sub
fs
nop
jb
sub
cli
outsl
rcl
adc
in
loop
and
sbb
sbb
push
jp
loopne
inc
mov
xchg
int3
cmp
or
pop
xchg
or
es
fs
fidivrl
mov
cmp
and
add
lods
mov
mov
mov
xor
aam
adc
std
or
pop
ja
scas
test
and
cld
lock
adc
dec
adc
xlat
mov
inc
xchg
cmp
sti
or
or
xchg
and
test
xlat
insl
jmp
fisubs
and
dec
jl
xorl
push
mov
or
shll
decl
enter
pop
xchg
inc
in
clc
pop
adc
inc
lea
in
push
xorl
orl
lahf
or
scas
mov
fucomip
adc
inc
jne
jg
fsts
jge
xchg
ret
mov
pop
cli
xchg
xchg
push
or
cmp
scas
xchg
icebp
xchg
mov
call
adc
and
push
adc
out
fwait
std
cmc
insb
movsb
xlat
negb
stos
rclb
jbe
int
lods
or
pushf
arpl
scas
mov
bound
xchg
lds
and
adc
vpcmpeqw
jg
jmp
xchg
mov
fldcw
push
cwtl
mov
mov
in
scas
out
dec
jae
cmp
mov
clc
shlb
xchg
test
pushl
icebp
das
inc
or
add
push
out
xor
fnstcw
in
mov
ss
or
pop
and
cmp
adcl
cmpb
dec
jnp
or
shrl
ljmp
mov
cmp
ds
in
ret
jg
and
xchg
pop
add
mov
sub
push
jle
inc
stos
mov
pop
lahf
in
jnp
mov
or
pop
es
outsb
cwtl
lods
sub
xchg
mov
cmp
ret
jge,pn
mov
icebp
cli
fiaddl
in
daa
inc
jae
loopne
push
js
push
xor
nop
into
call
sbbb
push
cli
rclb
inc
xchg
outsb
pop
int
and
push
add
pop
ljmp
dec
in
cmp
mov
dec
das
bound
inc
and
sub
addr16
push
lods
cli
fbld
popa
out
daa
mov
push
test
mov
jle
mov
aam
aaa
adc
mov
xor
pop
cli
out
jbe
inc
cmp
jg
repz
mov
dec
rol
push
xchg
rorb
and
call
jnp
lret
popl
cmp
xchg
cmpsl
mov
jl
pop
push
or
ljmp
jmp
mov
push
ljmp
xor
inc
and
adcl
insb
or
sahf
xchg
shlb
aas
test
and
xor
jmp
imul
test
call
out
cmpl
test
cmp
repnz
push
mov
ds
dec
cmp
fnsave
lahf
sbb
xchg
stos
mov
mov
dec
roll
pop
sbb
dec
incl
push
or
mov
xor
rcll
dec
stos
inc
inc
xor
push
addb
mov
ja
jae
jae
xchg
push
sbb
add
aad
lock
jb
data16
lret
loope
jmp
movl
in
inc
adc
mov
and
xor
in
mov
pop
cmpsb
push
bound
iret
clc
mov
repnz
cmp
add
repnz
shll
sub
insb
push
mov
test
jge
adc
cmp
stc
xchg
xchg
pop
ffreep
pop
loopne
adc
lods
pop
xchg
inc
inc
or
and
mov
jno
xor
and
lea
jb
icebp
mov
fdivs
sahf
jne
es
jb
das
mov
std
xor
cmpsl
das
mov
cs
push
std
xor
push
insb
div
push
sbb
sbb
addr16
cmp
stc
std
sbb
pop
or
imul
leave
adc
out
in
faddp
adc
pop
movsb
and
dec
cld
ss
ret
dec
mov
xchg
ja
adc
std
fdivl
cmp
lock
cmp
sbb
adc
movsb
sub
pop
cs
or
out
xor
js
sub
sahf
inc
pop
fdivrl
repz
ret
adc
cmp
cmp
shrb
push
dec
sbb
scas
and
add
xor
and
xchg
addr16
shl
pusha
fwait
shll
jne
icebp
test
inc
push
sbbb
int
icebp
lret
iret
sbb
paddusw
shl
jmp
scas
stc
lcall
sub
dec
mov
outsb
insl
mov
push
popf
add
push
in
leave
and
mov
inc
inc
shlb
pop
add
fldenv
cmp
or
out
push
xor
inc
test
dec
cmp
sub
outsl
lret
inc
repnz
iret
aam
popf
bound
mov
bound
adc
xchg
mov
add
xchg
jae
cwtl
push
dec
aas
cmp
sbb
sbbb
xchg
movsb
cld
jns
or
xor
dec
test
loope
or
push
sub
fucomp
std
scas
mov
mov
mov
push
xchg
add
lahf
mov
sti
adc
bound
or
inc
push
bound
nop
cs
or
shll
aad
jb
mov
dec
jp
cmp
sub
pop
xchg
pop
inc
shll
jno
pop
adc
fcomp
mov
sbb
dec
scas
sub
xor
jmp
ficoml
imul
sti
jns
inc
sub
lret
mov
movl
mov
cmp
cld
clc
rcr
sete
lret
add
stos
stos
or
mov
fcmovnu
mov
add
jae
dec
imul
inc
push
arpl
mov
add
dec
pop
cmpb
pop
inc
push
push
pop
sub
sub
gs
nop
ret
ds
out
pop
repnz
sbb
fcmovnu
xchg
testb
cmc
push
test
loopne
dec
cmpsb
ret
push
jb
into
dec
pop
cmc
cmp
mov
push
ffreep
in
xchg
mov
test
cld
lahf
clc
mov
jbe
cmpsb
mov
insl
sub
push
icebp
ret
lds
or
hlt
mov
rcrb
mov
in
bound
rclb
xor
dec
fisttps
pop
mov
mov
ljmp
adc
mov
fldenv
add
cwtl
xor
pop
nop
scas
mov
dec
or
mov
cld
loop
add
cmp
cwtl
jne
leave
rorb
or
dec
fucomp
in
stc
sub
push
cmovp
jp
ja
inc
push
xchg
xor
mov
repnz
shrb
jo
jns
cmp
loopne
inc
mov
negb
gs
jbe
cli
or
pop
cwtl
dec
lret
shll
fistpll
pop
gs
mov
xchg
cmc
mov
push
fst
add
mov
add
sub
stc
fbld
pop
push
lret
dec
adc
adc
repz
fs
mov
push
dec
popa
ja
add
in
jp
pop
out
ror
cmp
es
push
add
and
cmp
add
iret
out
idivl
add
xchg
inc
out
push
add
pushf
cmp
xchg
mov
lret
sahf
arpl
or
in
adc
cmc
movsb
lahf
into
or
push
test
clc
mov
or
cmp
popf
xor
mov
mov
aaa
clc
shr
rorl
fistps
mov
adc
pop
dec
testb
sub
mov
dec
xchg
mov
adc
bound
pop
imul
push
jno
es
mov
push
clc
mov
lea
lea
mov
dec
and
hlt
es
sub
lahf
mov
aam
and
clc
xor
and
fidivrs
ret
mov
xor
and
push
cmc
mov
push
xchg
add
jnp
adc
fwait
cmp
out
cmc
gs
mov
adc
repnz
cmpsb
add
lret
adc
aam
push
mov
adc
loopne
jmp
jb
lret
push
xchg
sbb
insb
test
sub
test
in
cli
mov
stos
dec
xchg
stos
jecxz
movsb
lcall
inc
popa
mov
mov
test
in
xchg
testb
sbb
inc
jne
or
ljmp
cmpsl
loope
jo
mov
xchg
fstps
dec
mov
sbb
or
cltd
pop
and
dec
jae
push
sbb
sbb
mov
js
mov
sarb
dec
xchg
inc
in
jo
faddp
mov
jo
sub
popa
jp
fld
push
pop
les
rcr
fsubrs
out
test
adc
push
lea
neg
imul
push
jle
stc
cli
insl
mov
scas
mov
sub
xor
push
nop
jo
inc
mov
out
push
and
mov
jmp
es
pop
and
fdivrs
add
or
sti
movsl
ret
pop
cmp
dec
jns
cld
pop
jecxz
or
cmp
mov
mov
add
std
and
cmp
lret
faddl
scas
insl
bound
enter
lcall
movsl
mov
les
mov
icebp
push
popl
add
xchg
cmpsb
push
or
or
cmp
xor
inc
pushf
imul
jns
js
mov
shlb
mov
out
imul
cmp
inc
fcompl
popf
push
dec
jle
or
pop
sahf
inc
arpl
sbb
mov
test
orb
or
jne
push
push
and
sbb
jge
loopne
aam
rcll
stc
push
outsl
and
dec
nop
xchg
mov
stos
mov
jg
je
fldl
mov
das
pop
repz
repnz
xchg
mov
xor
test
nop
mov
insb
icebp
adc
and
and
push
xlat
add
mov
aas
xor
push
push
push
jnp
pushf
xchg
leave
ret
sub
or
jmp
arpl
push
icebp
aaa
push
loop
jb
mov
insl
dec
cltd
push
pop
testb
or
mov
imull
cmp
add
pop
ja
xchg
adc
pushf
inc
or
pop
push
jnp
ret
je
iret
cmp
mov
leave
or
push
jae
jl
fcoms
in
jmp
std
sub
pop
mov
stos
push
push
and
mov
cmp
nop
and
push
jae
jns
cmpsb
adc
outsl
gs
enter
rorl
mov
inc
pop
lret
jp
fldenv
scas
fs
testl
lea
movsl
add
jb
enter
or
xor
sub
movsl
arpl
sbb
adc
cmp
repz
xchg
es
sbb
inc
sbb
dec
mov
sarl
jle
mov
mov
adc
ret
cmp
adc
mov
setge
mov
adc
lahf
int
mov
out
xchg
not
fld1
outsb
mov
push
push
pop
jp
movsb
push
mov
inc
jne
in
push
mov
and
leave
aad
int
cmpsl
repz
xchg
push
mov
idiv
mov
xchg
fisttpl
jmp
mov
mov
ljmp
orl
add
xor
aad
aad
xchg
jae
mov
outsb
jge
imul
stos
cld
aam
sarb
ljmp
es
aaa
jl
and
or
sub
push
inc
test
mov
aaa
jnp
aad
in
cli
mov
pop
xchg
pusha
jge
movsb
add
xchg
inc
movhlps
fisttpl
ret
xor
push
sti
andb
data16
bound
inc
fildll
testb
outsl
cwtl
sub
mov
mov
test
ss
sub
mov
or
es
mov
orl
sti
jb
xlat
cmc
ficoml
inc
pusha
xchg
enter
hlt
add
in
xchg
rol
or
add
sbb
add
add
sub
sub
mov
sarb
ror
mov
fwait
iret
ds
ret
das
push
sbb
test
and
fimull
pop
jg
adc
cli
int3
sub
dec
sti
cmp
stc
int3
out
xor
xor
push
repz
cmc
mov
inc
dec
enter
out
int3
pushl
ds
insl
test
push
es
mov
outsb
mov
cmc
cmpsb
fistpll
popf
mov
frstor
fs
push
icebp
and
pusha
fadd
outsb
scas
scas
lods
mov
sahf
adc
and
fdivs
adc
xor
scas
pop
out
xchg
xor
leave
repnz
in
ffree
adc
sub
cmp
inc
mov
mov
cmp
mov
iret
ljmp
outsl
pop
fucomi
enter
cmp
daa
mov
shr
fidivl
cmp
jnp
mov
and
setns
movsl
pop
test
in
enter
sub
pop
cmp
mov
sbb
enter
jle
push
sbb
stos
mov
cmp
jbe
fcmovbe
cmp
mov
in
inc
scas
js
inc
lds
cmp
movsb
hlt
xchg
sub
mov
xchg
pop
push
into
sahf
repz
jno
sbb
sub
adc
xor
jmp
push
jnp
push
or
fistpll
sbb
add
pop
lea
push
out
sbb
sbb
pop
dec
pushf
sub
mov
mov
icebp
int3
add
push
pop
xor
and
push
xchg
mov
stos
xchg
sub
cmp
add
mov
sti
cmp
sbbb
jno
cli
mov
in
add
in
aam
cwtl
xor
sub
lds
push
mov
das
andl
and
cmp
das
pop
add
movsb
or
cmp
mov
in
repnz
pop
inc
jns
cmpsl
std
decl
pop
cmp
mov
shrb
scas
mov
pop
std
mov
and
lock
pop
add
xlat
add
rcll
inc
cmp
push
mov
mov
cmpb
outsb
insb
fs
sub
mov
mov
cmp
jecxz
cli
mov
mov
in
xchg
leave
cmp
adc
push
mov
imul
inc
add
ja
adc
ja
push
outsb
sub
lahf
out
inc
test
clc
adc
pop
adc
pusha
mov
mov
mov
negl
aas
adc
notl
sbb
sub
ret
mov
cwtl
add
popf
or
mov
cmp
sub
outsl
mov
test
mov
xchg
inc
movsb
sar
out
sti
leave
dec
push
xor
adc
inc
adc
pushf
scas
push
add
mov
mov
xchg
xor
mov
jl
ljmp
or
outsb
sbb
or
xchg
pop
inc
gs
mov
or
sbb
jp
loopne
mov
dec
mov
ds
and
and
dec
test
into
dec
sbb
cmp
adc
stc
popa
ljmp
inc
jo
int3
cmp
inc
insl
sub
xchg
push
sbb
shlb
les
inc
lret
inc
or
dec
xor
inc
jb
mov
pop
cli
xlat
test
pushf
push
cmp
cmpsb
mov
iret
lret
dec
int
mov
imul
movsb
or
mov
jo
push
dec
add
xchg
outsl
mov
push
xor
outsb
scas
add
push
dec
fs
xchg
push
mov
pop
outsb
out
rcrb
das
dec
inc
mov
dec
fwait
sbb
lret
out
xchg
mov
xor
enter
push
das
xor
push
mov
or
inc
idiv
adc
push
mov
fidivrs
test
jns
imul
leave
fisubs
cmpsl
mov
push
jmp
or
jl
test
mov
ljmp
outsl
bound
jns
xchg
in
fsts
mov
stc
xchg
jne
push
add
enter
push
xchg
inc
push
inc
dec
nop
cmpsb
das
lret
bnd
sti
jo
push
xchg
cmp
mov
add
and
out
jae
mov
xorl
xchg
xor
cmp
jae
imul
stos
jmp
stc
inc
adc
jp
imull
aam
jo
adc
push
sub
test
popa
inc
or
cmpsb
std
dec
sbb
cmp
cmp
push
lods
lods
cmp
iret
stos
lock
hlt
xchg
and
push
add
imul
push
mov
cli
inc
push
insb
int
jb
mov
sahf
fwait
into
mov
cmpsl
xor
clc
cmp
mov
push
addb
icebp
ret
xchg
or
mov
mov
mov
mov
mov
lret
add
pop
dec
sub
jbe
fistl
sub
cmp
inc
negb
dec
ret
push
sbb
stos
enter
push
jp
cmp
cmpsb
mov
in
fdivrl
and
jmp
mov
mov
add
into
sti
xchg
jl
cmpsl
sbb
cmp
insb
divb
mov
and
xor
ret
adc
movsl
xor
jnp
or
push
js
pushf
xchg
ljmp
insb
push
fisttps
in
test
cmpsb
inc
adcb
insb
cmp
push
mov
testl
add
add
xchg
xchg
xor
popf
lods
add
xchg
mov
sub
sub
in
inc
outsl
dec
out
data16
cmpb
mov
mov
shlb
xchg
movsb
mov
ss
adc
enter
cld
push
add
movsl
lock
imull
loopne
mov
loopne
pusha
iret
stos
in
fdivl
in
dec
cmpsl
int3
push
movsb
cli
dec
cmp
cwtl
stos
or
inc
shll
jo
adc
jg
inc
fs
fidivrl
ljmp
and
lods
into
jge
mov
das
mov
mov
fdivs
jno
and
pop
fcmovnu
ret
rclb
fldcw
xchg
push
ja
mov
or
addr16
mov
nop
adc
jle
dec
xchg
jne
or
mov
inc
cmp
movsb
adc
das
rol
mov
add
out
jno
mov
lcall
add
push
sbb
std
cmp
push
insl
add
xor
xchg
insl
add
std
mov
push
xor
cmp
dec
mov
sub
imul
aam
mov
xor
jle
push
dec
cld
aam
movsl
loop
leave
mov
or
add
aas
lret
insl
and
or
ds
sub
loopne
andb
lea
lret
ficompl
xchg
jmp
je
loope
arpl
jg
pushf
sub
loop
xchg
pop
cltd
add
lds
iret
stos
mov
adc
jo
and
mov
fisttps
pop
addr16
test
sub
push
pop
call
push
cli
mov
dec
sahf
mov
inc
lds
mov
outsb
lret
rolb
mov
stos
xchg
divl
or
les
push
clc
inc
and
mov
mov
fwait
and
mov
mull
xchg
and
mov
sbb
js
repz
jecxz
js
sub
sub
popa
cld
jns
movzbl
xchg
mov
and
sti
jl
jnp
dec
out
cmp
es
mov
push
sub
out
xchg
pop
xor
imul
push
jnp
xor
movsb
mov
adc
mov
adc
dec
pop
or
cmpsb
mov
lret
negb
xchg
fbstp
sub
test
cltd
popf
je
insb
pop
mov
imul
or
pop
push
lret
and
std
cmpsb
mov
jnp
fsubr
rolb
lahf
mov
repnz
cmpl
js
push
scas
dec
ja
and
push
les
aad
stc
in
shrb
shll
arpl
push
roll
in
cli
fdivp
xlat
stc
add
stc
or
jmp
pop
and
js
pop
out
cs
fsubs
icebp
ljmpw
hlt
mov
pusha
mov
in
xor
push
aas
enter
sti
inc
sbb
xchg
adc
add
jno
adc
mov
jno
mov
lret
jecxz
mov
es
mov
cmpsl
cmp
mov
inc
gs
add
inc
push
popf
xchg
xor
sbb
jno
or
dec
insl
add
pop
cmp
dec
dec
movsb
mov
pop
mov
inc
fcoms
cmpl
out
xor
pop
inc
js
cwtl
bound
dec
adc
fstp
fwait
mov
mov
stc
ficoms
or
dec
shl
xchg
jae
and
nop
or
sbb
test
pushf
adc
sbb
jns
fistl
icebp
insl
mov
fsubl
jg
lahf
jae
movsl
pop
mov
jne
mov
mov
mov
cmpsl
or
mov
mov
push
sahf
cmp
into
or
jp
dec
cmp
movsl
xor
cli
mov
mov
call
stos
inc
pop
adc
jle
orl
sub
arpl
call
and
popf
cmc
enter
mov
sbb
leave
hlt
out
mov
mov
sbb
mov
incb
push
push
adc
xchg
push
sub
mov
xchg
and
adc
fs
lods
add
add
enter
pop
scas
lret
sub
das
pop
int
cmp
call
cmp
adc
xchg
xchg
insl
out
lock
scas
cld
cmp
and
or
or
out
sub
lret
ds
mov
shll
lcall
push
mov
loopne
je
es
xchg
rcrl
and
xchg
imul
mov
out
adc
lods
out
in
pop
fwait
pop
jecxz
adc
or
or
rorl
rolb
test
adc
outsb
imul
fadd
or
or
xchg
sti
call
outsb
insb
dec
jae
das
mov
stos
sbb
jge
pop
push
sbb
mov
aam
cmp
push
xor
andb
dec
hlt
dec
call
and
mov
test
or
xor
bound
aad
repz
mov
jle
xor
ret
test
cmpsl
jp
iret
fsubl
dec
dec
lods
psraw
cmp
push
lcall
icebp
mov
imul
fildll
mov
add
cmp
mov
mov
cmc
pop
into
test
mov
or
cli
rclb
stc
dec
popf
call
in
ss
das
sarl
dec
add
mov
inc
push
xchg
test
dec
pushf
pop
xchg
sub
sbb
mov
stos
pop
pop
outsl
lods
add
movsl
add
mov
jae
test
mov
adc
jno
lahf
aas
jg
cs
mov
in
in
mov
push
or
mov
xchg
xor
inc
leave
dec
rcrb
mov
shl
push
into
dec
and
and
ret
dec
iret
sbb
cs
roll
fadd
mov
cs
subl
scas
xor
sub
das
out
or
mov
outsl
cwtl
xchg
test
loope
cld
jp
test
xchg
addr16
pop
dec
adc
dec
mov
or
xchg
inc
fs
and
cmpb
fdiv
mov
jecxz
xchg
dec
mov
ljmp
sti
adcb
je
les
mov
cmpsl
mov
and
adc
sub
push
mov
jb
sub
icebp
js
xchg
dec
inc
sbb
dec
mov
mov
roll
std
in
int
pop
inc
test
les
clts
xchg
lret
xor
lds
rclb
cmp
mov
inc
pop
in
or
pop
inc
enter
rcrb
pop
subl
cmpsb
mov
pop
jb
pop
stos
adc
push
cmp
xor
adc
fldcw
ja
cmp
lret
jge
test
rorl
or
lods
aam
pop
cld
xor
pop
lret
addr16
inc
fisubl
out
test
inc
popa
clc
je
or
adcb
rcl
popf
xor
testb
cmp
push
outsb
dec
gs
jns
fidivl
lcall
adc
mov
stos
addr16
mov
mov
fimull
call
addr16
pop
cmp
lods
insb
jg
sbb
shlb
loopne
es
pop
pop
xor
jns
jbe
test
addb
dec
sub
dec
into
gs
xor
mov
in
add
dec
out
out
mov
push
cmp
mov
test
lret
cld
frstor
push
push
les
das
jp
popa
jno
jge
sbbb
not
mov
scas
dec
sub
jae
push
fwait
jnp
cltd
lods
mov
pop
scas
decb
insl
add
pop
sub
push
popa
xchg
sub
jno
out
mov
inc
out
jno
cmc
pop
shrl
push
lea
pop
in
orl
mov
out
ljmp
mov
inc
push
inc
fldl
mov
and
out
sbbb
or
cmp
aaa
jp
popa
clc
mov
jg
fsubrp
fdivl
add
jae
mov
lods
int
in
loopne
cmpsl
sbb
mov
adc
ljmp
test
or
fidivrs
xor
push
dec
lock
rcrl
inc
fld
iret
imul
in
ret
sbb
ds
fbld
es
mov
push
popf
stc
shlb
mov
sbb
pop
inc
sub
repz
inc
ficompl
ror
cli
shlb
or
roll
adcb
callw
jne
subl
adc
inc
sub
adc
test
scas
rorl
or
lock
cli
xchg
mov
ret
cld
rorb
or
pop
repnz
sub
push
push
dec
jecxz
mov
mov
testl
mov
sbbb
sbb
jo
or
xor
les
mov
nop
jmp
stos
inc
fmuls
test
stc
insl
and
sub
mov
testb
jmp
add
cmpsb
cmp
int
ljmp
in
inc
fstl
cmp
shll
add
lret
mov
adc
and
rclb
std
sbb
outsl
push
adc
fidivs
xchg
jns
xchg
lret
lret
loop
out
in
lcall
cmp
fidivl
rcrb
xor
cs
mov
sub
jns
js
jge
jne
jle
ret
imul
shrb
cli
dec
sub
lcall
push
scas
mov
mov
rorb
push
cmp
out
test
push
mov
jbe
mov
stc
or
push
ljmp
push
popf
xorl
scas
movsb
iret
data16
iret
data16
pop
repnz
lcall
jbe
pop
mov
das
sahf
xor
cmp
ss
pop
push
movsl
test
jns
movsl
iret
data16
jmp
or
sbbl
sub
dec
in
ja
fidivs
shrl
rorl
adc
push
pop
inc
xlat
mov
scas
stos
lret
aad
pop
lock
mov
inc
push
push
and
mov
les
xor
and
pop
ja
sub
mov
les
out
dec
fists
and
sbbl
push
call
int
stos
inc
add
and
pop
cmp
scas
fs
inc
test
lret
cmc
loope
sbb
sub
dec
cmp
stos
data16
imull
lret
repz
aam
jb
push
pop
lock
das
mov
pop
jno
dec
stos
jp
mov
hlt
or
push
and
dec
lods
jge
push
cmpsb
into
cmp
clc
enter
sbb
inc
adc
in
dec
cli
xchg
popf
jo
mov
lret
push
in
repz
dec
dec
push
cld
xchg
mov
mov
mov
mov
dec
ds
cmp
mov
leave
lcall
cld
out
sti
xchg
cs
mov
dec
dec
jecxz
push
fs
mov
mov
jmp
in
sbbl
add
push
jnp
mov
sbbl
fsubr
cmp
adc
xor
daa
xor
sti
outsb
inc
dec
in
sti
xchg
mov
fldenv
jmp
in
and
dec
insb
jge
fwait
movsl
mov
test
fidivl
pop
pop
and
cmp
movsl
xorb
mov
fstpl
add
and
push
jmp
sbbb
leave
mov
dec
pop
adc
mov
std
xchg
pusha
jo
push
stos
xorb
neg
mov
rolb
xor
pusha
bound
xchg
adcl
out
loope
dec
in
add
shll
mov
orb
popa
loope
cmpsl
pop
clc
shlb
cmp
outsl
push
push
popf
xchg
sub
shr
xor
pop
repz
in
inc
adc
ja
dec
fbstp
push
in
rclb
inc
xlat
daa
out
sti
adc
shll
push
insb
xchg
leave
pusha
int
fdivl
out
sub
pop
outsb
add
jmp
sub
ljmp
aam
scas
add
enter
ds
push
jecxz
dec
js
fildll
iret
dec
loope
mov
jnp
dec
or
es
pop
stc
nop
mov
jle
out
fsubrs
pop
pushf
xor
add
pop
subb
jnp
add
aad
stc
std
xchg
cs
dec
out
dec
push
mov
scas
jl
fcompl
es
stc
sbb
cmpb
imul
cmp
sub
inc
or
pusha
xchg
sbb
mov
xor
and
push
mov
dec
data16
sub
lret
push
xchg
xchg
xor
jp
jecxz
loop
popa
and
jbe
push
dec
hlt
je
movsb
aas
popa
cltd
or
mov
sbb
or
cs
pop
cmpb
shlb
scas
out
dec
ficoml
pop
ljmp
outsb
idivl
fadds
adc
daa
mov
pop
or
stos
pop
outsl
mov
push
scas
cld
test
jge
adc
mov
sub
rcrb
mov
add
cwtl
push
cmpsl
movl
das
mov
push
les
cmp
addr16
fisttps
and
das
ficompl
push
inc
push
bnd
outsl
notl
test
iret
jp
pop
cmpsl
loope
push
and
pop
notl
adcb
adc
loopne
int
lods
adc
cltd
cmp
call
pushf
mov
or
or
shrl
fcoms
icebp
mov
mov
inc
in
lret
jg,pn
inc
cwtl
pop
pop
xlat
jb
loopne
in
mov
sbb
lahf
xor
xorl
dec
or
subb
mov
shr
leave
es
int
sbb
fnstenv
std
jge
xchg
in
lea
ret
or
imul
pop
bound
test
xlat
sub
cld
inc
shlb
pop
fisttpl
testb
push
and
div
push
push
out
push
inc
addb
cwtl
in
scas
dec
and
ficomps
adc
js
mov
push
inc
in
mov
mov
out
mov
or
and
mov
aam
enter
mov
inc
js
int
jl
jmp
out
lret
je
hlt
or
xor
cmpsb
inc
inc
pop
jnp
xchg
je
test
add
sub
inc
call
jg
subb
mov
push
pop
in
lods
and
inc
jmp
mov
xchg
adc
xor
inc
jns
mov
push
cmpsl
rcrb
aas
mov
in
outsb
scas
dec
stos
sub
jno
fistps
xchg
outsb
dec
ljmp
xchg
pop
jne
lods
jmp
out
hlt
cmpl
and
or
mov
xor
pop
mov
rcr
xorb
jecxz
xlat
mov
add
jle
loop
push
test
shrb
popf
movsb
jmp
add
sub
push
jae
cmp
ret
enter
mov
in
pop
fsubs
sub
shll
call
mov
jp
lret
add
push
xor
xchg
cmpl
stos
movsb
movsb
cmp
lret
loope
std
test
popf
push
dec
loop
jl
sbb
mov
ret
inc
lock
inc
inc
xor
jae
jnp
lcall
push
in
out
out
pop
psubsb
cmp
imul
ret
mov
fdivrl
rorl
cs
pusha
pop
rcrl
testb
aam
stos
add
es
push
push
push
mov
js
jmp
fmul
jbe
cld
stc
dec
in
push
mov
push
dec
jl
jge
mov
push
rol
in
test
icebp
cwtl
das
and
insb
add
ss
imul
xchg
push
jmp
mov
jb
pop
adc
nop
daa
popaw
and
inc
sarl
arpl
stc
cmp
adcb
cmp
lahf
imul
mov
fcomp
inc
fildl
daa
push
out
addr16
icebp
mov
mov
mov
ljmp
out
and
xor
stos
aaa
into
jp
test
xor
pop
jae
sbbl
mov
es
add
mov
adc
negl
sarl
xchg
cmp
pop
or
es
adc
mov
loopne
jl
sub
push
popf
arpl
push
test
sbb
sub
sbb
mov
mov
jmp
inc
jecxz
add
test
xchg
imul
imul
into
mull
dec
adc
mov
pop
xor
jnp
jl
ja
jp
lea
ret
push
add
mov
daa
sub
mov
ret
pop
hlt
adc
data16
hlt
xor
mov
out
aad
mov
incb
mov
or
push
or
fcom
push
jecxz
cmp
push
in
push
loope
mov
js
lods
inc
mov
lret
pop
sub
adc
jmp
inc
and
aad
or
sbb
sti
adc
scas
int
fidivrs
adc
jne
cli
cmp
stos
pop
lods
xor
in
mov
lock
lret
adc
fnsave
out
xor
test
pop
sti
pop
mov
dec
adc
ja
push
fs
repnz
in
ljmp
push
mov
es
jno
loopne
adc
jbe
aas
push
mov
pop
mov
fsub
jnp
pop
pop
hlt
nop
das
add
in
sbb
cmp
ds
pop
sbbl
pop
lods
les
jp
stos
icebp
inc
fldenv
int
adc
inc
pushf
xor
jns
inc
xchg
popf
xor
fs
xchg
jmp
rcrb
gs
call
or
cmp
cmpsb
cmp
loope
fistl
mov
jne
xor
mov
xchg
xchg
addl
addr16
sbb
aam
dec
out
inc
xor
jmp
push
jmp
lods
aam
cmc
scas
mov
outsl
js
ret
xlat
int
leave
sub
xor
das
sbb
push
movsl
push
xor
test
fldcw
mov
xor
jg
ret
imul
ret
cmp
sbb
sbb
hlt
adcb
cld
outsb
stos
cmp
and
cmp
stos
fadd
je
into
icebp
sbb
adc
jge
mov
pop
pop
add
nop
mov
popf
and
or
adc
sub
add
sti
rcrl
xchg
adc
orb
sub
push
dec
push
outsl
adc
es
notl
cmpsb
cmc
scas
push
sub
lock
mov
popa
mov
jbe
xchg
std
jl,pt
push
test
mov
jnp
scas
pusha
neg
sahf
add
xchg
cli
movsl
cmp
aad
xor
jne
mov
jl
jne
jae
call
xchg
or
lds
scas
scas
nop
add
sbb
cs
fbld
mov
scas
inc
mov
sbbl
fimuls
pcmpeqd
jl
insb
lods
inc
pop
jg
sbb
fldt
lds
fs
push
and
pusha
push
xchg
testl
dec
enter
mov
lods
cld
adc
inc
inc
incl
out
outsl
dec
fistps
mov
jbe
jecxz
adc
add
xor
pop
push
mov
lret
mov
push
mov
pop
divb
xor
nop
movsb
pop
clc
cmpsb
pop
movsl
xlat
daa
inc
fstl
test
in
inc
es
test
xchg
pop
mov
scas
xchg
and
and
and
mov
jbe
pop
imul
sub
adc
mov
popf
inc
sbbl
hlt
xchg
clc
test
and
pop
push
sbb
push
mov
mov
xor
mov
clc
inc
cmp
rolb
adc
outsl
add
push
mov
mov
inc
fnsave
push
cmp
js
test
sbb
out
and
pop
jp
ss
xchg
popa
clc
int
add
mov
mov
popf
cmpsb
xchg
inc
ffree
movsl
ss
lock
and
sbb
dec
xchg
cli
cwtl
and
ljmp
lea
push
imul
fnsave
fldl2e
orl
and
pop
push
addr16
into
push
jns
add
roll
push
dec
pop
sbb
orb
pop
push
aaa
into
bound
js
pop
adc
inc
insl
cmp
jp
cmp
dec
scas
mov
sbb
scas
and
and
inc
and
adcl
dec
in
mov
sti
out
sub
aas
jp
pop
insl
push
mov
outsb
arpl
lods
inc
push
jecxz
xor
test
lea
jg
movsl
and
stos
std
les
stos
movsl
cmp
dec
arpl
jns
clc
push
xchg
add
rcll
cmp
xor
test
jecxz
mov
flds
dec
and
mov
add
std
xchg
xor
cmp
test
lods
adc
cmpsb
pop
ja
dec
rolb
mov
je
sub
mov
aaa
js
sbb
ret
and
pop
sbb
pop
dec
pop
push
in
push
addr16
stc
xchg
xchg
cmp
add
add
scas
xor
mov
push
test
inc
fistl
shl
repz
je
push
sbb
xchg
and
cmp
in
test
push
fwait
xchg
pop
and
lock
push
out
add
inc
fmull
or
jns
aaa
push
jmp
mov
or
dec
pop
jnp
dec
les
popl
cli
loope
js
icebp
or
jg
push
mov
fldcw
jge
clc
jecxz
sub
sub
test
je
fbstp
sahf
and
push
insb
fidivs
inc
stc
jne
xchg
adc
out
xchg
mov
psubb
fdivl
call
iret
lea
in
pop
pop
adc
xchg
cmpb
or
xchg
mov
xchg
dec
fucomp
orb
outsl
push
insb
and
call
mov
jo
push
faddl
movsl
hlt
adc
stos
inc
aad
inc
fildl
stos
jecxz
in
gs
push
push
test
test
mov
ror
lds
mov
stc
outsw
pop
cmc
pop
nop
add
fwait
sti
fldenv
xor
adc
xor
inc
fsubr
pop
loope
cmp
jno
stos
xchg
push
and
jbe
lds
ret
fldenv
cli
sbbl
adc
popf
inc
bnd
in
mov
xor
lret
inc
sbb
ret
loop
inc
iret
fsubrs
outsb
test
add
mov
addr16
pop
inc
retw
insb
popa
clc
sahf
pushf
push
in
push
mov
sti
xchg
add
sub
lods
cmp
sbb
pusha
shrl
hlt
test
xchg
jnp
add
and
aaa
lods
lds
mov
stc
daa
lods
push
in
sbb
pusha
shrl
test
push
jmp
and
dec
loop
jle
push
call
lret
rcl
mov
and
and
pop
outsb
push
shrb
xchg
jbe
in
push
insb
lret
bound
jecxz
pop
sahf
push
jmp
stos
push
lret
les
mov
mull
lds
in
jnp
cli
stos
adc
add
repz
sbb
sub
xor
mov
mov
test
dec
push
mov
mov
repnz
pop
in
ds
or
out
xlat
push
add
mov
xlat
outsb
mov
iret
pop
hlt
mov
iret
aam
rcrb
lock
gs
sub
shrb
inc
add
cs
movsl
cmp
sub
inc
fldenv
ficomps
rorb
jl
adc
outsb
test
xor
mov
sub
pop
jle
jo
pushf
cwtl
gs
lret
loop
in
lcall
movsb
cmp
ret
pop
sahf
mov
inc
fcmove
mov
in
pop
push
cmp
inc
aas
sbbl
xchg
mov
in
in
pop
push
lock
fsubp
inc
fs
jno
pushf
xor
cltd
add
and
cmp
ret
mov
inc
fidivl
pop
sub
sbb
sbb
ret
ss
int3
arpl
fldcw
or
or
and
mov
lods
subb
and
dec
jecxz
and
mov
sub
sbbb
add
mov
movsb
add
sub
add
int3
push
imul
cmpsb
lahf
jbe
adc
or
add
inc
sub
push
divb
cmpsb
cmc
adc
addb
cli
xchg
fisubrl
mov
pop
sbb
nop
mov
ret
clc
mov
mov
insb
add
out
xchg
fldl2t
or
lods
inc
repnz
test
dec
jecxz
jns
subb
sbbb
mov
in
hlt
mov
cvttps2pi
aas
dec
jmp
bound
mov
ljmp
pop
hlt
mov
lods
inc
lea
dec
loop
inc
icebp
mov
cmp
test
fdivr
xchg
iret
xchg
and
sub
cli
xchg
mov
arpl
push
jmp
fwait
mov
sti
xchg
xchg
frstor
test
sub
or
xchg
jg
jecxz
cmpsl
jle
xorl
sbb
jne
cltd
sub
mov
pop
jbe
pop
test
ret
hlt
dec
loopne
inc
push
add
test
lods
repnz
lds
cmc
call
jecxz
dec
in
fdivl
gs
loop
add
xchg
xor
sbb
and
lds
push
in
sub
jae
jl
add
iret
xor
cmpsb
arpl
scas
inc
and
aad
inc
int
jne
dec
loop
xchg
jmp
leave
push
jp
xchg
or
fidivrl
sub
imul
dec
loop
dec
shrl
fisubrs
adc
mov
testb
sub
cs
jl
lret
lahf
dec
loope
sub
sbbb
sbb
cmp
stc
xchg
cmpsb
cmp
push
dec
in
call
push
jge
les
xchg
les
lods
inc
inc
loope
mov
arpl
cwtd
xor
push
lea
mov
fistpll
adc
rcll
dec
test
xor
push
test
sub
xchg
mov
movsl
scas
std
rcrl
sub
add
jbe
and
push
ret
mov
in
test
mov
clc
sub
iret
cltd
adc
lds
ljmp
jbe
jle
outsb
add
pop
push
or
pusha
outsl
lods
inc
mov
lret
cld
dec
out
cmp
out
test
sti
xchg
lods
popa
mov
xchg
mov
mov
mov
inc
fistl
aam
cmc
pop
insl
add
adc
pop
xchg
mov
inc
aaa
pop
mov
mov
add
cld
xchg
xor
cmp
lahf
test
lods
adc
pop
inc
fmull
sub
out
dec
lret
js,pt
mov
insl
add
rcrl
pop
mov
dec
and
sub
jae
orl
xchg
fucomi
test
and
andl
lds
movsb
pop
notb
int3
lret
sub
fwait
sbb
dec
stos
mov
mov
push
mov
fwait
xor
dec
loope
inc
xchg
cmp
test
lods
mov
fisubrs
sub
es
lret
fiaddl
cmp
std
rclb
inc
fcoml
out
push
popf
loopne
loop
jo
cmp
rcrl
adcb
in
mov
mov
mov
stc
mov
roll
pop
sub
pop
dec
mov
mov
lods
lret
lods
inc
cld
mov
shll
pop
dec
loop
and
xchg
outsl
in
andl
mov
cld
add
sub
out
outsl
lret
popa
push
out
push
int3
mov
notl
inc
fisttpll
push
in
push
gs
xchg
inc
pop
repnz
cmp
stos
sbb
mov
sbb
xchg
pop
dec
in
shlb
pushf
pop
testb
push
popf
dec
inc
dec
out
bound
xchg
inc
pusha
divl
mov
ds
pop
scas
inc
cmp
ds
dec
filds
lods
fbstp
jae
imul
sub
jbe
lods
mov
out
into
cld
aas
sub
inc
fsubrs
test
push
roll
out
xchg
or
sti
inc
lahf
ss
sub
jnp
cmp
rorl
iret
sub
push
jg
push
data16
mov
movsl
stc
cwtl
das
sub
sahf
xor
je
jmp
ljmp
out
mov
pop
imulb
roll
inc
clc
jne
adc
es
roll
sbb
enter
mov
es
lret
add
xchg
int3
dec
jecxz
and
xlat
ret
mov
hlt
adc
clc
sbb
mov
push
out
mov
out
sahf
pop
mov
pop
ljmp
scas
xor
pop
scas
inc
mov
pop
cmpsl
dec
fwait
pop
or
loopne
xor
pop
inc
pop
ja
lea
pop
gs
xchg
ficoml
outsl
push
and
mov
stos
push
sbbl
iret
scas
cmpsb
cmp
mov
inc
fnstsw
jmp
inc
fcoml
js
pop
mov
nop
stos
xchg
fadd
lods
inc
mov
and
mov
lret
cmpsl
ds
into
xlat
outsb
shl
jle
repnz
in
adcb
call
lds
sar
xchg
repz
xchg
sbb
adc
jns
jns
out
test
daa
mov
pop
loopne
sub
mov
and
inc
mov
push
movsl
testb
mov
cmc
arpl
in
mov
fidivrl
insl
add
hlt
mov
push
lret
mov
shlb
jne
cmp
and
sub
fwait
or
cmpsb
mov
and
jge
rorb
incb
orb
mov
mov
mov
inc
fisubrs
inc
loopne
jbe
insl
add
mov
adc
jge
adc
repnz
cmpsl
je,pt
push
call
shl
ljmp
pop
xchg
sub
inc
jo
jbe
sub
sarb
mov
fisubs
rcl
insb
ret
addr16
hlt
test
out
addr16
sbb
adc
addr16
xchg
cs
jmp
in
xor
sbb
xor
xchg
sub
pusha
test
ljmp
jnp
nop
daa
push
andb
mov
or
or
and
dec
jecxz
addb
mov
push
popf
mov
xchg
or
xor
push
pusha
inc
fcoml
jle
mov
lcall
ret
adc
scas
inc
testl
fdiv
mov
add
je
rclb
lds
push
out
mov
sbbb
cmpsb
lock
mov
xacquire
and
sti
xchg
icebp
dec
and
xchg
mov
leave
call
push
out
in
inc
fcomp
cmp
jle
lock
xchg
jecxz
adcb
adc
pop
test
pop
scas
add
cs
pusha
pop
sub
mov
aam
ja
inc
and
bound
adc
adc
pop
mov
push
mov
scas
stc
jnp
outsb
lods
cld
lahf
ss
lds
imul
or
push
imulb
mov
std
sbbl
les
mov
push
cld
mov
out
jns
jle
sti
es
cmc
incl
scas
dec
out
mov
lcall
loopne
shll
ret
adc
test
pop
subb
popf
shlb
mov
out
add
inc
jmp
jno
imul
pop
cmp
mov
mov
into
add
adc
pop
dec
in
jg
clc
outsl
cmpsl
jmp
dec
adc
mov
xor
inc
out
xchg
xchg
into
jne
dec
shrl
loope
add
cmp
stos
cmp
mov
fistl
mov
rorb
add
pop
lock
jmp
aas
fisttpl
jne
aam
rolb
data16
shll
bound
dec
ja
imul
push
fwait
hlt
mov
mov
jp
addb
mov
shlb
loop
push
mov
sbb
fdivl
jae
mov
or
pop
cld
ret
mov
cli
dec
mov
stos
daa
arpl
xchg
es
xchg
cltd
mov
aam
iret
push
inc
pushf
inc
push
adc
mov
shrb
flds
test
xor
pusha
shrl
fcoml
stos
into
mov
xlat
outsb
jle
adc
insl
push
mov
xorl
arpl
ds
push
testb
bound
into
inc
mov
lods
inc
div
xchg
sub
or
into
jns
xor
jae
stos
inc
cli
fwait
aam
int
aaa
into
jle
jae
pop
xchg
test
add
stos
jno
push
in
cmpsb
pushf
pop
out
int
mov
outsl
sbb
dec
out
xor
xor
popf
xor
shlb
mov
decb
and
dec
xchg
and
xchg
push
mov
or
cmp
jge
adc
into
aas
cmp
mov
dec
mov
push
mov
ss
fstpl
push
xchg
mov
xchg
pop
cmp
lods
jae
xor
int
aam
adc
movb
rclb
outsb
add
imul
es
mov
xchg
mov
xlat
and
or
aas
lods
cmp
loop
fnstenv
xor
pop
scas
pushf
push
mov
mov
je
or
jge
dec
pop
jno
cwtl
xchg
pusha
neg
fs
aad
cmp
sub
mov
sbb
rcrl
add
clc
push
sbb
rcrl
add
sbb
std
and
nop
xor
sbb
cmp
cmp
popa
mov
pusha
xchg
daa
je
out
popf
mov
cmp
shl
movsb
sahf
xchg
push
fstl
and
scas
inc
xchg
mov
mov
and
sbb
ja
cmp
shrb
push
cmp
sti
and
scas
daa
dec
pop
and
adc
outsl
sti
ss
dec
cmp
sbb
jecxz
addl
pop
sbb
cmpsb
pop
leave
popa
xor
cmp
add
sbb
sbb
jo
cmp
dec
mov
lds
mov
push
ret
sbb
sbb
cwtl
hlt
cmp
fisubs
cmp
mov
dec
mov
lcall
pop
rcrl
std
mov
and
add
int3
push
ljmp
and
push
subl
pusha
mov
mov
add
test
push
std
sub
and
lea
ds
leave
sub
popf
pop
pop
xchg
sub
cmpsb
rolb
mov
inc
xor
cmp
pop
dec
push
and
or
jl
sub
add
and
int3
imul
loop
add
lcall
jb
daa
lret
test
dec
push
cmp
in
cld
mov
repnz
mov
xor
popa
cmpl
mov
pop
icebp
add
test
es
pop
sub
sub
lods
int3
mov
gs
fbstp
xchg
es
fcmovbe
insb
or
lods
inc
cmpsl
sub
lret
cli
adcb
mov
ljmp
outsl
or
push
shll
bnd
add
enter
gs
lret
es
push
in
sbbb
jns
sbb
int3
mov
push
les
rcrl
fdivl
jae
outsl
mov
fcomip
lea
pop
xor
lea
adc
arpl
xor
lods
add
xor
push
mov
outsl
adc
lods
je
testb
test
lods
pop
mov
adc
fistps
pusha
shlb
mov
fs
out
and
or
mov
fstp
outsl
cmovo
lods
jno
testb
adcl
pop
mov
adc
mov
clc
loope
fwait
xor
adcb
jl
push
scas
push
sahf
clc
int
cld
jg
lds
dec
popf
xor
sbb
mov
mov
test
cmc
fnstenv
mov
testl
int3
gs
adcl
or
jo
sub
inc
ffree
pop
mov
stos
mov
imul
mov
adc
arpl
pushf
and
mov
leave
pop
or
inc
shl
orl
add
add
mov
movsl
jle
mov
cld
mov
dec
aam
rclb
push
ljmp
jno
jns
cld
xchg
call
or
mov
in
lods
inc
pop
pop
cmp
lea
bound
push
out
fists
jbe
xor
pop
sahf
pop
push
xchg
sub
cmpsl
mov
shlb
frstor
push
dec
out
test
mov
popf
xor
repz
and
mov
fbstp
fnstenv
cwtl
data16
leave
jl
mov
rclb
cmp
xor
pop
or
je
mov
paddsw
mov
cwtl
pop
jae
je
ret
shrb
or
aad
imul
mov
xor
cmp
mov
mov
out
and
dec
ss
cltd
push
dec
lods
lock
fnstsw
push
notb
test
pop
in
jnp
imull
or
mov
push
int3
sub
sbb
sub
inc
loopne
pop
cltd
loopne
dec
stos
cmove
dec
jg
mov
or
aaa
add
sbb
jo
sbbl
daa
push
sbb
rolb
movsl
xchg
inc
push
rcrl
adc
rcrl
sbb
inc
scas
lods
dec
push
movsl
lock
fidivl
adc
inc
loop
xchg
adc
xor
insb
add
test
shlb
fcoms
or
inc
xchg
xor
fs
pusha
call
or
jg
fsubrs
popf
mov
int
pop
scas
and
scas
incl
bswap
or
and
les
xchg
sub
aam
dec
or
outsb
add
sub
arpl
lea
push
jp
subb
or
mulb
sub
push
fxch
popa
or
lods
movsb
sub
jle
lds
leave
testb
pop
push
jmp
sub
sub
psubd
xor
popf
add
lods
in
adc
arpl
imul
add
sbb
sbb
pop
insl
mov
clc
out
ret
pop
add
adc
jns
push
mov
jo
dec
mov
pop
out
and
es
sub
rcll
mov
out
xor
fstl
and
loopne
lock
mov
cltd
sbb
add
mov
mov
lahf
pop
mov
test
jnp
and
sub
jnp
fwait
add
lea
test
pop
inc
pop
rcl
sub
aaa
movsl
fildll
push
inc
jo
test
jmp
jne
jp
mov
jb
insb
ljmp
pop
mov
sub
add
push
iret
dec
sbb
fs
xor
jmp
jno
xlat
int3
xchg
cmp
inc
ja
mull
xlat
sarl
pop
fadd
sub
and
xor
jae
fsubrs
pusha
push
sahf
out
test
in
pushf
imul
fldenv
incl
sub
lcall
dec
push
xor
mov
imulb
js
lock
pop
push
fcompl
push
push
cs
xor
insl
bound
jb
std
xor
in
mov
dec
jmp
adc
lcall
jo
fisttps
js
mov
enter
mov
ret
xor
pop
stc
mov
xor
leave
in
jmp
adc
roll
jp
loope
das
mov
lods
sarl
sub
and
test
pop
adc
outsl
mov
dec
adc
repnz
push
nop
adc
cmp
das
cmc
in
sbb
adc
mov
arpl
cmpsb
lock
sbb
sbb
lods
xrelease
sbb
cmpb
mov
mov
nop
clc
cmpb
repnz
mov
sbb
pushfw
aam
or
push
inc
bound
xor
lret
adc
pop
mov
ret
xor
mull
mov
adc
mov
je
pop
ljmp
xchg
lcall
fidivl
aaa
loope
ss
jge
arpl
sub
fmuls
lret
push
sti
pop
les
sbb
push
pop
xlat
xchg
hlt
popa
xlat
xchg
and
inc
push
sti
ficoms
pushl
mov
imull
es
out
add
mov
mov
es
or
mov
and
xchg
cld
shl
aaa
movsb
sub
mov
dec
xor
jnp
xchg
mov
in
out
lods
ljmp
pop
pop
inc
repz
aam
jo
call
dec
push
add
test
xor
shlb
cli
jo
paddsw
mov
push
int
fnstenv
push
movb
mov
into
enter
loopne
sub
lcall
mov
popl
bound
std
mov
icebp
roll
pusha
scas
adc
mov
mov
jg
das
dec
sub
jmp
pop
sbb
mov
dec
cltd
and
sub
mov
sbb
sbb
inc
jmp
out
xchg
add
sti
sbb
dec
faddp
repnz
pusha
cmp
push
ror
dec
pop
mov
cmpsb
and
rorl
jno
add
xor
xchg
mov
add
jge
jle
or
nop
imul
andl
jg
jg
les
add
test
cld
outsl
push
mov
sbb
sbb
mov
xor
push
test
insl
mov
lret
div
std
data16
sub
push
fnsave
call
mov
test
stos
push
jnp
add
out
adc
push
xchg
cld
sbb
mov
sti
dec
jle
jno
mov
mov
loopne
dec
cmpsw
das
movsb
xchg
add
out
mov
xor
sub
cltd
push
cmpsb
adc
fdivrp
gs
and
adc
fdivrs
cmpsl
jmp
movsl
icebp
xor
xlat
sub
push
mov
inc
cli
jmp
js
mov
sbbl
aam
adc
xor
inc
and
mov
xchg
mov
test
dec
add
or
xor
in
lea
cltd
adcb
pop
cs
lret
pop
aas
jb
mov
jbe
inc
cwtl
adc
mov
lock
pop
cli
mov
fmul
adc
les
cli
push
push
fucomi
or
loopne
xor
ljmp
out
pop
movsl
pop
lods
hlt
jge
scas
bound
test
lods
adc
pop
sti
pop
jo
ja
mov
xchg
test
mov
rorb
popf
pop
cmp
xchg
sbb
xchg
fwait
pop
sbb
out
jbe
fwait
clc
or
pop
loop
mov
shrl
xchg
cmp
aas
or
add
ret
push
stos
jmp
pop
xor
mov
addl
cwtl
rolb
mov
stos
adc
jecxz
imul
in
in
mov
ljmp
mov
dec
lret
cwtl
mov
push
sbb
fisubl
xor
xor
cld
lods
mov
lods
lret
fadd
push
out
mov
scas
ret
inc
fmuls
sbb
movsb
out
sbbl
dec
xchg
das
movb
inc
push
in
jl
lods
jo
mov
add
push
cwtl
jl
ljmp
mov
inc
dec
add
dec
pop
out
mov
out
and
iret
inc
push
test
mov
pop
push
in
add
jae
idiv
mov
hlt
je
fs
shll
cmpb
repz
or
je
das
pop
out
pop
pop
add
out
cs
popf
lahf
cli
fs
add
push
inc
or
adc
sbb
into
fistps
in
loopne
mov
or
sbb
ret
cmp
test
push
fidivl
fnsave
cmp
xchg
sbb
repnz
jns
pop
adc
mov
cltd
pop
push
in
cmp
cmp
insb
pop
nop
daa
mov
call
add
outsl
lahf
mov
clc
jle
xchg
jbe
pop
fcomps
filds
dec
test
dec
lea
shlb
push
enter
movsl
je
aas
fcomip
and
mov
sbb
push
cld
cmp
sub
dec
push
in
jg
mov
clc
mov
test
dec
repz
sub
inc
mov
js
in
repnz
into
gs
adc
lcall
and
jo
aas
jmp
or
cmp
inc
fstl
fs
data16
xor
xchg
push
xor
push
xlat
outsb
mov
cmc
mov
sbb
mov
adc
pop
repnz
insb
loop
lret
fidivrl
movsb
lret
ret
outsb
xchg
mov
cli
jle
stos
in
lods
mov
lcall
into
mov
ljmp
pushf
cli
mov
mov
or
mov
ljmp
mov
rcrb
das
lcall
and
pop
das
adc
repnz
xor
xchg
mov
movsb
in
test
xlat
push
sub
aaa
clc
pop
sub
loope
dec
in
jge
push
cltd
iret
std
xchg
and
cmp
movsb
ret
xchg
pop
repz
mul
ja
call
xchg
jge
cwtl
das
insl
sahf
sbb
iret
mov
shll
loop
imul
out
je
repnz
jbe
mov
cmpsl
mov
fldt
lds
mov
outsb
sub
rolb
ret
outsb
jle
mov
mov
in
pop
hlt
add
stos
inc
cmp
leave
pusha
test
fwait
imul
ss
or
xchg
aas
sbb
decb
scas
xchg
sub
movsl
out
test
inc
pop
scas
xor
xcrypt-cbc
cmpsl
push
aam
inc
inc
cli
xchg
mov
cli
pop
sub
xor
push
xor
add
daa
aam
jg
xchg
jno
or
inc
pop
out
jl
stc
nop
aaa
sbb
mov
in
cld
and
roll
jo
xchg
sub
xchg
mov
es
pop
movsl
cmp
mov
fwait
sub
lcall
gs
sbb
mov
sbbb
xorl
fimull
sub
js
cmpsl
and
sbb
cmp
stos
mov
cmc
mov
xchg
rcrl
je
repnz
out
das
inc
ficompl
mov
sub
cwtl
stos
inc
or
jnp
imull
fs
pushf
xchg
jge
lret
mov
outsl
push
scas
dec
push
sub
popa
in
push
and
lsl
clc
loopne
clc
sbb
call
in
lods
jmp
mov
xor
add
xor
test
mov
adc
jns
insb
imul
mov
mov
je
cltd
stos
inc
rcrb
sub
nop
ja
clc
mov
adc
jg
lret
sbb
inc
push
sub
inc
in
pop
and
loop
adc
outsb
mov
inc
fildl
jle
andl
mov
jmp
push
pop
mov
inc
ds
lock
sub
fisttpll
addr16
cli
imul
or
stos
das
xchg
pop
mov
jae
pusha
stos
and
stos
xchg
dec
jnp
ja
push
lods
adc
shll
inc
lods
inc
cmp
add
negl
xor
jns
insl
jnp
pop
push
xor
js
pop
div
and
lods
addl
inc
movsb
insl
add
lock
jmp
cmp
test
lret
mov
frstor
into
cmp
push
out
inc
fchs
cli
inc
into
cs
lock
fwait
shlb
sub
mov
mov
xchg
sub
pop
xor
jns
testl
push
fisttps
cli
jae
pop
gs
mov
dec
clc
push
mov
xchg
sbb
pop
mov
out
imul
aas
aas
mov
mov
lods
inc
psrlq
cmpsl
mov
in
outsl
mov
fwait
clc
pop
cmc
jmp
or
rorb
movntq
mov
ret
jecxz
mov
arpl
stos
inc
fadd
inc
xchg
sub
call
pop
out
inc
cli
aad
in
ljmp
jg
movsb
cmp
mov
sahf
xor
movsl
jne
daa
mov
dec
out
test
sub
jmp
add
xor
sbbb
fisttpl
lahf
add
rclb
sbbb
cmpsb
sbb
xchg
inc
xchg
mov
fiadds
push
daa
icebp
scas
inc
jecxz
popa
clc
icebp
add
or
jecxz
mov
testb
sub
fwait
and
xor
test
aas
or
pusha
cmp
pushf
push
ror
data16
shll
or
fwait
xor
sbb
popa
mov
js
lods
outsl
push
push
dec
es
out
mov
lds
push
std
shlb
out
int
ret
repz
sub
stos
mov
push
xchg
sub
aaa
and
outsb
cs
lahf
push
xlat
outsb
xor
inc
fdivl
roll
shl
xchg
sub
jg
shrb
push
ljmp
push
in
jae
insl
add
and
push
xor
mov
add
xor
mov
mov
aad
scas
inc
jp
mov
fsts
cli
xchg
inc
cli
popa
clc
jmp
hlt
mov
or
push
lods
lret
mov
inc
fistl
cmp
mov
mov
fnstenv
int
and
mov
movsl
cmp
jmp
jl
leave
sbb
test
jbe
pop
pop
pop
mov
cmp
jo
lret
adc
sub
aam
rol
aad
add
xchg
cs
sbb
ja
sub
lret
cwtl
int
or
movsb
sub
xchg
cmp
pop
push
mov
rclb
gs
push
mov
fsubrs
xorl
mov
cmp
cld
pusha
shrl
sbb
imul
and
aas
adc
jge
xor
push
jno
dec
mov
into
imul
cmp
pusha
mov
jbe
xor
lcall
push
popf
inc
and
fistps
and
loop
and
mov
push
movsl
dec
pop
inc
fnstcw
pop
mov
adc
jo
jl
jmp
loope
or
js
add
mov
xchg
xchg
mov
bound
ds
inc
dec
sbbl
pop
pop
and
dec
test
mov
outsb
dec
out
or
repnz
add
ds
out
xlat
outsb
sub
lea
fidivrs
mov
jmp
mov
mov
filds
popf
sarb
imulb
pop
add
lret
xchg
sub
ja
or
adc
fwait
cmc
mov
and
xlat
ss
push
stc
nop
inc
xchg
xchg
shll
or
lods
jbe
push
push
mov
mov
pusha
ds
sbb
daa
mov
test
not
push
inc
data16
xor
lea
jge
jb
push
cmp
inc
jp
jne
repnz
pop
add
int
add
sbb
shlb
les
pusha
adc
dec
pop
dec
loopne
insb
rclb
out
xchg
loopne
pop
mov
cmpsb
add
aad
cmp
iret
shrl
mov
lahf
sub
int
or
xchg
sub
xchg
sub
pop
nop
daa
dec
mov
js
jo
sbb
jg
addb
mov
xchg
lock
std
and
lods
rclb
add
outsb
add
aam
pop
repz
sub
cmp
push
dec
fists
es
icebp
push
test
pop
jno
dec
rorb
and
mov
aad
sub
mov
lds
insl
add
push
inc
fnstcw
call
adc
mov
push
movsl
mov
int3
arpl
fldenv
lret
cmpsb
push
jmp
push
fucom
cltd
xor
ss
mov
rcll
repnz
mov
mov
sub
lods
xchg
push
ret
repz
sbb
jo
push
roll
add
mov
push
ljmp
jne
pop
lock
xor
adc
sbb
stos
sbbl
int3
ss
mov
es
loop
pop
repnz
fisttpll
lahf
fidivrl
dec
loope
cmp
jne
in
mov
sbb
or
jnp
push
lods
pushf
addr16
and
jmp
lret
test
jmp
add
pop
icebp
mov
flds
ret
std
add
xchg
pushf
push
pop
scas
fwait
mov
jns
out
ljmp
fwait
ljmp
daa
movsl
jmp
or
pushf
orb
out
cmp
mov
lcall
test
lret
cld
lret
jg
std
sbb
mov
push
jo
pop
mov
ret
in
cmc
fnsave
add
hlt
xor
xlat
cmc
push
mov
sub
xlat
test
fldt
pop
mulb
pop
daa
mov
cmp
pop
lods
inc
mov
in
dec
cmpsb
cmp
push
jge
sbb
pop
std
jo
add
jle
sbbb
lahf
daa
mov
cli
dec
adc
pop
sbb
enter
in
leave
dec
out
sarb
rcr
add
sub
lcall
lret
or
sub
jmp
pop
mov
es
or
and
mov
mov
mov
outsl
inc
loopne
lods
scas
jle
nop
daa
dec
mov
mov
mov
js
add
push
xchg
aas
mov
sbb
inc
inc
ljmp
out
repnz
int3
sbb
test
scas
arpl
popf
imull
jb
pop
aam
cli
jno
mov
lea
jg
stos
jo
stos
test
lods
mov
add
mov
mov
imul
push
inc
or
inc
or
roll
sbb
mov
pop
sti
out
mov
pop
out
insl
loopne
in
sbb
mov
call
into
mov
outsl
ret
jmp
int
fdivrl
pop
sbb
jbe
jg
pop
inc
cmp
adc
xlat
sbb
mov
add
scas
pop
xor
mov
xchg
pop
pop
call
rep
repz
or
or
hlt
cmp
repnz
xorb
pop
mov
lahf
nop
into
or
jle
fistpl
negb
pushf
int3
dec
shr
or
and
mov
inc
mov
pop
mov
inc
fucom
add
mov
sar
and
inc
inc
fstpl
xchg
sub
lret
cmp
ret
inc
jbe
lds
daa
mov
xor
sub
dec
xor
sahf
fs
cmpsb
dec
and
shll
push
add
sub
loop
sub
xor
sbb
jle
adc
push
testb
mov
sub
xchg
jo
adc
pop
xchg
jg
pop
jnp
loopne
cmp
jo
subl
jnp
dec
jns
cmp
out
xchg
daa
int3
arpl
and
jno
jo
fwait
leave
stos
inc
faddl
leave
pusha
das
xlat
lods
inc
mov
ret
pop
push
aam
inc
out
jne
cmp
mov
mov
cli
xchg
shll
outsl
fadd
push
fstl
ret
inc
pop
cmc
pop
jmp
jl
add
es
test
insl
push
pushf
imul
mov
shrl
js
or
insl
lds
iret
data16
out
xchg
das
jl
je
cld
xchg
ja
lcall
dec
fwait
xor
arpl
xchg
adc
in
mov
pop
inc
nop
push
call
sbb
test
daa
enter
aaa
ret
jbe
mov
loopne
stos
jmp
out
in
in
mov
nop
daa
mov
loopne
pop
mov
pushf
repz
pop
mov
lea
bnd
das
cmc
mov
mov
rcrl
lahf
ss
hlt
xchg
sub
fisttps
jge
xor
jbe
push
lods
inc
mov
sti
xchg
movsl
iret
pop
scas
mov
xor
imul
pop
pop
push
jmp
sbbl
dec
inc
push
inc
xlat
inc
or
std
mov
in
test
pop
icebp
mov
dec
in
add
lret
xor
pop
fsubrs
and
outsl
mov
adc
mov
jl
out
lea
lods
sbb
and
cmpsb
cmp
pop
push
loopne
pop
jl
rorb
cmp
inc
xlat
xor
cmp
rcr
rorl
jecxz
xor
push
nop
daa
dec
mov
inc
xlat
push
pop
cmpsb
cmp
jb
arpl
pop
cmpsl
shrl
or
jb
hlt
push
out
stos
push
lods
sbb
mov
add
roll
cmpsl
es
adc
fsubs
inc
aaa
icebp
mov
stos
inc
addr16
push
popf
dec
push
nop
cmp
mov
or
xlat
xchg
dec
pop
test
rclb
int3
sub
std
test
je
mov
add
jae
clc
and
xchg
and
jne
aad
adc
push
cmp
inc
mov
loope
xchg
jb
jmp
inc
fimuls
fdivp
mov
popa
and
and
out
test
push
dec
in
rorl
repz
insl
sbb
jg
mov
mov
xchg
jp
pop
push
rclb
inc
int
pop
rol
inc
in
push
mov
orb
cs
push
pop
xchg
lock
cmp
es
test
lea
cs
mov
sbbl
push
loop
mov
mov
pop
mov
mov
and
cmpsl
jae
push
dec
enter
imul
mov
aas
inc
pop
out
push
mov
mov
xchg
push
inc
fsubs
mov
aam
xor
jae
xor
fadds
test
aam
inc
shrl
xor
jno
xchg
sub
xchg
and
push
inc
xlat
test
cmp
pushl
lahf
ss
and
mov
pop
hlt
or
and
rcr
xlat
mov
mov
mov
fcmovnbe
insl
call
or
xchg
pop
into
gs
pop
push
xchg
xchg
jne
pop
xchg
xchg
test
sub
mov
push
pop
sub
jno
jl
inc
push
push
and
mov
jb
cltd
xor
jmp
sub
lcallw
mov
push
in
xor
mov
test
cmp
daa
fnstenv
dec
push
lods
pop
pushf
mov
sub
loop
jg
sub
or
aam
jp
and
push
int
inc
fcmovbe
out
cmc
mov
repz
push
in
xchg
pusha
call
cmp
int3
xor
imul
push
adcb
pop
clc
lea
jo
add
fbstp
and
xchg
test
inc
inc
shlb
adc
stc
cmpsb
cwtl
mov
push
enter
aas
add
sub
daa
movsl
dec
push
out
lods
inc
clc
popf
test
iret
sbb
jp
lock
lret
insb
mov
popa
shll
pop
dec
repnz
sub
imul
jbe
test
pop
and
inc
scas
inc
jno
mov
push
daa
mov
test
push
xor
push
movsl
repnz
ja
and
sbb
pop
or
mov
sub
jle
int
fdivl
xor
outsl
enter
fistl
repz
cld
xchg
ja
inc
fcomp
or
mov
stos
loop
rcll
add
or
pop
sti
mov
add
xchg
pop
repnz
es
pop
into
mov
cmc
jg
dec
movsb
push
mov
dec
divl
push
scas
or
sbb
fidivl
dec
mov
aaa
adc
rcrl
out
je
mov
call
lods
les
sub
mov
mov
fwait
shlb
loopne
pop
stc
sbb
movsl
inc
xor
jbe
sub
sti
xchg
dec
jecxz
sbb
cmovle
pop
repnz
jns
mov
in
sbb
xchg
or
cltd
scas
leave
call
mov
daa
mov
jge
push
push
jmp
push
loopne
test
add
push
cmpsb
cmp
and
pushf
xor
into
push
jmp
mov
cld
xchg
or
mov
or
mov
cltd
xor
mov
call
xor
mov
add
push
repz
jbe
cld
jle
shrl
lahf
aaa
into
rcrb
add
ret
mov
test
cmc
sbb
call
xchg
jb
mov
rcll
mov
int
insl
out
mov
in
adc
fidivl
xor
cmpsb
ficomps
int
xor
in
test
js
sub
mov
xchg
stc
data16
inc
push
dec
push
jmp
ror
testl
push
dec
xchg
sub
ss
add
cmpsl
nop
push
cmp
jge
inc
frstor
stc
nop
sub
daa
mov
xchg
inc
pop
sahf
xor
xor
jnp
jge
shll
pop
nop
dec
push
loope
negb
cmp
inc
bound
mov
dec
xor
cmp
pop
leave
daa
inc
ror
repz
scas
jl
jecxz
gs
sub
cli
jmp
sub
xchg
pop
pushf
lahf
pop
mov
mull
add
std
fnstenv
sbb
pop
mov
adc
pushf
xor
dec
pushf
pop
and
push
lods
pop
cmp
adcb
in
mov
inc
dec
mov
lods
subl
dec
movsl
or
subb
bound
push
push
shrl
es
mov
pop
movsb
ret
int
mov
add
sahf
or
sti
mov
jb
sbb
out
jg
stos
inc
inc
mov
test
mov
and
pop
jge
dec
mov
dec
adcb
inc
xchg
je,pn
push
mov
jp
addr16
xchg
inc
sbbl
sbb
cmc
push
jbe
jbe
mov
mov
loope
mov
js
jnp
mov
lea
out
pop
jo
jl
pop
or
popa
inc
fsubrs
and
xchg
sub
and
es
je
test
sahf
dec
jne
outsb
or
mov
popa
add
lcall
aam
adc
subb
dec
les
add
fists
add
or
in
aad
out
pop
enter
mov
or
xchg
jb
lcall
cmp
sbb
cmp
loope
jp
adc
dec
xor
std
das
arpl
add
pop
pop
sub
lea
aaa
out
sahf
popa
movsl
insl
inc
sbb
stos
dec
data16
sbb
je
insl
inc
iret
aas
push
and
jg
loope
je
sub
mov
fdivr
push
and
or
pop
push
push
sub
and
xor
xor
fcoms
mov
stc
and
xchg
push
dec
push
fnstenv
jmp
pop
mov
push
popf
mov
loopne
mov
xchg
pop
push
out
mov
stos
in
sbb
adc
in
andl
shrb
shrl
sub
sarb
and
cmc
xor
push
adc
mov
push
cmp
jg
xchg
lret
bound
imul
sub
push
stc
push
iret
mov
les
push
in
xchg
dec
mov
rolb
std
in
fwait
rcll
stos
fnstsw
jg
mov
into
gs
push
movsl
ret
xor
mov
mov
into
inc
les
pop
or
leave
stos
and
lds
je
out
nop
mov
loop
ret
fdivs
into
fsub
jecxz
push
jae
ret
aaa
rclb
out
test
aam
ret
mov
fidivs
xlat
loop
rolb
inc
iret
pop
mov
imul
nop
mov
ret
imul
xchg
or
jnp
mov
repz
insl
mov
mov
inc
in
pop
mov
inc
gs
popf
xor
and
fldl
lret
adc
fwait
push
shrb
faddl
cwtl
or
lcall
push
mov
loopne
xchg
pop
pop
xor
and
in
shlb
add
shlb
mov
out
in
out
es
cmpsl
sub
and
dec
ss
in
jns
jno
popw
scas
xchg
arpl
cmp
testl
dec
mov
pop
repnz
jle
xor
mov
mov
loop
pusha
xchg
sub
data16
jno
ljmp
fimull
mov
fidivrs
rclb
push
repz
and
xchg
inc
sbb
js
xor
mov
mov
sub
xchg
sub
adc
test
cmp
jne
jbe
js
xor
dec
sbb
das
jge
sub
sbb
dec
pop
sub
loop,pt
pop
ret
lds
lods
outsb
pop
ret
mov
shlb
inc
mov
mov
xor
fidivl
sub
gs
cmp
xchg
imul
xchg
arpl
mov
cmc
or
cwtl
movsb
xchg
jns
or
aad
cwtl
mov
int3
xor
xchg
dec
gs
mov
push
adc
imul
pop
in
xor
or
into
bound
inc
push
pop
movnti
sbb
push
xor
test
lock
push
sbb
jae
push
movsl
loop
jae
or
dec
sti
dec
jg
mov
ret
test
jmp
pop
jnp
pop
fsubrl
inc
fstpl
mov
mov
out
or
out
jecxz
inc
pop
sub
push
ds
shufps
xor
cmpsb
or
cs
mov
fstpt
sahf
push
and
cwtl
shlb
mov
adc
dec
lret
in
lea
fucomp
dec
mov
push
test
enter
cmp
jg
aam
je
enter
cmpsl
jmp
sub
sub
pop
sbb
sbb
mov
lea
mov
and
xorl
test
cwtl
js
lret
and
sbb
ja
imul
xorl
add
and
jae
xor
nop
daa
adc
sbb
ret
jo
adc
test
push
les
in
sbb
gs
loope
dec
jae
xchg
jmp
push
xor
pop
daa
iret
shll
add
sub
sbb
jns
ret
cmp
ja
cld
sub
sub
sbb
inc
and
xchg
add
imul
and
cmp
push
xchg
loop
test
push
add
cmpsb
inc
jae
mov
cmpl
mov
cmpsb
cmp
xchg
or
sbb
sub
in
mov
xor
and
loopne
ret
sub
fwait
mov
jnp
and
inc
fwait
jnp
int
add
test
xchg
lret
mov
adc
fs
pop
outsl
mov
xchg
pop
and
push
cmp
sub
adc
mov
lret
cld
stos
repz
ret
rorl
stos
pop
clc
int3
xchg
rclb
push
call
stc
je
in
popf
sbb
dec
mov
ret
pop
dec
fisttps
pushf
mov
pushf
in
loop
insl
dec
lock
hlt
fstl
inc
call
xor
xor
lret
cli
js
xor
fsts
jle
and
sbb
enter
jnp
jp
subl
add
push
in
pop
lock
adc
mov
mov
setb
jns
pop
cmc
int3
inc
aad
inc
mov
out
test
fs
int
jno
aaa
shll
ret
repz
push
jno
movsl
lock
add
fisubl
ret
popa
outsb
mov
sub
xor
iret
pop
mov
mov
xchg
call
testl
mov
inc
ffree
rcrl
call
jae
add
jecxz
inc
push
sti
fwait
mov
pop
imul
jmp
push
dec
stc
pop
test
mov
cmpsl
sahf
xor
adc
pop
in
sbb
subb
fs
outsl
cmp
inc
jl
push
cwtl
push
fldenv
pop
lea
ja
dec
loopne
xchg
push
mov
scas
push
xlat
test
and
mov
jl
push
hlt
pop
pop
push
lods
cmp
fcompl
push
pop
pushf
inc
stos
test
mov
dec
mov
mov
repz
arpl
and
and
out
iret
popa
cmp
cmp
sub
or
in
push
push
sbb
xchg
fwait
dec
mov
mov
xchg
shrl
out
sub
negl
sbb
jnp
dec
sbb
fbstp
adc
sbb
jae
xor
or
sbb
icebp
inc
jnp
sub
mov
subb
and
lret
les
aam
add
and
push
daa
mov
or
mov
sub
loopne
das
sub
pop
outsb
mov
sub
xchg
int
mov
mov
adc
hlt
negb
jge
fst
mov
lock
xchg
ja
mov
inc
loop
negb
cwtl
psllq
sahf
iret
jne
sbb
push
add
repnz
lea
insl
and
test
dec
xor
ja
cmp
into
add
adcb
add
test
xchg
test
xchg
loopne
arpl
xchg
into
arpl
adcl
sarb
push
jle
mov
lret
pop
jo
rorb
jae
fxch
fwait
mov
mov
adc
push
out
xor
mov
es
pop
flds
bound
subl
ljmp
out
dec
adc
mov
xchg
and
inc
mov
dec
in
inc
xlat
aaa
das
push
rorb
fcomps
movsl
mov
xlat
std
loope
or
testb
cltd
lods
sbbb
mov
rol
clc
orl
js
insl
or
sti
push
add
xchg
sub
das
imul
xorb
sbb
cld
or
or
mov
xlat
int3
mov
push
and
and
mov
mov
int3
addr16
jmp
ficoms
sbb
sub
ja
jns
push
popf
loopne
iret
lods
jb
data16
adc
push
movsl
mov
mov
imull
dec
leave
lds
rclb
je
push
xchg
mov
testl
xchg
mov
sbb
jecxz
nop
sub
or
dec
xchg
sub
cmc
testl
add
mov
daa
adc
mov
jnp
mov
call
leave
inc
adc
sub
icebp
jp
xor
andl
je
mov
scas
xchg
sub
arpl
or
push
push
hlt
mov
push
jg
xchg
decb
das
mov
and
mov
or
push
test
mov
mov
adc
mov
fdivs
xchg
sub
push
mov
aas
adc
or
mov
into
stos
cmp
movsb
push
test
pop
mov
rcrb
fs
fstpl
cmpb
orl
in
insb
push
in
adcl
sti
and
inc
mov
mov
nop
push
dec
loopne
push
and
cs
jg
std
mov
and
inc
push
roll
xchg
sbb
mov
fmull
jg
std
xor
lds
scas
testl
xor
jecxz
aas
cmpsb
sub
movsl
cli
pushf
je
sbb
mov
decb
add
dec
mov
mov
stc
push
and
lods
pop
jecxz
into
adc
outsl
push
pop
adc
sahf
inc
sub
stos
imul
push
test
stc
es
xor
test
xchg
ljmp
mov
addb
notb
in
and
std
fistl
pop
in
loop
mov
add
pop
mov
fadd
out
lds
cmp
fcoml
iret
icebp
adc
arpl
repnz
xchg
fists
test
cwtl
push
lret
leave
int
mov
mov
lret
movb
or
add
popa
inc
std
xchg
decl
cmp
mov
sahf
mov
adc
mov
hlt
cmp
test
sub
les
xor
loopne
shlb
lea
in
push
fcmovnb
jg
lcall
cmp
jmp
jne
cmp
adc
stos
sub
fldl
test
outsb
std
inc
add
and
xor
rcrl
and
jbe
inc
adc
lea
push
and
jns
testl
add
pop
subss
data16
imul
xchg
pop
xchg
outsb
inc
mov
lock
sbbl
jl
shrl
popf
sbb
adc
sbb
mov
ret
or
in
cmp
jo
xchg
shrl
shll
cmpsb
addb
mov
mov
lcall
xchg
jg
das
mov
jle
adc
dec
jae
xchg
adcl
sub
or
mov
jmp
and
cmc
mov
outsb
inc
pushl
test
fsubrs
addr16
cmp
xchg
jecxz
nop
stos
push
outsb
lods
push
pop
jne
xor
xchg
mov
sbb
repz
roll
jo
xchg
mov
pop
push
outsb
cwtl
pop
mov
arpl
scas
arpl
loope
dec
in
out
push
fbld
popf
sahf
push
aam
inc
mov
lods
xchg
cmp
test
push
add
add
mov
sub
sub
rolb
mov
dec
jne
xor
xlat
xor
imul
jno
sub
dec
pop
pop
or
movsl
mov
pop
addr16
jne
scas
sub
dec
sbb
xchg
arpl
das
xchg
adc
add
add
fildll
cmp
xchg
pop
daa
ss
inc
imul
jno
mov
cmp
mov
icebp
loopne,pn
push
sahf
mov
sbb
pop
fiadds
push
dec
adc
test
add
cld
std
xchg
cs
xchg
mov
ret
out
mov
mov
fcmovb
sub
cs
mov
push
fwait
ret
pushf
jb
push
ljmp
jg
fmul
xor
sub
stos
inc
push
dec
mov
jbe
sti
pop
push
nop
fdivs
aam
cwtl
jecxz
sbb
add
and
or
cmp
stos
sub
xor
sub
push
movsb
sarb
out
inc
into
pop
idiv
push
and
popf
adc
mov
jecxz
aas
add
pop
dec
std
mov
movl
xlat
cld
sysexit
mov
in
popa
daa
and
xlat
and
ja
dec
add
xor
pop
cld
repnz
pop
test
repz
outsl
xor
iret
and
popf
lock
enter
fldenv
sbb
into
gs
popl
add
daa
xor
dec
cltd
xor
lcall
pushf
xchg
out
or
addr16
pop
sbb
mov
shrb
jl
pop
ss
bound
testl
pop
int3
push
daa
push
lret
cld
jae
cmp
ret
sbb
cmp
mov
lcall
xchg
sub
xor
repnz
xchg
cld
xchg
lds
xor
dec
lcall
xor
sti
ds
negl
pop
sbb
jmp
jl
inc
iret
jle
lock
movhlps
insb
adc
cmp
pusha
xor
push
out
dec
or
pop
mov
mov
std
mov
in
mov
sbbb
adc
sbb
psubusw
gs
icebp
push
pop
inc
pushf
dec
inc
aaa
pop
cmp
sbb
sbb
icebp
mov
mov
xor
ret
push
out
inc
pop
cmp
jl
fbstp
push
pop
scas
mov
xor
clc
cmc
cmp
stos
or
out
jbe
add
cld
xchg
add
and
fdivl
push
in
fs
sub
loopne
lods
jbe
movsb
hlt
jne
call
adc
rorb
push
test
mov
cmp
mov
rolb
shl
rcll
lahf
ss
sarl
push
rclb
inc
clc
sbb
jge
test
dec
mov
movsb
inc
or
pop
adc
sub
imul
or
push
loopne
adc
ljmp
push
mov
ficoml
mov
pop
pop
cmc
mov
loopne
adc
aas
jmp
cwtl
sbb
fmuls
std
add
frstor
rolb
repnz
xor
cld
sub
inc
out
mov
adc
movsl
es
test
xor
fstpt
push
sar
neg
adc
test
cmp
push
ss
cli
mov
rol
nop
std
nop
adc
popf
ret
aad
hlt
js
xor
push
sub
inc
jbe
sub
clc
inc
outsl
dec
ljmp
mov
push
test
roll
repz
and
gs
mov
neg
push
aas
push
inc
jge
sarl
sbb
mov
jmp
jb
pop
and
mov
cwtl
sbb
fwait
mov
arpl
lcall
xlat
mov
push
inc
mov
sbb
aad
aad
test
add
ficomps
orl
mov
loopne
ret
adc
push
xorb
in
xorl
push
jae
daa
lcall
cmp
or
dec
lret
repz
cmp
push
loopne
sbbb
pop
rcrb
roll
testl
rorb
bts
add
fiadds
jmp
in
jmp
or
xor
add
hlt
cmpsb
stos
lods
push
ja
pop
mov
int
ja
adc
roll
lahf
pop
ret
stc
nop
outsb
mov
adc
jecxz
sahf
xchg
xor
fsubs
mov
adc
xlat
lea
outsb
negl
push
mov
pop
pop
or
sbbl
shll
mov
scas
jnp
push
inc
fnstenv
sti
les
jp
repz
imul
inc
pusha
outsl
push
cltd
call
in
imul
push
adc
dec
push
ret
outsb
pop
sub
shlb
fs
xor
mov
testb
push
cmp
test
ds
add
or
mov
adc
int3
or
out
sbb
jns
cmc
pop
jp
mov
dec
movsl
mov
fldcw
sahf
loope
int
in
mov
test
scas
push
in
pop
mov
inc
dec
mov
pop
stos
add
mov
mov
addb
jnp
inc
repz
fidivs
test
rcrl
jno
cli
push
ja
rorb
cmpsb
les
data16
scas
stos
or
xchg
lods
in
sub
cmp
jbe
iret
ucomiss
push
push
cmpb
iret
cs
jl
lock
mov
test
pop
popa
sbb
add
cltd
pop
pop
dec
dec
in
jmp
pushf
push
inc
or
cld
stos
pop
push
adc
imul
icebp
xchg
sub
pop
sti
xchg
push
rcrl
lret
pop
scas
xchg
sub
subl
push
inc
cltd
mov
rcrb
or
gs
or
dec
loop
mov
jle
repnz
leave
jno
mov
movsb
insl
push
jecxz
adc
mov
cmp
jb
mov
mov
in
js
out
ds
mov
adc
sbb
arpl
cmp
rcrl
repnz
fbstp
pop
adc
push
mov
vcomisd
mov
add
xor
imul
rcll
enter
jmp
or
jnp
mov
push
cmp
sbb
or
mov
push
xor
push
mov
sbb
pop
repnz
jl
xlat
sub
xchg
pop
insb
aam
addl
test
xor
xchg
pop
or
xor
lds
push
ss
cmp
push
mov
adc
inc
sbb
cmc
dec
add
sahf
stos
cmp
stos
adc
cmp
js
push
cltd
sbb
inc
fstp
je
pop
sarl
frstor
pop
jl
mov
adc
lea
loope
sbb
imul
mov
or
cmpsb
mov
sub
lods
gs
inc
je
push
jns
hlt
mov
adc
hlt
push
sarb
push
test
fistl
mov
mov
lock
mov
iret
adc
sub
or
mov
stos
out
into
mov
shl
jbe
push
repnz
in
mov
and
loopne
mov
repnz
dec
mov
mov
sbb
jb
adc
push
mov
in
das
xchg
mov
sub
aad
stos
xchg
leave
mov
xor
mov
mov
sub
pushf
cmc
pop
xchg
shl
hlt
sub
mov
cmc
xchg
xchg
scas
into
fsubr
test
and
mov
ja
cmp
mov
cmp
and
cmpsl
out
add
lods
fistps
fdivp
in
pop
lock
mov
cmp
jge
mov
add
or
nop
mov
data16
xchg
out
fnstcw
mov
out
out
sub
mov
cmp
call
fsubrl
mov
test
or
cmpsb
stos
pop
mov
stos
cld
lret
mov
int3
lret
pop
rorb
nop
daa
scas
cltd
pop
lea
add
js
loope
and
test
cmp
std
cmp
jle
dec
pop
hlt
push
mov
jg
xchg
xor
or
outsl
test
xor
repz
mov
cmp
arpl
and
jge
adc
inc
je
jp
test
and
test
dec
pop
daa
and
int3
push
repz
lret
sbbb
shlb
pop
push
adc
stos
mov
dec
sub
jnp
pop
out
notl
cmp
and
iret
push
inc
mov
loopne
xchg
out
movsl
add
in
jmp
or
aad
addr16
mov
fildl
shll
movsl
leave
insl
adc
cmp
fs
add
cmp
mov
mov
or
and
test
je
mov
push
shlb
sub
popf
fmull
loopne
mov
xchg
push
pop
cmp
push
mov
in
or
outsb
xor
test
xchg
mov
leave
inc
scas
cmp
xchg
inc
ret
loope
aam
dec
lods
sub
mov
mov
xor
mov
sub
jp
mov
pop
cld
inc
mov
pusha
int
ja
add
pop
push
out
ret
setne
mov
mov
sub
push
fdivrs
call
xchg
xchg
insl
loope
sahf
mov
dec
dec
cmc
jae
pop
sub
not
push
call
sbb
sbb
dec
jns
clc
test
fisttpll
call
adcb
js
out
cld
iret
pop
xlat
mov
dec
cmp
cmpsb
sbb
sub
pushf
fistpl
lahf
push
and
push
in
push
xor
xor
sahf
jne
out
and
cld
outsl
filds
mov
outsb
inc
fmull
fcmovu
mov
das
arpl
xchg
std
pop
push
sarl
mov
arpl
data16
lods
icebp
enter
cld
ds
inc
mov
adc
sbb
cmpsb
push
out
fnstsw
jae
inc
enter
test
xlat
fcom
add
adc
cmp
dec
and
lods
or
out
scas
pusha
inc
and
sti
and
in
or
cs
sub
aam
sub
sbb
xchg
dec
gs
aaa
and
decb
dec
mov
es
aad
cmp
push
addr16
nop
cltd
js
push
jne
sbb
mov
jp
inc
mov
sbb
jmp
and
fwait
shll
inc
xlat
mov
fistpll
mov
adc
leave
mov
mov
xor
pop
test
dec
pushw
adc
cmp
push
jge
push
ja
xchg
loopne
pop
add
mov
les
stos
adc
clc
and
ret
jnp
scas
dec
cmp
mov
jo
fnsave
adc
orb
ds
arpl
popf
adc
cltd
jle
pop
mov
sbb
xchg
scas
sub
xor
jno
mov
andb
xor
or
orl
adcb
nopl
mov
imul
stos
dec
test
jmp
xor
cli
push
jl
jmp
lret
ret
sbbl
out
movsl
inc
test
sarl
xlat
rcrb
lea
push
adc
dec
sbb
mulb
cli
inc
push
mov
imul
mov
add
pop
ja
pop
shrb
lret
mov
sar
mov
mov
or
fucomi
stos
mov
ss
out
or
ds
ds
test
icebp
add
pop
lods
movsl
decl
xchg
into
in
add
add
add
cmpsl
adc
fcmovnb
jb
add
xchg
xlat
jecxz
popa
jmp
sti
xchg
daa
add
sbb
mov
push
jo
or
nop
cmp
xlat
insl
jne
cmc
lret
hlt
rclb
mov
adc
fmull
sbb
push
mov
push
loope
testb
cmp
popf
test
sub
test
insl
fsubrs
jne
mov
xchg
mov
mov
sar
roll
jge
aas
mov
test
mov
jle
pop
stos
sbb
repz
mov
inc
movsl
aas
clc
xchg
xchg
jae
roll
frstor
sbb
jge
rorb
jecxz
sbb
jns
inc
popa
sbb
insl
loopne
arpl
adc
ss
push
je
aas
cmpsl
lea
pop
mov
test
mov
pop
or
pop
or
daa
incb
mov
or
ret
mov
pop
push
repnz
int
js
movsl
out
fmull
cmp
and
mov
testl
mov
cmp
xlat
sbb
push
call
adc
add
imul
push
push
rol
xor
call
andl
mov
movntps
ja
pop
loop
and
jno
call
or
cmpsb
cmp
add
add
cmp
lock
dec
pop
jge
adc
push
mov
mov
arpl
push
mov
and
pop
divb
jnp
out
sub
push
out
push
js
or
addr16
cmc
push
push
jo
mov
jno
mov
repz
cli
sbb
rcrb
xchg
in
ss
adc
pop
in
jbe
push
mov
fimuls
pusha
div
test
adc
sbb
cld
dec
or
xor
mov
aas
jne
aad
das
inc
push
clc
loop
push
dec
sub
imul
xchg
or
test
aas
adc
into
shrb
add
stos
fldenv
cltd
inc
fcmove
cmp
push
insl
fcoms
hlt
inc
ret
ds
lods
inc
xor
jae
iret
inc
leave
popf
dec
pop
xchg
push
inc
fmuls
sbb
inc
insb
pop
negb
subl
nop
or
and
sub
sti
jbe
ret
gs
enter
out
dec
mov
sbb
fnstsw
in
std
stc
inc
das
psubw
mov
movsb
cmpsl
lret
fldenv
mov
loope
fcom
sbbb
cli
loopne
loopne
sbb
pusha
add
or
pop
fmul
sti
mov
pusha
call
dec
imul
ljmp
mov
fwait
insl
into
pop
lods
cmp
test
mov
jns
jbe
insb
sahf
fnstsw
rep
sbb
adc
dec
push
push
add
adc
lret
pop
mov
fsts
arpl
jmp
adcl
daa
subl
sbb
xchg
xor
ret
or
bound
test
or
push
fimull
ljmp
fidivs
sub
aas
aad
in
xchg
sub
push
mov
mov
push
outsl
adc
cmp
test
mov
inc
push
push
adc
js
add
leave
xor
lahf
cmpsb
gs
cltd
sub
cmpsb
es
pop
enter
shlb
rorb
adc
mov
add
dec
or
ja
pop
test
adc
fdivr
fbld
cwtl
jb
fldenv
mov
inc
addb
cmp
sub
fldl
add
jmp
rcrb
mov
fidivl
inc
pop
cmp
jle
and
inc
jge
scas
daa
mov
inc
ja
mov
test
xor
jl
loopne
mov
and
testl
sbb
ja
inc
mov
ret
fidivrl
push
xchg
mov
push
cmp
sti
and
mov
mov
cwtl
rorl
add
mov
pop
mov
ret
das
test
aam
push
imul
sub
mov
push
iret
inc
fadds
inc
jne
dec
rcr
jo
xchg
sbb
and
daa
loope
shrl
add
es
rcr
repnz
inc
and
int
fdivr
jb
add
cmp
pop
ja
xchg
or
add
xor
add
hlt
sub
cmpsl
rol
jns
cmc
call
xchg
daa
addb
pop
sbb
dec
mov
and
frstor
js
inc
stos
inc
sub
add
mov
and
and
dec
xchg
add
test
inc
sbb
outsb
sbb
inc
outsl
cmp
cmp
add
shlb
fstpl
push
stos
and
rolb
push
jmp
xchg
stos
into
or
xor
lock
sub
loop
adcb
or
lret
je
std
out
cwtl
les
mov
dec
pop
mov
mov
sub
inc
fnstenv
push
inc
iret
xchg
pusha
xchg
dec
sbb
lahf
pop
sub
xor
ret
stos
xchg
sbb
testb
mov
dec
test
fstps
cmpsb
mov
repz
test
or
fadds
mov
je
sub
xlat
aas
adc
cmpsl
pusha
jle
pop
leave
dec
push
je
test
popa
xchg
push
push
clc
sbb
jmp
xchg
jle
scas
mulb
daa
rcrb
sbb
ds
pop
mov
mov
pop
adc
addr16
aas
adcb
fcompl
push
lock
or
or
loopne
aad
scas
xchg
pop
sub
outsl
scas
sbb
mov
sbb
or
adc
out
test
cli
sub
sbb
fdivp
xor
xor
lea
stos
es
lods
jmp
and
mov
or
ss
fs
mov
mov
or
mov
sub
mov
sub
mov
dec
loop
push
mov
or
in
imulb
repnz
std
mov
test
mov
ret
hlt
call
ja
cmp
jle
xchg
cmp
enter
int3
loopne
xor
jg
imul
mov
lds
enter
sbb
in
dec
mov
je
add
lock
and
mov
pop
mov
dec
dec
xchg
popf
xor
ds
xchg
jae
test
in
pushf
sub
ja
fwait
test
movsb
mov
cmpsb
cmp
aam
les
test
popa
pop
jl
sbb
jno
nop
jae
popf
iret
imul
je
mov
stos
inc
lock
cmp
inc
xchg
fldl
xchg
add
mov
mov
hlt
mov
lahf
push
pop
sbb
or
ljmp
fwait
aas
jmp
pop
jne
stc
cmp
jecxz
fldt
adc
jle
and
test
cmp
mov
rcll
pop
das
in
sub
pop
dec
mov
adc
icebp
lods
dec
cmp
jecxz
pop
xor
cmpsb
les
dec
into
pop
imul
pop
decl
scas
jmp
push
adc
and
adc
pusha
inc
lahf
imul
inc
scas
inc
or
mov
mov
loope
pushf
and
inc
fisubrl
add
xor
sub
gs
mov
out
xor
inc
mov
and
ror
enter
xchg
inc
xchg
mov
mov
xor
push
gs
inc
scas
inc
cmpl
adc
jnp
sbb
sahf
aas
out
xchg
loop
aad
sbb
mov
inc
mov
jg
jb
mov
stc
into
inc
fwait
test
inc
lea
dec
sub
dec
cmc
mov
es
dec
repz
jo
shll
adc
insl
ret
cli
iret
sub
inc
pop
out
xchg
sub
imul
sub
ljmp
mov
xchg
or
pop
jbe
adc
mov
loopne
les
lds
aas
mov
jno
inc
or
rclb
daa
ret
mov
in
pop
addr16
jp
jge
sub
xchg
mov
jp
xchg
xor
lret
cmpsl
aas
cwtl
mov
pusha
subb
sbb
test
cs
mulb
sub
xor
jmp
dec
sbb
jns
add
dec
fidivl
pop
in
sub
pop
lock
add
sbb
dec
xchg
inc
pop
push
aam
push
push
jae
push
cwtl
sbb
add
loope
mov
fs
push
in
xorl
clc
rcll
xchg
jno
out
dec
jmp
inc
dec
pop
jns
add
in
or
mov
xor
repz
jae
sub
cli
pushf
mov
sbb
mov
cmp
or
leave
sub
adc
push
adc
add
mov
adc
and
mov
adc
fcmovbe
mov
ljmp
jno
sub
icebp
sbb
jg
or
jp
and
jp
iret
fnstsw
jb
mov
les
enter
popl
adc
iret
daa
push
lods
pop
out
mov
xor
jae
dec
lods
push
push
das
addr16
icebp
cwtl
lds
stos
sbb
dec
push
in
decb
aam
dec
mov
out
outsb
sbb
bound
cmp
imul
mov
les
add
cmc
ja
jno
fsubs
mov
adc
mov
adcb
or
mov
shr
repz
jp
jl
pop
mov
dec
movq
mov
enter
scas
jl
push
ja
add
inc
fidivl
xchg
rcll
sbb
jge
lret
xchg
gs
outsb
xchg
lods
sbb
mov
xchg
popa
mull
dec
cmp
aam
jle
jne
mov
addr16
jne
jo
dec
xchg
jbe
mov
pop
dec
fwait
shrl
mov
arpl
sbbl
pop
jl
and
sbbl
inc
mov
xor
jmp
mov
mov
xchg
in
sahf
or
pop
daa
lods
xchg
sub
push
loopne
cmp
mov
mov
adc
aas
rclb
test
pusha
sub
popf
icebp
out
pop
inc
push
or
or
cmc
xchg
cmpsl
push
or
jp
sbb
inc
dec
scas
inc
jg
pop
cltd
nop
push
in
mov
std
imulb
pop
push
or
shl
xchg
xor
xchg
arpl
adc
sbb
in
inc
nop
lahf
testl
je
sbb
inc
fsubrl
sbb
arpl
mov
loope
sbb
fidivl
test
add
mov
in
and
adc
inc
sub
xor
mov
shrl
out
xlat
outsb
mov
lock
push
pop
and
pop
push
inc
loop
hlt
sbb
mov
mov
add
xchg
dec
pop
into
fimull
int3
sbb
adc
jmp
lea
jne
call
jecxz
loope
movsl
mov
divl
call
cwtl
jl
inc
sahf
std
xchg
shlb
cmp
mov
cmp
cmp
shll
or
loop
mov
dec
sarb
jnp
imul
fiaddl
sub
mov
jmp
scas
cltd
add
in
xor
cmp
push
aaa
stos
dec
jl
mov
cmp
xor
pop
loopne
xchg
sbb
lods
fdivl
mov
sub
lds
fdivrl
xlat
scas
add
fstpl
jmp
jno
sub
sbb
stos
and
cs
mov
jmp
lea
insl
stc
jmp
add
push
jmp
divl
or
sbb
mov
and
popa
xor
dec
or
insl
push
and
xor
in
push
cwtl
pop
mov
sti
mov
adc
inc
jp
fisubl
and
pop
push
and
adc
mov
cmpb
outsb
clc
loopne
sbb
sbb
or
push
jno
pop
push
cmp
inc
insb
leave
mov
xchg
outsb
and
ljmp
mov
daa
jb
jno
or
mov
fidivrs
cs
push
jg
xchg
aas
xor
arpl
add
pop
jae
popa
mov
pop
or
nop
cmp
and
lahf
ss
sar
out
leave
pop
sbb
lret
into
mov
sbb
mov
fisubl
pop
in
add
mov
fsts
stc
xor
xor
add
jns
hlt
movsl
add
jg
xchg
mov
mov
mov
push
pop
pop
xchg
or
sbb
ret
loopne
cmc
cmc
mov
xchg
flds
adc
in
movsl
xor
xchg
mov
xchg
or
pop
nop
es
pop
mov
jnp
cmc
jl
es
xlat
inc
sti
jecxz
xchg
mov
dec
cmp
adc
push
repnz
out
sti
dec
cmpsl
inc
sbb
mov
fildl
movsl
loopne
outsl
ljmp
pop
pop
je
aad
iret
xchg
out
inc
arpl
je
fs
mov
faddp
loop
gs
mov
sub
test
sub
push
popf
cmp
cli
pop
es
es
and
or
repnz
add
mov
lcall
xchg
je
mov
movsl
adc
jno
fs
neg
push
popa
clc
xchg
jg
inc
out
pop
sbb
pushf
sbbl
and
movsb
mov
dec
sub
outsb
dec
imulb
call
in
lcall
das
mov
xchg
icebp
sbb
pop
sti
inc
fldcw
dec
pusha
idivl
xacquire
aas
push
movsl
jo
adc
xorl
inc
push
es
xor
leave
xor
push
mov
mov
in
push
mov
je
out
ljmp
into
lock
rcll
xor
sub
adc
daa
scas
pushf
pop
and
ja
cltd
mov
pop
mov
aas
shrb
sbb
pop
mov
scas
out
and
xchg
push
adc
inc
shll
cs
dec
dec
fistpll
inc
popa
cmc
cmpsl
loope
fsts
jb
pop
aam
setno
outsb
adcb
dec
mov
sbb
out
cmp
inc
js
sarl
mov
adc
pop
stc
fcomps
jno
mov
loop
inc
lock
push
jmp
insl
fs
mov
fbld
adc
out
in
xor
sub
neg
lretw
dec
dec
jecxz
lret
sub
cmp
jnp
and
notb
sti
or
sbb
fs
insl
jno
sub
adc
add
sahf
mov
mov
fstpl
fsts
adcl
shl
add
mov
loope
or
or
cli
dec
daa
fimull
repz
mov
xchg
jns
out
fimull
add
mov
cmp
lock
inc
sahf
fwait
cld
push
mov
adc
cmpsl
insl
push
sahf
lea
or
sbb
orb
movsl
mov
xchg
sub
mov
aaa
jl
mov
cmp
scas
fldl
aad
sub
mov
sub
push
in
das
call
jb
xor
or
popa
and
mov
or
data16
sahf
dec
xchg
inc
mov
cmp
push
mov
sbb
aas
stos
push
out
adc
fisubrs
jecxz
sub
cmp
bound
cmc
idiv
and
xchg
push
or
push
mov
jge
fnstcw
xor
mov
cmpsb
lods
pop
add
popf
push
cltd
mov
xchg
es
dec
xchg
int3
push
mov
cltd
pop
es
in
idivl
pop
test
stos
repnz
mov
jno
pop
in
dec
pop
jg
jle
test
je
mov
xlat
push
cli
pop
sub
mov
jo
xchg
rcll
xor
lret
sbb
jg
ds
rep
dec
sbbl
aas
cmp
push
es
lea
xor
dec
xor
cmp
outsl
pushf
roll
mov
sti
mov
or
jge
mov
jp
andb
arpl
push
cltd
cli
jbe
into
sub
push
jne
xchg
jno
mov
shll
push
push
or
out
movsl
and
sti
push
out
add
aam
push
inc
dec
pop
jl
mov
imul
mov
aas
lods
icebp
cmp
xchg
add
lcall
mov
int3
jle
jmp
and
fcoms
loop
and
test
jmp
xor
xor
outsb
inc
stos
dec
push
mov
mov
popa
or
fwait
cli
in
jne
loope
sahf
xchg
ja
add
sti
sbb
adc
cpuid
in
push
in
lret
int3
mov
aad
dec
jbe
jns
and
test
push
movsl
inc
cmc
arpl
mov
adc
mov
das
mov
adc
and
xor
xchg
push
movsb
mov
jg
icebp
adc
mov
ret
daa
xchg
imulb
lods
out
sti
jg
fmuls
mov
push
pop
and
dec
aad
fwait
push
mov
jae
aaa
and
sub
mov
mov
pop
sahf
sbb
js
and
dec
leave
or
inc
mov
pop
lret
adcl
sub
jmp
leave
push
cwtl
or
mov
cmpsl
push
xor
or
xchg
xor
in
jbe
mov
cmp
push
pop
adc
das
out
or
jge
shlb
ret
xchg
sbb
xchg
pop
xorl
repnz
mov
repnz
mov
int3
clc
popl
das
push
leave
pushf
jb
lea
out
jo
lock
testl
add
aad
in
xor
jno
push
test
inc
pushf
add
add
mov
jne
dec
and
mov
push
mov
sub
cltd
sub
push
add
or
rorl
xchg
lahf
inc
sbb
std
sti
cmp
or
xchg
jnp
push
sahf
cld
mov
push
xchg
mov
enterw
scas
pop
shll
gs
imul
cmp
or
ficoml
mov
lret
adc
lret
mov
push
int
jae
clc
addr16
xchg
cmpsb
and
push
sub
mov
dec
idivl
stos
in
aam
lds
sub
fstpt
push
les
in
loope
xor
inc
in
sub
dec
scas
push
enter
xchg
mov
test
xor
in
rcrl
xor
xor
push
rcrl
mov
jne
imul
mov
or
mov
pop
sub
data16
push
sbb
or
int
in
pop
lahf
jno
nop
sti
add
inc
pop
xlat
mov
add
cs
adc
std
cmp
ja
pop
cmp
and
adc
loopne
jl
jle
incb
inc
sbb
std
pop
dec
pop
cmp
in
sbb
lds
sub
das
repnz
and
punpcklbw
je
test
pop
mov
jle
dec
mov
xchg
sub
icebp
or
dec
das
shr
pusha
das
pop
cltd
adc
movsb
jecxz
jg
xor
add
xor
js
cs
or
fisubs
popf
fsubr
into
dec
xor
ljmp
push
mov
dec
pop
sahf
stos
jbe
fcomps
in
mov
inc
fistl
insb
sbbl
test
pmulhuw
cmp
pop
push
or
sahf
xor
push
shll
arpl
repz
pop
mov
xorl
jmp
rorb
push
in
lahf
stos
cs
ds
mov
mov
fcomps
loope
subl
sub
push
push
leave
fwait
push
movsl
fwait
add
xor
das
mov
mov
inc
clc
mov
push
push
jle
jl
inc
scas
push
repz
mov
and
out
dec
inc
jp
test
mov
cmc
adc
jl
or
sbb
mov
add
shl
inc
jmp
sub
sbb
jne
rcr
out
sti
push
mov
xor
pop
add
shll
dec
or
ret
loopw
mov
dec
push
call
cmp
in
movsl
addr16
sub
call
or
andl
pop
push
pop
mov
mov
cmpsl
inc
sub
ljmp
addr16
push
mov
mov
sbb
adc
cwtl
adc
out
testb
push
adc
push
push
pop
lock
fiaddl
jle
mov
pmaxub
out
adc
or
nop
jl
scas
jmp
fidivrs
cmp
push
xchg
ss
adcb
sti
xchg
in
mov
jae
pop
shlb
dec
mov
jns
dec
mov
fiadds
adc
shrl
adc
int
pop
xlat
sbb
ss
arpl
xchg
pop
jns
and
mov
push
lea
in
lea
in
lahf
ds
clc
shlb
xor
mov
xchg
sub
dec
pop
dec
mov
lods
out
fbstp
test
leave
mov
push
cs
mov
cmpl
jb
mov
sbb
inc
mov
insl
in
push
xor
outsl
mov
dec
int
mov
add
mov
or
sbb
imul
jno
pop
cwtl
scas
inc
add
cmpsb
sti
ret
test
mov
cli
sarl
shrl
test
dec
ds
pop
popa
adc
mov
or
jbe
loope
pop
mov
fcoms
les
xlat
pop
out
or
or
push
dec
shrl
xor
and
ljmp
dec
dec
inc
sarb
mov
cmp
and
inc
xlat
adc
or
jecxz
xor
push
repnz
inc
gs
mov
scas
out
imul
lods
mov
popf
pop
movsl
adc
rcrl
sbb
cmpsb
sbb
data16
jp
lea
cmp
clc
jo
dec
movsb
mov
push
mov
jp
ds
loopne
inc
aas
lret
inc
sub
jb
leave
inc
fwait
add
mov
dec
cwtl
pop
lock
rol
lods
add
das
pop
mov
jp
push
lock
adc
lcall
dec
outsb
lods
dec
dec
add
lods
xor
cmp
and
xlat
mov
sbbb
hlt
sub
hlt
pop
sub
jge
movsl
cltd
enter
cli
cmp
lock
arpl
mov
arpl
mov
int3
hlt
push
xor
dec
adc
cmc
xchg
fnstcw
insl
sbb
int3
cmpsb
push
add
mov
in
rcrl
xlat
mov
out
xor
sub
mov
push
inc
xor
and
adc
out
inc
pop
and
inc
sbb
inc
cmpb
das
pop
sbb
stc
and
push
fidivs
loope
sarb
pop
leave
ds
sbb
es
jmp
iret
sti
ret
lds
mov
mov
jge
inc
in
imul
pop
stos
dec
decl
and
or
test
jmp
fstl
imul
xor
jmp
or
xor
test
orl
add
in
and
cmpsl
lcall
clc
test
or
sbb
in
add
cmp
jg
lret
loopne
pop
push
js
aam
bound
cmpsb
jno
pop
cmp
dec
shr
test
jg
push
inc
sbb
dec
mov
ret
mov
call
lods
cmpsb
jnp
je
arpl
adc
mov
add
bound
iret
outsl
or
repz
push
and
aam
stc
orl
xchg
icebp
rol
jo
xchg
ljmp
xor
cmp
shrb
je
add
divb
ficompl
andl
dec
fldenv
jg
fldt
jge
dec
jl
mov
sbb
cmp
add
movsb
push
mov
addr16
jb
loop
mov
inc
pop
sub
jns
mov
nop
lds
std
cmp
xchg
neg
pop
shlb
cld
xchg
inc
mov
lahf
in
out
outsl
outsb
data16
xor
stc
pop
into
pop
jo
inc
and
dec
fisubl
sub
hlt
adcb
or
aaa
into
mov
mov
loope
insb
inc
or
pop
imul
pcmpeqb
xchg
and
mov
nop
jmp
xchg
push
test
ret
sti
adc
add
ret
ret
adc
popa
clc
jle
rcr
sar
adc
pop
ss
pop
xor
xchg
leave
cmp
repz
jmp
dec
or
add
mov
dec
loope
movsb
cs
adc
pusha
retw
jbe
or
loop
xor
testb
sub
icebp
jb
jnp
mov
or
decb
xchg
and
fiadds
sbb
adcl
adc
xchg
hlt
idivl
movsl
add
rclb
adc
fcmovnb
fs
fidivrs
or
mov
aas
dec
icebp
mov
jecxz
sbb
mov
mov
les
inc
xchg
filds
mov
sahf
xor
movl
stos
jmp
mov
xor
inc
push
fistps
imul
adc
pop
pop
movb
cmc
mov
xchg
or
or
jmp
es
mov
push
xlat
rcrb
lret
push
test
cmp
stos
mov
movsb
repz
add
addr16
xchg
repnz
shr
sbbl
or
pop
jbe
cmc
pop
sbb
mov
mov
fadds
pop
and
movsb
xor
sahf
repz
mov
sbb
sbb
dec
movsl
inc
cmp
jg
mov
out
mov
popa
jmp
ja
ss
push
push
sub
dec
cmovl
cmp
dec
lock
movsb
sti
fnsave
lcall
dec
sub
xlat
insb
adc
xchg
push
not
lret
inc
add
mov
mov
mov
pop
adc
loop
inc
jae
decb
jp
inc
mov
mov
dec
imul
dec
std
data16
aaa
fsubrs
cmp
arpl
xor
and
into
or
mov
sbb
aaa
or
mov
mov
hlt
mov
mov
push
mov
push
cmp
push
lock
fcomps
mov
lods
push
mov
xorb
pusha
aaa
lods
jp
scas
and
lret
mov
test
stos
dec
pushl
cmpsb
fistl
and
cmp
movsb
inc
or
and
mov
push
addb
mov
fistps
fnclex
and
pop
push
xchg
ret
xor
test
pusha
xchg
clc
or
pop
ret
pop
call
adc
subb
addr16
pop
addr16
xor
lret
mov
testl
lret
mov
mov
int
jle
mov
lods
inc
roll
int
cmp
stc
xor
push
decb
cmpl
mov
inc
sti
gs
inc
fisubrs
repnz
lcall
fsubl
test
add
add
je
arpl
cmpsb
flds
or
cmpsb
jns
dec
add
mov
jbe
fisubl
cmp
or
cmp
push
jb
jbe
enter
cmp
cmp
pop
out
cld
dec
or
std
xorb
push
fs
ja,pn
xlat
and
cltd
mov
cmpsl
pop
sub
test
iret
jp
and
insb
cltd
data16
xchg
dec
mov
jne
lahf
sbb
stc
movsb
push
std
xchg
sbb
sub
mov
mov
adc
xchg
inc
jne
pop
xchg
mov
and
in
lcall
or
stos
inc
clc
fwait
push
mov
dec
push
outsl
sti
je
arpl
and
mov
out
add
jae
cs
adc
adc
xor
mov
loop
outsb
rclb
jne
repnz
or
addl
aas
loope
mov
movsb
xchg
mov
push
out
lea
mov
jecxz
enter
cmpsl
movsl
sbb
jne
stc
mov
imul
out
xlat
push
dec
mov
sti
adcb
sbb
push
xchg
shl
mov
xlat
cmp
add
sarb
mov
push
mov
pop
mov
fistpl
mov
pusha
popa
mov
lahf
outsl
stos
inc
pop
test
aaa
add
aaa
in
decb
push
push
out
pop
out
into
loope
inc
movsl
data16
jbe
fs
pop
cmp
cmp
roll
xchg
add
out
scas
inc
jg
or
in
loope
ds
out
add
xlat
mov
fsubrp
scas
outsb
movsl
hlt
mov
aam
xchg
and
sbb
inc
sub
cmp
imul
imul
rol
movsl
lds
xchg
cmp
dec
xchg
push
in
and
cmp
lock
sahf
aad
xchg
xchg
sbb
pop
aas
lds
je
aam
mov
xchg
ds
fs
adc
aas
insb
fbstp
add
push
push
repz
out
mov
and
cmpsb
cmp
clc
pop
inc
xlat
nop
sbb
and
out
ss
test
in
jo
lods
adc
pop
repnz
push
jns
cmp
gs
int3
push
sbb
mov
jne
mov
xchg
ja
addr16
cli
sbb
subl
jle
push
cmp
int
jo
push
inc
fisttpl
sbb
cmp
jmp
jno
out
movsb
jecxz
sbb
nop
dec
maskmovq
notl
stos
fwait
cli
rolb
jae
jg
push
stos
iret
orb
es
inc
pop
jl
push
lods
cmpb
pop
mov
adc
rcrb
mov
pop
xor
xlat
arpl
and
inc
sbb
mov
lea
nop
daa
in
dec
repz
les
ds
dec
push
fistl
pop
fucomip
arpl
push
mov
jl,pn
js
out
icebp
mov
adc
imull
lods
xchg
inc
scas
mov
andb
push
mov
jge
loopne
js
mov
js
mov
and
or
dec
sub
cld
jge
pop
sbb
loop
sbb
les
mov
je
sub
dec
cmpsl
ljmp
push
jg
or
jle
mov
cmp
or
sti
xor
bound
out
int3
cwtl
mov
add
cld
in
cld
sub
sub
pop
sahf
gs
sub
or
add
push
movsl
sbb
jae
leave
sbb
nopl
pop
cmc
jnp
adc
sbb
xchg
lret
dec
push
lcall
shrl
mov
cltd
test
pusha
push
out
jbe,pt
repnz
mov
ret
hlt
sarl
je
jbe
mulb
movsb
cmp
loopne
dec
adc
sub
jl
aaa
push
jle
hlt
adc
xchg
mov
inc
xchg
test
mov
xor
inc
bound
lcall
lds
xchg
sbb
xor
push
add
jle
cltd
jo
mov
mov
pop
imull
xor
pop
cmp
aaa
std
sub
pop
jecxz
pop
mov
jecxz
sub
out
inc
mov
in
add
sbb
pop
mov
loopne
pop
shlb
loop
dec
mov
shrb
xchg
xchg
mov
sbb
out
popf
les
lds
ljmp
cld
push
jnp
lods
xor
inc
mov
add
cltd
sarb
mov
xchg
ljmp
pop
sbb
push
mov
nop
xor
push
cmpsb
enter
mov
lods
aad
cmp
jnp
xor
pop
mov
push
inc
call
stos
imul
leave
insb
jl
inc
add
pusha
xchg
cmpsb
addl
inc
out
divb
mov
mov
test
xchg
jbe
or
jg
or
add
lret
mov
mov
in
jns
mov
mov
subb
ljmp
xchg
mov
daa
add
inc
mov
fldenv
or
ljmp
dec
int3
jmp
fimull
or
jge
outsb
sub
mov
addb
fucomip
lcall
jns
mov
push
sbb
sbb
mov
pop
jmp
dec
and
jp
cmp
lcall
push
cli
sub
xchg
pop
pop
jbe
sub
repz
incl
jno
nop
sub
iret
push
inc
inc
in
fildll
imul
xchg
pop
test
popa
inc
mov
loop
sub
cmp
add
xorb
or
xchg
mov
sub
aam
xor
loope
shlb
cmp
ljmp
xchg
test
add
pop
mov
cmove
xchg
test
pop
cmpsb
cmp
bound
jle
shlb
push
loopne
les
in
xor
mov
pop
int
sar
ret
pusha
jp
out
adc
flds
push
mov
lock
stos
inc
int3
xchg
enter
leave
mov
mov
mov
dec
mov
push
mov
xlat
sar
or
les
push
int
fcmovnb
jnp
lea
adc
xor
imul
pop
mov
orl
popa
xlat
lahf
push
movsl
sar
push
stos
sbb
mov
jae
or
int
test
xlat
shll
mov
xchg
in
popf
push
jae
add
mov
sti
addb
das
pop
push
jecxz
or
vdivsd
popa
mov
aad
cmp
pusha
adc
pop
repnz
scas
mov
mov
or
test
clc
scas
inc
sti
adc
jb
iret
cmp
jecxz
cwtl
pop
sarb
and
rcll
xor
inc
mov
lret
loopne
and
sbb
pop
repnz
mov
lret
scas
mov
or
dec
dec
cwtl
mov
mov
jle
push
xchg
shll
sbb
pop
mov
push
push
cs
dec
rcrb
sub
fstps
fs
pop
xlat
xor
add
cmc
cmp
and
ret
mov
jmp
subb
inc
pop
jae
stc
int3
ss
or
jl
adc
mov
jge
mov
jae
mov
lcall
ja
push
xchg
jns
leave
aaa
decb
mov
clc
ja
fstpt
stos
inc
push
hlt
push
repz
call
jns
fldl
sbb
insl
ss
sbb
dec
in
jmp
push
aas
jo
xor
and
xchg
sub
scas
adc
adc
rorb
lea
imul
imul
add
xchg
mov
inc
mov
or
adc
or
or
fwait
mov
test
arpl
icebp
popl
mov
arpl
inc
pop
mov
push
js
rcrb
cmp
cmp
or
ss
int
inc
fcoml
shlb
pop
mov
dec
cli
pop
jns
das
cmpsl
mov
mov
sbb
xchg
sub
inc
mov
andb
repz
sub
dec
cmp
test
jne
mov
test
xor
xor
notb
cmp
jne
sbb
pop
lret
mov
outsl
enter
adc
inc
sbb
fisttps
push
inc
push
push
and
jbe
movsb
mov
test
mov
jp
dec
cmp
loope
mov
push
sub
rorb
punpcklwd
ds
sub
add
adc
shlb
lahf
leave
dec
lahf
cmpl
iret
pop
push
fbstp
jle
jbe
mov
mov
fcoml
add
ret
lods
push
xchg
pop
or
xchg
add
inc
adc
addl
mov
cmpb
addb
cmp
outsb
test
lds
adc
add
fldcw
scas
insl
sbb
gs
stos
cltd
mov
aad
std
div
cltd
daa
mov
pop
adc
cmpsl
je
pop
adc
mov
mov
das
push
shrb
and
xchg
inc
lcall
and
aad
inc
shrl
test
pop
ffree
or
leave
push
adc
mov
dec
bound
test
lods
mov
iret
imul
movsb
mov
or
js,pn
add
xchg
mov
dec
icebp
insb
outsl
sbb
xchg
sbb
repnz
inc
push
or
repnz
pop
cmc
adc
cwtl
pop
out
sbb
cmc
mov
inc
and
into
jg
jge
mov
and
xchg
mov
repz
pop
dec
pop
cmp
sub
hlt
or
add
outsl
lock
aad
mov
loopne
push
pop
ss
out
loopne
jp
jo
jecxz
dec
rcrb
andl
or
push
jmp
inc
inc
cmp
jns
pop
dec
and
fimuls
nop
aam
test
int
mov
bextr
sub
dec
pop
mov
lds
jecxz
xor
adc
aaa
jae
jb
pop
mov
clc
push
stos
dec
negb
jmp
fimull
rolb
add
pushf
jno
jmp
out
sbb
in
jmp
adc
push
xchg
xor
insl
inc
mov
add
pushf
in
push
lret
mov
shrl
mov
fidivrs
jmp
jp
pop
gs
mov
clc
subl
dec
das
xor
sub
rcll
testl
inc
je
cs
sahf
clc
push
insl
dec
insb
xor
and
or
mov
sahf
rdmsr
insl
mov
mov
mov
sub
inc
mov
fisubs
hlt
inc
divb
push
add
loopne
outsl
jnp
lods
imul
xchg
popf
jecxz
cmpl
mov
mov
push
out
mov
ds
into
inc
cmp
sub
fcompl
andb
mov
loopne
fbld
scas
or
imul
je
and
pop
xor
push
or
lock
xor
inc
pop
addr16
push
sbb
push
ror
bound
dec
mov
pop
loop
movsb
cmp
push
stos
les
pop
movsl
int
rclb
insb
scas
mov
cmc
add
push
jbe
ret
daa
pop
xlat
rclb
clc
dec
adc
dec
pop
addr16
cltd
xor
xchg
stos
add
jbe
jbe
add
xchg
mov
sarb
fwait
movsb
popa
xor
out
cmpsl
cmp
rcll
bound
fdiv
mov
pop
jmp
movsb
in
adc
or
ljmp
mov
push
mov
test
shrl
and
mov
cltd
cmp
xchg
mov
cltd
test
xlat
adc
inc
jge
out
call
push
js
mov
lret
sar
and
and
mov
ss
fisubs
setbe
or
push
cmc
cmp
sub
ret
pop
lock
sbb
popf
cmp
add
push
xor
and
std
loopne
adcb
pop
lret
insb
addl
pop
jmp
add
cmp
xchg
daa
mov
push
stos
inc
jmp
xchg
or
add
xchg
pcmpgtb
cmp
mov
test
rdpmc
sbb
outsb
push
mov
add
sub
je
and
push
fimuls
test
push
sbb
popa
sti
movsl
aas
xor
cmp
push
insb
nop
aaa
jg
mov
int3
cmp
push
jmp
leave
in
test
sti
outsl
shll
push
pop
out
xorb
mov
jne
ja
sahf
xchg
pop
in
or
cmpsl
jne
sub
mov
add
sub
cmp
adc
test
mov
mov
dec
out
push
mov
mov
cmp
fwait
addr16
mov
hlt
sbb
xchg
sub
out
pop
pop
mov
lret
and
scas
pop
into
loopne
ljmp
mov
mov
lea
jbe
fisubrs
pop
sub
inc
sbb
outsb
mov
jo
dec
dec
icebp
scas
push
in
out
and
testb
fstpl
rcll
xor
sub
outsl
pop
scas
xchg
lcall
push
mov
or
stc
pop
jne
and
popf
test
jno
lea
xchg
add
aam
fdivl
mov
push
in
out
fisubrl
push
nop
stos
ret
mov
scas
loop
add
xor
ss
push
lds
pop
outsb
xor
xchg
sub
frstor
jne
mov
mov
push
out
aam
aam
outsb
jbe
and
insl
pushf
inc
push
jb
jp
lods
mov
into
bound
adc
dec
lahf
aam
sarl
mov
xchg
push
mov
test
jl
enter
pop
lock
inc
dec
sub
jecxz
imul
pushf
repnz
aas
push
xchg
ljmp
push
aas
push
push
iret
sub
xchg
sbb
dec
ja
ds
imul
bnd
nop
jo
jo
or
sub
cmp
xchg
icebp
pop
adc
stos
jbe
mov
mov
push
jne
cmc
mov
pop
dec
daa
pop
stc
pop
lock
imul
in
add
imul
int
mov
cmpb
xchg
test
mov
push
jg
jnp
ja
or
push
xchg
stc
addb
push
outsl
inc
pop
inc
testb
popa
adc
push
xchg
in
imul
sbb
out
ja
mov
mov
in
xor
in
test
or
cmpsl
arpl
aam
dec
and
sub
stos
clc
cmp
jecxz
pop
popf
mov
mov
jmp
or
dec
mov
mov
daa
ljmp
jg
clc
inc
jg
lcall
fsubrs
jbe
dec
inc
mov
repz
cmp
inc
ret
shll
or
mov
inc
std
mov
cmp
loopne
mov
loop
lods
insl
fcoms
test
fidivl
loop
cmp
insb
scas
stos
push
pop
lcall
stc
cwtl
out
mov
lret
push
jb
xchg
mov
loopne
out
adc
xor
lods
dec
sub
lods
mov
xor
out
add
xchg
les
inc
sbbb
mov
fisubrl
int
iret
mov
mov
and
out
outsl
jmp
mov
push
push
add
fistpl
mov
mov
in
loop
push
in
cmp
mov
mov
ja
xor
movsb
jmp
and
add
inc
loope
test
and
call
mov
push
ret
jns
outsl
jge
cmpsl
ret
xor
stc
rcrl
testl
ret
rcll
xor
cmp
cltd
xor
les
jns
and
clc
lock
inc
ret
shlb
loopne
add
pop
mov
pop
outsl
rorb
cmpsl
dec
out
inc
test
add
mov
inc
into
ret
pop
mov
inc
mov
scas
dec
gs
xchg
sub
fdivr
mov
xor
dec
rorl
push
push
inc
sub
jg
adc
repnz
fs
xchg
rcrl
std
popl
iret
mov
or
pop
lea
mov
test
cld
or
cmc
insl
sub
pop
or
sbb
pop
inc
jl
in
insb
pop
jmp
add
sbb
mov
pop
mov
mov
sbbb
pop
dec
or
lret
jg
rclb
cli
push
xor
sub
dec
jle
mov
pop
scas
loopne
xchg
jns
xchg
jne
xor
mov
cmp
mov
stos
mov
js
lds
lods
jl
fldt
and
cld
int
fsubs
fcomip
xchg
lea
mov
sbb
je
mov
cmp
fwait
pop
pop
jg
sbb
aaa
mov
xlat
pop
lock
or
xchg
sti
cmc
cli
xchg
dec
mov
sbb
adc
xor
push
pop
push
jmp
pop
in
cmp
adc
rcll
and
cmp
movsb
xor
call
xlat
ss
or
fistps
add
jl
xor
ss
pop
and
and
pop
enter
js
inc
aad
sub
out
xchg
test
sti
xor
ljmp
inc
fsts
jnp
dec
ja
jmp
pop
lcall
push
mov
mov
cmpsl
addr16
stos
pop
filds
push
test
test
sub
aam
in
jmp
xchg
or
icebp
mov
fidivrl
orl
inc
push
shlb
pop
addr16
andb
or
sarl
outsl
rcl
lods
bound
jbe
in
outsl
xchg
iret
movsl
test
xor
lds
sbb
jbe
out
mov
scas
inc
jl
dec
fs
fwait
push
lret
imul
shr
push
jmp
out
push
adc
jb
test
andl
shll
insl
xchg
sbb
fdivrl
jmp
andl
and
add
pusha
add
sbb
and
inc
loope
or
mov
mov
sbb
repz
mov
popa
imull
int
sbb
push
xchg
push
nop
mov
mov
icebp
arpl
pop
dec
in
imul
sbb
jb
cmp
pop
and
pop
inc
xor
jb
ljmp
push
push
das
xor
xchg
xlat
insl
inc
popf
jle
inc
push
jl
inc
mov
mov
cmp
imul
stos
xchg
test
shr
rcrl
mov
mov
es
stc
nop
gs
mov
push
aam
inc
xchg
add
ljmp
lea
sbb
jmp
clc
mov
ret
repz
out
jae
iret
mov
inc
and
lds
imul
shll
repnz
adc
stos
push
pop
sub
inc
dec
shll
jge
in
scas
mov
or
les
mov
pushf
pop
inc
icebp
scas
icebp
cmp
imul
lret
push
push
test
in
insb
lds
ja
jo
pusha
xchg
sti
push
pusha
lds
inc
out
ja
movsb
dec
mov
xor
jmp
out
fwait
mov
xchg
cmp
movq
imull
ds
adc
or
xor
cld
cmpsb
hlt
cmp
jmp
and
pop
fdivr
loop
jge
cmp
and
mov
inc
movsb
cmp
sub
rcr
ds
push
mov
inc
movsl
das
cmp
mov
inc
or
jae
jg
incb
jne
pop
mov
mov
cmp
gs
clc
fwait
xchg
js
sub
outsl
out
mul
pop
jp
pop
stos
sub
inc
xchg
push
aam
bound
pop
pop
mov
mov
mov
lret
xor
mov
mov
les
daa
aaa
push
pop
dec
xor
andb
or
cmp
imulb
pop
mov
mov
adc
gs
inc
fcomip
dec
test
int
out
xor
je
insl
popf
cmpsl
outsb
dec
xlat
push
inc
imul
xor
pcmpgtw
aad
sahf
push
xchg
dec
stos
push
jae
outsb
sbb
push
sbb
test
and
sub
repz
jbe
pushf
jae
testl
in
jp
subl
pop
repnz
fdivrl
mov
sub
test
xchg
scas
inc
insb
add
inc
shl
pop
or
xor
xchg
insb
loopne
insl
mov
out
sub
mov
xor
es
loop
inc
push
lds
xchg
sti
push
lods
add
sbb
dec
aam
push
out
mov
push
fcomps
xchg
mov
scas
add
fdivl
mov
add
xlat
mov
push
aas
imul
jg
cmp
sarl
shlb
leave
inc
gs
sub
int3
xchg
inc
cld
imull
xor
enter
xor
aad
adc
jecxz
pushf
mov
mov
leave
xor
xchg
call
inc
pusha
or
pop
cmp
stos
inc
rcl
jmp
mov
jbe
sarb
mov
fadds
cmp
loope
sbb
add
lea
and
push
inc
push
testl
adc
sub
ret
dec
nop
sti
mov
flds
lret
test
leave
repz
roll
shl
jmp
and
subl
sbb
and
or
imul
test
insl
mov
subl
mov
xor
hlt
je
inc
mov
push
jb
in
push
sub
mov
jg
stos
dec
cmp
cmp
in
cmp
fwait
inc
fxch
add
clc
inc
loope,pn
dec
test
pop
inc
lahf
jbe
inc
int
mov
std
je
sbb
sbb
dec
pop
test
xchg
popa
sbb
cmp
aad
dec
pop
cmp
js
jl
inc
test
aaa
fisubrl
xchg
sub
mov
jle
insl
addr16
fidivrs
sbb
mov
cmp
add
loopne
stc
adc
mov
ja
pop
jbe
das
lret
pop
pop
jecxz
mov
xchg
dec
outsb
roll
inc
or
jbe
xchg
lahf
push
call
sbb
sub
xchg
jmp
adc
mov
out
push
sub
fisttpll
jge
cmpb
pushf
jle,pt
ja
mov
out
hlt
or
jle
add
out
cmp
stos
adc
inc
test
xchg
fcompl
fidivs
adc
cmp
xor
ja
cmp
fcoms
xor
jmp
push
jp
add
pop
insb
out
inc
and
mov
pusha
sbb
xchg
sub
pop
cltd
or
pop
xor
adc
adc
js
repz
jge
inc
and
add
pop
jbe
or
repnz
push
mov
sub
dec
loopne
cmp
jno
movsb
adcb
dec
addl
inc
dec
mov
cmp
dec
rclb
dec
dec
xchg
sbb
push
dec
lods
inc
jnp
iret
popf
dec
aam
jbe
outsb
cmp
es
jmp
mul
mov
and
shl
or
xchg
inc
fcmovnb
dec
xchg
mov
divb
int
gs
cmpsl
jle
in
pop
mov
mov
repz
dec
in
adc
nop
xor
insl
adcb
add
and
testl
bound
xchg
lods
out
lods
and
xchg
and
mov
mov
mov
cwtl
xchg
pop
ljmp
push
test
jg
pop
stos
pop
adc
lret
in
cld
add
mov
pop
adc
adc
push
mov
jne
leave
fprem1
jb
sbb
cmpsb
pop
jg
jl
xchg
dec
ja
clc
add
jbe
mov
in
mov
jl
daa
into
lcall
inc
decb
mov
repz
mov
adc
sub
leave
lea
cli
sub
inc
cltd
test
push
inc
out
cmp
aas
test
sub
std
cmp
mulb
gs
push
lar
push
xor
bound
sbbb
shll
inc
adc
je
pop
sub
push
mov
cmpsl
icebp
test
add
int
push
pop
sbb
insb
ret
lcall
and
pop
je
daa
jge
and
mov
sbb
mov
push
jnp
inc
ljmp
inc
add
iret
fnstsw
add
cmp
lret
sub
fwait
inc
mov
movsl
xchg
adc
mov
mov
stos
adc
shl
mov
mov
sub
and
pop
imull
or
js
xor
fdivl
inc
xlat
lds
gs
sti
stos
xchg
out
jle
mov
mov
mov
jb
sub
jns
leave
stos
shll
add
popa
adcl
lret
fwait
push
jb
jge
aad
out
out
mov
sbb
inc
rol
mov
div
dec
mov
lds
jb
sub
dec
pop
je
xor
or
clc
stos
fidivs
add
popl
test
stc
push
out
jmp
xlat
sbb
outsb
jl
xorb
mov
push
in
fnstsw
and
push
aad
sub
popf
mov
pop
cmp
adc
mov
mov
push
xchg
outsb
mov
cmpsb
cmp
sub
repnz
mov
idivb
jno
movsb
cmp
push
push
orl
iret
inc
mov
jge
jns
push
mov
sbb
dec
shll
dec
cmpb
and
sahf
imul
add
ret
ret
mov
addr16
stc
cmpb
cmp
in
imul
sti
ret
data16
adc
jg
movsb
repz
lock
lcall
inc
fbld
ffreep
fstl
fldenv
stos
sar
and
push
sub
jb
in
xor
xchg
inc
ss
andb
pusha
adc
mov
xor
daa
stc
xchg
and
imul
pusha
push
mov
sahf
fisubl
pushf
repz
mov
fwait
xor
int3
rcrb
inc
std
inc
adc
imul
test
xlat
jnp
inc
sbb
outsb
pop
xor
aad
incb
push
jo
pop
jecxz
sbb
sub
pushf
daa
in
testb
clc
and
or
push
std
aas
mov
call
stc
xor
icebp
mov
adc
lcall
mov
add
pop
jg
adc
adc
mov
roll
fdiv
cmp
scas
cltd
adc
xchg
in
testl
incl
cmp
xchg
jo
push
inc
push
pop
mov
fsubs
jle
inc
mov
mov
addr16
mov
sub
add
xchg
cmpsb
adc
data16
push
xchg
or
mov
and
cwtl
push
hlt
rol
test
testb
pop
mov
push
mov
jae
xor
enter
std
push
adc
jno
xchg
insb
add
jns
repz
enter
in
cli
pushf
fwait
mov
push
xorb
shlb
dec
dec
lods
xchg
or
fwait
jno
push
arpl
sub
dec
jbe
xchg
push
mov
xor
push
jb
loopne
mov
popf
dec
in
mov
out
xchg
mov
mov
cltd
cld
mov
cs
sahf
aas
cmp
rorb
pop
sahf
outsl
push
or
dec
jecxz
adc
adc
ja
loopne
push
sub
les
and
mov
mov
pusha
add
xchg
inc
sub
hlt
movsl
lahf
notb
sbb
pop
movsl
ss
repz
mov
stos
xchg
and
neg
add
ljmp
pop
jb
rcl
out
xchg
loopne
lds
test
addr16
stc
mov
inc
divb
mov
xlat
gs
popa
test
pop
push
fistl
in
insb
add
mov
inc
arpl
mov
dec
jmp
dec
or
mov
mov
mov
xor
pop
imul
sbb
xchg
xchg
rorw
mov
jle
push
ud2
mov
int
add
cld
cmp
push
in
pop
int
inc
adc
jo
dec
pop
push
xchg
outsb
cmp
push
enter
mov
fcoms
or
ficompl
fisubs
jge
subl
movsl
js
sub
dec
dec
jecxz
dec
mov
incb
sbb
test
frstor
loop
lcall
dec
dec
movl
jns,pt
fsubrs
maxps
pop
idivb
loope
xchg
pop
mov
imul
cmp
xor
dec
dec
clc
rol
ficoms
ss
jmp
mov
or
mov
psubsw
insb
sbb
loopne,pt
xchg
pop
lret
dec
cmpsl
fstp
jno
rclb
add
ret
testl
fbld
jg
icebp
sub
adc
mov
or
fildll
adc
cmp
dec
mov
mov
subb
pushf
ljmp
loopne
cmp
mov
pop
adc
out
int3
jo
mov
jno
add
ss
cltd
jns
shll
jb
mov
and
dec
adc
jo
sti
mov
dec
cwtl
or
and
pushf
fadds
mov
loop
pop
sti
icebp
mov
fmulp
imulb
jo
inc
pusha
cld
fstpl
adc
pushf
scas
add
cmpsb
or
mov
and
fcmove
dec
lret
cli
mov
adc
mov
fisubrl
cltd
aam
popf
or
xchg
jg
jnp
jp
sbb
sti
lahf
fwait
ss
fldt
sub
xchg
loop
cltd
das
stos
and
sub
arpl
xchg
movsb
mov
mov
sub
arpl
cmp
scas
dec
and
mov
andb
pop
daa
in
hlt
movsl
ss
mov
mov
icebp
fistpll
pop
shl
add
into
adc
inc
out
push
dec
cmp
stc
cltd
pop
pop
test
jmp
push
sub
sti
je
lcall
and
jmp
pop
cwtl
lahf
xchg
lods
add
out
add
call
pop
mov
movd
outsl
enter
xor
jns
repnz
push
shrl
fwait
hlt
or
or
movsb
dec
mov
es
cmp
xchg
sub
sbb
gs
add
add
xchg
or
outsb
jbe
jne
cmp
insb
cmp
inc
out
cltd
test
mov
hlt
adc
test
jp
cmc
push
mov
cmp
das
fisubrs
repnz
pushf
popl
icebp
imul
out
jp
pop
loopne
jno
sbb
dec
pusha
shlb
mov
loope
mov
push
jmp
into
std
jmp
sbb
jl
dec
cmpsl
shrl
xor
push
ja
je
addr16
xor
mov
scas
out
int3
push
xchg
testb
addl
les
and
and
std
inc
mov
popa
popf
mov
inc
testb
rcl
cmp
es
mov
sub
jge
sti
nop
rclb
jo
bound
xchg
mov
js,pn
pop
sbb
mov
gs
xchg
sub
sbb
ja
ss
or
fadds
push
push
cltd
fidivl
sbb
lcall
loope
pusha
das
mov
jbe
pusha
das
les
test
dec
repnz
add
and
pop
imul
mov
fs
stc
sti
in
lock
sub
std
pop
andb
xor
test
pop
mov
xchg
jae
cmp
ds
ljmp
sub
addl
add
mov
mov
rclb
push
pop
repnz
jl
sub
or
adc
xor
jp
sti
jle
add
cltd
xor
push
sub
adc
mov
test
pop
clc
adcb
add
bound
inc
adc
xlat
in
pop
dec
jne
mov
stc
pop
fs
mov
mov
in
imul
xchg
mov
cltd
mov
fcmovnb
inc
sub
or
cmpsl
pop
cmc
fsub
sub
jle
jle
in
pop
jl
add
and
gs
movsl
dec
and
cld
sbb
xchg
dec
arpl
in
popa
mov
inc
data16
lret
cli
push
mov
xor
jg
insb
and
push
inc
cmp
fdivr
cli
xor
aad
pop
div
cmp
pop
dec
push
mov
pop
cmp
pop
sbb
pop
cmp
pop
adc
in
push
jecxz
dec
sbb
test
addr16
pop
fwait
repnz
cmp
sbbb
pop
sbb
divb
cmpsl
pop
lcall
and
mov
inc
push
ljmp
and
mov
roll
mov
cmp
xchg
call
rep
scas
aaa
mov
add
sahf
sbbl
shlb
test
jg
ret
ret
fnstenv
adc
jg
in
fcmovnb
pushf
inc
adc
icebp
sbb
mov
fucom
mulb
imul
stos
xor
sub
data16
fcmovnu
icebp
or
lret
cltd
mov
scas
ljmp
pop
es
lcall
cmp
invd
adc
xor
xchg
mov
lock
mov
add
and
pop
popa
push
jl
xchg
addr16
std
jb
xlat
mov
add
sarb
loope
addr16
pop
push
fcomps
rcl
shl
imul
into
or
add
mov
bound
movsb
je
clc
and
xor
adc
cld
xchg
cs
mov
push
jge
and
test
lock
xchg
pop
push
jge
mov
sub
in
and
aad
dec
jge
inc
push
pop
dec
push
jbe
clc
or
sbb
and
in
xor
xchg
sbb
xchg
pop
test
add
or
pop
pusha
daa
mov
push
inc
fdivr
psubusw
out
and
or
daa
adc
movsl
int3
dec
test
jo
filds
imul
addr16
push
dec
add
jmp
xor
jb
lods
fldl
sbb
test
bound
mov
test
sbb
sub
cmp
mov
jge
cmp
sbb
jp
ret
call
sub
or
dec
jnp
jne
or
dec
add
cld
test
dec
jl
and
pop
and
xor
hlt
jne
jp
xor
fld
push
insl
cltd
jbe
push
cmpsb
fmull
int
ret
addl
scas
leave
push
mull
in
xor
mov
jecxz
int3
push
sbbl
jmp
or
xchg
shr
mov
pop
and
scas
cmp
mov
push
push
movl
movsb
mov
int3
or
and
pushf
orb
cwtl
jb
test
mov
xor
sbb
mov
xlat
dec
fldz
std
and
aad
mov
jbe
or
add
hlt
dec
xchg
mov
call
hlt
sub
ljmp
test
cld
out
and
es
xor
dec
sbb
pop
decb
hlt
xchg
sbb
scas
or
mov
rcl
ret
inc
jo
sub
outsl
xorb
xor
fiaddl
jnp
imul
mov
pop
jns
add
fidivl
mov
dec
sbb
ret
push
iret
iret
scas
sbb
cmp
cmp
cld
cmp
lret
pusha
gs
adc
mov
shrb
mov
lock
iret
call
jge
fcmovne
xor
and
mov
jl
pop
out
or
cmp
or
sub
lods
dec
repnz
testb
lock
pop
xchg
xor
jecxz
dec
push
vpandn
jmp
mov
cmp
ret
add
loop
gs
cwtl
jge
jp
data16
shlb
add
pop
add
xchg
add
inc
xchg
jecxz
or
mov
jp
mov
or
mov
jecxz
aas
shlb
xor
mov
je
lahf
xor
xchg
inc
gs
cmp
not
adc
rorl
roll
bound
push
mov
cmp
sbb
push
sub
jae
dec
xchg
icebp
xor
pop
cmp
sub
sbb
cmpsl
adc
jne
cmp
subl
cmp
xor
fdiv
and
mov
in
cltd
pop
xchg
addr16
shl
testl
outsb
cmp
out
in
mov
enter
ret
sub
sbb
les
loop
jbe
nop
adc
loop
pop
cwtl
ds
lods
xor
push
jmp
aaa
jp
leave
mov
mov
jl
xor
inc
sbb
xchg
in
jo
ja
dec
adc
test
fsubl
call
dec
dec
scas
fwait
ss
jno
lcall
add
dec
adc
lds
cmc
cmp
imul
sbb
lahf
incl
stc
lods
sarb
into
mov
rcrl
inc
adc
outsb
cmp
sub
lea
mov
rclb
mov
pop
mov
mov
adc
jecxz
daa
xchg
lcall
arpl
lods
call
pop
testb
add
inc
or
cmp
fimull
xor
fiadds
lds
sbbb
push
sahf
stos
js
call
test
ljmp
xor
lahf
into
int3
jo
inc
popa
xorl
mov
loop
mov
scas
jl
cmp
rolb
cmp
dec
mov
in
mov
and
fistpll
rcl
inc
aam
addr16
test
mov
es
xor
shl
idivb
xchg
mov
in
pushf
ja
cmc
mov
or
mov
cltd
add
mov
sbb
jl
mov
data16
xchg
xor
sahf
cmp
cld
xchg
inc
in
adc
inc
sbb
insl
aas
pop
fdivs
leave
arpl
fdivp
incb
cli
mov
data16
inc
push
in
jb
add
add
push
call
cmp
xor
dec
inc
mov
es
in
pop
pusha
testl
sbb
arpl
xlat
outsl
xor
popa
add
mov
mov
dec
push
fists
xchg
loopne
les
dec
inc
stos
insl
inc
das
cmp
mov
enter
int
jbe
adc
out
jmp
pop
pop
sbb
cmp
sbb
sub
sbb
mov
fidivrs
push
dec
adc
gs
mov
cmpsb
mov
mov
call
dec
loope
push
outsb
stc
imul
dec
mov
ffreep
and
in
adc
push
fildl
cld
xchg
andb
mov
adcb
movsb
jnp
mov
in
cltd
push
mov
clc
pop
fwait
add
dec
lock
cli
add
jg
or
out
dec
lahf
jecxz
mov
and
imul
push
adc
cs
inc
push
cmpsb
ret
jno
cmc
fidivl
in
lock
movsl
lret
push
jo
push
xchg
or
inc
xor
add
mov
lcall
stc
pop
jg
imul
pop
xchg
std
jg
mov
push
popa
jbe
xchg
fwait
scas
cmp
jno
ret
aam
mov
pop
dec
sbb
xchg
sub
shrb
sub
cmp
mov
xchg
cmp
jl
push
cwtl
push
sahf
pop
jae
adc
andl
pop
cs
push
iret
flds
ret
aam
lret
lods
fs
fildll
std
jo
outsb
mov
mov
dec
dec
cmp
scas
inc
loop
rdtsc
mov
inc
leave
mov
js
test
icebp
mov
fidivrs
adc
and
xlat
lock
and
mov
adc
stos
mov
jg
shl
mov
out
test
add
xorb
imull
jnp
ljmp
inc
fdiv
scas
cmp
dec
push
pusha
pop
dec
push
cmp
sub
inc
aas
cmp
jo
mov
inc
inc
cwtl
rcl
in
lcall
sahf
gs
jb
mov
rclb
mov
pop
mov
scas
fcoml
add
fnstsw
maxps
push
add
das
imul
inc
outsb
neg
repnz
or
cli
pushf
mov
pop
scas
jo
adc
cltd
mov
hlt
dec
aam
dec
stos
scas
ret
cmc
aas
jle
jmp
or
cmp
mov
loopne
sti
mov
sbb
or
outsb
cmp
sub
mov
ljmp
and
lods
mov
leave
xor
repz
bound
icebp
and
pop
sbb
rcl
or
negb
outsb
fxtract
xchg
test
mov
adc
loope
pop
add
jg
xor
or
jmp
inc
lcall
sbb
mov
mov
lahf
adc
dec
fs
push
push
lahf
add
push
into
ficompl
out
cltd
and
mov
inc
jmp
jp
adc
pushf
loopne
sub
movsb
rcrb
inc
mov
lret
xlat
add
enter
mov
mov
xchg
daa
mov
add
push
jecxz
xor
xchg
xor
out
mov
scas
adc
fcoms
or
in
sbb
dec
aas
mov
clc
push
cmc
cmp
pop
xor
iret
test
inc
push
pop
fisubrs
scas
or
sbb
mov
push
es
and
and
inc
adc
bound
push
stos
lahf
or
jns
in
mov
xor
sub
sub
imul
sahf
scas
aam
sahf
jne
stc
jbe
push
add
fdivrl
push
stos
sbb
cli
lods
shld
push
mov
mov
mov
clc
ret
test
xor
iret
orb
or
xor
loop
and
lds
fdivl
mov
xchg
xor
pop
in
pop
xlat
cmp
mov
dec
cmp
jmp
rcrb
xor
xlat
sub
sub
xor
inc
push
jmp
pop
cmp
adc
mov
adc
aad
mov
fidivrl
jge
lret
and
xchg
xchg
push
ljmp
divb
xor
inc
cmp
mov
nop
mov
fistpll
inc
mov
out
push
notb
sahf
sub
fcoml
and
inc
jb
pop
xor
ret
sub
add
jle
xchg
add
test
stos
adc
xor
push
rolb
fsubrs
cmp
adc
mov
adc
int
repnz
ljmp
xor
or
cmp
loope
mov
xchg
sarl
repnz
or
sbbb
leave
add
mov
push
push
in
pop
aas
jmp
xor
clc
cmp
push
mov
lret
movsl
inc
jmp
es
jbe
fistl
lods
mul
aad
xor
or
mov
bound
test
fisttpl
inc
in
mov
xchg
jnp
xchg
mov
pushf
sbb
fwait
jecxz
int3
ret
add
dec
mov
fbstp
xchg
push
adc
and
sahf
xor
int3
fucomip
std
adc
xchg
stc
dec
mov
rol
push
dec
loop
ja
adc
add
cmp
mov
or
inc
xlat
sti
ret
mov
dec
lcall
sub
jne
xlat
into
add
sub
out
pop
or
in
dec
rcrb
pop
xchg
ret
test
jmp
insl
mov
jo
fnsave
jmp
cmp
and
fmuls
js
lahf
js
shll
out
dec
xor
mov
cmp
mov
and
lahf
xchg
movsb
push
mov
ret
fcompl
movsl
leave
push
cmp
cmp
sbb
and
xchg
cmp
mov
push
lcall
addr16
add
cltd
gs
imulb
adc
mov
repz
and
hlt
scas
call
mov
xchg
scas
and
mov
inc
scas
movsb
aam
cmp
xchg
and
and
rolb
adc
dec
fldcw
push
dec
lahf
sbb
push
mov
in
push
mov
mov
push
or
mov
pop
hlt
mov
jb
mov
jnp
mov
cmp
clc
out
xchg
inc
pusha
das
arpl
roll
imul
cmc
cs
add
jbe
dec
addr16
or
jae
loopne
cmpsl
js
andb
pop
push
or
arpl
cmp
hlt
jg
sbbb
jl
jbe
xchg
mov
mov
fisubl
jae
push
repz
mov
xchg
adc
jo
imul
and
cmp
inc
fisubrs
sahf
push
fwait
cmpsl
xor
xor
ljmp
pop
fists
pop
lods
add
add
push
cmp
jae
movsb
and
xchg
dec
mov
rclb
xlat
aam
lds
fsts
mov
adc
call
enter
fcomip
jp
stos
and
fwait
js
mov
mov
lret
jmp
sbb
push
and
xor
dec
repz
movsb
jno
test
fs
push
xor
aam
mov
dec
bound
jno
dec
xorb
push
inc
push
lea
aaa
inc
jmp
jle
jmp
dec
shll
mov
jno
mov
mov
fwait
xchg
jge
inc
sbb
xchg
sbb
insb
fbld
dec
dec
mov
mulb
xlat
xchg
aam
lock
in
or
cmp
lea
les
pushf
cli
mov
or
fs
loope
arpl
and
arpl
sub
aaa
and
cmpsl
mov
ret
test
cmpsb
dec
add
jae
mov
pop
push
or
fisubrs
popa
cmc
dec
jns
in
xchg
pop
sbb
sub
dec
mov
jo
xor
in
jb
push
rclb
and
add
jb
fistl
xorb
sub
lahf
push
test
sti
xor
pop
loop
dec
mov
jns
incl
mov
arpl
int3
outsl
dec
mov
nop
adc
ret
xorb
data16
cltd
enter
lret
test
xchg
pusha
das
xchg
mov
jp
mov
jmp
xor
cmc
leave
or
gs
push
sarb
push
out
sbb
or
subb
xchg
add
mov
xchg
cmp
out
inc
push
cmpsl
ds
cmp
out
pusha
lds
ljmp
ds
enter
add
dec
ficomps
in
test
inc
sbb
mov
stos
shlb
pop
mov
mov
sarl
pop
add
imul
sbb
cmp
fs
jns
xchg
dec
jns
push
leave
sbb
fsubr
popf
dec
inc
out
dec
subl
and
mov
sbb
add
jns
jmp
and
mov
subb
jecxz
cld
jl
loop
sbb
movsl
lds
lret
ret
orb
push
and
pusha
add
mov
addr16
and
neg
int3
movsb
cmp
jmp
mov
and
jle
inc
nop
mov
add
dec
into
in
cmpsl
add
mov
push
out
popa
inc
xor
inc
add
clc
addr16
push
leave
dec
sbb
in
popf
pusha
push
int
lods
ja
sub
sbb
push
in
pop
jbe
popl
notl
fbld
int
and
pop
mov
movsl
ja
fsubr
jnp
and
mov
fldl
pushf
adc
mov
and
sbb
mov
loopne
pop
adc
mov
scas
dec
sub
dec
xchg
hlt
aam
add
dec
scas
push
push
xlat
sub
mov
orb
test
imul
pop
mov
cmpsb
inc
sbbb
in
or
fwait
cmc
mov
es
cmpsb
loope
pop
pop
jmp
pop
lock
bound
xor
sbb
inc
mov
cmp
cld
fcmovne
inc
fdivrp
jns
dec
and
fdivrl
lahf
jno
lret
adc
dec
daa
ljmp
push
icebp
push
insl
sti
or
dec
fxch
into
mov
int
mov
outsb
adc
test
dec
sti
adc
xor
rorb
add
inc
pusha
dec
pop
insl
ja
mov
in
pusha
mov
sbb
cli
add
jge
sbb
cwtl
loopne
lret
fistpll
sbbl
sahf
ds
enter
xor
mov
pop
pop
mov
or
pusha
push
dec
in
adc
add
push
adc
loopne
xchg
std
xchg
push
addr16
clc
cmpsb
cmp
pop
popf
les
push
ss
je
pop
addr16
and
frstor
aas
inc
jae
ds
add
popf
lcall
cmpsb
frstor
pop
sbb
shll
mov
addr16
lds
cmpsb
dec
cmp
pusha
stos
repnz
sub
sbb
sub
jp
hlt
rcr
push
lcall
cwtl
pop
mov
dec
xchg
add
nop
addr16
out
fwait
jbe
shr
rcr
jo
mov
jp
aaa
sub
mov
pop
inc
aam
xchg
mov
mul
insl
and
jge
sbb
sub
aaa
sbbb
cmp
push
subl
xchg
jae
mov
mov
ds
and
into
dec
out
add
adc
sub
adc
pusha
jmp
stos
daa
test
cli
jns
out
pop
dec
das
pop
cmp
cli
xchg
repnz
xchg
sarl
sbb
loope
sbb
mov
dec
mov
xor
iret
mov
inc
int3
cmp
jae
sbb
mov
iret
sbb
and
mov
movsl
in
add
push
andl
pop
loopne
mov
mov
adc
jle
mov
push
in
add
cmp
cmpsl
nop
pop
ja
dec
cmp
roll
test
add
nop
jae
bnd
inc
push
cs
test
inc
nop
stos
xchg
hlt
insl
xlat
jmp
je
mov
push
add
mov
mov
incb
pop
loop
dec
jne
frstor
dec
adc
fisubs
rcrl
fsubs
cmc
jg
cmpsb
pop
aaa
into
cmp
sub
jmp
jecxz,pn
add
pushf
cltd
or
inc
mov
push
push
sarb
mov
jo
mov
mov
repnz
ja
imul
jno
jmp
mov
push
test
int3
or
stos
leave
fbld
or
jmp
sbb
lcall
lcall
and
xchg
mov
mov
insb
test
xchg
mov
xchg
xlat
jno
icebp
mov
std
inc
gs
jb
mov
ds
std
outsl
insb
cmp
add
cmpsl
mov
dec
push
sub
add
or
inc
les
pop
push
mov
mov
mov
shll
sub
ret
lret
daa
jno
in
int
icebp
incb
add
adc
pop
mov
sub
loopne
xor
xchg
subl
xchg
ljmp
mov
cmp
mov
inc
cmpsb
sbb
mov
push
inc
aad
lock
jb
imul
popl
push
push
popf
push
loopne
and
sub
sbb
jp
leave
push
mov
dec
fmulp
mov
and
pop
sbb
inc
mov
lds
mull
mov
xchg
fs
xchg
mov
mov
mov
mov
dec
mov
cmp
xor
sub
xchg
fwait
and
add
cltd
push
push
push
fwait
xor
cmp
push
bound
in
dec
mov
mov
jp
scas
stos
mov
into
xorl
lods
inc
gs
jecxz
push
fdivr
out
xor
pusha
mov
iret
gs
aaa
inc
inc
sub
pop
inc
stos
push
aad
test
fs
mov
testl
sbb
les
or
xchg
jo
inc
shl
sbb
mov
int3
jg
mov
jnp
sbb
pop
jg
iret
mov
dec
loopne
lahf
push
xlat
mov
push
lods
lock
dec
test
jb
jnp
add
out
pop
xchg
mov
divl
sub
pop
or
jp
lods
pop
dec
pop
cli
inc
gs
jge
sahf
lds
leave
mov
pusha
xchg
repz
fldenv
mov
out
cmp
sub
lds
scas
cmp
pop
out
add
jle
or
or
push
mov
mov
pop
cmpsl
cmp
test
js
mov
mov
insl
scas
rcll
xchg
inc
adc
repnz
cmpsl
ret
mov
cmpsl
push
rcrl
dec
scas
jl
insl
mov
sahf
test
sbb
mov
das
sbbl
adc
fiaddl
aad
pop
mov
ret
loop
pop
test
jecxz
ret
jecxz
pop
fldenv
nop
jb
repz
int
aaa
nop
movsl
orb
mov
mov
adc
cld
xchg
adc
adc
daa
mov
inc
lcall
sbb
loop
pop
nop
dec
ds
int3
lea
mov
pop
mov
push
mov
loopne
jo
mov
fsubr
xor
decl
push
xchg
jl
lret
rclb
mov
stos
adc
add
sub
adc
div
or
enter
adc
inc
jne
cs
mov
push
testb
icebp
stos
jne
mov
fsubrs
mov
lods
into
mov
mov
scas
inc
and
or
ss
sub
psllq
jl
mov
jecxz
fwait
shl
mov
adc
cmc
sbb
stos
xchg
fdivl
jb
inc
mov
icebp
jle
movsb
inc
jle
xchg
test
enter
nop
out
data16
cmp
cmp
negb
lods
iret
jo
rcr
sbb
push
fisubl
hlt
out
inc
movsl
push
mov
push
mov
fistl
pop
call
sub
sahf
xor
nop
mov
ret
cli
dec
loop
lods
xlat
mov
dec
jne
cmp
xor
cmp
mov
push
inc
fbstp
pop
fwait
fs
mov
inc
xchg
jnp
popa
cs
xchg
xor
sbbb
cmp
gs
mov
sahf
sbb
mov
aam
xor
mov
shll
pushf
mov
int
mov
in
push
push
fadd
pop
xchg
mov
and
sbb
jecxz
ljmp
fcmovnu
and
scas
mov
mov
sbb
adc
push
and
inc
test
aaa
jno
pop
mov
mov
int
pusha
sbbb
sub
lret
mov
mov
sbb
shrl
fisubrs
mov
pop
repnz
les
ds
movsl
mov
stos
pop
jae
pop
jmp
popf
push
shll
mov
popf
inc
xor
cmpsl
xchg
data16
movsb
sarl
int3
dec
dec
pop
jl
aas
enter
addr16
dec
ds
mov
andl
les
jb
decl
push
cmp
stos
lods
std
dec
inc
dec
scas
mov
sarb
push
inc
in
pushf
xor
into
arpl
jnp
mov
xor
dec
es
mov
sbb
scas
xchg
ret
lret
mov
jmp
imul
mov
adc
and
lret
push
mov
jl
inc
stos
mov
sbb
and
jns
jno
movsb
scas
call
stc
xchg
imul
sti
adc
mov
pop
lods
inc
jbe
hlt
pop
daa
cwtl
int3
arpl
fsubrs
subl
ja
cwtl
xorl
pop
and
xor
outsb
test
fwait
add
push
fdivs
push
jmp
jns
repz
cltd
xchg
pusha
test
xchg
xor
push
push
daa
mov
pop
scas
addb
mov
daa
cwtl
jne
cli
xchg
sbb
call
lods
mov
dec
inc
dec
test
sbb
stc
daa
mov
dec
sbb
or
repz
sahf
add
xchg
loopne
mov
push
sarb
js
aaa
pop
pop
rcll
movsb
cmpsb
pop
loopne
adc
add
repnz
xchg
mov
repnz
jl
pop
dec
loopne
dec
les
lock
push
jmp
mov
scas
ss
imul
movsl
loopne
addl
scas
xchg
mov
out
repz
lock
dec
bound
pop
icebp
orl
pushf
sbb
int
loope
jp
xchg
jnp
movl
adc
shrb
notl
rorl
stc
mov
cwtl
in
push
lret
rcl
jmp
cmp
adc
push
push
scas
movsb
cmp
fs
int3
inc
add
cmp
ret
sbb
scas
mov
test
into
movb
fcmovnb
inc
mov
stos
inc
fcmovu
dec
in
cwtl
cli
push
fdivrs
mov
mov
xchg
in
dec
pop
dec
dec
sbb
clc
outsb
imul
sub
iret
xorb
sbb
ds
sub
pop
jl
or
dec
jb
stos
into
int3
ja
adc
xchg
data16
adc
and
mov
enter
mov
mov
mov
out
jnp
pop
and
pop
cmp
push
and
out
test
mov
stos
cmpl
mov
sub
push
adc
es
adc
in
jl
xor
dec
add
or
outsb
bound
lahf
outsl
or
mov
inc
pusha
lcall
nop
push
jl
cmp
or
inc
lea
call
add
sahf
sbb
icebp
out
cld
pop
pop
xchg
or
ret
jle
movsb
ret
imul
and
gs
cli
jmp
mov
pop
cmc
mov
adc
ss
sti
push
push
lea
adc
mov
xor
aas
jle
ffreep
cs
push
mov
das
push
test
inc
push
scas
movsl
movsb
adc
imul
push
mov
dec
in
mov
ret
fbstp
push
jns
mov
mov
pop
adc
sub
pop
cmp
mov
inc
pslld
shlb
ja
outsb
leave
insl
mov
mov
push
sub
pusha
sar
lret
jp
repnz
sub
jbe
out
jns
adc
jp
sbb
cmpsb
insb
cmp
inc
out
in
stos
sarl
ret
jg
xorb
ds
xor
inc
pop
jmp
mov
stc
sbb
fsubr
push
lea
mov
cli
xchg
mov
mov
mov
int3
xchg
add
dec
cmc
cmp
fsubs
and
rcr
mov
addr16
data16
sahf
cmc
test
aam
int3
or
jo
ljmp
dec
jg
jnp
and
adc
dec
dec
lcall
mov
push
mov
push
push
sbb
ret
das
xchg
mov
stc
aad
pusha
push
pop
sti
shl
ret
jp
es
dec
scas
mov
dec
inc
inc
fildl
sbb
xor
bound
dec
mov
jno
aad
int3
inc
cmc
mov
cmpsl
int3
into
pop
mov
rcr
and
lret
lret
cltd
lret
mov
addr16
jae
dec
lods
loop
mov
cmp
mov
fsubl
sbb
das
xchg
pop
mov
or
lret
jmp
mov
jne
roll
adc
repnz
mov
push
mov
cwtl
adc
sahf
ss
cmp
xlat
pop
sbb
jge
out
add
inc
mov
cld
nop
xchg
lcall
cmp
adcb
mov
out
sub
xor
sbb
repz
pop
xor
sub
imul
data16
gs
mov
repnz
or
mov
aam
mov
dec
mov
adc
cmp
test
and
ss
dec
sbb
mov
loop
je
inc
add
in
fcoms
sub
pop
repz
cmp
aam
mov
mov
push
pusha
es
sbb
mov
movsl
hlt
and
test
mulb
or
in
mov
mov
mov
inc
push
inc
xor
or
mov
push
cs
cmp
sub
filds
dec
std
jb
stos
and
adc
mov
jge
pusha
fs
stc
xchg
sbb
or
pop
mov
cmpsb
jmp
dec
in
jle
rcr
mov
or
in
cmp
shll
fnstcw
imul
mov
jo
inc
aam
and
xor
cmpsb
out
sti
mov
cs
pop
orl
into
jge
inc
sub
cmp
loope
in
test
ja
inc
scas
pop
dec
mov
mov
movsl
imul
test
add
jmp
out
cmpl
xchg
cmp
ds
jecxz
xor
jmp
aam
jp
mov
mov
sub
xor
dec
negb
adc
inc
fidivl
and
pop
push
stc
aaa
lret
and
outsl
movsb
dec
ja
xchg
stc
pop
cmp
imul
scas
mov
popa
adcb
and
inc
adc
and
jno
jnp
divl
jns
jo
push
dec
cs
cli
jno
adc
popl
and
push
imul
xchg
mov
cmp
and
shrl
enter
pop
cmpsl
rol
push
jle
pop
insb
notl
lods
mov
xchg
and
adc
mov
mov
scas
dec
push
movsl
icebp
sbb
or
or
add
or
adc
sub
fiadds
jnp
rorb
enter
jno
mov
rcrl
push
xor
adc
xchg
cmc
repz
pop
clc
xorl
or
iret
sub
fstps
pusha
orl
sarb
lea
test
jmp
cmpsl
cmp
scas
fnstcw
into
sbb
mov
loop
push
push
xchg
sub
outsb
cmp
cmp
popa
mov
cli
xchg
mov
add
subb
push
push
push
and
sub
jns
dec
and
scas
cli
or
mov
insb
repz
lret
out
sbb
mov
mov
cwtl
imul
lcall
clc
sbb
fs
fistps
lret
jne
mov
imul
outsl
bound
ss
cmp
mov
sbb
mov
add
push
fistpll
and
faddl
mov
push
dec
mov
jb
xor
sti
imul
popf
and
add
out
add
out
les
xor
call
or
jns
jle
inc
fnstsw
mov
xor
push
mov
mov
arpl
sbb
mov
xchg
xor
das
xor
inc
cs
mov
or
hlt
idivb
pop
sbb
inc
mov
mov
sub
cmpsl
jbe
mov
mov
push
xlat
rorb
shl
jns
cmp
sahf
cmp
mov
pop
xchg
xchg
xchg
or
sarl
sbb
out
jecxz
in
mov
dec
fstpl
add
es
xlat
adc
mov
inc
insb
cs
in
pop
pushl
xchg
fisubs
dec
cwtl
xchg
push
mov
pop
in
cmc
addr16
cs
ljmp
inc
mov
and
fst
cld
xchg
outsb
jg
push
jg
imul
cmp
pop
ljmp
pushf
sbbb
icebp
push
repnz
js
out
jle
adc
pop
xchg
in
mov
arpl
into
ljmp
jno
pop
dec
loopne
andl
aad
xor
and
xor
dec
inc
jl
jmp
jmp
popf
xor
int3
add
jl
scas
pop
cmp
sub
lds
and
enter
ja
fucomip
inc
mov
inc
in
or
push
jge
pop
mov
cmp
sbb
jl
sbb
mov
das
icebp
enter
xor
jo
xor
mov
dec
cmp
je
and
push
adc
adc
sbb
mov
mov
js
adc
add
call
mov
fistps
adc
iret
push
push
mov
or
and
dec
pop
cmpl
test
add
sub
xor
hlt
xchg
mov
lea
or
sbb
dec
dec
popa
inc
inc
shll
decb
mov
insb
inc
popa
fnstcw
in
lods
ja
and
mov
adcb
nop
fildll
inc
push
pcmpeqb
adc
dec
push
fsubr
jmp
mov
hlt
xchg
adc
and
loop
call
mov
and
lret
insl
add
mov
jecxz
jbe
std
sub
jbe
and
pop
test
push
notb
add
nop
push
out
lret
jb
jne
xchg
and
clc
pop
std
or
dec
mov
jecxz
fwait
pop
sub
or
stc
pop
es
cmp
add
out
mov
mov
push
fcmovne
mov
movsl
dec
in
shll
popa
jecxz
push
push
jae
jge
das
xchg
leave
clc
cmp
aad
pop
jns
inc
gs
sahf
push
rcl
xchg
lahf
testb
xchg
mov
or
pop
dec
popf
mov
aad
in
nop
add
outsl
jl
int
xor
push
bound
fcompl
cmc
hlt
add
xchg
adc
push
leave
mov
push
jge
mov
rorb
mov
stos
popa
or
add
jl
in
inc
cmp
data16
sbb
adc
jno
mov
lock
fcmovnbe
js
xchg
cs
fsts
ljmp
pusha
pop
lds
stc
in
or
adc
loopne
loope
jo
fidivrs
ret
insl
adc
add
sub
out
fdivs
aas
fwait
inc
adc
cli
add
int
leave
insl
jb
pop
mov
sbb
or
cmp
stos
lods
add
pop
pop
sarl
push
rolb
jge
arpl
mov
aaa
or
dec
movsb
xchg
mov
test
mov
jecxz
cmp
pop
shrb
nop
jle
lret
or
add
xchg
sub
or
cmp
pop
push
mov
jle
movsb
push
andb
jns
sahf
lock
push
mov
les
xor
and
out
andb
jb
loopne
sub
or
daa
pushf
sub
ljmp
ljmp
sar
mov
shrl
addb
mov
icebp
mov
pop
dec
adc
rcrb
jl
mov
or
lahf
or
sub
and
int3
loope
out
js
pop
jb
test
hlt
mov
mov
mov
aad
leave
push
lcall
aam
and
add
or
shr
add
jmp
dec
dec
adc
pushw
fistl
mov
mov
pop
mov
mov
popf
adc
insb
aaa
and
mov
mov
or
lahf
adc
rorb
xchg
mov
aaa
push
es
or
push
adc
int
loop
jge
call
jmp
test
pop
add
addr16
fadd
dec
mov
aas
cmp
inc
mov
cmp
mov
loop
mov
cmc
aad
rorb
outsl
jnp
push
xor
fisubrl
xchg
lahf
out
int3
arpl
cmp
pop
loop
pop
es
pop
pop
adc
testl
dec
mov
jg
test
fwait
mov
ficomps
mov
jle
adc
jbe
jne
cmp
adc
mov
mov
cmpsb
pop
ret
pop
call
maxps
cmp
inc
pop
pop
fsubrs
mov
es
iret
and
iret
and
jno
push
sbb
mov
into
inc
push
jl
push
jl
or
cmpsl
push
repz
cltd
pushf
add
sub
jp
or
repz
in
jp
adc
mov
cmpps
push
jne
mov
xor
mov
repz
jecxz
pushf
adc
add
cmpsb
push
aam
shrl
and
and
dec
add
cmpsl
int3
in
or
lods
mov
push
cltd
outsb
jnp
push
pop
ljmp
push
add
xchg
or
fcmovbe
mov
test
xorb
dec
push
out
loopne
xor
mov
fcmovb
dec
dec
out
xlat
cmp
xchg
into
pusha
lods
mov
jp
popa
int
jb
push
mov
mov
mov
mulps
inc
scas
pop
lret
push
mov
jbe
sbb
or
cmc
mov
cmp
ret
add
stc
enter
cli
movsb
adc
sbb
bound
ja
and
adc
sub
and
sbb
cmpsb
popa
into
es
inc
xchg
test
hlt
cmp
adc
in
test
xchg
fldl
push
mull
inc
outsb
mov
clc
push
jae
mov
pop
dec
in
lods
sbb
test
insb
cltd
mov
cltd
mov
lahf
sub
adc
and
add
mov
fwait
inc
sahf
inc
xchg
mov
push
ljmp
cmc
cmp
adc
ljmp
xor
int
or
mov
add
xor
add
sahf
imul
adc
cmc
xor
add
and
cmp
pop
or
sarb
out
pop
call
aad
outsb
addr16
bnd
stos
or
outsb
mov
jne
lock
xrelease
cld
jnp
mov
out
adc
push
repnz
aas
pop
arpl
inc
xlat
out
test
loopne
mov
stos
or
xchg
inc
pop
sbb
adc
push
pop
mov
adc
jno
icebp
push
mov
lcall
les
pop
or
and
dec
xchg
fisttps
lock
xchg
loope
mov
add
mov
or
std
mov
cmc
into
pop
fldenv
mov
lock
mov
or
inc
lahf
lahf
stc
addr16
jle
jb
shl
inc
inc
pop
mov
lcall
mov
aam
xchg
mov
addr16
jbe
cwtl
test
sub
sub
pop
outsl
notb
test
jnp
sbbb
cmp
icebp
fisubrl
or
sbb
adc
pushf
add
testb
clc
push
lods
ljmp
out
arpl
xchg
add
pop
push
test
insl
pop
divl
jns
sbb
shll
in
negb
insl
scas
mov
cmc
sub
xor
mov
aaa
push
mov
sar
cwtl
lds
out
and
cli
xchg
push
clc
push
cmp
loop
mov
pop
inc
stos
sub
leave
pop
outsl
push
out
adc
cmp
and
les
sub
aam
clc
cmc
jg
pop
cltd
ljmp
and
sub
cmc
pop
in
dec
push
dec
rclb
add
fsubrp
push
cltd
out
cld
cli
getsec
data16
mov
ds
sbb
sbb
cltd
sub
hlt
adc
test
rolb
adc
les
pop
xchg
lret
push
nop
out
xchg
stos
dec
and
xchg
or
push
stos
out
jmp
or
fwait
sti
int3
sub
icebp
push
jne
pop
push
js
or
ret
sub
jl
imul
call
lods
test
lcall
inc
std
js,pn
jl
cld
inc
mov
xor
enter
int3
movsl
test
push
inc
jns
out
cli
xchg
fsubrl
cltd
sbb
sahf
je
dec
dec
out
shlb
pop
popa
clc
xchg
in
andb
cmp
adc
sbb
shl
repz
loop
pop
cltd
mov
loopne
xor
dec
fcompl
mov
inc
fisubrl
and
mov
sub
xorb
mov
xchg
cli
push
call
repnz
icebp
jg
mov
xchg
cmp
in
out
and
sbb
xchg
pusha
adc
inc
popf
jmp
data16
imul
lock
push
cmpb
sub
sbb
jnp
popa
sti
mov
jo
sub
movsb
cltd
flds
cmc
pop
rcrb
std
push
mov
pop
ds
fdivrs
enter
loop
inc
mov
int
inc
or
sub
dec
insl
sub
lahf
aam
out
cmpsb
shl
testl
pop
repnz
int3
shll
repnz
out
mov
cmp
lea
ss
jns
xor
fidivl
mov
mov
adc
mov
jle
jno
js
shll
mov
push
mov
pop
inc
into
cli
mov
push
xchg
mov
adc
pushf
xchg
and
mov
test
inc
cmp
jg
fnstcw
sbb
mov
fadd
rcrl
jp
fists
addl
mov
mov
pop
ret
inc
test
xchg
hlt
sahf
and
dec
test
pop
mov
or
push
pop
orl
pushf
std
mov
fsub
xor
negl
xchg
push
xchg
xchg
push
lods
pop
pop
xchg
sub
je
and
ds
popf
cli
mov
dec
inc
pop
jge
std
mov
xchg
and
test
aas
xor
jl
push
pop
sub
int3
fiadds
jl
or
mov
mov
out
fsubp
push
imul
in
pop
ret
push
cmp
int3
dec
push
loopne
mov
mov
xchg
sub
ret
repz
in
scas
std
lahf
dec
ljmp
outsl
mov
ffree
loop
ljmp
mov
pushf
xor
sub
mov
scas
dec
pop
ret
pusha
test
mov
mov
sbb
lods
push
ret
adc
inc
xchg
cmpsb
fwait
gs
fldt
sub
xchg
mov
lods
dec
mov
cmp
cltd
int
test
inc
or
repz
jge
cmp
inc
mov
mov
sbb
shlb
push
leave
call
mov
sub
sbb
push
xor
out
test
cmpsb
and
mov
jge
mov
push
imul
lds
xor
das
cmp
ds
dec
jb
push
movsl
add
fnstenv
inc
insl
jo
sub
pop
aam
lahf
mov
adcb
sub
ja
push
and
pcmpgtb
and
mov
sarb
arpl
jbe
subl
sub
add
lock
inc
and
ja
cmp
sub
loope
mov
and
cmp
mov
jl
add
stos
jns
aad
nop
mov
les
pop
hlt
inc
enter
cmp
int3
xchg
and
lods
jg
and
dec
rorb
xchg
mov
test
lret
push
adc
pop
mov
int
push
in
push
push
jecxz
cmp
in
push
sub
shll
popa
jns
mov
repnz
daa
shlb
jbe
mov
mov
loope
mov
inc
ljmp
jne
shl
mov
sbb
stc
mov
ljmp
sbb
push
mov
pop
in
fsubrl
test
lret
mov
daa
les
xchg
sub
in
xor
lods
dec
mov
lds
into
sti
ja
inc
push
insl
lock
daa
pop
sub
xorl
inc
mov
mov
pop
mov
pop
pop
mov
pop
dec
shrb
fists
je
lods
dec
popa
test
pop
adc
add
mov
mov
push
fcmovb
pop
in
sarb
pop
xchg
mov
dec
hlt
nop
hlt
out
dec
in
or
call
std
shl
push
pusha
int3
mov
ljmp
pushf
mov
xchg
sbb
sahf
mov
inc
leave
jnp
jl
push
int3
mov
loopne
rcrl
push
test
add
inc
loopne
adc
jb
push
shll
orb
xor
rcll
inc
pop
enter
fsubrl
push
cmpl
cmp
shll
mov
addl
cwtl
pop
call
jmp
mov
test
insl
add
xchg
fnstcw
mov
jmp
or
xor
cld
lock
pop
and
lods
push
test
test
aas
adc
sbb
jns
fildl
mov
adc
stos
shr
inc
mov
addr16
jge
add
cltd
hlt
adc
jg
sub
sbbl
clc
jae
cmp
mov
dec
adc
movsl
mov
fisubrs
jns
xchg
or
cs
adc
jne
inc
mov
mov
imul
lods
in
fldt
xchg
cs
and
pop
repnz
xchg
add
test
jbe
mov
or
rclb
pop
jmp
and
xchg
lods
jmp
mov
movb
cmp
or
sbb
jno
cmp
cld
stos
pop
push
aam
loop
lret
mov
pop
xor
jecxz
dec
and
fwait
cmp
cltd
pop
fwait
arpl
icebp
and
fwait
sti
inc
xchg
ror
mov
xchg
mov
cs
adc
insb
jle
pop
xor
and
rcl
daa
mov
cmpsb
xor
scas
pop
adc
add
jecxz
xor
loop
xor
fidivl
pusha
pushf
sub
je
cmpsb
sub
push
mov
push
scas
inc
dec
jne
out
jmp
push
sub
and
jecxz
and
mov
jmp
sbb
sahf
gs
divl
ret
hlt
outsl
andb
enter
leave
loope
popf
pusha
lds
xchg
sbb
jge
xchg
loope
add
mov
stc
lock
shlb
and
rolb
jbe
jb
pop
fcoms
mov
jle
jg
data16
stos
jns
sbb
pop
mov
push
jg
sarl
xor
fbld
push
mov
in
nop
clc
pop
jle
jmp
jle
ljmp
or
pop
sahf
cmc
mov
rcrb
lahf
aad
sbb
aad
sbb
test
into
cmp
xor
mov
xchg
shll
outsl
repnz
in
adc
xchg
xor
popf
fiadds
in
imul
mov
aad
cltd
and
mov
pop
repz
adc
orl
xchg
or
arpl
mov
inc
sbb
xorb
mov
push
es
pop
sbb
xchg
xchg
mov
mov
inc
jl
jne
stos
inc
nop
rolb
sbb
mov
pop
out
mov
jge
xor
test
jmp
or
stos
adc
sahf
jp
xor
inc
nop
ret
aaa
lret
mov
sub
cmp
lods
ret
add
rorl
ja
jbe
in
movsb
mov
je
sub
mov
xchg
inc
and
xor
mov
ds
movsl
lcall
mov
push
shl
mov
push
mov
inc
js
sbb
test
xlat
fldenv
and
jle
dec
mov
cmpsl
ds
aad
sbb
mov
xchg
dec
sbb
mov
dec
and
fst
mov
add
xor
xchg
rcrb
sbb
popa
or
xchg
mov
pop
or
arpl
mov
scas
jne
loop
cmp
cmpsb
mov
jb
sbbb
add
fimull
in
jmp
dec
add
rorl
add
cwtl
xchg
pop
out
adc
jbe
inc
clc
xchg
add
jecxz
mov
sbb
lret
addr16
pop
sbb
mov
lret
mov
xchg
loop
mov
out
push
mov
and
mov
or
in
mov
neg
xor
or
into
insl
jl
and
loop
in
xchg
bound
es
or
aas
push
adc
or
jg
sub
dec
fildll
int3
mov
or
or
adc
pop
fdecstp
jg
daa
mov
pop
xor
pop
insl
or
jge
xchg
fcomip
adc
pop
testb
mov
jge
lahf
repnz
jae
jge
sub
aam
mov
pop
lret
or
std
jnp
xlat
mov
insl
neg
jl
or
mov
scas
stos
mov
lock
pushf
cmp
inc
sub
shlb
aaa
js
push
ss
adc
leave
jb
xchg
popaw
pop
imul
inc
push
push
psllq
dec
pop
sarb
les
mov
leave
outsl
pop
or
jbe
fwait
xor
xchg
in
xchg
jno
inc
push
pop
xchg
pop
and
subb
jb
fisubs
sbb
sub
lret
rcr
xchg
gs
mov
orl
fiadds
out
xchg
hlt
std
imul
rcrb
pop
xor
sarl
mov
dec
negb
mov
es
jmp
push
adc
out
fmuls
xchg
stc
xchg
mov
std
sub
mov
je
adc
loop
dec
jmp
mov
nop
jge
inc
out
and
or
std
cmp
lahf
push
in
shrb
shl
jae
xchg
repnz
movsb
and
xor
in
loop
or
je
inc
pop
mov
xchg
icebp
pushf
pop
mov
roll
enter
mov
and
adc
pop
xor
cmp
and
push
inc
add
jl
pop
adc
mov
mov
pop
sub
push
sarb
push
shll
movsb
idivl
test
loopne
call
hlt
movsb
je
call
xchg
ss
mov
cmp
mov
cmpb
adc
cmovae
push
push
loop
xchg
push
mov
mov
mov
xchg
jb
in
int
sbb
lret
jns
shlb
or
inc
mov
push
call
mov
add
into
xor
xchg
sbb
push
out
cmp
dec
push
repz
shrl
add
insb
aas
test
iret
sub
fbstp
pop
fbstp
notl
or
leave
add
jge
mov
lahf
jecxz
repz
call
hlt
or
add
faddl
outsb
loope
iret
popf
sub
jle
mov
pop
pop
inc
dec
je
cld
xor
mov
push
pop
lahf
add
les
jge
push
mov
cwtl
aas
jbe
mov
lret
sbb
bound
jno
jp
bound
xlat
sbb
leave
jg
sub
lds
add
jne
dec
cmp
push
jecxz
lret
jle
jnp
sbb
xor
ret
pusha
cwtl
mov
loope
stos
rcrb
adc
ss
fsubs
notb
push
inc
sbb
mov
jmp
mov
jae
sbb
dec
iret
or
or
sub
aam
lret
lret
clc
dec
adc
jb
cmp
add
sub
pusha
ja
popf
lods
je
inc
bound
push
negl
fldenv
std
andb
popf
aaa
rolb
pop
ficoml
into
les
mulb
daa
sub
add
mull
cli
and
loopne
fwait
jbe
lret
test
int
adc
jp
aaa
test
addr16
sbbb
push
inc
repz
inc
push
loopne
add
mov
ds
sub
inc
xchg
adc
push
in
mov
dec
shrb
jg
mov
ficompl
test
inc
testb
adc
pop
xchg
push
dec
in
mov
scas
and
gs
repz
xor
adc
clc
bound
sub
jmp
sub
mov
add
test
sbb
adc
push
add
jp
fwait
adc
notb
sbb
loopne,pn
add
js
imul
bnd
lock
mov
cmpsb
inc
repnz
and
aas
ret
pop
push
div
jmp
or
mov
adc
adcb
popl
clc
sarl
adc
inc
btc
or
outsl
adc
int3
push
nop
push
repz
sub
in
dec
outsb
cwtl
mov
inc
pop
mov
push
in
dec
adc
ja
repz
or
xchg
int3
stc
movsl
sub
dec
cmpsl
fucom
pop
in
pop
mov
je
test
push
pop
loop
imul
mov
adcl
rcrl
aaa
dec
icebp
stos
test
lret
popf
sub
mov
scas
push
nop
fcmovnb
imul
imul
xchg
mov
fiadds
xor
xchg
stos
rorb
out
and
shlb
loope
dec
add
inc
ret
pushf
xor
mov
mov
stos
and
mov
mov
adc
pusha
out
push
jns
add
inc
or
dec
push
adc
push
insb
mov
adc
in
bound
dec
mov
pop
scas
shr
addl
or
and
fs
pop
popf
jbe
cmpsb
pop
repz
rcl
out
adc
mov
dec
pop
inc
jmp
pop
scas
push
sbb
pop
push
xor
xor
out
ss
cmpsl
dec
and
and
popf
test
mov
mov
inc
push
out
and
out
adc
sahf
inc
add
ret
or
insb
mov
add
sub
in
sub
jns
or
es
lcall
rcll
leave
push
mov
popf
in
cld
sub
lock
dec
ja
inc
loop
into
fucomip
push
jae
mov
mov
aad
push
xchg
pusha
js
sbb
das
cmc
cltd
mov
shll
mov
leave
rcl
jnp
dec
push
addr16
pop
push
iret
out
add
lods
cmp
addr16
inc
adc
adc
mov
icebp
mov
dec
push
xlat
inc
pop
inc
call
sbb
mov
ficoms
fsubs
decl
lods
xchg
and
ss
or
stos
outsb
sub
nop
mov
push
in
and
fnstcw
jp
cmp
js
xchg
sub
pop
sbb
in
mov
les
insl
cmp
fbstp
sbb
fists
mov
dec
repnz
scas
inc
or
push
mov
jns
int
or
cmp
cmpsl
xor
lods
inc
subl
push
repnz
xchg
fstps
xchg
mov
cmpsb
pusha
add
int
pop
or
fstpt
imul
sahf
jmp
and
scas
cmp
inc
sahf
sbb
push
iret
cmp
adc
popl
push
jno
jmp
mov
pop
sahf
nop
inc
mov
pop
cmp
pop
out
cmp
push
dec
xlat
jl
hlt
rorb
mov
sub
gs
mov
fists
mov
jno
stc
sub
push
mov
add
pushf
ret
outsb
mov
lods
mov
outsb
or
or
mov
je
add
add
pushf
add
test
es
push
mov
cmp
xchg
mov
fbstp
loopne
pop
push
test
cmp
xchg
testl
push
jne
dec
pop
subl
push
mov
mov
mov
into
xchg
add
and
mov
sbb
sbb
test
xchg
dec
adcb
int
inc
jns
xchg
jmp
stos
mov
push
mov
jae
jp
push
fwait
aas
dec
lret
pop
movsb
nop
jmp
or
test
les
xor
sbb
femms
push
cmpsb
cmp
mov
inc
out
out
xchg
ja
nop
into
add
pop
cmp
jle
adc
cmp
mov
rol
sub
sub
inc
pusha
mov
enter
jmp
fsub
jecxz
fcmovnbe
or
cmovnp
subb
cmp
jbe
scas
pushf
add
mov
fnsave
out
sub
sub
fldt
stc
out
jecxz
dec
jecxz
fisubl
aas
push
mov
mov
lcall
push
lcall
out
andb
mov
sbb
or
stc
cmp
aaa
push
popl
cli
push
in
sub
pop
out
cmpsb
in
dec
fwait
jae
stc
sub
insl
lret
sub
inc
shl
sub
nop
xlat
sbbl
sahf
in
add
mov
imul
jns
sub
clc
sub
ret
fnstenv
pushf
mov
pop
or
ja
and
roll
pop
adc
inc
test
lods
xor
sahf
adc
or
cmp
sub
jmp
jb
hlt
adc
fucom
sbb
pop
xor
mov
jns
jns
xchg
and
sbb
pop
xor
pop
mov
out
jp
lahf
fistps
adc
add
movb
aam
lahf
jp
jl
stos
jecxz
mov
in
add
enter
and
scas
and
rcrb
sub
inc
pusha
push
mov
mov
dec
scas
pop
lods
inc
cmp
pop
mov
adc
data16
adcb
sbb
fildl
push
in
push
jno
fcoms
jae
sbb
xor
xchg
jb
jge
mov
lds
subb
lcall
pop
push
push
inc
cmp
mov
xchg
inc
jne
jge
movsl
cwtl
arpl
sahf
or
cmpsl
mov
mov
lcall
inc
or
les
pop
sahf
pop
jae
lret
popf
cmpsl
cmpsl
push
inc
lods
movsb
push
mov
test
test
inc
pop
je
inc
pusha
sbb
scas
pushl
mov
xchg
adc
std
and
js
xchg
and
andl
jmp
outsl
or
jp
inc
in
fistpl
mov
push
sub
xor
les
dec
inc
stos
jl
dec
push
out
dec
test
in
es
aas
and
gs
cld
mov
jp
icebp
pop
cmp
cwtl
loop
or
cmp
cmpsl
popf
shl
mov
cmpsl
repnz
pop
sbb
pop
mov
jp
sbb
push
mov
cmp
mov
push
aas
test
cmp
pop
mov
hlt
and
call
and
enter
movsl
stos
cwtl
cmpsl
sub
jmp
adcb
and
sti
or
inc
jmp
scas
inc
nop
or
fisubl
dec
popa
cmp
mov
pop
cmpsb
fdiv
cmpsb
mov
sbb
cli
cmp
pop
pop
scas
out
and
into
or
out
cli
fsubr
or
sbb
pushf
sub
mov
cmc
mov
mov
mov
in
xchg
xchg
mov
add
outsl
push
pop
push
leave
pusha
or
nop
cmovo
mov
sub
push
jne
sbb
adc
std
mov
andb
xchg
or
scas
adc
das
adc
scas
inc
sarl
clc
inc
jo
push
inc
sbb
push
out
cwtl
push
inc
fcoml
mov
fdivl
ficoms
adc
stos
stc
dec
movsb
and
inc
out
imul
jne
je
ret
pop
mov
daa
fadd
bound
adc
sbb
or
push
es
xor
jmp
imul
mov
shlb
inc
push
aad
adc
rclb
scas
mov
jns
mov
cmp
sbbl
decl
repnz
andb
ret
push
mov
dec
dec
inc
lret
rcrl
lcall
xlat
shrl
jg
cmp
mov
or
movsl
and
or
jno
shrb
push
mov
leave
push
xor
sbb
and
lahf
mov
inc
dec
leave
xchg
mov
push
nop
mov
js
aad
add
lock
bound
into
in
pop
ret
lret
loop
shr
jnp
cmp
push
test
sbb
scas
insl
stc
fsts
inc
stos
pop
lcall
mov
outsb
pop
stos
mov
inc
lods
add
xor
lock
sub
add
scas
arpl
push
inc
lods
popa
lea
xlat
lods
pop
dec
sub
jo
jge
cmp
inc
es
test
cmp
repnz
xchg
mov
pop
outsb
fcomps
rcl
in
mov
inc
idivb
lods
pop
int
add
repz
lods
fistl
cmp
ss
lahf
mov
xchg
jns
loopne
stc
fidivs
popf
dec
call
dec
pop
jne
xchg
mov
xchg
test
addr16
fbstp
fsubrl
adc
addb
imul
lock
ds
fsubr
ret
pop
pusha
js
or
cmp
sbb
shrb
adc
ds
xor
sub
add
lahf
mov
aas
jmp
popf
jge
push
stos
adc
addb
add
sbbl
sahf
sub
test
and
dec
mov
shrl
jmp
lea
cmovae
out
test
pop
push
and
rorl
loop
fmull
scas
mov
out
outsl
xchg
mov
in
jl
xor
gs
xor
in
xor
pusha
pushf
add
bound
fwait
mov
cli
enter
clc
ret
xor
xor
fucomp
sarl
xchg
mov
icebp
sbb
add
out
fsubl
mov
inc
negl
adc
incl
repnz
mov
mov
aad
inc
sti
pop
jge
ret
outsb
rorl
insb
add
push
xchg
add
mov
adc
pusha
jns
jecxz
lea
mov
push
rcr
repnz
hlt
xchg
das
mov
inc
fsubrl
dec
movsb
and
cmp
inc
pop
fs
xor
int3
mov
movsb
xor
jecxz
into
or
hlt
and
add
leave
jmp
sbb
in
cmpsb
jns
fmuls
xchg
lods
mov
add
pop
fwait
pop
ja
jl
pop
sahf
pop
jmp
inc
xchg
jl
mov
fsubr
mov
mov
jmp
pop
rcll
xchg
mov
popa
mov
mov
andb
sahf
out
loopne
into
and
ljmp
sub
sbb
mov
cmp
outsb
jp
pusha
mov
fldenv
in
enter
and
cmp
pop
cmpsb
adc
or
lock
sub
ds
sbb
jbe
pop
dec
aas
sbbl
xor
out
adc
push
dec
js
lods
andl
inc
xor
add
dec
in
dec
mov
jg
daa
pop
subl
xchg
das
fdivs
or
into
stos
jnp
stos
je
adc
lds
inc
dec
outsl
ret
dec
loope
lret
lods
lret
sub
mov
mov
cld
push
das
mov
test
sbb
lret
out
cmp
xchg
dec
pushf
fstpl
out
inc
cmp
cli
xchg
sarl
fistpll
sbb
dec
cmp
fcomip
enter
mull
mov
add
inc
push
loop
cmpsb
cs
xor
loope
fstl
xor
int
pop
lock
ja
push
aaa
int
ja
icebp
cmpsb
inc
push
inc
inc
pop
inc
mov
outsl
mov
mov
sbb
bound
push
jp
and
push
fcompl
arpl
mov
add
mov
les
ret
mov
dec
out
and
jb
movsb
insl
push
jbe
adc
mov
jns
lahf
pop
icebp
movsl
inc
fdiv
cmpsb
add
sbb
imul
icebp
movsb
dec
xlat
xchg
das
cs
jecxz
push
pop
popa
xor
pop
push
scas
in
je
sub
inc
hlt
pop
pusha
in
fwait
adc
ficoms
fcoml
out
nopl
jo
or
cli
out
jp
lret
iret
cmp
in
xchg
sub
dec
lods
push
pop
fistpll
int
mov
bound
dec
insb
or
scas
movsl
xchg
jbe
sub
aad
mov
cmc
sti
enter
insb
jle
cmc
and
xor
ljmp
lea
add
mov
cmpsl
enter
pop
xlat
fdivl
jecxz
add
gs
and
lret
inc
stos
or
cmp
cltd
scas
sub
sahf
jmp
jge
fisubs
xchg
lcall
aam
rorb
cli
sbb
mov
pop
xchg
xchg
out
xor
into
sub
fidivrs
mov
or
add
cmp
scas
sub
inc
dec
loope
in
push
inc
pop
enter
in
sub
mov
xchg
scas
pop
pop
xlat
pause
inc
jb
jns
shl
imul
icebp
mov
xchg
mov
xchg
or
dec
gs
outsb
push
mov
out
stos
inc
pushf
das
sbb
lret
imul
adc
jmp
inc
fnstenv
inc
jb
mov
ficoms
call
call
mov
push
int3
and
in
jne
pushf
rcl
fdivs
inc
icebp
push
sub
cld
andl
fldt
mov
pop
adc
push
inc
ror
sub
add
xor
xlat
adc
stc
test
sub
pop
aaa
and
cmp
pusha
mov
inc
ss
jbe
jmp
movsb
sub
lahf
int
aas
push
rorb
js
adc
sbb
test
mov
dec
mov
xlat
lock
ret
movsb
cmpsl
ret
push
pop
mov
test
pop
xor
aad
icebp
mov
push
out
mov
aaa
stos
mov
mov
outsb
hlt
scas
pop
pop
dec
pop
sbb
xchg
dec
and
add
jo
and
sbbl
mov
aad
test
insb
mov
cld
pop
movsl
pop
mov
addb
jnp
fs
adc
rorl
adc
xor
xor
and
clc
xchg
cld
lcall
pop
mov
sbb
pusha
sahf
push
mov
push
push
or
xor
pop
nop
xchg
dec
push
scas
add
and
xor
mov
inc
sbb
scas
cmpb
or
pop
andb
inc
jae
mov
mov
add
enter
cvttps2dq
add
mov
push
lods
movsl
lahf
adc
nop
inc
xor
xor
loopne
mov
arpl
stos
fisubrl
fnsave
or
negl
fsubrs
scas
inc
or
or
scas
daa
sub
dec
repz
push
cs
pop
xchg
ret
jnp
pop
cwtl
pop
test
aaa
dec
cld
adc
push
dec
test
cmpsl
cmp
jl
arpl
jo
out
sub
sahf
push
xlat
xor
stos
mov
fidivrl
adc
xor
insb
jle
das
jg
pop
xchg
aaa
push
int
aam
adc
and
xor
lods
xchg
adcl
rol
pop
lock
imul
out
sar
or
xchg
or
adc
xchg
daa
cmp
xor
mov
stos
xor
fs
or
cs
sbb
les
cli
sub
inc
loop
cli
cmc
xchg
out
lds
lods
clc
pushf
push
out
push
xchg
adc
mov
xlat
ja
mov
xchg
int
xor
notb
sar
pushf
xorl
fisttpl
adc
cmp
mov
dec
jnp
shll
inc
adc
pop
stc
inc
inc
push
fcmove
push
rcll
addr16
push
cmpl
cmp
fbld
cld
call
cmp
push
pop
xor
inc
or
outsl
into
mov
in
pop
sub
sub
cmp
je
push
push
or
push
jbe
mov
xchg
sub
insb
stos
dec
lret
js
inc
and
dec
or
lds
fisttpll
dec
insl
xor
cli
cmpsb
mov
cmc
dec
jns
pushf
shl
bound
decb
aam
lahf
xor
and
xchg
stos
imul
jns
subb
in
add
outsl
mov
lods
and
popf
outsl
xchg
sub
test
xchg
daa
mov
fldt
rorl
xchg
fs
aaa
push
inc
cmpb
call
loopne
mov
sbb
rcrb
dec
fadd
add
pop
adc
andb
sbb
cli
ret
sbb
inc
jle
gs
ds
add
inc
les
adc
and
fbld
mov
cs
test
aad
sbb
push
nop
mov
lret
insl
leave
pop
mov
xor
pmaxsw
pop
lret
es
push
cmp
pushf
ret
push
mov
xor
xchg
rcr
mov
imull
movsl
adcb
sub
leave
dec
cmp
push
sub
movsl
in
decb
sbb
or
jle
out
cmpsb
stc
xor
sbb
xchg
push
imul
mov
aas
mov
movsl
sahf
scas
lds
inc
xchg
push
dec
notl
push
out
imulb
jno
pop
add
loop
jnp
jns
mov
mov
imul
aaa
mov
adc
sub
xchg
cld
sub
gs
fwait
mov
mov
mov
dec
adc
outsb
mov
leave
pusha
cld
imul
xchg
hlt
mov
dec
lds
cli
add
xor
icebp
jl
sarl
fwait
cs
adc
add
stos
mov
mov
fsubrs
xor
mov
xor
pusha
int
mov
sub
dec
mov
ds
cli
mov
adc
pusha
push
cli
jne
and
call
scas
jg
out
inc
hlt
mov
pop
sub
push
int
fcompl
push
rcrb
cmp
dec
sahf
cli
shlb
cwtl
or
or
mov
mov
mov
mov
or
sarl
int3
lret
mov
ret
adc
jno
test
in
ror
mov
gs
insb
pushf
xor
inc
inc
jecxz
jno
ds
or
scas
add
pop
sub
jns
jecxz
pop
push
mov
cmpsl
lret
and
packsswb
push
xor
daa
or
out
fistps
inc
loopne
js
lods
cmp
vpmaddwd
pusha
int3
push
repnz
imulb
ja
leave
sub
fisttps
xchg
arpl
xchg
imul
scas
sub
xor
stc
pop
mov
mov
call
rolb
lahf
lds
lods
jnp
test
outsb
mov
mov
adc
rorb
sbb
shll
jo
push
nop
xchg
je
push
leave
mov
or
js
xor
pop
fnstsw
jge
sbb
inc
push
rorl
push
sub
xchg
and
scas
jmp
jp
mov
mov
or
push
int
sub
add
fs
xchg
adc
insl
add
stos
mov
lret
std
or
add
mov
xor
loop
push
call
push
icebp
cmp
mov
ret
inc
loopne
pop
lret
xor
lret
aaa
insl
loopne
arpl
jp
sub
aam
cmp
push
or
mov
test
adc
cltd
aad
pop
push
adc
mov
cmp
or
xor
inc
xchg
mov
jne
mov
jl
arpl
xchg
add
mov
adc
or
jmp
test
movsl
stos
repz
in
inc
pop
add
sahf
and
mov
lcall
repnz
push
outsb
xor
lock
iret
or
js
ss
adc
fldl
xor
mov
jnp
adc
add
sub
and
jp
insl
push
mov
mov
aad
jge
aad
negb
pop
std
jae
cmc
orb
mov
and
aad
jecxz
or
mov
jb
and
fcmovu
add
jl
cmp
fdivrl
jge
das
and
in
pop
and
push
es
imul
pop
sbb
pusha
sar
loopne
add
shlb
scas
and
aas
adc
pop
sub
adc
sti
outsb
lock
rorl
lock
lods
loopne
mov
push
pop
outsl
and
loope
push
std
adc
mov
or
xor
nop
bswap
pop
testb
jmp
scas
inc
icebp
mov
out
xor
or
push
add
jo
nop
adc
in
pop
push
mov
lret
scas
jno
inc
inc
mov
movsb
xchg
add
clc
inc
iret
dec
sbbl
mov
cmp
lcall
push
sbb
xor
push
into
fidivrl
mov
pop
hlt
push
es
dec
pushf
std
jnp
jl,pn
lds
test
sbb
and
mov
adc
or
dec
mov
scas
das
rcr
fnop
insb
popa
add
mov
outsb
mov
stos
and
pop
adc
out
xor
pop
or
xor
or
sub
lea
stos
xor
inc
test
push
cmc
adc
sbb
imul
or
or
icebp
jbe
loop
shlb
mov
cmp
sub
std
es
mov
fmull
xchg
mov
paddd
xlat
icebp
lods
or
test
xor
push
movl
aas
mov
or
mov
push
jo
dec
fdiv
sub
inc
in
xor
out
outsb
fyl2x
xchg
mov
mov
test
lods
inc
fcomps
xor
pop
mov
add
adc
das
aad
mov
and
inc
fadd
shlb
out
je
das
notb
dec
or
and
aaa
imul
dec
adc
stos
xor
repnz
lea
adc
fcomps
je
ja
xchg
cltd
xchg
dec
cmp
sbb
inc
rolb
pop
fcomip
adc
xchg
cmpsl
pop
aas
cmpb
xor
movsb
jb
pop
fwait
jmp
jp
jmp
xor
jp
lret
push
pusha
int3
repz
adc
lods
mov
xor
push
scas
test
mov
jle
pop
cmp
mov
adc
jg
repnz
cld
sbb
cwtl
push
outsb
mov
or
cmpsb
pop
jbe
mov
mov
call
or
cmp
adc
push
aas
cmp
leave
adc
cli
cmp
or
jl
pop
daa
mov
sarl
jnp
jg
jno
jae
call
lods
js
pop
inc
shlb
outsl
mov
adc
push
subb
dec
arpl
test
add
ljmp
mov
push
dec
pop
in
pusha
mov
ljmp
add
xor
mov
int
adc
add
mov
jns
mov
adc
cmp
scas
jle
xchg
mov
dec
lods
sbb
addl
and
es
fs
lods
xor
xor
enter
xor
push
add
jb
jecxz
into
fucom
add
xchg
push
lea
inc
ljmp
lock
inc
sbb
push
mov
pop
imul
enter
sbb
inc
sahf
out
stos
mov
mov
cmp
movsl
sbb
mov
or
imul
das
fstpl
gs
into
pop
notb
mov
mov
pop
pop
into
orb
jecxz
push
in
out
add
jle
aam
push
lahf
pop
inc
mov
sbb
lret
fwait
mov
push
jmp
add
and
adc
adc
inc
bound
inc
rorl
fwait
jbe
cmpsl
inc
fcmovbe
cld
fnstcw
mull
scas
mov
and
mov
xor
unpckhps
mov
int3
stos
mov
xchg
adc
mov
das
sub
lds
mov
pop
mov
js
clc
push
jbe
jno
or
and
sarl
mov
adc
push
test
xor
jo
movl
and
fldenv
inc
mov
mov
cwtl
das
cmp
imul
sub
data16
incb
add
les
stc
das
adc
ds
sub
jne
jno
aad
test
sbb
xchg
xchg
xchg
xchg
xlat
sub
and
bound
aad
faddl
cmpsb
call
sbb
insb
aas
andb
jae
and
or
jnp
lret
fstl
jmp
hlt
scas
ret
and
sti
xchg
sub
bound
into
repnz
int3
pop
dec
pusha
push
mov
fadd
ds
xchg
js
and
pop
fldenv
out
or
in
jnp
inc
sahf
jle
cwtl
call
repz
call
popa
clc
nop
inc
outsb
xor
mov
ss
jle
in
stos
inc
out
adc
popf
bound
sbb
mov
mov
stc
xchg
mov
loopne
mov
jl
out
mov
sbb
xor
push
nop
daa
xchg
xchg
rclb
bound
and
adc
xchg
sti
mov
xlat
js
pop
pop
cmpsl
leave
test
icebp
xchg
mov
int3
pop
icebp
lods
stc
rcll
gs
push
push
fldenv
and
adc
or
push
je
add
inc
hlt
xor
call
push
fidivrs
push
shll
add
lret
and
sub
mov
out
mov
inc
mov
mov
lds
xchg
dec
ret
adc
imul
dec
sbb
jg
xor
shl
ficoml
sbb
lcall
add
fwait
mov
or
cmp
jbe
stc
in
fstpl
or
sahf
stos
sbb
pop
jbe
push
xchg
xchg
jbe
mov
out
ja
hlt
push
dec
aam
mov
lods
out
push
or
jb
and
out
into
fdivp
sbb
addr16
mov
std
and
adc
test
push
js
mov
nop
popf
lret
mov
repnz
popa
add
jl
push
lcall
icebp
ret
pushl
xor
adc
pop
jecxz
inc
and
push
stos
push
jae
jns
xchg
test
mov
lret
adc
sub
xor
mov
mov
mov
sub
xchg
add
pop
xor
mov
xor
add
popf
adcb
imulb
adc
rolb
insb
pop
inc
sbb
mulb
popf
sbb
sbb
xor
jmp
in
ja
ret
out
jecxz
popf
sbb
repz
push
and
mov
test
ss
insb
dec
out
movsl
repz
sub
dec
scas
mov
ja
ja
xchg
push
jmp
add
and
fmull
lret
inc
scas
leave
lahf
dec
cmp
mov
out
or
mov
jns
into
mov
xchg
mov
mov
ss
jp
push
ljmp
insl
add
sub
push
xor
mov
lahf
stos
xchg
shll
repnz
cmp
call
xor
out
rol
xor
ret
cmc
dec
cmp
outsb
xchg
ret
cmpsl
dec
jbe
icebp
enter
xchg
mov
xor
aam
jl
lea
es
arpl
bound
push
mov
icebp
loope
les
cmpsb
inc
cld
inc
in
das
pop
sub
push
in
sti
adc
xchg
xchg
pop
out
jae
adc
fnstsw
fbstp
imul
add
mov
mov
cmc
mov
cltd
or
and
into
push
sahf
mov
clc
cmp
pop
insb
stc
push
ljmp
mov
mov
cmp
iret
loop
lock
jae
push
scas
outsb
xchg
out
pushf
cmp
xchg
in
in
jae
adc
and
push
jmp
ljmp
clc
cmp
sbbb
dec
inc
mov
jle
or
cmc
pop
push
or
jle
adc
sub
sub
inc
or
mov
lods
inc
nop
pop
fdivs
dec
lret
add
jge
pop
dec
fucomip
out
and
cli
or
cmovg
adc
imul
jne
leave
jecxz
pop
pop
dec
xchg
aad
cld
xlat
push
daa
push
enter
jno
in
subb
and
lahf
dec
xchg
inc
enter
loop
dec
mov
in
imul
lock
mov
jae
int
xor
push
je
repz
aad
cli
pop
psllq
ror
jecxz
stc
mov
cli
push
cmp
mov
xlat
scas
sbb
cmp
loop
aas
or
sbb
js
pop
mov
xor
push
inc
adc
dec
iret
mov
pop
loop
dec
sbb
stos
xchg
in
jb
jno
xchg
dec
mov
neg
jecxz
sub
jge
das
mov
fmuls
ja
bound
ret
adc
mov
xchg
loop
mov
mov
jnp
or
pop
mov
jo
repnz
test
dec
adc
mov
mov
lock
lods
inc
inc
lret
xchg
popa
lret
or
pop
sbb
jae
mov
sub
mov
lcall
and
jecxz
and
cmc
hlt
loope,pt
xchg
pop
adc
or
mov
imul
jmp
insl
cli
ficoms
scas
inc
stc
push
or
xchg
int3
arpl
and
add
push
xlat
ljmp
fwait
push
aas
rcl
enter
rcr
jnp
dec
push
inc
pop
imul
dec
add
cwtl
pushf
cli
mov
jo
test
mov
je
out
fwait
pop
pop
mov
jb
mov
orb
sub
cwtl
sub
cltd
sbb
les
cmp
and
dec
jge
inc
mov
shrl
lret
sti
push
xlat
mov
js
cmpsb
xor
jae
jp
dec
lods
subl
xor
add
mov
test
add
pop
mov
mov
push
dec
add
xor
mov
out
bound
dec
xor
imul
or
pop
adc
popa
mov
xor
pop
aaa
icebp
shr
lret
lcall
repz
cmp
jmp
mov
mov
cmp
or
out
xchg
jp
iret
xor
movsl
xchg
jo
loop
rcll
in
sahf
leave
jge
out
data16
ret
int
sahf
mov
aad
xor
push
push
mov
mov
pushf
xor
jb
mov
lea
cmp
pop
and
shlb
inc
dec
dec
dec
mov
in
mov
cli
pop
sbb
xor
adc
mul
mov
sbb
fstps
and
ficomps
inc
sti
lock
sub
adc
out
gs
mov
xchg
es
sbb
push
jbe
and
daa
dec
and
cwtl
add
cmp
pop
mov
and
push
movsl
jns
xor
mov
lcall
lcall
mov
arpl
xor
jne
pop
jp
xor
push
insb
or
hlt
mov
jmp
iret
jae
imulb
add
imul
pop
je
cmp
cmp
cltd
cmp
lret
push
or
out
xchg
sbb
xchg
adc
mov
jmp
cmp
add
cmp
jb
push
xor
adc
mov
xor
stos
push
fcomp
fstpt
jne
push
aad
and
outsl
push
pop
pop
cmp
inc
mov
mov
ficoms
fisubrl
in
sub
insb
add
mov
aas
add
dec
xor
mov
popa
lods
or
mov
jo
les
and
test
aad
mov
mov
pop
adc
jecxz
jp
hlt
stos
dec
stc
xchg
mov
idivl
and
sbb
lds
negb
mov
into
bound
xchg
lock
mov
jl
sub
mov
out
outsl
daa
sbb
cmp
sar
sbb
and
fists
dec
xchg
mov
or
jo
mov
pop
mov
add
mov
clc
dec
cwtl
xor
push
xchg
in
jnp
adc
lret
xor
das
and
fadd
mov
sub
sbb
push
dec
std
mov
ljmp
or
loope
ror
add
jo
int3
aam
jae
orb
pop
or
imul
cmp
mov
push
or
mov
movsb
fs
inc
ljmp
push
and
jmp
pop
xor
outsb
aam
out
ret
sub
sahf
loopne
mov
data16
in
icebp
mov
inc
push
lret
outsb
out
test
lea
aam
test
sbb
mov
mov
xor
test
pop
and
cmp
js
cmc
mov
push
mov
push
xor
push
addr16
scas
fnsave
iret
rcrl
adc
sbb
stos
push
icebp
lahf
cli
mov
xor
je
jno
mov
data16
outsl
negl
insl
push
mov
mov
cltd
cmp
pmaddwd
mov
mov
fs
cld
aad
imul
jecxz
adc
inc
xor
std
aam
mov
push
jne
test
jns
mov
lcall
xchg
addr16
mov
add
or
sar
mov
stos
sub
pushf
fs
cmp
mov
outsl
aad
loop
mov
mov
test
aad
insl
cmc
mov
hlt
xchg
cmp
mov
xchg
cmp
into
clc
mov
movsb
movsb
xchg
lret
jl
jp
and
fldcw
push
mov
mov
aas
jle
push
jle
mov
test
movsl
test
neg
jo
iret
xor
push
sub
lock
inc
sbb
push
ja
cltd
inc
je
mov
clc
mov
lcall
and
push
push
lds
outsl
xchg
call
arpl
insb
mov
ss
popa
pop
sbb
xchg
shrb
cmpsl
insb
inc
jo
inc
add
jb
icebp
push
jmp
mov
cmc
dec
rcr
into
loop
repz
aas
and
and
lahf
andb
in
pushf
mov
dec
inc
mov
sti
cwtl
xor
movsl
mov
cwtl
xor
aad
aam
outsl
enter
adc
or
test
mov
loope
push
adc
loopne
mov
repz
push
xor
mov
xchg
movsb
xor
sbb
fldl
stos
es
fs
sub
addr16
aaa
sbb
push
add
fucomp
fidivl
rcrl
mov
cltd
call
adc
rcrl
gs
adcb
inc
xchg
fcomi
mov
jbe
or
cs
es
pusha
aaa
mov
push
mov
or
pop
outsb
cmp
xchg
push
sub
jb
out
inc
pop
sub
lods
xchg
decl
mov
ret
sti
stos
movsl
lret
std
mov
cmp
pusha
into
scas
pop
fcoms
jb
xor
jle
push
mov
sbb
shrb
out
daa
leave
xor
adc
dec
mov
cmp
mov
outsl
fcompl
push
and
test
push
fs
and
xchg
mov
jne
rcrb
inc
outsl
xor
xchg
stc
je
leave
dec
pop
push
scas
out
fbstp
push
vcmpneq_oqps
pop
cmc
test
xor
mov
sbb
test
mov
aas
loop
cmp
incl
pop
cmp
pop
sbb
ljmp
int
push
push
das
xchg
sub
push
outsl
mov
enter
scas
decb
cmpsl
iret
or
bnd
xor
adc
stos
adc
sbb
mov
pushf
and
push
mov
cmp
mov
addr16
adc
sub
xchg
nop
rclb
sub
imul
outsl
xchg
xorb
lahf
and
cmp
mov
adc
cmp
insl
xor
test
sub
mov
test
shl
or
jae
lds
mov
jle
sarl
jecxz
imul
in
imul
jno
ds
daa
xchg
sub
ljmp
call
xor
push
mov
lods
les
pop
jmp
sbb
popf
dec
push
fdivrs
es
lock
cpuid
mov
mov
mov
mov
addl
dec
in
icebp
test
icebp
clc
mov
mov
or
and
ret
sbb
lahf
iret
out
imul
mov
lods
push
out
insb
dec
jp
sbb
cmp
mov
movsb
push
cwtl
sub
cmc
nop
arpl
jmp
jg
dec
dec
dec
arpl
imul
pop
lock
push
call
mov
adc
jp
shrl
popa
inc
pop
xchg
lcall
push
mov
push
mov
outsl
add
push
fidivs
or
or
into
movsb
xchg
pop
sub
leave
sbb
inc
data16
and
xor
inc
arpl
pop
and
jne
cwtl
inc
loop
js
insb
stc
mov
push
ds
aaa
cli
sahf
cmp
push
in
adcb
push
sbb
lods
lret
push
aas
mov
popa
inc
sbb
add
divl
int3
test
aam
sarb
out
dec
int
fcmovnb
popf
adcl
sub
jno
lret
jae
mov
fucom
mov
test
loop
lods
push
mov
and
xchg
int3
mov
adc
inc
int
aad
xchg
xchg
stos
adc
mov
mov
rorl
jl
and
push
pop
cmp
test
icebp
mov
aam
popa
pop
add
xorl
test
push
mov
xor
adc
std
in
imul
lret
mov
gs
arpl
or
std
xchg
xor
pop
mov
cmp
inc
dec
sbb
push
lods
push
js
arpl
dec
mov
out
jp
mov
movsb
cmp
addr16
cli
lods
mov
scas
mov
fisubl
mov
popa
mov
push
cmpsb
or
clc
and
push
inc
mov
sub
mov
dec
in
idivb
shrb
xchg
jle
or
pop
sub
arpl
lcall
jbe
mov
test
insl
jne
pop
xor
add
fisttpl
pop
ficoml
adc
movsb
xor
xor
in
clc
cwtl
add
adc
ljmp
pop
push
and
pop
mov
inc
test
subl
fmuls
xchg
dec
scas
jo
iret
aam
and
and
addb
add
in
or
xor
dec
ficompl
jp
xor
dec
or
fsubrl
fidivs
or
loope
outsl
cld
outsl
mov
pop
jbe
shlb
mov
rorl
dec
test
insb
scas
fsub
sarl
mov
push
fldcw
lcall
ret
into
pop
cli
push
mov
ljmp
push
and
call
out
shr
int3
sub
adcl
into
outsl
sahf
and
int3
and
rcl
aas
add
sbb
test
rcrl
in
add
fisubrl
inc
mov
cmc
mov
sbb
sbb
or
test
icebp
mov
inc
pcmpgtw
mov
inc
add
jmp
arpl
mov
cmpsb
push
and
mov
mov
fistpll
add
sbbb
popf
xor
adc
in
int3
sub
dec
in
out
test
cmp
sahf
or
sub
jbe
jl
sbb
scas
negb
call
mov
movsb
out
mov
and
adc
repz
leave
loope
cmp
push
mov
jne
and
das
cmp
jge
jg
fstpl
xchg
fdivl
call
xchg
out
xchg
inc
rorb
add
jg
loope
dec
cltd
cld
and
sbb
jle
xchg
mov
fdivl
inc
push
or
xchg
js
dec
push
mov
push
sub
ja
sbb
into
and
mov
cs
push
mov
test
xchg
push
push
push
stos
rorl
mov
sbb
subb
dec
out
inc
add
fs
mulb
pop
pop
rcrl
das
push
test
jbe
out
push
cli
lret
jno
xchg
clc
inc
cld
ret
fdivl
pop
lret
cs
mov
js
call
psubb
sub
xor
xor
fbld
stc
adc
lcall
sbb
sub
jo
pop
jne
jbe
popa
lds
jge
stos
xchg
test
cmp
adc
sahf
stos
dec
test
xchg
push
cli
xor
data16
sbb
adc
idivb
cmp
dec
and
mov
fiaddl
out
sahf
out
sbb
and
cmc
cli
int
sbb
stos
mov
insl
sbb
dec
xchg
ss
nop
adcl
test
ds
gs
mov
and
cli
push
pop
xor
lods
pop
jns
mov
popa
inc
and
fidivl
add
insl
js
xorb
push
popf
icebp
xor
jno
fistpl
jmp
or
imulb
ljmp
pop
or
test
and
cmp
out
inc
fistpl
pop
inc
fmull
xor
cmpsb
add
lret
push
jmp
out
xor
icebp
mov
pop
mov
fdivs
inc
int3
adc
mov
fs
pop
loopne
lea
imul
insl
faddl
bswap
in
sub
pop
cmpsb
arpl
xor
hlt
push
mov
mov
push
outsl
dec
push
fnstcw
adc
push
lret
jae
cmc
mov
std
sbb
js
sbb
mov
sbb
int3
xor
in
lea
in
push
testl
fisubs
pushl
inc
sbb
cli
pusha
xchg
jge
xor
adc
pusha
leave
stc
xchg
pop
and
es
pop
sub
in
adc
or
mov
jo
sub
push
fisubrl
loopne
jae
pop
in
fsubrs
idivb
add
push
xchg
add
cmp
inc
pop
ret
cwtl
sub
dec
imul
shrb
jne
pop
insb
mov
popf
sbb
sahf
cmpl
mov
jo
fstl
pop
dec
popa
shr
test
rcl
fcompl
repz
xchg
mov
jmp
mov
sub
pop
stos
inc
iret
shlb
jmp
xor
data16
sub
scas
out
cmp
lods
subb
jne
adc
sbb
lret
cmpsb
in
xlat
movsb
repnz
push
adc
out
cwtl
add
js
roll
push
out
sti
lret
js
jl
in
sbb
arpl
insl
pop
data16
pop
sub
bound
xor
jae
pop
sub
dec
dec
cli
inc
dec
cmp
in
xchg
mov
xor
or
lcall
mov
sub
jg
and
mov
mov
sbb
sub
add
mov
movsw
and
aas
sbb
scas
adc
inc
push
in
xor
jge
pop
clc
cld
pop
pusha
cmp
aam
rcl
jns
and
and
inc
dec
pushl
cld
stc
or
fdivl
mov
push
cs
and
lock
cmp
pop
cmc
jmp
shll
mov
dec
pop
outsl
xor
xor
lea
cmp
xchg
incb
jae
cmc
and
inc
dec
lahf
inc
cmp
insb
mov
push
mov
cltd
fcoms
scas
popa
mov
push
ss
pop
mov
dec
js
ljmp
addr16
sbb
sti
lret
jle
lret
inc
gs
cmp
sbb
decl
sbb
jmp
leave
pop
in
mov
xchg
imul
cmp
mov
or
mov
cli
and
push
push
pop
xchg
into
addl
adc
mov
stos
rclb
sub
jno
push
pop
or
inc
cmp
int3
push
or
sub
dec
and
mov
mov
dec
pop
repz
cli
xlat
cltd
ds
mov
fcoml
fstps
inc
xor
jne
push
imul
daa
push
stc
push
mov
mov
sahf
pusha
xchg
jge
fisttpl
lods
into
jae
xlat
pushf
fldt
scas
lret
rcrl
xchg
xchg
stos
call
xchg
xor
xchg
ret
and
call
jecxz
outsl
jle
adc
ss
rcrl
dec
lret
sbb
sub
andb
daa
les
cmp
jno
cmp
and
movsl
mov
pushf
sbb
lds
cmp
sub
rcl
popf
repnz
pop
fnsave
cld
jae
cmc
gs
lods
mov
js
lods
jp
push
mov
addl
add
jno
dec
inc
and
sub
les
repnz
outsb
xchg
jne
mov
add
pop
into
pop
pusha
into
sub
es
cmc
lret
nop
dec
xorb
enter
scas
and
pop
stos
jge
or
subb
out
sbb
inc
pop
cli
sub
movb
mov
adc
or
dec
and
xlat
mov
fucomi
popa
mov
add
cltd
cmc
popf
add
outsb
or
pusha
cld
xor
inc
mov
ja
jl
leave
mov
sarb
in
push
in
outsb
and
xor
mov
loope
jmp
repnz
je
mov
out
fs
rcll
adc
and
mov
clc
aas
rcrl
loope
mov
call
dec
and
fstpl
and
sub
and
pop
dec
imul
push
jno
aas
iret
xchg
push
pop
mov
out
add
mov
xchg
jge
fld
jle
cmp
push
in
int3
hlt
dec
out
adc
scas
rorb
sti
sti
fwait
inc
mov
cmp
lds
mov
dec
aaa
outsb
flds
mov
adc
stc
mov
mov
inc
push
out
jp
pop
and
pop
repnz
aam
loopne
mov
cld
jae
mov
adcb
xor
cltd
xor
adc
loopne
xchg
shl
inc
stos
je
mov
mov
fistpl
xor
aas
repnz
hlt
cmp
mov
cmpb
push
mov
or
xchg
pop
xchg
add
mov
cmp
mov
jmp
bnd
sbb
xchg
scas
sub
fidivl
jl
xor
pusha
push
aam
mulb
andb
push
arpl
dec
mov
bound
ret
test
flds
sbb
call
rorl
loopne
push
add
fs
lock
jg
inc
mov
testl
push
loop
nop
pop
sahf
cmp
sbb
sub
pop
push
jmp
in
inc
push
sub
xor
inc
and
testl
fldcw
sahf
cli
push
mov
nop
loopne
rclb
insl
fldenv
cmp
lds
mov
int
mov
loopne
and
stos
sub
scas
loop
pusha
loop
lock
cmpl
fwait
xchg
push
test
enter
inc
push
aas
pop
add
xor
and
lds
test
adc
fiaddl
test
and
lock
xlat
sbb
in
push
repnz
and
mov
dec
dec
int
xadd
loope
into
and
mov
cs
push
push
adc
xchg
xlat
daa
lods
test
iret
push
xchg
xchg
push
xchg
dec
pop
cli
aad
cmc
push
loop
rcrb
mov
inc
popa
push
sbb
aas
pop
pop
lods
pop
jg
ret
push
xchg
sbb
ret
sahf
push
sub
sbb
adc
stc
nop
cmp
inc
or
sahf
sub
mov
sti
sbb
repz
subl
in
pop
add
sub
or
ret
pop
cmp
or
cmp
in
xor
jo
jecxz
out
xchg
lock
cmpb
xchg
insl
mov
mov
icebp
sbb
aas
push
sarb
outsl
pop
mov
jbe
cmp
insb
add
pop
push
mov
adc
add
aas
ret
jbe
cmp
inc
in
xlat
ljmp
jle
cmp
loope
xchg
idivb
mov
cmpl
dec
mov
mov
mov
cmp
aaa
test
mov
test
fsubrs
mov
imul
pushf
idivb
xor
test
lea
cmc
sahf
popf
and
out
mov
dec
jo
repz
and
int
in
pop
push
out
sbb
mov
enter
lock
push
je
test
jmp
pop
popa
jmp
cs
cld
mov
out
push
mov
add
xchg
xor
push
in
dec
int
test
inc
sub
shll
xsha1
cmpsb
lea
loop
xor
movsb
movb
pop
mov
fdivrs
sahf
or
sbb
out
fdivl
jge
out
nop
movups
mov
mov
ss
fisttpll
arpl
ds
dec
or
fstl
enter
in
mov
push
in
scas
inc
xchg
mov
cmpsb
and
fwait
test
mov
les
jge
in
out
aad
and
into
mov
push
pop
mov
mov
ljmp
xor
sti
push
loopne
and
fimull
ret
test
aas
xor
jle
pusha
std
xchg
push
push
or
inc
inc
jbe
xor
mov
dec
dec
and
inc
lcall
jae
push
lock
mov
sub
enter
ret
jl
inc
lods
repnz
cmp
and
mov
push
in
mov
fldln2
cs
fwait
subl
in
push
xlat
fwait
popa
add
dec
frstor
sub
je
mov
mov
pop
and
sti
xor
cmp
es
fidivs
out
scas
or
lcall
add
lds
leave
mov
add
pop
inc
push
push
add
inc
das
cmp
jecxz
inc
push
push
ror
repnz
popf
pop
orb
cmc
lods
ret
jl
pop
roll
mov
jge
fldt
aam
adc
mov
sub
jae
xor
mov
fcomps
iret
cmp
insl
test
int3
mov
jbe
in
das
addr16
in
and
loopne
stos
inc
repz
repz
jg
ds
and
inc
repz
ja
sbb
inc
sbb
inc
cmpsl
cmc
jl
inc
mov
fcmovnu
imul
mov
push
pushf
pop
pop
imul
add
jg
test
mov
mov
sahf
xor
test
daa
pop
test
scas
inc
scas
enter
mov
cmp
mov
push
shrl
push
and
and
xor
adc
push
pop
test
rclb
daa
cli
es
lds
les
mov
xchg
cwtl
adc
pop
roll
repnz
add
cltd
in
fwait
pusha
ret
movsb
aaa
mov
pop
scas
scas
pushf
xchg
mov
test
mov
push
xlat
sub
sbb
nop
jns
shrl
scas
je
add
fsubrs
inc
xor
or
push
sbb
aam
je
outsb
cmpsb
xor
adc
mov
push
cmpsb
daa
push
or
mov
sub
dec
dec
push
insl
ljmp
negb
sahf
aaa
roll
frstor
rcrb
fwait
mov
adc
mov
jb
mov
sbbl
dec
push
shlb
xor
clc
int
and
fistps
out
cmp
push
call
pop
lret
ss
mulb
lods
push
pop
incb
test
sbbb
xlat
mov
pop
sbb
pop
mulb
cmp
clc
popf
stc
sub
loop
popl
or
sub
enter
scas
fidivrs
iret
jns
dec
or
icebp
xor
rcrl
movsl
mov
cmpsl
add
fxch
shl
int3
push
jle
sarb
sub
lods
bound
mov
sbb
fidivrl
inc
inc
add
push
call
imul
aas
aam
cmpsb
inc
fildl
testb
xor
mov
push
mov
inc
mov
shlb
ret
dec
popf
fnstcw
and
mov
jmp
imul
aaa
movsl
scas
xchg
sbbb
aas
sub
add
mov
mov
mov
cmpsl
ds
sub
push
xlat
lock
cmpsl
add
cmp
push
mov
adc
pop
in
mov
outsb
test
aam
mov
in
test
push
addr16
or
jns
cs
mov
xor
lods
cwtl
pop
ja
push
stos
xor
sub
xchg
mov
ss
cmp
jecxz
push
stc
mov
add
sbb
clc
mov
movsb
cmp
mov
decl
es
adc
arpl
lret
add
jp
into
fsubrl
scas
movlps
imul
adc
les
lods
pop
mov
mov
std
cmp
loop
negl
std
js
sub
mov
in
insl
and
dec
dec
pop
mov
pop
lea
insb
jae
add
loope
iret
push
xor
dec
std
dec
repz
lret
mov
or
push
push
or
insl
cld
push
hlt
imul
scas
in
xor
jecxz
cmp
push
push
jnp
xchg
addr16
imul
sahf
lods
ja
jmp
inc
arpl
dec
mov
jp
mov
xchg
and
xor
or
faddl
loopne
xor
xlat
rcrb
pop
dec
mov
push
std
adc
inc
sbb
lcall
addr16
daa
and
cmpsl
dec
inc
orl
shlb
inc
pop
lcall
lcall
pushf
cwtl
xchg
cmp
xor
xor
mov
push
ror
adc
popa
cmp
daa
stos
pop
rclb
jbe
imul
jge
mov
xor
mov
out
inc
jae
stc
add
shlb
pop
lock
or
add
nop
jmp
and
insl
sarb
test
and
sub
pushf
and
popa
mov
popf
nop
cmp
fisubrs
sub
jb
pop
lock
out
jle
sbbb
popa
fbld
incl
push
mov
faddl
adc
xlat
mov
test
cs
in
jg
repz
outsl
and
and
fisubrl
xchg
fistpll
test
das
or
push
dec
pop
mov
cmp
adc
imull
mov
shll
add
scas
lahf
lods
mov
add
adc
jne
outsb
stos
jne
sti
call
aas
sub
bound
xchg
pop
adc
sub
mov
dec
xchg
rol
push
ror
aaa
shll
inc
push
cmovle
icebp
lcall
xor
jl
dec
mov
mov
and
and
xor
mov
cmpsl
inc
and
and
mov
icebp
les
loopne
adc
sti
aas
cs
ds
push
and
loope
lret
xor
gs
rorl
mov
das
and
hlt
aas
nop
sub
fidivrl
xchg
loop
dec
arpl
roll
mov
sub
in
push
jge
push
je
movsb
bnd
pop
or
xor
xchg
sbb
imul
popa
cmp
in
mov
push
push
mov
sub
shrl
push
and
iret
fisttpll
push
popf
test
and
ss
xchg
xor
inc
fwait
js
clc
xchg
dec
adc
add
stos
xchg
adc
add
cmpsl
filds
cwtl
and
adc
mov
pushf
insb
or
lret
adc
lods
cmp
je
aaa
int
xchg
pushf
sub
repnz
inc
mov
pop
ficoml
ret
sbb
pop
cmp
lea
mov
std
movsb
sbb
xor
rcrb
jp
fld
mov
push
mov
test
jno
jp
ret
ret
pop
andb
repnz
stos
cmp
lock
inc
insl
ret
je
in
sub
xor
les
mov
mov
outsb
ja
hlt
adc
aad
div
repnz
in
cs
cmp
insl
sbb
sbbl
int3
ja
movsl
popa
or
clc
sahf
bound
mov
inc
xor
mov
adc
bound
scas
cmp
fs
add
xchg
imul
fwait
jae
xchg
repnz
test
adc
and
xor
lret
popa
lahf
andb
mov
lret
fwait
test
mov
mov
gs
push
fwait
dec
dec
xchg
xorl
inc
mov
sahf
push
sti
mov
xchg
add
xchg
dec
ret
add
ljmp
pusha
or
jbe
mov
dec
pop
sahf
sub
idivl
popf
sbb
fidivrs
aaa
jbe
cmp
stos
test
popa
les
test
jae
je
mov
and
inc
lods
and
subl
adc
cmp
popf
adc
mov
xlat
test
push
mov
aad
pop
test
mov
sti
jno
sbb
rcrb
add
push
lretw
cmpl
mov
mov
sahf
or
cmpsl
insl
movsb
xorb
mov
or
test
or
sbb
add
fiadds
or
or
outsl
pushf
scas
jo
ljmp
push
rcrb
cmp
xchg
neg
dec
xor
push
and
adc
sbb
ss
movsl
fs
mov
and
mov
popa
insb
add
add
mov
sub
es
stos
lret
mov
dec
pusha
and
addb
test
and
sub
mov
xchg
imul
ret
shll
fsubrs
adc
dec
lods
outsl
sub
out
clc
aas
push
pop
lret
fndisi(8087
in
aad
outsb
icebp
sub
inc
mov
xchg
add
lods
inc
mov
pop
rolb
and
cli
das
jg
popa
sbb
push
test
add
xchg
pusha
pop
sbb
cld
fwait
cmp
in
lret
nop
mov
gs
nop
sbb
push
pop
inc
jae
jbe
mov
stos
insl
xchg
cmp
mov
test
xchg
call
or
mov
or
popf
mov
push
and
push
inc
cmpsl
fcomip
in
addr16
mov
mov
inc
sbb
push
lcall
outsb
out
sysenter
lret
inc
mov
out
mov
push
ljmp
jno
pop
jo
add
dec
clc
mov
movsb
arpl
fldt
pop
add
in
add
xchg
sub
insl
dec
mov
jg
push
outsl
fbld
pop
cmpsb
add
pusha
ss
dec
insb
lahf
fdivs
push
imul
outsb
or
xor
out
lock
repnz
xchg
insl
cmp
mov
fxch
push
dec
sub
jecxz
pop
lock
dec
rclb
enter
es
cmp
push
xchg
mov
jno
or
repz
addr16
ret
and
cld
mov
pop
ljmp
pushf
scas
cmc
inc
push
stc
mov
push
xchg
cwtl
jno
cli
sub
je
sub
repnz
xchg
dec
pop
jne
mov
cmp
pop
loope
das
lea
xor
fsubs
sbb
mov
sbb
loope
cmp
sbb
das
dec
sbb
call
hlt
mov
aaa
sahf
mov
and
test
add
loopne
or
jnp
daa
lret
push
mov
xchg
sub
mov
mov
pop
mov
and
pusha
enter
inc
movsl
fmul
cmp
add
lds
fnstenv
mov
xor
ds
daa
imul
mov
mov
mov
ja
outsb
ret
repz
add
stc
ret
ja
push
mul
push
xlat
lret
mov
shlb
ret
mov
mov
adc
ret
push
mov
das
xor
push
cmp
loop
testb
xor
pushf
sub
stos
mov
jns
push
fwait
cmpsl
jno
fisubrs
mov
out
pop
leave
cmp
pop
lods
pop
push
dec
bnd
sub
xor
sahf
add
sub
mov
mov
adc
lods
fdivl
sub
pop
les
out
ljmp
push
gs
lods
and
adc
out
enter
lss
xor
std
insb
jg
jne
dec
negl
fs
xchg
icebp
movsl
xchg
fnsave
loop
jl
dec
dec
pusha
dec
int3
xor
inc
jecxz
jbe
push
add
dec
adc
rorl
je
cmp
xor
je
and
pop
jne
jne
inc
mov
imul
mov
xlat
xchg
stos
sarl
jns
rcl
or
pop
ficoml
add
sub
mov
or
xchg
xor
sbb
shrl
pop
cmp
mov
hlt
out
mov
cmp
dec
lods
nop
andl
fdiv
in
inc
aas
sbb
mov
mov
jne
or
or
cli
dec
iret
push
shll
fadds
push
cwtl
pushl
aad
shlb
mov
data16
and
outsl
jg
cmp
adc
cwtl
out
push
stos
arpl
push
and
cltd
inc
into
mov
in
mov
stc
pop
sbb
lods
scas
or
mov
insb
jle
loop
bound
push
jmp
cmp
push
outsl
cmpl
push
imul
sbb
lea
cmp
stos
gs
jg
mov
ja
test
cmp
jo
cmp
and
or
fistpll
mov
cmp
sbb
xchg
xchg
inc
push
inc
je
mov
imul
or
popa
adc
jmp
aaa
push
scas
iret
inc
or
fwait
pop
push
lcall
mov
loopne
cmp
jo
addr16
ficoml
mov
jg
and
and
inc
adc
icebp
push
push
mov
fisubrs
add
or
aad
lds
sub
lea
je
inc
cmpsb
jnp
sbb
jae
sub
adc
push
loope
aam
adc
adc
imul
sbb
test
mov
aaa
into
push
int3
sbb
shlb
adc
mov
mov
std
pushf
sbb
xchg
mov
xor
xor
mov
imul
sahf
popa
clc
iret
stos
lds
daa
mov
jmp
xorl
xor
outsl
pop
sarl
stos
loop
push
popf
cwtl
call
aaa
stos
imul
or
xchg
xlat
sbb
push
dec
mov
sbb
aaa
adc
fcmovne
out
push
mov
leave
mov
ds
pop
push
push
inc
sub
es
popf
xor
sub
out
cmp
fisttpll
out
dec
push
mov
fisubl
ljmp
jno
xor
add
in
push
decl
mov
inc
pop
jl
add
sub
repz
sub
lcall
adc
mov
mov
mov
outsb
sub
cli
push
mov
xor
stos
sbb
mov
bound
in
nop
dec
cwtl
or
imul
jmp
aas
test
jle
out
inc
mov
mov
jl
lds
ja
mov
xor
xchg
jecxz
in
dec
movsb
push
int
jbe
ljmp
mov
lcall
push
icebp
loopne
inc
and
mov
cmp
jecxz
unpckhps
mov
lcall
int
jge
pop
mov
pushf
pop
les
in
push
dec
pop
loopne
inc
xlat
icebp
rcll
push
dec
cltd
mov
ja
pop
test
and
jno
cmp
pop
loope
nop
divb
mov
pop
call
test
rclb
adc
fstps
xchg
or
mov
ret
xor
mov
mov
rcrl
inc
fildll
add
fsubs
adcl
in
out
into
mov
cmpl
sbb
int
ss
sbb
pop
out
cli
cpuid
jnp
sbb
inc
cmp
dec
fcomip
fnstcw
insb
xor
add
fidivrl
or
pop
or
scas
inc
ret
call
mov
jecxz
xor
and
push
pop
cmpsb
cli
in
out
mov
push
into
or
gs
jle
inc
addr16
pop
ljmp
in
repz
lret
and
fiaddl
cmp
mov
sub
mov
rcll
adc
mov
gs
lea
mov
xchg
fldenv
cmpsl
and
enter
jp
xorb
jne
xor
jb
pop
test
insl
push
cmp
mov
lahf
ds
std
popa
mov
xor
dec
jg
scas
xor
dec
xchg
xchg
inc
sbb
adc
cmp
gs
lret
jnp
ret
cmp
imul
stos
ds
add
push
dec
orl
mov
iret
xchg
inc
push
fidivrl
inc
call
stos
ror
stc
adc
aam
test
test
fisubrl
sub
add
call
outsb
and
xchg
cmp
loop
and
mov
mov
xlat
cmp
stc
sub
mov
inc
xor
jle
in
repz
mov
into
popa
les
cld
out
push
fdivs
lock
test
or
int3
jnp
subl
dec
pop
sub
and
scas
xor
xchg
stos
push
push
or
ljmp
sub
mov
jns
mov
pushf
pop
mov
mov
arpl
lea
cs
out
dec
popa
sub
icebp
adc
jp
push
pushf
sbb
scas
adc
mov
ss
dec
inc
cmp
xlat
mov
cmp
lea
push
cmpsl
push
std
xchg
sahf
enter
cmp
popa
outsb
sub
pusha
push
sbb
sub
mov
xor
insl
fldcw
shlb
inc
inc
xchg
insb
xchg
xchg
clc
out
mov
cmp
inc
stos
jl
cwtl
bound
sbbl
fdivs
js
push
inc
cltd
mov
outsb
insl
pusha
sbb
aaa
jno
je
or
xor
js
inc
std
pop
xor
push
insb
cwtl
adc
xchg
adc
cwtl
ltr
out
inc
adc
and
pushf
cli
jmp
jge
cwtl
xor
ret
sub
push
notl
cmp
lahf
stos
das
aas
leave
mov
imull
mov
mov
dec
scas
jmp
cmpsb
sub
shl
or
ds
in
pop
movsl
cmp
aad
jg
mov
push
mov
jne
fsubs
jae
test
mov
adc
lock
aad
pop
pushf
xor
xor
inc
and
notb
lods
cs
outsb
mov
adc
jmp
nop
fnsave
push
jecxz
pop
pop
and
clc
jnp
xchg
pop
repz
cmc
popa
sub
std
inc
stos
je
pop
fisttpl
or
xchg
xchg
sub
xchg
popf
ss
inc
sub
push
mov
jno
pop
jns
jecxz
cmp
das
add
fcomi
cltd
sub
pop
push
adc
js
or
xor
dec
out
scas
mov
push
lahf
xchg
cld
dec
cs
cltd
call
push
movsl
lods
mov
mov
aam
push
pop
mov
fldenv
push
or
push
jge
loop
push
inc
dec
loop
gs
or
icebp
jae
sub
repnz
sub
addl
cs
or
mov
pop
in
mov
mov
negl
sbb
and
cmp
sub
rcrl
mov
jae
adcb
mov
sbb
shlb
xlat
sub
push
push
push
xor
je
mov
fs
push
adc
push
sub
mov
mov
mov
jne
test
mov
ret
push
xchg
hlt
hlt
dec
add
les
xor
jmp
cld
sbb
or
xchg
mov
stc
mov
mov
loope
mov
push
dec
in
push
adc
mov
test
sbb
mov
out
cmp
mov
mov
push
jle
test
xlat
lds
fdivr
adc
cmp
xchg
push
inc
push
nop
lock
mov
adc
bound
call
adc
inc
add
scas
xor
adc
arpl
jl
shlb
ljmp
pop
popf
push
mov
fiadds
xchg
movsb
cmp
cmpsl
jno
and
shrl
sub
mov
mov
mov
call
sub
or
sbb
sahf
push
ljmp
inc
mov
jb
xchg
fs
stc
mov
inc
sbb
sbb
pop
ss
mov
das
mov
clc
pop
sti
adc
dec
pop
pop
add
ljmp
pop
into
xchg
fcmovnbe
scas
mov
std
xchg
or
inc
shlb
sub
pop
jno
data16
cwtl
add
icebp
mul
aam
popf
ret
js
insl
lcall
mov
icebp
lahf
bound
sbb
xchg
lock
adc
out
mov
icebp
int
fdivrs
pop
jle
hlt
mov
adcb
pop
lods
fstpt
dec
add
add
js
push
mov
dec
jg
sbb
push
sbb
nop
and
add
insl
loopne
rorl
int
cmpsl
jne
mov
imul
cmp
cmp
cmp
stos
sbb
in
lds
insb
cld
hlt
ljmp
lcall
pop
ret
stc
nop
test
pop
xchg
fdivrs
adc
inc
and
xor
je
push
sahf
jp
imull
sbb
dec
dec
jge
cmp
mov
adc
cmp
add
loop
mov
test
adc
ss
mov
jecxz
movsb
push
jnp
aad
iret
pop
pop
jp
je
dec
adc
roll
push
cmp
lods
cmp
arpl
mov
idivb
inc
icebp
adc
scas
adc
sbb
jb
sbb
in
add
test
xchg
cli
mov
adc
push
ljmp
cmc
mov
jno
pushf
jbe
in
xor
fwait
jo
sti
dec
mov
in
lcall
pcmpeqw
mov
aad
inc
fldcw
mov
adc
popa
clc
aaa
xor
push
outsb
ret
cmp
mov
rorl
cmp
fcompl
int3
mov
jae
outsl
sub
or
mov
sub
mov
sbb
push
cwtl
aam
out
jbe
xchg
or
repz
jp
push
pop
repnz
sbb
in
call
dec
callw
mov
popf
lods
inc
movsb
aam
push
into
in
sub
nop
mov
mov
push
je
std
shrb
dec
and
div
stos
scas
cmp
jge
sub
adcl
sbb
cmovbe
cmc
mov
push
adc
es
fldln2
pop
jbe
int3
push
pop
and
ret
fnstsw
cmc
loop
mov
sub
in
fnstenv
cwtl
pop
push
je
js
push
push
negl
mov
ret
cmp
jge
addr16
xchg
jbe
in
arpl
shrl
ret
out
jbe
in
mov
mov
stc
sbb
in
mov
repnz
and
lods
mov
push
out
jns
dec
jno
pop
sub
or
cmp
ret
stos
dec
testb
out
and
cmpsl
xchg
adcb
std
jae
mov
dec
mov
add
ss
pop
pop
inc
mov
sti
imul
fadd
or
jbe
cmp
adc
test
jne
out
test
loop
adc
cmp
inc
jle
js
pop
pusha
mov
dec
jle
adc
scas
lods
ficomps
cmp
incl
and
pop
insl
fisubs
pop
cwtl
es
sbb
dec
pop
add
cltd
mov
dec
push
scas
out
popf
insb
notl
cmp
fsubrl
sti
jae
push
in
adc
or
xchg
xor
jle
pop
enter
xor
jl
and
call
pop
pop
mov
mov
and
push
mov
mov
xchg
sub
enter
jno
xchg
inc
xchg
lds
add
inc
stc
cmpsb
ds
sub
fsubrs
dec
mov
dec
cltd
mov
adcb
add
sub
jg
sbb
xchg
pushf
mov
scas
in
cmp
daa
mov
push
icebp
and
dec
push
dec
inc
push
jg
aam
cmp
mov
jmp
ss
std
inc
scas
cs
mov
stos
jg
clc
adc
xchg
dec
sub
xchg
cld
test
add
mov
xchg
push
push
lock
je
xor
pushf
popa
jp
aas
mov
push
mov
xor
push
fnsave
pop
push
jne
mov
dec
enter
and
mov
push
in
and
mov
jecxz
orb
sbb
mov
add
lret
jl
test
or
lods
inc
wrmsr
lcall
fidivl
out
fidivl
or
scas
jg
jp
inc
lods
jb
in
movsl
mov
fidivrl
sbb
jl
in
scas
popf
fcompl
lea
dec
add
popa
clc
cs
ret
xor
xchg
or
les
icebp
lock
js
add
dec
fwait
sub
lea
addl
or
stos
fldenv
adc
or
jne
jns
cli
shl
or
mov
sbb
pop
sbb
mov
call
jle
mov
add
lods
push
sahf
xchg
xchg
dec
dec
in
lcall
mov
ja
outsl
and
mov
lret
and
and
inc
sti
test
pop
pop
and
sub
and
jns
dec
sub
in
cwtl
sub
sub
popa
inc
cli
in
xlat
push
sbb
push
adc
jno
xor
lahf
jbe
popf
scas
jb
movsb
std
mov
jge
out
rcrl
push
inc
push
lahf
pop
out
mov
dec
out
rorl
sarb
cmp
adc
cld
stos
pop
push
popf
push
inc
or
cltd
xor
and
into
ret
and
mov
addr16
add
pop
scas
dec
cltd
jae
lcall
inc
pop
fs
enter
add
inc
outsl
inc
roll
mov
rol
inc
repnz
add
sbb
mov
jb
sti
push
sbb
jae
fnsetpm(287
stc
push
jle
mov
jmp
push
orb
jl
in
test
adc
ja
hlt
in
mov
aam
insl
mov
clc
or
test
sbbb
push
pop
lcall
outsb
or
inc
sbb
loop
ss
dec
cwtl
das
jl
int
adc
add
mov
ret
sti
and
inc
loope
loope
push
lods
ljmp
pushw
aas
sub
sbb
jbe
leave
mov
jae
inc
js
sti
cmc
stc
adc
cmp
shrb
sti
hlt
pop
push
mov
popf
pushfw
loop
cmp
cmp
and
jns
sti
inc
das
cli
mov
in
pop
xor
adc
fidivs
mov
lahf
pop
dec
shrb
lods
sbbl
insb
add
xchg
std
jb
outsl
or
cmp
leave
fildl
loop
out
andl
lret
mov
adcb
orl
push
cli
xchg
insb
icebp
daa
jle
int
xchg
xor
xchg
dec
jge
jl
or
les
test
rcrb
out
jp
xchg
mov
psubw
sub
popf
imul
inc
add
fdivs
pushl
scas
push
scas
push
mov
adc
push
and
lret
lea
aad
call
lcall
gs
xor
repz
int3
push
push
push
insl
cmpsl
aam
mov
cli
mov
sbb
fmull
lds
cli
sbb
andb
xchg
add
iret
sbb
xchg
mov
in
or
leave
xlat
in
lcall
jp
cmp
mov
cwtl
mov
dec
add
daa
push
sahf
mov
jg
popa
mov
out
clc
out
shlb
jp
or
xorb
clc
sahf
lods
push
fidivs
mov
push
inc
mov
pusha
add
adc
jns
and
jns
mov
mov
jbe
xchg
stos
inc
scas
dec
cmp
not
leave
pusha
add
out
sub
movsl
in
cwtl
das
sub
mov
clc
sub
jmp
dec
outsb
push
pop
insb
call
mov
inc
dec
test
jnp
mov
popf
mov
add
andl
mov
daa
cmp
js
fcompl
sub
cmp
mov
andb
mov
scas
leave
insb
mov
fwait
lods
inc
fstp
mov
mov
push
mov
lret
sbb
jns
movsb
jecxz
mov
jnp
out
mov
mov
ret
icebp
fnstenv
adc
sbb
lahf
fistpll
es
mov
add
in
adc
test
sub
sbb
mov
mov
lcall
and
in
addl
xchg
sub
dec
repnz
ror
dec
std
into
xchg
dec
jl
shrl
fwait
dec
add
outsl
mov
xchg
jg
popf
mov
jae
inc
pop
cld
jne
cmpsb
lret
jle
sbb
mov
stos
adc
imul
xor
dec
cli
push
xchg
sub
cld
xchg
pushf
test
popf
xor
stc
dec
out
push
jecxz
test
add
or
mov
bound
mov
out
dec
pop
xor
mov
mov
out
sti
testl
std
jge
and
xchg
lds
mov
movsl
mov
pop
sub
iret
aaa
nop
ss
or
sbb
push
cmp
loopne
sbb
iret
add
xor
and
adc
or
hlt
or
out
test
push
stos
mov
cwtl
sahf
decb
in
mov
xor
push
mov
out
daa
lcall
xchg
daa
sbb
mov
cmp
inc
sub
xchg
mov
lret
mov
sub
xor
cmpsl
jbe
out
sub
inc
fdivr
int
mov
xor
xor
and
cmc
loopne
int
dec
sbb
dec
outsb
sub
pop
xchg
jbe
repnz
popf
or
movsb
mov
pop
xor
call
inc
rcl
jne
mov
aad
inc
jo
fcoms
pop
dec
in
movl
mov
cmp
xlat
outsl
push
or
push
jbe
lea
xchg
hlt
push
or
xor
and
ljmp
jno
inc
dec
push
call
push
in
mov
push
aam
jne
mov
inc
outsl
xor
lods
or
sub
pusha
decl
xchg
adc
cmp
jne
out
mov
lds
mov
mov
dec
loop
mov
pop
mov
sahf
lea
ret
fnstcw
stc
aas
xor
jle
out
xchg
lds
pop
jmp
test
jbe
xchg
pop
mov
subb
arpl
mov
sub
stos
xchg
js
mov
sub
adc
push
xor
call
das
sbb
ficompl
xchg
mov
mov
mov
add
orb
push
pop
imull
popa
mov
dec
je
sub
sub
inc
into
pop
insl
hlt
addr16
icebp
jg
sti
cld
cli
pop
je
jmp
add
enter
inc
jo
cli
xchg
insl
mov
pop
ja
mov
push
out
test
cltd
xchg
sub
int
jb
xchg
sub
inc
push
and
push
pusha
xchg
push
rolb
arpl
jp
push
mov
adc
inc
push
add
xor
loop
xchg
mov
pushf
cmp
mov
fnstenv
movsb
shlb
adc
test
pushf
pop
mov
add
mov
fldenv
repz
and
or
mov
mov
cmp
daa
jp
xor
jl
dec
sub
clc
or
dec
shr
js
orb
cltd
xor
jno
call
out
aam
dec
mov
frstor
ds
rolb
push
imulb
mov
sbb
mov
jp
jno
cmp
out
in
loope
pushl
vmovshdup
icebp
pusha
and
dec
lods
ja
adc
outsl
imul
adc
cmp
ret
fidivl
cmp
fistpll
xor
mov
shll
dec
pop
and
add
mov
stos
ret
shl
push
test
popf
xor
push
jmp
jmp
push
idivl
xor
or
f2xm1
push
dec
shrl
lods
cld
mov
loopne
and
adc
sub
xorb
in
mov
stc
cmp
mov
mov
aad
mov
xchg
loop
dec
faddl
mov
xor
sbb
lds
repz
dec
ds
mov
in
aas
cmc
cmp
push
mov
and
aas
adc
lods
pop
xor
mov
jns
and
aaa
mov
xor
fisttpll
fadd
lock
test
insl
or
mov
je
jge
out
rorb
mov
pop
fwait
movsl
or
inc
lods
xchg
loope
cli
dec
mov
lahf
ret
jnp
lods
gs
or
out
dec
lods
jg
push
ljmp
mov
pop
sbb
mov
std
sub
dec
sahf
or
stc
ret
pop
imul
push
xor
xchg
aam
or
je
sbb
push
add
inc
add
in
mov
jmp
dec
pop
mov
in
jg
mov
movsl
sbb
sbb
aas
fsubrs
lds
stos
mov
lahf
push
jmp
sub
mov
sub
cmp
jge
inc
pop
push
jne
mov
loopne
shrb
push
fnsave
pop
repnz
jae
pop
jecxz
add
sbb
pop
mov
or
rorl
shlb
jge
stos
daa
pop
mov
ds
les
push
es
pop
in
push
popf
outsl
ss
cmp
add
sub
adc
xor
mov
out
jae
cmp
cmp
xor
cmc
jne
pop
pusha
stos
mov
adc
add
inc
inc
xchg
mov
and
xor
mov
add
divb
call
mov
out
cmp
shlb
cmp
dec
loop
pop
std
inc
and
or
imul
pop
push
mov
ja
mov
add
js
jecxz
sbb
dec
or
dec
pop
dec
adc
sbb
jge
in
movsl
sub
cmp
xchg
out
insl
stc
add
inc
pop
icebp
sbb
cmp
dec
mov
mov
pop
in
fdivs
cmp
xlat
rclb
je,pt
jo
popa
adcl
int
mov
mov
mov
mov
mov
aad
aas
imul
pop
jnp
mov
jmp
leave
cmp
ss
mov
jnp
mov
ja
into
mov
ds
mov
mov
je
sub
gs
xchg
jb
cmp
call
mov
xor
test
or
xor
lods
mov
lret
mov
ljmp
push
iret
inc
sbb
jns
cwtl
sahf
aas
add
mov
popa
icebp
mov
cmp
gs
addr16
dec
iret
aaa
adc
aaa
dec
inc
pop
jl
push
in
mov
aas
mov
and
inc
xor
and
incl
xchg
sub
gs
aas
adc
xor
cmpl
dec
loope
pushf
cli
mov
aam
xor
or
scas
mov
mov
mov
adc
rcrl
shr
adc
push
js
xchg
adc
gs
dec
mov
popa
cmp
iret
sub
and
jmp
mov
cmp
bound
sbb
imul
lods
cmp
pop
sub
push
scas
mov
push
xor
adc
push
adc
and
insl
test
sti
or
adc
cmp
pop
stc
mov
stc
sahf
sub
hlt
call
stos
sbb
mov
dec
rorl
fimuls
and
scas
push
lods
ljmp
pushf
cli
imul
or
cmc
dec
testb
sbbl
lret
enter
mov
popl
push
mov
loope
push
imul
dec
sbb
insl
mov
jp
cmp
repz
sbb
xor
dec
jg
dec
ret
data16
orl
and
daa
push
xchg
mov
dec
out
int
push
lcall
fucomip
xchg
fldl
or
cs
cmpsb
mov
das
adc
xlat
mov
das
push
mov
loop
fwait
inc
cli
mov
in
in
adc
push
jecxz
aaa
dec
test
cmp
xchg
shrb
jnp
mov
or
ljmp
gs
pop
imul
adc
es
xor
mov
inc
inc
xchg
and
adc
jno
repnz
cmp
leave
mov
inc
in
mov
jmp
sahf
pop
jle
pop
mov
lahf
loope
dec
jmp
hlt
xchg
adcl
push
jae
lret
idivl
lahf
lods
jno
xor
imul
mov
sbb
out
mov
or
mov
push
xor
js
je
sub
mov
dec
or
sub
and
movsl
clc
xor
imul
push
cmp
xor
push
push
push
and
nop
je
std
testl
dec
push
pop
popa
sbb
pop
aad
nop
mov
cmp
lret
cmp
in
dec
add
mov
je
sbb
hlt
add
data16
mov
cli
xchg
and
popa
xor
call
cmpl
in
shll
and
mov
sbbl
mov
adc
imul
dec
ljmp
movsl
mov
stc
je
pop
inc
sti
dec
addr16
cltd
jb
cwtl
inc
cmp
idivb
add
popf
imul
aad
cmpsb
xchg
lret
jnp
xchg
push
push
into
in
lock
repz
adc
mov
push
into
fldt
js
inc
stos
add
jle
enter
xchg
cmpsl
shll
out
fs
out
xchg
xchg
ja
sbbb
push
shlb
sti
cmp
mov
dec
mov
loopne
cmpsb
mov
dec
mov
fists
mov
daa
push
stos
addr16
icebp
fs
xor
mov
out
aaa
push
fsubr
mov
stos
jle
mov
ds
sahf
cmp
and
mov
add
aam
or
adc
subb
push
sub
add
arpl
or
call
cmp
inc
stos
xchg
jle
inc
mov
jg
fcmovb
out
inc
shlb
mov
pop
out
arpl
push
mov
sbb
addr16
mulb
pop
nop
daa
mov
subb
scas
adc
mov
push
mov
cmp
mov
pushf
bound
orl
fistpl
cli
jecxz
and
jl
push
repnz
std
or
push
add
loope
lret
add
cmp
aad
inc
or
sbb
jecxz
fidivl
push
add
pop
aad
out
repz
add
rcr
jbe
sub
call
adc
xor
adc
push
ljmp
jno
or
pushf
cltd
stc
loop
sub
mov
add
test
lret
hlt
hlt
mov
scas
mov
jbe
jb
loopne
imul
shr
cmp
jns
mov
dec
jne
aas
test
jnp
lods
mov
lea
cs
lds
inc
lcall
cli
push
jbe
aaa
push
fbld
jl
mov
iret
popa
sub
adc
push
outsl
decl
sahf
jmp
std
mov
test
repz
in
push
xlat
idivb
jle
out
popf
adc
ja
test
cs
pop
sti
xchg
cmp
mov
rolw
pop
push
xor
mov
clc
movsl
push
mov
sub
xor
dec
cs
mov
roll
sub
mov
xlat
mov
pop
pop
sub
scas
leave
test
inc
sub
adc
dec
mov
or
pop
xor
cli
data16
jae
xchg
test
cmp
je
jge
or
mov
int3
pushf
sub
cmpsb
push
icebp
leave
add
pop
sub
dec
aam
xchg
in
hlt
cltd
int3
push
mov
shlb
idivl
rcr
pop
mov
movsl
mov
pusha
imul
pop
outsb
dec
jo
jge
lahf
or
lcall
movsb
xlat
and
bnd
mov
jne
aas
scas
jno
adc
push
popa
adc
std
or
das
jle
mov
cmp
add
stc
pop
xor
loopne
xor
inc
jmp
xchg
xchg
loopne
cmp
adc
ja
sub
xchg
fwait
out
mov
out
ret
arpl
dec
pop
add
jae
fwait
xor
dec
loop
push
mov
test
mov
fdivl
shlb
mov
int
ja
and
mov
fsubs
stos
and
xchg
inc
mov
das
mov
xchg
sub
fs
sarb
minps
mov
xor
divl
and
pop
test
xor
mov
ret
cmpl
or
dec
pop
into
fsubr
push
mov
push
xor
es
imul
lcall
aad
faddl
xor
sub
call
inc
cmpsl
push
sbbl
push
mov
js
lods
fnsave
and
cs
popf
shl
mov
scas
jmp
sbb
jp
loopne
xchg
test
movsb
int
xor
add
push
push
mov
pop
adc
and
nop
dec
gs
inc
sbb
es
sbb
jnp
jg
inc
lds
lret
lret
out
add
cmc
dec
cmp
dec
lahf
mov
pusha
mov
sub
mov
arpl
xchg
and
mov
mov
shrl
sbb
mov
adc
int3
jno
jmp
shlb
adc
leave
fnstsw
xchg
pushf
add
xchg
popa
fmul
aam
enter
fsubrl
add
repnz
xchg
xchg
rcr
inc
fmull
sbb
sub
repnz
frstor
fstpt
imul
xlat
jl
rcrl
movsb
pop
nop
lds
jo
mov
sbb
std
add
xchg
je
fsubl
addr16
xchg
pop
adc
inc
fdivs
pop
pop
dec
shlb
sub
cmp
fwait
imul
cmp
pop
imull
ret
hlt
ljmp
jb
pop
xchg
ss
popa
cli
pushf
int
cmpxchg
ljmp
adc
ficoms
jno
test
aam
ss
mov
sbb
sub
push
adc
mov
fnsave
add
adc
and
mov
sbb
add
inc
out
add
mov
push
xlat
aam
pop
leave
flds
out
pusha
inc
pop
push
inc
push
sarl
dec
sbbl
cmpsb
pop
cmp
scas
dec
mov
cmc
and
vpsllq
and
jo
stc
jbe
and
fstl
adc
adc
int3
xchg
subl
ljmp
mov
mov
fwait
out
cmp
sub
enter
mov
shll
popa
cli
in
push
or
jo
fstl
mov
stc
cmp
fs
popa
arpl
pop
mov
cld
mov
mov
scas
mov
ret
repz
or
ljmp
pop
cmp
mov
pushf
aad
and
cmp
jnp
xor
fdivrl
leave
out
test
adc
mov
mov
pop
pop
jnp
in
dec
cmp
xlat
sub
enter
ror
push
xchg
in
mov
xchg
mov
push
pop
test
sub
shlb
rol
mov
pop
dec
repz
inc
push
cmp
inc
or
negb
aam
in
rcrb
test
mov
pop
rclb
js
and
sub
dec
aaa
mov
mov
aaa
imul
jbe
mov
adc
sbb
xchg
or
xor
bound
std
xchg
test
popf
ficompl
ljmp
mov
push
push
inc
shll
std
lret
adc
loopne
inc
pop
fiaddl
icebp
or
sti
lahf
mov
adc
out
push
nop
ja
dec
das
shll
dec
mov
add
jns
ds
adc
adc
push
add
adc
xchg
cmpsl
lds
inc
insb
scas
jmp
mov
shr
int3
jle
int
sub
inc
pop
out
pop
lret
adc
or
pushl
sub
add
cmp
adc
or
xor
test
inc
inc
arpl
jge
sbb
add
pop
or
jb
movsl
ret
xchg
adc
stc
inc
inc
jno
sub
lods
insb
jge
ss
lods
xchg
inc
push
stos
jmp
popa
adcb
test
add
lahf
sub
movl
push
std
rcrl
popf
divps
fstpt
lods
movsb
lret
add
mov
adc
xchg
adc
pop
sbb
in
movsl
adc
aad
and
fstpl
mov
leave
ds
shrb
insb
mov
pop
pop
xor
jae
jecxz
adc
cmpsb
or
mov
mov
pop
fbld
imul
movsl
pusha
and
aad
ret
js
pop
sahf
mov
push
jmp
pop
stos
lods
jge
pusha
testl
hlt
data16
iret
std
xchg
jnp
int
sbb
and
popa
or
mov
inc
xchg
lock
cmovno
lea
xor
xlat
mov
push
stos
in
aam
fistpll
xorl
xchg
or
inc
lea
sub
call
push
test
icebp
out
mov
lea
aam
xor
pop
popa
sub
cmpsb
cmc
pop
je
mov
pop
sub
call
dec
fstp
push
cmp
iret
cmpsb
mov
and
lret
loop
jmp
into
inc
jb
inc
pushf
lock
cmp
ret
sub
aaa
dec
pusha
enter
xor
in
jle
movsb
jmp
pop
cmpsl
cmpsb
mov
jnp
mov
lock
jno
sub
add
xor
outsb
jle
cli
push
pop
leave
fs
push
sub
cmp
cmp
jo
fisubrl
mov
jmp
cmp
inc
mov
popf
push
call
mov
push
fnstenv
fisttpll
dec
cmp
pop
repnz
jnp
addb
mov
loopne
icebp
lock
mov
or
push
or
or
xor
in
jge
jbe
pop
ja
sub
enter
cmc
sbb
mov
mov
inc
test
iret
pop
sbb
insl
shll
shll
aam
ret
repz
xor
xor
push
adc
push
daa
aad
adc
test
arpl
rolb
adc
inc
lret
and
movsb
mov
lods
pop
xchg
cmpsb
jns
add
xchg
jle
mov
push
repnz
or
sahf
repz
jle
add
xchg
les
push
add
in
rcl
sbb
inc
andb
sub
shrl
jmp
add
mov
cmc
push
jbe
add
cmp
imul
pop
jle
aad
mov
sbb
nop
pop
dec
stos
push
mov
frstor
cmp
sub
cwtl
jle
adc
jnp
rcrl
cmpsb
fwait
mov
pushf
cwtl
popf
adc
sub
sahf
into
loope
jl
push
call
mov
xchg
test
lret
sti
adc
fldl
int3
inc
sbb
nop
nop
jae
femms
jb
das
cmpsb
arpl
jl
shr
aaa
pop
or
dec
mov
rcr
repz
dec
cmp
shll
dec
repz
bound
xchg
test
jno
stos
dec
fmull
pop
mov
add
in
dec
dec
scas
idiv
adc
ret
mov
notl
dec
call
inc
lods
loop
lret
vprotb
push
mov
out
push
add
cs
popf
push
mov
pop
sbb
test
in
andl
repz
or
int3
fidivs
push
and
mov
adc
lcall
jnp
jmp
mov
lret
cmpsl
sbb
mov
lds
clc
sbb
inc
clc
call
xchg
movsb
push
scas
std
andl
mov
aaa
mov
std
data16
nop
jle
inc
out
pop
sub
ffree
jecxz
ja
fsubrp
and
jno
mov
pop
out
mov
in
inc
repnz
cmp
movlps
mov
xchg
dec
inc
inc
fwait
shrb
lcall
jne
push
fidivrl
push
add
mov
sbb
inc
lds
imul
or
jb
ret
xchg
sub
sub
in
ret
rol
loopne
insb
test
iret
pop
or
negb
int
cltd
dec
push
adc
mov
mov
sbb
mov
fimuls
lahf
push
orl
jb
aas
jg
jecxz
lods
mov
jne
test
std
or
adc
outsb
inc
loop
push
ds
xor
pop
fdivl
int3
xchg
cs
ja
lcall
cltd
pop
and
adc
cmp
ljmp
mov
scas
fsubs
cmp
dec
nop
daa
jg
or
fs
lcall
jg
in
les
cmp
push
cmp
jmp
cmpl
pusha
sub
ret
mov
popa
sti
push
pushf
fisubrl
cs
loope
outsb
pushf
fistpl
mov
pop
ja
ret
and
xor
imul
cmp
ss
jns
std
ret
push
cli
pop
mov
jl
popf
dec
pop
mov
push
push
push
in
sub
mov
lods
push
outsl
jns
jne
mov
loop
lret
add
sarb
lock
popf
pop
hlt
sbb
loop
sbb
jl
mov
jle
and
stc
aaa
out
ljmp
or
fwait
adc
sahf
aam
xchg
mov
jnp
sub
iret
pop
out
pop
adc
inc
push
cmp
fstpl
out
movsl
mov
pop
outsb
sub
sub
pop
pop
lahf
cs
and
sub
jne
fisubrl
loop
dec
lret
add
mov
fs
test
loopne
lcall
push
in
mov
stos
cmp
icebp
mov
les
cld
pop
mov
inc
aas
sti
jo
stos
mov
xorb
pusha
out
dec
out
lret
arpl
insl
mov
mov
shrb
xor
addr16
sbb
jne
rcll
dec
jb
xchg
dec
xlat
and
or
push
fimull
add
call
mov
div
adc
add
and
or
cli
xchg
mov
popf
cltd
mov
stos
mov
mov
adc
dec
shr
lahf
ds
adc
or
jg
sub
ret
test
imul
jo
out
adc
sub
bound
iret
fnstsw
shll
sub
mov
dec
test
adc
out
jno
xlat
xlat
inc
aas
gs
sub
jae
incb
push
ja
lds
pop
popa
xor
fstpt
call
test
daa
jmp
in
icebp
loopne
or
pop
lahf
pop
in
scas
mov
push
int
insb
dec
push
in
ret
cmpb
push
lcall
data16
in
push
ljmp
jo
xchg
or
filds
scas
push
lcall
or
cmp
ds
popa
and
ss
repz
lods
js
xchg
inc
jp
dec
jecxz
jle
add
pop
sub
pop
shrl
ret
fimuls
jb
ss
movsl
lds
lods
sbb
pushf
gs
imul
popa
sbb
pop
repnz
pop
xchg
cmpsb
adc
pop
orl
scas
jne
daa
sub
xchg
mov
and
xor
dec
dec
xor
push
rcrb
fnstsw
rcr
out
mov
cbtw
inc
cwtl
cmc
es
ljmp
mov
xchg
or
inc
xchg
es
sbb
lods
mov
mov
push
shrb
mov
cmpsl
pop
dec
lds
mov
or
nop
dec
add
adc
add
fs
cmp
add
mov
ret
jg
insl
push
mov
jno
test
mov
jo
dec
push
jno
mov
lret
loopne
lret
sbb
mov
out
sbb
jno
into
cld
cmpl
or
ss
push
sub
ja
fmuls
dec
ret
bndstx
mov
cwtl
or
and
das
pop
clc
cwtl
add
sbb
pop
jno
lods
ljmp
pushf
sti
dec
jle
andl
mov
cltd
arpl
out
imul
sub
inc
lods
mov
pop
stos
ret
repz
sub
test
or
pop
lcall
je
out
int
and
push
lcall
out
pop
xchg
mov
rcrb
inc
add
dec
out
jmp
in
adc
inc
iret
adc
jmp
add
outsl
mov
repnz
pop
pop
or
xchg
adc
call
mov
jge
xor
test
xlat
daa
push
nop
je
jg
mov
mov
aam
shlb
ret
outsb
lcall
std
adc
push
adc
and
fimuls
cld
addr16
leave
and
rolb
dec
push
jmp
fidivrs
rcrl
sbb
dec
sarb
or
ret
jnp
jns
or
clc
and
pop
and
js
fcomps
mov
mov
adc
ret
fwait
cltd
loop
xchg
cmp
adc
stos
mov
aas
shll
imul
aad
or
cmc
mov
sbb
int3
outsb
inc
sbbl
aam
xchg
mov
ss
shll
inc
mov
sahf
add
inc
inc
rclb
jmp
jg
push
fdivs
jb
sub
jg
int
mov
xor
hlt
pop
mov
jae
pop
sub
mov
pop
sub
adc
jg
sarl
xchg
stc
mov
cwtl
sbb
jb
jnp
mov
jl
loopne
dec
fstl
push
aas
cltd
xor
xchg
cmp
mov
out
scas
and
xchg
insb
repz
dec
movsl
xchg
push
call
mov
bound
frstor
or
loop
std
lods
mov
je
mov
outsl
pop
and
mov
mov
stc
fucomp
aaa
ror
mov
adc
loop
sub
push
inc
mov
push
inc
push
cmp
jecxz
cld
das
or
repnz
movsl
or
icebp
test
inc
lods
das
jns
sarl
das
je
sbb
das
mov
bound
sbb
adc
dec
push
aas
fistps
lret
push
call
jmp
ffreep
data16
cmc
or
push
adc
mov
hlt
add
mov
mov
movsl
mov
sub
out
mov
stc
adc
pop
add
nop
xlat
jae
xor
mov
insb
mov
xchg
outsb
push
inc
movsl
std
lods
xchg
out
lea
pop
sub
mov
push
pushf
popa
lret
nop
sub
aad
sbb
sbb
jbe
cmp
inc
and
cs
dec
testb
dec
rcr
add
popa
std
rcrb
xor
mov
mov
xchg
arpl
das
cld
mov
ljmp
and
fimull
xchg
fcomps
hlt
push
stc
nop
mov
ficoml
xor
ds
loop
sbbl
mov
js
sub
pop
dec
sub
xchg
loop
xor
pop
movsb
xor
inc
cmpsl
paddusb
push
mov
push
xor
sbbb
pop
mov
xor
adc
dec
fwait
xor
mov
adc
mov
inc
dec
fwait
clc
stos
int
int
pop
addr16
xchg
inc
ja
dec
cmpb
xor
out
xchg
dec
mov
push
cs
ror
icebp
clc
adc
clc
cmp
es
cmp
fwait
mov
filds
stos
jmp
jo
jns
les
iret
add
add
and
push
cli
pop
inc
mov
dec
sub
clc
std
or
fildll
jmp
out
pop
sahf
clc
adc
movsl
or
sti
push
mov
icebp
xor
adc
call
sub
pop
dec
cmp
xor
aam
pop
pop
bound
outsl
adc
int
push
and
icebp
test
or
leave
in
fucomi
sahf
mov
fdivrl
adc
and
xchg
out
mov
xor
insb
js
mov
or
fmul
andl
ds
mov
pop
xor
inc
shl
dec
mov
push
cmp
mov
jne
cmp
in
mov
jno
xor
dec
loopne
in
sub
aaa
sub
cmpb
enter
aaa
pop
std
lods
mov
xor
adc
pop
mov
aas
stos
leave
arpl
lahf
neg
pushf
scas
sbbl
and
jno
mov
cmpl
jecxz
jmp
jb
test
and
insl
call
xchg
addr16
imul
fnsave
addr16
insb
fld
pop
dec
insl
inc
test
fisttps
mov
fnstcw
and
jg
sub
outsb
add
xchg
repz
and
and
pusha
aas
inc
push
out
push
sbb
cmpsb
scas
lea
outsb
mov
les
ss
out
adc
xchg
in
scas
dec
faddl
pop
in
nop
sbb
add
pop
push
inc
stos
adc
push
call
xchg
outsl
je
adc
pop
xchg
ljmp
sub
pop
es
mov
fmull
inc
mov
clc
push
xor
loopne
inc
ficomps
stc
lret
addr16
dec
jecxz
adc
scas
lods
pushw
mov
cwtl
popa
and
mov
sub
ljmp
mov
and
mov
cmp
imul
stos
xchg
adc
cmc
sbb
adc
pop
lcall
mov
popa
inc
lea
push
test
lret
jb
movsb
cmp
mov
jle
in
jge
or
and
cmp
cmpsb
shlb
sub
ret
add
mov
into
mov
sbb
sub
jo
popf
xor
adc
push
enter
sub
pop
or
es
adc
setl
add
sti
shr
jmp
pusha
cmpsb
insl
pop
push
rep
iret
popf
mov
rolb
pop
repnz
js
pop
scas
jns
cmp
push
mov
jns
aam
shrb
add
je
or
iret
xor
xchg
pop
pop
ss
fs
pop
mov
and
adc
sbbl
aas
adc
cmp
inc
mov
test
shlb
sub
adc
mov
jp
or
pminub
cltd
xor
inc
ja
filds
adc
inc
fisubl
enter
lds
outsl
iret
pop
icebp
call
js
push
pop
xor
jb
lret
bound
and
mov
adc
movsb
test
or
cmpsb
or
mov
jbe
pop
shl
and
dec
rorl
jbe
jnp
pop
mov
push
pop
idiv
jne
rorl
mov
or
imul
pop
icebp
jg
insl
nop
xchg
mov
ljmp
push
mov
out
adc
sub
popf
mov
cli
das
data16
lret
mov
stc
mov
xchg
sbb
aam
mov
mov
xor
mov
fists
out
mov
dec
and
or
pushf
aam
jecxz
mov
pop
and
sarl
clc
jae
adc
cmp
call
inc
shlb
nop
xchg
cmpsb
xor
rorl
mov
cmp
sbb
in
add
arpl
addl
out
cmpsl
xchg
push
sub
js
cmp
inc
sbb
insb
jne
test
dec
stos
leave
mov
clc
jp
jecxz
into
xor
aad
cmp
xchg
clc
pushf
sbb
add
std
xor
enter
adc
xchg
sbb
out
lret
outsb
or
jnp
mov
mov
cmp
xor
inc
sub
or
xor
shrl
stos
les
mov
push
test
sub
mov
daa
sub
insb
push
les
xlat
std
xchg
sbb
lds
pusha
xor
fs
push
repz
xchg
mov
bound
xchg
aad
push
shll
in
shr
ret
xchg
call
and
inc
xlat
mov
xchg
es
jecxz
sbb
or
sarl
jg
dec
mov
pop
cmc
lods
out
cmp
cmc
pop
mov
and
jle
xor
lahf
stc
push
or
std
fldenv
fiaddl
in
and
hlt
mov
jecxz
pop
mov
aad
mov
add
out
push
push
jne
cs
mov
repnz
jne
sbb
or
xor
sub
outsb
dec
bound
or
push
adc
sbb
jmp
es
fwait
lock
js
xchg
inc
push
inc
call
cmp
push
adc
js
xor
sub
movhlps
sbb
dec
iret
add
aas
xor
jmp
mov
clc
lods
fisubl
mov
stos
iret
pop
out
xchg
lock
or
call
push
outsl
xor
push
jge
inc
scas
aas
inc
push
cltd
lods
cmpsl
out
xor
movsb
mov
or
jg
stos
inc
iret
jnp
ja
jno
sbb
sahf
addr16
clc
pop
sbb
add
xor
mov
inc
mov
push
push
divb
and
cmp
cmp
inc
push
mov
jmp
cwtl
pop
pop
mov
jns
or
inc
push
cmp
jns
mov
adc
or
push
insl
in
aaa
cs
sub
pop
mov
add
stos
mov
mov
sub
dec
or
hlt
mov
mov
outsb
mov
sbb
mulb
sti
or
rcrb
jg
jno
repz
pop
mov
leave
or
shlb
mov
push
sub
dec
xor
in
icebp
inc
pop
pop
ljmp
movsb
adc
mov
pop
adc
test
arpl
dec
cmp
push
dec
pop
mov
in
xor
sbb
inc
jnp
lcall
dec
add
stos
mov
pop
imul
xor
add
shll
add
push
lret
shlb
cmpsb
sub
push
sbb
and
pop
jge
adc
cmpsb
dec
pushf
inc
hlt
mov
test
jmp
push
sbb
mov
or
cs
push
push
xorb
in
mov
xchg
pop
inc
jl
pusha
js
jnp
shlb
inc
add
aas
loop
test
scas
adc
or
jmp
push
aam
cmp
inc
test
aas
stos
or
js
cwtl
mov
push
jp
xchg
mov
xor
xor
imul
in
pop
lret
rcrb
notl
or
fcomps
pop
testb
repnz
inc
push
jae
sub
stc
pop
inc
inc
dec
repz
mov
loopne
push
lods
inc
inc
repnz
push
call
fadd
fldenv
jmp
cs
int3
mov
cmpsl
je
lret
xchg
push
aad
sub
cmp
shll
stos
nop
dec
add
arpl
push
fildl
int3
xchg
sti
xchg
xchg
sbb
mov
cmc
mov
push
pop
lret
cmp
fstps
fstpl
or
add
mov
testb
lock
movsb
loopne
daa
jp
faddl
addl
mov
rorl
pop
sbb
or
pop
mov
mov
cwtl
repnz
fwait
jecxz
pop
and
push
outsb
jo
dec
loop
popf
xor
loope
ret
push
xchg
push
adc
imul
rorl
insb
shrb
popf
js
fisubs
pushl
jne
ror
pop
add
adc
test
in
ret
lahf
mov
and
int3
fcoml
add
pop
ss
push
push
enter
ss
mov
andl
adc
fs
mov
sbb
cli
jae
fdiv
lahf
ret
pop
jg
call
js
fcomp
jne
jmp
mov
push
sbb
ja
xor
ret
test
push
push
das
xchg
fisubs
jo
enter
mov
mov
jg
insb
ret
xchg
xchg
lods
mov
cmp
rolb
sbb
jmp
fstps
in
jmp
jp
mov
sbb
rolb
mov
push
cmp
clc
add
int
and
push
push
jns
jle
fucomip
jns
fiaddl
pop
int3
rcll
lret
je
push
inc
dec
sbb
xor
mov
testb
add
outsb
cmp
lahf
call
xlat
sbb
out
jnp
push
testl
mov
int
sub
cld
aaa
push
xchg
xor
add
sbb
push
cmc
mov
shrl
or
popl
lods
ljmp
cli
push
movsb
xor
jmp
pop
push
clc
jb
mov
xchg
jnp
add
scas
testl
cmp
aad
lahf
cmpsb
mov
pop
faddp
hlt
int
lea
and
jbe
push
inc
inc
lea
cmpsb
xchg
arpl
test
dec
pop
jp
vpunpcklqdq
rorl
stos
test
fmull
loopne
into
and
adc
push
or
add
je
pop
out
ss
mov
sbb
ret
addr16
sub
in
sbb
cmovbe
dec
mov
sub
xorb
dec
fdiv
mov
ss
xor
das
adc
jns
in
mov
sbb
jmp
inc
mov
jbe
das
push
mov
push
dec
pop
inc
int
call
pusha
mov
in
sub
jg
jmp
cwtl
pop
add
pop
ljmp
pushf
in
xor
stos
add
push
jae
or
add
xchg
mov
shll
lcall
movsl
movsb
cmp
lcall
pop
jecxz
shrl
sar
or
inc
add
std
xchg
fdivrl
inc
adc
xchg
inc
mov
add
insl
popf
pusha
adc
lock
lret
bound
xchg
and
jbe
stc
dec
std
push
push
loop
outsl
adc
loopne
incb
sub
sbb
adc
in
scas
and
sub
out
cltd
aam
inc
leave
jmp
sti
stos
test
mov
sub
loopne
and
push
out
inc
loopne
clc
mov
mov
xchg
adc
jle
push
xchg
mov
nop
and
xchg
mov
inc
pop
xchg
xchg
pop
test
adc
pop
repnz
adc
sub
pop
add
inc
mov
lods
outsl
or
into
subl
loopne
push
mov
or
push
push
ljmp
sbb
mov
push
lret
or
inc
loopne
mov
add
and
scas
jb
or
sub
push
push
clc
lret
cld
stos
mov
pop
dec
jns
mov
push
cmpsl
insb
outsl
pop
mov
xchg
hlt
mov
jg
xchg
inc
push
jae
jne
pop
cmpsl
aam
inc
mov
mulb
jmp
push
popf
pop
or
push
rcrl
outsl
jae
imulb
mov
pop
pop
pushf
add
and
addr16
cli
pop
jne
or
inc
cmpb
xchg
popf
cmpsb
outsl
rorl
stc
nop
cs
mov
scas
jp
jb
add
je
inc
popa
xor
out
mov
fsubrs
xchg
gs
push
test
into
mov
ret
jle
adc
in
add
cmpsl
pushf
js
sbb
hlt
sbb
xchg
adc
xchg
fcmovnb
xchg
adc
cld
sbb
add
rolb
jb
loope
adc
push
rcr
dec
sahf
xchg
cmp
mov
mov
aas
pop
mov
pusha
adc
pop
fisttps
es
or
jne
std
push
mov
and
mov
fwait
jl
dec
add
sub
mov
jb
push
mov
aas
mov
sarb
lret
das
ljmp
mov
push
xlat
and
lea
outsb
sub
in
sbb
pop
add
sbb
test
xchg
xor
daa
jp
xor
inc
push
adc
lret
sbb
sbb
sbb
ja
mov
or
and
rcrb
cmpsl
lds
scas
or
and
sbb
icebp
mov
cmp
pushf
cmp
lret
popa
pop
in
shlb
ret
mov
dec
dec
pop
jmp
out
lods
jo
pop
fisubl
lret
xchg
pop
and
mov
mov
shlb
repnz
clc
or
aam
aam
push
std
sbbb
loopne
inc
fmull
je
idivb
fstpt
or
pop
mov
push
std
imul
fwait
or
shll
ljmp
leave
jne
fisubl
lea
loopne
add
test
repz
bnd
testl
push
add
daa
add
xor
test
adc
mov
scas
arpl
push
dec
lret
bound
ja
sti
sbb
and
cmp
adc
mov
push
and
scas
push
je
shl
push
daa
out
sahf
popf
inc
int
jbe
movsl
icebp
mul
adc
out
sub
mov
xor
arpl
mov
iret
aaa
test
and
pop
setle
or
clc
dec
jns
xorb
dec
enter
push
jmp
ljmp
dec
or
mov
imul
pushf
and
xor
jmpw
jnp
iret
outsb
sbb
pop
in
adc
in
and
shlb
enter
mov
fimull
xor
movsl
dec
and
adc
sbb
xchg
imul
cld
sarb
cld
xlat
push
and
mov
xchg
add
jge
cmpsb
les
adc
fadd
out
stc
int3
mov
jb
orb
push
and
inc
or
addl
fs
test
in
push
stos
or
in
lods
mov
mov
adcb
pop
cld
test
jb
sub
cld
push
insl
dec
adc
xchg
stc
imul
test
push
adc
jo
cmc
adc
in
outsb
push
arpl
sub
sarl
jmp
int3
or
cmpl
leave
movsl
shr
daa
add
sbb
xor
add
fmuls
or
push
mov
aam
mov
add
cld
xchg
pop
int3
xor
fs
xorb
jg
movb
loope
mov
ret
mov
scas
mov
in
aas
out
pop
jmp
cli
dec
mov
scas
lock
and
cmovg
fucomp
decl
adc
dec
pushf
test
add
mov
add
ud1
clc
nop
jle
outsb
loope
adc
jg
stc
push
pcmpgtb
xor
xorl
test
dec
pop
xorl
popa
sub
jb
adc
add
fidivs
mov
jmp
sahf
pop
stos
out
xchg
mov
jg
and
push
nop
xor
pushf
xor
sbb
fwait
sbb
shr
jmp
xor
jbe
rorl
adc
xchg
mov
in
sbb
cmp
mov
imul
inc
lcall
aad
test
or
dec
je
mov
mov
cmpsl
shl
loopne
mov
sbb
and
sub
mov
cmp
jbe
aas
inc
add
pop
popf
mov
adc
ret
imul
and
addr16
mov
iret
mov
mov
scas
loop
shrb
push
pop
cmc
pop
sarb
idivl
call
sbb
mov
add
subl
dec
pop
ljmp
push
jae
inc
inc
inc
xchg
xor
inc
and
jb
fwait
xchg
xchg
mov
imul
mov
lcall
and
pop
lret
lock
add
or
mov
sub
xchg
scas
and
fcmovu
cmp
cs
dec
es
mov
push
mov
pop
mov
daa
xor
aam
dec
mov
pop
shr
gs
or
dec
push
repnz
push
xchg
mov
test
or
das
cmp
adc
ss
call
lret
push
in
sbb
lds
jnp
imul
lcall
pop
mov
leave
inc
inc
xor
push
in
xchg
push
or
pop
mov
rolb
insb
jnp
add
cli
inc
push
sbb
push
xchg
push
xchg
jl
lret
jae
stc
popf
test
inc
jmp
insb
push
adc
sub
repz
stos
and
adc
xchg
sbb
adc
mov
popa
cwtl
mov
xor
or
push
push
das
xchg
adc
out
dec
adc
rorb
mov
dec
add
out
lret
nop
mov
mov
add
pop
pop
jno
xchg
addr16
fcomps
lock
dec
ss
test
xlat
sahf
mov
mov
sti
loope
adc
loopne
add
pop
or
pop
mov
sarb
cmp
insb
push
shl
fcmovnb
aas
cmp
inc
jmp
iret
das
ret
loop
nop
ds
in
sub
add
add
test
test
or
sub
das
mov
sbb
dec
mov
inc
test
rcrl
clc
add
lcall
loope
aad
xor
add
push
lods
sub
cmp
inc
call
pop
push
push
out
sub
fimuls
sub
shrl
cmp
push
mov
mov
and
sahf
enter
test
push
lock
jns
test
mov
mov
pop
mov
sub
xor
or
test
add
adcb
lds
and
pop
push
sub
xor
and
insl
fucom
xchg
pop
icebp
repz
outsl
pushf
mov
lret
add
data16
mov
pop
jle
repnz
cwtl
scas
mov
ja
shl
push
pop
sbb
cmpl
pop
rorb
xchg
call
cld
add
inc
mov
mov
cmp
or
icebp
mov
popa
xor
rcrl
ret
lcall
leave
adc
out
jns
inc
mov
hlt
and
fisubrl
add
insl
add
push
sahf
push
in
daa
aaa
into
fmuls
push
shll
pop
clc
inc
addr16
jae
shlb
jg
mull
scas
jle
roll
xor
mov
int3
in
sub
mov
or
ror
insb
pop
mov
fimuls
shll
jp
push
mov
pop
mov
out
bound
nop
jns
inc
xchg
addr16
and
push
adc
stc
jg
aaa
pop
inc
fmull
adcl
xor
std
inc
mov
aad
movsb
daa
sbb
mov
bound
mov
nop
daa
mov
fldt
jmp
mov
xlat
xor
repz
adc
pop
fs
inc
mov
xchg
fnsave
add
pop
stos
mov
movsb
bnd
cmp
mov
shl
push
add
aam
in
add
xchg
mov
mov
dec
xchg
aas
cmp
ds
test
pop
fsubrs
fisttpl
dec
sub
aas
negl
inc
fcmovnbe
addr16
dec
mov
pop
out
test
jo
mov
jne
inc
mov
push
icebp
cmp
xor
psadbw
mov
sub
jbe
jmp
pop
inc
test
imul
xor
imul
jl
shl
js
dec
cmp
scas
mov
shlb
mov
adc
call
scas
mov
sti
push
add
cmc
ret
adc
into
jg
loopne
leave
insl
and
scas
ret
fs
jle
xor
push
add
cmp
pop
sbb
das
lret
pop
push
add
loop
xchg
mov
dec
mov
add
mov
mov
popa
inc
sbb
or
call
jno
ret
loope
lcall
cltd
push
stos
mov
pop
addb
xor
push
in
rorl
add
push
cltd
xchg
cltd
jle
jae
clc
movsb
out
xchg
mov
icebp
mov
mov
and
or
pop
std
jbe
xor
aaa
stos
sbb
in
adc
nop
shrb
or
cmpsb
and
push
push
cmp
adcl
xchg
icebp
mov
cwtl
das
stos
inc
jne
jp
sbb
pusha
dec
mov
jnp
cmp
mov
sub
push
iret
es
cmp
dec
inc
dec
test
or
or
jecxz
in
cmp
push
sub
pop
ds
adc
inc
push
add
lods
daa
out
sbb
lret
push
addr16
cltd
or
push
pop
sbb
pop
cmp
test
cmpl
cmp
jmp
push
gs
nop
mov
sub
dec
push
mov
jns
mov
cmc
mov
test
fmuls
or
fs
jle
ret
bound
or
pop
or
push
cmpsl
jbe
inc
jbe
jae
sti
xlat
cld
mov
push
xlat
icebp
mov
call
pop
inc
outsl
or
out
loopne
cld
or
and
mov
out
jno
cmp
ljmp
shll
add
daa
js
xor
das
fcmovb
jae
mov
in
leave
sub
testb
push
hlt
cmp
xchg
lea
adc
inc
adc
sub
dec
xchg
cli
and
in
cmp
and
pop
leave
int
xchg
dec
in
cmp
es
jmp
add
push
hlt
fldt
xor
mov
popa
cld
icebp
push
sub
ret
iret
lret
mov
and
test
dec
lahf
jmp
push
addr16
xchg
mov
mov
mov
mov
test
lret
iret
pop
in
xchg
pop
adc
mov
shrb
fadd
fnsetpm(287
jge
out
mov
hlt
sysret
sahf
aas
add
and
rorl
inc
fstpt
hlt
mov
pop
ret
bound
mov
push
out
adc
xchg
repnz
out
cmp
jp
addr16
mov
push
cmpsb
push
or
sub
or
and
adc
mov
scas
mov
adc
jnp
xchg
scas
mov
sub
cmp
push
pop
or
das
stos
scas
and
leave
dec
popa
mov
inc
in
sub
xor
jg
fsubrl
popa
filds
call
cmpsb
into
inc
stos
leave
pop
clc
shlb
test
addr16
jecxz
js
sub
pop
mov
xchg
xchg
push
adc
and
cmp
out
lret
pushf
xor
in
mov
ds
das
jle
fldcw
cmp
daa
mov
mov
sbbl
mov
xchg
daa
into
mov
mul
out
scas
and
lods
mov
mov
push
mov
sub
repz
int3
popa
in
push
xchg
in
sub
mov
mov
jle
xor
jae
push
jge
adc
insl
sbb
outsl
dec
mov
adcb
push
mov
sbb
dec
bound
xor
dec
jmp
out
out
adcb
nop
mov
pop
cmp
cltd
mov
or
mov
adc
mov
or
insb
arpl
scas
xorl
jnp
test
inc
cltd
out
test
lret
repnz
repz
push
and
nop
sub
push
pushf
subl
cmp
testl
fmul
inc
inc
jp
sbb
imul
outsl
lock
les
in
pushf
mov
sahf
xchg
xlat
stos
jl
pushf
arpl
pop
cmp
inc
mov
rol
sub
cmp
mov
xchg
push
push
xchg
dec
inc
dec
call
inc
add
pop
das
shl
lret
dec
psubw
sub
test
sahf
jae
hlt
bound
ret
rolb
popl
lods
ss
out
jp
into
and
add
cmp
push
fdiv
lahf
fmulp
aas
shll
ljmp
cmp
cltd
sub
aas
push
adc
les
mov
pop
test
les
fadds
sub
mov
mov
dec
movsb
xor
daa
push
aad
addl
xchg
sbb
mov
aam
adc
data16
pop
xor
orb
ljmp
add
and
les
push
ret
push
or
push
mov
mov
add
fstl
call
sub
dec
lods
adc
fcompl
lahf
cmp
push
or
mov
push
add
movsl
pop
imul
pushf
sub
es
sti
xchg
sti
shl
inc
jmp
das
repnz
data16
mov
or
stos
test
bound
sbb
fcompl
mov
outsb
call
mov
into
add
mov
clc
mov
or
mov
sub
int
adc
push
sub
jmp
imul
mov
into
aas
push
inc
gs
inc
icebp
push
cmp
fwait
js
in
pop
iret
push
stos
mov
sahf
pop
jno
iret
pop
mov
adc
incl
xchg
ds
pushf
xor
fsubr
cs
xor
inc
in
shrb
cmpl
shl
int3
push
bound
xor
stc
xchg
lods
mov
add
daa
stos
fninit
mov
cltd
push
fstl
jb
out
jno
jmp
push
adc
popa
je
xchg
adc
add
in
and
push
xchg
mov
sbb
enter
ret
fidivs
or
in
add
push
mov
jmp
xlat
out
inc
mov
sub
pop
add
aaa
shrb
xchg
fmulp
cmpsb
inc
imul
jmp
inc
in
sti
inc
sub
incb
push
jmp
pop
dec
std
data16
dec
rcll
mov
xor
fisubrs
out
add
mov
cmpb
leave
popf
xchg
xchg
ja
mov
ljmp
adc
ror
mov
pop
add
sarb
neg
jmp
ret
add
mov
pop
xchg
rcrl
pop
fidivrs
iret
out
cmp
push
inc
ja
das
ljmp
push
hlt
push
pop
dec
fbld
ret
and
sbb
loope
sub
pop
xor
mov
cmp
push
inc
jo
ucomiss
mov
push
icebp
jb
sub
pop
or
addr16
jl
data16
inc
cmpsb
into
jge
ljmp
cmpl
jmp
aaa
push
aam
out
pop
outsl
xchg
jns
and
push
arpl
stos
xchg
aad
out
push
loop
cmp
mov
into
or
cmp
cs
icebp
pop
add
sub
xlat
outsb
test
inc
pop
mov
jmp
subl
and
fisttpl
sarb
push
fdivs
sbb
repnz
icebp
cmpsb
sub
sub
idivl
mov
movsb
repnz
pop
jecxz
adc
lock
mov
lock
xchg
add
aaa
push
mov
pushf
push
or
xchg
lods
push
test
arpl
or
cmp
push
add
in
je
scas
jp
pop
add
dec
inc
incl
test
cli
jne
rorw
push
xor
std
xor
xchg
loop
xchg
dec
xor
or
mov
sarl
aad
in
in
cwtl
cmp
in
inc
jmp
ja
or
fcmovnu
clc
sbb
push
and
adc
cmp
sbb
or
inc
mov
mov
jo
mov
loop
xchg
adc
aaa
pop
addr16
xor
dec
mov
addr16
add
daa
xchg
ja
iret
call
jno
clc
sahf
lea
xchg
clc
or
andb
mov
jns
xchg
es
andl
mov
sti
jp
sub
inc
mov
jae
dec
push
adc
shlb
dec
mov
jnp
out
dec
movsl
mov
out
inc
add
adc
das
jle
push
adc
int
jbe
sub
subl
or
pop
pop
stos
inc
adc
test
push
jge
imul
jno
sti
data16
sbb
add
or
fwait
pusha
lret
mov
push
xor
push
bound
out
lds
in
push
notb
fmul
test
cmp
mov
fnstcw
mov
int3
adc
lahf
jbe
adc
mov
ja
sbb
adc
jbe
mov
ljmp
xchg
stos
pop
sbb
test
inc
sub
sub
cmp
adc
cltd
les
ret
xchg
fldl
xlat
mov
lds
mov
leave
in
repz
out
je
pushf
ret
std
xchg
movsl
cmp
sub
sbb
stc
and
sub
add
data16
aad
outsl
jbe
dec
ret
sti
xchg
jmp
pop
push
add
mov
lret
rcr
xchg
popa
sbb
ficoml
push
in
mov
test
cmp
mov
cmp
jne
mov
xchg
and
cmpsl
cmp
fldenv
addr16
adc
and
jb
lods
pop
fstpl
jle
xchg
lds
cli
mov
movb
dec
pusha
pop
andb
ror
notl
jnp
inc
push
cmp
fbld
imul
pusha
inc
popw
or
mov
das
wbinvd
mov
pop
jl
ret
inc
enter
lock
xchg
dec
data16
cmp
insb
lea
pop
cmp
mov
mov
or
incb
and
mov
pop
pop
aam
adc
jmp
cmp
into
enter
mov
push
mov
leave
mov
fwait
aam
rcrb
add
jne
cmp
fcos
xchg
xchg
dec
aad
punpckhdq
stos
andl
sahf
lea
sbb
sub
je
jle
lods
and
adc
js
scas
mov
adc
pop
movsl
pushf
pop
add
and
sbb
xchg
ljmp
mov
lcall
cwtl
cs
fnstcw
or
scas
inc
lods
add
enter
lods
nop
aad
mov
roll
leave
mov
int
mov
sub
inc
int3
pop
fstpt
aam
cmpsl
adc
jge
movsb
fmulp
shlb
shrb
push
testb
sub
jmp
aam
int
adcl
lock
xor
push
cmpl
mov
es
add
xor
pop
mov
cmpsl
addr16
mov
std
les
mov
push
xlat
jnp
add
shlb
push
fisubl
add
aaa
ljmp
scas
gs
fistps
xchg
jo
faddl
cmp
lock
scas
pop
ljmp
xor
popf
sub
and
rcrl
dec
pop
inc
out
mov
imul
mov
pop
in
ss
adc
cmp
out
daa
lock
loopne
in
dec
xor
sbb
xchg
dec
jmp
shl
add
imul
popf
mov
mov
stos
pushf
cli
jmp
cmp
or
xor
push
mov
lret
je
aad
push
mov
loope
jmp
aaa
mov
imul
dec
les
std
pop
jle
sub
hlt
jp
xor
cltd
cltd
aad
lret
stos
ret
jae
mov
sbb
xchg
mov
jg
data16
cwtl
jmp
xchg
int3
mov
fnstenv
push
ljmp
call
leave
jp
push
adc
mov
cmp
outsb
lret
iret
filds
stc
outsb
fadds
add
out
mov
popf
or
mov
scas
popa
jo
fs
adc
push
xor
or
mov
xchg
jmp
fldenv
push
daa
or
add
add
xor
clc
pop
xchg
lods
mov
dec
pop
sub
and
jmp
or
cmpsl
xchg
cmp
roll
insb
mov
add
sbb
mov
sbb
mov
in
in
add
loop
jp
aaa
loop
jo
and
and
or
test
lret
in
pop
fnsave
sbb
cld
xchg
movsl
sbb
pop
push
mov
push
out
cmp
mov
adc
imul
mov
dec
enter
loope
mov
aaa
jnp
sub
cld
lods
push
mov
movsb
dec
mov
imul
push
sub
push
or
ret
into
fldcw
jecxz
aam
stos
mov
xchg
imul
xlat
ss
inc
jo
xchg
shll
cmp
imul
pop
seta
jbe
mov
adc
dec
pop
add
aad
adc
and
xchg
sbb
lods
jmp
mulb
fldln2
inc
fsubrs
cmp
adc
mov
xchg
mov
loopne
movsb
insb
rcl
mov
push
jne
pushf
adc
dec
cltd
mov
add
ss
mov
scas
cbtw
and
jbe
cmp
lds
negb
dec
fistpll
push
sbb
push
in
fisttpl
jmp
cmp
jle
fwait
push
cwtl
mov
add
les
insl
mov
test
sub
sbb
lcall
adc
cld
test
inc
push
aas
mov
cmpsl
rcrb
rcll
movsb
imul
insl
shlb
pop
inc
pop
cltd
jb
xchg
aad
xor
mov
inc
add
outsl
add
ja
dec
mov
cmp
shr
into
dec
scas
out
cmp
xchg
lods
hlt
mov
mov
adc
pop
inc
imul
pop
outsl
push
mov
fstps
mov
pop
xlat
nop
cli
rorl
mov
cmpsb
mov
mov
cmp
es
ljmp
mov
sbb
xor
jno
out
adc
testb
movsl
push
jnp
hlt
push
stc
pushf
stos
mov
enter
or
js
mov
fisttpl
lods
adc
clc
jbe
add
and
ficoml
pop
adc
call
mov
rcrl
push
jns
ljmp
mov
inc
cmpsl
and
stc
push
imull
test
mov
enter
daa
lcall
adc
mov
mov
ror
xchg
insb
mov
jbe
mov
dec
xor
jns
ret
pop
loopne
fcompl
jmp
xor
mov
test
adc
adc
jle
test
mov
mov
scas
inc
jbe
push
xor
int3
xchg
push
cld
xchg
rcrb
je
outsb
lret
iret
rcrb
pop
push
inc
loope
mov
cmp
add
dec
into
xchg
sub
ja
push
and
fidivl
adc
sbb
bound
or
xchg
sub
add
mull
jle
icebp
adc
push
lea
mov
push
sbb
mov
fidivrl
nop
or
scas
test
es
hlt
cmp
cmp
adc
ja
dec
push
fistl
mov
inc
dec
stos
inc
xchg
inc
jmp
mov
sub
mov
pushf
sub
lret
inc
xor
or
sti
xchg
loop
push
int3
fnsave
pop
fcmovu
xlat
test
push
in
cmc
cmpsl
xchg
xchg
iret
cmp
loop
mov
xchg
std
lret
lahf
ret
lret
inc
repnz
aam
imul
mov
fadd
push
adc
xchg
outsl
push
sahf
mov
and
outsb
sub
lret
jecxz
icebp
cmp
or
mov
pop
add
shr
sbb
or
fldl
mov
cmp
fwait
xchg
sub
cmc
test
pop
sub
arpl
in
data16
pop
pushf
bound
test
scas
cmp
shll
subl
adc
popa
jmp
and
pop
testb
movsl
addr16
mov
push
adc
cmp
dec
mov
pop
repz
dec
sub
in
sbb
adc
fdivl
xchg
push
pusha
or
std
cltd
push
in
repz
in
test
or
push
jbe
ficompl
negl
testb
ret
cmp
add
icebp
mov
les
loope
cmp
fldt
pop
push
loopne
xor
sub
dec
add
mov
cmpsl
mov
fisubrl
pop
loopne
rcrb
pop
aaa
or
add
test
je
ljmp
mov
mov
dec
popf
aas
push
or
jle
scas
xor
rcl
rclb
scas
cmc
fstpt
lock
jnp
adc
xchg
or
outsb
adc
aaa
cmc
mov
xchg
pop
dec
cmc
les
cmp
cmp
iret
fdivl
shll
pop
mov
pop
insb
inc
mov
lods
ret
rcrb
inc
lock
dec
lods
xor
ljmp
scas
lods
in
add
orl
insl
add
push
int3
mov
divb
push
jbe
sub
cmp
xlat
mov
xchg
sub
shll
aaa
int3
and
add
out
test
mov
pop
aam
inc
fcomip
js
cld
test
loope
or
mov
mov
add
fsts
repz
hlt
addr16
mov
pop
int3
repnz
push
lret
push
stos
adc
xor
inc
xchg
and
jbe
movsl
sahf
addr16
dec
xchg
dec
rol
pop
mov
cmp
sbb
dec
scas
mov
je
mov
cmp
adcl
or
inc
movsl
adc
test
scas
ret
loope
and
push
jmp
inc
mov
xchg
pop
das
ret
mov
cmp
cli
push
or
out
xor
jb
push
out
push
inc
enter
mov
cmpsb
push
xor
fwait
sbb
stos
or
mov
xchg
call
frstor
fiaddl
push
mov
stos
adc
sbb
in
sub
test
mov
js
push
sahf
iret
cmp
mov
lret
xor
das
adc
mov
inc
je
push
jno
push
push
popf
lods
stc
mov
outsb
sbb
out
mov
jns
mov
mov
out
fwait
push
out
mov
xchg
mov
mov
addr16
cmpsb
pop
mov
test
add
xchg
in
adc
test
dec
fidivrs
inc
sbb
xchg
mov
push
stc
sub
cmc
mov
mov
addr16
inc
test
psrad
and
loopne
jae
push
in
inc
pusha
inc
leave
cmpsb
in
subb
dec
dec
pop
out
mov
pop
jbe
aas
jecxz
push
and
xchg
pminsw
push
jne
cmc
mov
xchg
lea
jne
or
lcall
cmpsb
jbe
mov
gs
js
and
in
fwait
lahf
pop
fidivs
mov
fucom
outsb
xor
in
adc
cli
xchg
xor
das
outsl
push
call
movsb
cmp
jbe
std
cmpsb
add
xor
jle
add
pop
mov
ja
loopne
jo
daa
das
dec
sbb
insb
xchg
gs
aad
fdivrl
push
arpl
pop
arpl
sbb
dec
cmpsl
leave
ljmpw
insb
cwtl
lret
pop
popa
push
lcall
inc
sahf
or
push
cmp
lahf
jnp
rcl
cmp
fdivl
std
call
rorb
mov
adc
imul
inc
fwait
xchg
daa
cli
push
fsubr
sub
inc
lods
loop
pop
js
push
cld
sbbl
add
imul
dec
rcl
arpl
push
ja
inc
aam
imul
xor
js
cmp
mov
mov
or
int
adc
scas
lcall
stos
ljmp
mov
add
sub
je
stos
xchg
in
lds
ficomps
notb
out
adcb
shr
in
inc
xor
ret
call
adc
loopne
or
pusha
add
out
imul
jg
icebp
aaa
or
aas
fnstenv
fsubrs
shlb
cmp
mov
add
push
ret
inc
xchg
aas
fwait
inc
sub
stc
mov
mov
jbe
mov
popa
and
mov
daa
or
add
pusha
ss
notl
leave
mov
adc
sub
add
add
mov
jmp
push
sti
ljmp
mov
cmpsl
test
lock
lret
cli
dec
jb
loope
gs
lock
test
mov
lret
daa
mov
stos
sub
mov
ret
sarl
sbb
rcll
inc
je
shlb
dec
pop
imul
push
push
sub
in
inc
int
rorb
mov
add
lea
pop
or
popa
or
cmc
dec
mov
rcrb
aam
push
outsb
xor
mov
or
cltd
xor
aas
loope
test
dec
mov
push
std
ss
push
add
xor
jne
adc
test
or
cmpsl
rclb
mov
xchg
add
adc
cmpsl
fisubs
push
or
gs
addl
fs
xchg
pop
and
mov
mov
dec
fs
stos
out
xchg
inc
mov
mov
hlt
push
jmp
and
fadd
pop
xor
and
pop
addl
int3
push
jbe
inc
pop
push
push
xchg
xchg
stos
jl
cmp
xchg
xchg
sub
mov
pop
or
dec
push
mulb
arpl
lret
sahf
mov
push
out
jo
stc
sub
imul
jno
mov
mov
lcall
cltd
xor
fwait
hlt
jmp
out
aaa
push
and
dec
lret
xor
movsb
cmp
mov
xchg
dec
ret
xchg
mov
iret
xchg
mov
iret
cmp
xchg
in
push
jbe
mov
push
iret
mov
dec
pop
cmp
push
dec
pop
lahf
push
pop
movsb
or
sub
icebp
lahf
jp
xor
mov
jbe
push
mov
pop
push
jmp
sub
cmp
sbbl
jae
test
scas
pusha
xor
xchg
lods
and
insl
add
inc
dec
mov
subb
xchg
dec
lds
mov
loope
mov
jecxz
iret
fsubs
xor
push
jle
lahf
inc
xchg
sub
adc
push
ds
lods
mov
in
jmp
pop
popl
mov
dec
xchg
mov
push
xchg
cmp
inc
adc
lock
addr16
xchg
mov
adc
mov
jne
mov
pop
cmp
dec
dec
dec
jle
outsb
clc
dec
adc
mov
sbb
mov
sarb
jns
jge
inc
scas
xor
inc
inc
push
shll
pop
lcall
jmp
and
xor
pop
sti
cwtl
test
pop
inc
movb
jno
sar
dec
in
pushf
aaa
insb
in
insb
inc
xchg
add
mov
neg
test
test
inc
add
mov
xchg
and
aaa
into
push
js
loope
jbe
mov
xchg
sub
bound
add
add
pop
enter
push
sahf
out
inc
rcl
adcl
xlat
les
xchg
ljmp
and
or
mov
fs
add
cmp
ret
inc
sbb
outsl
and
fcoml
mov
or
cs
pop
add
push
jo
dec
movsb
cmp
jmp
xchg
fwait
ret
mov
rclb
stos
jne
push
xchg
out
xchg
fdiv
cltd
xor
mov
nop
and
sbb
mov
fdivl
xchg
pusha
pop
out
aaa
mov
cmp
jae
es
and
and
mov
mov
jecxz
scas
mov
outsl
sub
cld
xor
pop
in
mov
xchg
inc
in
mov
call
jo
je
fidivs
in
mov
cli
std
adc
sub
pop
nop
pop
cmc
leave
mov
daa
or
leave
xor
imul
lahf
mov
pop
hlt
xchg
and
dec
add
jbe
or
mov
pushf
movsb
xchg
cmpsl
mov
sub
jge
js
xchg
mov
cltd
and
or
mov
adc
out
rep
js
and
push
ficoml
mov
add
data16
sbbl
in
xor
pop
mov
fstps
push
mov
jb
in
pop
dec
and
cmp
pop
ss
push
pop
insl
clc
jle
sbb
jae
mov
pop
and
mov
pop
in
shlb
cmc
shll
enter
push
lds
addr16
arpl
es
add
or
inc
outsb
add
inc
out
call
pop
adc
adc
sub
xchg
lret
mov
test
daa
in
iret
negl
cld
insb
ret
sbb
sti
add
sbb
push
stc
mov
or
addr16
daa
mov
mov
daa
jle
scas
lock
sahf
xchg
add
push
mov
mov
jae
mov
xor
pop
loop
push
cmp
shlb
rclb
imul
in
fwait
xchg
and
cmp
xor
adc
and
mov
cs
pop
mov
mov
cmp
cmpsl
out
pop
push
sbb
mov
dec
es
std
pop
cli
xlat
repz
jo
add
mov
adc
and
and
inc
scas
fists
daa
adc
push
inc
mov
cmpsb
sub
pop
mov
cmp
dec
pop
pop
aam
dec
cli
lahf
popf
stos
mov
mov
in
and
loopne
push
xchg
out
jmp
inc
cli
mov
xor
mov
xchg
cmp
std
hlt
cli
xchg
cmpb
aad
mov
pop
xchg
call
sub
pop
int3
fiadds
cmc
out
jbe
jg
push
cld
mov
shr
repz
dec
imul
addr16
push
in
mov
push
push
adc
push
and
sti
xor
sbb
mov
aam
out
cltd
inc
mov
mov
sub
das
cwtl
outsl
outsb
add
bound
jmp
pop
sbb
les
insl
std
or
and
adc
in
in
cmpsb
mov
dec
or
pop
lock
iret
lea
movsb
xchg
sub
lods
fcomip
cmpsb
arpl
add
xchg
and
push
imul
lock
lret
jg
stc
clc
addr16
sbb
and
sub
mov
lods
mov
test
std
test
mov
pop
push
inc
dec
pop
jb
pop
mov
mov
fiadds
icebp
movsl
cmp
cmpsb
push
jmp
in
subb
xor
push
xchg
repnz
loop
rcrb
std
cltd
push
loop
cmp
pop
incl
or
jp
mov
jbe
jns
outsb
aas
xchg
cmc
ds
or
pop
in
outsb
mov
imul
stos
imul
sar
adc
es
fs
xor
xor
cmpsl
out
mov
out
scas
push
adc
repnz
jmp
adc
or
add
add
ret
mov
dec
pop
mov
loop
mov
xchg
cmp
mov
xchg
pop
rol
mov
adc
mov
rcrb
repz
lea
in
mov
xor
faddl
addr16
mov
out
stos
add
ss
bound
or
fsubrl
lea
lds
pusha
and
add
jp
pop
pop
cs
dec
mov
xchg
cmp
popf
out
out
xorb
adc
in
bound
push
out
insb
add
mov
dec
and
mov
cmp
iret
and
pop
insb
lods
inc
lcall
cmpsb
mov
sub
out
fnsave
iret
mov
cmp
scas
sbb
int
lret
sbb
xlat
jp
mov
mov
mov
and
shr
cmp
into
sti
and
sbb
push
mov
mov
xlat
test
sub
fstps
loop
and
mov
fistl
adc
pop
movsb
mov
jno
inc
fisttpll
and
es
cwtl
pop
push
jmp
xchg
xchg
and
jnp
sub
dec
inc
pusha
jg
mov
cmpl
cmp
movsb
fsubr
lds
jmp
pusha
push
stos
push
push
sbb
int3
push
arpl
push
xor
dec
xchg
clc
pop
shll
mov
loop
repnz
push
lret
aam
pusha
aad
faddl
sub
clc
inc
pop
fsubrp
push
pusha
test
xchg
xor
dec
icebp
push
lods
pop
pop
sub
ljmp
fistps
xchg
push
push
jb
mov
or
ret
jp
call
dec
add
cmp
jno
push
sub
mov
adc
mov
adc
mov
jne
xlat
pop
inc
or
cmp
or
or
ficoms
mov
fwait
out
ja
fwait
mov
int
jp
ficomps
mov
mov
mov
adc
dec
add
push
daa
fsubl
adc
jl
mov
mov
fisubl
add
mov
dec
outsb
fsubrl
and
lret
sti
fldpi
xor
push
xchg
mov
ss
xchg
lds
sub
adc
mov
add
cmp
xchg
rcrb
sbb
bound
ljmp
mov
sub
sub
call
ret
sub
mov
imul
jecxz
adc
mov
mov
nop
shrb
xchg
lods
add
out
mov
sub
int
insl
nop
insl
add
mov
inc
jp
jbe
and
xchg
mov
repnz
dec
test
les
jg
mov
push
outsl
ret
xor
cmpsb
rclb
mov
adc
mov
push
jle
rorl
xchg
mov
pushf
xchg
add
inc
jecxz
mov
and
xchg
in
pushf
inc
lea
mov
cwtl
call
push
cli
mov
lds
jge
mov
sub
fisubrl
lds
outsl
loop
xchg
jecxz
mov
js
add
popl
test
fucom
dec
and
push
call
arpl
mov
ret
pop
mov
or
xchg
and
es
add
and
jo
or
fsubs
xchg
and
xchg
or
sarl
push
test
mov
xchg
adc
xchg
aas
sbb
push
inc
mov
lods
xchg
jp
scas
add
js
sbb
scas
imul
mov
xchg
dec
cmpsl
and
push
out
xlat
mov
sti
push
push
flds
mov
or
in
test
mov
cmpsb
xor
lret
data16
fmull
or
call
jmp
mov
repnz
sub
inc
mov
into
gs
test
lea
ret
mov
fldl
cld
jp
das
movsb
fildll
popa
lahf
cwtl
lods
lcall
inc
mov
push
clc
nop
popf
xchg
xchg
iret
mov
xlat
mov
sbb
or
imul
hlt
aad
cmp
movsb
pop
or
aad
hlt
cmp
movsl
imul
add
mov
xor
dec
lahf
mov
pop
ds
xchg
pop
fwait
in
out
pop
inc
cmpsb
cmp
push
xchg
jo
pop
push
sub
mov
jbe
cmp
add
sbb
mov
dec
pop
out
sub
xchg
add
fucomip
lahf
ljmp
mov
dec
scas
adc
sub
ljmp
dec
jns
shrl
pop
lea
mov
scas
cmpl
mov
shlb
xchg
loop
enter
adc
testl
nop
mov
aam
inc
clc
popa
dec
jnp
mov
shrl
movsb
jecxz
push
clc
sbb
inc
ret
sub
jle
sbb
sbb
xchg
inc
iret
sub
pop
das
fdiv
or
and
stos
xchg
jne
lds
loopne
fadds
aad
fnstenv
shll
jg
ds
and
push
jmp
pop
stc
ds
adc
lahf
scas
js
in
repz
adc
stos
pop
or
sub
mov
mov
mov
adc
es
pop
xor
movsb
js
outsb
jl
cs
data16
nop
sbb
push
jmp
pop
out
jo
addr16
test
cmc
push
insl
in
sub
pop
pop
sub
inc
sahf
dec
in
jmp
insb
add
adc
and
cli
jne
mov
movsb
in
ret
insl
sub
pusha
clc
dec
movsb
cmpsb
push
jge
xor
pop
dec
pop
fisubs
lds
shrb
pop
jp
fdivp
or
and
insl
aad
add
movsl
loop
sub
xchg
mov
lcall
lahf
push
mov
inc
pop
ror
mov
push
xchg
add
scas
xchg
inc
mov
dec
loopne
sbbb
fcom
sbbl
test
std
fisubl
sub
push
mov
pop
inc
xchg
xchg
sub
loope
and
cwtl
adc
cmp
aas
sti
jbe
ffree
in
jnp
jl
lods
inc
fdiv
je
and
in
mov
cwtl
outsl
sub
jo
cli
fidivs
adc
subb
mov
js
insl
scas
add
addl
jb
cld
xchg
cmp
loopne
mov
add
mov
mov
daa
add
inc
addr16
lods
inc
rol
inc
iret
dec
lret
mov
xchg
or
sub
aad
jnp
mov
inc
inc
and
xlat
cwtl
jo
inc
mov
dec
leave
loopne
xchg
push
clc
shlb
mov
xor
add
icebp
insb
push
push
ret
lcall
push
sahf
adc
dec
mov
call
in
add
test
imul
inc
icebp
mov
and
popa
js
push
and
dec
xor
pop
mov
mov
xlat
push
sbb
inc
or
inc
sti
out
mov
inc
push
and
add
jnp
add
jb
push
sbb
push
adc
jno
and
out
daa
pusha
fwait
test
lds
jb
mov
imull
fsubrl
gs
ja
das
mov
pop
add
and
aam
xor
sbb
xchg
pusha
xchg
arpl
sub
lcall
clc
sar
jnp
mov
sub
nop
popl
fnstenv
arpl
dec
inc
sub
push
pushf
ja
mov
fildll
jns
nop
sub
mov
mov
insb
das
hlt
xchg
imul
jbe
sub
dec
cld
or
pushf
test
jne
sbb
xchg
pushf
popa
clc
int
dec
add
and
push
inc
add
pop
lock
inc
movsb
aaa
xor
ja
ja
cmp
jecxz
repnz
fs
pop
out
pop
or
frstor
in
and
adc
xor
in
into
xor
cmp
dec
adc
sbb
aas
pop
icebp
outsb
arpl
pop
fmuls
jns
xchg
jb
dec
jo
cmp
mov
cltd
loope
int
lcall
js
shr
ret
xchg
inc
idivb
repnz
iret
push
and
xchg
pop
test
fstl
scas
movsl
in
or
fistpll
std
inc
gs
fs
data16
test
mov
dec
dec
mov
dec
les
cmp
fucom
jbe
mov
add
sbb
inc
dec
mov
pop
pop
icebp
nop
pop
std
pop
cmp
popa
xor
dec
xchg
enter
mov
jo
pop
mov
add
not
xor
cwtl
xchg
adc
mov
mov
into
mov
les
cld
lock
cmp
xchg
lea
into
ds
repz
sahf
xor
jge
out
loopne
gs
mov
inc
out
call
addb
sbbl
lds
outsl
jns
inc
in
std
xchg
xor
loopne
aaa
sar
test
imul
jmp
aaa
test
push
popf
lea
or
test
imul
std
jg
pop
adc
sbb
jge
dec
add
xor
push
xor
outsl
adc
ss
jae
sbb
inc
add
or
dec
jb
mov
xchg
lods
cld
lods
inc
cs
mov
jge
fwait
xor
mov
jmp
ljmp
adc
jns
aaa
es
lcall
jle
daa
sub
and
or
scas
adc
loopne
xchg
nop
adc
xor
jno
shrl
cmp
or
bound
xchg
fwait
jae
inc
mov
out
xor
mov
movsb
repnz
xchg
push
or
fs
jb
or
aas
bound
bound
dec
dec
xchg
jl
mov
lds
add
js
mov
negl
jmp
out
cmpsl
ja
add
ss
cmp
test
pop
cmpsb
mov
sbb
mov
xchg
sub
lods
stos
das
or
imul
lret
imul
out
enter
outsb
rcll
ss
jle
xor
imul
gs
aad
subl
negl
adc
inc
stc
jae
sub
jb
fwait
rcl
repz
cmp
jmp
into
cpuid
sbb
lds
sub
push
adc
int3
arpl
cltd
and
xchg
and
popf
jmp
ss
pop
xchg
ljmp
pusha
fcoml
mov
mov
jbe
xorl
dec
xor
cmpsl
jae
sub
add
lods
jle
mov
inc
mov
shlb
or
sbb
shr
cmc
fstps
mov
out
push
je
aaa
cs
fiaddl
dec
ficomps
outsl
pop
insb
sti
pop
lcall
stos
dec
iret
loop
jge
push
and
xchg
aad
les
das
test
sbb
gs
inc
pop
icebp
shld
inc
bound
in
lahf
mov
jl
push
mov
movsb
push
lea
sbb
mov
stos
jns
or
push
data16
decb
cmp
and
sub
int3
test
sbb
mov
loopne
xchg
neg
xor
inc
mov
pop
lock
cli
cmp
mov
add
xchg
lock
hlt
stc
mov
inc
sub
xchg
mov
sub
pop
sub
insl
int
fcoml
mov
cmp
inc
fisubl
iret
popa
fsubr
cmp
xlat
sbb
stos
movsb
ss
inc
or
out
jp
scas
call
fimull
iret
pushf
cmpsl
sbb
sti
arpl
adc
lcall
test
insb
fcmovnbe
adc
cmp
jne
fcmovne
out
in
inc
ja
rcll
or
lcall
sti
loop
fldcw
cmp
mov
fld
out
rcl
repz
mov
jbe
sub
lret
pop
pmaddwd
cmpsl
or
imul
or
add
fsubl
mov
push
mov
dec
std
ret
push
out
notb
addr16
aam
cmp
pusha
pop
push
aaa
hlt
fdivrs
outsl
xor
ljmp
and
cltd
pop
mov
enter
popa
test
fisubs
leave
out
rolb
stc
test
adc
shrl
scas
loop
mov
jmp
or
xor
nop
lahf
mov
idivb
add
lret
lret
js
xor
push
out
cmp
add
inc
fcompl
push
ds
lret
test
fidivrs
xchg
popa
mov
xchg
mov
pusha
das
cmp
lock
test
push
jnp
inc
mov
push
test
xchg
in
in
movsb
jns
pop
scas
loopne
xor
ret
imul
lahf
adc
fwait
push
push
sti
jle
add
sahf
dec
addb
dec
popa
sbbb
sub
pusha
push
sub
push
push
inc
daa
mov
out
inc
imul
push
xor
cltd
inc
dec
jns
ljmp
xor
cs
lock
mov
jmp
repnz
js
mov
jae
pop
sbbb
movsb
pop
arpl
mov
incb
loopne
push
push
das
or
testb
ret
sbbl
sub
mov
sub
arpl
je
fwait
mov
test
int
jle
out
push
stc
cld
sarb
adc
or
aam
addl
cwtl
lret
inc
xchg
pop
xlat
pop
adc
inc
sbb
add
xlat
cmp
xlat
fwait
sti
pop
pushf
inc
and
std
cltd
fwait
sub
lods
jno
in
pusha
cmpsl
sbb
test
inc
sbb
lret
lds
dec
jl
push
or
mov
pop
sub
les
test
mov
std
sub
push
imulb
cmp
add
incb
dec
dec
mov
notl
adc
cmp
enter
sbb
and
repnz
ljmp
cmp
call
mulb
or
out
jns
sub
add
push
outsl
addl
leave
out
sbb
xor
popl
push
rolb
jnp
je
mov
lcall
xor
xchg
stc
aas
dec
loop
call
push
mov
add
icebp
mov
lock
jae
xchg
mov
arpl
in
enter
sbb
push
sbb
pop
jp
mov
sub
out
mov
sub
fstpl
pop
dec
sbb
lea
cmp
xchg
fwait
mov
repz
gs
lret
icebp
pop
cmp
loop
in
dec
and
test
loop
lods
jo
mov
fcmovnb
mov
leave
imul
xor
mov
push
in
ss
stos
insl
sbb
cld
dec
lea
mov
xor
cmp
ficompl
pop
sub
sbb
sahf
negb
sub
mov
xchg
inc
aad
enter
inc
jmp
inc
fmuls
cmp
lock
mov
push
sbb
aaa
pop
ret
dec
rolb
shlb
jb
dec
pop
sbb
ret
stos
jnp
xchg
cmpsb
lods
pop
pop
cld
test
push
add
inc
mov
cmc
jl
hlt
gs
dec
sbb
mov
or
in
test
in
repz
frstor
pop
push
test
aaa
adc
mov
and
mov
stc
cltd
call
jp
or
or
pop
jnp
in
mov
test
sarl
test
inc
mov
outsl
lret
sbb
or
inc
in
xchg
push
adc
xor
or
nop
jp
inc
scas
pushf
shlb
fisttpl
imul
cmpsl
add
daa
xchg
or
adc
mov
iret
push
xor
repnz
cld
popa
int
cmp
push
and
insb
mov
push
jb
push
add
gs
mov
pop
adc
test
outsl
sub
ret
pop
sub
in
mov
sub
movsb
xchg
ljmp
jg
mov
and
mov
or
xchg
shll
shrb
aas
ret
push
adc
jp
cmp
xchg
cmpsb
cmp
pusha
scas
cmp
aaa
fiaddl
sub
cmc
cld
xchg
sbb
add
int
lods
push
out
and
mov
dec
and
cmp
arpl
fidivrl
jl
aad
jecxz
dec
or
lahf
ss
in
cmp
cmp
or
mov
loopne
aaa
or
jo
adc
in
lods
mov
arpl
mov
mov
inc
sahf
sub
inc
leave
pop
inc
pop
xchg
rcl
dec
mov
fwait
sar
lds
jmp
dec
sarb
dec
pop
out
in
mulb
push
jmp
add
fadds
add
jl
scas
and
in
xchg
jb
rcrl
pop
int
out
sbb
shl
adc
xchg
push
sti
out
mov
in
push
dec
add
push
xchg
movsl
cmp
jne
imul
jb
lret
scas
cmp
lret
into
mov
push
push
add
ret
mov
lea
cli
jecxz
mov
repnz
mov
ljmp
sbb
icebp
addr16
gs
daa
sub
adc
adc
fld
repnz
imul
cmp
cmp
idivl
sbb
repz
pop
dec
dec
sarl
sub
cli
pop
imul
fucomip
add
aad
lock
sub
mov
push
stos
out
lret
sbb
leave
aas
dec
cmp
pop
mov
or
scas
mov
cmp
mov
fstps
add
xor
sbb
out
mov
mov
out
xchg
xchg
jb
and
fcmovne
cli
push
rolb
insb
mov
jnp
sub
mov
lds
stc
adc
inc
sbb
into
loope
hlt
lret
into
dec
dec
notb
stos
bound
pop
cmp
in
dec
popf
and
rcrl
and
mov
mov
pushf
jecxz
test
cmp
sbb
divl
jo
out
cmc
js
repnz
out
gs
icebp
pmaxsw
movsl
mov
fnstenv
stos
xchg
sub
lea
mov
out
mov
orb
pop
repnz
movsb
xchg
aam
repz
ds
push
out
adc
cmc
push
cs
fldl
arpl
movsl
pop
mov
popa
cs
mov
es
mov
aad
outsb
inc
int
cmp
iret
movsb
cmp
adc
popa
inc
push
push
push
ljmp
pop
loope
inc
sahf
cmp
mov
in
inc
popa
pop
loop
xlat
mov
fnstcw
or
enter
fmull
xchg
push
push
enter
pop
cmpsb
std
int3
push
mov
push
ljmp
lahf
jne
push
jmp
fstp
icebp
add
adc
mov
jp
cmpsb
inc
movsl
mov
sub
dec
cmp
cltd
dec
icebp
and
add
std
mov
aaa
lds
pop
sub
aas
aad
out
std
cltd
cwtl
xlat
rorb
jbe
hlt
rcl
sub
sub
cmp
sub
add
xor
jecxz
mov
stos
scas
jl
sbb
cmp
rorb
mov
fmull
inc
loop
sbb
fldcw
mov
add
rep
inc
data16
lret
xor
addr16
jo
inc
nop
pop
call
shrb
out
pop
dec
popa
lods
jmp
mov
mov
cs
aad
popa
outsl
notb
mov
pop
mov
adc
into
in
and
push
add
sarb
cmp
ret
or
in
rclb
rcll
mov
mov
cltd
leave
addr16
repz
xchg
push
and
mov
jp
add
mov
int
pop
enter
push
in
and
stc
inc
pop
sbb
stc
adc
inc
pusha
or
jo
cwtl
cmc
mov
stos
pop
adc
add
ds
and
int
adc
test
or
push
repnz
mov
or
and
imul
sbb
sbbb
xor
sub
in
or
xchg
mov
add
jmp
je
and
fwait
popf
xchg
fcoml
cmp
cmp
inc
mov
in
mov
in
fidivs
xchg
mov
cmp
dec
gs
fwait
push
pop
cmp
out
push
jmp
sbb
pop
ljmp
adc
jbe
imul
adc
add
adc
rcrb
jno
inc
fmull
cltd
jecxz
movsb
dec
cmp
aaa
shlb
shr
hlt
dec
popw
imul
stos
adc
out
or
dec
nop
add
sbb
mov
pop
xor
test
in
add
arpl
jl
push
imul
es
data16
mov
aad
and
cmp
mov
add
loope
lret
ret
shr
sti
pop
imul
mov
scas
fists
aad
inc
push
push
jmp
cmpb
std
inc
sarl
dec
push
or
push
je
sub
mov
loopne
and
mov
jbe
test
lods
in
xchg
sbb
sbb
cmp
ja
mov
ret
stos
xchg
sub
sbb
lret
add
inc
push
paddusb
ret
fiadds
xchg
movsl
jl
rorb
pop
push
add
jge
aam
ret
xor
jnp
ja
std
mov
jno
add
pop
add
jle
repnz
push
mov
mov
xor
mov
xchg
loopne
cli
xchg
out
and
mov
pop
mov
xchg
insb
popf
das
jg
mov
ret
pop
push
pop
out
dec
jp
adc
jae
call
xlat
fcomps
add
and
arpl
xor
push
lods
sub
pop
cmp
inc
sub
rclb
mov
xor
pop
popf
loope
xor
push
dec
sti
sub
adc
popf
cltd
mov
inc
mov
scas
cmp
push
or
inc
sub
mov
nop
sub
rorl
sub
mov
lahf
loop
xchg
rol
jb
nop
dec
jge
pop
ss
dec
mov
lcall
pop
aad
add
sub
sahf
or
jecxz
loop
jo
mov
icebp
insb
stc
pop
mov
inc
push
pop
xchg
out
addr16
mov
les
mov
popa
pop
das
pop
jne
and
loop
and
jg
popf
push
imul
movsl
sti
adc
ja
cltd
xchg
icebp
push
cltd
and
dec
in
dec
adc
adc
sbb
pop
fisttps
out
mov
lock
dec
and
pop
movb
nop
fcompl
xchg
or
out
ja
jnp
cmp
xor
sub
lcall
mov
mov
addr16
data16
insb
sub
fwait
jbe
push
xor
jb
jno
and
nop
loope
das
outsl
adc
int3
xor
xchg
notl
repz
jo
cmp
rclb
push
lods
adc
push
notl
inc
aaa
lds
call
mov
inc
fiaddl
mov
mov
and
in
aas
lret
or
xor
add
fidivs
push
cltd
add
in
in
xchg
sub
dec
insl
jp
sbb
push
mov
sti
jbe
cmpb
add
pop
fldcw
test
fsqrt
pushf
lea
dec
adc
gs
jnp
pop
pusha
jnp
popa
or
rolw
mov
mov
or
aad
pop
testb
xor
aad
push
inc
pushf
ja
out
sahf
scas
sub
sti
jbe
aam
scas
cmp
out
jl
dec
arpl
cmp
ja
jno
fsts
lcall
cli
fwait
xor
or
add
fimull
push
and
stos
push
daa
rolb
test
orb
mov
in
pushf
xchg
imul
insl
shll
iret
fbstp
bound
xchg
mov
pop
mov
and
orb
lods
pushf
out
rolb
xchg
jne
daa
inc
test
les
mov
cmpsb
pop
mov
xor
imul
mov
negl
sahf
rcll
mov
adc
ffree
les
loope
nop
push
arpl
in
sbb
aad
add
notb
ja
mov
jecxz
jns
nop
xor
bound
leave
jb
lcall
pop
sub
add
movsl
and
cmpsb
arpl
cld
lds
mov
cwtl
out
inc
inc
loope
bound
jge
push
cmp
and
cmc
sbb
push
inc
push
mov
adc
arpl
and
xchg
popa
mov
mov
cld
mov
test
adc
nop
pop
sahf
xor
enter
fnstcw
jmp
or
pop
push
repnz
rcrl
mov
lret
add
cld
or
loopne
xor
and
ljmp
xchg
pushf
loopne
sub
test
sub
gs
sbb
sbb
pushf
lret
xor
mov
cmpsb
les
add
out
loopne
divl
jmp
mov
push
mov
cmp
add
add
rol
push
stos
inc
push
cmp
fs
xorb
repnz
aaa
ljmp
push
jne
in
xchg
xchg
lods
pushf
xor
push
or
fnstenv
rclb
mov
sub
jns
xor
push
arpl
repz
imul
mov
lods
aas
push
jp
ds
jl
dec
mov
jmp
push
int3
sub
rcr
daa
mov
or
inc
cmp
bound
jae
push
mov
pusha
fwait
and
xchg
rolb
in
sub
add
push
addl
pop
dec
jp
add
jns
cltd
je
xchg
adc
mulb
xlat
stos
rolb
adc
dec
sub
das
inc
notl
jbe
int
or
xchg
jb
push
pushf
mov
adc
in
sbb
adc
and
jb
call
fs
jle
lret
arpl
xlat
test
or
cmc
fbstp
sub
sub
gs
dec
lret
punpckhdq
jl
in
sbb
dec
hlt
xlat
cltd
jmp
cwtl
dec
sbb
jbe
dec
add
or
mov
push
addr16
imul
loope
imul
mov
jo
test
movsb
gs
adc
testb
dec
imul
andl
adc
and
mov
push
rol
cmp
cmc
rorb
sub
push
aam
icebp
xor
adc
cwtl
hlt
mov
out
mov
dec
addb
scas
mov
loopne
icebp
shrl
lret
cmp
imul
cmc
rol
push
nopl
fisubs
push
imul
pop
arpl
mov
cmc
push
cs
rcll
enter
out
stos
mov
or
ljmp
dec
mov
sub
jp
xchg
and
fisttpll
push
jae
cli
aad
sahf
xchg
jp
pusha
ss
cmp
pop
xor
inc
push
add
cwtl
push
shrb
cmp
mov
mov
push
xchg
push
orb
cmp
sub
dec
cmpsl
push
ret
sar
lods
nop
shlb
mov
addl
pop
cmp
mov
es
test
sub
and
jnp
test
imul
out
test
jle
sbb
fidivrs
pushf
roll
les
movsl
jl
and
add
xorb
enter
lock
jno
js
dec
xchg
or
mov
outsl
sbb
rorl
in
jnp
out
into
cmp
cltd
jae
sbb
push
out
int
ret
addr16
mov
sbb
mov
out
dec
shrb
in
cmp
mov
cmp
stos
sub
and
push
outsl
pushf
aaa
scas
icebp
mov
mov
rol
rep
and
sub
movsl
aam
out
sub
push
imul
or
mov
xchg
xlat
xchg
lods
push
push
adc
js
cmpsb
push
mov
mov
call
and
idivl
mov
in
out
fsts
fnsave
cli
sub
lret
nop
ret
jle
incl
lcall
and
add
dec
mov
sub
mov
mov
fsubrs
add
fcomps
test
notl
shl
mov
loop
jge
push
cmp
xor
add
xor
pop
jns
test
jge
lcall
in
int3
and
jp
call
repz
mov
fdiv
or
hlt
cmp
mov
ret
movsl
cmp
scas
pop
pop
mov
fucom
ja
in
mov
or
ss
jecxz
jmp
sarl
pop
lahf
push
sbb
dec
dec
jne
repnz
mov
inc
jns
test
xchg
popa
daa
push
aas
inc
xorb
xlat
sub
pop
pop
into
loop
inc
sti
sub
cmpsb
cmp
fcoml
inc
out
push
pop
add
sbb
mov
arpl
imul
repz
notl
xor
notl
lock
mov
inc
arpl
movsb
in
mov
sarb
xchg
xchg
jno
mov
fstl
jp
arpl
xchg
xlat
and
sub
sarl
lea
or
aas
adc
push
into
loopne
mov
data16
rcll
movsb
cmpsb
rolb
sti
jp
jmp
jp
gs
fwait
push
inc
push
aad
push
in
add
cmc
mov
in
int3
mov
jo
popa
sahf
mov
jno
pop
adc
sbb
mov
out
and
int3
stc
sub
pop
sbb
outsl
lcall
mov
data16
iret
jns
jge
or
pop
lahf
fwait
push
adc
loopne
out
icebp
aas
clc
sbb
sub
imul
cmp
pusha
lock
ret
push
gs
sbb
mov
stc
pushf
jns
adc
ror
push
jno
and
push
stc
xchg
sub
xor
mov
or
sbb
aaa
and
add
fisubrl
daa
out
mov
mov
push
mov
mov
ljmp
mov
mov
arpl
or
aaa
test
pop
cwtl
add
pop
fisubrl
jns
sahf
pop
mov
mov
fnstsw
push
xchg
popl
std
cmpsb
sbb
sbb
stos
cmp
movsb
lahf
test
movsl
and
shll
test
scas
jne
rol
in
sub
push
push
dec
shll
repz
inc
iret
sub
imul
ficoml
mov
push
pop
js
push
iret
loopne
and
gs
rcrb
dec
insb
mov
pop
loope
push
sub
mov
inc
aas
or
fs
xchg
push
jmp
ss
daa
pop
jb
dec
cli
andl
sbb
push
add
push
mov
pusha
inc
hlt
cltd
icebp
mov
mov
ffree
xchg
ds
leave
fst
cmp
out
mov
sbb
xchg
sub
lahf
pushl
stc
jns
xor
lret
push
mov
pop
jbe
push
enter
cmp
mov
in
dec
cmpsb
jmp
pop
shrl
shll
lahf
mov
loop
push
xchg
mov
xchg
call
jl
and
leave
ffree
lea
fistpll
mov
jge
insb
movsb
pop
pop
mov
pop
cmp
daa
sbb
lods
jge
aaa
or
xchg
dec
mov
pusha
mov
jbe
rolb
jle
bound
mov
adc
mov
outsb
cmp
out
bound
adc
sub
adc
mov
loop
dec
pop
imul
in
stos
push
jecxz
pop
icebp
lds
decb
dec
and
inc
inc
mov
test
cmpl
mov
add
cmp
xorb
inc
out
push
into
pop
ret
mov
pop
cmp
mov
sbb
xor
notl
pop
into
xchg
cmp
jno
pop
add
imul
xchg
imul
mov
push
lret
push
pushf
cmp
push
sub
aas
outsb
jno
mov
shrl
push
jnp
push
out
xor
pushf
xchg
or
push
mov
lret
or
stos
arpl
mov
or
inc
dec
sarl
lea
repz
in
jbe
push
in
loope
lret
outsb
out
shrb
fs
jae
pop
cmp
sbb
mov
mov
icebp
mov
mov
mov
cmpsb
inc
clc
leave
mov
shlb
jl
inc
leave
pop
push
dec
cmpsb
pop
xchg
xor
cli
jns
inc
out
pushf
loop
int
lret
push
mov
sub
mov
cmp
jae
mov
insl
push
lahf
add
pop
imul
rcll
popa
mov
loopne
lods
mov
clc
adc
mov
rcrl
jp
scas
dec
dec
pop
fs
and
cmp
sub
outsb
jne
icebp
insb
jp
cmc
dec
fisubl
mov
mov
cmc
pusha
inc
shll
nop
gs
jp
dec
push
xlat
fdiv
add
and
jb
mov
cmp
test
or
stos
pop
mov
bound
add
sti
or
pop
or
mov
std
sub
sti
pop
hlt
filds
sub
pop
lods
daa
mov
jae
test
xor
mov
adc
cmp
test
add
add
adc
jmp
repz
mov
in
mov
loopne
push
adc
jmp
xchg
mov
outsb
loope
pop
sub
push
pop
inc
lret
shll
loop
rolb
divb
sbb
mov
mov
sbb
popa
pop
loope
mov
cmp
outsl
sbb
lret
push
mov
mov
ficoms
sbb
adc
pop
xor
or
sub
ror
push
add
xchg
dec
mov
psubsw
xlat
push
test
movsb
cmp
incb
or
mov
push
testl
fnstcw
xchg
add
ja
dec
dec
es
mov
dec
stc
icebp
cmp
mov
xor
movl
mov
sub
mov
and
jmp
pop
xor
aad
mov
into
sbb
test
in
dec
jl
mov
gs
stos
popa
les
in
aas
mov
addr16
add
push
lods
loopne
fbstp
and
inc
sbb
jnp
es
popa
test
jno
divb
call
xor
jns
push
enter
je
cli
movsb
aas
mov
fidivl
js
fidivl
mov
mov
xchg
pop
lock
adc
sbb
popa
repnz
ss
pop
inc
adc
jp
push
inc
inc
insb
jnp
mov
lcall
push
sbb
inc
pop
scas
stc
vdivsd
pop
mov
pop
pushf
or
jns
rolb
xchg
mov
xlat
lret
ja
push
mov
clc
xor
pop
mov
icebp
sarb
js
in
xchg
out
add
rcll
pushl
adc
xor
jbe
cmpsl
mov
mov
mov
sub
imul
jb
mov
xchg
xchg
push
cmpsb
enter
mov
test
sub
pop
repnz
clc
jns
aaa
jns
imul
mov
jmp
or
adc
into
jg
jecxz
mov
sbb
cmp
mov
cli
jae
add
aas
pop
insb
mov
imul
mov
negl
mov
adc
popf
sbb
je
fistpll
pop
xlat
push
mov
xor
mov
dec
xchg
and
mov
adcb
pusha
adc
cld
fsubrs
add
sbb
fidivs
dec
arpl
pushf
cli
dec
sub
addr16
pop
xchg
mov
shr
dec
addb
inc
mov
mov
in
aas
jl
adc
enter
push
sub
push
dec
pop
ss
and
xor
mov
test
xchg
daa
repz
cmp
add
popa
clc
into
data16
sub
sub
es
test
and
mov
xor
jns
and
ljmp
mov
or
rcrl
mov
inc
flds
cld
xchg
sbb
mov
mov
and
and
loop
test
sub
in
inc
cmpb
mov
sarb
push
pop
cmp
out
mov
cmp
rolb
xor
lods
dec
mov
int3
sbb
cld
xchg
sub
sub
stos
mov
sbb
mov
mov
mov
das
shlb
rclb
cmp
insl
sbb
pop
lea
mov
xchg
inc
xchg
ret
jnp
mov
xchg
arpl
outsl
lock
fwait
in
adc
adc
dec
mov
or
roll
push
or
sarl
inc
outsb
hlt
adc
insb
xchg
sub
sti
push
dec
ljmp
xor
lods
adc
adcb
int3
loopne
les
jb
cmpsb
scas
rcll
roll
aad
loop
cmp
out
icebp
rcll
fstps
inc
rcrb
into
gs
sbb
cmc
pop
arpl
fdivrs
sbbl
aam
sub
mov
sbb
inc
mov
jecxz
data16
mov
mov
cwtl
stc
push
call
and
xor
lcall
inc
iret
sahf
and
xchg
jb
lcall
dec
mov
and
xchg
fidivl
movsb
dec
mov
push
shlb
cmc
cmpsl
aad
jne
test
xchg
leave
je
movsl
dec
nop
dec
fnstcw
inc
inc
mov
xlat
outsb
cltd
pop
andb
sub
mov
mov
inc
dec
sbb
sbb
out
mov
pushw
pop
pop
add
adc
pop
repnz
mov
add
hlt
dec
mov
les
jle
fisubl
pusha
hlt
js
aad
sub
jno
xchg
fstpl
subl
hlt
inc
pop
test
mov
std
jnp
mov
jp
bound
int
adc
div
lds
and
xchg
mov
sbb
xor
or
add
in
ret
jae
std
aam
push
mov
cmp
in
adc
int3
dec
out
ja
xlat
test
lcall
outsl
push
popf
mov
add
xor
popa
mov
xchg
dec
pusha
enter
hlt
stos
sbb
jmp
or
lea
adc
xchg
and
pusha
add
movsb
cli
mov
xchg
out
cmp
inc
xor
pop
mov
mov
lock
mov
lock
add
cmp
and
test
popl
pop
push
mov
mov
movsb
ficoms
fcomi
push
xor
xor
jns
push
xor
in
aas
pop
inc
or
dec
in
pop
inc
aam
mov
mov
dec
pop
mov
jmp
cmp
aas
pop
xor
imul
leave
mov
pusha
out
pop
cmpl
pop
jmp
ret
pop
xchg
or
or
je
cs
adc
pop
ret
and
xchg
cmp
stos
test
pusha
jl
xchg
sub
test
cmp
in
shrl
xchg
mov
fstps
xor
ljmp
jg
xchg
adc
ret
xor
xor
cmp
mov
std
aam
aam
adc
adcl
loope
xchg
push
jns
rcrb
push
repz
lret
push
or
push
cs
pusha
mov
cmpb
repz
mov
idivb
dec
jecxz
cmpb
xchg
aad
inc
repnz
ss
ret
xchg
add
test
addr16
xchg
cwtl
and
sub
mov
test
adc
jecxz
add
fldt
jbe
lahf
push
jbe
je
outsb
jno
imul
pop
xchg
xor
add
xor
insb
ljmp
push
or
pusha
jnp
mov
jne
push
call
fistpll
sub
jg
add
jb
pop
mov
xor
mov
pop
fldenv
sarl
nop
inc
cmp
xor
in
sbb
stos
add
mov
leave
and
add
jmp
ljmp
scas
movsl
cmp
xor
pshufw
imul
popf
pop
mov
aas
popa
fsubr
popa
pusha
sbb
mov
lock
dec
stos
mov
ret
and
pushf
call
xor
adc
xor
xor
fisubl
fldenv
dec
jno
jp
sub
and
enter
mov
dec
xor
xchg
jno
xchg
cs
pop
add
js
fadd
pop
add
inc
bound
xchg
sub
push
ljmp
out
lahf
sub
enter
les
mov
movsl
jmp
popa
clc
sahf
iret
bound
xchg
aam
iret
xchg
mov
out
xor
divl
or
xchg
scas
push
sbb
pop
ret
icebp
or
jbe
push
inc
lds
sub
adc
xchg
outsl
ljmp
xchg
pusha
inc
fnstcw
and
pop
bound
push
xchg
jo
popa
ljmp
push
mov
enter
popa
add
iret
mov
fldenv
or
mov
mov
mov
pop
cmp
repz
or
dec
add
pop
sahf
clc
add
mov
subl
xchg
sub
sbbl
fsubs
cltd
xor
mov
lret
out
outsl
shll
pop
push
sbb
cld
scas
jbe
mov
fcoml
xchg
fistpll
outsl
mov
cmpsw
xchg
or
adc
dec
dec
pop
inc
cwtl
xor
add
cwtl
cwtl
push
mov
icebp
lods
cmpsb
movsb
jecxz
stos
inc
push
xchg
stos
mov
cmp
loop
nop
mov
fadds
ljmp
cmp
orl
jne
repz
mov
and
cmpsb
or
push
or
imul
nop
mov
pop
xor
pop
push
ds
xor
popa
shrl
cmp
lods
cli
mov
mov
pop
mov
and
ret
enter
pop
loope
sub
aam
int3
add
push
mov
aad
mov
shrl
fisubs
clc
shll
cli
or
insb
test
sarl
pop
mov
fisttpl
jb
test
shl
jl
std
fcmove
or
sub
mov
xor
sub
out
jbe
or
ss
push
iret
std
rcrl
icebp
in
rorl
jl
lahf
lahf
js
sti
cmp
fdivrl
xchg
sub
add
leave
insb
std
insl
xchg
lods
shl
sub
icebp
dec
pushf
inc
inc
in
ss
das
repnz
mov
mov
xchg
inc
sbb
movsb
xchg
bound
out
ret
fucomip
mov
lret
and
fwait
sbb
mov
mov
lret
popf
sub
call
jb
es
lods
cmp
mov
lcall
in
inc
and
sub
lret
loop
inc
test
aad
xorl
pop
cmp
aaa
testb
cs
mov
aam
sbb
mov
mov
pop
xchg
adc
sub
or
sub
orl
dec
mov
or
rorb
imul
xchg
inc
mov
jo
pop
fmuls
idiv
pop
pop
mov
mov
jge
mov
addb
add
lock
dec
xchg
idiv
mov
sbb
dec
or
sbb
daa
jl
out
adc
aam
cld
cmpsl
pop
or
push
ret
jns
bound
cmp
push
add
aaa
sbb
xor
mov
mov
dec
shll
lcall
jne
inc
push
jp
push
lock
cld
dec
sbb
outsl
sub
inc
pop
jb
int
push
and
inc
mov
and
dec
dec
dec
aaa
or
movb
xor
push
imulb
out
mov
mov
or
xchg
stos
fwait
cmp
lock
push
xor
fcomps
jnp
lret
xlat
daa
dec
pusha
mov
out
inc
int
cmp
inc
jo
imul
mov
frndint
vphadduwq
inc
inc
push
sbb
shr
fwait
or
adc
inc
cmpsb
repz
add
call
in
in
sbbl
jecxz
filds
fucomp
addr16
dec
hlt
nop
aas
push
mov
jg
addr16
pop
cmp
cltd
test
gs
loopne
scas
lret
and
scas
mov
test
mov
repnz
lds
js
aad
push
aam
adc
daa
mov
mov
insl
js
out
jp
mov
jnp
orb
pop
mov
sub
pop
iret
jecxz
negl
jecxz
push
out
sbb
add
int
test
lcall
jge
pop
pop
lret
out
jge
sub
nop
jne
jbe
sub
ficomps
push
negl
pop
or
jb
jle
inc
mov
cmp
sbb
xchg
aam
iret
mov
popl
enter
adc
inc
cs
xor
jno
rcl
daa
rclb
stos
inc
leave
fwait
or
push
jge
clc
or
jbe
pop
push
cli
out
add
and
add
jmp
pop
icebp
loop
sbb
add
sub
fdivrl
mov
arpl
shl
adc
outsl
out
cmp
fnstenv
push
clc
or
jle
int
push
push
jne
push
jo
xchg
mov
loop
dec
out
push
stos
fildll
and
add
into
cmpsb
inc
jbe
fildl
hlt
mov
sahf
ret
jns
fucomi
sub
addr16
sbb
loop
cmp
jnp
movsb
jns
lea
out
jno
sub
ja
cli
test
fnsave
pop
stos
mov
incl
xor
xchg
cld
icebp
out
ret
mov
mov
inc
fwait
xchg
mov
add
and
and
dec
and
stos
dec
adc
sbb
in
mov
iret
cmc
cmp
es
sbb
icebp
les
ret
sub
sbb
inc
xchg
scas
inc
test
push
popf
or
and
mov
test
fisubrs
cld
lock
and
cmp
jp
gs
cmp
imul
insl
lods
loope
setp
dec
xor
daa
jmp
cmpsb
xor
push
push
adc
mov
jg
or
shll
mov
and
xor
lret
std
js
fsubrl
adc
sbb
jge
adc
or
pop
add
sahf
bnd
push
and
outsb
addl
fwait
repnz
jl
enter
ret
loope
aaa
add
arpl
pop
jmp
sub
scas
imul
pop
and
push
xchg
sti
or
test
mov
jmp
cld
outsl
fists
sub
pop
push
insl
pop
mov
jne
insb
out
cmp
imul
sahf
cltd
mov
jnp
inc
push
xor
fmull
popf
or
inc
adc
jmp
push
inc
inc
or
mov
arpl
cmpsl
and
stos
sti
xchg
outsl
fdivp
popf
fwait
xchg
lds
push
xchg
pop
movsb
push
inc
enter
ja
cltd
push
xchg
xchg
je
cmc
mov
or
mov
cmpsl
cmp
bound
push
scas
pop
out
add
xor
dec
pop
pusha
dec
cmp
addr16
lods
mov
xchg
in
push
test
jecxz
or
pop
mov
fisubrl
jmp
inc
push
call
subb
pop
sbb
xchg
repz
jmp
aaa
ret
outsb
lods
or
mov
in
xchg
addr16
add
xchg
mov
mov
mov
sbb
daa
outsl
dec
fbstp
add
rolb
scas
jo
add
into
cmp
adc
das
arpl
cmp
cmpsl
out
shrl
sar
sub
fcmovbe
sbb
sub
mov
scas
jae
loope
mov
loopne
xchg
test
out
fadd
lea
push
icebp
cmp
out
pop
inc
mov
mov
pop
xor
add
cmp
daa
cmp
mov
ljmp
stos
outsl
or
jecxz,pt
lock
or
xchg
mov
test
sbb
pusha
negl
pusha
jle
jne
or
hlt
push
iret
stos
jne
imulb
das
sub
jbe
icebp
or
and
sbbl
sbb
sti
addr16
adc
daa
pusha
xor
dec
add
sbb
or
imul
cmp
inc
stos
pop
push
or
xchg
incb
xor
or
xor
dec
test
lods
ljmp
aas
loop
xchg
loopne
add
pop
ret
inc
mov
sbb
push
and
pop
sbb
out
out
xchg
dec
mov
mov
push
sti
push
jp
sbb
jp
adc
aas
icebp
add
and
das
and
adcl
icebp
push
ficoms
jl
js
pop
pusha
stos
data16
xchg
gs
cli
in
dec
shll
adc
int3
mov
pop
test
mov
xchg
jecxz
cmc
loope
pop
sbb
xlat
sub
mov
shrl
test
rclb
sti
ds
sarl
leave
pop
call
adc
lock
lods
jl
sbbb
sahf
xchg
shlb
into
inc
dec
sbb
hlt
fs
fiadds
test
push
paddb
dec
jne
mov
jl
inc
jmp
adc
in
jge
cmp
pop
sarl
lcall
cmp
mov
push
rorl
sbb
mov
xchg
enter
inc
jmp
fwait
mov
ret
in
inc
jp
imul
and
ljmp
and
add
mov
pop
sbb
cmp
pop
fwait
push
inc
shl
cmp
aaa
stc
push
popf
xor
push
out
xchg
sahf
cmp
sbb
add
xchg
jecxz,pn
and
mov
outsl
push
cmp
mov
rclb
icebp
dec
loopne
add
nop
add
and
pop
pushf
sbb
push
cmp
xchg
sub
test
out
adc
fstp
jns
jmp
jg
pop
ficomps
dec
xor
je
jns
xchg
pop
inc
dec
sub
inc
jb
push
cmp
xor
push
mov
lahf
xchg
lahf
orb
and
mov
add
outsb
push
adc
cmc
ss
or
xchg
sub
pop
cmpsb
call
into
mov
clc
cmc
andb
lahf
add
lods
mov
outsb
mov
cld
mov
subl
arpl
push
xchg
jmp
jmp
repnz
jmp
int
or
ret
mov
mov
sub
jo
call
push
mov
xor
cs
push
xchg
fimull
add
leave
lret
add
ds
sub
pop
xchg
std
xchg
out
and
cmp
dec
add
fdivs
addl
repnz
xlat
stos
mov
or
js
sbb
pop
dec
push
mov
fwait
xor
jno
mov
insb
mov
inc
xor
subl
jl
push
sahf
cmp
mov
outsl
xor
repnz
popa
ffreep
adc
js
out
adc
mov
lds
add
daa
into
mov
in
mov
push
add
test
mov
xor
sbb
outsb
cmpb
mov
repnz
aad
jle
inc
jp
mov
aad
in
mov
add
add
cs
adc
jo
outsl
push
jmp
dec
stc
stos
fldcw
leave
cmpsl
ds
inc
movsl
xchg
add
loopne
cmpsl
or
fisubs
pusha
push
push
push
push
sub
popf
pop
xchg
pop
out
xchg
cltd
std
jb
dec
adc
sbb
xor
mov
lcall
imul
mov
xor
test
shl
jp
sbb
lret
sub
sub
and
mov
sbb
add
subb
or
ds
inc
xchg
add
sbb
out
mov
test
fdivl
sbb
jl
in
xchg
xchg
dec
int
mov
enter
popa
jge
xchg
cwtl
invd
jl
adc
dec
sbbb
gs
and
pop
dec
cs
fadds
fnstenv
fidivl
pop
pop
cs
rclb
add
inc
dec
fidivl
push
popa
leave
sbb
mov
mov
inc
les
shlb
add
adc
sbb
push
stc
rcrb
jle
push
pop
inc
gs
push
push
ljmp
cmp
pushf
sub
loop
and
cli
lret
sti
sbb
jge
loopne
mov
xchg
nop
daa
ret
rcr
jo
and
cmpneqps
mov
or
push
sbb
mov
mov
push
leave
orl
jecxz
inc
push
mov
loope
xor
aas
xchg
pop
mov
je
cmp
or
int3
rol
push
sbbb
gs
push
pop
or
mov
fiadds
inc
das
stos
sbb
xlat
adc
clc
sbb
shrl
inc
fsubs
in
inc
cmp
lock
dec
addl
mov
cmp
cli
sub
sub
js
lods
cmp
je
cmp
test
pop
loopne
mov
add
inc
out
fcomps
cs
jns
lods
cld
jbe
lods
jl
adc
std
inc
or
mov
sbb
aas
ret
cmpsl
js
push
sbb
decl
xchg
xor
sbb
or
stos
xchg
dec
xor
in
in
sub
inc
add
jbe
inc
xchg
fs
mul
arpl
ss
sti
xchg
jae
clc
ss
ret
jb
cmp
daa
cmp
test
xor
lods
sahf
notb
les
mov
subl
mov
jmp
mov
stc
pop
sahf
sub
gs
cmpsb
and
test
lods
pop
sub
daa
stos
dec
lret
inc
pop
aaa
jb
mov
shlb
scas
shl
sarb
push
fdivs
cmpb
sbb
int
icebp
xchg
sub
test
xchg
dec
pop
int3
out
dec
xlat
in
repnz
dec
xchg
cs
mov
repnz
adc
xchg
in
sbb
punpcklbw
adc
xchg
mov
lret
addb
xor
cmp
test
mov
icebp
scas
pop
aaa
iret
inc
xchg
daa
jge
and
and
lret
lret
jmp
and
dec
int3
das
jo
mov
fucom
and
xor
fbld
insl
mov
push
popf
int
lret
aas
popf
cmpsl
xchg
lea
mov
dec
and
dec
daa
outsl
push
cltd
jnp
dec
xor
out
fwait
daa
lds
pop
fdiv
dec
mov
adc
mov
mov
cmp
add
cmp
mov
ss
divl
cmp
adc
and
cmp
push
push
add
sbb
push
push
xchg
cmp
ficoms
mov
add
mov
pop
ret
adc
jg
pop
call
dec
push
hlt
addr16
loope
add
pusha
xchg
xor
fidivs
movsb
dec
mov
scas
cmp
cmpl
mov
loopne
pop
mulb
mov
push
sub
mov
dec
sub
inc
xor
cltd
lock
sahf
and
inc
jo
sub
sbb
or
push
ss
subb
jle
nop
pop
push
adcl
loope
test
cmp
xor
dec
and
push
jae
jbe
cmpsl
imul
nop
jmp
cmp
jl
xchg
mov
push
insl
push
stos
sbb
or
sub
data16
cmp
icebp
adc
jne
call
sub
sbbl
mov
jno
and
shll
rcrl
cld
inc
imul
cmp
xorl
mov
cmp
call
lea
lods
cmpsb
mov
adc
pop
sub
pop
jns
dec
scas
sub
sbb
xor
pop
fidivrl
jbe
cltd
xchg
mov
sbbb
push
test
mov
push
notb
insb
mov
das
insb
inc
daa
leave
mov
rcll
in
cmpsl
mov
aaa
mov
push
subl
push
push
xlat
xor
imul
test
mov
shlb
mov
or
sar
add
or
push
xor
out
dec
in
popf
xchg
mov
shrb
mov
add
push
jnp
inc
adc
adc
pop
sbb
xor
and
dec
push
mov
xchg
cld
aam
jecxz
push
sbb
pop
repnz
pop
fistl
jmp
or
add
pop
js
cmpsl
ds
cmp
push
push
rorb
imul
mov
aam
cltd
in
and
push
push
sahf
pop
hlt
pop
cwtl
dec
pop
leave
sub
pop
jmp
es
frstpm(287
mov
lods
cmp
outsl
mov
pop
xor
jno
dec
mov
les
aam
aad
insl
mov
mov
cmp
sub
adc
fdivl
xchg
and
add
xchg
cmp
aas
push
bound
pusha
test
push
pop
testb
jge
mov
rcrl
test
inc
roll
sub
cmp
into
jno
lahf
adc
add
or
or
les
adc
lods
or
inc
adc
and
and
lods
dec
aad
movsl
xchg
xor
and
or
inc
popf
cmp
sbb
stos
xchg
movsb
dec
insb
ja
fisubrs
adc
ficoml
push
inc
or
decb
sti
jp
mov
adcb
push
sbb
rol
das
mov
popa
jecxz
out
cs
push
mov
inc
jbe
cmp
enter
push
cmp
dec
mov
arpl
sbb
dec
loopne
cmp
push
div
mov
jb
fisubl
dec
fsubrs
jp
sbb
push
insl
fs
les
push
pop
mov
push
fnstsw
cltd
adc
fdivl
stos
in
xor
rorl
pop
cltd
adc
xchg
or
inc
lret
dec
or
fsubrl
push
or
iret
outsb
inc
pop
jge
xchg
add
mov
xchg
mov
fistps
negl
pop
fwait
sbb
mov
shrb
or
push
leave
dec
loope
mov
jne
push
pop
jo
xor
cmpsl
push
push
cmpl
sbb
pop
inc
in
shlb
pop
jle
dec
dec
xchg
mov
cmp
popf
stc
shr
pop
dec
adc
mov
pop
enter
dec
lcall
icebp
add
inc
and
inc
mov
dec
pop
push
and
xchg
data16
add
mov
out
test
lods
cmp
negb
fisubrl
inc
mov
sbbl
pop
mov
cmpsb
adc
addr16
hlt
adc
mov
scas
inc
jb
jae
addr16
lcall
js
cmp
mov
adc
sbb
test
xor
cld
adc
jle
sub
mov
scas
mov
dec
loop
inc
adc
push
mov
fdivr
jp
mov
les
jle
xor
roll
jp
mov
xor
mov
cli
mov
inc
sahf
sbb
sahf
imul
cmp
outsb
add
dec
outsl
test
inc
ret
mov
pop
stos
cmpl
ret
stc
hlt
jb
lods
mov
cmpsl
mov
mov
es
adc
add
iret
xor
adc
rolb
push
rep
call
test
ss
mul
cmc
add
mov
jge
fcoms
mov
incl
fisttpll
shl
sub
sub
fildll
and
push
dec
fmuls
or
pop
cwtl
mov
ret
lods
cli
out
testl
mov
add
rolb
gs
int3
push
popf
jge
jne
jae
and
dec
sbb
das
xchg
jmp
push
push
xor
push
std
push
in
rcrl
xor
ret
call
jg
add
scas
mov
fsubr
cli
or
clc
nop
mov
add
fidivs
push
pop
xor
movsl
insb
cmp
cmp
lea
mov
or
cmp
loopne
out
add
aaa
inc
pop
sbb
sbb
ffree
jno
add
and
clc
jecxz
push
test
jmp
add
pop
inc
loop
les
cmp
adcb
je
dec
sarl
push
mov
jb
lcall
dec
pop
testb
or
mov
bound
cs
cmp
and
negl
xor
dec
pop
xlat
push
jp
inc
pusha
sbb
adc
mov
dec
out
jecxz
mov
add
push
mov
pop
jle
jmp
ss
mov
add
and
dec
fnstsw
aad
xchg
imul
arpl
iret
sbb
mov
xor
push
push
in
cmp
or
out
pop
je
pop
xor
mov
icebp
pop
aaa
and
shll
or
test
lods
cs
imul
and
sub
pop
mov
sbb
std
adc
dec
outsb
cltd
in
mov
push
pop
xor
pop
outsb
es
pop
pop
call
fstpl
inc
cmp
xchg
push
mov
jle
mov
xchg
pop
mov
dec
sarb
idivl
cmp
jg
mov
ret
xorl
sbb
cmp
mov
push
hlt
mov
push
aad
out
and
dec
popa
jnp
mov
sbbl
inc
mov
leave
pusha
dec
cmp
pop
jo
out
and
out
lret
cmp
shll
lds
fdivrl
add
pop
je
mov
pop
xchg
pop
mov
or
inc
fdivrl
fstpl
xor
shrb
in
inc
test
cmp
in
push
loopne
pop
adc
sub
ret
shr
jge
jnp
sbb
mov
movsl
xchg
loop
cmp
aas
mov
rol
arpl
sbb
mov
lret
std
mov
jmp
shlb
xchg
add
pop
mov
je
xor
sub
pop
clc
xlat
ret
cltd
incl
cmc
xchg
fidivrs
arpl
dec
xor
test
cmp
push
mov
add
insb
add
mov
andb
pop
dec
lods
scas
mov
adc
shlb
pusha
or
cltd
mov
jp
and
in
mov
ss
gs
pop
mov
popa
das
rcll
ss
call
jmp
lea
adc
mov
mov
sbb
imul
inc
addb
xchg
pop
adc
shrb
push
loopne
mov
adc
pop
js
mov
mov
in
xor
dec
cwtl
pop
insl
rorl
fs
int3
mov
mov
imul
imul
mov
and
add
sub
sub
inc
mov
cmpsl
cmc
mov
push
mov
fldcw
mov
jnp
lds
pop
movsb
add
mov
cmc
pop
incl
push
jle
add
mov
fisttps
aas
les
pop
lret
jnp
mov
adcb
xchg
nop
jne
mov
cmp
jl
movsl
je
insb
push
dec
lea
or
xor
or
mov
lahf
sbb
jae
pushf
and
inc
or
lock
nop
sbb
inc
push
stos
add
cwtl
test
xor
fs
out
test
scas
and
movl
xor
fildll
cmp
lods
mov
data16
inc
or
mov
mov
repnz
jmp
inc
test
inc
sub
out
sub
sbb
ljmp
inc
push
fimull
and
or
cmp
inc
xorb
mov
xor
adc
clc
gs
lods
nop
sbb
in
rol
or
repnz
jns
or
in
pop
cmc
mov
icebp
cli
jno
mov
ret
mov
loopne
call
cltd
mov
sbb
fs
inc
call
lods
mov
lahf
gs
test
ficompl
outsl
orb
jge
dec
and
add
fnsave
add
cli
mov
adc
outsl
mov
mov
scas
in
test
cmp
inc
and
leave
xor
push
cmpsb
icebp
jecxz
mov
cmpsb
push
lods
mov
loopne
ficoml
jecxz
and
icebp
mov
addr16
mov
pushf
cmpsb
fwait
scas
push
ljmp
pop
fildl
fldl
ret
enter
add
insl
add
subb
xor
loop
imul
jle
inc
pushf
jmp
leave
and
sar
stos
inc
mov
insl
inc
fidivrl
int3
decb
lea
mul
xchg
ljmp
insb
dec
or
adc
sub
sub
mov
in
rcrl
sarb
dec
pop
or
mov
movsb
add
jbe
jl
cmp
pusha
xchg
pop
out
inc
lret
test
inc
inc
daa
testb
std
sahf
imul
sub
or
mov
insb
xchg
and
push
inc
fildl
xchg
cmp
enter
fidivl
inc
fcomps
js
pop
aas
fidivrs
int
xchg
out
test
psrlw
mov
fcomps
jnp
ljmp
test
mov
test
nop
fwait
sbb
mov
xor
nop
js
or
clc
mov
cmp
cmp
imul
dec
push
mov
movsb
xchg
scas
scas
and
pop
add
sub
add
sub
xchg
popf
stc
cltd
shrl
icebp
pop
add
out
hlt
pop
ret
jo
repz
hlt
jne
dec
mov
insb
push
andb
cmp
fnstcw
clc
lea
inc
inc
cld
pop
stos
jmp
and
xor
push
aas
ret
lret
inc
fwait
or
leave
jo
xor
inc
cmp
push
mov
fiadds
outsb
andl
add
jno
mov
pusha
cbtw
clc
adc
xor
outsl
ja
jb
xor
fidivrl
popa
nop
daa
xchg
cmp
xchg
inc
ss
sbb
xchg
pop
les
stos
mov
loop
stos
stos
ljmp
lods
test
pop
dec
insb
cli
jno
cs
or
sbbb
xlat
cli
xlat
add
ds
scas
sub
inc
and
jne
jle
ret
in
std
lret
pop
out
test
pop
idivb
or
fwait
cltd
jge
lret
cmpsb
sub
sbb
inc
inc
inc
cmp
mov
fucomip
xorl
ds
or
rcll
xchg
dec
jmp
dec
fdivl
push
jo
lret
sbb
sub
push
insb
std
dec
push
out
jle
jbe
data16
pop
clc
mov
das
addr16
dec
mov
out
xchg
mov
adc
xor
xchg
ficomps
lods
jmp
test
rcrl
loope
or
mov
adc
adcb
into
add
xchg
add
mov
mov
lods
jmp
cltd
pop
pop
imul
adc
mov
jp
mov
call
rcl
sbb
add
lahf
idivl
aad
sbb
or
int3
test
lcall
ret
rep
je
mov
inc
mov
pop
sbb
push
into
ljmp
jl
rep
or
dec
fidivrl
loop
mov
pop
arpl
mov
mov
fsubr
cmpsl
pop
fdivr
xchg
or
and
or
scas
fidivs
cltd
cmp
addb
pop
jle
sbb
jns
popf
int
xor
jl
xchg
out
jb
push
add
js
test
ljmp
stos
or
shl
mov
sarb
ficomps
pop
lods
sahf
or
mov
sbbb
out
sub
mov
outsb
in
xchg
mov
and
bound
push
popa
out
iret
pop
jp
test
push
cmpsl
sbb
add
push
fs
stc
arpl
in
sub
dec
xor
mov
lret
mov
shll
test
insl
stc
or
add
push
jo
fiaddl
lahf
mov
test
lea
mov
inc
adc
addr16
dec
jne
lcall
sbb
rcl
enter
mov
fidivrl
lods
inc
leave
mov
lret
xor
sahf
push
ds
inc
pop
aam
pop
into
sub
dec
xchg
fimull
and
insl
shl
ret
in
mov
shrl
xorl
sti
rcrb
sti
xchg
ja,pt
mov
or
adc
das
pop
pushf
xor
cld
mov
in
lcall
int3
insl
call
outsl
jns
in
adc
ret
jle
dec
aam
cmp
imul
std
cmc
push
mov
push
loop
push
fisttpll
add
mov
ficoms
cld
out
movsl
outsb
and
cmpsl
and
mov
xor
xor
insl
or
cltd
es
pop
and
fsubl
xchg
pop
cld
outsb
push
or
shrb
mov
test
cs
mov
jmp
add
adc
or
xchg
js
and
stos
pop
mov
push
xchg
add
xor
leave
or
je
jbe
inc
insl
xchg
lods
xchg
jle
shrb
push
jnp
inc
fstl
insl
pop
call
mov
in
pop
mov
and
dec
or
in
cmp
lcall
fldt
mov
cmpl
in
xor
sub
aam
aad
repz
inc
aad
jnp
loope
mov
int
in
pop
jmp
xchg
sub
xchg
xchg
hlt
dec
dec
mov
xor
bnd
in
nop
sub
pop
sbbl
inc
lock
or
sbb
hlt
add
imul
pop
pop
leave
orl
ds
xlat
rol
add
adc
xchg
mov
adcl
xchg
lea
aaa
fwait
pop
pop
mov
dec
mov
push
xor
pop
pop
push
adc
push
mov
shlb
xchg
cmpsb
outsb
push
fistpll
std
xchg
jle
negb
mov
push
pop
in
gs
nop
movsb
jb
push
adc
push
push
addl
sbb
test
test
inc
lods
mov
mov
push
add
sbb
xchg
and
insl
jp
rep
dec
test
mov
cli
cltd
es
or
dec
imul
into
lds
adc
cwtl
mov
add
hlt
ja
ja
movsl
movsb
mov
xchg
adc
mov
leave
movsl
xor
pushf
mov
inc
and
adc
les
mov
lahf
cmp
sub
add
mov
push
sub
arpl
out
int
xor
dec
inc
loop
data16
jo
lret
and
mov
lods
or
jnp
inc
adc
inc
pop
movsl
stos
dec
xchg
mov
or
sub
aas
jbe
adc
or
inc
ret
repz
daa
mov
int3
or
imul
movsb
xchg
stos
fdivr
xchg
cs
lahf
hlt
lret
sub
std
adc
adc
push
adcb
sub
imull
das
sahf
movsl
das
lret
mov
loop
in
fidivl
add
mov
fidivrs
lea
in
sar
add
xor
and
mov
ret
lock
fistpl
mov
xchg
or
movsb
shrl
cmp
push
push
leave
adc
ret
adc
in
add
cli
fisttpl
pop
jno
add
lahf
stos
mull
sahf
in
arpl
or
fs
dec
fidivrl
cmpsl
and
inc
xor
mov
mov
xlat
daa
rorb
jnp
adc
lea
or
push
xchg
sub
fbstp
bound
fsubr
inc
or
sub
out
pop
mov
xchg
xor
sbb
aaa
push
sbb
jg
mov
fsubrl
ret
in
out
rorb
pop
in
jp
or
cmp
push
lods
aas
cli
sbb
mov
mov
addr16
jmp
js
aas
push
std
mov
inc
mov
jge
add
outsb
rcrl
lret
add
xor
xor
pop
push
pop
aad
push
fsubrs
fidivs
or
cltd
pop
sbb
and
cltd
nop
jmp
mov
js
pop
mov
scas
ja
popf
stc
subl
loope
sbb
lock
pop
out
mov
ret
outsb
cmc
xor
movsl
sbbl
outsl
jmp
in
fwait
mov
cmp
jnp
lcall
mov
lcall
cmpsb
dec
jl
in
repnz
popf
iret
adc
js
arpl
out
out
push
or
mov
stos
repz
push
imul
cmc
and
shl
icebp
lods
add
and
movsb
test
push
int
out
jecxz
jne
sub
xor
jno
push
cmpsl
cltd
arpl
pushf
cmpsl
adc
or
fldt
xchg
fcomip
dec
aas
jo
push
test
dec
xchg
mov
sbb
sahf
xchg
sbb
cmp
dec
outsl
ret
push
cmpsl
lcall
out
pop
repnz
clc
dec
scas
mov
fistl
adc
iret
mov
xchg
scas
adc
dec
push
andb
jae
filds
cmpsb
add
lahf
pop
add
mov
dec
in
or
adc
xor
pop
cltd
ss
sub
pop
adc
fiadds
sub
mov
inc
inc
rcl
pop
pop
adc
mov
stc
push
jl
pop
sub
testl
aaa
enter
pop
mov
incb
cld
ljmp
adc
loop
pop
pop
mov
jge
repnz
and
imul
jo
mov
movsl
xor
sbb
xchg
test
in
test
mov
push
xor
sub
xchg
push
inc
mov
push
sbb
test
movsb
xor
jl
pop
mov
std
mov
es
sub
test
xchg
lret
pop
lret
cwtl
imul
mov
sbb
in
movsb
mov
pop
push
jbe
cs
dec
sub
es
dec
and
lds
mov
repnz
adc
dec
or
xchg
fidivrs
dec
popa
loope
stos
inc
fmuls
jne
ds
aad
fstpl
or
and
pushf
cmp
dec
or
sti
push
sub
data16
mov
sahf
xchg
repz
jb
cmp
fisttps
andb
pop
xchg
xor
faddl
aad
cmc
ficoms
repnz
shrb
iret
pop
jb
cltd
add
cmp
jecxz
add
xchg
jno
pop
mov
push
movsl
mov
push
fldlg2
mov
pusha
fucomi
dec
stc
jle
cmpps
xor
adc
mov
int3
cltd
xchg
nop
lods
sahf
xchg
pmulhuw
inc
loope
in
data16
pop
rorb
icebp
fwait
cmp
pusha
cmp
and
orl
popf
cli
pop
inc
imul
and
out
orb
pop
lcall
imul
mov
push
dec
and
add
dec
mov
or
sub
jle
xor
push
jne
xchg
mov
add
loopne
jg
mov
push
xchg
inc
scas
adc
jae
shlb
stos
push
sahf
clc
and
jmp
lock
inc
mov
xchg
xor
jbe
pop
add
mov
dec
xchg
fwait
jo
xchg
jecxz
pop
adc
mov
std
imul
dec
addl
sub
xchg
fisubl
add
cld
int3
es
arpl
adc
loop
jge
sbb
cmpsb
mov
xchg
push
std
fistpl
cltd
xor
popf
add
ja
inc
pop
dec
cltd
pop
test
xor
adc
xchg
cmp
push
push
jnp
sbbb
sbb
test
xlat
outsl
push
mov
mov
pop
mov
mov
or
out
mov
stos
mov
pop
cltd
cmp
ret
pop
ret
or
inc
xor
mov
pop
push
pop
lahf
sbb
ds
xor
pop
dec
pop
into
mov
lret
cwtl
push
mov
mov
sbbl
mov
lret
jge
pop
lock
ja
dec
pop
ss
xchg
test
xor
es
push
movsb
out
dec
ds
fcomps
rcll
jno
fbld
inc
and
xchg
dec
inc
dec
repz
cwtl
xchg
jp
lods
cs
jge
into
mov
or
shrb
mov
dec
xlat
xlat
outsb
pop
in
pop
in
pop
cmc
gs
scas
xor
test
ss
bound
std
xchg
hlt
ffree
inc
mov
sbb
mov
jnp
lcall
jmp
xlat
push
in
or
cmc
mov
push
addr16
adc
xchg
mov
bnd
les
in
add
gs
daa
in
xor
push
cmp
aaa
stos
andl
mov
lods
ret
daa
mov
insb
inc
jg
negl
lds
fwait
and
je
xor
jno
cwtl
cmp
adcb
stc
jne
jmp
stos
daa
in
lock
push
scas
add
jp
mov
and
push
pop
rcl
imul
dec
and
push
sbb
jne
lea
repz
xchg
and
cmp
mov
mov
mov
int
leave
test
sbb
xor
pop
aaa
iret
aad
insl
test
add
or
test
leave
inc
add
mov
incl
fsubrs
inc
iret
pop
jne
jmp
pop
addr16
push
mov
xchg
jle
movsl
inc
mov
fcmove
xchg
iret
ljmp
lcall
sbb
push
xlat
inc
push
jecxz
enter
out
inc
jae
mov
dec
xchg
xor
adc
inc
ret
rorl
pusha
jno
jl
cmpl
int
cmp
loopne
inc
ljmp
xor
xchg
mov
mov
add
inc
cld
xchg
je
push
out
sbb
lods
ss
cmp
mov
dec
pop
setp
fldt
loopne
ds
adc
mov
int
arpl
cmc
out
popa
jg
push
push
add
icebp
lcall
mov
fistps
push
mov
loop
mov
cmpsl
jnp
cltd
shr
xlat
loopne
or
fsubs
outsl
cmpl
cmpsl
stos
imul
inc
cwtl
dec
andb
jge
mov
xlat
ret
cltd
data16
cmpsl
mov
loope
rcrb
pop
out
cli
push
je
jae
jbe
dec
push
jp
mov
lcall
bound
mov
popa
out
pop
mov
cmp
mov
adc
mov
sub
adc
and
es
pushf
push
cmp
nop
push
inc
pop
cmc
xor
mov
mov
xor
jnp
fmull
jge
es
sbb
mov
fcmovnb
cmp
cld
jmp
xchg
push
loopne
mov
aaa
fwait
xchg
adc
outsb
popa
xor
cmp
lahf
lea
movsb
stos
mov
xchg
jg
popf
movsb
cltd
test
dec
add
loopne
enter
inc
icebp
pop
mov
pop
jge
and
sub
popa
nop
pop
enter
stos
and
mov
mov
lods
cmp
push
inc
lret
roll
mov
shlb
out
sahf
in
inc
cltd
cmpsl
xor
push
mov
loop
out
inc
mov
jns
test
sbb
cmc
xchg
cs
ja
cli
mov
sub
mov
push
leave
movsb
repnz
add
fdivs
pusha
fsts
inc
pop
push
xchg
push
cmpsl
jg
les
aaa
jecxz
outsl
adc
mov
mov
pushf
push
or
dec
jge
pop
jbe
out
jmp
test
fwait
sti
mov
xchg
push
out
scas
sub
push
dec
xchg
movsb
mov
jae
cmpsl
test
push
loopne
je
add
jnp
pop
mov
testb
lds
adc
xor
dec
in
insb
pop
data16
pop
cmp
nop
or
cltd
xchg
dec
dec
inc
stos
jno
rclb
fs
in
test
xchg
cmc
mov
gs
push
pop
gs
adc
movups
mov
and
fdiv
inc
mov
mov
xor
or
stc
dec
paddd
xor
push
shr
dec
or
mov
lret
pop
add
ds
mov
roll
inc
push
mov
sti
pop
and
clc
sbb
adc
rolb
mov
jbe
sahf
xchg
stos
sub
pop
cld
mov
adc
std
sub
pusha
jp
mov
or
jl
xchg
add
cmp
adc
xchg
je
inc
data16
pop
adc
xchg
out
mov
sub
xor
out
sbb
dec
mov
out
add
sahf
sub
iret
bnd
mov
dec
rcrl
jno
movsl
mov
lret
pop
cld
icebp
cmp
outsb
adc
xchg
cmp
inc
and
add
ljmp
cli
mov
in
hlt
pop
js
xchg
adc
jb
mov
int3
pop
adc
cmpsb
aaa
mov
or
sub
movsb
aaa
imul
fldenv
add
xchg
scas
sbb
jle
xor
popf
dec
or
bound
sbb
jle
flds
mov
pop
mov
std
adc
hlt
and
pop
arpl
rol
nop
pop
jo
call
xchg
pop
test
add
test
and
jg
hlt
mov
inc
call
xlat
pop
and
daa
jno
fdivs
mov
adc
jne
pop
aaa
mov
test
sbbl
pop
pop
jb
sbb
xchg
int3
das
fistpll
xor
xchg
add
cmp
jbe
cmpl
lcall
mov
cmp
outsl
xlat
insl
stc
pop
mov
fucom
xor
repnz
popa
xorl
in
xlat
into
pop
adc
push
sbb
cltd
sbb
adcb
je
dec
mov
xor
cmp
push
outsb
mov
cmp
mov
fisttpl
xlat
adcl
addr16
out
dec
movsb
hlt
or
and
mov
add
xor
cmp
sarb
test
daa
mov
gs
std
pop
push
xchg
sub
das
scas
popf
pop
leave
sub
dec
negl
les
shrl
push
inc
xor
and
leave
icebp
push
jmp
sub
sub
pop
lds
cld
cmp
dec
pop
add
scas
mov
lods
mov
in
add
add
daa
jnp
pop
mov
xchg
lea
stos
or
xor
movsb
add
sub
cs
xchg
fwait
push
inc
mov
xchg
dec
push
jns
pop
test
fbstp
movsb
mov
fsubr
rcrl
add
lahf
ss
add
xchg
push
insl
ret
pop
arpl
fistpl
fsubr
and
cmpsb
ds
dec
xchg
push
and
xchg
sahf
clc
rol
inc
cld
mov
cmp
push
xchg
cwtl
or
cmp
and
push
testb
xchg
rorl
stos
pop
xor
in
xor
cld
stos
push
leave
pop
xchg
rorb
daa
jb
push
mov
setb
xor
jae
cmc
inc
iret
cmp
cmp
jle
out
icebp
sarl
add
fisttps
int
daa
mov
and
mov
lahf
pop
xor
or
es
test
lahf
notl
ror
add
push
push
jbe
pop
rcrl
gs
cmp
pusha
scas
cli
pop
andb
adc
pushf
scas
cmp
pop
mov
mov
rorb
lahf
add
mov
mov
jae
mov
sub
sub
fs
test
in
adcl
cs
cmp
stc
scas
fsts
jle
inc
pop
mov
xlat
sbb
shl
push
jle
push
loopne
dec
pushf
sbbl
jne
movsb
les
add
push
and
vpminub
cmp
lahf
hlt
mov
mov
or
fistps
lods
mov
xchg
jmp
mov
stc
loope
xchg
sub
fidivs
and
xor
xor
das
stos
xchg
mov
orb
dec
xchg
mov
mov
pop
filds
push
jmp
inc
int3
outsl
add
scas
jecxz
and
stos
add
fs
popa
and
cmpsb
mov
mov
fisubs
and
ficompl
adc
pop
xchg
je
loop
shll
out
mov
pop
inc
cwtl
insl
fcoms
pop
sahf
inc
rorl
cmp
in
push
shll
or
nop
push
ret
lock
das
lret
cld
push
or
adc
movsb
das
out
cli
jmp
leave
xlat
popf
or
imul
pop
call
pop
pop
hlt
nop
dec
cmpsb
mov
and
cwtl
push
push
fisubs
mov
lahf
mov
mov
jae
fisubl
fcoml
adc
pop
xchg
and
inc
lcall
inc
xchg
test
cmpsb
test
jle
cmc
sub
mov
mov
and
mov
addr16
decb
notl
test
push
adc
pop
repz
pop
negl
jp
xor
scas
ds
into
decl
jg
and
add
shll
into
pop
jg
dec
sub
dec
lcall
in
call
pushf
mov
or
pop
and
clc
push
jns
pop
mov
add
fsubrs
add
lret
pop
xchg
mov
lcall
mov
cmp
adc
pop
enter
push
jbe
inc
pusha
push
data16
pusha
mov
mov
aaa
cmp
sahf
lods
or
push
xchg
dec
outsl
loop
cmp
pop
mov
jns
and
mov
aas
lret
lahf
push
jmp
out
mov
or
sar
pop
pop
sar
push
pushf
xchg
sub
dec
fisubrl
cmp
cld
fwait
push
ljmp
jg
mov
icebp
das
test
xchg
ficoml
pop
loope
in
loope
add
cltd
jo
imul
in
pushf
push
repnz
inc
aas
out
fcoms
and
adc
cld
pop
pop
jne
add
xchg
jnp,pn
cmp
and
xor
mov
push
in
jb
jecxz
and
fcomps
nop
js
scas
inc
sub
mov
adc
arpl
mov
mov
jl
fsubs
pop
inc
xchg
sub
scas
int
jno
adc
fsubr
iret
loop
std
out
or
push
adcb
pop
cmp
leave
adc
lea
fbstp
mov
shrb
into
sbbl
cmp
jge
mov
jno
jmp
stos
mov
jne
jb
mov
and
aad
dec
scas
scas
mov
pminub
mov
inc
xlat
jnp
sbb
and
mov
dec
cmp
xlat
js
xchg
stc
fcomps
xchg
xlat
seto
adc
into
mov
mov
xchg
adc
idivl
shll
hlt
pop
jae
mov
popa
xor
inc
mov
ss
push
push
insl
insl
xorb
fmul
and
loope
stc
jecxz
jno
fisubs
in
stos
sub
inc
sti
mov
push
cmp
sti
fwait
lahf
les
mov
add
mov
xor
fnstenv
shrb
xchg
imull
scas
inc
sbb
cmp
jl
test
cmp
sbb
loopne
push
stc
mov
mov
cmp
icebp
adc
in
sub
je
jne
addr16
sti
rolb
xor
loope
cmp
inc
inc
jmp
jno
xor
mov
cli
pop
inc
adc
lcall
pusha
mov
sbb
jle
sub
in
shll
pushf
mov
add
jae
inc
clc
push
scas
in
loopne
sub
add
push
mov
gs
xchg
pusha
xor
cmpsb
push
call
xchg
mov
sahf
xchg
repz
popf
and
cmp
aas
mov
inc
notl
rorb
adc
test
jo
imul
jbe
mov
inc
jbe
cmp
push
xchg
add
test
jge
fmull
push
mov
pop
mov
dec
dec
pop
fstl
jbe
inc
sar
fucomp
xor
data16
sti
pop
mov
lea
pop
ds
mov
push
mov
fistl
dec
movsl
daa
push
insl
mov
jnp
aas
invd
pushf
test
mov
movsl
sahf
test
dec
iret
or
fistl
sub
ljmp
jle
repnz
jg
jmp
sbb
xor
shrl
test
or
cmpsl
mov
push
popf
or
mov
cs
insl
mov
test
inc
aam
in
subb
pushf
mov
sbb
fisubl
mov
mov
aam
stos
rclb
mov
adc
cmp
nop
push
fwait
popa
aad
xchg
mov
jmp
loop
xchg
movsb
jmp
or
mov
out
inc
pop
xor
das
movb
rorl
adc
arpl
fwait
and
jmpw
xchg
jle,pn
cmpsb
js
ja
in
jecxz
ret
mov
imul
mov
jb
xchg
push
mov
cmpsb
cli
or
loopne
jmp
testl
popa
mov
cmpsb
enter
pop
mov
sbb
cmp
inc
divl
fidivrs
add
cmp
pusha
add
dec
push
cmc
rol
je
ret
cltd
mov
popf
into
enter
adc
gs
divb
add
aaa
push
loop
add
lods
out
arpl
iret
jns
imul
pop
int
add
inc
es
sbb
or
or
cmp
mov
loop
fdivl
pop
bound
pop
iret
sbb
movsl
lds
mov
add
fiadds
inc
icebp
fidivrs
mov
clc
leave
lret
cld
mov
xor
rorb
pop
mov
push
mov
xchg
cmp
outsl
cmc
push
imul
aaa
aas
push
cli
and
test
shlb
ror
pusha
iret
mov
std
and
in
fidivrl
pop
mov
cmc
loope
dec
mov
push
jmp
mov
outsb
out
call
adc
test
dec
or
push
mov
mov
sbb
cs
ja
adc
adc
shlb
adc
out
das
imul
mov
sbb
lret
imul
sar
xor
leave
xchg
nop
pop
pop
mov
in
lods
mov
fadds
arpl
insl
add
popa
scas
fsubl
divl
pop
mov
mov
lods
ljmp
ljmp
loope
loopne
in
popa
xlat
punpckhbw
pop
test
inc
scas
adc
xchg
jg
js
aad
sbb
testb
loopne
sub
pop
or
sub
push
inc
scas
fsubr
loopne
sahf
arpl
aas
aad
ljmp
rolb
pop
inc
out
and
or
cltd
dec
dec
decb
mov
jecxz
fcomi
data16
rol
outsl
lcall
jl
arpl
push
mov
loopne
stc
push
or
gs
and
mov
out
decb
leave
pop
lods
mov
call
sbb
sub
sti
and
mov
int
mov
lods
push
and
lret
jb
rcrl
mov
and
inc
and
ja
add
mov
clc
fwait
cmp
push
jecxz
jmp
adc
push
cli
inc
inc
stos
xor
loopne
loop
push
adc
fnsave
push
inc
mov
leave
movsl
sbb
iret
lret
lret
leave
repz
push
pop
dec
and
adc
pop
outsl
cs
jp
push
js
pop
outsb
sub
push
in
or
pop
insl
fsubrl
jno
dec
les
andb
mov
shlb
xchg
sub
shll
pop
dec
push
movsl
jnp
add
ret
mov
lods
adc
aad
lods
and
xor
xchg
mov
into
clc
mov
or
sbb
sbb
cmp
out
arpl
xor
pusha
fs
jns
repz
or
cmp
lcall
inc
test
leave
lock
call
or
int3
popa
add
push
push
inc
dec
std
mov
sbb
cmp
repnz
dec
scas
sub
loope
jnp
arpl
inc
mov
test
rcll
daa
mov
mov
test
cmp
xchg
add
out
push
movsl
mov
mov
gs
std
dec
dec
lods
fwait
push
add
adc
fwait
aam
push
xlat
jae
pop
shlb
mov
inc
xchg
push
push
sti
jmp
inc
cmpsw
xor
imul
lret
ret
hlt
in
or
rcrl
xchg
mov
fistps
rcrl
adc
sbb
cltd
arpl
mov
mov
or
or
push
or
das
addr16
in
cmpsl
shr
xor
popf
cwtl
cmpsl
cmp
or
cmp
add
sbb
sbb
aaa
and
movsb
cmp
fiadds
add
push
mov
push
jmp
or
or
mov
sub
inc
mov
push
out
int
das
addr16
sub
lods
call
adcl
aad
add
mov
lods
push
test
divb
jne
xor
xor
xor
fs
aam
mov
cmpsb
fimuls
in
mov
dec
test
lea
pcmpgtw
xchg
in
int
or
inc
mov
hlt
inc
lahf
mov
inc
ss
add
fcompl
adc
icebp
dec
adc
jl
fsubl
stc
popf
les
test
and
ljmp
test
daa
inc
mul
sahf
push
fbld
movsb
in
adc
jne
test
add
out
jp
sub
xchg
jge
inc
testl
cmpsl
ds
es
fstpl
fidivs
or
cmp
push
aaa
or
mov
or
testb
sbb
mov
mov
fisttpll
push
adc
push
movsb
fidivl
push
cwtl
in
cmpsb
stc
cmp
sbb
ja
aam
xchg
push
mov
in
jae
xlat
jmp
mov
clc
psubw
mov
push
mov
inc
sub
mov
ffreep
inc
xchg
jp
pop
daa
gs
cmp
mov
loope
sbb
mov
pop
mov
ret
cmpsb
ds
mov
pushf
shll
test
call
mov
test
mov
ja
jle
xchg
ljmp
jno
jp
inc
push
fisubs
into
adcl
cltd
and
inc
test
test
mov
xor
push
inc
rol
push
lods
add
xor
pop
sub
mov
ret
mov
mov
nop
adc
add
into
fidivl
popf
or
push
xor
fidivrs
fs
repz
adcb
adc
scas
in
xor
subb
sbb
dec
mov
jbe
daa
cld
sti
divl
adc
sbbl
push
test
mov
xor
cmp
nop
cltd
sahf
xchg
push
nop
pop
in
mov
repnz
inc
mov
leave
cmp
and
dec
movsb
xchg
stos
jg
inc
sub
sub
xchg
bound
hlt
cltd
adc
gs
push
testb
ja
repz
daa
iret
cmp
push
test
add
inc
or
lods
mov
cmpsl
mov
call
xchg
daa
xor
push
repz
jp
loopne
or
pop
out
stos
notl
xor
sub
dec
lahf
dec
adc
fs
mov
jmp
jae
adcb
sbb
dec
fidivs
je
movsb
jge
dec
mov
fldl
push
jmp
sub
data16
cltd
cmovne
rclb
sti
push
mov
jmp
adcb
xchg
scas
fidivs
int3
dec
loop
scas
mov
xchg
pop
xchg
push
jmp
addr16
cltd
into
jb
sub
or
dec
dec
loop
mov
ss
bound
lods
ds
push
stc
xchg
mov
lcall
or
sub
and
fwait
cmp
inc
add
xor
mov
test
andl
xchg
sti
loop
mov
sti
push
push
in
loopne
push
mov
or
js
xchg
outsl
shlb
notl
daa
cld
jne
or
addb
mov
out
inc
fsubrl
nop
jge
lret
test
in
fildl
enter
fcomps
push
test
cs
xor
lock
jb
nop
imul
lock
mov
repz
mov
shrl
outsb
cld
iret
and
sbb
subb
fsubl
or
inc
pushf
pusha
mov
and
fsts
and
aam
mov
pop
iret
cli
pop
mov
pop
in
cmpsb
sbb
adc
push
xor
jno
dec
movsl
jle
mov
push
rcrl
fisubs
gs
cmp
sahf
xorl
js
mov
cmpsb
xchg
cwtl
pop
xchg
push
in
xor
mov
je
pop
jno
cltd
mov
mov
xchg
jecxz
popa
push
pushf
add
sub
fnstcw
sarl
inc
or
mov
stc
sub
cmpsb
push
add
cli
mov
rcrl
dec
mov
and
inc
xor
jp
std
jo
adc
inc
jp
xchg
nop
add
xor
push
ljmp
jno
std
hlt
mov
test
or
imul
cmp
in
js
leave
bound
in
ret
add
imul
push
mov
or
inc
mov
sbb
sub
out
jl
bound
inc
popa
outsl
xchg
mov
insb
insb
popf
insl
loope
cmpsl
add
jbe
push
mov
rcll
jbe
mulb
cmp
clc
andl
or
test
and
cmp
and
subl
popf
mull
stc
jno
loop
mov
push
add
mov
sbb
insw
cmp
ja
pop
test
inc
fbstp
pop
pop
ficoms
mov
nop
scas
rorl
sub
insb
jl
dec
mov
rcl
dec
shl
lock
and
fstpl
fwait
aas
add
mov
jbe
leave
stc
or
lahf
std
lods
adc
hlt
add
cs
aaa
into
lcall
fwait
add
push
loop
jecxz
xor
sahf
and
insl
loopne
add
divl
add
cmp
int
dec
pop
cmc
out
push
or
aas
gs
mov
ljmp
call
jmp
mov
pop
push
jb
fisubl
mov
cmpsb
jns
ret
dec
pop
je
push
jmp
jae
mov
mov
jg
test
pop
xchg
mov
insl
and
int3
jl
lcall
xor
idivl
jl
mov
outsb
jmp
dec
in
dec
insb
out
xchg
sub
push
div
mov
and
xchg
dec
idivb
icebp
push
sbb
adc
movsb
pop
pop
jecxz
xchg
mov
lret
arpl
xor
jns
push
data16
sbb
popl
iret
aam
inc
sub
in
test
pusha
bound
mov
es
inc
fwait
cmp
pop
rol
das
aaa
and
push
and
std
cmp
dec
loopne
xlat
inc
pop
or
jmp
sbb
or
mov
testl
fcoms
mov
inc
sbb
dec
and
xlat
jno
mull
cmpsl
cmp
mov
data16
push
dec
jmp
xor
cltd
adc
sahf
xor
xchg
push
inc
jbe
mov
jns
jne
jge
xor
sarb
sub
dec
sub
std
xchg
inc
jl
push
sub
nop
push
lea
and
sti
sbb
dec
push
adc
and
push
jle
mov
fwait
cmpsl
std
cmpsl
push
cs
cli
sbbb
push
mov
mov
fmuls
sbb
in
dec
ljmp
jecxz
imul
repnz
lds
mov
push
test
inc
fldcw
dec
fwait
dec
sbb
jg
rorl
sbb
mov
jmp
jmp
fstpl
repz
imul
movsl
mov
sub
xor
push
push
aas
fwait
adc
ret
addr16
jno
inc
mov
sbb
inc
sbb
xchg
lret
sbb
adc
add
test
adc
cmpsb
int3
and
xlat
mov
lret
xchg
pushf
dec
mov
mov
sbb
popf
scas
push
mov
adc
stc
mov
daa
mov
push
mov
popa
add
xchg
and
sub
mov
stos
mov
mov
mov
nop
sbb
shld
pusha
mov
dec
cltd
mov
jo
dec
repnz
fs
xor
stc
and
add
movsb
pop
sub
push
je
and
mov
cmp
jb
cmpb
outsl
les
mov
add
add
pop
scas
sub
xchg
inc
pop
repz
sbb
int3
xor
loope
mov
push
mov
mov
push
mov
and
dec
xchg
cmp
sub
push
xor
jle
sbb
iret
and
hlt
xchg
addl
insl
les
mov
movsb
out
sbb
inc
push
push
lds
aad
sub
pop
mov
imulb
testb
jno
imul
mov
daa
pop
js
adc
andl
xchg
daa
jne
xor
pop
fsubs
testl
pop
cmpsl
test
jecxz
lds
xor
aad
xor
or
cs
repz
jg
sub
rolb
or
sub
lock
jp
not
rcr
sbb
jp
popa
pop
jle
sub
aas
js
stc
lea
jns
sti
jbe
cmpsl
es
insb
sub
fcmovbe
fisubl
mov
lods
jo
push
inc
pop
stos
cmp
pusha
mov
mov
push
push
push
jbe
cmpsb
or
int
andl
cs
in
mov
orl
sub
movsl
in
aas
aad
mov
pop
mov
mov
int3
dec
or
scas
sarl
arpl
push
stos
push
cmp
dec
imul
jns
push
sub
mov
xchg
xorl
insl
add
adc
mov
lods
enter
pop
cmp
jge
aas
fwait
push
jne
mov
sbb
ret
hlt
jmp
lret
xor
fst
dec
add
inc
mov
out
into
xchg
xchg
cli
inc
mov
scas
fsub
sbb
add
testl
jne
repz
inc
fisttpll
xchg
lods
in
sbb
fwait
pop
sarl
scas
inc
pushf
mov
jbe
mov
cmp
ret
cwtl
jg
sub
mov
xlat
cmp
pop
scas
aaa
int
dec
and
cli
or
aad
push
adc
rol
jp
fldt
shrl
dec
repz
xchg
fcoms
pop
or
sbb
adc
mov
int3
gs
fdivrs
xor
js
sbb
cmp
sbb
loope
mov
sbb
int
or
clc
mov
sbb
cwtl
mov
xor
push
fwait
cmpsl
aaa
ret
loopne
ds
fwait
push
fimull
cmp
sub
cmp
lret
out
fwait
cld
inc
test
cmp
into
push
push
shl
pop
or
cmp
inc
mov
int
mov
mov
sub
andb
cmp
out
sti
push
or
cltd
dec
dec
inc
xchg
fs
setbe
sbb
and
mov
lret
sahf
popa
stos
out
call
inc
push
inc
push
mov
push
fnsave
fistl
orl
adc
mov
mov
xchg
ja
inc
push
stos
mov
mov
adcb
call
ja
nop
push
sbb
push
out
xchg
sub
jmp
aaa
pop
cwtl
inc
pop
mov
xchg
jle
push
aam
scas
mov
popf
into
inc
in
aas
mov
data16
out
xlat
push
andl
jp
rcrb
sub
push
xchg
xor
mov
push
adc
popf
jno
sub
rcr
pop
and
hlt
sarb
int3
mov
xlat
add
lret
jae
adc
pop
sahf
push
lods
adc
mov
clc
jae
push
fs
test
sbb
pop
push
mov
aad
push
sbb
push
dec
js
popf
and
insl
ljmp
leave
xlat
stc
testl
jmp
mov
mov
cmp
js
xchg
mov
inc
push
inc
xlat
xchg
test
into
aam
popf
add
inc
cwtl
imul
aaa
hlt
inc
lcall
cmp
cli
inc
ret
rcl
dec
push
repz
fs
test
js
xor
test
lds
in
mov
test
xchg
mov
std
dec
cwtl
popf
cmp
fimull
rcll
mov
bound
add
mov
cmp
add
test
jg
jo
outsl
enter
cmc
aas
and
mov
push
dec
mov
sahf
push
out
ljmp
test
inc
stc
out
fwait
gs
test
mov
fcom
lods
lea
lods
pop
mov
lods
jmp
in
in
adc
ds
pushl
addr16
movb
and
out
fldenv
pop
or
mov
lahf
push
cmp
loope
inc
xlat
cmpsl
mov
mov
jle
pop
mov
pop
movsl
or
in
rcrb
and
inc
cmpsl
cmp
add
jge
rcll
iret
outsb
scas
dec
popf
push
cmp
jnp
push
lods
xor
xor
mov
pop
imul
mulb
jle
push
enter
inc
jmp
dec
loop
or
mov
outsb
nop
ljmp
inc
inc
dec
inc
sub
mov
in
aas
pop
addr16
pop
insl
mov
mov
das
loopne
adc
aam
xor
pop
jnp
push
or
lahf
push
mov
mov
cmp
pop
not
dec
repz
sub
mov
sbb
movsb
outsl
and
aaa
dec
mov
sbb
subb
shll
out
inc
push
push
mov
xchg
mov
xor
adc
mov
iret
push
mov
andb
into
xchg
pop
and
test
movb
push
dec
sbb
add
scas
push
imul
or
shlb
out
jbe
pop
dec
inc
int
jp
loopne
jmp
dec
mov
push
jecxz
or
flds
add
clc
sbbb
rorl
or
arpl
insb
or
cmp
push
scas
push
push
rclb
cmp
xchg
mov
or
add
add
dec
stc
test
or
jge
sbb
sub
mov
xchg
sub
cmp
add
xor
pop
fdivrp
or
mov
inc
and
mov
jbe
sub
test
ret
outsl
adc
pusha
movsl
adc
iret
data16
or
xor
jae
mov
xor
sub
jnp
mov
je
mov
pop
sarl
int
pop
nop
stos
nop
inc
pop
ja
mov
lret
cmpsb
lock
cmp
inc
movl
mov
in
into
gs
stc
lods
mov
dec
sub
jg
push
leave
sub
pusha
idivl
and
jg
mov
jbe
dec
pop
push
sbbb
add
dec
aam
dec
jo
cmp
dec
ljmp
xchg
push
mov
sbb
sub
mov
xchg
mov
fnsave
mov
xchg
sbbb
push
jge
daa
shr
stc
add
inc
mov
or
jge
pop
mov
pop
pop
js
aam
or
push
gs
out
test
xor
add
andb
sbb
insb
add
adc
ds
repz
dec
push
inc
repnz
ss
cmc
sbb
xchg
xchg
adc
sbb
push
mov
and
xlat
testb
jae
scas
outsb
jmp
cmp
ror
push
inc
outsl
ret
adc
in
sti
into
dec
push
ja
xor
popa
xor
and
dec
dec
adc
push
adc
cmp
cs
fisubrl
xor
jl
or
inc
cmp
or
sub
sub
push
decl
push
jbe
and
in
repnz
add
mov
inc
in
or
scas
adcl
pop
add
popa
cmp
insl
cmpsb
or
xlat
inc
cld
insb
sub
adc
or
jle
das
jnp
popa
loopne
mov
leave
fs
or
test
ret
xchg
psllw
jmp
or
mov
icebp
insb
and
cwtl
push
dec
sar
sub
ret
fidivl
pop
imul
and
jae
fcmovb
ror
mov
and
sbbb
out
ja
cs
sub
jp
jp
mov
cmp
arpl
sbb
cmp
insb
cltd
int
lret
cmp
push
inc
adc
loopne
cld
sub
movsl
push
mov
dec
outsb
in
sbb
cmpsl
jp
pop
push
mov
icebp
in
movsb
pusha
sbb
mov
inc
imul
outsb
addr16
rcrl
shlb
pop
pop
adcb
mov
xchg
mov
dec
sbb
jnp
pop
lcall
pop
mov
mov
dec
mov
mov
bound
cwtl
mov
dec
pop
mov
in
lret
mov
pop
jno
fisttps
and
hlt
dec
mov
xchg
dec
nop
test
imul
int
jp
pop
jge
inc
cld
lds
mov
lret
mov
es
xor
push
es
mov
mov
mov
mov
call
int
sub
sbb
leave
imul
adc
pop
xchg
aas
mov
shlb
sub
repnz
xor
cmp
adc
adc
lock
push
xchg
ret
ss
mov
sub
movsl
icebp
mov
fwait
jb
mov
stc
adc
cmc
mov
cmp
cmp
sbb
jb
sub
jns
xor
ret
cld
mov
adc
lods
les
xchg
sbbb
pop
push
sub
sbb
out
sahf
fcoml
adc
fldt
jl
fcoml
ss
pop
leave
fisttpl
into
push
jl
push
nop
es
mov
mov
in
repz
xor
sbb
fcmovnbe
mov
push
sub
push
mov
sahf
xchg
inc
add
push
dec
xchg
cmp
pop
arpl
cmpl
nop
jp
and
cli
inc
nop
insl
rcrl
sbb
rcll
push
and
adc
push
aam
cmp
fstps
nop
shlb
and
add
fidivrs
shll
inc
add
jmp
dec
out
jp
jb
outsl
sub
jecxz
pushf
pop
jg
xlat
lcall
push
xchg
push
out
loopne
xchg
int3
aad
ja
testb
pop
adc
mov
adc
pusha
aaa
mov
cli
rolb
push
fistpl
mov
call
movsb
mov
or
xor
iret
andl
add
pop
lcall
fstpl
mov
and
clc
mov
test
pop
out
insb
jb
jne
inc
and
jns
sbbl
rcl
jo
fmul
jno
test
das
push
pop
mov
fstpt
jbe
and
std
clc
xorl
inc
mov
lret
out
push
ds
jae
cmp
add
test
or
jb
mov
lret
cmpsb
dec
xor
in
pop
fcoml
cmp
mov
pop
insb
cmpsl
adc
inc
mov
loop
popa
lea
sbb
jp
int3
dec
ret
xlat
jl
jae
push
xchg
lcall
addr16
fsts
push
xor
xor
lea
das
stos
sub
cld
pusha
lds
fptan
test
and
cmp
movsl
jns
dec
mov
shlb
push
cmp
in
cmc
cmp
adc
inc
sub
test
adc
push
fdiv
mov
out
aad
pop
gs
sahf
mov
pop
or
mov
xchg
jne
xchg
push
cltd
or
cltd
pusha
cld
push
inc
jp
sti
inc
xor
ss
push
dec
add
mov
clc
add
ja
sub
adcl
pop
ret
gs
push
int3
pop
lds
sbb
push
and
rolb
sti
adc
sbb
dec
xor
int
imul
lret
leavew
fstpt
std
push
jp
sar
pop
subl
add
xchg
and
dec
loope
sti
add
jmp
inc
jb
jge
push
pop
pushf
mov
stos
insb
test
mov
fidivl
mov
cld
mov
cs
movsl
cld
ljmp
lret
sub
push
dec
gs
push
mov
aas
and
jbe
mov
lahf
lods
lods
or
out
in
js
sub
cmp
or
dec
mov
xor
sub
daa
push
sbbl
loopne
aaa
push
push
clc
pop
mov
cmpb
insl
add
add
pop
aaa
mov
fndisi(8087
js
pop
js
dec
ss
in
rolb
xor
stc
xorps
in
cwtl
cs
xor
or
lods
mov
gs
sbb
mov
imul
inc
inc
rorb
cmp
in
daa
mov
push
mov
cmpsl
ds
sbb
xor
test
inc
fdivs
cmpsl
leave
mov
add
and
fdiv
inc
int3
fidivs
xor
arpl
lods
cwtl
cmp
dec
add
sub
es
stos
roll
xchg
and
mov
cmp
imul
add
es
int
push
mov
and
cs
push
divb
xchg
out
mov
push
push
jl
imul
mov
cwtl
lret
mov
inc
or
mov
adc
sub
push
mov
jno
pop
imul
outsb
gs
ja
dec
mov
gs
jmp
test
js
and
sub
inc
or
in
bound
cmp
mov
inc
outsl
int
aaa
dec
cmpsb
sub
xchg
adc
loopne
stc
xor
loop
lahf
mov
push
mov
sbb
cmp
dec
stos
or
mov
lds
pop
xchg
popa
mov
rorb
adc
mov
pop
scas
fwait
xor
test
cmpsl
sub
push
call
add
or
jbe
fs
fwait
push
or
mov
fstpt
dec
or
inc
cmpsl
add
push
stc
push
jle
dec
mov
negl
cwtl
push
push
test
cltd
std
daa
lret
dec
loop
std
aam
inc
nop
sbb
jp
repz
jecxz
in
adc
jg
lods
mov
xor
fildll
std
pusha
cld
mov
or
add
pop
ss
mov
push
popf
push
shl
jecxz
adc
scas
fdivl
or
sahf
xchg
sbb
sbb
dec
scas
sub
xor
adc
adc
jge
fs
jb
pop
adc
nop
inc
sarl
sbb
jae
pop
mov
es
add
bound
mov
mov
cli
jge
xchg
xchg
push
adc
mov
sahf
mov
pop
out
inc
mov
rcrb
mov
cmpsl
fsubl
iret
stos
aas
iret
leave
xor
xlat
dec
or
cmpsl
mov
in
or
sub
mov
add
adc
adc
adc
enter
mov
rcl
inc
sahf
mov
dec
fs
fcomps
push
movsl
jns
mov
test
dec
loopne
mov
push
adc
lock
out
lods
popf
stos
xchg
out
mov
inc
test
xor
out
out
mov
mov
jno
xor
enter
mov
jmp
jns
and
ds
stc
push
sahf
adc
loopne
mov
out
scas
and
add
icebp
adc
and
jbe
repz
mov
jge
iret
push
adc
push
stc
sbb
sub
adc
dec
cmp
jbe
push
fs
mov
adc
mov
ss
aaa
xchg
add
sbb
call
les
sti
pop
cmpsb
pop
ret
push
cmpsb
gs
mov
lds
daa
cltd
pop
imul
and
mov
in
lret
mov
mov
push
es
dec
mov
mov
fs
fwait
movsb
std
loope
sbb
or
push
xchg
out
testl
inc
shl
inc
jne
xchg
xchg
mov
adc
jno
lea
mov
fdivrs
lock
aam
or
arpl
sub
sub
pusha
push
roll
arpl
pop
scas
push
mov
cmp
push
or
in
push
jo
loop
pop
shrl
sti
xchg
push
lea
aaa
fwait
xchg
inc
jp
insl
ljmp
cmp
xchg
add
repz
push
xlat
mov
outsb
or
add
mov
imul
add
mov
inc
cmp
lods
sub
aas
pop
mov
jne
cli
sbb
loopne
fs
dec
loope
lahf
shl
rolb
push
xchg
ret
in
stos
insb
int3
loope
ds
je
lds
fwait
cmp
adc
mov
jno
into
mov
push
mov
fsubl
mov
mov
out
rcrl
and
jne
add
xchg
iret
fcomi
sti
bt
xchg
xor
addr16
hlt
jne
lcall
movsb
scas
out
sbb
movsl
dec
xchg
and
jo
aas
and
add
push
stos
fwait
add
mov
xchg
xor
push
jo
push
inc
fidivrs
push
cmp
test
dec
stos
scas
stc
in
lds
lea
filds
lods
ficomps
mov
insb
inc
xchg
insl
sub
outsb
sbb
mov
test
sbb
rcl
jge
in
push
mov
fiaddl
mov
ret
int
cmp
clc
cmp
in
inc
mov
xor
jns
sub
ljmp
jmp
sbb
push
loope
xchg
xchg
in
scas
inc
dec
xchg
jg
and
jae
and
cmpsb
sahf
mov
mov
in
pop
lods
mov
lret
lret
stc
cld
lret
aaa
push
cmpsl
lock
cs
cwtl
adc
lret
rcrl
mov
inc
jl
mov
push
pop
sahf
loop
mov
jmp
testb
push
xchg
js
leave
jne
mov
lock
or
mov
push
fists
xchg
dec
jne
pop
xor
fwait
adc
dec
int3
jle
xchg
scas
testl
test
mov
cmpl
xor
out
dec
loope
ror
xor
sub
jg
jg
xchg
cwtl
outsl
add
mov
mov
and
sub
xchg
pop
test
dec
pop
fwait
inc
jmp
inc
jb
je
push
in
stos
outsb
push
lods
dec
inc
loope
dec
fsubr
je
repnz
popf
cmp
in
sub
jbe
xchg
or
incb
fldt
lahf
lock
push
cwtl
xlat
inc
ret
mov
fsub
jno
dec
xor
repnz
inc
xchg
push
pop
sub
leave
loope
xchg
fsubp
lret
mulb
into
xchg
dec
fnsave
scas
mov
mov
cmpsb
ret
sub
dec
mov
test
scas
xchg
lds
roll
pop
in
jmp
inc
inc
dec
fbld
or
fidivrs
cwtl
push
js
xchg
pop
adc
pop
loop
je
inc
pop
lock
xlat
sahf
lods
cltd
ja
cwtl
je
pop
mov
ljmp
inc
xor
idiv
push
mov
outsl
adc
data16
enter
aaa
add
sub
outsl
xchg
lahf
stos
cmc
pop
jno
out
add
mov
stos
mov
fcomp
jo
ds
mov
add
aas
pop
fidivrl
add
into
adc
sbb
sarl
inc
dec
das
mov
add
nop
aaa
or
loop
stc
sub
mov
push
loop
push
push
dec
xchg
leave
pusha
nop
inc
fsubrs
loope
flds
add
push
push
repnz
ret
and
ficoml
hlt
xor
test
rcll
gs
clc
mov
xchg
iret
sarb
sub
pop
insl
mov
push
repz
or
fadd
int
pusha
jnp
jne
int3
rcrb
aam
and
push
cmp
jecxz
mov
add
or
cmp
insl
or
cltd
or
out
lds
xor
push
mov
mov
mov
inc
cld
push
jge
out
add
rolb
movsb
cmp
icebp
das
rolb
mov
clc
xchg
jmp
dec
pop
enter
jle
pop
repnz
mov
pop
call
shl
repz
pop
testb
insl
inc
mov
hlt
mov
pop
sarb
push
dec
adc
arpl
movsb
sub
pop
push
dec
cs
stc
mov
push
xlat
testl
int3
cmc
jo
scas
pop
aaa
fwait
xchg
pop
jg
leave
dec
pop
movd
dec
lods
pusha
mov
mov
cmp
jp
leave
hlt
arpl
popf
pop
push
jns
xor
and
enter
loope
and
pushf
sbb
sbb
or
sbb
xchg
push
rorl
sub
push
ss
or
sub
insl
lea
repz
and
xor
aas
mov
mov
mov
jbe
scas
and
rol
fwait
inc
popa
jmp
stos
call
rol
lea
mov
xchg
sti
pop
mov
and
mov
add
lahf
int3
mov
int3
jmp
jecxz
push
ja
outsb
add
add
xchg
fnstenv
jge
dec
mov
sti
nop
sbb
dec
in
xor
sahf
stos
orb
dec
sub
jmp
arpl
mov
or
icebp
fsubrl
cld
daa
mov
adc
pop
lock
push
sbb
ret
xchg
lds
insb
negb
fs
push
lds
add
frstor
push
sbb
mov
mov
cmc
rcrl
jmp
mov
lahf
pusha
decl
xchg
add
push
loope
push
mov
out
push
es
and
fnsave
xlat
call
inc
mov
mov
inc
lods
movsl
mov
out
sbb
idivb
cmp
sbb
lea
cli
mov
insl
and
jg
mov
ret
in
icebp
enter
pop
mov
inc
not
fdivr
and
cmpsb
icebp
mov
stos
ret
mov
sbb
popf
dec
cmp
adc
popf
xor
loop
loop
leave
mov
stos
cmpsl
jge
xor
jb
pop
inc
fsub
sbb
inc
mov
enter
in
xchg
push
mov
xor
loopne
ljmp
or
es
jbe
mov
xchg
xor
push
loopne
push
popf
add
sbb
mov
pop
decb
popa
std
xchg
sbb
test
daa
pop
lods
and
mov
mov
and
push
pushf
hlt
cmp
cwtl
fwait
and
jg
dec
sahf
aam
enter
imul
popf
xor
sbb
dec
xchg
inc
sti
add
jbe
push
inc
or
or
rorb
lcall
hlt
push
add
mov
jb
pop
pop
jp
dec
fwait
jle
aaa
xlat
aas
scas
in
xor
xlat
ja
push
jmp
movsb
icebp
add
mov
or
ljmp
mov
fdivrl
leave
lahf
xchg
xchg
outsb
test
stc
adc
ja
mov
push
leave
mov
cli
ja
sbb
pop
cs
xchg
push
jae
inc
sbb
mov
dec
jns
jmp
cld
imul
in
or
inc
xor
popf
jbe
out
cmp
fists
jecxz
push
cmp
int3
repz
out
xchg
jb
mov
hlt
xor
inc
cwtl
les
and
push
jae
iret
fs
inc
xchg
pop
pop
lods
sub
xor
jmp
adc
mov
fists
xor
popf
adc
decl
out
clc
mov
push
imul
push
mov
stos
mov
dec
sub
in
add
jnp
or
out
imul
rcrl
sbb
lds
dec
dec
rclb
sub
jne
daa
sahf
sub
inc
inc
inc
dec
xchg
scas
ljmp
popf
jo
mov
loope
fsubrl
xor
cmp
xchg
stc
cmp
imul
into
rcrl
or
aad
push
in
stos
cmc
xchg
jbe
push
sub
das
decb
popa
aas
and
adc
pop
leave
pusha
stc
bnd
lret
sbb
in
bound
mov
mov
xor
jl
cmp
std
jns
inc
fidivl
cmpsb
sbb
inc
in
jne
aam
popf
push
jge
iret
aaa
shrb
cmpsl
jle
add
je
rcl
icebp
int
ds
jnp
mov
mov
mov
sbb
jge
xor
bound
jns
xchg
in
test
fcomps
pop
or
sub
data16
jecxz
add
and
xchg
ja
roll
sbb
cmp
mov
mov
push
lea
into
int3
mov
pop
and
and
es
int3
cmpsl
adc
cmp
inc
cmpsb
clc
fdivs
add
lcall
leave
pusha
aaa
rcrb
xor
xchg
add
xchg
out
xchg
dec
cmc
mov
sub
stos
add
or
xchg
outsl
std
scas
push
xchg
fwait
hlt
cmovb
sub
std
pop
rcll
or
cs
pusha
fidivl
fs
clc
adc
pop
pop
repnz
adc
cmp
xchg
mov
inc
gs
test
inc
les
xor
push
shrb
pop
cmpsb
adc
mov
sahf
mov
pop
loope
shl
or
bound
arpl
out
and
rcr
out
out
sbbb
adc
ds
cs
ret
pop
or
adc
lret
add
mov
mov
xchg
lea
mov
pop
and
push
out
fsts
ss
andl
into
call
mov
pop
lret
jge
xor
or
jge
jbe
cltd
xchg
faddp
js
idiv
push
js
cli
in
in
pop
and
fwait
test
jmp
jo
sti
pop
fcoms
dec
sbb
fs
outsb
mov
push
sub
cmpl
cmc
in
daa
add
ja
pop
fadd
lea
cmp
fs
aam
insl
adc
jl
add
ret
inc
jo
sbb
fdivrs
pop
mov
cwtl
adc
adc
push
out
adc
add
adc
pop
je
lods
inc
fstpt
popf
mov
nop
adc
bound
xchg
testb
jno
leave
in
out
adc
jns
std
sub
mov
lahf
frstor
dec
add
inc
xor
mov
cmp
fwait
mov
dec
in
mov
and
lcall
stos
ja
sbb
inc
mov
push
mov
ficoml
adc
xchg
jne
cmp
loop
js
xchg
and
cmpsl
cmpsl
out
inc
test
js
and
imul
xchg
xor
push
pushf
aam
cs
or
push
xchg
mov
rcl
pop
ljmp
pop
leave
addr16
das
fildll
inc
cmpsl
or
fdivrl
fcmovnb
or
repnz
adc
xor
stos
or
mov
pop
fisubrl
imul
adc
in
lret
idivl
jge
push
lahf
inc
inc
data16
dec
movsb
out
fwait
mov
rclb
leave
xor
xor
scas
std
inc
test
and
rorb
sub
sub
out
orb
jmp
aaa
movsl
repnz
xchg
xor
outsl
pop
out
outsb
lahf
or
lods
insl
test
lods
lock
dec
gs
ljmp
icebp
add
pop
cmc
testb
add
push
sahf
push
and
adc
orl
cmpl
sub
add
sbb
sbb
adc
inc
out
sub
mov
cmc
pop
mov
sub
icebp
cmpb
and
iret
imul
pop
mov
pop
mov
enter
inc
les
jb
into
je
mov
push
jne
icebp
mov
jns
mov
les
push
movsb
test
add
sbbb
icebp
js
push
filds
int3
jp
inc
pop
shrb
add
ss
mov
das
cmp
xlat
mov
jge
dec
xor
daa
lret
in
jmp
add
addl
push
jne
jecxz
repnz
mov
ficompl
xor
and
ja
fs
aaa
cli
es
insb
in
sbbl
or
outsb
xchg
stc
test
inc
xor
jne
xor
pushf
sbbl
pop
and
or
cmpb
push
push
push
xchg
lcall
sub
cli
adc
inc
stos
sub
leave
cmpsb
jnp
or
xchg
jno
pushf
push
aam
scas
add
fstl
mov
xchg
and
sbb
push
jge
mov
fwait
xchg
cmpsb
inc
cwtl
pop
mov
and
mov
popa
and
rolb
shrb
xor
jge
mov
mov
pushf
add
sub
inc
sbb
dec
mov
add
scas
mov
sbb
js
pop
sbb
mov
loope
in
inc
pop
mov
dec
aaa
lret
scas
adc
lods
icebp
mov
stos
jge
adc
loopne
add
mov
mov
push
movsl
dec
mov
or
daa
js
push
loopne
fs
fdivrp
subl
shrl
mov
sub
in
or
call
or
mov
sub
pop
sub
push
aaa
cmp
cwtl
sub
sti
push
shrl
pop
das
add
and
push
lock
fbstp
cs
or
data16
jae
jge
pop
cmpsb
jge
mov
push
mov
aad
sub
ljmp
mov
cmpsl
add
test
inc
jno
rclb
movsb
cmp
mov
push
sbb
leave
es
push
call
push
shrl
scas
sbb
imul
stc
int
clc
mov
mov
xorl
call
pop
adc
fildll
pop
xor
add
mov
movsb
jecxz
pop
inc
rcrb
lods
add
stos
stos
xchg
xor
push
sbb
mov
jno
pop
sarl
dec
pop
sbb
cmp
outsb
jb
pop
inc
hlt
sbb
movsb
adc
shlb
lods
or
in
aas
push
dec
dec
test
cwtl
mov
inc
cmp
jge
popf
daa
ret
popa
clc
mov
dec
jg
nop
cmc
decl
icebp
les
cmpsl
addb
cmpsl
ja
jns
push
mov
inc
push
adc
cmp
fsubrs
xchg
add
jb
movsl
jno
dec
mov
pushf
xor
pop
push
aad
cmpsb
push
rcrb
mov
fnstenv
adc
pop
fsubs
push
sub
andb
push
fisubl
or
aaa
sub
mov
mov
scas
rcrl
js
pusha
orb
add
mov
sub
inc
dec
jns
push
xchg
add
sti
iret
pop
adc
or
jg
jp
andb
repnz
lds
lret
jbe
mov
faddl
mov
test
push
ljmp
mov
lret
xor
es
xchg
xor
out
or
sbb
or
and
into
mov
or
fimuls
and
shrb
into
cli
cmp
dec
loope
cli
mov
xor
dec
or
fdivrl
test
aaa
push
aad
movsb
aad
adc
enter
nopl
das
pop
mov
push
mov
scas
leave
stc
and
mov
cmpsb
add
movsb
xchg
je
push
fnsave
out
inc
xor
mov
push
shrb
cmpsl
sub
fidivrs
push
gs
fsubl
sub
ja
mov
dec
lods
je
cmp
imul
and
mov
cmp
stos
jmp
div
shrd
fwait
sti
clc
je
daa
pop
das
lcall
ja
xchg
je
adc
subb
scas
cmp
pop
outsb
shl
xchg
mov
sub
dec
dec
nop
mov
dec
inc
pop
sub
sub
or
data16
out
adc
dec
ret
fs
xorb
or
fmul
les
outsl
mov
pop
ss
clc
sbb
and
shrl
dec
pop
xor
ds
loop
movsl
outsl
ds
ficoml
inc
cmp
xlat
pushf
and
push
lods
fildll
loopne
inc
scas
inc
jb
fs
adc
and
cmpps
and
xor
jmp
and
hlt
push
inc
daa
dec
push
clc
cmp
xchg
cmp
xor
fcmovnb
fimuls
ja
pop
dec
sub
adc
xchg
jg
test
aad
fiaddl
stos
push
ret
pusha
divl
and
ret
push
loop
sub
add
pop
mov
sub
xchg
inc
cmc
scas
inc
out
scas
in
cmp
adc
mov
add
sbb
mov
mov
fmuls
mov
js
call
inc
shll
clc
inc
ficompl
inc
addb
xor
jae
push
test
aas
repz
pop
movsl
movsb
sub
mov
mov
mov
jp
cs
fldenv
push
adc
ljmp
shrb
addr16
mov
cmpsb
dec
mov
aam
sub
dec
lock
cmpl
dec
addr16
pop
jg
inc
lea
cmp
loope
mov
sub
sarb
fwait
adc
push
inc
out
inc
dec
jno
xchg
sub
xchg
repz
add
arpl
mov
jo
inc
xchg
jns
xchg
outsb
jle
rcr
mov
mov
popa
imul
push
mov
mov
xchg
xchg
sub
rcr
inc
and
call
xor
jne
cs
xchg
add
incb
jns
in
mov
fldl
cmpsl
out
xor
lcall
test
shrl
test
addb
daa
popf
push
sub
scas
mov
das
out
sub
push
inc
add
xor
adc
mov
int3
arpl
inc
pop
jns
and
cmpsb
mov
push
in
daa
cli
inc
cmpsb
out
mov
iret
sarb
lods
push
in
push
sahf
push
jecxz
mov
popl
jbe
repz
incl
rol
push
les
clc
lcall
fs
mov
xchg
cmp
sub
xchg
test
pop
mov
xchg
inc
xchg
sbb
add
je
push
xor
push
lds
mov
dec
jmp
lea
repnz
cmp
shrb
mov
in
push
inc
loop
imul
movsb
clc
adc
sbb
pop
repnz
clc
xchg
dec
repz
in
cwtl
or
fidivl
ret
push
push
mov
iret
adc
xor
pop
xor
or
jae
mov
aad
push
jnp
sbb
ja
lea
inc
test
shll
jns
pop
push
ljmp
or
fs
and
fwait
push
sub
nop
jp
dec
xlat
test
xchg
mov
mov
push
insb
mov
movsb
movsl
or
adc
adc
bound
sub
fists
adc
dec
or
mov
mov
add
test
or
js
jecxz
adc
icebp
sbb
mov
inc
movsb
sub
nop
pop
xor
push
jne
jmp
mov
aad
icebp
insb
cmp
pop
icebp
dec
sbb
inc
inc
xor
loop
and
mov
mov
adc
outsl
arpl
imul
jb
shll
mov
jl
xor
aas
sti
push
and
push
je
mov
and
enter
push
mov
outsl
addr16
mov
xorl
scas
rcll
fisubs
inc
jl
jecxz
jle
mov
int
cmp
sti
or
sub
adc
pop
mov
mov
mov
xlat
hlt
sub
call
dec
leave
pusha
jnp
mov
fs
sbb
movsl
mov
add
xchg
mov
les
mov
pop
shl
adc
loope
mov
sbb
xchg
sbb
inc
sub
or
xchg
dec
lods
cmp
clc
push
gs
mov
or
mov
out
js
and
xchg
jns
push
std
roll
lcall
nop
arpl
ret
std
push
cld
rorl
xlat
and
sbb
mov
dec
add
iret
push
push
xchg
dec
pop
mov
ret
mov
test
js
in
jmp
sub
cmp
dec
hlt
fsub
cwtl
xchg
dec
push
pop
scas
mov
mov
jns
lret
adc
scas
shrl
mov
xor
xor
in
decl
and
pop
popa
stos
fs
test
leave
pushl
out
sarl
pop
add
cmp
pop
repnz
lods
subb
addr16
add
sub
cmp
call
data16
or
popl
aam
mov
jns
push
daa
js
frstor
repnz
dec
jo
jle
shrb
and
mov
stc
mov
fbstp
adc
push
add
call
mov
jmp
iret
iret
cmp
gs
bound
or
dec
popf
in
aad
movsb
push
out
push
or
mov
adc
push
or
xor
outsl
push
leave
insb
ret
pop
push
adc
mov
movsl
pop
es
js
and
inc
push
cwtl
mov
mov
out
sahf
jne
xchg
outsl
adc
stos
inc
xchg
pop
push
cmp
ss
pop
cmp
sub
xor
xor
es
jb
lea
and
cmc
pop
lods
ljmp
call
cmpb
pop
lods
cwtl
push
jl
jg
adc
dec
mov
stc
mov
add
push
loope
xor
jbe
test
mov
adc
enter
inc
cld
or
xor
shlb
addr16
clc
adc
or
mov
ja
lock
dec
xor
bound
mov
pop
jp
mov
andb
mov
pop
jle
xchg
push
fcomps
sbb
push
inc
mov
xor
mov
inc
adc
ja
iret
adcl
xor
cmp
mov
dec
xlat
repz
cs
fildll
inc
push
push
je
fbld
lds
sub
in
mov
mov
aaa
dec
enter
sbb
sub
daa
push
mov
imul
mov
jne
cld
mov
les
dec
enter
loop
add
mov
jno
and
xchg
add
lock
add
popf
xchg
ss
leave
shrl
jmp
push
xchg
dec
sub
adc
inc
jmp
bound
push
xchg
int
std
movsl
sti
cmp
pop
std
xchg
test
jmp
icebp
popa
inc
xor
testb
into
and
into
fsubl
out
cltd
std
jmp
push
jo
repz
cmp
fstpl
pop
ja
mov
xlat
jp
pop
stos
adc
mov
lods
sti
push
cltd
push
mov
mov
ljmp
ljmp
lcall
fcmovb
ret
push
movsl
or
hlt
insl
nop
das
or
ljmp
ret
inc
inc
jp
lahf
sub
push
dec
fst
repz
dec
xor
ljmp
loop
rcr
and
push
add
idivl
push
inc
sbb
or
das
cmp
add
dec
fisttps
mov
jnp
das
in
fwait
pop
lock
mov
sarl
add
mov
pop
sbb
hlt
pop
or
iret
ja
pusha
cmc
mov
or
inc
icebp
jns
dec
ja
repnz
rclb
test
mov
test
fildl
movntps
insl
sahf
ds
jns
ss
loope
bound
rcrb
mov
mov
int3
fprem
andb
mov
sub
pop
fldl
cltd
jecxz
sbb
pop
movsb
or
call
inc
and
mov
mov
xor
jmp
or
add
cmp
mov
cmp
sbb
rorl
testb
fdivs
lods
lret
mov
mov
shll
rcl
jmp
faddl
pop
mov
add
stos
inc
dec
loop
int
call
pusha
pushl
dec
push
stos
sub
jge
insl
inc
xlat
lcall
gs
inc
pushf
push
ss
inc
inc
and
js
or
dec
test
adc
xor
push
cmpsl
push
mov
out
ja
cli
inc
jb
sbb
fiaddl
nop
outsl
je
pop
les
stos
dec
loope
add
insb
cmp
push
inc
jp
pop
push
sbb
aad
and
add
sub
xor
fs
push
add
mov
cli
inc
mov
fldl
jbe
stos
push
inc
xchg
inc
mov
adc
sub
inc
test
and
xchg
and
cmc
repnz
scas
xchg
dec
xchg
icebp
sbb
std
xchg
in
jl
ficoms
add
cmp
sbb
sbb
movsl
xchg
out
aad
xor
dec
push
sahf
aam
call
jg
pop
pop
jecxz
shr
mov
xor
clc
fistpll
inc
xor
mov
imul
scas
mov
loopne
out
shr
sub
leave
or
sbb
lahf
shrl
mov
lahf
xor
push
test
fmull
rorl
in
cmp
lcall
cmp
fstpl
pop
jg
add
orb
jne
add
xor
adc
adc
in
jnp
adc
sbb
add
dec
leave
fsubr
inc
lcall
pop
jl
ds
and
mov
test
insb
jle
inc
mov
mov
xor
pop
or
and
lcall
out
and
je
aam
and
jbe
fcoms
adc
xchg
xor
outsl
ret
mov
out
insl
add
dec
xchg
mov
and
inc
mov
push
pushf
jg
ret
stos
add
loop
shll
mov
ret
xchg
loop
jmp
mov
push
test
mov
stc
popf
nop
xchg
pop
repnz
mov
mov
mov
jo
hlt
pop
xor
int
jo
xor
arpl
test
xlat
cltd
adc
adc
pop
stos
adc
call
mov
lcall
loop
hlt
cmp
in
sbb
mov
sub
adc
fstpt
xor
cwtl
push
leave
adc
outsl
dec
icebp
rcrl
inc
mov
add
rcll
repz
call
mov
in
in
adc
xor
rorb
sbb
xlat
repz
sub
call
cmp
in
mov
in
inc
sbb
fwait
push
cltd
push
dec
ja
mov
fwait
or
out
pop
sbb
pop
test
popl
lret
sbb
pop
lock
stos
lcall
inc
mov
test
leave
push
xor
jle
push
sub
xchg
fdivrs
lahf
or
insb
pop
push
pop
lret
bound
or
data16
and
fdivl
or
sub
jno
lds
jo
fstpt
test
lds
jns
xchg
jae
xor
incl
std
cmp
jp
inc
mov
inc
and
or
fs
mov
gs
mov
aam
movsb
xchg
jge
pop
out
xchg
xchg
clc
roll
add
rorl
cli
lcall
jmp
aaa
fwait
xor
sbb
rorb
cld
dec
mov
rcrb
xor
ljmp
push
pop
ds
inc
daa
fists
lret
fcomi
mov
jl
mov
sbb
out
shr
out
rorl
addr16
dec
lahf
adc
imul
sarl
dec
mov
rcrl
or
cmp
sbb
and
cmpsl
data16
fsubrl
arpl
inc
mov
fcomip
xchg
pop
cmp
cltd
push
sahf
xchg
pop
adc
js
jnp
int3
sbb
mov
movsb
fnstenv
inc
sbb
andb
mov
jne
sbb
sbb
movsl
mov
adc
mov
lret
je
insb
das
xchg
sbb
push
push
push
int
outsl
popa
daa
mov
and
lret
mov
pop
test
loope
insb
fwait
ljmp
pushf
inc
xchg
incb
out
cmpsl
filds
or
subl
loop
push
xor
cmp
loop
mov
xchg
cmp
pop
jmp
dec
movsb
in
xlat
sahf
enter
ss
mov
push
pop
popf
jecxz
mov
or
sub
and
pop
jb
xchg
arpl
or
lahf
cmpsl
sbb
movsb
insb
and
in
inc
adc
push
jle
movsl
cmp
adc
inc
jo
adc
and
push
fsubl
adc
mov
hlt
sbb
aad
int
adc
mov
mov
es
lahf
dec
pop
ror
mov
jg
ljmp
pushf
xor
cmpl
scas
mov
mov
in
and
pop
repnz
mov
pop
add
sarl
bound
dec
int
mov
add
jb
pop
call
push
fidivrl
pop
xchg
cmpsb
sbb
das
clc
dec
fnstsw
pop
loope
insl
jge
aas
fnsave
cmpsl
mov
push
fimull
and
cltd
test
cltd
jno
and
mov
sti
pop
or
push
test
mov
lea
pop
lahf
and
daa
jmp
aaa
lods
inc
push
mov
imul
mov
ss
cmpl
push
mov
inc
fadd
pop
data16
and
mov
mov
xchg
fdivs
inc
inc
bound
mov
push
jg
sbb
and
les
lldt
mov
lcall
call
jae
adc
int
push
loopne
xchg
adc
mov
movsb
out
lcall
mov
mov
sahf
lock
sub
pop
ret
shlb
aaa
xchg
add
mov
loopne
loop
repz
push
ljmp
ljmp
insl
lea
cmp
pushf
scas
pop
hlt
push
js
or
lods
mov
lret
imul
jb
mov
lahf
xor
pushf
cmp
push
cli
mov
dec
mov
and
xchg
mov
cli
test
rcrb
in
mov
stos
fcomp
xor
inc
jbe
sbb
mov
mov
pop
mov
clc
out
mov
sbb
lret
outsb
adc
pop
scas
lods
mov
mov
mov
fwait
push
into
in
cld
jns
and
in
test
lods
ljmp
scas
pop
cld
xchg
push
push
add
fidivs
pop
push
sahf
outsl
enter
adc
lret
js
jmp
gs
inc
das
mov
xchg
scas
lock
push
push
inc
daa
pop
rorb
push
sub
sub
or
cmp
inc
int
fimull
vmulsd
test
insl
pop
push
pop
test
mov
lock
mov
int3
xlat
push
xor
xchg
dec
xchg
cmp
pop
cmpsb
inc
push
adc
je
mov
not
scas
scas
push
dec
loopne
sub
mov
hlt
lods
js
js
push
mov
mov
push
lds
push
int3
or
add
sub
fildl
imul
jno
fldt
outsl
pop
mov
js
je,pt
jo
movsl
stc
pop
dec
xlat
cs
or
fistps
addb
in
jb
in
sbb
leave
jp
xor
test
flds
cmc
push
jmp
mov
inc
mov
mov
sub
mov
popa
push
std
xchg
or
cs
xchg
pminub
add
dec
fidivs
jmp
gs
in
es
leave
call
jbe
add
or
test
ja
test
jge
cmc
or
es
push
leave
ljmp
adc
push
lcall
sti
ja
rcrb
insb
push
inc
les
inc
inc
mov
push
stos
bswap
mov
fmull
test
nop
mov
or
into
arpl
insb
jbe
bound
xor
jmp
mov
xor
lret
cmp
and
roll
sti
dec
test
push
clc
repz
movsb
push
pop
jae
clc
insb
jo
adc
aas
push
jl
jbe
push
jns
jne
jb
mov
imul
mov
data16
mov
push
outsl
push
lret
mov
mov
cmpsl
xor
mov
sbb
xor
into
ret
sbb
cmp
sbb
pop
or
lods
repnz
es
or
rorb
das
pop
out
fisubl
add
and
cmp
cmpl
push
xchg
int3
shrl
outsl
pop
adc
and
xchg
mov
jae
cmc
leave
fnstcw
dec
adc
add
pop
mov
in
daa
lcall
cmp
notl
into
and
mov
jns
daa
faddp
dec
xchg
mul
jne
dec
cmovnp
pop
repnz
lahf
movsb
fdivs
xchg
lods
sbb
lret
mov
adc
shrb
add
push
movsb
jecxz
imul
xchg
jl
test
hlt
nop
inc
sbb
fidivl
imul
lahf
add
das
and
outsl
enter
andl
lret
insl
sar
jmp
sub
shrl
cmp
inc
leave
icebp
fisubrl
stc
out
or
pop
cmp
sbbb
in
mov
sub
sahf
push
lret
fistps
test
jle
pusha
mov
jp
shl
xchg
dec
lret
repnz
in
adcl
jae
sub
cli
mov
pop
dec
cmp
jecxz
pop
cmp
in
adcb
iret
daa
fcomip
pushf
fldenv
or
xchg
pop
sti
pop
movl
sbb
imul
in
lahf
clc
call
test
jg
cmpsb
pop
cmc
add
and
xor
mov
add
xchg
inc
or
xlat
jne
jp
fidivrs
xchg
push
loope
hlt
call
mov
hlt
xor
iret
repnz
lret
mov
or
subl
loop
sub
or
fdivrl
cmp
dec
xchg
sbbb
jb
cli
sub
mov
stc
cmp
xor
sub
inc
mov
or
or
and
jmp
adc
adc
fwait
cmpsl
cmpsl
inc
mov
cld
loop
inc
hlt
es
mov
inc
scas
jle
inc
pushf
mov
cwtl
and
add
jb
mov
fdivrs
aas
in
mov
arpl
jnp
out
mov
cmp
dec
mov
sub
call
mov
rorl
or
adc
xchg
jbe
or
jg
jno
sbb
adc
inc
test
stc
push
stos
repz
or
test
pusha
pop
rcll
xchg
lds
jno
out
lret
rcr
mov
push
inc
stos
in
movsl
cmpsb
rclb
push
xchg
je
cltd
push
and
push
jo
idivb
xchg
fiaddl
cs
stos
push
xor
inc
or
fnstcw
int3
faddl
scas
fs
cmp
mov
iret
fmulp
in
inc
jne
adc
and
int3
and
fs
push
push
nop
scas
arpl
outsb
out
xorb
xchg
fbstp
loop
xor
adc
fistps
mov
inc
pop
lock
mov
outsl
jns
cltd
jp
gs
test
or
pushf
or
popa
or
mov
bound
mov
push
call
push
jmp
out
cmpsl
pop
sub
inc
mov
cmc
inc
rolb
lea
xor
popa
stos
mov
dec
aas
dec
cmpsb
jp
adc
xlat
cmc
push
popf
and
sub
xor
mov
addr16
fdivs
dec
push
sub
cmpsl
mov
jle
push
pop
fbstp
rcrb
test
hlt
mov
es
pop
inc
push
xchg
loope
ret
mov
sahf
add
mov
mov
cmpsb
and
in
or
punpckhdq
inc
mov
mov
mov
adc
mov
and
jo
sbbl
js
inc
mov
sbb
pop
jmp
ja
adc
dec
or
call
mov
and
pop
push
pop
sbb
pop
call
stc
data16
sbb
cld
cmpsb
cmp
mov
sbb
add
into
sti
mov
dec
loope
xchg
scas
mov
loop
fs
mov
push
and
sbb
popa
test
lret
xlat
lods
imull
out
lods
sbb
xor
push
popf
out
setl
sbb
lods
jae
or
pushf
pop
jbe
xchg
mov
jae
mov
in
popa
clc
movsl
dec
out
ss
jg
jns
xchg
sub
out
push
mov
inc
movsl
in
push
ficompl
pop
add
lea
dec
add
out
and
cmp
cmc
xchg
pop
aad
dec
push
mov
xchg
int3
repz
aaa
pop
mov
addr16
out
aam
dec
imul
call
mov
xchg
in
cmc
adc
out
sbb
inc
pop
cmp
mov
sub
ds
loop
in
negb
and
sti
mov
divl
mov
pop
js
push
sarl
scas
loop
mov
shrl
jmp
or
mov
in
mov
sub
lret
mov
cmp
cmp
sbb
push
aam
or
pop
mov
push
xor
shrl
adc
pop
pop
insl
xor
xor
fistpl
mov
cmp
jns
jne
les
pop
sub
or
mov
stc
xchg
mov
fxch
mov
jecxz
lret
jno
cmp
lret
mov
push
xchg
inc
stc
out
xchg
addr16
xchg
push
in
mov
je
push
mov
cmpsl
mov
stos
xchg
and
push
test
mov
lods
inc
adc
mov
iret
or
jbe
jmp
fwait
clc
fmul
movsb
jno
out
mov
sbb
push
mov
sub
jne
loope
ja
dec
add
adc
mov
add
bound
sbb
inc
addr16
fldz
cld
mulb
insb
movsl
repz
xor
mov
mov
mov
ds
int3
lock
enter
inc
cmp
xor
inc
push
push
mov
xor
test
dec
ljmp
or
lods
push
jne
loope
aaa
jns
push
nop
das
push
jle
pop
mov
ret
fidivl
aaa
decb
popa
lods
mov
das
cmp
sbb
dec
inc
fnstsw
arpl
add
cmpsl
push
inc
push
lea
call
outsl
js
adc
adc
in
insb
in
xchg
push
and
add
aaa
imul
push
and
inc
outsl
inc
aas
mov
pop
cwtl
stos
mov
sbb
and
cmp
data16
xchg
test
ret
pushf
int
out
sbb
and
mov
jbe
or
lcall
loope
pop
imul
mov
dec
loope
jno
inc
mov
mov
in
push
loope
mov
fwait
clc
hlt
je
sti
inc
cli
sbb
mov
dec
in
ret
cld
in
cs
pop
xor
mov
push
mov
mov
xchg
fdivrp
cmp
xchg
popa
mov
push
outsl
mov
imul
mov
xchg
or
movsl
outsb
inc
loop
jecxz
dec
ret
fistl
les
movsl
hlt
mov
outsb
dec
ds
sub
fmull
scas
and
std
xlat
test
std
pop
fsubrl
icebp
imul
pop
notb
and
repnz
pop
sbbl
xchg
mov
cmp
push
arpl
push
and
fnstsw
jno
popf
out
scas
and
cmpsb
dec
gs
ss
jbe
pop
xor
and
or
jae
es
xchg
xchg
fdivl
rorb
mov
std
sahf
jb
jecxz
jb
jecxz
call
sub
push
outsb
cmp
scas
mov
inc
stc
test
sub
popf
adc
push
ljmp
lds
mov
cmp
outsb
add
or
inc
cmp
lret
cld
mov
push
add
dec
push
jp
mov
lock
and
pusha
lods
push
fcmovb
int
inc
mov
add
arpl
roll
add
pop
xor
inc
lret
icebp
mov
rcrb
fnsave
ja
lcall
in
pop
std
cltd
xor
mov
in
mov
test
ja
xchg
mov
mov
jge
aad
aas
pop
in
mov
mov
loopne
add
mov
es
lret
mov
xor
mov
cmpsb
jb
dec
in
push
or
das
pop
pop
push
push
xchg
roll
and
fldcw
and
dec
adc
fadds
jno
jg
jnp,pt
and
pop
mov
add
out
push
jle
lods
mov
jmp
std
lods
xor
aad
cmp
testl
lods
sti
add
sub
xor
test
rorl
hlt
inc
sti
cmpsl
je
add
lcall
pop
cmpsl
in
jl
shlb
jge
or
and
sahf
aam
ret
mov
push
pop
cmp
jb
aaa
movsb
pop
jp
adc
push
in
xor
lahf
stos
nopl
dec
loope
into
pushf
ret
jp
push
or
sbb
jp
lahf
add
xchg
lods
mov
in
push
fwait
repz
js
mov
mov
inc
call
add
jecxz
push
mov
pop
dec
xor
ss
out
xor
xchg
daa
cmpsb
xor
mov
pop
mov
aad
int
pop
sub
pop
adc
push
mov
add
repz
jmp
cmp
fildl
pushf
xor
jmp
jge
cli
pop
sub
or
add
adc
hlt
push
aaa
xor
inc
imul
mov
aam
iret
sti
inc
dec
mov
jg
jmp
inc
xchg
daa
inc
pop
movsl
ds
call
lds
sahf
aad
inc
dec
loop
jns
jno
adc
es
and
cmp
mov
push
stc
fnstenv
push
scas
les
mul
mov
jle
sarb
scas
push
add
cmpsl
jne
test
mov
fcompl
popf
cmc
xor
fsubrl
sbb
and
out
mov
popf
push
mov
pop
cmp
icebp
pop
adc
pop
repz
into
mov
cltd
xor
fst
lret
mov
sbb
jp
ss
xor
or
je
jae
icebp
xchg
stos
das
fs
xchg
push
aam
cmpsb
jecxz
aad
jecxz
jg
in
pop
icebp
inc
or
aad
nop
or
enter
fistl
dec
xchg
pop
ja
shr
or
push
xchg
sub
and
insb
mov
fsubl
adc
pop
mov
or
mov
xchg
es
mov
movsb
jno
lret
inc
add
xchg
jb
dec
pushl
dec
movsb
cmp
fdivrs
inc
es
xchg
scas
sbb
lcall
push
out
cmp
push
aam
or
ljmp
inc
push
test
pop
repz
pop
es
sti
sbb
mov
xor
push
add
mov
inc
or
popf
pusha
and
lret
mov
push
sub
loope
pop
ljmp
push
push
or
imul
xchg
or
arpl
mov
sub
fmuls
rolb
jl
mov
adc
frstor
pop
sti
lcall
in
inc
bound
outsb
les
rclb
mov
mov
test
cmp
xor
pop
test
loop
mov
inc
outsl
xchg
or
adc
popa
push
fnstcw
sub
and
xor
xchg
dec
lahf
fimull
adc
adc
push
mov
fdivrl
subb
pop
mov
jbe
scas
mov
mov
leave
xlat
out
sub
jge
adc
and
push
cmpsb
dec
pop
out
or
loopne
iret
jmp
jg
jae
lds
mov
jne
cmp
lods
dec
mov
pop
fisubrs
mov
inc
cmp
aas
adc
xor
out
pop
sbb
mov
cmpsb
addr16
insl
scas
cmpsb
scas
inc
add
hlt
ja
popa
inc
lock
test
and
push
popf
loope
or
mov
fdivrs
cli
jo
in
mov
and
dec
xor
sub
dec
gs
add
mov
mov
cmp
mov
test
and
dec
fstpt
pop
push
mov
ljmp
int3
inc
test
lods
pop
jno
aas
pop
or
xchg
sub
test
xchg
fidivl
pop
cmp
insl
jne
in
adcb
jecxz
repnz
sub
jbe
push
jle
call
test
int
or
sbb
subl
fistpll
aam
sbbb
int3
cltd
push
sbb
pop
add
push
mov
mov
rcl
jb
repz
loope
in
jbe
mov
adc
xor
mov
shll
or
mov
je
xlat
sbb
jno
inc
xchg
ret
sbb
push
jmp
sbb
inc
in
test
sti
pop
xor
ds
clc
dec
lea
sbb
and
vpsrlq
adcl
hlt
inc
movsb
sub
jbe
mov
test
mov
pop
daa
sbb
inc
and
cwtl
stos
xlat
outsl
cmp
loope
mov
jb
and
jle
pushf
mov
push
lock
mov
cltd
sub
dec
mov
in
outsl
mov
xlat
sahf
xlat
jo
aam
cmp
jmp
cmpsb
xchg
or
lds
add
add
mov
pop
and
les
out
jle
pusha
cwtl
das
pop
add
scas
into
xor
stos
ja
xlat
cmp
insl
in
push
jbe
adc
mov
int3
jecxz
xchg
push
jnp
mov
int3
mov
ret
or
sbb
imul
xlat
and
shrl
fidivl
das
jbe
dec
pop
xchg
loop,pn
push
mov
mov
push
fsubl
leave
or
rolb
add
je
xchg
and
shrb
dec
push
pop
mov
mov
scas
adc
xor
loopne
pop
add
mov
in
test
adc
adc
lahf
ljmp
inc
std
push
mov
push
add
aam
or
es
xor
jb
scas
stos
xchg
mov
pop
xchg
cmpsb
and
fldenv
cmp
and
into
jns
mov
adc
in
jo
sub
mov
adc
push
xor
rol
or
clc
push
fwait
jnp
jecxz
lods
lods
in
ss
cwtl
and
cmp
je
inc
xor
dec
pushf
andb
mov
mov
mov
out
pextrw
lret
cmp
imul
mov
mov
out
pop
sbb
adc
push
dec
add
gs
pop
xor
pop
sub
rolb
mov
lods
xchg
rcrl
mov
sub
sbb
lcall
into
jmp
dec
and
filds
test
data16
inc
jmp
or
push
cmp
push
lea
scas
add
sub
pop
pop
xor
clc
aad
adc
add
jp
or
dec
lahf
and
daa
into
ret
outsl
push
push
je
add
es
cmp
jmp
jns
inc
aad
xchg
stc
adc
clc
pop
stc
and
pop
insb
add
lds
push
xchg
test
cmc
cmpsb
mov
fwait
call
dec
inc
fdivs
in
or
mov
xchg
in
pop
sbb
mov
sbb
xor
jae
mov
pop
pop
and
movsl
sub
mov
cmp
and
cmpsl
fs
push
jbe
push
mov
lahf
or
cmp
mov
inc
inc
out
stc
adc
and
into
or
mov
jmp
cmp
in
sbb
cwtl
lods
shll
jl
testl
inc
push
mov
pushf
out
int
cmpsl
in
inc
mov
pop
frstor
inc
xchg
fdiv
daa
inc
and
out
adc
pushf
ret
fcmove
cmpsb
mov
jo
cmc
mov
adc
andb
jp
orl
push
jbe
out
push
rorb
bound
clc
scas
mov
mov
mov
arpl
sub
call
inc
mov
in
std
test
out
add
adc
out
test
std
cmp
je
cltd
mov
jno
mov
sub
jb
je
push
lcall
repz
pop
decb
xchg
mov
inc
leave
js
in
test
jmp
scas
xchg
xchg
fcmovbe
mov
call
mov
in
int
push
cmpb
loope
sub
mov
test
xor
xor
mov
inc
aas
sbb
mov
lods
inc
and
mov
mov
pop
cmpsb
ret
xor
nop
xchg
ret
mov
bound
jp
xchg
lahf
pushf
notl
into
rcrb
jmp
jnp
adc
adc
add
inc
cmpsl
cmp
jno
cli
add
stos
pop
add
lods
sub
adc
lcall
popf
cld
jge
nop
movb
xchg
jb
addr16
push
jo
dec
mov
add
into
in
sbb
jae
je
sbb
outsl
mov
sub
or
sub
cmp
incb
push
lock
dec
repz
test
mov
pop
shl
xor
fwait
aaa
incl
mov
stos
dec
fcmovb
fidivl
mov
xor
or
subl
dec
repz
push
jae
inc
sub
lahf
stos
or
push
sub
jno
sahf
mov
jle
repnz
and
cmpsb
fisttps
push
jp
mov
dec
pop
call
or
dec
test
or
dec
mov
shll
and
in
cmp
push
and
push
inc
movsb
xchg
das
cmp
stc
ljmp
cmp
sbb
gs
jbe
lods
xchg
jo
inc
std
or
mov
call
popf
int
daa
test
fs
pop
xchg
arpl
jb
push
inc
push
stos
outsl
add
lods
test
mov
jecxz
inc
aam
inc
inc
inc
stc
cmp
pop
lret
dec
loopne
add
jmp
cmp
clc
popf
iret
mov
ljmp
ficoms
stos
inc
js
jp
xor
std
cld
cs
xlat
icebp
pusha
fildl
mov
loop
das
xlat
cmc
pusha
scas
repnz
jmp
or
cmp
pop
adc
aam
mov
nop
cmpsl
push
dec
loope
mov
testl
xor
fsubr
shll
sub
mov
xchg
xchg
adc
sbb
popf
and
pop
aaa
jp
adc
lods
xor
push
test
sbb
adc
sti
pop
cs
sub
aad
hlt
mov
jg
adc
popf
mov
jno
aas
push
notl
enter
mov
lds
les
mov
test
mov
sbb
xor
xchg
xchg
and
mov
fs
fcmove
sbb
sbb
std
inc
mov
push
push
call
cmp
jo
mov
xlat
outsb
mov
int
imul
hlt
pop
sub
add
leave
movsb
pop
pop
rcll
outsl
or
lea
sub
xchg
mov
das
pop
sbb
inc
data16
inc
orl
pop
xchg
cmovg
xor
daa
add
push
out
imul
decl
mov
xchg
sbb
pop
cli
cltd
add
cltd
push
sarb
sbb
or
aaa
mov
lcall
lahf
mov
cmp
sub
push
les
jmp
xchg
jle
mov
cmpsl
push
adc
jnp
andb
mov
sbb
aad
pushf
dec
insl
jg
aam
or
jmp
fiaddl
mov
fbstp
push
adc
mov
popa
and
pop
or
cmpsb
imul
sbb
jecxz
dec
jl
dec
sub
jns
fbstp
jle
xchg
push
xchg
mov
int3
mov
jnp
mov
call
fildll
repnz
fldt
and
scas
sbb
aad
js
push
sti
mov
jne
push
imul
ja
fwait
sub
dec
into
xlat
outsb
add
stos
mov
xor
sub
stos
push
sahf
push
xor
dec
adc
xor
es
jo
add
fdivl
popf
fwait
push
aad
cli
xchg
in
loope
sub
iret
into
data16
push
inc
orl
sbb
sbb
add
dec
sahf
jl
mov
push
in
pop
das
sbb
pop
xchg
fisubl
mov
popf
mov
sub
mov
out
lahf
rcrb
lds
mov
int
aad
in
pushf
stos
mov
and
inc
inc
adc
xchg
sub
mov
push
cld
inc
imul
loop
icebp
ret
mov
jg
mov
push
dec
stos
dec
push
jno
int3
shl
sbb
clc
jge
movsb
pushf
and
jmp
inc
out
mulb
into
sahf
add
sbb
call
mov
int3
jecxz
dec
push
mov
into
fs
outsb
and
push
loope
stc
sti
mov
arpl
xchg
jl
or
ljmp
aam
or
mov
sub
loop
push
pusha
lret
or
jbe
add
arpl
mov
enter
in
imul
int3
push
cltd
hlt
push
xor
into
jne
jg
int3
inc
popa
mov
arpl
push
sub
pop
in
cmp
out
movl
pop
int
adc
lret
loop
sub
movsl
test
pop
inc
push
jp
das
mov
sbb
xor
add
adc
xchg
sbb
loope
cwtl
imul
and
and
dec
sar
sarb
jge
push
lods
iret
cmp
aaa
mov
sti
pop
leave
cli
nop
push
xchg
jbe
jno
in
jge
leave
loope
inc
xchg
and
cmpsl
test
and
cmc
cmp
stos
mov
inc
mov
jae
pop
sub
movsl
pop
mov
sbb
pop
das
cli
sub
subl
jns
call
dec
jecxz
stos
dec
movb
lock
or
jle
mov
jae
inc
ficoml
movsl
aam
jmp
push
dec
mov
jecxz
test
decb
mov
cwtl
out
rcll
mov
push
es
and
cmp
xor
hlt
movsb
cmp
sbb
cmp
dec
in
pusha
fcmovnbe
in
adc
jge
sub
sub
rcr
sbb
int
imul
stc
hlt
sub
sub
dec
lods
sub
inc
push
mov
cmp
pop
or
inc
std
out
in
and
cmpsl
je
into
adcl
jo
fstpt
mov
push
int3
repz
mov
outsl
cwtl
sub
mov
aam
lret
pop
sbb
jo
ds
enter
cmpsb
mov
cltd
std
mov
push
mov
inc
lock
inc
jge
xor
push
popa
add
xorb
sub
das
pop
std
xchg
roll
lea
or
add
rcrl
xchg
push
jae
aas
outsl
add
cld
xchg
lods
mov
stos
fiaddl
or
rolb
frstor
mov
mov
mov
mov
jl
jg
add
mov
adc
dec
movsl
dec
pop
mov
jne
xlat
loopne
pop
imul
jo
mov
or
test
aas
adc
pop
dec
aad
addb
movsb
les
push
call
mov
lods
loope
dec
cli
jb
flds
inc
inc
loope
std
xor
cltd
inc
ret
mov
sahf
inc
mov
gs
mov
out
cltd
xchg
jecxz
pop
jmp
mov
enter
jmp
xor
or
pop
nop
popf
xchg
mov
mov
lret
jp
ds
xor
push
xor
test
aam
ret
in
out
dec
push
and
je
mov
sarl
add
aas
ss
fisubl
iret
push
inc
inc
les
add
xchg
push
faddl
imulb
inc
and
jp
stc
je
sbb
or
fistl
mov
push
lds
jmp
push
addl
scas
mov
cmpsl
mov
xchg
imul
popa
jl
and
add
and
test
icebp
dec
inc
pop
and
add
enter
clc
cld
push
push
push
rol
pop
leave
pusha
out
push
ljmp
jb
lea
or
dec
fwait
and
mov
or
test
mov
dec
call
xlat
fs
sahf
and
mov
inc
pop
addl
jbe
lret
shr
cli
adc
mov
test
fs
or
adc
mov
lods
cmp
jne
icebp
popa
fdivrs
fiaddl
push
outsb
std
and
push
mov
mov
in
inc
pusha
adc
xorl
push
jmp
mov
cli
xchg
sub
pop
or
insl
cld
inc
out
or
xlat
jnp
int3
and
popa
fcompl
jg
xlat
fs
lret
adcb
dec
cmpsl
jge
jae
inc
mov
jmp
popf
pushf
add
mov
popa
or
mov
mov
stos
aas
inc
and
sti
pusha
xor
xor
jnp
mov
out
jecxz
outsl
xchg
ret
pop
push
fisubs
cltd
dec
sbb
fwait
sub
mov
cs
mov
jp
mov
int3
dec
insb
sub
leave
int
mov
jae
or
fdivrl
scas
jp
and
cltd
pop
or
inc
fcompl
cwtl
out
inc
lds
mul
push
xchg
popf
ret
jl
cmp
jno
mov
pop
js
add
inc
ficoms
ds
fistps
rcrb
ret
cmpsb
push
pop
and
out
xor
out
test
pushl
out
in
sbb
rorb
jle
test
mov
xchg
fpatan
mov
cmp
jecxz
arpl
add
or
sub
stos
xchg
lods
mov
mov
je
bound
lret
sub
or
push
in
adc
jb
out
mov
hlt
push
jbe
mov
adc
xor
jnp
jae
gs
xor
add
adc
test
das
dec
stos
mul
sahf
ret
jge
cmpsb
std
cmp
cmp
jns
adc
sub
mov
aam
rol
imull
stos
mov
outsl
adc
insb
sbb
push
stos
in
fildll
lds
in
jmp
fadd
pop
push
or
xchg
pop
outsl
into
ret
repz
incl
sbb
jb
in
sti
or
and
lds
jge
pop
sbb
sbb
pop
lret
iret
sbb
or
fisubl
jb
cmp
stos
lea
push
ret
imul
cmc
ljmp
dec
jae
dec
dec
add
mov
cmpl
mov
inc
push
jo
in
push
pop
and
add
cmc
push
cmp
fucomi
xor
mov
xor
inc
sahf
clc
or
in
or
jo
dec
fildl
xchg
or
mov
and
jmp
test
sti
pop
or
add
and
pop
jg
pusha
mov
inc
inc
mov
out
push
orl
xor
push
inc
pop
lock
test
mov
mov
lret
loopne
add
xchg
sbb
mov
flds
test
lds
cmp
cmpsl
dec
dec
lock
fadds
mov
imul
in
shlb
push
mov
outsb
mov
push
rcr
add
pop
sbb
add
xchg
and
push
in
and
cwtl
jle
lret
jo
gs
fwait
hlt
jmp
fwait
xor
inc
mov
xor
mov
pop
cmc
nop
push
aas
mov
inc
cmp
mov
mov
xor
sub
inc
sub
push
or
imull
push
and
mov
lahf
push
lret
mov
stc
push
in
or
std
sbb
and
push
fildl
les
xchg
push
push
pop
clc
push
std
mov
das
mov
test
inc
into
add
or
mov
jno
dec
cmpsl
mov
xor
fbstp
or
shrl
loopne
cmc
cltd
xor
push
mov
test
dec
pop
sahf
cmpsb
cmc
pop
xchg
pop
fyl2xp1
stos
and
lahf
fwait
or
int
movsb
cmp
int
sub
icebp
je
fs
mov
call
in
leave
and
and
sbb
subb
inc
push
dec
mov
xor
sbb
stos
inc
imul
adc
fstpt
sbbb
push
sub
push
add
push
pop
adc
inc
inc
sbb
addr16
les
ljmp
inc
pop
test
inc
fidivs
gs
jb
cli
mov
test
mov
setae
stos
mov
pop
push
les
shl
cmp
cmp
outsl
daa
pusha
xchg
jb
stos
mov
pop
data16
push
and
roll
cli
negb
les
orl
rorl
testb
pop
inc
fldenv
mov
sub
lea
cmp
adc
jle
jae
lock
lock
js
pop
popl
sub
jge
push
lcall
mov
adc
je
outsl
push
and
xorl
add
mov
es
lods
repz
fs
inc
test
add
xor
mov
dec
pop
inc
mov
xchg
sub
mov
std
icebp
fisubs
pop
adc
jl
and
outsb
cmp
mov
adc
pop
sti
dec
sub
or
cmp
das
sub
repz
cmp
dec
cmpsb
push
ret
test
pop
or
mov
int3
fmull
lret
and
push
sub
loope
repnz
mov
mov
mov
pop
mov
jb
std
fsubrl
xchg
mov
fucomp
pusha
cmp
lret
test
lock
inc
sahf
push
xchg
pop
mov
jg
sbb
sti
mov
jae
push
movsb
inc
push
lea
aad
inc
sbb
fisttps
sub
adc
xchg
add
repnz
aas
divb
and
stc
inc
inc
movsb
adc
cltd
cwtl
xor
mov
jg
pop
mov
lds
sbb
pop
mov
and
push
cwtl
cs
js
cmpsl
xchg
aas
sub
jl
addr16
fnsave
imul
lods
sbb
stos
sub
test
cs
adc
cmc
bound
mov
mov
sub
outsb
inc
stos
mov
scas
pop
push
mov
lret
cmc
or
mov
imul
add
std
pop
lea
test
xor
push
add
js
das
clc
cmpsl
pop
jl
lahf
mov
rcrl
xchg
mov
push
push
fldcw
adc
xchg
and
jmp
movsl
in
adcl
sub
mov
dec
ret
mov
in
xor
cwtl
mov
inc
inc
push
jmp
roll
add
mov
push
popf
in
cld
std
das
sbbl
inc
faddl
in
fsubrs
inc
pop
jb
pop
pop
lahf
sahf
pop
xor
shl
cmc
std
aad
das
mov
repz
push
and
mov
xchg
dec
mov
orl
or
xlat
icebp
inc
inc
fimull
imul
rol
hlt
fs
and
js
jno
xchg
mov
lock
cmpsb
shl
and
imul
jo
std
xchg
imul
cmc
pop
cmp
add
js
movaps
ja
movsb
mov
out
mov
in
pop
add
cmp
rcrl
das
mov
cltd
insl
roll
adc
popa
bound
jno
jo
push
sbb
mov
push
jo
ljmp
ljmp
mov
movsb
adc
cmp
and
push
dec
in
and
xchg
aam
sahf
fildl
and
mov
stos
mov
push
cld
leave
push
mull
dec
sub
mov
subb
jno
sti
stos
jns
imul
mov
pop
addl
xchg
call
dec
adc
aam
cli
cmp
lods
sbb
pusha
addl
addr16
cmp
lcall
mov
aas
push
jbe
adc
push
cmpsl
xor
mov
inc
movswl
lods
sbb
lods
pop
fnsave
xchg
scas
push
push
in
add
or
pop
dec
pop
leave
into
insl
jp
adc
sub
mov
dec
dec
loope
ja
cmp
inc
xchg
bnd
repnz
dec
dec
jb
fisubl
mov
push
mov
push
outsl
rorl
sbb
mov
push
lea
or
lret
mov
jns
pop
lcall
dec
loop
ja
aas
mov
xchg
cltd
mov
inc
into
mov
call
lea
les
adc
jecxz
inc
mov
cld
xchg
pop
pop
pop
ror
sbb
jb
and
ret
sub
xchg
lods
lods
je
mov
cld
inc
xor
or
out
dec
sahf
out
cwtl
out
pop
mov
push
fs
stos
test
fdivp
pop
xor
jae
xchg
xor
stos
pop
lock
dec
sbb
push
sub
rol
loope
push
push
and
jb
jle
dec
push
nop
les
cmp
outsl
sub
sbb
icebp
enter
testb
sbb
cmp
jl
jae
mov
mov
sub
adc
sub
or
sahf
pop
insl
push
jo
pop
pop
dec
test
orl
or
enter
sub
cmp
mov
mov
inc
std
insb
add
shl
dec
xor
pmaxub
pop
xchg
xor
jae
stc
loop
repnz
cwtl
mov
xchg
jb
push
lret
dec
mov
icebp
mov
lds
sub
dec
fisttps
insb
je
les
stc
mov
imul
xchg
aam
mov
imul
adc
mov
fcmovnb
inc
negl
iret
aad
dec
pop
ljmp
repnz
xchg
sub
adc
inc
jmp
imull
push
fmull
mov
call
adc
jb
call
mov
scas
inc
in
fnstsw
dec
pop
cld
cmc
push
cmpsl
daa
mov
stos
sbb
dec
jp
insl
dec
jb
mov
push
hlt
inc
ss
mov
xlat
sub
jmp
xchg
xchg
jnp
push
lods
lret
mov
sti
movups
cmp
subb
pop
test
push
or
fucomp
sbb
mov
adc
mov
decl
push
sbb
sbbl
fwait
mov
dec
shr
mov
mov
jb
je
jmp
mov
and
pinsrw
dec
stos
push
push
jl
lds
gs
out
inc
aam
cld
ret
mov
iret
fdivr
pusha
in
inc
lret
pusha
pop
push
sbb
push
clc
test
push
out
push
adc
add
push
andb
or
aaa
dec
stos
pop
dec
sbb
int3
or
cmc
sbb
cli
jo
cli
push
cltd
push
mov
and
and
mov
popf
lods
or
shll
and
push
jo
push
loope
mov
popa
jnp
push
in
lahf
push
jns
xchg
ja
and
rcrl
sbb
fimull
inc
pop
cmpb
sbb
cmp
mul
sub
repnz
add
mov
xchg
int
cld
insl
adc
mov
lcall
call
outsb
jmp
sbb
je
sub
sub
scas
push
lcall
xor
out
imul
cwtl
int
mov
in
or
adc
mov
push
mov
xchg
mov
adc
insb
push
mov
xchg
sbb
xor
ret
add
daa
es
mov
ss
add
jnp
lahf
lods
adc
stc
and
jbe
push
rcl
lods
mov
add
inc
xlat
hlt
movsl
std
iret
pop
adc
adc
fld
das
hlt
aaa
fistpl
cmpsl
shll
leave
adc
jmp
xor
mov
aas
mov
jno
cmpsb
lea
test
pop
cmp
xor
fucomp
fdivrs
or
loopne
sbb
or
xor
nop
fwait
or
adc
mov
mov
hlt
pop
add
test
sub
mov
fcomi
dec
test
lock
decb
int
lds
lcall
das
mov
ret
repnz
outsb
or
pop
jns
sbb
push
adc
dec
or
inc
and
mov
fwait
cmpsl
sahf
mov
mov
sbbl
enter
loope
lcall
ret
cmp
loop
push
cmp
mov
dec
jno
js
out
lds
ja
and
jmp
fsubrs
push
sub
lds
cmpsl
push
adc
lret
or
pop
mov
hlt
loope
mov
shll
dec
sub
jecxz
fwait
xor
adc
into
xchg
push
ds
mov
sti
call
test
dec
inc
mov
cmc
jo
movsb
sub
mov
pushf
rolb
push
js
ljmp
sahf
push
push
mov
in
or
rcll
mov
cwtl
stc
pop
xor
mov
mov
loop
cmp
outsb
jl
mov
daa
pop
lods
call
or
das
jo
push
stos
xlat
cltd
shll
xor
push
cmp
jmp
mov
test
call
lret
jle
jmp
aad
cltd
les
inc
lods
jecxz
shrl
test
loope
das
sub
sbb
testb
aam
rclb
dec
mov
cmc
test
cmp
xor
into
call
insl
loopne
cmp
mov
pop
mov
xchg
stos
out
mov
or
inc
push
out
xchg
pushf
test
ja
repnz
lcall
sbb
in
jae
cwtl
mov
xchg
cs
imul
pop
inc
popf
stc
jmp
xlat
jbe
orl
jg
scas
jae
loope
add
jge
and
sahf
push
stos
xchg
test
add
stos
std
xchg
and
pop
stc
mov
jmp
jne
pop
push
push
inc
loopne
mov
faddl
inc
push
adc
or
xchg
daa
and
cmp
test
hlt
mov
mov
adc
jne
shlb
jo
adc
sub
sbb
mov
cmp
push
sbb
pslld
sbb
mov
pop
in
jnp
mov
jecxz
push
dec
push
int3
pop
pop
gs
bound
lods
stos
aam
mov
and
push
clc
push
cvtps2pi
sub
lods
in
add
loop
mov
iret
lds
nop
sahf
lds
jnp
cmc
mov
shrl
ret
cld
inc
jb
push
pop
cmp
jne
lea
mov
adc
aaa
sub
outsb
jmp
push
fchs
inc
out
xor
test
pop
jmp
add
dec
vmovd
inc
inc
dec
mov
push
sub
std
or
sub
mov
jmp
cmpsl
stc
je
xor
and
fcomip
into
mov
xchg
push
test
les
rorl
adc
or
fsubs
movb
hlt
arpl
sbbb
pop
scas
sub
jl
mov
and
sbb
add
in
xor
filds
push
mov
or
ficoms
inc
into
movsb
add
xlat
xor
les
sub
pop
cmc
inc
fldl
in
fimull
cmp
outsb
popa
testl
jle
pop
pop
pushf
sub
pop
addb
dec
fiaddl
data16
dec
push
loopne
sub
sbb
les
sub
jo
push
cltd
loopne
mov
lea
lods
ret
das
bound
dec
loope
cmp
ss
imul
jo
or
fs
insl
mov
iret
aad
mov
fiaddl
dec
mov
imul
xchg
hlt
xor
or
adc
and
sub
lea
stc
aam
call
pop
out
mov
xor
cltd
jo
add
dec
push
out
not
loope
adc
mov
insl
mov
jb
xchg
push
addr16
mov
idivb
pop
dec
and
movsb
rcl
test
or
cmp
es
push
xchg
fwait
sti
imul
inc
test
pop
orl
fisubrs
jnp
adc
repnz
ja
jae
xchg
xchg
cli
sub
rclb
xchg
sub
sahf
or
in
push
dec
arpl
jb
pop
and
insb
jmp
fidivrs
mov
sbb
loop
push
dec
mov
insl
jg
adc
call
or
cld
cli
mov
js
sbb
fwait
jns
mov
inc
es
mov
sbb
and
lods
jp
jns
stos
pusha
jno
xchg
xor
push
popl
jl
test
jne
push
inc
stc
dec
sarl
cmc
inc
dec
shlb
jge
sub
push
out
fcompl
daa
ss
sub
ja
pop
insl
outsl
xchg
call
iret
es
pop
jecxz
scas
inc
cmp
sahf
arpl
push
inc
inc
int3
outsb
mov
and
in
cmp
push
stos
or
push
sub
xchg
pop
xor
pop
inc
lret
out
xchg
dec
push
addr16
cltd
mov
sub
repnz
xor
ja
push
in
mov
fld
test
sub
xor
fs
inc
sub
fstpt
cmp
lret
bound
shll
dec
test
sbb
popa
imul
pop
sbb
jg
outsb
add
and
jae
cmp
movsb
popa
push
sbb
mov
scas
mov
iret
popa
sbb
hlt
dec
pop
les
mov
adc
dec
jae
mov
jae
jbe
pop
or
xchg
add
lahf
divb
rcll
jl
cmpsl
cmp
aad
mov
fdivrs
call
testl
sbb
mov
jnp
and
dec
pop
xor
test
loope
lods
out
outsl
jnp
fsub
mov
cmp
mov
jmp
pop
inc
clc
sbbb
je
jl
lret
stos
test
adc
fistpl
inc
fisttps
inc
in
fstpl
mov
outsl
push
push
push
enter
mov
fdiv
repz
inc
fstpt
cwtl
mov
leave
and
std
xor
jmp
int
pop
test
int3
lret
pop
add
rcll
test
jmp
fcompl
dec
push
mov
popa
fcmove
push
dec
add
fbstp
xchg
popf
iret
cmp
add
lcall
jnp
jne
insb
shlb
stc
xchg
out
mov
jno
push
fnstenv
xor
test
into
add
pop
popa
pop
test
push
cld
loopne
aad
insl
add
out
xchg
adc
cld
lcall
jb
sub
mov
push
inc
push
sahf
inc
push
lods
pop
pop
jmp
lret
out
aad
jne
mov
fidivl
fcoms
lea
icebp
push
lcall
sbb
push
rclb
enter
daa
pop
outsb
ljmp
pusha
stos
bound
mov
lods
imul
stos
xchg
outsb
adc
ret
imul
ds
jl
lcall
adc
inc
inc
adc
jae
in
push
out
je
cmp
inc
sbb
ret
daa
mov
int3
dec
pop
ficoms
outsw
repnz
or
push
cmpsb
adc
and
jg
in
add
adc
sub
das
mov
jno
or
xlat
cmp
iret
call
out
cmc
into
add
mov
xchg
and
add
push
arpl
bound
push
sbb
and
xchg
popf
cmpsb
xchg
out
lds
out
call
push
jmp
imul
jecxz
out
xor
inc
and
fisttpl
mov
sti
sub
stos
cmp
dec
scas
in
std
in
les
cmp
ret
adc
lods
sarb
scas
arpl
cltd
dec
push
jg
stos
sbb
pop
ss
dec
shrb
insl
jecxz
les
add
dec
pop
and
arpl
sbb
cli
out
outsl
cmc
scas
fcompl
mov
sub
sub
or
cmp
vmwrite
cli
adc
add
adcl
mov
lea
add
leave
fnstcw
cmc
shrb
ja
ret
cmc
mov
popf
fs
lods
mov
mov
clc
repz
sbb
scas
xchg
jnp
movb
jmp
cmc
js
xor
and
xchg
mov
lds
push
mov
shrb
repz
pop
xchg
push
and
cmp
push
stos
loopne
pushf
ret
pop
inc
ss
jb
pop
je
daa
adc
add
mov
push
mov
leave
sub
inc
loop
mov
mov
jbe
dec
dec
mov
ljmp
es
mov
and
jb
stos
scas
jae
loope
sti
sbb
mov
push
into
mov
fstl
lea
jo
in
sub
popa
stc
popf
lret
je
sti
jne
mov
sarl
xchg
rclb
fstpt
sahf
lret
jae
mov
pop
dec
pop
addr16
jge
add
out
adc
in
xor
test
jae
mov
ljmp
fisttpll
jmp
sti
sbb
inc
fs
jp
shrl
xor
sbb
mov
jp
pusha
fiadds
push
rcrl
pop
imul
bound
imul
mov
out
sbb
inc
loopne
repnz
mov
negl
mov
cmp
call
jl
in
mov
je
push
xchg
pop
out
mov
xchg
loope
mov
sbbb
aaa
sti
stos
pop
je
outsl
mov
jno
mov
cmc
xor
mov
pop
xor
incl
sbb
sbb
clc
insb
js
outsl
rcrl
test
inc
sbb
fidivl
jbe
mov
ljmp
fwait
dec
test
leave
mov
ret
pop
in
enter
fnstenv
icebp
sbb
xor
cmp
dec
add
hlt
pop
adc
lahf
popa
cwtl
cs
fidivl
fadds
adc
push
adc
into
daa
repnz
bound
incl
mov
fwait
or
aaa
int3
lret
fisubs
mov
in
fwait
mov
idivl
add
mov
rcl
repnz
adc
add
repnz
add
jno
pop
arpl
pop
nop
xorl
push
js
test
rsqrtps
sub
push
imul
fsubrl
insl
and
ret
mov
scas
add
popa
push
out
sbb
mov
scas
mov
add
mov
outsb
ret
jecxz
ljmp
test
rcll
mov
xor
pop
sbbb
inc
data16
cld
inc
cmp
js
xor
inc
fucomip
dec
dec
mov
jns
mov
mov
or
push
pop
mov
icebp
ds
sub
inc
pop
mov
add
dec
insb
cmp
cmp
rorb
inc
shlb
pop
mov
push
imul
mov
aas
jb
outsb
and
sub
add
inc
sbb
xor
dec
mov
cwtl
cwtl
jo
mov
into
out
jne
mov
push
sub
cmpsl
push
push
push
adc
cwtl
xor
sbb
cmp
popa
sahf
notl
out
cmpl
xchg
mov
push
push
fwait
sbb
insb
xor
outsb
push
subl
test
vcmppd
sbb
shrl
inc
add
lock
xor
js
mov
shrl
and
and
push
pusha
mov
lcall
fucomp
mov
or
in
cmc
and
jge
inc
pushf
imul
sub
cmpsl
sbb
mov
jns
ljmp
int3
test
jbe
xchg
and
push
addr16
cmc
es
jnp
add
or
push
jno
or
ds
mov
leave
loope
pop
pushf
mov
cs
lcall
lret
mov
popa
clc
leave
push
dec
scas
cltd
ljmp
clc
aaa
pop
mov
pop
stos
xchg
push
mov
lods
jg
lahf
push
mov
sub
or
mov
movsb
and
pop
andl
dec
jns
insb
lcall
adc
sub
push
pop
push
dec
mov
jo
imul
stos
loop
dec
adc
jo
xchg
rcl
xor
jp
gs
loopne
add
inc
dec
add
xchg
mov
cmpsl
xlat
cs
dec
push
cmp
sbb
mov
xchg
popf
push
pop
insl
repnz
mov
cmp
jne
add
xor
jb
push
sub
aad
jo
add
sahf
lods
xchg
cwtl
inc
adc
in
sub
sbb
xchg
clc
pop
xor
mov
mov
jmp
cmp
push
xor
sub
sti
mov
sahf
mov
add
mov
sbb
into
inc
shlb
ja
jg
aas
enter
mov
cmpsb
cmp
lds
lret
pusha
fisttpll
dec
cmp
sbb
je
imul
imul
out
mov
std
and
mov
data16
cwtl
dec
clc
cmp
repnz
ja
pop
cmp
pop
adc
jnp
int3
or
subb
pop
mov
aas
ret
and
pop
sbb
aad
repnz
out
push
aaa
int3
arpl
cld
jg
dec
jne
mov
jge
int
mov
or
testl
out
push
lods
cmp
cld
lret
in
insl
pop
sbb
jne
add
push
orb
call
mov
cmc
out
arpl
add
jp
andb
or
testb
jbe
in
jo
jle
shrl
xor
cli
and
and
jne
or
dec
inc
daa
mov
nop
fs
jle
pop
pushf
inc
jmp
add
mov
shll
in
xchg
or
xchg
bsf
jne
mov
add
addr16
jl
testl
cmp
test
jp
cmpsb
in
dec
push
mov
push
or
testl
nop
sti
imul
mov
sub
mov
mov
and
sub
addr16
fwait
push
repnz
out
test
adc
in
inc
mov
jae
push
xchg
sbb
inc
cmpsl
popf
xor
add
hlt
mov
xchg
push
clc
nop
xchg
jo
movsl
push
popf
je
push
je
xchg
and
jns
add
fs
dec
pushf
xor
sub
in
movsb
dec
inc
mov
push
push
pop
cmp
push
stos
in
pop
xor
dec
fsubrl
shl
xchg
add
xchg
adc
push
test
mov
adc
dec
push
repz
jb
outsb
loope
and
jl
jnp
add
test
and
xchg
int3
add
mov
shll
pop
idiv
movsb
testl
mov
sub
ss
mov
lcall
mov
sahf
lock
dec
lcall
xor
adc
mov
jp
insb
icebp
pop
lds
ljmp
fisubl
pop
rorl
mov
sub
and
mov
in
xor
repz
addr16
lret
push
add
shrb
mov
fdivrl
push
adc
sub
movsb
lcall
mov
mov
xor
ds
popa
aas
push
in
jl
jo
mov
jle
fstpt
xchg
repz
mov
test
nop
push
in
ret
push
fdiv
cli
dec
mov
push
data16
shrl
dec
pop
cmp
pop
dec
loopne
jnp
test
jb
pop
movsb
mov
and
inc
push
shrl
jmp
jp
cld
out
xchg
int
nop
mov
ret
xor
inc
incb
mov
pop
cltd
popa
into
jle
jge
pusha
cmp
fwait
xchg
sub
mov
jmp
push
cmp
int
pop
mov
inc
out
inc
jmp
push
stc
or
test
adc
ds
add
xsha256
cmpsb
adc
jp
aam
loopne
lcall
sahf
cli
add
mov
xchg
arpl
repz
fidivs
dec
notl
mov
mov
xor
jp
mov
je
add
je
clc
aad
lods
scas
daa
jne
test
jp
xor
or
push
push
aas
aas
sahf
xchg
lahf
clc
push
sub
mov
xchg
or
cli
loope
sub
repz
cmp
and
pop
mov
sbb
sub
xlat
pop
test
and
aam
xor
mov
mov
add
sti
jae
mov
adc
das
jbe
stos
idiv
push
scas
sbb
lea
fs
divl
xchg
es
aaa
test
xor
and
cmp
push
test
mov
xchg
mov
es
lret
and
in
ds
inc
out
and
cld
push
adc
rol
pop
mov
jg
cmpsb
arpl
push
in
jb
popa
loop
xchg
decb
in
cld
sub
ficoms
or
xchg
ds
xor
sti
shrl
repz
nop
and
jb
mov
js
pop
repnz
mov
ds
xchg
jl
lret
pop
mov
xchg
in
mov
out
test
mov
imul
or
mov
jb
stos
sub
mov
rcrl
lcall
sbb
lods
xor
fiaddl
sbb
pop
add
lret
test
push
or
fisubl
jns
imul
lret
scas
push
cmc
push
pop
push
popf
iret
jns
daa
sub
popf
lods
inc
fwait
mov
out
xchg
pop
call
mov
lods
or
sbb
lock
push
sub
cmp
ret
outsb
add
sarb
sub
push
scas
jno
imul
mov
fisttpll
or
test
xchg
push
sbb
das
pop
or
fwait
ss
jecxz
mov
add
or
idivb
mov
sub
shl
mov
jno
xchg
adc
jo
test
cmp
push
dec
sbb
cmpsl
fs
imul
pop
mov
and
cmp
in
out
add
cmp
xor
sti
outsb
fstpl
leave
mov
dec
popf
adc
pop
idivb
jo
push
sbb
pop
push
jb
out
jp
lahf
stos
dec
insl
aad
test
mov
push
mov
rcll
add
js
repz
adc
stos
lret
pop
icebp
scas
test
iret
sbb
cltd
xor
rclb
push
mov
inc
les
lock
mov
popf
mov
sbb
icebp
adc
bound
and
movsb
call
inc
push
int
cmp
xchg
sbb
mov
push
ret
call
jae
sbb
adc
adc
addps
and
mov
xlat
nop
ss
inc
push
lock
inc
cmpsl
insl
xchg
ss
lret
out
mov
imul
inc
dec
in
dec
inc
shll
push
pop
scas
dec
insb
aaa
pop
mov
push
xchg
pop
aam
fsubr
cmpsb
xor
mov
test
rcrb
jns
mov
scas
mov
xor
xchg
subb
aad
xor
daa
jno
filds
gs
int3
gs
jns
popa
mov
push
lock
xchg
pop
out
mov
out
repnz
test
mov
add
adc
pop
add
xor
out
dec
push
xchg
in
mov
std
adc
fidivl
jl
or
movsb
aaa
and
mov
subb
push
xchg
jne
jl
xorl
adc
push
inc
xor
inc
data16
lock
pop
or
add
ds
sub
xchg
cli
or
and
jo
jno
pop
scas
xchg
test
add
lret
mov
es
fldenv
pop
or
xchg
outsb
inc
in
pusha
or
xchg
insb
jle
dec
rol
dec
add
pop
mov
negl
mov
jl
cwtl
test
mov
adc
and
adc
ret
pushf
icebp
push
pop
inc
shll
dec
dec
pop
mov
sub
in
jno
cwtl
mov
fildl
scas
loop
aaa
cmp
jl
popa
loopne
mov
adc
push
int3
mov
fdivl
nop
add
or
ffreep
sub
mulb
xchg
inc
cwtl
pushf
inc
and
ljmp
mov
lahf
mov
scas
es
dec
test
xchg
pop
nop
stos
sbb
jl
test
sub
sbb
sub
sub
leave
int
out
jp
cmp
push
mov
sbb
jne
jmp
mov
or
add
fldenv
and
fwait
push
cwtl
inc
pusha
lret
cmp
mov
push
out
insb
popa
cmp
cs
mov
jge
insb
test
shrl
dec
mov
adcl
outsb
cli
cmp
adc
mov
lea
out
in
popl
mov
out
xchg
in
cltd
push
shlb
popa
xlat
jne
idivl
push
jecxz
xor
xchg
sbb
dec
popa
dec
je
enter
jae
ja
xchg
test
jmp
sbb
dec
cmp
adc
xchg
int
jecxz
mov
ljmp
call
dec
ret
pushf
fbld
mov
dec
xlat
inc
cmc
mov
fisubl
sub
inc
xchg
inc
cld
or
sub
into
pop
push
pop
iret
pop
and
test
and
pop
loope
repz
scas
out
cmp
cmp
jecxz
add
dec
xchg
rclb
mov
repnz
incl
jns
ljmp
movsl
fcoms
xor
and
jb
xchg
push
sti
sub
in
sbb
mov
fwait
sbb
or
out
mov
lret
and
xor
int
cwtl
fiadds
into
fstpt
dec
fwait
aam
ret
sub
mov
add
or
fstps
jb
sub
jmp
notb
in
or
sti
mov
iret
mov
push
jp
add
popf
inc
sbbl
dec
outsb
add
lods
cmp
lods
insl
sbb
sbb
aas
ror
jo
fnstsw
imul
ret
stos
add
add
fwait
lods
add
jo
call
sbb
mov
adc
hlt
jb
xchg
mov
sbb
lahf
xor
mov
mov
adc
data16
or
push
js
cmpsl
cli
lret
rol
or
xor
add
call
cs
lea
test
lods
and
mov
pop
popf
mov
sub
fdivl
or
xor
push
nop
pop
or
cmpsl
flds
add
test
mov
das
or
adc
xchg
jl
ret
out
hlt
or
sub
scas
pop
jns
mov
pop
push
in
dec
add
sub
ret
sub
mov
jecxz
xor
pusha
sbb
cmp
jbe
sub
pop
xor
sbb
mov
push
inc
inc
push
aam
mov
ret
jno
movsl
add
ret
jae
and
test
push
xchg
bound
bound
cwtl
daa
inc
std
mov
in
cli
cmpsb
jno
lods
cmp
mov
into
gs
aam
addb
inc
and
xchg
cltd
sub
lods
pop
mov
sarl
inc
cs
andb
and
mov
mov
jns
insb
mov
xchg
cmp
popf
or
shll
push
mov
push
adc
ret
pop
cltd
repz
lock
insl
lods
jecxz
loope
or
inc
fistps
xor
stos
movsb
imul
cmp
out
or
cli
cmp
mov
push
insb
out
xor
sti
and
orl
nop
icebp
sub
fs
inc
inc
repz
icebp
jl
mov
pop
mov
add
mov
dec
imul
push
cwtl
loope
cli
lods
xor
lcall
inc
loopne
sbb
pop
add
pop
cmp
or
rcrb
test
adc
leave
cmpsb
ret
movsl
data16
push
xchg
dec
mov
lods
in
rorl
icebp
fiadds
dec
xchg
es
out
sbb
jmp
adc
mov
cmpb
dec
or
scas
in
and
jmp
dec
fdivr
xor
xlat
mov
sbb
push
cs
inc
cvtdq2ps
jl
xchg
mov
cmp
mov
adc
outsb
test
xchg
mov
fistps
mov
decl
rolb
fdivr
xor
fldt
sbbb
fdivl
loope
mov
cmp
and
mov
outsl
int3
mov
ja
mov
notb
sub
sbb
dec
mov
push
test
mov
push
mov
mov
movsl
jp
or
lret
scas
or
nop
dec
cld
or
sub
mov
in
add
push
fbstp
sub
fidivl
int3
jb
inc
call
mov
dec
sbb
sub
mov
aaa
int3
in
xchg
adc
sahf
xchg
dec
ffreep
test
repz
lock
pushf
pop
jp
cmp
cltd
hlt
lret
dec
add
inc
fistl
mov
xor
push
loopne
cmp
lods
cmp
addr16
push
test
inc
and
nop
push
lahf
sbb
sahf
call
int3
dec
cmpsb
in
pop
mov
dec
stc
cmp
inc
mov
mov
in
aas
out
bound
out
xchg
iret
int
repnz
inc
pop
dec
adc
fwait
lret
addr16
ljmp
jb
in
cmp
cmp
inc
fdivrp
xchg
mov
leave
gs
repz
arpl
aaa
int
push
mov
push
mov
pop
jp
aad
popa
xor
mov
call
fisubs
jns
mov
mov
cwtl
hlt
sub
es
decl
ds
mov
les
mov
mov
mov
sub
scas
mov
pop
dec
push
or
ljmp
xor
sbb
inc
fwait
add
push
lock
adc
sub
pop
test
xchg
dec
push
add
js
loop
push
je
add
and
faddp
mov
fdivl
mov
cs
jge
sub
adc
mov
add
das
xchg
push
addr16
adc
jge
repnz
fucom
xor
out
sub
jp
and
sti
adc
jp
ret
mov
aas
adc
jns
or
icebp
adc
lcall
call
ss
or
aaa
mov
dec
or
push
mov
mov
pop
cltd
lock
test
adc
ss
data16
arpl
cmpsl
fs
sar
repnz
jmp
fnstcw
xor
push
enter
sarl
push
arpl
push
mov
inc
inc
pop
jecxz
lcall
xchg
jb
testb
and
ret
xor
das
popa
xchg
shlb
enter
lahf
orb
dec
sbb
push
sub
cld
std
fildl
dec
sbb
and
cmp
out
xchg
scas
test
cmp
iret
ficompl
sub
int3
sub
addr16
mov
mov
scas
mov
cmc
mov
jg
pop
mov
jb
aas
cwtl
gs
insb
aad
sahf
call
push
rep
loopne
or
ljmp
adc
jecxz
push
push
and
inc
lods
aaa
inc
mov
jmp
cltd
xlat
sarl
idivb
push
jae
inc
out
push
jns
add
inc
and
add
push
pop
mov
aad
mov
pushf
lea
xchg
pop
ds
orb
mov
je
int3
pop
push
push
fwait
jne
je
imul
sub
xlat
cmp
mov
sub
mov
loop
std
add
das
mov
mov
and
inc
inc
push
or
loope,pt
scas
xor
lret
repz
sbb
and
mov
push
pushf
adc
xor
cwtl
or
mov
lret
outsb
add
mov
loope
adc
popf
cmp
xchg
jbe
or
sbb
and
or
jp
pop
mov
popf
fdivl
aam
dec
outsb
testb
decl
test
aam
xchg
stos
lods
orb
xor
xchg
xchg
mov
dec
rorl
xor
push
je
mov
enter
pop
push
cmpb
insl
or
and
or
cwtl
xchg
dec
xchg
pop
add
sbb
xchg
je
sub
dec
add
add
cmp
dec
push
outsb
pop
imul
aas
mov
inc
mov
jae
loopne
fcomps
mov
adc
negl
push
out
out
adc
jp
outsl
fucomip
jl
fldenv
js
xor
pushw
sti
xchg
imull
sbb
lea
ret
xchg
iret
out
leave
xchg
js
push
test
dec
rclb
push
mov
cmpsl
aam
outsb
mov
mov
call
inc
dec
das
ficoml
inc
sbb
outsl
xchg
push
cltd
sbb
fwait
and
rclb
inc
xchg
dec
sbb
lret
sub
fadds
loop
out
cmp
jg
out
fsubl
out
fmull
icebp
jge
push
rcl
int3
lods
xchg
inc
call
add
je
push
outsb
rol
fisubl
ret
mov
movsb
into
mov
sbb
dec
add
test
or
xchg
sub
pushf
and
dec
and
ljmp
xchg
mov
push
stc
les
cmp
subl
lret
lret
add
sbb
lods
lcall
outsl
shlb
jmp
mov
jmp
cmpsb
lock
loop
xor
out
add
pop
sahf
xchg
or
dec
cli
pushf
fs
imul
push
jmp
pop
lahf
ss
jle
pop
mov
cli
mov
sbb
mov
fcoms
pusha
je
mov
lods
outsl
dec
mov
bound
add
loope
hlt
adc
mov
shrb
push
icebp
ljmp
jg
fidivs
dec
push
out
lcall
repz
pop
cmpsb
test
icebp
mov
je
mov
lcall
and
cmp
movsb
fdivl
or
xor
repz
xchg
rcr
sbb
popa
add
scas
divb
mov
jmp
in
out
xchg
jnp
mov
mov
or
add
lods
push
fldt
lret
ret
stos
xchg
cmc
in
mov
rcrb
xchg
pusha
mov
lea
mov
sub
add
outsb
nop
daa
mov
sbbl
push
iret
mov
ror
push
stc
loop
cmp
andb
sub
lcall
stc
mov
mov
mov
mov
movsb
pop
in
out
ret
push
mulb
pop
ja
jp
add
and
outsl
or
movsb
aaa
push
shl
inc
mov
jl
shr
test
call
cs
into
stos
jl
dec
bound
dec
loope
inc
adcb
xor
ret
xor
jo
pop
cltd
sti
out
fs
mov
xchg
test
movsb
daa
mov
test
clc
in
js
and
fistps
cmp
in
inc
sahf
push
sbb
movsb
jmp
cltd
inc
insl
sub
into
andb
stc
sub
div
xor
pop
lods
mov
scas
adc
push
cli
nop
iret
rolb
stos
aam
je
sbb
fsub
cmp
imul
mov
pop
mov
cmp
cmp
insb
pop
rcr
push
sbb
divb
jecxz
sub
movb
sbb
mov
ret
or
repnz
push
sbbl
push
inc
outsb
mov
cmpsb
xor
mov
push
fucom
dec
adc
mov
add
pop
repnz
or
pop
loope
les
jae
dec
xor
inc
adc
and
shlb
sbb
mov
jle
push
std
xor
inc
lods
pop
imul
je
xor
movsl
mov
rcll
int3
xor
or
mov
mov
sub
out
jmp
mov
xlat
and
pusha
or
mov
and
out
xor
in
push
cmp
xor
mov
shlb
insb
inc
add
aaa
mov
ret
push
mov
and
and
aas
mov
dec
xchg
inc
cmp
pop
int3
or
outsl
pop
mov
push
push
aam
or
pop
xchg
jge
xor
int3
jmp
loopne
jmp
fcom
aaa
pinsrw
imulb
imul
xor
popa
insl
cmpsb
dec
jmp
popf
je
pop
cmpsb
xor
lods
aaa
imul
and
cld
xchg
int
arpl
and
int3
sub
dec
dec
mov
lret
jno
lret
jg
shr
adc
or
leave
xchg
sbb
popf
mov
int
jno
mov
cltd
stc
pop
into
aam
and
pusha
cli
imul
mov
int3
and
adc
mov
pop
imul
repz
mov
xchg
fnstsw
iret
sbb
mov
lods
mov
roll
mov
ret
je
jns
sahf
jo
mov
sti
jmp
mov
xchg
test
jmp
iret
sub
mov
mov
aaa
clc
in
mov
sub
cli
fwait
xor
in
adc
fbld
inc
sahf
daa
or
pop
jle
and
ret
jb
jae
test
lret
push
push
jne
mov
cli
pop
cmpsb
lea
and
push
jp
dec
sub
adc
cmc
icebp
adc
aaa
mov
das
stos
das
push
test
hlt
sarl
fldt
xchg
shrb
pop
lods
sti
addr16
cli
sbb
or
daa
mov
inc
xchg
jge
stos
lods
ds
inc
stos
lret
ljmp
jae
dec
sti
inc
jmp
rcr
mov
push
hlt
push
fdivrl
iret
bound
sbbl
js
xor
mov
je
mov
insl
jmp
xchg
sub
sbb
dec
xor
pop
clc
adc
push
cmpsb
jmp
shrb
adc
cli
adc
xor
or
fidivl
arpl
in
je
jge
mov
icebp
mov
stos
mov
jp
sarb
mov
or
es
inc
es
outsl
imul
int3
push
call
into
xor
test
lds
push
insl
stc
sub
mov
adc
add
jnp
in
les
add
adc
enter
xchg
dec
pop
nop
xor
fiadds
mov
into
sbb
imul
and
jno
enter
fucomi
mov
out
and
flds
or
jge
push
sub
lods
bound
jb
adc
movsl
cmp
lock
or
int3
jg
add
pop
out
fcompl
adc
hlt
mov
mov
loope
jnp
lds
sarb
imul
adc
xchg
push
pop
adc
dec
fsts
clc
fsts
into
mov
subb
sbb
aaa
mov
pop
fcompl
cmp
sbb
cmp
push
aaa
into
inc
push
dec
loopne
cmpsl
lods
in
sbb
icebp
hlt
lahf
sbb
inc
in
insb
bound
js
in
jns
mov
sbbb
js
push
scas
add
cmpsl
negb
nopl
out
sbb
dec
push
inc
test
in
pop
adc
movsb
je
push
cmpsb
call
cmpsl
cmp
mov
mov
fs
or
in
ret
mov
inc
mov
mov
jp
and
fcomps
xor
add
pop
mov
pop
push
out
or
mov
and
scas
ret
fsubr
push
sbb
test
popa
xor
mov
jne
stc
hlt
add
jl
push
js
xchg
scas
rcll
fsub
cmp
xchg
xor
loopne
rorb
es
cvtdq2ps
sub
mov
lods
out
loopne
rcl
sbb
mov
notb
jmp
repnz
insb
mov
xchg
sahf
aaa
pop
xchg
std
pop
out
inc
js
ss
fs
xor
mov
cmp
stc
mov
jb
fwait
jnp
xchg
lods
mov
inc
dec
stc
fsubp
subb
loope
or
pop
push
dec
bound
outsb
test
cwtl
adc
mov
mov
das
xchg
movsb
or
out
inc
cmpps
sahf
mov
push
in
lock
cmp
jbe
xchg
sbb
shll
js
cs
inc
push
cwtl
jl
sub
das
mov
pop
ljmp
push
test
hlt
xchg
decl
adc
inc
rorl
jbe
rcrl
sarb
push
dec
add
mov
std
imul
xchg
pop
xchg
nop
mov
movsl
in
cs
mov
pop
movsl
add
xchg
clc
shll
sub
jmp
fcoms
lods
lods
inc
leave
aam
and
lcall
push
jmp
cwtl
test
xchg
adc
xor
pop
add
inc
sahf
idivl
adc
dec
lock
and
sahf
inc
inc
fdivl
stos
es
inc
sbb
repnz
lock
cwtl
and
add
pop
cwtl
xor
mov
sar
dec
shr
cmp
mov
push
jbe
iret
cmp
push
leave
mov
rol
addr16
mov
mov
mov
mov
aad
ljmp
arpl
test
aaa
adc
int3
mov
leave
in
adc
leave
int
push
test
jmp
mov
mov
repz
xlat
jmp
incl
and
dec
out
popa
loope
loope
outsl
lahf
mov
movsb
les
xchg
dec
pop
jge
mov
or
push
rcll
xor
push
sbb
fwait
mov
jg
ret
inc
rorb
imul
lret
sub
push
dec
call
mov
aad
mov
mov
jae
push
jge
dec
scas
ja
das
insl
inc
push
mov
clc
or
jb
add
pop
cmp
fimull
pop
xchg
outsl
push
enter
xchg
pop
pushf
jge
xor
xor
cmp
and
xchg
int
ljmp
out
or
xchg
sub
xchg
fldenv
rcrb
add
xor
add
mov
jb
jbe
lcall
pop
sbb
aam
add
mov
std
inc
stos
aam
ret
inc
mov
and
bound
int3
in
push
gs
mov
fucomp
sub
mov
dec
filds
mov
xchg
add
stos
xor
repnz
sbb
test
std
cmpsl
ljmp
sbb
xor
or
lock
rcrl
andl
push
test
cs
enter
mov
mov
jg
insb
xor
add
mov
lods
pushf
xchg
insl
add
ret
cmc
push
mov
lahf
fstpl
sarl
jp
jbe
cmpsb
push
and
cmp
lea
jne
hlt
jge
inc
mov
stc
lea
xor
dec
sbb
mov
rcrl
divb
shlb
adc
int3
cli
cmp
sub
sbb
mov
shrb
mov
enter
sub
pop
pop
in
pop
push
test
fmulp
inc
pop
mov
stc
mov
jle
xor
or
add
sbbl
xor
adc
lcall
adc
add
ja
push
sbb
out
xchg
iret
mov
clc
outsl
test
inc
jmp
mov
or
jge
inc
jle
in
cmpsl
test
insl
mov
adc
or
fwait
iret
push
test
mov
int
pop
fcomip
xor
aad
jne
sahf
lods
jle
pop
xor
jnp
push
sbbl
rcl
lea
hlt
pop
or
cltd
ss
dec
in
mov
cmp
jecxz
xchg
loopne
sub
mov
addl
xchg
mov
cmp
ret
mov
fdivrl
dec
push
sarl
xor
xchg
and
push
pushf
inc
inc
loope
cmp
cmp
cmp
dec
in
add
orb
nop
daa
sarb
adc
inc
and
or
cmp
push
jmp
push
add
pop
xchg
dec
mov
xchg
add
repnz
xor
add
mov
jmp
xor
pop
decl
jb
icebp
pop
shl
mov
in
mov
fcoms
fstp
mov
jnp
mov
lods
insl
or
xor
lret
mov
mov
mov
fwait
into
movsl
ss
adc
stos
mov
sti
int
jno
cmp
bt
pop
in
jl
mov
pop
or
adc
xchg
iret
push
insl
cmp
jp
and
and
jo
mov
test
lea
pop
in
xor
inc
movsb
xchg
adc
xor
repz
sub
shl
lock
adc
dec
push
test
mov
daa
xchg
adc
jl
sbb
pop
push
and
cli
int
cmp
call
or
ret
insl
mov
push
or
jmp
fs
in
repz
fcoml
jecxz
jb
std
adc
or
int3
sbb
sbb
ja
mov
aaa
xchg
cld
ss
cmpsb
or
xchg
pop
sbb
push
xchg
pusha
sti
xor
or
shll
push
out
inc
pop
push
cmp
mov
not
test
mov
in
mov
sti
ret
shr
push
xchg
dec
mov
cmovle
lods
xchg
stc
mov
out
and
stos
sbb
push
and
pop
rolb
loop
push
dec
dec
fnstsw
pop
adc
pop
jecxz
inc
inc
mov
aas
adc
out
pop
jmp
out
cmp
lods
sub
nopl
shll
add
pop
xor
sub
cltd
lds
sbb
test
enter
rcr
in
in
popa
data16
xor
lret
jl
add
cmp
mov
pop
ja
mov
arpl
jl
dec
cmp
cs
loop
mov
int
call
sbbb
je
ret
xchg
inc
sbb
imul
xchg
or
or
adc
stos
out
xchg
stos
cmp
xchg
push
cli
adc
pop
mov
rcrl
xor
jp
xchg
and
xor
add
jb
insl
sub
gs
pop
in
fwait
or
pop
mov
sub
inc
pusha
leave
adc
cmp
push
out
cmp
rcrl
xchg
je
push
aaa
cs
xor
sahf
inc
in
or
cmp
insb
ret
cmpsl
push
add
in
push
jge
leave
mov
jge
call
ficoms
add
or
out
jmp
cmp
pop
pop
push
and
sahf
out
dec
dec
push
inc
clc
mov
push
inc
xchg
aas
iret
push
daa
xchg
pop
hlt
and
push
push
xorl
cltd
fwait
mov
push
leave
stos
xchg
inc
stos
adc
dec
pop
cmp
cmp
mov
hlt
sbb
dec
cmp
not
les
out
jo
imul
push
popf
cs
mov
hlt
xchg
mov
mov
adc
movsl
jb
xchg
jo
fs
sbb
outsb
dec
cmpsl
push
sbb
xlat
pop
fldl2t
mov
mov
jecxz
addb
jnp
sbb
in
mov
pushf
inc
fwait
stos
mov
jle
dec
pop
sub
jns
jecxz
je
mov
sbb
int3
mov
les
repnz
insb
ret
fistpl
cmpl
insl
sub
insl
push
add
adc
cltd
ret
loope
enter
push
cs
into
fdivs
pop
ja
int3
and
fbld
cmpl
cwtl
push
leave
adc
bound
cld
sub
in
or
ljmp
daa
adc
andl
es
cmpsb
roll
shll
dec
xchg
iret
xchg
test
arpl
pop
test
sbbl
addr16
mov
xor
mov
mov
inc
push
mov
das
pop
cli
or
xchg
xor
jg
aam
cmp
adc
mov
and
cmp
js
pop
inc
mov
call
shlb
out
mov
jns
addb
aas
add
jno
pop
mov
cmp
sahf
add
inc
cmpsl
mov
xchg
in
mov
scas
pop
inc
pop
into
adc
push
in
push
jmp
pop
sub
add
loopne
push
pop
jne
push
jg
sbb
jns
mov
cli
fwait
push
add
push
out
fsts
add
mov
or
jle
jbe
sbb
mov
xchg
nop
push
mov
lods
inc
push
add
cmp
lret
das
push
out
push
pop
aaa
xchg
sub
mov
add
rcrl
inc
mov
xor
xor
pop
mov
sbb
push
das
xor
ret
arpl
out
in
ret
pop
daa
adc
shrb
mov
out
ja
popf
out
inc
dec
inc
cmp
scas
scas
stos
pop
insl
jnp
shl
repnz
xorl
adc
repz
dec
call
dec
rolb
dec
cmp
je
fiaddl
cmp
sbb
testl
adc
xor
and
fistl
stos
inc
ja
inc
jmp
sbb
xor
pop
repz
ja
lcall
rclb
mov
lock
je
icebp
fdivs
repnz
inc
fadds
sub
cmpsb
pop
or
jg
cld
mov
push
fwait
jge
mov
mov
cs
int
dec
dec
loop
mov
mov
dec
imul
xchg
adc
outsl
inc
mov
pushf
lea
es
xchg
lahf
mov
cmp
aam
repz
jns
push
repz
mov
sbb
outsb
push
mov
ret
hlt
xchg
repz
push
ja
ds
iret
dec
push
or
ss
pop
lea
shlb
mov
jae
mov
adc
and
lods
pop
cmp
jb
stc
test
fimull
cli
xchg
cmp
mov
scas
shlb
outsl
fsubrs
std
lahf
stc
testb
je
mov
ficoml
lock
insl
test
movsb
xchg
cmp
ret
je
adc
ret
cwtl
xor
movsb
mov
mov
nop
jae
test
stos
and
mov
pop
inc
push
pcmpeqb
cmc
cmp
or
lods
gs
sub
xchg
xchg
sahf
jno
mov
jmp
or
daa
push
xorl
jae
and
fs
jmp
sbbb
iret
and
int
ds
imull
insl
sbb
jp
test
stos
sbb
sbb
lds
xchg
je
adc
and
cmp
int3
cmp
dec
pop
iret
push
in
add
inc
pop
push
lret
pop
and
and
rclb
jmp
cmp
dec
inc
pop
testb
cld
gs
sub
inc
xor
cmc
fs
adc
adc
xor
aas
xor
data16
push
mov
clc
push
das
mov
clc
or
ds
pop
add
insl
test
jae
mov
pusha
push
mov
push
pextrw
adc
jl
test
and
inc
mov
out
fdivl
or
out
inc
xor
and
movb
sbb
lds
inc
ficoms
xchg
or
out
push
stos
inc
repz
jmp
mov
mov
mov
or
mov
or
jns
cmc
adc
ljmp
and
aas
cmp
jns
out
push
xchg
ret
shrl
movsb
lds
aam
loop
add
outsb
inc
aad
inc
add
cs
mov
stos
cmpsb
enter
fdivrs
js
xor
les
test
xchg
mov
and
fimull
nop
pop
aaa
into
dec
inc
imul
xchg
enter
mov
data16
fimull
push
push
pop
mov
ds
mov
sti
jnp
icebp
je
mov
lcall
inc
scas
scas
push
sub
add
ja
add
pop
fldl2t
dec
cmc
cwtl
test
mov
shr
push
pop
fs
out
jnp
int
and
mov
daa
mov
aam
mov
dec
jle
lods
xchg
in
outsb
ljmp
jne
or
ja
jle
add
add
ljmp
or
andl
test
adc
sbb
xor
or
fidivl
cmp
push
arpl
movsl
xchg
add
movsl
ss
sub
lods
inc
fadds
or
repnz
add
ss
out
xchg
inc
jnp
push
mov
push
push
lods
lea
xor
shrb
adc
mov
sahf
scas
in
fabs
cmp
notl
cmp
jne
push
shrl
mov
jle
add
mov
pop
pop
icebp
fmuls
sbb
in
movsb
dec
sahf
insl
sub
arpl
pop
dec
lret
outsl
adc
push
xor
je
mov
es
ds
loop
push
mov
int3
arpl
adc
out
insl
mov
add
pop
js
inc
pushf
push
ficompl
fmul
int3
imull
mov
dec
lods
mov
push
mov
adc
or
out
sahf
test
mov
fmuls
inc
shl
fbld
jecxz
xor
xchg
gs
loop
enter
xor
mov
test
icebp
shrl
xchg
lods
add
lock
add
jp
or
data16
or
pop
xchg
out
mov
or
sub
push
push
sub
xor
xchg
push
negb
movzwl
or
xchg
insb
mov
movsb
arpl
or
rolb
popf
add
out
inc
and
sbb
inc
push
inc
push
jo
mov
jns
das
push
push
sbb
int3
push
mov
ret
mov
cmpsb
nop
test
mov
je
mov
repnz
jp
mov
lret
ss
call
add
sbb
mov
and
sbb
sub
bound
jbe
ret
outsl
daa
mov
dec
enter
xlat
mov
or
adc
cmp
dec
push
adc
enter
jl
xor
aaa
inc
jp
jmp
test
loop
inc
push
repnz
stos
sub
lods
fcompl
cs
or
mov
fisubs
sahf
adc
xor
pop
xchg
lcall
inc
icebp
jmp
sub
adc
scas
into
push
add
mov
sahf
mov
jmp
adc
push
ja
decl
scas
data16
xchg
jge
inc
scas
or
loopne
xchg
cmovbe
shll
test
bound
sahf
add
into
loop
inc
push
lods
add
xor
ret
mov
mov
jmp
xchg
adc
mov
adc
mov
pop
lods
lock
mov
in
sarb
push
ljmp
cmp
inc
fstps
mov
xor
xor
push
sbb
frstor
push
xchg
sbb
bound
fnstenv
mov
cli
or
fcmovb
daa
adc
adc
test
sbb
jo
test
mov
dec
in
setne
xchg
inc
inc
cmp
dec
mov
sub
jo
inc
rcrl
lock
sti
cmp
std
cltd
notl
adc
shll
mov
outsl
sbb
jns
mov
in
in
lahf
jmp
and
loopne
bnd
roll
cltd
ret
lret
lock
pop
jb
jo
push
in
movsb
fisubl
and
out
add
mov
lock
nop
adc
mov
and
shrb
pop
xchg
or
sbb
mov
aaa
jbe
mov
inc
out
bound
mov
ljmp
insl
ja
pop
mov
cmp
sub
cmc
lahf
mov
es
and
rcrb
dec
push
mov
push
jae
fsubs
sbb
scas
rolb
jno
adc
fucomip
xchg
rorl
cmp
pop
inc
es
fistpl
repnz
loop
cmp
xor
nop
lock
dec
dec
out
icebp
mov
mov
mov
xchg
test
mov
xchg
xor
fwait
sub
adc
and
fs
xchg
inc
and
rcrb
and
in
in
xor
pop
arpl
sbb
arpl
dec
out
test
shl
loope
mov
fwait
loop
and
out
pop
inc
call
push
jl
add
pop
mov
ret
pop
fs
pushf
jne
test
add
sbb
mov
mov
inc
divl
shrb
and
push
push
rcrb
jo
sub
out
cmpsb
ret
cld
add
ja
or
push
bound
inc
outsb
bound
xchg
inc
icebp
sbb
repnz
mov
sub
cmc
or
push
dec
adc
lcall
sub
in
mov
into
mov
rolb
lret
push
mov
arpl
dec
jno
stos
xor
outsl
pop
loopne
pop
mov
push
enter
aam
jecxz
stc
rcrb
jecxz
inc
lcall
jae
stos
ljmp
and
hlt
aam
add
les
mov
cmp
xchg
xchg
sub
push
and
dec
jl
jg
test
out
mov
add
scas
mov
or
out
setle
ror
and
jae
and
inc
mov
cmc
imul
inc
xchg
push
mov
mov
sbb
mov
jae
addr16
jbe
fistpll
adc
sbb
test
in
clc
jp
out
cmp
xor
hlt
cmc
dec
loopne
shrb
insb
mov
sbb
mov
jg
cmpsb
mov
int3
jne
add
jo
pop
and
inc
loopne
mov
fstl
stos
daa
adc
jmp
dec
xor
dec
jno
aam
mov
or
sbb
lods
dec
arpl
andb
loop
lods
lret
dec
or
mov
adcl
imul
movsb
inc
cwtl
push
mov
lcall
fldcw
dec
pusha
jno
pop
xor
jb
xchg
jge
inc
mov
ds
cwtl
pop
cmp
jnp
jb
scas
ss
dec
movsl
sub
sub
cltd
fadds
mov
mov
mov
pop
flds
jnp
mov
addr16
aad
dec
andl
dec
pop
cld
push
stos
push
mov
xor
jbe
test
xchg
lahf
lods
mov
cmp
jecxz
insb
sub
mov
lods
add
es
mov
xchg
cld
sbb
push
dec
and
push
push
into
dec
fidivs
lar
xor
lcall
rcl
or
jb
sbb
jne
adc
sub
shrb
nop
icebp
xchg
lods
daa
pop
mov
dec
mov
pop
imul
dec
test
popa
es
adc
lock
push
inc
outsb
rorl
dec
fists
das
xchg
mov
jecxz
test
jae
push
mov
int3
push
and
jge
call
mov
clc
add
pop
ds
mov
outsb
sbb
push
cmp
xchg
jp
popa
xorl
adc
sbb
hlt
mov
neg
push
cmp
es
dec
ret
popf
inc
out
negb
pop
sub
sub
pop
inc
movsl
push
or
dec
cmp
daa
adc
jo
push
lock
jge
fldt
sub
outsb
adc
mov
jg
mov
and
imul
xchg
pop
push
push
inc
cmp
mov
fldt
into
cmp
push
dec
in
dec
out
addb
dec
pusha
pop
and
sub
inc
cmpsl
inc
push
jbe
movsb
mov
add
stc
jne
push
push
push
sti
cmp
lods
and
mov
subw
imul
dec
loope
sbb
xchg
mov
push
outsl
cmp
inc
scas
inc
stos
adc
int3
lret
int
shll
adc
cli
outsb
jl
mov
cmp
js
pop
pusha
mov
xor
lods
ljmp
es
decb
sahf
es
lds
sub
push
stc
jo
imul
xchg
inc
pop
addr16
scas
leave
loop
je
push
sub
dec
fcoml
sarb
std
loopne
rcrb
popf
mov
vdivsd
push
cmpb
xchg
mov
mov
add
iret
shll
dec
dec
andb
in
add
hlt
mov
xor
mov
ljmp
push
xchg
cmp
xlat
adc
or
jne
cmpsw
icebp
fcomip
adc
sub
je
push
lods
addl
sti
pop
test
or
mov
mov
out
inc
lahf
mov
or
push
push
test
add
lret
enter
out
push
pop
aam
loopne
shlb
inc
cmp
sub
xchg
ret
pop
xchg
mov
push
imul
jo
lods
push
jne
fnstcw
fldcw
xor
mov
insl
testb
or
cmp
fucomi
jno
or
ss
dec
pop
jge
mov
xor
fcmovnb
add
std
inc
iret
cmpb
mov
adc
fwait
lods
sub
cmpsb
ret
pusha
std
xlat
ljmp
imul
rolb
cmp
test
pop
push
cmp
sahf
xorb
fidivrs
sub
jae
lcall
subl
repz
test
ja
adc
adc
sbb
sub
pop
hlt
mov
sub
aam
jecxz
add
int3
ltr
rorb
inc
sahf
mov
js
arpl
mov
pop
jl
iret
lods
jg
dec
cs
jo
ds
aam
das
pop
add
push
ret
movsl
jo
mov
xchg
cmp
shl
sbb
pop
int
xlat
ja
jae
icebp
mov
sbb
insb
dec
in
lcall
or
xor
in
shll
push
scas
rolb
test
or
ss
adc
jbe
jbe
add
mov
and
inc
or
insl
push
or
xchg
xchg
out
dec
rcl
mov
jmp
mov
jge
xchg
mov
bnd
mov
shr
repnz
mov
mov
psubusb
xor
adc
insl
jb
out
in
cmp
out
push
test
xchg
sbb
jle
or
push
sub
jmp
gs
pop
fbstp
fisubrs
scas
inc
es
xchg
mov
xchg
push
es
aas
insl
jge
lods
ss
mov
movsb
mov
pushf
jge
into
dec
lcall
xchg
test
les
cli
dec
inc
icebp
cmp
dec
jnp
add
or
int
xchg
or
mov
cmpsl
es
int
pushf
ja
lret
pop
iret
sbb
cmp
data16
ss
out
push
cs
ret
insl
adc
xchg
mov
adc
bound
cmc
jo
daa
imull
mov
or
sbb
testb
mov
dec
mov
mull
push
insb
push
mov
xor
or
mov
push
aaa
jge,pt
in
pop
ljmp
loope
test
test
in
add
dec
dec
cmp
fnsave
xor
imul
sub
inc
pop
jge
inc
dec
movsl
xchg
pop
sub
dec
les
cmc
push
jp
fcomp
movsl
cmp
scas
jl
test
cmc
dec
xor
repnz
cmp
push
jmp
faddl
cmp
push
sbb
daa
xor
mov
mov
test
sbb
cmpsl
inc
and
sbb
roll
mov
jb
ja
call
stc
test
xchg
cmp
outsl
andl
add
push
mov
dec
jne
out
stos
addr16
clc
or
pop
imul
loope
jb
cmp
ficomps
adc
imul
or
mov
je
pop
in
sbb
inc
push
insl
jg
pop
jge
leave
pop
or
add
jp
dec
jecxz
jge
cmp
jnp
pusha
test
es
xlat
inc
loop
add
out
shr
loope
and
inc
inc
adc
rorb
cmp
jbe
lds
shll
int3
xchg
sub
aad
sbb
into
jno
jno
adc
lds
adc
je
iret
das
and
sbb
jno
daa
je
aam
cld
dec
sti
sub
mov
stos
push
lret
adc
sbb
repnz
movsb
sahf
adc
subb
push
and
in
push
hlt
xchg
popf
push
call
cmp
pop
cltd
push
popa
mov
adc
or
push
cmp
fnstcw
mov
and
lods
inc
and
shlb
pop
cmp
xchg
test
cmpsb
add
arpl
mov
jmp
mov
inc
in
fwait
and
es
pop
push
ja
push
notb
gs
push
mov
lods
add
fisubrs
cltd
lret
in
sbb
mov
mov
and
imul
jmp
fdiv
lret
xor
nop
aaa
mov
call
adcl
mov
jle,pt
lea
fucom
subb
ss
imul
shrb
lahf
cmc
mov
mov
sti
pop
dec
mov
jb
test
jo
popf
mov
push
and
fst
aas
add
jno
test
mov
movsl
clc
jp
pop
mov
addr16
data16
insl
sub
pop
shlb
and
adc
out
popf
mov
dec
lods
jo
test
mulb
mov
test
add
xor
nop
out
je
ss
jbe
out
and
xchg
popa
push
sub
mov
mov
jo
push
mov
mov
mov
push
ret
add
push
fwait
xchg
pop
inc
sub
xorl
jae
sbb
addr16
add
outsl
stos
pop
imull
sub
mov
les
ret
aad
popfw
fptan
or
pop
iret
jmp
jg
insl
and
pop
bound
pop
mov
fidivl
inc
addr16
scas
mov
mov
hlt
fnsave
jp
dec
stos
aam
mov
jbe
testb
mov
and
xchg
out
mov
mov
add
das
adc
sbb
movsb
or
es
mov
adc
enter
int3
mov
popf
push
out
dec
xchg
enter
pop
push
pop
dec
in
clc
xchg
add
xchg
test
aam
rorl
jo
ror
movl
xchg
scas
sbb
out
lods
sub
jp
stos
aas
cltd
clc
por
jnp
xchg
inc
inc
sbb
inc
ds
push
push
dec
xchg
sub
out
jbe
pop
adc
xor
aaa
fsubr
jg
pop
lret
push
xchg
dec
or
movsl
and
jmp
sbb
aam
icebp
test
cmpsb
fsubr
es
mov
lea
jg
cmpsl
push
gs
movsl
cmc
dec
in
aas
in
sbb
dec
sub
jge
fs
adc
push
mov
inc
fisttpl
xchg
loop
sahf
mov
mov
cltd
mov
cmp
sarb
mov
mov
pusha
and
push
cmp
stos
mov
pop
nop
sbb
rcrl
xchg
xchg
scas
enter
lods
push
and
cwtl
daa
mov
push
mov
fdiv
js
push
lods
or
dec
fdivr
jnp
xor
push
cmc
adc
ss
jb
push
add
movsb
out
sbb
mov
cmc
in
sub
lock
in
mov
add
cmpsb
call
fsubp
popf
xchg
or
inc
fsubr
jae
push
stos
push
aad
xor
jnp
mov
mov
in
dec
stos
lret
xchg
out
aad
ret
stc
shlb
or
dec
lcall
and
stos
add
jb
into
sub
dec
lea
popf
in
test
outsl
jnp
mov
cmpsb
rcrl
mov
mov
loope
rcrl
pop
rol
aad
fsubrs
dec
lret
cmp
xor
mov
in
aaa
insl
cmp
pusha
repnz
loop
ret
pop
pop
es
jecxz
adc
imul
add
xlat
outsb
xor
nop
daa
mov
out
xchg
jge
mov
mov
fs
pop
addr16
push
testl
mov
pop
mov
sbb
hlt
imul
push
sub
sbb
push
pop
xlat
xor
mov
mov
lds
stos
ret
dec
les
frstor
sbb
out
and
or
mov
mov
sbb
cmp
cwtl
mov
or
addr16
or
and
sub
pop
fcoms
test
push
dec
push
stos
jae
jns
add
outsb
xor
insb
push
std
arpl
jge
subl
fsubs
mulb
pop
in
add
xchg
pusha
nopl
rcll
test
add
sbbl
bound
pop
mov
sbb
pop
cmp
bound
dec
add
jb
fadd
adc
out
ret
pusha
ja
dec
insl
cmpb
stos
std
fwait
cs
push
lcall
pop
push
testl
mov
jns
fldcw
dec
pusha
mov
mov
jmp
or
cmp
xchg
dec
out
aas
fistl
xlat
inc
aad
lahf
xorl
mov
adc
mov
testb
aaa
push
fsubs
test
push
push
icebp
mov
pop
and
stc
push
jp
sub
ja
inc
pop
lods
addl
dec
pop
push
out
cmp
add
scas
push
push
mov
sub
outsl
pusha
stos
mov
sbb
fsubr
xchg
fsubrs
sbb
sbb
push
and
out
ljmpw
lds
test
sub
fnsave
dec
add
jae
pop
xchg
jb
shrb
or
ss
jnp
fsubr
and
fadd
inc
push
sbb
or
dec
andb
mov
jne
mov
mov
jno
lods
xchg
scas
dec
mov
and
mov
loop
inc
adc
push
hlt
push
or
lods
jbe
sub
adc
cmpsl
jno
aas
xchg
outsb
push
in
xor
add
push
push
mov
lods
test
xor
cmp
inc
push
lds
icebp
xchg
test
inc
sbb
xchg
adc
xchg
pop
loopne
mov
add
add
sbb
adc
pop
cmp
add
push
lcall
pop
test
sub
sarl
xlat
in
inc
ret
dec
mov
push
lret
popa
xchg
mov
jo
stos
and
popf
inc
fidivs
clc
mov
mov
sbb
sbb
loop
jecxz
fs
push
pop
pushf
in
lret
xchg
jns
dec
add
jmp
lock
mov
add
mov
sub
ret
jle
lea
mov
int
jbe
rcl
add
adc
jl
mov
insb
add
clc
push
sub
movsb
lods
dec
pop
sahf
mov
push
insl
out
push
insl
pushf
fbstp
pop
xchg
xchg
pop
mov
into
dec
dec
adc
pop
jmp
and
cmpsl
mov
push
adc
sub
lcall
ficompl
pop
mov
mov
mov
dec
pop
jne
push
fbld
test
mov
mov
jb
add
loope
pushf
sub
repz
jg
fsubr
ss
sbb
loopne
jmp
pop
outsb
mov
push
das
iret
cmp
dec
enter
gs
loope
mov
jl
or
jns
sahf
xor
push
in
sbb
pusha
lahf
mov
dec
mov
je
sub
cmpsl
xor
enter
lock
dec
ret
cwtl
xchg
popa
and
ds
std
push
mov
pop
sbb
ja
shrl
int3
sbb
gs
and
push
in
add
fs
mov
xchg
cmpsb
stc
and
inc
enter
ficomps
pop
mov
or
pop
sub
movb
outsl
orl
inc
xlat
popa
add
xor
push
rorb
popa
sbb
or
in
xchg
jns
icebp
or
xorb
or
dec
cli
mov
faddl
popf
add
xchg
mov
loope
lds
dec
mov
sbb
sub
jnp
mov
mov
aam
xchg
or
and
or
lret
mov
pop
xlat
in
or
inc
fdiv
and
fsubr
mov
fdivrs
arpl
xchg
sarl
repnz
or
pop
push
sub
and
mov
cmp
xchg
dec
xchg
mov
je
pop
lock
lods
js
ja
jns
mov
ret
xchg
xor
pop
xchg
sub
lret
fisttps
lahf
cmpsb
xor
inc
hlt
push
in
push
push
hlt
ljmp
dec
jnp
jae
outsb
push
repnz
jnp
add
dec
lret
bound
and
lret
push
ljmp
xchg
stos
or
mov
inc
rol
jmp
dec
push
ror
fnstsw
mov
gs
aad
push
in
mov
dec
lods
es
xchg
xchg
andl
inc
sub
dec
jle
and
outsl
push
std
sbb
insb
jae
jno
push
adc
cmpb
movsl
pop
push
cmpsb
inc
lock
call
into
cmp
dec
scas
das
pop
push
stos
mov
push
jg
repnz
pop
pop
cmp
rcll
xor
daa
rorl
pop
out
mov
nop
mov
popf
mov
pushf
jmp
lret
mov
add
shl
repz
push
insl
out
test
aas
out
stos
dec
lret
je
sub
sub
push
scas
movb
addr16
and
ja
fildll
das
clc
scas
movl
cwtl
cli
leave
in
mov
into
jns
ds
insb
fidivrl
insb
outsl
cmp
lock
daa
jns
push
stos
dec
pop
dec
or
sti
gs
lcall
mov
enter
jae
cmp
ljmp
icebp
aaa
mov
std
lock
ds
fisubrl
pop
idivb
testl
orps
rorb
outsb
lret
push
mov
mov
aam
jp
push
cmc
mov
lods
sub
push
xor
jp
jbe
lahf
mov
lods
jl
push
aas
mov
push
pushf
mov
clc
xchg
ja
fisttpll
xchg
inc
push
and
fs
in
mov
push
add
je
orl
jl
cmpsb
out
jns
shll
push
out
ret
push
insb
jecxz
in
xrelease
sub
rol
sbbb
ss
divl
xor
jbe
gs
dec
lcall
sbb
cmp
push
dec
pop
push
mov
inc
mov
sub
rcr
sub
imul
ror
lods
mov
ret
pop
sbb
test
jnp
fmuls
fiadds
mov
or
sub
fsubp
fsts
mov
notl
addr16
shlb
mov
xchg
popf
shl
push
mov
and
lock
and
add
jb
out
push
mull
lret
test
inc
and
lcall
xor
icebp
push
and
jmp
xchg
xchg
xor
inc
xor
add
pusha
sub
icebp
xchg
call
mov
lret
je
data16
stc
incl
sub
push
mov
mov
xchg
push
jo
jo
and
or
dec
dec
pop
mov
cmp
cmpsb
inc
mov
pop
icebp
adcl
loope
inc
icebp
mov
xchg
mov
daa
imul
jb
inc
mov
data16
adc
cmp
sbb
shlb
pop
cltd
fucomp
xchg
int
and
add
jno
jmp
pushf
dec
lcall
loop
ljmp
dec
js
int3
test
adc
test
inc
icebp
dec
mov
cmc
cmp
add
pop
outsb
and
push
push
xchg
or
test
xchg
dec
push
shlb
popa
shrb
push
jmp
cmp
sar
loop
daa
pop
ss
and
idivl
mov
clc
aad
divb
mov
sbb
pop
jo
xchg
adc
movsb
xor
xchg
add
out
mov
adc
sahf
scas
cmp
fistps
pushf
pop
mov
std
and
and
and
xlat
outsb
nop
cmp
xor
sub
jbe
scas
scas
fistl
repnz
icebp
lahf
or
sub
mov
shrb
outsl
mov
push
out
addl
pop
outsb
adc
sbb
mov
push
jmp
fwait
xchg
mov
leave
xchg
test
lcall
ljmp
cwtl
sub
xchg
dec
loop
inc
ret
iret
cmc
mov
adc
push
push
xlat
cmp
add
stc
xor
mov
push
in
and
scas
push
fucomp
cmp
push
call
inc
es
xchg
jae
xor
or
push
mov
outsl
add
cmc
js
add
pop
and
les
movsb
ja
int
sbb
imul
outsl
cmpsb
adc
mov
pop
orb
out
dec
out
jne
xor
cmp
scas
lock
nop
insl
mov
aaa
or
add
push
adc
pop
pusha
cmp
mov
lret
iret
pop
xor
shrb
cli
xchg
or
lock
and
adc
jns
nop
ljmp
mov
sbb
ds
mov
push
mov
push
add
icebp
cmpsl
push
cmp
adc
cltd
push
fistl
clc
push
pop
add
lahf
in
pop
jg
fildll
xchg
mov
ret
outsl
je
popf
xchg
dec
jbe
ja
cltd
xor
xchg
test
sti
outsb
out
stos
pop
xor
or
sbb
fsubs
add
inc
or
cmp
and
mov
rorb
paddusb
es
out
jp
adcl
hlt
mov
rcr
roll
and
in
xchg
mov
stc
xchg
adcb
jb
mov
cmp
xor
xchg
out
mov
inc
pop
sbb
inc
orb
sbb
cmpsb
jb
mov
pusha
push
mov
mov
movsb
fs
and
test
push
xlat
xchg
jmp
arpl
mov
mov
outsb
push
jae
sarb
and
test
nop
mov
popa
pop
or
pop
cmp
loopne
jle
inc
xlat
repz
and
mov
push
mov
aas
subb
aam
enter
ds
inc
int3
cmp
mov
jb
sbb
aas
or
dec
jno
sub
and
or
mov
cmpsb
jecxz
jns
lret
mov
ja
xchg
int
aaa
pop
mov
mov
ficomps
or
cmpl
xor
sbbl
dec
xchg
cld
mov
vpaddb
jecxz
stos
pop
dec
mov
sub
jle
jns
fwait
cmpsb
jno
int
mov
popa
xor
scas
sti
test
fld
adc
and
dec
and
nop
scas
pop
mov
les
popf
testb
bswap
pop
inc
out
stos
rcrl
fsubrs
je
daa
jecxz
in
pop
jnp
pop
mov
dec
popa
stc
cmp
add
aam
lahf
outsb
outsb
add
inc
les
outsl
mov
jmp
push
jmp
xorb
insl
repnz
mov
cltd
pop
movsb
mov
aam
dec
in
rcrl
sbb
insb
xor
xchg
add
mov
cwtl
cmp
inc
cltd
outsb
push
and
add
inc
stos
xchg
fcmovnb
cmp
rorl
xlat
mov
xchg
cmp
shl
mov
mov
stos
es
addr16
inc
mov
aad
pop
ret
stos
and
xlat
in
hlt
dec
push
mov
cmpsb
and
loope
gs
sahf
shll
stos
int3
call
ret
into
pop
push
adc
int3
pop
loopne
cmp
and
jge
leave
add
mov
pop
aaa
push
negb
loope
dec
push
jno
insb
rorl
xor
or
sub
xor
inc
popa
add
aaa
dec
cmp
aas
xlat
mov
rolb
imul
shlb
jns
stc
lods
scas
sbb
adc
adc
jns
xchg
dec
lcall
inc
and
or
or
movsb
mov
and
sbb
loop
jo
ss
mov
repz
push
push
cli
dec
in
jmp
imul
add
addr16
movsb
mov
mov
pop
mov
add
cmpps
imul
adc
dec
movsl
jae
jecxz
lock
lds
or
rolb
cld
loopne
out
lds
popf
jno
pop
dec
push
testl
int3
repz
into
test
popa
mov
sbb
dec
pop
loopne
addl
xchg
xor
push
mov
sbb
leave
mov
ret
xchg
js
cltd
push
adc
adc
pop
inc
or
adc
loop
cmp
in
pusha
mov
xchg
xor
decb
cmp
push
sub
int3
dec
fcoms
ficoml
or
stos
pushf
cli
dec
mov
inc
and
cmp
add
mov
cmp
dec
loop
jbe
jg
addl
lret
adc
ficomps
je
sbb
push
mov
hlt
addr16
cs
sbb
in
sub
pop
lret
cmpsl
test
sbb
mov
adc
mov
lahf
fnsetpm(287
aad
push
jmp
scas
out
xor
lahf
neg
hlt
pop
aad
jge
or
int3
popa
and
in
inc
mov
mov
xchg
fsub
pushf
cmc
xchg
hlt
fsubrs
mov
push
into
push
pop
out
push
cmc
mov
and
test
cmpsl
pop
push
add
and
dec
and
dec
sub
pushf
dec
and
mov
stos
aam
in
pop
xchg
mov
push
xor
lcall
loope,pt
mov
arpl
sahf
jne
xchg
cmp
sub
into
cmp
and
mov
test
repz
sub
or
dec
fs
inc
dec
jmp
les
in
jnp
mov
sub
andl
pop
int
loopne
les
cwtl
mov
lret
jl
inc
insb
cs
adc
fldcw
mul
enter
int3
insl
sbb
mov
or
xor
adc
rorl
mov
xorb
lcall
sbb
dec
pop
add
dec
sub
ja
repnz
adc
jnp
and
sbb
xchg
outsb
mov
dec
xor
in
ds
aaa
call
cmpsb
jle
outsl
insb
jl
adc
sub
add
arpl
cmc
dec
hlt
cmpsb
and
and
test
sbb
mov
cmpsl
outsl
mov
dec
jnp
ss
cs
and
push
push
add
dec
stos
mov
out
movd
ds
icebp
repz
bound
loopne
lods
call
stc
adcb
push
dec
sbb
ss
push
mov
inc
loop
movsb
xchg
sub
mov
mov
mov
outsl
lea
xchg
and
fwait
and
dec
jl
sub
lds
and
push
repz
pushf
jnp
dec
adc
jg
repz
lods
fcoms
lret
movsb
mov
fldenv
divb
movsl
push
push
push
add
mov
mov
fnstcw
pop
adc
cld
daa
clc
xchg
mov
inc
shr
or
dec
push
xor
mov
fisubl
inc
jle
decl
in
testl
push
push
pusha
push
nop
ret
imul
dec
loopne
pop
idivb
scas
dec
push
pop
sub
xlat
adc
jne
adc
cmp
aaa
or
stos
mov
mov
jbe
or
das
cmpsb
dec
clc
or
sub
aas
or
or
subl
leave
jne
lds
mov
aam
rcrb
jg
ja
in
add
test
pop
ret
leave
jne
jl
add
mov
mov
jl
jbe
aad
bound
adcb
sbb
jo
scas
insl
ret
push
mov
xchg
pop
insl
sbb
xor
adc
mov
or
insb
addl
clc
cmp
jnp
xchg
push
ss
pop
pop
scas
mov
xor
ficoms
add
outsb
inc
mov
inc
ret
sbb
and
mov
jb
repnz
xchg
add
sarb
inc
std
mov
nop
scas
or
cld
add
cmp
xchg
cmc
mov
pop
out
sbb
inc
sti
push
sub
inc
sar
inc
loop
pushf
fnstcw
cwtl
ror
int
xchg
jmp
dec
cmp
push
mov
lea
jp
dec
push
jbe
insb
movsl
inc
fcomps
movsl
mov
sbb
push
and
mov
jo
cmp
jno
xor
mov
jle
xchg
outsb
jae
packsswb
cmp
sub
fs
je
fs
jmp
cmp
xlat
scas
push
dec
loopne
jge
jno
cmpsl
jmp
pop
movsb
jl
sbb
lahf
ss
push
movsl
jg
sub
adc
or
jae
push
arpl
jge
insl
add
stos
jle
sbb
mov
loop
mov
test
lea
xchg
xchg
cs
adc
mov
movsb
cmp
sti
popf
xor
movups
xor
mov
lock
lods
xchg
repz
xchg
shl
fsubrs
sub
scas
inc
idivl
imulb
adc
daa
xchg
cmc
out
jecxz
fisubrs
lahf
ss
push
movsb
cmp
mov
add
fwait
xor
push
nop
daa
xchg
jno
xchg
inc
fildl
fildl
lret
cld
sbbl
mov
mov
outsb
and
std
xor
cltd
push
fnstsw
jne
insl
cmp
inc
mov
ret
adc
cmp
xor
add
popa
je
outsb
insb
or
inc
cmp
push
fxch
loop
cmp
int3
mov
mov
or
movsl
call
aaa
lahf
and
dec
clc
aaa
sbb
xor
ja
xor
repz
or
mov
push
lods
mov
fnsave
bound
mov
cmp
nop
mov
mov
adc
mov
outsl
pop
test
pusha
mov
mov
sub
mov
iret
lock
dec
subl
xchg
add
pop
outsb
test
stos
push
or
push
lods
in
pop
decl
setne
adc
out
mov
inc
jle
notb
stos
mov
fsubrs
adc
jb
repnz
jnp
call
push
dec
pop
mov
add
data16
ja
adcl
xor
imul
inc
pop
in
das
cmpsb
fidivrs
push
inc
mov
pop
pop
and
mov
add
stos
shrl
cmpl
and
xchg
into
xchg
in
sahf
outsl
std
sahf
and
jbe
inc
out
in
jne
fstpt
ficompl
jl
int
cmp
sub
icebp
push
outsl
mov
xor
mov
fucom
mov
sbb
lods
jae
addr16
mov
or
adc
repz
fwait
xchg
or
push
movsl
xchg
pop
pop
mov
mov
pop
std
pushf
xchg
adc
pop
sahf
xchg
push
push
out
nop
sbb
mov
jb
idivb
xlat
stos
jae
ret
inc
mov
sbb
repnz
rol
push
test
js
pop
mov
xlat
icebp
add
sub
out
cltd
shl
xchg
adc
daa
mov
push
inc
call
test
mov
fists
and
pop
stos
add
sbb
inc
gs
insl
scas
aaa
lcall
mov
dec
lea
pushf
mov
inc
xor
fisubl
ljmp
sti
xor
add
fisttpl
cmp
jo
mov
cmp
testb
stc
ss
addr16
fisubrl
xchg
fdiv
int3
inc
jle
in
push
adc
aas
psubd
xor
dec
pop
jb
nop
fcoms
push
xor
jo
jg
in
push
mov
outsb
and
add
out
xchg
aas
dec
hlt
jb
adc
in
pusha
and
dec
pop
shl
push
sub
loop
pop
clc
addr16
pop
xor
pusha
imul
in
pop
mov
dec
out
in
pop
cmp
cmp
scas
adcl
aas
mov
data16
sbb
addr16
cmp
cmp
push
push
stos
leave
addr16
cmpsb
mov
ret
and
mov
fimull
push
bound
pop
fstpt
sbb
cmpb
mov
add
cli
push
adc
or
out
cmp
pusha
inc
dec
inc
bound
lea
mov
push
ss
push
sub
add
push
inc
lods
mov
aad
inc
inc
fdivs
dec
pop
mov
xor
pop
ja
or
mov
test
sti
cmpsl
pop
inc
pop
cmc
jae
or
lea
cltd
sbb
das
test
and
sbb
sbb
jnp
and
pop
mov
inc
shr
xor
mov
mov
jmp
aaa
insb
mov
jo
pop
call
gs
xor
imul
jne
outsl
mov
adc
orb
inc
push
push
notb
test
inc
fmuls
push
nop
pop
das
mov
and
sbb
push
mov
or
cmp
clc
push
pop
scas
push
in
sub
stc
sti
xchg
insl
push
and
pop
sbb
rcll
cmp
addr16
push
mov
mov
ss
test
or
adc
imul
ljmp
add
sbb
sbb
addr16
stos
dec
xchg
push
loop
gs
sbb
pop
push
mov
jmp
aaa
mov
arpl
pop
pop
mov
pop
cmp
scas
mov
mov
into
lret
cmpsl
inc
push
push
xor
addr16
leave
add
mov
or
push
push
lock
jecxz
test
sbb
cmp
sub
inc
push
or
xor
decb
jl
nop
push
mov
mov
fucomp
ret
and
push
xor
inc
daa
or
into
enter
pusha
jb
inc
fstps
mov
bound
test
adc
or
outsb
mov
int3
sbb
jmp
andb
insl
jg
jo
sub
fdivl
and
repz
lcall
adc
in
lods
xchg
test
jmp
lret
sbb
mov
cmp
add
orb
mov
or
sbb
jnp
movsb
cmp
lcall
jnp
jae
xor
push
xor
test
lea
addr16
adc
cs
jno
push
stc
xchg
jp
jl
movsb
fs
push
fbstp
lods
sbb
push
stos
std
lcall
pop
sub
dec
pop
outsb
push
sahf
clc
push
mov
mov
lret
lret
mov
cmp
jo
and
pushf
or
stc
pop
adc
rcrl
mov
insb
lret
aas
push
dec
pop
cltd
subb
jae
dec
repnz
cmc
test
and
adc
lods
mov
push
test
mov
add
xor
inc
aam
add
mov
lea
movsb
insl
adc
sub
lods
mov
ljmp
inc
fidivrs
mov
push
inc
xlat
scas
sbbb
adc
inc
sbb
sub
jnp
and
mov
mov
and
nop
pop
aaa
pop
inc
out
sub
pop
mov
cltd
out
pushf
and
push
imul
fstpl
inc
mov
sub
mov
loop
xchg
scas
orb
inc
imul
ja
inc
aad
in
ljmp
sub
cwtl
das
rep
sbb
sahf
fwait
icebp
icebp
lahf
jb
adc
std
pop
leave
fldl
jns
int
mov
push
mov
sbb
in
dec
rolb
sahf
push
movsl
sahf
fs
push
sub
mov
lret
lahf
and
push
cmpsl
in
and
cmp
mov
nop
xor
leave
jecxz
movaps
pop
mov
daa
add
aas
mov
pop
jnp
aam
shrb
or
es
xorb
push
fldl
push
mov
pop
movsl
outsb
push
dec
icebp
add
aad
and
push
adc
sbb
xor
cli
ljmp
or
and
orb
and
lret
iret
outsb
pop
mov
pshufw
lods
jnp
pop
xchg
xchg
daa
or
ror
sub
and
clc
xor
test
push
adc
jnp
repz
je
mov
outsb
in
fs
dec
jb
jg
out
adc
mov
adc
xchg
aam
lods
mov
sub
lods
dec
aam
in
pop
dec
lds
insb
jb
stos
fwait
bound
mov
mov
subb
fucom
mov
xchg
inc
push
and
mov
and
pop
mov
mov
ss
cwtl
test
int
jecxz
test
mov
sub
adc
das
lods
cmp
es
adc
les
cli
xchg
test
dec
and
add
mov
nop
xchg
or
lahf
in
pop
and
rcrl
gs
clc
fldenv
pop
js
xchg
nop
mov
loope
popf
pop
pop
sbb
push
movsb
bnd
jecxz
push
sbb
mov
test
test
or
es
push
add
popa
outsb
add
mov
mov
push
push
jmp
add
push
rcrl
imul
out
cli
xchg
add
stc
pop
arpl
or
xor
stc
jmp
sub
mov
jg
cwtl
mov
sub
jp
cli
mov
adc
dec
daa
call
add
mov
test
push
mov
movsb
xlat
and
imul
in
jle
xchg
arpl
icebp
mov
pop
pop
push
push
sbb
dec
scas
mov
mov
xor
xchg
pop
cmc
test
and
pop
and
imul
push
movsl
jbe
icebp
or
orb
inc
pop
sbb
jecxz
and
ja
out
fidivl
add
xor
adc
lods
inc
pop
mov
push
test
loop
sar
or
cmc
std
xchg
daa
rcrb
sub
cmpl
push
data16
test
cld
push
lods
lea
popa
aad
mov
test
push
mov
ret
pop
into
pushf
add
fidivs
int3
mov
pop
clc
mov
pop
lock
pop
mov
add
sbb
and
sbb
dec
popa
mov
mov
pop
and
sbb
fwait
bound
mov
lods
adcb
jl
and
ss
cmp
adc
fisttps
add
ljmp
stos
fcoml
xchg
jnp
add
push
pushf
sbb
and
mov
sub
scas
xchg
sub
cmpsb
pop
lahf
out
inc
sub
cmp
mov
sbb
mov
cmpsb
dec
or
jge
bound
ret
cmp
or
cmp
pop
out
jnp
sub
ds
mov
shll
add
mov
out
fildll
fdiv
mov
push
mov
and
and
addr16
ds
push
and
movsb
push
std
adc
jecxz
xchg
cmpsl
nopl
dec
das
aaa
into
push
push
or
mov
dec
cmpsb
lods
stos
sub
jp
jecxz
push
sub
insl
push
in
jp
outsb
outsl
mov
push
movsb
jo
add
sub
gs
inc
push
fiaddl
call
imul
pop
dec
enter
inc
jmp
xchg
push
lahf
movsb
icebp
or
cmpl
aad
add
fs
test
das
stos
mov
mov
sbb
cmp
ja
arpl
les
das
inc
or
cli
sub
adc
sbb
mov
push
std
push
push
add
sti
jbe
sub
jns
push
cmp
enter
pusha
mov
ljmp
test
or
adc
push
into
push
ror
repz
xchg
lahf
repz
jmp
xchg
pop
dec
pop
mov
ror
mov
add
jl
xchg
sub
call
daa
push
adc
int
sbb
cmp
jge
ret
cmp
in
in
mov
inc
xor
or
loop
pop
fwait
dec
push
repz
sbb
lea
lock
shlb
xchg
sbb
mov
cwtl
xlat
mov
and
and
inc
mov
fs
xlat
jmp
shrl
in
insb
and
adc
inc
pop
ja
dec
sbb
jns
decl
es
cmp
mov
icebp
push
scas
and
or
mov
sbb
call
fldcw
fdivrl
xlat
je
sbb
mov
mov
pop
cmpsb
jp
mov
mov
into
xchg
push
lret
lret
cmp
push
inc
push
fistl
jmp
divl
sbb
xchg
cmp
mov
inc
inc
inc
push
in
fbld
sub
sub
loope
add
test
jbe
mov
shrl
loopne
jno
jns
sbb
mov
ret
outsb
jle
jle
int3
mov
hlt
movsl
test
mov
mov
lock
loope
jbe
ret
inc
dec
ds
pop
jecxz
add
and
loop
mov
lret
jne
cli
shrl
push
gs
imul
test
cli
mov
dec
cmpsl
sbb
jo
lods
mulb
push
insl
mull
push
mov
imull
sub
dec
xchg
jb
cmc
insb
dec
scas
repnz
call
sbb
int
mov
jl
mov
stos
jmp
sbb
lcall
leave
xor
pop
scas
mov
les
std
loop
out
adc
testb
out
stos
xlat
adc
pop
data16
and
arpl
adc
xor
push
fs
inc
mov
add
xchg
or
jae
inc
mov
inc
aas
ja
mov
inc
adc
add
mov
jecxz
cmpsl
lds
cmp
cmp
push
ljmp
orb
jo
rcll
cmp
sub
jo
popa
arpl
adc
push
or
add
in
notl
int
sbb
pop
inc
sub
stc
cmp
xchg
test
mov
jno,pn
adc
adc
mov
xor
add
or
sbb
test
andb
in
mov
sahf
xor
pushf
jns
push
stos
std
pop
jecxz
fbstp
mov
add
lahf
cli
jne
jl
push
sahf
pop
fnstcw
cli
dec
das
cmp
call
mov
lret
repnz
jg
aas
jno
adc
jp
dec
lret
mov
enter
popa
sarl
movsb
jnp
pop
adc
push
mov
fidivs
test
and
notb
cmp
in
scas
adc
xor
pushf
cwtl
in
cltd
test
mov
inc
or
int3
jg
shll
fsubs
cmc
lahf
xor
mov
fnstenv
push
push
cs
push
mov
movsl
divl
dec
and
jge
cmp
shlb
xchg
cmpsl
sbb
push
pop
testb
lret
js
int3
xchg
add
das
mov
ljmp
mov
and
and
cs
adc
loop
xchg
dec
pop
movsb
cmp
shlb
push
sbb
adc
jb
and
xor
mov
mov
in
mov
lret
cltd
lock
mov
ret
adc
jnp
push
xor
jg
ljmp
dec
ds
add
mov
jmp
out
loopne
movsl
jb
out
jl
and
cwtl
inc
stos
movsl
arpl
daa
lods
jae
in
iret
out
xchg
bound
scas
cmp
sub
fwait
mov
dec
lret
nop
popa
lods
fldlg2
pop
in
jae
pop
xor
xchg
add
iret
dec
pop
add
imul
das
fbstp
and
xor
sbb
popl
pop
cmp
cmp
dec
cmpb
nop
add
sbb
or
mov
shll
cmp
mov
movsl
movsb
scas
inc
push
xlat
ret
testl
jbe
addl
xchg
push
jl
int
jae
mov
int3
loopne
mov
test
imul
fisubrs
mov
ja
or
mov
cltd
mov
into
int3
filds
mov
lret
aad
inc
popa
in
mov
cmp
pop
testb
push
insb
cmp
jno
rclb
outsl
test
shrb
dec
cmpsb
mov
lcall
gs
mov
stos
fildl
icebp
xchg
lods
ljmp
fwait
lret
jge
mov
xor
fld1
arpl
test
push
movsb
imul
popa
out
sbb
data16
push
or
bnd
dec
outsl
repz
lcall
inc
clc
aad
lahf
lock
arpl
mov
push
xor
scas
daa
nop
push
inc
inc
xchg
subb
shll
lcall
scas
loopne
addr16
lret
in
leave
clc
aas
por
add
mov
sbb
imull
cltd
jo
lods
int
lods
or
sahf
dec
test
iret
xchg
sbb
ja
jp
fisubrl
mov
or
fdivrs
int
push
lret
jnp
test
push
xchg
push
inc
inc
mov
push
fnstenv
not
xchg
cmp
sbb
xchg
jno
adc
popa
cli
rcrb
js
mov
add
lock
mov
mov
inc
mov
inc
dec
dec
fdivl
add
mov
out
mov
jg
aam
insb
ds
add
fisttpl
lret
lea
fs
sub
inc
inc
je
leave
loopne
dec
arpl
jnp
lahf
lods
cmp
inc
clc
test
and
hlt
outsl
aad
adcl
adc
adcl
push
mov
addr16
aam
add
sbb
jp
cmp
fsub
add
cmpsb
lods
xchg
mov
sbb
repnz
ret
jge
cmc
push
scas
ret
mov
pushf
ret
in
cmpsl
aas
push
add
add
fdivl
lods
in
inc
frstor
rorl
or
mov
jecxz
mov
xchg
hlt
push
fiaddl
out
shrb
and
jae
mov
std
mov
ja
int3
dec
xor
rcrb
push
std
bnd
fs
enter
jl
int
lahf
ret
movsb
cld
jecxz
out
lahf
into
iret
data16
lock
bound
lds
jbe
popa
mov
xor
out
mov
push
and
andb
dec
inc
lods
jns
or
mov
inc
call
mov
sqrtps
add
movsb
out
cmpsl
mov
test
std
jle
das
repz
sub
fbstp
mov
loope
rorl
xchg
pushf
mov
mov
xchg
outsl
inc
aad
add
std
or
push
jae
sub
jle
test
push
addr16
icebp
icebp
mov
daa
jp
lock
xchg
outsb
jp
push
cmp
xchg
xchg
loop
dec
sub
jecxz
cmpsl
xor
add
mov
xor
mov
orl
adc
sub
push
push
fwait
push
inc
xchg
or
sub
mov
pop
pop
mov
jbe
inc
rcrl
jo
cs
test
lods
inc
inc
sbb
mov
arpl
sbb
scas
imul
push
push
adc
pop
popaw
jns
cwtl
movsl
inc
cltd
jge
push
outsl
test
cmpsb
jl
std
cmp
aad
popf
mov
adc
lahf
mov
mov
or
mov
or
in
push
xchg
add
or
mov
rclb
add
jnp
sti
and
pop
push
es
stc
pop
aaa
or
adc
pop
test
pop
pop
xor
mov
or
inc
fistpll
out
nop
push
inc
cli
scas
out
popfw
je
jns
sub
mov
test
or
flds
mov
pop
cmpsl
ds
push
and
push
cmp
lahf
movsb
arpl
test
aas
rorl
sti
cmp
ss
inc
out
lds
mov
push
mov
push
loope
mov
mov
jb
imul
addl
inc
cmp
mov
jge
pop
mov
aaa
into
fdivs
mov
push
pop
lret
lret
test
sbb
js
inc
sbb
adc
fs
aam
and
mov
push
jmp
or
and
xchg
jecxz
dec
out
jmp
push
mov
popa
fpatan
xchg
dec
push
push
addb
and
lea
xor
je
push
out
inc
fists
lret
and
lock
mov
addr16
ljmp
push
cmp
shrl
stos
mov
sub
push
inc
aaa
mov
sbb
adc
into
mov
movsl
sub
jbe
push
push
call
leave
lret
stos
in
jmp
testl
fwait
les
leave
push
push
movsl
icebp
ss
and
mov
pop
sub
cmp
cmp
std
icebp
and
add
scas
and
pop
sbb
jp
push
and
fsubl
push
das
xor
adc
mov
std
jmp
cmp
in
lock
adc
rcr
push
dec
aad
jecxz
imul
dec
cmpsl
or
enter
xor
rolb
and
mov
icebp
bound
lahf
ja
stc
popf
cmpsb
gs
inc
mov
test
inc
out
lret
pop
mov
pop
lods
jo
add
jle
repz
adc
ds
and
jcxz
sbb
cwtl
jg
cs
lret
and
jmp
into
cltd
rcr
outsl
fidivl
lea
mov
mov
ret
sbb
or
sbb
mov
push
xchg
sub
ds
fsubl
call
aas
xor
lock
and
in
outsl
cmp
pop
ljmp
push
fadds
fisttpl
inc
rcrl
xchg
iret
lret
cmp
cmp
aad
lret
dec
fcmove
sarb
or
ljmp
fnstcw
pop
mov
shll
jp
xchg
pop
xchg
sub
mov
bound
mov
push
cltd
pop
test
push
ret
js
call
dec
test
jb
sub
lahf
stos
xchg
jge
outsb
add
jno,pt
sub
push
sub
xchg
sti
inc
test
nop
mov
out
addb
cs
loop
push
sbb
in
or
sub
inc
adc
lret
and
aas
adc
and
inc
and
repnz
loopne
js
in
imul
sbb
nop
or
scas
nop
add
lret
nop
and
cmp
xchg
cld
mov
arpl
pushf
push
ror
cmp
stc
push
lret
inc
jnp
mov
lods
imul
adc
dec
jae
out
imul
imul
ljmp
xor
lahf
js
xchg
sbb
fldenv
rolb
xor
xchg
enter
cmp
jnp
xor
in
cwtl
ret
push
mov
jle
imul
dec
mov
add
in
test
jl
cmpsl
jno
jecxz
inc
fisubrl
jne
dec
cmpsl
cmpsl
add
or
out
orb
jne
jge
inc
inc
push
mov
jo
push
cs
pop
hlt
icebp
add
loop
sbb
lea
mov
fdivl
sbb
fsubr
sub
daa
xchg
test
xchg
lcall
call
mov
into
loop
mov
les
loop
cld
mov
pop
mov
dec
push
or
xor
fidivl
push
int
mov
xchg
jno
aas
push
mov
add
xor
pop
outsb
mov
and
cmpsl
jno
or
rcrl
cli
inc
pop
jnp
inc
test
ret
hlt
adc
mov
daa
cmc
call
in
cmpsl
sbb
outsb
push
incl
xor
lea
push
out
push
sti
pop
inc
mov
dec
lcall
xor
dec
in
aas
jbe
cmp
mov
inc
mov
mov
pop
mov
fmuls
and
or
rorb
pushf
negl
mov
cltd
xlat
inc
in
stos
in
psubw
shrl
insb
pusha
push
push
fdivl
lods
loop
xchg
adc
fdivs
push
sub
loopne
sub
cmpsb
daa
and
lods
pop
pop
ljmp
push
jecxz
jno
xor
pop
movsl
mov
pop
mov
inc
lds
mov
shr
xor
adc
sbb
push
pusha
cmp
jge
pushf
mov
push
jb
dec
movsb
aas
add
lcall
inc
mov
cli
jne
ds
repz
aaa
fmul
pop
movsl
int3
cmc
lcall
rclb
fcoms
sub
into
lods
xor
loopne
rcll
dec
cs
jae
mov
int
outsl
sahf
cs
movsl
pop
mov
aam
sbb
jno
imul
std
int3
loop
lret
pop
aam
in
jae
leave
pop
into
iret
mov
mov
lock
int3
or
in
mov
mov
jns
cmp
imul
ret
lcall
jne
das
dec
dec
test
mov
std
pop
in
std
jne
nop
xor
cmpsb
xsha256
cmpsb
xlat
cmp
lea
jecxz
and
imul
jp
xchg
and
sbb
mov
pop
cmpsl
orl
jp
lcall
pop
cli
stc
jecxz
sahf
xlat
xchg
jnp
sbb
sub
imul
aad
xor
pop
xor
sbb
mov
insb
cmp
jo
mov
int
sub
outsb
shrb
ja
sbb
xor
sub
pushf
adc
jmp
popf
xchg
jo
cli
jp
lock
jge
das
out
mov
cmc
clc
and
cmp
scas
jb
adc
add
in
push
inc
sub
and
or
xchg
pop
jmp
dec
mov
sub
or
addr16
cltd
pop
cs
xchg
adc
dec
out
adc
pusha
in
push
sub
pop
jecxz
mov
mov
ss
je
xchg
push
push
mov
and
mov
inc
cltd
mov
jecxz
xlat
cmc
xchg
insl
or
arpl
push
push
hlt
lret
add
push
decb
dec
xor
xchg
leave
aam
and
cmp
leave
pusha
ljmp
scas
fxam
push
repnz
fsubs
xchg
cli
mov
mov
shrb
xchg
jb
addr16
pcmpeqw
ffree
pop
inc
in
shlb
xchg
push
mov
mov
cmp
leave
jl
outsl
pop
mov
lcall
dec
loopne
pop
pop
scas
les
lods
mov
jg
pop
jae
mov
and
xor
cltd
xor
push
dec
sbb
in
rcll
mov
add
xchg
sub
out
adc
popa
add
xor
lret
out
add
xor
test
add
jmp
or
daa
enter
push
pushf
popa
xchg
sahf
jecxz
jo
and
inc
and
dec
mov
cli
sub
test
movsb
cmp
sub
cmp
outsl
scas
pop
imulb
dec
sbb
push
xchg
add
fnstenv
pop
ljmp
aam
pop
push
jp
out
mov
outsl
adc
pop
cmp
aad
mov
jge
stc
mov
jno
push
fstps
js
out
jecxz
mov
jl
pop
sub
out
mov
cmp
mov
fisubl
ret
insb
inc
jp
cmpsl
incb
xor
idivb
mov
ror
or
lcall
aas
push
pushf
mov
sub
call
jge
add
xchg
call
movsl
call
push
cltd
pop
mov
in
idivl
outsl
inc
pop
ret
xchg
and
rclb
mov
pop
fsubs
pop
pop
jp
inc
inc
push
pop
pop
cmp
rorb
mov
stos
pop
xor
subl
aam
jp
xchg
add
std
jle
xor
lss
lret
shll
adc
mov
or
popa
add
xor
js
inc
movzbl
pop
push
sbb
sahf
fdivp
xchg
mov
push
roll
mov
mov
push
mov
inc
jecxz
mov
call
pop
pop
xchg
sarl
in
hlt
pop
mov
arpl
scas
push
mov
rol
push
loope
es
cmpsb
movsb
sbbb
adc
test
xchg
negl
out
add
or
add
xchg
mov
arpl
sbb
sahf
or
xchg
inc
mov
cmp
dec
fistpll
and
lcall
sbb
push
psadbw
mov
mov
ljmp
fisttps
mov
ljmp
jecxz
fs
testb
sarl
outsb
pop
jnp
push
repz
insb
dec
and
xchg
ljmp
jg
lcall
pop
mov
lret
mov
and
adc
cs
sub
leave
adc
mov
adc
xor
mov
sbb
outsl
ret
fcoml
call
jae,pn
mov
in
push
in
out
std
xchg
mov
adc
pusha
jns
jb
mov
pushf
xor
std
inc
fidivrl
mov
lahf
or
mov
sub
and
mov
fs
cwtl
das
adc
or
fstps
xor
dec
mov
ret
xchg
cmp
dec
cld
jmp
sub
ret
hlt
mov
out
mov
or
mov
dec
pop
icebp
xchg
scas
cmp
cmp
icebp
pop
ret
push
push
sti
jp
sbb
mov
xlat
int3
fwait
push
xchg
mov
sahf
lret
mov
pop
rcpps
mov
mov
test
jnp
lahf
jae
cld
std
pop
xlat
fmul
ljmp
mov
int3
dec
test
cmc
nop
fnstsw
stos
xor
jmp
adc
lea
sbb
in
pushf
mov
lret
dec
fists
ret
mov
repnz
jnp
rcr
sub
push
xorl
or
jo
jnp
imul
inc
jnp
cmp
adc
aas
scas
inc
gs
fwait
push
lret
mov
aam
mov
sub
mov
jp
pop
xlat
sti
cmp
clc
loopne
in
push
int3
out
jmp
movsl
or
cs
lea
jno
jae
insb
addr16
sbb
ljmp
lcall
cwtl
out
jl
or
dec
mov
jbe
mov
mov
repz
mov
inc
sub
pop
push
jecxz
jno
mov
clc
jnp
dec
pop
jo
gs
sub
popf
jne
jns
xchg
lret
add
popa
mov
test
adc
int
xchg
mulb
mov
adc
dec
insb
add
out
popf
xchg
pop
mov
mov
fnsave
mov
aas
mov
pop
adc
mov
addr16
bound
mov
sbb
out
xchg
mov
int3
test
loopne
push
adc
js
jns
fiaddl
mov
mov
xor
jo
pop
rol
sub
test
push
aaa
fidivl
or
xor
stc
xor
in
scas
ret
mov
ljmp
xor
cmpsl
out
jns
xchg
stos
or
cmpsl
dec
dec
xchg
test
dec
cmc
lock
call
push
movsl
sti
xchg
je
ret
inc
mov
pop
or
xor
push
sub
xor
jne
add
push
sti
or
mov
push
in
xchg
shlb
mov
sahf
stc
jae
mov
pop
or
sbb
mov
fnsave
sbb
lea
or
imul
mov
icebp
xor
and
lods
cli
repnz
xchg
sbb
inc
loop
mov
push
mov
xchg
and
mov
dec
es
dec
aad
mov
int3
dec
aaa
into
add
sbb
push
push
and
stc
or
push
cmpsb
les
push
cs
inc
mov
dec
mov
xor
in
shl
sti
out
push
out
mov
push
bound
sbbb
cmpl
popa
sbb
imul
loop
fwait
add
xor
xor
div
dec
scas
push
call
arpl
lcall
bound
mov
mov
push
stos
stc
ds
movsl
aas
adc
cmpsl
jmp
aad
or
nop
test
xor
or
lea
adc
sar
and
scas
bnd
lods
iret
mov
mov
add
sub
sub
outsb
mov
mov
mov
lret
clc
test
lds
repz
fsubs
lock
push
push
imul
xchg
adc
mov
xor
pop
out
mov
lahf
push
sbb
adc
popa
imull
aaa
outsb
jl
cmp
cltd
cmp
stos
inc
in
fdiv
sbb
push
leave
push
jnp
cltd
xor
lock
cwtl
mov
lea
mov
sub
fndisi(8087
xsha256
cmpsb
adc
pop
clc
fisttpl
cs
andb
mov
aam
xchg
icebp
mov
int
add
in
inc
or
pusha
xor
lret
jp
sbb
insb
push
cmp
sub
push
in
xor
psrad
add
add
jns
out
popa
pop
adc
fsubrs
mov
dec
test
in
or
data16
daa
adc
push
aam
loop
adc
mov
rorb
addb
xor
adc
pop
es
es
arpl
mov
sub
ljmp
pop
into
popf
push
mov
adc
shlb
cmp
jecxz
orb
add
mov
xchg
adc
loopne
test
in
inc
or
cmp
mov
movl
or
cltd
std
push
ljmp
inc
dec
setne
xor
mov
dec
pop
pop
xlat
adc
jo
sahf
lods
add
stc
and
mov
pushf
adcl
mov
shrl
mov
pop
adc
push
xor
les
mov
mov
mov
jns
test
cmpsl
mov
and
mov
cld
dec
sahf
fdivrs
or
mov
mov
in
jg
adc
cmp
dec
in
inc
push
outsl
sbb
push
mov
ja
xor
fsubr
and
out
cmpsl
inc
ds
and
fdivl
add
lods
pop
sub
test
sti
stos
pop
push
aas
jbe
shll
das
rorb
or
nop
mov
sub
pop
movb
loopne
pop
mov
mov
in
and
add
enter
nop
adc
dec
inc
mov
xor
xchg
sub
scas
jmp
icebp
cmp
xlat
dec
cmp
cmp
movsb
fs
cmc
inc
test
repnz
sub
jnp
jl
divb
lea
inc
stc
or
cld
or
mov
testl
mov
jg
xchg
mov
add
insl
int3
mov
cmpsb
xchg
cvtps2pd
into
pop
ljmp
insb
sbb
fs
push
push
ljmp
jno
fmull
push
mov
fisubrl
loope
or
fnstenv
outsl
xchg
jmp
sbb
jg
adcb
pop
test
cli
es
sbb
mov
dec
mov
std
out
test
fistpll
or
sahf
xchg
adc
adc
rcrb
lret
mov
insb
icebp
mov
in
rcl
sub
xchg
sub
arpl
jl
sub
gs
or
scas
jp
movsb
pop
and
arpl
lds
inc
sub
pop
mov
pushl
shl
jmp
cmp
mov
push
xor
xor
shlb
repz
xor
jmp
ljmp
lcall
xchg
mov
jno
and
lock
add
pusha
push
or
fldt
in
in
xchg
mov
repnz
pop
jne
sbb
mov
pushf
mov
add
adcl
xchg
add
xor
pop
jo
mov
popf
xlat
mov
loopne
mov
test
outsb
jae
jnp
xchg
sub
lock
xchg
push
push
adc
fstpl
dec
mov
cld
xchg
sahf
inc
out
ja
sbb
out
iret
xor
add
sub
mov
mov
xlat
dec
pop
pop
cltd
out
and
mov
push
nop
into
pushf
sbb
inc
notb
leave
adc
mov
and
test
lea
add
inc
lods
lret
fdivs
out
inc
xchg
mov
into
xor
cmp
mull
sahf
daa
stos
sbb
cmp
popa
pop
repz
adc
dec
jbe
push
push
pushf
cmp
mov
movsb
mov
mov
ljmp
xchg
mov
rolb
cmpsl
push
out
fsub
sti
rolb
cltd
and
inc
mov
mov
pushf
jp
into
inc
outsb
daa
cmc
jp
mov
mov
insb
dec
jl
fcmovu
adc
add
bound
leave
int
stc
xor
mov
or
pop
cmc
cli
ja
test
lds
xor
fmul
pusha
push
adc
pop
in
cmpsb
out
fmuls
in
unpckhps
mov
xchg
mov
cs
xchg
inc
stos
push
or
fcompl
es
push
and
dec
loop
in
adc
jae
or
imul
mov
mov
pop
cmp
lods
out
mov
dec
gs
clc
or
sbb
enter
jno
imul
mov
lret
bound
cmp
cmpl
scas
xor
xchg
movsb
mov
loopne
inc
negb
mov
inc
in
leave
cmp
in
jne
mov
repz
push
push
mov
mov
lret
inc
push
mov
stos
push
into
stos
aad
lea
gs
pop
ret
dec
adc
popl
rep
out
push
ss
in
aad
pop
lock
lea
or
sub
sub
cmp
dec
outsb
inc
popf
jns
iret
popa
xorl
lret
sub
pop
les
push
data16
mov
in
inc
dec
in
or
hlt
repnz
ret
sbb
xor
pop
scas
mov
enter
lea
repz
bound
in
in
xor
in
pop
pop
cmp
xchg
mov
xor
sub
ljmp
sub
notb
leave
inc
xlat
cli
mov
mov
and
les
lret
adc
cld
or
mov
or
mov
scas
add
fsubs
movsb
lcall
cmp
dec
jecxz
adc
loop
xor
ja
je
and
inc
xchg
sub
ds
pop
sub
add
and
out
or
clc
sbb
aas
push
stc
outsl
ljmp
sub
xlat
jnp
and
mov
push
add
or
mov
jae
stc
cmpsb
in
mov
pushf
movsb
loop
dec
les
lahf
mull
mov
xchg
movsl
stos
xor
mov
fldt
pop
mov
or
std
fsts
cwtl
fcmovb
hlt
sbb
sti
pop
add
sahf
movsb
add
push
jno
cmp
fisttpl
in
pushf
aam
adc
cltd
dec
xor
inc
dec
out
das
xchg
rcll
adc
dec
loope
xchg
add
mov
push
and
fildll
icebp
xlat
gs
add
jne
mov
into
push
lret
pusha
xchg
fs
mov
dec
pop
std
lods
cmpsw
test
pop
loop
jnp
add
cmp
nop
jge
inc
gs
sbb
rol
imul
push
mov
dec
outsb
add
cwtl
push
cs
push
mov
int
lea
lahf
pop
xor
adc
call
cld
orl
ret
jnp
lcall
movsl
pop
not
je
mov
cli
scas
inc
xor
jbe
adc
jne
gs
push
inc
mov
cmpsl
jg
fbld
push
popf
in
push
incb
xor
pop
fxch
inc
cwtl
aas
jmp
pop
shl
inc
push
or
dec
loop
sbb
arpl
insl
and
insl
fisubrl
in
orps
lea
pop
mov
pop
lahf
jg
shrl
popf
xor
stos
hlt
or
inc
xchg
js,pn
adc
cli
pop
sub
add
dec
arpl
repnz
or
add
xor
cmp
out
loope
addr16
fwait
test
out
sahf
scas
stc
or
psubsw
jo
dec
in
xchg
sarb
loop
imull
enter
xor
shll
scas
rorb
fdivrl
or
les
xor
dec
push
test
call
ljmp
je
sub
xchg
xchg
stc
add
cs
cmc
mov
lcall
loopne
rclb
inc
jmp
inc
sbb
add
jae
into
ficompl
or
hlt
cmp
iret
mov
push
lds
add
aad
fldenv
loop
xorb
aas
cli
adc
lods
add
sahf
pop
repnz
les
jp
push
icebp
mov
lods
pop
jmp
bound
mov
stos
add
decb
addr16
and
sbb
pop
push
jnp
xchg
imul
xor
or
jmp
push
jno
rcl
push
cmp
daa
inc
mov
cmpsb
mov
and
adcl
or
pop
icebp
add
stc
sub
sbb
gs
sbbl
mov
out
sbb
pcmpeqd
pop
lods
sbb
lea
scas
js
sahf
fsubr
lahf
aad
mov
push
mov
testb
mov
fsubs
xor
and
jmp
jae
sub
mov
addr16
sahf
lea
jno
jl
push
adc
movsb
aad
pusha
iret
jbe
pop
fmul
pop
popa
andb
ret
push
cmp
insb
jge
ret
cmp
addl
add
jp
aaa
hlt
sti
cmp
mov
ja
adc
fwait
adc
imulb
jno
daa
jg
cltd
imul
adc
in
inc
jecxz
enter
lret
nop
aaa
negl
jo
imul
lods
mov
subb
js
and
mov
je
dec
aam
repz
mov
arpl
xlat
int
sbb
aad
int
pop
enter
adc
dec
jg
rcrb
arpl
push
pop
jmp
aaa
addr16
inc
mov
mov
inc
mov
sub
shlb
loope
and
or
fstpl
and
fsts
push
mov
jg
data16
lret
jb
loopne
mov
ret
fmuls
les
cmpsl
add
loope
pop
xor
or
mov
xor
push
push
mov
and
cmp
popf
inc
mov
fwait
xchg
add
pop
orl
das
ret
lods
jmp
and
dec
movsb
ret
sti
or
xlat
mov
xor
test
arpl
lcall
pop
stos
movsl
cmc
mov
mov
jnp
inc
sbb
xchg
push
fiaddl
test
pop
dec
inc
cmc
cmpsl
std
push
andl
mov
popf
push
cmp
out
call
outsl
push
movsl
aaa
adc
test
repz
or
fwait
fs
inc
pop
xchg
in
ss
shrl
dec
pop
push
in
sbb
into
fists
inc
icebp
pushf
jnp
bound
jb
dec
loop
adc
or
les
xchg
ds
mov
imul
cmp
icebp
jmp
inc
flds
icebp
ds
inc
add
ja
push
or
loopne
adc
xchg
add
arpl
cmpsl
bnd
sbb
push
je
stos
ret
pop
repnz
aad
jp
mov
mov
push
js
push
and
cld
orb
std
xchg
xchg
cmp
cmp
sahf
lods
jp
push
add
mov
cmp
sti
xchg
push
push
push
loopne
sbb
popa
mov
push
cmp
xor
leave
test
loopne
or
mov
mov
push
popf
xchg
adc
dec
mov
vmovaps
or
aam
dec
sbb
repnz
loope
out
push
xor
cmp
or
pop
mov
mov
pop
mov
xchg
fidivrl
or
fcmovu
mov
xchg
adc
xchg
sub
mov
xchg
fisubrl
movsl
in
fnstcw
clc
sarl
insl
jle
add
dec
add
mov
jg
or
cmpsb
adc
mov
add
add
inc
rorb
and
mov
or
push
sarl
add
mov
leave
int
sub
iret
icebp
addr16
sub
hlt
mov
push
sub
inc
ret
push
lcall
in
mov
sbb
insl
xchg
nop
and
clc
jecxz
mov
xor
jbe
aad
hlt
push
stc
push
or
xor
pop
sbb
push
jbe
jp
test
icebp
mov
fbld
inc
aas
fmuls
adc
enter
push
decb
xchg
pop
xor
fimuls
and
lea
xchg
aas
clc
inc
movsl
pop
out
mov
fldenv
outsl
aaa
out
fwait
push
push
sub
loope
dec
out
mov
in
fsubrs
ds
mov
mov
jmp
xor
sahf
mov
rol
in
xchg
lock
cmp
push
push
and
xor
and
mov
popa
repnz
sub
or
test
jnp
push
sbb
jmp
movsb
xlat
add
cmpsl
mov
es
cld
andl
aaa
mov
in
test
in
jmp
insl
roll
jne
insb
iret
xchg
cmp
dec
or
imulb
mov
sub
and
decl
cmp
xchg
pop
ds
xor
loope
sub
test
call
nop
xor
sbb
sbb
lock
mov
testl
push
push
imul
in
jg
inc
divl
adc
cmpsb
sbb
call
add
rolb
lret
int
sub
pop
mov
rclb
in
pop
stos
xor
ret
aas
push
mov
mov
fsubp
mov
sbb
andl
stos
inc
movb
andb
sub
mov
dec
push
aad
popf
std
adc
cltd
mov
mov
pop
pushf
pop
and
cmp
ljmp
push
jne
hlt
jns
mov
adcb
adc
jbe
inc
stos
xadd
jge
fsubr
jnp
in
js
inc
xchg
insl
decb
add
inc
out
xchg
push
int3
dec
mov
insb
movsl
fisttpll
jle
fwait
lods
lahf
nop
sub
clc
cs
xor
movsl
arpl
sbb
adc
gs
mov
jb
sub
mov
call
mov
xor
pop
fnstenv
and
out
lods
push
xchg
inc
lahf
push
mov
test
ds
push
push
jae
jne
lahf
ss
or
mov
test
les
imul
call
and
mov
jnp
in
and
cmpsb
pop
dec
ljmp
fs
xchg
sub
mov
jns
xor
sbb
push
and
shlb
fisubrl
loopne
sbb
lret
sub
mov
inc
mov
or
mov
bound
popf
scas
inc
bound
les
negb
test
in
inc
and
cmpsl
add
xchg
nop
cwtl
cmp
jecxz
push
dec
jmp
pop
fnstsw
les
ret
dec
dec
cmc
cmp
sub
and
ljmp
push
sbb
add
das
imul
push
sbb
push
fnstsw
loopne
cmp
fcmovnb
sbb
test
jecxz
xor
das
test
xor
xchg
sbb
cmpsl
ret
inc
arpl
mov
test
add
dec
or
call
push
pop
imul
ja
xchg
mov
sbb
out
push
adc
jae
or
adc
dec
mov
inc
lret
xlat
cwtl
int3
jo
rcrl
mov
js
nop
fwait
lods
inc
or
ljmp
and
gs
lret
nop
outsl
mov
lcallw
mov
ljmp
out
push
into
pop
cmp
in
cmpsb
js
mov
add
inc
mov
adc
aam
push
mov
aas
dec
adc
inc
test
dec
mov
pop
aas
cltd
shll
filds
arpl
fists
jecxz
mov
test
push
inc
jg
jno
cld
adc
out
cld
mov
mov
pop
push
lahf
les
jmp
jg
fwait
cmpsl
scas
dec
sbbb
dec
in
jnp
cmpsb
mov
loop
pusha
mov
fisttpl
loope
idiv
or
jb
hlt
mov
jg
add
jbe
sbb
mov
enter
ficomps
lret
inc
int
or
int
cwtl
mov
push
push
mov
iret
sub
inc
lret
decl
adc
in
and
sub
sbb
adc
lock
dec
ficompl
sbb
test
test
pop
sub
push
mov
mov
pusha
jecxz
shrl
push
nop
add
mov
subl
std
sbb
inc
pop
imul
mov
or
push
fstps
cs
push
lcall
pusha
sub
mov
bound
push
mov
xlat
leave
cmp
push
push
enter
mov
xlat
jbe
mov
lret
shrb
push
mov
cmpsl
push
mov
jo
lahf
test
adc
mov
repnz
or
pop
call
into
sbb
add
pop
add
arpl
jo
test
stos
push
inc
mov
mov
and
jae
out
pop
mov
popa
fwait
addr16
aad
jns
repnz
insl
fcmove
mov
push
cmp
sbb
cmpsb
mulb
and
js
or
js
sub
call
jle
xor
dec
cmc
xchg
imulb
mov
push
dec
sub
push
sbb
in
and
inc
rcll
and
fisubrl
or
inc
xchg
pop
scas
cmp
inc
jae
adc
into
lcall
scas
sub
cltd
xor
push
stos
jns
ret
pop
stc
mov
or
sbb
mov
out
mov
in
push
int
push
pop
mov
xchg
or
cmpb
movsl
mov
rcrb
fwait
push
hlt
mov
fidivrl
rcr
push
jge
sti
dec
adc
xchg
sub
and
cmp
adc
ja
test
cmpsl
xlat
push
sbb
insb
pop
cs
pop
xlat
sub
fistpll
arpl
xor
and
push
in
call
mov
or
cmpsb
mov
mov
mov
adc
and
cs
ret
push
clc
adc
enter
mov
xchg
aam
enter
stc
lods
outsb
call
or
sahf
lods
std
push
cltd
bnd
icebp
adc
lahf
jge
movsl
popa
test
adc
iret
adc
adc
out
mov
push
xlat
jno
mov
bound
fs
imul
repz
jne
addr16
sbb
or
sbb
inc
pop
icebp
pop
push
lods
cli
push
add
ret
test
lret
out
mov
sub
mov
test
push
mov
add
jp
cmp
lcall
sub
mov
fsubl
or
orb
repnz
mov
lds
dec
fdivrl
push
pop
lret
jno
jge
jb
cmp
daa
jb
xor
or
and
aad
rol
or
stos
ret
dec
lcall
fldlg2
stos
mov
mov
movsb
loope
and
adc
mov
mov
push
js
loope
fbstp
cld
xchg
fnsave
push
mov
mov
psubsb
pop
daa
mov
pop
adc
dec
mov
dec
and
stos
lret
mov
cmc
dec
add
es
stc
jnp
stos
mov
test
imul
sub
mov
out
ljmp
push
je
vdivpd
jp
aad
sub
xor
push
cmp
imul
dec
adc
popa
mov
jecxz
sub
cmp
outsb
shll
mov
or
push
jp
movsl
lds
loope
es
or
xchg
test
bound
mov
rclb
rcrb
pusha
mov
inc
jo
movsl
test
jnp
ja
jge
test
xor
movsb
das
daa
hlt
mov
ljmp
jb
int
push
inc
adc
mov
and
fcompl
outsb
scas
cmpl
sbb
inc
pop
dec
ja
dec
dec
lret
push
fimull
nop
dec
sti
jle
mov
jmp
xchg
inc
or
mov
outsl
sbb
mov
sbb
popa
rdpmc
scas
je
pop
jb
inc
and
sbb
lea
jp
lret
sti
inc
pop
addb
or
mov
push
mov
pop
and
repnz
dec
adc
push
pusha
stc
es
mov
insb
jno
mov
into
xorl
jg
stos
push
cmc
pop
mov
mov
adc
cmp
add
sti
ljmp
outsb
inc
push
call
ljmp
stos
inc
or
push
dec
mov
lret
fisttps
cmp
adc
dec
mov
lea
outsl
push
repz
inc
lods
inc
fdivrs
int
test
and
adc
xchg
test
into
call
dec
rcrb
icebp
out
test
cltd
rorl
orb
gs
mov
xchg
scas
decl
xor
cmc
xchg
jge
test
xchg
fcomps
rolb
dec
pop
out
jne
pop
push
pushf
scas
jbe
add
inc
push
jmp
sbb
outsl
pop
out
or
inc
popa
inc
outsl
cmp
test
push
loopne
and
lcall
outsl
push
sub
test
pusha
mov
push
mov
mov
lret
or
lea
cmp
cli
pop
and
xchg
popf
adc
sub
enter
pop
push
xchg
jp
lock
xchg
addr16
mov
call
popf
inc
test
sub
adc
mov
hlt
emms
add
and
push
mov
mov
cltd
inc
cli
out
or
pop
mov
repnz
pop
sbb
sbb
inc
inc
or
sbbl
arpl
stos
je
mov
repnz
stos
testl
mulb
movsl
lds
mov
mov
rcrl
mov
lds
jecxz
jnp
scas
int
andl
leave
fld
and
push
add
pop
mov
mov
sarb
jp
cltd
cltd
jge
xchg
stos
js
push
test
adc
mov
mov
add
lcall
in
stos
cwtl
cmpsl
mov
pop
push
jge
sbb
and
sub
and
shl
sbb
mov
and
or
shlb
dec
pop
sub
cmp
add
lods
gs
scas
xchg
lcall
aad
ja
mov
ds
mov
fidivl
movsl
cli
mov
push
jge
fsubl
xor
pushf
pop
nop
xchg
xor
cmp
or
mov
mov
shl
pop
mov
push
addr16
pop
inc
sub
fdivrl
inc
and
mov
pop
push
cwtl
int3
ss
sahf
xor
and
sti
xor
dec
pusha
fdivrl
mov
inc
repz
insl
push
outsl
xchg
inc
fildl
pusha
cmp
mov
xchg
adc
mov
and
fwait
cmp
shll
outsl
jmp
aaa
jl
daa
jbe
icebp
or
pop
pusha
jmp
xor
mov
enter
test
fadd
dec
das
mov
add
cli
scas
xchg
or
stos
mov
sub
push
mov
push
cmp
ss
dec
loope
adcl
add
cmpsb
or
test
dec
ds
out
vpshufd
mov
mov
roll
repnz
gs
adc
ss
jne
lahf
mov
insb
pop
lock
das
and
pop
lds
sub
and
test
clc
jno
xor
adc
dec
and
cltd
cwtl
or
out
push
hlt
out
cld
ret
mov
nop
push
ds
dec
arpl
orb
and
mov
inc
xlat
ja
insb
jno
jp
jg
cmp
push
sbb
xor
dec
bound
ss
jo
push
pusha
scas
mov
es
jl
inc
fs
pop
out
lods
push
sub
lcall
xor
out
jns
and
xchg
dec
xchg
jne
mov
clc
dec
pop
fsubr
xor
xchg
dec
test
addr16
adc
sbb
popf
xor
cmp
stc
push
xchg
push
call
and
fisttpl
cmp
add
jbe
sbb
jo
incb
sbb
fsubl
xchg
jmp
test
bound
leave
fistps
repnz
mov
xorl
add
and
andl
jl
rcl
out
std
pushf
cmpsb
or
adc
out
pop
mov
cmp
mov
imul
pop
mov
sbb
int
leave
push
or
int3
push
mov
mov
out
mov
mov
mov
call
dec
dec
xchg
jmp
adcl
scas
pop
fcomps
or
add
xor
xor
xchg
lgs
cmp
and
inc
cmp
xchg
mov
and
int3
adc
adc
lea
test
or
cmp
clc
or
fistl
cld
xor
fsubs
or
jge
mov
push
xor
cs
xchg
std
dec
xchg
xchg
stos
mov
sub
enter
mov
sarl
imul
cmc
sbb
push
test
inc
mov
lods
fsts
loop
out
in
lret
addr16
cmp
ret
dec
les
add
jno
push
or
mov
mov
pop
rclb
cmc
sub
lds
adc
data16
sub
cmc
sarl
xchg
clc
mov
fcoml
shll
mov
and
jle
xor
outsb
mov
dec
std
inc
dec
push
outsb
adc
in
rorb
rcrb
imul
mov
jae
sub
mov
push
add
dec
imul
jae
popf
loope
ljmp
dec
shll
push
mov
jno
or
mov
xor
bound
xchg
testl
push
std
add
out
aam
cld
rcl
mov
stos
sti
jb
jle
jb
aad
lret
and
adc
fldt
mov
jmp
inc
rcr
mov
aaa
jne
ss
add
in
scas
pushf
jb
or
cmp
movsl
cmp
insl
lods
xchg
decl
les
and
and
jns
inc
pop
pop
mov
ret
mov
sbbb
sub
xor
jge
fcmovb
rolb
popa
pop
stos
mov
stos
sbb
aam
jecxz
mov
imul
loopne
cmp
jbe
shll
and
out
out
ret
mov
and
icebp
jnp
loopne
push
adc
fisubrl
mov
lods
inc
in
test
test
adc
xor
subb
push
aas
js
mov
jp
push
lock
movsl
fs
and
in
out
mov
or
leave
popf
sbb
popf
cmp
sub
cmp
pop
arpl
cltd
mov
outsb
stc
and
movsl
hlt
adc
movsb
dec
les
mov
fisttps
jns
mov
jno
ss
inc
stc
inc
ljmp
loope
dec
mov
test
inc
popa
aam
leave
lret
lcall
pop
or
mov
sti
mov
sbb
inc
push
inc
ficomps
xchg
mov
test
mov
cmp
sbb
and
in
jge
inc
mov
inc
mov
inc
stos
lds
cmpsl
push
loopne
sahf
and
loop
cmpsb
cmp
and
nop
xchg
add
mull
lahf
jno
jae
mov
subb
es
fdivrl
mov
arpl
mov
fbstp
mov
xchg
in
mov
add
jmp
push
rep
sbb
inc
lods
ljmp
ds
out
repz
mov
adc
int
push
add
adc
cmc
test
jbe
stos
xchg
stos
add
xchg
and
fsubrs
push
push
mov
pop
bound
gs
loope
hlt
xchg
dec
adc
sub
mov
adc
push
test
out
mov
jnp
add
sbb
lcall
xchg
jbe
cwtl
pusha
sub
push
rolb
jae
sub
out
rcr
pushl
and
mov
das
sbb
dec
ret
pop
sub
sahf
cmpsl
aas
shl
xor
es
inc
std
or
cltd
je
push
xchg
sbb
dec
std
stos
adc
mov
dec
add
inc
push
xor
inc
lods
mov
inc
inc
loop
dec
lcall
xchg
push
or
pushf
lea
je
inc
pop
call
ljmp
movsb
mov
pop
sbb
andb
pop
mov
inc
add
ret
roll
push
lods
xchg
push
mov
mov
dec
aam
clc
fisubs
cmp
fsubrs
push
inc
scas
sbb
or
mov
push
add
fiadds
mov
add
test
dec
add
movsb
or
pushaw
icebp
and
push
and
mov
xor
fsts
adc
lret
xchg
add
inc
pop
adc
xchg
daa
adcl
jg
lret
xchg
xor
fs
xchg
mov
push
inc
negl
ljmp
push
hlt
aad
xor
mov
add
es
jno
inc
push
fcos
xor
test
adc
mov
aaa
stc
mov
lds
sbb
and
pop
filds
jle
pusha
lock
ljmp
adc
and
mov
fcoml
gs
xchg
inc
loope
add
scas
mov
dec
inc
fsubs
mov
mov
push
nop
push
fiaddl
mov
loopne
ljmp
fdivl
xchg
sbb
mov
jg
adc
hlt
inc
jns
push
scas
daa
xchg
ljmp
cmp
in
add
lret
inc
sahf
stos
adcb
fadd
adc
shl
fistpll
lock
dec
mov
push
sub
rcrl
popl
dec
inc
movsb
icebp
sbb
test
pushf
inc
push
xchg
xchg
adc
lcall
call
jp
lahf
testl
or
rcrl
les
data16
sbb
mov
cwtl
jae
dec
lods
add
ljmp
pop
mov
dec
dec
popa
subl
fstp
in
enter
and
out
sti
imul
push
jge
push
inc
jno
fsubs
pop
jno
sub
lea
push
cmc
popa
xor
xchg
roll
mov
sbbl
dec
sub
sarl
mov
sub
pop
sub
gs
add
mov
stos
sti
nop
jg
jl
dec
lcall
cmc
sbb
sbb
and
pop
dec
jp
repnz
iret
data16
repnz
jmp
pop
movsl
into
sub
mov
aas
jmp
in
inc
fs
xchg
orb
push
add
testl
icebp
or
sub
stos
xchg
into
aam
or
jb
aas
int3
sub
mov
dec
cmp
rcll
push
add
sub
dec
movsl
lds
sbb
jp
movsb
jmp
fadd
cmp
enter
xchg
and
mov
in
lret
hlt
mov
push
insb
enter
fnstenv
stos
mov
rcrb
mov
xchg
adcl
jo
cs
jp
int3
insb
inc
pop
mov
mov
shrl
cwtl
inc
cmp
out
sahf
cmp
aad
dec
mov
pop
clc
and
inc
dec
shr
mov
xchg
add
mov
inc
inc
or
ljmp
pop
insl
push
push
insl
inc
add
sbbb
cmp
mov
ret
cmp
adc
rol
mov
mov
inc
ret
loop
sbb
inc
dec
sub
gs
push
xchg
pop
repz
stos
aas
mov
stos
sbb
cmp
cmp
jecxz
pushf
cmp
fwait
mov
shrb
shll
out
mov
or
xor
inc
inc
dec
and
xor
dec
lcall
in
mov
mov
fxch
ds
popl
aam
sub
ret
jbe
lcall
xor
pop
mov
mov
cmc
out
popf
imul
stc
cmp
xor
rcll
int
dec
js
xlat
jge
mov
or
cmp
push
addr16
jecxz
ret
inc
cltd
and
test
icebp
sbb
outsb
je
jnp
sbb
insl
xor
pop
inc
dec
xchg
sub
addr16
cmp
jo
cmp
lss
and
sub
movl
adc
cs
sub
pop
push
xchg
test
pop
dec
pushf
add
aas
xchg
imul
in
sub
call
lret
js
sbb
and
adc
sbb
fnsave
jle
xor
je
aaa
popa
or
aad
cmp
add
lods
nop
or
mov
insl
xor
mov
cwtl
or
cmp
out
cmp
and
rorl
repz
push
lods
jp
shrl
lcall
aas
fildl
popa
or
xor
dec
dec
stos
mov
cmp
jnp
mov
and
inc
shl
inc
add
push
cmpsb
rol
inc
lea
jbe
out
out
ret
idivb
mov
inc
popa
lea
or
sub
rcrb
xchg
sub
dec
insl
adc
mov
fwait
cmpsl
nop
test
imul
notb
push
mov
nop
jo
lds
je
in
jp
cmp
mov
lds
sub
ret
jge
cmpsl
and
push
jo
jle
jbe
mov
int3
jg
ret
out
lret
cmp
jle
pop
adc
mov
into
addl
fs
lods
push
sub
je
mov
in
decl
stos
fst
pop
mov
dec
loope
xchg
mull
inc
jbe
hlt
add
add
xchg
dec
jl
enter
cmp
mov
cmp
lret
lahf
das
mov
jb
lcall
je
mov
imulb
mov
in
test
jmp
cli
sbb
xor
imul
and
into
repnz
rcll
and
pop
ja
xchg
pushf
aam
pop
mov
dec
mov
gs
aad
mov
cmp
add
je
mov
mov
xchg
sbb
leave
ss
xchg
push
push
push
or
and
aam
or
inc
cld
stos
mov
pop
scas
cmp
sbb
push
cmp
push
jno
jge
add
sub
in
out
pushf
push
adc
adc
xlat
dec
mov
xchg
add
jge
add
jle
xchg
out
inc
out
fcompl
jl
clc
ds
push
jbe
push
mov
mov
bound
idivb
imul
add
scas
mov
mov
test
int
les
sub
push
xlat
inc
and
xchg
pop
cmp
jns
sub
lcall
pop
mov
jmp
and
fsubr
lds
ficomps
mov
out
aad
pushf
cmp
add
mov
cmp
add
sbb
cmc
cmp
in
call
inc
xor
sar
aaa
loopne
inc
and
ret
xor
mov
cli
test
lods
jmp
mov
roll
outsl
inc
lods
adc
repz
dec
imul
mov
test
and
inc
pusha
add
cmp
fldenv
fwait
pushf
arpl
ja
adc
ss
rol
movsb
jl
dec
es
aad
js
jp
test
and
imul
sbbb
das
mov
add
jmp
ljmp
cmpsb
fbld
add
aad
sub
pop
je
or
sbb
sbb
sbb
push
lods
int3
add
js
push
adc
hlt
andl
es
or
test
outsl
sbb
out
inc
pop
xor
fucomi
scas
adc
fsts
adc
xchg
mov
adc
std
in
ficoms
mov
mov
inc
repz
jecxz
fwait
sti
mov
push
scas
ret
repz
push
insb
push
xchg
mov
and
cld
inc
insl
adc
loop
outsl
lea
ret
push
out
cli
xchg
jge
lds
inc
stos
filds
sbb
lea
popf
pop
lods
sub
dec
stos
outsl
sahf
test
scas
cmp
mov
in
push
jne
test
repnz
into
cmp
insl
sbb
push
stc
mov
out
int3
and
out
mov
int3
xor
sar
push
push
inc
adc
scas
jns
xor
sub
adc
adc
pop
pop
cmp
data16
shlb
cmp
push
loopne
out
mov
fs
jp
cmp
sarl
mov
cmc
mov
xchg
repz
mov
rorl
jne
cli
outsl
out
mov
imul
mov
jo
loopne
push
jbe
ss
inc
mov
mov
or
pop
dec
es
cld
xchg
fcoms
jmp
sbb
cmp
fnsave
mov
add
pop
and
sti
cmp
sub
es
push
aad
jb
dec
neg
sub
cmp
movsb
outsb
sbb
jmp
mov
adc
xchg
loopne
jno
dec
push
lods
xlat
push
mov
sub
aas
popf
mov
and
aaa
add
es
adc
cmp
lods
jp
jge
clc
cmp
pop
inc
pop
sarl
and
popa
push
inc
pop
mov
or
in
adc
or
fsubrl
and
out
aas
xchg
add
sub
gs
sub
pop
jp
leave
jecxz
movsl
es
jnp
dec
mov
movsl
xor
out
ss
add
sahf
and
daa
push
push
mov
int3
loopne
popf
sub
jmp
xor
fisttpl
xlat
cld
xlat
jmp
nop
bound
aad
mov
sbb
fmulp
cmp
mov
and
push
inc
sbbb
push
mov
jo
out
fwait
sti
loope
mov
les
jge
pop
xchg
insl
test
cmp
sub
bound
sbb
ret
jbe
test
sarb
stos
jl
movsb
jecxz
arpl
mov
cmp
mov
stos
add
je
icebp
lods
adc
jmp
jno
test
jbe
loop
popf
lcall
das
rorl
dec
js
popf
xor
lcall
sti
bound
shll
cwtl
or
pop
pop
es
jno
ljmp
mov
add
inc
xchg
je
xchg
movsl
push
sahf
es
out
sahf
mov
out
sbb
outsb
add
and
test
jmp
popf
smsw
jb
outsb
cmp
lret
loope
or
add
cmp
mov
sub
fisttps
mov
jne
inc
cli
jns
adc
or
add
fcoml
pop
xchg
fmuls
icebp
xchg
dec
repz
gs
xchg
push
dec
lods
jb
inc
mov
sbb
dec
incb
iret
push
jle
pushf
das
fmull
add
sub
push
aad
cmp
xchg
mov
push
xor
fwait
lcall
and
dec
add
cmc
cli
cltd
loope
xlat
sbb
lods
push
inc
rol
sbb
rcrl
outsb
mov
add
bound
xor
pop
xor
lcall
dec
ret
lods
mov
or
pop
cld
outsl
into
je
shll
sbb
leave
popa
xchg
adc
mov
cmpsl
outsl
repz
cmpl
fwait
sarl
je
mov
add
adc
call
shll
loope
cmp
imul
fldenv
pop
cltd
xor
dec
addr16
scas
mov
rcr
add
xor
fsubs
pop
pop
pop
sub
repz
and
xor
push
ja
pop
pop
push
leave
xor
inc
push
out
push
gs
or
mov
test
xchg
pop
jg
int
sub
fwait
or
repz
add
add
fnstsw
leave
adc
shrl
cwtl
fsubrs
pushf
fmulp
dec
pop
cmp
mov
sbb
setb
cmp
out
and
mov
stos
in
aaa
stc
rclb
out
scas
inc
cld
push
lea
mov
stc
jp
xor
xor
popf
lds
jmp
cmp
dec
cmc
mov
mov
push
xor
subb
lcall
cmp
push
ljmp
mov
jl
icebp
jecxz
popf
aam
into
scas
push
inc
jecxz
ret
aam
mov
cwtl
mov
xor
cmpsb
cmp
enter
cmpsb
in
mov
mov
insl
inc
push
mov
shrb
dec
loope
mov
jno
pop
or
out
xor
std
iret
mov
adc
dec
cwtl
icebp
cmpsl
push
scas
out
dec
or
ja
sub
mov
sbb
aad
fpatan
data16
or
mov
sub
fwait
mov
adc
push
jge
adc
push
in
cmp
addr16
xor
mov
push
sti
and
or
lods
xor
fidivs
sahf
or
call
mov
rcll
shll
pop
sbb
stos
ret
push
xchg
ja
push
jmp
test
mov
iret
enter
sbb
add
fmul
fists
popf
mov
or
scas
notb
mov
pop
sti
int
lods
jl
test
sbb
imul
push
sbbl
fwait
das
psrlw
fidivrl
dec
sub
xchg
lods
inc
mov
mov
sbb
mov
rcll
sahf
fbstp
scas
loop
inc
jmp
or
jl
rcl
inc
fwait
imull
jmp
test
mov
push
out
xor
insb
cld
xor
jmp
repz
jb
lods
mov
xchg
xor
sbb
push
mov
std
mov
lds
shlb
jno
fisubrl
enter
cmc
mov
adc
repnz
jns
push
icebp
popf
fildll
pushf
clc
xchg
push
ja
fbstp
add
mov
pop
sbb
mov
les
xchg
xchg
sub
pop
mov
imul
bound
xchg
jle
xlat
push
lcall
sub
xchg
and
mov
decb
and
cwtl
out
jno
lret
mov
push
call
das
popf
bound
dec
lahf
inc
inc
add
jne
jecxz
pop
leave
push
js
or
pop
sub
jge
into
mov
jne
sbb
xchg
dec
xor
pop
je
bound
cmpsl
push
or
jne
loope
pop
sbb
xor
mov
add
icebp
orl
negl
adcl
pop
fnstsw
sub
push
nop
dec
xchg
addb
loop
mov
fs
sbb
xor
aaa
jb
adc
dec
cmp
pop
xchg
push
sub
cmp
gs
sbb
mov
and
inc
xor
fistps
mov
ss
test
je
pop
out
or
in
push
lret
pop
xor
ja
mov
ds
fwait
lretw
insb
add
leave
sbb
xor
mov
cmpsl
and
cmp
cmp
push
cmp
subb
sub
mov
shrl
pop
cmc
pop
imul
push
out
add
aas
jb
gs
or
inc
dec
testl
adc
pop
movsl
arpl
js
pop
jns
pop
lret
fs
adc
dec
mov
jl
pop
and
out
lock
add
push
test
cmc
sub
shll
pushf
sub
jmp
movsb
adc
jecxz
test
xchg
negb
leave
iret
out
xor
movl
or
push
test
xchg
cld
int3
in
movsb
push
cli
test
mov
adc
mov
push
dec
sbbl
push
or
das
loope
popf
jo
add
repz
mov
jo
cmp
xor
xorl
ds
out
sbbb
aam
pop
mov
in
into
or
lret
out
mov
jp
adc
mov
aad
jp
pushf
aas
pop
mov
xchg
sbb
addb
xor
pushf
insb
pop
fbld
es
sti
das
ljmp
xor
mov
dec
jbe
cmpsl
out
mov
mov
shrb
and
pop
andl
push
test
pop
jge
pop
mov
out
cli
pusha
mov
aad
mov
dec
pop
mov
ficoml
lcall
clc
push
aad
sub
pop
cmpsl
adc
test
mov
sbb
lods
outsl
push
add
mov
bound
dec
int
xchg
or
cli
mov
movsl
mov
sub
movsl
or
outsb
cmpsl
inc
imul
and
int
rol
insl
jge
sub
loop
sbb
adc
jmp
and
pop
lds
xlat
arpl
push
mov
cmpl
cmc
mov
rcll
faddl
dec
sti
sar
repnz
test
dec
adc
sahf
sahf
inc
jmp
cmp
out
clc
je
mov
adc
xor
mov
and
pop
or
stos
pop
fpatan
dec
or
xchg
push
mov
xlat
cmp
daa
pusha
popf
pop
test
lret
icebp
mov
cmpsl
jl
mov
es
jl
fnstenv
fbstp
dec
test
sub
loopne
es
call
mov
mov
fstpt
shll
add
std
xchg
mov
repnz
adc
daa
cld
outsb
sub
xchg
push
mov
xchg
pop
cmc
out
cmpsb
les
gs
jb
mov
sub
arpl
mov
and
cmp
test
lea
cmpsb
les
inc
rorb
xchg
adc
ret
outsl
int3
xchg
ret
dec
lods
xor
int3
pop
lea
jmp
jns
in
xchg
inc
cs
mov
pop
lahf
xor
in
scas
mov
sbb
jns
add
jge
into
scas
cmc
fwait
pop
addr16
xchg
imul
jle
xlat
cld
lahf
inc
fcmovnbe
push
subl
adc
lret
or
inc
xchg
jae
xor
add
xor
in
jl
aad
inc
mov
stos
mov
pop
call
mov
inc
mov
shl
jmp
ret
hlt
out
jle
inc
loopne
cld
dec
aam
sbbb
push
out
fdiv
fbstp
popa
decb
add
into
data16
out
or
or
and
push
cs
inc
pop
xor
imul
inc
sub
jbe
sub
fidivl
jno
in
sbb
add
fdivr
and
xor
dec
push
cwtl
jb
pop
cmc
ja
popf
mov
jl
or
fldl
out
dec
fistps
sub
leave
cmp
stos
mov
sub
and
dec
scas
sbb
outsl
xor
jae
insb
cwtl
cmpsl
ds
insb
cmp
pop
fidivs
and
mov
loopne
ljmp
xchg
dec
mov
insl
pop
mov
ret
cmpsl
js
add
aad
repnz
lcall
in
jnp
mov
test
fsubrl
jno
test
sub
ret
adc
jns
mov
arpl
fdivs
mov
inc
icebp
push
dec
fstl
adc
mov
sub
scas
push
inc
sub
mov
jle
mov
xor
rorl
adc
mov
aas
mov
dec
and
aaa
or
in
psubw
call
test
fnstenv
xor
xchg
push
test
fwait
sahf
int3
inc
daa
mov
cmp
pop
movsl
aaa
jb
xchg
push
pop
insl
decb
dec
roll
int3
pop
cmc
ja
or
push
xor
fwait
add
dec
pop
stc
cmc
mov
mov
pop
imulb
sbb
ret
jnp
mov
fistpl
cmpsb
mov
fildl
mov
xor
movsl
push
out
lcall
in
les
cmc
sarb
sub
rorl
adc
fstpl
outsb
pop
dec
pop
stos
sbb
sub
pop
pop
mov
pushf
cwtl
jns
divl
shr
adc
push
fsubl
rcr
xchg
andl
inc
outsl
sub
jge
pop
mov
xor
repnz
std
add
add
repz
inc
test
lret
leave
rcll
int
movsl
gs
inc
mov
out
jle
xchg
imul
dec
sbb
sarb
pop
xchg
imul
sbb
cmp
adc
test
icebp
or
dec
dec
inc
pop
mov
es
nop
or
or
cmp
mov
sbb
sbb
cmpsb
xchg
aad
push
ds
repnz
xchg
xlat
add
loop
xchg
push
lcall
cwtl
sbb
rcr
nop
mov
stos
lods
lret
inc
lods
hlt
test
test
lret
mov
inc
daa
negl
inc
xor
mov
xor
adc
call
adc
out
insl
mov
aam
insl
add
xor
fmul
cmp
shlb
and
xor
cwtl
push
jge
jmp
mov
fs
fnstcw
or
xor
jo
test
mov
sbb
mov
clc
pop
mov
imull
or
iret
jo
jbe
mov
jnp
xchg
pop
adc
add
pop
pusha
jge
pushf
in
pop
mov
lods
pop
and
mov
mov
js
lahf
imull
scas
inc
insl
sub
push
lahf
adc
pop
lock
dec
cmp
pusha
ja
fiadds
ss
xchg
and
and
cmp
mov
mov
mov
cmpsl
mov
popf
stos
cmp
pop
or
push
int
leave
idivb
dec
pop
push
xchg
push
xlat
push
imul
or
inc
out
loope
movl
adc
push
fwait
mov
sbb
mov
fistpll
dec
push
add
addb
add
sub
rcl
stos
test
add
test
add
es
and
sbb
sarb
jnp
loop
mov
mov
aaa
cmp
bound
inc
jo
iret
push
aam
loop
iret
adc
pop
imul
sbb
push
test
push
sub
dec
dec
arpl
lods
lds
dec
dec
negb
sbb
cs
push
popf
int3
xor
or
mov
adc
mov
xor
add
hlt
in
cmpsl
int3
lcall
clc
mov
mov
push
sarb
mov
or
push
sub
jl
std
mov
insb
adc
sub
ja
mov
push
ficomps
xchg
in
testl
cmp
or
lock
aas
repnz
imul
out
mov
stos
xchg
push
jns
xchg
pop
xchg
push
mov
adc
inc
ljmp
adc
jbe
pop
in
dec
mov
mov
out
inc
xor
pop
fnstsw
loop
and
test
repz
ljmp
stos
mov
imul
fcmovnbe
inc
stos
jmp
sbb
scas
jno
mov
push
adc
lret
or
sub
fimull
push
dec
sbb
imul
ljmp
call
lcall
jbe
ret
add
pop
inc
pop
push
leave
out
arpl
movsb
pop
lods
sti
or
pop
and
xchg
andb
cmp
sbbl
jne
sahf
out
xor
push
in
mov
jne
test
into
dec
scas
pop
and
outsb
xchg
clc
hlt
mov
mov
test
mov
xor
bound
js
or
pop
adc
dec
dec
sbb
push
shr
xor
aaa
not
pop
cmp
cld
push
fildll
popa
lahf
jno
inc
sbb
sub
ljmp
sub
call
iret
cmp
xchg
cwtl
push
in
fwait
or
fsubl
xor
dec
lahf
lods
rcl
inc
test
mulb
mov
cli
lcall
jne
adcb
xchg
add
out
jge
pop
xchg
mov
dec
mov
ja
stc
arpl
sub
mov
pop
out
push
jmp
notb
and
lcall
es
adc
repz
pop
and
adc
sub
push
cwtl
xor
incb
add
jmp
cwtl
dec
outsb
setae
into
xchg
data16
stos
fwait
pop
aad
lahf
jl
out
mov
imul
inc
xchg
out
jecxz
rcll
sbb
sub
movsl
xchg
xchg
sbb
je
mov
mov
outsl
ljmp
dec
mov
lock
test
xor
into
movsl
and
aam
dec
xor
loop
push
fldl
pop
in
inc
cltd
fidivs
imul
sbb
inc
mov
push
out
das
fwait
inc
movsb
inc
fdivr
cld
in
jecxz
ja
xor
repnz
jnp
mov
rcll
int3
fcoml
lods
fldenv
adc
psubq
lock
imul
cmc
enter
mov
mov
aad
push
mov
das
mov
jge
in
jecxz
mov
sub
outsb
mov
dec
loop
jo
rcl
mov
push
insb
orb
out
mov
cmc
daa
pop
mov
loopne
sbb
sub
push
lret
mov
arpl
cwtl
das
pop
xor
dec
ljmp
xlat
sbb
ds
cmp
repz
sbb
test
mov
arpl
add
repz
xchg
push
jecxz
fwait
xor
stc
pusha
rcl
xchg
sbb
jg
cmp
jnp
mov
dec
mov
out
pop
xlat
outsb
mov
xchg
sub
cs
xchg
mov
loopne
stos
insb
rclb
test
sti
mov
movsb
sbb
sahf
xchg
sub
sbb
adc
fdivs
aaa
push
cmp
jge
cmp
xchg
clc
jne
lock
nop
clc
or
lods
sbb
scas
mov
adc
xchg
push
mov
scas
adc
jno
xchg
sub
push
pop
ds
sbb
test
sahf
dec
lcall
in
mov
inc
adcb
scas
push
sbb
mov
pushf
dec
cmp
mov
jno
icebp
xchg
roll
idiv
scas
roll
test
sub
movsl
add
pusha
repnz
mov
dec
mov
push
repnz
sbb
add
rcrb
sbb
cmpsl
xor
sbb
mov
imul
sbbb
dec
xor
lds
pusha
adc
sarl
cmp
stos
mov
adc
fwait
in
push
jl
sbb
les
mov
add
rorb
pop
cwtl
test
insb
push
xor
mov
popf
cli
pushf
xchg
cmp
popa
xor
ljmp
mov
xchg
jge
ja,pn
fistpl
mov
cs
shl
icebp
xor
ds
xlat
rcr
dec
test
cmp
push
cmpsl
mov
lds
mov
pop
ret
jno
out
mov
push
addr16
add
push
hlt
jnp
fdivrs
fdivl
mov
dec
icebp
dec
cmc
jne
bound
push
xchg
jb
cmp
jno
gs
shrb
or
shrl
mov
loopne
xchg
inc
mov
mov
adc
popa
cmp
push
push
dec
jb
and
test
mov
insb
jb
andl
and
lea
fstps
rcrl
cmp
sarl
in
cmp
push
mov
sti
iret
cltd
lods
pop
sub
subb
dec
cwtl
mov
push
cmc
cmp
in
fs
sbb
movsb
scas
sbb
and
inc
mov
or
mov
sbb
aad
cmp
sbbl
out
aad
flds
jb
jmp
arpl
mov
dec
fs
or
cmp
jo
adc
nop
rcrl
push
add
fisttps
out
sub
leave
adc
fisttpll
adc
cmp
imul
adc
mov
lcall
push
sbb
sti
inc
popf
cmpsl
sbb
ret
sbb
pop
adc
cmp
and
cmpsl
pop
push
sbbl
add
pop
fidivrl
aaa
fsubl
sub
push
mov
inc
jl
fpatan
sbb
fs
mov
push
jbe
nop
cwtl
fisttpl
aaa
push
xchg
aas
and
js
into
dec
xlat
cmp
adc
scas
xchg
pop
inc
xor
mov
xchg
gs
inc
jae
ret
test
bound
inc
pop
add
adc
push
ret
cli
int
jo
xor
int
push
push
stc
enter
subb
notb
xchg
insl
cmp
mov
jp
mov
test
into
sbb
hlt
lahf
inc
in
push
out
lret
push
xor
push
add
cmp
push
xor
lcall
cli
jl
jne
push
pushf
mov
pop
or
add
enter
repnz
pop
mov
dec
xlat
cmpsb
xor
xchg
mov
jb
push
push
mov
adc
adc
push
xlat
jmp
loope
inc
xchg
cli
mov
stos
mov
push
and
mov
cwtl
sbb
xchg
ret
xlat
lcall
call
cmp
lahf
inc
mov
xor
imul
shlb
xor
add
adc
dec
mov
stos
and
testb
sbb
push
subb
pop
lcall
sbb
cmp
mov
mov
push
push
or
jbe
jge
popa
fwait
pusha
cmpl
and
in
sbb
outsl
shl
scas
ret
pop
mov
xor
push
pop
push
lods
jno
in
or
cmpsl
push
stos
add
push
test
pushf
pushf
sbb
xchg
cli
xor
rol
dec
lds
std
movsl
mov
and
inc
out
hlt
sub
xchg
push
testl
pop
push
xchg
lods
xchg
repnz
push
mov
jp
dec
pushf
scas
std
fsubrs
adc
jmp
and
inc
cmp
push
push
scas
inc
lock
rorb
hlt
jnp
lcall
sub
push
fwait
lcall
dec
daa
or
add
cmpsb
js
in
and
xchg
addb
icebp
mov
inc
test
inc
enter
lods
stc
aad
int
cltd
ja
add
jmp
cli
jo
mov
leave
inc
xlat
ds
fidivl
xchg
mov
stc
shll
xchg
test
jbe
popf
movsl
and
mov
inc
leave
xchg
aas
mov
mov
ret
mov
cmp
or
pop
jo
add
sub
cli
push
fisttps
ds
arpl
mov
movsl
push
fidivs
in
push
cmp
mov
jp
inc
je
jle
notb
mov
fst
aam
jg
xor
cwtl
cmp
sahf
adc
adc
pop
movsl
jp
mov
rol
lea
dec
push
scas
das
into
ss
in
jb
pop
jmp
mov
adc
mov
in
std
repz
sbb
sub
or
sbb
adc
jl,pt
fidivs
je
cli
push
sub
xchg
jns
dec
mov
loop
daa
or
psllq
xor
fstpt
add
lea
mov
pop
lea
inc
ret
les
and
lcall
adc
test
lahf
mov
adc
inc
int3
push
cmp
ljmp
jbe
add
out
inc
xchg
pop
inc
or
lret
sub
movsb
mov
sbb
sub
or
popf
repz
adc
cmpsb
outsl
jecxz
dec
adc
mov
sbb
sub
stc
pop
adc
repz
jbe
hlt
popf
push
xor
cwtl
jmp
lods
test
xchg
mov
mov
loope
xorb
mov
lcall
xchg
dec
xchg
movzbl
jecxz
fwait
insl
add
cmpsl
setle
lret
bound
je
add
arpl
jge
add
xchg
jo
lea
dec
pop
popf
test
das
inc
push
movsb
cmp
inc
jge
in
cld
movsb
cmp
test
outsl
jns
pop
popa
clc
dec
xor
xlat
lock
xchg
jl
jmp
add
test
or
cmp
movsb
cmc
scas
mov
ds
xorl
bound
ljmp
push
hlt
dec
pusha
cs
shl
jnp
sbb
inc
xor
pushf
jno
jne
mov
pushf
cli
aas
jo
jge
subl
push
xchg
add
and
aad
shlb
xchg
arpl
je
pop
pop
idivb
pushf
push
negb
dec
cmp
les
add
sbb
dec
in
and
sub
cmp
insb
add
cltd
push
adc
idivb
xchg
movsl
dec
in
addl
ss
xchg
jle
jecxz
cmc
dec
and
ret
mov
jecxz
fsts
mov
ss
imul
test
aam
icebp
ds
sbb
cwtl
movsl
mov
jmp
cmc
adc
cmp
xlat
jbe
fstps
pop
xor
cmp
dec
jmp
mov
mov
aad
add
jmp
lret
sbb
jns
xlat
cmp
iret
in
sar
cmp
pop
mov
and
mov
mov
into
pusha
aaa
jge
shll
enter
lcall
fnsave
mov
fistpl
ficoms
lret
fs
pop
int
imul
and
lcall
in
sti
cld
xor
push
out
add
fisubrl
adcb
jnp
es
push
push
scas
and
stc
or
jae
sub
les
popf
push
in
jle
mov
cmp
or
xlat
cmpsl
test
stc
pop
jb
inc
lahf
xor
adc
mov
pop
fs
push
lret
and
lods
cli
mov
xchg
pusha
mov
int3
dec
cmp
scas
call
push
mov
test
push
in
mov
and
push
ljmp
and
mov
das
push
xchg
cwtl
lcall
mov
inc
sbb
in
pop
pop
pop
mov
aaa
pop
mov
mov
mov
dec
dec
push
mov
xchg
and
inc
pop
xor
sahf
fildl
iret
and
push
xchg
push
iret
roll
mov
mov
sti
push
xor
and
xchg
mov
push
mov
les
call
adc
inc
aam
insb
fnstenv
push
sbb
dec
add
adc
mov
jle
push
out
fists
push
jl
xor
cwtl
scas
mov
rclb
out
inc
shlb
dec
and
fistpl
or
jecxz
mov
jb
xchg
or
fcmovnu
sti
repz
and
pushf
cli
inc
insb
sti
cmp
jmp
lds
cmp
fs
cmp
xchg
push
fs
add
jmp
shrl
in
iret
xorb
clc
mov
sub
lahf
inc
jecxz
pop
lea
mov
addl
aam
mov
push
and
fnsave
ds
xchg
mov
pop
mov
fcmove
mov
mov
outsb
repnz
sti
jle
mov
data16
xchg
out
add
add
lahf
xor
and
mov
adc
mov
cmp
jmp
add
ret
jp
mov
pop
mov
xlat
hlt
jnp
fs
inc
fisubs
pop
inc
dec
popa
mov
push
cmp
xchg
adc
ret
or
and
push
inc
bound
fsubrs
hlt
dec
popa
clc
repz
movsl
cmp
adc
pushf
inc
addl
daa
into
sbb
lcall
data16
pop
ss
mov
in
shlb
je
xchg
inc
push
arpl
lret
mov
pop
cmp
inc
push
jbe
out
jg
add
loope
cwtl
das
lods
add
sbb
stc
or
in
es
push
jle
les
xchg
dec
push
in
pop
add
mov
dec
jb
loope
or
insb
mov
sahf
stos
movsb
inc
popf
cmp
outsb
ss
sbb
push
in
test
mov
xor
test
movsl
fnstenv
mov
out
loop
jle
cmpsb
pop
and
jecxz
out
mov
ljmp
stos
add
insl
cmc
mov
fstps
add
cmpsl
sbb
adc
sub
insb
pop
rcrl
aam
aam
jge
out
daa
pop
mov
jnp
add
outsb
nop
mov
pop
fs
sbb
xor
jp
mov
outsl
aad
push
into
in
test
adc
jae
std
lods
fstpl
adc
call
sbb
test
mov
push
jns
push
add
xor
add
sahf
mov
sub
lock
test
lcall
popa
jo
or
pop
rep
pop
vpcomq
mov
scas
xlat
mov
sub
add
les
xchg
and
sbb
add
sahf
sub
dec
outsb
test
mov
pop
jbe
arpl
enter
pop
mov
mov
pusha
leave
pop
dec
push
repnz
sbb
sub
xchg
mov
push
out
test
pop
xor
mov
aaa
and
decl
es
imul
lret
sbb
jno
mov
mov
loopne
aad
ljmp
lock
pusha
pusha
shlb
orl
mov
cmpsb
cmp
or
inc
ljmp
push
xlat
aaa
inc
stos
inc
aam
xchg
cs
leave
and
push
stos
mov
xchg
hlt
xor
rcr
sbb
outsb
dec
push
mov
xchg
mov
ficompl
push
or
jp
xchg
jno
sarl
jns
lods
in
in
add
jl
cmp
sbb
ficompl
or
les
or
aam
cmp
push
xor
lahf
jno
sbb
or
jne
cmpsl
repnz
add
and
subb
jns
xor
push
xchg
sub
mov
idiv
adc
orb
rcrb
mov
sub
shrl
cli
aas
gs
xchg
shl
sahf
xor
daa
outsl
lahf
lea
push
mov
push
push
add
pop
cmp
add
mov
sbb
das
insb
push
lea
dec
mov
or
lret
cmp
imul
mov
or
lods
and
add
outsl
jl
mov
inc
movsb
rclb
xchg
or
cmc
sub
mov
sub
adc
fisubl
pop
sub
cli
push
ds
sbbb
cmc
setbe
ja
dec
orl
xchg
ret
jae
or
or
test
mov
jl
mov
js
loope
push
test
js
inc
fs
or
or
adc
sbb
dec
dec
sbb
mov
lea
push
sub
dec
pop
jae
popa
lods
jmp
xchg
adc
mov
add
sbb
mov
sub
lret
cli
orl
or
mov
fcmovnbe
mov
pop
in
addr16
mov
into
push
aam
int
jmp
lret
xlat
push
fmul
int
dec
fld
idiv
mov
aad
cld
cmpsl
mov
pop
jg
push
sub
shlb
stc
out
sub
sarb
add
mov
mov
pushf
mov
jno
sub
iret
sbb
cmp
loopne
imul
out
sub
sub
je
pop
stc
mov
faddl
or
out
ja
push
and
or
daa
scas
call
fucomp
xchg
pop
jg
push
cmp
pop
adc
dec
pop
mov
movsb
jecxz
mov
xor
aad
mov
and
cli
push
ret
xchg
lcall
xor
push
jmp
push
mov
mov
push
stos
mov
or
sbb
sbb
push
aam
arpl
ljmp
fsubp
fistps
pushf
std
mov
inc
nop
aaa
das
inc
lret
icebp
dec
inc
inc
and
add
dec
pop
fadds
cltd
std
dec
sbb
inc
mov
fdivrl
dec
iret
int3
pusha
in
loopne
roll
loopne
pop
sbb
ret
insb
pop
frstor
aam
rol
out
xor
xlat
negl
or
lcall
or
sahf
pop
addr16
sbb
call
stos
cwtl
sbb
mov
out
fnstenv
cmp
and
js
pop
or
repz
dec
dec
outsl
outsb
pop
cmp
dec
dec
popf
pop
ret
xor
fistl
mov
cli
mov
mov
fdivs
orl
xor
add
stos
lcall
loop
mov
cmpsb
mov
mov
js
insb
into
lds
push
lock
outsl
iret
fildl
jp
xor
out
cmpsb
cli
mov
das
inc
add
sbb
notb
mov
sub
hlt
outsb
popf
xchg
pop
cmp
mov
add
mov
and
lret
out
jg
push
add
js
jbe
adc
xchg
in
mov
mov
or
imul
push
cmp
inc
arpl
dec
test
shl
push
mov
push
pop
sub
mov
inc
stos
push
imul
mov
sub
fisttpl
mov
pop
xor
aaa
ss
mov
das
cmp
mov
sub
icebp
pop
jae
aam
cmpb
jmp
insb
jle
in
add
fisubs
rol
mov
and
pop
pop
filds
in
out
fnstsw
dec
lea
pop
adc
and
addr16
pop
popf
or
and
xor
insb
lret
sti
mov
insb
mov
fdiv
mov
push
out
add
je
mov
fadds
pop
stc
imul
cltd
pop
mov
inc
add
in
mov
pop
xor
sub
repz
enter
push
cmpsl
push
xchg
or
shrb
push
filds
test
rorl
pop
test
in
pop
leave
int
xlat
inc
pusha
mov
or
push
js
or
adc
icebp
loopne
lea
inc
pusha
jge
inc
inc
cld
mov
xchg
test
imul
cwtl
inc
out
cmpsl
in
and
repnz
sbb
leave
pop
sbb
adc
adc
add
sub
dec
sbb
dec
mov
cmp
insl
jnp
jg
pop
data16
pop
jmp
or
ret
ss
jge
dec
lods
sbb
mov
mov
lods
stos
push
mov
dec
fdivrl
jle
popf
cmpsl
fs
xlat
xchg
dec
lcall
xchg
sub
mov
dec
cli
js
stos
outsl
cmpsl
cmp
dec
mov
sti
iret
jecxz
mov
stc
negb
xchg
sub
pop
and
inc
pop
mov
ror
cli
decb
cmpsb
sbb
test
and
push
xchg
jg
mov
lcall
mov
sub
dec
jecxz
jle
pushf
jmp
subl
push
inc
insl
jae
fisubrs
lahf
sbb
adc
mov
pop
push
ljmp
imul
sub
add
mov
xor
add
adc
cld
out
mov
xor
pop
push
cs
loopne
fcompl
add
xchg
and
jnp
mov
sub
daa
push
sub
or
loope
outsl
and
push
je
subb
mov
aam
fiaddl
xorb
enter
lret
arpl
sbb
roll
push
pop
movsl
add
mov
lret
dec
cmp
arpl
dec
dec
es
dec
fmulp
xchg
adc
cmp
sub
das
iret
push
adc
inc
in
adcl
xor
jno
mov
sbb
out
cmp
sar
jmp
cmp
clc
lret
cmc
mov
mov
or
clc
xchg
les
cmpsb
fistpll
jle
aaa
int3
or
pop
loop
lds
sbb
and
pop
mov
sarb
aad
pusha
clc
mov
push
cmp
jge
jne
adc
rolb
repz
movsb
cmp
jns
pop
xor
pop
arpl
loope
ss
imul
ds
mov
push
jb
push
pop
or
stc
jb
daa
movsb
sbb
mov
sbb
push
roll
pop
mov
push
mov
xchg
and
or
jecxz
jns
xor
sarl
sti
mov
mov
xchg
lods
pop
mov
xor
lock
push
decl
movsb
call
insl
cmp
mov
mov
push
inc
jne
clc
bound
addr16
cmpsl
rcl
mov
jg
cmp
adc
popa
sub
repz
sub
aas
js
cmp
and
or
mov
mov
push
add
xlat
mov
insb
aaa
fwait
xchg
mov
in
jle
xor
dec
mov
fcoms
mov
cs
aam
inc
int3
add
hlt
jmp
popf
icebp
mov
push
jb
add
test
pushf
mov
int
sbb
ficoml
push
lcall
mov
imul
jmp
xor
imul
mov
in
inc
cltd
push
inc
fdivrl
loop
in
add
jp
je
out
sub
mov
std
cmp
sahf
jae
rcrb
data16
in
les
lret
into
faddl
jle
notb
and
dec
lcall
push
jae
ss
xchg
mov
push
xor
movsb
addr16
jne
loop
and
dec
mov
dec
cmpsb
lock
imul
sbb
xchg
dec
dec
shl
mov
sub
mov
pop
push
jb
in
repz
in
or
out
rcrb
aaa
mov
in
mov
int3
jae
cmp
loop
lcall
nop
sub
jns
add
mov
mov
rorb
push
mov
xchg
sbb
jmp
cmp
mov
call
pop
jns
dec
dec
fs
cs
add
and
ljmp
ret
and
push
pushl
ds
ret
int
xchg
out
mov
dec
inc
in
lods
add
test
out
cld
add
imul
mov
outsl
stos
fadds
pop
je
mov
aaa
mov
jle
mov
dec
rcll
inc
frstor
addl
or
xor
orl
and
and
std
ror
xor
inc
je
sbb
pusha
xchg
lea
ret
mov
in
and
test
sub
lret
mov
jge
imul
sahf
adc
stc
add
ljmp
jl
mov
mov
dec
lret
dec
repz
lods
cs
int3
faddp
loope
inc
or
xor
testl
iret
fnstsw
jae
and
add
cli
xor
xchg
clc
push
push
fwait
lods
dec
idiv
aam
mov
sti
push
push
nop
es
cmpsl
shll
movsb
imul
ret
lods
and
push
test
jb
int3
mov
scas
mov
insb
jmp
jbe
xchg
push
mov
cmp
pop
ds
push
inc
jb
ljmp
inc
push
add
adc
mov
in
dec
pop
xchg
mov
jae
les
mov
enter
inc
and
mov
and
xchg
mov
lods
cmc
dec
pop
clc
inc
fisubrl
loopne
mov
insl
jns
pop
addr16
dec
aaa
push
sub
sub
sub
xchg
dec
mov
jge
cmp
lods
loop
pop
leave
fldcw
add
adc
add
ret
addr16
xor
or
push
xor
jge
dec
cwtl
das
sub
mov
add
adc
pushl
or
cmp
aaa
pop
pop
sub
les
sub
in
jbe
faddl
shlb
or
push
inc
out
shll
or
out
imul
repz
ja
hlt
pop
mov
xchg
inc
pusha
mov
mov
leave
idivl
je
testl
pop
push
lcall
cwtl
repz
inc
test
inc
xchg
sbbb
leave
in
lret
lcall
repnz
mov
mov
pop
lods
jg
sbb
and
scas
mov
popf
and
sahf
pushf
pop
or
lods
inc
push
sub
cmp
test
ret
xor
lret
dec
and
insl
rcrl
dec
inc
lock
loope
jle
mov
or
jp
aas
and
iret
ret
mov
sarb
and
mov
pop
repnz
push
adc
loopnew
cltd
imul
das
sub
pop
clc
lea
sbb
testb
adc
das
mov
or
pop
mov
push
xor
cmpb
stos
lahf
stos
jae
pushf
mov
pop
stos
mov
mov
push
pop
fsubr
dec
xor
test
mov
xor
add
jg
es
ret
mov
fidivrl
dec
inc
cmp
jae
mov
push
mov
jmp
mov
jb
les
negb
xor
mov
shl
leave
and
fucomi
iret
xchg
sbb
fnstenv
push
xlat
xor
mov
xor
mov
inc
lds
ret
push
out
ss
adc
xor
lret
jmp
aad
inc
xor
movb
mov
inc
orl
xchg
popf
inc
mov
jne
loopne
mov
cs
cmp
dec
add
push
xchg
fwait
sub
sbb
mov
lods
ljmp
test
test
cmc
jne
mov
cmp
je
pop
rcrl
popf
sub
cld
sahf
dec
insl
in
jp
push
int
mov
pop
inc
mov
add
cmp
stos
xchg
xor
movsl
lret
xlat
lea
stc
inc
jge
jmp
mov
gs
xlat
pop
cmp
ds
cmp
add
push
in
in
fldt
fistl
mov
jo
jno
cmp
and
sbb
sub
dec
or
call
fnstenv
add
cwtl
jl
sbb
pushf
push
xchg
loope
push
sbbl
sbb
in
jnp
xor
loop
jp
sub
jge
mov
add
in
add
movsb
nop
lahf
xor
std
jle
cmp
mov
test
lods
pop
mov
sub
jecxz
addr16
push
inc
pop
adc
into
ja
ret
jnp
jecxz
add
add
mov
mov
xor
pushf
fucomi
repz
mov
scas
punpckldq
loope
out
jns
and
out
add
jmp
xchg
sti
push
dec
inc
dec
clc
cmp
dec
cmp
sub
pop
dec
cwtl
mov
sbb
popa
cld
inc
mov
push
cltd
mov
mov
clc
sahf
popf
cmc
fdivrs
out
sbb
int3
nop
xchg
and
inc
cld
test
pusha
jg
roll
pop
test
jmp
xchg
fisubrs
shlb
jo
fdivrs
repz
jb
lret
and
popf
adc
test
mov
test
mov
lret
test
das
pop
push
and
inc
push
das
fwait
cmp
pop
xchg
mov
xor
or
adc
inc
int3
andps
sub
adc
cltd
cmp
xchg
test
mov
int3
add
std
aad
movsb
pop
out
lds
es
mov
shlb
sub
enter
sub
lcall
in
add
xchg
jmp
jge
stc
daa
push
push
adc
sub
divl
movsl
cmp
addb
add
in
add
lock
sub
dec
dec
mov
xchg
into
xor
cmp
clc
jne
leave
mov
arpl
adc
and
cmpsl
pop
aaa
iret
xor
sub
adc
sahf
rcr
or
xorl
mov
cmp
pop
jg
rorl
int
sub
xlat
cwtl
das
shr
inc
ret
mov
xor
shlb
loope
mov
push
xor
cmp
std
clc
xchg
pop
pop
xor
in
flds
adc
mov
jns
int
lret
adc
add
gs
xchg
inc
sub
lods
pop
arpl
ja
mov
es
pop
dec
pop
outsl
je
jae
jle
cltd
xor
push
push
test
imul
sub
aaa
mov
stc
adc
js
decb
cwtl
mov
push
mov
pop
push
jp
push
cmc
pop
mov
mov
push
xor
sbbl
cmpsb
mov
mov
add
sub
iret
inc
ficompl
push
outsb
mov
jmp
cli
xchg
pop
mov
hlt
or
fiaddl
jnp
cmp
test
shlb
lods
adc
dec
popa
rdmsr
push
ljmp
adc
js
fbld
psubb
int3
out
mov
les
aam
test
sub
inc
mov
fs
cmc
sub
adc
sbb
fidivs
pop
iret
push
adc
mov
push
repz
movsb
aaa
shrl
jl
lret
push
ss
push
jge
adc
jecxz
cmp
shrb
mov
pop
loop
mov
or
push
cmp
andb
das
movb
icebp
jno
push
dec
test
fstpt
dec
or
mov
mov
aam
push
mov
cmp
nop
pusha
aad
pop
pop
int3
cmp
bound
pop
aas
sub
scas
in
lock
mov
sti
or
outsl
mov
std
dec
scas
aaa
dec
sbb
test
pop
call
mov
addr16
cwtl
jmp
enter
out
aas
scas
shl
repz
aam
pop
hlt
xor
jnp
push
or
pop
sbb
and
gs
mov
cmp
jae
ficompl
jle
in
mov
sbb
lret
sbb
jmp
sbb
and
shlb
leave
pusha
cs
shrl
bt
aam
repz
jnp
add
add
xor
or
inc
and
sbb
lcall
xor
movsl
cmp
fisttpl
test
xor
fidivrs
add
fsubl
mov
in
aam
out
sbb
js
adc
dec
cmpsl
xchg
cmp
mov
sbb
out
jno
inc
or
inc
out
jbe
cmpsl
cmp
pusha
inc
fimuls
aaa
aad
push
test
scas
notb
mov
sarb
std
xchg
cltd
jg
add
outsl
shlb
inc
pop
sub
jae
inc
pop
es
jno
pop
out
imul
pop
or
lahf
ja,pt
jl
pop
or
add
mov
push
xchg
fs
cmp
xlat
or
gs
push
adc
mov
pop
lock
push
test
insl
ja
and
jnp
mov
loope
outsb
sub
shlb
adc
jp
xchg
push
stos
add
sub
xlat
mov
pop
sbb
stc
add
adc
or
lret
iret
xor
pushl
aam
popf
and
ljmp
xor
cmp
push
xor
pop
push
mov
jne
aad
sti
or
pop
jmp
dec
lahf
inc
out
dec
pop
insb
mov
dec
inc
mov
cltd
sub
aas
scas
and
mov
push
testl
cmpsb
jmp
imul
bound
fsubrl
repnz
cld
xor
lds
fcomp
mov
fldenv
mov
mov
lcall
inc
pop
jg
repz
adcb
inc
mov
xor
fsubrs
mov
jno
lods
sahf
cmpsl
out
push
xor
adc
lods
lds
fdivrl
inc
fidivrs
imul
jmp
mov
sbb
test
dec
lret
subb
ret
pop
cltd
iret
lretw
aas
dec
adc
xchg
ret
or
loope
shll
into
inc
adc
movb
sbb
das
mov
jmp
jg
popf
lcall
sbb
pop
test
sub
xor
mov
lcall
in
in
jbe
pop
sbb
push
mov
pop
cmpsb
aad
orl
repz
and
adc
daa
or
add
sub
sbb
clc
out
cmp
add
mov
pop
pop
enter
mov
mov
lret
xlat
push
xchg
fmull
mov
jbe
ljmp
out
cmp
test
mov
movsl
pop
push
mov
pop
adc
sahf
mov
lds
dec
xchg
jl
nop
outsl
cmpsl
push
pop
mov
xor
dec
in
mov
pusha
dec
mov
repz
mov
out
mov
fistpll
mov
add
lcall
test
mov
lret
and
xlat
pop
testb
int3
shlb
les
sub
push
cmpb
rcrl
sub
pop
cmc
sbb
cmp
arpl
dec
mov
mov
mov
gs
inc
orl
pop
add
or
xor
ss
push
pop
nop
int3
mov
cmpsl
subb
xchg
xor
push
mov
pushf
jle
sub
sub
fnstcw
scas
inc
imul
dec
sub
push
in
mov
fdivs
jbe
int
lahf
xchg
outsl
xchg
xor
xchg
outsb
push
sbb
add
into
popf
ret
inc
popa
push
or
shll
sbb
aad
pop
cmp
sub
pop
cmc
adc
andb
mov
push
mov
pop
sar
mov
sbb
pop
adcb
sub
xor
dec
mov
xchg
sbb
and
scas
cld
lods
subl
jae
sub
and
xor
and
cmp
aad
cmc
dec
divb
mov
call
stos
shrl
mov
xchg
cmp
push
in
dec
mov
inc
or
out
mov
scas
test
hlt
jns
sub
sbb
out
dec
adc
push
ss
dec
mov
test
movsb
adc
scas
sahf
ja
inc
in
popf
and
lcall
xchg
lds
dec
sub
push
mov
add
xor
daa
or
push
fstpt
fcompl
push
ret
dec
mov
jecxz
cltd
push
dec
addr16
jg
pop
mov
nop
test
jne
jns
push
add
push
test
inc
and
or
pop
clc
rcrl
lret
adc
push
xchg
stos
dec
outsb
pop
mov
outsb
call
mov
add
pop
jnp
lods
rorb
and
or
ret
hlt
icebp
push
mov
shlb
xchg
sbb
sbb
adc
cmp
adc
mov
jno
pop
cs
cmpsb
arpl
popf
xchg
dec
imul
cmp
je
outsb
ds
sahf
and
sbb
pop
repz
pop
or
leave
loop
movsl
test
fisubrl
sbb
testb
xchg
aas
pusha
les
xchg
mov
push
mov
add
push
int
subl
pop
jnp
push
mov
popa
mov
add
test
enter
push
jmp
arpl
outsl
add
push
scas
mov
imul
lods
lods
xchg
js
das
out
adc
call
or
mov
adc
fs
adc
outsb
mov
fdivp
in
jno
mov
xchg
or
out
inc
shl
js
filds
call
inc
movsl
aam
arpl
xor
stos
mov
dec
xor
rcll
add
and
dec
pop
fistps
xchg
lahf
jo
inc
data16
jno
xchg
in
arpl
dec
sbb
dec
int3
jge
mov
loope
je
loopne
pop
push
cmp
pop
pushf
mov
pop
std
arpl
xchg
push
xchg
cmpsb
push
shr
repnz
adc
leave
inc
movsb
cmp
and
cmp
ret
dec
sub
mov
xchg
aad
jae
or
mov
aad
std
or
sti
jo
and
push
mov
sub
sbb
dec
cmp
push
lcall
xchg
xchg
add
dec
movsb
scas
cmc
pop
or
dec
and
lods
xor
ret
loope
jp
mov
add
push
imulb
fsubl
add
clc
ror
and
ljmp
dec
push
cmc
aas
mov
out
xchg
lods
pop
mov
cmp
mov
icebp
and
sub
and
xchg
aam
int3
out
stos
sbb
in
jle
jnp
push
cmp
xchg
ja
sbb
pop
xor
jae
or
inc
stos
sub
mov
jle
insl
jnp
fmull
data16
out
mov
outsl
lahf
push
sbb
call
int3
outsb
fists
jno
ret
xchg
out
stos
inc
int
imul
dec
ds
mov
test
mov
rolb
dec
and
inc
fisubl
jbe
subl
adc
mov
add
pop
addr16
xor
pop
js
fs
and
push
and
xlat
and
popf
add
xor
jno
and
pusha
mov
into
adc
std
mov
hlt
mov
and
mov
dec
fdivrl
xchg
sbb
stos
mov
lock
cs
mov
push
sbb
or
stc
lods
mov
fnstenv
out
mov
mov
and
cmp
sbb
je
adc
stos
xchg
cmp
ret
mov
pusha
incb
xchg
sub
daa
cld
push
sti
je
fdivrp
sub
cmp
jns
fildll
or
aam
push
fbstp
push
or
mov
lahf
dec
push
and
sub
adc
cmp
sbb
pop
rorb
stos
inc
mov
add
rolb
shll
cmpl
push
and
add
ror
jecxz
mov
shr
sbb
test
push
or
lods
cmp
mov
xchg
pushf
icebp
addr16
sub
cli
stos
lcall
push
int
push
mov
fwait
cs
mov
ds
repz
dec
pop
adc
sub
test
dec
sbbl
mov
mov
cmc
xchg
insb
adc
sbb
dec
mov
je
clc
xchg
adc
les
mov
rclb
add
jp
sub
cwtl
pop
es
popa
dec
pop
xor
test
xchg
dec
in
call
pop
out
jmp
fdivs
pop
icebp
push
sub
sbb
test
mov
xlat
xor
and
pop
jb
jno
mull
rcl
leave
fs
int3
insl
repz
in
xchg
cs
pop
dec
adc
jg
and
lret
lret
mov
pushf
mov
xchg
pop
mov
push
popf
cs
jns
mov
push
cmc
sub
xchg
test
cmp
mov
hlt
push
push
call
lcall
out
add
mov
mov
or
out
inc
xor
sub
push
sbb
lock
xchg
cmp
fsubr
push
imul
lahf
sub
outsl
out
add
mov
jb
cmp
push
dec
add
jp
insl
add
incb
mov
xchg
sub
movsb
imul
gs
inc
push
xor
arpl
push
test
inc
fadd
mov
fistpl
dec
xchg
aam
subl
gs
andb
into
adcl
outsl
imul
xor
jg
out
and
dec
jns
dec
add
lea
pop
call
notb
push
dec
sahf
and
daa
adc
push
loope
pop
loope
jl
out
fsubr
popf
shll
jp
inc
out
sbb
in
test
in
mov
push
shl
jb
push
in
notb
incl
enter
enter
stos
jmp
rolb
mov
pop
jle
xlat
scas
data16
test
push
test
fidivs
fisttps
mov
push
sti
pop
sbbb
push
adc
cmp
loop
repz
xorb
std
ja
fsubrs
push
out
fld
push
jmp
cmpsb
cmp
mov
mov
je
mov
jmp
es
xor
shlb
ljmp
loop
ficoml
mov
fsubs
cld
out
cs
pop
mov
mov
mov
fdivl
dec
push
mov
daa
mov
dec
cmp
sub
pop
repnz
push
ss
mov
test
jle
dec
int
mov
arpl
xchg
clc
mov
test
mov
mov
ficoms
in
out
loopne
xor
xor
xchg
out
xor
and
sbb
lret
mov
cli
push
insl
aaa
sub
dec
adc
fwait
mov
aas
sub
inc
mov
testl
iret
jmp
adc
or
xor
push
xchg
adc
sti
incb
in
loop
rorb
insb
xchg
mov
pop
mov
inc
dec
adc
repz
test
inc
jbe
jno
xchg
jle
jno
cmc
mov
push
clc
or
add
adc
out
push
xchg
mov
adc
outsl
xchg
imul
lahf
fcoms
add
jl
sub
mov
js
fsubrl
mov
dec
mov
lods
lret
mov
enter
add
pop
ficoms
sbb
jns
clc
shlb
dec
aam
loop
lods
pop
movsl
jns
into
ficomps
scas
rolb
or
inc
fiadds
jno
push
mov
enter
mov
popf
in
push
shrl
push
fiadds
push
lds
pop
dec
push
xorl
jecxz
popf
inc
into
lock
arpl
in
mov
sbbl
mov
std
or
lahf
call
out
js
clc
and
xor
xor
sbbl
or
pop
jg
stos
jnp
sbbb
lahf
test
push
in
cmp
jae
push
icebp
mov
push
stos
sub
hlt
shl
cmpsl
mov
push
mov
loope
out
push
mov
cmc
in
fs
pop
hlt
das
popa
les
int
outsl
jp
xchg
scas
mov
mulb
hlt
imul
xor
sbb
es
mov
dec
xchg
stos
mov
mov
xor
fistps
shrl
inc
xor
test
add
lock
xchg
jmp
outsl
out
mov
cmc
fidivl
adc
sbbb
add
icebp
nop
or
mov
shrb
outsl
cmp
lahf
mov
mov
or
lcall
jae
lea
inc
aas
insb
or
mov
scas
jmp
leave
pusha
lods
test
cmp
out
in
sbbb
int3
gs
add
ljmp
sub
push
mov
sbb
jns
push
or
lret
mov
pop
add
and
and
out
das
dec
lock
adc
sub
out
mov
icebp
jno
ror
mov
adcl
add
inc
pop
call
rep
inc
or
jg
pop
push
jmp
add
fs
cmp
mov
and
andl
inc
sub
fsubrl
push
mov
add
jae
cwtl
mov
and
push
insb
push
xor
out
aam
cmp
ficomps
cli
stos
outsb
inc
push
and
cmp
add
shl
cs
sbbb
in
nop
push
xor
add
std
and
mov
in
push
cli
sbb
mov
inc
jbe
mov
xchg
sub
dec
sub
sbb
cmc
dec
aam
subb
adc
sbb
out
icebp
xchg
xor
mov
fwait
push
xchg
mov
scas
pushf
xor
sub
inc
cmc
and
test
dec
sbb
arpl
lea
cltd
popf
xor
stos
in
jns
imul
outsl
mov
cwtl
xor
mov
je
cs
xchg
push
sub
dec
add
cmc
in
daa
pushf
xchg
adc
add
sbb
imul
xor
sahf
inc
std
ljmp
xchg
cmp
loope
add
dec
mov
mov
add
jmp
push
fnstcw
mov
and
jecxz
out
or
push
lock
cli
ror
aas
add
test
in
test
hlt
jnp
push
mov
shr
scas
out
xor
in
mov
ljmp
jno
repz
pop
sbb
pop
addr16
pop
sub
mov
xchg
hlt
lods
adc
pop
sbb
sub
mov
and
arpl
inc
fimull
mov
in
cmpsl
push
out
sbb
out
out
push
into
fidivl
ja
aas
into
sti
sbb
into
sqrtps
xor
mov
xor
ljmp
fnstcw
rorb
fisttps
push
ljmp
cmp
cmp
push
mov
sbb
or
daa
test
fwait
push
mov
mov
jmp
and
add
lret
pop
inc
cmp
add
lods
sti
or
in
xchg
int
mov
push
outsl
pop
mov
iret
sbb
dec
jae
nop
xchg
xchg
leave
jecxz
sbb
js
push
cmc
dec
push
in
pop
jmp
lock
dec
mov
adc
imul
dec
xor
mov
push
inc
or
xchg
das
inc
fldenv
pusha
notl
into
loop
jl
in
lods
inc
cmpsb
xor
xor
shl
push
adc
sarb
rorb
dec
rolb
dec
dec
sub
data16
push
jmp
xchg
xor
or
gs
sub
dec
les
fcomi
xchg
push
repz
data16
test
xchg
push
xchg
stos
mov
fnstenv
repnz
mov
xchg
jno
lcall
lret
ret
mov
jmp
scas
cmp
jmp
dec
outsb
aam
orb
adc
rolb
sub
dec
mov
mov
shr
out
int
jae
add
inc
dec
dec
push
mov
add
inc
andb
loopne
sbb
je
ja
push
pop
ret
sbb
dec
loopne
in
fs
js
cmpsb
push
jmp
or
fisubrl
mov
sbb
sbb
cld
inc
inc
pop
and
jno
or
insb
xchg
xchg
pop
dec
popa
lret
jp
out
js
pop
js
cmp
add
mov
sbb
dec
ret
cmp
adc
data16
sub
mov
loop
push
in
or
std
hlt
test
jle
test
xchg
int3
inc
jmp
test
or
divl
loope
sub
je
sahf
sub
inc
jae
in
adc
mov
xor
sub
rcrb
mov
dec
sbb
cwtl
out
popf
mov
or
push
mov
aas
pop
pop
out
jns
add
add
mov
lds
call
idivl
and
fwait
sbb
daa
ret
mov
ss
int3
cmpsb
lock
les
repnz
xchg
jmp
cmp
xor
jmp
cmp
lcall
pusha
jp
xor
or
pop
lret
iret
add
ss
hlt
das
addr16
xor
mov
dec
cmp
lahf
jecxz
jo
and
xor
fdivp
loopne
mov
push
insb
jl
mov
and
cmp
data16
aaa
std
jmp
test
les
int3
in
lret
flds
xor
aas
jmp
clc
pusha
xchg
jo
mov
or
mov
push
cmpsb
rcll
add
inc
and
push
jl
fidivl
jo
call
sub
int3
ss
xor
dec
sbb
pop
int
mov
cmp
jg
pop
ret
dec
pop
adc
jge
mov
stc
jbe
inc
pop
xor
pop
mov
jb
outsl
jo
jns
mov
int
mov
mov
or
jg
sahf
xchg
sbb
in
das
insl
in
xor
jne
stc
xchg
cs
ficompl
lfs
pop
aas
mov
pop
idivl
movsl
test
aad
fisubrs
fistl
mov
adc
pop
notl
jge
mov
clc
loope
add
push
mov
outsl
loopne
mov
scas
inc
mov
xchg
dec
jp
push
mov
repz
dec
or
insb
lahf
push
in
xor
sub
imull
jns
xchg
mov
addr16
mov
addl
cmp
ja
dec
and
xchg
es
push
and
fsts
sub
adc
les
dec
out
out
imul
clc
fwait
mov
jmp
movsb
aad
jp
adc
sub
aas
pop
cmp
dec
mov
sti
dec
cmp
repnz
jno
lcall
sbb
cmpsb
sub
daa
test
mov
and
arpl
rclb
insl
sub
out
sub
inc
xchg
dec
movsb
andb
jae
jnp
or
mov
and
adc
cmp
sti
jle
rcll
lods
push
mov
cmpl
xchg
ds
xchg
mov
dec
inc
lea
aas
push
test
push
add
cmp
jno
nop
gs
xchg
pop
das
add
jne
sbb
mov
lcall
js
pop
jl
dec
insb
repnz
inc
adc
cwtl
pop
lcall
lret
clc
push
or
movsl
lock
xchg
mov
in
push
call
mov
mov
out
sbb
push
div
int3
fistl
call
mov
xor
je
mov
mov
push
aam
incl
addr16
adc
pop
call
mov
sbb
popf
or
dec
jp
jg
out
int3
dec
and
hlt
loope
daa
lcall
call
add
xchg
jmp
and
testl
call
pop
push
out
fcomps
outsb
inc
dec
fwait
shr
ret
sti
gs
ljmp
adc
int3
arpl
pop
and
push
jne
fisubl
jge
pop
scas
inc
push
icebp
addr16
addb
stc
orl
inc
push
out
ja
jnp
and
fiaddl
fsubs
test
cld
or
sbb
or
or
push
ds
orb
push
dec
or
adc
lahf
mov
pop
out
rcrl
mov
stos
dec
lods
pop
xor
bound
jb
pop
movsb
clc
lea
cmp
insl
insb
clc
ds
sub
loope
rcll
es
and
imulb
das
gs
pop
and
jmp
xlat
outsb
or
call
data16
sbbl
sbb
mov
cmp
push
jge
test
scas
dec
das
pop
addr16
imul
aam
inc
ficompl
popa
clc
outsb
xchg
cmpsb
clc
call
sbb
into
popf
sbb
mov
icebp
movsl
inc
xchg
add
loope
mov
sbb
mov
cmpsl
xor
fwait
shll
add
pusha
ja
dec
adc
or
adcl
gs
or
ja
loope
divb
mov
std
aam
pop
push
call
frstor
push
ljmp
shrb
out
movsl
aad
shll
imulb
aad
mov
inc
pop
xor
in
call
shrb
repz
gs
lahf
or
test
xor
stos
into
jns
add
stos
add
ja
repnz
int
std
test
sarb
inc
pop
scas
mov
lods
inc
xchg
push
inc
fcomps
mov
scas
or
mov
negb
sbb
addr16
cld
or
arpl
cmp
and
or
jae
cmpsl
lret
pop
adc
add
lds
cmpsl
cmpsb
cs
loop
sub
lds
dec
outsb
adc
loope
pushf
pop
sbb
std
cmp
jns
jo
test
or
aaa
mov
lret
aam
sbb
add
pop
andb
pop
and
in
shll
andl
pop
and
and
dec
dec
dec
dec
and
cltd
shlb
inc
pop
jbe
ds
xchg
adcb
and
or
div
jno
push
lret
add
push
mov
mov
xchg
cmp
sub
das
mov
movl
inc
repnz
dec
fildll
in
inc
inc
dec
data16
mov
inc
push
iret
xor
insl
adc
notl
xor
das
les
jns
das
outsb
or
div
push
pop
shlb
stos
inc
rorb
jp
lods
and
adc
pusha
add
ss
scas
out
xchg
enter
adc
jle
cmc
ss
cmp
mov
stc
pop
sahf
sbb
mov
lods
loopne
in
ret
std
xchg
daa
sub
repz
icebp
sbb
imul
cmp
fcoml
int3
adc
mov
iret
or
loop
in
push
mov
mov
in
mov
in
sbb
push
test
fcmovnb
jo
dec
pop
popf
cmp
in
lcall
iret
fcomi
lret
jne
adc
mov
sbb
stos
into
fdivrs
ljmp
cmpsb
std
orl
enter
pusha
shr
mov
roll
mov
sbb
shll
pop
jecxz
mov
cmp
fiaddl
mov
mov
movq
nop
jnp
dec
outsb
mov
push
mov
ret
xlat
push
inc
push
in
bound
dec
dec
aas
and
mov
ret
pop
mov
inc
dec
dec
inc
std
int3
shlb
movsb
push
out
push
sbb
pop
imulb
xor
popf
imul
cmpsb
clc
in
inc
push
ficoms
mov
clc
push
xchg
shlb
mov
and
aaa
into
cmp
in
mov
mov
orb
push
out
pop
into
gs
cmpb
fiadds
rol
outsb
adc
pop
inc
iret
mov
dec
es
dec
and
movsb
push
mov
test
jmp
sbb
imul
inc
popf
sbb
mov
icebp
jo
andb
unpcklps
add
mov
xor
jno
adc
inc
xchg
in
mov
gs
popa
mov
loopne
push
fwait
push
imul
and
xlat
mov
pop
ljmp
jno
cmc
pop
fisttps
mov
clc
cmpsb
cmc
lock
enter
add
xor
push
fstl
dec
bound
sti
movsb
popf
jno
xchg
cli
decl
cmp
adc
test
das
jb
inc
pop
imul
jl
sysenter
ja
out
pop
fidivrs
iret
lods
pop
jmp
or
sub
addr16
and
testl
jnp
std
mov
push
lret
and
mov
loopne
mov
dec
test
cmp
sub
mull
push
and
sbb
cs
into
clc
mov
sbb
lea
xor
or
adc
aaa
dec
fnstenv
movsb
into
adc
xchg
and
push
mov
mov
sub
or
adc
aas
loop
jno
fwait
xor
andl
push
stos
out
dec
hlt
xchg
or
in
jnp
sti
shrb
in
jns
inc
xlat
aaa
pop
or
fistpll
xchg
daa
lret
and
test
push
ja
mov
gs
ja
gs
jb
cli
js
mov
sub
enter
xchg
mov
mov
rorb
hlt
jle
lahf
sub
dec
aas
xchg
cmpsl
popa
outsb
cltd
xor
aaa
lahf
in
arpl
std
push
rcrl
aam
insb
dec
mov
xchg
dec
pop
mov
dec
jecxz
aam
gs
std
push
inc
mov
lahf
jmp
aaa
es
pop
fcompl
push
xchg
insl
or
aas
mov
cmp
sub
mov
inc
jmp
or
das
sub
decl
inc
add
aaa
cltd
fidivs
mov
ds
clc
push
call
outsb
dec
and
lcall
cmp
lcall
shlb
and
cld
iret
out
add
push
sbb
mov
mov
cmp
sub
lret
imull
sub
sub
push
push
pop
add
mov
jno
xor
ret
imul
fiadds
or
ja
or
cmp
xor
sbb
stc
cli
aam
negl
data16
sub
daa
mov
cld
xchg
push
ljmp
mov
fcoml
stos
aas
cs
in
mov
inc
sub
mov
sub
neg
lret
adc
enter
jnp
mov
mov
dec
add
ret
imul
push
out
aaa
pop
jg
les
cmpl
mov
pop
int
pop
add
test
mov
out
mov
iret
fidivrs
ret
dec
lret
mov
sbb
lcall
cmp
add
push
sub
leave
in
jns
insl
jnp
popf
in
test
shlb
cltd
xor
mov
data16
in
in
push
lahf
daa
clc
mov
mov
sub
pop
jno
jle
outsb
popa
pop
pop
pop
fldt
mov
ror
test
push
es
lods
hlt
je
push
jle
sub
push
imul
pop
xor
std
dec
push
idivb
lcall
dec
pop
jmp
mov
pop
addr16
shr
cmpsl
inc
dec
jb
clc
sub
add
std
imul
shl
jnp
adc
nop
std
cmpsl
aas
dec
xor
pop
daa
out
push
sbb
out
pop
mov
fbld
leave
sets
test
xor
push
sub
push
lods
arpl
jg
add
popf
lods
pop
aad
lret
pop
mov
push
mov
leave
mov
fmuls
movsl
pop
out
ja
jne
cmc
fsubs
add
enter
test
add
sbb
es
mov
and
out
das
cmp
icebp
sti
push
jo
arpl
cmp
pop
pop
pop
mov
jle
dec
cmp
aad
push
jmp
out
and
cmpsl
jnp
or
mov
xor
mov
mov
add
adc
sahf
imul
insl
imul
jo
incb
pop
jae
pop
stos
cmpsb
xchg
fbld
push
add
out
imul
testb
or
mov
int3
push
or
sbb
mov
rolb
arpl
rclb
xchg
rorl
pop
and
lcall
cmp
adc
cli
in
stos
add
ljmp
insb
cmp
fwait
inc
mov
lret
and
pop
cs
or
movsl
fwait
xchg
jg
lock
out
mov
imul
fisubrs
add
adc
cmp
dec
xchg
aad
popa
loope
daa
loope
lcall
cmp
sub
pop
insl
xchg
dec
les
je
inc
out
repz
jo
fdivl
lcall
and
xchg
push
push
lret
jo
or
xlat
pop
xor
je
pusha
sbbl
jmp
sub
rcr
sbb
insb
dec
push
icebp
dec
dec
push
jmp
push
jecxz
add
je
xchg
rcr
outsb
mov
lock
repz
adc
add
out
gs
fs
in
ror
jns
ljmp
lock
xchg
pop
or
adc
jle
inc
xchg
addr16
adc
imul
jecxz
push
dec
ljmp
aad
mov
lahf
out
xchg
les
add
inc
popa
loope
ret
fwait
cmpsb
icebp
pop
bound
push
insb
cmp
cli
clc
aas
xorl
call
push
stos
xor
pop
testl
cmc
mov
cmp
xor
xchg
push
mov
and
int3
jg
addr16
inc
fsubr
out
mov
in
mov
sub
mov
add
rorl
mov
lods
hlt
adc
cmp
jl
xlat
inc
mov
cmp
call
stc
mov
rcrb
xor
jmp
sub
repz
jge
aam
lahf
sahf
push
add
pusha
mov
xchg
pop
mov
adc
ss
in
popf
and
add
insb
ret
cwtl
testb
mov
jge,pn
aam
cmp
loop
sub
xchg
addr16
pop
icebp
repnz
addr16
js
in
mov
or
mov
or
cwtl
cltd
cmp
mov
mov
push
leave
bound
pop
hlt
bound
mov
or
mov
test
jmp
popf
cmp
mov
push
lahf
mov
sub
jle
rcrb
dec
in
cmp
outsb
repnz
sub
mov
subl
inc
dec
push
dec
or
bound
test
aad
push
scas
mov
lret
out
mov
lcall
stos
sub
mov
and
jmp
jge
or
std
mov
leave
enter
xor
dec
pop
sub
ds
pop
or
scas
cmp
jecxz
outsb
adc
jnp
add
outsb
push
out
lahf
jge
mov
xor
loopne
push
lcall
jae
fcomip
rclb
jne
les
pop
push
jnp
ret
rcrl
jle
push
adcl
jno
sbb
ret
mov
add
pop
push
ss
cmp
sub
inc
and
inc
mov
inc
out
pop
xor
cmp
mov
jne
push
push
lods
jmp
inc
loop
stos
jge
inc
fldt
xchg
mov
lods
test
sti
inc
popf
in
stc
xchg
cld
in
xchg
subl
sub
testl
aaa
ret
scas
pop
and
in
xchg
lea
mov
ret
rorl
inc
dec
xor
sbb
shr
test
cmp
je
mov
add
adc
cmp
jg
sbb
jmp
imul
aas
mov
dec
repz
push
cmc
fists
fadd
mov
sub
adc
out
call
sbb
mov
test
jg
out
sbb
add
fcomi
fnstcw
sahf
push
lock
fdivl
cmp
sbb
test
jmp
outsb
loop
out
int3
push
nop
imulb
and
divb
jne
pop
cmpsl
xchg
push
cmp
jmp
or
cs
adc
test
xor
dec
ret
repz
test
out
fiaddl
sahf
or
shrl
cwtl
movsb
aaa
or
mov
sub
jle
push
outsb
loopne
mov
jbe
sub
push
in
mov
hlt
mov
out
push
stos
mov
fs
es
pop
testb
jge
mov
sbb
dec
hlt
bound
or
push
cmpsl
fucom
cmp
js
cs
dec
pop
jns
scas
sub
pop
and
add
xchg
mov
icebp
jae
out
cltd
cmp
jl
xor
dec
push
jg
mov
push
dec
mov
xor
sbbl
add
dec
cmp
and
sbb
mov
pop
test
pop
push
mov
xchg
push
sub
test
xchg
icebp
pop
enter
xor
mov
fstl
or
leave
aam
pop
imul
mov
cltd
inc
jo
and
xchg
imul
sbb
pop
xor
pop
sti
push
popf
xor
ja
add
and
int
loope
cs
mov
mov
push
in
sarl
dec
out
mov
mov
jg
lahf
ror
mov
sub
cli
rcrb
sbb
xlat
jns
loopne
sub
push
push
ljmp
ss
gs
popa
fs
add
xchg
xor
cltd
sbbb
imul
into
mov
push
pusha
push
addr16
xor
cmpsl
flds
popa
enter
xorb
pushw
cmp
mov
xor
cmp
push
add
xchg
inc
ja
xchg
sub
leave
data16
push
int
mov
push
sbb
adc
cmpsb
orb
shrb
out
pop
xchg
mov
inc
lods
jmp
xchg
sub
inc
push
sbb
or
pop
mov
cmp
sub
cmpsb
cmp
inc
cs
ficomps
out
js
shrb
roll
cmp
test
pop
xor
icebp
movsb
cld
or
cld
mov
push
loope
adc
push
movsl
test
insb
and
iret
xchg
push
mov
mov
addb
cmp
xchg
push
jbe
and
and
inc
mov
fstp
cs
stos
insb
int
mov
mov
jns
scas
adc
cmp
or
ljmp
mov
ds
call
test
jno
jmp
andl
ds
lea
aaa
subb
adc
dec
loop
mov
je
pop
repz
mov
xor
mov
adc
jecxz
mov
dec
loop
imul
std
cmp
mov
aaa
push
lds
and
cmp
sarl
jmp
jl
push
pop
hlt
adc
jecxz
mov
imul
pop
xchg
jmp
and
sbb
clc
out
arpl
pop
xlat
mov
jbe
mov
jp
into
imul
insl
mull
mov
or
sub
mov
xchg
xor
inc
das
ljmp
inc
jl
enter
imul
mov
fxch
push
pusha
sbb
jae
out
jmp
mov
je
es
addr16
imul
push
fucomip
mov
xlat
xor
pop
bound
jmp
jae
mov
orb
mov
mov
pop
pusha
push
adc
inc
imulb
cmp
je
xchg
cmp
xor
jecxz
out
aas
push
mov
cld
leave
sub
pop
in
mov
sbb
mov
mov
inc
enter
in
push
lds
inc
fdivs
pop
pop
jo
shlb
jbe
mov
mov
int3
sbb
mov
repz
xor
lcall
and
in
xlat
cwtl
es
shr
nop
aas
out
ja
stos
jg
notl
xchg
xor
sub
mov
popl
lds
push
in
adc
mov
dec
jecxz
xor
xor
xor
lods
out
sahf
sbb
sar
and
rclb
popa
in
mov
cmpsb
movsl
or
pop
inc
jle
dec
mov
fistpll
lods
cmpb
xchg
xchg
fdivl
pop
jle
cmp
pushf
hlt
push
or
in
dec
pop
rorb
mov
mov
mov
out
mov
push
lods
add
lds
and
aas
jno
lock
lcall
pop
sbb
daa
ds
xchg
mov
imul
adc
shrb
push
cmc
adc
push
pop
inc
pusha
mov
scas
fbstp
adc
pop
dec
xchg
lahf
mov
outsb
loop
dec
out
imul
inc
out
int
jns
sti
jnp
pop
jne
mov
adc
pop
push
dec
bound
sti
sbbb
cmp
insb
mov
std
jbe
add
and
iret
adcb
push
call
add
out
popa
icebp
mov
decl
mov
stos
cmp
shrl
dec
loop
cmp
sbb
ljmp
popf
add
inc
inc
mov
testl
cli
jp
sbb
sbbl
xchg
cwtl
scas
shr
mov
je
inc
dec
sbbl
out
call
imul
insl
data16
pop
and
fs
sbb
push
xchg
push
insl
inc
pop
pop
repnz
add
jno
repz
dec
jle
cmp
andl
dec
and
test
loopne
adc
arpl
push
imul
sub
inc
add
jg
mov
dec
fcompl
xadd
sarb
xchg
jmp
adc
scas
ret
fwait
sbb
cmp
xchg
push
aad
lock
nop
sbb
movsb
cmp
iret
test
sbb
sub
in
dec
sbb
outsl
cmp
rcrb
notb
xor
cmpl
ret
movsb
neg
mov
outsb
push
inc
xor
jmp
xchg
frstor
testl
std
or
xchg
out
pop
rcll
xor
inc
xchg
push
mov
lods
xlat
adc
xchg
fnsave
jb
push
test
ret
xlat
and
arpl
dec
push
lcall
push
movsb
jo
dec
push
notl
push
mov
fldz
jg
out
adc
mov
jne
test
pop
ficompl
mov
in
lods
movsl
jb
jnp
aas
fdivrp
xchg
pop
test
sbb
sub
jae
mov
out
lret
mov
push
push
inc
pop
jg
xchg
stos
xchg
inc
push
mov
lahf
stos
imul
sub
push
aaa
push
les
frstor
outsb
loope
jo
mov
mov
xor
mov
sbb
or
pop
mov
das
flds
add
cwtl
sub
jae
xor
and
xor
jno
adc
sub
aas
lods
inc
jno
pop
xchg
popf
xchg
mov
cmp
repnz
fcmovu
cmp
into
lret
gs
inc
jb
adc
jl
mov
ret
cltd
jbe
adcl
xchg
or
pop
xchg
out
mov
scas
inc
aas
cmp
loope
sub
enter
jbe
xchg
add
shll
pop
mov
pop
mov
push
xorl
cmc
cmpsl
shll
pop
jb
jge
pushf
fwait
aaa
into
int3
mov
pop
notb
gs
repnz
in
fisttpll
pop
testb
sahf
lods
inc
adc
shrb
inc
fisubrs
cmp
je
test
sbbl
scas
lahf
lahf
adc
inc
push
inc
inc
lret
jb
flds
int
dec
adc
inc
sub
ja
addr16
push
jae
aas
push
inc
mov
inc
fs
sti
mov
inc
fidivrl
pop
popa
mov
daa
dec
aas
mov
sbb
jge,pt
cmp
stc
mov
loope
or
and
scas
mov
movsl
mov
pop
es
jns
cmp
dec
ret
mov
shll
jno
mov
push
arpl
lods
push
fwait
in
popf
mov
or
lret
xchg
dec
test
in
sub
nop
imul
ret
stos
and
push
test
mov
out
jmp
jbe
adc
out
and
sbb
loopne
fstps
dec
fwait
loopne
insl
clc
dec
dec
jg
iret
jns
fisubs
mov
rcrb
arpl
adc
xor
or
push
lahf
jne
int
mov
and
inc
fs
ja
ret
ja
dec
mov
fcmovnbe
sub
pop
out
add
pushf
test
shlb
xor
repnz
hlt
dec
cmp
add
adc
sub
push
pop
mov
xchg
pop
push
lods
jo
lcall
jno
jge
adcb
mulb
int3
hlt
jnp
clc
in
jge
icebp
jns
jge
xchg
pop
lds
sti
stc
add
aas
stos
das
pusha
xchg
add
xchg
xor
sbb
mov
cli
ljmp
jmp
cmpsb
les
xor
jne
sbbl
stc
sbb
outsl
adc
pop
mov
adc
roll
outsl
shlb
xchg
and
inc
xor
cmpsb
and
mov
or
es
stc
inc
inc
hlt
push
test
into
push
sarb
mov
sahf
push
call
sbb
in
cld
fcoml
js
add
loope
lret
xor
xchg
cwtl
mov
xchg
jb
inc
fldt
inc
bound
push
testl
adc
inc
and
int3
sub
fbstp
into
das
mov
lock
pop
ds
aam
mov
xorb
cmc
mov
test
mov
dec
mov
dec
adc
mov
push
dec
xor
sbbl
pop
xor
shll
jecxz
nop
mov
add
add
ja
jne
add
pop
xchg
lcall
jle
xorl
jp
xlat
pushf
mov
aad
pop
enter
pop
push
sbb
bound
out
sbb
decl
jp
mov
fadds
push
sub
xchg
or
test
insb
cli
jbe
aad
xchg
mov
in
outsb
xchg
mov
fmuls
and
movsb
mov
pop
ja
xor
sub
insl
sbb
pushf
loopne
mov
test
xchg
sbb
adc
sub
cs
pop
mov
movsl
ret
adc
shrl
inc
xchg
jg
sbb
ret
push
lds
cs
fadds
out
xchg
hlt
inc
loope
fistl
add
insb
cs
adc
xchg
dec
test
mov
push
and
inc
or
xchg
push
mov
fcmovnb
mov
and
sbb
inc
rcrb
add
push
repnz
jecxz
pop
dec
cmpsl
jb,pt
or
pop
push
mov
dec
cltd
pushf
in
cli
xor
xor
fcomps
movsb
cltd
jae
mov
inc
dec
fildll
xor
loope
and
xchg
cmp
push
mov
repnz
nop
cmp
adcb
inc
and
xor
mov
arpl
sbb
insl
iret
ficoms
pop
imul
lds
fwait
xor
addr16
pusha
sub
or
pushf
and
repz
cmpl
lea
insl
dec
or
xor
push
cmpsb
xor
adc
xchg
mov
les
cltd
xchg
enter
mov
add
xor
sarb
in
add
add
ds
insb
cmp
shll
mov
jp
test
mov
inc
xchg
dec
mov
ret
int
jp
or
hlt
sub
js
mov
repz
sub
mov
sub
sbb
sub
out
pusha
xchg
bound
pushf
std
jmp
imul
jmp
xchg
xor
ret
ret
repz
adc
mov
in
cmc
ret
rol
loopne
and
loope
jmp
cmp
cmp
inc
sbbb
sub
stos
les
outsl
inc
push
stos
daa
orb
xorb
jns
and
mov
and
mov
or
stc
push
movsl
sub
dec
fmull
jbe
flds
fdivl
jnp
pushl
xchg
mov
cmp
aad
push
jp
dec
mov
ret
sti
les
push
sarl
fcmovne
js
mov
les
movsb
sub
lods
push
stc
call
test
mov
in
xchg
cmp
orl
push
mov
in
fs
out
jnp
loopne
xchg
decb
mov
int
cmpsb
dec
cwtl
lods
jns
mov
pop
movsl
fs
jp
and
cltd
sub
sahf
and
scas
loop
aad
imul
fcomps
add
xor
frstor
imul
test
mov
push
mov
fildll
pop
inc
movsl
cmp
mov
test
lret
imul
nop
sub
xor
add
sub
push
pop
xor
sti
and
aam
mov
pop
jmp
cmp
jecxz
or
mov
aaa
pusha
aad
dec
pop
sub
insl
or
enter
je
int3
jg
pop
sti
xchg
jl
dec
repnz
and
mov
mov
ds
clc
lret
ja
in
lds
xor
sub
in
and
cmp
std
ds
and
add
inc
fcmove
jbe
popa
xchg
mov
add
inc
pushf
ret
jne
xor
mov
push
jnp
jle
sbb
shlb
sub
lds
sbb
jl
xor
sub
pop
adc
js
aaa
mov
or
add
mov
dec
jecxz
mov
push
push
or
mov
mov
push
mov
xchg
cli
js
arpl
pop
mov
les
dec
jp
xor
std
lods
mov
test
inc
rorb
mov
leave
xor
push
cmp
push
mov
xchg
ficomps
ja
or
inc
xor
adc
outsl
out
mov
jl
repnz
cwtl
lcall
pop
mov
stos
outsb
shll
mov
push
imul
mov
dec
sarl
roll
rorl
out
hlt
popf
pop
and
lods
iret
push
inc
cmpsl
fs
fsubs
scas
pop
inc
cmp
jae
cltd
arpl
roll
sub
movsl
cmp
pop
mov
icebp
inc
popa
clc
jb
out
test
dec
lea
mov
andb
xchg
sbb
shlb
mov
xchg
mov
pop
jmp
out
sub
outsb
mov
stos
iret
sbb
adc
dec
rcl
xchg
jb
pop
cltd
sub
popa
orl
adc
out
jge
jnp
out
out
xchg
cmc
out
daa
inc
mov
into
jno
mov
cltd
dec
xor
lahf
or
push
icebp
sbbb
adcb
pop
push
arpl
sbb
nop
sbb
popa
test
loopne
mov
push
mov
dec
loope
sub
and
push
arpl
mov
imul
dec
mov
test
sub
mov
and
jp
xor
mov
std
rcl
scas
cmp
bnd
loope
fwait
xlat
imul
mov
popf
scas
push
icebp
clc
push
ret
sbbl
add
sbb
jp
sub
adc
data16
xchg
idivl
sub
and
sbbl
mov
pop
push
mov
dec
hlt
pop
fistpll
dec
int
lcall
push
push
inc
bound
out
or
mov
mov
mov
in
add
sbb
mov
pusha
jmp
das
cmp
pusha
mov
aam
shrb
cmp
xchg
mov
ret
cwtl
out
push
cmp
fimuls
cmp
popa
mov
jg
inc
fwait
dec
cmp
dec
xor
jbe
ljmp
lret
or
mov
xchg
in
or
enter
sbb
xor
push
push
sbb
rcrl
xor
xchg
mov
mov
daa
aad
cmpsb
or
imulb
or
inc
hlt
mov
push
sub
dec
dec
sub
outsl
sub
mov
or
dec
sbb
and
or
push
sbb
into
and
xor
in
lahf
notl
sbb
or
mov
in
jnp
cmp
pop
stos
je
or
and
push
lahf
ffreep
test
push
xchg
adc
mov
int
pop
cmp
test
outsl
inc
push
add
and
xor
mov
aas
push
push
mov
sub
sbb
jo
sbb
mov
ja
pop
pusha
movsl
xchg
fdiv
lods
shll
mov
subb
push
mov
iret
pusha
sbb
xchg
lock
lods
movsb
mov
cs
jle
or
cmp
lahf
mov
push
and
jg
rcl
jbe
mov
in
scas
outsb
aas
sbb
dec
mov
sbb
in
daa
inc
cmp
pop
adc
mov
pop
cld
xlat
or
cmp
sub
dec
sti
mov
sbbl
nop
movsb
push
mov
test
daa
scas
cmp
cmp
jb
rorl
fwait
and
aaa
test
and
inc
or
inc
rcrl
adc
loop
or
push
sbbb
add
mov
and
add
pusha
adc
or
mov
test
xchg
cmp
aad
mov
addr16
or
adc
je
imul
push
popf
out
sahf
xchg
sbb
sahf
xor
mov
dec
and
dec
stos
inc
iret
pop
ds
pop
imul
add
insb
lea
js
add
shlb
loopne
jns
out
lock
adc
lahf
and
les
push
popa
adc
or
adcb
mov
inc
mov
push
rcr
shll
push
mov
sub
jo
pop
addl
imul
lcall
and
cli
add
rcr
fwait
inc
in
xorl
imul
dec
or
mov
insl
inc
xchg
jnp
ja
cmp
rep
inc
call
test
dec
sbb
fsubp
push
fimull
mov
je
ret
ja
cmc
xchg
jmp
cmc
aaa
jle
loope
sbb
aas
cwtl
loopne
nop
bound
inc
icebp
mov
fdiv
cmp
pop
push
and
xor
pop
push
loopne
cmp
mov
cltd
stos
or
icebp
or
or
inc
pop
js
adc
insb
leave
sub
mov
mov
test
mov
cmp
inc
fdiv
dec
repz
add
lcall
imul
scas
out
pop
dec
mov
scas
inc
scas
add
imul
inc
push
inc
hlt
or
sahf
stos
aad
icebp
sub
es
adc
xchg
sahf
loop
cmp
icebp
jo
push
repnz
mov
mov
shlb
fnstcw
les
enter
mov
and
sub
push
push
mov
aas
mul
or
imul
fcmovu
mov
jp
call
jp
lret
aas
mov
pop
aaa
into
mov
sti
xor
jnp
shl
repnz
dec
es
lds
enter
dec
adc
mov
arpl
mov
movsl
sahf
cmc
wbinvd
lret
mov
pop
xchg
mov
ljmp
pop
and
sarb
test
dec
sub
inc
pushf
stos
mov
mov
sub
shlb
mov
lret
xor
addb
sbb
and
add
xchg
push
test
mov
sub
mov
xchg
fldenv
das
xor
fprem
xor
test
insl
xchg
incl
stos
inc
xor
movsb
aam
aad
cmp
popf
loop
rcl
subl
mov
into
push
flds
shrl
jge
fisubrl
pop
lods
std
outsb
rcrb
jo
and
pop
imul
daa
fadds
gs
xlat
jmp
mov
ret
sbb
shrl
and
lods
mov
loop
lods
stos
inc
fdivrp
or
push
xlat
cwtl
cmp
pop
pop
out
adc
out
fiaddl
cmpsl
popa
sahf
mov
popa
aam
cltd
mov
pop
jmp
sbb
mov
xchg
and
sarl
push
jne
mov
adc
les
mov
xchg
dec
jae
dec
rclb
cmpsl
fwait
mov
jg
mov
mov
cmc
shlb
test
or
aas
push
filds
lahf
adc
xchg
cmc
movsl
scas
stos
push
push
mov
testl
sbb
fstl
clc
xchg
popf
jecxz
xor
jp
ds
dec
fildll
cmp
push
loope
pushf
stos
push
push
pushf
ja
ss
add
pop
cli
inc
add
scas
rcrb
inc
pop
sahf
cld
gs
push
and
aas
push
cmp
mov
pop
cs
fs
daa
xchg
and
cmp
inc
enter
mov
mov
fisttpll
xchg
out
push
and
mov
iret
sub
inc
xor
cwtl
andl
sbb
icebp
jns
jg
and
out
lea
clc
or
mov
sbb
mov
testb
or
lods
cmp
data16
test
out
scas
into
mov
sbb
call
push
cld
xlat
mov
enter
dec
out
lcall
push
jno
cmp
pop
gs
add
jmp
data16
fistpl
xchg
je
out
push
insb
inc
fiadds
lahf
andl
xlat
mov
push
ja
loopne
in
adc
mov
ds
xor
fadds
xor
mov
cld
and
pop
outsb
clc
test
cmpsl
pop
jnp
pushf
in
int
jmp
dec
loopne
mov
imul
add
es
subl
and
dec
jae
shrb
jmp
ljmp
ljmp
call
mov
imull
stos
inc
pop
loope
lcall
fwait
sbb
or
cwtl
sub
pop
aaa
push
ret
sbb
inc
mov
mov
xor
lods
sbb
shrl
jno
xor
test
mov
jbe
jmp
pop
inc
sti
sti
out
ja
sbb
dec
iret
mov
in
je
sub
outsb
ja
fwait
call
cmp
int
and
cltd
addr16
fwait
cmpsb
shrl
dec
popf
and
ds
mov
shll
and
sbb
sbb
repz
out
adc
rcr
outsb
lahf
sbb
dec
fmul
sbb
imul
shll
mov
in
daa
add
pop
sub
cmpsl
fiadds
inc
mov
xchg
sbb
lds
pop
imul
nop
outsb
add
mov
jp
lcall
dec
inc
popa
and
lret
cmp
sub
xchg
push
test
xor
pop
orb
xchg
cmp
icebp
pop
mov
push
out
sbb
jne
out
add
testb
add
add
inc
xchg
sbb
lcall
sbb
or
mov
jmp
lcall
adc
push
pop
pusha
inc
ret
dec
xor
arpl
sarb
and
xor
push
lods
jl
ja
popfw
test
mov
and
js
les
dec
cltd
push
repz
out
fsubrs
or
popa
insl
pop
pop
ds
push
popf
aaa
sub
mov
dec
int
leave
hlt
repnz
xchg
mov
cmp
fisubl
sbb
lock
mov
adc
test
pop
mov
dec
sbb
fwait
arpl
push
pop
sub
adc
imul
xchg
sub
dec
mov
add
push
arpl
lret
mov
and
fidivrs
mov
outsl
out
mov
pop
dec
inc
ljmp
out
scas
xchg
push
flds
jae
sbb
jno
das
and
cmp
stc
cld
mov
bound
jp
iret
pusha
inc
xor
fistps
mov
mov
lret
shl
cmpsl
sbb
rclb
stc
aad
sbb
xchg
push
cmpsl
stos
loop
addb
loop
imul
mov
mov
jns
dec
cs
inc
jno
cld
xchg
js
sbb
jnp
mov
adc
je
add
ret
data16
inc
dec
pop
mov
push
leave
loop
jae
test
push
movsb
or
adc
cmp
cmpsl
add
pop
into
cmp
and
fsubrl
adc
inc
fidivs
push
jb
pusha
sbb
shll
sbb
adc
sub
fwait
sahf
mov
movsl
jns
cmp
mov
cwtl
repz
sbb
call
or
push
and
add
xchg
dec
xlat
imul
fs
clc
imul
lahf
inc
loopne
cmpsb
jne
xchg
bound
iret
xadd
outsb
fidivl
sub
pop
mov
push
dec
xlat
sbb
insl
cwtl
and
xchg
icebp
pop
lods
mov
mov
or
jmp
jo
pop
jo
inc
lss
sarl
cmp
mov
imul
sub
sub
and
jae
pusha
cltd
insl
int
sub
dec
cmpsl
inc
inc
adc
jecxz
gs
xor
push
adc
lds
or
jne
jg
pop
insb
out
mov
inc
stc
stos
push
push
cmpsb
enter
sbb
cwtl
adc
test
mov
xor
shll
icebp
dec
loop
push
adc
js
sub
pop
loop
push
pop
ds
add
aaa
fcmove
stos
xchg
call
pusha
negl
inc
sti
push
jb
xchg
push
push
sbb
adc
and
cmp
push
add
pop
cmp
inc
out
push
cld
lcall
pop
mov
jg
fcmove
mov
push
push
in
adcb
xor
das
nop
movsb
add
pushf
insl
mov
push
or
mov
mov
test
inc
daa
lds
jmp
mov
arpl
push
jb
aaa
xlat
outsl
mov
in
mov
movsl
mov
orb
repnz
cmpsb
pop
sahf
xlat
jnp
dec
mov
ret
mov
insl
testl
into
adcl
xor
dec
loop
rcrb
out
lahf
hlt
push
inc
cld
fsub
outsl
fldcw
shlb
rcrl
mov
mov
mov
lods
fidivrl
or
jb
push
and
leave
test
xor
push
in
lds
out
mov
inc
xlat
jbe
notb
jbe
jecxz
xor
or
push
push
nop
icebp
xor
test
cs
aad
cli
sbb
sub
bound
mov
test
decl
cmp
adc
sarl
sarb
nop
mov
xchg
sti
xchg
lret
out
xor
mov
sbb
nop
shrb
pusha
hlt
jge
in
ljmp
xchg
mov
shrb
sbb
dec
pop
add
lock
mov
adc
mov
pop
xorb
subb
push
mov
sahf
cmp
xchg
sub
add
out
orb
incl
pop
aas
mov
in
xchg
add
mov
lea
sub
mov
jmp
or
fistps
fwait
or
int3
cmp
add
scas
push
arpl
xchg
repz
fdivl
dec
mov
outsb
xchg
ja
or
cvtps2pd
pop
xor
ljmp
inc
movsl
nop
test
fstpl
dec
pop
push
dec
mov
popw
iret
xchg
fwait
int3
lock
clc
mov
cmp
add
adc
rorb
cmp
test
movsl
aas
push
or
mov
insl
scas
bound
rcl
xchg
sbb
arpl
sbb
inc
xlat
rcrl
adc
ljmp
daa
pop
mov
xchg
jg
dec
icebp
jae
movsl
jg
xchg
js
iret
testb
lds
sbb
push
jns
sbb
bound
in
push
xor
xor
cltd
aad
xchg
inc
push
push
das
into
das
mov
and
push
adc
mov
out
pop
inc
xlat
adc
int3
inc
or
mov
data16
xor
mov
fsubrl
sub
and
mov
add
sub
les
jae
ds
sbb
mov
fildl
xor
pop
add
mov
lret
mov
jle
adc
testb
jge
js
enter
inc
push
mov
in
pusha
mov
out
sbb
lds
daa
xchg
mov
jb
stos
push
jnp
shl
inc
dec
lods
jle
jae
adc
divl
pop
mov
inc
arpl
sub
ljmp
mov
add
and
into
xor
add
je
test
clc
lret
add
mov
push
rcrl
loopne
cli
adc
movsb
je
ljmp
jno
lock
pusha
mov
adc
mov
insl
pop
cmp
repz
ljmp
push
push
xor
lahf
xor
aas
decb
lahf
or
pushf
and
add
push
outsl
pop
xor
int
adc
popf
stos
cmp
pop
daa
sbb
jne
xor
lahf
pop
lcall
sub
dec
push
xor
inc
mov
fldt
pop
add
ss
xor
fnsave
adc
xchg
andl
mov
shll
scas
roll
iret
push
call
rclb
or
notb
stc
sub
stos
mov
bnd
call
rcl
jns
loop
test
mov
out
push
mov
sar
sub
int3
ret
push
stos
xor
mov
lret
jns
sbb
ja
sub
xchg
lock
dec
fsubrs
mov
insl
test
dec
imul
stos
jno
push
mov
sbbb
out
sti
push
lock
divps
or
fstpt
out
jo
jno
and
add
and
xor
test
lea
shlb
pop
cli
es
into
xor
stos
adc
sbb
jl
dec
mulb
shlb
cmpb
cld
cmp
or
push
add
mov
clc
sbb
xchg
and
repnz
jbe
stc
mov
daa
ja
outsb
lahf
ja
mov
and
je
inc
sbb
jae
popa
iret
movsl
adc
cli
push
jmp
shrb
fldt
lds
or
and
xor
rorl
cmp
test
mov
lret
rcl
xchg
and
jo
outsb
lahf
es
adc
and
sbb
test
fcomip
or
xchg
test
cli
pop
fst
sbb
mov
stos
movsb
xlat
lods
xchg
inc
leave
pop
push
movsl
aam
sub
sub
ret
in
subb
movsl
inc
pop
and
jmp
push
outsl
movsl
sbb
stc
inc
fsubrl
pop
mov
cmp
jns,pn
or
sbb
pop
scas
pop
fiadds
imul
das
ret
or
jo
pop
mov
xor
repz
insb
into
jecxz
mov
mov
xor
mov
jbe
daa
adc
and
adcl
daa
jns
mov
push
xchg
ds
mov
fstpt
sahf
fwait
pushf
ss
mov
adcl
pop
cmp
xchg
cmp
mov
cmp
xchg
mov
xrelease
lods
xchg
pop
cltd
aam
xchg
and
sub
sbbl
ljmp
insl
rorb
fwait
inc
ficoms
mov
push
popf
jae
insb
push
xchg
xchg
sbb
lcall
sbb
pop
outsb
es
lcall
cmp
and
push
xchg
xor
or
mov
and
call
mov
cmpl
adc
popf
loop
push
movsl
notb
jb
sub
aaa
pop
cmc
inc
leave
sub
adc
imul
xchg
daa
jmp
icebp
addb
sub
inc
dec
in
addr16
add
cli
inc
movb
in
out
xor
mov
enter
or
add
xor
das
sub
sbb
repz
icebp
xor
ret
jb
das
mul
sbb
shlb
cwtl
lret
repnz
dec
xchg
mov
bound
int3
jb
stos
lret
mulb
insl
sub
xor
fadd
lret
leave
idivl
or
sbb
insl
mulps
mov
outsl
xchg
ror
cmc
call
xchg
add
mov
repz
test
or
jb
outsl
int3
das
jp
les
sti
push
jno
jae
ret
sbb
xchg
xor
or
lret
add
mov
push
lods
and
cli
daa
js
adc
cld
test
scas
stos
and
xorb
push
clc
jno
push
inc
adc
push
lods
or
mov
jl
push
mov
cmpsb
ja
cltd
leave
inc
pusha
inc
mov
xlat
imul
cltd
test
arpl
clc
push
rorb
push
test
fstl
mov
or
push
jns
pmulhuw
pop
dec
movsb
fdivl
fsub
addl
out
sahf
ret
jp
cmp
les
lods
arpl
push
or
pop
pop
or
cs
cmpsb
cmp
add
dec
in
sbb
mov
mov
fcompl
fistpl
mov
xor
cmp
out
das
and
mov
je
shll
loop
pop
mov
mov
xchg
cs
iret
cmc
mov
in
ret
pop
mov
and
pop
mov
rcr
push
adc
xor
aam
sbb
es
data16
xchg
inc
mov
int
test
das
mov
lods
mov
ds
inc
sbb
int3
lods
mov
cmp
cmp
pop
lds
ret
inc
ljmp
push
mov
push
push
or
or
std
fists
mov
mov
sub
push
mov
in
push
sbb
jno
pop
pusha
xchg
mov
les
push
cmp
xor
pop
mov
dec
lahf
pop
notl
xor
pop
pop
enter
cltd
pop
sub
scas
add
xchg
mov
mov
dec
out
and
pushf
jge
add
xor
and
into
sahf
xor
xchg
and
gs
loop
cmpsb
push
add
stc
pop
insl
add
sbb
mov
fisubrs
arpl
mov
mov
xchg
int3
arpl
sbb
dec
cmc
and
or
int3
arpl
repz
sbb
pop
sub
mov
fs
int
jae
dec
push
and
fst
jae
pop
inc
mov
out
les
push
cltd
pop
sub
jmp
addl
pop
lcall
and
ss
aad
cmpsl
subb
pop
out
pop
popa
lock
push
mov
ret
xlat
and
std
loop
lea
in
pusha
mov
xchg
xor
or
ljmp
sub
or
inc
jne
add
mov
sbb
rorb
and
inc
cmc
xor
xchg
dec
mov
cmp
je
out
pop
or
inc
xchg
xchg
roll
mov
mov
cmp
dec
mov
fcoml
push
setp
inc
fwait
lock
fsubs
mov
xchg
lahf
mov
inc
mov
lods
mov
inc
ja
stos
lods
ret
stos
insl
jp
xchg
pop
push
pop
push
movsb
push
aaa
ficoms
in
pop
mov
jbe
stos
out
and
jb
scas
ja
pop
pop
ret
fldenv
aas
mov
test
push
dec
pushw
xchg
add
and
cmp
pop
mov
or
xchg
cmpsl
jne
sub
cmpsb
push
das
jg
outsb
js
scas
sub
pop
xor
pop
repnz
mov
mov
and
cmpsl
mov
in
repnz
jne,pt
lods
adc
sub
inc
bound
aaa
xchg
shr
in
xchg
outsl
das
aas
mov
icebp
test
stos
shrl
sub
jb
mov
jmp
jo
jo
sbb
mov
pop
fcomip
sbb
imul
loop
pushf
loopne
push
cwtl
sbb
fists
into
mov
jae
push
mov
cld
aas
sbb
mov
repnz
into
sarb
ret
mov
jbe
in
hlt
int3
outsb
inc
outsb
cmp
lahf
lods
xlat
jge
lcall
mov
add
push
inc
imul
popf
xchg
nop
rcrb
das
dec
cmp
mov
sub
ds
dec
je
fidivrl
and
inc
push
stc
jns
jmp
negl
movl
sbbl
fimull
das
ja
orl
les
testl
push
pop
fbstp
jmp
dec
loop
xchg
dec
es
lea
jecxz
xor
cmc
jns
in
inc
cs
push
dec
fcompl
dec
jne
repnz
mov
loope
cmp
cwtl
xor
and
adc
mov
or
add
stos
xor
dec
fincstp
subl
add
cmp
imul
xchg
or
pop
in
sbb
cmp
test
stos
pop
test
ror
adc
adc
sbbb
xor
cwtl
call
stc
inc
xlat
imul
scas
jo
std
sbb
sub
scas
sub
jecxz
stos
loop
jne
in
icebp
mov
lock
lea
cmpsl
sub
pop
repnz
push
mov
sub
outsl
insl
mov
ret
push
adc
sbb
fsubrp
sbb
mov
dec
inc
jecxz
cmp
dec
rcll
int
adc
clc
mov
jns
lea
mov
jl
lret
cmpsl
pop
arpl
xchg
jns
push
aad
mov
inc
inc
test
rep
xchg
inc
push
sbb
lds
pop
insl
stos
mov
pop
je
movsl
mov
sahf
lods
or
inc
in
je
arpl
shlb
xchg
ljmp
es
mov
cs
int
pop
repz
stos
push
push
movsl
push
xlat
jge
test
jecxz
lock
fcom
imul
or
or
mov
sub
pop
mov
mov
cmpsl
mov
xor
sub
scas
les
mov
jle,pt
sub
jo
xor
jo
xor
mov
jl
pop
mov
sbb
sub
xchg
dec
dec
loopne
jne
pushf
hlt
dec
fwait
add
mov
iret
test
sarl
xlat
test
fstl
push
xchg
pop
sbb
xchg
mov
lea
imul
push
push
cwtl
iret
es
or
pop
jl
jp
repz
and
loope
fmuls
in
xchg
inc
or
jmp
out
incl
jle
lods
shrl
adc
inc
shll
mov
call
pop
mov
insl
sbb
sbb
adc
test
daa
mov
pop
in
test
jns
and
pop
fnstcw
pop
lcall
cwtl
loop
rcrb
xor
sub
mov
popa
faddp
push
add
loopne
incl
mov
push
jecxz
mov
mov
vsubpd
js
cld
dec
add
cmp
push
repnz
movsl
inc
jp
jge
loope
mov
xchg
add
lds
mov
adc
out
mov
pop
xchg
push
fucom
sahf
cmp
push
cs
dec
mov
aam
pop
xchg
arpl
negb
xchg
mov
mov
xchg
sub
es
add
xor
pop
imul
inc
lods
push
mov
cmp
sahf
dec
push
adc
mov
sub
jecxz
mov
xor
sub
or
fprem
lock
mov
fnstenv
fisttpll
testl
push
stos
xor
fdivl
xor
test
mov
mov
dec
aas
push
xor
xor
iret
push
xchg
xchg
lahf
mov
adc
inc
fsubr
int3
xchg
or
decb
xor
mov
mov
xchg
daa
adcb
mov
cmp
sbb
and
push
jp
or
testl
into
leave
je
ffree
pop
cwtl
dec
test
jle
fistpll
push
xchg
sub
data16
push
mov
daa
cmp
andl
les
add
pop
aad
xor
push
mov
sahf
js
and
pop
test
aas
in
mov
mov
stos
and
cltd
mov
shll
adc
push
jno
in
xchg
hlt
push
push
pop
mov
in
int
mov
loope
mov
cmpsl
jns
xlat
out
ret
jmp
cmpsl
testb
dec
xchg
xchg
inc
dec
push
jmpw
into
aad
sti
mov
mov
sbb
mov
mov
push
mov
adc
jmp
xor
jg
mov
daa
popf
daa
mov
dec
sti
add
jae
loope
push
dec
aas
push
in
sub
add
dec
sahf
test
jbe
pop
inc
adc
stos
sub
popf
xor
xchg
xor
enter
insb
sbb
mov
dec
ds
mov
inc
imul
adc
insl
cmp
gs
insl
inc
add
mov
mov
mov
in
jg
cmp
xor
mov
nop
cs
adc
stos
push
leave
loope
adc
sbb
or
cmp
lds
pop
adcb
iret
iret
testb
sahf
xor
lods
pop
repnz
cmp
leave
sbb
mov
ljmp
in
and
cwtl
imul
or
shr
jnp
adc
lods
das
in
jns
lret
mov
sbb
mov
mov
addl
lds
test
jle
cltd
ljmp
jnp
and
addr16
pop
shll
mov
loopne
pop
jns
dec
loope
push
call
dec
lds
popf
mov
int
mov
loopne
pop
and
mov
pop
scas
out
dec
sahf
xor
sub
cmp
insl
cmpsb
cmp
cmpl
inc
icebp
movsl
ret
and
push
cmpsb
adc
add
icebp
xor
ja
push
push
lret
add
shrl
int
push
in
pop
bound
call
cmp
push
sub
fstpt
js
push
xchg
xchg
insb
lret
icebp
insb
adc
push
dec
xor
loop
jge
into
or
in
xchg
adc
js
cmp
jb
stos
sbb
in
mov
dec
rolb
cmp
pop
insb
ss
ds
mov
int
jnp
imul
mov
adcb
test
stos
pop
jp
cld
stos
jns
xchg
xchg
les
aaa
into
shlb
sub
addr16
out
cmpsb
pop
icebp
mov
test
mov
stos
dec
mov
pop
dec
loopne
pushf
vxorps
dec
push
jecxz
lahf
xlat
hlt
aam
cmp
and
daa
pop
dec
shrl
pushf
jg
repz
cltd
lods
js
dec
push
sub
mov
mov
mov
mov
sbb
xor
dec
negl
mov
dec
dec
ret
jp
pop
cmp
mov
push
jae
aad
nop
punpckldq
call
addb
sbb
and
xor
icebp
jnp
outsb
xchg
clc
dec
or
mov
dec
add
cmp
sbb
out
push
in
lret
fsts
xchg
scas
and
loope
jb
mov
xchg
jbe
mov
lret
sti
xor
cltd
jecxz
cli
adc
and
mov
xor
fstl
call
cmp
aam
fcoml
fidivs
dec
ficoml
lea
xor
cmp
push
and
sbb
jge
mov
push
xor
jne
lret
xlat
stc
dec
or
sbbl
push
cmpsl
in
mov
sti
jmp
stc
cmp
mov
push
pusha
xor
adc
or
pop
dec
popa
jmp
and
jg
test
sarb
jae
stc
dec
add
les
mulb
xor
pushf
adc
pop
ds
or
shl
aas
dec
js
rolb
test
aam
inc
or
in
xchg
adc
hlt
inc
add
add
pop
orb
mov
jl
shll
dec
jp
mov
shrl
addr16
repz
cld
sti
jns
flds
inc
popa
pop
and
adc
imul
adc
add
loopne
outsb
adc
xchg
or
cmc
mov
jge
mov
sarl
out
add
mov
enter
push
int
inc
pop
mov
pop
data16
xchg
jl
lods
lods
shlb
in
mov
test
pop
inc
stos
mov
mov
clc
fisubrs
or
mov
insl
repnz
sbb
pop
jnp
in
testl
dec
jmp
lds
enter
pop
push
mov
fdivrl
pop
cmp
fsubl
lea
jb
fisubs
paddusw
and
add
xor
xchg
sub
adc
call
push
jle
mov
je
fsub
dec
int3
loopne
mov
cwtl
fistpl
mov
or
xor
inc
movsl
clc
mov
mov
adc
push
mov
dec
and
jne
push
sahf
xor
test
out
test
icebp
add
push
sar
lock
mov
test
aaa
push
ss
or
sub
push
sbb
xor
adcb
or
pop
ja
ss
dec
add
jnp
dec
aam
nop
ljmp
sbb
stc
dec
fwait
xor
int3
inc
subb
xchg
mov
pushf
rcll
push
jp
movsb
and
push
add
jne
cmpsl
icebp
pushf
adc
and
mov
into
insb
and
pop
push
lea
fdivs
movsl
inc
add
cmp
into
xor
adc
repz
repz
mov
int
daa
out
testb
ret
or
dec
es
nop
test
mov
push
popa
out
iret
int3
cld
inc
push
lods
stos
xchg
test
sub
daa
or
mov
cwtl
pop
cmc
and
jne
sub
test
push
aad
lds
cmp
jl
push
add
int
movsl
push
jecxz
add
inc
jp
andl
pop
loopne
ljmp
movsb
mov
push
add
decl
and
aad
and
sbb
and
leave
mov
mulb
inc
in
mov
sahf
cmc
gs
incl
cmpsb
faddl
mov
mov
das
mov
xlat
stos
cmp
dec
mov
jnp
sbb
stc
ret
loop
dec
pop
push
dec
inc
out
imul
and
popl
xchg
adc
out
jae
idivb
lods
inc
push
shll
push
mov
adc
lds
adc
and
jmp
loopne
out
and
dec
mov
repz
lds
lcall
or
cmpxchg
cmc
rcl
fcompl
in
cmpsl
mov
imul
mov
das
stos
push
push
sbb
cmp
sti
in
fdivrs
pop
push
enter
mov
mov
sahf
mov
xchg
xchg
insb
int3
leave
sbb
je
sbb
push
int3
lea
sub
icebp
fistps
xor
inc
xchg
add
mov
sbb
es
fabs
dec
pop
out
fsubr
aad
or
adc
and
mov
std
aaa
loope
jne
test
ret
xchg
or
push
les
pushf
cmpsl
mov
cli
and
or
stos
add
dec
xorl
mov
sahf
adc
mov
mov
enter
lahf
jno
clc
pop
inc
pop
pop
add
pop
outsb
mov
xor
fistpl
fsubrp
inc
xchg
js
xor
cmpsl
and
pusha
pop
sbb
xchg
nop
xchg
inc
out
gs
jl
mov
jmp
loop
out
loope
cmpsl
lcall
jg
or
je
aaa
shll
adc
mov
call
push
inc
push
int3
mov
and
sub
test
insl
add
mov
out
getsec
push
mov
movsl
mov
jecxz
push
jge
mov
sbb
repz
push
xchg
pop
lea
jecxz
pop
or
inc
repz
sub
add
add
cmpb
aaa
push
mov
sti
lea
rorl
rcrb
imul
addr16
mov
int3
push
and
dec
pop
into
lcall
and
xchg
add
lret
cld
mov
out
add
push
das
es
and
lea
sub
rcrb
jbe
inc
mov
je
test
xor
pusha
lret
lcall
inc
ljmp
fldenv
jl
js
pushl
bound
scas
lods
fwait
pop
cpuid
xchg
and
leave
lds
ldmxcsr
xor
cmpsb
call
dec
sub
mov
jge
mov
test
sbb
sbb
push
lcall
push
inc
push
roll
divl
addr16
gs
leave
add
stos
push
dec
rep
jbe
aad
repnz
pop
dec
les
aam
jecxz
iret
fldl2t
leave
inc
aaa
push
orb
gs
sahf
bound
mov
mov
mov
test
or
mov
mul
ret
jp
jg
mov
push
cmp
sbb
out
push
insl
test
push
mov
xor
cmpsl
pop
in
and
dec
loopne
jge
mov
sbb
push
mov
cmc
jecxz
rcr
je
cmpsl
imul
cltd
push
sub
xchg
dec
jge
jl
jne
and
insb
add
nop
adcb
mov
push
mov
je
dec
out
faddl
push
cmp
movl
push
push
nop
fwait
pop
inc
mov
hlt
lea
xchg
montmul
cmpsb
xor
pusha
fisttpll
lods
ffree
fwait
sti
or
fisubl
inc
adc
out
enter
add
mov
xchg
bnd
repz
bound
cld
out
test
es
imul
mov
aaa
cld
sub
pushf
sti
cmp
lea
popf
pop
clc
gs
outsb
jo
in
rclb
jo
into
dec
mov
dec
cmp
pop
jg
lcall
gs
outsb
lret
cmp
pusha
or
jle
xor
xchg
std
inc
mov
cmp
in
sahf
arpl
int
mov
cmp
rol
or
std
or
int
lret
loop
out
lcall
cld
xor
inc
fistpll
dec
push
xor
imul
xor
sub
inc
cwtl
push
xor
scas
cmpsb
mov
or
ja
push
lds
divb
sbb
mov
sub
xchg
aaa
sbb
aas
or
jo
sti
sarb
xchg
sub
pop
es
xorl
jge
push
mov
and
push
push
fwait
xor
aaa
gs
js
orl
data16
insl
mov
push
jecxz
js
sbb
or
out
push
jmp
and
dec
in
jb
sahf
jle
js
push
or
mov
scas
popf
mov
mov
dec
es
jae
jle
ret
jmp
cli
mov
dec
int
mov
pop
jbe
jno
push
aam
bound
arpl
mov
adc
ljmp
and
or
sub
xchg
aad
mov
xlat
clc
cmp
cld
cmp
popf
and
xchg
call
addb
ljmp
lahf
insb
mov
mov
jge
rcl
jae
mov
lret
jl
jle
data16
ffree
insl
sub
push
rorl
jle
xor
clc
jl
hlt
loope
orb
sub
or
cmp
xchg
outsl
dec
sub
cmpsb
scas
or
cmpsb
call
inc
ja
cmp
outsb
cltd
fs
shlb
mov
movsb
jp
adc
jo
stos
sub
mov
ss
inc
dec
pop
daa
pop
imul
ss
push
jne
popa
fistpll
mov
cmp
sbb
adc
stc
jmp
mov
mov
adc
sub
inc
stc
mov
outsl
push
ret
inc
adc
ds
fsubs
jne
push
jmp
xor
in
lret
aaa
pop
jb
jl
sbbl
sub
incl
mov
dec
in
ss
gs
test
pop
xchg
sti
xchg
mov
loopne
inc
ficomps
leave
or
jno
sbb
xor
jns
dec
daa
adc
scas
test
mov
or
xchg
cwtl
shl
xor
inc
jge
xor
push
rorl
xchg
stc
mov
loopne
adc
jmp
je
popf
jo
inc
and
popf
clc
aas
lret
les
adc
mov
jle
add
orl
dec
dec
cwtl
test
dec
mov
mov
mov
iret
fldt
push
push
cmc
mov
mov
fisubl
mov
lret
gs
push
sbb
scas
push
ficompl
and
xchg
mov
sub
loopne
push
inc
adc
cmpsb
pop
outsb
push
dec
movsb
pop
pop
enter
orb
and
arpl
mov
pop
call
mov
dec
jg
xchg
mov
aam
cmp
pusha
or
dec
pop
sub
fidivrl
shlb
or
sbb
movsb
push
ret
rorl
es
lds
push
and
insl
sub
lock
adc
jge
pop
clc
push
sbb
mov
iret
fldt
mov
add
pushf
and
adc
test
pop
in
adc
mov
enter
movsl
and
xchg
idivb
and
test
mov
pop
jl
cmp
push
sub
cmp
je
sahf
xor
fdivrl
mov
or
mov
int3
sub
pop
stos
inc
clc
jb
data16
inc
lret
repnz
popf
call
rcrl
es
xor
daa
cmp
jne
pusha
xchg
sbbb
adc
inc
ror
mov
jle
inc
cmc
push
lds
ficomps
or
ja
lods
push
mov
shlb
repnz
outsb
inc
and
ret
push
int
and
cmpsl
or
mov
sbb
and
xchg
cmpsb
push
in
mov
inc
imul
add
imul
stos
in
daa
outsl
leave
cmp
xor
cmp
pusha
hlt
jnp
movsl
cld
popa
pushf
js
push
jnp
into
insl
rol
pop
sub
mov
enter
out
bound
je
jne
jle
testl
mov
xor
xlat
imul
pop
clc
cmp
add
sbb
jne
arpl
cld
mov
std
sbbl
iret
scas
push
sbb
xchg
or
cltd
data16
lods
push
lahf
cmp
pop
aaa
sub
cmpsl
bnd
mov
sub
cmp
shlb
dec
pop
mov
rorb
adc
cmp
xor
clc
stos
inc
xchg
jbe
movsb
xchg
xor
sbb
movsb
mov
in
rorl
mov
in
push
mov
push
pop
in
addl
repz
data16
fdiv
xchg
cs
cli
into
gs
mov
in
in
add
dec
cmpsb
loope
jb
mov
fists
int
bound
sub
mov
push
in
mov
sub
sbb
lahf
clts
ffreep
je
out
test
clc
sub
insl
testb
mov
cwtl
pop
in
lret
int
fdivrs
cltd
fwait
out
xchg
inc
sbb
sbb
mov
dec
adc
dec
xor
and
ret
dec
fldl
rcl
jl
mov
lret
subl
xor
lret
cmpsl
imul
or
cmp
add
cmp
dec
sub
pop
push
mov
fdivrl
and
imul
xorb
fldt
test
xor
iret
adc
push
cmp
cs
lea
xor
jl
mov
lahf
or
insb
in
movsl
or
sbb
push
sbbb
ret
mov
aad
add
dec
dec
adc
sahf
xor
sar
jne
repz
jns
arpl
rol
pop
mov
xchg
sub
ret
scas
out
push
mov
inc
das
nop
daa
mov
shrl
and
lock
gs
das
xchg
mov
push
out
stc
adc
in
cltd
mov
lret
cmpsl
imul
push
cmp
inc
sub
fwait
out
jnp
mov
or
jp
clc
popl
test
orb
xchg
xchg
les
cli
sbb
fld
stos
rol
test
inc
push
cmp
stos
in
in
pop
int
push
add
jno
push
out
mov
xchg
inc
lods
jne
test
icebp
mov
cmp
fsubrl
iret
arpl
bound
aam
and
xchg
push
cmpsb
cmp
jl
dec
loopne
add
sahf
je
out
xchg
jle
xchg
jo
lods
inc
xchg
push
push
out
aas
mov
int3
jp
cwtl
das
rorb
jo
jnp
mov
xchg
jle
clc
jo
addr16
pushf
or
test
je
push
ljmp
jns
outsl
repnz
in
ds
or
js
es
cltd
nop
push
cwtl
aam
test
inc
int
jbe
movsl
cmp
xchg
jmp
leave
pop
ret
pop
mov
add
cltd
xor
mov
xchg
out
mov
mov
shll
jns
adc
xchg
enter
xchg
push
scas
inc
test
push
out
repz
and
outsb
add
sub
mov
push
call
stos
inc
stos
cmp
imul
cmpsl
cltd
shrl
insl
push
jmp
in
icebp
mov
shlb
add
cmpsl
xor
leave
pusha
incl
jle
push
movsb
cmp
mov
adc
ja
popf
xor
cwtl
push
ljmp
adc
mov
das
jge
lods
inc
push
lahf
jmp
sarl
jg
outsb
pop
or
xor
scas
sub
fsub
or
fcomps
sbb
pop
imulb
mov
shrl
js
add
bound
mov
dec
loop
in
hlt
sbb
jnp
imul
pop
or
daa
mov
jne
xchg
sub
xchg
montmul
cmpsb
mov
fnstenv
add
lea
pop
movsb
cmp
adc
test
pop
test
cmp
rcr
inc
xlat
or
xchg
xchg
sub
cmc
pop
mov
scas
call
sbb
test
cltd
jo
fsubl
stos
inc
clc
push
aad
cmp
lret
pop
repz
lods
adc
in
inc
jmp
jae
mov
arpl
dec
jecxz
cmp
push
sub
pop
mov
test
std
xor
bound
jo
push
mov
and
arpl
data16
push
mov
inc
fsin
cmp
fists
aad
out
mov
add
cmp
outsb
sbb
mov
call
xor
xor
and
dec
mov
jmp
xor
inc
ficoms
in
test
lret
inc
fdivrp
cmp
inc
push
mov
nop
loop
adc
outsb
pop
xor
dec
nop
jnp
outsl
inc
fstpl
push
divb
aaa
into
addr16
mov
sbb
mov
sahf
in
jg
push
add
in
test
ret
pop
repnz
mov
push
out
cli
add
das
jo
add
jno
mov
jb
xchg
mov
jno
mov
xchg
jl
enter
mov
jno
adc
sbb
xchg
adcb
mov
insb
add
xchg
mov
pop
mov
mov
cltd
popa
insl
xchg
mov
pop
mov
insb
cmpsb
cmp
xchg
jbe
jne
add
ljmp
jge
insl
mov
pusha
divl
push
pop
cmc
mov
mov
repz
push
jg
addl
lods
inc
mov
insb
mov
insl
mov
jp
test
adcb
jle
repz
adcb
jl
sub
push
pop
mov
imul
mov
insl
jbe
mov
ja
out
mov
movsb
cmp
jg
cmp
in
add
bound
out
mov
jns
jp
mov
fs
dec
scas
mov
aad
jns
shrd
jne
stc
mov
dec
loope
imul
jp
mov
mov
imul
lcall
pop
mov
outsl
ret
xor
jne
nop
sub
les
lcall
xchg
or
lock
cwtl
das
mov
stc
push
lcall
clc
pop
mov
mov
test
pop
mov
pop
cli
inc
mov
jnp
test
xor
loop
stos
inc
xorl
insb
add
mov
pop
loop
or
bound
data16
loope
fsubrs
xor
adc
add
jl
mov
je,pn
pop
sbb
mov
fs
add
mov
shrl
sbb
mov
insl
add
jl
xor
jg
lea
arpl
xchg
ljmp
aad
jae
inc
pop
sahf
xor
sti
test
mov
inc
fsubl
loop
stos
test
nop
daa
xchg
cli
fnsave
repnz
push
mov
mov
aam
aas
nop
clc
imul
mov
dec
jecxz
dec
loopne
add
in
xor
push
jbe
mov
adc
and
inc
mov
ja
call
fisubrl
xor
sub
mov
mov
sub
pop
jl
rcrl
add
mov
push
dec
loopne
aaa
dec
in
fwait
out
xchg
mov
test
mov
std
xchg
mov
xor
popa
lea
mov
arpl
stos
xchg
cs
jbe
les
clc
arpl
push
nop
add
sti
pop
or
fsts
sbb
add
inc
fimull
stos
popa
clc
lret
bound
inc
pop
sahf
jb
mov
loopne
mov
out
adc
rorb
in
inc
faddl
ds
sub
stc
dec
mov
push
out
xchg
sub
inc
arpl
je
cmp
push
lods
fnstenv
leave
cmc
mov
cmp
mov
push
mov
mov
fidivrs
or
xchg
cli
sub
adc
scas
insl
push
jmp
int
pop
sti
mov
xchg
dec
or
sbb
mov
imul
push
pop
cmp
pop
mov
pop
in
push
sub
mov
or
movsb
test
mulb
push
mov
jp
fdivp
ficomps
fcomip
xor
movsl
cmp
push
out
mov
fidivrl
popf
xor
lahf
adc
roll
test
or
pop
into
popl
inc
jns
add
fcompl
in
subl
sbb
jnp
add
jns
lret
lcall
and
xor
sbb
cmp
insl
xchg
vshufps
outsl
sbb
outsl
xchg
cmp
adc
and
mov
fists
or
mov
andb
jecxz
test
imul
sub
mov
mov
push
test
mov
aam
test
push
enter
scas
xor
push
xor
orl
jle
push
out
mov
mov
jge
gs
jg
mov
mov
jle
fnsave
sub
out
inc
leave
shl
outsl
cltd
mov
divl
mov
or
xlat
hlt
push
ljmp
sub
and
lret
mov
and
inc
jle
add
xorl
in
das
and
js
cmp
lods
pop
cli
dec
fiadds
mov
pop
add
pop
push
and
pop
imul
les
das
stos
xchg
scas
pop
test
fiaddl
out
xchg
sub
rcrb
call
mov
jp
cmpsb
mov
dec
mov
xchg
fsts
sbb
test
ds
vorps
sbb
cmp
out
xor
sub
int3
loop
loope
jnp
test
pop
add
mov
and
test
int3
cmp
jp
sub
sub
inc
jae
add
repnz
adc
add
bnd
leave
pusha
or
cltd
mov
xor
pop
jb
jo
mov
push
adc
repnz
ja
sbb
push
shl
mov
sub
sub
lock
shlb
ja
aad
out
mov
cmp
arpl
test
cmc
sbb
aam
lock
or
lds
leave
mov
sub
cmp
push
adc
es
dec
dec
cmpb
mov
cmp
popf
xor
jp
xchg
pop
push
push
mov
mov
out
ja
xchg
cli
xor
popa
movl
subb
ja
mov
adc
xor
popl
and
shll
ret
and
sub
incl
mov
xchg
xchg
test
outsl
add
in
cmp
mov
sarb
ret
cs
and
dec
xor
cmp
movsb
pop
test
adc
adc
inc
test
cld
xchg
mov
in
ror
mov
inc
into
in
popf
push
in
sub
inc
ret
test
pop
sub
cmp
int3
xor
outsl
push
lret
cmp
outsl
aas
fisttpll
mov
enter
dec
into
xchg
addr16
pusha
gs
inc
mov
xor
push
add
add
les
jl
fs
dec
xchg
mov
pop
gs
insb
xchg
aas
andl
mov
xchg
inc
push
leave
js
push
or
sbb
and
out
fildl
mov
xor
imul
push
pop
mov
insl
pop
into
push
imul
pop
pop
adc
jmp
xor
mov
pop
push
js
sub
mov
push
dec
lcall
jne
addl
jl
xchg
jae
leave
cmpsl
js
repz
cmp
mov
loope
adc
pop
aam
xchg
dec
sbb
add
adc
push
xchg
fisttpll
stc
ret
xor
shll
mov
test
psrlq
cmp
scas
pop
mov
or
inc
xchg
sti
nop
daa
sub
dec
mov
popa
in
sub
pop
scas
pop
push
cmp
fisubrl
std
das
bswap
pusha
push
jno
in
fidivs
lret
ret
xchg
jl
fcmovb
pop
nop
incl
inc
sbb
faddl
or
push
lret
jecxz
xor
mov
and
cmpsl
cmc
and
vmovss
mov
adc
in
faddl
fdivs
sti
out
mov
add
vandnps
mov
mov
das
rep
les
sbb
xchg
xchg
mov
push
mov
arpl
je
aad
xlat
daa
xor
xchg
fcmovb
pop
jecxz
movhlps
mov
sub
test
sahf
cmc
daa
and
inc
scas
xchg
sbb
int
loop
mov
ljmp
xor
cmp
sub
and
push
and
addr16
xchg
push
or
jbe
divl
jle
mov
cmp
push
insb
out
sahf
and
fsts
jmp
cmp
push
fidivrs
or
cmc
mov
push
cmc
fwait
nop
fimull
sbb
push
sbb
sub
rcr
jecxz
mov
cmpsl
rclb
adc
pop
mov
mov
or
cmpsl
jge
hlt
cs
jp
adc
cmpsl
pop
movsl
sbb
lahf
add
xchg
mov
xchg
arpl
rolb
sub
push
out
imul
and
and
lods
pop
push
inc
mov
mov
int
and
cmp
inc
jecxz
xor
jl
pop
test
push
adc
imul
pusha
pushf
dec
jle
ja
dec
pop
enter
and
dec
sub
outsl
jae
xor
sbb
xchg
out
test
daa
jp
movsl
in
enter
mov
mov
lock
adc
jl
out
and
dec
xchg
xorb
add
sbb
sbb
notb
and
leave
inc
adc
push
outsl
jae
bound
das
test
bound
pop
jmp
insl
loop
loopne
jb
mov
xor
xchg
lods
aas
imul
dec
xorl
cld
pop
xchg
mov
repnz
mov
inc
jl
mov
gs
fsubl
jae
movsl
rcrl
cli
xor
mov
push
jge
es
inc
mov
pop
jae
sahf
test
pop
js
mov
mov
scas
test
ds
mov
fisubrs
stc
jbe
je
mov
aas
add
pop
ja
aam
notb
lods
pop
or
mov
sub
cmp
lods
addb
xchg
insl
push
sahf
lahf
aam
sbb
xchg
stc
dec
es
mov
mov
cmc
mov
aad
push
cmpsb
aaa
fiaddl
cmp
testb
mov
cmp
jo
enter
das
mov
and
push
dec
inc
lcall
jge
mov
es
stos
cmpsl
push
or
or
fsubr
out
push
mov
repz
pop
cld
sub
fsub
jge
cmp
cmp
push
aad
cltd
repnz
xchg
and
xlat
dec
jmp
rol
push
jmp
fs
xchg
mov
iret
mov
mov
adc
fsts
adc
jno
or
je
pop
movsl
cmp
movsl
sti
xor
je
cli
push
mov
push
adc
fwait
xor
pop
cli
and
ret
dec
lret
dec
popa
adc
dec
outsb
add
pop
mov
inc
push
pop
mov
popa
add
xchg
lds
rcrb
imul
jmp
sbbl
adc
push
dec
rcll
mov
mov
push
pop
aam
mov
pop
mov
and
js
dec
mov
and
jl
bound
mov
leave
push
loope
jo
mov
or
mov
imul
daa
pop
testb
cmp
fwait
les
scas
in
and
mov
push
out
and
mov
fsubrs
mov
jmp
shlb
add
add
je
add
cmp
or
js
js
and
in
and
fistl
flds
mov
nop
jg
mov
mov
xchg
ja
or
test
sbb
out
lods
rcrl
inc
lods
cmc
stc
movsl
pop
mov
sbb
cmp
icebp
aad
jmp
lods
mov
or
add
jle
insb
movsb
es
cld
inc
inc
mov
adc
sahf
push
xchg
fs
aad
icebp
rcrb
int
cmpsb
adc
lods
loope
fs
inc
aam
push
pop
push
dec
es
jns
lds
aaa
mov
inc
inc
out
fwait
mov
dec
stos
push
pop
movsb
addr16
stos
jg
push
dec
in
fidivs
cli
adc
les
push
inc
rcrl
push
into
arpl
cmp
icebp
cmp
jo
cmc
dec
enter
sub
test
mov
orl
xorl
lret
lret
add
les
sbb
push
repnz
xchg
mov
mov
mov
mov
xchg
mov
jb
mov
mulb
jnp
das
push
fdivrl
inc
mov
iret
pop
push
in
mov
lods
jg
or
fcoms
sbb
cmc
sub
jp
or
cmpsb
mov
popf
mov
lods
pusha
fwait
cmpsb
test
lret
cmpb
lock
ret
sbbl
sti
xchg
inc
stos
das
loope
imul
sbb
test
mov
fmull
or
mov
mov
out
adc
or
leave
nop
ja
add
loopne
push
lret
dec
add
outsb
fsubl
cmovns
xchg
sub
push
pusha
add
test
inc
fstl
loope
push
adc
adc
das
cmp
fwait
imul
mov
cmpsl
mov
repnz
fs
fsubl
sub
jg
jae
add
ficompl
sbb
out
cmp
adc
jge
adc
fs
imull
mov
data16
dec
stos
and
xchg
test
rorb
fs
xchg
mov
jge
xchg
nop
aam
xor
dec
loopne
push
mov
ljmp
or
stc
lock
xchg
rorb
push
xlat
gs
xchg
sbb
sbb
js
mov
fwait
mov
lcall
jne
pop
or
ds
mov
jecxz
ljmp
or
fidivl
lods
xor
or
mov
stos
jne
push
stc
cmp
sbb
insb
cmc
xchg
jle
or
mov
movsl
jo
add
jne
dec
mov
xor
dec
mov
push
int
mov
inc
mov
fwait
xchg
sbb
cmpsb
data16
lea
loope
loopne
xchg
jns
sbb
adc
sub
maskmovq
divl
jle
popf
test
cmc
jnp
push
mov
jnp
mov
push
cs
xchg
bnd
cmp
mov
test
mov
hlt
jecxz
mov
adc
xor
aaa
mov
fwait
xchg
lock
les
sub
loope
scas
jb
mov
ljmp
and
lret
mov
pop
aam
jbe
or
int3
loop
fildll
adc
or
push
ss
mov
and
jb
nop
pop
push
xchg
lea
dec
jecxz
sub
popf
addl
clc
pop
ret
lret
in
push
mov
and
or
jns
stos
jo
push
xor
pop
out
push
imul
ds
lods
negb
decl
push
mov
xchg
xchg
les
pop
dec
loop
mov
ds
aad
sub
outsl
fisubl
les
inc
into
fstpl
mov
outsl
outsl
orl
lahf
into
dec
and
xor
jne
dec
loop
insl
dec
lods
pop
push
sub
push
sub
cmp
in
cmpsb
jno
movsl
add
mov
out
cwtl
push
mov
cli
andl
lods
dec
xor
imul
jecxz
es
setno
das
sbb
sbbl
cmp
mov
out
mov
pop
enter
ret
inc
mov
test
dec
or
lds
cmpsl
ds
stc
xchg
xchg
cmp
repnz
outsl
push
sarl
push
test
aaa
push
cmpsl
cld
inc
repnz
in
and
cmpsl
stos
xchg
stos
iret
data16
test
ret
repz
inc
subl
aaa
xchg
mov
adc
ja
mov
mov
lds
sbb
scas
inc
in
repz
daa
add
sub
xchg
pop
shll
pushf
jb
mov
or
outsl
push
lea
inc
lcall
xchg
mov
cmp
add
mov
flds
push
add
cmp
sbb
ficoml
pop
lret
and
add
add
and
imul
mov
cmp
and
fbstp
inc
mov
xor
mov
xlat
cmp
and
int3
pop
dec
adc
mov
les
fnstsw
or
cmpsl
aam
push
fsubr
and
mov
push
sahf
jno
adc
in
inc
pop
into
pop
scas
push
adc
pop
cmp
pop
jnp
xor
inc
and
fs
push
mov
sbb
testb
pop
add
dec
xchg
add
insl
ja
xchg
sub
pop
movsl
dec
andl
imul
aas
cs
mov
pop
loop
outsb
sub
cmp
adc
mov
sbb
cmp
push
std
test
out
test
jo
and
repz
mov
lret
es
in
mov
pop
jmp
aad
fisubrl
pavgb
dec
cmpxchg
jbe
xchg
mov
and
mov
and
push
nop
jnp
jns
sub
popa
push
in
ds
jmp
insb
cmp
cli
xchg
rcrl
jle
daa
loopne
ss
nop
pop
addr16
loop
pop
rorl
sub
leave
lea
mov
iret
fnsave
mov
add
add
mov
sarb
mov
and
nop
mov
add
mov
ja
xorl
push
lea
das
and
inc
rolb
inc
int3
mov
xlat
sbb
fstpt
inc
fmull
cmp
push
sub
or
pop
add
mull
or
mov
or
push
cwtl
into
inc
fidivs
xlat
push
pushl
adc
mov
or
test
sbb
jns
imul
push
pop
mov
fwait
pop
lock
adc
adcb
pop
mov
testl
cmpb
insb
xor
test
es
adc
sbb
and
cmp
das
test
aam
cmp
ljmp
out
jns
cmp
scas
ljmp
addr16
inc
imul
mov
andl
jg
ret
adc
pop
jbe
test
arpl
add
xchg
mov
cmpsb
xor
and
insb
or
inc
cltd
mov
stos
jg
xchg
jnp
mov
pushf
xchg
xor
dec
aad
lea
inc
sub
xor
mov
fdivl
or
sub
push
out
lcall
fldl
aaa
into
icebp
insb
jp
jo
pop
shrb
push
hlt
ljmp
mov
stos
shll
cli
xchg
js
aam
pop
jmp
xchg
sub
les
repz
iret
addb
jb
mov
mulb
lret
xchg
dec
mov
jle
pop
sbb
loope
pop
int3
cmp
hlt
das
repnz
push
xchg
into
mulb
bound
mov
cwtl
das
pop
push
inc
les
pop
or
push
shrl
cmp
lcall
adc
xlat
mov
in
lds
gs
aam
cmp
idivl
sub
into
dec
test
repnz
sub
mov
sbb
in
pop
pop
leave
jb
out
adc
xchg
leave
xor
mov
addl
cmp
mov
jb
fisttpll
pop
inc
lds
ret
and
push
jl
iret
lds
lods
ja
insl
insl
sarb
aad
pop
fstps
mov
cs
jbe
mov
xchg
jns
clc
cmp
loopne
xchg
outsl
outsl
leave
or
inc
popa
lcallw
dec
and
jae
idivb
xchg
push
push
call
adc
xor
popf
xchg
mov
push
adc
mov
xor
mov
pop
test
outsb
add
jmp
sub
leave
lcall
fcomps
sbb
pop
add
sub
push
insb
mov
lcall
push
push
out
outsl
test
dec
sbb
nop
xchg
insl
or
rolb
or
mov
loopne
call
test
data16
mov
sub
mov
add
mov
in
dec
mov
mov
gs
dec
mov
sahf
sti
jl
enter
xchg
into
pop
hlt
jmp
loop
sbb
outsl
icebp
xor
popf
pop
or
push
fdivl
dec
add
pop
mov
pop
adc
xchg
scas
jg
and
repz
lcall
stc
xor
xor
cmc
dec
in
pop
push
adc
arpl
pop
cmp
push
orb
push
adc
xor
sarb
and
add
xor
and
adc
push
jno
sub
test
in
inc
fstps
cmp
repnz
pop
lock
aad
mov
jecxz
js
or
add
arpl
push
cmp
cmp
jo
pop
lidtl
mov
cmp
scas
mov
hlt
adc
sub
xlat
jmp
mov
popf
nop
mov
hlt
jnp
es
pop
mov
push
push
or
jecxz
pop
sti
xchg
mov
pop
stos
test
icebp
dec
jecxz
es
mov
mov
in
or
mov
add
jo
divb
rclb
inc
push
mov
cmp
imulb
dec
jo
test
aam
imul
sbb
cmpsb
jg
orb
imull
daa
std
mov
cli
and
fucomip
divb
ror
cmp
mov
fistpll
ficoms
ljmp
in
mov
cmc
testl
mov
mov
div
xor
fdivrs
push
ret
pop
stc
aad
jns
lods
cli
inc
sub
lea
sub
ljmp
xor
jno
jae
mov
dec
out
jl
int
lds
fdivrl
jbe
es
jl
cltd
xor
add
in
xor
enter
jg
inc
insl
mov
mov
loopne
cmc
mov
jle
dec
ret
push
out
fsubrl
adc
add
subb
pop
shl
dec
mov
cld
popa
jne
arpl
jle
push
sub
inc
push
aas
movsl
pop
cmpsl
ds
aam
aam
cltd
mov
ret
mov
cmpb
sarb
mov
ljmp
fcom
cmp
mov
in
fidivl
std
xor
cmp
imull
ret
out
repnz
fs
testb
scas
jmp
mov
icebp
movsl
stc
stos
mov
sub
pusha
cmpsl
lds
dec
mov
jb
xor
dec
mov
push
pop
add
or
mov
rorl
add
out
lahf
mov
jno
stc
adc
imul
repnz
mov
mov
xlat
xchg
vzeroupper
idivl
scas
push
cmp
pushf
cmp
nop
or
mov
les
loope
lret
push
mov
sbb
mov
dec
pop
push
aad
pop
dec
mov
jb
push
shll
xchg
aad
adc
rep
mov
mov
lcall
jecxz
dec
lds
mov
sub
mov
fsts
jo
lret
jmp
mov
jge
jb
jmp
loop
in
mov
clc
sub
ret
aad
jmp
mov
dec
mov
repnz
sub
shlb
jmp
movsl
mov
add
in
std
and
fstl
and
push
mov
imulb
add
mov
dec
and
stos
jp
inc
nop
insb
inc
cli
mov
mov
repnz
push
leave
nop
or
ds
test
push
pop
repnz
enter
mov
sbb
or
test
scas
fiadds
xor
jne
cli
or
mov
sbb
adc
enter
fiaddl
mov
cmc
pop
cmpsl
pop
pusha
mov
lcall
and
stos
add
xor
push
push
shlb
jbe
xchg
inc
cmp
pop
pop
jo
stos
pop
daa
mov
ljmp
lock
jnp
adc
movsb
pop
jno
jmp
pop
dec
roll
lret
pop
xchg
mov
dec
sahf
jne
ret
lahf
mov
insl
mov
daa
jge
pop
mov
rorl
jg
xchg
inc
mov
cwtl
bound
adc
cmp
dec
push
add
jo
ret
dec
cmp
scas
std
pop
aad
arpl
lods
jae
or
xchg
adc
dec
xchg
mov
pop
adc
rcrb
out
jb
mov
out
xchg
xchg
cltd
aad
sbb
fidivs
cmp
push
outsl
mov
mov
sub
ficoml
jns
sti
sbb
mov
out
lock
push
int3
aas
push
loopne
jbe
pusha
fiaddl
aaa
aas
fisttps
add
push
sbb
or
pusha
inc
ljmp
dec
jnp
cltd
jo
loop
imul
addl
imul
lods
pop
movsl
stc
orb
jmp
push
in
and
sbb
cmp
jmp
pop
out
cltd
out
sbb
add
lock
mov
ljmp
adc
add
or
imul
mov
sub
mov
pop
pop
les
or
mov
loop
fst
in
test
daa
or
cmpb
stos
mov
inc
fdivrp
cmc
pop
icebp
es
data16
dec
inc
js
jns
test
mov
ret
mov
dec
pop
pop
rcrl
shrb
push
jbe
xchg
lock
mov
push
movsl
pop
adc
inc
cmp
test
or
cmpb
out
in
and
js
push
call
mov
outsl
push
xor
nop
daa
addl
add
adc
aam
out
inc
sbb
lret
jg
sahf
icebp
inc
xlat
pop
adc
mov
jle
push
rcrb
add
xor
into
mov
xor
xorl
push
ret
into
or
les
jnp
arpl
into
repnz
jge
mov
rclb
jb
ret
repz
cld
adc
test
xchg
xchg
cmpsl
xor
in
add
push
lret
cld
aas
dec
loope
sbb
cmp
add
es
lods
test
dec
mov
inc
fs
jb
cmpsb
sbb
mov
fucom
rclb
bound
lods
and
adc
daa
push
mov
adc
hlt
push
cld
mov
or
inc
adc
dec
add
icebp
dec
mov
cmp
sub
sbb
push
mov
outsl
cmp
stos
sub
lret
cmp
imul
das
mov
fwait
pop
jo
push
into
insb
es
int3
dec
shlb
jle
pop
mov
test
xorl
mov
mov
cmpsl
movsb
fistpl
cmpsl
and
or
mov
inc
dec
xchg
cmp
xchg
aad
mov
mov
mov
pop
sbb
sbb
mov
adc
int3
test
sub
pop
std
xor
adc
les
lea
andl
arpl
adc
frstor
dec
loope
test
push
mov
cld
fdivrs
push
push
dec
xor
mov
pop
insl
mov
xchg
lods
psubusw
out
cmc
jns
in
push
inc
sub
cmp
inc
pop
inc
mov
loope
paddw
push
sbb
mov
adc
repz
ja
pop
mov
cmp
divl
fisubs
dec
cmp
push
iret
add
ret
repnz
jae
testb
sahf
cmp
loop
ret
push
dec
mov
iret
fwait
dec
iret
movsl
inc
out
xor
repz
jns
mov
adc
inc
les
xchg
sahf
insl
push
jmp
repz
and
jp
mov
das
sbb
xchg
mov
shl
and
aas
cltd
mov
lahf
sbb
jl
out
imul
dec
lcall
xor
adc
xchg
fsubs
fiaddl
out
sbb
clc
shrl
into
mov
adc
jp
test
jo
aam
in
lret
adc
psubsw
das
test
test
mov
or
xchg
lcall
jne
repnz
data16
ror
cmp
cmp
add
fidivl
fsubrs
outsl
out
movsl
cmp
push
sub
or
inc
xlat
adc
mov
mov
pop
hlt
jg
fdivl
and
xchg
cld
push
out
xor
mov
inc
adc
mov
pop
cld
xchg
dec
imul
and
out
orb
icebp
xchg
scas
inc
add
cmpsl
adc
daa
mov
stos
inc
mov
pop
inc
fisttpl
or
fdivp
inc
fnclex
orb
test
divb
dec
fistps
jle
adc
xchg
sub
mov
add
pop
jb
jp
cli
sub
adcb
add
add
fisttpll
sub
xchg
out
xor
aaa
ret
inc
jbe
bswap
add
ror
mov
mov
lahf
cmp
add
lods
hlt
aam
cmpsb
mov
int3
imul
and
sub
movsb
idivb
popf
fstpt
push
lods
pop
lods
sub
inc
adc
xchg
jne
ds
and
fnstcw
add
and
xchg
pop
repnz
mov
mov
xor
es
cmovl
ss
aam
sarb
add
movsb
sub
lret
adc
mov
test
das
mov
cwtl
sarl
xchg
jo
addr16
shl
push
xor
cli
and
push
in
cmpsl
sub
syscall
add
lcall
mov
dec
popa
mov
mov
push
mov
je
xchg
mov
xrelease
int3
loop
out
lcall
mov
push
out
out
mov
push
add
mov
pop
mov
add
inc
or
sbb
stc
fwait
xor
pusha
push
mov
push
cmpl
mov
repz
loope
pop
incl
mov
jno
repz
shll
push
add
cmp
jae
inc
or
mov
popf
jo
sbb
push
fs
ljmp
mov
jmp
jo
add
jbe
inc
sti
in
fsts
mov
cmp
adc
pusha
testl
stos
cli
fldz
jno
out
cmc
pop
gs
sub
test
mov
xchg
ds
add
movntps
dec
dec
popf
negb
popf
movsl
daa
and
lds
in
adc
push
mov
mov
in
sarl
push
sub
pop
popf
xor
lret
notl
dec
jge
push
idiv
insb
out
jo
ljmp
mov
scas
mov
xchg
cmp
outsb
out
hlt
pop
pop
rclb
mov
mov
movsl
adc
sub
pop
fstpl
mov
add
pop
pushf
cmp
popf
outsl
test
lea
cwtl
aaa
push
popf
cwtl
aaa
pop
push
and
sbbl
mov
push
mov
mov
fwait
cmp
sbb
pop
mov
mov
xchg
inc
mov
mov
mov
andl
movl
sub
cmpsb
xor
xor
add
pop
cmpsb
xor
sbb
xchg
push
shll
xchg
cmc
aas
inc
adc
lock
in
xchg
clc
es
shl
fs
fsubs
cld
dec
xchg
xchg
xchg
cmpsl
xor
mov
dec
or
sahf
cmp
loope
cmp
movb
fwait
and
sbb
jl
sbb
push
jecxz
cmp
mov
js
cwtl
test
mov
mov
std
out
inc
prefetch
or
push
mov
pop
xchg
and
mov
fldenv
mov
mov
xchg
jnp
adcb
rolb
cli
adc
sarl
call
push
add
dec
rcrb
mov
pop
push
add
mov
lcall
insl
cs
cli
xchg
dec
or
inc
pop
mov
popf
popl
mov
mov
sti
test
pusha
ret
out
es
push
add
pop
jmp
inc
loope
je
add
xchg
inc
xchg
pop
inc
adc
pop
addb
mov
pop
mov
aaa
test
mov
les
pop
xor
leave
pop
mov
rclb
xor
lea
or
add
push
inc
adc
adc
fldenv
mov
xchg
xchg
mov
xor
mov
nop
push
rolb
add
sti
mov
cltd
inc
add
push
fildl
fs
cmp
shlb
lock
jl
clc
xchg
loop
pop
add
arpl
and
hlt
pop
inc
cmp
pushf
xchg
cltd
xchg
inc
daa
int3
jg
loope
mov
jo
call
mov
outsb
xchg
fidivrl
xchg
pop
clc
pop
gs
fidivrl
stc
pop
push
xchg
jbe
ds
leave
pop
cld
out
pushf
fnstcw
repnz
iret
xchg
xchg
js
arpl
fidivrl
stc
pop
jmp
inc
seta
sbb
outsb
sahf
fnstenv
jb
push
movsb
shl
repz
push
clc
cld
in
mov
repz
stos
aaa
in
sub
movsl
or
mov
mov
cmpsb
sti
enter
in
test
sar
mov
ret
out
jne
xchg
lea
sub
mov
lods
and
div
or
stc
out
dec
fucomp
sbb
sub
ret
in
andl
inc
or
mov
push
sti
data16
ret
cmpsb
cs
mov
sbb
push
mov
mov
mov
push
cli
out
cltd
inc
cmc
and
es
test
cmp
cld
rcrl
fs
repz
cs
mov
sbb
xor
and
lds
or
cli
push
pop
cwtl
inc
bound
mov
sbb
and
mov
loop
sahf
inc
or
dec
adc
pop
mov
shl
jns
push
push
push
sahf
xor
ds
ljmp
scas
test
hlt
mov
into
xchg
lahf
call
mov
mov
stc
inc
movl
stos
divl
jne
in
push
lods
clc
fs
add
mov
mov
push
clc
out
cmp
rcr
add
xlat
sbb
or
xchg
ds
push
divl
jno
andl
cltd
xlat
mov
adc
into
nop
sti
inc
mov
adc
sbb
mov
cmp
aaa
adc
push
shlb
jmp
scas
jo
in
mov
dec
or
cmp
or
in
mov
mov
repz
jae
fidivrl
dec
pop
and
push
cmp
mov
mov
jns
pop
dec
push
ret
cld
and
arpl
int3
repz
add
xchg
sbb
sbb
mov
pop
xor
add
mov
inc
xchg
inc
mov
mov
ljmp
mov
repz
or
push
ljmp
in
push
sbb
and
movsb
lock
xchg
or
xchg
ds
push
and
ret
in
push
mov
pop
xor
arpl
loopne
scas
sub
decl
enter
movsb
mov
mov
xchg
inc
pop
nop
or
push
test
ljmp
lods
jmp
sbb
repz
int3
sbb
lret
popf
ja
ds
jl
outsl
out
gs
xlat
pop
loop
enter
cmp
xchg
fwait
pop
aad
or
test
aam
pop
sub
sahf
mov
mov
mov
sub
dec
xchg
lret
enter
int3
sbb
aaa
xchg
mov
and
scas
cmp
sub
inc
jecxz
test
es
dec
xor
imul
fwait
jecxz
cmp
sub
pusha
sub
cmp
and
cmp
xor
jl
cmpsl
pop
cli
push
xchg
add
sbb
loopne
movsl
cmp
add
push
pop
mov
test
movsb
xor
pop
jae
insb
orl
mov
cmc
inc
or
pop
jae
sahf
sbb
popf
cltd
lret
cltd
iret
xchg
cmp
fwait
cmp
adc
jbe
lock
push
mov
lahf
cltd
inc
adc
ret
pusha
div
int3
xchg
cs
push
dec
adc
test
mov
and
loopne
movb
ljmp
insl
cmc
sahf
data16
bound
iret
pop
lret
xchg
inc
dec
adc
lea
pop
push
pushf
aas
cwtl
inc
or
ret
mov
je
jmp
loop
arpl
xor
fdivp
mov
or
fsub
mov
xchg
ret
clc
test
ret
xchg
add
cltd
inc
mov
mov
fists
pushl
rorb
xor
lahf
mov
test
push
cli
stos
xor
sub
cmp
pop
inc
sbbl
lahf
cmp
pop
add
or
ja
jmp
mov
push
outsl
test
or
or
enter
aas
jnp
dec
or
mov
cwtl
cmp
nop
inc
imul
adc
pop
cltd
pop
lea
adc
insl
cs
xchg
je
loopne
int3
jnp
xchg
sub
mov
lret
popl
pop
and
dec
pop
cld
pop
pop
xchg
test
test
stos
sbbb
mov
pop
idivb
jg
ret
inc
fldl
das
pop
add
pop
add
push
pop
xor
add
sub
cmp
and
je
fnstsw
lods
das
in
orl
psrlw
inc
leave
xchg
adc
sub
lcall
mov
mov
pop
rolb
mov
js
dec
add
jbe
lods
sub
fcmovnbe
test
pop
push
add
into
in
outsb
ljmp
in
inc
push
das
xlat
xlat
orb
pop
push
xchg
xlat
subb
stc
pop
shll
jne
bswap
mov
aam
iret
jns
push
dec
adc
jecxz
and
mov
cld
xchg
adc
sbb
mov
daa
fisubl
int3
push
xchg
push
decb
iret
xchg
mov
int
adc
inc
pop
sbb
mov
out
shrl
and
fs
push
cmp
xchg
inc
adc
enter
mov
push
repnz
ret
jmp
lcall
sbb
out
push
cmp
sbb
or
daa
scas
push
push
push
in
xchg
ss
test
loop
mov
orl
imul
push
and
mov
dec
adc
movsl
aas
mov
das
movsl
fdivrl
cmp
cltd
inc
pop
outsl
mov
jg
mov
daa
dec
mov
fwait
dec
push
xor
and
popf
jns
mov
dec
xchg
divb
jb
inc
mov
dec
xor
xchg
fs
fidivrs
je
es
jo
insb
aas
out
repnz
in
mov
jle
movsl
test
push
xor
pop
jp
mov
imul
inc
int
xor
filds
pop
les
xlat
mov
test
xchg
inc
in
jge
jbe
imulb
test
add
xor
iret
cmp
fs
cmp
or
pop
pop
pop
pop
mov
push
mov
mov
jg
or
pop
nop
inc
std
sbb
faddl
xchg
push
in
push
iret
cmc
pusha
mov
mov
repnz
loopne
or
dec
mulb
xor
rolb
je
popa
repz
mov
sub
pop
std
xor
sbb
jge
lret
fs
push
adc
fidivrl
dec
adcb
mov
sub
sub
mov
sub
dec
mov
ret
xchg
or
add
es
arpl
cmp
adc
push
pushf
das
int
sbb
rcrb
stc
pop
data16
into
js
sub
roll
sahf
mov
xchg
int
xor
icebp
and
inc
push
pop
ret
orl
in
jo
jecxz
rcll
push
mov
xchg
movsl
fildll
inc
mov
and
pushf
jno
push
xor
jae
lea
mov
mov
lods
sub
adc
mov
lods
dec
sbb
jnp
xchg
pop
cld
les
insl
das
iret
jno
push
ss
inc
mov
push
add
stos
fnstsw
cmp
mov
aad
in
jae
das
stos
fildll
pop
mov
jns,pt
rclb
mov
adc
push
and
xchg
cmp
xchg
leave
lods
sub
xchg
insl
andl
je
scas
adc
add
push
dec
mov
lret
dec
mulb
adc
out
and
gs
lock
fwait
push
push
jno
pop
mov
fnsave
leave
xchg
shlb
mov
or
js
xor
jo
int3
mov
scas
mov
loop
mov
fcomps
aad
xchg
mov
cmpsl
mov
xchg
mov
iret
insw
fadds
pop
or
inc
or
pop
push
mov
sbb
negl
push
in
inc
mov
push
inc
push
mov
xchg
gs
xchg
mov
push
scas
xor
mov
pop
pushf
inc
popa
in
aas
mov
jnp
push
mov
outsb
adc
cmc
cltd
inc
mov
iret
jns
call
add
je
ds
add
lahf
xchg
mov
jp
loope
lret
sbb
or
mov
mov
mov
pop
cmc
and
out
or
add
ficomps
xchg
ds
addr16
cs
notl
stos
mov
inc
mov
add
cmp
adc
mov
push
mulb
mov
fdivrl
cltd
jle
das
bswap
xchg
jno
push
sub
insb
add
and
jg
lea
pusha
call
lods
insb
inc
or
mov
inc
or
in
cmc
pop
mov
dec
adc
fnsave
cltd
sub
xchg
cmp
cmp
push
pop
incl
sahf
inc
lea
repnz
sbb
ds
jge
mov
sub
cmp
int
cltd
sub
movsb
mov
mov
inc
cs
xchg
cmp
rcll
mov
lds
xlat
ja
adc
sbb
xchg
test
sbb
push
cmpsb
mov
bswap
ror
mov
xchg
add
in
imul
pusha
negl
out
jae
outsl
mov
loope
sub
cli
aad
fucomi
dec
adc
mov
lds
or
dec
daa
sbb
push
cmp
fs
mov
push
pop
aam
cmp
mov
inc
adc
shll
aam
push
add
out
push
pop
into
mov
push
push
out
out
mov
mov
je
in
dec
jnp
iret
repz
mov
ret
pop
adc
add
push
clc
gs
cmp
push
notl
ret
add
mov
jo
das
mov
inc
push
out
jnp
jno
stc
mov
les
scas
mov
cmpsl
data16
xchg
add
lcall
aaa
jo
or
inc
xchg
sub
pop
jg
push
js
add
filds
mov
scas
push
stc
orl
or
lods
pop
loopne
jae
aam
iret
data16
ja
sbb
test
stos
enter
mov
push
test
xorl
cmp
int
in
imul
dec
or
add
test
sti
or
pop
push
in
imul
incb
loopne
stc
adc
mov
xor
into
into
and
movl
dec
in
jae
into
mov
out
je
test
mov
hlt
lret
lods
jecxz
insl
jo
dec
adc
addr16
cs
cs
cmp
fistpl
mov
push
jne
aad
mov
cmpsb
inc
dec
rolb
les
pop
rcrl
mov
cmpsl
aam
or
mov
idivb
jae
jno
jns
push
jp
add
push
mov
jle
push
xchg
push
jle
call
fwait
sahf
ja
popa
aaa
dec
or
mov
or
inc
inc
adc
stos
fdivrs
mov
and
scas
cmc
ret
mov
xchg
sbb
dec
or
inc
push
add
sub
cwtl
test
mov
jge
repnz
xchg
cmp
mov
mov
js
inc
sbb
leave
js
lcall
arpl
xchg
sbb
mov
dec
pop
icebp
pop
xor
and
mov
pushf
and
dec
das
mov
jmp
mov
or
adc
mov
fmulp
data16
pop
adc
bound
pop
mov
jmp
in
fs
xor
cli
leave
pop
push
or
std
bound
pop
mov
ss
test
pop
and
out
iret
nop
insb
icebp
jmp
sub
bound
into
sbb
test
adc
outsl
or
pop
stc
pop
push
repz
and
jo
jecxz
shrl
cmpsl
sbb
imul
dec
mov
out
gs
xchg
inc
adc
mov
xchg
push
ja
outsl
int3
scas
sub
out
push
stos
mov
xchg
sub
or
les
andl
push
push
sub
mov
mov
test
ret
outsb
repnz
mov
jo
jg
and
loope
jns
fidivl
popa
or
push
out
push
lahf
push
or
or
push
fbstp
xchg
jo
int
out
std
inc
mov
pushf
imul
mov
out
add
inc
aas
or
aas
xchg
inc
or
and
fisttpll
popf
inc
jge
mov
xchg
inc
les
cmp
mov
dec
ds
mov
dec
cs
data16
sub
mov
test
lods
and
xor
lods
sub
sbb
stc
sub
lcall
cmpsb
clc
cmp
imul
les
sbb
add
mov
aam
mov
add
jnp
in
jae
imul
iret
lods
dec
adc
rcrl
jl
out
addr16
std
loope
lock
loope
mov
xchg
andl
imul
sarb
xchg
arpl
nop
gs
std
xchg
ja
clc
and
or
movsl
cmp
jne
mov
sub
insb
pop
int
test
ficoms
movl
fs
xor
inc
test
call
mov
loope
inc
jl
shlb
mov
add
out
jno
dec
sti
callw
mov
and
cmp
and
or
and
cmpsb
or
jae
inc
push
loop
add
push
adc
or
sarb
mov
mov
enter
scas
rorl
and
scas
cs
pop
sbb
xchg
cmp
sub
or
dec
or
adc
stos
fnsave
or
and
adc
loop
dec
dec
lods
daa
in
xchg
and
adc
inc
jp
aad
popa
dec
jecxz
je
xchg
ljmp
xchg
cmpsl
movsl
xor
mov
jnp
push
or
pop
sahf
xorl
repz
dec
or
sub
orb
aam
pop
lea
imul
cmp
movsb
adc
push
mov
push
cltd
pop
lahf
cmp
xchg
xchg
and
add
inc
xlat
sub
popf
inc
fidivrs
xor
std
cmp
cltd
cmp
into
call
xor
pop
out
jbe
sbb
adcl
push
pop
icebp
xor
push
pusha
call
mov
mov
or
add
dec
adc
mov
cs
pusha
dec
lahf
inc
mov
lods
or
scas
out
mov
mov
jb
fnstsw
movsl
pop
adc
test
xlat
ja
dec
faddl
in
pushw
mov
or
sub
mov
stc
gs
cmpsl
es
leave
xlat
ja
sbb
and
mov
notl
cmpsb
insl
icebp
add
and
push
xlat
ja
xchg
inc
in
xchg
adc
ljmp
pop
andl
popf
inc
jae
out
jb
adc
mov
mov
xchg
or
xchg
inc
cltd
push
adcb
mov
and
outsb
and
movsl
in
test
mov
mov
cmp
mov
stos
sub
xlat
popf
cmp
daa
outsb
in
das
and
hlt
cmp
nop
push
pop
push
add
mov
insb
mov
movsl
lock
out
loopne
mov
cmpsl
hlt
mov
push
fs
mov
cli
bound
jnp
cltd
lea
xchg
add
aad
dec
lds
pand
popa
jmp
add
into
in
mov
shlb
mov
mov
addr16
and
cltd
cmp
or
or
nop
inc
scas
push
mov
sub
push
add
jo
sub
ja
dec
or
test
mov
push
je
cmc
push
jb
cmc
add
fistpll
ficoml
ret
fnstenv
fisttps
adc
xor
inc
xchg
ds
mov
lret
add
pop
call
push
push
sti
dec
pop
mov
fwait
push
hlt
mov
subb
and
cmp
movsl
add
out
test
mov
fwait
or
mov
lret
test
bswap
leave
inc
mov
call
mov
push
mov
cmp
inc
pop
sub
orl
js
ja
ja
testb
dec
bswap
xor
mov
mov
mov
jmp
mov
scas
test
ljmp
sbb
mov
out
mov
lods
lahf
inc
imul
inc
mov
js
inc
jns
sbb
xchg
mov
dec
cs
jp
or
mov
sub
std
push
xor
inc
and
xor
push
ret
into
or
mov
push
pushf
cmp
aas
adcb
ds
lret
out
adc
adcl
xor
repnz
xor
outsl
sbbb
adc
adc
dec
jmp
fs
int3
stos
cs
into
jecxz
push
jge
shrb
call
xor
nop
aaa
das
and
mov
repz
fisubs
mov
mov
mov
cltd
mov
scas
pop
add
mov
shlb
in
cs
imull
in
xchg
xchg
cmp
mov
les
lea
dec
jnp
fisttpll
lahf
push
scas
icebp
pusha
sbb
add
xchg
inc
sub
sbb
int
mov
add
fidivrs
popa
xor
push
sub
pop
fldl
sbb
std
mov
mov
mov
push
mov
idivb
dec
inc
cmpsb
daa
test
mov
mov
or
dec
pop
cmp
fidivs
and
gs
dec
or
cmp
lods
sub
cmp
mov
jl
ret
pop
add
mov
addr16
mov
mov
xlat
inc
adc
jg
cwtl
pushf
ds
pop
add
inc
xchg
and
cltd
out
mov
xor
lods
sub
sub
sub
fdivs
movsb
stos
pop
push
add
xchg
cld
cmp
sub
scas
push
in
fistps
add
pop
adc
leave
mov
stos
jne
fiaddl
das
mov
dec
xor
enter
and
and
popl
arpl
xchg
adc
pop
add
mov
les
cli
adc
rclb
inc
mov
dec
xor
test
lcall
xchg
jns
pop
shll
enter
jmp
into
jno
cltd
add
pop
aam
pop
xlat
test
mov
in
mov
mov
outsl
jmp
xchg
icebp
dec
fadd
nop
and
aad
dec
cmp
xchg
xchg
sbb
mov
sbb
push
and
push
xlat
scas
inc
or
ret
sarl
frstor
mov
sbb
jmp
stos
mov
int3
pop
mov
mov
push
xchg
cmp
sbb
scas
mov
fnstcw
sub
sbb
les
xchg
xor
lds
movsl
xchg
das
sbbb
push
add
repz
add
push
test
mov
fidivl
sbb
mov
mov
mov
or
stc
cmpsb
outsb
hlt
push
jge
and
cmp
cmp
sub
xchg
sbb
fs
mov
sub
cli
flds
cmp
stos
and
mov
fsubrl
je
pop
repz
dec
into
gs
jmp
mov
mov
add
cmp
push
ss
xor
and
cmpl
mov
ret
cmp
negl
dec
loop
rcl
pushf
test
adc
xchg
bswap
movsb
repnz
adc
mov
pop
push
hlt
inc
adc
mov
leave
push
out
pop
bound
lcall
xor
movl
out
loope
es
std
loopne
cmp
repz
push
xor
cwtl
mov
stos
lods
sbb
loopne
test
sahf
add
mov
dec
push
in
jae
mov
mov
ret
pushf
jns
aas
sbb
mov
sub
jl
and
xchg
inc
sub
lea
mov
sbb
sbb
mov
inc
sbb
xchg
pop
cmpsl
xor
int3
ss
sub
es
sahf
aas
xlat
jns
int3
orl
pop
ljmp
fdivrs
ja
fmull
inc
inc
cwtl
xor
push
dec
cmpsb
xor
mov
cmpsl
movsb
cwtl
sub
sahf
ja
push
cmc
movb
pop
mov
scas
sub
jp
arpl
pop
cld
push
jns
and
movsl
cmc
rol
xchg
add
test
pop
or
jae
iret
mov
jb
lea
pop
negl
or
jle
ds
cmp
push
imul
nop
inc
inc
mov
insl
setp
das
pop
cmp
lods
sub
mov
popa
aam
xchg
aas
push
aad
gs
sub
leave
sbb
pop
mov
dec
or
cltd
outsb
cld
std
pusha
xor
xor
ret
fwait
inc
cli
scas
push
pop
mov
cmpsl
popa
repnz
sbb
rcl
xchg
frstor
push
fwait
pop
cld
cld
leave
in
leave
call
cwtl
cmp
push
lods
cs
adc
pop
xchg
mov
roll
mov
mov
pusha
hlt
rcl
nop
inc
mov
mov
inc
adc
fwait
and
gs
loope
jl
cmpsb
ret
dec
cmp
in
fs
inc
sbb
ret
test
mov
cmp
mov
fwait
inc
insl
stos
add
push
jge
adc
addr16
inc
or
ja
test
sbb
into
xchg
xor
insb
cmc
inc
daa
xor
xor
lcall
mov
out
gs
stos
ja
dec
bts
xor
dec
and
lahf
es
psrld
ss
popa
fsubrs
adc
mov
ljmp
cmp
mov
lcall
xchg
outsb
or
imul
jno
mov
jl
push
xchg
xor
sahf
sub
xchg
inc
lret
out
adc
hlt
push
xchg
inc
dec
mov
cmc
arpl
in
fs
test
popf
pop
mov
insb
out
inc
out
jno
dec
sahf
mov
or
out
cmp
out
sarl
dec
mov
lods
cmpl
push
jmp
icebp
or
mov
pop
push
imul
push
stos
jno
leave
pop
mov
mov
xor
pop
mov
sub
ds
jns
aad
sbb
inc
mov
sbb
dec
cmp
or
popa
ljmp
fiaddl
lea
push
jb
fldl
into
scas
push
je
sub
out
jno
pop
roll
bound
pop
push
mov
and
and
pop
inc
mov
sahf
mov
sbb
inc
mov
cmp
jb
mov
lock
nop
idivb
push
enter
sbbb
jnp
jae
xchg
popa
test
shrb
inc
aas
xchg
sti
pop
mov
fnstcw
mull
add
cmpsb
xor
inc
adc
imul
stos
sub
ljmp
jge
loop
insb
adc
fidivl
cmpsl
xchg
aaa
xchg
ljmp
scas
loopne
std
mov
mov
std
mov
lods
sbb
arpl
xor
push
add
aam
cmpsb
sub
add
mov
aas
sub
shl
push
test
jno
loop
into
push
test
rcr
stos
sbb
rorb
push
movsb
xor
mov
repz
rolb
fidivl
addb
pop
add
push
mov
test
inc
push
in
js
orb
fldl
pop
push
js
dec
xor
int3
nop
add
outsl
adc
push
filds
outsl
or
lret
jmp
adc
mov
out
popf
pop
mov
popa
mov
jnp
sbbb
mov
add
cli
and
pop
das
ljmp
push
pop
jmp
cmp
lret
sti
out
inc
loope
sub
outsl
push
aad
xchg
js
cmp
mov
aad
mov
stc
xchg
stc
lea
xchg
aas
loope
xchg
inc
push
cld
loop
mov
cmpsb
mov
test
xorl
inc
decb
aas
jno
push
add
insb
and
mov
mov
jae
repnz
mov
inc
into
and
add
decl
popa
clc
inc
adc
jle
negl
ret
jb
mov
movsb
inc
adc
out
adcb
jg
cmp
mov
mov
adc
ret
pop
int3
sbb
jne
inc
or
xchg
sub
sub
into
push
arpl
rcll
test
aas
insb
push
jmp
push
rcll
test
jo
dec
push
clc
mov
pop
cld
pop
or
jg
xchg
mov
push
popf
mov
mov
ret
mov
dec
pop
sarl
sahf
mov
cmp
es
sahf
test
dec
adc
dec
push
pop
push
lds
orb
and
and
orb
sbb
je
jp
inc
inc
or
cwtl
icebp
push
xor
es
ret
sub
scas
insl
repz
cmpsb
inc
mov
xchg
loop
rol
xchg
and
jnp
xor
mov
xchg
les
cmp
add
push
rorb
call
pusha
dec
pushf
add
in
popf
add
fdivrp
push
in
cld
inc
or
fistps
jmp
data16
push
orb
orb
outsb
out
pop
or
loopne
nop
stos
xor
mov
call
dec
repnz
sahf
add
data16
orl
cwtl
aas
xchg
dec
in
inc
ret
lcall
or
lea
mov
sbbb
xchg
pop
add
js
mov
loop
std
mov
mov
fxch
xchg
inc
sbb
nop
xchg
in
jnp
cltd
inc
push
imul
mov
mov
leave
pusha
out
repz
or
jg
dec
adc
lea
and
fucomip
dec
in
add
xor
imul
push
popa
clc
test
jg
xlat
in
ds
stc
popf
xor
cmp
pop
push
mov
jp
lahf
fnstenv
fiadds
cwtl
psllq
mov
inc
adc
aam
cwtl
xor
leave
aad
repnz
jmp
call
pop
cmp
xchg
lods
nop
lea
into
mov
add
stos
inc
push
and
push
aaa
leave
pusha
imul
jle
enter
fldl
lds
mov
sahf
addl
icebp
rcrl
add
mov
inc
and
cmpsl
ds
js
xor
lret
mov
jnp
push
fsubrs
pop
add
mov
les
cmc
add
xor
xor
inc
push
pop
hlt
xchg
call
fnstcw
cltd
xor
mov
jg
lods
inc
xchg
mov
lret
repz
inc
adc
mov
and
in
add
cmp
add
stc
orl
pop
loop
ds
sahf
xor
push
mov
jp
sahf
fidivl
faddl
cwtl
or
das
pop
mov
inc
push
lods
jbe
cmp
lret
enter
add
push
jmp
pop
cmp
pop
outsb
jns
cs
mov
loop
inc
adc
aam
push
xor
repnz
adc
or
das
dec
sub
dec
in
jg
fnstenv
shll
add
mov
inc
and
push
fs
xchg
jbe
xor
leave
mov
jl
sbb
jo
pop
add
mov
ret
repz
xor
lret
inc
push
pop
cmc
test
jmp
xlat
mov
lcall
dec
mov
inc
xchg
sahf
insl
shlb
hlt
mov
push
ljmp
pop
or
stos
es
sbb
inc
fldt
cmp
push
stc
orl
test
adc
sahf
xor
addr16
mov
jnp
pushf
fidivl
fildl
cltd
or
clc
and
and
je
ds
xchg
xor
rcrb
call
jp
push
cmp
insb
js
das
stos
lea
dec
std
loopne
inc
adc
aad
push
xor
popa
gs
mov
adc
or
xor
dec
sub
pop
push
in
jge
fldcw
iret
pusha
testl
and
push
arpl
xor
mov
jge
sbb
jo
pop
add
lea
mov
rclb
xor
xor
inc
push
pop
testb
jge
mov
pop
call
or
push
jl
lods
inc
popf
xlat
outsb
iret
mov
lock
mov
add
xorl
push
or
test
dec
out
cld
inc
fldt
dec
stc
jg
mov
mov
loopne
inc
adc
sahf
xor
inc
mov
jl
lcall
or
clc
and
push
lods
jb
aas
mov
xor
rcrl
add
push
jmp
push
cmp
push
cltd
xor
lret
cld
fisubrs
push
xor
popa
arpl
mov
les
test
or
xor
dec
sub
pop
imul
lods
mov
pusha
idiv
push
mov
inc
pop
jg
push
popa
stos
inc
xchg
jb
xor
mov
pop
out
mov
jle
sbb
jno
pop
add
popf
lods
and
out
incb
das
adc
testb
jge
aam
jno
out
fwait
xor
or
push
jp
scas
inc
mov
int3
arpl
out
cmc
mov
add
xorb
or
les
dec
out
sti
inc
fsubrl
insl
add
dec
arpl
jle
mov
mov
fisubrs
ss
inc
mov
jl
cltd
fadds
lcall
and
jno
aas
scas
xchg
xor
hlt
add
push
ljmp
jno
imul
es
insl
dec
xor
bound
hlt
mov
ret
repz
pop
sahf
pop
adc
and
out
jp
fisubrl
int3
popa
clc
std
or
and
push
adcb
pop
stos
inc
xchg
jno
xor
in
mov
jle
pop
pop
add
nop
pushf
stos
and
out
cld
inc
fsubrs
dec
pop
idivb
push
jmp
mov
jb
out
fwait
xor
inc
mov
inc
lea
int
loopne
cmc
mov
add
xorl
stos
jo
or
ret
mov
adc
inc
ss
add
dec
fs
jge
mov
mov
fsubrl
aaa
and
pop
bound
push
ja
in
mov
fdivl
add
push
sub
mov
jo
aas
lods
xchg
ss
int
hlt
jecxz
jmp
and
xor
lcall
mov
inc
or
cs
arpl
cmc
mov
rclb
icebp
aam
lahf
add
es
xchg
js
fldt
lret
sti
or
sbb
stos
inc
outsl
lahf
mov
ret
hlt
add
jg
adc
push
popf
xchg
xchg
lcall
scas
in
cli
inc
fldcw
push
aaa
into
aas
dec
pusha
idivl
push
in
xchg
sahf
jle
shlb
pushf
xor
push
xchg
sub
inc
mov
inc
mov
into
gs
testb
cmp
or
shlb
out
clc
inc
fisubrs
xor
add
jnp
mov
mov
fisubrl
cmp
cs
mov
jge
xchg
fnsave
add
add
daa
and
outsb
jns
xlat
stos
aaa
into
ror
cmc
cld
loope
in
adc
jge
push
xor
gs
xor
les
inc
or
fsubrs
sub
fs
imul
popf
jg
xorb
or
inc
and
mov
xchg
jbe
fsubl
enter
or
sbb
inc
lea
aaa
lahf
scas
lret
sarb
xor
fnsave
pop
sahf
test
xchg
cwtl
cmpsb
and
mov
clc
inc
fisubrl
or
iret
cmp
pop
push
in
pushf
jg
into
mov
or
out
popf
xor
add
sub
inc
mov
dec
mov
iret
data16
testl
insl
push
or
mov
loopne
call
daa
xor
gs
gs
jns
lea
lcall
or
mov
pusha
pop
inc
mov
jle
xchg
fnsave
add
xchg
sbb
and
insb
js
fsubrs
lret
sti
fists
adc
jae
arpl
xor
ret
mov
inc
or
fnstenv
sub
fs
push
mov
adc
mov
inc
and
mov
xchg
je
fsubl
arpl
testl
sbbb
pop
lods
inc
mov
aaa
popf
lods
lret
fistpll
ljmp
push
or
xchg
movsl
es
call
or
iret
cmp
stc
jp
push
in
lea
je
loopne
sahf
xor
xor
mov
dec
xchg
data16
clc
sbb
in
test
cmp
lods
insb
dec
or
mov
fists
adc
inc
fisubs
inc
gs
ja
mov
lret
inc
or
mov
popa
pop
aas
mov
jg
xchg
fnsave
push
popf
add
sti
xchg
sbb
sbb
test
aaa
into
mov
fstl
push
sbb
push
dec
das
jae
popa
outsl
popf
xor
adcb
hlt
aad
inc
pop
push
fidivl
sub
fs
imul
subb
or
aas
and
mov
xchg
jb
frstor
les
add
sbbl
pop
scas
inc
mov
cmp
mov
ljmp
push
or
xchg
mov
sbb
or
sarb
inc
stc
js
push
out
mov
jne
fucomip
sahf
xor
xor
mov
dec
xchg
shlb
in
pop
sti
out
test
dec
or
jg
xor
mov
fstl
push
repz
fbld
jo
bound
std
jbe
mov
leave
lods
inc
or
mov
popa
pop
rclb
call
jne
rolb
popf
add
cld
xchg
pop
and
push
cmp
mov
jne
fldenv
pusha
idiv
fcoml
or
je,pn
pusha
insl
popf
xor
adcl
inc
push
adc
jno
daa
into
gs
addr16
cltd
jp
subl
mov
cmp
pop
push
ljmp
jno
loop
gs
hlt
add
sbb
scas
inc
mov
cmp
mov
ljmp
dec
or
xchg
mov
sbb
and
cmp
cmp
stc
jbe
pop
out
mov
jbe
fsubrp
sahf
xor
xor
mov
test
shrl
jecxz
adc
aaa
push
lods
push
mov
mov
fistl
or
dec
loopne
jo,pn
pusha
inc
addr16
jne
mov
enter
push
ljmp
pop
cmp
call
jbe
into
push
popf
jmp
std
xchg
adc
sbb
movsb
mov
sarb
ficoml
or
adcb
sub
or
imul
mov
mov
dec
add
and
stc
nop
xchg
js
test
lret
or
cmp
push
jmp
outsl
dec
fbld
shll
add
sbb
push
scas
inc
xchg
cmp
mov
jmp
sub
loopne
aas
dec
or
xchg
lahf
daa
mov
in
inc
fsubl
push
cmp
aaa
inc
arpl
je
pop
lock
ja
fsubr
lahf
ss
xchg
sub
cmp
push
outsb
push
mov
orl
push
adc
out
xchg
ss
scas
addr16
or
int3
mov
ficoml
or
dec
loopne
sub
addr16
jae
es
test
shrl
cmp
daa
lret
bound
rcrl
jmp
jbe
int
sahf
loope
xchg
adc
es
gs
les
cmc
fcoms
or
sbbl
pop
push
ss
jge
sub
shlb
jae
and
push
fs
xchg
xchg
jbe
test
leave
or
cmp
sub
dec
pop
push
in
mov
fistps
mov
xchg
sub
adc
inc
test
xchg
cmpsb
into
fdivs
in
subl
loopne
cmp
pop
xchg
nop
sahf
sub
loop
inc
frstor
add
shlb
push
pop
lock
push
mov
sub
cmp
dec
orl
cli
xchg
adc
out
xchg
xor
or
int
fwait
sub
int3
fsts
out
dec
loopne
sub
or
addr16
jno
nop
daa
mov
test
shrb
cmp
es
arpl
rcrl
ljmp
int3
or
adc
daa
mov
arpl
fsubl
ret
arpl
hlt
push
out
pop
push
sbbb
sub
pop
imul
push
out
into
mov
add
fnsave
iret
push
arpl
xchg
xchg
je
test
or
cmp
sub
dec
pop
push
in
mov
fistps
data16
out
call
sbb
push
mov
test
cmp
mov
pop
call
or
ja
dec
or
popf
sub
loope
inc
frstor
add
shlb
fs
jb
pop
lock
ja
mov
sub
cmp
dec
orb
push
adc
out
xchg
xor
scas
gs
or
int
lcall
or
dec
loopne
sub
pop
aas
addr16
jo
nop
daa
mov
test
shrl
cmp
and
rcrl
ljmp
lret
or
adc
daa
mov
bound
fsubl
ret
repz
out
push
adc
jne
pop
push
xchg
sub
mov
decl
fnsave
shlb
popa
sti
xchg
xchg
jae
test
or
testl
sub
dec
pop
push
in
mov
loopne
stos
je
fdivrl
sub
jbe
inc
andb
xchg
mov
ret
imul
subl
loope
cmp
mov
mov
sbb
fstpl
add
xor
fs
jo
pop
icebp
test
js
fsub
mov
sub
push
mov
jg
fdivl
mov
cli
xchg
adc
lock
xor
scas
arpl
movsl
js
ss
cltd
sub
lret
jmp
in
dec
loope
sub
pop
ds
daa
scas
nop
xchg
add
movsb
cmp
and
arpl
ret
jbe
subl
xchg
nopl
mov
popa
outsb
inc
fcompl
shlb
aam
out
add
es
pop
data16
sub
int3
mov
decb
push
xchg
jb
xchg
or
iret
xor
push
push
in
xchg
loope
test
or
mov
xchg
sub
dec
mov
andb
xchg
mov
ret
pop
out
in
andl
loop
cmp
mov
mov
push
mov
jmp
fstpl
cmp
sti
outsb
push
pop
repnz
adc
loop
aaa
adc
xchg
sub
mov
dec
jge
fdivl
sahf
shrl
fdivr
xchg
push
repnz
mov
sbb
jbe
ss
xchg
sub
jmp
ljmp
pop
cmp
add
nop
daa
lods
popl
inc
jmp
movsl
cmp
and
fs
xor
jmp
cmpsb
mov
js
or
or
cs
fstpl
mov
pop
lock
sbbl
and
push
push
mov
sub
mov
push
jmp
or
jne
sbb
cld
xchg
jo
xchg
ret
push
movsl
hlt
add
shlb
adc
push
out
test
loop
cmpsb
jne
fdivrs
xchg
sub
or
mov
jle
cmpsb
cmp
shll
in
test
jecxz
cmp
mov
mov
pop
mov
jmp
cmp
cld
insl
push
pop
repnz
adc
loope
cmp
notl
push
addr16
mov
jl
fnsave
shrl
xchg
or
das
sbb
jne
aaa
into
mov
sub
in
add
dec
loop
es
pop
cmp
insl
jns
sub
int3
scas
inc
loope
cmp
and
gs
xor
pop
data16
andl
or
or
sub
dec
sub
inc
ficomps
gs
out
rcrl
add
test
inc
and
push
arpl
sub
mov
push
call
or
jbe
sbb
imul
lock
ret
repz
shll
adc
les
pop
out
test
loop
movsl
jbe
xlat
mov
xchg
sub
or
pop
ds
mov
jge
cmpsb
cmp
shlb
out
test
push
jecxz
cmp
jne
add
stos
pop
mov
call
cmp
std
insb
push
pop
repnz
mov
sub
push
dec
mov
jnp
fidivs
pushf
shrl
xchg
or
icebp
mov
sbb
je
cmp
mov
sub
in
add
dec
loop
and
imul
stos
lea
inc
std
loopne
cmp
pop
iret
push
xor
pop
gs
test
or
or
sub
dec
sub
mov
push
fistps
mov
pop
lock
test
and
push
bound
sub
mov
pop
out
mov
cli
or
ja
sbb
imul
lock
rorl
repnz
shlb
adc
lock
xchg
movsb
ja
mov
add
notl
pop
cmp
pop
cmpsb
cmp
iret
mov
pop
jecxz
out
xchg
add
popl
or
mov
cltd
test
cmp
push
rcll
stos
pop
cmp
ja
daa
lods
outsb
xor
push
mov
andl
xchg
mov
stc
and
nop
adc
fcmovne
rclb
mov
fstl
and
je
jmp
or
add
cmpsb
popa
pop
inc
xor
sub
sbb
xchg
fcoml
mov
push
pop
adc
lret
or
insb
xchg
loop
aam
mov
scas
and
pop
arpl
lea
and
jb
sub
punpckldq
sbb
rcrl
jo
jecxz
inc
add
inc
push
or
mov
stc
sbb
mov
ret
fnstcw
imul
jle
mov
pop
movsb
or
pop
shrl
and
or
les
inc
jne
inc
pop
mov
push
fisttps
adc
adc
das
or
cmp
dec
cmp
aas
ja
lahf
xchg
dec
pop
addr16
ret
jne
mov
out
mov
lahf
sbb
jns
mov
cwtl
push
lods
imul
mov
lret
imul
aam
test
je
mov
rol
adc
or
lea
cmp
push
dec
cmp
arpl
pop
jl
in
fmull
in
mov
nop
mov
jmp
push
loop
cs
pop
out
aaa
aad
add
jge
lods
dec
out
fwait
adc
pop
fwait
mov
push
xchg
xchg
sbb
lods
testb
cmpsb
inc
sbb
cwtl
sbb
stos
push
bound
into
inc
jne
xchg
xchg
fmuls
out
sub
mov
out
lahf
jbe
mulb
push
jnp
inc
loopne
pop
jp
mov
add
dec
mov
add
xor
popa
pop
push
sbb
mov
pop
test
push
in
mov
mov
xchg
adcb
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
sub
jge
dec
xor
iret
ss
pushf
insl
cwtl
mov
mov
pop
add
js
out
popf
in
sbb
sarl
loope
cmp
jnp
add
cmp
lret
les
dec
xchg
cmp
or
pop
and
stos
std
addr16
pop
jmp
hlt
adc
je
and
xchg
sarl
fnstcw
ljmp
pop
cmp
xor
pushf
push
or
mov
adc
jmp
frstor
mov
aad
in
es
arpl
xor
pop
data16
into
cmpsb
idivl
sub
sbb
push
rorl
fwait
scas
out
fcompl
or
dec
enter
mov
xchg
fisttpl
outsb
jecxz
jnp
ds
je
adc
out
sbb
pushf
stos
sub
imul
mov
mov
iret
sub
rcrl
orb
inc
jne
adc
pop
cmp
lods
mov
stos
ss
loop
adc
in
sahf
movsl
test
xchg
lock
cltd
sahf
and
rclb
icebp
push
fs
xchg
cli
add
xchg
lret
pop
fidivl
enter
inc
fstpt
mov
sub
adc
movsb
sub
mov
mov
xor
and
mov
push
cmpsl
cmp
into
cmpsl
pop
xor
movsb
mov
mov
leave
dec
shlb
clc
jbe
dec
or
jmp
outsb
xchg
scas
popf
mov
inc
test
mov
and
sbb
sbb
pop
xchg
hlt
adc
dec
scas
dec
add
push
ljmp
or
outsl
or
mov
in
stos
pushl
or
add
ja
scas
std
or
push
shlb
aas
push
mov
push
cmp
pop
dec
jbe
mov
xor
jb
mov
cli
jbe
jle
jnp
imul
mov
in
cmpl
fcomps
jne
sub
push
pop
aad
jne
xchg
test
jne
mov
adc
sbb
add
lods
cli
fcoms
dec
jb
int3
xor
adc
out
ret
leave
fidivl
fisttpll
push
mov
ret
in
cltd
cld
pop
fnstenv
out
insb
stc
lea
fcom
jp
jb
leave
mov
jmp
xchg
pop
js
cmp
push
dec
push
incl
and
ret
insl
pop
or
inc
out
fwait
sti
jl
cmp
insl
dec
xor
outsl
shrb
mov
aam
sbb
xorl
cmpsl
scas
push
pop
hlt
lcall
rcrb
insl
mov
out
pop
cmp
test
addl
lods
incb
jbe
jo
test
dec
mov
stos
ss
pop
sbb
out
or
jns
mov
xor
fiadds
adc
dec
rcrl
or
xchg
nop
pop
inc
xor
mov
inc
loop
cmp
fidivl
hlt
icebp
adc
jmp
rclb
push
shr
in
inc
sub
shr
pop
xor
js
jno
jecxz
sub
sbb
inc
cmpsl
jno
into
adcl
sbb
adcl
sub
push
out
jecxz
adc
adc
add
fisubl
popf
into
mov
push
sbb
push
in
arpl
loope
loop
orb
push
cmp
hlt
icebp
adc
xor
stc
cmpsb
jns
cs
dec
pop
sub
ret
pushf
inc
xchg
out
jo
jbe
adc
xlat
sti
mov
cmp
loope
loop
repnz
push
testb
jns
rorl
push
xchg
push
xchg
mov
cwtl
sub
xlat
addr16
loope
xchg
push
aas
push
and
lcall
cli
push
mov
lods
add
mov
repnz
lret
icebp
adc
in
pushf
fsts
push
mov
jno
stos
aam
or
push
or
sub
add
mov
sub
aad
scas
sub
fdivrl
enter
ds
lret
mov
adc
bound
loop
jmp
mov
push
fistl
mov
sub
nop
cld
mov
push
push
fisubl
pushf
mov
cld
lods
bound
je
cld
mov
ss
imul
pop
mov
mov
jg
xchg
filds
shlb
adc
imul
xchg
ret
cwtl
lea
test
sbb
push
je
iret
pop
sub
mov
dec
pop
pop
sbb
jbe
outsb
test
add
xlat
dec
or
and
add
add
sbb
and
int
fistl
outsb
fwait
push
dec
mov
adc
aaa
lahf
out
inc
mov
or
fidivl
xor
mov
dec
les
jbe
sub
push
dec
gs
push
mov
lahf
mov
mov
xchg
aam
dec
or
mov
or
mov
enter
lahf
das
xor
sbb
es
in
sub
cld
sub
jg
sarl
ret
es
in
pop
and
decl
fildll
jae
mov
icebp
cwtl
lret
add
notb
loopne
jmp
popa
pusha
jne
inc
jecxz
out
bound
cmp
in
dec
sahf
arpl
inc
add
add
sbb
jg
call
lret
std
jne
xchg
sub
pop
out
scas
mov
cmp
idivb
in
pop
jb
and
je
loop
sub
insl
nop
xchg
xchg
lods
rcr
shlb
sub
cmp
mov
xchg
rorl
hlt
sub
dec
scas
cli
xlat
or
sub
stc
divl
xchg
testb
mov
js
out
mov
lcall
adc
cmp
sub
cwtl
fs
dec
call
add
arpl
pop
xchg
sbb
inc
gs
dec
push
or
rep
fbld
ljmp
jle
fdiv
leave
or
xlat
test
jnp
popf
icebp
jmp
xchg
insl
mov
lds
mov
mov
mov
xchg
mov
test
mov
andb
in
test
inc
cmpl
inc
out
js
fmull
inc
jbe
divl
mov
add
dec
jb
aam
cli
das
loopne
