push
jge
add
add
jge
add
jge
add
jge
add
jge
add
addl
add
addl
add
addl
add
add
mov
add
jle
add
jle
add
jle
add
jg
add
add
sub
add
jg
add
add
add
add
cmpb
lcall
add
jg
add
jg
add
add
adc
add
cmp
add
push
addb
bound
add
test
add
stos
addb
mov
addb
loopne
add
cli
addb
or
add
cmp
add
push
add
jp
add
xchg
add
pushf
addl
add
add
add
jle
add
jle
add
jle
add
jge
add
add
fcoms
jle
inc
add
inc
add
add
add
fwait
inc
add
outsl
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
add
add
sbb
or
add
fcomps
inc
add
add
add
add
add
sbb
adc
add
fcoms
inc
add
add
add
add
add
pop
inc
add
add
add
push
inc
add
add
add
inc
add
add
add
push
inc
add
add
add
add
add
inc
add
add
add
adc
add
inc
adc
add
add
add
adc
and
add
call
add
add
adc
jns
add
lods
adc
jp
add
nop
adc
cld
add
add
add
add
inc
add
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
pushl
xor
add
add
add
add
add
inc
add
inc
add
add
add
add
inc
ja
add
shlb
add
mov
mov
lods
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
add
push
push
mov
push
mov
movl
mov
test
je
mov
add
test
je
mov
add
test
jne
test
je
jmp
test
je
mov
movsbl
movsbl
sub
jne
sub
test
je
mov
movsbl
inc
movsbl
sub
je
jmp
test
je
xor
test
setg
lea
test
je
mov
mov
mov
mov
inc
add
mov
cmp
jb
pop
pop
xor
pop
add
ret
mov
mov
mov
mov
lea
movzwl
lea
mov
pop
pop
add
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
movl
movl
movl
movw
movb
movl
movl
movl
movw
movb
call
mov
xor
xorb
inc
cmp
jb
xor
lea
xorb
inc
cmp
jb
lea
push
call
lea
push
mov
call
mov
pop
xor
mov
call
add
ret
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
xor
mov
inc
cmp
jb
xor
lea
mov
and
movzbl
add
add
add
mov
and
mov
mov
movzbl
mov
lea
and
movzbl
add
add
mov
and
mov
mov
movzbl
mov
mov
and
movzbl
add
add
mov
and
mov
mov
movzbl
mov
lea
and
movzbl
add
add
add
mov
and
mov
mov
movzbl
mov
cmp
jb
mov
xor
test
je
jmp
lea
nop
add
and
add
mov
and
mov
mov
movzbl
mov
mov
add
and
movzbl
xor
inc
cmp
jb
mov
pop
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
push
mov
mov
mov
cmp
jne
mov
pop
ret
mov
mov
sub
mov
test
je
lea
mov
push
push
push
test
je
lea
lea
shr
mov
je
lea
nop
movzwl
mov
shr
and
movzwl
jns
dec
or
inc
movzwl
test
je
cmp
jne
add
mov
add
inc
add
cmp
jb
add
mov
test
jne
pop
pop
pop
mov
pop
ret
pop
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
test
jne
mov
pop
ret
push
push
push
lea
mov
mov
test
jne
pop
pop
mov
pop
pop
ret
mov
add
push
call
mov
test
jne
push
push
mov
add
push
call
mov
test
je
mov
test
je
lea
jmp
mov
add
xor
cmp
je
mov
add
cmp
jae
cmpb
lea
je
push
push
call
jmp
movzwl
push
push
call
mov
mov
test
je
add
mov
jmp
mov
add
add
cmpl
jne
mov
add
mov
mov
test
jne
pop
pop
mov
pop
pop
ret
pop
pop
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
xor
test
je
mov
cmp
jne
mov
lea
add
cmpl
mov
mov
jne
mov
push
push
push
push
push
call
mov
test
je
mov
push
push
mov
mov
mov
rep
mov
mov
add
mov
rep
movzwl
mov
lea
mov
add
add
add
push
add
lea
push
push
call
mov
add
cmp
jbe
add
push
lea
push
lea
push
call
add
mov
xor
xor
cmp
jae
jmp
lea
mov
mov
mov
mov
mov
push
add
push
add
push
add
call
mov
movzwl
inc
add
cmp
jl
push
call
test
je
mov
call
test
jne
push
push
push
call
pop
pop
xor
pop
add
ret
mov
mov
mov
pop
mov
mov
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
push
push
push
movl
movl
movl
movb
movl
movl
movl
movw
movb
movl
movl
movl
movw
movl
movl
movl
movb
movl
movl
movl
movw
movb
movl
movl
movl
movb
movl
movl
movl
movl
movb
xor
lea
xorb
inc
cmp
jb
xor
lea
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
jmp
lea
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
jmp
lea
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
jmp
lea
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
jmp
lea
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
mov
xor
jmp
lea
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
push
mov
call
push
mov
push
push
call
mov
push
push
call
push
call
push
push
mov
call
push
push
call
push
push
lea
movl
call
lea
push
mov
call
mov
test
je
push
mov
mov
pop
mov
mov
mov
mov
mov
mov
add
mov
mov
call
mov
pop
pop
xor
pop
call
mov
pop
ret
int3
int3
int3
sub
mov
xor
mov
push
lea
push
xor
movl
call
test
je
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
mov
pop
mov
xor
call
add
ret
cmp
jne
mov
mov
pop
mov
xor
call
add
ret
cmp
jne
mov
mov
pop
mov
xor
call
add
ret
cmp
jne
mov
test
jne
mov
mov
pop
mov
xor
call
add
ret
cmp
jne
mov
mov
pop
mov
xor
call
add
ret
cmp
je
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
pop
mov
xor
call
add
ret
cmp
jne
mov
test
jne
mov
mov
pop
mov
xor
call
add
ret
cmp
jne
mov
mov
mov
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
movl
movl
movl
movb
movb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movw
movl
movl
movl
movl
movl
movl
movw
movb
movl
movl
movl
movl
movw
movb
movl
movl
movl
movl
movl
xor
nop
xorb
inc
cmp
jb
mov
mov
mov
movl
movl
xor
jmp
lea
xorb
inc
cmp
jb
xor
lea
xorb
inc
cmp
jb
xor
lea
xorb
inc
cmp
jb
xor
lea
xorb
inc
cmp
jb
xor
xorb
inc
cmp
jb
lea
push
push
push
lea
push
call
push
call
lea
push
push
mov
push
lea
push
call
push
call
lea
push
push
push
lea
push
mov
call
push
call
mov
lea
push
push
push
lea
push
call
push
call
lea
push
push
mov
push
lea
push
call
push
call
push
push
mov
call
mov
push
push
call
push
call
mov
cmpl
jne
push
call
push
call
xor
pop
pop
mov
xor
call
add
ret
xor
push
call
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
call
push
cmp
jne
call
lea
push
push
push
call
cmp
jne
call
push
call
call
call
call
xor
mov
xor
call
add
ret
mov
xor
mov
call
add
ret
int3
int3
int3
int3
int3
call
cmp
jne
push
call
push
push
push
push
push
call
push
push
call
push
push
push
push
push
call
push
call
call
push
call
push
push
push
push
push
call
push
push
call
push
push
push
push
push
call
ret
cmp
jne
repz
jmp
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
andl
ret
push
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
je
inc
add
imul
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
inc
push
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pusha
push
add
inc
add
add
inc
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
add
add
inc
add
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
mov
imul
imul
imul
imul
imul
imul
imul
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cld
imul
insb
inc
add
inc
add
insb
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
push
call
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
int3
int3
int3
int3
int3
int3
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
int3
jmp
int3
int3
int3
int3
int3
int3
incl
add
add
add
add
jmp
cmp
add
add
incl
add
add
incl
add
add
incl
add
add
cmp
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
inc
add
incl
add
add
inc
inc
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
dec
inc
add
dec
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
push
inc
add
add
add
incl
add
add
incl
add
add
lcall
push
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
ljmp
add
add
pop
jle
add
adc
add
add
je
add
jl
add
mov
add
add
mov
jge
add
jge
add
addl
add
addl
add
addl
add
add
mov
add
jle
add
jle
add
jle
add
jg
add
add
sub
add
jg
add
add
add
add
cmpb
lcall
add
jg
add
jg
add
add
adc
add
cmp
add
push
addb
bound
add
test
add
stos
addb
mov
addb
loopne
add
cli
addb
or
add
cmp
add
push
add
jp
add
xchg
add
pushf
addl
add
add
add
jle
add
jle
add
jle
add
jge
add
add
add
add
lret
add
popa
jo
insb
insb
outsl
arpl
mov
push
insb
gs
iret
add
popa
jo
jb
add
adc
dec
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
je
jb
arpl
fs
jae
add
jmp
je
popa
insb
inc
insb
insb
outsl
arpl
add
add
imul
jb
add
push
gs
imul
sbb
inc
js
je
jb
arpl
jae
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jmp
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
jae
popa
addr16
outsl
js
outsb
imul
lar
jae
popa
addr16
outsl
js
js
add
add
fs
imul
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
inc
push
xor
cs
insb
add
xchg
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
roll
fs
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lret
arpl
gs
outsl
imul
add
gs
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
arpl
gs
outsl
imul
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
popa
je
add
cmpsl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
xchg
add
je
imul
je
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
out
add
je
jb
jb
je
arpl
push
arpl
outsb
add
aas
add
fs
imul
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
fs
add
popa
jo
imul
dec
inc
dec
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
add
add
dec
out
mov
add
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
sbb
insl
inc
add
insl
inc
add
insl
inc
add
insl
inc
add
insl
inc
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
xchg
inc
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
add
add
add
or
inc
add
and
add
inc
add
and
cld
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
inc
add
add
add
pop
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
pop
inc
add
inc
add
push
inc
add
push
inc
add
add
add
add
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
sbb
inc
add
inc
add
inc
add
inc
add
sbb
inc
add
sbb
add
sbb
add
sbb
add
add
add
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
add
add
and
cwtl
and
inc
add
inc
add
add
add
add
add
incl
add
add
add
add
add
add
cmpsl
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jg
jg
jg
lods
lcall
jl
inc
add
add
add
add
add
add
and
adc
inc
add
add
add
add
add
add
add
add
add
add
addb
add
addb
adcb
add
test
add
rolb
addb
add
add
add
add
add
add
add
add
add
fadds
add
lock
addb
add
or
add
add
add
add
add
add
add
dec
add
add
add
subb
add
add
addb
add
add
add
add
add
add
add
push
add
subb
add
add
addb
addb
add
add
add
add
add
add
add
add
add
cwtl
add
addb
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
dec
add
add
add
add
add
or
add
add
push
add
add
add
add
add
add
add
in
add
add
add
shlb
add
add
add
add
add
add
add
add
in
add
add
add
add
add
mov
add
in
add
add
add
mov
add
adc
add
in
add
add
add
enter
adc
add
in
add
add
add
fdivl
add
add
add
add
add
mov
add
add
in
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
loopne
add
sbb
add
add
add
add
mov
add
adc
addb
inc
addb
mov
inc
adc
inc
and
inc
inc
inc
add
inc
add
add
add
add
add
addb
xor
add
add
and
add
sbb
add
loopne
clc
pop
jmp
pop
inc
add
incl
loopne
decb
sarb
cmpb
add
cld
ds
cld
cmp
aas
cld
cmp
cld
xor
add
aas
incb
clc
jg
add
jg
add
incl
add
jmp
pop
clc
pop
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
add
add
add
and
add
add
add
add
add
rolb
aas
addb
aas
add
add
add
add
add
cmp
add
xor
add
and
add
aas
pop
pop
cld
aas
mov
jg
decl
incl
pop
incl
jg
incl
incl
decl
incl
add
add
add
add
add
add
add
add
add
add
add
addb
add
incl
add
add
add
add
add
add
add
add
and
add
add
add
add
add
rolb
aas
addb
aas
add
add
or
add
add
cmp
add
xor
add
add
add
add
or
add
aas
pop
pop
cld
aas
mov
jg
decl
incl
pop
incl
jg
incl
jecxz
incl
cmp
pop
lcall
idiv
decl
adc
test
xor
mov
lds
jne
test
sbb
mov
imul
pushf
in
int
bound
add
or
jo
popa
sbb
xchg
inc
sarb
mov
hlt
push
mov
jge
xchg
stos
popf
inc
mov
jge
xchg
mov
sub
xor
test
inc
test
sub
lea
leave
sti
sbb
cmp
inc
addr16
mov
movsl
shlb
lahf
mov
and
popl
repz
divl
pop
sub
and
cmp
fcoml
movsb
pusha
adc
nop
out
out
ret
add
cmp
loop
dec
imulb
leave
and
imul
mov
add
jns
xor
push
push
lds
push
out
nop
cwtl
push
sbb
out
mov
sti
lret
and
div
inc
movsb
dec
cmp
inc
inc
adc
test
andnps
negl
and
pop
push
or
xchg
dec
sbb
mov
dec
push
pop
xchg
mov
mov
mov
inc
pop
fstpt
pop
mov
jo
outsb
dec
fs
std
add
jb
mov
in
mov
pop
out
daa
xchg
aas
rcll
mov
cltd
xchg
in
scas
mov
push
insl
add
cmpsb
push
fsubr
xchg
lret
sti
in
mov
cltd
adc
sahf
cmp
mov
dec
sbb
sbb
sub
out
ss
fwait
mov
inc
push
pop
cwtl
mov
or
cmp
leave
sbb
inc
and
mov
jo
or
test
in
pop
stos
loope
pop
add
push
add
jae
lcall
test
mov
insl
dec
xchg
fiaddl
dec
into
mov
mov
sarl
push
movb
lcall
inc
ljmp
rol
pop
and
mov
jmp
xchg
aam
adcb
test
adc
popa
mov
pop
nop
xchg
or
testb
pop
mov
mov
call
push
cmp
pusha
sahf
jo
bound
scas
lahf
xor
xor
test
dec
inc
mov
rclb
jl
shlb
jnp
lds
loopne
outsl
jo
data16
push
sub
xor
push
jae
mov
push
aam
sbbl
pop
jne
inc
jnp
xchg
stc
mov
jp
xor
in
pop
inc
push
inc
lock
mov
xor
fnsave
cmp
jno
out
dec
and
dec
test
into
adc
push
adc
cmpsb
or
insl
mov
mov
sbb
and
outsl
adc
xchg
rolb
cmpsb
je
loopne
bound
repnz
mov
adc
and
loopne
or
mov
add
dec
sti
fchs
dec
and
dec
out
insl
fdiv
jne
test
xor
and
jo
adcl
inc
mov
sub
mov
fisubrs
test
imul
iret
mov
clc
push
add
lods
outsl
add
enter
lahf
adc
cwtl
pushf
sub
cwtl
lds
enter
imul
mov
sbb
jl
mov
in
pop
sub
sbb
stos
subb
rclb
pushf
mov
shlb
or
add
xor
or
cmc
insl
mov
pop
lea
xchg
and
jmp
sar
jns
sbb
rcrb
je
lods
mov
lret
push
sti
or
in
test
ret
repz
fwait
loop
mov
xchg
pop
xchg
or
das
push
in
mov
lret
enter
mov
cmp
int
leave
push
nop
in
mov
enter
sbb
shr
imul
and
xor
hlt
dec
ss
inc
imul
xor
lods
lods
cli
inc
jno
leave
add
hlt
insl
popf
std
ljmp
or
daa
xchg
mov
fmull
xor
notl
jnp
mov
jmp
adc
shlb
mov
cli
xor
popa
imul
aas
out
outsb
je
xchg
call
mov
dec
jg
inc
insb
mul
jns
call
or
mov
dec
xchg
push
and
push
icebp
pop
pop
imul
pop
cmc
cmc
adc
scas
nop
neg
call
jne
pop
fistl
or
adc
rorl
mov
les
ret
inc
pop
adc
jns
mov
sub
xor
jmp
cltd
es
pop
adc
add
stos
dec
sub
in
leave
and
outsb
push
call
popa
sub
out
xchg
stos
inc
scas
in
or
sub
pop
pop
subl
loop
stos
iret
lcall
xchg
ja
xor
ss
xchg
inc
test
test
mov
les
cli
lcall
cli
mov
cmpsl
repz
int3
pop
pop
out
xchg
movsl
xor
inc
xlat
and
fcompl
mov
push
icebp
mov
fdivrp
out
cli
aam
popf
and
xchg
fistpll
or
lods
data16
in
fimuls
inc
fldcw
xchg
test
das
jnp,pn
pop
outsb
jl
sub
sahf
jo
mov
movsb
fnstcw
jo
mov
aad
pop
inc
jno
test
pop
or
shrb
in
nop
rcrb
sub
sbb
into
mov
adc
adc
scas
test
mov
adc
mov
mov
js
stos
inc
adc
sbb
call
repnz
jnp
mov
push
jo
mov
lock
test
and
inc
cwtl
push
xor
inc
shrl
ja
mov
loop
add
cmp
iret
cmp
out
mov
cld
nop
or
add
int
lock
cmp
fs
inc
push
adc
jmp
dec
push
mov
std
das
outsb
insl
rcll
pop
mov
into
lahf
iret
mov
or
in
adc
cli
out
movsl
mov
repz
scas
jo
and
je
int3
lea
mov
inc
inc
jp
jl
fld
rcrl
or
cmpsb
dec
aaa
ja
in
and
push
ret
fsubrs
sub
insl
or
cmp
sbb
xor
push
shlb
adc
loopne
addr16
pop
mov
popl
in
movsl
cmpsb
xchg
scas
lcall
lods
jb
xor
dec
sti
lods
pop
fsubr
push
xchg
rcr
in
je
or
movsb
jle
push
sbb
cmpsl
pop
add
daa
fisubrl
dec
xor
or
mov
lea
mov
ss
inc
cltd
mov
jnp
ds
pop
dec
fs
sbb
subb
xor
bound
mov
adc
jge
add
xchg
std
push
cmp
xchg
aam
cltd
jae
in
dec
adc
xor
mov
out
mov
mov
ss
pop
push
dec
leave
popa
mov
out
xchg
dec
fs
inc
xor
mov
call
loope
stos
int3
jb
ds
in
in
popf
push
and
adc
inc
ficoms
icebp
jl
mov
aaa
add
cmp
insb
push
lcall
faddp
xchg
xlat
push
scas
add
xlat
mov
mov
pop
cmp
mov
cld
pop
shlb
xchg
loop
mov
jbe
and
dec
mov
popf
lea
enter
pop
sar
mov
mov
repnz
lock
popa
arpl
stos
sarb
loop
xchg
mov
xor
push
das
mov
pop
lods
xlat
mov
sub
dec
inc
test
mov
sub
js
xchg
cmpl
mov
push
fwait
xor
push
and
std
mov
mov
mov
mov
adc
pop
xchg
inc
cmpl
dec
stc
cwtl
popf
mov
loop
out
mov
stos
into
fistl
testl
ror
inc
dec
adc
sahf
fmuls
xlat
aas
inc
pop
cmp
movsl
movsb
inc
jmp
add
dec
in
dec
push
inc
test
inc
outsl
or
cmp
lock
sbb
ret
mov
push
push
adc
scas
mov
aam
daa
dec
xor
popf
cmp
arpl
dec
daa
addr16
jl
out
ljmp
add
into
div
imul
jbe
fistl
sub
mov
jle
in
in
pop
insb
fidivl
inc
cmpsl
dec
lods
push
imul
mov
loop
imul
mov
sub
cmp
ss
insb
iret
into
ja
cmp
frstor
test
mov
adc
cmp
add
dec
xchg
cli
sub
cli
rcrb
xor
hlt
mov
jg
mov
movsb
idivl
fcoms
repnz
add
dec
push
mov
les
mov
mov
lahf
inc
xor
pop
test
sbb
fwait
add
repz
and
sub
xchg
mov
cmpsl
push
out
pop
mov
rcrl
lock
push
into
ljmp
pop
xchg
mov
sub
cmp
or
scas
sbb
jl
fdivrl
stos
stos
push
in
aam
and
dec
inc
movsb
add
and
cmp
shll
or
cmp
enter
xchg
mov
aam
scas
cmp
push
xchg
jecxz
mov
sbb
xchg
adc
mov
or
lcall
pop
xchg
rep
push
jne
movsb
leave
in
das
sbb
fdivrs
lds
mov
sti
add
jle
insb
pop
cmp
lea
push
sub
sub
jo
outsl
int3
hlt
scas
or
dec
xchg
lods
addr16
fcmovbe
cmp
xor
rcll
add
xlat
inc
shr
fcoml
cmp
hlt
mov
lret
fmull
pop
into
or
xor
sub
inc
fbstp
cltd
dec
inc
test
and
repnz
aas
mov
cs
sbbb
sub
pop
mov
mov
xchg
lret
add
xchg
movsb
stc
push
pop
or
and
mov
jns
xlat
lods
ja
stos
jl
or
in
icebp
sub
xchg
movsl
and
lahf
xor
enter
or
int
fimuls
xchg
mov
jge
aad
xlat
lcall
nop
sbb
sbb
mov
pusha
stc
insl
dec
lock
xchg
in
stos
jle
pop
jg
jnp
sar
push
icebp
jle
je
xor
and
cld
lods
repz
std
pop
lock
aas
out
rcrb
lret
inc
in
jl
flds
ror
xchg
std
xchg
pop
pushf
jmp
pop
rcl
out
add
cwtl
movsl
jnp
xchg
inc
mov
push
movsb
mov
add
sub
add
sahf
js
notl
in
andb
pop
mov
sub
xor
or
repnz
mov
out
sub
cli
dec
sbb
jns
cmp
sub
dec
test
mov
mov
add
mov
cld
mov
fs
push
mov
mov
mov
xor
mov
and
outsl
xorl
jmp
jns
or
jecxz
jae
fmuls
dec
nop
add
shl
push
movsl
call
xor
pop
js
push
daa
mov
or
dec
jo
fidivs
imul
xlat
jg
movsl
sub
outsb
je
and
sub
pushf
insl
ja
xchg
mov
out
scas
mov
mov
push
inc
hlt
add
aad
inc
dec
add
bound
lods
push
mov
sbb
adc
jp
es
and
inc
insl
arpl
pop
sti
insb
ds
jns
inc
test
lahf
dec
data16
cmp
xchg
test
in
or
test
push
inc
jns
cmp
mov
outsb
and
mov
inc
les
and
rol
sbb
stos
mov
es
fwait
into
loope
lds
mov
incl
scas
jb
in
jo
mov
pop
stos
hlt
sbb
inc
je
sub
sahf
fcoml
test
mov
lcall
mov
push
pop
jne
xor
adc
ret
add
cmpsl
fcmovnbe
sub
xor
jbe
roll
mov
imul
xchg
test
pop
orb
cmp
rcll
or
jb
insb
push
xorl
mov
sbb
push
jno
xchg
pop
xchg
adc
ret
mov
popa
lods
mov
dec
sbb
sub
sbb
je
shl
pop
repnz
cmc
sub
mov
add
dec
cwtl
mov
cmpsl
cmc
adc
jmp
or
adc
and
dec
mov
test
aaa
in
adc
inc
and
iret
fcomip
adc
arpl
cmpsl
jno
xor
jp
hlt
aam
cmpsb
test
add
leave
pop
add
or
adc
iret
enter
and
push
push
out
std
dec
movsb
cld
cltd
add
addr16
cltd
xchg
aam
and
call
ss
xor
ljmp
loope
cmp
mov
adc
cmc
mov
inc
xor
jnp
mov
inc
lock
out
jp
push
xlat
xchg
insl
ljmp
stos
fists
lea
adc
cmp
cmpsl
dec
lcall
das
inc
sub
dec
inc
pop
into
push
aas
mov
sti
mov
lods
or
add
mov
add
repnz
mov
notb
inc
fcom
cmpsb
xchg
dec
stos
in
outsb
cwtl
lcall
mov
mov
outsl
hlt
push
mov
or
jnp
and
enter
pusha
add
inc
shl
jmp
xchg
test
stos
cmpsl
iret
aas
mulb
fcomps
fnstenv
jl
fwait
out
lret
ss
sub
mov
jae
xor
mov
aas
cli
mov
nop
rorb
mov
sti
incb
mov
hlt
mov
scas
mov
imul
adc
lock
roll
or
sti
or
popa
jmp
out
int
adc
jb
imul
mov
mov
cltd
mov
mov
jns
mov
pop
inc
lds
push
lret
jae
jle
ret
fldcw
mov
and
sub
fidivs
mov
test
rclb
add
mov
inc
pop
inc
js
cmp
and
sti
lret
gs
adc
or
add
sub
ljmp
stos
sub
adcl
xor
push
ds
enter
sarb
xchg
iret
push
adc
ljmp
pop
xchg
rcll
cmp
push
lock
adc
sub
scas
frstor
sub
popa
jle
clc
dec
roll
out
jbe
sbb
and
inc
add
imul
adc
xor
and
cmp
mov
cmpsb
dec
jmp
and
pop
xchg
mov
ljmp
sub
sbb
or
cld
sub
adc
xor
mov
aad
jb
push
mov
pop
pop
sarl
inc
leave
lahf
and
movsl
arpl
cmpsl
loop
mov
cmp
pop
iret
mov
jg
cmp
mov
jns
ljmp
xor
adc
sub
mov
loopne,pn
gs
push
daa
shrl
call
jmp
adc
mov
pop
mov
jmp
mov
mov
popf
sbb
test
lock
mov
cwtl
aaa
adcl
ret
push
loopne,pn
loopne
nop
cmpsb
pop
mov
jns
pop
push
ret
fs
push
ja
popa
mov
xchg
sbb
test
leave
sti
movb
int
stos
ja
testb
mov
xor
bound
outsb
mov
js
inc
sub
push
mov
push
imul
xchg
xor
inc
pop
xlat
add
rcrb
jae
ret
push
pop
shlb
mov
xor
push
or
loope
lock
adc
sarb
pop
mov
movsb
aas
sti
xchg
mov
adc
sub
jg
jns
movsl
or
ja
icebp
inc
call
int3
mov
mov
loope
fmull
stos
mov
and
sbb
xchg
test
mov
sub
hlt
rol
mov
jp
fwait
jbe
jge
fidivrs
xor
cmp
jmp
sub
cmc
push
lea
ss
dec
cmp
ret
cld
and
mov
popa
lret
ljmp
and
ret
sbb
enter
sub
ds
mov
ret
fst
adc
or
dec
nop
lret
ss
lods
xchg
sbb
cwtl
mov
dec
inc
dec
je
mov
cmp
xchg
jnp
iret
imul
ds
fwait
les
cltd
pop
divl
adc
int3
lods
stos
testl
lock
adc
lahf
mov
push
sbb
lcall
inc
cmpsl
push
lock
dec
mov
in
fwait
dec
push
sar
wrmsr
inc
mov
jg
dec
out
test
and
jle
jle
ret
pop
arpl
mov
movsb
inc
jns
clc
popa
mov
xchg
imul
dec
add
dec
and
std
mov
add
or
jle
adc
inc
add
in
inc
mov
push
cltd
ret
xchg
and
jmp
dec
scas
pushw
out
push
aam
push
sub
sub
cli
jge
cmp
or
mov
movsb
sbb
loope
mov
and
loop
cs
ljmp
mov
out
xchg
xchg
add
cs
sub
xchg
jecxz
dec
shlb
les
dec
mov
ss
lahf
xchg
repz
add
pushf
flds
sbb
cld
xor
mov
lds
ljmp
or
cwtl
mov
xchg
subl
inc
out
lds
add
jp
into
rcll
sub
add
cli
int3
and
xchg
cli
cmc
ret
flds
jns
xor
insb
mov
roll
mov
mov
adc
mov
jp
pop
arpl
jp
movsb
or
std
aas
enter
adc
mov
dec
je
cmc
cmp
insb
mov
fstpt
pop
outsl
cmpsb
in
fcoms
xchg
xlat
shl
and
clc
addl
add
xchg
in
cmp
ret
out
mov
mov
imul
xchg
outsl
sub
aad
mov
nop
les
leave
into
mov
sbb
pop
fcmovnbe
inc
scas
xor
cmp
adc
mov
or
in
adc
mov
push
mov
clc
push
lods
lahf
mov
popa
cmp
repz
outsl
pop
pop
and
outsl
adc
out
or
push
add
xlat
dec
addr16
jbe
cld
ljmp
inc
lods
lret
mov
add
cld
je
daa
dec
or
cmp
add
arpl
dec
xor
xchg
stos
cvttps2pi
addr16
shll
loope
orb
lret
dec
lret
xchg
cmp
aam
rorl
mov
or
mov
iret
lods
push
fsubr
leave
pop
fldenv
pushf
sbb
js
in
icebp
ficoms
andl
ret
push
cmpsl
cld
inc
dec
push
push
fildl
rolb
fbstp
adc
push
cmp
xlat
dec
xor
ret
xchg
stos
mov
out
sub
adc
pusha
fiaddl
and
out
jmp
arpl
fadd
sub
test
movsl
inc
std
mov
cmp
mov
out
jne
or
out
call
xchg
test
sbb
push
ret
mov
mov
sarb
movsb
add
test
xor
and
aam
rolb
pop
clc
lods
push
jmp
fistpl
mov
pop
or
push
hlt
push
jo
add
movb
popa
repz
daa
xchg
push
mov
rcll
cmc
inc
jo
dec
jmp
bnd
bound
cmp
das
pop
push
dec
xor
call
jns
test
add
test
jno
sub
pop
jb
mulb
mov
adc
test
dec
mov
testb
inc
test
adc
pop
pop
jecxz
imul
lods
inc
add
loopne
fs
xchg
or
xor
and
movsb
mov
push
loop
dec
test
lret
or
js
xchg
bound
faddl
mov
xchg
push
fwait
aam
pop
cmp
inc
pop
push
adc
xor
ds
mov
icebp
pop
roll
jno
cmp
dec
pop
mov
fsubs
adc
add
paddq
mov
push
cmp
fld
test
pop
add
xchg
iret
out
scas
adc
fimuls
xor
arpl
std
xchg
out
test
mov
scas
cmp
out
and
es
mov
dec
test
pop
and
cmc
inc
out
stos
fldl
jge
xchg
aaa
in
pop
das
aaa
cmp
pop
inc
es
inc
cltd
sub
inc
fstpt
pop
jns
inc
cmp
xchg
jne
cmp
mov
insl
jge
popf
add
pop
or
mov
imul
insb
and
mov
inc
lods
bound
aad
popa
jne
cmp
ljmp
dec
lcall
int
add
aam
cmp
lahf
add
imul
loope
pop
pop
sbb
in
out
imul
add
xchg
mov
sub
sub
push
push
repnz
in
and
mov
into
iret
hlt
mov
fs
pop
mov
jo
loop
lock
in
sbb
ret
mov
jo
push
outsb
andb
rorb
push
stos
js
mov
sbb
adc
movsl
je
push
insl
popa
rolb
push
arpl
mov
in
xchg
push
das
pop
aaa
and
in
aaa
int3
testw
out
mov
mov
fisubrs
adc
and
jno
fisttps
dec
ret
icebp
inc
inc
out
outsb
xchg
add
push
sbb
mov
popf
insb
inc
in
xchg
popf
test
scas
fsubr
pop
mov
or
sarb
das
testb
mov
inc
icebp
dec
mov
lods
adc
mov
mov
imul
pop
outsb
movsb
xchg
xlat
jnp
adc
pop
sbb
push
pop
mov
loop
and
cmc
enter
pop
mov
cmp
mov
cmpsl
leave
das
iret
push
cmp
mov
xor
loopne
cs
rolb
aam
rcll
lods
or
mov
sbb
or
inc
aas
icebp
xor
add
aaa
or
sub
sbb
icebp
xor
lods
cmc
add
push
je
sbb
test
mov
hlt
cld
test
cmp
mov
mov
cltd
in
jno
mov
jbe
dec
sbb
xchg
ja
ffree
add
dec
mov
pop
mov
mov
insl
jmp
cmp
hlt
into
inc
dec
push
addb
sub
fstp
insl
int
or
cmpsl
lahf
lods
jmp
loope
in
es
dec
sti
add
decb
jle
jmp
jp
mov
lea
stos
jbe
mov
jno
das
cmp
or
lahf
shl
jp
imul
fstpt
cwtl
add
js
nop
outsl
xchg
test
shll
or
pop
ficomps
and
push
jns
jecxz
das
xchg
iret
test
jne
pop
sub
ret
push
shr
popf
sarl
mov
mov
gs
push
mov
cs
cmpsb
loopne
pop
push
scas
inc
inc
push
xor
mov
sub
xlat
ljmp
insl
cmp
jp
ficoml
data16
pop
fwait
addb
jbe
lods
popf
mov
dec
pop
pop
repz
mov
jle
push
jmp
in
jg
push
inc
mov
test
jo
mov
xchg
fwait
ljmp
mov
aas
imul
inc
cld
inc
jecxz
insl
inc
pop
jno
xchg
in
inc
test
out
mov
in
push
cmp
addl
sub
pop
aad
inc
sub
push
and
shrb
xchg
mov
mov
mov
cltd
sbb
fdivrs
ja
sbb
nop
xor
mov
mov
insb
fninit
sbb
jecxz
sub
imul
ds
stc
cwtl
mov
mov
mov
cwtl
cmp
nopl
fldcw
cwtl
das
mov
pop
inc
stos
jp
scas
and
pop
xchg
out
and
jno
nop
in
mov
arpl
mov
sbbl
sbb
jg
mov
sbb
fyl2x
mul
shrb
or
notb
pop
dec
addb
cli
popf
push
add
sbb
mov
notl
test
loope
push
dec
outsl
cwtl
jb
pop
dec
push
movlps
dec
inc
ret
sub
mov
out
les
gs
in
mov
fcomps
mov
jo
push
lret
pop
out
sub
ljmp
xchg
insb
sub
bnd
adc
insl
mov
lea
stos
jae
out
sub
add
ss
xchg
sahf
shl
scas
push
out
hlt
int3
pop
and
sahf
xlat
cltd
or
add
pusha
mov
ret
jge
adc
adc
repnz
rcll
scas
in
cmp
movaps
add
jge
jb
ja
mov
or
xchg
push
inc
pushf
gs
and
add
clc
mov
lds
xchg
scas
adcb
das
addr16
addl
gs
xchg
insl
sti
jecxz
mov
jo
jmp
pusha
nop
pop
out
mov
jnp
xchg
stos
jb
into
sahf
cmp
std
pop
sbbb
stos
insl
dec
mov
rorl
xlat
push
mov
inc
test
push
out
mov
loop
mov
mov
xchg
add
pop
sbb
popa
xchg
push
mov
insb
jmp
fnstenv
xchg
es
fistps
aaa
jo
cvtdq2ps
dec
repz
jmp
cmp
out
xchg
ja
mov
lods
fs
es
sbb
loop
jbe
mulb
sbb
xchg
or
lods
jne
fsubl
jle
jl
push
add
xor
clc
xor
iret
filds
jmp
xor
dec
lods
nop
xchg
push
arpl
fdivrl
push
repz
negb
jmp
ffreep
cmp
notb
inc
sub
pop
lds
cltd
push
sub
cmp
cmp
sbb
pop
pop
sbb
add
xchg
dec
rorb
cmp
call
add
loopne
lock
sbb
jns
inc
mov
mov
or
sahf
push
pop
stos
mov
dec
dec
aaa
xchg
adc
insl
jne
mov
movsl
stc
mov
repnz
lahf
cmpsb
cmp
push
add
cmp
mov
ret
stos
and
sub
fwait
mov
fs
in
and
push
xchg
fisttpl
scas
fs
or
push
movsb
int
cmpsl
aas
mov
dec
mov
insb
in
push
outsl
cwtl
pop
addr16
inc
aam
cwtl
mov
shlb
cmp
fsubrl
and
cmc
data16
adc
sbb
mov
rcrb
dec
lds
aas
mov
ret
popa
cli
outsl
lock
pop
addr16
lahf
sbbb
jae
ret
and
pop
xchg
add
orl
std
jne
push
imul
in
js
jl
mov
js
loop
dec
sub
fnstsw
lock
adc
push
cmc
push
cltd
or
dec
sub
sbb
scas
and
arpl
pop
and
mov
sti
xchg
mov
xchg
push
ret
mov
cmp
clc
sbb
adc
pop
popf
pop
push
call
stos
adc
icebp
dec
insb
mov
mov
call
rolb
inc
or
ja
in
pushf
fcmovne
and
sbb
hlt
adc
and
bound
fisubrs
popf
fistpll
js
mov
test
pushf
jge
addl
cwtl
fs
cwtl
movsl
pop
sbb
popa
fisttpl
js
mov
and
and
xchg
cmc
stos
incl
push
jo
lods
pop
jae
sahf
cli
cmp
es
ds
pop
aam
pop
mov
cwtl
push
in
testb
push
pusha
push
cmc
inc
mov
mov
fs
or
fistpll
daa
rol
icebp
sub
jne
dec
mov
jge
or
mov
sbb
ret
movsb
mov
test
cmp
lock
xchg
rcr
mov
or
ljmp
sti
gs
push
cmpl
repnz
add
push
lods
mov
and
je
imul
dec
les
aam
jmp
pop
mov
ja
push
mov
mov
jbe
pop
mov
add
test
pop
int
scas
mov
out
sub
lock
jmp
in
sbb
repnz
push
stos
icebp
adc
fucomi
repz
sub
mov
adc
test
or
add
xchg
inc
mov
outsl
les
vunpckhps
pushf
push
aam
xor
movsb
and
hlt
es
push
mov
mov
in
insl
in
sub
inc
addr16
pop
idiv
icebp
jb
cltd
sub
push
cmpsl
cs
mov
leave
ret
mov
pop
arpl
dec
movsl
and
jle
maskmovq
idivl
mov
pop
pop
cmp
cmp
mov
push
inc
ss
xchg
mov
pusha
xchg
mov
push
jbe
test
mov
sarb
mov
out
xchg
sub
sbb
sbb
fcmovnu
cmp
xor
lahf
sbb
clc
xchg
enter
dec
push
dec
sbb
jl
pop
push
in
mov
clc
add
push
xchg
add
daa
add
inc
xor
cmp
test
roll
lods
insb
stc
or
test
mov
mov
jmp
jp
imul
inc
into
insl
mov
pand
sub
iret
xchg
jge
mov
and
shlb
inc
stos
push
fldl
dec
cmp
ds
lret
ret
xor
pop
repnz
push
and
or
lods
push
jne
mov
inc
sti
pusha
and
xchg
xorl
pop
pop
nop
nop
in
mov
sub
test
js
iret
xor
shlb
repz
icebp
bound
or
jns
inc
or
mov
inc
test
mov
push
jmp
pop
add
jp
jne
mov
dec
cmp
fistpll
lods
lcall
test
sti
ficompl
add
pusha
das
push
fsub
fstpl
mov
das
xchg
test
into
sbb
sbb
js
lahf
and
ror
push
cld
ss
sbb
mov
ljmp
orb
das
repz
cmp
cmp
inc
stos
and
mov
mov
mov
jns
or
mov
mov
sti
mov
rol
cwtl
push
push
dec
mov
je
add
shrb
packssdw
adc
jp
dec
call
outsb
sub
loopne
sbb
mov
push
outsb
mov
dec
push
cmp
fmulp
scas
xchg
sti
out
dec
push
add
rcll
icebp
add
in
clc
add
sti
les
jmp
add
lods
roll
cmpsl
jp
sub
xor
sub
outsb
cmp
mov
ljmp
push
in
add
xchg
shl
push
fisttpl
dec
outsb
cs
icebp
cmp
push
fildll
test
cmp
rcr
mov
mov
inc
jg
imul
mov
jmp
add
lcall
xorb
in
and
xor
pop
xchg
enter
pop
data16
inc
insb
test
sbb
sub
movsb
pop
dec
xor
push
and
jmp
mov
aad
mov
cmc
lods
sub
xchg
pop
push
cmpsb
mov
push
outsb
sbb
sbb
jne
mov
sub
addb
adc
lds
mov
lods
iret
cmp
mov
stos
imul
sahf
into
stc
js
mov
rorb
movsb
sub
rol
addr16
push
fucomi
add
rorb
fucompp
cmp
in
pop
or
subb
mov
sbb
inc
pop
add
in
push
sbb
ret
jmp
jg
adc
cmp
or
cli
and
add
stos
testb
inc
inc
xor
mov
adc
enter
dec
mov
es
push
mov
jno
jecxz
sbb
jmp
mov
and
push
push
sbb
xchg
fs
xor
push
jmp
movsl
push
add
jb
mov
insb
scas
mulb
pop
jbe
or
and
push
lods
xabort
inc
lret
inc
add
xchg
hlt
rcll
stos
sbb
add
mov
sub
mov
bound
adc
push
mov
sub
idivb
pop
out
aaa
loope
mov
fsubl
jne
loopne
pop
in
mov
paddsb
or
or
ljmp
adc
test
sahf
stc
xchg
fnsave
or
xor
jl
fsubl
out
and
xchg
pop
in
or
cmp
xchg
xchg
jle
cmp
push
push
adc
mov
pusha
into
stos
mov
xchg
pop
adc
aaa
push
movsb
mov
mov
test
cmp
pushf
add
pop
and
push
jmp
adc
mov
dec
insl
fmul
xchg
dec
cmp
call
int
in
fwait
dec
fsts
pusha
out
mov
mov
cs
push
push
fs
je
jecxz
add
sahf
out
lods
ret
les
into
sahf
jg
fcmovnu
loopne
clc
cwtl
xor
or
cmpsb
test
iret
and
jbe
xchg
imul
add
xlat
outsl
fnstcw
xorb
aam
jmp
inc
jl
test
icebp
les
sub
outsl
iret
inc
das
and
xchg
out
xchg
stos
mov
mov
repz
dec
stos
aad
test
jno
out
mov
mov
ficompl
sbb
cwtl
ss
cmp
pop
icebp
sub
mov
scas
les
decb
mov
jo
cmp
lcall
lods
sub
fldenv
cld
jmp
pop
and
js
jno
cmpsl
pop
gs
push
pop
shrb
dec
repz
and
out
fdiv
mov
bound
dec
clc
popf
mov
or
mov
xchg
cmp
fmul
mov
push
jmp
aaa
mov
xor
incb
mov
mov
lock
mov
ds
mov
xchg
and
mov
orl
test
push
movsl
mov
adc
mov
les
dec
jae
and
outsl
mov
pop
adc
orb
jg
aad
dec
iret
mov
push
add
cmpsl
enter
or
pop
cld
mov
clc
sub
xchg
pushf
sbb
sub
jne
pop
je
or
nop
cmp
adc
fldcw
xor
ret
push
fcmovb
clc
arpl
je
xlat
cs
mov
lret
insb
sub
or
lods
clc
daa
fwait
sbb
les
cmp
repz
push
scas
xor
dec
dec
std
out
idivb
fcomi
cld
sub
mulb
cltd
insb
jecxz
lret
lock
and
movsb
sbbl
mov
inc
mov
bound
rcrl
dec
stos
mov
cltd
lock
mov
aad
cmp
pop
cli
sbb
jg
out
mulb
frstor
or
leave
lods
jmp
vxorps
sub
pop
cmp
outsb
cmp
cmp
rclb
sbb
repnz
mov
dec
and
in
mov
adc
sbb
hlt
add
mov
mov
cmc
mov
xor
push
dec
insb
in
rorl
cs
movsb
jmp
mov
mov
dec
pop
adc
and
adc
mov
pop
gs
out
mov
pop
inc
and
gs
jns
cmp
cmp
adc
pop
les
mov
xchg
push
fstpt
xor
rolb
jle
jb
add
add
or
scas
and
call
jne
sbb
out
xchg
sahf
add
fcom
rcl
mov
sbb
out
lret
mov
inc
mov
dec
mov
movsb
sbb
addl
dec
pop
mov
sahf
mov
jp
inc
idivb
add
mov
inc
dec
push
dec
cwtl
pop
stc
dec
mov
add
pop
push
jmp
aam
dec
or
inc
lret
push
adc
test
jecxz
movsb
xchg
and
pop
push
jp
les
mov
mov
add
movsl
inc
mov
out
ja
fmuls
jmp
push
xor
pushf
pushl
adc
xchg
mov
mov
mov
aad
xor
das
mov
sub
cmp
inc
mov
and
jbe
mov
movsb
ror
jbe
inc
out
cmp
ficompl
cmp
cmp
xor
xor
push
roll
pusha
or
fldl
movsl
push
decb
cmp
shrl
ret
or
icebp
xlat
push
pop
lret
inc
push
mov
push
pop
mov
push
pop
je
mov
jb
xchg
add
xor
lret
les
lods
push
fdivs
and
testl
inc
ficoml
fcmovbe
jbe
pop
jne
lods
jne
enter
add
add
add
sbb
dec
out
add
lret
cmp
in
cmp
lea
mov
rolb
push
ss
popf
mov
lret
aad
add
fiadds
add
popf
pop
arpl
js
pusha
adc
jbe
in
lea
push
stc
push
sub
push
xchg
nop
leave
pop
sub
cld
cmp
pop
jne
jmp
pusha
push
inc
movsl
aam
outsl
pop
cli
adc
das
addr16
pop
xchg
jns
inc
or
pop
mov
or
gs
jge
jne
xchg
fsubr
dec
sub
pop
insb
mov
dec
mov
idivb
adc
cmp
mov
sub
pop
outsb
cltd
lock
mov
fwait
inc
push
inc
add
ja
adc
pushf
lcall
xchg
pop
je
loope
push
movsl
dec
adc
sub
pop
cmp
jbe
add
adc
adc
hlt
aad
negb
ja
pushf
sbb
aas
sbb
dec
and
sbb
push
mov
stc
mov
jno
jo
jg
sbb
mov
shlb
inc
jb
xor
jnp
mov
les
idiv
aas
in
pop
adc
rcrb
fdivrl
xor
subb
cmp
cwtl
fdivs
push
aad
push
incl
push
loop
sbb
fldl
enter
int
push
fwait
add
push
dec
add
dec
push
xor
movsl
ljmp
loop
or
imul
mov
jecxz
jno
or
clc
popf
imull
or
inc
inc
cs
inc
pop
bound
pop
nop
sub
mov
pusha
jp
sub
mov
mov
or
xchg
pop
cmpsl
dec
jl
adc
mov
pop
sub
loop
mov
lods
in
mov
xor
sub
divb
mov
lret
push
xchg
inc
lods
lret
jge
xchg
dec
ret
push
push
xor
pop
jbe
push
aaa
call
xchg
test
inc
push
sbb
cld
push
xlat
jo
in
push
fidivs
add
lret
scas
mov
dec
dec
test
mov
popf
sbb
cmp
mov
into
jl
orb
cld
jno
xor
daa
or
add
bound
pop
fld
fsubl
aad
push
inc
rolb
jne
or
push
push
mov
push
lahf
jb
ret
jge
test
inc
cmp
sbb
arpl
test
sub
popf
adc
insl
and
arpl
or
pop
js
mov
jne
cld
fldl2e
add
aaa
stos
in
cmp
pop
outsb
mov
fidivrl
mov
lock
pop
cmp
pop
and
or
aas
aas
push
out
pushf
lcall
in
lret
xor
sbb
push
mov
add
addl
jmp
mov
push
xchg
lds
mov
and
sub
mov
pusha
and
js
or
push
push
mov
pushf
inc
js
lahf
dec
pop
rcl
push
and
popf
std
lods
sub
sbb
insl
int
test
andl
pop
and
iret
mov
xchg
mov
pop
jne
mov
rclb
movsl
cmpsb
pop
jg
add
psubd
add
outsl
mov
imull
daa
rorl
cwtl
shlb
clc
push
daa
ret
cmp
add
test
push
cmc
push
xlat
and
push
cmpsl
stos
aas
cmpsb
adc
xlat
lea
fcmovbe
add
xlat
fnstenv
jb
in
in
lret
jmp
mov
movsl
mov
sbb
lock
cmp
dec
adc
addr16
xor
clc
roll
xchg
dec
lods
outsl
xor
pushf
in
xchg
cmp
or
pop
pop
adc
test
repnz
pushf
add
sbb
sub
test
lahf
pop
sbb
test
mov
rcll
icebp
mov
ss
mov
orb
xchg
lock
or
mov
xchg
fsubrp
push
insl
push
sub
mov
insb
and
arpl
push
popf
clc
sbb
popw
das
ret
add
jl
or
fwait
inc
repnz
pop
pop
xchg
in
and
popf
cmp
adc
push
xchg
and
arpl
dec
sbb
push
loopne
subb
sub
xchg
push
fwait
jo
cmp
or
and
mov
shr
inc
mov
repz
and
in
outsb
enter
std
mov
xchg
cld
jne
std
js
cwtl
xor
jecxz
add
lds
push
dec
adc
mov
fsubl
mov
pop
mov
ss
jnp
and
and
push
sub
mov
push
xchg
fildl
inc
dec
mov
adc
xchg
jmp
push
jle
pop
loopne
out
fcompl
ret
xor
jb
push
popf
movsb
test
testl
and
test
jg
test
add
xor
xor
xchg
mov
lods
cmpsb
imull
lea
xor
notb
js
sub
cmp
imull
push
cltd
sbb
pop
add
mov
sub
imul
loopne
add
pop
push
dec
mov
cmp
sub
loop
outsl
lret
push
add
ljmp
mov
cmc
pop
sub
hlt
mov
out
sub
subb
repz
cltd
mov
push
dec
fsubrl
aas
data16
out
nop
mov
cli
lret
call
jle
das
sub
pop
push
cltd
inc
pop
ljmp
dec
dec
adc
jle
cmp
xchg
pop
aam
mov
shrb
lret
adc
xor
mov
push
push
stc
push
es
loope
fwait
and
idivl
fnsave
icebp
jl
lahf
lea
popa
cmp
nop
jbe
mov
mov
scas
jle
in
movl
jge
fstl
inc
dec
insl
pop
xchg
add
jmp
inc
mov
pop
cs
mov
jle
movsb
jg
fnstcw
insb
add
push
insb
aad
mov
mov
ret
in
or
out
inc
mov
mov
and
lds
or
push
adc
jge
mov
mov
adc
fwait
rolb
jne
add
imul
xor
dec
sbb
cmpsb
pop
cmpsl
mov
push
fistl
xchg
mov
sti
pop
jno
and
inc
pop
xchg
scas
add
jbe
and
repnz
mov
out
mov
fs
pop
andb
sub
popf
sbb
ljmp
pop
dec
daa
loop
mov
cmp
outsl
inc
das
shlb
hlt
mov
sub
sub
or
pop
pop
addr16
mov
ds
mov
push
jo
push
mov
fisubs
insb
pop
mov
into
lret
lods
mov
js
jae
mov
ret
ljmp
adc
int
movsb
sub
loope
and
insl
sub
out
dec
xchg
push
inc
sbb
push
es
into
cmp
sbb
xchg
push
les
xchg
roll
iret
or
add
stos
mov
jmp
test
mov
push
ret
jge
cmpsb
aas
insb
pop
insb
stos
loope
scas
pop
xchg
or
rcrb
sub
xchg
sub
push
adcl
or
push
lea
lock
std
xchg
pop
repz
data16
dec
push
push
mov
cld
lods
adc
push
arpl
mov
dec
shrl
jns
mov
or
adc
sub
cmp
push
mov
fiadds
in
aam
sub
mov
inc
adc
sub
int
adc
adc
bound
xchg
in
kmovd
call
sbb
jle
xchg
cltd
pop
jno
testl
in
dec
repnz
in
sub
pop
cwtl
nop
xchg
fwait
push
push
or
jg
mov
push
sbb
lods
sbb
lods
cmp
or
jle
inc
stos
dec
xor
sti
cld
cmp
out
mov
cltd
adc
gs
daa
jp
hlt
or
xor
add
mov
add
enter
pop
push
movsl
or
sub
imul
xor
mov
fdivs
mov
lds
std
inc
or
stc
adc
pop
cs
les
pop
pop
pop
mov
out
mov
push
mov
add
fdivs
sub
xchg
lods
mov
push
jno
leave
xchg
movsl
daa
lret
shlb
es
push
push
add
insb
cwtl
pop
paddq
jecxz
mov
push
lret
adc
xor
lcall
cmpl
roll
and
les
fistpll
push
mov
add
neg
sahf
dec
adc
jl
rcrb
or
gs
xchg
inc
clc
jg
sub
lcall
pop
mov
lea
dec
sbb
push
enter
rorl
sub
and
cmpb
icebp
push
pusha
sub
push
sbb
mov
es
mov
push
pusha
in
inc
and
mov
add
cmpsb
jge
or
mov
mov
sub
dec
mov
jno
jg
push
pop
mov
ret
sbb
imul
hlt
lret
insl
adc
aad
sub
xlat
jae
inc
add
push
xchg
inc
sbb
xchg
mov
push
jo
and
jo
icebp
inc
push
sbb
jns
mov
std
sbb
jp
pushf
mov
lea
jg
repz
rcl
loop
insb
mov
push
jmp
lcall
mov
stos
pop
sahf
loop
xchg
pop
add
js
add
pop
xor
lods
sbb
pop
and
clc
cmp
ret
pushf
inc
jp
sub
or
jns
fadd
and
ss
cmp
dec
cmp
cld
xor
pop
imul
mov
std
iret
out
cmp
jo
into
pop
cmc
xchg
div
sbb
or
pop
aaa
pushf
mov
aam
lret
push
setnp
test
inc
and
adc
shlb
sahf
rolb
fcomps
iret
or
inc
inc
dec
add
dec
add
xchg
in
adc
cmp
xor
clc
movsb
mov
sub
mov
xchg
leave
mov
sub
sbb
pop
cld
sub
lods
cmp
imul
dec
dec
cld
sbb
popf
cmc
cmpsl
and
call
cmp
inc
mov
dec
stc
icebp
add
out
sbb
loope
mov
dec
popa
in
mov
lahf
push
push
mov
sub
hlt
push
add
repz
or
mov
xlat
pusha
adc
jle
rcr
cmp
nop
call
sbbl
subl
in
jne
fsubp
cmp
std
mov
out
cs
stos
cmp
mov
and
add
or
mov
mov
mov
and
fisttpll
or
push
xchg
jle
fadds
es
push
xlat
fimull
shll
xchg
adc
and
jne
push
out
jne
mov
sub
mov
ljmp
movsb
aad
sub
int
mov
pusha
mov
and
ljmp
and
loop
in
and
jo
insl
mov
push
jo
jns
jo
arpl
sbb
xchg
xchg
movsb
stos
inc
les
stc
pop
mov
add
cmp
ss
popa
push
out
dec
outsb
pop
in
repnz
loopw
sar
adc
inc
fidivl
ljmpw
fcmovnbe
subl
pop
dec
rclb
cmp
int3
mov
cmp
fldcw
test
push
loop
sub
adc
pop
pop
adc
lock
into
hlt
push
gs
mov
xchg
fdivrl
rclb
cmp
or
in
subb
push
and
pusha
mov
push
jbe
push
lret
ficomps
mov
vmread
pop
inc
mov
cli
pop
mov
cmp
or
and
pop
into
test
push
push
je
insb
xchg
mov
mov
add
pop
icebp
rclb
mov
add
dec
add
int
int
xor
adc
or
and
push
idivl
jns
incl
loope
cmp
dec
mov
inc
popa
mov
xor
mov
lret
lods
dec
inc
fcomi
sarl
loop
aam
jnp
sbb
js
call
pop
test
push
pop
into
mov
movsl
lea
insb
loope
shl
movsb
sbb
testb
xor
movsb
repnz
pop
push
insl
push
mov
fidivs
mov
cwtl
inc
add
sbb
xor
into
inc
daa
or
sti
or
test
mov
add
test
and
lret
or
mov
fisubl
setne
adc
lret
and
sub
lret
mov
out
rorb
push
adc
dec
aam
add
addr16
dec
out
and
mov
call
hlt
or
test
adc
popa
out
inc
mov
pop
imul
sub
push
testl
ja
cld
jb
imul
insb
push
mov
loop
and
jne
xchg
inc
cmp
in
jp
dec
jecxz
mov
inc
xchg
fistpll
roll
fdivrp
fstps
and
jmp
ja
or
pop
aaa
sbb
test
push
mov
xchg
xor
mov
mov
mov
cmp
scas
mov
cmp
jle
mov
mov
cmp
or
pusha
jl
ficoms
cmpsl
adc
dec
pop
inc
int3
inc
repnz
enter
in
mov
ja
pop
test
add
or
and
add
aad
adc
and
int
sub
icebp
cwtl
out
xchg
sbb
mov
and
out
enter
sbb
cmp
aaa
mov
jl
pop
in
in
jge
fsts
sbb
in
pop
sub
pusha
sti
adc
aas
lock
loopne
pop
testb
and
jns
pop
loopne
jecxz
mov
test
hlt
addb
ret
lods
push
and
add
push
mov
sub
cmc
and
pusha
fdivrs
out
mov
je
nop
sbb
or
lahf
imul
mov
das
lock
jb,pn
jecxz
mov
test
pop
push
leave
mov
or
inc
ror
rcrb
lods
sbb
imul
mov
xchg
mov
test
and
jmp
xorl
cmp
repnz
cwtl
insb
les
aad
cmp
sub
rcl
lret
cs
add
mov
lods
cmp
jo
pop
inc
bound
ja
and
ss
das
out
jecxz
test
sub
out
scas
int
xor
rolb
mov
mov
jne
mov
pop
clc
insl
cs
xchg
mov
xor
mov
ljmp
aam
sub
shr
lods
add
cld
xchg
sub
mov
xlat
std
cmp
mov
xchg
std
lea
pop
sti
pop
pusha
dec
add
adc
inc
jne
outsl
lret
push
push
cmpsl
adc
sub
nop
and
stos
cmc
xchg
sub
cmc
sti
inc
cmc
inc
fldenv
and
dec
lcall
adc
nop
fdivl
xor
in
jg
inc
cmp
ss
adc
out
xor
es
lods
jns
mov
add
dec
lret
dec
js
loop
and
push
dec
fnstsw
push
ror
ret
psubsw
scas
ja
add
pop
pop
in
sub
inc
std
dec
push
inc
outsl
leave
movsl
shlb
gs
pop
xlat
stos
sbb
pop
jbe
repnz
int3
clc
movb
add
inc
neg
xor
add
adc
xor
clc
jb
ja
adc
pushf
aam
xchg
push
mov
jecxz
movsb
stc
test
dec
stc
mull
jbe
jne
pop
pusha
stos
push
fdivr
cs
jl
movsl
fadd
pop
or
stos
mov
sbb
and
xor
ficoms
jne
jo
loope
adc
adc
pop
sar
or
cs
inc
imul
test
push
pop
stos
or
sub
ss
hlt
inc
scas
out
cld
lret
and
pop
rcll
xchg
mov
mov
mov
daa
arpl
lods
lock
lods
mov
test
pop
dec
adc
xor
test
xor
enter
call
insb
mov
jge
je
je
mov
mov
xor
dec
ret
addr16
inc
movsl
out
pushf
xor
out
fwait
repnz
call
jb
fistpl
or
lods
aas
jle
sbb
lds
sub
inc
dec
repnz
stos
pushf
jp
mov
push
xor
mov
popa
mov
pop
fbld
pop
mov
movsl
and
or
aad
xchg
popf
outsb
dec
test
inc
mov
insl
push
cmp
xor
out
popa
mov
push
and
jmp
inc
or
in
jmp
push
push
sbb
sub
imul
cmp
adc
xchg
jg
cmp
enter
add
das
notb
mov
or
out
mov
jbe
popf
push
xor
cmp
mov
cltd
dec
xlat
loope
repz
arpl
cli
mov
enter
mov
mov
push
fcmovb
add
adc
icebp
push
jmp
leave
insl
decl
sbb
mov
aam
jae
inc
xchg
adc
add
stc
adc
rorl
outsl
mov
and
into
mov
clc
outsb
xor
je
rcrb
cwtl
jl
jecxz
or
push
bnd
push
pop
sbb
mov
xor
dec
data16
sahf
inc
sbb
sub
add
loopne
push
push
int3
out
movsb
pop
xor
mov
jmp
adc
lds
cmc
mov
and
sub
cmpsb
inc
adc
xor
mov
dec
dec
fsubr
sub
cld
and
fisubrl
push
adc
fistpll
jp
clc
push
in
push
mov
adc
repz
push
imul
fcmovu
iret
push
pop
mov
out
call
jno
dec
sbb
xchg
jmp
lods
cmp
dec
inc
in
cmpsl
xchg
frndint
outsb
outsb
sbb
push
xchg
test
dec
or
xchg
cmp
fisttps
and
push
dec
pop
push
mov
adc
in
arpl
retw
jbe
icebp
lret
push
add
addr16
in
xor
mov
ljmp
aad
push
mov
in
repnz
dec
loope
pop
cmpsb
jno
or
jne
inc
xchg
into
dec
fdivs
ja
lock
jb
sbb
lds
ror
or
jg
in
pop
dec
push
arpl
scas
push
cmpsl
sbb
ds
push
sahf
pop
aaa
mov
push
lret
enter
imul
out
mov
aam
mov
mov
loopne
pop
push
and
bndldx
push
je
pusha
lss
lods
adc
lret
por
push
jg
aam
jmp
fdivrp
cmc
add
test
fdecstp
inc
dec
mov
cmp
into
fwait
jmp
pop
jns
iret
add
mov
jb
imul
xchg
push
cmp
out
test
testl
jae
push
mov
jbe
int
xchg
es
jo
push
sbb
cwtl
sub
pusha
mov
repz
test
outsb
adc
fdivrp
in
into
dec
pop
insl
pop
leave
lea
sahf
dec
or
int
push
push
or
stc
testl
mov
jne
arpl
jp
cmp
pop
lods
mov
push
jns
into
std
push
sbb
and
in
imul
mov
add
sbb
mov
adc
and
xor
aaa
adc
sub
mov
test
jge
popf
sahf
xchg
test
push
sub
jl
test
push
sbb
cmpsl
shl
adc
dec
lods
insl
nop
pop
negl
mov
pusha
push
and
popa
mov
inc
dec
fdivrs
lret
pop
fstpl
pop
ret
rcl
fists
sub
cmp
push
sub
xchg
add
and
sbb
and
cmp
test
pop
adc
jnp
jmp
adc
mov
and
cmp
imul
rcr
addr16
xchg
push
add
in
shll
loopne
mov
and
stc
enter
mov
ret
in
push
fwait
push
xlat
sti
pop
sahf
or
loop
iret
mov
inc
hlt
cmpsb
xor
orps
lds
sub
adc
shll
jno
inc
insl
sbb
fadds
cmpsl
mov
aaa
lret
lcall
pop
mov
ret
fwait
shlb
mov
cld
or
add
pop
xchg
add
adcb
cwtl
dec
cmpxchg
cmc
sbb
loopne
push
lea
loope
lods
jg
xlat
pop
xchg
push
jmp
jg
add
js
int
mov
inc
mov
js
jo
add
mov
mov
stos
repz
sub
loopne
lret
inc
call
sbb
outsl
sbb
mov
fisubs
jl
std
adc
adc
popa
adc
pusha
lods
cmp
push
cmp
fsubl
mov
shl
fadd
fcom
lods
push
cwtl
movsl
push
int3
dec
shl
cmp
lcall
xor
movl
xor
jbe
sbb
lods
push
shrb
inc
in
in
dec
pop
test
imul
sbb
sub
pop
dec
nop
jmp
push
imul
adc
xchg
ror
cmp
stc
shrl
cli
out
aas
mov
lret
data16
jle
enter
mov
adc
lods
mov
loop
or
lret
shll
aam
xchg
in
push
mov
into
test
push
xchg
mov
adc
repnz
mov
and
mov
xchg
pop
push
stc
in
in
add
shl
mov
mov
xchg
pop
insl
pop
addr16
in
jnp
shlb
out
pop
aad
inc
mov
xlat
jg
sbb
mov
pop
ss
mov
xchg
or
sub
icebp
mov
call
dec
outsl
pop
sbb
cmp
xor
sbb
stos
out
cmpsb
std
cs
outsb
das
test
mov
rcll
mov
add
stos
cli
inc
push
and
push
inc
xor
mov
gs
jbe
jne
cmp
push
inc
push
and
dec
mov
pop
pop
insl
inc
call
ror
mov
adc
subb
test
mov
jge
stos
adc
push
jne
push
xor
js
xlat
movsb
movsl
xchg
pop
sub
fmul
imulb
push
adc
bound
int3
sub
inc
pop
movsl
add
mov
sub
cmp
lds
adcb
xor
cmp
adc
aaa
jnp
scas
cwtl
xchg
xchg
lret
dec
mov
int
or
jo
not
outsl
dec
loope
sub
repz
add
or
ret
cmc
je
pop
xorl
data16
inc
outsl
aad
cld
loop
and
aad
ljmp
mov
jnp
shlb
push
daa
iret
or
xor
insl
fisubrl
test
flds
mov
movsb
imul
aaa
jae
mov
les
adc
int3
mov
sbb
js
or
lahf
mov
push
ja
idiv
push
clc
test
repnz
push
cmpl
pop
sar
sahf
ficoml
add
movl
ds
or
pop
add
add
or
pop
andl
xchg
ret
fldcw
xchg
repnz
leave
push
push
cltd
jmp
sub
iret
xor
aad
pop
xor
popa
mov
xor
popf
xor
pop
ss
push
lcall
adc
or
cmp
insl
scas
xchg
adc
sti
fs
rcrb
in
lock
iret
add
and
mov
outsl
push
dec
and
ret
mov
adc
pop
dec
addr16
xchg
in
or
and
cwtl
outsl
or
negl
push
stos
lds
insl
mov
loopne
lret
fisubl
ljmp
es
inc
push
dec
and
jge
shll
sbb
sub
iret
push
lret
jno
adc
inc
and
sbb
testb
sbb
push
or
ljmp
outsb
out
dec
inc
fidivs
adc
xlat
dec
inc
sbb
mov
imull
roll
test
mov
sbb
jl
add
xchg
nop
pop
xchg
insb
ljmp
mov
sub
pop
sbb
add
decl
sub
fmull
push
or
inc
dec
lcall
fimull
shll
cmp
loope
in
rorb
mulb
push
or
pop
mov
inc
push
cmp
mov
xchg
das
lret
fcoms
ja
lock
xchg
outsb
or
sub
leave
iret
rorl
inc
dec
jg
sarl
xor
icebp
and
jbe
sub
jg
jl
lods
mov
es
stos
gs
mov
inc
and
sub
icebp
pushf
pop
cmp
ds
pushf
hlt
lret
jns
fsubrs
ja
ret
and
sbb
out
adc
ret
pop
mov
fistl
or
sbb
mov
xor
sbbl
or
divb
rol
mov
mov
or
mov
dec
jo
inc
push
mov
cwtl
das
notb
xchg
call
pop
in
cld
jge
sub
scas
mov
jbe
sbb
idivl
sub
test
mov
je
mov
inc
mov
sub
pop
and
insl
lea
incb
fstpt
mov
mov
push
adc
or
rclb
xchg
sbb
stos
fistps
pop
aam
das
bound
test
mov
fmull
pop
jmp
out
jle
sub
pop
ret
xchg
out
aad
outsl
dec
and
adc
pop
pop
fldt
ret
lods
leave
adc
aaa
sahf
jmp
or
imul
jbe
mov
inc
idivl
or
scas
add
repz
cmp
sbb
sub
sbb
stc
mov
pop
outsb
and
mov
or
out
leave
cmp
xchg
pop
adc
jle
ljmp
jno
xchg
pusha
ficomps
inc
ret
push
or
insb
cmpsl
notl
sub
lds
push
cmp
xchg
jmp
jno
or
jno
cmp
push
andl
cld
jne
pop
jle
sbb
mov
inc
in
sbb
pop
inc
mov
or
adc
lahf
or
adc
lret
pop
leave
repnz
jbe
outsb
outsb
aas
iret
push
inc
xchg
push
int3
loop
sbb
mov
in
adc
inc
ja
mov
shll
popf
jns
push
mov
inc
add
inc
push
xchg
andl
gs
pop
outsl
leave
dec
pop
bound
cmp
mov
push
sub
xor
sbb
mov
and
push
mulb
mov
cwtl
or
hlt
jb
shll
xchg
je
or
or
jp
and
es
push
mov
les
pop
jns,pn
pop
ss
inc
xor
pop
mov
pop
fsubrl
sub
cld
add
sbb
ss
push
pop
mov
inc
je
sarb
test
ret
pop
xor
cmp
add
push
test
dec
jno
popf
inc
and
movl
push
xchg
mov
mov
or
dec
adc
rcll
popf
lret
stos
push
mov
je
sub
adc
mov
arpl
xlat
mov
icebp
push
out
ja
fdivl
test
inc
mov
mov
jbe
xchg
pop
cmc
fs
jg
pop
js
pop
cwtl
cltd
test
pop
dec
and
ret
push
clc
mov
push
pop
std
test
addr16
popa
mov
push
aad
adc
xchg
add
jl
testb
xchg
lea
mov
into
and
adc
and
add
fnstcw
insl
or
rcr
inc
lods
xor
int
push
mov
daa
inc
cli
mov
stos
xchg
gs
jno
cmp
mov
out
dec
shl
cmpsl
call
push
add
insl
and
popa
movsb
cmpsl
aaa
arpl
mov
pop
dec
sub
stos
jmp
cmp
lret
std
or
jb
and
push
mov
test
xor
daa
je
or
mov
or
xchg
adc
cmp
xorb
jle
imul
mov
dec
and
push
push
jns
push
xchg
incl
stos
pop
and
stos
push
das
inc
cmpsb
xchg
push
mov
xchg
scas
das
jg
or
cld
shrl
sub
pop
or
movaps
or
mov
fs
ds
out
imul
pusha
sub
stos
sub
dec
push
push
mov
int
hlt
outsb
dec
pop
sbb
movsl
xor
xor
and
ss
mov
add
mov
clc
out
jne
inc
lods
lfs
ds
jl
call
jae
mov
cmp
popa
mov
mov
bound
js
pop
mov
stos
cmp
sbb
cmp
push
bound
sbb
adc
inc
jl
adc
rolb
popa
pop
pop
ficoms
je
xchg
jle
lahf
push
jle
mov
aad
adc
adcl
arpl
inc
sbb
ret
aas
int
test
lds
out
jb
clc
mov
hlt
lods
int
jns
pop
or
sbb
sbb
mov
mov
shlb
mov
sbb
push
dec
pushf
jo
push
adc
testb
cmpl
insl
sbb
cwtl
jns
test
cmpsb
rorb
push
dec
inc
cmp
repnz
jmp
and
rcrb
imul
aaa
and
fimull
jge
lahf
mov
mov
mov
add
jne
jae
xor
mov
pop
adcl
ret
jne
xor
adc
inc
fs
mov
ja
adc
scas
inc
or
out
addr16
xchg
jb
sbb
add
cmpsb
jl
and
cmp
mov
push
repnz
test
pop
dec
int3
dec
mov
lahf
nop
sti
popf
dec
into
jmp
sbb
or
or
mov
mov
xor
js
cltd
or
dec
adc
insl
inc
inc
pop
out
daa
mov
rcr
sub
cmp
xor
in
out
sbb
jne
ljmp
add
mov
dec
out
mov
adc
dec
adc
mov
into
jb
lcall
xor
cmpl
dec
pushf
lret
xlat
test
xorb
loope
xchg
ret
pusha
mov
sub
mov
int
mov
clc
jmp
fsubr
lret
and
dec
push
pslld
gs
push
rclb
xchg
mov
fimuls
popf
inc
cli
flds
jmp
cmpsb
sbb
out
or
movsl
lea
in
dec
rolb
mov
inc
cltd
cmc
adc
hlt
mov
in
adc
jg
mov
pop
inc
es
es
adc
jo
push
mov
jnp
pop
dec
std
cld
cli
dec
mov
adc
jb
aaa
sar
outsb
xchg
xor
or
jbe
shlb
adc
lret
inc
fcomps
pop
pop
adc
adc
xorb
jne
scas
lahf
pop
add
or
xorb
pushf
mov
insb
cs
dec
popa
adc
cmp
cmc
in
shrb
scas
inc
sbb
mov
ja
mov
push
mov
lahf
popa
cmpsl
xchg
aad
jl
and
and
or
mov
cs
stc
pop
data16
repnz
mov
mov
push
dec
sahf
mov
lea
lret
fwait
mov
shlb
loopne
hlt
enter
or
add
xchg
cmp
dec
pop
pop
or
movsb
test
fimull
out
dec
sbb
lret
rorl
mov
jo
pop
dec
push
ret
dec
xchg
sbb
cwtl
sub
loope
adc
add
sti
sbb
jg
dec
pusha
rcr
out
add
lods
jp
xchg
arpl
stc
fidivrl
and
dec
popf
pusha
lret
icebp
fisubl
mov
jmp
add
sub
or
mov
push
icebp
ret
faddl
dec
nop
mov
inc
enter
clc
sub
add
outsb
push
and
repz
and
outsb
push
lret
ja
xor
jns
cmpsl
inc
int3
and
dec
pop
mov
xor
fst
jle
loope
test
pop
decl
ja
scas
or
pop
jge
into
jnp
mov
adc
pop
js
jbe
xchg
xchg
jmp
mov
cs
iret
xlat
mov
in
push
dec
inc
sbb
adc
mov
repnz
push
and
mov
lret
fnstsw
or
mov
push
push
mov
and
lea
addr16
inc
outsl
popf
mov
sbb
sbb
mov
mov
pop
adc
inc
jnp
scas
in
rcrb
cmp
xchg
inc
fimuls
xchg
jne
cmc
and
jne
pop
inc
mov
ds
fdivl
out
push
pop
lea
std
mov
push
aad
addr16
sbb
xchg
pop
mov
mov
call
in
mov
cmp
repz
fwait
pop
jecxz
mov
std
sbb
xor
sbb
dec
sbbb
in
adc
fs
xchg
outsb
fwait
xchg
call
jnp
add
pop
push
aad
xor
je
push
mov
ss
sbb
pop
add
dec
push
mov
es
pop
cld
pusha
lods
xchg
xchg
mov
cmp
adc
push
pop
xor
lea
push
sub
enter
sbb
movsb
inc
push
repz
insb
in
aas
movsb
xor
rcrl
loopne
hlt
xchg
das
push
sub
mov
mov
inc
xchg
xchg
add
sub
out
push
mov
mov
cli
push
aad
sub
fdivp
pop
mov
insb
sub
and
pop
mov
jns
cmc
pop
push
sbb
in
jecxz
iret
rep
jnp
xor
pop
pop
lea
lods
rolb
sbb
out
mov
ret
push
imull
lret
pop
test
in
test
fnstsw
lea
addl
mov
in
out
roll
push
loopne
cmp
lret
sbb
sbb
pushf
rorl
aad
sti
mov
pushf
add
mov
sbb
xor
outsl
inc
mov
bound
rcrl
lea
arpl
mov
popa
dec
fwait
enter
out
outsl
cmp
lret
push
pop
adc
cmp
test
mov
jne
popf
mov
cmpsl
jae
jg
dec
cmpsl
rorw
add
adc
mov
aam
pop
push
xchg
testl
adc
div
stos
sub
mov
sub
movsl
lock
in
inc
or
jmp
push
mov
imul
fiadds
mov
cmpsl
std
and
pop
pusha
outsl
jmp
inc
pop
add
dec
push
xor
add
ja
fsubl
add
push
sahf
push
inc
arpl
add
stc
fstl
fildl
mov
mov
sbb
sbbb
cli
cs
mov
repnz
repz
dec
push
fmull
xor
addr16
sbb
mov
mov
dec
pop
js
push
out
add
adc
or
lea
loopne,pt
cld
test
out
roll
movsl
xlat
dec
xchg
cld
push
pop
imul
or
rcrl
fs
pop
test
lcall
pop
ret
push
pop
adc
sidtl
sub
dec
ljmp
xor
mov
aaa
mov
adc
and
adc
and
xchg
sub
cmp
jae
push
shrb
aaa
xor
out
xchg
push
cmp
xchg
lcall
jecxz
or
or
rorl
xlat
mov
sub
repnz
lahf
dec
dec
push
pop
mov
in
leave
jns
pop
xchg
shlb
jmp
nop
and
mov
cli
clc
cmp
call
fnstenv
lds
outsl
mov
mov
jp
outsl
ficompl
sbb
stc
out
adc
xor
ja
outsb
aas
or
test
pop
clc
decl
icebp
push
jg
inc
addr16
push
iret
notb
dec
mov
outsb
push
arpl
insl
adc
pop
mov
in
fsubrs
loop
cs
fidivl
loope
and
je
add
out
insl
push
or
xchg
movsl
cmpsl
out
mov
xor
loopne
in
out
bound
enter
icebp
in
icebp
jns
add
imul
outsb
mov
mov
repnz
mov
sub
stc
mov
lret
mov
scas
test
pop
arpl
movb
testb
ret
jle
es
scas
test
sub
xor
mov
jmp
inc
leave
sub
incl
stos
sub
out
mov
neg
xchg
daa
cs
mov
lret
jnp
xchg
and
out
gs
inc
and
mov
xor
mov
loope
sbb
push
lret
lods
aad
adcl
lock
mov
aad
cmp
lds
pusha
xor
in
leave
jbe
jae
add
iret
pop
ljmp
pop
xchg
pop
lea
xor
mov
ret
notb
jo
adc
mov
pop
loope
mov
jb
aam
js
sub
and
mov
sbb
jl
outsl
movsl
sub
fstl
out
inc
scas
and
in
test
or
adc
cmp
negb
ds
aas
cmp
pop
xor
pop
stos
mov
adc
xor
ret
dec
into
mov
push
jecxz
xor
call
aam
mov
and
pop
xchg
inc
test
movsl
push
mov
inc
jmp
pop
mov
jae
adc
add
orb
icebp
pop
aas
or
pop
mov
inc
mov
jle
stos
cld
cmpsb
testl
dec
loope
xchg
test
fs
incl
or
mov
cmpsb
rorb
jbe
imull
mov
xor
jp
out
lahf
add
jno
lahf
shrb
movsl
sbbl
aaa
js
lret
divl
mov
inc
sbb
jnp
loope
leave
pop
jg
pop
das
cmpsb
in
mov
inc
jl
cmp
std
inc
idiv
sbb
je
xchg
nop
xlat
mov
out
insb
stos
les
out
dec
mov
scas
and
outsl
inc
lret
rol
test
xor
fsubl
sub
divb
in
or
jmp
fildll
mov
jecxz
scas
clc
and
xor
andb
sbb
sbb
out
add
gs
jne
dec
xchg
or
and
ret
jb
insl
dec
dec
jmp
shll
sub
mov
hlt
push
mulb
movzwl
and
stc
sahf
loope
inc
lcall
repz
sar
sbb
movsl
and
jb
xchg
and
and
or
push
ret
aaa
pop
out
inc
std
and
popf
add
and
dec
sub
and
mov
push
fwait
shll
bound
stc
loopne
insl
cltd
movsb
stc
imul
xchg
sti
addr16
mov
outsl
adc
int3
leave
cwtl
cwtl
sub
iret
jmp
sbb
lods
and
mov
repz
scas
jle
sbb
push
outsb
icebp
mov
mov
cltd
aad
enter
push
cmpsb
mov
rol
push
fnsave
mov
mov
sub
inc
inc
cli
mov
mov
mov
pop
sub
pop
lods
jne
xlat
ljmp
cmp
imul
pop
sbb
jno
mov
ffreep
adc
sarl
add
mov
test
add
aad
fwait
ret
mov
fidivrs
xchg
movsl
dec
sbb
jb
jecxz
pop
jnp
sbb
inc
aam
add
mov
xchg
ret
sbb
aaa
std
lret
dec
je
in
hlt
movsb
pop
int
in
inc
or
dec
and
xchg
sbb
inc
xor
adc
test
int
push
fdivrs
into
loop
test
into
mov
repz
addr16
jo
ds
jmp
je
xor
iret
out
cs
popa
cmp
dec
int3
jmp
pop
leave
adc
pushf
lcall
ret
or
std
fistps
je
rolb
andl
aas
movsb
loope
mov
xor
mov
push
sub
push
mov
add
lods
inc
mov
mov
sti
jno
andb
xchg
inc
cmpsl
push
sbb
jmp
ljmp
mov
mov
insl
cmp
inc
inc
mov
setb
mov
arpl
enter
aad
sub
xor
adc
push
rorl
sbb
aaa
lock
xchg
xor
int
xor
mov
xchg
push
leave
cmp
xchg
enter
mov
dec
jle
scas
loop
loopne
dec
addr16
rcrb
mov
js
jae
jo
hlt
mov
icebp
xchg
push
xor
xor
bound
and
mov
pop
xchg
das
jno
mov
inc
repnz
pop
scas
push
test
mov
push
xchg
pushf
ficoms
mov
mov
rorb
or
add
hlt
lret
xchg
testl
inc
ret
dec
push
push
std
sbb
jb
shl
stos
dec
jl
sub
pop
call
or
cmc
pop
pushf
test
and
mov
in
xchg
pmaxub
cmp
mov
mov
insl
add
mov
cmp
jl
or
inc
mov
rclb
movsb
loop
and
fs
daa
dec
sub
outsb
fcompl
push
data16
mov
das
mov
xchg
mov
add
ret
lods
test
or
xor
mov
mov
add
stos
push
push
shld
imul
das
xlat
jne
pop
ficoml
imul
shlb
mov
xchg
add
dec
pop
jae
icebp
adc
rolb
mov
aas
dec
mov
jb
xchg
mov
mov
jb
lea
sahf
cmpsb
jg
jbe
aad
repz
mov
push
loope
push
jge
mov
arpl
idivl
pop
repz
lahf
dec
pop
mov
pop
mov
adc
pop
mov
xor
sub
shl
rcl
pop
and
add
cmp
ljmp
pop
dec
fnstenv
pushf
sbb
xor
xchg
out
rcr
pop
xchg
jl
lea
imul
movsl
lcall
mov
pop
mov
sub
test
cmc
mov
sti
sbb
les
daa
xchg
xchg
outsl
and
inc
ret
movsb
rcrb
pop
rcll
mov
jb
and
test
ss
cmp
xor
mov
rolb
clc
insl
add
orb
jmp
xor
mov
enter
push
jbe
cltd
sub
jno
xchg
aas
fmuls
xrstors
xor
stos
into
popf
xor
adc
or
pop
je
pop
jno
or
lods
inc
push
ret
test
sub
jns
pop
jp
adc
cld
insb
shll
mov
xor
mov
std
dec
mov
insb
push
cmp
outsb
add
notb
popf
stc
pop
inc
fisttpl
pop
fwait
loop
xchg
adc
push
int3
pop
fwait
sarb
dec
or
imul
xchg
cmpb
fimuls
movsl
mov
ljmp
outsb
add
add
loop
xchg
aam
das
sbb
xor
aam
dec
dec
hlt
rolb
pop
enter
lods
sahf
xchg
in
sarb
call
jecxz
inc
pop
aad
fwait
mov
iret
cld
fmuls
pusha
repz
les
loop
ja
jnp
add
subl
mov
push
push
clc
dec
xor
aad
mov
ret
cmpsb
repz
mov
pop
xchg
dec
test
repnz
scas
mov
or
lods
imul
mov
mov
clc
and
xorl
pusha
push
mov
int3
rolb
ja
or
cli
out
mov
jp
fs
rcrl
push
sarl
mov
and
aam
xor
ficoml
daa
fstp
sbb
aaa
fildl
push
popf
xorl
leave
jo
mov
gs
push
std
int3
outsb
jle
mov
push
scas
in
adc
add
adc
shrl
adc
or
mov
add
out
mov
fldl
fmuls
jae
jb
jmp
stos
jecxz
mov
iret
lret
inc
fistpll
push
push
jo
mov
bound
ljmp
and
jnp
icebp
cmp
lods
lcall
or
inc
clc
xchg
or
mov
js
lds
ret
push
js
or
mov
clc
sbb
outsb
or
add
imul
jnp
xchg
cld
out
mov
mov
push
popa
scas
mov
rcrl
inc
mov
nop
pusha
push
subl
mov
and
les
imul
fcmovu
lcall
sub
xchg
push
pushf
xor
jo
jp
sbb
push
pop
into
std
push
loopne
sbb
insb
push
call
loope
sti
jl
mov
xor
or
faddp
int
mov
jp
cmp
add
repnz
sbb
sbb
mov
ja
movsb
push
fs
lahf
sub
sbb
imul
mov
ss
jo
out
xor
fdivs
js
cmc
jo
lods
pop
sub
aam
paddsw
push
xchg
xchg
dec
dec
aam
lods
add
push
out
dec
jns
ja
inc
mov
lcall
jae
lret
sbb
jno
mov
cmp
fcomi
push
inc
xchg
or
orl
imul
dec
sbb
enter
fs
leave
into
jmp
inc
sarb
out
popa
xor
popf
jo
stos
pop
outsb
or
sbb
enter
mov
nop
pop
mov
fwait
adc
fs
daa
mov
loopne
xchg
xchg
or
cmc
or
lea
xchg
pop
or
mov
sbb
test
hlt
aas
pop
loop
adc
sub
push
inc
push
mov
sbb
cs
cli
cmp
jno
push
data16
xor
pop
jbe
cmp
arpl
pop
xor
aad
mov
mov
pop
inc
les
frstor
xchg
cwtl
pop
push
mov
push
sub
and
in
pop
subb
pushf
mov
cmp
lds
enter
adc
imul
cmp
adc
mov
adc
adcb
adc
mov
leave
mov
sbb
daa
ja
mov
mov
or
or
dec
sti
aad
pop
inc
jae
jmp
push
std
pushf
fldl
jmp
mov
insb
scas
sub
pop
sub
add
cmp
lds
mov
jbe
jne
mov
adc
clc
pusha
mov
mov
pop
pushf
or
rcll
jmp
dec
daa
add
xchg
mov
lea
dec
add
out
inc
xor
mov
imul
xchg
cmp
jno
hlt
in
fildl
lods
popa
mov
mov
int3
ljmp
fisttps
and
fcoms
mov
or
syscall
cli
xorb
ja
lods
lret
xchg
shrl
outsb
fsts
jo
in
arpl
xor
mov
push
mov
xor
int3
jge
and
test
lods
pop
pop
push
dec
or
mov
dec
xor
ljmp
cli
add
sahf
pop
sub
xor
icebp
pop
jge
mov
ds
xchg
in
iret
subl
and
push
es
xlat
adc
fdivs
iret
mov
out
je
push
or
cmp
push
out
je
jb
xchg
dec
mov
push
scas
movsl
xchg
test
pop
test
cmp
xchg
lods
pop
out
xchg
popf
push
rorl
roll
fldt
lret
into
mov
jmp
pop
arpl
rcrb
cmc
lock
sarl
dec
inc
dec
and
add
cwtl
mov
and
cmp
or
data16
lret
movsl
nop
clc
xchg
lret
push
outsb
mov
xchg
cmp
mov
jge
push
in
add
push
xchg
lcall
add
cmp
and
fidivrs
xor
xchg
sub
addr16
fidivs
aaa
mov
inc
das
jmp
mov
xorl
dec
jp
inc
xchg
sti
cli
std
in
pop
xchg
movsl
lock
mov
lods
pop
xchg
fwait
addb
scas
lods
add
ja
shrb
dec
scas
das
inc
out
gs
push
ja
jae
rolb
jp
sbb
aas
add
js
ds
xor
jle
shll
xor
jle
xchg
mov
or
cmp
xchg
mov
loopne
test
push
imul
fisubs
cli
daa
cmp
sbb
in
add
stos
addr16
ret
adc
nop
and
lds
dec
shrl
sbb
add
addl
pop
jb
cwtl
icebp
addr16
sahf
and
rcll
cltd
adc
jmp
insl
lock
xchg
dec
fcomi
cmp
aam
lea
dec
add
pop
sete
pop
in
push
xchg
scas
orl
mov
int
and
in
cltd
test
repz
jmp
rcll
daa
xchg
ss
push
ffree
dec
dec
push
xchg
mov
mov
or
jmp
jno
dec
push
adc
enter
sahf
insb
push
inc
add
outsl
out
add
adc
sub
or
mov
out
jg
jp
sub
stos
cmp
sbb
idivl
add
lahf
test
or
test
xor
pop
mov
xor
cmpsl
mov
jbe
xchg
jmp
add
repz
cmp
lret
and
dec
ja
in
pop
push
or
cmpsl
xor
fdivrs
mov
sbb
pop
loopne
mov
cld
pop
fistpl
fcomip
sbb
sub
jbe
mov
shll
in
mov
in
cmc
cmp
xchg
sbb
mov
int
aad
fimull
jge
int3
cmp
cltd
cmpsl
addl
rorl
into
sbb
push
and
jns
jno
imul
sub
adc
mov
bound
addr16
ss
mov
cmc
push
fdivr
jae
pop
mov
loope
adc
out
cmc
data16
sti
push
fsincos
and
imul
xor
fsubrl
fsubr
xchg
sub
dec
fwait
jb
push
aam
mov
dec
or
pop
push
sarl
imul
push
data16
push
in
test
int
or
inc
mov
pop
and
lret
and
das
shl
cmp
xchg
movsb
cmp
fs
shlb
adc
lcall
push
jno
fnstcw
aas
jns
sbb
and
rcl
mov
pop
inc
call
dec
mov
push
jns
xlat
cmp
popa
or
dec
aad
js
jg
mov
sbb
into
mov
jns
mov
or
sbb
scas
mov
aaa
test
adc
pop
mov
inc
mov
lea
imul
jb
aam
cld
loopne
mov
pop
out
rclb
push
inc
addr16
cmp
ficoml
or
adc
push
adc
push
loope
out
lret
lcall
xchg
sbb
mov
ficompl
ja
pop
or
scas
mov
push
fldl
mov
dec
push
mov
sarb
add
xchg
push
sub
arpl
or
xchg
stc
outsb
add
sbb
pusha
stc
stos
fsub
or
dec
and
pop
dec
mov
push
nop
movsb
pusha
jnp
call
dec
jbe
sbb
fdivrs
inc
mov
sub
or
or
jl
lret
in
push
dec
push
jae
scas
pop
xchg
pop
lcall
bound
stos
jnp
ficoms
dec
clc
shrl
pop
dec
and
les
sbb
lods
adc
push
int
jp
repnz
loopne
mov
nop
mov
hlt
icebp
or
repnz
imul
lahf
rclb
outsb
jo
add
iret
insl
mov
or
mov
mov
push
mov
xorb
push
aas
jb
mov
aas
cmp
fadd
mov
popa
nop
dec
xchg
movsl
add
loopne
ss
add
iret
fs
jnp
gs
jp
stos
add
pop
jg
imul
stc
addr16
ja
add
lret
cli
pop
mov
cli
push
aaa
pushf
lock
add
jp
or
adc
and
subb
out
lahf
mov
jecxz
leave
test
sub
js
repnz
test
insb
sahf
lret
jnp
leave
nop/reserved
clc
jo
imul
cli
cmpb
dec
roll
inc
es
aam
shll
push
das
lods
jmp
add
and
jecxz
dec
out
jne
add
out
mov
lret
xchg
mov
out
sbb
and
jae
sahf
repnz
jmp
cmova
pushf
bound
or
sbb
add
or
subb
rolb
xchg
dec
repz
ljmp
adcb
lea
cmpsb
hlt
push
loopne
ret
and
sbb
add
mov
mov
lods
xor
or
mov
mov
cmp
fs
lea
arpl
jns
cmp
mov
push
jb
leave
cmpsl
fs
jb
add
loope
popa
or
jns
lods
mov
repz
adc
adc
sbb
fildl
xchg
dec
in
aad
cmpsb
mov
fs
rcll
push
xchg
mov
sub
add
jmp
notl
pop
xor
mov
jns
fcmovnbe
cmpsb
add
push
mov
rorb
mov
and
orl
inc
xor
adc
sbb
xchg
inc
adc
xor
mov
pop
mull
push
or
cmp
xlat
bound
pop
push
jns
fnsave
lea
iret
dec
shll
test
inc
cmc
js
inc
mov
mov
insl
lea
sub
lret
data16
inc
ljmp
inc
pushf
das
jae
scas
cmp
cwtl
jbe
dec
sbb
pop
jno
enter
adc
cmp
xchg
sbb
adc
movsb
stos
insl
enter
sbb
stos
ljmp
xor
mov
ss
xor
outsb
clc
xchg
dec
test
adcl
inc
mov
or
pop
sbb
push
test
or
add
xlat
xor
std
testl
jmp
lret
ljmp
adcl
fldlg2
sub
pop
pop
fwait
inc
jmp
jl
jbe
jne
add
mov
lret
in
sub
push
call
int3
jne
xorb
adc
xchg
imul
ss
mov
andl
push
sbb
jecxz
jg
out
add
xchg
loope
in
je
adc
lods
or
in
jno
scas
lock
in
and
out
mov
hlt
jb
sbb
add
mov
scas
cmp
fincstp
xchg
mov
sub
lcall
pop
and
xor
aas
inc
cwtl
mov
ss
or
mov
rcr
jbe
sub
hlt
fstl
insb
imul
sbb
mov
jo
mov
mov
inc
add
sahf
xchg
push
scas
or
sub
lods
inc
out
inc
sbb
xchg
pop
sbb
ljmp
xchg
cmc
cwtl
cwtl
out
or
and
sub
mov
push
sbb
popf
fidivl
push
popf
jns
int
jns
inc
iret
pop
and
lds
and
xchg
inc
inc
dec
cmp
cmp
cmp
mov
xor
stos
les
xchg
je
inc
test
pop
shll
shrl
pop
pop
rorb
enter
shrl
ret
xor
ss
jge
fidivl
int3
or
jmp
and
stc
pop
mov
cwtl
mov
inc
xchg
cli
ret
ja
insb
mov
add
and
xor
inc
sbb
xor
xchg
ds
lret
lock
clc
pop
inc
add
and
pop
add
inc
scas
mov
jl
ss
insl
mov
or
dec
enter
jns
xchg
cmp
jns
adc
mov
aam
push
xchg
ljmp
out
pop
xor
sbb
imul
jb
mov
dec
test
gs
lds
movb
pop
ret
cmpsl
xchg
or
adc
or
adc
mov
mov
ja
xchg
mov
incl
push
xchg
mov
pop
cmc
cmpsl
call
ds
decb
out
out
xorb
mov
sti
mov
jle
dec
mov
insb
sbbl
pop
das
push
mov
inc
mov
std
fs
jp
imul
mov
movsb
dec
mov
subl
imul
or
mov
adc
and
push
or
out
loope
adc
pop
inc
call
mov
lret
push
inc
or
icebp
loope
lahf
movsl
xchg
mov
sti
mov
fsubr
push
xchg
xchg
pop
add
add
mov
inc
sub
xor
mov
cld
pop
pop
imul
push
cs
shr
mov
jno
jne
sarb
pop
adcb
movsb
xchg
scas
xchg
cld
jg
pusha
mov
imul
pop
adc
or
mov
add
addl
push
shrl
movsl
or
mov
cmp
mov
pop
popa
insb
fnstcw
popa
xchg
or
lret
jo
dec
add
jp
pushf
lcall
mov
fimuls
sbb
negl
jns
subl
xchg
into
sbb
push
fcomps
andl
or
lcall
cmpsb
xor
aas
xor
mov
jp
push
testb
stos
xlat
mov
sub
cli
add
push
sbb
inc
sar
xor
or
mov
cld
pusha
xchg
lea
addb
loop
or
xor
adc
sbb
push
das
je
fmuls
push
outsb
aas
aam
inc
mov
outsb
sub
hlt
jb
in
mov
shrl
sti
add
bound
out
sti
xchg
mov
dec
out
xor
xchg
aam
inc
mov
loopne
popa
and
das
dec
mov
cmc
repnz
cmp
mov
cmpsl
push
mov
je
push
cltd
jo
jp
jmp
pop
aam
xlat
ss
cmp
imul
pop
and
adc
sbb
sub
ret
lret
cwtl
add
in
mov
insl
push
xchg
mov
call
jae
adc
outsb
mov
stos
fsubl
sub
scas
or
fwait
jne
sbb
loop
xor
xorl
ds
xor
subb
push
outsb
inc
lahf
fisubs
cmp
and
rclb
dec
sarb
add
fucom
inc
pop
cmc
dec
int3
jnp
mov
mov
in
dec
cli
inc
cmc
aas
cmp
dec
jge
dec
pop
rclb
dec
dec
in
xchg
pop
push
shl
es
push
fsubl
push
and
insb
call
adc
adc
adc
pop
push
jecxz
pop
sbbl
pop
popf
mov
cmp
into
add
mov
cmp
sbb
push
insl
cmpsb
push
wbinvd
ds
in
les
dec
lret
adc
and
xor
addl
pop
xor
pop
stc
les
fwait
inc
std
rdpmc
out
lret
test
movsl
or
xor
fwait
adc
lock
inc
pop
fwait
inc
inc
cmpsl
cs
ljmp
test
xchg
sub
inc
mov
call
test
pushf
outsb
popf
in
imul
fwait
pushl
pop
in
jle
inc
jbe
fcompl
mov
xchg
pop
mov
push
fwait
clc
push
ret
cmp
je
dec
cmp
fsubs
inc
orb
mov
mov
jbe
sbb
leave
mov
sbb
xor
mov
xor
nop
int3
pusha
pop
into
ret
sbb
dec
jl
xlat
push
lds
and
scas
add
fcoms
dec
inc
fists
inc
sub
mov
xchg
mov
aas
mov
pop
dec
sbb
xchg
sub
sbb
jle
mov
int
cltd
in
mov
xorl
push
xchg
mov
cmpsl
lret
fdivl
in
mov
sbb
adc
push
xor
loopne
jns
in
lods
add
dec
xlat
inc
ret
fwait
test
jae
xlat
jo
adc
test
jmp
push
dec
jb
adc
sub
adc
jns
aas
xchg
pop
add
sbbb
xchg
mov
lret
nop
addl
xchg
pushf
test
xchg
mov
jbe
pop
loope
test
fistpl
aas
lcall
in
pop
inc
je
stos
in
adc
xchg
jo
scas
sbb
sbb
std
lock
aam
bound
hlt
jge
negl
adc
xchg
lret
aaa
mov
jg
int3
push
mov
sahf
adc
cld
addr16
out
mov
sahf
or
and
lods
xchg
cwtl
add
add
pop
mov
xchg
stos
pusha
out
das
lds
push
jmp
cmpsb
enter
fidivs
jb
std
push
xlat
mov
sti
lret
sbb
add
fsubl
cs
xchg
cwtl
push
orb
js
dec
call
mov
movsb
into
addr16
adc
add
xchg
imul
push
dec
sbb
inc
xor
mov
or
test
js
cld
jns
loop
fimuls
xchg
pop
insl
pop
pop
cmpsl
push
jmp
out
arpl
sub
jp
mov
dec
add
lods
pop
ret
xor
cmpsl
mov
shll
mov
xor
jae
xchg
inc
xchg
jns
ret
les
xchg
mov
xchg
je
popf
push
ss
fdivrp
sub
pop
adc
test
outsl
mov
in
jmp
jmp
jb
inc
dec
cmpsl
dec
and
fstps
ss
jmp
sub
dec
push
sbb
in
shrb
xor
pop
jecxz
in
js
xchg
dec
sub
ljmp
jecxz
mov
mov
cli
jmp
lret
cmp
lods
add
cmp
inc
adc
xor
sub
pop
push
inc
sbb
fsub
fisttpll
stos
cli
stos
out
push
adc
rcrl
jmp
adc
inc
pop
shl
popa
das
loop
in
and
jg
and
xchg
add
sbb
loopne
fdivp
jge
mov
mov
imul
push
scas
inc
and
lret
sbb
and
add
shl
pop
sar
outsl
mov
sbb
les
std
icebp
jne
or
push
stc
cmp
inc
fprem1
sbb
dec
mov
out
les
ret
adcb
mov
and
xchg
out
mov
inc
sbb
les
test
popf
ss
dec
cli
mov
fisubl
les
xchg
mov
loopne
scas
adc
out
jl
xlat
sahf
cmp
bound
call
mov
pop
cmp
dec
fadd
mov
lds
xor
decb
push
pop
sti
and
lret
fwait
ljmp
lcall
stc
aad
cwtl
movsb
or
and
cmpsw
inc
mov
bound
xorl
fsubl
lock
in
les
ret
in
and
pop
cmpsb
dec
cli
negb
pop
xchg
mov
pop
inc
pop
imul
int3
adc
jp
mov
xchg
dec
cs
int
dec
mov
jmp
mov
and
pop
shlb
jnp
int3
pop
aas
dec
fdivp
xor
pop
inc
fcmovne
addl
sub
jmp
dec
and
adcb
ja
faddl
popf
js
adc
sub
xor
push
pop
xchg
push
or
jno
lret
enter
fucom
pop
mov
test
pop
pushf
jmp
daa
mov
jbe
outsl
clc
fwait
rcr
adc
mov
push
push
or
inc
xor
mov
int
cmc
mov
lea
rep
dec
faddl
push
dec
jb
or
das
mov
cmp
jno
mov
movd
jl
push
ret
dec
jmp
daa
pop
sub
add
in
inc
push
inc
lcall
and
es
into
pop
lahf
test
inc
mov
mov
add
scas
scas
cltd
leave
sbb
sbb
jb
lahf
test
push
imul
loopne
popa
cmpsl
sahf
sbb
fidivrs
lret
push
or
lds
adc
mov
dec
push
int3
int
outsb
pop
out
xchg
push
or
sbb
lahf
fnstenv
cmp
dec
out
xor
bound
push
insl
push
pop
mov
cmp
data16
jns
dec
sub
idivb
pushf
in
dec
mov
shl
ret
sbb
imul
jno
mov
inc
or
xchg
xchg
xchg
add
and
xchg
inc
and
in
shrb
xchg
into
xor
cmp
push
mov
fnstsw
xor
je
lcall
jne
or
rolb
mov
sub
inc
fs
xor
fnstsw
icebp
xchg
in
loopne
fsubs
sub
sti
xor
sub
imul
pop
incb
ror
popa
lea
inc
loope
or
mov
mov
jno
insb
pop
sahf
insb
test
dec
sbb
inc
xchg
and
test
js
out
loope
xor
loope
cld
aam
cmp
cmp
dec
int3
fptan
lret
mov
push
fidivl
insl
into
lods
test
cmp
loop
lods
mov
sbb
sub
lret
ret
mov
mov
sbb
or
ljmp
lods
dec
adc
iret
and
aam
fstpt
repnz
sub
mov
pop
imul
jp
js
fdivrl
mov
test
stos
jae
pop
out
push
inc
inc
push
mov
or
mov
push
imul
xor
in
das
cli
mov
pop
in
xchg
add
stos
jmp
rol
sbb
cmp
jo
xchg
mov
sub
dec
dec
sub
fcoms
dec
sub
lods
push
scas
frstor
and
scas
jecxz
fidivrl
imul
out
or
push
loop
mov
pop
mov
je
stos
test
cs
shll
xchg
pushf
cmp
fisubs
push
or
repnz
add
adc
into
or
call
mov
clc
jnp
sbb
pop
push
pop
movsb
xchg
fimuls
mov
sbb
and
cltd
and
insl
loope
aam
inc
push
inc
mov
gs
mov
or
je
jns
xlat
clc
scas
xor
mov
loope
fwait
dec
sahf
mov
adc
das
insl
mov
mov
rolb
mov
adc
adc
pop
pop
outsb
xchg
push
sub
jnp
xchg
and
mov
sub
cli
cli
jmp
sbb
lods
lods
mov
insl
push
adc
aad
sub
push
into
cmpsl
inc
ss
or
sub
xchg
inc
shld
stos
rcrl
xchg
push
loop
add
push
jle
cmp
gs
inc
sbb
cwtl
cmp
cld
push
xor
iret
adc
sti
mov
cmpsb
aad
faddl
mov
fwait
shl
sarl
dec
stos
rol
packsswb
or
sahf
fwait
adc
dec
add
push
add
out
push
jmp
sub
repnz
bound
cmpb
testl
cs
push
rep
sbb
cmpsb
imul
popf
fisubl
decb
lds
mov
pop
in
dec
inc
pusha
lods
xor
jbe
rcr
popl
stos
lahf
jnp
sarb
mov
daa
xlat
cmpsb
mov
mov
std
xchg
mov
es
adc
mov
sahf
or
fwait
int3
stos
gs
insb
ficoms
cwtl
imul
or
xchg
ljmp
insl
adc
add
mov
cld
push
jl
push
sti
into
adc
add
push
movsl
push
stos
push
sti
xchg
inc
adc
pushf
xchg
sbb
cmp
sbb
lock
sub
sahf
ds
fucomip
popa
es
add
sub
xor
push
enter
sub
mov
mov
lock
call
inc
imul
repz
les
jge
jns
test
push
andb
or
in
mov
loop
jle
inc
xchg
stc
sbb
lret
test
mov
les
cmpsb
xor
inc
out
lea
push
call
leave
aad
testb
adc
es
sbb
xchg
jne
mov
and
out
pop
cmp
enter
into
adc
movsl
aam
sub
mov
ficoms
and
mov
testl
int3
outsl
mov
dec
mov
mov
shl
icebp
push
pop
cmc
sahf
mov
push
loopne
bound
stos
imul
push
mov
jnp
fdivl
sub
pop
in
inc
mov
out
je
sub
xchg
les
jo
fcoms
jle
sub
cmp
dec
push
push
xchg
push
adc
pop
pop
add
mov
pop
xchg
pushf
daa
les
int
enter
pop
pop
les
gs
fisttps
mov
push
cmp
xchg
jnp
mov
push
repz
xchg
loopne
xchg
pop
push
mov
push
sahf
cmpsb
hlt
inc
mov
out
scas
jb
mov
js
pop
stos
sbb
mov
int3
mov
xchg
lcall
sub
jg
inc
adc
add
push
loope
cwtl
into
movb
ds
dec
inc
pop
in
mov
mov
adc
mov
sahf
mov
into
aas
loop
jns
mov
insb
shlb
inc
cmpsb
fwait
mov
sbb
mov
stc
xchg
and
das
push
pop
mov
fdivrs
bswap
scas
jno
inc
fiaddl
popa
cmp
xchg
hlt
and
shll
es
mov
push
jp
or
fiadds
ss
jnp
jns
inc
cmp
das
and
movsb
std
pop
push
std
andl
xlat
shlb
xor
outsb
push
in
ja
imul
sbb
adcl
xchg
gs
mov
cmpb
add
pop
sub
lods
clc
pop
inc
mov
dec
out
daa
inc
sub
cmp
ret
xchg
xchg
insb
fisttpl
xor
mov
lret
mov
xor
es
push
gs
mov
inc
dec
cwtl
in
subb
sbb
inc
or
call
mov
lcall
inc
mov
and
sbb
inc
mov
cmpb
addr16
dec
sub
mov
scas
js
imul
mov
dec
outsl
dec
jge
jg
in
in
inc
sub
pop
movsb
int3
and
lcall
jle
push
lds
ljmp
int3
shll
aas
repnz
jle
in
pushf
and
fimull
mov
aas
xor
dec
inc
repnz
cwtl
mov
adc
ret
int3
jbe
fs
mov
add
lcall
test
sbbl
shlb
push
jae
stos
sbb
sub
ror
aad
repnz
xlat
inc
sub
sbb
jmp
popa
jp
and
movsb
ret
pop
enter
cmp
scas
mov
mov
cmc
or
orb
je
mov
mov
sub
cmpsl
out
sbb
outsl
es
cld
mov
sub
repnz
add
pop
mov
sub
inc
dec
xor
jge
fimuls
mov
pop
movsb
les
cmp
xchg
les
fists
int3
dec
je
rol
adc
call
sub
add
dec
cmpl
nop
pop
into
mov
ret
or
xchg
push
stos
sub
add
mov
cmp
sub
mov
sbb
inc
aas
aam
fistl
test
mov
mov
cmp
imul
cmp
fwait
xor
shr
jmp
xchg
or
xorl
icebp
jbe
mov
sarb
call
jno
adc
cltd
testb
mov
or
pop
fldcw
jmp
mov
in
jnp
pop
out
roll
push
ret
xor
ds
pop
push
dec
mov
insb
cmp
cmp
int
les
cmp
std
aas
adc
and
cmp
xor
jmp
jmp
adc
or
or
push
mov
sbb
sub
pop
std
add
add
aaa
into
and
stos
push
xor
sub
int3
jo
and
arpl
out
xchg
lods
test
mov
shl
sub
dec
dec
cld
mov
adc
cltd
inc
adc
neg
enter
leave
outsb
pop
out
loopne
shlb
dec
mov
mov
pop
ds
cltd
adc
xlat
add
scas
jns
repnz
mov
call
and
pop
data16
out
lret
mov
and
ljmp
pushf
orl
bound
insb
scas
mov
xor
outsl
mov
pop
pop
pop
fs
add
sbb
cmpsb
xorb
cmp
xchg
rcrb
push
cli
movsl
pop
mov
shlb
jae
mov
xchg
cli
and
sbb
cmpsl
es
cmpsb
enter
push
sbb
std
insb
pop
test
jno
mov
repz
add
ljmp
pop
mov
test
xchg
xchg
jecxz
push
cld
jge
sub
test
inc
inc
into
inc
push
aad
mov
sub
aaa
fmuls
push
pushf
in
test
mov
jae
mov
jo
or
jb
and
jae
scas
sahf
jbe
jb
cmp
inc
shl
mov
arpl
ljmp
scas
das
cmp
pop
cltd
fucomp
or
mov
leave
mov
sub
in
inc
jmp
iret
arpl
pop
pop
mov
movsl
mov
jb
or
or
push
sub
daa
mov
std
cmp
fs
jns
inc
sbb
cmp
arpl
inc
pop
jo
xor
lret
insl
jge
fstpl
aas
fsubr
dec
or
out
mov
sub
fwait
mov
jbe
data16
mov
xchg
cltd
inc
push
test
mov
fnstcw
fs
mov
add
jbe
in
subl
mov
cld
fs
sub
pop
jae
pop
inc
daa
pop
push
popf
mov
fs
inc
cmp
popa
cmpsb
test
lock
test
fnstenv
inc
jbe
js
out
inc
aad
iret
mov
jne
enter
hlt
lods
add
add
in
cmpsb
mov
lds
inc
pushf
push
icebp
das
sbb
mov
cmp
pop
pop
mov
jb
popl
jecxz
test
or
lea
fbld
xor
push
arpl
mov
ret
into
jno
aam
stos
mov
inc
inc
inc
and
movsl
mov
aam
jo
jg
push
sub
xchg
or
aam
sbb
push
leave
negb
inc
jl
cmp
in
pop
push
lds
pop
sub
dec
cmp
test
mov
ret
jl
movsb
xchg
fisttpl
data16
outsl
es
cwtl
outsb
mov
mov
data16
adc
fstps
popa
ja
loope
push
sub
or
mov
testb
fdivrl
fs
leave
add
int3
int
push
add
jno
mov
jb
cmpsb
sub
into
daa
pop
into
inc
movsb
imul
rorb
scas
jl
out
icebp
daa
and
pop
aaa
xchg
fwait
pop
inc
into
mov
popf
subl
sbb
push
xchg
ss
push
mov
leave
ret
push
or
xchg
punpcklwd
adc
and
jg
mov
gs
add
jl
sbb
mov
sbb
dec
aaa
jae
and
xlat
add
add
xchg
cld
dec
setb
mov
out
iret
push
cmp
std
cmp
xchg
xlat
ss
popf
adc
cmpsl
add
test
xorb
aad
jno
xor
sub
rcrl
aaa
pop
inc
dec
lret
and
push
fstps
cmp
idivl
shrb
pop
jecxz
xlat
jge
scas
test
xchg
pop
data16
jmp
incb
arpl
jae
jno
mov
rolb
mov
test
push
cmpsb
push
jmp
mov
jo
imul
mov
lds
shll
add
leave
int3
adc
mov
xor
lods
clc
and
sub
js
sub
shrb
sarb
sbb
inc
cmp
jne
xor
call
fisttpl
dec
js
rcrl
ret
inc
or
imul
inc
pop
test
adc
or
mov
or
jg
arpl
inc
pop
imul
pop
or
pusha
filds
mov
dec
sti
fcmovnb
pushw
aad
mov
mov
mov
movsl
lods
dec
xchg
mov
add
push
xchg
lods
push
subl
push
or
std
aaa
mov
daa
out
inc
jns
hlt
mov
mov
jno
and
mov
xchg
fcompl
in
mov
and
aad
loope
or
movsl
mov
aam
aaa
lcall
clc
leave
cld
xor
inc
dec
filds
xlat
repz
xchg
pop
ja
es
push
xchg
mov
cmp
enter
add
jecxz
aaa
rolb
xorb
dec
mov
hlt
pop
add
push
xchg
inc
rorl
mov
neg
lds
sub
in
pop
mov
add
lret
mov
mov
push
dec
popfw
cmp
cmp
les
es
xchg
sbb
repz
insb
pop
mov
jp
dec
insb
or
cmp
and
orb
cld
arpl
aam
and
mov
push
xor
outsl
mov
cmp
popa
shlb
in
push
jmp
lahf
es
mov
jae
testl
lcall
pop
xlat
mov
mov
cwtl
push
pushf
bound
cwtl
daa
mov
fsubrp
leave
ss
dec
pop
sub
xchg
daa
xor
repz
xor
aaa
rclb
jmp
enter
loopne
loopne
sbb
test
jae
or
push
and
mov
adc
mov
aaa
cmc
mov
inc
sbb
xchg
or
insb
mov
xchg
adc
sbb
mov
loope
outsb
xor
and
leave
xchg
fsubrl
sbb
mov
mov
xor
imulb
lret
stos
add
sti
std
jnp
xchg
movsb
xchg
loop
test
jae
adc
addb
mov
int
insl
inc
test
repz
or
inc
sbb
and
xorb
xchg
lods
inc
lret
or
sarl
das
sarb
mov
cmc
cmp
lods
iret
rolb
inc
scas
cmp
mov
nop
or
out
div
dec
fiadds
and
outsl
movsb
daa
cmp
ljmp
scas
cltd
xchg
aas
sbb
ja
out
dec
outsb
jo
mov
adc
addb
mov
pushf
aam
aas
bound
out
push
call
and
ficompl
mov
in
dec
ja
cwtl
in
fisubs
dec
repnz
jnp
scas
or
je
sbb
pop
push
rolb
or
sbb
push
ret
ja
fnstenv
scas
sub
inc
sbb
jmp
outsb
cmpsl
adc
pusha
loopne
sbb
jge
cmpsb
adcb
xchg
jns
xor
lahf
loope
mov
jle
jmp
mov
cs
dec
inc
lock
shll
sub
xchg
addr16
je
pop
dec
sti
jmp
push
addl
mov
add
cmp
ss
ds
inc
inc
jb
add
icebp
jnp
mov
jp
add
mov
adc
push
mov
rcrl
data16
cmpsl
sahf
fsubrl
dec
jmp
int3
xchg
xchg
dec
lea
iret
cmp
mov
sahf
je
lods
loopne
sub
loop
or
cwtl
mov
mov
sbb
pop
loop
mov
adc
or
sbb
fwait
push
in
jmp
sbb
inc
lods
out
push
out
push
xor
push
mov
fcompp
test
mov
push
dec
movsb
mov
push
js
test
fs
add
xchg
pop
xor
sub
hlt
push
inc
mov
xor
dec
cmpsb
cmpsl
jmp
jl
mov
pop
sbb
mov
jmp
rorl
sub
fmuls
sub
cmpsb
push
pusha
push
lcall
icebp
xchg
sub
pop
jns
add
int
xor
mov
stc
dec
pop
push
stos
or
xchg
pop
xchg
sbb
adc
sub
lret
mov
jmp
outsb
inc
inc
jp
lea
pop
push
pusha
leave
js
notl
pop
mov
mov
movsb
dec
loop
mov
jge
push
mov
data16
push
sbb
mov
jb
push
mov
cld
sbb
sbb
xchg
cs
and
inc
mov
push
adc
add
lock
lock
das
mov
cli
rcr
sbb
decl
mov
mov
movsl
jbe
inc
cmp
frstpm(287
in
fsub
mov
std
subl
cmp
or
ljmp
dec
sbb
outsb
cmp
adc
adc
pop
fidivrs
lock
pop
xor
fucomp
filds
fmull
push
adc
push
mov
clc
xchg
xchg
jge
mov
clc
sbb
stc
mov
lods
or
stc
add
sbb
ds
cmp
add
mul
or
jmp
push
sahf
test
ret
push
inc
mov
push
adc
add
lea
fldt
push
addr16
outsb
mov
jp
jns
fsubs
leave
lods
insl
lds
inc
aas
push
mov
inc
fdivrp
mov
call
out
in
inc
xchg
mov
mov
int3
stos
add
dec
push
leave
loope
lds
mov
loope
xor
jg
rcll
lods
test
jmp
call
push
out
add
dec
or
mov
and
sub
clc
cmc
scas
movsb
mov
jb
repz
push
lcall
repnz
sub
add
ljmp
mov
inc
out
leave
popf
out
jmp
mov
sarb
test
dec
fdivrs
int3
jmp
and
mov
pop
frstor
push
mov
clc
mov
fsubs
mov
mov
xchg
clc
divb
daa
cmp
divl
test
dec
ja
iret
add
cmp
pop
inc
mov
sahf
je
cltd
dec
xchg
popa
stos
push
out
xchg
push
out
sbb
test
loopne
adc
sbb
inc
outsl
sbb
cld
jno
shr
jmp
repnz
int
in
sub
sarb
cmp
cmp
pop
and
jl
popa
cmc
xor
in
imul
int3
push
push
mov
bnd
nop
sbb
xchg
dec
pop
out
pop
aaa
sbb
rclb
imul
inc
jmp
and
cs
stos
push
rcrb
sub
dec
sub
xchg
repnz
scas
lea
pop
sbb
fisubs
mov
fadd
aad
fxch
loop
adc
dec
sahf
push
sbb
and
lock
inc
ja
stos
sub
fisttps
fwait
pop
dec
test
dec
dec
out
aad
mov
jb
push
test
mov
in
and
rcrb
enter
stos
push
out
push
fs
leave
mov
decl
push
pop
jae
dec
xor
arpl
dec
das
fisttps
inc
nop
out
mov
rcrl
and
fwait
stos
lcall
push
xchg
or
jno
mov
sbb
xchg
or
shlb
movsb
mov
sahf
stos
test
mov
fwait
add
mov
jbe
and
dec
fimull
es
in
test
in
rcrl
dec
mov
lahf
das
mov
das
popa
cmp
popa
push
stos
or
dec
inc
push
push
jge
jno
pop
ja
pop
fisubl
fcoms
mov
rcl
push
adc
and
sub
cmc
lret
cld
dec
outsb
mov
lds
jb
cs
bound
add
dec
dec
mov
push
arpl
pop
jmp
xchg
shll
ss
xchg
jns
sub
mov
add
repnz
sbb
push
notb
or
mov
cmp
lahf
inc
jnp
push
xor
xor
lcall
sahf
cmp
adc
mov
dec
stos
les
push
mov
push
push
or
push
or
sar
jae
sbb
lret
pop
insb
pop
jmp
daa
pushf
jl
mov
inc
int
pop
add
push
xor
rclb
pop
add
arpl
lods
mov
mov
les
mov
ljmp
jne
jg
in
jo
jp
hlt
push
into
cli
lea
push
jp
xchg
sahf
scas
sbb
std
lock
inc
xchg
mov
mov
fimull
hlt
stos
stos
loop
aaa
mov
cmc
mov
mov
and
rorb
or
hlt
add
rcl
ret
cld
dec
scas
and
or
imulb
shrl
js
ljmp
mov
push
popf
stos
scas
push
add
jnp
push
cmp
push
lea
shll
or
mov
xchg
fwait
sub
ljmp
int
aaa
lcall
dec
icebp
stos
lret
jecxz
cmp
push
and
pop
pop
push
sbb
fcmovnbe
xchg
adc
cmpb
shrl
push
sub
jo
into
adc
cmpsb
les
xor
loopne
in
insb
in
xchg
jbe
sbb
or
int3
loopne
dec
mov
mov
adc
jl
test
test
or
pop
or
lock
arpl
pop
pop
pop
lret
pop
dec
aad
and
addr16
mov
mov
dec
shrl
push
mov
lds
das
daa
insb
and
mov
fadds
es
dec
popa
pop
cltd
push
scas
jp
mov
jo
xchg
in
fcoml
imul
jmp
sahf
xor
sti
das
or
cmpsb
mov
test
mov
mov
pop
pop
jl
pop
ret
mov
rcll
inc
add
dec
das
xor
cmc
outsb
dec
pop
inc
jns
imul
and
lock
leave
sub
cwtl
mov
add
movsb
cmc
inc
out
inc
mov
xor
sub
test
daa
dec
imul
mov
ds
insl
lds
xchg
mov
jecxz
dec
push
sub
adc
lock
incb
arpl
jg
add
in
jle
dec
test
scas
out
sbbb
aad
mov
xchg
jg
adc
add
mov
push
outsl
bound
divb
and
ret
into
loope
test
shlb
rcrb
sbb
mov
sbb
and
cmpsl
pop
dec
enter
add
dec
pop
xor
mov
rolb
xor
lret
jae
lods
add
sbb
data16
cmp
dec
out
xchg
and
xor
sub
adc
ss
icebp
outsb
xlat
cmp
sbb
xor
sub
test
cli
aam
mov
adc
call
push
shlb
aam
lods
mov
cmp
pop
and
and
xchg
or
pop
lahf
dec
mov
sub
dec
mov
out
jae
xlat
sbb
xor
inc
cmp
arpl
stc
jp
sti
movsb
inc
dec
and
dec
push
movsb
inc
repnz
pop
das
mov
fcomip
ss
push
popf
push
adc
sti
jp
loope
mov
ss
pop
mov
push
rol
pop
mov
jb
andb
dec
mov
es
popa
call
test
cmovp
insl
scas
dec
push
cs
xchg
cwtl
dec
rclb
xor
mov
fcmovb
fyl2xp1
imulb
rorl
mov
pop
test
xchg
push
js
in
fs
or
es
mov
mov
sbb
xor
in
or
xchg
adc
into
lcall
adc
pop
and
pop
orb
cld
mov
repz
fincstp
fisubs
mov
adc
sub
sub
in
aaa
sahf
popa
out
cmp
out
xchg
push
and
pop
popf
int
addb
pop
test
push
jl
fimuls
sub
rol
add
data16
mov
or
lcall
sub
push
xlat
xchg
gs
movsb
add
popa
aam
inc
adc
mov
inc
sub
and
scas
pop
push
dec
clc
push
sbb
xlat
or
mov
popa
add
pop
xor
ja
call
xchg
push
out
imull
mov
xor
inc
pushf
orl
push
daa
dec
sub
xchg
adc
insb
sbb
jl
xor
scas
inc
xor
lahf
cmp
mov
add
xchg
or
je
push
jb
mov
xlat
pop
push
f2xm1
mov
jns
cmp
dec
cmp
adc
mov
in
in
add
test
shl
xchg
jb
sarl
adc
ljmp
pop
in
push
adc
jg
or
gs
inc
sbb
push
jg
dec
iret
insl
loop
xor
mov
dec
mov
and
jbe
movsb
jae
popf
mov
or
xchg
fstp
sub
stos
clc
sub
in
mov
mov
inc
mov
jmp
cli
sub
xchg
repnz
jne
stos
mov
cmp
mov
jns
std
or
mov
pop
pop
movsb
xchg
ficomps
cmp
loope
cmpsb
addr16
int
mov
imul
push
aaa
adc
andl
mov
pop
jbe
jno
or
or
sahf
cli
jne
frstor
daa
pop
pop
movsb
xor
in
iret
xchg
ja
mov
lcall
xor
adc
or
or
daa
lock
mov
xchg
xchg
nop
add
ret
mov
mov
xchg
ja
test
mov
ja
sub
pop
pop
iret
lret
ja
stos
mov
cmpsb
leave
mov
ds
adc
je
fidivrs
cld
mov
sbb
into
and
sub
scas
popf
pop
jae
loopne
sar
adc
aas
sub
and
mov
rolb
adc
rcll
pop
and
mov
sbbl
mov
cli
cs
jge
pop
push
addl
ljmp
adc
adc
add
jns
stos
or
mov
pop
pushf
jmp
xchg
or
and
ds
jb
xor
test
cld
fcmovnbe
mov
insb
inc
fs
inc
jmp
push
mov
insl
out
dec
push
xchg
nop
sub
cwtl
cs
std
jp
ret
bound
xlat
pusha
scas
test
xchg
sub
jno
mov
subb
or
shr
adcl
add
pusha
cmpsb
notb
sub
scas
call
jo
cmp
ret
ljmp
ficomps
fcmovnbe
or
sub
inc
loop
lahf
leave
jne
and
xor
mov
jno
pop
mov
sbb
xor
cmp
add
cs
xchg
push
mov
iret
xor
lret
sbb
aad
xlat
or
sar
cmp
js
mov
or
add
pop
cltd
jle
jb
int3
cmc
out
out
pop
fldl
mov
jbe
aam
dec
test
mov
sub
out
ds
out
ja
cli
mov
out
sbb
jge
fcmovnb
das
out
test
adc
jns
lea
pusha
in
int
pop
add
push
mov
add
loope
sbb
dec
js
addr16
packsswb
dec
cwtl
rorl
push
jnp
pop
es
shrb
mov
and
push
inc
aam
mov
dec
and
push
out
inc
jge
out
and
push
out
xchg
stos
adc
movsl
sbb
cmp
jmp
dec
jp
xchg
imul
icebp
into
or
pushf
jp
sub
lret
add
aad
jge
imul
jae
sbb
clc
inc
and
lahf
jo
stos
jg
xor
xchg
push
lods
rorl
mov
push
sbb
mov
cmp
enter
adc
jbe
je
xor
les
xor
lret
inc
dec
adc
jg
push
jae
mov
jge,pn
mov
cli
movsb
xchg
push
gs
dec
dec
leave
push
mov
rolb
out
call
dec
fmull
fs
cmp
divb
lock
decb
xchg
pushf
xor
or
popf
push
in
js
lods
xor
jg
ret
or
fsts
jecxz
lods
inc
xor
mov
pop
add
rcll
pusha
into
push
mov
call
pop
ljmp
push
cmp
cmp
aaa
adc
mov
int
mov
je
adc
cmp
xchg
push
mov
ss
imul
push
inc
addb
clc
fstpt
iret
sub
in
mov
in
cwtl
add
adc
sub
cmpsb
stc
cmp
dec
iret
push
inc
aad
and
add
cmc
rolb
jne
fnstenv
dec
outsl
pop
dec
je
dec
xchg
es
sbb
mov
test
adc
loop
xorb
lret
loopne
sbb
add
push
je
push
mov
jne
mov
test
xor
std
daa
add
movsb
test
lcall
scas
andb
inc
mov
sbb
in
fidivs
xorl
lret
lret
and
aaa
and
push
mov
outsl
inc
mov
movsl
and
push
xchg
scas
xchg
mov
inc
and
out
inc
sub
xchg
stc
add
push
leave
jle
push
aam
in
sti
inc
and
lahf
pop
xor
dec
mov
dec
cmp
push
fimull
or
dec
out
popa
cmpsb
bound
and
pushl
mov
push
add
and
outsb
push
in
fwait
mov
adc
loop
pop
push
push
in
ja
xchg
cmp
pop
xor
or
out
and
dec
push
pop
pushf
push
push
shll
xchg
mov
and
dec
insb
in
aad
jle
fiadds
out
cs
dec
jns
pop
leave
fcoml
fistl
test
jg
cwtl
mov
shlb
and
sbbl
decl
rcll
sub
jmp
loopne
insl
and
cld
xchg
lret
out
jl
push
ja
add
stc
pop
xchg
aaa
or
cltd
add
dec
jle
scas
push
cs
add
push
icebp
pop
xor
cmp
inc
mov
addr16
add
sbb
push
mov
or
jbe
sub
cld
ret
mov
aad
xorl
xlat
inc
adc
mov
loop
push
mov
subl
ss
push
jp
mov
sbbl
lret
mov
mov
mov
negl
inc
stos
dec
fdivrs
ret
mov
cmp
mov
mov
addr16
gs
enter
movsl
loope
pusha
push
sub
dec
mov
imul
push
out
aas
or
ljmp
fsubrs
xchg
jns
test
xor
test
inc
sub
xchg
insl
test
jnp
jge
popf
ret
sub
jmp
clc
clc
outsl
loopne
mov
in
fadds
and
ljmp
mov
dec
call
inc
fisttpll
int3
dec
imul
and
mov
adc
fcomp
dec
cmp
jp
dec
addl
ret
imul
call
ja
pop
int3
mov
pop
dec
sbb
lods
cmpsl
inc
jno
push
insl
push
dec
lahf
and
xchg
jg
push
sti
arpl
xor
out
dec
fdivrs
movsb
push
test
jg
xorl
cmp
mov
cltd
mov
test
jg
in
adc
add
jmp
movsl
test
sbb
push
shr
or
movsb
ljmp
lcall
fs
jl
cltd
js
or
pop
pop
mov
adc
add
nop
inc
outsb
xchg
xor
sub
jne
in
pop
xor
add
dec
les
aas
fisttpl
mov
or
shrb
lcall
mov
cwtl
cmp
call
daa
lahf
ds
pop
dec
pop
das
sub
aam
mov
rcrl
add
ljmp
sbb
xor
fs
sub
ja
rcrb
adc
lods
scas
insl
cmp
leave
push
insb
out
dec
cmp
jbe
jp
push
stc
mov
mov
adc
and
arpl
out
mov
std
sbb
jb
mov
fcmovu
into
mov
sarl
sbb
outsb
xor
imul
mov
mov
fidivl
push
mov
mov
sub
inc
je
rcrl
int3
cmpsb
or
cltd
mov
sbb
sub
mov
out
lods
dec
mov
jae
nop
and
negb
jmp
xor
imul
hlt
mov
pop
xchg
fnstcw
call
xor
out
and
dec
popf
fsubrs
mov
out
xor
das
ja
iret
pop
cmp
call
mov
lock
or
mov
incb
jne
lcall
push
adc
aad
and
loopne
mov
jp
xorl
out
arpl
lahf
add
scas
pop
sbb
sub
xlat
pop
mov
pop
pop
cmp
dec
int
xor
outsl
adc
movl
dec
popf
or
flds
jns
ja
ljmp
mov
out
movsl
mov
mulb
mov
ss
in
push
sub
cmp
sub
jg
adc
adc
add
fcoms
in
daa
dec
movsb
sti
sbb
ds
clc
lea
push
jmp
lods
fldenv
mov
xor
xor
jbe
adc
sbb
adc
sti
loopne
aaa
insl
push
cmp
pusha
loope
dec
cmpsl
rclb
sbb
add
pushl
cmp
int
mov
cs
mov
xchg
xchg
cmp
jns
and
divl
dec
movsb
psubw
call
orb
jbe
xchg
inc
fisttpl
stos
add
mov
jl
and
addb
in
fcomps
into
repz
es
jge
mov
or
movsb
clc
test
inc
mov
arpl
scas
popf
cmpl
push
lods
dec
daa
daa
push
jg
mov
push
rclb
push
mov
pop
pop
loop
mov
sub
cmp
jge
add
inc
mov
test
pop
test
xchg
xchg
cmp
lods
push
repnz
loopne
inc
push
cmc
repz
mov
inc
popa
mov
ss
inc
hlt
pushf
inc
testb
adc
ds
sbb
mov
xlat
lea
push
shl
mov
lcall
and
testb
xchg
flds
data16
lds
dec
mov
adcb
negl
sbb
fcompl
out
or
push
push
sbb
imulb
ret
stos
sbb
xchg
add
sbb
and
imul
add
mov
loop
pop
call
jnp
loopne
lret
test
test
push
data16
cmpsl
push
das
xor
sub
dec
mov
push
fadd
xchg
mov
dec
popa
xor
push
sahf
sub
pusha
clc
ret
add
gs
adc
mov
add
or
popa
push
mov
pushf
mov
mov
xor
adc
pusha
inc
aas
xchg
lea
je
loop
orl
rorl
sti
mov
and
in
popa
int3
test
orb
xchg
adc
lret
mov
inc
fiaddl
push
lock
dec
xchg
jns
mov
ljmp
push
cwtl
lret
jnp
imul
fwait
das
std
jg
cmp
nop
xor
push
leave
jo
add
inc
in
push
andl
dec
push
xlat
nop
call
cmpsb
inc
and
push
jnp
pop
xor
fisttpl
jno
add
ret
std
das
jg
mov
and
jmp
enter
fidivrs
push
inc
sub
mov
dec
pop
add
stc
icebp
into
in
or
sub
jp
inc
int
imull
pop
and
sahf
arpl
rcl
pop
popl
lock
aad
lea
rolb
sub
jmp
das
xlat
ret
movsb
push
fimuls
movsl
mov
jp
dec
dec
cli
data16
mov
stos
xor
mov
into
inc
subl
sub
push
sub
xor
sub
xchg
pop
daa
imul
pop
pop
lahf
xchg
lock
cmc
bound
jmp
sub
xchg
jns
mov
lret
and
std
jno
in
out
leave
test
fst
fisubs
leave
push
cltd
and
test
push
in
cmp
enter
xor
pop
mov
ljmp
sbb
fsubs
add
jecxz
and
sahf
daa
lahf
jp
dec
leave
and
insb
lock
sbb
stos
mov
outsb
iret
enter
fdivs
inc
push
sbb
adc
test
stos
jo
and
rclb
je
call
test
into
cmp
pop
pop
or
lahf
and
xchg
cltd
sub
cmc
aas
cmp
fadds
sub
adc
jns
js
jnp
xor
xlat
inc
fisubrl
and
lcall
mov
push
mov
mov
rclb
notl
lock
cmp
xchg
mov
jnp
sbb
shlb
sti
jp
xchg
aaa
xchg
mov
jns
inc
mov
or
stos
inc
xor
or
mov
add
lods
push
and
push
lods
ret
pop
jl
xchg
cmp
fwait
xchg
imulb
cmc
sbb
popa
mov
mov
gs
mov
and
ret
popa
sub
fsubr
jo
add
sub
movsb
sbbl
mov
lods
dec
ljmp
mov
jbe
and
leave
cmp
pop
cmp
mov
dec
imul
pop
cmp
push
aam
iret
dec
mov
fsubrs
and
or
pop
jp
inc
jmp
addr16
fsubl
sub
jns
sbb
dec
in
cwtl
arpl
push
in
cmp
call
fs
push
jp
xchg
popa
mov
sbb
xor
mov
and
loop
mov
rolb
push
cmp
subl
xchg
push
sub
insl
jge
mov
mov
sti
sahf
test
and
and
push
lret
je
and
out
push
pop
sub
sub
outsb
pop
xchg
ficompl
mov
leave
pop
jp
jo
out
inc
roll
insl
jp
iret
movsb
mov
sbb
push
mov
js
clc
das
lea
mov
xor
lock
sub
add
in
fnstenv
mov
data16
aam
xchg
divl
pop
xor
mov
dec
adc
nop
mov
jmp
pop
xchg
int3
xchg
imul
or
fs
in
int3
stc
jg
fnstsw
lods
jns
xchg
jg
xchg
and
cltd
mov
push
pop
inc
or
jecxz
inc
repz
inc
add
mov
int
dec
addb
push
push
ds
mov
mov
xor
sub
add
add
pop
je
jle
xchg
adc
xchg
addr16
out
inc
lods
nop
and
arpl
icebp
stos
push
aaa
movsl
mov
ja
arpl
lods
xlat
mov
or
fisttps
and
push
and
insb
jmp
gs
xlat
pop
pop
cmc
lds
pusha
xchg
ss
adc
je
add
push
andl
sbb
or
jl
add
ss
push
jae
std
inc
jbe
int
js
sbb
mov
aam
xor
test
movsb
xorps
int3
push
test
push
add
stos
shlb
ret
mov
mov
flds
das
or
xor
ret
dec
dec
xchg
xchg
dec
cld
jg,pn
scas
mov
fs
call
aad
movsb
jnp
mov
lods
xchg
add
dec
xor
mov
mov
stos
jg
mov
xchg
add
aad
push
scas
xor
sbb
and
fnstsw
add
mov
sub
ljmp
inc
jnp
xchg
adc
out
adc
icebp
fists
shrb
dec
dec
xchg
cmp
repnz
clc
inc
shll
lret
pop
pop
out
push
iret
fnstenv
in
dec
add
add
int
jecxz
testl
mov
lds
mov
les
cmp
not
dec
xor
lret
cmp
mov
jo
fs
icebp
pushw
adc
lret
ja
xlat
data16
xor
arpl
sbb
cmp
sub
mov
sti
sbb
mov
lret
pop
mov
hlt
cmp
aad
pop
inc
stc
aaa
negl
sar
mov
sub
fdivl
cwtl
lret
mov
ja
jae
decl
push
mov
movsl
pushf
adc
mov
and
push
pop
je
xor
or
push
push
jmp
dec
negl
push
popf
cmp
ds
ss
outsb
in
pop
je
in
push
pop
xchg
xchg
and
mov
fistl
and
pop
clc
xchg
aad
ja
mov
dec
sti
or
outsl
and
adc
mov
imul
stc
mov
jnp
push
xchg
cmp
or
out
pusha
das
test
js
cli
cld
push
popfw
inc
das
xor
loopne
orb
sti
or
cmc
jecxz
cmp
dec
add
fsubrl
fiadds
imulb
push
mov
aas
pop
stos
shr
pop
push
js
scas
sub
or
mov
add
jae
pushl
mov
mov
sbb
add
fdivs
push
pop
cmpsl
in
jl
ret
inc
sbb
xchg
jo
sarb
bound
insb
shrb
xor
lds
rorb
push
xchg
rol
fistps
sub
xchg
xor
outsb
mulb
pop
sub
shrl
inc
and
mov
lods
and
enter
lcall
jp
pop
dec
cmp
lods
and
xchg
lock
and
mov
xor
pop
or
dec
int3
or
std
das
mov
push
jns
js
dec
jns
lock
lret
cmpsb
jl
mov
xor
push
dec
int3
dec
mov
fcom
cltd
ds
xlat
js
inc
add
iret
decl
loope
jo
inc
fisttpll
fistl
xor
out
out
or
stc
stc
call
xor
dec
out
outsb
jb
std
mov
xchg
xchg
pop
and
xchg
imul
xchg
pushf
xor
movsl
dec
rorl
mov
sub
idivl
popf
push
lods
rcr
clc
and
pop
pop
mov
dec
pop
in
and
dec
shlb
jbe
xchg
cmc
xor
stc
sub
pop
dec
mov
cwtl
dec
scas
popf
push
inc
ret
bound
rcr
cltd
repz
arpl
pop
push
mov
pop
and
xor
fisttpll
fcmovnu
daa
mov
mov
call
rclb
int3
aaa
pop
sbb
push
popa
xor
xchg
mov
std
in
sahf
xchg
mov
xchg
cli
cmp
stos
lock
js
aam
pop
push
into
lahf
in
push
dec
cmovs
lcall
inc
mov
push
sub
jg
hlt
shrb
popf
insb
mov
xlat
rclb
outsl
xchg
rcl
mov
stc
dec
cmp
insl
in
outsl
setae
fwait
mov
or
add
in
daa
mov
cmp
int3
icebp
pushf
inc
mov
and
jl
push
adc
inc
or
xorb
inc
aaa
mov
mov
fnstenv
cmp
lcall
adc
pop
js
lock
push
cmp
imul
aad
repnz
test
adc
out
push
xchg
outsb
jno
ret
lret
lret
pop
xchg
pop
lods
lods
lock
mov
ljmp
cmpsl
or
clc
dec
addb
sub
movsl
test
push
call
cmp
or
scas
add
mov
lods
jbe
mov
idivb
mov
int
inc
dec
jnp
je
scas
out
and
stos
pop
jno
xchg
dec
div
repnz
or
mov
pop
dec
inc
pop
mov
fnstcw
mov
jecxz
mov
jmp
ds
xchg
nop
and
mov
stos
push
fsubl
sarl
popf
test
ret
sbb
fimull
rolb
xlat
adc
shlb
and
orb
ja
mov
push
loopne
sub
test
inc
pop
iret
stos
xor
imul
pop
xor
fs
or
pusha
hlt
jl
stos
add
aam
push
in
mov
or
xor
cs
stc
lods
jle
mov
mov
pop
push
and
cwtl
jnp
aam
dec
xor
dec
mov
mov
push
shl
and
jmp
xchg
aam
xchg
add
fwait
orl
xor
adc
pop
std
pop
ss
jnp
daa
cmp
mov
sub
xchg
inc
daa
lret
or
and
and
fisttpl
insl
mov
repnz
cmpsl
push
daa
xchg
mov
pop
aam
cmc
outsb
lret
cmp
pop
adc
fldenv
mov
sahf
pop
js
jecxz
add
push
and
mov
inc
xchg
fsubl
jo
cltd
insb
cmc
xor
lods
je
or
pop
sbb
mov
push
push
gs
mov
test
popa
nop
ja
pop
sbb
in
mov
jae
lock
adc
jbe
mov
push
xchg
out
xchg
push
push
out
fldt
loope
xchg
out
pop
xor
out
scas
aad
sbb
popf
cmp
fstp
push
in
fistpl
adc
lret
stc
sub
leave
sahf
loope
cld
into
adc
cmp
fisttpl
icebp
loopne
push
push
or
addl
loop
clc
andb
fdivl
sbb
and
out
mov
popf
ret
shll
fstpt
dec
mov
jbe
scas
ret
mov
or
notb
data16
push
lds
faddl
cmc
aas
lds
adc
repz
pop
repz
push
stc
and
inc
xchg
sbb
fiaddl
inc
pop
mov
enter
mov
pop
js
adc
inc
dec
jne
xor
push
shlb
scas
scas
shlb
fidivl
rcr
int
test
jbe
test
mov
inc
repnz
sbbl
jne
dec
cmpsb
pop
xchg
add
rcl
std
add
mov
shr
adc
pop
pop
mov
fstps
xor
aaa
mov
xor
jo
or
jl
sti
rcl
ret
jnp
int3
ds
cmp
xchg
jmp
inc
jnp
xor
mov
jg
pusha
jb
cmovbe
add
jo
mov
int3
loop
push
out
fcoms
stc
jns
xor
lcall
jg
sub
mov
cli
mov
divb
adc
push
lods
pop
ret
xor
fisubl
inc
cmc
loopne,pn
adc
lahf
aam
push
hlt
addr16
adc
cmp
fstps
outsb
push
cmp
loop
or
sbb
sti
pusha
mov
rcll
mov
sbb
imul
insl
pop
flds
jecxz
sub
int
inc
xchg
mov
popa
cmpsl
fidivrl
mov
inc
mov
cld
and
inc
xor
xchg
outsl
loop
jno
iret
bound
lret
mov
insb
pop
ljmp
pop
aaa
ja
or
push
lahf
jge
jne
in
hlt
cmp
leave
xchg
pop
sbb
enter
jge
add
in
xchg
pusha
xor
and
cmpsb
mov
out
sub
sbb
mov
call
les
xlat
sub
and
iret
mov
fidivrs
add
ljmp
sub
dec
andb
mov
dec
cltd
rclb
sub
jae
mov
icebp
adc
pop
out
push
jmp
subl
cwtl
rcrb
dec
mov
dec
mov
fisubrs
mov
lret
and
repnz
out
or
fs
adc
dec
nop
lret
mov
bound
push
xchg
or
mov
lea
je
jo
inc
aam
pop
hlt
bound
adc
add
mov
and
dec
in
outsl
ds
mov
inc
sarb
cli
xor
in
jg
scas
adc
pop
push
aam
add
hlt
ljmp
out
sub
mov
rcrb
pusha
dec
or
and
lret
jle
clc
jge
daa
mov
cmp
or
imul
scas
add
inc
lock
aad
out
int
out
xor
stos
lds
jne
pop
scas
mov
test
notb
rcrb
fistl
pop
shr
js
and
adc
xchg
and
ror
pusha
jle
adc
sub
cmp
cmpsl
cmpsl
cmc
push
xchg
arpl
cmpsb
outsb
out
push
arpl
mov
daa
and
inc
mov
xchg
ljmp
ljmp
sbb
data16
dec
xchg
add
fistpll
into
outsl
out
popl
jmp
mov
xlat
dec
fisubrs
in
test
ret
loopne
push
aam
pop
sbb
fwait
mov
popf
mov
scas
jmp
pop
mov
push
fcmove
jp
iret
xchg
jl
clc
mov
cld
test
psubsw
pop
int
dec
popf
jno
adc
ja
adc
and
dec
lea
adc
cmp
shrb
mov
lds
hlt
inc
fisttps
cmp
sarb
popa
dec
pop
addr16
dec
mov
sub
das
pop
push
adc
xor
mov
cli
pop
fbstp
sub
cmp
lock
cli
sub
arpl
or
mov
add
imul
mov
or
stos
and
out
push
pop
jmp
jbe
out
je
rol
xor
stos
fs
cmpsl
imul
inc
adc
popf
das
mov
mov
mov
adc
bound
repz
mov
fmul
stc
aad
movswl
inc
mov
aam
jmp
mov
outsl
insl
jg
sub
cmp
adc
cmp
daa
mov
shlb
in
adc
in
cmpsb
mov
adc
and
push
imul
aas
adc
clc
mov
sub
pusha
push
sar
iret
xor
rorb
shlb
lret
cmp
loopne
fidivrs
lret
in
adc
and
loop
xchg
push
je
mov
pushf
sbb
out
dec
pop
or
lods
cwtl
rorl
mov
fwait
cmovs
sbb
cmp
ss
xorl
mov
scas
mov
inc
rclb
stc
cltd
xor
sbb
sbbb
ret
dec
add
add
push
in
xor
pop
jb
and
nop
sbb
sub
fiaddl
sbb
mov
insl
ds
jo
pop
add
xor
mov
add
leave
int3
cmp
xchg
push
add
adc
jl
mov
push
std
enter
inc
and
out
pop
fisttpl
sub
cs
popf
test
fisubs
lahf
repz
and
jp
repz
rcrb
lret
rdmsr
cltd
in
aam
and
mov
or
push
lea
fs
fadds
and
sub
stc
inc
shl
mov
push
out
aaa
in
imul
inc
mov
push
popa
movsl
iret
jb
test
mov
mov
xchg
addr16
in
stos
out
cmp
subb
js
inc
ficompl
mov
dec
outsl
jl
test
cmc
lods
add
dec
fidivs
stos
mov
gs
lret
add
sub
inc
aam
jmp
iret
pop
sbb
sti
xchg
fdivp
popf
push
insl
loopne
sbbb
xchg
mov
insb
jb
shlb
cmp
push
jbe
pop
and
stos
push
or
push
mov
xlat
push
mov
mov
jmp
orb
lock
push
loop
jge
hlt
pop
iret
cwtl
xchg
xchg
leave
pop
out
pop
sbb
sar
mov
iret
sub
jge
jne
dec
mov
hlt
insl
mov
fistpll
push
fcompl
xor
and
clc
mov
addr16
adc
cld
sub
pop
mov
call
or
ret
test
imul
add
popw
test
lds
mov
insb
lcall
sub
dec
in
scas
pop
or
add
andl
cwtl
jae
cmc
cld
xchg
adcb
mov
popf
or
mov
and
mov
subl
xor
cmpsb
test
pop
push
lea
aaa
pusha
cmp
mov
out
lret
aam
jl
loopne
fsubrs
xor
inc
movsb
sub
sti
out
sarl
das
or
cltd
and
mov
adc
in
xor
push
mov
and
inc
sti
xchg
jnp
cmp
push
push
add
inc
mov
add
xchg
lds
xchg
mov
pop
pushf
stc
mov
andb
mov
jo
xor
stc
cmp
ljmp
mov
leave
outsl
popa
sub
xchg
jnp
call
rorl
aad
pop
repz
dec
pop
outsl
dec
mov
ja
jne
pop
icebp
xlat
ret
mov
push
inc
cmp
pop
int
xchg
stos
outsb
and
sahf
push
jp
dec
mov
mov
or
pop
cmpsl
add
repz
pop
test
sbb
fst
adc
jle
int3
repz
in
push
jge
movsl
jno
aam
and
scas
inc
push
push
mov
hlt
mov
add
jne
xchg
cld
or
push
push
pop
jg
and
movsb
inc
add
sub
cmp
ja
pop
mov
mov
jb
imulb
jbe
mov
lock
sbb
sub
int
or
loope
aad
nop
xor
add
cwtl
fstl
sbb
test
push
fwait
jg
leave
mov
aad
mov
push
jnp
jnp
lock
shll
icebp
mov
push
mov
adc
in
sahf
mov
mov
ret
pop
xchg
ficoml
push
outsl
and
mov
xchg
lock
movsl
inc
std
adc
in
lret
mov
lret
push
sbb
pop
lea
jnp
imul
sbbl
mov
jecxz
cmp
mov
mov
mov
add
pop
in
dec
fbld
push
sub
mov
mov
pop
insb
add
or
mov
jp
int
and
jg
add
xchg
cmp
shl
push
sub
cs
rcr
mov
cltd
cmpsb
mov
xor
and
out
mov
cld
or
jbe
mov
popa
in
cltd
dec
and
outsl
in
loope
addb
lea
inc
or
mov
mov
inc
outsb
and
inc
add
add
add
cmp
enter
mov
repnz
xchg
mov
lock
leave
aam
cli
pop
nop
inc
pop
out
cmc
mov
sbb
notb
sbb
xor
popf
out
dec
pop
imul
aam
xor
adc
je
lock
cmp
cwtl
xchg
sbb
fstpl
scas
lcall
xchg
loopne
push
sub
jae
jbe
ret
rolb
loopne
scas
repnz
lahf
enter
mov
xor
aaa
arpl
in
cmp
xor
mov
xorl
push
mov
ficoms
and
imul
mov
jno
push
pop
and
clc
adc
sub
xor
fsubl
push
dec
jnp
test
aam
je
mov
xchg
mov
mov
adc
jnp
adc
pushf
daa
mov
xor
out
lea
cmp
jle
add
mov
inc
add
mov
pop
cmp
push
pop
ss
dec
dec
rcll
jbe
mov
sbb
xchg
minps
inc
bound
inc
mov
mov
repnz
shr
test
xor
jb
jnp
mov
jns
sbbb
dec
in
jge
and
lock
lcall
pop
dec
cs
or
sti
aaa
mov
add
in
inc
sbb
xchg
stos
outsl
mov
xchg
in
inc
insl
push
aaa
sub
pop
xchg
xor
fnsave
fdivr
fiadds
aad
push
sub
lahf
test
adc
rcl
leave
pop
jb
out
test
jge
add
mull
mov
xchg
sub
xor
cmp
or
jb
pop
rcr
into
dec
insb
sahf
sbb
lock
xchg
mov
out
inc
rorl
jno
popa
fcoms
inc
jb
mov
fsubrl
lds
fwait
or
jns
mov
xor
cwtl
imul
and
sti
jnp
fstpt
add
iret
xchg
push
mov
lahf
sbb
cltd
xchg
test
daa
mov
sti
jecxz
ljmp
and
rorl
xchg
inc
lret
jle
pop
daa
add
jmp
ljmp
jns
jge
repz
xor
mov
pop
push
pop
xlat
mov
jmp
aad
out
xchg
in
lret
cwtl
lret
lock
xor
sub
push
cmc
jecxz
mov
bound
fimull
fmuls
dec
into
enter
jp
scas
enter
and
add
cmp
ja
pop
jecxz
cltd
data16
dec
sti
sahf
lea
mov
shrb
fsubl
pop
int3
lret
jl
int3
mov
lea
pop
loopne
shr
mov
fwait
push
loope
cli
orb
loop
rorb
jmp
int
cmp
insl
cwtl
adc
xor
fstps
jle
or
mov
or
test
jmp
jno
dec
clc
insb
idivb
xchg
daa
aaa
mov
pop
mov
ret
push
clc
xchg
movsb
or
into
je
ja
lods
js
rcl
cmp
inc
pop
jg
pushf
mov
mov
push
idivb
pop
cmp
pop
mov
add
in
inc
cld
mov
cld
aad
sub
stos
and
and
in
push
sub
add
fnsave
jb
push
inc
or
enter
or
in
pop
lods
push
mov
sub
jb
mov
aas
or
fcoml
mov
push
fistps
fwait
popf
js
dec
ljmp
pop
rcl
xlat
xchg
lds
repz
arpl
subb
dec
sub
lock
stos
insl
nop
and
sub
lock
rcll
stos
jns
cltd
mov
mov
jge
lds
and
sub
add
mov
popf
enter
dec
ret
je
sub
inc
jl
xor
or
and
loopne
jb
push
repnz
dec
adc
movsl
mov
lds
jl
mov
iret
insb
inc
xchg
jl
loop
insl
ss
adc
push
xor
adcl
out
jl
cmp
movb
cmp
outsb
mov
or
pop
push
data16
lahf
xor
inc
call
mov
js
iret
pop
mov
icebp
es
stos
loop
and
cmp
jg
inc
pop
add
testb
mov
push
out
sbb
cs
ds
dec
lea
mov
movsb
or
add
rol
jo
lret
lock
pop
out
xchg
inc
or
pop
fisubrs
mov
push
out
xchg
or
aam
imul
sti
ja
cmpl
adc
sbb
inc
cwtl
fsubs
mov
outsl
popf
dec
pusha
addr16
iret
jp
dec
scas
xchg
mov
aad
sub
insb
hlt
bswap
lods
ret
xor
inc
rcrb
lahf
pop
or
ss
fdivrl
fsub
aas
and
nop
dec
fs
cltd
pop
adc
or
add
and
scas
mov
fildll
loopne
push
mov
inc
not
jmp
mov
mov
push
int3
xor
int
xor
inc
aaa
sbbb
xor
shll
ja
mov
test
inc
lret
pop
mov
pop
add
filds
insl
cmp
pop
fdivs
ljmp
out
popf
mov
push
push
pop
push
xor
sahf
mov
rorb
rcrb
xchg
inc
mov
inc
punpckhwd
sbb
sbb
in
aam
dec
subb
sti
mov
lahf
mov
push
clc
add
dec
ss
sti
fldenv
movsl
push
out
je
and
sbb
mov
push
call
cmpl
imul
mov
testl
pop
enter
or
cs
push
cmp
mov
xor
icebp
insl
push
inc
sti
push
ss
shl
inc
sbb
sub
pop
push
daa
lods
lock
jmp
rcll
fsubl
sar
sub
imull
add
fnstsw
cmp
jb
dec
sbb
sarb
add
pop
in
adc
loope
adc
adc
clc
push
mov
stos
clc
xor
dec
test
jge
mov
jle
mov
loopne
mov
out
pop
or
xchg
lret
lds
rcrl
jmp
push
add
repnz
xor
dec
pop
dec
aad
adc
rcr
push
cmp
shll
aad
iret
cmp
jnp
shrb
jnp
xor
pop
adc
xor
mov
jmp
pop
hlt
jno
insl
scas
lds
int3
in
outsb
dec
ljmp
scas
mov
fisubl
lock
loopne
fucomp
cmp
repz
sbb
jno
jno
cltd
xchg
mov
shrb
pop
mov
or
testb
sbb
add
lods
push
mov
fistps
mov
mov
adc
sbb
test
cltd
jecxz
loope
sbb
jg
lods
and
push
mov
mov
inc
jecxz
int
pop
or
pop
stos
sahf
mov
in
mov
add
addr16
pop
ret
ljmp
insb
push
jo
push
call
xchg
inc
pop
fucomp
sub
andl
push
sarb
mov
xor
sbb
adc
in
mov
adc
movsb
mov
xchg
lret
test
inc
movsb
pop
pmaxub
adc
mov
push
xor
pop
call
inc
dec
mov
stc
push
std
pop
addr16
fs
sbb
push
push
mov
mov
xor
jo
mov
cmp
push
lcall
mov
test
stos
mov
push
jg
xor
mov
aaa
mov
sti
xorl
outsl
aas
jno
inc
test
movsb
mov
into
adc
bound
sahf
je
mov
gs
xchg
repnz
mov
xor
jecxz
pop
lret
paddw
in
push
call
sub
loop
jge
pop
lahf
lods
sbb
sti
popa
insl
fmull
repz
or
and
stos
mov
push
mov
loope
and
adc
dec
lods
push
mov
push
inc
dec
jo
mov
pop
jle
and
in
pushf
jmp
cmp
add
inc
push
out
pop
cwtl
aas
xchg
or
and
cmp
xchg
jle
cli
and
xchg
sub
mov
xchg
mov
ljmp
ret
into
out
jo
popf
pop
mov
sbb
in
jno
int
sub
js
cmpsb
or
cwtl
filds
stc
arpl
test
add
insb
cltd
cs
cmpl
call
pop
or
pop
or
sbb
jno
std
loop
and
lea
lcall
cld
sti
jp,pn
outsl
aam
loope
dec
adc
jno
jo
mov
imull
jg
lahf
sbb
sub
inc
jl
inc
xchg
out
es
mov
iret
xor
in
dec
mov
and
xor
lods
cmpsb
mov
fstpl
es
sbb
adc
mov
xlat
shll
add
or
loop
fiadds
adc
or
inc
fisttps
lods
jle
nop
lods
aad
and
aaa
push
push
movsb
outsl
dec
shrb
pop
imul
dec
add
mov
roll
sbb
cld
xchg
dec
mov
xchg
pushw
push
cmp
pushf
cmp
pop
aad
out
jbe
out
mov
cmp
cli
adc
test
pop
xchg
lock
mov
rol
aas
sub
dec
jle
dec
stos
cwtl
cmpsb
cmp
jno
jbe
mov
add
out
outsb
adcl
movsl
in
pusha
stos
pop
cwtl
roll
mov
outsl
push
mov
xchg
stos
mov
jno
clc
mov
pop
jae
das
mov
push
or
push
dec
les
call
inc
adc
daa
fimull
cmp
jne
fcmovnbe
stc
movsl
lock
xlat
jle
jle
push
or
fcmove
mov
pop
push
jo
out
push
xorb
mov
xor
je
xchg
scas
pop
iret
mov
clc
outsl
inc
out
mov
sub
pop
cmpsl
push
mov
loope
or
pop
jb
iret
dec
cmp
xchg
jmp
lret
dec
cs
mov
test
std
pop
push
fsubs
mov
xor
jp
sub
xor
inc
out
jle
ffreep
add
int3
pop
test
jae
mov
arpl
push
mov
fists
test
and
lods
movsb
jg
cli
mov
jp
lahf
out
add
add
hlt
xchg
sbb
sub
pop
push
jp
mov
jle
jle
adc
cwtl
shlb
in
inc
ja
push
cmp
ds
mov
mov
cltd
mov
jo
adc
mov
es
andl
mov
xchg
adc
add
ss
enter
or
cli
push
cmpl
jl
inc
scas
inc
cs
push
jb
push
sub
mov
or
inc
cmp
sbb
es
rcl
movsb
xor
add
mov
jno
outsl
fbld
push
test
jmp
lret
in
adc
jbe
jg
pusha
cmp
pop
scas
dec
jb
xchg
ret
mov
push
mov
mov
mov
hlt
xor
xchg
add
mov
mov
cmpsl
jbe
outsb
dec
mov
icebp
test
mov
enter
pop
mov
add
sub
cld
sub
xchg
fmull
dec
or
pusha
popa
in
lret
lret
cltd
out
movsb
add
popa
movsl
xchg
mov
adc
fcomp
stc
push
cmp
leave
or
adc
push
pop
mov
shlb
xor
mov
or
ret
ja
mov
sbb
sub
push
cmp
int3
mov
jl
cmp
push
jecxz
movsl
inc
or
iret
out
aad
xchg
ja
jb
adc
shll
and
jecxz
cmp
xchg
nop
pop
ret
in
fimull
push
fsubrs
xchg
js
and
loop
adc
das
pop
jecxz
and
scas
dec
imul
outsb
stos
imul
mov
dec
sbb
int3
mov
lahf
pop
ja
cmp
push
fstpl
adcb
sbb
int3
loopne
jmp
xchg
cmc
sub
lock
adc
jle
out
push
and
repz
jg
fists
mov
bnd
pop
push
leave
ret
cmc
xor
jp
rol
push
popa
add
push
inc
stc
dec
int
dec
mov
ja
sbb
adc
dec
mov
jmp
in
fiadds
test
sbb
pop
xchg
ds
add
lods
push
add
cmc
gs
mov
cmp
ret
sti
jle
xlat
fists
jne
xchg
xchg
test
inc
in
ret
scas
xchg
shr
or
test
xor
xor
jg
dec
mov
test
push
pop
cs
add
jl
mov
std
pushf
cmpsl
mov
sbb
mov
sbb
cmp
xchg
dec
icebp
dec
pop
fldt
lret
mov
popf
cmp
test
lock
add
cmp
pop
int
mov
notb
outsb
fsubl
or
inc
out
je
scas
clc
push
subl
push
mov
stos
pop
daa
lods
jb
daa
subb
cltd
in
xor
out
subb
cmp
mov
jg
or
push
lock
xor
dec
cwtl
dec
mov
int
sub
or
in
je
dec
xor
popa
or
lcall
push
xchg
push
lcall
mov
push
push
lods
push
add
mov
loopne
out
jecxz
mov
mov
ljmp
xchg
mov
stos
dec
add
xor
xor
daa
sub
pop
dec
mov
pop
ds
pop
inc
cld
inc
jne
mov
subb
pop
movsl
or
bnd
sahf
jne
dec
lea
inc
adc
lcall
cwtl
cmovo
xlat
push
roll
ficoms
push
movsl
push
mov
cmp
mov
sbb
pop
loopne
lret
sbb
push
sbb
or
adc
push
push
loope
adc
mov
repz
cs
xchg
push
jl
cmpb
stc
jo
cld
push
sahf
cmp
cltd
xchg
ljmp
xchg
mov
jo
jmp
push
mov
jecxz
dec
sbb
push
fcoms
stos
sbb
int3
inc
fimull
pop
lea
push
xor
mov
sbb
cmpsl
scas
repz
push
lea
int3
andb
add
pop
mov
mov
and
or
loopne,pt
repnz
imul
mov
xchg
sbb
outsb
addl
ds
and
jne
inc
repnz
cmp
mov
xchg
loop
insb
iret
int3
sbb
xchg
cltd
outsb
xor
rcll
jns
shr
jmp
popa
xchg
outsb
pop
sub
push
cmp
jno
mov
in
jg
add
push
adc
fstl
out
sub
testl
push
adc
adc
mov
dec
sti
mov
mov
push
subb
adc
cmp
sbb
cmp
cmp
jno
inc
mov
jne
jo
cmp
loope
pop
adc
mov
in
fsubl
xchg
iret
outsb
cwtl
cmpb
int
std
xchg
iret
dec
mov
sbb
jmp
mov
int
ss
negb
push
sbb
es
je
out
add
cmp
notb
jae
movsl
ja
hlt
in
add
push
stos
mov
shrl
mov
ja
mov
push
sub
add
sbb
pop
adc
insb
popa
inc
jg
iret
pop
pop
cmp
out
mov
loope
insb
test
repnz
movsb
cmp
enter
jl
jp
xchg
jne
in
data16
aas
sub
jge
out
add
pusha
int3
jnp
into
mov
sbb
in
fwait
sub
shl
push
addl
ret
orl
sar
repz
xlat
jecxz
or
add
jle
and
sahf
or
xchg
ds
clc
in
cmpsl
cli
push
subb
das
sbb
mul
ret
test
mov
push
and
addb
pop
shlb
fbld
ret
imul
adc
outsl
mov
adc
sbb
mov
mov
inc
dec
jno
sub
ror
mov
int
cli
or
and
adc
pop
mov
xchg
int3
das
mov
jp
push
add
and
dec
xor
mov
xor
aam
pop
popa
stc
cmp
jb
rorb
cmp
cmpsb
addr16
ds
mov
ret
sahf
jl
jg
in
lods
lret
dec
ret
sbb
out
popf
jmp
scas
ss
adcb
cmc
mov
push
and
fisttpll
adc
cmpsl
xchg
int
or
in
jmp
jge
mov
in
inc
sti
inc
ficomps
movsl
push
lret
sarl
fsub
mov
aas
cmp
cli
fadd
lret
fld
pop
jo
cmp
inc
push
fucom
fiaddl
arpl
mov
or
popa
mov
cmp
push
sub
fs
mov
aas
mov
lret
jb
clc
outsb
int
imul
call
hlt
cltd
add
lret
dec
fistps
add
es
test
push
pop
aas
in
adc
mov
gs
stc
sbb
in
push
push
add
xor
xor
sbb
dec
arpl
inc
or
sbb
xchg
and
inc
sbb
divb
jns
add
repnz
xor
insl
dec
mov
mov
rorb
aad
pop
sub
jns
xor
dec
xor
dec
and
hlt
sarb
std
test
inc
mov
clc
adc
aam
movsl
lods
repz
mov
pop
mov
icebp
loop
pushl
out
sub
mov
aad
push
in
js
xchg
js
cmpb
cwtl
and
test
mov
and
and
idiv
shrb
lods
into
xor
test
xchg
xor
outsl
xor
add
xchg
xchg
mov
sti
xor
push
push
repz
mov
sbb
push
sub
pop
ret
dec
andl
pop
dec
iret
inc
xchg
fists
addr16
xorb
ds
or
movsl
cltd
adc
imul
inc
cwtl
xor
jne
push
cmp
or
lcall
xchg
xchg
inc
movsl
inc
ror
sub
pop
nop
pop
mov
or
xor
xchg
xchg
lahf
es
and
pop
rcl
push
or
cmpsl
in
and
mov
mov
popf
push
gs
loop
gs
nop
dec
pop
jle
or
xor
cwtl
push
lea
rolb
xchg
mov
add
mov
dec
scas
cmpsb
in
out
push
sub
cmp
movsb
into
xchg
stc
sbb
push
add
or
and
sub
sub
xchg
dec
hlt
sahf
push
int3
pop
jns
enter
push
mov
test
imul
cmp
repz
jge
and
jp
iret
jmp
xchg
out
xchg
pushf
mov
push
or
adc
repz
mov
push
push
fs
inc
test
testl
test
fstl
jecxz
in
loop
data16
loope
mov
sub
insb
sti
mov
xor
addb
mov
daa
je
aaa
cmpsb
and
insb
dec
fsts
xlat
arpl
xchg
lea
addr16
cmp
js
fbld
cmc
in
dec
mov
pushf
jg
pop
jnp
jb
jmp
pop
test
fs
mov
or
adc
in
bound
push
repnz
mov
dec
icebp
jle
pop
jecxz
popf
out
xor
loop
jne
daa
test
jne
data16
push
mov
add
push
mov
inc
hlt
dec
mov
mov
out
inc
or
adc
std
cmp
dec
ret
xchg
je
cmpsb
lret
pop
sahf
xlat
xlat
ss
jb
jno
mov
aam
stos
jnp
call
dec
les
dec
sub
sbb
stos
imul
jp
popw
outsb
dec
xchg
sti
and
sub
in
and
loope
xorl
mov
pop
add
outsb
push
test
or
sbb
adc
pcmpeqb
lahf
xchg
xor
sbb
popa
sarb
or
sahf
fistpl
add
push
out
xor
mov
add
out
xor
pushf
and
jns
shll
popa
addl
je
into
xor
inc
jbe
in
mov
stos
loopne
dec
jle
rol
ja
icebp
jns
jns
rorl
loope
pushw
hlt
out
je
popa
pop
jns
rcrb
rcrl
dec
jecxz
das
hlt
push
inc
xor
cmc
lret
dec
scas
sti
stc
inc
cld
lcall
xor
sub
rcrb
in
imul
sub
hlt
xor
test
and
inc
dec
imul
cmp
insb
xchg
mov
stos
repz
sub
cmp
call
stc
das
dec
pusha
inc
dec
and
adc
lock
leave
mov
das
mov
lcall
mov
sarb
sub
lahf
mov
and
lret
add
inc
jge
jbe
jo
lods
out
mov
into
mov
add
test
push
add
pushf
int
xcrypt-cbc
mov
jp
or
and
jo
test
cli
outsb
ret
adc
je
mov
sbb
ss
sub
dec
xor
fcmove
in
sub
int3
inc
sahf
imul
jb
or
adc
sbb
popa
mov
sub
cltd
or
mov
mov
jo
ficoml
pop
lds
fstpl
add
pop
fadds
push
rcrl
push
cwtl
movsl
ljmp
sahf
and
push
mov
adc
xor
cmp
xor
jns
mov
push
aam
add
cmp
lret
out
ficoms
jl
or
lock
jno
cmpsl
add
pop
or
in
orb
clc
rcrb
sbb
mov
jo
aas
adc
pusha
or
mov
mov
push
push
pushf
or
adc
jo
xchg
add
popa
pop
mov
mov
repz
sub
in
fldcw
repz
sbb
icebp
push
mov
lock
adc
ds
hlt
xor
and
jp
mov
test
lds
jns
sbb
cmp
shll
mov
dec
int
int3
inc
push
lds
cmp
pushf
hlt
mov
ret
cmp
sbb
outsl
cmp
mov
adc
push
in
mov
cli
push
dec
add
lods
outsl
xlat
pop
stos
nop
sbb
cmp
movsb
mov
cmpsl
rcll
rclb
loopne
push
mov
lea
push
fiadds
outsl
movsl
push
fcmove
fstps
mov
mov
mov
push
aaa
lahf
sti
movsb
mov
or
cmpb
aam
xchg
ret
jnp
dec
jnp
mov
pop
lahf
push
jle
lret
dec
and
sub
pusha
sub
mov
out
jnp
inc
and
jmp
jecxz
dec
or
es
ret
lods
movsb
andl
out
mov
out
testb
mov
jmp
push
sub
sahf
xchg
cltd
jecxz
insl
cli
fs
xor
test
int3
dec
cwtl
xor
mov
cmp
sbb
js
jp
loope
ret
push
orb
stc
insl
icebp
hlt
mov
dec
adc
add
adc
cmp
adc
cld
mov
aaa
testb
jle
ljmp
push
or
mov
mov
dec
inc
ret
popf
add
and
mov
sbb
jne
stos
inc
pop
and
dec
aam
push
lds
add
push
push
sbb
pusha
fidivs
sbb
pop
test
aam
rol
jae
aas
lock
cmp
hlt
or
inc
fld
xchg
cmp
fimull
ja
clc
lods
sub
out
pushf
das
sub
mov
inc
push
in
popa
insl
sbb
fsubs
xchg
push
cmp
jp
pop
pop
mov
aad
int
repz
mov
in
xchg
cmpsb
cmp
dec
xor
sbb
imul
mov
sub
lods
scas
mov
cmp
push
and
out
cltd
movsb
ss
es
xorb
into
mov
nop
insl
in
sbb
mov
mov
int
outsl
sbb
or
xchg
js
lahf
cwtl
dec
sub
jo
push
xchg
dec
sub
and
push
jmp
insl
fisubs
push
sub
ss
jnp
popf
sti
or
xlat
mov
ja
or
and
dec
push
add
sahf
push
jmp
or
clc
mulb
repnz
aas
push
lea
movsl
std
or
inc
pop
mov
scas
inc
dec
xchg
sub
cli
and
cli
xor
into
aad
pop
les
or
pusha
lds
mov
mov
scas
add
adc
cmp
or
and
lcall
je
loop
int3
dec
clc
rclb
xlat
fists
jns
imul
sub
or
pop
mov
xchg
sbb
sub
lcall
mov
sahf
jmp
sbb
push
sar
test
or
mov
push
xchg
mov
xchg
push
add
out
push
out
push
mov
fadd
insl
mov
idivl
push
js
dec
push
bound
mov
sbb
ljmp
and
push
test
fiadds
xchg
cmp
neg
sti
test
fs
or
popf
mov
mov
test
add
fsubrl
mov
pop
nop
movsb
sbb
sbb
pop
jmp
push
out
add
lock
adc
pushf
xlat
or
mov
or
rcrb
aas
lods
outsl
push
xchg
xchg
cmpl
cmp
cmp
outsl
movsb
popf
mov
pop
or
sub
xchg
fcomi
shl
popf
divl
clc
push
mov
je
lcall
bound
aas
pop
pop
jae
xor
or
sbb
divl
jecxz
cmp
fldenv
aam
shll
pop
mov
lds
pusha
ret
hlt
pop
test
mov
adc
xchg
push
lods
mov
push
into
push
test
pushf
rcll
jecxz
inc
cwtl
test
stc
and
bnd
pop
pop
or
in
popf
adc
int
pop
out
out
mov
inc
mov
hlt
cmpsl
adc
repz
stos
mov
sbb
cmp
scas
pop
xchg
lods
xchg
inc
cmp
add
fcoms
mov
add
insb
push
emms
andb
xor
jl
fdivs
sbb
xlat
cmpsb
or
loopne
pop
pop
adc
mov
add
idivb
add
xchg
imul
cmovbe
imul
add
push
push
in
pusha
daa
frstor
and
jecxz
adc
pop
imul
filds
pushf
sbb
cli
sbb
inc
or
inc
test
or
data16
lods
mov
sub
jl
adc
stos
xlat
jno
aad
jp
leave
test
incl
and
or
xor
mov
or
cs
test
jno
pop
mov
lods
pop
inc
int3
roll
pop
and
cmp
outsb
xchg
xor
xlat
xor
cmp
sbb
dec
loop
mov
movsl
mov
imul
fstpt
jg
adc
rcr
xchg
pop
xor
jb
dec
dec
pop
and
sub
fbld
add
or
push
in
imul
ficompl
pushf
add
fs
sbb
into
sbb
les
cmpsb
sbb
adc
push
cmp
cld
inc
arpl
outsb
pusha
pop
cltd
flds
popf
jg
cmc
adc
xor
mov
mov
scas
adc
add
aas
mov
inc
stc
icebp
imul
sbb
push
lods
pop
pop
mov
das
or
dec
loop
mov
and
cmp
icebp
adc
mov
cmpsl
data16
int
push
inc
bswap
insb
mov
jns
pop
cli
repnz
insb
sub
and
ret
xchg
xchg
lods
push
js
inc
xchg
add
fisttps
imul
div
lcall
iret
add
in
inc
mov
add
dec
jne
test
ficoml
outsb
ret
inc
outsl
ret
movsl
push
mov
xchg
rcr
push
jnp
lret
sbb
pushf
icebp
movsb
adc
js
xorb
in
in
or
and
imul
xchg
call
ja
das
pop
mov
push
lods
enter
sarb
mov
mov
repz
mov
mov
jnp
xor
cmpsb
js
ss
sbb
xor
fildll
cltd
lds
les
test
lea
fistpl
cmp
jmp
out
inc
leave
mov
test
adc
push
in
repz
hlt
add
push
xchg
mov
lret
imul
addr16
and
mov
pop
scas
pop
icebp
shll
sbb
popa
lds
and
mov
gs
mov
dec
daa
pusha
mov
ret
fdivs
ror
ret
insl
dec
and
and
and
es
push
pusha
jge
mov
jp
out
mov
cmp
pop
xchg
jl
mov
push
xchg
or
jl
mov
aas
fwait
xchg
inc
mov
xchg
in
sbb
aas
jo
push
shrl
inc
lock
xor
mov
mov
imul
sub
xchg
xor
or
pop
stos
repz
enter
and
cmpsl
dec
xlat
cs
call
xchg
or
sub
int3
lds
xchg
lock
in
adc
lock
mov
inc
or
ret
testl
aaa
inc
test
cmpsl
cmp
inc
sub
mov
mov
adc
lods
sub
rcrb
fnstenv
lea
addr16
and
lods
js
outsb
or
cmpsb
add
mov
mov
mov
test
shll
daa
xor
shr
xor
dec
sub
lcall
cmpsl
xor
mov
push
jecxz
adc
mov
movsl
cmp
jmp
test
xor
shrb
insb
iret
outsl
insl
or
iret
and
scas
pop
push
xchg
pop
and
mov
not
xor
xchg
inc
inc
fimuls
orl
clc
cmp
jge
sbb
mov
push
out
jae
in
pop
loope
rcr
dec
js
stc
sbb
mov
cmpsl
mulb
jg
outsl
jg
lock
test
je
call
nop
fwait
cmpl
test
push
scas
adc
outsb
cmp
pushf
or
outsl
xor
shlb
js
xor
popa
xchg
cmp
fucomi
aam
cmpb
mov
inc
dec
sub
fistpll
xchg
popf
sbb
dec
call
mov
xchg
lea
mov
ret
mov
cmp
and
mov
les
push
sbb
cmpb
inc
sub
or
in
cs
cmpsb
xchg
mov
pop
mov
add
xor
jg
stc
mov
jle
rcrb
cmp
mov
test
cwtl
mov
rcll
or
xor
test
insl
mov
add
sub
or
das
aad
or
repz
sub
cmpl
lahf
sar
push
and
pop
sbb
adc
mov
mov
inc
push
xchg
rcrb
cld
je
adc
aad
out
pushf
mov
pop
cmpsb
and
dec
cmc
fdivrs
xlat
popf
lods
mov
es
push
add
xchg
dec
xchg
jp
cld
push
ja
cmpsl
daa
sub
fwait
xchg
scas
push
aad
ljmp
je
pop
pop
adc
rclb
pop
vmwrite
dec
xchg
enter
fdivs
jns
shlb
mov
and
cmc
add
leave
inc
scas
rcrb
bound
dec
mov
xchg
xor
mov
add
negb
popa
xchg
pop
fsubr
int3
shlb
lods
sub
cli
incb
int
in
cmp
bound
inc
leave
fs
sbb
mov
inc
mov
mov
fwait
push
leave
dec
iret
jle
jp
repz
leave
pop
mov
call
into
test
xlat
inc
out
outsl
andb
jecxz
jmp
or
mov
test
aam
push
cmc
into
stc
pop
xor
sub
mov
jmp
mov
mov
push
shlb
pop
loopne
dec
adc
add
nop
test
cmp
or
and
adc
enter
out
jae
pop
jno
xor
cs
xchg
jb
pop
jnp
int3
and
dec
xor
and
xchg
jbe
lods
dec
xor
cmp
sar
cld
push
movsb
imul
insl
pop
mov
jo
sub
sub
cmp
add
loope
xchg
or
sub
xchg
fdivp
cltd
es
xor
or
repnz
scas
shrl
jne
xor
imul
out
mov
cltd
inc
fidivl
or
mov
or
mov
sub
aas
inc
test
dec
aad
arpl
dec
sbb
dec
push
aam
adc
mov
cwtl
dec
stc
dec
std
icebp
lock
out
sbb
sub
inc
aas
test
in
adc
mov
mov
jne
mov
pop
lea
movsb
outsb
in
rclb
out
cmp
cltd
outsl
jnp
fsts
jno
pop
pop
sbb
divl
inc
jg
stos
xchg
xor
pop
xchg
fwait
in
inc
mov
ds
jb
lea
mov
xchg
push
xor
fnstcw
sbb
xchg
adc
enter
mov
xorb
lea
cmp
mov
sub
pop
gs
jp
sahf
ljmp
push
jg
ds
xor
cwtl
gs
sbb
movsb
gs
cmp
or
data16
mov
scas
push
hlt
sub
sbb
push
dec
mov
cmpsl
pop
clc
hlt
shr
daa
add
jbe
xor
push
mov
jge
pop
adc
int
xchg
jno
push
and
popa
jp
fwait
sub
add
xor
test
aas
inc
jmp
dec
push
xchg
xor
push
pop
int3
mov
push
jnp
stos
xchg
sub
repz
add
adc
lcall
aas
sub
lods
neg
adc
insl
iret
push
cmp
add
xor
mov
pusha
xchg
fwait
push
and
add
testb
iret
add
loope
xlat
cmpsl
mov
jns
sub
mov
loope
mov
popf
orb
bound
mov
lret
push
push
xchg
loop
mov
pop
push
push
lods
or
rorl
xchg
stc
jmp
stos
dec
pusha
add
adc
negl
cli
inc
in
sub
fdivrl
incb
cmp
xor
mov
js
enter
adc
push
jnp
data16
adc
into
ljmp
lods
mov
xor
cmp
pop
jmp
stos
daa
push
pop
cmovbe
jno
fldl
push
pop
fdivrs
pop
ds
mov
lds
aas
and
mov
or
add
and
push
cmp
xchg
lods
aam
jle
sub
dec
push
adc
adc
or
and
mov
fcoml
sub
scas
repnz
popa
into
add
mov
dec
data16
leave
sbb
jo
push
cmp
fcompl
sti
jp
outsb
cld
xchg
push
repz
enter
outsb
cmp
add
sbb
pop
add
xchg
mov
mov
and
cmp
mov
imulb
cmpsb
lcall
sbb
adc
xor
test
outsl
sbb
notl
mov
inc
ja
push
fst
cmp
inc
add
leave
and
add
lahf
cmp
movsl
test
jle
lock
cmc
pop
sbb
dec
sahf
push
int
and
mov
push
xor
outsb
flds
dec
addl
rcll
fimull
or
flds
sbb
cld
outsl
sti
out
lahf
xor
popf
xorb
jb
icebp
push
call
ja
mov
sub
hlt
pop
mov
rcrb
sub
cmp
dec
cld
add
dec
cmpsb
jg
arpl
addr16
inc
mov
inc
in
and
daa
mov
or
inc
jae
xchg
imul
arpl
scas
add
mov
repz
pop
cmpsb
push
mov
jecxz
insb
fsubrs
mov
lahf
push
push
inc
pop
ret
cwtl
les
xor
into
dec
into
sub
add
lcall
xchg
xor
out
pmaxsw
movsl
xchg
adc
sahf
jle
xchg
mov
fcomps
pop
xlat
outsb
and
jne
sarl
xor
adc
xor
cmp
incb
daa
popa
lcall
mov
adc
divb
mov
loope
jg
std
mov
adcl
xchg
cmp
sub
xor
dec
cmp
xor
into
mov
mov
xchg
aad
mov
push
cmp
adc
stos
outsl
sub
or
cmpsl
std
sbb
mov
dec
in
subl
cmp
je
xchg
inc
dec
ficomps
jo
inc
push
jmp
mov
data16
sbb
subb
int3
ret
cmc
inc
mov
clc
mov
fs
fwait
sub
inc
jg
rcll
inc
lods
jecxz
xor
xor
aas
pop
xchg
mov
loopne
and
test
mov
push
aas
mov
dec
icebp
jo
inc
sbb
shll
sti
sbb
push
clc
mov
jp
std
bound
adc
xchg
fmulp
es
int3
and
or
iret
fmulp
daa
jno
sub
dec
pusha
cli
jmp
xchg
xchg
jg
inc
sbb
mov
sbb
test
mov
adc
or
adc
xor
jns
fs
xchg
loop
sbb
xor
mov
mov
jo
jp
ljmp
mov
jnp
loopne
loopne
and
cs
movsb
rorb
jno
loopne
xor
cs
mov
mov
sti
outsl
outsl
cmp
pop
ficompl
and
pop
add
mov
push
bound
lods
pop
dec
jne
mov
leave
filds
stc
and
adc
xchg
mov
call
mov
lcall
rolb
jns
orb
shrl
lahf
out
lods
xor
loopne
xchg
pop
jge
dec
pop
mov
leave
lret
and
das
int3
jg
mov
stos
fimuls
test
add
leave
sub
fsubs
sub
pop
cld
adc
dec
sbb
push
xor
cmp
mov
pop
mov
xchg
std
cli
sbb
fsubs
mov
mov
mov
outsb
and
jg
das
inc
dec
into
adc
aaa
dec
inc
mov
call
rcl
pop
in
dec
and
sbb
aad
jl
cmpb
push
xor
mov
mov
je
lahf
scas
ret
jge
inc
xor
int
loope
rol
or
sbb
dec
je
daa
mov
lcall
fimuls
in
out
cwtl
and
jbe
jns
xchg
outsb
in
mov
jbe
jns
push
idiv
repnz
sti
ljmp
sbb
add
mov
dec
add
mov
xor
xor
hlt
into
pop
jl
cltd
negb
hlt
icebp
jns
or
dec
push
push
hlt
or
mov
imul
mov
repz
push
mov
dec
cmp
push
aaa
imul
lret
lods
jg
mov
mov
xchg
cmp
es
dec
dec
cld
pop
bound
fwait
cmp
icebp
outsl
jg
mov
jo
xor
cmp
and
push
pop
shlb
mov
popf
enter
cmpsl
jns
imul
cltd
fdivr
adc
dec
cli
cld
ja
xor
ret
pop
and
gs
iret
movsl
and
cmp
out
mov
push
in
int3
jns
mov
push
in
leave
add
push
shll
mov
mov
lock
jge
jle
xchg
rcll
jecxz
notl
pop
cmp
sub
fcmove
into
lahf
pop
jle
gs
and
pushf
jle
lret
mov
das
loope
out
lds
dec
xor
mov
in
loopne
shrb
call
and
mov
jp
scas
dec
sbb
mov
or
pop
pop
dec
push
mov
leave
pop
push
nop
push
daa
std
mov
adc
cltd
mov
xchg
dec
sub
pop
cmpsb
in
mov
cmp
adc
and
and
cli
fisttpll
daa
mov
jg
push
push
test
fcmovnu
mov
pcmpeqd
in
cltd
test
push
mov
mov
fstpl
pop
scas
popf
cltd
pop
pop
popf
into
insl
subl
outsl
dec
hlt
sub
mov
mov
popa
dec
dec
roll
sbbl
test
inc
sbb
cs
inc
adc
imul
mov
jae
insl
and
jne
push
sub
push
repnz
sti
lods
add
out
add
cmpb
fnsave
test
mov
jnp
jg
sub
pop
push
into
dec
fisubrs
cmp
mov
scas
mov
pop
mov
arpl
push
in
xchg
cmp
addr16
fdiv
leave
add
xor
add
adc
push
loopne
inc
sahf
sbb
mov
mov
call
cmc
pop
mov
leave
loop
mov
sub
fisttps
cmpsb
inc
inc
mov
mov
inc
rcl
jns
add
mov
sub
mov
movsl
cmp
sarl
mov
jp
inc
and
out
daa
aas
divb
lret
pop
xor
clc
mov
push
sbb
mov
jge
iret
lea
cmp
xor
fs
add
je
sub
int3
inc
jns
push
inc
in
add
into
push
ret
loopne
je
test
test
pop
xor
movsb
stos
add
arpl
pop
call
mov
fistl
sbb
stos
lea
jne
or
in
sbb
lcall
mov
mov
movsl
cmc
test
test
add
fs
jo
lods
cli
fs
mov
idivl
jmp
data16
js
js
lahf
mov
xchg
xchg
hlt
aam
rcr
out
aaa
xor
shrb
lock
mov
xor
xchg
jae
and
adc
fildl
inc
test
clc
cmpsl
adc
pop
notl
mov
mov
cmp
push
or
rclb
mov
mov
pop
adc
sub
xchg
cmp
xchg
clc
rclb
lods
jno
mov
rol
in
sub
repz
data16
mov
pop
into
test
sub
xor
and
hlt
jg
sbb
or
lea
mov
cmp
jle
inc
aas
push
mov
sahf
dec
repnz
jb
stc
xchg
sbbb
fsubl
outsl
rcll
insb
hlt
std
ret
adc
icebp
jb
fisttpl
clc
jb
aaa
cmpsb
dec
push
shll
sbb
xchg
bnd
ds
addr16
pop
fsts
pavgb
cmc
sub
stos
setge
cmp
sub
popa
and
sbb
ret
stos
sub
jno
in
xor
popf
or
cli
inc
adc
int3
add
mov
cmc
int3
loope
mov
sub
add
ljmp
jnp
dec
sub
mov
int
scas
scas
jns
pop
test
mov
dec
cld
rcll
int
dec
cmp
pop
xor
mov
add
cltd
jnp
inc
mov
jo
popf
scas
fptan
cmpsb
mov
inc
mov
pop
mov
push
loop
push
cmpsl
mov
add
shll
into
fwait
cmpsl
sbb
lods
xor
adc
sub
or
xchg
xchg
fistpl
mov
les
sti
test
outsb
lods
lret
mov
xchg
cmp
les
xchg
mov
inc
imul
aas
or
popa
pop
mov
mull
ret
mov
fldenv
loopne
idivl
fists
repz
pop
andl
push
icebp
mov
push
jp
sub
out
sbb
inc
imul
add
jnp
cmc
aas
push
mov
push
and
push
mov
adc
dec
and
push
mov
mov
mov
or
sbb
mov
repz
sub
mov
lcall
xchg
xorl
mov
imul
or
mov
pop
fimull
dec
mov
sub
jmp
fistpl
imul
mov
aas
pop
mov
cli
jp,pt
arpl
andl
sti
add
repnz
daa
mov
pop
jno
mov
int
fwait
and
shlb
adc
and
shlb
dec
sbb
lret
cld
inc
inc
cmp
add
cmpsb
fdivrp
jnp
stos
mov
or
outsl
pop
lahf
lahf
outsb
and
sbb
fimull
xchg
cmpsl
and
lods
fldt
and
mov
lcall
out
jge
mov
xor
test
xchg
inc
push
sbb
pusha
sbbl
pop
pusha
mov
scas
cltd
sbb
aad
cmpsb
int3
ljmp
jecxz
sub
cmp
icebp
dec
lahf
movsl
mov
add
adcl
cld
dec
cmp
aam
hlt
hlt
popf
jp
or
pop
into
lods
push
jle
inc
fidivl
inc
lods
jns
inc
and
fldl
cmc
sub
inc
out
sub
fs
data16
in
repnz
or
pop
jge
push
outsl
subb
push
push
movsl
cmpsb
pushf
xor
mov
fdivr
jge
in
repnz
orb
mov
mov
lret
adc
xor
dec
adc
gs
sbb
mov
das
sub
and
dec
cmpsb
sub
sub
mov
cmp
ret
ret
hlt
add
inc
std
sbb
in
filds
and
jne
fbstp
push
mov
scas
stos
out
and
xchg
sub
ja
or
cld
push
mov
xchg
mov
xchg
push
mov
mov
xor
dec
repz
mov
mov
imul
mov
or
mov
sub
scas
gs
dec
xchg
decb
cmp
sbb
xor
in
bound
mov
loope
in
mov
stc
repnz
stos
fdivl
sub
out
push
dec
pusha
dec
sub
into
cmp
outsl
js
in
aam
inc
js
inc
sbb
pop
es
cs
mov
inc
iret
push
or
imul
push
sub
stos
sbb
rolb
push
leave
cmp
clc
push
les
jb
fcoml
add
mov
std
enter
lret
xchg
sarl
roll
nop
sbb
mov
mov
std
jns
dec
fimull
mov
mov
xchg
xchg
orl
dec
push
pop
icebp
nop
push
rorl
mov
into
jmp
inc
lahf
inc
or
pop
outsl
xor
cli
fwait
inc
mov
adc
inc
movsb
mov
outsb
in
add
jg
sbb
xor
sbb
ss
push
xlat
mov
pusha
test
pop
jp
scas
and
rorb
or
sti
xchg
pusha
js
fmul
or
jnp
inc
call
es
adc
mov
call
addb
ss
or
xor
ds
movsl
shlb
jns
pop
pop
les
aas
push
out
jo
and
mov
push
mov
imul
test
femms
rcrl
and
sub
and
jae
jp
cmpsb
dec
jecxz
sti
jecxz
xchg
mov
idivb
inc
adc
xchg
mov
mov
mov
imul
push
rcr
stos
mov
sbb
sub
nop
pop
jle
jnp
imull
push
icebp
xchg
push
dec
jb
scas
out
add
xchg
xor
or
leave
lock
cmpb
add
je
xchg
jns
inc
mov
dec
shlb
sub
cmc
imul
sub
dec
jo
inc
mov
ret
mov
xorb
inc
mov
mov
clc
fldt
sub
add
stos
dec
popf
jnp
jne
cli
aaa
fsubrl
ret
out
push
add
rcrl
cltd
adc
sbb
cld
xor
sbbb
bound
mov
add
out
aad
xchg
push
mov
into
inc
enter
je
inc
in
push
out
popa
lds
sbb
scas
shl
or
clc
andl
fwait
lods
dec
dec
mov
xchg
loopne
mov
scas
test
ss
clc
mov
mov
stos
test
fisubrl
std
xchg
or
sub
inc
jo
xor
adc
call
dec
add
ficompl
cmpsb
popa
orl
std
xchg
addr16
les
push
mov
xchg
loope
outsl
sar
adc
pop
lds
andb
push
pop
or
add
inc
call
sbb
cmp
add
pushf
andb
inc
jecxz
test
xchg
test
insb
subps
addr16
addr16
mov
pop
aad
dec
stc
add
sbb
sbb
sbb
jge
inc
outsb
loopne
add
int
adc
push
test
loopne
mov
jle
jne
nop
out
inc
cmp
mov
mov
aad
jno,pt
add
or
mov
ljmp
xchg
push
fldl
cwtl
push
mov
xchg
push
jge
fistpl
xor
mov
roll
xorl
xor
mov
jle
sub
movsl
ds
or
enter
mov
sub
int
ret
mov
xor
jbe
test
dec
dec
gs
cmp
pusha
push
jge
sub
sub
push
data16
sub
jb
inc
mov
arpl
sahf
in
pop
cmp
roll
cwtl
loope
aas
clc
jno
mov
xchg
cmpsl
test
aam
loopne
inc
sbb
inc
adc
outsl
pop
ljmp
adc
daa
add
xchg
cmp
push
or
shlb
ds
sbb
mov
mov
popa
add
mov
push
push
in
hlt
in
iret
loope
pop
insl
in
dec
test
sti
mov
dec
lahf
lods
repz
cmp
inc
dec
xlat
mov
jno
add
je
shl
jecxz
cmp
scas
sub
cs
sarl
add
sbb
pop
inc
and
out
loop
jge
sub
jnp
rcrl
pop
sbb
hlt
mov
insl
imulb
xchg
filds
xchg
daa
lds
and
imul
cmpsl
nop
xlat
sub
je
jge
shl
pxor
das
fdiv
push
stos
mov
inc
xchg
pop
jne
inc
cmp
and
out
cmpsb
call
xor
subl
mov
lock
adc
cs
fidivs
loopne
out
lret
in
adc
fimuls
fistpll
xchg
lcall
sub
adcl
sub
jno
or
sbb
mov
outsl
ret
pop
adcb
cltd
loopne
ss
cmp
rcrb
fsubl
mov
mov
aaa
lret
test
mov
fwait
into
jne
xor
outsb
aam
dec
adc
testb
ja
int3
fnstenv
push
lock
cmpsb
daa
mov
clc
out
lods
loop
imul
mov
mov
outsb
or
mov
leave
inc
imul
adc
adc
sub
test
sbb
push
lock
mov
mov
jmp
jo
sahf
or
and
mov
cli
and
jge
scas
outsl
int
clc
popf
adc
mov
mov
out
dec
adc
xchg
sub
push
jge
fyl2x
pop
adc
pop
cmp
stos
mov
lods
xor
in
xlat
add
repz
lret
mov
ds
mov
loope
xchg
push
call
sbb
inc
cld
pusha
sarl
stc
pop
shll
les
push
pushf
mov
pushf
call
out
xchg
icebp
inc
sub
pop
in
jge
xchg
lock
fwait
ret
or
cmpsb
ret
sub
lods
test
pop
inc
xor
stos
fldenv
xchg
dec
pop
clc
shrl
xorb
adc
or
push
mov
in
add
popf
scas
mov
jle
push
in
cmc
jbe
cli
out
dec
cmpsb
or
in
jp
test
xor
jge
out
inc
repz
push
mov
jo
pop
or
cmpsb
push
xchg
and
in
pusha
roll
adc
rorl
mov
cli
or
mov
call
out
rorb
xor
and
movsl
ljmp
or
inc
stos
arpl
inc
mov
mov
adc
push
cmp
shl
or
xor
xchg
pop
icebp
fiaddl
push
mov
outsb
rcr
mov
lret
fistps
jne
dec
repz
mov
or
xor
sbb
pop
rolb
sbb
outsb
add
hlt
sub
ds
mov
test
xor
mov
cwtl
dec
imul
lea
addl
cld
fs
add
or
cmp
sarb
cmp
pusha
cmpsb
xchg
loope
xchg
pop
cltd
sbb
xchg
clc
jl
cmp
or
icebp
sarl
sub
pop
fstl
nop
ret
out
add
ss
pop
mov
cwtl
into
xchg
lods
lods
fsubrs
mov
and
jge
mov
mov
lods
repz
push
xor
movb
mov
pop
fstps
mov
inc
adc
fs
scas
scas
xbegin
in
scas
pop
test
xchg
mov
xor
enter
inc
sbb
adc
push
xchg
aam
add
xor
and
cmp
sar
test
jecxz
ret
pushf
add
fdivs
push
xchg
shrl
fisubl
xchg
cmp
inc
popf
mov
gs
in
or
cmpsb
xchg
adc
mov
or
mov
sbb
or
inc
jo
xchg
jge
sti
dec
subl
xlat
pop
fsubr
shlb
lret
fmulp
lcall
test
outsl
xchg
daa
in
fdiv
fwait
out
pop
mov
ret
mov
or
lods
xor
cmp
or
xchg
arpl
imul
nop
mov
cmpsb
jmp
xchg
jg
ret
jmp
bound
movsb
fnstcw
sahf
call
out
shrb
lcall
out
adc
sub
push
popf
and
stos
jbe
dec
js
push
mov
arpl
push
int3
or
lods
cmc
sbb
cmpsl
stos
jb
fmuls
mov
xor
insb
add
insl
jmp
repz
loopne
add
jno
sbb
dec
or
cmp
dec
cmc
jge
out
stos
and
mov
cmp
ret
cs
sbb
js
mov
lret
sub
and
cmp
inc
lcall
and
xor
sub
fs
testb
mov
add
popa
pop
and
pop
sbb
lods
aad
adc
test
push
jb
loopne
xor
mov
iret
hlt
nop
sub
lret
xchg
nop
jle
ja
shl
inc
les
les
mov
shlb
jb
push
outsl
push
out
push
adc
adc
test
push
sub
push
stc
std
cmp
or
add
or
mov
ljmp
cmp
mov
into
testl
xchg
adc
mov
push
lds
in
loope
fcomip
arpl
inc
je
ja
adc
inc
dec
out
stc
mov
inc
dec
int3
std
and
xchg
pop
fstps
es
out
test
lcall
push
rcrb
or
dec
cli
ffreep
mov
rorb
mov
and
rcr
ljmp
jp
out
or
and
sub
and
stos
dec
or
push
add
dec
and
add
mov
xor
sbbb
jns
mov
cmpsb
sub
daa
popf
ds
es
sahf
sub
out
cmp
mov
shlb
nop
sbb
xchg
push
cmp
divl
mov
pop
sub
stos
test
mov
push
fisubrs
or
push
ret
jae
xchg
fcompl
dec
outsl
mov
les
mov
sti
popf
sub
in
add
test
ss
jnp
lods
or
mov
adc
ret
inc
imul
lret
pop
pop
mov
xlat
xor
call
stos
dec
xor
out
aas
pop
ljmp
test
xchg
out
mov
cwtl
imul
cld
out
sbb
and
jne
or
mov
loopne
xor
aaa
out
outsb
xor
cli
test
loopne
mov
dec
sub
sahf
test
call
outsl
pop
sarb
jmp
mov
pop
in
jle
bound
jg
scas
inc
pop
test
mov
std
data16
int3
outsb
xor
cmp
mov
fbstp
aam
das
mov
sub
cwtl
loopne
jb
shll
xor
shrb
xchg
and
xor
sarb
hlt
sub
fwait
and
insb
idivb
out
jmp
jl
sub
pushf
leave
and
fdivrl
loopne
xor
sbb
nop
mov
dec
xor
movsl
jae
fnstenv
jbe,pt
pop
mov
jno
sbb
sbb
or
pop
les
xchg
mov
insb
sub
test
es
shll
lods
fs
aas
xor
jnp
std
mov
jae
jne
lret
insb
mov
or
and
repz
sbb
dec
test
insb
xor
or
jne
cmpsb
fs
lea
xchg
and
ficoml
loop
dec
dec
pop
adc
fistpll
cmc
mov
dec
shl
jne
ret
and
icebp
mov
jge
fmuls
adc
push
lret
pushf
lods
mov
or
lea
push
pop
popf
jbe
and
add
jnp
mov
cmp
and
int3
imul
adc
sbb
cwtl
cltd
addb
inc
fidivs
leave
imul
clc
shrl
cmp
lea
mov
loopne
jl
scas
popa
and
bnd
bound
out
out
sbb
addr16
push
ss
cmp
cmpsb
sbb
push
repz
xlat
fmull
fisubl
nop
ss
insl
addr16
sbb
push
jg
mov
shlb
jp
dec
cmp
imul
sub
bound
inc
mov
add
inc
mov
loop
xor
sbb
repnz
decl
jae
in
in
xchg
lods
xor
bound
push
inc
adc
hlt
push
loop
inc
outsb
sbb
movsb
push
inc
test
or
sbb
js
addr16
adc
add
js
daa
insl
mov
mov
int3
int
cmp
divl
adc
or
aam
fwait
aad
lock
scas
test
mov
inc
imul
or
mov
add
and
bound
fnstcw
lcall
push
cmc
lods
pop
inc
popa
lahf
stc
cmp
and
cld
adc
push
xor
shll
and
and
cmp
jno
js
stos
pusha
inc
xchg
pop
test
dec
xchg
outsl
or
ret
sbb
mov
push
and
enter
add
stos
insb
mov
scas
dec
push
aas
xchg
pop
pushf
mov
inc
mov
in
into
loopne
add
lea
test
sbb
hlt
jns
movsl
adc
adc
inc
fyl2xp1
sahf
insl
aam
hlt
pop
cs
or
insl
cwtl
and
adc
push
loope
xor
cmp
add
push
cmp
aam
enter
pop
cmp
and
neg
xor
js
xchg
aam
xchg
adc
fmull
clc
xor
ficoml
mov
push
push
repnz
mov
mov
or
add
xor
ffreep
push
ret
mov
and
lret
jbe
jno
int3
mov
add
inc
lahf
in
add
test
nop
pop
cli
incl
movsl
pop
lcall
jnp
xchg
pop
jae
pmaxub
dec
or
add
cmp
push
sbb
pop
je
mov
push
outsl
adcl
leave
movb
inc
call
adc
and
lods
sub
sbb
xchg
or
roll
int3
je
jne
pop
adc
mulb
adc
test
test
cmpsl
popl
fcompl
test
lods
fisubrs
cmc
dec
insl
ja
xchg
bound
lahf
push
xchg
popf
in
push
push
mov
or
pop
rorb
jg
scas
pop
inc
lods
mov
cmp
nop
icebp
lea
rcll
out
es
dec
push
or
into
ja
pop
mov
out
test
xchg
ret
mov
push
mov
fwait
or
lret
sub
addb
imul
push
push
pusha
mov
fwait
mov
call
aas
mov
dec
jns
jp
aam
xor
xchg
dec
push
iret
fucompp
aas
mov
xor
repz
lds
jle
in
dec
push
ss
pop
mov
xchg
mov
adc
sbb
ret
or
lea
mov
pushf
xchg
dec
addr16
stos
adc
push
xchg
addl
in
lret
lahf
mov
loopne
je
cltd
inc
xchg
enter
cmpb
enter
cli
out
mov
out
or
outsl
mov
dec
ret
lea
test
out
icebp
lods
sub
cmp
adc
xchg
jbe
jb
insl
adc
ljmp
push
test
add
cmp
popa
push
arpl
stos
mov
pop
adc
adc
mov
hlt
push
je
mov
fsts
int3
shl
and
push
bound
mov
imul
jae
testl
fistpl
fsubrs
inc
rcl
insl
cmpsb
xor
mov
daa
xor
adc
daa
jb
or
xorb
and
pop
ret
stos
idivb
cmc
mov
bound
mov
hlt
ja
out
jmp
dec
bound
cld
sub
hlt
cmp
pop
decb
sub
ljmp
iret
xchg
int3
pushf
xchg
stos
mov
data16
jne
imul
inc
xchg
das
push
dec
daa
arpl
loopne
dec
pop
xlat
clc
sbb
and
jge
push
in
jne
push
pop
stos
or
jae
jbe
xor
push
inc
xchg
mov
test
xor
mov
pop
xchg
fwait
cld
mov
jne
pop
and
xor
mov
nop
aad
ret
cmc
hlt
in
pop
mov
mov
loope
jle
xchg
addr16
cmpsb
mov
sbb
cmp
mov
jmp
pop
out
loope
jmp
inc
mov
cwtl
ds
add
cmpsl
mov
sub
fs
xor
adc
cmp
aad
enter
sbb
adc
jae
dec
push
add
rol
push
xchg
xor
cmp
jb
fcmovb
fldcw
popf
cmp
stos
int3
out
xchg
fwait
addr16
movsb
dec
shrl
sbb
nop
hlt
repnz
jno
sbb
xor
es
adc
fadds
xchg
and
les
add
mov
jmp
adc
aas
jne
hlt
sbb
jb
xor
xor
je
cmc
xchg
iret
inc
fucom
jb
insl
scas
or
mov
cmpsb
mov
mov
sarb
lds
sbb
xor
jo
push
mov
lea
fisubl
cmpsl
pop
lock
mov
add
out
movsb
cmpsb
inc
fiadds
mov
dec
fldcw
lock
inc
dec
outsl
jecxz
movsl
mov
test
jl
stc
cs
test
mov
and
pop
sub
pop
rcll
add
int
pusha
add
in
bound
fwait
xor
in
and
lahf
fwait
dec
sub
sbb
stos
dec
inc
sbb
pop
fiadds
mov
jmp
jno
nop
cli
fstp
jbe
xchg
mov
cli
je
ret
pop
adc
jno
and
push
cmp
fsubs
adc
jp
faddp
lret
cld
loop
mov
in
lea
lods
fnstenv
cwtl
adc
sahf
mov
sahf
mov
and
fidivrs
mov
xchg
pop
jne
in
adc
xor
mov
cmpsl
sub
rcrl
push
cmp
add
push
testb
inc
outsl
jb
pop
xor
icebp
dec
aaa
mov
flds
push
jns
in
lret
xchg
mov
fadd
in
cmp
loop
xlat
adc
xchg
movsl
pop
cltd
sub
mov
shll
in
push
cmpsb
dec
push
and
enter
icebp
push
push
insl
add
scas
out
faddl
jb
test
lret
add
jns
rcrl
insb
repz
xor
jae
mov
push
jne
dec
sbb
lods
xor
pop
adcb
pop
bound
or
jbe
add
into
bound
mov
mov
dec
jbe
in
cmp
ds
in
xor
push
mov
and
inc
mov
xchg
mov
mov
xor
repnz
notb
inc
imul
stos
xchg
out
rcll
add
enter
add
and
jl
in
rorb
push
sub
cmp
xchg
imul
outsl
mov
push
imul
add
jne
jge
mov
sbb
add
fistl
lret
mov
cmpsl
inc
dec
enter
pop
sbb
int
sbb
jp
xchg
arpl
sub
add
das
push
cmp
jge
sub
stos
cmc
sbb
mov
not
mov
or
pop
dec
cld
imul
cltd
or
test
test
sub
enter
fsubrs
mov
and
and
lcall
jecxz
xor
mov
pop
fwait
imul
xor
sub
popf
inc
xlat
and
mov
imul
mov
loope
adc
xchg
add
and
cmpsl
orl
pop
adc
cmp
cltd
pop
insb
sub
sub
ja
cmp
lea
inc
mov
xor
cs
dec
sbb
mov
shl
adc
out
xchg
movsl
dec
inc
jp
mov
and
or
aas
jbe
inc
in
sbb
dec
cmpsb
pop
cmp
aas
push
out
inc
push
mov
adc
je
in
imul
mov
inc
push
test
jg
push
jecxz
cmp
push
pushf
or
clc
cmpsl
sub
adc
jl
stos
and
out
inc
insb
or
sahf
fs
jmp
adc
sub
idivb
enter
xlat
fstl
movsb
inc
and
mov
pop
mov
xor
sti
push
in
mov
adc
xor
fs
subl
pop
inc
cs
popa
lcall
jp
push
xchg
sbb
mov
test
mov
xor
clc
jmp
mov
insl
or
rolb
push
xor
push
je
push
pop
cmc
jmp
jmp
hlt
push
andb
icebp
sbb
sub
test
xchg
push
and
jnp
sbbb
push
nop
lea
or
jl
push
jb
sbb
notb
cwtl
add
shrb
sar
aaa
imul
sub
xchg
mov
divb
cwtl
ljmp
movsl
mov
push
xor
and
push
add
mov
jne
or
mov
jno
mov
jae
je
adc
cld
je
loope
aam
rolb
xchg
inc
adc
xor
dec
idivl
mov
xlat
xor
repnz
pushf
leave
mov
push
sub
jnp
cs
fwait
rcrl
mov
test
cmp
dec
xchg
adc
sahf
pop
mov
mov
ltr
sub
adc
clc
dec
xchg
lock
jge
xor
test
je
or
inc
mov
jmp
pop
add
jmp
pop
les
nop
xor
loope
outsl
aad
stos
and
add
push
leave
push
int
test
mov
dec
xchg
leave
sbb
test
inc
push
xor
popf
mov
addr16
cmpsb
mov
jo
add
icebp
pop
xchg
fs
lcall
inc
push
dec
fndisi(8087
test
pop
andl
out
cmp
enter
iret
lret
sbb
je
cltd
lahf
and
cmp
mov
sti
nop
sbbl
or
les
out
mov
dec
lcall
insl
sbb
mov
mov
inc
ja
mov
mov
imull
stos
dec
enter
ret
fwait
cmpsl
sbb
das
dec
enter
push
add
and
insb
push
add
daa
les
cltd
xchg
mov
jge
sti
adc
addr16
dec
ja
mov
cmpl
fwait
mov
in
aaa
shll
jmp
and
ljmp
mov
pop
and
aam
push
jecxz
and
jb
mov
or
enter
lret
or
inc
js
nop
xlat
cmpsl
fcomps
je
in
lods
stc
xorb
sbb
mov
cmpsb
call
loop
daa
in
fidivrl
out
sub
mov
mov
fwait
cs
xorb
in
sub
out
mov
xchg
jmp
sbb
sti
test
inc
movb
test
cltd
pusha
cli
imul
mov
mov
jb
jae
pop
repz
cld
push
dec
out
pop
imul
cltd
dec
test
inc
add
push
adc
pop
push
jns
mov
sbb
xchg
sbb
dec
jmp
push
outsl
test
lret
push
pop
xor
cwtl
inc
xor
adc
dec
mov
fnsave
jnp
adc
dec
add
jge
pop
sub
mov
iret
out
movsb
fisubrs
arpl
pop
dec
mov
mov
addr16
mov
sahf
xchg
in
pop
int
mov
push
pop
ljmp
pop
mov
pop
cld
sbb
jno
das
fbstp
es
push
mov
add
daa
pop
pop
mov
aam
lods
idivl
mov
or
jbe
out
in
stos
adc
xchg
push
mulb
or
int
xor
fldenv
pop
popf
insl
push
lret
push
sbb
jb
cmp
lahf
inc
leave
jb
mov
mov
jb
mov
test
leave
inc
adc
je
xlat
xchg
lods
xchg
orl
jl
dec
mov
add
mov
mov
and
arpl
cmp
insl
mov
mov
and
imul
mov
mov
adc
or
xchg
cmp
xorb
xchg
sbb
mov
dec
icebp
jecxz
cmc
std
sub
ret
iret
enter
lcall
ds
pop
push
icebp
jmp
jae
and
pop
sarl
or
mov
or
jae
xor
pop
xchg
out
popf
loop
xchg
mov
xchg
and
lods
lret
ss
sbb
xor
sub
pop
cmpsb
mov
out
cmp
lret
dec
cmp
jl
inc
mov
jnp
imul
in
sbb
shr
push
fidivrs
stos
and
test
adc
mov
push
ficompl
stos
sti
fldt
lock
inc
out
dec
inc
jbe
jle
xchg
je
in
push
push
inc
ret
sub
je
dec
pop
jle
fistl
mov
push
lcall
adc
pop
jl
and
fisubl
cmp
dec
jno
push
mov
dec
adc
push
push
rcll
dec
adc
xor
xchg
xchg
into
dec
shrl
arpl
int
loopne
sub
mov
cwtl
sbb
mov
cmp
jl
add
sub
pop
jae
inc
pop
pusha
push
popa
mov
xchg
dec
loopne
push
pop
insl
rorb
cmpsb
lcall
jecxz
sbb
out
outsl
les
pop
dec
aas
or
push
push
cmpsl
movsl
repnz
insb
push
xchg
js
jb
add
add
lds
mov
test
cmp
int
inc
movsl
aam
add
out
mov
lahf
rol
stos
std
or
sbb
call
add
mov
aaa
cltd
mov
xor
jae
or
addr16
adc
sbb
xor
dec
push
outsb
add
cmp
ret
mov
dec
cmp
adc
shlb
xchg
add
dec
lock
fmull
das
repnz
aas
ja
out
lcall
daa
test
mov
stos
mov
into
daa
mov
add
mov
adc
mov
or
into
jmp
test
fisttps
insb
dec
xchg
sub
stos
mov
jecxz
and
cld
dec
popf
pop
into
fcoms
cmp
sub
ja
sub
bound
test
add
push
test
push
xor
loopne
sub
iretw
mov
sub
out
push
icebp
mov
scas
adc
add
add
xor
shrl
sti
inc
inc
orb
dec
inc
test
cld
pop
fs
dec
notl
cmp
lods
mul
inc
xchg
repz
cmp
sbb
ds
xchg
pusha
jne
fbstp
mov
add
int3
test
sti
xor
fiadds
and
mov
repz
inc
repz
leave
jmp
icebp
sub
rclb
xor
and
or
das
lret
aad
insb
fwait
jnp
add
xor
mov
cltd
mov
mov
xor
jne
jle
jns
xor
pop
add
jo
sbb
fnstenv
pop
loope
movsb
das
and
repz
mov
and
out
iret
xchg
js
js
out
cmp
inc
fwait
mov
fstl
cltd
xor
push
push
and
rolb
pop
pop
or
dec
fnstsw
mov
fnsave
xor
subl
ja
fidivrl
daa
xchg
sbb
and
aaa
xor
mov
stos
je
push
mov
out
lods
movsl
dec
dec
push
daa
cmpsb
sub
adc
add
aaa
movsb
add
js
cmp
js
mov
sub
mov
sub
sub
movsl
loope
imul
bound
push
popa
stos
imul
movsl
loop
imul
sub
movsl
adc
notl
dec
jo
pop
adc
xchg
nop
ss
jns
cltd
cmp
js
das
and
fwait
push
jmp
repz
xlat
pop
cld
mov
js
incb
es
or
adc
pop
fistps
in
xchg
clc
mov
iret
repnz
fsubl
xor
adc
or
jo
xorb
in
jo
pop
aas
mov
mov
xchg
jb
out
cwtl
jmp
push
addr16
pop
cmp
sahf
fdivs
xor
or
inc
mov
or
stc
sub
push
xchg
call
cmp
sbb
or
loopne
push
xchg
add
inc
pop
pop
imul
nop
jge
mov
addr16
add
loopne
cmp
sub
negb
ss
in
out
mov
cmp
or
daa
or
popa
cmp
cmp
fists
outsl
fwait
ror
jbe
mov
adc
ret
xor
aaa
adc
lods
push
push
inc
mov
and
adc
lret
mov
mov
imul
ljmp
mov
out
mov
test
cmp
inc
add
lret
shlb
and
faddl
pop
or
pop
test
push
movsl
mov
mov
xchg
or
lcall
mov
fsubp
movsb
repz
sub
adc
lea
js
cmp
push
xchg
out
daa
pop
popa
rorl
and
xor
mov
and
sub
or
sbb
out
adc
fcmovne
xchg
in
mov
fs
in
test
lea
adc
mov
push
adc
rcll
jle
cmp
push
ss
push
imul
lret
mov
clc
inc
movsl
mov
mov
pop
xlat
or
ret
or
mov
insl
call
leave
es
out
stos
mov
aam
jp
fwait
out
inc
push
xchg
punpckhqdq
cmpsl
insl
pushf
addr16
repz
pop
xchg
lock
xor
xchg
sti
icebp
in
adc
push
stos
and
push
cmp
lret
rolb
dec
gs
pushf
cmpsb
cwtl
xchg
pop
loopne
in
outsb
inc
mov
ds
stos
sti
sub
or
cmp
addb
inc
mov
cmp
pusha
mov
leave
ljmp
push
cmp
and
mov
jge
dec
jecxz
cs
xchg
test
pop
popf
push
stos
jb
hlt
jnp
mov
outsb
mov
inc
pop
push
mov
scas
cld
dec
mov
insb
addb
lret
cld
pusha
jo
mov
xchg
or
or
ret
or
outsl
cltd
out
ret
iret
bound
jmp
bnd
fcomip
adcl
stos
insl
cmpsl
adc
and
cmp
lods
int
jno
cli
mov
fdivs
test
mov
push
imul
mov
sarl
jle
xchg
call
rorl
sbb
js
mov
cmp
cld
cmp
cmp
movsb
or
sbb
xchg
sbb
add
movsl
outsb
je
rolb
dec
xchg
ret
or
fistps
mov
inc
int3
lock
inc
push
xor
js
sub
ljmp
dec
or
push
mov
adc
in
and
ds
nop
cmp
dec
push
xchg
push
outsb
loopne
rcrb
push
add
adc
jnp
dec
sub
mov
test
int
sbb
scas
mov
stos
adcl
fadds
movsb
jge
insl
lcall
cmp
outsb
mov
lret
xchg
shrl
sbb
test
mov
xchg
lods
pusha
cmpsl
rsm
rcrl
push
jae
mov
and
sbb
int
cwtl
jl
jp
clc
jae
jg
imull
xor
xchg
insl
sbb
popa
cmp
push
es
sub
decl
push
cld
or
pop
cmc
xor
mov
add
add
cltd
mov
js
add
js
popa
insl
or
loop
fwait
jle
mov
decl
into
rcrl
ds
movsl
int3
sbb
push
cld
lods
xor
sub
iret
mov
mov
xor
aas
jp
loope
jbe
mov
jnp
push
fs
aas
or
cmp
fstps
xchg
mov
scas
ljmp
xchg
imul
inc
pop
int
jbe
repz
mov
pusha
shlb
push
aad
shrl
imul
pop
call
pop
ss
in
xor
mov
loope
jle
or
push
sbb
nop
shrl
scas
loop
push
mov
mov
mov
mov
mov
mov
stc
inc
or
pop
jmp
pop
sahf
adc
mov
inc
jg
out
mov
repnz
inc
ss
js
or
push
rcr
out
out
sbb
sub
test
sbb
je
loopne
or
mov
out
leave
add
dec
pop
jne
iret
loopne
out
inc
adc
dec
sbbl
out
sub
mov
cs
and
inc
xorl
in
and
lret
mov
je
sbb
pop
add
jl
in
loopne
add
aaa
lahf
mov
mov
pop
inc
popa
shrb
lods
sub
xor
cld
adc
daa
xchg
xchg
xor
les
stc
cmp
xchg
mov
sub
push
test
push
mov
mov
leave
lea
inc
mov
psrld
outsb
cmp
insb
popa
xorl
out
sti
iret
push
popf
pop
es
mov
arpl
adc
jp
xchg
or
pop
push
xor
xchg
sbb
shl
aad
dec
inc
iret
loop
mov
push
mov
dec
push
cmp
sbb
imul
pusha
push
push
fcmove
sub
inc
jmp
movsl
jno
sbb
rolb
sub
das
inc
mov
pop
fcompl
xchg
sahf
cli
rcrb
iret
into
test
sti
insb
lock
pop
jns
jmp
popa
inc
or
in
rcrb
sarb
testb
aaa
cmp
mov
inc
sti
dec
inc
enter
cmpsl
dec
gs
stos
jl
das
add
mov
sbb
aaa
pop
push
mov
sub
cmp
and
jl
movsb
mov
rclb
push
add
adc
hlt
jl
jmp
pushf
pop
aad
ret
iret
push
mov
xchg
fwait
sub
xchg
ss
mov
aam
mov
dec
in
jb
xchg
pop
pop
popa
inc
pop
xchg
lods
stc
icebp
jecxz
sbb
in
popa
mov
mov
imul
jae
in
daa
iret
cmp
or
xchg
mov
scas
push
cmp
out
retw
mov
or
jle
inc
and
lret
cwtl
lret
xor
pop
fstpl
sahf
ss
xorb
jae
adc
movsl
dec
inc
es
test
mov
mov
aam
push
test
mov
lret
and
ja
inc
mov
loope
lea
insb
aaa
je
cs
pop
lea
fisubrs
xor
dec
xchg
lcall
adc
ja
gs
mov
jo
add
shrl
repnz
insb
fmull
test
cmp
xor
xor
xchg
pushf
add
scas
cld
rclb
cmp
cmp
out
jae
std
push
fdivrs
movsb
xor
jecxz
ret
fcompl
pop
mov
imull
push
leave
out
add
dec
xor
sti
lret
fcoml
loope
dec
imul
mov
jb
sti
xor
dec
sbb
adc
xchg
mov
jge
int
xchg
inc
enter
jne
and
xchg
sub
add
push
and
into
xor
push
pop
mov
aam
dec
jmp
cmp
jg
mov
sbb
mov
popa
mov
nop
testb
nop
sbb
pushf
xchg
mov
pop
sar
push
decb
leave
and
fdivrs
fbstp
xchg
test
fst
pop
loope
popf
pop
js
jbe
lods
in
lds
sti
jb
sub
xchg
stc
push
cmp
stos
xchg
cmpsb
enter
or
shlb
jmp
add
and
scas
loopne
pop
xchg
outsb
mov
out
mov
sub
es
dec
mov
mov
push
cwtl
jo
std
pop
lret
mov
xchg
xor
sub
repnz
mov
dec
adc
push
cmpb
mov
and
ds
mov
in
stos
mov
sub
out
iret
push
push
xor
je
rorl
dec
add
dec
jp
jmp
imul
lret
dec
sub
negb
cmp
mov
dec
jl
cmp
jb
jmp
cmp
lret
insb
pop
leave
fildll
sub
sbb
popf
int
sub
push
sub
int
fadds
pusha
sbb
mov
scas
jo
decb
int3
mov
pop
stos
mov
insl
pop
or
cli
test
mov
pop
mov
adc
xchg
inc
ret
sbb
stos
popa
jns
aas
jge
aad
je
insl
ljmp
xchg
xchg
leave
jecxz
cmp
jno
pop
scas
int3
push
aas
repz
mov
xor
stos
dec
pop
out
mov
mov
mov
sbb
add
sbb
adcb
loopne
adcl
cmpsl
sar
adc
mov
lea
shlb
loope
jmp
sub
sub
sbb
xor
nop
int3
sbb
push
jp
outsb
in
pop
rorb
les
cmp
cli
pop
adc
ja
stos
std
add
jl
out
pop
rcrl
rcrl
addb
lret
cltd
cmp
sbb
and
mov
pop
cmc
or
cmc
sbb
dec
test
pop
adc
jg
mov
daa
popf
imul
sub
add
jbe
dec
lds
daa
sub
cltd
iret
xchg
mov
es
pop
mov
xchg
sub
cmpsb
pushf
fisttpll
lret
jbe
push
sbb
pop
addl
fcoms
dec
icebp
loope
cltd
lods
cmpsb
in
add
pop
fdivs
sti
int
ss
lcall
dec
xlat
nop
xchg
adc
dec
xor
cmp
cmp
loope
sbbb
shlb
pusha
ljmp
test
lock
jae
jbe
mov
pop
jno
js
pusha
int
lcall
push
xchg
mov
adc
inc
shll
orb
mov
jge
not
repz
mov
stos
lods
movsb
cmp
test
lret
rolb
fisubl
push
sbb
mov
test
or
rcl
fdivl
add
inc
call
je
mov
pop
or
jle
lret
push
test
cmp
sti
dec
shll
jb
sbb
mov
into
insb
test
add
shll
add
and
pop
iret
das
test
js
inc
ljmp
or
sub
nop
cmp
cmpsl
fwait
jns
movsb
std
out
scas
inc
xchg
xor
popf
and
jo
sti
jb
xchg
inc
xchg
gs
xchg
js
icebp
sub
sub
cmp
pop
scas
mov
or
mov
outsl
sbb
andl
divl
dec
test
or
movsb
cs
lret
mov
dec
sub
mov
pop
lahf
jecxz
xor
mov
xor
arpl
pop
cmc
nop
add
adc
leave
mov
mov
pop
shll
xlat
push
cmpsl
jns
mov
aam
push
xchg
sbb
mov
enter
pop
push
push
xchg
lcall
xchg
insl
mov
adc
xorb
mov
mov
mov
adc
mov
negb
pop
jle
adc
movsl
xor
xorb
mov
inc
sbb
add
in
rcr
sub
scas
xchg
inc
or
sub
dec
inc
push
add
pushf
xor
or
loope
adc
or
push
arpl
and
lret
cmovb
add
pushf
mov
pop
scas
mov
repnz
out
dec
mov
shrl
dec
mov
je
iret
in
popa
sarl
jne
sbbl
pop
loopne
pop
shrb
mov
aas
pop
or
mov
pop
xchg
mov
cmp
stc
popa
or
loop
jl
in
push
out
outsl
popf
pushf
push
std
fidivs
inc
out
cmp
inc
or
jmp
mov
inc
ret
cmp
out
mov
inc
es
test
gs
cmp
ret
cmp
jecxz
push
mov
cs
nop
mov
js
xchg
jmp
xchg
jns
lret
cmc
aam
push
jmp
xchg
push
mov
fstl
mov
push
jns
sub
int
shll
es
fsts
out
add
jnp
std
ret
jmp
mov
sub
fnsave
dec
shrl
mov
and
fisttps
js
mov
cs
js
loop
pop
xchg
scas
sbb
xchg
test
push
jge
mov
inc
mul
addr16
xor
call
out
rorb
mov
cmp
out
in
inc
or
jnp
ljmp
pop
mov
fidivs
js
lods
movsl
and
ret
cld
mov
movsl
xchg
xor
outsb
or
xor
sahf
xor
push
scas
sub
fisttps
pop
movsl
jl
ja
pop
push
rclb
or
jb
sbb
lds
gs
inc
mov
pop
mov
jo
push
push
aaa
fnsave
int3
lock
scas
rclb
mov
and
inc
xor
dec
pop
ret
je
push
dec
fcomps
je
aam
jle
pop
sti
lret
mov
sbb
mov
mov
mov
add
push
mov
notl
mov
adc
fcmovu
push
cmp
or
das
cmp
sbbb
dec
mov
and
cmp
cmp
xchg
jb
sahf
dec
dec
cmpsb
and
jge
xor
lds
push
or
pop
push
push
je
lahf
inc
cli
dec
mov
lods
jno
inc
sti
pop
mov
or
sub
mov
sub
insb
mov
or
lods
mov
mov
sbb
mov
or
push
sbb
mov
jge
mov
mov
sbb
aad
sbb
mov
nop
and
fs
sahf
add
cmp
mov
into
inc
jbe
std
mov
sti
lock
adc
rorb
test
aas
add
loop
jg
repnz
mov
subl
arpl
ljmp
cmpsb
xlat
jne
js
cmp
out
cwtl
pusha
hlt
inc
iret
cmp
xchg
imul
mov
jp
add
xchg
sti
stc
fwait
enter
fnsave
xorl
cmp
dec
sub
dec
mov
adc
addr16
mov
pushf
in
xor
adc
jnp
xlat
push
add
test
in
xor
inc
jnp
xor
fs
sbb
sub
push
sti
test
arpl
outsb
hlt
lds
sub
ror
enter
stc
inc
push
push
push
fdiv
adc
movsl
xchg
jecxz
push
test
lret
jecxz
jle
adc
imul
fcmovnbe
stos
in
jbe
mov
movsl
cmpsb
ror
jl
or
inc
into
cs
mov
aaa
nop
fidivrl
adcb
sti
addr16
insl
aam
scas
dec
int3
and
cli
mov
je
sub
dec
mov
mov
dec
sbb
jnp
xchg
cmp
aas
xchg
mov
fwait
neg
dec
push
arpl
lds
cmc
dec
movsb
sbb
sub
xor
push
push
test
xchg
lcall
test
call
cld
loopne
mov
xchg
xchg
push
ja
dec
pop
popa
mov
mov
loope
jmp
jae
out
mov
pop
pop
mov
xchg
dec
pop
aad
push
jmpw
pop
adc
cmp
sti
inc
mov
sbbb
outsl
cmp
pop
cmp
pop
outsl
pop
inc
sub
outsb
mov
aas
je
jbe
cmc
adc
pusha
pop
bound
mov
fs
aad
dec
call
pushf
sub
aaa
shll
mov
lcall
mov
xchg
xor
repz
pusha
or
mov
cs
adc
sub
xchg
test
pop
adcb
sub
xchg
adc
loopne
xor
nop
pop
xor
inc
xorl
jbe
push
mov
pop
mov
das
insb
outsb
or
mov
push
js
jl
xchg
xchg
xchg
bound
adc
xor
mov
pop
imul
adc
lahf
pop
sahf
mov
test
sbb
outsb
imul
popf
test
scas
mov
pop
gs
cmpsb
and
ja
mov
cmpsb
adc
shl
hlt
divb
push
mov
or
jge
sub
push
scas
insb
push
mov
gs
pop
mov
add
xor
xor
imul
das
out
or
xchg
ret
adc
mov
push
mov
nop
mov
mov
loope
sub
rcll
cmp
xor
stos
mov
ficompl
mov
and
mov
and
inc
insb
push
je
xchg
add
inc
loopne
push
add
sbb
fldl
sbb
ljmp
cs
sub
popa
sbb
js
out
add
shrl
insl
mov
adc
sub
xor
xchg
test
pop
cwtl
mov
cmpsb
push
pushf
test
rcl
hlt
pop
int3
or
ds
fsts
xor
jno
insl
shrb
gs
imul
push
addr16
lds
jne
add
test
cmp
dec
push
in
sbb
ret
mov
add
insb
xor
sbb
lods
push
lock
loope
mov
data16
int3
mov
fldl
dec
lock
dec
mov
sub
mov
xor
xor
outsb
call
enter
xchg
insb
pushf
jne
nop
mov
ss
js
movsl
cmc
push
fdivrp
inc
sbb
dec
push
inc
xor
popf
repz
cli
ss
sbb
fwait
int3
sub
pop
out
scas
aas
or
dec
loopne
call
xlat
adcl
test
sbbl
lret
xchg
jp
dec
cmp
jge
push
aam
stos
or
jp
shrb
jnp
pop
loope
cmp
arpl
dec
cmc
sub
dec
pop
inc
add
outsb
sub
repnz
jp
pop
nop
shrl
sbb
fidivs
mov
pop
test
sub
mov
sub
addr16
sbbb
lock
mov
lahf
jmp
pusha
loop
and
pop
mov
xor
sbb
test
cmp
lds
xchg
or
cmp
cmp
dec
cmp
pop
es
lea
in
push
push
stos
testl
jmp
mov
stc
push
add
xor
dec
dec
sbb
push
jnp
out
into
and
in
jg
pop
lret
icebp
xor
mov
mov
inc
cs
push
int3
int3
stos
lret
arpl
in
lds
and
inc
scas
bound
mov
outsb
xchg
loopne
pop
into
adc
cmp
call
icebp
or
xchg
jge
and
or
mov
loop
jae
clc
mov
mov
sbb
je
mov
out
inc
jae
sub
mov
mov
mov
mov
pop
test
icebp
mov
mov
les
and
xor
dec
cmp
enter
popf
mov
imul
fcoml
jmp
das
mov
unpcklps
imul
adc
sbb
pop
xchg
dec
lea
test
inc
ja
cwtl
or
cmp
jne
jnp
pop
jle
sub
int
fldt
cmpb
pushf
mov
popf
pop
sub
jp
jle
movsb
mov
das
sbb
adcl
xchg
insl
mov
outsl
aaa
fs
sbb
clc
aas
or
gs
mov
and
inc
sub
pushf
cli
fs
xor
daa
jbe
popa
sbb
ret
mov
imul
lea
in
mov
cmp
xchg
js
pop
mov
add
jecxz
les
sahf
or
add
or
je
mov
sbb
sbb
mov
mov
or
insl
test
sbb
push
scas
adc
adc
push
inc
pop
mov
add
jno
repnz
xorl
mov
negb
or
in
sbb
pusha
out
fiadds
push
inc
lds
pop
lret
jae
arpl
dec
pop
movsb
in
leave
push
add
imul
fiadds
insb
bound
jo
add
pop
push
pop
daa
and
addb
lods
sbb
mov
mov
mov
cwtl
add
lods
punpckldq
xor
rcll
dec
dec
addr16
mov
push
enter
outsl
popf
in
popa
js
out
sbb
lret
test
cs
pop
int
jle
lret
test
mov
cmp
xor
pop
mov
clc
sub
arpl
push
outsl
jb
xchg
popa
push
mov
pop
pop
popa
sub
loopne
sub
mov
jle
sbb
push
inc
mov
imul
insl
arpl
roll
push
xchg
sbb
stos
sahf
call
jge
dec
cmpsl
cmc
daa
inc
cwtl
cmp
int
into
cltd
je
fdivs
cmpsb
dec
cmp
cmovl
adc
xor
jb
fs
mov
mov
jo
mov
sub
aas
movsb
sbb
fistps
sbb
ljmp
sbb
sub
stos
lods
imul
fldcw
js
stos
ds
adc
idiv
std
inc
fs
xchg
loop
pop
rol
push
mov
out
mov
pop
add
jb
aam
loope
or
mov
fadd
mov
adc
or
dec
mov
dec
dec
or
aas
pop
jmp
pusha
mov
out
jb
subl
cmpsl
mov
sub
divb
push
imul
popa
loop
push
mov
and
xchg
cmpsb
int3
add
or
push
mov
mov
add
dec
sbb
or
les
push
mov
and
clc
or
pop
push
or
mull
or
xor
addl
push
pop
mov
dec
popa
fdivl
cld
cmp
imul
mov
pop
mov
cmp
out
cltd
adc
jl
mov
jp
ret
scas
data16
pop
mov
dec
jle
cmp
aas
push
inc
dec
mov
push
int3
pop
js
push
outsb
mov
imul
nop
ficoms
dec
mov
rcrb
movsl
es
je
dec
and
pop
add
stc
or
sub
jbe
fwait
and
rcll
cmp
add
mov
push
fwait
push
imul
mov
pop
cltd
in
jns
icebp
sub
aas
rol
xchg
lods
cmp
and
lods
aad
dec
imul
mov
lret
in
jg
push
or
es
dec
or
ljmp
inc
imulb
ret
hlt
jle
mov
out
arpl
sahf
fnstcw
les
push
xor
mov
push
jb
ljmp
or
cmp
sub
adc
xor
xchg
test
cmpb
xor
std
pop
jp
roll
and
pop
xor
xchg
sbb
xor
insb
addr16
inc
adc
lds
push
and
repz
loope
xor
push
out
cs
and
add
je
rcrb
and
mov
std
imul
aaa
fisubrl
sbb
jae
daa
xor
mov
lds
insb
cmc
test
adc
fcomps
mov
hlt
mov
sbb
scas
inc
aaa
push
movl
stos
cmpsb
ret
sub
or
ror
dec
outsb
sbb
lods
in
ljmp
push
and
and
movsb
jmp
sarb
sbb
test
fmuls
cmp
mov
lret
sbb
into
stos
or
add
mov
pop
jmp
cld
stc
dec
xchg
add
mov
fidivs
mov
hlt
lcall
mov
mov
shrl
fnstenv
in
mov
lds
aad
mov
aam
xchg
out
or
push
push
cmc
mov
push
mov
cmp
into
mov
cmpsl
cli
dec
xor
repnz
xorb
push
aad
mov
push
inc
jb
lcall
sub
sbb
std
ret
mov
mov
inc
and
xchg
add
inc
xor
arpl
or
jnp
int3
push
nop
fwait
and
or
sub
bound
pop
push
push
sub
pop
nop
sbb
das
sbb
pop
imul
adc
adc
xchg
adc
jl
out
xchg
jb
push
cltd
inc
aas
hlt
sub
mov
jecxz
dec
adc
add
dec
inc
stos
mov
movsl
je
jbe
mov
cmp
jne
add
lea
adc
push
sbb
xchg
ja
arpl
mov
inc
jge
inc
bound
push
addr16
in
pop
mov
mov
dec
push
out
into
sbb
or
mov
inc
mov
stos
jbe
subb
in
pop
jns
or
xchg
mov
mov
inc
or
test
pushf
and
inc
xchg
mov
movsb
push
loop
scas
mov
rolb
test
mov
mov
xchg
and
xorb
mov
inc
or
repz
sub
mov
stos
or
iret
aaa
xor
call
imul
or
jl
cmp
flds
cmp
sub
gs
pop
mov
push
lret
mov
push
adc
sbb
in
push
jae
ret
xchg
movsb
cmc
shll
lods
adc
mov
repnz
leave
test
or
adc
cmp
cmpsb
mov
repnz
mov
ljmp
into
and
call
mov
mov
shrb
addr16
mov
mov
lahf
mov
jo
mov
popf
jae
lods
add
mov
hlt
out
bound
xor
test
sahf
and
xor
rcrb
divb
int3
mov
jmp
mov
mov
test
jmp
lds
jo
xchg
movsl
cltd
inc
lret
adc
add
and
or
xor
mov
shl
inc
jmp
or
cmp
xor
mov
leave
jno
sbb
sbb
add
xor
stc
addr16
and
sti
pop
shll
cmp
mov
shll
jge
ss
mov
jmp
xlat
loope
dec
and
mov
cltd
mov
push
sbb
fcoms
nop
notb
pop
insb
mov
and
int3
dec
pop
push
or
mov
cli
daa
push
mov
imul
lock
pop
lods
jle
aad
cmp
ljmp
push
mov
nop
clc
aaa
cmp
dec
push
jns
sub
clc
mov
push
iret
enter
int
mov
mov
and
or
insl
insl
inc
or
inc
andl
dec
ljmp
xchg
xchg
push
mov
add
mov
sub
out
inc
scas
orl
arpl
loopne
sbbl
cwtl
inc
test
dec
xor
iret
nop
fsts
cld
inc
aam
xchg
cltd
sahf
dec
push
push
sti
cld
je
pop
mov
stos
into
xchg
mov
dec
sti
push
fs
cmp
push
jle
ss
mov
xchg
sub
and
dec
inc
jg
mov
fldt
lcall
les
fwait
movsb
out
sub
jge
cmp
les
test
mov
addb
xchg
test
in
lret
enter
imul
pop
push
out
xchg
je
loope
and
mov
push
in
andb
xchg
jo
mov
mov
leave
loope
push
movb
inc
arpl
jge
sahf
les
sbbl
das
xchg
jo
out
aad
add
int3
hlt
dec
inc
movsl
adc
cmpsl
mov
idivb
sbb
ret
xchg
dec
popf
addr16
mov
lods
xor
lock
jge
mov
arpl
push
xor
mov
adc
adc
jecxz
and
mov
clc
xor
jge
pop
mov
js
or
mov
cli
jns
push
cmpsb
pop
repnz
push
test
cmpsl
pop
cmpsb
push
jecxz
rol
push
push
pop
dec
in
push
and
pushf
add
outsb
imul
shr
movsl
lret
sub
cmp
cmp
adc
or
and
es
inc
inc
popf
dec
and
ret
popf
fnstcw
test
mov
or
arpl
xchg
cltd
stos
cli
jmp
test
push
cmc
shll
xor
rclb
jns
aas
sar
or
lods
loop
sbb
int
shlb
cmpsb
mov
xlat
jnp
rolb
xor
daa
jb
in
jl
sub
sub
fcmovu
lock
sub
or
dec
mov
cvtpi2ps
shrb
test
pop
push
insb
push
cli
mov
or
cmc
movsl
cmp
dec
xor
into
mov
add
in
movsl
mov
int
mov
mov
xchg
stos
fstp
push
popa
xchg
movsb
sub
sbbl
jle
dec
dec
lret
pop
push
cmp
pop
cltd
lcall
sbb
lock
in
rclb
aaa
pop
in
pop
fnstenv
jg
and
insb
fcomi
movsl
dec
ret
mov
cmp
or
ret
and
icebp
cmp
cmp
addr16
cmpl
or
mov
cs
mov
inc
jmp
cmp
mov
sahf
sti
lds
xor
jmp
ret
and
ja
inc
loope
push
xchg
sbb
fimull
fs
xchg
cmp
inc
pop
jns
xchg
movsb
jecxz
jbe
mov
mov
lods
test
les
inc
cmp
and
inc
mov
repnz
xor
sbb
sbb
sbb
test
xchg
jg
data16
out
mov
insb
es
imul
testl
lock
pop
ficomps
push
movnti
outsl
xor
ss
dec
inc
divb
loope
pusha
dec
add
popf
adc
mov
pop
in
dec
xchg
je
xor
push
xchg
add
mov
shll
lcall
jp
and
mov
xor
mov
pop
sbb
inc
stos
jge
mov
popa
dec
sub
jl
push
adc
imul
sub
push
xorb
icebp
imul
out
dec
leave
mov
add
data16
iret
inc
outsl
fisubrl
sub
add
adc
jae
cld
jg
mov
shll
mov
mov
iret
dec
vshufps
push
pushf
cmp
xchg
pop
mov
and
aas
add
mov
dec
pop
sbb
lock
xchg
mov
ret
mov
ret
adc
xor
enter
pop
shlb
ret
aam
adc
mov
repnz
xchg
mov
xor
jle
lods
es
cmpsl
lock
stos
pop
cmp
loope
xchg
pop
push
push
mov
lods
cmp
movsb
pop
mov
jecxz
lahf
aad
push
xor
jmp
mov
jo
nop
xchg
ret
mov
add
sub
sbb
pop
loop
stc
mov
fdivrs
scas
mov
outsl
sub
in
clc
push
push
inc
pop
mov
pop
pop
or
fcoms
and
test
mov
or
fwait
pop
jmp
mov
add
cmp
xlat
pop
push
xor
adc
cmp
sbb
data16
jo
and
daa
sti
mov
xchg
fidivrl
xor
inc
js
and
dec
and
iret
cmp
jb
dec
sub
nop
push
xchg
sbbb
sbb
jge
sahf
inc
dec
mov
xchg
inc
adc
into
xchg
pusha
xchg
jmp
aas
loope
stos
inc
ficoml
xor
sub
mov
loopne
and
mov
in
insb
lea
sub
xchg
mov
hlt
inc
cltd
pushf
fsubp
push
ds
sti
mov
pop
aad
ljmp
incb
lret
sti
sbb
mov
sub
sub
mov
xchg
or
into
mov
or
loope
fstps
inc
ljmp
in
xor
pop
jne
scas
adc
iret
add
and
icebp
dec
iret
add
push
add
xchg
jae
jo
cmc
cmp
cmc
ds
bound
and
mov
pop
jge
test
adc
ror
popf
xor
ljmp
shr
aam
dec
das
push
pop
and
sarb
sti
fdivrl
dec
push
jg
sbb
or
int3
test
mov
jl
mov
cld
mov
and
in
in
sub
fisttps
mov
lods
rcrl
add
pusha
rcrl
out
sub
divb
push
or
in
push
repz
push
push
and
dec
decb
add
inc
shrb
jae
mov
and
imul
mov
sub
testb
mov
push
ljmp
dec
lods
or
ss
ja
int3
out
mov
and
adc
mov
or
mov
shll
sbb
push
jo
dec
in
xor
sub
shll
adc
in
push
les
mov
mov
hlt
cmpsl
push
add
enter
loop
sub
add
repnz
lds
out
xchg
xor
dec
push
pop
dec
ds
lret
or
mov
test
into
je
inc
adc
sbb
jnp
add
push
shl
adc
sbb
cli
imul
stc
xor
mov
or
push
xor
cs
shlb
mov
cld
sti
out
dec
lods
nop
or
popa
outsl
ret
in
pop
rcrl
stos
or
scas
jbe
or
xchg
mov
std
jno
and
mov
insb
aam
orl
das
sbb
jb
mov
sar
inc
push
lahf
movsb
out
xor
xchg
xchg
mov
sbb
mov
jecxz
clc
pop
push
insl
lods
sbb
cmovg
loop
add
enter
daa
and
aad
stos
cmpsl
test
andb
test
movsl
or
std
cs
jmp
clc
sub
mov
push
rcll
shll
push
dec
add
out
leave
fldl
in
mov
sub
add
icebp
lods
jmp
xchg
mov
xor
rolb
push
jns
inc
movsl
adc
or
pop
push
jmp
ja
pusha
test
shl
rclb
adc
mov
or
repz
lret
lret
pop
or
cmp
ss
dec
or
js
out
sub
jo
add
out
pop
cmc
jecxz
test
jns
and
dec
push
in
ficoms
or
sarl
xor
xlat
int3
stos
fisttps
mov
push
xchg
mov
adc
ja
fwait
add
push
repnz
repnz
sub
in
arpl
icebp
or
pop
mov
shlb
push
lock
ds
stc
ror
shll
mov
sub
clc
push
shll
je
add
dec
jnp
xorb
sbb
add
xchg
and
fmull
jne
jae
jle
lahf
xchg
in
dec
jne
das
mov
jns
cmp
ret
test
loop
push
adc
lods
lret
scas
nop
aad
sbb
pop
stos
bound
ljmp
adc
ja
test
push
mov
pusha
in
xor
ret
cld
xchg
xchg
addb
jno
pop
ret
arpl
mov
aaa
and
lret
out
mov
pop
test
aad
mov
in
xchg
pop
push
jle
in
ja
sbb
in
pop
mov
mov
and
xchg
sbb
push
pusha
lods
loop
or
scas
xor
int
cmpsl
pop
fistpll
sub
js
loope
dec
ret
jecxz
fisttps
insl
fldcw
push
sub
je
mov
lcall
lods
fs
or
pop
movl
scas
divb
sbb
fsubs
xchg
mov
int3
rclb
cmpsb
addr16
ds
sub
sbb
push
push
in
dec
pop
fwait
or
ret
mov
arpl
cmp
mov
sub
shrb
ss
ret
sbb
lahf
icebp
xchg
add
adc
ret
insb
push
repnz
xlat
enter
scas
dec
sbb
fwait
jp
dec
cli
xchg
test
pop
mov
insb
daa
jl
cltd
and
test
clc
aaa
jne
xchg
cmp
dec
cltd
hlt
inc
nop
add
and
sub
push
test
mov
test
pop
rorb
clc
out
repnz
push
ret
fbstp
jnp
incb
cmp
imul
xchg
sbb
lds
pop
xchg
ficomps
je
inc
idivl
mov
cltd
mov
cmp
mov
adc
push
outsl
scas
daa
mov
mov
inc
inc
hlt
leave
popa
xchg
in
cmp
cmp
or
shlb
add
jp
mov
mov
in
addr16
sbb
jecxz
and
sarl
aam
stos
mov
mov
cs
add
fwait
scas
out
lock
jae
mov
xor
pop
cld
cs
cmc
add
in
inc
rcrl
in
dec
enter
xchg
mov
xor
jo
loopne
movsb
rorl
inc
cmpsl
xorl
xchg
cmc
xchg
sbb
aad
imul
cmp
add
cld
aas
mov
subb
adc
xor
bound
stos
lret
sub
insl
xor
scas
inc
aas
mov
or
jns
fdivrs
fs
dec
cmp
inc
mov
shrb
out
xor
xchg
loopne
sub
push
or
mov
fistpll
outsb
jle
push
stos
sbb
mov
std
sub
push
xchg
mov
nop
mov
mov
clc
shlb
mov
movsl
out
pop
inc
loop
cmpsb
cmp
adc
jmp
xor
push
dec
cmp
lret
hlt
pop
stos
inc
shlb
rcl
je
stos
and
insb
xchg
add
mov
insb
cld
or
aaa
jecxz
sub
rcr
popa
aad
sub
add
xchg
loopne
mov
out
mov
sar
mov
iret
pop
lahf
dec
xlat
xor
mov
or
mov
jg
rolb
pop
mov
mov
and
pop
lock
inc
insb
pushf
sarl
dec
rcrl
cmpsb
mov
das
cmpsl
jbe
int
test
sbb
stc
adc
hlt
cld
inc
mov
in
out
cld
add
jb
add
mov
pop
jl
mov
inc
loop
inc
sub
fisttpll
xor
repz
dec
mov
pusha
orl
and
cmc
out
inc
xorl
dec
loopne
mov
jg
cmp
movsb
push
sbb
nop
pop
dec
jg
mov
mov
jno
cmp
fldl
and
cmp
cltd
shrl
dec
adc
pop
enter
mov
cmp
dec
fs
and
lods
call
sub
loop
push
data16
pushf
shr
push
mov
ret
push
jb
int
int3
and
cwtl
mov
dec
inc
addr16
cmp
dec
mov
lock
mov
gs
push
or
imul
enter
adc
jp
fcoms
addr16
mov
insb
dec
pop
push
loop
dec
cmp
adc
adc
xor
sbb
xchg
pop
mov
les
call
mov
add
insb
roll
and
call
sub
add
sub
andl
mov
sub
mov
loop
mov
es
push
jecxz
adc
into
add
fs
pop
imulb
cli
mov
push
cmp
daa
pop
mov
mov
icebp
out
mov
add
les
pop
jp
and
lds
mov
aad
loopne
insl
mov
mov
pop
or
insb
cli
rcr
bound
pushf
dec
int
divw
push
ficoml
xlat
jne
jno
insl
mov
enter
cmc
and
loop
dec
shl
mov
sub
xchg
mov
movsl
lds
aad
add
mov
cmp
mov
fimuls
mov
arpl
mov
mov
testl
inc
push
jp
repnz
inc
subl
cmp
repz
clc
pop
push
jle
mov
pop
shlb
xchg
push
pop
ljmp
push
inc
or
and
jmp
jmp
ljmp
rcl
jbe
test
cmp
sbb
icebp
fcmovnbe
movsl
push
stos
into
mov
mov
mov
push
add
mov
aaa
jle
push
xchg
push
inc
loope
ss
loope
es
inc
mov
xor
inc
aaa
or
xchg
sub
ljmp
sub
shrb
fisubrl
repz
imul
xchg
dec
push
movsb
xor
cmp
lods
aaa
lret
ret
lods
mov
inc
imul
xor
arpl
lret
sub
jno
fmull
sbb
xor
movsb
pop
clc
sbb
jg,pt
movsl
xchg
mov
aam
push
imul
inc
xlat
jl
mov
lock
stc
jecxz
pop
push
inc
mov
or
and
mov
in
fildl
adc
mov
mov
cmp
mov
pusha
cwtl
jo
in
out
adc
loope
sub
cltd
enter
mov
add
es
push
push
cmc
push
add
fbstp
jnp
fnstenv
sub
cmc
fidivrs
mov
test
int
dec
sbbb
adc
fldenv
sbb
fstpl
out
jmp
jmp
fndisi(8087
decb
in
out
add
pop
enter
mov
in
xor
les
test
dec
popw
sarb
clc
test
dec
sub
lds
push
and
xor
sar
sub
aam
imul
pop
lods
cmpsb
jge
or
sbb
push
xchg
xor
stc
xchg
sahf
outsb
pop
add
inc
jmp
lock
jmp
mov
fmull
cwtl
xchg
jns
sbb
popa
mov
jne
test
jp
addr16
psrlq
adc
add
int3
outsl
call
or
pushf
inc
adc
scas
push
shll
and
cmpsl
addb
test
insl
icebp
mov
mov
lock
imul
xchg
das
ljmp
mov
insb
push
cwtl
push
cwtl
fnsave
dec
adc
dec
fldl
call
nop
push
ja
aad
sti
fdivl
adc
jge
decl
add
ljmp
cmp
arpl
xchg
xor
mov
out
sbb
xor
aam
mov
stc
fdivr
xor
adc
pop
lea
les
dec
jecxz
adcb
cmpsl
jno
dec
stos
popa
jnp
pop
enterw
cwtl
add
or
sub
cmpsl
repnz
or
test
push
into
mov
xor
aam
aaa
lcall
adc
cmpsb
mov
xchg
xchg
and
repz
inc
dec
outsl
shll
adc
cmp
push
jae
cmp
sbb
dec
pop
xor
jno
mov
pop
cmp
inc
and
fsubr
fists
aad
cmp
pop
sbb
ss
jp
insl
inc
cli
dec
inc
stos
fcomps
mov
shll
out
js
and
insl
mov
clc
mov
xchg
push
jne
xchg
shl
mov
push
mov
orb
in
lcall
jp
push
js
fcoml
xchg
mov
sub
mov
jns
subb
or
imul
mov
ds
mov
mov
mov
dec
sbb
outsl
lret
test
push
dec
inc
xor
and
shll
fiadds
dec
add
mov
mov
mov
or
mov
jecxz
mov
jl
les
xor
fwait
xsaveopt
pop
or
loop
lahf
jg
add
push
and
adc
cs
out
das
enter
cmp
dec
sbb
sbbl
pop
mov
inc
dec
mov
xchg
mov
dec
les
cmp
sub
jmp
inc
ret
pop
jmp
sbb
jnp
fstpl
fwait
mov
jmp
popf
cmp
daa
xor
test
outsl
test
and
add
cmp
mov
cmp
or
rcl
loopne
cs
add
jae
sbb
lock
es
pop
fwait
movups
jbe
loope
push
es
loopne
jns
scas
cmpsl
dec
mov
daa
mov
lods
push
add
jge
mov
mov
and
mov
mov
cmp
insl
add
xchg
pop
js
stc
xchg
xor
xchg
sbb
hlt
jl
sahf
and
mov
rol
lret
lcall
pop
push
pop
cli
push
stos
mov
pop
dec
lahf
pop
cld
push
cmp
pop
mov
cmp
rol
lock
inc
iret
in
popa
xlat
mov
pop
add
cli
les
mov
mov
xchg
in
je
lcall
inc
fistpll
outsb
ffree
lock
arpl
jb
adc
aam
inc
cld
cmc
sti
mov
and
and
ja
std
add
pop
pop
sub
popa
mov
pop
ljmp
dec
in
and
push
mov
xchg
test
mov
scas
or
cld
sbb
fiaddl
or
test
lods
nop
jne
xor
insl
scas
rcll
jns
add
dec
neg
in
lahf
aad
jae
mov
int
loop
xchg
add
pop
jl
push
mov
stc
clc
mov
notl
cwtl
call
cwtl
xchg
xchg
pop
lcall
push
fsubrl
jns
pusha
pop
js
call
movsb
xor
jle
lods
outsl
bound
cmp
das
rorl
enter
ja
loop
loope
roll
push
and
enter
mov
inc
popf
xchg
in
adc
inc
mov
mov
xchg
pop
outsl
imul
mov
ret
push
cmp
bnd
lods
lods
stc
mov
fxch
sbb
mov
fisttpl
mov
adc
or
xor
mov
lret
and
iret
pop
pop
lea
test
lahf
gs
enter
xor
or
sti
or
xor
dec
add
xchg
icebp
mov
divb
ljmp
xlat
lock
jno
lds
adcl
pop
mov
std
push
mov
cs
rorb
push
adc
dec
jmp
movsl
test
xor
push
push
popa
xor
dec
cwtl
sub
mov
and
jmp
or
pop
mov
dec
and
lret
cwtl
add
jl
inc
push
and
dec
pop
rorl
mov
mov
mov
stos
fwait
rcr
push
push
subl
ret
add
push
addr16
sub
fwait
test
test
mov
mov
div
das
and
lahf
xchg
test
pop
lcall
fldcw
inc
pop
adc
repnz
push
js
fdiv
jae
outsb
out
jb
inc
add
outsl
popf
sub
imul
xchg
ljmp
and
mov
cmp
repnz
push
icebp
jno
xor
sub
pop
cwtl
scas
mov
cli
popf
movsl
or
enter
in
aad
addr16
mov
fisubrl
cmp
mov
xor
data16
mov
jmp
test
push
mov
xor
push
or
cmc
imul
xchg
mov
gs
fsub
out
aam
or
push
sub
xchg
sbb
inc
rcrl
flds
scas
cmp
xor
mov
fst
daa
stos
cmp
je
outsl
out
push
jmp
cmp
icebp
ljmp
ret
je
push
dec
pop
sbb
jmp
loopne
les
mov
je
loope
cmpsl
mov
xchg
js
mov
and
cli
jae
iret
mov
xlat
ljmp
mov
fidivrl
pop
mov
pop
or
js
jge
mov
push
jmp
sub
push
sub
cmpsb
inc
mov
outsl
or
add
push
mov
push
add
imul
mov
add
ljmp
call
mov
dec
pop
push
inc
pushl
movsb
pop
xor
push
push
inc
jg
idivb
js
in
jb
xor
outsb
subb
fidivs
adc
adc
pop
lahf
inc
xor
inc
andl
mov
repz
inc
cmp
icebp
and
and
xchg
fcompp
push
hlt
mov
xchg
add
mov
jo
cmpsl
pushf
stos
xor
pop
je
xchg
add
and
popf
stos
lahf
aad
sbb
ds
fisubrl
pusha
mov
jnp
xchg
in
lea
ds
stc
mov
or
push
xchg
pop
cmp
and
inc
cs
int3
mov
adc
or
inc
cmpsb
loope
push
xchg
fucomp
jge
leave
stos
xor
nop
int
xchg
rorl
xchg
xchg
push
xchg
xor
push
das
gs
jne
call
sbb
dec
mov
inc
inc
xlat
rol
aaa
xchg
jnp
mov
xchg
jecxz
add
and
mov
bound
insb
pop
imul
sub
lods
jnp
dec
mov
test
xor
es
add
sbb
lds
push
popa
scas
ret
das
cmc
aaa
stos
fistpll
push
pop
pop
sub
data16
clc
icebp
movsl
pop
ljmp
cltd
std
dec
scas
movsb
xchg
aam
jo
adc
pop
repnz
and
outsl
sti
mov
cmp
mov
jmp
xchg
or
dec
orl
cmp
dec
int3
add
cmp
repnz
std
mov
stos
fsubp
or
push
dec
lods
inc
cmpsl
je
inc
out
xlat
cmp
das
out
in
mov
jb,pt
js
movsb
loopne
push
push
clc
jge
aaa
shlb
dec
add
sarl
jge
pop
cmpsl
sub
fdivs
sbb
lds
int
mov
fstpl
or
push
bound
push
movl
adc
jp
gs
lahf
inc
aas
xlat
or
shrb
test
add
sub
das
test
xchg
shlb
xchg
push
aaa
add
jb
and
ret
sbbb
ss
rorl
xchg
mov
dec
xchg
sbb
jg
inc
pusha
sub
jl
xor
mov
push
dec
pop
sbb
out
lret
xchg
push
xor
dec
mov
dec
cmp
mov
push
jmp
jge
jp
mov
loope
je
outsl
sbb
jecxz
jne
xchg
sbb
call
lahf
lock
lcall
das
outsb
std
jne
nop
aad
mov
call
idivb
ret
xchg
out
cmp
pop
pop
cmp
out
jae
jb
les
sbbb
test
in
arpl
sub
iret
stos
loope
cwtl
push
cmp
or
xor
pop
mov
outsl
idiv
push
pop
pmaddwd
daa
mov
into
jl
push
push
loopne
and
clc
mov
or
or
outsb
xchg
pop
push
xor
mov
mov
jecxz
sbb
or
cmovl
imul
ret
iret
loopne
inc
fs
repnz
lea
in
rcrb
mov
sub
and
imul
andb
inc
jae
lret
dec
mov
xchg
cmpb
xchg
xor
loopne
adc
and
sub
andb
jae
inc
jp
lods
pusha
mov
jp
imul
and
cmp
add
dec
sarb
aas
addb
mov
push
and
mov
sbb
pusha
cmp
fstpt
rcr
cmpsl
shll
lcall
xor
xchg
sbbl
rcrb
dec
dec
ja
xor
bound
scas
stos
shlb
insb
aas
and
ss
mov
dec
subl
add
xor
pop
loopne
fcoml
xchg
adc
lahf
gs
sbbl
loop
popa
pop
and
jae
xor
sbb
rclb
dec
dec
push
sbb
in
fwait
mov
fistpll
cld
xchg
adc
out
stc
scas
jle
sbb
cmpsb
cmp
push
shl
es
dec
sub
and
dec
fdivs
cltd
pop
imul
inc
fs
pop
jns
sbb
jnp
lods
out
clc
fadd
jmp
inc
ja
popa
adc
shrb
push
pop
xchg
dec
sarl
mov
jno
stos
mov
xchg
fiaddl
pop
add
xor
popa
test
enter
mov
pop
or
lret
aad
inc
cmpsl
pop
arpl
pop
mov
cmpsb
sbb
sub
repz
test
xor
mov
jge
pushf
sbb
xorb
insb
jno
mov
mov
aaa
mov
filds
pop
jl
cmpsb
xchg
sarb
sub
std
and
rorl
xchg
pop
test
imull
fisubrs
or
cmp
xor
fimuls
incb
mov
ret
ljmp
fdivrl
movsb
adc
add
and
pop
cmc
out
pop
inc
enter
insb
xchg
test
stc
xchg
xor
pop
inc
mov
mov
popf
test
rolb
cmp
sub
or
outsb
jmp
mov
dec
into
in
sbb
or
mov
es
imulb
ret
or
xchg
and
addr16
and
and
pop
stc
dec
les
and
cld
test
mov
sub
pushf
mov
inc
repnz
test
int
repnz
push
mov
sbb
stc
push
ljmp
jp
pop
out
xadd
loope
lcall
inc
mov
xor
inc
test
pushf
sbb
test
xor
dec
adc
stos
stc
cmp
scas
int3
ret
jp
jle
andb
repz
jge
push
shl
xchg
and
mov
sbb
xchg
fs
sbb
adcl
adc
cs
bound
fdivrs
mov
mov
mov
dec
stos
xor
lret
mov
test
repnz
cmpsl
movsl
xchg
rol
pop
adc
cmp
outsb
jp
push
jno
nop
jbe
jecxz
sbb
push
and
out
xchg
popa
mov
dec
xchg
into
sbb
adc
dec
out
xor
pushf
jbe
xchg
xchg
sti
stos
pop
fadd
xor
fwait
lea
mov
jno
gs
into
fdivp
roll
clc
in
out
pop
test
lods
dec
loopne
dec
mov
addb
jne
push
aaa
pop
idivb
in
daa
add
data16
pop
shl
lcall
sub
mov
ret
xchg
adc
xchg
mov
mov
xor
adc
lret
das
add
ljmp
inc
push
loopne
or
and
mov
push
add
std
lea
lahf
mov
imull
outsl
ljmp
test
and
cs
into
mov
int3
pop
mov
xchg
rclb
jno
loop
lret
xchg
pop
xchg
cmp
inc
data16
lock
das
or
and
test
xor
inc
shrb
mov
std
leave
dec
fistpl
pop
sub
lods
adc
bound
cmpb
inc
aaa
test
in
iret
pop
mov
scas
inc
iret
lods
aaa
mov
push
andl
daa
cmp
inc
mov
adc
les
adc
push
daa
mov
imul
jmp
jecxz
aas
adc
dec
or
dec
fildll
out
cmpsl
pop
push
sub
clc
dec
ljmp
pop
out
pop
jno
je
orb
cmpsl
sbb
imul
cmp
dec
and
mov
push
mov
xor
jne
jne
mov
cs
cli
mov
fs
sahf
xchg
and
sub
bound
cltd
cltd
jno
fwait
sbb
mov
fistps
test
sub
test
cmp
sbb
outsl
jb
fbld
sti
fldl
sub
pop
jae
push
fstpt
pusha
xor
lods
aam
add
sub
sub
flds
and
into
and
lret
hlt
mov
cmpsb
sarl
aad
push
clc
xchg
xor
add
shr
mov
es
shll
mov
mov
mov
or
lahf
push
pop
sub
es
jbe
inc
out
imul
xchg
add
mov
mov
cltd
faddl
movsb
or
xor
mov
and
pop
push
fcmovb
add
pop
inc
pop
enter
ror
jg
mov
push
rcrl
mov
jge
adc
dec
stos
cli
popl
mov
sbb
mov
pushf
cmp
movsb
enter
imul
push
out
xchg
std
sbb
cld
push
rcll
je
dec
inc
pop
sarl
push
repnz
sbb
adc
and
sub
repnz
imul
push
adc
adc
or
sbb
xchg
dec
aad
mov
add
ss
hlt
sbb
add
iret
xchg
jge
add
sbb
jmp
pop
inc
jae
mov
test
mov
fsubrs
push
imul
stos
rcrb
adc
imull
pop
pop
mov
pusha
int
mov
cmpl
nop
jae
mov
icebp
add
lods
pop
mov
jnp
nop
adc
arpl
aad
xor
addb
add
cmp
cs
xor
lahf
outsb
out
or
lods
test
ss
in
pusha
mov
and
sahf
sub
or
cmp
subb
ljmp
mov
dec
push
cmc
pop
pop
enter
lea
mov
sbb
imul
dec
test
loopne
hlt
mov
add
call
movsl
inc
adc
pop
push
frstor
lds
into
jno
mov
xchg
sarb
adc
or
mov
xchg
shlb
stos
pop
decb
popa
xchg
push
jl
xor
hlt
and
stos
fstps
stos
adcl
clc
sub
imul
aaa
add
fists
icebp
sub
in
mov
sbb
mov
add
jno
stc
push
repnz
mov
loope
xrelease
pop
loopne
push
inc
out
jne
xchg
jge
repz
sub
clc
repz
scas
push
or
scas
and
mov
std
cwtl
sbbl
sub
in
loop
adc
ds
and
mov
or
insl
shl
stc
bound
adc
fdivp
loope
xchg
xchg
mov
pop
ret
inc
or
sub
dec
jne
xchg
cmp
outsb
out
dec
je
adcb
fdivrl
xor
cld
pop
pop
nop
dec
adc
push
fucomip
xchg
add
sbb
xchg
push
push
cmp
dec
mov
mov
adc
pop
add
dec
adc
mov
inc
arpl
or
pop
pop
xchg
test
js
and
fbstp
fistpll
aam
adc
aas
cld
inc
sub
adc
mov
fdivl
xchg
jae
sub
test
xor
aaa
or
adc
or
and
mov
sbb
jae
jge
dec
sub
cs
call
push
outsl
jecxz
dec
inc
xor
insb
loopne
mov
enter
fcomps
or
test
movsb
sbb
mov
xchg
es
ret
sbb
call
dec
push
stc
loop
repnz
push
cs
xchg
cmp
cmp
adc
int
and
push
or
push
xchg
mov
mov
push
sbb
test
or
movsb
xor
out
aas
jecxz
cmp
mov
mov
pop
scas
roll
fisttpll
ja
dec
or
loop
and
adc
dec
andl
cmp
jbe
adc
push
sti
and
iret
or
inc
dec
cmp
fsubs
pop
fdivrl
cmpl
cmpsb
in
shlb
sub
inc
jecxz
xor
pusha
dec
add
push
mov
mov
push
outsl
xchg
cmp
sbb
push
or
push
into
std
lahf
and
sub
int3
add
rcr
out
pushf
fcompl
or
ja
add
push
and
xchg
add
xchg
test
insl
fiaddl
lcall
xchg
jo
sbb
pop
xor
sar
cltd
hlt
xor
cmp
outsl
xchg
inc
xlat
fisubrs
jne
cmp
xor
push
jnp
imul
ss
int
push
insb
js
loope
mov
shll
xlat
testl
pusha
sahf
test
fsubl
aas
jo
inc
push
adc
imul
pop
jmp
dec
adc
pop
jmp
pusha
test
fists
repnz
addl
ds
xor
stc
add
jp
cmp
xchg
push
and
xor
jbe
cli
sbbl
mov
mov
or
xchg
enter
repnz
add
xchg
jecxz
xchg
pop
mov
pop
out
insb
int3
call
outsl
adc
stos
or
fs
xchg
push
pushf
push
cmp
and
inc
nop
xchg
cmp
cmc
pop
rorl
arpl
test
lods
and
sbb
setnp
sub
fdivp
mov
push
cmp
bound
mov
jg
adc
pop
mov
aam
add
push
rcll
int3
jb
xchg
lods
xor
iret
mov
lret
fldl
das
push
push
stc
inc
ss
push
seto
push
mov
lock
jbe
xchg
stos
icebp
nop
rcrl
cwtl
bound
push
dec
mov
repz
or
cmp
and
pop
jp
mov
insl
fcomp
icebp
sub
adc
cmp
in
repz
mov
mov
out
jg
push
outsl
shll
stos
sbb
out
pop
sub
test
imul
mov
lock
cmp
popa
push
add
pop
mov
jae
and
and
mov
jg
adc
subb
sbb
test
push
stos
pusha
add
int3
scas
and
sbb
dec
dec
shrb
mov
lret
movsl
mov
xor
mov
pop
mov
jecxz
jbe
in
test
leave
xchg
mov
push
mov
decl
into
out
lahf
aas
loope
inc
mov
and
pop
mov
jns
shll
mov
ss
popa
cwtl
pop
stos
jl
jb
int3
xchg
jnp
das
xchg
insb
mov
lds
daa
mov
jns
cwtl
jns
push
xchg
and
ret
scas
dec
dec
clc
dec
lods
xchg
cmp
sub
push
lret
jns
dec
xor
xchg
pop
cmp
adc
push
fstpl
out
cmpsb
shll
push
xor
mov
add
fmuls
inc
bound
pusha
xlat
mov
std
in
mov
mov
jnp
sbb
xchg
pop
aas
out
xchg
fcmovb
jns
daa
or
in
pop
inc
mov
jns
call
add
push
stc
dec
aam
pop
sub
hlt
mov
mov
lea
pop
jmp
lds
cmp
mov
pusha
int3
dec
dec
addl
divb
gs
fstpl
jecxz
jne
cld
or
dec
jg
mov
gs
mov
fnstenv
int
shrb
mov
or
push
loope
lcall
test
xor
cli
rorl
pop
xchg
cmp
stc
fistl
dec
mov
cmpsb
or
mov
push
or
push
jno
in
cs
gs
sub
and
jecxz
or
mov
insb
stc
mov
cld
jb
mov
xor
add
pushf
dec
add
add
push
and
lock
les
mov
lds
insl
stos
fmull
mov
mov
xlat
aas
orl
sbb
das
lds
orps
add
lock
mov
mov
jle
adc
sbb
mov
sub
push
sbb
daa
mov
dec
leave
push
andb
pop
pop
sub
xchg
jg
out
sbb
push
cmpsb
fwait
sub
and
fwait
out
dec
enter
in
cmp
loopne
fs
mov
push
inc
pop
leave
xchg
repz
dec
mov
jns
jbe
scas
pop
jae
cs
outsb
aas
xor
jle
lcall
inc
adc
aad
jmp
sub
pop
icebp
repnz
dec
lea
sbb
inc
push
push
add
ds
cmp
pop
in
xchg
xchg
fsubrp
arpl
adc
pushf
add
or
sbb
pop
push
ret
jo
out
dec
or
pop
out
xor
imul
adc
sbb
add
aaa
lods
sti
xlat
icebp
lods
mov
fbstp
xlat
xchg
negb
jb
sub
leave
lds
dec
jge
int3
dec
dec
mov
divb
loopne
cmp
adc
mov
sbb
xor
or
addr16
test
ret
cmp
pusha
cmp
adc
xor
fdivl
cld
stos
xchg
jb
push
and
mov
jno
sti
xor
pop
lahf
mov
jbe
jg
pop
mov
xlat
ds
addb
test
or
jmp
mov
xchg
push
and
cmpb
cmp
stos
jbe
les
xchg
pop
insb
xor
adc
mov
inc
or
das
pop
loope
dec
dec
sub
mov
mov
cmc
int3
push
jl
add
test
aad
js
xchg
jae
outsb
inc
jmp
mov
imul
xchg
rcrb
lds
xor
push
int
aad
xlat
and
fisubrs
hlt
cmp
or
cmp
lods
jbe
xchg
push
rcrb
pop
mov
adcb
mov
and
xchg
popa
aas
rolb
pushf
cmp
lret
hlt
mulb
sub
std
mov
mov
lcall
or
push
mov
insb
lods
test
lds
stos
mov
push
into
push
inc
popa
xor
fmuls
inc
cmp
ss
jae
jns
sbb
push
shll
shlb
mov
cmp
mov
out
pop
shl
insb
sub
outsl
movsl
cmpsb
in
dec
or
aaa
mov
or
cmp
orl
test
mov
mov
fwait
push
int
mov
xor
or
sub
dec
mov
je
or
in
mov
inc
adc
mov
subb
cs
loope
mov
or
mov
enter
mov
dec
cli
lods
leave
pushf
shlb
lret
add
in
jne
push
repz
int
cs
inc
xorps
or
aaa
loope
cwtl
add
int3
xchg
xlat
mov
push
shll
sub
mov
shrb
pop
and
inc
sub
rcrb
or
mov
jg
mov
ret
mov
das
lahf
loop
in
dec
inc
lods
xchg
jmp
dec
pop
inc
cmp
add
pop
mov
cmp
cmp
mov
cmp
or
xor
cld
imul
sub
out
add
or
sbb
es
lods
xchg
pushl
popf
push
fmull
dec
push
das
cmp
je
ja
fildll
xlat
mov
ja
inc
fnstsw
int
call
loope
clc
es
inc
pusha
stos
loope
push
popa
das
jg
pop
out
mov
int3
adc
add
ret
shlb
mov
bound
data16
lea
push
xlat
movsl
xchg
fnstenv
mov
arpl
mov
rcrl
leave
imul
xor
subl
cld
pop
sub
fsub
sti
jo
ret
loopne
bound
jg
cli
ds
pop
jge
jg
loopne
inc
xchg
ficomps
enter
repz
dec
lock
or
in
mov
cltd
pushf
orb
scas
cmpsb
cmp
jb
sub
jbe
jle
fs
add
jle
mov
adc
mov
cmp
ret
ret
int
jp
xchg
sbb
xchg
fsubs
aas
cmpsb
loope
xchg
push
adc
ret
cmp
mov
and
pop
or
push
or
pop
add
subb
sbb
gs
js
xchg
mov
sbb
jp
out
ljmp
repz
pusha
in
xchg
xchg
add
js
or
mov
cmc
cs
and
clc
push
ret
lds
dec
fisubrl
jmp
and
add
and
sub
roll
nop
iret
or
popa
dec
or
push
ja
push
fcomps
test
push
and
xchg
jg
fimuls
das
xor
dec
lret
sarb
dec
gs
mov
mov
icebp
imul
xchg
mov
and
in
int
cmp
push
inc
add
bnd
jl
dec
in
adc
aad
xchg
mov
orb
in
fisttps
popa
cli
outsl
clc
in
negb
jl
jecxz
roll
js
inc
into
ljmp
cmp
adc
cmp
fisubrl
lock
rolb
push
sbb
icebp
jecxz
hlt
mov
inc
push
add
lret
push
xchg
mov
xor
mov
jmp
add
ljmp
imul
test
pop
mov
sub
xor
add
shlb
js
push
pop
mov
in
imul
and
add
ds
fnsave
lahf
dec
test
inc
lock
xchg
push
mov
sar
mov
push
outsb
push
mov
bound
mov
fcmovnu
mov
insb
dec
sarb
daa
jp
mov
add
pusha
jae
jns
sbb
daa
cltd
xchg
sbb
sub
ljmp
subb
test
aaa
fisttpll
loope
jae
pusha
sub
insb
pop
aad
inc
inc
adc
aad
jae
dec
dec
jnp
jmp
lods
adc
inc
out
push
aaa
push
cmpsb
add
adc
and
cmpsl
jmp
bsr
mov
jge
in
mov
adc
movsl
xchg
xor
cmc
in
arpl
pop
divl
xchg
fldl
push
inc
sub
out
repz
icebp
iret
sub
pop
fucomp
stos
mov
adc
out
and
je
adc
cmpsb
movsb
inc
imul
ret
fwait
lds
mov
pop
sub
fwait
leave
jp
jnp
dec
xor
pushf
mov
adc
sbb
and
and
mov
pop
push
das
cmpsl
out
es
pop
adcb
fbld
adc
mov
rorl
jmp
pop
daa
mov
bound
sub
add
in
xchg
sub
mov
jb
scas
pop
dec
push
lods
mov
mov
xchg
call
xor
iret
mov
loop
inc
gs
jo
imul
roll
pop
bound
das
mov
adc
dec
pop
decb
mov
dec
out
pop
adc
outsl
mov
or
pop
ret
xchg
jg
out
mov
imul
adc
jae
push
repnz
push
xchg
mov
fdiv
jg
push
jmp
add
mov
mov
pop
mov
push
pushf
fdivrp
or
mov
mov
dec
lcall
adc
cld
inc
xchg
test
mov
aad
lret
ss
or
out
jb
push
shlb
cld
push
mov
xchg
adc
outsb
cmp
mov
loope
or
sbb
push
push
cmp
jno
pop
or
subb
cwtl
enter
mov
aam
in
enter
pop
andb
add
sahf
fwait
dec
rorb
mov
out
sub
or
cmp
or
sbb
ja
jbe
mov
mov
jle
outsb
out
and
lret
lea
cmp
xor
sub
inc
jb
adc
add
ljmp
or
imul
in
jl
clc
rcll
mov
xchg
cwtl
ss
lret
daa
xor
adc
icebp
loope
and
js
xor
test
push
mov
pop
mov
pop
inc
fisttps
dec
jns
ss
aam
sub
add
cmp
arpl
call
test
daa
mov
icebp
cli
int
pushf
xchg
xor
cmp
or
jle
push
icebp
pop
mov
pop
mov
aam
cmp
cld
mov
mov
sahf
cmp
push
pop
imul
cwtl
pop
push
adc
movsl
divb
pop
mov
cmp
xlat
push
adc
aad
roll
mov
xchg
cmp
rorl
clc
test
inc
pop
and
inc
and
mov
push
pop
push
out
sub
cmp
nop
int
icebp
ret
pop
jl
and
mov
data16
fsubrs
sbb
bound
cmc
mov
dec
bound
inc
push
dec
sub
mov
ficoms
movsb
sub
sahf
out
mov
mov
or
std
fisttps
lods
pop
mov
inc
sub
ret
cs
or
lret
cmovge
lds
fidivrl
mov
testl
fidivs
cltd
dec
repz
mov
ljmp
jns
sub
xor
pop
push
pop
clc
and
addr16
cmpsb
mov
add
sub
dec
push
mov
mov
push
insl
test
outsw
xchg
ja
xchg
jno
mov
je
das
imull
jg
pop
ror
jl
insl
ljmp
movsb
pop
into
mov
loop
lahf
cwtl
rcrb
xor
pusha
stos
mov
stos
jg
fcmovu
dec
xchg
cmp
push
ficoml
popf
imul
sub
addl
mov
scas
mov
imul
xor
xorb
sub
ret
xchg
incb
sti
dec
mov
sub
mov
mov
jnp
push
mov
jns
xor
and
pop
jge
mov
out
jmp
insb
adc
and
jns
inc
mov
bound
pop
aas
inc
popf
ret
fbld
xor
or
mov
push
push
scas
imull
test
dec
sub
popf
notb
ss
push
xchg
cmp
aad
mov
sub
add
add
mov
aam
sbb
test
inc
xchg
inc
lods
incb
mov
mov
test
sbb
mov
adcb
in
xor
pop
aam
push
fisubl
push
lea
inc
pop
mov
push
add
leave
sub
ss
mov
or
mov
jno
pop
mov
mov
push
dec
mov
dec
cmpsb
in
movsb
divl
test
mov
scas
lea
aam
sahf
mov
add
push
xor
mov
mov
mov
je
fwait
jg
ret
inc
loope
or
movsl
dec
jmp
push
mov
mov
decl
std
es
iret
adc
int
or
add
jge
push
in
xchg
or
mov
movsb
xlat
adc
pushl
aad
enter
adc
pop
iret
pop
push
loop
in
mov
push
shlb
add
nop
into
push
addl
loopne
add
jge
or
push
lds
mov
subl
push
imull
pop
js
dec
sti
push
mov
outsb
pop
mov
lds
cmp
or
dec
mov
in
sub
xorl
sub
dec
jecxz
push
dec
into
int3
stos
cwtl
sbbb
fnstcw
ret
ljmp
mov
test
jo
pop
cmp
adc
lds
jl
std
inc
and
mov
xor
addl
cltd
je
icebp
mov
mov
adc
and
enter
aam
stos
ret
or
lcall
out
enter
sbb
or
mov
pushf
pop
inc
inc
cmp
sti
cs
xchg
jno
imul
imulb
pop
out
or
je
shrl
loopne
jb
inc
sarl
outsb
xorb
xchg
shll
sub
cltd
xor
cmpsb
mov
sub
in
push
test
mov
push
jmp
mov
cwtl
and
push
js
fdivs
pop
insb
mov
cmp
rcl
push
out
and
add
mov
test
iret
push
xchg
sbb
mov
out
mov
push
pop
shlb
scas
clc
mov
xor
push
dec
inc
jmp
outsl
incl
sti
sarb
rol
fsubrs
lds
pop
push
nop
cmpb
mov
pop
pop
adc
jno
inc
mov
xchg
mov
mul
push
test
popa
lcall
sbb
jns
outsl
jle
pop
dec
xor
std
mov
mov
mov
rcl
lods
mov
mov
dec
sbb
lahf
mov
sbb
xor
in
xor
xchg
jmp
xchg
xchg
cmpsb
sbb
dec
lods
adc
xchg
sub
movsl
add
xlat
in
int
mov
pop
pop
sbb
dec
and
or
push
mov
dec
imul
mov
inc
subb
sbb
xchg
mov
xchg
pop
rorb
pushf
push
sahf
adc
cld
mov
fiaddl
cmp
pushf
sub
lret
push
ret
out
mov
xor
and
int3
xor
xchg
pushf
xchg
push
scas
add
roll
out
lods
sti
and
pop
lret
je
sbb
cwtl
pop
sbb
nop
call
jno
or
mov
push
test
mov
sbb
fs
pop
mov
leave
mov
in
lods
mov
mov
push
lea
js
push
clc
sbb
lods
addr16
sbb
insb
imul
mov
ljmp
sti
test
and
jp
andl
enter
and
movsb
push
jo
in
pop
loopne
cmpl
test
inc
aas
xchg
jecxz
mov
es
push
int3
xchg
push
insl
dec
fidivrs
add
call
cmpsb
inc
mov
sti
jb,pt
add
int3
mov
mov
mov
xorl
js
jae
cmpsl
pop
mov
test
or
rcll
pushf
leave
mov
jmp
mov
std
test
sti
stc
in
xor
jecxz
xor
add
dec
cmp
xor
pop
outsb
adc
aaa
test
cwtl
push
cmp
cltd
xchg
pop
insb
mov
cmp
aas
adc
dec
and
pop
fisttpl
pusha
mov
rcrl
inc
adc
fldl
stos
and
mov
jp
mov
mov
push
pop
test
pop
inc
in
in
cmc
leave
or
andl
push
cmp
xchg
movsl
cli
loop
xlat
data16
lahf
movsl
push
stc
stos
adc
push
dec
xor
or
cltd
add
jge
pop
cmp
movsl
mov
push
mov
adc
out
pop
testl
int3
aam
mov
aam
push
mov
adc
mov
push
mov
cmpsb
xchg
or
fstpt
mov
clc
fsubl
jnp
xchg
scas
lods
shlb
push
adc
js
in
mov
scas
mov
dec
test
xor
inc
lret
test
xlat
popa
push
sub
add
mov
xchg
dec
xchg
test
xchg
jecxz
aas
sub
sahf
cwtl
push
insb
fwait
aaa
or
in
mov
fnstenv
enter
jne
scas
jne
idivl
adc
out
sahf
rcr
icebp
sbb
sbb
add
cmp
mov
add
rorl
std
add
mulb
xchg
xor
cmp
scas
xor
push
mov
fsubrs
or
pusha
adc
sahf
xchg
xchg
mov
add
loope
jae
lds
cmp
stc
iret
jl
fsts
xchg
adc
xor
sbb
lods
xchg
iret
data16
adc
mov
adc
or
pop
cmp
sub
mov
cmp
or
xchg
lods
imul
sbb
and
es
inc
arpl
pusha
or
mov
sbb
ss
inc
and
push
xor
mov
flds
jecxz
call
inc
in
sbb
rolb
fbstp
inc
cltd
sub
jbe
pop
mov
inc
cltd
jecxz
pop
inc
adc
rorb
sar
daa
sti
rclb
int
jp
xchg
lret
mov
push
sub
ret
mov
popa
or
pop
mov
jle
cmp
jecxz
hlt
xor
fwait
ja
cmp
les
loope
push
jmp
rorl
push
mov
idivl
cld
pop
sub
into
adc
andl
cmp
movsb
mov
cli
push
pop
movsl
out
xchg
popa
xchg
mov
leave
pop
jbe
mov
or
movsb
call
xor
shrl
pop
in
pop
xor
fdivrs
inc
leave
repz
loopne
jb
mov
loop
outsl
insb
ret
lcall
jp
pop
lock
sub
fcmove
jge
push
sbbb
push
ret
sarl
sub
push
bound
subb
lret
inc
pop
mov
vsqrtps
decl
add
les
jmp
mov
mov
push
push
lods
push
push
daa
mov
adc
repnz
aaa
pop
mov
jae
lods
push
cld
jmp
data16
mov
and
mov
and
hlt
clc
jb
int
lcall
add
dec
cli
stos
push
mov
sbb
add
dec
and
xchg
and
loopne
mov
jnp
jle
pop
jbe
adc
xor
movsl
popf
lret
cmp
loopne
btc
jbe
mov
push
movaps
aad
adc
xchg
sub
sub
or
aaa
mov
stos
inc
sub
call
sub
lcall
ret
notb
mull
cmpsl
mov
xlat
ljmp
add
xchg
pop
jno
enter
out
fbstp
sar
test
dec
mov
push
push
cmc
fcmove
repz
inc
push
mov
in
jg
mov
xor
xchg
xor
mov
xor
mov
call
mov
xor
or
sub
repz
out
push
jmp
pop
dec
xchg
outsl
rorb
and
out
or
aam
sbb
add
xchg
cmp
subb
sub
loop
mov
mov
ss
out
dec
push
xor
adc
and
push
inc
cmpsb
add
mov
mov
mov
mov
and
aaa
jp
cmp
mov
xchg
or
hlt
fstpt
in
sub
sbb
dec
sub
add
testl
mov
pop
ret
movl
call
aaa
adc
into
pusha
pushf
mov
mov
cmpb
ficoml
or
mov
cmp
pop
mov
out
adc
or
movsb
jmp
sub
and
popf
xchg
sub
int
ja
insb
das
pop
pop
mov
mov
sub
stos
fwait
pop
push
jns
test
inc
add
pushf
dec
cmp
sbb
jmp
xchg
insb
sti
push
loop
jmp
jecxz
mov
pop
insb
les
dec
jae
add
in
cwtl
mov
es
xchg
and
push
in
add
add
add
fnstsw
or
and
lea
xchg
test
dec
je
cmpsl
insl
jg
jl
jmp
sbb
mov
out
pop
adc
dec
jge
sahf
adc
stc
bound
inc
je
inc
dec
addr16
mov
lcall
dec
add
aad
jae
xor
nop
inc
push
inc
popa
sub
xchg
jmp
insb
test
fs
xor
mov
int3
push
pop
pusha
xor
mov
adc
push
mov
mov
ljmp
pop
and
loope
psllw
bound
scas
mov
call
xor
out
and
cli
xchg
mov
inc
shrb
or
scas
imul
push
sbb
xchg
adc
jl
inc
adc
push
fistpll
repnz
adc
es
les
leave
xchg
pop
out
daa
mov
stos
daa
jle
repnz
iret
add
lods
sbb
fimuls
sbb
rcrb
and
fcmovnu
insl
scas
cmp
lcall
mov
add
sbb
pop
mov
dec
cmp
mov
mov
enter
fimuls
xor
push
out
test
xlat
mov
pop
lds
aaa
andl
andl
push
pop
insb
and
pop
sbbl
push
xchg
dec
sub
add
nop
leave
scas
fisttpll
push
lcall
movsl
lods
xchg
test
pop
out
aam
test
xchg
mov
jmp
xor
jbe
dec
cs
add
mov
mov
mov
mov
ljmp
shlb
mov
lods
xor
xchg
sbb
test
xor
push
ljmp
out
xor
push
sub
mull
cmp
dec
push
mov
jg
mov
sti
adc
sti
cwtl
cmp
clc
test
insl
loop
pop
test
add
lcall
lock
in
scas
mov
or
mov
dec
mov
out
out
push
scas
and
cmp
jle
jo
mov
call
lock
push
sbb
add
movsb
and
cld
cmp
push
jl
mov
mov
int3
cmp
in
or
dec
mov
imul
loope
sar
add
and
sbb
fcmovnb
dec
lea
mov
mov
ss
int
push
fidivl
cmp
lcall
lcall
out
repz
out
inc
cwtl
iret
sub
lock
and
and
add
mov
leave
pop
cs
xchg
inc
bound
sarb
sbb
in
mov
loop
in
jae
mov
jecxz
in
nop
in
pop
clc
mov
shrl
pop
xchg
out
jl
fistps
lcall
mov
testl
imul
cwtl
pop
lock
dec
and
mov
pop
fnsave
xchg
dec
mov
in
mov
sti
idivb
or
repz
dec
and
in
aam
xchg
inc
lods
jne
xor
ret
jnp
or
add
lock
sbb
push
cltd
sub
jnp
and
and
push
jne
xor
pop
push
cmp
push
cmp
std
mov
cmc
loopne
mov
stos
inc
adc
nop
mov
add
push
push
adc
lret
repz
test
je
cmpsl
fildl
loop
movb
xor
adcl
dec
cmp
imul
and
cmp
std
or
ror
fwait
inc
mov
mov
sti
mov
or
mov
mov
scas
mov
sarb
sbb
ljmp
les
insb
mov
mov
inc
in
cmp
ret
aad
pop
aaa
add
pusha
dec
adc
xchg
sbbl
xchg
test
cmp
insl
fdiv
mov
inc
jmp
roll
mov
jbe
ja
add
sub
add
mov
jp
xchg
fcmovnbe
fwait
xchg
lods
cmp
add
iret
cld
push
ds
filds
or
pop
cli
fucomip
jecxz
dec
ficoms
or
nop
cmc
lcall
das
std
out
or
and
jl
push
insl
rcll
decl
push
call
cwtl
push
xlat
out
enter
out
or
jb
add
or
xchg
xorb
mov
jl
dec
add
xor
mov
in
pop
repnz
or
xchg
stos
cli
mov
xchg
cli
sbb
or
xor
pop
incb
jns
xor
cmp
xchg
dec
add
add
dec
add
pushf
sbb
aas
ja
cmc
or
xor
jnp
inc
and
or
repnz
leave
push
mov
movsb
clc
xchg
jmp
pop
lock
mov
pop
into
mov
into
mov
scas
cmp
sbb
cmp
gs
jbe
pop
rcl
sub
cltd
pop
int3
shl
xchg
or
jns
in
mov
sbb
test
push
or
cmp
fdivrp
fstpt
inc
lock
pop
jno
and
stos
int
dec
cmp
mov
sub
clc
inc
inc
jae
mov
sbb
xchg
gs
or
loopne
jne
mov
xchg
mov
xor
sbb
mov
or
out
inc
and
jno
frstor
xlat
pop
xor
fs
mov
sahf
jmp
mov
and
out
jae
out
test
lret
xchg
enter
enter
lret
add
mov
dec
jae
adc
and
imul
hlt
jo
xor
xor
jg
int3
stos
push
dec
mov
inc
jmp
rol
push
mov
cmp
mov
fdivrs
leave
movsl
or
jg
movsb
xor
adc
mov
jnp
dec
insl
xor
cmp
std
test
jns
mov
call
sar
push
movsb
test
mov
add
jb
adc
xor
fimuls
gs
ds
loope
inc
mov
mov
lcall
jns
shlb
jno
scas
movsl
mov
cmc
and
dec
push
dec
loopne
fsubl
scas
cmp
mov
testb
jle
sub
test
jmp
cmp
dec
mov
sbb
dec
sub
lret
lds
hlt
and
test
mov
mov
inc
xchg
jle
movsb
nop
into
push
inc
mov
mov
mov
inc
les
cld
jg
insl
outsb
pop
imul
sub
insb
pop
pusha
loop
out
push
inc
cmpsb
xchg
fwait
sahf
mov
jo
add
insb
add
mov
and
mov
in
ss
ret
mov
cmpb
mov
and
pop
call
xor
aam
dec
and
and
arpl
mov
in
sbb
rclb
out
jmp
mov
or
adc
inc
jge
jecxz
in
jge
cmpsb
test
sub
in
insb
cld
jl
shl
mov
sarl
adc
jnp
lods
sbb
sub
movl
addl
and
scas
sahf
dec
jbe
push
xchg
and
test
push
pop
popa
in
sub
push
mov
and
pop
jae
mov
mov
not
xlat
xchg
imul
jne
fbstp
dec
and
cltd
xor
test
inc
push
scas
mov
aaa
cmc
push
jbe
lret
test
test
mov
inc
adc
imul
pusha
push
mov
aam
xchg
mov
aam
imul
mov
sbb
pop
pop
popa
add
in
aam
ds
pop
cld
cwtl
cmpb
adcb
popf
pop
push
imul
stos
mov
insb
mov
std
xor
mov
cmc
enter
mov
cmp
je
xor
js
mov
xlat
ds
mov
nop
sbb
sti
lds
cmp
sbb
cmp
mov
scas
ds
cmp
stc
jg
jmp
test
mov
icebp
sbb
icebp
mov
iret
in
loop
cltd
mov
push
arpl
aad
and
and
sbb
imull
mov
cs
sub
enter
cmpsb
scas
mov
nop
xchg
int3
inc
xor
cmp
or
sub
push
imul
jg
lcall
pop
clc
js
lds
cmp
nop
sti
xor
cli
test
lds
and
push
xor
inc
jg
push
subl
push
or
push
cmp
loope
out
call
popf
lds
insl
xchg
mov
add
mov
adc
inc
xor
daa
xchg
cmp
lcall
jns
sti
add
xor
sub
loopne
loop
push
xor
mov
or
daa
das
sti
mov
sub
mov
sub
jb
pop
mov
test
jp
call
es
or
adc
rcl
sar
stos
lods
push
adc
add
or
cmp
int
cs
out
shlb
les
lods
test
or
adc
xchg
adc
lods
jecxz
insl
inc
addr16
jmp
adc
inc
inc
loope
xchg
roll
mov
jecxz
mov
cmp
fdivrs
ja
push
add
mov
xchg
and
cltd
int3
or
test
enter
mov
aas
dec
push
inc
sbb
mov
mov
repz
xor
jecxz
push
shrl
bound
or
divl
add
jo
cmp
addr16
jae
sar
ss
or
ret
subl
sbb
jno
mov
daa
jle
bound
cmp
lcall
mov
pop
rcll
inc
xorps
lods
rol
inc
mov
clc
in
pop
sub
cmp
mov
add
decl
subb
subl
xchg
repz
sbb
outsl
sub
ficoms
or
hlt
addl
cmp
fsubrl
cmp
dec
xchg
out
gs
inc
test
dec
jg
mov
cmp
mov
shr
das
loopne
sub
adcl
add
int
fnstcw
call
loopne
ss
mov
mov
xorl
cmc
add
cwtl
lea
sub
push
rolb
cmc
sbb
mov
push
push
and
and
call
adc
pop
lods
adc
dec
insl
ja
push
lds
iret
out
adcb
xchg
es
sbb
jb
xor
mov
xchg
mov
test
outsb
xor
ret
sbb
mov
imul
cltd
and
int3
pusha
popa
pop
push
hlt
cmp
adc
dec
xchg
mov
into
sarb
aas
push
cs
mov
mov
outsb
shll
std
outsl
ss
or
lret
outsb
pop
mov
adc
jns
test
or
ret
xor
fwait
push
fwait
adc
shll
out
jg
outsb
pop
pop
lret
add
and
icebp
out
jle
sahf
loope
gs
mov
inc
push
iret
mov
jnp
mov
stos
call
jo
iret
mov
das
adc
dec
in
pop
lret
imul
pop
dec
je
roll
pop
push
sbb
loop
push
xor
and
xchg
cs
jmp
pop
ljmp
xchg
push
loop
pop
rcrb
jp
adc
sub
pop
inc
lods
jns
inc
jg
dec
ss
mov
or
pop
push
bound
iret
mov
call
mov
or
scas
aam
mov
add
sub
inc
xor
mov
push
mov
pop
inc
fwait
fs
rcrl
inc
jg
cmc
inc
sbb
and
inc
les
mov
mov
fisubrl
stc
sarb
fsubp
pop
mov
cmp
pop
pop
lret
push
xchg
push
popf
cmpb
arpl
cld
push
or
mov
mov
xchg
xchg
or
addr16
mov
mul
xchg
push
mov
mov
jp
sub
loopne
in
addr16
sub
daa
jp
mov
xlat
sbb
divl
aam
js
pop
jb
mov
or
cltd
out
xor
mov
out
scas
stc
jb
and
mov
dec
rorl
jg
inc
sbb
xchg
mov
pop
int
push
xor
mov
xor
ljmp
or
xchg
imul
aaa
sbb
hlt
je
ret
mov
push
inc
and
in
imul
dec
sahf
in
and
xorl
lds
push
cli
ficomps
adc
push
jns
js
jne
pop
sub
cwtl
std
mov
pop
rcrb
fcmovnu
lret
push
xor
enter
dec
aad
pop
pop
mov
cmp
sti
scas
int3
sbb
rclb
adcl
inc
cmp
push
addb
cld
sub
lahf
cld
cwtl
int3
sub
loopne
xchg
lahf
dec
adc
cltd
fwait
mov
popf
mov
sbb
cmpl
imul
test
dec
pop
inc
leave
mov
test
lds
add
in
repz
fcomps
lret
movsl
inc
xor
sahf
daa
test
mov
cwtl
lds
insl
sahf
test
sbb
lcall
mov
shlb
shll
clc
insb
cmp
inc
test
or
xchg
dec
sbb
add
popf
sbb
xchg
adc
cmp
rcrl
or
outsb
jo
inc
pop
and
push
int3
push
or
sqrtps
shl
add
mov
cmpsl
sub
jp
jns
mov
cld
cmp
out
cli
mov
aam
and
fsubp
sbb
and
ror
dec
cltd
xchg
jns
les
je
cli
in
jmp
pop
in
dec
clc
int
sub
aad
dec
out
mov
xchg
test
lods
dec
into
shr
es
in
pop
xchg
repz
lods
fidivs
dec
jmp
jg
das
xchg
lock
sarb
fcoml
cmp
mov
call
scas
popaw
xor
test
or
jbe
push
sub
lea
push
fcmovnu
daa
cmc
loope
gs
adc
push
gs
sub
ss
mov
popf
mov
mov
icebp
sub
add
std
cmp
mov
scas
xorb
push
dec
inc
repnz
cwtl
daa
jge
imul
cmp
sub
pop
test
cmpsb
popl
add
insl
mov
fcompl
sbb
xchg
loope
xor
pop
inc
and
mov
arpl
inc
inc
inc
push
push
sahf
add
inc
jne
in
xchg
or
pop
xchg
je
push
test
pushf
mov
lds
sbb
and
mov
pop
mov
pop
sahf
out
xchg
mov
jae
sub
push
xorl
sub
repnz
push
or
adcl
stc
movsl
stc
add
xlat
jg
xchg
mov
mov
xchg
dec
mov
add
sbbb
into
jg
mov
adc
sbb
addb
dec
dec
jmp
popf
fsubrl
ret
mov
movsl
out
ljmp
cmpsb
pop
add
jb
hlt
test
mov
sbb
mov
pop
add
sub
pop
push
xor
add
dec
push
idivl
cmp
pop
and
xchg
mov
dec
xor
pop
test
dec
mov
fcomps
pop
fistpll
fadd
mov
xchg
xlat
jnp
fistl
arpl
pop
jmp
loop
lods
dec
popf
out
cmp
mov
jg
sub
mov
cmp
cmp
jmp
dec
cmpsl
hlt
xchg
mov
mov
inc
add
in
sti
es
adc
add
inc
lret
ja
push
push
sbb
arpl
jge
pop
add
ljmp
fwait
ja
sbb
in
aam
adc
movsl
inc
fistpl
dec
mov
mov
scas
inc
mov
dec
call
dec
push
ja
ja
mov
sub
das
or
jne
inc
out
into
cs
mov
jmp
loop
mov
push
stos
lahf
mov
jl
xor
push
dec
ljmp
call
mov
leave
aam
iret
cmp
aaa
rclb
adc
mov
sbb
daa
lret
cld
cmp
aad
xlat
or
pop
stos
push
ja
jmp
mov
and
shll
push
sub
fxch
pop
inc
push
cwtl
stos
int3
insb
push
scas
pop
pop
add
faddp
roll
lods
push
pextrw
jp
imulb
jl
lcall
scas
in
arpl
dec
push
xor
mov
jbe
inc
shlb
daa
imul
enter
pop
in
scas
out
test
pop
xchg
movsb
cmpsb
jo
mov
call
jge
je
aaa
dec
aam
sbb
sar
sub
outsl
les
sbb
jp
frstor
cmc
aam
icebp
es
cmp
xchg
add
sub
add
dec
push
sarl
int3
ret
mov
lret
or
int
mov
pop
jmp
dec
outsl
xor
pop
xor
popa
icebp
jge
iret
ret
movsl
add
and
hlt
inc
push
xchg
sub
loopne
lds
int3
into
sub
ljmp
rorl
adc
pop
imul
daa
rcrb
adc
mov
fidivl
xor
call
cmp
stos
movb
fs
cmpsl
dec
mov
scas
inc
jne
mov
pop
pop
arpl
jne
out
sub
pop
sub
sub
iret
dec
sbb
sbb
arpl
mov
mov
adc
repnz
addl
jno
pop
jge
jmp
and
xchg
xchg
js
loope
lods
in
and
ss
lods
ftst
xchg
xchg
scas
into
push
jno
aad
pusha
sbb
jno
push
ds
scas
mov
lods
lea
out
pushf
jnp
ret
sbb
inc
mov
lahf
cmpsb
outsl
pop
dec
mov
outsb
add
sbb
lcall
pop
mov
loope
mov
filds
push
ljmp
aaa
mov
outsl
jecxz
iret
xchg
cld
cld
and
inc
loopnew
inc
ret
and
jle
and
call
lods
adc
mov
ds
pusha
movl
push
add
sbb
inc
idivb
sahf
lods
imul
nop
add
sbb
cmpsl
pop
repnz
mov
xchg
clc
or
dec
outsb
scas
mov
sbb
push
sbb
shll
or
fistpl
xchg
xor
mov
arpl
in
cmp
inc
xchg
sbb
add
scas
and
loop
dec
daa
jb
inc
je
lds
ljmp
mov
pop
inc
or
sub
leave
jp
mov
xor
mov
mov
mov
xor
and
movl
insl
adc
jl
adcl
int
jmp
xor
in
sbb
sub
push
mov
pop
jae
out
fistps
sbb
pusha
pop
fnstcw
push
test
faddp
add
sarl
insl
inc
sbb
outsl
cmp
mov
cmpsb
jno
pop
lahf
sahf
roll
or
or
rorl
and
pop
push
mov
lods
lods
lret
mov
insl
push
lods
cmp
jmp
scas
inc
mov
xor
popf
mov
jge
add
icebp
cmc
mov
ret
jo
jge
mov
sub
subb
in
popf
loope
push
cmpl
data16
jp
fs
cmp
mov
imul
std
and
push
xlat
fisubl
mov
jne
dec
fstpl
mov
push
aam
push
cmc
out
and
sub
stc
mov
fisttps
mov
inc
cltd
cmp
mov
test
add
out
fwait
pop
cwtl
lcall
push
out
or
xor
ficoml
push
sarl
or
push
ja
insl
hlt
testl
and
sub
hlt
daa
mov
nop
adc
addl
dec
imulb
ret
pop
add
popa
scas
push
in
rorl
std
sub
jb
jae
mov
enter
ljmp
add
xor
mov
jp
and
xor
xor
pop
jp
loopne
fbld
mov
rorl
cmpsl
je
ficomps
push
les
clc
stos
fwait
pushf
movl
mov
pop
test
mov
repnz
mov
or
or
dec
push
inc
cld
sbb
mov
pop
jg
cmpsb
add
jecxz
test
push
fs
xor
sub
mov
push
xchg
mov
loopne
xchg
int
js
repnz
icebp
jmp
adc
dec
mov
inc
or
inc
scas
jl
and
push
in
pop
dec
mov
shlb
call
sbb
adc
add
pop
aad
dec
jecxz
jno
sti
and
and
pop
popf
cmc
cmp
pop
filds
lahf
push
ja
ret
mov
pop
cmp
outsl
xchg
dec
mov
push
and
sbb
dec
cmp
pop
mov
push
dec
rcl
lcall
inc
or
xor
bound
icebp
pop
pop
imull
decl
rcr
lea
mov
imul
imull
xor
add
adc
dec
stc
xor
in
cmpsb
xor
sbb
inc
xchg
and
scas
and
sbb
iret
or
std
add
decl
cmpsb
into
fwait
dec
adc
sbb
es
jnp
and
xlat
pop
inc
sub
dec
fmull
pop
imul
dec
push
mov
mov
decb
pop
jo
or
fmuls
xchg
inc
sahf
sub
adc
lahf
pushw
dec
test
hlt
push
inc
cmp
adc
rcl
test
lea
add
adc
loop
rolb
mov
mov
div
sub
mov
or
rorb
xor
push
or
shlb
mov
rcrl
pop
sub
adc
add
push
cmp
insb
lret
jg
es
push
lcall
fmul
jne
aas
jmp
addb
cmpb
sbb
daa
nop
outsl
pop
jl
and
scas
movsl
push
jp
pop
es
add
clc
jb
stos
imul
dec
push
mov
inc
push
fsubl
mov
fmull
and
dec
outsb
in
sbb
or
leave
adc
sbb
jecxz
mov
xor
sub
out
sub
sbb
pop
fs
fnstcw
mov
sub
pop
ss
shll
xchg
scas
lahf
dec
jg
sahf
jnp
jae
mov
andl
jbe
jmp
cld
mov
lods
fstpt
xchg
or
pop
push
xor
mov
pop
outsb
xchg
or
xor
push
jmp
scas
ja
xor
hlt
les
imulb
out
cwtl
in
adc
data16
xchg
and
scas
lahf
lahf
cli
andb
repz
adc
mov
pushf
repz
pop
dec
sub
lret
mov
adc
outsb
add
inc
test
mov
lret
bound
rolb
mov
stc
add
out
rclb
icebp
leave
popa
idiv
movsl
cmp
pop
push
xor
adc
mov
aad
mov
dec
sub
mov
movsb
push
push
repz
pop
repnz
mov
mov
jne
shll
pop
xor
fs
add
adc
dec
icebp
les
aaa
movsb
push
jae
push
mov
xchg
in
dec
gs
sub
das
cmpsl
inc
mov
mov
or
icebp
divb
std
add
imul
out
repz
cmp
mov
jl
xchg
test
mov
das
rclb
pop
pop
jno
jnp
or
das
fists
mov
idivl
sarb
xor
pop
jl
ss
ret
adc
and
rolb
push
jl
inc
mov
sbb
aad
icebp
jo
dec
sahf
hlt
repnz
jbe
pop
das
mov
or
mov
scas
jmp
mov
mov
push
addr16
decl
pop
call
xor
nop
mov
js
lcall
popf
xchg
pop
gs
push
rorl
out
test
or
mov
sub
sbb
xor
dec
mov
shl
dec
mov
gs
js
in
xchg
jle
mul
add
mov
unpckhps
jg
mov
cmp
sub
adc
inc
mov
movsl
lods
lret
jae
add
cmpsl
xchg
andb
and
mov
adc
jle
adc
push
adc
jb
sub
mov
jo
inc
imul
or
sub
fisttpll
xchg
lds
push
or
mov
mov
jno
ret
gs
sbb
hlt
mov
or
fsubl
fsub
jnp
lods
or
cmp
jb
pop
mov
xor
dec
repnz
mov
cmp
xchg
stc
adc
pop
out
int3
cmpxchg
jbe
gs
inc
int
mov
xchg
jmp
testb
cmpsb
fs
pop
sub
mov
jae
in
mov
xchg
mov
orb
mov
sbb
ficoms
cmp
pop
loop
jnp
insl
mov
inc
mov
imul
mov
leave
pop
test
les
xchg
xor
sub
dec
arpl
push
xchg
pop
jge
inc
or
xorb
adc
dec
scas
cmpsl
jne
add
jp
je
xchg
push
movsl
decb
popa
sub
dec
pop
lea
js
adcl
aas
clc
ret
pop
sub
dec
pop
and
shlb
adc
out
fs
hlt
cmp
jmp
sbb
dec
sub
pop
push
add
popf
cwtl
xor
push
stc
xchg
pop
out
sub
stos
js
int3
ja
int3
and
movsl
dec
xchg
xchg
pop
and
bound
lods
test
mov
fsts
fdivrs
cmp
dec
cmp
pusha
jmp
cmc
mov
add
or
adc
dec
xor
and
or
add
ljmp
dec
jecxz
cmp
enter
fs
push
xchg
jo
cmp
push
rclb
add
inc
mov
sti
adc
xchg
cmpsl
jno
jmp
mov
mov
inc
fldl
sbb
add
pop
imul
int3
pop
daa
xor
aas
mov
mov
shl
xor
pop
and
fcompl
notl
xor
cmp
loop
add
mov
inc
bound
add
incl
scas
cmp
jne
push
jecxz
stos
adc
gs
add
callw
xor
dec
fstpl
in
ds
ds
sub
mov
jge
mov
std
and
and
dec
mov
aas
mov
outsl
jl
xchg
push
cmp
lea
mov
aaa
movsl
inc
cmp
push
int3
and
jo
or
xchg
fcmovbe
dec
cld
movsl
and
dec
ret
add
xchg
cmp
pop
dec
jne
andl
sub
and
mov
xchg
cmp
cmp
or
iret
inc
jge
test
push
mov
jp
icebp
jecxz
sbb
sbb
push
push
lcall
test
pop
sbb
sub
xor
ds
insb
sti
pop
enter
daa
orb
inc
or
inc
rcrb
inc
push
scas
std
or
popf
out
push
add
jb
push
jnp
dec
add
jne
cmp
data16
idivb
mov
and
jno
icebp
shrl
sti
push
add
mov
ljmp
mov
rorb
jne
test
inc
pop
add
sub
or
call
setnp
lock
mov
ja
or
push
mov
mov
inc
jae
xor
inc
or
jbe
rclb
sahf
stc
add
bnd
repz
test
imul
movsb
stos
or
mov
stc
stc
dec
pushf
ja
xor
nop
dec
inc
adc
sbb
pop
pop
xchg
cwtl
add
test
cltd
pop
mov
sahf
push
int
popl
add
dec
loop
jb
and
jo
adc
xchg
or
jns
or
lds
sub
cmp
scas
adc
xor
or
xor
hlt
jnp
js
pop
loop
adc
mov
je
iret
push
jg
daa
or
inc
mov
cli
cs
jle
add
jb
dec
cmpsb
xor
and
mov
xor
test
cmp
push
dec
clc
fimuls
cltd
pop
push
rcrb
andb
mov
or
mov
mov
outsl
inc
push
nop
and
cmp
jo
xchg
sub
lea
push
fs
loop
stc
adc
sub
mov
jnp
dec
xor
push
cmpsb
sbb
loop
imul
cli
adc
xchg
or
ficomps
flds
je
pop
lret
loopne
sub
or
lds
leave
lods
pop
nop
sub
imul
add
out
adc
movsb
adcl
mov
cmp
lds
hlt
pop
xchg
scas
cltd
pop
mov
mov
mov
movsl
jl
mov
ret
fbstp
testb
adc
dec
hlt
jp
jno
inc
or
cmc
incb
mov
xor
xor
jo
loop
mov
test
cmpsb
push
adc
xor
or
adc
push
andb
addr16
and
lret
xchg
call
xchg
mov
lret
jb
mov
push
push
pop
pop
outsb
data16
ja
cmp
pop
addr16
push
xor
notb
push
fisttpl
pop
shrb
jmp
xchg
loopne
jne
das
scas
mov
into
xor
push
fisttpll
lock
nop
fisttpll
cld
mov
fistps
lock
sub
push
mov
push
arpl
add
pop
mov
inc
ljmp
popf
jg
pop
enter
sub
cmp
movb
and
pop
jb
xor
idiv
ja
mov
cmpsb
jno
int3
and
lret
dec
xor
test
sub
pushf
dec
cmp
cwtl
popf
arpl
jbe
jne
dec
test
ljmp
iret
add
and
jmp
bound
mov
mov
hlt
hlt
bound
jb
jl
dec
push
inc
or
aaa
je
jb
jae
sbb
add
sbb
mov
push
and
inc
lret
or
cmpsl
mov
nop
push
test
mov
clc
mov
jg
ret
fimull
xor
add
mov
fidivs
lods
jne
jp
xor
sbb
aam
add
in
mov
sub
push
imul
pop
push
int3
movsl
mov
mov
call
imul
cmpsl
mov
out
xlat
loopne
push
daa
mov
or
xor
aaa
pop
dec
jbe
add
pop
js
mov
push
std
dec
jns
das
mov
jle
out
outsl
into
and
aaa
mov
and
sbb
test
lea
sbb
nop
and
push
cli
xchg
cs
push
or
mov
add
nop
add
add
mov
push
mov
sbb
adc
paddsw
jbe
inc
and
cwtl
jg
jmp
xorb
add
mov
std
jle
loop
dec
lcall
lock
sbb
push
jge
jle
sub
xor
cmp
jg
inc
pop
stc
shlb
adc
dec
cmp
dec
jge
jge
xlat
push
inc
mov
cmc
add
daa
mov
jae
mov
fwait
les
and
cmp
push
jno
sahf
jo
xor
push
jbe
inc
shrl
in
push
inc
clc
sub
lock
outsl
xchg
pop
mov
jle
sbb
lea
cld
jmp
mov
cmp
ficoml
and
add
pop
mov
cmp
mov
sbb
or
gs
call
pop
push
jbe
adc
dec
mov
jmp
mov
xchg
mov
push
popf
mov
insl
orb
arpl
cmp
out
jle
out
lret
jne
xchg
push
and
xchg
lods
dec
sahf
es
jae
inc
jbe
and
add
jmp
shrl
mov
and
inc
add
push
sbb
push
shll
std
sbb
jmp
popf
rol
push
nop
ja
fs
fidivrs
pop
add
lret
lea
fdivrp
push
mov
adc
add
ss
pop
xor
xchg
cs
scas
js
sbb
push
mov
call
pop
es
rcl
add
and
mov
repnz
mov
clc
add
outsl
add
inc
adc
or
pop
popa
sar
das
pop
xor
lods
mov
pop
insb
outsb
mov
sbb
cmp
arpl
pusha
and
sub
xchg
inc
inc
lds
pop
cmp
pop
jl
mov
outsl
push
add
push
add
enter
sub
inc
inc
mov
cmp
cltd
mov
push
nop
or
push
jg
cmp
or
rorl
xchg
test
arpl
push
fsubs
dec
loopne
and
xchg
lods
shll
and
xchg
pop
push
stos
mov
outsl
es
mov
std
ss
pop
incl
ljmp
cwtl
in
ret
lahf
fidivl
ja
push
aad
test
add
add
sbb
notl
repnz
and
hlt
or
mov
filds
lds
sarl
lock
jo
fildl
adc
push
fwait
in
sub
pop
lret
std
mov
jns
popf
add
or
scas
and
mov
and
pop
xchg
jnp
imul
jg
enter
scas
cmp
mov
fdivp
test
ret
xchg
mov
dec
xor
dec
mov
aaa
cltd
push
dec
int3
add
hlt
inc
fs
lret
fmuls
pop
int3
out
cld
inc
jg
push
loop
repz
out
jmp
pusha
jns
clc
scas
int3
aas
pushf
ljmp
or
mov
jns
or
clc
mov
sahf
insl
pushf
bound
mov
adc
out
mov
push
outsl
xlat
pop
adc
or
xchg
sarb
sub
dec
insl
sub
orb
ficompl
ret
int
cmp
mov
fcomps
int3
das
add
jnp
mov
cli
xor
test
sti
jb
inc
jb
xor
or
pop
push
xlat
mov
xchg
into
pop
jmp
push
adc
sub
and
mov
push
test
int3
or
scas
or
movsl
mov
mov
iret
xor
imul
or
mov
xor
adc
sbb
dec
shr
adc
inc
fildll
data16
xor
adc
stos
mov
mov
aam
mov
xorb
cmp
imul
hlt
dec
add
mov
jns
daa
jb
pop
cld
add
cmpsb
xchg
leave
xor
cmc
mov
adc
push
stc
mov
push
jl
add
xor
or
and
ret
test
fists
sbb
jge
pop
dec
sbb
enter
mov
clc
mov
call
sub
repnz
es
arpl
fld
js
stos
or
int3
dec
sbb
push
xor
mov
xor
icebp
adc
lahf
xchg
mov
aaa
test
aam
js
jecxz
push
lock
mov
shll
out
out
negl
in
push
push
sub
mov
std
sbb
int3
sub
outsl
cli
incl
ss
cmp
lcall
push
loop
xor
std
mov
push
ss
imul
xor
xor
inc
cmp
adc
push
ja
outsl
rorb
jp
push
sbb
test
aas
gs
mov
xor
adc
shll
mov
mov
in
or
jecxz
jns
shrb
adc
int
cmpsb
xor
push
xor
xor
jecxz
cli
mov
test
jbe
mov
add
fs
mov
mov
loop
and
add
mov
cli
int
pushf
mov
inc
ja
inc
lods
fisubs
daa
sub
enter
loope
xor
fisubl
cvtps2pd
adc
cmpsb
sahf
outsl
gs
xor
jne
fwait
push
lret
mov
aas
outsl
add
cmp
jge
xchg
push
inc
shl
xchg
pop
std
cltd
cwtl
loope
adc
loop,pn
mov
add
into
jmp
pusha
cmp
mov
push
inc
push
inc
sub
mov
dec
xchg
int3
push
push
pushf
inc
inc
out
dec
rorb
jae
pushf
push
or
or
fcompl
push
rolb
mov
movsb
pushw
dec
adcl
pushf
xchg
mov
out
adcl
loope
pop
inc
enter
fisttpl
inc
inc
aam
xchg
imul
inc
in
xchg
sbb
cmp
and
xchg
in
pop
lds
mov
out
add
out
xchg
sub
neg
enter
mov
data16
aad
inc
xchg
jg
mov
jge
mov
pop
cmc
xchg
push
dec
test
push
test
pop
inc
lret
mov
sub
pop
pop
rcr
mov
int3
jbe
imul
dec
cwtl
out
sub
and
pop
js
pusha
test
xor
cmp
aas
sti
adc
push
orb
aas
jae
mov
jnp
mov
movsl
movsl
mov
adc
sbb
lds
add
in
xchg
lahf
movsb
mov
jmp
add
xchg
xchg
pop
inc
mov
xor
push
push
mov
lret
push
faddp
inc
mov
fisubrs
std
add
sbb
cmp
faddp
out
stos
data16
push
ds
mov
inc
data16
lods
xchg
in
ja
addl
push
sbb
inc
les
mov
push
int3
adc
push
aam
add
fstl
add
fimuls
imul
in
mov
pop
cs
xchg
add
cmp
lods
or
pop
loope
adc
inc
xchg
mov
xchg
xchg
stos
out
fstl
sub
sbb
xor
push
test
push
mov
pop
rcll
pop
imul
repz
mov
std
pop
loop
push
inc
and
or
decb
enter
xchg
aad
scas
das
dec
loope
cmp
push
sub
pop
cltd
insb
dec
add
es
add
or
xor
aam
in
sahf
lcall
icebp
and
cmp
jae
cwtl
adc
inc
xchg
cltd
sub
xchg
nop
mov
icebp
add
faddl
adc
dec
push
ficomps
das
leave
jmp
imul
cwtl
jle
mov
cmp
dec
dec
push
pop
cmpsb
or
daa
mov
mov
nop
xchg
cs
cwtl
mov
dec
int3
ret
cmp
into
leave
fwait
sbb
xchg
gs
or
xchg
xchg
sub
lret
mov
in
pop
popf
push
mov
sub
jnp
inc
lret
or
push
or
clc
out
pushf
int
ja
mov
dec
loop
out
mov
pop
sbb
aad
sti
cmpsb
and
push
iret
cmp
push
rcr
orl
pop
sub
in
push
sub
push
shll
adc
mov
lcall
int
mov
hlt
dec
mov
jne
xlat
cmp
adc
push
hlt
push
and
test
rorb
mov
lea
testl
das
sbb
loope
jns
out
mov
sbb
les
aaa
pop
in
rcrb
std
jmp
in
add
cmp
sbbb
sbb
fisubrl
jmp
adc
stc
pop
cmpsb
lret
and
sarl
and
mov
push
stos
lret
in
sbb
cmpsb
out
scas
xor
lret
test
dec
sub
hlt
xchg
pop
and
call
rcrl
out
mov
test
cli
mov
xchg
xlat
mov
mov
addl
inc
sti
test
call
das
into
sub
mov
lea
lcall
mov
cmpsb
rcrl
lcall
push
push
outsl
mov
fwait
adc
sub
jge
fwait
dec
out
outsb
xchg
mov
stos
mov
hlt
out
popf
and
scas
imul
xor
lcall
xor
and
in
imul
jg
xor
inc
or
aaa
mov
mov
cwtl
push
data16
mov
dec
jnp
cmp
lock
cmp
dec
nop
push
addr16
aas
pop
popf
mov
ss
and
lods
xchg
fistps
push
mov
mov
nop
dec
pop
add
popa
aaa
cmp
jg
cmpsl
xchg
push
subl
stos
lahf
sbb
adc
stos
repnz
xchg
and
leave
mov
dec
jle
mov
inc
pop
sbbl
movsl
push
nop
or
stc
gs
push
fdecstp
pop
and
js
lea
in
mov
mov
inc
push
push
cmp
push
sbbl
pop
jle
and
pusha
lahf
jo
push
and
outsb
mov
fpatan
lock
adc
lods
dec
scas
fidivrl
or
or
cmp
lea
enter
scas
lahf
and
scas
cld
cmpsl
and
icebp
sub
mov
jp
aad
leave
incb
mov
push
xchg
lcall
popf
xlat
or
int
jo
addb
push
push
jo
cmp
pop
mov
imul
mov
js
jge
repz
and
int
out
ljmp
lcall
mov
fmul
xor
jmp
lahf
lcall
mov
or
xor
fwait
xchg
mov
push
leave
pop
lods
negb
loop
gs
pop
cltd
cmpsl
xchg
test
shl
pop
mov
sub
mov
sub
jno
mov
xchg
inc
fwait
sahf
vsqrtps
xchg
xchg
int3
add
xchg
jae
push
sub
xchg
jno
sbb
lods
ljmp
das
sbbl
adc
xor
xlat
dec
xchg
negl
fistpll
popf
jge
fwait
or
aaa
xchg
dec
fdivrl
adc
orb
jl
cmpsb
sub
fistps
xorl
les
add
add
mov
or
loop
popl
mov
sbb
adc
ficoms
push
xchg
mov
aam
xor
pusha
jns
mov
cmp
mov
inc
mov
inc
ret
mov
jb
lret
sub
in
add
out
add
cmp
dec
add
sub
and
jp
mov
pop
xor
inc
xchg
xor
xor
data16
rcrl
out
cwtl
dec
test
ljmp
push
shlb
sbb
loopne
or
in
scas
pushf
lret
jne
lods
cwtl
mov
push
push
push
jne
arpl
fsub
and
mov
xchg
cs
stos
aad
mov
push
push
push
out
lret
jle
fnsave
sbb
pushf
push
inc
sbb
idiv
sbb
ds
rcll
loop
push
rcll
mov
xchg
dec
in
das
mov
dec
aad
in
adc
pop
adc
and
fwait
mov
cmpsb
lret
frstor
add
sbb
mov
bound
jbe
and
sbb
jns
flds
in
lods
daa
call
jle
dec
adc
jmp
test
push
test
adc
loope
or
push
pusha
nop
adc
rolb
jne
in
mov
cmp
sbb
push
add
xor
fidivrl
sub
leave
jnp
mov
jb
imull
push
jbe
stos
pop
cmp
jmp
adc
ret
mov
dec
ffree
nop
sub
icebp
aas
jo
adc
repz
dec
movsl
mov
xchg
lahf
jecxz
sbb
dec
ljmp
mov
push
sub
stos
sahf
sbb
push
xor
sbb
jbe
jg
or
xorb
add
test
pusha
lahf
mov
sbb
stc
cmp
mov
in
xchg
int
fcomip
pop
dec
jg
jmp
jbe
sarl
subb
repz
mov
lds
xchg
outsl
cmpsb
or
add
sub
test
mov
loope
pop
fimuls
shrb
sub
fdivrs
sbb
and
xchg
movsb
in
xchg
or
inc
adc
and
mov
xchg
arpl
stos
jne
lds
enter
ret
add
push
add
jg
fwait
jo
inc
mov
scas
xchg
adc
sub
js
lcall
xchg
xchg
add
rorl
jp
xchg
sbb
mov
inc
push
xchg
jb
fidivl
xor
mov
inc
es
jmp
and
or
arpl
filds
or
scas
mov
aad
mov
or
pop
je
push
push
pop
out
dec
jmp
inc
xchg
fnstenv
mov
fimull
inc
xchg
pop
cmp
pop
lock
aad
iret
jl
or
out
cmp
push
fcomp
or
jl
loop
adc
sahf
pop
fidivrs
mov
mov
popf
jns
jl
imul
cmpsb
add
pop
repnz
cmp
lods
cs
out
adc
sub
mov
inc
sarl
pop
movsb
mov
sub
jo
dec
das
xchg
inc
fldl
lahf
pushf
and
mov
pop
cmpb
push
cmc
in
jecxz
lods
xchg
sub
push
mov
into
fimuls
dec
push
insb
in
mov
inc
push
incl
sub
rcll
jno
mov
jp
loopne
cmp
adc
js
jl
stos
jno
lea
mov
test
popa
sbb
add
mov
xchg
or
add
outsb
and
dec
sub
push
pop
sub
mov
ljmp
sti
iret
mov
pop
movsbl
in
out
add
jmp
mov
and
shld
mov
repnz
lea
loope
xor
sub
cmpb
and
repz
sahf
sbb
inc
mov
dec
push
lods
fdivrs
lahf
and
stos
pushf
cwtl
addr16
sbb
or
xor
imul
xor
cmc
ret
pop
and
mov
jmp
push
adc
arpl
rcrl
mov
push
pop
mov
insl
push
or
sub
ss
dec
adc
js
shll
jmp
sbb
ljmp
push
ja
imul
pushf
mov
xchg
ss
cs
pop
out
xchg
xchg
mov
pop
inc
or
scas
sahf
cmovle
jp
xchg
jne
int
push
bt
lret
dec
stos
adc
adc
dec
sbb
adc
or
in
fbld
lock
incb
fistl
in
out
fstps
sar
stos
mov
xchg
jb
mov
dec
adc
mov
in
js
xchg
jne
adc
sub
mov
or
or
fsubs
and
insl
lret
loopne
and
xor
icebp
out
in
pushf
jae
and
cmpsl
mov
dec
pop
push
scas
jmp
movsb
fwait
sbb
sets
jp
xchg
test
or
push
add
fcoml
jb
and
push
sub
ljmp
cmp
ljmp
and
xlat
int3
subb
sub
loopne
and
sbb
and
sub
or
and
mov
xor
and
into
adc
test
scas
add
mov
sub
cmp
call
hlt
fld
stos
std
je
inc
test
or
push
jns
loope
sub
or
sub
mov
mov
add
and
ret
lret
psubd
jns
push
fwait
jns
add
or
mov
sbb
cmp
les
out
adc
mov
mov
hlt
jne
and
and
pusha
inc
fbld
in
mov
dec
mov
ds
pop
hlt
movsl
xor
stos
mov
arpl
xor
add
lcall
push
fldl
push
jp
pusha
fisttps
xlat
lret
cs
and
xlat
ljmp
ds
lcall
lret
lret
ret
or
push
stc
outsl
dec
fldenv
cld
in
push
into
or
dec
lcall
out
scas
pop
sub
pop
add
pop
jge
inc
lcall
jne
outsl
rep
push
or
es
xor
imul
add
adc
or
hlt
mov
cmp
nop
int3
sub
pop
pop
mov
js
and
pandn
test
les
loopne
or
pushf
clc
push
adc
fsubp
test
loop
cmp
mov
lcall
scas
add
mov
push
dec
jmp
jle
xchg
sbb
xorl
cmpsb
xchg
xchg
gs
pop
jae
xorl
cmc
std
test
mov
outsl
adc
addr16
cmp
dec
bndstx
mov
mov
imul
fldl
mov
and
pop
dec
jns
ret
repz
cs
jg
or
in
adc
add
out
sbb
xchg
sti
cltd
das
pushf
in
sub
int3
adc
loop
andl
fsts
pop
sub
pop
jns
jns
stos
dec
jb
inc
inc
or
dec
out
test
aam
sbb
sbb
pop
xchg
incl
xchg
adc
cltd
sahf
clc
ljmp
xchg
aam
push
cmp
or
push
xchg
arpl
inc
mov
addr16
sti
jmp
dec
call
pop
fcmove
fistps
mov
mov
push
in
sub
movsl
gs
pop
sbb
inc
mov
cmc
and
pop
cmpsl
cmp
pop
push
pop
jp
or
or
push
cli
in
dec
movsb
push
out
sub
dec
mov
adc
xchg
lea
mov
mov
xchg
int
pop
into
pop
xchg
xor
setb
push
mov
call
rcl
call
cld
fwait
add
es
and
js
out
fnsave
sub
pop
ss
sub
movsb
lock
adc
pop
cmpsl
lahf
dec
mov
or
adcl
cmp
push
inc
sahf
push
jno
mov
mov
incb
and
mov
xchg
loope
sahf
jb
pop
adc
dec
jo
jmp
bound
movsl
loopne
addr16
lahf
dec
push
enter
jecxz
divb
dec
aaa
nop
jbe
ljmp
jmp
jbe
jne
xchg
xor
mov
into
into
cmpb
adc
and
mov
xchg
mov
test
inc
inc
and
xchg
iret
mov
mov
cmp
popa
add
fsubrl
dec
ret
push
jle
fcmovbe
pop
xchg
repnz
mov
sub
sbb
xor
bound
sti
jb
rcrl
and
daa
jle
jmp
xchg
push
loop
mov
decl
adc
cmp
js
add
aam
inc
daa
adc
or
sub
rcr
mov
push
xor
mov
loop
mov
mov
inc
cmp
in
stc
aam
and
push
xchg
out
xchg
add
adc
mov
fs
or
xchg
shrl
mov
test
sbb
add
aas
push
xor
add
sbb
inc
sahf
xorl
aad
mov
cld
adc
mov
dec
dec
lcall
fstps
jg
cmp
pop
and
out
sbb
lods
popf
cmp
pop
sbb
cmp
add
outsl
popf
notb
negb
ret
push
and
mov
outsb
or
pusha
scas
test
mov
iret
orl
jne
in
ss
push
cld
cmpl
in
mov
das
outsl
outsl
mov
stc
mov
inc
xchg
pop
lret
js
je,pn
xchg
jb
ret
pop
fsubrl
adc
cmpsb
decb
gs
ds
in
xor
out
jbe
mov
pop
ficomps
insl
inc
pop
cmp
mov
inc
and
lock
mov
xor
pop
lret
jnp
mov
or
sarb
mov
incl
imul
aaa
fstl
mov
out
cwtl
cmpsl
iret
pop
inc
mov
mov
dec
adc
and
stos
xchg
jge
push
or
sub
xor
outsb
mov
fstl
das
mov
fnstcw
rcl
cmp
inc
cmp
cld
pop
and
xor
xchg
mov
adc
mov
lea
ficoml
fwait
pusha
inc
inc
cs
out
push
sarb
subb
xchg
je
movsl
or
xorl
inc
aad
push
push
lods
dec
push
dec
sub
les
fiaddl
jns
insb
insl
lcall
repnz
dec
popa
or
sub
shll
ds
inc
jae
jmp
test
int
mov
xchg
mov
pop
shl
arpl
sbb
loope
inc
out
mov
arpl
jns
sti
popa
push
or
push
inc
jg
insl
pop
das
popa
mov
fildl
mov
sub
repz
sub
out
mov
or
insb
test
outsb
pop
mov
xchg
stc
sub
scas
insb
cwtl
adc
jns
cmp
sahf
pop
cmp
stc
and
jmp
jo
add
cltd
pop
sbb
pusha
mov
adc
dec
adc
imul
pop
add
mul
and
loopne
xchg
dec
lret
insl
mov
pop
in
pop
test
jecxz
xchg
lods
leave
loop
mov
push
movsl
ret
mov
cwtl
mov
fwait
nop
pusha
lock
inc
js
dec
adc
mov
mov
std
xor
adc
faddl
xchg
arpl
pop
push
sub
fwait
push
mov
gs
dec
fsts
add
ficompl
in
xor
loope
push
fadd
addl
ljmp
cli
jo
mov
jns
frstor
int
push
jb
pushf
sub
dec
movsl
inc
neg
or
push
xor
ds
sarl
inc
sarb
mov
push
pop
xlat
jb
repnz
push
adc
or
lret
int
ja
outsb
jbe
inc
movsl
lods
cmpsb
mov
mov
xchg
and
xlat
push
mov
xchg
sbb
fwait
jo
push
fs
test
pop
in
sbb
add
or
pop
push
test
mov
cld
filds
jle
pop
aas
cmp
cmp
out
cmp
or
cwtd
fmull
loopne
sbb
fnsave
xchg
xchg
sub
addr16
mov
leave
mov
cmp
pop
fdivrp
inc
sub
jo
int3
push
xchg
push
fadds
data16
pop
daa
icebp
mov
jae
pop
pop
popa
enter
dec
add
loop
add
dec
in
je
je
pop
repnz
jmp
sub
xchg
pop
rorl
test
push
sti
xorl
iret
sbb
jl
inc
dec
rcr
jmp
jne
repz
pop
pushf
test
dec
mov
filds
dec
aad
movsl
fcoml
movsb
ds
cmp
add
xchg
add
push
push
std
popa
push
mov
loope
mov
push
pusha
push
shufps
in
test
in
sbb
push
jae
lret
fcomps
ja
xchg
mov
cmp
std
in
xchg
sbb
push
sbb
mov
and
nop
jecxz
cmpsb
out
cmpsl
and
iret
cwtl
lahf
ret
icebp
mov
fsubs
pop
mov
mov
stos
pop
imul
jmp
popa
sbb
pop
xchg
sub
mov
mov
stos
aaa
imul
lcall
pusha
sub
arpl
int3
gs
sahf
scas
push
dec
sbb
adc
das
aam
dec
sub
sbb
mov
mov
mov
movsl
pop
imul
mov
jge
stc
and
sbbl
outsl
xor
mov
mov
les
xchg
roll
inc
xchg
out
icebp
ss
outsb
dec
cmc
mov
inc
jns,pt
and
testl
out
lods
dec
mov
mov
insb
add
cltd
sub
int3
xlat
jmp
popa
jns
arpl
es
lcall
into
movsl
inc
push
push
clc
stc
mov
stos
sbb
nop
out
imul
pop
push
adc
loope
adc
je
aad
adc
xor
jecxz
andl
cmc
and
xor
ljmp
jp
cmpsl
insl
mov
ret
outsl
sub
aam
bound
mov
ds
test
fsts
lock
stos
ret
test
addr16
ficomps
stos
mov
mov
fdivr
dec
or
insb
lods
aad
sti
xor
jge
add
jno
in
adc
mov
leave
stc
mov
sti
and
cmp
or
test
pop
rcrl
jle
mov
imul
mov
loopne
mov
cld
add
les
rorb
mov
sub
lds
pop
push
push
cmpsl
lods
hlt
sbb
pmulhw
mov
dec
pop
xor
cltd
pop
pop
insl
lods
jg
xlat
jns
pcmpgtb
rcll
lret
add
aaa
sub
push
pop
movsl
daa
and
call
scas
sub
mov
sbb
pushf
in
adc
cmp
xor
inc
push
push
ja
test
sub
adc
sbb
xorl
fs
cmpsb
adc
jp
mov
mov
aam
imul
lcall
jg
xlat
cmp
xchg
and
enter
sub
inc
xchg
push
sub
mov
sti
sub
xchg
adc
sahf
in
push
call
gs
pusha
cmpsl
push
lret
pop
test
adc
bound
call
jp
out
push
adc
ror
shlb
push
pop
sbb
push
xchg
out
mov
and
cmp
xlat
xlat
mov
fistl
mov
push
and
jo
fwait
xlat
insl
clc
mov
jno
push
or
arpl
xchg
mov
call
sbb
sbb
cs
push
sub
out
scas
pusha
cmp
xor
pop
xor
add
sbb
cwtl
movsb
popa
mov
xchg
pop
mov
fisubl
mov
iret
loop
xchg
sti
add
repnz
cmpsb
push
lods
mov
rclb
scas
jo
add
xlat
mov
icebp
incl
mov
cmp
cmpsl
lahf
orl
adc
inc
mov
loopne
mov
int
enter
or
inc
jnp
das
test
sub
cmpsl
mov
pusha
in
mov
cmp
dec
xor
cld
or
xchg
dec
mov
inc
sub
in
fdivr
cltd
push
sbb
mov
inc
or
xchg
jge
mov
jae
scas
cs
subb
mov
add
mov
daa
std
cmpsl
xchg
mov
adc
and
inc
sahf
dec
pop
and
sti
pop
dec
xchg
aas
mov
lds
pop
sahf
adc
mov
mov
ja
mov
fninit
iret
xor
enter
lods
lret
ja
dec
xchg
icebp
fisttpl
sbb
outsl
hlt
frstor
xlat
and
dec
cmp
int3
out
or
test
sub
fwait
outsb
stos
loop
xchg
cmp
sbb
xchg
xor
imul
ds
stos
fsubrl
inc
push
pop
dec
jge
mov
cmpsl
out
icebp
sub
loopne
pop
repz
in
das
push
jg
cmp
pop
stos
bound
fisttpll
movsb
push
in
cmp
mov
fwait
adc
cli
mov
fildl
dec
loope
push
mov
call
rclb
in
pop
inc
mov
dec
adc
dec
pop
and
or
mov
test
sub
cmp
xlat
mov
std
jp
sub
mov
jecxz
inc
mov
in
cmp
lods
cs
daa
push
mov
clc
add
pusha
out
loopne
fs
pop
push
jb
scas
fs
pushf
nop
pop
sub
xor
sti
sahf
inc
cmp
loop
movsl
inc
sbb
inc
lret
adc
mov
pop
popf
inc
ds
ret
stc
push
mov
dec
stos
or
into
cmp
push
aaa
sbb
aam
fldt
das
inc
orl
dec
mov
xorb
mov
mov
je
mov
insl
jne
and
cmp
leave
sarl
cld
xchg
jmp
mov
mov
adc
inc
repnz
jmp
icebp
stc
jb
or
adc
mov
pop
mov
test
jmp
adc
in
pop
sbb
mov
sahf
push
xchg
dec
push
push
ljmp
in
push
jle
mov
orl
enter
cli
mov
out
insb
mov
notb
mov
jg
psrlw
pop
pop
into
pop
popa
lret
xor
cwtl
push
jge
mov
subl
dec
fmuls
ret
shrl
mov
ret
lahf
xlat
out
add
stc
in
push
xorb
data16
iret
ds
ret
sbb
xor
inc
bound
aas
dec
jmp
into
sbb
mov
lahf
sbb
mov
inc
in
xor
mov
sahf
mov
movsl
ror
adc
mov
lods
cmp
pop
fildl
xor
add
jg
sarb
in
adc
fbld
icebp
test
xchg
ss
mov
jno
cmpsl
cmp
sti
scas
jne
stos
add
pop
scas
and
push
sbb
xor
out
in
and
cmp
fcomip
or
loop
cwtl
fisubrs
mov
bound
push
fdivs
inc
int
notl
pop
add
in
daa
lret
testb
mov
lock
or
lcall
lods
clc
sbb
out
mov
ljmp
pop
xor
push
cli
add
ds
inc
int3
pop
push
insl
xchg
add
mov
fldt
jae
pop
sub
leave
out
jge
sysexit
divl
insb
pop
outsb
into
stos
test
mov
dec
mov
lret
or
inc
clc
dec
jbe
dec
push
out
negl
jecxz
add
and
jecxz
cwtl
cwtl
or
sbb
insb
pop
lea
aas
dec
jo
push
pop
mov
jbe
filds
pop
test
loop
add
lea
push
add
or
adc
adc
call
add
outsb
or
cmp
sub
mov
movsb
je
hlt
mov
jne
mov
cmp
lds
aas
adc
unpcklps
lock
scas
mov
or
and
xchg
push
jmp
pop
iret
xchg
leave
in
shlb
pop
push
adc
cwtl
adc
nop
movsl
call
rcrb
cmp
sahf
pushf
test
mov
icebp
pop
fcmovb
or
and
movups
xor
pop
ds
lcall
dec
stc
xchg
cli
stc
fistps
cmpb
xor
push
scas
outsl
mov
push
xchg
xchg
shrl
stc
hlt
mov
ret
cmp
lret
daa
fiadds
sub
rcr
xor
xchg
mov
push
divl
add
ret
je
stos
sub
or
cld
data16
cli
xchg
sbb
sbb
loopne
adc
out
mov
imul
hlt
jecxz
mov
jae
into
aam
cmp
xor
in
movsb
mov
and
pop
xchg
mov
fcomps
ret
add
mov
add
dec
popa
sub
cmpsb
xchg
lods
xchg
dec
cmp
xorps
sbb
push
add
scas
rol
cwtl
outsl
rorl
ret
or
out
xchg
push
or
adc
add
lods
cltd
pushf
and
cmp
cwtl
xor
ret
pop
push
fistpll
jns
sub
and
call
std
lds
dec
cmp
push
je
pop
pop
pop
shr
dec
popf
push
pusha
xor
cmp
aaa
and
dec
pop
mov
pop
sbb
mov
push
push
out
sarl
sub
pop
xchg
sbb
mov
add
cltd
adc
and
fnstenv
push
aas
loopne
clc
testb
xor
repz
nop
ret
imul
jecxz
mov
fadds
hlt
adc
insl
mov
mov
cmp
and
inc
sub
mov
and
test
xor
xor
insl
frstor
fdivs
aaa
fdivrs
inc
shlb
insl
test
call
hlt
inc
ja
lcall
push
add
lret
inc
mov
or
lret
mov
dec
lods
fadds
ja
mov
inc
cmp
dec
lock
cmc
and
add
sbb
adc
jmp
test
mov
pop
push
push
jbe
clc
mov
jno
dec
jg
jp
mov
cmpsl
xor
pop
push
xor
int3
jg
in
xchg
dec
jmp
int
pop
sub
aas
sub
mov
dec
lret
int3
sbb
or
dec
cwtl
xor
lea
jmp
in
test
sbbl
and
mov
aaa
dec
pusha
push
cmpsb
xlat
push
es
jmp
out
and
sbb
cli
jl
fldl
leave
addr16
sub
test
out
call
fbstp
fwait
jbe
mov
iret
ror
ret
popf
mov
ret
xor
inc
xor
stc
out
repz
sub
xlat
addb
mulps
addr16
out
pop
fimuls
mov
push
xor
bound
add
aaa
inc
sbb
sub
rcrl
or
rcrl
xchg
mov
shlb
insl
scas
lods
leave
lcall
jmp
into
sub
idiv
hlt
xchg
nop
cmp
orl
mov
inc
push
mov
push
mov
je
adc
cmp
rorl
dec
rorb
hlt
popa
fistps
js
jecxz
dec
aaa
inc
popf
js
pushf
cmp
dec
jl
and
mov
mov
lret
addl
mov
into
jnp
outsb
cmp
jo
jl
scas
stos
cli
push
mov
shlb
lcall
dec
lret
mov
cld
imul
incb
mov
sub
movsb
sub
testl
sub
cmp
hlt
jo
xchg
jp
fwait
imul
hlt
cmp
fldenv
mov
sahf
jp
pop
mov
popa
jle
sbb
push
mov
int3
scas
sarb
or
icebp
sub
lods
xchg
stos
insb
mov
push
inc
pushf
test
in
push
insl
movsb
adc
inc
mov
sub
add
xor
inc
out
mov
loop
adc
adc
pop
pop
std
nop
int
push
push
aas
sarl
inc
push
enter
out
fsubs
push
adc
insb
cli
in
adc
push
addr16
loope
jo
lock
lret
sub
add
pushf
jge
aad
push
and
sub
xchg
jmp
cmp
sub
adc
adc
mov
arpl
mov
pop
imulb
stc
std
mov
stos
stc
dec
ret
add
mov
test
imul
paddsw
dec
cmp
mov
pop
pop
ja
adc
jne
in
aaa
out
push
jle
loop
test
stc
push
jecxz
mov
and
jmp
dec
mov
int
cmpsb
bound
sbb
mov
nop
mov
sbb
jecxz
add
cltd
or
loope
and
jge
inc
jb
loop
lea
dec
loop
cmp
or
bnd
ja
or
inc
and
lods
test
push
test
arpl
mov
insb
fistps
push
push
mov
xor
pop
es
cltd
loope
jne
sti
fnsave
and
loopne
fldcw
imul
dec
add
iret
fdivs
ret
loop
mov
imul
lret
jecxz
or
and
mov
lock
add
call
out
jmp
out
insl
push
mov
ficomps
mov
mov
stos
flds
nop
push
dec
sub
out
sbb
imul
xchg
dec
push
or
fbstp
mov
and
cli
cmp
fcmovnu
cmpsb
adc
out
mov
xor
mov
xchg
xor
fiaddl
mov
outsb
lret
ret
dec
mov
cltd
mov
cmp
xor
mov
scas
fs
sahf
adc
popa
repnz
and
fs
push
or
or
cli
or
ljmp
in
push
jae
outsb
push
jns
push
icebp
adc
pop
mov
gs
jns
gs
mov
scas
ret
jp
pop
data16
or
and
std
lret
aad
mov
test
movsl
in
dec
cltd
subl
mov
dec
push
mov
cmp
mov
cmp
lret
pop
movsl
jg
shrl
mov
repnz
std
push
cli
add
jle
sbb
out
sahf
pop
sub
sub
xchg
ds
or
data16
sbb
out
int3
pusha
push
xchg
sub
fdivp
inc
ss
sub
pop
mov
mov
sub
ds
stos
xor
dec
dec
jbe
push
inc
cli
jge
in
sbb
push
mov
add
mov
cltd
out
imul
ret
jmp
mov
sahf
mov
aaa
fwait
inc
push
cmpsb
sbb
movsb
pop
xor
pop
or
subb
sti
dec
aas
or
or
jl
lods
sub
sbb
sahf
test
rcrl
cmp
popf
inc
dec
pop
xchg
sbb
adc
lods
psrld
test
cld
inc
movsb
ror
push
push
inc
add
pop
pop
sub
ret
repnz
fldcw
pop
outsl
and
xchg
mov
jb
or
fstpl
add
sti
xchg
inc
mov
outsl
cmpsl
gs
xlat
jp
sti
insb
pop
mov
jnp
dec
mov
sbb
or
adc
insb
ficoms
xchg
lahf
xchg
pop
iret
clc
jbe
pop
mov
add
jno
aas
cmc
into
ja
jbe
dec
ss
fwait
aad
sbb
loopne
mov
cmp
je
into
stos
arpl
mov
xlat
or
jo
pop
mov
or
ret
scas
adcl
scas
xchg
adc
adc
out
psubb
pop
pusha
mov
sub
add
mov
mov
jb
jb
dec
mov
mov
hlt
cld
test
hlt
adc
sbb
or
repnz
sbb
pop
sub
lcall
lret
or
inc
pop
sub
insl
arpl
jbe
sbb
in
push
and
ss
dec
adc
pop
sbb
adc
mov
jecxz
icebp
arpl
addb
and
imul
stos
push
mov
sbb
andl
popf
js
sub
mov
dec
mov
nop
inc
xor
je
sbb
sub
pop
jns
inc
pushf
sbb
push
bound
ljmp
rcrb
pop
inc
fs
scas
lods
lcall
push
push
jns
roll
les
cmp
and
movsl
jmp
addr16
xchg
or
lcall
adc
push
cmpsl
nop
sub
subb
add
mov
cmp
in
pop
jno
pop
fwait
inc
jno
or
mov
xchg
jnp
jno
arpl
inc
popa
adcl
jle
add
add
pop
dec
hlt
sti
push
adc
push
mov
pop
jp
shlb
addr16
arpl
or
nop
cmpsl
mov
fdiv
and
outsl
mov
in
into
das
out
push
mov
clc
repz
mov
jns
mov
insl
movsl
mov
lods
pop
or
fwait
movsl
out
nop
gs
add
inc
xchg
mov
fstpl
in
ret
fistpl
pop
addr16
insl
mov
inc
xchg
pop
adc
shl
mov
jns
jge
rol
jmp
aaa
ds
lret
jl
ss
in
fwait
lds
xchg
jp
xchg
dec
test
andb
ret
push
mov
clc
dec
adc
adc
jle
fs
repnz
sbb
mov
into
jne
cld
sbb
leave
sbb
pop
pop
dec
test
xchg
pop
mov
pop
pop
xor
in
pop
cmp
sbb
mov
dec
or
ret
pop
notl
mov
loopne
mov
es
add
adc
aam
sub
test
int
fbstp
dec
sbb
mov
cs
mov
cmp
jmp
dec
js
mov
mov
arpl
loopne
leave
push
in
je
mov
ret
add
loope
into
jge
pop
sbb
scas
shll
jle
aaa
mov
or
cli
insl
jno
test
pop
lret
xchg
add
mov
pop
je
and
dec
dec
clc
push
add
shlb
pop
nop
push
mov
jmp
push
notl
xor
je
dec
xchg
mov
lret
orl
repz
xchg
and
mov
rcll
pop
sti
mov
in
sbb
push
inc
stc
xchg
push
add
sub
cmp
das
enter
cmp
cmp
fadds
leave
xor
sub
mov
xchg
je
jecxz
into
bound
mov
adc
jl
or
ss
mov
inc
orl
daa
andl
jp
insl
fnstcw
or
push
subl
and
dec
in
lds
andl
mov
ret
inc
jns
dec
cmpsl
add
loop
cmp
aam
push
xchg
dec
push
mov
jle
cwtl
lds
insl
sti
fcoms
dec
lds
mov
mov
adc
mov
cmp
and
mov
iret
fstl
and
inc
jo
dec
ret
mov
fwait
iret
mov
insl
push
pop
test
cltd
mov
adc
imul
cwtl
lea
ficoml
or
xchg
adc
fsubs
sbb
dec
inc
adc
jmp
pushf
push
jb
roll
aas
sbb
aam
mov
and
daa
out
mov
fnstenv
test
xor
push
leave
jnp
ficompl
mov
out
pop
divb
xchg
gs
insl
and
sbb
lret
add
dec
jae
jecxz
push
xchg
stc
push
push
rorl
sub
gs
pop
xor
insl
and
decb
xchg
pop
add
movsb
insl
arpl
mov
xlat
inc
push
mov
fdivrs
lcall
dec
or
sub
pusha
orb
jne
jecxz
cli
and
jb
clc
xchg
mov
sub
out
dec
imul
mov
mov
mov
add
adc
ret
cs
sub
negb
push
decb
inc
push
pop
xor
inc
sbb
adc
adc
loop
sbbb
lret
cmc
andl
mov
popf
cmp
pop
xor
test
sbb
xlat
ficomps
mov
adc
dec
pop
mov
or
xor
dec
cmpsl
imul
call
je
xor
data16
sub
mov
sbb
imul
arpl
sarb
outsl
ja
inc
in
aaa
pop
stos
mov
xor
mov
cmovno
out
or
push
add
data16
lds
shrb
ja
cld
bound
cmp
push
arpl
xorb
int3
mov
sbb
int
repnz
add
cmpsl
stos
in
push
pop
jo
clc
push
mov
dec
movsb
adc
add
mov
popf
mov
xchg
pop
adc
stc
ret
add
sbb
xchg
les
sub
les
sbb
test
fiadds
ret
mov
std
scas
stos
sbb
xchg
xchg
push
in
pop
outsb
test
sbb
arpl
jmp
dec
hlt
mov
pop
sti
cmp
pop
pop
pop
add
xor
push
in
sarb
add
adc
sbb
outsb
xchg
pop
mov
adc
xchg
jns
push
and
sub
pusha
mull
ja
sbb
std
mov
mov
sub
shrl
xor
dec
or
cltd
mov
cld
mov
out
movsl
mov
lods
insl
mov
outsb
movsb
sub
sbbl
pop
dec
in
jbe
pop
inc
sub
sbb
mov
push
and
push
ss
pmaddwd
js
mov
mov
pushf
int3
stc
cmp
jno
dec
dec
push
aaa
mov
je
lret
pop
lahf
xchg
mov
sahf
fmull
nop
aaa
fdivr
dec
lock
mov
mov
pusha
aas
movsl
lods
pop
gs
std
jp
push
pop
std
jl
adc
pusha
and
aad
mov
in
lahf
sbb
jg
pushf
pop
shr
push
into
fiadds
sahf
call
push
clc
sbbb
xchg
outsl
cmp
lcall
sahf
ja
sub
xchg
push
sub
clc
les
xor
lods
ret
das
jo
repz
stos
imul
int
sbb
jnp
mov
hlt
lods
or
add
jo
or
inc
dec
adc
lods
push
mov
xchg
repnz
xchg
xor
xor
sahf
sub
ror
stos
fnsave
rcrl
fsts
pop
and
popa
sub
mov
sbb
cld
mov
push
push
or
mov
scas
jp
test
rcll
mov
out
icebp
mov
mov
fcompl
loopne
inc
dec
fisttpll
push
mov
pop
push
and
ds
in
out
fstpt
xchg
push
xchg
shrb
jp
icebp
xchg
insl
push
push
gs
mov
inc
std
ret
mov
adc
push
arpl
fldenv
jnp
pusha
and
icebp
inc
add
fsubrs
jl
sahf
jnp
inc
xchg
imulb
sub
jo
mov
enter
scas
cld
fcoms
adc
sbb
cmp
scas
out
and
fistl
add
scas
aad
push
fldcw
cmp
pop
xor
xor
enter
and
sbb
loope
jg
push
mov
sub
jle
int
outsl
loopne
sbb
ret
adc
mov
insb
jl
fimull
cmp
stos
xor
lahf
and
daa
stos
hlt
in
inc
and
mov
mov
sbb
or
ljmp
addb
mov
push
pop
pop
sub
pop
pushf
adc
xchg
in
cmc
dec
push
push
adc
inc
mov
inc
rorb
add
cld
mov
outsl
cmp
test
int3
jne
out
fs
es
sub
sub
xchg
scas
vmwrite
mov
outsb
inc
mov
fisubl
fiadds
jecxz
shrb
repnz
lcall
mov
rcl
mov
dec
jmp
push
iret
mov
rclb
popa
push
and
addr16
stos
repnz
mov
jmp
in
mov
rolb
jae
adc
cmpsb
ret
rorl
adc
xlat
lcall
lock
mov
inc
cmp
push
mov
insb
repz
adc
ret
adc
cmp
adc
xor
pop
mov
xchg
mov
dec
sbb
in
push
xor
fxch
cmpsb
xor
and
cltd
lods
test
fmull
push
sub
iret
jecxz
jns
cmp
mov
enter
popf
pop
call
imul
lds
or
jo
lods
xor
cmpsl
insb
test
gs
adcl
sbb
data16
push
fimull
lds
jne
cmp
into
xacquire
xor
jl
sbb
jo
sbb
enter
pushf
out
jle
inc
arpl
adc
sub
mov
cmp
js
mov
cli
stos
loope
inc
vmovaps
xchg
pop
xchg
push
push
js
mov
fwait
shrb
and
out
or
inc
mov
arpl
in
test
std
sbb
mov
out
pop
lcall
test
stos
enter
jae
add
jmp
arpl
ja
pop
jbe
xor
shrb
jmp
push
ljmp
shl
fs
xchg
sbb
leave
repz
popf
or
push
roll
test
aaa
or
pushf
es
xor
sbb
sbb
repnz
out
push
popf
in
cmp
adc
shr
pop
pop
std
jns
jbe
out
jp
inc
xchg
pushf
std
fnsave
or
test
aas
insl
adc
imul
test
or
mul
jno
push
sti
stos
xor
add
sbb
xchg
jns
fcmove
xchg
ljmp
lret
sub
and
imul
aas
jecxz
ud1
cmp
dec
gs
inc
and
sbb
pop
cltd
lcall
dec
int3
push
or
es
das
or
fcompl
into
mov
mov
cmpsl
pushf
sahf
or
mov
mov
ds
pop
and
dec
pop
pop
xor
call
and
mov
cmp
daa
test
mov
push
pop
xchg
ja
adcb
mov
sahf
adc
push
add
xchg
call
lods
xchg
outsb
lret
jae
sub
sub
enter
inc
in
push
out
imul
pop
inc
add
mov
or
inc
loope
das
pop
push
and
int
mov
je
iret
push
dec
jae
pop
mov
add
sbb
push
jmp
insl
ffreep
or
sub
mov
scas
inc
pop
aad
in
and
out
aam
dec
push
sbb
mov
adc
sbb
xchg
jl
push
adc
push
push
mov
xchg
sub
xor
js
rolb
xor
mov
push
mov
add
inc
inc
sub
lret
imulb
cwtl
sbb
jne
mov
sarb
xchg
dec
sub
sbb
cmp
popa
sbb
push
stos
and
cli
and
push
push
fstps
cmp
fisubrl
inc
mov
adc
cmp
cmp
sbb
xor
or
mov
add
lods
mov
cmp
jecxz
dec
jmp
xacquire
push
cmc
out
jle
xchg
into
cli
dec
ud2
xor
mov
cmp
into
mov
loope
in
mov
out
fdivs
pop
or
decb
call
sbb
add
mov
js
orb
pushf
cvtps2pd
jg
andps
pop
out
inc
lock
mov
push
int3
jg
and
sahf
scas
sbb
add
stos
jnp
nop
adc
xor
nop
cmp
xchg
shlb
sbb
xor
rcrl
mov
dec
adc
into
je
aad
movsb
xor
cwtl
data16
rclb
and
out
test
lds
sub
iret
mov
xor
pop
and
aas
xchg
pop
fs
cmpb
sub
dec
mov
mov
xor
mov
icebp
mov
mov
insl
fidivrl
stos
sbb
cs
and
cwtl
sub
mov
inc
sbb
insb
xchg
xchg
scas
das
fimuls
xor
cmpsb
mov
pop
adcb
and
lods
loopne
or
sbb
mov
mov
test
xor
dec
in
cmp
jno
mov
sbb
mov
stos
push
and
outsb
or
pusha
add
push
aas
and
shl
adc
scas
test
mov
pop
or
cs
jp
add
jnp
mov
pusha
pop
lods
int
pop
cmp
add
xchg
pop
mov
in
out
leave
pop
jmp
inc
mov
jbe
xchg
push
adc
sub
dec
inc
test
lock
mov
push
pusha
add
push
test
push
aam
push
push
or
push
lods
add
divl
aaa
cmpsl
mov
jl
mov
cmp
cs
mov
pop
rclb
pusha
mov
fwait
shll
nop
xor
jb
mov
push
or
aam
je
sbb
add
pop
daa
xor
jns
inc
mov
mov
and
and
mov
outsb
mov
jno
ret
jnp
cmp
add
add
push
popf
scas
in
push
out
mov
sbb
aaa
pop
dec
push
fucomp
xor
jmp
push
pop
mov
outsb
push
pop
cmp
out
mov
lods
repz
scas
idivb
out
inc
rcll
sbb
push
adcl
sti
mov
addb
std
bound
mov
push
popa
and
clc
ljmp
xor
lret
popf
test
push
push
add
scas
cli
jmp
fdivs
cli
testl
cmpsb
push
and
js
sub
push
jo
xchg
pop
lea
and
mov
decl
sahf
inc
mov
ja
push
xor
jne
adc
sub
xor
jle
nop
xchg
outsb
cmp
mov
out
mov
xchg
cmp
lret
jp
or
sub
push
mov
dec
jo
int
xor
pop
cmpsl
mov
int3
mov
xor
jle
and
mov
xchg
insb
xor
stos
and
adc
repz
mov
stos
dec
cmpsb
outsb
push
push
hlt
sarb
adc
jl
add
hlt
stos
mov
cmp
jae
sbb
iret
mov
data16
sbb
icebp
loope
cmp
add
jb
mov
mov
js
xor
clc
mov
jge
nop
fcoms
repz
pop
adc
sbb
into
pop
xor
push
and
jmp
or
arpl
push
arpl
insl
insb
out
popf
adc
dec
nop
test
enter
xor
cld
xchg
shrl
push
fstl
add
mov
rcrl
addr16
push
push
fnstcw
mov
lret
mov
loopne
mov
cmp
or
add
fisubrl
rolb
std
lods
mov
jne
ret
mov
leave
mov
add
dec
movsb
pop
pop
push
cmp
js
mov
xchg
sub
ds
adc
cmp
lcall
jl
js
dec
sbb
mov
stc
push
aad
inc
xorl
jecxz
and
inc
movsb
mov
aaa
or
dec
aas
jg
les
pusha
or
scas
sub
int
repnz
inc
cwtl
loopne
adc
cmp
out
mov
out
imul
and
sti
shll
lahf
or
xor
sbb
jb
mov
push
cmp
pop
ljmp
cmp
dec
mov
out
adcl
aaa
lods
test
or
pop
mov
out
and
sti
rcl
adc
add
mov
cmp
lods
mov
xlat
add
enter
inc
sub
or
push
xchg
hlt
sub
push
mov
push
push
adc
dec
and
sbb
adcl
arpl
in
or
sti
je
test
shlb
movb
push
insb
jns
cmp
imul
jne
add
cmpsl
jne
push
lds
pusha
leave
add
ds
aad
fbstp
and
push
mov
stos
fwait
lahf
ljmp
or
lods
mov
sub
mov
add
bound
or
paddq
insl
cwtl
loope
ret
inc
dec
jge
mov
popa
subl
add
cmp
xor
or
stc
movsl
inc
sbb
adc
fildl
stos
fiadds
sbb
cwtl
inc
dec
jl
sub
pushf
mov
aaa
add
add
mov
js
fildll
ss
in
push
mov
sbbb
mov
xlat
xor
jge
xor
loop,pn
or
sahf
lcall
je
out
call
outsb
fdivrl
inc
faddl
lds
push
fsts
add
movsb
fisubl
add
in
xor
cli
xchg
pop
int
lods
in
xchg
and
mov
pusha
and
mov
push
adcl
or
xchg
fildl
cmp
in
push
mov
pushf
lods
xchg
pusha
mov
mov
cli
movsb
mov
add
add
imul
ja
lea
stos
inc
and
sub
cmp
bound
loop
fdivs
pushf
sahf
sub
test
dec
inc
pop
dec
jbe
mov
aas
jg
imul
mov
rolb
sbb
std
dec
lret
mov
inc
lahf
sub
in
adc
pop
rolb
add
mov
scas
shrl
pop
rclb
imull
cmc
std
pop
push
mov
cmp
imul
sbb
or
pop
dec
and
dec
test
push
pop
lret
js
xor
pop
movsl
outsl
inc
add
or
sahf
fstl
shrb
mov
mov
inc
shlb
jg
in
add
push
mov
inc
cli
pop
cmpsl
out
push
lahf
mov
roll
sbb
adc
xchg
pop
neg
mov
and
xchg
mov
pop
jae
and
jmp
pop
add
ja
lret
dec
mov
out
cltd
mov
mov
xchg
popa
push
cli
aad
subl
push
pop
push
call
cmp
sahf
movsl
clc
imul
stc
and
jmp
into
xchg
pop
scas
popa
gs
mov
or
mov
lds
call
aaa
or
push
cltd
mov
mov
arpl
decb
dec
pop
insb
sub
push
sub
cltd
mov
cmpb
lret
cwtl
lds
jg
xchg
mov
mov
or
sub
fucom
dec
xor
xchg
dec
iret
xchg
and
inc
out
imul
sub
mov
push
sbb
mov
stos
mov
mov
dec
jo
add
dec
push
fwait
pop
mov
clc
mov
inc
xlat
adcl
pop
cwtl
in
dec
push
dec
lock
ja
inc
idiv
cmp
push
sbb
imul
test
pop
inc
adc
inc
subl
adc
scas
leave
imull
pop
mov
mov
or
je
xchg
int3
sti
stos
jno
insl
sbb
orb
jb
mov
add
xor
cmp
and
mov
mov
add
icebp
pop
inc
push
pusha
out
xor
aad
dec
inc
or
xor
repnz
pop
jp
loopne
jl
call
pop
ja
add
pop
jb
sahf
int3
mov
js
add
cmpsl
push
pop
popa
enter
xchg
add
or
mov
add
les
sub
sub
fisttpl
cld
dec
pop
divb
or
cld
inc
outsl
xchg
adcl
std
pop
clc
mov
pop
bnd
pop
daa
popf
mov
cwtl
cmp
cmp
into
xchg
nop
rcrl
filds
scas
gs
push
jecxz
outsb
cmp
ss
add
cld
pop
lahf
mov
and
div
lods
aaa
pop
jp
mov
sub
pop
shll
inc
dec
in
adc
cmp
adc
int3
dec
jl
sub
je
loop
into
cs
sbb
call
push
jmp
cmp
rolb
mov
and
cmpsl
imul
push
adc
cmp
jnp
inc
fstp
shl
cld
repz
or
adc
bound
jl
jo
adc
enter
xchg
xchg
add
es
fdivs
cld
outsb
rcll
adc
push
mov
dec
pushf
sub
out
push
insl
negl
xchg
jne
popf
lcall
fsubrs
call
push
insb
jecxz
add
pusha
mov
gs
mov
adc
adc
dec
xlat
mov
out
push
test
pop
mov
jbe
jne
adc
icebp
xchg
sub
cs
pop
sbb
xor
test
pop
shr
push
cld
sbb
mov
inc
adc
cmc
or
mov
push
dec
mov
sbb
fwait
pop
sub
aam
adc
mov
mov
outsb
call
mov
out
mov
sub
scas
das
daa
adc
and
sarb
mov
jno
and
mov
sub
cwtl
popa
out
cmpsl
orl
int3
sub
cmp
movsb
fwait
push
adc
ss
out
adc
out
push
mov
inc
arpl
pop
pop
insb
je
pop
int
mov
sub
or
jge
ds
sub
sti
adc
cmp
add
mov
adc
xorb
idivb
adc
push
dec
insb
xchg
ret
cmp
in
inc
adc
pop
xor
out
fistpl
pop
loope
dec
jb
mov
lods
ficoms
xlat
roll
rorb
xchg
mov
ret
insl
ret
adc
adcb
xor
imul
fidivrl
mov
jl
movsb
ss
aaa
mov
xchg
sub
inc
cmp
fmuls
stos
aad
or
mov
and
js
iret
stc
out
divb
outsb
push
ljmp
push
push
push
sbb
sub
loop
add
push
sti
flds
adcb
insl
std
mov
lcall
stc
or
jmp
lods
enter
adc
inc
in
into
dec
repz
out
push
xchg
in
inc
loop
mov
popf
orl
cmpsl
insl
in
xchg
test
sbb
mov
subb
fwait
fs
out
nop
jl
xacquire
mov
mov
mov
call
ret
jle
xchg
cmp
scas
aam
adc
cwtl
les
xchg
fdivl
iret
les
inc
mov
leave
dec
outsb
mov
xlat
ret
xor
cmc
movsb
arpl
imul
push
pop
add
xlat
mov
add
outsl
cmc
cmp
insb
ret
sti
xor
sbb
in
insb
xchg
mov
stos
rorb
add
pop
scas
mov
inc
xchg
enter
jbe
cmp
test
arpl
push
xchg
sbb
scas
dec
jmp
cltd
push
mov
testb
rclb
mov
mov
fyl2x
outsb
push
mov
jns
mov
jne
aaa
xlat
jmp
mov
shlb
add
mov
cltd
je
adc
add
push
lock
aam
out
pop
xor
mov
aas
js
das
add
adc
push
cmc
jo
pop
lds
loope
icebp
inc
jnp
sub
mov
xor
stos
hlt
bound
jge
push
out
cwtl
jo
push
dec
shll
insb
add
enter
cmp
sub
pop
les
lret
or
add
je
pop
fisubl
data16
and
mov
mov
add
popa
mov
mov
add
jne
or
lods
int3
loopne
rcrb
loopne
sbb
inc
cmpsb
pop
shlb
pop
aam
inc
jo
xchg
loopne
pop
outsl
inc
xor
pop
fnstcw
cs
adc
roll
fldenv
lods
cli
fdivrs
mov
inc
mov
xchg
push
lret
repz
jns
loop
ret
xor
nop
sahf
xor
shrl
movsl
shll
aam
jp
mov
pop
andl
dec
adc
mov
icebp
daa
cmpsb
inc
inc
pusha
loopne
pop
sbb
push
add
inc
dec
mov
xchg
mov
aam
bound
mov
fsts
mov
ret
out
mov
out
stos
mov
out
loope
out
incl
mov
fsubs
cmp
lods
rcll
sbb
jnp
mov
mov
mov
lods
gs
and
stc
jb
adc
pop
mov
cs
mov
clc
js
es
sti
inc
and
das
jmp
jno
aad
incl
cmc
in
insl
push
call
jae
mov
scas
dec
addb
rol
xor
addr16
stos
fmull
adc
std
call
nop
dec
lods
ret
jo
hlt
lods
push
pop
dec
test
mov
mov
adcl
repnz
dec
in
push
mov
adc
fstps
jnp
xor
imulb
sbbl
and
test
cli
out
test
stc
push
pop
add
mov
push
stos
incb
jmp
pop
push
mov
leave
rorb
dec
push
lods
inc
cmpsl
lods
fiadds
or
dec
push
jae
std
nop
repz
push
lret
push
nop
repnz
push
addr16
add
sar
pop
or
sub
push
mov
cmp
cmp
jno
jmp
mov
jmp
mov
add
insb
sbb
dec
stos
lods
fstps
popf
mov
popa
loop
js,pn
sub
scas
fstps
sub
and
ja
adc
adc
jb
ljmp
cmc
xchg
pusha
leave
mov
sub
ja
loop
lea
mov
mov
cli
push
int
mov
movsl
mov
cmp
add
push
pop
lcall
bound
ficomps
jne
call
inc
adc
jae
insl
xor
xchg
fnsave
push
pop
rep
push
dec
lds
dec
inc
pop
hlt
repnz
rcrb
fstl
push
push
fdiv
fs
mov
push
test
in
jne
mov
sub
std
and
in
cmp
cmp
xchg
stos
sbb
mov
xor
or
jns
jge
push
scas
daa
dec
jle
cmp
cmp
pop
push
outsl
push
add
jge
or
mov
adcb
int
push
push
aad
bnd
stos
xor
fldenv
fidivrs
jns
pop
push
fnstenv
xlat
in
aaa
push
inc
mov
sbb
mov
pop
mov
inc
neg
sar
push
pop
ret
nop
mov
outsl
mov
inc
icebp
aad
cs
addr16
sbb
xchg
jns
pusha
push
mov
fs
pusha
xor
sbb
nop
adc
mov
cmpsl
xchg
push
movsb
call
xchg
add
cmp
add
icebp
js
xor
into
nop
fstpl
add
jle
ret
mov
ret
pop
int3
dec
pusha
or
sbb
sbb
sub
je
in
insb
adc
add
jp
jns
and
movsl
pop
mov
lahf
popf
hlt
movsb
jno
sub
aas
mov
int3
jecxz
mov
cmc
dec
into
and
test
dec
mov
lea
mov
and
sub
add
shll
rcrb
in
sbb
sbb
inc
popa
sarl
mov
js
inc
loope
mov
lahf
insl
mov
mov
fsubs
xor
daa
ret
sub
outsl
mov
loop
test
jge
or
mov
popa
cmc
pop
call
cmovs
pop
rol
pop
scas
inc
stos
cmp
adcb
sub
iret
add
mov
push
scas
loop
outsl
dec
enter
xchg
or
repz
jmp
pop
or
jae
xor
inc
mov
jmp
sub
sub
outsl
jmp
jns
xlat
xchg
add
sbb
and
lods
mov
sub
fs
cmpsl
lret
xlat
dec
xor
push
jl
into
xchg
pop
scas
xor
data16
enter
scas
enter
lahf
and
cs
mov
fs
iret
pop
pop
lret
in
sbb
mov
cs
aam
and
imul
test
inc
shlb
scas
jno
xor
int
xchg
xchg
gs
cmp
push
cmc
mov
add
sub
sti
stos
cli
cs
adc
ljmp
xchg
or
frstor
add
push
mov
fwait
adc
jle
mov
pop
fs
cmpsb
fisttpl
js
inc
rol
pop
inc
outsb
popf
pop
add
push
mov
and
popf
inc
loopne
arpl
std
xchg
mov
push
dec
in
pop
hlt
ss
sbbb
jmp
pop
mov
call
sub
insl
and
and
sbb
or
insb
cmp
inc
aas
pop
push
sbb
into
and
sbb
je
adc
mov
insb
cli
pop
lahf
dec
inc
cltd
rcll
or
mov
xchg
nop
loope
pop
xor
movb
push
movsl
push
xor
jl
adc
mov
and
enter
and
shl
sti
mov
or
sub
out
jno
mov
nop
scas
add
xchg
xor
mov
int3
sbb
in
xor
ret
push
inc
mov
fcoml
pop
jg
adc
push
mov
mov
jb
jecxz
mov
cmpsb
js
rorl
shll
shll
cmp
push
adc
imul
push
in
loop
mov
cmp
xor
stos
test
lahf
cmc
cmpb
repz
mov
cli
sbb
xchg
and
or
push
jle
add
mov
mov
mov
in
std
int
int
xor
jns
add
clc
mov
add
mov
lea
addr16
jecxz
lods
cmpsl
lret
out
aam
cmp
sub
or
jnp
push
subl
pushf
incl
ja
lret
pop
add
lahf
and
add
adc
jmp
push
clc
mov
adc
cmpl
out
dec
adc
mov
sar
or
fisubrs
outsb
cmp
mov
test
test
pushl
cmpsl
mov
add
mov
pop
dec
jne
stos
mov
loop
add
pop
sbb
xor
repnz
aas
jp
sub
cmp
lock
push
lcall
push
push
xchg
cwtl
cmp
fs
pushf
fdivrs
imul
add
std
test
es
shrl
cmp
popa
mov
push
in
xchg
rep
mov
push
jl
sub
push
icebp
mov
jnp
repz
push
xchg
pop
mov
repz
in
rcl
dec
push
shrl
aaa
xchg
and
sbb
insl
inc
mov
out
cmc
inc
daa
mov
sbb
xor
clc
add
rorl
adc
pop
xor
incl
addl
mov
popa
xor
xor
pop
sub
xchg
leave
dec
mov
repz
idivl
mov
int
xlat
dec
fwait
sbb
nop
mov
popf
lret
mov
mov
loope
cmpsl
popa
scas
sbb
shlb
lret
add
push
mov
mov
sar
sbb
jne
cmpl
dec
pop
pop
pop
push
rcrl
cmp
loopne
and
fdivrl
jmp
xor
xchg
js
or
pop
mov
fnsave
adc
fstl
sahf
mov
mov
outsl
dec
arpl
mov
mov
nop
lret
cmp
and
dec
stos
loop
orl
ja
pop
and
out
sub
jbe
add
mov
lds
jb
scas
dec
hlt
sub
dec
push
mov
dec
add
lds
imul
mov
fwait
test
enter
jb
inc
jae
testl
outsb
jmp
call
out
imul
mull
add
pop
mov
xor
push
mov
or
subb
xchg
ds
in
and
jo
adc
pushf
cli
lahf
push
lcall
cmp
add
adc
mov
xchg
xchg
pop
leave
daa
aaa
add
and
popl
adcl
mov
adc
popa
sbb
and
add
hlt
mov
push
pop
and
push
push
cmc
enter
repz
dec
mov
xor
cmpsb
jp
ja
mov
sbb
leave
roll
in
jl
or
sti
lods
sbb
sbb
jl
aad
jno
mov
loope
xchg
xchg
aam
fcoms
jl
dec
aad
pop
and
aaa
mulb
xlat
push
out
into
cmpsl
lcall
ljmp
cmc
lret
mov
or
imul
and
out
cmp
push
sub
jge
sub
movsl
std
loopne
and
rclb
dec
inc
xchg
mov
or
movsl
aam
mov
dec
mov
out
pop
dec
lret
das
mov
push
add
jg
jne
add
arpl
add
dec
add
add
fcomi
xrelease
popa
adc
pop
sub
mov
xchg
movsb
movsb
es
add
sahf
push
mov
ja
insb
daa
or
push
jno
cmp
nop
adc
in
inc
scas
lcall
mov
xor
cmpsb
bound
mov
aaa
push
int3
cmp
sbb
sar
sub
scas
aas
scas
mov
pop
jbe
xchg
push
je
mov
push
adc
and
dec
mov
enter
push
xor
stos
insb
ret
je
mov
stc
out
cmpsl
lahf
faddl
pop
leave
adc
jno
lock
aad
jmp
shll
jns
es
sub
xchg
es
adcl
cmp
fs
jmp
cmpsb
jbe
push
fwait
aam
push
jp
js
addr16
pusha
aam
lea
pop
adc
fstpt
js
or
jno
add
adc
push
push
ret
fisubrs
dec
and
sbb
xor
fidivrs
cmc
fucom
and
sub
ljmp
dec
xchg
mov
dec
icebp
cmp
movsb
mov
cmp
inc
inc
jo
hlt
cmp
mov
cmp
xchg
ds
xchg
das
add
mov
pop
and
in
push
dec
stos
arpl
jbe
jbe
dec
imul
jg
push
dec
inc
fstl
pushf
mov
mov
adc
aas
mov
push
dec
jle
jmp
pop
cld
push
popa
shll
mov
or
mov
popa
inc
sbb
adc
and
sub
out
sbb
pop
jmp
mov
stos
idivb
ljmp
js
out
inc
mov
inc
mov
jmp
test
lods
scas
cmp
cltd
cmc
stc
scas
enter
clc
jle
scas
fs
pushf
pop
mov
lret
push
mov
fdivrs
outsl
addb
bt
push
shr
mov
or
add
int3
fcmovbe
les
out
or
dec
aam
fucomip
andl
iret
outsl
aam
icebp
and
mov
repnz
push
daa
push
popf
ljmp
cld
jo
lods
cli
jb
mov
add
mov
sbb
or
pop
adc
sub
jb
xor
or
mov
mov
mov
jno
mov
daa
orb
xchg
pop
test
loopne
mov
rcr
adc
movsb
inc
or
push
mov
testl
in
xor
jg
call
shl
in
inc
lods
sbb
lock
or
xchg
lret
ret
cmp
out
in
pop
ja
add
pop
repz
outsl
icebp
fwait
push
push
js
xor
xor
leave
addr16
add
shll
pop
stc
lret
mov
ljmp
xor
sub
pop
jbe
mov
cwtl
sbb
test
push
clc
xchg
dec
jae
aam
lods
pop
mov
lret
adc
mov
pushf
mov
cmp
aaa
sti
xchg
mov
leave
sub
xor
in
mov
jp
sub
nop
adc
mov
mov
cmp
mov
lds
out
arpl
lret
pop
add
lret
scas
lods
mov
pop
push
aas
dec
mov
add
shlb
lods
sbb
outsb
mov
testl
std
lds
jp
or
jg
sahf
push
jns
fcmovnbe
jnp
add
sti
sbb
flds
xor
push
pop
mov
das
sub
xchg
dec
jno
pushf
enter
adc
jecxz
push
xor
je
adc
cmpsl
int3
and
push
jns
iret
mov
adc
mov
das
in
aas
stos
jo
sbb
je
lcall
ret
and
push
cmc
es
dec
inc
add
sar
fnstsw
adc
sub
das
sub
cltd
lahf
notb
xchg
adc
fists
mov
das
out
scas
loop
inc
into
out
lods
xor
and
lahf
rorl
jb
dec
subb
pushf
divb
in
hlt
pop
aad
dec
cmp
pop
push
repz
sbb
add
jb
jo
xor
cmp
add
out
je
add
arpl
stc
shrl
or
push
es
das
enter
xor
loope
popa
inc
xchg
jne
dec
xchg
adc
push
jl
add
and
pop
imul
lods
test
ficompl
sahf
add
sbb
mov
pop
mov
and
faddl
dec
and
add
icebp
mov
jp
xor
popf
cmp
das
sahf
mov
fwait
xor
pusha
mov
xchg
stc
fdivrs
xchg
xchg
test
rorl
mov
pop
mov
mov
mov
iret
inc
fsubs
xor
fnstsw
mov
sbb
test
xchg
or
out
cs
out
pop
idivb
fs
push
pushf
aad
inc
pop
jl
pop
sub
in
insb
jl
cs
add
mov
jne
sub
add
out
adc
pop
mov
lods
push
inc
enter
cwtl
dec
inc
bound
adc
sbb
sbb
pop
mov
push
std
bound
into
mov
rorl
filds
inc
jl
loopne
rcrl
cwtl
push
mov
ljmp
shl
xor
add
inc
jge
or
mov
fsubrs
cli
out
xor
and
scas
in
inc
and
jl
xchg
sar
xor
jecxz
jg
xchg
xchg
push
in
dec
jne
mov
flds
imul
repnz
sbb
sbb
fistpll
push
pop
test
fcmovne
push
xor
or
ljmp
cmp
sbb
jl
jp
bound
shrb
bsf
mov
lret
out
xor
push
pushf
push
dec
jle
rcl
xchg
xor
inc
push
aas
fiaddl
sub
loope
mov
add
es
mov
sub
std
xchg
in
xorl
cmpsl
dec
or
icebp
push
sub
mov
sbb
pop
fsts
cmpsl
mov
aas
lret
mov
pop
dec
sub
push
stos
pop
jge
mov
cmp
jnp
fwait
adc
stc
mov
jmp
nop
xchg
inc
in
daa
sbb
xchg
and
jmp
xor
out
fdivs
jnp
leave
mov
jl
xlat
push
xchg
add
movsl
mov
adc
inc
ljmp
mov
scas
jmp
sbb
and
jbe
pop
pop
lahf
and
cmp
faddl
gs
push
int
pop
pop
mov
gs
lahf
iret
popa
mov
xchg
mov
cmp
xchg
xor
xchg
stos
and
xor
fdivrp
adc
xchg
jg
push
fwait
and
fisubl
mov
sub
dec
xor
rep
jg
jb
mov
jp
jg
fldcw
jp
xchg
cs
ret
fdivl
dec
jl
nop
xlat
out
lods
gs
jmp
mov
lret
insb
mov
xchg
inc
xor
aas
lret
xor
adc
shll
and
fdivs
lret
mov
lods
rcl
or
arpl
mov
inc
aas
and
jle
dec
jns
test
fs
scas
add
in
push
jno
idivl
in
arpl
add
repz
std
pop
push
jnp
and
inc
test
jecxz
push
mov
in
mov
mov
and
popa
cmc
inc
std
inc
jg
push
stos
pop
or
push
pop
ud2
int
pop
sub
xor
outsl
push
and
lds
sbb
lret
mov
dec
dec
mov
loop
push
or
xchg
sub
mov
xlat
sarl
mov
cmp
scas
or
cmp
add
leave
fdivs
jne
cmpsb
sub
add
scas
insb
negl
and
and
xlat
pop
stc
jb
pushf
dec
hlt
xchg
push
cs
push
jle
ficoms
mov
lds
or
inc
dec
and
push
hlt
cwtl
rcpps
fdivrs
pop
outsl
sub
mov
xor
or
repz
mov
inc
daa
ret
lds
mov
jb
fnstenv
enter
pop
sub
es
mov
popa
ds
movsl
mov
nop
cmp
cmc
outsb
sbb
imul
add
xor
lahf
lock
leave
les
movsb
push
sub
xchg
insl
pop
xor
int3
shrb
sbb
in
fs
shll
int3
subb
xchg
js
scas
testb
pushf
loopne
std
push
mov
and
shrl
xor
inc
push
stos
stc
mov
add
mov
and
pushf
sbb
gs
fisubs
pop
iret
push
xor
cmpsl
mov
in
addr16
mov
or
sbb
sbb
mov
mov
test
cmpb
fsts
add
ljmp
testb
mov
inc
pop
mov
xor
xor
es
fiaddl
data16
fdivr
xor
dec
inc
ret
test
xor
jb
add
mov
cmp
fwait
push
inc
jae
addb
jmp
cmp
mov
jl
jae
xlat
xlat
sbb
out
ja
cld
adc
pop
mov
outsl
push
inc
mov
push
mov
xchg
jge
jb
dec
mov
inc
shrb
mov
stos
call
push
arpl
cmp
mov
dec
lds
stos
jae
jnp
xchg
aad
sub
aam
mov
cld
aas
sub
jle
test
int
popa
ret
andnps
pop
sbb
pop
fsubl
repz
jb
insb
clc
cmp
sbb
xor
inc
cld
movb
jae
sub
mov
movsl
ds
xor
adc
mov
inc
jae
mov
cmpsb
pop
dec
in
movsb
sarb
shlb
icebp
js
ljmp
pushf
popa
xor
cld
outsb
nop
inc
pop
pop
cmpsb
sub
shufps
les
out
lahf
fisttps
in
in
in
jbe
mov
and
dec
repz
or
push
xchg
decl
call
mov
xchg
fldl
inc
mov
mov
int3
mov
fidivrl
jl
nop
lret
cmpsb
in
lea
jmp
testl
adc
mov
js
int
or
jne
push
sbbb
sbb
int3
stc
or
mov
xor
ss
outsl
and
adc
pop
jmp
dec
or
mov
hlt
dec
mov
icebp
test
int3
frstor
jne
int3
jge
pop
xchg
je
inc
int3
and
fnstsw
mov
sbb
mov
cld
sub
fiaddl
jmp
jb
popa
repz
cltd
mov
loopne
aam
pop
outsl
stos
scas
movsl
mov
mov
movsl
sbb
fiadds
push
push
add
nop
addr16
jne
push
aas
imul
shrb
pushf
arpl
addb
dec
xchg
inc
stos
sub
dec
push
gs
movsb
hlt
add
sbb
xchg
test
js
fnstsw
insb
jae
push
rorl
jmp
inc
or
xor
push
repnz
jg
mov
mov
mov
jne
je
jno
sub
dec
test
mov
pop
inc
loop
and
jnp
fld
cmovae
pop
ud2
xor
imul
outsl
push
mov
or
ja
lret
es
mov
adc
pop
mov
and
in
adc
sub
xor
sarl
rclb
xor
xor
push
mov
jo
fwait
push
inc
push
inc
mov
arpl
in
jge
sbb
popl
ror
mov
fmul
push
or
dec
ljmp
outsl
mov
sub
cmpsb
xchg
insb
or
push
rcr
nop
adcb
xor
mov
sub
xor
xor
scas
int
push
popa
test
mov
or
adc
test
inc
lods
mov
pop
ror
shlb
popa
roll
cmp
push
xchg
fwait
cmp
in
nop
cwtl
cmp
jne
fld1
das
jno
arpl
xor
clc
rcrl
add
and
ret
andl
xor
popf
dec
inc
jne
mov
icebp
xor
adc
idivl
loope
sahf
rclb
mov
sarl
push
popl
aam
popf
pop
mov
popa
adc
orl
adc
pop
dec
dec
dec
ds
cmp
movsl
mov
pop
rolb
out
pop
jl
ss
aad
ja
bound
fwait
mov
xchg
jnp
push
out
in
rorb
rorb
mov
mov
std
xchg
les
cmp
sub
repz
xchg
jge
inc
fidivs
lret
push
cs
cmp
mov
and
adc
in
sbb
fsts
inc
lods
int
insl
mov
push
movsl
in
inc
sbb
getsec
xchg
xor
pop
cli
xchg
xor
sbb
sbb
jb
cmp
es
xchg
in
enter
push
inc
popa
shl
pop
nop
adc
jecxz
call
fdivr
aam
stc
fldcw
dec
push
enter
fnstcw
xchg
loopne
push
shrl
pop
fstpt
mov
testl
jmp
mov
jno,pn
aad
bound
lahf
add
sbb
mov
pop
shll
sahf
jmp
jge
jbe
adc
adc
mov
and
jl
es
fstpl
fdivrl
orl
syscall
outsb
repnz
pop
jle
adc
add
dec
adc
lcall
pop
outsb
sbbl
aad
js
stos
mov
mov
mov
lds
aas
adc
jb
sbb
das
mov
mov
or
inc
mov
decl
cmpsb
adc
ret
fbld
cmpb
imul
and
inc
xchg
pop
jb
test
aad
xchg
aaa
lret
jg
cli
popf
cld
sub
pop
sbb
lret
cmp
divl
in
lock
imul
push
or
movzbl
cmc
cld
bound
xchg
enter
push
setbe
push
cltd
pop
xchg
xor
mov
dec
mov
lds
mov
gs
sti
or
cwtl
icebp
fucomi
imul
aas
jmp
sbb
pop
mov
ficompl
push
popl
jns
in
and
add
repnz
test
dec
jae
push
mov
aam
mov
mov
das
and
xorb
mov
push
mov
inc
jb
outsb
movsb
jns
jne
jno
mov
repnz
shll
push
inc
imul
jecxz
pop
mov
js
sbb
pusha
pushf
pop
fdivs
dec
stos
int
sub
add
push
andl
inc
or
test
mov
dec
faddl
xlat
nop
outsl
fadds
ficoms
out
xor
cld
in
into
dec
mov
push
pop
sahf
xor
mov
ljmp
or
leave
ret
into
adc
add
clc
stos
pop
test
xchg
flds
xchg
sbb
rolb
outsl
call
aam
mov
add
sarl
in
aaa
neg
imul
mov
and
mov
and
sub
sarl
or
enter
sbb
dec
xor
loop
pop
mov
in
loop
test
int
xlat
or
xchg
popf
mov
scas
nop
outsb
mov
shl
rorl
pop
bound
aad
rcll
scas
pop
inc
test
push
rol
pop
mov
dec
fisubs
lods
sub
fs
and
mov
cltd
xor
and
add
cld
mov
cmpsb
rcll
push
inc
or
out
mov
jl
adc
notl
addr16
mov
js
mov
lahf
mov
and
jnp
mov
mov
out
dec
jp
scas
rorl
pop
aaa
mov
jmp
call
adcl
or
sbb
mov
push
xchg
mov
gs
ds
sub
les
mov
and
mov
dec
outsb
rcrb
les
das
pushw
in
adc
stos
in
cli
cmp
insl
mov
sub
push
cmp
and
roll
cmpsb
testl
int3
je,pn
xchg
jb
inc
repnz
push
int
add
sub
movb
cld
dec
mov
orb
mov
int3
popf
adc
sbb
outsl
jle
cltd
fnsave
inc
lahf
sbb
mov
icebp
je
outsl
mov
xor
and
dec
lret
fiaddl
fbld
and
adc
sbb
sbb
pop
sbb
lret
jmp
adc
pop
jecxz
fsubs
xchg
cltd
call
mov
test
mov
or
push
push
ja
aad
push
cli
add
inc
jecxz
pop
cld
fbld
xchg
mov
xchg
ret
dec
das
outsb
dec
popa
pop
movsl
xchg
jp
je
ljmp
push
mov
outsb
push
pop
mov
into
cmp
rolb
divb
test
xor
push
es
jno
sub
pop
sbb
sahf
out
pop
aas
and
js
fidivrs
lea
sub
loopne
push
sbb
fsts
or
and
mov
mov
cld
mov
push
xchg
les
lret
fisubl
mov
in
outsb
xchg
test
js
js
call
lea
fwait
jl
stos
jl
sub
xor
aad
lods
or
mov
pushf
cltd
jnp
cmp
push
pop
and
outsb
add
movsl
arpl
vmaxps
pusha
fdivrs
lods
adc
jae
testl
adc
xchg
lahf
lcall
xchg
xor
scas
dec
es
rcrb
shll
cmpb
push
inc
lods
pushf
pop
mov
adc
add
in
ja
out
mov
push
sti
es
sbb
jns
in
enter
jle
mov
xor
gs
mov
lods
xchg
loope
outsl
lods
or
outsb
sub
sub
mov
fs
cltd
adc
pop
ljmp
data16
push
test
jo
sbb
hlt
mov
outsl
jg
stos
loopne
inc
or
sbb
test
cmp
sbb
push
repz
add
pop
fwait
sub
and
loopne
sub
pop
push
xor
xlat
sbb
xlat
xor
test
push
out
cmpsl
cli
sub
adcb
mov
lods
sub
inc
mov
lahf
popa
add
je
pop
dec
test
cmp
ficompl
jmp
sub
jb
jmp
mov
cmp
shl
push
ljmp
add
aaa
push
sub
loopne
mov
fisubrl
repz
adc
mov
inc
pusha
pop
push
in
add
jp
ret
leave
leave
dec
cmp
lods
jo
mov
sub
sub
sbb
push
repnz
fildl
repnz
imul
adc
mov
push
enter
lret
call
repz
fsubrl
mov
mov
and
xchg
push
mov
sahf
enter
jmp
frstor
stc
cmp
loop
inc
jo
scas
jmp
mov
push
push
or
or
jno
enter
pop
enter
cmpsl
pop
out
enter
test
iret
out
imul
les
pop
inc
push
or
xorb
push
lock
push
adc
popf
cs
in
enter
jg
or
cmp
push
mov
sti
clc
lcall
es
xchg
hlt
sbb
push
and
icebp
push
int
clc
pop
clc
ljmp
fstpl
fcoml
ret
dec
cmpb
int
jg
rcl
pop
add
lock
outsl
clc
imul
iret
rcll
sub
pushf
sahf
popf
adc
adc
mov
idivl
inc
fidivrs
jno
jecxz
fbstp
lcall
mov
mov
outsl
add
and
mov
mov
aaa
xchg
xchg
imul
inc
scas
shrl
mov
sbb
out
cld
cwtl
outsl
orl
int
mov
mov
push
adc
hlt
xor
pop
dec
adc
or
push
popf
out
sub
xlat
ret
add
mov
jnp
ljmp
les
push
and
mov
and
cmp
xor
mov
sbb
push
pop
popa
call
shl
popf
jl
lods
adc
and
cvtps2pd
testb
mov
xlat
pop
add
mov
pushf
xor
pop
xchg
lea
jg
call
adc
cmc
cmp
dec
jns
inc
cli
movsb
dec
dec
jle
sbb
popf
pusha
jb
loope
lock
gs
jge
cli
pop
push
jb
aaa
push
push
ja
and
packuswb
outsb
and
bound
insb
adc
jne
fs
icebp
adcl
lcall
xchg
xchg
lret
push
push
sahf
pop
xor
gs
cli
cmp
fsubr
mov
xchg
cmpsl
outsl
mov
arpl
xor
xchg
mov
test
test
clc
stos
movsl
cmpsl
xchg
or
mov
dec
mov
sbb
xchg
aam
xor
out
insl
mov
out
sbb
das
mov
pushf
jne
sub
sbb
sub
jbe
dec
out
mov
push
pop
lea
xchg
arpl
inc
xchg
sbb
loopne
jbe
pop
out
stos
xchg
pop
aam
jp
mov
xor
add
loopne
or
inc
dec
pushf
jb
test
mov
fdivrs
sub
or
mov
fucomi
push
call
lret
jmp
add
in
arpl
sub
movsl
in
dec
push
lahf
movsl
mov
push
imul
add
and
in
sahf
mov
dec
popl
sbb
xor
cwtl
movsb
xchg
or
imul
loopne
ljmp
dec
jne
fildl
enter
push
std
adc
push
addr16
loope
adc
mov
pop
iret
hlt
push
rcll
xor
dec
inc
std
loopne
xchg
push
pop
popf
mov
mov
or
movsb
cmp
inc
push
insl
mov
lock
adc
fiadds
and
mov
adc
enter
int
fimull
pusha
mov
fdivrl
jae
in
or
lods
aaa
pop
je
shll
cmp
dec
mov
mov
cmp
lret
sub
xchg
or
dec
out
push
sub
loopne
push
into
inc
push
mov
out
jp
pop
xor
mov
inc
scas
icebp
xchg
aas
sub
or
inc
adc
shrl
mov
mov
sub
and
fsts
mov
dec
popf
jno
lock
movsl
into
cmc
adc
movsl
fimuls
sbb
adc
cmp
rcrb
sbb
inc
pop
adc
nop
or
imulb
jge
out
ret
or
cmp
inc
mov
push
repnz
roll
out
cs
in
jnp
push
pop
scas
or
cs
cwtl
dec
inc
adc
pop
mov
insl
int3
push
mov
insl
adc
cli
cmpb
jmp
bound
cmp
or
pop
test
iret
xorl
jecxz
arpl
jbe
or
jnp
xchg
jg
cli
xor
push
sub
xor
inc
xchg
mov
mov
mov
adc
lret
mov
mov
incb
daa
xchg
in
add
cmpxchg
cmp
movsb
ljmp
cmp
aaa
inc
notb
sbb
xchg
jns
sbb
shlb
lret
mov
inc
adc
pop
daa
push
out
insl
xor
andps
jnp
adc
jge
movsb
fistps
mov
xor
jno
push
incl
pop
pop
adc
cmpb
mov
sub
xchg
push
adc
icebp
and
je
xchg
mov
sub
in
push
adc
mov
cmp
push
cmpsb
scas
jl
stos
mov
inc
pop
inc
mov
mov
push
mov
push
mov
inc
dec
sbb
cmp
rcll
push
aas
add
aaa
push
sbb
mov
and
es
fmull
or
cmp
arpl
and
inc
pop
lods
or
mov
xchg
adc
in
xor
pop
leave
xchg
inc
xchg
or
xor
inc
ss
and
cmp
inc
mov
in
lret
jle
mov
gs
jmp
es
cmp
mov
add
mov
ret
push
gs
adc
rolb
pop
jae
loope
sub
push
clc
loopne
lahf
pop
xor
fadds
mov
clc
fwait
xchg
and
int3
cmpsl
and
ljmp
mov
cltd
jns
mov
es
mov
shlb
sub
js
cmp
jne
xchg
mov
dec
fldenv
sbb
pop
xor
in
push
fdivs
push
out
sbb
aas
sti
notl
fmull
rcll
and
les
je
cmp
lcall
add
sbb
pop
insb
cmp
mov
xchg
pushf
mov
inc
aas
sbb
loopne
add
imul
and
addl
cmp
movsl
push
lret
sbb
mov
test
popf
in
scas
fld1
in
dec
inc
out
xor
movsb
pop
jne
sbb
sbb
into
push
repz
pop
ss
push
movsb
jp
lcall
out
mov
cmpsl
xor
pop
mov
jecxz
test
cld
xchg
push
xor
mov
movsb
out
mov
shrl
repz
jle
adc
sub
popa
xor
xchg
stos
mov
iret
jge
clc
ret
outsb
xor
jae
mov
xchg
mov
hlt
adc
pop
sarl
jo
test
mov
inc
leave
jge
andb
cmp
xlat
xor
cmp
jle
mov
insl
jb
mov
bnd
dec
add
lret
xor
scas
mov
push
mov
jae
push
mov
hlt
or
push
xor
push
push
cmp
enter
cwtl
lds
lret
or
adc
mov
sbb
rcrb
bound
dec
hlt
lret
xor
rorb
cli
xor
in
outsb
icebp
push
cmp
js
xchg
out
sub
push
loope
ss
sbb
pop
or
hlt
jns
xorl
xor
jecxz
inc
xadd
adc
sub
into
sub
sarb
pop
adc
rclb
ja
test
pop
sti
xor
xor
or
into
js
ja
divb
fwait
push
push
and
lods
sub
jmp
mov
outsb
test
sub
inc
xchg
or
mov
iret
jg
popa
and
or
pop
xchg
call
jge
xor
add
pop
repnz
and
mov
sbb
hlt
sub
and
dec
mov
and
inc
adc
fisttpll
scas
mov
adcl
rcr
fistpl
push
adc
push
je
sbb
int3
push
cltd
dec
in
mov
enter
or
and
push
and
inc
ret
popa
sbb
adc
jne
addr16
jg
mov
add
das
pushf
inc
cmp
push
fs
inc
mov
sahf
rclb
xchg
in
aas
pop
test
lods
xchg
aaa
ja
mov
jb
repz
and
pushf
dec
aaa
pop
push
incb
xor
mov
sbb
cmc
aas
data16
push
mov
in
out
adc
xchg
mov
jb
ja
repz
loopne
push
xchg
mov
cmpsl
inc
cltd
iret
aaa
outsb
mov
inc
mov
rcll
insb
int3
mov
mov
mov
movb
push
adc
hlt
int
dec
jl
mov
dec
popa
xchg
xor
mov
cmp
add
clc
adc
adc
loopne
xchg
jbe
inc
orl
movl
cmp
mov
cmp
mov
jb
push
test
and
pusha
iret
jmp
pop
insb
movsl
push
out
ja
cmc
xchg
fcomps
push
outsl
xor
cmp
dec
sub
pop
mov
or
cwtl
dec
jne
mov
stos
outsb
mov
aaa
push
popf
testl
lods
inc
xor
stos
subl
shrl
scas
sbb
scas
fiaddl
or
cmp
outsl
push
popa
cli
lock
test
out
notl
loop
or
fistps
fs
mov
mov
adc
in
outsl
mov
mov
movsl
jge
mov
lea
mov
jne
push
cmp
inc
mov
mov
add
iret
xor
popa
cld
bound
cld
rolb
gs
cltd
sub
insl
sbb
or
add
lcall
ret
idivb
fldt
sub
cmp
add
ss
adc
sbb
shrb
ja
and
stos
and
sub
mov
loope
mov
dec
pop
push
add
ret
es
mov
sub
sub
push
mov
push
ss
rcll
jae
jno,pt
mov
xchg
and
pop
movsb
xchg
stc
loopne
xor
into
xchg
lcall
shrb
jmp
pusha
adc
sub
jg
sbb
dec
ficoml
dec
xchg
and
inc
sbb
jecxz
adcb
push
mov
fcoms
push
mov
jecxz
ret
rclb
push
sub
xchg
mov
push
cltd
mov
pop
mov
inc
xchg
mov
imul
cmp
adc
lret
sbb
test
lods
lret
sub
jle
push
pop
sbb
mov
iret
xor
fs
mov
adc
aam
faddl
shll
or
outsl
dec
mov
mov
adc
and
mulb
enter
or
sbb
nop
mov
pushf
popf
xchg
mov
mov
ret
fs
push
dec
push
push
jo
dec
inc
leave
aam
imul
es
mov
pushl
aad
int
inc
or
mov
xchg
adc
aad
lock
clc
xchg
lahf
fs
xchg
fsub
adc
jo
fisubrl
bound
and
lret
imul
mov
test
and
sbb
xchg
push
clc
mov
inc
or
cmp
push
rolb
cs
icebp
dec
xchg
xchg
or
loopne
cmp
mov
add
sub
push
dec
test
jecxz
ret
loopne
insb
xchg
xor
jecxz
push
mov
lret
mov
ffree
or
cmpsb
jo
jp
call
shrb
mov
jno
cld
daa
rorb
jns
ss
call
mov
mov
in
mov
fmul
push
ret
cmp
mov
nop
dec
lsl
scas
cwtl
lret
mov
xchg
xchg
lret
or
cmp
fstps
mov
rclw
xchg
push
push
loop
frstpm(287
inc
stos
adc
loope
mov
and
xor
inc
cmp
mov
rolb
or
and
aam
lea
jecxz
outsl
push
mov
push
push
sbb
dec
mov
sbb
and
in
negl
addb
dec
push
fidivrs
cmovg
mov
mov
ret
and
je
lea
test
jnp
les
fiaddl
cwtl
cld
test
push
mov
data16
add
sub
aas
js
out
fs
sub
jge
fs
insb
push
push
dec
into
pop
pop
adc
rclb
movsl
fidivl
stos
popa
fwait
ljmp
inc
orl
pop
sbb
scas
xchg
arpl
mov
push
jbe
incl
push
jl
in
cmp
and
inc
test
or
sub
sub
inc
sti
scas
in
out
and
bound
daa
stc
arpl
mov
mov
and
fimull
sbb
xchg
inc
out
xchg
pop
out
pop
imul
pop
mov
ljmp
and
imul
cmp
hlt
dec
ja
pop
push
push
adc
repnz
dec
imul
push
pop
ss
test
xchg
inc
scas
xchg
mov
pusha
shll
insb
sbb
insl
cmp
mov
xchg
inc
mov
call
push
inc
push
imul
dec
mov
pop
nop
mov
push
dec
mov
xor
out
out
sub
jo
jne
scas
sbb
fsubr
lret
pop
subb
jge
js
fstpl
jae
inc
sahf
adc
inc
cld
mov
jo
into
or
pop
divl
ret
xchg
ss
mov
add
in
and
jno
test
ret
adc
xchg
add
adc
add
test
pop
jle
cld
ret
in
jle
cmp
jno
scas
int3
add
outsb
ret
aad
call
pop
je
hlt
sbb
pop
pusha
pop
movsb
push
loopne
add
pusha
lods
mov
movb
arpl
lods
dec
pop
bound
adc
inc
outsb
cmp
enter
and
pop
lods
or
hlt
xor
jae
mov
gs
fmuls
cmpsb
cmp
push
mov
push
ret
fnstsw
mov
mov
out
sbb
stos
js
push
xchg
stc
mov
leave
mov
into
mov
scas
lret
xchg
and
movsb
add
mov
mov
pop
xchg
lahf
jmp
mov
insb
push
jne
out
xchg
movsb
popf
add
loopne
or
sar
inc
lret
in
pusha
dec
and
add
jge
sti
rorl
pop
inc
ret
lret
enter
sarb
mov
xchg
push
popa
or
cmp
ljmp
sub
cmp
mov
enter
std
rcll
aam
push
pop
daa
gs
fwait
pop
pop
lock
mov
lahf
in
sub
jmp
jmp
or
lcall
fstps
in
and
sbb
adc
pop
cmc
mov
leave
sbb
dec
dec
sbb
xor
ss
mov
roll
loope
cmp
xchg
mov
in
jae
jns
ja
cmp
mov
mov
aad
aam
dec
cli
lds
cs
jg
out
fistl
push
lea
push
pop
mov
movsl
jne
mov
xchg
push
repnz
sbb
bound
mov
push
mov
inc
xlat
fwait
or
mov
push
inc
cwtl
add
stc
lret
mov
xorb
push
in
pop
notb
insl
sahf
add
test
out
out
sub
xchg
dec
addr16
lea
outsl
push
inc
movsb
sbb
inc
lret
jns
scas
mov
push
xor
mov
ljmp
pop
dec
mov
and
in
fwait
pop
mov
cmpsl
or
jp
mov
stos
xabort
js
adc
cmp
mov
lods
daa
test
test
adc
lret
sub
pusha
pushf
mov
subl
or
cmp
out
cwtl
sub
mov
decl
fdivl
imul
call
jns
pop
clc
or
test
hlt
push
mov
roll
adc
fists
mov
cmp
lahf
and
cmp
adc
mov
outsb
popa
insb
psadbw
out
mov
sbb
xor
inc
or
pusha
scas
adc
push
loopne
push
pop
jo
mov
popa
arpl
xchg
data16
sarb
cmpsl
pop
xchg
in
push
mov
sbb
xor
imul
scas
mov
adc
pop
aaa
add
sub
and
xor
sbb
popa
fmuls
push
loopne
ret
pcmpgtb
mov
fldl
sbb
xchg
sahf
fwait
add
lret
inc
jge
addr16
test
aad
cmp
int3
push
push
adc
sbb
out
out
adc
in
mov
fdivrl
leave
addr16
repz
push
jns
and
dec
es
and
sub
popa
ds
jne
gs
xorb
rcrl
es
repnz
jl
iret
ja
or
mov
fcmovnbe
icebp
xchg
pop
aam
cli
cmpb
sub
testl
mov
or
or
repz
or
add
push
or
xor
push
stos
cmc
push
lods
mov
cmp
mov
negb
sbb
ret
cmpsl
jno
pop
js
jecxz
mov
scas
pop
jns
and
ret
movsl
out
and
dec
fistps
sbb
stc
pop
jnp
mov
in
fistps
testl
add
inc
lds
imul
pop
shll
int
cltd
lock
jne
cwtl
add
dec
ficoms
lret
ds
cwtl
adc
pop
mov
xchg
jne
jmp
test
scas
cmc
add
imul
xor
xchg
lret
outsl
mov
nop
imul
jnp
sub
fmuls
cmp
call
or
push
pop
aaa
fimull
sub
mov
nop
cltd
dec
lahf
push
movb
cmp
cmc
rol
cld
fldl
lahf
adc
clc
cmpsl
dec
inc
jl
rclb
pop
out
xor
imul
fcmove
sahf
mov
mov
cmp
mov
dec
and
mov
insb
je
adc
jne
mov
shrd
dec
pop
pop
fs
push
pop
jp
xor
pop
fsubp
andl
inc
jb
dec
push
cmpb
xchg
mov
sbb
jg
dec
add
xchg
sbb
in
pop
mov
mov
mov
pop
push
stc
nop
jg
dec
dec
xchg
mov
or
pop
sahf
xor
pop
or
add
cmpsl
clc
jecxz
js
icebp
cli
jmp
lcall
aaa
and
xchg
out
adc
roll
cwtl
cmp
xor
outsb
iret
jno
inc
mov
aaa
jno
int
ds
pushf
add
mov
jecxz
mov
ljmp
pop
inc
add
shll
xlat
mov
sbb
fstl
call
mov
jnp
je
fidivs
mov
push
inc
pop
jae
xor
clc
mov
rorl
movsl
dec
in
arpl
push
dec
push
jne
imul
out
loope
fs
dec
jnp
jae
and
ret
adc
js
and
aam
aaa
cld
ss
xor
xlat
cmc
bound
push
sub
bound
popa
cld
sbb
push
xchg
cmp
inc
subl
lcall
dec
test
and
imul
cmpsb
mov
sbb
jl
sti
in
out
jnp
mov
mov
sub
cs
push
divb
jmp
mov
enter
push
mov
jecxz
dec
outsl
aas
mov
lret
aad
jmp
andl
jnp
pushf
inc
and
xchg
xchg
sti
jg
mov
out
push
test
pop
mov
inc
vmwrite
scas
adc
dec
pop
dec
sub
sbb
xchg
pop
mov
popf
fs
inc
jns
mov
cs
lahf
outsb
push
inc
out
sarb
mov
jmp
pop
shl
adc
xchg
sahf
inc
aad
cmp
inc
adc
xor
iret
xchg
xchg
and
cmpsb
sub
mov
lret
xor
and
out
or
ret
mov
adc
mov
cmp
inc
aam
je
rorb
sahf
pop
mov
mov
xor
pusha
cmp
lahf
int
pop
loope
inc
pushf
mov
push
and
push
fimull
add
testb
movsb
scas
jb
push
lcall
dec
xchg
push
dec
fnsave
iret
sub
ss
popf
or
pop
jge
jbe
fwait
repnz
inc
mov
push
pusha
test
test
jp,pt
test
lahf
or
test
sti
cmovae
cmc
sbb
aas
fidivrl
fisttps
push
scas
sarl
imul
pusha
ljmp
inc
pusha
fcomps
cwtl
ss
xor
call
mov
add
inc
sarb
lods
scas
adc
out
inc
rclb
fucomp
daa
jb
add
div
mov
aam
push
leave
push
mov
loop
lret
push
pusha
sahf
sbb
out
out
mov
stc
insl
fisubrl
adc
jno
xchg
ret
or
mov
jle
jo
ret
mov
inc
dec
adc
enter
pop
mov
in
mov
scas
pop
lds
inc
or
xor
and
icebp
hlt
imul
push
pop
mov
fbld
fidivrl
mov
ret
dec
fistps
ficoml
sbb
lahf
adc
and
jno
imul
sar
mov
xchg
faddp
cmp
ss
lds
dec
cli
into
cs
ss
neg
mov
addb
mov
jnp
andl
push
cmp
lock
pushf
sahf
test
xchg
clc
pop
stos
in
dec
or
cld
jb
jne
hlt
sbb
jae
pop
add
rcr
test
pushf
jns
ss
sub
mov
ret
add
pop
in
cli
icebp
mov
xchg
fistpl
lcall
in
lods
lds
fbld
adc
loope
mov
pop
es
push
es
int
mov
pop
xlat
cmpsl
jecxz
or
cmpsl
roll
add
test
call
int3
fistpl
push
enter
lds
push
adc
jg
dec
push
cs
cli
xchg
jb
repnz
stos
mov
test
jl
fcompl
movsl
mov
and
and
fbstp
xchg
cmc
jmp
subl
mov
call
xor
pusha
lret
clc
sub
pop
test
icebp
daa
ret
jb
push
dec
shlb
mov
lcall
int
outsb
add
in
mov
aad
pop
mov
aam
cmp
das
jb
imul
jecxz
test
or
sbb
xchg
sbb
pop
ret
fistl
sti
xchg
js
dec
mov
push
movsl
fistps
mov
jecxz
xchg
popa
jne
ljmp
cld
int
bound
jo
aaa
xor
and
inc
push
sub
and
enter
pop
repz
sub
fwait
imul
outsb
add
and
pushf
in
sbb
push
xchg
popa
fwait
adc
or
in
and
xchg
mov
ret
and
aad
notb
mov
mov
push
inc
cmc
sahf
fcomps
insl
jg
sbb
cmp
jge
pushf
inc
fcmove
cmp
push
inc
xchg
ret
popa
aam
inc
orb
sbb
jne
dec
loop
sbb
xchg
js
fists
clc
test
int
mov
cs
sbb
or
rcll
xor
jne
jecxz
imul
icebp
inc
mov
jno
adc
popa
dec
xor
and
sub
xor
mov
das
insl
jae
daa
cmp
mov
sub
add
andl
push
jns
adc
xor
repz
sbb
pop
cmp
push
push
into
mov
out
ret
xor
and
xor
rorb
pusha
lea
pop
push
enter
cmpsb
push
lret
pushf
cmpsl
pop
stos
mov
mov
out
mov
adc
in
cmpsb
scas
nop
daa
ret
shll
mov
rcrl
inc
jno
and
repz
leave
adc
test
add
xor
jecxz
jb
mov
jmp
xchg
jbe
ret
xor
sbb
sbb
out
psllw
adc
mov
cmp
dec
subl
cmp
inc
movsl
push
and
movsb
das
mov
ss
in
stos
fnstsw
push
pop
stos
scas
out
les
arpl
mov
xor
in
pop
dec
push
xchg
pop
sub
mov
inc
cmp
lret
cltd
jecxz
rol
in
clc
repz
jbe
cs
jmp
ds
cld
enter
popa
mov
in
dec
mov
daa
cmc
icebp
mov
mov
lret
mov
or
je
jae
xchg
mov
xor
pusha
jb
jns
outsl
jnp
pop
lahf
in
outsb
pusha
sahf
mul
mulb
test
insl
cmp
testl
gs
fnstenv
imul
hlt
fdivr
rcrb
lods
inc
clc
xchg
cld
add
mov
pop
divb
mov
adc
inc
lods
xchg
sbb
sbb
xor
sbb
pop
sarl
stos
loope
sub
push
xor
lds
add
das
das
in
int3
xchg
mov
mov
mov
ret
aas
or
xchg
out
cmp
mov
xchg
xor
repz
pop
push
lret
inc
cmp
mov
movb
xchg
loope
xchg
outsb
xchg
mov
add
sbb
hlt
mov
bndstx
jo
jmp
push
lret
push
negl
xor
addl
jno
incl
push
jo
dec
inc
and
push
inc
xor
cmp
cwtl
adc
and
mov
lds
or
scas
fiadds
push
stos
jmp
pop
inc
xchg
out
negl
lret
mov
popl
push
test
sub
dec
lea
popf
lea
pop
testl
cmpsl
bound
dec
loop
idivl
js,pn
hlt
mov
dec
scas
fstpl
call
addl
jne
mov
enter
jne
xchg
idiv
pop
lods
xchg
cli
mov
pop
pop
gs
fcoms
mov
or
and
aad
sub
scas
subl
jmp
and
imul
lods
xchg
dec
xor
mov
call
inc
movsl
push
lahf
mov
psubq
pop
and
mov
ret
repnz
xor
inc
cmpsl
jle
les
cmp
in
mov
and
popa
cli
xchg
mov
insl
dec
pop
xlat
mov
imulb
repnz
ljmp
andb
push
lods
fwait
dec
push
int3
xchg
dec
int
add
xor
das
rclb
jae
nop
gs
jge
nopl
andl
sub
mov
push
adc
mov
icebp
mov
gs
sarb
xchg
sub
fs
pop
addr16
jb
adc
xor
xchg
in
enter
cmp
jmp
push
in
daa
popf
sahf
mov
sbb
pop
xchg
test
push
jo
enter
pop
mov
jo
push
scas
insb
outsl
lcall
jo
dec
jo
mov
sub
xchg
lods
jl
mov
add
call
fldl
test
ja
jae
sub
je
xchg
sub
ja
push
outsb
sub
test
and
int3
inc
push
sbb
sbb
mov
movsb
cmp
xchg
push
aas
aaa
lds
stos
loope
sbb
jb
sarl
cmpsb
xchg
aaa
loop
push
push
and
outsb
cmp
leave
push
call
enter
in
ds
mov
repz
movsb
pop
movsl
mov
adc
fildll
mov
inc
dec
negl
xchg
loope
loopne
stos
xchg
in
sbb
sub
mov
sbbb
mov
das
neg
mov
mov
pop
adc
mov
aad
sub
int
mov
inc
xchg
or
dec
outsl
pop
add
sbb
cmpsl
fstps
popa
adc
or
xchg
adc
outsl
jmp
xchg
femms
iret
lds
inc
outsb
fisttps
cmp
popf
fwait
iret
jno
cmp
adc
das
mov
das
pop
inc
adc
xchg
mov
fmull
leave
dec
ret
adc
dec
ja
lds
or
lods
xor
daa
mov
mov
cmpsb
mov
andb
push
iret
in
mov
cli
scas
test
mov
ss
add
and
push
inc
add
in
xchg
ljmp
pop
jg
insl
mov
jbe
push
jecxz
jno
ret
stos
in
jnp
idiv
pop
mov
pusha
jae
add
popf
xchg
cltd
cmpsl
push
in
inc
mov
test
scas
xchg
mov
loop
pop
pop
ja
inc
push
aaa
add
scas
mov
xchg
out
jmp
call
loop
inc
mov
repnz
push
mov
push
sub
mov
xor
lahf
stos
repz
repnz
icebp
imul
fcoms
stc
mov
mov
lret
pop
xor
inc
cwtl
test
push
and
jno
imulb
cltd
mov
xchg
lcall
rclb
xor
dec
shr
js
jns
mov
jp
dec
cmp
in
cmp
add
mov
iret
lds
xchg
xor
pop
cmp
mov
lds
int3
addr16
negl
addr16
lahf
test
sub
insl
jnp
cltd
sub
jp
jp
outsl
push
and
negb
xchg
pop
mov
cmp
aad
push
dec
cmp
pop
sub
xchg
fsubr
stos
and
pushf
scas
insb
popa
das
dec
int
xchg
imul
nop
and
cmp
notl
push
or
xchg
fistps
sub
addb
lret
xor
and
ss
xor
push
int3
into
movsl
cmpsb
jno
cmp
test
dec
xchg
xchg
mov
mov
sub
pop
adc
arpl
xor
iret
adc
inc
in
mov
shl
loope
and
jle
sbb
cmpsb
dec
push
push
js
es
mov
push
and
fwait
scas
gs
inc
mov
add
pop
shll
xchg
lock
adc
mov
ret
inc
push
dec
or
mov
stos
imul
push
push
clc
test
in
dec
jnp
mov
lods
jns
jbe
repz
mov
daa
xor
xor
outsl
mov
stos
fidivrl
out
mov
xchg
imul
pusha
sarl
cmp
xchg
or
xchg
popa
repnz
and
sbb
xchg
jmp
aad
sbb
inc
cmc
mov
push
stc
mov
push
jp
jae
mov
movsb
data16
xor
into
jmp
mov
push
loop
jno
mov
xchg
hlt
jb
movsl
lods
xor
lea
aam
xor
xchg
dec
cld
insb
mov
decb
sub
add
add
cmpsb
inc
movsl
xchg
dec
in
fbld
arpl
cmpb
and
jno
xlat
add
out
je
leave
or
lahf
xlat
mov
lret
mov
mov
mov
loopne
ds
scas
jne
dec
jno
daa
xor
imul
adc
and
or
iret
mov
loope
cltd
and
or
imul
rcrl
paddusw
mov
add
pop
push
int
mov
mov
pop
sbb
or
pop
xlat
mov
sub
jno
and
mov
adc
push
lds
ret
mov
ficoms
repnz
and
jne
mov
push
lahf
adc
mov
mov
xlat
sub
fwait
aad
jp
insb
jmp
xor
ss
das
push
pop
mov
mov
sub
sti
jl
and
imul
push
cmp
push
dec
ficomps
mov
jle
xchg
sub
repnz
insb
int
out
push
push
sti
push
xor
cli
add
mov
jo
sbb
insb
dec
loop
cmp
std
inc
cmpsb
test
jp
adc
and
sarl
lret
add
cld
daa
mov
jg
lret
add
add
popf
sbb
mov
jg
adcl
inc
cmpsl
and
dec
ja
aad
inc
fisttpl
insl
jno
das
add
aaa
mov
push
cmp
icebp
pop
imulb
loope
in
push
pushf
pop
pop
es
mov
sub
mov
xchg
repz
cmp
sbb
xor
push
mov
mov
or
js
adc
dec
jmp
movsl
pop
js
dec
and
clc
pop
xor
popf
push
fnstenv
aad
mov
push
aas
xlat
or
mov
decl
pusha
xchg
lcall
sbb
mov
aaa
and
push
sub
push
in
mov
dec
sti
lds
daa
fiaddl
fisubrl
xchg
push
test
cmc
push
cmp
xor
aaa
mov
add
ss
out
std
pop
mov
mov
dec
in
shlb
jne
mov
pop
iret
insb
mov
std
in
xor
ret
or
popa
les
out
mov
test
fnstcw
xchg
or
mov
xchg
adc
test
jbe
xor
lret
xchg
and
cmpsl
or
jnp
mov
xor
jb
jecxz
mov
or
outsl
idiv
push
sbb
sub
cmc
mov
ljmp
ret
rcr
stos
push
pushf
mov
test
xchg
lcall
cmp
cmc
add
filds
dec
data16
or
mov
insl
stos
inc
scas
xchg
js
adc
pop
dec
xor
icebp
fldl
mov
fdivs
nop
pop
fldcw
xchg
test
inc
scas
loopne
jge
push
pop
jl
cltd
mov
leave
push
lods
mov
mov
jle
fstpl
and
push
lcall
fdivrl
cmp
push
mov
pop
xchg
repz
cli
or
out
lcall
sbb
das
imul
mov
ss
mov
mov
faddl
fidivs
inc
sub
dec
add
popf
sub
data16
flds
lock
repz
add
aaa
icebp
imul
inc
adc
sbb
aad
sbb
test
push
sbb
fsubrs
mov
xchg
aaa
pop
mov
pop
out
cmp
or
sbb
cmp
cmp
imulb
xor
mov
addb
loop
dec
rcr
fcmovu
mov
adc
add
pop
arpl
pop
lds
int
call
js
push
cmc
pop
inc
test
cmpsl
ret
les
movsb
pop
loope
push
inc
dec
xchg
adc
inc
into
js
test
test
add
and
stos
mov
and
xchg
push
lock
scas
push
xor
add
std
mov
jb
xor
jmp
mov
sbb
out
cmc
cs
std
loopne
movsb
mov
mov
inc
repnz
icebp
in
mov
cs
lahf
sub
xor
sbb
jecxz
stos
scas
mov
je
into
mov
jno
dec
and
xchg
daa
push
push
and
les
adc
inc
pop
dec
fcoml
xor
push
mov
push
aaa
ljmp
dec
adc
in
sbb
enter
inc
fstps
popf
jo
cmp
sbb
mov
adc
stc
cmpsb
xchg
ror
leave
das
lahf
into
inc
fwait
test
xor
xor
mov
test
or
fidivs
in
add
sbb
xchg
in
pop
jmp
lock
jp
mov
or
sub
shr
stos
jbe
cmpsl
or
std
stc
cmpsb
dec
add
ret
xor
sbb
mov
lds
jbe
addb
fs
xchg
xchg
imul
inc
push
repz
ja
push
xor
roll
pushf
jle
ds
nop
xchg
aam
shlb
sti
push
inc
push
and
inc
inc
mov
fucomip
adc
xchg
mov
add
subb
xor
scas
add
dec
insl
movsb
sub
adc
mov
adc
sbb
insl
loop
sub
sbb
rolb
int
inc
jmp
and
pop
inc
in
mov
shr
test
fstpt
sti
push
push
push
adc
jecxz
insb
dec
and
in
stos
add
cltd
jge
out
into
cli
and
fsubs
lahf
sahf
mov
leave
mov
movsb
test
movb
push
inc
dec
imul
jne
lds
aad
test
jbe
push
and
iret
je
popa
mov
cmp
sar
mov
cli
xchg
lahf
pop
sti
xchg
mov
add
dec
lods
dec
or
mov
aaa
xchg
inc
inc
cmc
lea
insl
dec
push
mov
xor
mov
int
dec
repz
xor
scas
xchg
push
daa
mov
xchg
aad
jnp
ss
leave
loop
jp
mov
mov
and
pop
daa
push
mov
mov
lea
xchg
mov
sarl
mov
fs
jno
out
negb
adc
ds
leave
in
xor
test
mov
adc
push
unpcklps
dec
imul
cmp
mov
xor
fistpl
ficoms
cmp
mov
lods
pop
push
sub
sahf
call
push
cmpsb
push
pop
jae
stc
sub
and
mov
jg
out
int3
mov
jg
enter
adc
or
jmp
call
ffree
faddl
mov
lret
xor
cmc
dec
fdiv
cli
sub
adc
ret
mov
sub
push
cmp
mov
fmul
and
outsb
adc
and
xor
pop
clc
cmp
arpl
mov
xchg
add
mov
sbb
push
int3
dec
pop
cmp
and
push
add
into
pusha
xchg
data16
fnstenv
rcrb
mov
push
xor
push
push
outsl
movsb
cmp
add
xchg
out
push
and
iret
jge
rcr
adc
clc
add
sbb
jae
imul
mov
xchg
ljmp
mov
push
pusha
leave
dec
loop
int
in
xor
dec
sahf
push
pop
ja
inc
int
mov
mov
pop
push
std
ucomiss
test
js
sbb
roll
pop
in
xchg
xchg
cs
cmp
cmp
leave
hlt
adc
mov
not
stc
fcoml
lds
cmp
popa
out
jmp
enter
ljmp
imul
jo
jae
push
push
fxtract
xchg
inc
mov
std
add
jno
lds
mov
cltd
shlb
pop
out
lcall
shll
mov
ret
xchg
jge
es
les
cmp
subb
inc
and
xchg
scas
out
lods
and
cli
pop
or
and
stos
mov
fisubl
mov
test
push
aam
sahf
xor
and
xchg
add
dec
jecxz
pop
jo
dec
add
addb
in
repnz
inc
add
lret
add
fnstenv
icebp
bound
mov
adc
fildll
je
inc
mov
and
repz
and
xlat
dec
adc
sub
aaa
xor
mov
xchg
adc
push
pop
leave
mov
mov
cmp
mov
das
scas
loope
inc
xchg
repnz
or
ret
outsl
mov
mov
insl
sub
in
ss
into
mov
hlt
test
sbb
jg
movsb
jnp
or
dec
mov
push
bnd
xor
jecxz
ja
repz
and
lret
jmp
push
popa
popa
gs
sahf
or
out
fwait
pop
mov
adc
dec
pop
mov
cwtl
sbb
pop
je
add
cli
sub
mov
mov
add
lods
adc
sub
je
mov
sbb
out
xlat
ja
std
adc
mov
and
mov
or
adc
push
push
adc
cmpsl
mov
pop
pop
popw
push
cmpb
scas
icebp
xlat
add
cmp
xchg
jbe
lods
push
dec
call
mov
scas
fs
pop
mov
mov
stc
cmp
xchg
aad
lret
mov
in
call
clc
adc
fisubrs
jae
jg
in
shlb
outsb
pop
mov
mov
scas
or
ret
mov
cli
pop
add
idiv
bound
roll
add
fnstcw
and
sahf
push
cmp
daa
or
dec
mov
pop
scas
lods
mov
xchg
xor
aad
ficoms
add
or
mov
sarb
pop
in
sahf
lods
nop
jmp
shlb
lods
jno
arpl
out
arpl
and
fisubrs
jmp
ss
add
xchg
pop
sub
scas
sbb
dec
push
bswap
out
test
lahf
notl
add
ret
sub
outsb
cld
mov
ljmp
add
add
push
dec
xchg
add
lock
cmp
mov
sti
dec
cmpsl
movsl
jge
into
push
loope
push
pop
iret
or
arpl
pop
push
dec
iret
jmp
push
and
into
fiadds
pop
mov
jge
and
js
pop
lods
addr16
mov
call
or
push
jae
adc
mov
ds
dec
inc
xchg
and
je
mov
shl
out
int3
ret
dec
mov
daa
popa
je
mov
std
add
movsb
aam
fsubrl
cmp
push
xchg
fimull
lods
pop
mov
movsl
cmp
mov
push
cs
mov
daa
pop
adc
jp
out
push
aam
daa
lea
aaa
mov
loope
dec
jp
mov
jo
in
imul
test
jbe
and
sahf
dec
ljmp
fsubrs
jb
pop
arpl
aam
pusha
inc
xchg
dec
sahf
imul
in
add
mov
imul
mov
shlb
mov
ret
and
jbe
enter
sbb
popf
cmpsb
aad
cmpsb
jnp
push
add
stc
sub
fidivrl
ret
pop
mov
mov
icebp
rorl
jmp
cwtl
leave
mov
pop
scas
jns
imul
hlt
lret
jo
jnp
fnstcw
das
adc
lods
arpl
mov
and
mov
pop
pop
sbb
lret
dec
sbb
int3
mov
andb
cmp
outsb
pop
lret
jo
data16
scas
add
imul
or
adc
add
sub
scas
cmp
cmp
test
lret
cwtl
outsb
cmp
fisubrl
and
int3
stos
mov
cwtl
cs
mov
insb
cmp
push
mov
lods
pop
mov
nop
jp
or
call
dec
inc
int
jp
fistps
fsts
push
xor
inc
mov
lods
xchg
pop
popa
mov
lahf
insl
jnp
pop
cs
cmp
repz
pop
imul
mov
push
rorb
push
pusha
jg
outsl
dec
lcall
cwtl
add
jo
js
sbb
push
nop
sbb
cmp
and
and
dec
or
cmp
inc
ret
adc
arpl
int3
hlt
dec
mov
aam
cmp
pop
ret
xchg
ret
out
mov
xchg
popa
sbb
xlat
dec
pusha
mov
xor
and
push
add
ss
int
rorb
mov
sbb
addr16
mov
mov
adc
and
mov
enter
lcall
movd
fidivl
stos
outsb
sub
mov
or
xor
pop
xchg
popa
sub
in
pusha
xchg
je
movl
add
and
or
jns
mov
adc
scas
pop
fidivrs
sub
xor
jo
sub
rcl
jo
inc
push
sti
je
movnti
jae
add
out
fldl
push
in
xor
scas
jo
gs
mov
mov
pushf
jle
jecxz
in
inc
repnz
push
ljmp
xor
fldenv
adc
nop
mov
push
mov
sub
or
dec
out
inc
inc
outsl
adc
push
addr16
imul
sbb
xor
jl
mov
mov
ja
jmp
ret
inc
sub
fs
fwait
lds
subb
lea
jg
add
push
je
push
outsl
cmp
iret
sub
jecxz
and
movsb
lods
pop
sub
fs
mov
rcll
hlt
sbb
leave
repz
in
in
mov
or
mov
out
jne
lahf
leave
cmc
stc
push
mov
mov
mov
mov
push
sub
push
popa
faddl
leave
xlat
cmp
add
mov
shrl
sbb
add
cmp
add
mov
cli
push
and
data16
xor
xchg
test
xchg
test
nop
loope
mov
mov
cmp
lret
das
cmp
push
iret
imul
inc
dec
jp
es
loopne
movsl
fimull
mov
xchg
pop
adc
sahf
mov
push
cs
jnp
push
out
or
inc
cmp
pop
push
loope
fmul
and
in
push
sbb
mov
sbb
les
leave
lcall
dec
xor
insb
out
mov
cli
dec
push
push
pop
mov
pop
jp
sub
sbb
aaa
lret
pop
push
adc
mov
in
cltd
push
push
in
lcall
imul
xor
add
lods
data16
outsb
call
loop
orl
mov
cmp
das
mov
cmc
cmp
int3
mov
loope
adc
push
pop
mov
rolb
sub
andl
mov
mov
jne
pushf
aas
sbb
add
xor
dec
int
xchg
std
adc
sti
jle
movsb
push
aad
dec
lret
mov
mov
xor
mov
fs
pop
xor
mov
lahf
cwtl
dec
jo
inc
xor
test
jmp
cmc
in
inc
push
add
jle
dec
cmpb
ret
dec
pop
daa
int
or
cld
xchg
push
xchg
in
pop
idivb
sub
arpl
rcrb
insl
jmp
xchg
das
mov
addr16
mov
or
icebp
loopne
mov
adc
cmpsl
add
js
xchg
insl
lahf
pop
sbb
testl
xchg
addr16
and
xchg
or
filds
add
stos
mov
cmp
mov
mov
adc
clc
aaa
shl
nop
or
movsb
sub
mov
pop
dec
jnp
cld
sbb
lock
sbb
inc
mov
sbb
sahf
enter
pop
adc
jle
fmull
pop
ret
cli
pop
push
mov
int3
cmp
fadds
enter
mov
std
into
add
jp
pop
aaa
jno
or
lods
add
pop
insl
adcw
adcl
vpaddw
sbb
in
inc
push
inc
push
pop
jbe
fwait
mov
fldcw
and
hlt
out
or
or
jo
loopne
sub
sub
or
les
pop
xor
outsb
lock
xchg
inc
cmp
ds
xor
loop
fsubrl
dec
sahf
sbb
fimull
xor
add
jno
cmpsb
mov
adc
jp
test
and
int3
sbb
lcall
stos
les
cmpsb
pop
mov
test
jg
jmp
addr16
cltd
xchg
dec
fnstenv
sbb
test
pop
cmp
sbb
mov
mov
mov
aaa
js
or
loop
outsl
push
js
cmp
ffreep
pop
lcall
pop
mov
lahf
add
xor
xor
jo
xchg
inc
xor
xchg
adc
jns
addb
cmp
out
aas
cld
dec
cmpsl
sub
jmp
mov
jl
in
insb
fiaddl
pop
sbb
xchg
jne
jnp
cmpsl
dec
cmp
inc
jnp
xor
mov
and
pop
mov
and
cmp
sub
hlt
icebp
imul
adcw
pop
popa
pop
push
mov
mov
pop
pop
jg
and
adc
cmpsb
dec
mov
into
add
dec
jns
divl
mov
addr16
fisttps
or
popl
je
push
mov
and
aam
push
cmp
xor
out
jle
addl
cli
out
mov
imul
ret
or
sub
jmp
push
lcall
push
mov
xchg
test
or
lods
sahf
mov
jp
sbb
les
mov
push
pop
leave
test
ss
sub
enter
movsb
sar
mov
andl
enter
mov
testl
xchg
not
notb
mov
jl
lea
and
xor
repz
test
and
ficomps
inc
or
in
scas
dec
or
daa
sbb
push
jmp
arpl
mov
jno
fsubrs
add
loopne
pop
enter
cmp
rcll
loope
mov
mov
test
repz
inc
ss
adc
fisubl
pop
roll
movsl
outsl
inc
pop
mov
ds
or
jmp
jnp
add
push
and
sbb
arpl
mov
or
cli
dec
and
mov
shrl
mov
shrb
push
stos
cltd
cmp
daa
and
inc
mov
loop
pop
inc
adcl
cmp
movsl
testb
mov
sub
cmpl
lds
lock
lret
adcl
jmp
ljmp
jno
mov
imul
jge
dec
mov
pop
pop
stos
outsb
push
aad
xchg
sbb
inc
lret
nop
xor
rcll
jbe
fildl
shr
loopne
inc
push
sub
mov
mov
mov
adc
inc
stos
cmc
inc
stos
sbb
int
inc
inc
pop
ds
xor
xchg
push
and
and
xor
or
pop
add
dec
sbb
jns
pop
cmc
xchg
movsl
scas
pushf
daa
xor
sbb
es
out
cmp
jnp
rol
cmp
arpl
xchg
in
fwait
sbb
mov
jp
add
mov
jnp
aad
cmp
mov
xor
xchg
repnz
aad
fists
and
mov
cmpsb
notb
das
mov
rclb
in
pop
jbe
movsl
pop
xor
aam
leave
imul
push
lods
jae
and
inc
sub
xlat
sbb
sub
add
outsb
imul
mov
add
inc
lahf
les
cld
mov
dec
orl
adc
call
in
movsb
jae
test
inc
cmp
adcb
fstp
jle
jl
arpl
pop
das
push
sbb
in
scas
test
shl
insl
xchg
and
fdivrs
jg
ficomps
adc
lock
pop
loope
ret
in
mov
xor
je
ja
cli
jae
jbe
imul
stc
fldcw
mov
sahf
sub
jns
dec
das
out
fwait
das
jecxz
jnp
adc
pop
push
fisttps
push
jno
push
inc
sub
fucom
mov
mov
xor
aad
cmpsl
cmc
dec
unpcklps
hlt
repz
pop
fwait
sbb
dec
stos
fs
ret
insb
push
rolb
scas
lods
cmp
lods
jnp,pn
or
ss
dec
cmp
jb
dec
inc
stos
pop
cmp
mov
int
jg
mov
test
push
inc
jb
in
movsb
cltd
jecxz
mov
pushf
inc
add
arpl
in
gs
test
inc
xchg
fdiv
cs
cs
subb
mov
xchg
and
xchg
mov
cmp
movsb
out
xchg
jge
addr16
cmp
cs
and
xchg
xor
scas
sub
jnp
xchg
adc
push
dec
inc
dec
jns
jns
aad
mov
loop
in
cld
sub
ja
cmc
sub
imul
ret
lods
mov
fwait
jae
inc
pushf
sbb
lods
loop
cmp
push
pushf
add
xchg
fdivr
rclb
push
bnd
movsb
inc
rol
repz
lods
pop
popa
mov
shl
mov
pop
popa
push
out
daa
cli
in
mov
pop
add
push
and
fnsave
or
adc
mov
cltd
sub
ljmp
rclb
ljmp
lods
sarl
gs
or
cmp
aas
jp,pn
rep
fdivl
ror
mov
push
scas
adc
mov
mov
adc
outsl
lcall
inc
clc
aad
ret
hlt
mov
jae
clc
aam
lods
shrl
xor
rcll
vmovdqa
out
cwtl
inc
aas
push
push
mov
cmp
xchg
cltd
pop
arpl
test
bound
ret
leave
cwtl
push
cmp
sub
mov
push
shlb
and
rcll
in
out
sbb
mov
fstpt
jge
sub
fld
pop
sbb
mov
lahf
loop
sbb
scas
lahf
mov
faddp
pop
xchg
std
ljmp
push
movsl
mov
daa
jnp
pushf
lock
jbe
xor
cmp
insb
pop
jecxz
aas
mov
fidivrl
xchg
pushf
and
ja
hlt
nop
cli
lahf
adc
push
add
cmp
mov
in
shl
dec
lret
or
repnz
inc
mov
jb
lock
icebp
fwait
add
out
xchg
cmp
sbb
test
pop
and
sub
popa
push
ret
inc
rcr
mov
xchg
lret
popf
dec
add
xchg
jae
xor
lea
pop
xchg
cltd
scas
sbb
fstl
outsb
mov
mov
push
mov
mov
dec
inc
inc
call
mov
mov
ret
mov
stos
shrb
ret
dec
into
cmp
aaa
test
xor
jmp
rclb
jns
in
repz
mov
or
insb
in
ret
cmpsb
popl
scas
fdivs
lcall
sbb
adc
add
repz
in
data16
pusha
and
movsl
push
cmp
fiaddl
or
mov
fidivrl
pop
icebp
inc
xor
jmp
xchg
mov
xor
shl
pop
rcrl
or
mov
xchg
out
jno
add
sbb
add
stos
xor
flds
sbb
insb
sub
dec
subb
sbbb
sub
sub
pop
xchg
xor
pop
push
shlb
in
pop
push
and
mov
pop
aam
sub
pop
sahf
leave
leave
xchg
sbb
out
cmp
adc
mov
sbb
mov
sbb
std
add
and
out
sbb
or
repz
shlb
sub
outsl
bound
push
mov
push
fiadds
dec
add
jmp
mov
in
and
lods
mov
add
cmp
cmpl
dec
push
and
push
lea
mov
dec
add
into
mov
imul
clc
loope
fsubr
cmp
int
aas
xchg
imul
sbb
test
push
mov
loope
ret
mul
mov
mov
and
cmc
mov
sbb
mov
mov
jle
pop
leave
pop
mov
adc
pop
pop
pop
shlb
inc
mov
pop
fwait
add
aam
or
cwtl
sub
pusha
in
push
gs
and
clc
jne
mov
lcall
std
inc
popa
imul
xchg
leave
adc
ret
test
mov
js
out
add
popf
hlt
mov
lret
inc
pushf
jne
cmp
push
sahf
faddl
cmp
mov
or
iret
mov
mov
mov
xor
repnz
out
jo
sub
mov
dec
or
bound
jl
cmp
out
adc
sbb
pop
ljmp
jle
lea
mov
sbb
sbb
stos
xchg
jge
and
jmp
test
rol
lcall
ds
adc
ret
inc
inc
pop
scas
js
sbb
mov
shll
dec
addb
les
mov
call
movb
jp
mov
dec
xchg
in
sbb
in
cmp
pop
js
andl
rclb
push
inc
xor
scas
sbb
ss
orb
out
bound
jne
rorl
jle
pop
imul
inc
mov
sar
cmpsb
arpl
xor
repnz
insl
aam
lock
cmc
popa
test
arpl
cmpsb
mov
mov
dec
enter
mov
int
out
lahf
and
mov
lcall
out
fs
dec
xor
add
pop
mov
fstps
adc
int
jne
jbe
test
outsl
in
ljmp
push
cld
inc
add
pop
mov
ja
jo
adc
lcall
ret
dec
add
mov
in
cli
push
movsb
lea
call
fcomps
ficompl
xorb
movsl
arpl
leave
push
test
xchg
push
nop
bound
loop
xchg
adc
mov
dec
test
shlb
mov
mov
push
pop
cmc
xchg
xchg
es
mov
std
push
gs
out
xor
fmuls
adc
mov
bound
das
and
hlt
insb
loop
sbb
adcl
dec
cmp
cmp
aad
xorps
xor
std
cmp
imul
mov
imul
ret
fstps
mov
cld
sub
fbld
ss
mov
and
xchg
dec
in
in
adc
cmp
lds
pop
mov
enter
pushf
mov
or
aad
or
mov
jmp
iret
scas
sbb
adc
lods
adc
lods
aam
cli
pusha
push
lret
aaa
mov
mov
add
sub
inc
sar
xor
and
dec
jg
xorl
inc
mov
xlat
cli
dec
outsb
cmp
xchg
jmp
sub
mov
mov
repz
or
test
or
adc
iret
and
cmp
sarl
lcall
test
pop
inc
push
pop
cmp
mov
lock
sub
add
nop
add
mov
jb
lods
cmp
lds
mov
mov
iret
or
xor
sbb
pop
push
xchg
scas
out
jle
cmc
xchg
inc
adc
push
iret
idivb
push
add
sti
pop
cwtl
dec
push
mov
adcb
enter
jecxz
mov
fs
nop
lret
push
rol
fisubl
std
fwait
cli
jg
loop
gs
adcb
dec
inc
push
sbb
leave
mov
push
shll
fsubs
xchg
cmp
push
cmpsl
xchg
ffreep
dec
jb
adc
jno
arpl
inc
or
push
leave
mov
cmp
ja
jnp
push
push
inc
sub
mov
jbe
inc
jp
scas
das
repnz
imul
push
xchg
dec
jmp
jl
pop
lods
xorb
inc
add
adc
pop
sarl
xor
ret
adc
fisubl
adc
in
imul
repz
xchg
notb
addb
icebp
add
push
xchg
xchg
add
adc
aaa
rcrl
push
push
sub
mov
mov
sbb
loope
fistps
inc
shlb
pop
push
lock
rcrl
pop
push
test
add
rolb
dec
xchg
insl
dec
and
stc
fs
loope
pop
push
push
mov
push
lods
fs
in
jg
lea
out
bound
ja
xchg
xchg
das
sbb
lret
jnp
popf
stos
pop
dec
movsb
jnp
pop
sti
lods
imul
out
stos
cmp
ja
sbb
add
adc
arpl
in
sarl
mov
sbb
arpl
mov
cmp
mov
mov
mov
mov
inc
mov
rolb
std
cmp
leave
cmp
imul
sub
push
fadds
sub
jns
dec
and
xlat
push
and
es
jg
adc
and
pop
mov
in
xchg
pop
pop
dec
sub
push
imul
dec
mov
pop
jmp
lret
or
sub
or
jae
outsl
mov
mov
fstps
out
ror
jecxz
sub
sbb
cmpsl
aad
mov
fnsave
jbe
repnz
and
sbb
jb
cmpb
movl
bound
fistl
sbb
ret
adcb
xchg
dec
shll
xlat
adc
xor
jae
nop
hlt
pop
jecxz
iret
inc
or
push
popf
adc
adcl
add
push
imul
rolb
inc
sar
rclb
push
cmpsb
xchg
mov
mov
rcrb
fldl
pop
and
fcoms
cs
sub
cmc
adc
movsb
dec
in
mov
mov
inc
std
icebp
inc
test
or
out
inc
xchg
movsb
xor
push
or
add
sbb
lahf
mov
push
add
push
adcl
jb
mov
push
out
shrb
or
xchg
and
leave
daa
lods
push
xor
cmp
out
leave
jno
jb
not
fldcw
mov
fists
je
dec
and
mov
push
xchg
lcall
add
clc
push
lahf
mov
push
sbb
popf
xrelease
add
subb
mov
adc
adc
hlt
mov
mov
xlat
xchg
iret
mov
subl
pop
in
int
stos
sbb
addr16
aaa
mov
aam
fistl
call
adc
out
into
dec
jg
inc
inc
ds
inc
xlat
insb
test
xchg
pop
jnp
inc
incl
gs
ja
pushf
aaa
inc
roll
jno
imul
jg
add
xor
xchg
testl
pop
mov
or
xchg
fstps
ljmp
dec
sbb
mov
jo
jle
jmp
mov
push
ds
outsl
adc
fisttps
inc
cmp
repnz
sbb
xor
cmp
mov
cmc
sbb
lahf
inc
loope
nop
pop
adc
xchg
js
decl
push
std
jge
pusha
add
adc
push
addr16
mov
in
or
imul
sub
repnz
clc
divb
cmp
cmpsl
xor
xchg
cwtl
inc
lock
movsb
fcompl
xor
shll
addr16
scas
bound
dec
or
add
repz
pop
sahf
mov
push
lahf
or
rcrb
ljmp
movsb
dec
push
xlat
shrl
pop
clc
push
add
test
sbb
dec
and
mov
out
scas
fisubs
ljmp
shrb
les
leave
xchg
sbb
loop
outsb
dec
pop
cmp
fcoms
int3
or
mov
and
or
jge
enter
mov
xor
mov
sbb
fwait
mov
stos
je
arpl
fdiv
sub
cmp
clc
inc
stc
sbb
lret
int
rcl
js
cmp
test
and
mov
add
addr16
jp
mov
dec
jb
sahf
push
in
sbb
aad
dec
mov
push
jecxz
and
aam
add
fstl
inc
or
mov
pop
mov
xor
cltd
jl
inc
hlt
or
sbb
cmpsb
ja
pop
jmp
pop
inc
out
xor
pushf
add
pop
pop
sub
mov
gs
sub
jp
adc
sub
xchg
arpl
test
xor
sbbb
cwtl
xchg
or
adc
lret
xor
cmp
enter
mov
hlt
dec
popf
mov
std
mov
data16
nop
dec
add
push
xchg
popa
xchg
dec
ja
cli
sarl
and
xor
mov
push
jle
sub
cs
lods
aam
xor
aam
shrl
inc
aad
std
fidivrs
aaa
add
lods
cmpsb
sbb
xchg
lcall
cmp
mov
push
xor
jns
add
es
clc
lret
fwait
xchg
jns
dec
enter
lret
or
sbb
in
repnz
jae
mov
lds
loop
stc
xchg
mov
mov
pusha
in
rolb
int3
mov
xor
adc
or
in
lods
push
pop
fldt
xchg
ret
jno
sahf
mov
out
xchg
pop
sub
mov
and
xchg
ljmp
ficomps
inc
mov
pop
in
movsl
mov
filds
rclb
mov
xchg
insb
mov
les
lods
add
sbb
jo
mov
xchg
addr16
les
xchg
xlat
mov
es
adc
adc
aas
dec
mov
daa
ljmp
icebp
ds
inc
pop
gs
imul
leave
imul
jb
int3
fsubrl
pop
mov
adc
lods
add
rcrb
les
lods
fstp
cmpsb
lods
in
mul
sub
mov
or
lret
cwtl
mov
fmul
or
sbb
adc
stc
and
int
pop
sbb
dec
mov
add
enter
mov
inc
in
scas
mov
add
test
or
fidivrl
jge
fnstsw
cld
inc
lods
addr16
fsubs
je
outsl
int
lods
shll
aaa
pop
pusha
ss
xor
insb
inc
ss
inc
fbld
movsb
pop
cmp
mov
mov
or
push
xor
pop
mov
fs
aam
dec
das
sub
pop
mov
jno
inc
dec
pop
push
gs
mov
add
mov
mov
add
add
cmpsb
aas
cmp
aaa
lea
aaa
add
loop
filds
enter
dec
dec
or
sub
sti
daa
in
sub
cmp
fistl
loope
std
pop
push
cltd
mov
sbb
xchg
lea
xchg
xor
add
jb
out
or
push
int
in
inc
cmp
xchg
dec
ja
movl
cmpsl
adc
scas
xchg
in
lret
jecxz
dec
push
xorl
pop
repz
push
or
repnz
push
pop
mov
shl
cmp
js
jnp
xchg
dec
das
xor
subl
xchg
jne
lds
stos
outsb
test
jl
mov
push
aas
fdivrs
inc
cld
scas
push
sub
jne
aas
push
test
shll
mov
or
dec
stc
adc
icebp
mov
rorb
repnz
int
sbbl
and
and
xor
sbb
je
loop
mov
insl
das
imul
push
sbb
pop
adcl
ret
popa
lds
sbb
icebp
mov
ljmp
sbb
cmpb
int
shl
pop
bound
add
adc
repz
daa
addr16
pushf
sbb
xchg
mov
int
push
iret
imul
sarb
pop
cs
sub
or
popf
hlt
pop
mov
mov
or
adc
loop
dec
add
repnz
loop
and
addr16
sub
pop
push
ret
out
ja
xchg
dec
lret
pop
loope
xchg
adc
jb
cli
popf
add
imul
xchg
push
fldcw
fst
inc
xchg
sbbl
jmp
sbb
pop
ror
sub
repnz
cwtl
hlt
sub
mov
in
cmp
fdivs
hlt
jae
fwait
xor
scas
sub
ds
push
cmp
int3
int3
lods
xchg
fstpt
jo
mov
cmp
mov
sbb
mov
jge
out
fwait
inc
jecxz
adc
dec
test
pop
and
mov
inc
adc
jecxz
xchg
sub
xor
aad
aad
dec
ss
mov
sub
push
cmp
divb
mov
sti
jmp
xor
and
outsb
fimuls
hlt
sbb
mov
and
bound
ret
mov
roll
add
in
xchg
mov
sub
in
or
ljmp
mov
test
cmpsb
lahf
fnsaves
test
jp
cli
mov
sub
dec
pop
push
incb
stos
xor
push
xor
imul
mov
es
popf
mov
mov
lea
arpl
sbb
pop
inc
lcall
lcall
in
dec
mov
ss
push
cmp
ror
push
xchg
jo
sbb
pop
dec
xchg
dec
and
inc
test
cmp
fwait
push
psraw
or
dec
or
leave
or
movsl
into
iret
mov
mov
or
leave
movsb
xor
cli
out
xor
xchg
sbb
jle
int3
or
pop
push
xor
jecxz
movsb
fadds
sbb
in
jge
push
mov
in
lcall
jmp
push
data16
pop
icebp
lods
inc
hlt
out
adc
inc
icebp
imul
xchg
mov
mov
shlb
mov
mov
daa
add
xchg
jo
cmp
outsl
dec
pop
lods
fldt
mov
rcrl
dec
roll
nop
mov
jbe
mov
aad
add
loope
fmulp
fwait
dec
xor
sti
mull
cmp
popa
sub
mov
adc
pmulhuw
repz
lret
mov
push
mov
inc
divb
test
dec
fwait
popf
mov
out
mov
or
lock
in
adc
outsl
cmp
mov
enter
pop
cmc
fucom
in
pushf
bound
mov
dec
xor
xor
inc
fimuls
loop
inc
cmp
popf
addl
movsb
jne
nop
inc
imul
sub
or
mov
add
pop
das
and
jne
pop
cmp
sbb
cmp
gs
adc
mov
jae
adc
test
rcrl
loop
mov
xor
pop
jp
push
in
or
cmpsb
push
sub
movsl
mov
push
outsl
pop
stc
dec
test
sbb
jmp
aad
mov
push
sub
shll
outsb
sbb
inc
xchg
fldenv
jle
and
out
xor
fildll
jo
test
or
xchg
sahf
ss
sti
fidivrl
mov
hlt
daa
cmpsb
add
dec
xor
mov
cli
xor
ret
xchg
fwait
jne
mov
rorb
inc
fistpll
push
jg
outsl
add
xchg
fcoms
inc
ja
orb
or
xlat
cwtl
cltd
ffreep
out
leave
pop
cltd
fdivrp
daa
jae
mul
repz
pop
nop
bound
aam
inc
and
inc
xchg
repnz
es
stos
or
jmp
iret
mov
loop
enter
ret
push
outsb
out
sbb
inc
jecxz
inc
es
loope
cmc
xchg
neg
push
mov
hlt
ss
cld
ror
clc
cmpsl
sbb
insb
dec
test
dec
mov
sub
das
call
sbb
jnp
lret
popa
push
sahf
stos
jae
out
fldcw
pop
flds
mov
arpl
ret
mov
in
xor
pushf
pop
in
jnp
mov
or
jecxz
jno
imul
jns
sub
test
in
dec
outsb
rcrb
push
stos
fwait
sub
sub
pop
jmp
loopne
pop
add
test
movsl
fldl
push
shr
mov
mov
inc
and
mov
add
enter
sbb
addr16
adc
push
push
lret
decl
test
mov
and
sbb
testl
or
dec
cmp
in
pop
dec
mov
fadd
arpl
sti
lds
inc
add
or
fwait
jb
insl
call
cmp
cs
pop
rorl
rclb
in
mov
and
test
lret
lret
xlat
lret
push
mov
xchg
ss
ja
in
adc
mov
xor
das
loop
ljmp
shlb
aam
add
cld
fwait
js
adcl
insl
dec
cmp
push
int
fbld
cli
dec
mov
cltd
mov
inc
add
dec
lock
jge
dec
stos
insl
int3
jns
push
outsl
neg
cmp
orb
shlb
cmpsl
ret
lret
xchg
inc
mov
insl
adc
out
push
jecxz
cmc
and
lods
mov
add
xor
jno
mov
fistps
lcall
or
mov
scas
mov
inc
cmc
mov
mov
mov
fcomp
popf
in
xlat
sbb
ret
ja
cmp
mov
xor
gs
cmovo
mov
jo
insb
pop
in
cltd
cwtl
in
outsl
adc
push
and
mov
fwait
mov
mov
sarb
mov
or
xor
sbb
cmp
outsb
sbb
mov
lods
repz
pop
add
cmpsl
inc
sbb
xlat
aad
mov
in
ljmp
incl
adc
jne
xchg
mov
mov
pop
xor
pop
ret
mov
repz
in
cmp
pop
sbb
sti
pop
mov
push
cmp
push
add
mov
xchg
mov
and
jo
push
push
sbb
ds
add
mov
repnz
xchg
aaa
add
arpl
popa
xorb
cmp
mov
stc
pop
cmp
xchg
lret
add
cmp
mov
inc
mov
cmp
shlb
mov
movsl
mov
mov
xor
jg
jno
xlat
sbb
or
jnp
adc
pop
inc
adc
iret
fbld
pop
out
in
mov
ja
mov
jo
outsb
dec
sbbl
mov
pop
mov
xchg
pop
cmp
aas
fs
stc
pop
sbb
push
stos
loopne
push
xor
and
in
int
ret
pop
addr16
in
pop
mov
mov
push
inc
movsl
daa
xchg
xchg
sbb
xchg
add
xlat
dec
fcoms
popf
inc
jge
leave
jl
jnp
push
mov
push
in
and
imulb
push
sarb
loopne
pushf
ds
xchg
and
jbe
mov
rcrl
cwtl
pop
mov
jnp
mov
imul
push
or
adc
push
push
mov
repnz
mov
push
adc
fbld
add
test
xor
insb
in
lds
popa
xor
dec
xor
std
stos
sub
int
icebp
xor
popa
dec
push
movsb
jg
pop
dec
lds
ljmp
push
test
sbb
mov
pop
pop
jl
mov
sahf
sbb
arpl
imul
mov
or
ljmp
pop
cmpsl
jecxz
sbb
xchg
add
add
lds
add
stos
xchg
adc
ret
xchg
ds
xchg
hlt
mov
aas
xor
loop
add
dec
shll
flds
shll
int3
lcall
pop
fwait
add
push
fwait
les
orb
clc
push
fsubrs
inc
cmp
test
jbe
xchg
dec
jp
or
lcall
inc
pop
push
cwtl
shll
test
insb
mov
jbe
mov
inc
and
addr16
fstl
mov
dec
sbb
les
sbb
mov
pusha
jge
cwtl
outsb
jae
cmp
jle
xor
cs
lock
cli
jno
mov
lcall
push
xor
xor
xchg
jg
ja
pushw
mov
repz
ss
inc
push
pop
ljmp
mov
lods
sub
gs
cld
icebp
in
dec
xlat
sub
mov
sbb
sbb
xchg
icebp
ret
dec
daa
cmp
xor
xor
insl
inc
and
mov
inc
sub
push
mov
xor
xor
sub
mov
popa
sbb
es
scas
mov
push
xchg
sahf
inc
lret
xchg
xchg
xor
test
jg
mov
fadd
repnz
call
xchg
in
push
outsl
or
add
inc
fwait
and
dec
inc
cld
push
mov
fcomps
adc
or
data16
test
pushf
inc
cmpsb
outsl
xchg
cltd
inc
xor
lods
mov
mov
xor
in
outsl
call
out
cmp
xor
inc
adc
inc
test
xor
pushl
enter
add
lea
jnp
jo
int
and
fisubs
jbe
scas
pop
xchg
imul
xor
sbb
std
sahf
inc
movsl
dec
data16
fwait
xor
sahf
xor
pop
inc
pop
ds
pop
dec
movsl
aas
push
loop
out
daa
push
cmp
ljmp
mov
xchg
xchg
add
test
cmp
je
or
or
mov
sub
add
cmp
cmc
dec
mov
fiadds
call
pop
repnz
test
cld
ds
stc
test
arpl
adcl
mov
xchg
and
adc
cmpsl
push
jmp
mov
sbb
mov
pop
mov
cmp
rcrl
mov
push
cmp
jnp
push
lea
inc
cltd
jmp
inc
mov
gs
xorb
out
rclb
ss
sbb
outsl
popa
aaa
inc
bound
inc
fildll
cmp
add
mov
xchg
xchg
decb
or
cmp
mov
mov
mov
ss
and
pushf
jae
mov
test
xor
mov
nop
fwait
leave
lods
mov
or
les
mov
add
test
stos
and
jae
add
imul
push
push
mov
push
and
mov
dec
jb
xorb
cmp
adc
jns
loopne
arpl
les
outsl
movsl
int
ss
sbb
outsb
push
pop
outsb
mov
repz
pop
dec
cmp
stos
ja
inc
and
loope
xchg
test
and
inc
cmp
fs
fisubrs
loop
add
mov
adc
or
rcrb
and
loop
jle
ret
add
lods
lock
xchg
mov
fidivrl
jmp
add
adc
shl
or
pop
loopne
and
es
mov
movsl
lea
mov
loope
sub
sub
jp
aad
cmpsb
incb
loopne
rep
call
adc
aas
sbb
push
mov
mov
pop
repnz
cmc
mov
push
cmc
mov
fld
push
xor
mov
xchg
fbld
mov
andb
int
adc
mov
addr16
inc
mov
lcall
rorl
jp
xchg
fiadds
repz
pop
xchg
mov
xlat
popf
push
jp
imul
call
sub
inc
xchg
je
in
mov
in
into
sub
mov
enter
and
jg
push
add
fistpll
les
push
inc
xchg
imul
pop
xor
pop
xchg
rorb
mov
sub
or
das
add
jle
jmp
jp
stos
pushf
or
cwtl
jo
jle
aaa
cmpsl
jb
mov
push
cmp
xchg
lret
imul
add
pushf
gs
roll
dec
mov
dec
out
sbb
push
lea
mov
sbb
cld
sbb
mov
mov
movsl
mov
push
popa
roll
loope
cmp
xor
sbb
push
mov
into
add
dec
xchg
arpl
sbb
fs
sub
out
imul
in
test
dec
lds
xchg
jmp
inc
cmpsl
cld
in
sbbl
bound
push
mov
and
fmull
pop
and
shrb
outsl
lock
sahf
fdivl
lds
aaa
ss
mov
cli
push
mov
movl
das
pop
lds
ljmp
mov
nop
pop
scas
pop
loopne
lea
lahf
fdivrs
fsubrl
mov
je
xchg
jp
test
pop
inc
jae
mov
shll
test
mov
inc
adc
pop
adc
sub
in
or
push
pop
or
xor
sahf
push
xor
dec
into
fcoms
data16
push
popa
in
jo
mov
fwait
mov
jl
lock
jecxz
mov
into
shl
outsl
cmovb
sub
and
mov
mov
push
or
out
outsl
jle
and
stos
lret
aad
adc
test
and
or
or
inc
out
shrl
int
xor
repnz
sbb
mov
mov
and
xor
scas
test
mov
sub
insl
inc
aas
inc
and
dec
adc
xchg
insl
mov
cmp
lods
test
lea
call
dec
lret
fcomp
mov
fbld
enter
sub
sbb
or
push
jbe
cmp
inc
ljmp
stos
add
xchg
in
loopne
lock
dec
xchg
in
xor
sbb
xchg
sub
call
jns
in
jae
lock
sbb
mov
test
xor
shlb
mov
test
mov
pop
xchg
lret
inc
out
je
push
cmc
pop
push
xor
sbb
out
shl
ss
pop
ja
aaa
push
cmp
sub
pop
dec
push
ja
out
pushf
jp
inc
cmpl
inc
jae
jo
iret
cmp
dec
or
test
sbb
pop
adc
test
movsl
call
push
fisubs
mov
cmpsb
mov
add
ror
arpl
mov
and
pop
add
ja
mov
jl
in
push
cwtl
hlt
sub
aad
mov
or
mov
lods
cmpsb
push
mov
mov
in
sbb
cmpsl
sbb
mul
sbb
sbb
mov
mov
mov
inc
cltd
mulb
es
add
int
sub
push
jl
xor
lret
dec
push
jecxz
xchg
lds
pop
subb
jge
dec
mov
and
mov
add
gs
lea
popf
xchg
inc
stos
mov
mov
cmc
push
imul
xor
lret
leave
ljmp
mov
xchg
mov
std
xor
int
bound
sbb
iret
iret
pop
push
jne
aam
imul
add
xor
and
add
push
cmp
push
push
push
push
cwtl
std
jne
push
mov
icebp
inc
pop
lret
push
mov
push
or
repz
mov
loop
xchg
jo
push
lds
or
inc
scas
mov
push
nop
imul
mov
mov
cmc
and
pop
inc
mov
je
aaa
stos
lods
mov
add
lods
adc
adc
xchg
lret
jl
sarb
inc
shrb
cmp
imulb
cli
fimull
cmp
stos
into
push
dec
sti
xchg
or
popf
and
sti
pusha
mov
mov
inc
ds
shrl
shll
jo
ds
jl
xor
sub
fnclex
jle
test
outsl
xor
insl
in
ffreep
pusha
js
xor
psllq
dec
inc
lahf
xchg
sbb
add
add
cmp
iret
iret
or
mov
mov
into
flds
sub
jae
push
outsl
adc
or
dec
pop
sbb
mov
lods
rcr
inc
dec
jl
cmp
adc
push
aaa
sti
bound
xorl
xor
leave
push
pop
adc
mov
or
stos
addb
cli
sbb
pop
xor
mov
adc
lcall
scas
shlb
inc
int3
loop
pop
xor
jne
sub
nop
inc
sbb
mov
stos
mov
sub
aad
std
pop
fdivrs
mov
das
icebp
test
dec
rolb
pusha
movsb
add
adc
push
sub
add
movb
sub
cmp
dec
jns
icebp
rcrb
imul
sub
lea
rcll
sti
jb
xchg
xchg
idivl
xchg
pop
pop
and
sti
xor
les
jne
out
in
add
mov
out
and
mov
outsl
test
add
fcmovb
ss
xor
xchg
mov
or
jae
cmp
out
push
filds
mov
pop
and
jnp
xchg
lods
test
sub
ss
xchg
mov
outsl
mov
sbb
jne
leave
jmp
shrb
mov
jo
mov
ds
lcall
insb
and
dec
cwtl
jb
adc
cmpsb
fidivs
mov
cmpsl
fcmovbe
inc
pop
loope
adc
ss
hlt
xchg
mov
scas
into
mov
and
xchg
add
pop
push
mov
pop
ficoms
pop
and
shl
push
test
call
in
cmp
jne
insl
cmpsb
cmpsb
sub
push
out
sti
and
gs
jmp
repz
dec
movsb
push
sbb
pusha
mov
icebp
popf
and
call
adc
push
jge
push
mov
dec
arpl
outsb
fcoms
mov
call
xchg
or
jg
mov
push
jbe
loope
adc
pop
mov
in
inc
xor
test
notl
or
pop
fmulp
add
addr16
xchg
icebp
mov
pushf
stos
daa
push
mov
fcomps
or
xlat
or
inc
loope
adc
ret
cmp
cmp
dec
sti
andb
loopne
push
ja
jecxz
or
push
jns
mov
insl
loopne
xor
stos
call
stc
add
xchg
add
pop
gs
mov
cmp
shll
icebp
or
xor
sub
pop
pop
cmp
popf
jg
movsb
inc
mov
jp
push
xchg
sub
adc
inc
xchg
mov
adc
arpl
sahf
pop
push
test
stos
dec
insl
push
std
jbe
cmp
frstor
aam
hlt
mov
sahf
outsb
mov
pop
in
jg
pop
pop
fsubrs
imul
adc
lods
mov
les
xorl
sub
sub
imul
push
jno
jle
mov
push
sub
mov
mov
mov
adc
xorl
pop
pop
out
mov
mov
fcmovb
mov
fisubrs
jge
scas
je
inc
insl
mov
fadds
les
jb
lds
jmp
push
push
outsb
and
cld
outsl
lock
roll
roll
xchg
pushf
sbb
mov
adc
push
data16
andl
in
adc
clc
shrl
subl
popa
data16
scas
fcoml
push
daa
mov
js
jnp
adc
pushf
xor
enter
pop
jg
test
mov
lret
mov
sbb
in
mov
mov
inc
lea
test
lcall
je
pop
lcall
add
jg
cltd
orl
jnp
cmp
or
imul
ljmp
xchg
mov
jne
dec
and
sarb
jae
inc
cmp
into
mov
es
roll
mov
pushf
in
pop
orl
sub
je
cwtl
adc
out
popl
lds
loop
push
mov
jp
aam
cmp
pop
xor
ljmp
pop
ret
cmp
lret
mov
int
das
pop
arpl
sub
fs
mov
and
movsl
and
pop
adc
loopne
push
mov
jo
or
dec
mov
push
push
out
sub
xchg
xorb
inc
xor
pop
xor
daa
mov
inc
inc
push
popa
pop
shrl
sub
mov
arpl
pop
dec
dec
inc
call
sub
pop
inc
repnz
mov
jl
stc
popa
repz
jge
lahf
inc
data16
mov
in
sub
xor
adc
mov
adc
out
lret
hlt
xchg
fsubs
jle
push
or
mul
or
xchg
clc
sub
and
loope
loopne
cmc
test
adc
stos
mov
mov
adc
dec
xor
dec
shl
xlat
imul
loop
outsb
in
testb
pop
out
push
inc
or
cmp
repnz
lea
push
ret
mov
adc
xor
fidivs
fsts
hlt
jmp
fdivr
lds
sub
sbb
rcl
js
inc
mov
pop
sbb
push
repz
or
pop
jmp
js
jmp
mov
fsts
neg
push
and
movsb
adc
adc
adc
dec
stc
out
in
lock
sbb
xchg
rolb
push
aam
mov
lock
mov
sti
pop
adc
adc
rclb
sbbb
rclb
and
popa
in
pop
sbb
jecxz
call
insl
fsubs
aad
outsl
into
dec
adc
repz
jnp
xlat
fdivrl
lea
jb
ljmp
jns
jp
scas
cmp
cs
ss
pop
clc
test
push
lods
insl
shlb
jg
sub
push
lods
add
inc
ss
lahf
in
fldl
sub
imul
in
xchg
inc
xchg
leave
push
shl
fsubs
dec
mov
std
push
jne
cmpb
push
push
orb
lods
cmp
jl
sub
xchg
sub
sbb
test
repnz
rcl
in
sub
insb
jae
xor
sahf
pop
add
repz
or
in
sti
bound
test
inc
test
fiaddl
int
lock
mov
push
push
xlat
jns
out
popf
into
pop
mov
pop
sub
cmp
adc
mov
popa
aam
lahf
dec
or
xchg
sti
in
orl
inc
add
jne
stos
pop
jo
push
mov
js
shlb
mov
sub
push
or
sub
ret
inc
xchg
aaa
mov
into
xchg
mov
cltd
pop
pop
je
test
xor
push
ret
scas
lods
das
mov
pop
mov
sti
aam
jg
or
xchg
call
fidivl
lret
addr16
mov
mov
sbb
out
push
fmull
push
adc
in
nop
sbb
push
clc
adc
and
cmp
and
jns
xor
jl
nopl
mov
imul
ret
rcrl
clc
std
pop
cmpb
sub
imul
into
push
rclb
stos
adc
sub
lock
lret
push
test
fsts
js
add
stos
xlat
aad
pop
xor
subb
adc
pushf
dec
imul
jbe
xorl
fidivs
jp
xchg
jge
push
and
les
into
insb
fwait
add
pushf
xchg
mov
outsb
aas
fwait
test
sbb
cmp
xchg
test
mull
mov
mov
mov
in
push
jbe
popf
push
das
dec
jecxz
or
xchg
into
adc
jmp
jb
push
out
jl
jno
fiaddl
cmpsl
ret
ret
mov
addr16
cmpsb
fbstp
push
inc
inc
xchg
push
test
shl
test
or
stos
cs
mov
sbb
das
pop
pop
xor
mov
pop
push
mov
cmp
roll
popf
xchg
push
mov
cmpsl
xchg
mov
jbe
pop
pop
xchg
ret
loop
mov
push
mov
out
aas
cltd
cmpsb
xlat
pop
xchg
mov
sbb
cmp
into
and
push
sbb
push
mov
mov
insl
stos
cmp
inc
daa
out
xor
mov
pop
cmp
push
cmp
fdiv
inc
call
cmp
pop
stos
aaa
jae
fldl
adc
rsqrtps
imul
mov
ret
outsb
in
jne
cmp
es
lods
mov
sub
addr16
ja
imul
fstl
mov
xchg
daa
movsl
repnz
push
pop
inc
mov
into
xchg
pop
adc
sbb
imull
scas
rorb
adc
loop
xchg
and
add
in
imul
or
jne
jo
add
imul
pusha
fcomps
mov
xchg
or
cmc
ljmp
dec
xlat
outsl
push
aaa
popa
js
jmp
pop
stos
push
icebp
jbe
cmpsl
mov
into
push
or
or
cmp
and
push
cli
or
repz
xor
xchg
dec
addr16
imul
jl
xchg
ss
nopl
jge
sub
dec
fstl
jbe
jae
or
mov
pop
add
mov
rolb
or
shrb
xor
dec
mov
js
movsl
or
repnz
mov
int3
test
push
ds
fsubl
and
push
push
jne
add
aaa
xchg
sub
and
dec
sti
mov
out
loop
insl
and
cmpsb
iret
sbb
mov
mov
insl
mov
es
push
mov
xchg
popa
scas
push
repnz
sbb
int
popa
rcl
ret
call
mov
sbb
ret
cmp
ret
push
ficomps
pusha
mov
outsl
sti
xor
mov
jl
imul
jmp
shll
repz
fs
jae
shrb
lahf
lock
inc
sub
inc
shrb
and
or
mov
ret
xchg
mov
movsb
out
xorb
add
cmp
inc
sbb
add
dec
fisttpl
popf
call
int3
int3
add
rclb
mov
rorb
jl
stos
xlat
or
loope
test
test
adc
push
shrl
test
adcl
ss
mov
pop
cmp
ss
push
xor
out
nop
and
in
mov
daa
and
sub
mov
out
sbb
push
imul
shlb
xor
xor
pop
ja
xchg
mov
push
cmp
cld
lods
and
xor
pop
adc
inc
mov
out
aaa
sbb
dec
mov
xchg
mov
subl
subb
popf
js
sub
out
push
fiadds
jecxz
sbb
scas
inc
xor
fsubr
and
adc
xchg
mov
mov
icebp
sub
mov
push
lea
push
loop
mov
mov
sbb
fnstenv
in
mov
mov
dec
jae
ljmp
push
int
push
or
lcall
lcall
jbe
rcrl
adc
out
movsb
les
xlat
out
aas
fsubl
inc
mov
xor
out
js
jmp
es
mov
es
leave
or
push
mov
nop
push
daa
dec
ret
push
dec
xchg
inc
dec
dec
fcoms
mov
jmp
pusha
pop
hlt
insb
push
adc
jge
insl
jnp
mov
addr16
xor
mov
cmp
je
outsb
push
icebp
xor
sti
cmp
xchg
push
xchg
sub
imul
xchg
mov
cmp
dec
mov
dec
and
sbb
push
xchg
dec
and
jecxz
push
push
push
out
sub
jl
into
mov
pushf
sub
xchg
lock
leave
aaa
adc
daa
mov
loope
mov
bound
mov
into
pushf
mov
mov
inc
mov
getsec
int3
fistpl
push
stc
fwait
adc
add
incl
or
subb
adc
sarb
sarl
into
mov
lret
iret
jle
or
add
sbb
test
lods
adc
imul
xchg
scas
mov
push
cltd
push
daa
cmc
lods
pop
in
push
mov
scas
add
cmc
jo
das
mov
loopne
inc
mov
lods
pop
fildll
push
mov
stos
mov
in
mov
jb
jne
cmp
shr
and
lret
ss
push
lock
jns
sub
mov
lock
mov
ret
int
fwait
or
loop
fsts
scas
and
xor
popf
orb
scas
clc
and
aad
mov
imul
flds
loopne
push
lret
shll
test
dec
dec
stos
and
push
adc
lret
cltd
push
sbb
jne
loop
std
add
in
les
mov
cld
dec
jae
fimuls
data16
push
cmc
inc
cli
xchg
adcb
pop
jnp
test
and
jb
out
test
mov
int3
loope
xlat
xor
in
jb
scas
cmp
mov
xchg
lret
loop
mov
cld
cmp
or
out
mov
lods
cwtl
notl
and
es
imul
xchg
fistps
sbb
je
leave
mov
jne
mov
out
pusha
ds
cmpps
stos
inc
pop
cmp
fidivl
lret
xorb
xchg
aam
xchg
mov
mov
xchg
cli
mov
mov
ret
xor
cmpsl
int
nop
fnsave
mov
push
inc
fildl
and
add
lret
mov
movsl
bound
pop
js
lcall
out
inc
dec
out
dec
aad
sbb
in
xchg
dec
push
jecxz
test
lock
push
sbbb
add
xchg
mov
add
xchg
popf
add
and
mov
repnz
add
fwait
into
xor
push
cmp
lods
int3
leave
popf
insl
cwtl
push
or
inc
and
negb
aas
inc
jecxz
pop
scas
jo
lret
lods
mov
das
inc
out
fxch
add
movntps
xor
in
test
xchg
pop
outsb
cmp
lea
xchg
adc
xchg
iret
and
leave
aam
call
mov
push
xlat
mov
add
ret
inc
cs
jo
enter
jbe
mov
inc
jb
xchg
testb
scas
or
pop
cltd
fidivrl
in
lods
test
or
test
push
adc
popa
es
pop
adc
lret
testb
pop
sarb
fdivl
ljmp
sbb
ds
xchg
mov
jl
lock
xor
out
sbb
pop
xor
mov
mov
clc
les
aaa
dec
lcall
push
and
mov
mov
pop
push
mov
inc
mov
scas
fiaddl
sub
aaa
jne
sub
adc
in
insl
je
mov
inc
scas
sahf
aaa
fisubs
sbb
in
fld
or
ljmp
lahf
fisttpl
loopne
jns
aaa
rep
jl
loopne
into
push
push
push
insl
std
mov
pop
ljmp
fwait
pop
call
xlat
sub
mov
sub
inc
xlat
adc
mulb
jmp
pop
jle
inc
mov
daa
add
mov
push
mov
sub
call
sbb
movsl
cmpsl
or
push
mov
imul
jnp
mov
adc
push
into
add
loope
mov
ja
xchg
sub
push
push
mov
clc
mov
inc
dec
in
push
test
xchg
aam
xchg
lcall
rorb
sub
pop
lahf
daa
cli
sbb
daa
inc
pop
fnclex
sarl
pop
sbb
mov
mov
push
sub
jbe
out
test
xchg
call
adc
xchg
push
xchg
push
pop
out
es
jbe
add
sbb
or
dec
icebp
je
cmp
scas
out
rorl
push
in
push
mov
sbb
lods
cmp
dec
lret
cmp
fdivs
push
outsl
sbb
rorl
add
push
clts
aas
fucomi
sets
inc
mov
mov
leave
gs
or
filds
cmp
xchg
push
ret
imul
dec
adc
mov
rolb
insb
lcall
sbb
pop
scas
mov
mov
sahf
xor
and
push
jnp
rorb
push
stos
es
lods
mov
fbstp
sub
mov
and
andl
xchg
loopne
cmp
mov
xor
mov
adc
lahf
adc
xchg
add
stc
cs
adc
cmovbe
fdivrl
aaa
xor
jg
outsb
adc
test
sub
or
loope
in
loope
cltd
pop
in
bound
jbe
cmp
mov
cmp
aam
adc
mov
insb
and
or
xor
ret
aam
je
lds
mov
dec
mov
test
in
es
fucomip
cld
pcmpeqb
pop
xchg
inc
addr16
into
aad
inc
sbb
xchg
xor
fcoms
lds
xor
lods
js
iret
add
sub
dec
cli
out
outsb
clc
mov
lret
cwtl
sub
lds
jae
popf
add
arpl
mov
out
add
xchg
stos
or
in
xor
or
pop
mov
dec
maskmovq
negl
incb
fmuls
stos
orb
push
ljmp
push
mov
cmpl
cmp
clc
dec
decb
gs
loopne
push
cmc
push
sti
pop
xchg
dec
outsl
imulb
push
and
jnp
xor
mov
ret
pop
xor
in
popf
fldenv
xchg
push
clc
jecxz
pop
or
push
mov
sahf
dec
subb
outsb
add
popa
out
ss
xchg
or
movsb
lods
add
lods
xlat
dec
cmp
dec
mov
push
xor
shrb
scas
xchg
mov
das
enter
mov
xor
xchg
inc
push
scas
dec
sbb
popf
aad
lret
out
cmp
xchg
or
pop
das
aad
stc
pop
add
xchg
insl
cmp
scas
lock
out
sub
jbe
and
pop
dec
jp
mov
adc
sub
cmp
outsl
mov
inc
in
or
xlat
testb
or
lods
xor
cld
js
sbb
std
push
jge
shll
add
mov
leave
ds
fwait
out
xchg
iret
mov
aad
push
aas
push
inc
insb
xor
jp
jae
add
mov
sbb
and
pop
ret
xchg
push
xlat
mov
jecxz
mov
out
cld
inc
sbb
sti
xor
mov
add
mov
out
sbb
xchg
popa
les
fldl
fs
pop
push
sub
lods
fadds
mov
loope
and
ds
push
ljmp
mov
in
cs
mov
or
test
or
fdivrs
cmpsl
and
outsb
gs
bound
cltd
cmp
fdiv
push
mov
or
push
cmp
or
movb
and
in
lods
xchg
jbe
cmp
mov
enter
fldln2
xchg
mov
in
dec
jb
into
adc
in
in
fst
mov
cmovns
daa
adc
fcmove
adc
adc
jno
out
jp
sbb
aam
rcll
clts
adc
and
outsl
xchg
pop
dec
roll
xchg
xchg
mov
pop
popa
cmp
jmp
movsb
fnstsw
sti
xchg
dec
jp
les
add
mov
xchg
jmp
mov
fwait
push
cmp
cmpsl
mov
es
lahf
sbb
adc
mov
fcoml
push
ja
inc
out
push
mov
mov
mov
xchg
sbb
and
rclb
pop
adc
popa
outsl
daa
sti
mov
pushf
lea
jo
pop
push
push
or
stos
or
jp
or
push
dec
jo
stos
pop
mov
pop
jae
insb
jge
inc
jle
push
inc
mov
and
xchg
sbb
nop
adc
fdiv
jb
adcl
iret
aaa
xor
out
pop
lods
leave
movsl
push
lcall
outsl
rcl
mov
dec
or
or
lods
sarb
push
xor
dec
leave
inc
pushf
xor
mov
out
fldln2
jge
rcrb
dec
fisttps
cmp
fmuls
sbb
pop
mov
or
lds
mov
pop
sub
das
xor
inc
mov
mov
sub
pop
sub
loopne
js
data16
mov
and
add
cmp
mov
fiadds
es
push
loop
cmp
sbb
and
xor
pop
hlt
divb
jns
add
data16
gs
inc
pop
ja
cmp
fdivp
dec
outsb
sahf
mov
add
dec
in
push
xchg
sub
xor
mov
aad
xchg
xchg
call
into
sbb
or
xor
hlt
mov
imul
push
mov
jae
xor
into
scas
pop
enter
sub
es
test
lcall
imul
out
iret
loop
xor
add
push
rolb
sub
je
and
pop
notl
jne
dec
repz
mov
out
in
lods
xor
cmp
ss
sbb
xchg
xchg
shll
lcall
xchg
aaa
outsb
setl
loopne
xor
movsb
jae
inc
mov
mov
bound
add
test
movl
inc
pop
rcl
jne
aam
fisubrs
mov
inc
pop
jno
push
push
xchg
xchg
sub
iret
inc
push
xchg
sub
test
mov
subl
lea
dec
sub
dec
and
mov
jb
xor
cld
test
mov
or
ret
arpl
arpl
stos
sbb
or
js
popa
mov
mulb
adc
rclb
arpl
push
movsb
dec
mov
loopne
rorl
add
xchg
cwtl
dec
fcoms
jo
cmp
es
or
jg
in
repz
push
cmp
test
ds
xor
cmp
adc
mov
rcrb
sbb
and
loope
jno
test
xchg
es
mov
in
lcall
mov
test
andb
popf
mov
sub
mov
popa
add
cmpsb
aad
push
outsb
pop
popf
test
sbb
push
jne
jp
cmp
int
pusha
mov
push
das
mov
in
pop
mov
das
popa
jmp
sar
pop
imul
add
stc
push
sahf
inc
pop
jmp
ds
adc
mov
ja
stos
or
push
jns
les
mov
jge
jne
or
mov
leave
popf
push
clc
mov
testb
xor
leave
mov
mov
movsl
cmp
aam
repnz
cmpl
ret
xor
rcr
data16
shlb
fmuls
les
mov
lods
aam
sub
mov
dec
je
push
cmp
les
cmpl
add
pop
or
outsb
roll
mov
cmc
in
jns
loop
das
xor
leave
mov
jnp
mov
jnp
push
out
push
adc
mov
out
insb
inc
mov
xchg
pushf
jbe
jb
clc
sti
jb
in
mov
sub
jae
adc
adc
insb
loopne
add
popf
jae
pop
jno
ja
repnz
add
xchg
int3
mov
dec
add
fnstenv
inc
pop
shrb
jb
xor
cmp
mov
fildl
in
cmp
or
adc
mov
std
bound
ss
les
pop
clc
inc
lods
pop
cmp
orl
jg
jnp
cmp
dec
jge
std
and
fwait
sbb
xchg
inc
mov
popf
lcall
mov
cmp
repz
dec
jmp
cmp
stos
pop
jne
or
iret
idivl
jp
and
fcmovnb
faddl
inc
xchg
into
inc
xchg
sbbb
push
bswap
test
inc
dec
and
mov
and
sub
or
mov
scas
leave
pop
mov
jbe
stos
add
mov
push
insl
cwtl
mov
mov
and
inc
inc
fisubrs
mov
pop
push
loop
fxam
lea
bound
pop
xchg
outsb
xor
addr16
sub
sub
adc
push
in
negb
ljmp
push
mov
icebp
lds
pusha
mov
lret
push
and
mov
mov
pop
in
rcll
xor
mov
in
sub
mov
push
jle
stos
mov
je
out
dec
mov
call
sub
aam
adc
sbb
adc
bound
inc
jns
hlt
movsb
loopne
push
std
fsubr
xor
popf
mov
sub
int
movsl
fistpll
xor
pop
psubw
mov
jmp
leave
mov
xchg
cwtl
mov
mov
or
in
mov
sbb
test
xor
mov
xor
mov
out
lret
cmp
inc
push
or
ja
repz
loop
and
and
aad
lahf
sub
pop
pop
test
lret
fwait
or
enter
adcb
aaa
aas
cltd
jp
or
insl
cmc
and
jmp
adc
movsb
sub
repz
push
outsl
sbb
jecxz
sahf
push
std
adc
mov
int
mov
and
data16
inc
jae
cld
mov
scas
and
push
imul
push
add
mov
loop
xchg
cli
lret
and
cmp
jg
and
bound
pop
outsb
out
mov
xor
cltd
ficompl
cmp
mov
add
ror
inc
data16
into
xor
ret
leave
mov
xor
jg
and
lret
push
mov
movsl
jge
imul
loop
xor
mov
lret
push
addr16
jl
push
fucomi
pop
fimull
lods
rolb
jbe
neg
mov
dec
mov
outsl
popf
jnp
mov
mov
jl
add
in
hlt
cwtl
add
adc
enter
jge
mov
sbb
ss
in
inc
mov
rcrb
cmp
out
push
fdivs
jae
popa
shll
insb
xor
ljmp
pusha
cs
sti
cli
push
cmpl
dec
xchg
pop
and
inc
cld
cmp
mov
popa
inc
leave
add
cmc
subb
push
aas
mov
lea
ss
call
pop
addb
lods
fadds
in
movb
comiss
scas
mov
mov
mov
fucomi
adc
sbb
jp
or
std
stos
dec
js
dec
inc
repz
shl
cmpb
loop
fdivs
int3
lods
add
call
mov
cld
or
inc
xchg
dec
push
xchg
xchg
mov
mov
sbb
mov
dec
insb
notb
fadd
out
and
mov
divb
mov
shrb
mov
mov
into
rclb
add
sbb
pop
push
mov
lret
adc
mov
mov
xor
adc
dec
addl
scas
push
clc
mov
adcl
ret
aad
pop
push
cli
jg
jns
xor
mov
fists
push
inc
out
adc
cmp
sbb
xchg
mov
inc
push
fwait
xchg
shlb
push
sbb
cmpsb
sbb
mov
add
add
in
in
test
push
rcrl
je
movsl
or
dec
aad
movb
jb
or
xchg
insb
cli
aaa
sbb
vpsrlq
cld
in
notl
xlat
sub
mov
sbb
in
inc
daa
sahf
mov
sub
int
pop
mov
shll
push
push
in
ljmp
outsl
jge
shrb
add
ljmp
inc
fidivrs
xchg
mov
mov
out
pop
sbb
mov
stos
ror
jns
or
jl
jge
sarl
and
xchg
jo
add
dec
mov
fmuls
adc
sub
or
int
mov
repnz
test
fisttps
jecxz
add
mov
into
aas
and
inc
pop
hlt
aas
filds
push
dec
cmpsl
inc
mov
push
stos
cmp
mov
cmp
and
sbbl
andb
movsl
loope
out
push
xor
add
jp
es
xchg
imul
rolb
push
ficomps
sbb
push
fmull
mov
pop
dec
dec
push
add
push
jl
xor
lret
lcall
enter
push
jns
out
ret
xchg
jl
adc
mov
or
enter
jnp
stos
inc
cmpsb
pop
and
int3
in
cld
sbb
pop
mov
pop
and
negl
stos
mov
mov
jge
jge
js
fucompp
ds
push
sahf
mov
xlat
add
sub
dec
clc
push
xor
push
sbb
cmp
insl
add
shr
sub
aam
cmp
jno
gs
dec
xchg
cwtl
pop
dec
testb
xchg
jbe
imul
ds
btr
dec
das
push
jl
or
rcl
cld
push
insl
stos
shrl
outsl
add
enter
icebp
add
xchg
sbbb
xor
xor
bound
xchg
mov
fsub
in
mov
rolb
cltd
dec
jl
cltd
xor
or
jnp
xchg
shlb
scas
out
sbb
add
add
lahf
jg
push
adc
lods
xchg
mov
pop
and
rorb
jle
mov
out
sbb
mov
xor
pop
repnz
ss
inc
cmp
scas
cmpsl
add
data16
add
out
aaa
sbb
dec
scas
push
inc
repnz
push
pop
jl
xor
xchg
sub
mov
pop
jl
and
std
jmp
fwait
rcrb
cltd
mov
insl
lret
pop
jbe
adc
ljmp
fidivrs
or
aaa
pop
lds
in
mov
es
std
and
sbb
pop
fdivrp
imul
jae
cmp
icebp
cmp
rorl
sbb
lcall
xchg
mov
fdivrs
rcrl
pop
dec
cmp
adc
sub
outsb
addr16
call
push
pop
shlb
inc
push
scas
lahf
sbb
mov
jg
test
mov
jmp
add
pop
or
hlt
call
stc
cmovno
mov
inc
js
pop
sti
js
sbb
xchg
rol
jmp
jl
jmp
lret
sbb
mov
push
pop
dec
fcmove
xor
inc
jae
jb
cmp
and
mov
in
push
cmpsb
leave
mov
add
mov
xchg
nop
sub
adc
cld
cmpb
push
movsb
jb
xchg
out
inc
and
imul
cli
push
decl
sub
loop
stos
pushf
xor
push
repz
movsb
pop
cltd
sbb
int3
repz
shlb
add
or
push
push
xchg
dec
mov
rcl
fdiv
sarb
jecxz
sub
xchg
frstor
dec
test
dec
push
mov
jb
pop
pushw
mov
fmulp
dec
jmp
shl
jae
cwtl
cmp
xchg
sbb
sti
pop
ret
mov
sbbl
pop
dec
inc
add
push
jmp
sahf
sbbl
mov
icebp
dec
dec
or
mov
in
push
adc
fwait
je
lods
inc
inc
sahf
cld
js
pop
mov
xor
add
in
pop
sahf
dec
inc
sar
sub
dec
lcall
in
aam
push
iret
mov
or
cld
popf
inc
ficoml
push
add
fists
jnp
xchg
mov
lcall
fimull
je
xlat
mov
sub
lock
jnp
out
outsb
xor
pop
aad
rclb
or
jns
mov
xchg
adc
xor
push
push
xor
aam
push
movsl
push
jle
dec
inc
lock
mov
pop
mov
dec
fstpl
xchg
aam
hlt
dec
or
jmp
xor
call
xchg
in
jecxz
mov
in
stc
ret
popa
sub
nop
or
cs
push
or
xlat
push
sbbb
jno
insl
repz
cs
lock
pop
add
jb
jl
imulb
fnsetpm(287
popf
pusha
push
cmp
add
pop
jl
mov
out
push
dec
dec
repnz
and
enter
push
in
adc
pushf
jg
sbbl
outsl
push
push
add
push
mov
xor
sahf
fcomi
les
mov
outsb
leave
shl
and
call
and
aam
jg
sbb
sub
stc
dec
lret
mov
and
and
dec
mov
jbe
add
mov
or
jle
jmp
push
push
dec
adc
iret
je
ss
mov
jg
leave
out
out
ret
insl
pop
pop
fwait
je
loope
lock
jp
out
or
in
iret
mov
cmpsl
mov
repz
push
pusha
adc
add
xchg
push
sbb
mov
mov
jl
mov
inc
test
jl
fcmovu
sub
aam
mov
mov
xlat
arpl
mov
xor
movsb
out
dec
adc
adc
dec
cmp
lret
xlat
shlb
xchg
es
lods
hlt
mov
in
insl
into
cs
inc
and
jnp
popf
mov
jle
jmp
cltd
ljmp
jns
aaa
arpl
push
lret
test
in
adc
xlat
push
dec
xor
mov
or
mov
jge
cmp
mov
sub
sbbl
push
sarl
mov
pop
das
fdivr
jp
adc
inc
pop
push
adc
das
cmc
and
mov
repz
and
popa
cmp
gs
and
push
xchg
leave
mov
push
adc
scas
testb
leave
jl
fwait
adc
mov
bnd
pop
jbe
cld
pop
xchg
sbb
shrl
loopne
test
mov
addr16
or
add
inc
push
add
lea
pop
xchg
lods
or
mov
add
jno
movsl
cli
mov
jmp
loope
punpckhdq
inc
xor
ja
mov
sub
add
push
addr16
inc
or
ja
out
xchg
arpl
je
adc
ret
and
mov
mov
sub
cld
jecxz
mov
in
les
dec
sub
sub
cs
jbe
mov
cmp
sbb
pop
dec
aam
stos
ror
sbb
insl
in
data16
repnz
ret
sub
jge
adc
mov
jg
in
dec
leave
jge
inc
lds
add
lea
test
mov
das
lret
mov
sarl
cmp
xor
mov
and
cmp
jmp
cwtl
andl
inc
adc
mov
sbb
into
cltd
mov
sbb
sub
pusha
cmp
xchg
cmpsb
jle
lds
push
inc
ret
inc
mov
aas
sub
mov
mov
sub
jae
cmpsl
or
or
mov
push
in
xchg
add
insb
lahf
hlt
lds
inc
leave
bound
mov
inc
push
mov
and
jbe
in
pushf
inc
test
push
popl
adc
inc
mov
push
mov
sbb
push
mov
adc
xchg
leave
lcall
sub
mov
imul
fdivrl
mov
mov
jae
in
ljmp
and
mov
sti
xchg
cwtl
xor
add
adc
jp
loop
aad
movsl
xchg
inc
pop
in
adc
push
mov
dec
lock
inc
push
fistpll
xor
gs
gs
jmp
lock
in
repnz
jmp
fwait
cld
mov
decl
les
stos
sbb
mov
sbb
pushl
into
frstor
fildll
sub
jg
push
sbb
jl
pextrw
cmpsb
add
pop
test
fadd
add
mov
aam
mov
in
push
sti
cwtl
adc
test
add
mov
movsb
pop
cwtl
repnz
pop
mov
xor
mov
sti
add
mov
fmul
inc
push
mov
fistl
cmp
in
arpl
test
ja
imul
add
mov
push
cmp
rdmsr
mov
std
fdivs
adc
mov
inc
mov
jae
jnp
push
sbb
in
lods
xor
jg
jo
cmpb
mov
ss
pop
pop
rcll
fildll
pushf
xchg
out
dec
cwtl
mov
mov
xchg
jle
cmp
cmpsl
jno
rol
pop
fninit
out
addr16
sbb
inc
xchg
xchg
idivb
push
sar
jge
lret
xchg
mov
fildll
mov
and
imul
nop
dec
imul
add
rcrb
mov
xchg
pop
dec
xor
xchg
scas
jo
cs
jno
stos
push
sti
pop
negl
out
jno
xchg
movsl
hlt
cmc
dec
sub
leave
push
mov
fdivs
inc
scas
and
add
clc
negb
lret
inc
lock
fnsave
mov
mov
jge
mov
xor
loop
mov
mov
push
pop
dec
loope
xchg
push
jb
arpl
add
pop
clc
jnp
scas
or
or
in
push
popf
dec
sub
push
or
lock
into
mov
jnp
push
popf
mov
aam
inc
mov
int3
sbb
in
push
lock
mov
int3
lds
arpl
cmp
cmp
jge
mov
push
arpl
fs
mov
xor
mov
mov
xor
fisubrl
xchg
mov
sub
in
in
fists
shll
je
cmp
imul
adc
add
mov
sahf
repnz
fwait
dec
or
gs
add
push
test
jecxz
into
cli
or
mov
sbb
dec
fwait
mov
ror
jmp
push
cmp
or
in
movsl
imul
mov
inc
xor
cmp
xchg
outsb
add
movsb
into
pop
lahf
inc
and
movsl
fadds
out
jmp
lahf
xlat
and
scas
and
cmpsb
stos
xchg
movsl
push
fstpt
cmp
sarb
mov
xchg
mov
xor
add
dec
xor
lret
push
sub
jmp
pop
or
jmp
jno
jl
mov
stos
sti
xchg
shll
arpl
dec
sbb
and
jne
outsb
shlb
popa
sub
or
leave
mov
test
test
popf
test
xchg
out
and
out
push
xor
es
mov
dec
adc
jp
iret
fsts
je
outsl
cmp
cmp
jns
pop
popa
sub
sub
testb
or
pop
ja
out
cmp
xchg
out
mov
imul
push
rcll
push
dec
mov
fwait
inc
aaa
or
les
mov
mov
pop
xlat
jg
cmpsl
pop
mov
cmp
add
and
ss
frstor
cwtl
jle
mov
icebp
or
arpl
hlt
sub
out
in
xor
mov
xlat
pop
pop
dec
jle
cmp
in
sub
in
fsub
aaa
mov
sbb
mov
inc
ss
movsl
add
imul
xor
or
or
cmp
dec
fsubrp
push
stc
idiv
cmpsb
jbe
fwait
in
or
and
jo
jecxz
out
mov
mov
ljmp
pop
push
jmp
dec
pushf
jae
mov
out
pop
mov
leave
aad
mov
cmp
xchg
xchg
push
xchg
xchg
rcll
pushl
fs
push
orb
loope
push
fadds
lea
or
and
dec
jae
bound
mov
mov
push
gs
out
jle
std
test
shll
sbb
sub
sahf
arpl
push
imul
pushf
and
dec
test
push
and
fwait
dec
jecxz
sahf
cmp
icebp
sub
inc
popf
fstpl
enter
xchg
inc
jae
leave
cmp
sub
ja
je
xor
jns
mov
push
fidivl
mov
jle
repz
add
jmp
incl
les
adcb
mov
lret
fmuls
push
mov
fldcw
sysret
dec
out
jl
mov
inc
nop
cld
pusha
cmp
rcll
mov
pushf
jb
ret
inc
movsl
das
mov
orl
and
imull
xchg
xchg
push
mov
imul
cld
mov
js
fcomp
mov
pop
addr16
ss
mov
push
xchg
pop
call
add
cli
lahf
dec
popf
nop
stos
jp
cmp
fisubrl
popf
adc
sub
stos
mov
dec
and
cmpb
or
sub
lret
nop
dec
in
mov
repz
ss
jo
cmp
jg
leave
cmp
out
or
sub
loopne
xchg
lock
pop
mov
or
mov
xchg
pusha
mov
add
mov
add
sbb
int
ss
imul
ja
into
adc
inc
or
div
nop
mov
aas
test
jne
jnp
jb
gs
insl
mov
out
stos
ret
mov
in
adc
andl
cld
mov
push
adc
xchg
pushf
add
sti
xchg
inc
lea
add
sub
leave
sbb
push
imul
ffreep
pop
jl
mov
inc
add
rcr
pop
add
cmc
ljmp
jmp
dec
push
add
insl
out
test
cmp
rcl
pop
dec
aad
js
out
cmp
loop
and
jecxz
in
scas
shlb
mov
ja
aad
ljmp
or
and
xchg
and
sub
push
pop
roll
inc
dec
cmp
mov
cli
outsb
mov
sub
dec
pop
call
push
cld
jbe
mov
inc
mov
lods
cmc
imul
test
aad
jmp
fstpt
lea
cmp
in
outsl
push
out
mov
fmuls
sbb
sub
xor
insl
dec
pushf
or
xchg
test
mov
jl
pop
mov
xor
lods
jno
outsl
sbb
fisubrs
nop
and
stc
dec
loope
nop
fdiv
jae
xchg
ljmp
movsb
mov
popf
imul
inc
jmp
icebp
ror
std
in
xchg
fstl
arpl
pop
jl
mov
or
aam
pop
ret
or
pop
sbb
lea
pop
cmpsb
push
test
test
pop
aam
push
and
imul
add
dec
push
ret
shll
push
pop
push
mov
add
dec
das
push
sahf
dec
add
dec
popa
scas
mov
jecxz
adc
pop
imul
mov
fstps
xchg
mov
push
sbbl
dec
clc
hlt
mov
insb
orb
sub
insl
ds
mov
in
sbbl
jnp
loopne
fnstsw
adc
cltd
xchg
push
push
sbb
adc
sub
aas
fstps
inc
fwait
out
cmpsl
sbb
sbb
sbb
xor
add
xchg
rolb
pusha
sbb
or
aad
jae
pop
jae
add
jle
outsl
nop
sbb
jg
out
mov
fildl
adc
aam
fs
lcall
loopne
sub
push
and
mov
xchg
push
pop
push
cmpl
sub
andl
mov
bound
arpl
arpl
mov
jl
or
push
adc
shl
or
movb
xor
lahf
pop
adc
jbe
pusha
fs
mov
inc
jecxz
fistl
scas
xor
loope
or
outsl
nop
inc
out
mov
pushf
jb
cmp
into
sub
add
cltd
jp
push
les
mov
jns
add
stos
repnz
cmpsl
mov
aam
aam
jne
cltd
cmp
pop
mov
lds
inc
jnp
jge
in
ss
in
mov
xchg
dec
jb
scas
inc
xor
sbb
sbb
mov
out
gs
pop
std
xchg
cs
out
stos
push
pusha
push
cmp
fsubrs
cli
or
mov
push
jne
add
rorb
mov
les
jne,pt
mov
or
testb
cmpsb
and
insl
rcrb
pusha
cmc
sbb
js
jo
nop
and
lods
ret
pop
sbb
rolb
leave
pop
sbb
cmpsw
sarb
call
sbb
out
sti
cmpsl
dec
ret
fdivl
cmp
stos
sbb
pop
jns
sub
mov
js
cmpsl
popa
shl
xchg
pushf
or
mov
ficoms
xchg
in
fwait
jecxz
xchg
push
xor
jbe
ret
aam
shlb
add
sub
dec
mov
movsl
mov
test
sbb
sbb
mov
sub
nop
xchg
pushf
push
fildll
cmp
dec
into
fdivl
aad
jbe
push
xor
out
adc
aad
adc
les
and
rolb
xchg
shll
xor
cmp
rcrb
lods
psubsw
hlt
fisttpll
xor
adc
shll
cmp
sti
sub
subb
mov
ljmp
test
lahf
fistpl
fld
outsl
mov
sbb
jmp
jp
and
jle
enter
xor
roll
fadds
and
jne
jne
or
fcomps
dec
addl
add
or
mov
mov
sbb
mov
dec
aad
in
ret
mov
outsb
xor
fnstenv
fwait
int3
lods
or
adc
rcl
cmp
ds
pushf
pop
dec
orl
cmp
mov
xorl
xor
and
cmp
jo
and
mov
cwtl
adc
les
or
mov
andl
fnclex
sub
sub
dec
jnp
fcoms
push
cmpsb
bswap
sbb
sti
push
dec
mov
sbb
ljmp
xor
frstor
in
mov
lahf
cmp
pushl
mov
cmpsb
cmp
push
clc
lods
sar
mov
and
pop
mov
sahf
sbb
notl
mov
lods
push
in
subl
xor
jle
xchg
imul
pop
data16
aam
jns
sarl
and
pushf
pop
shrb
fs
dec
movsl
lods
in
test
mov
out
dec
lahf
std
push
fcoml
and
ja
das
fs
mov
lds
mov
push
inc
arpl
rclb
add
std
mov
pop
lods
xchg
cld
cwtl
or
sbb
jle
mov
pop
nop
push
mov
and
stos
movsb
cld
andnps
outsl
ja
sar
sbb
dec
cltd
xor
bound
mov
dec
cmp
fwait
insl
leave
subb
into
es
xchg
into
xchg
xchg
shll
pop
repnz
lret
call
mov
mov
jg
test
lock
fbld
jecxz
cwtl
inc
enter
scas
jnp
ja
jp
cltd
repnz
lock
jge
xchg
rolb
add
mov
sbb
addb
push
repz
aaa
fucomp
sub
aam
pop
aaa
xchg
rorb
sbb
cmpsb
data16
sub
mov
pusha
inc
lods
adc
lret
pop
pop
pop
cmp
jae
mov
push
jmp
mov
jae
and
add
rcr
adc
adc
imul
mov
flds
xor
mov
inc
pop
das
xor
addr16
shll
and
cmp
mov
jae
push
xchg
push
sahf
sub
and
dec
repz
sub
aas
sub
lret
jo
repz
and
pop
pop
stc
jecxz
mov
pop
cmpsl
jecxz
jae
test
mov
xchg
push
sub
sub
cmc
aam
ja
adc
call
into
testl
vcvtss2sd
xor
sub
xchg
sahf
mov
mov
lds
mov
mov
pushf
insl
inc
xor
stos
jge
add
inc
or
imul
push
insb
pushw
add
jmp
inc
jg,pt
lret
stos
mov
out
pushf
or
jmp
shll
or
xchg
push
jo
sahf
mov
imul
mov
imul
lret
xor
mov
outsb
sahf
out
mov
jecxz
push
int3
and
int3
xor
in
adc
nop
and
xchg
mov
xchg
out
aas
add
rorl
mov
faddl
sbb
sub
fdivrl
loope
mov
daa
fisubrs
push
inc
inc
jmp
xacquire
cmp
add
popf
jmp
je
inc
mov
cld
mov
aam
sbb
inc
fiaddl
jae
jecxz
lock
icebp
enter
xchg
mov
and
mov
aas
mov
add
add
add
jne
fildl
mov
sub
sub
ljmp
std
fwait
xor
mov
and
mov
out
xor
stos
aaa
popf
mov
rorl
lret
pushf
dec
test
dec
shrl
call
pop
fnstcw
iret
outsl
insl
movsl
xor
stc
in
testb
or
int3
ja
mov
pop
movsb
rcl
push
ret
test
jmp
and
fcmovne
pop
cltd
in
out
adc
jo
enter
add
loop
pop
push
jae
mov
jge
repz
lret
sti
pop
gs
xor
cmp
es
dec
ror
mov
cld
fisttpl
cs
pop
dec
xchg
sbb
cmp
imul
adc
jno
or
bound
pop
test
jmp
pop
push
xchg
repz
and
int
lahf
les
jl
aaa
push
or
stos
push
and
inc
cld
andb
in
mov
mov
xor
push
xchg
stos
dec
fsubrs
jg
addr16
mov
jbe
add
scas
cmp
inc
repnz
fdivl
in
jg
mov
mov
or
adc
sbb
rol
push
cs
sub
cwtl
or
ljmp
je
shrb
jg
popa
fwait
gs
xor
cmpsb
aas
dec
xlat
gs
sub
pop
enter
mov
mov
pop
mov
push
mov
and
repz
mov
xchg
sti
dec
out
out
lock
repz
imul
xor
test
cmp
test
push
cmp
repnz
add
mov
jo
mov
mov
mov
std
addl
cmp
sbb
stos
sub
jg
push
mov
cmpsb
jle
enter
xlat
rorl
inc
shll
lods
fidivs
test
and
pop
xchg
push
add
jmp
jo
add
pop
jecxz
xlat
lods
aaa
push
int
lcall
mov
movsl
pop
jle
mov
test
pushf
mov
pop
lods
inc
inc
or
out
sbb
xchg
ljmp
sub
ret
lock
cld
push
push
std
dec
sbb
nop
sub
ss
insb
push
add
dec
jecxz
lods
out
xchg
mov
in
jecxz
pop
repnz
call
xor
inc
jo
clc
movsl
mov
repnz
push
out
adcb
scas
adc
in
xchg
ror
hlt
ljmp
outsb
clc
jle
lock
ds
dec
adc
lods
test
ds
shrl
and
loope
adc
push
shlb
mov
je
jns
fidivrs
pop
push
xor
add
sub
ss
and
sub
loope
loope
xor
inc
xchg
cwtl
enter
push
xor
inc
jno
sbb
push
in
imul
dec
jle
lcall
arpl
stc
enter
xchg
in
hlt
pusha
mov
and
or
mov
shrl
mov
dec
mov
enter
repnz
out
mov
push
inc
push
jns
repz
lock
aam
add
clc
cmp
testb
mov
lretw
inc
aad
xchg
das
popa
pop
adc
push
jnp
pop
mov
lea
jnp
gs
xor
xchg
mov
inc
jl
shll
lahf
add
scas
loopne
mov
pop
in
sahf
cwtl
fcmovnb
push
sub
cli
dec
sub
sub
add
sbb
out
iret
xchg
xchg
jnp
adc
aam
xchg
push
je
call
jmp
fmuls
fwait
imul
hlt
loopne
jle
cmp
das
lea
into
mov
cmc
out
orb
aad
push
mov
inc
aaa
enter
sbb
xor
xor
cmpsl
insb
or
or
jge
mov
push
gs
sbb
loope
js
mov
adc
ficoms
xchg
xor
test
sub
xor
pop
das
lret
fcomps
test
out
xor
sbb
pop
mov
data16
add
andb
jge
mov
ret
pop
movsb
jns
mov
sub
cmp
xlat
test
int
aaa
stos
jne
pop
pop
xchg
push
lcall
cld
scas
movsb
dec
pushf
loopne
or
ja
adc
pop
leave
ret
sbb
pop
push
pop
push
int
or
shrb
pop
adcb
or
adc
xchg
cmc
xorl
cld
aas
out
daa
push
adc
rcll
push
jge
mov
mov
bound
fists
iret
fdivl
dec
mov
jo
mov
stc
int3
clc
sbb
stos
or
movsl
sti
lcall
push
jecxz
pop
imul
and
add
scas
dec
cmp
ss
or
sub
filds
sbb
rcl
adc
mov
cmp
adc
gs
sahf
pop
popa
imul
mov
mov
dec
sbb
jg
xlat
mov
adc
pop
xor
dec
add
push
clc
lahf
lahf
test
dec
add
lret
out
imul
cmp
loopne
out
cmc
jp
iret
lods
and
mov
dec
icebp
pop
insl
fiadds
cmp
ss
pop
dec
cmp
inc
lods
adc
out
push
fmull
pop
xorb
mov
icebp
ljmp
add
and
iret
aaa
fadd
in
out
jecxz
push
test
xchg
cltd
mov
aas
or
cmp
xor
push
orb
enter
push
out
std
cmp
mov
inc
sbb
xchg
push
cmp
mov
add
pop
inc
fcmovne
jge,pn
leave
leave
test
in
mov
jo
nop
leave
fwait
adc
add
fnstenv
icebp
cmp
sub
and
aad
pop
popf
mov
js
cmp
rclb
icebp
fildl
nop
cmc
xor
xchg
pop
xchg
push
jns
popa
mov
mov
sti
xchg
pop
sti
loopne
in
add
mov
stc
ja
push
imul
stos
bound
lds
jne
cmp
jo
xchg
mov
fstpl
mov
mov
push
sbb
pop
out
dec
push
adc
fidivrl
mov
aad
push
nop
fists
in
xlat
pop
nop
popf
jns
jl
sbb
js
adc
sub
push
xor
pop
mov
xchg
push
leave
jp
ret
jmp
mov
lahf
jecxz
fwait
outsl
or
xchg
cs
test
gs
fidivrs
dec
pop
popf
arpl
mov
aas
repz
mov
lds
out
jmp
andl
call
int
bound
dec
pop
jecxz
mov
pop
jbe
imul
sub
rcl
inc
cmp
sbb
lret
nop
push
int3
popa
mov
les
xor
cmp
icebp
push
xchg
lret
out
xchg
mov
cmpb
adc
push
mov
jae
xchg
cmpsb
dec
pop
in
push
out
dec
aaa
jbe
push
cs
aaa
mov
mov
int
loopne
leave
xchg
xor
push
sub
fildll
insb
adc
and
adc
mov
cli
mov
adc
stos
xchg
adc
mov
dec
in
adc
xlat
push
in
mov
imul
pop
sub
popa
repz
sti
fstps
mov
mov
or
sahf
dec
cmp
push
addr16
dec
aam
ja
sbb
adc
clc
jge
ljmp
fnstsw
scas
stc
out
adc
mov
mov
xchg
push
mov
or
movsb
xchg
scas
les
cmpsb
insb
push
aaa
sbb
scas
push
jl
jecxz
xchg
mov
xor
mov
shr
je
imul
jmp
pop
dec
jno
dec
pop
loopne
inc
leave
mov
xlat
inc
and
movsb
shl
psrld
in
addl
cmpsb
jbe
rorl
dec
mov
fucom
adc
push
sub
repnz
mov
iret
js
je
sbb
in
arpl
add
push
test
sarb
in
pop
es
xor
jmp
sbb
sbb
vzeroall
sub
stos
cmpl
ja
jae
mov
mov
mov
pop
jg
in
fldl
adc
jnp
fldl
stc
inc
sub
daa
mov
out
test
jg
loopne
mov
xor
fnstenv
jl
test
ljmp
sub
inc
pop
xchg
sbb
jne
bound
test
lret
lock
adc
pop
rcrb
push
push
pop
inc
xor
add
das
ja
mov
sbb
jo
imul
mov
push
popf
int
ds
cmp
or
lds
or
movsl
adc
into
adc
cltd
sub
mov
or
add
adc
and
test
xlat
adc
push
cwtl
shrb
imul
frndint
cmc
aas
and
aad
mov
out
movsl
inc
xchg
lahf
dec
fxrstor
adc
adc
xor
data16
mov
cmpsb
loop
xor
mov
sqrtps
int3
hlt
ss
ds
daa
imul
in
call
mov
jb
enter
repnz
xchg
jns
mov
adc
dec
push
cmpsl
enter
std
cmp
aas
lret
loopne
leave
fimuls
pop
and
test
cltd
fimull
outsb
movsb
sub
pop
rcrl
sub
push
inc
iret
ret
sahf
or
inc
xchg
xor
add
or
xchg
add
test
hlt
sub
insb
in
jne
imul
test
push
rolb
or
movsl
push
pop
and
mov
xchg
pop
add
jbe
les
negl
iret
mov
add
sbb
setl
sub
cmp
pushf
mov
insl
ss
push
lfs
call
movsl
jl
sub
sub
and
mov
cwtl
push
and
leave
or
imul
cmp
add
rorl
sub
in
imul
out
cwtl
adc
or
xlat
sub
in
aas
or
insl
shlb
les
mov
sub
sbb
pop
nop
mov
sub
push
mov
or
repz
in
movsl
ljmp
push
inc
in
sahf
repnz
in
lods
jle
cmp
mov
mov
cmpsb
dec
sub
jnp
clc
jg
sbb
dec
arpl
popa
jo
mov
mov
mov
dec
dec
shll
scas
test
mov
cli
into
xchg
cmp
push
push
pop
fisttpl
push
je
push
sbb
ret
leave
or
sub
cltd
lret
out
adc
cmpb
mov
bnd
dec
inc
ret
ja
in
mov
jge
push
mov
into
push
xchg
int
movsb
xchg
in
nop
pop
popf
dec
addl
aaa
jo
xchg
nop
jmp
out
leave
iret
jnp
mov
jg
out
xchg
adc
mov
mov
lcall
dec
dec
mov
push
imul
rcrb
cltd
cmp
fmuls
stos
mov
shlb
cmc
xor
dec
or
xchg
mov
fisubrl
lods
pop
xchg
mov
inc
and
mov
mov
mov
add
mov
arpl
jbe
mov
in
xchg
xor
aaa
cmp
add
jg
enter
aad
and
popf
lea
test
pop
jecxz
mov
sub
aaa
inc
cli
push
fwait
sub
mov
or
or
shrl
cmp
test
and
jp
jae
imul
inc
inc
and
mulps
inc
hlt
loop
fwait
jnp
push
rcr
push
stos
sub
ljmp
and
mov
push
mov
jge
out
std
jb
add
sbb
dec
jns
sbb
stos
mov
push
addr16
les
mov
xor
sub
ds
jp
push
dec
dec
jo
fwait
or
cli
movsb
fisubrs
ds
sub
fnstenv
jno
jb
dec
int
sbbb
inc
mov
and
fwait
mov
add
mov
cs
pop
loop
xor
push
adc
dec
inc
inc
out
cmp
data16
aam
xchg
sahf
sub
cmpsl
or
mov
mov
mov
sub
inc
cmp
pop
popf
ds
xchg
mov
or
movsl
mov
pop
fbld
loopne
sub
jbe
repz
test
stos
mov
scas
negb
inc
ret
lods
daa
cmp
xchg
sub
adcb
xor
xchg
add
inc
test
stos
addr16
pushf
dec
jge
and
cmp
mov
jle
pop
call
vphadduwd
cmp
aam
int3
arpl
sub
cmp
mov
cmpsl
mov
push
test
ljmp
pusha
rorl
inc
in
add
add
push
cmp
dec
jae
sahf
cwtl
jle
cmp
mov
cmp
mov
inc
pop
mov
mov
push
imul
pop
lahf
out
xchg
inc
add
jns
les
not
pop
pop
inc
js,pt
imul
mov
or
call
mov
inc
inc
mov
mov
arpl
lret
pop
inc
lea
rorl
push
push
in
out
jnp
dec
xor
mov
and
jmp
jnp
addr16
xor
fsubr
idivb
cmpsl
inc
lods
xchg
fcomip
movsb
movsl
in
sbb
fdivrl
incl
cmc
andl
pop
mov
sub
sub
pop
sbb
sub
ffreep
inc
test
pop
addb
sub
xchg
stos
enter
cmp
mov
pop
inc
cmp
mov
testl
and
out
jnp
pop
jg
scas
sbb
push
or
dec
pop
xor
pop
fildll
out
jle
out
pop
clc
pop
sarb
add
pusha
pop
and
sbb
inc
lock
movsl
sahf
adc
fcomip
imul
lods
or
mov
xor
mov
and
mov
popa
pushf
dec
or
dec
cltd
lret
sbb
shr
inc
mov
loope
or
sbb
pop
dec
aam
int3
std
fdivrl
push
mov
scas
inc
pop
pop
sarb
dec
push
es
adc
movups
outsl
add
adc
pusha
pop
mov
pop
mov
in
jecxz
and
aaa
mov
jl
or
jp
push
int
mov
sub
push
mov
movsl
hlt
adc
sub
push
int3
jbe
mov
leave
mov
xchg
jp
iret
and
int3
icebp
imulb
shll
shlb
pusha
adcb
stos
inc
aas
cmpsb
aam
in
ret
or
bound
jg
xor
cmpb
mov
xor
xor
push
and
push
fistpl
mov
cmc
cmp
push
dec
fcoms
outsb
jp
or
jle
mul
dec
icebp
xchg
test
pop
mov
loopne
or
imul
push
int3
jno
test
mov
push
push
cmp
roll
in
xchg
cli
es
popf
inc
push
mov
sub
adc
insl
xchg
push
pusha
insb
pop
clc
lret
inc
inc
ret
sub
leave
cltd
int3
std
scas
fists
in
addr16
xchg
cmp
xchg
aad
jno
popf
xchg
es
stc
repnz
fldcw
cs
jmp
add
clc
push
sarb
mov
mov
mov
mov
xchg
jl
imul
adc
xor
jne
arpl
pop
lods
mov
insb
mov
add
push
loopne
pop
into
cmpsb
jle
inc
push
sub
out
cmp
les
push
ficoml
int3
push
mov
push
push
jae
add
push
stos
mov
test
inc
pop
cmpsb
push
stos
inc
cli
push
mov
ljmp
mov
int3
xlat
hlt
mov
out
out
outsb
std
jmp
mov
inc
inc
xchg
mov
daa
mov
enter
xchg
dec
roll
es
inc
mov
cmp
jns
stc
ret
aad
jmp
cmpsl
dec
push
clc
push
and
mov
fwait
or
jnp
cmpsl
inc
jo
jl
les
aad
ret
mov
push
in
into
call
in
test
add
out
xor
clc
imul
push
mov
xor
imul
call
mov
jae
adc
jnp
hlt
test
xor
insl
in
mov
test
inc
mov
add
lock
inc
rclb
mov
push
ret
dec
out
xchg
es
addb
push
or
cmp
lcall
add
ja
fimuls
sub
pusha
pushf
stos
test
pop
add
cwtl
xor
push
mov
adc
cld
repnz
mov
cmpsb
push
sbb
addr16
xor
insb
orb
ljmp
subb
iret
jno
dec
stc
call
mov
adc
mov
adc
daa
pop
xchg
mov
sub
test
xchg
jbe
sti
jae
xchg
adc
cmp
test
fidivs
add
ds
dec
mov
cli
imul
nop
xchg
mov
add
rorl
inc
icebp
gs
cli
inc
cmp
mov
dec
leave
mov
les
aas
insb
pop
insb
jle
cmp
rcrb
out
adc
mov
in
adc
call
fisttpll
jbe
sbb
xchg
ret
sub
es
dec
dec
jp
sub
sti
cwtl
cli
add
mov
dec
or
add
les
imul
popa
jecxz
test
pop
cmp
pop
lret
jle
jb
ljmp
fisttpll
add
dec
loop
jb
cli
dec
xchg
pop
test
incb
xchg
aas
in
scas
mov
jnp
pop
cmp
mov
stos
cmp
push
jae
inc
jo
jae
fwait
addr16
sbb
inc
or
imul
stos
jge
out
pop
xor
jae
mov
sub
adc
adc
add
sahf
dec
jmp
add
mov
sub
xor
adc
sbb
popa
addr16
int
mov
pop
jmp
mov
sub
cmp
in
cltd
mov
ret
movl
cmpsb
repnz
adc
sub
adc
inc
xor
popf
rorb
je
stos
mov
lods
arpl
and
rolb
sbb
add
pop
sub
xchg
jb
icebp
add
jo
daa
jmp
push
popa
cld
fisubl
inc
loopne
sbbl
movb
xor
inc
in
mov
add
cli
shll
inc
pop
jecxz
ret
scas
fidivrl
mov
push
jge
ret
xchg
dec
aad
mov
or
rol
cwtl
pop
push
pushl
push
fcmovnb
or
sub
mov
clc
cmp
int
push
test
fs
mov
xlat
jle
push
mov
dec
push
cli
inc
push
mov
fsubp
push
cmc
mov
fcmovnbe
sub
cmp
push
mov
jnp
lock
push
jb
adc
xor
call
adc
lds
ljmp
sti
movsl
stos
mov
adc
pop
mov
cmovns
andb
xchg
loopne
dec
dec
cmpsl
inc
pinsrw
in
inc
int3
push
push
add
jnp
nop
mov
jo
call
js
test
push
mov
inc
jnp
repnz
pop
push
sar
and
arpl
pusha
ds
sbb
push
ffree
fcmovne
lcall
mov
fsubr
shrb
sub
mov
sbb
aas
out
data16
adc
push
repz
or
xor
and
inc
movsb
outsb
fiadds
pop
sbb
movsl
shr
cmp
push
sub
sub
arpl
cltd
and
mov
adc
cmpsl
lock
aas
daa
mov
xor
outsl
in
inc
std
ret
cmp
mov
int
xchg
jecxz
adc
outsl
pop
sbb
out
stc
inc
cmc
lahf
int
sbb
insb
ficoml
repz
inc
push
ss
movsb
test
push
ds
add
adc
add
mov
insb
movsb
pop
lret
xor
push
stc
je
aas
das
bound
test
mov
aaa
aaa
push
aas
nop
mov
xchg
push
ja
test
outsl
lods
xor
or
adc
mov
cmp
push
in
cmp
setnp
lds
insb
add
mov
lods
inc
push
mov
ljmp
cli
inc
pop
out
xor
push
jp
jl
sub
jb
cmc
push
addr16
ja
cmpl
dec
pop
xchg
gs
pop
fldcw
stc
in
iret
pop
movsb
mov
jno
mov
mov
aaa
subl
jl
inc
mov
aas
push
mov
cltd
stos
insl
xchg
mov
pop
jge
fstl
adc
mov
jo
add
popa
mov
xchg
fdivs
or
xchg
pop
test
pop
jae
pop
bound
fs
lds
dec
stc
mov
icebp
push
sub
nop
test
mov
mov
mov
fwait
ds
cld
mov
adc
push
xchg
xchg
jmp
jne
cld
mov
and
cmpsb
aam
out
jb
sub
xor
ret
jns
in
inc
cmp
xchg
mov
mov
dec
nop
loop
jo
adc
mull
lock
pop
fcoms
mov
js
fcoml
clc
cmpsb
in
xchg
and
push
and
das
xchg
sub
fisubrs
dec
idivl
cmp
fistpll
call
cmp
mov
cli
addl
adc
mov
movsl
ret
fldl
adc
xchg
sbb
jbe
push
dec
fcomps
push
sbb
stc
xchg
cwtl
stos
mov
mull
adc
sbb
in
mov
addr16
aad
dec
lret
stos
push
pop
icebp
or
icebp
push
push
xlat
mov
inc
xlat
xchg
adc
popa
popa
scas
int3
mov
fcomps
loop
cmp
adc
mov
outsb
push
pop
cmp
jl
cmp
dec
push
push
pop
je
mov
ds
xchg
gs
int3
cmpl
mov
add
jle
in
ss
jns
lds
jo
cmp
push
pop
sub
add
xchg
mov
pusha
cs
xor
pop
pop
bsf
cmp
jge
xorl
iret
inc
clc
cld
fwait
xchg
das
mov
and
stos
fidivrs
push
adc
shrl
push
iret
jne
movsb
fistps
mov
pushf
or
dec
xchg
imul
scas
cmp
sbb
and
fbld
jl
fwait
loop
inc
mov
out
das
das
dec
or
aad
pop
aas
jo
sbb
rolb
cltd
pushf
xor
popa
cmp
fisttpl
fidivrs
pusha
cmp
mov
jne
js
ljmp
push
and
mov
xchg
test
mov
mov
sahf
jle
dec
add
call
mov
sbb
dec
clc
adc
and
in
push
test
clc
dec
dec
add
adc
push
push
scas
popf
lret
inc
inc
mov
cmp
or
ss
xor
nop
dec
cmpsb
adc
and
xchg
stos
lret
jo
popl
mov
das
and
cmc
daa
dec
add
inc
mov
lret
push
xchg
jle
inc
or
dec
xor
xchg
xchg
pop
or
add
adcb
stos
xchg
cmp
jae
xchg
repnz
adc
jmp
and
adc
push
and
js
imul
mov
call
std
and
pop
icebp
xchg
jp
mov
mov
das
jmp
out
add
mov
push
loopne
add
mov
ljmp
int3
sub
das
mov
into
int
inc
xor
hlt
rorl
and
dec
movsb
int
mov
cli
mov
sub
in
xchg
gs
out
cs
fmuls
ja
in
lret
or
test
stc
int
lahf
sti
and
stc
icebp
pop
mov
rcll
xor
repz
pop
inc
and
add
inc
cmc
inc
pop
sbb
faddl
add
jo
push
and
fldl
aas
mov
mov
fwait
bound
cli
jl
cmp
mov
in
fiadds
mov
lock
lea
jnp
dec
fiadds
fucom
push
scas
sti
adc
mov
mov
sbb
pop
adc
lods
pop
enter
insl
lds
cmp
mov
cmp
bound
or
ficoml
xchg
ret
faddl
inc
add
lret
jmp
adc
loopne
push
fdivl
or
dec
mov
and
repnz
test
test
jae
imul
jge
hlt
gs
mov
stos
mov
mov
les
push
xor
addr16
adc
icebp
jae
or
jns
sti
inc
sbb
inc
pop
clc
adc
xchg
xlat
in
mov
les
sbb
xor
and
sub
lea
bound
mov
insl
testl
loopne
enter
mov
pusha
xor
pop
or
add
addr16
push
fdivrs
movb
lea
fsubs
pop
xor
fninit
pop
scas
xor
sbb
push
adc
xchg
cmpsb
inc
xchg
sub
push
xchg
mov
jl
imul
mov
inc
inc
mov
imul
fldcw
test
dec
mov
mov
sub
test
push
adc
andb
mov
sbb
sbb
ja
add
or
add
dec
lret
mov
out
outsl
add
scas
xor
pop
cmp
add
adc
sub
iret
pop
mov
xchg
dec
pop
sub
push
adc
aaa
lock
push
in
sbb
dec
xchg
ret
test
mov
jns
aad
cmp
and
dec
adcl
cmpsb
adc
arpl
orb
loope
push
mov
push
lcall
mov
mov
xchg
imul
int
iret
xor
push
sub
mov
jg
fstpt
cmp
jmp
sub
fcompl
clc
inc
mov
adc
xchg
xchg
das
je
mov
int3
sbb
jp
mov
outsl
test
test
cmpb
dec
sub
xchg
cs
outsb
sbb
sbb
xchg
xlat
mov
mov
xchg
pop
cmp
roll
sahf
nop
sahf
cmp
cmp
imul
lock
inc
jle
push
jo
dec
mov
cs
pop
ret
add
test
daa
add
mov
ret
xchg
lods
or
cmpsb
popa
mov
cli
sbb
iret
popf
or
or
push
push
stos
inc
icebp
cmc
fcomip
mov
jns
and
into
out
mov
test
or
pop
lds
fstpt
lret
sub
repz
adc
cmp
and
out
subb
push
cmp
sub
outsb
data16
sub
pop
rolb
sti
dec
mov
jns
clc
mov
int3
jnp
sub
or
or
cs
and
divb
iret
enter
or
pushf
std
mov
dec
jle
pop
rolb
iret
fisubrl
andl
dec
aas
ficompl
cmpsl
out
inc
imul
sbb
js
cmp
fildl
mov
out
and
rcrl
inc
fisubs
int3
xchg
jmp
repnz
jbe
lds
cmp
fisubl
push
jge
popa
and
testb
cmpsl
adc
test
addr16
jae
repnz
out
cmpsb
pop
xchg
lods
movsl
xlat
sub
popa
in
pushf
xchg
into
sub
push
test
push
or
pop
push
cmpsb
sbb
jne
ja
sub
insb
lea
xchg
leave
popa
aad
and
outsb
enter
das
jmp
jl
sbb
lret
jge
popa
inc
push
les
pusha
adc
mov
lds
add
mov
lcall
outsb
and
test
sub
ret
insl
push
pop
inc
pop
fdivrs
pop
sahf
jp
xchg
xchg
mov
outsb
or
sub
or
jmp
jmp
lcall
xchg
dec
pop
xchg
imul
xchg
stos
push
out
fisubrs
outsb
jecxz
shrl
or
inc
or
xlat
insl
imul
pop
mov
js
lods
push
in
pop
sub
sarl
ss
add
xchg
push
push
scas
ja
sbb
lds
pop
pop
mov
adc
ja
jmp
xlat
inc
rclb
add
mov
fidivl
sub
outsb
aam
mov
mov
inc
sbb
or
loope
push
scas
dec
mov
inc
sbb
or
cmpsl
dec
repnz
fs
dec
jbe
inc
mov
inc
cmp
cmpsb
subl
mul
jecxz
pop
jp
mov
idivb
call
test
adc
fstpt
mov
shlb
lret
sub
sarl
mov
and
cmp
addr16
cmpsb
adc
mov
outsl
scas
jg
cmpsl
lret
mov
iret
sbb
jle
sub
sub
pop
je
aaa
cmp
cmp
lea
stos
cmp
leave
sbb
push
or
mov
jnp
out
lahf
iret
imul
sbb
outsb
sub
lds
bswap
dec
inc
into
xor
test
scas
cmpsb
ret
in
aam
pop
jns
lds
ja
iret
in
xchg
add
add
negl
xchg
mov
stos
popf
aas
fs
out
les
xchg
push
shll
xchg
das
inc
or
arpl
inc
sub
outsb
add
mov
cmp
scas
ret
sbb
xchg
mov
inc
dec
and
out
dec
dec
sbb
je
cmp
pop
fwait
push
sub
mov
bound
call
jmp
popf
jnp
mov
out
test
imul
fisubs
repz
inc
cwtl
repnz
adc
sub
dec
xchg
in
sbb
test
fadds
xor
test
cmp
incb
add
mov
mov
ljmp
xor
mov
aad
call
jns
inc
enter
sbb
daa
sub
mov
dec
mov
lods
inc
sbb
mov
cltd
gs
and
nop
ds
in
scas
or
pop
jle
es
mov
leave
mov
sbb
fwait
pop
pop
dec
jmp
dec
outsl
imul
xchg
stos
enter
pusha
out
push
mov
movsb
loope
aam
cmp
mov
pushf
pop
les
cmp
fdivrl
repnz
shr
jno
pushf
clc
aad
pushf
or
sahf
out
xchg
cmpsb
movsl
repz
push
repnz
xor
stos
inc
sbb
adc
mov
cmp
adc
mov
push
adc
mov
shrb
sbbl
or
popl
fidivs
mov
xor
mov
mov
mov
rorb
jmp
pop
xor
dec
and
lahf
sub
imul
cli
pop
data16
mov
in
shl
adc
inc
fbld
out
cmp
jne
mov
and
jbe
add
pop
and
xchg
jl
stos
push
mov
jmp
dec
adc
sti
jge
lock
aam
jle
pop
inc
mov
dec
leave
jg
push
cwtl
aaa
mov
les
lret
push
pop
push
jg
lds
cltd
mov
shr
jl
inc
push
jbe
pop
icebp
push
mov
dec
xchg
ja
and
xor
loopne
push
push
imul
jne
adc
xchg
pop
cmpsl
fdivr
mov
and
jb
jb
pushf
sbb
or
pop
je
add
and
scas
sbb
les
enter
pop
les
ljmp
lcall
push
outsb
ret
xor
fidivs
arpl
xchg
mov
cmp
inc
and
shrb
rclb
sub
icebp
int3
jbe
test
stc
aaa
es
xchg
test
xor
pop
ret
ljmp
cs
sub
push
int3
ret
sub
jbe
popf
add
xchg
lock
mov
andb
add
out
mov
imul
mov
rolb
outsl
mov
jle
sbb
xchg
pop
insb
movb
xor
xlat
int
mov
ret
stos
mov
mov
sub
lods
cmpsl
sub
test
mov
rcrl
in
cwtl
or
pop
dec
mov
cli
mov
cmpsl
outsb
cmp
add
movb
sbb
jae
dec
mov
popa
lret
cmp
dec
data16
aam
loope
dec
push
movsl
jecxz
pop
iret
xchg
push
lahf
add
cld
jne
or
stc
addb
jnp
jle
xlat
fs
jp
or
ret
icebp
xchg
std
xor
jge
add
push
and
inc
insb
push
mov
push
mov
cmp
lock
inc
clc
mov
push
imul
fmull
jecxz
xor
mov
ja
sbb
adc
dec
ljmp
dec
fstps
shl
divb
push
loop
xor
push
add
das
jge
mov
adc
icebp
ret
call
cmp
cmc
push
sbb
adc
or
jne
insb
jmp
mov
int3
sub
xchg
jno
add
addr16
imul
iret
xor
jmp
ss
lret
sahf
mov
out
fs
aam
sahf
dec
sti
cmp
adc
mov
hlt
cmpl
pop
xor
arpl
xchg
addr16
mov
pop
jle
frstor
or
les
in
add
adc
enter
pop
orl
jg
xchg
and
fldenv
cmp
push
clc
insb
adc
xchg
insb
data16
fs
mov
pop
push
test
xchg
dec
inc
cmp
leave
and
test
enter
repz
fsubrs
les
or
das
xchg
arpl
div
pop
sbb
cmp
enter
movsl
jecxz
cmp
sbb
out
ja
out
ret
outsl
sti
decl
mov
scas
cmpsl
rorb
push
xor
je
incl
fimull
add
sbb
popa
daa
imul
add
outsb
lcall
fwait
icebp
mov
dec
mov
cmpsb
mov
xchg
adc
xor
testl
shll
dec
add
rcll
iret
jne
adc
pushf
out
inc
xor
xchg
dec
call
fwait
cltd
jo
mov
add
imul
mov
pop
std
fsubs
sti
push
movsl
xchg
mov
adc
mov
cmc
add
adc
jns
inc
lahf
and
pop
arpl
push
shll
movsl
sbbl
das
arpl
mov
mov
nop
jno
sub
loop
ja
xlat
test
fsubrl
fistps
mov
mov
lock
into
mov
decl
shll
insl
into
sbb
movsl
and
jns
leave
ds
mov
cmc
mov
mov
ss
out
adc
or
arpl
xchg
sbb
push
mov
gs
dec
clc
sbb
hlt
sbb
lret
rcrl
adc
mov
scas
aas
mov
daa
adc
cwtl
and
inc
xlat
out
pop
pop
fs
inc
mov
xchg
movsb
cmp
lea
addr16
mov
leave
je
in
xchg
gs
sbb
repnz
outsb
xor
std
xor
xchg
or
mov
push
or
sbb
pop
pop
jo
sub
mov
lea
into
mov
movsb
shr
or
dec
push
loop
imul
scas
or
loop
jmp
xchg
cmp
cmpsb
mov
stos
sbb
dec
sbb
add
mov
cld
outsl
ret
fidivs
and
jne
lods
mov
xchg
xchg
adcl
cwtl
xchg
rcrb
inc
fstpt
in
mov
jmp
jae
enter
scas
cmp
adc
cmp
push
mov
aad
insb
add
and
gs
pop
aas
xchg
and
das
xchg
les
inc
add
mulb
rclb
cmpsl
xor
loopne
into
mov
add
lock
adc
enter
pop
sbb
lcall
int3
loopne
jb
push
xor
mov
xor
push
lods
dec
sub
jmp
push
addl
add
push
fs
inc
in
icebp
fbld
aas
inc
test
loopne
jnp
sahf
xor
inc
andl
stc
and
gs
jae
xchg
mov
mov
aaa
xorl
insl
xor
add
xchg
pop
mov
mov
sbb
jne
das
sbb
mov
xor
inc
adc
aas
sahf
jge
push
pushf
aas
or
pop
jp
inc
insl
push
lahf
push
adc
bound
testb
ljmp
test
jl
pop
inc
sti
mov
call
xor
test
std
insl
lret
outsb
addr16
lods
dec
mov
ret
push
mov
leave
xchg
gs
insb
sarb
fsubs
adc
aad
push
out
fadds
pop
cli
lods
into
dec
jnp
and
pusha
sbb
inc
xlat
pop
sbb
sub
jp
arpl
daa
in
push
fisttps
jno
add
inc
pop
test
inc
mov
pop
adc
ja
lahf
cmpsb
sbb
mov
xlat
cli
aad
das
sub
xchg
push
insb
sahf
sub
pop
lods
in
cld
adc
int
inc
leave
in
mov
jns
pop
mov
cmp
pop
cmp
mov
jo
add
inc
xchg
or
sub
jecxz
std
pop
sbb
sbb
mov
jnp
sub
outsb
jge
adc
mov
inc
push
in
jnp
hlt
test
js
xor
dec
and
int
push
punpcklwd
in
jae
dec
outsl
xorb
xor
inc
cmc
hlt
pop
add
mov
es
adcl
or
fsubl
cmp
int3
mov
mov
clc
dec
jns
sbb
xchg
jbe
ret
lahf
cli
jmp
xor
sbb
sbb
mov
sbb
push
xchg
inc
int
cmp
inc
stos
xor
dec
jnp
push
stos
sub
pop
fldl
bnd
mov
sub
dec
lcall
into
push
xor
notl
test
mov
dec
mov
push
xorb
push
pop
rorb
push
or
adc
hlt
arpl
clc
inc
pop
outsl
pop
lea
adc
test
pop
xchg
push
dec
xchg
cs
push
leave
and
stos
lret
sbb
sbbb
rorb
pop
cmpl
or
ljmp
dec
push
lret
pop
cmp
adc
xchg
gs
jle
inc
lahf
ss
cld
int3
cmp
iret
xor
push
cs
and
call
sub
cmp
jb
movsl
in
jmp
jnp
daa
adc
mov
mov
pushf
jle
in
push
jnp
jl
hlt
ret
add
inc
cmc
aas
adc
mov
xchg
jge
xchg
sub
sbb
add
sub
out
or
loope
in
pop
in
std
sub
add
imul
pop
jg
das
mov
sub
lcall
adc
cmpsl
iret
xchg
cld
cmp
xor
inc
and
lods
outsl
imul
rcrl
mov
test
jg
addb
push
ret
lsl
insl
arpl
leave
and
popa
dec
mul
xchg
lock
xchg
int3
jnp
jne
jecxz
neg
mov
shll
jl
clc
inc
xchg
fs
outsb
or
inc
dec
or
pop
cmp
nop
pusha
push
std
mov
leave
dec
sub
push
xchg
xchg
call
push
lods
lea
lock
ret
sub
jecxz
cmp
inc
push
dec
outsb
mov
fwait
add
pop
aas
lahf
shl
push
sub
mov
movsl
and
lret
jl
aam
data16
std
jecxz
dec
clc
jo
xor
cmp
stc
sub
call
arpl
add
jae
jge
loopne
xchg
movsl
jp
mov
add
clc
sbb
call
inc
mov
fsubrl
cld
lret
sbb
xor
xor
mov
cmp
xchg
adc
mov
data16
inc
push
push
cli
dec
push
stos
push
xlat
sahf
or
sbb
mov
sahf
pop
out
ror
push
call
and
xchg
jmp
jnp
mov
xor
cli
dec
and
into
mov
xchg
sbb
movb
push
test
push
lea
push
and
dec
ret
into
mov
lahf
push
in
jp
sub
sbb
fstpl
inc
movsl
shlb
int
sub
jne
xchg
test
jge
imul
or
pop
arpl
insb
insl
mov
push
cmpsb
inc
loop
add
or
jbe
or
test
bound
mov
add
scas
loop
adc
xchg
stc
stc
cld
ds
test
xchg
or
ja
mov
jb
mov
mov
or
xor
scas
icebp
xor
cmp
jb
aaa
or
sahf
dec
pop
inc
test
iret
ja
dec
addr16
pop
dec
jb
inc
mov
nop
xor
pop
int
pop
xchg
adc
sub
sbb
sub
fsubs
push
xchg
adc
inc
mov
sub
nop
pop
fisttpl
stos
sbb
jne
std
jle
pop
sahf
jmp
sbb
xor
sub
jbe
stos
stc
mov
adc
adc
jg
mov
jno
jmp
jae
lea
mov
inc
test
sti
lret
push
adc
test
lret
adcl
adc
ror
pop
push
mov
inc
push
jmp
dec
dec
imul
mov
test
pop
mov
push
enter
daa
cmpsb
or
dec
cmp
lret
mov
inc
mov
jecxz
fst
enter
add
push
out
sti
adc
jbe
xor
pop
in
stos
lret
pop
adcb
fs
mov
pop
jno
and
pop
or
scas
mov
jge
sbb
mov
out
mov
and
in
fnsave
add
add
push
inc
dec
stos
pushf
pushf
daa
test
xor
dec
inc
dec
adc
punpcklbw
clc
adc
sub
cmp
iret
mov
aam
add
movsb
pop
pop
js
xor
dec
pop
mov
pop
mov
dec
and
cmp
and
clc
or
fcompl
xchg
int3
aaa
testl
fucom
or
and
test
cmp
sahf
loopne
ljmp
fisubrs
in
dec
push
jb
mov
xor
mov
fs
add
sbb
inc
lds
pusha
icebp
test
dec
in
test
jbe
xorl
mov
add
mov
insb
mov
fsts
inc
repnz
fsubrs
ja
out
inc
lock
xchg
xor
pop
cld
xor
add
test
lahf
test
lea
pushf
or
clc
sbb
cmp
shll
xor
push
xor
jge
or
fwait
push
ficomps
xlat
es
sbb
test
bound
in
push
movsb
int3
arpl
mov
pop
ficomps
lods
es
test
adc
clc
movsl
les
jae
lods
pop
outsb
roll
mov
scas
add
pop
fcomps
xor
pop
ror
repnz
add
jno
dec
dec
stos
adc
or
sahf
aam
mov
or
jg
mov
xchg
adc
jecxz
addr16
sbb
add
and
xor
mov
lcall
iret
push
dec
bnd
fldl
push
stos
fs
cmc
sub
mov
push
shlb
lcall
ss
pushf
mov
cmp
into
adc
push
cmp
dec
pop
pop
xchg
xlat
dec
sar
mov
mov
negb
jg
and
inc
push
mov
inc
pop
and
imul
or
cmp
ja
test
mov
int
std
add
xor
fmuls
loop
add
icebp
xor
cmp
rolb
sbb
xor
xchg
loop
dec
and
subb
mov
imul
sub
rol
sahf
xor
adc
dec
push
stc
mov
inc
lcall
mov
pushf
cmp
or
mov
xchg
loopne
cld
push
adc
repz
imul
cmp
sarl
out
rcrl
inc
pop
xchg
dec
mov
mov
mov
pop
push
dec
cmpl
cwtl
add
call
insb
lods
cltd
shll
insb
sub
fnsave
mov
pop
or
cmp
mov
lods
pop
daa
sub
arpl
xchg
xor
fiadds
jp
cs
and
sub
or
adc
pop
into
fidivl
cmp
pushl
clc
dec
fwait
pop
mov
sti
das
push
mov
adc
cmp
xchg
aam
push
jmp
jb
cmc
repnz
sub
jnp
sbb
adc
les
fisubs
add
mov
fcomps
xor
jo
in
outsb
rcl
sub
cld
data16
filds
ret
pop
arpl
icebp
cwtl
testb
mov
cltd
sti
pop
repz
sub
or
push
not
mov
jns
mul
adc
pop
cmp
push
or
movsb
sbb
mov
movsl
mov
rolb
inc
test
mov
out
lahf
sbb
fwait
inc
sbb
leave
jne
xchg
and
scas
addb
xchg
gs
or
out
jmp
xlat
call
arpl
outsl
xor
mov
sub
test
scas
mov
adc
jno
les
mov
jle
or
mov
jg
aas
adc
push
stos
in
mov
addr16
js
leave
pop
cli
mov
pop
inc
cli
clc
xchg
out
xor
xor
mov
cwtl
xchg
std
mov
int3
adc
test
jno
mov
sbb
arpl
negb
add
dec
push
movsb
adc
xlat
or
dec
inc
mov
aaa
repnz
lods
fisubs
pop
jne
shll
add
std
inc
insl
dec
jns
cmp
movsl
lods
mov
adcb
xchg
int3
sbb
lahf
ja
loope
mov
pshufw
or
sbb
inc
out
mov
je
test
icebp
push
out
xlat
xchg
dec
jg
es
xlat
push
les
hlt
pop
push
test
push
cwtl
ret
xchg
inc
shrb
jno
fsubp
fisubs
sbb
dec
xchg
xor
mov
adc
mov
cwtl
push
movsl
jmp
stos
mov
fsubl
mov
inc
cmp
test
xor
xchg
mov
cmp
dec
mov
fwait
shlb
xchg
ljmp
out
sub
enter
or
pop
addr16
setle
mov
mov
xor
adc
dec
xchg
shlb
cmpsb
ja
and
push
xor
adc
push
lcall
mov
dec
mov
cmp
gs
adc
popa
shlb
fldenv
out
fiaddl
cmp
out
mov
xlat
cmpsb
inc
hlt
jns
jne
bndldx
arpl
stc
pop
push
jp
scas
push
xchg
push
cwtl
jo
fptan
sbb
sub
jae
lret
sub
popf
or
test
test
cld
popf
inc
das
sarb
cmpsl
imul
push
or
mov
mov
sub
je
jp
adc
xchg
fistl
pop
jp
out
daa
mov
xchg
jecxz
xlat
leave
movsl
or
imul
clc
add
ds
xor
xor
subl
outsl
andb
inc
push
mov
lcall
mov
xchg
xor
sahf
jmp
fisttpll
dec
sub
clc
or
push
inc
scas
shrl
sbb
lahf
add
add
jp
outsb
inc
fisubs
push
mov
push
or
inc
cmpsl
add
cwtl
test
jp
add
inc
inc
jnp
cmp
mov
fldz
or
mov
or
stos
sub
mov
cltd
and
sbbl
es
aaa
jecxz
mov
or
dec
lods
mov
lea
adc
sub
clc
outsb
repnz
xchg
sbb
mov
mov
divb
push
leave
mov
stc
mov
adc
fadd
mov
clc
aad
in
orl
push
xchg
ljmp
sbbb
hlt
jle
sub
add
cmp
xor
sbb
int3
xchg
xchg
aas
mov
test
jl
mov
adc
aad
mov
mov
adc
icebp
and
lret
pop
dec
in
xor
and
pushf
mov
or
jbe
call
sub
xchg
pop
inc
dec
stos
clc
les
jo
add
cs
int
popf
mov
aas
fcmovne
aas
mov
and
je
popf
pop
or
subl
add
add
adc
fstps
pop
xor
sarb
pop
jl
cmp
jle
push
jbe
xor
icebp
mov
sub
enter
jge
push
and
dec
outsl
mov
ljmp
out
pushf
jl
imul
xchg
gs
icebp
lods
add
scas
dec
dec
mov
inc
jo
mov
push
mov
fcompl
in
rolb
loop
in
sti
adc
cltd
cld
repnz
push
je
mov
addr16
inc
outsl
fidivs
adc
loope
fdiv
cmp
mov
add
out
pop
clc
jbe
sub
sti
adc
mov
dec
sub
jmp
xchg
cmpsl
jle
test
cmp
sub
loop
in
push
cmp
push
ds
insl
add
fistps
sub
dec
nop
mov
jmp
shl
inc
sbb
aaa
sbb
mov
les
pop
popf
ss
arpl
mov
jbe
sub
add
in
imul
ds
mov
xor
mov
frstor
mov
or
pop
insb
add
add
mov
push
mov
inc
imul
scas
popa
cmpsb
out
push
test
inc
inc
sub
into
mov
mov
xchg
arpl
ret
jns
and
inc
jns
mov
pushf
lods
mov
push
and
xlat
cld
clc
ja
lea
mov
mov
out
push
xchg
loopne
inc
mov
inc
es
add
push
or
nop
inc
sub
and
and
pop
pop
daa
lods
mov
jb
std
jb
push
cmp
loope
jns
dec
mov
jl
or
sarb
sbb
out
popf
xchg
outsl
ficoml
arpl
gs
dec
pop
imul
rcl
cltd
dec
cmpsb
aas
in
test
rcrl
inc
lret
jl
jae
add
leave
jge
sub
mov
loope
and
iret
sub
js
out
mov
dec
outsl
mov
sbb
pop
xor
xchg
mov
testb
pop
js
and
dec
jl
sbb
adc
hlt
xchg
xor
adc
or
add
idivb
jle
cmp
stc
jne
jge
pop
and
jne
mov
push
int
ja
aas
movsl
fwait
push
sub
lods
std
imul
fucomp
rcrb
sub
mov
or
push
outsb
add
cltd
pop
pop
int3
das
and
insb
pop
push
lahf
jnp
dec
xchg
jg
sub
pop
mov
mov
ja
pop
jns
and
in
xor
jne
or
or
dec
cmp
pop
or
xchg
lcall
cmp
mov
sub
rcll
push
sbb
pop
cmc
shlb
pop
or
stos
pop
and
mov
scas
movsl
nop
ret
lret
xor
jmp
test
mulb
add
fcomps
cmpsl
xor
dec
inc
mov
rclb
addb
jle
xchg
aaa
jge
xor
movsb
xor
and
out
fcomps
lds
sbb
lds
ds
sarl
or
scas
sub
clc
jle
je
aam
lahf
ljmp
dec
jg
fisubrs
push
ljmp
pusha
mov
int
lcall
fistl
jbe
xchg
lcall
and
mov
sbb
in
pop
xchg
xor
cmp
jle
push
test
jp
pop
push
pop
jl
jb
or
fistl
push
out
xchg
addr16
xor
jge
sbb
add
xchg
pop
xchg
sub
or
out
pop
jae
mov
fbstp
jnp
in
lds
sub
sub
push
fcoml
lahf
movsb
sbb
pop
cmpsl
in
cmp
push
push
add
cmp
pop
mov
adc
jmp
rorl
jecxz
jne
fldl2t
inc
pop
popa
sarl
cli
nop
pop
bound
fstpt
sahf
add
push
jmp
fs
or
mov
mov
cmp
xor
fidivrs
int
push
xor
cmp
rol
xchg
js
mov
clc
inc
adc
pop
call
pop
adc
movsb
ljmp
out
inc
sbb
mov
icebp
adc
or
imul
mov
scas
sbb
sarl
fwait
jmp
ret
gs
ja
jge
idivb
lcall
mov
and
dec
ja
fnstsw
inc
sbb
push
js
lods
push
mov
sahf
sbb
test
mov
in
pop
xchg
popa
push
mov
dec
aam
adc
test
sub
insl
fwait
in
pop
imul
ds
pushf
lods
gs
hlt
loopne
xlat
cmp
dec
in
cmp
stos
cltd
ljmp
jnp
test
insl
xchg
cmpsl
aaa
mov
mov
js
lods
lods
jg
dec
cmpsl
clc
jge
lock
lret
lock
jg
xor
sahf
cmc
jae
sbb
les
and
push
sub
ret
push
ja
sub
stc
mov
movsl
mov
ret
fcoms
outsl
mov
int3
sbb
push
cmc
xchg
xchg
xchg
mov
xchg
notl
rorb
push
pop
jg
mov
cmpsl
adc
adc
sbb
je
popl
cmc
jo
push
pop
adc
int
mov
pop
imul
es
cld
xor
jg
inc
sbb
sbb
in
dec
lock
cs
nop
cmp
fs
mov
outsb
push
xchg
sbb
rorl
pop
push
out
rcl
stc
xor
movsb
adc
adc
jge
push
jae
nop
sub
sahf
in
call
ror
or
xor
int3
mov
adc
mov
daa
jmp
fbstp
lcall
notb
jb
daa
add
dec
mov
lcall
or
leave
push
xchg
jbe
pop
adc
sub
aad
mov
mov
push
sahf
in
xchg
sub
fsts
jbe
dec
test
push
pop
push
rcll
test
xor
pusha
jae
inc
test
jg
push
nop
mov
mulb
dec
into
aas
rcrl
movsb
outsl
sbb
cli
adc
push
daa
loop
cmp
repz
daa
imul
mov
je
call
in
jno
fsubr
mov
stc
push
xchg
xchg
mov
pop
lcall
je
mov
pushf
popf
sbb
fcomps
and
mov
cli
jne
std
outsl
inc
popf
cmpb
jecxz
push
rclb
adc
mov
xchg
fimuls
sbb
dec
xchg
jle
mov
xor
cld
sub
and
mov
test
pop
add
lods
xchg
das
lds
jle
sub
push
mov
sbb
mov
xchg
cli
inc
push
jo
xor
xchg
and
dec
mov
xchg
das
push
js
push
or
lahf
rcl
filds
push
insl
loopne
dec
sbb
sbb
gs
enter
xchg
pop
lock
inc
pop
stos
insl
movsb
or
pop
fidivrl
jbe
mov
push
fs
imul
enter
inc
imul
dec
and
shl
and
call
aaa
nop
adc
insb
pusha
cs
mov
popa
pop
sub
mov
push
lahf
or
cmpsl
lods
stc
aaa
fiaddl
sub
ja
stos
int3
inc
int3
inc
daa
pop
movsl
ja
and
loopw
xchg
xchg
add
aam
cmp
lods
mov
ret
jno
xorb
inc
scas
mov
push
xchg
sbb
setle
or
add
adc
fistps
icebp
inc
mov
jb
adc
jmp
loopne
sahf
jle
pop
and
sar
push
mov
ror
ljmp
adc
lahf
push
jne
popa
popf
add
ret
mov
sub
mov
sbb
lods
sbb
and
dec
inc
dec
sbb
add
push
mov
lahf
mov
mov
pop
jmp
mov
add
jbe
pop
aaa
dec
xor
push
mov
sbb
loope
push
push
int
jno
or
fwait
in
xor
enter
loop
xchg
iret
or
cmpsl
xchg
mov
shrb
imul
push
or
movsb
sub
out
add
iret
sub
cld
pop
fcomps
mov
sti
lret
xlat
inc
cmp
xchg
pop
js
add
push
sbb
sbb
mov
push
ss
mov
movsl
jle
cltd
or
pop
repz
pop
inc
mov
fwait
xchg
push
pop
push
addr16
mov
pop
in
imul
clc
fnstenv
aad
cli
clc
xchg
inc
hlt
inc
popa
in
sub
ja
xlat
push
cltd
sub
lods
daa
jmp
dec
clc
lods
mov
in
add
sub
cmc
cmp
ja
push
push
mov
mov
out
lea
out
push
xchg
leave
mov
fimuls
adc
cs
sub
and
loopne
das
and
mov
cmpsl
stos
pop
rorb
and
mov
pop
xchg
int
movsb
sbb
or
sub
cmpsb
fmuls
arpl
sub
or
inc
xchg
out
jmp
inc
mov
mov
or
jge
cmc
xchg
dec
scas
dec
mov
retw
add
mov
mov
push
daa
cmp
jns
pop
dec
mov
cmpsb
pop
dec
mov
in
test
int3
fistpll
fs
hlt
popa
xor
or
lret
mov
bound
aaa
repnz
imul
cmpsb
mov
and
hlt
fisubrl
in
sbb
pop
jge
sbb
sarb
outsb
popa
mov
daa
testl
faddp
ds
inc
dec
add
lret
imul
scas
push
sbb
ljmp
cmc
xchg
lret
in
xlat
mov
movsb
mov
ja
jg
push
cmp
sub
inc
inc
lds
lds
jnp
mov
sti
out
repz
pop
imul
jp
popf
push
sbb
aaa
mov
pop
push
push
mov
or
icebp
and
xchg
add
jbe
mov
vshufps
and
out
orl
into
out
xchg
jno
inc
jo
fstpl
inc
mov
adc
push
leave
dec
sbb
out
adc
fnstcw
enter
pop
mov
test
scas
ss
inc
inc
loope
jns
mov
or
pcmpeqb
jmp
ss
fstps
cmp
stc
push
cmp
sbb
inc
ret
and
mov
lret
mov
cltd
add
jo
mov
inc
and
sbb
and
jno
xchg
and
ffreep
add
xor
std
daa
movsl
inc
divl
andl
adc
xchg
addb
popf
push
and
mov
popa
dec
fstps
gs
pop
pop
xlat
mov
ror
int
mov
pop
out
insb
mov
xchg
icebp
test
xor
push
scas
scas
and
mov
dec
sub
xlat
sbbl
jmp
xchg
sbb
stos
sbb
pop
fcmovne
push
mov
mov
push
jmp
call
add
inc
out
adc
mov
es
test
and
mull
pop
or
jl
adc
mov
lds
push
lock
das
add
inc
cwtl
arpl
mov
cs
addb
repz
push
xchg
fcoms
rol
jecxz
sbb
sub
ja
fstpt
loope
lods
rcr
mov
cmp
mov
movl
xchg
scas
icebp
ljmp
mov
fsubrs
mov
dec
sbb
ds
cmp
add
dec
and
fbld
adc
cli
mov
sub
call
add
dec
xchg
mov
jb
sar
test
adc
insb
pop
call
xchg
pop
fisttpl
push
je
les
dec
cmp
push
push
ds
xchg
pusha
out
or
dec
das
lods
fs
xchg
cmp
ss
call
insb
xchg
mov
xchg
sbb
or
inc
sbbb
xchg
loop
in
lods
sub
and
lret
inc
loope
pushf
add
les
iret
and
lret
mov
pop
hlt
jno
into
xchg
dec
stos
popf
mov
add
aad
jg
in
xadd
cwtl
rcll
negl
sub
mov
inc
loope
je
mov
pop
lcall
pop
daa
push
jle
or
stos
imul
or
insl
cs
not
xchg
adc
pop
fs
sbb
push
and
cmp
or
imul
push
lcall
cltd
inc
xor
inc
mov
lret
movsl
call
loopne
in
ret
call
jmp
push
and
jl
divb
sti
push
sarl
sbb
aad
xor
lods
icebp
mov
sar
mov
pop
xor
fiadds
mov
aad
adc
sbb
jle
out
xchg
outsb
data16
loop
loopne
add
adc
pusha
int3
scas
pusha
lods
mov
add
mov
xchg
rorb
push
mov
and
cmp
or
in
enter
push
cmc
stc
and
shlb
mov
popa
mov
in
inc
add
pop
js
outsb
xor
adc
xor
sahf
daa
shr
mov
lahf
xchg
gs
inc
push
cmp
out
loope
inc
jl
push
sbb
pop
stc
sbb
rcrb
jg
cmc
and
push
mov
les
mov
or
push
in
orb
shrl
outsb
jb
int
out
pop
mov
in
pop
push
or
and
mov
scas
stos
cli
xchg
add
enter
popf
fldl
or
dec
sbb
mov
add
stos
ret
add
sub
sti
xchg
pop
es
dec
testb
mov
lods
rclb
les
add
je
iret
jg
jl
dec
jae
mov
mov
mov
cmp
and
fcom
ljmp
pop
sbb
push
push
jno
jns
xchg
aad
sub
shll
fdivs
mov
cmpsb
daa
mov
stc
cmc
popa
movsl
dec
sbb
dec
std
daa
sbb
cmc
dec
jns
sub
xlat
xorb
ret
pop
add
ret
and
push
call
stos
ja
pusha
xchg
and
lret
push
push
addr16
pusha
pop
loope
jae
out
xchg
mov
mov
int3
andb
inc
sub
mov
test
hlt
cmc
adc
mov
cld
sbb
stos
inc
cld
sbb
jb
std
push
jae
mov
xor
jne
pop
xchg
imul
inc
add
out
in
pop
das
out
jecxz
add
shl
daa
jns
lock
cmp
rclb
xor
sub
xchg
cmc
push
fldt
movsl
sub
xchg
mov
je
push
movsb
inc
mov
jno
daa
dec
fmull
je
add
fisttps
cmpb
mov
push
pop
or
jle
jns
inc
inc
std
pop
pusha
or
mov
lods
aas
mov
lahf
mov
fcoms
mov
je
xchg
iret
adc
or
lock
mov
icebp
ja
xlat
inc
adc
enter
jg
pushf
loope
lods
add
aam
fstpt
sbb
xchg
mov
push
xor
lret
add
mov
rorl
mov
test
fcomps
rcrb
push
jecxz
adc
lods
fisttpl
pop
push
scas
daa
psrlq
push
xor
adc
into
mov
add
and
jno
int
sub
mov
pop
xor
mov
popf
adc
repz
out
mov
or
mov
xchg
or
pop
jne
arpl
cli
stos
adc
cmp
inc
aam
mov
sub
stc
loope
out
nop
movsb
popa
jno
or
hlt
movsl
gs
fcmovne
fwait
dec
or
add
dec
fwait
cmp
fs
or
cmp
fs
fisttpll
dec
xor
or
test
jmp
ror
cmp
dec
and
mov
xchg
dec
inc
nop
bsr
mov
or
jae
xchg
test
movsb
or
jg
jns
mov
sbb
lret
imulb
xor
imul
add
mov
es
ja
rcll
adc
lods
add
aas
pop
insb
xlat
pop
jl
int3
fucomp
cmp
bound
sub
cwtl
ja
sub
cld
cmp
xchg
es
enter
xchg
push
push
lock
stos
stos
ret
popf
test
xchg
nop
orl
xor
sbb
in
call
jle
iret
jbe
sub
and
dec
xchg
adc
ljmp
adc
addl
fcoml
cmp
or
push
pop
or
lret
push
pop
inc
fidivrs
sbb
pop
mov
adc
adcb
stos
clc
iret
cmpsb
insb
outsl
mov
out
sbb
and
mov
jb
dec
xor
push
decl
mov
aam
das
jl
dec
je
lods
testl
addr16
movsb
xchg
xor
rol
je
leave
ja,pn
fcoml
mov
es
mov
add
test
xor
cmpb
in
repz
ljmp
fdivrp
in
inc
dec
js
testl
mov
lret
xorb
inc
data16
and
shrl
fsubr
in
pop
icebp
sbb
frstor
in
jbe
lret
add
pop
ja
jnp
pop
cmp
iret
sub
dec
adc
push
imul
adc
adc
out
xchg
mov
push
pop
lods
sub
iret
int
sub
ds
xor
push
push
sarb
mov
inc
out
rorb
imul
cmpsb
jge
dec
xchg
mov
xor
jmp
adc
xchg
sbb
xor
fisttps
addb
lods
insl
js
hlt
xchg
negl
jecxz
stos
pusha
add
test
dec
and
inc
xor
cmc
inc
cmp
test
mov
cs
xchg
add
mov
cmp
shlb
adc
lret
jbe
mov
or
outsb
leave
jg
pop
dec
mov
cwtl
cmc
push
add
and
shlb
inc
leave
pop
dec
or
xchg
add
mov
sub
rorl
push
push
out
inc
xchg
fcomp
cwtl
popf
push
divl
cli
dec
xor
mov
jbe
mov
mov
inc
aam
push
mov
fistps
jl
ja
push
fldl
and
rcl
xorl
mov
int
jb
mov
add
arpl
out
push
enter
jo
add
addr16
pop
arpl
popa
cmp
inc
imul
dec
cld
lds
push
add
std
cmp
mov
shrl
sub
pop
xor
adc
push
cmp
cmc
in
icebp
imul
jnp
jge
out
cmp
xchg
imul
out
nop
imul
push
inc
movsl
lahf
mov
dec
cmp
dec
jno
sbb
mov
aaa
push
sub
and
adc
test
hlt
lock
jno
pop
jae
mov
xchg
inc
cmp
imul
fs
sti
icebp
jl
pop
pushw
jg
cmpsb
insl
dec
ja
sub
sbb
sbb
test
xor
pop
jge
jo
inc
sbb
hlt
jnp
xchg
jp
jae
mov
cmp
jp
dec
decl
repnz
dec
loope
es
sbb
xor
mov
push
cmp
sub
addl
dec
fcmove
jmp
adc
jno
hlt
bound
rolb
xchg
sub
and
ljmp
sbb
xlat
push
jae
or
lea
ljmp
push
mov
mov
std
sbb
int
ds
pop
dec
pop
adc
inc
jne
or
mov
push
xchg
divl
sub
push
addb
sbb
dec
xor
fcompp
stos
sbbb
xchg
or
ljmp
push
outsb
fisubrs
loope
fsts
dec
idivb
out
pinsrw
cmpsb
sub
idiv
jge
mov
icebp
cmp
sbb
pop
push
adc
pop
sbb
push
int
notl
sbb
mov
or
sub
sub
sub
test
jp
pushf
fcmovnb
xor
rorb
jle
mov
add
mov
push
and
enter
enter
lock
dec
pop
mov
rol
insl
or
push
imul
mov
je
and
mov
mov
outsl
call
sub
mov
add
fldenv
mov
gs
mov
mov
sub
ret
adc
and
inc
jne
xchg
sub
xor
push
fidivrl
lods
cmpl
dec
arpl
outsl
ja
jmp
xchg
notb
jnp
int3
ja
dec
xor
xor
sbb
sbbl
sbb
pop
sbb
ficompl
dec
jp
pop
ret
ret
cmc
or
aad
insb
jmp
pop
in
insb
dec
inc
jecxz
pop
jne
xor
jl
pop
jne
shrb
pop
pop
sub
leave
jno
imul
fstpt
dec
mov
add
or
cmpsl
inc
mov
mov
stos
lock
adc
cmp
or
xchg
sbb
xchg
in
and
loop
data16
mov
jae
clc
mov
int
adc
test
or
cmpsb
and
sarl
testl
mov
arpl
add
xchg
test
icebp
lret
sbb
sub
jo
enter
sub
scas
push
sbb
mov
xor
ret
mov
xchg
aas
addl
and
or
fdivp
in
mov
jmp
dec
and
mov
pop
mov
aad
add
shl
or
es
mov
pop
mov
clc
pop
fstl
lret
mov
lods
mov
cli
mov
addr16
pushf
sub
sub
jo
stos
arpl
pop
inc
insb
inc
push
std
ja
insb
inc
rorl
mov
and
pop
sub
adc
push
mov
scas
push
jno
das
notb
adc
jl
xchg
arpl
dec
dec
mov
pushl
pop
mov
call
ja
sti
sarb
into
mov
dec
or
mov
sahf
rorb
push
jmp
shr
pop
and
mov
jns
pop
cld
add
je
clc
aaa
movsb
aam
inc
xor
or
adc
mov
movsb
add
and
fcmovnbe
sbbb
push
pop
je
add
or
inc
and
xchg
fnsave
jecxz
mov
inc
xor
pop
xor
pop
or
ja
jg
pop
pushf
sarb
ds
cmc
aas
leave
mov
mov
mov
sbb
roll
int
or
pop
out
cmp
lahf
xor
fistpll
sub
and
mov
sub
fwait
xor
sbb
xlat
and
repnz
xchg
jo
stos
dec
orl
incl
testb
pop
jmp
test
push
outsb
dec
inc
mov
mov
icebp
mov
xchg
mov
addl
mov
xchg
mov
sbb
inc
nop
xchg
sbb
adc
test
mov
dec
xchg
push
subb
outsb
scas
xor
inc
fidivrs
fsubl
adc
pop
aas
daa
push
inc
mov
scas
out
ret
sub
xchg
cmp
inc
rcrb
pop
ret
cli
inc
and
push
dec
inc
std
or
clc
jnp
scas
xor
cmp
rclb
cmpb
dec
mov
adc
xchg
add
sbb
and
ja
push
sbb
push
sbb
adc
push
stc
sbb
mov
mov
xchg
add
sbb
repz
cmp
cmp
lret
int
out
stos
lahf
and
lret
or
inc
sbb
inc
mov
nop
sbb
xchg
adc
arpl
fdivrl
fcmovnb
pop
and
ja
adc
arpl
push
out
js
push
fdivs
cmp
mov
arpl
mov
and
ss
enter
mov
jecxz
xchg
mov
shr
add
test
mov
in
jbe
fidivl
adc
nop
in
mov
movsb
mov
mov
xchg
cmp
inc
icebp
jnp
popf
mov
pushf
jg
mov
lds
push
jo
jno
mov
pop
dec
hlt
jg
jecxz
cld
in
sub
das
in
lock
loopne
sbb
mov
shlb
fidivrs
xchg
pop
pop
jge
mov
sub
test
and
xlat
movsl
jmp
jb
lret
or
dec
outsb
in
xor
out
and
dec
xchg
out
loope
jo
and
test
xor
push
mov
lea
gs
dec
cmpsl
push
xchg
mov
sub
inc
push
or
and
into
mov
xchg
xchg
insl
pop
dec
lea
dec
jmp
popa
mov
mov
je
cli
cmpsl
out
stos
lods
leave
jp
sysexit
cwtl
sub
out
mov
aas
mov
mov
pushw
mov
loopne
imul
popa
scas
xchg
mov
mov
adc
mov
dec
add
lock
jp
sub
shll
or
jmp
sbb
push
call
das
jns
and
mov
sub
add
ficoms
inc
adc
dec
sbb
and
sub
insb
hlt
add
dec
and
or
sub
jl,pt
fisttpll
stos
aaa
pusha
call
pushf
push
cli
aad
in
outsl
ret
sbb
leave
adc
mov
cmp
aam
and
shl
sub
push
movntq
je
pop
push
call
sub
dec
loope
rcrb
popf
js
dec
rcr
arpl
call
xchg
jle
mov
lds
rolb
cmpsb
pop
fnsave
or
adc
jbe
aad
cwtl
insl
add
fwait
loop
fbld
ficomps
add
nop
sbb
jp
push
cwtl
movsb
fcoml
iret
mov
push
mov
mov
push
push
rol
iret
aad
lahf
pop
xchg
mov
pop
pop
cli
xchg
mov
cmp
in
sbb
mov
out
nop
push
pop
sbb
mov
aad
sbb
jae
call
lahf
ror
dec
jo
and
and
mov
ret
popf
xor
icebp
das
out
in
pop
fisttpll
dec
xchg
ja
pop
pop
ss
enter
adc
mov
outsb
ljmp
scas
and
mov
out
aad
lret
xor
jbe
test
repz
push
hlt
xchg
dec
push
dec
cmp
sbb
push
cmp
xchg
fwait
add
std
and
sub
sub
push
imul
sbb
aam
outsl
xchg
jmp
movsl
stc
and
inc
rorl
or
jae
or
fwait
or
and
cmp
xchg
lahf
lret
sub
xchg
insb
imul
mov
dec
das
mov
loopne
cmp
or
nop
rcll
test
sbb
sub
mov
jmp
das
or
mov
and
icebp
add
sub
data16
and
out
imul
stos
stos
aam
subb
imull
pop
popa
lods
xchg
mov
ret
pop
cmp
testb
sbb
cs
xchg
mov
inc
sbb
or
push
lret
test
push
pop
jnp
push
lods
cmpsl
pop
lea
push
mov
dec
cmc
test
ret
pop
lock
test
inc
and
pop
xchg
xlat
pop
scas
inc
les
pusha
aad
mov
fs
test
cmpsb
out
or
in
loopne
ret
sarl
inc
stc
jmp
aaa
mov
stc
sbb
adc
push
xchg
mov
pop
adc
mov
push
aam
stos
or
add
loop
dec
xor
incb
and
mov
sub
out
incb
inc
jl
mov
lods
or
mov
mov
in
adc
or
loope
and
jns
push
push
rorl
sti
pop
cmovp
loop
add
inc
push
adc
or
psubusb
loop
outsl
push
mov
pop
adc
adc
lret
xor
outsb
vpaddusb
jp
xor
test
shlb
cmpsl
mov
mov
daa
dec
imul
or
xchg
insb
add
mov
aas
dec
adc
jbe
jmp
loop
adc
mov
or
ljmp
add
inc
iret
subl
lock
adc
push
xor
pushf
jp
mov
mov
dec
jmp
je
jo
xchg
mov
sub
mov
xchg
xchg
mov
adc
notb
insb
dec
in
call
mov
bound
cmc
mov
fs
push
xor
push
rcll
and
cmpsb
or
xchg
sahf
push
sti
fisubl
fisttps
movsb
notb
out
ja
fwait
adc
test
gs
pop
dec
test
int3
mov
test
test
cltd
jecxz
and
scas
inc
jp
xchg
add
cld
jns
pop
loope
lret
mov
jbe
fldt
mov
lea
mov
popf
idivl
push
pushl
dec
outsl
pop
cmpsb
mov
loop
mov
shlb
rorl
mov
inc
insb
mov
jbe
test
mov
mov
lods
sbb
scas
pop
or
adc
add
imul
or
mov
popa
ret
outsl
int3
rcrb
loop
mov
fcmovb
stos
fwait
out
out
cmp
daa
jl
cwtl
pop
les
xorb
xchg
pop
nop
xchg
test
loopne
mov
or
mov
stc
test
and
add
mov
mov
andl
int
mov
cltd
out
imul
dec
pop
scas
out
sub
add
test
ret
into
add
fwait
or
rclb
cmp
jl
imul
mov
enter
mov
jl
add
ret
cmp
scas
jns
out
stos
mov
mov
test
inc
sarb
mov
jecxz
lret
xor
adc
sbb
push
subb
ds
sub
cmp
mov
xor
xchg
es
jne
test
mov
mov
int
jl
stos
loopne
cltd
mov
lahf
pop
cwtl
xchg
jno
fs
pusha
sub
int
xor
pop
lcall
mov
js
cmovae
scas
pop
rcrb
pop
les
add
pop
adc
es
push
and
data16
xchg
shrb
push
xorb
les
and
cmp
in
pop
fldl2t
rcr
sub
jo
int
xchg
mov
and
in
cmp
mulb
rcrl
sub
inc
sbb
cwtl
pop
popa
rcrl
mov
pop
xchg
repnz
lock
lods
int
jb
popa
mov
icebp
fwait
jnp
inc
out
dec
cmp
scas
fidivrl
lods
mov
and
mov
jmp
decl
mov
lcall
faddl
pushf
or
sbb
dec
lods
jmp
test
pusha
push
fsubrl
pop
xchg
insb
imul
sbb
xor
adc
push
inc
lea
and
jns
push
scas
imul
push
jne
jg
and
adc
mov
cltd
test
outsl
movsl
lods
adc
push
xchg
xor
sub
mulb
push
mov
jo
das
mov
push
adc
jecxz
mov
xlat
inc
mov
scas
lods
daa
add
pop
cmp
xchg
cmp
aaa
cmc
jl
mov
and
cmp
in
adc
jmp
inc
int3
adc
test
inc
push
rcrb
enter
stos
int3
mov
inc
cmpsl
call
movsb
aam
cmp
in
jne,pn
sbb
sarl
cmp
lcall
insb
push
incb
mov
jg
ja
pop
test
cltd
push
pop
push
inc
lahf
mov
subl
pop
jmp
aad
shl
xor
lock
lea
push
dec
ss
cmpsl
pop
fbld
inc
in
movsl
roll
rol
test
cmp
pop
sbb
movsb
imul
adc
mul
dec
and
loopne
lock
jnp
and
mov
xor
xchg
sub
into
mov
bound
or
sbb
sbb
xchg
sub
add
mov
mov
mov
stos
xor
stos
add
inc
dec
imul
mov
fcompl
inc
mov
dec
dec
adc
lcall
or
je
and
test
cmp
sub
sub
rcpps
or
xchg
and
jge
fwait
add
bound
lock
subb
add
push
loopne
cmp
pusha
sub
mov
cmp
pusha
fsubr
pop
mov
es
sbb
xlat
inc
enter
and
shrb
mov
xchg
mov
pop
out
fs
jns
imul
dec
and
and
mov
sti
ja
repnz
mov
mov
push
sub
testl
mov
fstpt
pop
cltd
push
jle
mov
pop
mov
jo
iret
jns
lcall
ret
int3
cs
and
ljmp
xchg
and
inc
ljmp
test
fidivs
jmp
cwtl
les
dec
add
bound
iret
mov
dec
mov
sub
ret
pop
inc
sbb
test
ja
shrb
ds
dec
shlb
cmp
mov
out
pop
int
dec
dec
shlb
test
popf
jg
adc
cmpsb
cli
cmc
xor
into
hlt
cs
fnsave
xor
mov
lret
mov
rcrl
xor
pop
dec
nop
adc
ret
xchg
sub
decl
adc
fwait
popa
sub
sbb
mov
imul
and
jl
in
pop
or
push
and
sti
cli
xlat
add
stos
jnp
push
repnz
adc
push
insl
movsb
imull
sahf
mov
subb
cmpsb
pop
pop
imul
mov
shlb
jno
cmp
jp
mov
jmp
push
jns
inc
inc
mov
cs
xchg
lret
push
out
add
pusha
jno
jnp
movsb
and
push
popf
inc
mov
mov
xor
sub
jl
pop
mov
in
incb
nop
aas
daa
and
xor
xchg
sbbl
dec
dec
or
inc
shl
repnz
xchg
cmp
dec
rclb
jle
add
adc
and
les
int3
mov
adc
sbb
andb
scas
pusha
imul
and
sub
mov
movsb
fistps
loop
jno
mov
cmp
test
jne
xchg
push
lock
inc
icebp
xlat
mov
and
dec
mov
xor
lcall
fdivs
jl
inc
shrb
dec
aaa
or
cmp
inc
mov
pop
mov
fstps
filds
push
nop
xor
mov
rorl
es
pop
in
mov
jl
xchg
xchg
xchg
add
jge
lds
adc
and
dec
cmp
fsubs
roll
or
test
push
push
xor
xchg
test
cld
lds
iret
jmp
and
je
popa
push
lret
and
xchg
movsl
cmp
cld
mov
repz
push
insb
xchg
mov
lea
inc
in
shlb
ss
ds
test
test
jno
lret
jnp
or
or
push
movsl
stos
lock
pop
das
ret
jge
into
fnstcw
inc
xor
mov
lods
mov
jg
ss
sbb
cmp
pop
mov
imul
mov
das
imul
jns
xchg
push
outsb
mov
cwtl
mov
cltd
stc
push
or
shll
inc
adc
push
out
clc
out
adc
adc
jp
fidivs
rcll
pop
inc
and
scas
out
ss
dec
push
icebp
add
sbb
dec
adc
mov
aam
push
into
cld
xchg
jmp
cmc
cmc
or
mov
or
mov
imul
adc
pop
add
repz
add
mov
mov
pop
mov
push
lfs
out
push
loopne
push
int3
mov
cli
ds
or
outsl
add
cmp
addr16
test
imul
mov
cmpsl
dec
sub
int3
inc
cwtl
inc
je
adc
cmp
in
leave
je
inc
pusha
scas
ret
cltd
inc
push
pusha
xor
je
imull
xor
clc
adc
mov
stos
shlb
add
jo
fs
cmp
aas
es
add
jae
movsb
decl
jo
push
add
inc
mov
xor
outsb
and
or
sub
mov
ljmp
and
pushf
jecxz
sbb
jae
movsb
mov
xchg
test
movsl
cltd
out
out
mov
inc
paddsb
lods
jecxz
and
sub
scas
push
push
lock
mov
xchg
test
sub
mov
xor
aas
sub
mov
inc
loop
mov
mov
lds
fisttpll
aad
dec
clc
jl
jmp
lret
adc
or
cli
pop
xchg
pop
cld
out
mov
movsb
mov
dec
or
out
fmul
cmp
movsb
adc
rcrb
in
pop
push
jge
pop
repz
xor
lcall
xor
les
and
mov
xor
dec
mov
pushf
lds
inc
lods
pop
push
inc
les
ss
xchg
add
pop
in
lds
imul
fbld
xchg
in
repz
jns
pushf
mov
lods
add
mov
pop
and
mov
sahf
and
ljmp
insb
lret
jmp
pop
out
jge
pop
clc
fstl
lds
sahf
push
pushf
sbb
mov
stos
jmp
push
lds
lds
push
ret
inc
xor
xchg
shll
jns
dec
nop
pop
das
adc
fs
pop
dec
cmp
sub
sahf
lods
lods
imul
dec
mov
ss
dec
lds
mov
mov
push
pop
or
or
or
cmp
or
push
out
outsl
mov
mov
test
add
xor
adc
mov
jp
ljmp
hlt
cmp
fsubrl
mov
mov
gs
jge
mov
sbb
ss
subl
inc
push
push
cmpb
fldl2e
cli
mov
dec
orb
cmp
imul
jp
test
cli
loop
push
out
or
pop
icebp
adc
test
int
adc
or
scas
sbbb
in
add
scas
shll
aam
call
dec
dec
sub
add
in
xchg
popf
jnp
test
imul
jo
fidivrl
addr16
dec
and
inc
cmc
xor
lret
cmp
out
xor
call
mov
mov
rcrb
xor
add
xor
in
call
in
int
lret
mov
rclb
push
rcr
cltd
loopne
loop
pop
and
fwait
xchg
pop
sahf
leave
add
jno
lods
imul
cmpsb
cmpsl
push
adc
sub
stos
sub
push
pop
in
mov
call
movsb
and
or
push
xor
std
testl
or
movsb
jp
lcall
ljmp
xor
decl
inc
pop
sbb
call
adc
cld
add
js
jnp
jbe
loope
sub
mov
or
pop
dec
mov
loopne
mov
ljmp
inc
xchg
in
outsl
push
loopne
rorb
orl
push
sub
in
jp
xchg
test
insl
sbb
inc
cmp
mov
push
mov
mov
pop
in
arpl
imul
jle
imul
xchg
mov
stc
call
dec
and
insb
jns
cld
outsl
xchg
push
add
out
sub
mov
in
push
in
mov
aas
mov
in
jg
fisttpl
push
push
xchg
xor
sbb
add
push
shlb
aad
fstl
or
mov
jb
xor
jbe,pt
lret
fcoml
insb
pushf
mov
arpl
iret
or
jae
mov
imul
xor
das
jge
cmc
shlb
jnp
mov
lahf
add
enter
call
xlat
lods
pop
adcb
dec
dec
sub
scas
iret
mov
into
lret
jmp
jne
sar
inc
bound
cmp
sub
ljmp
call
push
sub
fwait
out
jbe
dec
rolb
out
cmp
pop
adc
fwait
cmp
out
das
jnp
aad
xlat
imul
sbb
call
out
add
iret
xchg
fs
lret
call
and
cmp
rcrb
mov
xchg
jns
cli
arpl
mov
mov
shll
mov
mov
push
mov
add
add
sarb
xor
out
leave
jnp
repz
or
sbb
mov
fidivrs
icebp
xchg
ja
push
loope
loop
pop
mov
dec
pusha
cmpsb
inc
ret
nop
jge
mov
pop
fnstsw
pop
cmp
ret
jecxz
cld
lret
pop
mov
or
inc
shrb
push
lcall
sbb
xor
enter
push
fidivrs
mov
dec
rorb
loopne
mov
addr16
inc
int3
popa
mov
lods
mov
mov
nop
cmpsb
int
sarb
call
clc
adc
fs
dec
sub
adc
hlt
clc
cli
xchg
sub
dec
mov
mov
sub
jmp
and
mov
pop
and
repz
xor
mov
inc
pop
mov
jp
pop
push
sti
push
lcall
mov
incb
and
fsts
leave
icebp
mov
test
and
sub
pop
repz
int
push
loopne
mov
arpl
imul
jnp
ficoms
xchg
sbb
daa
cmp
push
cmp
imul
addl
add
and
std
sub
rcr
out
pop
ret
cld
jle
jns
inc
rcr
inc
pop
jmp
fistpl
popf
bound
jb
out
sarb
aaa
mov
dec
leave
test
pop
sarb
dec
scas
mov
loopne
xor
repnz
adc
shufps
jge
sbb
inc
jmp
aas
stos
int3
shlb
and
and
scas
dec
movsb
push
je
sub
lods
and
mov
lods
bound
dec
inc
mov
and
shl
stos
xchg
adc
hlt
test
and
inc
in
push
lock
pop
and
hlt
imul
out
xchg
icebp
ret
cld
push
fs
push
filds
hlt
mov
roll
ret
lods
icebp
out
lcall
outsb
ss
ss
xor
pop
dec
push
shl
or
or
cmp
ss
xor
aas
sbb
or
dec
sti
pop
mov
push
push
fstps
incb
mov
rolb
shll
popl
lret
lods
mov
loop
insb
lahf
movsb
pop
jg
push
and
or
leave
bound
ret
and
loope
push
ror
adc
push
pop
jl
shl
ss
sub
int
inc
rcll
adc
out
rcrl
push
ljmp
imul
andb
int
adc
add
dec
mov
ss
or
daa
lods
adc
push
imul
negl
mov
fsts
hlt
mov
arpl
adc
dec
lahf
loop
xchg
sub
cmp
vpunpckhbw
divb
inc
lds
sub
lcall
hlt
inc
sbb
cmp
mov
jbe
mov
lret
cmc
mov
sti
fists
dec
rcrl
es
xchg
pop
push
test
push
xchg
sbb
addb
adc
or
inc
fwait
or
mov
sub
in
dec
notb
repnz
dec
or
arpl
pop
sbb
dec
xor
dec
adc
test
jp
lock
dec
les
lea
pushw
int3
or
lret
cltd
push
cmp
dec
xor
lcall
idivl
push
aad
leave
dec
inc
jg
sbb
flds
jmp
int3
xorb
addb
lret
iret
push
aaa
ds
rorl
outsb
subl
adc
jp
jae
iret
test
sub
xchg
push
cmp
cmp
add
sti
test
jae
or
lret
out
cli
xchg
mov
lods
xor
inc
mov
mov
mov
movsb
rolb
dec
cld
mov
or
andb
fnstcw
sbb
bound
pop
sbb
out
mov
hlt
jecxz
clc
jecxz
test
mov
ds
outsb
hlt
sbbl
addr16
imul
mov
and
xor
js
jo
fbstp
adc
xor
cld
imul
int3
das
int3
shll
cmp
push
call
ljmp
ljmp
sti
and
stos
push
jg
mov
xchg
push
push
sbb
inc
jne
fstl
push
fists
cmp
pop
es
mov
mov
jnp
repnz
cli
mov
dec
push
testb
jl
mov
popf
add
cmp
add
jmp
shr
dec
dec
stos
out
add
arpl
pop
rcrl
add
and
push
add
data16
iret
fldl
jecxz
dec
arpl
pop
adc
adc
sub
xchg
pop
push
push
push
sbb
xor
inc
pop
cli
in
pop
dec
jo
cmc
mov
or
mov
lods
dec
outsl
enter
popa
mov
or
shrl
js
lock
dec
cmc
imul
dec
jg
out
es
shlb
out
cmp
movsb
scas
dec
xor
adc
pop
jmp
js
jmp
das
stos
aam
lret
push
xchg
lods
in
jge
mov
pop
outsl
leave
mov
and
hlt
mov
or
and
cmpsb
cmp
xor
jg
adc
repz
xchg
addr16
push
mov
mov
lds
push
xor
test
iret
sub
push
lods
vmulpd
push
push
out
xlat
stos
fcoml
pop
cld
lods
div
lahf
and
adc
stc
mov
pop
adc
dec
pop
xchg
ret
idivl
das
insb
scas
or
xchg
mov
pop
out
xlat
adc
test
pop
or
mov
mov
arpl
push
dec
ret
and
sub
sar
or
inc
adc
inc
std
jmp
fdivrs
ljmp
mov
mov
sti
mov
push
sub
ja
mov
cmp
xchg
jbe
or
sub
push
js
aaa
daa
add
xor
sbb
test
xor
and
iret
mov
add
jle
iret
daa
fadds
ja
mov
mov
in
sbb
mov
dec
jecxz
mov
rclb
ret
jae
imul
les
dec
pop
sub
mov
stc
inc
in
clc
dec
cmpsb
pop
cmpsl
cmp
jmp
xor
add
mov
aad
test
xchg
mov
jo
fistl
push
mov
mov
pop
jl
jle
push
rolb
and
jo
xor
pushf
mov
push
inc
mov
cltd
shr
scas
push
xor
insb
cwtl
stos
cmp
mov
xor
leave
jae
jle,pt
lret
les
sub
les
fidivs
inc
and
and
repz
mov
mov
xchg
ljmp
push
cmpsl
adc
mov
shrl
aaa
movsb
test
mov
adc
push
popf
shll
lods
std
cs
enter
jl
jle
push
cs
lods
sbb
rorl
mov
stos
bound
mov
push
and
cmc
or
xchg
ret
pop
leave
mov
ja
sbb
cmp
and
jle
or
jge
repz
shrl
clc
adc
dec
mov
es
cmp
fsubs
in
fstpt
pop
jns
mov
call
repz
cmc
and
pop
int
push
lock
pop
sub
out
jo
and
dec
xchg
clc
xchg
mov
lret
popf
pop
or
xor
stc
pop
and
pop
and
loope
inc
push
xchg
cwtl
pop
inc
push
jns
pop
lea
push
mov
jae
push
addr16
ja
jae
fbld
das
sbb
adc
push
pop
mov
iret
loop
mov
push
jo
aam
xchg
jecxz
dec
int
loop
push
dec
fisttpll
subb
iret
fsubrs
jb
lock
shll
jecxz
xor
mov
pusha
adc
or
mov
add
gs
scas
scas
mov
cmp
cs
lret
imul
xchg
sub
lock
fs
xchg
sti
dec
inc
sub
stc
xorb
mov
aam
xchg
pop
inc
sbb
xlat
xchg
jecxz
or
add
enter
jb
and
xchg
jo
int
mov
aas
shll
or
sub
sbb
mov
lcall
fcmovnb
cmp
les
in
out
xchg
dec
arpl
icebp
adc
adcl
push
mov
xchg
mov
lea
xor
lds
pop
sub
sbb
aaa
fucomip
stc
icebp
lock
cmpsl
lea
loop
mov
ret
shll
in
cmp
mov
mulb
mov
insb
and
sbb
leave
lods
jmp
dec
lock
mov
adc
aas
subb
je
push
out
flds
fisubs
les
mov
test
divb
fnstcw
adc
mov
jno
push
adc
mov
into
ficoms
jge
and
addr16
mov
aas
mov
movsl
jne
pop
fdivr
fsubr
shlb
lds
nop
dec
add
lods
dec
mov
dec
out
inc
dec
cmp
sahf
mov
xchg
imul
gs
fidivrl
jo
xchg
or
scas
lds
xchg
sbb
hlt
out
test
add
fimuls
sub
push
mov
out
shll
and
test
inc
cmc
lock
cmpsl
mov
xlat
jl
jl
lret
in
fs
or
pop
or
cli
push
shrl
pop
push
out
inc
jne
sub
add
or
mov
inc
gs
nop
stos
or
mov
ret
cmc
dec
inc
nop
stos
mov
adc
mov
add
cli
xor
fnstenv
jmp
shlb
frstor
or
sub
add
sub
in
sti
adcb
aas
mov
jge
pushf
sti
fisttps
jmp
arpl
jne
cmc
inc
adc
aaa
cmp
std
jo
push
lcall
sbb
mov
jle
jle
jae
add
or
pop
shlb
sub
or
lret
sub
std
aad
pop
jnp
stc
or
imul
cmp
imul
sbb
mov
sbb
test
dec
adc
pop
add
mov
mov
push
jmp
fmull
lret
sbb
aam
daa
mov
shrb
insl
inc
push
sub
jne
daa
pop
and
dec
cld
imul
mov
jp
dec
mov
push
rcrb
iret
and
push
jae
pop
and
lret
sub
out
push
lret
jge
gs
fistpl
dec
mov
mov
jle
lret
sub
add
sahf
sbb
rcrl
jne
dec
and
mov
cmp
lods
mov
sub
ljmp
test
inc
sub
lret
pop
pop
rcrl
and
stos
stc
xchg
push
sub
loope
xor
push
and
jl
add
pop
sub
bnd
loope
and
adc
cmp
xchg
mov
ss
outsl
arpl
ret
push
xchg
and
jmp
xchg
dec
ja
adc
ficoms
sbb
pand
imul
mov
dec
mov
adc
or
pop
mov
movsb
cld
cld
add
scas
mov
push
test
nop
mov
sbb
data16
pop
icebp
out
jecxz
cmpsb
aam
mov
jl
into
cmp
add
adc
jmp
out
popf
pop
clc
out
adc
xchg
xor
cmpsl
nop
pop
adc
mov
movsl
lods
popf
insl
shrb
lret
popa
leave
xchg
adc
sahf
sub
negl
mov
fbld
imull
xor
add
pop
in
ss
sbb
aaa
push
out
imul
sbb
lret
push
les
xorl
icebp
or
adc
fprem1
jo
dec
sbb
and
in
adc
decl
mov
lock
sbb
scas
inc
mov
lock
lock
es
out
jecxz
mov
mov
xor
pop
mov
popa
sub
hlt
inc
je
pop
mov
pop
jno
or
inc
mov
xor
xor
mov
scas
pop
jne
das
cli
mov
inc
jge
mov
cmp
sbb
mov
sub
and
int3
das
movsb
repz
ret
jmp
icebp
out
pop
or
jecxz
cli
rorl
test
and
inc
add
mov
xor
mov
testb
stos
push
inc
outsl
cmp
popa
jp
mov
add
jb
cmc
insl
cmp
imul
insb
ds
cmpsl
sub
and
arpl
into
xor
mov
sarl
lret
std
mov
mov
mov
pop
hlt
sbb
adc
cs
and
icebp
mov
mov
cmp
lods
inc
mov
pop
xor
dec
push
into
icebp
mov
sbb
pop
rcll
jns
and
repnz
in
mov
ljmp
daa
cwtl
cld
aaa
out
pushf
jge
mov
cmp
std
cmp
sub
push
and
adc
adc
imul
data16
pop
add
mov
pop
leave
out
xchg
ret
cmpsl
jae
enter
lods
push
out
popa
push
jmp
int3
frstor
mov
movsb
arpl
data16
outsb
sbb
je
lods
stc
sti
inc
or
test
pop
imull
push
aad
ret
sub
jge
sti
sub
fwait
testl
pop
lock
sbbl
fistl
testl
xor
lcall
inc
and
in
sub
negb
sti
scas
mov
scas
jno
xor
push
dec
mov
jecxz
push
ret
repz
loope
negb
jno
mov
pop
mov
jne
hlt
sbb
jnp
mov
sahf
add
cmp
fcmovne
and
cmp
out
xor
in
inc
test
std
je
das
xchg
and
test
je
mov
or
pop
cmpl
ja
sub
inc
mov
mov
mov
xchg
xchg
jnp
jecxz
xor
adc
in
xchg
iret
rcr
cmp
out
imul
repz
imul
cmp
push
push
jno
test
cmp
and
lcall
pop
mov
or
push
xchg
inc
stc
imul
sti
push
pusha
jno
fdivs
and
and
in
cmp
arpl
sub
push
dec
fcmove
mov
outsl
das
add
dec
sti
iret
int
push
pop
sub
cmp
dec
adc
loope
push
sbb
std
pop
mov
fnsave
loop
test
aas
jp
sub
sub
push
and
push
data16
push
pusha
movsb
xchg
rcl
adc
jg
stc
in
jmp
rorb
sub
sub
sub
in
pop
lcall
rorb
push
dec
mov
and
sti
adc
movsl
lea
jg
lret
lds
pcmpeqb
pop
inc
cli
push
or
call
mov
or
int3
mov
je
mov
insb
xor
mov
sub
jae
cmpl
aaa
popf
fsubrl
push
gs
mov
cli
int
enter
sbb
ljmp
mov
mov
xchg
and
dec
ja
mov
aad
js
lea
or
xor
xlat
imul
push
pusha
mov
adc
data16
mov
xor
push
pushf
xor
push
movsl
pop
adc
add
mov
aad
lds
push
jmp
pop
push
xor
push
xor
cmc
mov
jecxz
push
adc
mov
push
xchg
ja
push
lock
dec
jbe
in
inc
inc
adc
xor
add
out
scas
stos
hlt
sbb
scas
mov
shll
roll
dec
int3
lahf
popa
mov
ljmp
loopne
xchg
cmp
cmp
ret
cwtl
jns
sarl
or
jmp
add
lret
stc
pop
cmpsb
rolb
fsqrt
lret
dec
jnp
int
out
out
or
pop
jno
test
mov
and
mov
lds
mov
mov
mov
pushl
sub
adc
pop
mov
popf
loopne
aaa
jle
ss
fstl
fwait
jb
sbb
xchg
jo
cmc
fs
inc
sbb
sbb
push
hlt
pusha
dec
gs
jno
loopne
sub
mov
iret
adc
jl
dec
int
sub
notb
xchg
xor
inc
pop
push
cltd
mov
or
push
enter
lods
add
mov
mov
mov
icebp
imul
adc
add
scas
cmp
cli
in
push
cmp
fisubrs
pop
push
cvtdq2ps
xor
mov
xchg
push
add
sub
dec
lret
stos
pop
push
mov
push
lods
dec
in
xor
lahf
dec
loope
pop
roll
cli
xchg
int3
pop
scas
pop
mov
push
sti
imul
jbe
sub
dec
push
imul
sarb
movsl
call
xor
imul
cmp
cmpsl
sbb
aas
push
xchg
fwait
mov
hlt
stos
cmp
dec
adc
loop
add
pop
out
lret
in
xchg
dec
mov
ret
mov
pop
add
mov
push
pop
add
in
mov
sub
lcall
push
sarb
mov
sub
pushf
cld
add
cmp
ja
das
enter
out
mov
or
pop
jecxz
in
dec
mov
sbb
cmp
bound
ss
stc
icebp
mov
pop
or
mov
leave
addl
push
xchg
pushf
xchg
jb
out
jns
in
sar
push
sub
add
out
mov
lret
adcb
data16
xor
imul
movsl
mov
mov
xor
mov
sbbl
shr
pop
andb
out
cmp
nop
insb
sbb
xchg
les
loop
push
mov
inc
rolb
aas
pop
aad
scas
add
mov
xor
shll
es
sub
ss
notl
cld
pop
das
push
xchg
mov
int
mov
cmpsb
cld
lcall
cmpsb
sbbl
xchg
jle
mov
adc
jb
cmc
mov
jnp
jno
xchg
pop
push
jne
push
fistl
test
and
inc
sub
push
js
arpl
addr16
call
inc
icebp
sbb
in
lahf
add
loope
mov
xchg
shlb
shll
dec
in
scas
test
mov
jg
xor
inc
fldcw
jb
dec
addr16
mov
mov
mov
cmp
out
lahf
ja
popa
and
in
sti
cltd
adc
push
movsb
sti
jae
mov
mov
cmp
js
jne
sti
xchg
jne
jl
push
negl
cmp
addr16
dec
dec
dec
push
cmpsb
push
mov
fcompl
inc
dec
sbb
into
ljmp
pop
jp
dec
lret
into
sub
mov
xchg
cmovl
mov
pop
pop
int
lock
adc
push
xor
sub
outsb
mov
xor
cmp
aaa
push
push
cmp
fcmovnbe
xor
movsl
or
stos
gs
add
incl
mov
jp
lret
pop
cmp
movsb
fbstp
int3
pop
mov
mov
or
bound
in
outsl
or
dec
out
sbb
inc
add
cmp
addr16
and
lcall
les
sub
cmpsb
xor
mov
xor
repnz
or
aas
addb
loopne
in
or
pop
loope
xchg
cmpsb
and
lods
inc
cs
push
aam
jmp
sbb
xchg
jno
sub
adc
loopne
hlt
sahf
sub
enter
push
shll
gs
popa
jl
movl
je
xchg
push
clc
arpl
inc
hlt
gs
jno
aas
rorb
in
cmp
scas
out
popf
jle
loopne
stos
rol
cmp
int
es
out
jmp
xchg
xchg
mov
jmp
jecxz
inc
andb
mov
fsubrs
shll
sbb
mov
arpl
std
dec
push
popa
outsb
jnp
scas
jno
xor
jo
mov
call
inc
mov
arpl
cmp
jno
jbe
mov
mov
aad
push
fcoms
int3
adc
es
cli
hlt
pop
pop
sub
test
push
fcmovb
leave
sub
push
adc
dec
jge
fs
sub
ja
ss
mov
fcomp
hlt
xlat
or
cmp
fnstsw
mov
sbb
sbb
ljmp
les
adc
out
and
scas
lods
movl
movsl
popf
pop
lea
popf
sbb
outsl
stc
popa
aaa
mov
dec
and
fnsave
xchg
es
cmpsb
int
pop
pop
lods
fbld
icebp
pavgb
pushf
adc
push
cmp
pop
pushw
mov
add
or
mov
leave
mov
out
ret
andl
xchg
popa
or
bound
xchg
sub
stos
aaa
in
push
loop
jecxz
call
mov
push
mov
xchg
rcrb
add
call
xchg
mov
jge
push
leave
into
sbb
mov
fmuls
push
pop
xchg
adc
je
rolb
insb
add
xor
sahf
push
out
jae
int3
mov
push
clc
clc
cltd
testb
pusha
inc
iret
outsl
adc
es
sbb
add
sbb
and
jge
jns
inc
lret
cmp
fstpt
jge
xchg
xchg
dec
jbe
insb
lahf
push
xchg
sub
test
xlat
divb
xor
insl
ret
dec
push
add
test
pop
xor
lock
mov
jg
sbb
or
lea
outsl
jge
incb
ss
subl
sbb
std
xchg
pop
push
call
cli
or
mov
decb
adc
jecxz
push
adc
pop
sbb
inc
xchg
js
aam
or
fimull
pop
test
mov
push
rorl
inc
cmc
lcall
adc
test
cmp
inc
ljmp
lcall
push
sbbl
mov
out
jb
into
mov
sub
insb
faddl
ss
outsb
cld
cmpsb
gs
xor
pop
bound
lahf
in
lahf
icebp
inc
mov
fdivrs
push
push
loop
xchg
pop
and
cmp
or
filds
aaa
cld
jo
dec
out
in
mov
icebp
mov
mov
cmp
cwtl
lods
test
dec
push
xor
mov
ret
cmpsl
stc
daa
jle
jmp
xorb
sbb
dec
jg
scas
cmpsb
movsl
mov
or
push
push
fbld
mov
jle
cmc
xchg
sarl
addr16
arpl
xchg
jb
test
add
mov
iret
mov
jne
sbb
dec
cmpsb
jns
pop
and
jo
inc
test
sbb
and
xchg
das
movsb
int3
fimuls
inc
add
cmp
fcomps
das
shlb
cld
icebp
cmp
cmp
and
pop
push
jnp
insb
xchg
mov
icebp
and
xchg
scas
ss
jle
fisttpl
xorb
test
push
xor
ljmp
mov
adc
ja
lods
out
xchg
stos
fcmovbe
xor
fiaddl
lcall
pop
mov
sub
push
insb
in
pop
xchg
mov
insl
push
icebp
ljmp
fisttps
push
daa
mov
rcll
sub
xlat
adc
aam
mov
or
push
mov
push
or
pop
in
ss
inc
mov
push
xlat
cmp
shr
mov
stos
cld
fldcw
adc
jge
aaa
add
pusha
pop
mov
or
shlb
cmp
mov
pop
scas
cmp
ficompl
fdivrl
cld
popf
or
cmp
jle
arpl
imul
test
xchg
fistl
mov
adc
xlat
aad
rorb
shrb
lea
out
xchg
cwtl
out
mov
dec
ret
test
lods
jns
repz
rcr
inc
inc
stos
jne
rolb
imul
fs
dec
adc
inc
pop
lcall
xor
mov
sub
shlb
mov
cmp
dec
pop
les
call
dec
dec
xorl
hlt
push
icebp
es
lret
test
dec
push
enter
js
push
inc
push
or
xor
test
cmp
in
add
adcl
in
jno
punpckhwd
cmp
jmp
sub
mov
and
cmp
or
and
mov
test
mov
add
cmc
mov
std
cltd
and
jno
fidivl
shrb
add
mov
sahf
repz
jnp
data16
ja
mov
and
mov
add
fs
dec
mov
adc
int
test
incl
jecxz
adc
inc
xchg
dec
inc
push
cmp
outsb
xchg
pop
fistpl
pop
cmp
jnp
mov
cltd
mov
faddl
push
call
mov
jle
loope
push
xor
cwtl
outsl
jg
scas
fldenv
mov
or
xor
fucomp
jecxz
cmpsl
sub
pop
jge
adc
cs
add
sub
pop
jmp
cmpsl
dec
mov
mov
mov
xor
and
test
loope
imul
dec
dec
mov
cmpsl
mov
jo
add
pop
or
lret
fcompl
fisttpll
xchg
arpl
push
push
out
mov
xchg
jns
mov
mov
jae
fstps
aaa
push
xchg
push
mov
dec
in
lahf
inc
repz
lds
mov
pop
sbb
cmpsb
test
mulb
cmc
pushf
bound
add
ja
jns
cmp
inc
xchg
outsl
lds
fiadds
clc
jge
popa
fdivl
lds
movsb
sub
xchg
pusha
bound
mov
jmp
fsubr
outsl
mov
insl
xchg
fisubrs
insl
mov
jne
xor
and
ss
nop
xlat
push
sub
aas
aad
idivl
stos
and
aad
rol
pop
xor
xor
mov
push
sub
inc
cmp
std
mov
inc
dec
pushf
sbb
in
add
sahf
out
push
int
lahf
mov
std
ret
hlt
pop
push
pop
cli
fucomi
push
pushf
push
jno
aad
pushf
jge
out
lods
sbb
pushf
in
pop
pop
loope
call
in
jl
or
sbb
xor
and
incl
add
js,pt
xchg
xor
xor
rol
and
push
loope
dec
sbb
arpl
int
xchg
lahf
pop
stc
mov
fiadds
and
pushf
dec
cmp
inc
sti
movsb
aad
and
pop
bound
xchg
sti
lds
lock
mov
fwait
push
sarb
pop
ret
and
jp
mov
add
xchg
jnp
icebp
xchg
cmpsb
mov
gs
and
add
lods
fcos
adc
dec
out
xorl
repz
xor
sahf
insl
cmp
out
pop
sub
das
mov
ret
xchg
test
push
inc
mov
ret
sbb
jnp
pushf
rep
in
mov
adc
adc
lret
jbe
lea
insb
fcmovbe
data16
mov
out
psrlq
les
mov
adc
or
lahf
lahf
pop
pop
sbb
btc
cwtl
lahf
jg
xchg
mov
or
fcoml
dec
cltd
loop
ret
cmc
push
jo
lea
dec
cmpl
sbb
subl
sbb
adcl
sub
leave
cmpsl
or
cmp
stos
pushf
in
xor
hlt
adc
xor
jge
out
mov
leave
aam
mov
jp
cmp
dec
arpl
lahf
scas
push
in
lret
lods
je
insl
pop
cmp
push
cld
inc
ljmp
call
adc
pop
xchg
cmp
dec
lcall
test
push
lds
aad
pop
mov
ss
out
in
adc
cld
negl
xchg
pop
out
pushf
sub
int
or
cld
repnz
arpl
jno
mov
cmp
ret
sbb
data16
out
inc
xchg
sti
notb
in
test
lds
xlat
fstpt
cltd
fstpl
dec
xchg
test
dec
mov
xor
or
dec
xchg
notb
inc
and
fistpll
xor
sbb
mov
fwait
mov
lcall
imul
ret
add
mov
adc
lret
lods
insb
rolb
ret
es
fidivs
sahf
mov
lods
mov
mov
mov
stc
jae
inc
jo
mov
push
adc
and
test
in
dec
sbb
repnz
sbb
or
test
xchg
enter
pusha
and
inc
sbb
push
icebp
lret
rcll
dec
jecxz
out
sti
insl
inc
push
dec
push
cli
jne
pop
pop
popf
mov
nop
repnz
rcrb
rclb
ja
ss
cmp
adc
sub
sub
xchg
sub
in
repz
jno
mov
dec
stc
jb
adc
dec
insl
jp
enter
pop
sub
jg
push
repnz
stos
sub
sub
and
out
mov
push
lcall
cwtl
mov
sbb
xlat
sbb
loopne
cs
call
js
loop
add
sub
ffree
cs
cmc
out
mov
cmp
sbb
mov
xchg
in
cs
imul
in
cmpsb
lods
loope
in
mov
mov
mov
sub
pop
jo
push
movsl
ds
mov
or
jl
sub
pop
dec
jge
xchg
jle
pop
add
sbb
loop
lock
lods
cmp
cli
enter
mov
xlat
ret
push
ret
mov
pushf
roll
sbb
les
out
leave
dec
leave
cmp
shlb
in
inc
test
pop
xchg
pop
lret
sbb
out
push
fwait
sub
lcall
fxch
outsl
out
stos
mov
inc
inc
cmp
ja
ret
mov
cmovg
sub
jle
les
adc
sub
popf
incl
lods
pop
or
cmp
mov
push
pop
pop
jge
stos
fisubs
mov
jb
cltd
fnstenv
and
sub
dec
push
pop
and
jl
sub
fs
pop
xchg
sub
mov
fmull
xor
and
dec
adc
rclb
loop
out
push
jo
aam
scas
push
loope,pt
push
js
jbe
loopne
add
jle
mov
push
push
das
test
xchg
sub
xor
adc
push
sbb
test
int
scas
adc
jo
ja
test
sub
mov
or
inc
in
shl
jno
jmp
out
push
pop
push
ret
es
sbb
sbb
mov
dec
dec
pop
mov
xlat
shlb
sbb
iret
popa
pop
stos
cmp
addr16
dec
cltd
insb
mov
sub
js
push
xor
loop
ret
adc
es
loopne
ret
adc
mov
pop
jns
movsb
dec
mov
and
loope
stc
mov
sbb
xchg
stos
inc
pop
push
ja
cmp
cmpl
pop
imull
inc
cli
or
xchg
push
nop
pop
add
push
fwait
cmpsl
shll
inc
push
cmpsb
jbe
call
bound
jle
xchg
enter
fdivl
dec
xchg
lcall
ret
sub
sbbl
dec
leave
fwait
push
iret
ficoml
out
ds
mov
dec
push
sbb
or
icebp
sbb
hlt
add
lds
insl
push
popa
ficomps
push
rclb
dec
mov
movl
add
adc
or
add
xchg
scas
mov
pop
jo
movsb
and
sbb
xlat
or
add
fsubr
loope
and
popa
shrl
cmp
out
cmp
aas
enter
push
mov
mov
sbb
enter
mov
je
mov
punpckhwd
xchg
roll
dec
aas
push
es
mov
js
dec
aas
outsb
fistps
outsl
jae
mov
rclb
xor
data16
cld
ss
aaa
add
cmpsl
cld
mov
push
cmp
xchg
faddl
and
pusha
inc
dec
ret
inc
xor
adcb
mov
cmp
inc
outsl
stos
ds
fwait
sub
sbbl
roll
stos
cwtl
ljmp
inc
sub
fdivrl
mov
mov
adc
imul
iret
dec
jle
pushf
dec
arpl
lock
hlt
sub
or
movsb
test
and
fildl
dec
add
sbb
mov
jo
cmp
outsb
adc
lret
add
pop
das
pop
aaa
movsl
out
shrb
add
in
add
les
push
xchg
mov
mov
ret
fldenv
or
cmp
cmpl
or
jmp
movq
xchg
xchg
push
push
xor
cmp
xchg
outsl
jge
cs
ret
pop
mov
mov
adc
call
mov
fistpll
lods
jne
adc
dec
mov
hlt
les
inc
in
inc
inc
je
fnstenv
dec
xor
and
cmp
xchg
sbb
push
jp
or
xorb
faddl
leave
cltd
sub
mov
fidivl
fucomp
call
mov
loop
mov
jae
lcall
subb
lret
lahf
scas
push
ds
insl
enter
aas
outsl
mov
inc
lods
jle
sbb
clc
ret
xor
popa
jno
xchg
inc
sbb
popf
adc
nop
push
mov
ljmp
mov
inc
mov
lock
jnp
cmp
mov
dec
push
mov
call
cmpsl
mov
pop
test
out
add
xchg
out
xchg
gs
sti
xchg
std
stos
es
sbb
pop
loopnew
mov
pop
std
mov
sbb
hlt
or
lahf
pop
jg
out
and
mov
imul
xchg
add
push
enter
lea
subl
ds
test
add
es
or
addr16
movsb
pop
jmp
imul
mov
sbb
aam
stos
je
mov
ljmp
repz
addb
scas
mov
icebp
leave
push
sbb
arpl
sub
mov
outsl
mov
sub
push
sub
mov
ds
pop
aaa
jecxz
cmp
rclb
movsb
and
repz
push
jb
or
jbe
in
addr16
frstor
mov
add
addl
jne
imul
outsb
daa
lret
cltd
movsb
into
jl
jmp
jno
repnz
ror
das
imul
add
shl
adc
aaa
aad
fwait
aaa
js
and
add
jns
mov
sbb
das
inc
repnz
ret
sub
xchg
xchg
sbb
xchg
sbb
add
or
popa
add
pop
xchg
cmp
sub
aaa
mov
lcall
popf
jle
mov
iret
mov
fwait
cmp
ret
iret
push
push
dec
jmp
icebp
or
fs
cmp
loop
adc
cs
sbb
and
lret
dec
mov
mov
pop
pusha
fstpt
shr
fildll
mov
dec
fadds
push
xchg
ds
scas
fistpl
mov
dec
int3
mov
or
sarb
mov
pop
fdivp
test
xor
pop
mov
xor
inc
gs
repz
cmp
andl
loope
je
or
inc
push
loop
mov
sub
jb
fmulp
mov
sbb
stos
pop
sbb
stos
inc
pop
add
and
push
sbb
xchg
mov
dec
cld
add
push
mov
adc
enter
mov
and
call
pop
enter
lea
mov
cltd
xchg
xchg
sbb
adc
mov
mov
es
jno
ss
push
orl
imul
mov
and
push
mov
xchg
cltd
push
adcl
std
mov
stc
and
jno
cmpsb
lods
rorl
int3
imul
mov
lods
inc
daa
mov
es
sub
das
fidivrl
sbb
scas
js
out
dec
mov
sbb
and
test
xor
sub
mov
or
sbb
iret
push
push
inc
xor
mov
adc
test
rclb
cmc
push
mov
mov
rorb
sarb
rolb
push
push
push
and
in
cltd
ret
loopne
int
inc
push
cmp
add
pop
xchg
sti
scas
scas
aaa
test
mov
pop
movsb
xchg
jl
mov
pop
xor
enter
mov
or
aad
xor
js
lock
or
mov
shlb
cmp
xor
retw
mov
cmpsb
jae
hlt
out
or
cmp
cmp
icebp
xchg
add
sub
xlat
lds
int3
xor
adc
and
adc
push
lock
dec
push
cmc
in
into
rol
imul
push
sub
push
sar
leave
fcmovu
cli
aas
andl
push
sub
lcall
out
rolb
in
test
and
imulb
adcl
and
push
lret
dec
sub
push
jo
mov
repz
pushf
lods
or
lcall
out
add
nop
pop
mov
cmp
out
cltd
adc
mov
adc
sbb
aas
mov
cmpsb
in
adc
es
pop
add
gs
lcall
ds
and
in
insb
leave
jne
repz
jb
adc
adc
jo
cli
inc
mov
repnz
mov
cmp
adc
fwait
jo
add
mov
push
sub
xorb
mov
cwtl
or
out
push
push
out
dec
lret
pop
cld
fidivs
jb
je
scas
xchg
jne
in
xorb
outsb
mov
arpl
add
or
lds
xchg
pushf
out
enter
sbb
inc
push
clc
stos
lods
out
test
cwtl
and
aam
push
je
popa
xchg
icebp
shll
dec
jns
stos
movl
push
mov
popf
aas
cmp
dec
lds
int3
jne
and
xchg
mov
push
std
test
rcrl
fmulp
jle
push
sub
sbb
jbe
in
inc
loope
imul
div
arpl
xchg
push
stos
mov
sbb
push
cmp
cs
mov
jmp
cld
mov
fwait
cmpsb
dec
jo
push
push
jb
lods
push
inc
sub
push
or
xor
pop
hlt
test
cmp
lds
xchg
gs
insb
pushf
shrl
pop
inc
das
inc
mov
and
jnp
mov
cwtl
iret
inc
mov
and
cmp
mov
sub
sbb
test
aaa
aaa
outsl
lahf
test
xor
dec
cli
mov
inc
sbb
mov
icebp
in
xchg
movsb
outsb
inc
test
push
xor
jge
icebp
adc
mov
fmul
dec
les
test
sub
dec
jecxz
fcoms
vpunpckhwd
adc
push
jne
sub
or
mov
test
insl
clc
loopne
jge
adc
add
pop
addr16
pop
and
push
aam
aam
filds
mov
loop
jo
mov
stc
and
pop
sub
pusha
adc
cmp
int3
jae
rolb
stos
adc
pop
mov
dec
in
jb
aas
fisubs
popf
dec
int
inc
pushf
xchg
ja
mov
dec
fadd
jno
cli
enter
mul
or
inc
into
aam
sub
lret
mov
jbe
xchg
xacquire
xchg
aam
sbb
adcl
test
rcll
int
aaa
mov
sub
mov
mov
jae
inc
test
dec
pop
jge
and
cmp
sub
mov
jo
inc
in
into
sbb
xor
test
jecxz
fcomi
pop
xlat
cmpsb
fbld
insl
scas
bound
ret
fcoms
jmp
lcall
inc
pushf
mov
jmp
and
icebp
jecxz
aas
mov
ret
mov
orb
lahf
or
aaa
dec
xchg
addr16
xchg
outsl
cmp
xor
ljmp
dec
push
pop
decl
in
call
mov
pop
push
ficompl
call
mov
xor
mov
mov
mov
xor
jg
in
xchg
mov
push
inc
mov
mov
sub
dec
fimull
xlat
pop
hlt
aad
into
fbstp
cmp
push
fcmovne
jne
dec
inc
iret
mov
inc
cli
mov
movsl
push
insl
test
or
jle
inc
mov
add
xchg
les
lahf
adc
ja
mov
scas
jo
inc
lret
in
push
scas
iret
ss
pop
decl
scas
jp
stos
mov
xchg
inc
outsl
nop
sub
lods
sbb
clc
inc
imul
movsb
xor
sahf
lea
xchg
dec
or
sti
xchg
arpl
cwtl
int3
stos
dec
mov
test
adc
repz
inc
xor
xor
adc
cmp
std
movsb
dec
jae
lock
mul
or
cmpsb
into
int
and
and
jge
mov
incl
leave
push
mov
dec
cmpsb
sti
push
pusha
mov
lea
in
in
cltd
add
push
cmp
jge
dec
sbb
pusha
mov
xor
sahf
adc
pop
mov
add
sub
pop
dec
xor
push
jb
mov
daa
and
aad
ss
sarb
out
jg
push
push
cltd
dec
xor
nop
pop
pop
addb
into
xchg
push
inc
lahf
push
xor
or
test
into
les
std
sub
inc
lock
or
mov
inc
mov
jmp
or
adc
xchg
call
xor
cltd
je
sbb
fnstsw
mov
jae
push
ja
loop
ja
push
jb
pusha
ds
push
cmc
pop
inc
ljmp
mov
mov
out
dec
cmp
jp
inc
mov
mov
enter
outsb
mov
and
xchg
std
sbb
or
in
xor
fists
cmp
cmp
jns
sub
sub
or
movsl
in
in
cmp
push
jb
sbbl
jbe
aas
js
sub
int3
fcom
lea
hlt
xlat
pop
ljmp
xorb
jmp
jbe
jnp
fs
dec
sub
les
adc
xor
cs
sbbl
insb
popa
je
and
ficompl
and
ret
pop
repz
cmp
inc
iret
jl
fbstp
or
mov
in
xlat
sbb
repnz
repnz
lock
mov
iret
and
shlb
enter
out
inc
data16
xchg
aas
mov
test
arpl
dec
ljmpw
xchg
sub
adc
dec
aam
cmpsl
movsb
jp
in
mov
out
pop
insb
lahf
cltd
aam
test
gs
inc
sbb
lods
aam
inc
sub
das
scas
dec
sbb
jp
push
cmpsl
push
inc
es
mov
push
or
clc
jge
sbb
int3
movsb
daa
aad
sbb
or
mov
and
dec
ror
movsl
or
xor
and
xchg
data16
fisttps
cmp
push
aad
sbb
sub
cwtl
dec
mov
addl
addr16
aam
repz
leave
lds
dec
test
jns
and
outsl
adc
test
dec
inc
flds
adc
mov
repz
push
pop
cmc
je
mov
popa
mov
lds
or
sbb
mov
push
jle
push
add
int3
cmp
test
jge
pop
mov
lods
jmp
dec
nop
dec
ja
xchg
sahf
push
push
and
jp
dec
pop
pop
lret
popa
push
push
in
dec
jl
cmp
push
inc
mov
sbb
cmp
xor
jae
addr16
xor
movsb
adc
sbb
out
mov
inc
leave
mov
mov
xor
scas
and
and
sub
stos
dec
or
xchg
fdivr
int3
in
test
dec
pop
inc
push
mov
cmp
nop
enter
lods
mov
jecxz
jnp
mov
fwait
xchg
jnp
jae
mov
push
mov
mov
aad
jae
not
aas
mov
sbb
xor
orl
lea
loopne
inc
scas
fld
cmp
jecxz
lret
or
xchg
stos
movsl
pop
add
pop
pop
or
into
out
cmp
mov
pushw
dec
inc
dec
dec
xchg
xor
scas
stos
push
jnp
scas
jle
ja
mov
ror
fsin
rcrb
shrb
sub
push
clc
mov
xor
dec
clc
mov
out
sub
mov
pop
inc
add
and
fnsave
xchg
dec
out
scas
add
adc
cli
lcall
jmp
imul
dec
into
mov
shll
idivl
dec
pop
mov
adc
mov
iret
inc
repz
push
jmp
cmpsb
aaa
mov
nop
xor
jmp
pop
push
out
sbb
stos
ja
xor
dec
pusha
jae
sti
pop
or
mov
jmp
cmp
fwait
xchg
mov
xor
dec
test
push
xchg
imul
mov
popa
dec
jl
fidivl
stc
push
mov
pop
cmp
xor
sbb
adc
jns
scas
dec
jge
xor
std
cmpsb
sbbl
mov
fucomi
or
int
xor
push
jbe
jbe
inc
iret
fidivrs
ret
stc
fistl
cmc
lcall
xchg
and
out
ja
repz
pop
inc
daa
les
std
xchg
xchg
xchg
and
or
test
inc
inc
push
push
add
cmp
dec
inc
mov
mov
xor
mov
aas
mov
and
call
pusha
inc
in
mov
mov
insl
lds
jnp
mov
mov
fnstsw
jno
scas
jmp
lods
daa
stc
test
dec
xor
lds
mov
dec
sub
jle
mov
dec
cmp
daa
outsb
pop
jp
pushf
addr16
leave
lds
sti
xchg
lods
int3
and
add
test
lahf
push
fisubl
pop
sub
cmpb
mov
in
aas
push
aam
pop
mov
sub
jne
xchg
inc
popa
dec
pop
add
hlt
adc
stos
out
xchg
out
push
cld
push
add
mov
dec
ds
ds
cmp
dec
xlat
aas
sbb
stos
xchg
push
mov
xor
movb
xlat
bnd
mov
xchg
xchg
sub
stos
cmpsb
sbb
push
lods
repz
aas
sub
js
xor
lret
in
cmp
lret
insl
push
cwtl
xchg
or
lret
push
push
mov
ret
rol
mov
stc
sbb
push
bound
mov
mov
jmp
pop
loop
fucom
lcall
outsb
in
push
push
ss
jbe
xchg
lock
and
outsl
cmp
xchg
out
fiaddl
pop
sub
pop
xchg
rdtsc
sbb
xorl
loopne
rcrb
cs
inc
mov
shll
cmpsb
pop
outsb
clc
push
or
xchg
loopne
gs
mov
add
testb
outsl
mov
rorl
pop
push
or
addb
stos
dec
add
ret
inc
fildll
xchg
daa
repz
mov
mov
movntq
out
int
insb
inc
sub
sub
pop
in
adc
stc
leave
fiadds
push
or
out
jecxz
call
push
cmc
push
xor
fs
pushf
roll
xor
je
xchg
add
loopne
cwtl
and
sub
push
and
jmp
fisubrl
push
mov
add
lds
in
sub
imull
ds
inc
cltd
cmp
jle
loop
pop
aad
je
mov
cmp
mov
rcrb
movsl
js
je
out
out
popf
aad
push
sub
cld
sbb
push
cmc
dec
pop
mov
lahf
mov
mov
movsb
outsb
mov
jp
pop
lock
repnz
pop
sbbb
hlt
or
test
fs
lret
into
jns
or
stos
popf
jb
add
inc
adc
lret
adc
scas
mov
test
xchg
or
mov
xor
xor
mov
mov
das
sahf
cwtl
or
cmpsl
jge
movsl
xor
repz
or
aaa
pop
sub
lea
scas
cltd
test
xor
jae
loopne
fdiv
and
dec
mov
repnz
mov
test
outsl
repnz
sub
jge
mov
call
aam
mov
xor
xchg
in
pcmpeqw
mov
leave
push
fildll
adc
movsb
scas
rcr
call
mov
xchg
pop
pop
inc
mov
adc
and
cmp
push
jno
cmp
xor
xor
jns
pusha
fs
stos
jb
ss
pop
push
aas
fs
aas
push
in
icebp
outsb
or
test
movsl
int
sub
push
addr16
pop
jmp
xchg
cmp
stc
jbe
mov
xchg
or
sbb
cli
cltd
push
nop
aad
jno
ficomps
shlb
je
mov
in
mov
fldl
sbb
call
jae
out
adc
test
pop
outsl
out
das
push
sub
sti
inc
lret
test
scas
xchg
inc
aad
xor
je
imul
mov
sbb
jo
push
in
lock
mov
call
gs
jnp
fcmovb
cmp
lret
stc
data16
add
jo
push
popl
inc
rcr
fwait
ljmp
fistpl
jnp
xorl
imul
shl
pop
or
cmc
add
rcrl
inc
shr
loopne
mov
adc
mov
lcall
cmp
loope
addr16
push
enter
xchg
fdivrl
xchg
ja
mov
gs
in
mov
sub
outsb
in
les
ds
testl
ret
pop
loopne
sub
ja
inc
fldcw
test
sub
add
or
and
mov
movsl
mov
mov
insl
pop
fsubrs
inc
je
enter
arpl
mov
sub
xchg
xchg
pop
push
push
xor
mov
push
jae
leave
scas
imul
mov
add
mov
sbb
test
mov
jmp
xor
loop
out
push
into
inc
test
or
pop
and
mov
mov
ret
mov
insb
xchg
nop
cli
lods
xorl
or
and
push
xchg
xchg
xor
pop
cmp
push
push
repnz
xchg
pop
or
test
sbb
mov
lahf
inc
mov
jp
cmp
or
push
jnp
cmp
mov
push
xor
jl
je
jecxz
imul
pop
dec
rorb
outsl
aaa
inc
fstl
jp
pop
ds
mov
pop
js
aad
pop
jo
cwtl
leave
mov
out
adc
pmaddwd
dec
mov
inc
xchg
fdivl
push
xor
sarb
rclb
sti
or
mov
xchg
dec
movd
add
push
mov
dec
add
add
pop
xchg
mov
mov
insl
jo
mov
xchg
jg
xor
addl
lods
mov
jns
shlb
or
ljmp
scas
mov
pop
insl
pop
test
inc
pop
lret
jle
shlb
jg
repnz
in
lahf
mov
in
in
add
dec
pushf
fstps
mov
add
ljmp
out
dec
popa
sbb
adc
daa
clc
pop
ja
and
inc
ss
stc
je
jl
pop
jno
daa
add
add
mov
std
sbb
pop
loopne
add
mov
fidivrl
test
add
fcomps
adc
dec
or
sbb
mov
fwait
mov
ret
cmpsb
pop
mov
je
sub
pop
in
sub
je
adc
xchg
pop
enter
add
inc
xchg
sub
call
mov
or
jno
pop
mov
lret
add
dec
sbb
scas
sahf
xor
cwtl
test
inc
arpl
aas
sbb
dec
add
cmp
or
call
out
jne
add
test
je
cmp
outsl
fwait
and
mov
sbb
test
inc
cmp
sbb
dec
xor
pop
inc
fdiv
loop
fdivrs
pop
aam
and
sbb
int
xor
dec
scas
loopne
mov
jns
adc
jmp
inc
addr16
adcl
cmpsl
sti
pop
in
mov
jl
xchg
cmp
fisubrl
push
xor
shrl
cltd
mov
sub
cmp
mov
dec
daa
add
mov
outsl
dec
pushf
sub
in
ficompl
in
jno
dec
xchg
push
adc
es
mov
orl
mov
push
loope
cld
shll
in
out
fldenv
shr
popf
rorb
out
popa
insl
js
xor
or
mov
sbb
dec
xchg
xor
movsl
mov
mov
or
inc
stos
xor
sub
imul
jecxz
mov
adc
movsb
lret
mov
imulb
cld
das
xchg
dec
lcall
mov
cmp
pop
cmp
nop
les
jo
xlat
adc
dec
and
mov
les
call
sahf
cltd
pop
imul
mov
ret
or
push
sbb
push
sub
push
movsl
les
adc
jmp
and
out
test
js
sar
insb
cwtl
pop
daa
rcrb
pop
xor
fsubl
inc
lret
aad
inc
loop
inc
loope
jle
stc
and
in
mov
xor
or
in
cltd
mov
jmp
mov
lahf
adc
test
mov
in
jp
mov
adc
aas
xorb
and
mov
aaa
pop
pop
add
or
mov
push
cmc
lcall
or
sbb
into
lods
inc
lcall
inc
push
fldenv
xor
dec
pop
sbb
jecxz
mov
lock
sbb
in
fnstenv
inc
stc
mov
inc
lret
cmp
cli
fidivrs
cwtl
pusha
shll
fildll
lret
mov
rcrl
lcall
push
int3
int
xor
in
mov
sbb
inc
aas
dec
add
loop
je
out
mov
ret
mov
sbb
cwtl
fisttps
push
pop
cs
dec
negl
add
sbb
out
dec
push
test
jecxz
lods
jb
lock
cmpsb
ljmp
int3
push
es
inc
js
jb
and
and
jge
in
lods
pop
and
mull
mov
mov
or
cmp
dec
sub
cmp
es
bound
inc
js
inc
jmp
pop
nop
rcll
rolb
pop
dec
shl
fs
loopne
mov
pop
or
xor
cmp
add
das
mov
pusha
sub
imul
and
xchg
cmp
shll
jno
fcomps
cmp
in
test
loop
mov
mov
xorb
dec
subl
subl
enter
adc
mov
xchg
scas
jg
xchg
xlat
xor
cld
sti
in
clc
xchg
xor
jno
mov
lock
fxch
mov
rol
rcll
xor
enter
lods
shrb
loope
sbb
shrl
adc
ror
shlb
mov
out
gs
sti
enter
test
mov
add
push
or
cwtl
lods
jbe
inc
rorl
mov
and
jno
jl
sbb
lret
data16
out
xchg
jns
mov
mov
out
lods
aam
lods
xlat
cmp
flds
test
add
lea
and
pop
cmpsb
ja
pop
mov
jo
or
jg
iret
shrb
lcall
mov
popf
pop
add
mov
test
dec
loope
add
fimuls
repnz
add
or
adc
js
sahf
movsl
sub
mov
adc
test
insb
and
jle
test
mov
push
lods
imull
test
clc
add
sbb
je
or
pop
sarb
pop
inc
cltd
adc
call
shll
mov
or
adc
leave
add
mov
inc
sarb
scas
push
pop
pop
pop
loop
out
lods
cmp
fwait
in
mov
xchg
scas
in
mov
cmp
popa
lcall
lock
jg
mov
sahf
in
pop
mov
mov
or
fadds
insl
fs
mov
cmp
bound
imulb
mov
push
push
inc
and
je
in
insl
xchg
xor
xchg
outsb
mov
push
xchg
sbbl
or
movsb
mov
pop
sub
jne
pop
mov
sahf
pop
testb
popfw
mov
mov
xchg
mov
les
push
xor
dec
mov
sub
ljmp
xor
adc
sub
divb
adc
jp
xchg
roll
or
sti
orb
xchg
addl
add
insl
fidivrl
jae
hlt
insb
nop
test
ret
push
pop
pop
fdivl
cmpsl
mov
ds
and
test
cmpsl
push
cs
and
push
add
shl
or
sbb
jne
push
jne
cmp
movsb
jbe
push
mov
in
popa
cmp
shrl
gs
xor
ss
inc
push
inc
shrb
or
sbbb
mov
shlb
inc
push
or
push
add
pushf
cmp
mov
cs
push
or
xor
sub
jge
push
jo
mov
subb
dec
and
push
pop
and
pop
adc
xor
negl
adc
jnp
mov
pop
mov
pushf
jns
inc
fiaddl
cmp
filds
popa
test
push
hlt
xchg
in
orb
ret
dec
push
clc
in
clc
stos
xchg
aas
push
inc
dec
mov
adcb
mov
mov
ret
add
sub
or
cs
movsl
dec
cmp
xor
ret
outsb
push
xchg
call
push
cwtl
mov
inc
inc
adc
jo
cmp
lcall
pop
sbb
fwait
dec
sbb
jns
out
stos
jns
cmp
mov
mov
idivb
push
movsb
hlt
mov
adc
dec
pop
xchg
sbb
in
jle
call
push
sub
add
dec
adc
sbb
andl
pop
mov
subl
mov
fnstcw
test
rcrl
not
int
in
push
out
push
mov
adc
outsl
cltd
jne
xchg
adcl
dec
fisubl
out
data16
jno
jno
gs
icebp
jbe
lods
lcall
push
sbb
jae
jecxz
lcall
pop
xlat
add
dec
inc
mov
push
jns
lock
cltd
xor
xor
mov
scas
rcr
fxch
clc
jae
leave
fnsave
cmp
mov
add
sub
cmpl
inc
fistpll
add
sub
ret
mov
inc
xor
aas
loop
inc
jp
js
ret
inc
pop
xchg
int
ror
popl
dec
xchg
es
movaps
das
mov
stc
faddl
insl
sbb
mov
xchg
pop
push
xor
mov
and
imul
test
jp
fdivs
je
mov
push
and
jecxz
mov
jmp
cmp
sarl
pop
cwtl
cld
mov
in
fwait
js
fdivrs
js
fnstsw
mov
clts
out
icebp
xchg
ss
std
add
pushf
pop
adc
jno
pop
stos
and
int3
imul
lods
and
add
pop
cmpb
rcr
in
sbb
jecxz
xor
sbbl
repnz
cs
xlat
lret
popa
fs
insl
int
mov
xchg
xchg
pop
fwait
mov
sbb
xchg
jne
dec
cld
and
jb
jp
dec
pop
lods
adc
scas
mov
add
stos
mov
negl
dec
mov
in
xor
cmp
adc
sbb
loop
push
xor
out
negl
hlt
sub
push
icebp
movsl
lcall
cs
jmp
or
clc
mov
xor
pusha
jle
xchg
daa
sub
stos
ret
pop
inc
pop
inc
aas
pop
mov
bound
loope
mov
mov
movsb
mov
cmovnp
popa
ljmp
test
add
fimuls
add
cmp
jge
pop
ret
nop
mov
aad
mov
das
xchg
add
xor
xor
cmp
xorl
or
je
je
loope
adc
adc
icebp
xor
mov
add
lahf
lock
nop
jae
jmp
aam
into
inc
shrb
cmp
jle
add
lea
mov
sub
ja
push
mov
adc
fidivs
testb
mov
sbb
lods
decb
jl
rcll
and
add
mov
push
lret
shl
push
xor
jecxz
jo
mov
mov
mov
outsl
inc
push
mov
mov
stos
xor
jne
push
mov
and
mov
enter
aad
jle
and
push
sbb
push
ds
fiaddl
add
push
pop
jecxz
xor
lcall
pop
sbb
movb
inc
outsb
sbb
shlb
popa
fwait
sarl
in
push
icebp
iret
cmp
sub
pop
push
call
aad
jg
dec
or
out
ret
xchg
ja
dec
adcl
aaa
mov
cmp
negl
bound
xchg
xlat
jno
test
pop
rorb
imul
test
mov
sbbb
mov
inc
ljmp
dec
test
call
xor
mov
ljmp
fisttpll
clc
ss
add
jl
dec
in
fnstsw
cli
sbb
inc
xor
xor
dec
aam
xor
lcall
xchg
arpl
dec
sahf
jg
out
mov
dec
pop
mov
add
adcb
out
xchg
mov
lret
shlb
shlb
in
loopne
or
mov
jp
lock
jmp
xchg
repnz
jecxz
and
pop
xlat
sbb
fldl
loopne
das
out
add
test
sbb
int
shrl
mov
idivl
push
inc
scas
outsl
add
xchg
pop
ficoml
aaa
sarl
pop
ret
xchg
push
cmpsl
ljmp
inc
push
cmp
cmpl
jmp
add
out
jecxz
mov
call
fs
pxor
addr16
sbb
jl
jns
fucomip
ret
cwtl
arpl
loop
dec
insl
loop
add
jbe
jae
arpl
pop
lock
in
clc
daa
jmp
inc
icebp
int3
inc
cmpsl
arpl
hlt
xlat
xlat
faddl
push
or
test
xchg
and
mov
pop
cmp
pop
sub
xchg
xor
sbb
fdivrs
sbb
push
loopne
add
imul
fsubs
cmc
aas
xchg
inc
dec
jecxz
lret
adc
jge
jbe
lcall
add
imul
aas
hlt
push
or
fcoml
pop
fisttps
mov
or
xor
bound
inc
cwtl
inc
outsb
insl
push
in
mov
cmp
fstp
nop
ja
push
adc
xor
int
push
popa
sbb
add
das
scas
xchg
sub
mov
lret
in
inc
ds
adc
das
nop
scas
movsl
jbe
xchg
jne
push
pop
or
xchg
jp
sbb
mov
repnz
jno
bound
sarl
imul
cmp
out
test
jo
mov
jp
sbb
mov
jge
sbb
in
jg
out
loop
outsl
lock
cmp
mov
jnp
nop
add
stos
or
mov
pop
packssdw
out
lcall
je
jle
sub
adc
sub
test
dec
in
fidivrl
lods
dec
mov
jge
mov
mov
es
fs
pop
ret
popl
mov
insl
or
int
xchg
lahf
xlat
arpl
inc
sbb
sbb
or
adc
mov
lret
wrmsr
jl
mov
fwait
sub
stos
mov
hlt
jg
cmp
fnstcw
fdivr
jl
or
ret
leave
add
imul
push
jmp
dec
frstor
jns
push
jae
sar
std
lods
insl
push
fs
mov
jl
leave
xlat
ds
mov
xor
fcompl
inc
loope
mov
repz
and
xchg
std
jb
or
iret
notl
bound
daa
xor
cwtl
popf
in
jnp
add
stc
gs
jecxz
es
xchg
ret
jmp
mov
jmp
adc
and
movsb
jle
fiaddl
mov
dec
mov
in
dec
dec
test
xlat
sti
je
outsl
scas
gs
mov
cli
insl
inc
shrl
hlt
idivb
add
xchg
mov
mov
xchg
xor
negl
dec
xchg
xchg
mov
stos
xchg
hlt
cmp
xchg
fidivs
push
sbb
int
icebp
mov
mov
mov
aaa
push
fisttpll
or
je
jecxz
into
mov
movsl
push
inc
outsl
iret
popa
push
addl
mov
push
lcall
lcall
adc
mov
lcall
enter
jmp
movsb
push
push
inc
xor
aaa
add
xchg
mov
lcall
jecxz
sbb
adc
mov
loopne
and
icebp
pop
cmp
clc
mov
pop
pop
imull
fmuls
rcrb
dec
popf
rcrb
xor
je
mov
add
jo
repz
sbb
xor
inc
mov
xorl
lahf
movsb
jae
add
mov
cmp
add
enter
pushl
push
push
imul
popf
push
outsb
mov
or
shrb
xchg
rolb
xor
dec
mov
es
jl
and
mov
inc
adc
sbb
faddl
jle
addb
xchg
lret
pop
ret
lahf
add
mov
jge
xchg
pop
in
sub
call
mov
outsl
adc
outsl
rcrb
or
adc
mov
outsb
pop
xchg
sub
mov
xchg
aad
inc
fdivs
jp
jb
xor
test
fs
sub
adc
jno
and
push
push
fnsave
add
daa
pop
pop
fsts
fs
aam
shrl
shrb
add
mov
outsl
es
testl
adc
mov
movsl
mov
jmp
xlat
xor
movsl
dec
jecxz
scas
data16
test
mov
gs
cmpsl
rcr
into
enter
aaa
xor
inc
jnp
jp
ja
lock
ret
movsl
shl
xchg
fwait
xchg
stos
mov
ficompl
push
push
inc
dec
test
out
mov
pop
test
adc
inc
sub
and
rolb
push
scas
jno
or
mov
xor
scas
insl
shlb
fnstsw
mov
repz
in
push
daa
fisttpll
cmp
sbb
loope
incb
jg
ja
out
ret
shrb
mulb
mov
push
loop
push
pop
sub
mov
mov
dec
std
add
add
mov
sahf
rcr
cmp
loopne
out
lds
mov
add
or
fmulp
fidivrl
clc
stos
ja
insl
mov
repnz
pusha
sub
inc
xorb
and
cmp
jns
and
aaa
sub
movsb
jne
mov
jmp
xchg
or
hlt
mov
cmp
jnp
dec
repz
pop
sbbl
sbbl
outsl
fs
loope
dec
movsl
dec
mov
sahf
jne
ja
mov
fiadds
pop
or
sub
inc
jmp
and
pop
outsl
test
scas
pop
insl
aaa
sub
out
dec
adc
lds
arpl
cmp
mov
fimull
xchg
outsl
es
sub
sub
mov
xchg
inc
sahf
int
es
and
fldenv
lcall
cs
jp
leave
inc
neg
out
cmp
or
sbb
jp
sbb
pop
fdiv
push
addr16
sub
mov
sbbl
add
call
xor
sahf
ds
lods
cmp
adcb
cmp
jp
test
cmp
push
jmp
pop
shl
add
rcrb
cli
dec
mov
pushf
xchg
icebp
loope
xor
roll
push
mov
cltd
push
out
sbb
pop
aam
je
lds
ror
and
sahf
jg
aaa
push
xlat
int
fimull
movsl
pushl
add
sbb
jbe
bound
lcall
inc
pushf
loope
mov
cld
in
push
mov
loopne
dec
insb
add
pop
scas
stos
cs
adc
xor
div
addr16
jb
mov
xor
or
and
xlat
and
cli
ss
xchg
pop
insb
sbb
test
xchg
imul
pop
cmpsl
mov
ret
cmp
dec
in
scas
hlt
cs
sahf
sub
arpl
cmp
cld
loop
jne
sub
mov
xchg
and
and
js
in
xchg
lods
adc
push
lods
pop
mov
aas
cmc
cmp
jp
jl
pop
loopne
lret
fistl
pop
mov
xchg
insb
ja
and
xor
imul
dec
mov
jl
lcall
out
out
sbb
addr16
mov
push
mov
js
in
in
stos
hlt
mov
xor
loop
scas
or
ds
cmpsl
addl
cmp
loop
outsl
mov
pushf
in
mov
or
fstp
pop
icebp
in
sbb
je
sub
or
cmp
jmp
les
or
rorb
jecxz
mov
int3
stos
cld
push
mov
sbb
push
jp
add
ret
test
out
push
bound
fildl
sbb
xchg
loopne
sub
test
imul
pop
push
dec
popa
pop
rcr
mov
xchg
negl
int3
mov
mov
and
cwtl
add
xchg
dec
imul
dec
int
popf
pusha
sbb
adc
lcall
dec
sub
pop
fs
gs
dec
sbb
icebp
mov
adc
lcall
stos
out
inc
pop
outsb
push
mov
test
mov
outsb
ficoms
fsqrt
cmp
sbb
inc
jae
and
mov
repz
dec
push
hlt
dec
fnstsw
sub
andl
mov
jbe
xchg
fwait
or
xlat
inc
mov
or
jge
mov
adc
adc
pop
pop
imul
sub
inc
aas
sahf
mov
arpl
mov
jb
sbb
jmp
push
outsl
or
push
mov
out
cs
fdivrs
ror
push
xchg
pop
mov
pop
mov
dec
push
inc
pop
inc
shrb
ror
mov
xor
push
cmpsb
push
mov
cltd
adc
loop
mov
arpl
ja
dec
movsb
push
leave
cltd
std
push
test
movl
scas
iret
test
stc
xchg
lods
jnp
jns
out
cmc
loope
into
fisubrs
mov
pop
xor
lret
or
push
dec
push
jmp
jp
das
and
xchg
lock
test
insb
sub
repnz
mov
cmpb
hlt
int3
repz
out
fdivs
dec
jae
adc
in
adc
decl
add
cmp
aaa
xor
push
inc
andl
push
psadbw
xor
imul
mov
dec
push
repz
sbb
fisubrs
sbbl
cmp
sbb
mov
movsb
sub
repnz
cmc
add
jp
mov
mov
rcrl
jl
sti
mov
das
out
xchg
xlat
ret
mov
movsl
aam
mov
ds
fsin
inc
push
aad
ficompl
pop
pop
mov
test
ds
push
test
es
and
mov
fiaddl
xor
repz
inc
test
push
sub
ja
movb
mov
xor
test
xchg
stc
packssdw
popf
ss
insl
sarl
push
pop
lret
or
push
jmp
cmp
xchg
test
dec
xlat
orl
add
adc
cwtl
ret
aaa
lock
lea
add
push
cmc
xor
push
mov
aas
lcall
iret
xor
add
es
fidivrl
loop
iret
iret
test
xchg
mov
cmp
pop
or
shlb
push
jne
dec
jle
daa
sahf
jb
mov
pop
mov
or
rcr
push
and
in
andnps
and
int3
jmp
clc
fimuls
mov
adc
inc
cmc
pop
xchg
inc
mov
push
sarl
gs
dec
sbb
cmp
mov
inc
out
das
push
jp
lcall
xor
jge
fdivrp
jae
xor
and
dec
call
adc
ret
mov
icebp
fisubs
jle
movsl
mov
in
out
mov
jl
insl
inc
pusha
mov
mov
mov
push
subl
sub
rcrl
popf
xchg
pop
stos
jno
gs
mov
jb
xor
sahf
sbb
in
pop
mov
ret
push
cmc
xor
push
call
xor
mov
add
mov
insl
jecxz
out
test
mov
sub
pop
mov
pop
int3
or
in
adc
mov
ret
js
inc
inc
jmp
loop
cmpsl
mov
adc
les
push
scas
cmp
xchg
test
dec
inc
leave
dec
inc
cld
jns
cli
cmpsl
aas
dec
xor
inc
xchg
not
in
jno
jmp
and
subb
lahf
or
inc
lret
push
ret
xchg
es
movsb
cmp
jmp
push
inc
xor
add
and
xor
sarb
mov
clc
in
gs
ja
pop
mov
movl
les
push
adc
lods
stos
add
lcall
ficoms
negl
mov
mov
xorl
shl
jecxz
add
sub
and
rolb
into
or
push
push
xor
cwtl
push
cs
leave
in
or
push
gs
xchg
negb
test
xor
mov
add
sarb
inc
dec
mov
add
xor
dec
cli
inc
mov
cmp
lock
push
pop
sub
orl
or
jbe
dec
imul
aad
and
mov
cltd
fisubrl
cld
push
cmp
inc
dec
mov
or
outsb
xchg
xchg
pop
aad
jle
xchg
dec
dec
push
andb
fwait
pop
sbb
lahf
mov
gs
inc
mov
ljmp
mov
lods
sub
pushf
cmp
iret
jb
jp
sarl
arpl
sub
std
aas
out
pushf
dec
push
pop
jno
dec
pop
out
movsb
cli
cmp
xchg
fstpt
jnp
sahf
js
ja
pop
sbb
mov
dec
ja
mov
sub
repz
pop
mov
inc
or
in
mov
js
stos
out
ficompl
jg
orb
adc
cmpsb
movsl
pushf
inc
dec
in
sbb
xchg
jle
test
out
xor
or
sahf
add
gs
inc
mov
ja
imulb
jae
push
dec
adc
das
jne
adc
jge
mov
test
mov
and
imul
mov
cmpsl
cltd
aam
clc
repz
shlb
mov
pop
leave
inc
out
push
mov
xchg
sub
sahf
dec
xor
jbe
jo
imul
cmp
test
mov
mov
inc
xchg
cmpsl
stos
xchg
jnp
mov
xor
mov
dec
push
push
addr16
push
pop
and
dec
subb
sbb
roll
push
dec
xchg
push
xlat
jp
aam
aam
cmp
add
xor
mov
nop
push
ret
xchg
xchg
stos
jecxz
out
or
mov
aaa
out
out
out
cmpsb
in
es
in
cltd
dec
xchg
jb
mov
mov
inc
push
jle
lcall
test
insb
movsb
loopne
iret
pop
mov
loop
mov
mov
shl
lods
leave
sti
add
adc
ret
gs
inc
mov
mov
sub
pop
mov
mov
mov
bsf
movsb
movsl
call
push
xchg
xor
xchg
inc
das
jbe
mov
fisubrs
mov
in
push
das
mov
jo
lret
push
and
cs
mov
or
xchg
inc
stos
xor
mov
jmp
nop
push
adc
out
out
stos
jns
nop
cli
test
mov
push
mov
jns
mov
fcoml
pop
fildll
pop
xchg
stos
shll
jnp
xchg
dec
out
icebp
dec
stos
cmp
fcomps
push
xchg
jl
lock
add
mov
dec
cmp
sbbl
jl
imul
cmpb
mov
sbb
hlt
xchg
sarl
ja
test
mov
sbb
sbb
aam
leave
jp
lods
repnz
jne
or
cmp
mov
mov
xor
xchg
or
test
in
mov
in
cli
sahf
stos
jo
cmpsb
stc
flds
popa
pop
push
xchg
sahf
out
sub
or
jp
outsb
cld
rcrl
pushf
or
lret
out
test
repz
rorl
and
arpl
ret
pop
stos
mov
xor
out
dec
test
xlat
pushf
mov
pop
pushf
jbe
adc
xor
xor
popa
jge
iret
imul
inc
add
loopne
test
movsb
adc
or
cmp
push
jmp
popa
cli
sbb
add
mov
int3
gs
movsl
sbb
jnp
out
jmp
sbb
cld
xchg
dec
leave
jno
add
aas
andb
dec
mov
aam
adc
shrb
add
gs
inc
fwait
cmp
and
push
insb
flds
nop
dec
in
sub
fisubl
jmp
out
arpl
test
loope
sub
xchg
test
insb
add
sahf
lock
fcomps
aam
in
pop
adc
dec
xchg
cwtl
and
jmp
in
push
test
andl
mov
iret
mov
enter
add
inc
xchg
lea
test
call
cs
push
sarl
test
sub
ljmp
jbe
nop
out
and
inc
pop
push
mov
call
cmc
movsb
adc
inc
movsb
fldcw
mov
and
stos
int
dec
and
jle
add
xchg
cmp
add
mov
fldcw
ret
cld
mov
mov
push
jns
ret
fdivl
adc
adc
add
and
inc
xor
or
fs
sub
push
hlt
mov
xlat
push
xchg
dec
packsswb
add
frstor
das
xchg
ror
enter
enter
mov
cs
jbe
call
push
sarb
xchg
incb
lock
movsb
addl
mov
jo
mov
inc
je
push
sbb
gs
call
vmwrite
call
adc
in
or
inc
in
and
mov
xchg
sbb
mov
outsb
iret
loop
adc
or
mov
mov
lods
les
cld
lods
rcrb
xorb
dec
mov
jbe
bound
mov
addb
test
dec
les
mov
cmp
xchg
push
mov
gs
je
mov
ret
out
mov
es
scas
and
pop
sub
jl
adc
add
pop
mov
push
daa
daa
test
jae
subb
addb
or
ret
xchg
inc
cmp
gs
negb
movsb
cmp
lret
inc
or
inc
mov
aaa
enter
cmp
adc
sub
femms
dec
clc
pusha
sbb
xlat
pop
xor
mov
or
mov
je
pop
rclb
mov
nop
fs
xchg
xor
dec
mov
push
movsl
and
jnp
jmp
xor
int3
inc
data16
jge
jo
stc
insb
aad
leave
insl
stos
pop
mov
pop
xchg
xchg
adc
pop
inc
xor
ret
xchg
or
dec
push
js
hlt
and
mov
lods
movb
leave
xchg
inc
cmp
lret
pop
fs
jmp
mov
pop
jecxz
xchg
into
inc
faddl
sbb
nop
mov
rcrb
hlt
lock
int3
cmpsl
xchg
mov
xor
movsl
xchg
addb
cli
push
orb
test
dec
loop
insb
mov
dec
mov
ret
pop
out
push
stos
dec
popf
pop
fldl
push
inc
fistpl
xor
lods
add
adcb
xchg
jp
push
push
sub
ret
sub
pop
loop
sbb
cmp
push
sub
into
adc
push
adc
mov
xor
inc
cmp
loop
and
out
jmp
mov
add
cli
push
push
adc
les
notl
dec
mov
sbb
insb
stc
jns
and
jmp
mov
in
pop
aas
cwtl
mov
or
and
movsl
sti
icebp
mov
arpl
ret
jecxz
fwait
shrb
test
leave
dec
clc
dec
push
adcb
push
sub
mov
repz
pop
push
std
mov
lret
dec
pop
cmp
ljmp
aad
cltd
jae
xchg
push
sbb
xor
xor
jmp
pop
sbb
cmc
mov
or
aam
cld
imulb
mov
decl
popf
into
sbb
cmp
or
and
or
movsb
fbld
mov
pop
xchg
adc
jg
jno
push
jg
lret
jg
jecxz
out
andb
dec
pop
or
add
cld
push
pop
jp
pusha
ret
stos
push
mov
cwtl
mov
push
mov
add
insb
or
push
pop
or
aam
and
jno
jl
xchg
sub
orl
or
adc
mov
jecxz,pt
inc
xchg
movsl
inc
popf
xchg
das
mov
xor
aam
xchg
add
xor
jg
jb
fidivl
out
and
fdivs
sahf
xor
pop
pop
sarl
stos
xor
sbb
mov
jno
mov
in
ret
pop
push
jno
and
dec
pop
push
push
shrb
das
pusha
push
mov
xor
fistps
mov
jmp
in
dec
and
lods
xor
mov
dec
js
cmp
push
xor
scas
push
fstpt
insb
mov
jb
mov
movsb
or
cmp
adcb
sub
cwtl
pop
and
lds
das
fs
and
push
imul
mov
xchg
add
adc
xor
adc
jecxz
aad
int
fldz
or
fiaddl
sub
fsubl
inc
mov
aam
pop
pop
lea
outsl
jmp
xor
pop
jp
imulb
clc
dec
inc
mov
xor
fldt
xor
cltd
jae
xor
sub
jnp
add
lods
rclb
into
xchg
aam
cmp
test
arpl
ja
loop
movsb
sub
fnstsw
negb
jge
mov
cmp
mov
xchg
outsl
lds
add
ret
out
aas
test
fsubl
stc
adc
out
aas
imul
in
mov
mov
mov
jle
pop
scas
jg
sbb
add
rcr
xchg
or
xor
cmpsl
dec
movsb
ret
inc
repnz
pop
inc
roll
xor
cli
test
sbb
xchg
sbbb
sbb
pop
mov
sub
mov
inc
jmp
jb
ret
or
sub
add
addl
xorb
lcall
scas
xchg
icebp
loop
cmp
inc
dec
scas
faddl
shlb
sub
jmp
mov
pushf
test
shll
cmp
mov
scas
mov
ret
inc
xor
ret
cld
adc
jle
lcall
dec
daa
fbstp
int
pop
and
dec
cmp
xchg
dec
enter
or
push
mov
xchg
pushf
mov
push
push
or
test
cmp
add
or
sbb
test
or
add
movsl
in
stc
jno
adc
out
popa
or
mov
dec
insb
cld
xchg
pop
in
test
pop
leave
in
add
xchg
sub
xchg
inc
imul
in
pop
mov
andl
sub
mov
pop
jo
roll
out
les
lret
addr16
jnp
fimuls
xchg
sub
or
mov
and
repnz
inc
and
xchg
xor
fbld
cmp
ds
pop
in
adc
int
nop
mov
jbe
cmp
or
adc
out
mov
shlb
xor
in
dec
lret
xor
pop
pop
sub
fists
cld
mov
push
xor
das
repz
adc
hlt
mov
mov
jp
dec
add
lahf
adc
int
pop
loop
es
push
les
int
xchg
xchg
xor
cmpl
imul
jecxz
mov
and
addr16
filds
sbb
sbb
xchg
data16
sub
repz
rolb
inc
add
or
push
jno
lahf
push
in
jo
test
or
or
sub
ficompl
pop
insb
repnz
cwtl
mov
dec
xor
pop
sub
xor
xchg
mov
jp
xchg
sub
pop
xor
mov
sub
loop
das
aaa
in
and
xchg
sbb
sub
insb
jmp
out
or
hlt
jl
enter
xor
mov
xor
lds
cli
fcompl
mov
lods
pop
cli
and
or
xor
loope
movsb
inc
xor
loop
fstl
mov
movsl
call
xor
test
sbb
es
in
mov
mov
shr
xchg
and
mov
aaa
stos
mov
stc
jl
fcoml
jno
fidivs
mov
rorl
ss
imul
pusha
stos
adc
xchg
cmp
shrb
cmp
lds
mov
mov
push
jp
lock
imul
mov
cmp
jg
bound
negl
xor
test
ret
dec
pop
add
adc
stos
testl
mov
imul
fsub
outsb
fdivrs
les
and
sub
cmpsb
adc
imul
sub
xchg
ja
jae
rorb
js
dec
or
cmp
ret
push
movsb
sub
add
sub
or
ja
or
adc
pop
shll
jmp
mov
dec
mov
sub
rorb
jg
sbb
movsl
mov
xor
or
fistps
push
ret
mov
cmp
add
into
sub
pop
sub
sbb
cmp
push
in
mov
dec
mov
shld
dec
aaa
inc
lds
into
push
mov
ljmp
leave
je
mov
sbb
rcl
cmc
sahf
xchg
icebp
lret
lret
and
leave
mov
xchg
out
cli
shlb
pop
mov
leave
inc
mov
inc
cs
lret
pop
mov
lods
pop
mov
inc
aaa
fdivl
cmpsb
and
or
mov
rcrl
cmp
outsl
pop
push
sub
outsl
or
pop
sbb
or
sti
imul
insb
dec
lret
repnz
aam
int3
iret
call
xor
sub
test
rcrl
arpl
dec
popf
push
jno
icebp
lds
lar
add
jbe
push
sub
adc
or
data16
sbb
jp
enter
mov
jl
aaa
stc
scas
and
jb
push
and
in
je
pop
lahf
cmp
add
pop
into
and
lret
xchg
dec
dec
scas
cwtl
dec
movsl
dec
lcall
mov
push
adc
int3
mov
jno
pmuludq
out
ffreep
mov
xchg
mov
or
cmp
lds
repnz
ss
cltd
jp
out
sbb
cs
orb
xchg
dec
inc
gs
sub
or
mov
pop
data16
loopne
ja
aam
int3
sub
pop
jbe
dec
mov
out
insb
xchg
fldenv
mov
xor
cmp
cwtl
push
js
and
call
sahf
mov
push
in
aam
xlat
mov
pop
sbb
and
out
sbb
jns
lods
push
mov
clc
mov
adc
push
hlt
fstl
xlat
in
add
xlat
sub
pop
sub
and
int
sarl
xchg
push
adc
pop
push
stc
dec
jno
sub
roll
rep
inc
xchg
sbb
xor
into
inc
aas
sub
xor
dec
js
js
mov
mov
pop
or
in
testb
enter
sbb
aad
in
pop
shlb
xchg
fists
out
dec
ret
add
dec
gs
aas
stos
mov
call
or
jno
aas
nop
jae
frstor
or
mov
int
fs
pop
negb
add
mov
stos
popa
ret
ret
lods
fdivr
lods
xor
cmp
jg
adc
test
mov
enter
pop
inc
sbb
int
jbe
xchg
sbbl
sahf
add
push
cmp
clc
rclb
add
mov
loope
pop
call
xchg
cmp
inc
inc
es
in
or
jp
test
cltd
and
jecxz
mov
sbb
cmp
adc
fcomp
divb
out
incl
rorl
repnz
loope
mov
test
mov
push
stos
les
fwait
shlb
int3
ja
in
xchg
and
movsl
les
jmp
fcmovu
shrb
cmpb
mov
adc
fisubs
filds
arpl
pop
jb
icebp
scas
sahf
dec
push
jg
sti
push
and
dec
js
adc
jp
repnz
mov
test
mov
outsb
pop
jl
pop
jge
mov
xchg
or
std
jmp
repz
gs
fs
dec
xor
dec
mov
mov
popa
lock
popa
mov
xchg
pop
add
enter
test
xor
inc
jno
je
add
test
pop
cli
js
repz
mov
add
aaa
icebp
mov
int3
jecxz
jp
jne
lods
and
in
cmpsb
dec
lret
gs
lret
ret
xchg
push
mov
push
fdivp
cmp
mov
mov
out
cmp
jle
shrb
jne
mov
add
in
mov
orl
lods
aam
lret
xchg
xchg
cmp
or
push
sbb
dec
test
dec
jecxz
push
adc
sub
es
jno
or
insb
lea
or
pop
pusha
sbb
inc
xchg
das
mov
xor
or
mov
lahf
stc
push
xchg
push
xor
mov
and
es
outsb
sub
pop
loope
xchg
cld
xlat
ljmp
mov
sub
clc
xchg
jae
clc
adc
dec
in
fwait
lret
and
dec
loope,pn
jbe
mov
sub
scas
sbb
mov
sbb
mov
sbb
add
mov
movsl
or
and
ret
inc
mov
pop
cmpsl
loope
push
add
imull
push
pop
xor
xor
imul
movsb
fsubs
mov
sbb
loope
mov
movsb
cs
aam
rcr
xor
lahf
pop
push
pop
xchg
scas
cs
ljmp
pop
fisttpll
adc
adc
mov
inc
or
scas
fwait
insb
in
add
mov
cld
jecxz
mov
cmp
mov
mov
insl
xor
fcom
leave
sbb
adc
jmp
add
gs
fwait
xchg
mov
arpl
lcall
cmc
inc
xchg
cmp
lret
push
mov
cmc
ja
mov
jb
nopl
jl
sbbl
cld
push
ret
loope
mov
imul
push
pop
lock
push
dec
test
fwait
fwait
aam
stc
mov
movsl
push
dec
jl
lret
stc
inc
or
jg
sbb
mov
jnp
ficoml
add
lods
sub
cmpb
add
shlb
mov
mov
xchg
movl
mov
lahf
pop
push
pop
mov
shll
pusha
cmp
dec
test
adc
icebp
and
fstl
je
icebp
movsb
stos
shrb
and
aaa
insb
test
inc
jmp
sub
jle
adc
cli
cmp
mov
xor
ljmp
xor
dec
nop
mov
rorb
jmp
xchg
pop
add
adc
shrb
ljmp
lea
dec
fs
add
std
add
insl
outsl
shll
imul
sti
loope
push
lret
les
xorb
inc
aam
push
xor
aaa
xor
inc
pop
daa
fdivr
in
insb
mov
push
jno
cmp
cli
testb
cmpsb
imul
mov
cmp
bound
sub
inc
in
ret
icebp
scas
inc
ret
xchg
mov
push
xchg
fisttpll
add
sbb
dec
sbb
xor
cmp
and
inc
xchg
adc
ja
cmp
pop
xchg
sbb
cmc
ljmp
stos
inc
dec
xchg
mov
leave
xor
and
test
out
jl
xchg
sub
jle
mov
sbb
mov
fnstsw
xchg
popf
inc
inc
mov
push
xchg
xlat
sub
mov
xchg
fldl
inc
sbb
cmp
mov
jp
lret
fldcw
push
test
dec
int3
ret
es
outsl
cmpsl
popa
xchg
ja
lock
outsb
adc
pop
jecxz
fcmovnu
pop
mov
pop
stc
add
stc
in
ja
stc
stc
aaa
repnz
int3
movsl
shrl
or
out
ja
sbb
jns
jbe
push
xor
or
mov
pop
fisubrs
int3
in
div
mov
mov
test
stc
dec
pop
adc
insb
imul
dec
lds
fst
stos
bnd
data16
cmp
and
mov
popa
adc
mov
jae
jnp
and
incb
cmp
push
mov
aas
int
andb
shlb
add
mov
js
mov
mov
mov
stos
inc
mov
xchg
sub
test
push
push
rcll
orb
sti
inc
pop
out
ret
pop
cli
stos
mov
pusha
push
movsb
mov
jg
sbb
ret
push
mov
and
jl
inc
idivb
test
stos
cmpsl
cmp
inc
mov
inc
out
icebp
cmp
mov
popf
jg
dec
in
inc
adcb
fs
mov
pop
ret
xchg
or
mov
test
insl
out
push
inc
fdivp
mov
and
cmp
test
lahf
inc
cmp
xchg
mov
mov
mov
repnz
iret
rorb
mov
push
enter
popf
mov
mov
dec
int3
fucomp
mov
movsb
into
mov
incl
xor
mov
sub
mov
add
sti
fists
xchg
mov
sbbl
xlat
xchg
inc
push
cli
jne
pop
inc
inc
shll
out
adc
sbbl
aaa
mov
xor
sub
ror
sub
adc
loope
or
int3
fisubl
int
pusha
aad
pusha
mov
cltd
cmp
cld
fwait
scas
arpl
cmp
iret
add
push
pop
and
sub
imulb
inc
jns
fists
dec
sahf
sbb
repnz
mov
lods
dec
push
xchg
cmc
stc
mov
pushf
cmp
xor
jno
mov
into
das
cwtl
and
or
fs
arpl
xor
rolb
fidivl
pop
jbe
popa
test
jecxz
jge
imul
pop
add
pop
xchg
adc
xchg
std
lods
mov
cvtps2pi
xor
inc
int3
test
and
int
inc
inc
xchg
das
mov
mov
fiadds
mov
sbb
sub
push
daa
add
or
and
sbb
push
sub
mov
pop
jl
pop
mov
jp
insb
cmpsl
lods
xor
jmp
xchg
push
arpl
ja
aas
sbb
popa
xor
es
sarl
xchg
ret
stos
movl
int3
bound
mov
add
das
inc
pop
test
sub
add
mov
lahf
pop
push
aas
jecxz
push
sub
sti
ljmp
push
lds
lock
outsl
xchg
mov
das
nop
je
pop
adc
mov
sub
cmp
repz
in
imul
pusha
mov
mov
test
dec
dec
xor
jge
and
jnp
jnp
imul
or
and
xor
mov
inc
enter
push
int3
ror
mov
call
in
pop
sarb
xchg
or
jo
sub
cmpsl
imul
jae
mov
clc
daa
xchg
pop
lods
sbb
pop
and
pop
test
gs
ret
repnz
push
or
movsb
push
es
fs
shll
jo
xlat
push
jns
sub
mov
cwtl
inc
xchg
stos
scas
add
jae
cmp
and
mov
in
add
test
xchg
sub
dec
repz
sbb
sbb
shll
and
data16
cmp
adc
enter
clc
lods
les
pushf
push
push
mov
mov
loope
hlt
mov
cmc
and
push
fildll
and
test
imul
push
mov
popa
mov
sub
inc
pushf
fsubp
inc
adc
inc
outsb
adc
sub
std
jb
pop
ficoml
adc
cmp
in
imul
je
insb
mov
lock
mov
mov
ja
mov
inc
movsb
push
pop
in
cmc
xchg
pusha
pop
les
and
std
jnp
mov
sub
mov
jns
clc
pop
cmp
idivl
xor
jae
push
repz
movsl
or
ja
frstor
nop
orl
mov
test
mov
fstl
pop
xchg
sub
pushf
mov
xchg
adc
pushf
fidivl
je
addl
inc
arpl
loope
add
aam
or
fldl
mov
push
sbb
push
mov
sahf
add
jo
dec
lods
inc
cwtl
mov
jmp
jge
mov
add
mov
sbb
and
test
or
mov
mov
sti
xchg
call
in
frstor
negb
sub
sbb
roll
sar
cmpsl
in
stc
xchg
fsubrl
cli
xchg
mov
jg
insb
dec
loope
pop
popf
lods
int
in
sub
and
xchg
rcrl
jmp
in
out
mov
inc
push
imul
or
ss
out
sahf
mov
dec
add
cs
in
jle
jl,pn
imul
jo
std
mov
push
shrl
lret
sahf
jmp
lods
push
sub
testl
pop
cmp
adc
jne
pop
push
jnp
movb
adc
ljmp
dec
xor
and
inc
mov
inc
loop
sub
addr16
cmp
add
xor
xchg
push
mov
adc
jbe
in
nop
or
adc
mov
add
jns
dec
jmp
and
sub
or
sub
mov
and
addb
mov
sbb
es
aaa
dec
push
jg
jmp
mov
out
mov
pop
xchg
fiadds
int3
loopne
and
sub
ds
lds
loope
cld
mov
mov
jns
mov
imul
lret
jns
pop
pusha
xchg
sbb
rolb
scas
aam
out
inc
out
mov
sbb
sbb
lret
jg
pop
adc
dec
add
negb
mov
ljmp
fistpl
shrb
xchg
das
dec
adc
shlb
sahf
push
pop
dec
add
nop
leave
loopne
mov
aam
stos
lds
xchg
dec
cmpsl
dec
adc
or
gs
jle
scas
cmc
dec
inc
test
jae
daa
add
and
subb
cmpsl
out
cwtl
mov
and
outsb
scas
sbb
xchg
mov
data16
das
pop
sbb
in
jp
aaa
cli
sbbb
jg
mov
rcl
fnstenv
mov
dec
lcall
stos
fs
jb
call
sub
mov
inc
jmp
lcall
imul
dec
stos
and
jo
or
mov
cs
lock
jns
rcll
lcall
cmp
sahf
mov
sbb
cmp
mov
cmpsl
sub
mov
mov
mov
test
jne
jne
sbb
shl
test
add
lock
jg
add
mov
jb
pop
push
cmc
cmpsb
dec
xor
pop
mov
sti
sbb
push
dec
mov
flds
je
xchg
iret
les
adc
mov
mov
or
int3
sub
repnz
out
fisubrl
mov
sub
mov
push
mov
lds
in
add
outsb
xchg
pop
dec
mov
pop
xchg
jne
cmp
and
cmpb
nop
movsb
pop
fsubp
jmp
sbb
jmp
mov
lret
push
enter
jecxz
nop
xchg
jae
xor
fwait
adc
push
mov
cmp
pop
stos
jecxz
pop
repnz
in
divb
push
sub
mov
xor
cwtl
jb
push
mov
int
pop
dec
sbb
fs
adc
add
dec
mov
mov
movsb
shl
pop
mov
jns
pusha
testl
push
sti
negb
testl
add
ret
fadds
cmp
loop
cmp
gs
cli
push
push
jno
adc
mov
imul
xorl
ja
push
xchg
add
ret
in
mov
mov
stos
pop
sub
add
les
lods
int3
adc
dec
push
leave
cmp
push
xchg
fnstsw
push
aaa
mov
popf
or
mov
mov
add
jge
mov
jb
cmpsl
aas
xor
in
lock
push
mov
lods
xchg
jnp
clc
add
stos
jge
ljmp
sbb
add
mov
mov
mov
inc
sub
adc
pop
dec
cmp
adc
sbb
lock
cltd
or
and
fxch
cmp
xchg
pop
mov
push
and
inc
outsl
insl
or
test
repnz
sub
sbb
mov
push
jne
decl
jne
or
xchg
push
in
cmp
or
fs
js
mov
and
mov
pushf
mov
icebp
mov
nop
loop
adcb
pop
mov
dec
ja
lcall
push
dec
jp
and
movsb
pop
mov
js,pt
mov
mov
in
popa
and
add
addb
jl
mov
push
mov
in
xor
lods
adc
sub
adc
dec
or
mov
sub
out
outsl
aaa
dec
les
sbb
inc
mov
pop
cmp
cmp
outsl
mov
int3
hlt
cli
int3
sbb
cmp
addr16
lock
cltd
les
pop
mov
arpl
in
jne
or
cmp
movsl
jnp
js
fisubrs
lret
push
sbb
cmpsl
inc
testb
cmpl
data16
repz
mov
pusha
or
clc
pushf
mov
pop
mulb
add
iret
stos
cld
iret
stc
orl
jno
stos
ds
dec
js
iret
les
nop
sbb
cmpsb
pop
negb
lahf
jae
jae
fs
gs
fldenv
loope
jnp
lret
or
dec
push
ret
pop
and
jmp
es
or
jmp
push
in
pop
inc
mov
mov
jns
and
cmc
mov
cli
int3
sub
fimuls
inc
test
out
imul
negb
push
js
repnz
call
and
movaps
jne
movsb
ja
sub
push
pop
push
mov
es
cmp
mov
pushf
in
dec
shll
das
or
in
out
aad
mov
mov
out
cmpsl
popf
ja
std
mov
mov
sub
fs
add
lret
testb
inc
jb
inc
mov
out
jno
fs
push
es
cs
les
xor
enter
jae
stc
je
sub
push
fldcw
inc
mov
lahf
out
adc
or
aad
int3
les
or
inc
push
cmpsb
mov
repz
push
call
xchg
jp
out
in
adcb
vphaddbw
pop
xchg
push
dec
sbb
add
sub
inc
pop
arpl
push
adc
cli
lcall
pop
test
into
inc
and
stos
inc
loope
lea
push
loopne
mov
stc
in
pop
cwtl
fldz
movsb
jbe
xor
xor
adc
xchg
ret
xor
jb
xor
mov
dec
xchg
jo
lea
dec
jl
movsl
mov
cmp
lods
xor
adc
jecxz
sub
xor
mov
les
add
xor
sub
ds
in
xchg
jae
dec
add
loop
push
pop
push
cmpsb
fmul
jmp
dec
ret
pop
fsubrl
loop
cmp
sbb
sbb
les
and
mov
addr16
pop
xor
jp
sub
xchg
das
std
sub
daa
int
es
jecxz
xor
dec
inc
loopne
or
pop
nop
mov
in
and
stos
pop
adc
jb
call
or
test
loopne
lock
pop
jb
dec
loopne
data16
jb
jle
xchg
and
or
out
jmp
jns
in
out
in
aam
mov
adc
fdivs
xchg
add
jg
lret
divb
mov
push
aaa
push
bound
jmp
out
push
out
mov
sahf
incb
inc
adc
jl
push
jmp
cmc
stos
decl
mov
mov
aaa
xabort
mov
sub
lcall
mov
test
js
push
or
mov
lea
dec
sbb
mov
fwait
sub
fsubl
lahf
jbe
adc
xor
lds
inc
cmp
iret
mov
addl
repnz
xchg
cwtl
lret
incb
roll
addr16
aaa
sbb
in
fistpl
cmpsl
aad
mov
mov
outsb
lret
xchg
lds
mulb
adc
and
arpl
jb
sti
xchg
push
mov
ret
cmp
and
adc
mov
jecxz
mov
sub
dec
push
mov
das
daa
das
lret
std
out
ret
pushf
out
std
lds
sbbl
xorl
hlt
std
cld
int3
data16
hlt
jb
cltd
pop
lds
sub
mov
enter
xor
enter
add
loop
push
out
nop
xor
filds
xchg
add
rorb
dec
repz
dec
sbb
ret
ret
call
jl
mov
aas
xor
mov
fdivrs
jo
xchg
cmp
mov
out
add
inc
aaa
cmp
mov
into
data16
xchg
lods
and
cmp
test
popf
out
adc
aaa
rcll
insl
jno
hlt
jge
leave
dec
mov
cmp
push
pop
pop
xchg
test
stos
cmc
je
jle
cmp
and
mov
xchg
mov
dec
or
mov
lret
jge
out
mov
insl
lcall
push
pop
dec
iret
dec
shrl
outsl
adc
aas
sub
outsb
xor
pusha
xchg
and
jae,pt
xor
das
cs
xchg
mov
fsubl
and
push
loop
sbb
outsl
mov
pusha
arpl
out
sub
imul
jno
enter
dec
or
out
stos
sbb
or
cmp
adc
add
loopne
mov
sub
in
inc
repz
rorl
mov
pop
sti
mov
subps
xchg
std
mov
js
push
loope
dec
xor
dec
xchg
inc
push
xchg
cmp
movsb
sbb
mov
adc
aam
jmp
aas
and
push
loopne
xor
dec
mov
leave
in
mov
xlat
or
pop
mov
into
or
pop
add
mov
lods
mov
mov
cld
movsl
or
shlb
sbb
test
push
sbb
mov
jo
cmp
cmp
push
push
dec
inc
enter
xor
sbb
xchg
stc
sbb
push
mov
push
lret
cmp
bound
cmpsl
fwait
xchg
ret
sub
test
and
mov
mov
shrl
lods
jns
mov
test
jnp
mov
hlt
xor
jne
sub
lods
jl
pop
or
imull
mov
sbb
insl
mov
and
stc
mov
subb
stos
jg
arpl
xchg
ljmp
push
packuswb
mov
inc
jb
mov
test
pop
insl
pop
in
lahf
outsl
push
mov
iret
es
mov
fidivrs
es
imul
sub
xchg
add
xchg
lods
out
xchg
inc
mov
cwtl
enterw
clc
mov
ljmp
and
fsubr
xchg
xchg
orl
mov
pop
pop
sub
add
aad
out
push
sub
fcoml
push
decl
or
and
jle
add
and
jb
dec
cmp
and
sbb
pop
push
leave
scas
inc
insl
repz
stos
or
push
daa
jbe
ret
push
cmp
aad
loope
mov
inc
xor
pushf
adc
push
sub
test
pop
rcll
in
xchg
push
loope
mov
test
popf
inc
rolb
push
fidivs
xchg
jbe
adc
or
fisubs
inc
lcall
jle
les
rol
xor
cmp
sarb
sbb
mov
mov
bound
mov
adc
cmp
inc
js
aam
dec
push
xor
push
adc
aaa
testb
cmpsb
sub
fstl
xor
stos
push
js
dec
mov
test
pusha
popa
or
imul
xor
sub
mov
mov
cwtl
mov
mov
mov
iret
arpl
push
pop
and
pop
loope
pop
es
ret
adc
push
fadds
pop
add
fs
int3
rcrl
pop
out
cmp
scas
inc
xor
cmp
sbb
mov
mov
push
inc
jge
xorl
cmp
pop
in
push
add
outsb
jle
test
cld
push
or
jp
sub
lahf
iret
or
ljmp
mov
cmp
pop
arpl
roll
xchg
cmc
push
push
and
mov
lea
push
sarl
std
push
in
incl
aaa
pop
dec
mov
or
mov
add
add
push
jge
icebp
out
out
or
push
sub
ja
pusha
and
in
sub
lahf
pop
jl
xor
jp
lock
mov
std
pop
push
xchg
cmp
mov
divl
mov
xchg
outsb
arpl
lret
out
cmpl
ret
mov
pop
lock
pop
add
mov
enter
imul
jbe
scas
dec
mov
sbb
and
ret
cwtl
sbb
es
pusha
mov
dec
push
xchg
xchg
dec
insb
mov
mov
icebp
or
je
push
in
inc
sub
jo
xchg
sub
inc
pop
mov
popf
xchg
test
cmp
jge
imul
rolb
ljmp
js
sbb
or
ja
xchg
stc
insl
data16
dec
pop
pop
sarl
pop
out
adcb
sbb
hlt
jg
xor
lods
sub
subb
leave
mov
sbb
push
enter
sub
hlt
add
xchg
ds
mov
and
push
mov
add
mov
ljmp
dec
ds
cmpsb
xchg
call
test
sub
sbb
add
arpl
mov
mov
das
fnstenv
mov
adc
xor
orb
inc
xor
popf
pop
sbb
add
out
out
out
adc
std
cmp
ror
mov
rolb
lock
hlt
push
cmpsb
pushf
and
sbb
sti
and
dec
insl
push
sbb
cmp
dec
add
rcrl
out
out
rcrl
cwtl
add
jns
sub
xchg
add
mov
pop
push
mov
sub
jmp
inc
add
fldenv
mov
jno
mov
es
mov
enter
insb
orl
jno
xor
in
mov
mov
mov
and
imulb
inc
aam
ret
push
popf
and
addr16
xor
or
sbb
icebp
stos
idivb
mov
pusha
or
dec
push
icebp
mov
pop
fucomi
sub
notl
cmpsb
xor
lock
or
je
iret
or
pop
pop
mov
leave
lock
imulb
push
mov
push
mov
shl
jmp
fistps
adc
jp
pushf
push
mov
adc
std
sbbb
ljmp
sbb
call
or
dec
daa
insb
push
mov
cwtl
push
mov
sbb
inc
xor
mov
das
xchg
repz
sub
je
clc
out
fdivrs
rcrl
inc
lds
adc
test
push
cmpsl
xchg
aam
and
js
mov
fstps
sub
sub
addl
mov
loop
add
mov
sarl
jg
scas
xor
pop
jns
mov
push
jo
repnz
cmpsb
popf
ret
aad
fsubrl
int3
pop
dec
and
daa
or
cmpsb
pop
mov
mov
push
jo
in
mov
lods
int3
pop
adc
das
shrl
xor
add
xor
xchg
adc
dec
dec
sub
push
mov
pop
pop
std
rcll
shrb
add
or
sbb
push
iret
cli
and
jno
insb
imul
ja
cltd
cwtl
into
xor
iret
das
cmc
imul
jbe
dec
arpl
cwtl
sub
je
dec
insb
test
insb
cli
lea
sub
xchg
std
pop
icebp
mov
sbb
push
subb
sti
into
sbb
jp
setge
jb
clc
jp
mov
ffreep
mov
push
cmp
mov
dec
cmp
and
cmc
aad
loop
data16
lock
fmull
push
inc
loop
testb
xor
inc
cmc
cwtl
int3
dec
lds
dec
jge
dec
adc
mov
xor
sahf
sbb
addl
loopne
adcb
cmc
and
in
sarl
jb
icebp
iret
jle
cmc
gs
js
cld
and
frstor
sbb
subl
jp
imul
ss
ja
dec
loope
pop
fs
enter
fwait
xor
fucomip
aas
sar
stos
sub
sub
add
pop
imul
mov
or
sbb
adc
xorb
cli
pop
mov
xor
in
shrb
mov
into
inc
add
bound
xor
jl
pop
testl
xchg
or
leave
popf
test
enter
repz
add
dec
and
call
fcompl
or
sbb
icebp
call
jp
push
push
pusha
xor
ja
imul
je
push
xor
sub
dec
pop
mov
push
sub
cmp
cmp
adcb
icebp
and
imul
jmp
jbe
inc
inc
jb
addl
js
ss
stos
insb
add
jb
cmp
fld1
cmp
or
adcb
jmp
or
fs
push
cmp
lret
dec
cli
imul
push
lods
loop
pop
imul
push
btc
loop
adc
lahf
test
sbbb
cmc
pushf
dec
mov
fists
xorb
or
rcl
sbb
fsubrl
iret
xchg
mov
jecxz
stc
mov
pop
adc
rcl
mov
and
mov
test
dec
insb
xor
dec
imul
xor
pushf
xlat
je
fs
mov
rolb
jno
test
lods
inc
clc
push
ss
pop
add
inc
push
or
in
or
fsubr
popa
push
cld
adc
xor
cltd
jb
sarb
lock
and
popf
sub
clc
js
loopne
lods
js
pop
and
leave
sti
cmp
fwait
in
xchg
dec
cli
push
mov
popa
sbb
mov
hlt
add
je
ret
outsb
out
in
add
notl
in
sahf
jg
je
les
lcall
fnstcw
cmpsl
mov
push
sbb
cmp
sbb
ja
dec
inc
and
pop
jbe
mov
add
imul
test
jnp
data16
leave
mov
mov
pop
enter
lret
shl
dec
test
sub
sahf
rorb
popa
cwtl
cltd
andb
mulb
cltd
mov
popf
imul
flds
inc
sti
mov
dec
scas
mov
sub
and
and
or
push
out
push
or
cmp
inc
lock
sub
cmp
lret
and
add
jge
pop
das
jns
jne
out
pusha
inc
cmp
mov
mov
dec
sbb
sbb
repz
pusha
or
xchg
pusha
mov
ds
jmp
or
fmul
pop
push
pop
push
rcl
nop
cli
lods
sbb
jmp
dec
aaa
stos
or
push
or
orl
adc
aaa
xchg
ud0
pop
sub
bound
lret
mov
nop
insb
pop
sbb
mov
pop
mov
test
xchg
add
add
nop
lcall
push
mov
mov
lods
sbb
sub
data16
xchg
dec
xchg
bound
iret
jge
mov
inc
jnp
adc
lret
stc
aam
mov
mov
call
mov
inc
or
sbb
scas
vmwrite
insl
das
inc
repz
aam
ljmp
sbb
sub
fsub
shll
jg
add
stos
pop
mov
iret
push
inc
lods
sbb
add
xchg
clc
inc
fdivrs
out
cmp
and
mov
scas
sbb
dec
xlat
dec
out
mov
cmp
cltd
push
fs
in
dec
out
inc
mov
mov
adc
rcrl
sbbb
pop
cli
cmp
fcompp
adc
mov
pop
jle
lods
fists
pop
lds
in
and
repnz
pop
and
int3
push
dec
fadds
popa
fnstsw
aam
flds
lcall
xor
mov
dec
call
adc
shl
int3
sub
mov
jl
dec
cmp
scas
mov
decl
sbb
mov
aad
add
xchg
sub
imul
loope
rcr
orb
mov
loop
cli
div
fcoml
mov
push
dec
mov
enter
lock
int3
or
xor
mov
lods
sar
hlt
mov
sbb
mov
pusha
xlat
inc
push
pop
adc
jnp
lods
jne
fdivl
mov
dec
out
shrl
xor
inc
xchg
pop
out
mov
pop
adc
cltd
ret
in
std
mov
stc
sahf
and
dec
movl
jmp
inc
sbb
test
shr
jnp
adc
add
mov
rcrb
lods
aas
stos
fdivrl
mov
repz
stc
and
add
sub
ja
sbb
adc
push
test
fistps
stos
test
ret
in
adc
xchg
sbb
pop
mov
mov
pusha
arpl
mov
loope
in
js
pop
test
ljmp
jno
sahf
and
push
out
mov
ljmp
dec
fnstsw
popa
cmc
data16
push
js
loopne
bound
iret
subb
jno
inc
mov
inc
in
add
dec
dec
inc
xor
cli
mov
js
push
lahf
ljmp
daa
data16
outsl
cmp
in
sub
fxch
jl
inc
dec
sbb
push
cs
mov
cmc
cmp
push
mov
mov
jmp
pop
xlat
jp
test
cwtl
mov
push
scas
pusha
popf
mov
mov
js
sub
fsubs
inc
sub
rcr
cwtl
and
add
pop
add
push
or
adc
and
dec
mov
fsts
fdivr
es
stos
lcall
imul
xchg
mov
insb
pop
inc
dec
xor
movsl
aas
add
jg
jnp
jo
jae
gs
dec
sbb
xchg
xor
xor
jne
cmp
jecxz
pop
ret
pop
push
clc
cld
or
popf
dec
pushf
sub
sub
cmpsl
stos
rcrb
mov
lods
js
xchg
ss
movsb
mov
pop
mov
add
stos
scas
jno
cltd
xor
cmp
xor
dec
js
add
std
stc
push
or
test
jo
imul
out
daa
pop
into
rorl
or
jnp
icebp
fdivr
mov
in
mov
and
inc
and
mov
inc
mov
cld
and
inc
and
fdivr
mov
mov
scas
cli
xchg
ljmp
mov
faddl
cmp
shlb
and
cmc
icebp
lea
and
dec
add
iret
or
mov
or
test
mov
jns
mov
xchg
mov
jbe
mov
js
push
shll
addl
jecxz
loope
shl
mov
cmp
mov
mov
jp
sbb
xor
movsl
lss
js
cmp
int
bound
lds
mov
test
xlat
jo
and
fs
jne
mov
push
es
inc
aad
fisttps
mov
test
insl
addr16
add
out
ds
sbb
imul
or
cwtl
inc
lret
xchg
aad
jg
xchg
loop
mov
incb
jne
mov
test
add
xor
call
mov
push
shll
mov
mov
dec
mov
loope
repnz
scas
cmp
jle
or
push
mov
dec
pop
sti
in
push
jo
lods
and
sub
cmp
in
xchg
lock
jo
mov
les
pop
dec
dec
les
rcrl
or
stc
or
mov
fs
jbe
out
inc
in
out
xor
xlat
lret
xor
sbb
dec
mov
mov
ljmp
inc
push
arpl
inc
mov
jno
ret
sub
ja
add
inc
or
mov
cmp
stos
rorl
jg
jo
add
out
pusha
dec
daa
xor
mov
dec
mov
inc
iret
cwtl
mov
push
mov
fsubs
sub
lods
fisubl
sub
pop
arpl
xor
lds
ret
scas
outsb
and
dec
outsl
mov
lock
inc
dec
outsb
mov
mov
xchg
ljmp
inc
cmp
sahf
adc
scas
jl
les
or
enter
shll
loope
jb
js
add
sbb
stos
movsl
mov
mov
enter
push
jb
lods
aas
xchg
roll
in
divl
test
mov
mov
add
jnp
cmpsl
push
sub
cltd
mov
pop
xor
lahf
mov
lock
jecxz
cli
add
loopne
pop
pop
lods
cmp
setle
test
test
xor
push
stos
xchg
xchg
lea
sub
sbb
cmp
pop
xchg
lods
xchg
and
xchg
dec
bound
add
push
inc
iret
push
inc
cmp
fldl
lods
inc
inc
pop
mov
fsubrs
leave
setge
fcmovne
push
test
shrl
test
mov
fmulp
test
shlb
fidivs
add
pop
pop
fisubrs
ss
ret
and
ss
add
sub
mull
cmpsl
adc
lea
daa
test
rol
pop
sub
jecxz
leave
xor
adc
sarl
lea
enter
xor
in
fnstenv
int3
adc
rcl
cmpsb
or
ret
and
dec
xchg
out
lods
dec
cwtl
scas
add
int3
js
mov
mov
sub
and
iret
stos
ds
sub
clc
add
hlt
xor
jnp
testb
mov
jnp
mov
add
inc
or
adc
cmp
rcll
shll
xor
adc
xor
adc
pop
testb
movsb
mov
pop
pushf
shll
jns
fnsave
pushf
push
push
adc
in
cmp
pusha
push
aaa
or
test
mov
and
aad
lea
sub
pop
or
lock
xchg
mov
mov
or
test
cld
sahf
inc
lret
lds
xor
iret
mov
push
negb
enter
shr
jle
test
mov
pop
loop
les
outsb
leave
scas
mov
mov
mov
popa
test
dec
out
into
mov
lods
in
push
pop
scas
lds
subb
xchg
jno
and
pushf
mov
and
or
cmc
mov
aad
mov
out
xor
sub
jo
andb
sbb
xchg
aam
mov
aaa
movsl
cld
add
aad
popf
repnz
stos
insb
repnz
push
mov
into
aas
xchg
sbb
ja
inc
mov
cmp
push
lret
cmpsl
ljmp
packssdw
push
inc
rcll
sbb
xchg
lods
in
cmp
jl
iret
jl
hlt
sar
lds
push
imul
aad
mov
rcrl
out
cld
test
jle
nop
mov
nop
dec
into
push
repz
dec
imul
jl
mov
xchg
or
mov
pop
pop
mov
rorb
xchg
mov
sub
cmp
or
xlat
sbb
mov
mov
mov
push
mul
test
gs
insb
jne
loop
add
jp
mov
jne
sub
frstor
mov
jo
cmp
push
roll
pop
ds
std
mov
sub
push
lea
in
stc
push
mov
dec
mov
or
cmc
push
sub
sbb
insb
or
jno
xor
cmpsl
sbb
outsl
out
mov
sbb
js
pop
ret
inc
jge
or
pop
test
sub
jle
test
dec
scas
in
imul
push
jb
inc
adc
mov
sbb
mov
test
add
ds
mov
lret
insl
sbb
dec
jp
xchg
mov
mov
es
aad
and
mov
jle
mov
adc
jo
pop
pop
mov
stos
ljmp
rcl
and
imul
push
mov
out
mov
out
repnz
pop
fdivrl
pop
cmpsl
ds
and
lods
cmp
call
pop
jne
cld
xchg
dec
jmp
cmp
or
sbbl
inc
lods
push
fwait
jns
lds
int3
xchg
cmp
repnz
hlt
push
push
jge
aad
das
or
scas
pop
adc
sub
inc
mov
xor
sub
jae
xlat
mov
jbe
pop
inc
sub
lahf
jo
sbb
xor
cltd
lea
sti
inc
sbb
adc
mov
push
out
daa
scas
ret
add
sub
outsl
cmp
fiadds
dec
and
insl
xchg
bound
pusha
jp
add
inc
xchg
xor
add
popa
cmp
push
mov
xchg
xor
aas
xchg
or
push
clc
enter
pop
push
jne
jo
out
pusha
ret
rcll
lods
mov
into
add
cwtl
sbb
std
leave
inc
ret
sbb
push
cmpsl
insb
icebp
pop
and
and
test
lahf
sti
adc
xchg
xchg
ja
and
into
sbb
in
fidivrl
push
jge
into
mov
out
test
test
dec
jge
js
mov
aaa
push
sarl
pop
push
out
jae
mov
xorl
fnsave
insb
not
xchg
das
lret
jne
sub
bound
or
inc
in
fwait
mov
popa
add
xor
cwtl
stos
cmp
cmp
mov
and
cmp
sbb
inc
and
push
stc
or
push
js
add
fs
xchg
jbe
lcall
lock
mov
mov
aad
cltd
ja
push
xchg
xor
pop
push
or
push
pop
xchg
add
dec
mov
cmp
xor
push
dec
andl
sub
lcall
cmpsl
jmp
inc
inc
jae
test
in
cmp
add
idiv
hlt
mov
mov
mov
pop
das
sub
xchg
cmp
loopne
loop
mov
inc
test
pop
test
xlat
fcmove
stos
and
leave
cld
out
mov
lock
and
xchg
shlb
out
xor
mov
adc
jbe
stc
out
and
aaa
lcall
stos
mov
div
cmp
inc
or
dec
lea
insb
pop
mov
jo
decl
push
scas
mov
out
inc
ss
add
cmp
aaa
jge
pop
cmp
push
xchg
movsb
test
in
shr
lds
psubsb
adc
loop
mov
ficomps
in
xor
out
fs
xorl
jp
fstpl
mov
mov
leave
or
pushf
xor
scas
pop
sbb
cwtl
pop
andl
and
iret
add
aad
test
stos
sub
and
cli
mov
sub
jp
out
je
shl
mov
and
push
mov
lods
sub
jbe
push
incl
or
jmp
movsl
xchg
push
and
and
lret
das
imul
sub
lret
data16
sti
test
out
outsl
add
cs
ret
scas
leave
adc
jp
add
sahf
or
or
jno
sub
xchg
and
mov
call
dec
dec
scas
cli
mov
jo
stc
jle
mov
jns
add
pop
scas
fnstenv
out
repz
les
jo
loop
push
sub
stos
push
out
bound
daa
dec
push
ds
xchg
dec
mov
mov
icebp
orl
shl
pop
push
jae
mov
cwtl
mov
popa
or
xchg
jge
loop
mov
dec
repz
mov
or
mov
insl
loope
or
inc
sbb
push
ljmp
sub
push
push
xchg
sub
movsl
lock
insl
in
sbb
xor
aam
sub
push
aad
xchg
out
lahf
test
sbb
xchg
jge
pop
mul
jnp
adc
rcr
sarl
mull
mov
aam
test
inc
test
in
and
xchg
in
in
ret
comiss
add
jg
mov
mov
imul
jmp
stc
sub
xchg
insl
inc
mov
inc
mov
adc
aas
cli
in
xor
outsb
sub
jnp
gs
mov
arpl
push
mov
xlat
and
adc
sub
fwait
ret
mov
xchg
int3
inc
inc
inc
add
aam
pop
data16
sbb
dec
jae
sub
mov
rcrl
pop
lods
std
outsl
mov
test
jns
mov
lret
test
loopne
adc
dec
jle
es
jge
outsb
clc
jle
push
fdivs
repz
mov
pshufw
mov
cmp
int
fdivrl
mov
xchg
and
jbe
or
popa
sub
adc
iret
xor
sbb
ret
mov
and
shlb
adc
je
xor
inc
leave
arpl
aam
xor
sub
mov
mov
xchg
adc
mov
jp
test
cs
mov
imulb
bound
push
inc
xchg
add
inc
inc
shlb
in
testl
sarb
add
sbb
std
mov
sahf
ret
jo
mov
in
mov
jnp
inc
add
inc
rclb
js
inc
lods
xor
movsb
loopne
sub
and
and
cmpsl
int
jns
pushl
aas
std
rcl
mov
cmp
cmp
cmp
push
arpl
mov
push
in
popf
pop
push
movsl
ljmp
sub
inc
lcall
pop
sub
out
mov
rolb
push
rorb
add
cs
push
sub
in
jo
dec
push
adcl
jnp
jp
data16
inc
xchg
pop
add
sub
xchg
clc
nop
cwtl
sub
or
lea
sarl
mov
push
dec
insb
mov
xchg
sub
out
jmp
jo
shll
mov
rcrl
mov
jmp
jl
xchg
popa
aad
sti
and
lret
push
aam
in
testl
lea
test
bswap
scas
or
data16
lock
pop
mov
or
sbb
jno
xor
jne
out
inc
iret
add
mov
and
js
push
push
flds
lahf
mov
lcall
aaa
arpl
push
cmp
movsb
cmp
cwtl
jno
mov
fcoms
insb
mov
orb
pop
repnz
sbb
lock
sub
inc
xchg
test
outsl
sti
fs
pop
jecxz
cmpsl
xchg
sub
jmp
add
test
lds
out
lret
stc
mov
mov
leave
nop
dec
mov
cmp
inc
aad
push
jno
cmpsb
mov
or
dec
adc
cmp
xchg
das
lea
lahf
inc
mov
fdiv
bound
in
leave
mov
push
and
push
pop
or
sub
data16
rcrl
cmp
jle
or
std
mov
xchg
mov
lods
add
int3
repnz
lea
and
push
shll
fsts
mov
insb
xor
jne
in
ret
test
movsl
add
cld
ljmp
cmp
popf
out
cs
orb
iret
cmpsb
mov
push
lcall
imul
mov
jmp
xor
subl
inc
cmp
cmp
mov
ret
sahf
jp
popa
inc
mov
imulb
and
fcmovne
shrl
in
popf
fs
int3
mov
pop
or
sarl
les
inc
cld
xchg
dec
mov
daa
xor
inc
aad
and
inc
xchg
dec
lods
push
pushf
in
adc
xor
insl
adc
jecxz
stos
pop
test
out
pusha
insl
sub
shll
repz
stos
mov
dec
hlt
ljmp
xchg
data16
push
sub
pop
lret
andb
mov
mul
aam
push
mov
ljmp
ds
in
and
jl
sahf
or
adc
cli
jl
mov
sahf
test
scas
inc
adc
out
int3
bound
adc
xchg
daa
and
push
imul
leave
adc
testl
aad
mov
inc
pop
mov
out
lods
inc
les
push
ljmp
xchg
dec
fdivs
push
push
stc
pusha
jp
movsb
pop
push
push
lcall
or
push
fwait
sbb
ja
dec
sbbb
add
in
imul
nop
loop
sub
outsb
stc
imul
aaa
mov
test
or
lods
bound
sahf
mov
pop
jg
adc
adc
vpunpckhqdq
push
std
jcxz
gs
mov
dec
xorb
add
outsl
sub
andb
cmp
fsub
rcr
sub
or
fidivl
gs
mov
push
add
fisubrs
add
pop
mov
push
call
cmpsb
xlat
push
test
pop
lock
sti
hlt
into
icebp
and
sub
jp
add
ret
and
dec
jo
popa
add
xor
fwait
push
iret
loopne
or
pop
adc
inc
dec
mov
pop
pop
or
xchg
cmp
rorb
inc
fs
sub
sub
sbb
mov
test
idivl
out
jbe
in
push
aad
orb
add
rclb
je
mov
pop
xchg
and
mov
push
loopne
jo
js
mov
lock
fdivl
bound
mov
inc
mov
add
push
les
pop
das
sbb
loopne
mov
cmpsb
mov
jg
pop
add
or
in
or
mov
loop
xchg
mov
push
cmp
clc
and
pop
lods
pop
xor
aad
mov
lret
add
xlat
jns
xchg
mov
test
nop
add
xchg
inc
add
or
mov
out
icebp
rolb
sub
dec
xchg
xor
add
orb
daa
sti
cltd
xor
mov
test
clc
aad
or
xor
xchg
xor
pop
adc
sahf
or
dec
mov
xchg
push
push
imul
pop
lcall
imul
popa
pop
add
lods
inc
in
insb
inc
lds
sbb
out
clc
jae
pop
stos
cmp
sti
clc
sti
jg
pop
cmp
pop
xor
sti
lds
mov
adc
gs
add
mov
or
sbb
inc
jge
aas
subl
jecxz
add
push
inc
push
jnp
insl
or
lea
mov
fildl
or
jle
fsubrs
cli
add
pop
in
sub
in
jbe
adc
xchg
mov
insb
adc
mov
lods
push
in
aas
outsb
add
rolb
out
out
add
int
push
mov
roll
add
pop
add
cwtl
mov
pop
jle
cmp
xor
pop
imulb
mov
shll
sub
test
test
stos
jne
mov
movsl
or
inc
rolb
fsts
mov
jno
xor
pop
mov
push
into
adcl
sub
stc
mov
sub
mov
cld
dec
mov
lods
je
mov
je
out
and
loope
and
sbb
in
xchg
iret
fwait
dec
cmc
movb
or
popf
xchg
je
cld
inc
xor
or
push
enter
fsubrl
dec
jg
push
ficoml
jge
repz
xchg
clc
movsl
adcb
jecxz
das
subl
pop
add
sbb
fiadds
lock
lret
jp
lcall
inc
imul
loopw
enter
add
in
sbb
cmpsb
mov
loope
add
push
popf
lods
lods
pop
pusha
add
sarb
jmp
fldl
push
push
das
hlt
aaa
sub
jecxz
mov
shlb
inc
jb
push
or
lret
in
cmp
dec
or
add
jl
js
shlb
movb
inc
dec
lret
sti
out
jg
dec
test
inc
mov
pop
jmp
mov
test
and
mov
push
sbb
iret
xor
ret
sub
or
mov
mov
push
pop
jg
das
pop
packssdw
pop
xchg
repz
dec
test
push
sbb
dec
cmp
sti
shr
push
pusha
stc
mov
lahf
cltd
inc
push
mov
cmp
out
pop
xchg
adc
or
xor
fidivrl
pop
lret
mov
pop
sbb
push
lea
adc
in
push
push
lcall
mov
testb
jge
dec
jns
subl
mov
mov
mov
sahf
mov
int3
sub
dec
stc
jae
mov
cli
dec
mov
sbb
into
leave
aam
jbe
ret
shrb
inc
dec
stc
sbb
pop
std
mov
inc
fstpl
jmp
push
imul
jmp
cmp
scas
and
out
js
mov
push
sahf
sbb
xor
cmp
and
cwtl
mov
jns
nop
mov
cmp
adc
pop
add
in
push
cmp
out
ss
sbb
or
jae
inc
and
cwtl
or
dec
pop
int3
or
xorb
int
inc
and
jmp
aaa
adc
cmpsl
jno
dec
test
push
xchg
pop
movsl
mov
dec
psrlq
xor
adc
lahf
pop
adc
jae
jle
shll
aaa
popf
jecxz
pop
add
and
mov
push
out
add
lds
aas
sbb
popa
sahf
sbb
test
inc
adc
cmp
mov
das
loope
push
data16
addl
and
dec
push
popf
mov
xchg
inc
addb
add
out
je
popf
adc
xchg
scas
insl
addb
iret
out
cltd
addl
mov
negl
sub
mov
outsl
ja
in
out
into
ljmp
jnp
xchg
ror
mov
aam
mov
push
or
mov
sbb
movsb
push
inc
aam
stos
pop
add
lret
pop
aam
sysenter
push
sub
int3
mov
and
test
and
idiv
sub
or
out
popf
icebp
xorb
iret
sbb
das
cli
push
ss
pop
jmp
outsb
jle
jmp
sbb
mov
lcall
stc
adc
sub
inc
adc
pop
sub
and
ss
add
popf
sbb
and
adc
push
imul
mov
adc
and
aas
xor
mov
pop
clc
lea
jg
in
cmpsb
roll
das
out
int3
arpl
lock
adc
adc
mov
mov
lcall
dec
dec
push
mov
mov
sahf
xor
sub
pop
insb
sbb
cmp
iret
dec
push
test
xor
sbb
add
dec
call
xor
adc
xchg
mov
ret
lret
jb
dec
jmp
daa
ret
sahf
mov
cmp
lcall
ja
icebp
inc
jl
mull
sbb
arpl
jmp
int3
bound
loopne
mov
cmp
cmc
repz
repz
mov
xchg
mov
and
xor
ss
inc
add
jae
fnstenv
push
insb
ret
cld
mov
ljmp
clc
and
mov
cwtl
cmc
pop
adc
and
scas
test
xchg
mov
jae
repz
inc
mov
mov
sbb
jne
pop
int3
gs
aad
jg
mov
inc
scas
rcrl
pop
jo
inc
jge
mov
pop
or
in
xchg
aad
test
push
mov
mov
and
scas
loope
mov
add
add
xchg
jne
pop
shll
or
sub
inc
cmp
sti
rcll
xor
sbb
into
sahf
xor
shl
test
mov
jge
out
sub
pop
jae
imul
sbb
lods
cmp
push
inc
push
out
push
data16
push
adc
je
and
pushf
mov
lcall
dec
fs
inc
mov
mov
push
jnp
out
iret
loopne
fdivrs
adc
sti
aad
lds
out
xor
jne
fildl
cmpsb
pop
xchg
daa
daa
or
dec
mov
scas
sarb
mov
enter
inc
bound
xor
fs
aam
xlat
popa
sarl
xchg
movntps
add
inc
dec
xchg
xor
mov
mov
jno
push
pop
or
fidivrs
mov
cmc
inc
mov
jbe
mov
jle
jecxz
sbb
fdivrs
lret
dec
xor
push
test
movsl
loope
sbb
loop
jmp
int
int
inc
inc
xor
jo
daa
test
out
xchg
sbb
xchg
lcall
push
push
sub
push
sahf
lahf
pusha
and
pop
aad
in
leave
pop
lret
js
sub
mov
decl
xor
aaa
push
jp
iret
lret
jo
cwtl
rcrb
int
scas
adc
imul
std
cs
mov
jle
push
int3
mov
cmp
pop
mov
pop
or
ret
push
call
cmp
out
sub
pusha
insb
mov
repz
mov
les
cli
loope
inc
rclb
ljmp
scas
fisubl
adc
sbbb
mov
fwait
adc
cmp
mov
dec
testb
sbb
shll
scas
inc
and
or
pusha
ss
std
repnz
or
or
jle
xchg
mov
add
js
test
js
xor
jbe
cld
xor
mov
xor
xchg
push
clc
mov
je
xor
call
fwait
mov
ret
nop
inc
scas
das
inc
jecxz
sbbl
jnp
rcrb
aas
out
imul
and
mov
neg
idiv
xchg
lods
repnz
mov
aam
mov
in
test
sti
push
stos
lret
das
jo
adc
dec
push
inc
and
mov
roll
int
into
mov
aas
lcall
mov
fnstsw
jae
into
aaa
sub
mov
rcrl
cmp
xor
mov
sbb
sti
imul
sbb
imulb
pop
and
sbb
push
int3
push
mov
gs
lret
test
cld
loopne
jmp
cmpsl
lcall
mov
cmp
push
fisttpl
pop
xor
aad
or
sub
xlat
loop
jne
lock
aam
rclb
or
movsb
push
das
jmp
lcall
sbbl
and
inc
cltd
add
jmp
xchg
push
xchg
imul
add
xchg
push
jo
cwtl
out
add
push
ss
mov
jae
stos
inc
in
lret
dec
xchg
pushf
mov
inc
andl
cmp
xchg
xor
add
xor
aas
and
or
in
push
xor
imul
inc
in
into
mov
mov
jo
outsl
sbb
cmp
mov
mov
insl
lret
incl
adc
popf
xor
or
insl
and
pop
dec
mov
xchg
cmp
add
xchg
jne
push
imul
xor
mov
inc
jecxz
jg
xchg
jb
lea
cmp
in
pop
icebp
mov
mov
push
and
cltd
fstps
xor
ds
mov
sti
daa
xchg
lock
aaa
pop
lea
pop
es
inc
scas
popa
and
xchg
pusha
gs
dec
cmpsb
cmp
in
out
mov
mulb
sbb
into
mov
mov
fwait
push
dec
cld
aaa
daa
pop
fcoml
ss
lods
xchg
sarb
mov
and
pop
int3
xor
in
sbb
imul
leave
sbb
icebp
dec
aas
pop
orb
scas
test
and
lods
sbb
pop
imul
pusha
pushf
sbb
xchg
mulb
and
bound
dec
push
or
xor
es
adc
ss
and
jbe
inc
mov
mov
lods
fs
movsb
pop
andl
std
adc
lock
movsl
mull
dec
js
sti
fidivrl
rcr
dec
jecxz
int3
mov
out
adc
cmp
pop
mulb
movsl
pop
sub
popf
push
loopne
dec
in
and
xor
out
inc
inc
ja
subl
add
jp
lods
push
mov
bound
xorl
inc
idivb
xchg
iret
sub
pop
imul
mov
push
stos
adc
sub
nop
lods
add
fisubrl
or
packsswb
xor
lock
es
dec
loopne
stc
movsb
lds
add
mov
jle
pushf
insb
mov
loopne
push
dec
fsubr
dec
lahf
sarb
push
into
xor
add
push
addl
ret
popa
gs
cltd
clc
lcall
inc
push
inc
mov
movsb
or
loope
mov
or
sbb
in
mov
divl
xchg
aad
aam
mov
adc
int
cmp
das
inc
jne
xchg
lret
adc
insb
lock
in
es
or
mov
pop
ret
enter
arpl
ror
arpl
daa
sbb
in
lret
sub
sbb
xchg
inc
cmp
ss
dec
dec
xor
in
call
inc
call
xor
lcall
test
nop
clc
and
in
pop
xchg
std
stos
mov
fmuls
push
imul
add
xchg
push
mov
sbb
in
dec
xchg
and
fistpll
arpl
sahf
jb
outsb
xchg
fcompl
incb
inc
les
fwait
cmp
repnz
sub
or
ss
bnd
fidivrl
aaa
jle
and
sbb
and
enter
lahf
sbb
push
xchg
leave
push
xlat
xor
push
ficoms
mov
push
push
push
sar
sub
xlat
and
stc
pop
xchg
xor
xor
inc
mul
stos
xchg
xor
or
ja
cltd
add
in
cmp
lock
mov
imul
insl
sbb
pop
ja
dec
mov
test
scas
shrl
push
xchg
loopne
sbb
dec
fstps
mov
jae
push
pop
push
enter
and
jg
aad
gs
and
in
addl
pop
int
pop
inc
xor
xor
sub
ljmp
sahf
jl
fists
add
addr16
dec
inc
andb
fs
int3
push
out
or
sahf
in
mov
je
mov
in
nop
add
add
outsl
mov
and
push
mov
inc
push
push
sub
or
notl
xchg
rcr
js
rorl
sahf
aas
adc
mov
iret
lods
daa
insl
dec
push
jb
or
pop
mov
mov
push
cmpsl
pop
iret
pushf
insb
sbb
push
shlb
lcall
sbb
test
cmp
daa
je
add
xchg
adcl
mov
xorl
xchg
sub
jnp
jno
push
push
pop
inc
mov
out
imul
push
xlat
es
mov
jmp
mov
jge
inc
mov
and
loop
push
jnp
mov
pop
jle
outsb
jmp
fisttps
xor
idivl
cmp
add
inc
push
pop
mov
sti
mov
test
cmpsl
lods
sub
push
dec
lds
data16
arpl
fcmovu
ret
push
xlat
mov
dec
negb
push
stos
sbb
xlat
ja
stc
mov
loopne
in
adc
xchg
test
adc
add
xor
out
mov
jne
adc
ret
iret
sbb
pcmpeqb
xor
mov
and
adc
mov
dec
test
mov
test
xor
lret
stos
in
add
cmp
cld
or
je
push
pop
xor
inc
lods
sbbb
pop
popa
and
xchg
test
loop
mov
imul
jp
repz
mov
cmp
fldt
addps
add
ret
sahf
fisubl
add
mov
jp
bound
lock
ror
xor
loope
adc
adc
xchg
jmp
mov
push
divw
cmpsb
ficompl
hlt
in
movsb
mov
dec
dec
push
arpl
popa
in
stos
lds
add
rcrb
sbb
jno
leave
push
test
add
loop
mov
test
xchg
int3
in
icebp
insb
call
jg
dec
stc
aas
fidivs
scas
shlb
lahf
jne
dec
cmc
loop
or
clc
xchg
pop
pop
lahf
push
test
in
mov
je
add
push
pushf
push
bound
cmc
sti
pop
push
jle
adc
dec
fiadds
gs
add
test
sbb
lods
or
dec
cmc
mov
popa
dec
sbb
ljmp
sub
popa
test
movsb
sub
into
push
dec
jge
sub
jo
add
inc
pop
mov
pop
add
lea
add
xor
mov
mov
adc
jmp
enter
call
sub
jge
adc
add
andl
xlat
push
pop
inc
sub
push
pusha
xor
push
lods
fwait
jo
cmp
sahf
hlt
pop
sbb
add
out
addr16
sub
or
lods
xor
cmp
subl
imul
xlat
mov
in
scas
push
adc
adc
push
fcmovnb
xchg
ficoml
in
outsb
fistl
shlb
add
jmp
in
jg
sub
int
jmp
lcall
test
fnsave
int3
das
dec
out
cltd
lods
xchg
stc
jmp
xor
rcll
fldl
arpl
jg
test
insl
inc
js
loop
jecxz
xchg
dec
jbe
repz
and
movsl
jo
and
imul
mov
arpl
aaa
inc
pushf
divb
fwait
outsl
dec
lods
cld
pop
pop
aam
inc
mov
out
cmp
cmp
cmp
inc
test
push
cld
sarl
push
dec
mov
lock
dec
and
xor
adc
repnz
repz
out
inc
adc
mov
inc
stos
movsl
lods
ret
icebp
xchg
in
add
xchg
cmc
and
mov
and
scas
push
frstor
inc
in
fisubrs
out
insl
dec
test
cmp
and
leave
insb
xor
and
pushf
sbb
push
jg
sti
mov
xchg
push
aaa
rclb
or
ss
out
aam
jge
push
test
aaa
and
popa
in
pop
arpl
mov
add
imul
ret
xchg
movsb
push
mov
mov
sbb
cmp
push
mov
xchg
pop
mov
in
icebp
mov
rorb
mov
std
pop
call
repnz
xchg
cmp
add
mov
adc
jp
fstpt
arpl
jnp
push
stos
xchg
and
adcb
rol
popa
ret
sub
addr16
sbb
popa
std
jb
sbbb
outsb
xchg
cs
inc
out
fistps
repnz
repz
cli
add
cmc
lods
aaa
mov
stos
out
call
dec
cli
sub
cli
call
or
mov
xor
sub
loope
in
ljmp
out
jb
inc
fildll
fwait
adc
pop
hlt
pop
adc
jbe
push
leave
insl
xchg
pop
xchg
movsb
imull
mov
sbb
cwtl
fsubrl
into
bound
jp
loop
sarl
lcall
sub
out
jb
shlb
fsts
pop
mov
and
cmp
dec
imul
insb
dec
dec
pop
mov
stos
ss
aas
mov
or
fdiv
mov
sarl
adcb
in
shl
mov
sub
leave
std
sahf
or
mov
xchg
pushf
fsubs
jne
mov
xchg
pushf
jbe
lock
shr
sahf
fldl
dec
out
inc
sbb
mov
test
lods
mov
dec
testl
test
je
dec
test
jecxz
cmc
add
or
xor
nop
ljmp
add
mov
push
mov
push
addr16
inc
pop
or
lock
mov
sti
enter
jg
or
popf
push
inc
mov
cmp
jno
xor
sub
mov
shrl
std
pusha
roll
pop
inc
xor
rcl
cmp
int3
mov
add
cltd
dec
mov
or
in
push
or
xchg
mov
mov
loop
test
mov
cmpsb
ret
subb
ljmp
push
lret
mov
lods
out
xchg
pop
cmp
scas
inc
and
scas
sahf
fistpll
aas
orl
adc
mov
lock
pushf
aam
push
stos
jnp
mov
xor
push
popa
jnp
aaa
repnz
in
addl
sbbl
xchg
inc
leave
das
or
stc
cmp
lret
mov
seta
divb
push
sbb
xlat
js
mov
test
aad
fidivrs
cmp
out
in
outsl
es
xchg
push
hlt
jmp
test
scas
and
xchg
enter
negl
mov
sahf
stos
clc
jae
mov
mov
ret
rcrb
bound
lcall
add
mov
xchg
fs
ret
pop
jge
sbb
or
test
mov
xor
push
jmp
xor
adc
shll
pop
xlat
cmp
push
loope
repnz
outsb
mov
loopne
pop
push
lcall
mov
cmovge
cs
rorb
imul
xor
mov
mov
int
inc
mov
pop
inc
push
dec
sbb
push
and
and
js
popf
xchg
lret
icebp
shll
sub
or
fadds
cli
movsb
insb
adc
out
sbb
int
mov
dec
sbb
dec
dec
leave
pop
out
jg
add
push
cwtl
and
push
ja
adc
sbbl
mov
mov
test
cmp
push
mov
sahf
add
int
xor
mov
stos
out
pop
or
dec
mov
mov
sub
push
add
fwait
mov
imul
lret
pop
push
lahf
or
daa
fdivs
cmpsb
stos
mov
cmp
sbb
ds
lcall
inc
call
add
xor
mov
push
cmp
iret
add
int
shl
mov
mov
ss
cmp
ljmp
sarb
cwtl
mov
mov
xchg
in
pop
push
lret
int3
adc
or
add
add
sbb
mov
lcall
inc
bnd
inc
pop
add
adc
jne
add
out
in
jge
cmp
jl
popf
out
adc
jge
je
fisttpl
push
int3
outsb
pop
xchg
or
xor
sub
cmp
adc
mov
mov
lods
mov
mov
push
mov
filds
movsl
mov
sarb
fcoml
pushf
inc
out
sub
sbb
cld
dec
xor
repz
lock
scas
out
scas
adcb
repnz
push
arpl
push
add
inc
cli
xor
andb
test
pop
lcall
outsl
dec
sbb
repz
jmp
sahf
mov
lcall
sahf
lock
push
xlat
fsubrl
imul
popl
xor
aad
cmpsl
dec
out
andl
pop
pop
or
or
repz
ja
push
fldt
add
cmp
sub
mov
fcoms
inc
ja
scas
inc
les
cwtl
xor
xor
mov
imul
insb
jmp
inc
cli
sbb
mov
push
mov
ret
lcall
xlat
push
mov
dec
imul
leave
ret
mov
iret
push
out
push
adc
xchg
dec
dec
cwtl
mov
or
inc
ja
sti
xor
pushf
jp
stc
mov
jb
mov
add
cmp
sub
mov
xor
sbbb
jle
lods
cwtl
push
xor
mov
jne
sub
jns
xchg
push
pop
add
movsl
cmp
push
jb
ja
dec
dec
jmp
or
and
sar
cld
roll
mov
and
push
push
and
lret
xor
pop
mov
dec
out
jmp
push
pop
insl
jmp
push
mov
test
jecxz
dec
rcll
out
add
das
out
dec
popa
xchg
mov
cmp
sub
jne
je
sub
xor
jnp
outsl
pop
iret
rcrb
imul
in
lret
xchg
sbb
daa
rep
sbb
and
negl
and
das
cmc
mov
out
xor
sbb
inc
dec
mov
iret
mov
pusha
and
and
lock
adc
add
pop
dec
xchg
xchg
inc
ljmp
ss
dec
xchg
xor
nop
mov
inc
or
into
fnsave
mov
dec
cmpsl
lret
mov
cmp
jbe
inc
test
pop
jb
arpl
pushf
mul
lahf
movsl
jns
jno
or
jg
stc
test
mov
pop
sbb
add
test
fstps
popf
lds
adc
xchg
std
sbb
jb
push
aam
jae
xor
or
rclb
cmovbe
xchg
imul
push
jecxz
gs
dec
pop
sub
mov
scas
jle
push
shll
in
fdiv
in
and
mov
xchg
idivl
and
push
and
push
addr16
adc
mov
into
pop
dec
movsl
jb
push
inc
add
outsb
sbb
sub
and
mov
add
jle
push
cmp
jbe
mov
pop
push
dec
sub
xor
incl
out
scas
mov
call
scas
imul
pop
push
mov
push
loope
or
or
test
xchg
lahf
jmp
pop
pop
adc
leave
push
into
rorl
adc
loopne
mov
lret
cmp
icebp
inc
das
mov
pop
push
lock
outsb
push
gs
pop
sub
cmp
sbb
pop
jnp
push
cmp
mov
das
push
cmp
lahf
roll
repz
mov
mov
lcall
sbb
aam
xlat
imul
push
and
cmp
enter
pop
leave
loope
pop
shlb
mov
xchg
in
incl
xorl
mov
jge
test
xorb
jae
cld
cmp
jae
sub
mov
mov
xchg
ja
pop
and
lcall
mov
dec
sbb
mov
fisttpl
popa
jecxz
push
andl
insb
rcrl
pop
jbe
or
aaa
pusha
adcb
jbe
jnp
push
in
fcmove
bswap
pusha
mov
in
and
push
inc
mov
pop
xor
xchg
pop
dec
and
cmp
mov
out
aaa
inc
push
xchg
jo
mov
shr
mov
push
popa
es
and
adc
jmp
aad
and
bound
mov
shl
in
or
mov
in
lcall
pop
adc
outsl
aaa
aaa
xor
push
aaa
pop
xchg
mov
pop
fsts
daa
push
int3
leave
pop
mov
push
clc
dec
fnstcw
mov
fstpt
stos
cmp
cmp
test
dec
fistps
or
jbe
jecxz
js
out
mov
imul
jb
sub
inc
ljmp
and
mov
mov
pop
mov
dec
jnp
in
in
cmc
pop
dec
adc
std
and
xlat
test
pop
cmp
mov
jb
out
sbb
aam
clc
dec
test
out
leave
push
cmp
scas
inc
roll
mov
stc
mov
insb
xchg
sarl
in
cmp
movd
lods
cmp
mov
roll
pushf
mov
xlat
xlat
outsl
aad
out
mov
and
sahf
add
idiv
int3
inc
loopne
adc
push
cmc
mov
pop
daa
popf
sbb
cli
addl
shrb
test
inc
xor
mov
xor
incb
mov
pop
fwait
loope
xchg
mov
mov
stc
rorb
pusha
ret
daa
in
sub
inc
fisttps
lea
loop
add
sbbl
mov
cmp
push
push
roll
pushf
data16
hlt
dec
adc
and
das
pop
nop
mov
aas
rcll
fmul
add
les
sahf
int3
jne
loopne
push
inc
cli
fs
movsl
jbe
popa
out
and
push
sbb
js
adc
adc
scas
and
outsb
loop
shrl
addr16
pop
popa
faddp
xchg
mov
lahf
cltd
mov
push
xor
sbb
cmpsl
and
lock
inc
pop
mov
mov
jge
push
out
sti
dec
lret
faddp
push
pop
or
inc
add
cmp
in
add
inc
lret
pop
pop
leave
push
cmpsl
leave
dec
dec
push
push
mov
inc
mov
adcl
xor
popa
stc
mov
outsb
mov
js
push
xlat
dec
int
mov
in
pop
jae
mov
dec
xchg
dec
sub
and
es
sub
mov
sti
inc
fucomip
arpl
pop
or
mov
test
nop
xchg
test
or
mov
pop
or
lret
ret
cli
cmp
pushf
and
das
in
fnstsw
int
dec
mov
gs
subb
pop
xchg
and
repz
mov
mov
sub
pop
pusha
ret
adc
mov
jnp
daa
cmp
adcl
jns
test
jle
enter
leave
push
out
sahf
lret
push
mov
sbb
sub
mov
pop
sbb
add
inc
into
jle
cmpl
xchg
xchg
bound
loope
inc
xor
ljmp
out
insb
std
je
call
call
dec
mov
lret
push
test
mov
push
cmp
adc
out
xchg
dec
sub
dec
cmp
int
or
adc
outsb
fdiv
outsb
mov
pop
mov
call
scas
or
xor
add
dec
mov
xchg
mov
jno
andb
push
fnstsw
jge
mov
push
mov
push
sbb
test
cmp
loopne
sti
mov
jmp
out
lock
lret
push
out
jmp
push
mov
and
frstor
bound
stos
push
mov
jo
xchg
mov
xchg
mov
ficoms
fcompl
sub
out
mov
add
sub
addr16
push
adc
fwait
xchg
lret
arpl
lret
test
dec
and
jns
stc
xorb
ds
std
out
push
mov
adc
bnd
ja
outsl
jmp
push
pusha
xchg
js
cmp
xchg
xchg
mov
pop
popa
jb
leave
pop
daa
in
out
pop
inc
xor
jo
iret
les
in
push
dec
cld
add
cmp
fiadds
fstl
insl
out
mov
rcr
negl
pop
sbb
pop
in
sbb
jno
adc
imul
mov
dec
mov
adc
js
push
add
push
cli
sub
orb
pop
xchg
mov
sarl
mov
inc
jg
lds
xor
jecxz
pop
rcrl
test
xor
fldenv
mov
mov
mov
jb
jo
pop
lods
push
test
lods
sbb
pusha
sti
lock
data16
or
sbb
pop
das
sbb
pop
sbb
mov
pop
add
leave
mov
pop
dec
xchg
dec
jl
aam
in
jnp
insl
xor
pushf
out
cmp
imul
or
mov
mov
das
add
cmp
push
xchg
xor
add
mov
pop
jns
or
jae
jg
test
stos
stos
scas
nop
rolb
mov
int
imul
xlat
push
and
dec
in
repz
xchg
dec
call
cmp
fdivr
daa
popa
or
mov
in
fisubs
shl
popf
mov
mov
mov
xchg
shlb
ret
push
dec
fs
rorb
dec
push
in
ret
push
or
outsb
push
imul
cmp
xchg
outsb
cmp
scas
dec
outsl
sub
push
das
movsl
inc
popa
mov
int
inc
scas
leave
sub
push
movsb
xor
lcall
cmpsb
notb
stos
fldcw
jno
fs
xor
outsl
dec
cmpsb
iret
push
cli
pushf
stos
loopne
roll
scas
mov
lret
sbb
xchg
mov
je
je
mov
movsl
gs
lds
push
mov
dec
int
add
cmp
lahf
mov
lds
cmp
ljmp
add
and
adc
lcall
imul
in
xchg
mov
add
pop
sti
ljmp
xchg
sbb
arpl
in
cmp
fdivl
mov
out
jno
xchg
ret
loope
popa
sbb
mov
sub
mov
push
out
in
jmp
mov
push
std
in
xchg
add
sub
pop
lahf
pushf
inc
ds
int
lret
addr16
repz
xchg
xor
in
xchg
jmp
sbb
into
or
lods
xor
mov
aas
leave
xchg
jmp
xchg
push
repz
ficompl
outsl
cmp
jns
pop
xchg
mov
mov
notl
out
lods
jecxz
es
stos
push
xadd
mov
add
fs
inc
jl
in
insl
xchg
xor
arpl
jne
jp
and
or
cwtl
lods
cmp
add
insl
in
pop
lock
repz
clc
jmp
add
sbb
int3
cmpsb
icebp
and
aas
push
cmp
movsl
mov
add
lods
lea
xchg
aam
pusha
mov
out
std
add
dec
out
mov
cmpsl
iret
loopne
and
out
mov
dec
iret
cli
cmpb
sbb
dec
jle
scas
xor
test
sbb
xor
imul
mov
jne
cli
jns
out
aaa
scas
sbb
xlat
xchg
mov
push
add
sahf
lea
inc
outsb
jne
xorl
movsb
or
fwait
lds
outsb
mov
repz
scas
movsl
out
jmp
jge
popa
in
loop
adc
push
xchg
or
inc
icebp
or
mov
sbb
cltd
lea
loope
cltd
sbb
movsb
lods
cmc
in
pusha
out
mov
fcompl
imul
sbb
push
test
mov
push
lock
jns
je
jbe
xchg
aam
or
lods
arpl
loopne
loop
pop
idiv
in
lcall
je
mov
jb
mov
lret
push
sub
repnz
pop
fisubrl
push
or
mov
pop
mov
arpl
or
or
fwait
add
in
in
jecxz
add
or
sub
hlt
jb
into
jae
xchg
je
dec
arpl
js
jge
loope
arpl
cmp
iret
faddl
push
mov
dec
jo
aad
push
dec
int3
aad
add
or
cs
movsl
sbb
or
mov
push
cs
xor
or
test
out
push
dec
xor
jle
les
mov
insl
rcll
je
jmp
push
mov
jmp
out
mov
xchg
popl
ljmp
popa
pinsrw
add
lods
dec
jge
dec
sbb
mov
les
push
jnp
out
fisttps
popf
cmp
out
xchg
inc
jecxz
xchg
jae
int
xor
pushf
fldcw
mov
mov
xor
lods
mov
lds
cs
add
test
xchg
cmc
scas
mov
jl
mov
sbb
ret
std
rorl
cld
sub
into
out
mov
inc
test
hlt
adc
out
cwtl
lds
and
xchg
add
pop
or
mov
sahf
sub
adc
cmpsb
inc
mov
inc
and
out
mov
push
ja
fisubrl
les
push
push
inc
mov
imul
adc
sbb
push
mov
data16
dec
jge
inc
je
aaa
stos
mov
lods
rol
mov
imul
loope
test
sub
cld
jns
inc
in
and
test
negb
ret
jno
mov
dec
push
adc
sbb
pushf
sub
test
in
mov
sbb
cld
adc
jp
adc
sub
icebp
fsubs
jnp
lret
push
or
mov
xchg
xchg
push
mov
lcall
xchg
and
adc
iret
das
xor
popl
or
sbb
mov
add
sbb
sti
mov
sub
lods
outsb
cmp
insl
idivb
jne
add
mov
jo
jns
add
mov
stos
inc
and
sub
pusha
fdiv
or
gs
into
jmp
data16
gs
push
mov
mov
sahf
jns
jb
jne
ret
push
dec
fwait
jl
shlb
roll
mov
vmwrite
push
sbb
mov
adc
sbbb
js
aaa
inc
and
adc
mov
mov
hlt
sbb
sub
push
aaa
dec
push
loop
mov
test
push
repz
lret
adc
sub
xor
rolb
mov
or
dec
xchg
xlat
xchg
or
inc
mul
jle
icebp
xchg
xor
hlt
mov
fcoml
int
xchg
inc
push
pusha
mov
daa
or
nop
cmpsl
adc
xchg
lcall
mov
mov
pop
jmp
mov
sti
pop
and
ja
lock
pop
mov
mov
pusha
lock
sahf
test
enter
ja
stos
or
mov
out
pop
nop
inc
mov
mov
icebp
cld
or
out
cmp
jno
push
inc
mov
js
jo
stos
imul
jnp
std
xlat
adc
cli
fbld
and
in
popa
xchg
popa
mov
call
xchg
xchg
sub
jns
jge
push
pop
sub
or
stc
loopne
xor
idiv
lods
fs
add
lock
lds
push
pop
loop
push
sub
cmpl
jl
mov
xor
test
cmpl
out
push
xor
jo
mov
lds
fsubl
lods
mov
sbb
subl
sub
das
lcall
out
add
or
sbb
inc
mov
cmovle
lods
add
mov
je
cmpsb
loopne
fwait
outsb
xor
daa
cmp
das
jge
push
popf
xchg
int
jne
cmp
jl
adcl
add
or
pop
pop
mov
push
mov
dec
les
xchg
inc
testl
fmul
or
jne
loop
jnp
rcrb
xchg
outsl
sbbl
std
int3
mov
jb
pop
pop
lock
xor
insl
push
enter
rol
mov
jge
dec
and
cmpsb
into
add
lahf
loop
mov
stc
jmp
sbb
push
inc
xchg
xchg
sti
xlat
scas
xchg
xchg
movsl
rcl
or
and
repnz
scas
and
cs
or
cmp
mov
invd
mov
xchg
cmp
mov
sbb
lds
jmp
mov
push
mov
xor
jno,pn
mov
xchg
pop
add
sbb
mov
push
mov
mov
lods
mov
or
test
test
mov
push
dec
sub
insb
js
mov
fsqrt
add
in
xchg
stos
roll
cmp
shlb
inc
sbb
mov
lret
lods
mov
dec
mov
test
sbbl
movsw
mov
add
and
dec
mov
mov
cmp
inc
test
adc
sbb
ss
add
jmp
push
cld
sti
sbb
les
pop
mov
outsb
aam
dec
inc
pop
bnd
jmp
dec
sbb
mov
in
call
jnp
lds
push
inc
and
gs
pop
jb
rcrb
xchg
fmull
jbe
jmp
insl
nop
sbb
dec
or
mov
outsl
pop
hlt
push
adc
test
adc
ds
cltd
loop
and
shrb
xchg
in
daa
xchg
fwait
nop
add
cld
adc
pusha
dec
pop
sbb
mov
adc
sub
mov
shlb
cmp
cli
loop
jmp
movl
push
mov
dec
iret
fdiv
fcomip
inc
stc
stos
packsswb
sbb
mov
and
shll
sbb
pop
pusha
cmpl
mov
ljmp
pop
cmc
es
mov
int
lock
mov
jno
and
jge
adc
lods
xchg
gs
icebp
popa
mov
mov
and
sub
mov
pop
fs
jno
or
cltd
sbb
out
jns
pop
mov
fs
adc
outsb
mov
jns
imul
out
in
dec
push
mov
lret
std
xchg
test
fcoms
in
dec
pop
pop
test
push
rolb
or
addr16
fcomps
xchg
ljmp
mov
lea
jae
pop
jb
jae
lock
sbb
loop
sbb
or
jle
in
and
push
mov
sar
in
rol
cmp
mov
and
test
jecxz
jge
push
cmp
addr16
dec
lret
test
cmc
mov
inc
adc
xchg
scas
maskmovq
mull
or
rcrb
lds
insb
in
cld
inc
stc
xlat
scas
stc
mov
xchg
cvttps2pi
cmc
movsl
pop
jecxz
cmp
mov
cmp
jae
mov
pop
jb
outsb
jb
cmp
sub
cmc
inc
or
mov
adc
sub
pushf
mov
mov
sub
cwtl
js
or
das
mov
mov
or
shrb
int
sbb
jg
imul
fs
lret
imul
xchg
and
dec
loopne
inc
pop
xchg
enter
je
jmp
and
add
ja,pn
add
and
lods
push
mov
pusha
mov
lods
scas
mov
adc
scas
lahf
mov
fidivrs
xor
bound
adc
sahf
popf
leave
out
cmp
cmp
cmp
int3
ljmp
pop
cmp
adc
std
les
ret
jmp
sub
pop
into
mov
xchg
jge
test
dec
fwait
mov
mov
aad
pushf
imul
add
dec
andb
xchg
jo
sarb
ss
jbe
cmp
iret
imul
sahf
mov
push
mov
imul
int
gs
je
mov
out
js
mov
lods
aad
and
scas
and
sub
adc
ss
daa
stc
mov
out
loope
sub
xor
iret
mov
jg
stos
inc
jle
and
dec
cmpsb
push
test
pop
loop
inc
xor
adc
aad
inc
test
push
xchg
outsl
pop
mov
mov
push
push
and
rcrl
scas
and
sahf
mov
lods
sub
repnz
pop
and
inc
push
std
bnd
cld
dec
movsl
sbb
and
outsl
pop
and
add
xor
iret
cmp
mov
pushf
lcall
pop
call
cmp
push
inc
dec
mov
lret
addl
subl
sbb
pop
and
push
sub
cmp
std
movsb
ss
out
jns
rorb
scas
mov
icebp
les
cmp
scas
sar
pop
xchg
insb
aam
in
int
mov
mulb
sub
add
lock
mov
mov
iret
inc
sbb
inc
ror
xor
aam
xchg
sub
popf
and
test
das
adc
stos
add
mov
sbbl
pop
cmc
cmpsl
push
sub
das
mov
add
inc
clc
std
loope
mov
jns
ret
inc
cmpsb
add
in
xor
lds
push
stos
bound
mov
pop
push
jle
inc
in
or
test
daa
cld
aas
and
adc
movsl
sub
shrl
orl
in
jmp
adc
shrl
mov
mov
lahf
loope
mov
or
push
shll
adc
mov
mov
aas
jp
pop
pop
orl
adc
dec
mov
xchg
movsl
adc
rcr
lret
and
ffree
xchg
jb
scas
xchg
popf
push
or
gs
jbe
hlt
mov
ret
xchg
mov
or
cmpsl
rclb
jge
or
out
jle
rolb
ljmp
add
push
pop
jnp
fistpl
sub
sti
fnstsw
pop
sbb
mov
lock
push
out
loope
popa
jle
rclb
lds
pop
das
fsubl
inc
pop
scas
mov
xchg
add
sbb
ja
mov
ss
mov
mov
outsb
lods
aad
xorb
out
clc
jno
lds
xchg
scas
pop
add
shrl
shrb
mov
fwait
add
out
mov
xchg
mov
mov
jo
daa
pop
ss
stos
ljmp
push
roll
add
fnstcw
push
bound
jnp
mov
mov
inc
in
push
repnz
jl
aad
cwtl
jbe
inc
stc
scas
loop
in
push
mov
add
bound
dec
imul
cli
leave
ret
push
gs
xchg
or
xorl
movsl
dec
push
popf
lret
gs
mov
jne
xchg
or
dec
test
and
sbb
data16
or
mov
sbb
iret
fistps
ljmp
dec
fwait
ja
iret
jmp
pop
sbb
push
lods
pop
push
inc
push
jg
pop
loopne
jmp
out
rolb
inc
dec
dec
sub
xor
lods
lahf
or
push
xchg
xchg
cmp
jno
cmp
mov
add
pop
test
pop
lcall
out
cmpsb
pop
cmc
and
out
pop
adcb
mov
mov
mov
xchg
mov
xchg
push
push
inc
mov
in
and
mov
xchg
inc
sarl
adc
xchg
or
xchg
and
cmpl
mov
sbb
add
sub
movsl
xchg
into
jnp
sbb
in
test
inc
mov
dec
sbb
jae
rcl
lahf
cltd
cmpl
lret
fistpl
mov
pop
push
push
in
mov
fmull
add
nop
or
lcall
cld
lds
jb
add
test
jg
mov
jne
push
mov
mov
mov
or
aaa
jnp
dec
sbb
jne
add
pop
mov
shr
icebp
rol
xchg
push
jle
dec
imul
cmc
mov
mov
inc
test
jg
ret
xchg
xchg
loopne
es
mov
es
adc
fucomp
enter
fimull
mov
push
xchg
lock
mov
sub
push
inc
mov
pop
push
scas
rolb
jle
inc
mov
xchg
mov
inc
xchg
in
fwait
xchg
mov
cvttps2pi
in
sbb
aas
mov
push
push
aad
pop
or
sbb
adcb
jno
insb
mov
cmp
std
or
mov
mov
dec
cld
das
cmp
iret
add
push
pop
sub
mov
lret
lods
mov
xor
test
xchg
mov
mov
pop
ffree
sub
mov
movsl
jle
pushf
mull
cli
or
xchg
dec
pop
aad
jb
repnz
pop
fisubl
mov
jnp
lahf
and
aas
push
fsubrp
jne
call
adc
shl
pop
inc
mov
lock
adc
inc
int3
out
fs
mov
jo
add
xor
movups
jl
and
xchg
loop
iret
rol
cltd
inc
lods
jge
pop
xchg
push
bound
jne
imul
mov
mov
shrl
adcl
fstps
cmpsb
mov
scas
dec
incb
out
jne
inc
xchg
hlt
jp
push
stc
out
xchg
mov
add
or
ds
sbb
pop
sbb
fmuls
subl
cmpl
push
xor
jg
push
xchg
clc
dec
dec
loop
lret
dec
mov
movsl
pop
repz
sarl
leave
and
sub
xrelease
adc
mov
mov
dec
mov
dec
std
pop
xchg
shll
pop
out
xchg
sub
or
pushf
ret
in
rorb
rcl
xor
cld
sbb
lret
adc
xor
xchg
loop
mov
cmovge
inc
fwait
loopne
adc
cmpsl
cltd
mov
icebp
mov
test
ret
outsb
inc
push
lods
push
jl
cmp
call
mov
xchg
cltd
out
js
filds
push
pop
xchg
push
scas
lock
xlat
pop
pop
mov
or
sarb
sub
shl
lcall
inc
scas
mov
outsb
sbb
fs
pop
aad
or
add
dec
nopl
ja
mov
rorl
jp
cli
cwtl
push
cmc
pop
es
mov
and
xchg
dec
pop
push
push
and
push
jle
outsl
cs
inc
mov
mov
call
xacquire
fnstsw
xchg
sub
sbb
loop
test
pop
cmpsb
add
movsl
out
dec
sbb
cmp
out
and
jmp
inc
jae
iret
ja
ret
sub
xchg
adc
add
or
sahf
dec
xlat
cs
cmpl
inc
repz
sarl
int3
jno
jnp
outsl
add
lock
dec
mov
cmpsb
dec
cmpsb
scas
adc
mov
mov
mov
jbe
inc
ljmp
add
mov
sub
pop
shlb
call
into
shll
xchg
jecxz
ret
roll
xchg
xor
pop
cmp
or
test
cmp
jge
dec
adc
and
je
data16
sbb
int
xchg
add
mov
mov
mov
lret
popf
ret
pop
mov
icebp
pop
dec
popf
adc
sub
int
xchg
pop
mov
pop
addl
inc
cmpsb
test
cmpsb
addr16
push
int3
clc
in
ljmp
pop
jnp
mov
xchg
cmpb
push
lea
pop
adc
ja
loope
mov
inc
popf
xor
les
testb
mov
xchg
int3
addr16
daa
xor
push
mov
cld
inc
xlat
pop
mov
shrb
xor
push
stos
pop
mov
pop
jmp
dec
call
xchg
jno
sub
dec
push
out
cmp
inc
jmp
rcrl
subl
lods
cmpsb
mov
xchg
lahf
sbb
mov
hlt
sub
pop
mov
mov
ljmp
xchg
sbb
imul
and
leave
outsb
mov
jge
push
pop
cli
ret
xor
sub
adc
mov
jl
lods
loope
lret
cld
push
dec
xchg
sub
lock
popa
insb
xlat
mov
dec
js
sbb
arpl
sti
pop
hlt
mov
mov
rorl
ret
movsbl
out
aad
insl
jnp
mov
and
test
mov
push
and
inc
mov
int3
into
add
jb
push
insb
sbb
pop
jmp
cmp
jecxz
xchg
xor
xchg
lods
int3
push
pop
sbb
lea
inc
jl
fldl
mov
loopne
loope
pop
andb
cld
lret
xor
mov
or
jle
pop
dec
dec
cmc
outsl
and
je
gs
int
jbe
adc
mov
aam
cltd
stc
cmpsl
dec
fildl
arpl
hlt
sub
es
fcompl
lods
fsubl
outsl
mov
fsts
inc
ds
inc
mov
inc
add
dec
leave
xlat
addr16
push
inc
mov
lock
xor
mov
push
ljmp
sub
rcr
jns
enter
jno
xchg
fidivrl
dec
out
fstpt
movsb
outsb
pushf
sub
sti
push
inc
xor
xchg
insl
or
xchg
sub
mov
mov
mov
dec
mov
data16
cs
mov
mov
fimuls
mov
add
ret
insl
into
sbb
mov
pop
fdivr
xor
mov
jbe
and
mov
insl
inc
stc
dec
jp
adc
xchg
push
or
test
movsl
popf
gs
shll
mov
subb
mov
jmp
cmp
mov
lcall
imul
mov
adc
xchg
xor
inc
xchg
and
xlat
or
sti
incl
shrb
push
adc
mov
dec
loop
lcall
sub
xor
cmp
cmpsb
roll
jae
mov
call
ficompl
or
xlat
xor
lcall
mov
faddp
or
pop
mov
out
add
jnp
pop
jae
add
scas
leave
dec
adcb
pop
fs
subb
mov
lea
push
mov
xor
xchg
mov
out
scas
mov
or
mov
mov
xchg
fcomps
pop
pop
and
mov
aad
js
int
lock
and
push
aam
push
js
divl
sbb
aad
sub
sbb
push
xchg
daa
or
es
fsubrp
cmp
mov
arpl
leave
test
push
jmp
mov
insl
idivb
sbb
into
sub
popf
add
icebp
sub
cmp
stos
jmp
mov
std
loope
iret
sbb
call
pop
xchg
xor
xchg
sbb
add
mov
pop
pop
cmp
outsl
aam
in
xchg
lods
iret
shrb
lahf
insl
xor
mov
test
into
cmp
adc
adc
hlt
xchg
outsl
pop
cs
roll
lock
bound
and
pusha
cmp
popf
dec
pop
jmp
cwtl
sub
stos
rorb
pusha
inc
lahf
inc
sbb
jnp
sub
dec
mov
xchg
fwait
jmp
push
adc
stc
shl
ja
subb
repz
adc
pop
addr16
push
rorb
and
jecxz
jne
xchg
or
movsb
and
repz
push
into
popf
xchg
sub
jmp
aam
fstps
arpl
inc
mov
loope,pt
fdivp
adc
jbe
or
idivl
xor
aas
pop
lods
sub
jg
pop
push
out
shll
ljmp
mov
sbb
into
out
aam
cld
cld
jg
imul
mov
mov
int
int
cmp
mov
mov
shlb
adc
xor
sti
jbe
repnz
sub
addr16
or
std
mov
push
adc
jne
inc
fsubrp
imul
xchg
scas
push
mov
lods
cmovns
repz
aaa
sbb
adc
stc
and
jp
arpl
add
push
mov
mov
mov
mov
or
inc
xchg
jbe
xlat
bnd
lret
mov
sahf
inc
sub
dec
add
mov
push
sbb
inc
aad
pop
sbb
adc
inc
lods
sbb
imul
mov
rcl
cmp
movsb
dec
inc
mov
mov
add
mov
sti
leave
and
punpcklwd
xor
mov
sbb
add
imul
pushf
movsb
adc
mov
add
repz
loope
test
cmp
test
cld
aas
inc
sub
adc
or
mov
cmc
lods
inc
fldt
bound
jae
jmp
inc
repz
mov
clc
int
dec
les
fwait
xor
stc
push
push
shlb
jns
cld
popw
and
mov
xor
mov
mov
addr16
adc
sbb
and
sub
ds
mov
and
in
push
shl
sbb
mov
jmp
out
loope
loopne
inc
popa
jge
mov
ljmp
mov
dec
js
add
lahf
test
sub
sbb
popf
pop
add
das
mov
xor
call
or
in
jne
push
lods
call
xchg
dec
enter
mov
cmp
jge
mov
out
aad
dec
mov
and
out
pop
pop
bound
ja
mov
inc
sub
push
mov
jmp
or
cmp
outsb
mov
and
fisttpl
ss
imul
mov
xor
push
out
jle
push
out
ret
out
test
outsl
aad
sub
std
xor
xchg
idivb
mov
xor
hlt
and
mov
clc
mov
adc
and
sbb
cld
daa
shrb
clc
js
stos
mov
aad
pop
insl
sub
jmp
fisubs
andl
iret
testb
cwtl
mov
test
pop
test
and
xor
enter
in
jbe
jae
sbb
mov
loope
scas
adc
test
sarb
sbb
cli
inc
scas
int
mov
inc
inc
into
and
imul
pop
mov
icebp
insl
cmpsb
cmpsl
flds
pop
insb
mov
js
push
movsb
addr16
fiaddl
les
cltd
addr16
test
jmp
add
ljmp
in
out
and
cmp
addb
cmpsb
fsubl
cmpsl
orb
mov
adc
mov
jmp
mov
fs
jae
ss
xor
aas
cmpsb
rcrl
push
test
jmp
mov
cli
fstpt
jae
mov
in
mov
pop
sbb
or
mov
push
xchg
pop
sbb
pop
push
and
cltd
xor
and
aas
mov
pop
cwtl
jb
push
or
dec
stos
push
test
or
mov
rol
cwtl
dec
xchg
hlt
inc
cmp
xlat
out
jle
xlat
fisubrl
sbb
jmp
std
mov
outsl
and
cmp
dec
fwait
hlt
shll
sub
lods
cmpsb
jb
into
cmp
sbb
ss
fst
popa
fcomps
mov
cmp
mov
movsb
nop
ja
ret
mov
mov
mov
mov
mov
aas
shl
pop
inc
aaa
push
popf
mov
cmpsl
fs
jns
mov
mov
mov
adc
lret
add
pop
xor
outsl
lret
sub
dec
dec
xchg
mov
xor
sarl
jecxz
adc
pop
sahf
xchg
into
adc
stos
jecxz
sub
sub
xchg
aam
and
das
mov
jmp
addr16
cmc
les
jno
inc
aam
jle
arpl
mov
and
aas
mov
add
push
shlb
lret
mov
mov
lahf
cmp
jecxz
fcmovnb
in
das
cs
xchg
sbb
mov
fwait
hlt
and
push
out
std
adc
sub
stos
adc
xchg
pop
push
cmc
jo
leave
cmp
inc
sub
lcall
movsb
xchg
inc
or
in
mov
mov
jge
pop
shlb
btr
scas
pop
test
sub
popf
and
mov
adc
in
sbb
jl
fstpl
cmp
dec
inc
lret
dec
xchg
sub
cld
inc
mov
xor
fmull
nop
mov
mov
in
jns
mov
inc
mov
xchg
mov
lods
sub
sub
mov
mov
daa
stos
pop
dec
jl
adcb
push
leave
jp
cltd
test
or
xchg
mov
xlat
rcrb
push
jb
xchg
popf
mov
xchg
int3
xchg
loop
or
dec
sarl
adc
popa
mov
jne
sub
call
bound
cmc
and
ljmp
cmp
mov
push
adc
jbe
scas
test
cmp
incl
out
jg
push
xor
xchg
pop
inc
dec
adc
fstps
pop
popf
leave
sbb
mov
mov
cmp
out
jp
lret
call
stos
adc
or
arpl
jg
in
sub
push
movsl
leave
in
or
cmpsl
jg
test
sub
cmp
pop
ds
mov
enter
jno
jecxz
mov
sub
or
sahf
cmp
shll
push
ss
loope
outsb
and
jecxz
enter
fwait
sbb
shll
inc
lret
int3
pushf
loopne
cwtl
adcl
notl
movsl
xchg
push
push
ror
icebp
add
icebp
mov
push
popf
rolb
scas
mov
dec
les
cmc
into
ret
jno
or
inc
lea
jg
fisttpll
sub
xor
sbb
mov
stos
sbb
xchg
adc
pop
out
dec
jno
or
sbb
fstpt
in
jno
clc
stc
hlt
cld
fnstcw
jnp
mov
scas
fs
lcall
cmp
mov
sub
or
lock
popa
xchg
outsl
jnp
loope,pn
movsl
imul
into
in
fstl
sbb
push
jcxz
and
sbb
imul
rcll
adc
divb
dec
fldenv
out
pop
sbb
sbb
xor
mov
xchg
add
mov
jmp
sub
gs
pop
icebp
xchg
out
sarb
mov
push
push
jecxz
pop
mov
in
aad
pop
or
pop
ret
je
and
nop
out
dec
add
push
pop
and
sub
das
dec
mov
inc
lret
push
mov
dec
push
inc
push
pop
inc
push
sbb
jb
push
push
pusha
cmp
adc
addr16
mov
nop
in
into
xchg
adc
insl
sbb
mov
mov
add
scas
mov
jl
movsb
dec
xor
adc
mov
xchg
ret
adc
loop
adc
adc
jl
xchg
jg
dec
xchg
cmc
lea
pop
rorl
mov
sahf
daa
sbb
loopne
loope
dec
movsb
pusha
pop
add
jae
outsl
xor
imul
and
adc
mov
adc
pop
mov
leave
int
daa
sbb
sbb
popf
pmulhuw
sti
xchg
aaa
push
daa
dec
enter
test
inc
sub
xchg
imulb
dec
jg
xor
imulb
jp,pt
int
cltd
pusha
lock
fs
sub
jecxz
dec
inc
jl
fnsave
fxch
fs
dec
ljmp
out
cmp
jnp
cmp
cmc
addr16
mov
stos
xchg
push
test
in
xor
rcrb
xor
rsm
insl
mov
xchg
repnz
std
sti
inc
push
popf
cmp
dec
mov
aam
dec
mov
mov
insl
imul
es
cmpsb
push
div
pop
out
inc
clc
inc
xchg
sbb
push
sbb
jns
mov
jne
jl
gs
mov
popa
fiaddl
lods
sbb
leave
imulb
filds
inc
or
and
cmpsl
movaps
mov
xchg
js
cmpb
mov
xor
pop
push
ds
dec
lret
and
stos
and
and
lea
test
lret
cmpsl
jp
stc
cmp
or
or
inc
int
xor
or
dec
rcl
lock
data16
lock
inc
das
divb
dec
cld
inc
xor
xchg
cld
and
clc
lea
mov
repz
xchg
sbb
push
push
fisubrl
in
ret
mov
or
mov
push
lock
lock
fcoms
test
sbb
xchg
mov
lods
sahf
ss
outsb
lahf
cwtl
lea
push
or
jb
pusha
test
lods
andl
xor
adc
ljmp
sbb
mov
idiv
jmp
mov
in
xorl
fwait
push
hlt
xchg
inc
pop
push
or
repnz
outsl
shl
mov
dec
adc
jno
inc
fsub
pop
and
rcll
daa
and
rcrb
ficompl
push
out
dec
and
inc
out
sub
aad
xchg
cmp
test
cltd
xlat
clc
daa
jl
add
inc
xor
or
push
lea
jb
adc
es
xor
ja
in
das
ret
sub
int3
inc
xor
enter
mov
shrb
into
lret
inc
pop
ret
add
xchg
test
or
xchg
mov
dec
aam
pop
insl
std
cli
fcoml
xlat
idivb
cmpsl
repz
add
out
mov
pop
jne
mov
in
iret
mov
test
xlat
movsb
inc
pop
inc
xchg
jns
je
jmp
icebp
pop
mov
scas
cmpl
std
cs
addl
mov
cmp
sub
movsb
jbe
ja
popl
mov
dec
scas
or
mov
push
xchg
jne
cmp
mov
test
popf
in
not
test
sbb
add
xchg
clc
sti
aaa
lahf
xor
rolb
popf
ljmp
ficompl
sahf
scas
jns
xor
call
xchg
enter
cwtl
into
mov
insb
out
or
push
dec
daa
hlt
add
insb
jecxz
popa
pushf
bnd
adc
cmpsb
ret
xchg
clc
push
and
push
mov
je
mov
sahf
outsl
lret
sbb
les
addr16
adc
xchg
sbb
cld
repnz
in
mov
jl
add
mov
rol
rcl
pop
test
xchg
in
sbb
push
and
mov
or
cld
fs
insb
sahf
mov
lods
loope
test
or
jno
adc
mov
andb
pop
sub
jo
and
or
and
inc
xchg
adc
push
mov
or
in
fwait
mov
aam
xorl
add
repnz
or
leave
popf
movsl
js
lds
sarb
adc
stc
mov
insl
mov
push
int3
movsl
stc
cwtl
in
ret
ja
xchg
fisubrs
dec
out
xchg
dec
inc
scas
pop
lock
sub
int3
pop
jecxz
mov
mov
shlb
mov
pop
je,pt
les
std
adc
ror
bound
push
jno
cmp
mov
lods
shrb
lret
mov
subb
subb
fldenv
stos
or
repnz
popf
in
sti
xor
rcl
jl
sbb
insl
and
out
add
push
and
je
pop
fisttpll
std
cmp
jl
jl
push
cli
xor
fidivrs
jle
push
rcr
cmp
cmc
into
pushf
add
mov
out
daa
mov
addr16
je
mov
mov
sub
add
pop
xor
in
xor
xchg
pop
pop
push
mov
jbe
sbbl
jecxz
fldcw
push
imul
mov
sub
mov
ds
push
test
jne,pt
ret
imul
scas
pop
out
cmpsb
inc
sub
rclb
pop
xor
sbb
sar
pop
test
gs
mov
adc
out
data16
pop
stc
inc
mov
addr16
sub
int3
loope
jo
jl
add
add
cmp
jae
das
sti
push
mov
dec
arpl
icebp
pop
mov
dec
dec
mov
inc
xchg
lods
aam
sub
cld
inc
mov
xchg
sub
push
loopne
aam
mov
sbb
enter
dec
xchg
inc
aaa
sbb
pop
pushl
out
rclb
add
aam
scas
jo
scas
jg
jmp
mov
jne
pop
sbb
mov
add
xor
cli
leave
mov
pop
mov
and
cmp
int
sub
test
iret
cmp
push
imul
call
pop
dec
pop
out
das
jno
lret
cmp
cmp
test
pop
jp
roll
xor
shr
cwtl
vmread
sti
and
xchg
xchg
push
mov
lea
add
xor
xchg
cwtl
jp
lods
popa
movsb
adc
cmpsl
push
popf
pop
mov
inc
fdivrs
lcall
cmc
xor
dec
and
adc
sbb
int
ficompl
xor
mov
sti
cs
xor
push
xlat
scas
sbbl
fildll
push
stc
popf
jg
mov
xor
mov
lods
psubb
gs
push
push
push
xor
clc
dec
test
cs
inc
loop
dec
or
rcrl
call
lret
adc
sub
add
pop
imul
mov
cmp
icebp
sub
add
out
pushl
or
int
add
ret
push
mov
lret
mov
loopne
jae
subl
inc
push
sub
mov
out
mov
pop
mov
hlt
xchg
and
cmp
dec
stc
jl
fimull
outsl
jmp
adc
push
repnz
dec
mov
mov
jns
jge
int
jnp
push
lea
mov
pop
xor
fmulp
mov
xchg
adc
jle
sbb
pop
in
fiadds
pop
ljmp
cmp
fisubrl
cmp
mov
push
or
daa
xchg
or
iret
xor
push
cmpsl
and
push
push
xor
ret
mov
add
loopne
lret
push
int
or
sbbl
filds
out
scas
xor
rclb
push
and
pop
adc
loopne
sbbb
imul
aad
adc
xchg
xor
adc
xrelease
lahf
cmc
fistpl
sti
sub
fnsave
cld
cli
inc
push
rcll
add
and
pop
jl
fdivl
xchg
jmp
lds
xor
mov
push
lret
and
aaa
outsb
and
ret
pop
push
inc
push
outsb
xchg
outsb
dec
mov
or
gs
clc
cmc
dec
cmp
inc
mov
jo
lds
pop
mov
mov
jb
fs
in
ja
jl
push
loopne
adc
jno
inc
mov
add
mov
addb
hlt
in
filds
and
outsl
adc
mov
xchg
jo
repz
idiv
jnp
aas
xchg
and
nop
clc
hlt
sbbl
scas
inc
into
inc
testb
inc
jno
xchg
gs
lahf
mov
cmpsb
inc
ret
bound
ret
shrl
fwait
sub
stc
rol
push
data16
das
cmp
pop
enter
jns
and
adc
addr16
xchg
jle
adc
scas
js
dec
cmpsl
adc
sbb
and
push
cmp
mov
lret
push
out
cmp
adcl
gs
xor
in
push
mov
outsb
mov
nop
test
out
rcrb
mov
mov
dec
scas
xor
icebp
sub
sbb
scas
dec
pop
sub
aad
sti
and
or
xchg
cmc
scas
cltd
enter
or
clc
pop
subl
jmp
ss
and
mov
pop
rcll
inc
shrb
dec
pop
dec
inc
imull
jge
lods
scas
pop
rolb
jb
dec
outsl
dec
clc
mov
mov
test
ljmp
lods
mov
push
mov
adc
fbld
push
call
mov
jecxz
cmpb
push
xchg
inc
pop
int3
adcb
pop
int3
cld
dec
mov
pusha
scas
sub
jge
scas
push
mov
jnp
add
ds
data16
outsb
mov
push
or
nop
dec
popf
insb
jns
push
sbb
int
mov
inc
mov
cld
adc
call
aas
cmp
or
push
lret
push
ret
jo
flds
test
jle
orb
icebp
jge
sbb
pushf
ss
in
lcall
dec
add
sub
sbb
addl
or
push
xor
jnp
push
insl
dec
shrl
popa
add
adc
lret
adc
orl
scas
jecxz
ljmp
mov
push
push
in
adc
scas
cmp
jnp
nop
dec
lds
clc
xorps
aaa
inc
je
pushf
add
mov
add
jl
roll
insl
data16
jb
popa
ds
dec
xor
sub
cmp
inc
fdivr
js
sti
mov
lock
into
push
jg
add
and
clc
cli
mov
cmp
sub
jae
sbb
xchg
jmp
mov
sub
adc
jne
jl
popa
pop
ja
mov
xchg
clc
inc
out
jb
test
cwtl
aad
push
inc
push
in
fisubrs
push
mov
out
int
jns
cli
mov
mov
xor
xor
jae
stos
sub
stos
sbb
outsl
outsb
daa
xlat
push
or
add
data16
in
and
add
cmp
jns
jg
sbb
push
lods
arpl
dec
int
cli
add
xchg
sub
xchg
and
sub
inc
into
shll
jnp
or
jbe
push
lds
and
inc
sub
or
mov
movsl
cmp
lahf
repz
mov
mov
roll
std
ja
aam
mov
jbe
js
mov
popf
fstpl
gs
mov
int3
lods
imul
jl
cmpsl
sub
push
sbbl
out
ss
hlt
xorb
icebp
faddl
mov
xlat
movl
xchg
adc
scas
setnp
sahf
cld
fcmove
mov
or
imul
js
jne
pop
ds
pop
pop
mov
push
dec
int3
xchg
or
imul
aad
xor
push
data16
adc
pop
or
in
push
fwait
sahf
jmp
cmp
repnz
add
dec
ss
pushf
sbb
dec
mov
frstor
imul
shlb
cmp
mov
mov
mov
inc
ja
shl
xor
scas
loopne
adc
lock
mov
aaa
mov
pop
xchg
push
pop
flds
shll
xor
push
jns
adc
mov
daa
or
jo
inc
cs
sub
push
push
mov
xor
movsb
imul
aad
je
mulb
cmp
add
test
mov
movb
aam
mov
mov
ret
xchg
lods
mov
mov
pop
xor
pusha
pop
inc
mov
cmpsb
xchg
call
push
call
fwait
mov
repz
insb
mov
pop
mov
or
pop
lods
dec
push
pop
push
xchg
ss
mov
xor
pop
sbb
ja
mov
addr16
mov
jg
out
push
aaa
xor
pop
mov
inc
clc
out
jo
popa
rcrb
mov
adc
pop
pop
rolb
test
xchg
mov
or
insl
jg
out
sub
fbstp
add
insl
xchg
dec
sbb
lcall
xor
dec
sub
add
cmovno
lock
popf
cmp
sbb
xchg
repnz
mov
icebp
add
mov
pop
sahf
insb
cmp
adc
adc
andl
sar
mov
xlat
add
jge
pop
and
jl
xchg
sub
int
push
pop
pop
outsl
mov
arpl
mov
and
jge
push
filds
and
jb
test
cwtl
jl,pt
lock
sub
xor
daa
in
mov
xchg
xchg
push
fidivs
lods
sbb
add
and
mov
mov
xor
or
andl
push
es
sub
dec
bound
pushf
mov
insl
scas
outsb
divb
iret
dec
mov
xor
jo
add
imul
xor
stc
outsl
dec
add
or
dec
xor
lret
cltd
mov
fmul
sub
sbb
mov
ret
imull
xchg
jns
mov
aaa
pop
xor
and
adc
sbb
push
das
out
adc
cltd
lahf
arpl
fiadds
push
mov
outsw
mov
repz
jmp
scas
push
jno
je
mov
mov
fs
mov
mov
out
test
call
push
repnz
lret
mov
pop
stc
xchg
xchg
imul
into
loope
mov
xchg
add
lret
adc
lock
push
xchg
and
int
rorb
adc
push
fisttps
mov
lods
ror
mov
inc
push
jb
mov
into
fcomip
mov
iret
or
cmc
and
pop
push
in
xor
or
inc
inc
div
xchg
in
ja
mull
push
mov
add
mov
jne
fstpt
inc
inc
mov
lods
jbe
mov
xchg
or
aas
popf
dec
std
inc
dec
lahf
fs
lds
mov
aam
mov
sbb
popl
cs
jo
pop
iret
lret
jns
cmp
loop
inc
sbb
xor
sub
push
xor
mov
aad
mov
cmpsl
hlt
cmp
call
adcb
xchg
cli
mov
or
mov
mov
cmp
pop
add
out
insl
mov
xor
inc
mov
cmpsb
pop
sbb
aaa
movsb
and
mov
inc
or
pop
pop
jecxz
push
mov
cli
xchg
or
and
rorl
arpl
orl
push
les
add
jo
mov
fisubrl
xlat
scas
jns
loopne
xor
xor
daa
andb
lods
out
cltd
nop
sbb
popf
cltd
mov
push
cmp
ds
mov
clc
cmp
dec
adc
mov
pop
or
push
aad
mov
cmp
or
gs
in
nop
xor
or
lods
out
jbe
mov
jae
jp
and
cmc
lahf
stos
push
dec
inc
repnz
insl
ja
rorl
jns
mov
clc
data16
add
xor
fsubs
or
les
iret
cmp
imul
ja
push
adc
dec
pop
jge
mov
cmp
ret
mov
sub
adcl
sub
clc
xchg
mov
bound
ljmp
and
lock
or
push
movsl
push
cmp
dec
sbb
out
and
shlb
sahf
lds
cwtl
pop
decl
jl
movb
jno
and
pop
test
mov
cli
cmp
mov
xor
sub
sbb
cs
mov
sbb
xor
fldenv
mov
dec
lea
call
mov
out
sbb
add
rorb
ror
in
movsl
sbb
jns
fdivrs
sub
repnz
inc
jl
xchg
rcl
js
or
push
xor
mov
imul
inc
jbe
xchg
dec
sbb
mov
adc
testb
pop
adc
mov
lea
adc
inc
adcl
les
shll
sbb
js
mov
pop
int3
sbb
push
jl
mov
mov
ficoms
fimuls
jns
outsb
faddl
sub
stos
divl
cli
cmpsb
jg
jecxz
or
xor
sbbb
pop
loop
das
sub
jno
movsl
out
inc
pop
fiaddl
jg
pop
and
pop
outsb
or
push
jae
pop
mov
arpl
addl
sub
movsb
hlt
mov
xor
js
sbb
mov
lods
or
inc
ficompl
std
mov
mov
xor
cmpsb
xor
mov
test
push
cmp
dec
enter
dec
mov
pop
cmp
mov
jg
mov
jg
and
orb
mov
dec
xchg
push
fstpt
sbb
pop
aas
inc
dec
js
jecxz
aas
scas
xchg
jp
dec
pushf
jo
and
clc
faddp
sub
iret
sbb
stos
and
std
rcr
inc
lret
or
out
loope
xchg
xchg
je
hlt
add
cmp
and
shrb
jbe
and
scas
push
mov
popf
movsb
insb
dec
cmpsl
movsb
jecxz
or
inc
xchg
adc
inc
sti
ss
sub
jmp
ds
scas
lds
xor
fimull
js
iret
into
scas
cmp
xchg
cmpsl
push
sbb
jae
xor
xor
leave
test
pop
dec
sub
pop
xor
fnstsw
push
push
push
in
push
in
orl
push
in
inc
mov
inc
subb
mov
push
stc
xor
adc
push
call
fs
aad
inc
ret
inc
push
fisttpl
cltd
pop
cmp
lret
mov
inc
push
icebp
adc
and
cwtl
xchg
cli
arpl
in
sarl
push
or
mov
out
cmp
push
outsw
sar
and
test
xchg
mov
and
outsb
xor
bound
push
icebp
sbb
and
push
jae
xchg
xor
jne
sahf
add
popf
mov
int3
aam
fwait
repnz
shl
inc
movsl
xchg
mov
lea
inc
add
push
adc
in
xor
test
imul
mov
xchg
dec
jno
and
push
sti
cmc
xchg
mov
add
ss
push
std
push
ds
fmul
pop
sub
sub
sahf
inc
push
add
std
mov
jmp
cs
jge
lods
inc
mov
jmp
xor
loop
xchg
push
cmpsb
cmc
and
jg
shrb
dec
cli
das
sahf
in
inc
mov
pop
sbb
or
mov
ja
cmp
lock
out
daa
pop
sti
cwtl
pop
inc
push
popa
dec
nop
ds
aam
idivl
stos
inc
sbb
sbb
jb
inc
pop
mov
and
jno
or
rclb
insb
xchg
inc
xchg
mov
xor
xor
jae
and
fnstenv
pop
ret
fwait
test
xchg
js
push
int
adc
loopne
or
andl
push
icebp
xchg
or
add
and
cmp
push
scas
push
mov
aad
leave
sub
ffree
mov
repz
push
mov
adc
gs
js
inc
pop
cmpsl
lods
nop
add
jmp
adc
shrw
mov
push
and
jge
lods
jne
jmp
xor
lahf
cmp
xchg
mov
lret
mov
mov
inc
mov
mov
cmp
push
push
dec
enter
fcompl
pusha
xor
and
xorb
dec
ficoml
int3
mov
pusha
mov
aad
aad
das
cmpsb
push
lea
jecxz
loop
or
cmp
mov
and
sub
pushf
mov
lds
adc
cs
iret
push
or
enter
xchg
cmpsl
mov
and
adc
dec
sub
adc
push
push
or
scas
popa
cmp
rorb
xchg
fdivrs
mov
mov
out
lods
pushf
xchg
loope
fs
pusha
mov
int3
clc
aaa
lret
ja
enter
add
inc
test
push
in
jmp
popa
xchg
icebp
sbb
mov
cmp
cmp
cwtl
push
push
out
dec
mov
hlt
fadd
out
lahf
fcompl
scas
push
jno
mov
push
jg
sar
test
mov
xchg
xchg
pop
cmp
das
jg
mov
mov
push
add
lds
ret
test
in
jle
adc
mov
sub
aaa
aas
add
loopne
lea
lods
das
pop
ds
jp
lcall
dec
cmc
mov
inc
xor
mov
push
pop
xchg
xchg
add
mov
push
jns
and
adc
je
and
sbb
das
push
stc
imul
jg
mov
cltd
pop
xor
adcb
add
or
or
fstpl
iret
push
subb
sti
pop
inc
repz
movb
jb
push
stos
jecxz
xchg
dec
or
or
dec
inc
mov
insb
inc
out
out
ljmp
jge
jo
or
neg
mov
add
pusha
sub
fmulp
in
inc
std
lret
push
add
jge
xor
xchg
jne
jns
test
shll
rolb
pop
incb
lods
mov
and
ret
ljmp
push
mov
movsl
xchg
idiv
mov
lahf
xor
push
test
adc
mov
insl
das
lahf
mov
ret
out
mov
pop
cmpl
xor
jne
cwtl
lahf
jle
and
lret
mov
mov
rclb
cmp
jne
les
or
popa
fwait
mov
imul
mov
add
lock
arpl
aas
int
sti
adc
mov
lcall
outsl
test
iret
add
mov
insb
sar
push
pushf
jo
or
arpl
sbbl
imul
fistpll
xchg
jne
adc
aad
loop
xor
jb
mov
out
fsub
xchg
insw
nop
and
add
popa
call
jbe
adc
xchg
pusha
xchg
cwtl
imul
jno
jb
dec
fimuls
sbb
clc
mov
jg
mov
xchg
mov
xor
push
pop
idiv
push
cmp
pop
outsb
jns
in
pushl
loop
les
les
andl
aas
sbb
mov
push
movsl
mov
lds
cmpsb
cwtl
movsb
mov
sub
andl
gs
sub
or
ds
adc
es
inc
push
cmpsl
popf
xchg
rclb
mov
xor
pop
dec
dec
cmp
and
fst
data16
jmp
mov
push
push
fsubrp
test
cmpsb
js
push
xchg
shrl
sbb
dec
lock
mov
push
inc
int3
xor
push
lea
scas
dec
shrl
sbb
mov
and
xorl
or
adc
out
scas
jmp
or
mov
inc
push
ss
push
sub
mov
mov
xor
enter
dec
or
jne
cmpsl
mov
stos
outsb
or
js
or
insb
pop
lock
push
pop
push
sbb
lock
pop
divl
nop
push
cmp
enter
mov
pop
mov
iret
inc
ja
jge
fadds
aam
xchg
and
insl
mov
and
movsw
mov
repz
mov
mov
xchg
clc
andl
push
mov
popa
ja
jo
pop
and
adc
popa
pop
mov
jb
and
inc
lods
jmp
mov
ficoms
stos
jbe
aas
arpl
jecxz
push
push
lock
mov
sbb
inc
lcall
dec
hlt
mov
sbb
jno
pop
nop
test
and
pop
xchg
cmpsl
repnz
lret
xchg
xor
outsl
push
mov
xchg
xchg
cmpsb
ret
daa
xlat
add
test
mov
mov
dec
ret
shrd
pop
xor
inc
fldcw
movsb
imul
fcomi
mov
aam
xchg
mov
dec
jl
out
std
xchg
jmp
push
and
pop
mov
aaa
stos
pop
sahf
roll
jg
imul
jmp
fsubrs
sub
idivl
mov
test
mov
addr16
or
scas
ja
insb
outsb
jb
ljmp
sub
jp
loop
imul
dec
ds
stos
int3
or
jecxz
pop
push
dec
out
sti
stos
divb
lds
rclb
mov
pusha
ret
inc
jp
pop
sub
xchg
pop
lods
sbb
rolb
or
mov
or
cmpsb
inc
jbe
sbbl
add
incl
add
add
add
add
rorb
add
add
rolb
lcall
add
outsl
add
add
je
jns
and
push
add
add
add
or
nop
add
add
push
add
add
push
add
add
add
add
add
add
pop
add
add
incl
add
add
add
add
add
outsl
add
je
and
jo
jb
outsl
add
add
je
jns
and
jo
popa
add
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
and
inc
add
add
add
add
add
add
add
add
and
inc
add
add
add
add
add
js
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
fadds
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
sub
push
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
inc
add
add
add
add
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
inc
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
push
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
dec
add
add
add
add
adc
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
sub
inc
add
add
add
add
add
add
add
add
add
push
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
inc
add
add
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
inc
add
add
add
add
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
mov
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
je
jne
je
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
and
arpl
imul
and
and
cmp
gs
gs
gs
jb
jbe
insb
gs
or
and
and
and
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
and
and
jb
jno
gs
gs
jb
jbe
insb
gs
or
and
jae
arpl
imul
cmp
je
jne
je
outsb
outsw
ds
jae
gs
bound
push
inc
add
add
inc
add
add
sbb
sbb
and
cmp
cmp
in
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
inc
cmp
cmp
cmp
cmp
cmp
add
xor
add
pop
cmp
test
or
sbb
aaa
cmp
mov
cmp
cmp
cmp
mov
nop
aas
xchg
aas
mov
aas
jmp
aas
add
add
xor
add
sbb
and
and
xor
jns
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
cs
inc
xor
addr16
xchg
xor
out
xor
pop
ss
lea
popf
cmpsl
ss
shlb
ss
or
adc
sbb
aaa
cmp
dec
aaa
push
aaa
pusha
aaa
cmpsl
aaa
lods
aaa
mov
pop
cmp
jg
test
mov
xchg
cmp
cmp
sarl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
jle
xchg
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fs
cmpb
cmp
jo
sahf
add
add
add
add
push
xor
xor
xor
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
stc
xor
pop
bound
jbe
jnp
pushf
mov
ss
out
in
divb
cld
ss
aaa
pop
aaa
and
aaa
inc
aaa
dec
aaa
push
aaa
pop
aaa
xorb
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jb
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
adc
sbb
and
sub
xor
cmp
dec
cmp
push
cmp
pop
cmp
test
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
cmp
cmp
cmp
cmp
cmp
js
test
mov
cmp
sbb
and
daa
xor
cmp
inc
ds
ds
jnp,pt
cmpl
les
fdivrs
fidivrs
out
cli
ds
aas
pop
aas
mov
sarb
loop
out
in
aas
icebp
aas
add
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
out
divb
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jo
sbb
sbb
ss
ss
xchg
xchg
aaa
cwtl
aaa
test
lods
aaa
mov
aaa
aaa
fdivl
out
in
aaa
divb
pushl
or
cmp
cmp
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ss
ds
ds
ds
ds
mov
ds
loopne
add
cmp
jo
cmpl
aas
add
add
add
add
add
xor
enter
pop
xor
jnp
lea
test
mov
mov
xor
or
xor
xor
xor
xorb
xor
xor
pop
xor
xor
repnz
xor
xor
xor
inc
ss
and
gs
jno
jl
mov
or
cmp
push
cmp
arpl
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
lock
cmp
cmp
cmp
adc
loope
pop
aas
jle
add
add
add
add
xor
shlb
dec
xor
pop
xor
xor
xor
xor
sub
lds
sti
xor
inc
ss
imul
lahf
ss
ret
ss
out
stc
or
sub
xchg
aaa
popf
aaa
adc
cmp
arpl
mov
lods
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmpb
cmp
add
cmp
add
nop
add
or
add
lock
xor
xor
xor
xor
or
or
adc
adc
dec
aaa
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
cmp
mov
cmp
cmp
cmp
cmp
cmp
insb
cmp
jl
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
or
pusha
jl
add
jge
add
adc
add
add
pop
jle
add
adc
add
add
pusha
roll
fcom
add
insb
roll
jle
add
nop
roll
sahf
roll
mov
add
ret
add
roll
in
roll
add
add
sbb
add
sub
add
inc
aam
add
add
pusha
aam
add
add
xchg
add
cwtl
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
aad
add
aad
add
add
push
aad
add
add
je
add
adc
add
add
stos
aad
add
add
call
aad
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
push
add
xchg
add
mov
add
into
add
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
xlat
add
push
add
xchg
add
xchg
xlat
add
mov
xlat
add
xlat
add
aam
add
ljmp
add
add
adc
add
push
fadds
sub
add
cmp
add
dec
fadds
pusha
fadds
insb
fadds
jp
add
xchg
add
lcall
add
fadds
fcmovu
add
in
fadds
cli
fadds
or
add
and
add
flds
inc
flds
pop
flds
outsb
flds
jl
add
mov
add
mov
flds
flds
rcr
add
add
add
insb
roll
jle
add
nop
roll
sahf
roll
mov
add
ret
add
roll
in
roll
add
add
sbb
add
sub
add
inc
aam
add
add
pusha
aam
add
add
xchg
add
cwtl
aam
add
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
aad
add
aad
add
add
push
aad
add
add
je
add
adc
add
add
stos
aad
add
add
call
aad
add
add
sbb
add
sub
add
cmp
add
dec
add
pop
add
push
add
xchg
add
mov
add
into
add
add
ljmp
add
add
sbb
add
sub
add
cmp
add
dec
xlat
add
push
add
xchg
add
xchg
xlat
add
mov
xlat
add
xlat
add
aam
add
ljmp
add
add
adc
add
push
fadds
sub
add
cmp
add
dec
fadds
pusha
fadds
insb
fadds
jp
add
xchg
add
lcall
add
fadds
fcmovu
add
in
fadds
cli
fadds
or
add
and
add
flds
inc
flds
pop
flds
outsb
flds
jl
add
mov
add
mov
flds
flds
rcr
add
add
add
jne
gs
xor
fs
insb
add
add
inc
jb
popa
je
push
imul
push
add
add
outsb
outsl
ja
jb
insl
push
outsl
imul
popa
imul
add
add
imul
jne
dec
fs
add
add
push
jo
popa
je
push
imul
add
push
outsb
jb
imul
popa
jae
push
add
add
push
outsb
push
imul
outsl
outsl
imul
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
add
push
jb
outsb
jae
popa
je
dec
inc
dec
push
jns
inc
arpl
insb
add
add
push
jb
arpl
outsl
jo
jo
outsb
jne
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
outsl
ja
imul
add
push
push
jb
insb
insb
inc
popa
jb
add
push
push
outsb
gs
outsl
jo
jo
add
add
je
imul
outsl
outsl
imul
add
add
je
imul
js
push
add
add
push
gs
imul
jae
add
add
je
imul
popa
arpl
outsb
je
add
add
je
imul
outsb
addr16
add
add
push
gs
imul
add
je
arpl
insb
insb
push
popa
outsb
add
add
push
gs
arpl
insb
insb
push
outsl
jae
add
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
je
arpl
jo
jns
add
add
je
arpl
add
je
jb
jo
add
add
push
gs
popa
jb
outsb
je
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
add
push
gs
outsb
jne
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
outsl
arpl
add
add
push
gs
jne
jae
jb
add
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
popa
jo
jne
add
add
push
gs
arpl
gs
imul
add
outsb
fs
outsl
je
data16
gs
popa
addr16
add
add
push
outsb
fs
gs
popa
addr16
imul
add
add
outsb
fs
gs
popa
addr16
add
add
push
outsb
fs
gs
popa
addr16
add
add
push
arpl
insb
insb
push
imul
add
add
push
arpl
insb
insb
push
imul
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
jo
jns
gs
popa
add
add
push
gs
outsl
jbe
push
jb
jo
add
add
insl
outsl
jbe
dec
outsb
jne
add
add
insb
gs
jae
inc
inc
add
add
insb
gs
jae
inc
popa
jo
jne
add
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
push
imul
imul
inc
outsl
jb
popa
je
add
add
push
imul
popa
jae
push
add
add
push
gs
ja
imul
add
push
je
outsb
push
arpl
add
push
outsl
jae
push
jne
je
gs
popa
add
add
jae
dec
gs
popa
addr16
add
add
push
gs
jae
addr16
add
add
push
gs
jae
addr16
add
add
dec
data16
je
arpl
add
dec
gs
push
outsl
inc
push
data16
add
add
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
js
add
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
add
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
gs
add
dec
popa
jo
imul
imul
dec
popa
jo
imul
gs
add
add
dec
outsl
popa
fs
je
imul
dec
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
push
add
add
fs
arpl
push
add
add
fs
jne
jae
jb
add
add
fs
imul
add
insb
insb
push
imul
dec
jae
outsl
outsl
insl
gs
add
dec
jae
imul
jae
bound
add
dec
jae
imul
imul
add
push
imul
popa
bound
add
add
push
imul
add
dec
jae
arpl
jo
jns
add
dec
jae
arpl
imul
jae
imul
jae
popa
addr16
add
add
dec
jae
imul
jae
popa
addr16
add
add
dec
jae
push
add
dec
outsb
jbe
insb
imul
je
add
add
je
jb
arpl
arpl
add
jae
jb
dec
outsb
jne
je
insl
push
add
add
jae
jb
dec
outsb
jne
add
add
data16
popa
je
push
arpl
add
je
imul
jb
popa
fs
jb
arpl
jae
add
add
inc
gs
imul
js
push
add
add
inc
gs
imul
arpl
add
je
imul
popa
arpl
outsb
je
add
add
je
imul
outsb
addr16
add
add
inc
gs
imul
add
add
je
outsl
jo
imul
add
inc
gs
jns
je
insl
dec
gs
imul
inc
gs
jns
je
insl
dec
outsb
jne
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
inc
gs
jns
inc
outsl
insb
outsl
jb
add
inc
gs
jne
dec
outsb
jne
