add
add
pushl
int3
inc
mov
das
int3
dec
add
loopne
or
iret
ret
xchg
sub
xchg
xchg
test
imul
test
mov
jnp
sti
gs
nop
mov
ss
mov
enter
js
decl
hlt
shlb
cltd
push
inc
sub
fdivr
shl
adc
xchg
mov
jmp
push
or
or
scas
test
mov
adc
andb
popa
sub
jnp
jg
cmp
leave
sub
ret
lahf
es
mov
into
mov
cmp
and
mov
pop
xchg
adc
pop
daa
mov
add
rcrb
mov
sar
lahf
pop
push
push
test
mov
imul
pusha
mov
adc
xchg
leave
xchg
cwtl
jecxz
mov
idiv
mov
push
push
pusha
xor
mov
ret
movb
or
cmp
cmpsb
pop
test
push
out
inc
out
ljmp
mov
sahf
add
mov
out
lcall
js
mov
scas
popa
cmp
mov
xor
cld
outsb
mov
jno
das
popaw
fsubrl
cs
jns
jecxz
jp
add
rorb
or
push
not
lea
cmp
aad
int3
cltd
pop
jmp
outsl
arpl
mov
adc
cmpsb
int
push
sbb
fwait
dec
mov
mov
lods
loop
andb
and
cmp
jae
test
or
es
or
aam
clc
jo
cmp
pop
ljmp
mov
mov
push
or
push
dec
lahf
pop
lds
mov
mov
xchg
hlt
rorb
test
jecxz
lock
push
stos
xor
testb
shlb
mov
mov
mov
jecxz
cltd
and
call
mov
popf
push
jnp
ja
mov
scas
jp
inc
inc
add
aas
clc
jmp
jg
out
xchg
sub
pushf
push
lcall
cmp
fdivs
fsubr
pushf
jl
xchg
push
das
aam
fildll
push
cld
lock
add
mov
cmp
add
shlb
or
ljmp
jmp
adcb
dec
faddp
adc
fadds
and
or
aad
loopne
lds
jb
sbb
cmp
sub
mov
cltd
jcxz
outsb
xchg
mov
clc
js
outsb
cmpl
sub
push
and
inc
jle
lcall
xchg
jl
out
or
lods
outsl
arpl
mov
and
mov
je
in
sub
out
sbb
ret
sub
out
gs
cmp
ret
subl
dec
push
leave
stos
mov
inc
notl
mov
movsl
das
stc
mov
mov
pop
shll
ss
sbb
pop
push
cmp
hlt
fs
rcrb
dec
lahf
int3
mov
inc
fdivl
cmp
ror
cmp
add
outsl
mov
pop
pop
shrb
test
in
not
scas
push
rcr
mov
mov
jae
pop
mov
and
fisttps
iret
ljmp
jbe
xlat
pop
sub
cltd
pop
test
loopne
iret
inc
scas
add
xor
imul
imul
or
cmp
mov
inc
cld
xchg
je
in
rcrb
cmp
addr16
rorl
aam
mov
int3
shll
jmp
inc
into
addb
cld
push
mov
mov
popf
and
in
bound
pop
adc
rolb
push
push
outsl
sar
std
icebp
mov
es
mov
push
sbb
cmpb
lcall
inc
mov
shrl
stc
lea
inc
mov
and
jbe
xor
mov
xchg
lods
leave
test
sub
add
push
sbb
iret
mov
inc
adc
cmc
sbb
cmp
and
jmp
punpckhbw
cmc
jns
rorb
movsl
cmc
add
jnp
pop
gs
enter
pop
and
and
xchg
fiaddl
lods
jle
and
jp
mov
cmp
push
outsl
mov
mov
out
pop
xor
xor
xor
adcl
add
xchg
into
and
ret
rcll
repz
or
ds
mov
pop
inc
adc
aam
adc
aaa
nop
cltd
jb
or
and
int
arpl
mov
jne
mov
das
jge
or
push
xlat
cmp
add
inc
ss
or
push
sub
loop
cs
sub
xchg
cmc
in
ret
pop
fisubl
fstp
aam
mov
add
jb
imul
sbb
orl
xchg
daa
inc
xor
and
add
jae
loope
call
fsts
pusha
add
and
ss
xchg
and
pop
cmp
sbb
sbb
push
cmp
push
sbb
adcb
mov
repz
hlt
test
mov
cmp
fs
or
adc
and
daa
adc
inc
loope
sbb
clc
adc
out
push
cmp
imul
jne
daa
jno
call
int3
jle
sbb
arpl
xlat
addr16
mov
jecxz
lret
jnp
lahf
fnstenv
add
lcall
popa
ret
iret
div
mov
loope
addb
fcoms
ror
bound
cli
add
inc
sahf
dec
xor
or
fsts
push
fcoms
imul
sub
xlat
and
fldt
mov
xchg
fxch
push
mull
jb
jmp
icebp
push
adc
xchg
and
inc
jae
movsb
enter
lahf
push
push
adc
jns
inc
outsb
ds
idivl
sbb
fcmovbe
jmp
stos
push
cmp
mov
mov
push
adc
daa
outsb
xor
insb
icebp
mov
pusha
adc
lock
cltd
fistpll
dec
in
mov
dec
mov
sub
cmp
inc
data16
testl
je
fiadds
inc
xlat
outsb
mov
cs
pop
ja
add
aas
inc
cmpb
enter
sub
lods
pushf
cmpl
pop
xlat
in
add
fwait
mov
fimull
xchg
pop
push
scas
add
or
es
sbb
fs
sub
in
mov
cmp
out
jg
add
or
jne
dec
xchg
stc
xchg
adc
shll
mov
scas
pop
add
sbb
jns
inc
lods
lock
adc
sbb
movsl
dec
xchg
adc
sbb
xchg
and
xchg
leave
adc
sahf
fnsave
inc
nop
dec
js
xchg
inc
xlat
xchg
jg
sub
xor
push
out
pushf
clc
jb
subl
shr
xor
andb
pop
dec
push
int3
mov
cmp
repz
jmp
sbb
shll
pop
mov
push
mov
ja
push
cs
sub
fidivrl
xchg
push
inc
or
mov
fwait
lcall
pop
fsts
iret
jge
add
pop
pop
outsl
push
mov
xor
leave
jl
rcr
aas
xor
arpl
dec
int3
add
and
sbb
add
add
sbb
int3
pushl
pop
push
add
int3
and
add
push
inc
imul
add
and
add
dec
incl
jno
sbb
cmpl
nop
int3
add
int3
int3
int3
jno
inc
mov
int3
add
nop
nop
add
dec
cmp
nop
nop
add
lcall
xchg
pop
mov
add
incl
nop
add
inc
nop
nop
nop
add
incl
add
inc
add
incl
add
push
nop
nop
call
aas
jp
add
int3
int3
int3
add
add
dec
jl
pop
arpl
sub
int3
nop
nop
and
pop
add
cmp
add
aas
pop
imul
add
incl
add
nop
nop
adc
mov
int3
int3
decl
ss
nop
aas
adc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
mov
add
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movb
movl
mov
mov
mov
mov
mov
mov
movl
mov
sub
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
xor
mov
sub
cmp
jle
mov
and
mov
lea
xor
mov
sub
mov
mov
and
xor
mov
add
mov
and
sub
mov
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
and
add
xor
mov
sub
mov
jmp
mov
sub
xor
mov
sub
mov
jmp
mov
add
xor
mov
sub
mov
jmp
mov
and
add
xor
mov
sub
mov
lea
dec
sub
sub
inc
mov
sub
mov
movl
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
add
xor
mov
sub
mov
jmp
mov
sub
xor
mov
sub
mov
jmp
mov
add
xor
mov
sub
mov
jmp
mov
add
xor
mov
sub
mov
mov
mov
mov
mov
and
sub
cmp
jle
xor
mov
mov
lea
mov
and
sub
mov
mov
sub
mov
mov
and
xor
mov
lea
cmp
jl
mov
and
xor
mov
lea
mov
pushl
mov
and
xor
mov
lea
cmp
jne
xor
mov
add
mov
and
sub
mov
mov
mov
lea
mov
ret
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movw
movl
xor
mov
cltd
mov
add
mov
adc
mov
and
cltd
sub
sbb
mov
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
and
mov
imul
add
xor
mov
mov
push
mov
push
push
mov
push
mov
push
call
add
mov
and
add
mov
xor
mov
sub
mov
jmp
mov
mov
cmpl
jg
cmpl
je
cmpl
je
cmpl
je
jmp
cmpl
je
jmp
mov
add
mov
adc
xor
mov
cltd
sub
sbb
mov
jmp
mov
and
sub
xor
mov
sub
cltd
mov
mov
jmp
mov
and
add
xor
mov
sub
cltd
mov
mov
jmp
mov
add
mov
adc
xor
mov
cltd
sub
sbb
mov
mov
add
mov
jmp
mov
sub
mov
mov
cmp
jbe
mov
and
mov
lea
xor
sub
sbb
mov
mov
push
mov
push
push
mov
push
mov
push
call
add
mov
and
add
mov
xor
mov
sub
mov
jmp
mov
add
mov
adc
mov
and
cltd
sub
sbb
mov
mov
push
call
add
xor
mov
cltd
mov
mov
add
adc
xor
mov
cltd
sub
sbb
mov
mov
mov
and
cltd
mov
add
mov
adc
mov
and
cltd
sub
sbb
mov
mov
pop
pop
pop
mov
pop
ret
int3
int3
push
mov
sub
push
push
push
movl
movb
push
push
push
call
mov
xor
mov
imul
mov
sub
mov
cmpl
je
xor
mov
sub
sub
mov
mov
push
call
movl
mov
sub
mov
xor
mov
add
cmp
je
mov
sub
xor
mov
sub
mov
jmp
xor
mov
sub
sub
mov
mov
sub
mov
mov
mov
lea
sub
mov
movl
mov
add
xor
mov
sub
mov
movl
jmp
mov
add
mov
mov
cmp
jae
xor
mov
mov
add
mov
and
sub
mov
mov
add
mov
mov
mov
and
test
jne
mov
sub
xor
mov
sub
mov
mov
add
mov
movb
jmp
movb
mov
sub
xor
mov
sub
mov
mov
sub
mov
mov
add
mov
mov
jmp
xor
mov
add
mov
and
sub
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movw
mov
mov
lea
mov
push
push
call
mov
mov
imul
mov
sub
mov
push
push
mov
push
call
add
mov
and
push
mov
push
call
add
mov
mov
add
mov
and
sub
mov
xor
mov
sub
cmp
jle
mov
and
mov
lea
xor
mov
sub
mov
mov
mov
xor
mov
add
xor
mov
sub
mov
xor
pop
pop
pop
mov
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
je
mov
inc
test
je
test
jne
add
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
lea
movzbl
inc
jmp
cmp
mov
jne
neg
pop
pop
pop
pop
ret
pushl
call
pop
ret
push
push
push
push
push
mov
cmpl
jle
movzbl
push
push
call
pop
pop
jmp
movzbl
mov
mov
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmpl
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
je
lea
push
cltd
mov
push
push
mov
push
mov
call
mov
add
adc
mov
mov
movzbl
inc
jmp
cmpl
mov
jne
neg
mov
adc
neg
jmp
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
dec
dec
not
mov
pop
pop
pop
leave
ret
push
mov
push
or
mov
test
je
or
jmp
test
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
mov
andl
pop
pop
ret
push
mov
push
push
push
push
mov
imul
mov
mov
test
mov
mov
jne
xor
jmp
mov
testw
je
mov
mov
jmp
movl
jmp
mov
testw
je
mov
test
je
cmp
mov
jb
mov
push
pushl
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmpl
mov
je
xor
divl
mov
sub
push
push
pushl
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
decl
mov
cmpl
jne
mov
pop
pop
pop
leave
ret
orl
jmp
orl
mov
xor
sub
divl
jmp
push
mov
push
mov
test
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
xor
push
call
mov
pop
test
je
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
call
add
xor
cmp
setne
dec
mov
jmp
movl
or
pop
pop
ret
call
test
jne
ret
push
pushl
pushl
pushl
call
add
ret
push
pushl
pushl
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
inc
dec
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
inc
dec
jne
mov
pop
ret
mov
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
call
xor
mov
mov
mov
and
mov
shl
add
mov
shr
mov
push
call
pop
test
jne
push
call
pop
andl
call
call
mov
call
mov
call
call
call
mov
mov
push
pushl
pushl
call
add
mov
push
call
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
pushl
call
cmpl
je
call
pushl
call
push
call
pop
pop
ret
cmpl
je
call
pushl
call
pop
push
call
ret
push
mov
push
mov
lea
cmp
ja
mov
movzwl
jmp
mov
push
mov
sar
movzbl
testb
pop
je
andb
mov
mov
push
jmp
andb
mov
push
pop
lea
push
push
push
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
test
je
push
call
pop
test
push
je
push
call
pop
pop
pop
ret
push
pushl
call
pop
ret
push
push
push
push
mov
cmp
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
pop
cmp
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
pop
andb
test
je
push
call
pop
jmp
xor
jmp
andl
movl
or
pop
pop
pop
pop
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
mov
test
jne
push
call
pop
pop
ret
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
neg
pop
pop
sbb
ret
xor
pop
ret
push
push
mov
xor
push
mov
mov
and
cmp
jne
test
je
mov
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
je
and
mov
jmp
orl
or
mov
andl
mov
pop
mov
pop
pop
ret
push
call
pop
ret
push
push
push
xor
xor
xor
cmp
jle
mov
mov
test
je
mov
test
je
cmpl
jne
push
call
cmp
pop
je
inc
jmp
cmpl
jne
test
je
push
call
cmp
pop
jne
or
inc
cmp
jl
cmpl
mov
je
mov
pop
pop
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
mov
test
je
cmp
je
mov
test
jne
mov
push
cmp
je
mov
sar
and
mov
lea
jmp
mov
mov
pop
and
cmp
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
sub
push
push
mov
push
cmp
jae
mov
and
sar
shl
lea
mov
add
mov
test
je
andl
mov
cmpl
mov
je
test
jne
test
je
mov
cmp
je
decl
mov
mov
lea
movl
movb
lea
push
push
mov
pushl
push
pushl
call
test
jne
call
push
pop
cmp
jne
movl
mov
jmp
cmp
jne
xor
jmp
push
call
pop
jmp
mov
mov
add
lea
mov
test
je
test
je
cmpb
jne
or
jmp
and
mov
mov
mov
mov
add
cmp
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
movb
inc
mov
jmp
lea
push
push
incl
lea
push
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
inc
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
lea
mov
test
jne
or
mov
sub
mov
mov
jmp
andl
movl
or
pop
pop
pop
leave
ret
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shrb
add
sub
add
sub
mov
mov
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
lahf
sub
inc
add
inc
add
add
add
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
sub
inc
add
sub
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
cs
add
inc
add
inc
add
rorl
jmp
or
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
hlt
cs
add
cs
add
inc
add
inc
add
inc
add
inc
add
inc
add
das
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
push
das
inc
add
inc
add
inc
add
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
test
je
call
push
push
call
push
push
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
push
pop
cmp
jne
pushl
call
push
call
cmpl
push
mov
mov
mov
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
sub
cmp
jae
pop
push
push
call
pop
pop
push
push
call
pop
pop
test
pop
jne
pushl
mov
call
pop
ret
push
mov
cmp
jae
mov
test
je
call
add
jmp
pop
ret
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
testb
je
push
call
cmp
pop
jne
movl
jmp
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
jmp
mov
andb
lea
mov
jmp
andl
movl
or
pop
pop
pop
ret
push
mov
sub
push
push
push
mov
xor
mov
cmp
mov
jge
mov
push
push
push
call
add
cmp
mov
jl
mov
test
jne
sub
jmp
mov
mov
mov
sub
test
mov
je
mov
mov
sar
and
mov
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
jmp
test
jne
movl
or
jmp
cmpl
jne
mov
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
and
lea
shl
mov
testb
je
push
push
pushl
call
add
cmp
jne
mov
mov
add
cmp
jae
cmpb
jne
incl
inc
jmp
testb
jmp
push
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
mov
mov
add
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
push
mov
xor
mov
mov
mov
cmp
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
push
pop
mov
inc
cmp
je
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
jne
movl
or
jmp
test
je
xor
jmp
or
jmp
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
push
push
push
xor
xor
xor
cmp
push
jle
mov
mov
mov
cmp
je
testb
je
inc
add
cmp
jl
jmp
mov
jmp
mov
push
shl
call
pop
mov
mov
mov
mov
cmp
je
mov
cmp
je
orl
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
ret
push
mov
push
pushl
call
test
pop
je
mov
test
je
cmp
jne
andl
push
pop
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
push
cmp
jge
lea
sub
lea
andl
add
dec
jne
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
pop
pop
jmp
andl
push
call
pop
mov
mov
or
jmp
pushl
call
pop
pop
ret
mov
mov
cmp
push
mov
je
lea
lea
add
cmp
jae
cmp
jne
lea
pop
lea
cmp
jae
cmp
je
xor
ret
push
mov
push
xor
mov
test
je
cmp
je
inc
push
call
pop
lea
jmp
lea
push
call
mov
pop
test
mov
jne
push
call
pop
mov
cmpw
je
push
push
call
mov
pop
inc
cmpw
je
lea
push
call
test
pop
mov
jne
push
call
pop
push
pushl
call
pop
add
pop
cmpw
lea
jne
pop
pushl
call
andl
andl
pop
pop
movl
pop
ret
push
mov
push
push
push
push
mov
push
push
push
call
mov
mov
mov
cmpw
je
mov
lea
push
lea
push
push
push
push
call
mov
mov
lea
shl
push
call
mov
add
test
jne
push
call
pop
lea
push
lea
push
mov
lea
push
push
push
call
mov
add
dec
mov
pop
mov
pop
leave
ret
push
mov
mov
mov
push
push
mov
push
andl
cmpl
movl
mov
je
mov
addl
mov
push
pop
cmp
jne
mov
add
push
pop
cmp
je
test
je
incl
test
je
mov
mov
add
mov
add
jmp
incl
test
je
andw
add
cmp
jne
add
jmp
push
pop
incl
test
je
mov
mov
add
mov
add
cmp
je
test
je
cmp
jne
test
jne
sub
jmp
test
je
andw
andl
cmpw
je
mov
cmp
je
cmp
jne
add
jmp
xor
cmp
je
cmp
je
mov
addl
mov
mov
incl
movl
xor
cmpw
jne
add
inc
jmp
cmpw
jne
test
jne
xor
cmp
je
cmpw
lea
jne
mov
jmp
mov
xor
push
cmp
pop
sete
mov
shr
mov
dec
test
je
inc
test
je
movw
add
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
cmpl
je
test
je
mov
add
incl
add
jmp
test
je
andw
add
incl
jmp
mov
pop
pop
cmp
pop
je
mov
mov
incl
pop
ret
push
mov
push
mov
push
push
xor
xor
push
mov
test
jne
call
mov
test
je
movl
jmp
call
mov
test
je
movl
jmp
cmp
jne
test
jne
call
mov
test
je
xor
mov
cmp
je
inc
inc
cmp
jne
inc
inc
cmp
jne
sub
inc
inc
mov
push
call
mov
pop
test
jne
push
call
mov
jmp
push
push
push
call
add
jmp
cmp
jne
test
jne
call
mov
test
je
cmpb
mov
je
push
push
push
push
push
pushl
call
test
je
push
add
call
cmpb
lea
pop
jne
inc
mov
lea
push
call
mov
pop
test
jne
push
call
xor
pop
pop
pop
pop
pop
ret
cmpb
mov
mov
je
mov
mov
sub
sar
sub
push
push
push
push
push
pushl
call
test
je
push
call
push
lea
call
cmpb
pop
pop
lea
jne
andw
jmp
push
call
pop
xor
push
call
mov
jmp
mov
push
push
push
mov
push
mov
test
jne
call
test
je
movl
jmp
call
test
je
movl
jmp
cmp
jne
call
jmp
cmp
jne
call
mov
push
mov
push
push
push
push
pushl
call
mov
test
je
lea
push
call
mov
pop
test
je
push
push
push
push
push
pushl
call
test
jne
push
call
pop
xor
pop
pop
pop
pop
ret
mov
jmp
sub
push
push
push
push
push
call
mov
pop
test
jne
push
call
pop
mov
movl
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
lea
push
call
cmpw
je
mov
test
je
mov
lea
mov
cmp
lea
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
cmp
jae
andb
orl
movb
mov
add
add
jmp
add
cmp
jl
jmp
mov
xor
test
jle
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
sar
and
mov
lea
mov
mov
mov
mov
inc
inc
add
cmp
jl
xor
mov
cmpl
lea
jne
test
movb
jne
push
pop
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
jmp
orb
inc
cmp
jl
pushl
call
pop
pop
pop
pop
add
ret
push
mov
mov
test
je
push
call
andl
pop
add
cmp
jl
pop
ret
xor
push
cmp
push
sete
push
call
test
mov
je
call
test
jne
pushl
call
xor
ret
push
pop
ret
push
xor
cmp
push
mov
jle
mov
push
push
mov
lea
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pushl
call
pop
pop
ret
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
int3
int3
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
cmp
je
lea
cmpl
je
push
push
lea
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
call
mov
lea
mov
jmp
mov
jmp
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
pop
test
je
call
push
call
pop
ret
push
mov
sub
mov
xor
mov
cmp
je
add
inc
cmp
jl
push
mov
shl
cmp
jne
mov
cmp
je
test
jne
cmpl
je
cmp
je
lea
push
push
push
call
test
jne
lea
push
push
call
pop
pop
lea
push
push
lea
call
inc
pop
cmp
jbe
lea
push
call
mov
lea
sub
push
add
push
push
call
add
lea
push
push
call
lea
push
push
call
lea
push
push
call
pushl
lea
push
call
push
lea
push
push
call
add
pop
jmp
lea
lea
push
push
pushl
call
pop
push
pushl
push
call
push
call
pop
leave
ret
mov
xor
mov
cmp
je
add
inc
cmp
jl
mov
shl
cmp
jne
mov
ret
xor
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
mov
xor
cmp
jne
lea
push
push
pop
push
push
push
call
test
je
mov
jmp
lea
push
push
push
push
push
call
test
je
push
pop
mov
cmp
jne
mov
cmp
jne
mov
pushl
pushl
pushl
pushl
push
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
cmp
je
mov
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
push
pop
ret
mov
xor
xor
orl
cmp
je
pushl
push
pushl
pushl
push
pushl
call
cmp
je
pushl
push
push
pushl
call
jmp
xor
lea
mov
mov
pop
pop
pop
leave
ret
mov
ret
mov
cmp
jbe
xor
ret
push
mov
pop
ret
push
push
pushl
call
test
mov
jne
ret
andl
andl
push
mov
movl
pop
ret
mov
lea
mov
lea
cmp
jae
mov
sub
cmp
jb
add
jmp
xor
ret
push
mov
sub
mov
mov
push
push
mov
mov
sub
mov
add
push
shr
mov
mov
imul
dec
mov
lea
mov
mov
mov
test
mov
jne
sar
push
dec
pop
mov
cmp
jbe
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
add
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
mov
jbe
mov
mov
add
mov
mov
sar
dec
cmp
jbe
mov
cmp
je
mov
mov
cmp
jne
mov
cmp
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
shl
add
mov
push
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
sub
mov
mov
jmp
mov
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
mov
mov
lea
and
mov
sar
dec
cmp
jge
or
shr
orl
mov
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
cmp
mov
jae
mov
mov
and
and
or
jne
add
jmp
cmp
jne
cmp
jae
cmpl
jne
add
mov
jmp
cmp
jne
mov
cmp
mov
jae
cmpl
jne
add
jmp
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
mov
and
and
andl
lea
or
mov
jne
mov
incl
and
add
mov
and
or
je
mov
mov
xor
imul
lea
mov
mov
and
jne
mov
push
and
pop
test
jl
shl
inc
jmp
mov
mov
mov
sub
mov
mov
sar
dec
cmp
jle
push
pop
cmp
je
mov
cmp
jne
cmp
jge
mov
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
mov
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
mov
mov
cmpl
mov
mov
mov
mov
je
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
jge
inc
cmpb
mov
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
inc
cmpb
mov
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
mov
mov
push
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
je
addl
mov
mov
mov
push
push
lea
pushl
lea
call
cmp
mov
je
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
xor
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
mov
push
push
push
mov
mov
xor
test
jl
shl
inc
jmp
mov
push
imul
pop
lea
mov
mov
mov
add
dec
jne
mov
push
shl
add
push
push
push
call
test
jne
or
jmp
lea
cmp
ja
lea
orl
orl
lea
movl
mov
lea
mov
movl
add
lea
cmp
jbe
mov
lea
add
push
pop
mov
mov
lea
mov
mov
andl
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
push
mov
mov
lea
sub
mov
and
shr
mov
imul
lea
mov
mov
dec
cmp
mov
mov
lea
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
jae
mov
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
mov
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
lea
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
mov
sar
dec
mov
cmp
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
jae
mov
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
mov
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
mov
lea
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
mov
inc
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
push
pop
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
push
push
push
lea
shl
push
pushl
call
test
je
or
jmp
mov
xor
cmp
mov
mov
jle
jmp
xor
mov
push
push
call
test
jne
mov
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
jmp
xor
push
mov
mov
mov
xor
pop
cmp
lea
rep
jl
push
pushl
call
test
jne
mov
xor
lea
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
incl
lea
cmp
jl
test
jne
cmp
jg
cmp
lea
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
andl
lea
mov
mov
andl
lea
mov
cmp
mov
je
mov
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
mov
cmp
jne
cmpl
je
mov
cmp
jge
mov
shr
or
or
jmp
add
mov
shr
or
or
cmp
jne
mov
mov
cmp
jne
cmp
jne
incl
addl
cmpl
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
mov
cmp
jl
xor
pop
pop
pop
leave
ret
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
pop
jmp
mov
xor
mov
mov
cmp
je
add
inc
cmp
jl
cmp
jb
cmp
ja
movl
ret
mov
mov
ret
cmp
jb
cmp
movl
jbe
movl
ret
push
push
push
or
xor
xor
mov
mov
test
je
lea
cmp
jae
testb
je
add
jmp
orl
sub
sar
add
mov
cmp
jne
add
inc
add
cmp
jl
jmp
mov
push
call
test
pop
je
addl
lea
lea
mov
cmp
jae
andb
orl
movb
mov
add
add
jmp
shl
mov
pop
mov
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
andl
movl
or
pop
pop
ret
mov
push
cmp
push
jae
mov
mov
sar
and
lea
shl
mov
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
andl
movl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
testb
lea
je
mov
ret
andl
movl
or
ret
push
mov
push
xor
testb
push
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
or
jmp
cmp
jne
or
jmp
cmp
jne
or
call
mov
or
cmp
jne
andl
movl
jmp
pushl
push
call
pop
mov
pop
or
sar
mov
mov
and
mov
mov
pop
pop
pop
ret
mov
cmp
jae
mov
mov
sar
and
mov
testb
je
push
call
pop
push
call
test
jne
call
jmp
xor
test
je
mov
movl
or
ret
push
mov
sub
mov
push
cmp
push
push
jae
mov
mov
sar
and
lea
shl
mov
mov
test
je
xor
cmp
mov
mov
jne
xor
jmp
test
je
push
push
push
call
add
mov
add
testb
je
mov
cmp
mov
mov
jbe
lea
mov
sub
cmp
jae
mov
incl
mov
cmp
jne
incl
movb
inc
mov
inc
mov
lea
sub
cmp
jl
mov
lea
sub
lea
push
push
lea
push
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
movl
mov
jmp
call
mov
jmp
lea
push
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
je
movl
mov
jmp
sub
jmp
andl
movl
or
pop
pop
pop
leave
ret
mov
push
push
test
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
mov
test
pop
jne
push
push
mov
call
pop
mov
test
pop
jne
push
call
pop
xor
mov
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
sar
and
mov
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
pop
ret
call
cmpb
je
jmp
ret
incl
push
call
pop
mov
test
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
pushl
push
pushl
pushl
call
add
ret
push
mov
sub
mov
push
xor
push
test
push
movl
mov
je
mov
movb
jmp
andb
movl
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
je
movl
mov
jmp
movl
jmp
movl
jmp
movl
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
jmp
movl
jmp
movl
mov
mov
test
je
mov
not
and
test
jne
push
pop
test
je
or
orb
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
andl
movl
jmp
push
push
pushl
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
mov
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
pop
mov
pop
mov
mov
or
sar
and
mov
lea
shl
mov
andb
mov
jne
test
je
testb
je
push
push
push
call
add
cmp
mov
jne
cmpl
je
jmp
andb
lea
push
push
push
call
add
test
jne
cmpb
jne
pushl
push
call
pop
cmp
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
or
jmp
cmpb
jne
testb
je
mov
orb
lea
mov
pop
pop
pop
leave
ret
pushl
pushl
call
pop
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
push
mov
cmp
ja
push
call
test
pop
jne
test
jne
push
pop
add
and
push
push
pushl
call
pop
ret
mov
mov
cmpw
je
inc
inc
cmpw
jne
mov
push
mov
mov
inc
inc
inc
inc
test
jne
pop
ret
mov
mov
push
mov
lea
mov
inc
inc
test
je
mov
mov
inc
inc
jmp
pop
ret
mov
cmpw
lea
je
mov
inc
inc
test
jne
sub
sar
dec
ret
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
mov
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
inc
test
je
test
jne
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
inc
test
je
mov
inc
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
inc
mov
inc
dec
je
test
je
test
jne
mov
shr
jne
and
je
mov
inc
mov
inc
test
je
dec
jne
mov
pop
pop
pop
ret
test
je
mov
inc
dec
je
test
jne
mov
shr
jne
mov
inc
dec
jne
pop
pop
mov
pop
ret
mov
add
dec
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
dec
je
xor
mov
add
dec
jne
and
jne
mov
pop
pop
pop
ret
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
push
pop
inc
add
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
inc
shr
inc
cmp
jb
rep
jmp
lea
pop
pop
inc
add
inc
add
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
pop
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
cmp
add
inc
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
fcomps
add
pop
inc
add
pusha
inc
add
mov
dec
shr
dec
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
je
inc
add
add
inc
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shlb
add
pusha
inc
add
pusha
inc
add
pusha
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
push
mov
push
imul
cmp
mov
ja
test
jne
push
pop
add
and
xor
cmp
ja
cmp
ja
push
call
mov
pop
test
jne
push
push
pushl
call
mov
test
jne
cmpl
je
push
call
test
pop
je
jmp
push
push
push
call
add
mov
pop
pop
pop
ret
xor
jmp
push
push
push
xor
pop
cmp
jle
mov
mov
test
je
testb
je
push
call
cmp
pop
je
inc
cmp
jl
mov
pushl
call
mov
pop
andl
inc
cmp
jl
mov
pop
pop
ret
push
mov
mov
call
push
mov
push
xor
cmp
jae
mov
mov
sar
and
mov
testb
je
push
push
push
call
add
cmp
mov
je
push
push
push
call
add
cmp
je
push
mov
sub
test
jle
push
lea
push
push
call
push
push
call
add
mov
mov
cmp
jge
mov
push
lea
push
push
call
add
cmp
je
sub
test
jle
jmp
cmpl
jne
movl
or
pushl
push
call
pop
pop
jmp
jge
push
pushl
push
call
push
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
movl
call
mov
push
pushl
push
call
add
mov
pop
jmp
movl
or
pop
pop
leave
ret
mov
mov
mov
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
push
pop
ret
xor
ret
mov
push
cmp
jae
mov
and
sar
mov
lea
mov
test
je
mov
mov
and
cmp
jne
and
jmp
cmpl
jne
or
neg
sbb
mov
and
add
pop
ret
movl
jmp
movl
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
lea
cmpl
jne
mov
mov
or
je
mov
inc
mov
inc
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
jmp
mov
xor
mov
or
je
mov
inc
mov
inc
cmp
je
push
push
call
mov
add
call
add
cmp
je
sbb
sbb
pop
pop
pop
leave
ret
push
mov
cmpl
jne
cmpl
jge
push
push
jmp
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
mov
cmpl
mov
push
push
push
je
mov
movb
inc
neg
jmp
mov
mov
mov
xor
divl
mov
mov
xor
divl
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
andb
dec
mov
mov
mov
mov
dec
inc
cmp
jb
pop
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
push
pop
push
pushl
pushl
pushl
call
mov
add
pop
ret
push
pushl
pushl
pushl
call
mov
add
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
push
pop
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
push
mov
cmpl
push
push
mov
push
je
mov
mov
movb
inc
neg
adc
neg
jmp
mov
mov
mov
xor
push
pushl
push
push
call
mov
xor
push
pushl
push
push
call
mov
mov
cmp
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
andb
dec
mov
mov
mov
mov
mov
dec
inc
cmp
mov
jb
pop
pop
pop
pop
ret
push
mov
push
pushl
pushl
pushl
pushl
call
mov
pop
ret
mov
add
ret
push
mov
push
cmpl
push
push
push
jne
mov
cmp
jl
cmp
jg
add
jmp
mov
mov
push
cmp
pop
jge
cmp
jle
push
push
call
pop
pop
jmp
mov
mov
and
test
jne
mov
jmp
mov
mov
sar
movzbl
testb
je
andb
push
mov
mov
pop
jmp
andb
mov
mov
push
push
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
movzbl
shl
or
pop
pop
pop
leave
ret
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
push
mov
push
push
push
mov
push
mov
sub
push
push
push
mov
xor
cmp
jne
push
push
push
pop
push
push
mov
push
push
call
test
je
mov
jmp
push
push
push
push
push
push
call
test
je
movl
cmp
jle
pushl
pushl
call
pop
pop
mov
mov
cmp
jne
pushl
pushl
pushl
pushl
pushl
pushl
call
jmp
cmp
jne
cmp
jne
mov
mov
push
push
pushl
pushl
mov
neg
sbb
and
inc
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
mov
orl
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
test
jne
xor
lea
mov
mov
pop
pop
pop
leave
ret
movl
lea
add
and
call
mov
mov
mov
orl
jmp
push
pop
ret
mov
xor
xor
orl
mov
cmp
je
push
push
pushl
pushl
pushl
pushl
call
test
je
cmp
push
push
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
mov
jmp
mov
mov
test
push
lea
je
cmpb
je
inc
mov
dec
test
jne
cmpb
pop
jne
sub
ret
mov
ret
jmp
jmp
jmp
mov
cli
add
pusha
cli
add
inc
cli
add
xor
add
and
add
adc
add
stc
add
out
stc
add
cmp
add
inc
testl
add
add
je
add
mov
add
pushf
testl
add
testl
add
testl
add
testl
add
add
inc
clc
add
push
clc
add
jo
add
xchg
add
xchg
add
mov
clc
add
in
add
idiv
add
or
add
sbb
add
es
add
cmp
add
inc
stc
add
push
stc
add
stc
add
outsb
stc
add
jp
add
nop
stc
add
mov
stc
add
sar
add
stc
add
fdivrp
add
add
add
sbb
add
push
testl
add
add
add
add
lods
testb
shl
add
mov
add
add
add
add
add
add
add
cmp
add
and
es
adc
pushf
xor
dec
cwtl
pop
mov
mov
xor
mov
xor
cmp
push
cltd
push
dec
push
out
jg
inc
in
int
insl
pop
fistpl
cmp
incb
adc
arpl
ror
cmpsl
mov
sti
inc
or
les
add
jae,pn
insb
clc
adc
daa
adc
mov
push
test
jmp
mov
jmp
enter
notl
icebp
sti
call
out
push
mov
dec
mov
cmpsb
orb
mov
aad
inc
adc
add
sub
push
xor
adc
movsl
fimull
out
ds
dec
popf
inc
movb
les
jb
and
popa
out
mov
leave
test
push
fnstsw
addb
sbb
inc
dec
push
loope
jo
les
inc
loop
shl
aas
cmpsl
jl
fwait
mov
inc
push
fisubl
cs
and
imul
xor
les
mov
stc
addr16
xchg
push
cmp
add
push
add
push
popa
test
ljmp
inc
outsb
mov
frstor
push
fcmovu
adc
jo
rorl
pop
scas
add
mov
jnp
dec
jp
mov
shll
ja
cltd
mov
pusha
cmp
ret
fsubl
rorl
lock
cmp
xchg
ret
out
mov
xchg
std
mov
adc
dec
xor
cmp
scas
adc
xor
mov
repnz
dec
sahf
push
xor
test
push
popf
lods
cmp
sarl
mov
pushf
clc
stos
lret
aad
dec
mov
adc
mov
test
aam
punpckhwd
sarl
pusha
dec
pop
test
popa
leave
in
push
jo
xchg
bound
addr16
cmc
mov
test
fsub
stos
sarl
insb
sub
rclb
cmpsb
outsb
mov
leave
test
jmp
inc
pushf
rclb
and
data16
push
xor
inc
inc
sbb
insb
or
dec
bound
int
add
por
aad
popf
sub
test
inc
mov
xor
push
stc
daa
repnz
fldt
sbb
mov
jne
dec
iret
daa
xchg
lcall
pop
movd
test
pop
dec
pop
imul
daa
fbstp
in
mov
and
imul
jmp
mov
aas
les
mov
push
fs
push
add
ja
cmp
lahf
dec
jmp
arpl
pop
xchg
mov
or
inc
inc
xchg
dec
scas
push
std
or
call
loope
div
add
cli
jo
rorl
mov
idiv
sahf
sub
inc
mov
fs
adc
mov
sbb
lret
fidivs
pop
cmp
ja
inc
sub
in
enter
sbbb
add
adc
mov
popa
push
aad
aam
imul
dec
lock
inc
out
fldcw
shr
sti
and
fistps
fnstenv
or
mov
out
adc
pop
aas
jns
sub
mov
sbb
stos
add
or
pop
push
jb
aad
rcr
and
stos
jle
and
insb
mov
mov
jno
push
dec
xor
cmp
out
sub
ds
nop
jg
mov
cmc
pop
add
jg
inc
lods
jae
inc
cwtl
clc
xor
imul
fildl
movlps
ja
inc
sbb
inc
or
mov
jns
sub
cmp
addr16
addr16
push
adc
pusha
jle
xchg
cmp
adc
cmc
mov
jno
lods
aas
je
cmc
mov
dec
je
dec
subb
pop
push
xchg
add
jp
test
mov
daa
pop
out
outsl
mov
xor
mov
pop
insl
or
mov
ja
inc
inc
enter
jns
scas
mov
cmp
fidivl
push
pop
repnz
shll
dec
aaa
inc
cli
jge
or
int3
xor
xor
jbe
add
sbb
fimuls
rcll
jmp
repnz
in
out
jbe
cmp
adc
bound
insb
outsb
push
fdivp
xchg
push
mov
pop
gs
xlat
sbb
shrb
and
mov
jge
add
jp
adc
and
pop
iret
lcall
lahf
and
or
shrb
sub
out
test
jbe
xchg
dec
add
and
xchg
push
pop
cmp
cmp
lods
ljmp
lds
sub
add
aad
dec
std
push
in
or
int3
arpl
out
insb
mov
into
cli
push
arpl
stc
movsb
add
pop
add
push
insl
leave
into
mulb
mov
and
cmp
dec
sub
mov
add
xchg
inc
lods
cmp
sbb
and
lret
sub
push
jl
daa
xor
jno
pop
pop
inc
add
fnsave
mov
cmp
dec
pop
out
push
sbb
or
fisttps
fdivs
push
inc
out
mov
mov
movsb
out
pop
pop
inc
push
or
dec
cmpl
or
xor
sbb
xor
or
cmp
sbb
mov
adc
or
sbb
cmp
xchg
pop
ja
push
sbb
jb
jnp
mov
xor
push
mov
jb
adc
stos
mov
dec
mov
or
xchg
pop
imul
adc
xchg
and
imul
orb
or
cmp
sbb
dec
push
add
rcr
jg
sti
lahf
adc
inc
adc
or
cmp
or
and
fcomps
ja
iret
sbbl
pushf
sub
sbb
jle
loopne
pop
pop
xchg
cld
pop
out
call
mov
inc
clc
pop
fs
cmp
dec
adc
pop
cmp
lahf
cmp
dec
cmp
push
divl
lea
arpl
or
repnz
adc
pusha
sahf
sbb
sub
stos
lods
sbb
cld
cmp
das
pop
clc
sbb
xchg
outsl
or
sbb
rcrl
push
xchg
inc
and
ja
cmp
aas
mov
leave
or
popa
test
ja
jno
das
dec
leave
mov
mov
movsb
sub
jo
jl
loop
cmp
jl
cmp
aad
jne
jns
xor
mov
imull
ret
lea
jo
and
popa
pop
xor
cmp
xchg
push
inc
jne
inc
jmp
adc
xchg
or
cmp
mov
sbb
pop
popa
xchg
ds
mov
lds
scas
shll
ss
mov
std
and
lret
scas
jo
je
adc
cmp
sbb
pop
negl
out
cs
push
jge
mov
cmpsb
ja
pusha
mov
mov
jae
adc
imul
adc
xchg
sub
push
xlat
and
dec
das
cmp
pop
cwtl
lock
push
arpl
sbb
mov
push
jo
adc
or
aas
sub
sub
xchg
bound
fimull
adc
jmp
mov
push
in
test
inc
outsl
and
inc
sub
popf
fsubr
xor
jge
movsb
lcall
xchg
test
cmp
pushf
repnz
mov
out
xchg
sub
pop
jp
cmc
add
cltd
iret
xchg
data16
popa
pop
mov
add
sahf
int
ret
sbb
movb
mov
mov
lahf
ror
pop
mov
push
adc
and
add
push
idiv
inc
jno
arpl
scas
xchg
or
insl
pushf
adc
jns
add
imulb
xchg
jnp
jmp
or
fcoml
jae
hlt
jnp
sub
sub
cmp
sbb
jge
fcomps
js
push
push
cmpsb
cmpsb
ror
push
sti
outsb
in
mov
adc
sub
mov
pushf
jg
push
xor
mov
xchg
daa
cmp
jle
rorl
sbb
out
out
mov
cltd
in
mov
xchg
jg
mov
inc
nop
sbb
jne
mov
mov
jl
mov
cmpsl
aaa
fisubs
js
scas
je
shlb
cmpsl
sti
xchg
int
ja
rorl
in
imul
enter
daa
test
mov
js
jns
dec
cltd
stos
pop
in
xor
orl
mov
movsl
cmpsl
add
lea
in
jle
ret
pusha
mov
je
push
cmp
xchg
push
cmp
xchg
mov
int3
outsl
push
call
xchg
xor
repnz
jge
sbb
or
push
mov
pop
add
push
adc
jbe
cmp
jle
outsb
jecxz
shlb
xor
push
mov
lods
push
jo,pt
rolb
add
xorl
jno
je
int
ljmp
aad
jbe
xor
cmp
call
ret
pop
lea
mov
ss
push
mov
pmuludq
out
addr16
outsl
fcoms
cmp
or
push
fs
sbb
jl
jmp
mov
sti
inc
xchg
repnz
sbb
mov
test
add
xchg
sbb
cwtl
sub
adc
push
rcl
pop
and
add
push
add
mov
and
inc
xor
stc
cmc
mov
fisubs
add
sahf
dec
sbb
cwtl
lods
nop
lods
es
xchg
mov
ja
mov
movsb
cmc
dec
data16
sarl
cltd
lock
xor
mov
dec
clc
push
jnp
icebp
sarl
mov
popf
mov
and
cs
push
mov
xor
in
loop
xor
push
sub
xor
lods
cmp
pop
xchg
push
aad
mov
jle
lods
push
and
inc
add
xchg
add
add
jb
mov
dec
andl
icebp
in
mov
push
mov
mov
push
cs
shlb
out
mov
mov
cwtl
xlat
cvtps2pi
lods
or
push
lods
mov
fiaddl
sarl
insb
sub
jnp
lret
pop
pushf
push
lock
out
int
mov
iret
test
mov
pop
mov
clc
mov
push
jns
xchg
xchg
cltd
fwait
cmpsl
cld
fsubl
pop
mov
sbb
sbb
lods
orb
mov
inc
mov
into
aaa
pop
mov
gs
int3
mov
scas
push
insb
dec
dec
mov
lods
inc
adc
fldcw
mov
fwait
xor
js
out
sti
std
andl
sahf
fcoms
fcmovbe
mov
add
dec
push
sbb
loop
andl
xor
sub
je
int3
and
cmp
stos
mov
dec
psubsw
jae,pt
dec
lds
pop
mov
push
jle
xor
cwtl
adc
add
cmpsl
mov
fdivr
negb
sti
subb
jge
inc
jbe
lret
stos
rclb
xor
fnstcw
iret
loopne
push
jmp
xorl
roll
xchg
jne
push
sbb
out
pop
mov
out
xor
shrb
inc
lods
jns
fdivrp
xchg
loop
mov
jg
movsl
sub
jmp
out
enter
push
add
and
inc
idivb
negl
repnz
adc
nop
pushf
pop
mov
lds
in
int3
and
or
daa
inc
stos
and
mov
sbb
sahf
lds
add
lds
xor
push
adc
icebp
jp
cmp
dec
sahf
push
dec
cli
into
setl
sub
or
jmp
mov
sub
int3
pop
xor
lods
fdivp
sub
xchg
ds
dec
sbb
insl
arpl
ds
xlat
subb
adc
aas
enter
adcl
test
cltd
dec
out
or
jne
les
push
mov
adc
add
mov
call
int3
ficoml
jbe
mov
dec
iretw
popf
int3
enter
push
push
lock
stc
mov
and
sbbb
adc
and
test
pop
add
test
lcall
fbld
rcr
in
mov
xchg
lea
dec
mov
cmpsl
test
cmp
fcoms
push
mov
inc
jmp
adc
pop
jl
daa
test
cs
push
outsl
adc
mov
lods
mov
ja
sub
popf
rcll
std
into
bnd
pop
dec
std
shr
cmp
mov
stc
ret
loopne
stc
in
mov
in
lcall
lcall
push
push
je
cmp
repz
fldcw
mov
jae
inc
js
ret
xchg
repz
jge
mov
out
sbb
jg
cli
cmpb
ss
in
pushf
mov
negb
mov
dec
xlat
gs
pushf
insb
shrb
pop
enter
pop
push
inc
mov
push
pop
aad
xor
push
xor
lret
popa
mov
inc
xor
lret
add
loope
out
mov
data16
xor
cmp
or
in
sbb
lcall
xchg
jmp
inc
dec
decb
push
sbb
mov
push
cli
pusha
xchg
or
push
dec
jne
jl
pop
sub
mov
inc
les
jmp
sbb
pushf
or
pop
loope
imul
or
xor
add
jb
mov
in
mov
pop
mov
out
dec
fs
jle
adc
loopne
xchg
push
add
sub
inc
pop
loopne
push
xor
sub
pop
fmuls
data16
pop
xor
sti
xchg
lret
prefetcht0
repnz
jno
mov
loope
lret
pop
out
jno
hlt
sub
cmpsl
mov
shll
call
and
test
jecxz
push
rcrb
pop
out
in
aas
imul
sbb
cli
dec
xorb
test
mov
sbb
cmp
into
cli
subw
stc
notl
mov
ljmp
enter
test
push
xchg
mov
and
shrb
imul
mov
mov
mov
xchg
dec
les
sub
add
out
pop
dec
add
dec
or
xchg
cmpsl
sti
and
in
jns
push
xlat
imul
cmp
sarl
fcmovnb
ret
rcrl
cmp
cmpsb
adc
xchg
in
sub
shlb
xchg
aaa
adc
jbe
xchg
inc
or
sti
jno
sub
cs
enter
ficoms
xchg
popf
and
out
out
and
jno
cmp
std
pop
insb
nop
pop
hlt
jnp
in
enter
stc
jb
cmp
and
mov
lret
xor
stc
aad
adc
aam
stc
xor
cmc
ret
or
orb
adc
mov
pop
loop
add
push
xchg
outsb
xchg
mov
xor
adc
push
xchg
in
std
adc
out
test
pusha
loopne
bound
pusha
clc
push
outsb
sbb
lahf
cltd
add
add
mov
into
mov
mov
cmpsb
insb
cli
jl
in
adc
repz
sbb
push
mov
or
ss
lock
loopne
jmp
fcoms
pmulhw
push
dec
fs
fwait
subb
imul
lcall
push
sti
inc
sbb
dec
push
lret
mov
pop
loope
inc
jmp
fidivrs
xor
add
inc
stos
mov
and
int
enter
lahf
add
cmp
js
and
notl
and
xor
mov
shl
inc
movb
fs
xor
pusha
ret
aas
cmp
sbb
gs
cmpsb
pushf
push
ljmp
in
iretw
scas
ss
mov
mov
mov
sti
xchg
cmp
adc
xchg
mov
jb
loop
cmp
dec
icebp
loop
lock
arpl
push
fucomi
mov
mov
movsb
js
pusha
imul
in
decl
xchg
decb
fidivs
pop
push
popf
ljmp
inc
mov
and
push
fisttpl
rcll
mov
sbb
inc
and
ljmp
jno
push
push
sub
cmc
add
inc
shlb
add
jae
pop
les
adcl
and
lahf
sbb
les
sbb
insl
mov
fwait
scas
adc
adc
cwtl
fs
mov
cli
xchg
push
jae
out
jmp
test
insb
adc
cmpsb
stos
negl
ret
cmp
testb
jns
repnz
ret
inc
inc
dec
outsb
cltd
stc
mov
divl
jle
cmp
in
lea
fmuls
inc
mov
call
imul
int
rolb
mov
push
aas
lods
sub
mov
aas
clc
sub
dec
mov
inc
lcall
repnz
testl
filds
js
pop
xor
jl
rorb
dec
mov
aas
repz
xchg
ret
clc
xor
fdivs
xchg
in
push
dec
mov
jae
fs
add
xor
les
xchg
mov
addr16
lock
sbb
mov
adc
addr16
xchg
and
fsubs
mov
std
rcr
ds
or
popa
test
inc
add
mov
gs
mov
and
sub
aas
and
xor
pop
sub
push
lods
cwtl
or
fcoml
xor
lret
jne
xor
int3
xchg
loopne
loope
or
or
iret
or
add
sub
fcompl
dec
fbstp
mov
xor
add
loopne
mov
dec
cmpsb
test
sahf
andl
lcall
xor
lret
lock
in
es
lahf
xchg
ret
in
inc
xor
add
lods
andb
fiadds
add
xchg
jmp
shl
push
push
lcall
scas
dec
fisubrs
stos
xchg
push
push
iret
xor
xor
js
insb
cmovae
in
lcall
test
jmp
aad
xor
inc
cmp
imul
fstps
lret
ficoms
xchg
pop
adc
outsl
add
pop
out
pop
outsb
adc
xlat
mov
sub
dec
shlb
sbb
push
in
mov
in
push
jb
and
cli
add
clc
enter
pop
jl
inc
es
test
or
push
cmp
in
push
dec
into
pushl
and
clc
dec
int
shll
roll
cli
dec
xchg
inc
rclb
fisubl
pop
inc
les
mov
out
pop
cmp
data16
pop
shl
xchg
and
fs
or
mov
scas
decl
push
into
dec
mov
add
imul
sbb
mov
dec
daa
adc
push
movsl
cmp
jmp
push
out
sti
fstps
scas
into
mov
adc
movsb
jl
lahf
pop
lahf
test
fiadds
fucomi
mov
jmp
aad
push
gs
mov
mov
add
jp
es
jp
sbb
int3
in
les
and
sub
out
inc
faddl
ret
sbb
cmp
pop
dec
push
dec
mov
lock
call
shrb
xchg
mov
and
loope
dec
inc
xor
push
movsb
pop
or
xor
out
aad
out
test
push
mov
leave
test
in
std
insb
in
in
pop
push
mov
shld
inc
fucomip
aaa
mov
mov
xor
fistl
fldenv
pop
xchg
cs
pop
pusha
das
inc
rcl
jmp
xchg
test
fsubr
jnp
mov
scas
mov
insb
sub
sub
sbb
xor
adc
jne
jge
test
jle
mov
shll
push
mov
push
xor
ss
jmp
test
in
in
mov
out
and
pop
mov
inc
rcrb
jecxz
add
lods
sbb
inc
mov
fimuls
cltd
addr16
push
add
pop
int
mov
cwtd
sub
pop
mov
sub
push
in
lods
pusha
je
sub
dec
ret
mov
pushf
and
push
sbb
loopne
outsb
leave
je
enter
cmp
data16
mov
xor
push
sbb
bswap
pop
xchg
adc
jns
out
pop
mov
rcr
and
sbb
sub
add
dec
pop
and
daa
sahf
int
clc
lret
adc
test
es
push
enter
enter
int3
popf
andb
not
adc
jbe
pop
pop
out
sti
xor
mov
add
mov
arpl
dec
inc
pop
jecxz
jnp
cmpsl
stos
dec
add
mov
pop
xchg
aad
pop
movsb
cmpsb
mov
mov
repz
adc
and
xchg
mov
xchg
or
push
bound
sbb
in
and
shlb
scas
rcrb
imul
out
xor
lea
inc
inc
sbb
jno
push
in
mov
in
xchg
push
mov
aam
test
hlt
lds
bound
fbstp
stos
push
cmp
hlt
cmp
loopne
icebp
push
dec
cmp
or
mov
adc
out
inc
jle
adc
repz
test
xor
fdivs
xor
mov
aam
cmp
imul
lret
sbb
mov
mov
aad
jno
mov
std
pop
push
jl
mov
sub
outsb
push
clc
sahf
rcll
cli
pop
or
xor
push
movsb
cwtl
inc
nop
icebp
scas
and
je
push
dec
xchg
test
sbb
or
mov
xchg
fildll
pop
mov
shlb
test
cs
je
jo
adc
test
repnz
and
addb
loopne
pop
sbb
sti
pushf
loop
movsl
int3
adc
shll
mov
xor
pop
or
test
and
adc
and
jo
stc
add
aas
scas
pop
and
pop
and
dec
push
push
jbe
jle
loop
mov
ljmp
add
pop
sbbl
lods
push
aad
xchg
cmp
fidivrl
outsb
cmp
mov
push
xor
mov
mov
mov
push
shlb
insb
xchg
jb
lret
stc
mov
push
ret
jne
pop
aaa
mov
inc
mov
mov
ja
into
imul
popf
sti
in
idiv
test
jo
cmpsb
mov
sbbb
clc
sbb
jb
lods
lock
sub
fstpt
mov
scas
cmc
push
jge
aam
andb
and
inc
adc
push
mov
aaa
arpl
fistpl
sarl
ss
pop
push
mov
jle
cmp
inc
mov
jecxz
dec
jnp
dec
mov
pop
inc
rcl
adc
dec
jle
repnz
loopne
cld
mov
and
adc
cltd
inc
push
cmova
mov
pushf
insl
call
es
mov
movsl
push
mov
sub
sahf
or
lods
std
fs
lahf
pop
add
mov
lahf
dec
cs
or
jb
jbe
xor
push
lahf
loopne
add
loope
pusha
and
addr16
mov
or
pop
mov
push
ret
cmpsl
xchg
lcall
jmp
daa
xor
or
ret
hlt
jmp
int3
cmc
and
xorl
in
push
ffree
jns
sbb
jmp
add
mov
adc
mov
outsl
lds
push
aaa
adc
mov
lret
out
dec
or
mov
xchg
in
mov
sahf
subl
sbb
sbb
mov
pusha
xlat
mov
adc
movsb
cltd
dec
sarl
mull
cmp
jmp
loope
jns
push
sbb
data16
arpl
test
push
je
or
sbb
adc
cld
mov
clc
int
movl
aas
outsl
adc
xor
rcr
add
test
out
add
pop
pop
inc
hlt
push
pop
les
inc
adc
fcomps
jbe,pt
push
sub
add
adc
sbb
mov
inc
jns
lret
sbb
sbb
pop
mov
les
repz
ret
pop
shll
cli
pushl
cmp
das
push
int
cmp
mov
mov
orb
push
je
movsl
mov
push
mov
loopne
push
mov
ret
shll
popa
and
add
fistl
mov
call
cmp
aad
pop
xchg
add
sub
mov
mov
fsubl
and
mov
lods
in
mov
lea
adc
out
cmpsb
lds
xchg
xor
pop
rcrb
insl
jb
and
fs
or
ficompl
cmpsb
out
sbb
iret
lret
loope
push
stos
xor
dec
cmpsb
loopne
xor
fnstsw
mov
adc
lea
add
pop
arpl
mov
bound
mov
cmc
pop
bts
push
xor
jl
popf
mov
insb
mov
bound
fwait
rol
jl
lcall
enter
sub
xor
xor
fs
or
testl
jg
inc
xchg
adc
std
lret
into
stos
adc
lahf
repnz
xor
sbb
lfs
int
sti
push
cld
mov
aaa
aad
adc
hlt
mov
dec
cmpsl
and
xor
inc
push
pop
out
dec
xlat
inc
jl
cli
notb
pop
jg
test
adc
push
inc
icebp
stos
test
lahf
mov
cmp
stc
adc
mov
imul
lock
mov
jmp
iret
loop
pusha
in
std
cmp
pop
jg
mov
pop
push
imul
xor
stos
loope
imul
cs
fiaddl
inc
push
out
repz
pop
xchg
ds
fs
loop
loope
pop
outsb
cmpsb
push
shrl
out
pop
ja
mov
lock
inc
insl
nop
loopne
loope
out
push
add
mull
lea
outsl
pop
int3
push
repnz
insl
jb
test
js
cmp
dec
aaa
mov
hlt
mov
sub
xchg
fucom
xor
scas
mov
ds
in
sub
pop
popa
jp
ret
xor
xor
fcmovb
subl
or
cs
push
std
pop
pop
xor
fnstsw
jmp
pop
nop
shld
cld
mov
insb
lods
rcrb
shrb
sahf
sbb
xchg
dec
and
jmp
insb
mov
xor
cmpsb
loopne
shl
inc
shll
push
aad
or
xchg
bound
push
lods
inc
mov
xlat
mov
and
sub
repz
add
jmp
dec
shll
les
jl
or
aas
cmp
fdivrl
cld
lcall
adc
add
popa
jae
gs
test
push
pop
xor
push
pop
pop
and
pop
inc
adc
cmpsb
std
add
mov
dec
lock
jnp
mov
xchg
sbb
mov
jo
insl
or
icebp
dec
xor
sub
jg
jg
sti
mov
add
js
sub
into
sub
pop
and
mov
popf
and
xor
xor
icebp
in
sub
rorl
aam
fldl
mov
mov
push
push
into
shll
push
stos
mov
shlb
fcmovnb
and
jmp
in
popf
add
jl
fdiv
outsl
mov
out
cmp
inc
stos
cmp
and
dec
mulb
or
loop
jbe
out
es
pop
xchg
cld
sbb
mov
pop
xchg
popf
mov
movsl
xor
dec
xchg
sub
inc
cs
xlat
repz
negb
nop
xchg
mov
inc
fsubs
loopne
xor
jmp
call
lds
lcall
stos
cmc
aas
mov
mov
jecxz
cmp
adc
pop
sti
dec
sahf
iret
test
lods
cmp
cmpsl
lret
xchg
push
lods
or
and
aam
jge
in
mov
rcll
movsl
imul
clc
enter
xor
jmp
mov
sbb
add
scas
fs
xchg
cmp
out
in
sbb
pop
and
xchg
dec
add
push
mov
mov
lods
pop
rcr
add
and
loope
stos
cmp
mov
xor
int
sti
sbb
lods
push
adc
jp
xchg
mov
dec
js
shlb
bound
popa
inc
ss
stc
push
and
cltd
push
push
ds
jge
and
and
in
add
cmp
push
or
pop
insl
lock
jle
movsb
test
jb
lea
scas
xchg
pop
sub
and
or
hlt
inc
pop
inc
inc
iret
jp
paddsb
int
arpl
fnstenv
xorb
add
dec
or
mov
insb
jecxz
mov
mov
jp
inc
cld
xor
rolb
incl
jae
aam
gs
out
insb
dec
xchg
inc
in
adc
ljmp
js
mov
pop
lahf
leave
lcall
lds
mov
test
xlat
nop
lods
repnz
rclb
or
mov
cmpsb
sbb
ror
loopne
pusha
sti
int3
jmp
mov
out
mov
pop
mov
cmc
ret
xchg
lahf
cmc
js
shr
test
aad
in
shl
adc
imul
jmp
dec
popf
xor
in
push
jl
jge
enter
jl
pop
lahf
xor
daa
fdiv
mov
leave
sub
pop
pop
out
mov
ficomps
xor
fwait
pop
add
xchg
addr16
sbb
int
add
aas
push
lock
pop
xchg
lret
sub
es
jns
inc
fnstcw
xchg
outsl
adc
jl
shll
das
xchg
jge
dec
mov
incl
rorb
adc
dec
or
in
push
add
add
mov
stc
out
dec
clc
std
cmpsb
mov
cmpsl
cli
test
adc
jno
adc
or
js
test
aad
mov
mov
jnp
popa
psubw
xchg
cli
xchg
out
cmp
and
mov
leave
rorl
out
sub
leave
xorb
pop
adc
mov
test
inc
lods
xchg
fistpll
adc
mov
dec
mov
pop
out
or
arpl
gs
cld
sub
leave
pop
cmp
lret
jmp
clc
orl
ljmp
push
scas
testl
jmp
xor
push
les
call
jl
cld
sbb
mov
test
dec
arpl
xchg
stos
insl
mulb
push
cs
mov
cmp
sbb
lea
pop
lcall
jnp
push
mov
sbb
movsl
push
ja
lock
jecxz
dec
adc
adcl
cmp
mov
mov
imulb
sbbl
mov
mov
mov
in
lds
xor
fdivr
test
mov
add
or
cmp
add
add
add
or
add
scas
sahf
jo
sbb
nop
push
test
aas
arpl
in
lods
xlat
pop
repz
gs
fisttpll
add
mov
xor
call
jecxz
sti
push
fwait
cmp
iret
mov
mov
mov
jg
loopne
jge
mov
inc
jae
xchg
loopne
lret
inc
mov
mov
in
iret
lea
data16
xchg
test
test
sbb
xor
fisubrl
add
jo
add
icebp
push
or
adc
and
movb
jle
pop
js
jecxz
jae
out
push
sub
adc
jp
cwtl
cmc
sti
and
test
pop
xchg
int3
jne
mov
jg
leave
cmp
in
jmp
sub
mov
es
cmp
sub
push
rcrb
sub
jp
pop
pop
pop
in
gs
xor
and
fildll
ds
jbe
push
cmp
jno
xchg
je
mov
stc
jmp
stc
in
inc
xorl
rcll
icebp
test
rol
pop
pop
lock
push
jns
add
sbb
sbb
in
in
in
add
jmp
jg
cmpsb
mov
movsb
loop
shl
and
test
xchg
inc
cli
in
or
adc
nop
add
sbbl
fsub
gs
sub
mov
add
mov
inc
xor
loope
enter
test
into
or
mov
shlb
xchg
cmpsb
loope
pusha
xor
push
push
ret
pushf
mov
push
test
in
mov
sti
sub
mov
xchg
loop
jns
into
sbb
enter
test
outsb
test
int3
push
out
add
fiaddl
cmpsl
pop
in
mov
xor
imul
jbe
dec
clc
mov
or
push
repnz
orb
lret
xlat
xchg
out
push
and
loop
inc
pop
lds
shll
xor
out
fsubp
leave
stos
xor
xchg
daa
jno
enter
pop
xor
cmp
adc
idivb
dec
aam
test
jmp
xchg
and
jmp
push
hlt
dec
push
lahf
dec
lcall
bound
jmp
cmc
cwtl
dec
push
or
inc
inc
in
mov
shrl
leave
mov
imul
push
mov
fdivrl
shlb
lds
mov
insl
mov
inc
mov
iret
or
fdiv
lcall
mov
sbb
jle
movsb
repz
sub
cld
aad
sbb
jmp
and
xor
mov
jo
movsb
js
repz
adc
pop
fldt
fbld
gs
in
stos
xchg
js
cwtl
jl
jg
out
ret
es
inc
loope
orl
mov
inc
xchg
out
sub
cmp
cwtl
div
std
out
lds
push
lods
js
mov
aam
xor
movsb
jnp
orl
iret
es
cmp
mov
sbb
mov
inc
cmpsb
mov
nop
insb
dec
sub
lahf
inc
data16
fcoml
andl
and
xacquire
mov
out
xchg
cmp
dec
imul
add
and
push
rclb
mov
and
or
cmp
sbb
cmpsl
bound
fdivr
cmc
xchg
adc
mov
repnz
push
push
xor
jae
std
iret
je
in
fnstcw
inc
aam
mov
call
into
shll
and
test
sub
testl
sbb
pop
in
and
mov
add
or
pop
js
cmpsb
cmp
loope
add
mov
fwait
add
popa
inc
sbb
jnp
pop
xor
mov
lock
out
repnz
pushl
rcrl
mov
or
out
ret
jecxz
ljmp
test
xchg
push
sbb
frstor
cmpsl
sub
scas
cmpsb
lret
movsl
pop
inc
dec
mov
cmc
mov
aas
cltd
fistpl
stc
cmpl
aad
ret
push
ret
jle
insl
rorl
ljmp
test
sbb
lcall
fldcw
push
xor
add
adc
inc
lcall
inc
imul
mov
mov
jp
ret
aaa
jg
fcomps
enter
xor
movsl
push
cs
mov
mov
scas
jl
jg
inc
enter
negl
dec
push
jp
and
out
and
cmp
xor
mov
and
xchg
sbb
pusha
ja
pop
add
lret
mov
test
fdivs
cld
push
pop
add
sub
gs
notl
adc
clc
push
in
cli
dec
cli
mov
adc
jb
les
out
inc
adc
jnp
adc
jae
mov
pop
fs
dec
dec
dec
out
push
or
out
xchg
test
notl
mov
mov
fsubs
push
dec
cmpsl
mov
lret
pusha
fsubr
insl
lock
mov
test
adc
lea
out
mov
rcrl
scas
adc
sbb
ss
sbbb
jp
dec
xchg
out
mov
stc
inc
in
push
stos
rcl
mov
inc
cwtl
cmp
mov
lahf
in
push
out
xlat
cltd
pop
xor
idiv
mov
pop
notl
or
out
shlb
mov
push
lea
mov
cmp
lods
loope
mov
lods
fwait
xor
in
jb
pop
push
sub
jnp
fs
mov
sub
movsl
hlt
icebp
inc
xchg
sbb
sub
in
or
fdivs
or
dec
daa
das
add
pop
push
mov
push
mov
xor
xchg
jns
stos
lahf
int3
stos
daa
jbe
insb
fisubrl
cmp
test
cmp
xor
mov
insb
adc
stos
or
jno
cmp
lds
jbe
push
in
scas
pop
pop
out
std
push
ss
cmpl
stos
imul
jmp
iret
ja
daa
loope
inc
aaa
fwait
mov
and
mov
sbb
sub
jb
xchg
xor
cld
and
inc
jo
mov
repz
shrb
bswap
fdivrp
call
and
or
jb
sub
mov
xchg
js
inc
xchg
ss
test
jns
xchg
fucomi
lret
push
lock
mov
and
cmp
push
popf
sub
push
fadd
out
mov
cld
sub
mov
xlat
sub
ficoml
jp
pop
lock
add
jge
xor
xor
mov
call
or
ja
push
cmp
fcomip
mov
push
xchg
bound
ja
fucomip
loop
or
ret
and
loope
dec
cmpsb
dec
mov
clc
adc
fdivl
stos
jmp
cmp
push
call
inc
or
int3
repnz
cwtl
dec
mov
push
lea
sbbb
imul
adc
mov
dec
shl
adc
jb
xor
outsb
cmpl
in
lahf
scas
push
out
out
push
push
and
cmp
out
inc
and
add
add
pop
jae
aad
adc
jg
outsl
cld
into
insb
mov
popa
xchg
inc
and
mov
inc
and
out
jno
cmpl
scas
and
jne
mov
jecxz
dec
mov
loope
sub
xorb
in
gs
xchg
test
cmc
xchg
pop
out
je
jp
aam
jecxz
sub
xor
pop
xchg
xchg
cli
inc
rolb
and
mov
lock
dec
roll
stos
das
dec
out
out
xlat
xor
ret
adc
sub
stos
pop
push
insl
aam
aad
mov
in
jecxz
lds
and
subb
cmp
in
clc
and
sub
lcall
leave
movsl
scas
aad
jno
mov
nop
push
push
sbb
fs
inc
dec
movsb
cmpsl
daa
sbb
mov
xor
jno
popf
int3
fnsave
pop
or
xchg
divl
dec
jne
or
js
push
imul
xchg
push
mov
mov
lret
jb
ret
and
aad
mov
int
dec
inc
js
jl
mov
pop
mov
insl
xor
sarl
mov
push
xor
and
jmp
test
movl
mov
cs
inc
dec
aaa
and
mov
mov
andl
daa
mov
mov
jl
jb
mov
push
das
sahf
inc
and
jp
mov
imul
dec
jecxz
dec
lock
xchg
mov
ds
mov
jmp
dec
add
xlat
mov
popf
adc
outsl
in
jmp
sbb
adc
jo
inc
loope
mull
test
test
aas
decl
lret
xor
cli
mov
shrl
pushf
leave
mov
inc
pop
ss
xor
imul
dec
dec
cmp
lea
out
push
in
cld
mov
mov
js
shrb
xor
adc
dec
add
push
addb
dec
enter
outsl
pop
test
inc
aad
xchg
nop
push
mov
push
imul
xor
inc
mov
imull
sbb
pushf
sahf
orb
lods
xorb
jnp
pop
in
adc
pop
xchg
mov
sub
xchg
mov
lret
pop
mov
mov
inc
jecxz
and
sbb
into
cmp
stos
lods
push
daa
sbb
fst
decl
stc
aad
out
jmp
adc
jbe
jp
cmpb
insl
add
pop
push
mov
stos
add
cmpsl
shll
popf
ret
mov
test
add
cli
push
jmp
push
or
repnz
in
shl
shr
dec
cmpsl
data16
dec
dec
lods
dec
inc
je
push
ljmp
js
int3
inc
inc
mov
dec
insl
stc
adcb
adc
inc
sbb
mov
out
push
jno
cld
pop
mov
je
pop
jg
xor
cmp
cmp
mov
into
add
or
or
dec
xchg
mov
ss
fcmovu
push
call
fmuls
dec
addr16
outsl
push
pop
mov
and
out
fwait
pop
pop
cmc
and
or
cmc
test
push
ss
scas
bound
mov
sub
dec
push
ficoml
movl
data16
xchg
pushf
cmpsb
clc
pop
dec
push
jl
mov
cmpsb
mov
and
mov
stc
enter
mov
pop
daa
xchg
sbb
xchg
adc
test
out
pandn
sbb
es
mov
movsl
cmp
std
mov
pusha
outsb
dec
adc
sub
cs
scas
rcll
push
mov
lcall
icebp
and
int3
dec
rolb
inc
xor
mov
adcl
sbb
mov
dec
xchg
pop
std
adc
push
mov
sbb
pop
add
jne
loop
push
push
fucomi
subl
and
add
cli
les
fs
jmp
pop
mov
dec
lods
push
xlat
cmp
push
xchg
call
lret
pop
stos
mov
pop
ds
sbbb
sub
xor
andb
decb
pop
enter
enter
mov
cltd
pop
test
xchg
cmpsb
jno
sahf
jb
outsb
cmp
into
inc
ja
fadds
inc
mov
jnp
int3
and
aad
push
cmp
cmc
pop
aad
push
jecxz
mov
int3
and
scas
xchg
mov
add
stos
test
adc
std
mov
call
adc
mov
push
popa
adc
jmp
lcall
or
das
dec
jp
add
mov
scas
out
mov
jbe
cmp
mov
xchg
insl
aas
dec
mov
aam
xor
cmpsb
cwtl
mov
insb
popa
fnstenv
int
aad
dec
push
sub
pop
nop
fdivs
test
into
ffreep
jne
lods
popf
movsl
jno
xchg
dec
es
inc
fsts
pop
dec
cmc
mov
xor
lds
repz
and
sub
push
and
pop
cmp
stc
mov
popf
mov
mov
mov
jmp
stos
popa
out
mov
sub
push
dec
inc
mov
das
call
ret
inc
mov
mov
mov
lds
cld
jns
fisubrl
rcrb
inc
lretw
out
or
test
aam
cmpb
outsl
cli
les
sbb
sub
xchg
ja
or
shlb
mov
jns
fsubs
pop
adc
in
pop
les
cli
xchg
cltd
push
test
pop
xchg
sub
xor
cli
cmp
daa
scas
insb
fldenv
shr
mov
movsb
push
mov
and
cmp
mov
addb
adc
lock
cmc
dec
mov
cmp
jmp
mov
jmp
sub
inc
sub
into
dec
popf
push
adc
call
sbb
das
test
popf
jecxz
mov
mov
icebp
mov
mov
cli
js
adc
and
rclb
mov
adc
ret
push
fcomps
dec
lahf
push
add
decb
jecxz
adc
sub
sub
mov
nop
or
xchg
stc
cwtl
ret
xor
xchg
ss
sbb
fadds
ds
jmp
fidivrl
push
sbb
out
scas
jns
mov
pop
dec
push
or
shr
sub
shlb
inc
and
dec
sbb
sti
jp
js
icebp
dec
popf
xor
push
test
adc
inc
xchg
aam
sub
stc
mov
jmp
lret
mov
mov
or
push
dec
lahf
push
cltd
sub
aas
xlat
cmp
mov
rclb
insb
cltd
push
lret
lcall
test
pop
cmp
aam
insl
push
push
gs
hlt
leave
adc
into
insl
fstpl
lret
inc
imul
jno
je
inc
cmp
incb
gs
xchg
fwait
pop
jl,pt
daa
mov
add
add
cmp
test
les
not
insb
push
xor
repz
pop
add
lea
je
jl
xchg
stos
adc
xchg
js
int3
pop
cmp
dec
jns
aad
mov
add
rcrb
stos
mov
jp
or
std
fs
cli
inc
int
cmp
aad
mov
stc
imul
push
testl
outsl
in
cmp
test
ja
fcoms
fs
jne
sub
fdivrs
sub
push
int3
pop
pop
enter
outsl
jae
push
sbb
dec
jg
ljmp
xor
mov
xor
and
mov
gs
xor
and
dec
imul
shlb
mov
and
adc
pop
scas
mov
dec
mov
xor
ljmp
push
fsubs
imul
add
inc
int3
and
jo
das
and
cmpsb
daa
adc
shll
rclb
outsb
mov
daa
xor
cmp
lods
and
inc
fldcw
pushf
mov
sbb
xor
hlt
jns
dec
loope
xchg
repnz
xchg
ret
repnz
push
xor
mov
sbbl
add
pop
std
movsl
jmp
lods
repz
pop
adc
cmp
std
mov
pop
pop
add
mov
in
mov
das
adc
dec
and
xchg
mov
insl
inc
loop
gs
xor
in
pop
lods
out
hlt
lahf
cmp
cmp
ret
in
xor
fwait
cmc
jle
push
pop
xor
xchg
mov
sub
lcall
sub
jmp
mov
lock
sbb
imul
scas
xchg
pop
insl
or
adcb
xor
cwtl
addr16
sub
cltd
xchg
mov
pop
push
cmp
cmp
cmp
mov
mov
and
leave
add
mov
fisubl
stc
mov
not
push
stc
addr16
lods
cmp
popf
test
repz
fwait
jb
xchg
ds
ljmp
add
adc
mov
jbe
pop
push
adc
add
xchg
add
scas
cli
in
ffree
insb
push
loope
jo
outsl
loopne
popa
loop
pop
test
ret
movsl
mov
adc
cwtl
sar
pop
popa
pop
mov
xor
notl
jecxz
js
pop
lods
loopne
adc
sahf
cmp
xor
add
ja
mov
xchg
push
jl
cmp
cmpsb
mov
outsb
pop
inc
jb
loop
fcoms
cltd
inc
inc
test
push
sbb
sub
test
mov
pop
dec
sbb
daa
push
xor
leave
push
popa
sbb
jbe
jle
in
ds
inc
lret
pop
push
pop
lahf
test
decb
popa
ja
aad
insb
subb
mov
es
lods
add
pop
sub
sub
addr16
dec
std
sbb
stc
lods
push
fiadds
push
aam
adc
push
leave
cmp
jecxz
cmp
adc
insb
in
xchg
jmp
pop
xchg
dec
nop
leave
stc
sub
shl
mov
test
aad
sub
lret
push
push
add
cmpsl
lret
daa
pop
or
loopne
hlt
cli
das
icebp
jae
cmp
mov
imul
hlt
push
xor
mov
repz
rol
enter
inc
inc
mov
jo
xor
outsl
push
jo
int
pushf
pop
jno
sbb
sti
pop
imul
iret
and
mov
mov
push
fisttps
dec
imul
xchg
mov
in
pop
movsb
adc
mov
in
cmp
idiv
jmp
int3
xchg
ljmp
cmp
das
jb
stc
lcall
fnstcw
ds
rcl
popf
cmp
dec
pop
and
scas
in
inc
aas
inc
add
and
test
stos
imul
test
js
or
lods
push
pop
arpl
movsb
int
insb
and
icebp
add
sbb
or
test
sti
popf
in
hlt
jo
xchg
xchg
outsl
icebp
dec
mov
hlt
inc
sti
cmpsb
xor
jmp
in
pop
enter
adc
add
mov
dec
xor
bound
dec
je
dec
xor
adc
mov
into
pop
mov
mov
xchg
in
sbb
stos
jbe
loopew
fbld
xor
pop
dec
push
add
mov
or
out
mov
mov
arpl
ret
inc
xor
and
xor
mov
and
inc
mov
int
pop
mov
ljmp
in
mov
push
jo
lcall
fldcw
cmp
scas
xor
cmc
mov
and
jmp
push
adc
adc
je
subb
and
pop
xor
repz
shrb
fbstp
int3
jne
jl
das
out
int3
xchg
cmpsl
and
xor
inc
cs
cli
fstpl
push
lret
in
nop
rcrb
fcoms
inc
push
inc
out
xchg
inc
adc
mov
into
cmc
sub
rcrl
inc
mov
dec
or
test
jb
or
mov
andb
push
cltd
dec
sub
push
fcompl
xlat
sbb
icebp
adc
sub
mov
push
stos
test
lahf
jle
jbe
mov
cwtl
mov
lds
pop
push
in
mov
xor
push
popf
mov
sahf
push
jge
sbb
push
jecxz
stos
jmp
cmp
jo
sbb
mov
stos
xchg
push
or
pop
mov
ds
adc
fisubrl
sbb
adc
and
or
mov
ret
cmp
fistpl
dec
fs
dec
fcmovbe
mov
insb
pop
mov
int
push
push
cltd
dec
pop
pushf
in
arpl
out
cmc
loop
push
lret
insb
mov
xchg
mov
jo
mov
pop
call
rorb
sti
xor
adc
or
cmp
mov
sbb
adc
repnz
int
cmpsb
and
mov
inc
mov
cwtl
sub
por
popa
lret
sub
lcall
ret
xchg
out
mov
rcll
jecxz
push
scas
sbb
pop
pop
jmp
movsb
test
or
pop
test
ret
test
dec
jg
xor
push
pop
ljmp
sbb
push
cld
mov
mov
sti
rcl
dec
scas
cmp
insl
rcrb
add
jb
pop
cmp
dec
mov
ljmp
je
les
mov
mov
dec
dec
movsl
push
mov
pop
stc
nop
mov
gs
test
fs
lret
lret
testb
cmovs
xlat
mov
cmp
jg
dec
nop
xchg
cmp
cwtl
fistpl
cs
in
lods
mov
fcompl
test
sub
and
mov
push
push
cmp
sahf
mov
mov
sti
mov
dec
mov
fcmovnu
iret
daa
sub
out
scas
push
in
adc
inc
fcmovb
mov
cmp
xor
adc
lahf
cmp
mov
jmp
andb
sbb
push
jne
daa
xchg
or
icebp
test
ret
mov
sbb
ljmp
mov
mov
mov
pop
rcll
lock
repz
jo
int
ret
pop
das
mov
push
push
mov
sti
lcall
mov
out
lods
adc
pop
addr16
pop
jb
rcrb
fwait
pmaddwd
leave
shlb
ljmp
jbe
popf
and
dec
push
xchg
add
mul
fmuls
or
mov
xchg
insl
sbb
inc
adc
pop
aad
roll
lock
test
mov
pop
movsb
lods
pusha
cmp
sbb
icebp
mov
add
jmp
rcrl
pop
pop
lret
rorb
addl
aas
sarb
jo
jns
xchg
testl
jle
inc
sar
loope
rolb
xchg
adc
andb
lret
mov
lods
mov
test
mov
stos
ljmp
call
mov
jo
repnz
sub
and
mov
adc
xchg
loopne
aaa
push
or
inc
adc
mov
roll
mov
stos
sub
loope
scas
lods
mov
fdivs
and
repz
cmpsb
xlat
mov
dec
mov
mov
movsb
dec
call
loopne
sbb
sub
jge
jo
fs
lret
sbb
or
dec
mov
pop
xlat
or
and
pop
cmpsl
and
adc
adc
imul
idivl
push
inc
std
in
ja
je
jno
and
ja
popa
out
lock
jle
jmp
dec
aad
fnsetpm(287
pushf
dec
mov
fdivrl
loopne
sub
bnd
sub
rolb
mov
aad
hlt
pop
inc
xchg
mov
xchg
stc
mov
push
sub
pop
mov
mov
cmp
mov
or
addr16
cwtl
push
sub
mov
xchg
cmp
fwait
and
cmp
cmpsb
ficoms
mov
jbe
cmp
push
push
les
mov
sbb
sti
shlb
aaa
jnp
int3
repz
pop
lcall
das
or
leave
insl
mov
mov
sbb
insl
lock
lock
jne
test
popf
fimuls
in
push
mov
dec
fldenv
rolb
jg
je
push
imul
subb
test
in
mov
imul
xor
lret
jle
sub
icebp
mov
daa
cli
sub
jnp
imul
outsb
std
dec
xor
test
outsl
lock
nop
rorl
int3
sahf
lods
gs
mov
push
pop
xor
xlat
cmp
sbb
icebp
shr
xchg
aaa
enter
mov
iret
bound
cmp
lods
sbb
insb
add
pusha
into
mov
ret
jbe
or
test
xchg
insl
into
call
jl
mov
mov
add
ret
dec
mov
cmp
jnp
add
adc
cmp
xorl
gs
sub
inc
push
int3
inc
test
outsl
cwtl
lods
in
loop
je
insl
xor
lcall
adc
loope
dec
inc
pop
mull
repnz
mov
mov
fwait
daa
cmp
sahf
stc
pop
aaa
push
das
mov
and
jno
cltd
aad
cmpsl
imul
push
inc
pushf
orl
push
sahf
sub
add
notb
xor
and
aas
div
add
shlb
insb
iret
dec
or
jnp
jmp
sarb
in
in
inc
sub
in
mov
dec
movsl
movsl
dec
aad
adc
in
sub
data16
mov
jb
xor
push
icebp
pop
ljmp
pop
xor
enter
sub
lcall
lret
sti
sbb
pop
daa
xor
sbb
hlt
ljmp
mov
aam
fstl
xlat
push
icebp
sbb
ss
jo
js
pop
push
in
xor
das
sub
pusha
popf
inc
adc
ret
jl
rcr
xchg
push
mov
add
bnd
push
inc
test
jle
sub
or
xchg
loopne
jmp
popf
addr16
lret
je
ficoms
in
and
mov
xchg
sbb
aaa
ret
roll
ss
lea
fisubl
rcll
test
xor
movsl
or
jmp
inc
pop
sbb
dec
or
imul
jo
mov
cmp
stos
pop
mov
sub
jae
sbb
test
insl
xor
push
mov
lock
ror
push
int
repnz
fs
imulb
add
fdivs
sbb
bound
lahf
movsb
xchg
cmp
dec
aam
scas
mov
testb
sbb
repnz
or
jmp
das
xchg
and
adc
sbb
test
mov
xchg
punpcklwd
out
add
jae
push
lcall
jmp
or
cwtl
cmp
popa
lret
loope
mov
lret
sti
roll
xchg
mov
adc
clc
mov
mov
int
cmp
stos
mov
les
adc
mov
lods
dec
xlat
dec
xlat
jge
icebp
or
idivl
cmp
inc
xchg
mov
sub
cmp
stos
jno
push
add
loop
int
or
jns
mov
sbb
cli
push
cmc
add
inc
mov
xchg
into
mov
cmp
mov
xchg
xlat
push
pop
test
inc
shlb
std
and
cmp
int
add
mov
dec
push
fdivs
data16
movsb
out
jp
dec
shll
scas
aam
int3
mov
and
outsl
xchg
mov
xchg
push
je
in
cwtl
mov
repz
icebp
enter
mov
pop
fucomip
cwtl
xchg
mov
fimull
dec
cld
icebp
push
dec
push
shl
push
lret
cli
pop
test
nop
mov
push
mov
pop
pop
aaa
sbb
push
iret
out
shll
adc
add
aaa
stos
push
cmp
stos
ljmp
mov
ss
xchg
test
jl
push
jecxz
mov
cmp
loopne
and
inc
pop
lods
dec
test
inc
pusha
fsubrp
popa
jmp
dec
pop
movsb
add
inc
xchg
pushf
shlb
jg
add
fisubrs
popf
mov
and
xchg
int
dec
mov
or
test
mov
notl
jne
add
inc
add
mov
sti
mov
imul
addr16
mov
loope
int
js
and
mov
mov
xchg
aas
mov
call
insl
in
repnz
pusha
nop
aas
sbb
test
dec
dec
inc
fcomp
stos
orl
mov
mov
mov
and
jo
mov
mov
dec
inc
int3
icebp
sbb
and
inc
addr16
or
jne
jno
push
mov
add
adc
je
xor
lcall
cmpsl
pop
fcomi
cltd
mov
xor
insl
enter
lock
lahf
insl
pop
daa
mov
ja
scas
sub
xor
cmp
out
add
lea
mov
xchg
leave
cs
jb
fidivl
jge
or
jno
loop
push
mov
push
mov
xor
outsl
test
test
jg
mov
mov
cld
jp
sarl
int
sar
lock
inc
mov
loop
fadds
mov
scas
xchg
inc
xorps
jbe
add
rcll
stos
mov
popf
gs
int3
stc
sarl
test
popa
or
popf
jae
insl
mov
aas
jl
negl
lock
jmp
or
leave
sub
push
dec
xlat
addl
xchg
or
cmpsb
in
lret
pop
stc
cmp
dec
adc
pop
add
push
inc
clc
leave
xchg
jp
pminub
frstor
clc
js
sub
dec
shrb
inc
mov
pop
movsl
push
mov
xchg
mov
leave
arpl
test
clc
inc
inc
push
and
mov
mov
notl
adc
lret
mov
or
adc
mov
xchg
pop
sarb
mov
fs
jbe
popf
into
push
test
je
jbe
or
xor
das
sub
mov
push
pop
inc
or
lock
adc
ret
movsl
sub
test
mov
daa
mov
mov
daa
fdivl
add
ljmp
pushf
shll
shll
xor
addl
fstpt
lret
aad
shrb
icebp
xchg
in
insl
jne
insl
lcall
mov
jg
leave
jle
aam
test
rcr
inc
ja
mov
insb
jae
test
xchg
je
pop
loopne
andl
pop
imul
mov
inc
push
shl
pushf
pop
xor
and
int3
mov
or
enter
and
push
dec
int3
enter
pushf
push
mov
ret
idivb
adc
xchg
dec
mov
iret
out
call
lcall
adc
mov
sbb
adc
mov
leave
loopne
std
xor
and
jge
push
flds
pop
jno
and
jo
int
pop
lahf
push
or
pop
loopne
stos
adc
lret
jmp
inc
test
andb
ds
dec
daa
mov
fisubl
lcall
mov
cmpsl
rcll
or
out
pop
pop
call
insl
fstps
stos
icebp
push
int
out
shl
mov
sti
sarl
call
out
xchg
sbb
movsl
push
dec
jmp
sbb
fdivrs
mov
mov
fisttpl
jecxz
cmpsb
cmpsb
pop
xor
push
add
mov
repz
jno
sbb
pusha
mov
adc
ja
fadd
cs
lods
cmp
rolb
push
xchg
lods
add
ret
mov
dec
std
cld
dec
arpl
push
xor
jl
and
dec
mov
jbe
in
imul
adc
xchg
push
mov
lcall
and
jp
jne
scas
into
cmp
imull
or
jmp
shlb
test
call
testb
xorb
dec
cwtl
sti
cmpsl
je
pop
sbb
jbe
mov
push
cmp
cmp
jnp
jle
push
jecxz
mov
out
xchg
mov
jnp
insl
sbb
add
mov
mov
xchg
iret
ss
jmp
hlt
jo
mov
aam
pushw
xchg
les
jns
jl
ret
adc
sbb
or
fnstsw
int3
iret
pop
push
cmp
stos
iret
ss
bound
scas
jle
xor
jecxz
pminsw
add
insb
mov
ss
aas
int3
bound
adc
in
mov
adc
mov
cwtl
or
ljmp
push
jmp
adc
imul
xchg
loopne
add
stc
data16
lock
ret
xchg
ss
jp
dec
rclb
stos
sub
adc
scas
jae
jge
sbb
pop
jae
xchg
lds
fistpll
test
push
inc
mov
stc
sbb
push
push
mov
std
fisttpl
or
and
xor
out
push
xor
xlat
adc
jns
bnd
cli
mov
lods
popa
jp
inc
pop
push
and
jbe
pop
mov
lahf
sar
xchg
inc
mov
pop
add
out
adc
sub
shl
xchg
insl
rolb
or
cmpsl
dec
and
xchg
push
xorl
and
xor
mov
cld
shlb
mov
mov
push
fdivs
lock
sbb
scas
pop
lret
popa
and
int
jae
loop
xchg
scas
orb
pop
mov
negl
jnp
xor
cmp
adc
sahf
xchg
lcall
addl
mov
pop
pop
xchg
add
mov
jle
pushf
adc
shll
aas
sahf
loopne
mov
dec
mov
scas
js
or
enter
incb
cmp
xchg
xchg
mov
lds
movsl
in
in
ffreep
into
fwait
stc
out
jns,pn
iret
mov
sbb
int3
sub
push
lods
xchg
popf
add
dec
out
cmp
dec
inc
jne
imul
sub
and
lret
cwtl
mov
pop
out
cmp
es
sub
adc
fsubs
xchg
and
inc
xchg
pop
sti
sub
jne
rolb
adc
and
cmp
lret
jl
cmp
jmp
cmp
iret
out
loope
lcall
inc
cmp
repz
jl
hlt
dec
fwait
cmp
popa
fstpt
je
mov
push
decl
jge
lret
iret
sub
mov
xchg
jbe
stos
stos
mov
fnstenv
ss
sub
mov
add
jl
jb
popf
mov
movsb
orb
jg
lsl
xor
xchg
mov
xchg
mov
pop
mov
jp
or
or
dec
mov
lds
repnz
dec
dec
push
jmp
xlat
outsl
lock
xor
cmp
loope
test
push
sbb
lds
mov
enter
add
loopne
mov
lea
shlb
js
outsb
adc
xchg
out
lock
add
js
xchg
xchg
or
bound
test
push
push
in
add
outsl
frndint
adc
cli
push
xlat
scas
popf
mov
pop
sub
test
and
aam
and
fisubs
lds
and
add
fcomip
ss
pop
cmp
cmpsl
or
pusha
add
lcall
scas
push
push
cmp
sub
iretw
or
lock
aad
stos
jno
int
mov
or
add
ret
movsb
addr16
andl
inc
inc
xchg
cmp
mov
push
jb
jo
mov
and
fwait
inc
cs
repnz
cmp
xchg
pop
in
mov
or
mov
fmul
jb
sub
ret
jmp
ret
movsl
mov
xor
rcrl
or
movsb
dec
stos
mov
leave
stos
js
pop
cwtl
mov
out
mov
push
icebp
sbb
push
outsl
insl
fwait
push
and
adc
push
fldt
outsb
xor
std
dec
scas
mov
sbb
add
lods
lcall
xchg
mov
jo
sbb
or
push
cmp
jns
sbb
mov
xlat
in
mov
xchg
pop
pop
mov
or
mov
dec
push
mov
jg
add
ljmp
fmulp
lea
notb
pop
xchg
pop
fsubs
mov
add
mov
and
fs
dec
ret
jo
and
movsl
das
jmp
ficoml
outsb
loop
push
cli
xor
pop
into
ja
mov
mov
pop
scas
insb
or
inc
mov
dec
add
sub
int3
cld
in
mov
nop
testb
in
push
test
xchg
and
cmp
and
int3
ret
fdiv
xchg
out
or
js
xor
mov
dec
push
cmpsb
imul
dec
aad
jp
daa
mov
cmpsl
inc
jmp
sub
mov
push
lds
push
loope
out
test
leave
dec
ss
lret
es
jle
dec
fbld
inc
in
push
pop
mov
mov
sub
ja
cmp
jno
pop
inc
mov
mov
jmp
dec
stos
in
int
pusha
lods
add
loop
sbb
jae
mov
fmul
andb
jno
xchg
rclb
mov
das
mov
out
popw
and
mov
vpmaxsw
gs
fwait
mov
addr16
lods
or
out
es
enter
mov
push
stos
lods
repz
mov
and
and
mov
adc
add
mov
movsb
lret
inc
out
neg
xorb
mov
daa
mov
sti
cmc
div
adc
mov
out
arpl
mov
nop
mov
mov
inc
loop
lods
repnz
ror
rorb
mov
push
add
jmp
inc
sub
pop
sbb
xor
pop
mov
in
xor
faddl
scas
mov
mov
addl
add
sub
nop
and
and
mov
sbb
cmpb
jp
xor
test
int
arpl
data16
mov
or
mov
test
gs
fcoml
mov
cmp
xchg
jns
dec
fwait
adc
pop
pop
icebp
sti
cmpsl
adc
outsb
fidivl
adc
mov
pusha
rcl
pop
mov
in
mov
out
or
push
cmp
cmp
test
out
aam
pmulhuw
mov
inc
clc
repz
lods
sub
cmp
sub
adc
add
rol
inc
sahf
sbb
out
insl
in
mov
mov
pop
xchg
xchg
adc
sbbl
mov
iret
and
pop
shrb
push
xchg
dec
cltd
iret
aas
sub
mov
pop
lcall
pusha
jecxz
xor
push
push
ss
in
mov
xor
sub
cmc
cmp
xchg
fcmovne
mov
mov
fwait
xor
fistpl
add
nop
int
and
nop
xorb
jg
fisubl
xor
or
loopne
jp
mov
xlat
pop
fistl
inc
aam
ds
lods
imul
aas
sbbb
push
sub
mov
test
xchg
sbb
lahf
dec
and
clc
cs
in
push
xchg
movsb
in
sarl
jmp
in
mov
xorl
xor
mov
add
cmp
imul
mov
mov
dec
pusha
push
out
dec
jne
subl
or
lods
into
mulps
adc
aaa
sbb
enter
jl
mov
pop
mov
cmpsl
js
rclb
into
lock
sub
sub
popa
cmp
mov
andb
mov
adc
in
xchg
pop
imul
test
mov
loope
pop
cs
insb
and
in
jmp
fmulp
cmp
mov
push
dec
cld
and
mov
das
push
movq
jne
imul
mov
cltd
sub
pop
stos
sbb
jno
pop
aam
sahf
mov
push
and
cmp
ja
fdiv
nop
imull
test
cld
sub
popa
push
lahf
out
les
pop
add
mov
cmp
jl
lcall
mov
divl
push
pop
or
es
fisubrs
fstl
call
dec
out
into
xchg
mov
jmp
jmp
out
jecxz
sti
push
mov
and
push
inc
into
pop
fwait
and
subb
mov
sbb
cmp
and
cmpsl
fbld
xor
adcl
adc
int3
andb
jp
insb
sub
rol
cmp
mov
push
outsl
arpl
mov
mov
jp
xor
fnstsw
jnp
inc
cltd
inc
push
jg
sub
sti
mov
sbb
lret
popf
sti
sbb
jle
sbb
pop
add
push
hlt
nop
dec
addr16
jns
addl
push
pop
rcrb
rcll
mov
dec
in
ss
mov
dec
jecxz
dec
adc
das
add
rcrb
xchg
in
adc
push
ror
inc
shll
inc
mov
xor
add
jnp
lahf
shll
outsl
movsl
xor
movsb
in
mov
and
movsb
fwait
or
testb
daa
lahf
jns
je
cmp
mov
push
lahf
aad
inc
rcrl
mov
mov
in
push
inc
imul
or
sti
add
stos
mov
adc
jmp
es
cld
adc
inc
adc
mov
lcall
lret
mov
mov
xlat
and
mov
push
xchg
cmc
pop
cmpsl
lret
fldz
roll
xchg
repnz
xlat
repnz
mov
aad
mov
dec
mov
mov
or
jbe
aaa
adc
mov
bound
and
xchg
scas
pop
dec
mov
add
jmp
and
dec
and
or
jo
sbb
cmp
shr
stc
jle
dec
xchg
shll
roll
push
std
shll
fildll
dec
mov
cmp
data16
loop
lds
test
inc
push
test
ds
sub
pop
call
jg
fadd
out
pop
cmp
pop
sub
fcomp
fxch
mov
imul
xor
scas
pop
cmc
or
xchg
mov
nop
cmpb
fwait
jecxz
ds
ret
addr16
ret
scas
icebp
cli
dec
pusha
push
in
mov
pop
loope
cld
inc
mov
mov
ja
cli
xchg
adc
filds
pop
je
dec
mov
ljmp
aas
test
sbb
test
lock
dec
out
shrb
mov
cmp
cmpsb
pop
or
mov
nop
repnz
loopne
cmp
push
mov
enter
subl
xor
jno
fs
xor
inc
cmp
cmp
or
mov
shrl
cltd
fwait
lahf
xor
shr
or
aad
and
lret
xchg
sbb
in
movsb
lret
mov
or
pop
in
cmp
int3
stos
cmp
repz
push
sbb
repz
push
jl
ja
mov
dec
adc
inc
sub
flds
xor
xor
dec
add
jmp
jno
into
add
mov
daa
mov
imulb
add
cmp
mov
movsl
add
loop
loope
dec
into
sub
pop
pop
mov
xchg
pop
push
lods
aam
dec
add
xor
fstpl
cld
icebp
fstps
loopne
jg
jno
std
mov
test
mov
pop
je
jns
movsl
je
dec
adc
mov
in
aam
leave
dec
pop
xchg
cmp
jae
jecxz
push
mov
pop
mov
insb
lcall
push
or
mov
hlt
mov
insl
in
cmp
push
xchg
mov
fbstp
push
add
and
sub
jle
and
xorb
push
cmp
mov
and
ficoml
call
or
fnsave
in
push
movsl
pop
mov
imul
sarb
dec
enter
sub
fs
mov
and
xchg
shl
sbb
shrb
mov
in
or
hlt
push
stc
int3
dec
jp
push
adc
sbb
lods
pop
dec
cs
test
fs
xor
arpl
mov
cli
jmp
popf
xor
add
out
sub
mov
out
das
repnz
movsl
ficoml
dec
std
stos
pop
jo
sbbb
cli
cs
mov
sahf
scas
xchg
jmp
jnp
lret
out
mov
push
cmpb
cmp
movhps
in
out
loopne
stos
mov
shll
mov
rcr
loopne
outsb
setnp
movsb
popf
inc
cmpb
negb
cmp
inc
mov
aaa
subl
xchg
gs
adc
pop
pop
adc
cmc
addps
loop
sbb
inc
jmp
rcll
mov
mov
sarl
insb
fists
or
in
pop
sbb
arpl
imul
int
icebp
das
loopne
int3
jb
loop
imul
lds
fdivrs
or
push
imul
cmpl
jb
inc
ja
icebp
push
roll
mov
out
test
loop
mov
ljmp
fdivrl
cmp
loope
outsl
mov
pop
in
movsb
das
leave
iret
mov
sbb
sub
dec
cmp
xchg
add
pop
divl
cmp
cmpsb
or
mov
mov
xchg
xor
xchg
push
into
mov
mov
xchg
std
inc
aam
lods
fs
hlt
les
ljmp
es
mov
inc
das
xchg
mov
sbbb
xor
aaa
jno
add
test
pop
hlt
adc
addb
dec
loope
aas
loope
imul
imul
adc
push
dec
jo
mov
dec
xchg
push
xor
sbb
pop
enter
stc
mov
jno
in
hlt
lret
push
push
push
and
int
lods
iret
ret
lods
mov
popa
jl,pn
daa
mov
mov
mov
dec
mov
jg
sbb
out
adc
xor
mov
aaa
push
dec
jno
add
ja
pop
pop
sbb
or
dec
iret
mov
scas
es
pop
jle
and
mov
jp
push
rcrl
testl
aad
mov
cs
stos
jge
jecxz
stos
out
push
addr16
xchg
sub
movsl
push
mov
mov
subb
mov
mov
iret
jge
push
loopne
push
out
jns
pop
sbb
sbb
sub
push
mov
jo
mov
mov
mov
jg
mov
out
xchg
test
lea
mov
pop
sahf
adc
mov
test
out
shl
xchg
decl
xchg
and
push
ret
rclb
test
xchg
ljmp
mov
add
popa
mov
cli
pop
ljmp
int
in
mov
add
push
jle
int3
pop
inc
subl
cmp
push
lcall
xchg
andl
xor
cmpsb
mov
jp
cmp
jae
add
add
mov
mov
adc
repz
mov
push
pop
cmp
xor
sar
pop
aaa
jnp
mov
xchg
and
loop
mov
jnp
dec
pop
sbb
ja
cmp
sub
sub
mov
enter
push
xchg
aaa
and
cmp
push
push
stc
mov
mov
push
mov
xchg
hlt
bnd
lods
xlat
lahf
xchg
popf
movsl
inc
lea
inc
sub
sahf
repnz
into
pop
pushf
mov
push
dec
lea
dec
cld
fdivrl
aam
mov
inc
xchg
mov
shrb
sub
cld
jne
incb
ds
rcrl
rorl
and
pushf
pop
out
ds
or
outsb
fimuls
shll
hlt
jge
orl
adc
repz
mov
mov
enter
lcall
mov
sbb
imul
cs
ret
dec
mov
aas
xlat
jle
push
pushf
dec
push
sti
dec
lods
pop
testb
in
test
popf
fldcw
xchg
and
xchg
or
sub
or
inc
xchg
mov
inc
jle
into
fnstsw
scas
std
pop
mov
adc
loop
clc
nop
add
cmp
add
xchg
jg
shlb
loope
jo
jno
aas
sub
jbe
xchg
jae
fwait
je
lret
mov
mov
pop
jae
clc
xchg
clc
je
cli
sbb
cmp
fwait
pop
pop
sub
outsl
sub
mov
jmp
mov
int3
insl
cltd
jnp
sbb
xchg
or
int3
xchg
imul
outsb
pop
divb
popl
pop
mov
sbb
mov
adcl
fimuls
adc
inc
imul
jns
adc
outsl
repz
test
pushf
out
test
lock
daa
mov
jns
xchg
loop
adc
aam
fcoms
mov
mov
adcl
cmp
lret
push
jmp
dec
lods
and
and
shrb
pop
or
adc
push
lahf
decb
fisubrs
jnp
ss
push
sahf
cmp
xchg
and
inc
and
fnsave
xchg
inc
or
sbb
jne
ret
cmovl
inc
loop
add
sti
hlt
mov
cmp
sub
jb
cmp
or
dec
test
push
cs
mov
mov
mov
stos
mull
xchg
cld
lock
rorb
test
in
jge
das
adc
jl
ficoml
stos
or
cmp
outsb
mov
cmp
adc
inc
lods
jmp
sti
bound
out
add
add
aad
andb
jp
sbb
pop
std
jbe
pop
shl
push
out
mov
adc
imul
jns
das
pop
repz
cld
dec
out
lds
lea
js
insb
cmp
dec
push
cmp
and
dec
cmpsb
jecxz
call
int3
xor
test
jns
orl
cmp
sbb
insl
mov
inc
fwait
or
dec
test
inc
dec
mov
lahf
nop
sub
mov
xlat
push
add
aam
jl
dec
sbb
inc
aaa
sbb
arpl
in
lret
ja
incb
add
sbb
lea
xchg
dec
sbb
jp
fnsave
vpsubw
inc
test
mov
out
sbb
sarb
xchg
cmp
adc
leave
insb
ljmp
pop
adc
adcb
std
dec
pop
popa
xchg
bound
sub
mov
int3
jo
cmc
outsb
mov
jmp
jp
test
or
xchg
loope
mov
and
xor
pop
repz
lahf
push
jecxz
add
cmpsl
jle
lcall
idivl
push
mov
call
jno
xchg
xchg
mov
je
inc
or
int
and
dec
outsl
in
clc
xor
or
sub
sahf
rcrb
shll
ljmp
outsb
xor
sub
xlat
ror
mov
ljmp
mov
iret
rolb
das
and
push
inc
jecxz
pop
adc
repz
xlat
rol
jns
imul
sbbl
lahf
push
loopne
loop
mov
clc
rolb
or
pop
test
leave
push
pop
cs
xorb
stc
pop
loop
mov
mov
loopne
cltd
dec
xlat
stos
fs
dec
outsl
stos
sbb
clc
pop
xchg
inc
mov
mov
jae
movsl
mov
ja
das
mov
dec
int3
add
or
pop
jle
stos
mov
mov
add
lret
cmp
popa
test
lea
push
dec
and
je
cmc
int3
idivb
andb
sbb
insb
xchg
rorb
mov
cmp
pop
adc
faddl
lods
arpl
loopne
insl
rclw
outsb
rolb
xchg
jo
lods
sub
push
mov
sub
test
das
icebp
xchg
pop
cmp
out
push
loopne
test
add
je
add
popf
ret
test
jl
popl
dec
jg
cld
into
cmp
jle
and
add
dec
in
push
inc
and
jae
shll
cmp
jecxz
dec
leave
mov
or
adc
icebp
xor
push
adc
gs
sbb
mov
or
gs
jg
jp
lret
or
pusha
testl
or
mov
jbe
push
negl
push
xor
gs
and
test
inc
fisubrs
inc
pop
fcoms
xchg
mov
negl
imul
test
enter
add
xchg
mov
jbe
jbe
shrl
xchg
aad
push
or
shll
test
jmp
cmpsl
incb
lcall
push
jle
sub
addr16
sub
pop
xchg
popl
inc
lock
ja
or
sbb
adc
push
or
in
ret
mov
cmpb
stos
ret
imul
fldcw
adc
mov
fdivrl
sub
xchg
test
das
lods
mov
xchg
data16
aam
aad
shrb
das
push
es
ljmp
mov
mov
lahf
sbb
add
popf
repnz
push
pusha
test
pop
imul
pop
xchg
sub
enter
mov
add
fcompl
push
push
repz
pop
sbb
movb
cwtl
fwait
imul
mov
and
out
loope
adc
lea
fcomps
sbb
popa
cmp
cmc
imul
outsb
or
test
pop
fadds
jae
jmp
inc
loope
sub
dec
jae,pn
into
sahf
aad
movsl
ljmp
or
or
xor
push
int
pop
mov
orb
mov
pop
faddp
mov
dec
xchg
push
or
add
mov
xchg
cmp
mov
and
mov
out
stos
subl
mov
lock
jae
mov
xor
mov
xchg
ss
leave
xor
stos
icebp
mov
push
sahf
jmp
jae
scas
sub
sti
and
subb
movq
sbb
stc
dec
sbb
shr
cld
sub
xor
bound
ret
and
mov
lods
int
shr
mov
into
outsb
mov
ret
push
shrl
lods
cmpsl
cmpsl
mov
es
add
jno
mov
outsb
xchg
mov
inc
fidivrl
ret
and
mov
push
mov
push
xor
adc
orb
cmpb
or
inc
jbe
jae
push
xor
faddl
shlb
xchg
cmp
sbb
lods
cmp
ss
sub
adc
fidivs
xor
aas
orl
pusha
test
xchg
or
mov
cmc
test
fsubrl
pop
int
scas
in
mov
adc
add
cmc
fidivrs
repnz
cmp
add
jb
out
jno
cmpsb
std
sbb
adc
imul
mov
and
xchg
ds
lret
jle
and
ss
test
rclb
fwait
lods
dec
inc
and
push
pop
jnp
xchg
sbb
dec
pop
sub
out
in
daa
fs
jecxz
pop
pop
sti
cwtl
mov
xchg
sbb
loop
leave
dec
sbb
pop
xchg
lahf
sub
repz
pop
jns
in
jmp
bound
rclb
loope
lahf
gs
leave
lret
adc
or
jnp
push
jnp
add
pop
rcr
and
nop
mov
icebp
pop
sahf
inc
test
mov
ljmp
mov
leave
aam
add
sbb
iret
test
imul
bound
sti
pop
loopne
xor
shrl
insl
daa
jo
test
xchg
fucom
iret
mov
das
je
and
out
jno
inc
and
and
push
sub
add
push
andb
sarl
in
sarb
xchg
pop
cmp
xchg
xchg
push
repz
mov
out
push
or
rclb
rorl
jge
add
bound
dec
mov
je
cmpsb
pop
lds
sbb
ja
cmp
push
stos
lret
add
sub
js
clc
sub
mov
cmpsl
dec
sbb
aaa
fldt
ja
mov
loope
xchg
cmc
js
push
push
mov
dec
adc
mov
jge
ds
das
inc
sub
adc
push
int3
mov
mov
fcmove
pop
jle
stc
lahf
sti
in
outsl
leave
dec
shll
mov
and
adc
xchg
jl
ret
mul
jge
inc
xor
les
sbb
lret
rclb
push
lods
mov
mov
add
shll
sub
xor
leave
sbb
rorb
adc
xchg
icebp
add
adc
fiadds
popf
enter
rcrb
sub
add
mov
push
mov
add
mov
xor
es
shll
repz
and
jne
inc
mov
push
fs
icebp
xor
mov
xchg
repnz
pop
gs
movsb
xchg
xorl
scas
int
mov
ljmp
pop
notl
mov
cli
adc
pop
push
adc
inc
jecxz
int
fwait
xchg
insl
pop
mov
shr
aad
xchg
mov
insb
ljmp
sbbl
push
ja
cmp
mov
shrb
sub
xchg
repnz
dec
fidivrl
push
loop
movsl
and
inc
scas
adc
push
or
pmaddwd
insl
imul
xchg
sahf
lds
and
push
push
nop
mov
pop
mov
jne
push
push
rorl
int
xchg
adc
and
jle
push
lds
inc
or
mull
dec
incl
push
lcall
pop
int3
jmp
rclb
xor
test
inc
ljmp
mov
cs
xchg
shl
xchg
in
jno
dec
lods
mov
mov
gs
movsl
fucomp
jp
lock
int3
std
mov
scas
fcomps
push
test
dec
jl
pop
rcrb
outsl
dec
xchg
std
mov
js
seto
dec
mov
fwait
jno
push
and
and
xorl
adc
pusha
pop
cmpsb
push
test
dec
push
sti
mov
push
sub
pusha
into
jg
repnz
jns
sti
fistl
mov
rcrl
mov
adc
outsl
mov
pop
jecxz
jo
jbe
add
rolb
jmp
dec
and
inc
pushf
fcmovnbe
jg
inc
in
jne
call
dec
pop
push
cwtl
ret
js
mov
dec
xor
lock
sbb
hlt
cli
sahf
xor
add
test
int
rcrl
incb
rcr
sbb
and
mov
imul
or
cmpsl
loop
and
cmpsb
jmp
lods
add
jns
mov
insb
jb
mov
sub
test
push
cs
cmpl
fbld
cwtl
fxtract
rcrb
scas
add
dec
cmp
push
cmp
fwait
dec
cmp
dec
and
sbb
xchg
cmp
test
push
fsubrl
loope
pop
add
pop
js
lahf
sti
cltd
mov
xor
inc
in
enter
mov
cmpsl
lea
sbb
lock
sbb
jno
outsl
push
mov
je
sbb
sub
cmpsl
neg
scas
rcll
lods
enter
or
int
add
and
fisubs
cmp
push
lret
lods
pop
xor
mov
scas
lret
cmp
dec
test
mov
add
mov
sbb
xchg
xchg
mov
test
xor
mov
push
jbe
lcall
mov
ljmp
mov
ja
test
js
sub
and
sbb
rclb
lock
stc
notb
sbb
iret
daa
pop
adc
jno
jo
ja
icebp
adc
leave
gs
xor
dec
clc
scas
pop
xchg
jb
fiadds
jb
int
mov
mov
push
test
int3
inc
pop
mov
push
loop
jecxz
dec
fstpt
sbb
fsubp
lret
or
mov
jg
jg
push
data16
sti
inc
dec
in
aad
scas
data16
and
push
or
sbb
add
aas
cmp
inc
rcrl
push
fstl
les
test
cmc
cmp
addl
lcall
sahf
push
subb
lret
clc
inc
andl
std
mov
xor
sub
in
mov
lock
aas
pop
mov
loopne
cwtl
outsl
add
adc
addr16
xor
rcrl
dec
mull
ret
push
mov
jnp
aas
sub
out
cltd
shrb
push
in
ret
pop
xor
addr16
popf
fisttpll
xchg
scas
loop
bound
inc
and
out
test
jmp
fnstenv
ret
inc
shlb
cltd
int
inc
gs
andl
ret
xchg
xchg
fsts
mov
in
repz
add
cmp
mov
sahf
mov
pop
das
stc
add
aam
mov
mov
pop
push
and
test
pushf
js
pop
push
repnz
repnz
loopne
xor
cs
jecxz
mov
decl
xchg
out
fistpll
pop
out
idivl
rorb
push
fstps
adc
cmp
pop
jns
mov
in
push
aas
mov
popf
iret
pop
sub
or
push
add
jle
xchg
xchg
push
push
xchg
scas
fnstcw
cmpl
dec
es
xchg
mov
pop
sbb
mov
popf
mov
push
dec
jne
xlat
or
pop
mov
pop
fwait
push
push
push
dec
add
and
sub
xchg
sub
xor
dec
xchg
push
jg
dec
in
movsb
addr16
add
jne
lods
ljmp
scas
leave
add
mov
movsb
adc
mov
incl
cmp
or
mov
jp
sbb
insl
daa
dec
and
insl
insb
mov
notl
adc
test
or
add
fwait
cli
mov
mov
dec
cli
inc
inc
pop
shll
add
aas
push
test
cwtl
out
pop
dec
movsb
jp
pop
sbb
dec
repnz
inc
jno
xchg
fnstcw
mov
mov
or
imul
cmp
gs
cmp
rorl
cmp
lods
mov
add
aad
jg
add
hlt
loope
mov
push
push
mov
lahf
dec
inc
dec
xor
shrb
pop
jg
popf
dec
and
sar
lock
and
cli
dec
jmp
dec
movsl
inc
ss
stc
cmp
sub
imul
mov
cmp
jo
add
cmpb
ds
test
sti
aam
pop
cmp
mov
or
inc
retw
add
cmp
sub
push
into
mov
xor
bound
mov
loope
imul
std
push
sbb
pusha
fisubl
into
out
mov
pop
shl
dec
inc
jne
gs
mov
in
jge
mov
pop
mov
push
sub
aam
cli
call
imul
add
jne
out
addr16
imul
notl
fistpll
xchg
push
sbb
mov
mov
ja
notb
lret
lahf
fists
sbb
pop
mov
loop
push
push
data16
popf
push
inc
jo
jno
adc
and
xchg
cmpsl
out
mull
mov
lods
cmc
mov
imul
mov
loopne
mov
mov
leave
aad
mov
jae
push
push
mov
aam
mov
jle
nop
ret
lret
sbb
dec
or
std
mov
clc
xor
call
pop
pop
insl
xor
jecxz
dec
inc
pusha
iret
lods
mov
cmp
cmp
sbb
js
aaa
or
ljmp
adc
ror
mov
scas
andl
cmpsl
idiv
mov
jns
inc
cmp
stc
add
pop
push
stos
inc
in
test
xor
sbb
pop
jecxz
push
int3
fmul
sbb
xor
lods
lds
xor
mov
repnz
mov
loop
movsl
fdivrs
popf
mov
dec
shll
jecxz
mov
mov
in
xchg
push
lcall
sub
test
repz
fisubrs
jo
mov
lods
popf
mov
sahf
lret
lea
cmp
aas
out
rorb
cli
std
ret
sar
jb
aam
pop
nop
mov
int3
ffree
popf
cld
out
fcmovu
test
push
sub
cmp
scas
xor
adc
inc
mov
add
lods
mov
sti
ret
ja
jo
xor
adc
imul
inc
inc
add
outsl
sub
dec
cmp
mov
mov
mov
addr16
inc
adc
mov
xchg
ss
lret
aad
movsl
mov
mov
mov
dec
jl
fcomip
lods
enter
pusha
cmp
int3
ljmp
xchg
into
xor
test
mov
mov
sub
adc
mov
in
dec
sbb
mov
fs
negb
pop
mov
jns
test
sarl
imul
mov
and
and
sahf
add
in
fs
in
out
mov
sbb
push
mov
fwait
jnp
and
pop
jg
jnp
adc
jge
xchg
xorl
shrb
scas
stos
adc
roll
lcall
lret
mov
js
cmp
loop
mov
and
pop
fwait
push
mov
pop
cmpsb
fisubs
jge
add
jl
pusha
and
cli
fidivs
imul
aam
inc
or
int
cmp
xor
lret
subl
das
andb
into
pop
mov
scas
dec
es
in
iret
mov
mov
add
aaa
push
xor
sarb
leave
adc
loope
add
fstl
lret
add
fwait
lea
lea
push
dec
pop
movsl
aad
test
in
xchg
add
int
ret
lcall
push
loop
mov
fwait
sbb
mov
or
push
xor
fldcw
push
sub
out
loopne
pop
stc
or
adc
xchg
mov
out
cmp
dec
test
dec
stc
push
pop
hlt
mov
cmp
push
jns
mov
lret
cmc
cld
xchg
mov
sub
adc
push
push
popl
jae
imul
enter
mov
outsl
stos
movsl
mov
push
mov
adc
mov
xchg
or
fwait
push
dec
pop
adc
xlat
xchg
cmp
std
fisttpl
push
mov
fwait
add
adc
das
repnz
insb
enter
mov
popf
mov
dec
xchg
jp
push
adc
mov
inc
cwtl
pusha
xchg
jge
pop
push
psubb
sbb
inc
mov
add
cmp
sub
add
dec
cmpsl
jno
rcrl
lret
rorb
sbbl
arpl
sub
scas
nop
cmpsl
lret
jmp
sub
dec
rorb
cmc
mov
iret
out
mov
into
add
je
scas
push
push
add
nop
push
sbb
cmp
and
arpl
add
dec
adc
ljmp
xchg
sbb
dec
push
cmp
sbb
pop
popa
daa
pop
subb
test
insb
jge
xchg
cmp
mov
pop
cmpsb
call
jnp
and
dec
mov
in
fstpt
mov
lock
in
dec
sarl
adc
hlt
adc
jno
in
test
pushf
repnz
dec
xchg
scas
sub
dec
loope
xor
mov
mov
mov
cmp
xor
jge
js
imul
pusha
fldenv
ds
into
push
lea
mov
cmp
inc
push
test
leave
out
mov
dec
test
test
popf
lods
inc
push
cmp
mov
adc
mov
and
pop
adc
inc
xor
iret
mov
mov
scas
push
or
mov
es
call
jae
cmp
pop
movsl
cmc
jl
xor
mov
cmp
xchg
bound
inc
jb
insb
cmc
popf
push
repz
mov
fdivrs
xchg
pop
out
xor
loop
sbb
push
cs
pop
hlt
sbb
and
in
aam
sti
ret
inc
sub
jae
cwtl
adc
cmp
mov
inc
in
pop
mov
xchg
and
and
ljmp
sbb
mov
inc
sbb
popa
or
sti
adc
sbb
jnp
jne
mov
subl
hlt
sub
scas
cmpsb
cmp
cmpsl
bnd
shll
jb
jb
jecxz
jge
push
dec
es
int
xor
test
int
stos
cmp
in
jge
add
addr16
mov
lcall
lock
mov
fs
push
and
ficoml
sbb
clc
ja
mov
push
lret
or
rcrl
lods
enter
dec
mov
orl
jmp
jl
jno
stos
popl
pusha
mov
sbb
jg
and
les
jl
pop
cwtl
mov
gs
cmp
inc
in
push
jbe
cltd
pusha
sti
in
test
inc
mov
lds
fldt
lea
xor
lock
inc
in
jnp
ret
mov
shlb
xchg
sarb
sbb
test
push
mov
sub
lahf
stos
mov
imul
in
lods
dec
mov
fneni(8087
pop
mov
cmpsl
mov
mov
jo
iret
bnd
in
aaa
test
pop
jno
jg
mov
push
push
je
jge
sbb
test
jbe
mov
pop
mov
dec
add
stos
loope
push
cmpb
icebp
sarb
jbe
lahf
xchg
add
push
xor
ss
jno
aas
clc
xchg
pop
into
insl
and
mov
scas
nop
shl
mov
jno
pop
outsl
xchg
push
les
xchg
xchg
xchg
mov
jne
jnp
dec
sub
fwait
and
negl
int
imul
mov
adcb
aas
pop
add
mov
push
or
ret
aas
xlat
sbb
mov
negb
xchg
dec
pop
push
mov
jle
xchg
jno
add
jb
jp
loope
popa
insb
mov
fistps
pop
sbb
mov
mov
popf
movb
shrb
pop
in
leave
hlt
jecxz
mov
stos
daa
incb
div
fbstp
fwait
ror
lock
sarl
lcall
xor
jle,pt
push
mov
inc
mov
test
pop
mov
sbb
lods
mov
cli
add
dec
das
imul
push
idivl
lcall
add
and
xor
mov
dec
inc
test
mov
mov
out
loopne
lods
aaa
pop
ret
or
dec
xor
cld
push
mov
mov
adc
lods
sub
cmpsb
cmpsb
lods
out
and
lret
call
addr16
inc
sub
and
testl
mov
xchg
mov
jecxz
mov
push
jnp
jnp
dec
or
outsl
test
or
push
jge
mov
adc
sub
or
or
cmp
push
mov
push
xor
or
incb
loopne
sbb
call
das
push
mov
lea
int
loop
iret
ret
ljmp
fnstcw
imul
mov
pop
test
mov
shrb
jl
or
cmp
add
cmp
ret
imul
inc
pop
les
mov
sbbl
fadd
and
and
push
cli
jne
jnp
aas
push
adc
cmp
ficompl
std
jle
add
int
jns
dec
popf
popa
pop
divb
jae
arpl
lock
stc
pop
sub
lahf
sub
pop
jnp
imul
and
hlt
and
and
mov
inc
and
xchg
mov
mov
repz
and
push
out
test
test
jmp
add
xchg
pop
xchg
mov
cmpl
and
lock
add
jecxz
sub
in
ret
jecxz
iret
adc
cltd
test
push
push
adc
pop
xchg
aaa
daa
lock
loope
mov
lods
icebp
fistps
jle
push
pop
or
sti
aas
aas
les
int3
dec
xlat
push
outsl
jecxz
mov
jecxz
pop
movsl
lcall
loopne
add
sub
icebp
and
inc
inc
or
dec
mov
mov
into
mov
sub
jp
and
pop
rcrl
mov
sbb
popa
and
mov
sti
mov
inc
pusha
out
cmp
pusha
setno
popf
movb
and
cmp
sub
mov
push
jo
inc
jge
movsl
into
popf
popa
or
shlb
rep
xor
das
bound
cmc
insb
jmp
int3
fbld
ret
movsl
push
jl
test
orl
cli
cmp
dec
es
shll
test
addb
sbb
jge
cwtl
rcrb
xchg
mov
sub
or
movsl
mov
int
es
mov
icebp
sub
pop
jno
cwtl
dec
lret
xor
cmp
fcomps
dec
add
xchg
pusha
mov
loope
and
loopne
insb
icebp
sar
lods
mov
mov
inc
jnp
push
xchg
fwait
sbb
lods
dec
sub
in
mov
xchg
push
repz
dec
add
and
push
sbb
sbb
xchg
shr
or
scas
aam
xor
mov
add
sbb
and
ds
flds
lock
lret
rolb
out
cmp
cmp
mov
push
movsb
or
sbb
stc
push
cmp
xor
incb
das
cwtl
pop
aam
jae
xchg
or
sahf
mov
adc
arpl
mov
add
bound
lds
mov
cmp
jno
mov
mov
mov
cld
repz
cmpsb
or
jl
cmp
mov
lock
mov
mov
insl
clc
dec
lods
lea
or
push
loop
outsb
lds
xchg
scas
xchg
xchg
je
and
inc
mov
test
mov
iret
inc
xchg
push
xchg
push
push
aas
xor
inc
icebp
jbe
lahf
out
sahf
inc
lea
sub
ss
dec
cmc
mov
jb
pop
fadds
inc
fstpt
lods
xchg
ds
sub
lock
push
mov
addb
pop
cmp
in
pop
mov
cmc
in
rcrb
pop
mov
mov
mov
pusha
aad
ds
dec
or
adc
sub
cmp
lret
adc
fcomps
stos
pop
mov
mov
adc
sarb
les
and
fwait
sbb
inc
into
mov
iret
push
push
fmuls
fcoms
xor
xchg
enter
push
and
add
mov
inc
xchg
push
movsb
or
cmp
shlb
cmp
sbb
aas
dec
in
cmpsl
jecxz
lds
pop
sarl
int
notl
daa
mov
hlt
jp
je
test
mov
arpl
cwtl
mov
loope
dec
or
aam
arpl
fwait
inc
std
sbb
clc
cmp
loopne
dec
imul
cmc
or
movb
jo
xchg
clc
xchg
push
iret
add
xor
out
add
fiaddl
push
out
insb
mov
mov
pop
enter
testl
mov
loop
or
mov
cmp
sub
cmc
inc
punpckhwd
mov
into
lret
in
arpl
mov
in
stos
inc
repz
dec
repz
add
pop
mov
cmp
cmpsb
fs
jo
mov
cmp
ja
rolb
or
cmpsb
xchg
xchg
nop
enter
clc
loope
xor
mov
popf
lret
mov
mov
mov
lods
xor
xchg
and
lcall
and
push
in
xchg
lods
xor
mov
aam
lcall
pop
xor
adc
into
pusha
aas
mov
inc
ret
jg
das
jnp
sbb
sbb
outsl
adcl
mov
add
fisubrl
das
push
pop
data16
mov
mov
pop
pop
fs
dec
sbb
pop
test
lea
lods
dec
pop
sbb
mov
xchg
dec
cmc
mov
pusha
mov
jns
into
mov
add
test
mov
ds
stc
lods
mov
jmp
repnz
cmp
inc
sbb
rolb
ret
push
fdivrs
pop
aas
ljmp
loop
mov
int
pop
out
dec
iret
inc
and
sub
pop
fcomp
jnp
ja
jae
hlt
mov
repnz
xlat
add
dec
or
in
sbb
out
mov
adc
lods
mov
daa
push
xchg
call
pop
mov
scas
sub
daa
or
ficoml
mov
jmp
or
adc
push
sahf
ljmp
pop
ljmp
inc
push
aaa
leave
jmp
in
mov
sbb
add
filds
icebp
jge
cmp
dec
sub
rclb
cmc
ja
xor
outsb
push
add
or
push
addl
sar
jp
xchg
add
scas
ficoms
sti
and
fstps
adc
addr16
and
ret
dec
jg
test
fs
std
std
dec
sub
stc
popa
mov
movsl
jno,pt
add
xchg
sub
cli
imul
mov
xor
inc
shlb
in
jge
daa
push
stos
adc
add
add
push
cmpl
lods
dec
nop
mov
jb
or
sub
push
add
stos
dec
pop
adc
inc
stos
xor
xchg
push
push
xor
int
mov
mov
sub
cmpsl
dec
iret
rcr
ficoms
fcoms
es
sti
xor
gs
orl
dec
rcl
xchg
inc
cmc
fists
mov
gs
int
sbb
push
les
xchg
imul
jne
and
inc
cmp
add
test
xor
das
sub
add
add
in
mov
sbbb
cmpl
sbbb
mov
cmpsl
sub
mov
cltd
push
mov
cmp
stc
and
inc
mov
dec
jecxz
shr
jl
and
add
subl
sarb
pop
inc
loop
xchg
mov
xorl
fcmove
dec
pop
sub
enter
push
push
mov
xchg
out
les
sub
aas
and
repnz
mov
or
les
sub
popf
lahf
insl
faddp
shll
mov
adc
sub
in
shlb
sbb
push
mov
mov
mov
stos
push
mov
das
xor
mov
stos
pop
cs
sub
loop
jno
mov
in
xchg
cmc
pop
jbe
add
fwait
cmp
stos
je
adc
cs
xlat
stos
je
or
ror
mov
test
jmp
sbb
es
cltd
jb
jl
mov
pop
ret
fucomp
in
mov
daa
lods
ljmp
es
mov
adc
leave
ficoml
jne
push
cmp
jns
push
push
sub
mov
test
sbb
push
mov
lods
enter
cwtl
add
js
cmc
jge
and
or
ret
dec
sbb
fs
push
stos
adc
addb
js
xchg
sub
mov
mov
dec
cmp
dec
xor
ret
inc
mov
jge
or
jno
mov
xor
loop
xchg
xchg
pusha
sub
pop
mov
sahf
push
push
mov
mov
loope
dec
mov
leave
lcall
jbe
dec
mov
pop
dec
addr16
or
lahf
aas
sbb
mov
fsubrs
out
sbb
sub
pop
das
jae
jns
adc
pop
lods
je
aad
dec
sub
mov
adc
and
scas
dec
or
mov
icebp
les
add
lock
pop
cmpsl
mov
daa
pop
inc
fsubs
lods
dec
movsb
stos
mov
push
add
jecxz
push
sub
sysret
pop
les
inc
xchg
shrb
aaa
movsl
sbb
leave
pop
push
xchg
je
inc
insl
add
shlb
pop
cli
pop
push
push
jae
in
cwtl
shrb
pop
es
jo
xchg
jl
xorl
or
or
dec
mov
outsb
stos
lds
int3
shrb
mov
fadds
rorb
sbb
mov
sar
mov
push
add
out
mov
sub
mov
repnz
jmp
arpl
mull
add
inc
jns
popa
push
je
outsb
imul
outsl
add
jns
imul
add
jns
imul
add
add
add
add
add
call
inc
add
inc
add
outsb
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
popa
bound
jb
popa
insb
and
outsl
addr16
insl
and
insl
imul
or
add
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
decl
inc
inc
add
inc
inc
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
push
imul
ljmp
push
add
add
jo
add
add
testb
loopne
add
testb
sub
add
enter
pushf
cmc
add
push
cli
add
add
add
cli
add
pusha
cli
add
inc
cli
add
xor
add
and
add
adc
add
stc
add
out
stc
add
cmp
add
inc
testl
add
add
je
add
mov
add
pushf
testl
add
testl
add
testl
add
testl
add
add
inc
clc
add
push
clc
add
jo
add
xchg
add
xchg
add
mov
clc
add
in
add
idiv
add
or
add
sbb
add
es
add
cmp
add
inc
stc
add
push
stc
add
stc
add
outsb
stc
add
jp
add
nop
stc
add
mov
stc
add
sar
add
stc
add
fdivrp
add
add
add
sbb
add
push
testl
add
add
add
add
lods
testb
shl
add
mov
add
add
push
outsb
insb
outsl
popa
fs
jae
jb
jb
imul
inc
push
inc
dec
push
cs
insb
add
add
push
inc
insb
outsl
jae
push
gs
gs
add
add
push
push
jne
jb
push
jae
jb
outsl
imul
or
push
push
push
dec
jo
outsb
push
gs
gs
add
push
push
push
inc
push
dec
xor
cs
insb
add
dec
add
je
jo
inc
jne
data16
jb
add
ret
add
je
jae
jb
gs
outsb
outsw
add
add
je
gs
outsb
jns
inc
dec
popa
insl
add
push
inc
push
dec
xor
cs
insb
add
sbb
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
je
imul
push
push
gs
imul
gs
add
add
gs
je
inc
imul
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
insb
gs
add
add
outsb
dec
jne
gs
add
enter
arpl
inc
insb
insb
outsl
arpl
add
gs
gs
imul
inc
js
je
jb
arpl
jae
lahf
add
popa
jo
jb
add
sbb
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
popa
fs
imul
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
lods
add
push
gs
js
gs
imul
gs
add
dec
outsl
fs
gs
imul
add
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
mov
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
je
dec
popa
outsb
fs
add
adc
inc
imul
push
add
je
je
jb
jne
dec
outsb
outsw
inc
add
jo
gs
jb
jns
fwait
add
popa
jo
jb
popa
je
add
mov
je
popa
insb
inc
jb
add
add
insb
push
outsb
ja
outsb
fs
add
imul
and
inc
gs
outsl
fs
gs
imul
add
push
add
je
je
imul
inc
add
push
add
je
je
imul
push
add
cltd
add
popa
jo
insb
insb
outsl
arpl
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
jo
gs
insb
insb
outsl
arpl
mov
popa
fs
jb
je
push
je
add
gs
je
dec
popa
outsb
fs
add
stos
add
jne
push
inc
jne
data16
add
xor
inc
jb
popa
je
inc
imul
gs
jb
arpl
fs
jae
add
ret
outsl
popa
fs
imul
add
popa
add
je
outsb
fs
inc
imul
dec
inc
dec
xor
cs
insb
add
rolb
push
imul
outsl
dec
jne
je
inc
jns
add
popa
jo
je
imul
add
popa
jo
je
.byte
outsb
addr16
adcl
add
add
add
push
inc
add
jno
imul
add
inc
add
insl
add
js
add
inc
add
sbb
rol
mov
and
add
ss
les
stos
mov
cmp
ss
outsl
scas
push
cmp
pusha
or
lret
sub
test
ret
pushf
push
pop
fists
pop
cmp
ret
xchg
outsl
inc
inc
push
lea
mov
loop
lcall
mov
mov
ja
lret
dec
sub
xchg
pop
jmp
les
sbb
mov
aam
and
aas
push
pop
scas
jnp
rorb
shlb
sahf
or
fiadds
add
jg
divl
cmp
add
shlb
popf
dec
sbb
add
xor
or
cmp
adc
xor
test
add
push
cmpsb
nop
aaa
xchg
adc
out
into
out
in
cmp
lock
daa
fnsave
fxch
xchg
je
icebp
pusha
jb
xchg
repz
das
xchg
sub
int
push
lds
and
mov
dec
jecxz
push
sarb
and
filds
cmp
movsl
sahf
imulb
push
lods
xchg
les
in
sub
sub
daa
lahf
mov
in
sub
push
scas
adc
jl
test
pop
jg
jp
sub
in
rclb
cmp
insb
sti
pop
int3
lcall
cld
xorl
mov
xor
mov
daa
cs
dec
jmp
lahf
fisttpll
ja
sbb
mov
sub
arpl
inc
inc
jno
and
jecxz
out
dec
call
lods
xor
sahf
mov
mov
gs
movsb
mov
jno
and
rclb
push
xchg
push
add
iret
fidivs
mov
fdiv
xor
add
sub
insb
in
and
aas
push
sbb
sub
lds
push
or
xchg
xchg
test
mov
cmpb
aas
push
stc
mov
out
or
inc
jl
sub
test
xor
jg
dec
sub
pop
jge
mov
or
mov
movsb
or
xor
adc
das
xchg
mov
adc
fwait
xchg
scas
ret
sti
push
fdivrl
fwait
mov
movsl
cltd
jl
mov
scas
out
inc
cld
xchg
xor
outsl
pop
iret
sbb
scas
mov
leave
out
fcoml
xor
mov
push
pushf
movsb
iret
ficoms
ss
cld
xchg
sub
adc
imul
mov
jge
imul
sbb
iret
lea
xchg
iret
push
test
lret
dec
insb
daa
mov
or
call
pop
bnd
pop
mov
cmpsb
pop
push
pop
sub
rcr
lods
mov
aaa
xor
sti
adc
cwtl
iret
cld
repz
adcb
pushl
in
pushf
and
cmp
mov
dec
mov
cmpsb
rclb
jno
outsb
add
lock
and
and
push
pop
mov
cld
pop
xchg
xor
leave
inc
mov
cmp
mov
mov
add
out
xor
mov
pop
mov
arpl
and
add
adc
jae
rolb
fdivp
imul
pop
rcr
aaa
loop
test
mov
xchg
dec
xor
xor
je
ja
jge
ret
call
test
jp
rolb
and
lea
loopne
roll
xor
sbb
cmp
lock
shlb
ljmp
scas
bound
into
add
cmpsl
mov
movsb
add
loopne
std
jmp
mov
push
xchg
add
mov
addb
add
jl
pop
mov
in
bound
pop
push
adc
push
ret
mov
movsl
xchg
jge
cmpb
lock
cmp
or
std
int3
test
pop
fucomip
adc
jge
dec
pusha
stc
rcrb
push
movsb
mov
arpl
sub
or
jns
or
lods
xor
sub
cwtl
mov
jg
cwtl
fnsave
enter
inc
test
fcoms
xchg
fistps
in
repz
push
rclb
jp
repz
add
and
cld
loope
mov
shll
xchg
scas
rorl
or
rcll
mov
popa
scas
push
mov
call
push
mov
sub
rcr
pop
fiadds
or
xchg
fwait
pop
jmp
mov
or
out
int
repz
jg
shll
jnp
sbb
stc
push
int
loope
jae
dec
mov
jmp
sbb
mov
cmpsb
clc
js
movsl
xor
fsub
les
fadd
mov
add
iret
sbb
inc
sub
add
clc
xchg
xlat
push
mov
daa
imul
dec
sbb
dec
push
fistpll
nop
xchg
mov
pop
filds
push
loopne
mov
and
mov
scas
sbb
mov
loop
push
inc
adc
add
fwait
nop
mov
sbb
loop
repz
jae
jno
push
xchg
inc
jns
daa
shrb
movsb
jp
fisubs
shll
popa
mov
xchg
pusha
hlt
scas
mov
fidivrl
dec
fsts
mov
jecxz
aas
loopne
mov
dec
popa
test
lret
daa
pop
sti
sub
dec
jno
pop
pop
add
xchg
and
ret
sbb
or
adc
xchg
jle
shrl
jo
sub
mov
dec
mov
stc
lret
jbe
rcrl
pop
fs
test
in
dec
xor
insl
sti
fstpt
cld
pusha
leave
shll
sub
mov
mov
stos
xlat
push
enter
add
dec
push
push
mov
dec
mov
insl
xor
jb
lock
daa
rcrl
xor
sub
fadds
or
xchg
jo
dec
xchg
jl
imul
movsl
into
inc
pop
imul
mov
dec
xlat
and
cwtl
mov
mov
xchg
cmp
and
and
adc
add
shrl
popa
loopne
mov
sbb
shll
xchg
jge
adc
add
xchg
push
dec
add
call
or
adc
lret
and
add
sub
pop
cmp
loop
mov
mov
mov
test
iret
jns
pop
fsubrl
jo
adc
aaa
push
push
add
push
or
in
add
cmpsl
adc
sbbl
mov
mov
cltd
add
jge
jg
xor
pop
pop
pushf
sub
or
fsubrs
into
cmp
js
fucomp
imul
fs
dec
icebp
clc
rclb
dec
add
rcll
push
dec
stc
hlt
push
jl
ds
lcall
jnp
das
mov
pop
jg
sbbl
xchg
xor
pop
inc
fidivs
cmp
inc
push
jecxz
mov
ljmp
lods
sbbl
cmpsb
xorb
mov
in
pop
or
pop
cmpsb
jne
in
fmul
lods
out
fwait
clc
push
cmpb
test
jns
ja
mov
inc
sub
xor
loope
sub
gs
rcrl
shrl
in
dec
in
hlt
pop
or
adc
add
pop
stos
mov
xor
jl
and
mov
movsl
subb
fidivs
xor
mov
mov
jns
cltd
xchg
data16
add
jge
ss
xchg
iret
out
sbb
mov
in
sahf
int3
fprem1
adc
pop
stc
cli
and
movsb
xor
inc
xor
pop
fwait
mov
call
jmp
sub
mov
cs
pop
aaa
add
xchg
rcl
rclb
cwtl
xchg
loopne
lahf
mov
imul
dec
or
mov
and
jne
fisttps
xchg
xchg
sub
xlat
xchg
fcomip
popf
push
pop
dec
push
out
inc
sbb
adc
xor
adc
in
lahf
xor
clc
dec
mov
inc
insl
sti
jno
imul
in
daa
les
jo
cltd
mov
ret
mov
push
pop
fsts
fldl
mov
fimuls
ljmp
addr16
add
ds
cmp
sti
inc
subl
arpl
in
outsl
ljmp
xor
jp
or
aad
testl
cmp
add
nop
xchg
dec
jbe
popf
outsb
rorb
test
cltd
inc
lods
xor
adc
clc
sub
dec
nop
jecxz
hlt
inc
adc
cmpsl
rcl
daa
push
dec
dec
jge
adc
mov
pushf
rcpps
lret
fwait
push
cmp
lahf
add
std
mov
push
insb
and
inc
mov
jecxz
aas
lods
hlt
mov
pop
cmp
aad
dec
stc
sub
sbb
jbe
lock
add
jecxz
pusha
shll
mov
pop
sub
scas
test
xor
push
call
push
lds
rorb
lods
inc
shlb
lods
cmp
push
repz
pop
filds
pop
mov
push
shr
loop
mov
and
int3
cmpsb
fwait
cltd
or
or
cli
out
adc
jecxz
lret
mov
jnp
and
nop
jno
inc
in
mov
orb
es
test
ret
sbb
and
std
in
nop
test
mov
mov
xchg
adcl
stos
mov
ficoml
int3
js
jns
stc
mov
jno
dec
subb
out
add
lods
outsb
stc
jmp
add
push
in
push
adc
push
sub
xlat
push
cmp
inc
decl
dec
xchg
sarb
pop
shll
or
dec
push
xchg
ja
aad
mov
mov
or
push
push
fldenv
leave
decl
sarb
je
sar
sbb
aam
aam
mov
into
xchg
push
mov
cwtl
shlb
jge
mov
add
lock
ss
addr16
xchg
pop
jl
sbb
mov
add
push
pop
cmc
or
aaa
out
and
or
dec
repz
arpl
std
enter
push
sarb
in
dec
mov
dec
sti
in
dec
jmp
mov
jbe
sahf
rcrb
lret
xor
jo
adc
dec
jecxz
rcll
rcrl
pop
lahf
jmp
push
pop
pop
mov
das
adc
rcll
mov
call
fdivr
xor
xchg
daa
int
adc
adc
jae
cwtl
call
mov
dec
sbb
lods
mov
jmp
hlt
icebp
mov
cmp
mov
push
push
mov
imul
cld
call
dec
orb
jle
mov
mull
mov
dec
dec
mov
fstpt
sub
cmp
add
fldt
xor
mov
jecxz
xor
push
or
mov
ljmp
stc
stc
cld
icebp
cwtl
jns
and
pop
cli
imul
sbb
shrl
loop
cmc
movsl
out
popa
imul
lcall
inc
inc
out
jmp
ret
sub
xchg
jns
xchg
stc
sub
ljmp
cmc
cli
in
fmull
sbb
imul
lcall
mov
or
push
push
mov
sub
repz
sub
cld
loope
xchg
shrl
pop
sbb
hlt
repnz
arpl
frstor
mov
pop
bnd
pop
or
out
inc
mov
mov
scas
insb
rorl
fs
stc
sub
andb
dec
leave
lcall
xchg
shl
pusha
push
xlat
fistpl
fmul
lahf
or
clc
or
push
mov
pop
mov
fdivrs
mov
shlb
jp
jle
lcall
push
xchg
lea
cmp
ljmp
fwait
mov
dec
adc
dec
push
inc
dec
mov
mov
push
sbb
ret
cld
cmp
ja
cmp
and
sbb
and
outsb
icebp
dec
inc
cmp
les
mov
and
loope
push
jmp
cmp
pop
testl
or
lods
dec
xchg
jmp
leave
sub
mov
jae
cmp
out
repnz
sub
xor
xor
inc
aas
jae
jmp
dec
add
pop
pop
mov
sub
cmp
sub
out
adc
loop
mov
push
pop
rclb
adc
mov
and
shrl
icebp
fmull
jne
adc
mov
inc
shlb
add
xchg
xchg
in
mov
mov
scas
stos
cmp
test
scas
loope
sbb
xchg
sub
enter
aaa
adc
xor
adc
sbb
repz
inc
xor
and
jne
fisubs
and
sub
add
lods
push
insb
pop
aad
mov
sbb
jns
iret
lods
mov
outsl
pop
popa
mov
add
jl
fisttps
scas
aad
ret
cmp
insb
les
jl
fwait
adc
mov
adc
push
mov
test
dec
jae
test
insb
dec
ficompl
scas
mov
add
nop
cltd
cmpsb
insb
clc
xor
inc
repnz
mov
sbb
mov
or
shlb
dec
xchg
inc
adc
mov
inc
fildl
sbbl
cwtl
in
mov
mov
mov
gs
sbbb
movsb
or
mov
adc
in
test
insl
push
xchg
jge
mov
imul
shl
mov
dec
jecxz
roll
leave
lds
lahf
pop
out
sub
push
xchg
inc
dec
mov
push
push
mov
pop
or
cmp
loopne
push
xchg
sahf
jmp
lahf
subb
dec
rcll
test
push
mov
pop
mov
aam
lods
rorl
add
lods
popa
xor
pop
movsb
push
es
outsb
mov
aam
hlt
inc
fs
xchg
sbb
mov
loope
das
mov
iret
ffree
xchg
sub
mov
cmp
or
sub
push
arpl
pop
jbe
xchg
jl
imul
xchg
imul
mov
imulb
xor
stc
jg
jge
shrb
mov
fstl
push
mov
stc
mov
xor
mov
dec
xchg
jmp
mov
mov
and
dec
rep
sbb
mov
out
adc
inc
adc
daa
aam
lret
popa
cmp
ja
cmpb
in
mov
mov
mov
cmp
lcall
push
stc
in
in
sub
sti
out
aas
in
bound
push
xor
xchg
and
push
lgs
adc
dec
adc
jg
mov
ljmp
rcrl
ja
push
out
dec
mov
rclb
dec
push
filds
push
mov
adc
stos
push
pop
sub
dec
xchg
mov
into
fwait
mov
mov
imul
pop
or
decb
dec
sbb
fldenv
out
dec
jae
cmp
insb
mov
xor
xchg
mov
lcall
mov
adc
xlat
test
sub
les
jp
je
xchg
test
int
das
cmpsb
and
roll
pop
xchg
arpl
scas
ds
cli
push
scas
aad
lret
clc
das
sti
mov
or
lock
dec
add
jmp
jnp
lds
lods
lahf
and
sub
xchg
and
ljmp
jecxz
adc
int
mov
pop
inc
imul
dec
lcall
push
push
cmp
leave
aaa
rcrb
inc
subl
out
xchg
loopne
frstor
cld
into
push
mov
clc
push
loopne
jns
stos
dec
loope
outsl
aad
leave
ss
inc
lahf
mov
test
fsts
mov
loopne
push
cmp
or
add
xor
data16
xor
or
pop
inc
int3
in
insl
movsl
lahf
and
dec
adc
daa
inc
outsb
shlb
into
shlb
lret
mov
stos
outsl
adc
adc
inc
cs
cmp
insl
lret
mov
daa
cmp
clc
jle
sbb
inc
pop
mov
lea
add
inc
add
cmp
inc
push
jecxz
cli
cmp
adc
nop
ret
mov
add
pop
xor
xorb
imul
sarl
adc
insl
scas
outsl
rcrl
adc
pop
stos
xchg
stos
bound
pop
fcomp
mov
push
lea
clc
and
cmpsl
mov
inc
mov
mov
add
xor
out
stos
hlt
mov
scas
pop
cs
enter
std
or
xor
clc
pop
in
sub
ja
rcrb
pushf
xchg
dec
scas
movsl
sub
lock
pop
cli
adc
mov
imul
shll
cmp
fisubrl
idivb
pop
cmp
sbb
repz
test
dec
call
mov
cmp
sub
aas
mov
loope
push
push
xorl
lahf
push
adc
pop
xchg
shl
ret
sbb
fistpl
fs
mov
xchg
sbbl
mov
xchg
sub
out
xchg
out
sbb
mov
jne
ds
std
aam
inc
sub
mov
and
xchg
int3
mov
pop
pushf
lahf
in
jnp
fildll
imul
shlb
inc
mov
sub
cltd
mov
cmp
mov
xchg
push
sbb
dec
cmc
cltd
xor
mov
popf
sub
jb
pop
in
inc
fistl
pop
iret
and
mov
dec
test
inc
arpl
js
shll
mov
sahf
push
and
ret
mov
sbb
in
add
dec
das
jle
jne
xchg
jg
sbb
adc
inc
outsb
pop
popf
enter
mov
movsl
fsub
icebp
js
xchg
subl
cld
sbb
ret
dec
test
popf
jne
loope
sbb
dec
popa
jb
jge
inc
fwait
aaa
cmp
xor
je
adc
adc
icebp
es
xor
add
xlat
xor
mov
pop
aaa
scas
pop
movsl
movsb
aam
jo
dec
icebp
popl
int
cmp
mov
inc
cmpsb
add
gs
push
mov
les
pop
nop
test
seta
mov
pushl
dec
sbb
fs
cmp
lds
jne
cmp
push
xor
lods
je
sub
fucomp
add
push
add
repz
sub
out
xchg
cli
iret
sarb
loopne
out
pop
in
push
push
push
mov
sub
or
add
jl
stos
lret
adc
jl
lods
inc
test
xchg
ss
push
lds
rorl
mov
pushl
jecxz
mov
pop
scas
outsb
jmp
push
xlat
jae
push
cmpsl
mov
or
andb
iret
sub
lds
jg
pop
stos
sbb
sub
lret
cwtl
inc
xchg
mov
xchg
data16
jle
test
aad
push
mov
cmp
pushf
jmp
loop
call
mov
into
xor
aam
popa
xor
ja
pop
and
sbb
scas
movsl
fsubrl
inc
lds
rcrb
in
and
push
pop
dec
lock
pop
fbld
xchg
test
inc
sti
ret
add
xchg
xor
cmp
pushf
mov
out
or
bound
jg
pusha
or
and
jge,pt
mov
mov
rol
adc
add
pop
vunpcklps
movsl
cmp
loope
jne
xchg
dec
fisubs
dec
dec
or
pushf
fimull
cld
repnz
repz
inc
hlt
xchg
adc
outsb
in
push
cld
sub
adc
shlb
inc
pop
movsl
push
movsb
cld
lret
fstpl
in
popa
arpl
aas
mov
subb
xchg
cmp
icebp
inc
mov
xchg
push
test
push
sbb
mov
ret
push
inc
mov
pop
xor
das
pushf
repz
sarb
lret
inc
jmp
loope
out
pop
out
sbb
arpl
jns
sub
jle
fadd
jecxz
testb
mov
dec
stos
jp
in
cmc
adc
repnz
add
out
sbb
rol
inc
imul
jle
aad
pushf
cwtl
sbb
xchg
mov
inc
pop
incl
mov
lods
xor
push
adc
mov
xchg
scas
xchg
dec
adc
popa
mov
mov
clc
pop
xchg
jp
repz
addl
adc
fdivr
shl
sti
add
adc
outsb
fcoml
mov
dec
dec
inc
cld
mov
pop
inc
sbb
lods
push
push
xor
add
lods
subb
mov
pop
fisttpll
ds
inc
lahf
or
dec
frstor
jns
cltd
popa
ss
push
cmp
pop
mov
cmpsb
xchg
call
mov
push
and
or
inc
add
sub
test
movsl
fs
scas
mov
xlat
mov
lock
movsl
test
jmp
imul
mov
stos
push
mov
lea
xchg
xchg
cmp
ret
cmpsl
or
int3
xor
movsl
sub
dec
mov
jno
pop
inc
js
jp
into
sbb
icebp
and
cmp
mov
inc
scas
loopne
mov
fbld
lret
ret
sbb
pushf
xchg
fcoms
xchg
and
test
xorb
pop
rcrb
stc
leave
icebp
mov
mov
push
push
in
cmp
bndstx
jge
xchg
lods
mov
jmp
or
mov
mov
repz
and
inc
div
imul
cltd
aam
lods
mov
arpl
cmpb
xor
or
xor
add
cli
bswap
sub
jb
push
data16
fsubrs
test
addr16
rclb
dec
pop
sub
je
dec
mov
ja
mov
out
in
test
pop
xchg
add
inc
push
pop
iret
mov
sbb
sbbl
lods
pop
add
rolb
inc
dec
sbb
cmp
push
mov
es
cmp
mov
xchg
sbb
cmpsl
shl
ja
out
fcmovb
xor
jge
lock
stos
imul
clc
and
or
xchg
jle
clc
and
in
cmc
sbb
leave
add
mov
mov
xor
sbb
mov
iret
xchg
mov
sub
pop
mov
shll
je
sbb
sti
or
aam
and
lahf
testb
pop
pop
repz
scas
sub
aas
dec
je
mov
js
int
mov
ja
push
mov
jle
push
outsb
orl
lcall
aas
cli
jle
mov
insl
pop
pslld
xchg
rcr
add
cmc
mov
push
movsl
pushl
call
or
inc
xor
insl
dec
mov
or
cwtl
leave
fdivrs
or
mov
mov
sub
aam
inc
push
cs
ficoms
push
movsl
push
sub
push
out
cltd
movsb
loope
dec
sub
fldt
jg
dec
testb
aas
push
out
sub
hlt
nop
push
fnstenv
adc
pop
mov
je
mov
mov
mov
push
bnd
jns
bound
es
pusha
mov
cld
mov
push
stc
xchg
or
jmp
ds
popf
cmp
xchg
jns
and
mov
lret
lahf
stos
pop
ljmp
inc
lock
call
loopne
out
outsb
sub
or
dec
imul
fldl
sub
scas
sbb
addl
push
idivl
outsl
inc
cmpsb
pop
dec
int3
loopne
int
fimull
pop
gs
cmc
pop
jb
xchg
jmp
mov
pop
xlat
pop
adc
jmp
shll
push
or
xchg
pusha
xchg
das
fiadds
sub
call
and
test
jmp
stos
sub
cld
mov
pop
aas
cmp
jecxz
pop
cmp
mov
add
xor
xor
bound
dec
add
add
clc
bound
inc
jp
jl
dec
or
in
sbb
mov
movsl
gs
mov
cmp
jmp
dec
dec
xor
mov
mov
mov
shll
jne
and
pop
scas
mov
cmp
cmp
xchg
push
fcomip
cmp
popa
adc
lock
outsb
lds
ficomps
aad
jmp
mov
mov
xor
popa
sarl
jb
orb
es
cmpl
mov
pushf
mov
jle
aaa
pop
test
shll
in
mov
add
push
imul
movsb
repnz
dec
in
rolb
subb
and
jo
stos
pop
repz
sub
aad
repnz
inc
int
sbb
aad
add
popa
js
xchg
das
cmpsb
popa
shll
pop
scas
hlt
lock
mov
into
movsb
popf
inc
xor
xor
notb
je
jb
outsl
pop
sbb
pop
btr
inc
dec
or
ret
push
dec
cmc
xchg
popa
daa
cwtl
fisttpll
fadd
divl
push
pop
lcall
ret
adc
mov
inc
pop
push
push
outsl
cmp
and
xor
out
mov
fbld
lock
lods
sub
dec
aas
lahf
xchg
das
lret
in
outsb
jne
inc
jno
mov
scas
lea
lods
xchg
sbb
cmp
adc
ss
mov
call
and
ja
mov
movsb
mov
shll
lea
xchg
lahf
jge
xor
test
pop
sti
ret
aam
cwtl
out
aam
lea
aad
jnp
stos
stos
pop
push
clc
push
push
jmp
pop
dec
adc
sti
and
loope
pop
sbb
scas
movq
out
test
or
xchg
fadds
and
xor
sub
cmp
js
cmp
imul
sahf
fs
or
enter
jno
nop
mov
jg
and
and
stos
mov
cltd
dec
mov
inc
push
sti
mov
adc
fistpll
leave
adcb
fstps
popa
scas
inc
daa
mov
icebp
add
add
pop
jge
xchg
jecxz
dec
jl
cmp
cmp
mov
cwtl
dec
push
out
repnz
add
cmp
aam
mov
imul
pop
cs
shll
movsl
sub
rcrb
orl
jecxz
push
loopne
lea
xchg
cld
movsl
mov
adc
cs
pop
lahf
and
push
xchg
cmovge
imul
xlat
adc
rclb
or
pop
mov
fwait
add
mov
cmp
pop
dec
push
jge
push
jno
shlb
in
in
je
shrl
shll
xchg
ss
push
dec
roll
test
pop
sbb
add
sar
arpl
jg
inc
sbb
dec
sti
shll
jge
mov
std
and
aad
dec
mov
lret
mov
imul
pop
scas
imul
xor
pop
sbb
push
cltd
addr16
xchg
lcall
xor
jne
fldlg2
stos
push
pop
stos
std
sbb
insb
ss
cmp
jg
xchg
rorl
lds
sub
pop
xchg
lods
lods
jb
lret
inc
or
mov
xor
jns
xchg
loope
pop
mov
mov
sbb
inc
cmpsb
cmpsb
fwait
sbb
dec
insl
xor
xor
mov
push
addr16
bound
push
and
cmp
in
pop
je
stos
out
movsl
cmp
lret
mov
xchg
sbb
push
je
in
cmc
mov
fldcw
inc
insb
pop
sbb
xchg
test
sbb
sbb
test
test
push
stc
rcrb
xor
jne
mov
cmc
mov
pop
inc
jno
test
mov
iret
lea
cmpsb
ljmp
mov
mov
out
inc
pushl
mov
sub
pop
iret
in
mov
sub
push
in
shlb
sub
sub
ficoml
mov
adc
adc
jg
cmp
stc
repz
in
repz
xchg
cli
and
out
subl
push
aad
js
sbb
xchg
or
push
cmp
pop
fldt
fstpl
fs
lea
popa
ret
shll
mov
icebp
or
faddl
push
addr16
popf
cs
popf
fistpl
call
sbb
bound
add
and
jnp
mov
xor
test
mov
cld
inc
out
aas
std
cltd
fsubrp
ffree
add
call
inc
mov
gs
mov
xor
mov
cld
pushw
jo
inc
push
cmp
leave
adc
mov
or
and
call
stos
push
mov
jg
int
repnz
dec
cmpsl
test
cmc
mov
mov
sub
mov
stos
mov
test
mov
xchg
sbb
mov
mov
xchg
mov
repz
loop
fcoml
fidivs
sbb
cld
outsl
fmuls
aaa
dec
push
mov
xor
cmp
repz
jle
incb
xchg
jae
jnp
movsb
adc
dec
or
adc
jbe
inc
mov
cmp
das
jecxz
jo
cmp
scas
sbb
call
pop
mov
xchg
lods
pop
imul
in
ljmp
icebp
fwait
bound
test
jno
scas
icebp
and
jge
cmpsb
mov
std
loopne
into
mov
loop
pop
sbb
mov
lods
adcl
outsb
jp
cld
xor
mov
cmp
lock
enter
repz
lcall
icebp
and
sub
pop
lahf
push
ljmp
add
out
cli
out
aam
sub
and
std
das
arpl
and
pop
jmp
inc
add
lcall
lret
lahf
mov
es
les
push
mov
cmp
adc
push
xorb
cltd
sarl
xor
mov
cmc
push
int
ds
xchg
mov
loopne
insb
cltd
and
lea
sub
inc
movsb
ljmp
or
jl
out
pop
dec
fiaddl
xor
adc
inc
fisubrl
and
inc
imul
fs
mov
add
sbb
orb
imulb
aaa
in
jecxz
inc
mov
test
frstor
xchg
in
movsb
lds
sbb
loopne
jno
inc
push
inc
xor
xchg
lret
lcall
std
or
and
lret
lock
test
flds
out
sbb
out
mov
lods
and
xchg
std
movsb
ja
or
xchg
jg
ret
aas
push
pop
cmovno
fcomps
ds
cmp
cs
cli
mov
in
inc
xchg
int
icebp
iret
dec
and
scas
and
xor
out
lds
inc
sub
add
push
sbb
push
sbb
jne
imul
sbb
mov
mov
js
scas
arpl
fldl
repz
ficomps
les
lcall
mov
cld
mov
mov
and
imulb
dec
jbe
add
and
cmp
pushf
icebp
jp
jnp
mov
ret
enter
stos
mov
dec
sub
repz
out
mov
jl
aaa
xor
mov
mov
out
fcompl
add
scas
or
sbb
leave
out
inc
mov
and
out
ret
in
pop
push
or
or
cmpsl
aaa
test
cmp
push
mov
mov
and
subl
mov
and
or
je
scas
in
mov
faddl
adc
pop
hlt
fwait
add
mov
and
xchg
pop
pop
or
in
xchg
movsl
or
sbb
xchg
test
call
mov
jne
cld
mov
pushf
jg
adc
mov
xchg
out
and
pop
add
in
and
div
add
and
dec
adc
xchg
sbb
out
ret
les
sahf
jge
rcrl
pop
cltd
ljmp
iret
stc
cmp
and
imul
sub
popf
ret
fwait
out
imul
orb
xchg
adc
test
and
sub
inc
xor
cmp
mov
mov
and
push
in
bswap
pop
mov
pushf
adc
xor
shll
inc
jge
jbe
bound
sbbl
dec
jo
mov
out
add
test
push
cmc
jbe
dec
dec
adc
push
into
adc
out
insb
sarb
shrb
mov
aaa
push
popa
sbb
pop
push
leave
dec
inc
bound
rcrb
shrb
stc
pop
xchg
pop
sub
orb
sarl
ret
aas
jns
int3
sub
and
cmp
cmp
xchg
movaps
or
mov
dec
xchg
inc
pop
jmp
je
inc
test
mov
inc
dec
fcoml
test
mov
scas
sub
and
mov
test
inc
pop
inc
push
sub
sbb
addr16
das
jmp
inc
dec
sub
jl
mov
jnp
cmp
icebp
ja
arpl
push
test
repz
pop
div
ds
enter
xor
mov
aam
insb
xor
inc
ljmp
jmp
aas
pushf
ret
sti
popf
xchg
mov
orb
syscall
daa
out
mov
mov
push
insl
sarb
pop
ljmp
outsl
sbb
lds
cmp
cmp
repnz
data16
inc
dec
shrb
xchg
xor
push
cld
lret
xchg
and
jecxz
and
lret
push
jmp
push
jl
in
stos
mov
bound
ror
and
in
test
mov
or
pop
test
cmc
cmc
jecxz
add
mov
xor
lret
push
dec
mov
addr16
call
das
int3
mov
xchg
ja
pop
dec
push
dec
mov
dec
out
add
out
mov
inc
negb
cwtl
mov
jnp
pop
cli
sahf
or
or
mov
pusha
cs
imul
js
jo
lock
push
out
mov
lods
scas
xchg
out
iret
cmp
mov
out
popa
jo
mov
mov
lcall
fadds
or
mov
xor
pushf
aas
cmp
adc
push
test
inc
jmp
mov
fistps
jbe
negl
cs
pop
hlt
jg
iret
mov
pop
or
pushf
jnp
mov
dec
mov
roll
stos
fsubrs
xorb
ja
cmc
xchg
in
or
icebp
in
sbb
mov
add
inc
imulb
push
ss
loopne
iret
push
loop
aaa
stc
in
lcall
nop
pop
lret
jp
cmpsl
inc
inc
adc
movsl
mov
mov
lea
adc
lods
ret
add
adc
cli
sbb
jle
lods
cmc
sbb
or
dec
add
jae
lea
xlat
shl
sub
xchg
fstp
inc
push
sahf
cmpsl
dec
in
xchg
pop
movsb
out
add
jg
rcll
sub
sbb
rcr
in
shrb
fadds
pop
lahf
lcall
mov
xor
int3
mov
push
fsubs
loop
jno
pop
jle
stc
cmpsb
scas
cmp
daa
sbb
pop
sbbb
sbb
into
fdivl
jne
aad
dec
and
fists
imul
jg
aad
rcrb
fidivl
pop
dec
aam
mov
xchg
pushf
adc
sbb
lods
adcl
pop
fisubrs
repnz
sbbb
loopne
out
pop
out
dec
jne,pn
and
shrl
in
xor
or
sub
xor
add
jg
int3
cwtl
psrlw
dec
iret
test
sub
sub
sub
cmpb
lcall
sub
cmp
dec
inc
dec
ss
std
out
inc
roll
pop
rcl
inc
out
push
js
shrb
fisubs
inc
dec
daa
daa
aaa
mov
add
ds
test
call
loop
inc
mov
add
and
push
mov
jns
aaa
jp
inc
rcrb
andl
push
leave
pop
cmpsl
mov
pusha
sbb
fidivl
pushf
je
cmp
jle
fs
loop
sbb
jg
test
clc
jg
pop
sti
push
xchg
adc
xor
adc
fstl
pop
cltd
lock
mov
ss
xor
shlb
cli
pusha
shll
pop
lods
pop
inc
jnp
adc
and
hlt
sti
mov
xor
mov
hlt
lods
pop
sar
movsb
lock
test
mov
fsubrs
or
lds
cmpsl
fcomps
imul
add
adc
int3
sbb
jo
mov
xchg
scas
and
push
adc
mov
jae
mov
xor
and
adc
call
push
mov
ss
orl
das
insb
adc
arpl
test
stc
scas
and
lret
or
jbe
lahf
or
aam
daa
stos
rorl
sbb
insl
es
in
xchg
jmp
notb
scas
das
sub
pop
into
push
pop
or
iret
fmull
pop
out
jb
sbb
testl
std
sub
xchg
fsubl
xor
xor
fwait
jg
movl
add
mov
and
shl
sbbl
sarb
mov
aas
vmread
and
mov
lret
fisttpl
pushf
int
xlat
cmpsb
mov
inc
jle
push
adc
pushf
stc
mov
rcl
push
ss
je
mov
mov
ret
int3
xchg
test
cmp
jg
sbb
shl
sub
sbb
in
xorl
mov
jl
scas
aas
pop
enter
fiadds
adc
cmp
lea
icebp
test
das
outsb
cmc
sbb
jmp
outsl
clc
notb
sbb
clc
fs
mov
cmp
idiv
jmp
mov
mov
push
xor
dec
loopne
movsb
in
push
jbe
int3
cli
sti
incl
test
mov
lea
mov
mov
add
pop
cld
call
pop
cmp
test
pop
shrl
nop
addr16
pusha
xor
pop
sti
mov
rcll
mov
test
movsl
lahf
dec
fld
mov
cwtl
clc
jl
and
and
add
iret
jmp
dec
leave
mov
sbb
and
loope
bnd
fdivrl
xchg
das
add
cli
mov
addr16
dec
and
das
test
mov
mov
shl
test
push
and
daa
leave
arpl
loopne
pop
mov
xchg
fbstp
rorl
fidivs
lahf
sti
xor
stos
fcmovbe
cmc
pop
push
nop
fcomi
cmp
lock
xchg
xchg
fbld
icebp
push
jnp
clc
xor
and
shl
inc
ss
dec
sti
mov
sti
cmc
lcall
sub
jns
loope
aad
adc
and
aas
inc
shufps
in
int3
pop
and
and
jb
adc
cmp
cmp
mov
add
ljmp
fwait
jb
popa
add
inc
cmp
or
dec
dec
mov
xchg
sub
pop
repnz
clc
and
stc
in
sub
or
scas
mov
das
arpl
mov
mov
in
dec
adc
outsb
leave
sahf
dec
push
cmp
xorb
cmp
jno
cmp
jne
test
dec
and
test
cmpsb
roll
arpl
cld
inc
lods
xchg
arpl
mov
add
mov
cmp
sub
cmovg
dec
fwait
addr16
fldl
arpl
in
sbb
movzwl
repnz
stos
lret
imul
xor
scas
ror
mov
clc
mov
mov
or
outsl
leave
cltd
arpl
xlat
xlat
cmp
inc
sub
or
ja
or
xorl
xor
popa
test
mul
loop
mov
jge
insb
mov
xchg
jge
arpl
or
push
fists
xchg
push
xor
mov
mov
cmp
mov
jg
into
out
enter
and
push
rorb
push
and
pop
lds
aam
scas
imul
add
mov
cwtl
cmp
jne
addr16
ss
les
jle
jg
mov
stc
test
ret
jne
and
sbbb
push
push
das
add
sti
pop
fwait
scas
aam
xor
mov
pop
fimuls
xchg
call
lcall
mov
stc
into
lds
mov
clc
and
stos
mov
mov
inc
and
and
mov
ficoml
adc
mov
pop
incl
push
stc
and
pop
push
jge
mov
mov
clc
mov
jne
aad
fisttps
shll
out
and
inc
cli
test
faddp
out
mov
cli
add
add
xchg
sbb
aaa
cmc
clc
and
jbe
adc
loopne
or
mov
jge
mov
stos
gs
fs
cmp
lret
arpl
xchg
mov
fadds
cli
fwait
push
add
add
pop
sub
js
fst
lock
dec
and
mov
push
mov
ret
sub
and
outsb
cmp
daa
sub
imul
loope
cld
cmp
enter
jp
xchg
les
mov
lcall
add
add
and
pop
jnp
cmp
int3
and
xor
sbb
xchg
sub
out
xor
mov
in
jbe
sub
or
movsl
fs
jae
nop
test
add
dec
push
bnd
xor
rclb
ss
sahf
and
dec
jmp
int3
push
shl
gs
and
mov
adc
pop
sbb
xchg
mov
sub
push
jg
xlat
push
push
aad
inc
gs
lret
push
or
inc
mov
scas
fistps
sti
cld
add
mov
mov
test
clc
xchg
lea
sbbb
jl
adc
jo
mov
out
lds
into
int
imul
shrl
xchg
mov
repz
addr16
mov
cmp
int3
dec
mov
lods
jns
dec
sahf
cli
add
mull
mov
pop
jmp
jge
mov
xor
mov
or
sahf
addr16
sub
insl
imul
xchg
adcb
outsb
lods
inc
push
sbb
jbe
dec
dec
push
pop
in
and
jl
mov
int3
hlt
sub
int
add
mov
add
add
add
fxam
les
sub
outsl
sbb
xchg
pop
ljmp
xchg
jp
push
repz
pop
dec
adc
xchg
xchg
mov
push
ss
and
and
out
push
sbb
inc
rorl
jmp
in
mov
stos
jmp
and
rcl
push
lds
test
push
es
adc
lret
xchg
cmp
add
add
push
lods
mull
xchg
punpckhwd
dec
fsubs
xchg
dec
dec
incl
sub
mov
adcl
fldpi
aam
cmp
mov
das
repz
leave
jp
add
loopne
jne
xorb
adcl
lcall
lret
jnp
add
add
fisttpl
xchg
mull
and
in
out
jge
hlt
or
add
xchg
cmpsl
add
xchg
hlt
pop
lret
inc
mov
xor
or
cmp
mov
call
enter
mov
mov
jae
jg
add
shll
insl
mov
pop
jae
push
das
out
xor
or
pop
sub
xchg
movsl
add
or
mov
sbb
fcos
fisttpll
push
mov
test
test
mov
nop
call
loope
loopne
cmp
sub
inc
or
sbb
int3
mov
fs
stc
cwtl
arpl
fcomip
jmp
mov
leave
cmp
adc
inc
push
sbb
push
mov
cwtl
and
jmp
push
or
pop
ret
rol
mov
or
push
arpl
add
scas
mov
ret
loopne
sbb
lds
aam
popf
out
fistl
stc
cwtl
mov
fidivrl
aam
andl
test
lret
cli
sahf
sbb
adc
gs
call
xlat
inc
dec
or
jae
mov
jns
adc
mov
inc
cmp
insl
fsubs
jne
lahf
lahf
lret
jb
popa
das
lret
in
sbb
js
jbe
arpl
sbb
test
xchg
mov
fcoml
and
and
lds
or
or
mov
cmp
mov
mov
loopne
adc
fistpll
imul
sub
out
clc
dec
lcall
lret
int
xor
test
inc
and
loopne
les
jo
mov
pop
movsb
into
xchg
fstpt
call
rcrb
sarl
xlat
enter
in
and
adc
cwtl
mov
repz
adc
xchg
ljmp
add
add
push
ljmp
pop
inc
jo
icebp
sbb
cbtw
out
mov
aaa
mov
push
xor
or
cmp
shll
ljmp
or
lcall
sub
xchg
sbb
imul
test
xor
add
add
push
rcll
inc
scas
stos
pop
lret
fldcw
das
xor
or
loop
fldenv
xor
shlb
mov
repz
push
pushf
movsl
in
shr
dec
cmp
daa
and
dec
and
and
xchg
xchg
dec
mov
jge
mov
shrl
jle
shll
xchg
lea
add
mov
xchg
arpl
popf
xlat
inc
in
and
out
lods
lahf
sbb
in
dec
or
cmp
popf
mov
lahf
ss
pop
xchg
stos
pcmpeqd
add
add
outsl
pop
pop
dec
dec
sub
jbe
sbb
mov
cld
mov
fistpll
movsl
jmp
les
inc
cmp
shll
addr16
je
dec
out
and
cmc
int
jne
mov
push
rclb
inc
adc
jns
int
pop
cli
and
aam
add
add
push
cld
or
or
mov
outsb
push
repnz
repz
test
mov
int3
xchg
dec
les
xchg
call
pop
xchg
inc
lret
dec
dec
outsl
sar
inc
cmc
cmpsl
xchg
and
jp
inc
xor
inc
insb
stos
enter
xor
adc
mov
in
mov
cmc
inc
rcl
mov
test
arpl
add
lcall
inc
call
dec
fnstcw
adc
add
add
mov
mov
cmc
jle
daa
fnstcw
mov
loop
xchg
mov
loop
inc
es
pop
dec
pop
cmpsb
shl
dec
dec
dec
scas
stc
jmp
mov
bound
out
lcall
adc
jg
xchg
ss
or
insb
mov
push
add
in
inc
cmp
pop
lahf
and
and
and
mov
sti
subl
scas
jg
push
push
in
mov
pop
cmp
fs
loop
push
hlt
push
lcall
loope
push
movsl
jp
or
nop
movsb
add
jns
lea
lcall
clc
or
movsb
sti
inc
dec
xor
push
jae
nop
call
dec
jnp
movsb
xchg
repnz
adcl
popa
mov
lods
scas
push
fimull
daa
mov
push
test
pop
repz
dec
dec
mov
jecxz
je
add
outsl
jb
add
cmp
mov
sbb
inc
call
dec
repnz
enter
push
cs
lret
pusha
or
repz
movsb
imul
xchg
jne
std
jnp
mov
and
int3
hlt
xchg
insb
add
add
aam
lea
xchg
sahf
iret
lock
jmp
clc
dec
insb
sbb
je
js
inc
ret
loope
push
cmc
inc
mov
mov
push
adc
jne
mov
lea
fdivrl
sahf
sar
mov
dec
push
hlt
sahf
iret
or
rorb
pop
lret
adc
mov
add
add
inc
pop
and
push
and
in
lret
mov
inc
dec
inc
movsb
loopne
sub
decb
xor
mov
xor
add
xchg
dec
inc
jne
cli
fiaddl
add
sub
jmp
in
sub
rorb
adc
movsb
loop
outsl
xor
lret
decb
push
in
es
cmpsl
mov
mov
sbb
hlt
in
je
mov
int3
das
cmp
mov
jl
xchg
mov
xor
or
int3
and
mov
and
push
scas
jp
arpl
xorl
test
dec
and
dec
and
cmc
sti
xor
cld
dec
inc
fidivrs
xlat
mov
sub
inc
push
iret
lock
xor
xchg
in
xchg
add
adc
pop
or
inc
jae
lds
xchg
mov
and
repz
push
sub
push
cmp
xchg
cmpsl
sbb
fistps
xor
dec
es
cmp
lahf
in
lret
sbb
fwait
ja
jl
sbb
pop
xchg
cwtl
gs
xor
and
and
and
and
and
mov
outsb
jge
daa
sbb
adc
insl
rcll
or
in
mov
jno
push
std
pushl
cmc
int3
ljmp
add
add
cwtl
xchg
jno
sbb
dec
sub
imul
jge
cltd
cmp
push
pushf
out
mov
dec
mov
xchg
filds
sbb
jg
in
fisttpll
mov
addr16
push
lods
dec
outsb
imul
int3
fildl
clc
sahf
dec
jnp
loopne
repz
add
add
and
cli
sbb
and
ret
aad
std
or
lcall
sbb
add
adc
adc
out
out
jle
mov
daa
sbb
in
cltd
cmp
add
lock
push
loopne
scas
jo
jmp
rclb
dec
nop
call
add
xchg
std
add
and
call
pushl
ret
lahf
lea
jbe
xchg
lock
popa
dec
push
leave
cmp
aad
mov
shlb
insl
ret
inc
mov
shr
xchg
mov
daa
pop
sti
inc
jge
sub
fildll
xchg
sbb
mov
mov
pushf
xchg
test
inc
mov
and
aam
ret
push
add
nop
daa
in
imul
inc
lret
lcall
outsl
aam
push
mov
inc
cmp
fistl
cs
push
push
lahf
dec
mov
pop
sub
mov
repz
mov
lds
es
test
mov
sub
push
out
sar
mov
mov
push
ja
xor
push
out
adc
scas
scas
cld
test
xchg
sbb
jecxz
into
aam
mov
xor
mov
sahf
cwtl
xchg
addr16
lods
jmp
lods
adc
call
mov
enter
repnz
je
inc
cmp
notb
cmp
cltd
jl
arpl
add
add
in
jmp
push
xchg
pop
xchg
adc
in
mov
xchg
add
add
add
aaa
leave
loop
cmpsl
xor
adc
fcoms
shll
outsl
ficoms
jo
push
mov
ss
int
jmp
shrb
sbb
rolb
mov
ficoml
outsl
ljmp
call
adc
pop
adc
ds
pop
xchg
mov
call
or
orl
add
iret
pop
cltd
cmp
fsubl
aam
push
xor
xor
outsb
outsb
test
shr
fdiv
push
imulb
sub
andb
iret
and
add
add
add
push
jno
pop
mov
in
push
cmp
es
fwait
jmp
std
jge
mov
mov
mov
inc
popf
xor
and
xchg
pop
lods
mov
sbb
adc
dec
sub
pusha
fistl
cmp
ja
sub
sti
mov
mov
push
jns
adc
das
or
nop
call
dec
or
inc
add
or
lds
cmpsb
jae
adc
addr16
mov
in
xor
cmc
mov
xchg
fildl
add
jbe
jne
mov
or
pop
inc
aam
pop
add
mov
push
rol
or
loopne
mov
pusha
xchg
mov
icebp
pop
sahf
gs
pop
ret
pop
dec
dec
lcall
mov
sbb
repz
push
sbb
shr
jnp
popf
add
mov
shrb
or
mov
sub
sbb
nop
notl
lret
mov
pop
or
lret
sub
frndint
and
popa
out
lds
fcompl
pop
pop
stos
adcl
sbb
sbb
lea
push
push
jne
push
mov
xchg
add
idivb
mov
cmp
lods
mov
push
data16
ret
into
clc
stos
popf
dec
cmp
pusha
testl
and
fisttpl
loope
sar
divl
pop
fnsave
mov
add
add
insb
pushf
fstpl
adc
xchg
pop
scas
icebp
xchg
sub
pop
inc
add
subb
mov
add
add
mov
scas
lods
pop
mov
xchg
into
popa
into
mov
mov
mov
mov
jb
iret
lock
mov
insb
mov
xlat
adc
shlb
jg
cli
mov
ret
add
add
add
xchg
sbb
call
xchg
stos
and
and
xchg
xchg
out
cmp
jl
mov
sti
xchg
insb
push
in
loopne
scas
ds
and
mov
fstl
lds
push
dec
dec
adcb
pop
jge
add
pop
aam
ror
scas
add
loop
stc
jmp
daa
push
add
adc
push
scas
xor
xlat
push
movsl
test
fwait
mov
jnp
popf
repnz
sub
cmp
push
push
mov
pop
cltd
lret
adc
add
cmpsl
pop
cld
pop
stc
sbb
cmp
lcall
data16
inc
mov
jb
nop
popf
dec
push
ret
roll
xchg
popa
jae
nop
and
jg
sahf
or
inc
in
jg
iret
cmp
or
mov
push
out
cmp
fisttpl
cmp
dec
sub
in
jg
mov
push
xor
xchg
xchg
push
push
gs
mov
mov
cmc
mov
ret
out
cld
lahf
out
dec
icebp
add
pop
nop
xlat
sbbb
cmpsb
out
shlb
mov
int3
pushl
ds
cmpsl
push
insl
sbb
xchg
jmp
subl
pop
pop
mov
push
dec
repz
ds
pop
test
ret
adc
xchg
gs
add
test
push
cmp
lret
add
ret
sub
repnz
push
shl
or
sarl
mov
jne
and
and
dec
mov
inc
stos
pop
push
sahf
out
popf
push
xchg
jp
fistpl
and
aas
hlt
cmp
sub
out
out
add
add
add
dec
mov
pop
shrl
cmp
xor
ja
pop
mov
mov
mov
pop
stos
lods
mov
cmp
add
add
dec
test
lock
and
sub
idivb
imul
jbe
sbb
call
xchg
lret
rcr
xchg
sbb
das
mov
pushf
lret
gs
add
movsb
pop
push
aam
scas
mov
add
hlt
lock
lea
popf
sbb
push
mov
mov
sbb
mov
fstp
clc
push
and
fisubs
adc
or
int
push
lods
inc
addr16
mov
jnp
in
sub
mov
and
xor
lock
or
loopne
iret
dec
xlat
pop
cmp
mov
push
sbb
jle
and
push
dec
dec
xchg
xchg
xchg
outsl
sub
and
pop
jmp
lods
int
imul
jl
in
nop
cld
xor
scas
mov
std
in
scas
stos
jo
and
test
setae
leave
pop
or
movsl
cmpsb
inc
mov
adc
jb
jo
jl
push
mov
stos
sbb
out
imul
sbb
popa
xor
and
nop
not
lea
or
dec
into
lds
sub
dec
mov
add
add
movsl
adc
ret
jecxz
mov
aam
addr16
loope
cltd
inc
hlt
jg
and
jno
xlat
in
pop
add
fmul
mov
mov
mov
enter
scas
mov
mov
add
dec
dec
pop
cmp
fldt
clc
pop
inc
and
sub
scas
rclb
ret
rcll
add
add
fimull
push
in
xchg
jmp
popf
mov
scas
mov
mov
xor
in
cmpl
xor
sti
scas
mov
cmpsb
or
out
fistl
orl
jecxz
cmpsb
shl
cmc
push
jb
inc
mov
bound
shll
dec
xor
sti
and
and
and
stos
mov
and
out
mov
mov
add
repz
outsb
mov
pop
jecxz
test
dec
insl
movsl
or
movsb
inc
mov
aam
movsb
gs
stc
mov
pop
xchg
pop
gs
push
push
dec
popf
mov
aad
mov
mov
add
push
rcl
shrl
fmull
sar
pop
dec
out
push
aam
faddl
aam
popl
inc
sub
aad
push
mov
xchg
insb
add
xor
lds
outsb
clc
jno
mov
sbb
cld
dec
lret
fdivrp
and
movsl
mov
shrl
into
lret
sub
out
stc
dec
iret
call
outsl
and
and
and
clc
adc
scas
mov
and
in
mov
cmp
dec
mov
cmp
into
mov
popa
adc
xor
dec
add
lahf
and
mov
shrl
hlt
add
orl
push
mov
pop
jmp
addb
cmp
scas
cmp
push
dec
dec
lcall
insl
lds
imul
in
cmp
jmp
sub
je
lcall
sahf
icebp
jne
sub
cmpsb
jmp
dec
inc
inc
dec
imul
sar
xor
jp
and
and
or
lret
nop
pusha
push
inc
mov
out
scas
mov
jp
cmc
cmp
mov
dec
pop
fs
rcll
out
imul
push
adc
sarb
xchg
inc
jnp
or
cmpsb
inc
scas
pushf
js
scas
jns
mov
xchg
flds
call
aaa
cs
pop
pop
rcrl
mov
add
jae
and
pop
or
sub
ret
in
cmp
xor
gs
push
test
cli
popf
mov
sbb
or
movsl
andl
xor
imul
or
mov
ja
lea
sahf
inc
outsb
in
sbb
mov
lahf
invlpg
dec
mov
addr16
pop
inc
iret
lods
insb
mov
or
mov
pop
repnz
rcrb
pusha
loopne
mov
loopne
popa
xor
sub
mov
mov
push
sarb
lods
aad
xchg
jns
repz
lods
call
hlt
or
out
jbe
jno
mov
data16
xchg
loop
push
aad
outsl
movsl
or
jne
pop
mov
cmpsl
xor
cwtl
into
xchg
push
jmp
test
xchg
insb
push
jecxz
call
jp
mov
cmpsl
leave
pop
xor
pop
dec
ljmp
clc
js
cmp
loope
mov
xlat
das
pusha
lret
sub
mov
in
xlat
mov
out
xchg
adc
mul
pop
inc
in
and
pushf
sti
mov
push
insl
arpl
shll
cmp
push
outsl
dec
jmp
mov
loopne
and
and
and
test
aaa
mov
and
push
movsb
pushf
jno
out
lods
in
mov
in
add
sbb
pop
pop
jg
hlt
stos
adc
xchg
repz
loop
mov
xor
dec
add
add
xor
stc
xchg
add
lds
mov
insb
mov
or
shlb
rcll
add
fistl
add
test
add
or
or
movsl
mov
xorl
shlb
jns
add
add
add
int3
mov
in
mulb
pop
pushf
cmp
jecxz
lods
imul
jnp
hlt
push
push
mov
cmp
mov
neg
sbb
jo
and
jle
mov
ret
mov
pop
sub
insb
adc
lahf
and
fwait
insl
jg
fadds
loope
and
cmp
push
sub
inc
insl
fsubs
fwait
adcl
jbe
dec
nop
jne
daa
push
cld
cmp
push
out
scas
xchg
or
cmpl
aaa
lahf
adc
mov
push
testb
pop
addl
pop
mov
jno
roll
xchg
adc
dec
or
test
or
adc
xor
xor
ret
adc
or
mov
mov
mov
mov
xchg
push
jne
inc
insl
sbb
lret
test
orb
inc
xor
dec
mov
out
cli
dec
pop
adc
aam
jmp
mov
imul
loope
cltd
jmp
dec
cmp
ja
lock
mov
mov
mov
rorb
leave
or
sbb
push
loope
cwtl
mov
add
call
in
std
data16
add
adc
imul
pop
dec
lods
insb
mov
outsb
and
in
add
adc
mov
mov
mov
fs
pushf
sbb
cs
out
add
fldl
add
out
shr
mov
push
popa
sub
mov
mov
mov
pop
sbb
mov
cltd
sarl
push
push
pusha
pop
gs
push
mov
je
stos
aad
aam
add
pop
es
lods
lret
mov
dec
mov
les
out
dec
pop
fisttpll
and
and
cs
pop
add
add
scas
pusha
inc
int
dec
or
mov
mov
mov
lods
test
bound
insb
iret
add
sub
negl
int3
mov
xchg
in
sbb
iret
mov
daa
iret
or
dec
pusha
pop
mov
aaa
cmc
push
mov
xor
or
jg
xchg
mov
andb
xchg
add
mov
out
add
add
pop
sub
lret
out
fsub
cs
pop
dec
pop
filds
add
add
shll
scas
or
mov
loop
mov
clc
mov
cltd
je
mov
push
inc
dec
ljmp
xchg
fstps
push
inc
push
xchg
fs
clc
mov
xlat
or
push
push
sub
mov
insl
dec
dec
sub
or
shr
int
cmpsb
lods
out
push
ficomps
adc
mov
push
adc
call
outsl
lds
imulb
mov
ret
jns
cmp
mov
add
add
negl
enter
ds
arpl
mov
repnz
mov
add
add
mov
sbb
repnz
in
cmpsl
sbb
cmp
mov
scas
repnz
aas
and
and
and
pop
mov
xchg
jmp
addr16
mov
test
int
arpl
mov
pop
scas
enter
hlt
add
push
push
cmp
fimuls
xor
int
xlat
aam
out
push
rclb
mov
jo
cltd
sbb
outsl
rclb
pop
out
nop
call
xchg
into
addr16
sub
dec
inc
xchg
loopne
or
push
scas
test
stc
scas
stos
mull
orl
pop
in
ret
in
inc
or
dec
incl
add
add
xchg
lods
mov
sti
scas
lret
inc
pop
popf
mov
cmovle
call
roll
dec
jnp
sbb
mov
std
lds
pushf
aad
test
data16
sbb
xor
and
and
mov
jmp
mov
jne
pop
sahf
stos
cmpsl
fdivl
push
push
lahf
or
cmc
inc
call
sub
push
es
cmpsb
xor
sub
jb
xchg
shll
dec
lcall
add
add
pop
mov
lock
dec
jnp
sarb
cld
or
pop
and
mov
aas
call
fidivrl
and
mov
dec
imul
js
popf
push
fadds
pusha
stos
orb
clc
mov
inc
mov
sbb
flds
xchg
pop
cmp
lds
out
fs
jmp
or
pop
repz
pop
mov
daa
ret
add
les
or
es
lods
rorl
pop
mov
pop
push
or
cmp
xlat
je
push
lcall
dec
pushl
mov
inc
xchg
cmp
mov
mov
mov
pushf
jnp
insb
sarl
in
jp
jns
aad
fistps
arpl
push
cmp
xlat
ficoml
add
add
add
pop
xchg
xor
xor
mov
nop
movsb
xor
call
inc
push
jp
push
xchg
icebp
dec
stos
iret
xchg
add
pop
int
push
out
cwtl
adc
push
es
inc
push
inc
addl
nop
call
cmp
sbb
and
in
and
and
and
mov
pop
js
jge
push
jge
cmp
and
cmp
fdivs
ss
mov
outsl
inc
xchg
pop
rcr
or
std
sbb
sarl
adc
leave
jo
test
dec
dec
test
or
arpl
jo
fadds
sarl
ss
push
cmp
sbbb
loope
jle
test
add
push
fwait
lahf
pmaxsw
int
nop
call
dec
fbstp
rorl
adc
mov
lahf
pop
iret
push
lea
js
movsl
mov
inc
xlat
adc
jmp
xor
nop
call
aas
and
sub
incb
fwait
aaa
cmp
mov
ret
and
out
add
shll
fbld
mov
mov
mov
jecxz
mov
mov
fnsave
cmp
jno
and
add
add
add
ljmp
inc
shrl
repz
lahf
inc
sahf
push
js
into
outsb
fwait
in
sub
pop
add
jp
lods
pop
fimuls
adc
lret
dec
push
xlat
xor
out
push
mov
jle
int
pop
inc
mov
add
data16
scas
ret
getsec
sbb
mov
shrb
mov
out
jecxz
lods
add
add
add
cli
or
pop
cmp
mov
jb
cmpsl
test
fistps
adc
and
and
cmc
add
mov
add
add
lcall
adc
ret
pop
pop
add
in
sbb
call
sbb
mov
jns
mov
mov
rcrl
xorl
lahf
clc
sar
fisubs
ret
mov
jns
stc
ret
adc
sub
rolb
push
data16
fldenv
xchg
jecxz
jb
add
jp
xor
stos
ror
xchg
lea
and
or
adcl
pop
xor
cld
jl
fldenv
xchg
jo
push
jmp
xchg
mov
pop
push
fsubrp
pushf
call
rcrl
int3
dec
scas
ret
inc
leave
pop
sub
fldcw
ror
jnp
mov
sarl
pop
mov
push
jp
xor
iret
lea
dec
push
sarl
out
mov
xchg
shlb
out
add
add
mov
jne
scas
inc
xor
cmp
xchg
push
pop
add
stos
xchg
mov
jb
out
sbb
sub
es
mov
sbb
inc
mov
or
mov
jmp
and
int3
mov
sbb
dec
dec
dec
inc
and
ds
xchg
and
pop
sbb
sbb
cmp
xor
shlb
jnp
mov
dec
dec
or
mov
and
or
cmpsb
mov
mov
add
add
mov
dec
xchg
mov
sub
mov
vmulss
cli
push
mov
mov
or
pop
push
shrl
jno
testb
nop
call
pop
sub
mov
cmp
inc
xchg
push
pop
aad
mov
adc
cwtl
mov
je
jae
scas
insb
adc
sbb
daa
dec
scas
sbb
or
xchg
cmc
mov
adcb
clc
xchg
add
add
add
insb
lret
les
pop
xchg
cld
cmp
xchg
adc
shrl
cmp
mov
jp
jo
mov
test
mov
adc
cmpl
dec
icebp
xchg
std
jns
popa
movsb
sti
cmc
add
add
or
add
adc
lea
inc
rol
cld
adc
sbb
xor
cmpsl
add
add
dec
jecxz
xor
inc
in
outsb
orb
es
fdiv
mov
cmpsl
call
imul
aam
sub
adc
jo
mov
cmp
xlat
or
xor
push
mov
cmp
in
adc
outsl
inc
cmp
das
cmc
sahf
arpl
and
out
mov
movsl
mov
fsubrl
jecxz
outsb
js
push
out
das
push
mov
aaa
nop
call
out
cs
icebp
orb
xor
clc
cmpsb
cmp
je
gs
bound
fwait
outsb
inc
jge
dec
xchg
aas
rcll
cmpsl
cmp
or
test
dec
dec
dec
mov
sbb
push
cmp
call
pop
test
push
dec
push
pop
push
pop
ljmp
pop
pop
bnd
gs
sub
mov
inc
sbb
cli
aad
das
fisttpll
xchg
ljmp
shr
imul
sbb
inc
in
movb
notl
out
int3
and
adc
pop
push
in
push
iret
test
ret
sub
jae
mov
push
cltd
into
lea
mov
push
pusha
fs
mov
fucomp
pop
mov
fsubrs
dec
mov
dec
ljmp
lahf
or
icebp
lret
cmpsb
cmp
push
es
adc
stc
mov
das
iret
jg
fimull
ds
out
add
in
mov
enter
nop
xchg
dec
dec
dec
clc
jge
imul
int3
imul
les
aad
rcll
stc
cmp
dec
mov
mov
mov
scas
jb
sahf
mov
mov
test
xlat
adc
ret
rcrb
pop
cmp
cmp
insl
fstpt
jae
xor
mov
sbb
adc
rol
aad
call
outsb
ret
fsub
les
scas
push
jp
inc
or
hlt
cmp
fildll
mov
ss
shrl
test
lret
ret
testb
cmp
scas
test
ds
add
add
pop
mov
sub
cmp
test
mov
and
cmp
pop
pushf
add
je
adc
cwtl
out
stc
adc
mov
push
mov
sub
faddl
sub
push
mov
mov
notl
cmpsb
dec
mov
lret
out
mov
or
inc
xchg
jp
cmp
lcall
push
jg
int
sbb
cmp
cmpl
push
shll
loop
in
push
jge
or
mov
mov
pop
lret
movsl
inc
loope
sub
adc
fsts
inc
cld
aam
xor
mov
or
loopne
ucomiss
cltd
lods
scas
lret
xchg
mulb
scas
testb
movsb
mov
mov
jo
and
fisttps
and
and
pop
mov
in
inc
sbb
pop
sub
call
xor
or
adc
sub
jp
pop
jbe
inc
add
mov
mov
xchg
push
leave
dec
cmp
int3
and
pop
cmpsl
adc
and
mov
scas
sub
sub
imul
call
sti
sub
lods
push
jmp
push
cmp
iret
stos
add
std
jbe
add
and
cs
sub
fildll
out
scas
mov
xchg
mov
xchg
adc
in
int3
and
aad
jle
inc
int3
gs
out
push
mov
aam
jg
mov
mov
jle
outsl
enter
repz
test
notl
pushf
add
push
cltd
cli
add
add
stos
mov
movsl
mov
popa
imul
mov
sub
cmp
add
add
xchg
inc
mov
shlb
pop
dec
xchg
in
pop
mov
mov
and
pop
iret
jl
xor
fsubrs
movsb
js
and
mov
stos
add
lock
faddl
imul
fldl
call
call
test
add
repz
add
add
jl
fdivrs
stc
add
popf
mov
and
dec
lods
std
in
mov
dec
dec
mov
jp
jne
gs
vunpcklps
call
jno
neg
mov
sarb
cwtl
xchg
add
add
push
xor
popa
loopne
sub
pop
dec
cli
out
pop
jp
and
or
jnp
add
out
cmpsl
mov
mov
lds
jns
test
and
pop
xchg
bound
adc
inc
loop
scas
cmp
rcr
pop
adc
cli
call
loope
andb
add
add
or
mov
mov
sbb
and
pop
out
pop
idivl
int3
call
xchg
jle
lods
dec
push
ja
mov
fmuls
icebp
enter
push
push
or
push
cwtl
mov
fsubrl
mov
bnd
in
pop
dec
orb
pop
pop
lea
fdivrs
sbb
arpl
rolb
test
cmp
adc
mov
pop
insb
jg
xchg
add
add
aaa
ja
mov
cmp
call
xchg
lds
jno
inc
stos
mov
mov
adc
adc
sbb
fprem
mov
test
sbb
pop
push
bound
cli
out
int3
cmpsl
xchg
mov
add
into
mov
das
xorl
add
sub
loop
sbb
stos
ss
subl
test
into
fisttpl
shll
cwtl
inc
cmp
or
jbe
sar
andl
inc
cs
pop
or
add
fsubs
add
in
inc
nop
scas
in
mov
add
xor
gs
push
fprem
mov
hlt
es
lahf
int
jno
and
pop
ret
sub
ja
mov
adc
shr
pop
jne
xchg
push
sbb
mov
daa
mov
add
push
push
push
adc
sarl
loop
or
scas
sub
add
repz
popl
aaa
lods
or
xchg
lcall
nop
call
cmp
in
and
stos
leave
add
aad
mov
out
ret
xchg
sub
sti
nop
pop
popf
sub
jecxz
fildll
arpl
repz
fisttps
push
ljmp
iret
xor
aas
mov
mov
or
xor
dec
scas
mul
xchg
cwtl
push
ret
movsb
xchg
add
add
push
and
pop
or
jl
inc
and
jge
negb
fs
add
jnp
ret
orl
into
push
xor
int3
xlat
xchg
fcoml
cltd
adc
push
mov
test
rcl
repnz
js
test
cltd
ljmp
mov
or
testl
sub
inc
mov
add
call
jmp
hlt
aam
lock
jb
mov
and
insl
sbb
xchg
outsl
jne
addr16
adc
mov
dec
inc
lret
mov
mov
dec
push
adcl
fs
daa
cld
pop
addr16
mov
mov
mov
adc
adc
mov
popf
lahf
fs
jp
add
add
add
push
ja
pusha
or
divb
xchg
sbb
fdivrs
iret
ret
lcall
sbb
call
fs
mov
add
in
and
sbb
in
leave
les
and
xchg
ljmp
lds
cmp
xchg
xor
and
and
sbb
inc
imul
add
xor
aad
pop
mov
jmp
and
xchg
rclb
js
or
adc
mov
inc
mov
lods
nop
scas
js
push
xchg
adc
call
sub
inc
loope
out
cmpsb
arpl
adc
mov
mov
adc
jmp
ss
outsl
jne
lahf
fisttpll
stos
bound
in
dec
sub
sub
pop
inc
and
and
sbbl
repnz
add
add
popa
fimull
es
inc
lcall
push
or
and
jbe
loopne
cmp
int3
std
outsl
mov
cmc
testl
push
test
jb
dec
xor
std
pop
dec
cmp
cmp
aad
push
lds
mov
or
aaa
inc
cld
pushf
int
fs
sahf
decl
sbb
repnz
inc
shl
inc
mov
cld
repz
bound
dec
sahf
dec
push
xor
dec
lds
sbb
jbe
cwtl
sbb
cmp
nop
call
lds
mov
add
add
cmp
outsb
data16
mov
gs
add
scas
out
push
scas
dec
enter
popa
inc
inc
pop
loope
clc
cmpsl
add
add
sbb
mov
popf
pop
scas
insl
sahf
mov
outsb
or
scas
lods
push
dec
cld
scas
in
sbb
add
mov
cltd
dec
fbstp
inc
addr16
mov
jp
mov
aaa
inc
mov
add
add
insl
mov
sbb
test
fwait
test
pushf
xor
hlt
adc
mov
imul
sahf
xor
es
ja
aaa
xchg
xlat
in
fildl
and
roll
mov
add
lods
cmpsb
or
xchg
pop
ss
rclb
testb
test
in
in
push
mov
push
cmp
enter
pop
pop
loop
lret
dec
mov
loope
push
cmp
movsb
movsl
jns,pn
outsb
leave
mov
add
add
add
fldl
inc
or
dec
sbb
jbe
or
mov
filds
ss
mov
cmp
mov
push
pop
mov
das
or
xchg
sub
orl
inc
cmp
jecxz
and
loop
push
sub
cli
iret
mov
movsb
push
scas
mov
add
add
inc
pop
stos
pop
push
xchg
or
mov
inc
cmp
stos
hlt
in
bound
xor
and
mov
pop
jno
mov
fs
add
pop
pop
and
test
xor
dec
dec
jns
stc
aas
mov
in
or
dec
jae
clc
mov
shrl
sbb
xchg
jns
and
pop
sub
test
adc
fucom
xor
dec
cmp
sti
pop
adc
lcall
xchg
dec
add
mov
cld
add
cmpsb
test
xlat
dec
sub
adc
cmpsb
cli
mov
into
ja
cmp
sbb
lods
stc
ljmp
push
mov
and
xor
jae
or
add
stos
xchg
in
ret
pop
jecxz
sub
mov
add
data16
subb
dec
inc
push
inc
je
add
add
add
loopne
xlat
cmp
out
mov
popf
cld
and
mov
imul
ljmp
push
mov
insb
mov
in
xor
dec
add
add
jbe
inc
cld
push
pop
mov
push
rorl
push
xor
adc
dec
xor
andl
jne
call
cmp
rcrb
cli
outsl
sbb
fldcw
scas
sbb
inc
mov
imul
cltd
outsb
push
std
mov
push
int
dec
sbb
sbb
pop
ss
and
mov
pop
inc
mov
xor
xchg
lahf
xchg
sarl
js
movsl
stos
add
add
push
and
dec
arpl
flds
test
dec
mov
jg
mov
mov
loope
sub
in
pop
loop
lods
pop
out
movsl
and
and
outsl
insl
push
in
stos
cmp
and
repnz
jns
and
cmp
in
adc
fldt
inc
jle
movsb
and
iret
fcmovu
movsl
add
push
or
cmpsl
jnp
inc
pushf
dec
mov
ljmp
test
xchg
push
adc
int3
and
and
inc
xchg
jp
jp
add
rorl
mov
and
gs
jns
dec
into
sub
std
mov
xchg
gs
xchg
pop
jb
in
jmp
xor
push
rcll
xchg
divb
inc
sub
adc
sbb
bound
add
movsl
pop
insb
xor
inc
dec
dec
push
arpl
jmp
jno
nop
ja
bound
leave
mull
and
int
sub
test
or
sbb
pop
jecxz
or
jnp
mov
push
pop
sub
cmpsl
lret
mov
scas
cmp
push
add
add
sbb
dec
jecxz
cli
pusha
adc
pop
mov
cmp
clc
adc
mov
mov
add
lret
lea
sub
cli
mov
or
cltd
mov
sbb
pop
push
sub
jo
data16
ret
jne
or
jp
or
outsb
cld
mov
mov
lods
ss
fcmovne
push
cmp
sbb
orl
adc
fstpt
sub
push
int3
mov
dec
sbbb
push
ja
leave
and
roll
add
add
movsb
push
into
mov
pop
or
ss
cmpsb
adc
fdivs
aad
jl
and
out
inc
push
add
push
fsubrs
inc
xor
cmc
fisttpll
mov
push
nop
call
addl
inc
adc
push
or
push
jae
add
sbb
aaa
mov
jecxz
inc
cmp
cmp
lahf
push
xor
adc
add
add
push
fisttpl
sub
jge
cmp
test
xchg
inc
mov
out
or
out
add
add
add
add
pusha
add
test
xor
inc
cmc
sbb
xchg
sbb
xchg
mov
pop
sbb
sbb
mov
stos
stos
icebp
mov
mov
mov
das
rclb
push
fstpl
sbb
cmp
sub
lods
arpl
dec
dec
decl
ffreep
loopne
mov
dec
xchg
and
roll
sbb
sub
ret
or
cmpsb
and
shlb
pusha
or
inc
push
aas
jmp
add
add
into
mov
dec
bsr
jno
addl
stos
mov
dec
icebp
int3
and
out
pop
mov
jns
sti
pop
cmp
aam
xor
stos
mov
jne
mov
leave
or
sub
pop
push
scas
push
cmp
iret
cmp
xor
or
cmp
lcall
minps
inc
xchg
fldz
int
add
mov
int
jmp
sub
dec
fidivrl
push
hlt
sub
div
mov
sbb
lods
hlt
ljmp
jbe
inc
xchg
mov
mov
dec
dec
dec
mov
cmp
outsb
lods
imul
adc
push
xchg
lret
jle
pop
gs
mov
outsb
aad
pop
adc
push
call
add
test
les
and
xor
in
mov
shrl
outsb
mov
orl
scas
sbb
mov
mov
int3
and
and
xchg
inc
outsb
sti
fs
mov
sbb
loopne
or
jb
aam
dec
or
mov
and
out
divl
add
fsubs
mov
in
sub
add
rcll
push
mov
in
mov
jecxz
xor
add
stos
std
imul
xchg
cmpsl
fwait
mov
add
add
or
pop
fildll
inc
mov
and
sahf
inc
fbstp
sub
lods
cmp
xor
inc
cmpsb
add
add
jo
jle
movsl
flds
mov
fidivrs
and
fcomps
mull
test
cmpsl
mov
leave
xchg
push
loope
xchg
fwait
lods
cmpl
xchg
repnz
add
adc
andl
movsl
or
adc
aas
mov
add
add
xchg
sub
mov
loop
jno
aam
lret
xor
out
ret
rol
pop
xor
mov
dec
adc
inc
scas
xor
notb
pop
inc
inc
xchg
sbb
add
stos
jmp
mov
mov
inc
daa
into
fwait
xchg
int
pop
pop
inc
hlt
scas
cltd
sarl
pop
push
adc
enter
in
scas
fiaddl
pop
dec
mov
xchg
adc
into
dec
scas
adcl
ja
out
fstpl
js
daa
cmp
iret
cmp
les
sbb
xchg
pop
fmull
movsb
loop
dec
sbb
pusha
pusha
mov
inc
xor
add
sarb
mov
test
popf
shlb
push
jp
outsb
sti
fsubl
scas
or
jecxz
lods
pop
and
test
outsb
pop
sti
outsb
jno
in
movsl
cmpsl
mov
inc
xchg
cmc
jge
jns
adc
jle
xor
add
nop
mov
jecxz
int
mov
pop
dec
test
or
inc
dec
test
fidivs
stc
call
cmp
cli
lock
xorb
inc
mov
dec
mov
aam
in
incb
stc
enter
das
out
cld
dec
dec
decl
jb
jnp
pop
cs
pop
cli
cmp
pop
pusha
cld
test
mov
sub
imul
adc
movsl
lret
dec
incl
pop
and
adc
out
fildl
add
add
popf
jp
call
inc
inc
adc
test
mov
push
cs
or
push
sbb
and
and
sbb
sub
xchg
ret
add
into
adc
aaa
pop
test
clc
enter
sub
inc
movsb
pop
dec
sahf
xchg
inc
pop
sub
ss
lret
lods
popaw
pop
cmp
and
clc
sub
outsl
jo
loopne
lods
leave
jecxz
mov
sbb
pop
add
add
jb
mov
repz
lahf
and
sti
pop
xor
dec
scas
sbb
rcll
ret
hlt
xchg
jmp
fldt
mov
add
and
mov
jae
mov
cs
xchg
mov
pop
in
out
adc
add
push
addb
enter
arpl
pop
ja
test
imul
mov
leave
mov
std
jmp
ss
stc
movsb
xor
cli
add
cmpsb
push
mov
fld1
dec
cltd
mov
mov
out
movsb
mov
das
jbe
test
adc
mov
clc
push
inc
jmp
es
xlat
pop
or
xchg
pop
mov
out
sbb
mov
sub
cmc
scas
push
js
pop
mov
sarl
or
pop
rorl
insl
cs
jecxz
lods
fninit
and
sbb
inc
std
cs
nop
call
jle
movsb
jbe
fwait
mov
mov
pop
fildll
push
cltd
cld
test
test
test
es
adc
pop
push
in
mov
pop
push
sbb
xor
outsl
mov
jo
stc
sbb
fdivrs
imul
pushf
mov
les
mov
jg
jb
pop
mov
mov
addl
lahf
stc
add
add
sub
xor
lcall
test
add
cmp
cmp
stos
dec
les
into
or
rclb
mov
and
push
scas
cmp
add
out
repnz
rcrb
aad
ret
fcom
dec
adc
lret
cmp
popf
bound
add
add
fdivrp
sub
inc
dec
cli
fisubs
imul
leave
xor
xchg
les
and
push
xorb
cli
imul
cmp
xor
sbb
scas
fyl2x
or
sub
add
add
repz
mov
push
jb
mov
call
mov
int
mov
pop
sbb
or
ja
adc
xchg
pop
mov
mov
adc
adc
insl
mov
adc
jae
xchg
dec
nop
call
repz
mov
aas
push
inc
jb
fisubrs
mov
movsb
popf
ficoms
pop
xor
mov
jmp
jmp
cmpb
mov
dec
mov
iret
pop
fisubs
and
fs
sbb
test
test
mov
sbb
in
mov
xchg
addb
add
pop
inc
or
int3
xchg
xchg
add
add
add
pop
jns
cmp
loop
xorl
jo
test
cld
sbb
insb
pop
clc
popa
push
sbbb
ret
pop
and
push
dec
pop
mov
js
and
daa
addl
cmp
lds
or
or
jl
sbb
sbb
xor
add
lret
ds
pop
outsb
pop
mov
xchg
scas
enter
xchg
out
jae
imul
cmpl
es
add
pop
mov
push
in
mov
mov
jb
and
mov
jmp
enter
mov
push
inc
fcmovnb
out
loope
sub
fnsave
jae
out
mov
loope
call
mov
mov
add
stc
mov
pop
test
mov
imul
and
in
dec
inc
add
pop
cmp
adc
lcall
int3
scas
cwtl
xchg
addr16
adc
je
xchg
notb
dec
ds
mov
out
in
cltd
jne
cmp
clc
imul
mov
mov
insb
loop
pop
cmp
jle
into
mov
mov
aas
pop
mov
mov
les
dec
jno
lods
ret
aas
sti
stos
and
fisubrl
leave
ret
add
push
push
lea
inc
cmp
jg
lds
shl
push
dec
sub
pcmpgtb
fwait
mov
popa
sub
mov
xor
cmpsb
adc
mov
nop
call
dec
lods
xor
std
add
jno
sahf
stos
inc
int3
pop
out
shll
inc
jge
ja
sar
xchg
mov
movsb
aam
rcr
mov
int
loopne
out
xchg
inc
xor
jnp
addl
add
add
fiaddl
es
sbb
jle
cmp
aam
ret
jb
clc
xor
imul
ja
jmp
lock
push
cmpsb
mov
mov
mov
mov
mov
loopne
mov
jnp
push
lock
jmp
add
mov
pop
std
inc
push
mov
call
sbb
arpl
filds
dec
sbb
imul
aas
xchg
shr
imul
and
je
aam
adc
jge
fmull
xchg
push
pop
cli
xor
fcoms
push
pop
in
pop
mov
mov
aaa
rclb
push
lods
nop
call
lret
mov
pusha
lock
push
inc
adc
push
lret
mov
pop
loope
in
xchg
and
mov
mov
jns
xor
fstl
sbb
push
and
fcmovnb
push
jno
adc
cltd
xor
data16
dec
nop
and
xchg
xchg
test
loopne
pop
xorb
test
mov
out
jmp
dec
dec
push
push
jne
xchg
push
push
lods
std
push
push
jmp
jne
pushf
in
insb
fistl
cmp
cld
xchg
frstor
jno
aam
incl
push
push
sub
adc
ljmp
and
xor
sub
dec
icebp
sub
xchg
xchg
mov
test
xchg
sbb
fucomip
sarb
stc
jmp
stc
iret
push
mov
nop
call
mov
inc
sti
sti
xchg
test
pushl
mov
fstpt
daa
jle
loope
clc
fldcw
daa
or
lods
nop
mov
out
and
call
call
sub
mov
mov
testl
mov
aad
faddp
cmp
mull
stos
ret
mov
mov
stos
imull
inc
sub
pop
or
push
pop
jg
leave
out
and
orl
ret
push
fadds
add
add
pop
lret
inc
repz
dec
loope
cmpsb
daa
inc
mov
sbb
lods
sub
and
jp
fistl
movl
addl
jg
in
call
push
push
push
cmp
loop
rcrb
lods
jl
loopne
dec
cmpsl
mov
push
xor
pop
clc
orb
xor
nop
call
loope
push
sti
push
std
or
lods
scas
inc
movsl
js
sub
test
stos
pop
mov
leave
stos
cmc
loopne
mov
adc
jle
std
in
mov
pop
lret
inc
lret
lcall
fld
mov
pop
shrb
pop
insb
jbe
popa
ret
xor
mov
inc
addr16
jne
aaa
mov
and
and
mov
test
jge
rcrb
daa
pop
inc
data16
sub
int3
and
and
and
add
dec
pop
out
pop
iret
push
pop
ret
outsl
mull
stos
sub
add
sbb
push
adcl
sbb
pop
cmpl
lea
dec
dec
shr
test
popa
test
invd
adc
push
sar
sahf
dec
sahf
ficoms
daa
push
mov
dec
mov
mov
filds
jp
inc
test
inc
inc
pop
xor
daa
sub
xchg
arpl
in
jo
mov
add
add
mov
inc
push
inc
jnp
shrl
mov
push
cmpsb
orl
insl
xchg
nop
cs
push
mov
mov
fdivrs
mov
in
rcrl
inc
push
or
mov
call
add
lock
push
mov
dec
ss
popf
mov
fcoms
mov
add
dec
pop
aad
ja
cmpsb
iret
cmp
mov
xor
push
inc
and
add
loop
lcall
incb
jecxz
aad
cmpsl
pop
pusha
in
sahf
into
inc
push
in
test
pusha
fisubrs
cmp
jno
loope
int3
dec
adc
jge
loop
gs
and
subl
pop
insl
push
fadds
dec
add
push
je
mov
adc
sbb
int3
dec
call
fsubl
nop
mov
or
fs
push
sarl
adc
movaps
mov
xchg
daa
test
add
lock
mov
in
add
add
rcll
rcrb
xor
mov
shl
fs
xchg
jnp
rcr
bound
dec
xlat
loope
push
test
popa
insb
test
ror
mov
add
data16
movsb
dec
sarb
loopne
repz
imul
int3
dec
mov
and
ds
test
cmp
cmp
mov
mov
adc
pop
dec
pop
or
pusha
jns
mov
in
sub
dec
les
es
push
mov
mov
cmpsl
xor
push
idivl
xor
es
mov
pop
cli
aam
loopne
test
adc
int3
add
add
add
mov
popf
pop
push
jl
push
adc
adc
pushf
dec
add
out
cmp
lods
xchg
mov
cmp
lret
fcomps
imul
mov
js
mov
jno
jmp
stc
mov
cmp
cmp
nopl
call
fisubrs
jl
xor
mov
in
cmp
bound
cmp
pop
shrb
add
add
push
addb
push
inc
hlt
push
int3
and
xor
arpl
in
add
dec
iret
cmp
push
clc
mov
out
fistpll
jns
sub
push
jnp
and
stc
add
add
push
into
clc
mov
cli
or
cli
ret
cmpl
lods
mov
fidivrl
or
inc
sarl
nop
jmp
sbb
addl
inc
cli
mov
xlat
xchg
pop
push
repnz
and
mov
sub
stos
mov
xor
ret
pop
pop
fsubrs
xlat
mov
jae
mov
jo
mov
mov
adc
movl
cmp
cli
or
pusha
xchg
or
ret
mov
incl
jbe
jns
aas
cmpsb
test
jne
mov
aam
xchg
push
int3
mov
mov
cwtl
lods
add
add
add
addb
dec
fsubrp
mov
rol
push
cmc
rolb
add
pop
mov
repz
sti
pop
dec
adc
cmp
scas
jg
lock
hlt
add
add
int3
dec
and
bound
out
out
xor
dec
outsb
pop
test
mov
call
ror
clc
xchg
or
mov
stos
aas
loope
scas
cltd
into
aas
sbb
sub
loope
mov
call
push
or
ficomps
inc
mov
add
pop
or
dec
cmp
loop
out
aaa
nop
fcoms
mov
jae
add
add
fldl
mov
nop
mov
mov
pop
sbb
or
aad
loop
add
xchg
add
pop
push
icebp
ret
xchg
shrb
push
pop
xor
dec
jbe
inc
nop
lcall
sarl
dec
mov
and
jp
add
inc
cmp
mov
adc
xor
cmpsl
sbb
cmp
inc
dec
lret
clc
scas
inc
gs
xchg
pusha
add
add
clc
sub
movsb
int
xor
int3
insb
xchg
xchg
pushf
les
adc
jbe
jno
sub
movsl
mov
sbb
inc
push
notb
xchg
jg
or
bound
out
ljmp
jle
mov
push
imul
jae
std
in
nop
call
pop
repnz
jb
mov
popa
adc
mov
jmp
cmp
mov
adcl
pop
push
cld
stc
dec
mov
jp
and
ljmp
loope
dec
and
les
call
lods
jns
in
sbb
push
xor
mov
pop
push
mov
xor
insb
je
call
in
sub
jbe
push
or
mov
xchg
pusha
pop
mov
add
je
inc
aad
add
xor
inc
push
jno
add
lods
je
mov
cmp
std
push
jnp
sbb
sbb
sub
sbb
leave
adc
jo
mov
pop
mov
dec
push
in
fildll
mov
xlat
push
add
add
addb
push
mov
cmc
mov
add
scas
in
sti
in
or
push
pop
add
add
add
and
push
je
sbb
jecxz
cmc
dec
call
into
mov
add
dec
lahf
aaa
daa
arpl
and
test
mov
inc
or
mov
cltd
xor
mov
sarb
mov
iret
push
mov
test
lahf
fs
mov
shlb
mov
sbb
decb
add
and
subl
jne
cmp
addl
mov
jl
subb
shrl
aam
dec
sub
mov
data16
jmp
popf
mov
push
add
int
cmp
sub
add
movsl
ret
mov
test
cmp
xor
neg
xchg
cmp
lret
ss
and
pop
rolb
nop
call
pop
lds
inc
push
cmpsl
loopne
loope
xor
mov
into
and
dec
dec
ljmp
sahf
mov
das
add
inc
sarb
and
cwtl
imul
adc
sub
sbbl
popa
mov
add
add
inc
mov
mov
cmpsb
mov
adc
jle
xor
cmpsb
mov
lock
scas
loopne
shll
mov
ds
push
ret
pusha
arpl
add
add
add
pop
es
aas
imull
lock
les
xor
cmpsb
mov
lock
call
pop
or
repnz
outsl
bound
mov
in
dec
rclb
mov
mov
ja
jl
call
cli
sti
popa
add
push
filds
add
pop
dec
mov
mov
mov
and
mov
test
xchg
inc
mov
int3
hlt
sbb
repz
insl
test
mov
mov
roll
xor
or
sub
gs
xchg
scas
inc
out
xor
mov
inc
sub
pop
mov
add
and
inc
sbb
mov
lret
jo
adc
out
inc
stos
out
stc
adc
jns
lods
test
mov
je
sub
repnz
push
adc
jno
mov
mov
mov
or
orl
ss
lds
inc
mov
push
repz
ds
cmp
shll
jp
jbe
mov
mov
out
jmp
sahf
and
add
jl
fidivrl
aas
pop
rclb
or
jns
and
xchg
cmp
add
or
and
cmp
in
push
sub
je
push
test
or
and
jbe
inc
push
cmp
or
test
popa
jle
fcmovnbe
mov
ret
dec
inc
mov
and
inc
xchg
fadds
stc
inc
sub
or
aam
jp
in
ljmp
xor
mov
test
loopne
add
add
cli
addr16
push
out
enter
out
mulb
in
les
sbb
call
pop
test
daa
arpl
cwtl
ret
cli
dec
adc
or
xchg
cmpsb
xor
or
lret
xlat
mov
nop
call
gs
addb
idiv
xchg
xchg
adcb
adc
jge
outsl
aas
sub
lret
push
call
addl
xor
add
add
xor
shll
sub
jno
xchg
xor
cli
xor
push
aam
daa
and
out
dec
lret
mov
mov
add
adc
roll
or
fbld
scas
in
push
dec
enter
lcall
int
xor
cmp
xchg
mov
pop
push
and
and
ss
insl
xor
out
outsl
mov
lcall
out
cmp
das
jo
push
test
cmp
cmpsb
inc
pop
push
sti
pop
push
test
inc
jne
or
xor
es
push
sbb
pop
jo
xor
int3
and
sbb
add
sub
jmp
aam
aad
lock
mov
cld
mov
das
lock
test
pop
je
aam
mov
and
adc
sub
adc
inc
push
add
roll
dec
pusha
mov
adc
mov
mov
mov
mov
out
sti
jg
and
add
add
outsb
sub
pop
shrl
aam
and
and
mov
std
xchg
or
and
test
sti
sbb
pusha
mov
std
lcall
mov
sbb
pushf
pusha
push
loop
push
ljmp
sub
cwtl
adc
iret
mov
call
cmp
or
repz
add
add
add
dec
xor
ja
in
jge
mov
sbb
pop
in
in
dec
push
mov
ds
stc
xor
adc
sub
shrl
xchg
lock
lods
pop
mov
in
mov
sub
dec
dec
in
fadds
sub
push
lods
xchg
push
dec
push
inc
push
repnz
adc
xchg
push
cmc
out
jg
cmp
and
lret
lods
push
test
mov
pop
adc
hlt
and
cmpb
jmp
scas
push
subl
call
cmp
addl
add
push
sti
in
lods
sbbb
jmp
mov
test
cmpsl
movsl
mov
ret
call
pop
mov
add
mov
xchg
xor
cli
inc
dec
loop
xor
jmp
push
hlt
xchg
xlat
push
js
into
dec
loope
fcmovbe
push
cld
outsb
pop
push
mov
push
jmp
aaa
mov
pop
sbb
icebp
jne
into
insl
jno
xchg
cmpl
pop
push
push
xor
or
sbb
lock
nop
call
dec
mov
and
dec
call
add
add
push
xchg
ss
mov
and
add
outsl
inc
sbb
je
adc
mov
mov
lea
sar
stc
shlb
leave
cmp
mov
sub
std
icebp
dec
mov
add
es
decb
push
ret
jp
xor
insb
leave
add
adc
icebp
fildll
jo
loop
jnp
or
add
add
pop
xor
sbb
sbb
cmp
int3
decb
aam
mov
rcl
das
nop
fsubrl
fisubrs
je
pop
fnsave
jge
push
dec
sbb
stos
jmp
cltd
cld
inc
mov
mov
xchg
pmaxub
inc
jnp
movsl
jno
jnp
xor
and
jae
dec
jnp
std
push
jl
lock
mov
xor
fnstcw
repz
push
sbbb
mov
mov
add
mov
jg
shrl
dec
mov
mov
xlat
stos
movsl
xchg
dec
mov
push
movsb
push
and
and
xchg
cmpsl
jnp
lods
ja
in
scas
cs
add
popf
jb
mov
dec
cld
sbbl
cmp
push
xchg
movsl
jo
mov
cltd
movl
cmpsb
or
sub
clc
xchg
subl
jmp
addr16
lcall
jo,pt
rcll
loop
adc
lods
iret
pop
ljmp
mov
jno
lahf
lods
add
cmp
es
jle
push
cmpsl
or
inc
mov
cmc
jle
int
leave
jae
xor
test
sub
hlt
ja
je
pop
fstl
push
mov
mov
testb
repz
ja
cwtl
popa
dec
loop
adc
fs
cwtl
dec
dec
pushl
ret
adcl
or
mov
inc
int3
ficomps
loop
nop
sub
test
and
adc
inc
ja
xor
xchg
fwait
imul
cwtl
add
add
pop
jb
sbb
je
adc
adc
jecxz
and
cmp
fcomps
add
shl
ret
dec
mov
lock
int3
and
lahf
dec
or
jmp
xor
cltd
pop
pop
xchg
xchg
orb
dec
je
cld
dec
add
cs
imul
hlt
inc
push
test
jb
pop
das
rorl
cmp
sub
fistl
lret
sbbl
xchg
loopne
js
pop
in
fimull
iret
roll
and
faddl
jmp
and
or
sub
int3
dec
jmp
and
xchg
out
dec
mov
outsb
add
xor
aam
pop
sbb
add
dec
cmp
fildll
add
int
pop
add
add
add
push
xchg
das
subb
pop
enter
lret
ds
xor
fwait
popa
add
lock
icebp
out
loop
push
mov
cmp
jns
xor
push
cwtl
fcomps
aad
jae
cld
jne
add
jo
outsb
ss
repnz
shlb
aad
add
xchg
pop
pop
xchg
lret
push
les
jmp
rcl
lahf
push
jb
inc
push
adc
jmp
data16
iret
shll
adc
out
ret
lret
roll
mov
xor
roll
cmc
add
xor
xchg
inc
mov
fadd
or
adc
repz
gs
in
sub
in
inc
mov
push
mov
fsts
add
icebp
sbb
inc
sub
xchg
je
hlt
pop
outsb
lock
or
inc
or
cltd
call
shl
push
jmp
cltd
insl
add
mov
sbb
adc
push
pop
cltd
aas
ficompl
shl
adc
movsl
sub
mov
jmp
aaa
ror
jp
out
xor
bound
lea
xchg
add
mov
pop
invd
pop
push
jns
lea
adc
inc
and
int3
dec
call
dec
inc
pop
xor
jle
sahf
mov
fcomi
xchg
andb
push
pop
fcoms
xchg
icebp
rorb
flds
dec
repz
pop
sub
xor
addr16
shlb
js
loop
mov
mov
mov
pop
sbb
dec
push
insb
jmp
dec
lods
cmp
sbb
mov
ret
divb
loope
cmp
add
add
jecxz
cmp
sbb
es
lods
or
fwait
lcall
add
inc
or
sub
cmp
sar
out
pop
dec
dec
add
adc
cmp
sbb
pop
rolb
xchg
mov
lret
test
mov
in
push
cmp
push
mov
mov
inc
push
mov
insb
icebp
je
jno
adc
lea
test
test
js
jno
mov
mov
popw
lret
fwait
add
lock
jge
push
lods
out
mov
ss
push
daa
mov
jl
inc
imulb
and
and
mov
dec
sbb
mov
inc
push
push
mov
dec
aas
mov
add
lahf
stc
pop
cmp
dec
test
daa
cmpsb
cmp
inc
ret
pop
fcmovu
daa
in
sub
outsb
dec
push
test
mov
int
mov
or
hlt
fstp
inc
stos
js
mov
mov
xchg
pcmpeqb
aas
and
addr16
or
nop
call
sbb
xor
cmp
cmp
repz
sub
pusha
insl
dec
dec
push
jmp
dec
jnp
test
fucom
and
nop
jecxz
outsl
movsl
add
sbbb
xchg
xor
mov
popa
inc
fcmovbe
pop
pop
and
daa
lahf
inc
pop
add
xor
adc
inc
adc
push
xchg
lret
cltd
jb
dec
aas
enter
cld
or
int3
dec
decl
push
and
in
pushf
mov
fwait
xchg
add
xor
mov
dec
int
pop
dec
xchg
mov
pop
lret
cltd
dec
mov
sub
add
jne
or
mov
xlat
inc
shrb
add
call
inc
rcrl
dec
in
ja
test
add
add
pop
dec
daa
xor
jmp
popa
in
xor
test
push
inc
add
fsts
imul
stc
dec
pop
push
dec
frstor
cmp
sub
popf
int
loopne
cmp
xchg
mov
call
sbb
fcomps
mov
mov
jmp
int
xchg
xchg
xchg
psubusw
hlt
aas
xchg
mov
lds
add
iret
mov
sub
jnp
stc
outsl
xchg
hlt
in
mov
add
add
es
negb
xlat
sarb
jb
inc
enter
ret
ljmp
pop
cmp
subb
and
fwait
enter
mov
mov
ror
popl
add
pop
mov
lcall
xchg
push
out
jge
stos
and
and
or
mov
aas
aam
sub
push
jmp
jns
pop
mov
and
and
mov
out
dec
xchg
shll
fistps
je
jnp
clc
in
cld
mov
jge
nop
mov
mov
cmc
jb
lret
in
cltd
mov
cmc
stos
ffreep
xchg
cmp
xchg
in
push
pop
cmc
loope
adc
xor
cmp
mov
sub
negl
xchg
loope
bound
add
add
andb
loop
inc
mov
dec
push
sub
je
push
inc
out
mov
mov
mov
sub
fildl
sbb
shld
cs
movsl
add
pop
out
stos
in
test
sbb
sub
inc
adc
arpl
sub
pop
sti
adc
inc
mov
call
test
xor
and
push
or
add
xor
xor
cmpsb
cmpsb
sub
dec
arpl
adc
xlat
gs
call
mov
pop
sbb
divl
inc
out
test
and
add
mov
push
je
jecxz
inc
adc
js
push
mov
mov
std
fidivs
xor
mov
pop
in
call
popf
cld
jnp
scas
sub
or
addr16
cmpsl
loope
cwtl
mov
mov
loopne
dec
lods
sbb
add
gs
jo
stc
xor
dec
and
jno
das
pop
and
add
cmp
adc
push
subb
jmp
mov
xlat
ret
in
and
add
mov
mov
les
or
dec
movsb
adc
sub
ja
sahf
stos
lock
ds
mov
imul
add
mov
iret
paddq
lock
dec
pop
dec
dec
loope
cmc
mov
mov
mov
inc
cli
adc
leave
dec
icebp
mov
sbb
jecxz
add
sbb
cltd
addb
jmp
cmpsl
cs
cmp
push
jb
push
pop
push
stos
fidivs
nop
call
sbb
mov
and
push
cli
aam
sbb
push
sahf
add
mov
and
je
lock
push
jno
sub
sub
pop
dec
mov
mov
xor
mov
leave
xor
int3
and
adc
mov
sahf
nop
push
jno
fistl
call
lods
pop
jge
cli
lock
cld
out
add
jno
jae
xchg
adcl
xor
ds
xor
pop
cld
ss
popf
dec
sti
popa
inc
je
sub
adc
dec
ret
dec
push
or
sbb
out
jge
int3
and
lret
xchg
fsubr
inc
mov
into
dec
fimuls
jnp
inc
repz
and
rcll
pusha
pop
adcb
loope
pop
xchg
aaa
fidivrs
fbstp
dec
jns
lds
aaa
jo
add
mov
rolb
sub
movsl
lods
mov
sbb
data16
stc
aas
mov
adc
push
xor
cmp
ffreep
xor
rorl
inc
mov
xorl
dec
pop
test
mov
dec
lfs
loopne
adc
sbb
out
sbb
roll
in
jae
negb
jp
shrl
out
add
outsb
call
pop
push
jae
cmp
out
movsl
dec
or
add
add
aas
rcrl
std
das
mov
out
sahf
sahf
xchg
ds
mov
mov
add
push
mov
adc
arpl
add
pop
pop
and
and
and
lods
push
add
xor
inc
mov
xor
dec
sub
push
dec
xor
sti
pop
inc
mov
pusha
and
shrb
mov
mov
test
ret
sahf
jae
repz
addr16
pop
dec
mov
pop
sbb
add
add
and
push
push
js
mov
cmp
xchg
stos
stc
pop
jbe
pusha
xchg
mov
mov
jg
dec
xor
call
mov
sar
imul
jae
or
repz
out
push
testl
stos
test
lods
fiadds
and
aas
and
inc
in
fsubp
adc
xor
fwait
hlt
daa
sahf
mov
int3
lcall
push
pop
xor
push
testl
jp
and
xor
sbb
mov
mov
les
dec
incl
mov
inc
cltd
mov
daa
or
push
dec
push
out
outsl
inc
mov
bound
jnp
movsl
movsb
dec
fwait
insb
pop
jle
fldl
sti
mov
sub
add
cmp
pop
xor
add
or
test
mov
loop
sub
mov
cmp
cmpsb
sbb
stos
cmp
out
sar
or
sbb
fistpll
aad
fstps
mov
std
xchg
inc
movsb
popa
add
mov
out
nop
add
in
ljmp
sub
movsb
fbstp
clc
cmpsb
rcr
test
fistl
mov
scas
pop
call
jge
pop
sub
insl
frstor
mov
mov
fs
clc
sub
divl
les
cltd
stc
repnz
lret
pop
jo
and
and
and
bound
jmp
in
loop
cmp
sbb
mov
mov
push
xor
movsb
sbb
xchg
push
popa
out
call
fs
dec
jno
ret
lock
int3
adc
add
mov
sub
jl
dec
mov
mov
push
jp
sub
arpl
dec
add
test
cld
shll
inc
lahf
and
sarb
add
sahf
mov
push
dec
cltd
pop
pop
out
aam
add
add
enter
push
fdiv
aas
jo
inc
insl
push
or
add
add
mov
mov
jmp
and
addl
test
jecxz
iret
mov
dec
lcall
int3
rorl
push
bound
out
loopne
push
mov
mov
sub
ljmp
add
loope
addr16
icebp
xor
xor
mov
lock
pop
daa
inc
pushf
push
stc
loop
add
add
and
testb
xchg
sub
mov
pop
and
repnz
jg
lret
xor
mov
dec
popa
xchg
mov
mov
pop
mov
add
cmp
cmp
add
add
add
sub
add
add
ja
add
loopne
mov
or
xchg
aas
jne
cmp
stos
sub
sbb
fidivl
call
in
jb
and
sti
aam
add
add
repnz
lods
xor
push
in
call
xlat
mov
jp
push
sbb
mov
mov
stos
jmp
sub
fldenv
int3
and
and
pushf
pop
std
inc
out
int3
adc
mov
mov
jp
pop
scas
jle
cmpsl
fs
imul
inc
jb
shl
pop
adc
movsb
mov
out
dec
dec
enter
jbe
test
lret
xchg
scas
mov
mov
mov
lods
scas
ja
ds
jo
adc
orl
push
push
lahf
dec
testl
push
push
cld
int
xor
xchg
jmp
fildl
lock
add
or
out
and
sbb
out
dec
dec
sbb
pop
cmp
pop
addr16
add
add
in
pop
in
pop
mov
mov
out
push
mov
xchg
xor
cli
adc
jmp
jl
pop
add
sub
or
cmp
mov
push
add
dec
int
add
loop
jb
sbb
push
push
rcl
ljmp
mov
test
xor
add
xor
cmpsb
mov
clc
popa
fsub
xchg
mov
sub
dec
incb
sahf
fstps
cmp
sahf
dec
std
sub
in
push
mov
xchg
xor
cld
cmpl
ds
push
daa
adc
cmp
int3
and
inc
jno
push
jp
mov
enter
sti
jge
popa
in
movsl
and
push
xchg
adc
inc
test
inc
ret
jle
mov
call
or
out
shlb
mov
adc
repnz
imul
aam
icebp
lea
xor
stos
aam
add
add
mov
imul
leave
gs
xchg
fst
mov
pop
mov
int
mov
push
mov
sbb
xchg
mov
and
mov
cli
add
pop
xlat
and
push
cmp
lret
mov
adc
hlt
mov
mov
std
mov
cmpsl
pop
test
lods
or
aad
adc
ds
mov
lock
fsubp
notl
js
dec
jecxz
test
mov
push
and
shlb
xchg
dec
mov
add
lahf
addl
fldt
lea
int
in
mov
mov
stc
dec
mov
push
lcall
sbb
inc
sahf
dec
mov
or
fistps
push
aas
mov
mov
es
xchg
push
mov
jo
data16
fildl
add
sahf
jge
dec
mov
popa
and
and
mov
cmp
mov
orb
dec
dec
sub
jecxz
sbb
adc
call
andb
push
aam
dec
pushf
inc
data16
hlt
or
mov
xchg
iret
shrb
mov
lods
mov
aas
push
stos
les
jnp
adc
xor
add
pop
fdivl
dec
daa
mov
lods
aaa
and
cli
jp
adc
je
lahf
movsb
mov
fwait
mov
add
clc
faddp
xor
dec
fiaddl
sbb
jbe
out
cmpb
in
hlt
sarb
and
sahf
or
lcall
popf
ss
inc
adc
mov
mov
xor
inc
pop
bound
neg
nop
sbb
adc
dec
jp
daa
movsl
pushf
and
mov
push
mov
shr
sbb
nop
call
in
add
push
inc
inc
fs
push
fs
pushf
cs
cmpsb
push
int3
sub
stos
repz
sbb
adc
cld
and
cmp
rcl
scas
stos
movsl
sbb
popf
and
xchg
into
sarl
pop
mov
pushf
and
mov
ret
aaa
out
ds
mov
xchg
pop
or
push
pop
fcoml
mov
fcmovne
mov
and
mov
js
lret
and
lcall
test
inc
sub
adc
xchg
mov
ret
xlat
and
sub
inc
adc
pop
cs
iret
xor
sub
adc
lods
xlat
cmp
mov
lcall
fimull
add
add
enter
jg
insl
cltd
inc
mov
mov
and
lods
insb
dec
andl
or
pop
mov
xlat
int3
jae
cmp
jbe
mov
push
sub
jb
dec
gs
mov
or
sbb
push
add
add
add
cmpsl
mov
mov
ret
scas
sub
movsb
rcll
insl
lret
out
xor
in
xor
addr16
inc
pop
mov
push
inc
sub
dec
lcall
aad
cmp
jmp
pop
aam
popa
stos
mov
cld
stos
dec
iret
mov
adc
mov
push
inc
push
add
cmp
lahf
and
pop
mov
icebp
insl
imul
fnstcw
int3
jg
sub
sbb
ret
nop
call
cmp
xchg
push
int3
xchg
fsubl
push
rolb
arpl
icebp
test
adc
sub
enter
addl
xchg
inc
cld
xchg
loop
stos
pop
xchg
xchg
mov
and
and
and
jmp
mov
test
data16
or
mov
inc
loopne
dec
ret
mov
cmp
lret
ficomps
repz
sub
xchg
add
add
andl
stos
mov
hlt
mov
push
das
out
rcll
mov
out
addr16
aad
inc
cmp
mov
ja
jo
mov
add
push
test
or
push
push
inc
xor
and
out
push
lds
jns
outsl
std
xor
inc
xor
test
add
add
lcall
xchg
cmp
call
add
add
aas
sahf
aaa
push
jp
add
xor
ret
push
push
mov
sbb
sub
cmc
add
jns
dec
bound
fcompl
pop
fwait
xor
xchg
loop
adc
and
mov
and
and
loope
out
out
les
in
nop
mov
ret
int3
sub
aad
push
repz
popa
sub
mov
dec
mov
pop
sbb
sub
jl
icebp
mov
mov
push
in
cs
add
add
mov
or
jl
dec
mov
leave
inc
insl
orl
enter
outsl
lahf
dec
push
sti
xor
stos
das
cmp
int
xor
mov
and
bound
pop
mov
xchg
lock
test
rclb
fsqrt
dec
dec
mov
cs
xchg
xchg
out
mov
call
andb
test
fnstenv
lock
imul
adc
rorb
and
punpckhbw
lret
push
jno
iret
and
lods
sbb
nop
aaa
fsin
mov
es
ficoms
push
stc
mov
or
pop
and
call
or
cmp
xorb
mov
lea
rorb
cmpsl
xchg
jmp
dec
ret
cwtl
pop
sub
loop
int3
ljmp
mov
pop
jne
in
mov
addr16
add
dec
xor
jne
lret
rcr
add
cmp
roll
mov
xchg
sbb
inc
dec
mov
mov
mov
lds
imul
fbld
repnz
rcr
lds
in
xchg
pop
gs
imul
stos
lret
imul
and
mov
or
mov
cmp
std
fucomi
hlt
add
adc
xchg
daa
popa
sub
idiv
push
jb
add
ficompl
sbb
enter
lcall
cmpsb
nop
cs
insl
ss
and
addb
or
arpl
pop
dec
popa
adc
in
inc
adc
int3
idivb
jo
imull
lods
loopne
popf
bound
push
dec
add
shrl
std
mov
or
jnp
movsb
cmp
add
cmp
mov
add
add
add
jmp
xchg
push
push
in
aam
lret
shl
mov
ret
ds
push
jb
arpl
fildl
add
add
inc
adc
mov
sbb
adc
xor
xchg
jp
add
daa
mov
sub
cltd
push
icebp
dec
adc
test
cltd
scas
int3
loopne
push
xchg
adc
dec
into
push
mov
sbb
fcompl
nop
call
adc
push
shll
push
movups
xchg
and
lock
push
cwtl
sub
dec
inc
movsb
fsincos
out
push
fnstsw
ja
jno,pn
sahf
add
lea
fistps
dec
cltd
xor
push
cmp
add
adc
arpl
push
je
and
lds
rcrl
popa
cmp
enter
pushf
jns
idivb
scas
mov
pop
test
cli
aad
pop
out
jns
jns
rorb
outsb
imul
sarb
jmp
insb
bound
stos
pop
mov
int3
pop
jp
gs
les
enter
fistps
adc
lds
lret
dec
aas
cltd
cmpsb
mov
jge
jbe
xor
adc
ljmp
inc
fbld
push
mov
scas
gs
mov
or
sub
adc
push
push
clc
cmpsl
add
mov
add
add
inc
jo
loopne
jno
inc
cmp
cwtl
adc
lahf
ds
dec
ja
insb
int3
push
lahf
and
popa
sub
xchg
push
sbb
fistpl
mov
fists
in
sub
testb
add
push
loopne
adc
inc
sbb
push
and
mov
mov
test
pop
xchg
sub
jle
lret
ret
fcompl
fldt
in
lods
mov
xchg
mov
scas
outsl
and
and
cld
std
fxch
data16
xchg
fstpt
das
pop
push
mov
loop
scas
shrl
xchg
shll
mov
ja
lahf
dec
sub
jbe
add
push
fisubs
mov
repnz
loopne
fs
shrl
mov
mov
mov
mov
das
inc
cmp
xor
jl
sub
push
addr16
sar
dec
sub
or
stos
jmp
cmp
and
mov
sbb
into
cwtl
ljmp
adc
out
outsb
push
adc
add
jge
dec
sub
jae
roll
int3
and
inc
or
fbstp
add
or
xlat
or
mov
test
in
jecxz
popf
fidivs
rcll
stos
loopne
push
mov
mov
inc
rclb
bound
push
xchg
dec
jmp
out
mov
pop
sarb
stos
pop
mov
cmp
dec
insb
xchg
add
popa
in
ret
push
adc
xor
test
cmp
fadds
pop
jbe
test
xor
shr
lahf
jge
incl
add
add
or
push
add
jmp
hlt
in
int3
dec
cwtl
jg
out
pop
inc
xchg
ljmp
in
or
mov
sub
inc
fmull
repnz
ret
push
inc
mov
mov
dec
dec
jmp
ret
push
mov
sub
adc
out
xchg
jnp
rcrl
aaa
xchg
pop
loope
dec
inc
in
xchg
daa
sbb
pop
incb
test
pop
cs
push
addr16
pushl
cmp
jae
push
cmpsb
nop
stc
push
movsl
in
jle
mov
data16
mov
shr
fwait
and
call
mov
or
out
fiaddl
adc
dec
jns
fistpll
testb
add
add
mov
push
add
xchg
scas
int
rorb
dec
popf
jge
call
xlat
and
cmp
gs
xchg
dec
stos
les
mull
mov
dec
push
mov
inc
xlat
sub
pcmpeqd
jo
xchg
mov
cmp
mov
add
inc
test
int3
pushl
sbbl
add
fadds
ret
cmp
mov
ret
mov
aam
adc
nop
insb
xorl
mov
add
addr16
push
inc
imul
je
mov
mov
iret
cmp
mov
or
cmp
cmp
es
loopne
jae
sub
int3
and
aas
xchg
stc
pop
sbb
lret
dec
int3
jl
pop
ljmp
test
jmp
addr16
ret
dec
call
aad
jnp
mov
in
ja
dec
imul
add
push
loope
mov
xchg
push
into
dec
addr16
cmp
mov
inc
cmp
lds
pop
xlat
repnz
mov
lock
int
cmp
insl
jmp
jp
and
inc
adc
xchg
fcmovbe
cmp
dec
inc
test
or
jb
shlb
loope
pop
lods
mov
mov
xor
sub
mov
mov
call
in
lret
ds
and
mov
adc
mov
div
scas
fstpl
pop
mov
sbb
lods
test
call
fimuls
ret
cmp
mov
jmp
sub
and
addr16
add
gs
dec
imul
xor
sti
enter
jno
sub
xchg
jne
inc
call
cmc
pop
cmp
cmp
xchg
bound
insb
dec
xchg
sbb
les
iret
fs
adc
add
add
push
adc
lahf
outsb
scas
loope
stos
mov
mov
mov
cmp
add
xor
fadds
aad
in
arpl
cmc
or
jmp
xchg
icebp
sbb
aas
mov
hlt
mov
sub
push
or
add
sti
cmpl
mov
and
jae
dec
filds
sahf
adc
js
loope
xchg
xor
dec
xor
adc
scas
dec
push
xchg
cld
xchg
mov
in
pop
mov
sbb
and
mov
mov
push
push
fildll
xchg
lahf
mov
add
add
push
sub
mov
les
inc
outsl
adc
int3
and
and
xor
ljmp
sub
xchg
inc
cmp
stc
inc
out
dec
fldcw
sar
push
jmp
pop
sahf
cmp
adc
cwtl
or
int3
daa
sbb
push
clc
mov
movl
pop
jbe
out
add
mov
add
add
in
mov
jg
sub
int3
xchg
movsb
push
cwtl
dec
popf
pop
imul
lret
fldl
cmc
mov
add
fimull
inc
push
sbb
xchg
sub
xor
mov
push
ds
push
and
sbb
nop
decl
mov
js
mov
xor
dec
add
mov
mov
shrl
jg
jo
lods
cmp
push
mov
mov
loopne
or
insb
addps
push
icebp
lahf
pop
jmp
mov
push
fs
insl
sub
test
add
add
es
cmpl
inc
unpckhps
adc
ja
in
pop
out
popf
addr16
fisubl
mov
pop
push
dec
jae
cmp
add
add
and
fidivrs
sub
daa
inc
adc
scas
xor
sbb
sti
ret
nop
call
dec
sbbl
add
add
add
jb
jmp
xor
inc
mov
or
mov
dec
sub
enter
hlt
sub
pop
jo
mov
cmp
add
rcrb
xor
sbb
adc
sbb
push
or
mov
leave
mov
jbe
inc
cmp
jnp
lock
jl
xor
int3
dec
inc
and
in
fists
jmp
fcmovnbe
test
loop
loopne
jno
inc
jmp
push
push
xchg
xchg
and
push
and
add
jge
inc
push
nop
push
daa
cmpsl
xor
add
cwtl
mov
mov
icebp
add
rcrb
and
sarl
inc
mov
rcrl
test
add
aas
in
or
lods
push
push
fcmovu
std
lret
pop
les
pop
mov
mov
sti
xchg
pop
cmpsb
xor
rcrl
inc
dec
dec
ljmp
jbe
rolb
mov
aaa
orb
add
sbb
mull
jecxz
int
push
mov
mov
pop
arpl
outsl
push
lret
mov
dec
testb
mov
lret
push
dec
mov
ret
negb
bound
cmp
pop
loopne
inc
inc
sbb
xchg
lahf
cmpsl
rcrl
push
int3
nop
call
inc
fildll
jge
mov
daa
push
mov
mov
stc
fcmovnb
pop
mov
ja
adc
stc
lret
xor
fsubr
je
jbe
popa
sbbl
xchg
add
xor
inc
mull
pushf
rol
sbb
sbb
das
push
pop
pushf
gs
inc
mov
xchg
jmp
out
mov
mov
aaa
add
mov
cli
inc
mov
mov
mov
aas
dec
std
repnz
or
cli
bound
sub
insb
and
add
add
inc
icebp
pxor
test
sbb
cli
sbb
cltd
pop
cs
lock
sti
cmp
push
sub
mov
push
into
cmpsl
sbb
ja
bound
int3
inc
mov
ljmp
cs
mov
repnz
jecxz
mov
fldenv
pop
pop
movsb
rorb
jns
into
mov
repz
adcb
push
mov
fnsave
ror
lea
mov
inc
addb
call
repz
scas
mov
dec
sbb
lods
pop
in
rcl
dec
add
popf
nop
pop
xor
add
das
sub
add
add
movsb
xchg
cmp
cmp
pop
nop
xor
jmp
push
mov
mov
fwait
fs
sbb
sbb
lods
test
jle
add
add
fnstenv
pop
sbb
inc
adc
cltd
in
jl
sti
pop
movsb
lahf
rcl
adc
enter
or
ret
enter
dec
dec
or
sti
pop
jp
test
imul
mov
dec
inc
pop
jmp
sbb
std
sarl
inc
shll
mov
loopne
lock
jmp
cmpsb
dec
lds
cmp
or
or
xchg
js
add
or
add
sarl
push
outsl
in
ja
mov
xor
jle
or
and
std
scas
fcoml
repz
inc
test
adc
int3
dec
add
add
xor
cltd
cmpsl
mov
loope
popf
and
aas
subl
mov
push
xor
xchg
scas
inc
test
mov
movsl
clc
and
dec
dec
xor
add
in
jbe
stos
or
pushf
outsl
xor
arpl
in
pop
and
pop
xor
int3
and
repz
mov
push
and
adc
cmp
xchg
add
add
loop
cs
pop
mov
scas
adc
sub
and
xor
daa
pop
popa
mov
cmp
xor
jo
mov
dec
dec
bound
out
mov
popf
mov
idivl
add
add
ds
call
fbld
xchg
mov
mov
je
inc
mov
mov
cs
sub
mov
jno
push
ljmp
lret
aam
int3
dec
lcall
mov
push
adc
bound
jmp
out
shll
xchg
push
lret
repz
in
shrb
arpl
fimull
inc
pop
lahf
jne
xlat
out
cmpsw
cld
mov
arpl
mov
xchg
sbb
lock
lods
xor
xchg
mov
jnp
addl
dec
mov
int3
sbb
or
cmpsl
lcall
fucomi
xor
mov
cmpsb
cmpsb
hlt
inc
mov
sbb
out
pop
adc
push
nop
call
lock
int3
loope
or
sub
push
pop
test
sub
stos
mov
cmp
gs
stos
adc
adc
inc
jae
fstps
lods
stos
and
in
mov
push
add
loopne
dec
loopne
out
pop
mov
das
or
shll
sbb
sbb
cmp
xor
fnstcw
mov
xchg
dec
lret
out
aad
add
cmpsb
adc
inc
or
dec
jno
mov
lods
mov
and
sub
add
xor
inc
outsb
push
push
inc
xchg
mov
jo
xchg
aad
pop
xchg
and
outsl
xchg
outsl
out
out
lcall
call
fsubr
cs
fists
test
nop
lods
xchg
pop
aad
mov
xchg
sbbl
stos
scas
fwait
repnz
test
ret
jne
add
dec
xchg
add
add
push
les
lret
mov
ret
pop
lahf
xorl
sub
mov
mov
mov
xor
ret
dec
pop
mov
or
lock
jne
ret
fsubrl
jecxz
movsl
imul
cli
notl
xor
dec
adc
loope
jmp
aas
lcall
inc
inc
fadds
sbb
call
dec
lcall
mov
shll
cmp
and
push
xchg
dec
and
add
and
jmp
sbb
mov
adc
inc
popa
mov
mov
sbb
mov
adc
fldcw
cs
mov
pushf
or
inc
push
iret
popl
xchg
dec
inc
int
jno
lcall
sbb
mov
push
inc
cld
and
mov
decl
test
add
add
lods
xchg
cmp
pop
mov
xlat
test
sbb
cmpsb
cltd
sub
sbb
sbb
je
repnz
sub
mov
ljmp
push
dec
mov
and
dec
in
mov
adc
addr16
sub
dec
repnz
xchg
outsl
je
mov
jb
in
loope
dec
pushl
cmp
idiv
sbb
dec
cmp
jge
shlb
jl
jle
loope
mov
adc
push
aam
add
stos
loopne
sbb
and
and
cld
mov
push
pusha
cmp
gs
jg
dec
inc
sbb
and
dec
pop
push
xchg
add
decl
jl
jnp
pop
in
bound
adc
add
les
push
adc
out
jg
mov
int3
lcall
add
add
add
cmc
std
loopne
xchg
ds
movsl
mov
and
pop
add
imul
ss
mov
cmpsl
add
push
out
pop
loopne
mov
addr16
ljmp
adc
mov
push
pop
mov
cld
sub
fcoms
aad
mov
rolb
cli
insl
stos
lcall
xor
add
or
jge
call
or
addr16
sub
push
scas
test
xchg
inc
jo
mov
rclb
and
push
mov
sti
lods
cmpsl
fwait
loope
jne
lret
stos
scas
fisubrs
add
bswap
mov
bnd
add
xchg
push
xchg
iret
sarb
shr
gs
iret
std
sbb
scas
push
sub
out
pushf
add
push
outsb
lret
leave
and
add
inc
dec
cmp
int3
int3
mov
or
sub
xchg
in
xchg
xchg
sti
lahf
mov
stc
dec
insl
test
inc
data16
jl
sub
or
or
mov
add
insl
in
adc
adc
adc
add
stc
inc
ret
test
mov
ljmp
insl
sub
mov
lret
stos
shrl
jnp
int
xor
lock
xor
ret
gs
in
jge
or
imul
cli
add
jno
add
fbld
int3
and
and
lods
sub
addl
inc
jbe
sbb
mov
sbb
clc
push
in
xchg
dec
add
cltd
popl
push
pop
pop
in
and
fucomp
insl
xchg
fdivr
xchg
sahf
int3
jo
mov
adc
aas
pop
out
dec
sti
outsl
xor
xchg
jns
rol
mov
rorl
pop
add
sbb
add
add
add
shl
pop
std
or
mov
mov
mov
in
mov
inc
jae
scas
int
sbb
call
pop
xlat
cmpsb
xor
aaa
mov
lods
popa
xor
add
out
lods
loop
cmpsb
push
in
es
adc
shlb
and
and
call
xchg
sbb
xchg
ss
adc
mov
lret
pop
aad
sub
into
shrb
dec
sbb
outsb
dec
int3
or
clc
push
test
adc
jnp
mov
call
fwait
rol
call
xchg
mov
paddsb
adc
push
bound
xor
out
jmp
mov
aad
and
and
and
test
push
pop
mov
nop
fnstsw
mov
imul
push
ret
cwtl
mov
inc
cs
jb
inc
mov
mov
mov
sub
es
in
xor
mov
insb
inc
fiadds
dec
syscall
pop
xchg
pop
stos
jb
call
mov
mov
es
dec
mov
sbb
sbb
insb
push
sbb
mov
out
ja
and
ret
int3
and
and
addr16
mov
inc
es
sub
sub
pop
out
dec
mov
dec
cmp
mov
out
xchg
mov
mov
adc
out
lcall
or
andb
xchg
popf
sbb
cmpsb
sub
or
test
sbb
add
std
mov
popf
lds
gs
out
pop
test
aaa
stc
xor
xchg
xchg
jmp
push
cmp
dec
push
jl
pop
les
lods
dec
es
filds
jo
iret
jbe
pop
add
xchg
dec
dec
data16
xor
popa
aaa
leave
mov
icebp
sbb
jno
or
out
cmp
out
clc
add
add
and
bound
seto
nop
ljmp
into
mov
fildll
das
hlt
lcall
fstpt
sar
add
mov
sub
lcall
outsl
int
loop
dec
dec
jmp
sahf
jae
data16
loope
mov
xchg
out
adc
outsl
jmp
aas
pop
add
add
add
lods
inc
sbb
test
mov
mov
xchg
in
test
dec
dec
lcall
hlt
jns
mov
xchg
loope
lcall
xor
inc
mov
out
add
add
lcall
mov
or
pop
sub
pop
dec
clc
inc
sbb
test
xchg
lahf
scas
insb
imulb
aad
das
test
jno
jne
out
sbb
call
addb
jl
or
int3
and
and
mov
inc
xchg
cmc
adc
jb
mov
repz
insb
jno
ror
adc
es
arpl
inc
sub
test
int
mov
sub
xchg
push
push
movsb
sub
loope
shll
movb
add
add
cld
int3
ret
xor
loop
jo
cs
loopne
int3
pop
add
add
add
push
je
add
je
inc
adcl
sbb
xchg
cli
push
stc
push
xlat
inc
push
mov
xor
push
ss
loopne
dec
sub
sti
pop
cmp
stos
mov
jle
add
insb
and
and
and
xchg
xor
push
push
xchg
dec
and
jp
std
mov
push
stos
and
jnp
dec
push
adc
sub
loopne
pop
pop
fadd
adc
xlat
int
mov
mov
lods
mov
clc
mov
repz
cltd
pop
xchg
gs
jnp
or
add
pop
out
pop
sbb
push
aam
cmp
xchg
out
sarb
jb
fsubl
pusha
sub
sarl
out
sbb
mov
std
mull
mov
aad
bound
mov
add
jo
or
jb
jb
mov
fadd
stc
jnp
rorl
add
adc
mov
jle
shll
jl
jecxz
stos
sbb
jmp
mov
repnz
iret
insl
stc
outsb
mov
addl
pop
ret
and
lds
jmp
daa
push
adc
mov
ja
jmp
fstpt
add
add
loope
out
aas
or
mov
and
in
mov
push
sbb
hlt
and
arpl
lahf
sub
adc
or
and
pop
ficoms
jg
movsl
sahf
int3
xor
pop
fyl2x
out
jmp
xchg
in
sbb
repz
pop
push
in
cmp
sub
mov
mov
xor
mov
xrelease
test
pop
jno
xchg
and
push
mov
fcoms
aam
pop
clc
lds
xchg
add
add
sub
xor
lret
fs
mov
fisubrs
int
push
nop
or
in
or
dec
dec
cmp
push
dec
aas
rcl
imul
out
or
int3
push
lcall
loop
nop
call
std
cwtl
movsl
jge
sbb
mov
sbb
bnd
loop
pop
test
mov
add
xchg
int
xchg
xor
add
mov
mov
js
cmp
pushf
cmp
cmp
inc
and
xchg
and
and
and
sub
pop
fdivs
jg
test
lods
es
pop
dec
in
ret
mov
ret
xor
xchg
jno
and
sub
sbb
cwtl
nop
call
ja
sub
jp
cltd
cmp
jne
repnz
jle
push
int3
adcl
cltd
sub
lret
and
jecxz
and
jmp
sub
jl
inc
out
std
ljmp
adc
sbb
lods
push
or
jno
testb
sub
add
dec
ss
mov
data16
stc
adc
fsubs
insl
and
call
mov
cmp
jno
pop
mov
repz
fisttpll
je
pop
xlat
lock
call
jl
sub
jno
sbbb
adc
outsb
lahf
adc
ja
pushf
push
cmp
adc
jp
pop
test
add
dec
rorb
loopne
or
shlb
mov
nop
lods
mov
jle
xor
push
movsb
out
push
das
and
mov
push
cmp
and
jne
mov
push
movsl
push
setl
addr16
andb
in
imul
xor
pop
xchg
jnp
in
movsl
mov
xchg
jo
sbb
icebp
in
xchg
mov
add
dec
in
or
hlt
insl
dec
in
and
and
pop
dec
cld
xlat
addb
popf
jecxz
arpl
sti
jg
and
loopne
fs
jle
and
int3
loop
jne
fiadds
pop
sbb
dec
sub
test
add
or
inc
mov
imulb
in
inc
xchg
mov
mov
frstor
lds
negb
jge
pop
idivl
and
rorb
mov
adc
inc
mov
fsin
or
int3
icebp
sub
lcall
add
cmpsl
adc
ss
pop
aaa
inc
iret
cld
pop
xchg
inc
jbe
cmp
push
cwtl
sbb
pushf
icebp
int3
inc
icebp
arpl
ds
in
push
sbb
popf
sbb
mov
leave
jp
in
aam
xlat
test
into
adc
jl
pushf
notb
pop
popl
adc
mov
inc
add
add
add
add
sub
test
jno
pop
push
iret
nop
xchg
aam
test
pop
aam
add
lods
leave
test
inc
and
sub
imul
and
std
push
ret
xchg
cmp
inc
mov
xchg
sarl
mov
lock
icebp
mov
nop
mov
pop
mov
pop
in
xchg
xor
imul
repz
rorl
xchg
out
inc
dec
sub
repz
pop
add
jns
daa
xchg
add
shlb
add
add
repnz
jb
add
pop
jle
loop
cmp
sbb
pop
outsb
mov
aam
scas
dec
mov
loopne
fs
outsb
sub
int3
and
sub
mov
jae
inc
fsubl
add
inc
add
add
xor
xlat
adc
outsl
mov
mov
xor
rcl
pop
xchg
testb
rorl
fiadds
ds
out
and
jl
scas
push
pop
dec
shll
and
push
and
pop
push
stc
add
add
xor
inc
in
and
pop
pushf
jge
pushf
mov
mov
mov
cmc
jp
jge
jle
repnz
mov
adc
bound
ljmp
push
pop
cmp
cmc
pop
into
fiaddl
cmpsb
shr
push
into
jmp
pop
pop
std
xchg
mov
movsl
fmulp
jmp
lods
and
add
pmaddwd
dec
push
or
frstor
jae
or
add
sahf
mov
out
fnstsw
pop
in
cmpsb
cmpsb
andl
mov
shl
xor
sbb
es
out
xchg
mov
mov
mov
adc
add
decb
xchg
out
sbb
mov
jmp
push
fisttpll
cmc
jns
dec
sub
mov
in
mov
call
aad
test
mov
pushf
popf
cmc
sbbb
add
add
ret
sbb
mov
stos
mov
fwait
and
popa
mov
push
dec
mov
or
xchg
sub
pop
cmp
sub
rcll
xchg
in
arpl
jmp
adc
adc
jbe
test
fs
add
lods
lcall
repz
call
insl
insl
mov
mov
fidivl
sarl
test
notl
add
insl
daa
in
dec
ss
subl
adc
or
addr16
cmp
add
add
shlb
jae
pop
test
pop
jmp
sbb
xchg
hlt
mov
fdiv
in
mov
mov
in
addr16
mov
orl
jno
insl
cld
pop
add
test
and
cmpb
sub
jg
jp
subb
std
xchg
mov
sub
mov
jle
cmpb
xor
pop
loope
call
ds
mov
std
jo
lds
dec
sub
xor
mov
xchg
pushf
in
jmp
insb
addl
bnd
cmpb
mov
into
dec
add
test
push
lds
enter
es
xchg
cmc
push
out
pop
add
out
pusha
and
xor
jmp
lea
movsb
adc
das
push
cmpsb
clc
jecxz
outsb
mov
movsl
testb
and
and
mov
sbb
sbb
sahf
ficoml
jae
adc
out
cli
xor
in
loopne
bound
test
add
add
mov
nop
fidivrl
jmp
jl
not
inc
lods
into
scas
pop
inc
pop
xchg
inc
push
sbb
sbb
test
shlb
pop
add
add
mov
xchg
push
dec
mov
adc
push
dec
xchg
mov
and
fists
testl
inc
inc
shlb
cwtl
xor
inc
xorw
nop
fidivrl
rcll
outsl
popf
push
sahf
adc
add
add
add
rolb
shll
cmp
cmp
scas
pop
sub
pop
adc
pop
push
jns
adc
mov
iret
inc
xor
inc
add
rcrl
sub
shlb
push
loope
mov
jmp
popa
ret
mov
mov
mov
mov
add
xchg
out
and
arpl
sub
in
mov
sarl
bound
pop
in
test
xlat
leave
inc
sahf
xchg
xchg
lret
sub
js
inc
xchg
stos
fcmovne
mov
mov
or
iret
popf
ljmp
pusha
insb
xlat
pop
vcvtdq2ps
adc
add
add
jmp
cmp
or
xchg
sub
add
cmp
mov
pushf
repnz
lods
inc
scas
sub
imul
repnz
cmp
and
in
ja
imul
pop
mov
adc
lods
xchg
push
jnp
xchg
rolb
mov
sarl
or
ret
add
add
add
mov
daa
daa
fldt
mov
pop
out
gs
push
push
imul
idiv
mov
mov
pusha
sbb
lods
inc
lret
addl
negb
pop
shr
sub
pop
jp
dec
in
test
add
into
pop
pushf
notl
inc
loope
push
aas
out
lock
lds
call
pop
clc
ds
inc
mov
cmpsl
das
lods
sub
xor
aam
add
rcll
out
sbb
pop
pop
lock
movsb
add
test
jp
ret
pushf
loope
ss
repz
dec
dec
outsl
ror
jecxz
mov
out
neg
lcall
int3
jge
popa
cmp
mov
pop
sub
pushf
dec
jecxz
faddl
jmp
inc
xor
fiadds
clc
inc
mov
leave
sti
cli
ret
push
imul
jmp
and
aad
dec
loopne
sub
out
mov
mov
and
fdivr
int3
dec
xlat
jmp
and
pop
out
cmp
lds
int
sub
mov
jo
xlat
jg
outsl
adc
out
movzbl
mov
daa
and
add
test
fwait
mov
mov
mov
shl
bound
mov
leave
cmp
insl
add
dec
cmp
mov
add
xchg
int3
rcrb
shrb
push
insl
mov
insb
push
or
dec
les
xchg
dec
dec
mov
aaa
in
jno
sub
lock
push
arpl
sub
popa
repz
dec
dec
stos
es
sbb
jb
and
stos
pop
cli
jge
pop
iret
int3
push
les
data16
repnz
adc
mov
adc
jnp,pt
lods
ljmp
int3
and
mov
and
loope
fcomi
add
fdivl
nop
mov
add
inc
mov
roll
paddusb
sbb
and
jne
mov
stos
aaa
popl
add
add
and
xlat
dec
jp
mov
data16
into
lds
push
call
out
push
pushf
push
icebp
stos
push
push
cmp
out
gs
fs
mov
testb
popl
aam
mov
mov
int3
and
jo
sbb
fld
repnz
pop
inc
pop
addb
mov
bound
cmp
or
mov
leave
sbb
ss
add
mov
xlat
jp
mov
xchg
add
add
js
push
je
xor
mov
mov
xchg
in
lahf
addl
cmc
inc
jne
pushf
test
or
lods
push
in
rcrl
jg
cmp
add
or
sub
mov
ss
imul
leave
decl
jle
out
add
pop
cmp
mov
pushf
fsubl
fwait
insb
lods
iret
les
xor
int3
dec
out
jo
pop
shlb
mov
pop
loope
xor
xchg
push
adc
je
cwtl
sub
cmpl
popf
fdivs
rclb
jge
mov
jmp
hlt
loop
jl
int3
dec
mov
mov
jae
lahf
xchg
or
xchg
andb
add
jmp
ja
outsl
jnp
xor
movsb
mov
and
mov
cmp
mov
push
mov
ljmp
pusha
and
xor
add
add
jp
jns
xchg
mov
sbb
fildll
jb
mov
fmuls
xor
std
jbe
or
or
push
mov
jns
inc
ljmp
popf
js
lea
xchg
frstor
jg
mov
cmp
mov
add
daa
enter
jecxz
jecxz
push
jne
sbbb
mov
add
cmp
subb
test
rcrl
adc
in
jb
lahf
push
out
xlat
mulb
test
incl
mov
bound
mov
jp
xchg
stos
repnz
xchg
dec
es
adcl
dec
or
adc
dec
je
add
stos
cmp
pop
cld
mov
in
pop
scas
pop
sbb
add
repz
cmp
jnp
add
ljmp
push
mov
bound
test
mov
sub
cmc
fstpt
push
inc
in
push
je
jmp
sbb
add
jle
xor
aaa
rcr
xchg
cmc
insb
ftst
decl
loopne
pop
shlb
sub
sub
jmp
push
mov
pop
mov
loop
loop
icebp
pop
imul
mov
xor
imul
xchg
fimuls
frstor
add
cli
shl
outsl
push
cmp
mov
fbstp
fists
popa
hlt
loopne
das
mov
outsb
in
les
iret
xchg
pop
cld
out
push
add
aas
into
sbb
dec
and
addl
int3
and
and
popf
aad
insl
add
pop
in
push
cltd
cmpsl
lds
xor
or
or
and
arpl
xor
jl
test
add
add
rorb
pop
gs
xor
fs
mov
rorl
inc
cmp
idivl
inc
into
pop
mov
jl
mov
sbb
mov
sbb
sbb
aam
push
les
bswap
xchg
js
out
aas
sar
xchg
imul
call
lock
scas
jge
out
adc
inc
push
xor
ja
bswap
and
and
inc
popf
scas
pop
dec
dec
movsl
mov
adc
push
xchg
xchg
sub
lds
dec
mov
mov
jp
add
pop
mov
add
or
shlb
je
lods
and
and
xchg
mov
jle
inc
or
int
sahf
stc
sbb
aam
out
fnstsw
fbstp
and
xchg
repnz
push
pop
pop
push
xor
gs
mov
cmp
cmp
sti
into
add
dec
add
pop
dec
movsl
aas
ljmp
popa
dec
cmp
out
inc
mov
add
fnstenv
jp
cmc
arpl
mov
in
shrb
dec
dec
ljmp
in
push
mov
xchg
rcr
inc
lods
aam
icebp
lods
xchg
movl
and
and
cmpsb
popa
sti
rcl
pusha
test
push
push
in
xor
or
xor
cmp
nop
call
and
push
xchg
pop
std
adc
call
fcoml
or
push
popf
rol
int
add
sub
mov
in
add
add
mov
push
jno
shl
dec
fldenv
push
dec
mov
dec
mov
enter
jle
pop
test
inc
sbb
sbb
inc
in
mov
mov
mov
fs
fs
fdivrs
add
add
add
imul
xchg
in
push
lret
lds
xor
sarb
lret
mov
pop
dec
es
inc
pop
fs
clc
mov
dec
dec
imul
into
scas
dec
dec
cmp
int3
add
inc
iret
push
out
mov
or
add
shlb
fld
adc
pop
lret
lret
cmp
fistpl
cmp
int3
lock
fnstcw
outsl
jbe
sbb
inc
cmp
test
mov
dec
cmp
xor
mov
aad
aas
lds
int3
and
and
push
mov
shl
add
cmp
xor
or
pop
aas
and
sbb
push
int
hlt
nop
jge
stos
push
scas
inc
cmp
int3
and
and
adc
inc
lret
aas
mov
mov
add
or
or
out
xor
insl
andl
xor
in
xchg
ja
mov
jmp
push
lret
ja
mov
jecxz
push
sub
fsubrl
rorl
shrb
add
sub
jmp
pop
ret
dec
addr16
and
pop
xor
pop
into
and
mov
sbb
dec
xor
and
gs
scas
xchg
mov
and
xlat
addl
jle
adc
stc
sub
imul
xor
fcompl
mov
lock
mov
sti
pop
popl
sbb
stos
mov
pop
adc
add
inc
jle
repz
lods
fimull
gs
jb
mov
xor
add
add
int3
inc
testb
add
mov
emms
inc
or
add
leave
push
fdivr
sub
xor
out
adc
cmc
dec
mov
mov
cmp
cmp
mov
lahf
je
leave
xchg
repz
xchg
ds
pop
ret
push
xchg
jge
sub
xchg
and
pop
mov
cmp
add
sub
push
mov
xchg
insl
int
bound
xor
inc
jp
cs
inc
sahf
xor
sbb
jge
sub
fsubs
jp
sbb
xchg
in
mov
aas
mov
add
pop
mov
mov
xor
mov
negb
out
mov
xchg
sub
sbb
call
test
rorb
mov
mov
mov
cld
sub
aad
push
sub
cmp
stos
test
outsb
lds
pop
outsb
push
cmp
add
adc
mov
fwait
mov
mov
mov
pusha
xor
mov
jecxz
int
add
mov
mov
xchg
inc
stos
testb
bound
sub
inc
add
add
loope
and
lret
js
sbb
idivb
das
adc
pop
cmp
insl
pop
shlb
jno
sub
or
pop
dec
scas
sub
push
bound
mov
sub
ret
stc
xchg
mov
dec
xchg
mov
out
xor
dec
dec
or
inc
movsl
cmp
mov
outsb
dec
add
add
add
jmp
lgs
or
sahf
push
jp
sub
mov
movsb
cmpsl
adc
stos
jnp
mov
jg
or
into
movsl
and
int3
push
mov
loop
cwtl
xor
push
add
sbb
cs
shlb
int3
and
fdivrs
jmp
dec
cmp
dec
and
mov
iret
dec
jle
test
adc
stos
xor
adc
cmp
jecxz
das
xchg
mov
aas
sub
out
mov
xchg
or
pop
adc
cmp
shll
lret
cmpsl
lcall
mov
aad
and
hlt
mov
fld
lahf
lock
cmp
push
and
enter
ja
je
fidivrs
loope
ljmp
jns
lret
jmp
adc
xchg
jecxz
pop
popa
dec
add
fldl
mov
dec
dec
pushl
aas
lods
test
ljmp
mov
fwait
ljmp
dec
hlt
fucomi
outsb
enter
dec
rolb
clc
mov
test
std
out
mov
sub
ret
inc
pop
jmp
sub
sbb
imul
dec
push
mov
das
in
cli
sbb
gs
sbb
andb
sub
sbb
add
add
fstp
aam
inc
roll
jmp
adc
xor
mov
out
mov
in
arpl
push
stos
aas
xor
adc
xor
mov
scas
mov
sub
cld
adc
popf
stos
fisttpl
bnd
adc
pop
in
scas
adc
shrl
repnz
in
js
testl
xchg
aam
lret
add
add
cld
int3
repnz
nop
movsb
mov
or
lahf
mov
jl
sub
das
adc
loope
fmuls
jmp
push
xchg
add
xchg
loope
into
loope
aaa
jne
push
or
loope
xchg
movsb
push
fldt
mov
nop
call
push
jge
xor
sub
inc
and
add
xlat
mov
add
add
add
ljmp
jbe
in
push
xor
in
mov
jns
sub
add
add
fwait
icebp
xchg
mov
mov
mov
jno
enter
sbb
sqrtps
sbb
repz
out
xchg
das
hlt
push
sbb
lock
outsb
jne
pop
int3
adc
mov
add
add
lock
mov
shll
xchg
xchg
jl
lock
loop
cmovp
cwtl
cmp
andl
out
lods
lcall
andb
jae
data16
fcomps
pop
ret
mov
out
es
jge
xlat
push
lret
sub
sub
inc
cmp
dec
dec
ljmp
mov
pop
dec
cld
daa
call
sub
lock
test
mov
mov
mov
ljmp
fdivrp
pusha
xchg
lods
dec
lcall
push
adc
lret
stos
adc
in
add
xorb
mov
xchg
jp
test
and
and
outsl
jno
and
out
sub
push
cmp
bound
xor
fisttps
call
ret
iret
jg
aad
lds
mov
mov
mov
push
dec
ret
xchg
repz
aas
xchg
inc
lock
dec
mov
pop
mov
bound
cld
js
jmp
push
pop
jne
clc
mov
out
and
fsubl
je
mov
xchg
mov
aaa
outsl
out
dec
push
push
repz
sbb
mov
sbb
adcb
nop
and
iret
push
xor
in
ja
mull
mov
sbb
xchg
movsb
leave
sub
sub
aaa
out
jecxz
cmp
mov
mov
add
add
push
shll
movsb
pop
dec
pop
lods
dec
sbb
sub
js
xorb
add
scas
push
sbb
xchg
scas
push
cmp
in
mov
push
add
jle
cmp
xor
or
lods
and
mov
xor
int3
dec
cld
mov
mov
in
loope
dec
sbb
lahf
pushf
bound
sbb
or
or
add
jns
scas
cld
sbb
sbb
mov
jl
xlat
pop
aaa
and
and
and
je
jne
and
add
shr
sub
in
dec
dec
call
test
mov
jge
inc
xchg
daa
inc
push
out
movsl
xorl
dec
ja
mov
movl
push
pop
inc
test
add
shll
mov
daa
stos
into
jnp
js
adc
and
xchg
adc
add
add
pop
fcoms
sbb
or
cmp
ja
mov
fdiv
push
mov
out
add
ds
arpl
movmskps
adc
cmpsl
add
add
adc
mov
sbb
test
sbb
push
add
das
aaa
and
adc
ds
xchg
add
cmc
sub
popa
sarb
jne
dec
dec
jmp
cltd
jmp
xor
ret
mov
repnz
out
fsub
inc
enter
in
enter
inc
mov
add
xchg
jns
js
pop
cmp
stos
shlb
loop
ror
mov
push
lods
push
sbb
push
adc
inc
outsl
in
sub
jbe
out
inc
or
add
push
movsl
adc
int3
and
pop
push
adc
shr
jnp
push
inc
fdivrl
arpl
dec
jns
std
xchg
dec
call
push
mov
mov
add
add
sub
scas
in
mov
fidivs
aaa
adc
cltd
mov
inc
dec
shl
dec
mov
das
inc
sub
out
imul
xor
jne
cmp
sub
dec
or
mov
aam
mov
xor
out
aaa
mov
mov
push
sub
imul
bound
jmp
pusha
inc
fsubp
mov
dec
imulb
sub
mov
rorb
cmpb
nop
call
mov
mov
sahf
lds
dec
lds
pop
xor
push
dec
aaa
inc
jl
bound
inc
fcmovnb
rcrb
jne
popf
rcl
sbb
add
add
add
push
push
fst
push
mov
lock
gs
xchg
jmp
jne
mov
inc
js
in
inc
in
iret
in
push
cmp
add
push
push
mov
pop
sbb
in
dec
mov
popf
lock
mov
repz
adc
das
andb
inc
bound
push
and
idiv
inc
pop
jecxz
jp
adc
int3
and
adc
sbb
add
loopne
idiv
sub
scas
insb
gs
out
mov
xchg
cmp
or
and
inc
ljmp
in
imul
push
push
scas
stos
dec
pop
out
out
loop
outsb
mov
mov
cs
xor
mov
pop
push
lret
fiadds
add
dec
push
inc
scas
sbb
lds
and
aas
xlat
in
repz
movsb
test
jg
push
dec
leave
cld
out
mov
loope
shlb
xchg
int
mov
mov
adc
pop
xchg
mov
inc
fiadds
sbb
inc
jns
sub
jno
stos
ja
js
repz
add
add
mov
clc
mov
and
mov
or
fldt
in
sub
in
ret
mov
mov
stc
jecxz
jo
daa
sub
add
ljmp
push
pop
fbld
dec
lret
mov
mov
xchg
push
cmpb
add
adc
orl
nop
call
je
stos
jo
lea
mov
pop
pop
jae
int
or
fnstcw
in
cmp
adc
jg
add
adcb
insl
iret
cmpl
add
pusha
and
push
iret
add
inc
cmp
add
xor
xchg
ljmp
add
lahf
mov
dec
mov
nop
movsl
push
push
cs
mov
bnd
push
lods
mov
xchg
cmc
fsubl
push
mov
std
mov
in
push
iret
cmp
fucom
shrl
xchg
repnz
add
add
cmpsb
xchg
mov
leave
xchg
add
add
push
cli
int
pop
pop
or
dec
and
aas
mov
mov
push
lret
inc
das
and
cli
adc
fcomps
neg
das
mov
fildll
xor
push
lds
pop
pop
lret
rcr
pop
ret
mov
aad
and
outsl
push
xor
pop
and
or
xchg
pop
ss
dec
cmpsb
mov
jle
hlt
out
cmc
dec
push
jo
and
add
add
aad
in
in
jae
outsb
addl
jb
pop
in
pusha
das
nop
call
in
jp
shll
adc
mov
decl
or
shll
xchg
testb
lods
testl
and
mov
pop
pusha
adc
jmp
mov
rcl
xor
clc
pop
fstl
mov
shl
add
mov
inc
mov
cmp
ficoml
imul
or
xchg
pop
repnz
repz
push
movsb
jge
xchg
push
or
add
add
dec
mov
cmc
sub
xchg
out
ret
repnz
rorl
enter
icebp
mov
icebp
mov
jae
xchg
mov
es
mov
loope
add
mov
frndint
dec
bound
xchg
outsl
cmp
pop
test
rcl
test
cmp
call
lcall
leave
and
or
popf
cmp
sbb
sbb
mov
sub
adc
lret
lcall
and
xchg
ss
mov
ljmpw
call
rol
call
popl
add
add
cmp
jbe
push
sub
mov
aad
sub
mov
pushf
cs
rolb
adc
cmpsb
xchg
movsl
lds
bound
or
add
add
add
cmp
out
pop
in
negb
add
rolw
mov
iret
aam
jb
and
int3
dec
incl
gs
rcrb
mov
jmp
mov
add
fcoms
sub
call
pop
xchg
mov
movsb
insl
xchg
mov
call
clc
ret
outsl
repnz
pop
cmp
enter
inc
sub
hlt
xchg
dec
jmp
inc
jmp
mov
push
jo
jmp
add
add
xchg
mov
push
leave
cmp
insb
das
data16
sti
dec
or
fisttpll
frstor
jbe
insl
test
clc
ficompl
mov
pop
int
outsl
mov
jl
push
xchg
popa
cli
int
xchg
inc
outsl
movsb
in
fsts
dec
dec
insb
cmp
icebp
lea
movsl
jb
mov
data16
cmp
leave
in
mov
and
pop
or
daa
mov
push
mov
int3
dec
mov
sub
push
ficomps
adc
push
ror
pop
jne
std
test
clc
gs
add
lds
rcrb
mov
sub
ja
add
jle
popf
jge
lods
movsb
mov
fs
int3
dec
jmp
fistl
dec
outsb
cmp
add
add
jae
js
cmp
mov
cmpsb
call
dec
mov
push
mov
mov
mov
das
repnz
test
add
add
mov
cmc
pop
cmpsl
and
mov
dec
in
test
xchg
push
push
insb
out
and
jecxz
lds
cli
pop
into
ret
sub
jecxz
xchg
pusha
mov
pop
sub
rcrl
cmc
mov
lds
pop
inc
jle
push
inc
jl
sti
cmpl
addr16
or
jo
nop
call
dec
pop
jge
mov
mov
iret
xchg
mov
xor
jae
sbb
das
stos
jbe
mov
in
fmull
ret
push
mov
cltd
sbb
popa
scas
sub
mov
mov
inc
push
push
mov
insb
mov
ficompl
jle
sbb
lcall
sub
pusha
in
ficoml
push
shll
mov
fisubrs
jne
data16
jno
cmp
mov
jmp
mov
out
pop
fcomps
cli
mov
and
jmp
call
clc
lret
mov
icebp
ja
sbb
push
sti
mov
xchg
adc
or
cmpsl
push
mov
xchg
repz
mov
adc
nop
mov
mov
mov
insl
fsts
loopne
inc
movsl
mulb
mov
xor
and
sbb
adc
mov
xchg
imul
mov
mov
cmp
outsl
ljmp
neg
xchg
loope
icebp
jno
mov
mov
jmp
xchg
mov
xchg
stos
sahf
jge
incl
xchg
ljmp
pop
and
pusha
andl
jb
xchg
outsl
mov
add
les
add
movsl
push
ror
into
xor
notb
mov
daa
adc
clc
out
call
inc
sub
aas
xor
popa
fs
cs
lods
ret
sti
ljmp
cld
jnp
jno
cmpsb
push
push
subb
pusha
incb
and
lods
popa
and
lcall
mov
or
or
mov
je
xchg
insb
cmp
xor
call
inc
add
rcrl
mov
pop
pop
push
adc
rclb
add
add
add
mov
xchg
aam
stos
mov
push
jge
into
mov
xchg
bnd
mov
cld
iret
add
je
sbb
add
cmp
mov
lock
mov
cmp
xor
into
and
and
stos
rcll
decb
push
inc
inc
mov
out
push
fst
in
jo
insb
dec
and
dec
adc
sbb
fdivs
push
xchg
enter
push
xchg
jbe
push
js
mov
inc
lods
sbb
sub
mov
jmp
dec
push
cmpsb
lahf
mov
cmc
cmpsb
jl
cwtl
cmp
mov
nop
call
ret
add
mov
xor
inc
jge
loop
stc
pop
jne
icebp
sbb
pop
in
add
add
jns
ret
sbb
ffree
lcall
or
stos
out
ret
stc
mov
jp
cmpsb
push
or
inc
sub
mov
popf
int
fldenv
ss
add
add
add
cmp
das
mov
push
mov
inc
push
sbb
cmpsl
xchg
xchg
xchg
dec
dec
jb
rclb
mov
mov
insb
xchg
pop
adc
sahf
lods
movsl
mov
lcall
mov
jnp
xchg
or
push
add
dec
lods
outsl
pop
adc
lcall
jno
inc
lcall
int
push
outsl
push
hlt
lahf
loop
jl
mov
jne
xchg
xor
cmc
push
mov
mov
xchg
divb
jnp
cmp
sub
or
outsl
lret
mull
add
add
add
divb
mov
loop
pop
test
jbe
cmc
imul
in
lcall
aaa
sbb
lds
test
fwait
mov
fldl2t
jmp
rcr
mov
dec
jns
mov
ss
shlb
xor
and
testl
test
add
xchg
mov
adc
jle
stc
out
insb
enter
or
std
pop
test
xor
and
sub
jae
jmp
or
and
fdivl
nop
call
int
lock
std
sbb
fmull
je
aaa
scas
clc
adc
sbb
cmpsl
jo
addr16
xchg
and
inc
pop
push
mov
idiv
cmp
push
mov
add
ljmp
repz
xor
xchg
cli
cmp
inc
xchg
data16
cmc
jg
jno
rcll
push
push
movsb
push
aas
bound
lods
mov
iret
adc
jb
push
jmp
sbb
jo
sbb
push
or
mov
dec
rorl
dec
jae
addr16
pop
loopne
icebp
sub
cmp
outsl
or
lea
in
sub
mov
pop
iret
pusha
mov
xor
sub
push
and
and
and
ficoml
mov
sub
ss
ret
stos
cld
sub
cli
scas
sbb
test
pop
pop
rorl
out
pop
les
aas
insb
out
decb
aaa
fnstsw
faddp
or
jb
pop
test
mov
aaa
pop
out
int3
and
and
std
mov
ret
lret
pop
test
adcb
stc
sub
dec
arpl
and
ss
stos
inc
mov
cmp
mov
inc
fistl
fcmovb
adc
es
cmp
add
add
pop
xchg
lahf
test
incl
cli
inc
outsl
mov
inc
loop
push
enter
inc
jecxz
cmp
add
seto
popa
insb
add
jns
add
add
add
add
pop
pop
xor
data16
aas
mov
and
cmpsb
popf
pushl
jb
dec
mov
pop
sub
call
insl
insl
mov
jnp
push
mov
xchg
inc
aad
sarl
leave
lods
scas
mov
and
and
stos
bound
mov
xor
sbb
sbb
mov
add
sbb
movsb
pop
test
fwait
ret
loope
movsb
cmpsl
jp
cs
lahf
add
call
out
xchg
lcall
fimull
xlat
imul
mov
xchg
insl
mov
xor
fdivp
movsl
xor
cmpsl
sub
sti
into
cmc
push
cwtl
scas
jb
sub
xor
fwait
das
xchg
dec
mov
enter
fdivr
bnd
mov
std
mov
jbe
add
xor
add
add
push
ljmp
ret
cmp
mov
and
and
nop
std
mov
pop
push
mov
fs
call
inc
lcall
ja
push
dec
xchg
mov
or
in
sbb
pop
pop
das
sbb
inc
mov
jge
pop
mov
loop
jecxz
pop
fcomip
and
add
add
add
xor
clc
lcall
add
or
mov
jb
movsl
daa
das
outsl
mov
jl
call
cmpsl
xchg
bound
cs
imul
inc
inc
and
and
xor
fstp
not
rorw
imull
push
loope
fs
out
or
clc
sbb
cmc
fsubs
jo
cltd
test
sbb
or
insb
stos
out
into
jmp
add
push
aam
cmp
in
lea
or
ret
cmp
add
fisttpl
add
xchg
pusha
mov
xchg
into
xor
ss
loope
push
mov
mov
cmpsl
test
test
inc
pop
in
adc
dec
and
xor
ss
bound
fldcw
xchg
sub
ds
and
push
jmp
mov
mov
orl
nop
call
or
movsl
fcomps
inc
sbb
rolb
add
testl
cmc
jae
jle
fdivl
lcall
inc
daa
xor
mov
mov
shrb
sbb
cld
dec
inc
mov
mov
cmp
out
mov
add
add
add
jl
sbb
incl
int3
stos
mov
xchg
lock
out
stos
mov
xor
add
faddl
sbb
push
mov
ficoml
xchg
or
and
push
int3
sbb
lcall
movsl
lcall
inc
outsl
insb
inc
or
test
cld
mov
lea
out
sub
in
mov
fs
stos
xor
cmp
aam
imul
aad
and
push
mov
loop
lods
fistpl
push
call
dec
jge
out
in
ret
stc
mov
popa
inc
cmp
add
and
pusha
mov
jb
jns
sbb
shlb
shlb
sub
cmpl
popf
int
call
xor
or
cmp
jbe
divb
int3
cmp
stos
in
data16
xchg
psubsb
sbb
push
mov
sub
sar
xor
mov
mov
int3
dec
dec
xchg
inc
mov
dec
loop
push
inc
pop
enter
jo
jae
jno
add
xchg
jne
les
mov
add
adc
ja
add
popa
sub
xchg
fisttpl
push
sub
add
sub
sti
pushl
imul
jbe
fstp
xchg
mov
repnz
bnd
adc
xchg
sti
icebp
jns
cltd
adc
cmp
push
fldl
aas
out
cli
xorl
jle
xchg
mov
inc
jl
leave
inc
and
pop
jp
addb
dec
adc
fldenv
jns
pop
aas
bound
sub
dec
aad
inc
or
xchg
mov
int3
ret
cmp
cltd
imul
stos
jecxz
xor
and
xchg
push
fisttpll
and
inc
add
fistpl
xchg
std
jno
mov
es
mov
scas
mov
int3
xchg
out
imul
jb
jne
mov
cmc
scas
mov
jle,pt
add
xor
mov
inc
ljmp
mov
mov
push
ljmp
call
fmull
xchg
in
data16
adc
roll
push
das
jl
lods
push
mov
or
dec
es
push
in
jbe
jge
add
mov
out
loope
pushf
pop
add
add
test
xlat
pop
jbe
cld
mov
fldcw
sub
aam
ret
aaa
add
orl
xor
jp
jecxz
cmp
add
add
add
inc
hlt
into
in
lret
das
icebp
adc
in
mov
xor
pop
mov
lods
jno
out
test
popf
shl
mov
push
cmp
jmp
out
add
add
xor
stc
inc
or
stos
cmp
adc
mov
xchg
pop
rcrl
stos
rol
movsb
add
add
add
mov
mov
add
adc
mov
ss
fwait
enter
and
add
add
lods
xchg
cltd
ret
add
push
mov
leave
or
lods
test
push
sub
sbb
daa
jnp
je
test
pop
jo
mov
fsubs
cmc
rcll
adc
lock
cs
test
push
mov
in
nop
call
push
add
jne
jbe
add
adc
les
push
inc
cwtl
scas
adc
incl
aam
ss
xorl
call
cmp
adc
sub
or
mov
stos
xchg
sub
ret
out
fcomi
mov
sti
shrb
data16
inc
mov
jns
inc
push
int3
icebp
inc
pushf
push
insb
test
jecxz
movsl
pop
ljmp
cmpsb
xor
push
outsl
test
pushf
jno
lds
rcl
lds
dec
insb
lock
sub
sbb
inc
jnp
scas
jmp
hlt
add
add
mov
rolb
clc
out
and
sbb
movsb
sbb
in
pushf
sbb
jecxz
mov
cmp
ds
mov
add
mov
adc
shll
fnstcw
cltd
mov
cmp
les
nop
mov
inc
ficoml
push
fildl
sub
push
scas
mov
add
cmp
gs
and
jno
cs
pop
jp
jb
test
lcall
push
arpl
andb
inc
mov
jecxz
cmp
pop
push
aam
mov
mov
sbb
adc
mov
popf
aam
enter
jl
out
adc
push
outsl
mov
mov
inc
sbb
dec
fs
xor
test
out
cs
jbe
xchg
scas
dec
pop
js
and
jg
call
aaa
cmp
stos
push
and
xchg
or
or
lcall
cmpsl
pop
pop
inc
insl
and
or
or
cwtl
xchg
int
or
add
fdivrs
ljmp
or
pop
bound
hlt
push
les
jmp
call
xor
scas
shlb
xchg
cmp
pop
push
int
xchg
icebp
ljmp
dec
enter
sahf
into
jecxz
pop
pop
mov
push
xchg
jecxz
in
hlt
rol
int3
fcom
clc
mov
int3
dec
pushf
sahf
dec
mov
mov
jmp
mov
fistpl
fs
test
movsb
adc
or
add
jbe
mov
push
and
mov
and
pop
and
and
and
fidivl
cltd
ficoms
adc
adc
sub
and
adcb
movsl
mov
jne
test
test
jb
inc
mov
inc
xchg
pop
mov
push
add
mov
mov
neg
sub
testl
xchg
movsl
pop
mov
add
add
add
adc
ds
sub
xor
mov
add
shrl
pop
pop
mov
std
mov
dec
sbb
pusha
and
xchg
jno
fwait
movsb
test
int3
dec
call
in
inc
insl
adcb
mov
mov
orb
xchg
nop
call
fnstsw
sub
mov
cmc
sar
adc
out
pusha
lcall
pop
mov
inc
sbb
sbb
jns
and
or
sbb
inc
xor
sub
xchg
jbe
bound
and
jne
aam
and
and
out
mov
cmpsb
divl
sbb
daa
xchg
mov
repnz
and
and
mov
or
jb
mov
hlt
push
mov
mov
sub
and
mov
pop
rolb
int3
jns
loopne
inc
inc
sar
cmp
sbb
dec
xchg
mov
pop
pushf
icebp
sub
sub
sbb
pop
xchg
data16
ret
xchg
xor
dec
popf
les
xor
adc
add
in
mov
adc
sbb
sbb
div
inc
test
mov
je
or
sbb
mov
lods
xor
loope
je
jo
sbb
inc
cltd
push
fidivl
fsubrs
clc
mov
and
dec
mov
out
lods
mov
test
pop
xor
lahf
xchg
cmp
add
lods
repnz
nop
call
xor
dec
les
xor
loope
cmp
push
rcrl
and
popf
push
cmpsb
mov
inc
and
sbbl
push
pop
cmp
cmp
sbb
js
xlat
cmc
pushf
shlb
xor
cmp
cmp
lea
loope
add
cltd
cs
add
add
rorb
pop
fdivl
int
nop
call
adc
imul
psubb
dec
fwait
mulb
daa
mov
mov
pop
std
dec
add
loopne
jns
popf
pop
fistpll
repz
or
fdiv
jne
cmp
push
out
jp
pusha
cmpsb
cmp
xor
mov
mov
stc
dec
xlat
xchg
cmpsb
inc
dec
daa
push
jb
cmp
push
xchg
push
pop
pop
dec
pop
lds
insb
add
add
call
into
push
inc
outsl
push
popa
xchg
dec
ds
xlat
xor
xchg
push
cmpsl
adc
dec
je
mov
in
add
push
decb
push
mov
es
adc
mov
bound
rolb
js
and
nop
call
pop
orb
adc
dec
cmp
or
pop
jl
mov
filds
int3
scas
fdivl
shrb
shl
jge
adc
std
inc
cwtl
das
xorb
push
pop
or
mov
add
pop
pop
mov
out
dec
pop
adc
cmc
and
imul
mov
sahf
mov
subl
dec
insb
dec
jp
aam
xadd
lret
std
cmpsb
cmpsb
and
jg
push
sbb
std
push
xlat
push
loop
adc
sarb
mov
int3
jb
pop
sub
mov
push
popa
adc
add
and
inc
xchg
pop
lds
jne
xlat
cld
xor
fs
fldcw
push
dec
dec
jmp
adc
jae
out
xchg
out
fcomps
jp
push
pop
add
add
int
xor
sub
cmpsl
ret
fsubr
add
add
rolb
jge
and
mov
xchg
xor
pop
dec
imul
mov
add
inc
cmp
testl
push
dec
sbb
jle
lcall
jo
and
cmpsl
inc
bound
xor
int
jmp
push
test
pop
sub
inc
mov
sub
shrl
adc
leave
cmpsl
iret
lods
ds
das
jl
add
add
bound
mov
daa
sbb
push
sub
lcall
and
jnp
lock
daa
and
popf
and
and
and
das
pop
imul
dec
jl
stos
push
push
mov
fdivs
dec
inc
fdivs
jo
cmp
xchg
xchg
xchg
int
jle
dec
sub
aaa
data16
dec
dec
push
sbb
movsb
xor
aam
jl
and
mov
outsb
and
mov
jbe
leave
fcmovb
sub
sbb
jns
xorb
mov
cmp
test
outsb
xchg
rorb
es
cld
mov
xlat
mov
mov
mov
xor
ret
add
push
in
nop
loopne
add
add
add
popf
lahf
mov
jbe
pop
rcr
add
add
add
add
rclb
jge
rcll
test
cmp
ljmp
dec
insl
jns
mov
clc
and
xchg
sub
hlt
adc
add
and
inc
cmp
or
out
jge
inc
mov
xchg
addr16
sbbl
out
jl
adc
and
add
add
pop
dec
push
dec
xchg
lods
mov
lret
jl
outsb
mov
adc
js
mov
lahf
sbb
pop
mov
adc
out
cmpsl
adc
outsl
push
ret
cs
or
push
pop
stc
sub
ljmp
dec
mov
push
stos
sub
cmpb
push
push
flds
pusha
add
add
add
bound
int3
je
fcomp
nop
or
ret
mov
daa
xchg
nop
call
mov
dec
ja
mov
fnsave
fs
mov
test
jbe
adc
repnz
mov
xor
add
pop
ficoms
cld
shl
aam
inc
and
scas
bound
jns
jmp
adc
fs
aam
dec
add
insb
mov
jae
test
cs
jae
and
dec
xchg
sbb
std
into
sbb
xchg
popf
cli
aas
dec
mov
or
jg
xor
lcall
mov
movsl
mov
push
incb
push
mov
cmpsl
test
push
add
not
loope
push
inc
lods
xlat
lock
int3
hlt
clc
push
mov
dec
mov
add
xor
icebp
popa
repz
out
clc
insb
les
out
inc
imul
and
dec
shrb
pop
aam
sub
data16
dec
mov
add
cwtl
push
mov
orl
and
and
sub
mov
in
repz
sahf
mov
push
repz
pop
shrb
fmull
dec
std
pop
and
adc
add
mov
sub
das
and
rol
lock
adc
inc
into
aas
stos
loopne
cmpsl
inc
xchg
fnsave
lods
dec
mov
mov
fsubrl
lock
adc
int3
aas
add
mov
push
xchg
fistpl
arpl
fildl
add
mov
test
mov
std
movsl
mov
scas
fwait
addr16
push
repz
fstps
xor
stc
roll
sub
ss
sub
xor
push
add
add
add
aas
fcoml
mov
int3
and
mov
add
dec
aam
mov
xchg
inc
into
outsb
or
pop
fs
sbb
imul
add
mov
stos
lods
xlat
jbe
mov
pop
pusha
xchg
lock
leave
mov
pop
dec
call
test
add
add
outsb
test
sbb
stc
sub
lods
leave
add
add
cmpsl
sti
nop
xchg
pushf
push
cld
jecxz
fisubrl
daa
add
jl
mov
dec
cld
mov
jae
inc
fidivrl
push
jno
mull
adc
test
jnp
out
sbb
xchg
sbbb
xchg
lret
rcll
sbb
xchg
pop
or
xchg
mov
mul
xor
test
test
rolb
and
fildl
rorl
je
clc
mov
lods
stos
in
popf
jp
in
push
adc
mov
mov
dec
push
inc
cltd
js
shr
sbb
loope
mov
call
lret
push
push
cli
sahf
add
add
insb
add
push
outsl
cmp
push
fsubrl
loop
xchg
outsl
or
push
stos
adc
mov
push
test
dec
add
add
add
enter
lods
cmp
mov
pop
ja
sub
insb
ja
sbb
out
cmc
fcmovnb
mov
pop
or
mov
jns
enter
lock
pop
cld
mov
jle
push
adc
mov
into
dec
dec
jne
sub
lret
cwtl
mov
call
jno
pop
jecxz
cmp
pop
lock
int3
pop
add
jp
pop
mov
cltd
mov
sbb
add
ret
movsb
xchg
cmpsb
sahf
into
ss
jmp
dec
mov
fwait
out
jne
push
pop
add
add
add
stc
cmp
clts
xor
xor
mov
sub
or
shll
push
lret
mov
mov
pop
pop
fs
ljmp
sbb
mov
int3
and
mov
push
out
xchg
mull
or
mov
pop
jo
mov
jl
ret
xlat
and
mov
or
dec
mov
ds
and
and
hlt
out
sahf
int3
push
mov
fnsave
xor
lods
pop
addr16
xchg
add
add
push
inc
jo
pop
imul
cmp
sbb
or
xchg
pop
lcall
jno
cmpsb
shll
call
dec
pop
incb
mov
or
aaa
ds
notb
es
repnz
sbb
loope
test
insl
mov
or
or
js
loopne
test
in
xor
jae
mov
add
add
or
enter
sub
jnp
call
daa
sub
scas
shl
jge
enter
int3
lock
sbb
mov
in
pop
add
sbb
inc
filds
loop
repnz
jb
xor
ljmp
ficomps
outsl
pushw
sub
fsts
dec
push
cli
mov
stos
sub
push
add
adc
jmp
js
push
and
and
or
imul
and
es
jmp
sahf
pop
in
daa
adc
xor
xor
mov
out
sti
shl
jno
mov
leave
imul
into
std
push
cmc
xchg
aaa
xchg
push
movsb
das
jp
orl
mov
rclb
scas
inc
mov
cmpsb
mov
mov
outsl
lds
into
dec
cmp
or
js
jecxz
shlb
mov
fldlg2
fldenv
pop
aaa
mov
popa
xchg
and
scas
cmc
pop
leave
cld
dec
jle
adc
lcall
pop
sahf
jl
mov
clc
dec
ljmp
jl,pn
xchg
icebp
out
mov
pop
movb
aas
mov
call
fimull
push
push
jae
jg
sbb
arpl
test
addb
mov
icebp
push
push
and
jge
fs
jp
out
sbb
push
pop
xor
add
mov
out
add
add
jge
pop
loope
cmc
or
xchg
xchg
add
aas
imul
xchg
arpl
fcmovu
jp
std
int3
xchg
sub
jg
inc
xor
xor
insl
mov
adc
mov
jecxz
in
cmp
lds
dec
inc
fidivrs
xchg
inc
pop
leave
and
subl
push
sub
cmp
inc
add
add
shll
mov
or
sub
dec
mov
ret
andl
repz
mov
adc
fcompl
push
mov
mov
out
jb
insb
inc
arpl
push
fadd
xchg
xchg
and
shll
pop
xchg
out
dec
sbb
sbb
push
jmp
aad
mov
mov
bound
mov
fdivrl
mov
pop
xchg
xlat
scas
or
fcoml
xchg
loope
push
pop
pop
cs
pop
hlt
sub
sbb
pop
and
mov
xlat
add
add
add
and
cmpsb
loopne
movsl
and
adc
cmp
lods
mov
or
adcb
adc
cltd
clc
push
sbb
leave
sbb
sub
xchg
or
popa
xor
dec
dec
pushl
loope
movsb
xchg
mov
push
dec
fsubrl
movsl
fstl
cmp
mov
lods
test
shlb
sub
mov
stc
shl
sbb
xor
jl
fwait
xor
std
or
nop
lock
push
out
pop
into
es
sub
dec
dec
bound
test
pop
and
fcomp
add
out
sbb
in
nop
mov
cmp
lcall
xor
pop
add
add
js
and
mov
xchg
dec
push
or
call
and
sub
jp
rorb
subl
and
je
leave
mull
add
add
adc
or
iret
push
sti
jae
comiss
jmp
cmpsl
ljmp
mulb
xchg
loopne
xchg
add
jle
lods
fnstsw
into
scas
loopne
shr
rcr
and
rcrl
sub
int
jp
nop
call
imul
push
icebp
adc
scas
jge
mov
dec
mov
imul
nop
call
xchg
push
push
jno
pop
dec
int
lods
jmp
jl
nop
or
aam
mov
ficoml
cli
push
int
movsl
unpckhps
sub
lret
adc
das
push
lea
cmc
push
sbb
dec
fwait
dec
cld
push
inc
enter
call
hlt
mov
pushf
sbb
mov
xchg
popf
push
jno
push
stc
ret
and
pushf
data16
pop
stos
add
std
fs
insl
jmp
rorb
and
lcall
push
and
adc
sbb
mov
call
add
scas
cld
cli
addr16
adc
sahf
lcall
sub
adc
insl
xlat
aad
test
movsl
lock
inc
sub
jg
ds
adc
mov
push
xor
xchg
sbb
add
add
add
mov
insl
xchg
pop
mov
adc
aam
adcb
sbb
xor
push
insl
out
adc
cli
roll
xchg
in
xchg
shl
and
xchg
mov
add
mov
lea
les
subl
xchg
or
sti
je
int3
and
and
out
mov
and
adc
ss
je
mov
rcrb
dec
pop
mov
js
jo
add
jbe
imul
ss
sbb
jecxz
ljmp
int3
dec
call
cmc
stos
movsb
jp
xchg
loope
adc
aad
lods
adc
jg
out
push
adc
fwait
stc
cmpb
xchg
or
mov
cmc
xchg
cwtl
and
stc
or
sbb
ret
outsl
in
mov
ss
pmuludq
lea
test
call
icebp
js
sahf
fdivrs
xor
loop
cmp
shrl
inc
add
add
add
ljmp
add
and
and
and
and
and
and
and
and
and
sub
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
or
add
add
add
add
add
add
add
inc
hlt
inc
add
add
add
inc
add
add
add
repz
add
add
add
repz
add
add
add
add
add
inc
add
add
add
add
add
add
repz
add
add
add
repnz
add
add
add
add
add
add
add
inc
add
add
and
inc
add
add
adc
inc
add
add
add
inc
add
add
lock
inc
add
add
add
icebp
inc
add
add
add
icebp
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
rcrb
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
