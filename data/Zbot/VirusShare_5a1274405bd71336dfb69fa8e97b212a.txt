sbb
add
test
popf
sub
int
push
push
popf
popf
mov
jo
inc
aas
cltd
js
aas
enter
andps
lcall
int3
push
push
rol
subl
into
enter
ret
mov
sbb
imul
adcb
push
push
sti
push
add
add
sbb
add
jb
nop
push
jne
cmpsb
jae
sahf
lds
and
and
add
jle
insb
push
push
mov
cmp
dec
bound
push
jae
lods
xor
mov
scas
mov
add
mov
shll
lods
fisubs
push
dec
pusha
pop
dec
fsubrl
ja
fcompl
jl
push
lods
out
jmp
push
jb
rcrb
adc
testl
sbb
lahf
imul
les
out
cmp
inc
iret
adc
add
cli
mov
xor
stos
cmpsb
repz
cmp
push
clc
sahf
add
lods
add
dec
inc
lea
xor
sub
mov
mov
mov
test
or
pushf
fsubrl
jnp
sub
push
sbb
fwait
cmp
pop
push
dec
add
jp
cmc
xchg
push
and
popa
repz
inc
xor
or
lods
pop
pusha
movsb
ljmp
jno
outsb
mov
int3
rclb
xor
fcomip
xlat
sub
push
or
iret
jle
outsb
xor
and
inc
in
or
jb
mov
test
insb
aaa
hlt
inc
inc
cmp
push
mov
pop
or
stos
fcoml
and
dec
jg
adcb
ljmp
push
je
ds
arpl
adc
xchg
mov
pushf
or
mov
js
mov
iret
js
insb
jns
das
loope
push
ret
mov
mov
shrb
cld
pop
mov
sub
adc
inc
in
or
or
mov
sbb
sbb
cmpsl
add
mov
loopne
jl
inc
jge
dec
leave
cltd
mov
adc
jge
push
into
or
mov
or
sbbb
test
ja
push
jns
jbe
sbb
cltd
push
sub
enter
inc
jnp
data16
fsubrs
dec
mov
adc
mov
dec
movsb
xor
out
ja
xchg
jae
jnp
scas
pusha
cmp
push
cmp
xchg
dec
and
xchg
xor
cmp
and
adc
sub
loope
psubusb
lret
lcall
inc
dec
mov
sub
dec
xor
imul
cmp
repnz
sub
cmp
jp
mov
pop
nop
mov
leave
push
dec
es
in
dec
xchg
add
rclb
outsl
mov
and
mov
cmpsl
std
push
ror
sbb
test
loope
inc
add
cmpsb
mov
xchg
std
inc
subl
push
in
das
mov
jae
xchg
mov
pop
out
jecxz
roll
inc
testl
inc
test
scas
lea
xor
xor
outsl
sub
or
jo
lret
or
jno
shrb
jns
loop
xor
sub
outsb
mov
addr16
xchg
push
and
push
les
or
leave
xor
adc
dec
inc
pop
fcomi
mov
xor
cmp
rcrb
xlat
add
and
jp
cwtl
lds
sbb
pop
jns
xchg
adc
mov
ss
jecxz
and
cmp
mov
shl
das
and
scas
dec
shrl
movsl
mov
jo
sti
jecxz
ffreep
lea
ret
mov
imul
rolb
sbbl
adc
popf
cmp
out
emms
xchg
mov
dec
in
notb
popf
or
out
mov
loope
sti
lods
mov
sub
movnti
push
ja
incb
das
cmp
test
pop
add
repz
or
int
mov
fstl
test
and
lret
add
xor
lcall
bound
and
inc
filds
rol
adc
loope
subb
stos
add
out
fadd
imul
das
or
pop
inc
add
add
loope
xchg
dec
ja
mov
shrb
incb
jge
xchg
leave
cmp
jle
jg
out
fldenv
add
dec
jg
out
sti
mov
stos
es
movsl
inc
lea
dec
adc
mov
sub
aam
sbb
cmpsb
dec
clc
cwtl
jl
or
add
test
jns
pop
divb
das
jp
jecxz
dec
sahf
mov
test
shll
lcall
pop
sub
sbb
push
jg
cmp
xchg
inc
dec
or
dec
loope
xor
jmp
je
mov
xor
xchg
pop
dec
pushf
xchg
lds
sub
inc
jge
xchg
xchg
xchg
mov
cmp
cmp
and
adc
push
adc
add
mov
add
xor
icebp
lret
mov
or
dec
outsb
add
cli
cli
sub
cmp
sbb
lahf
loopne
cmpsb
xchg
test
push
sub
in
cmpsl
mov
jo
andl
inc
jmp
pop
jb
cmpsb
repnz
sbb
inc
loop
dec
loope
adcl
xchg
lock
cmp
and
popf
faddl
cwtl
shl
xchg
repz
fcomps
push
push
repnz
lods
shll
mov
imul
jb
adc
leave
and
jno
and
cmp
sahf
mov
mov
arpl
shrb
outsl
adc
jecxz
adc
sub
pop
or
sub
pusha
sti
push
mov
push
mov
gs
mov
mov
imul
enter
push
add
dec
xlat
in
test
adc
push
adc
jbe
arpl
mov
lods
arpl
and
testl
and
sub
and
push
mov
mov
xor
bound
aas
aas
push
xor
outsl
adc
stos
pop
popa
lock
ja
pop
xor
add
jne
mov
inc
hlt
idivb
cmp
adc
insl
hlt
aaa
and
push
pop
cli
pop
ret
push
dec
xor
shll
mov
and
scas
scas
enter
sub
jl
mov
sub
jg
loope
daa
dec
adc
ret
xor
std
mov
push
jge
in
sub
or
push
push
pop
jne
lahf
push
ret
movsb
data16
sbb
and
call
int
mov
ss
ja
leave
mov
stc
std
dec
insl
push
out
xor
lods
mov
call
in
ret
ds
pop
cmp
or
pushf
push
and
and
addr16
add
sub
mov
add
push
pop
mov
cltd
dec
sbb
aad
adc
lea
sti
jno
stos
ss
shlb
pop
push
enter
sbb
xor
mov
mov
cmc
mov
in
mov
jge
adc
sbb
shrl
lock
push
enter
mov
xor
pop
sbb
cmc
or
jg
mov
iret
aaa
jo
cmp
jb
inc
cmp
lahf
jnp
adc
jae
pop
movsb
xor
cltd
pop
mov
ror
xchg
inc
or
lods
insl
mov
jns
jae
and
and
xor
test
mov
fistpll
adc
into
adc
in
clc
push
sbb
in
out
jno
ss
cmp
jle
movsl
les
iret
int3
fisttpl
xor
dec
test
and
imul
xor
jae
add
sub
or
or
out
into
out
cli
sarb
test
ljmp
mov
pop
cmpsb
hlt
ja
popf
cwtl
fdivrp
cmp
aas
filds
dec
push
mov
inc
adc
adc
bound
jp
mov
jmp
push
pop
cmp
mov
mov
out
mov
ds
mov
les
xchg
cmpsb
mov
test
cmp
out
popa
xchg
push
es
add
jno
adc
pop
dec
cld
stc
xor
push
sub
sarl
aas
lret
arpl
cld
imul
add
out
cmpb
call
mov
ror
sbb
out
movsl
dec
andb
enter
shrb
sub
jge
aam
emms
inc
cld
rorl
jnp
xor
and
arpl
xchg
test
adc
aas
push
movsl
out
xchg
or
out
insl
inc
dec
mov
enter
push
mov
lds
adc
and
push
pop
or
mov
out
mov
adc
lahf
sub
ljmp
flds
mov
inc
adc
mov
jle
scas
and
fwait
sub
inc
cmp
adc
jne
xor
mov
icebp
inc
xchg
mov
das
bound
jmp
xor
push
lock
lods
mov
loop
jns
sbb
dec
fistpll
ss
das
in
dec
jbe
mov
lahf
sti
lret
jle
cld
hlt
xor
push
leave
mov
rcrb
test
loope
mov
clc
repnz
sbb
es
movsl
jnp
pop
in
push
bound
mov
arpl
mov
sub
nop
shrb
jg
mov
sbb
nop
rcrl
inc
sbb
inc
cmp
mov
out
xchg
mov
out
rcrl
dec
data16
xchg
loope
sub
idivb
mov
pop
mov
or
adc
xor
aad
push
mov
in
xor
imul
sub
in
sbb
sbbl
stos
xor
mov
es
mov
sbb
xchg
cmpsb
outsb
mov
aam
outsb
jno
mov
mov
add
popl
pop
xor
int
push
gs
pop
or
lods
sub
fimuls
xchg
xchg
ret
std
or
pop
jmp
add
dec
jp
cld
sbb
jle
jno
mov
pushf
or
arpl
jl
leave
mov
xchg
movsb
or
call
push
lods
sbb
xchg
nop
jns
aas
sub
aam
mov
mov
imul
xchg
repnz
sbb
xor
pop
in
pop
sbb
xchg
cmp
sbb
arpl
or
or
sahf
jmp
mov
insb
xor
xor
in
mov
out
lret
aad
dec
jg
out
dec
leave
popf
push
sbb
sbb
test
scas
dec
fwait
cmp
cld
dec
xchg
xchg
fcoml
mov
shlb
fbld
or
daa
sbb
xchg
test
xchg
xchg
insl
or
mov
mov
sub
push
cltd
pop
imul
xchg
mov
mov
out
lahf
in
mov
mov
inc
call
push
push
hlt
pusha
shlb
test
shll
sti
sub
dec
ficoml
shll
test
ds
cmp
cmp
sub
cmp
adc
mov
shrb
mov
or
outsl
xor
add
jne
mov
jbe
inc
sbb
mov
loopne
jno
imul
mov
enter
call
and
pop
daa
nop
cmpsl
cli
stc
gs
cmpb
sbb
and
ror
gs
je
outsb
sub
dec
xchg
mov
les
and
shrl
mov
ret
cs
xchg
jne
out
and
sub
test
lds
push
fs
pop
mov
shrb
cwtl
jb
idivl
pop
cld
imull
in
push
xor
mov
das
insb
in
xor
repnz
aas
jae
or
cmp
ret
sti
inc
jnp
or
cmpsl
bound
or
mov
add
cld
je
jbe
out
sub
jo
in
mov
pushf
ret
bound
pop
imul
pop
mov
mov
mov
hlt
xchg
jge
sub
cltd
mov
dec
imul
jbe
lret
out
add
es
jmp
addb
push
or
cli
add
cwtl
into
sub
adc
ss
je
dec
fstps
pop
jnp
add
mov
or
test
and
sbb
fs
iret
sub
fisubl
mov
mov
aam
sbbb
outsl
into
in
fdivl
lock
fisubs
jmp
loop
jne
loope,pt
cmpsb
lret
dec
cmc
in
adc
test
pusha
fcoml
xchg
jne
cmp
add
mov
adc
fnstcw
add
movsl
in
and
dec
movsb
sbb
lods
sahf
jnp
or
jns
lods
sti
pop
shlb
push
rcr
dec
sub
lcall
shrb
adc
push
mov
dec
rcrl
sbb
cmp
testb
mov
add
stos
pop
test
and
data16
mov
pop
nop
not
xor
cld
insb
fstpt
call
lret
aaa
ret
adcl
insb
repnz
mov
push
push
dec
and
loop
xor
mov
and
inc
pop
pusha
out
and
push
movsb
lahf
xchg
ss
mov
cmpsb
scas
gs
xlat
dec
andb
movsl
cmpsb
mov
mov
xchg
pop
push
imul
push
test
popa
test
dec
mov
js
cmp
dec
icebp
pop
or
adc
fdiv
adcb
add
jp
jg
cmp
lret
popa
add
add
fucomp
xorl
and
es
flds
loope
idivl
push
mov
fdivl
xchg
lea
iret
cs
jae
pop
add
jge
xor
mov
dec
lea
out
mov
pop
mov
push
stos
xchg
cmpsl
out
xor
lods
or
and
and
iret
push
stc
sbb
push
sbb
fcoml
xor
idiv
inc
mov
push
jae
push
ret
sub
xchg
push
mov
sahf
jl
xor
hlt
jae
adc
inc
mov
insl
pop
dec
xchg
cli
cli
cmp
mov
roll
jge
dec
dec
lds
adc
sbbb
sub
inc
pusha
fdivrl
mov
lahf
clc
jns
sti
fisubrl
pop
notb
push
aaa
stos
add
pop
mov
std
jbe
jmp
mov
stc
in
out
dec
shlb
cmc
cmpsb
mov
shlb
cmc
test
jbe
lcall
out
int
sub
pop
rcl
nop
out
ret
cmp
dec
inc
mulb
lcall
dec
xor
and
pop
sub
push
scas
sbb
loop
add
fstp
dec
fstpl
sub
pop
lret
fsubl
int
jg
adc
cmp
mov
gs
gs
aaa
lcall
inc
inc
jno
push
xor
ret
push
push
sub
push
std
aas
sti
movsb
xor
mov
dec
cmc
mov
or
daa
int3
xchg
insl
adc
push
push
xchg
dec
sub
loope
outsb
and
sub
loopne
dec
inc
dec
mov
cmpsb
mov
jbe
and
punpckldq
test
jg
es
dec
mov
cmp
cmp
imul
rcll
sbb
fisubs
adc
fistps
adc
aas
sub
mov
lds
mov
scas
movsl
add
lret
loope
pop
in
pusha
mov
cmpsl
int3
and
mov
arpl
push
and
jnp
dec
add
orb
dec
xchg
dec
fistl
mov
mov
dec
cmpsl
pop
dec
popf
test
jp
dec
cmp
and
pop
divl
jg
push
push
add
sbb
adc
cmpsb
popl
cmp
stos
data16
imul
fdivl
xchg
imul
in
imul
inc
push
jo
xchg
pop
xor
and
dec
into
sbb
test
sbb
sti
push
adcl
icebp
stos
test
stos
xlat
dec
jno
push
sahf
addl
jns
xchg
sbb
pop
testl
dec
cmc
cmp
jae
or
dec
jo
pop
in
cwtl
or
cmp
cmpsl
xchg
cmpsb
mov
or
cmpsl
rorb
sahf
and
mov
push
pop
push
push
cli
cmp
adc
or
mov
sub
mov
pop
pop
fsubs
inc
xchg
mov
pop
es
stc
sub
xchg
test
push
rcrl
adc
gs
gs
jmp
mov
mov
pop
pop
ljmp
xchg
std
mov
insl
jae
adc
inc
sub
push
xor
push
insb
cmp
cmc
mov
aam
dec
jmp
stos
mov
and
rcrl
add
imul
cmc
inc
sbb
jne
sbb
mov
mov
out
mov
mov
test
rolb
out
dec
pop
pop
lds
cmc
xchg
push
or
sub
cmpsb
or
stc
js
test
sti
jnp
add
xchg
es
fwait
and
adc
nop
xlat
mov
push
insl
loope
fwait
push
mov
stos
mov
stc
or
clc
and
dec
or
jbe
xor
cld
test
jo
push
or
xor
jl
rcrl
stc
push
push
mov
lock
pop
push
pop
test
inc
call
test
test
out
in
ja
idivl
mov
int
xchg
hlt
mov
push
imul
mov
imulb
rcll
lds
adc
dec
cld
inc
js
test
ret
orl
rorb
fstl
cli
lock
in
jne
sbb
adc
push
aad
mov
negl
cmp
pop
leave
push
fwait
and
orl
loopne
lock
lock
aam
enter
mov
dec
inc
inc
mov
push
cmpl
adc
cmp
in
fnstenv
test
into
push
ret
lahf
xorb
lock
aas
sub
shlb
cmp
test
ds
sbb
cld
fistpll
lahf
add
aas
in
lds
xor
fcompl
iret
out
pop
push
sub
in
sbb
or
adcl
std
mov
shlb
sbb
sub
mov
js
das
stc
rolb
popa
push
push
sbbb
ja
stos
push
push
pop
cmp
test
push
pop
leave
gs
adcl
jmp
insb
push
mov
dec
sub
jmp
push
bound
sbb
push
ret
stos
add
push
mov
clc
out
pop
shl
test
mov
jbe
xchg
cli
sbbl
xchg
sbb
fimull
fnstsw
or
out
test
ja
rclb
adcb
test
fwait
ljmp
mov
pop
and
and
xor
gs
mov
es
das
repnz
sub
inc
push
xchg
test
sbb
push
stc
mov
fsub
sub
in
or
pop
mov
mov
cmp
sti
in
jne
push
arpl
outsl
inc
fistpl
insb
imul
fwait
xlat
iret
in
add
and
inc
jbe
or
and
adc
jae
and
mov
mov
in
mov
divl
xor
in
mov
repz
jle
aam
xor
mov
pop
dec
mov
jns
idiv
or
sbb
add
inc
les
fisttpll
lds
mov
std
mov
mov
lods
cmpsl
fs
pop
xlat
rolb
mov
ret
pop
mov
push
pop
mov
mov
sahf
test
and
and
imul
cs
adc
cld
inc
test
or
pop
adc
pop
repz
jbe
or
shlb
fistpl
inc
adc
inc
popw
pop
scas
daa
and
add
jne
shll
fstps
mov
mov
lock
dec
orb
rcl
dec
and
outsb
in
mov
fldenv
sbb
mov
add
inc
into
inc
sti
mov
fs
pop
or
addl
xor
jb
out
mov
or
cmp
andb
les
insl
jge
add
cmp
outsb
in
mov
fs
imul
and
mov
push
rclb
mov
mov
movsl
rcll
punpckhdq
int3
pushf
mov
dec
jnp
fstpl
jae
mov
xlat
pop
repz
dec
jae
push
push
jns
mov
add
scas
sti
lahf
jns
pop
int3
jecxz
ljmp
loopne
jmp
cmp
xchg
subb
mov
inc
enter
mov
pop
mov
adc
shll
cmp
call
movhlps
mov
in
movsl
and
cmp
xor
jecxz
push
add
mov
shlb
rol
in
push
scas
arpl
cld
ret
and
xor
hlt
test
in
icebp
out
mov
push
add
test
pop
mov
xor
pop
test
push
lret
adc
jo
xchg
mov
nop
push
enter
xor
push
add
and
xchg
push
popf
clc
pop
sub
push
test
aam
cmpsb
pop
hlt
and
out
sub
cmpsl
push
std
fnstsw
test
xor
xchg
pop
into
aaa
pop
add
or
dec
pop
mov
mov
xchg
pusha
push
pop
in
xor
faddp
std
sbb
sub
fsubrs
jnp
scas
jne
adc
xor
push
in
ja
dec
lcall
nop
addb
mov
js
pop
lcall
inc
imul
repz
jmp
add
and
aaa
scas
scas
xchg
cld
xchg
ret
sbb
mov
adc
mov
xor
je
mov
push
xlat
out
jno
repnz
adc
out
mov
mov
xchg
or
lret
test
addb
push
push
xor
sbb
pop
push
jmp
fimuls
inc
icebp
mov
lret
faddl
hlt
push
xchg
cmp
push
mov
stos
gs
test
in
fcompl
fsub
xor
jbe
push
das
shrl
lret
stc
arpl
pushf
loopne
inc
fwait
jo
mov
ds
xchg
dec
add
pop
arpl
fidivrs
mov
pop
jnp
fldl
orb
dec
mov
ss
and
dec
pop
xor
pushf
inc
lds
hlt
mov
push
mov
mov
out
out
xor
ja
lcall
movsb
iret
bound
sbb
in
iret
addl
aaa
in
jecxz
ljmp
mov
arpl
xchg
pop
push
sbb
sahf
pusha
xchg
test
mov
sub
cmp
mov
xorl
imul
cli
loop
cld
dec
sbb
lea
movsl
xchg
dec
icebp
mov
ret
push
shlb
ror
movsb
pusha
inc
cmpsb
xlat
or
cmpsl
mov
jae
inc
test
retw
inc
cmpsl
fwait
stc
xchg
cld
inc
into
mov
fcmovu
inc
in
sti
sbb
imul
popa
inc
mov
mull
xchg
pop
add
mov
sti
test
roll
mov
pop
loopne
ret
lods
xchg
cmp
jecxz
ret
push
fcompl
inc
mov
mov
int
mov
repnz
jnp
data16
sub
mov
lret
daa
int
dec
in
cli
mov
arpl
dec
in
pop
mov
loope
repz
aad
add
out
push
cmp
xor
push
inc
lea
inc
dec
movsl
rorb
mov
ds
fisubrs
fsubp
imul
inc
xor
jecxz
imul
mov
lcall
iret
sbb
mov
xchg
popf
xlat
fdivr
pop
cmpl
mov
inc
xchg
jp
xchg
jp
mov
push
mov
cmpb
int3
inc
jge
mov
lfs
mov
outsb
cmpsl
cmp
sbb
jno
and
imul
in
test
and
mov
inc
fsubp
add
mov
adc
out
cmp
testb
and
pop
shll
sub
push
sbb
shlb
cmp
mov
into
mov
sbb
or
imul
xor
aam
push
shlb
or
cmp
cwtl
jo
and
push
popf
and
push
and
sbb
lret
sti
add
adc
cmp
mov
xchg
push
adc
and
jge
mov
jb
adc
pop
fstpt
mov
jge
jmp
inc
into
repz
mov
loope
insb
hlt
push
cmp
addr16
and
insl
push
imul
adc
add
cmp
mov
mov
inc
push
lea
loopne
add
fstps
mov
mov
hlt
fcomps
xorl
add
int3
jb
mov
jnp
or
add
mov
jmp
cwtl
lcall
mov
or
xor
pop
and
sti
xchg
mov
movsl
mov
sbb
pop
sbb
jno
xchg
pop
outsb
add
js
mov
hlt
and
leave
cmpsb
pop
jno
inc
mov
mov
inc
into
roll
push
out
in
rclb
loopne
push
jle
xchg
mov
mov
fld
popa
dec
lahf
aad
jo
sbb
jg
idivl
cwtl
xchg
xchg
cld
dec
and
addr16
sub
fs
xor
adc
jp
pop
or
and
or
into
sbb
xor
mov
lret
pop
hlt
pop
test
stos
lods
and
adc
aaa
push
lret
cmpsb
xor
pop
pushl
cmp
fldenv
iret
insb
movsb
add
and
xor
adc
xchg
or
cs
out
fsts
xor
aaa
mov
in
mov
xchg
test
outsb
cwtl
insl
push
jb
repnz
lock
pusha
xchg
fstps
repz
test
fisubrl
lods
pop
insb
js
fistps
jmp
sbb
mov
jg
sar
pop
and
push
addr16
movsl
and
xlat
sarl
bound
hlt
cld
mov
mov
nop
mov
sbb
clc
lret
cwtl
jecxz
inc
inc
dec
cmp
mov
jge
or
lods
xlat
push
ljmp
pop
stc
clc
test
fs
pop
insl
sub
les
in
dec
lret
pop
addr16
sub
pop
sysexit
scas
push
dec
adc
aas
adc
sub
sbbl
leave
lea
mov
ds
fs
sbb
ret
push
cmp
bndstx
mov
subb
xor
sbb
mov
loop
inc
adc
jbe
mov
sub
jo
push
mov
jb
pop
les
bound
lods
cmp
sub
aad
int
pusha
adc
and
sub
sti
pop
inc
mov
inc
xchg
dec
pop
or
mov
ficomps
cs
js
mov
loope
arpl
mov
pusha
mov
cmp
lods
add
aas
mov
mov
lret
pop
ret
sub
in
xchg
xchg
xchg
pushf
call
jbe
and
les
mov
jle
xchg
sbbb
bound
lods
es
loop
aam
into
popf
pop
into
inc
int3
hlt
icebp
mov
lods
sbb
mov
mov
loopne
dec
pop
lret
fs
push
sbb
or
pop
mov
cwtl
add
jge
add
insb
aam
cmp
jl
daa
push
jno
xchg
cltd
push
add
sbb
inc
add
xor
or
lret
stc
xchg
movsb
cmp
mov
add
addb
enter
add
inc
pushf
or
dec
mov
xchg
imul
xor
inc
jecxz
shrl
mov
xlat
test
lret
out
cs
lods
arpl
xor
testl
sbb
push
outsb
push
addr16
xchg
bound
cmp
cmpsl
das
or
shl
out
pop
lea
sub
dec
xchg
cld
add
in
mov
sbb
lds
pop
jg
pop
sbb
add
lds
adc
add
cmp
mov
nop
int
das
xchg
shr
in
mov
xchg
jbe
insb
or
dec
cli
xchg
push
roll
cmpsl
mov
adc
cltd
push
or
cmp
jno
add
or
movsb
or
mov
ja
outsl
and
je
dec
popa
and
das
jle
stos
jecxz
xlat
mov
add
loope
inc
jg
push
mov
sbb
fidivs
incl
push
lods
pushf
lods
stos
ss
call
test
inc
and
in
push
sti
test
pop
or
mov
dec
mov
cwtl
les
push
adc
cmp
cmp
sub
cwtl
pop
sub
mov
add
cmp
cltd
lret
cmp
push
test
faddl
xchg
pop
mov
xor
inc
or
adc
mov
stc
inc
add
mov
push
xor
les
mov
out
in
jecxz
cli
cmp
clc
sbb
jl
dec
sub
rorl
pop
cmp
in
mov
add
stos
lret
sbb
mov
and
fstps
test
dec
jp
mov
xchg
flds
icebp
dec
jo
pop
push
dec
mov
out
lods
in
cli
addr16
mov
sub
mov
xor
inc
push
dec
add
outsb
orl
in
outsb
cmp
call
ja
lcall
inc
jae
aas
cmpsl
arpl
inc
push
adc
xor
xchg
fidivs
mov
clc
mov
xor
sub
scas
popf
push
mov
movsl
pop
aam
enter
xchg
push
stos
mov
push
lret
push
mov
loopne
or
xor
push
mov
mov
int
jp
repnz
mov
cld
mov
mov
push
mov
xlat
pop
insb
mov
call
add
add
push
jg
xor
mov
dec
and
inc
lods
fidivl
pop
dec
push
inc
jle
aam
mov
mov
dec
jnp
inc
fimull
lret
sti
sbb
into
out
fbld
push
scas
sub
add
loop
subb
pop
movsl
push
mov
add
cmp
cmp
jge
cmp
loop
inc
lcall
push
dec
shrb
cld
mov
mov
into
ss
mov
div
jg
mov
mov
cmp
jb
es
fdivl
faddp
les
in
mov
jecxz
push
adc
ret
cld
mov
mov
push
jmp
or
outsl
push
add
jp
aas
cld
jecxz
ret
mulb
stos
arpl
dec
inc
mov
cs
push
sbb
test
or
leave
mov
mov
mov
cs
repz
insb
push
stos
mov
push
out
fistpl
out
jae
ss
addl
sbb
mov
out
inc
or
cmp
mov
xlat
mov
xchg
xlat
andl
jg
sub
mov
outsl
movsb
sub
test
sti
and
enter
repnz
or
test
sbb
mov
dec
sarb
cmp
lock
pop
shll
lret
add
pop
int3
jmp
int
cltd
jae
cmp
mov
pop
out
nop
nop
mov
pop
clc
jbe
rol
sbbl
adcb
das
xchg
jnp
mov
add
mov
pop
movsl
adc
jg
xchg
mov
xchg
jae
daa
and
scas
add
not
data16
bound
or
or
ljmp
cmc
mov
sub
inc
push
or
add
pop
cmp
cs
inc
push
ds
dec
stos
jmp
xor
or
test
pop
or
cmpsl
pusha
xchg
fstpl
add
xchg
rcrb
scas
inc
mov
fsubrp
mov
cld
nop
jo
leave
push
jmp
pop
ja
cli
int
rolb
or
pop
rcl
stos
push
jnp
icebp
sbb
testl
jb
dec
push
sti
jecxz
rcrl
inc
mov
jecxz
adc
or
sbbl
mov
cmc
xchg
rcrl
rcll
cmp
ret
enter
loopne
dec
mov
xor
insb
lods
in
test
fistpll
fs
dec
and
pop
gs
es
jg
adc
mulb
inc
insb
sub
xchg
mov
and
test
movsl
pop
xor
cmp
sub
in
adc
mov
sbb
mov
cld
cltd
lret
push
imul
ljmp
push
scas
jb
daa
cltd
dec
cltd
dec
inc
jbe
sbb
fmull
adc
or
ja
dec
inc
or
popl
mov
orb
bound
stc
sub
in
movsb
mov
adc
jo
inc
jmp
xor
lret
das
and
fsubl
or
dec
stc
insb
loope
xchg
mov
sahf
sbb
jno
adc
repz
aaa
call
out
movsb
pop
push
ds
movsl
mov
sub
fists
jmp
jo
mov
inc
sub
stos
dec
mov
insl
push
inc
int3
fdivr
cmp
dec
clc
jp
dec
or
cld
pop
cmpb
incl
push
jne
adc
inc
rcr
pop
aad
rcrb
call
xchg
inc
lds
push
jns
test
or
popf
subb
mov
mov
add
imull
or
cmc
sti
and
icebp
subw
xchg
sub
mov
ret
scas
mov
int
sub
lahf
out
jp
mov
jle
mov
sub
xchg
sbbb
add
pop
push
and
jo
cmova
cwtl
out
sbb
and
inc
je
ret
or
inc
bound
cltd
cld
imul
jb
and
mov
loopne
lret
cmpsb
fidivs
lods
sbb
clc
cmp
in
jmp
mov
repz
and
pop
popf
into
cmc
orl
sub
adc
bound
in
or
push
mov
fimull
gs
scas
add
lock
shlb
adc
pop
inc
loop
xchg
daa
lock
es
mov
or
lret
lcall
adc
jo
pop
lock
push
std
int3
inc
mov
push
in
xchg
xchg
ficomps
cld
loope
mov
xor
xor
pop
jle
imul
out
pop
sbb
mov
push
ja
or
jg
cmp
daa
cwtl
sub
sbbl
js
movaps
lods
dec
mov
es
push
adc
push
shrl
pop
movsb
fcoml
dec
push
mov
shlb
das
test
test
pushf
add
lret
xor
lods
mov
ficoml
mov
xor
mov
or
adcl
in
ds
lahf
xor
rol
or
push
int
aad
daa
subb
sbb
js
push
add
les
pop
pop
inc
mov
push
or
dec
push
xor
push
sti
mov
fdivs
int3
aam
cmp
aas
adc
adc
pop
loopne
xchg
pop
insl
push
fldt
mov
cmp
aam
dec
mov
jle
cmp
adc
ret
fs
jae
jno
xor
ficoml
scas
mov
loop
aad
jmp
xor
cmp
das
pop
jnp
lods
sub
add
pushf
imul
ljmp
mov
js
loop
adc
fidivrs
sbb
jecxz
out
jecxz
push
or
xchg
jg
mov
add
in
dec
lock
lods
adc
cmp
jae
jecxz
pusha
loopne
adc
adc
icebp
nop
fcomps
xchg
adc
mov
sub
aad
jge
iret
mov
les
or
outsb
out
cmp
and
mov
call
and
mov
xchg
add
mov
popf
shrl
lret
pop
adc
mov
cs
xor
adc
in
scas
lcall
cld
push
movsb
pop
push
out
es
call
ja
jo
loope
dec
dec
jne
cltd
rcll
lds
push
nop
rcrb
sbb
leave
and
push
stos
cmp
je
rcr
xor
inc
adc
jmp
js
xchg
push
push
cmp
xchg
mov
push
inc
pop
cmp
cli
add
push
mov
push
dec
xor
push
in
addr16
cmpsb
movsl
ds
icebp
xchg
mov
dec
sub
jecxz
sbb
int
cld
or
daa
daa
sbb
repz
outsb
mov
decl
xchg
mov
and
inc
enter
scas
dec
out
out
pop
mov
and
pop
sub
jnp
or
aad
cmp
pop
or
push
in
cmp
call
push
div
popf
data16
add
jbe
nop
scas
gs
les
push
enter
push
icebp
mov
hlt
fistl
in
mov
jns
daa
idivl
xchg
imul
jmp
ret
addr16
and
xor
dec
inc
or
repz
jnp
scas
jmp
lret
xchg
jle
imul
cmp
xlat
iret
xlat
fiadds
outsb
xchg
fwait
mov
add
dec
or
xor
xchg
shrl
jg
out
rorl
xchg
jns
pop
mov
out
sbb
scas
mov
cmp
mov
leave
mov
inc
es
ja
pop
out
pushf
fwait
xor
cmpsl
pop
loop
sti
arpl
add
roll
shlb
rep
aaa
cld
cmp
ret
dec
shrl
sub
push
jno
imul
mov
mov
cmpsb
pop
call
inc
loope,pt
dec
jmp
mov
xchg
cmpsl
jnp
dec
push
fbstp
in
shrb
bound
xchg
pop
and
xor
xchg
and
aas
testl
dec
push
dec
ss
test
xor
shll
mov
lock
adc
pushf
repz
ja
cmp
mov
cld
sub
ficompl
inc
dec
xchg
xlat
xchg
sbb
movsb
ja
jb
mov
xchg
mov
clc
iret
sub
or
cmp
das
push
lahf
push
std
pop
adc
icebp
pushf
sbb
mov
or
fidivs
cld
aam
jg
sub
pop
push
out
jp
pop
mov
bsr
sub
inc
shll
jp
xchg
fidivl
mov
dec
mov
jne
fstpl
and
inc
inc
mov
ret
pop
jle
lock
iret
lret
mov
sub
incb
mov
je
push
or
into
mov
or
jle
in
int
mov
or
fnsave
fcoml
jmp
pop
gs
enter
pop
sarl
insl
shlb
outsl
xor
lods
fwait
pop
adcl
add
add
mov
mov
rclb
cmpsb
mov
in
jnp
mov
jecxz
jge
les
nop
sbb
dec
pop
inc
insl
mov
ljmp
fsts
addl
mov
mov
pop
adc
push
push
js
pop
or
pop
sbb
fimuls
ss
nop
lock
mov
push
sarl
jne
sbb
and
add
push
ret
out
faddl
sbb
push
fcmovne
out
mov
pop
outsb
mov
sub
or
push
sub
cmp
es
push
mov
jns
nop
stos
mov
inc
iret
shrb
push
out
testb
leave
mov
add
decl
inc
cltd
adc
flds
jns
sti
lods
jge
add
out
icebp
jbe
nop
pop
dec
ja
ficoms
paddsb
inc
xor
sbb
andb
stos
test
adc
cli
call
lods
stc
push
mov
push
aas
jae
idivl
cltd
mov
movsl
jl
xor
stc
pop
aas
xchg
sbb
cltd
pop
rorl
pushf
rcll
mov
or
popa
sahf
shrl
leave
ret
inc
pop
lds
jmp
dec
cltd
lret
subb
sarb
ss
jns
test
ja
ljmp
mov
daa
inc
fsts
xchg
sub
adc
out
idivb
aam
cwtl
mov
shlb
leave
inc
xchg
dec
call
loop
popf
arpl
in
xor
sub
cld
bound
out
aaa
push
in
push
inc
dec
cmp
xor
ja
sbb
ds
ljmp
sbbb
inc
mov
jle
sti
arpl
or
mov
xor
sbb
loopne
out
adc
sbb
dec
xchg
fwait
pop
pop
mov
loope
pusha
rcrb
add
js
stc
push
movsb
cmpsb
nop
sub
sahf
mov
test
jl
aaa
push
sti
movsl
movsl
jle
inc
inc
imul
xchg
push
sbb
rorb
pushf
std
mov
stos
ja
mov
hlt
xchg
jae
push
loop
rep
lea
int3
jno
shrb
stos
mov
and
sbb
push
jmp
mov
and
shrb
mov
xchg
cmp
mov
jne
lcall
ds
xchg
lods
andb
jmp
jmp
mov
xorl
adc
xchg
xor
mov
leave
outsl
push
test
jnp
mov
sub
stc
ror
int
in
jp
jp
push
das
pop
sbb
loop
leave
xor
cmp
add
pop
mov
fildll
cld
inc
fwait
mov
inc
sub
aam
xchg
mov
mov
push
pop
adc
es
test
fistps
rcr
mov
mov
jecxz
pop
jnp
jecxz
popf
mov
add
mov
ljmp
xor
pop
jmp
mov
and
pop
daa
inc
jnp
push
fisubrs
jmp
hlt
mov
in
mov
bound
xor
adcb
cmpsl
rcr
jp
cli
cli
adc
mov
or
das
fmuls
aas
pop
loopne
cmp
mov
xor
pop
jp
popa
rcrb
js
and
mov
xor
inc
pusha
mov
jle
jp
push
test
ds
xor
pop
insb
into
dec
add
in
jo
rcr
mov
clc
mov
mov
cmp
jl
mov
into
test
icebp
pushf
cmp
pop
lret
and
int
mov
and
adc
addr16
or
shrb
and
pop
jo
cmc
aaa
jmp
dec
sub
popa
xor
loope
repz
inc
mov
in
and
popf
xchg
inc
or
repnz
shlb
jae
aas
adc
push
cmp
in
stos
add
movsl
cmpsl
idivb
insb
lods
ficoml
hlt
mov
shl
je
add
aad
xchg
loope
jp
lret
push
jmp
mov
in
pop
inc
push
js
sub
pop
popa
sar
and
ret
out
in
daa
xor
jns
imul
ljmp
cld
and
and
jnp
xchg
pop
xor
adc
and
ljmp
push
or
aaa
add
fists
and
iret
scas
movsb
sub
add
lahf
xchg
lea
and
lahf
jle
mov
addb
sbb
push
lret
dec
add
mov
or
mov
int
sub
clc
add
fistpl
cmpsl
sbb
inc
in
add
pushf
mov
mov
and
hlt
push
push
dec
dec
into
or
retw
add
and
add
pop
sub
dec
or
out
or
jns
out
dec
mov
inc
inc
mov
aam
mov
icebp
insb
stc
and
xorb
fisubl
lock
push
push
sti
add
jmp
mov
lcall
adc
jmp
sahf
cmp
shrl
or
jp
push
cmpsl
scas
xchg
scas
sbb
and
and
and
lea
pop
fnstcw
and
stc
dec
mov
inc
dec
jnp
iret
stos
push
sarl
mov
sub
mov
stos
add
xchg
add
aad
out
fcomp
cld
xchg
test
lcall
divl
jbe
rclb
cmpsl
and
mov
or
aaa
cmp
pop
mov
xchg
lret
movsb
xor
jne
mov
out
dec
out
mov
rcl
pop
fimuls
mov
je
xor
aaa
mov
pop
mov
insb
add
or
dec
xor
add
test
pushf
mov
jne
mov
int
cld
data16
nop
jne
push
xchg
lods
jbe
ljmp
mov
jbe
inc
ret
addr16
and
add
shrb
stos
jno
fidivl
push
std
jmp
sub
adc
rclb
test
xor
dec
int
xchg
cmpsb
add
cli
jae
mov
inc
inc
test
lea
inc
scas
cmpsl
mov
arpl
in
test
cmpb
mov
faddp
cmp
loopne
mov
sbb
sub
cs
cld
mov
rclb
cld
sub
lahf
rclb
out
mov
ret
fadds
stos
gs
and
repnz
jne
fisttps
add
mov
scas
mull
shrl
push
adc
push
insl
addr16
mov
xchg
cmp
adc
test
add
sub
sub
inc
movsb
int
bound
pop
pop
add
mov
std
scas
fisubrs
js
call
jle
mov
mov
test
jae
dec
xchg
or
jge
or
jle
movsb
lret
or
shlb
inc
test
push
pop
lahf
inc
jmp
adc
mov
sti
pop
mov
movsb
xor
xchg
and
ja
cltd
dec
lcall
jge
int
sub
test
push
pop
mov
shll
shrl
fwait
inc
mov
mov
mov
loopne
bound
ljmp
mov
repnz
cmp
cmc
loope
lods
and
leave
cltd
adc
dec
mov
js
mov
fs
sub
dec
xor
pop
or
mov
xchg
mov
fs
cld
jecxz
cmp
out
fimuls
subl
fs
add
cmpsl
adcb
ret
fcoms
sub
lods
lds
roll
test
jle
in
imul
push
repnz
dec
popa
repz
jo
testl
mov
std
shlb
push
dec
movsl
push
mov
pushf
bound
stos
jg
pop
dec
les
insl
decl
outsb
mov
jo
add
lods
push
jge
ret
push
push
call
sbb
es
movsb
bound
fucomip
xchg
lret
cmp
mov
or
cmpsl
dec
in
push
xchg
aad
dec
push
ss
int
lock
xor
dec
cmp
rolb
dec
test
cmp
mov
inc
push
mov
push
sub
xlat
pop
and
dec
test
rcl
inc
xchg
sub
repz
xchg
pusha
imul
pop
pop
in
mov
add
mov
dec
leave
nop
movsl
stos
sarb
sub
mov
stc
aad
sub
mov
or
std
ljmp
ja
adc
loopne
xchg
mov
sub
stos
cmp
in
ret
mov
aam
sub
daa
lods
icebp
testb
xchg
lods
popa
and
adc
xchg
inc
orl
sbb
mov
fdivl
xchg
xor
ljmp
pop
dec
pop
in
aad
mov
push
fstl
bnd
aad
movsl
dec
pop
jbe
push
jg
mov
je
xchg
dec
mov
js
mov
fstpl
sub
or
jbe
adc
fsin
fisttpll
stos
fs
imul
jae
inc
sub
es
pop
scas
add
fildl
xchg
and
jbe
fnstcw
clc
and
and
into
sub
xchg
testl
cld
rorb
jmp
push
pop
insl
inc
or
sbb
mov
shlb
aad
add
ja
mov
out
mov
inc
jl
cli
leave
adc
call
xchg
push
mov
inc
adc
and
mov
pusha
sti
int3
or
sbb
inc
push
cltd
sub
outsb
cmpsl
loop
xor
test
add
pushf
sub
mov
fisttpl
cmp
and
adc
lret
subb
enter
sub
and
jo
xchg
out
incb
dec
out
incb
xchg
stos
shll
cmp
push
adc
stc
scas
xchg
cwtl
movsl
popf
test
or
aad
push
inc
imul
or
lds
mov
adc
out
pushf
mov
in
out
sbb
js
and
iret
in
cld
xor
in
pop
and
les
fstl
or
stos
mov
pop
enter
jnp
cmp
popa
xchg
xchg
mov
test
sbb
add
push
lret
add
out
addr16
inc
adc
std
push
popl
inc
cmp
aaa
das
or
mov
pop
cmp
push
mov
cmpb
xor
aas
mov
adc
outsb
test
movsl
jnp
mov
mov
mov
adc
lahf
ds
outsl
or
xchg
loopne
fwait
leave
mov
pop
jle
jno
adc
mov
lret
orps
inc
xor
and
iret
or
call
ljmp
cli
mov
jmp
pop
shrl
or
push
and
sbb
adc
adcl
sub
pop
cmc
mov
fadds
jmp
adc
iret
sub
lock
pop
lcall
xchg
lods
imul
in
inc
dec
jo
sarb
fucomp
jo
or
fldt
insb
ret
sub
push
testl
shrb
ffree
sbb
inc
in
push
push
lret
outsb
incl
mov
lahf
sbb
pushf
shll
mov
fcmovne
das
push
ds
out
mov
into
pop
aad
push
adc
out
stos
popf
push
or
push
adcb
push
jmp
mov
or
and
js
lds
fbld
in
movsl
pop
fldl
pop
add
dec
push
mov
push
jmp
incb
mov
and
mov
push
and
std
xlat
addr16
and
jno
jmp
add
pop
in
sahf
dec
and
jno
or
dec
jp
stc
and
mov
lret
leave
add
dec
ret
inc
popf
inc
cmc
mov
sub
testb
test
iret
xor
bound
adc
icebp
sub
pop
out
push
int
aaa
test
push
sbb
outsl
mov
xchg
mov
or
in
mov
pop
repz
cmp
lcall
dec
cmp
movsl
dec
inc
or
mov
dec
push
out
push
xchg
pop
xchg
in
add
adc
push
faddp
dec
inc
dec
mov
mov
lods
test
adc
cld
aaa
mov
xor
test
pop
adc
push
jmp
aaa
dec
adc
lock
lds
dec
dec
mov
outsb
popa
mov
sub
adc
and
push
mov
mov
out
jg
sti
xchg
mov
gs
jp,pn
mov
loop
sbb
fwait
aaa
xchg
mov
inc
scas
xlat
xor
pop
ljmp
pop
mov
popa
jno
inc
rolb
aad
push
add
loopne
jae
lock
dec
dec
sbb
popf
dec
shl
lods
fwait
jmp
stos
cmp
add
adc
mov
cmp
ret
js
and
in
nop
fwait
jae
bound
xchg
fsub
jecxz
push
xchg
vmovss
jae
adc
push
and
popf
dec
mov
fs
mov
enter
mov
ja
inc
mov
push
cwtl
mov
icebp
daa
ss
arpl
or
insb
sbb
js
cmpsl
push
pop
push
xor
dec
pop
arpl
push
out
push
add
daa
sar
insl
outsb
stos
dec
iret
fwait
loopne
lock
and
cmp
pushf
dec
mov
pop
jo
jae
imul
fadds
das
xchg
stc
mov
rcrb
pop
adc
sahf
adc
clc
mov
add
adc
add
mov
mov
iret
bound
add
add
movsb
aad
xor
add
push
jge
ja
mov
mov
pushf
subb
jmp
in
jge
stc
xor
hlt
jecxz
mov
xchg
aam
sub
mov
pop
inc
pop
call
xchg
ljmp
lret
out
add
das
lahf
dec
call
push
ret
pushf
xorl
adc
push
mov
mov
and
andl
pop
rolb
adc
test
mov
jnp
je
jmp
cmp
pusha
repz
cmp
pop
and
gs
not
push
sub
add
push
or
or
stc
fcompl
notb
shll
sbb
mov
cld
ljmp
xchg
fs
jg
sarw
inc
loope
push
inc
adc
loopne
aad
lahf
loop
xchg
mov
sbb
mov
adc
fs
pop
cmp
mov
inc
push
scas
pop
test
pop
pusha
into
push
int
jge
add
sbb
cltd
ret
xlat
jae,pn
fnstsw
xor
popa
in
sbb
mov
sbb
lcall
dec
and
xchg
mov
les
adc
xor
nop
ret
lret
inc
mov
xchg
sbb
insl
arpl
pop
push
cmp
jecxz
js
jne
xchg
cltd
jo
add
ljmp
out
cmp
sbb
pop
add
fidivrl
xor
stc
mov
xlat
call
test
push
inc
mov
imul
ss
movsl
js
arpl
add
sub
sub
cli
push
fwait
mov
stos
mov
jl
stos
idivb
aad
aam
dec
add
jge
jo
in
jns
lods
mov
scas
cmp
rol
out
pusha
xor
cld
fists
dec
cmp
scas
ret
sub
sbb
daa
mov
mov
push
mov
int
scas
push
mov
mov
movsb
cwtl
fstps
dec
push
dec
add
dec
idivl
mov
mov
into
adc
add
aaa
fsubl
pop
cmpsb
jecxz
cmp
jg
and
int
xchg
xchg
and
aaa
fstp
mov
xchg
and
jae
push
insl
les
mov
or
call
mov
sub
sub
lock
cmp
pop
jo
jae
mov
mov
in
lcall
cmpsb
push
je
inc
imul
inc
dec
pop
push
lods
push
cmp
lret
daa
mov
hlt
sub
adc
in
add
ror
lods
adc
xchg
add
and
lret
cli
adc
dec
mov
jb
mov
jbe
loop
sahf
push
insl
inc
xor
sbb
std
lds
in
xor
test
mov
es
dec
cmpsl
lcall
or
adc
pop
dec
pushf
mov
dec
in
or
fisubl
jns
in
mov
sub
and
popf
in
stos
aas
adc
aam
mov
inc
out
ljmp
jo
pop
jns
xchg
xchg
or
jecxz
mov
pop
test
mov
xchg
adc
and
mov
out
push
insb
xor
push
add
das
aam
inc
mov
pushf
mov
or
jle
inc
loope
jbe
mov
pop
cltd
jge
inc
test
out
push
ds
lods
es
pop
shll
and
xchg
push
push
mov
inc
push
pop
iret
imul
mov
shll
jl
in
rcrb
jl
scas
mov
lock
dec
into
out
xor
and
inc
rol
mov
fbstp
xor
mov
nop
mov
jne
cmpsb
std
xor
xchg
cmc
adc
xor
mov
add
ljmp
fs
xchg
mov
add
and
or
sbb
fldl
add
loopne
outsl
movsb
push
popf
out
mov
push
adc
pop
pop
aad
jge
push
fldcw
ds
popf
pop
adcb
shrb
int3
dec
pop
sub
pop
xor
jp
xor
out
ret
jo
fnstenv
mov
dec
dec
inc
sarb
cs
jb
mov
lock
add
imul
add
pop
mov
inc
mov
mov
aam
loopne
jp
pusha
mov
mov
push
lret
repz
add
mov
popf
adcl
dec
jp
cld
or
pop
mov
or
rorb
lret
inc
sbb
pop
pop
pop
dec
adc
jns
sti
imul
test
sar
lret
xor
pop
hlt
es
ds
mov
ja
test
outsl
adc
jmp
lret
push
aam
xchg
inc
bound
xchg
mov
dec
jecxz
adc
and
and
popf
pop
in
sub
mov
xchg
add
divb
lods
repnz
out
jb
push
testl
icebp
jle
push
xor
loopne
mov
xor
xchg
xor
insl
fidivrs
or
jns
test
push
stos
mov
out
repnz
gs
xchg
outsl
push
dec
test
or
xlat
popf
shrd
sbb
jge
push
push
push
pop
lret
pop
in
mov
mov
fwait
adc
xchg
adc
aas
and
cmp
lods
pusha
and
fmuls
inc
xlat
lahf
nop
xchg
jae
pusha
xchg
and
push
in
mov
jno
aam
jne
jl
push
sbb
std
shll
mov
fdivrs
int
inc
lods
and
stc
dec
xchg
pop
fwait
aad
mov
std
xor
jmp
ds
inc
stc
lock
pusha
iret
dec
xchg
cmpsb
dec
cmp
mov
dec
mov
mov
adc
jnp
cmpsl
ret
pop
pop
pop
xchg
scas
sub
dec
and
cmp
rcr
xor
mov
mov
sahf
push
cmpsl
bound
or
outsb
push
pop
test
cmpsl
in
jae
mov
mov
xor
cli
subb
loope
and
cmp
sbb
test
ja
or
dec
mov
push
sbb
jecxz
shl
aam
call
lock
adc
xor
adc
lret
adc
ret
inc
mov
jmp
jns
sbb
sub
pop
stos
xchg
int3
test
lret
ja
pop
bound
hlt
clc
ss
mov
mov
les
les
dec
jo
aaa
mov
bound
mov
fdivrl
inc
sub
adc
lods
xchg
add
scas
je
cs
inc
cmp
mov
and
mov
frstor
jg
scas
and
mov
mov
out
daa
int3
mov
popa
adc
out
dec
out
mov
xchg
js
adc
repnz
xchg
cli
mov
loopne
xchg
mov
jbe
xchg
jg
movsl
mov
xchg
push
mov
jbe
jmp
dec
pop
push
mov
dec
loopne
inc
pop
int3
sub
xor
out
movsl
sub
pop
push
dec
add
cmp
dec
notb
push
es
cli
arpl
scas
iret
out
fwait
std
or
rcrb
pop
into
push
and
lahf
push
in
loope
xchg
xor
and
jmp
sbb
cmp
add
loopne
mov
xchg
mov
adc
loop
xor
xor
mov
hlt
sbb
pop
cmc
inc
popf
inc
and
mov
movsl
mov
fs
pop
xlat
test
mov
rcr
sub
pop
out
xchg
mov
mov
rcl
popf
inc
jb
fisubs
icebp
lret
fisubs
push
popf
jp
fwait
xor
arpl
add
nop
xchg
jnp
mov
push
call
add
push
fldt
sbb
insl
andl
das
ret
les
sub
mov
xor
movsl
je
xchg
daa
call
in
nop
sub
mov
stos
andb
pushf
xchg
cmp
cs
jne
inc
xor
sbb
out
mov
loope
int
pop
cli
andl
outsl
inc
inc
adc
in
cs
out
add
fildll
lods
shr
int
dec
popa
xchg
push
popf
loope
ja
inc
shr
mov
add
dec
rcll
js
or
sahf
call
aas
sbb
or
mov
rcrb
push
xchg
mov
jg
xchg
pop
lret
and
pop
xor
sub
sbb
popf
adc
jae
in
inc
dec
popf
mov
aaa
sar
pop
notl
loopne
xchg
lahf
xchg
xchg
xchg
cltd
cmp
mov
out
cmpsb
in
sahf
mov
mov
ds
cmc
cmp
inc
sahf
enter
repnz
add
push
call
in
and
sub
cmp
cmpsl
inc
insl
dec
pop
mov
lods
mov
rcr
or
enter
sbb
sarl
popa
cld
sub
into
sub
jge
push
fadds
pusha
xor
repz
es
in
mov
lods
push
dec
xlat
xchg
xchg
inc
dec
mov
sub
lcall
shl
or
or
push
adc
stos
loope
mov
add
arpl
sbb
out
stos
or
push
in
cmp
mov
push
fcomi
stc
bound
je
sti
cmp
loop
xor
lock
addb
sahf
mov
jns
sub
in
mov
mov
jg
sahf
jecxz
ret
dec
lcall
cwtl
data16
inc
test
push
mov
adc
mov
inc
jp
jmp
jmp
aad
push
repz
cs
mov
daa
stos
test
xchg
xor
cltd
jae
jns
inc
mov
sbb
test
and
inc
fwait
shrb
mov
and
jecxz
inc
pop
andl
mov
inc
xor
sbb
sarl
jle
xchg
dec
jno
inc
lock
and
and
xor
sub
inc
jo
sbb
clc
imul
push
push
in
pop
xchg
clc
mov
movsb
mov
aad
lret
xchg
push
aad
mov
pop
push
sbb
push
testl
addr16
outsl
sbb
jmp
shlb
arpl
cmc
sbb
in
lret
es
test
cwtl
inc
and
insl
push
add
shll
outsl
sub
aam
scas
int3
nop
mov
or
sahf
lods
mov
scas
sub
push
addr16
jbe
mov
push
shlb
pop
movsl
leave
xor
enter
cltd
shlb
test
ss
popa
pop
adc
pop
shrb
mov
pop
ja
pushf
incb
jecxz
rcrl
add
jge
lret
adc
pause
imul
cli
fsubrl
jge
jae
push
xchg
dec
jae
jnp
dec
ja
bound
data16
xchg
aam
test
sbb
sub
lahf
divl
addb
jle
add
ret
negl
out
loop
cmc
outsl
jb
orl
int3
xor
xor
push
dec
or
xor
adc
lcall
and
jg
sbb
sub
in
sub
mov
jp
test
inc
fsts
or
xchg
addl
outsb
arpl
data16
pushf
stos
enter
xor
leave
mov
leave
test
and
fcmove
cli
icebp
push
bound
ds
cmp
push
jnp
dec
adc
daa
inc
mov
and
pop
jp
gs
rolb
jg
inc
cmp
in
sbb
inc
or
std
int3
mov
mov
enter
add
in
sbb
fwait
and
test
pushf
push
mov
ret
lods
out
mov
mov
xor
inc
push
mov
mov
or
jge
std
pop
mov
xchg
adc
inc
dec
mov
fwait
iret
in
fs
sbb
adc
mov
xor
fcos
aas
pop
add
jbe
testl
and
mov
repnz
shr
fidivl
pop
mov
sub
sbb
ja
sub
jb
xor
push
cmp
adc
inc
stos
js
xchg
aam
adc
jno
icebp
cmp
lret
dec
pop
repnz
push
cmp
stos
mov
sub
movsb
xchg
repnz
adc
pop
jl
icebp
mov
dec
ret
sbb
out
sbb
lcall
pop
shrl
jmp
mov
or
and
aad
pop
mov
and
aas
xchg
je
mov
outsl
adc
ror
inc
imul
sti
popa
mull
pop
add
aas
or
or
es
mov
fsubr
cmp
pop
xor
jg
xlat
test
cmc
jno
push
outsl
inc
fists
sbb
inc
loope
cmp
and
mov
imul
push
mov
lods
popa
rcrb
xchg
lahf
cmp
sub
smsw
das
mov
repz
sbb
mov
sub
pop
xor
sub
stos
pop
adc
out
add
test
mov
outsl
mov
bound
fstl
aad
sub
or
pop
mov
and
mov
and
ret
cltd
loope
add
in
mov
mov
xor
in
sbb
add
shll
scas
hlt
sbb
xor
mov
inc
push
fwait
xor
pop
xchg
pop
sbb
cmp
clc
popa
int
mov
gs
cli
daa
jl
ds
lahf
xchg
fidivs
lods
add
nop
aad
clc
add
icebp
aaa
mov
movl
js
aad
push
cmp
pop
xchg
mulb
cmp
icebp
sub
imul
dec
xor
movsl
cmpsl
int
iret
jne
dec
xorl
shrb
jmp
addl
lds
imul
or
test
lock
repnz
sub
sub
enter
mov
dec
loopne
cld
sbb
and
ror
shl
in
mov
xchg
fwait
push
cmp
icebp
hlt
mov
ret
mov
out
add
enter
loop
stc
ja
xchg
subl
adc
test
gs
shrl
imul
leave
ud1
and
mov
inc
push
inc
pop
std
push
adc
sti
adc
mov
mov
lret
lcall
sub
jbe
add
fstpt
mov
mov
out
xor
pop
neg
pop
ss
dec
sub
mov
add
outsb
jge
push
adc
into
jp
adc
test
mov
pop
bound
ds
mov
jne
mov
jo,pt
jg
mov
aam
dec
sbb
mov
jmp
mov
dec
mov
data16
inc
inc
sar
xorl
mov
sub
cmp
shll
cmpsb
test
popa
xorl
inc
mov
xchg
or
adc
dec
fwait
shrb
or
mov
data16
dec
sti
gs
fstpt
fsubrs
mov
decl
mov
sbb
call
mov
xchg
cld
pop
jo
lods
ret
mov
push
xchg
or
enter
pop
sbb
jae
mov
aam
inc
mov
mov
pop
inc
jo
stc
lret
ds
adc
imul
negb
xor
stc
xor
dec
or
mov
sbb
jle
mov
jbe
push
or
cmp
and
shll
mov
add
pop
inc
xlat
sub
jno
mov
mov
pop
sbb
push
push
or
movsl
xchg
add
mov
mov
adc
imul
xchg
je
push
rcrl
fcoml
nop
xchg
xor
jge
clc
out
xor
jbe
jp
dec
add
dec
mov
sar
cwtl
jae
stc
mov
cmpsb
imul
jmp
and
mov
inc
ljmp
inc
subl
xor
xchg
mov
arpl
mov
and
je
or
int
ja
arpl
jmp
sbb
sub
xchg
xchg
push
mov
stos
pop
sbb
cmc
mov
push
shll
fidivrl
jp
mov
sbb
sti
push
in
xor
mov
lods
push
dec
nop
enter
inc
jecxz
js
and
pusha
arpl
out
or
sub
addl
pop
inc
mul
repnz
jnp
and
and
pop
mov
lea
jp
jge
or
cs
mov
pop
std
lock
sbb
push
hlt
lcall
fwait
call
sub
testb
add
mov
icebp
adcb
pop
jo
adc
sahf
jp
jbe
call
and
jbe
repz
je
std
cmp
addr16
push
push
mov
pop
fdivs
xlat
call
mov
fs
and
or
leave
int3
adc
adc
in
xor
in
inc
gs
hlt
dec
xor
sbb
dec
repz
mov
xor
ds
mov
jno
bound
ret
xchg
adc
pusha
lcall
xchg
test
outsl
mov
sbb
mov
inc
sbb
adc
call
mov
imul
push
push
imul
sbb
mov
adc
xchg
ret
rcrb
mov
repnz
xchg
inc
sbbl
arpl
fdiv
test
test
mov
scas
inc
insl
notb
dec
push
mov
sub
mov
xor
stos
dec
and
cmp
inc
mov
inc
jle
cs
adc
xor
js
je
clc
xchg
cmp
in
mov
jbe
add
jl
push
adc
xchg
out
fnstcw
mov
ficomps
into
mov
dec
je
and
mov
pop
daa
pop
mov
daa
loopne
and
inc
push
in
xchg
dec
mov
scas
outsb
js
cmp
fs
jp
imul
cs
cmpsb
and
jecxz
imul
mov
xor
std
mov
push
ljmp
outsl
sub
rorl
cmpsl
imul
cmp
das
sarl
aad
dec
push
test
arpl
test
jl
enter
fadds
lret
test
loope
dec
pop
jbe
test
testl
or
add
cli
jns
dec
push
xlat
hlt
ret
push
xchg
andb
int
push
jnp
insl
push
jbe
push
cmpsb
cmp
rcll
inc
xor
inc
ja
arpl
xchg
lock
lret
out
rcl
xchg
imul
pop
and
clc
test
push
adc
sbb
adc
jno
cs
cli
pusha
pop
mov
mov
mov
pop
imul
pop
adc
jno
out
filds
inc
movsl
push
pop
inc
repnz
pop
mov
out
mov
out
in
icebp
mov
imul
dec
test
insb
test
jns
adc
gs
add
mov
sub
inc
subl
jno
fisubs
sti
push
scas
test
fimull
dec
shl
lea
stc
es
mov
dec
scas
lahf
ret
or
or
add
sbb
mov
xchg
xchg
mov
cmp
cmp
cwtl
or
inc
rorb
aam
xchg
push
pop
int
hlt
jne
nop
rcrl
xchg
jns
sbb
loope
jb
jb
aaa
cwtl
sbb
mov
clc
pop
jne
push
fucomip
push
jp
mov
adcb
mov
ret
stos
inc
jb
sbb
dec
je
pop
push
inc
and
and
cs
loope
add
adc
dec
mov
mov
mov
sti
mov
outsl
xchg
enter
pop
popa
cld
sbbb
sub
sti
bound
adc
dec
pop
test
or
test
cmp
test
dec
pop
inc
push
sbb
cld
push
push
cli
das
fsubr
xlat
pop
das
sub
xchg
jg
mov
sub
mov
mov
adc
repnz
sub
push
and
data16
and
stc
and
cld
into
push
popa
jp
mov
das
fdivrs
imull
fwait
jecxz
or
mov
aaa
pop
sbb
addr16
sbb
mov
mov
orl
mov
mov
sbb
leave
cld
popa
cmp
or
cmc
fstps
pushf
cmp
mov
jecxz
fstpt
ljmp
xchg
int3
mov
int3
cmp
mov
cmp
lret
jno
xchg
iret
or
leave
ss
dec
push
fists
adc
xor
and
dec
fcmovnbe
imul
push
cmpsl
jp
out
ljmp
mov
lret
xchg
push
cmp
dec
hlt
scas
repz
jb
dec
addb
and
loopne
sbb
xor
insl
cmp
adc
lods
dec
adc
xchg
call
jo
pushl
ds
stos
dec
ds
adc
pop
shll
pop
pop
pop
roll
fwait
dec
pushf
xchg
stos
leave
lahf
mov
dec
rcr
pop
add
add
mov
mov
sbb
dec
lret
lret
mov
push
orb
sarb
scas
pusha
inc
and
loope
aam
lea
lret
jg
int
das
test
into
jmp
imul
inc
out
mov
jl
fldt
int
data16
sti
push
int3
das
inc
fimull
xchg
cs
stos
mov
or
mov
pop
out
mov
inc
lahf
icebp
out
inc
rcll
push
movsl
xlat
pop
inc
sti
stos
lret
imul
loope
push
mov
pop
in
aad
test
inc
jle
jl
jo
inc
add
adc
insl
adc
dec
adc
test
scas
outsb
jecxz
lret
mov
mov
jl
jecxz
xchg
movsl
mov
sbbl
mov
movsb
cmpsb
imulb
rolb
imul
hlt
sarb
rep
xchg
mov
add
fistl
or
jns
push
dec
ret
jno
fs
add
ja
clc
dec
daa
pop
mov
fcompl
les
sub
pop
popa
test
pushl
and
in
jns
jne
loope
sbb
pop
scas
add
cli
mov
xchg
push
and
push
daa
fildll
xchg
sti
push
dec
cmp
aas
daa
sub
dec
dec
test
scas
xchg
mov
sub
sahf
jmp
sahf
int3
mov
mov
pop
and
into
lret
lods
push
daa
in
xchg
test
or
int3
mov
sub
int3
push
dec
cmc
rcl
mov
inc
cwtl
jmp
dec
mov
push
loop
iret
xlat
jae
pop
test
xchg
and
addb
push
jae
fidivrl
jo
inc
sub
je
test
in
mov
rcrl
inc
dec
clc
adc
jl
xor
lock
mov
or
and
popa
lods
sub
xchg
iret
xor
jb
xor
insb
outsl
sub
pop
push
cmp
fisubrs
repnz
mov
iret
das
xor
les
mov
hlt
addr16
sahf
and
in
mov
mov
cmpsb
pop
int
clc
cmpsb
push
dec
ljmp
mov
sbb
jno
xchg
test
fnstenv
ret
dec
xchg
adc
outsl
nop
adc
outsl
jge
divb
dec
cli
push
xchg
mov
je
inc
pop
adc
nop
cltd
lock
adc
sub
dec
gs
mov
fisubrs
call
mov
jb
xchg
fsts
flds
lret
lahf
adc
adc
out
jo
cmp
aam
add
loopne
jl
add
shll
and
sub
shr
push
aas
add
imul
leave
fsubrs
fld
mov
cli
lret
ljmp
enter
jo
adc
mov
push
mov
dec
push
ja
in
mov
xchg
and
cmp
bound
into
inc
sub
or
jl
push
or
push
lahf
push
inc
movsl
jmp
mov
dec
mov
xor
stos
rcrl
add
xor
icebp
pop
clc
pop
out
inc
jb
adc
xlat
lahf
pop
and
xchg
xor
outsl
mov
xchg
lret
pop
push
daa
add
jecxz
orb
outsb
aad
mov
inc
shl
daa
mov
out
dec
add
push
in
sti
int
push
sbb
sbb
mov
jle
pop
cmp
test
or
mov
mov
sbb
xlat
add
sub
mov
sbb
lahf
outsb
andb
mov
sub
popf
mov
dec
lret
push
ficompl
xor
sub
cmpsb
lret
insl
mov
enter
mov
sbb
sbb
xlat
aam
xchg
int3
jle
push
and
dec
es
jge
imul
movsb
out
stos
or
mov
cmp
pop
xor
sub
stos
int3
dec
mov
arpl
cmc
test
xor
mov
cli
inc
mov
cwtl
mov
mov
aam
adc
dec
mov
subb
push
pop
mov
fwait
sub
cmp
pop
mov
scas
subl
in
pop
add
std
or
ds
mov
arpl
or
push
dec
lock
iret
mov
popa
mov
inc
outsl
xchg
cmp
dec
dec
push
repnz
imul
je
das
cmp
test
sub
repz
fstl
xor
jno
loope
addb
ficoms
xchg
lretw
pop
in
xchg
outsb
insb
xchg
das
fmull
mov
add
enter
cmp
inc
xchg
cmp
pop
stc
mov
xor
jge
aam
hlt
fisttps
add
jp
sub
es
push
sbbl
jb
and
sub
imul
and
xchg
xor
out
or
pop
sub
or
push
sub
push
inc
cmc
sbb
cmpl
fidivl
mov
inc
mov
hlt
jbe
dec
add
pusha
cmp
mov
cmpsb
mov
xchg
mov
scas
negb
pop
sub
and
add
jnp
or
shll
aas
nop
stos
inc
ds
shlb
fistl
clc
scas
jae
pop
lret
sub
movsb
fwait
dec
xchg
scas
mov
shll
xor
repz
stos
repz
push
fs
xchg
call
push
dec
daa
mov
out
mov
sbb
scas
hlt
std
notl
sbbb
mov
ss
mov
cmp
sarl
fs
loop
arpl
out
int3
mov
inc
adc
push
daa
xchg
push
mov
sbb
dec
cld
pop
push
push
lret
add
mov
adc
cmp
icebp
pop
add
jne
push
xor
pusha
cmpsl
pop
pop
int
ja
out
xor
cmpsl
inc
test
xor
adc
xor
test
inc
test
push
notl
jp
imul
call
adc
in
loopne
arpl
sub
or
out
pushf
add
push
push
lea
fstps
into
ja
dec
push
cmp
les
int
mov
mov
add
fsubl
cmp
ret
push
wrmsr
xchg
mov
lea
jle
std
inc
mov
out
sbb
ret
ret
movaps
and
mov
out
and
or
lock
jo
xchg
cmp
inc
icebp
jge
mov
push
fisttps
xor
lahf
lock
pop
int
outsl
pop
cli
out
shr
in
pop
push
int3
lea
push
xlat
inc
in
xchg
gs
cmp
pop
add
push
lds
mov
xchg
sub
stc
jge
lahf
mov
dec
data16
push
fsubrl
cwtl
xor
not
mov
mov
xchg
mov
pop
test
das
sbb
sbb
stc
ja
push
cmc
pop
jmp
fsubrs
sbb
jae
lds
int3
rcll
add
dec
sbb
xor
push
es
mov
or
popa
test
fsubrl
scas
xchg
in
sbb
inc
std
ss
mov
cmpsb
mov
scas
lods
adc
outsb
not
ret
jmp
mov
pop
ficoms
inc
mov
les
push
rclb
mov
fcoml
mov
xchg
adc
or
adc
xor
dec
xor
cmp
stos
fildll
sub
jle
in
lcall
jge
cmp
stos
and
loope
cmp
mov
pop
lods
loope
adc
xchg
jno
and
ret
push
sub
popa
dec
test
int3
dec
sbb
stos
dec
cld
and
fldl
inc
mov
sub
or
xor
mov
jbe
adc
pop
adc
sub
adc
nop
mov
push
mov
xlat
je
daa
xchg
adc
movsb
mov
jb
mov
or
int
pop
mov
lahf
adc
ljmp
out
inc
add
mov
and
push
aas
in
xor
jo
jo
xchg
fimull
pop
mov
mov
pop
adc
insl
das
dec
out
xchg
inc
or
pop
das
jge
xchg
xchg
int3
iret
sbb
es
mov
adc
cld
dec
add
lods
cli
movsb
inc
sbb
test
movsl
mov
cs
mov
push
jne
and
fists
or
int3
jns
in
mov
mov
shlb
les
adc
mov
inc
xchg
out
mov
cmp
jmp
dec
aaa
pop
fcomps
mov
pop
fsubrl
sbb
xchg
pop
rcl
ds
es
in
jae
aas
jmp
mov
mov
or
jbe
mov
es
xor
insb
push
or
sub
out
insb
outsl
jae
jb
dec
stos
fmuls
push
sub
mov
dec
gs
adc
jmp
mov
lds
add
push
xchg
pop
or
or
push
mov
mov
cli
sub
sbb
lcall
mov
in
cmp
enter
rcrb
sub
pop
push
ret
xchg
js
lods
jbe
imul
outsb
adc
mov
loopne
jb
sbbl
js
popf
ret
pusha
or
fs
fcmove
and
push
popa
sbb
in
pop
pop
add
dec
fldt
repnz
pop
ret
jb
fs
push
test
lcall
mov
leave
cmp
dec
adc
jl
lahf
adc
xor
mov
mov
jle
pop
xor
daa
call
into
mov
std
fwait
or
jle
and
mov
shl
ret
daa
push
push
jp
push
or
dec
jns
or
push
sbb
subl
insl
mov
sub
adc
test
mov
lods
cmpsl
inc
fmull
arpl
movsb
push
xor
inc
jmp
push
push
addr16
sbb
lret
inc
mov
xor
xchg
and
mov
mov
in
lock
xor
jnp
aad
imul
and
imul
jne
and
fstps
jno
hlt
dec
adc
fbstp
addl
fcompp
cmp
mov
popa
cmp
mov
pop
aad
jb
aas
sub
jge
fisubrl
sub
mov
aam
andl
aas
in
sbb
sbb
jg
fdivrl
and
inc
mov
pop
inc
inc
inc
push
mov
shrl
xor
pop
in
push
call
aaa
sbb
pushf
ss
push
xor
loop
rclb
es
and
orl
movsl
jo
adc
pushf
fwait
cli
fwait
jge
push
stos
mov
scas
mov
add
inc
lods
pop
cmp
xor
or
xchg
cmp
pop
jnp
into
movq
push
icebp
test
mov
sub
mov
lods
dec
mov
dec
lods
push
out
in
out
test
sub
xor
dec
pop
addr16
fstpl
add
repnz
pop
adc
push
dec
add
cli
sub
loopne
lea
mov
jle
xchg
rcrb
jnp
scas
lret
fs
imul
fdiv
cwtl
leave
fwait
jo
imul
adc
xchg
pop
mov
insl
sub
sbb
dec
fstpl
jns
mov
push
cmp
pop
nop
clc
sbbl
rcrl
mov
jg
push
aaa
lea
cli
cmp
js
ds
pop
les
add
inc
cmp
sbb
aad
add
mov
cmp
test
push
xor
push
movsb
cli
jmp
lret
sbb
jo
fimull
mov
mov
test
xchg
das
in
dec
or
xchg
in
mulb
popw
dec
rorl
fstpl
lods
pushf
lods
cwtl
test
out
mov
cld
xchg
sub
mov
cmc
mov
imul
in
cwtl
insb
stos
repnz
push
sub
lcall
fs
push
push
jmp
add
mov
cwtl
jnp
shlb
lods
ret
divl
jge
mov
xchg
add
ret
lret
xorl
add
add
sub
mov
cmp
rcll
pop
fstpt
adc
aaa
add
testb
pushf
jnp
lock
push
jecxz
scas
iret
adc
ss
cmp
xchg
mov
mov
fisubs
sbb
inc
je
addr16
ficoml
ret
mov
vmovd
cltd
or
lcall
cli
cmc
sub
pop
lea
jecxz
ljmp
mov
sub
mov
jns
sub
sbb
pop
lcall
add
pop
xor
jb
fistl
mov
ss
ret
dec
xor
mov
fsubs
rclb
in
xchg
inc
movsl
outsb
lret
fmuls
out
aam
push
mov
out
mov
pop
mov
pop
pop
push
jns
push
orb
jecxz
out
movsb
xor
vmptrst
rcr
jg
and
push
aaa
adc
jnp
in
xchg
xchg
arpl
jno
xlat
nop
xor
inc
or
mov
and
insl
or
jg
stos
mov
mov
jns
insl
pop
sub
enter
aad
inc
repz
adc
xor
mov
xchg
cmp
in
cmpsl
and
mov
cltd
jl
jno
cpuid
dec
push
out
and
lods
push
sub
ffreep
mov
sbb
cld
push
inc
out
cs
xchg
cmp
fs
cwtl
push
and
in
mov
add
jns
or
std
xchg
adc
jle
adc
jns
repnz
aam
bound
mov
xchg
push
lcall
icebp
pop
cmp
fsubp
jno
push
js
mov
lock
jmp
inc
in
add
daa
jle
movsb
call
jns
xor
scas
lods
orb
daa
push
mov
pop
push
jp
jo
or
pop
fcmovnb
insb
jp
sbb
and
mov
sub
insb
rcrl
test
mov
jge
mov
jge
jae
dec
add
popf
repnz
fstpl
sub
push
in
dec
sbb
dec
stc
leave
insb
insl
and
aaa
in
mov
inc
ss
mov
je
sub
idiv
hlt
jge
pop
rcl
inc
adc
sbb
push
adc
popa
mov
adc
mov
flds
movsl
and
repnz
out
mov
sbb
sbb
and
push
jg
sahf
cwtl
je
push
inc
into
stos
out
sub
pop
cs
jae
test
mov
lds
jp
lock
mov
push
sar
stc
inc
mov
aas
out
push
addr16
xchg
pop
rclb
xor
in
les
lods
out
jle
xchg
in
push
popa
mov
int3
xchg
fs
mov
out
push
sub
push
xchg
xchg
xor
loopne
and
out
inc
jp
dec
enter
add
adcb
insl
mul
imulb
gs
test
xchg
push
hlt
les
inc
and
jnp
popf
test
lcall
movsb
jno
xor
ret
test
jbe
adc
adc
xchg
or
push
mov
je
xorb
test
jg
out
lcall
mov
stos
es
je
push
punpckhwd
sbb
repnz
jp
lock
int
sbb
mov
pop
js
loop
test
sbb
hlt
mov
pop
xor
es
push
jo
lret
fistpl
scas
orb
adc
sbb
fdivrs
daa
sbb
fcoms
jae
or
mov
mov
inc
jmp
adc
mov
sub
inc
jnp
xor
cs
leave
das
xlat
enter
cmp
sub
ds
ficoms
arpl
jo
xchg
xchg
mov
ja
and
and
lea
push
fildll
test
fidivrl
popa
mov
std
push
jb
test
jno
imul
xlat
aas
leave
rcl
adcl
sub
or
mov
mov
lds
outsl
scas
lea
or
push
mov
sbb
rcr
inc
adc
mov
push
in
dec
pop
xchg
dec
mov
pusha
push
cld
es
loop
sahf
and
add
int3
pop
or
out
in
push
sarb
push
sbb
shll
xchg
je
fs
ret
add
xor
sarl
imul
loope
inc
stos
ret
or
stos
cmovnp
sti
std
pop
jle
js
std
sub
jmp
enter
cmp
lods
inc
inc
jecxz
sbb
arpl
and
pop
mov
inc
jno
xchg
imul
cwtl
mov
pop
push
xchg
fnstcw
fwait
push
aam
fld
dec
cmp
xor
pushf
neg
mov
dec
dec
jbe
mov
enter
dec
outsb
mov
pop
jmp
mov
lcall
das
lret
jmp
cltd
cmp
loop
aas
push
push
push
pop
jecxz
cmp
add
ficoml
repz
sub
jmp
icebp
mov
imul
jg
addr16
fists
sub
cmp
jp
or
call
cld
cld
xchg
xchg
dec
fidivs
shll
loop
mov
loopw
bound
xor
stos
xor
jmp
sti
out
les
pop
and
mov
fbld
add
pop
test
call
fucomp
data16
leave
mov
ficoml
loop
push
movsl
lods
fcos
inc
fcmove
aas
hlt
mov
ret
mov
repnz
push
or
outsb
std
addr16
pop
push
clc
dec
fcomip
insl
icebp
push
lock
lock
push
cwtl
daa
sbb
imul
ret
pop
mov
into
loopne
enter
test
mov
in
mov
jg
mov
test
push
movsb
xchg
xor
std
ss
daa
out
imull
lret
leave
in
test
adc
stos
adc
dec
enter
loope
adc
push
sbb
push
dec
fisubrs
fisttpll
scas
xchg
andl
mov
adc
sbb
xchg
jne
pop
nop
jno
or
lds
movsl
adc
add
stos
cld
into
and
adc
xchg
mov
scas
in
cmp
mov
and
adc
add
data16
test
sbb
and
inc
dec
mov
sbb
push
fs
jecxz
fdivp
insl
ss
mov
cltd
push
mov
adc
push
cmp
imul
dec
rcll
xchg
mov
sub
bnd
call
sahf
and
or
and
das
movsbl
repnz
out
mov
mov
outsl
pusha
inc
mov
jl
cmp
push
push
lret
insb
gs
pop
jne
mov
xchg
cmp
fisttpll
xor
js
imul
mov
cld
sti
enter
mov
mov
shlb
sub
pop
push
lds
pop
or
or
ret
data16
push
mov
mov
loop
jg
lods
rolb
stos
in
push
mov
xlat
ljmp
cmpsl
int3
bound
xor
sbb
push
outsb
test
test
mov
ja
inc
das
mov
stos
insb
addr16
xor
cmp
lret
dec
or
lret
adc
popa
fs
lcall
jl
xlat
fnstsw
lds
in
fisttpl
push
mov
stos
test
fbstp
jbe
or
push
adc
lahf
leave
ss
in
push
fsts
pop
cmp
lret
pop
or
mov
inc
xchg
subl
and
mov
fs
pop
jg
lock
xchg
xchg
pop
cmp
add
mov
inc
sbbl
pop
lahf
cs
rcll
or
dec
in
sbb
rorb
push
push
sbb
cwtl
addr16
mov
add
inc
sti
fwait
cmpb
cmc
or
mov
xlat
sub
sbb
push
repnz
inc
xor
jmp
test
jbe
dec
leave
xchg
les
scas
dec
cmp
aam
imul
mov
into
lods
push
std
push
and
test
insl
mov
sbb
and
mov
push
mov
and
add
mov
rorl
ret
and
push
cmp
shrb
pushf
xchg
inc
or
enter
sbb
rcrl
jne
cmp
sbb
push
outsb
fs
xchg
aam
fmull
mov
pop
test
ret
fmull
rorb
mov
cli
fs
lods
sti
enter
mov
int
push
pop
data16
andl
les
mov
cmp
jne
fldlg2
in
fcomi
lods
mov
mov
sub
mov
mov
mov
cmp
xor
loope
rcr
push
arpl
jl
aad
cs
pop
mov
push
in
pushf
dec
cwtl
js
popf
addl
cmp
inc
cmp
pop
stc
sbb
inc
lock
ss
int
aad
push
or
idivb
nop
es
dec
jbe
mov
in
test
iret
imul
fnstcw
cli
jo
cmp
xor
mov
sub
mov
cmpsb
cwtl
call
out
sub
xchg
xchg
arpl
std
cmp
js
in
and
inc
test
icebp
mov
cmp
sbb
imulb
mov
xlat
fildll
adc
neg
shlb
mov
mov
lds
mov
push
ljmp
pop
mov
jno
pop
push
mov
inc
insb
pushf
and
fwait
add
out
xor
mov
sub
push
mov
sbb
pmulhuw
dec
insl
ret
aaa
xchg
popa
mov
mov
cld
sub
pusha
mov
pop
push
lods
das
or
shrl
pop
cmp
and
or
mov
sub
jmp
jp
fs
cmp
fiadds
mov
xor
push
sbb
inc
icebp
push
stos
test
test
pop
adc
stc
push
xchg
xchg
pop
jne
xchg
mov
pop
xchg
push
dec
js
je
mov
pop
decl
jle
sahf
jb
ds
cmp
out
nop
stc
js
repnz
add
jmp
pop
repz
ja
imul
mov
repnz
inc
or
push
mov
popf
mov
xchg
cmpsb
arpl
cmc
mov
ss
xlat
data16
add
adcl
pushf
pushf
test
in
in
mov
loope
mov
iret
dec
or
les
rorb
inc
stos
cmp
fcomip
aad
gs
dec
mov
push
push
ret
dec
in
int
and
test
out
pop
movsb
outsl
add
mov
cmp
add
xchg
pop
xchg
iret
xor
sbb
ljmp
jle
outsb
ss
jmp
mov
insb
xchg
xchg
pop
jmp
push
sbb
dec
dec
call
jbe
adc
sbb
les
mov
sbb
pop
mov
in
sti
mov
mov
scas
lret
cwtl
fisubs
jns
mov
add
in
mov
fidivrl
mov
jns
xor
outsl
sub
bound
pop
and
jb
test
popf
inc
inc
fs
mov
addr16
test
into
mov
pop
mov
push
mov
cmp
sub
push
addb
mov
mov
hlt
not
and
jle
cmp
sahf
jbe
pop
clc
or
add
shrb
stos
lea
jb
push
pusha
mov
lods
sub
andl
call
mov
cld
mov
cmc
in
in
push
push
mov
pop
pop
in
mov
mov
jb
xchg
jmp
xchg
adc
test
cli
add
mov
and
and
in
push
lods
movsl
into
sbb
es
leave
rolb
push
subl
inc
mov
out
jecxz
mov
pop
xchg
scas
loop
xor
sub
cmpb
test
repnz
mov
push
test
shrb
push
sbb
fmulp
push
and
mov
int
xor
sub
pop
idivb
int
mov
jecxz
movsb
cmp
mov
fmuls
push
jl
test
pop
cmp
mov
dec
and
xor
data16
cs
adc
jle
popf
xchg
xchg
dec
xor
nop
cmp
sbb
mov
and
arpl
int
add
test
mov
inc
dec
pushf
jmp
mov
sbb
mov
out
out
mov
cld
push
je
outsl
push
jns
or
mov
mov
nop
and
arpl
xchg
icebp
repnz
repnz
iret
inc
mov
add
insl
xor
dec
mov
jmp
inc
mov
inc
insb
sub
sub
mov
mov
ret
loopne
mov
and
inc
cwtl
insl
loopne
sbb
fisubl
mov
pop
dec
mov
pop
loopne
lret
fldcw
int
subl
lret
pop
loope
lcall
fs
push
adc
sub
sbb
sbb
cmc
jae
lods
ljmp
jge
lea
imulb
jbe
cli
jge
test
sti
pop
cmc
xchg
sti
mov
leave
adc
rorb
inc
or
clc
jg
xchg
sahf
dec
nop
bound
rclb
pop
and
mov
push
ss
xor
jbe
int
jne
ds
add
sub
lret
jecxz
cli
bound
xchg
mov
inc
cmp
aam
test
xor
shrl
or
loopne
loopne
nop
cli
dec
dec
mov
and
cli
mov
call
pop
aam
shl
fisttpll
gs
jae
xor
cmp
jg
sub
cld
mov
jb
jne
xchg
sbb
pop
pop
aad
mov
jecxz
pop
pop
sbb
movsl
jo
and
addb
out
xchg
add
adc
cwtl
in
lret
jae
lods
mov
xlat
push
cwtl
fistpl
xor
mov
and
and
es
arpl
popa
popa
jmp
pop
ljmp
mov
add
scas
outsl
addr16
mov
mov
imul
test
lcall
push
jge
inc
inc
les
cmp
push
mov
lcall
sbb
sub
enter
sub
pusha
fmulp
inc
mov
enter
jmp
scas
les
inc
xor
dec
fiaddl
daa
sets
fwait
jmp
ljmp
test
fstl
jmp
frstor
setge
jp
inc
cmp
data16
lret
in
jb
or
test
fs
dec
or
test
xchg
sarb
in
ret
les
mov
jp
sbb
sub
out
fwait
loop
mov
adc
mov
es
in
cmp
pop
mov
loop
rclb
jnp
xor
mov
mov
in
cmpsl
mov
mov
je
xchg
or
jg
fs
adc
aam
mov
popl
push
xchg
mov
xchg
mov
sub
dec
shrl
mov
cli
adc
pop
cmp
stos
call
ds
loope
mov
je
nop
test
mov
mov
or
push
leave
dec
adc
cmpsb
or
xor
inc
fnstenv
sahf
mov
jne
es
push
arpl
cwtd
pop
stos
push
arpl
mov
push
dec
pop
adc
sub
lods
and
out
not
sbb
leave
scas
sbb
add
out
jge
or
out
sbb
mov
repz
cmp
jne
in
and
mov
fistpl
test
pop
jmp
inc
rorl
push
sbbl
mov
or
mov
adc
neg
mov
dec
cmp
mov
sbb
cmpsb
stos
inc
jg
fs
jp
or
xchg
testl
jno
cmpsb
lret
in
test
jbe
mov
jo
fnstenv
outsb
xor
sub
or
mov
repz
or
adc
and
or
and
adc
push
inc
mov
out
jge
mov
xchg
mov
xchg
roll
sbb
pushf
push
mov
lea
xchg
and
shl
movsb
setge
test
push
inc
xor
outsb
jae
filds
icebp
inc
cld
xor
cs
mov
addb
fcoms
push
iret
cmp
and
xchg
psubb
les
mov
ja
test
add
inc
pop
je
add
mov
mov
mov
sahf
enter
or
jnp
sbb
xchg
pop
ljmp
dec
data16
mov
outsb
jg
push
inc
mov
sbb
adc
das
pop
call
test
stc
adc
test
jmp
ja
xchg
xor
repz
in
mov
push
lock
movsl
adc
mov
xlat
sub
fcmovnbe
in
bound
dec
out
stc
push
add
sbb
lds
sub
pop
adc
mov
sbb
push
pop
ds
ds
dec
pop
add
pop
andb
or
out
fwait
sbb
shl
subps
outsl
add
dec
mov
rcrb
sbb
lea
daa
clc
aad
xchg
xchg
fists
mov
gs
cmp
push
arpl
jp
loope
or
add
in
cmpsl
mov
mov
cmpsl
xchg
es
inc
pop
clc
jo
test
fdiv
or
out
loop
fucomip
xchg
sub
pusha
lahf
xchg
js
imulb
outsl
popf
mov
call
aaa
sbb
adc
loopne
stc
sbb
aaa
xchg
fs
adc
adc
call
inc
mov
pusha
ds
jno
ficompl
jl
cwtl
push
xlat
sub
jmp
shlb
in
sub
aas
ud1
test
orb
sub
int3
dec
inc
adc
mov
fmuls
pushf
and
in
out
fcmovb
push
mov
sub
stos
and
aaa
xchg
popa
inc
dec
xor
xchg
in
loope
xchg
and
int
data16
and
fistpl
ret
inc
jmp
sbb
andb
adc
cmp
inc
mov
into
lods
lods
pop
cmp
shr
leave
lret
pop
jmp
adc
push
jle
int3
cmpsl
cmp
addr16
scas
cmp
pop
out
pop
fldt
cltd
push
push
movsl
jmp
pop
mov
add
cli
clc
lock
push
mov
sub
xchg
sub
push
mov
and
adc
lock
pop
stos
xchg
jo
jno
mov
iret
mov
mov
movsl
xor
mov
jg
jp
push
ret
cli
inc
inc
stos
pop
xchg
fnsave
nop
mov
jp
inc
push
push
sub
sbb
fcomi
repz
mov
inc
pop
fmul
and
mov
aas
sub
xor
lock
mov
add
adc
outsl
enter
mov
lcall
jle
mov
pop
xlat
out
sbb
pushf
hlt
mov
pushf
ftst
mov
pop
pop
mov
call
bound
nop
or
mov
xlat
mov
mov
adc
jge
sub
sbb
lret
inc
cmp
shll
sahf
ficomps
dec
fadds
popa
into
shr
dec
aad
insb
addl
rorb
insl
add
pop
cs
pop
mov
push
and
push
mov
push
pop
rcrb
into
dec
push
stos
dec
jns
jnp
pop
jecxz
insl
frstor
or
inc
rcll
insl
pusha
fdivl
in
mov
mov
xor
mov
dec
sti
xor
fisubl
jle
xlat
fisttpll
pop
pop
aam
pop
cwtl
pop
out
lret
or
sbb
scas
pop
mov
mov
loop
add
or
mov
sub
in
and
xlat
mov
jmp
mov
jl
loope
xchg
or
pop
sbb
sti
pop
or
or
cmp
fmuls
mov
aam
orl
jno
xlat
xchg
inc
mov
movsl
cmpsb
add
mov
inc
imul
imul
sarb
sbb
pop
movsl
stos
cmpsb
push
sbb
mov
xchg
cmp
das
fsubrs
sbb
cmp
adc
clc
ljmp
out
inc
pop
outsl
and
aad
test
movsb
psubusb
es
push
je
into
mov
mov
fistpl
es
dec
cmp
sti
mov
mov
xchg
lock
pop
sahf
daa
lea
into
gs
repnz
lods
jg
jl
dec
xchg
adc
sbb
jl
sarb
jbe
and
jns
fstpt
pop
pop
popa
pop
mov
sbb
or
aad
ss
push
mov
sub
movsb
or
icebp
add
pop
xor
repnz
leave
stc
mov
int
and
adc
pop
or
or
addr16
std
sub
sahf
xchg
add
adc
jne
push
shl
add
addl
pop
fistpl
jne
adc
aas
mov
bound
testb
sub
insb
and
xlat
xorl
inc
movsl
or
and
or
pop
xor
jle
loopne
inc
fcom
test
fsubl
mov
in
and
pusha
lds
mov
aaa
sbb
rep
shrl
jl
sub
add
sbb
movsb
xor
push
xor
lock
rcrl
pop
mov
repz
jb
sbb
in
shrl
repnz
mov
shrb
sub
jb
or
lds
cmc
cmpsb
inc
jmp
xor
rol
loop
inc
mov
jg
xor
cmp
in
mov
add
push
iret
xor
insl
sub
inc
mov
inc
ljmp
addr16
push
in
cmpsb
and
push
sbb
push
pop
andb
xchg
lea
repnz
bound
sub
mov
movaps
xchg
hlt
test
mov
dec
movsb
fsubrl
mov
xchg
and
ljmp
pop
cld
test
js
push
mov
stos
or
movsl
push
daa
mov
data16
xchg
mov
pushf
rorl
jge
js
test
cmc
andb
loope
mov
in
in
or
in
in
adc
push
lret
lea
lcall
push
push
pop
mov
scas
mov
movb
jg
pop
push
in
mov
adcb
mov
incl
xchg
jmp
nop
test
sarb
xor
addr16
pop
xor
xchg
sbb
fsub
ret
jl
sbb
dec
rcrl
xor
imul
gs
lea
push
mov
push
xor
imul
inc
push
cmp
aaa
and
popf
or
hlt
mov
sub
js
stc
in
movsb
cmp
cmovne
mov
jmp
and
xchg
pushf
cmp
dec
mov
inc
mov
inc
jne
and
lret
push
mov
cmc
dec
jp
push
gs
cmp
das
cmp
inc
cmpsb
xchg
cltd
mov
sahf
insb
stos
sub
repz
add
push
adc
mov
out
mov
mov
loope
addb
cmpsl
jecxz
jbe
pop
cld
call
sarl
scas
fiadds
call
sti
sub
lahf
jb
mov
push
jmp
pushf
inc
jb
sub
pop
mov
xchg
lret
in
cli
push
call
cmp
push
fdiv
scas
add
imul
xchg
push
push
inc
xor
popa
testl
add
lock
inc
xchg
out
mov
sub
leave
add
or
dec
xor
sti
xlat
repz
pop
pusha
pop
int3
ja
loop
cwtl
xor
pop
or
sbbb
mov
and
dec
repnz
mov
pop
rorb
cmc
inc
jecxz
out
in
jle
pop
mov
adc
fstl
or
sbb
jl
sarl
adc
repz
lahf
negb
outsb
xor
stos
or
pop
lahf
adc
je
loop
pop
jbe
iret
loope
fadds
sub
adc
cld
mov
orl
or
dec
mov
idivb
mov
sub
outsb
dec
mov
inc
repnz
ja
dec
cli
aaa
stos
rorb
inc
cmc
mov
sbbb
dec
cmc
cmp
push
lcall
pop
push
lods
js
xor
out
imul
adc
push
push
push
mov
push
fsin
outsb
stos
mov
push
jo
insb
xchg
inc
daa
rol
out
pop
pop
push
mov
out
int
loopne
mov
out
js
out
inc
inc
lcall
push
add
cli
test
cli
xchg
and
xor
mov
sarb
in
pop
push
leave
mov
xor
xchg
cmp
pop
xor
xor
adc
out
shl
cmp
or
xlat
lds
imul
in
add
inc
lock
inc
clc
add
cmpsb
add
popf
in
jno
addr16
in
lods
jnp
jg,pn
sbb
lret
add
push
cmp
loope
enter
adc
xor
adc
dec
es
mov
sbb
lods
jno
movsl
call
xchg
clc
testb
pop
cmp
fdivrs
loope
insl
int
push
mov
movsb
cmp
imul
out
or
fwait
add
fbld
cs
xchg
push
repz
mov
inc
xchg
jne
cli
lcall
shll
call
imul
repz
jbe
fs
pushf
xor
pop
je,pt
xor
popf
mov
and
jle
and
test
pop
cli
push
ds
sarl
cmp
fcoml
add
inc
xor
jge
addr16
aas
lds
cld
icebp
lods
jg
in
xor
std
or
lea
imul
repnz
lea
mov
dec
adc
mov
and
cli
xor
cmpsl
movsb
push
stc
imul
xor
movsl
xlat
or
jle
xchg
dec
loopne
xchg
jg
notb
dec
fwait
movsb
xchg
sbb
mov
aas
loopne
pop
popa
adc
adc
outsl
push
sbb
cld
mov
lods
les
cmp
iret
cwtl
neg
ljmp
inc
mov
push
cmc
inc
rcrl
or
stos
dec
mov
adc
inc
mov
into
jp
push
outsb
jle
fwait
shrl
outsl
std
jmp
push
push
sti
dec
les
ljmp
lahf
in
aad
mov
jmp
pop
cwtl
aam
mov
dec
pop
xorb
adc
xchg
test
add
aam
xchg
jl
sub
pop
into
pop
imul
inc
sub
and
jnp
sbbl
mov
ss
mov
pop
jle
xchg
dec
add
scas
sti
adc
insb
in
mov
gs
iret
pop
cli
adc
sti
fcmove
out
rcrl
push
das
outsb
sub
lea
xchg
xchg
test
jbe
adc
xor
loop
stc
aad
imulb
lock
out
fisttps
ss
mov
jge
pop
cld
adc
pop
add
add
push
aam
mov
pop
sub
pop
je
int
cltd
push
or
inc
push
mov
push
into
adc
fs
in
mov
jne
dec
inc
lds
mov
dec
in
stos
jo
pop
jae
int3
mov
clc
add
ljmp
xchg
add
fcoml
jbe
push
dec
movsb
push
loopne
insb
stc
pop
sub
in
mov
mov
test
in
rorb
pop
daa
cmp
enter
lcall
fdiv
push
pop
cmp
arpl
inc
data16
shlb
jae
ss
aad
mov
jo
adc
dec
dec
notl
pop
rolb
dec
push
adc
test
jp
imul
pop
inc
test
cs
push
dec
inc
loope
in
mov
adcl
add
xchg
sbb
rcrb
xchg
push
mov
pop
sub
sti
push
and
jbe
sbbb
test
inc
mov
ret
jmp
rcrl
adc
cmc
xchg
loopne
fstps
jno
fmull
into
push
enter
iret
lds
loope
pushf
push
sarb
pusha
aas
push
xlat
cld
push
ljmp
mov
fsts
das
rorl
xchg
sbb
jl
pop
sub
cmp
gs
hlt
jp
insl
dec
mov
in
dec
jle
fildl
inc
push
hlt
mov
mov
mov
pop
loope
imul
push
orb
adc
xor
std
fidivs
sti
dec
sbb
outsb
inc
push
mov
incb
xchg
jno
dec
sub
add
xchg
or
popf
fidivrs
mov
outsb
loope
inc
fyl2x
mov
setge
inc
xor
out
push
in
in
dec
aam
stos
xor
std
jne
aad
repz
pop
ror
ficomps
sti
aaa
scas
dec
sti
aad
add
out
adc
jo
movsl
or
dec
mov
rcll
sub
outsb
or
mov
subb
mov
mov
pop
mov
bswap
cli
cwtl
sbb
dec
inc
push
in
in
fwait
les
mov
push
scas
lcall
xchg
jecxz
jnp
in
js
xor
hlt
repnz
push
fdivl
outsb
sub
repnz
mov
pop
inc
pop
xor
test
icebp
push
push
outsl
les
insl
mov
ja
fbld
sti
fdivr
mov
jl
mov
cwtl
adc
push
clc
daa
mov
add
mov
sub
ja
cmp
dec
lret
xchg
outsl
ficoms
gs
pushl
xchg
rcrl
mov
pop
fdivrs
xlat
or
mov
sbb
test
fnsave
mov
push
mov
dec
sub
mov
pop
lcall
in
push
mov
in
dec
lahf
xorps
fidivrs
ljmp
cmp
mov
das
cmp
jne
aas
loopne
adc
test
sbb
hlt
lret
mov
cmp
in
adc
sbb
mov
push
xor
xchg
test
orb
push
sahf
mov
jnp
fwait
sub
xchg
shlb
dec
dec
int3
shll
call
sub
mov
cli
mov
add
jecxz
mov
sbb
mov
out
stc
lcall
and
cmp
jnp
pop
and
xchg
mov
xor
pop
jecxz
fisttpll
or
pop
aas
mulb
mov
fldlg2
loopne
xchg
rorb
cmpsb
rclb
addr16
push
arpl
add
cmp
cmp
shrb
mov
sti
out
aad
push
ja
icebp
jmp
mov
jecxz
sbb
test
out
pushf
mov
dec
out
jbe
arpl
adc
jne
out
negb
mov
lock
xchg
adc
jle
pop
bound
pop
movsl
mov
or
aad
lret
cmc
sbb
mov
out
mov
outsb
in
mov
shlb
lret
mov
add
pop
jecxz
out
push
inc
iret
pushf
mov
repnz
cld
push
sahf
outsb
popf
subl
and
daa
pop
lcall
add
xchg
das
cmp
push
adc
lock
repnz
jle
cmp
xchg
push
xchg
pop
xchg
imul
icebp
in
jae
mov
cmp
and
jmp
dec
jne
ficoml
jle
push
fadds
adc
sti
jl
std
pushf
je
fnstcw
sbb
pop
ror
hlt
mov
pop
scas
arpl
dec
push
adc
out
cmpxchg
mov
pop
jmp
int3
mov
mov
arpl
call
and
jmp
jl
jmp
pop
sub
fimuls
add
sbb
sub
and
shll
jl
movsb
pop
push
inc
sub
xchg
mov
inc
add
adc
jbe
lods
push
and
stos
lods
add
insl
push
mov
stos
shlb
fwait
sti
cmp
arpl
sub
xchg
add
nop
adc
pop
cmp
dec
insl
xchg
ja
daa
dec
loope
dec
cmc
cmpsl
mov
lret
sbb
loope
lods
add
mov
enter
mov
jge
jb
and
iret
xchg
mov
push
jno
pop
popf
mov
push
pop
and
xchg
jmp
fisttpll
out
or
mov
jnp
sub
aam
das
or
call
jecxz
andb
sub
cmp
dec
mov
adc
sbb
aas
xorl
call
sahf
imul
xlat
mov
mov
or
xor
xchg
pusha
fbld
subb
test
mov
icebp
adc
cmc
clc
sub
and
push
data16
mov
in
je
mov
ss
mov
push
inc
add
sub
adc
lea
jl
lret
dec
std
dec
pop
cli
int
pop
out
imul
repnz
outsl
jg
ret
xchg
push
call
xlat
cltd
sub
adc
fldt
call
pop
and
cli
cs
mov
jle
lods
jo
mov
inc
jbe
cmp
lock
add
mov
mov
fidivrl
adc
pop
std
inc
imul
sub
pavgw
or
dec
hlt
mov
stos
and
rcrl
mov
mov
jg
stc
adc
dec
cmp
repz
dec
lods
jo
inc
mov
mov
jae
jmp
loope
sarb
push
mov
inc
aaa
in
hlt
mov
mov
inc
adc
mov
out
push
sbb
inc
add
cmp
int3
aad
mov
mov
sub
sub
mov
scas
adc
xor
pop
add
dec
sub
mov
add
jmp
adc
test
into
xor
fld
xchg
sbb
sbb
stos
cmp
cvtps2pd
add
test
pop
sbb
push
pop
push
xchg
mov
ss
inc
sub
loop
push
jb
mov
inc
sti
in
or
out
bound
lahf
xor
nop
push
cmp
popf
add
pop
push
cmp
aaa
push
data16
in
stos
test
dec
clc
movsb
jnp
push
cmpsb
in
fnsave
popf
dec
rorl
rcl
mov
sub
mov
call
inc
lahf
insl
mov
xchg
and
mov
and
sub
cmpsb
push
ds
ss
jl
push
test
add
mov
pop
rcll
test
cmpsl
xchg
out
inc
jmp
jns
mov
dec
mov
iret
int3
adc
ss
insb
jmp
data16
cmpsl
dec
fbstp
outsl
push
dec
dec
or
das
je
add
out
mov
sahf
and
adc
jmp
test
adc
and
lock
dec
rcrb
sub
std
inc
adc
mov
loop
xor
jbe
out
rcll
mov
push
mov
dec
repz
insl
mov
mov
push
adc
mov
rolb
mov
jmp
subl
lret
jns
xor
arpl
sub
dec
jecxz
out
iret
mov
into
mov
sbb
inc
int
adc
nop
call
inc
cmpsl
fistpl
dec
les
mov
inc
adc
fidivrs
mov
aaa
and
and
lods
jbe
call
bound
out
mov
shlb
jl
testb
xchg
and
decb
jecxz
popf
pushf
mov
outsb
push
aaa
mov
inc
mov
fcompl
fs
ficompl
test
add
jmp
int
jae
mov
scas
outsl
les
cmp
loope
mov
or
setns
into
add
out
sbb
or
sti
lahf
push
jbe
add
pop
mov
xchg
mov
add
and
pop
and
pop
inc
testl
inc
or
jo
pop
and
add
sbb
out
inc
inc
pushf
cmp
in
mov
movsb
xchg
sub
lods
inc
roll
dec
jecxz
adc
dec
or
sbb
sbb
scas
jnp
mov
dec
cs
cld
cli
mov
into
xchg
inc
cli
rorl
fstps
into
add
scas
xor
inc
out
in
xor
sub
dec
lock
sbb
fisttps
pop
das
sahf
ljmp
ljmp
mov
xchg
loop
enter
nop
mov
xchg
mov
mov
cltd
aaa
mov
jb
test
pop
lret
je
sbb
and
into
cmp
call
test
filds
jmp
inc
test
adc
out
sbb
push
call
jb
jmp
xor
lcall
pusha
movsb
push
ljmp
sbb
mov
mov
pop
dec
sub
xor
gs
pushf
and
sbb
rol
xor
cmc
sahf
pusha
andl
xor
out
movaps
enter
sbb
mov
outsb
and
xor
call
pop
ljmp
notl
lds
sti
xchg
lahf
icebp
mov
aas
stc
les
les
dec
pop
xor
adc
jnp
push
loope
and
jb
dec
arpl
lds
jbe
mov
ljmp
mov
outsl
shll
scas
leave
jle
add
movsb
dec
popa
test
adc
shll
push
aas
xchg
add
mov
imul
push
dec
leave
cmp
inc
xchg
pop
pushf
mov
lods
mov
mov
pusha
call
xor
cmp
mov
mov
xchg
push
test
in
mov
xor
jecxz
lods
jo
push
xor
push
cltd
cmp
jl
pusha
test
out
sbb
imul
adc
inc
pop
popa
lret
mov
xchg
inc
shll
outsb
fucom
aas
cs
and
pop
movsl
pop
or
sub
mull
fistpll
subb
push
shr
xorb
sbb
add
mov
rorl
repz
inc
nop
imul
mov
inc
insl
mov
sbb
popf
fisubrs
repnz
out
sub
jmp
cwtl
lods
or
pop
jb
cmp
and
sub
sbb
cmp
mov
and
mov
roll
ret
sub
addl
dec
jns
adc
repz
push
jge
shl
mov
decb
mov
orb
cmpsb
decl
mov
mov
lods
xchg
insl
adc
or
stc
xchg
and
push
sbb
scas
loopne
into
test
test
xchg
inc
pop
psllq
cmp
mov
jo
std
std
jle
jecxz
xchg
dec
aam
fst
adc
mov
fidivrl
mov
mov
pop
xchg
dec
mov
mov
out
or
sub
mov
lods
dec
sub
mov
and
jae
or
test
push
inc
xchg
jae
shlb
cmp
cmp
xor
das
xor
xchg
clc
out
jp
sub
jo
iret
fdivl
pop
add
sti
pop
out
sbb
nop
arpl
das
cmp
addr16
loop
jb
and
repnz
clc
cmp
inc
mov
imulb
mov
ja
jo
add
insb
movsb
pusha
adc
das
out
lea
sbb
push
mov
ja
ret
jmp
rorl
push
mov
imul
push
int3
flds
add
clc
or
aam
xor
mov
mov
cmpb
hlt
imul
les
mov
shrb
or
sbb
or
je
jp
jo
cmp
push
push
outsl
push
or
push
push
dec
loop
or
push
in
loope
mov
jo
in
iret
jg
shl
jecxz
mov
or
mov
mov
stos
imul
xchg
dec
cmp
arpl
dec
fidivrs
add
jbe
and
cmpsb
xlat
mov
pop
int3
mov
jg
pop
cmp
into
cmp
mov
xchg
sbb
cmp
push
shr
in
rclb
popf
repz
ret
imulb
mov
addr16
out
push
cld
lret
jae
and
pop
je
add
inc
pusha
xchg
arpl
mov
mov
mov
lahf
leave
xlat
add
out
pop
sbb
push
mov
lea
enter
pop
sarb
popa
jae
loopne
inc
pop
hlt
in
loope
pop
insb
cld
inc
sbb
jno
call
scas
fistpll
or
mov
pushf
or
out
cmp
mov
inc
cmp
mov
push
add
jnp
ret
mov
xchg
fistl
in
jo
or
js
shlb
test
iret
pop
imul
enter
aas
mov
in
dec
rclb
mov
inc
xor
ds
push
rcrl
cmp
filds
pop
ljmp
jnp
test
arpl
mov
xor
loope
xor
mov
in
inc
jmp
mov
jl
xchg
xchg
pop
cmp
notb
dec
add
sub
imul
cwtl
xchg
or
call
loope
xor
mov
repnz
sarb
outsl
inc
pop
in
jns
cld
hlt
mov
cmp
adc
adc
faddp
movsw
dec
mov
dec
pop
arpl
pop
sbb
xorl
push
sub
scas
inc
dec
mov
pop
shrb
mov
iret
mov
add
data16
lock
adc
scas
cmp
sarl
daa
incl
push
mov
and
mov
ljmp
mov
adcb
sub
or
test
mov
mov
push
mov
xchg
shlb
test
repz
popf
popa
add
sub
ss
imul
insl
cs
out
pop
daa
pop
add
pusha
shlb
adc
das
push
or
jg
cmpsb
inc
int3
mov
fcomps
in
lds
cli
mov
pop
test
shl
movsl
repz
pop
hlt
mov
ret
cmp
aam
outsl
repnz
sahf
pop
jecxz
cmc
jl
xor
fcomps
js
pop
cmp
fwait
sbbl
fcomps
mov
and
pop
xchg
leave
hlt
sub
pop
and
ficompl
fisubrl
mov
scas
add
push
cmp
mov
xchg
sbb
enter
pop
push
jmp
lret
push
repnz
mov
lea
mov
enter
add
int3
in
push
leave
loopne
adc
adcb
add
mov
shl
and
sbb
enter
jnp
adcb
aaa
orb
rol
sahf
xchg
not
and
mov
mov
inc
sbb
xor
or
clc
mov
inc
cbtw
popl
or
dec
add
lock
sar
jge
arpl
loope
and
fiadds
rorl
scas
mov
js
cmpsl
jnp
cmp
outsb
in
mov
fisubs
fcmovnu
divl
lea
push
aad
cmp
adc
sbb
push
mov
pop
in
dec
nop
and
ret
fmull
es
inc
push
cmp
or
std
fs
test
insb
inc
or
jg
dec
outsb
in
mov
scas
cmp
push
xchg
int
sbb
or
js
mov
sub
les
iret
sahf
loopne
mov
jmp
fisubs
hlt
cmp
das
scas
xchg
aaa
jp
sub
stc
sbb
push
pop
mov
stc
jp
imul
cmp
sbb
and
jne
and
mov
mov
jns
dec
in
push
pop
cmp
and
cmc
xchg
fstl
in
mov
mov
adc
cwtl
loopne
jmp
test
push
imul
test
fcmove
jo
movsb
ss
imul
sbb
xchg
mov
sbb
push
fs
cmp
jb
popf
les
sub
outsl
arpl
enter
hlt
jl
loop
in
push
pop
sar
fists
div
add
add
dec
leave
mov
mov
jae
inc
push
sbb
cmp
dec
xor
shrl
test
jno
lahf
add
sbb
rclb
jbe
test
cmpsb
or
lods
fcomip
imul
jmp
cmp
add
dec
clc
aad
test
push
mov
mov
sbb
bound
adc
jg
cmpsl
out
xor
pusha
add
mov
pop
stos
jae
sbb
loope
mov
aad
cmp
ljmp
loope
xor
mov
inc
adc
sbb
push
sub
leave
test
lcall
hlt
mov
ds
das
and
fwait
jne
pop
xor
or
outsb
mov
sarl
iret
or
add
and
shrl
ret
mov
sbb
in
mov
jg
sub
aas
sti
movsb
xlat
sbb
cld
dec
xchg
insl
sub
cmp
icebp
adc
or
adcl
cmp
add
insb
push
gs
js
inc
sub
sarb
int3
iret
fsubrl
add
addr16
les
xor
mov
jp
adc
inc
xchg
and
xchg
or
pop
leave
cs
and
popf
jge
lea
xchg
lods
pop
jp
mov
loope
cmp
out
cmpsb
mov
push
push
out
jge
push
jle
outsl
imul
sub
mov
xchg
cwtl
mov
jnp
adc
inc
xor
mov
jge
add
jne
sub
mov
sbb
mov
or
outsb
add
in
push
mov
lea
daa
sahf
mov
jbe
mov
push
lea
scas
stos
xchg
xor
mov
pusha
in
sbb
xchg
in
and
dec
cmpsb
mov
movsl
jge
cltd
in
out
mov
aad
xchg
stc
and
lret
les
pop
leave
ds
or
dec
pop
mov
mov
adc
mov
mov
loopne
push
out
jl
lahf
lcall
into
or
add
push
mov
clc
cmp
ss
jno
xlat
jge
inc
push
push
inc
ret
cmp
dec
mov
js
fmull
ret
mov
jb
cmp
lds
into
sub
popa
div
xor
sub
or
fldl
fiadds
mov
sbb
adc
cmp
sub
cmpsl
dec
pop
ja
sbb
adc
xor
leave
ret
mov
inc
push
repnz
rcll
sahf
rcll
sub
dec
fldl
adc
push
and
mov
aas
loopne
xchg
xor
sbb
popa
mov
dec
add
sub
pop
lods
ficoml
adc
dec
pop
pop
pusha
mov
lcall
adc
cmpsb
inc
in
mov
mov
sub
loopne
pop
push
and
mov
push
dec
jg
lds
ror
out
push
xchg
push
inc
mov
push
call
jmp
and
imul
pop
jmp
push
adc
inc
loope
cmc
jne
dec
or
push
arpl
jnp
dec
jae
push
out
stos
xchg
aas
jb
ror
enter
call
out
cmp
sbb
ss
cltd
adc
aam
insb
sahf
xor
inc
mov
stos
sub
xchg
cmp
movsb
and
inc
mov
and
out
xchg
jnp
mov
out
cli
ljmp
cmc
xor
sti
or
mov
jmp
lret
push
imul
xchg
push
jecxz
jae
stc
lahf
pusha
or
jo
outsb
mov
push
aam
mov
test
pop
xchg
lret
or
add
ljmp
inc
jns
cmp
fstps
fisubrl
sub
repz
fdivr
cli
ret
pop
aam
mov
jns
std
xor
mov
lret
repz
mov
mov
or
mov
inc
xchg
loopne
int3
mov
leave
sarl
mov
xchg
mov
cmp
inc
sbb
adc
mov
mov
inc
in
cli
fistps
pop
test
int3
and
mov
inc
sti
xchg
inc
out
lods
inc
shlb
push
ret
or
arpl
repz
adc
lret
imul
rolb
cmp
and
pop
jo
and
pop
and
sbb
loop
jo
js
cmp
mov
imulb
sub
mov
into
data16
jle
xchg
jbe
cmpb
dec
cwtl
push
inc
pop
pop
mov
dec
scas
dec
adc
std
ljmp
jle
out
mov
scas
jl
sub
lret
xchg
aas
sti
jl
sbb
push
test
fs
dec
pop
sbb
pop
add
push
sarl
push
and
push
pop
jle
cmc
cmpsl
hlt
leave
xchg
cmp
daa
mov
sub
jmp
cli
fldl
dec
test
cmc
pop
inc
pop
sar
fistpl
pop
or
loopne
push
mov
sub
push
loopne
push
sahf
ss
cmp
daa
mov
mov
popf
xchg
lret
and
insl
push
nop
test
or
dec
das
xor
sub
mov
xlat
xchg
pop
es
ljmp
jmp
in
faddl
mov
outsb
fmull
lahf
test
fidivs
adc
push
dec
aam
and
adc
mov
mul
jb
hlt
sub
lods
data16
lahf
sbb
pop
mov
sub
sbb
mov
inc
xchg
add
sub
insl
sub
nop
cmc
or
jns
cmp
add
cltd
inc
arpl
xchg
lods
jb
jo
sti
and
xchg
mov
mov
or
out
push
ss
cmp
shll
inc
negl
push
dec
jmp
cmp
pop
subl
xchg
lahf
cmp
fdivrs
mov
popa
in
lods
decl
xchg
xchg
jae
pushf
sahf
push
shr
add
rolb
enterw
add
nop
push
jnp
or
push
ret
lods
xlat
pushw
xor
cwtl
jnp
subl
push
bound
mov
sub
test
pushf
lcall
out
gs
out
jbe
dec
push
push
inc
aad
push
cmp
push
je
ds
into
ret
add
xor
mov
repnz
in
add
outsl
mov
cmp
pop
addr16
adc
xchg
push
aam
out
lcall
out
push
sbb
push
and
roll
je
sbb
outsl
mov
mov
jnp
vprotw
xchg
fsubrs
dec
insl
jbe
cmp
shrl
jne
mov
push
aam
sbb
mov
stos
fldcw
push
sbb
mov
push
sbb
shrl
adc
dec
ljmp
cmp
icebp
cmc
or
mov
jp
push
mov
rorl
fnstsw
mov
push
imul
popa
int
mov
movsl
push
jns
adc
cmp
cwtl
jbe
in
dec
scas
mov
pop
test
push
inc
adc
sbb
xchg
lea
adc
shl
ret
pop
out
xor
movsl
lret
mov
cmpsb
push
xchg
in
mov
mov
push
xor
aas
repz
ds
mov
int3
dec
jno
mov
mov
mov
std
int
loopne
and
mov
arpl
lret
xor
out
xorl
or
in
scas
adc
jge
xchg
pop
int3
xor
cmc
mov
adc
xchg
push
sti
xor
and
lods
mov
cmp
out
cmp
xchg
nop
sar
mov
std
xchg
in
inc
aad
pusha
arpl
cwtl
popf
jne
das
lcall
fwait
dec
je
repnz
mov
hlt
and
dec
sub
fdiv
into
xchg
inc
fnstcw
out
dec
and
sbb
inc
or
add
mov
pop
imull
sarb
aad
scas
ret
in
mov
mov
add
cmp
das
adc
mov
and
ds
sbbl
dec
or
sub
mov
dec
add
and
add
js
in
inc
testl
and
call
insb
jmp
xor
int3
push
ljmp
je
sbb
sbb
loope
push
sarb
rolb
mov
fbld
test
sbb
cmp
jle
fisubrl
inc
mov
iret
sbbl
gs
dec
rclb
shll
and
subb
mov
jmp
lret
and
ret
lods
loope
xchg
jmp
int3
lock
test
and
iret
sub
arpl
test
or
ret
out
addb
or
sti
mov
into
and
dec
push
jns
fldl
lods
adc
mov
pop
add
inc
sub
andb
or
ja
shr
cmpsb
test
jg
je
ret
icebp
daa
lcall
sub
je
pusha
call
dec
in
add
mov
jp
imul
inc
inc
dec
mov
pop
cld
sub
push
cwtl
sti
xchg
xor
xchg
rcrb
cs
push
aad
std
dec
sub
movsb
cmp
cmp
cld
fs
mov
xchg
pop
xchg
fsubl
out
mov
mov
lods
pop
fsub
pusha
ljmp
cmp
div
ret
lock
or
pop
mov
ss
mov
xor
dec
sti
push
push
xchg
dec
je
out
notb
ret
cmp
add
mov
jb
repnz
mov
xchg
mov
mov
sbb
or
pop
mov
cmp
jo
xor
insl
nop
stos
sub
add
lret
cmp
repz
adc
sub
adc
aad
push
dec
adc
xchg
jge
push
xor
dec
push
stos
dec
sbb
sbb
mov
loop
mov
jl
adc
xchg
jmp
daa
pop
sbbb
or
addr16
inc
xor
loope
jl
mov
out
lret
sub
in
inc
popa
repnz
adc
xchg
js
mov
mov
fs
aaa
dec
ret
push
xchg
jno
sbbb
mov
push
xor
es
fs
lods
and
shll
sbbl
icebp
cmp
add
inc
das
sahf
les
idiv
xor
sbb
iret
inc
inc
jno
cwtl
push
sahf
mov
add
push
mov
je
ds
push
push
sub
out
jb
es
rcrb
xchg
mov
jl
inc
mov
repnz
xchg
rcl
outsb
test
ss
mov
sub
shl
dec
in
jo
gs
mov
aam
call
dec
pusha
cmp
call
lcall
int
popf
aam
fwait
loopne
jg
mov
sbb
mov
aam
or
dec
inc
lock
add
mov
arpl
fs
fmull
xor
int
or
nop
rcrl
in
adc
cmpsl
dec
movsl
sbb
mov
loope
shll
je
inc
insb
sub
sbb
adc
or
xchg
faddl
mov
xchg
jne
and
jb
scas
or
rep
xchg
sbb
prefetcht2
mov
pop
jae
xchg
sub
ret
cld
mov
js
hlt
pop
insb
shlb
cld
mov
sti
push
mov
fsubrs
push
je
cmc
lahf
daa
or
call
fisubl
mov
lock
cmp
lahf
aas
cmc
mov
push
sub
repz
sub
dec
movsl
jecxz
pop
cltd
cmp
pop
push
mull
mov
sti
cld
out
repnz
ss
xchg
mov
adc
jnp
mov
sub
dec
push
sbb
iret
jbe
dec
decb
mov
sbb
dec
mov
jbe
iret
xor
or
repz
mov
enter
xchg
shr
daa
fs
sbb
mov
jae
add
mulb
and
inc
xchg
xchg
jp
or
ljmp
je
fisubl
push
mov
test
mov
cld
data16
test
mov
test
mov
test
adc
iret
fimuls
stos
loopne
aas
lret
loop
add
fsub
pop
gs
sbb
fs
xor
test
sub
inc
adc
into
repnz
dec
jl
inc
ds
push
jns
adc
jg
loope
jns
fcom
jb
jp
arpl
stos
dec
xor
fcom
mov
lret
js
das
outsb
xlat
loopne
inc
push
insl
sub
xchg
rolb
push
aam
jl
mov
in
or
mov
inc
xlat
test
test
sub
mov
push
enter
cmp
pop
pop
adc
movsl
xchg
push
add
mov
lods
fisttps
stos
imull
cld
ret
mov
movsb
push
imul
mov
inc
push
and
sub
mov
mov
sub
fsubl
ja
ret
mov
mov
cwtl
jge
jmp
pusha
xchg
std
adc
sbb
mov
jb
push
sbb
push
pop
push
imul
pop
stc
jl
fwait
lock
outsl
push
lock
testb
hlt
daa
push
in
les
sub
dec
inc
push
and
imul
xor
test
jbe
lcall
jne
jle
jle
cmp
aad
lock
sbb
xor
sub
mov
mov
or
sbb
or
push
adc
push
jecxz
aaa
dec
push
dec
pop
cli
negl
jb
xchg
fmull
rol
or
mov
lahf
push
rcll
mov
xchg
cmp
test
sahf
orl
jle
mov
mov
bnd
jecxz
pop
fists
pop
jle
stc
lods
xchg
sbb
adc
cld
adc
test
inc
fstp
shrb
into
imul
test
sbb
loop
xchg
loope
test
and
hlt
movsb
mov
sarb
ds
scas
inc
or
jns
outsl
mov
icebp
and
cmp
lahf
mov
mov
das
cmpsl
pop
sub
cmp
inc
cmp
inc
insl
ljmp
and
dec
orl
inc
or
sub
shl
xor
or
mov
jmp
lods
xor
mov
xchg
negl
mov
fs
das
and
repz
add
adc
movsl
sub
in
stos
or
fdivrs
inc
pop
insl
xor
add
insl
xor
mov
mov
push
mov
orb
movsb
xor
nop
and
dec
aam
jge
into
fsubrl
pop
fadds
pop
mov
sub
pushf
or
jp
or
mov
test
and
nop
repz
ja
sub
cmpsb
adc
ds
or
sbb
push
fidivrl
dec
push
jmp
mov
fs
sarb
cmp
and
mov
jnp
xchg
cmp
mov
testl
cmp
mov
push
or
cmc
jns
mov
and
in
sub
push
je
out
je
mov
jl
test
cmp
or
popa
lret
mov
es
je
dec
sbbl
cmp
lds
push
aaa
jle
cmp
lret
push
or
and
aam
nop
orb
push
ss
call
cmp
rcrl
adc
xor
jnp
xchg
popf
sub
das
fsubs
push
mov
lcall
sub
cwtl
enter
pushf
mov
mov
adc
pop
jbe
add
add
adc
fildll
mov
mov
lea
mov
sub
je
xchg
jl
jle
inc
iret
or
scas
loop
sti
cmp
mov
inc
addr16
mov
sbb
or
mov
mov
jno
cmp
jns
scas
inc
loopne
or
pusha
scas
push
xchg
mov
mov
arpl
test
xor
push
insl
xor
sbb
add
and
push
dec
inc
insl
sbb
cmpsl
xchg
pop
mov
aam
leave
scas
popa
stc
ljmp
inc
xorl
dec
hlt
add
jb
jb
ret
xchg
negb
test
in
jp
ror
lds
sub
or
test
out
stos
push
adc
mov
and
xor
push
adc
stc
push
mov
aaa
jo
in
icebp
in
test
mov
fbld
mov
nop
mov
dec
shrb
bound
mov
xor
pop
stos
pop
daa
mov
repz
mov
mov
inc
add
xchg
out
movsl
pop
jnp
ljmp
and
shll
xchg
cmp
ret
cmp
cld
lcall
jmp
push
cmp
jg
cmp
sbb
sbb
cmp
mov
xchg
jno
inc
ret
mov
sub
dec
leave
jb
xor
cmp
enter
in
dec
mov
add
aaa
xor
popf
xor
jle
test
inc
jns
jbe
sbb
adc
repnz
push
sub
push
xorb
pop
mov
cli
push
or
scas
fs
hlt
es
sbb
aaa
and
cltd
sbb
enter
mov
out
and
push
mov
xchg
push
cmp
leave
lock
add
test
xlat
pop
pop
lcall
es
lahf
mov
test
mov
add
out
not
jl
mov
xchg
add
subl
inc
or
sub
push
adc
loope
test
cmpsl
and
int
or
ljmp
mov
addr16
lods
push
cmpsb
mov
xchg
test
rolb
pusha
jno
mov
test
stos
rcl
mov
push
jae
dec
data16
sub
mov
xor
aaa
push
pop
cmp
adc
shll
loope
mov
xchg
mov
std
mov
push
pop
push
cld
imul
hlt
jno
adcl
rorl
sbb
adc
je
dec
mov
mov
ss
dec
aas
mov
rolb
pop
dec
dec
ss
pop
sbb
fsubl
fisubrl
and
loop
xor
pop
testl
out
lods
fmull
repnz
daa
je
sbb
jbe
push
femms
mov
add
xchg
ss
popa
data16
xchg
fisttpl
cs
pop
mov
clc
aad
cmp
nop
faddl
fcomip
push
out
push
dec
arpl
jge
int3
popa
ret
movsb
mov
add
or
cmc
mov
gs
cld
mov
adc
pushl
add
pushf
mov
mov
pop
lock
movsb
add
xchg
xchg
mov
add
jge
adc
adc
aaa
insl
icebp
and
jns
adcb
dec
adc
roll
or
nop
push
and
push
dec
adc
in
sahf
test
orb
ja
outsb
jno
repz
jp
mov
pop
jno
sub
sbb
jmp
fs
mov
into
shll
repz
ret
sub
mov
xor
inc
mov
and
insb
and
lret
and
or
rorb
or
ja
pop
subl
cmpb
mov
clc
xor
push
sbb
dec
cli
fildll
push
in
pop
out
mov
sti
and
adc
rcrb
jp
out
mov
xor
andb
sbb
jnp
jg
jg
sub
inc
andl
adc
push
test
add
fucomp
ljmp
test
inc
mov
sbb
aad
jbe
cmpsl
inc
jae
add
jns
sbb
mov
and
push
aad
or
and
sub
ja
mov
jno
test
insb
sbb
dec
push
addr16
adc
jge
xor
stc
lods
dec
rcr
xchg
mov
into
mov
ficomps
push
sub
and
pop
jo
incl
cld
loopne
mov
push
lahf
mov
fsubrp
adc
lods
cmc
inc
adc
cmp
xor
sub
scas
xchg
cwtl
xor
sub
sahf
sub
xor
sbb
repnz
sub
lahf
cmp
dec
mov
adc
push
inc
xor
ret
xor
pop
push
sti
test
xchg
test
dec
dec
pop
ds
jl
pop
jns
aas
pusha
and
add
scas
ljmp
hlt
pop
jbe
jp
mov
cmpsb
out
push
pop
mov
shll
divb
mov
add
sbb
das
push
loop
call
ds
cmpb
sbb
dec
bound
daa
inc
pop
lods
scas
push
scas
xor
lods
adc
aad
into
in
jno
xor
arpl
mov
stos
lret
or
scas
in
in
inc
mov
out
cmc
push
sahf
fwait
dec
dec
pop
repz
pop
and
lret
loopne
aaa
pop
notb
insb
bswap
xor
pushf
pop
aas
and
mov
cmpsb
repz
add
and
xchg
jge
kunpckbw
sub
lcall
push
out
pop
loop
stc
call
pop
imul
cmpsb
or
aam
call
jno
mov
in
daa
inc
pop
pop
jmp
scas
jb
ss
cmc
lahf
xor
call
aas
sbb
cmp
add
push
lods
push
xchg
jmp
mov
addb
rolb
gs
mov
por
push
sub
and
in
out
mov
lret
xor
out
sti
xlat
mov
pushf
sbb
cmp
stos
inc
aas
xorl
sbb
xchg
in
adc
test
push
scas
mov
jle
fwait
xchg
sahf
jnp
pop
xor
dec
cld
hlt
mov
daa
dec
inc
or
mov
push
xor
sbb
push
out
or
lods
int
mov
outsl
test
lods
fsub
stos
jne
xor
fwait
add
das
out
rclb
lods
or
flds
cmp
gs
out
ret
and
xchg
pop
xor
ret
daa
mov
daa
mov
adc
outsb
leave
mov
ret
int3
icebp
cmp
subb
xor
mov
jb
fwait
cmp
sub
or
lock
add
mov
daa
and
fidivrs
cld
rolb
xor
adc
jge
xor
mov
fwait
push
mov
dec
dec
gs
cwtl
jle
ss
shrl
mov
sbb
mov
xor
pop
aam
inc
sbb
inc
mov
inc
ret
adcb
pop
aam
mov
adc
push
insl
clc
mov
movl
or
lods
mov
mov
jb
popa
adc
daa
mov
daa
push
mov
and
mov
adc
mov
mov
dec
mov
adc
adc
jg
popa
data16
imul
fisubs
fistl
xor
inc
or
decl
mov
inc
ret
lea
cmpsl
xchg
popa
pop
sub
fdivp
cli
cmp
in
cmpsl
xor
push
or
lds
sub
popa
insb
add
lock
scas
sub
add
and
inc
jbe
popl
or
jecxz
mov
mov
cmp
push
ret
and
das
cwtl
cmpsb
cmp
bound
sti
es
cld
add
xor
out
cmp
adc
jnp
xchg
pop
mov
fisttpl
and
jno
inc
loop,pn
cmp
popa
mov
or
into
cmp
lock
inc
and
mov
mov
test
rcr
pushf
mov
xchg
add
rcrb
test
xchg
push
jns
jo
repz
iret
inc
stos
nop
xchg
std
sbb
pop
mov
sub
jge
mov
jb
test
arpl
pop
xchg
push
inc
push
xchg
ja
mov
out
aad
xchg
inc
push
sbb
shlb
mov
cmovae
cmp
aaa
mov
imul
stos
js
aam
pop
pop
mov
push
shll
mov
push
pop
or
xchg
jo
cli
mov
enter
cli
aas
mov
xchg
cmp
ret
sub
into
xor
jmp
cmp
scas
insb
mov
pusha
sbb
lcall
cmpsl
xlat
and
adc
sbb
mov
mov
and
inc
push
jns
scas
xor
cmpsb
lcall
xchg
jno
adc
in
jo
push
std
fdivs
sub
imul
fwait
and
xchg
je
cmp
cli
jmp
enter
or
imul
inc
repz
mov
es
test
loopne
sub
pop
push
cmp
fmulp
repnz
adc
and
mov
pop
subb
les
pop
sub
nop
push
mov
xorl
das
xor
mov
setl
shll
mov
xchg
mov
ficoml
xor
sbb
sbb
ja,pn
and
movsl
aam
dec
mov
inc
outsb
mov
pop
popf
fldt
sbb
xchg
and
mov
clc
out
push
inc
push
sbb
push
mov
int3
leave
mov
lods
fcmove
add
gs
fnstenv
ljmp
in
mulb
stos
dec
daa
mov
mov
or
push
fmuls
and
fldt
dec
test
or
jne
sub
mov
outsb
add
mov
enter
imul
xorb
push
test
inc
mov
sub
mov
lcall
loope
call
and
xchg
jle
mov
sbb
push
xchg
lcall
pusha
fstps
pop
lock
sbb
cld
out
cmp
or
leave
mov
inc
and
xor
imul
pop
out
movsl
xor
enter
push
cltd
popa
xor
mov
in
aad
cmp
sti
add
inc
push
je
sub
adc
cmpsb
cmc
mov
mov
jo
aaa
add
xchg
out
mov
pop
mov
lods
cmc
cmp
les
test
and
fnop
jle
mov
in
sub
or
lret
loop
shlb
mov
cld
icebp
pop
movsb
mov
pop
sbb
jbe
out
cmp
loopne
and
push
decb
imul
xchg
repz
push
call
aas
push
hlt
xor
scas
lcall
aam
pop
shl
sbb
add
cmpsb
test
xchg
mov
pop
mov
je
xor
push
or
add
jne
inc
je
into
push
sahf
pop
fwait
adc
inc
adc
fs
fiadds
push
dec
sub
mov
jb
int3
jae
jae
cmp
xchg
jno
mov
dec
xchg
push
push
jb
movsb
movsl
cmp
add
out
mov
and
es
and
add
dec
push
add
movsl
mov
fstps
push
movsb
orl
mov
cmp
arpl
bound
xchg
shld
shr
xchg
dec
mov
xor
push
cmpsb
repz
loopne
jl
mov
pusha
jae
adc
jno
xor
pusha
hlt
push
jge
mov
ja
lret
xchg
aaa
addr16
inc
jle,pn
mov
dec
in
push
sbb
lea
mov
pop
test
adc
lea
adc
int3
jecxz
push
fnsave
in
mov
repnz
push
jns
pop
mov
inc
mov
mov
cmp
jae
aam
inc
lds
stos
add
test
in
or
push
stos
dec
loope
lcall
cmpsb
imul
mov
cmp
add
adc
negb
mov
mov
sub
arpl
cs
push
pop
shrl
test
push
adc
cmpl
jmp
mov
rolb
int
xchg
frstor
adc
outsb
sahf
mov
push
mov
je
sub
dec
push
call
sub
fimull
or
lds
dec
xor
loop
and
pop
call
cli
pmaxub
xor
pop
imul
shll
lcall
fnsave
test
pop
stos
and
mov
xorl
cmpsb
sbb
pushf
lea
mov
xchg
mov
push
mov
sbb
mov
adc
popf
xor
rolb
xchg
push
sbb
mov
stos
jl
in
in
inc
les
cmpb
mov
dec
cli
mov
or
negb
mov
andl
hlt
or
aad
dec
jb
push
lods
insb
xchg
popa
pop
push
les
sub
cmp
dec
addr16
xor
psadbw
pop
add
lret
xor
in
mov
dec
clc
push
nop
sub
or
push
daa
mov
adc
ret
pop
divb
push
mov
push
push
or
int
inc
lods
or
adc
cli
mov
mov
jno
not
sub
dec
jno
lcall
lods
scas
push
jne
or
jae
ds
push
in
pop
stos
mov
push
rcll
rclb
fsubrl
aam
xor
popf
stos
out
les
scas
dec
pop
xchg
mov
leave
fwait
rorb
push
jae
mov
shrl
pushf
xchg
adc
push
addr16
decb
jo
cmp
fs
imul
enter
jb
cltd
mov
clc
out
loope
call
mov
lods
inc
data16
xor
dec
lock
mov
mov
mov
and
pusha
in
jno
popaw
addr16
mov
push
aad
mov
outsb
xlat
lcall
in
fwait
fwait
mov
pop
std
scas
shlb
sbb
cli
mov
bnd
push
icebp
push
cs
sub
cmp
cmp
mov
roll
pop
xor
aas
sbb
pop
mov
sub
sub
ss
jge
lds
add
pop
push
repnz
sbb
cmp
or
jae
and
jmp
add
aas
ss
arpl
mov
rclb
adc
inc
mov
jp
into
in
push
test
and
inc
shll
and
test
sbb
pop
mov
cmp
jecxz
xrelease
fidivs
pusha
xor
mov
mov
bound
inc
sbb
or
jge
sub
jmp
xchg
push
dec
aam
sub
and
testl
adc
xchg
and
mov
adc
repnz
or
in
jns
clc
das
add
mov
add
jne
adc
iret
call
xchg
fmull
push
jno
fwait
cmp
ss
dec
sub
int
in
aam
loope
jg
in
dec
popa
into
icebp
subb
xlat
inc
cmc
in
cmp
adc
andb
push
mov
lea
or
and
or
sbb
aad
lcall
cmp
dec
inc
dec
mov
jnp
das
mov
insb
sbb
test
ret
jns
dec
mov
sahf
pop
inc
xchg
subl
push
sbb
fs
test
rolb
les
aad
ret
inc
jbe
in
test
aas
mov
outsl
jae
cwtl
mov
in
push
cmp
pop
test
mov
subl
sar
fidivl
push
lret
fimull
rcll
ret
sbbl
cmp
and
xchg
outsb
out
das
int
xor
push
ficoml
or
aad
ljmp
sub
jo
push
xchg
sarl
adc
adc
and
rorl
xchg
fwait
xor
xlat
clc
ss
movsl
mov
mov
inc
jne
cmovg
sub
pop
ss
fcmovbe
and
clc
dec
mov
jae
call
sub
sub
pop
jmp
mov
xlat
push
xor
jno
rol
cmp
test
inc
adc
push
xchg
mov
mov
dec
inc
mov
bound
fwait
xor
loopne
stos
mov
or
xor
jbe
outsb
repz
and
xchg
xor
cs
movsl
pop
cli
adc
mov
mov
xor
mul
mov
pop
cmpb
fdiv
sub
add
and
pop
arpl
lret
js
xchg
lock
add
inc
fnstsw
pop
xlat
ja
cltd
or
sahf
mov
sbb
cmp
repz
in
int3
jne
adc
inc
inc
sbb
and
fistpll
es
xorl
mov
xlat
iret
loop
push
push
adc
cmp
jne
mov
in
cld
icebp
int3
push
cmp
dec
insb
sub
sub
loope
pop
mov
sbb
xor
xchg
push
subb
xor
add
ret
test
sahf
xchg
lods
sub
fs
push
movsb
jnp
fsts
pop
pop
into
mov
cmp
xor
lods
mov
sub
and
loope
sbb
aad
dec
or
lcall
call
inc
mov
mov
pusha
sbb
stos
rorb
pushf
xchg
cwtl
xor
or
or
pop
xor
jbe
xor
scas
or
dec
lcall
pop
sbb
mov
inc
push
out
fs
test
xor
fsubr
and
mov
mov
ljmp
mov
test
xor
xchg
mov
out
dec
mov
mov
aas
xor
adc
mov
pop
add
adc
cmp
int
scas
jge
repnz
loop
dec
lahf
adc
js
out
mov
aaa
movb
out
data16
dec
pop
sub
js
jb
cwtl
mov
stos
cmc
scas
orb
push
jne
lret
add
xchg
int
dec
push
adc
dec
cltd
adc
imul
lds
cld
inc
mov
dec
lcall
add
stc
fsubrs
xlat
jg
pop
cmp
iret
sub
imul
fldlg2
xchg
decb
jg
xchg
push
pusha
bound
js
insb
adc
cmp
dec
push
jmp
mov
jb
adc
ror
or
push
bound
add
scas
and
xlat
mov
mov
xchg
dec
adc
lock
and
sar
int
push
leave
xchg
lods
loopne
push
mov
sti
je
dec
shll
mov
insb
and
mov
adc
stc
mov
or
mov
or
pusha
in
adc
idivb
pop
adc
and
pop
jbe
sbb
push
pop
jge
mov
cmpsl
sbb
orb
popa
sbb
mov
xchg
xchg
and
pop
push
cltd
stos
mov
mov
mov
adc
jg
mulb
jmp
negl
add
cmp
push
in
fstpt
aaa
jmp
push
cmp
femms
in
mov
imull
pop
cmpsl
popa
xlat
ret
fsubrp
push
enter
adc
cmp
mov
lock
xchg
out
dec
aaa
and
lret
mov
shll
mov
dec
pop
xchg
add
xchg
mull
loope
loopne
inc
jg
sbb
rclb
std
test
fnstenv
test
push
xchg
mov
cmp
es
les
leave
jmp
xchg
aaa
scas
cmp
and
out
mov
mov
neg
jmp
imul
out
inc
push
fisttpl
imul
shrl
mov
pop
fs
lcall
inc
add
fs
out
adc
push
out
into
mov
sub
xchg
pop
mov
loope
or
sub
mov
pushf
sti
xor
pop
fcomps
sbb
orl
push
int3
mov
jmp
roll
push
sub
jg
dec
in
jb
jge
mov
imull
sub
cli
xchg
sbbb
xchg
popa
addr16
andl
cmp
mov
notl
lods
test
inc
jbe
mov
mov
adc
jmp
stos
mov
dec
in
jg
mov
sbb
jb
push
cmp
dec
fldl
out
rcll
and
mov
dec
jmp
fwait
pushf
cmp
mov
mov
jnp
sbb
mov
sbb
pop
inc
mov
rcl
aaa
lds
push
mov
pop
in
int
out
decb
inc
mov
jae
repz
std
adcl
push
loopne
inc
push
pop
daa
mov
mov
and
and
clc
mov
mov
push
scas
sub
test
fmuls
xor
push
lock
push
ret
mov
lea
fstpt
inc
push
adc
xor
mov
lahf
or
pop
cli
dec
popa
mov
cmpsl
leave
push
jo
lock
add
push
idiv
pop
jle
inc
adc
lods
je
aaa
int
nop
daa
jns
loope
in
sub
dec
mov
sbbb
jne
sbb
mov
es
js
xor
cwtl
shll
aam
mov
test
inc
push
mov
cmp
es
lea
shr
fcomp
add
xchg
dec
sub
mov
outsb
test
stos
xchg
out
push
add
mov
rorl
lock
xlat
mov
push
jns
sahf
add
jp
enter
rcr
cmp
rclb
lods
clc
xchg
lret
mov
pop
es
bound
imul
or
mov
icebp
nop
sbb
mov
insl
mov
jnp
mov
xchg
push
shll
out
cmp
test
aam
mov
and
sbb
loop
ss
xor
repnz
push
in
jae
xchg
cwtl
dec
repz
pop
nop
cmp
movsb
repnz
and
push
icebp
push
mov
lods
enter
stos
pushf
or
arpl
xor
mov
shl
add
jnp
mov
pop
ljmp
addr16
pushl
loope
xor
stos
mov
mov
inc
out
into
popa
fs
or
lret
jb
shrb
mov
out
roll
idivl
movsb
decb
mov
or
in
icebp
loopne
lahf
andb
jecxz
push
jmp
mov
fsts
nop
insb
aas
adc
pushf
mov
out
ret
stos
int3
jmp
cmp
xor
icebp
lods
cmp
outsl
cltd
sbb
xchg
push
or
push
addr16
or
push
fisubl
dec
sub
ja
mov
add
arpl
iret
pop
push
rcll
adc
pop
inc
jmp
dec
aam
mov
out
adc
sarb
mov
mov
in
xor
inc
punpckldq
addr16
mov
inc
xchg
dec
scas
or
cmpsl
cmpsl
mov
es
stos
mov
pop
lds
cmc
popa
add
inc
imul
out
out
dec
cmp
push
or
outsl
xor
fmuls
sub
adc
sub
mov
je
ret
pop
dec
insl
inc
arpl
ficoml
stos
cmp
enter
mov
mov
gs
imul
fdivrs
cmp
imull
inc
pop
inc
push
dec
fists
sbb
push
adc
test
out
hlt
jbe
data16
sub
jne
xchg
mov
lds
fsubs
shl
adc
and
push
rclb
ret
push
xor
push
into
push
jne
popa
add
jg
xchg
jmp
fnstenv
mulb
arpl
aam
xlat
push
into
cli
add
sbb
sti
push
and
add
aam
pop
fcoml
jno
xchg
jns
jge
sbb
mov
and
cli
arpl
mov
lods
sub
repz
inc
es
jle
adc
repz
das
inc
jae
ret
shl
mov
ret
loop
in
inc
ss
mov
add
xchg
das
jp
pop
jp
and
mov
jg
pusha
push
add
and
loope
mov
loope
mov
cmpsl
add
xor
sbb
push
lret
mov
jns
test
shlb
in
dec
lret
lods
clc
negb
aad
mov
mov
mov
pop
std
push
push
jns
or
lods
imul
movsl
mov
xor
movsl
adc
dec
and
lcall
enter
sub
subl
mov
jecxz
dec
mov
and
cltd
add
xor
jbe
scas
loopne
xchg
mov
mov
ja
loopne
sbb
xor
sti
aaa
jb
ds
shr
sub
dec
cld
dec
shl
imul
pop
stos
add
xor
notl
xchg
push
jnp
movsl
mov
into
outsb
or
into
cmp
dec
add
cmc
sbb
or
sub
and
push
stc
cmp
sub
jmp
sbb
and
lahf
out
stos
adc
jo
fidivrl
and
push
movsb
xchg
xchg
sbb
mov
sbb
sub
mov
or
cli
mov
jp
cmpsl
jg
jl
lds
and
sub
gs
out
cmpsb
adc
outsl
cmc
jge
jne
iret
jg
mov
ret
mov
in
adc
push
imul
xor
push
inc
mov
fs
insb
and
adc
enter
sub
cmpsb
xlat
cld
iret
mov
cwtl
rcll
mov
fldcw
jg
pop
push
outsb
lcall
out
notb
shlb
or
stos
push
pop
aaa
push
imul
push
inc
mov
lock
xchg
mov
pop
and
mov
shll
xchg
test
or
jno
ss
mov
arpl
leave
loop
scas
dec
vmread
jbe
push
sub
add
mov
jbe
movsl
mov
sub
sbb
adc
adc
insl
subb
insb
aad
push
movsl
insl
cmp
lea
into
scas
pushf
lock
jnp
jmp
hlt
stos
xchg
out
hlt
pop
loop
sub
jno
inc
scas
jbe
push
push
pop
mov
ret
popa
mov
int3
int3
push
xchg
inc
daa
inc
shlb
iret
es
cmp
xchg
add
sub
push
in
stos
mov
mov
cld
sbb
xor
fadd
pushf
movsl
mov
xchg
cmpb
mov
adc
out
adc
push
inc
test
outsl
sub
cmp
mov
mov
jp
cmp
sahf
inc
or
leave
push
push
rclb
push
or
lret
cmp
and
das
mov
scas
mov
lds
aaa
int3
xchg
xor
mov
sarb
push
sbb
shrb
add
add
hlt
adc
sbb
stos
fdivrl
xor
pushf
cmpb
cmpsl
mov
mov
cwtl
movsl
xchg
add
loop
out
call
ret
xor
mov
jmp
adc
and
mul
es
add
lea
sbb
rcl
jl
cmp
dec
jge
xlat
pop
inc
outsb
shrb
sbb
jle
pop
jo
mov
xor
das
push
or
in
test
popf
ret
pop
fdivrs
int
cmp
jp
mov
jle
mov
shl
stos
mov
inc
in
leave
jg
pop
idivl
jecxz
mov
jl
push
cli
stos
pop
adc
mov
fcoms
scas
gs
jae
je
xor
loope
leave
test
xchg
jne
add
xor
loope
js
sub
pop
push
mov
in
mull
or
fistps
das
loope
mulb
repnz
add
in
adc
out
shl
cmpsl
aam
ficoms
cmc
and
xor
and
jecxz
cli
es
lock
cmp
mov
rcrl
sub
rcrb
jae
sbb
xchg
mov
jne
arpl
pop
cltd
aad
or
mov
jmp
cwtl
and
xchg
or
dec
xor
std
nop
sub
and
push
inc
jo
movsb
pushf
or
lods
mov
xor
scas
in
jmp
imul
or
or
test
cmp
arpl
or
xor
call
lods
cmpsl
fs
out
andl
push
pop
je
arpl
es
ror
pop
and
mov
pop
sahf
xchg
and
loopne
mov
loop
sbb
lcall
test
je
mov
js
push
mov
daa
add
sub
push
xlat
addl
addr16
xor
outsl
popl
sub
sub
dec
adcb
mov
sahf
je
lcall
mov
mov
gs
adc
cmp
xlat
ljmp
xor
imul
mov
pop
add
sbb
or
popf
cmpsl
aam
shrb
ja
xor
inc
cmp
sbb
sbb
xchg
or
stc
push
fistpl
sub
sti
and
pop
sub
sub
push
rcll
test
mov
jg
xor
push
and
or
add
push
pushf
aaa
push
ss
cmpsb
lock
mov
dec
int3
cmpsb
scas
pop
int3
xchg
fwait
sbb
or
scas
dec
jo
ret
mov
mov
je
shlb
push
pop
fldcw
mov
sbb
ljmp
mov
je
into
mov
and
or
jnp
push
mov
and
add
pop
xlat
data16
les
pushf
xor
mov
fmuls
add
test
aaa
xchg
add
fs
sub
fidivrl
add
negl
cmp
or
stc
xchg
fisttps
inc
push
daa
and
int3
sub
ljmp
jns
lds
jnp
pop
mov
cmp
push
arpl
es
decl
daa
push
nop
repnz
inc
inc
mov
or
mov
and
sub
pop
lds
out
outsl
movb
call
les
ror
xor
sbb
notb
inc
out
inc
shr
sbb
shll
dec
mul
inc
jbe
xor
push
cmp
mov
mov
and
cli
add
and
dec
xor
cmp
xchg
out
jae
cli
loope
test
pop
cli
out
mulb
push
xchg
mov
int3
mov
loop
push
adc
out
mov
icebp
fnsave
jmp
outsl
fidivrl
outsb
jl
mov
adc
popa
inc
outsb
in
rcrb
cmp
jmp
mov
ss
imull
cmp
ret
pop
ret
xor
mov
fwait
les
add
insb
pop
xchg
cltd
lret
or
push
add
ljmp
je
mov
jl
mov
mov
dec
mov
pop
pop
out
pop
sbb
cwtl
test
cmp
sub
sub
and
jp
jnp
mov
pop
aaa
adc
dec
fwait
iret
orl
adc
dec
mov
aad
inc
int
and
xorb
push
and
pop
lock
out
mov
xchg
mul
repnz
inc
add
enter
int3
js
fs
outsl
xchg
repnz
pop
aad
decb
shlb
mov
cltd
push
inc
decb
push
ret
mov
testl
hlt
dec
aad
mov
cmpsl
and
inc
mov
sbb
mov
pop
push
andb
add
jp
les
jno
ss
cmp
out
and
jp,pt
out
pop
inc
imul
rorb
xchg
dec
popf
jmp
or
icebp
dec
in
popa
call
out
jb
mov
jle
xor
ret
sub
jae
bound
cs
push
add
in
lods
xor
sbb
push
and
shll
sbb
pop
mov
dec
and
loope
iret
lods
es
add
fucomip
das
jno
cwtl
mov
mov
jl
inc
or
sub
out
inc
xlat
sbb
cld
add
lods
or
data16
mov
ljmp
cmpsl
dec
mov
xchg
fimuls
pop
mov
fcomp
mov
lea
sub
push
inc
push
push
je
mov
enter
sbb
loop
pop
mov
cmp
movsb
jle
gs
dec
adc
mov
adc
jg
clc
dec
lahf
and
lock
xchg
push
sbb
mov
or
sub
cwtl
popf
pop
sbb
les
fwait
xor
sbbl
push
xor
xor
or
gs
fwait
lds
sub
scas
scas
dec
popf
lret
pop
pop
jmp
inc
mov
loope
mov
lea
sahf
pop
add
je
mov
loopne
lods
inc
xchg
xor
and
jmp
je
jno
fisttpl
jmp
and
pushl
mov
pop
lret
das
rorb
push
inc
enter
mov
nop
hlt
cmp
dec
xchg
jge
and
pop
in
jno,pn
xchg
hlt
out
jle
daa
mov
inc
jo
lods
adc
mov
fidivrl
dec
lea
sub
pop
pushf
outsl
in
fsubp
push
repnz
add
call
fldenv
xor
mov
mov
bswap
ss
fsub
cmp
xchg
add
data16
xchg
push
mov
jg
scas
je
in
pop
mov
pop
mov
jecxz
adc
or
sbb
mov
or
int3
xchg
adc
dec
pmulhuw
loope
mov
insl
xchg
fidivrl
or
repz
loope
out
sbb
in
add
movsb
test
cmc
test
and
aad
xor
xchg
jl
frstor
or
repz
mov
testb
ret
pushf
sub
decl
arpl
push
pop
cltd
divb
inc
mov
ror
cmpsl
cmpsl
or
dec
and
call
inc
bound
inc
enter
xor
mov
mov
mov
scas
rcl
test
sub
aad
pop
ret
loope
pop
repnz
inc
sahf
iret
insl
sbb
lods
in
push
push
stos
adc
test
out
mov
stc
cmpsl
in
es
pop
pop
lods
fildll
sahf
sub
jbe
push
addr16
fwait
pop
and
aas
cmp
cld
cs
pop
xor
and
xchg
outsb
shll
sbb
lcall
cmp
jp
add
pop
add
clc
mov
push
dec
orl
repnz
mov
imul
mov
mov
inc
mov
adc
lock
clc
pop
fsubr
mov
fsubrp
adc
addl
in
shlb
mov
int3
cmp
inc
dec
mov
jbe
sub
movsb
in
lds
ss
jg
adc
add
adc
imul
aaa
sub
ret
pop
loopne
sbb
xchg
mov
push
mov
imul
mov
dec
jns
fwait
in
notl
pop
addr16
lods
ffree
sbb
push
test
push
mov
les
and
pop
in
test
aam
mov
ret
call
mov
movsl
xlat
ret
stos
popf
pusha
mov
mov
stos
add
lcall
xchg
loope
ror
inc
or
js
fs
outsb
dec
mov
push
sub
pop
sahf
scas
ljmp
inc
scas
cmc
mov
push
xchg
fists
xor
sub
jae
mov
or
sbbl
sti
scas
js
fldenv
pop
xchg
pop
sbb
sbb
pop
std
xchg
mov
sarl
pop
stos
mov
pop
popa
movsb
roll
xchg
pop
sub
cmp
xchg
jp
stos
mov
repz
fcomi
add
cmp
adc
shl
and
sub
mov
jnp
dec
mull
dec
xlat
enter
lahf
xchg
cwtl
ret
stos
sub
rclb
cld
call
mov
fists
leave
loop
adc
jmp
mov
xchg
sub
mov
dec
mov
mov
iret
xchg
std
and
cmovae
add
add
hlt
or
jge
mov
jmp
dec
adcb
pop
push
and
dec
movsl
and
mov
dec
dec
dec
push
and
subb
mov
ret
js
pop
jnp
mov
cwtl
dec
imull
jns
xchg
out
mov
mov
and
xorb
sbb
xchg
or
lea
out
jb
inc
pop
adc
xchg
lret
cltd
push
inc
mov
mov
mov
dec
mov
inc
fbld
rcrl
int3
mov
lds
or
push
iret
lret
lret
insb
adc
adc
mov
ja
cmp
outsb
mov
jne
xchg
xlat
sti
add
cld
sbb
xor
xchg
ret
jo
test
dec
das
or
sub
das
cmp
dec
cwtl
jge
and
and
sbb
or
int
mov
pop
mov
adc
inc
pop
cmp
jmp
and
fucom
push
dec
sub
sbb
aad
loop
shlb
mov
jecxz
mov
pop
in
ret
data16
inc
les
push
push
dec
add
inc
push
mov
pop
cmpsl
sbb
xor
xchg
pop
cmp
data16
pop
xorb
cmc
cmpsl
add
push
call
je
cmpl
inc
fwait
imul
mov
sub
mov
test
aam
mov
loope
inc
ret
sti
ljmp
mov
push
sbb
mov
mov
int
data16
sbb
add
jp
and
push
dec
dec
xor
and
push
rorb
daa
jl
shl
shlb
insl
in
pop
stos
jge
jecxz
dec
mov
mov
jmp
std
push
imul
andl
and
and
push
cmpsb
imul
mov
cmp
add
jle
fcoms
lret
xor
leave
movsl
dec
test
lods
movsb
sti
stos
jle
inc
in
out
add
in
push
movsw
cmp
sbb
aas
das
imul
adc
sbb
shrl
sub
cld
add
dec
sub
sbb
dec
cmp
daa
or
fsubl
in
sub
cmp
shl
jne
push
ret
push
add
das
fs
ljmp
testl
test
mov
aad
sarl
dec
inc
cs
inc
or
pop
leave
xor
out
sub
cmp
outsl
jecxz
pop
add
rcr
inc
pop
mov
xor
pop
aaa
push
pop
xchg
lahf
mov
push
iret
pop
jp
sub
movsl
mov
scas
inc
cmp
icebp
jnp
cmp
int3
shl
nop
jp
add
test
outsb
inc
es
mov
test
mov
mov
and
push
and
cltd
aaa
ret
cmp
bound
or
mov
imul
outsl
je
adc
xchg
mov
cmp
subl
pop
inc
cmp
inc
pop
ret
sarb
repz
cmp
adc
jge
and
icebp
jecxz
inc
pop
and
xlat
test
data16
mov
loopne
or
mov
jle
add
cmpl
push
jmp
shlb
sbb
mov
fldt
cltd
mov
pop
fwait
push
ss
rorb
loope
scas
out
in
sbb
scas
aas
ljmp
mov
push
push
mov
sub
cld
or
js
push
cltd
mov
movsb
xlat
cli
shll
arpl
push
aam
mov
sub
dec
movsb
sbb
push
inc
inc
xorb
adcb
vcmpsd
lahf
hlt
mov
inc
dec
push
fistpll
fld
jle
xorb
jnp
test
mov
xchg
sahf
add
push
hlt
cmp
xchg
pop
outsl
enter
sysexit
xchg
fdivr
outsb
sub
fdiv
lods
aad
xor
pop
or
lahf
push
xchg
push
ffree
mov
ud2
jno
es
jae
add
xor
cs
cmc
cmc
pop
outsl
loopne
fisubrl
imul
mov
je
push
pusha
rcrl
ljmp
pusha
jno
xchg
pop
sub
mov
xchg
and
sahf
sarl
mov
xchg
xor
fdivrp
popa
pop
mov
push
cmpb
jnp
jno
jnp
inc
sahf
ljmp
inc
or
loope
or
mov
lret
movsl
xchg
mov
movsl
mov
fwait
dec
jno
fmull
into
mov
gs
lret
lcall
outsl
jno
subl
je
xchg
jns
push
dec
fwait
sbb
sti
lock
cltd
in
in
xchg
rorb
push
lods
jnp
sbbl
pop
bound
sbb
inc
test
mov
fsubrl
lods
shl
test
push
add
xchg
lods
or
fiaddl
add
cmpsl
nop
inc
push
pop
lret
stc
testb
or
and
fsubrs
mov
mov
nop
pusha
and
push
repnz
int3
mov
js
sahf
push
xchg
fistpl
cmp
fs
jp
outsb
lock
out
xor
cmp
jae
push
dec
inc
push
xchg
sbb
fisubs
int
and
jae
int3
and
sub
outsb
and
jmp
xchg
inc
adc
mov
enter
sub
and
mov
out
adc
sti
dec
loopne
pop
jne
sbb
or
xor
and
icebp
pusha
inc
mov
pushf
lcall
lahf
adc
cld
dec
jnp
cmp
mov
cli
jle
adc
or
adc
xchg
ficoml
sbb
add
inc
jg
jge
lods
gs
xor
vmptrst
popf
cmp
jecxz
in
xchg
in
loop
cmc
andb
fwait
sub
movsb
xchg
in
sbb
incb
jo
jp
push
addr16
data16
adc
mov
mov
jle
in
cli
push
sbb
arpl
mov
rclb
neg
xor
pop
sub
mov
shll
hlt
pop
push
mov
xchg
stc
gs
pop
xor
jno
dec
inc
ret
xchg
and
mov
adc
mov
call
ficoml
sti
adc
mov
push
popf
mov
fwait
movsl
mov
or
sub
lods
push
imul
stos
add
push
das
sub
pop
movb
add
mov
jle
aam
sbb
xor
dec
cmpsl
cmp
lods
xor
fwait
cmp
cmp
inc
ljmp
ja
iret
push
stos
inc
mov
jg
jp
push
xchg
sbb
jg
lret
shlb
dec
bnd
cltd
add
fisttpll
bound
cwtl
test
mov
adc
sub
jns
xchg
addl
jo
adc
dec
in
dec
es
cmp
cmpl
cld
push
cmp
sub
mov
push
pop
sti
fistps
cmc
fistpll
fsubl
nop
sti
push
pop
jno
test
push
popf
cld
mulb
orl
out
rcll
and
mov
dec
mov
xor
push
std
cld
inc
sub
inc
es
cmc
adc
outsb
leave
aad
inc
and
push
lahf
dec
aas
lods
dec
popa
add
xchg
mov
fwait
loopne
jae
jg
dec
out
inc
xchg
xchg
or
lods
inc
inc
pop
mov
out
xchg
add
or
inc
ficoml
rcr
fistl
pop
mov
mov
dec
push
mov
clc
loope
add
sbb
fmull
add
push
jle
sbb
out
add
ret
add
dec
cmp
push
mov
mulb
xor
mov
mov
movsl
mov
pop
dec
dec
mov
or
push
lock
xor
bswap
jl
sbb
mov
sti
scas
cmp
pop
pop
lds
stos
mov
jp
out
je
sub
mov
adc
imul
mov
sub
daa
sub
mov
pop
add
mov
je
pop
in
push
xchg
addl
mov
fs
jbe
arpl
inc
mov
push
sub
lods
inc
ret
jae
hlt
scas
lods
faddl
mov
lret
in
push
or
pushf
jo
stc
dec
ror
lds
lea
inc
popa
in
out
xchg
lods
jg
ret
dec
pop
stos
mov
mov
push
and
cmp
mov
hlt
xchg
mov
fcom
lahf
lods
insl
adc
or
movsl
xchg
loopne
xchg
sti
jmp
test
sbb
clc
movsl
lret
jno
mov
clc
inc
mov
ljmp
movsb
xor
out
push
mov
inc
cmpb
mov
mov
repz
pop
icebp
gs
ljmp
movsb
ficoms
sbb
loopne
out
test
and
jbe
je
push
scas
pushf
jmp
jnp
push
into
xor
add
inc
sbb
adc
sub
dec
and
inc
sub
rcll
mov
movsb
shrb
cmc
adc
es
out
and
icebp
push
sub
lods
mov
repnz
rcll
jecxz
mov
and
mov
movnti
addl
or
fs
shrl
fidivrs
fnsave
xlat
cmpl
fs
xor
xor
push
adc
dec
mov
bound
movsb
pop
mov
and
jb
jne
movsb
fstps
jne
inc
dec
sti
or
cmc
push
pushf
sub
mov
aad
sbb
xchg
xor
mov
gs
call
mov
out
xchg
sbb
lods
pop
xchg
lods
fmuls
imul
push
cmp
shlb
push
xchg
and
mov
mov
mov
data16
fldcw
xor
xchg
and
stos
mov
insb
in
cmp
test
pop
jmp
mov
int
sbb
jle
sbb
cwtl
jne
adc
loopne
jmp
in
push
xor
fxch
mov
mov
mov
fldenv
aam
pop
aaa
push
ss
mov
ljmp
inc
loopne
sub
fwait
xor
push
xlat
notl
imulb
push
je
mov
inc
or
hlt
test
add
bound
out
xor
lahf
pop
es
scas
jge
mov
pop
push
cmc
sti
sub
mov
imul
imul
mov
xchg
jnp
inc
bound
jo
add
mov
pop
mov
xor
rcrb
mov
sbb
mov
jp
push
mov
lcall
xor
inc
mov
ss
cs
jbe
xor
dec
inc
jmp
mov
stc
lods
add
dec
gs
lahf
int3
rolb
mov
hlt
insb
dec
mov
divl
mov
daa
das
out
stc
xor
sub
sti
roll
adc
out
insl
jmp
pop
xchg
xchg
xor
cmp
imul
xchg
imul
in
xor
incb
mov
push
addr16
xorl
jmp
in
cmp
sub
out
jne
mov
xor
std
mov
out
xchg
push
pop
fldenv
shr
imul
jl
and
shrl
adc
and
xchg
divl
mov
mov
mov
push
xchg
mov
in
fstps
xor
mov
xor
aas
insb
pop
mov
xor
push
outsb
and
fs
dec
and
sbb
in
jmp
mov
ficomps
repnz
imul
int
cmp
sahf
sbb
in
pushf
cmp
mov
sbbb
lret
inc
imul
dec
adc
pop
out
loopne
mov
sbb
mov
aam
jmp
or
lahf
cmp
scas
add
sub
pop
enter
stos
in
adcb
jb
jnp
sub
push
mov
jbe
cld
insl
decb
out
fisubl
ret
adc
fcmovnb
scas
mov
or
lahf
adc
inc
jmp
cli
and
sub
mov
dec
jo
xchg
pop
push
jl
flds
sbb
mov
or
cmp
cmp
push
lret
xor
or
dec
dec
add
sbb
pop
xchg
push
or
mov
lahf
mov
pop
and
mov
cmp
cmpsb
aad
into
jl
push
and
fidivs
cli
push
lock
stc
cmpsl
cld
cmp
push
jmp
jl
add
out
in
jne
icebp
jmp
fwait
clc
xor
das
and
push
loopne
push
pusha
fimull
jle
dec
daa
jb
rclb
and
repz
fs
push
adc
cld
pop
aam
add
rcrb
test
lods
cs
repz
cli
decl
ret
nop
lret
jnp
call
adcl
sub
pop
xchg
sbbl
mov
or
das
mov
inc
xchg
imul
inc
out
and
pushl
cmpsl
bnd
add
sub
jg
pusha
add
insl
jecxz
and
adc
cmp
int
pop
loop
addr16
out
cmp
mov
cmpsl
cld
call
shlb
gs
iret
jbe
je
push
push
xchg
das
movsl
data16
sbb
icebp
push
xchg
and
into
outsb
add
and
xor
push
in
inc
xchg
repz
sub
test
int3
jmp
xor
inc
lock
mov
in
cmp
and
xchg
daa
mov
adc
adc
ja
push
adc
push
xor
push
jg
and
inc
mov
mov
cmp
cmp
cwtl
dec
mov
in
mov
sub
rorl
outsl
js
inc
jp
pop
fcmovnb
pushf
pop
cmc
mov
mov
cld
scas
ds
jmp
nop
cmp
pop
mov
push
inc
jns
out
cmpsb
ret
dec
jecxz
or
xchg
add
jecxz
notb
scas
jl
pop
into
bnd
popa
es
test
xor
and
sub
andl
lods
and
dec
imul
sub
loop
jns
push
lea
ss
dec
outsl
or
push
fnstcw
cmpsl
das
mov
enter
out
jae
fwait
pop
psrlw
adc
mov
std
imul
aas
pushf
fwait
add
jae
mov
inc
jmp
sub
mov
leave
jmp
ret
cwtl
push
jl
jns
idivl
in
mov
mov
call
ss
xchg
pop
insl
in
jmp
icebp
out
dec
sub
repnz
jmp
mov
cmp
fsubrs
xchg
je
aaa
or
inc
int
xlat
test
add
js
imul
cmp
jecxz
pop
shrb
jb
test
and
cmp
shrl
jl
lea
std
pop
adc
iret
and
sub
dec
out
mov
sbb
imul
in
jne
lcall
pusha
mov
rol
cld
rcrb
mov
adc
inc
cmpsl
movsb
fidivl
adcb
mov
mov
sbb
sub
mov
push
mov
mov
in
mov
add
push
sub
xchg
adc
push
popf
outsb
sti
stos
dec
xor
xchg
cmp
fildl
cmpsl
xor
or
xchg
mov
pop
es
cmp
mov
out
out
adc
mov
jl
jae
ror
ret
movsb
pop
pop
xor
adc
testl
mov
loope
mov
mov
decl
movsl
jge
addr16
hlt
sbb
inc
mov
jl
mov
and
lea
mov
xor
push
add
mov
adc
cwtl
outsb
sbb
adc
sub
aam
and
icebp
push
sub
aad
fsubl
jns
jecxz
outsl
movsl
dec
jle
test
js
fstpl
inc
mov
fadd
stos
out
adc
out
pop
lahf
add
out
cld
nop
sahf
stos
leave
lods
or
dec
dec
clc
je
push
jmp
add
dec
jle
mov
mov
push
sbb
or
mov
lock
jmp
mov
les
add
roll
add
fcomps
rclb
xchg
push
xor
aam
pop
xor
sbb
loopne
xchg
stos
or
or
rol
xchg
subb
dec
movsb
dec
push
lods
sbb
cmp
test
jmp
cmp
jae
mov
inc
jg
mov
dec
pop
mov
lods
jae
or
sbb
xor
call
lds
sarl
jno
cld
sbb
mov
pushf
mov
roll
data16
inc
cli
movsl
inc
jle
roll
add
in
mov
cmp
or
nop
adc
dec
pop
or
inc
xchg
lods
int3
cli
mov
popa
sbb
mov
stc
jmp
xor
iret
xchg
dec
jmp
leave
sub
jnp
popa
mov
xor
bound
into
dec
dec
or
paddsw
bound
sbb
xor
icebp
pop
mov
jp
pop
cmp
xchg
cmp
test
add
pushl
aam
in
xor
add
test
jle
fwait
adc
stos
sbb
sbb
mov
xchg
repz
out
add
repz
push
gs
add
cmp
loopne
aam
and
pop
adcb
repnz
cmp
pop
mov
data16
mov
push
subb
or
push
mov
imul
add
repz
ljmp
cwtl
ficoms
das
rclb
push
pop
xor
mov
in
adc
les
adcl
jle
mov
out
popa
gs
sti
loopne
shll
xchg
rclb
pop
pop
sub
lret
jmp
xorb
inc
jnp
xchg
fdivrl
arpl
jg
ret
jle
aam
push
xor
pop
addr16
hlt
jg
dec
adc
loopne
aam
test
iret
scas
or
repz
xchg
mov
xchg
or
lret
outsb
jnp
push
in
and
test
cmpsb
jno
jns
push
call
fisttpl
mov
cmp
push
sub
and
inc
dec
out
loope
ret
or
push
sbb
jmp
ljmp
in
imul
enter
andb
or
mov
jbe
add
cmp
pusha
shlb
mov
mov
xchg
jne
mov
xchg
fisttps
out
lds
cwtl
sub
fmuls
outsb
and
clc
pusha
mov
addr16
filds
sub
mov
and
js
leave
lea
jl
mov
iret
adc
inc
mov
sub
adc
pop
cmpsl
xlat
jnp
push
fstpl
mov
lods
jmp
jmp
sahf
psubsb
xchg
push
mov
cmp
push
adc
xchg
popa
fsub
or
lods
dec
inc
fcmovnu
xor
data16
inc
cmp
pop
xor
aad
mov
pop
iret
les
pusha
push
jmp
and
sbb
cmp
popf
aam
mov
pop
pop
fcmovnb
pop
mov
imul
ret
ret
test
int
out
mov
xor
ss
mov
pop
pop
jmp
add
xlat
fisttpll
mov
adc
shrl
clc
add
mov
or
in
adc
or
push
outsl
mov
lea
mov
or
adc
in
sti
adc
shll
in
pop
imul
mov
fsubl
jb
das
and
cmc
cmp
imul
outsb
lret
jge
les
outsb
mov
mov
cmp
daa
pop
fdivr
lahf
push
clc
aaa
pop
cli
jb
cltd
out
shll
cmpb
mov
pop
mov
andb
sbb
lret
sub
cmc
mov
jae
and
sbb
or
outsb
lds
ds
shr
in
aas
pusha
cltd
imul
adc
js
dec
push
and
push
mov
or
adc
push
inc
rclb
loop
sbb
dec
data16
imul
jecxz
add
mov
push
push
aaa
jg
jl
and
pop
nop
jge
inc
or
and
jg
pop
cmc
iret
push
aas
sbb
shl
ljmp
sub
pop
lcall
jnp
mov
adc
push
push
xchg
xchg
and
sub
icebp
or
pop
outsl
testl
mov
in
adc
in
mov
inc
cmc
imul
mov
mov
inc
xchg
mov
dec
inc
ja
xchg
or
aam
sbb
jns
sbb
push
jge
sbb
inc
push
sub
outsl
jecxz
nop
ret
adc
or
in
jnp
adc
adc
push
std
jns
lods
cltd
xor
sub
xchg
add
divb
adc
mov
and
arpl
shlb
mov
test
add
sbb
xor
adcl
scas
sbb
loop
rcl
leave
jmp
data16
ljmp
jbe
lea
hlt
adc
jo
jno
xlat
adc
mov
shll
rcll
mov
movsl
xchg
push
adc
rcl
pop
popf
inc
xchg
or
das
dec
add
mov
mov
cmpb
dec
mov
pusha
sbb
inc
sti
lock
fucomp
push
aad
cmp
fwait
mov
hlt
adc
repnz
adc
pusha
push
out
pop
inc
mov
cmp
stos
testl
decl
inc
mov
test
mov
fldl
sbb
outsb
or
mov
ljmp
sub
jg
mov
test
aaa
adc
ds
cmc
cs
and
jnp
inc
popf
cs
fistpl
fmull
lds
jp
or
insl
in
call
into
insl
loopne
cmp
sbb
das
fwait
cmpsb
push
cmpsl
insl
insb
test
push
test
cs
subb
cld
mov
push
jo
mov
popa
icebp
rclb
out
lret
pop
dec
xchg
pop
sub
std
push
mov
or
sarb
sbb
fdivl
in
dec
dec
mov
popf
jne
in
xchg
sub
enter
lods
pop
pop
jns
fcoms
adc
and
arpl
xchg
sahf
mov
pusha
jl
out
mov
outsb
out
pushf
aad
or
popf
test
leave
arpl
push
pop
hlt
cmpsl
mov
mov
or
insb
jmp
mov
lods
popf
mov
scas
int3
pop
rcr
aam
dec
cs
es
mov
mov
data16
or
in
insl
inc
wbinvd
lds
ljmp
test
bound
jae
imul
in
fdivrs
add
or
or
pop
mov
lock
push
xchg
mov
lret
dec
repz
xchg
in
and
and
push
test
mov
imul
cld
das
push
test
mov
xchg
dec
xor
rorl
out
rcrb
mov
hlt
xor
jecxz
cmp
shr
mov
mov
dec
outsb
pop
rorl
data16
mov
sbb
movsb
mov
clc
cmp
lret
sub
lret
cmp
jbe
jns
lret
jp
shr
mov
xchg
mov
inc
mov
enter
or
lahf
aas
and
loopne
int
outsb
sbb
adc
pusha
lock
jb
pop
outsb
sbbl
stc
xchg
push
mov
sub
sub
fisubrl
sbb
adc
fs
ret
popf
mov
fs
adc
jns
es
inc
mov
mov
jns
jl
pop
add
int3
imul
pushf
aad
push
cmp
push
rorb
jmp
ss
mov
aam
ja
xor
scas
inc
cmpsb
popf
es
xor
loop
pop
jmp
les
sub
popa
lahf
sbb
movsb
test
mov
vmread
mov
pop
dec
mov
dec
add
lret
inc
pop
push
push
push
aam
in
or
inc
decb
fwait
jbe
push
fs
adc
lcall
or
inc
mov
dec
aas
or
cld
loopne
lahf
aad
shrl
enter
fwait
sahf
inc
adc
aas
test
sbb
dec
shlb
test
mov
int
mov
dec
sahf
sub
add
cmp
mov
cmpsl
pop
jb
xchg
jb
mov
add
leave
jns
fs
addr16
dec
xor
fsubl
into
pop
sti
lret
sub
pop
adc
push
aam
sarl
xchg
je
into
shll
mov
aad
dec
les
jns,pt
add
jecxz
les
gs
push
pop
jp
cltd
mov
inc
push
out
mov
jns
sbbl
mov
and
pop
mov
arpl
ret
repz
ja
and
and
bnd
adc
movsb
sbb
pop
jbe
sahf
lods
adcb
adc
cmp
xchg
pop
cli
mov
adc
mov
out
fsubrl
test
loopne
xchg
and
fstpt
add
mov
inc
pushf
sbb
ss
mov
int
test
jae
in
cli
cmp
sbb
or
leave
xor
dec
out
popa
add
adc
orl
imul
xor
arpl
adc
sub
xor
add
in
jmp
pop
or
jae
and
in
imulb
xchg
faddp
xchg
cmpsl
jbe
gs
das
data16
aas
insw
sbb
xlat
adc
xor
jmp
and
mov
pop
xchg
outsl
lahf
in
movsb
in
push
clc
pop
push
pop
fst
push
xchg
push
push
dec
mov
divb
ljmp
mov
pop
or
and
je
ret
test
test
adc
or
jle
lret
mov
pop
nop
sub
andb
inc
pop
imul
sbb
sbb
leave
je
rolb
fs
mov
aad
lods
jecxz
sbb
fst
xchg
push
adc
xor
push
or
test
stos
add
push
daa
push
in
loop
mov
in
mov
cli
pop
stc
mov
mov
inc
call
mov
fisubs
icebp
inc
push
dec
xor
aas
nop
push
sbb
add
fdivl
and
pop
mov
dec
cmp
fcmovb
incb
cmp
mov
dec
js
or
rorw
bound
loop
xor
or
out
sbb
push
jmp
in
lea
jnp
jmp
mov
push
pop
lret
rcrl
fmul
insb
frstor
hlt
dec
in
pop
pop
insl
fimuls
in
jmp
add
loopne
jle
lock
xchg
outsl
adc
dec
aam
repnz
fisubl
xchg
in
scas
pop
cld
jecxz
ljmp
insb
cwtl
rorl
lcall
jno
testl
out
mov
outsb
insb
inc
test
xor
adc
mov
mov
in
pavgb
cmpsl
movsl
xchg
push
pop
pop
in
fldt
and
lret
xorb
or
and
stos
call
out
inc
add
inc
sbb
dec
ljmp
ja
fcmovnbe
push
and
lcall
mov
data16
bound
leave
fildl
mov
int3
push
movsl
xor
pop
xchg
mov
loopne
or
dec
or
clc
pushf
cvtps2pd
jmp
mov
iret
int3
xor
mov
cmpsl
inc
loop
mov
je
add
lahf
scas
mov
fs
pushf
mov
ret
aad
inc
or
mov
mov
sub
mov
adc
sbb
xor
lahf
insb
popa
mov
push
jnp
sub
cmp
andl
dec
xchg
repnz
pop
jg
lcall
and
or
out
inc
sahf
jno
mov
cld
xchg
fisttpl
lods
ret
jo
jbe
bound
dec
test
xor
out
mov
push
rorb
lret
jecxz
cmpsb
cli
shrb
xchg
or
and
pop
out
negb
in
js
test
iret
cmp
add
lods
xchg
ds
out
push
int
cwtl
lock
mov
jmp
mov
out
aad
cli
and
into
and
test
push
mov
int3
cmp
cltd
push
push
repz
jmp
sub
div
xchg
das
ret
dec
call
push
fisubrs
push
mov
adc
or
dec
jnp
mov
adc
cmp
xchg
sub
add
mov
outsl
xchg
add
push
loope
testb
dec
and
push
xor
out
ret
bound
idivb
jb
insl
mov
fisubl
aaa
jl
mov
inc
xor
in
push
pushf
xchg
clc
xacquire
jnp
in
stos
lods
and
ljmp
enter
jnp
enter
pop
rep
xchg
in
not
cmp
sub
dec
add
cltd
xchg
add
aad
lock
fdivrp
test
pop
xchg
jnp
loopne
js
ds
popa
notl
jg
push
fldt
pop
out
xchg
fsts
push
cmpsl
inc
xor
loope
stos
cli
xchg
dec
mov
inc
outsl
repz
popa
fs
dec
mov
jmp
out
fwait
test
enter
xor
sub
pop
mov
adc
movsb
or
mov
inc
sub
aam
into
push
inc
inc
fistps
mov
aas
xor
mov
neg
add
and
mov
mov
xor
sub
mov
sbb
and
mov
mov
je
jb
aad
stc
call
xor
lret
inc
add
adc
lods
xor
aad
sbb
pop
and
adc
mov
fsubr
push
add
mov
inc
mov
mov
or
cli
mov
cmp
jecxz
adc
rcr
icebp
push
lds
pop
mov
mov
xlat
xchg
adc
ss
xor
pop
data16
xor
mov
push
sbb
xchg
or
sti
push
stc
aaa
sub
sub
mov
mov
or
popf
in
xchg
xor
lret
jae
mov
push
add
xor
cltd
adc
dec
out
or
pop
scas
pop
jp
mov
stos
arpl
lcall
pop
das
push
into
shlb
cmp
pop
jge
xchg
lods
popa
roll
int
xchg
xchg
push
cmp
mov
push
jle
and
jne
xor
add
jmp
push
pop
bound
ja
int3
leave
xor
out
insb
dec
xchg
notl
cs
fcmovb
scas
scas
dec
sbb
push
jge
outsl
stos
insl
les
xor
fwait
pop
je
insb
sub
lret
fsubrl
dec
adcl
add
stos
out
inc
push
sub
mov
push
lea
mov
dec
xchg
push
sub
push
rorb
jae
xor
sub
pop
fxch
fistl
jns
adc
jecxz
ret
adc
inc
or
cmp
xchg
into
stos
testb
stos
jl
adc
enter
xor
xchg
mov
call
dec
dec
je
daa
addl
sbb
in
jmp
mov
les
fcoms
movsb
out
mov
lods
dec
dec
inc
or
mov
jne
lret
jge
insb
loopne
fsubs
jge
mov
movsb
rcrb
xor
adc
loopne
mov
inc
or
sub
push
sbb
pop
lods
adc
loopne
fsubl
cs
xchg
cmp
jnp
jae
lret
mov
pop
mov
aaa
lods
inc
repz
adc
add
dec
push
jg
or
jnp
sahf
cmpb
push
repnz
push
cli
out
bound
mov
in
sbb
jl
nop
dec
int
daa
sub
and
stos
test
rcr
jmp
icebp
mov
sbb
mov
push
ret
mov
sbb
inc
inc
or
es
into
jecxz
mov
sbb
loopne
mov
outsb
adc
out
enter
insb
push
push
or
lret
sahf
mov
dec
fdivrs
sbb
imul
cltd
into
jne
loop
outsb
sub
add
mov
pop
mull
pusha
fisubl
testl
xlat
js
insl
jmp
int3
pop
or
or
sti
sub
out
movsb
pop
hlt
pusha
mov
cmp
xlat
add
adc
xchg
js
push
dec
xchg
add
cmp
mov
add
in
das
ds
std
iret
sbb
cmp
mov
fistpll
ds
pop
dec
sub
nop
dec
pop
cmpsl
dec
repz
ja
push
sub
fs
sbb
push
les
cmpsl
xor
xchg
pop
pop
mov
fistpll
movsl
fisttps
mov
lods
mov
lcall
pushf
leave
mov
lcall
enter
les
frstor
lods
cwtl
lea
cmpb
movsl
pop
insb
sub
outsb
xchg
lds
out
and
popa
lods
cmpsl
jg
add
xchg
psrad
xor
movsb
fcmovbe
mov
mov
imul
jbe
sbb
in
jae
shll
insb
arpl
xchg
cmpsb
jl
out
ret
or
cmpsb
push
movsl
clc
xor
or
xchg
cmp
movsb
test
pop
insl
nop
stc
loop
push
lods
out
xlat
nop
mov
mov
jb
inc
adc
xchg
and
lcall
xchg
jg
jg
lock
add
push
adc
ret
mov
test
imul
pop
mov
data16
fs
cs
scas
dec
jg
fcoml
int3
negl
or
xor
lds
int3
xchg
sub
and
test
dec
jle
mov
arpl
movsl
aam
bound
and
mov
adc
xchg
push
inc
mov
sub
ffree
lods
dec
cmp
mov
fwait
and
push
test
aas
js
dec
dec
cli
testb
add
inc
jmp
fnstcw
dec
ja
xlat
mov
dec
lcall
and
mov
lahf
gs
inc
rorb
cwtl
adc
aad
bound
movl
push
es
loopne
sahf
jmp
xor
fisttpl
addr16
inc
mov
mov
sarb
out
ss
add
das
fsubrl
pop
pushl
ljmp
insl
fsts
cmpsb
mov
lods
cmp
inc
fstpl
sti
mov
or
pop
js
xchg
imul
xchg
xor
leave
jmp
ljmp
xchg
push
jmp
pop
je
ficompl
leave
xlat
mov
repz
les
bound
and
sbb
push
lock
fs
mov
fucom
imul
das
push
add
mov
pusha
and
pop
pushf
mov
fnstsw
jnp
xor
imul
inc
push
enter
les
movsl
ret
mov
mov
sahf
daa
sahf
outsl
das
out
andb
mov
test
pop
lods
and
jb
ds
add
and
cmp
xchg
dec
movsb
jb
sbb
inc
aaa
mov
mov
pop
push
cs
and
sub
push
mov
jbe
icebp
sub
sub
insb
and
into
shl
std
pushf
mov
loope
in
lods
ds
adc
in
cmp
loope
in
mov
xchg
sbb
and
imul
enter
lods
sub
fwait
lcall
mov
outsb
call
add
fisubl
add
xchg
dec
rcr
xchg
sub
movsl
frstor
jl
mov
and
cmp
ss
aad
mov
shl
adc
inc
inc
mov
mov
cmp
enter
adc
push
mov
inc
add
sub
mov
and
mov
popa
dec
cld
push
cmp
fadd
mov
push
push
mov
mov
cmp
dec
inc
xchg
sbb
add
ror
inc
fsubl
ret
hlt
test
idivb
loopne
dec
jl
inc
mov
aaa
aam
adc
push
stos
adc
xchg
dec
adc
adc
in
lcall
mov
push
mov
lret
add
push
push
cs
mov
bnd
cmpsl
stos
add
mov
mov
imul
lret
or
fldcw
push
rol
xor
or
push
mov
jbe
add
dec
lds
addr16
hlt
jp
lods
imul
xchg
xchg
xchg
xchg
pop
es
jbe
pop
ficoms
inc
cmpsl
sbb
or
pop
movsb
lret
in
xlat
add
fisttps
rcrl
push
aaa
ret
movsb
dec
or
push
daa
aam
push
push
mov
push
jmp
inc
test
sahf
in
cmp
xchg
jo
aad
outsb
pop
repnz
ss
cwtl
or
std
test
xchg
in
jbe
js
jo
or
add
push
jns
mov
enter
mov
and
lret
cmpsb
push
mov
mov
mov
dec
xlat
cmc
xchg
lcall
ror
fstpt
icebp
push
xor
push
jp
ds
mov
or
aam
mov
dec
xor
mov
enter
out
pop
jecxz
xchg
xor
pop
xchg
inc
cmp
je
andl
push
xor
lds
loope
push
cmp
sbb
dec
ljmp
xor
loope
cmp
lock
adc
data16
movsl
incl
push
sti
sahf
push
fsubl
mov
fs
cmp
pop
in
ds
xor
sbb
xchg
lcall
jbe
cmc
jmpw
mov
std
mov
adc
and
xlat
cmp
and
fdivr
stos
or
out
jle
add
rolb
aam
in
pop
mov
adcl
sahf
inc
and
aam
xchg
lea
inc
fwait
lock
adc
fimuls
out
mov
xor
cmp
push
imul
imul
mov
test
mov
mov
add
mov
outsb
or
adc
iret
jp
insl
cmpsb
adc
sahf
cmp
pop
pop
push
inc
push
xlat
adc
dec
cmp
fs
icebp
pop
out
icebp
sbb
mov
shlb
lea
fcoms
sarb
addr16
idivl
xchg
inc
dec
cmp
jno
nop
jnp
rcrl
cmp
xchg
jb
jbe
pop
cmp
sub
adc
pop
xor
incb
scas
jo
inc
push
out
in
dec
mov
jp
sti
sub
pushf
sub
xchg
ficompl
nop
cmp
out
fucomip
mov
cwtl
push
jbe
loope
imul
pushf
mov
popa
and
arpl
arpl
mov
out
pop
addr16
sub
scas
mov
push
adc
aam
sahf
fstl
pusha
or
lock
test
popf
cwtl
popf
jg
aam
xchg
outsl
or
mov
mov
in
mov
icebp
xchg
shll
dec
call
mov
fwait
inc
iret
xchg
push
pop
and
jo
sub
ret
out
or
cltd
pop
mov
mov
stc
js
dec
sub
aaa
aaa
cwtl
fcmovnbe
add
mov
ljmp
leave
lds
in
push
jecxz
sbb
ss
mov
mov
mov
sbb
xchg
loop,pt
dec
sti
sarb
out
or
adc
fisttps
test
cmpsb
sub
mov
pop
pop
loopne
ret
jp
or
cli
aad
ret
in
xor
mov
or
adc
int
repz
mov
inc
and
insl
loopne
adcb
in
ret
mov
test
in
push
jg
hlt
in
pop
sti
jns
add
pop
sub
mov
xchg
inc
or
push
test
mov
mov
cmovg
push
jb
dec
mov
fnstsw
xchg
call
push
insb
nop
std
push
ja
xor
aad
outsb
outsl
push
scas
fcompl
scas
ret
mov
mov
inc
add
sarl
xlat
mov
js
sub
push
lahf
icebp
adc
or
loopne
xchg
lock
mov
scas
test
aam
movb
scas
fistl
dec
icebp
lcall
jo
xchg
int3
ljmp
nop
daa
repnz
stos
push
ds
or
dec
subl
jg
loopne
divl
pop
fwait
xor
push
test
mov
ja
sarl
pop
rcl
sti
mov
int
jle
push
lds
shlb
mov
pop
test
or
loopne
mov
mov
mov
mov
sarb
scas
sbb
loop
jl
cs
rolb
xor
lock
stc
push
testb
xor
repz
and
xor
adc
jl
push
cld
jle
dec
jae
loope
in
cmpsb
mov
arpl
push
dec
lret
mov
cmp
lods
push
insb
jo
rcll
lods
jbe
mov
aaa
hlt
and
xchg
adc
jg
inc
aad
push
sbb
cli
subb
or
add
repz
push
pop
cmp
inc
mov
and
push
adc
or
arpl
xchg
dec
add
mov
inc
cmpb
pop
mov
mov
push
inc
and
jnp
add
pop
loopne
sbb
mov
cli
push
xor
call
loope
jne
xchg
push
mov
sub
ret
or
jo
pusha
or
fbld
push
fnsave
add
int
fisttpl
jle
dec
sbb
sbb
or
adc
mov
xchg
mov
lods
push
and
sub
jl
mov
mov
mov
inc
std
cmpl
fucomi
push
or
repnz
cltd
mov
jbe
jb
mov
gs
jnp
rorl
dec
aaa
cmc
lods
cmc
add
loop
xor
hlt
push
into
fwait
in
sbbl
das
push
les
push
mov
mov
stc
mov
lods
lds
dec
adc
xchg
inc
cmpsb
push
lock
outsb
push
xor
pop
push
into
fstps
dec
mov
les
lods
call
cmp
push
adc
int3
cli
pop
push
ljmp
inc
dec
nop
ljmp
bnd
subl
int3
stos
pop
daa
push
jle
test
inc
mov
or
inc
add
jb
sbb
fisubs
xor
rcrl
dec
add
and
mov
sbb
mov
mov
xchg
scas
sub
scas
stos
sbb
movsb
or
and
or
jb
add
jmp
popa
pop
cmp
adc
ds
cltd
mov
add
mov
jg
addr16
in
lahf
inc
cld
ret
jnp
xor
dec
repz
fnsave
testl
arpl
adc
shll
fsubrp
aaa
lea
dec
sti
cmpsb
push
add
adc
data16
fscale
les
xchg
push
rcr
xchg
lret
sbb
loop
pop
xchg
pop
mov
push
movsb
mov
pop
inc
xor
popa
cltd
lds
mov
idivb
dec
cmpsl
and
pop
mov
xor
jecxz
ja
and
mov
outsl
sti
lret
adc
aas
les
lods
push
rclb
dec
test
and
mov
cmc
push
sbb
mov
hlt
lcall
jle
jbe
jl
xor
stos
xchg
or
leave
adc
imul
mov
stos
add
push
pop
xchg
mov
fs
ljmp
icebp
xor
fbstp
in
push
pop
adc
in
imul
mov
add
jbe
push
cwtl
scas
jae
out
xchg
jo
push
push
and
push
mov
test
rcrl
xchg
pusha
into
decb
jb
mov
sbb
inc
or
jg
montmul
cmpsb
test
addr16
loop
mov
dec
mov
pop
nop
out
sbb
mov
lods
xlat
lods
sbb
fcoms
out
sbbl
cli
jecxz
cmp
sbb
sub
inc
imul
iret
mov
aad
lods
pop
mov
outsl
sub
xchg
inc
sbb
outsb
mov
mov
push
fwait
pusha
push
cmpsl
add
inc
notl
mov
and
cmp
pop
repnz
data16
xchg
outsl
sub
insl
cmp
adc
aas
or
cs
push
jmp
mov
add
shrl
mov
jecxz
or
aaa
cmpl
jne
test
fnstenv
push
lods
cmpsl
push
push
insb
or
push
shll
add
dec
and
dec
loope
in
pop
lods
fstpl
fldcw
sbb
sbb
xchg
xchg
cmp
cli
ljmp
mov
push
or
dec
push
fwait
mov
cld
nop
cmc
mov
pop
icebp
out
or
outsb
lock
push
je
xchg
outsl
and
mov
sbb
push
xchg
mov
pop
iret
and
and
jg
pop
je
or
stos
adc
shl
jg
popf
inc
xchg
xor
leave
nop
inc
mov
inc
push
in
jp
lret
mov
test
pusha
data16
dec
and
xchg
xchg
call
cld
dec
iret
call
sub
fdiv
popf
pop
aad
mov
cmpb
push
pop
mov
loop
test
cmpsl
lods
repnz
sti
mov
add
fnstcw
sub
sbb
mov
sbb
pushf
fcoml
out
rcll
xor
xor
jp
outsb
dec
hlt
jnp
mov
in
mov
push
incb
mov
int3
fmul
pop
dec
mov
stc
push
dec
pop
sbb
jp
cmp
mov
lcall
mov
cmpb
fisttpl
sbb
xor
sub
and
xchg
mov
int
movsbl
mov
lret
mov
and
roll
xchg
xorb
rclb
pop
std
sub
push
sub
mov
outsl
in
icebp
and
cmpsb
mov
push
aas
in
es
jnp
mov
push
xchg
pop
insb
in
pop
jecxz
sub
jae
sbb
lret
test
jl
jns
sbb
mov
cmp
in
in
push
sbb
imul
sub
mov
mov
add
sarl
inc
jnp
mul
and
xchg
mov
or
and
inc
sbb
addr16
in
roll
mov
adc
cmp
aas
adc
ret
push
adc
dec
push
sbb
loope
shrl
mov
dec
and
mov
aad
enter
shl
daa
aam
incb
aaa
pop
popf
cwtl
lods
push
divl
and
and
cwtl
push
loop
and
movsl
xchg
test
or
test
mov
and
les
ret
inc
pmulhw
lds
imul
push
jle
mov
sbb
fbld
and
je
and
mov
jle
cs
ret
mov
sbb
xor
fsubp
add
ret
and
mov
push
icebp
push
xor
leave
cli
or
dec
xlat
fidivs
push
shl
enter
lahf
repz
xchg
xchg
int3
sbb
jle
stos
test
scas
cmp
leave
push
in
std
adc
mov
fbstp
mov
or
xchg
dec
adc
fnsave
in
in
daa
fs
jnp
sti
imul
divb
gs
dec
and
mov
or
mov
in
inc
sbb
mov
mov
xor
movb
push
mov
sbb
push
pushf
adc
jno
cwtl
xor
je,pn
mov
mov
mov
push
gs
xchg
xchg
xor
inc
out
insl
jmp
lret
mov
mov
mov
ss
xorl
mov
lods
adc
out
lcall
rcl
shrl
shll
xchg
movsl
and
jg
or
mov
or
dec
mov
call
sub
fsubl
pop
adc
fimull
cmc
loope
adc
aas
insl
mov
pop
iret
jne
outsb
test
loopne
enter
push
test
pop
fmuls
jmp
arpl
ret
mov
stc
mov
inc
int3
add
stos
adcb
pop
add
popa
test
shlb
mov
in
test
mov
and
out
sahf
add
enter
push
sar
mov
dec
mov
aam
pop
out
mov
ror
in
mov
mov
adc
repz
es
cmp
fs
sub
inc
fdivrs
hlt
out
sbb
imul
pop
js
add
jmp
clc
std
xlat
loopne
mov
push
test
and
add
stos
sub
stos
in
pop
lret
mov
cmp
jae
sub
adc
shrb
dec
push
mov
mov
jg
pushf
ss
sub
lcall
sti
pop
insb
sub
adc
or
cmp
stc
je
xor
out
and
iret
push
sbb
js
xchg
mov
test
pop
mov
mov
into
dec
cmpsb
cmpsb
gs
call
push
pop
cwtd
and
daa
xchg
es
je
inc
inc
sbb
pop
add
lock
loopne
xor
jo
mov
mov
test
mov
adc
hlt
cmp
mov
movsb
cli
aad
scas
xchg
aad
sub
into
cwtl
test
push
test
movsb
aad
dec
cmp
bound
sub
sub
push
push
pop
pop
testl
pop
mov
insl
into
fisttpll
inc
pushf
mov
mov
mov
adc
add
jns
add
test
push
or
xor
sbb
xlat
call
test
lds
inc
sub
push
mov
lret
int3
jmp
ja
xlat
fcomi
mov
push
pop
out
add
mov
stos
outsb
decl
ja
scas
scas
and
or
lret
xor
scas
lret
adc
or
pop
int3
cmp
and
les
clc
fmulp
test
dec
and
cli
test
lods
mov
pop
fcomps
dec
cmp
pop
arpl
mov
and
addr16
mov
shlb
sahf
or
gs
fs
js
int3
pop
add
adc
pmulhuw
lahf
imul
and
cli
insl
jmp
fisubl
push
pop
loop
sbb
and
enter
mov
insb
js
or
pop
mov
sbb
aas
push
mov
xlat
int
stos
icebp
mov
lea
mov
cld
cmp
jge
adc
std
scas
jge
pop
push
icebp
sub
bound
mov
add
icebp
inc
in
sub
into
sub
outsb
faddp
xor
sub
insb
rcll
imul
fs
jo
cmp
xchg
pop
das
xor
adc
out
mov
out
pop
xor
ljmp
mov
into
mov
std
push
mov
roll
jno
cmp
jno
adc
outsl
xchg
mov
sbb
xor
add
jge
ret
je
fists
jo
jnp
bound
lahf
insl
out
loop
cmp
inc
sub
or
or
jecxz
roll
stc
fstpl
insb
add
xor
ret
push
xor
push
cmp
mov
arpl
jns
insb
outsb
mov
loopne
inc
pop
jae
cli
mov
out
mov
push
int
jge
dec
jb
push
test
push
popa
sbb
popf
mov
pop
add
jne
js
mov
pop
imul
push
push
notl
repz
pop
dec
or
jmp
imul
popf
stos
sbb
rcrb
or
imul
je
push
cmp
popf
or
xorl
je
neg
push
imul
test
shll
sbb
sti
sti
xchg
cs
cmp
mov
into
dec
fcompl
movl
pop
xchg
mov
mov
mov
dec
rolb
pop
out
or
jo
add
adc
mov
mov
and
inc
lret
cmpsl
cmp
fbstp
or
xor
adc
popf
out
daa
sbb
js
outsb
sbb
les
mov
pop
push
pandn
out
sbb
shll
and
outsl
xchg
sub
xchg
pop
nop
mov
test
add
jmp
out
inc
mov
jae,pn
je
xor
cli
mov
scas
into
inc
stos
xlat
jo
or
test
sub
addr16
mov
xlat
out
ret
outsl
ss
jnp
pop
mull
pop
sub
call
cmp
cmc
jg
mov
cli
inc
cmp
shl
ds
xchg
sub
out
shll
push
loope
cltd
sbb
repz
sti
and
xor
loop
aad
jl
rol
nop
ret
push
pop
je
stos
cmp
push
add
mov
xchg
mov
outsb
jle
shl
lea
clc
std
scas
int3
add
xor
xchg
cmp
out
mov
repz
insb
jne
jb
stos
scas
adc
add
sbb
movsl
fisttpl
sub
lret
repnz
push
ret
insb
out
add
das
add
dec
testb
adc
cld
dec
stos
mov
mov
aam
dec
gs
mov
fadds
pop
mov
aaa
or
pop
hlt
setg
or
inc
lret
leave
lahf
jecxz
mov
fidivl
jl
je
imul
cmp
jne
nop
jbe
xchg
add
jb
jp
imul
push
jnp
mov
dec
sbb
add
sub
mov
mov
andb
xchg
jno
xchg
and
pop
scas
sbb
mov
push
or
sbb
pushw
aad
outsb
inc
and
jo
pop
loop
in
ljmp
push
jbe
xchg
push
adcl
in
in
push
jg
xchg
dec
adc
and
pop
aaa
pusha
and
fucomp
dec
shll
push
bound
leave
sub
shlb
sub
dec
nop
push
out
vdivsd
mov
jecxz
sub
jae
jge
addb
scas
loope
je
xlat
stc
cld
xchg
xlat
sub
jg
adc
dec
mov
jp
js
out
movsb
inc
les
call
add
mov
gs
dec
sarb
dec
push
fisubrl
push
call
mov
mov
fnstsw
fisubs
jne
mov
push
ds
jne
movsb
mov
cmp
repz
ds
jmp
push
sub
cmpsb
cmp
mov
lcall
fistpl
aas
add
xchg
std
mov
dec
add
lret
inc
mov
outsl
int
out
loopne
stc
ret
inc
lods
mov
inc
cmpsl
lahf
int
stc
push
cmp
xlat
mov
push
inc
ret
inc
nop
cmp
dec
pop
imul
arpl
xchg
dec
or
xchg
cld
bound
xor
pushl
or
mov
movsb
push
pushf
xchg
xchg
inc
int3
ds
inc
ss
adc
mov
mov
leave
mov
add
icebp
jmp
and
inc
in
imul
pusha
dec
sbb
out
jg
insl
xchg
bound
inc
movsl
sarl
fsubs
add
lods
movsl
sbb
adc
mov
push
cmp
cwtl
mov
in
jle
daa
int3
and
es
pop
leave
jmp
enter
shrl
movsb
out
push
mov
test
fiadds
test
xor
leave
orb
mov
aam
pop
cwtl
into
adc
mov
mov
xchg
adc
mov
pop
mov
icebp
sahf
jno
and
xchg
and
dec
push
cmp
gs
and
fsubr
les
arpl
aad
inc
push
sbbb
dec
cmp
fildl
stc
fcmovu
mov
inc
push
cmpsl
lods
pop
lea
pop
movsb
pop
mov
xor
sbb
iret
ret
sub
insl
enter
mov
mov
jb
cmp
inc
stos
cmpb
sub
xor
sub
add
or
jns
stos
lods
mov
inc
inc
sbb
loop
jae
add
mov
jbe
cmp
and
lds
int3
movsb
leave
jecxz
inc
jge
dec
lock
fcomps
movsl
test
sub
stos
lahf
or
cmp
outsb
stos
push
pop
dec
loop
imulb
jmp
loope
sbb
cltd
fnstenv
iret
test
adc
cmp
adc
push
and
cmpl
subb
lcall
dec
sub
jnp
rcrb
push
mov
cwtl
jo
test
jno
lea
in
les
adc
hlt
xchg
stos
pop
add
or
das
mov
adc
lret
mov
pmullw
pop
shrl
pop
push
das
push
pusha
cmp
jne
js
push
das
jecxz
mov
push
jbe
or
pop
mov
mov
pop
rcrb
jg
add
dec
mov
mov
int3
popa
rcrl
dec
xor
lret
xor
insl
push
jge
pop
mov
sahf
inc
inc
inc
dec
sbb
ret
mov
push
jmp
out
mov
mov
cwtl
add
dec
shlw
sbb
hlt
and
and
adc
clc
les
pop
test
push
jle
add
pop
mov
push
or
leave
push
push
mov
mov
dec
lds
test
and
sub
sahf
jecxz
out
xchg
cwtl
adcl
seto
enter
lcall
dec
flds
jmp
scas
sub
jmp
mov
mov
mov
sbb
rep
push
sub
inc
add
mov
scas
mov
test
push
ja
mov
adc
jno
orl
add
mov
aaa
int
daa
adcl
inc
lods
test
lds
xchg
cld
dec
cmpsb
in
mov
data16
mov
aas
gs
cmpsb
or
push
test
in
inc
mov
icebp
cmc
cmpsb
imul
sub
xor
ss
rol
push
or
adc
fcomps
testb
in
icebp
lcall
dec
mov
mov
dec
lret
dec
pusha
leave
fdivl
add
pop
fs
push
mov
aam
mov
lods
sbb
mov
xor
sub
pushf
xchg
xchg
int
lds
rorb
fimull
out
push
mov
mov
pop
test
lret
cmc
adc
xor
das
cmp
fidivrl
ljmp
adc
iret
outsb
jg
jbe
jno
or
xchg
es
out
leave
pop
sub
mov
cmp
adc
sub
fwait
aas
add
push
mov
daa
fmull
xor
adc
pop
lahf
xchg
sbb
sbb
and
in
repz
xchg
stos
inc
notb
inc
adc
cmp
mov
pop
mov
and
adc
add
add
inc
out
sub
xchg
stc
pop
subl
cld
mov
jbe
fstpt
call
dec
bnd
xchg
inc
add
icebp
in
fimuls
fmull
stos
xchg
push
xchg
dec
bound
imul
push
or
nop
movsl
push
mov
sbb
sahf
fsubl
jo
std
xor
shll
es
out
xchg
mov
in
pop
mov
sbb
ljmp
ffreep
out
dec
mov
mov
int
mov
push
mov
mov
lock
fbld
push
sahf
insl
push
loop
adc
sahf
repnz
insb
gs
lahf
xorb
mov
pop
das
push
jae
xor
scas
add
pop
jb
push
in
ds
dec
sub
dec
loope
jo
mov
mov
cmp
or
popf
mov
lods
ja
das
mov
pop
push
xchg
mov
test
leave
int3
cmp
push
mov
cmp
and
lods
aad
xchg
inc
repz
xlat
push
pop
pusha
lock
cld
or
add
sarl
or
mov
push
xchg
add
mov
subb
push
divb
push
xor
loopne
sub
loopne
sbbb
leave
jmp
dec
imul
jno
pop
int
adc
and
jno
pop
and
mov
cwtl
push
ss
imul
enter
mov
sbbl
lcall
dec
jmp
jns
xchg
mov
jno
rorb
mov
mov
push
pop
adc
adc
andl
arpl
lret
mov
xchg
addr16
mov
jo
ret
inc
sbb
lock
jnp
scas
xchg
inc
cli
and
pop
into
stos
adc
call
aam
das
xchg
add
lods
test
jp
leave
jle
int
inc
dec
mov
mov
push
scas
xlat
mov
inc
daa
pop
jo
pop
stc
inc
mov
rcr
out
pushf
movsl
mov
lods
mov
or
icebp
daa
ret
push
cmc
bound
ffreep
dec
jmp
sub
rcrb
mov
adc
dec
sbb
aas
and
mov
iret
rolb
xor
push
mov
into
es
push
pushf
lock
cmpsb
popf
cmp
in
adc
or
pusha
inc
fdivrs
xchg
popa
lods
repnz
jo
adc
jmp
in
or
jge
add
dec
int
xchg
push
ds
out
adc
stos
in
xchg
push
jmp
outsb
icebp
loopne
daa
shl
in
mov
jne
jns
xchg
stos
fs
aas
lret
mov
cmp
stos
push
shr
mov
adc
ret
movsb
adc
shr
push
dec
movl
mov
dec
jnp
scas
stos
add
inc
movsb
push
xchg
xor
mov
inc
psubd
add
dec
out
jle
sbb
shrl
cmpsb
jmp
dec
fwait
jae
iret
pop
mov
cs
fwait
sub
adc
sbb
jo
adc
dec
pop
js
adc
pop
dec
xor
dec
sub
dec
dec
insl
aad
cwtl
icebp
cmp
filds
push
rcl
adc
ljmp
movsb
adc
mov
cmp
rcrb
rcrl
insb
je
xchg
add
mov
icebp
pop
cli
mov
push
xor
inc
out
sti
out
sahf
mov
xor
cmp
orb
bound
je
imul
dec
push
adc
shrb
test
cmpsb
jle
sbb
xor
or
mov
adc
mov
adc
les
imul
rclb
std
in
adc
sti
sub
push
int
jae
mov
lods
fcomps
add
scas
adc
push
lea
and
stos
pop
add
ljmp
jo
mov
lret
repz
mov
test
std
data16
lret
lret
sbb
mov
stos
mov
loope
cltd
scas
mov
lret
add
jge
int
lret
cmp
ret
jg
inc
pop
sbb
jge
insb
movsl
or
sti
jle
insb
loop
jle
ljmp
int3
rclb
or
add
and
imul
mov
sbb
bound
cmp
mov
cltd
sub
xor
fsubl
movb
adc
adc
andl
out
imul
mov
cmp
cmpsb
js
mov
xchg
jb
and
lret
ds
dec
lahf
dec
aam
cmp
push
imul
mov
ljmp
daa
push
pop
loopne
jp
pop
shl
iret
daa
out
cmc
xchg
adc
lret
push
push
notb
dec
pop
adc
cmp
jae
sbb
cld
and
sub
test
sbb
pop
jae
mov
fcomps
xor
aad
and
shl
test
jmp
call
ja
cmp
test
dec
inc
add
call
lret
arpl
add
xchg
aam
loop
mov
xor
cmp
push
jecxz
fs
dec
test
inc
or
jl
lret
sub
bound
cmp
ds
lcall
ficomps
push
fucomi
lcall
mov
loop
je
arpl
out
inc
insb
in
mov
scas
psubw
leave
es
jp
and
in
mov
jno
pop
fs
call
and
xor
cmp
aad
xor
gs
pop
xor
inc
sub
jp
inc
push
add
sub
inc
mov
ss
incl
xchg
sbb
inc
or
adcb
xchg
iret
addl
loopne
leave
enter
mov
aam
or
out
mov
xchg
push
mov
mov
out
adc
pop
or
ret
fistpl
mov
add
subl
std
lcall
cmp
aam
jmp
aam
jns
ja
xor
aaa
les
shlb
sbb
iret
dec
mov
in
movsl
dec
mov
dec
mov
stc
cmp
mov
fnclex
cmpsb
ss
pop
imul
fs
cmp
ret
cld
int3
sti
in
ret
mov
lds
push
mov
jb
popf
dec
and
adc
pop
inc
cmpb
jbe
test
sbb
test
sbb
int3
adc
cmp
sti
pushf
decb
cmp
jbe
int3
mov
movsb
mov
adc
mov
lds
mov
scas
ret
lock
test
cmp
scas
push
xchg
push
pop
push
lcall
dec
jp
jmp
les
out
dec
mov
and
pop
frstor
sbb
dec
ret
lock
and
push
push
fisttps
jbe
jmp
pop
jae
dec
xor
or
inc
jl
ret
cs
mov
sbb
adc
jo
jb
pop
repnz
and
add
scas
cmpsb
jecxz
mov
fdivs
xchg
in
cmpsl
aad
xchg
and
push
xchg
cwtl
lods
mov
mul
push
dec
stc
ret
push
dec
imul
xchg
and
sub
pop
sti
inc
fwait
stc
loope
repz
sub
xlat
sarl
push
lret
xor
push
popaw
lock
mov
push
or
push
pop
xchg
int
jge
push
and
aam
mov
out
out
mov
sub
mov
add
xor
daa
in
ds
xor
xchg
jae
clc
cmp
lret
sub
adc
fwait
call
mov
jo
ret
dec
sbb
icebp
rol
repnz
scas
sar
fstl
cmp
cmp
jp
pusha
daa
sbb
fstpt
pop
pop
lret
push
add
stos
add
lods
mov
aad
or
xor
xchg
call
pop
fdivrs
push
mov
js
push
gs
or
dec
das
push
or
f2xm1
and
lret
jl,pt
test
pusha
mov
nop
dec
cmp
jmp
mov
mov
dec
sbb
add
ss
and
mov
lret
pop
in
adc
in
mov
pop
dec
pmulhuw
adc
lea
call
in
mov
icebp
daa
clc
mov
or
in
push
and
lock
mov
popa
sbb
scas
ljmp
jecxz
cmp
cli
cmpsb
push
aam
xchg
movups
sbb
nop
mov
dec
aas
inc
and
pusha
cld
pop
repnz
or
inc
fs
test
or
movsl
push
jnp
jge
jp
adc
mov
jmp
inc
movsb
jle
test
into
sahf
or
in
or
fwait
pop
xchg
lods
std
cltd
or
push
rcll
mov
shlb
inc
add
insl
cmp
dec
cli
ljmp
jp
cltd
call
mov
or
pop
jmp
sarl
pop
xchg
or
pop
dec
lret
fsubrs
lods
xor
dec
cmp
lods
add
lea
cmp
mov
or
mov
gs
and
aaa
mov
push
xchg
push
stc
ss
inc
mov
incl
push
fnsave
push
or
or
sbb
push
mov
popa
out
pop
inc
lret
sbb
mov
popf
adc
insb
stos
mov
enter
andl
adc
add
cmp
cmp
lds
add
xor
aad
mov
fidivrl
sbb
js
adc
mov
es
loopne
arpl
jno
mov
lcall
ret
mov
sub
lods
and
in
in
or
cmp
cs
int
into
inc
lret
cmpsb
jmp
nop
or
push
jg
mov
push
lahf
push
dec
ljmp
or
pop
repnz
and
pop
data16
insl
fisubrl
push
scas
sbb
imul
movsb
lods
adc
into
pop
in
frstor
xchg
hlt
sahf
lods
aaa
sahf
xor
cmp
ljmp
add
das
insb
in
sahf
adc
loope
aam
mul
mov
mov
pop
xor
lods
arpl
push
sub
cmp
xor
cmc
in
shl
mov
fimull
xchg
jmp
imul
popf
loop
pop
ljmp
jne
adc
std
sub
push
mov
dec
pop
jnp
mov
seto
xorl
adc
add
repnz
pop
in
or
nop
push
nop
sbb
fdiv
xchg
fcoms
ret
out
xlat
fsubl
pop
add
jo
add
and
add
pop
xor
push
lahf
inc
inc
fsubrl
xor
sub
lods
push
lds
inc
pop
inc
xchg
xor
iret
out
stos
jmp
dec
mov
pop
pop
bound
rorl
mov
fsubs
inc
movsl
lret
repz
or
enter
ss
shll
test
jecxz
insl
sbb
loope
cmp
mov
xchg
or
aas
add
in
aaa
aas
ret
mov
cs
dec
adc
ja
push
out
adc
fwait
test
test
rclb
sahf
cld
add
mov
adc
popf
mov
repnz
xorl
pop
mov
mov
stos
shrl
push
movb
push
xor
rcrb
leave
les
jecxz
jns
adc
jmp
loop
and
cltd
sahf
das
sbb
pop
xchg
nop
das
inc
jnp
stos
push
loope
mull
xchg
loopne
cs
enter
push
mov
addr16
xchg
out
add
sahf
or
nop
adc
pop
inc
adc
cld
movsl
in
repz
jae
sbb
push
push
and
cli
sbb
aam
in
in
or
pop
bound
sbb
cmpsb
mov
cmp
jle
lahf
test
cmc
int
leave
sub
adc
loopne
mov
xchg
out
cmpsl
fidivs
jle
pusha
lcall
or
mov
cmp
sub
push
or
in
sbb
imul
clc
daa
or
das
pop
push
mov
push
push
xchg
into
sub
lcall
jnp
cmp
fstpt
sti
aas
insl
dec
das
add
das
inc
aad
and
jl
or
jb
faddl
ljmp
push
movb
psubb
xor
mov
jge
pusha
test
cwtl
jecxz
out
sti
jns
inc
repz
ret
sub
fdivrs
in
pop
jo
xor
jmp
jg
cmp
ret
cmpsl
es
test
repnz
out
pop
dec
xchg
subl
enter
sbb
push
js
xor
mov
shll
inc
lahf
push
shl
fsubrs
add
dec
jle
cli
sbb
and
push
push
out
xor
inc
mov
add
sub
movsbl
pop
xor
sahf
cmp
push
mov
jmp
test
out
mov
fwait
cmp
lcall
adc
add
scas
cwtl
or
add
arpl
mov
pusha
cmp
fs
mov
mov
fsubs
dec
stos
into
pushf
rcll
arpl
mov
jno
cltd
cmpsl
mov
and
getsec
orb
fwait
inc
dec
test
loope
loopne
xchg
push
pop
fadds
push
or
jbe
addl
inc
push
bound
les
loope
out
push
inc
xchg
mov
popf
fcoml
inc
data16
mov
lods
shrl
xor
addr16
jl
mov
jmp
xchg
mov
frstor
dec
clc
sbb
cmp
fcomp
adc
loopne
push
mov
hlt
jb
aam
ret
pop
lock
mov
lret
add
sub
pushf
popf
mov
cmp
push
out
add
aam
cs
jge
ficomps
xchg
cmpsl
inc
out
stos
fstps
mov
mov
jg
dec
jne
fidivl
js
and
ret
repz
adc
jge
mov
mov
xchg
js
jge
mov
or
nop
mov
xchg
fbstp
mov
insl
and
push
mov
pop
jmp
ja
jno
push
push
imul
cmc
pop
pop
add
adc
ffreep
push
sub
mov
aad
mov
pop
jnp
lret
dec
and
in
in
cmp
mov
push
nop
jecxz
mov
dec
das
xchg
push
pushf
push
scas
mov
dec
cmp
or
in
loop
jge
cmc
push
pop
es
leave
lret
rcl
push
fmull
inc
orb
mov
fstp
xor
in
sbb
add
inc
inc
nop
adc
lahf
jae
inc
fldcw
testb
mov
jl
jle
sbb
popa
sbb
fwait
adc
shll
adc
push
popf
fs
je
shrb
aad
mov
arpl
cltd
repz
dec
or
sarl
test
in
lock
or
pop
jmp
xchg
push
enter
adc
test
cmpsb
add
xchg
pop
ret
out
sahf
pop
mov
or
adc
mov
jp
and
imul
lret
xchg
jp
dec
popa
mov
in
popa
ret
push
dec
repz
or
xchg
adc
jle
mov
ljmp
sbb
in
xchg
pusha
repnz
add
mov
fists
and
iret
loope
xor
nop
pop
sub
sbbl
ja,pn
dec
cmp
push
inc
insl
lds
cmp
mov
push
mov
inc
loopne
and
dec
pop
adc
inc
jo
out
xlat
arpl
lds
aaa
sti
rol
stc
lcall
shrb
cmp
in
decb
lock
sbb
cltd
fwait
push
mov
jl
mov
mov
loope
mov
xchg
cwtl
dec
xchg
loopne
mov
xor
mov
mov
maskmovq
loopnew
sub
orl
push
aad
sbb
mov
jns
popf
imul
mov
adc
outsb
int
jmp
fsubrs
hlt
jno
jns
pop
xor
inc
pop
negl
int3
mov
into
mov
inc
jbe
lock
xchg
and
popa
xchg
js
mov
cmpsl
loop
push
rorl
add
outsb
mov
aaa
cli
aaa
pop
mov
fnstenv
rclb
push
stos
jle
push
jnp
sbb
pop
es
mov
mov
aad
mov
stc
cs
jno
sub
sub
clc
sbb
lcall
lds
imul
mov
mov
inc
jb
dec
das
out
enter
push
imul
pop
insb
incl
xchg
add
inc
or
add
aaa
shrb
je
mov
jle
stos
aam
sbb
in
aad
dec
mov
jle
notb
stc
gs
adc
pop
fists
cli
addr16
add
aas
cwtl
mov
roll
cmp
mov
xchg
cmp
or
pop
push
jb
scas
cli
dec
ljmp
jb
xor
sbb
push
mov
sbb
and
pop
add
inc
test
pop
insl
pop
es
or
fbstp
pop
nop
call
adc
sti
add
xchg
aad
and
pop
rorl
or
push
or
jle
cmp
leave
out
cmc
fstps
jne
inc
add
fs
jge
mov
jecxz
aas
push
stos
lods
lods
sub
mov
add
out
xor
jo
scas
xlat
out
imul
daa
inc
mov
cltd
sub
in
cwtl
scas
enter
and
lahf
shll
add
mov
dec
xor
dec
pop
or
sbb
adc
stc
lret
fadd
jge
inc
sbb
fists
imul
loope
jb
add
pop
test
shr
jmp
rcll
mov
lcall
jecxz
xchg
mov
data16
rorb
or
fdivp
imul
cmpsb
mov
mov
call
push
push
xor
mov
dec
add
pop
jle
or
test
dec
mov
test
mov
push
cmpsl
shl
shl
xchg
mov
popa
mulb
fistps
ja
fists
sbb
add
icebp
jb
mov
ljmp
inc
xor
pop
test
sbb
daa
jno
sub
mov
cmp
cmpsl
mov
adc
mov
jle
mov
mov
pop
push
push
mov
fwait
jle
pop
fldpi
adc
out
sbb
iretw
pop
jecxz
mov
or
and
addr16
divl
cmpb
dec
push
xchg
mov
xchg
and
mov
xchg
fwait
cmc
xchg
sbb
stos
in
mov
or
inc
dec
aas
mov
sub
jo
leave
jbe
mov
adc
xlat
or
rcll
mov
dec
xchg
shrd
popf
xchg
in
inc
imul
pop
lret
push
jge
xor
pop
movsl
mov
pusha
dec
mov
pop
and
push
mov
xor
jg
xor
aas
mov
sbb
jge
lds
into
mov
sti
cmpsl
imul
or
rorb
daa
insb
jae
das
dec
push
fmul
mov
out
call
sbb
cmp
test
mov
cltd
add
and
pop
xchg
call
or
in
popf
loopne
mov
jne
mov
mov
xchg
mov
jo
adc
dec
xchg
imul
sub
push
out
lds
loopne
pop
scas
xchg
sahf
ja
in
mov
or
add
push
lea
push
mov
xchg
fmull
mov
ljmp
mov
cli
pop
out
stos
push
mov
jns
ret
sbb
sub
inc
cs
jns
ss
pusha
add
cmp
jecxz
xorl
and
mov
push
push
jle
inc
or
jne
mov
add
dec
push
push
jnp
dec
sub
jmp
aas
cld
in
hlt
adc
scas
out
ja
jl
aas
insb
mov
push
pop
insb
adc
sbb
stc
mov
inc
psubsb
pushl
outsb
mov
mov
stc
fisubs
jo
movhps
mov
shlb
fs
fistl
ja
rclb
call
cmpsb
mov
mov
push
jecxz
lods
test
jnp
fs
ss
fcompl
mov
enter
jo
mov
out
shll
xor
imul
jl
pop
ds
shrb
xchg
cli
cmpsl
aam
pusha
rorl
dec
sahf
mov
jne
stos
in
outsb
push
test
insl
mov
pop
sub
mov
int
jo
cld
sub
or
jge
and
inc
cld
ljmp
in
jmp
cmpsb
lods
adc
mul
shl
sahf
in
sub
int3
imulb
mov
xor
sub
in
inc
lods
lods
pop
mulb
sahf
xor
adc
inc
aaa
roll
je
xor
and
mov
and
pusha
mov
fstps
dec
inc
bound
adc
test
or
jno
andl
sbb
imul
push
arpl
mov
roll
sub
addl
xchg
sub
iret
arpl
dec
mov
pusha
aad
jno
mov
pushf
mov
pushf
push
inc
jp
or
pop
adc
jg
aaa
mov
lret
cli
cmpsb
scas
jne
or
leave
ds
je
cltd
xlat
mov
or
pushf
sbb
and
movsl
xchg
or
hlt
sbb
push
sbb
push
cmpsb
jno
xor
pop
sbb
mov
cmp
xor
pop
data16
cmpxchg
mov
mov
mov
xor
cld
mov
std
mov
fwait
mov
dec
add
mov
in
out
test
adc
jns
pushl
xchg
add
jg
loope
popf
push
cmp
ret
and
or
orb
lcall
cmp
pop
jl
jno
mov
add
aam
push
std
adc
push
testb
xor
mov
push
push
mov
inc
xor
sbb
notb
pop
iret
mov
sub
mov
sub
inc
mov
leave
lods
in
in
lods
data16
pop
inc
jp
pop
sahf
xchg
jne
mov
xchg
mov
cmpsl
fistl
shlb
xlat
mov
dec
jo
fimuls
xor
in
or
pop
jnp,pn
fnstcw
insb
ror
imul
mov
dec
pusha
cmc
daa
out
sbb
lods
stos
out
dec
movsb
dec
and
ret
test
cmp
int
xor
sbb
movb
pop
mov
lret
or
mov
aam
dec
pop
mov
and
int
sub
jmp
inc
xchg
shrl
xchg
inc
cmp
fildl
sbb
mov
in
mov
nop
enter
cmp
lods
xchg
fbstp
mov
mov
or
push
loopne
xchg
sbb
sub
and
xchg
pop
jmp
mov
cmp
inc
loope
nop
jge
adc
cmpsl
and
loop
outsb
sbb
sbb
mov
xchg
dec
jb
xlat
rcl
cld
jmp
fistl
stc
in
or
push
pop
mov
mov
or
mov
loope
cmc
rcll
or
out
cld
enter
out
aaa
add
int3
vcmpgt_oqss
push
dec
sahf
sbb
xor
xor
bound
adc
and
inc
movhps
ja
xchg
ds
pop
in
ljmp
aad
inc
sub
sti
movsl
mov
test
enter
mov
adcb
jne
xchg
push
adc
ss
negl
add
and
mov
adc
jo
into
fstps
imul
mov
inc
ljmp
je
cmp
fucomp
cmp
popa
mov
sar
or
clc
sub
loopne
mov
add
cmpsl
ds
fbstp
mov
dec
xor
or
scas
fstpl
rorb
sbb
das
and
je
pop
ret
adc
pop
sbb
ss
test
call
dec
loop
ss
fdivp
repnz
xchg
dec
or
test
inc
fwait
adc
sub
mov
pop
bound
cwtl
arpl
pop
push
jmp
cmp
adc
adc
and
pusha
adc
dec
jne
ficompl
xor
push
add
mov
xchg
mov
push
popa
cmp
cmp
dec
iret
test
pushf
mov
bound
push
mov
and
outsb
push
pushf
and
push
add
mov
push
inc
or
inc
scas
out
outsl
daa
sbb
lret
cmp
les
sahf
adc
out
mov
and
fs
mov
dec
jp
add
cwtl
and
test
sub
xchg
cmc
or
or
pop
xor
inc
int
popf
scas
scas
and
enterw
test
jge
sub
stos
jle
inc
into
ficompl
mov
test
stc
cmp
xchg
mov
addr16
mov
sbb
adc
xchg
jp
sbb
mull
sub
cld
cmp
or
lret
faddl
lgs
cli
shr
mov
adc
clc
cmpsb
jbe
mov
leave
mov
mov
hlt
in
adc
push
and
sbb
movsb
inc
jns
repz
xchg
orl
sub
das
pop
lcall
inc
mov
nop
ss
dec
sbb
mov
daa
bound
imull
mov
in
dec
dec
repz
mov
push
add
sub
sbb
pop
lret
ret
js
pushf
dec
loopne
jbe
pushf
pop
fidivs
push
ss
adc
xchg
cmp
test
popa
push
jg
jne
fadds
xor
ljmp
ss
lods
push
sub
add
stc
shrb
or
mov
mov
add
imul
dec
sub
add
xor
and
sub
hlt
jmp
bound
add
dec
in
out
sti
stc
call
dec
outsl
add
repz
mulb
add
gs
in
push
dec
je
xor
out
and
mov
in
insb
or
shlb
sbb
sahf
lret
xchg
cld
mov
popf
jo
push
sbb
dec
shl
jne
mov
xlat
sbb
into
pop
mov
sbb
xor
pop
sub
arpl
cmpsb
lret
mov
fldcw
scas
inc
call
push
mov
loopne
test
adc
adc
jns
lahf
adc
jle
fnstenv
fstpl
or
cmpl
sub
lea
aaa
lahf
adc
cmp
fs
adc
inc
inc
shll
jge
test
pop
push
rolb
out
rcl
mov
add
xlat
das
lds
xor
aas
test
insb
jbe
jp
lcall
mov
cmpb
ds
movsl
inc
stc
bound
sbb
in
and
inc
icebp
pop
fimull
enter
sahf
and
adc
lret
out
out
inc
mov
stc
call
sbb
dec
mov
pop
rcll
cmpsl
sub
aam
sbb
je
sub
daa
xchg
fwait
imul
sbb
xchg
int
adc
stos
adc
leave
popf
mov
cmp
sbb
scas
inc
gs
hlt
cwtl
inc
faddl
ret
pop
movb
iret
lret
xlat
leave
add
adc
daa
nopl
stos
aam
cmp
xor
movsb
jmp
or
jbe
mov
adc
mov
push
xor
scas
stos
rolb
mov
ret
mov
jne
jp
out
fcompl
cmp
in
add
mov
mov
xchg
xchg
xchg
test
mov
xor
fs
cmp
xor
push
fisubrl
scas
cltd
cmp
fsts
add
push
and
cmp
xor
imul
std
mov
ret
out
add
in
fists
mov
jne
cs
incb
enter
mov
cmpsb
mov
insb
mov
rcrb
adc
ret
hlt
adc
rolb
add
bnd
inc
in
inc
sub
push
mov
fs
inc
mov
dec
mov
repz
shlb
push
movsl
mov
test
xor
scas
mull
popa
jne
xchg
stos
ja
clc
dec
inc
and
addr16
lds
dec
test
in
mov
mov
outsb
incl
dec
lahf
imulb
jge
mov
fnsave
mov
adc
ja
jb
lahf
sub
inc
jge
or
inc
push
ficoml
nop
adc
mov
jne
or
cltd
lret
into
ret
test
adc
rolb
adc
mov
or
lods
mov
xor
subb
xchg
insl
lock
movsb
lods
or
jg
xchg
lock
bound
cmpsl
xchg
pusha
xchg
xor
pop
xchg
movsl
out
push
xchg
mov
pop
fwait
pop
je
leave
jb
and
andl
stos
xlat
adc
stos
or
das
and
sbb
mov
fldl
cmp
mov
inc
rcll
out
call
sub
dec
pop
pop
mov
mov
mov
mov
aam
add
rclb
adc
sub
lock
xlat
pop
ss
stos
inc
inc
push
and
and
dec
cmp
or
sub
notl
inc
inc
repz
jae
popf
mov
or
mov
fwait
mov
mov
push
cmp
es
sahf
rclb
xchg
and
inc
sbb
mov
cmpsb
lock
mov
cltd
cmp
fisttpll
cltd
cmpsl
pop
clc
sbb
dec
es
pop
or
adc
divl
push
aad
ljmp
das
push
add
add
mov
ss
icebp
cmpsb
xor
loopne
orl
xchg
adc
push
sbb
test
xor
pop
add
push
addb
dec
test
pop
outsb
stos
fwait
sub
out
xchg
jns
pushf
cmp
or
xchg
fistl
es
imul
pop
inc
or
xor
aaa
cmovne
leave
arpl
popl
hlt
xchg
cli
fwait
shl
xchg
pop
hlt
xchg
and
ss
mov
arpl
dec
or
pop
je
mov
aaa
nop
mov
push
insl
test
iret
pop
adc
jbe
mov
data16
mov
mov
mov
xorb
sub
aaa
in
sub
pop
and
sbb
js
insl
pop
sbb
sub
dec
jg
dec
fstl
imul
mov
mov
inc
inc
xchg
mov
inc
jne
mov
movsb
int
cmp
dec
sbb
iret
cmp
push
clc
je
mov
pop
adc
mov
cmpsl
xor
stos
jl
int3
inc
icebp
mov
dec
lret
jp
mov
sbb
jle
insb
pop
cmpsl
stos
push
das
mov
ss
jno
jecxz
inc
out
adc
mov
roll
shlb
mov
dec
sub
mov
outsl
or
fbld
aam
leave
inc
ds
mov
stos
sahf
pop
lock
lods
sti
mov
icebp
ds
std
and
ret
xchg
test
stc
aad
jns
xchg
popf
adc
insb
fprem1
orl
roll
or
out
rcll
xchg
jns
in
cwtl
mov
ret
ret
and
sahf
loop
jmp
aaa
divb
pop
scas
pop
xchg
mov
inc
dec
fs
and
scas
leave
fcomp
jbe
inc
pop
or
xchg
push
mov
push
fdivrs
fbstp
lea
pop
loop
ficompl
pop
mov
push
jo
mov
xor
or
movsl
aad
jne
mov
ret
cmp
adc
adc
sbb
hlt
int3
mov
negb
pcmpeqd
clc
mov
ja
add
aam
cld
pop
ds
frstor
mov
cmp
mov
cmpsb
sbb
sub
es
push
addr16
leave
addr16
cltd
hlt
pop
push
loopne
sub
mov
ret
xor
mulb
loope
std
ret
test
xchg
lods
jge
inc
jne
dec
sbb
addr16
lret
mov
fisubs
push
cmp
imul
mov
imul
or
pop
jmp
int
xchg
adc
pusha
inc
mov
xchg
addb
fcmovbe
pusha
mov
xchg
popa
loop
stc
imul
and
jnp
jae
xchg
mov
mov
dec
adc
adc
das
fisubs
sub
cmp
in
jno
loopne
fiadds
sub
call
or
pusha
inc
js
or
popf
jo
cmpsb
jbe
sar
fcomi
mov
pop
mov
xchg
enter
sbb
jp
pop
add
ja
xor
int3
test
ret
inc
jmp
jb
push
sbb
and
cmp
dec
lds
xchg
jns
mov
ss
cltd
test
cmp
mov
cmp
ret
xor
jo
mov
js
add
js
cmp
mov
xchg
das
inc
mov
scas
loopne
sub
xchg
sub
mov
push
dec
cmc
inc
pop
je
xchg
sub
mov
repz
bound
jbe
push
rcrl
nop
mov
mov
out
pop
call
pushf
icebp
dec
mov
pop
mov
fcompl
mov
gs
dec
or
ret
and
jns
ss
std
pop
into
rcr
xchg
or
loopne
jl
and
jae
rolb
shll
iret
push
sti
out
out
pop
jo
or
sub
or
mov
add
mov
push
les
mov
cwtl
frstor
fldenv
push
add
mov
scas
loopne
aas
cmc
jmp
and
jmp
icebp
aam
out
or
pop
sub
mov
sub
mov
movsb
pushl
into
xor
cmp
sbb
data16
test
sub
pushf
stos
push
jbe
sub
rcr
fcmovb
aaa
lret
add
mov
loope
cmc
out
fcomps
mov
or
dec
or
xchg
es
pop
inc
rcll
dec
repz
xor
imul
inc
aaa
enter
mov
fisttpl
scas
jae
or
cmp
xchg
dec
fsubl
dec
in
sbb
mov
or
popf
jbe
jb
xchg
xor
cmp
or
cmp
int
dec
lea
sbb
ja
out
fisubs
dec
push
arpl
fistl
xchg
cld
or
inc
sub
add
push
pop
xchg
jecxz
ret
inc
xlat
ret
dec
pop
insl
subl
fisubrl
sbb
sbb
andb
aam
sub
lds
mov
lds
cmpsb
add
nop
ret
lcall
testb
sbb
jae
sub
xor
and
divb
xor
xchg
int3
or
push
push
mov
sbb
mov
pop
mov
pop
pusha
je
pop
scas
pop
pop
cmp
hlt
push
sar
out
dec
fcoml
repnz
sbb
push
daa
in
add
int3
add
test
or
enter
cmc
hlt
rolb
test
and
or
mov
dec
stos
push
negb
in
arpl
pop
adc
inc
cltd
or
dec
aaa
inc
lret
imul
dec
jl
sbb
repnz
pop
cmp
stos
aas
cmp
movsl
xchg
pop
call
outsb
adc
inc
test
leave
aad
in
cmp
movsl
dec
ja
cmp
mov
inc
adc
repz
mov
rol
mov
sub
sub
xor
mov
test
lods
rep
testb
cmp
jp
mov
push
push
jbe
fcmovbe
dec
sub
das
adc
sbb
scas
gs
dec
or
es
rorb
add
pop
push
out
mov
mov
sub
std
lea
mov
imulb
fdivrl
cmp
xchg
mov
push
iret
pop
jb
cmpsb
inc
xor
push
fsubl
inc
popl
leave
gs
sti
mov
stos
fs
jnp
xlat
pop
xchg
ss
popa
cwtl
enter
ljmp
jbe
in
jg
clc
in
nop
inc
mov
pop
jmp
xor
jno
pop
pop
cmpsb
movsl
push
subb
js
test
nop
or
push
dec
mov
jo
mov
leave
mov
lret
push
loope
in
sbb
pop
jns
push
and
add
sbb
cmp
pop
xor
rcrb
dec
xchg
xchg
punpckldq
mov
in
jbe
lcall
nop
adc
mov
fcmovu
dec
jmp
mov
into
pop
fwait
fs
sbb
adc
mov
push
cs
sub
jns
pop
imul
lods
dec
cmp
xchg
outsl
mov
adc
fistps
xor
sub
mov
dec
or
pop
arpl
movsl
xchg
sub
movsb
dec
sbb
inc
int
push
jbe
aam
call
leave
inc
divb
jae
mov
lea
mov
fldt
xor
sbb
xorb
mov
test
data16
iret
or
mov
aas
subl
adc
mov
fildl
cmp
enter
mov
mov
subl
or
push
xchg
adc
jbe
pop
xchg
repz
add
fistpl
push
cmpl
sahf
aad
test
mov
jmp
sbb
cmp
mov
jne
xor
cwtl
or
mov
xchg
in
add
jmp
leave
mov
xor
adc
fbstp
mov
add
es
nop
ljmp
loope
xor
test
cwtl
pop
lret
jge
ror
or
imul
insl
and
out
int
jge
mov
aad
lock
pop
sbb
mov
push
pop
dec
mov
xchg
mov
add
sbb
mov
jp
in
push
bound
pop
inc
into
cmp
out
jle
out
je
ficompl
divl
dec
and
das
or
and
cmc
jno
add
in
pusha
inc
xchg
and
call
mov
xchg
sbb
push
jns
imul
adc
sarl
xchg
xchg
adc
dec
adc
jns
sbb
scas
fstpl
loope
insl
movsb
xchg
stc
ja
adc
push
cmp
sahf
out
es
mov
add
add
mov
cmp
test
rolb
jg,pt
push
jmp
jo
rcrl
data16
pusha
dec
add
aas
int3
int3
add
jecxz
pop
ljmp
rcrb
sbb
cmp
mov
stc
sub
nop
lea
je
ret
cmp
mov
jmp
repnz
mov
adc
xchg
sarb
jbe
xchg
lea
adc
lret
and
jne
scas
icebp
mov
add
into
pop
ds
sbb
mov
imul
roll
push
icebp
mov
stc
inc
jno
lcall
inc
ljmp
movsl
or
xchg
fidivrs
lods
out
adc
pushl
adcl
dec
in
out
movsb
add
sub
out
sub
ret
arpl
mov
pop
jb
andl
xor
mov
ret
xor
ja
imul
loop
data16
inc
sub
repz
ret
push
insl
pop
pop
lcall
les
pop
pop
andb
aad
mov
stos
sub
icebp
dec
loope
in
and
fndisi(8087
fwait
popa
ja
push
clc
push
cmp
movsl
lock
filds
jp
test
mov
dec
mov
mov
shlb
xor
xchg
ljmp
and
cmp
stos
mov
cmp
inc
fcompl
xchg
outsb
push
push
push
push
push
arpl
movb
data16
xor
jle
jle
fiaddl
mov
iret
and
jnp
mov
cmp
fdivl
add
mov
push
add
in
jge
xchg
and
sub
sbb
repnz
jecxz
cmpsb
jne
mov
icebp
sbb
sub
in
xchg
jb
inc
xor
xor
cli
enter
dec
popa
stc
gs
out
cmp
sub
or
test
mov
xchg
repz
xor
bound
sub
and
bound
loop
jns
das
mov
mov
repz
lods
jae
fld1
loope
loope
jae
xor
rol
loop
mov
xchg
mov
repnz
scas
xor
ror
push
mov
xchg
addb
imul
cmc
mov
jno
lods
ss
xchg
fsubl
inc
in
mov
pop
in
dec
or
ja
push
test
lahf
jno
mov
test
mov
push
int3
jo
pop
dec
or
mov
fiadds
xchg
sbb
inc
mov
in
xchg
in
outsl
or
and
rcl
inc
enter
jl
push
or
stos
gs
xor
jb
dec
hlt
not
and
mov
dec
jge
xchg
dec
rcrb
in
loop
xor
mov
addb
imul
jg
dec
mov
mov
cmp
js
lret
mov
subb
cmp
rorl
sbb
and
enter
push
scas
jmp
movsb
stos
pop
movsl
aad
jno
mov
cmpsb
adc
imul
lret
movsl
enter
add
scas
adc
loope
adc
in
inc
or
fisttpl
rclb
add
push
imul
adc
dec
pushf
push
lea
add
xor
aas
inc
inc
sbb
pop
lock
roll
cmpsl
hlt
sarl
and
loopne
xor
mov
lahf
push
jp
out
mov
jbe
cmpsl
gs
add
jb
mov
pushf
cs
mov
dec
jnp
popa
mov
mov
pop
sub
clc
insl
add
gs
mov
xor
out
xor
mov
mov
and
xor
sbb
push
clc
icebp
mov
jge
std
push
shrb
mov
inc
add
frstor
jle
in
mov
mov
pushf
pop
jne
aad
cli
rorb
mov
jg
push
pop
or
or
inc
leave
sahf
add
push
int
jo
stos
sbb
jne
iret
mov
bound
sbb
mov
mov
std
mov
stc
inc
cmp
xorl
add
das
clc
pusha
movsl
xchg
mov
mov
pop
and
xchg
cli
aaa
das
aad
insb
loop
mov
dec
popa
cli
xchg
into
shll
adc
cltd
dec
cmp
mov
cltd
adc
xor
sbb
push
push
lahf
shlb
lret
dec
fs
shl
rcr
jo
xchg
add
arpl
jge
cmp
es
mov
sarl
mov
outsb
xchg
mov
jmp
mov
xchg
stc
les
mov
data16
xor
or
ds
ds
cmp
adc
addr16
sub
imul
loop
pop
cmp
push
cwtl
or
dec
cld
sub
in
xchg
cs
pop
aaa
pop
test
imul
loopne
nop
cmp
mov
pop
xor
push
xor
jmp
flds
fdivrp
pop
cwtl
shl
xchg
mov
out
out
jnp
and
subb
lea
mov
mov
add
sbb
jle
stc
lret
mov
insb
sqrtps
jp
iret
cmp
pop
xor
addr16
lds
aas
repnz
scas
cwtl
sub
jle
sub
cltd
xorl
jno
dec
adc
scas
push
stos
mov
jle
sub
in
push
dec
fidivrl
out
cmpsb
popf
ss
xor
lea
xor
paddb
sub
xor
ljmp
jg
adc
jns
cs
mov
lcall
iret
mov
add
and
adcb
ljmp
mov
push
add
mov
dec
fcmovu
insb
jne
cmpsb
pop
movsb
dec
popa
sub
sarb
sub
bound
xchg
pop
jo
rclb
scas
inc
fdivl
divb
dec
test
mov
inc
andb
or
call
js
add
jbe
aaa
push
inc
repnz
jo
dec
push
lcall
fiaddl
test
test
dec
mov
sbb
sub
mov
mov
pop
mov
sbb
adc
and
jle
jne
jb
xor
aas
and
push
mov
dec
lea
adc
xchg
mov
and
aam
pusha
push
in
and
cmpsl
leave
repnz
or
test
sbb
enter
icebp
cli
sub
xchg
dec
mov
cli
sbb
insl
inc
adc
sub
divb
mov
xor
hlt
push
pusha
xchg
fstpl
and
fs
cli
mov
lcall
or
mov
xchg
outsb
xchg
mov
aam
add
mov
daa
sbb
js
sti
add
xor
leave
sbb
cltd
xor
fs
ja
test
rorl
dec
jle
aaa
push
aaa
xor
push
sbb
fcoml
add
in
xchg
int3
leave
sbb
mov
adc
inc
filds
nop
dec
out
push
dec
pop
cmp
das
mov
jnp
leave
push
clc
mov
repnz
pop
movsl
icebp
insl
mov
stos
push
test
push
sarb
mov
test
push
and
or
pop
outsb
pop
lret
jmp
sbb
xchg
jo
cmp
add
and
dec
dec
mov
push
scas
jne
js
aam
ret
mov
or
mov
cmp
xor
xchg
in
jns
cmp
sahf
mov
push
cmc
fisttpll
jo
test
call
xor
cmp
scas
punpckldq
lea
lcall
sbb
jl
cmp
sbb
add
mov
cmp
xor
scas
mov
movsl
scas
sbb
out
mov
sub
pop
jecxz
dec
lock
out
lods
jp
push
mull
cs
adc
adc
push
mov
xor
pop
jns
cmpsl
and
les
loop
aas
cli
imul
idiv
xchg
bound
cmpsl
ss
ja
add
jae
mov
pop
add
aam
mov
or
sub
cld
movsl
sbb
neg
es
bound
mov
aam
js
addr16
idivl
lods
jae
imul
call
in
lods
not
lea
jecxz
mov
les
movsb
int3
xchg
int
inc
iret
testb
inc
pop
xchg
push
testl
test
int
cmp
pop
mov
sar
mov
push
mov
or
cmpsl
and
cmp
or
stc
or
sub
pop
nop
out
sbb
mov
aad
cmp
xor
cmp
jnp
lods
ds
pusha
mov
iret
dec
sub
sub
pop
das
inc
fs
jecxz
dec
lret
loop
faddl
adc
dec
pop
sub
stc
xlat
add
test
aaa
jmp
lds
clc
fmull
fcoms
mov
popa
sbb
roll
mov
lock
frndint
add
clc
mov
sub
movsb
adc
in
inc
fcom
pop
cwtl
pop
inc
mov
and
jae
sub
add
and
faddl
dec
fdivs
rorl
out
lods
adc
dec
aam
scas
mov
fistl
push
test
dec
or
adc
pop
leave
jle
out
cld
or
mov
leave
add
ja
cltd
xor
aad
dec
out
les
mov
out
lea
enter
or
mov
cmp
inc
xchg
dec
cmp
mov
jb
mov
mov
imul
mov
enter
and
loop
imul
shr
dec
loope
jno
push
imul
and
popa
or
sub
dec
inc
jp
mov
adc
inc
sbb
pop
ficompl
mov
sbb
push
ret
cmp
ret
add
leave
movsl
mov
mov
divl
add
adc
cwtl
inc
dec
in
mov
add
mov
ret
xchg
in
aad
jge
sbbl
cmp
ljmp
into
sahf
xchg
add
push
sbb
pop
cmp
and
mov
pusha
sub
or
movsb
inc
add
roll
sub
lret
sbb
in
xchg
sbbb
xchg
rcl
sbb
sub
daa
xlat
mov
data16
xor
fisubrs
ret
mov
sahf
int
loop
repz
dec
cmc
cmp
in
dec
hlt
dec
loop
lret
test
in
add
cmp
lods
jae
ds
mov
rcrb
das
adc
jmp
aas
shll
xor
fidivrl
or
xchg
mov
push
aas
push
cmp
sub
addl
stos
fstpt
dec
sbb
adc
cmp
xchg
inc
jle
sbb
lahf
adc
loop
call
add
test
fnsave
aaa
or
mov
jbe
call
mov
sarb
or
and
jae
ljmp
push
imul
fstp
jle
enter
mov
jbe
mov
pop
push
repnz
pop
and
insl
push
push
aas
cltd
mov
mov
dec
ss
add
mov
out
inc
pop
cmpsl
incb
adc
sub
lods
ret
cs
jmp
dec
add
mov
push
push
inc
data16
lret
fstpt
pop
and
sbb
xchg
imul
out
push
mov
adc
outsl
jle
xor
mov
into
das
and
sub
cmpsl
xlat
push
pop
lret
fcoms
sbb
mov
shl
enter
cmp
xlat
xchg
xchg
imul
in
xor
out
inc
add
push
xchg
ja
cmp
xlat
lcall
ja
cmc
idiv
gs
xor
ret
cli
pop
pop
mov
mov
cmp
daa
pop
in
or
push
test
lock
loop
inc
xor
pop
jg
cmpb
sub
fistps
lods
es
cmp
and
dec
push
mov
int
bound
ret
ljmp
cmpsl
adc
jbe
imul
nop
cmp
pop
and
mov
in
cmpsb
sub
inc
sub
xchg
push
jmp
xchg
cli
push
dec
rorl
stos
add
in
xchg
inc
out
stos
pop
jg
ja
test
int3
cmp
loope
mov
aaa
push
repz
cli
cmpsb
xor
push
mov
sub
cmp
or
mov
dec
adc
and
add
pop
test
inc
pushf
lcall
test
filds
rclb
cs
push
push
mov
mov
rcrl
cmpsl
out
adc
adc
ret
mov
les
dec
mov
les
and
jmp
fwait
sub
adc
lret
adc
inc
idivl
ds
insb
sbb
icebp
popf
outsb
imul
out
ljmp
dec
inc
cmp
push
xor
das
mov
popf
cmpsb
push
mov
dec
adc
dec
mov
test
movsl
sub
jno
rcll
insl
cli
cmc
pop
pcmpgtd
insl
pop
scas
es
mov
or
push
jnp
test
xorl
addl
sbb
mov
push
or
or
call
scas
sahf
xor
popf
fwait
or
sub
outsb
pop
push
loope
mov
aad
mov
jbe
pop
push
js
mov
jb
push
mov
lods
xor
jno
mov
aam
lods
xchg
mov
cmp
mov
adc
sub
mov
leave
xchg
and
ljmp
cmp
ljmp
xchg
inc
stos
xor
pop
cmp
unpcklps
scas
dec
ss
and
mov
icebp
std
jae
xor
inc
cs
lret
lock
int3
lods
loopne
mov
mov
cmp
mov
dec
add
inc
in
lods
cwtl
mov
je
repz
xchg
sbb
xor
test
mov
pop
push
jno
mov
adc
fistps
or
test
scas
dec
cmp
stos
or
push
sbb
jo
sti
xor
sar
jno
aaa
and
ja
adc
fnsave
xchg
and
fbld
adc
mov
in
mov
shrb
xchg
adc
cmp
popf
push
movsl
mov
cmp
ret
mov
xchg
push
pop
fmuls
rcrb
cmp
in
xchg
into
mov
xchg
jecxz
subl
pop
xor
std
push
cmp
mov
fdivrl
es
sbb
and
rcrl
push
sub
std
std
mov
cmp
addr16
int
push
dec
enter
cmpl
push
pop
pushl
enter
mov
lcall
or
outsb
repz
pop
push
addr16
incl
dec
insb
add
push
fs
movsb
aaa
xlat
xchg
cmp
dec
lds
pop
mov
sahf
adcb
test
ret
adc
insb
mov
sahf
pushf
in
popa
or
or
enter
rorb
mov
mov
cmpsl
cmp
lahf
mov
add
xchg
cmpsl
shl
test
ja
test
nop
jecxz
shrb
mov
dec
push
stos
insl
pop
scas
jle
push
test
popf
mov
les
jge
xor
ja
cmp
mov
inc
ja
jecxz
sti
xchg
repnz
shrl
fsubs
ret
flds
dec
mov
dec
nop
test
out
aaa
ja
mov
clc
outsb
shr
inc
pop
xor
cltd
in
ss
enter
addl
cmp
movsl
insl
add
out
imul
mov
sar
jnp
test
insl
outsb
and
mov
pop
rorb
mov
fistps
adc
and
daa
push
cmp
sahf
adc
cmp
inc
pop
push
sub
and
xchg
lahf
mov
push
aas
mov
xchg
mov
xor
call
ret
mov
or
mov
and
cli
jae
jns
push
add
mov
mov
adc
jmp
orb
inc
mov
dec
in
call
jne
ret
xlat
mov
xchg
mov
loop
adc
gs
jns
rcll
jmp
and
arpl
lret
mov
sub
push
stos
sbb
cmpsb
mov
hlt
and
jae
adc
roll
pop
popf
movsb
div
ret
lock
rcrl
ret
mov
jno
xlat
add
addl
imul
xchg
scas
and
lds
cmp
repnz
jbe
test
adc
subl
xlat
outsl
sub
mov
cmpb
xchg
cld
or
pushf
push
dec
xchg
loope
aam
and
inc
or
sbb
jne
fistpll
push
cld
and
out
addb
add
cmpsl
or
std
and
movb
jbe
and
aad
push
sbb
xchg
mov
and
cmp
jnp
stc
or
pop
insb
inc
cwtl
les
adc
push
xchg
jecxz
lret
bound
stos
pushf
mov
lret
movsb
xor
out
insl
rcr
lcall
sub
sbb
jmp
ret
xor
jae
xor
pop
sub
xchg
mov
out
cltd
ljmp
xor
xchg
popa
jne
out
push
out
mov
xor
sub
pusha
pop
shlb
jns
clc
stos
mov
cld
test
jmp
ja
sub
xchg
or
xlat
jmp
mov
push
dec
adc
mov
sub
push
xor
pop
sbb
fnstcw
stos
xchg
xor
aad
repz
add
cs
mov
sbb
ret
test
pop
data16
sub
cmp
sahf
loopne
sub
mov
mov
subl
mov
icebp
arpl
cmp
fwait
movsl
add
sbb
pop
jbe
mov
movb
push
sub
adc
adc
or
loopne
iret
mov
call
xor
cs
xchg
adc
out
addr16
xchg
addb
mov
ret
inc
or
test
mov
shlb
jbe
outsb
adc
das
hlt
add
or
add
and
ficomps
in
xchg
ss
int3
mov
stos
cmp
jl
cmp
mov
inc
lds
add
daa
rorl
xchg
int3
out
mov
mov
mov
das
loopne
and
lret
lods
jo
scas
mov
rolb
fistpll
mov
jle
jl
in
js
sub
lods
rolb
mov
mov
sub
xchg
dec
test
adc
mov
or
sub
xchg
out
and
bound
push
xor
andb
and
adc
pop
mov
nop
mov
push
push
call
xor
stos
jle
fildll
fadds
mov
cwtl
cs
test
cmpsb
adc
outsl
mov
out
push
inc
test
adc
les
mov
jns
pusha
cmp
or
or
les
cmp
negb
in
mov
lock
loopne
jb
xor
xchg
mov
mov
dec
pushf
enter
adc
stc
adc
clc
loope
push
add
movsl
adc
insb
ja
aam
ret
out
dec
fisttpl
aas
outsb
sbb
addr16
call
sti
cmpb
fmul
in
mov
out
insl
or
adc
mov
mov
lcall
and
jae
dec
xchg
cmc
add
aaa
lret
xchg
icebp
push
push
xor
mov
scas
add
sbbl
stos
push
je
pop
pop
jecxz
dec
cs
popa
and
pushf
push
fdivrs
or
sub
repz
jae
xchg
shrl
out
shl
xor
sub
testb
sub
add
lods
sahf
jg
pushf
dec
dec
jmp
mov
fsubs
dec
jecxz
inc
or
adc
aaa
lods
sub
aas
pop
mov
mov
inc
mov
pop
insb
fldt
add
shlb
jbe
xlat
pusha
sub
scas
sub
mov
push
in
push
shll
xor
dec
aaa
jno
ds
movsb
subl
cmpsb
inc
fs
lods
and
es
adc
in
mov
loop
jge
ret
leave
jle
and
lret
pop
lahf
mov
jp
xor
popf
cmp
mov
cmp
in
push
movsl
push
pop
dec
cld
cmpsb
jo
out
mov
push
movsl
out
loop
movsl
iret
mov
ficompl
xor
jb
int
out
xchg
scas
dec
int
adc
xor
sbb
add
fstps
test
mov
ret
out
inc
repnz
adc
or
movsb
xchg
das
dec
fstpt
sbb
pop
out
lahf
out
shr
and
sbb
lahf
imul
es
scas
pop
xor
push
enter
mov
or
inc
jbe
adc
mov
add
pop
mov
cmpsb
lcall
pop
pop
fs
mov
rorl
lods
and
push
jg
sub
jmp
jp
mov
cmp
addb
out
hlt
sub
push
mov
rorl
ret
push
pop
pop
addr16
das
aaa
imul
adc
push
fs
push
jb
xor
enter
or
cltd
sub
jge
or
xor
push
lcall
cmpsl
mov
daa
or
mov
pop
jns
popa
mov
sub
test
call
pop
sub
add
and
pop
fmul
outsb
enter
aaa
mov
cmpsl
int3
pop
dec
xor
repz
lahf
mov
xor
and
aam
cmpsb
inc
push
call
shlb
or
add
sub
mov
out
fidivl
xorb
jne
adc
lret
daa
jle
mov
ret
jb
loop
jecxz
cld
es
addr16
popa
mov
sub
sahf
loopne
fsubr
sbb
sub
out
fnstenv
imul
dec
mov
jge
mov
and
aas
ja
adc
add
iret
int3
in
gs
in
rclb
ss
adc
dec
aaa
mov
ja
and
outsb
cmp
mov
mov
cmpsl
out
test
ret
xchg
push
outsl
mov
jo
bound
jecxz
fildl
push
arpl
out
sub
fcoml
out
cwtl
cmp
pop
mov
mov
push
cmp
xor
adc
dec
or
add
scas
mov
dec
mov
mov
push
or
repz
out
in
lds
lahf
mov
es
shlb
ljmp
mov
fldl
xor
out
mov
lds
xchg
and
sub
out
fsubrl
jbe
adc
or
std
jns
or
jmp
cli
pop
add
insl
jge
aas
aaa
adc
xchg
or
dec
aad
xchg
ja
xchg
mov
push
rorb
rorb
sti
sub
cs
jge
xchg
jge
lods
pop
gs
out
pop
rcr
pushf
xor
inc
movsl
mov
adc
pop
mov
mov
pusha
pop
int
jle
and
mov
ret
and
fs
fdivrl
aaa
fcom
ficoms
jns
mulb
ljmp
flds
adc
std
xchg
cs
imul
pop
dec
xchg
xor
fdivl
xor
aaa
sub
sub
std
adc
arpl
mov
sub
scas
jmp
or
jecxz
push
dec
mov
pop
int
sbb
sub
jl
fcoms
enter
iret
xchg
lods
loope
sahf
shll
cwtl
or
and
test
imul
cmpsb
js
xchg
or
inc
or
insl
das
daa
jecxz
jne
sub
cmp
pop
add
xchg
sbb
mov
fcmovu
mov
adc
push
mov
sbb
mov
cmp
mov
inc
inc
dec
add
pop
xchg
mov
cmp
insl
pop
pop
cwtl
cmc
push
int3
mov
arpl
mov
mov
xorps
mov
aad
jl
adc
xor
call
into
push
test
xor
inc
pusha
push
mov
xchg
mov
iret
sub
add
push
xor
and
imulb
js
sbb
js
xchg
ror
add
sbb
sub
xchg
fstl
cmp
cmp
test
or
or
xchg
ja
add
push
push
scas
xor
xchg
push
pop
pusha
xchg
enter
push
test
sbb
dec
xchg
aam
mov
mov
fdiv
mov
popa
scas
divl
inc
adc
popa
mov
pop
out
popa
sub
sub
out
pop
in
in
xor
mov
xchg
xchg
out
or
aad
loopne
xchg
rorb
jp
in
cmp
jae
lds
int3
and
mov
out
push
push
mov
stos
fs
cmpsl
in
popa
xor
dec
iret
pop
jge
cmp
push
rolb
test
xor
fs
lcall
sub
pop
sub
leave
int
mov
int
cli
test
cmp
pop
aaa
mov
dec
push
sub
jo
repnz
into
sub
hlt
popf
or
mov
mov
inc
js
xchg
push
cmp
and
test
loop
and
mov
push
sub
std
jecxz
call
dec
and
mov
push
popf
push
lock
test
loop
jge
cmpsb
or
cmc
jae
cmp
mov
fildll
fldcw
mov
jnp
sbb
into
lods
sbb
pop
inc
or
fdivs
or
push
or
pop
gs
aas
jne
jnp
sar
mov
mov
out
insl
outsb
mov
aas
enter
divl
sbb
ja
in
mov
sbb
xchg
movsb
mov
call
adcb
fsub
dec
cmc
jle
jns
test
dec
insl
in
inc
mov
movsl
and
lret
loopne
clc
mov
lds
cmp
movsl
mov
inc
test
les
int
jbe
push
push
inc
filds
jno
xor
pop
sub
fldt
add
dec
mov
inc
xor
les
sub
int
icebp
repz
sbb
sub
out
cmpsl
and
jp
bound
nop
insb
sub
push
cwtl
mov
and
push
lcall
or
mov
out
mov
xor
mov
dec
nop
repz
dec
imul
dec
int
xor
add
aaa
in
icebp
jne
arpl
push
out
inc
ja
xchg
test
inc
jl
mov
mov
push
push
pop
dec
scas
cld
mov
sbb
sbb
loopne
adc
or
fsubs
mov
rcrl
and
std
testl
mov
jae
cmpsl
loopne
xchg
jle
and
cli
sti
repz
mov
movsb
or
stos
subb
mov
lods
cmp
inc
mov
pop
mov
leave
cmp
cmc
sub
gs
xchg
fisubrl
dec
sub
loop
mov
adc
shlb
pop
sub
ds
mov
arpl
int3
inc
mov
stos
xor
addr16
pushf
cld
adc
shrb
popf
fwait
lret
sub
push
push
mov
and
mov
inc
ljmp
and
rclb
into
ljmp
cmp
sub
jg
pop
fcompl
es
aaa
rcl
mov
xchg
inc
fnstenv
mov
outsl
cli
jecxz
mov
mov
outsl
int3
repz
mov
js
dec
xchg
push
mov
and
mov
in
xor
mov
test
sbb
popf
jnp
sbbb
push
es
test
arpl
imul
sbb
inc
inc
cmp
pop
adc
flds
push
cmp
frstor
cmp
fcompp
stc
cwtl
jmp
mov
push
xor
sarl
inc
sbb
mov
jle
mov
or
sub
jo
jo
sahf
stc
je
js
inc
sbbl
add
filds
jno
cmpsl
push
icebp
ss
push
sub
mov
cmp
outsb
cs
push
ds
aas
sub
aad
jb
push
mov
test
les
mov
call
add
mov
dec
addr16
push
adc
cmpsl
nop
jne
jmp
fwait
ds
inc
les
clc
jl
cs
daa
mov
xorl
jge
mov
jp
test
sbb
loop
jbe
adc
stc
sub
jg
movb
popf
into
adc
fs
xchg
mov
mov
cltd
test
add
mov
scas
cmp
jo
or
cmp
push
aad
dec
mov
stc
cs
xchg
rolb
repnz
stc
xor
popf
ss
dec
pop
imul
push
lods
xor
sbb
stc
je
xchg
fidivs
dec
add
mov
xor
xchg
fmuls
iret
push
sbb
or
fs
xor
xor
pop
pop
push
test
int
sub
pop
push
adc
je
jge
adc
mov
insb
mov
mov
dec
mov
hlt
insl
xchg
ret
and
xor
adc
int
fdivr
int3
inc
xor
mov
cmpsb
repz
leave
enter
jne
scas
inc
push
shrl
push
and
or
nop
dec
repnz
cwtl
mov
add
xorl
cmpsb
lods
je
loope
aaa
cltd
dec
sub
pop
pop
pop
sbbb
push
cmp
and
inc
jge
pop
mov
sub
push
sub
lock
pop
jl
movsl
mov
mov
stos
cmpsb
ret
leave
in
dec
and
adc
push
xchg
mov
mov
ss
push
out
mov
xchg
and
std
jmp
leave
mov
xchg
test
std
pop
mov
inc
adc
adc
mov
je
inc
jns
movsb
decb
dec
sbb
in
out
lods
in
jp
loopne
sub
or
aad
or
sbb
idivl
add
adc
in
or
jge
insl
pushf
rol
mov
cmp
sbb
mov
or
cmp
sti
mov
xchg
repz
cmp
dec
pop
inc
or
loope
cmp
les
or
xor
jae
js
cwtl
movsb
jbe
mov
inc
je
and
xor
push
out
xchg
cld
negl
dec
call
ret
xor
jmp
out
popf
jnp
jno
ret
scas
push
xor
xor
mov
xchg
iret
mov
push
jge
shll
xchg
stos
test
iret
push
nop
mov
and
adc
jmp
andl
ljmp
out
leave
jo
mov
add
jmp
adc
mov
popf
mov
sub
dec
and
or
out
mov
call
or
jp
pop
sahf
cltd
xchg
push
addb
xchg
in
mov
js
jns,pn
nop
icebp
inc
int
mov
mov
mov
dec
jmp
arpl
cmpb
ror
cmp
mov
bnd
movsb
loop
mov
xorb
xor
sub
popa
jnp
mov
push
faddl
sub
cmp
dec
cmp
rcrb
ja
push
push
or
mov
test
xor
pop
outsl
xor
xchg
push
or
mov
xlat
push
xchg
fcomp
pop
aam
test
lods
daa
inc
sar
jnp
xchg
push
sub
push
ss
inc
pushf
lcall
outsl
loop
lret
ja
xchg
dec
mov
cmp
aas
and
sub
pop
rcrl
push
sub
in
lcall
and
mov
fnstcw
lcall
inc
roll
adc
or
or
jmp
aam
adc
mov
mov
les
mov
and
jge
imulb
sub
es
fidivl
cs
inc
mov
cmp
std
mov
mov
jmp
lods
sar
fisttpll
xor
nop
xchg
dec
out
sub
mov
mov
adc
dec
xor
imul
movsb
adc
pop
or
adcb
fstpl
popf
xchg
push
fcomps
adc
mov
out
xchg
pop
lcall
lods
sbb
pop
sub
sbb
jp
fs
lock
out
cld
mov
mov
mov
xlat
xchg
inc
push
fisubl
sbb
fnsave
das
xchg
sbb
or
or
fstpl
sar
lahf
fstpl
mov
mov
fdivr
clc
add
test
or
fmuls
mov
jae
inc
or
and
setno
test
adc
loope
cli
push
aaa
cmp
pop
pop
hlt
sbb
inc
cltd
pop
inc
sbb
ljmp
inc
fidivrl
es
pushl
push
pop
dec
fs
sub
imul
or
sarb
jl
xor
mov
push
popa
fs
dec
add
mov
adc
mov
imul
mov
push
cmp
add
adc
stos
sub
cld
xchg
lret
dec
ljmp
push
mov
gs
enter
fiadds
test
sbb
dec
sub
or
cs
fsubrs
mov
insb
stos
je
loopne
cmp
lods
rcrl
push
push
push
push
test
sub
mov
lahf
sub
sub
mov
faddl
sub
es
in
push
lock
push
iret
sub
add
out
out
push
lret
popf
movsl
jecxz
cmovl
lea
cs
push
push
jl
in
cmpsl
loopne
in
in
pop
mov
adc
push
dec
adc
jmp
and
jmp
mov
push
cmp
pusha
fsubs
inc
jbe
mov
loop
and
mov
xor
mov
xchg
fistpl
mov
sti
push
cmp
scas
push
pop
daa
mov
data16
cmpl
push
call
cmp
push
push
adc
sub
mov
cld
ss
pop
and
dec
xor
sub
scas
movsb
lods
mov
xchg
scas
or
mov
xchg
dec
stc
adc
scas
je
push
lods
cmpsl
dec
cmp
cmp
ss
inc
aaa
inc
testl
mov
je
jmp
hlt
out
or
in
push
out
ds
xchg
sub
out
add
jno
out
loopne
fldenv
je
sbb
sbb
cmp
cli
ficomps
sbb
push
xor
jp
pop
jbe
pop
pop
sti
xchg
xchg
clc
cmc
inc
lcall
fldt
sahf
dec
in
insb
sbb
jg
lock
xlat
sub
daa
mov
push
mov
int
je
mov
std
sub
incb
or
ss
repz
add
dec
cmp
push
mov
clc
in
incb
pop
hlt
or
cmpsl
mov
scas
xor
test
mov
mov
data16
mov
mov
insb
cmp
mov
fs
imul
inc
ret
mov
clc
or
xor
mov
sbb
xchg
roll
xor
scas
xchg
add
or
mov
sub
pop
mov
mov
scas
ficomps
addr16
movsb
mov
inc
push
jg,pn
popf
pop
pop
xchg
or
jmp
push
orl
or
lret
in
bound
or
popf
inc
ficomps
and
pop
fmulp
ficoml
mov
inc
adc
mov
mov
xorb
xchg
in
xchg
push
out
dec
add
jl
mov
add
push
aas
arpl
jae
ljmp
xor
and
outsl
lahf
mov
xchg
shll
iret
mov
pop
sbbl
loopne
leave
mov
ret
cmp
insl
fadds
stos
je
xchg
jae
cwtl
cmp
dec
add
mov
orl
sub
mov
mov
jge
mov
and
xchg
mov
mov
jle
sahf
lret
jmp
fmuls
mov
jle
xlat
sbb
push
int3
insl
cld
mov
out
icebp
cmc
add
push
pop
lea
push
jp
fwait
pop
add
mov
out
xor
fnstsw
les
pop
sbb
sbb
add
in
imul
push
cwtl
in
leave
gs
jl
addr16
cmp
aam
sbb
sbb
xchg
pushf
sarb
call
lahf
frstor
jne
sbb
or
mov
jecxz
mov
test
jnp
jge
fnstcw
fldenv
popaw
mov
xor
xor
aad
aaa
cmp
int
and
mov
subb
lods
sti
popa
mov
and
cmp
sbb
jae
aam
jns
test
jo
cmp
lds
movb
ja
adc
dec
or
and
mov
jl
in
stc
inc
jp
pop
in
clc
fcoms
xlat
push
sti
xor
js
sbb
push
iret
dec
or
neg
fistpl
push
bound
sbb
jne
scas
es
test
mov
push
int3
rcr
aas
stc
je
pop
int3
mov
jmp
pop
sbb
mov
or
enter
je
mov
or
mov
adc
int
iret
pop
scas
lahf
into
cmp
outsl
ret
inc
xor
mov
adc
movsl
stc
jo
jno
lock
xchg
rcrl
jl
filds
int
lods
nop
arpl
cmp
loope
rclb
stos
jne
scas
ss
jmp
fsubl
movsl
arpl
xor
mov
or
sbb
out
mov
ss
cmpsl
call
and
adc
je
stos
hlt
repz
call
test
inc
add
mov
mov
and
xchg
mov
mov
xchg
cmpsb
cwtl
loop
xor
mov
jmp
fwait
lret
es
inc
inc
stos
xchg
repnz
mov
std
push
sar
outsb
sbb
std
add
xchg
jg
hlt
out
mov
ss
push
ds
cwtl
test
std
xor
mov
aas
pop
xchg
dec
dec
pop
adc
rcll
xchg
pusha
scas
cmp
fisttpl
in
cmp
loopne
sbb
lret
adc
aam
fmull
mov
cmp
jns
and
cmp
lret
mov
xchg
inc
cmpsb
test
fldenv
mov
fwait
repnz
push
sbb
inc
add
cmp
sbb
cs
xlat
arpl
pop
test
mov
pop
icebp
fdivrl
inc
xchg
cmp
sbb
cmp
js
sbb
shll
nop
sbb
cmp
xchg
leave
and
cmp
or
jnp
cmp
inc
adc
pop
sahf
inc
mov
ret
or
push
sahf
mov
add
into
cltd
jmp
hlt
push
or
out
sahf
dec
or
out
mov
push
in
add
les
out
dec
lea
mov
pushf
aas
ret
clc
add
lods
fstpl
xchg
popf
lret
push
mov
push
xchg
xor
rcr
js
adc
sbb
test
cmp
adc
outsl
push
mov
out
sub
inc
cmp
rcll
mov
add
xchg
pop
or
jmp
adc
dec
sub
sub
stos
dec
enter
fnstenv
mov
imul
mov
add
xor
mov
outsb
sbb
out
mov
sbb
inc
sbb
jo
sbb
fwait
scas
adcb
sbb
xchg
test
int
pop
jl
mov
push
movsb
faddl
mov
pop
push
mov
push
fisubs
push
out
mov
jae
cmp
out
jle
push
mov
jo
add
out
outsb
leave
push
aaa
hlt
mov
mov
insl
aad
mov
push
fdivrl
xlat
xlat
lock
std
in
aas
mov
inc
js
int3
loope
lret
pop
inc
sahf
add
pushf
mov
inc
cmpl
or
xor
orb
cmc
sub
shll
jae
adc
xchg
and
jns
cmp
sbb
xchg
not
sub
cwtl
add
mov
ss
lret
arpl
jns
and
rcrl
daa
test
scas
xchg
mov
pop
fs
adc
push
lret
ret
and
orl
inc
jno
jne
call
pusha
fwait
and
in
enter
add
pop
mov
stos
pop
push
jg
movsb
xor
out
clc
cwtl
pslld
int
gs
mov
ljmp
add
ret
xor
shll
sbb
mov
dec
pop
mov
pop
jnp
push
mov
jle
push
adc
call
jns
inc
lea
std
aaa
cmpsb
daa
xor
clc
dec
emms
dec
xchg
sub
adc
sbb
xor
mov
cmpsl
xchg
push
test
enter
dec
fdivrs
or
fdivr
and
adc
and
cld
and
cli
and
or
inc
in
inc
inc
testl
sbb
jge
inc
leave
push
jae
ja
loope
lret
outsl
je
int
sub
outsb
out
mov
pop
nop
sbb
les
xor
lea
dec
cmp
sub
addr16
mov
xchg
pusha
xor
add
xor
adc
sub
mov
mov
mov
xchg
ret
aad
imul
add
xchg
pop
mov
cmp
jle
js
enter
push
stc
pop
xchg
and
push
inc
pop
aas
xor
ss
fsubs
in
pop
jne
or
push
sbb
jge
insb
daa
xchg
in
pop
push
pop
leave
roll
push
cmp
loope
adc
in
jns
push
scas
add
jns
inc
fsubs
sub
push
int3
fcoms
das
inc
scas
hlt
pop
test
inc
sarl
rolb
mov
and
cmpsl
jnp
out
mov
dec
or
fwait
loope
in
icebp
ror
shl
shrl
xchg
dec
xor
loop
sbb
jecxz
xor
jl
stos
inc
or
jns
mov
pusha
lea
outsb
jle
f2xm1
adc
mov
or
inc
or
add
movsb
and
mov
in
adc
movsl
lret
xor
call
cmp
sub
dec
lret
movsb
mov
fadds
call
rclb
out
dec
push
fsubrs
cld
sub
xchg
dec
insl
lret
lahf
add
imul
mov
xchg
jns
out
stos
ficoms
in
inc
add
add
das
push
jle
mov
fdivl
movsl
lods
push
adc
jbe
wbinvd
inc
fstpl
and
sbbl
push
fildll
mov
mov
adc
sbb
add
mov
xchg
out
mov
sub
das
fnstcw
ss
cwtl
sbb
lahf
clc
mov
mov
iret
fwait
mov
lret
cmp
sub
jge
pop
cwtl
mov
ss
andl
lret
lods
cmp
ds
add
mov
out
jb
fldenv
nop
sbb
or
pusha
mov
fstl
pop
mov
sbb
sbb
mov
jg
adc
aad
aaa
rep
loopne
lahf
adc
adc
mov
out
shlb
mov
or
inc
jge
insl
dec
dec
outsl
add
stos
cmp
mov
sbb
enter
mov
xchg
and
xchg
cmp
lock
add
mov
sub
sarl
lahf
inc
jae
adcb
std
xchg
mov
or
ljmp
lahf
xchg
mov
mov
cmp
outsb
adc
decl
sub
jge
cmp
push
lcall
cmpsl
divb
dec
dec
cmp
jle
imul
sub
fwait
jno
data16
xor
lods
push
fistps
push
jo
iret
pop
jo
out
fadds
cmp
inc
cmc
push
fwait
ds
cs
out
lea
lods
mov
sarb
loop
jl
enter
lret
cmp
movsb
popf
int3
insl
adc
or
test
add
dec
lret
hlt
fldcw
xchg
pop
pushf
mov
push
hlt
rolb
std
aaa
and
mov
cmp
xor
mov
mov
and
dec
or
push
outsb
jb
pop
js
outsb
aaa
cmpsb
repz
hlt
cmp
hlt
jge
mov
aaa
lcall
clc
fprem
pushf
ss
mov
xor
shll
lret
imul
fbstp
jno
shlb
xchg
sbb
xchg
push
sbb
lret
push
dec
push
cwtl
xchg
jb
add
xchg
mov
push
int
sbb
loope
addr16
pop
mov
jne
xchg
cmpsl
mov
loopne
mov
sub
sbb
inc
dec
xchg
test
jne
xor
inc
add
push
fstpl
push
add
inc
test
fisttpll
lea
mov
into
or
pop
lret
xor
xchg
mov
push
pop
jle
push
cli
das
xchg
mov
jl
sbb
push
cmp
push
sbb
sbb
out
into
mov
cmp
dec
lds
jle
xchg
push
shlb
push
es
movsb
cmp
xor
mov
push
mov
bswap
mov
xchg
sub
and
adc
jg
cmp
push
out
or
daa
adc
jecxz
push
and
or
scas
xchg
push
push
xchg
es
and
or
pop
shrb
addr16
sbb
cmpsl
mov
jl
jmp
mov
or
shlb
sub
push
pop
popf
jge
dec
ss
cwtl
andl
loope
mov
dec
mov
rcrb
les
addr16
into
adc
sbbl
daa
fwait
mov
iret
sbb
testb
jnp,pt
sbb
test
lods
int3
push
and
mull
arpl
mov
call
xor
push
fists
outsb
ficomps
sub
adc
pop
sbb
cmp
insl
push
daa
jbe
fwait
in
lds
fmul
jae
int
cs
sub
sbb
push
in
data16
inc
pop
lock
sbb
dec
mov
nop
inc
stos
dec
fcmovne
or
ret
loopne
lds
imul
add
push
cmpl
xor
and
inc
add
repz
jns
scas
mov
adc
arpl
xchg
pop
or
cmp
jne
int3
mov
mov
push
sahf
dec
sbb
scas
outsl
pop
inc
cmpsb
in
ss
mov
aad
xor
push
inc
push
cwtl
mov
repz
jo
push
sbb
mov
jbe
jmp
mov
fadds
mov
adc
cli
push
stos
nop
jb
mov
inc
sub
jb
mov
adc
leave
xor
enter
mov
es
imul
dec
loope
neg
ret
fdivrl
sbb
dec
lahf
pop
or
dec
sub
push
jns
push
sbb
popf
push
in
pop
inc
into
jmp
pop
xchg
cmc
pop
in
std
or
inc
out
adc
sub
push
neg
cli
notl
das
add
shlb
mov
push
dec
fmuls
vmwrite
js
in
jg
cmp
sahf
int3
pop
shll
adc
clc
inc
sbb
test
faddp
stos
dec
cmp
pop
stos
xor
sbb
sub
xchg
ficomps
addb
test
cmp
ja
mov
test
mov
ljmp
xchg
dec
cwtl
movsb
and
push
inc
sbb
pop
cmp
stos
loop
mov
out
xor
dec
pushf
jge
imul
adc
es
fsubrl
inc
aam
sbb
rorb
lods
loopne
aam
push
movsl
je
and
aad
lcall
movsl
pushf
xchg
lea
repz
lret
xrelease
cmpsl
mov
xchg
mov
out
dec
fdivr
xor
cmp
test
insb
in
add
push
mov
cmpsb
xor
mov
ja
insl
add
loop
popa
fs
hlt
stos
shl
iret
inc
adc
lock
xor
jle
xchg
add
stos
sbb
loope
xor
scas
in
cmp
push
ja
les
xchg
xchg
lahf
out
mov
mov
hlt
nop
mov
out
mov
xchg
cmpsl
notb
push
xlat
push
stos
lret
xorl
or
cmp
mov
nop
fdivs
aad
imul
xchg
sub
clc
popf
inc
xor
jns
cmpsl
sti
std
sbb
cmpsb
in
pop
xchg
jg
dec
mov
lods
cmpsl
jns
into
imul
push
inc
insl
inc
or
and
mov
scas
cld
cltd
repz
mov
stc
fs
sbb
cmp
sub
and
mov
push
dec
shll
outsb
insl
cmp
mov
in
popf
daa
jns,pt
xorl
add
sbb
popa
jmp
sub
lahf
mov
call
mov
push
or
daa
sub
in
push
jg
cld
add
add
fwait
mov
loope
ja
loopne
pop
sahf
jbe
mov
outsl
sbb
jbe
or
pop
mov
xchg
push
pushf
data16
daa
lods
mov
cmp
int
cltd
inc
xor
clc
repnz
mov
pop
dec
add
fwait
call
push
je
add
out
test
adc
mov
cmpl
pop
and
push
rcll
push
fstpl
adcb
sbb
inc
sbb
nop
jg
mov
fcmovb
mov
dec
bound
and
cmp
js
inc
cmp
sub
idivb
sahf
cld
mov
scas
add
mov
enter
dec
pop
jo
out
jmp
adc
fisubl
gs
scas
xchg
jle
and
movsl
mov
pop
mulb
sub
mov
or
add
call
dec
ret
adc
test
cmp
fwait
cmp
scas
add
mov
fnsave
jle
xchg
gs
mov
adc
jnp
stos
daa
mov
sbb
test
inc
mov
lret
and
popf
movsl
mov
and
dec
jo
mov
std
icebp
pop
push
loopne
xchg
sbb
pop
mov
mov
and
or
rcrb
mov
mov
and
sarl
cli
push
xorb
fs
cs
cmp
aas
mov
outsl
fldcw
sbb
repz
mov
sub
push
fisubs
lret
ret
mov
in
jno
or
test
flds
xchg
mov
aas
lea
fsubrs
movsl
xor
aam
and
xor
sbb
out
push
out
push
mov
inc
add
and
mov
lret
cli
pop
xchg
test
aas
clc
dec
leave
inc
xchg
jb
loope
sbb
jmp
mov
ret
mov
mov
cmp
mov
lret
dec
pop
xchg
mov
sbb
jecxz
add
repnz
mov
out
mov
dec
jg
aad
cmp
mov
inc
insl
dec
scas
pop
adc
or
push
enter
out
dec
add
rorb
dec
fcompl
xor
int
xchg
and
and
inc
out
stc
or
daa
xor
inc
mov
icebp
jge
inc
nop
push
push
dec
bound
add
dec
mov
mov
xchg
mov
int3
movsl
outsb
cmp
int3
out
cli
lret
fwait
jb
push
cmpsb
add
xchg
jae
mov
in
divl
xchg
leave
es
jne
xchg
andl
shrl
xor
mov
int3
jp
sbb
push
daa
or
ja
out
mov
je
hlt
dec
jl
fistl
inc
ficompl
jl
notb
mov
inc
pushl
aaa
or
add
add
scas
test
inc
push
dec
sub
gs
lret
push
dec
or
jmp
bound
lds
cmp
or
ret
call
rcrb
and
jno
sahf
ja
xor
rorl
ret
scas
incb
pop
fnstenv
mov
int3
test
jecxz
pop
jo
or
or
jmp
sarb
outsb
ficoml
ret
lret
cmpsb
xchg
jmp
fnstenv
pop
push
pushf
sbb
dec
das
fiaddl
add
pop
mov
stc
call
or
pop
dec
shrb
out
loop
data16
mov
adcb
repz
cmpsl
fnsave
stc
scas
xchg
xchg
mov
hlt
push
or
fisubrs
dec
jnp
lds
mov
pop
xchg
mov
mov
cltd
test
cmpsb
dec
adc
lret
jmp
inc
mov
sbb
mov
test
fldt
repz
sbb
stos
adc
es
pushf
dec
push
aam
xor
test
inc
push
les
in
jbe
jg
leave
mov
push
lcall
loop
repnz
aas
into
clc
icebp
cmp
imul
out
xor
xor
push
sbb
and
sbb
ja
adcb
pop
arpl
cli
jecxz
cmp
sbb
int
cli
push
cmp
jmp
pop
imul
loop
inc
pop
fisttps
fwait
outsl
aas
adc
push
fistpll
jg
xchg
push
mov
or
or
nop
js
repnz
jns
ja
cwtd
push
and
cmp
push
fidivs
pop
or
add
jne
dec
and
adc
pop
aam
xor
sti
mov
dec
cwtl
hlt
daa
push
scas
inc
jp
jb
cmpsl
mov
mov
fildl
sbb
xchg
imul
lock
jnp
in
ud1
mov
mov
nop
push
cmp
pop
mov
and
cmpsb
sbb
fidivs
jg
nop
fidivs
into
add
ljmp
add
and
xchg
jb
dec
pop
in
xlat
push
sbbl
fistpll
pushaw
xor
jg
testb
mov
xchg
dec
push
push
stc
rcrb
rcr
or
imul
sub
and
into
dec
pop
cmpsl
and
ret
insl
aaa
cld
pop
ds
sub
mov
lret
pop
add
or
test
mov
mov
insl
inc
adc
clc
lds
adc
cmc
int
loope
out
js
je
inc
pushw
leave
imul
ss
and
push
jb
xor
jmp
dec
ja
mov
into
jae
fdivrs
sti
dec
je
mov
lods
mov
or
out
xor
mov
and
fbld
jae
jno
movsb
cmp
xchg
cmpsl
stc
and
inc
cltd
adc
push
and
das
push
mov
orb
shrb
pop
gs
push
push
or
jnp
lock
movsb
mov
cmpsb
fisttpll
push
les
pop
sub
aad
push
and
aam
push
js
in
fistpll
pop
mov
add
daa
cmp
mov
inc
fwait
mov
sbb
mov
pop
std
inc
imul
loop
ret
mov
icebp
aam
int
and
mov
mov
add
push
inc
aam
mov
bound
pop
adc
insl
test
out
lods
mov
mov
dec
in
xlat
mov
inc
pop
lods
pusha
fcoml
lret
inc
xchg
loop
jle
cmp
sub
mov
xchg
xchg
mov
or
xchg
std
jecxz
dec
inc
std
dec
xchg
mov
mov
lods
xor
mov
outsl
into
int3
cmpsb
jg
mov
dec
cmp
sbb
subb
test
insl
psubb
or
js
dec
jbe
fwait
or
or
mov
addr16
inc
lods
shl
scas
gs
addr16
mov
sbb
daa
arpl
push
lea
push
cltd
or
xchg
fwait
and
repnz
push
xor
jno
sbb
pop
push
push
and
jns
jp
mov
orb
outsb
scas
xor
and
sub
add
jae
ficomps
mov
xchg
pop
sub
fiaddl
xor
pop
fsts
push
bound
xchg
test
addl
dec
test
xor
and
push
pop
leave
mul
fisubs
xor
dec
jo
fisubrl
out
js
sbb
mov
xor
gs
fcmovnb
mov
xchg
shl
push
in
es
out
xor
in
dec
adc
jecxz
sbbb
fimuls
sub
pusha
mov
aaa
jp
jne
in
pop
mov
movsl
stos
jmp
sbb
pop
jne
mov
mov
or
ja
mov
stos
mov
int3
mov
test
mov
xorb
mov
out
mov
pusha
lds
push
and
xor
cmp
xor
repz
or
pusha
jg
dec
fstpl
out
lea
xchg
xorb
cmc
roll
pop
sbb
movl
pushf
pop
lret
lods
dec
pop
sbb
mov
jp
addr16
pop
lea
xor
inc
aam
and
jmp
lret
xchg
cld
stc
sbb
inc
stc
mov
testl
cmp
in
lods
cmp
daa
push
dec
pop
dec
dec
or
cwtl
lcall
jle
cmp
fsub
or
sub
push
fsubl
jmp
rclb
rorl
outsl
aas
mov
hlt
mov
lods
outsb
rcrb
ret
push
cmp
lods
xor
xlat
stc
sub
sub
loope
and
adc
pop
jnp
andb
mov
out
cs
shrl
push
andl
in
jg
and
sub
bswap
push
push
aas
sub
stc
lock
jo
mov
fsubrs
mov
mov
ss
aas
pop
cmpsb
aaa
xor
out
pop
inc
add
push
test
test
pusha
jae
sbb
jecxz
aaa
push
add
jg
psrld
cld
lcall
jmp
inc
jmp
jle
mov
fldenv
movsb
les
ss
daa
sarb
or
xchg
dec
int3
jbe
dec
pop
out
adc
cwtl
ljmp
dec
jb
sub
aam
sbb
xor
jbe
fimuls
cli
xchg
mov
clc
pop
movsl
fidivs
cmpsb
test
jg
push
sti
rcr
or
subl
test
jge
cmp
call
lea
cld
xor
leave
pop
bsr
dec
jb
or
jae
mov
dec
scas
stos
std
adc
xor
push
cltd
scas
pop
into
lret
and
jmp
stc
push
jnp
inc
mov
cmp
test
outsb
js
jnp
add
bound
xor
fdivrl
rcrb
add
int3
out
in
clc
inc
pop
and
adc
rcrb
mov
lods
arpl
push
fcmovnb
inc
sarb
cmpsb
stos
push
mov
loop
lea
mov
cld
cmp
and
push
push
xchg
push
test
pop
push
outsl
inc
and
add
das
stos
dec
and
cmp
push
push
shlb
and
movsb
mov
shl
jo
add
test
jae
push
imul
jle
ljmp
in
outsl
lret
shl
jae
into
mov
mov
loop
lahf
outsl
popa
leave
insb
xor
or
adc
sbb
sub
out
jo
xor
mov
aaa
subb
mov
imul
outsb
mov
int3
jl
rorl
inc
out
in
daa
cmp
xchg
xlat
lret
push
xchg
inc
aaa
pop
and
hlt
push
add
sbb
jp
je
cmpsb
cltd
lock
sbb
fidivrs
subb
je
cmp
add
mov
rcr
adc
jbe
mov
xor
iret
test
dec
mov
push
addr16
sub
add
cmp
add
lret
fistl
cmp
js
jecxz
inc
sahf
xchg
push
dec
das
lea
in
cmp
test
ss
jmp
incb
mov
xchg
push
popfw
fcomps
shrb
jl
inc
adc
inc
inc
push
or
mov
jnp
and
sub
cwtl
add
loopne
cmpsl
mov
xlat
mov
arpl
mov
je
pop
ds
rclb
and
cmp
xchg
jmp
jbe
and
push
in
lret
adc
jo
out
ficoms
cmc
into
dec
out
inc
or
arpl
daa
scas
add
pop
enter
in
jno
dec
inc
mov
xchg
adc
aaa
js
dec
call
mov
inc
outsl
mov
rcl
adc
lcall
mov
xchg
push
mov
pop
cmp
sub
out
iret
movsbl
filds
adc
fcoml
add
fildll
bound
test
movsl
or
jo
add
or
push
add
loope
out
mov
xchg
loop
mov
mov
inc
imul
and
sbb
fwait
sti
js
xchg
insl
pop
xchg
jmp
repz
fnstenv
pop
or
das
jnp
std
mov
arpl
fists
insl
call
leave
cwtl
call
faddl
mov
dec
fst
rcrl
loopne
xchg
xchg
sub
or
ficoml
push
push
bound
mov
mov
add
jle
daa
fnstenv
test
roll
fistps
or
scas
mov
rorl
je
ss
fdivs
mov
pop
add
push
inc
rcrb
dec
mov
stos
sbb
lods
xor
addb
idiv
cmp
daa
push
arpl
xlat
mov
test
add
xchg
and
sahf
iret
or
lahf
hlt
dec
lods
shlb
xchg
test
cli
cmpl
arpl
sub
fcompl
sahf
push
dec
call
subb
mov
add
dec
jge
mov
daa
adcb
cmpsl
bndldx
cmp
enter
inc
addr16
inc
mov
or
push
adc
fmulp
imul
cmp
mov
sbb
insl
mov
aas
fwait
je
insb
mov
hlt
add
popa
je
xchg
aad
aaa
and
dec
mov
out
push
dec
cmp
icebp
scas
neg
ds
nop
imulb
shrb
outsb
sbb
mov
addr16
push
push
insl
fisttps
sti
mov
int3
call
ss
out
out
cmp
mov
leave
movq
inc
cwtl
jle
pop
in
cmp
sbb
xchg
mov
push
mov
cmpsl
daa
sub
cmovg
xchg
in
gs
sub
and
sbb
add
and
lret
fldcw
inc
mov
ljmp
out
mov
mov
pop
sbb
cmp
pop
mov
pop
outsl
sbb
pop
xchg
test
iret
push
das
and
int
into
cmpsl
repnz
fdivrs
push
push
mov
lods
lahf
or
sbb
lds
pop
hlt
dec
pushf
shrb
xchg
cmp
push
cmc
in
not
xor
stos
sbb
jno
push
cmpsl
cmp
aad
dec
xchg
jg
xchg
push
cwtl
cltd
pushl
push
inc
int
push
jmp
jns
cmp
xor
popf
push
xchg
dec
mov
add
mov
xor
pop
mov
in
and
call
mov
int3
fbld
sub
add
pop
cmp
decb
mov
insb
fs
inc
mov
push
mov
out
adc
mov
cmc
ret
inc
mov
adc
push
mov
nop
fs
loopne
rcrl
cmp
cli
sbb
push
mov
sbb
test
xchg
std
cmpsb
fsts
jnp
push
mov
fistps
mov
in
pop
ror
xchg
dec
bound
je
pop
mov
xor
leave
movsb
inc
cwtl
icebp
aas
or
sbb
in
xchg
stc
xchg
adc
adc
or
jb
or
mov
inc
mov
loop
repz
cs
mov
into
cwtl
popa
adc
in
or
dec
inc
mov
shl
cs
outsb
fsts
sub
cmp
pushf
les
push
mov
enter
testl
aad
cmp
and
push
mov
vmread
cld
sub
roll
stos
ds
movb
outsl
rcrl
cmp
mov
test
jne
cmp
dec
xor
mov
arpl
popf
ret
lret
push
ds
fnstcw
ficomps
sbb
or
scas
lods
fdiv
les
leave
je
sub
pop
jp
pop
and
mov
jg
jne
test
movsl
les
repnz
getsec
sti
jo
xor
fnstsw
lret
mov
loopne
imul
xchg
cmc
out
cmp
xlat
lods
adc
and
xchg
xor
int3
mov
mov
clc
std
sbb
xchg
dec
pop
cmp
lea
adc
dec
movsb
mov
mov
out
mov
pushf
sti
xor
idivl
outsb
lds
push
call
xchg
leave
cmp
ficompl
mov
xchg
imul
sbb
rcll
mov
ljmp
test
std
mov
and
ret
mov
lret
outsb
sbb
out
jmp
scas
loope
arpl
dec
leave
push
cmp
outsb
mov
imul
and
sbb
cmp
jae
jge
dec
fiadds
repz
out
out
mov
push
rol
int
jle
jmp
inc
out
push
mov
sbb
jl
jle
sbbb
mov
test
xchg
mov
aaa
into
lret
in
push
lods
jecxz
mov
jne
pop
mov
add
mov
pop
pop
push
sub
fwait
addr16
xchg
and
mov
std
cltd
std
lret
jg
inc
faddp
pop
pop
and
test
lret
pop
addr16
stos
dec
add
jge
and
add
out
inc
fwait
mov
adc
scas
pop
bound
jle
jmp
sbb
out
cmp
jmp
repnz
xchg
in
and
push
lret
pop
jl
leave
lds
cmp
or
scas
dec
sub
into
mov
push
roll
repnz
clc
cmpsb
xchg
cli
sti
dec
add
or
lahf
and
mov
jg
pop
cmp
dec
or
pusha
jne
mov
neg
adc
in
mov
test
mov
xor
and
inc
add
xor
adc
sti
cmp
pop
sbb
xor
lods
ss
stos
pushf
xor
pop
inc
pop
or
pop
outsl
test
pop
rorl
in
testl
xlat
std
in
pusha
cmpsl
int3
cli
inc
bound
dec
mov
xchg
jne
lea
push
movsb
popf
adc
jae
push
roll
sub
jp
test
sbb
jns
shll
or
and
cmp
push
repz
adc
xchg
les
cmp
popa
xor
sahf
int
push
loopne
mov
shlb
cmp
and
out
scas
mov
lahf
icebp
dec
aaa
and
fcoml
lock
or
push
aam
xchg
xor
adc
out
add
dec
mov
add
sub
pusha
pop
mov
pusha
push
fldl
stc
add
mov
xchg
dec
hlt
xchg
roll
out
in
inc
in
or
jge
cmp
popa
adc
xor
testb
test
out
dec
rcl
push
dec
test
dec
mov
inc
xor
add
mov
xor
jns
cmc
lcall
movsl
push
inc
lock
push
and
mov
loopne
aas
cmc
out
repz
inc
bound
neg
outsb
cwtl
mov
xchg
jecxz
pop
and
aas
xor
push
pop
push
dec
or
sub
aad
xor
cmpsl
mov
mov
xor
hlt
dec
mov
push
sbb
and
pop
in
xor
sbb
gs
fiaddl
fdivrl
inc
out
scas
bound
iret
aas
les
cld
js
mov
inc
rcr
mov
negl
sti
xlat
jg
jg
fnstenv
lcall
int3
pop
mov
mov
xchg
and
adc
test
cs
mov
or
inc
sbb
and
mov
mov
push
pop
orb
xchg
mov
push
arpl
adc
mov
cmc
mov
pop
shll
jl
add
push
cwtl
mov
mov
or
sbb
and
fidivs
daa
add
test
sbb
aas
jmp
sub
out
mov
inc
mov
sub
pop
aas
faddl
mov
sub
push
xchg
xor
lcall
arpl
pop
sub
and
in
scas
mov
aam
and
movsb
mov
xor
jmp
gs
fistpl
pop
jnp
ljmp
out
xchg
add
shrl
xor
and
sub
push
and
testl
sbb
push
push
js
xor
adc
incl
int3
mov
add
mov
mov
xor
mov
pop
cltd
outsl
fwait
outsb
cmpsb
push
and
sub
pusha
arpl
sbb
stos
push
pusha
adcb
fisttps
das
inc
mov
lods
mov
xor
xchg
xchg
cld
mov
test
mov
pop
imul
lds
mov
pop
jns
imul
test
ja
xor
jle
pop
mov
dec
mov
fadds
xchg
dec
cmpsl
ret
adc
stc
mov
adc
xchg
cmp
inc
dec
adc
mov
cmp
test
sbb
cmp
add
push
mov
mov
stos
imul
pop
xchg
xor
or
xchg
inc
shrl
push
add
and
pop
cmp
sbb
stc
pop
xchg
sbb
in
add
lcall
xchg
sbb
loopne
mov
leave
push
and
or
movsl
xor
xchg
pop
fwait
stos
mov
add
outsb
xor
lock
xchg
insl
jecxz
xor
fmull
loopne
call
loopne
cltd
cmp
lods
jae
inc
jg
aad
mov
divl
add
mov
sub
dec
xor
ljmp
dec
cmpsl
xlat
pop
js
xor
mov
mov
daa
icebp
jge
ja
je
pop
addl
mov
out
sbb
push
jbe
cmc
or
les
scas
or
mov
data16
cld
xlat
sub
inc
xchg
push
lret
mov
inc
inc
cmp
in
xor
gs
push
add
jl
mov
sub
out
fcoml
lock
arpl
jnp
repz
ljmp
mov
subl
push
mov
adc
cld
mov
mov
cld
add
outsb
sbb
arpl
out
and
mov
push
sbb
scas
mov
cmp
lods
into
inc
gs
cmp
xchg
sar
aad
nop
loope
fildll
cmp
mov
fxch
ja
sahf
pop
jmp
lock
in
std
sarb
xorl
jg
test
movsb
cmc
lds
push
pop
push
mov
subl
dec
movl
pop
shlb
sbb
clc
ret
aad
loopne
mov
xor
nop
mov
mov
psubsw
dec
xor
inc
or
dec
inc
std
insb
mov
fsts
dec
inc
cmpb
dec
cmp
andb
stos
and
pusha
push
inc
mov
inc
push
movsl
jp
sbb
std
jbe
repz
xor
into
pusha
push
lcall
and
mov
in
add
stos
pop
pop
lock
sbb
dec
pop
test
jge
mov
fisttps
jg
daa
xor
pusha
jo
push
inc
hlt
testb
cmp
xchg
xchg
inc
jno
mov
xor
inc
cmc
sbb
or
ret
xchg
je
fiadds
mov
cmp
mov
push
mov
daa
push
xchg
rorl
fwait
sbb
scas
push
cli
sub
push
cmpsl
pop
lds
jle
pop
rcl
mov
insb
add
imul
popf
xchg
es
pop
fcomip
add
add
repz
fistpl
sahf
std
mov
or
adc
popa
ds
nop
jns
mov
pop
mov
mov
lods
jmp
cmp
push
clc
push
push
sti
add
push
xor
add
aaa
pop
stos
das
jle
xor
fbld
daa
push
adc
in
lahf
mov
call
inc
inc
dec
pop
enter
add
sbb
xchg
cmp
pop
mov
int3
inc
mov
add
jae
jp
push
cli
into
fwait
push
lea
jecxz
cmp
add
adc
das
clc
in
popa
sbb
add
or
imul
ret
adc
ljmp
insb
dec
add
sub
call
cld
fnstsw
push
sbb
ret
cmc
mov
push
ljmp
sbb
dec
jmp
sub
je
inc
push
sbb
add
fimuls
mov
cmpsl
adc
in
push
push
stc
sub
or
dec
cmp
xchg
out
shll
jl
xchg
push
dec
dec
imul
pcmpgtd
inc
in
mov
loopne
lret
inc
xor
jmp
push
push
hlt
jno
dec
xor
mov
adc
imul
sti
pop
adc
pop
in
mov
inc
lret
js
iret
adcb
loop
int3
add
cltd
adc
test
dec
dec
lock
setg
pop
jmp
sarl
imul
fdivs
mov
ret
dec
stc
aam
jecxz
adc
inc
lods
dec
xor
dec
into
cs
push
mov
jae
adc
cltd
or
es
stos
dec
push
enter
xchg
mov
xchg
fucomp
jns
and
mov
or
fldt
stc
mov
push
cs
ret
cs
fstl
orb
gs
ljmp
pop
and
lock
aad
push
test
cwtl
jns
lods
dec
mov
daa
jb
mov
test
xlat
inc
pop
imul
cmp
push
sub
mov
cmp
fstpt
popf
mov
inc
test
mov
and
jmp
or
pop
outsb
andb
sbb
sub
cmp
xchg
mov
dec
lods
aas
ret
jo
xor
outsb
adc
nop
xor
gs
cmp
lock
cmp
ljmp
jbe
pop
sub
cmc
cmpsb
pop
fidivrs
js
ljmp
add
repz
sub
test
mov
repnz
subl
int3
bound
mov
ret
mov
nop
push
sti
jmp
test
mov
lea
pop
fadds
or
flds
mov
test
fsubrs
pop
xchg
inc
mov
outsb
outsl
out
stos
in
or
sbb
imul
in
test
dec
pop
call
xor
or
outsl
xor
pop
int
sar
inc
adc
lahf
arpl
repz
lods
xor
aad
out
mov
inc
lahf
inc
pop
repz
insl
mov
xchg
daa
sub
into
ja
in
push
pop
and
xchg
dec
sbb
push
jae
sbb
push
add
mov
or
jo
mov
mov
sbb
push
lea
and
mov
or
aaa
mov
xchg
rcrb
mov
lret
dec
in
cmp
loop
ss
out
cmc
test
fildll
mov
mov
inc
shrb
imul
pop
jo
push
dec
inc
push
imul
xor
sbb
sub
repnz
push
inc
cmpsl
lret
sub
inc
mov
std
into
je
mov
xchg
popl
jno
stos
cmc
popa
and
cs
jne
pop
mov
mov
jmp
pushf
cld
js
pop
ss
insl
test
inc
adc
repz
lret
insb
sbb
cmpsl
mov
orb
dec
cwtl
ret
push
xchg
push
hlt
sahf
pop
das
mov
test
cmp
jbe
push
mov
scas
jb
outsl
mov
or
mov
xlat
push
ss
add
jb
jae
pusha
ficoms
testl
ja
clc
sub
sub
xchg
mov
add
shlb
stos
int
xchg
insb
dec
mov
lods
jae
mov
push
sbb
out
sbb
sbb
roll
push
jmp
sbb
sti
loope
dec
js
inc
out
das
js
mov
jbe
mov
push
push
mov
sbb
jae
or
inc
int3
mov
xchg
imul
ret
outsb
sub
js
ficompl
andl
adc
xlat
inc
pop
mov
mov
mov
lret
inc
or
shrl
hlt
loope
pop
xor
mov
cli
insb
jae
mov
insb
mov
and
dec
or
popf
and
jnp
pop
inc
sbb
jecxz
push
call
mov
mov
insb
mov
pop
shl
ret
xlat
jbe
and
add
sarb
pop
mov
jno
inc
mov
loopne
cmp
fs
cmpsl
cmpl
push
pop
sbb
add
inc
mov
mov
and
jns
adc
dec
cmpsb
xchg
dec
addb
clc
inc
sbb
fstpl
js
into
jns
or
inc
dec
dec
adc
jbe
add
sbbb
sub
fsubs
and
push
sub
dec
in
jmp
insl
mov
lods
and
nop
lock
sti
mov
mov
addr16
rcl
lret
add
mov
or
stos
into
movsb
cmp
popa
popa
add
jo
xor
andl
imul
adc
filds
mov
fld
pop
scas
pop
loope
pop
xchg
push
dec
in
jbe
sub
push
adc
jno
push
ja
mov
and
inc
xlat
mov
xchg
adc
xchg
in
imul
mov
loopne
push
push
inc
imul
or
and
push
jge
push
scas
xor
data16
js
cmp
leave
push
nop
xor
mov
xchg
mov
fs
test
cmp
xlat
or
lea
aam
std
repnz
rcrl
pusha
mov
mov
andl
lret
movsb
xchg
add
pop
loop
add
pusha
mov
mov
lcall
sub
iret
lcall
lret
dec
inc
push
sbb
or
movsb
sbb
adc
mov
pop
adc
lds
and
popa
in
rorb
movsb
mov
inc
dec
sarl
dec
inc
xlat
mov
mov
pop
and
add
sbb
xor
mov
sbb
pushf
xor
pop
mov
xchg
repnz
push
add
fucomip
pop
imul
mov
fdiv
mov
cmpsb
jecxz
mov
xor
fs
lcall
mov
push
ljmp
movsl
xchg
dec
xchg
mov
shr
sti
ret
cmp
sbb
cmpsb
or
aam
testb
jp
cmc
rcrb
std
mov
jl
mov
mov
data16
loop
clc
sarb
aad
inc
xchg
pop
mov
xchg
imull
dec
push
cmpl
sub
arpl
mov
sbb
hlt
fistps
pop
jmp
mov
pop
sub
pop
pop
push
jl
gs
mov
nop
decb
mov
nop
jo
inc
cli
push
imul
les
mov
adc
jp
stos
addr16
pop
jno
jb
popa
xor
mov
xor
sbb
dec
aad
or
out
push
push
lea
shr
pop
add
cmp
xchg
cli
jmp
xor
xlat
shl
fcmove
adc
lods
ret
mov
mov
push
sub
push
inc
cmp
mov
xor
out
cmp
pushf
insl
push
dec
pop
push
jo
push
outsb
push
jns
lret
daa
add
ljmp
fidivrs
sub
fsubrl
mov
faddl
xchg
mov
sti
fwait
subl
xchg
push
leave
pop
push
and
mov
int3
out
or
mov
dec
or
outsb
lret
mov
pop
mov
das
push
cmp
cltd
adc
mov
arpl
add
popf
inc
jecxz
into
xlat
sub
mov
in
movsl
or
and
leave
mov
pop
dec
pop
sub
movsl
shl
mov
loopne
addr16
cmc
cmp
lods
setb
jmp
mov
and
jge
sub
add
addr16
scas
dec
scas
adc
push
into
push
inc
adc
mov
lods
aam
iret
mov
and
sub
nop
pushf
add
and
add
cmp
out
sbb
cwtl
sti
xlat
jnp
push
aaa
bound
aam
loop
pop
enter
cmp
sahf
or
idivl
adc
push
fidivrl
repnz
add
dec
les
std
dec
daa
outsl
arpl
adc
outsl
out
mov
inc
ds
aaa
out
mov
and
mov
arpl
sub
jne
and
bound
fmuls
aas
push
mov
cmpsl
cli
adc
fwait
mov
pop
movsb
or
and
cmp
arpl
movsl
repnz
push
and
sbb
test
cmp
and
jl
insb
xchg
adc
mov
push
pop
les
sbb
add
fxch
xchg
mov
test
loop
in
inc
mov
mov
sbb
cmp
hlt
mov
add
shr
pop
in
inc
push
vpslld
mov
push
jns
add
fbstp
mov
xchg
jecxz
jl
loop
mov
hlt
data16
loope
jno
jle
bound
mov
fsubrl
fbstp
insb
loop
mov
push
fnstcw
inc
inc
aam
push
inc
std
push
gs
jns
lods
call
into
out
xchg
and
fst
test
pop
push
and
cmp
pop
lock
mov
mov
jmp
lahf
arpl
pop
pop
stos
and
ds
int
mov
cmp
pop
mov
push
imul
dec
push
xchg
shrb
pop
hlt
or
mov
dec
mov
push
xchg
xor
ja
push
dec
in
cmpsb
loopne
out
mov
adc
or
cmp
mov
push
out
sti
sarb
mov
lods
aas
das
scas
jae
call
pop
mov
pusha
push
mov
xchg
sub
out
cmp
cmp
sahf
xchg
mov
or
ficompl
mov
cmp
add
mov
cltd
push
push
orb
cmp
outsb
xlat
inc
lahf
cmp
cld
add
mov
sub
rcrl
add
movsb
push
inc
std
pop
ja
loope
mov
or
es
insb
fnstsw
push
stos
jnp
jae
inc
outsl
mov
pop
jmp
pusha
and
xchg
arpl
ljmp
std
dec
xchg
imul
lods
shrb
test
jle
inc
sub
mov
imul
outsl
stos
ss
ja
dec
push
insl
sub
rolb
pop
jmp
fcmovne
sub
mov
push
repnz
fs
ret
outsl
cmp
push
sbbl
aaa
lods
jnp
mov
push
pop
fsub
lahf
pushf
push
cmp
lds
setne
xchg
jl
mov
repz
xchg
jbe
xor
outsl
jno
loopne
dec
add
loopne
mov
jl
sub
and
lahf
loope
push
psrad
setle
xorb
pop
fiaddl
outsl
add
ss
lret
out
and
test
push
test
dec
insl
lods
cmc
scas
call
lea
xor
sub
mov
or
sbb
mov
jns
adc
lods
xor
or
adc
cs
mov
adc
xor
push
loope
subb
aam
ss
lea
iret
fidivrl
pop
repz
mov
jmp
xchg
roll
lret
loop
mov
in
ficomps
ja
in
dec
jl
jno
pop
nop
xchg
and
stos
sbb
js
sbb
test
lret
adc
clc
js
xchg
or
pop
cmp
cmpsl
or
mov
test
jmp
inc
adc
daa
fdivrl
xchg
mov
cs
xchg
ficoml
repnz
in
sub
dec
or
add
popa
cmp
movsb
fs
push
aaa
pop
aad
fcmovb
out
movq
mov
mov
inc
mov
or
les
cwtl
adcb
outsb
shr
mov
lea
insb
xor
mov
cld
and
lods
push
add
dec
xchg
jns
lds
adc
sbb
mov
in
mov
xchg
movsb
and
lods
sbb
addr16
sub
fwait
inc
xor
jns
mov
cmp
xchg
adc
into
inc
out
lret
shll
fcoml
addr16
mov
xor
xchg
adc
out
rcr
pop
xor
mov
std
mov
jle
push
pusha
inc
mov
mov
mov
mov
fsubrp
cmp
jl
insl
mov
push
cmp
inc
add
cmc
inc
jnp
cli
ds
cmp
sbb
pusha
mov
cld
xchg
aam
mov
mov
push
adc
roll
ds
mov
xchg
mov
mov
aam
sbb
inc
fdivs
inc
shll
mov
xchg
dec
dec
in
pop
pop
adc
hlt
outsl
jne
jne
mov
cwtl
mov
iret
jg
mov
stos
adc
aaa
sti
push
add
jnp
dec
cltd
pop
mov
into
je
loope
arpl
mov
mov
cmp
into
jne
pop
andl
sarb
dec
testl
pop
mov
jbe
aad
je
jp
pop
mov
jp
ljmp
jnp
push
lret
mov
popa
scas
aas
cmp
pop
loope
dec
inc
adc
rorb
lock
xor
lret
dec
push
stos
jl
cltd
stc
jg
dec
fsubrp
leave
leave
movsb
push
in
stos
xchg
xchg
jns
push
push
lcall
adcb
xchg
mov
cmp
lods
scas
xor
movsb
sub
js
jb
fld
jb
and
bound
xchg
jne
cmpsl
mov
aas
dec
movsl
loopne
stc
inc
rolb
orl
mov
adc
jmp
inc
nop
out
int
das
popa
mov
mov
int
push
or
popf
cmp
or
push
pop
pop
xchg
mov
xor
cmp
pop
dec
or
aam
mov
shlb
in
or
lcall
mov
in
mov
sub
in
sub
mov
ret
or
mov
mov
pop
sub
or
inc
aam
sbb
sub
cs
push
xor
out
sub
aas
cld
or
leave
cli
ret
and
es
popf
xor
fimull
movsl
jmp
movsb
scas
into
mov
xchg
xchg
dec
xor
mov
mov
mov
cmc
aas
add
push
jl
dec
dec
inc
mov
ljmp
xor
dec
mov
stos
sub
sysret
adc
fstpl
xor
add
cmp
pop
mov
adc
xchg
cld
or
fxch
hlt
fs
shlb
lahf
sub
pusha
test
cmpsl
pop
cmc
mov
cmp
push
lea
push
pop
adc
rcrl
mov
cmp
shr
push
addr16
jmp
imul
sub
xor
sbb
jb
shrb
pusha
cwtl
stos
out
out
fisttps
call
add
fmul
mov
outsb
sub
xor
sub
sub
cmp
daa
sbb
mov
cmp
movnti
popa
ljmp
xchg
inc
mov
in
jmp
lret
mov
and
fwait
add
adc
aam
dec
sub
jle
aas
inc
rorb
test
iret
sbb
and
mov
mov
add
sbb
shl
stc
and
loopne
mov
ja
push
pop
xor
sub
scas
ficompl
ja
stos
ffree
mov
mov
inc
and
ja
cmp
loopne
or
push
xchg
cltd
and
sub
imul
mov
scas
daa
and
add
mov
push
xchg
stos
adc
fmull
repz
ret
rolb
test
shlb
ret
pop
repz
iret
add
sbb
push
rcr
sub
xchg
push
insl
scas
mov
dec
mov
out
hlt
fwait
popa
mov
cmp
fcmovbe
and
xchg
in
rorb
out
mov
dec
fldl
outsb
cmpsl
mov
in
out
bts
mov
out
popa
inc
arpl
push
lods
fdivp
in
mov
idivb
dec
sub
pop
dec
test
add
push
jbe
push
ja
xchg
push
push
mov
xor
repz
jp
out
sbb
rcr
aad
pop
js
push
ret
in
int3
adc
popf
mov
jmp
imulb
fwait
lret
xor
test
pusha
and
ret
pop
int
addb
pop
jno
sahf
stos
or
lea
ljmp
ret
mov
out
mov
jno
pop
fcmovu
jg
mov
push
push
sbb
pop
pop
pop
xchg
cltd
jnp
call
dec
pusha
scas
outsb
jge
aam
inc
mov
cmp
mov
test
xlat
or
mov
lea
mov
sub
sbb
sbb
xchg
push
mov
mov
push
iret
push
mov
mov
xchg
imul
stc
lret
icebp
add
pop
mov
sbb
push
push
sbbl
lods
cltd
rorl
push
fnstsw
arpl
loop
pop
ja
fidivrs
adc
pop
push
out
pop
sbb
hlt
jnp
dec
ljmp
in
pop
mov
insl
cmp
push
and
iret
cmp
lret
test
cli
pop
arpl
stos
or
push
sub
mov
fistpl
ficoms
test
adc
sub
xlat
add
inc
lods
repnz
movsb
or
jnp
das
cmp
sbb
std
not
mov
mov
je
mov
ficoml
subb
stc
xchg
fisttps
or
in
adc
ret
sbb
xchg
pop
and
mov
fldl
pop
dec
dec
ss
popa
dec
pop
inc
sbb
pop
sub
int
add
imul
lock
push
mov
addl
mov
mov
loope
rclb
call
mov
push
aas
or
cli
adc
insl
inc
popa
sarl
push
fisttpll
popa
inc
popl
cs
add
imul
add
cmp
negb
popa
sbb
add
jp
pop
dec
add
dec
or
fimull
push
xor
dec
and
xchg
ja
cltd
ss
rdtsc
aas
pushw
mov
fldt
aaa
xchg
sbb
xchg
aaa
push
fwait
cwtl
cld
es
mov
mov
sbb
ret
jle
js
adc
jo
test
adc
xchg
xchg
test
insb
push
cmp
jnp
das
sahf
push
sbb
mov
adc
addr16
mov
popa
fdivs
push
mov
test
ss
dec
and
sub
mov
xlat
jle
push
pop
inc
call
setae
out
aas
sahf
dec
push
loopne
mov
adc
shlb
jl
out
pop
addr16
add
rorb
pop
imul
add
sub
ss
mov
ret
sbb
repnz
jbe
inc
pusha
rorl
sub
incb
sub
sub
pushf
rcl
jle
lea
out
or
sbb
sub
cmpsl
mov
xorb
js
cmpsl
sub
xchg
xchg
mov
das
sbb
mov
mov
in
push
cmpsb
aad
cmp
push
cmp
xor
das
sti
pop
sbbb
cmp
loope
mov
pop
mov
jns
and
lods
std
lds
dec
in
fs
xchg
add
xor
shrb
mov
jmp
dec
lock
sub
rcrl
out
push
mov
movsl
test
clc
sahf
fwait
sub
jge
mov
xchg
fcoml
xchg
insl
xchg
rorl
int3
enter
addr16
les
jmp
add
inc
cmp
mov
xor
dec
lret
icebp
into
les
or
cwtl
mov
scas
test
pop
add
cld
test
sarl
jl
jae
mov
lods
pusha
ljmp
std
cmp
xchg
xchg
mov
push
out
or
jnp
rclb
inc
imulb
outsl
dec
jmp
push
jae
ljmp
sbb
add
shrl
inc
cli
mov
popa
adc
sbb
sbb
cli
cld
pop
sub
out
lods
xor
push
mov
int3
sub
mov
lods
dec
popl
fwait
ret
adc
and
xchg
jle
lods
movsl
aam
scas
movsb
lock
cmp
mov
sub
test
sbb
dec
pusha
adc
repz
fnstsw
fcomps
fdivrl
jl
inc
pop
subb
jo
xchg
jecxz
adc
add
sbb
add
mov
sub
fsubs
xchg
imul
push
shrb
insl
jns
fcomps
outsl
and
fmull
adc
shrb
jp
jg
pop
sub
jb
daa
xchg
inc
imulb
insb
leave
cmc
mov
popf
add
test
sbb
cwtl
testl
pop
leave
hlt
sbb
sbb
pop
mov
mov
addr16
out
and
call
div
push
inc
push
mov
sar
cmc
xchg
and
out
mov
push
jae
xor
pop
sbb
pop
jecxz
mov
xor
or
lahf
mov
and
mov
loopne
fimuls
pop
fstl
xor
in
shrl
std
sub
jg
sbb
cmovg
mov
nop
sbb
fwait
popf
cmp
ds
lods
xchg
aam
dec
push
inc
sub
cmp
faddl
jb
pop
cltd
ds
xor
or
cld
outsl
out
jge
pop
fwait
xor
inc
movsl
pop
lods
cwtl
imul
cmpsl
dec
dec
push
pop
jle
je
xor
pop
sbb
cmc
sbb
add
push
fimuls
jecxz
inc
call
and
push
seto
pop
add
cmpsb
push
clc
repnz
add
cmp
xlat
out
fs
jle
dec
stos
fisubl
adcl
sub
cmp
std
pop
sub
add
stos
inc
add
xchg
jp
popa
stos
cmc
mov
mov
mov
test
cmpsb
cmp
xchg
test
and
test
cmp
add
test
xchg
enter
dec
or
add
or
aam
test
cmp
popf
stos
iret
jo
mov
jns
or
stos
stos
inc
sub
cs
pop
or
in
push
cmc
push
pop
xchg
clc
sbb
xor
add
lds
jnp
cli
push
mov
testl
cmp
xchg
jmp
test
sub
push
push
mov
aaa
insl
push
loope
add
add
mov
aas
sbb
and
xchg
popl
les
testl
sub
addr16
test
stos
ljmp
xchg
lea
clc
sbb
sbb
lock
jns
dec
fs
cmp
pop
mov
fnstcw
sbb
stc
mov
hlt
and
movsl
or
mov
and
scas
mov
mov
es
adc
push
pop
outsl
mov
add
sti
jge
pushf
adc
jb
clc
out
pop
mov
inc
stos
or
int
enter
mov
mov
xor
jle
push
and
xchg
shl
mov
clc
adc
test
das
jle
daa
or
arpl
jno
xor
lcall
adc
in
cmovns
insb
int3
xor
or
daa
sbb
das
push
sub
jbe
xor
xchg
adc
dec
mov
add
or
sarb
adc
mov
scas
repz
mov
repz
mov
xchg
rcrl
push
mov
inc
pop
dec
pop
sbb
fisubrl
pop
cld
rcrb
mov
clc
push
mov
mov
sti
xor
adc
clc
stc
dec
mov
cmp
mov
push
shrl
pushf
popa
icebp
pop
lods
xchg
sub
xchg
gs
aas
idivl
or
jmp
pop
dec
xchg
jl
je
insb
xor
mov
or
stos
dec
divb
mov
sbb
loop
cmp
fsubrl
cli
lds
jmp
cmp
mov
sub
std
fwait
mov
fidivrl
lds
pop
imul
pop
jno
lret
push
xchg
sti
dec
pop
test
mov
pop
sbb
fwait
cli
imul
shll
bound
jae
imul
xor
lret
xor
push
clc
rcl
or
or
push
outsl
popf
dec
addl
iret
dec
out
fwait
and
repz
out
negl
loopne
adc
cli
mov
sbb
inc
sbbb
xor
xchg
cli
push
sub
and
inc
mov
ss
jg
dec
aas
les
lret
ljmp
sub
int3
mov
les
mov
mov
jecxz
push
pop
push
fcompl
add
jne,pt
adc
sbbb
aas
jae
and
in
in
jae
fs
lea
dec
dec
push
daa
push
sbb
insb
mov
mov
jecxz,pt
aam
inc
cmpsl
cmp
adcl
dec
gs
mov
iret
jecxz
dec
xchg
sub
in
jne
cmp
pop
sbb
xor
icebp
inc
in
jne
dec
push
imul
lcall
xchg
mov
fcmovnu
scas
sbb
push
mov
mov
aam
shll
out
ret
push
xchg
jp
mull
mov
out
xor
addr16
cmp
pushl
les
jge
adc
sub
rolb
sbb
add
pop
fcoms
inc
fimull
dec
adc
nop
pop
mov
out
hlt
std
insb
aad
addr16
mov
aam
mov
int3
mov
push
ljmp
inc
push
cmp
fstp
clc
lock
gs
sub
sub
out
sub
iret
shl
decb
xchg
push
push
test
loopne
push
jno
ret
fldpi
mov
in
jg,pn
imul
pop
test
repnz
inc
jno
or
push
cmp
ret
jle
scas
fs
inc
cmp
divb
hlt
lods
lods
cmp
fisttpll
xchg
pop
popf
jge
ja
adc
or
push
fchs
int3
push
xchg
out
jno
aad
lds
int
out
dec
jmp
jmp
daa
call
push
cmpsb
cld
jnp
jge
xor
cmp
test
loop
mov
add
mov
stc
xchg
sahf
ja
adcb
adc
arpl
mov
test
movsl
ret
cmpl
imul
jl
cmpsb
mov
lds
and
roll
pop
testl
mov
adc
sub
and
data16
xchg
lcall
dec
xchg
mov
jno
jmp
jae
xlat
dec
push
cmp
mov
outsb
clc
and
nop
bound
hlt
das
dec
pop
pushf
in
shll
aas
shlb
and
mov
pusha
adc
pop
cmp
lahf
sub
push
bound
incl
lds
std
rorl
je
cmp
push
imul
outsb
jnp
push
inc
jae
mov
les
stos
repnz
sahf
push
mov
aaa
dec
rep
cli
add
and
lret
std
shlb
sub
xchg
push
mov
mov
inc
sub
sbb
mov
and
cwtl
add
shl
and
je
stos
xchg
and
mov
add
inc
scas
add
cmpsb
loop
andl
xorb
sub
and
and
in
insb
sbb
popa
call
xor
mov
jl
sarb
pop
out
dec
mov
xchg
imul
jbe
aad
fmuls
or
sbb
and
insb
push
sub
lahf
jmp
xchg
pop
cmpsl
mov
pop
sbb
jp
ret
lods
mov
or
data16
xchg
xchg
ret
fstpl
or
int
aas
pop
dec
push
jno
cmp
or
pusha
dec
stos
push
pushf
push
mov
pop
cwtl
xor
mov
add
mov
xchg
pop
inc
cmpsl
out
stc
cmp
mov
dec
mov
int3
push
lods
lret
cmp
imul
mov
in
jl
rclb
push
fcomip
leave
xor
imull
cltd
fnstenv
popa
adc
test
cs
xor
xor
fbstp
sbb
out
call
sub
std
xchg
mov
mov
mov
fdivrl
cs
cld
daa
cmp
rclb
pusha
ljmp
xchg
out
mov
iret
lcallw
incl
lea
btr
call
orb
jbe
hlt
fldcw
frstor
je
movsb
add
sbb
in
movsb
mov
fdivp
outsb
jno
xchg
aam
sbb
jge
aam
inc
adc
rorl
sub
repz
idiv
cmpb
jb,pn
sahf
cmc
push
fcoml
cmp
sarb
xchg
xchg
pop
test
and
or
xor
or
sbb
xor
mov
jo
sarl
jbe
jne
pop
adc
xchg
adc
or
jl
icebp
sub
inc
mov
movsb
popf
test
pushf
mov
xchg
les
int
sbb
pop
push
adc
ss
aaa
rdmsr
xchg
pop
push
movsl
enter
add
xor
push
xchg
shrb
imul
add
repnz
arpl
ret
in
pop
add
rclb
inc
pop
fistl
je
mov
lahf
adc
mov
in
cmpl
in
in
sub
test
pop
adcl
cld
cli
repnz
push
inc
das
outsl
or
xor
push
icebp
inc
pop
scas
sbb
mov
xlat
ds
mov
jb
std
or
inc
pop
jle
xchg
je
xor
cmp
jns
sub
adc
sbb
leave
adc
into
bound
jmp
in
inc
repz
jle
outsl
icebp
mov
imul
mov
cmp
mov
and
jns
rcl
jo
lods
inc
outsl
les
cmp
push
rcrl
aaa
dec
daa
xchg
popa
mov
in
pop
sbb
and
adc
mov
adc
scas
movsb
adc
dec
adcl
repnz
sbbl
xor
mov
adc
mov
data16
cmp
cld
inc
dec
adc
lods
ljmp
stc
push
outsb
xlat
jmp
fisttps
push
mov
dec
jno
dec
cmp
mov
mov
pop
fldt
xchg
mov
out
mov
mov
jae
mov
fimull
out
cli
mov
jb
pop
xchg
xchg
jmp
aas
clc
int3
xchg
call
inc
testb
or
pushf
fcmovne
sbbb
jg
out
stc
sub
sub
xchg
push
dec
sub
inc
push
xchg
mov
mov
sub
dec
std
mov
lcall
xor
es
jecxz
in
jnp,pt
mov
jns
mov
arpl
mov
adcb
xor
mov
filds
fsts
mov
call
cmp
mov
mov
imul
add
adc
cmp
fsubrl
sub
cltd
bound
movsb
xchg
or
jo
add
mov
scas
xor
stc
lods
idivb
pop
jmp
push
sti
pop
cld
cmp
dec
mov
cli
lret
sar
lods
loope
push
sti
or
push
and
out
test
scas
lcall
jle
sub
xor
jo
or
sbb
jmp
js
xchg
lock
inc
icebp
cld
pushw
rcl
or
push
push
sbb
imul
aaa
cmp
cli
add
add
cmp
lds
popa
xor
fisubl
adc
idiv
pop
sub
mov
jle
outsb
std
jecxz
imul
test
fsubp
and
mov
mov
mov
pop
out
fadds
inc
pop
xchg
add
jbe
lahf
arpl
adc
arpl
ret
clc
jge
add
inc
hlt
xchg
in
and
ret
aad
mov
inc
mov
xchg
sub
scas
lea
notl
cs
pop
mov
out
enter
jmp
lods
mov
cmpsl
sahf
outsl
insb
mov
adc
adc
or
ds
or
cmp
sub
sahf
dec
lods
test
push
incl
out
jo
mov
cmp
repz
push
popf
cmp
mov
test
mov
cwtl
ljmp
and
sub
sti
mov
jno
inc
or
popf
and
pop
mov
repz
or
cli
sbb
inc
dec
mov
xor
lcall
aaa
mov
inc
push
test
aam
gs
sub
mov
pop
pop
adc
cwtl
popf
cmp
lret
sbb
je
jmp
jbe
cs
add
inc
cwtl
dec
xorl
adc
mov
sar
jne
jmp
sbb
jp
mov
testl
cmp
lods
jo
add
mov
les
mov
pop
or
aas
or
pop
rcrl
cmp
xchg
clc
testl
xor
and
ret
sbb
mov
cmp
das
push
imulb
aas
mov
cmpsl
popa
mov
sub
pop
mov
pushf
daa
pop
sub
xor
sbb
lret
push
faddl
dec
mov
xchg
pop
aad
repz
cltd
dec
das
movsl
jb
xchg
and
pop
cmp
and
push
inc
in
jecxz
jo
jb
add
mov
dec
cmc
js
addr16
or
xchg
push
mull
pop
dec
xchg
sti
clc
stc
dec
mov
mov
mov
cs
rorl
push
iret
add
xor
and
add
stc
jbe
jo
adc
insb
sbb
jnp
out
cwtl
imul
out
ret
std
nop
gs
adc
pop
scas
jge
push
fmul
cmpsb
xchg
jns
repz
push
int3
sti
push
and
sub
lea
sub
push
out
bound
pop
mov
or
arpl
and
arpl
jmp
cmp
xchg
into
sbb
decl
mov
sub
jbe
mov
add
mov
sub
sub
int
xor
jbe
cmp
mov
xlat
sub
mov
cmpb
pop
clc
push
or
inc
imul
sti
mulb
dec
xchg
adc
stos
and
dec
xlat
insl
jle
cwtl
mov
xor
stc
mov
sar
bound
push
mov
cmpsb
adc
inc
int
ss
lcall
dec
outsl
jae
mov
shlb
or
add
mov
mov
cmp
cmp
int3
xchg
fwait
lcall
incl
clc
les
push
out
push
jg
stos
push
in
test
cmc
sub
mov
or
mov
aam
outsl
jbe
fldenv
dec
cld
in
push
nop
loopne
aam
nop
sbb
pop
or
pop
ds
push
enter
fsubs
psrlq
les
cmp
sub
enter
adc
cmp
inc
xor
and
sub
test
in
sbb
ljmp
adc
lret
mov
mov
adcl
cld
pop
fmuls
movsl
push
jmp
ljmp
add
shlb
sbb
pop
xor
jp
cli
insb
test
mov
or
stos
popf
and
and
mov
test
scas
addb
xor
mov
sbb
imul
repz
stos
stos
or
jns
outsl
sbb
pop
jle
test
aas
stos
sarl
popf
pushl
xchg
mov
push
push
mov
ficoms
idivl
push
push
ja
movsl
mov
cmp
data16
cs
loop
lret
push
pop
cmp
fdivr
xchg
clc
in
adc
xchg
jno
popf
mov
mov
out
int3
pop
and
sub
ss
fildl
and
or
rcll
mov
in
leave
mov
jno
loope
adc
icebp
sbb
call
xor
xchg
fld1
xchg
mov
inc
adc
ret
xchg
xlat
popf
sbb
or
stc
mov
in
mov
insb
cli
xor
or
dec
addb
nop
rolb
inc
js
bound
mov
fnstcw
adc
sbbl
sti
movsb
clc
mov
mov
out
dec
pop
xor
xlat
loop
test
jb
add
jbe
into
adc
mov
mov
dec
add
add
jbe
movsb
in
dec
lahf
js
mov
jle
lea
testb
push
mov
cmc
jb
cld
loope
ret
inc
std
shll
sub
in
jp
xchg
aaa
scas
mov
pushw
rorb
jae
mov
sub
les
popa
xchg
decb
ja
and
cld
lock
mov
cmp
jecxz
cmp
mov
and
bound
push
into
movsl
pop
push
inc
gs
push
outsb
insl
sahf
and
push
pusha
jno
jnp
in
jl
std
in
lea
mov
adc
ss
and
add
cmp
jl
push
cwtl
push
jmp
mov
ret
daa
ret
leave
jmp
mov
test
mov
cmp
pop
inc
popf
mov
out
imul
mov
scas
jmp
inc
sahf
jg
sub
dec
sarl
add
or
aaa
in
add
ja
mov
mov
dec
jbe
jmp
xorb
pop
inc
jecxz
imulb
fidivs
pop
jmp
dec
cwtl
xchg
fwait
mov
pop
jo
cmp
mov
sub
gs
out
or
adc
fwait
out
in
push
add
movl
sar
xor
iret
in
aad
mov
adc
lods
jae
scas
push
xor
insl
bound
gs
icebp
mov
dec
pop
cmp
mov
sbb
lds
and
or
dec
repnz
loope
divb
jle
xchg
pop
xchg
push
pop
imul
inc
push
repz
add
push
sub
cs
inc
clc
xor
stc
add
into
insl
sahf
jo
jmp
mov
mov
pusha
xchg
call
mov
ds
subb
clc
dec
divl
mov
std
mov
js
push
lret
cmp
into
addr16
jge
roll
aad
aaa
jnp
in
bnd
jo
testl
add
dec
addl
sbb
mov
das
das
ss
ret
js
mov
add
push
test
bound
mov
jo
add
jo
jp
xchg
mov
push
sub
pop
sub
sub
cmp
xchg
push
hlt
test
mov
or
dec
out
movsb
arpl
iret
or
jns
addr16
dec
push
and
xchg
adc
es
fdivrs
cli
or
scas
lds
jb
dec
mov
sti
addr16
sbb
xor
pop
out
daa
pop
push
dec
sub
out
and
pop
jge
xchg
push
ds
mov
out
mov
or
jmp
xor
mov
adc
test
das
mov
popa
clc
loopne
cmp
into
out
aaa
stc
scas
mov
icebp
dec
pop
ror
inc
mov
mov
jle
xor
mov
inc
pop
gs
push
xchg
fistps
push
and
sahf
jle
lock
leave
xor
dec
push
xchg
jg
aaa
inc
pushf
cmp
xchg
xor
inc
inc
fnstsw
dec
or
lret
fcmovnbe
push
xchg
aaa
in
pop
and
decb
cmp
dec
xor
mov
jae
pushf
clc
jns
jo
lock
and
push
pushf
lret
lock
dec
je
push
movsb
test
jecxz
aaa
sbb
xor
scas
movsl
std
imul
ljmp
rclb
rorl
mov
xorl
push
adc
mov
iret
mov
hlt
leave
ret
mov
xchg
pusha
outsl
adc
pop
clc
add
xchg
xor
insl
cmp
mov
add
inc
pop
mov
sahf
mov
insb
sbb
imul
inc
mov
hlt
adc
xchg
mov
ja
ss
fwait
stos
mov
call
pop
dec
andb
xchg
or
cmp
mov
aad
loopne
add
or
cwtl
dec
push
ret
or
outsl
inc
add
jno
int3
add
sbb
sub
jns
enter
pcmpeqb
jae
aaa
test
and
fists
mov
pop
jbe
jge
xor
popf
push
test
js
mov
mov
fmuls
mov
int3
jecxz
or
int3
fisttps
jno
sub
rcll
outsb
fwait
mov
rcll
fiaddl
adcl
sub
loopne
xor
sbb
jp
jmp
sti
icebp
or
cmp
sub
imul
cltd
lea
frstor
popa
out
cmc
outsb
sub
xchg
cmp
popf
adc
jae
inc
cli
xchg
shrb
fcmovnu
insb
xchg
dec
out
cmpsl
mov
out
pop
or
mov
inc
dec
cld
lods
pop
jmp
or
dec
inc
pop
clc
cli
xor
add
fdivs
call
jnp
shrb
neg
jl
sub
mov
add
cmp
lds
incl
in
sbb
jo
mov
int3
pop
scas
fs
aas
stc
pop
or
pushf
cmp
addr16
adc
inc
adc
and
inc
dec
push
outsb
or
xor
lds
call
or
mov
add
inc
push
cs
lahf
popf
xchg
fnsave
xchg
add
mov
es
das
and
xorb
add
mov
mov
testl
shll
cmpsl
insb
ds
popf
xchg
mov
pop
cmc
fdivrl
dec
sti
repz
mov
int
mov
inc
jnp
fistpl
iret
mov
push
cmp
imulb
mov
or
movups
aad
ret
jg
jg
cs
xlat
sub
aas
pop
jne
jns
popa
imul
mov
stc
add
cmc
inc
sub
mov
cmp
shrl
cld
xor
out
xor
cs
jle
lahf
icebp
ret
adc
call
ja
movsb
test
call
mov
inc
dec
test
jo
dec
aam
mov
outsb
test
fyl2x
cwtl
add
jle
pop
mov
jp
xchg
and
pop
sub
lods
add
xchg
aad
std
flds
sub
add
pop
inc
jae
lock
imul
pop
push
stc
dec
dec
pusha
aaa
mov
andl
fsubrl
pop
das
aaa
push
inc
cmp
aam
lea
xor
mov
repnz
fisubrl
mov
cmp
in
xchg
fstps
sub
or
ffreep
mov
mov
data16
das
add
mov
fildll
cmc
call
mov
mov
jae
adc
xor
mov
sahf
xor
push
rorl
jl,pn
cltd
into
ljmp
fs
cmp
ljmp
insl
jecxz
mov
cltd
cmp
mov
test
xchg
fldt
mov
bswap
nop
adc
dec
mov
shl
adc
inc
mov
or
add
loop
sbb
call
xchg
inc
xor
int3
dec
mov
cld
subb
aam
mov
out
cli
lods
shll
add
add
jg
pop
stos
movsb
inc
push
outsb
call
sbb
inc
pop
jb
mov
stos
xor
inc
ret
sti
hlt
xchg
stos
aam
jl
xchg
arpl
es
aaa
std
push
ret
dec
rcr
fimuls
out
cbtw
out
sub
adc
xor
jbe
daa
out
inc
les
sub
jne
pop
mov
jae
stos
jge
arpl
nop
cmp
fsub
pop
lods
addb
dec
leave
int
add
fwait
and
adc
or
mov
sub
popa
shll
jle
dec
pop
mov
insl
adc
loope,pn
xchg
loopne
add
sub
push
mov
in
mov
and
and
xor
add
div
mov
inc
jne
adc
sub
ficompl
fwait
push
add
mov
inc
lds
mov
xor
add
jne
jle
push
sbb
push
fimuls
cwtl
aad
cmp
popa
psrld
imul
fisubrs
clc
ret
jno
inc
push
dec
pop
jns
in
insl
das
scas
aam
popf
jb
sub
aas
jecxz
cmpsb
xchg
mov
push
call
inc
in
insl
xor
xchg
mov
imul
insl
mov
dec
addr16
inc
enter
mov
cmp
lret
mov
pushf
sub
jge
mov
testb
sbb
ret
fstpl
and
pop
adc
pop
out
dec
pop
es
add
lods
xor
das
dec
xchg
xchg
cmp
decl
xchg
dec
lods
pop
mov
mov
mov
loop
cld
cli
into
mov
inc
fnstsw
dec
mov
dec
or
lret
data16
cmpsb
pop
lock
loopne
aas
adc
std
push
cmp
and
mov
pop
pop
jle
mov
jg
sub
mov
int3
xchg
and
lcall
mov
fsubl
int
jle
dec
dec
sbb
cmpsl
std
xchg
or
jmp
sbb
andl
stos
pusha
int
xor
mov
jae
xor
xor
lods
jbe
mov
into
jle
cwtl
stc
xor
sub
int
mov
cmpsb
imul
mov
enter
bnd
xchg
mov
mov
aas
adc
ljmp
es
push
jg
jo
sysret
int3
ret
outsb
insl
aad
or
icebp
adc
cmp
in
add
inc
ret
test
mov
xchg
sub
push
popf
and
pop
push
sbb
popa
negb
ljmp
ss
imul
cld
xlat
inc
xchg
sahf
loop
add
or
dec
lea
int
xor
popf
outsl
scas
inc
cmpsb
ret
sbb
dec
lods
and
dec
test
mov
out
or
cmp
fiaddl
add
mov
int
sbb
mov
aaa
testb
test
push
pop
jbe
mov
adc
xor
hlt
inc
xchg
enter
push
or
jbe
pop
stos
xor
xor
orb
mov
add
std
pop
cs
call
mov
add
les
mov
mov
test
lods
sub
dec
ljmp
call
sbb
pusha
sbbl
jge
xor
mov
rclb
mov
iret
jmp
leave
or
sub
xor
dec
insl
xor
add
stc
cmp
xor
adc
pop
out
cmp
cmpsl
rdseed
sbb
add
and
sti
and
push
jne
and
je
out
mov
popa
loope
lea
push
testb
xorl
outsb
jo
sub
mov
mov
push
into
lock
adc
nop
xchg
mov
pop
test
mov
mov
fcoms
sbb
jmp
adc
stos
dec
cmp
mov
enter
repz
enter
dec
mov
jmp
mov
and
jae
lock
pop
outsl
lea
pop
sub
push
cltd
and
sub
stos
adc
popf
or
xchg
shll
adcb
xchg
stc
sti
sbb
imul
aad
mov
repz
in
sbb
or
sub
inc
hlt
add
aad
mov
mov
lods
lods
das
shrb
das
in
add
fwait
ja
jge
cmp
fsubl
mov
mov
mov
jmp
in
int3
dec
imul
jns
adcl
je
addr16
jle
adc
test
flds
push
data16
or
aam
popa
sbb
xchg
das
rclb
loope
out
nop
repz
daa
inc
jb,pt
or
loop
cmpsb
mov
lods
decb
xor
jnp
fdivr
test
sbb
fistpll
fs
add
dec
jnp
ja
inc
sbb
rorl
and
xchg
cmp
icebp
and
adc
pop
fmull
and
dec
dec
into
push
jle
dec
cmpsb
stc
aaa
sbb
sub
jl
lods
data16
add
pop
fmuls
pop
inc
leave
cmp
jge
test
shll
sahf
jecxz
xor
aam
inc
jg
ret
jg
adc
imul
ficoms
mov
xor
cltd
xchg
mov
ret
out
lea
xor
shll
hlt
int
dec
out
out
aam
int3
in
fcom
jo
jo
inc
or
sbb
aas
and
imul
sbbl
in
jecxz
enter
inc
jecxz
mov
xchg
fwait
xor
push
pop
add
stos
rolb
dec
imul
dec
fsubs
test
push
cmpsl
jno
lret
inc
add
xor
call
insl
fwait
mov
or
sub
fdivrl
mov
or
ja
fcmove
cmp
inc
sub
jne
cmc
test
loopne
mov
cli
loop
dec
mov
bound
mov
ficompl
adc
pop
cmp
xchg
insl
popa
outsl
inc
cmp
test
mov
in
inc
push
mov
cld
pop
in
leave
into
mov
sbb
push
pop
adc
int
test
jmp
mov
xchg
insl
inc
cld
jo
and
xlat
sub
cmp
xchg
lahf
rorl
mov
and
jmp
arpl
xchg
bound
pusha
inc
icebp
xor
and
cmpsb
xchg
out
inc
dec
daa
data16
push
jne
or
pop
cmp
cld
xorb
dec
mov
sub
das
lret
cmp
test
movsb
jae
dec
lcall
shll
jae
test
jmp
xchg
out
aaa
pop
inc
jmp
jbe
sbb
add
xchg
clc
fstpl
adc
xor
stos
lahf
jge
and
xor
sub
hlt
xchg
cmc
std
pop
pop
xchg
inc
and
sub
insl
push
nop
ljmp
out
in
mov
cmpsb
xor
mov
stos
xchg
cmp
jno
push
aam
cwtd
imul
bound
pop
adc
pop
test
ja
pop
and
inc
sbb
lock
xor
mov
mov
inc
cltd
xchg
imul
jb
adc
ror
mov
xchg
inc
dec
repz
cli
test
aas
push
shl
or
rorl
mov
call
hlt
add
add
cmp
jecxz
xor
aam
pop
rcl
daa
cltd
pusha
mov
mov
xor
lret
popa
lea
lods
xor
outsl
aam
les
jge
mov
xchg
lret
push
jbe
bound
repnz
enter
loopne
fdivs
out
mov
rcrl
sbb
xchg
push
mov
into
mov
ror
roll
sti
or
pop
fisttps
sub
adc
xchg
pop
shlb
arpl
xchg
out
xchg
dec
mov
ja
in
dec
orl
dec
mov
cld
push
jne
xchg
jl
mov
adc
jno
xlat
push
icebp
bound
incl
xor
xor
push
in
sub
mov
js
lds
mov
movsb
call
inc
xchg
mov
pop
xor
cmp
mov
ret
lcall
in
mov
jp
sub
xchg
icebp
jbe
lods
add
push
int3
adc
clc
inc
addr16
adc
mov
mov
adc
jl
xor
mov
jle
add
call
add
ss
insl
stos
mov
stos
push
xchg
insl
mov
push
aaa
jecxz
mov
mov
mov
test
mov
lahf
cmpsb
push
dec
hlt
mov
push
cmpsl
jbe
test
dec
fidivl
pop
xchg
mov
imul
mov
adc
inc
mov
clc
scas
cmp
int3
fucomip
inc
movsb
push
lahf
fisubrl
loopne
adcl
xor
adc
es
pop
fldcw
mov
add
loop
inc
pushl
test
jb
pop
push
mov
cmpsl
nop
outsb
fwait
push
cmc
out
les
gs
inc
sub
dec
test
sti
fmuls
ss
pop
aas
push
addl
fldl
adc
adc
int
fmull
pop
loope
nop
je
js
repnz
mov
cmc
pop
mov
jne
mov
mov
cltd
test
out
ds
pop
pop
xor
or
push
jge
xchg
outsl
mov
fdivrp
and
loop
mov
sti
das
lods
inc
cmc
sub
repz
cmpb
movsl
pushf
sub
jb
pop
nop
add
lock
imul
lret
lock
dec
jge
fsubl
or
adc
inc
in
sbb
jae
push
cmp
mov
inc
cmp
jg
adc
scas
pop
std
xor
imul
aad
pop
sbb
or
cmpsb
mov
add
dec
cltd
add
mov
sahf
xor
rcrl
dec
sub
mov
and
pop
adc
xchg
andnps
rorl
add
push
mov
or
je
mov
shlb
pop
insb
fldenv
xor
pop
xor
aas
xor
or
jbe
cld
lods
mov
insb
out
loopne
xor
pop
sti
jg
ret
leave
push
inc
into
adc
and
fisttpll
inc
push
cs
mov
pop
imulb
xchg
pusha
xor
or
lods
pop
push
gs
lret
stc
mov
jp
and
sti
addb
add
pusha
mov
dec
push
shlb
out
adc
pop
add
add
or
jecxz
xchg
cmp
pop
lret
lea
push
into
and
in
aaa
incl
mov
loopne
fnstenv
jnp
lock
call
xlat
lret
jl
and
and
lret
insl
pushf
ljmp
ret
jge
sarl
or
mov
and
mov
pop
mov
add
mov
cmp
jl
adc
mov
mov
stc
jne
sub
iret
dec
cmc
stos
fsin
testb
addb
fwait
pop
and
pop
cwtl
test
inc
add
pop
dec
jmp
sub
adc
push
add
mov
xchg
sbb
push
inc
lock
out
mov
test
lods
push
jmp
sbb
and
imul
cltd
xchg
mov
adc
lahf
inc
aas
lock
ljmp
fcmovnbe
ss
vsqrtpd
movsl
cwtl
loope
dec
sti
xor
std
shl
aaa
xchg
dec
out
mov
mov
inc
cltd
jmp
sbb
lea
xchg
sarl
fstpl
inc
hlt
sbb
in
enter
and
inc
int
out
sub
notb
outsb
stos
push
or
int
push
aaa
cmpsl
cs
sbb
sbb
dec
mov
in
stc
sub
cmp
cwtl
inc
adc
sbb
mov
nop
cmp
sbb
loope
stos
insl
jb
pop
nop
inc
push
mov
or
out
lods
daa
push
imul
cs
add
cwtl
inc
pushf
push
call
push
cmpsl
add
add
fidivrs
test
jp
mov
jg
test
and
adc
addr16
push
cmp
sbb
mov
not
xor
out
in
xor
mov
popf
das
test
xchg
cmp
mov
xchg
in
jae
xor
add
cmp
insb
test
cmp
loopne
pusha
adc
leave
out
cwtl
cmc
lcall
xchg
jne
and
jmp
cmp
jg
popa
mov
adc
repz
adc
jno
mov
add
adc
jb
push
cmp
jl
push
push
movsl
xchg
inc
pop
into
icebp
and
and
ds
jbe
jle
adc
sar
lods
clc
push
push
xchg
inc
push
pop
inc
popa
pushf
push
mov
es
int
cmp
mov
mov
bound
xlat
mov
xchg
mov
imulb
adc
enter
pushf
sbbl
movq
icebp
xchg
aas
stos
das
mov
dec
loop
ret
in
adc
int
dec
inc
lret
nop
frstpm(287
paddusw
push
lock
ret
movl
adc
dec
cmpsb
inc
or
cmp
fs
mov
lret
shrl
xor
push
dec
shrl
lret
cwtl
stos
sub
or
call
xor
push
cmpsb
mov
inc
lcall
into
data16
and
xchg
sbb
icebp
test
aam
pusha
mov
jl
fwait
movl
fisubs
aas
xchg
imul
xchg
sahf
cmpb
aaa
cmp
cs
inc
jno
outsl
rclb
pop
ret
pop
ds
xchg
aam
scas
aad
popa
pushf
jnp
rcrl
pushf
jp
out
popa
mov
sbb
test
dec
mov
and
dec
and
jne
cli
stc
push
or
jle
push
mov
repnz
mov
repnz
into
push
dec
xchg
and
das
fxch
or
in
sarb
push
and
xor
incb
idivl
push
idiv
in
jg
nop
push
pop
sbb
pop
decl
inc
daa
jae
clc
cmpsb
in
mov
xchg
sbb
ret
cmp
shrb
cltd
jge
movsl
cmpb
out
outsb
adc
fbld
inc
add
inc
mov
pop
mov
xchg
fmulp
ret
rolb
mov
sub
and
xchg
and
int
jns
aaa
or
add
mov
or
negb
test
cmc
xchg
pop
push
cltd
jno
dec
popf
mov
int
mov
ja
pop
stc
iret
push
push
add
jle
mov
and
push
add
iret
or
jmp
cmpsb
jae
jae
hlt
jge
outsl
dec
mov
shlb
dec
lock
jp
push
and
mov
push
push
sahf
push
cmpsb
xchg
sub
outsl
sbb
fldcw
xchg
push
jbe
int
jnp
out
sahf
lods
push
xor
fs
mov
add
leave
sbb
adc
dec
sub
popa
add
lods
mov
cmp
movsl
pop
shll
das
jecxz
jne
and
scas
xor
mov
jg
pop
into
out
pushf
nop
adc
dec
push
cmp
mov
mov
mov
push
sbb
mov
loop
jno
leave
push
imul
mov
jae
push
sahf
sbb
sub
mov
jno
adcb
cmc
out
popa
lret
cmpb
xchg
mov
jmp
dec
push
test
mov
ret
inc
insl
xor
and
add
insl
repz
cmp
bound
and
and
pop
loop
cld
testl
cwtl
jle
add
adc
cltd
ret
push
sar
mov
mov
leave
cmp
mov
sbb
mov
fimull
cmpsb
and
dec
stos
in
test
bound
loopne
cmp
addb
das
test
push
in
rolb
outsb
lret
cs
enter
add
xchg
fstps
lret
out
fimuls
adc
in
sub
and
ret
fidivl
enter
and
jecxz
mov
dec
clc
std
mov
fisttpll
out
add
sarb
mov
dec
mov
sbb
repz
outsl
std
push
nop
or
or
push
outsb
add
mov
mov
xchg
adc
inc
fildl
xchg
sti
fisttpl
dec
jbe
mov
inc
cli
add
int
repz
cld
sbb
movsl
lret
movl
mov
mov
popa
shll
pop
sub
xor
add
mov
arpl
out
cmc
or
in
dec
lea
jbe
jecxz
cmp
fstpt
jno
xor
push
mov
ss
sub
imul
adc
fwait
xor
xor
mov
pop
fsubp
cmpsl
xor
mov
test
xchg
popf
or
mov
loopne
aam
ficoml
cmp
dec
xor
inc
mov
add
gs
push
loop
mov
adc
cmpsb
pop
dec
lods
inc
sahf
stos
shrl
stos
adc
xchg
std
push
and
out
cmp
mov
lcall
cwtl
sbb
adc
sub
xor
or
fwait
pop
shll
scas
int3
aaa
loopne
adc
pop
cs
insb
movsb
sti
aam
call
adc
les
mov
cmp
dec
mov
fsubrl
xor
jp
in
insl
imull
iret
addl
xchg
jb
adc
hlt
ret
cmc
sbb
sub
test
popl
dec
or
lahf
ss
movsl
mov
dec
xchg
or
imul
pop
push
cmpsl
add
jne
ss
es
cmp
cmp
fldenv
sti
push
stos
mov
insl
xor
dec
std
and
push
mov
pop
push
dec
mov
jge
out
icebp
test
lock
push
call
sub
test
push
lods
into
mov
xchg
push
cmp
loope
imul
mov
lods
mov
dec
repz
add
xor
sub
fmul
inc
lret
mov
adc
mov
cmp
or
das
mull
xchg
andl
pop
leave
mov
xchg
sbb
mov
imul
mov
mov
xor
lcall
out
push
aas
outsb
jle
xchg
test
pop
out
jno
mov
dec
jl
adc
fldt
mov
jge
adc
orps
pop
cwtl
aad
imul
rcl
and
jg
mov
push
inc
ret
pop
adc
jg
adc
in
add
jb
rcrl
jno
xlat
sbb
sti
xor
pop
stos
and
stc
jg
push
adc
inc
fldln2
mov
inc
push
in
loop
aam
gs
not
daa
push
add
push
sbb
fs
data16
dec
jae
out
sbb
pop
cmpsb
cltd
mov
cmpsl
pop
lds
and
out
out
push
pushf
sbb
loopne
mov
loop
push
jmp
adc
fs
loopne
sbb
subb
cmp
int3
xor
adc
flds
sbb
pop
xchg
and
int
out
pop
push
popa
flds
jne
outsb
or
ror
scas
jp
fildll
dec
fldt
popf
push
repnz
das
and
mov
popa
dec
aaa
rcrb
popf
adc
dec
dec
out
mov
rcr
jo
int3
jb
stc
sbb
jo
add
lds
push
pushf
mov
outsl
and
mov
stc
pop
mov
adc
imul
push
into
adc
stos
pop
addr16
cmp
ret
pop
mov
scas
and
arpl
in
add
add
xchg
cmc
pop
jg
jb
imul
int3
xchg
push
xchg
cmp
ud1
add
enter
aaa
sbb
push
add
mov
sbb
enter
xlat
push
out
shlb
and
cmp
insl
xor
outsl
cmpsb
pushl
lahf
loop
stos
inc
ss
cmpb
mov
xorl
xchg
sub
testl
push
movsb
aas
push
dec
dec
ret
lock
rep
adc
jno
xchg
sbb
test
rep
int
mov
sub
scas
lock
leave
adc
xchg
fidivrl
cld
fists
inc
call
push
loopne
pop
xchg
or
lret
stos
or
or
or
mov
popa
cmpsb
lods
aaa
ret
xor
mov
inc
dec
mov
test
es
mov
inc
sahf
sbb
mov
push
cs
jne
and
dec
pop
cltd
push
mull
push
jg
or
out
out
cmc
lret
cs
cmpsb
fwait
ds
xchg
mov
jle
jo
jbe
test
xlat
iret
adc
dec
cmp
push
cmp
cmp
cmp
mov
loop
pop
xchg
loop
xchg
ret
aad
xchg
lret
pop
gs
lcall
nop
notl
sub
dec
popa
test
mov
pop
sbbb
mov
js
call
sub
sub
jecxz
xor
ss
mov
imull
mov
inc
adc
sub
fbld
mov
fs
lret
pop
mov
mov
in
insb
jno
adc
cmp
mov
aam
cmc
fistl
loop
dec
or
test
das
xchg
mov
jmp
push
rorl
inc
mov
mov
popa
push
mov
lock
jnp
adcb
packssdw
push
mov
dec
lods
leave
int
and
jmp
orb
cmp
inc
jno
lret
and
cltd
fcoms
adc
es
insb
into
or
adc
add
sbb
pushl
roll
outsl
fnsave
imul
into
dec
out
adc
iret
cmp
movsl
fs
test
sub
jmp
add
xchg
mov
stc
mov
sbb
in
in
ds
jecxz
js
or
por
pop
mov
adc
xor
lcall
movsl
ret
mov
dec
mov
mov
jns
aad
ljmp
mov
and
imul
push
inc
dec
adc
jp
out
push
aad
lret
or
dec
ljmp
push
int3
loope
dec
inc
mov
push
into
insl
cmpsb
cli
sub
push
add
mov
rorb
push
les
xchg
add
insl
jae
inc
mov
jmp
pop
outsb
xchg
inc
pop
mov
cltd
mov
mov
jns
das
popf
inc
mov
lock
push
out
cmc
adcl
sbb
das
cld
sub
negl
movb
ret
inc
and
popa
cmpb
jmp
lret
call
xor
das
sub
mov
push
addl
jne
and
pop
pop
xlat
sbbl
dec
insb
cmpsb
imul
fisubl
sahf
push
xlat
mov
in
mov
pop
ljmp
jmp
lahf
daa
jmp
pop
add
daa
cmp
inc
jnp
aam
mov
or
mov
lds
lock
rcrb
xor
push
rcll
ds
push
jns
xchg
sub
insb
imul
lds
ret
roll
jns
ret
mov
and
or
loopne
xor
pop
sbb
push
and
scas
imulb
or
repz
lods
jg
fisttpl
dec
dec
pop
fcomps
xchg
sub
inc
shufps
and
xor
ret
mov
nop
getsec
jecxz
add
ss
outsl
jg
jnp
pusha
shll
aam
ds
sub
insl
inc
repnz
sub
sub
push
in
shll
jnp
dec
popf
in
xchg
repnz
jle
sar
sbb
jne
int
dec
cmp
sbb
xor
push
testl
push
out
movsl
out
out
xchg
movsl
dec
js
inc
push
pop
xchg
ds
mov
js
std
jae
add
jge
add
inc
mov
frstor
shll
icebp
push
movsb
mov
js
or
cld
hlt
lahf
mov
mov
jl
rol
ret
and
dec
sarb
dec
xchg
and
cmc
jg
sbb
jb
stos
dec
cli
push
lahf
cmpsl
mov
xchg
push
ja
jmp
fistpll
movsl
lea
xlat
xchg
int3
xchg
push
mov
jae
stos
add
stos
xor
dec
mov
ret
or
mov
jg
xchg
push
adc
and
jb
rorb
in
test
or
jle
xchg
push
mov
js
ficoms
sbb
adc
or
imul
mov
inc
sub
sub
xchg
adc
and
jl
out
sarb
dec
pop
stc
fstpt
insl
add
lods
rorl
push
arpl
ja
inc
add
js
jge
out
incl
inc
push
pop
mov
inc
fdivrs
xchg
xchg
xchg
mov
add
ss
aaa
sub
jp
test
mov
out
dec
mov
aas
loop
lret
mov
mov
add
mov
sbb
jo
or
xchg
mov
out
leave
scas
mov
roll
addr16
cltd
mov
fisttpl
mov
add
push
cwtl
sub
push
fnsave
jp
fnsave
or
les
or
loop
pop
sbb
std
mov
pop
dec
das
xor
adc
out
insb
in
test
imul
imul
pusha
mov
and
inc
and
mov
xchg
lods
xchg
fsub
jle
les
fisubrs
xchg
ds
inc
adc
mov
jg
sbb
scas
dec
out
inc
sub
mov
sub
adc
js
xchg
push
add
int3
ljmp
in
jecxz
adc
add
mov
xor
outsb
xor
jno
push
adc
or
scas
lret
out
mov
test
jecxz
cmpsb
sub
dec
lret
xor
mov
inc
inc
push
arpl
test
scas
imul
pop
lods
xchg
push
ret
or
lret
loope
mov
sbb
sbb
in
xor
mov
jg
movsl
cwtl
fwait
inc
and
sbb
pushf
jmp
adc
js
sub
push
hlt
jbe
mull
lock
fsubp
repnz
sub
xchg
jmp
adc
scas
inc
add
test
pop
repnz
cmc
cmpsl
jae
andl
cpuid
and
xorl
mov
das
jecxz
add
and
mov
arpl
rcl
pop
and
out
js
pmullw
repz
fcompl
dec
or
mov
mov
in
outsl
mov
jp
inc
push
shl
repz
mov
adc
rcr
in
cmpsb
cmc
mov
inc
movsb
xchg
push
pop
or
push
jne
movsb
aad
push
push
xchg
lock
jo
and
loope
mov
rorl
add
mov
and
dec
adc
lds
scas
push
cmp
mov
jg
aad
fcoml
sub
mov
aam
and
jl
or
xor
fwait
je
in
xchg
imul
pop
insb
sbb
ljmp
data16
jnp
outsb
mov
mov
dec
movsb
xchg
rorl
lret
sub
or
notb
repz
sahf
xor
lock
adc
cmp
push
or
jb
popf
jo
xor
out
pavgb
xchg
mov
jb
clc
das
es
xor
das
push
call
mov
shrl
jns
cwtl
andb
jnp
test
xchg
mov
xor
add
out
pop
scas
mov
enter
inc
xchg
rorb
sub
and
mov
popa
call
sub
fwait
idiv
movsl
xor
std
pushf
mov
icebp
jl
notl
cwtl
cmp
sbb
in
fidivrl
scas
out
cmpl
lock
lret
jne
push
mov
xlat
bound
aam
jo
jmp
sbb
js
pop
xchg
ljmp
adc
loop
push
push
cwtl
aad
xor
sbb
push
add
shr
mov
push
or
pop
mov
mov
into
cmc
mov
imul
test
addr16
and
jo
mov
cmpsl
jno
andl
out
cwtl
or
ss
out
mov
cmp
jmp
cmp
pop
pop
shr
sub
in
and
pop
scas
int3
movsb
aaa
push
lds
inc
inc
and
mov
jo
sbb
insb
sbb
push
adc
ret
pop
jle
out
cmp
arpl
add
inc
adc
jg
push
pop
outsl
inc
jbe
inc
test
repnz
mov
test
xor
imul
adcb
sub
sarb
icebp
pop
push
dec
sbb
xchg
mov
push
lea
xchg
adc
jecxz
inc
hlt
cld
lret
jns
mov
sbb
lret
lret
mov
mov
add
add
add
mov
cmp
int
les
outsb
adc
jno
adcb
add
dec
push
inc
xchg
xchg
jnp
gs
js
pop
mov
fcompl
cmp
inc
lods
lods
jg
imul
jl
or
push
mov
jg
adc
add
pop
xor
addr16
mov
cmp
stos
loopne
and
cmc
inc
sub
into
jle
sarl
test
mov
cmp
mov
jge
mov
test
lea
push
mov
adc
jmp
pop
cmp
sbb
sub
cmpsl
bound
sub
dec
mov
mov
or
mov
pop
mov
xchg
sbb
sub
loop
mov
mov
push
ja
mov
adc
xchg
sub
aas
xchg
push
in
push
fcom
fimuls
and
imul
out
lods
ja
lret
cs
dec
dec
insb
aad
pop
inc
xor
mov
mov
xor
or
sti
push
pusha
cmp
or
push
mov
loope
cli
out
xor
in
inc
decl
xor
inc
popa
and
pop
jno
mov
fldl
dec
jmp
xchg
adc
push
sub
cmpsl
and
dec
xchg
arpl
mov
cld
dec
jg
xchg
xchg
add
mov
sbb
inc
rep
pop
test
hlt
std
or
or
scas
adc
lods
jb
clc
orb
mov
mov
aam
xor
vmovq
jo
xlat
sub
push
rorb
pop
call
inc
test
ret
mov
outsb
mov
test
mov
jl
dec
dec
fiaddl
pop
into
stos
mov
sbb
xor
push
les
ror
mov
dec
push
mov
mov
push
test
cwtl
jb
jo
fisubl
stos
sbb
sbb
push
or
test
rcrl
bound
fdivrl
mov
dec
push
sbb
daa
hlt
insb
adc
cmp
adc
xchg
lret
sti
je
push
inc
movsl
push
push
push
pop
imul
out
test
mov
xchg
push
adc
xchg
xor
bound
stos
jle
dec
enter
repnz
and
fisubl
cmc
in
dec
add
testb
adcl
test
xchg
out
inc
fwait
ret
movsl
xchg
outsb
lock
cmp
xor
imul
leave
pop
test
mov
mov
mov
jmp
pop
cld
jb
adc
lods
pop
stos
xchg
jmp
lock
pop
inc
scas
test
dec
sbb
bound
out
mov
cmpl
push
pop
sub
stos
insl
scas
pop
inc
inc
adc
add
mov
inc
jne
fimuls
lahf
jle
jns
lret
mov
shl
call
enter
int
scas
ds
cmp
stos
dec
push
hlt
add
pop
int
gs
mov
lods
jne
sub
orb
adc
test
cs
lea
addr16
je
xchg
cmp
pushf
push
stos
decl
adc
lcall
fistpl
shrb
cmp
mov
mov
fsubl
mov
out
es
imul
js
daa
jp
lods
bound
mov
fs
cld
xor
jnp
pushf
js
inc
cld
mov
out
sub
xor
and
ja
dec
jmp
and
xchg
mov
cmp
aas
mov
and
lea
orb
mov
popa
and
mov
pop
jbe
mov
sub
jo
jl
cmpb
out
fdivl
inc
popf
or
add
add
pop
popf
jae
popa
cmpsb
pop
and
pop
push
out
aam
incb
jmp
push
add
fwait
xor
dec
and
mov
cltd
orl
cmp
psrld
cld
pop
sarl
pop
sbb
das
je
mov
mov
scas
leave
jnp
and
call
dec
in
adc
cltd
sub
sbb
insb
je
push
cli
fwait
lahf
or
xor
jne
inc
or
fmuls
mov
push
rcl
clc
jne
int
and
hlt
or
lea
loop
rcrl
adc
jl
cli
sub
mov
push
xlat
and
inc
fcmovne
aad
mov
in
push
cmc
nop
cmp
mov
mov
mov
jg
repnz
iret
sbb
vunpckhpd
dec
out
notb
mov
and
xlat
in
mov
xchg
into
mov
and
and
lcall
stc
ret
ja
pop
fs
lcall
imul
and
xlat
sbb
repnz
inc
js
inc
jb
xchg
movsl
push
push
inc
and
nop
push
jge
and
jl
cmp
adc
pop
movsl
into
adc
jge
lret
loop
mov
nop
sbb
jp
and
aas
push
lods
aas
and
nop
in
xor
add
cmpsl
cmpl
cs
sub
push
jnp
cs
mov
jge
cmp
fstpl
lea
insl
fistl
mov
pop
in
stos
push
subb
insl
cmp
jmp
fmuls
sahf
std
gs
xor
je
add
pop
icebp
popa
shlb
es
cmpsl
iret
push
xchg
mov
insb
popa
mov
outsl
jle
aas
sbb
inc
das
jmp
mov
push
shlb
frstor
jne
dec
adc
sahf
jnp
inc
and
dec
adc
je
sbb
popa
adc
call
ret
ds
sub
mov
pushl
push
cmp
je
ret
mov
cmp
aam
lea
dec
mov
aaa
jge
push
test
std
movsb
or
xchg
aaa
arpl
fidivs
test
dec
out
movsl
mov
jge
adc
pop
test
or
xchg
inc
lahf
sub
xchg
in
movntq
out
jb
in
fisttpll
not
mov
lret
and
inc
inc
sbb
add
mov
sbb
inc
xchg
and
add
shlb
cs
shll
daa
cmp
pop
imul
cltd
dec
sbb
mov
jbe
lods
jno
mov
pop
mull
cmp
mov
inc
clc
clc
hlt
lahf
sbb
popf
push
push
mov
jmp
xchg
xor
cli
addb
xchg
sub
bound
fxch
sbb
loopne
push
or
mov
inc
mov
jmp
inc
mov
stos
pop
or
into
movsl
js
cmp
in
iret
push
nop
push
stc
loop
and
add
rclb
push
jns
xor
insl
ljmp
adc
sub
lods
lock
push
testl
scas
ds
push
rcll
mov
xor
push
and
fists
add
fcomip
mov
or
aam
in
mov
dec
push
adc
ss
outsl
mov
mov
lcall
cltd
cmp
jl
cwtl
mov
cmpsl
xchg
cmpsl
loopne
popa
sub
dec
push
cmp
mov
add
out
push
or
dec
xchg
pop
add
ss
push
cld
popf
and
dec
sbb
xor
fbstp
push
cli
jge
sbb
je
rep
mov
and
inc
xchg
add
adc
push
frstor
in
add
inc
inc
push
cmp
aaa
sbb
dec
push
sar
add
cld
mov
js
mov
or
cmp
xor
dec
jbe
mov
inc
inc
imul
mov
cmp
adc
out
sbb
in
pop
xor
and
daa
cmovl
jo
push
mov
das
adc
add
sub
addr16
xchg
orl
scas
into
pshufw
daa
sbb
imul
inc
mov
xlat
hlt
cltd
pop
jnp
sbb
mov
cmp
and
mov
or
vandpd
or
sub
test
fldl
addb
jg
fisubrl
jnp
popf
xchg
push
push
in
repnz
aaa
or
out
out
bndldx
mov
leave
and
outsb
add
push
mov
lea
fbld
fmull
xchg
fsubs
or
cmpsl
nop
repz
inc
outsb
repz
loopne
sub
call
dec
mov
mov
insb
stos
addr16
lcall
xor
cs
inc
mov
inc
mov
fwait
arpl
inc
jge
sbb
mov
mov
lea
pop
addr16
mov
sti
add
test
xor
push
mov
xor
sbb
stc
mov
mov
movsl
add
adc
sub
clc
push
pop
xor
int3
cmpsl
xor
inc
push
dec
sarl
lret
xor
push
fsub
ret
lods
icebp
add
les
negb
inc
or
mov
and
adc
adc
and
or
sbb
jae
mov
std
dec
inc
lock
add
je
jmp
rclb
ret
ret
sub
push
dec
dec
scas
mov
aas
sbb
leave
outsl
push
stos
std
inc
and
inc
fnsave
loope
cli
add
rorl
mov
lods
gs
stc
push
cmp
push
xor
push
mov
loop
mov
sub
jg
mov
out
inc
enter
mov
insb
in
lods
sbb
mov
sbb
lret
cwtl
loope
rcrw
dec
inc
mov
adc
pop
xchg
dec
cs
cmpsb
rclb
mov
xor
xchg
fmulp
push
add
lcall
lret
sbb
ss
inc
mov
or
movsb
mov
mov
lret
loopne
out
adc
push
stc
mov
mov
mov
or
push
inc
add
pusha
mov
mov
movsl
repz
mov
xorl
rol
pop
mov
and
test
mov
sbb
fidivrl
jl
mov
xor
lret
cmp
out
lret
jle
leave
fisubs
ret
in
xchg
sbb
sti
cld
add
cltd
xlat
repz
rcll
mov
ds
inc
dec
pop
mov
or
dec
pop
pop
mov
out
xor
push
shl
and
js
mov
or
jecxz
es
aaa
inc
shlb
pop
dec
hlt
test
jecxz
sarb
stos
cltd
and
data16
dec
mov
push
or
divl
bound
mov
cmc
adcb
inc
sbb
dec
jge
inc
aas
sti
add
addr16
inc
push
or
scas
push
jp
push
add
mov
mov
inc
mov
fwait
sub
xchg
sbb
scas
ret
mov
push
jb
enter
testb
xchg
loope
pusha
cmp
sbbb
push
sub
iret
iret
inc
and
ljmp
and
ds
stc
adc
xor
xchg
jnp
mov
lahf
push
or
pusha
add
fs
xorl
jp
mov
adc
bound
shr
ficompl
aaa
sub
popl
mov
cmp
jbe
dec
mov
xchg
xchg
sbb
xor
in
push
int
mov
in
jno
sub
mov
loop
out
mov
add
mov
add
pop
mov
clc
xor
dec
cwtl
dec
push
adc
mov
jl
outsb
stos
ret
mov
lcall
push
jnp
cwtl
dec
inc
sahf
pop
setge
cmp
adc
and
add
and
xchg
xorl
push
ror
xchg
add
push
aad
and
imul
push
aam
jb
push
addr16
xor
sub
cmp
add
outsb
dec
mov
push
fwait
stc
xchg
mov
inc
lods
sub
rorl
into
jae
push
pop
xchg
or
fildll
sub
mov
sbb
cmp
add
test
arpl
push
les
inc
jbe
jle
jbe
stos
imul
punpcklbw
mov
inc
dec
test
or
add
dec
cmpsb
adcl
lock
ds
inc
add
ja
clc
pop
dec
sbb
push
xor
ret
lea
adc
mov
cmp
cmp
mov
jno
sbb
shlb
sbb
dec
xor
jl
test
cmp
jg
lret
in
jae
repnz
call
pop
fs
pusha
fsubrs
dec
dec
push
inc
xchg
sti
dec
jae
inc
jno
sbb
mov
push
aas
sub
dec
popa
cmp
inc
cmp
iret
and
seto
into
xchg
mov
mov
mov
ret
cli
xchg
clc
xchg
js
or
push
std
arpl
add
sbb
test
and
jne
or
leave
pushf
cltd
int3
test
aaa
test
push
lods
xor
mov
in
pop
pushf
and
xor
and
gs
dec
rcr
rorl
out
jb
nop
push
stc
aas
in
pop
add
sub
sbb
call
test
inc
pop
mov
mov
call
xchg
stc
and
in
insb
lret
sbb
mov
sub
in
sbb
fbld
xor
in
ss
pop
adc
cmpsl
xor
sbbb
inc
or
push
mov
push
pop
dec
call
mov
sbb
test
sbb
cmp
fsts
adc
repnz
jle
mov
xlat
ss
or
testl
or
mov
gs
in
je
lods
cli
movsb
mov
clc
dec
pop
repz
aaa
add
shll
push
std
lret
out
cmp
mov
mov
repz
cltd
pop
mov
xorl
cmp
dec
int
sbbl
mov
push
cmp
adc
cmp
pop
insb
lea
shll
mov
cmc
xor
ds
xchg
repz
pop
xchg
adc
push
push
pop
pop
nop
loop
popf
pop
or
jecxz
arpl
daa
mov
mov
test
repnz
cmpsb
push
mov
pop
test
mov
jae
sahf
mov
mov
and
into
sub
outsb
orb
jae
push
inc
xchg
aas
repnz
and
jae
les
pop
and
lret
sub
es
xor
or
pop
iret
fisttpl
es
jbe
aam
out
pop
iret
xchg
jp
loopne
imul
outsb
insb
sar
xchg
mov
nop
repz
inc
sahf
mov
push
fsts
push
movsb
jmp
hlt
jo
hlt
add
mov
fsubrl
gs
pop
or
push
je
mov
push
jmp
push
gs
cmp
fcompl
je
fisubrs
inc
cltd
test
mov
mov
sar
dec
aad
shll
out
sbb
sub
or
push
and
pop
add
sar
cltd
sti
jne
aam
inc
sbb
dec
lods
scas
inc
dec
fimull
xchg
invd
sub
dec
rcrb
mov
ret
scas
cwtl
in
xchg
lcall
mov
lret
rep
sti
dec
jmp
xchg
je
dec
inc
andl
aam
fbld
push
xchg
xchg
loop
js
in
pop
dec
js
sub
test
ljmp
sub
dec
mov
mov
adc
outsb
popa
jmp
repnz
cmp
pop
jns
and
and
pushf
popa
xchg
adc
cmp
fdivs
add
xchg
fisttpl
movsl
inc
inc
jns
or
jp
mov
mov
test
imul
push
add
sub
pop
test
push
adc
mov
jg
inc
fidivs
xor
jmp
inc
popa
mov
and
xor
rcrl
dec
or
test
mov
in
inc
and
inc
inc
xor
mov
push
mov
clc
jp
mov
xchg
aas
lods
push
sub
push
rcr
xchg
and
lcall
sub
or
pusha
inc
ja
gs
xchg
mov
sahf
mov
mov
ret
jnp
jb,pt
rcl
jo
popa
push
inc
adc
inc
and
das
sbb
out
jae
adc
cmpb
xchg
xor
xor
rorl
push
adc
in
lret
jl
fldl
popa
jg
push
popf
xlat
jne
xchg
mov
hlt
int
lahf
sub
adc
aad
xlat
addr16
add
mov
push
bound
adc
hlt
addr16
in
dec
cs
mov
pop
inc
rorb
push
mov
mov
xor
int
fistpl
lods
pop
fwait
bound
jb
sti
xchg
call
stc
popa
roll
mov
mov
daa
outsb
fcompl
xchg
inc
incl
sub
xchg
mov
sub
mov
int3
or
fdiv
lea
cmp
dec
cmpsb
test
jne
cld
lea
lret
xor
jbe
and
cs
inc
outsl
fdivr
sbb
mov
push
outsl
pop
mov
mov
sub
add
push
fildl
xor
movsl
and
enter
mov
mov
cltd
sar
or
out
xchg
add
adc
inc
fisubl
xchg
fdivr
xchg
pop
enter
push
adc
stos
and
push
sub
push
xor
repnz
jne
push
stc
mov
fwait
xor
xlat
sbb
sub
mov
pop
hlt
inc
enter
in
cmc
cwtl
push
ss
adc
das
or
outsl
scas
js
xchg
sbb
repz
lds
xor
jb
addb
sbb
xchg
xlat
test
lea
pop
pop
mov
push
sahf
loope
int3
pop
or
dec
call
dec
and
shll
sbb
adc
fisubs
push
pusha
in
lcall
mov
pop
xor
imul
fstp
notl
mov
dec
cmp
scas
sub
adc
test
fnstsw
or
in
aas
push
pop
or
pop
ljmp
in
loopne
mov
jae
pop
sbb
out
add
ljmp
sbb
out
rcrb
adc
push
shl
mov
mov
jnp
mov
mov
ficoml
popa
lret
push
movsb
leave
negl
fs
pop
in
mov
add
mov
std
sahf
jbe
bswap
or
jns
outsl
lret
repnz
imul
sbb
dec
jecxz
popa
ret
icebp
aaa
in
popa
cmp
sarl
add
jne
mov
sub
lahf
or
clc
daa
imul
push
mov
or
loopne
jge
lock
xchg
stos
add
loop
fwait
mov
icebp
mov
fists
adc
movsb
outsl
mov
sub
dec
fisttps
std
cmpsl
clc
sbb
gs
ljmp
nop
push
add
mov
imul
clc
in
repz
or
test
pushf
cmpsl
adc
push
sbb
dec
mov
xchg
or
jae
push
push
clc
pop
sti
adc
add
inc
pop
mull
aam
cmc
fs
dec
fldenv
andb
push
sub
mov
inc
fldlg2
add
mov
pop
cmp
xor
jb
or
imul
ficoms
sbb
lea
jmp
mov
icebp
lock
ret
xor
dec
mov
jb
inc
clc
mov
inc
lock
dec
mov
add
sbb
pop
enter
mov
jae
daa
cmp
jmp
mov
lret
data16
rcrl
cmc
je
insl
sbb
enter
mov
cmp
mov
repnz
repnz
mov
into
mov
jae
icebp
mov
mov
shrl
and
or
pop
mov
or
jnp
add
mov
xlat
stc
mov
movsl
in
jo
daa
ja
int3
mov
ret
add
orb
out
cmpsw
cmpsb
js
test
notb
sbb
sahf
adc
cmc
bound
lock
push
scas
adc
dec
ja
adc
loopne
and
cli
je
or
pop
or
jae
test
inc
inc
mov
lock
dec
xchg
or
movsb
mov
xchg
out
gs
test
xchg
inc
sub
lds
fdivrp
rcrl
push
mov
inc
pop
loopne
push
addr16
repz
test
push
xchg
xchg
or
fisttpl
sbb
sub
out
rcl
ljmp
jmp
mov
cmc
mov
add
pushf
sahf
rcl
neg
cmp
push
out
and
pushf
inc
cmp
fcmovnb
scas
data16
out
inc
mov
xor
add
inc
imul
mov
add
push
pop
or
adc
fldt
cmp
sbb
out
jmp
testl
les
nop
or
sub
cld
dec
ljmp
sbb
insb
stos
push
xor
mov
dec
dec
sbb
mov
sub
add
js
sbb
jne
cvtdq2ps
inc
adc
imul
out
or
ljmp
pop
js
outsb
ret
shl
or
xchg
xchg
loopne
xor
cmpsb
imul
or
jae
gs
xchg
fcoms
lret
inc
bound
jns
and
nop
test
dec
scas
in
adc
icebp
stos
add
cli
cmp
jg
cld
mov
push
cmp
sub
shll
nop
addl
and
call
imul
sub
add
test
push
push
push
cmc
into
push
or
stc
les
imul
add
mov
loopne
pop
and
xor
lea
js
ja
sub
xor
outsl
sbb
pop
lret
dec
xchg
jns
cmpsl
mov
repz
dec
sahf
popf
mov
lahf
orl
es
rclb
ficomps
push
mov
nop
push
jb
push
repnz
push
push
or
in
stos
sbb
jge
repz
sub
xchg
add
and
bound
pusha
mov
cmp
mov
cmp
je
loopne
mov
in
dec
add
stos
je
cmp
ds
inc
cltd
jge
cltd
adc
out
fnstsw
and
mov
mov
and
jmp
fwait
add
mov
popa
add
insl
ficoms
fidivrs
inc
sahf
sbb
movsl
xor
or
push
aas
jle
or
inc
mov
icebp
sub
out
cld
fisubrl
dec
lea
repz
test
and
mov
cmp
cmp
inc
fcmovnb
popa
cmc
jp
mov
adc
ret
nop
add
insl
adc
lret
enter
addr16
jge
jnp
mov
pop
pop
aas
iret
pop
mov
rcl
je
in
bnd
imul
jp
mov
outsb
xchg
pop
push
mov
sbb
ret
sub
adc
fisubrs
arpl
ficoml
pusha
xchg
int
fsubp
out
mov
sbb
fs
lods
add
enter
cmc
push
lahf
add
or
push
sarl
pushf
add
fisubs
sbb
adc
mov
inc
inc
sub
jae
call
scas
pop
aaa
repnz
not
xor
jmp
hlt
push
in
stos
insb
inc
cs
rol
stc
jo
push
push
xchg
mov
cwtl
xor
pop
dec
pop
sbb
mov
dec
xor
dec
cmp
cmp
jmp
jae
leave
nop
arpl
movw
pop
and
ds
xor
sub
test
lea
int
push
mov
inc
adc
sub
jl
icebp
or
push
mov
sub
sbb
jmp
adc
in
adc
jno
adc
mov
enter
lret
mov
out
mov
movsb
shrl
pop
loop
lahf
or
cmp
and
push
das
mov
repz
sub
aas
push
dec
xchg
scas
adc
mov
or
push
sub
push
sti
pushf
xchg
out
in
bound
out
cs
cmp
xchg
xchg
xchg
xor
mov
insl
adc
jp
sbb
std
pop
fs
lds
test
fsubs
adc
cwtl
xchg
aaa
andl
pop
xchg
imul
or
repnz
add
xchg
loop
aad
xchg
mov
jmp
jo
lea
inc
rolb
lret
nop
xchg
add
push
adc
stc
and
fidivrs
dec
cmp
pop
jmp
clc
hlt
pushf
out
popa
sahf
xchg
fstl
sahf
sub
mov
mov
sbb
mov
xorl
dec
fsubl
cmc
sbb
gs
ljmp
arpl
pop
aaa
cmp
jle
lcall
loopne
movsb
pusha
lods
cmp
sub
sub
jnp
cli
pop
dec
jns
push
loope
jb
dec
adc
push
jb
pop
jnp
mov
call
and
cmpsb
movsb
adc
dec
cli
insl
mov
scas
sbb
jmp
adc
leave
xchg
cmp
or
or
ret
push
mov
xor
jg
cli
xchg
imul
addl
aas
cmp
stos
and
xor
jb
jmp
push
push
lock
addl
xor
mov
sbb
and
ljmp
ret
cmpsb
pop
lods
push
ret
sbb
xchg
lahf
xor
popa
gs
stos
fldcw
add
leave
fwait
popf
add
xor
iret
aad
stc
sub
fcom
jo
arpl
mov
inc
cmp
push
inc
fidivrl
pushf
sub
outsb
push
ss
adcl
xchg
fucom
jbe
and
decl
jae
js
cmp
imul
jo
daa
lret
sbb
jbe
es
mov
loopne
pop
andl
pusha
fimull
or
sbb
or
test
clc
test
in
repnz
fiaddl
divb
call
jecxz
ja
jae
mov
aam
sbbl
xchg
js
std
and
stos
add
jo
insl
xor
inc
out
mov
mov
ret
ret
movsl
lcall
and
xor
jmp
or
and
xor
pop
cmp
push
aaa
out
inc
lock
adc
fimull
mov
cmpsl
sbb
adc
loope
dec
jb
mov
out
or
xchg
subl
cmp
dec
xchg
pop
mov
repz
cmp
inc
sub
inc
and
cld
mov
inc
mov
sub
mov
xlat
mov
test
ss
outsb
adc
bound
stos
xchg
dec
cmp
adc
leave
and
xchg
adc
mov
mov
jmp
rcll
rcrl
dec
push
xchg
fstp
jp
stos
mov
jne
inc
jae
lea
dec
test
sbbb
cmp
or
in
aam
or
jno
psubusw
addb
sub
and
push
fs
mov
test
xchg
pop
or
test
inc
mov
les
test
sbb
stc
insb
popf
xor
xchg
xchg
dec
vshufps
clc
jns
out
sarb
stc
add
cmpsb
mov
and
mov
sub
mov
push
cmpsb
scas
pop
pusha
fnstcw
xchg
cmp
test
iret
xlat
pop
push
inc
jge
aas
xchg
je
ja
inc
shlb
pop
mov
and
mov
aam
les
mov
xor
roll
mov
outsb
mov
rorl
sub
mov
mov
jp
dec
jmp
shl
inc
cmp
insl
in
add
decl
lret
jo
and
and
jno
push
je
ljmp
jo
mov
into
add
pop
cmp
addl
cwtl
outsl
mov
dec
and
xor
cmpl
clc
lahf
sbb
mov
dec
stc
mov
dec
fstl
repnz
shr
mov
lret
scas
fdivr
mov
ret
repz
bound
push
lock
das
xor
add
xor
loop
out
pop
lock
lret
je
xor
mov
cmp
or
js
lret
fwait
sbb
mov
mov
fwait
les
rcrb
js
fsubr
shll
cmp
xchg
jbe
js
sahf
sub
and
addr16
cmp
and
push
cmp
add
ss
cmp
stos
inc
test
jne
jae
loope
cld
outsl
mov
pushf
in
stos
sti
mov
pop
push
sub
mov
pop
sbb
pop
in
in
fsubrp
out
ret
cld
lods
divl
scas
inc
dec
loop
adc
mov
cmp
sbb
xchg
or
dec
cmp
shrb
das
mov
mov
enter
or
loope
inc
cmc
fildl
and
cmp
mov
sub
sti
push
jne
inc
pusha
sbb
scas
adc
mov
stos
pop
cmp
aam
push
imul
clc
fadds
adc
notb
jnp
bound
outsb
cmp
xchg
xor
shr
iret
push
cmp
lods
mov
push
or
jae
out
out
int
ja
sbb
and
ljmp
add
sahf
pusha
push
cmpsb
cmp
mov
test
out
jl
insb
inc
xlat
icebp
jnp
inc
mov
call
outsl
dec
mull
push
cmp
xor
int
ljmp
in
fstl
addr16
dec
dec
call
loopne
or
lea
jmp
mov
jmp
outsl
mov
rcr
add
rcrb
adc
xchg
push
fadd
mov
mov
push
scas
xor
xchg
xchg
dec
xchg
addr16
ss
and
mov
sbb
and
jae
aad
test
fwait
inc
addr16
xor
repnz
ljmp
bound
call
jle
stc
mov
dec
xor
cld
clc
push
or
jne
sub
sbb
dec
lahf
or
or
jecxz
inc
fwait
aas
adc
mov
xor
sbb
and
sbb
adc
popw
jmp
push
int
adc
cmp
mov
pop
push
imul
inc
push
fsts
mov
sub
fadd
fiadds
and
int
mov
inc
add
xchg
xchg
outsb
orl
mov
sub
sub
cmp
dec
and
mov
cmpsb
cld
inc
pusha
mov
mov
push
xor
pop
push
out
ficoms
std
jne
cmp
cmp
stos
push
sub
sarb
outsl
pop
in
outsb
or
inc
push
cmp
enter
cmp
add
cmp
nop
es
xchg
aam
xchg
sbb
dec
rcl
insl
shlb
xchg
and
enter
hlt
cmp
popf
inc
in
xchg
jno
mov
cmpsb
ja
dec
xchg
jge
mov
jmp
add
ret
pop
inc
popf
popf
or
pop
and
lret
in
stc
push
js
mov
xchg
popf
out
adc
int3
data16
jns
cmp
mov
push
jp
ja
rolb
sbbl
add
adc
push
cli
sub
das
ja
hlt
cltd
mov
mov
jnp
sub
pop
es
mov
and
pop
enter
pop
and
sub
cli
lea
add
cmc
and
inc
repz
push
dec
aas
repz
scas
pop
mov
push
cmp
mov
dec
mov
outsl
clc
mov
popa
inc
ja
mov
sub
xchg
lds
das
sub
xor
push
jbe
sbb
retw
ret
mov
inc
loopne
icebp
sahf
mov
or
add
dec
test
lret
and
add
jmp
loopne
mov
push
dec
ss
call
insb
xor
adc
fwait
test
rolb
adc
sahf
xor
nop
decl
mov
xchg
xchg
mov
cltd
lret
jp
pop
arpl
dec
out
jb
fldt
and
das
xor
incl
fdivrl
repnz
pop
dec
insb
pop
inc
cmp
cmovnp
out
mov
daa
lods
pop
jb
pop
sar
enter
cmc
inc
shlb
jb
inc
xor
xchg
movsl
jne
les
add
decb
mov
fnstsw
pop
lret
mov
and
out
xchg
cltd
inc
out
sahf
call
arpl
jge
out
push
fdivr
loope
push
jbe
xchg
lret
jp
cmpsl
inc
inc
pop
outsl
pusha
mov
in
fstpl
lret
mov
pushf
add
bound
les
lock
movsl
icebp
mov
in
popa
jo
xor
mov
sub
jecxz
pop
fisubrs
cld
out
inc
cmp
movsl
fwait
orb
pop
sub
movsl
ret
lds
cmp
dec
iret
push
notb
push
cmp
scas
mov
cmp
rclb
pop
sub
dec
mov
mov
subl
ret
ja
cmp
imulb
jle
dec
inc
mov
lea
test
mov
lret
rcrl
jno
sub
bound
or
mov
pop
or
jb
int3
sbb
and
or
ja
push
mov
jae
sub
call
cltd
mov
push
jl
mov
cwtl
cwtl
in
push
sub
push
mov
insl
std
push
std
sahf
addr16
mov
inc
iret
stos
addr16
stc
cltd
push
in
mov
imul
mov
add
mov
pop
xchg
xchg
pop
push
cmpsb
repz
pop
daa
xor
sbb
sub
outsb
push
push
xor
cmpsb
adcb
cmp
mov
cmpsl
push
popf
arpl
or
add
rcll
xor
jge
lahf
arpl
xchg
cltd
dec
xor
bound
movsb
fisttpll
push
fisubrs
ja
mov
lahf
ror
repz
out
mov
adc
inc
lahf
cmp
sti
mov
jae
jae
add
pop
sarl
popf
repnz
jp
scas
lea
sbb
mulb
cwtl
push
inc
cmp
mov
xor
add
pop
and
faddl
sarb
outsb
sbb
mov
xchg
mov
filds
jne
and
lods
mov
add
cmp
add
daa
mov
subl
outsl
imul
pop
xor
daa
adc
and
subb
add
les
aad
out
insb
or
insb
scas
cli
sub
sbb
loope
movsl
push
xchg
or
sbb
jnp
add
push
add
vmovsd
jns
mov
jl
and
icebp
loopne
icebp
lods
mov
mov
sub
adc
adcb
fs
sub
jns
outsb
or
add
fs
xor
std
jge
fdivp
das
and
xlat
or
fcmovne
in
aas
dec
test
jp
mov
fdiv
cmpsl
cmpb
jnp
sub
movsl
mov
sub
in
ja
mov
jl
sub
filds
flds
mov
out
fistl
jecxz
mov
pop
lds
inc
push
int
pop
test
clc
fcomp
push
cmpsb
scas
pop
in
test
jl
xchg
jecxz
xor
push
test
dec
ret
adcb
push
sahf
or
xchg
push
ja
sahf
pop
ljmp
inc
dec
movsb
and
in
int3
imul
mov
hlt
les
cmpsl
push
add
adc
jmp
or
enter
and
adc
pusha
jns
subb
int
lret
sub
xchg
flds
cwtl
int3
adc
in
dec
imul
pop
decl
dec
leave
es
dec
xchg
or
mov
dec
pop
cmpsl
stos
ficoml
mov
push
js
dec
or
mov
jp
out
jg
rcr
stos
push
pop
push
jp
std
mov
fisubrl
mov
pop
enter
mov
mov
int
lret
imul
inc
push
and
aad
push
sub
sbb
push
inc
test
sbb
xor
ljmp
push
in
rcll
sub
push
adc
jle
adc
lds
out
ljmp
rcrl
xchg
inc
sbb
outsl
sub
inc
jecxz
aaa
in
jl
lods
jge
inc
stos
call
mov
cmp
aas
adcb
dec
mov
ret
cmp
pop
repnz
cltd
jb
popa
fdivs
and
pop
lock
cmp
testl
cmp
int
mov
push
pusha
loop
mov
xor
add
enter
bound
mov
mov
xchg
out
rcl
add
push
jb
push
das
push
gs
pop
adc
hlt
jle
aaa
pop
movsl
fiadds
and
inc
movsl
mov
dec
inc
out
or
mov
mov
loop
xchg
iret
pop
clc
stos
mov
ficoml
iret
ret
mov
lods
inc
mov
sti
ds
mov
fldenv
mov
xchg
sti
aas
pusha
pop
fdivr
stc
push
adc
add
imul
mov
out
call
out
add
jnp
sub
jb
dec
out
out
notl
inc
jnp
push
mov
mov
pop
test
push
mov
pop
ficomps
cmp
fadds
push
mov
inc
pop
les
clc
mov
dec
push
mov
div
popf
aam
lahf
mov
inc
add
int
das
pushf
mov
cmovb
dec
dec
mov
inc
test
scas
rcrl
aaa
jno
xchg
in
dec
jp
xchg
les
ret
xchg
ja
adc
fimuls
jbe
jle
and
repnz
push
in
aad
popa
dec
pusha
into
pop
sub
jnp
loopne,pn
cwtl
pop
mov
jg
push
dec
adc
xor
adc
pop
cld
push
jge
xchg
push
cld
adc
inc
jecxz
xor
or
push
ss
xor
in
push
push
push
pop
arpl
loope
adc
cmpsl
mov
insb
or
repnz
dec
adc
arpl
inc
in
loope
cwtl
push
adc
les
popf
fnstcw
lahf
cmp
data16
test
stos
pop
enter
jmp
cli
sub
test
flds
cmp
adc
dec
je
inc
es
popa
mov
filds
xor
imul
add
lcall
cld
sub
mov
and
pop
paddusb
xor
out
aas
adc
and
insb
rol
mov
adc
mov
outsb
adc
cmpl
cli
inc
mov
lahf
xchg
cwtl
lahf
addr16
lcall
jb
and
pop
sbb
pop
mov
push
repz
jb
pop
xchg
sbb
fsubr
imul
cmpsb
cmpsb
pop
data16
sub
arpl
rcll
into
and
in
xchg
pop
xchg
popf
vpcmpgtb
insb
cltd
cmp
popa
lret
cmc
mov
rol
gs
shl
das
xchg
sub
mov
or
push
rorb
push
xor
std
int3
repz
iret
jmp
or
mov
lcall
sub
pop
mov
mov
call
pop
jmp
lock
push
nop
dec
jge
inc
pop
cli
mov
mov
sub
test
or
push
sti
call
leave
add
hlt
sbb
jns
pushf
or
insl
xchg
inc
mov
mov
mov
pop
and
lret
or
addb
outsl
movsl
ja
adc
cmpsl
dec
mov
inc
adc
or
jge
mov
mov
jns
sbb
test
cs
insb
xchg
ja
fs
pop
inc
into
mov
mov
dec
stos
mov
lcall
add
or
loop
dec
and
sar
sub
sub
fstp
or
hlt
or
jb
inc
jmp
add
sub
jg
xchg
xchg
aaa
mov
ret
mov
push
arpl
daa
cli
icebp
arpl
mov
sbbb
inc
mov
mov
orb
sbb
xor
ret
xchg
in
jge
faddl
js
mov
push
aam
sub
repnz
jno
add
mov
push
mov
adc
jmp
std
into
adc
pop
pop
or
or
pop
mov
cmp
push
push
lret
in
out
add
xor
imul
mov
pushf
loope
cltd
sub
xchg
int
xor
adc
cltd
mov
inc
and
push
movsl
mov
in
jecxz
dec
icebp
adc
adc
out
mov
or
mov
xchg
imul
fstpt
out
mov
push
or
aam
fcom
fcoms
xor
into
mov
inc
mov
or
mov
mov
sbb
xchg
pop
mov
mov
pop
shlb
cmp
out
xchg
sub
xor
lea
pop
jnp
ret
insl
pop
test
xor
push
jbe
xchg
fisubl
or
mov
cwtl
ss
pop
cmpsl
mov
push
les
pop
movl
scas
sbbl
xchg
pop
cli
insb
jo
dec
cmp
xchg
std
pcmpeqw
enter
adc
push
mov
pushf
jg
pop
dec
icebp
mov
iret
fiadds
out
lcall
mov
fs
xchg
dec
sub
jnp
pop
gs
and
addr16
pop
js
dec
xlat
insl
inc
pop
fimull
movsl
cmp
push
mov
aad
mov
outsb
add
pop
and
cld
cmp
mov
mov
pop
test
sub
stos
pop
lods
pop
add
mov
loope
push
fldt
jae
mov
xlat
rcrl
pop
dec
mov
popf
in
in
pop
pop
out
data16
jbe
mov
lods
or
sar
mov
pop
lock
aad
mov
mov
cmp
loopne
push
jp
or
stc
shlb
sbb
imull
adc
daa
ss
jno
iret
addr16
add
inc
and
cli
test
pop
mov
xchg
mov
inc
dec
lret
sbb
xlat
cld
fimuls
fwait
mov
xchg
aas
aas
xchg
mov
cld
movsb
xchg
shlb
xchg
jp
and
xchg
ret
addr16
push
pop
cmpsb
frstor
jecxz
sbb
addb
cwtl
xchg
fistpll
rcl
or
loop
nop
add
popa
xor
adc
cmc
or
stos
adc
push
sbb
orl
pop
pop
or
pop
fistl
adc
mov
pop
les
push
sub
adc
stc
cmp
push
into
lods
push
add
lods
out
lods
pop
pop
and
scas
pop
clc
mov
sar
xchg
scas
daa
inc
add
adc
test
test
mov
out
and
pop
mov
mov
xor
add
je
lock
push
mov
nop
test
sbb
xlat
push
push
mov
jne
xchg
popa
movsb
push
or
sub
insl
ds
rcrl
enter
mov
ret
push
cmp
push
mov
clc
push
mov
jmp
lret
sub
jae
add
push
in
adc
es
pop
or
cmpsl
repnz
outsl
xchg
and
imul
aas
mov
mov
inc
dec
sbbb
lods
mov
arpl
pop
xor
fisttps
shl
push
inc
jp
xor
inc
xor
sbbl
jnp
or
jecxz
lahf
or
dec
add
jl
and
and
adc
xchg
inc
inc
insb
notl
pop
jmp
cltd
jbe
or
and
mov
ss
mov
inc
jge
jno
and
scas
fcompl
xchg
dec
ret
int3
inc
jbe
movsb
ja
lcall
mov
int3
jecxz
es
mov
push
xchg
test
fstl
jecxz
push
jbe
cltd
adc
das
out
jbe
addps
jb
mov
push
jns
xlat
inc
cmp
sahf
mov
adc
jbe
arpl
dec
shlb
fcmovnu
cmp
pop
dec
out
jb
dec
fcmovne
lea
test
stc
jo
add
sub
aam
xor
cmp
mov
shrb
stos
shll
mov
dec
xchg
adc
leave
dec
insb
shlb
add
insl
sub
dec
roll
and
add
imul
pop
icebp
fdivr
stos
nop
out
jo
push
fsub
enter
mov
mov
lahf
fstpl
mov
pop
ljmp
cmp
gs
pop
repz
xchg
jl
adc
and
js
lods
sub
jo
int3
add
xchg
in
faddl
rep
in
jge
cwtl
mov
adc
js
sub
lds
fildll
xchg
cwtl
aam
mov
adc
and
jmp
test
loop
insb
pop
fwait
push
inc
sub
fbld
neg
xchg
arpl
andl
scas
adcb
rcrb
cld
cld
in
shl
mov
btc
inc
adc
test
cmp
adc
xchg
std
es
pop
fwait
xor
xor
sbb
jge
jns
mov
dec
pop
push
inc
or
fiaddl
test
std
xchg
or
jp
pusha
mov
xor
add
lahf
cmp
sbb
push
ljmp
loope
ds
int
sub
shll
xchg
and
js
push
orl
adc
jmp
cs
mov
sub
xor
es
jo
sbb
pop
data16
mov
mov
add
push
mov
adc
or
sub
arpl
cmc
pop
mov
enter
mov
movsl
mov
fsubrs
aas
imul
dec
dec
fs
cmpsb
fwait
in
jns
mov
sbb
mov
cmpb
out
and
sbb
aam
sub
test
ljmp
gs
loop
sub
jmp
ja
pop
cld
adc
push
jecxz
testb
pop
pop
in
jmp
mov
adc
mov
imul
cwtl
dec
cmp
lods
pop
pop
imul
mov
jle
movsl
sti
stos
ljmp
test
mov
enter
enter
mov
xchg
lea
or
or
mov
push
or
xchg
inc
divb
jae
shr
ss
cmp
fbld
lret
loopw
stc
jp
loopne
push
je
push
or
jg
mov
mov
rol
insb
sub
clc
dec
stos
shrl
call
cmp
or
dec
xchg
push
lret
in
inc
cmpsb
mov
mov
cmpsb
sbb
call
push
push
pop
adc
mov
fwait
lret
cmpsl
aas
js
ret
push
mov
scas
mov
inc
orb
es
stc
adcl
or
bnd
sbb
xor
cmpsl
stc
gs
pop
mov
popa
jle
cltd
mov
rcrb
mov
fucom
daa
sub
aad
cmpsb
movsl
xchg
inc
cmp
jb
jb
mov
sub
rorb
dec
cmp
sti
in
test
jmp
adc
pop
jg
sbb
insl
adc
mov
fwait
dec
fsubs
decb
loope
call
push
out
dec
lea
mov
into
inc
dec
popf
ljmp
inc
mov
data16
stos
push
dec
jne
ds
mov
mov
fs
adc
and
scas
xchg
mov
pop
dec
sbb
dec
mov
ret
cmp
in
cltd
hlt
xlat
js
int
jmp
adcl
cwtl
push
sbbb
mov
orb
xchg
sub
add
jmp
incl
lds
int3
dec
fisubl
xor
push
pop
shl
mov
cs
jle
sub
cwtl
into
in
rcrl
add
testb
stc
jns
aas
cld
sub
mov
ja
inc
jno
rclb
mov
xor
mov
add
add
jmp
test
out
dec
insl
test
clc
add
inc
sbb
shlb
dec
shl
dec
loopne
inc
mov
add
xchg
repnz
fisttps
xor
mov
cltd
cmpsl
or
push
cmpsb
push
mov
bound
cmp
fistpll
push
and
int3
jne
adc
fnstcw
xor
mov
jle
jecxz
loop
mov
mov
sub
cltd
adc
call
xchg
shlb
lea
jnp
xchg
cmp
and
mov
daa
inc
xchg
outsb
mov
shl
inc
jl
lods
leave
inc
jge
jnp
xor
sub
xor
ret
xchg
popa
push
push
test
movsb
xor
mov
shlb
push
inc
cmp
mov
dec
push
repz
or
aad
andl
arpl
in
mov
jmp
std
jno
xor
push
jl,pn
xchg
test
mov
add
add
jp
mov
sub
or
xor
inc
das
push
fdivrp
push
mov
xchg
dec
mov
add
or
mov
jge
test
notl
pop
and
movsl
daa
add
or
subb
cltd
sub
pop
pop
pusha
mov
leave
mov
lcall
cs
jp
cmp
push
aad
adc
and
fsubrs
push
repz
push
in
or
shll
ret
dec
or
inc
xchg
addr16
mov
fmuls
lret
cmpsb
push
ljmp
xchg
pop
ss
fstpl
pop
push
xor
and
inc
push
jl
jle
add
cmpsl
sub
xor
jnp
loope
mov
aaa
ss
lods
js
mov
xor
ja
xchg
filds
pop
popf
jge
daa
push
pop
fnstsw
adc
icebp
mov
jne
push
adc
jge
jmp
in
xor
js
jbe
mov
adc
xor
lahf
mov
imul
jl
push
inc
jno
push
testl
imul
cs
aam
inc
jo
test
arpl
call
jg
cmp
lea
pusha
clc
adc
dec
sbb
fs
aam
movsl
mov
je
or
cs
leave
outsb
xchg
lret
jecxz
ds
mov
mov
mov
shl
and
jno
xchg
je
inc
mov
jo
fwait
jo
mov
test
popf
andb
movsb
sub
push
push
fisubs
bound
into
stos
in
pop
cmp
mov
enter
test
mov
adc
shlb
scas
in
xchg
add
lcall
push
add
daa
jnp
in
stc
imul
das
push
shlb
std
mov
sub
jle
ffreep
adc
sub
sub
cli
inc
push
mov
in
enter
fs
movsl
xor
scas
ret
mov
nop
xchg
push
loopne
popa
in
cmc
stos
loope
mov
out
addl
aad
mov
pop
loop
mov
or
scas
dec
call
adc
call
pop
inc
inc
xchg
fiadds
mov
push
pusha
loop
in
pop
push
fs
ret
jl
and
popf
out
les
ja
cwtl
xchg
xchg
mov
lock
pop
xchg
push
mov
cmp
pop
sbb
xchg
push
pop
push
push
fistpll
mov
cmpsb
lods
xor
je
xchg
jmp
ret
mov
mov
in
push
or
fidivrl
in
jle
xchg
lock
add
mov
jl
mov
jl
sbb
mov
ret
and
adc
out
stc
testb
in
stc
testl
fists
push
fidivrs
push
into
fimull
and
or
aad
mov
aas
sub
sbb
stc
cmp
pop
movsb
scas
dec
sub
xor
cltd
inc
mov
testl
fwait
xor
sub
je
dec
out
or
into
dec
xlat
mov
jge
xor
sub
stos
add
cmpsb
or
jecxz
add
std
lret
popa
mov
cmp
inc
testb
sbbb
or
cmovle
jp
xor
ja
jl
xorl
ja
test
pop
inc
xor
stc
add
test
xchg
cmp
inc
jl
push
xchg
mov
sbb
mov
pop
shll
inc
xor
cmp
sbb
mov
mov
mov
add
cmpsl
sysenter
push
into
jl
cmpsb
sbb
sahf
jae
jbe,pn
lret
mov
repz
pop
xor
or
inc
dec
loop
mov
jne
push
pop
xlat
cmp
jnp
mov
inc
pop
js
enter
cmc
fldenv
jnp
int3
fbld
jg
inc
fistps
clc
mov
test
or
xchg
adc
jl
stc
js
insb
push
inc
pop
loopne
xor
ret
xchg
or
jbe
aam
jmp
mov
pop
push
inc
mov
fistl
orb
adc
mov
xor
enter
and
iret
in
or
ss
xor
inc
icebp
xchg
sub
aas
jns
add
lods
popf
mov
cmc
lods
clc
repz
lods
js
mov
cltd
jl
sub
hlt
cmp
or
add
add
jbe
iret
loop,pt
and
test
jg
cmp
mov
add
mov
dec
or
pop
pop
inc
dec
fwait
mov
pusha
dec
fidivrs
push
outsl
ret
out
xor
add
xor
int3
cli
stos
push
repnz
cmp
in
gs
mov
repnz
jmp
xchg
in
imul
cmp
pop
cmpsb
inc
lahf
jge
data16
jns
out
repnz
clc
leave
or
jg
pop
scas
pop
mov
in
pop
sbb
fnstsw
idivb
sbb
xlat
add
loopne
rcl
fwait
pop
fadds
loope
das
mov
or
fwait
cmpsl
dec
jae
inc
mov
and
mov
adc
mov
addr16
and
or
or
fisubl
leave
aad
jge
imul
mov
clc
inc
insl
addr16
push
fiaddl
xchg
repz
inc
inc
pop
mov
or
imul
push
jl
mull
pop
push
add
loopne
test
sub
xchg
sub
jle
jecxz
lret
xchg
fsubrl
jle
cmp
or
mov
ds
mov
inc
and
add
js
xchg
cld
lcallw
js
xor
xchg
mov
fisubrs
cs
outsl
or
daa
sub
mov
rol
les
mov
adc
mov
lret
add
dec
xchg
lds
lcall
and
cmp
jo
mov
lret
inc
push
stos
and
adc
ret
lods
int3
divl
punpckhdq
les
dec
push
xchg
xchg
call
stos
sub
stos
aas
iret
inc
xchg
test
enter
call
imul
inc
dec
inc
xor
aad
rclb
xchg
lret
xchg
ja
dec
fisubl
pop
push
inc
dec
sbb
dec
rcr
and
sub
push
mov
xchg
movsl
xor
sub
sahf
cmp
jp
imul
adc
adc
mov
lds
stc
jl
std
jp
loope
icebp
loopne
and
ja
sbb
pushf
mov
or
lret
sbb
jno
dec
push
orb
idivl
aas
add
ljmp
mov
adc
in
and
nop
and
cmp
xchg
adc
sar
cmp
loopne
cld
push
sub
and
cmp
pop
pushf
add
mov
add
testl
cmp
out
in
adc
pop
and
jns
fwait
pop
shrb
mov
inc
in
mov
mov
add
stos
mov
adc
add
mov
rcl
pop
mov
fcoms
sbb
push
rcll
enter
push
fistpl
adc
outsl
mov
std
ret
repnz
stos
push
enter
shlb
push
push
mov
mov
add
ja
jp
test
outsb
lds
arpl
mov
pop
add
fmulp
cwtl
je
jae
sti
call
lahf
dec
jns
mov
cmp
add
aad
nop
mov
xor
loope
dec
addr16
push
and
daa
lods
je
adc
fs
adc
jl
int3
pop
cmpsl
loop
rcrl
jge
mov
push
mov
aad
imul
xlat
cmpsl
fnstcw
sarb
sti
adc
sub
roll
jecxz
lds
ficoml
test
repnz
lcall
daa
imul
push
mov
daa
pop
jge,pt
jle
cltd
sarl
jae
dec
es
pop
mov
adc
mov
xchg
aam
sbb
add
xor
mov
rorb
add
std
inc
in
inc
lcall
sub
cltd
call
xchg
popf
push
dec
outsl
les
jge
inc
push
out
xor
jl
insb
push
pop
push
pop
jp
les
pop
xor
jg
mov
push
xlat
loopne
inc
fnsave
xchg
bound
mov
sbb
mov
jle
dec
dec
jmp
icebp
sbb
push
jmp
mov
sbb
and
adc
xchg
outsb
imul
sbb
popf
pop
sarb
outsb
loop
mov
sbb
cmpl
sub
adc
imul
hlt
adc
mov
xor
int
sbb
xchg
add
stos
sbbl
jne
fmul
rorb
push
movsl
jno
pop
shrl
loopne
pop
lods
xchg
aas
scas
pop
dec
mov
cmp
cmp
xchg
repnz
out
test
insb
fmulp
popf
pop
ret
test
pop
or
cmc
jle
lcall
in
jmp
aas
notl
xor
push
stos
sbb
or
or
jp
cmpsl
xchg
sbb
mov
jmp
fnstsw
pop
pop
mov
dec
dec
inc
dec
xor
sbb
inc
shrb
rcr
push
pop
test
dec
lret
arpl
insl
pop
aaa
mov
repz
add
fldenv
cli
cltd
xlat
popa
lahf
lea
shl
mov
mov
jg
cmp
or
aad
mov
mov
cwtl
cmpsl
movsb
mov
cmp
sbb
adc
mov
in
dec
mov
out
sub
and
in
sbb
stos
inc
xor
inc
lcall
mov
mov
imul
aaa
in
xor
ret
mov
inc
scas
lods
mov
out
rcll
inc
adc
push
mov
or
adc
adc
add
in
in
sub
lds
xor
push
sbb
movsl
rclb
mov
int3
jl
mov
push
jnp
mov
pop
hlt
xor
mov
mov
pop
jle
or
loope
sbb
push
test
and
xchg
inc
add
sbb
mov
lds
fcompl
adc
in
in
dec
xchg
mov
push
les
in
imul
add
mov
cmp
cmp
sbb
cmp
stos
push
xlat
sar
dec
cmp
mov
hlt
cld
into
mull
idivl
sbb
test
mov
mov
push
cmp
pop
mov
pusha
xchg
je
add
sub
icebp
push
outsb
testb
adc
sub
mov
and
mov
mov
insl
sub
cmc
jns
xchg
adc
aas
dec
pop
dec
pop
out
mov
pop
mov
sub
lea
loop
add
outsl
jo
jmp
or
lret
outsb
popf
sub
mov
loop
mov
fs
or
test
movsl
lds
icebp
push
inc
out
ret
ret
jno
xor
inc
cld
add
push
pop
imul
mov
pop
ljmp
mov
push
mov
fldcw
movsl
xor
scas
jns
aam
push
clc
dec
call
nop
cmp
push
xchg
pop
push
hlt
cs
shll
out
push
lds
fistpl
and
sti
pop
into
les
mov
int3
lock
pusha
aas
data16
and
mov
xor
sub
jns
das
cmpsb
pop
scas
lock
inc
stos
lahf
push
and
xor
aam
bound
or
adc
sti
loope
mov
dec
scas
sub
xchg
or
add
jnp
sub
mov
shll
xchg
enter
ret
in
jbe
or
inc
fadds
push
sub
xchg
xchg
xor
fwait
xchg
adc
adc
stos
xchg
and
dec
fstl
std
jns
push
inc
cmc
push
jbe
mov
sbb
push
psubq
scas
jbe
mov
jmp
leave
out
sub
imul
movsl
mov
fsts
test
cli
into
sub
ficompl
aam
jno
mov
mov
push
pop
in
or
lahf
lcall
or
ficoml
pop
rcll
inc
mov
std
inc
jmp
in
push
in
sbb
push
cmp
mov
cmovge
std
mov
or
bound
sbb
movsb
fstpl
jo
dec
jo
push
xlat
mov
pop
inc
sbb
mov
sahf
into
jecxz
leave
xor
sub
mov
xchg
pop
pop
cmp
mov
lock
dec
or
xor
repnz
sub
ret
dec
nop
out
lods
ds
flds
lods
sbb
xchg
shrb
mov
push
fisubl
dec
mov
icebp
je
ret
insl
test
fistl
xlat
and
or
adc
jnp
xor
pop
adc
jge
add
loopne
aas
xchg
out
shrb
jne
or
in
pop
test
xchg
loop
push
scas
out
scas
dec
sti
test
into
popa
movsb
cmp
in
adc
sub
pop
arpl
push
jns
sub
pop
sbb
jp
lds
cld
loop
movsb
mov
aaa
jmp
out
cmp
cmp
dec
jno
rorl
sbb
shrb
decb
sub
sbb
xor
movl
out
dec
push
mov
and
xor
cmp
imul
jl
pop
mov
popf
mov
in
repnz
lret
xchg
dec
cmp
or
shl
inc
inc
mov
pop
mov
push
out
mov
lahf
out
shlb
add
mov
mov
arpl
stos
cmp
pop
mov
xor
or
or
arpl
xchg
scas
dec
mov
ret
xor
push
mov
pop
cmpsb
lods
push
xchg
sbb
pop
out
test
sub
mov
clc
std
mov
adc
cmp
test
lcall
inc
fadd
outsb
fsubrl
xchg
cmp
jl
popf
outsl
mov
inc
adc
jne
imulb
in
mov
inc
sbb
incb
ds
xlat
add
pop
adc
jns
dec
xchg
sub
mov
pusha
rcrb
mov
cmpsb
cmp
js
inc
mov
or
dec
push
adc
rclb
loope
clc
dec
inc
out
shufps
push
mov
in
xchg
mov
stc
add
sbb
sbb
xchg
inc
rep
xor
push
xchg
addr16
cmc
or
repnz
scas
lcall
pop
and
lods
dec
mov
jmp
iret
cs
sbb
lods
mov
jecxz
icebp
pop
add
xchg
xchg
leave
repz
insl
rcrb
fisttpl
mov
aaa
dec
aaa
repz
dec
xchg
out
fcomi
rclb
cwtl
cmp
jmp
in
loop
dec
mov
dec
cmpsb
repz
nop
mov
pop
cmpsb
mov
lock
je
imull
into
sub
sub
into
push
stc
out
lods
aad
fwait
push
jb
test
mov
cmp
dec
sbb
in
lret
add
inc
xchg
sub
jns
icebp
lahf
enter
dec
sub
jne
xchg
ror
cwtl
add
or
ficoms
or
mov
jnp
test
emms
rol
fistpl
mov
aaa
and
pop
fsin
lods
out
add
jp
cs
add
adc
cmp
xor
call
aam
or
out
xchg
out
sub
sahf
fisubl
mov
jae
push
call
mov
mov
mov
mov
mov
jge
aaa
fstpt
scas
ds
jns
shl
imul
cmp
cmc
xor
arpl
das
out
push
orb
in
ljmp
inc
jns
jb
inc
movaps
std
frstor
sbb
mov
or
push
pop
sub
enter
rcrb
mov
mov
sub
push
sahf
test
xor
sahf
push
bswap
in
adc
mov
sub
jae
jg
ss
pause
popf
call
aaa
cmp
sub
pusha
dec
pop
xchg
mov
outsl
sbb
lret
decb
fcmovnb
mov
rcrl
dec
out
or
insb
add
mov
jl
dec
inc
shrl
xchg
sub
mov
lods
cmp
push
cmpsb
xchg
mov
rcrb
inc
out
aaa
inc
push
and
lds
imul
test
jae
in
jae
jl
dec
and
fildll
popl
rorl
add
loope
shlb
aad
xchg
int3
jae
fs
dec
fcoml
imul
fcompl
add
outsl
dec
add
aad
pop
fistpll
daa
cmp
push
xchg
aaa
fdivl
mov
out
testl
lds
idiv
inc
dec
pushf
stos
rcrl
mov
xchg
xchg
fsubs
popl
pop
pop
push
test
call
insb
sbb
loope
ficomps
pop
adc
std
js
mov
es
adc
and
push
imulb
aas
and
inc
pop
subb
or
push
xchg
sbb
fidivrl
negl
mov
and
stc
lcall
mov
sti
sbb
int
adc
pop
lock
dec
pop
mov
lcallw
inc
push
andb
adc
jo
repnz
pop
out
mov
movsb
pushw
ret
rclb
cwtl
mov
cmp
mov
imul
xchg
lcall
pop
andb
je
ret
leave
dec
call
in
jnp
push
pushf
iret
icebp
xchg
jo
lods
xchg
iret
imul
shl
cli
sub
mov
or
test
scas
fisubl
jg
ds
out
mov
int3
loop
ret
push
sbb
addr16
gs
into
jecxz,pt
xlat
insl
popf
es
xchg
arpl
popf
mov
add
adcb
aaa
or
xorl
mov
jo
mov
mov
xchg
push
cmp
or
imul
or
shll
or
jle
mov
xor
out
add
pop
es
jnp
xor
gs
inc
imul
mov
fs
in
daa
pop
jecxz
cmc
push
mov
inc
orl
in
mov
shll
mov
push
pushf
push
add
xchg
xor
mov
mov
fwait
int
push
out
sti
mov
loope
aas
xchg
pop
fcomip
lock
jmp
add
popf
mov
lods
popa
cmpsl
popf
lds
inc
add
scas
cmp
popa
xchg
xor
adc
cli
fdivrp
call
data16
sti
inc
inc
cld
dec
lods
push
bound
adc
loopne
cmpsl
out
jo
stos
jecxz
or
pop
test
mov
jge
jne
test
fldenv
and
push
mov
xor
dec
ret
xchg
aaa
sbb
cmp
jo
fnstenv
popf
push
cmp
pop
inc
imul
and
sarl
fistpl
and
and
imul
int3
repz
fcmovnbe
jecxz
shl
inc
xchg
xchg
adc
movsl
push
add
ds
shrl
xchg
sbb
xchg
xchg
ss
je
push
icebp
adc
int3
adc
mov
emms
mov
xchg
cmp
movsl
insb
daa
inc
add
push
xor
sbb
iret
pop
xor
push
sbb
rorl
sub
jmp
aas
xchg
roll
notb
mov
nop
leave
dec
idivb
pop
aaa
call
scas
ret
inc
mov
dec
mov
fisttpl
sub
push
jbe
lea
pop
pop
cmp
lods
inc
daa
lock
sbb
in
lahf
dec
push
dec
fnstcw
popf
hlt
ret
rorl
jae
push
ficoml
cmpsl
iret
popa
dec
addr16
sti
imul
and
hlt
push
out
push
sub
stos
cmp
jb
ljmp
cs
insl
imul
pop
mov
xor
add
add
enter
add
les
je
sub
mov
xor
pop
pop
loopne
mov
sbb
xlat
push
cli
xchg
jmp
push
call
add
test
imul
fistl
in
fs
lock
add
addr16
pusha
mov
cmpsb
inc
mov
pop
xchg
cwtl
inc
push
out
rclb
push
out
ljmp
clc
sub
frstor
cmc
in
adc
insb
xchg
mov
fsubrs
in
rcrl
andb
jle
jo
test
shlb
iret
cmp
pushf
and
repnz
inc
idiv
test
jp
clc
sahf
stos
or
aad
xchg
mov
push
and
popa
ds
es
scas
ja
cld
sub
add
cmp
adc
stc
add
stos
sub
fwait
pop
stos
mov
roll
int
mov
popa
lcall
fdivrs
mov
fistpl
push
add
jb
pop
inc
sbb
lret
or
and
icebp
push
cs
jbe
imul
stos
pusha
lcall
cld
in
cmp
add
cmp
or
loopne
insb
std
and
push
fdivp
in
incb
jp
push
xchg
sbb
dec
pop
addl
adcb
arpl
popa
sub
mov
aas
int3
loopne
dec
testb
vpmacsswd
xlat
jb
fdivr
jle
lods
pop
testl
mov
xchg
lret
imul
adc
ljmp
in
pop
dec
into
push
in
iret
rol
mov
mov
sub
in
or
and
fdivrs
sbb
sahf
push
out
icebp
fsubp
inc
inc
mov
mov
xchg
repnz
jae
cmpsl
arpl
adc
rcr
mov
insl
out
jecxz
aas
popa
sbb
mov
cmp
mov
loope
daa
pop
jp
mov
mov
sub
pop
in
je
enter
sub
outsb
sub
or
mov
mov
sbb
mov
jb
sub
das
push
int
jp
dec
dec
mov
cmp
in
test
outsl
adc
test
and
sbb
ljmp
mov
lods
sarl
fldl
jmp
or
pop
rclb
pop
test
sub
xchg
push
xor
push
stos
lahf
jae
cmpsl
or
pop
test
je
push
bound
xor
out
nop
jo
mov
sar
pop
inc
imul
mov
stos
cmp
sti
pop
xchg
fistl
mov
xchg
mov
push
cmp
mov
mov
cmp
xlat
adc
xchg
movsb
inc
push
loope
jns
cmp
mov
sub
leave
sub
pop
xrelease
movsl
movsb
in
dec
push
mov
arpl
stos
popf
push
push
inc
test
or
sbb
jno
imul
sub
mov
sahf
aad
cld
fistpl
sub
shrl
cwtl
add
xor
adc
fbld
in
fisubs
or
gs
cs
push
out
inc
inc
sbb
and
mov
les
mov
jnp
mov
jb
push
xchg
loope
push
mov
sbb
or
scas
adc
int
jns
int
sbb
int
std
mov
xor
loope
stos
sub
mov
mov
sbb
pop
mov
in
aad
sbb
cs
in
xor
inc
and
adc
call
cmp
xorb
adc
mov
ljmp
out
cmp
pop
lahf
jae
popa
xchg
fmull
rorl
sub
pop
mov
sbb
test
out
xchg
add
mov
dec
shlb
xor
mov
xchg
aam
idivb
ljmp
out
lret
addl
fdivrs
mov
and
mov
ja
xor
sbb
out
mov
int3
adc
push
sahf
push
sbb
pusha
push
inc
push
sub
insl
hlt
add
xchg
push
stc
xchg
inc
stos
xor
cmp
in
dec
push
xor
cwtl
scas
out
xor
xorb
stos
add
push
mov
xlat
into
loop
xor
xorb
xor
outsl
insl
lahf
mov
mov
adc
mov
xor
imul
pop
mov
aad
sbb
push
mulb
push
cmp
pop
inc
or
xor
jl
pop
lret
adc
ret
mov
xchg
jp
mov
nop
mov
add
ja
in
xchg
pop
and
les
loope
test
icebp
or
imul
and
sahf
bound
ss
lock
adc
in
outsb
iret
test
fdivrp
sub
ret
xorb
adcl
jg
repz
sbb
pop
or
push
cmp
leave
dec
or
daa
mov
shll
inc
into
jp
fbstp
ss
adc
arpl
in
inc
jns
xlat
stos
lcall
pop
sahf
mov
or
mov
in
lock
cli
and
sbb
rol
jb
dec
inc
adc
mov
sbb
lea
sub
loopne
dec
sub
daa
push
mov
xchg
sti
adc
movsb
mov
sti
sub
lret
and
mov
lods
mov
mov
xchg
xchg
neg
les
inc
xchg
jg
mov
es
and
lods
out
mov
push
lcall
push
loope
icebp
xor
lcall
test
test
adc
icebp
enter
push
lods
push
loope
xlat
mov
in
mov
mov
xor
pop
in
aam
mov
pop
adc
jecxz
ljmp
popf
stos
mov
inc
mov
psubd
sbb
inc
mov
push
movsl
int3
es
pusha
arpl
or
ret
xor
out
push
repnz
decl
leave
jnp
jo
adc
push
add
in
sbb
ret
mov
cmpsl
mov
stc
mov
xor
call
ret
mov
call
lret
aaa
or
dec
sub
outsl
xchg
inc
repnz
mov
out
and
popa
js,pt
and
into
and
clc
xor
loop
push
adc
ja
jl
jg
and
pop
mov
or
stc
mov
cli
add
cli
cmpsl
mov
out
popa
test
gs
in
and
testb
nop
std
test
push
push
sub
in
test
sub
lcall
pop
rorl
stc
mov
and
xchg
mov
ss
clc
into
rorb
loop
mov
lret
popf
out
insl
daa
cmp
repnz
jns
adc
pop
mov
and
cmpsb
inc
subl
dec
inc
mov
mov
or
sbb
andb
data16
lret
cmpsb
adc
mov
dec
mov
jnp
sub
fildl
arpl
cmp
loope
mov
outsb
xchg
jmp
pop
into
dec
pop
and
out
xchg
fidivs
xchg
xchg
and
mov
fmuls
scas
xchg
jmp
mov
cmp
adc
jl,pn
mov
into
data16
inc
push
popa
sbb
push
jl
and
pop
leave
sbb
stos
adc
pushf
add
adc
pop
and
add
sub
mov
into
popa
imul
xor
or
xor
xor
ss
lods
adc
fwait
mov
adc
rcl
mov
outsb
orb
out
mov
and
movsb
mov
cmc
push
sub
pop
dec
aam
dec
packuswb
jmp
dec
or
outsb
inc
mov
in
loop
pop
ficompl
outsl
push
add
lods
rcrb
enter
or
xchg
in
mov
lret
mov
or
ljmp
mov
dec
aad
cmp
fsubrs
aad
sub
xchg
les
sub
xchg
push
icebp
pop
fstps
and
lcall
mov
xchg
sub
nop
add
push
dec
aad
dec
insb
push
ja
nop
xor
hlt
test
jns
or
pop
mov
stos
fstl
inc
inc
xor
sbb
jecxz
dec
cmp
test
fwait
dec
sahf
out
aas
xchg
jmp
lea
lret
pusha
cmp
and
frstor
fsubrl
jecxz
sti
pushf
jl
int
fimull
jecxz
push
or
pop
dec
in
fsts
lahf
out
mov
pop
mov
xchg
pop
xor
in
idiv
push
rcrb
mov
lods
mov
add
mov
lds
dec
out
cmp
and
ret
ds
and
inc
push
push
pop
add
popl
cld
les
dec
cli
xchg
pop
or
inc
into
pop
daa
mov
cmp
fcmovne
in
repnz
aaa
ja
fidivrs
dec
mov
xchg
iret
sub
outsl
mov
dec
lret
push
insl
out
fisubrl
sbb
mov
jo
aaa
fnstsw
pop
mov
xor
movsl
mov
inc
ja
ficomps
imul
or
sub
or
rcl
mov
cmc
pop
out
adc
or
xchg
fwait
in
sti
aas
push
add
jg
mov
inc
push
ja
cmpsb
xlat
das
out
addl
sbb
sub
sbb
nop
loop
cwtl
dec
lods
cli
gs
add
lahf
lds
and
fisttpll
add
xchg
nop
ja
xor
mov
or
into
sbb
shrb
fmull
inc
in
aas
das
stos
or
ljmpw
popa
mov
in
es
jo
lret
cmp
mov
insb
ds
xor
mov
mov
dec
out
dec
fstl
jne
nop
pop
and
arpl
xor
addr16
stc
jmp
sti
sbb
push
push
cs
pop
push
lods
inc
mov
lods
std
call
sbb
lahf
dec
push
pop
mov
loope
sub
call
push
mov
cmp
ret
cmp
pop
addr16
test
mov
push
push
rcll
lret
dec
or
jno
mov
xchg
pop
push
jge
outsb
inc
movsl
imull
sub
mov
loop
add
fcmovne
xchg
sbb
lods
test
test
arpl
decl
push
fld
adc
inc
cmp
add
jbe
pop
sarl
add
dec
or
lea
leave
notl
add
out
pop
pop
jb
and
pop
ficompl
jg
sbb
repnz
imul
cmp
enter
cmp
add
mov
xchg
jl
fdiv
gs
or
and
pop
push
in
bound
push
lret
arpl
sahf
jbe
out
sub
in
or
push
andl
inc
aaa
mov
loopne
xchg
stc
dec
dec
jno
inc
and
test
fwait
lea
sub
or
fstps
cmp
xor
jbe
mov
out
jp
andb
add
pop
jp
rcll
jo
imul
jnp
jge
sar
in
push
nop
aam
cmp
or
xor
stos
push
mov
xchg
and
and
jno
add
loopne
insb
out
lock
repnz
lds
push
dec
in
sbb
jle
lods
inc
jp
cmpsb
dec
ja
jns
fidivrl
xchg
sahf
or
jnp
adc
cmp
or
or
lret
add
insb
xchg
pop
bound
sbbb
stos
lahf
movsb
lcall
push
fwait
fs
mov
leave
addr16
mov
dec
mov
jnp
cmpb
or
fwait
push
add
mov
out
out
pushf
lea
fistps
test
jmp
out
adc
push
mov
pop
mov
flds
push
push
icebp
shlb
xchg
cmpl
std
gs
pop
lock
popf
addb
shrb
lods
inc
pop
jl
xlat
outsb
and
add
sub
fucomi
call
jo
clc
test
xor
orl
adc
jb
mov
jl
mov
jl
cli
jo
ja
lea
stc
and
push
lods
cmp
pop
jmp
test
js
or
lahf
sub
scas
fwait
sti
dec
int
xor
test
xlat
mov
aad
jecxz
lcall
decb
push
jge
mov
adc
rcll
ret
xchg
add
push
std
roll
call
out
pusha
sub
daa
repnz
and
push
test
jmp
cmp
mov
loope
stos
push
andl
stos
push
push
sub
clc
aad
je
stos
in
or
jecxz
sub
daa
out
push
loop
leave
ja
add
push
adc
jle
insl
or
cs
fsubl
mov
mov
push
cmp
rorb
aad
mov
sub
adc
jp
divl
or
popa
inc
out
cltd
dec
mov
stos
xchg
dec
loopne
mov
push
imulb
or
xchg
mov
xchg
mov
ret
push
jmp
or
aam
xor
cwtl
xchg
push
aas
out
aam
cltd
loope
and
xor
into
jecxz
cmpsl
inc
fdivrl
push
bound
or
pusha
pop
js
data16
pop
cli
inc
or
fwait
nop
int3
sbb
dec
insl
xchg
fisubs
std
pop
inc
mov
std
xor
pop
mov
cmp
in
jbe
lcall
stc
jae
inc
xchg
cmpsl
push
repnz
int3
lods
inc
jecxz
out
xor
xchg
fwait
xchg
scas
jmp
adc
movsl
inc
imul
ficompl
jge
arpl
out
mov
addr16
pop
rorb
imul
or
outsl
xchg
xor
imul
fnstsw
mov
call
pop
mov
pushf
mov
lock
repnz
sub
jnp
andb
xlat
mov
data16
out
nop
insl
mov
shl
dec
mov
pushf
lret
sub
pop
imul
cli
outsl
pop
repz
sub
or
in
mov
add
pop
jp
xchg
cmpsb
in
inc
pop
jp
push
int3
inc
fsts
pushf
inc
mov
mov
dec
xchg
xchg
and
xor
dec
push
jmp
add
xlat
sub
out
loop
and
jle
cli
adc
add
xor
cli
pop
arpl
push
js
adc
xchg
jl
iret
jl
out
xchg
push
inc
ja
cmp
sets
cvtdq2ps
ds
xchg
xchg
data16
cmp
notb
out
and
xor
lods
int
out
lods
out
push
pop
test
xchg
jecxz
mov
push
shrb
pop
and
sub
pop
icebp
out
aam
mov
into
test
add
push
push
insb
mov
cmc
and
push
or
adc
push
pushf
jo
mov
pushf
popf
cmpsl
fdivr
popa
fdivrl
rcl
repz
cmp
aas
mov
adc
mov
adc
addr16
pop
dec
movsb
mov
adc
adc
push
jo
data16
push
xchg
xchg
xchg
push
inc
dec
pop
jno
test
xor
mov
loopne
xor
hlt
clc
dec
cmc
and
syscall
out
clc
enter
or
js
loop,pt
cltd
mov
jns
mov
mov
pop
sbb
repnz
aas
sbb
test
cs
gs
js
adc
dec
aas
mov
cli
scas
and
pop
out
mov
push
cmpsl
xlat
xchg
adcb
iret
out
adc
stc
xchg
int
movl
out
inc
sub
ret
push
loopne
push
push
add
in
or
add
adc
into
movsb
push
and
adc
cmp
cmc
cmp
mov
cld
sub
cld
adc
xchg
xchg
jecxz
call
xchg
xor
sbb
mov
mov
cwtl
jnp
hlt
div
mov
arpl
sub
xorl
xor
jmp
int3
mov
lret
push
sbb
xor
add
push
retw
or
mov
es
into
ret
dec
mov
imul
mov
xchg
cmp
cs
jl
cmpsl
sub
leave
pop
test
and
mov
test
icebp
xchg
push
cli
jle
in
punpckhwd
mov
insl
cmp
sub
xchg
outsl
addr16
lcall
pop
dec
xchg
and
inc
adc
push
jp
in
and
or
or
xor
popa
rcrl
sub
dec
in
and
aam
push
out
leave
mov
shl
adc
mov
pop
dec
xchg
ret
lock
fcomps
out
mov
lret
adc
jo
rorl
clc
mov
sbb
jbe
mov
das
mov
mov
lds
push
xchg
fbld
dec
daa
loop
jae
repnz
mov
inc
mov
pushf
sarb
loop
sahf
ljmp
cmp
lahf
rcll
adc
out
leave
jb
repz
sub
cmp
enter
xchg
ss
jbe
inc
insl
mov
cmp
or
pxor
addr16
or
nop
fdivs
rorb
sbb
mov
dec
fisttpll
in
push
inc
out
sub
cmpsl
aas
enter
pop
in
gs
dec
cltd
lea
pop
inc
xor
mov
ret
es
jmp
cmp
out
cld
add
insl
add
pop
testl
imul
xchg
inc
div
loope
sahf
inc
mov
xor
aas
sub
rolb
push
and
loope
pop
jb
mov
push
sti
lahf
dec
cmp
and
pop
fstpt
pop
in
push
cwtl
adc
lcall
dec
lret
xchg
mov
xchg
push
sarl
jo
mov
push
lds
inc
inc
sbb
jnp
xchg
ljmp
sub
fwait
hlt
lea
outsb
or
shlb
lret
test
daa
sbb
subl
lds
aam
std
icebp
and
or
xchg
loop
scas
das
test
cmpsl
adc
mov
or
push
dec
add
ja
mov
lahf
cmp
mov
mov
pop
cmp
or
dec
mov
lds
jle
xchg
pusha
xchg
dec
push
xchg
ret
cltd
sub
cmp
mull
dec
in
mov
mov
push
sub
push
aas
in
and
insb
popa
fbstp
adc
jae
mov
out
mov
hlt
jbe
out
out
push
or
cmp
pop
xchg
insl
fwait
pushf
test
xchg
out
loopne
testb
inc
imul
shld
cmpsb
sbb
mov
kxorb
or
or
ljmp
test
movsl
sub
push
shrl
mov
dec
sub
dec
pop
cli
jmp
mov
jg
sti
cmp
loopne
cwtl
js
test
cmp
insl
jl
xchg
jns
out
xchg
out
aaa
push
cli
mov
add
and
es
pop
xchg
stos
xor
sha1nexte
rcl
xchg
jle
xchg
insl
jle
xor
pop
mov
out
mull
and
jae
xlat
loopne
mov
lret
rcll
in
popa
and
push
outsl
ds
cmpb
push
jp
int3
jo
ds
mov
mov
pop
sahf
jns
dec
roll
mov
jne
mov
jl
mov
push
int3
mov
jge
push
iret
push
roll
arpl
pop
push
pop
mov
cmp
lcall
loopne
gs
pop
lahf
jl
into
ficoml
fidivl
dec
test
and
cld
xchg
stc
rclb
andw
sbb
aam
repz
mov
repz
inc
or
xor
mov
rolb
in
lods
sbb
dec
inc
js
push
iret
jo
dec
mov
stc
push
cmp
dec
ret
mov
jl
in
and
mov
orl
mov
sub
in
mov
push
cli
and
xchg
push
jnp
int
cmp
lods
mov
test
daa
imul
insb
push
enter
push
jp
lock
sbb
mov
dec
sub
push
int
sbbl
out
push
popf
fdivrs
mov
pushf
mov
stos
push
mov
pop
lret
shl
cmp
lods
inc
imul
push
test
ds
cmp
int
xor
dec
aaa
xchg
addr16
movsb
aad
mov
loope
ds
fcom
mov
jno
pop
pop
and
pushf
stos
shll
mov
mov
push
orb
in
mov
or
bound
mov
cli
and
push
cmp
loopne
mov
mov
inc
jl
dec
xor
sbb
jge
rcrb
lret
fnstenv
enter
loope
repz
pop
lock
xchg
popf
ret
jne
jmp
jae
xchg
pop
cmp
push
cmp
mov
aas
mov
add
mov
or
lret
mov
and
jns
dec
sbb
popf
push
and
mov
popf
repnz
adc
outsb
push
movsl
jecxz
dec
mov
mov
xchg
clc
in
mov
sbb
cmp
inc
test
push
ljmp
sub
inc
pop
dec
test
and
es
cmc
pop
data16
cmpsb
mov
int
mov
mov
sbbb
add
movsl
mov
cltd
fcompl
shll
stc
jno
mov
jle
outsb
xchg
xor
movsl
xor
imul
sbb
or
mov
xchg
paddusb
pop
cld
jp
inc
pop
sbb
sub
into
inc
add
cli
pop
lock
out
imul
lahf
test
lcall
aaa
les
lea
jmp
repnz
mov
aaa
cmp
cmpsb
xchg
mov
xchg
arpl
das
fwait
and
mov
add
xor
arpl
jp
ja
cld
test
adc
push
sub
push
mov
mov
and
mov
pusha
lahf
mov
fldt
adc
xlat
ja
add
movsb
inc
inc
jne
lahf
lahf
cmc
jb
pop
push
mov
pushf
ljmp
rcrl
sbb
cmp
daa
inc
aaa
push
xchg
pop
add
ss
lods
jmp
fwait
fwait
and
mov
push
out
ret
mov
xchg
adcl
nop
int
inc
push
mov
out
outsb
cmpb
aaa
rcrb
lods
imul
inc
call
cltd
adc
inc
xchg
mov
push
es
jmp
popa
outsl
das
mov
mov
negb
jnp
ja
push
out
fcompl
xlat
dec
xchg
jnp
and
out
repnz
test
aas
repz
imul
adc
stos
mov
iret
push
ror
inc
cmpsl
imul
xor
push
enter
pop
js
out
push
mov
leave
inc
mov
xchg
or
subb
jb
xor
pop
clc
sbb
mov
and
inc
ret
test
pop
out
mov
add
mov
loope
push
test
push
mov
push
int
out
cli
pop
mov
mov
and
inc
push
mov
ss
push
mov
js
push
ja
push
int
enter
xor
xchg
cld
std
xor
pop
fbstp
adc
icebp
xor
push
jnp
into
aas
xchg
fbld
scas
lds
out
add
adc
mov
xor
popa
cmc
fstpt
jge
ss
mov
out
mov
das
das
mov
out
mov
cli
fstp
in
cwtd
xor
das
adc
push
mov
into
or
inc
push
ja
scas
bound
outsl
sub
call
pop
cld
das
bound
jbe
adc
inc
mov
subl
sub
mov
fbstp
dec
add
incl
push
push
test
push
sub
mov
sub
fwait
sahf
mov
xchg
ret
push
popa
cmp
out
dec
gs
jle
cs
shrb
mov
push
pop
aas
push
loopne
sbb
inc
test
mov
mov
in
leave
stos
add
mov
inc
sbb
pushf
insb
pop
mov
out
fdivs
enter
out
gs
push
mov
ja
mov
sbb
mov
fisubrl
xor
jnp
xchg
icebp
mov
cltd
xor
imul
popa
fnstsw
vpsubb
mov
out
mov
sub
cmp
mov
out
sti
lock
cmp
inc
mov
gs
loope
xchg
mov
adc
cmpsb
insb
call
jmp
xor
test
ret
out
xchg
ficomps
mov
test
out
push
addr16
je
dec
arpl
ljmp
xor
loopne
arpl
insl
mov
test
inc
mov
orb
dec
movsw
xchg
xor
xor
lods
push
and
push
je
sub
pop
xchg
jns
repnz
and
sub
jle
out
sub
push
xchg
and
jl
test
movsb
arpl
popa
hlt
mov
dec
movsl
mov
fdivrl
lret
or
adc
pop
add
xchg
jle
lea
push
ret
ja
sbb
lret
aam
test
ret
call
push
in
push
leave
rol
scas
jge
stos
or
fcmovne
lds
inc
loope
ret
inc
push
xchg
jecxz
ret
mov
ljmp
scas
xchg
sub
or
mov
imul
lds
lds
data16
dec
ja
fxch
in
lods
push
sbb
adc
jne
or
bound
jmp
pop
popf
iret
push
in
hlt
mov
loope
mov
inc
mov
dec
xor
int3
inc
adc
sub
inc
shlb
dec
je
jmp
pop
dec
dec
and
aam
test
xchg
cltd
push
pop
push
jge
add
pop
mov
and
lea
ljmp
sahf
pop
cs
mov
mov
adc
push
scas
adc
hlt
sub
test
jae
mov
shll
ljmp
loop
dec
cld
jp
push
iret
xor
scas
fs
mov
cwtl
pushf
sub
cmp
subl
stc
out
cld
mov
addr16
sbb
xor
iret
lret
cmp
mov
jg
mov
xchg
cwtl
xchg
dec
lods
jns
sti
push
add
clc
lods
or
ds
sub
out
sub
mov
shlb
add
push
adc
ja
fwait
loopne
and
cmpsb
lock
pop
jns
cmp
inc
or
xchg
push
jne
sub
jb
ds
pop
aas
cld
cmp
sbb
mov
xchg
loope
loop
xor
hlt
xlat
and
aam
push
mov
shl
sbbl
pop
stos
fdivl
and
lock
data16
xor
xor
loopne
insb
sub
rol
call
xchg
test
or
inc
lods
push
jae
pop
push
xor
lods
stos
out
inc
outsl
cmpsb
das
mov
notb
mov
push
or
iret
push
jb
js
test
or
jle
or
push
ss
scas
jb
lret
xorl
sti
and
loop
pop
xchg
shll
jmp
scas
bound
mov
pop
xor
adc
pop
push
mov
enter
sti
push
pushf
ljmp
dec
stos
mov
pushf
push
xchg
movsl
cmp
mov
adcl
ljmp
cmpsl
clc
in
dec
int3
test
lods
xchg
rcll
dec
add
inc
jl
cmpsl
sbb
push
es
mov
pop
popf
xor
lcall
outsl
fimull
or
mov
inc
pop
mov
xor
repnz
not
lahf
push
imul
cmp
push
bound
mov
lds
dec
stc
pop
imul
or
loop
ljmp
sub
aaa
aad
xchg
arpl
and
into
int
xor
push
aam
inc
mov
cmp
das
scas
pushf
hlt
repz
push
xchg
int
xor
push
sbb
daa
jp
dec
jmp
cld
mov
js
lret
mov
shll
xor
inc
cmp
aaa
mov
xchg
aaa
movsl
and
cld
js
popa
mov
xor
mov
js
scas
xor
inc
mov
mov
cmp
lods
sbb
repz
sbb
dec
dec
iret
dec
fadds
xchg
aaa
sub
mov
clc
cmp
xchg
mov
pushf
jno
aaa
fldt
or
mov
or
mov
pop
adcl
scas
scas
adcl
out
mov
in
push
cmpb
push
push
rolb
and
sub
mov
inc
and
sbb
lret
push
inc
or
insl
les
call
add
push
das
inc
mov
aam
movsb
notl
pop
or
clc
add
add
ret
in
cmpsl
mov
mov
fnsave
mov
sub
popf
inc
pop
inc
sti
cmc
hlt
push
pop
cld
shlb
out
or
and
lods
pop
out
je
pop
mov
insw
call
add
sbb
inc
inc
fsts
std
mov
scas
and
sbb
es
loop
mov
add
loop
imul
scas
repz
mov
ret
add
mov
test
mov
adc
ret
pop
pop
jmp
sub
lods
cmpsl
pop
add
pop
push
mov
outsb
fisubl
adc
sub
int3
movsb
loop
mov
dec
sbb
sub
popf
shlb
lds
lret
inc
dec
repz
pop
ficompl
enter
fidivrs
or
xchg
pop
imul
sbb
inc
push
mov
pop
jno
ljmp
test
inc
pop
inc
pshufw
sahf
or
aad
movsl
add
xor
jle
paddusw
push
das
cltd
mov
sub
cld
out
xchg
xchg
jle
subl
xchg
pushf
jp
sub
lea
push
jo
sub
inc
cmp
xorb
ret
jbe
mov
stos
adc
dec
xchg
std
fcoml
mov
lea
or
je
inc
fbstp
daa
push
xchg
cli
xchg
dec
adc
stos
cwtl
test
sbb
xorb
std
mov
inc
or
adc
aaa
fnsave
ds
orl
in
or
arpl
cmp
or
xor
pop
clc
rorl
inc
sti
push
dec
ds
jns
sbb
and
lea
cmp
std
das
movsl
dec
popa
mov
xlat
mov
test
sbb
cmpsl
mov
jo
push
and
push
inc
sub
sbb
addb
sub
fdivrs
mov
insl
loop
into
es
cmp
and
lea
rorl
cmp
imul
add
xchg
or
out
bound
xchg
inc
outsl
jmp
out
sub
cmp
push
add
and
cld
mov
lds
mov
test
jne
insl
xchg
bound
rclb
xchg
cwtl
add
repnz
adc
and
cltd
loop
cmc
inc
stos
xchg
inc
sbb
call
rclb
push
xchg
cmp
push
and
or
xor
leave
mov
or
jbe
mov
push
ljmp
pop
cmpsb
ljmp
fwait
mov
clc
lcall
test
loopne
icebp
jnp
push
into
sub
pop
lret
or
lds
xchg
or
mov
jae
mov
pop
ret
mov
cmp
leave
fcoms
ss
xor
dec
cmpsl
rclb
jmp
inc
mov
xchg
call
mov
dec
cltd
xor
test
mov
clc
pop
aad
arpl
push
loopne
jno
adc
mov
push
sbb
push
in
jo
xor
pusha
aad
lods
popa
xlat
ja
pop
scas
cmpsb
xchg
add
ret
push
sahf
adc
xchg
test
gs
cmp
dec
lds
test
cmpsl
call
push
jecxz
jg
mov
dec
fidivs
mov
push
arpl
or
lret
hlt
push
inc
fmull
cld
incl
nop
int
repz
jg
sarl
arpl
dec
jge
int3
cli
mov
xor
push
adc
xchg
hlt
cmc
add
xchg
cltd
and
loope
shrb
mov
dec
mov
ds
in
mull
hlt
mov
inc
in
ds
jecxz
cmp
dec
mov
sub
adc
add
adc
test
fisubrs
filds
inc
lock
fistpll
mov
pop
out
push
mov
in
daa
les
fwait
inc
cmp
adc
in
jge
mov
into
adc
pop
mov
aaa
mov
jnp
orb
sbb
jb
cmpsb
aad
and
cmp
jmp
cli
fiaddl
fcoms
into
pop
repnz
sahf
out
push
mov
cmp
mov
xor
adc
mov
iret
mov
out
sbb
sahf
or
push
adc
stc
inc
clc
je
sub
bndstx
push
sbbb
mov
fldt
jnp
lods
and
dec
in
cmp
adc
mov
mov
cwtl
repz
sbb
inc
mov
sub
subl
lret
mov
xchg
cmp
mov
iret
push
and
and
icebp
imul
xor
sub
xor
xor
adc
and
outsl
jmp
inc
es
test
pop
and
inc
aas
js
dec
add
mov
xchg
pusha
adc
popf
iret
fdivl
sbb
lcall
dec
mov
inc
lock
mov
nop
sbb
popa
scas
push
loope
sub
adc
push
mov
bound
jl
ret
mov
lcall
sbb
push
adc
mov
arpl
loopne
outsl
cmp
adc
xchg
cli
loope
outsl
or
into
into
pop
test
jbe
imul
das
jns
push
fisubrs
sub
sarl
mov
add
pop
sbb
rorl
push
sub
pop
flds
adc
cmp
sub
dec
addr16
addr16
adc
sbb
push
repz
xchg
mov
inc
mov
xchg
dec
cmpsl
inc
fwait
ja
mov
dec
xchg
loope
push
mov
lods
jbe
pop
jg
les
sbb
fidivrs
inc
out
nop
mov
inc
nop
jo
decl
sub
clc
and
arpl
sub
pop
mov
outsl
adc
xor
push
clc
gs
pop
mov
data16
out
lods
jbe
outsb
xor
inc
pop
dec
inc
xchg
or
push
pop
decl
push
pop
pop
cmp
mov
xchg
imul
inc
mov
int3
mov
jl
jg
mov
cld
xchg
mov
aas
xlat
sub
insl
inc
adcb
inc
and
push
fs
mov
mov
sub
frstor
scas
jns
mov
gs
shlb
or
daa
jecxz
xchg
sub
push
iret
pop
dec
xorl
inc
pop
sub
jnp
lods
popa
mov
inc
dec
xlat
ds
pop
pop
aad
fcoms
jnp
jnp
xchg
inc
sbb
mov
xor
inc
outsb
popf
test
fwait
ds
ror
sub
sbbl
push
test
jne
push
lahf
addl
or
loop
and
aad
xchg
loope
mov
lock
mov
hlt
out
icebp
lret
es
adc
mov
repnz
insb
add
xlat
je
pop
xchg
imul
aam
pop
shlb
cmpl
aas
push
fcomps
cmp
cs
add
cwtl
ficoms
push
mov
ja
xchg
cmpsb
leave
dec
call
lret
enter
mov
cmp
jge
pop
pop
lods
fstps
hlt
insl
dec
mov
insb
jmp
movsl
jb
ret
loopne
pop
repnz
in
aam
fs
push
fs
int
inc
cmp
mov
pop
subb
cwtl
out
xor
seto
sub
mov
loop
enter
xchg
add
fs
jo
jecxz
jmp
dec
insb
dec
orl
mov
cltd
cli
aaa
mov
and
lret
lahf
dec
mov
mov
sbb
les
mov
fnstenv
jb
pop
ror
sub
daa
jno
pop
test
rclb
fwait
jp
stos
xchg
arpl
pusha
jns
fsubrl
cmpsb
add
enter
movsl
adc
xchg
jl
loop
mov
push
dec
sub
push
sub
cmpsl
xor
das
dec
pushf
out
ret
dec
jbe
sbb
push
add
cltd
sbb
repnz
mov
fwait
push
push
adc
andb
fimuls
and
adc
mov
bound
adc
jecxz
cmpsb
stos
dec
das
sbb
mov
sub
adc
iret
out
dec
pop
gs
and
xchg
adc
jmp
lods
clc
fisttpll
and
imul
ret
jmp
or
ret
add
dec
fcomps
adc
js
lret
jbe
pop
fstl
cli
lock
xchg
not
and
add
pop
pop
cwtl
outsb
movsb
cmp
clc
mov
cmp
ret
push
push
out
inc
scas
icebp
sub
loopne
push
dec
mov
dec
jmp
and
sahf
decl
nop
lea
mov
lds
add
icebp
mov
sbb
push
fwait
ja
cmp
mov
inc
sarl
adcl
xchg
pop
mov
cltd
jmp
in
insb
push
dec
jl
xchg
or
push
aas
aam
ret
imul
xchg
fsubrs
lods
jle
xchg
lods
mov
cmp
sbb
sbb
out
lcall
outsb
xor
mov
jecxz
inc
mov
add
scas
cmpsl
fldcw
cmp
xchg
jge
inc
aaa
dec
cmp
frstor
sub
ds
movsb
jle
dec
push
repz
jmp
nop
test
inc
testl
cmp
repnz
push
jge
xchg
popf
lcall
dec
mov
push
filds
ret
add
fisttpl
jns
xor
dec
hlt
pushf
insb
sub
jmp
inc
push
std
adc
mov
jno
imul
xchg
dec
aad
lock
lcall
fstps
pop
orb
push
adc
aaa
fdivr
mov
mov
or
lcall
dec
inc
popl
pop
jle
cmp
dec
lods
xchg
push
pop
lods
jecxz
push
popa
adc
dec
notl
xchg
xchg
lret
repz
in
hlt
pop
mov
sbb
subl
mov
mov
lret
sbb
pop
arpl
in
popf
mov
sbb
and
negl
sbb
popfw
shlb
jp
mov
sub
jo
inc
cli
sub
adc
mov
jmp
fwait
sbb
stos
mov
and
in
pushf
ja
mov
cmp
fidivrs
mov
or
cmp
ds
out
mov
cmc
mov
push
cmc
loopne
std
adc
and
mov
push
fmuls
cmc
aas
dec
sub
xor
add
orb
mov
ja
mov
and
outsb
popf
xchg
xchg
unpcklps
cwtl
lea
pusha
jl
push
out
psrld
pop
add
cltd
pop
sbb
sub
pop
aaa
jle
jmp
rcr
movsb
mov
and
sub
lahf
cmp
cmpsl
cltd
dec
adc
mov
icebp
sbb
jnp
jo
sbb
xchg
mov
lea
ds
mov
ljmp
decl
rol
mov
stc
scas
iret
dec
add
outsl
lcall
add
cli
jmp
pop
pop
add
loope
sbbl
or
mov
sub
ss
or
lret
pop
lds
cmc
pop
sub
fadd
pop
xor
repz
in
pop
dec
jae
sub
lahf
push
xchg
mov
jecxz
lcall
fs
lcall
jns
mov
in
ds
fldt
stos
xchg
add
pop
add
lcall
adc
xchg
je
inc
adc
outsb
aam
test
inc
dec
inc
xchg
into
iret
push
scas
imul
and
js
lock
incl
repz
out
inc
sti
movsb
jb
inc
ret
shl
xor
rclb
xchg
add
adc
and
sahf
mov
jo
push
out
fwait
push
push
pop
push
xor
push
int
or
mov
mov
test
mov
pop
pop
jg
pop
jl
lods
sub
imul
jl
outsl
add
inc
sarb
stc
stos
test
xchg
call
imul
cmp
pop
orl
rclb
xchg
repz
and
lds
mov
jmp
pusha
lds
mov
lods
rolb
insl
add
je
cmp
push
pushf
cli
fcoml
sub
push
xor
push
ficoml
pop
lret
pop
cwtl
xorl
fsts
call
xchg
xchg
fidivs
bound
mov
add
xchg
out
fiadds
into
sub
loopne
fistps
lcall
jmp
repnz
sub
ja
push
mov
pop
outsl
adcl
xchg
repnz
notb
scas
dec
roll
ljmp
lahf
mov
test
mov
cmpsl
xlat
pop
mov
inc
jmp
xlat
movsb
movsl
xor
insb
sbb
shrb
mov
mov
xor
mov
sub
test
js
pop
sbb
cwtl
enter
xchg
adc
cld
jne
testb
nop
lret
dec
lcall
mov
ret
mov
push
arpl
push
lret
add
inc
cwtl
and
lret
ficompl
dec
fisubl
test
pop
mov
mov
lahf
lods
rcrb
dec
mov
lret
xor
or
jo
inc
movsl
scas
cli
movl
call
imul
aad
push
in
leave
dec
lock
adcb
xchg
flds
outsl
dec
inc
sub
adc
fisubrs
xor
mov
pop
mov
shlb
pusha
pop
fcompl
aam
insb
add
cmpsl
and
or
cmp
mov
fs
gs
insb
adc
sbb
pushf
sbb
lret
sahf
and
and
sub
push
roll
es
push
pushf
pop
out
push
nop
mov
mov
rcrb
mov
jns
sbb
in
and
les
push
test
rclb
imul
sbb
cmp
xchg
inc
mov
dec
out
xchg
icebp
pop
repz
das
and
stos
in
stos
mov
mov
lods
cmp
fildll
mov
xor
inc
add
test
mov
lcall
xchg
push
rorl
insb
dec
jno
in
out
push
pop
ds
pop
insl
dec
push
adc
in
cs
mov
and
push
dec
stos
mov
or
es
mov
sbb
mov
mov
repnz
popw
dec
shl
insb
sti
cs
test
mov
punpckldq
sti
aaa
mov
mov
xor
cli
ret
outsb
inc
dec
pop
sbb
repnz
dec
ret
inc
sub
addr16
inc
sbb
jbe
adc
jb
inc
cld
sbb
jg
insl
outsb
mov
xchg
push
in
lcall
xchg
xchg
mov
lret
lret
out
xchg
fcompl
pop
lock
inc
xchg
inc
cli
push
ja
sti
adc
cs
out
mov
clc
push
lea
scas
clc
push
imul
les
scas
adc
fildll
xlat
xchg
and
sti
cmp
jg
xorb
push
sub
fmuls
pop
sub
mov
mov
pop
and
jge
dec
cmp
inc
add
aaa
cmp
xchg
cltd
push
cmp
inc
stc
sbb
into
pop
lds
outsb
dec
or
lds
mov
leave
pop
pop
sbb
clc
repz
cmpsb
pop
sub
aaa
jle
fidivl
gs
adc
mov
rorl
nop
xor
pop
popa
pop
jge
mov
xchg
adc
ja
shll
mov
jo
into
daa
sub
add
fstps
aas
fisubl
testw
mov
sub
lock
lahf
push
test
fisttpll
push
xchg
cmpsb
shlb
mov
lret
sbb
sbbb
xor
xor
std
js
ja
push
ja
adc
test
pop
mov
shl
std
sub
loopne
cmc
jae
stc
xor
jp
and
mov
movsb
push
push
mov
test
shll
push
js
mov
mov
enter
push
xchg
mov
dec
addr16
mov
xor
aad
sbb
cli
addr16
in
pop
or
mov
jecxz
int
jb
mov
jb
jmp
mov
fadds
sub
movsb
jno
xchg
pop
fcmovnbe
mov
and
push
es
fdivr
test
push
jmp
pusha
call
jne
lock
rcl
andb
fucomp
fsubrs
xchg
sbb
les
lea
lcall
mov
and
lret
xor
adc
cmp
pushl
or
stos
sub
add
mov
stc
cmp
nop
jb
ret
or
sub
xchg
sub
bound
and
sbbb
enter
push
jns
mov
sub
lods
add
cmp
inc
xchg
cld
mov
in
or
jbe
pop
cmp
aad
pop
shrb
sahf
push
inc
scas
lret
pusha
and
and
popa
rorb
jmp
sub
pop
pop
mov
pop
imulb
inc
pop
cmp
movsl
pop
xor
scas
jle
loope
or
in
mov
test
dec
inc
push
inc
int
lahf
push
xchg
lods
mov
cmp
mov
push
mov
sub
nop
lahf
jmp
xchg
dec
inc
inc
mov
fidivs
jb
or
arpl
cmp
xorl
mov
into
dec
push
popf
pop
mul
stos
push
sbb
ljmp
xor
pop
dec
mov
mov
cmovns
lea
notb
clc
dec
push
subb
mov
lods
xchg
xchg
dec
andb
inc
add
inc
cmp
sub
scas
add
add
jns
in
in
rolb
mul
imulb
int3
std
mov
out
push
cwtl
push
mov
roll
in
sub
lock
cmp
dec
and
fisttpll
jl
jno
out
jb
cmp
scas
mov
dec
push
mov
and
xchg
subb
xor
cmp
lret
mov
or
pusha
fisubrl
sbb
jl
sub
cmpsb
scas
rcll
sbb
add
jno
mov
mov
mov
fdivp
sub
cmp
out
sti
push
xchg
std
mov
fimuls
adc
jecxz
leave
insb
sub
xor
popa
inc
pop
frstor
sub
out
sbb
rorl
stos
dec
in
sbb
push
pop
imul
jmp
popa
sbb
mov
cltd
leave
push
movsb
xchg
xchg
mov
cmp
lret
push
mov
jmp
mov
and
cmpsb
icebp
shll
and
mov
lds
or
mov
mov
sti
xorl
sbb
in
mov
shll
push
and
dec
jb
fldl
inc
or
jle
xorb
mov
mov
jmp
jo
push
aas
jo
into
xchg
and
mov
pop
imul
pop
push
jns
je
adc
mov
mov
xchg
int3
or
iret
fcoml
out
imul
call
sarb
into
lret
xor
push
inc
jecxz
mov
push
or
xor
enter
jb
ja
push
bound
movzwl
jo
jns
jle
shll
hlt
cltd
rol
stc
les
inc
lods
std
in
fnstcw
and
or
pushf
dec
cmpsl
sbb
sub
cmpsl
cli
inc
push
xchg
insb
arpl
ret
or
stos
pop
int3
cmp
pushf
iret
adc
xor
stos
inc
push
stos
insb
ret
test
cmpsb
pop
pop
and
sbb
mov
pop
xlat
stos
jb
and
loop
out
mov
cltd
es
ds
or
int3
push
and
push
int3
pushfw
pop
pop
data16
aad
adc
mov
pop
in
fs
xor
adc
jbe
xchg
clc
dec
jge
and
iret
aad
push
cmp
call
aam
sub
popa
out
jecxz
movsb
xor
leave
jne
jno
outsl
cltd
push
icebp
push
test
adc
push
push
mov
jmp
ret
orps
push
js
or
jb
pop
and
xor
hlt
inc
scas
aam
popa
push
inc
sub
insb
jle
jo,pn
repnz
mov
jns
shll
jne
adc
sbb
nop
inc
in
adc
dec
hlt
inc
adc
xchg
imul
rolb
in
aas
notb
or
fmul
mov
push
inc
mov
scas
mov
jb
push
mov
sbb
push
ret
call
mov
aaa
mov
push
repnz
or
push
out
adcl
add
jle
ljmp
cmp
push
inc
fldt
addl
insb
loope
push
js
aaa
push
aad
ja
mov
dec
fcompl
shl
and
fimuls
outsb
xchg
sub
loope
xlat
testl
push
push
mov
sbb
xchg
addr16
mov
fsubrl
popf
clc
jecxz
sbb
cmpsl
enter
movsb
stos
push
movsl
outsb
int3
add
adc
iret
mov
out
fadd
fsubrs
dec
inc
and
stos
jne
popf
es
aaa
fiadds
repnz
cmp
loope
push
aad
ljmp
into
sub
subb
lahf
lds
ds
ds
in
pushf
lret
sub
jns
ljmp
ljmp
add
mov
cmp
mov
xlat
adc
inc
lret
jo
dec
sub
and
inc
push
or
les
push
pop
pop
lcall
notb
pop
out
ds
addr16
je
aad
clc
jmp
pusha
pop
dec
xchg
sub
push
mov
xlat
bound
arpl
pop
sti
mov
xor
or
mov
push
rol
std
leave
pop
inc
cmp
dec
push
std
pop
xchg
pop
stc
sbb
mov
dec
rorb
cmp
mov
dec
out
insb
push
sub
outsb
and
jb
dec
pop
jge
add
push
mov
cli
ss
cmpsb
pop
pop
mov
shlb
fstps
push
lret
xor
sub
jge
jns
lahf
lret
imul
push
xchg
pop
cmpsb
push
aam
adc
lret
fstpt
mov
adc
fstl
add
jns
enter
rcl
movsb
mov
cmp
test
rcll
cld
lea
or
addl
sub
mov
xchg
jl
lcall
or
push
mov
sub
lret
mov
dec
aas
sbb
addb
sbb
sub
lods
mov
fsubrs
ret
sbb
jl
sub
scas
lahf
pop
jp
pop
sbb
push
das
xor
push
aaa
sbb
cld
xor
pop
arpl
pushf
push
js
jbe
call
adc
imul
adc
sub
pop
adc
sahf
shll
mov
shl
out
push
adc
push
pop
movsb
test
loope
mov
imul
dec
xchg
jecxz
or
xchg
sub
pushf
push
movsb
imul
pop
adc
je,pt
mov
mov
hlt
pop
into
pop
sbb
push
pop
inc
loope
xor
jne
jnp
pusha
adc
mov
push
mov
jbe
mov
push
inc
mov
xchg
and
popl
jnp
cmp
lods
in
fsub
dec
gs
or
mov
jb
mov
stc
pop
adcl
or
out
dec
fcmovnu
fnsave
sub
xor
in
mov
cmp
mov
call
add
mov
mov
or
push
ret
loop
sti
lods
push
insl
mov
icebp
add
mull
scas
jnp
push
loopne
jp
sub
push
mov
push
inc
sahf
sub
mov
sahf
xor
jb
jne
popf
adc
mov
sti
pop
xor
lock
pop
mov
sub
shll
adc
fwait
lods
stos
scas
mov
daa
loop
addr16
loopne
imul
cmc
xchg
add
enter
adc
sahf
scas
mov
repz
inc
popf
iret
test
mov
sahf
xchg
imul
push
xor
enter
jmp
add
and
lea
fcomp
repnz
push
inc
cmp
imul
outsl
cmp
test
dec
leave
scas
add
mov
or
adc
stos
or
pcmpgtw
pop
adc
lods
mov
fbstp
mov
pop
xchg
pop
fs
cmp
push
or
jmp
in
shlb
xchg
lea
out
cmp
dec
jno
or
pop
shlb
in
into
or
sbb
mov
out
test
out
dec
int3
loopne
decb
scas
and
aam
mov
push
push
movsb
push
bound
scas
pop
sbb
inc
cmc
adc
arpl
pusha
jbe
inc
stos
aaa
xlat
lock
mulb
pop
fisttps
popa
jecxz
incb
or
or
sub
je
out
or
leave
fdiv
jp
adc
sbbl
je
push
pop
push
movsb
pop
ljmp
fldt
cmp
pop
cmp
dec
test
mov
mov
inc
pop
add
imul
js
rep
xor
mov
cmpsb
lds
fisubs
lcall
xchg
pushf
or
inc
pop
push
in
test
js
inc
mov
add
fdecstp
pop
add
jne
hlt
sbb
jge
test
add
xlat
mov
shll
lret
aam
pop
sbb
sbb
lcall
xchg
fsubs
and
nop
jno
testl
inc
ret
movsl
mov
and
jg
push
cmp
mov
adc
cltd
inc
inc
arpl
push
pop
xchg
repnz
cld
fs
loope
scas
aad
push
leave
xchg
es
add
sbb
loop
bound
or
jle
lods
mov
push
out
je
in
cmp
jl
fmull
pavgw
lret
or
inc
mov
jo
nop
movsb
adc
mov
push
lds
mov
mov
in
jp
aad
ret
pop
xor
push
lds
les
scas
jl
fs
outsb
sub
mov
fwait
setbe
mov
mov
insb
mov
mov
mov
dec
jae
xchg
sbb
enter
jns
into
xchg
dec
push
fstl
mov
stc
dec
bound
call
xchg
dec
cmp
bound
adc
xchg
jmp
pushf
dec
int3
adc
mov
and
xor
mov
cmpsl
push
jg
sti
outsb
jns
mov
cmp
inc
cmpsb
jle
mov
pop
push
imul
loope
mov
loop
cltd
add
cwtl
mov
inc
movsb
lods
gs
lds
mov
adc
call
cmpsl
pop
mov
cmp
js,pn
mov
sbb
leave
roll
sbb
int
mov
ds
clc
cmpsb
sub
sub
repnz
imul
pop
leave
imul
insl
into
pop
push
pusha
fsubrl
mov
in
jle
rorl
loop
in
add
scas
stos
dec
sbb
jo
in
setl
cmc
sbb
or
inc
inc
clc
mov
and
test
mov
xlat
cmpsl
xchg
push
loop
dec
rclb
sub
xchg
rcrb
xchg
and
fs
cmp
inc
popf
stos
cmp
mov
iret
jae
add
jns
pop
loope
in
out
cltd
sahf
fsubrp
xchg
popf
add
rclb
xlat
mov
inc
mov
dec
mov
insl
sbb
adc
inc
push
jns
xlat
pop
push
and
dec
push
addr16
mov
jo
pusha
add
sbb
pop
add
ds
shrb
dec
push
mov
popa
inc
pop
cwtl
loope
push
dec
jle
dec
mov
data16
mov
jne
push
lahf
std
insl
rorb
mov
movsl
xor
jg
and
jmp
mov
popa
insb
test
in
es
fcmovnb
shll
scas
mov
int3
adc
xchg
mov
sahf
popf
or
mov
movsb
inc
lods
punpckhdq
sub
add
out
inc
shll
out
jnp
add
cmp
test
sbb
jecxz
rcrb
mov
jmp
aas
xchg
push
into
cmpl
fdiv
out
nop
mov
push
andl
push
shlb
cmp
bnd
and
adc
push
jecxz
mov
ja
sbb
mov
in
pop
push
aaa
cmovnp
lret
sbb
loop
inc
mov
adc
icebp
lock
out
dec
pop
pop
push
mov
inc
popa
jle
scas
cmp
sub
call
in
or
pop
ret
add
sub
in
int
lret
vorps
sar
mov
mov
test
lret
push
sbb
push
add
mov
fs
mov
xchg
inc
mov
push
inc
test
mov
mov
icebp
rcrl
fildl
sbb
push
xchg
and
push
pop
sub
dec
dec
imul
mov
push
loope
mov
roll
jmp
call
or
dec
sahf
or
fcoml
pop
ss
lock
pusha
ja
es
jb
jge
test
xor
xor
jecxz
xchg
and
aam
inc
int3
mov
ja
shll
repz
testl
adc
sbbl
test
fwait
mov
or
nop
push
sbb
lds
fs
fisubl
fs
loop
inc
inc
mov
aaa
cmp
jp
fs
outsl
test
cld
add
rcr
or
aam
ret
sarb
push
dec
fs
dec
pop
test
xchg
ljmp
mov
jbe
jmp
pushf
and
push
stc
jp
call
lret
pop
fiadds
inc
xchg
mov
aaa
outsl
testl
push
dec
or
pop
addr16
ljmp
fnstcw
rcrl
or
pop
hlt
xchg
mov
push
add
lcall
hlt
enter
cmp
lahf
dec
les
inc
lds
or
adc
jl
sub
je
arpl
jmp
out
icebp
stc
out
je
jle
cmp
pushf
add
frstor
sub
and
loope
mov
dec
int
sahf
push
mov
ljmp
cmp
lods
mov
or
add
push
aad
dec
popf
out
lock
or
push
in
mov
sub
dec
not
push
and
aad
jne
gs
push
js
adc
inc
popa
xchg
mov
and
sahf
or
push
mov
aas
mov
jo
outsb
xor
jp
icebp
mov
xlat
xchg
cwtl
inc
int
xlat
xor
in
dec
ret
xchg
in
std
sub
test
ljmp
idivb
out
fcomi
divl
ret
outsb
popf
test
jmp
mov
fcom
daa
scas
les
jg
mov
or
inc
out
xor
cs
adc
addb
sbb
mov
call
xchg
cwtl
cmp
xchg
arpl
xchg
int3
clc
into
dec
dec
cmpsb
jnp
out
cmp
ss
cmc
jnp
sbb
sbb
adc
shl
and
out
sbb
adc
pop
repz
aaa
cmp
or
gs
jmp
stc
jp
ljmp
pusha
push
lock
xchg
pop
inc
mov
cmp
das
pop
pop
and
fldenv
mov
rcrl
insb
xchg
out
push
ror
outsb
test
jle
in
add
sbb
jne
aaa
fwait
shr
pop
into
mov
fnstcw
push
bound
inc
xchg
cs
push
js
dec
fiadds
mov
rcll
aaa
addr16
inc
mov
and
js
das
cld
lret
in
jne
dec
lret
aaa
mov
retw
sub
cmp
and
push
pop
mov
and
cmpl
xchg
loopne
jne
sub
and
xor
sbb
fdivr
mov
push
push
xlat
cld
out
xchg
adc
ficoms
push
or
cmp
lret
xchg
pop
jp
popf
cmp
mov
mov
aad
cmc
std
addr16
repz
sbb
pop
pop
movsb
dec
add
imul
mov
add
fwait
mov
sub
pop
cld
cmp
mov
mov
lods
int3
or
fstl
mov
into
aam
add
adc
mov
call
scas
mov
idivl
leave
cmpsb
xor
or
jno
mov
inc
cmc
imul
fcoml
lcall
test
prefetch
lods
cmp
cmp
add
xchg
xor
jns
push
jge
pop
in
jle
pop
stos
into
aaa
sti
inc
subb
adc
ret
lea
lret
push
std
xchg
lea
das
cmp
cwtl
lret
andb
sahf
aam
lods
roll
push
nop
test
add
pop
pop
in
push
leave
lahf
cltd
xor
js
pushf
popf
jb
outsb
mov
loopne
inc
popf
cmp
sbb
in
adc
stos
or
lret
or
adc
and
lods
lods
and
out
pop
mov
out
bound
das
mov
jb
aaa
test
add
cmp
lods
mov
cmp
dec
mul
cmc
adc
jo
clc
mov
jbe
inc
pop
mov
fcmovnb
je
xlat
cmpsl
incl
gs
int3
fwait
dec
out
mov
and
out
push
sub
sbb
push
enter
mov
mov
lods
cmpsb
int3
cmp
or
sub
rcll
shrl
pop
mov
das
add
lret
xor
or
and
cltd
lock
inc
cli
xor
movsb
jecxz
xchg
xor
xchg
xor
xor
jecxz
push
pop
push
pushf
je
mov
scas
mov
add
nop
outsl
sub
pop
push
out
inc
into
pop
fstps
fwait
pop
mov
xor
cli
test
into
xchg
xchg
test
mov
pop
rcrb
int
ficoms
testl
sbb
aaa
loopne
sub
mov
push
call
add
sub
movsl
mov
test
loope
cmp
xor
xlat
and
sub
xchg
adc
aaa
jecxz
testl
out
into
repz
das
mov
popf
or
and
out
leave
aaa
aas
loop
mov
enter
and
push
rol
mov
clc
mov
pop
pop
cmp
dec
orb
pop
push
mov
sar
pop
cmc
dec
das
sub
outsb
testl
pop
pop
xchg
cmp
repz
je
popa
in
mov
sbb
or
jb
out
roll
rcrl
imul
jecxz
inc
inc
push
xchg
pushf
jo
sbb
imul
imul
out
mov
sbb
loop
lods
xor
inc
jecxz
cli
mov
fisttps
xor
adc
cmpsl
test
push
jae
imul
popf
jle
pop
sub
pop
pop
rcrl
and
add
xchg
lods
cmp
ret
add
lret
clc
mov
test
cltd
add
dec
jnp
mov
faddl
push
out
sub
sbb
pop
addl
sub
xchg
nop
repz
dec
popf
addr16
loopne
jg
push
imul
sbb
push
adc
adc
adc
jne
ret
pop
jle,pt
jo
mov
roll
sub
dec
pusha
inc
pop
repnz
scas
ja
mov
scas
xchg
outsb
cmp
movsl
je
inc
test
jae
pop
or
lock
in
add
adc
xor
sbbl
or
je
or
sti
or
ror
adc
adcb
jbe
mov
ret
xchg
add
or
xchg
addl
aad
lock
pushf
xchg
mov
iret
sahf
xor
xor
rcr
int3
out
adc
stos
cmp
xlat
imul
loope
pop
or
shl
push
mov
push
nop
pushf
imul
sub
pop
sbb
and
pop
pop
movsl
lret
scas
sub
call
imul
add
inc
adc
test
jns
mov
testl
jo
imul
out
negb
pop
dec
daa
repz
cmpsl
icebp
or
outsl
popa
push
mov
stos
mov
pop
iret
xor
out
sbb
ljmp
aam
lock
test
sub
push
sbb
mov
fdivl
clc
gs
shll
mov
cmp
inc
add
adc
pusha
pop
popf
sbbl
push
cmp
dec
mov
das
orb
inc
xchg
or
push
arpl
inc
mov
jge
outsl
cmp
jg
out
mov
cmp
icebp
xchg
pop
js
push
popa
jmp
movsl
daa
mov
xor
out
or
lods
sub
dec
lcall
push
es
ror
xor
ret
shrl
addr16
adc
add
movsb
in
insl
push
inc
mov
sbb
cmp
pop
aad
fstpt
add
es
ljmp
xor
sbb
orl
inc
mov
sub
pop
stc
push
in
push
sub
addr16
push
das
cmpsl
ret
inc
scas
nop
cmpsb
adc
cmpsb
ljmp
push
mov
push
pusha
ficoms
into
inc
mov
shl
add
xor
aas
ficompl
and
daa
push
repz
and
and
sbb
mov
js
push
add
push
mov
sub
icebp
jno
jmp
sbb
lahf
jg
adc
ja
ljmp
jg
jecxz
fstl
jbe
and
add
aam
fs
jnp
gs
lods
adc
dec
aad
mov
jl
shl
lahf
jmp
mov
leave
repnz
pop
sbb
enter
in
adc
arpl
pop
pop
ret
dec
roll
cmp
outsb
sbb
mov
mov
mov
dec
push
push
sub
int
leave
cmp
int3
mov
xor
jnp
add
jnp
xchg
xchg
stos
dec
shlb
nop
sar
mov
jno
inc
pusha
sub
imul
andb
lods
mov
sahf
jle
add
mov
cmpl
movsl
fwait
and
cmpsl
imul
push
xchg
test
jnp
xchg
aas
dec
add
mov
mov
and
scas
mov
loopne
push
shlb
aaa
lock
mov
jg
mov
bound
lret
xchg
and
cmc
inc
sbb
lcall
push
fstpl
loope
lahf
dec
std
mov
sub
stos
xor
cmp
push
pop
and
es
inc
xchg
jge
inc
pop
pop
adc
inc
ja
lds
jne
sub
out
cmpsl
gs
jb
push
aas
xchg
xorl
xchg
out
cmp
adc
aaa
mov
jmp
and
ret
adc
lods
gs
lock
shr
insl
and
addr16
push
add
sbb
stos
and
mov
aam
jo
push
or
cld
fnstsw
pop
insb
fstl
ret
cwtl
dec
xor
and
pop
sub
es
cmc
sarl
out
fisubrl
cmp
fs
or
dec
inc
insl
inc
dec
cli
dec
sbb
cltd
dec
dec
push
shll
xchg
mov
push
jg
jo
popf
arpl
mov
cmp
mov
mov
sbb
jb
fiaddl
mov
out
ss
test
cwtl
dec
sbb
or
popa
cld
mov
pop
jl
outsl
iret
test
xchg
movsb
xor
jl
cmp
push
adc
jmp
add
jb
call
sahf
mov
stos
je
adc
les
sbb
or
stos
out
into
mov
stos
xchg
xchg
loop
cmp
negl
ljmp
xor
pop
icebp
leave
sub
dec
aad
jb
xchg
cmpb
popf
fistpl
inc
push
andl
rol
add
and
sti
gs
jg
xor
aam
sub
add
lock
push
add
inc
xchg
push
adc
clc
out
inc
movsb
iret
xlat
lahf
xor
xor
in
mov
xor
mov
cmp
mov
lods
sbb
ds
push
test
fdivrs
sub
sbb
in
test
inc
or
inc
mov
xchg
and
push
sbb
pop
cmc
repnz
sbb
xchg
jnp
jg
xlat
scas
mov
mov
or
push
inc
orl
push
test
jb
int
stos
lcall
andb
add
push
and
std
pop
test
push
das
frstor
pop
fldl
xchg
dec
inc
pop
xor
stos
dec
or
pop
pop
out
leave
aam
fisubs
jge
jl
xchg
pop
fdivrs
sbbb
or
push
cs
je
sub
dec
cli
shrb
orl
loopne
loopne
aaa
xor
adc
pop
jge
push
enter
sub
call
or
outsb
dec
orb
adc
cmp
jmp
cmp
dec
mov
xchg
sub
add
andl
fmul
mov
nop
enter
pusha
lods
push
mov
pop
subl
mov
sbb
mov
and
xor
mov
jnp
test
andl
and
sarb
push
and
je
in
and
cmp
rorb
out
es
popa
or
xor
sahf
fcmove
push
jge
xlat
dec
ret
add
adc
cmpsb
mov
xchg
mov
add
push
mov
cmp
xor
outsl
jns
mov
incb
not
andl
cmc
lock
js
mov
mov
push
sbb
pop
sbb
mov
sbb
mov
jns
pop
loopne
mov
in
fnstenv
jne
jl
add
dec
test
sbb
dec
lahf
xor
xchg
test
fmulp
xchg
mov
int3
js
cltd
scas
push
mov
and
lock
cmpl
pop
push
push
mov
cmp
xchg
jo
fwait
cmp
call
pop
mov
cmc
xchg
cs
jl
add
dec
dec
fbld
mov
mov
mov
ja
imul
lods
jo
rcll
mov
das
sbb
add
inc
data16
jb
inc
add
fbstp
mov
add
js
xor
xchg
scas
add
mov
cmp
jge
adc
or
jp
inc
sbb
xchg
lret
jp
xchg
rolb
loopne
ss
les
dec
sti
sub
pop
jb
dec
out
inc
push
data16
xor
add
arpl
sahf
jno
dec
xor
rep
cltd
lret
mov
insl
fildll
pop
cmp
mov
aam
outsl
lods
add
xlat
inc
cmp
ja
enter
cli
jb
fdivrs
outsb
pop
lods
adc
mov
dec
mov
insl
fs
pop
mov
xor
pop
mov
hlt
imull
xlat
sub
xor
ret
loop
mov
or
jg
int
pop
decb
ds
sbb
cwtl
pusha
mov
and
stos
inc
xor
fwait
mov
js
cmp
addr16
mov
push
mov
into
jno
xor
mov
repz
jmp
and
add
insb
add
xor
push
sub
xor
mov
aaa
jecxz
xchg
pusha
mov
fucom
aaa
clc
inc
idivb
sub
mov
xor
sti
jno
lods
pop
aaa
divb
mov
cmp
les
shl
lods
jp
lahf
cs
add
pop
fidivl
ss
icebp
mov
cmpsl
mov
adc
jno
jb
out
jb
shl
leave
mov
sbb
jns
pop
outsl
adc
and
push
cmpsl
sbb
dec
inc
gs
add
int3
mov
aas
adc
sub
lock
sub
loope
je
lds
dec
mov
jg
scas
popf
lcall
out
mov
push
cmp
in
pop
int3
cld
xorb
in
lret
ficoml
mov
mov
pop
mov
mov
adc
mov
gs
xor
mov
jecxz
xor
dec
adc
jnp
inc
push
xchg
mov
je
cmp
xchg
jnp
mov
cmpsl
addr16
adc
xchg
mov
icebp
rorl
cmpsb
movsb
ljmp
sub
push
inc
sub
aaa
inc
push
adc
jo
lret
ss
pop
cwtl
jmp
repz
mov
addr16
roll
pop
dec
stos
xchg
ja
xchg
pop
mov
jg
hlt
dec
cmpsb
xorl
fisttpll
movl
or
or
xor
pusha
push
sbb
dec
cld
int
xor
lahf
sbb
xchg
adc
sub
bound
sub
sti
dec
mov
pop
sar
rol
jge
int
mov
jno
mov
lods
push
xor
jnp
mov
xlat
ret
push
and
push
js
lcall
lea
leave
adc
mov
in
fstpt
sub
push
mov
mov
adc
insb
mov
je
sbb
test
dec
out
xchg
shr
mov
adc
pushf
cmp
pop
cmp
imul
push
or
lahf
sbb
push
cwtl
rorl
mov
push
pop
jle
mov
repnz
adc
mov
lahf
pop
rorb
inc
in
iret
mov
mov
pop
push
int3
inc
or
sbb
addl
push
das
jns
bound
in
popa
bound
cwtl
push
stc
xchg
loopne
pushf
jne
ss
test
pop
dec
sbb
iret
clc
pop
and
mov
ljmp
imul
ljmp
push
mov
lock
daa
sub
and
pop
shl
addr16
aam
and
sub
sbb
xor
je
jmp
or
in
adc
in
mov
fwait
pop
cmp
xchg
ss
push
arpl
cld
dec
push
and
and
rolb
sbb
loop
rolb
adc
mov
aam
dec
shrb
repnz
adc
adc
mov
jecxz
stos
push
or
jg
lods
jno
push
xchg
sahf
cmp
dec
xor
je
pop
cltd
jecxz
or
inc
cmp
push
aaa
aaa
cmp
mov
mov
rcll
or
lods
adc
mov
movsl
lock
cltd
inc
lahf
insl
call
stos
push
aaa
cmp
push
or
ret
xlat
jae
sbb
fsubr
push
in
and
mov
mov
jnp
mov
ret
pop
jo
xorl
cmpsl
lock
push
xchg
inc
push
ss
aad
lock
insl
ficompl
aad
pop
out
fdivr
mov
packssdw
jns
add
mov
stos
and
xor
mov
pop
pop
add
leave
dec
pusha
inc
ret
xlat
jmp
or
int3
and
loop
xchg
lock
sbb
or
aaa
add
popa
es
movsb
cs
sub
push
jne
loope
lahf
mov
out
out
rcrl
push
arpl
sarb
mov
int
mov
and
int
adc
aas
pop
jecxz
cmpsb
jo
push
inc
movsb
pop
dec
sbb
or
mov
fsubs
std
icebp
adc
in
xor
sbb
je
sub
rcrl
das
sbb
jg
mov
ret
lods
adc
xchg
jnp
add
jbe
mov
ret
sbb
fsubs
sbb
popf
push
int
jno
adc
push
dec
cmpsl
mov
mov
inc
aad
gs
mov
sub
push
movsb
ret
and
or
jge
hlt
repz
dec
sbb
repnz
and
jno
cmc
data16
int
push
lret
mov
mov
les
mov
adc
lret
adc
or
mov
pusha
push
or
mov
sbb
add
cmp
xchg
cltd
pop
repnz
lcall
mov
push
pop
adc
rcrl
pop
and
pop
pop
jg
pop
xlat
adc
ret
je
ljmp
pop
notl
add
fadds
and
sub
aas
mov
stos
shll
sub
jbe
fdivr
mov
inc
push
mov
adc
test
dec
xchg
lret
adc
mov
xchg
mov
in
cmp
pop
movsl
clc
sbb
in
adc
xchg
lcall
fisttpll
xlat
inc
pop
scas
cwtl
adc
cmp
jno
lret
cld
imul
insb
jo
jp
loope
xchg
int
sbb
pop
dec
clc
imul
rcll
jb
cmp
push
and
adc
loop
cli
cmp
cmpsb
mov
mov
adc
testl
test
inc
pop
out
or
arpl
test
adc
ret
fwait
lea
subb
add
pop
icebp
and
mov
or
pop
mov
sahf
or
mov
jae
cmp
mov
rol
lods
cmp
cmp
adc
enter
mov
pop
es
iret
in
mov
mov
push
add
mov
or
stc
fneni(8087
pop
pop
lahf
test
add
pop
fisubrs
dec
bound
push
mov
xchg
mov
dec
aam
and
inc
mov
loopne
xchg
sub
push
roll
push
in
lods
inc
xchg
ret
mov
or
into
mov
dec
xchg
xchg
adc
xchg
ret
fsts
iret
test
lds
sub
test
jns
ss
mov
arpl
jnp
outsb
data16
jbe
xchg
add
mov
ficomps
sub
sbb
lret
cmp
lods
xchg
sub
jne
cld
cmc
jge
js
pop
lea
negl
xchg
ljmp
lods
rcr
mov
sbb
pop
flds
decb
mov
mov
lret
into
mov
sub
cmp
frstor
popa
pop
sbb
imul
jns
aaa
pop
imul
dec
imul
pop
adc
lcall
mov
scas
inc
pop
inc
mov
jb
xlat
push
stc
pop
popa
xchg
stc
add
or
mov
add
stos
aam
je
stos
dec
dec
test
arpl
insb
add
pop
das
repz
movsl
or
sbb
jnp
adc
push
sbb
add
jns
push
jo
nop
mov
lds
movsb
add
loopne
jmp
add
pop
cmc
mov
lock
cmpsl
into
cmp
xchg
xchg
and
push
push
mov
les
enter
rorb
test
scas
cld
lock
sahf
fs
mov
cmpb
or
mov
mov
shll
shr
shll
fs
sar
mov
stos
mov
adc
push
inc
ja
or
lret
arpl
popa
insb
inc
cmp
out
imul
pop
mov
pop
xchg
mov
daa
es
cmp
in
cmp
test
sbb
leave
mov
outsb
xchg
cmc
in
sbb
mov
jo
mov
aaa
sbb
test
jg
mov
cmpsb
dec
into
add
mov
sbb
in
je
inc
jae
popf
mov
jecxz
cmc
mov
cmp
insl
sbb
mov
push
sbb
jle
outsl
mov
loope
popa
lods
and
mov
les
mov
ficoml
add
out
stos
dec
jl
jle
loop
sbb
out
mov
push
out
sub
lea
push
ljmp
xchg
jae
dec
add
add
push
out
fcmovu
xlat
pop
call
fs
test
and
jbe
pusha
or
stos
leave
jmp
fbld
imul
jb
jge
aaa
mov
push
call
in
or
das
cltd
or
dec
push
adc
scas
in
adc
repnz
xchg
dec
mov
stos
in
push
pusha
inc
push
jb
insl
in
push
xchg
stos
push
jmp
mov
loope
push
jecxz
sbb
icebp
mov
out
fs
add
cmp
jne
les
inc
mov
dec
js
test
adc
lea
stc
ret
jl
xchg
mov
inc
je
lret
in
or
xor
pushf
mov
sbb
lret
lahf
dec
cli
rcrb
push
pop
fstpl
das
not
adc
orb
orl
or
jnp
outsb
jnp
or
cmpsl
scas
xor
in
push
fldpi
mov
jmp
das
sbb
arpl
aad
mov
cli
hlt
lods
ds
jmp
push
pop
mov
jp
lea
nop
mov
and
push
into
mov
jbe
adc
mov
xlat
sub
enter
stc
outsb
fdiv
ljmp
mov
cmpsb
dec
les
jo
fnstenv
add
in
outsl
int3
enter
ret
mov
mov
arpl
test
mov
jno
das
fisubrs
or
add
leave
arpl
and
fnstcw
mov
sbb
cmp
rcrl
bound
sahf
sub
in
push
aam
lock
je
out
push
adc
pusha
inc
mov
xor
jmp
or
mov
in
sub
ret
bound
push
xor
sub
rcl
outsb
push
jge
loope
fmuls
imul
in
adc
dec
xchg
stc
mov
push
dec
test
pop
stos
xchg
imul
bound
out
stos
in
mov
xor
inc
sbbb
cmpsb
mov
mov
adcb
mov
xor
ret
hlt
mov
push
pop
test
popa
inc
dec
int
faddp
lret
and
mov
aas
jge
rolb
dec
in
mov
inc
les
push
adc
mov
mov
push
inc
gs
xor
mov
push
cmpsl
jne
sti
popf
sahf
pop
lcall
mov
pop
enter
push
mov
push
enter
sub
fst
jg
repz
push
push
mov
cmovnp
es
rcll
push
mov
movsl
pop
pop
mov
pop
mov
icebp
movsb
mov
dec
xchg
cmpsl
ds
jne
cwtl
int
jle
enter
xchg
xchg
mov
sti
cltd
sahf
dec
mov
pop
inc
xlat
push
xchg
incb
insb
xor
sarl
lock
mov
or
nop
fadds
pop
aam
ds
lods
rolb
sub
mov
loopne
call
aas
xor
lret
push
lea
je
add
fs
and
add
lret
or
cli
pop
les
push
imul
ljmp
xchg
cmp
insb
jle
xor
stos
shr
jns
imul
jno
cli
sub
outsb
mov
push
gs
or
out
pop
cltd
mov
adc
pop
jecxz
addr16
test
ret
lahf
outsb
or
inc
pop
das
xor
cmpsl
xchg
in
pop
cmp
jnp
pop
lcall
mov
push
pop
in
ljmp
cli
int
test
out
pop
dec
cwtl
popl
pop
lret
cwtl
push
idivb
ficoms
xchg
push
js
and
dec
cmp
add
pop
fmul
pop
push
fcomi
rcrl
cmc
adc
mov
jl
into
xchg
mov
mov
setge
les
dec
cmp
stc
dec
lret
cmpsb
dec
sahf
cli
lods
push
xchg
leave
daa
ret
cmp
cmp
push
icebp
ss
stos
push
scas
call
jg
les
xchg
or
repz
imul
movsb
add
fucom
dec
shlb
fmull
js
fwait
les
and
nop
out
add
pop
xchg
push
test
outsl
pop
cmp
mov
daa
mov
adc
cmpsl
cmpsb
dec
xchg
cmp
jle
std
push
loope
xchg
push
movsb
sub
gs
cmovbe
test
pop
mov
cmp
ret
jb
imul
pop
in
xor
test
ftst
xchg
leave
adc
mov
inc
mov
rorl
xchg
push
jle
lods
dec
into
fildl
push
lcall
jb
or
push
lahf
cmpsb
push
mov
push
fsubl
nop
and
mov
push
int
cmc
or
xchg
into
paddsw
sub
push
icebp
pop
int3
inc
push
push
lret
stos
pushf
and
cmp
adcb
cld
je
lods
shlb
test
xor
dec
cltd
mov
shrl
leave
adc
int
lods
int
adc
or
and
push
sbb
jno
cs
mov
enter
sbb
sbb
out
add
insb
das
imull
daa
cmpsb
out
push
loopne
mov
mov
rorb
xchg
pop
out
pop
xor
enter
addb
dec
mov
enter
pminub
icebp
scas
jno
and
ret
inc
add
xor
xor
inc
xor
add
sbbb
js
clc
sbb
or
inc
pop
or
fimull
clc
out
sar
popf
inc
outsb
xchg
and
or
loope
in
mov
lods
aad
addr16
mov
push
adc
dec
ficompl
notb
enter
in
adc
inc
xorl
fucomp
fidivrs
inc
push
dec
mov
cmpsl
xchg
sbb
leave
or
das
into
out
xor
dec
insb
cmp
filds
and
mov
in
das
outsl
pop
das
sbbb
scas
fwait
jge
jns
pmullw
jecxz
mov
shll
and
push
imulb
push
cmc
mov
push
and
or
xchg
int
xor
loop
or
mov
fxtract
sahf
inc
xor
sbb
inc
cs
xor
xor
aaa
sub
jge
movl
push
cs
shll
mov
pop
cltd
adc
popa
pop
and
int3
imul
outsb
adc
aas
insb
outsl
or
ja
enter
inc
icebp
fisubs
and
loop
stos
rcrb
inc
mov
or
xchg
in
jmp
adc
loopne
inc
leave
jp
mov
push
pop
add
stos
jge
cmp
sbb
nop
nop
popf
cmp
leave
test
fstl
test
rcr
mov
mov
jecxz
adc
or
xchg
test
imul
mov
mov
pop
enter
jnp
gs
scas
mov
cmp
adc
fistpll
xchg
pop
jb
sub
mov
xor
sbb
mov
push
scas
mov
jne
jb
xor
rcll
push
popa
test
xor
mov
jge
iret
mov
sbb
pop
imulb
mov
fsubrp
popf
out
push
test
and
jb
sbb
add
jo
adc
test
clc
lea
ret
mov
mov
push
cmp
and
mov
rorl
add
push
lcall
inc
sbbb
sbb
push
cmp
mov
mov
and
xor
nop
pop
jo
out
adc
jle
mov
lock
daa
mov
nop
sahf
arpl
aam
repnz
sti
sub
test
call
cmp
jno
push
fs
stos
fmull
jg
jo
adc
filds
imul
icebp
sub
out
and
ja
or
outsl
iret
or
fwait
or
cli
fwait
cmp
rcrb
je
mov
add
dec
call
je
push
inc
pusha
push
repnz
lahf
cmc
popa
cmpsl
pop
jbe
out
adc
mov
dec
push
xchg
xchg
leave
insl
sti
xor
ds
jp
in
fs
or
subl
sub
scas
movsl
gs
sub
mov
clc
xchg
inc
cmpb
cmp
pop
lcall
dec
addr16
fcoms
dec
mov
lods
inc
push
shrl
jb
jge
pusha
and
inc
cld
fdivrl
js
and
rorb
je
mov
and
sbb
push
mov
jb
mov
or
aad
imul
mov
mov
and
inc
or
test
arpl
sbb
lock
es
test
cwtl
inc
sbb
mov
lcall
cltd
clc
xchg
mov
imul
cld
xorl
shrb
lods
lret
jo
mov
icebp
aam
add
fisubrs
sti
or
or
pop
daa
jmp
push
fdivl
mov
cmp
mov
loop
loope
add
rorb
pop
mov
data16
loopne
pop
pushf
or
mov
dec
aad
inc
movsl
movsl
cmp
clc
rorl
aaa
subb
cmp
push
or
and
nop
fadds
jl
adc
pushf
mov
jns
jge
bound
int
xorb
cmp
arpl
xor
in
ficoms
add
addr16
or
scas
repz
je
sub
mov
mov
out
ljmp
xlat
mov
adc
fcoms
movsb
repnz
lea
sbb
mov
mov
sbb
popa
rolb
mov
cwtl
pop
pop
rorb
pop
cmpsb
add
outsb
in
xchg
mov
or
lock
push
dec
pop
ja
pop
daa
inc
push
cltd
jp
loopne
pushf
cmp
xor
xchg
jecxz
push
mov
and
dec
cmc
pop
xchg
aaa
jne
sub
pusha
lds
or
dec
loopne
cmpb
fbld
jae
movsl
mov
ja
iret
sbb
int3
push
add
push
mov
mov
fwait
iret
sub
adc
mov
movsl
cmp
shll
dec
add
ljmp
lock
lods
xor
jbe
fistpll
roll
mov
inc
add
add
fdivrs
add
shl
int
jl
add
test
mov
xchg
scas
pop
pop
sahf
inc
and
pop
push
addl
cmpsl
mov
mov
std
add
add
bound
dec
fwait
push
jne
mov
and
out
dec
xchg
lea
movsb
ss
xor
dec
out
ljmp
ret
pop
sar
xchg
insl
repz
xchg
xchg
cmp
lcall
inc
sahf
aam
cmp
aam
rolb
mov
jg
push
or
repnz
mov
int
jb
pop
cmpsl
jb
ret
pop
mov
sub
fadds
ja
lret
xchg
je
and
xchg
out
ljmp
cli
mov
gs
cs
dec
sbb
mov
dec
sahf
inc
inc
rolb
imul
sti
xchg
pop
add
xchg
daa
fsubrp
dec
cli
adc
jns
push
addl
imul
sub
sbb
inc
xlat
les
inc
test
or
bound
sub
fldln2
imul
push
cmp
pop
xchg
rcrb
pushf
sub
pop
dec
mov
add
inc
pop
jb
stos
add
in
mov
mov
jge
mov
adc
adc
shl
fs
stc
adc
popa
push
clc
rolb
sub
hlt
xchg
rolb
mov
stc
test
fistpll
insb
push
mov
sarl
ljmp
popf
dec
sti
bound
jge
mov
xchg
jb
pop
dec
and
popf
lods
xchg
in
sti
fst
jge
sbb
cli
and
ss
push
loopne
inc
mov
jp
sbb
mov
cmc
push
cltd
push
into
pop
cmp
jo
inc
adc
mov
jno
sub
nop
inc
out
jmp
or
mov
sbb
push
push
cmp
adcl
iret
es
jmp
fwait
xchg
adc
repnz
ret
fs
push
fdivp
mov
fidivl
jl
adc
stos
rcrb
cmp
or
jmp
je
pop
daa
outsl
jmp
data16
arpl
jl
push
daa
xchg
sbb
in
sbb
mov
test
cmp
jg
xor
sbb
inc
out
pop
repz
cmp
inc
or
stos
mov
add
jae
fcoms
sbb
call
rcll
adc
xchg
pushf
sub
test
mov
xchg
out
gs
cmc
popa
pop
in
aaa
cld
out
inc
add
outsl
pop
xor
loopne
and
or
icebp
ret
mov
lds
das
int3
xchg
div
push
lahf
mov
stc
decb
xor
xchg
jl
scas
pop
mov
jle
sbb
dec
push
andb
data16
and
push
xchg
mov
add
xchg
lret
scas
int3
mov
mov
scas
xor
push
add
push
out
enter
mov
mov
clc
stos
icebp
fisubrl
insb
jmp
pop
movsb
xchg
mov
out
stc
and
fwait
movsb
add
jecxz
sti
or
and
xor
ds
rclb
xlat
xor
pop
adc
pop
fwait
adc
pop
aam
bound
xchg
addr16
lods
scas
data16
cmpb
dec
push
mov
lcall
inc
jnp
xchg
stos
xlat
pop
pop
mov
dec
mov
sub
ficomps
stos
stc
xchg
bound
dec
jmp
jbe
xor
les
mov
pop
mov
scas
cmp
dec
inc
mov
stc
dec
cmpsl
add
std
jle
insw
jp
inc
insl
dec
sub
xlat
in
arpl
aad
jl
xor
pop
sub
aad
movsl
stos
dec
lods
mov
inc
cld
or
bound
lds
jb
mov
loope
mov
mov
mov
sub
jnp
jb
and
cs
add
lds
sub
in
sub
sbb
loope
mov
jg
in
mov
int3
jge
cmp
repnz
jne
std
pop
push
cmp
ficomps
adc
xor
dec
dec
cmp
fsubr
lea
mov
das
std
xor
mov
aad
xchg
mov
and
pop
jnp
mov
sbb
ja
or
pushf
jmp
jp
rolb
dec
cmp
sti
inc
jmp
add
sbb
sahf
jo
xor
daa
jp
and
lods
imul
mov
inc
inc
cwtl
mov
sub
push
in
mov
sbb
fdivrl
add
ja
pop
or
ljmp
or
jg
lock
ja
sub
xor
sub
inc
mov
in
push
inc
cwtl
mov
xchg
movsl
fcmovnb
aam
jecxz
fiaddl
fs
add
mov
pop
push
pop
dec
mov
bound
adc
jp
sbb
dec
insl
lcall
pop
pop
decw
das
jmp
jp
lock
mov
push
iret
mov
cltd
sub
inc
jmp
orb
xchg
fwait
push
sub
push
mov
xchg
std
mov
iret
pop
sub
cmp
rcrl
xchg
mov
lea
loopne
cltd
test
pop
fimuls
cmp
add
cmp
or
or
je
jge
mov
fnstsw
mov
movsb
icebp
ficoml
xor
test
push
das
jle
mov
adc
jb
jmp
mov
dec
out
mov
jp
in
inc
and
pop
sbb
es
repz
pushf
ds
push
and
fisubrs
or
cld
add
ljmp
push
aad
repz
mov
shrl
pop
pop
mov
add
jbe
jae
cld
dec
mov
ljmp
mov
jo
loop
ds
mov
lods
and
in
negl
or
into
mov
sbb
cld
sub
inc
adc
lahf
cmp
int3
xchg
cld
pop
clc
lods
mov
adc
cld
xchg
mov
dec
push
or
fs
xor
and
call
test
fisubrs
insl
sbb
inc
daa
sub
lret
test
lahf
or
push
add
push
or
pusha
clc
inc
pusha
fadd
stos
jb
push
mov
mov
in
and
dec
je
in
outsb
fidivrl
popf
cs
pusha
or
aam
test
push
shr
pusha
inc
cmpsb
sub
xchg
jnp
cld
add
and
push
outsl
pop
or
and
leave
adc
mov
ss
mov
push
adc
lock
lods
cmp
push
dec
fsubrs
sub
lods
lods
cs
pop
mov
sarl
mov
pushf
movsl
mov
mov
les
div
sub
adc
mov
jge
cwtl
and
fcoms
or
neg
push
movsb
leave
mov
jb
pop
xchg
hlt
daa
movsb
test
or
call
insl
shll
xor
pop
xor
cmpsb
xor
inc
mov
repnz
mov
add
mov
sti
pop
xchg
mov
jecxz
mov
jecxz
jb
pop
insl
inc
push
mov
sbb
bound
loopne
push
xor
mov
adc
movsb
nop
mov
stos
jnp
imul
andb
mov
lret
pop
fmull
adcb
cmp
sub
pop
jg
xchg
pop
in
shrb
pop
lahf
pop
lods
sbb
mov
pop
imul
gs
sub
jp
or
loopne
in
fstl
jb
in
inc
lods
cmpsl
or
js
add
lret
mov
ret
inc
jbe
add
mov
add
lahf
mov
outsb
cmp
arpl
outsl
and
insl
push
in
push
stc
dec
cmp
popf
jp
sbb
hlt
and
pusha
stos
cmp
cmp
lcall
mov
pop
popf
or
sbb
add
ja
in
mov
shrb
mov
sub
sub
stos
rcrl
xor
out
shrb
cmp
cmp
arpl
scas
insl
push
test
pop
jle
inc
subl
mov
mov
faddl
xor
push
pop
jo
add
sbb
jae
lret
rcl
add
in
add
sub
mov
fdiv
stos
rorl
int3
cltd
mov
mov
mov
add
cmp
rcrb
les
mov
push
xor
insb
push
stos
jge
stc
loop
or
pop
jno
dec
scas
jmp
mov
call
xchg
mov
jne
into
jnp
jmp
in
sahf
jno
push
add
mov
out
cmpsl
shll
mov
push
ficoml
jmp
test
call
add
cli
mov
xchg
daa
push
mov
pop
dec
cmp
imul
jns
dec
jnp
xchg
movl
popa
mov
inc
xor
push
xchg
icebp
jns
add
push
aas
xchg
mov
imul
ds
dec
mov
xor
stos
jle
inc
pop
inc
mov
and
jecxz
push
dec
cs
pop
xor
popa
popa
push
divl
xchg
icebp
test
pop
leave
mov
mov
jg
jo
repnz
add
cmpl
dec
adc
bsr
ss
clc
in
mov
sti
aas
js
loopne
pop
inc
mov
lds
push
dec
test
shl
out
add
frstor
mov
stos
mov
stos
pop
xchg
xchg
push
mov
leave
adc
stc
xor
mov
push
pop
cmp
lret
xchg
dec
pushaw
dec
jae
and
outsl
ja
mov
in
iret
rcrb
sbb
xlat
mov
jge
scas
sub
scas
cmpsl
orl
inc
mov
hlt
adc
sub
call
into
addr16
xchg
add
std
in
lret
jl
std
sub
push
dec
pop
in
and
xor
test
dec
push
pushf
pop
outsl
xor
ficoml
lds
call
mov
icebp
iret
cmpsb
xor
shrb
dec
sub
nop
int
xchg
push
clc
loope
aam
arpl
push
arpl
and
popf
fdivrl
xor
fidivs
jmp
inc
in
sbb
cmp
or
or
jmp
sbb
push
add
or
pop
insl
sti
lea
fadds
testl
stos
das
lahf
add
cmpsb
mov
push
jns
gs
push
xor
and
shrb
cmp
cmpsb
dec
rcr
cld
pop
int
ds
cmpsb
adc
enter
shrb
mov
push
cld
les
nop
ror
sahf
out
mov
arpl
push
notl
pop
cmp
mov
dec
adc
cwtl
push
push
mov
mov
fstl
and
lahf
loop
shl
jg
add
aad
inc
mov
mov
jl
nop
mov
add
add
mov
jmp
in
mov
in
shr
insb
enter
push
lods
out
mov
adcb
lods
sub
mov
or
jnp
dec
enter
fsubr
push
pusha
in
iret
mov
in
add
push
mov
in
popa
dec
movl
cmpb
mov
push
dec
lds
pop
hlt
mov
aas
mov
mov
sarb
xchg
pushf
ret
sbb
scas
popf
daa
jno
pop
cld
outsl
cmp
add
pop
jno
dec
jae
mov
movsb
jge
sarl
scas
mov
loopne
outsl
mov
imul
dec
bound
cli
incb
dec
mov
pop
shll
sbb
push
into
das
pop
lahf
popf
cmp
lahf
mov
sbb
sbbl
inc
cld
fsubrl
sbbb
in
jns
cmp
arpl
xchg
ljmp
dec
sub
or
clc
push
addr16
test
push
mov
cli
pushf
and
fisubs
andl
cmp
xchg
daa
jne
add
outsl
int
rorl
push
xchg
in
xchg
call
mov
aas
sub
inc
gs
cmp
insb
daa
icebp
andl
jno
rorl
outsl
outsb
mov
leave
mov
imulb
pop
leave
push
hlt
mov
inc
sahf
fs
adc
scas
cmpl
sbb
gs
xchg
mov
mov
gs
xor
dec
cmp
subl
mov
pop
xlat
pusha
lea
and
sbb
andb
int
lods
inc
int
sbb
clc
sub
out
pop
mov
stos
test
hlt
call
in
popa
fidivl
and
push
nop
mov
loop
jl
ficomps
inc
or
push
cmp
xchg
das
sub
jo
sbb
push
popa
sub
cmp
ret
and
xchg
and
push
jl
mov
adc
xor
mov
adc
shl
and
push
mov
add
arpl
fadds
mov
std
daa
lea
cmp
loopne
lock
mov
repz
arpl
add
roll
pop
jl
add
pusha
not
out
and
daa
cwtl
mov
cmc
int3
and
cmp
lods
adc
out
std
aad
adc
mov
and
lret
push
xchg
fildl
adc
test
lahf
jle
inc
pop
add
scas
les
rorb
iret
shl
cmp
lret
shrl
repnz
int
stos
in
cmp
lret
imul
pop
out
or
imul
mov
popa
mov
xchg
mov
jle
push
nop
iret
mov
inc
in
sub
xor
and
pushf
or
jne
lods
mov
jne
leave
sbb
fucomi
push
jmp
and
cwtl
pop
xor
popa
sti
dec
nop
insl
add
mov
xchg
fstp
nop
add
jb
push
js
das
push
pop
xchg
mov
push
push
mov
les
scas
loop
pop
xchg
maxps
pop
jae
les
mov
imul
sub
push
scas
push
test
adc
shlb
jns
nop
popf
sbb
aam
cmc
insb
xor
jb
insl
xor
xor
out
push
add
push
or
iret
xchg
adc
mov
popa
mov
int3
jae
ret
out
mov
jecxz
mov
pop
lds
xchg
cmp
pop
cmp
and
out
aad
pop
arpl
mov
dec
lods
mov
rol
jg
icebp
inc
nop
loop
jge
cmp
jne
insb
nop
clc
enter
cmpsb
inc
daa
cli
add
mov
pop
xchg
out
ljmp
and
xchg
jbe
dec
mov
push
push
imul
in
push
push
stos
add
xlat
movsl
fmulp
call
lcall
dec
notb
data16
es
fwait
sbb
cmpsl
pop
cmp
jb
jg
fwait
leave
xchg
add
fwait
or
cmp
xchg
fimuls
jge
pop
rolb
push
movsl
insl
mov
in
insl
cmp
mov
in
dec
mov
inc
gs
in
or
dec
and
mov
mov
cli
or
or
mov
jnp
xchg
xlat
gs
mov
cli
mov
sbb
push
aam
xchg
out
aaa
push
insl
pusha
adc
dec
idivl
mov
bound
test
dec
test
pop
mov
xchg
loopne
mov
insl
mov
mov
sarb
pop
adc
xor
icebp
xchg
adc
testl
add
and
xchg
inc
pop
dec
push
mov
insl
pop
scas
pop
add
mov
xchg
leave
lret
lret
push
inc
pop
sub
push
jg
incb
mov
cmp
and
dec
mov
sub
imul
and
dec
mov
loop
subl
movsl
mov
push
in
inc
clc
adc
pop
or
xlat
iret
test
or
ja
lods
sbb
loop
ds
shrb
push
in
enter
xchg
and
or
pop
xchg
mov
mov
xchg
fistl
inc
cmc
ja
sub
es
sub
imul
mov
aam
xchg
and
xchg
and
mov
mov
mov
in
mov
xchg
mov
lcall
int
jg
int
dec
mov
je
push
push
hlt
xor
in
xchg
xor
mov
sub
jb
outsl
lock
adc
fadds
inc
xor
dec
andl
push
or
dec
or
dec
roll
sub
dec
inc
in
test
inc
xor
scas
xor
mov
insb
js
adc
push
jmp
inc
add
or
loopne
push
clc
mov
inc
inc
mov
scas
xor
sahf
and
sbb
mov
ljmp
push
push
xchg
out
push
pushf
mov
mov
cltd
cmpsb
testl
imul
add
xor
stos
mov
adc
imull
dec
push
xor
rcll
mov
aad
insl
pop
cmp
mov
aas
dec
xchg
pushf
lods
mov
push
mov
dec
dec
push
rorl
push
loopne
mov
fs
pop
insb
aaa
insl
push
in
jbe
fdivs
sbb
icebp
add
xchg
push
push
xchg
adc
sbb
leave
lods
ret
pop
sub
xchg
pop
enter
mov
jb
mov
out
ds
shr
push
aad
push
mov
jbe
jle
xchg
cmpsl
mov
pop
push
pop
negb
push
sbb
dec
mov
out
jg
nop
dec
mov
push
dec
jns
mov
jg
fidivrl
pop
or
in
dec
bound
push
ret
add
movsl
dec
or
xchg
cmp
xlat
or
lcall
movsb
rorb
adc
in
pusha
dec
jp
mov
inc
mov
lods
outsl
arpl
mov
out
out
jecxz
lock
leave
xchg
mov
out
push
scas
shr
pop
push
lds
movsl
sbb
and
pop
dec
addr16
mov
in
push
fwait
pop
out
mov
and
pop
cli
div
pop
jmp
in
je
xor
insb
mov
push
sti
rcr
pcmpgtb
mov
dec
mov
push
and
pop
jle
bound
ljmp
faddp
mov
xor
xchg
or
push
push
jnp
jbe
sbb
lods
nop
in
out
sahf
aaa
sahf
add
jns
inc
mov
or
xchg
rolb
add
or
dec
and
addr16
push
test
mov
popa
das
cmp
pop
ret
push
sbb
repnz
inc
jge
pop
sub
adc
pop
gs
or
mov
xchg
add
jno
sarl
sub
cmp
lahf
cmp
cmp
ret
pop
int3
mov
xor
aas
inc
pushf
cmpsl
idivl
adc
push
inc
call
sbb
mov
ret
ljmp
fnstenv
test
test
xor
arpl
dec
adc
notl
mov
imulb
fcomps
sahf
cmpsl
pop
add
popa
fsubs
inc
decl
test
nop
inc
pop
pop
scas
negl
in
xor
cwtl
daa
in
push
add
aam
out
sub
xchg
loope
test
std
jne
mov
push
xor
es
or
cmc
mov
sub
xor
add
push
push
pop
movsl
loopne
movsb
cltd
pop
push
addl
outsl
daa
pop
testb
and
dec
lods
mov
dec
fadds
xor
iret
jl
fnstenv
lcall
mov
inc
sbb
xchg
inc
dec
dec
xor
push
jo
jg
mov
xchg
sbb
sbb
lret
push
les
sub
jno
imul
adc
sbb
mov
out
dec
jle
sahf
test
mov
mov
or
pop
sti
inc
aas
stos
enter
sub
mov
xor
mov
cmpsb
mov
jl
imul
sbb
les
inc
pusha
popa
mov
cmpb
dec
add
int3
or
aam
fidivs
and
js
xor
or
pop
or
jg
or
lods
repz
out
sbb
loope
daa
or
mov
jl
adc
outsb
ds
add
in
pop
hlt
adc
dec
call
loope
sbbb
fyl2x
pop
stos
push
sbb
jle
inc
dec
cmp
shll
xor
inc
sub
mov
aad
sub
or
cmp
out
adc
cmp
cmp
nop
lret
sub
or
xchg
xor
or
push
bound
into
inc
addr16
cmpsb
sbb
insb
subb
dec
push
loop
ret
cmp
movsl
inc
cs
cwtl
push
xchg
push
xor
out
jle
addr16
adc
les
ja
scas
xor
cltd
mov
push
pop
shll
xchg
dec
xchg
in
jno
cmpsl
aas
jne
jns
sti
pop
push
push
pop
fsub
fidivrl
push
pop
jns
aaa
dec
push
sbb
imul
xchg
fcmovb
data16
mov
jecxz
repnz
lret
xor
sbb
mov
xchg
popa
sti
dec
mov
jnp
aad
out
mov
movsb
adc
pusha
push
shrb
imul
call
and
xchg
jnp
imul
fldenv
repz
mov
inc
dec
es
sub
cld
add
lds
ds
and
mov
mov
fsubl
out
sbb
insb
cmp
out
stos
inc
popf
aam
cld
das
jne
push
and
out
and
jle
inc
sbb
fs
cmp
xchg
mov
pop
je
into
sub
mov
rorb
or
or
and
lock
inc
call
mov
push
in
dec
inc
dec
lea
push
xlat
out
pop
movsb
cmp
mov
pop
loop
cmp
adc
add
mov
cmpsl
sbb
push
jl
push
sbb
popa
arpl
lods
pop
loop
cltd
int
lods
xchg
and
push
cmpb
inc
jl
aam
movsb
xor
pop
sbb
jne
jno
shrl
rcrb
mov
cld
and
xlat
jns
loop
and
jbe
orb
incl
clc
out
push
push
lahf
ljmp
xor
cmp
clc
nop
jl
testl
insl
sbb
in
xor
lock
pop
add
ret
push
cmc
stos
push
xchg
xchg
jns
dec
icebp
popf
and
push
sahf
rcrl
outsb
mov
inc
mov
mov
mov
pop
jnp
mov
imul
xor
push
or
pop
pop
xchg
pop
insl
inc
pop
les
xor
sbb
les
jnp
pop
jne
int
mov
int
dec
jno
insl
cmp
xchg
mov
sub
hlt
test
in
mov
xor
pop
into
gs
int3
sub
cmp
lahf
mov
ret
cmpsl
adc
aaa
push
xchg
xchg
push
jno
cmp
addl
mov
out
stos
addr16
fstps
rcr
cld
clc
in
cmp
mov
imul
mov
repnz
sarl
jns
xor
cli
lret
mov
mov
mov
jge
sub
arpl
mov
xchg
push
mov
mov
cltd
xchg
and
cld
mov
ja
sub
sti
add
pop
les
dec
mov
int
mov
je
mov
or
dec
test
jne
fimull
mov
xor
mov
add
xchg
dec
or
lret
mov
das
pop
xor
mov
xor
or
xchg
push
ja
cmp
cmp
jns
mov
push
popf
dec
mov
dec
scas
xor
je
jp
ja
pop
xchg
andb
into
dec
lds
or
adc
cmc
mov
iret
into
lcall
sbb
jmp
push
add
inc
stos
cs
gs
lock
mov
js
ret
movsb
aam
pop
hlt
les
sbb
pop
int3
mov
inc
insb
repz
sti
arpl
cs
out
sahf
cmp
lcall
push
test
xchg
mov
dec
mov
cli
push
sarb
mov
jecxz
push
push
inc
cmp
add
dec
sahf
clc
dec
mov
push
lcall
inc
add
out
cmc
out
stos
stos
mov
stc
aam
in
push
sub
cs
inc
push
and
lcall
mov
test
pop
jmp
and
push
jo
sub
scas
lret
call
fs
fiadds
jae
jmp
push
decb
xchg
aaa
std
std
add
push
test
or
dec
xchg
inc
std
mov
sahf
add
push
sbb
cwtl
scas
fwait
sti
jno
inc
mov
roll
lcall
sub
pop
lret
daa
stos
adc
insb
sub
sbb
test
dec
push
leave
sub
mov
push
js
mov
pop
out
nop
dec
fistpl
pop
roll
jae
lods
movsl
cltd
or
xchg
repz
ret
pop
mov
or
pop
inc
int
rolb
pop
or
mov
clc
mov
pop
jg
dec
inc
aaa
negb
and
pop
inc
pop
mov
mov
addr16
jno
je
mov
scas
rorb
mov
jl
cltd
mov
dec
inc
fnstcw
push
sbb
adc
xchg
cs
mov
xchg
fldcw
loope
dec
sbb
out
or
mov
lret
int
jne
or
test
nop
mov
dec
scas
enter
adc
icebp
add
cmpsl
call
icebp
push
mov
fldenv
xchg
or
sbb
jge
out
pmaxub
sub
push
mov
test
mov
fstps
rol
pop
lds
jo
pushf
scas
and
xchg
mov
inc
test
lods
mov
mov
cmp
test
mov
sti
lods
stos
dec
cmp
mov
jns
jecxz
cmp
dec
dec
jge
shll
out
sbb
or
mov
gs
fstpl
pusha
push
push
ljmp
test
and
test
ficompl
xlat
into
movsl
pushf
mov
test
mov
mov
xchg
insl
push
xor
mov
cmp
and
add
pop
jle
mov
cmp
das
cmp
jae
imul
icebp
xor
push
out
inc
dec
gs
lret
shrl
mov
aas
mov
dec
xor
sbb
pop
das
jno
mov
mov
test
adc
jmp
cli
jmp
cld
pop
mov
gs
sub
gs
sti
nop
pop
add
xchg
dec
std
cmc
scas
push
sbb
and
or
push
xor
add
sub
jb
fnstsw
inc
in
pop
movsl
loop
bnd
fimull
cmp
clc
mov
gs
push
movsb
mov
push
fcmovbe
push
inc
or
imul
mov
sub
out
dec
and
sbb
mov
mov
xor
in
ljmp
jo
jo
xor
movsb
popa
mov
cli
adc
xor
jmp
xchg
adc
mov
outsl
xchg
mov
dec
ljmp
and
popf
sbb
std
inc
inc
jecxz
xor
roll
jnp
bound
cmc
push
movsl
pop
in
test
test
bound
adc
push
shll
sbb
xor
or
lcall
fs
jp
and
or
cwtl
std
rclb
negl
je
testl
rcrl
ret
sbb
inc
pop
in
pop
daa
adc
cli
dec
loopne
jge
out
loopne
andb
adc
dec
stos
inc
push
inc
lahf
mov
icebp
roll
adc
mov
sbb
jp
enter
test
notb
or
push
cltd
int3
xchg
cmp
cmp
xor
lcall
sbb
xor
cmc
mov
popf
into
jp
sbb
int3
int3
decb
xchg
fcomip
sub
push
mov
insb
mov
out
sti
mov
repnz
std
lcall
mov
ds
pop
or
sub
sbb
int3
xlat
mov
daa
cwtl
std
das
gs
mov
jnp
push
or
dec
jno
add
mov
xchg
add
mov
jo
xor
or
mov
js
xchg
shll
stc
int3
pop
test
pop
sbb
push
stos
and
ud2
test
xchg
adc
icebp
jbe
dec
pushw
mov
int3
or
stc
mov
push
lahf
jne
pop
xchg
stc
xor
fwait
sub
mov
push
adc
pop
inc
leave
addl
or
xchg
xchg
lahf
dec
rorl
cmpl
js
cmp
mov
mov
fildl
push
or
push
mov
jnp
hlt
push
xchg
mov
jmp
mov
lahf
lea
insb
pusha
arpl
ss
lods
mov
stos
mov
loope
push
or
in
pop
pop
cmp
dec
sti
call
pop
aaa
daa
push
adc
dec
rcrl
fs
xor
sbb
mov
in
scas
push
js
xchg
ds
sub
aad
add
in
popf
adc
pop
xor
cmp
cmpsl
out
dec
andl
xchg
popf
mov
test
pop
pand
pop
add
aad
inc
push
in
test
xor
outsl
in
flds
xchg
ret
data16
aaa
imulb
fisttpll
mov
cld
pop
cmp
cmp
jo
push
pop
movsb
roll
inc
pop
dec
add
jmp
xchg
inc
xchg
mov
xchg
sub
lods
negl
lret
test
test
cmpl
es
rcrb
stos
roll
fsubr
ja
je
fldcw
ret
scas
push
popl
sub
mull
fldl
in
insl
jb
bound
dec
sub
jne
sbb
inc
sahf
push
jp
push
adc
push
mov
pop
and
sub
cmpb
call
xchg
enter
hlt
scas
dec
into
dec
nop
repz
int3
mov
xor
ficompl
cwtl
jno
or
jl
inc
sbb
in
add
lret
mov
pusha
sbb
jecxz
push
jg
xchg
pop
movsl
out
push
sarl
lock
xchg
adc
or
sbb
jb
inc
jae
jl
mov
icebp
jae
or
xchg
mov
aam
scas
push
call
pslld
imulb
mov
jno
lea
push
add
clc
dec
adc
cltd
pop
rorb
jo
aad
mov
enter
cld
cmp
aaa
jg
stc
idivl
je
lods
xchg
imul
fwait
sub
xchg
jne
je
mov
or
dec
mov
jmp
ret
je
mov
mov
aaa
sti
test
shl
cwtl
add
push
mov
dec
out
insl
ja
rcrb
pop
lods
mov
stos
jmp
jnp
stc
and
lea
cmp
in
pop
xor
gs
push
mov
je
sti
inc
in
xchg
jle
pop
push
outsl
loop
ja
inc
rorl
pminsw
mov
pop
nop
pusha
jns
enter
pop
push
out
cmp
xchg
push
push
jb
mov
xchg
lock
in
clc
add
sub
dec
repnz
pushf
xchg
sbb
test
mov
jae
scas
call
and
adcb
fcomp
pop
inc
mov
sub
add
sbb
xchg
adc
mov
mov
xchg
lret
dec
arpl
dec
push
cmp
jae
bound
sub
push
fwait
scas
out
cmp
mov
pop
xchg
in
imull
sub
clc
push
inc
stc
rcr
mov
scas
sub
xchg
push
rorb
inc
insl
dec
lds
sbb
insl
hlt
cmp
out
cmp
pop
dec
decl
mov
jmp
bndstx
fsubrp
rcrb
adc
sbbl
inc
push
arpl
add
sahf
loope
dec
mov
imul
out
lods
fistpll
cltd
les
popf
inc
js
ds
cwtl
jnp
cmp
dec
or
sub
div
push
adc
dec
mov
shll
arpl
xchg
lods
cmp
and
add
xchg
pop
pop
roll
out
adc
test
arpl
pop
inc
jnp
add
cli
leave
enter
out
sbb
or
push
mov
das
or
mov
fnstsw
lods
cltd
adc
pop
es
mov
jo
push
cwtl
sahf
xchg
and
aad
ss
mov
inc
adc
sub
aad
shlb
adc
mov
inc
stos
or
cmpsb
pop
add
stc
stos
mov
mov
jo
enter
popa
and
jge
mov
in
fiaddl
lods
out
testb
insb
shlb
mov
push
mov
loop
cmp
or
xchg
jg
or
cltd
xor
and
jp
es
je
sub
jbe,pt
das
jmp
int3
adc
ja
cmp
jge
rol
push
jl
or
cmp
dec
add
mov
mov
adc
mov
mov
sbb
jg
pop
repnz
jle
adc
mov
lahf
push
and
scas
xor
push
push
lock
jbe
lods
jecxz
mov
outsb
fisubrl
jecxz
lret
in
sub
ret
push
push
jo
jbe
mov
jne
loopne
dec
fisttpll
test
arpl
sub
rorb
lock
imul
mov
sbb
dec
mov
jo
push
pushf
push
xchg
sub
inc
lods
mov
fwait
and
repz
outsb
sub
add
jno
or
dec
push
dec
adc
and
push
xchg
sbb
mov
addb
and
xor
mov
mov
sbb
and
push
fidivl
aaa
clc
repnz
mov
inc
cmp
xchg
rcll
aad
repz
dec
xor
xchg
mov
push
pop
inc
jbe
inc
jle
cmp
adc
sbb
and
jno
loopne
test
and
loop
clc
mov
lret
cs
shll
pop
sbb
ret
movsl
leave
and
pop
lods
adc
ljmp
jo
mov
jl
cmp
lods
push
mov
add
clc
cs
xor
or
sbb
dec
push
dec
xchg
in
mov
xor
pop
dec
adc
dec
cmp
or
push
sbb
lods
mov
imul
je
fnstenv
jg
xchg
repnz
fadds
sub
mov
mov
jle
in
sbb
out
daa
rcr
fsubrs
dec
adc
adc
push
movsl
aaa
dec
mov
test
jmp
enter
push
lret
push
push
cmp
jo
push
dec
and
mov
sahf
hlt
push
lret
mov
push
xor
xlat
addb
sub
mov
mov
sbb
push
enter
orl
in
leave
test
scas
xor
sub
push
imul
adc
lret
push
lcall
and
das
dec
or
xchg
inc
arpl
jno
in
loope
pop
mov
movsb
out
incb
jb,pn
lret
mov
stc
pop
shlb
mov
or
jnp
int3
push
dec
jge
icebp
sub
push
cmovo
leave
add
dec
insb
es
jl
mov
icebp
sbb
rcrl
mov
lea
xchg
add
pop
iret
xchg
jns
jae
test
inc
add
cmp
mov
stos
repnz
popa
jle
popl
pop
ret
jo
sahf
aaa
adc
add
cmp
pushf
cmpsb
iret
mov
xchg
lcall
and
pop
sbb
insb
push
dec
and
ret
insl
popa
add
adc
andb
divl
ret
test
fimuls
mov
mov
cmp
jle
xor
dec
pop
adc
repnz
add
or
imul
xor
dec
add
jle
pop
sbb
fldl
imul
pop
push
inc
nop
repnz
repz
mov
stc
lds
stos
mov
add
push
popf
jno
loopne
inc
stc
mov
pop
or
pusha
xchg
or
mov
in
test
sub
jns
lds
addr16
divb
sub
xlat
lahf
out
xchg
mov
inc
aaa
sbb
out
aad
into
mov
mov
jnp
imul
dec
outsl
fnstenv
shll
stos
mov
mov
ss
xchg
test
jle
xchg
out
add
insb
popa
outsb
cmc
jne
cmc
lea
jecxz
imul
xchg
push
data16
bnd
adc
stos
test
out
in
sbb
das
pop
fimull
push
push
mov
test
dec
cwtl
push
test
das
imul
insb
pop
push
ds
scas
jns
clc
push
xchg
gs
and
out
jno
sub
push
mov
push
xchg
sahf
pop
adc
cmp
lock
repz
lods
push
bound
mov
repnz
dec
icebp
imul
cmp
dec
data16
addb
fnstcw
es
sub
insl
inc
push
addr16
daa
push
call
pop
sbb
mov
scas
repz
fwait
pop
lret
fcmovnbe
mov
fldt
sahf
add
ljmp
or
lea
pop
cltd
scas
pop
aad
std
mov
fstpl
push
mov
mov
movsb
jg
dec
hlt
sbb
out
aaa
imul
ljmp
sub
inc
mov
pop
push
pop
mov
aaa
inc
fsubr
push
imull
daa
cmp
xchg
lock
test
sbb
mov
sub
inc
inc
ficoml
scas
arpl
mov
mov
leave
orb
mov
push
mov
bound
ljmp
testb
mov
jns
jnp
sbb
inc
add
jg
test
dec
add
adc
jns
es
outsl
xchg
mov
rol
scas
adc
pop
dec
xchg
add
hlt
pop
xchg
test
lret
dec
mov
repz
pop
sbb
jns
icebp
dec
xchg
rolb
arpl
ret
cmpsb
cmpsl
jl
sub
testb
test
or
pop
mov
dec
pop
test
imul
daa
fsubr
sahf
mov
mov
mov
ss
fs
cmp
scas
mov
lods
outsl
sarb
shrl
sahf
gs
dec
push
test
xchg
jmp
and
es
shrb
or
popa
mov
lock
ljmp
and
mov
scas
jo
fldenv
push
push
loop
mov
outsl
fldl
sarl
mov
jb
inc
push
cmp
in
std
push
xchg
add
cmpsb
inc
jae
jo
mov
lea
pop
pop
test
and
pop
push
mov
dec
jne
xchg
mov
sbbl
jno
sbb
paddsw
mov
addr16
hlt
or
push
outsl
pop
ja
imul
adc
arpl
negb
and
sbb
mov
aad
mov
int3
std
aam
lcall
int3
lods
ljmp
lock
and
jg
scas
jmp
sub
cltd
push
or
or
xchg
fs
addr16
mov
push
in
ret
sbb
or
mov
jbe
xlat
add
mov
rorb
test
and
and
sbb
sbb
mov
movsb
adc
testl
inc
mov
push
out
cs
inc
sbb
movsb
jnp
arpl
jp
xchg
movsl
xor
leave
adc
out
enter
inc
mov
xchg
jne
hlt
inc
daa
fidivs
push
stos
pop
sub
cmp
pusha
stos
dec
rcrl
inc
roll
sub
lea
mov
repnz
xchg
outsl
clc
jle
mov
cmp
mov
movsl
xor
sahf
mov
imul
pusha
or
enter
dec
pusha
and
sbb
insb
test
adc
call
repz
ret
gs
xchg
jp
cld
pop
cmpsb
xor
js
cltd
sub
sbb
popf
mov
push
fs
push
cmp
xor
push
ret
mov
xlat
pop
les
mov
loope
fwait
cmpsl
adcl
sub
or
dec
add
xchg
mov
std
shlb
push
bound
xchg
adc
jecxz
pop
arpl
xchg
xchg
cmp
jecxz
out
inc
fs
jecxz
xorb
push
insl
adc
mov
inc
inc
adc
rcrb
in
jb
push
mov
rcl
mov
fsts
xor
cmpsb
inc
mov
lods
mov
pop
xchg
mov
sub
push
push
shr
xor
addr16
addr16
cmp
mov
xchg
loopne
mov
in
xadd
ret
mov
lea
and
cltd
jmp
adc
rcll
insl
mov
or
sub
inc
or
add
dec
mov
gs
testb
adc
inc
in
xchg
incl
adcl
dec
subl
ljmp
push
push
scas
lret
sbb
sbb
xchg
xchg
data16
sbb
mov
in
xorl
and
jp
mov
mov
mov
dec
arpl
xlat
push
xchg
inc
test
nop
cmp
and
in
ret
mov
lret
jp
dec
push
lret
sbb
push
lahf
addl
mov
inc
add
push
jp
xor
scas
lods
pop
jp
lea
imul
into
popf
sub
push
pop
xorb
int3
ja
adc
pop
xor
repnz
or
xor
pushf
hlt
cs
popa
or
in
aam
inc
int3
xchg
push
test
xor
and
or
out
mov
mov
sbb
adc
lds
call
mov
not
arpl
das
cmpsb
add
xor
mov
mov
pushf
adc
mov
dec
leave
mov
and
xor
loope
test
add
and
rol
dec
std
stos
pusha
sbb
xor
jb
mov
mov
mov
mov
insl
jmp
pushf
inc
gs
mov
sarl
inc
gs
push
cli
dec
cmpsl
cmc
push
or
out
subb
inc
adc
xchg
dec
lods
sbb
fs
dec
scas
mov
add
dec
insl
mov
xchg
sbb
push
cmpsb
insl
in
test
cs
lock
cmp
shl
ljmp
dec
xor
push
repz
jo
les
aas
xor
mov
sbb
mov
rorl
fwait
jne
push
cmp
rclb
fidivrl
adc
sub
and
popf
or
fdivl
inc
mov
jnp
jge
aas
sbb
rol
fwait
inc
repz
mov
xchg
imul
adc
mov
repz
cmp
cltd
push
mov
mov
jne
fsubrs
xor
lcall
cmp
jg
xchg
add
or
and
inc
les
sbb
or
rcrl
push
ficompl
xchg
and
movsl
mov
lret
xchg
das
mov
call
rorl
cmpsb
sbb
repz
popa
xor
fdivl
aaa
add
loope
jno
inc
bound
adc
inc
push
mov
dec
dec
daa
xlat
mov
dec
and
jb
test
jp,pn
adc
aad
faddp
jb
cmp
int
out
pushf
test
push
sbb
cmp
mov
psrad
ljmp
push
inc
stos
lret
into
sbb
add
andl
dec
ret
ret
cmpsl
xor
scas
add
lea
iret
in
fiaddl
mov
aaa
jne
test
push
or
into
adc
xchg
scas
or
jmp
ss
cltd
push
mov
cmpsl
push
insb
aam
movsl
or
cmc
rclb
jg
addb
jns,pn
addl
repnz
xor
ds
in
out
pop
fmul
cmp
insb
scas
rcrb
mov
sbb
push
and
inc
std
orb
xchg
faddl
imul
adc
in
dec
jmp
adc
adc
inc
ret
xor
xor
jo
pop
pop
xor
in
adc
int3
fwait
adc
int
ficoms
dec
push
iret
insl
mov
mov
add
cmpsl
pop
ljmp
push
push
enter
push
lods
ret
xor
pushf
mov
movsb
fnsave
je
jmp
xlat
mov
push
push
xchg
sub
ja
jg
js
jle
jo
fs
call
mov
gs
adc
inc
push
adc
sbb
mov
jns
mov
jl
in
mov
push
pop
push
inc
jae,pn
inc
outsl
pop
xchg
mov
fstps
xchg
push
rorl
sarl
mov
mov
fcmovbe
add
mov
mov
popa
fstps
aas
sqrtps
fsubs
shll
ret
xor
xchg
ret
push
lock
jmp
mov
mov
mov
sub
cmp
test
xchg
mov
mov
and
aam
lods
mov
fsubrl
sub
adcb
jl
stos
sub
add
add
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
andl
andb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
push
add
add
add
add
mov
add
add
add
loopne
add
and
add
nop
add
addb
pop
add
add
addb
add
mov
add
fadds
add
add
add
sub
add
push
add
sub
add
js
add
add
add
or
add
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loope
add
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
stc
add
add
add
add
add
enter
cli
add
add
add
xor
add
sbb
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
push
push
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
nop
add
cmp
add
mov
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
clts
add
add
or
add
add
addb
add
or
add
add
add
add
add
add
add
add
push
add
add
add
add
add
les
push
add
add
add
add
add
adc
add
add
add
add
test
add
add
add
or
add
add
add
push
push
add
add
add
add
add
push
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
int3
add
add
add
add
xor
cmp
xor
xor
inc
add
add
add
sbb
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
outsl
add
imul
and
push
add
arpl
push
add
add
jns
sub
and
dec
add
arpl
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jo
jo
insb
add
and
push
add
push
add
add
add
jb
add
add
add
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
outsl
add
popa
add
add
add
add
add
popa
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
dec
add
jns
add
add
add
ja
xor
ja
push
add
imul
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
push
push
add
add
add
push
push
add
add
fcoml
add
push
push
add
push
push
add
push
push
add
push
push
add
push
push
add
add
add
push
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
gs
xor
fs
insb
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
gs
outsb
jne
