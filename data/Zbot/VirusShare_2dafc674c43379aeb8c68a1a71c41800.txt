roll
lahf
pop
das
iret
rcll
in
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
sub
mov
mov
pusha
call
add
sub
ss
leave
inc
cmc
sbb
cmp
and
loop
pop
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
mov
dec
push
mov
lea
sub
ja
jo
xchg
ds
lods
dec
out
fdivs
fdivrs
dec
mov
in
and
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
rorb
jns
call
adc
add
jnp
lret
pop
ss
cmp
jle
movsl
loop
aam
in
add
inc
ljmp
in
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
aas
sub
shlb
movsl
pop
sbb
push
mov
sub
push
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
lea
mov
mov
add
push
pop
xor
cmp
je
sub
lea
push
popl
pushl
pop
dec
lea
and
pushl
lea
pop
repz
jmp
mov
pop
ret
add
add
lds
in
add
mov
pop
aaa
shrb
pop
sub
pop
mov
or
adc
imul
faddl
add
sub
and
jp
mov
sub
push
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
outsl
pop
mov
sub
icebp
sub
xchg
mov
js
ret
or
adc
fistl
mov
mov
mov
adc
xchg
rcll
mov
add
adc
lret
in
mov
test
in
sub
push
pushl
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
mov
insb
pop
push
mov
sub
push
pushl
push
push
call
add
pop
lea
pop
mov
ret
add
xor
ret
lea
jp
cli
cli
pop
add
and
and
popa
test
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
arpl
push
das
or
ljmp
bound
jmp
ret
push
pop
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
mov
add
stos
mov
push
pop
cmp
je
inc
and
add
and
add
and
add
and
add
add
lock
add
add
mov
add
cmp
add
insb
and
add
add
mov
and
add
and
add
and
add
and
add
add
int3
and
add
add
add
add
add
and
add
or
add
sbb
add
mov
add
dec
and
add
and
add
add
clc
and
add
add
jb
add
cmp
add
add
add
loopne
add
mov
and
add
and
add
add
add
and
add
and
add
and
add
add
add
test
add
hlt
and
add
add
add
add
and
add
and
add
and
add
add
lock
add
add
mov
add
cmp
add
insb
and
add
add
mov
and
add
and
add
and
add
and
add
add
int3
and
add
add
add
add
add
and
add
or
add
sbb
add
mov
add
dec
and
add
and
add
add
clc
and
add
add
jb
add
cmp
add
add
add
loopne
add
mov
and
add
and
add
add
add
gs
je
jb
jne
dec
outsb
outsw
inc
add
inc
outsl
insl
insl
popa
outsb
fs
imul
push
gs
fs
outsl
outsb
jae
insb
gs
add
dec
add
insb
outsb
push
add
mov
push
insb
gs
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
mov
push
gs
fs
outsl
outsb
jae
insb
gs
add
add
inc
gs
outsl
imul
jbe
jae
add
add
je
imul
bound
gs
add
roll
inc
gs
gs
inc
je
insl
add
push
add
fs
je
insl
inc
add
jae
inc
outsl
jo
inc
imul
gs
jbe
outsb
je
add
add
fs
imul
add
inc
add
outsb
fs
outsl
insb
jne
gs
insb
outsl
jae
add
add
imul
jb
je
arpl
add
imul
je
imul
push
add
rolb
dec
gs
jo
gs
jb
jns
inc
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
popa
jo
imul
inc
gs
jb
jbe
push
jns
gs
add
push
dec
inc
dec
xor
cs
insb
add
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
pop
add
addr16
outsl
js
add
inc
jb
dec
jae
add
or
push
gs
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
or
push
gs
jb
inc
jb
outsl
jb
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
add
outsb
fs
push
push
add
outsb
fs
push
inc
push
push
push
dec
push
cs
insb
add
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
jb
popa
je
inc
js
arpl
imul
outsw
jb
add
inc
insb
insb
push
imul
jb
gs
dec
dec
inc
dec
inc
dec
inc
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
push
add
test
add
cmp
add
add
add
add
add
xchg
add
add
add
add
add
add
inc
inc
add
lods
fadds
xor
add
add
int3
add
add
add
add
add
add
add
add
and
add
add
andb
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
lcall
jge
add
jl
stos
stos
stos
add
cmpsb
test
mov
mov
mov
ret
lret
lret
leave
lret
into
rcl
in
rcl
shl
rcl
shl
int3
int
hlt
leave
enter
out
mov
in
mov
mov
lods
lods
lods
lea
fwait
lcall
add
add
add
push
add
add
add
add
add
add
add
add
mov
lahf
add
mov
mov
mov
leave
leave
leave
not
rcl
cld
xlat
std
fcom
fcomp
aam
aam
rcl
iret
dec
into
into
aad
iret
iret
sar
ret
std
mov
mov
scas
iret
movsl
movsb
movsb
xchg
mov
xor
add
add
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
sbb
mov
jnp
mov
sar
leave
lret
ror
iret
aad
fcom
call
xlat
fdivr
aad
dec
into
into
dec
into
int3
call
aam
dec
int
inc
rol
mov
mov
lods
std
cmpsb
test
ljmp
pop
or
or
add
add
add
add
add
pop
add
add
add
add
add
add
push
push
pop
add
inc
add
pop
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
dec
mov
call
rcl
call
xlat
fdivr
fcomp
call
dec
int
dec
lret
into
int
inc
inc
mov
mov
jmp
mov
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
popa
bound
push
imul
pop
pop
pop
fs
aas
ds
sbb
prefetch
push
push
push
xor
aaa
cmp
cmp
and
adc
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
sarl
leave
enter
rcl
call
aad
call
aad
call
iret
iret
inc
leave
leave
inc
ret
mov
mov
ljmp
movsl
mov
cwtl
xchg
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
add
jo
jg
jge
jg
jg
jo
jb
bound
mov
cmp
lea
inc
mov
outsl
outsl
outsb
nop
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsl
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
lret
lret
dec
leave
lret
inc
enter
ret
mov
mov
ljmp
movsb
movsb
lcall
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
fwait
cltd
cltd
in
test
aas
push
or
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsb
outsb
add
pop
or
jp
nop
mov
incb
jl
idivb
jl
jo
outsb
out
data16
fdivs
jne
jg
jle
jns
jp
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsl
lcall
xchg
incl
addb
xchg
xchg
xchg
sahf
mov
mov
mov
js
js
das
das
xor
add
add
add
add
add
add
add
add
add
add
mov
push
push
addb
in
mov
mov
addb
decb
xchg
loope
jno
enter
mov
addb
push
cmp
ss
jle
cmp
movsl
mov
test
sti
lods
lods
stos
stos
lods
stos
test
mov
lcall
xchg
jns
jp
jl
jp
mov
xchg
movsl
movsb
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
movsb
cmpsb
out
scas
mov
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
push
push
push
push
rdmsr
inc
inc
inc
dec
insl
insb
insb
jl
xchg
leave
fwait
fwait
cltd
fistps
fwait
fwait
stc
xchg
xchg
xchg
std
mov
mov
mov
mov
xchg
lcall
cmpsl
cmpsb
ljmp
mov
std
mov
mov
mov
std
mov
mov
movsb
movsb
movsl
addr16
jnp
lods
cmpsb
stos
add
pop
adc
lods
call
lcall
incl
mov
xchg
xchg
xchg
popf
sahf
sahf
std
movsb
movsl
mov
out
xchg
xchg
xchg
in
nop
xchg
xchg
in
test
push
jne
push
or
inc
or
or
sub
es
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
nop
decb
xchg
xchg
lcall
cmpsb
cmpsl
ljmp
lods
pushl
lahf
scas
mov
xchg
mov
mov
ljmp
mov
add
pop
pop
adc
mov
jmp
popf
xchg
fwait
incl
mov
decl
nop
xchg
xchg
xchg
pushf
sahf
pushf
mov
test
movsl
mov
cwtl
fstpt
jl
push
push
push
outsl
dec
dec
dec
popaw
popa
popa
jne
jae
mov
lahf
test
mov
mov
xchg
testl
mov
jmp
mov
mov
pop
mov
xor
jbe
mov
cmpsb
mov
mov
stos
stos
mov
movsl
movsb
add
mov
add
pusha
adc
mov
jmp
mov
xchg
xchg
xchg
call
xchg
xchg
call
fwait
fwait
lcall
mov
movsl
mov
out
nop
xchg
mov
cwtl
aad
cltd
lcall
xchg
cmc
nop
mov
cld
xchg
jg
std
xchg
jb
fwait
imul
ljmp
aaa
jns
mov
jae
mov
outsl
ljmp
adc
stos
or
ljmp
aas
jg
mov
mov
stos
pushf
movsl
movsl
mov
add
mov
add
pusha
adc
mov
ljmp
popf
call
xchg
xchg
lcall
pushf
sahf
lcall
popf
pushf
lcall
xchg
xchg
decl
xchg
nop
call
lcall
lcall
popf
mov
xchg
insb
xchg
xchg
pop
jge
xchg
dec
js
lcall
popf
pop
imul
movsl
push
jmp
adc
lods
packuswb
lods
packuswb
scas
adc
mov
imul
adc
mov
insb
mov
cltd
scas
mov
scas
lods
scas
movsb
mov
movsl
add
add
add
add
mov
pop
pop
adc
mov
les
sahf
call
popf
popf
jmp
mov
movsl
jmp
cwtl
cwtl
decl
mov
decl
mov
cltd
jb
cltd
arpl
call
cs
pop
decl
or
pop
call
add
lahf
push
pop
ljmp
sbb
mov
insl
pushl
push
outsb
mov
and
mov
pop
jne
sarl
inc
xchg
lods
mov
lods
lods
mov
sahf
mov
mov
add
add
add
pop
pop
adc
lods
mov
mov
cwtl
pushf
lcall
mov
cmpsl
ljmp
test
jmp
pushf
popf
decl
pop
ja
mov
decl
sub
mov
pop
incl
add
push
decl
add
nop
add
xchg
add
fwait
add
mov
or
mov
outsl
pushl
sub
mov
sub
inc
sub
inc
sub
xor
inc
inc
mov
scas
inc
mov
mov
movsl
mov
mov
add
push
adc
test
mov
mov
mov
test
lods
lods
stos
ljmp
mov
ljmp
mov
mov
mov
push
incl
or
addb
test
push
incl
push
incl
add
add
xchg
add
cltd
add
lahf
add
add
ljmp
sub
mov
aaa
cmp
cmp
dec
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
mov
mov
mov
add
add
add
dec
dec
adc
mov
mov
mov
cmpsl
test
scas
scas
lods
pushl
mov
pushl
mov
ljmp
js
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
popf
add
add
test
pop
ljmp
jb
ret
cmp
dec
inc
mov
roll
call
dec
call
dec
xchg
fmuls
fisttpl
fisttpl
fsts
call
test
std
mov
mov
mov
lahf
sahf
or
add
add
add
add
dec
inc
adc
jnp
mov
cmpsl
scas
jmp
test
pushl
mov
pushl
mov
mov
scas
mov
mov
aaa
outsl
decl
sbb
nop
pop
popa
decl
adc
mov
push
decl
add
xchg
add
popf
add
add
test
pop
ljmp
pop
gs
es
into
inc
mov
push
cwtl
call
push
fwait
fistl
fcoml
ficoms
ficoms
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
jne
sahf
lahf
or
xchg
xchg
xchg
add
inc
adc
ja
mov
mov
lahf
ljmp
mov
mov
mov
mov
mov
mov
ljmp
inc
je
and
and
call
call
or
popl
push
call
add
mov
add
lods
add
mov
fs
mov
xor
call
pop
lcall
arpl
jecxz
cmpsb
jmp
data16
out
test
call
stos
fildl
ret
mov
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
aas
adc
jb
fwait
xchg
lcall
pushf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
cltd
xor
fwait
outsl
lcall
push
call
add
cltd
add
mov
add
stos
add
mov
pushl
adc
rolb
fsubrl
jmp
outsb
lods
jmp
jno
jmp
jb
call
jae
in
jae
out
jne
in
jbe
out
jae
jmp
xchg
mov
cmpsl
test
mov
lahf
lahf
add
jle
cmp
aas
adc
outsl
js
mov
popf
fwait
pushf
pushl
mov
mov
mov
mov
mov
cmpsb
scas
lcall
jo
sahf
cmp
sahf
aaa
jae
mov
push
callw
add
sahf
add
movsb
add
add
mov
arpl
mov
gs
mov
sbb
fsts
jmp
js
call
jge
in
jg
out
cmpb
lock
push
test
jmp
mov
inc
mov
test
daa
sahf
mov
sahf
add
add
add
add
xor
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
ret
ret
mov
lcall
cmp
inc
jl
mov
cmp
lcall
lcall
add
stos
add
lods
add
mov
gs
mov
add
shlb
cmp
data16
jmp
mov
push
sar
pop
push
nop
sar
xchg
ret
push
nop
push
xchg
mov
out
mov
fnstenv
clc
lods
stos
stos
mov
popf
pushf
xor
sahf
pushf
add
add
add
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
call
mov
mov
mov
mov
inc
ret
mov
jl
lcall
dec
cmp
dec
cmp
xor
adc
cltd
add
mov
add
lods
add
mov
mov
add
enter
xor
jmp
jns
out
xchg
vlddqu
cltd
push
lcall
negl
cld
sahf
int
cli
cltd
lret
xchg
ret
mov
dec
mov
mov
mov
mov
nop
xchg
add
add
add
add
cmp
jecxz
pop
pusha
call
mov
mov
mov
sar
inc
enter
sar
mov
ljmp
dec
mov
mov
or
sahf
add
movsb
add
add
mov
arpl
mov
add
movl
jbe
fiadds
out
mov
push
cmpsb
int3
push
cmpsb
int3
stc
test
cli
cmpsl
sar
cld
cmpsl
sar
sti
cmpsl
iret
cld
stos
sar
std
test
iret
push
popf
jmp
mov
dec
lret
mov
mov
mov
xchg
xchg
add
fwait
lcall
xor
sub
inc
inc
inc
bound
pop
xlat
je
jo
mov
mov
ret
mov
ret
inc
ret
ret
inc
enter
rol
mov
cmpsb
jmp
push
mov
scas
dec
test
mov
add
movsl
add
lods
add
mov
fs
mov
add
int
outsb
fadds
je
ficoms
jnp
in
pop
test
negl
sar
cli
scas
cld
mov
cli
mov
mov
std
mov
cld
mov
cld
mov
std
mov
std
mov
push
cmpsb
jmp
mov
dec
leave
int
mov
mov
sahf
sahf
sahf
pusha
xchg
xchg
xchg
or
add
add
sbb
ss
jo
xchg
lcall
xlat
xlat
jmp
xlat
fdiv
rcl
sar
int3
into
int3
dec
leave
lret
dec
lret
lret
leave
lret
enter
mov
mov
lods
push
mov
lods
cmp
arpl
mov
add
mov
mov
add
iret
add
fadds
je
fiadds
jne
call
jae
cli
scas
sar
std
mov
fcos
std
mov
fdivr
cld
mov
std
mov
fdivr
inc
fcos
mov
int3
jmp
mov
call
lret
mov
lahf
mov
or
add
add
xor
xor
add
pop
or
movb
loop
out
out
in
out
loop
loop
fsubp
fcmovu
fcomi
fcomp
xlat
cli
aam
fdivr
int3
ror
mov
imul
jmp
add
mov
mov
add
lret
add
aad
jb
fildl
jne
in
ja
in
das
xchg
clc
mov
cli
mov
loopne
inc
std
std
fdivrp
inc
fdivrp
inc
fdivrp
inc
std
std
leave
std
leave
cli
mov
lret
leave
into
mov
mov
xchg
adc
add
add
std
incb
incb
std
add
div
or
out
jmp
in
out
in
sub
in
in
dec
jmp
jmp
jmp
aad
jmp
mov
xchg
cmpsb
cmp
mov
add
test
popa
pushl
add
les
imul
add
fadds
jb
fiadds
js
jmp
inc
pushf
sti
mov
in
dec
jecxz
std
int
dec
in
dec
loop
std
into
loop
std
into
loop
std
iret
in
std
shl
call
in
call
in
sti
ret
fcos
in
mov
inc
ret
cmpsl
cmpsb
cmpsl
mov
cwtl
xchg
add
add
add
incl
std
incb
cmc
idiv
add
repnz
add
repnz
out
lock
pop
out
repnz
in
in
pop
loopne
loopne
mov
xchg
sti
lahf
and
pop
jmp
pop
pushl
add
enter
rolb
jno
flds
je
in
jp
in
push
jle
negb
cli
mov
cld
iret
in
std
iret
in
std
shr
std
shl
std
shl
std
aam
call
jmp
fucomi
std
dec
loope
bnd
jmp
rcr
dec
lret
lret
rep
test
xchg
and
xchg
xchg
add
sti
add
testl
repnz
repz
aad
xor
mov
xchg
negb
add
cmpsl
add
lods
add
mov
add
leave
add
roll
jo
faddl
ja
out
jns
out
sbb
push
jbe
sti
cld
xlat
jmp
fldlg2
std
fucomi
fucomp
std
fsubr
fsubr
fucomip
std
loopne
jmp
in
shl
push
ret
out
rcl
iret
clc
stos
lods
lods
lods
xchg
xchg
xchg
outsb
jo
add
add
add
loop
add
mov
xchg
lods
jl
repnz
and
mov
add
mov
popa
mov
add
int
outsb
call
add
fiadds
jne
call
sub
shl
fcomip
fsubr
std
fucomi
fldl2t
std
call
shl
sti
shl
cld
iret
loop
clc
iret
fdivrp
test
aad
out
mov
xlat
xlat
xlat
sti
mov
mov
cltd
cltd
fwait
cmp
lcall
mov
mov
add
leave
adc
lods
mov
jmp
add
mov
fs
mov
add
iret
add
xlat
add
loop
jp
call
xor
enter
loope
cld
lret
loop
cld
test
aad
repnz
into
push
mov
int3
jmp
mov
sar
call
shl
call
loopne
in
mov
mov
xchg
add
add
add
int3
add
mov
loopne
ss
mov
add
mov
addr16
mov
add
int3
push
jno
rorb
jbe
jns
loop
cmp
dec
xchg
call
scas
lret
call
scas
leave
std
loop
ret
cld
fidivs
mov
leave
ljmp
iret
into
xlat
shl
xlat
fcmovnb
out
loop
jmp
jmp
popf
ljmp
push
stos
lods
lods
adc
test
cmpsl
add
ret
mov
ret
ret
sahf
stos
aam
dec
cmp
test
push
scas
es
mov
js
mov
inc
xchg
ret
stc
lret
gs
test
mov
out
mov
mov
lret
lret
rcl
lret
mov
iret
shlb
aam
jg
jb
gs
in
call
out
jmp
lock
sub
div
and
repnz
sbb
fstp
or
mov
int
xchg
add
mov
mov
roll
mov
test
insb
mov
test
xchg
ljmp
mov
sarb
mov
ret
mov
cmpsl
mov
mov
enter
int3
shlb
ror
push
rcl
rorb
aad
rcl
aam
aad
fldenv
fcomp
fistpl
fcmovu
fcoml
fsub
loop
loope
jecxz
out
jmp
add
cli
testl
incb
incl
mov
mov
shrb
mov
mov
mov
scas
xchg
mov
mov
mov
mov
ret
mov
daa
int
iret
and
aad
sbb
aad
adc
aam
or
xlat
aad
aam
xlat
add
add
loopne
add
in
add
in
ljmp
incl
mov
mov
add
rol
mov
mov
mov
mov
push
ret
or
enter
mov
add
aad
add
xlat
aad
rcr
aad
aad
xlat
fadds
fcmovnu
loopne
xlat
aad
add
loopne
add
fucom
add
in
add
repnz
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
mov
mov
mov
test
test
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
ror
jmp
aad
cmc
rcl
sar
iret
iret
iret
cli
lret
int3
int3
stc
int3
lret
lret
mov
mov
stos
lods
lods
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
cmpb
inc
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
iret
aad
xlat
call
xlat
xlat
call
ror
dec
into
iret
dec
lret
mov
mov
cld
stos
stos
stos
icebp
cwtl
cwtl
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
jne
jne
jae
gs
dec
dec
inc
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
lret
rcl
call
rcl
dec
lret
mov
inc
mov
mov
test
test
cwtl
xchg
cwtl
jmp
outsl
outsl
xchg
pop
adc
add
add
add
add
add
cmpl
addl
aam
imul
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
jno
jno
scas
mov
pop
mov
mov
mov
mov
sar
mov
mov
mov
ljmp
pushf
fwait
call
xchg
xchg
fwait
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
lcall
pop
popf
xchg
cltd
fcoml
addl
jmp
js
sarb
jns
jnp
jns
jb
je
push
push
push
cmp
jne
sahf
sahf
popf
mov
lods
lods
repz
scas
scas
sti
lods
scas
scas
std
cmpsl
test
sahf
call
test
call
mov
lods
jmp
scas
scas
leave
movsb
movsb
cmpsb
cltd
jb
jb
adc
adc
add
add
add
add
outsb
insl
outsb
pop
xchg
mov
loop
lcall
mov
sti
xchg
xchg
xchg
lock
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
outsl
jo
mov
xchg
lcall
std
lea
mov
xchg
xchg
xchg
lcall
movsl
cmpsl
mov
scas
std
mov
scas
mov
mov
mov
cmpsb
mov
jg
pusha
popa
pusha
or
lods
mov
cmpsb
mov
mov
lea
nop
call
sahf
mov
negl
addb
push
pop
push
outsl
imul
jge
subb
mov
std
nop
mov
ljmp
jle
pushl
pop
mov
mov
jnp
mov
scas
lods
insl
test
add
add
add
add
popa
or
mov
in
mov
xchg
call
xchg
xchg
lcall
cltd
lcall
sahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
lea
jecxz
orl
cld
xchg
pop
jg
sahf
dec
jl
movsb
inc
jns
scas
ss
mov
je
mov
outsb
pushl
sbb
mov
mov
mov
jle
movsl
movsb
push
pusha
pusha
pusha
or
mov
call
popf
sahf
jmp
lahf
mov
decl
addb
xchg
jb
cld
xchg
popa
test
xchg
dec
jns
cmp
xchg
sub
xchg
sbb
call
push
popa
ljmp
sbb
sbb
sbb
mov
and
pop
xchg
mov
scas
scas
xchg
popf
lahf
sahf
adc
add
add
pop
popa
popa
or
stos
mov
stos
mov
mov
ljmp
test
lcall
cmp
mov
decl
adc
test
push
decl
add
call
add
cmpsb
or
pushl
jp
shrb
inc
xor
leave
xor
dec
pop
xchg
inc
stos
mov
mov
mov
test
add
add
add
add
pop
or
movsl
test
jmp
mov
pushl
mov
jmp
jno
mov
pop
decl
or
xchg
decl
add
xchg
add
sahf
add
add
mov
outsb
inc
ss
inc
mov
iret
inc
mov
aam
call
inc
nop
fmuls
call
bound
stc
mov
mov
mov
std
incl
add
add
pusha
pop
pusha
or
lahf
mov
ljmp
mov
pushl
mov
stos
call
pop
arpl
nop
sbb
pop
pop
decl
add
add
lahf
add
add
scas
add
mov
dec
nop
call
pop
lcall
pop
mov
jmp
pop
mov
dec
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jle
jnp
fwait
cwtl
cwtl
jecxz
lahf
mov
pushl
mov
mov
lcall
cs
lcall
and
xchg
minps
xchg
add
sahf
add
cmpsb
add
scas
add
pop
imul
fisubl
jmp
insb
test
out
stos
ljmp
in
jb
call
cmpsl
mov
shrl
cmpl
dec
dec
dec
pop
insl
outsb
push
mov
xchg
ljmp
mov
mov
mov
je
lcall
jbe
pushf
sub
cwtl
or
pushf
add
movsb
add
lods
add
mov
gs
or
xchg
jmp
jns
ljmp
push
test
push
xchg
fldt
mov
push
lcall
add
sub
push
push
dec
pop
imul
mov
mov
mov
sarb
mov
xchg
jmp
sub
lcall
ljmp
add
mov
adc
mov
push
xchg
xchg
cltd
stc
cltd
enter
leave
clc
xchg
lods
inc
mov
lods
popa
lahf
lahf
mov
add
xor
inc
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
ret
inc
ret
pushl
push
xchg
lods
dec
cmp
and
add
ljmp
add
add
leave
add
fsubs
cmp
hlt
mov
into
clc
stos
into
sti
stos
sar
cld
stos
iret
std
lods
sar
cli
cmpsl
int3
jmp
mov
inc
mov
stos
jne
sahf
sahf
or
add
add
dec
push
dec
aaa
jae
je
test
into
int
lret
into
int
lret
sti
leave
lret
enter
movsb
mov
stos
pusha
mov
stos
inc
jle
mov
add
mov
fs
add
iret
add
fildl
jbe
call
xchg
sti
mov
mov
std
mov
xlat
sti
mov
xlat
sti
mov
ljmp
repz
lods
lods
mov
add
add
add
add
pop
or
aam
dec
loopne
loope
fsubp
fistps
fcmovu
xlat
out
shll
cmpsl
jae,pn
cmpsb
push
pusha
ljmp
add
lret
call
add
in
jp
repnz
mov
sti
loop
inc
loope
inc
loopne
dec
fdivrp
dec
cld
out
mov
lret
mov
xchg
sahf
pushf
pushf
sbb
add
add
incl
std
incb
jmp
out
sbb
in
jmp
call
in
xchg
mov
mov
mov
add
mov
inc
add
int
insl
faddl
jne
jmp
insl
mov
sti
ret
fdivrp
sti
shl
shl
std
shl
call
in
call
call
std
shl
push
fcos
fmul
sar
mov
mov
and
add
add
incl
std
std
std
add
std
pop
aam
push
mov
pop
mov
sahf
or
ljmp
add
lds
push
jmp
add
out
and
shl
std
std
fsubr
cld
fsubr
cld
fsubr
sti
xlat
call
std
aad
push
enter
iret
sti
mov
sahf
popf
das
add
add
int
int
mov
bound
ljmp
add
movb
call
add
loope
js
in
xor
stc
int3
loop
cli
lret
test
bnd
repnz
lock
in
aam
in
shl
in
in
fucomp
mov
test
add
add
add
aad
mov
jb
push
data16
mov
insb
inc
sbb
int3
and
sub
sti
loopne
lcall
mov
out
in
leave
jmp
fidivrs
leave
faddp
sarb
in
ficompl
in
call
rorb
mov
add
stos
stos
lods
add
xchg
movsb
les
pop
xchg
mov
nop
fidivrl
jg
rol
stos
mov
mov
ret
rol
rol
lret
insl
aam
into
pop
ror
rorl
fcomp
cmp
das
in
fisubs
loop
icebp
adc
in
in
or
std
add
add
add
std
std
add
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
mov
pop
rol
adc
rcl
or
fnstsw
or
into
int
stos
stos
stos
add
std
add
std
incb
cltd
fwait
fwait
add
rol
or
int3
int
stos
stos
stos
add
std
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
ret
enter
leave
enter
enter
ret
mov
mov
mov
lods
lods
stos
xor
jae
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aam
std
rcl
sar
iret
into
int
stc
mov
mov
sarl
gs
sbb
add
add
add
add
add
add
add
add
jae
jb
push
inc
inc
das
cs
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
ret
dec
int3
int3
call
aad
dec
into
iret
inc
mov
ljmp
sahf
lahf
sti
mov
xor
add
xor
add
sbb
jae
jae
xchg
adc
arpl
mov
push
outsl
jb
bound
pop
pusha
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jb
daa
and
add
add
add
jb
je
pushf
xchg
fwait
mov
test
clc
xchg
test
addb
push
dec
push
inc
mov
pushf
into
mov
lahf
lahf
sti
xchg
xchg
xchg
decb
lea
lods
test
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorl
stos
mov
mov
mov
cld
pushf
popf
popf
cmc
cltd
cwtl
cltd
in
test
push
imul
jge
mov
xchg
notl
mov
pushl
push
mov
test
scas
push
lods
stos
lods
add
add
add
test
lods
cld
xchg
xchg
xchg
lcall
lcall
xchg
lcall
xchg
mov
loope
jbe
out
xchg
fs
pushf
inc
jbe
cmpsb
ss
scas
sub
pushl
sbb
mov
jge
mov
mov
imul
into
add
xchg
pop
scas
movsl
stos
test
popf
popf
popf
jmp
movsb
cmpsb
call
jl
mov
decb
xor
mov
call
or
or
scas
push
outsb
pushl
and
inc
daa
jnp
lds
xchg
rcrb
subl
jae
push
mov
movsl
cmpsl
cld
test
mov
pushl
xchg
decl
or
xchg
push
decl
add
mov
adc
ret
dec
inc
mov
iret
inc
mov
aad
call
dec
xchg
dec
cwtl
mov
mov
mov
mov
add
add
imul
cmpsb
mov
scas
pushl
mov
movsl
call
decl
push
push
call
add
stos
add
mov
push
xchg
fstpl
loope
mov
jmp
movsl
call
pushf
mov
mov
mov
test
test
add
add
arpl
adc
pushf
lcall
mov
mov
mov
fwait
dec
jl
popf
xor
cltd
and
xchg
push
pop
lcall
add
mov
xor
jmp
jl
push
jl
out
jle
ficompl
mov
and
add
add
dec
adc
push
cmp
mov
mov
rol
mov
bound
jmp
add
ljmp
add
les
insl
fmull
in
lea
cmc
xchg
push
xchg
clc
xchg
jmp
movsl
inc
mov
movsb
sub
inc
inc
inc
adc
push
xchg
mov
mov
inc
mov
xchg
ljmp
sbb
movsl
add
mov
fs
add
aad
jns
in
insb
lods
push
cmpsl
int
stc
stos
sar
cld
lods
sar
cld
scas
sar
cld
scas
iret
ljmp
fldenv
std
incl
xor
xor
jo
jno
scas
mov
mov
aad
mov
aad
aam
out
lret
cli
mov
mov
jmp
add
ret
call
add
out
xchg
testl
fdivr
std
rcr
cld
ret
std
ret
out
mov
ret
in
test
dec
jg
jg
add
add
stos
lods
stos
add
jmp
or
call
out
outsb
fldenv
movsl
outsb
ljmp
add
lret
add
fiadds
jne
out
cmp
cld
into
out
std
shl
std
shl
std
aad
std
aam
push
leave
fdivr
ror
int
scas
scas
lods
popa
addl
add
incb
std
incb
lret
int
sub
lahf
sbb
stos
add
mov
add
jecxz
jns
hlt
push
movsl
inc
loop
aad
std
out
std
shl
cld
aam
sti
shl
push
enter
int3
shl
mov
mov
xchg
xchg
xchg
pop
ret
mov
cld
lods
push
arpl
mov
push
je
fistps
cmp
out
mov
shl
ljmp
jmp
out
aad
jmp
scas
ret
vsqrtps
add
add
popf
lods
xchg
inc
and
push
mov
shll
lret
js
mov
xlat
mov
lret
int
fmul
rcrb
rcl
dec
in
loope
out
out
in
out
in
sbb
sarl
cmp
mov
lods
push
mov
mov
lds
lret
sbb
fstp
bswap
int3
int3
or
aad
push
incl
addb
add
add
add
mov
incl
incb
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
or
inc
sti
cmp
sets
aad
stc
adc
inc
jmp
mov
stos
or
mov
fsubrl
aad
and
push
dec
jno
loope
pop
ss
and
pop
rclb
cltd
cld
xchg
insb
gs
and
push
dec
xchg
stc
mov
sbb
jo
inc
lret
jl
icebp
aaa
mov
push
mov
daa
pushf
test
pop
fistl
arpl
lcall
cmpsb
sti
enter
jecxz
mov
std
adc
xchg
cmp
mov
push
push
lods
push
sbb
test
hlt
data16
aas
test
stc
jo
pop
mov
clc
ja
inc
sar
xor
sub
repz
mov
loopne
mov
sahf
xchg
pusha
xor
aam
jmp
icebp
pop
pop
xor
dec
jge
lret
test
jg
jp
loope
mov
dec
or
pop
daa
add
fcompl
adc
pop
int
jnp
cld
sbb
pop
aaa
clc
dec
mov
and
jmp
mov
xchg
xor
or
or
mov
adc
insb
fsts
leave
xor
jno
mov
or
cmc
add
cmp
pop
sub
dec
movsb
aad
mov
or
imul
in
ljmp
push
push
mov
mov
test
dec
push
push
fs
cld
mov
pop
loope
rorb
ret
adc
lret
pushf
je
lahf
push
push
roll
or
push
jmp
cmc
sahf
cmp
in
dec
mov
aaa
jno
imul
inc
inc
jecxz
mov
sbb
fstl
cmp
mov
rcl
rorb
int
divps
inc
push
pusha
xlat
fcom
pop
jbe
sti
lock
orb
or
jle
sub
cmp
add
mov
fldl
mov
negl
xor
loop
dec
outsb
mov
mov
in
sbb
movsl
rep
sub
mov
aaa
les
mov
push
fcompl
cmp
insl
cli
aaa
icebp
imul
pop
jg
or
mov
mov
add
fdivs
add
sub
in
add
call
lock
faddl
cli
loop
cmp
inc
cmp
pop
jmp
fimuls
sub
push
loop
xchg
loopne
push
xchg
sbb
sbb
add
jg
int3
push
dec
xchg
fcompl
incb
insl
lret
fbstp
daa
int
push
jnp
add
lods
mov
pop
inc
inc
repnz
xrelease
pop
cld
add
and
ficoml
fs
inc
xchg
xchg
cmp
and
out
ljmp
adc
mov
xor
mov
cmp
scas
out
jno
rclb
das
imull
loop
fwait
pop
outsl
repnz
addb
lret
xchg
inc
mov
stc
fs
fcomp
xchg
lret
out
or
ret
stos
pop
aam
xchg
sarb
push
ret
and
lods
lcall
pop
test
gs
pop
insl
adc
in
hlt
cmpsl
in
adc
fldt
hlt
jae
sub
sub
fdivr
mov
pop
adc
mov
fdivrs
shlb
push
stc
add
jmp
jmp
sub
xor
inc
xor
jae
in
fisttpl
fucomip
lds
adc
loopne
lock
test
fistpl
ret
push
and
mov
push
in
pusha
std
fdivrl
inc
or
pushf
jl
push
test
inc
mov
sub
cld
pop
pop
dec
mov
shrb
cs
in
push
hlt
xchg
inc
jno
adc
rorl
clc
xor
push
popa
jmp
outsl
lock
xchg
xchg
dec
nop
inc
sub
or
adc
ds
and
orb
sbb
inc
mov
cs
shlb
push
sub
cmp
mov
sbbb
call
aaa
into
adc
jg
rolb
ljmp
mov
inc
decb
add
ret
pop
or
repz
stos
pop
xor
dec
cli
add
mov
je
mov
adc
cmp
outsl
test
dec
nop
sub
mov
roll
cli
stos
mov
and
jge
lahf
call
inc
fisubl
insb
xor
mov
xlat
xor
xor
ljmp
enter
iret
stos
lock
stos
hlt
bound
add
sbb
xchg
mov
hlt
mov
push
adc
and
fistl
popf
repz
sub
or
pop
loopne
rolb
mov
out
push
imul
clc
push
add
les
xlat
mov
cmpl
mov
sbb
mov
pop
jns
ret
jb
push
sub
dec
or
xor
sub
cmpsl
dec
call
dec
jnp
xchg
cmpl
mov
das
data16
sbb
jmp
cmc
jo
or
or
add
insb
cmp
add
sbb
sahf
jmp
imul
into
dec
mov
cmp
enter
pop
sub
cmp
push
cmc
or
cmc
mov
pop
add
jno
fisubrs
push
sbb
push
jge
call
jne
fcmovne
int
xchg
adc
popf
sarb
mov
push
pop
sub
test
inc
fstpl
mov
xor
dec
or
dec
in
inc
lock
and
leave
adc
inc
ljmp
xchg
cmp
loopne
mov
adc
adc
pushf
xor
xchg
mov
fsubrs
or
testl
xorl
ret
roll
dec
loope
flds
js
mov
pop
ret
cld
cmpsb
cmp
lods
dec
les
int
xchg
mov
icebp
lea
mov
les
cmpsl
ds
jmp
lds
push
inc
divb
inc
push
movsl
sbb
pop
divl
into
sub
adc
cltd
std
arpl
mov
enter
jmp
xor
sbb
push
inc
insb
mov
imul
add
xchg
loopne
data16
movsl
mov
in
test
sub
xchg
icebp
mov
or
sub
mov
les
fnsave
dec
loop
pop
jl
cmp
imul
mov
jbe
mov
cmp
xor
les
push
testb
daa
xchg
sub
adc
mov
out
cmp
das
je
lods
ret
adcb
out
aam
jnp
sbb
test
imul
jg
mov
mov
fcmovbe
repnz
rorl
rorb
addb
xor
push
repnz
xor
pop
out
mov
js
fcomp
jno
pop
call
pop
scas
sbb
lods
scas
add
xor
xor
add
test
push
jmp
fdivs
cmpsb
stc
xchg
sub
cli
dec
mov
jle
lods
inc
dec
lahf
shrb
outsb
lret
bound
ret
hlt
inc
push
movsl
jbe
or
enter
cwtl
jmp
inc
fucomi
cmp
insb
or
cli
cmp
pop
sbbl
adc
lds
mov
das
mov
fnstenv
test
leave
pusha
pop
sub
call
hlt
lods
rorl
mov
add
rclb
xor
jne
loope
jno
push
movsl
lret
push
add
and
and
cld
inc
stos
imul
lcall
jecxz
push
or
cmp
jne
pop
addr16
cmpsl
cld
xchg
lods
sbbb
negb
es
cmp
jbe
mov
repnz
imul
jp
sbb
aas
xchg
sub
mov
mov
mov
lret
sbb
popa
dec
in
jl
push
insb
repnz
mov
scas
inc
add
ret
sub
fwait
mov
repnz
xchg
lds
push
lods
aam
pop
repz
cli
fbstp
mov
out
cmp
loopne
inc
fdivs
jecxz
aad
and
mov
jbe
adc
sbb
pop
repz
cmp
int
mov
xor
sti
es
jmp
sbb
lcall
sbbb
fnstcw
add
or
pop
lods
stos
xchg
xchg
dec
xor
push
addr16
cltd
jno
sbb
std
xchg
pop
cmpl
or
fs
int3
cmp
pop
inc
ja
lock
push
sbb
mov
mov
sbb
cmp
addr16
cltd
dec
add
mov
xchg
dec
aas
cmp
lds
pop
mov
jge
subl
lods
inc
push
cwtl
cmp
adc
orl
ret
out
sbb
dec
sub
push
aad
sbb
inc
cmp
and
inc
sbb
mov
mov
in
int
add
and
and
push
push
fwait
dec
fcomps
filds
ret
pop
stos
lcall
jg
pop
push
sub
jp
fldl
mov
je
and
pusha
jbe
mov
inc
mov
inc
xchg
nop
pop
sbb
imul
repnz
test
sub
adc
mov
sub
dec
pop
xorb
js
or
pushf
out
pusha
imull
stos
pop
scas
sbb
jecxz
jmp
or
cmp
jg
mov
popf
dec
gs
jnp
sarl
aaa
fmull
sbb
dec
out
imul
sub
insl
xchg
cs
sub
cltd
lods
jne
xchg
push
in
mov
fnsave
into
out
sbb
mov
mov
push
out
roll
add
sahf
fdivrs
shr
mov
das
js
test
je
sbb
push
aas
dec
loopne
aaa
lcall
mov
jb
and
fistpll
movsb
cmp
rcl
addr16
inc
dec
in
or
xor
aaa
mov
ja
pop
and
leave
stos
jo
ljmp
mov
xchg
sub
test
shrl
push
ss
mov
push
in
mov
insb
stos
frstor
inc
jnp
mov
gs
or
es
pop
out
inc
aam
sbb
pop
decb
xchg
sub
add
hlt
adc
ss
nop
mov
mov
mov
std
or
and
xor
push
jmp
adc
pop
sbb
push
jmp
lcall
and
mov
into
gs
cmp
xor
inc
fdivrl
push
clc
xchg
pop
adcb
mov
fnstenv
je
and
inc
call
leave
mov
add
ljmp
pop
and
jle
pop
lods
jbe
call
xor
mov
cs
mov
je
dec
inc
cmpsl
lcall
mov
cltd
cmc
push
movsl
ja
mov
mov
stos
std
inc
mov
fucom
pop
icebp
push
add
xor
jns
cmc
outsb
cs
fdivrs
jae
frstor
jp
jecxz
jp
movl
push
outsb
loop
cmc
mov
into
aas
jle
dec
mov
pushf
jle
rcrl
and
xor
push
cmp
xchg
sbb
xchg
jge
pop
scas
sbb
cmp
inc
fldcw
jne
jge
dec
addr16
or
jns
rcrl
jns
outsl
xor
pop
movsl
outsl
jb
pusha
test
js
xchg
scas
idivb
imul
adc
push
mov
and
call
fdivrl
sti
xchg
lods
cli
imul
decl
mov
mov
ret
loopne
cmp
ret
add
bound
mov
xchg
mov
push
push
mov
pop
sub
push
cwtl
out
aad
shrb
push
add
pushf
pushf
jno
loopne
lods
mov
and
lds
xor
scas
jnp
imul
outsl
lret
and
out
inc
stc
nop
jbe
mov
ret
pop
movsl
cltd
xor
jnp
mov
call
scas
cmpsl
gs
test
pushf
ds
pop
iret
xor
fcoml
add
loopne
out
sub
repz
adcl
in
test
cmp
dec
int
sub
add
iret
xor
add
mov
shrl
fcmovu
jno
mov
mov
sbb
mov
jmp
pop
inc
and
mov
push
push
ja
adc
sub
dec
loopne
dec
pop
pop
decl
in
jnp
pushf
xor
pop
lock
push
jae
gs
es
and
push
in
xchg
inc
xchg
or
lea
sub
mov
mov
dec
out
sar
adc
dec
out
ss
lods
movsl
mov
push
movsl
sub
dec
adc
cmpsb
or
xchg
je
pop
scas
mov
faddl
xlat
inc
cmp
mov
mov
mov
pusha
repz
jecxz
fidivl
push
js
inc
adc
cltd
xor
or
ja
insb
fnstenv
push
cmp
aas
sbb
push
test
mov
std
xchg
and
lret
cmp
daa
imul
pop
sbb
mov
dec
std
cmpsl
mov
fistps
int
inc
mul
jle
push
add
js
add
scas
ljmp
fcmovu
sbbl
ficoms
rol
sub
cmpsb
jg
shrb
mov
loope
lcall
adc
pop
test
sarl
testb
sbb
pusha
test
addr16
cmc
je
jnp
xchg
xlat
outsb
push
or
test
cmpsl
xchg
sub
push
mov
mov
inc
enter
gs
nop
pop
pop
in
popa
jp
fiadds
lcall
xor
jbe
arpl
scas
xchg
mov
lods
inc
pop
push
mov
clc
aam
in
push
or
popf
mov
inc
and
mov
insl
mov
loopne
adc
bound
push
repnz
out
mov
incl
dec
loope
adc
jmp
xor
mov
cmp
push
and
ret
stos
cmpsb
cmp
shrl
pop
jg
scas
inc
ret
mov
mov
mov
lds
iret
out
outsl
rcrl
mov
stos
pop
mov
jae
ja
jo
pop
cmpsb
cmp
push
rcl
call
or
mov
mov
loop
xor
push
xchg
sub
sbb
bound
leave
mov
push
push
in
inc
aas
in
test
mov
add
bound
jle
and
mov
add
cmp
sub
pop
jnp
xlat
outsb
cmpsb
pushf
lock
mov
dec
or
jae
in
adc
mov
cltd
xor
xlat
dec
jecxz
or
push
mov
mov
or
fnstenv
adc
stos
scas
mov
or
dec
pop
sub
lahf
insl
mov
inc
sarb
in
insl
test
push
xchg
cmpsb
lret
mov
xchg
out
jmp
jmp
ret
fsubs
sti
xchg
push
stc
jbe
mov
fsubrp
sub
testb
pop
sub
outsl
mov
dec
fildll
adc
shrl
add
or
push
pop
cmp
mov
pushf
cmp
jbe
push
push
jmp
ja
xchg
and
jge
inc
sahf
adc
stc
add
xor
es
es
xlat
test
sub
xchg
sub
dec
dec
loopne
out
fnstenv
jg
decb
popf
xor
jo
stos
push
mov
outsb
mov
mov
dec
in
push
cmpsb
cmp
inc
popa
lods
inc
xchg
push
mov
push
lods
mov
pop
push
int
mov
mov
shl
push
test
cmp
pop
leave
xchg
stos
sub
fcoml
fsubrs
cld
rorl
jmp
dec
gs
fst
loop
push
lea
test
sub
dec
xchg
jg
mov
inc
or
mov
pop
adc
stos
insb
mov
cmpsl
pop
xchg
andb
loop
cs
sbb
enter
jl
push
jmp
popf
stc
pop
out
js
aaa
or
dec
dec
or
sbb
xchg
out
sbb
aad
push
mov
lret
cmpsb
clc
mov
adc
pop
sub
pushf
add
pop
or
inc
cmp
jne
xchg
jae
pop
fmull
out
sbb
jp
cwtl
mov
pshufw
insl
fwait
xor
or
and
xor
xchg
sub
shrl
inc
add
arpl
jecxz
scas
xor
mov
cmpsl
cwtl
adc
jg
test
mov
inc
xor
ja
cmc
in
xchg
push
hlt
lret
icebp
or
gs
dec
stos
jb
das
movsb
lret
ja
jl
inc
pop
add
mov
jb
ds
jmp
insl
xchg
cmp
fcoml
rcll
test
js
mov
negb
xchg
mov
cmp
xor
or
jne
enter
ret
pop
mov
inc
mov
mov
daa
push
cmp
test
jo
adc
fldcw
aam
lret
ret
jle
scas
neg
mov
lcall
hlt
adc
outsb
inc
and
fisttpll
cmp
ret
and
jmp
add
leave
in
cmp
cmp
jns
pop
or
ss
nop
mov
push
cmpsb
push
test
mov
call
or
cmpsl
sti
xchg
fnstcw
dec
xchg
mov
cli
xchg
fistpll
mov
mov
dec
lret
sub
sbb
or
pop
insb
push
testb
pop
mov
mov
jb
nop
jae
movsl
mov
leave
loopne
test
pop
jo
dec
das
or
inc
cltd
mov
inc
mov
sbbl
std
cmc
cmpsl
or
cmp
inc
add
es
dec
pop
pop
mov
stos
jno
ja
cmpsb
cmp
push
jge
sub
sbb
fucomip
lret
femms
fsubl
fidivl
insb
shl
sbb
add
fsub
ficompl
pop
lret
incb
pop
jnp
imul
sbb
lahf
sar
cwtl
pop
outsb
pop
adc
xchg
push
sarb
pop
sbb
mov
bound
aas
xchg
jle
repz
and
les
testb
cmpsl
ds
adc
sub
test
pop
or
mov
orb
xchg
adc
xchg
fst
pop
and
xchg
lcall
mov
daa
push
test
sub
jmp
fs
and
pop
subb
dec
pusha
mov
adcb
loope
dec
addb
sbb
fstpt
arpl
push
aad
add
out
xor
fisttpl
out
fcmovne
cmc
daa
xchg
pop
xor
mov
add
addb
mov
push
dec
sub
in
inc
fstpl
lret
ja
rcrb
imul
lods
pop
repz
jecxz
xchg
out
call
js
div
sar
fsubrs
imul
ljmp
shl
ds
cmp
mov
mov
jmp
repnz
pop
divb
in
or
mov
or
adc
test
cmp
pop
or
cmp
das
inc
dec
mov
jnp
lods
mov
subb
sbb
test
adc
add
xor
jmp
loop
cmpsb
mov
pop
pop
pop
sbb
loopne
cltd
shrb
je
cli
push
jae
push
pop
cmp
sahf
aaa
add
adc
or
sbb
in
pop
dec
in
cmp
in
adcb
jbe
jg
cwtl
in
es
pop
sub
call
icebp
xchg
daa
lock
pop
add
sub
push
xchg
cld
jae
idivl
jnp
andb
popa
mov
pop
xor
clc
push
mov
ja
inc
sub
into
pop
push
out
push
out
sub
cmc
ljmp
clc
or
push
insb
jp
adc
ja
or
xchg
inc
jne
sbbb
jnp
lea
movb
jge
add
mov
call
pop
sub
dec
xchg
pusha
dec
mov
ret
pop
outsb
inc
lret
in
or
fs
rorl
jo
add
and
push
cmpb
push
aaa
jecxz
lock
cli
push
add
ret
negb
and
and
or
lea
in
sub
xchg
adc
frstor
hlt
clc
lcall
add
ret
dec
icebp
mov
pushf
inc
dec
push
dec
out
jno
xchg
imul
outsw
push
cwtl
dec
push
imul
sub
data16
test
push
fsubrs
push
out
mov
pop
in
std
mov
and
loope
adc
mov
sbb
inc
cmp
xchg
jo
and
in
or
insb
sti
xchg
cmpsb
sub
mov
add
mov
fimull
loop
sbb
shl
mov
xchg
sub
cmp
sti
mov
cli
fnstenv
scas
and
dec
fists
cmp
sbb
mov
imul
bound
xchg
jo
sbb
or
outsl
ds
out
insb
scas
or
loop
cmovne
outsl
ficoms
dec
jno
or
inc
fcoml
aam
pop
cmp
and
lods
inc
mov
movsl
push
int
or
sbb
movsl
aam
je
in
icebp
shlb
ret
mov
subl
fcomip
mov
add
shll
pop
scas
pop
inc
mov
dec
mov
xor
mov
lods
inc
sub
enter
call
das
iret
shll
arpl
out
cmp
fstl
sbb
cmpsb
aas
xchg
fildll
or
in
jne
out
push
lods
mov
mov
ffreep
jle
ss
sub
cwtl
jmp
data16
adc
jl
test
push
pushf
mov
or
adc
mov
es
call
cmp
aam
cltd
add
fcmovb
jecxz
cmpsb
push
xor
test
shrb
andl
test
bswap
xchg
aas
jbe
push
outsb
fldl
push
mov
xchg
xor
push
orb
mov
inc
lret
jnp
in
imul
sbb
cmc
mov
pop
or
mov
or
data16
mov
push
gs
push
cmp
add
repnz
out
adc
iret
jo
or
jnp
xchg
lods
push
nop
xchg
add
jp
and
lcall
data16
adc
cmp
rorl
dec
xlat
bound
lret
aas
inc
adcl
test
pusha
mov
sbbl
pop
mov
lcall
mov
je
or
in
loope
xchg
repz
pop
adc
mov
inc
fidivl
into
jae
or
lahf
sbb
pop
lods
ja
outsl
lcall
lea
inc
sub
lds
push
adc
mov
hlt
fmul
js
push
adc
sbb
xchg
jmp
jg
xchg
cwtl
pusha
adc
mov
xor
add
mov
repz
add
das
test
mov
mov
subl
sub
dec
or
arpl
add
add
rclb
out
or
pop
dec
push
jecxz
xchg
inc
inc
sbb
int
push
or
icebp
shrl
mov
or
cmp
scas
fcompl
in
cs
fstpt
and
aas
mov
dec
data16
xor
popf
int3
mov
and
adc
cmpsb
jns
cltd
inc
in
xor
mov
les
push
cmpsl
bound
xchg
push
adcb
mov
mov
sarb
fldcw
fbld
cmpsl
insl
repnz
lretw
xchg
divb
js
dec
hlt
in
stos
push
rolb
push
sub
shrl
xor
sub
and
dec
or
or
lret
movb
jno
popa
outsl
jge
out
adc
negb
mov
lea
andl
sub
mov
das
mov
outsb
sbb
les
mov
jno
mov
mov
xchg
mov
pop
je
mov
test
arpl
mov
jle
add
jg
lahf
push
hlt
das
mov
test
sub
insl
aad
outsl
inc
aad
inc
jo
scas
mov
ret
pmulhw
mov
daa
cmc
add
sbb
and
sub
ret
sbb
xchg
jle
xor
cmpb
je
xchg
outsl
adc
mov
out
inc
sbb
imul
dec
xor
pop
mov
in
test
push
jo
gs
fstpl
popf
jo
int
fnstenv
out
inc
out
xchg
cltd
xor
ss
mov
jbe
jle
mov
mov
xlat
mulb
mov
push
ja
xchg
scas
fildl
xor
je
inc
jae
jbe
jp
cmp
jmp
push
jl
testb
xor
pop
fs
cmp
nop
aam
ret
aad
push
pop
out
sub
pop
add
ja
sbb
pop
dec
pop
pop
stos
mov
cmpb
inc
in
push
lret
clc
jbe
ljmp
push
aas
in
xchg
push
popa
fisubs
imul
je
aam
adc
daa
pop
es
pusha
cwtl
xor
jecxz
adc
jbe
maskmovq
xor
sbb
or
mov
lds
out
and
popf
jns
lcall
add
jb
pusha
orl
cltd
test
jns
pusha
imull
test
dec
adc
push
inc
dec
mov
imul
ljmp
inc
cld
xchg
push
xor
rcll
dec
adc
aaa
pusha
shll
jo
in
arpl
bound
in
push
sbb
fs
pop
adc
cmp
inc
and
jnp
bound
ljmp
fnstenv
bound
movsb
enter
cld
mov
adc
mov
hlt
xor
dec
jle
push
mov
add
das
inc
test
rcr
or
pop
call
cltd
js,pt
data16
subb
xchg
cmp
outsb
cli
mov
xchg
xlat
and
adc
sub
mov
fadd
test
mov
js
out
fwait
pop
fstl
es
jns
xchg
add
xchg
roll
jno
out
imull
rcrl
mov
loope
fildl
xchg
or
lcall
lods
addb
and
add
lea
jg
sbb
popa
mov
aaa
xchg
sub
lods
repz
jo
adc
lds
push
int3
ret
xor
adc
in
push
and
jmp
stos
inc
lods
cmp
cmp
fsubs
rcrl
mov
aaa
sbb
xchg
mov
cwtl
jle
adc
mov
xor
mov
aam
les
popa
inc
or
in
out
push
mov
sbb
fstl
jb
es
jno
xchg
mov
and
push
movsl
pop
xchg
jb
fnstcw
jb
cmp
sbb
push
push
into
gs
call
adc
shll
roll
jmp
out
sahf
push
push
sub
std
je
dec
cli
daa
pusha
cwtl
pushf
test
jg
and
adc
mov
and
pop
ret
fistpl
and
and
les
cmp
cld
loopne
sub
push
or
mov
cmp
inc
cmpsl
in
cld
xchg
cwtl
push
js
in
dec
mov
sub
xchg
xor
stos
mov
jns
mov
pop
hlt
in
xchg
roll
subl
out
jecxz
sbb
ret
or
std
mov
and
lods
fildl
and
xchg
sub
inc
ret
daa
xchg
mov
jno
mov
dec
jge
mov
xchg
mov
jg
jge
jp
cld
mov
push
ljmp
inc
fsubr
cmpsb
or
adc
jp
mov
outsl
sub
pop
mov
mull
lds
jge
iret
fdiv
mov
icebp
imul
pop
push
dec
push
jne
mov
mov
addr16
mov
sbb
jnp
iret
in
dec
cmp
jge
mov
in
sub
or
cs
addr16
sub
push
xlat
sbb
and
jb
ljmp
dec
rcr
mov
shrb
mov
pop
push
outsl
xchg
andb
push
inc
cmp
jae
mov
pusha
inc
pop
shll
aaa
mov
mov
adc
test
push
push
lcall
enter
cmpsb
mov
loope
push
movsb
xchg
xchg
bound
dec
fs
cmp
pop
xchg
gs
jl
out
inc
lret
push
xlat
push
popf
or
pushf
jmp
xchg
sub
push
pop
mov
xchg
je
inc
xor
loope
add
inc
nop
ds
push
sti
jb
fsubs
mov
fsubp
sahf
ds
or
mov
mov
and
mov
test
jae
fdivl
bound
call
insl
scas
or
mov
mov
sub
mov
fsubrs
mov
inc
lcall
push
shl
int
inc
enter
ljmp
dec
lds
mov
dec
loopne
sahf
mov
rorl
pop
xor
andb
ret
in
aas
fmuls
jge
repnz
xor
or
loope
out
scas
inc
inc
mov
iret
nop
daa
into
stos
pushf
jbe
mov
mov
lock
add
mov
inc
fidivl
sbb
mov
jmp
sbbb
adc
cwtl
out
add
mov
fnstenv
imul
jmp
dec
xlat
xor
push
cmpsl
sub
pop
hlt
fs
add
adc
mov
stos
cmpb
add
mov
or
or
dec
scas
es
inc
jge
jb
lods
jnp
pop
loope
nop
inc
les
xor
mov
loope
hlt
mov
sbb
mov
jnp
jmp
leave
leave
pusha
sti
or
mov
add
mov
push
mov
jnp
cltd
mov
xchg
jmp
test
xchg
cmp
push
adc
jmp
xchg
sub
push
lret
aas
fdivrl
jnp
outsb
or
push
sub
xchg
ds
xor
dec
js
mov
sub
pop
xor
bound
add
and
xor
popa
clc
das
push
shrl
in
pop
loopne
dec
loope
sub
addr16
sahf
xor
push
or
shlb
movsl
cmp
subl
insb
xchg
sub
mov
cmpsb
cmp
sbbb
sub
lock
movsl
fs
pop
enter
push
xchg
dec
mov
sbbb
clc
xchg
sub
jmp
sub
ds
pop
jo
enter
roll
cmp
mov
inc
lea
adc
cmpsl
xchg
mov
pop
or
xchg
pop
fbld
pusha
or
imul
xlat
fisttpll
sbb
inc
add
sub
pop
mov
sbb
xchg
popf
xor
aas
mov
dec
cmp
jge
pop
push
push
scas
jae
push
ret
cmp
push
jg
dec
dec
push
decl
dec
xchg
lea
cmpsl
pop
push
cs
jbe
rcll
push
test
adc
cwtl
push
imull
cmp
sti
sub
or
ret
pop
js
es
sahf
fisttpll
sub
ret
cmp
imul
ret
pop
cmp
pop
mov
fs
mov
mov
xor
xlat
outsb
xchg
out
insb
lods
inc
popa
arpl
bound
adcb
movsl
cmp
sub
js
push
insb
scas
outsb
add
stc
xor
xrelease
push
lcall
ficompl
mov
push
ljmp
dec
loop
xchg
add
repnz
pop
mov
inc
adc
dec
add
cltd
jb
inc
xlat
je
lahf
decb
xchg
hlt
pop
loop
jbe
lods
inc
jnp
push
in
add
mov
es
xchg
nop
mov
add
lcall
sub
cli
rcr
xchg
lret
or
lea
mov
xchg
and
imul
pop
xchg
call
or
pusha
mov
fidivs
or
jp
mov
aad
loopne
ficoml
in
add
ljmp
test
movsl
xor
mov
into
xchg
sbb
xchg
jmp
and
sub
pusha
pop
repz
out
dec
xlat
ds
movsl
scas
push
lcall
lods
push
outsl
add
out
popf
cmpsl
sbb
dec
repnz
xor
in
fadd
mov
leave
imul
pushf
jge
inc
pop
inc
push
sub
cwtl
and
lea
jnp
mov
mov
mov
dec
js
arpl
or
xchg
pop
ret
hlt
jg
mov
adc
cmp
add
or
mov
je
cmpsl
push
mov
inc
enter
popa
into
gs
sbb
and
iret
data16
shr
repz
sub
dec
add
fbstp
push
data16
movb
clc
scas
sarl
loope
pop
or
sbb
movsb
cmpsl
mov
adc
out
das
add
scas
sbb
dec
and
cmpxchg
mov
inc
test
aas
arpl
sbb
arpl
data16
std
xchg
mov
aad
mov
insl
loope
fstpl
pusha
mov
sbb
fs
pop
mov
test
cmp
push
into
lahf
gs
ds
test
cmp
aaa
pushf
sub
pop
add
std
jo
test
sti
inc
repz
jno
adc
bound
outsb
in
cmp
dec
mov
sbb
nop
cli
jne
ret
xor
call
sbb
neg
mov
pop
jge
jb
movsb
sub
adc
adc
adc
mov
xlat
in
push
test
pop
cmc
sbb
inc
xchg
and
sub
or
call
or
cmp
xor
pop
out
jg
push
loopne
out
push
popf
or
aas
fildll
push
cwtl
movsl
xor
inc
cmpl
subb
mov
fnstenv
add
std
mov
mov
imul
jmp
xlat
repnz
inc
imul
scas
cld
loop
stos
jg
mov
nop
es
out
incl
mov
mov
gs
out
scas
sbbl
jp
sub
pop
push
fucomp
std
test
daa
lods
and
mov
outsl
notb
sub
dec
pop
xor
dec
dec
out
push
subl
or
scas
imulb
mov
test
jb
xchg
int
xor
daa
outsl
lea
and
int3
dec
or
inc
aaa
shlb
adc
std
mov
push
das
out
inc
sub
sub
dec
dec
pop
int3
dec
lods
les
popf
sub
mov
mov
jb
pop
fs
push
stc
and
xchg
mov
inc
movsl
jge
inc
cld
into
mov
je
or
scas
mov
jg
xchg
ljmp
push
sbb
cs
aad
jb
or
mov
xchg
mov
adc
mov
sub
test
jns
outsl
rorl
out
pop
add
mov
aaa
cs
in
pop
aam
bound
xor
int
or
jns
dec
in
xchg
hlt
cmp
xchg
out
jbe
sbb
ja
test
mov
test
shlb
lcall
jne
pushf
adc
or
loop
sti
sarl
or
hlt
mov
test
mov
mov
aad
es
test
ret
mov
add
stos
inc
mov
test
mov
add
in
mov
shrl
mov
iret
test
int
shll
mov
jns
cwtl
cmc
sbb
and
out
jmp
cmp
inc
fsubl
mov
push
mov
aaa
test
mov
lds
cld
mov
jle
pop
outsb
cmp
xlat
pusha
pop
jbe
adc
jle
bound
nop
mov
pop
xor
sbb
fcomip
leave
or
add
jle
sahf
out
cli
mov
and
jne
mov
adc
mov
incb
rorb
mov
cmp
mov
xor
lret
jmp
mov
fs
adc
popa
test
adc
sub
leave
iret
push
insl
clc
mov
mov
mov
sub
daa
add
adcb
sub
push
test
jno
jp
scas
js
sub
icebp
insb
das
cmc
xchg
jmp
add
jp
push
and
xchg
xor
dec
mov
in
flds
cmpsl
cmp
mov
lret
xor
lahf
xor
clc
pop
mov
addr16
stos
dec
cmp
int3
out
mov
pop
aam
jmp
pop
mov
js
icebp
nopl
fwait
adc
xchg
xchg
aaa
mov
or
mov
cmp
sbb
sbbb
pushf
cs
sbb
stc
ss
movsb
mov
xor
jge
mov
scas
inc
or
mov
testl
sub
popf
add
adc
gs
adc
dec
mov
adc
push
lock
in
ss
cmp
mov
pop
xlat
cs
pusha
imul
outsl
cld
cmp
loope
into
sub
or
push
leave
jecxz
xchg
movsb
mov
dec
mov
cmpl
jl
cmpl
data16
in
test
mov
cmp
rcrl
jbe
idivl
imul
sub
cmp
notb
sbb
or
inc
aas
stc
sub
inc
or
mov
cmpl
ss
xchg
mov
loope
add
inc
pop
sub
adc
push
out
mov
or
out
fwait
sahf
jo
xor
cli
or
push
cmp
jno
nop
mov
mov
dec
rcrb
jae
jnp
inc
xchg
cmp
xlat
add
and
icebp
and
mov
ret
jmp
push
inc
fcmovne
popf
ljmp
enter
push
adc
ljmp
in
jnp
leave
insb
hlt
insb
sti
mov
daa
add
sti
xor
out
enter
cmp
dec
outsb
mov
aad
mov
cs
mov
mov
or
dec
mov
jg
daa
cld
loopne
mov
xor
sub
xchg
mov
call
shll
ss
xor
mov
movb
add
pop
jo
sbb
rcrl
mov
les
pop
pop
mov
int
or
push
cmp
pop
imul
ss
fistps
push
cmp
inc
stos
xchg
data16
push
in
pop
inc
mov
jo
lods
jmp
adc
popf
mulb
aad
push
inc
test
cmpsl
into
sbb
dec
xchg
in
insl
rclb
xchg
jmp
and
incb
add
clc
dec
decl
sub
clc
inc
jbe
es
iret
fs
js
lock
cmp
add
loopne
fidivs
insl
out
xlat
aad
nop
adc
cmp
cmc
mov
imul
sbb
lods
negl
fdivl
add
nop
inc
xchg
fcompl
lret
lock
ss
lret
scas
pop
out
fnstenv
jge
jno
mov
repz
sbb
add
and
cmp
out
test
out
subb
loope
add
aad
jb
into
fidivrl
inc
xor
mov
fmul
jmp
mov
paddsw
push
push
cmc
addr16
in
jecxz
in
js
cmc
mov
jg
subl
mov
pop
cmpsl
xchg
sub
jnp
jmp
shlb
mov
sarl
aaa
xchg
lret
cwtl
sbb
aad
mov
or
jp
cli
and
shrl
inc
inc
sbb
cmc
pop
and
mov
inc
fistpl
mov
xchg
sub
mov
adc
loop
sti
stos
push
or
jge
or
repz
aaa
test
sbb
add
xchg
stos
jp
popa
and
pop
je
xchg
lock
xchg
lret
ljmp
xor
idivb
inc
cmp
int
out
into
inc
dec
pop
xor
cmp
fs
lahf
shrl
xlat
sbb
add
dec
lahf
mov
in
adc
cld
sbb
xlat
xor
push
mov
mov
pop
pop
sub
stc
jo
loope
or
mov
shrl
add
inc
movsl
lds
mov
das
adc
push
fstpt
int
dec
and
mov
add
push
int3
or
lcall
sbb
jno
push
cmp
insb
ja
or
xchg
mov
fwait
cmp
pop
and
mov
jge
sub
jmp
mov
mov
sbb
daa
mov
out
cltd
cli
push
xor
out
inc
fldl
sub
dec
adc
jne
inc
push
add
sbb
xchg
pop
push
and
outsl
adc
rolb
cmc
or
stc
inc
pop
or
push
insb
jns
and
subb
lret
sahf
int
cwtl
mov
push
lahf
inc
xchg
mov
mov
fcmovne
clc
scas
dec
out
adc
aam
test
loopne
in
sahf
in
add
maxps
lds
jp
mov
shrl
dec
sahf
sti
adc
out
shr
inc
fisttpl
mov
push
mov
xchg
and
adc
jnp
jae
js
push
rcl
enter
jg
mov
sbb
fdivs
xor
sahf
add
xor
cmp
sub
push
xchg
into
loop
hlt
xchg
push
cmc
cmp
lcall
xchg
js
subb
dec
lcall
popa
sub
xlat
xor
fimuls
aad
xor
push
adc
cli
pushf
das
mov
sbb
pop
dec
arpl
lods
xchg
sbb
push
lock
mov
adc
mov
pop
cltd
std
aas
lahf
jle
add
push
push
pop
jb
pop
imul
cmp
iret
bound
pop
jmp
lret
shll
lods
sub
cwtl
xchg
xor
and
sbb
int3
arpl
les
aas
fcmovne
in
fimuls
aad
inc
push
imul
xor
lods
lret
aas
outsb
aaa
inc
or
pop
xlat
lods
inc
pop
lds
ror
leave
mov
push
in
xchg
adcb
ds
xchg
jl
test
cltd
mov
mov
xor
mov
stos
aam
sub
mov
or
pop
xchg
mov
test
or
in
xchg
repz
arpl
push
or
sbb
test
cmp
dec
test
fucomi
cmc
or
mov
out
fwait
imul
dec
jl
imul
sbb
inc
fst
inc
stc
or
fs
mov
pushf
bound
mov
mov
shrb
pop
arpl
in
imul
loope
movsl
xchg
gs
sub
dec
jg
ret
shrl
les
fs
add
xchg
inc
mov
mov
and
aad
cmp
xchg
f2xm1
push
dec
sbb
jp
jb
xchg
push
cmpsl
mov
pop
cs
inc
cwtl
das
xor
dec
mov
adc
sub
outsb
es
cs
les
lods
test
sbb
cmpsb
repz
rcll
pushf
arpl
stos
or
daa
jbe
mov
aaa
mov
pop
fisttps
mov
pop
in
xchg
clc
mov
inc
pop
cmp
pop
out
pop
lahf
sti
popf
test
sbb
dec
js
out
test
test
test
xlat
jecxz
sbb
jne
test
dec
int3
sbb
aad
xchg
lds
dec
cli
push
stc
lods
lea
sub
sub
pusha
mov
mov
inc
sbb
stos
pop
pusha
push
out
lea
int
icebp
in
stos
adc
and
jno
sub
fnstsw
test
xchg
out
in
test
rorl
ljmp
stos
jmp
dec
ds
or
insb
outsb
sub
ret
xchg
sbbb
mov
or
orb
mov
push
cwtl
pushf
push
sbb
mov
out
std
push
sub
imull
xlat
mov
rol
cs
xchg
mov
scas
flds
sbb
stos
add
repz
jbe
push
aaa
jl
imul
xor
addr16
fdivl
pop
inc
lahf
add
setbe
outsb
pushf
xor
dec
mov
sbb
xchg
xor
arpl
lods
fnsave
mov
js
dec
pushf
xor
pop
lret
mov
cmp
pop
hlt
shl
fisubrs
dec
movsl
call
int
std
xchg
movl
hlt
inc
or
dec
arpl
sbb
imul
xchg
mov
jmp
add
cmp
xchg
and
pusha
stos
sbb
scas
push
mov
jb
mov
mov
pop
fistpl
dec
xchg
insl
mov
sbb
push
sti
add
sub
cmp
out
push
ljmp
jno
pop
mov
mov
xchg
mov
in
cmc
lahf
gs
push
xlat
int
pop
shll
pop
mov
scas
jnp
popf
cmpsl
out
jno
cmp
popa
ss
mov
fcoms
je
push
inc
bound
adc
mov
sahf
adc
sbb
ficompl
dec
fildll
in
mov
cmpsl
dec
mulb
in
cmp
add
mov
push
shll
sub
xchg
adc
push
addr16
xchg
popa
les
or
jl
movsb
fwait
bound
popf
push
mov
fistpl
add
jb
or
sahf
ja
fisttpll
aas
adc
jge
repz
sti
jbe
lahf
popf
or
sbb
mov
outsb
add
push
mov
lods
int
mov
cmp
pop
test
cmpsb
mov
shll
mov
rolb
add
adc
ss
cwtl
mov
ja
frstor
jmp
or
rclb
adc
addr16
inc
ss
sti
mov
pop
jo
fs
sub
test
mov
jne
pop
out
jge
out
or
lret
test
pop
ret
push
push
pop
test
notb
mov
dec
in
add
or
lret
xlat
adc
xor
sub
push
and
out
sbb
cmpsl
adc
jbe
iret
sub
jae
sti
mov
xchg
mov
or
cmpsb
cmpl
aaa
and
pop
cmp
lods
push
stos
lods
jmp
insl
lea
mov
adc
or
sub
or
shlb
xchg
and
shl
or
cltd
push
inc
fadds
std
push
ljmp
scas
xchg
outsb
cwtl
cmp
and
mov
in
fcmovne
out
sbb
jbe
ljmp
and
insb
aaa
scas
pushf
lock
xchg
sti
decl
test
and
push
fsubs
push
outsb
xchg
pop
jo
mov
fstpl
ucomiss
scas
data16
je
lret
loope
cmp
inc
mov
xchg
pop
push
nop
jb
sbb
rclb
repnz
sarl
nop
daa
insl
dec
scas
ret
test
sub
mov
je
insl
lret
cld
sub
mov
mov
xchg
lods
aad
fsubrs
mulb
aaa
add
xchg
jge
and
sti
xchg
fistpll
mov
mov
adc
mov
cmp
int
hlt
mov
call
mov
push
lret
jae
sub
push
ror
add
or
leave
nop
sub
lret
push
jne
addb
iret
xchg
dec
iret
arpl
jle
or
pop
cmpsb
jo
and
insl
mov
xchg
mov
imul
icebp
out
jmp
outsb
add
push
mov
int3
xor
jmp
shll
jecxz
jmp
xor
fldenv
cmp
inc
xchg
jg
fisubl
fwait
jb
sub
pop
pop
ljmp
jl
call
pop
aas
mov
cmp
fildll
arpl
xchg
ljmp
clc
inc
lods
cmc
cmp
dec
test
mov
jbe
dec
pop
pop
shl
js
mov
cli
sub
xchg
xchg
fsubrl
dec
mov
adc
cmp
xorl
test
xchg
fs
dec
jl
mov
scas
and
sarl
std
mov
aas
cmpsb
dec
rorb
mov
ss
mov
mov
inc
fs
imul
add
sub
pusha
jge
addl
xchg
stos
adc
test
mov
push
xchg
pop
test
sub
pop
jp
imul
fnstcw
dec
aam
das
mov
mov
jle
shll
sbb
cmpsl
adc
ja
test
arpl
sbb
shrl
pop
sbb
lods
sahf
rorb
popa
lods
pop
xchg
js
imul
enter
cmp
outsb
xor
lret
lcall
xor
fldcw
sarl
ljmp
call
inc
inc
scas
inc
sbb
inc
call
scas
js
sbb
add
shr
fsubrp
inc
mov
push
imul
divb
mov
push
out
fidivrs
ret
enter
mov
ss
and
loopne
lock
pop
outsb
bound
sbb
out
inc
gs
mov
add
xchg
xor
in
inc
orb
stos
lds
pop
sbb
rcl
push
mov
iret
pop
test
lret
stc
xor
scas
pop
pop
pushf
insb
mov
mov
push
push
xchg
scas
cmp
xor
leave
cmpsb
xchg
and
loop
in
or
pop
mov
outsb
call
in
add
mov
fildll
test
add
cmp
int
adc
push
sbb
sub
and
shlb
dec
in
insl
xchg
pop
jnp
lock
cmp
and
outsb
sbb
and
insb
pop
xchg
and
movsb
std
or
xchg
inc
dec
xor
dec
loopne
sub
inc
cmp
push
jns
dec
ficomps
test
and
fsubr
inc
scas
pop
outsb
in
xor
scas
inc
stc
sbb
or
mov
xchg
repz
insl
loopne
mov
hlt
aas
pop
clc
hlt
aas
movsl
sub
push
mov
pop
mov
cmp
fptan
jo
cmp
dec
xchg
jns
fldcw
push
lock
push
push
in
dec
jmp
xlat
cltd
dec
jae
jl
jp
jl
xchg
dec
dec
sbb
test
dec
push
pop
xchg
imul
mov
in
mov
ficoms
test
push
loopne
sbb
mov
inc
xchg
mov
inc
xchg
mov
lret
and
mov
movsb
cmp
mov
xchg
jmp
inc
cwtl
inc
data16
fstpt
adc
mov
sbbl
push
push
cltd
movsl
sbb
or
lcall
es
iret
add
scas
jl
js
aam
sbb
pop
out
xor
xor
hlt
pusha
pop
loop
jns
aaa
movsb
aad
mov
push
xor
int3
mov
aam
mov
xor
iret
jl
shll
pop
or
in
cmp
test
mov
xlat
sarb
sbb
jbe
lods
sub
push
mov
mov
add
leave
shld
rolb
jmp
loopne
jb
sub
adc
sub
xorl
mov
mov
aaa
aad
fdivrs
or
or
xor
pushf
jns
cld
pop
push
dec
arpl
sahf
cmp
daa
mov
fidivl
xor
fcmove
fdivs
xor
push
int
stos
xor
loopne
dec
loopne
ffree
outsl
xlat
es
outsl
repnz
mov
cwtl
add
repz
or
das
int3
cmp
shl
loope
lret
dec
ud0
jo
xor
xchg
adc
adc
hlt
mov
je
dec
movsl
notb
sti
cmp
stos
jg
push
pushf
or
nop
sub
lret
orl
adc
dec
shll
dec
or
xor
sub
fisttps
in
cltd
xor
add
sbb
ficoml
hlt
inc
mov
pop
lods
push
cmp
cmp
jae
push
sbb
ret
shll
clc
add
loopne
andb
and
movsl
and
loope
push
xchg
mov
dec
fldl
jo
data16
push
jle
sbb
cmp
in
dec
add
icebp
sbbl
mov
push
cltd
push
cmpsb
jmp
mov
pop
pop
jae
mov
out
icebp
or
lods
push
cmp
into
sub
jl
push
adcb
outsl
repz
in
enter
dec
lret
add
iret
jle
stc
scas
pushf
popa
ret
jo
sbb
and
cmpl
loope
mov
mov
adc
repnz
fldt
push
addb
gs
and
mov
bound
adc
add
lret
sub
inc
inc
xchg
pop
mov
insb
into
data16
cmp
scas
jmp
loope
mov
iret
mov
push
pop
fwait
dec
ds
jle
jne
outsb
mov
inc
push
outsb
add
imul
leave
add
cmp
pusha
shrb
call
cmc
mov
sub
jg
nop
daa
sub
cmpsl
sbb
sub
ds
arpl
mov
or
ja
test
pop
rcrl
jns
sub
bound
pop
out
pop
rclb
adc
mov
pop
cmp
add
sub
pushf
pusha
inc
dec
ret
jae
pop
dec
cmp
jmp
sub
lock
fisttpll
movsb
cmp
cmp
adcl
mov
addb
mov
adc
jns
pop
sub
mov
dec
jle
mov
and
inc
add
mov
xor
stos
ss
ss
dec
mov
stos
lds
adc
movsl
mov
ficompl
cwtl
mov
and
mov
pop
scas
into
imul
sar
aad
dec
enter
add
cmp
sbb
ljmp
clc
jl
fucom
into
pop
clc
push
or
mov
and
pop
add
scas
dec
xor
ret
rcr
mov
dec
pop
xchg
cmpsb
and
adc
ret
scas
xchg
in
enter
dec
ljmp
pop
sahf
js
xchg
mov
sbb
cmp
orb
lock
outsb
loope
jle
ljmp
in
pusha
lcall
cmc
lret
movsl
inc
add
jecxz
aam
pop
in
push
inc
fadds
cwtl
leave
jno
fistps
mov
fsubrs
xchg
and
inc
cmp
inc
ret
sbb
cld
dec
cmpsb
push
aad
movb
push
push
jno
fsubs
dec
scas
add
pop
xor
ret
cli
sbbl
int
lahf
mov
mov
ja
rclb
or
adc
adc
adc
lret
movsl
xor
mov
dec
bound
dec
mov
dec
mov
mov
pop
add
in
les
inc
insl
stos
clc
pop
cmp
mov
mov
pop
insl
add
fcmovb
ret
test
push
insb
lret
shrb
ljmp
imul
aaa
xor
out
sbb
pop
dec
and
mov
push
dec
lret
xor
mov
test
pop
xchg
sahf
fists
enter
mov
inc
push
mov
or
icebp
cmpsl
out
and
sub
inc
lret
sub
jne
fidivs
cmpb
dec
xchg
adc
stc
testl
pop
hlt
mov
add
rcrl
cmpb
jmp
mov
push
or
dec
mov
stc
adc
jmp
xchg
je
xchg
leave
mov
push
jb
pop
ret
mov
sti
rclb
sub
mov
arpl
cmp
xchg
adc
mov
cmp
cmp
cmp
ds
xor
mov
jno
sbb
and
stos
hlt
mov
data16
aad
lcall
and
dec
es
push
outsl
xor
dec
call
repnz
push
sub
movsb
xor
fdivrs
and
movsl
and
inc
xchg
inc
pop
fsubrl
adc
add
jb
sub
addl
iret
mov
sbb
inc
jbe
popf
or
jae
cmp
inc
adc
and
iret
cmp
stos
mov
mov
addr16
and
xlat
push
push
or
mov
mov
sarl
mov
mov
push
add
enter
and
leave
dec
ds
nop
daa
cmp
mov
dec
cltd
xor
mov
jnp
popf
mov
adc
lcall
and
cmp
add
jl
rorb
add
jb
xor
xlat
repz
pop
adc
sub
mov
lcall
or
xchg
imul
lret
adc
add
jnp
pop
fidivl
fsubrs
pop
sti
xchg
rep
or
sbb
jmp
adc
mov
pusha
pop
ret
in
jne
ss
jl
lfence
daa
data16
lret
pop
lcall
movsb
sbb
xchg
stos
inc
repnz
dec
fs
xchg
sub
test
fcompl
mov
fisubl
lret
das
in
cmp
outsb
inc
ss
icebp
je
jb
data16
adc
sub
pusha
cmp
daa
or
push
or
cmpl
pop
scas
rcrb
pop
push
inc
insl
pop
ret
test
mov
loopne
ja
inc
sub
arpl
pop
inc
push
ljmp
test
iret
je
int3
psrad
mov
mov
mov
or
inc
pop
shrl
adc
pushf
test
push
sbb
push
jnp
fnsave
movsb
inc
mov
mov
cmpxchg
stos
inc
fsubl
jnp
les
jne
sbb
sbb
jbe
ja
ret
sbb
dec
dec
push
int3
icebp
or
dec
sbb
mov
push
push
aaa
mov
test
aas
shlb
xchg
cmp
aaa
rorl
outsb
repz
out
sti
and
add
lds
leave
xchg
lds
insb
lea
dec
mov
or
sub
pushf
mov
jge
fimull
push
add
xor
loop
push
sbb
popa
dec
js
addr16
outsl
hlt
pop
or
scas
test
lcall
jmp
pop
add
jecxz
xor
aad
xchg
adc
jns
fldcw
dec
mov
ja
out
add
and
loope
lret
movsl
sbb
jo
jb
bound
pushf
xor
dec
mov
cmpsl
jmp
mov
cmovp
jo
xor
mov
lret
mov
fidivs
ficompl
mov
js
mov
xor
dec
sarb
jnp
mov
xchg
dec
or
cli
icebp
aaa
push
je
hlt
xor
in
adc
cmp
dec
mov
add
or
scas
and
pop
repnz
pop
insl
mov
or
xlat
fdivrs
jl
in
pop
mov
adc
lret
stos
sbb
imul
push
hlt
stos
insl
cmpsb
das
into
sub
shlb
push
xchg
in
dec
fwait
sahf
scas
jg
dec
pushf
and
je
std
out
mov
gs
lcall
push
or
mov
insb
mov
repz
push
sub
into
stos
add
lods
ficomps
inc
pop
mov
negb
sarl
loope
pushl
pop
xchg
jnp
fucomi
jge
movsl
icebp
and
push
or
lods
jbe
mov
shrl
cmpsl
inc
sbb
addr16
pop
cmp
mov
dec
mov
ror
adc
push
mov
push
mov
roll
jae
iret
sub
call
cmp
mov
pushf
rcr
inc
cs
and
stc
mov
loope
dec
pop
lahf
sub
xchg
or
into
aas
add
leave
cmp
xor
mov
mov
xor
insb
data16
jmp
aas
dec
push
out
mov
scas
popa
hlt
xor
popa
adc
jne
in
arpl
lods
es
lods
add
inc
xor
jmp
push
jnp
push
and
xor
mov
call
gs
imul
xchg
lahf
fildl
sarb
push
into
fisubs
sub
lahf
add
jo
dec
mov
orb
movsl
jb
xlat
mull
jbe
daa
or
mov
iret
and
xchg
les
enter
cltd
out
and
dec
sbb
adc
cmp
pop
lods
lahf
lahf
ss
daa
packssdw
cmp
add
cmpsl
mov
pop
pop
add
xchg
jb
ds
cmp
dec
rcl
les
push
subb
popf
sysexit
fsubs
mov
sub
mov
and
push
mov
andb
out
sub
mov
scas
jno
sub
mov
fwait
push
pop
ljmp
pushf
dec
push
push
mov
adc
inc
sub
cmp
mov
test
push
pop
cmc
mov
and
bound
push
flds
sub
inc
sbb
jle
push
mov
cmp
pop
and
mov
push
stos
inc
sub
enter
stos
cmp
and
mov
cli
mov
sarb
mov
push
test
or
scas
mov
pop
arpl
movsb
dec
ret
and
dec
adc
push
das
adc
sbb
mov
cs
pushf
gs
pop
cmp
dec
leave
adc
mov
pop
jle
xor
jp
fildl
xor
movsl
cmp
outsb
sahf
dec
cmp
adc
jp
dec
jge
mov
sub
test
imul
xchg
lods
in
sbb
cmp
outsb
out
mov
push
popf
jmp
pop
or
dec
ficoml
out
sub
adc
push
loope
imul
lcall
sti
subl
mov
mov
stos
testl
stc
and
jns
xchg
and
xchg
dec
jno
pushf
cli
xchg
and
adc
lock
jl
icebp
in
mov
stc
out
mulb
enter
jg
cwtl
dec
out
push
aaa
xorb
xor
cmpsb
loope
ret
or
jns
cmp
pop
jp
mov
sbb
cli
adc
or
xor
loopne
xchg
testb
sbb
andb
cmp
sbb
clc
das
aad
pop
test
adc
sbb
frstor
or
lods
mov
jp
cltd
jae
cmp
pop
cli
pusha
pop
fisttps
mov
out
sub
and
adc
pop
xchg
mov
dec
xchg
data16
pusha
jb
jne
movsl
sbb
stos
sub
bndstx
andl
je
mov
jae
add
into
jns
cwtl
nop
push
out
mov
mov
sbb
cmpsl
icebp
sbb
fwait
in
mov
adc
inc
push
and
inc
jns
xlat
xchg
test
inc
lret
add
imul
jbe
loope
xlat
mov
test
leave
push
movsl
fidivs
mov
ljmp
mov
nop
pop
orb
test
dec
rcll
fisttpll
cmc
aad
mov
loopne
out
icebp
add
arpl
lods
and
lock
mov
dec
je
icebp
xor
stos
cltd
push
pop
outsb
mov
jb
inc
mov
test
int
sub
push
sbb
push
add
jb
push
jle
out
mul
lds
push
sub
and
loopne
pop
jb
cmpb
mov
pop
es
pop
sahf
jno
stc
xchg
lods
lret
mov
pop
and
rcrl
or
test
lcall
inc
sbb
and
pusha
mov
pop
sbb
stc
shlb
push
ds
pushf
mov
add
adc
inc
pop
push
jmp
je
test
add
enter
inc
dec
mov
lahf
xchg
fimuls
int
roll
fsubrs
xchg
cmpsl
std
lahf
adc
mov
nop
subl
rolb
jl
pop
jge
lea
mov
mov
insb
xchg
cmp
xor
dec
xchg
imul
inc
xor
pushf
push
xchg
mov
mov
sarb
mov
mov
or
loop
or
mov
mov
mov
leave
mov
mov
jbe
aam
mov
sub
sbb
mov
and
js
repz
movsl
pop
aad
and
cmp
sub
hlt
sbb
adc
ret
repnz
ljmp
daa
and
xchg
test
pop
imulb
mov
or
stc
nop
std
repnz
mov
shrd
ret
mov
hlt
add
xor
mov
rorb
xor
sub
mov
rclb
mov
repz
sub
fucomp
pop
sub
incl
pop
cmp
decb
mov
hlt
mull
xchg
sbb
pop
loop
mov
dec
fcomps
mov
jae
xchg
int
jp
inc
out
sbb
add
pop
mov
or
jo
mov
nop
mov
pop
ret
jae
mov
popf
ljmp
sub
push
cmp
ljmp
adcl
jno
popa
mov
fcompl
fisttps
or
inc
dec
shrl
ja
and
test
rcl
rolb
shll
rorb
mov
xchg
cltd
out
mov
mov
jo
pop
push
jb
sub
movsb
xchg
enter
inc
mov
outsl
add
jae
adc
fcmovnu
in
pop
in
xchg
out
das
ret
add
gs
fildll
pop
ret
bound
inc
lds
mov
mov
adc
test
cmp
stos
inc
call
test
adc
jp
push
sbb
sbb
mov
pop
or
xchg
lret
sub
pop
mov
jge
sub
pop
pop
rol
mov
outsl
fs
shrb
rol
adc
je
push
xlat
mov
out
push
outsl
mov
jb
fwait
sub
xor
repnz
jecxz
cmc
jne
daa
xchg
mov
rol
fisubs
jg
lods
rclb
fwait
icebp
pushf
out
adcl
push
popf
mov
push
and
or
lock
dec
cmpsl
out
add
dec
das
add
mov
ret
pop
xor
ret
mov
dec
repz
push
call
sub
push
repz
mov
addr16
jp
push
imul
in
rcll
sub
inc
fnstenv
jp
out
pop
xor
lret
mov
adc
jg
fwait
test
shlb
fmulp
pop
ret
fiaddl
jmp
cmp
pop
xor
fs
adc
inc
adc
inc
in
shrb
inc
out
jb
lock
or
mov
or
stos
cmp
add
xchg
lret
or
aaa
mov
sbb
pop
pop
sbbb
adc
add
gs
pushf
sbb
lock
mov
mov
mov
dec
std
sub
das
xor
add
xor
loopne
or
inc
outsb
and
fstpt
jge
xor
daa
mov
fnstenv
ljmp
jle
xchg
add
and
std
popf
stc
fildll
stos
xchg
jne
dec
xor
aad
fs
pop
and
pop
and
fwait
and
mov
cmc
cmc
testb
dec
subl
jge
icebp
cmp
out
les
push
inc
or
add
pop
cmp
shrb
cs
fwait
aam
movsl
and
add
inc
push
out
xchg
fnstenv
mov
int
xchg
pop
mov
mov
push
xchg
mov
adc
adc
out
add
clc
push
and
imul
out
leave
lods
lcall
movsl
mov
addl
or
jns
movsb
stc
pop
outsb
add
jge
aaa
adc
leave
mov
rol
xchg
mov
insl
clc
inc
lods
push
cmc
mov
fcoms
lea
and
scas
cld
xchg
test
pop
mov
add
sub
dec
sub
xchg
fidivrs
lahf
loop
xchg
sahf
cmp
aaa
jle
inc
rcr
cmp
pop
out
iret
jbe
outsl
out
lds
iret
mov
fdiv
out
rcl
lahf
cmpsl
jle
jb
insl
int3
push
adc
popf
mov
and
pushf
sub
mov
add
aas
mov
jecxz
dec
xchg
mov
in
cli
push
xor
movsl
ficoml
xor
fistpll
ds
hlt
jne
dec
lahf
icebp
mov
mov
mov
cmp
xchg
aaa
int
fwait
pop
adc
push
push
fcomp
jmp
push
out
mov
cltd
lods
nop
loop
sub
mov
sbb
mov
mov
pop
aaa
inc
sahf
jmp
push
pushf
pusha
aam
lods
mov
ljmp
rorl
push
loopne
mov
out
inc
and
cli
in
shll
dec
aaa
sub
jbe
pop
out
and
cld
jl
push
and
iret
inc
loope
mov
mov
pop
mov
mov
xchg
sub
test
cld
daa
std
cmp
inc
push
jp
mov
sbb
in
dec
in
jns
cld
mov
aad
push
mov
sbb
movsb
xchg
sub
stc
mov
cmp
fidivl
out
cltd
pop
int3
sti
stc
sahf
mov
push
popf
sub
xor
pop
jns
xor
push
mov
dec
repnz
out
xchg
ja
subl
pushf
sbb
mov
lods
or
mov
push
dec
dec
mov
test
dec
adcb
call
mov
xchg
enter
lahf
cmp
popa
jp
cwtl
push
inc
or
jnp
bound
popf
dec
xor
xor
inc
xchg
enter
loopne
or
mov
mov
jl
xchg
jle
stos
mov
es
out
jns
fs
roll
outsb
pusha
cs
dec
xchg
xlat
sub
inc
loope
mov
test
mov
fxch
testl
add
dec
in
test
or
aas
packuswb
push
cltd
jbe
add
leave
pop
xchg
inc
and
mov
or
sbb
imul
sbb
icebp
in
inc
dec
xor
arpl
sbb
in
jbe
dec
push
int
mov
shlb
xchg
mov
loope
movsl
aam
lahf
adc
inc
add
push
xor
mov
xlat
or
lret
clc
loopne
shr
push
and
mov
stc
jne
push
mov
es
inc
fdivr
hlt
dec
jl
shrb
cmp
xchg
mov
aas
mov
arpl
jl
add
test
ljmp
jmp
mov
addr16
leave
pop
scas
mov
pop
or
repnz
nop
daa
mov
dec
imull
jmp
outsl
xor
std
push
pop
add
enter
ja
push
test
das
lds
int
mov
lret
cmp
push
fcomip
mov
sub
pop
insb
jne
or
inc
dec
mov
call
notl
pushf
jae
cld
arpl
xchg
push
adc
cmpsl
in
int3
push
add
pusha
add
jecxz
popa
cmp
jecxz
aas
adc
sahf
inc
test
pop
xchg
int3
inc
add
test
sahf
fcoml
jno
mov
pop
pop
mov
adc
mov
xchg
rol
fidivrl
pop
jae
jns
mov
movsl
pop
imul
push
scas
addr16
lret
xor
lcall
jne
pop
push
push
sbb
push
lret
das
cli
jle
xchg
mov
dec
fistl
out
xor
call
out
xchg
add
outsb
sub
sbbl
les
lea
adc
dec
push
lret
push
jae
dec
stos
aad
and
out
sbb
idivl
hlt
sub
cmc
jecxz
mov
mov
cmp
stc
scas
test
sub
xor
imul
repnz
stos
or
adc
loop
fs
lods
jmp
mov
inc
adcl
sarl
hlt
lds
out
ret
enter
adc
or
nop
fsubrl
rorb
mov
subb
adc
or
lcall
push
inc
mov
dec
xlat
cmp
jle
je
aam
scas
mov
fs
vpmullw
lea
les
addr16
pusha
dec
add
ds
pop
xchg
jns
dec
lds
push
repz
pop
in
xchg
popl
or
or
adcl
insl
fidivrl
and
mov
mov
outsl
loop
jp
nop
cmpsl
int
ud0
mov
sub
or
dec
imull
mov
cmc
dec
cli
sub
lods
sti
repz
bound
dec
iret
int3
loopne
sbb
mov
clc
mov
xchg
add
xlat
std
xchg
or
push
jmp
pop
jns
push
outsb
test
jmp
out
sub
and
xlat
movsb
or
fnstsw
sbb
es
lods
bound
imulb
add
shr
shr
or
push
js
inc
inc
push
cmp
loope
or
test
ret
mov
mov
jno
cld
and
addr16
cmpsb
xchg
out
lahf
jb
lahf
sub
mov
inc
ja
xchg
mov
and
data16
xor
pop
mov
pop
pop
add
dec
pop
xrelease
adc
cmp
or
push
add
cmpsl
xchg
and
fisubl
add
movsb
stc
out
and
and
push
pop
sar
test
cmpsb
ja
lcall
push
mov
adc
lds
jge
jecxz
dec
dec
scas
pop
adc
dec
inc
cmp
pop
cmp
rolb
imul
cltd
add
les
iret
imul
sub
mov
test
jnp
cmp
mov
test
mov
nop
stos
xor
dec
mov
repnz
adc
push
movsl
cmp
faddl
fildl
pop
add
in
shlb
jl
push
lret
xor
add
and
pop
mov
inc
ds
jg
in
mov
stc
cmp
lds
lret
inc
clc
mov
or
xor
inc
pop
arpl
fcoml
aas
pop
fsubrs
xor
mov
jle
mov
test
adc
jb
and
shlb
sbb
sub
and
nop
push
mov
aad
pop
mov
cmpsl
aad
icebp
mov
add
sbb
in
in
scas
mov
lcall
add
add
ja
dec
and
popf
xor
add
jo
add
andb
test
add
daa
sti
adc
xor
push
scas
mov
sbb
sbbl
les
cmp
and
push
mov
adc
cwtl
mov
outsb
mov
add
sarl
jmp
mov
cmp
mov
shlb
push
dec
fbstp
shll
add
inc
xchg
inc
xchg
sti
jp
rorl
or
pusha
rcl
jle
and
ret
cmc
aas
xchg
mov
add
push
je
or
mov
jl
les
xor
sahf
xor
and
enter
out
bound
ss
icebp
adc
es
loopne
out
adc
mov
jl
jge
std
fucomp
jl
cli
xchg
sub
push
in
push
and
fadd
cmc
jae
out
mov
mov
testb
es
push
pop
addr16
fldenv
xor
jle
mov
pop
loop
scas
dec
lds
sarb
icebp
cli
pusha
jmp
std
fs
mov
loopne
mov
xchg
and
bound
aad
hlt
dec
pop
mov
data16
adc
jb
xchg
push
icebp
cwtl
das
arpl
mov
mov
enter
sub
ja
in
or
call
sti
jnp
adc
jg
mov
xor
xchg
jns
mov
inc
cli
in
jp
xchg
lods
or
mov
mov
fisubrs
loopne
lret
adc
fisubrs
cld
mov
dec
xor
jbe
test
xorl
pop
jmp
xchg
jo
hlt
add
dec
pop
xor
and
sbb
cltd
out
outsl
test
in
insl
jg
mov
mov
dec
push
stos
and
xor
add
out
inc
int
lods
xchg
push
and
mov
ljmp
arpl
scas
cmp
imul
fcomip
xor
mov
lock
inc
fildll
push
fidivl
push
pop
loop
sbb
lret
mov
sub
sarl
mov
jbe
fidivl
sub
outsb
jmp
inc
out
pop
cli
mov
xor
pop
mov
fs
xchg
ljmp
mov
in
test
pop
inc
push
dec
idiv
sbb
fwait
jl
pop
divl
sub
arpl
push
xchg
sub
cli
xchg
xorb
cmp
jo
pop
xor
cmp
pop
insl
inc
loopne
pushf
xor
cmp
mov
xchg
xchg
add
lds
movsl
dec
cwtl
and
rcrl
mov
std
cltd
xlat
stos
stc
jo
aaa
push
mov
add
repz
sbb
roll
adc
mov
negl
daa
jb
stos
push
xchg
int3
arpl
push
mov
mov
push
sbb
push
xchg
jecxz
arpl
pop
push
inc
sbb
call
mov
dec
loop
mov
jns
mov
jg
in
mov
cmpsl
cmp
ljmp
mov
dec
or
jbe
aad
jl
or
inc
inc
pop
jbe
push
data16
jl
dec
leave
cwtl
movsb
mov
int3
xor
pop
sub
jmp
xchg
pop
pop
mov
xchg
add
movsb
lods
int3
rorb
cld
or
lds
and
pop
push
ja
ja
icebp
loop
and
fucomi
imul
push
aad
and
neg
jno
add
jl
cmp
call
in
test
pop
loop
ficomps
inc
stos
or
cmpsl
mov
mov
fcompl
and
fidivl
aam
mov
push
sbb
inc
fisubl
cmp
imul
ficoml
sarb
jnp
mov
or
dec
aam
outsl
fistl
mov
cmpsl
insb
jle
pushf
sub
mov
mov
cli
dec
xchg
mov
daa
es
push
pop
xchg
icebp
xchg
and
add
addb
fistpl
xor
mov
outsb
lret
in
cmp
push
sarl
add
movntss
pop
add
sarl
push
jmp
ss
and
pop
out
mov
jae
cwtl
dec
aaa
cli
or
fildl
add
test
pop
mov
mov
push
loopne
xchg
and
cs
and
mov
push
in
fidivl
xor
sbb
arpl
adc
ljmp
jle
lret
pop
push
jp
inc
mov
into
outsl
xor
jno
mov
add
sub
movsl
cmp
dec
push
jbe
xchg
ds
jge
call
fildll
stos
adc
adc
fstpt
jne
repz
data16
jnp
test
loope
pop
mov
rolb
jns
das
mov
icebp
sbb
repnz
lea
sbb
xor
dec
aas
jb
xor
loope
pop
inc
mov
fcmovnb
inc
add
lock
out
cld
nop
or
lods
jae
mov
and
push
rorl
push
cltd
sbb
cltd
lods
and
push
leave
mov
aas
or
cmp
mov
sbb
mov
cmc
sbbb
mov
xor
repnz
addr16
in
sub
lcall
lret
and
testb
mov
xchg
xchg
repz
pop
mov
and
xchg
std
cmc
push
jle
mov
mov
xor
fnstenv
sbb
mov
cmpsl
mov
jge
push
stos
jo
and
inc
or
into
xor
adc
dec
jne
call
into
pop
popf
cmpsb
into
jge
or
adc
cld
repnz
mov
sub
push
inc
fisubrl
xlat
repz
pop
cmp
dec
xchg
pop
in
push
and
mov
in
imul
ret
cmp
jmp
sbb
adc
sbb
xchg
mov
lea
ljmp
fisubs
mov
pusha
fcmovu
nop
dec
sarb
sub
ficompl
pop
xor
test
inc
xor
push
or
jb
sti
cmpsl
nopl
mov
cmpb
xor
xor
add
push
fcoml
arpl
aad
dec
or
movsl
dec
sub
sub
push
fimuls
icebp
mov
inc
cltd
jb
mov
movsb
cmp
imul
pop
or
outsb
int3
jge
inc
shr
xor
shl
mov
ror
mov
pop
aad
adc
and
lods
push
push
adc
icebp
and
aam
loopne
push
nop
pop
lods
inc
push
pop
mov
sub
or
insl
fistps
pop
dec
dec
lock
mov
jecxz
add
pushf
pop
mov
add
adc
shrb
sbb
push
aas
dec
lods
int3
sbb
push
into
ss
add
mov
dec
xor
xlat
mov
shrb
pop
cmp
xor
das
aaa
out
psrad
dec
rorb
and
push
insb
inc
lret
mov
jmp
in
enter
inc
popa
rorb
add
js
pop
lahf
mov
mov
adc
sub
ret
push
mov
lcall
cli
mov
movsl
in
xlat
test
pop
bound
or
mov
repz
loope
push
mov
xchg
sbb
ud1
pop
sub
sbb
cmpb
sbb
mov
mov
dec
dec
lock
test
pop
xor
cmp
dec
inc
jg
into
mov
mov
jmp
nop
pusha
mov
cltd
rolb
or
insb
add
mov
or
and
add
pop
xor
daa
in
rorl
inc
mov
test
aas
pop
roll
push
inc
arpl
sahf
popf
push
into
xchg
xor
rcr
add
push
out
aas
sbb
inc
icebp
xchg
ds
sub
cmp
dec
dec
int3
mov
add
imul
mov
pop
inc
jne
jb
inc
fidivrs
pusha
pop
rcll
xor
icebp
cmpb
push
dec
je
test
push
mov
fcoml
rclb
test
mov
mov
add
test
ja
aaa
jmp
enter
mov
cmc
sbb
jecxz
cltd
adc
add
xor
dec
nop
push
add
ret
sbb
lods
inc
and
shr
xchg
lret
bound
push
data16
jo
pop
mov
push
mov
dec
loope
cld
popa
push
xchg
sbb
mov
jecxz
push
xchg
push
jnp
add
ret
aad
inc
and
fsubrs
push
adc
pop
shll
fisttpl
in
xchg
nop
fbstp
xor
add
incl
stos
inc
ds
out
pop
leave
sub
and
sub
mov
fwait
dec
push
or
pop
xlat
xchg
mov
jbe
ja
mov
mov
fidivrs
iret
and
mov
sub
in
xchg
pop
mov
fwait
out
or
in
scas
inc
inc
cwtl
cmp
xor
int
je
sarl
mov
sarb
cmp
sahf
cmpsl
lea
dec
adc
and
shl
pop
xor
sbb
mov
mov
inc
mov
out
adc
rcrl
xor
mov
ds
or
das
sbb
popa
sub
sbbl
repnz
sbb
xlat
push
add
lods
popf
push
push
lahf
push
int
push
sub
add
sti
add
mov
inc
jecxz
ret
sub
and
jne
cmp
ja
jns
dec
jns
cld
dec
jns
imul
in
in
loop
cmc
cmp
or
push
arpl
fstpl
shl
rorl
inc
fs
dec
pushf
xchg
aas
mov
jb
ret
out
inc
jp
mov
or
push
out
inc
in
sub
xor
decl
popa
mov
or
out
jb
push
jne
lahf
and
inc
sub
push
sbb
ss
inc
mov
iret
xor
xchg
leave
aam
cmp
pop
jmp
clc
jnp
ss
fwait
and
outsb
dec
mov
push
outsl
dec
mov
cmp
aaa
dec
push
jle
pop
daa
inc
xlat
out
add
sub
mov
mov
push
jl
imul
lcall
and
cmp
push
bound
inc
loope
or
out
scas
and
in
jle
movsb
mov
pop
pusha
cmc
mov
push
nop
mov
addr16
mov
data16
cmp
aaa
icebp
add
xchg
outsl
xor
in
jmp
movsl
add
push
and
decb
jo
inc
mov
push
test
jmp
xchg
pop
test
jg
adc
popf
repz
jg
sub
cmpb
mov
dec
inc
add
popa
out
shll
mov
in
imulb
mov
jns
clc
jae
adc
pop
shrd
insl
adc
clc
sahf
lret
add
mov
push
js
mov
mov
dec
xor
sbb
or
xor
sahf
test
mov
mov
mov
sbb
adc
loope
cld
out
jb
in
stos
push
imul
fidivl
xchg
push
mov
adc
jae
dec
in
mov
jmp
shlb
stc
dec
cmp
dec
lods
pop
aad
or
ret
and
icebp
push
pop
das
pop
adc
cmc
sbb
mov
dec
pop
mov
or
icebp
add
jl
lret
mov
iret
sbb
jle
push
daa
outsl
repnz
lret
and
fs
adc
movsl
sub
cltd
xchg
sub
jne
mov
insb
scas
std
fcmovb
pop
push
lahf
adc
and
scas
in
lock
xor
pop
shl
inc
lea
mov
andl
sbb
mov
and
jb
aaa
inc
sbbb
dec
add
pop
push
push
lds
pop
ljmp
push
in
push
and
in
xchg
hlt
pushf
xor
mov
enter
montmul
cmpsb
inc
std
dec
mov
cmp
xchg
mov
pop
jmp
mov
cmp
dec
inc
in
or
xor
fnstenv
insb
lea
pop
pop
and
sub
xor
incl
pusha
test
gs
ja
inc
dec
mov
stos
jbe
push
aaa
stos
xor
add
test
aas
add
pop
push
cmp
scas
inc
xor
xchg
push
add
lcall
and
push
cmp
testl
xor
in
xor
das
cmp
push
mov
sub
pop
add
adc
and
inc
rclb
add
in
pop
fwait
inc
int3
pop
inc
xor
ja
inc
mov
std
xchg
lods
ret
aam
mov
or
or
xor
push
subb
hlt
or
shlb
popf
cmpsl
push
mov
outsl
ja
sub
cmpl
into
inc
xor
sub
popa
pop
xor
lds
ret
repz
rolb
jp
push
pop
or
mov
lret
imul
sbb
mov
mov
scas
lahf
inc
loope
dec
pop
in
or
xor
mov
nop
mov
push
jmp
movsl
loopne
cmp
jg
aad
add
mov
movb
data16
jge
insb
mov
out
xor
pop
push
xor
push
arpl
shrb
out
nop
push
mov
test
pop
sahf
sahf
pop
imul
mov
jns
and
dec
pop
inc
in
push
cmp
jg
and
cmpsb
popf
cmc
xchg
add
je
add
out
ds
into
outsl
inc
ret
sub
sub
mov
lods
adc
dec
sar
loop
cltd
xor
sbb
jns
cmp
xchg
insl
adc
insb
mov
mov
push
out
mov
loope
or
add
sub
or
imul
outsb
loope
out
cmpsl
fimuls
mov
fsubrl
push
push
addl
ja
out
aam
pop
fisubl
push
mov
lods
lods
bound
inc
or
xchg
outsl
loop
aaa
xlat
inc
lcall
push
lods
jae,pt
inc
movsb
ds
adc
sub
mov
jb
and
dec
jae
data16
pushl
push
ror
stos
imul
sbb
or
aad
jecxz
or
sub
imul
lea
mov
add
dec
adc
xchg
lods
or
mov
mov
rcl
push
lods
imull
repz
and
out
add
in
mov
outsb
rorb
lods
pop
imul
xor
lcall
shl
mov
mov
cli
push
cmpl
fistps
cmp
rcll
mov
mov
jle
int3
gs
jmp
aam
pop
in
cld
jge
pop
push
pop
std
lret
testb
popf
dec
jo
jp
xchg
pop
push
push
jae
cmc
xchg
pop
adc
push
mov
dec
mov
push
xchg
cld
incb
mov
jb
daa
jle
xchg
xor
sbb
push
sub
push
xchg
outsl
stos
jle
nop
sbb
inc
loope
inc
mov
push
inc
pushf
jge
cmp
roll
pop
mov
call
cmp
lret
icebp
and
mov
mov
mov
ret
push
test
aad
adc
fsts
push
or
stos
push
test
popf
fidivs
jno
mov
cld
mov
aam
hlt
aad
lahf
and
and
and
xchg
out
xorl
andb
push
orb
jle
jae
mov
clc
popf
fsubr
into
sbb
xchg
sbb
pop
and
ljmp
test
es
pop
xor
jne
adc
jmp
cltd
jno
jbe
ficoms
lock
out
cmc
adc
test
out
pusha
in
test
pop
push
jmp
pop
aas
and
dec
stos
cmpsl
push
xchg
mov
dec
cmp
clc
test
sbb
add
pop
dec
pop
ret
repz
sub
aam
jg
lea
addb
pop
repz
out
mov
rcl
fdivl
insb
push
add
insl
stc
xchg
mov
add
int
mov
ret
push
repnz
mov
lret
xor
pushf
sub
or
cmp
mov
pop
popf
cwtl
mov
add
xor
lret
xchg
test
jge
add
shll
aaa
std
xor
fnstenv
lret
test
mov
stc
leave
jmp
hlt
faddp
push
xchg
jb
aas
cmpsl
fisubrs
pop
punpcklbw
aaa
xchg
mov
lds
add
je
fwait
out
arpl
shll
idivb
lods
xchg
xchg
jle
sarl
jns
xchg
rcrb
dec
sbb
mov
push
lods
rclb
outsl
push
or
inc
stos
dec
fnsave
repnz
xchg
cld
pushf
mov
push
add
jnp
and
loopne
mov
sub
mov
xor
arpl
pop
lds
push
cli
fstps
adc
stos
in
scas
repnz
jb
dec
dec
jns
test
leave
jo
ds
roll
das
mov
sbb
push
sahf
dec
sbb
shll
call
loope
mov
or
push
fcmovbe
mov
sbb
lret
pop
xchg
aam
mov
movsb
dec
js
add
ret
dec
rcrb
aas
popa
clc
push
xchg
sub
jg
scas
cmp
jle
iret
mov
jl
or
add
cmp
xlat
scas
cld
repnz
mov
fcmove
fnstcw
shl
rcrl
movsl
inc
data16
out
ret
adc
dec
or
inc
orb
testl
add
mov
fsubrl
dec
push
mov
rol
ss
or
aam
inc
lahf
push
xchg
adc
rdtsc
gs
fcoms
add
push
mov
xchg
add
jno
aad
rcrl
and
pusha
mov
or
aad
scas
outsb
mov
pushf
lods
call
mov
mov
lret
mov
shrb
lods
and
shl
inc
inc
xor
scas
test
rorb
cmp
or
cmp
dec
sub
out
test
inc
inc
stc
cmp
jecxz
push
movsl
cmp
cmp
jae
xor
repnz
dec
loope
mov
mov
push
lods
insl
cmc
out
lret
lret
pop
xlat
mov
dec
pop
pop
jne
cmpsl
out
pop
addr16
cltd
jl
xchg
mov
arpl
sbb
and
or
xor
shlb
sar
xchg
add
cmc
insl
bound
arpl
pop
jl,pt
ret
popf
dec
push
mov
sbb
loope
or
mov
movsb
test
aad
cmp
cmc
rcrl
pusha
fistpl
and
rclb
aad
jl
lret
pop
mull
push
jb
jb
pop
sub
jecxz
aam
jnp
xchg
adc
xor
cmpeqps
ds
xor
repz
mull
xchg
mov
fisttpl
lea
mov
ret
pop
mov
sbb
clc
jae
notl
out
xchg
cli
pushf
dec
notl
mov
jmp
pop
repz
xchg
xchg
loopne
lods
cmc
jae
out
movsb
push
ss
inc
mov
push
lods
push
lcall
nop
jnp
or
loop
push
sahf
in
add
mov
pusha
mov
leave
addl
ret
or
mov
lahf
push
jle
mov
xor
int
dec
sti
test
out
loopne
call
aaa
cmp
rcll
jge
je
dec
mov
mov
loopne
add
push
mov
mov
sbbl
in
fbstp
popa
cltd
and
xchg
std
xchg
add
mov
sahf
push
fdivs
hlt
lea
jb
jne
lods
sub
xor
repz
xor
aam
ficomps
adc
sbb
repz
pop
mov
movsl
jmp
sub
hlt
xchg
xchg
adc
jle
out
jbe
pop
xor
jge
cmp
jmp
testl
aam
cmpsl
scas
shrl
xor
orl
movsb
out
push
adc
mov
enter
push
popf
jge
out
in
xchg
inc
lock
les
inc
cwtl
rcrb
mov
movsb
ss
push
data16
test
fsubl
dec
inc
mov
stos
jae
cwtl
pop
iret
out
jns
arpl
cs
dec
add
dec
in
push
push
movsl
ja
imul
sbb
pusha
xchg
sbb
dec
sbbl
xchg
test
sbb
mov
or
inc
movsb
das
icebp
std
test
cmp
sbbl
je
xchg
cs
mov
int
iret
data16
push
clc
push
dec
je
stc
pop
lcall
mov
xor
mov
mov
or
ss
out
jbe
test
push
sub
pop
fs
movsl
aas
jb
enter
jl
popa
js
jbe
jge
or
jo
pushf
ficomps
jno
in
rclb
inc
ficoms
out
cld
fdivs
push
cmp
in
mov
lds
dec
data16
xchg
cmp
cmpsb
sbb
in
or
push
or
inc
push
xchg
int
aas
out
xchg
and
mov
mov
sbb
sub
pop
in
jae
pop
cli
sbb
or
dec
jl
mov
jl
pop
mov
adc
sbb
inc
sub
in
pushl
push
daa
rclb
inc
lods
repz
inc
push
sbb
in
ja
pop
mov
cwtl
xor
cwtl
jp
stos
jb
jns
loop
data16
out
popf
adc
imul
iret
xchg
mov
dec
shl
je
xor
and
mov
push
adc
or
out
jle
lret
jle
cmp
mov
cltd
aad
out
fldt
sub
fildl
xchg
out
js
je
out
iret
dec
movsl
jle
add
shlb
jns
and
jmp
lods
inc
ljmp
xchg
adc
sub
or
paddsw
xchg
push
xor
jmp
dec
in
and
popa
addr16
xorb
jecxz
sub
out
mov
mov
int3
insl
jne
adc
sti
pop
int
arpl
push
aaa
adc
imul
imul
sbb
xchg
das
jb
mov
aaa
add
pop
or
adc
mov
adc
lds
js
adc
and
add
jne
ds
ficoms
mov
hlt
aam
inc
pusha
ljmp
fnstsw
fstl
orb
mov
gs
mov
and
ficompl
xor
out
mov
add
xor
dec
push
jae
add
xchg
popa
push
pop
adc
and
add
aad
jno
fbstp
pop
inc
ficomps
lret
inc
lret
jae
rorl
sub
mov
loopne
sbb
xchg
sbb
adc
sti
fwait
addr16
lods
inc
xor
popa
jmp
mov
xchg
mov
and
mov
adc
fwait
rolw
test
ja
adc
sti
adc
xor
push
or
mov
pop
adc
into
inc
aas
test
mov
mov
movsb
sbb
jmp
sbb
ret
cmp
pop
mov
shrl
xor
aam
mov
sti
dec
sarl
jmp
scas
ljmp
adc
test
sahf
shr
stc
mov
mov
mov
dec
call
shrl
push
sub
fstl
flds
dec
inc
cltd
mov
xor
fnstsw
fidivrl
cmp
repnz
cmpsl
mov
push
mov
push
adc
push
lret
shrl
pop
outsl
adc
push
orb
aas
ja
lods
lea
add
pusha
mov
jae
das
jno
jg
cld
nop
sbb
nop
mov
test
ret
jle
or
pop
lahf
push
jmp
or
inc
fstl
fs
mov
push
or
gs
stos
xchg
inc
sarl
push
in
fwait
adcb
jl
mov
mov
xor
cmp
xor
pop
xorl
pop
mov
mov
add
movsl
xchg
lods
dec
jne
movsl
sti
dec
lds
pop
ret
rcl
sub
sub
pop
cmp
sub
and
cwtl
in
sti
test
push
add
std
shll
mov
and
insl
mov
ret
sbb
daa
inc
sarl
or
popf
xor
xchg
insl
mov
jne
dec
pushf
cli
loop
mov
dec
mov
push
or
aaa
mov
iret
ret
xchg
add
or
stos
pop
mov
or
lock
fidivs
push
into
roll
mov
fldl
and
add
mov
idiv
gs
inc
sbb
jb
orb
sub
and
add
bound
mov
cltd
mov
adc
jmp
cmp
jmp
or
int3
xorl
mov
fisttps
push
rdtsc
lods
and
pusha
adc
sub
lods
mov
leave
mov
cmp
fisubrl
sbbb
subb
mov
sbb
cmp
xchg
or
mov
mov
inc
shlb
in
cltd
or
xchg
add
pusha
jno
mov
movsb
xchg
andb
adc
inc
lock
sub
repnz
push
insl
push
adc
nop
cwtl
iret
sbb
pop
js
shrb
adc
xchg
push
adcb
lods
hlt
inc
fs
inc
rcll
sub
and
or
repnz
mov
pop
fldenv
sub
mov
movsl
dec
pusha
out
mov
imul
popa
push
inc
rolb
lods
jg
shll
jl
loop
in
js
mov
call
cmp
cmp
or
push
popa
fsubrs
or
int3
jg
mov
loop
cmp
or
push
and
jno
jbe
fsubs
shlb
lret
push
out
out
push
and
or
imul
adc
or
pop
loop
ja
mov
xor
mov
fsubr
jns
in
mov
mov
inc
aad
dec
adc
in
pop
cmp
xchg
mov
andb
cmp
pop
jno
stos
jle
adc
fwait
mov
dec
iret
jnp
adc
repnz
xchg
cs
sbb
scas
push
lods
push
jbe
idivl
rcrl
inc
aad
and
lea
test
call
imul
sub
shlb
jmp
lods
mov
lahf
ds
shl
ljmp
and
xlat
push
push
inc
cmc
mov
js
out
das
push
movsl
mov
cmpl
scas
sbbl
in
adc
sub
dec
sub
ds
mov
mov
jbe
push
call
loope
ljmp
pop
inc
hlt
mov
xchg
popf
cmc
outsb
or
dec
jmp
jb
sahf
cwtl
fisttps
imul
lea
clc
push
stc
cmp
xchg
push
pop
aam
dec
push
cmp
xchg
mov
movsb
jecxz
aad
mov
movsl
dec
mov
popa
mov
sub
mov
add
push
and
fists
dec
in
arpl
xchg
loopne
lock
add
mov
int
out
dec
mov
andl
test
imul
pop
lahf
sbb
xlat
insb
sub
sub
lds
pop
sbb
insl
ret
pop
add
sbb
lcall
stc
and
aad
inc
push
cmp
mov
jnp
sahf
das
add
lcall
mov
movsb
insl
fxtract
sahf
mov
push
inc
stos
pop
out
dec
addr16
int
lods
repnz
xchg
add
insb
sarl
imul
sbb
int3
pop
cli
gs
sub
or
in
add
mov
jmp
aaa
cmpsb
push
cmp
mov
cmpsl
mov
xor
adc
adc
pop
xlat
or
sbb
jb
xchg
in
and
aam
imul
and
mov
leave
jns
ss
and
fldl
hlt
add
rcrb
sbb
insb
sub
jmp
js
mov
jp
ret
sbb
sbb
inc
jne
data16
das
leave
cmp
add
imul
pop
inc
loopne
jns
jno
jle
rol
cmpsl
mov
shr
sbb
cmp
stos
fists
mov
add
xor
scas
inc
aas
imul
insl
mov
push
andb
mov
sahf
jp
mov
in
fs
lret
stos
jns
ljmp
push
fidivl
mul
push
fdivl
mov
dec
cmp
ret
jp
jp
scas
mov
cmpsb
mov
roll
lret
cmp
fwait
arpl
lock
int
mov
int
rcll
add
test
cmp
cmp
ret
adc
or
fdiv
in
rolb
xor
push
int3
daa
in
daa
push
icebp
adc
mov
dec
daa
pop
cmp
mov
cmp
adc
fadds
pop
push
xlat
push
mov
fdivrl
mov
rcl
fisttpll
jnp
test
dec
mov
jg
cli
and
cltd
orl
ss
in
test
shlb
adc
lret
repz
push
stos
into
pop
out
test
jbe
out
sub
mov
xchg
xor
inc
dec
out
cmpsb
arpl
xlat
adc
jns
ficoms
repnz
sub
adc
dec
push
xor
sub
sbb
xlat
lds
in
cmp
or
dec
xor
rclb
or
push
inc
cmp
inc
push
or
int3
jb
push
loopne
xchg
mov
mov
ds
push
icebp
or
cmp
pop
scas
mov
insb
mov
lcall
imul
jmp
pop
pop
push
xlat
popa
fisttps
pop
imul
movsb
dec
xchg
ret
mov
sub
imul
sbbl
aaa
push
mov
std
push
inc
mov
fucomi
adc
das
mov
push
or
test
xor
lret
clc
addr16
push
jbe
enter
and
lahf
test
inc
dec
gs
push
xor
in
sub
mov
lret
mov
stos
popa
loop
jmp
mov
and
stos
scas
inc
fcompl
mov
xor
rorb
imul
inc
inc
mov
int
mov
orb
ret
adc
nop
mov
aaa
mov
and
mov
mov
mov
fwait
jbe
sarb
adc
xor
repnz
dec
ret
pop
in
gs
das
aam
pop
push
jne
lock
push
cmpsl
adc
scas
push
outsl
mov
mov
xor
push
or
inc
psrlq
xor
mov
or
cmp
lret
shlb
inc
lcall
scas
jns
push
shll
or
rcrl
add
xor
cmp
mov
mov
xor
mov
lahf
test
pop
je
inc
es
and
jp
push
and
icebp
pop
clc
pushl
lods
addr16
xchg
push
inc
add
ljmp
testb
cli
pop
pop
pusha
orb
dec
or
fdivs
xchg
inc
xchg
sub
cmp
pushf
jecxz
mov
and
rcl
add
mov
and
scas
or
int
mov
mov
ret
int
iret
shrl
xor
add
ja
into
loop
sub
add
movsb
nop
inc
loopne
repz
push
mov
std
mov
pop
cmp
pop
mov
dec
jmp
sarl
cmc
adc
lods
and
inc
pop
fisubrs
mov
lock
adcl
xchg
adc
push
aam
xor
mov
and
dec
inc
psrld
sub
hlt
flds
mov
and
aaa
into
jmp
loopne
decl
adc
or
xchg
adc
les
mov
or
push
ja
mov
jg
rcll
imul
icebp
mov
adc
bound
inc
inc
andb
mov
enter
ljmp
xor
and
push
test
dec
loope
es
bound
mov
jg
inc
push
push
addl
aaa
sbb
dec
pop
pushf
sub
sbb
rcrb
dec
or
mov
fdivrl
shrb
ds
inc
pop
lock
test
xor
and
in
push
xchg
fwait
xor
repz
lcall
scas
inc
repnz
mov
hlt
les
enter
and
fnstenv
push
in
push
mov
dec
cmp
mov
clc
xchg
pop
mov
fiaddl
mov
shrl
das
popf
pop
cmp
ds
jb
sub
cld
jae
cmp
jae
fwait
xchg
repz
je
pop
mov
cmpsl
xchg
pop
mov
push
pop
inc
mov
call
out
int
xchg
mov
jl
adc
dec
pop
sub
mov
jp
shl
pop
fwait
int3
push
add
jno
jno
xor
mov
pop
mov
mov
cwtl
fs
cwtl
aam
cmp
stos
cs
mov
push
js
jmp
jae
pop
xor
fsubrl
or
jb
fwait
push
xlat
and
adc
add
ds
sub
test
mov
sarb
cmp
push
push
mov
adc
ss
add
test
lahf
push
outsb
inc
jb
jb
pop
jecxz
inc
loopne
aaa
sarb
sub
sbb
dec
mov
xchg
sub
ror
mov
fistpl
xchg
jle
xchg
adc
push
cltd
or
test
lcall
imul
scas
mov
lock
sbb
scas
push
cmp
xor
and
jb
mov
or
fbstp
push
add
fdivrl
sub
insb
xor
wbinvd
adc
inc
std
nop
jo
scas
lock
daa
sbb
jg
es
push
rclb
and
scas
mov
pop
xchg
and
push
jge
mov
mov
lahf
lds
sti
push
cltd
das
movsb
xor
dec
clc
or
outsl
fs
mov
aam
fidivrl
jne
scas
cmpsb
pxor
dec
mov
insl
pushf
iret
fcmovne
mov
repz
lods
mov
clc
scas
adc
mov
jl
dec
insb
jnp
sahf
sub
add
bound
jle
imul
and
mov
test
movl
leave
push
stos
out
sbb
and
addr16
and
mov
dec
ret
das
or
adc
insb
fists
mov
mov
out
mov
xor
sti
lret
push
ljmp
jno
fs
mov
mov
outsl
sub
aad
or
jl
xchg
fmul
pop
outsl
add
cwtl
cmpsb
sub
pop
mov
push
jge
sbb
push
leave
xlat
clc
inc
mov
out
add
movsb
push
sub
test
sub
subb
push
rol
out
je
sahf
mov
adc
in
xor
mov
mov
inc
jl
cmpsb
scas
nop
jnp
mov
popf
xor
into
jp
test
push
fldt
jae
sbb
fsubrl
cld
xor
in
arpl
mov
enter
lret
push
out
lea
add
sbb
dec
mov
in
sub
sub
and
pushf
cli
movsl
mov
clc
lea
jnp
jns
and
xchg
xor
pop
addr16
in
cmpsl
xor
rolb
adc
out
addr16
lahf
jp
movsb
insb
sahf
sbb
test
jo
jbe
cmc
xchg
imul
shll
jo
scas
cmpsl
lret
pop
mov
adc
push
mov
mov
pop
loopw
arpl
xchg
inc
jl
sub
andl
data16
mov
ja
in
push
mov
out
dec
dec
out
push
xchg
sbb
dec
and
add
cmp
enter
sti
mov
dec
shrb
xor
popf
pop
adc
add
xlat
enter
cld
and
sub
rcrb
mov
xchg
xor
dec
arpl
and
cmp
lahf
mov
sbb
pop
dec
das
mov
shrl
addr16
adc
test
add
pop
or
inc
mov
dec
outsl
int3
js
js
iret
addb
push
jo
ja
and
xchg
fcmovb
icebp
orb
mov
in
mov
jno
ljmp
out
inc
fistpl
popa
fsubl
rcll
pop
jmp
jbe
jge
mov
or
mov
into
sub
imul
push
in
push
xchg
dec
cmp
inc
in
test
sbb
mov
cmc
xchg
ljmp
jle
or
sub
mov
xor
sub
imul
loopne
sbbb
enter
jb
scas
jo
push
int
pop
stc
pushf
or
mov
ss
add
lret
lcall
idivb
sub
sub
ljmp
push
jmp
outsl
dec
insl
pushf
hlt
nop
jno
aas
adc
lcall
lds
int
lahf
lods
leave
enter
jp
leave
and
icebp
mov
fbstp
xchg
or
stos
pop
insb
sub
rolb
icebp
mov
loope
enter
xchg
xor
or
push
sbb
jle
int
push
add
inc
rolb
mov
aam
pop
ret
pop
scas
jge
mov
mov
and
fadds
idivb
fildll
inc
pushw
adcb
cmpsl
mov
sbb
sahf
add
sub
push
or
push
or
cli
or
daa
adc
sahf
je
inc
sbbb
and
ror
pop
xchg
jo
dec
xchg
fwait
add
adc
inc
sbb
push
gs
xchg
push
mov
es
fldenv
loop
rcrb
shlb
cmc
lcall
adc
xchg
and
xor
mov
sbb
fdivrs
bound
push
jb
pushf
cltd
in
pop
scas
inc
sub
pop
insb
cmp
stos
cmpb
xor
cltd
push
xor
fildl
shl
pop
leave
mov
add
stos
leave
ljmp
aaa
push
inc
push
lea
call
mov
in
mov
inc
lcall
inc
cmp
inc
push
pop
loop
add
mov
adc
lcall
adc
clc
lods
mov
mov
fildl
std
jg
and
xor
push
inc
dec
pop
cmpb
mov
mov
or
mov
mov
insb
dec
cwtl
mov
xchg
lcall
out
test
std
sbb
sbb
cmp
add
pop
repnz
fmuls
mov
fnstsw
fbstp
adc
inc
push
addr16
sti
lcall
in
fwait
pop
mov
jge,pt
add
pop
ficoms
xchg
lds
dec
pop
outsl
push
popf
mov
adc
fbld
fsubrp
cmp
jae
enter
cmp
jo
cmp
stos
rcl
stc
nop
mov
mov
inc
test
ss
dec
pop
dec
push
out
or
push
pop
sbbb
mov
in
fmul
mov
sub
mov
out
jb
push
add
out
cli
and
fidivs
clc
cmpsb
dec
push
pop
adc
cwtl
push
pop
jae
or
push
imul
pop
or
inc
call
pop
mov
mov
inc
push
mov
fmuls
mov
sahf
out
pushaw
das
xchg
sbb
negl
loop
lock
pop
or
in
mov
cltd
jne
dec
in
mov
jnp
or
xchg
std
jb
pushf
xor
xchg
ret
mov
setp
or
mov
in
pop
lock
jns
cltd
xchg
xchg
addr16
sbb
imul
xor
mov
dec
hlt
ds
push
or
leave
cmpsl
sbb
scas
aad
aad
and
push
jns
mov
adc
mov
jmp
hlt
inc
adc
repz
popa
outsb
cmpsb
in
je
sub
rcrl
pop
and
fcompl
mov
pop
testb
dec
pusha
stos
sbb
or
mov
ljmp
jge
sub
pop
jle
xchg
adc
jmp
into
sahf
sub
shr
mov
in
or
repz
insb
add
sub
in
sbb
mov
xchg
test
pop
add
sarl
loope
ljmp
add
sbb
pop
mov
mov
arpl
push
cwtl
pop
hlt
xchg
ljmp
xor
cmpsb
adc
mov
jo
dec
pop
pushf
cwtl
fadds
filds
sarb
or
cwtl
aad
in
pop
ja
fadds
xchg
sub
es
mov
addl
popf
add
mov
add
xchg
in
pop
jl
mov
cs
mov
ret
cmpsb
cmp
lods
mov
nop
sub
pop
mov
sbb
push
lcall
cwtl
mov
cld
sahf
sbb
lret
lahf
push
mov
jb
xor
adc
int3
xchg
divl
push
lock
jb
sub
jp
dec
mov
pushf
mov
push
cmp
push
push
insl
fsts
jns
ret
pop
xchg
das
mov
cwtl
push
dec
pop
test
push
push
adc
arpl
addl
leave
inc
add
pop
sub
lret
sub
call
lcall
icebp
lret
sbb
adc
jo
es
xor
test
dec
ss
stos
mov
hlt
inc
xor
cmpsl
bound
lea
jge
jnp
out
into
mov
dec
ja
mov
dec
iret
loopne
call
ficompl
mov
pop
idivl
push
mov
and
aad
ja
popf
scas
iret
xchg
dec
arpl
fisttps
dec
cwtl
or
xchg
shr
ret
mov
sub
push
test
mov
cmp
xchg
add
sbb
dec
sahf
xchg
xor
fimuls
sub
push
in
pushf
sbb
jo
lods
mov
into
test
ret
or
mov
xchg
xchg
mov
std
or
lret
jne
sti
mov
stos
fneni(8087
or
cmpsl
sbb
jmp
jp
dec
inc
inc
inc
jns
hlt
fsts
leave
test
and
scas
xchg
rclb
dec
arpl
data16
mov
scas
inc
or
aad
leave
adc
cmp
arpl
push
xchg
xor
in
popa
pushl
insb
jmp
std
cmc
pop
mov
jecxz
aaa
mov
enter
outsl
jl
mov
xchg
push
and
and
fildl
pop
jb
pop
push
xchg
push
pop
icebp
arpl
xchg
mov
loopne
cmp
outsl
leave
lods
mov
mov
divb
cmpl
lret
pop
xor
imul
dec
in
test
mov
or
loope
xchg
fbld
dec
jecxz
and
cmp
mov
clc
nop
push
ljmp
scas
insl
mov
outsl
mov
notb
xchg
xor
mov
or
push
dec
lret
push
sahf
icebp
jp
and
xchg
scas
shll
cmp
jae
cmp
lock
mov
mov
inc
stos
fistl
nop
mov
call
fwait
in
pushf
or
push
int
cmp
xor
movsb
cli
and
push
mov
inc
xchg
jbe
cmp
jae
cltd
addr16
dec
adc
push
call
in
push
outsb
imul
decb
popf
mov
js
notb
ja
cmpsl
stos
hlt
xor
mov
and
add
jp
xchg
push
or
mov
test
xchg
jo
cmp
sti
fcomps
addr16
pop
xchg
cmp
repz
out
loop
aam
sahf
inc
sbb
sahf
xor
iret
sahf
jge
test
jmp
sarb
ror
inc
and
clc
dec
in
and
sti
jns
fildll
dec
inc
notb
iret
mov
mov
or
mov
out
bound
jbe
loop
fs
mov
jae
shll
jle
ss
lcall
adc
or
lods
popa
mov
lret
cmpsl
shlb
adc
cmpsl
mov
out
rep
and
movsl
mov
ret
outsb
add
xor
shrl
cmp
fdivrs
incb
pop
das
idiv
pop
sbb
js
leave
inc
hlt
xchg
aam
hlt
aas
dec
adc
sbb
push
pop
ds
in
into
sbb
shl
enter
pop
sub
dec
jo
mov
cmpxchg
inc
ljmp
jb,pt
adc
push
lret
fcomp
jb
push
sbb
jb
aad
outsl
popa
sbb
adc
ds
xor
and
push
rep
test
aad
dec
jecxz
fists
fdiv
je
and
adc
out
cmp
xlat
repz
mov
gs
inc
cld
roll
add
dec
inc
or
repnz
pop
inc
rorb
insb
repz
dec
iret
ja
int3
in
mov
sub
or
out
mov
jg
xchg
add
mov
mov
jne
stc
ds
dec
dec
jl
insl
sub
outsb
jl
mov
mov
inc
pushf
xchg
aas
mov
nop
dec
aaa
lock
dec
pusha
inc
gs
insb
mov
inc
test
cltd
test
adc
icebp
insb
add
and
pushf
xor
add
push
ss
mov
cmp
pminsw
icebp
push
or
mov
jns
arpl
sbb
adc
push
pop
jae
clc
inc
sbb
shl
pop
xor
pop
or
or
mov
outsl
popa
orb
inc
add
push
xchg
or
cmp
movsb
jg
mov
cltd
sbb
js
mov
jl
pop
subl
sub
cwtl
push
mov
push
ljmp
push
mov
pop
sbb
fwait
or
aaa
mov
push
mov
sub
not
pop
ljmp
mov
xchg
push
inc
push
int
cmpsb
cmp
js
aam
push
pop
cmpsl
cmpsl
push
out
cmpsb
cld
mov
dec
outsl
dec
clc
jl
test
sub
cmp
pop
ja
mov
dec
iret
aaa
jecxz
mov
jge
sub
xchg
shl
hlt
std
cmpsl
ds
icebp
notl
rcl
lds
sbb
fsubrl
sub
mov
jo
das
mov
aad
or
xchg
sub
mov
lahf
test
push
ret
jnp
xor
popf
ljmp
es
je
fnstsw
xlat
cwtl
out
push
fwait
pop
fwait
xor
and
xor
ret
call
test
jae
push
repnz
add
jmp
lock
xor
cwtl
repnz
lock
mov
xchg
pop
xor
fnstsw
fstl
ret
mov
insl
mov
inc
std
xor
xor
adc
pushf
cmc
pusha
fldl
add
xchg
mov
sub
ljmp
imul
cmp
js
cli
lea
clc
sahf
pop
dec
cmp
push
pop
in
popf
mov
out
sahf
les
jnp
insb
mov
in
inc
and
mov
jne
imul
inc
aam
testl
and
jne
cmp
jle
lock
movsb
mov
mov
mov
sbb
mov
aaa
int
pop
sbb
add
push
sti
cmp
jno
ret
fistpll
xchg
in
cmp
mov
push
aam
data16
bound
lods
ja
test
leave
xchg
add
jge
stc
lcall
hlt
mov
ret
sbb
dec
pop
int
pop
jecxz
mov
popf
jns
mov
or
and
in
in
sub
loopne
sub
aas
aad
mov
xchg
adc
out
movl
test
sbb
dec
ja
int
mov
sti
pop
cmpsb
das
cmp
inc
andb
jl
sub
jg
mull
mov
pop
mov
inc
mov
stc
xor
scas
dec
cltd
test
push
sub
lcall
cwtl
xor
xor
dec
add
pop
jb
adc
xor
and
dec
push
shl
daa
fnstcw
xor
mov
clc
lahf
and
mov
mov
lods
cmc
fstp
je
add
xor
andb
cmpsl
push
test
jae
out
mov
es
stc
je
pop
xor
push
out
js
std
mov
mov
push
inc
jge
orl
icebp
xchg
push
adc
loop
mov
mov
ja
inc
mov
fdivrl
xchg
sub
lcall
das
sub
inc
loope
jno
in
arpl
adc
test
outsl
iret
and
mov
jge
push
es
gs
jbe
shl
mov
push
mov
gs
push
and
or
fidivrs
mov
aaa
test
push
and
and
push
xor
data16
jo
dec
cmp
andb
xor
adc
add
daa
inc
fadds
in
lods
sbb
cvtdq2ps
or
pop
popf
ljmp
pop
gs
out
mov
adc
and
ret
test
push
pop
scas
outsb
test
insb
and
ss
mov
adc
jno
mov
daa
movsb
or
test
push
cld
mov
xchg
adc
and
nop
testb
dec
dec
jle
icebp
orl
div
mov
inc
mov
enter
xor
mov
inc
popa
cli
imul
movsl
xor
loopne
mov
sub
dec
mov
hlt
adc
dec
es
imul
daa
push
mov
iret
fsubrs
add
dec
fdivs
repz
mov
dec
in
sahf
xor
inc
xchg
mov
out
and
shrl
es
fsubrp
pop
xor
xor
xchg
dec
loop
shl
cmp
add
dec
iret
pop
rcrb
btr
sbb
push
popf
stos
xchg
push
pop
movsl
scas
sbb
mov
and
int3
sbb
imul
addr16
adc
cltd
daa
insl
cld
mov
add
andl
imul
loopne
or
jg
mov
mov
mov
or
adc
lret
imul
aas
or
ja
jnp
fwait
repnz
js
inc
mov
add
sub
lahf
roll
mov
loop
adc
cmp
inc
mov
movb
mov
jnp
push
cli
pop
dec
jmp
call
dec
cmp
jle
aaa
fidivl
test
jle
clc
or
out
or
frstor
in
sbb
std
push
adc
fimull
push
fs
movsl
in
lods
inc
out
loop
bound
push
imul
es
inc
and
xor
jmp
xor
mov
dec
xchg
adc
inc
cli
sbbl
inc
aad
jnp
adc
dec
push
xor
mov
xlat
movsb
push
popf
ror
shrl
cwtl
jae
leave
pop
inc
jl
and
pushf
and
out
cmpl
mov
dec
xchg
cmp
dec
cltd
mov
fiaddl
inc
push
pop
aaa
arpl
pop
mov
ret
inc
adc
or
jbe
cli
or
xchg
mov
add
stc
call
or
and
jmp
ja
or
call
inc
sub
lret
add
rorl
and
movsb
insb
lds
mov
insb
dec
pop
lcall
popw
xor
xchg
in
add
inc
iret
xchg
fstp
pop
adc
fs
push
data16
mov
push
or
mov
mov
cld
notl
cmp
dec
data16
and
popf
sub
test
xchg
and
test
jecxz
sbb
je
xchg
adc
and
out
aas
xor
sub
ret
out
pop
ds
call
test
mov
inc
ficoml
iret
lock
aad
mull
je
hlt
popa
aam
xor
imul
sbb
int
shl
das
cltd
outsb
clc
xchg
imul
lss
mov
fcompl
xchg
push
clc
push
xchg
lahf
testl
dec
pop
jbe
mov
imul
out
jae
aaa
in
dec
pop
pop
sbb
or
insb
jne
les
mov
rcll
out
das
jns
popa
popl
jecxz
push
out
mov
mul
lret
aam
fldcw
cld
mov
imul
xlat
lock
nop
pop
rol
or
sbb
ret
cmc
sahf
mov
insb
fbstp
push
sbb
mov
fbld
je
mov
adc
jl
jo
inc
xchg
push
jmp
mov
adcb
cmp
xor
mov
mov
push
in
push
stos
das
ret
bnd
into
mov
aad
pop
mov
repnz
ss
divl
aad
xchg
ret
mov
ficomps
add
push
cmp
pop
rcll
add
js
in
pop
and
xor
stc
test
and
lret
xor
xchg
rcr
fdivl
or
push
pop
ljmp
push
or
mov
xlat
gs
stos
add
outsb
jp
push
xchg
xchg
pusha
fidivl
test
sbb
jno
mov
adc
jb
cmp
ja
fisubs
add
repnz
in
adcl
xlat
lods
dec
mov
cmpsb
xchg
cmp
dec
into
mov
cmpb
cld
imul
stc
aas
inc
adc
push
xchg
clc
dec
movsl
inc
add
sysenter
popa
sbb
insb
popa
push
in
push
push
xchg
and
je
adc
and
jbe
xchg
lcall
loope
mov
cmpsl
daa
and
ficomps
inc
push
push
std
loop
das
jb
testb
add
ljmp
fisubl
aas
ds
fcmovb
rclb
mov
mov
lahf
cmpb
push
lods
int3
push
lcall
test
cmpb
pop
lock
xchg
ja
seta
lcall
loope
or
cmp
pop
insb
inc
lret
add
xor
inc
inc
xor
int
lock
sbb
jo
inc
jne
mov
push
fdivs
cmpsl
lret
js
add
xorl
dec
mov
ret
cmp
add
data16
xchg
xor
fsubp
aam
and
adc
test
sti
sbb
incb
dec
and
inc
and
in
jae
cmpsb
xchg
dec
or
cli
sbb
stos
in
sub
pushf
dec
js
loope
xor
push
mov
xchg
xor
pop
bnd
call
inc
sub
inc
mov
lods
sub
fcomip
xor
mov
lea
add
int
mov
mov
movb
or
std
cmp
ret
hlt
or
jmp
mov
outsl
sub
add
xchg
inc
mov
leave
mov
rorb
or
adc
mov
dec
stos
std
cmc
sbb
sarb
popf
jbe
ja
or
pop
adc
jge
push
jmp
dec
js
mov
push
fcmove
mov
pop
mov
dec
dec
dec
daa
stos
jns
psubsw
inc
repnz
popf
fidivrs
pop
movb
inc
scas
clc
add
xchg
push
cmpl
xor
pop
sub
jmp
cmp
add
pop
jb
into
pop
repnz
test
test
jle
cmc
test
sub
jno
push
mov
adc
je
repnz
fistl
jae
push
in
pop
mov
cld
cld
add
sbb
outsl
add
mov
jne
pusha
test
xor
xchg
aam
mov
in
sbb
jmp
xor
mov
push
sahf
addr16
clc
lods
sahf
mov
pop
mov
mov
pop
push
push
mov
sbb
adc
hlt
xchg
xchg
pop
mov
mov
xor
xchg
sar
dec
xchg
mov
and
inc
ficompl
orb
adc
lret
and
sbbl
add
clc
gs
hlt
test
dec
lret
fsubs
int
sti
adc
sbb
andb
test
cmp
jg
mov
cmp
xlat
fldl
loope
stos
pop
and
add
pushf
sub
cmp
mov
test
in
dec
and
sub
inc
mov
repnz
fldl
xchg
mov
add
add
pop
stos
xchg
test
lds
outsb
jb
repz
mov
aas
cmp
idivl
and
in
lcall
shrb
out
or
mov
lock
rcr
xor
add
cmp
jbe
aas
jl
mov
insb
je
jns
mov
aam
ss
push
sbb
cmpsb
insb
inc
lds
stos
test
mov
imul
enter
inc
mov
push
push
xchg
iret
cmpsb
pop
push
jno
jp
mov
xor
lret
ret
addr16
iret
and
pusha
divl
leave
addr16
xchg
rorl
pop
fwait
arpl
das
loope
mov
nop
add
cmp
jne
int3
dec
sbb
in
inc
mov
cmpl
mov
mov
loopne
mov
adc
mov
push
jge
add
sub
pop
dec
add
cmpl
sbb
sbb
mov
and
bnd
test
sbb
jp
xchg
repz
mov
push
sub
sbb
enter
jb
insb
jg
sub
in
sub
pop
mov
in
cmpsl
std
std
mov
push
add
cmp
movb
or
in
mov
sbb
dec
jns
aas
sahf
pop
cmp
pop
scas
iret
mov
ficoml
pop
push
cmp
insl
ja
in
jge
stos
inc
cmp
xchg
and
repnz
test
loope
xor
add
xchg
lds
lahf
sub
fwait
add
mov
imulb
lods
sub
fisttps
scas
cli
clc
add
lods
sbb
cmc
jnp
fwait
jne
shlb
fildl
and
mov
aad
pop
cld
adc
rclb
mov
mov
pop
sahf
xor
in
repz
jecxz
sahf
cmc
lret
inc
pop
or
fwait
or
push
mov
ds
stc
das
js
dec
cmpsb
data16
movsb
cmp
inc
icebp
cwtl
xor
jmp
mov
dec
in
dec
shr
jecxz
insb
jle
mov
xchg
add
add
dec
arpl
dec
out
fwait
shrl
dec
sbb
orb
rcrb
loopne
call
jo
insb
shll
lds
jns
aad
inc
mov
pop
pop
aas
inc
fsubrl
push
cltd
fstps
mov
je
mov
and
aaa
int
nop
and
and
das
cmp
pop
jb
lcall
add
sbb
or
mov
fiaddl
pop
or
xchg
mov
xor
lret
jb
and
sub
jo
inc
into
adc
jle
or
push
mov
push
shlb
mov
outsb
ss
mov
clc
rcll
mov
int3
out
xorb
mov
hlt
inc
popa
aad
sub
mov
fisttpll
in
test
sbb
sub
push
mov
ss
xchg
icebp
mov
inc
pop
sbb
into
movsl
xchg
push
or
pop
push
jge
mov
fwait
mov
nop
in
inc
loope
adc
orl
dec
mov
xchg
pop
sbb
into
lds
ja
xchg
mov
push
mov
pop
jp
jbe
adc
outsb
in
lahf
sbb
call
movb
jbe
or
jecxz
scas
stos
das
shrl
out
gs
pop
xchg
push
out
lods
inc
cmp
mov
js
stc
inc
mov
or
jp
xchg
in
das
mov
add
shll
rcl
and
movsl
dec
clc
sub
call
cmc
shll
push
pop
in
clc
xchg
int3
addr16
inc
pop
sub
add
lahf
call
or
es
dec
dec
push
jbe
in
mov
stos
adc
mov
js
inc
dec
cs
clc
mov
mov
or
push
cmp
xchg
sub
mov
push
xor
loopne
cltd
fstps
push
pop
loop
add
or
imul
sbb
ds
out
cmc
xor
test
push
cmp
sub
mov
adc
push
push
outsl
cmp
shlb
sbb
add
idiv
push
adc
test
xor
dec
push
dec
testb
sbb
shll
pop
lock
adc
push
iret
bound
sbb
jns
cltd
lock
push
jns
outsb
cld
adcb
rcrl
add
jmp
test
dec
loope
shrb
add
test
mov
push
shl
jl
out
insb
mov
fdiv
push
push
cmp
dec
leave
pop
push
ds
mov
pop
ss
lds
or
fsubrl
dec
mov
jae
addr16
mov
addr16
jae
imulb
scas
xchg
mov
pusha
and
xchg
adc
cmc
fs
call
jne
imul
fcomps
mov
ds
inc
xlat
loop
xor
fiadds
pop
ficomps
testl
jl
lea
mov
pop
out
nop
jmp
idivb
pop
imul
dec
rolb
push
rorb
jmp
out
dec
cmpsl
out
rcrl
loopne
adc
pop
dec
add
testb
jge
sbb
out
bound
mov
jbe
or
imul
push
mov
jno
popf
add
adcb
fistpl
mov
push
cmp
push
and
hlt
inc
inc
daa
xor
mov
es
ficompl
jae
jbe
and
sti
sahf
imul
sahf
mov
arpl
in
mov
scas
pushl
movsb
push
rcrl
jno
jge
test
inc
ret
leave
and
loopne
sub
nop
xor
loopne
jmp
sti
mov
pop
loop
add
and
mov
lea
call
or
mov
inc
fbld
lret
push
jle
dec
test
jge
fmul
sub
adcl
mov
cmp
mov
test
ljmp
mov
jbe
adc
push
xchg
mov
cmp
push
xchg
jnp
mov
rorb
push
sbb
gs
mov
mov
repz
jno
fwait
push
out
mov
movsb
repz
std
inc
mov
scas
mov
aas
push
pushf
inc
mov
push
mov
mov
pop
ja
xchg
sti
pop
mov
mov
ss
or
mov
inc
stos
push
xchg
dec
xchg
lods
sub
test
mov
addr16
jbe
mov
clc
arpl
aaa
cmp
push
xchg
adc
pop
jl
mov
sbb
add
fsubrs
cmpps
dec
pushf
out
lods
cmp
fmulp
jb
xor
ds
push
decb
cmp
cld
mov
fsts
add
xor
pushf
jns
loopne
sub
mov
pop
mov
dec
xchg
xor
mov
xchg
es
out
cmpsl
nop
sbb
cld
cli
dec
pop
mov
js
dec
xchg
out
mov
sbbb
dec
sti
push
cmc
xchg
fwait
repnz
idiv
pop
sarl
test
push
jno
stos
adc
in
inc
xchg
xor
clc
push
pop
enter
xchg
sbb
loope
jle
jmp
rcrb
cmp
push
xor
mov
fisubrl
cmc
adc
mov
jle
aam
dec
push
adc
aaa
lea
cwtl
ficompl
add
add
sub
popa
jg
cmp
test
pop
dec
stc
and
mov
mov
adc
mov
and
add
loope
fwait
push
adc
mov
mov
push
pop
pop
loope
jne
jnp
mov
mov
dec
jecxz
cmpsb
xchg
xlat
gs
and
in
pop
aad
pop
jno
rcrb
jbe
sub
popa
jge
xor
mov
loope
rcl
orb
imul
pushf
adcb
aaa
fidivl
pop
inc
ljmp
out
pop
in
mov
adc
cmp
jl
xor
fs
iret
ljmp
cli
cmp
mov
pop
int3
ljmp
fldcw
nop
bound
xor
dec
sbbl
rorl
icebp
fdivrs
xchg
mov
shrb
mov
fcomip
jno
mov
inc
mov
and
xchg
cmpsb
xor
xchg
mov
fwait
xor
out
sub
mov
cmc
inc
popa
xlat
mov
outsl
clc
mov
test
push
mov
mov
pop
xchg
arpl
sub
jp
bound
aad
shrl
mov
cmpsb
add
test
daa
rorb
and
popa
fmull
push
lea
mov
js
mov
mov
xchg
mov
or
xchg
adc
dec
in
scas
or
adc
repnz
mov
pop
in
and
jg
jmp
pop
adc
cmpb
sub
pop
adc
sti
fwait
push
aaa
xchg
inc
jbe
mov
roll
out
push
mov
adc
mov
pop
pop
inc
dec
daa
jecxz
pop
mov
jae
shll
repnz
iret
lock
mov
push
cmpsb
xor
icebp
add
mov
dec
aad
mov
or
push
sbb
sub
loope
inc
pusha
setns
mov
xor
and
sub
sbb
mov
sbb
dec
cmc
sahf
mov
mov
mov
dec
pop
pop
add
fucomip
adc
adcb
inc
add
lds
dec
mov
mov
xor
loope
sbb
and
jnp
adc
test
lods
inc
jae
lret
push
mov
lcall
sub
mov
and
push
loope
popa
mov
mov
aas
fldcw
xchg
sub
and
push
mov
jl
jmp
cltd
dec
add
cli
inc
pop
sbb
add
aas
dec
out
and
xor
outsb
repnz
pusha
lcall
fmuls
sbb
shlb
loop
pop
xorb
adc
cmp
mov
pop
bound
pop
add
pop
lods
daa
cmp
xor
aaa
mov
and
adc
xchg
fwait
data16
inc
in
sbb
aaa
cmpsb
add
xchg
jmp
jecxz
aas
sbb
add
pushf
fs
add
bnd
imul
jp
cmp
push
movsl
lahf
scas
or
xchg
jl
jne
sti
aam
jnp
cmpsb
test
ret
fs
add
jg
fcoml
mov
ficomps
lret
lahf
push
mov
jb
xor
add
lea
xchg
cmp
or
test
mov
push
push
rorl
xchg
adc
pop
shl
dec
cmp
loop
in
loop
mov
pop
pop
mov
sarl
ljmp
test
push
popa
adc
or
stos
xor
int
mov
iret
fistpl
sti
pop
adc
andl
or
out
arpl
xchg
cmpsb
jns
pop
cmp
sbb
sarb
inc
or
fistpll
inc
push
repnz
jnp
int3
mov
call
out
enter
adc
and
sub
adc
lcall
es
mov
insb
aaa
lcall
mov
xor
mov
test
dec
cli
sub
fimuls
xrelease
jl
push
sub
jns
pop
clc
xchg
jmp
std
dec
or
scas
outsl
adc
iret
clc
sub
shl
jae
mov
outsl
mov
bound
stos
adc
lea
in
imul
dec
add
jbe
cmp
fcomi
ror
inc
sahf
repz
lahf
jno
mov
pop
push
fstpt
or
mov
repnz
xchg
js
jns
stos
subb
out
inc
push
roll
ret
xor
aas
jns
in
cmpsl
pop
ret
xor
mov
pop
xchg
pop
add
movsb
cmp
mov
mov
xchg
xchg
rclb
pusha
jl
jg
repz
push
or
push
test
sbb
fcmovbe
mov
les
mov
loopne
aaa
inc
pop
pop
loop
fisttpll
repnz
repz
fs
cmp
mov
out
repz
or
xlat
mov
movsl
sbb
push
mov
adc
xlat
push
fcoms
sbb
xor
add
mov
out
outsb
or
nop
pop
fsubrp
ja
mov
cwtl
pop
sub
not
outsb
rolb
ret
cmpsb
pop
and
sarb
repz
xchg
int3
inc
fldenv
mov
and
icebp
pop
xor
mov
mov
mov
push
sub
cwtl
push
popa
or
stc
pushf
lods
sub
outsl
push
pusha
fmuls
mov
xchg
mov
in
pop
lock
leave
jl
ljmp
mov
clc
arpl
sub
jbe
xchg
cmp
ja
loope
xor
cmpl
stos
mov
mov
test
insl
mov
out
shrl
pop
insl
rorl
lods
loope
fbstp
cs
pop
mov
mov
inc
pusha
and
addb
sub
cmpsb
stc
out
push
fildll
faddl
pop
add
sbb
bound
pop
stc
arpl
in
test
incl
scas
das
lcall
push
insl
jp
std
cs
xchg
lahf
pop
jb
iret
xchg
into
cmp
mov
in
mov
jl
xor
fstpt
rorb
pop
mov
out
jmp
scas
cmc
mov
and
ss
negb
cmp
xor
outsl
push
test
xor
push
xchg
add
or
pusha
pop
test
les
jae
or
lret
pop
ds
and
mov
add
pop
not
mov
lea
jge
mov
pushf
fcoms
mov
fmuls
mov
mov
pop
pop
mov
in
dec
pop
xor
arpl
inc
shlb
push
or
mov
sub
pushf
pop
fimull
mov
push
subl
shrb
add
les
ret
loopne
jmp
jmp
jno
cmpsb
aas
stc
sub
daa
aad
test
jle
add
xor
in
js
inc
daa
push
ljmp
call
pop
scas
ret
cwtl
jecxz
fdivl
jne
sbb
dec
xchg
clc
dec
vzeroupper
mov
pop
out
mov
cmp
lds
jmp
pop
inc
pop
mov
jp
inc
sbb
ret
xor
shrl
xor
ja
pop
xor
cltd
and
add
testb
shrb
xchg
or
outsl
gs
jmp
adc
fbstp
xor
or
into
xchg
repz
adc
mov
aad
notb
xadd
cwtl
sbb
xor
sub
dec
jbe
andl
inc
dec
pop
imul
dec
stos
jne
data16
out
lds
sbbb
sahf
dec
adcb
mov
adcb
sahf
xor
mov
cmp
push
or
addr16
shrb
shll
stc
mov
cld
adc
decl
dec
movsb
sub
push
in
je
in
fs
jbe
xorl
pop
push
out
aaa
add
and
aad
sbb
inc
or
gs
xchg
add
lock
cmpsb
fnstenv
adcb
cmp
cmc
roll
ret
sub
test
jne
add
mov
jb
xor
jge
mov
fcoms
es
ljmp
sbb
aas
das
adc
jne
or
repz
pop
xchg
xor
sub
pop
pusha
fdivr
stos
dec
jae
jbe
push
js
ret
mov
or
push
xor
inc
add
outsl
mov
pop
ljmp
push
lods
pop
dec
cmp
xor
into
call
dec
sbb
pop
test
outsb
push
in
jp
out
testl
stos
cmp
sub
imul
addr16
xchg
cmp
sbb
xchg
icebp
outsl
xchg
cmpsb
push
or
adc
xlat
inc
test
lret
mov
mov
dec
aam
inc
test
cmc
aad
add
lods
xchg
push
bound
enter
push
jmp
ss
jo
scas
mov
jno
cltd
push
insb
sbb
jg
imul
cld
int3
and
cltd
jno
dec
shl
add
or
ja
inc
iret
bound
jmp
cmp
ja
stos
adc
lahf
insl
outsb
jl
ficoms
jmp
mov
in
test
std
ds
push
bound
hlt
add
and
cwtl
push
jo
roll
andl
pop
jl
pop
pop
imul
repnz
jns
flds
mov
in
rclb
mov
inc
pop
inc
mov
sub
mov
fistl
pushf
outsb
cld
cmp
pop
and
data16
lret
dec
add
jne
fsubl
lods
xchg
aad
xchg
sbb
cmp
mov
mov
xchg
lahf
lcall
mov
std
inc
xchg
cmp
mov
xchg
inc
data16
jnp
jbe
ja
lcall
jg
mov
add
sbb
sub
or
mov
rol
xor
push
inc
jmp
into
push
adc
add
repnz
je
adc
iret
xor
lret
xchg
or
lods
add
and
jp
addl
jo
xchg
mov
xchg
stos
mov
xlat
pop
jmp
xor
out
out
add
push
mov
push
dec
sbb
xchg
addr16
clc
cmpsb
mov
dec
mov
mov
cli
sysret
push
sub
fs
pop
jecxz
and
jecxz
cmp
ja
loop
xlat
imul
or
insl
add
jge
sub
and
xor
fmuls
mov
mov
jmp
stos
xchg
jbe
mov
sbb
inc
loope
mov
adc
mov
adc
mov
test
fidivs
pop
cmpl
fstl
or
popa
pop
jge
xor
pushf
mov
out
mov
push
cwtl
push
es
or
andl
fcmovnbe
xor
stos
xchg
jbe
mov
pop
mov
xchg
sub
mov
ret
sbb
cmp
sahf
mov
fisttpll
sti
clc
mov
ljmp
jecxz
pop
or
dec
pop
out
enter
xchg
sub
jecxz
lods
mov
fs
lret
clc
jae
mov
adc
lock
add
sub
rcrb
std
loop
mov
cmpsb
dec
andl
dec
add
movsl
dec
push
out
mov
xlat
js
mov
pop
loope
fnstcw
adcb
bound
sbb
icebp
js
leave
push
mov
stos
jne
xchg
orl
das
inc
mov
in
or
and
sbb
inc
pop
cmp
mov
inc
push
adc
and
xor
mov
leave
and
sub
ja
fwait
sub
out
xlat
xchg
pop
cmpl
xor
xchg
adc
lcall
rorb
arpl
xchg
xchg
xchg
insl
add
test
mov
mov
call
mov
xor
arpl
push
loopne
sub
movsb
std
sub
hlt
lret
into
repz
fwait
sub
add
adc
fs
popf
clc
pop
out
sub
repnz
add
mov
mov
stc
imul
adc
mov
jno
pop
xchg
lock
cli
xchg
mov
xchg
sub
or
jecxz
in
loope
ret
cmp
testl
clc
xchg
pushf
lds
mov
mov
push
add
cwtd
push
lds
in
imul
mov
jmp
jg
push
je
xchg
adcl
cmp
or
add
sub
fwait
scas
xor
lock
enter
cli
shl
and
test
dec
cmpsl
mov
iret
data16
xorl
sub
sti
adc
adc
arpl
xor
mov
add
sbb
repz
ret
xor
ja
test
and
mov
aam
jns
cld
xchg
ds
prefetch
sbb
mov
push
sarl
mov
xchg
or
xor
lds
sub
jno
mov
push
xchg
adc
loopne
jl
pop
scas
lahf
ds
sbb
rcll
or
cmp
sti
inc
pusha
mov
out
mov
mulb
popa
sub
push
mov
ret
push
aam
mov
lret
mov
or
jg
lods
pusha
xor
fidivl
mov
inc
ljmp
insb
inc
jno
jns
mov
ss
xchg
sub
mov
cli
jle
push
hlt
mov
adc
es
sbb
or
pop
mov
test
add
repz
inc
lahf
movsb
scas
lcall
pop
mov
pushf
sub
mov
or
dec
pop
dec
sub
dec
mov
push
cmpsb
sbb
dec
and
jnp
daa
ljmp
sahf
mov
inc
mov
dec
flds
mov
popa
ljmp
mov
adc
pop
cmp
popa
in
mov
imul
loopne
ja
fnstsw
jne
into
loope
xchg
fwait
xor
leave
frstor
mov
jb
subb
out
cmp
mov
xchg
xchg
les
stc
gs
jae
in
jns
repz
push
jmp
std
jo,pt
out
lcall
xor
inc
jb
les
sahf
sahf
add
sbb
sub
pop
or
cmp
pop
mov
or
ss
inc
or
into
pop
call
int
adc
and
outsb
sti
add
xchg
ss
jb
xchg
mov
cmpsl
xor
xor
sub
add
lea
aad
or
movsl
jl
mov
js
iret
and
and
mov
inc
int3
arpl
xchg
adc
mov
add
and
and
mov
popf
imul
in
push
push
pop
xor
cmp
outsb
leave
xchg
repnz
or
rcl
dec
ljmp
mov
or
jnp
std
xor
add
sub
xchg
stos
imul
fidivrl
fnsave
and
dec
mov
daa
mov
stc
push
cld
fstpl
andl
iret
lcall
repz
jge
or
cmp
sub
imul
ret
and
in
ljmp
mov
mov
and
or
pop
into
xor
popf
xchg
mov
repnz
adc
lret
adc
push
js
mov
scas
push
jmp
pop
loopne
dec
or
cmp
jae
testl
stc
xor
inc
fincstp
pop
rorl
mov
notl
test
out
push
loop
andb
push
sti
pop
inc
pop
lahf
cmp
lret
out
cmp
lods
mov
shl
mov
sahf
movsl
xchg
sbb
xlat
adc
mov
call
imul
adc
xor
cmp
das
xchg
and
mov
adcb
sub
mov
in
inc
jp
add
into
aad
jl
dec
and
popf
movsb
sti
loopne
fisttps
fdivrs
sub
cmp
dec
in
in
sahf
inc
loope
sbb
pop
out
xchg
xchg
icebp
call
dec
cld
xchg
test
mov
jnp
pop
mov
ljmp
nop
push
ret
aam
push
mov
push
fwait
or
jns
add
in
mov
xor
scas
sarl
mov
jle
jae
sbb
push
sub
xchg
imul
aas
adc
jmp
cs
jnp
inc
inc
lock
mov
sbb
cld
sar
push
cmpsl
jmp
fsubrs
push
out
cmpsb
orl
jne
add
pusha
into
int3
add
sbb
leave
dec
shll
in
loop
mov
mov
lcall
cmpsb
push
imul
addr16
imul
out
mov
cmp
gs
adc
add
fdivrl
mov
push
hlt
cmp
sbb
mov
lock
pop
fildl
sub
inc
in
popa
xchg
sarl
fwait
ret
push
sbb
lea
push
lcall
cwtl
push
push
sub
pop
or
xlat
cmp
fdivrl
and
jl
lods
lahf
iret
push
or
imul
daa
shlb
mov
out
test
inc
mov
sbb
pushf
jp
mov
repnz
adc
mov
fnstcw
fwait
push
and
inc
arpl
out
popa
repnz
sbb
sbb
in
rcll
jp
sub
adc
inc
pop
into
lcall
push
jge
inc
test
mov
test
add
and
stos
scas
inc
lock
push
jmp
into
pop
inc
in
je
push
icebp
mov
popf
cmc
rorl
aad
cmpsl
mov
cmp
push
jns
sbbl
call
or
insb
mov
mov
pop
xor
sahf
dec
pop
fadds
lahf
in
loop
aas
cmp
ja
dec
push
pop
stos
mov
mov
push
icebp
add
xchg
mov
sbb
or
aam
es
imul
adc
ds
fstl
push
stc
test
pop
ds
data16
or
loope
lahf
cld
or
mov
out
inc
insb
jae
pop
lock
in
icebp
inc
aad
adc
xor
and
xchg
xchg
xor
mov
add
lret
pop
adc
pop
orl
sbb
mov
jle
pop
cmp
pop
mov
jecxz
mov
aaa
sbb
repnz
pop
cli
or
cmpsb
shrb
dec
or
xor
arpl
ljmp
push
lock
sahf
xchg
push
in
imulb
mov
cmc
insb
xchg
sti
xchg
push
adc
outsl
adc
pop
insl
sub
push
xor
testb
add
push
sti
int3
push
test
adc
inc
orb
popf
pop
inc
int3
sbb
and
push
outsl
movq
faddp
mov
les
xchg
dec
fnstenv
add
das
outsl
cmp
push
push
mov
nop
and
movsb
push
divl
sub
in
jl
push
in
jne
ret
je
roll
mov
push
jae
enter
rorb
sbb
mov
leave
pusha
cmp
stc
add
pushf
insl
js
jg
xor
mov
aas
sar
inc
mov
testl
popa
daa
jge
jnp
jle
xlat
movsl
movsb
mov
pop
add
leave
lods
xchg
mov
inc
or
out
cmp
sahf
jmp
imul
mov
lahf
cmp
inc
cli
mov
push
addb
mov
ss
movl
mov
testl
mov
push
cs
push
into
in
add
pop
mov
pop
mov
inc
cld
stos
fidivs
pop
push
movsb
or
jge
cmpsl
dec
pop
lods
ja
mov
mov
cmp
int
pusha
cmp
push
mov
xchg
push
mov
or
mov
sub
insb
cli
fcmove
call
lods
clc
out
popf
lods
sahf
sub
fmul
and
jge
je
sub
xor
push
loop
push
sbb
jbe
jg
xor
repz
shlb
dec
add
ss
pop
adc
adc
fs
mov
insb
mov
in
outsb
cltd
xchg
cmp
fldcw
mov
aaa
popa
pusha
test
jbe
js
cmp
mov
sub
out
jmp
push
mov
mov
fwait
cli
lret
pop
xor
lcall
aam
data16
pop
mov
sbb
pop
sbb
xchg
ljmp
mov
add
adc
test
cwtl
cs
repz
in
scas
int3
mov
testl
and
mov
pop
cmp
xchg
adc
jmp
jmp
dec
loopne
divl
cmp
bound
std
jg
sbb
cmp
sbb
fisttpl
mov
repz
sub
jge
dec
imul
arpl
fsubr
cmpb
jp
cltd
or
loop
pusha
pushf
cmp
lret
push
aad
je
lret
mov
test
outsl
loop
incb
stos
inc
sub
pop
or
push
cltd
xchg
in
sqrtps
and
adc
sub
pop
pop
push
jo
cmp
lret
mov
sub
movsb
push
and
loop
mov
dec
fdivrs
mov
mov
and
aaa
mov
mov
pop
test
icebp
mov
pop
lret
xchg
xchg
scas
jo
fwait
es
jecxz
and
stc
je
jbe
in
mov
dec
testb
sub
pop
jg
pop
out
push
jns
cmp
flds
mov
test
pop
push
hlt
add
adc
push
rcrb
xor
lods
ljmp
aas
std
sbb
push
xchg
sbb
cmp
mov
sbb
inc
icebp
push
add
sbb
repz
adc
adc
push
cli
lods
or
mov
std
int
das
fs
shlb
sub
arpl
xchg
iret
inc
nop
inc
mov
pop
mov
out
add
ror
fadds
arpl
test
movsb
bound
into
adc
push
test
and
test
arpl
stos
cmp
mov
stc
sbb
sbb
mov
push
xchg
js
mov
lock
jo
mov
add
cltd
or
fstpt
lock
mov
popf
mov
fmull
ror
and
inc
adc
mov
out
mov
dec
cmp
iret
and
xchg
pusha
ret
pop
mov
sahf
icebp
xchg
inc
adc
cmp
mov
mov
insl
dec
dec
cmp
lret
adc
pop
xchg
cmp
repnz
xchg
rcrl
hlt
push
and
dec
pop
xchg
popf
xor
pusha
lock
aas
push
movsl
jo
pop
add
inc
lods
call
xchg
les
and
sti
mov
rolb
clc
sbb
push
add
repnz
push
mov
jno
jecxz
mov
mov
shl
push
jnp
dec
and
imul
pop
adc
in
xorl
mov
sbb
imul
jmp
pushl
out
popa
mov
stos
sub
cmpsl
dec
es
sub
fmull
pop
mov
enter
jne
call
fdivs
dec
push
gs
sbbl
mov
enter
call
lret
bound
insl
add
mov
cmpsl
icebp
aad
sbb
test
imul
in
add
xlat
test
jno
scas
ret
outsb
sub
xor
adcb
pop
xor
mov
mov
push
rcrl
adc
add
pop
dec
mov
gs
popf
xor
notb
pop
sarb
inc
xchg
push
flds
cmp
mov
jae
add
rcrb
scas
inc
and
cmp
scas
mov
mov
fsubl
or
pop
test
fiaddl
scas
ret
ss
push
insl
loopne
push
jmp
sub
lret
cmpsb
scas
bound
pop
cld
xlat
jb
repz
imul
lret
mov
sti
jl
sbb
das
adc
sub
sbb
jl
pop
out
push
jp
pusha
aaa
divl
sbb
pop
popa
clc
mov
loopne
lds
test
cmp
ffree
cmp
pop
aaa
pop
jb
subb
inc
mov
ret
mov
sbb
mov
cmp
outsb
stc
jle
dec
inc
dec
orb
imul
sbb
xchg
xor
mov
sub
mov
js
out
mov
mov
ficoml
aam
mov
pop
repnz
out
stos
jp
sbb
mov
dec
out
pop
cmc
rclb
dec
and
cmp
aad
popa
dec
loope
xor
inc
pop
ljmp
xchg
inc
or
xchg
push
pop
sub
xchg
xor
int3
and
xchg
inc
faddp
push
shll
imul
fidivl
add
shrl
icebp
fldl
pop
popa
icebp
insb
xchg
mov
shrl
xchg
pop
jns
push
mov
inc
imul
add
inc
fnsave
fisubl
aas
mov
fcmovnb
pop
or
inc
pop
mov
call
push
jns
pushf
push
xor
mov
shlb
imul
push
scas
mov
cmp
jns
xchg
mov
in
pop
pop
jns
mov
jb
aam
xchg
mov
jg
push
inc
imul
cld
sbb
loope
mov
sbb
push
ss
fsubrs
cs
inc
fldln2
fdivrs
or
lret
fwait
outsb
fsubrs
mov
dec
push
jns
jns
jg
and
push
adc
lahf
push
mov
fucomp
mov
adc
or
call
jecxz
jae
cmpsl
mov
sub
push
out
call
jns
sahf
mov
lcall
pop
adc
mov
add
lods
xchg
sti
cmp
mov
movsl
cmp
mov
ret
sbb
cld
jne
inc
mov
mov
decb
adc
jno
pop
mov
push
mov
ljmp
sbb
sahf
xor
xlat
adc
out
repnz
das
pop
xchg
enter
popf
pusha
addb
subb
test
jmp
mov
mov
vmovupd
mov
lcall
xchg
xchg
mov
pop
lods
subl
cmp
outsb
xor
cmpsb
mov
sti
jmp
mov
mov
inc
xlat
jne
aas
mov
test
scas
ret
mov
push
sbb
cmpsl
mov
adc
cmp
cmp
or
or
dec
cmp
sub
movsl
out
outsl
out
cmpsb
dec
sbb
sbb
jnp
xchg
xor
aam
xchg
xchg
mov
aaa
xor
test
in
cmp
pushf
nop
inc
sti
pop
inc
out
add
dec
test
es
imul
icebp
cli
inc
add
mov
mov
add
clc
fnstenv
and
cwtl
rcrl
pop
icebp
and
loopne
notl
test
xchg
jge
ret
in
cld
andl
xchg
imul
dec
in
mov
mov
or
les
cwtl
sbb
jmp
or
mov
roll
add
xchg
lods
mull
movlhps
sbb
jnp
rcrb
leave
js
sbb
xor
push
cmp
es
jle
call
cmp
xchg
stos
rol
movlps
scas
scas
lock
or
addb
inc
fildl
or
xor
push
dec
loop
pop
cmp
push
das
mov
shrb
dec
pop
sbb
out
test
or
and
imul
mov
mov
cmpsl
mov
sahf
cs
sarb
das
lds
int3
dec
pop
cmp
and
mov
lods
jns
aam
shrl
mov
add
in
aas
movsb
sbb
sti
dec
int
jns
or
lods
test
lret
decl
and
and
dec
push
inc
mov
mov
repnz
data16
jecxz
xchg
or
sbb
imul
aas
stos
in
outsl
call
inc
jecxz
adc
std
nop
in
pusha
and
or
add
int3
pop
dec
pop
cmp
jne
or
cmpsl
xchg
aas
call
mov
orb
pcmpgtb
add
imul
inc
pop
push
int
or
dec
sub
or
outsl
jnp
sub
bound
pop
and
fadd
cmp
cld
addr16
mov
jle
les
shll
mov
lds
push
mov
dec
dec
rorb
sub
in
icebp
das
sbb
add
movsb
pop
push
dec
cmpsl
out
out
in
sarl
jmp
mov
repz
loope
stc
pop
out
and
ficompl
nop
out
bound
outsb
aaa
push
ljmp
scas
inc
mov
les
add
jecxz
or
shrl
lret
jb
iret
imul
cmpsb
stos
arpl
xchg
int
loop
cmpsb
dec
sbb
inc
jnp
inc
inc
or
pusha
insb
shll
mov
out
test
int
test
sbb
fdiv
insl
fs
lds
mov
inc
xor
jl
push
xor
mov
adc
stos
cmpsl
imulb
int
xor
sahf
cmp
cmp
shll
repnz
mov
dec
xchg
sbb
out
push
dec
dec
sbb
jae
mov
scas
mov
dec
in
std
inc
lods
outsl
jns
inc
sub
sub
mov
push
test
adc
js
cmp
hlt
sbb
call
push
add
fisubrl
rorb
in
daa
pop
push
test
insb
sub
ljmp
fcmovnb
aas
or
inc
mov
mov
movsb
stos
out
or
mov
jge
mov
mov
cmp
pop
add
sub
dec
xchg
and
aas
in
popa
mov
loop
mov
pop
xor
imul
imul
xlat
or
in
xchg
out
jecxz
cli
lcall
mov
in
add
or
mov
mov
add
test
pop
and
stos
adc
jmp
dec
shr
jle
cmp
xchg
inc
ds
cwtl
popa
mov
xlat
mov
in
sahf
rclb
call
or
ss
xchg
cmpsb
or
cmp
mov
push
lcall
enter
sub
sub
dec
je
cmp
xor
cmp
movsb
inc
repnz
cmp
aad
xor
dec
lahf
mov
mov
pop
fidivl
cmpsl
and
mov
inc
mov
and
lahf
testl
test
pop
nop
pop
push
je
cmpsb
rcrl
or
mov
nop
sub
rcrb
rcrb
xchg
sbb
loop
pop
push
mov
xchg
repnz
inc
and
push
dec
mov
arpl
push
ds
hlt
push
not
mov
pop
shrl
insl
stc
popf
roll
into
xor
jp
mov
sbb
xor
xchg
jmp
add
cs
aam
loopne
pop
xor
cmp
xor
xchg
push
insl
test
jp
push
loop
xor
shlb
test
mov
push
add
dec
stos
push
int
dec
jecxz,pn
sbb
movsl
xchg
sti
jns
dec
outsl
xchg
dec
cmpsb
dec
pusha
mov
lock
jg
mov
mov
push
push
addb
xchg
in
mov
cmp
stc
inc
mov
push
pop
testb
jmp
fimull
js
sbb
icebp
enter
mov
pop
das
popa
call
cltd
or
mov
jns
pop
hlt
mov
jns
lret
rclb
xchg
mov
jbe
add
and
jg
movsb
mov
imul
ret
mov
jmp
xlat
loop
jae
mov
mov
mov
xlat
push
lret
insb
mov
fcmove
mov
mov
cs
loope
cld
mov
icebp
out
jne
adc
fwait
neg
cmp
adcl
mov
rcrl
ficoml
fbstp
dec
mov
and
add
sar
lret
mov
sub
data16
and
dec
inc
mov
xlat
and
fisubs
testb
cmp
int
pushf
dec
out
add
and
pop
mov
test
or
push
dec
in
lods
adcl
cmp
inc
insl
xchg
pop
pop
mov
lea
std
mov
push
push
mov
loop
test
and
xchg
push
jle
mov
xlat
mov
icebp
jne
fsub
xchg
inc
push
or
mov
xchg
xchg
jecxz
push
mov
pop
cmpsl
mov
dec
dec
sub
inc
fwait
pop
mov
mov
lods
fldt
das
pop
addr16
and
adc
cmp
ror
in
std
dec
insl
inc
lea
push
or
push
cmp
dec
mov
or
in
test
cmpl
xor
mov
lods
test
sub
int
add
icebp
sbb
dec
mov
aas
out
inc
pop
mov
lret
and
stos
inc
out
ret
fmul
pop
lret
call
adc
cmp
outsl
arpl
mov
in
and
xchg
daa
fstp
dec
nop
dec
sbb
insl
mov
lcall
mov
mov
and
mov
out
dec
pop
loop
push
lea
mov
pop
arpl
stos
jmp
mov
xor
cli
xlat
cmpps
dec
push
add
fidivs
jmp
sub
orl
mov
inc
lret
insb
repnz
adc
popw
pop
aaa
pop
xor
and
xchg
cld
dec
mov
push
jp
shl
clc
ret
add
out
inc
sbb
xchg
cmp
sbb
sbb
cmp
xor
mov
fsubr
xor
mov
aad
add
pop
mov
sti
mov
mov
pushf
xor
pop
inc
lods
mov
push
cmpl
jae
jp
xlat
mov
out
test
pop
push
fcoms
jne
jne
adc
outsb
lds
push
dec
iret
fmul
add
cmp
call
add
lret
jnp
sbb
test
sbb
xchg
push
aam
sbb
and
and
arpl
scas
inc
ss
mov
mul
iret
xchg
push
or
adc
push
pop
lcall
ss
imul
push
mov
adc
enter
fs
xchg
jo
add
xorl
sbb
mov
frstor
adcb
movsb
aad
xchg
or
push
ljmp
call
sbb
repz
jo
sub
popa
jns
mov
incl
or
adc
call
inc
test
mov
cmpsl
arpl
xchg
mov
sub
fcomps
pushf
xor
push
inc
jmp
daa
mov
mov
jns
and
add
jge
fs
sahf
sbb
movsb
or
shlb
add
jo
inc
add
loope
testl
dec
imul
test
inc
inc
pusha
movsl
fbstp
jnp
and
pushf
icebp
pop
into
adc
inc
lds
scas
adc
push
mov
jge
popf
lcall
jl
dec
sahf
push
add
testl
addl
icebp
cmpsb
orb
mov
sub
add
nop
dec
loope
sbb
mov
lret
xchg
ds
inc
xor
jge
xchg
in
mov
sub
insl
cmpsb
scas
push
mov
testb
or
pop
push
cli
sbb
sbb
dec
pop
loop
push
dec
xchg
push
sub
sarl
xor
dec
adc
rol
dec
pop
imul
sbb
pop
add
cmc
xchg
jbe
aam
lret
cmp
sub
roll
jns
xor
push
sbbl
movsl
ljmp
insb
mov
pop
daa
mov
mov
imul
adc
das
gs
pop
arpl
scas
inc
aas
icebp
outsl
jnp
insb
fadds
test
pop
fbstp
std
mov
cmp
xchg
mov
cmovns
pop
or
mov
ja
in
rcrb
addr16
stos
mov
data16
xor
std
setg
fnsave
pusha
jbe
xchg
inc
cmp
fdivr
ja
pusha
fsubrs
inc
gs
sbb
fs
int
adc
sub
adc
fistpll
sbb
sub
fsubrl
cmp
sbbl
lods
call
mov
pop
push
add
add
je
xor
or
nop
ss
ret
sti
popa
imul
stos
add
push
daa
jp
lea
jecxz
sbb
sbb
xlat
xchg
add
cmc
mov
in
push
imul
fisubl
and
rcll
je
out
xor
pop
insl
ret
xor
das
rol
pop
sub
shll
cmp
pop
int3
xor
pushf
aad
std
push
clc
dec
dec
es
es
in
clc
sbb
pushf
cli
movl
gs
cmp
repz
rorl
mov
aad
pop
repnz
xor
or
js
mov
int
popf
arpl
lods
xchg
shl
mov
add
pop
aaa
push
iret
sbb
jmp
push
dec
in
mov
cltd
es
push
filds
mov
mov
test
insb
ss
bound
jno
adcl
aas
add
xor
xchg
push
inc
pushf
sub
leave
sbb
cmp
aam
outsb
enter
lret
dec
cmpsl
outsb
repnz
push
fxch
cmc
movsb
pop
jnp
fidivrl
ss
or
sahf
cli
mov
jle
add
popa
mov
lods
int3
daa
push
testl
sub
cmp
repz
dec
and
sti
jno
jns
shll
lock
xchg
out
and
test
sub
push
or
push
xchg
shrl
bound
sub
insb
insb
mov
mov
lret
arpl
out
clc
sub
mov
xchg
dec
mov
into
mov
das
jb
int
int3
lcall
fwait
pop
adc
outsl
sub
add
stos
mov
loopne
fists
adc
add
mov
scas
xchg
jbe
shll
mov
aaa
xor
jmp
out
jl
cwtl
arpl
cpuid
jb
aam
mov
lea
push
outsb
lea
lods
dec
cmp
fstpl
sub
addr16
inc
and
mov
adc
and
testb
pop
and
ret
adcl
mov
lea
fisubrl
add
arpl
insl
fmull
nop
incb
dec
add
dec
movl
andb
aas
jo
push
sub
inc
inc
leave
ljmp
jmp
and
cmp
insl
add
mov
ficoml
cmp
dec
mov
insb
mov
ljmp
jo
fisttpll
mov
mov
and
loope
cmp
loopne
xchg
xor
in
xchg
mov
stc
aaa
movsl
shlb
push
pminsw
inc
adc
push
pop
dec
inc
out
loope
stos
inc
pushf
adc
mov
stc
push
inc
and
fwait
sub
fstpl
xor
push
pop
loopne
gs
fldenv
jge
cmc
daa
cld
xchg
mov
or
lods
nop
xor
push
lock
sbb
rcl
lock
outsb
cmp
test
push
fldcw
pcmpgtd
cltd
mov
sub
jbe
xchg
nop
pop
xor
dec
fwait
movsl
stc
sub
lock
out
movsl
dec
daa
mov
push
sahf
mov
sti
aad
fstpt
mov
ret
cmpsb
mov
mov
inc
gs
push
push
adc
std
xchg
cmp
xchg
mov
pop
andb
loop
icebp
add
hlt
insb
fbstp
pop
jb
mov
sbb
add
sbb
lret
or
test
test
data16
or
into
xchg
mov
sub
lret
inc
nop
mov
jmp
inc
or
push
stos
mov
repnz
and
scas
cmp
cld
cmp
sub
jge
addb
cmp
popf
pop
out
sbb
in
pop
push
arpl
cmovge
xchg
mov
notb
mov
int
pusha
repz
rcr
into
daa
inc
add
mov
rorb
adc
pop
repz
cltd
call
filds
popa
incb
pop
imul
fsubrp
adc
sub
je
push
mov
test
sub
sbb
mov
sub
adc
nop
mov
and
xor
push
sub
cmp
xchg
fstps
inc
push
cltd
jbe
and
xchg
xor
xor
sub
sub
mov
or
dec
shrb
fidivl
test
or
pop
loopne
pop
and
lds
sbb
dec
mov
pop
push
inc
pop
std
add
jnp
fbstp
push
test
bound
imul
jne
lcall
pop
pop
sbb
pushf
enter
orl
cmp
enter
pushf
sub
cmp
mov
push
mov
mov
pop
call
jb
sahf
xor
jmp
mov
das
pop
loop
xor
xchg
push
mov
icebp
jnp
gs
push
push
insb
in
mov
daa
mov
mov
repnz
push
sub
pop
outsb
add
mov
jmp
or
mov
je
lock
mov
mov
inc
fimuls
sbb
mov
pop
loop
mov
xchg
test
pop
xor
cltd
bound
dec
je
jb
jo
gs
adc
lret
orb
lcall
or
push
cmc
xor
sbb
out
cmpsb
repnz
in
ds
test
cmp
jbe
adc
movsb
mov
or
out
lock
mov
cmp
lcall
out
jmp
addr16
arpl
rcrl
arpl
pushf
jbe
cmp
stos
xchg
mov
hlt
imul
ret
notl
repz
sahf
movsl
iret
loope
dec
adc
leave
adc
imul
jo
test
xchg
repnz
xchg
sarl
inc
mov
stc
dec
jle
push
icebp
rorl
andps
movsb
xor
jbe
setne
xor
insb
notl
sahf
shrb
xor
into
jg
aas
outsb
mov
push
adc
cmp
out
sbb
imul
lcall
sbb
jmp
jle
mov
es
lock
adc
sub
shl
hlt
and
cmp
cltd
xor
lcall
repz
sbb
ret
movsl
dec
clc
loope
jbe
outsb
enter
iret
rcl
or
sub
mov
sbb
and
push
sbb
sbb
dec
dec
repnz
pop
adc
ret
cmp
lea
lret
lods
in
xorb
aad
cmp
data16
jg
xchg
ds
mov
fs
adc
and
int
insb
add
in
cmpsl
jp
and
in
loopne
out
jl
movsb
dec
and
out
xchg
in
adcl
mov
fsubp
insb
sbb
repnz
negl
add
sub
xor
rcrb
add
mov
adc
notb
and
inc
pop
sub
test
push
shll
cmp
int3
cmp
dec
shll
in
and
lods
mov
jmp
mov
inc
clc
xchg
pop
hlt
mov
pop
and
cmp
pusha
fildl
ds
js
mov
xchg
cli
fldenv
push
inc
cmp
outsb
mov
fistpll
andb
test
dec
gs
sub
or
xchg
xchg
pushf
mov
stos
mov
cmp
ds
jne
stos
int
fildll
inc
mov
fists
xor
xor
outsl
lea
cmp
sub
shll
mov
add
xchg
inc
loope
sub
jge
das
jns
cmp
pop
das
mov
or
les
sub
mov
inc
addl
or
outsb
into
or
jnp
enter
inc
cli
sbb
xor
and
and
shlb
jne
dec
aas
sti
popl
fisubl
jge
lds
insb
adc
mov
call
rcll
push
cmp
mov
ret
xlat
dec
lock
xchg
mov
filds
out
jne
jmp
pop
sarl
cli
cwtl
fs
dec
mov
loope
mov
cmpsb
dec
mov
icebp
in
sahf
xlat
jbe
xor
shlb
int3
pop
mov
arpl
xchg
mov
movl
lret
inc
mov
dec
test
mov
cmp
fnstsw
xor
sub
pop
xor
push
mov
lret
adc
stc
stos
jno
xlat
mov
aas
bound
repz
sub
mov
jge
outsb
and
mov
mov
loopne
cmp
sbb
in
pusha
rcrb
data16
cwtl
mov
sbb
lods
and
fmulp
lahf
pop
jg
adc
shll
jle
sahf
dec
lahf
out
arpl
ret
mov
and
push
std
cmp
js
cmpsl
aas
cmpsl
push
mov
aad
add
je
sub
inc
jb
out
cs
push
movsl
bound
mov
imul
out
or
out
fiaddl
and
cmpsl
sub
inc
xor
mov
mov
pushf
ret
jmp
fsubrs
mov
movsl
and
mov
lret
adc
mov
cmp
in
jg
sub
adc
mov
mov
fiaddl
push
or
pop
cmp
aad
push
mov
xchg
repnz
aam
or
sub
push
push
cltd
inc
mov
push
test
xlat
clc
push
lods
ljmp
rcrl
cmp
aas
xchg
add
jns
sbb
sbb
in
aam
push
in
addr16
xchg
lcall
sbb
jo
and
scas
inc
in
mov
mov
inc
cmpsb
or
jp
inc
mov
pushf
jl
int
std
or
es
push
mov
dec
pop
aad
inc
pop
bound
pop
and
sbb
lret
add
dec
mov
jle
mov
js
sub
mov
jp
dec
data16
sub
adc
pop
mov
mov
leave
cmpsl
cmp
sub
mov
ret
dec
scas
iret
stc
adc
jle
cmc
mov
incl
push
fwait
out
jmp
aaa
xchg
push
xchg
xchg
popf
stc
sahf
mov
push
iret
pop
xor
sbb
in
bound
pop
mov
mov
sub
mov
idiv
stos
fwait
jbe
and
loopne
test
insb
jl
into
push
sbbl
je
ud2
dec
jg
xor
rorl
ljmp
inc
add
popf
xor
in
andl
out
insl
and
shlb
inc
mov
arpl
pop
dec
mov
fistpl
daa
dec
push
call
adc
jbe
push
hlt
or
mov
sbb
cmp
pop
pop
or
mov
movsl
cmp
imul
mov
mov
into
mov
ret
pop
pushf
and
gs
mov
adc
mov
cs
xchg
xchg
clc
jns
mov
cmp
orl
rclb
cwtl
and
popf
push
int
shll
loope
popf
dec
scas
stos
inc
and
mov
shll
xchg
or
pop
push
imul
mov
fildll
iret
dec
and
les
fwait
addr16
int3
fcomps
or
jp
xchg
push
js
outsl
jecxz
mov
adc
sbb
push
daa
dec
sahf
loopne
inc
lcall
sub
dec
sbb
lret
cmpsl
xor
hlt
ja
ja
xor
cmpsl
out
repz
pusha
and
adc
sbb
insl
ficompl
shrb
push
in
fwait
push
push
icebp
mov
adc
xor
fisttpll
mov
pop
testl
and
lods
movsb
rcl
mov
cmpl
pop
add
imull
or
movsb
nop
jle
sub
xchg
dec
dec
add
pop
lret
add
pop
inc
push
repz
es
inc
sub
mov
js
adc
fadds
or
dec
push
leave
movsl
cmp
arpl
push
movb
pop
mov
lret
and
je
sub
sub
push
lods
sbb
std
popa
clc
pop
lcall
push
fcomp
jle
cltd
pop
stc
pop
lret
xor
test
adc
test
popf
stos
cmp
insl
in
and
mov
jbe
inc
mov
ds
push
in
push
sahf
loop,pt
imul
out
jle
sarl
mov
ja
sub
jp
addr16
lcall
jl
xchg
inc
pop
dec
icebp
testb
cmp
test
divb
jnp
xor
movsl
cmp
faddp
jns
dec
icebp
adc
inc
jns
cmc
push
ret
mov
jmp
mov
inc
cmp
pop
inc
fsubs
lods
xchg
mov
fsubl
lock
mov
sub
addr16
sub
ja
cmp
cli
push
into
sub
mov
jg
shl
sbb
idivl
cltd
add
pop
xchg
shrl
ja
xchg
cmp
jae
lret
push
faddl
xor
xchg
fs
sbb
pop
movsb
aas
dec
int
mov
dec
aad
cmc
push
mov
xor
jmp
cmp
lock
movsl
ret
ffreep
pop
and
lret
or
cmp
jg
out
inc
push
add
inc
movsb
mov
nop
push
filds
xor
jmp
xor
fisubrs
pop
clc
jge
arpl
sbb
mov
inc
lahf
push
nop
andl
in
sarb
xor
push
inc
mov
data16
adcl
push
mov
cli
jecxz
scas
lea
mov
rcrb
popa
xchg
jbe
out
int3
dec
mov
push
jne
das
dec
dec
mov
shrl
mov
imul
pop
xor
in
sub
cmp
mov
ja
roll
cmp
push
inc
pop
shrl
lret
jb
out
test
scas
shrb
or
sub
les
stos
jl
mov
mov
mov
jbe
loopne
imul
pop
loope
xlat
and
and
jle
xchg
sub
add
xchg
outsl
in
lea
fsubrs
ds
inc
rorl
cli
sbbl
loopne
adc
xchg
xchg
loop
pop
mov
pop
push
mov
mov
in
jp
and
lock
push
sahf
mov
xor
or
cs
xchg
cmp
fs
xchg
aaa
inc
adc
lock
xlat
inc
lret
rol
pop
lea
mov
or
dec
xor
testl
push
mov
sbb
mov
inc
stos
cli
push
sub
not
pop
adc
mov
fsubrs
dec
pop
pop
or
push
mov
inc
in
inc
repz
in
orl
aam
adc
rolb
dec
cmp
daa
xor
pop
out
add
shr
pop
cld
xchg
sub
addr16
movsl
decb
filds
test
push
mov
arpl
jae
mov
or
push
ljmp
inc
dec
dec
jae
or
sbb
pop
dec
mov
mov
or
cmp
sarl
xor
js
pop
cmp
lods
sub
push
in
inc
push
js
xchg
loopne
sti
cmc
stc
popf
and
call
add
sbb
mov
lock
outsb
mov
xchg
jge
inc
mov
loopne
pop
inc
push
lods
repz
rorl
pop
call
or
out
adc
lds
pushf
icebp
shrb
addl
dec
lahf
mov
les
and
inc
lods
jo
ret
mov
jle
xor
aaa
insl
out
out
dec
mov
cmpsl
enter
mov
mov
adc
fs
sub
xchg
sub
sbb
lahf
xor
call
or
out
mov
sbb
andl
xchg
lds
pop
cmc
xchg
arpl
mov
sahf
jne
roll
cltd
add
cld
test
and
and
inc
xlat
jle
push
lods
jnp
scas
add
pushf
jae
repnz
mov
pop
mov
cltd
adc
das
movsl
icebp
std
fisubs
pop
les
inc
popa
and
fists
jp
pop
lahf
dec
pop
mov
cmp
push
mov
sbb
cmp
js
adc
mov
shll
mov
fsubrs
cmp
pop
lods
dec
jecxz
aaa
xchg
rclb
call
data16
out
mov
clc
jae
jl
and
outsl
idivb
inc
fadds
xchg
test
test
shlb
xchg
mov
sub
sub
psrlq
mov
jnp
sbb
jmp
mov
mov
clc
sarb
jbe
mov
mov
imul
add
lds
test
sarb
xchg
sub
pop
hlt
xchg
jnp
fdivp
and
and
stos
mov
cmp
idivl
push
out
dec
out
dec
dec
inc
ret
sbb
xor
icebp
pop
movsl
cmp
enter
inc
ret
pop
jbe
dec
add
loop
add
rcrl
add
dec
xchg
add
scas
push
mov
ljmp
sub
test
loop
inc
push
lods
xchg
sub
lock
mov
mov
inc
repz
out
fsts
mov
sbb
jae
dec
cmpsb
inc
push
movsb
cmp
mov
je
movsb
ret
fst
mov
push
enter
or
rorb
fcomp
lods
pop
mov
jmp
in
jns
pop
stos
into
and
jno
pop
loopne
dec
dec
cmpsl
jp
jo
call
adc
in
arpl
pop
hlt
ljmp
testb
jecxz
outsb
in
sbb
mov
xor
or
inc
pop
loope
movsl
movsb
cmp
pop
ret
mov
cmp
jecxz
mov
shrl
ss
imul
adc
sbb
sub
add
andl
es
mov
inc
push
cltd
insb
adc
and
scas
xor
jecxz
nop
daa
jp
repz
pop
outsb
sbb
les
es
adc
mov
outsb
jo
sbb
pushf
xchg
mov
imul
mov
iret
xchg
or
mov
test
decl
jg
lods
pusha
push
insb
imul
mov
xor
repnz
fistpll
jle
fsubl
rcl
rclb
cld
shll
xchg
jmp
mov
cli
addb
or
aad
sub
dec
jl
xor
pop
pop
lcall
adc
cmp
or
imul
in
mov
mov
outsl
and
mov
fldcw
or
mov
xorl
push
or
movsl
add
pop
inc
mov
mov
push
mov
inc
subb
nop
add
lret
or
cmp
jmp
ss
test
and
in
pushf
mov
gs
or
out
add
xor
pop
sub
xchg
adc
inc
in
add
out
push
icebp
and
leave
outsl
sub
test
mov
jb
xlat
sub
std
jbe
je
hlt
push
xor
dec
adc
ret
fistps
enter
cmc
push
dec
out
outsb
xor
sub
enter
cmp
xchg
and
inc
and
mull
ficompl
sbb
adcb
jae
mov
and
clc
cld
jp
mov
push
bound
xchg
mov
sbb
dec
faddp
push
call
out
ljmp
cmpsb
jg
cwtl
mov
sti
xchg
pop
adc
jns
out
mov
sbb
mov
sub
pop
out
cmp
stc
sub
and
mov
jae
cmp
sub
lcall
sub
sbb
sarb
inc
lods
inc
sub
push
scas
fldl
push
cmc
negl
scas
pusha
lret
mov
lahf
mov
mov
je
jnp
mov
sub
test
iret
divl
or
mov
cmpb
mov
lds
xor
cmp
jmp
mov
stc
push
jns
int
js
test
repz
sbbb
and
les
push
pop
popf
stc
mov
mov
mov
addr16
stc
push
cli
jne
xchg
push
sti
xchg
xlat
fmull
cli
popa
and
lret
adc
pop
adc
data16
or
lahf
dec
repnz
mov
dec
pop
push
notb
add
arpl
repnz
inc
add
imul
xchg
insb
mov
and
ret
test
ret
das
sbb
cmp
and
ret
imul
cmp
xchg
adcb
inc
mov
cld
jp
add
or
test
adc
jp
xchg
stc
ret
dec
fdivs
in
cltd
mov
out
cmp
cmp
sarl
ja
fs
xchg
adc
jp
int
lret
ret
daa
xchg
or
add
fimuls
sbb
push
push
repz
add
lea
mov
jg
mov
lock
js
pop
mov
fs
imul
sarb
imul
cmp
jbe
jle
roll
xchg
xor
data16
dec
sbb
out
dec
std
sbb
xchg
push
mov
lods
add
and
shll
movsb
pop
jno
xlat
jmp
push
mov
push
mov
pushf
adc
sub
xchg
pop
fdivr
and
hlt
sbb
xchg
xor
cs
jge
mov
scas
outsb
sbb
data16
adc
jae
call
jle
pop
dec
int3
cmpsl
jle
and
stos
mov
leave
outsl
sub
jg
stos
int
xlat
ret
insb
lret
in
pushf
shrl
mov
fwait
sbb
lret
and
test
lock
mov
cmpsb
sub
push
int
jbe
mov
pop
shll
loop
dec
clc
xchg
pop
add
ret
test
aam
dec
cld
sar
dec
pop
cmpsb
repz
jle
hlt
or
inc
js
inc
scas
into
dec
push
or
mov
sarb
xchg
inc
mov
je
addr16
mov
cld
jne
shr
mov
test
loopne
insl
ja
add
pop
mov
lods
arpl
push
jae
sbb
stos
test
xor
rcrl
ds
mull
fwait
int3
fucomip
not
inc
sbb
idivb
lods
and
stc
adc
cmpsb
cmp
jge
cmp
jb
push
sbb
imul
sbb
cs
test
mov
and
jb
out
sub
xor
sbb
jge
popf
or
jnp
and
mov
aad
in
jge
sbb
push
inc
jecxz
push
in
mov
les
aaa
dec
lods
adcb
into
pop
lods
sbb
push
cmc
cmp
xchg
ljmp
in
mov
jnp
fnsave
movsl
insb
mov
push
or
dec
les
js
fstpl
pushf
test
lahf
xor
add
imul
sub
imul
sbb
or
lea
call
js
jo
push
mov
push
cmove
inc
jnp
std
push
mov
pop
mov
pushf
test
jecxz
xor
sti
cmp
ret
scas
jno
je
lods
push
lods
frstor
mov
push
cli
mov
add
pusha
cmpsl
pop
js
fcoml
jbe
jmp
lret
xor
in
inc
mov
cmp
rcr
or
mov
into
mov
test
adc
les
or
inc
jb
scas
lret
sub
into
dec
popf
loop
mov
inc
lret
mov
dec
inc
add
xchg
daa
lcall
cmp
cmpsb
imul
rorl
mov
dec
push
adc
sub
fbstp
imul
scas
pusha
push
mov
xlat
pop
mov
sbb
ljmp
mov
jae
insl
mov
loopne
ja
fisubrl
sbb
mov
jns
stos
cwtl
xchg
dec
sbb
fwait
or
ljmp
pop
std
aam
lds
jecxz
out
std
pushf
orb
ret
out
insl
sub
dec
xchg
sub
and
mov
cmc
mulb
jbe
cmc
inc
jmp
ljmp
enter
push
icebp
daa
sti
sub
shll
aad
fidivs
jo
push
daa
addr16
sbb
jge,pn
mov
jmp
jp
test
xlat
inc
clc
mov
loop
dec
add
xchg
mov
mov
and
lods
mov
shll
ret
les
xchg
xchg
add
ja
mulb
call
ja
ljmp
push
or
lcall
adc
pop
addr16
insl
jae
nop
adc
pop
fsubr
adc
adc
nop
rcr
ror
imul
out
inc
push
mov
clts
pop
sbb
pop
fcomip
cmp
push
xchg
int3
or
inc
out
cmp
int
mov
push
addr16
leave
sbb
push
sub
push
mov
mov
cmp
mov
fs
imul
dec
dec
aas
mov
inc
push
mov
shlb
fdivrs
adc
popf
pop
test
cmp
aaa
lret
xchg
pop
jmp
insl
sbb
sbb
shlb
mov
jne
xor
mov
push
mov
dec
cmp
xor
xor
push
call
inc
sbb
push
add
es
orb
shl
mov
mov
pop
and
imul
xchg
xlat
dec
lcall
std
aam
push
out
test
pop
daa
jle
xor
into
sub
test
loop
push
popf
dec
aam
cmp
stos
rcr
les
pop
int
fnstenv
mov
pop
movsl
addl
inc
into
es
lahf
lcall
ret
aas
fcom
xor
clc
push
xchg
and
add
mov
mov
sbb
rcrl
loope
decl
sbb
test
add
popw
or
in
test
or
aam
loope
sbb
mov
ja
mov
scas
repz
fsubs
repnz
add
loopne
push
outsl
loop
cmpsb
decl
mov
add
mov
push
mov
loope
xchg
cmp
dec
dec
dec
int
insl
ret
cmp
lds
dec
mov
sti
popa
sub
mov
dec
xchg
outsl
dec
cs
lret
push
ds
repz
rcrb
push
sub
pop
cltd
push
inc
std
mov
adc
stos
fsubs
adc
aam
mov
out
js
mov
les
dec
out
hlt
cmpsb
mull
ret
push
mov
adc
mov
scas
subl
dec
outsl
test
movb
mov
sub
fcomip
fs
test
adc
popf
pop
iret
in
cmp
dec
pop
ds
jo
rol
imul
pop
lcall
mov
jb
jb
and
sub
lcall
imul
and
pop
rclb
and
jge
inc
adc
adc
loope
push
adc
stos
jbe
cmp
clc
adc
inc
sbb
testb
xor
and
adc
sbb
std
jbe
fcomps
jns
fxch
fcmovb
jge
aam
dec
lea
lret
lcall
jp
mov
sub
xor
int
int3
xor
ljmp
shlb
mov
ljmp
or
stc
stc
add
mov
sbb
and
cmp
ja
cld
lods
lods
stos
ja,pt
lods
mov
mov
decb
test
test
xchg
mov
mov
add
cmp
imul
lcall
pop
imul
inc
push
call
mov
lret
movl
jp
mov
aad
insb
pop
and
das
arpl
or
pavgw
aam
dec
ss
lock
mov
mov
xchg
sbb
inc
xchg
repz
adc
in
cmp
popf
push
and
lds
jmp
pop
lea
testl
and
sub
mov
ret
fnsave
fisttps
lret
mov
test
pop
je
mov
jg
inc
cld
inc
dec
push
mov
pop
cmpsb
push
je
aaa
int3
loopne
sbb
cmpsl
rorl
fcoms
cmp
pop
and
mov
insl
in
inc
push
jp
pop
stos
loopne
jmp
sbb
mov
scas
push
inc
adcb
test
dec
add
add
push
leave
sarl
rcrl
je
test
mov
push
mov
push
jmp
inc
rorb
adc
xchg
jp
jo
jb
mov
andb
and
ss
lea
clc
popf
popf
push
inc
jmp
mov
push
inc
xor
mov
sbb
notb
addr16
xchg
inc
test
adc
sub
jae
dec
cmpsb
lock
jmp
aam
and
mov
mov
imul
cmp
pop
add
je
or
mov
push
mull
inc
mov
sub
in
jbe
out
push
movsl
aaa
lods
pop
jmp
inc
jle
fnstcw
faddl
mov
ret
cmp
pop
and
push
add
pop
cmp
cmp
cmp
mov
adc
lret
cwtl
jg
cwtl
pop
inc
adc
ljmp
imul
adc
stos
xchg
mov
lahf
subl
xchg
push
test
or
popf
xor
jl
je
ds
in
dec
icebp
pop
adc
mov
pop
mov
push
xlat
mov
test
stos
hlt
push
aam
sub
fwait
sub
mov
sbbl
jmp
in
sub
or
arpl
lcall
cmpsb
mov
ret
xchg
or
push
mov
cmp
cmpsl
or
test
fbld
popl
jmp
icebp
inc
inc
push
arpl
dec
sub
pop
jo
xchg
das
sbb
mov
ds
stc
add
aad
push
adc
mov
inc
or
int
xchg
aas
fimuls
pop
or
mov
xchg
sbb
pop
jle
add
xchg
cli
ret
std
xor
mov
xchg
je
adc
jge
sub
aas
pop
jmp
mov
or
or
cmp
stc
out
dec
fstl
lahf
ss
iret
andb
push
scas
xchg
and
dec
adc
jb
xor
ja
fwait
arpl
pop
xchg
jae
mov
sbb
dec
shl
push
fbld
scas
shrb
adc
pop
enter
mov
lea
cmp
pop
dec
jecxz
insl
enter
add
xor
push
leave
or
xchg
add
arpl
repz
add
lcall
cltd
out
mov
into
gs
cld
ljmp
and
das
xchg
sub
adcl
adc
test
pop
lcall
jle
scas
es
fcoms
mov
adc
addr16
mov
add
xchg
scas
call
jbe
and
add
sbb
mov
push
jb
push
and
fnsave
ja
pop
inc
inc
mov
pop
or
fcoml
add
inc
hlt
jl
add
jmp
jge
cmp
cmp
pop
push
dec
dec
mov
lods
arpl
int3
loopne
push
loop
dec
xchg
cmpsb
pushf
cmp
push
xor
addl
or
adc
es
pop
das
mov
fabs
add
dec
cmp
rcll
mov
pop
aaa
mov
loopne
dec
xchg
dec
arpl
movsb
imul
xchg
xchg
shlb
int3
pop
outsb
push
pop
lods
push
push
test
testb
jecxz
rep
out
out
sahf
lods
enter
or
pop
fbstp
enter
jb
scas
int3
mov
cmp
into
loop
sbb
cmp
test
int
stc
push
inc
fisttpl
mov
insb
jle
inc
rorb
leave
sbbl
mov
daa
xchg
andb
add
mov
cmpsb
pushf
stos
pop
mov
test
stos
jae
in
xchg
xor
mov
daa
ror
mov
inc
fwait
or
dec
out
adc
inc
inc
sti
dec
repz
imul
scas
adc
mov
and
or
jns
jb
xchg
ljmp
test
inc
jb
xchg
in
repz
in
jne
les
adc
push
inc
imul
xchg
dec
rorb
mov
cmp
mov
clc
loop
jle
fiaddl
add
push
mov
adc
push
std
xchg
data16
add
xor
out
test
dec
shl
jg
lret
inc
int3
mov
and
cltd
lods
incb
data16
sub
insb
sbb
hlt
orb
addr16
repnz
mov
cwtl
outsl
mov
cmpsl
mov
xchg
jmp
outsb
rclb
push
lahf
out
xchg
in
fwait
andb
and
outsl
inc
push
adc
mov
inc
into
int
mov
popa
dec
add
popa
xchg
jne
out
sub
push
movsb
adcl
xchg
aas
mov
mul
pusha
jl
gs
jle
xorps
cwtl
loope
push
fiadds
lds
movsl
cmp
xchg
stc
adc
les
add
loop
xor
xchg
pop
call
ljmp
idivl
sub
imul
cmp
aam
rorl
pusha
lods
add
ret
jnp
out
sbb
adc
decl
aaa
cmpsb
les
push
pusha
push
mov
es
add
cli
mov
mov
jns
stc
insb
daa
pop
das
rcrl
cmp
mov
mov
mov
popf
dec
rcll
ret
xchg
sub
dec
icebp
lods
inc
push
mov
addb
scas
inc
enter
jae
adc
dec
stos
sbb
pop
xchg
xor
pop
lahf
dec
fimuls
sbb
fwait
mov
es
sbb
and
mov
jl
dec
cmpsl
inc
inc
sbbb
mov
and
aas
stos
mov
pop
mov
into
cmpsb
mov
fistps
mov
add
add
test
jmp
cmpsl
mov
cmpsl
push
push
xor
icebp
cld
clc
aad
push
mov
movsl
mov
out
sub
add
push
sbb
mov
daa
ret
sbb
jnp,pn
mov
xor
pop
xchg
hlt
lock
scas
movb
sbb
rcll
or
outsb
inc
fwait
push
mov
inc
cmc
outsb
adc
sarb
sarl
mov
mov
cmp
jnp
fdivs
push
test
into
sbb
mov
jge
leave
jp
mov
cmc
lret
stos
clc
xchg
adc
test
xor
scas
adc
xor
xchg
pop
add
push
mov
shlb
jne
imul
mov
js
imul
add
out
movsb
ja
lcall
bound
sub
push
cmp
lock
pop
and
or
push
mov
push
xchg
fnstsw
frstpm(287
push
lcall
in
xlat
mov
les
mov
inc
insb
add
std
xchg
dec
dec
aam
cmp
dec
mov
scas
and
sbb
je
inc
mov
fistpl
sbb
jmp
sbb
sbb
cmp
bound
inc
adc
mov
and
push
nop
mov
mov
xor
cmpsb
in
inc
jl
enter
push
std
popa
orl
hlt
rcrl
sbb
push
adc
xchg
std
mulb
dec
sub
push
in
orb
push
adc
nop
mov
xor
add
loope
cltd
stos
add
test
jl
or
mov
adc
push
lock
xor
dec
lahf
add
popa
sbb
xchg
dec
dec
stc
loopne
push
push
push
rcrl
out
test
fucomip
sub
loop
xor
popa
jbe
and
bound
adc
pop
test
push
jle
mov
fwait
rcl
stos
insl
xchg
out
xor
xchg
cmp
sbb
add
and
xchg
inc
lock
scas
jno
testb
cmp
faddl
cmp
sbb
cmp
js
mov
shll
fucomp
inc
adcb
inc
and
jmp
ljmp
sub
lock
std
rcll
xor
decb
int
push
inc
bound
fidivl
jae
mov
sbbl
in
cwtl
sbb
lret
out
test
inc
sub
or
cwtl
mov
sbb
mov
ret
repz
fstl
or
scas
adc
dec
cld
je
inc
xchg
mov
jnp
lods
inc
movl
leave
jo
ss
push
insb
in
push
std
inc
test
and
mov
test
in
cmp
or
pop
dec
mov
int3
shll
data16
or
mov
adc
movsl
mov
sub
fldenv
cmp
test
in
xchg
pop
jbe
or
mov
pop
insl
push
sahf
ret
xor
sbb
mov
mov
arpl
setl
push
leave
mov
fcomps
mov
pushf
cmp
test
sahf
push
sub
out
hlt
aam
adc
decb
cmp
inc
stos
imul
jle
leave
mov
sbb
mov
cli
inc
mov
xor
clc
fucomip
cmc
add
addr16
adc
xor
cmpsl
inc
cwtl
into
xchg
loop
adc
xor
inc
negb
jbe
cmp
test
lcall
lds
cwtl
adc
and
fimull
push
sahf
dec
sarb
inc
dec
xlat
xor
cmpsb
push
data16
popf
daa
cmpsb
mov
xor
mov
inc
fistl
pushl
pushf
ja
loope
repnz
sub
daa
push
inc
out
or
fs
fucomi
mov
call
cmp
aam
mov
out
pop
push
mov
jnp
xor
outsb
add
pop
inc
mov
xor
jns
push
and
mov
or
cwtl
mov
je
insb
testb
mov
icebp
icebp
insl
mov
mov
cmp
jp
xor
out
xor
fdivl
jb
mov
icebp
out
inc
stos
adc
add
in
jle
or
add
sbb
iret
cwtl
adcl
add
mov
popf
stc
in
push
rcl
lea
dec
pop
cmp
adc
inc
clc
push
mov
sbb
arpl
dec
scas
push
jmp
int
pop
jp
out
andps
mov
sbb
shlb
add
xor
out
jmp
mov
mov
push
sti
cmpl
mov
les
cmp
sub
push
pop
ja
jg
cmc
mov
cwtl
xchg
xchg
iret
cltd
dec
sub
aad
out
clc
into
xchg
enter
or
add
repz
inc
stos
arpl
and
or
imul
imul
mov
xlat
sysexit
icebp
adc
repz
jg
mov
repz
cs
adc
bound
pop
enter
sbb
popf
jecxz
ja
pop
test
rcll
pop
ret
mov
mov
and
sbb
mov
jl
mov
iret
and
inc
fs
notl
mov
sub
stos
mov
mov
cmp
fldenv
and
fs
outsb
xchg
cmp
out
cmp
aas
mov
cmpsl
mov
add
stc
or
loop
cmp
js
push
push
pusha
pop
mov
xor
cmp
mov
adc
and
popa
sbb
lret
pop
frstor
push
xor
gs
ficoms
inc
mov
stos
jge
and
loopne
pop
and
pop
repnz
adc
subl
add
es
pop
scas
jnp
sub
adc
inc
jl
push
ret
jmp
mov
and
shll
es
stos
fs
xor
aad
ds
cmpsl
testb
movsb
mov
or
xchg
inc
xchg
loopne
adc
adc
and
xchg
mov
out
into
mov
jns
jl
jge
mov
ds
mov
lds
sbb
add
push
push
add
xor
cmp
xor
fisubs
int3
inc
and
or
inc
jle
mov
or
rcrl
push
dec
or
les
jp
adc
lret
mov
sub
inc
sbb
and
dec
dec
adc
cs
pop
dec
movsl
insl
xor
imul
adc
je
lahf
rorl
mov
xchg
in
push
jae
dec
icebp
xchg
cltd
mov
mov
fwait
lret
pushf
lea
ja
jns
outsl
daa
mov
repnz
addr16
mov
pop
das
dec
mov
pushf
rcr
movsl
jbe
ret
mov
popa
mov
or
sub
adc
imul
jno
lret
xchg
das
xor
rcrl
cmp
push
adc
aas
lock
cmp
sbb
add
push
mov
fisubl
or
lds
addl
outsl
mov
push
inc
sar
fs
js
jns
mov
jl
push
add
sub
mov
sub
shr
jmp
or
inc
cli
jae
mov
test
pop
test
xchg
repz
xor
mov
lods
push
fadd
pop
dec
test
jnp
add
ret
ret
mov
push
lods
stos
xor
in
stos
mov
jns
addr16
gs
pop
xchg
xor
loop
mov
jp
movsb
pop
popf
cmpsb
in
add
out
movsb
in
popf
adc
or
sbb
mov
xchg
dec
mov
fstpt
shlb
push
popf
cwtl
jp
xchg
movsb
stc
popf
xor
cs
lods
push
loope
mov
shl
out
js
in
mov
pop
mov
sub
test
mov
mov
rorb
sti
repnz
lret
ret
mov
inc
divl
push
inc
imul
dec
shll
cmp
add
es
out
loopne
or
repnz
inc
pop
mov
and
cld
push
xor
mov
fbstp
pushf
daa
testl
incb
cwtl
xor
mov
push
in
dec
scas
mov
outsl
ret
jb
call
adc
aas
imul
mov
movsl
sahf
ja
inc
or
fbld
mov
in
cld
push
or
ss
iret
daa
xchg
ret
mov
adc
push
pop
insl
sub
in
inc
mov
push
call
sub
mov
popa
lods
lcall
out
jnp
shl
mov
loopne
mov
stc
dec
adc
sbbl
icebp
push
push
cmpsb
sbb
add
cmpsl
js
sbb
add
pop
mov
jae
fs
jnp
dec
fiadds
mov
in
stos
mov
mov
pop
insb
sbbl
repnz
cli
xchg
fisubl
test
loop
rcrb
jg
push
repz
sub
out
loope
pop
rcl
push
jle
and
xchg
add
subb
rorl
stos
pop
cli
inc
inc
sbb
mov
inc
cwtl
jb
mov
mov
pop
ljmp
inc
ljmp
jno
pop
pop
sub
push
fadds
mov
out
test
xchg
mov
rcrb
cmp
jge
sbb
hlt
addr16
dec
push
or
ret
incb
pop
mov
pushf
divb
jle
ja
and
rclb
xor
xchg
adc
dec
cmc
testl
dec
dec
cli
cmp
jnp
mov
test
and
jge
imul
pop
dec
pushf
js
sbb
fs
rclb
adc
push
je
inc
jns
cmpb
mov
mov
pop
lea
dec
inc
ss
xchg
pop
int
cmp
pushf
add
and
adc
mov
sub
xchg
jmp
and
xor
call
mov
xor
fnstcw
mov
dec
scas
test
xchg
add
jl
jmp
jbe
pushf
lret
lret
mov
rolb
shll
jnp
cwtl
pop
push
ja
push
fcoml
lods
and
ja
popa
out
out
in
dec
cmp
subb
jbe
aaa
nop
addr16
pop
repnz
sti
out
aam
cmp
in
lds
popa
jecxz
xor
pop
add
inc
sbb
scas
inc
dec
jnp
jno
out
mov
dec
test
lods
xor
inc
add
mov
fbstp
add
jmp
scas
in
js
in
test
and
call
push
aas
dec
sub
in
push
xchg
insb
mov
inc
xlat
icebp
stos
xchg
std
lods
std
push
loopne
aaa
add
cmc
add
xchg
out
mov
push
and
in
ss
xor
fnstcw
in
cmpsl
aas
adc
in
leave
mov
push
push
xlat
jns
pushf
loop
inc
or
xchg
lea
test
and
mov
lods
lds
cmc
jns
adc
inc
movsb
shlb
jmp
mov
fwait
sub
add
popa
sub
push
mov
icebp
ja
iret
rcl
ss
cmp
jbe
mov
fcos
inc
xchg
lret
fsubl
lret
fdivrp
ret
mov
in
jmp
sbbb
pusha
mov
test
inc
clc
adc
lahf
jnp
inc
pop
mov
and
enter
pop
inc
mov
sub
pop
and
sub
aam
jno
sbb
popf
loopne
adcb
add
into
loopne
sub
incb
jge
int3
adc
inc
lds
jp
xor
xchg
addl
pop
pop
cmpb
sub
bound
dec
pop
out
mov
scas
push
inc
addb
insl
mov
add
pop
fbstp
add
xor
pop
out
rol
inc
arpl
jbe
push
test
or
call
aad
repnz
adc
aaa
mov
adc
and
sub
aas
andl
pop
lds
xor
add
xor
and
lods
sbbb
scas
mov
insl
sub
pusha
into
movsl
xchg
pop
sub
out
xchg
pop
aas
in
cmpsl
dec
test
rcl
sbb
mov
cmpsl
cltd
pop
jbe
int
add
and
cwtl
ds
sub
push
cmc
lret
mov
mov
jle
mov
xchg
aam
sahf
scas
xchg
pop
pop
mov
fucom
jle
ja
xor
mov
les
sbb
cmpsb
push
push
fadds
cmp
cwtl
pop
out
leave
and
repz
sub
lea
fdivr
sahf
rclb
xchg
mov
pop
pop
jp
mov
mov
push
or
xchg
pop
jb
cwtl
stc
test
mov
sbbb
cmc
inc
pop
sub
and
jae
rcl
push
jno
xchg
ds
ds
fnsave
gs
mov
xchg
cmp
sahf
jp
rcrl
sbb
ficompl
cltd
mov
xchg
dec
sti
or
push
pop
lret
xor
xchg
adc
cmpsl
cli
pushf
je
push
lret
jo
std
aaa
jle
push
lret
clc
push
xor
out
push
test
enter
mov
jno
xorb
xor
and
jge
push
cmp
jg
ljmp
cmp
sub
lock
xlat
add
inc
scas
in
fld
mov
and
xor
dec
add
pop
shll
dec
cmp
call
inc
cmp
rcrb
loopne
mov
xchg
testl
dec
and
jecxz
add
jmp
addl
inc
jnp
xchg
pop
add
outsl
cmpl
mov
inc
sar
mov
sbb
jae
loopne
setne
xchg
cltd
orb
mov
or
xor
shrb
mov
add
fmuls
mov
dec
les
insb
out
or
jmp
sub
mov
cmp
xchg
inc
sahf
add
sub
cmc
sbb
add
xor
sub
cmc
mov
pop
push
push
xor
fwait
mov
inc
ss
movsl
movsb
or
imul
movsl
lock
jnp
movsb
addb
pop
cmp
xchg
int3
pop
mov
mov
add
sbb
xchg
adc
outsb
dec
ret
pop
fwait
pop
mov
push
ja
inc
movsl
clc
mov
test
xchg
addr16
iret
cmp
stos
leave
xor
test
jge
lds
pusha
loope
in
jp
add
xor
or
data16
adc
mov
lcall
sub
les
or
lahf
pushf
jmp
clc
loop
dec
adc
add
sbb
adc
xor
jl
test
cmp
sti
mov
lret
inc
pop
pop
outsl
add
nop
out
jp
add
inc
movsl
pushf
add
xstore-rng
cmpsl
ret
es
out
into
fwait
popf
mov
dec
test
mov
jle
mov
lds
xchg
add
and
push
xchg
cmpsb
xlat
mov
dec
pop
xor
sbb
lock
jle
lods
arpl
cltd
push
mov
jmp
xchg
mov
aad
std
push
movsb
sbb
sbb
cli
fisttps
push
sarb
dec
mov
gs
or
aam
cmpsb
loopne
cmpsl
sbb
cs
sub
scas
push
jne
push
and
xchg
aad
stos
dec
aas
fwait
push
movsl
out
test
js
adc
mov
addr16
enter
imul
lahf
popa
and
fstps
mov
sarl
jnp
mov
imul
js
ss
movsb
inc
ljmp
fisubrs
in
dec
sub
movsb
stos
or
push
cmp
loope
pop
mov
dec
xor
es
pop
lock
lods
mov
scas
cwtl
add
jmp
orb
and
and
cmp
pop
ja
xor
or
aam
popf
pop
imul
pop
cmc
mov
adc
jge
je
mov
aaa
int
dec
rolb
idivb
jmp
sbb
add
jae
jecxz
adc
xchg
pop
jp
cmp
imul
clc
les
jno
daa
cld
fcoml
sub
shll
outsl
fistl
pop
out
add
or
aam
in
je
dec
jno
jle
std
xchg
ss
mov
sub
mov
mov
dec
in
xorb
lock
or
adc
and
push
stos
iret
mov
testb
pop
sbbl
and
pop
mov
cmpl
loope
add
push
xchg
dec
bound
inc
xlat
addr16
loope
mov
xchg
adc
scas
jp
mov
jl
insb
je
jp
jle
adc
pop
push
cli
push
push
fistps
outsl
loop
addps
sbb
push
pop
adc
or
cmp
js
or
inc
inc
pushf
cld
icebp
mov
leave
test
sub
jg
pop
cmp
daa
push
repz
icebp
mov
pop
enter
pop
and
test
mov
mov
ret
add
xchg
stos
and
in
mov
inc
fmul
arpl
mov
ds
xchg
fwait
and
test
ljmp
jle
lods
sub
sub
and
mov
jbe
mov
inc
xchg
and
ds
mov
add
adc
clc
es
sbb
mov
packsswb
lods
and
sti
or
or
cmp
bound
pop
decb
inc
jbe
xor
jg
adc
js
add
popf
and
dec
dec
mov
les
mov
icebp
jo
in
push
add
mov
popf
and
imul
das
pop
push
add
add
xorl
out
scas
popw
call
mov
jo
mov
fdiv
call
jecxz
scas
stos
pop
push
xchg
shll
jle
iret
jb
jle
cmc
pop
push
and
mov
loope
jp
mov
cmpsb
std
icebp
mov
movsb
lds
dec
or
popf
pop
inc
xlat
lock
adc
lds
xchg
mov
or
shll
ficoml
mov
pop
sti
movsl
in
mov
mov
push
fdivr
mov
shrl
sarb
lret
xlat
xchg
je
sbbl
popa
jns
jb
sbb
sub
call
ficoms
push
xlat
gs
pushf
and
dec
in
mov
sti
xchg
sahf
dec
sbb
mov
andb
push
sub
pop
out
movl
jo
push
cltd
repnz
ret
jl
ja
rcll
sbb
sbb
push
mov
inc
pop
scas
mov
xchg
jb
or
pop
xor
jne
iret
movsb
mov
jge
rcl
daa
outsl
add
inc
mov
leave
popl
push
iret
pop
xchg
rclb
push
fwait
mov
popa
add
loop
xchg
clc
movl
inc
lea
in
sbb
cmpsb
pop
mov
aam
inc
test
repnz
jecxz,pt
mov
mov
bound
test
mov
arpl
imul
sbb
pop
cmpsl
inc
in
mov
loope
xor
mov
mov
dec
test
adc
arpl
push
mov
mov
jne
xchg
push
in
xchg
daa
cltd
jle
es
push
jae
xchg
gs
test
mov
test
std
loopne
jmp
stc
sub
and
in
hlt
pop
test
add
lcall
in
xor
jp
jno
divl
xor
add
lea
call
cld
xchg
aaa
pop
or
pop
lahf
mov
pop
pushf
popa
sub
jno
leave
cmpsb
in
jae
sub
sub
in
mov
movsl
mov
inc
lea
mov
jb
ss
adcl
rcrl
loope
insb
pushf
mov
or
ds
cmp
inc
testb
ret
push
scas
subb
mov
mov
inc
push
iret
fninit
repnz
lcall
nop
pusha
push
xchg
push
leave
mov
int3
scas
xor
cli
ss
jne
outsl
std
in
xchg
cmpsl
pop
xchg
stos
ds
mov
sbb
lods
jo
and
sbb
push
sbb
sahf
rolb
cmp
pushf
subb
inc
ljmp
sti
pop
mov
add
inc
lahf
jp
decb
add
imul
loope
cmpsl
push
test
push
inc
das
pop
cmp
lret
push
cmpsb
dec
or
inc
xorb
jmp
push
mov
fwait
xchg
inc
push
adcb
ret
out
jb
clc
jno
cmp
js
xchg
shrl
in
mov
mov
insb
mov
cmpb
sub
cmp
test
push
das
push
cmpsl
shrb
pop
mov
mov
out
adc
cmp
xchg
dec
push
jmp
and
jb
jbe
ret
adc
add
push
xor
sub
mov
rcrl
fidivl
adc
xor
stos
or
mov
inc
insb
fs
jae
mov
cli
fdivrl
jge
add
push
or
idivl
fisubl
rol
aad
mov
inc
fsubl
adc
push
leave
jnp
shr
xor
in
pop
and
or
xchg
adc
in
mov
mov
sbb
jns
xor
fmull
movsl
adc
xor
xchg
xchg
lods
test
jp
cmpb
sub
xor
mov
cmp
out
gs
or
rorl
sbb
imul
movsb
cmpsb
inc
inc
fisubl
enter
dec
mov
fmull
outsb
or
leave
jne
pop
xor
cmpsb
xorl
cld
pop
inc
test
addb
into
or
repnz
ljmp
int3
jge
dec
mov
in
or
leave
add
mov
cmc
adc
jmp
dec
ss
mov
or
loopne
inc
pop
fstpt
pusha
mov
push
mov
jmp
and
sahf
mov
xor
lea
push
or
cmp
pop
call
clc
in
ljmp
mov
cmpb
addr16
xchg
add
add
xor
cmp
jae
cs
dec
test
inc
out
mov
bound
jle
pop
rep
in
test
dec
orl
adcl
inc
mov
lret
cmovbe
jns
jnp
test
xor
and
int3
xchg
arpl
cmp
ret
and
sbb
sbb
xor
aam
movsl
pusha
push
pusha
mov
pop
roll
outsl
testb
ret
bound
testl
xchg
mov
mov
loopne
xor
sbb
jmp
xor
inc
inc
mov
jae
je
flds
fs
repz
int
push
les
xchg
hlt
push
fists
adc
in
cltd
inc
inc
inc
mov
push
ja
jmp
ficoml
bound
fcompl
ret
or
dec
data16
jne
mov
adc
es
and
pop
stos
inc
mov
jge
mov
or
out
call
sbb
mov
sbb
xchg
inc
sbb
aaa
mov
or
ss
lock
scas
adc
mov
lret
test
and
push
movb
or
sub
das
inc
sub
inc
bound
sub
adc
sarb
bound
inc
or
mov
mov
cmp
mov
jp
fisubrs
jg
addb
pop
and
arpl
jb
icebp
mov
dec
js
cs
sti
push
popa
push
add
pop
mov
add
mov
xchg
sahf
xchg
xor
notb
fs
pop
fists
jl
jo
hlt
fisttpll
outsb
cmp
inc
ds
or
loope
shlb
popa
or
insl
das
aad
nop
jnp
jno
cmp
in
pop
imul
outsl
inc
or
mov
lahf
pop
das
dec
and
pop
insl
or
addl
imul
in
lret
xchg
xor
in
movsb
test
push
add
test
mov
negb
jne
pop
push
dec
out
cld
push
or
lahf
xor
aaa
fiaddl
scas
pop
repnz
lret
push
add
orb
stos
std
mov
ljmp
xor
fchs
stos
arpl
aas
add
mov
sti
and
ss
dec
lret
movsb
or
inc
movhps
fdivs
rorl
adc
outsl
jnp
in
inc
out
add
xchg
frstor
inc
lgs
xchg
mov
bound
adc
or
fsubrl
iret
xor
clc
scas
mov
cmp
and
scas
test
scas
mov
xor
mov
stos
xor
push
popf
cmp
mov
aaa
cmp
lcall
repnz
dec
ja
mov
mov
or
add
lods
jle
in
shl
pop
mov
fists
mov
movb
stc
xor
adc
sub
mov
jnp
mov
aas
nop
int
stos
aad
sub
inc
jmp
mov
fists
movsl
gs
dec
ja
shlb
cltd
dec
loope
enter
jns
shrb
decl
mov
pushf
ret
hlt
mov
xlat
push
and
mov
mov
cmp
jmp
les
aad
dec
fbld
mov
out
data16
or
mov
sub
aad
in
stos
mov
fisubs
sahf
cld
adc
dec
inc
fstl
sub
mov
mov
jg
je
mov
jge
lret
pop
in
inc
push
add
adc
adc
data16
or
mov
jle
mov
mov
dec
cld
inc
in
mov
dec
xchg
sbb
mov
sub
adc
jecxz
inc
push
sbb
call
sbb
push
in
sub
fadds
je
and
push
xchg
inc
iret
jb
or
push
inc
fwait
lock
push
insl
pop
cmp
adcl
lds
mov
dec
lret
cld
jo
roll
dec
dec
fnsave
fstl
int3
fs
ljmp
mov
jne
push
cwtl
push
and
shrl
int3
sbb
gs
jae
sbb
jo
into
loope
sahf
push
je
or
or
mov
out
int
bound
lahf
fwait
sub
es
imul
mov
push
movsb
les
les
out
xchg
inc
decb
stos
insl
add
mov
mov
lret
ja
cld
push
int
jae
push
fcoms
sarl
or
xorl
pusha
stos
scas
mov
imul
cltd
sub
out
adc
adc
andb
ss
push
test
adc
push
lcall
inc
push
test
mov
xor
jg
and
dec
and
sbb
dec
repnz
pop
xor
dec
cmpb
mov
xchg
insl
int3
dec
lahf
movsl
mov
pusha
in
scas
jb
push
idivl
or
jns
cli
add
pmaddwd
cmp
push
push
xor
sbb
mov
rolb
call
hlt
addr16
mov
push
in
sub
cli
xor
imul
xchg
jns
sub
loope
jle
or
sub
nop
add
sbb
dec
mov
jp
xchg
cmp
pop
xor
test
adc
jns
rcr
mov
cmpsw
out
push
cmp
ds
pop
push
inc
nop
add
inc
sbb
repnz
jb
leave
or
stos
adc
mov
js
popf
inc
add
xor
bound
add
jl
fwait
daa
pop
dec
add
movsl
and
or
sti
roll
jle
mov
addl
xlat
scas
fwait
repnz
clc
push
shrl
pop
fwait
repnz
call
fisubl
cmp
lret
sub
test
push
mov
out
arpl
mov
ficoms
fiadds
mov
out
lret
add
into
lret
jg
adc
and
rol
rolb
dec
pushf
xor
js
xchg
pop
inc
cmpsl
sbb
sbb
negl
das
pop
fwait
mov
dec
insb
js
push
std
cltd
jg
les
leave
cld
adc
and
add
inc
mov
scas
test
aam
add
cmc
scas
inc
pop
out
adc
shrl
cld
lds
mov
jno
std
mov
push
mov
sub
mov
push
jns
add
enter
inc
xor
std
mov
mov
popa
or
insb
popw
mov
adc
mov
mov
icebp
imul
fs
or
jns
jmp
pop
pusha
or
subl
fsubr
add
mov
popf
xor
push
subl
add
stc
scas
lret
fstpl
xor
xchg
mov
xor
add
in
push
notl
jl
sub
mov
push
loop
inc
sub
and
aad
jnp
stos
pop
aam
inc
int
xlat
js
jl
add
push
cmp
and
mov
push
cmpsl
add
cmp
pop
scas
mov
mov
mov
cli
cmp
das
pop
or
test
lret
arpl
sti
je
out
push
pop
mov
out
ss
or
data16
nop
in
icebp
dec
test
mov
test
loop
xor
push
hlt
xor
fs
adc
xchg
mov
push
movsl
lds
sahf
ss
shrb
and
sahf
xchg
jno
mov
ss
jae
andl
psubq
xchg
and
cld
pop
pop
sbb
add
pop
ret
adc
adc
out
pop
cmpsl
and
lods
mov
ret
cwtl
push
outsb
fistpll
pushf
push
pop
cmpsl
sbb
sub
in
jecxz
or
mov
add
dec
lahf
dec
push
jno
inc
in
rclb
sbb
sbb
cmp
imul
pusha
cltd
sub
das
insw
shlb
add
ljmp
jns
cmc
cmp
pop
xchg
mov
sub
mov
sub
ret
movsl
sub
sahf
xchg
adc
clc
out
je
xor
ret
jg
fwait
xor
inc
les
and
push
adc
cmpsb
push
insb
mov
xchg
cld
push
jle
mov
jno
lret
scas
test
xchg
stos
mov
ss
mov
stos
sbb
popf
xorl
lahf
inc
fimull
sbb
es
or
jb
ja
in
les
push
outsl
dec
jne
or
pop
shl
fistl
popa
test
xor
mov
add
or
outsb
sub
sbb
dec
mov
xor
lahf
pop
dec
add
sbbl
sub
es
pop
and
sti
in
sub
mov
in
test
out
imul
dec
cmp
imulb
adc
and
adc
sub
fisubrl
jg
icebp
pusha
popa
dec
popf
sbb
inc
push
jo
imul
mov
xor
push
cli
adc
mov
jo
dec
cs
adc
push
into
cmp
std
push
outsl
pop
cmp
in
cmp
orl
dec
fiaddl
fistpl
pand
cltd
mov
pop
cli
sub
mov
mov
out
add
imul
lcall
mov
pop
push
jno
pop
lds
aaa
jge
mov
cmp
aaa
push
mov
add
mov
xchg
dec
pushf
adc
mov
dec
lods
in
mov
sahf
call
add
les
std
and
lret
std
mov
fucom
xorl
or
cmp
outsb
or
jae
cmc
dec
sarb
inc
in
lods
fs
push
xchg
push
cs
push
test
xchg
inc
inc
xchg
cs
movsb
jge
fldcw
inc
imul
enter
sub
sarl
fidivs
fbstp
std
addl
test
lret
adc
call
fadds
ljmp
fbstp
jl
ja
push
sub
push
inc
sub
out
insb
dec
out
sbb
lahf
cmp
outsl
xor
rorl
mov
adc
sti
lret
in
push
mov
jl
addr16
and
push
pop
shlb
imul
andl
and
stc
out
out
repnz
aam
fwait
push
push
adc
sub
fdivs
push
gs
mov
orb
jg
pop
ret
adc
sbb
aas
js
mov
cmp
dec
out
jg
mov
cmc
mov
sbb
cmp
popa
cmp
or
stos
adc
mov
clc
xor
sbb
dec
pop
lock
and
xchg
repnz
in
clc
and
cpuid
xor
fwait
ret
mov
iret
jle
movsb
mov
jl
dec
xchg
je
js
inc
xchg
std
jo
xchg
jne
les
fcmovbe
sub
mov
xchg
test
stos
xchg
sub
mov
jne
lds
mov
into
lods
sub
popf
addb
fwait
fidivs
xlat
mov
aad
mov
jmp
dec
add
xchg
pop
or
and
or
cld
cmp
xlat
xor
into
lock
pop
or
shlb
scas
shrb
mov
lds
adcl
xor
xor
in
repnz
sti
sbb
inc
test
test
pop
icebp
pop
fildl
jle
or
adc
rol
cmpsl
cmp
jg
adc
inc
pop
dec
je
xchg
insl
sbbb
inc
inc
movsb
sbbl
or
mov
cmp
push
pusha
inc
push
xchg
jno
aam
mov
push
imul
cltd
inc
test
inc
mov
cltd
xor
dec
cmc
xor
mov
das
hlt
mov
mov
inc
xor
aaa
ret
or
pusha
push
cmp
mov
out
jo
int3
xor
lret
cld
addr16
mov
imul
cmp
rcl
rcll
loop
push
ja
les
shrl
inc
pop
shlb
fdivl
test
sub
sbb
repnz
jns
push
sbb
bound
jp
sbb
sbb
push
dec
pop
push
pop
cmp
xchg
out
arpl
lcall
sbb
shll
loop
xor
sub
jno
ror
imul
jecxz
mov
flds
xor
or
pop
stos
inc
inc
fidivs
push
gs
data16
stos
mov
pop
cmpsb
cmp
pop
mov
dec
cmpsb
inc
jb
mov
xchg
sub
pop
cmp
fisubs
mov
sbb
cmp
iret
test
inc
push
xlat
dec
and
ss
jge
xor
mov
cli
test
mov
jle
inc
push
and
mov
jo
push
movsl
fs
fdivrs
aad
sub
outsb
lods
jmp
push
push
and
push
push
push
push
std
push
sbb
xchg
jl
outsl
fcomps
out
ja
jns
fisubrl
or
dec
lret
mov
rcpps
cmpl
fwait
enter
mov
leave
xor
scas
xor
push
push
inc
sbb
orb
arpl
jnp
clc
push
mov
sbb
or
push
push
mov
mov
sub
sahf
mov
mov
daa
nopl
sbb
arpl
cmp
jne
xchg
and
cmc
rcrl
out
nop
fistpll
push
lock
xor
in
adc
inc
inc
loop
adc
clc
mov
jne
xchg
psllw
imul
lcall
and
dec
test
repz
push
jno
repz
fs
cmp
dec
inc
fcoms
enter
xor
push
daa
sbb
call
jge
in
or
push
cmpsb
sub
jns
les
scas
cmp
jns
rclb
xor
mov
or
pop
cmpb
and
shlb
sbb
mov
dec
inc
mov
cmc
ja
push
mov
lret
sarl
mov
xchg
sub
mov
mov
mov
fildl
add
popf
sti
stos
push
adc
jo
ss
push
pushf
inc
dec
fsubr
push
push
jo
sub
test
inc
es
push
jae
inc
int3
rolb
aas
lea
sbb
push
mov
in
cmp
outsb
cmp
jp
xchg
dec
loopne
cli
cld
xchg
icebp
add
sub
lods
sub
cmp
js
adc
add
dec
pop
sarl
loope
stc
add
pop
aas
aaa
aas
cmpsl
lods
ficomps
fistl
mov
loope
fs
hlt
js
add
jp
popf
scas
inc
pop
js
inc
lret
stos
inc
sbb
fwait
cmpsl
in
inc
pop
xor
jg
loop
add
dec
push
sahf
cmp
xlat
shlb
out
pop
cmc
imul
rol
adc
sbb
inc
push
jg
nop
mov
fwait
push
out
xchg
adc
imul
out
dec
mov
cmpsb
xchg
cwtl
push
jmp
push
pshufw
dec
stos
in
dec
cmpsb
and
cmpsb
dec
lods
inc
jle
scas
push
ret
add
sub
pop
dec
jns
add
jg
pop
and
or
rep
inc
gs
mov
inc
xlat
push
mov
popa
arpl
and
jbe
pop
mov
xlat
test
jbe
adc
daa
pop
sti
ds
mov
mov
iret
jns
cmp
subb
pop
stos
mov
cmc
in
lret
jb
push
movsb
inc
mov
fcoml
clc
dec
repz
inc
loop
adc
popa
mov
inc
push
pop
enter
lds
mov
add
and
sbbl
xor
adc
inc
mov
mov
shl
sahf
cmp
xchg
aad
mov
cmpsl
daa
adc
xlat
lcall
es
xchg
pusha
ljmp
sbb
stc
sub
cmpsl
out
xor
mov
jle
test
xchg
jle
hlt
mov
add
inc
xchg
xor
imul
ja
lods
daa
mov
in
int
ljmp
data16
adc
outsb
sbb
popa
dec
nop
pop
sub
jno
cltd
inc
xchg
mov
xchg
dec
adc
or
cmp
push
jmp
mov
stos
and
jb
test
sub
out
xchg
jne
popa
hlt
jns
adc
iret
xor
jmp
jmp
sub
xlat
clc
jae
test
dec
dec
xor
pop
dec
or
cmp
insl
clc
clc
fcoms
xchg
jb
jb,pn
shll
pop
lret
movl
xlat
pushf
out
add
fwait
adc
imul
addr16
xor
sbb
mov
cmp
mov
in
fucom
fwait
jne
inc
cmpsl
mov
mov
mov
and
adc
inc
ret
punpckldq
insl
adc
adc
mov
inc
les
jnp
outsl
and
addr16
push
xchg
sarb
popf
leave
dec
aas
scas
shrl
push
mov
in
xor
push
push
xor
scas
sub
sar
cmp
push
dec
out
mov
cmp
push
mov
sahf
inc
sub
repnz
and
outsl
aam
inc
fimull
adc
fdivs
xor
adc
jns
pop
sbb
lea
lods
mov
rcl
mov
pop
jno
orl
jo
xor
xchg
rcll
inc
pushf
and
addr16
adc
filds
sub
or
nop
add
fsubp
xchg
imul
jge
ds
push
mov
cmp
jg
inc
std
jnp
adc
xchg
pop
outsl
out
movsl
mov
pop
dec
mov
fs
add
xorb
pushf
adc
incb
add
inc
cmp
decl
xlat
daa
lahf
push
out
mov
cmp
inc
and
lds
or
into
rcr
fldt
bound
shlb
aad
pop
xchg
sub
mov
jle
cmpsb
scas
js
inc
jno
sub
es
jno
out
mov
out
and
adc
lods
push
sarb
repz
adc
data16
js
dec
in
and
xchg
push
pop
push
fnstsw
dec
add
in
test
cmp
push
cmp
xchg
cmp
pop
add
mov
stos
test
sbbb
pushf
mov
xlat
jg
mov
rolb
dec
loopne
add
mov
push
sbb
jbe
int3
dec
fs
arpl
inc
popf
adc
ljmp
inc
fmuls
outsb
in
mov
adc
nop
dec
shll
scas
push
xor
or
add
outsb
jnp
mov
mov
sub
and
push
fldt
ror
cmp
lret
movsl
ficoms
push
jl
dec
inc
sub
push
inc
xor
inc
jecxz
sbb
lea
dec
or
stos
dec
fadds
hlt
test
mov
vhaddpd
xor
lcall
and
cmpsb
mov
outsb
jl
sub
insb
push
add
jbe
jne
push
cmpsb
jnp
push
push
cltd
sub
mov
dec
push
insl
mov
dec
jmp
jecxz
dec
xchg
insl
movsl
inc
sub
into
mov
add
push
es
jo
aad
push
jmp
enter
rorb
push
or
outsl
roll
mov
sahf
mov
cmpsb
mulb
das
or
out
push
sbb
scas
mov
push
pop
push
negb
pop
mov
mov
rcrl
out
dec
xchg
mov
test
test
mov
mov
call
loopne
sbb
inc
pop
loope
movsl
int
adc
aas
ljmp
call
add
leave
dec
psubq
dec
mov
add
sbb
iret
inc
inc
sub
jne
sbb
rorb
andl
or
cwtl
cs
jmp
jbe
daa
adc
rolb
mov
mov
cmp
jge
dec
out
dec
xor
testl
pop
xchg
xor
jbe
adcb
out
sbb
mov
sub
jo
arpl
pcmpeqw
sub
repz
mov
in
mov
mov
jnp
repz
and
aas
mov
fdivrl
ss
inc
scas
outsl
cmp
push
movsl
and
pop
scas
pop
jb
scas
sub
cmp
xlat
rcrl
push
mov
cmp
lahf
jae
fildll
inc
pop
scas
ss
sub
inc
mov
in
cmp
daa
xchg
data16
test
push
sub
lods
shlb
pushf
dec
adc
mov
shrl
loop
pop
mov
rol
sbb
jnp
repz
ret
mov
testb
inc
and
mov
movsl
lock
fcomp
inc
out
inc
push
inc
lock
inc
and
push
mov
push
clc
jg
repz
mov
jns
or
fs
sub
sbb
fwait
out
xchg
mov
imul
sub
test
xor
mov
add
rol
jmp
in
sbb
ret
add
sahf
jbe
push
stc
xchg
push
xchg
iret
jge
pop
js
test
sahf
out
shll
mov
inc
insb
mov
xlat
loop
mov
sub
aas
pop
mov
loopne
sbbl
mov
mov
cmp
or
loope
sbb
sub
cmp
pop
push
mov
jp
clc
jecxz
idivl
add
cmp
test
jb
pop
mov
rol
jo
push
out
mov
in
add
fdivp
cmc
dec
push
inc
out
cmpsl
aas
pop
inc
dec
dec
in
mov
stc
jp
cmp
jne
mov
cld
lcall
in
mov
hlt
pusha
loop
std
xchg
shl
out
add
mov
push
mov
mov
cli
rcll
sub
sbb
out
or
popa
mov
jae
adc
scas
cltd
std
xor
neg
fimull
pusha
mov
add
dec
mov
xchg
stos
xchg
imul
xchg
mov
xor
fstl
push
add
es
out
xor
pop
cmp
lahf
daa
or
inc
jb
sub
mov
sbb
fcmovnbe
int
pop
inc
inc
pop
cmp
mov
int3
xchg
cmp
int3
mov
sbb
xor
data16
sahf
in
cmp
das
sbb
and
aas
xchg
addr16
pushf
in
mov
and
out
sub
shlb
cmpsl
pop
pop
push
jg
cmp
daa
pop
xor
push
mov
xchg
push
sub
pop
jo
dec
add
push
jno
ss
mov
pop
adcb
sti
push
inc
lods
xor
aad
icebp
mov
and
in
or
or
test
lods
pop
mov
push
mov
aam
and
stc
or
mov
rolb
or
push
stos
daa
ds
cwtl
bound
sub
mov
sub
pop
lock
jae
and
cli
add
mov
test
sub
loopne
outsl
loop
mov
gs
pop
sbb
push
push
push
aas
adc
inc
inc
xchg
lock
mov
sub
daa
pop
stos
cmp
jp
fidivrs
jmp
sbb
push
ret
push
lret
mov
sbb
fwait
add
in
daa
fucomip
sbb
aas
push
sti
adc
or
dec
xor
pusha
out
test
cmp
inc
cltd
cmp
pop
adc
mov
inc
mov
les
xchg
adc
dec
inc
fcmovne
mov
mov
xchg
jo
mov
mull
fdivr
adc
cltd
cmp
lret
jecxz
clc
bound
pop
sub
cld
hlt
aaa
insb
addr16
in
inc
jmp
mov
pop
aaa
repz
ds
loop
bound
addr16
mov
iret
sbb
ret
rorl
lea
push
xor
lock
push
xor
fldcw
in
imull
push
aaa
pusha
jecxz
mov
cmpsl
int3
or
pop
add
cmp
and
cmp
outsl
rcl
repnz
pop
ret
std
ss
out
mov
lock
sbb
mov
push
xchg
inc
or
sub
fisubl
les
fdiv
or
push
lods
pop
lock
loop
cltd
adc
or
dec
or
lret
outsl
push
js
lret
cmp
cwtl
mov
out
scas
aam
dec
push
repnz
fsubl
jns
add
push
add
call
dec
pop
inc
and
out
and
test
cltd
idivb
pop
cmp
pop
mov
pop
aaa
push
test
cmpsb
sahf
mov
xor
cmpsb
lcall
mov
add
sub
xchg
test
xchg
filds
mov
xor
test
dec
aaa
cmpsl
mov
loopne
ret
push
push
cmpsb
je
xlat
insb
add
or
inc
scas
add
pop
imul
mov
cmp
pop
jg
cmp
subl
xor
das
sti
pop
hlt
mov
push
outsb
aad
data16
arpl
outsl
push
jb
or
cltd
jno
stc
push
loopne
nop
dec
inc
mov
mulb
testb
or
sub
xchg
mov
push
stos
xchg
insb
pop
loope
lea
test
mov
inc
out
add
stc
sub
addr16
aam
cmpb
jle
adc
gs
arpl
rcrl
pop
ljmp
sub
and
sbbl
push
jg
mov
jnp
arpl
xchg
adc
outsl
test
lcall
and
sarl
iret
cld
xchg
xchg
adc
movsl
sbb
add
in
pusha
or
sbb
xchg
nop
dec
loop
insl
ja
dec
testl
jbe
clc
xchg
pop
fwait
pop
in
fsubrl
ret
loope
sbb
mov
push
mov
jno
inc
lods
mov
pop
arpl
rcl
pop
xor
jecxz
stc
and
adc
jae
mov
inc
fldlg2
xlat
cmp
mov
popf
sbb
xor
cmp
cmovp
fwait
xchg
imul
jns
call
les
pop
test
popf
add
push
imul
pop
pop
and
add
add
pop
jle
je
inc
lahf
pushw
stc
dec
cmp
adcb
add
jno,pn
ljmp
push
or
dec
dec
xchg
push
adc
loope
orl
lahf
idiv
gs
dec
push
xchg
cmp
sbb
andl
lods
sahf
mov
xchg
mov
sub
push
add
inc
je
mov
dec
movsl
dec
add
jmp
mov
sub
push
lods
fnstsw
jb
shlb
xchg
sub
test
arpl
and
cmpsb
int
fldenv
or
ret
and
dec
add
pop
or
push
push
xor
push
sub
into
jg
pusha
imul
xlat
mov
jbe
xchg
add
xchg
arpl
cld
mov
sbbl
test
jge
stos
sub
js,pt
mov
sbb
jnp
xor
scas
fstpl
test
clc
dec
and
cmp
cli
and
mov
xor
shrb
push
fdivrs
jmp
lock
in
pushf
loop
into
push
add
cmp
pushf
and
movsb
test
pusha
enter
or
iret
pop
aas
mov
outsb
rclb
mov
sbbl
jbe
dec
in
adcb
std
mov
sbb
lock
dec
mov
inc
jecxz
pushf
out
iret
je
mov
stos
mov
scas
test
push
mov
nop
xor
ret
jecxz
test
rcl
fwait
mov
cmp
aam
scas
lcall
mov
in
mov
sbb
jbe
and
loopne
cmp
adc
mov
in
cld
sbb
lcall
push
cltd
fisubs
push
sbb
fcoms
cmpl
mov
add
mov
sbb
cmpsb
inc
dec
dec
addr16
xor
pop
xor
arpl
and
stos
jmp
call
cmc
xchg
push
into
jno
mov
add
mov
es
in
cltd
or
out
daa
mov
mov
jae
or
mov
adc
lock
cmp
pop
fldcw
sub
jmp
sbb
jb
cs
es
or
stos
push
or
mov
add
ficoms
dec
mov
lret
mov
sbb
lea
push
jae
xchg
or
mov
xchg
mov
aam
dec
lret
imul
push
aad
push
mov
shrb
push
call
cmp
insl
jg
dec
push
inc
call
push
add
or
mov
or
test
and
iret
jno
dec
jno
cmp
adc
push
jl
xor
jp
test
stos
push
push
add
or
icebp
mov
aad
fmuls
lods
pop
ret
mov
fsubs
mov
dec
dec
mov
dec
rclb
fnstcw
xor
ss
sbb
pusha
inc
out
mov
inc
fistpl
jmp
or
test
xor
test
in
lods
shlb
lahf
adc
mov
aaa
dec
ret
xchg
mov
imul
in
out
fcompl
nop
data16
cmp
mov
cmp
mov
mov
in
sbb
pop
sahf
mov
inc
xchg
or
movsl
jo
push
pop
adc
ficomps
mov
xor
pop
inc
insb
les
seta
enter
dec
lds
fbstp
in
mov
inc
imul
int
mov
xor
add
inc
das
push
inc
flds
repnz
mull
push
or
stos
fcmovne
xchg
lret
lret
push
out
add
lret
aad
std
out
or
xchg
outsb
jl
adc
shlb
fildl
or
mov
sub
test
push
lcall
xor
push
cmp
pop
lock
push
inc
imul
test
push
push
cmp
mov
fimull
subl
test
pop
call
or
jge
add
dec
shll
jle
mov
dec
popf
sarl
pop
adc
aam
mov
mov
sub
mov
sbb
push
lds
inc
mov
add
push
lahf
or
push
nopl
mov
mov
lret
add
or
shll
sub
mov
aaa
jle
jmp
loope
out
fwait
data16
mov
and
into
cmpsl
rclb
shll
jae
jo
mov
jecxz
dec
outsl
loop
out
jns
dec
jns
pop
jge
jle
outsl
push
das
test
jbe
lea
hlt
scas
cs
and
jecxz
movsl
mov
rol
cmp
imul
push
jnp
scas
cmp
sbb
lret
jae
jmp
icebp
and
jg
test
addb
ret
pusha
mov
xchg
arpl
mov
out
lcall
or
cmp
pop
adc
dec
adc
lods
dec
js
movsl
test
or
es
inc
or
mov
ja
mov
mov
mov
arpl
mov
sbb
or
cld
mov
cmp
addr16
mov
sub
mov
insb
insb
lret
cmp
add
sub
fcoms
mov
int
pop
xchg
shl
mov
inc
clc
fldenvs
cmp
and
mov
or
inc
lahf
and
inc
jmp
hlt
cmpsb
jle
fdivl
jnp
pusha
es
push
mov
lcall
loope
clc
dec
ss
push
xchg
dec
test
jne
mov
repnz
fstpt
clc
add
in
pop
hlt
pop
addl
ret
ret
lock
adc
gs
es
sbbl
fdivl
pop
and
int3
mov
jbe
inc
les
les
add
and
adcl
push
xchg
or
jecxz
mull
add
ss
inc
adcb
gs
adc
pusha
mov
or
pop
xor
stos
jnp
inc
fsubrp
mov
and
add
mov
lret
fs
icebp
movsl
xchg
xchg
iret
arpl
xorb
imulb
adcb
mov
loope
sub
push
xor
lods
ret
rcll
lock
mov
xchg
shlb
fcmovnu
loopne
into
mov
add
inc
jg
cmp
shlb
or
es
test
jb
xor
es
shrl
fwait
int3
jg
hlt
icebp
dec
scas
jb
jp
out
and
or
push
sbb
das
sahf
pop
inc
addr16
outsl
push
imul
out
mov
pop
outsl
into
sti
mov
insb
popf
xor
cmpsl
xchg
dec
adc
ja
mov
adc
dec
adc
ljmp
push
push
mov
dec
cmp
adc
lret
and
mov
sahf
sub
shlb
mov
mov
inc
pop
pop
inc
and
fisubrl
jmp
movsb
mov
jmp
pop
sahf
pop
pop
add
cmpsb
in
fwait
rcll
rep
cmp
lea
push
jno
addb
adc
in
int3
add
aas
out
and
cld
pushf
imul
imul
xlat
fimuls
aas
push
pop
sbb
inc
push
loopne
mov
nop
push
cwtl
ret
add
test
xor
mov
xchg
jge
hlt
adc
fisubrs
subl
push
fsubs
cli
xchg
add
dec
cmp
sub
xchg
adc
pushf
outsl
sahf
xor
mov
test
mov
mov
and
pop
xor
xchg
stos
inc
adc
or
scas
or
pop
push
cmpsb
les
jge
mov
dec
mov
xchg
mov
push
mov
push
pop
les
jmp
or
cmp
in
cld
loope
repnz
out
aaa
sbb
push
mov
ljmp
leave
adc
mov
jecxz
enter
popa
push
inc
sahf
mov
ficompl
xchg
adc
notl
test
decl
mov
pop
int3
sbb
sbb
mov
inc
jle
js
daa
into
sub
mov
or
fmulp
or
and
or
frstor
sub
xchg
stos
mov
test
push
mov
dec
int
xchg
sub
jecxz
fwait
clc
cmc
cs
outsl
test
lods
pop
test
lea
mov
cmp
into
rcll
add
out
jne
outsl
icebp
rcll
inc
rclb
xchg
pop
sub
sahf
mov
xchg
dec
fwait
pop
and
subl
add
sbb
scas
sbb
lahf
or
roll
sbb
js
call
sbb
cli
jecxz
int3
aad
jp
jmp
outsb
add
repnz
pop
adc
mov
inc
jp
fwait
pop
push
pop
pushf
sub
inc
mov
testl
out
nop
push
inc
imull
insb
scas
je
sti
xor
outsb
cmp
cwtl
rorl
inc
mov
int
fdivr
cld
pop
jmp
adc
push
ja
jle
inc
jg
ljmp
fmull
jae
sub
rcrb
or
mov
fstl
hlt
imul
js
mov
imul
pop
sub
rcrb
pop
mov
sub
shrl
sub
or
jno
mov
nop
es
push
add
clc
hlt
sub
lea
and
fsubrs
xchg
cld
in
dec
aad
xor
aaa
fstpt
rclb
pop
dec
pop
fidivrl
jl
lret
inc
jno
add
mov
cmpsl
in
adc
es
clc
popl
test
test
mov
xor
scas
and
lock
mov
shlb
je
dec
mov
std
int3
jmp
outsb
sub
fwait
jb
cmp
mov
loopne
fimuls
ret
push
jbe
pop
nop
jo
nop
sub
push
fs
xchg
xor
push
mov
sub
aam
imulb
adc
mov
mov
pop
test
adc
imul
cmp
add
shl
scas
sub
mov
add
lcall
cmpsl
xchg
in
pop
inc
leave
ret
arpl
sub
test
mov
fistpll
mov
in
addr16
pushf
cwtl
and
mov
xor
jns
aam
push
pop
in
nop
jae
push
rclb
dec
test
stc
in
xchg
cmp
jmp
cwtl
mov
xor
call
or
sub
pop
adc
mov
mov
shlb
xchg
pop
xor
lcall
inc
rep
popf
out
insl
xchg
and
mov
popa
arpl
inc
xchg
inc
push
lcall
jle
xchg
fcmove
and
cltd
call
and
adc
fiaddl
imul
dec
movl
or
test
stos
xchg
adc
das
es
xlat
sbbl
test
stc
pop
sarb
cmp
fwait
mov
or
jb
in
push
xchg
jmpw
dec
dec
xor
mov
pop
aad
aam
andl
and
cmp
mov
jno
xchg
xor
dec
pop
ss
or
jge
push
fildll
adc
fcomps
and
lock
jno
xor
pop
out
cmp
or
inc
adc
push
test
movntps
fwait
cltd
xchg
repz
mov
and
mov
shr
out
push
sbb
push
mov
xor
pop
dec
push
mov
xor
loop
mov
aaa
int
mov
mov
out
push
sbb
inc
outsl
add
sbbl
xchg
push
jbe
xchg
adc
mov
jmp
add
mov
or
testl
icebp
xchg
mov
into
adc
int3
js
sbb
cli
cmp
mov
bound
mov
sub
adc
ss
adc
popl
sbb
mov
mov
and
iret
test
lret
xor
mov
subl
xchg
std
jmp
push
cs
add
fwait
fcmovb
das
or
pusha
out
adc
test
or
xorl
insb
test
lods
mov
jbe
in
mov
sbb
aam
mov
repz
sbb
add
push
bound
push
mov
inc
lods
pop
imul
push
loopne
cltd
pop
loop
stos
cmpsb
fmull
imul
inc
xchg
sub
pop
jecxz
dec
adc
out
jne
push
and
mov
lret
xchg
sbb
inc
sbb
je
bound
jo
mov
rolb
jne
jns
cmpsb
adc
test
xchg
cs
scas
pop
pop
pop
xchg
mov
les
outsb
jle
fnstenv
push
pop
sbb
pushf
popf
sub
or
jge
imul
dec
daa
jns
add
or
push
popf
xor
iret
fimull
aaa
and
ret
hlt
leave
mov
sti
xchg
insl
loopne
xchg
stos
inc
ret
fs
inc
inc
mov
mov
jmp
out
rcrl
push
leave
adc
loopne
cmp
and
inc
xchg
cmpl
fimuls
jp
mov
xchg
push
pop
and
nop
dec
popf
stc
xorb
xchg
add
push
sub
mov
or
pop
sub
cmpsb
sbb
scas
add
add
stos
cmpsl
and
sarl
lret
mov
lods
jmp
leave
push
and
aaa
xorl
pop
sub
jbe
mov
into
adc
decl
rorb
dec
outsb
lea
int3
pushf
data16
or
xor
dec
inc
lds
mov
mov
sbb
inc
clc
pop
mov
daa
mov
xor
fstps
push
push
push
jbe
xchg
gs
gs
sub
mov
inc
shlb
push
fdivrs
popa
pop
sbb
call
mov
pop
sti
fwait
nop
mov
fsubrs
fpatan
or
mov
test
dec
sti
push
scas
or
push
lods
xchg
xor
es
mov
js
inc
pop
call
fcmovnb
icebp
insb
nop
add
xorb
mov
mov
lock
sub
fcoms
mov
shrb
dec
sub
cmp
pop
cli
hlt
push
xchg
sti
nop
aad
lods
pop
js
xchg
dec
mov
sub
lea
jl
or
movsb
stc
inc
es
inc
in
and
insb
mov
in
pusha
or
call
jno
dec
push
and
in
xlat
cmp
lea
add
and
ss
cli
push
sti
fs
jge
push
push
dec
mov
add
dec
xchg
pop
and
jmp
mov
push
pop
mov
dec
sbb
fcomps
decb
or
mov
fsubrl
dec
or
leave
push
adc
mov
fsts
mov
imul
dec
dec
mov
lret
out
lahf
jecxz
adc
mov
push
aad
data16
adc
pop
mov
popl
addr16
and
cmp
pop
pop
in
lret
int3
dec
dec
bound
cmp
xchg
popa
clc
rorl
data16
jle
call
inc
les
pop
cmpsb
mov
ja
pushf
sub
xchg
aas
popf
stos
cmc
mov
ss
xor
fnsave
int
cmp
clc
sbb
sub
insl
mov
inc
cmp
push
cmpsl
adc
xorl
gs
fs
stc
shll
mov
or
out
add
addr16
jbe
in
test
aad
cli
js
or
aas
jnp
jno
sbb
pop
in
adcl
add
mov
dec
jae
adc
xchg
pop
roll
jbe
push
in
xor
push
adc
xor
push
cwtl
movsl
stos
enter
and
and
or
ret
sbb
mov
jg
xchg
or
push
repnz
sub
insl
addr16
mov
pop
and
out
xor
dec
scas
repnz
cwtl
pop
fsts
aaa
pop
push
xor
sub
popa
xor
mov
push
call
and
xor
jo
jge
mov
outsl
lcall
sbb
push
rorb
jp
lcall
in
cld
push
push
xor
inc
lcall
and
nop
add
lods
stc
nop
fistps
icebp
movsl
cld
jne
lods
pop
stc
cwtl
ljmp
inc
fldt
cmp
jmp
pop
sti
xchg
aaa
push
test
fcmove
sub
jnp
or
out
cmp
push
mov
sub
pop
dec
in
daa
sbb
cmp
arpl
enter
cmp
aas
shlb
clc
test
or
nop
mov
sub
insb
cmc
or
pop
es
and
int3
sbb
iret
arpl
lods
cmpsl
les
into
or
sbb
je
xchg
push
xchg
mov
lods
jl
fld
int3
sub
mov
jecxz
push
jb
js,pt
xchg
pusha
jge
push
mov
cs
fcomps
aam
mov
xchg
int
adc
or
xchg
fs
nop
lret
sbb
notb
xchg
mov
sbb
sarl
cmc
xchg
mov
scas
lods
inc
sub
jno
mov
add
dec
imul
jno
rorl
rcll
or
pusha
mov
leave
xchg
xchg
into
dec
inc
fidivrs
inc
push
pop
pop
fcomi
test
outsl
test
imul
push
imul
sbb
ret
js
and
ret
repz
testl
push
cwtl
sbb
cmc
mov
xlat
adc
scas
mov
cld
xchg
cld
pop
cmp
xchg
sbb
sbb
jmp
iret
loope
add
pop
std
std
lock
lret
shll
repz
push
imul
xor
les
fdivrs
sbb
push
inc
clc
xor
inc
push
jbe
adc
inc
dec
enter
popf
mov
jp
cmp
aas
add
mov
je
push
pop
sahf
test
pop
aam
and
repnz
jge
test
jmp
into
jg
sub
dec
or
hlt
call
pop
insl
ds
js
adc
insb
divl
cltd
test
adc
jne
xor
cmp
std
stos
mov
push
stos
cmp
mov
dec
out
inc
cli
rorb
mov
insb
enter
cli
or
sub
mov
cmc
push
jmp
dec
push
ljmp
movsl
or
loopne
daa
mov
pop
iret
mov
je
sub
arpl
mov
mov
adc
jnp
xchg
xchg
addr16
test
movsb
pop
in
inc
out
cld
ja
mov
aad
cld
xchg
add
das
and
jo
cmp
push
hlt
xor
sub
sti
pop
lret
addr16
dec
imul
lret
or
add
inc
fmull
jge
pop
icebp
inc
in
sub
xor
xchg
jle
stc
or
pop
movsb
in
test
loop
adc
fsubrp
divb
scas
inc
pop
rcll
cmp
inc
push
or
xor
adc
call
lea
insl
shll
das
xchg
ja
xchg
cmpsb
jge
xchg
scas
cld
cltd
je
fildll
test
xlat
out
lretw
push
imul
das
jns
aaa
shlb
xchg
mov
loopne
ja
push
ret
pop
mov
nop
adc
int3
mov
sbb
dec
cmpsb
mov
pop
jecxz
testl
or
or
cs
movsb
stc
adc
or
sub
fsubrs
aas
cmc
fisubl
mov
pop
andb
push
fildl
xor
ja
sbb
daa
stos
and
inc
das
inc
fsubs
pop
adc
aad
dec
sbbb
jae
adc
ret
aam
mov
adc
add
jmp
adc
loop
adc
pop
inc
fisttpll
pusha
test
incl
mov
mov
xlat
cli
pop
cmc
mov
decl
jae
clc
lret
jns
dec
jnp
and
jecxz
in
loope
loop
pop
pop
adc
jbe
stc
sar
lret
out
sub
lea
negl
xchg
xor
jo
ds
mov
fdivl
nop
mov
loope
jg
repz
idivb
daa
sub
outsb
sar
or
jmp
jle
shrb
pusha
in
lock
out
lods
pop
mov
sbb
jecxz
jo
push
call
push
mov
fidivs
nop
sub
lds
xchg
sub
sarl
sub
add
mov
fdivl
cs
add
jno
shll
jle
xorl
movsb
data16
add
adc
add
daa
cmc
mov
into
adc
repz
jo
dec
mov
and
xchg
std
incb
das
push
push
mov
decb
fldcw
leave
or
mov
sub
sbbl
movsl
std
mov
mov
nop
inc
lods
xchg
cli
imul
cmp
int3
xchg
call
and
jl
shld
sub
pop
popa
aam
sub
or
xchg
mov
shl
push
jns
insb
fbstp
fidivs
xchg
or
nop
add
testb
adc
pop
mov
bound
hlt
aas
add
and
cld
and
push
and
and
hlt
fdiv
imul
insb
scas
ffree
clc
pop
cmc
sub
stc
cmp
into
add
sbb
lret
sahf
push
mov
shrl
rclb
xor
int
les
out
in
xor
add
mov
inc
shlw
gs
add
and
push
or
push
aas
xchg
add
shr
cmc
fcoms
movsl
xchg
cmpsb
das
pop
mov
repz
in
inc
les
js
iret
sub
shrb
push
data16
jl
in
dec
fucomi
mov
outsl
lods
xor
ret
cs
loop
adc
sub
pushf
xor
sub
mov
fcoms
stos
test
jg
pop
xlat
cmp
mov
aam
xchg
test
cmc
shrl
scas
mov
ja
test
jp
push
dec
pushf
arpl
jbe
js
scas
and
loopne
add
int3
adc
mov
in
sbb
int3
lods
mov
adc
fs
mov
mov
insb
mov
mov
out
inc
outsb
int
mov
sbb
jmp
xchg
lods
movb
ljmp
jae
sbb
xchg
imul
icebp
add
in
and
xchg
jnp
stos
movsb
xchg
dec
add
dec
jmp
fcmovnbe
sbb
mov
jae
sti
aas
dec
loope
xchg
xchg
jo
adc
adc
ret
sbbb
sti
out
adc
push
inc
scas
mov
nop
in
pushf
ja
or
push
scas
or
cwtl
mov
jg
shll
jnp
mov
faddl
push
jno
and
xchg
test
lret
sbb
jae
or
xor
cmc
and
gs
sub
cmc
jge
xchg
into
mov
scas
and
and
test
jnp
or
add
push
repz
in
cli
not
and
cltd
xor
jle
add
pushf
adc
cwtl
inc
jle,pn
mov
std
push
pusha
ret
out
ljmp
jno
jnp
pop
out
sbbl
mov
loope
mov
jnp
add
jb
test
stos
and
add
cld
sbb
or
incl
and
push
out
mov
pop
mov
mov
sbb
jae
push
pop
xchg
dec
inc
cmpsb
arpl
arpl
mov
push
test
idivl
push
bound
testb
fnsave
xor
inc
mov
pop
icebp
sub
add
lds
notl
mov
in
mov
fsubrl
cmp
jbe
rcll
pusha
testl
jle
sbb
xor
mov
fisttpl
pop
lods
cld
add
xor
scas
dec
ljmp
loopne
sub
or
rclb
or
or
inc
cltd
iret
idivb
out
movsl
mov
rcr
mov
fldenv
inc
out
jp
test
mov
push
mov
xor
and
add
jo
mov
sti
fcompl
xor
xlat
mov
or
stc
mov
push
cmp
hlt
out
ja
and
inc
cmp
in
or
call
outsb
nop
dec
xchg
and
pop
sbb
lcall
arpl
addl
fdivrl
test
push
lret
xchg
jmp
popf
dec
scas
pop
pop
insb
outsl
arpl
imul
sbb
push
lcall
ds
sar
adc
sti
scas
xor
aaa
iret
inc
arpl
pop
test
mov
andb
daa
push
mov
stos
mov
insl
pop
test
sbb
push
pop
rcll
pushf
fdiv
mov
insb
orl
pop
aaa
movsb
mov
sbbl
xchg
push
add
ss
jg
push
pop
icebp
mov
mov
add
xchg
in
stc
subb
in
sub
inc
nop
push
jle
jns
out
in
insb
in
out
lods
cmc
sbb
jno
push
adc
push
sbbl
mov
mov
cmp
jle
cmp
std
arpl
ja
cmp
fadds
mov
movsb
movsl
fadds
loope
mov
xor
sbb
jg
push
mov
xor
repnz
ficoms
or
fcoml
sub
adc
mov
push
inc
fildll
inc
pop
dec
stos
dec
and
mov
and
lea
inc
loopne
cmp
mov
sub
mov
push
lea
xlat
jmp
mov
xlat
push
mov
leave
in
and
push
xchg
inc
es
cmp
xor
loope
andps
stc
aad
sub
movsb
idivb
xor
stc
icebp
pop
mov
aaa
xor
dec
div
or
sub
jns
aaa
xor
icebp
xchg
jne
sbb
mov
xor
loopne
in
fs
sbb
out
mov
cld
call
cmc
ret
xor
hlt
adc
shr
ret
pop
cli
pop
add
mov
in
adc
push
cmp
pusha
sbb
pop
push
cwtl
inc
daa
mov
add
enter
jmp
push
jno
lock
pop
push
xorl
inc
mov
or
push
xor
mov
adc
xchg
add
sub
xchg
jmp
loop
dec
stos
imul
shrl
aam
pop
jp
icebp
mov
popf
ret
mov
in
xor
icebp
popf
mov
or
add
nop
stos
testb
cmp
pop
ljmp
in
jp
mov
push
lock
fsubrl
xchg
lods
ret
out
mov
mov
dec
arpl
aam
adc
xchg
bound
mov
push
or
icebp
cld
mov
popa
pop
dec
loopne
cmp
and
lret
ljmp
dec
pop
out
icebp
pop
mov
or
push
mov
mov
int
sbbl
movl
std
addr16
inc
inc
add
aas
mov
fidivrl
and
mov
sbb
aad
jge
jecxz
mov
out
add
in
lods
pop
xchg
cmp
je
mov
popf
rorl
movsl
cmp
and
out
test
insb
or
or
das
cmp
push
xchg
inc
repnz
rcrl
xrelease
lods
fsubrl
cmp
es
icebp
or
fisttps
sbb
jmp
mov
movsl
and
inc
sub
mov
mov
rcrl
sub
pushf
jp
mov
jge
enter
jo
inc
dec
pop
xchg
outsl
pop
xor
sbb
dec
test
jbe
jae
repnz
sbb
mov
imul
jp
ljmp
jb
pop
int3
mov
pop
push
ret
pop
pop
jmp
pop
push
mul
lds
jle
aad
in
push
pop
scas
pop
mov
popa
fucomi
iret
add
sahf
xor
and
out
push
scas
jg
notb
lods
mov
xor
xchg
push
jmp
scas
xchg
and
iret
leave
pop
addl
out
cld
or
stos
test
aad
data16
and
ja
repnz
jns
adc
adc
or
int3
pop
inc
or
xchg
dec
mov
lahf
cmp
pop
inc
jbe
mov
dec
xchg
int3
pusha
adc
push
push
sti
jb
call
jmp
or
gs
imul
pop
mov
fucompp
imul
outsl
push
sbb
xacquire
sub
enter
jno
mov
sbb
lret
fiadds
in
cmc
mov
sub
call
adcb
ret
dec
in
movsl
ret
out
imul
inc
test
cltd
sub
call
dec
mov
mov
push
lock
mov
int3
decb
and
stos
and
push
dec
loop
lds
add
mov
mov
inc
pop
mov
jmp
mov
adc
ret
xchg
sub
out
jae
jge
outsl
lods
out
mov
ret
lods
xor
sub
repnz
jg
in
xor
scas
sub
mov
sub
out
xchg
sbb
fs
mov
inc
adc
jne
mov
xlat
hlt
dec
adc
dec
mov
xor
pusha
dec
dec
enter
xchg
inc
shll
inc
cmp
xor
int
jns
push
stos
in
xor
add
pop
dec
push
inc
ljmp
test
test
pop
xor
adc
outsl
inc
mov
mov
xchg
sbb
push
lcall
repnz
xchg
dec
call
test
jmp
lcall
sbb
or
int3
mov
push
or
xchg
xlat
push
jno
rcl
cmp
repnz
inc
pop
or
xchg
scas
fwait
or
xchg
xchg
iret
mov
aas
jle
inc
rcr
addl
push
fcmovnb
nop
push
stos
in
fldcw
je
ret
out
push
add
es
fwait
jb
int
scas
mov
mov
scas
imul
aam
adc
inc
flds
sub
in
pushf
nop
mov
dec
rcl
jbe
insl
xor
adc
and
push
xor
gs
mov
mov
push
pushf
setae
cmp
in
rorb
ret
jnp
cmpsb
lret
inc
aad
lcall
dec
pop
movsl
outsl
and
jp
inc
mov
scas
sbb
inc
jg
push
out
out
sub
xor
cmp
mov
pop
cmp
les
test
ja
jno
mov
js
add
sbb
dec
mov
sub
sbb
std
popf
shrb
push
pop
test
imul
nop
int3
and
inc
int3
xor
std
lods
into
rol
fcoml
addr16
sub
in
xchg
sub
dec
divb
lock
inc
fcmovbe
aam
lahf
and
mov
or
inc
mov
stc
mov
out
add
gs
loopne
adc
adc
jo
inc
xchg
test
test
push
lods
dec
push
xchg
mov
loope
jl
cmc
sub
arpl
mov
pop
or
or
sbb
push
out
enter
cmc
data16
add
jne
mov
push
add
dec
sbb
stos
cmpsb
inc
daa
je
ficoml
mov
mov
inc
jp
push
xor
movsb
shrb
dec
sarl
sbb
dec
fildll
imul
pop
ffree
and
fldcw
shll
xlat
outsb
xor
mov
jp
pop
xor
test
ja
test
push
and
fisubrs
int
push
add
repz
mov
xor
loopne
add
aad
dec
inc
dec
pop
mov
fnstsw
cmpb
cmp
addr16
pop
add
pop
fsubl
cmpsb
add
mov
jle
lock
jne
cmp
fsubrs
gs
pop
mov
adc
aaa
leave
lock
inc
int3
mov
popf
test
cli
inc
sub
addl
bound
mov
mov
lret
sbbb
pop
int3
in
out
push
out
pop
sti
jae
test
and
fidivs
jl
add
xchg
inc
mov
aam
cmc
add
cmp
stos
pop
std
stos
or
lret
xchg
dec
cltd
dec
push
ljmp
pop
push
nop
or
and
mov
addb
jp
pop
inc
xor
mov
lret
push
aam
adc
aas
jae
push
xor
shlb
inc
jnp
lock
fs
imul
les
inc
mov
std
fucomi
mov
pop
cmpsl
cmp
xor
arpl
xor
aas
lea
movsl
xchg
pop
jb
icebp
cmp
and
sub
stc
clc
lret
in
jmp
out
dec
test
mov
imul
lret
addr16
lcall
insb
add
cltd
das
les
cli
lcall
incl
push
int3
loop
inc
adc
frndint
sub
push
lock
adc
push
fstpt
lods
popa
enter
test
popf
aaa
mov
cmp
jmp
out
xchg
in
pop
fbld
mov
repnz
jecxz
xchg
dec
aad
dec
ret
out
fistl
fwait
push
pop
adc
bound
mov
cbtw
pop
xor
xor
rclb
mov
adc
ret
sbb
add
sahf
movsb
leave
and
mov
movsb
nop
mov
cltd
mov
push
movsb
movsb
dec
clc
mov
pop
push
and
sub
das
mov
ds
mov
aam
popf
icebp
or
cltd
mov
jae
mov
push
push
fldenv
or
jmp
xchg
sub
das
dec
jge
mov
mov
cmc
adc
mov
sarl
and
inc
sbb
mov
mov
enter
jle
jp
in
inc
cli
xchg
mov
rorl
lcall
cwtl
popa
daa
mov
into
aas
sbb
jno
sub
xor
in
xor
jle
xor
push
xchg
mov
mov
icebp
lahf
mulb
lret
add
sub
mov
fsubl
jle
imulb
sub
hlt
pop
shrl
mov
in
sahf
mov
sbb
addr16
pop
cs
je
in
add
add
push
sub
adc
outsl
iret
mov
pop
adc
and
cmp
or
outsl
dec
pop
aad
rclb
scas
inc
scas
xor
mov
mov
rcll
mov
adcl
mov
test
repnz
aad
scas
cmp
aaa
inc
sti
je
icebp
mov
and
adc
shl
aam
fimuls
push
cmp
cmpb
mov
jno
inc
mov
aas
adc
push
rol
subb
pop
add
sbb
xor
js
dec
mov
mov
xchg
out
jae
shlb
mov
mov
pop
loop
ror
sbb
in
and
pop
push
dec
vucomisd
jmp
xchg
sbb
cltd
dec
sbb
lea
test
add
fsts
mov
push
in
mov
xchg
push
cs
imul
mov
cmp
imulb
inc
and
int
cmc
in
es
popa
clc
add
ds
insb
xchg
pop
lret
pushf
das
in
fidivl
cli
in
jbe
test
lock
inc
loop
add
sti
jb
idiv
add
outsl
icebp
insb
and
lock
call
sbb
pop
mov
mov
fwait
call
xlat
out
xor
flds
nop
mov
sub
mov
f2xm1
cmp
test
adc
xchg
or
mov
adc
arpl
fcoml
movsl
lds
push
sub
dec
dec
jecxz
aaa
cmp
imul
ds
sub
mov
xchg
xchg
inc
sbb
jg
jl
mov
enter
mov
shl
ljmp
push
xor
jmp
or
mov
call
leave
cwtl
addr16
mov
mov
adc
mov
outsl
cmp
xchg
outsb
push
jecxz
ja
sbb
test
jl
jg
loopne
pop
adc
sbb
clc
out
sub
ja
jle
sbb
or
cmp
mov
mov
adc
aam
out
push
xchg
out
daa
outsl
lahf
repnz
pushf
push
ret
data16
or
jbe
je
notb
cmp
aam
xlat
push
push
xchg
in
aas
sahf
xor
inc
ljmp
sub
pop
call
mov
and
jg
cli
and
fistps
push
out
mov
push
aad
rolb
jno
xor
mov
or
test
or
xlat
testb
add
lds
repz
sbb
mov
cmp
mov
lahf
inc
fwait
mov
dec
sbb
pop
and
pop
outsb
add
ljmp
xlat
orb
or
es
shrb
jp
pop
icebp
sub
xchg
imul
mov
shlb
cmp
mov
push
push
rcrl
jge
shrl
popf
aaa
push
dec
push
out
cmpsl
fldcw
fbstp
jg
in
std
xchg
adc
enter
rorb
shrb
or
jle
sub
repz
notl
mov
enter
sbbb
dec
outsl
jge
rcl
lock
pop
sub
add
pavgw
sub
rolb
and
jge
mov
outsb
pop
out
mov
xor
ret
in
mov
push
loop
and
lods
scas
nop
sub
stos
inc
xor
mov
stos
sbb
icebp
fwait
outsb
test
aad
insb
enter
dec
push
ret
mov
and
push
daa
andb
aad
sbbl
pop
pop
aas
sbb
jle
sub
negb
into
add
in
and
test
outsl
xchg
xor
or
cmp
dec
push
mov
adc
int
andb
ret
and
jecxz
addr16
aam
leave
pop
mov
inc
jle
push
out
mov
push
xchg
jae
push
mov
rclb
add
mov
pop
lds
popa
clc
scas
repz
loope
fmull
mov
lret
lahf
mov
pop
pop
jbe
mov
call
mov
fists
sub
xchg
cmp
shrl
imul
mov
mov
push
lods
lds
cmp
pop
jb
aam
pop
rcll
adc
stc
out
inc
fistps
cmp
adc
icebp
and
aam
leave
test
or
pop
push
pop
cmp
add
daa
repz
and
stc
mov
sbb
cltd
fdivs
lods
adc
and
lret
rolb
and
jnp
push
bound
inc
enter
addr16
sub
and
dec
or
jb
xchg
fcoml
and
fistl
mov
xchg
imul
push
cmp
pop
divb
negb
pop
xlat
pop
jge
mov
lea
pop
sbb
in
jecxz
rcl
sbb
loopne
pop
or
and
add
mov
add
ss
cwtl
stc
pop
mov
jle
sub
cmpsb
cmpsl
mov
cli
out
test
leave
xchg
sbb
push
mov
in
fdivrs
incb
xchg
push
dec
lds
mull
movsl
add
add
xchg
test
adc
unpckhps
adc
adc
inc
test
or
fcmovne
adc
ds
pop
adc
ljmp
mov
pop
aad
pop
daa
lcall
in
mov
dec
cmp
pop
imul
adc
popa
add
ret
jp
cwtl
and
icebp
xor
rorb
icebp
popa
adc
insl
loop
bound
push
lods
mov
out
je
mov
adc
xor
cmp
test
in
mov
xorl
cmpsl
movsb
jo
std
ja
jp
fidivrs
sub
or
xchg
cmp
out
roll
push
jmp
nop
and
stc
adc
es
mov
shl
push
mov
cmpsl
outsb
xor
popf
addb
jb
js
push
std
stos
mov
add
jg
mov
int
mov
insl
jmp
add
test
xchg
fsts
cmp
inc
pop
dec
sbb
add
and
pop
out
or
xor
ss
push
int3
cmpsb
leave
ljmp
xchg
push
imul
cmp
outsb
sbb
push
ds
ja
pop
imul
xchg
mov
mov
aaa
sbb
test
test
inc
cmp
xor
xor
jns
lcall
jo
popa
loop
mov
pop
add
addr16
and
testl
imul
jns
aaa
inc
or
jns
int3
and
xchg
sbb
pop
mov
xorl
rcrl
out
sti
mov
int
cmp
push
rcrl
xchg
push
repnz
addr16
or
push
lret
shrb
int
mov
adc
mov
repz
scas
sarb
insb
loopne
imul
mov
stos
mov
lock
adc
lods
movsl
cld
pop
push
pushf
popa
jns
psadbw
add
jbe
sti
out
fistl
adc
cmp
les
ret
push
jecxz
test
sub
xchg
push
push
add
out
or
mov
subl
movsl
mov
mov
out
xchg
cmpsb
fs
mov
ljmp
clc
push
sahf
test
movsb
in
out
ds
adc
dec
out
hlt
or
in
sub
lods
sbb
inc
or
fs
adc
cmc
inc
or
lds
inc
dec
lock
mov
mov
push
pop
aas
jno
jl
dec
add
outsb
push
mov
out
or
cmp
push
xchg
ja
sbb
sub
sub
add
shlb
aam
les
mov
out
dec
loope
adc
xlat
adc
popf
pop
popf
cmpsb
iret
inc
sbb
lock
movsb
movsb
pop
ss
mov
loop
int3
adc
or
cs
sub
cltd
test
lds
and
mov
lds
inc
inc
dec
loop
ja
mov
jmp
inc
mov
cmpsb
jns
push
addr16
int3
add
dec
dec
aaa
cmp
imul
jle
add
add
ret
add
mov
addr16
and
or
xor
pop
sub
out
icebp
push
int
or
pop
mov
fisttpll
dec
jl
cmp
cs
dec
push
cmp
fidivrs
jno
xor
xchg
sbb
cmpsl
dec
push
cli
rol
outsb
sub
lods
pop
mov
mov
push
aad
loopne
push
mov
js
sub
pop
repz
pop
push
call
pop
xor
mov
imull
push
or
xor
adc
cs
mov
sbb
dec
pushl
jecxz
movsl
sub
in
jecxz
push
cmp
fildll
and
or
add
mov
js
cmpl
pop
mov
fisubs
pop
js
push
js
test
jecxz
daa
subl
cmp
or
mov
pusha
rcr
fdiv
sbb
fidivrs
push
adc
pop
rcl
sahf
movsl
inc
xor
ds
mov
cmp
es
xchg
add
cmp
and
lea
adcl
mov
sbb
lock
cmpsl
sbb
nop
mov
js
out
out
hlt
and
addl
or
sti
cmpsb
hlt
adc
mov
sub
fsubrl
cmpsb
icebp
mov
dec
insb
mov
nop
or
dec
jae
pop
jg
int
cmc
ds
or
jmp
add
sbb
out
or
cmpsl
loope
jl
loope
in
movsb
jecxz
push
sub
insl
lcall
cmp
adc
call
andl
cmp
xor
jmp
lds
data16
icebp
ret
jb
negl
jae
xor
int3
push
or
fmulp
ror
ficoms
loope
dec
xchg
movsl
aad
std
add
sub
cmpsb
pop
cmp
movl
ret
cmpl
leave
and
xchg
lahf
out
stos
adc
rorb
add
stos
push
cmp
push
mov
pop
jns
or
pop
xchg
sub
das
icebp
or
add
mov
jb
and
jae
fwait
movsb
out
sub
repnz
popf
push
int3
test
jb
and
pop
xlat
es
or
cs
aad
repz
dec
cld
popf
inc
adc
sub
scas
sbb
loopne
pushl
mov
jo
lret
negb
repz
mov
stc
int3
mov
mov
inc
pushf
sub
test
mov
lock
mov
mov
push
jmp
add
mov
lret
fimull
and
inc
push
sbb
pop
sbb
dec
push
sub
mov
repz
leave
xor
and
cs
push
movsb
dec
push
cli
push
sbb
shll
test
mov
scas
aaa
ljmp
push
push
lahf
xor
paddw
popa
shrl
cli
xchg
sbb
decl
cs
or
push
dec
out
lods
dec
push
fldenv
or
inc
pop
jno
push
and
pop
inc
fbstp
xlat
data16
or
push
in
lods
lds
je
or
fisubrl
sub
rcrl
cmp
jmp
lock
cmp
adcl
adc
shrl
iret
pop
or
out
loope
xchg
cld
jge
ljmp
or
pop
mov
jo
push
adc
ficoml
and
das
ja
lock
dec
test
cmpsl
mov
lods
in
cmpsl
add
xor
xor
xchg
pop
test
ret
repz
add
pushf
cld
stos
int
xchg
hlt
pop
mov
stos
rorl
and
mov
lock
sbb
or
sbb
xchg
hlt
sub
dec
mov
mov
outsb
sbb
push
stc
sbbb
das
mov
xchg
cmp
mov
pop
add
pop
push
or
dec
mov
add
xor
insl
adc
mov
lea
push
xchg
xor
push
gs
std
inc
imul
in
enter
push
jnp
cmpsb
sahf
fnstcw
cs
xchg
cmp
xchg
sub
testb
push
out
push
sar
inc
fs
ss
push
ljmp
xor
nop
mov
lahf
mov
or
adc
fldenv
jns
add
inc
mov
mov
xchg
inc
mov
fnstenv
push
inc
into
arpl
jmp
frstor
or
or
or
shrb
aaa
jle
cltd
push
sbb
je
xchg
test
and
dec
cmp
xchg
mov
stos
jno
pushf
out
dec
or
ds
ret
mov
sbb
push
pop
jmp
mov
mov
jmp
sub
pop
xchg
mov
mul
jp
into
out
cli
or
mov
sub
push
lret
jp
dec
pop
cmp
imul
sub
xchg
daa
ljmp
mov
add
sbb
gs
out
push
fnsave
movsb
push
push
aad
pushf
xorl
test
fcmovb
mov
jbe
xor
xor
cwtl
sub
dec
es
jg
mov
push
sbb
loopne
mov
andb
scas
imul
punpcklwd
inc
xchg
ljmp
scas
mov
insl
sbbl
sbb
js
mov
xor
fnstcw
jl
push
cs
inc
sbb
mov
push
fdivl
lds
inc
mov
mov
xchg
mov
fldt
ret
icebp
jg
ljmp
inc
pop
repnz
pushf
mov
into
inc
push
aaa
clc
pop
dec
dec
or
inc
push
xor
xchg
jns
in
popl
mov
xchg
mov
scas
lds
jne
or
iret
sub
sub
and
push
pop
mov
adc
adc
mov
bound
ret
sarb
add
pop
sbb
clc
inc
fbstp
aad
loop
int
loopne
mov
sbb
sbb
bswap
aas
std
das
out
cmp
mov
loopne
adc
and
dec
push
fwait
adc
add
mov
fdivs
lea
cmp
jae
js
lds
sub
cmpsl
pop
mov
movsb
cwtl
cmp
cld
inc
test
add
inc
sub
mov
outsl
test
dec
pop
fdivp
mul
xor
sub
push
cmp
push
in
fcmovb
mov
loop
pop
adc
iret
xchg
jg
ds
stc
rorb
pop
sbb
cs
dec
das
inc
xor
in
push
fwait
mov
outsl
daa
push
cmpsl
loopne
mov
addr16
ret
push
mov
pusha
fdivl
psllq
add
jns
sub
mov
ljmp
aad
sbb
scas
push
and
jecxz
mov
cs
adcl
xchg
out
sti
jge
enter
sub
lret
or
push
ds
and
mov
jp
pop
ds
outsl
xor
jmp
scas
add
adc
dec
push
ja
add
xor
in
stos
mov
mov
jecxz
cld
je
xor
mov
sahf
cli
xchg
test
fstps
in
push
push
sub
loopne
push
pop
push
sahf
pop
dec
lret
scas
ret
into
mov
cs
sbb
imul
jno
sahf
mov
mov
sbb
cmp
daa
mov
daa
out
and
stc
shr
insb
loop
jge
lea
sub
call
xor
lret
adc
jae
cwtl
mov
cwtl
sub
imul
arpl
xchg
out
pop
clc
mov
out
dec
aam
lcall
inc
mov
and
mov
pop
insb
sbb
in
jnp
and
pushf
inc
in
cmp
subl
or
pusha
ret
pop
maxps
mov
js
mov
fnstsw
xchg
add
pop
lods
je
cltd
movsl
sbb
lods
cmp
mov
or
xchg
and
xor
imul
cmc
xchg
mov
push
stos
test
push
add
sub
mov
mov
pushf
out
push
fs
push
pop
jp
xor
mov
add
push
out
shl
jb
fisubrs
mov
dec
rorb
and
pusha
jnp
fcompl
cmpsl
inc
cld
mov
test
fisubrs
enter
fwait
mov
push
cs
inc
fists
mov
addr16
shll
lods
inc
scas
cmp
scas
out
push
inc
dec
jae
sbb
leave
pop
pop
xchg
mov
repz
sub
jp
popf
jmp
frstor
inc
pop
fs
into
xchg
jae
add
push
mov
shrl
decb
ret
lcall
fs
fldcw
lods
adc
test
test
clc
fwait
mov
js
mov
aam
mov
cmp
mov
pop
clc
adc
mov
das
arpl
icebp
call
loopne
adc
stos
xchg
test
push
mov
xchg
jnp
outsl
jnp
das
jb
and
sbb
movsl
xor
sbb
dec
cwtl
xchg
xchg
insb
lret
test
xor
add
arpl
movsl
rcrb
das
scas
call
pop
js
jp
xor
popa
add
push
mov
lods
lcall
lcall
ljmp
fs
cli
pop
adc
pop
jg
leave
push
call
pusha
and
cmp
iret
add
pop
jb
mov
enter
cltd
cmp
into
pop
leave
or
sbb
adc
and
adc
jae
dec
sub
xchg
ret
rorl
repnz
sub
mov
decb
push
aas
push
aaa
inc
sbb
pop
sub
inc
pop
fnstcw
push
pop
pushf
mov
fbld
xlat
ljmp
xchg
out
or
ss
cmp
stc
inc
push
or
or
mov
add
sbb
das
dec
lea
fisubrl
shll
es
sahf
mov
call
adc
data16
pop
mov
repnz
rcr
push
push
push
jl
push
scas
dec
push
movsb
sbb
lea
pop
xor
pop
adc
cmp
pop
into
test
lds
mov
out
xchg
ljmp
arpl
push
orl
xchg
das
lahf
fisubl
mov
push
inc
mov
lret
or
add
xchg
and
and
push
out
inc
push
out
dec
or
xor
adc
faddp
loopne
mov
jmp
out
inc
mov
shlb
jae
mov
mov
test
dec
xor
adcb
nop
cmp
xchg
add
jl
clc
jae
movsb
lods
xchg
daa
sti
faddp
inc
or
rclb
rorb
xchg
cmp
leave
jbe
pop
push
lods
mov
test
shll
daa
lock
jmp
pop
in
inc
rolb
and
xor
lock
inc
sti
mov
jns
fmul
test
pusha
clc
jae
jo
or
daa
ljmp
pop
pop
jmp
mov
mov
mov
ret
imul
push
dec
cmp
mov
pop
xchg
scas
mov
sub
leave
movsl
lahf
inc
aam
dec
in
pop
or
inc
imul
cltd
lock
sahf
xor
or
sbb
ljmp
lds
mov
pop
popf
out
test
jl
xor
jle
mov
adc
shl
repnz
hlt
mov
fimuls
std
xlat
mov
fcmovbe
mov
out
jg
in
stos
test
or
xchg
lods
pop
stos
cltd
cmp
std
scas
outsl
xor
dec
hlt
pop
test
pop
imulb
jg
mov
lss
jno
pop
outsb
xchg
in
dec
into
adc
es
andb
jno
dec
mov
cltd
jb
jge
jne
mov
pop
aam
test
stos
and
scas
inc
lds
mov
daa
lods
adc
stos
cmp
pushf
ljmp
mov
sbb
dec
andl
hlt
loop
andb
stc
mov
sahf
jb
pop
xor
int
inc
and
addr16
in
cltd
mov
adc
xor
subl
push
movsl
push
call
mov
outsl
push
aam
adc
mov
pop
testb
jo
daa
mov
xorb
jmp
dec
jle
add
push
pop
cwtl
sbb
pop
mov
pop
test
fldcw
fwait
test
xchg
mov
pushf
and
int
and
out
xor
adc
dec
push
push
mov
xor
jecxz
or
jmp
push
addr16
sub
sub
repnz
or
dec
xor
xchg
cmpsb
imul
mov
loope
in
test
mov
sbb
dec
jl
mov
psrlq
adc
cmp
mov
xchg
push
stos
ljmp
jb
and
pop
call
hlt
les
mov
insl
jge
pop
sbb
add
sbbl
and
push
mov
jmp
cmp
xlat
ds
nop
mov
movsb
idivl
stos
cmp
ret
cli
xchg
jmp
dec
cmpsb
ret
jns
test
shlb
xlat
sbb
mov
sbb
cmp
fsubr
fcom
out
push
out
mov
xorl
xor
test
adc
jecxz
fcomps
jge
je
jnp
mov
mov
sarb
fdivrp
add
gs
ret
sub
in
and
mov
loope
jmp
mov
imul
fucomp
and
sub
int
ss
adc
lret
sbb
int
fsub
popf
cmp
gs
push
xor
scas
lock
push
add
inc
inc
cmpsl
imul
fcoms
sbb
pop
scas
jge
lahf
stos
jecxz
lahf
push
mov
xor
jp
fistps
xor
aad
out
add
icebp
adc
pop
push
cmp
mov
mov
cmpsl
scas
cmc
int
push
sbb
mov
dec
in
popa
shrl
dec
paddd
and
mov
push
inc
dec
jnp
push
and
cmpsl
ret
sbb
xor
jmp
or
fs
xchg
rolb
dec
mov
subb
push
stos
add
arpl
jl
test
adc
xchg
cmp
enter
or
jb
aas
sub
stc
cmp
inc
and
sbb
inc
mov
jbe
fwait
lods
or
arpl
pop
sbb
scas
cmpsl
inc
gs
and
xor
mov
out
pop
clc
and
mov
loopne
jo
into
movsb
cmc
push
int3
dec
imul
cmp
mov
ret
sbb
lods
imul
adc
mov
and
fcompl
mov
out
jo
rcrb
adc
es
fwait
jmp
mov
jle
sahf
jmp
out
lods
ret
xor
push
add
cwtl
fucomip
mov
and
xor
dec
mov
jns
in
fdiv
add
aad
push
data16
adc
js
aas
or
or
scas
sbb
ljmp
jg
jecxz
and
push
push
sbb
jno
bound
pop
outsb
or
movsb
adc
xchg
and
adc
sbb
dec
and
mov
xlat
pushf
pop
xchg
outsb
add
xchg
inc
shrl
fldcw
int
lret
pop
push
mov
scas
aad
ja
sub
dec
and
test
mov
mov
dec
add
push
lret
sti
addr16
cwtl
mov
sbb
dec
xorl
std
repnz
int3
pop
dec
mov
inc
loop
ja
mov
sub
jle
addr16
mov
jmp
xor
jns
inc
adc
push
xchg
add
mov
mov
xor
sbb
loop
push
outsb
cmp
pop
mov
lret
icebp
scas
cmp
stc
popa
push
mov
pushf
dec
dec
xlat
mov
xchg
outsb
mov
test
shlb
popa
and
xchg
push
cwtl
pop
and
jl
and
push
mov
loopne
pop
cmp
jl
test
add
jle
adc
inc
xchg
add
out
push
repz
out
mov
jmp
fisubl
arpl
lret
push
sub
incb
mov
mov
loope
cmp
mov
add
fs
add
repz
fld
push
insl
jbe
adc
xchg
sbbb
mov
in
inc
push
mov
mov
sub
dec
or
clc
lea
aam
cmc
or
push
adc
addr16
loop
mov
in
imul
es
fidivrl
loop
lahf
rcrb
cmp
and
dec
add
mov
mov
inc
stos
add
inc
lea
or
stos
mov
sub
add
dec
fld
inc
jns
pop
cs
mov
sbb
push
mov
and
pop
adc
adc
xchg
ret
fistpll
stos
sbbb
pop
cmp
inc
sub
dec
aad
dec
fcoml
shll
fs
int3
mov
inc
roll
xorl
leave
pop
insl
mov
scas
sub
lahf
fsubrl
sbb
inc
stc
pusha
fs
push
js
mov
aam
inc
push
add
push
jmp
and
movsb
mov
adc
inc
fiaddl
mov
outsb
out
mov
stos
mov
outsb
mov
push
aaa
pushf
xor
sbbb
sbb
mov
loop
dec
mov
xorb
outsl
lds
xor
bound
xchg
and
pushf
and
sub
out
xchg
ja
sub
cwtl
pop
icebp
push
push
out
pushf
out
decl
xor
and
jne
cmp
push
mov
push
jp
mov
popf
test
insb
lods
subl
mov
jno
adc
sarb
xor
lds
jnp
out
les
icebp
mov
jge
adcb
xchg
cmp
dec
stos
fisubl
cmpl
pop
jle
lcall
cs
cmp
inc
dec
mov
sti
xchg
ds
out
movsb
fsubl
cmp
les
outsl
inc
loopne
js
push
ret
repnz
mov
jp
leave
loope
cmpsb
sbb
or
daa
push
in
js
cwtl
sub
sbb
lret
xor
pop
pop
xlat
jmp
cmp
xor
jl
cmp
cmpsl
sub
push
cwtl
insb
sti
push
lea
xchg
icebp
notl
mov
pop
icebp
pop
imul
and
mov
inc
fwait
lods
pushl
adc
insl
adcb
mov
cmp
push
or
mov
xchg
sub
andb
clc
xor
mov
inc
incl
cmpl
dec
loope
sub
movsl
aad
push
jnp
call
mov
shll
xor
and
cmpsb
cmp
data16
xchg
rcl
out
xchg
sbb
arpl
cltd
ja
xor
scas
cwtl
push
mov
into
sub
sbb
dec
inc
stc
les
gs
inc
or
jp
es
daa
pusha
cwtl
inc
aam
mov
lock
xchg
insb
and
mov
inc
dec
stos
rolb
inc
bound
stos
inc
mov
push
leave
or
pusha
ljmp
mov
imul
xchg
imul
js
push
push
sti
lahf
neg
sub
cmp
leave
jmp
orb
inc
push
jp
insb
mov
adc
out
add
push
sub
xchg
jae
jmp
push
pop
jg
dec
repz
lcall
arpl
xchg
lret
mov
ja
outsl
out
jno
and
and
out
jns
add
jmp
loop
jno
xchg
ds
jnp
pop
testb
loopnew
movsb
cmp
mov
les
mov
push
xchg
push
loop
dec
push
push
movsb
dec
pop
sub
xchg
add
ss
mov
xor
test
push
scas
insl
dec
sbb
imul
cmc
or
and
push
dec
xor
pop
push
ret
fmull
nop
std
stc
icebp
nop
mov
fadd
cmpsl
xorb
icebp
sbb
jmp
add
jo
mov
test
or
mov
scas
fmulp
pushf
nop
inc
mov
stc
or
mov
jle
lret
cwtl
and
out
sahf
stos
lea
cmp
in
xor
mov
cmp
hlt
leave
mov
mov
test
mov
fwait
push
int3
test
pop
das
inc
dec
or
xor
add
test
or
aaa
mov
fstpt
aam
pop
inc
fsubl
loope
jmp
mov
sub
rorb
nop
jp
or
in
daa
mov
sbb
aad
test
stos
iret
in
mov
jecxz
and
sbb
les
lods
fcmovnbe
xor
jno
js
xor
push
icebp
fsubr
jg
pop
mov
fs
cmp
das
add
lret
lahf
lods
test
push
loop
push
cmp
cmp
xchg
testl
lahf
mov
adc
fs
fstl
ljmp
xor
das
jmp
xor
xchg
xchg
int3
je
test
mov
push
sbb
out
ss
sub
push
pop
enter
std
inc
sahf
hlt
cld
and
cs
xor
test
testl
scas
lds
dec
out
xchg
dec
push
std
outsl
ds
push
and
fistl
mov
add
cli
in
sbb
pop
inc
push
sub
xchg
dec
add
insl
lods
lods
inc
mov
pop
sahf
cmp
idivb
xchg
pusha
xchg
dec
push
cmp
lea
jno
and
sti
dec
bound
iret
jo
sbb
call
jae
jp
cmp
sahf
push
popa
jle
int3
js
and
imul
push
rorb
add
sti
nop
je
and
adc
sub
lcall
loopne
ja
sbb
pop
insb
lea
or
movsl
ret
jnp
pop
mov
fisttpl
and
lds
mov
cmp
inc
push
aam
call
popa
inc
fisubrl
ror
mov
pop
out
int3
dec
mov
jle
icebp
insb
push
push
add
hlt
out
or
jbe
or
lock
ret
mov
popa
xchg
sub
or
add
jg
aas
jo
fwait
gs
mov
mov
cld
or
frstor
jns
nop
stos
xchg
mov
inc
dec
in
aad
lret
xor
push
pop
sub
int
gs
call
test
inc
outsb
add
or
adc
xor
ljmp
fsts
or
add
pop
ss
pushf
call
fldenv
movsl
xchg
jle
cmc
mov
fstl
sub
or
pop
mov
push
faddl
or
enter
mov
stc
test
lret
je
or
iret
jge
js
pop
mov
pop
imul
push
xchg
mov
gs
lahf
aaa
pop
xchg
and
shlb
pop
or
jecxz
mov
adc
iret
data16
in
test
fisubs
jge
test
mov
pop
loope
pop
aas
push
add
pop
hlt
push
push
repnz
sub
pop
das
pusha
push
sar
leave
mov
cmp
dec
arpl
sbb
inc
mov
mov
ficompl
add
cli
lds
fdivl
mov
cmp
dec
imul
jbe
inc
xlat
push
and
movsb
jo
lret
xchg
jl
push
jno
and
test
jge
cmp
negb
xchg
or
push
fs
jns
mov
lret
adc
int
inc
or
pop
cmp
xchg
rorb
shlb
mov
pop
aaa
imul
xchg
dec
sub
mov
add
insl
out
xchg
fwait
mov
xor
movsb
mov
ds
int
out
ljmp
mov
cltd
mov
ds
xor
push
arpl
sahf
ss
jle
dec
lcall
daa
das
mov
mov
mov
fildl
add
cli
xor
jnp
dec
pop
mov
mov
and
flds
mov
add
mov
sahf
inc
sbbl
pop
cmp
andl
cmp
and
xor
dec
inc
sub
mov
dec
pop
das
idivl
dec
out
mov
mov
push
or
mov
cmp
out
lret
jg
pop
cmp
adc
int3
fcom
mov
or
xor
sub
shl
mov
and
xchg
insb
enter
lods
ljmp
iret
xor
outsb
incb
out
pop
testb
cmpsb
pop
mov
insw
aam
gs
lahf
inc
push
pop
hlt
andb
sub
mov
add
xor
xor
fwait
incb
das
jo
js
xor
lods
mov
nop
cld
xchg
fs
je
loopne
sbb
mov
shl
push
stc
sub
fnstcw
sbb
scas
dec
mov
cld
sbb
pushf
rep
push
mov
repz
mov
xchg
gs
into
jecxz
ret
lahf
mov
outsb
andl
enter
mov
jns
rcrl
es
jp
mov
int
dec
js
frstor
mov
pop
fadds
push
sub
repnz
or
add
ja
add
jnp
subb
sahf
sahf
mov
and
jg
sub
xchg
insb
mov
mov
push
shll
mov
add
cli
negl
mov
enter
xchg
cmp
dec
pushf
repnz
inc
mov
mov
push
mov
les
jl
into
xor
inc
mov
loopne
cmp
sub
movl
dec
lods
arpl
push
outsl
adcl
xlat
stos
xchg
or
add
rorl
out
mov
sbb
test
push
cmc
push
insl
out
sti
nop
inc
paddusw
sub
xorl
xor
cmp
js
popa
pop
movsb
cmpsb
lock
mov
lret
add
sbb
gs
lods
and
or
ficoms
mov
sub
cmpsl
push
jmp
add
xchg
sbb
add
jae
es
mov
sub
lods
jle
add
fstps
inc
arpl
pusha
adc
in
inc
cs
test
jo
insl
lods
js
mov
cmpb
and
sahf
sahf
repnz
cmpsl
add
scas
lahf
push
test
xor
jl
arpl
cld
jnp
enter
pop
push
sbb
dec
ss
jl
jbe
test
loopne
lcall
add
stc
adc
out
pusha
bound
add
data16
fistpll
imul
cld
aas
les
push
mulb
sbb
rorl
in
imul
mov
mov
push
xchg
lds
pop
dec
xacquire
adc
test
xor
sbb
int
popa
addb
outsl
rorb
popa
pop
jp
jl
mov
dec
cmp
adc
das
pop
iret
data16
ficompl
mov
mov
and
and
mov
outsl
in
jmp
cmc
gs
fisttpll
test
add
loopne
test
dec
fsts
icebp
adc
mov
out
es
mov
sbb
and
movsl
loop
inc
mov
adc
xchg
mov
repz
dec
test
out
lods
adc
test
mov
jg
lods
fs
adc
push
pop
and
and
push
cwtl
inc
sti
or
cmpsl
data16
pop
jg
out
jns
dec
mov
and
outsb
push
dec
push
test
arpl
sbb
aas
xchg
lock
lods
inc
mov
pop
lret
bound
fucomi
dec
gs
dec
push
mov
or
push
jecxz
mov
cli
sbb
sub
ds
shrb
adc
mov
cmp
xor
sub
pushf
cmp
sub
pop
mov
jmp
div
pop
popf
pop
sub
js
lods
mov
or
stc
adc
cld
sbbb
jle
and
xor
js
pop
jno
adc
jns
pop
testl
push
imul
lea
sbb
jns
lea
pop
or
adc
notl
jae
cli
and
movhlps
and
pusha
idivl
jle
out
fistpll
les
pusha
mov
lea
daa
mov
test
inc
clc
mov
push
das
mov
mov
push
sarb
pop
lret
mov
mov
mov
js
iret
sub
jp
cs
jmp
jnp
aam
dec
jb
sbb
rorl
frstor
popa
das
xchg
push
ljmp
call
insl
adc
sahf
les
mov
xrelease
bnd
push
dec
lods
imul
stos
push
icebp
fwait
repz
imul
mov
adc
pop
xchg
sub
push
aam
daa
mov
pusha
xchg
pop
jbe
jge
jno
stos
mov
xchg
enter
sbbb
mov
sbb
xchg
cmpsb
insb
lret
cmc
or
or
xor
cmp
fildl
mov
cmp
in
cli
in
push
xchg
xor
gs
add
inc
cltd
lret
and
pop
sbb
and
jecxz
addr16
add
sahf
push
sub
sysexit
dec
pop
enter
xchg
xchg
push
dec
dec
push
pushf
fbstp
xor
mov
pop
rcr
xor
mov
pop
mov
fs
sub
cld
mov
sbbb
jne
cmp
xor
cmp
and
xchg
pop
inc
mov
sahf
orl
lods
mov
loopne
int
cld
mov
jbe
cltd
sbb
nop
push
pop
push
aam
push
addr16
notb
roll
cmp
push
call
dec
cmp
push
dec
cmp
outsb
mov
mov
ja
es
pusha
push
adc
cld
jg
stos
mov
and
pop
imul
xor
sub
sbb
adc
ljmp
mov
les
pop
mov
mov
cmc
jo
inc
clc
cmp
call
mov
push
pushf
stos
xchg
and
and
mov
cwtl
or
incl
xor
cwtl
cmc
push
movsl
in
jmp
mov
sub
sub
jl
pop
mov
sub
inc
push
or
dec
pop
les
loope
fwait
pop
jno
std
mov
std
js
push
test
mov
adc
nop
push
lea
adc
lds
sbb
jle
xor
push
daa
lret
mov
dec
push
ljmp
jb
adc
into
xchg
imull
jae
sahf
lret
dec
push
inc
enter
xlat
xchg
stos
daa
push
or
cmpsl
cmp
arpl
pavgw
leave
clc
insb
pop
jp
sbb
repnz
xchg
insb
filds
dec
push
pop
dec
xchg
dec
xchg
mov
fsubrs
or
pop
dec
push
push
xchg
inc
push
mov
push
imul
iret
push
aas
mov
shl
imul
pop
jle
int
push
jne
or
movsl
outsb
int
xchg
mov
nop
test
pop
icebp
sub
sub
ljmp
mov
repnz
andb
adc
pop
leave
push
push
dec
push
jb
fldcw
mov
pushf
jmp
add
cli
call
cs
into
or
lret
lret
dec
dec
lods
outsl
shl
push
cmp
out
cmpsl
data16
stos
aas
fucomip
cmp
xor
mov
mov
xchg
cli
sbb
mov
les
fwait
pop
cmpsl
ret
jle
xor
sub
cs
or
adc
das
movsb
call
dec
ss
jno
lea
rcll
inc
jae
inc
mov
add
je
dec
out
mov
mov
push
jbe
jg
push
scas
jnp
ja
jb
push
add
std
mov
mov
xor
rol
ljmp
out
enter
pop
xor
pop
sub
xchg
mov
dec
jno
pop
in
aad
les
and
push
int3
outsl
cmp
loop
rol
imul
bnd
mov
sub
cld
mov
andl
sub
int3
or
sahf
pop
mov
sbb
jmp
pop
add
add
lret
std
gs
xchg
popa
cmp
adc
sti
mov
enter
sbb
xchg
sub
je
xchg
mov
jbe
pop
pop
push
or
jecxz
jecxz
and
mov
add
pushl
cmp
inc
sbb
mov
or
mov
cmp
insl
insb
aam
loope
add
jo
mov
shl
xchg
out
or
mov
pop
arpl
sbb
inc
sub
mov
push
stos
xchg
xchg
sarl
js
push
jmp
mov
fldenv
inc
xchg
popl
sub
xchg
sub
lahf
mov
inc
sub
pop
pushl
add
stos
rcll
out
andb
or
sti
mov
arpl
cwtl
arpl
jge
maxps
aas
mov
addb
cmc
mov
stos
mov
cmc
xchg
lret
pop
leave
out
inc
dec
xchg
add
insl
rorb
imul
test
xor
pop
mov
dec
dec
filds
mov
addr16
mov
jg
xor
test
pop
pop
lock
adc
mov
rclb
push
repnz
push
sbb
dec
xor
repz
jmp
or
mov
sbb
mov
cmp
outsl
ja
pop
jp
mov
push
mov
repz
cmp
out
pop
aam
test
in
test
pop
fimuls
push
xlat
jno
xor
sarb
int3
in
andl
mov
push
jno
add
xor
fs
push
xchg
mov
cltd
pop
pusha
nop
sub
lods
popa
decl
fidivrs
lock
cmpsb
jns
adc
dec
lret
aaa
pop
div
cmp
in
cmp
mov
ss
aad
xchg
inc
imul
out
sbb
icebp
pop
jmp
or
mov
inc
mov
pop
mov
adcb
jp
test
sbb
ds
pop
int3
or
adc
in
xorb
sbb
rcrl
push
ret
jb
int3
mov
sbb
or
inc
or
sbb
shll
mov
outsl
jnp,pn
jo
push
pop
adc
into
xor
sub
cwtl
std
scas
inc
loopne
loope
mov
or
lea
in
mov
jmp
xor
sbb
sub
or
add
mov
test
rcrl
addb
icebp
in
mov
xchg
adc
ret
xchg
inc
vcmpss
jnp
cld
cmc
cmp
fisttpll
adc
pop
arpl
adc
mov
xor
sub
clc
stos
or
fiaddl
cmp
fstpl
jnp
ja
push
xor
test
pushf
or
icebp
movsl
gs
ja
inc
lock
stos
inc
loopew
dec
ret
mov
mov
hlt
std
fnstenv
and
shll
mov
movsb
imul
mov
scas
xchg
dec
jnp
sbb
mov
lods
test
fnstenv
jbe
cmp
xor
jl
out
pop
addr16
mov
push
fisubl
inc
hlt
pusha
andb
dec
ds
shrl
inc
incb
imul
add
ss
loopne
roll
inc
imul
push
sbb
scas
inc
bound
jmp
fisttpll
pushf
cmp
inc
or
dec
fists
mov
sub
icebp
enter
mov
mov
jbe
xchg
xchg
sub
in
cwtl
pushl
repnz
xchg
repnz
ja
mov
ja
movsl
aaa
xchg
jg
sbbl
in
or
and
cmpsb
test
pop
repz
sahf
outsb
pop
stc
adc
push
pop
movl
or
daa
mov
rorb
std
lock
loope
sub
test
add
cmc
add
dec
fcomps
mov
dec
mov
inc
add
mov
pop
pop
xor
sbb
push
adc
ret
pop
rcl
mov
pop
int3
rorl
sti
mov
cmpsb
ret
pop
aaa
sub
jge
subl
adc
cs
punpcklbw
lcall
dec
xor
jnp
sbb
pop
ja
or
push
dec
lcall
out
dec
adc
push
repnz
jp
hlt
movsb
mov
arpl
jbe
fmuls
jb
rclb
xchg
sbb
cmp
jnp
lods
xor
test
rorl
insb
addr16
adc
mov
ficompl
adc
cmp
fwait
test
in
mov
pop
aad
ljmp
jno
pop
pop
lods
mov
add
sbb
pop
js
movsb
adc
rclb
xor
dec
pushl
xor
loope
cli
aad
or
cwtl
adc
test
dec
leave
or
enter
stos
lret
outsb
mov
aas
pop
sbbl
xor
fistps
scas
add
adc
out
jno
push
movsb
cmp
je
mov
cmp
stos
xchg
es
mov
push
loop
mov
sub
xlat
pop
lahf
jnp
add
pop
adc
outsb
mov
xor
mov
inc
inc
pushf
outsl
mov
shlb
mov
mov
fdivrl
sti
fwait
adc
mov
adc
sub
push
mov
loopne
popa
sbbl
pop
out
push
mov
push
and
aas
mov
cltd
pop
fucom
dec
mov
movsl
lcall
jb
scas
adcb
xchg
inc
sub
scas
shrb
icebp
adc
les
xchg
dec
aad
aas
dec
jmp
jb
jne
insl
lret
movsb
inc
cld
xchg
inc
subl
inc
ret
mov
jo
mov
xchg
jno
mov
imul
mov
mov
adc
and
pushf
sarl
pop
outsl
jnp
and
and
cmp
test
sub
iret
and
cmpl
mov
cli
mov
mov
outsl
mov
addr16
push
imul
aam
mov
and
pop
stc
fs
lret
cmp
es
cli
pushf
les
xchg
mov
add
mov
pop
mov
jns
imulb
mov
pop
shrb
rorb
mov
sbb
insb
dec
negb
mov
nop
pop
push
lret
movsb
cs
into
aas
lret
rcr
lea
js
scas
and
ss
xor
fists
setnp
rcrl
push
sahf
cwtl
sbb
push
iret
jmp
test
repnz
push
mov
ret
dec
lock
clc
cmp
cmp
test
fsts
das
aas
aad
js
imul
popa
aam
addr16
sub
or
cmpsb
adc
pop
sbb
inc
jnp
stos
fsts
dec
enter
fbstp
sbb
pop
dec
imul
popa
cmpsl
sub
mov
adc
out
int3
gs
xchg
ficomps
mov
or
pop
xor
out
imul
addl
pop
addr16
hlt
push
inc
mov
shll
pop
sbb
cld
lds
aad
mov
sar
xchg
andb
sub
or
popa
cmp
xor
push
push
mov
les
xor
pop
lock
pop
jp
or
js
cmpsb
lods
dec
dec
repz
dec
movsl
inc
arpl
outsb
test
pop
sbb
fnstsw
imul
mov
xchg
out
sub
jne
notl
xchg
sub
test
push
ljmp
sbb
mov
in
adc
and
and
cmp
push
clc
decb
insb
xchg
mov
lahf
mov
imul
mov
aad
ret
lods
mov
notl
aas
xlat
sub
nop
sbbb
loop
test
addl
sub
icebp
loopne
cmp
adc
cld
push
mov
insb
mov
adc
dec
mov
notl
testb
repnz
outsb
jge
fnstcw
in
lock
add
jge
dec
mov
out
lea
mov
push
data16
xchg
cltd
and
pop
out
jne
pushf
cmp
mov
scas
dec
cmp
xor
mov
push
cs
gs
roll
out
in
ja
xchg
jbe
mov
mov
sarb
stos
add
sub
inc
stos
icebp
lods
inc
and
inc
gs
push
es
jo
pop
sub
stos
aas
mov
push
pop
aam
insb
and
daa
pushf
dec
xlat
outsb
jle
jne
insb
cli
add
out
xchg
int
pop
std
cmp
cmp
outsb
mov
sahf
jnp
cs
inc
pop
sub
or
jnp
mov
xlat
xor
push
clc
cmp
popf
mov
or
sub
repz
or
out
ja
or
inc
jo
xor
inc
lock
cwtl
push
cmp
imul
jle
adc
sti
pop
dec
je
mov
bound
fstps
scas
jb
insl
sub
add
dec
push
and
pushf
cmp
jb
hlt
insl
es
dec
cmp
imul
and
sub
aaa
fsts
popf
int
mov
mov
sbb
xor
mov
xchg
fmuls
iret
shrl
xor
in
in
jb
inc
cltd
pop
cs
ret
jae
xchg
or
xor
adc
sub
leave
sbb
sti
mov
into
outsl
mov
mov
push
shl
or
and
aam
testl
push
pushf
je
out
pop
clc
push
cmpsl
mov
fcmovb
sbb
inc
test
or
sbb
sti
push
add
adc
jmp
or
sahf
or
pop
cmp
mov
jle
cli
mov
shrb
pop
mov
xchg
mov
or
sbb
push
mov
cmp
sbb
andb
cmp
sub
dec
jp
mov
and
mov
mov
divb
roll
mov
sub
and
movsb
sub
je
inc
arpl
mov
xchg
jge
in
repnz
rol
add
pop
mov
pop
xchg
outsb
cmp
cld
jl
sti
lods
popf
and
sahf
movsb
sbb
in
iret
int3
in
std
lock
jp
cli
xchg
lods
int3
gs
cld
adc
hlt
or
xor
or
pop
lods
loopne
aaa
out
jb
rcr
incb
dec
add
lret
in
add
clc
inc
sbb
mov
ret
jle
daa
lret
faddl
mov
movsl
cmp
addl
sbb
notl
test
js
cmpsb
cmp
xchg
pop
add
js
in
cmp
cli
push
jl
je
xor
daa
xor
ss
mov
mov
jge
out
std
cltd
cmpsb
in
pop
out
jne
sub
mov
roll
imull
fs
push
lret
lret
fiadds
fdivs
add
lahf
out
pusha
and
cmp
lods
and
lea
dec
int
dec
sub
add
in
adc
sbb
jnp
test
dec
imul
add
mov
scas
shlb
dec
xor
jmp
add
cmp
and
cmp
ja
neg
imul
add
cmp
inc
andb
jp
mov
xchg
mov
mov
and
clc
pop
cltd
sub
mov
and
shll
mov
addb
mov
push
sbb
add
xor
scas
xchg
push
jg
xchg
daa
jmp
adc
fsubl
out
mov
fistl
and
inc
add
cmpsl
xor
fistpll
pop
push
in
jge
test
andb
test
in
push
xchg
mov
push
xchg
push
xor
loopne
repz
xor
rclb
xchg
in
xor
ficoml
loope
pushf
arpl
in
sbb
sub
pop
arpl
ficoml
test
mov
cmp
fadds
adcl
fwait
cmp
add
and
cmp
and
out
lea
mov
jo
sbb
and
pop
sahf
lods
andb
dec
out
adc
daa
jb
push
ss
pop
xlat
mov
sbb
add
lods
movsl
loop
jp
fidivs
testl
mov
add
stos
lret
or
test
std
xchg
xor
mov
idivl
stos
and
mov
jnp
mov
and
mov
out
testb
adc
sub
insl
push
adc
fdivs
xorb
sbb
lods
outsb
inc
pop
pop
sub
adc
dec
imul
scas
jbe
cltd
std
int
fsubrs
push
add
or
cltd
in
inc
fs
inc
aaa
push
and
loopne
and
inc
bound
repz
ljmp
int
repnz
cmp
es
negl
or
gs
jne
cmc
xor
adc
xor
popf
lds
shr
popa
and
mov
fcompl
add
mov
dec
and
jecxz
mov
cmpsb
lock
or
add
insl
imul
sbb
dec
push
mov
inc
xchg
inc
out
test
sti
or
and
and
mov
xchg
fsub
adc
adc
pop
pop
popa
sbb
or
out
xchg
or
cmp
mov
rorl
jmp
les
loop
sub
cmp
das
jle
mov
les
inc
xchg
pop
mov
clc
fdivs
jno
sbb
jno
cmp
aaa
aaa
shrb
pop
jge
aaa
imul
sti
int
mov
out
adcb
mov
shl
lcall
mov
xchg
stc
jp
int3
fwait
mov
repz
femms
test
sbb
mov
je
jmp
popf
dec
movsb
rolb
xor
popa
sub
inc
lret
xchg
jmp
cs
cmp
das
lahf
outsb
test
dec
fmull
dec
cmc
scas
das
dec
int3
fsub
sub
std
adc
lds
mov
mov
push
pop
xchg
jg
add
aaa
mov
add
inc
in
sub
mov
push
mov
mov
aad
test
fwait
jmp
shll
gs
fwait
push
fsubl
loop
xor
arpl
loopne
mov
jb
movsl
loopne
xlat
adc
cmp
cltd
mov
mov
out
dec
arpl
pop
mov
cli
sub
into
call
xor
jno
mov
mov
mov
test
test
inc
add
mov
adc
aaa
test
add
mov
mov
mov
stos
lret
fistps
leave
push
xor
hlt
imul
es
enter
and
movsb
dec
mov
mov
or
movsl
pop
out
dec
fldcw
push
loope
pusha
lods
push
inc
fwait
icebp
mov
jne
leave
dec
mov
mov
adc
sub
mov
or
pop
icebp
mov
xchg
pop
or
cs
aad
pop
repnz
cmpsl
loopne
xchg
add
stos
sbb
addb
add
data16
stos
pop
inc
scas
mov
das
adc
jb
mov
xchg
test
sub
mov
fstl
adcb
and
mov
adc
xlat
xchg
or
sub
out
xor
das
dec
jae
in
fs
sbb
sbbb
stc
aad
cld
and
push
mov
fildll
lock
dec
mov
hlt
test
das
push
xor
outsb
pop
push
mov
pusha
popa
fiadds
es
arpl
inc
and
imul
and
xchg
sbb
adc
push
pop
mov
mov
int3
or
mov
adc
and
adc
cmpsb
cli
sbb
test
cmc
mov
andl
cmp
mov
scas
jmp
push
xchg
sbb
xor
stos
aaa
dec
dec
pushf
mov
out
cmp
lret
insl
les
cmp
idivl
add
cld
popa
jl
fisttpl
movsb
cmpsb
js
inc
mov
in
push
jmp
pusha
push
jmp
add
pop
xor
mov
lret
mov
in
push
lret
clc
stos
jmp
fs
jle
jbe
mov
or
mov
pop
aas
dec
push
mov
jae
or
icebp
dec
std
cltd
in
ret
mov
cs
pusha
cs
push
mov
sub
add
popf
push
xchg
push
dec
aas
aas
xor
loop
decl
push
in
insl
test
pusha
scas
inc
out
jae
cmpsb
sarb
inc
adc
aam
addr16
mov
mov
or
mov
gs
lahf
out
out
inc
cmpsb
cmpsl
and
outsb
outsl
int
push
mov
cmp
repnz
xchg
and
das
mov
push
dec
ror
rolb
dec
pop
out
mov
adc
push
push
adc
icebp
mov
inc
je
aaa
mov
add
mov
mov
sti
orb
adc
out
dec
cmp
dec
mov
inc
das
xchg
sub
stos
dec
mov
sub
xchg
shl
and
dec
pop
loopne
mov
hlt
out
push
jge
mov
add
ficompl
or
gs
dec
loope
std
cmp
inc
pop
push
iret
lods
sbb
fwait
ret
fiadds
add
jmp
popa
sub
insb
div
or
push
push
aas
push
stc
not
mov
adc
js
pusha
rorl
cmp
xchg
out
lea
pop
in
cs
in
test
jbe
jb
fisubrs
pusha
clc
popf
movsb
test
mov
adc
xlat
add
push
mov
mov
sub
pop
stos
popf
mov
mov
lret
je
repnz
push
insl
push
sahf
ret
cli
imul
sbb
cmpsb
jecxz
add
mov
cltd
sub
adc
aas
push
clc
xor
jno
xchg
fsubrs
lods
dec
daa
inc
mov
xchg
daa
jle
loope
mov
xchg
sub
mov
arpl
push
xchg
push
mov
sti
test
vmovhps
test
test
sub
ret
mov
pop
xor
subl
xchg
and
imul
and
xchg
aad
inc
fsubs
jg
mov
out
jecxz
push
stc
inc
clc
les
ret
cld
xchg
or
dec
xchg
sub
inc
f2xm1
test
jp
ret
cmpsb
and
popa
mov
or
lock
xor
ret
ss
ljmp
aam
pop
enter
lods
and
out
das
ret
sarl
or
and
loopne
flds
imul
call
lret
jge
hlt
es
xor
fldenv
push
pop
fs
iret
or
std
outsb
popf
aas
dec
iret
popl
jle
adc
and
popa
sbb
adc
in
sbb
lods
inc
movsb
addr16
je
push
xchg
sub
sub
push
jl
cmp
sti
jae
aad
sbb
std
mov
ja
xchg
push
fildl
loop
dec
push
adc
test
cmc
rcrb
daa
dec
daa
sub
xchg
insl
int3
rcll
mov
es
dec
xchg
cmp
mov
mov
pop
les
mov
stos
sbb
pop
jne
or
adc
push
add
sub
dec
pop
cmc
dec
lods
and
ret
push
dec
mov
cmc
subb
push
repnz
aaa
sahf
dec
mov
pushf
rcrl
adcb
cmp
cmp
call
lcall
repnz
xchg
xlat
mov
ss
pop
stos
push
cmp
loop
lods
insl
cmc
rcl
repz
pop
adc
sbb
dec
mov
add
test
inc
and
test
cwtl
cs
and
or
pushf
fisubrs
adc
mov
stos
mov
stc
addr16
jno
xor
dec
loop
in
push
outsl
fidivl
inc
mov
std
ljmp
xchg
add
or
cmc
lds
xchg
push
add
mov
aaa
insl
cmc
adc
push
insb
sub
insl
cmpsb
push
xchg
lahf
leave
inc
mov
xchg
push
xchg
xor
inc
mov
pusha
or
popa
jnp
push
xor
xor
ds
int3
xchg
and
call
cwtl
mull
scas
xor
cmp
in
insl
add
pop
pop
in
imul
jecxz
leave
xor
into
dec
cmp
shll
pop
sub
sets
cmp
dec
push
sbb
pop
mov
imul
out
inc
lret
xchg
mov
xchg
dec
inc
popa
jmp
in
and
mov
mov
and
jecxz
inc
pop
cmp
xchg
imul
aam
sbb
jg
xchg
xchg
insb
adc
test
jl
add
mov
or
push
xchg
or
fcomps
mov
jle
in
inc
sbb
addr16
cmp
pop
outsb
loop
lods
ret
and
add
mov
push
cmp
jge
fsin
mov
mov
repz
xchg
pushf
dec
fs
xchg
cs
loop
inc
inc
jae
inc
mov
cli
pushf
jge
mov
inc
adc
jne
ljmp
cltd
jle
cwtl
xor
fnstenv
sbb
lret
push
outsl
add
fs
pop
fidivl
pop
mov
jg
push
cmc
or
and
sahf
jns
or
cwtl
mov
inc
sub
stos
fisttpl
cmc
jg
xchg
pop
js
pushl
sahf
loope
mov
aad
cmpsb
icebp
cmc
ss
daa
sarl
push
nop
dec
paddusb
cltd
jno
notl
cli
test
lods
jmp
ss
xor
data16
pop
mov
ret
jp
push
in
cmpsb
lods
mov
jbe
data16
xchg
or
test
xchg
mov
pop
insb
add
xchg
adc
mov
cmp
shll
dec
iret
test
arpl
dec
pusha
clc
sub
jmp
ret
lahf
lcall
adc
cmpsb
in
je
jne
arpl
bound
fildl
adc
mov
push
inc
cwtl
push
bound
lds
cmp
fwait
jp
sbb
popl
in
pop
or
mov
cmp
out
in
sbb
dec
or
pop
out
andb
out
lds
push
xchg
and
iret
mov
xlat
daa
xlat
jnp
jle
pop
loopne
cmp
cli
movsl
aam
rcr
out
or
sub
cmp
test
pusha
test
sbb
push
popf
cmp
iret
and
push
inc
cmc
addr16
inc
sub
inc
push
pop
rcr
hlt
addr16
dec
inc
inc
inc
repnz
fnstsw
adc
movb
pop
dec
cmc
je
out
xor
or
push
jo
or
enter
ds
nop
idivb
ja
aaa
shld
xor
jecxz
pop
sub
rcll
cmpsb
cmp
outsb
jb
fsubl
arpl
pop
sbb
into
insl
jl
and
dec
stos
mov
andb
inc
imul
inc
xor
arpl
cwtl
sti
lds
push
mov
std
pop
pop
inc
xchg
sbb
leave
xlat
repz
fisttpll
mov
and
movsl
sbb
xor
lods
dec
mov
icebp
popf
and
jl
inc
mov
pop
add
sub
cld
jno
mov
mov
loope
mov
mov
xchg
jo
sbbl
sbbb
lea
lods
cld
outsl
adc
sbb
jg
push
jl
xchg
adc
mov
inc
jge
fbstp
push
push
or
xlat
insl
jae
in
stos
xchg
hlt
sbb
or
push
dec
mov
pusha
sub
mov
or
fisubrl
mov
scas
mov
jns
outsl
into
mov
or
mov
mov
inc
aas
cwtl
std
mov
cmovs
mov
pop
int
lret
lds
jns
inc
fucomi
mov
and
sub
mov
cmc
fs
mov
arpl
jno
pop
push
sahf
pop
jo
int
cmp
xchg
ss
mov
and
pop
dec
negl
jno
out
xor
stos
stos
cmp
dec
stc
mov
into
dec
lahf
jno
jecxz
add
rorb
cltd
fidivrl
and
cmp
sub
or
popa
xchg
jmp
mov
pop
sub
leave
sub
mov
mov
mov
arpl
xchg
xchg
scas
lcall
pop
ss
jge
pop
rcrb
fdivl
jmp
push
lock
or
lahf
popa
call
es
test
push
pop
pusha
inc
jo
sar
mov
loope
pushf
dec
fst
cmp
jmp
outsb
icebp
imull
cwtl
movsb
xchg
pop
cmp
iretw
data16
outsl
sub
and
fxch
sub
or
lcall
mov
lds
popa
rcl
das
test
xchg
stos
push
gs
mov
xchg
pop
aas
ret
lods
nop
sub
ret
addr16
aam
jae
xor
pushf
or
enter
in
enter
imul
ss
sub
aas
test
outsl
mov
cmp
and
lret
push
mov
stos
fdivrs
pop
add
dec
testb
cmp
push
cmp
sbb
pop
cmp
js
inc
sti
es
idivl
cmc
add
daa
cmp
movsb
mov
jo
mov
mov
test
std
and
shr
cmp
call
and
push
xchg
mov
xorl
daa
in
add
fnstenv
in
inc
xchg
fcoms
inc
outsb
mov
decb
cltd
mov
adc
shlb
lods
fdivrs
lahf
sub
fimull
push
push
sub
repz
jo
or
mov
mov
jno
jmp
int
mov
sub
pop
push
xchg
decb
xorl
add
and
addb
pop
cmc
addr16
mov
outsb
push
lret
adc
adc
xchg
jl
out
or
xchg
adc
outsl
push
push
or
mov
jae
mov
fnsaves
nop
add
adc
pcmpgtd
ret
xchg
sarl
and
inc
sub
add
ljmp
pushf
dec
cmpsl
loope
sbb
jb
push
icebp
outsb
iret
mov
cmp
iret
sbb
or
or
int
lock
fistps
addl
popf
lret
pop
push
xorl
arpl
js
jp
andl
xor
insb
xchg
nop
and
mov
mov
jecxz
or
pop
aaa
pop
js
fidivs
int3
mov
outsl
jge
xor
clc
dec
push
and
xchg
push
jb
mov
into
cli
movsl
cli
inc
sub
fiadds
sub
rcr
xchg
push
pop
aas
ret
cwtl
push
sub
sbb
xchg
hlt
cmp
in
mov
dec
aam
pop
cmpsl
xchg
mov
or
or
movsb
push
pop
cmp
lods
xchg
cmpps
jne
sbb
sbb
add
adc
add
sbb
or
and
mov
lret
sub
in
xchg
lahf
add
lods
mov
jge
pop
add
scas
repz
dec
inc
pop
mov
inc
loopne
iret
shll
dec
es
lret
mov
cli
call
imul
push
jmp
inc
inc
sarb
push
icebp
push
mov
mov
scas
xorb
sbb
fnstcw
jge
push
dec
aaa
dec
into
enter
pop
rcll
lret
mov
pop
inc
aaa
lods
hlt
in
fldenv
xchg
cmp
nop
sar
jp
scas
movsb
icebp
fwait
jb
fucom
xor
cltd
push
scas
lock
jne
and
inc
outsl
int3
or
pusha
mov
popa
cmp
icebp
movsl
sub
lret
std
adc
inc
mov
cbtw
mov
xor
or
std
pop
je
jg
jno,pt
jno
pop
push
adc
xchg
jg
xchg
leave
jo
out
cmp
aas
inc
xor
ss
push
sbb
mov
add
sbb
mov
ret
daa
adc
cmp
cwtl
insl
out
mov
mov
mov
inc
in
enter
leave
pusha
pavgb
xor
push
cmpsb
or
loop
push
nop
xchg
aaa
push
test
adc
rorb
out
loope
mov
pop
and
add
cwtl
xchg
mov
hlt
fsubrp
sbb
test
add
mov
push
pop
fsts
cmp
cltd
aas
mov
test
cmp
pop
test
ljmp
add
jl
jb
fbstp
cld
imul
jle
mov
jns
ficompl
pushf
and
push
lcall
sub
pop
xchg
mov
mov
arpl
mov
add
fs
or
inc
mov
ret
mov
pop
sub
mov
dec
pop
daa
outsb
int
ja
cwtl
inc
add
cmpsl
out
jnp
int3
jno
scas
repnz
and
inc
push
lret
outsb
inc
xor
push
in
jb
ja
fisubrl
adc
push
sub
cmpsb
xlat
cmc
sub
lahf
jg
and
cwtl
push
notl
xor
int3
arpl
mov
and
sarb
push
ret
sar
lods
push
int3
cld
cmp
mov
push
adc
xor
fs
fdiv
mov
je
fsts
repz
sub
ret
jno
mov
mov
push
push
out
test
jmp
arpl
pop
gs
adc
mov
mov
int
testl
rcrl
popa
faddl
cmp
inc
pop
jmp
jne
mov
inc
xor
shll
and
push
mov
enter
pop
mov
and
inc
bound
jbe
mull
pop
or
sbb
repz
fdivrs
xor
or
in
rclb
imul
shrb
lods
sbb
sbb
ds
cli
xor
jg
scas
push
in
adcb
mov
mov
jle
xchg
rcll
movsl
cmp
add
stos
dec
fimull
sbb
fbld
imul
xor
ljmp
sub
add
nop
inc
fmul
ja
mov
jp
mov
das
insl
jo
ret
sarl
icebp
mov
lahf
in
bound
sub
and
dec
pop
aaa
mov
inc
aam
xchg
sbb
aam
push
sahf
adc
out
cld
mov
mov
mov
test
add
mov
les
mov
loop
cmp
pusha
pop
adc
sbbl
mov
mov
shlb
cmc
cmc
test
dec
and
iret
movsb
leave
aam
push
mov
pop
xchg
inc
outsl
xor
mov
push
xlat
mov
or
push
or
aad
sub
inc
jb
jae
mov
pop
mov
jmp
inc
scas
jmp
and
dec
in
push
dec
js
dec
dec
dec
mov
dec
in
bound
arpl
dec
mov
enter
rclb
push
imul
inc
negl
stos
scas
lock
push
aam
ss
imul
inc
scas
mov
stc
sub
lods
icebp
dec
and
jp
or
adcb
bound
aad
fnsave
and
xor
and
pop
pop
or
div
negl
inc
shlb
push
loope
insl
std
cmpsb
in
loopne
loopne
inc
fcomps
and
push
xor
lcall
mov
out
xor
cs
sbb
push
pop
cmp
push
pop
stc
xor
cmp
add
movzbl
cmp
push
sbb
getsec
jg
push
jnp
lock
daa
ss
addr16
sahf
push
mov
gs
dec
adc
cmp
sbb
fmul
outsl
dec
loop
data16
dec
scas
sbb
das
imul
and
cmpsl
xchg
inc
add
jo
jns
dec
mov
sti
lock
rol
adc
fistps
popa
dec
xorl
movsl
mov
test
cli
scas
inc
fisttps
xchg
jle
xor
cmpsl
pop
out
push
int
add
fsubrs
aad
push
add
repnz
inc
pop
notb
jns
psllq
mov
imulb
xlat
jbe
pop
pop
clc
lahf
idiv
cs
and
daa
lcall
inc
pop
mov
mov
mov
lret
je
sbb
sub
lods
xchg
sbb
sub
dec
rolb
iret
mov
add
seta
xchg
sub
int
add
ret
sub
lods
xor
aas
sarl
and
xor
push
outsb
ss
test
sub
mov
data16
es
sbb
pop
xchg
and
sub
xor
outsl
push
pop
adc
mov
push
and
sbbl
add
ja
inc
ret
filds
mov
insb
jecxz
pushf
in
call
dec
outsb
scas
xor
cmp
addl
sbb
push
pop
mov
push
out
jo
push
out
icebp
jne
decl
sub
in
mov
rorb
adc
jmp
movsl
cmp
lods
out
out
dec
dec
lods
add
daa
inc
xchg
and
dec
inc
xlat
cmp
iret
lds
fadd
pop
test
fcomip
mov
mov
jns
sub
push
pop
loopne
push
pop
mov
aad
cmpb
divl
idivl
ljmp
adc
mov
leave
inc
mov
pop
std
push
xor
push
out
repnz
mov
fcoml
push
mov
call
addr16
xchg
fsubrp
inc
repnz
push
push
enter
addl
mov
inc
jle
adc
movsl
addl
in
pop
js
fwait
cwtl
insb
add
xor
aas
xorb
call
iret
and
int3
bound
cs
lahf
orl
outsl
jmp
stos
stos
xchg
add
push
mov
lahf
pushf
cmp
clc
push
scas
or
into
fwait
lcall
dec
mov
cmp
in
push
mov
out
in
rorb
outsb
cld
and
aad
shl
jno
aam
imul
adc
push
and
or
cwtl
jp
sub
into
nop
lods
rcrl
lods
mov
fbld
xchg
test
test
xor
int
loope
sarb
jge
clc
cli
xchg
mov
ss
ss
sahf
subl
xor
sub
xlat
outsb
pop
imul
inc
test
in
jmp
jae
es
adc
cmpsb
je
aad
inc
jp
std
and
ss
setns
cld
xchg
adc
mov
mov
flds
div
pop
and
and
xchg
xchg
mov
xchg
idiv
fstp
and
fs
mov
cmpsb
lock
shl
lods
xchg
xchg
aad
cs
je
push
mov
xchg
xor
mov
shl
xor
xor
pop
xor
and
int3
push
pop
adc
mov
pop
lret
sub
test
ret
dec
mov
dec
push
out
mov
fnstenv
or
push
jo
mov
mov
mov
inc
xchg
mov
nop
dec
cmp
mov
in
loop
sbbl
push
popa
and
rorb
dec
cmp
cmp
jl
jns
bnd
shll
dec
mov
es
push
add
ss
mov
aad
movl
cmc
mov
xchg
inc
outsb
ficoms
lods
dec
nop
shrb
es
fisubs
movsb
cmp
mov
adc
ret
int
jmp
push
jge
mov
std
inc
stos
mov
dec
xchg
fsubr
call
in
xor
add
pushf
insl
or
lret
and
in
push
jae
shrb
les
shlb
add
add
inc
ja
and
pop
fnsave
mov
add
cwtl
sub
mov
sbb
push
mov
stos
stc
ror
mov
jl
pop
dec
xchg
push
jle
push
jmp
push
insl
bound
dec
test
mov
dec
loop
pop
fdivrs
push
or
shl
mov
xor
mov
shr
fiadds
mov
dec
scas
dec
and
into
data16
sub
push
es
nop
xor
and
bound
jle
mov
sbb
out
jmp
adc
push
and
adc
cmp
push
mov
pop
je
add
push
pop
or
and
popa
mov
adc
imul
push
xor
hlt
rcrb
outsb
loope
jp
add
addl
fmull
fcomps
stos
scas
jns
pop
outsb
xchg
push
cmpsb
push
sbb
aam
fwait
jbe
dec
adc
dec
push
arpl
xchg
dec
dec
add
dec
loope
cmc
pop
sbb
call
push
xchg
pushf
push
cmpsb
test
in
ja
int
sub
sbb
or
dec
cmpl
repnz
mov
mov
pop
movsl
daa
leave
push
in
xor
testb
xor
fs
stc
int
push
xor
test
imul
mov
and
add
lds
int
or
pusha
pop
or
xor
loopne
dec
dec
aam
sar
dec
push
scas
inc
insl
ljmp
mov
insl
push
test
pop
push
imul
add
dec
mov
js
adc
jo
dec
sbb
clc
mov
sbb
lock
jno
lahf
out
sub
lea
aas
cmc
and
mov
pop
jae
rcll
test
adc
jp
jmp
mov
dec
mov
hlt
flds
fisttpll
jbe
std
dec
loop
xor
rcrl
fistps
enter
loop
push
cmp
mov
mov
adc
aam
xchg
sub
dec
pop
insl
inc
mov
cmp
or
jnp
add
mov
jmp
pop
aad
xor
scas
xor
push
daa
stos
pop
mov
pop
bnd
cld
ret
push
aaa
out
aam
aaa
push
in
jae
push
adcl
mov
lods
sub
push
cmp
in
sub
dec
pop
and
dec
xchg
xchg
xchg
inc
mov
cli
sahf
xor
xor
cltd
ja
std
es
test
push
adc
popa
or
lret
imul
cmp
repz
pop
idivl
orl
mov
sbb
ljmp
orb
sub
pop
ljmp
pop
add
icebp
jns
pop
jae
rclb
add
inc
sub
loopne
mov
add
ljmp
mov
stos
or
shrl
sub
pop
faddl
xor
push
mov
push
pushf
inc
sahf
cmp
iret
scas
lods
je,pn
pop
jmp
and
gs
lds
in
xor
cmpsb
cld
popa
mov
inc
pop
stos
outsl
in
ljmp
mov
sbb
lock
in
ja
sub
sbb
adc
xchg
cmp
cli
xchg
ljmp
push
pushf
lret
xlat
int
or
pop
pusha
push
fistl
hlt
adc
lret
ja
jb
imul
ja
xchg
add
push
lods
iret
in
popa
push
push
sub
pop
cli
jno
sub
jne
inc
sub
ljmp
nop
and
pop
mov
sub
dec
js
mov
xlat
mov
stos
data16
stos
test
outsl
xchg
pop
imul
icebp
inc
mov
xchg
imul
js
popf
push
cmpsb
cmp
call
sbb
in
imul
or
pop
sbb
xlat
cli
imul
xor
jg
sub
psllq
clc
xchg
test
subb
js
mov
jp
fld
mov
mov
rorl
test
dec
pop
push
pop
push
xchg
iret
fcoml
push
add
mov
cli
mov
fildl
fadd
imul
ljmp
jno
filds
sub
mov
les
loop
jge
ds
pop
mov
adc
and
mov
popa
push
in
arpl
mov
fidivrs
push
mov
je
mov
sbb
dec
mov
pop
pusha
stos
test
out
int3
stos
inc
or
leave
sub
or
add
sub
fadd
outsb
sub
aaa
pop
std
dec
hlt
mov
mov
lods
loop
add
jo
ss
push
mov
cmc
int3
or
popa
idivl
lods
dec
insl
pop
pop
jle
mov
mov
sub
adc
out
fcompl
mov
pop
jbe
dec
mov
cmpsb
cmp
push
mov
pop
shlb
jp
pusha
gs
xchg
jnp
cmpsb
imul
pushf
or
out
xchg
lahf
mov
shl
adc
clc
push
add
xor
xchg
rorb
mov
loop
cs
xor
jg
cmc
mov
push
iret
adc
shlb
loopne
pop
addr16
mov
add
sbb
lret
and
mov
ret
xchg
xchg
pop
ljmp
push
cmp
test
mov
or
pop
adc
shll
add
push
clc
popl
das
push
mov
adc
out
lahf
hlt
dec
fnstsw
cmp
xor
jo
test
xor
lcall
in
addl
sbb
inc
xchg
add
into
cmp
dec
fwait
cli
pushf
int3
jo
xor
mov
std
and
fwait
call
lods
mov
xchg
push
or
ljmp
xlat
sub
add
testb
inc
xchg
hlt
in
add
jecxz
pop
fdivl
rcrb
jns
fbstp
pusha
adc
fwait
sti
ja
call
pop
push
mov
dec
test
mov
sub
mov
int3
push
jmp
ror
jo
push
or
push
jo
aaa
lret
pusha
inc
andb
adc
cmp
mov
mov
xor
bound
stos
push
mov
ljmp
jno
fwait
loop
lods
add
sbb
cltd
and
mov
sarb
jo
je
negl
lods
in
fucom
fadds
jnp
mov
bound
push
call
inc
mov
stos
push
cmp
xor
lock
add
xchg
daa
fisubl
gs
adc
push
xchg
test
inc
dec
out
outsl
fs
movsb
sbb
pusha
pusha
and
bswap
outsl
jb
ss
data16
in
daa
inc
inc
xor
adc
out
inc
sahf
aam
adc
add
aaa
xor
xor
popl
jl
xchg
out
popf
insb
jle
icebp
jle
inc
lcall
cmc
or
jbe
xchg
sub
cmp
mov
loop
xchg
ja
mov
mov
push
jmp
lock
xchg
adc
xchg
sub
adc
call
jbe
lret
ljmp
add
adc
insl
fisttpl
hlt
into
mov
fisubrs
fnstcw
or
jne
pop
xor
sbb
lods
xor
iret
fwait
jne
inc
stc
mov
push
repz
jo
stos
adc
imull
xchg
out
fisttpl
sahf
mov
cmc
push
push
aas
inc
ret
es
pop
cmp
lds
bnd
cltd
cmp
lods
jo
addr16
xchg
dec
inc
adcl
push
popf
jo
fcmovnu
jae
xchg
je
or
inc
inc
dec
test
sub
out
dec
add
sub
nop
or
icebp
outsb
push
or
mov
and
push
fsubrs
ret
or
call
in
sahf
pop
out
pop
ss
nop
and
mov
lds
cmc
ja
mov
lahf
cltd
int3
pop
out
or
mov
loopne
hlt
int
inc
cwtl
stos
inc
bound
mov
jne
stos
push
sbb
test
xor
sub
push
pop
lahf
stos
lea
push
int
insb
addb
iret
fldt
jo
dec
add
int
pusha
das
sub
xor
inc
mov
ja
push
fldenv
and
mulb
adc
sub
pop
loope
pusha
xchg
je
out
movsl
mov
sub
in
mov
lahf
and
mov
cmc
xchg
push
mov
mov
fisubl
movsl
or
mov
dec
mov
fs
and
cmc
xorl
repz
adc
adc
jmp
fld
lahf
xor
push
jmp
jb
xchg
push
sbb
or
jns
xchg
fldt
dec
push
sbb
fldl
arpl
subl
addb
sbb
and
movsb
hlt
ficoms
mov
mov
lcall
pop
mov
orb
xchg
add
push
mov
sbb
xchg
test
add
jecxz
ss
add
pop
test
xchg
mov
test
jecxz
mov
insb
test
lret
mov
dec
loop
ficoml
push
add
insb
lock
inc
dec
push
hlt
arpl
mov
ret
test
cmpsb
push
notb
in
iret
dec
nop
stos
jns
xchg
mov
incb
movsl
frstor
push
xor
data16
shlb
cmp
or
sarl
cld
inc
pop
xchg
or
popf
fisubs
mov
ljmp
les
movsb
cmp
dec
scas
add
daa
xchg
mov
push
pushf
dec
xor
cmp
sarb
scas
or
imul
pop
pop
aas
aas
sub
loope
cmp
test
outsl
lcall
push
or
cmpsl
mov
push
dec
out
cli
outsb
adc
stos
jns
aam
addr16
lock
int3
fs
jl
xchg
ret
int
movsl
sbb
sub
js
ja
xchg
pop
push
jns
aam
mov
mov
daa
outsl
jmp
int
insl
faddp
lds
cmpsl
mov
pop
cmp
jnp
pop
jae
pop
das
out
int3
wrmsr
push
dec
xor
mov
notb
mov
or
int3
je
pop
jg
and
lock
adc
int
adc
jp
cltd
rcll
stos
adc
jns
or
mov
cli
jge
imul
ds
push
and
addl
mov
movsl
cmp
lock
adcl
add
jno
mov
jg
cmp
gs
in
shlb
sbb
pop
mov
mov
sub
pop
mov
mov
cmp
call
cmp
imul
stos
mov
xor
jmp
and
push
cmp
mov
fisttpl
stos
mov
shll
mov
sub
aaa
adc
ret
repz
mov
test
out
jp
dec
pop
mov
les
enter
adc
rclb
cmp
or
fiadds
push
xor
xchg
push
and
mov
mov
sbbb
mov
xchg
sub
lret
pop
jne
mov
add
dec
sbb
mov
adcl
push
pop
add
or
andb
mov
icebp
sub
fsubs
add
and
testl
jbe
mov
cmp
inc
fisubl
mov
int
or
cmp
jg
add
hlt
mov
adc
clc
mov
mov
pusha
pushf
addl
adc
jne,pn
pop
jo
fidivrs
xlat
push
rorb
push
add
jge
or
mov
test
imul
pop
push
jb
pop
ds
jo
mov
xchg
mov
ljmp
jo
xchg
insb
scas
xchg
adc
arpl
jle
push
imul
mov
clc
cltd
cmp
adc
ds
test
push
lods
adcl
mov
jo
das
sahf
movsb
ja
inc
jbe
pop
fisubrl
std
das
fldenv
mov
jne
arpl
arpl
leave
test
push
iret
xor
dec
add
pop
aaa
pop
lods
rcrb
mov
int3
push
mov
or
scas
jge
xor
aam
and
cmp
push
xchg
out
pushf
and
adc
out
xchg
jae
xchg
iret
dec
dec
sarl
in
les
push
inc
pop
test
mov
mov
or
sbb
popa
gs
fadds
cli
scas
pop
repnz
mov
jge
jns
jne
test
cmpsb
fsubl
mov
jno
xchg
sub
ds
mov
xlat
sbb
inc
push
std
xchg
test
stos
dec
push
cmpsl
ds
cwtl
cmp
leave
stos
mov
das
mov
jne
cmp
or
mov
std
jnp
push
movsl
xor
test
inc
push
es
adcl
xchg
mov
dec
ret
out
movsb
dec
dec
fwait
rorb
movsl
imul
shlb
add
sub
pop
pop
scas
add
pushl
in
inc
jmp
movsb
dec
insb
dec
mov
jle
call
inc
sub
shrl
xchg
iret
jnp
pop
pop
call
sarl
out
out
jne
push
mov
movsb
mov
jne
les
xor
add
xor
stc
test
push
mov
insb
stos
into
cmc
mov
sbb
stos
mov
mov
jne
pop
in
pusha
fcmovnb
iret
xor
rcl
lret
aam
sahf
int
mov
sahf
fimuls
inc
std
mov
movl
cmpsl
pop
mov
cmp
cs
filds
aad
add
inc
add
cmc
ds
loop
pop
arpl
movb
pop
dec
int3
loope
vpshufhw
pop
out
pusha
into
sub
into
or
and
add
push
jb
pop
add
jl
aad
addr16
push
mov
mov
das
pop
mov
cs
mov
mov
mov
cmp
cmp
dec
xchg
jno
dec
xchg
dec
adc
mov
xor
inc
push
jnp
push
jo
add
or
jns
sti
cmp
fcoms
mov
test
xor
sbb
pop
out
les
mov
pop
repnz
inc
xor
pop
cltd
lret
popf
jmp
inc
mov
inc
call
fs
sbb
arpl
int3
lcall
fwait
sbb
mov
std
pop
ljmp
es
repz
test
xchg
loopne
xlat
cmc
add
test
loopne
mov
cmp
or
jecxz
subb
mov
enter
sub
daa
xor
jg
or
call
in
fldenv
add
les
mov
push
mov
or
jge
dec
fadds
mov
mov
mov
out
mov
or
std
cmp
mov
adc
cmp
daa
aaa
dec
pop
pusha
stc
bound
sahf
sub
inc
test
and
out
sbbb
call
inc
jnp
add
in
cld
out
fstpt
jmp
lret
add
jb
or
dec
pop
pusha
pop
lock
or
fdivrl
cmp
or
clc
jae
mov
divl
inc
imul
lods
pop
push
jb
int
lret
fmuls
int
jecxz
jp
cmp
in
popa
dec
movsb
cmp
xor
jp
add
fldt
dec
jo
pop
mov
pop
pop
mov
inc
repnz
xor
orl
push
or
pop
sub
hlt
mov
inc
call
mov
andb
mov
mov
jmp
out
sub
movsl
rcrl
ret
hlt
jnp
lcall
xor
jns
lret
cs
pop
sub
sbb
pop
cmpsb
insl
mov
test
push
in
fidivs
pop
or
xchg
adc
mov
popa
lahf
jns
dec
f2xm1
mov
jo
mov
sbb
mov
pop
jg
jl
push
es
adc
xchg
aaa
ljmp
aaa
sarb
sbb
mov
mov
mov
pop
repz
imull
sbb
test
in
push
fld
xchg
mov
pop
lcall
in
mov
adc
pop
insb
insb
add
ja
cwtl
dec
sbbl
add
add
sbb
rclb
xchg
subl
xor
jmp
out
daa
and
lret
push
movsl
jp
dec
es
andb
cmp
mov
mov
jbe
lret
and
mov
mov
outsb
sub
add
mov
and
xchg
dec
lods
outsl
out
sub
or
cli
popf
lret
cmpsl
fbstp
ret
das
iret
lret
lcall
xchg
mov
insl
pop
insb
lret
dec
pop
jnp
sbb
sbb
push
push
cwtl
negl
mov
loop
pop
fsubrs
and
loope
sub
mov
xor
pop
push
push
cltd
mov
imul
cltd
scas
inc
imul
fs
int3
nop
cmp
cmp
push
test
sbbl
cmp
mov
mov
or
mov
mov
jl
xor
inc
xchg
into
addl
je
fldcw
js
pop
mov
jecxz
fisubrs
lods
adc
repz
les
inc
sbb
dec
into
sbb
mov
jo
je
test
jp
inc
and
pop
in
jg
mov
cli
jae
scas
lods
pop
outsb
mov
dec
cmc
mov
popf
cmp
shlb
and
mov
scas
mov
mov
mov
arpl
out
and
inc
pop
insl
cld
fildll
push
into
mov
shlb
cmp
cltd
mov
cmpl
xchg
mov
inc
test
lock
sub
dec
out
push
sbb
sarl
sbb
push
xor
cmp
and
jb
push
dec
and
mov
les
push
lods
cmp
inc
xlat
shll
cmc
adc
pop
xchg
sub
mov
in
out
jno
fsubl
mov
aad
adc
rcl
js
and
dec
clc
push
movsb
push
loope
insl
jg
dec
testl
push
fiaddl
mov
mov
adc
stos
dec
mov
xor
cs
fidivs
dec
iret
dec
mov
mov
outsb
lds
cmp
lret
mov
or
rorl
inc
jnp
jae
out
addl
jo
push
mov
jb
xchg
or
mov
arpl
ror
adc
int3
mov
sbb
test
lret
sub
xor
sbb
aas
inc
fnstenv
gs
sbb
fcomip
xchg
xchg
jge
repnz
adc
arpl
outsl
in
or
in
aas
lahf
sbb
jns
call
pop
inc
mov
cli
push
ret
and
stc
inc
loope
xchg
sub
nop
divl
enter
in
in
dec
mov
xorl
add
int3
xor
inc
les
inc
jecxz
and
fdivrl
outsb
dec
cmp
insb
test
aaa
repz
mov
fdivl
jp
stos
xchg
or
fbstp
bound
lahf
imul
out
fdivrp
mov
cmp
push
mov
xor
pop
xor
mov
mov
lock
insb
in
xor
adc
add
adc
dec
lods
aaa
push
xor
jne
imul
pop
ret
and
out
out
mov
sti
sbb
imul
cmp
pop
jge
cmp
leave
mov
ljmp
clc
push
pop
cmp
adc
mov
and
out
int3
jl
fwait
push
cli
cmp
stos
jbe
int3
xor
pop
sbb
test
iret
in
divb
popl
dec
adc
xchg
xchg
push
inc
rorl
inc
sbb
hlt
jecxz
mov
jb
hlt
mov
cwtl
pushf
push
decl
mov
int3
in
in
xchg
inc
pop
les
jl
in
int3
pop
test
xor
mov
mov
xlat
cli
ds
or
xlat
add
lods
jne
shll
shlb
dec
ret
push
ja
dec
imul
std
mov
push
fistpl
lret
test
arpl
fxch
jmp
xchg
inc
or
pop
or
ljmp
pushf
jg
insb
movsl
lea
andl
fwait
jno
shll
gs
lret
jo
and
jmp
or
in
in
les
xchg
inc
test
mov
ficomps
mov
pop
mov
dec
rcrl
jle
ret
fs
mov
add
mov
inc
mov
icebp
jp
adc
shrl
scas
inc
pop
out
cld
push
sar
adc
shlb
loope
fs
xor
insb
cmp
pop
stc
inc
shlb
sbb
cmc
shr
dec
add
sub
stos
pop
daa
int3
cmp
inc
mov
xlat
sub
cltd
out
and
jle
jp
out
out
cld
dec
orb
jmp
pop
clc
dec
shlb
push
cld
test
xor
push
sbb
nop/reserved
mov
or
mov
rolb
adc
popa
cmp
xorb
lea
mov
les
or
jns
inc
sub
add
mov
jns
aas
pop
cli
test
js
cmp
dec
jne
sbb
add
sbb
mov
ds
pop
lcall
stos
jle
jl
dec
sub
xchg
outsl
jne
push
out
push
inc
pusha
movsl
shlb
mov
jmp
cmp
jmp
mov
dec
add
pop
xlat
cmpsl
dec
das
cltd
and
xor
clc
jo
push
jno
mov
or
inc
push
inc
sub
clc
and
mov
cltd
into
jl
or
testb
aas
mov
aad
sbb
add
loopne
ja
out
lock
stc
push
loopne
sbb
mov
fdivrl
adc
shl
fwait
xor
daa
mov
mov
leave
cmpsb
jle
or
add
insb
jns
push
and
in
cli
sub
and
pop
adcb
xlat
outsb
mov
lock
xor
dec
push
sub
inc
adc
scas
data16
test
bound
adc
and
fdivrl
imull
aas
xchg
mov
mov
mov
scas
mov
stos
das
xor
iret
sub
lea
jp
stc
imul
loop
pop
fwait
lahf
sub
dec
lods
add
negb
xor
pop
andl
sahf
adc
mov
mov
lea
ret
cmp
fcoms
or
mov
cmp
push
mov
xor
movsl
cmova
jge
push
test
call
in
jae
mov
fiadds
cld
lret
mov
mov
fstl
and
bound
mov
xchg
mov
push
or
lea
scas
adc
inc
repnz
sub
cmpsl
aad
sbb
in
pop
mov
test
sub
push
mov
xor
push
or
xchg
sbb
into
cmp
mov
push
aad
adc
inc
popf
mov
mov
sti
stc
xor
andl
dec
pop
and
andl
inc
sub
imul
mov
xor
bound
setle
inc
sub
fs
int
mov
jmp
add
jg
hlt
out
subb
sbb
lcall
pusha
bound
seta
push
lcall
dec
loopne
cmc
adc
pop
sub
xrelease
jmp
sti
mov
cld
enter
mov
jmp
cmpsb
aad
add
ds
jb
pop
pusha
push
test
ret
xor
dec
call
mov
fstpl
pop
cmp
cmpsl
pop
rcrb
mov
imul
push
or
rclb
mov
adc
mov
push
hlt
adc
inc
bound
jg
ds
int
push
push
add
ss
xchg
out
sbb
subl
xchg
bound
dec
mov
fs
ret
ret
and
xchg
ja
movsb
jmp
scas
xchg
shl
jl
cs
mov
mov
mov
cltd
test
jle
outsb
push
lret
fmul
pop
loopne
into
gs
cmp
fistps
inc
or
enter
int3
arpl
adc
stos
mov
xor
push
nop
arpl
fcomip
mov
inc
mov
dec
shrb
lret
adc
ret
inc
popf
xor
and
dec
xchg
adc
mov
popf
push
push
fisubs
pop
mov
xchg
or
jne
int
mov
addl
sar
shrb
add
rcrl
jae
sbb
push
push
outsb
popf
push
pop
fldt
pop
sbb
or
insl
inc
or
mov
ja
scas
and
jbe
je
popa
int
mov
mov
push
movsb
push
ljmp
lock
lahf
testl
imul
outsb
push
add
dec
cmp
push
das
outsl
call
test
add
xor
xchg
xchg
clc
xchg
mov
pop
imul
lea
xor
sbb
das
mov
fwait
pop
mov
inc
mov
lret
mov
push
adc
pop
leave
pusha
push
lds
mov
stc
shll
iret
sub
sbb
fcompl
xchg
fcomps
jge
adc
xchg
call
repnz
or
daa
stgi
call
out
sub
aad
jb
icebp
jg
xor
lcall
frstor
dec
lds
in
sbbb
push
jmp
sahf
push
pop
test
jb
std
js
add
out
aad
gs
pushf
mov
pop
loop
gs
sbb
push
ljmp
mov
gs
inc
push
out
call
cmp
in
jno
cli
or
push
nop
add
or
adc
mov
dec
shll
pop
cmp
or
pop
sahf
xchg
into
xchg
sbb
loope
add
repnz
insb
loop
lea
mov
int
cmp
daa
insl
mov
jmp
add
mov
fisubl
mov
mov
mov
push
lret
cmpsb
and
push
xor
xchg
imul
or
or
shrl
push
cltd
pop
jb
popa
mov
fwait
cmpsl
inc
add
mov
cmp
lahf
sti
mov
lock
lods
dec
or
aad
mov
mov
out
jle
or
std
decl
sbb
lret
cld
inc
ret
cs
mov
push
movsb
dec
sub
inc
sub
outsb
jle
out
imul
xchg
daa
fsts
and
mov
jp
sarl
xlat
pushl
cmp
mov
mov
insb
mov
ss
jmp
xchg
decb
ds
fstpl
sbb
fidivs
jecxz
adcb
add
or
add
stc
or
aas
push
jne
jp
fsubr
xor
mov
adc
stos
adc
and
push
movsb
test
imul
mov
or
addr16
leave
inc
into
enter
push
pop
popf
inc
pop
iret
jg
sahf
aam
pop
sarb
add
xor
pop
cmp
test
add
adc
cmp
cmp
lds
cltd
xchg
add
dec
mov
sub
scas
jb
testw
std
xor
mov
adc
rolb
pop
add
xlat
xor
clc
fmull
mov
addr16
popl
pop
mov
sbb
cmp
cmpsl
ds
inc
adc
inc
ds
insb
xchg
push
cltd
sub
lock
and
bound
sahf
call
mov
adcl
dec
jg
sarb
and
cmp
jmp
pushf
das
nop
cmpsb
mov
les
mov
flds
dec
repz
aaa
fsub
outsl
xor
je
test
orb
rcrl
xchg
cli
loop
cld
or
enter
push
rol
sbb
push
or
and
outsl
dec
push
push
ss
or
fbstp
mov
scas
pop
stos
mov
and
jl
sub
roll
fsts
fidivs
or
push
dec
call
lock
in
and
test
xchg
imul
subl
xor
mov
add
jge
cmp
jbe
daa
sbb
in
push
sbb
jecxz
mov
shrl
pop
mov
dec
leave
sbb
out
and
fisttpll
mov
daa
jecxz
cmp
adc
jno
repnz
or
jne
loopne
enter
leave
outsl
mov
dec
push
rclb
lods
sbb
lcall
mov
dec
repnz
adc
jmp
inc
frstor
js
cmp
push
decb
push
push
mov
cs
cmp
mov
lahf
pop
loope
imul
mov
jns
cli
xchg
in
test
in
push
dec
xor
xchg
insb
out
cltd
sbb
or
out
cwtl
sub
loopne
push
jl
mov
adc
inc
pop
cmpsl
jmp
call
pusha
or
jge
pop
lock
jmp
sahf
sbb
je
mov
and
cwtl
push
and
inc
sahf
xor
mov
jg
and
je
jge
mov
sub
and
in
inc
jecxz
xor
pop
pop
adc
lahf
stos
mov
lahf
scas
int
dec
jp
loop
ret
add
pop
sub
mov
cmp
or
je
loope
scas
negb
stos
inc
or
outsb
leave
aad
cld
lock
jp
mov
push
push
cltd
inc
xor
dec
add
xchg
arpl
sub
mov
jmp
fisubrl
test
out
imul
cld
sbb
inc
inc
or
fiaddl
mov
fcompl
loopne
sub
lods
imulb
or
fldt
mov
cmc
cmp
ds
nop
daa
adc
and
jae
push
add
push
or
rcr
cmp
jecxz
and
dec
ja
inc
loop
rcr
imul
out
inc
cwtl
leave
out
test
icebp
sub
mov
sarl
enter
jmp
imul
mov
inc
ljmp
or
inc
in
imul
ja
sub
ja
mov
dec
fdivrl
int
and
push
jno
push
outsb
jp
cli
mov
mov
inc
nop
sub
mov
les
inc
sbb
jnp
and
push
pushf
xchg
cwtl
icebp
outsb
cmpsl
mov
push
and
std
add
movsl
add
jae
inc
and
ljmp
xchg
mov
push
cmp
test
bound
ret
jno
icebp
imul
inc
sub
mov
out
jnp
push
mov
cltd
pop
dec
hlt
cmp
stc
mov
iret
ret
call
ds
in
dec
js
adc
fstpl
ljmp
std
or
adc
ljmp
mov
or
dec
sbb
ss
lahf
cmp
int3
fs
hlt
and
call
mov
cltd
ja
cli
push
pop
dec
and
xor
push
out
inc
sahf
cmp
xor
es
hlt
pop
inc
jecxz
inc
fildl
push
lcall
stc
mov
call
adc
mov
mov
inc
lret
fwait
mov
mov
mov
xor
xchg
push
jle
jb
sub
xchg
push
sub
imul
mov
and
sti
jnp
loopne
mov
mov
repnz
sbb
dec
in
sbb
cmpsl
push
add
fistps
mov
test
sub
pusha
and
lcall
ret
sub
sahf
ss
dec
iret
pop
push
out
push
push
pop
mov
mov
rol
dec
sub
fwait
cwtl
iret
xchg
and
sbb
mov
fs
sbb
loop
stc
and
out
add
lcall
cmp
mov
lret
sub
repz
test
sbbl
pop
add
cmp
pop
inc
jge
ljmp
add
xor
mov
mov
aad
xchg
ja
jno
xor
bound
repz
or
cmp
sbb
hlt
xchg
adc
popa
pop
call
aad
add
and
addr16
lods
daa
fsubr
repz
les
stc
inc
fisubrl
xor
mov
and
ficoml
add
in
pop
mov
dec
pop
xlat
loopne
add
mov
cmpl
fs
rclb
scas
inc
lret
and
jecxz,pt
lods
imulb
fidivs
pop
cmp
movsb
ret
pop
push
sbb
sub
ds
in
jecxz
outsl
or
js
aam
xor
lahf
insb
pop
jno
mov
fidivrl
mov
pop
test
mov
xchg
pop
cmc
push
and
aas
pop
fwait
inc
lock
lods
data16
test
and
cmp
std
inc
adc
movsl
and
int3
ret
adc
icebp
leave
clc
outsl
fwait
mov
adc
sbb
adc
or
xchg
jge
xlat
cmp
xor
mulb
pop
outsb
inc
mov
xchg
jnp
add
enter
fmulp
and
dec
pop
xor
lea
sbb
dec
sub
mov
popf
rolb
sbb
mov
outsl
and
jle
cmp
dec
int3
arpl
dec
std
add
sbb
mov
mov
adc
test
imul
add
movsb
mov
sub
mov
jns
lods
adc
fucomp
lret
aas
push
mov
rorb
mov
xchg
cmp
jo
adc
lahf
inc
pop
jns
bound
sbb
pop
ret
and
push
pop
dec
push
fimull
stos
and
jo
xor
lcall
cli
pop
jae
out
fucomi
dec
test
popa
pop
ljmp
pop
dec
push
addb
xor
jmp
into
loope
mov
test
imul
dec
mov
test
fidivrs
add
fistpll
lds
sbb
mov
push
insb
jecxz
addr16
insl
stc
nop
pop
jge
aas
jbe
sub
lcall
mov
mov
fs
add
arpl
inc
repnz
repnz
ja
sbb
mov
xor
add
mov
push
or
xchg
jmp
cmp
je
lcall
call
lods
dec
out
in
push
cmpsb
push
mov
sbb
ljmp
loopne
add
rorl
mov
ja
mov
shrb
sahf
xor
or
cmp
rdmsr
cmpsb
fsubr
pop
popa
scas
nop
scas
cltd
sbb
mov
push
add
loop
lock
mov
push
bound
lea
aam
and
in
scas
test
lret
lods
das
add
out
sbb
xchg
lods
xchg
mov
movsl
das
fs
movsb
inc
xchg
sbb
jnp
cmp
sarb
stos
pushf
pop
rolb
icebp
xchg
movsl
sub
push
scas
inc
cmpsl
push
xchg
xchg
jae
push
lahf
hlt
mov
daa
inc
addr16
jno
jbe
mov
lahf
and
outsb
push
mov
movsb
pop
insl
mov
jae
aad
outsl
push
out
jg
dec
mov
movsb
stos
xchg
push
jne
lret
push
in
xchg
inc
sbb
test
sahf
mov
hlt
xchg
fwait
mov
dec
cmp
dec
loopne
test
scas
sti
jae
lahf
and
lea
inc
xor
js
mov
add
sbb
adc
xor
pop
into
jg
ja
in
aad
sysret
and
int3
in
leave
movsl
cmp
mov
push
pop
mov
xchg
cli
outsl
aad
jl
mov
outsl
and
pop
test
fbstp
push
mov
push
mov
cmc
xchg
add
push
movsl
movsb
int3
loop
ljmp
into
sub
sbb
scas
nop
fcomps
mov
jo
adc
clc
fidivl
arpl
pop
xbegin
cmp
data16
outsl
fsubs
mov
movsb
cmpsb
cld
xchg
inc
ja
loop
xchg
lods
and
cmp
mov
dec
into
shll
jbe
pop
test
insb
add
fidivrl
pop
jne
into
xchg
jp
add
movsb
fwait
mov
fucom
mov
shll
fdivs
arpl
jge
sti
xlat
lock
in
inc
mov
lret
mov
clc
out
cmpsl
fdivp
add
fbld
sti
int
jbe
inc
xchg
testl
mov
jge
iret
pop
out
lock
push
es
adc
push
push
sub
xorl
js
jmp
mov
imul
xor
in
icebp
loopne
and
and
mov
addr16
add
push
xor
fbld
test
dec
aaa
cmpsb
lea
adc
mov
mov
xor
rorl
test
mov
je
aas
cli
mov
add
lcall
pop
mov
and
sub
jmp
adc
add
xorb
lret
mov
add
push
xchg
xchg
nop
stos
dec
dec
in
jge
pop
push
js
add
aad
cltd
fcoms
in
inc
jae
xchg
std
adcl
mov
mov
xor
push
cmp
push
adc
push
ds
sub
cld
cltd
sub
hlt
mov
outsl
dec
sub
mov
sub
lahf
push
inc
test
lcall
or
nop
cmp
mov
inc
outsb
int
pop
ljmp
insl
sub
imul
jae
push
movsl
shl
leave
dec
ficompl
cmpsb
xchg
inc
orl
adc
aaa
into
adc
pop
icebp
enter
movsl
rorb
or
push
jno
ljmp
imul
xchg
push
ret
jge
pop
mov
jecxz
jbe
mov
xor
insb
add
push
adc
imul
dec
pop
pop
or
stos
daa
sub
inc
mov
mov
pop
insb
roll
into
cmpsl
loope
add
scas
pop
cmp
ret
cld
outsl
pop
jnp
mov
pop
shr
int3
outsb
sbb
cli
pop
fdivr
mov
scas
dec
inc
add
rcrb
in
xor
jne
in
push
xor
cmp
fs
jmp
mov
cltd
xor
mov
imulb
xchg
fldl
ds
int3
sub
int3
repnz
sti
xchg
mov
cltd
sbb
cmc
inc
adc
mov
xchg
pop
pop
gs
jae
dec
sti
adc
jne
sub
pcmpgtd
mov
repnz
scas
fldl
enter
push
int
dec
ja
xchg
lret
lock
add
xor
ljmp
lcall
push
leave
add
aam
jnp
ldmxcsr
test
inc
shl
cmp
mov
jns
jp
insl
jae
in
inc
fistps
mov
enter
push
xchg
adc
sub
dec
jp
jge
mov
pop
in
addr16
push
adc
xchg
paddw
sbb
stos
inc
dec
gs
dec
stos
pop
loope
into
push
iret
pop
ret
out
repz
add
pop
mov
pop
out
sti
mov
idivb
fwait
lcall
adc
push
lock
and
cmp
sbb
mov
and
pushf
xlat
push
leave
lcall
jp
lods
insl
sbb
nop
repz
mov
mov
gs
lcall
es
insb
inc
std
jg
pop
sbbb
sbb
pop
loope
mov
imull
mov
ret
or
mov
imul
sbb
test
addr16
sub
lret
iret
cmp
and
xlat
pop
movsl
in
jge
out
inc
pop
jg
cli
cmp
pop
sub
xorb
pop
cmp
sub
mov
cmp
out
jecxz
or
repz
lahf
shll
pop
arpl
push
stos
mov
mov
adc
xchg
jmp
std
lock
sbb
arpl
insl
cmp
xchg
sub
lcall
rcll
pushf
sbb
push
cltd
cmp
lods
or
mov
and
shll
inc
scas
adc
fisubl
aas
into
packsswb
mov
fcmovnu
jne
sub
ja
imull
jmp
ret
jno
mov
jbe
adc
lcall
sub
pop
sub
and
pop
push
test
jno
fldl
push
pushl
rcrl
test
stc
pop
mov
jl
cs
sti
test
aas
sub
xchg
cmc
or
icebp
pop
pop
ja
add
pop
mov
inc
leave
test
push
lcall
movsl
sti
cmp
xor
fsubrl
out
sbbb
pop
imul
sub
daa
outsl
sbbl
jnp
call
dec
test
sbb
daa
jg
lcall
aaa
addl
or
scas
jecxz
xlat
xchg
dec
cmp
push
fildl
adc
xchg
cmpsl
cmp
bound
movsl
jle
loope
mov
jp
xchg
and
mov
xchg
sub
sti
fs
push
mov
orl
cmp
add
pop
cmp
mov
mov
pop
ret
jnp
sub
fs
or
lods
add
ja
insb
lret
call
jne
xor
mov
loope
mov
sub
imul
cmp
adc
fisttpl
lcall
push
in
cmpsl
dec
push
push
fadds
mov
jl
dec
stos
stc
adc
mov
push
data16
pusha
fstpt
sbb
xor
pop
dec
cmp
cmp
mov
roll
xlat
or
jno
jl
popf
push
xchg
pop
lods
push
add
dec
stos
mov
push
xlat
in
addl
orb
sub
jno
mov
out
xor
sarl
jmp
cmpsb
inc
fimull
loopne
test
lcall
dec
mov
sub
push
lods
sbb
and
stos
mov
pop
fidivrl
adc
lds
sub
bound
loop,pt
push
mov
xchg
jb
adc
xchg
sub
push
shlb
aas
pop
leave
pop
fstpt
pop
cs
idivb
int3
mov
js
pop
jge
cltd
movsl
rol
sahf
outsb
fnsave
bnd
aad
jecxz
les
int3
jbe
in
int
dec
adc
sbb
out
sahf
push
mov
ja
fidivs
and
into
jns
adc
out
mov
pushf
sub
mov
imul
jae
add
gs
or
loope
xchg
jns
or
mov
stos
xchg
adc
xlat
xlat
sub
xchg
inc
jge
sahf
mov
xchg
xor
pushf
sub
dec
scas
pop
test
xlat
pop
std
in
gs
cmpsl
arpl
daa
jge
inc
sub
fmulp
pop
mov
int3
mov
adc
lahf
pusha
fldcw
mov
xchg
hlt
sbb
mov
pop
jae
mov
sahf
inc
xchg
mov
and
sbb
notb
hlt
pop
sarl
lods
mov
ret
rorl
out
or
pop
cmp
sub
and
mov
push
data16
hlt
roll
push
push
cmp
and
sbb
add
push
lahf
cmp
pop
int3
xchg
aam
push
add
xor
add
xor
jle
mov
cmpsb
push
test
mov
mov
jge
mov
out
out
mov
jmp
xchg
movsb
inc
testl
dec
lret
data16
jg
push
sub
xlat
lret
xor
sub
lods
add
scas
mov
test
dec
xor
jg
addr16
popa
adc
add
ja
and
cltd
push
cli
lret
sbb
rol
mov
fwait
pop
cli
ljmp
lea
int
cmp
sbb
enter
inc
test
mov
adc
stc
inc
push
cmp
or
mov
and
jb
lret
jmp
aaa
mov
xchg
sti
jp
mov
pushf
cmp
in
or
sub
xchg
scas
insl
lea
aaa
xor
cmp
das
cmp
dec
popf
and
cwtl
xor
jg
test
insl
leave
imul
sbb
insl
adc
shll
les
pushaw
and
lods
lret
xor
mov
inc
inc
xlat
push
leave
js
mov
dec
fisttpl
lock
mov
fdivrs
mov
dec
jno
out
loope
inc
inc
sub
xlat
lods
pushf
scas
lds
int3
int
dec
out
cld
cli
mov
shll
dec
sbb
fwait
arpl
push
xor
sti
sbb
sbb
int
jns
sbb
add
fwait
mov
lret
mov
mov
data16
xchg
call
pop
out
jecxz
je
and
push
or
das
lods
dec
inc
sahf
jbe
rorb
dec
xchg
push
sarb
push
pop
adc
ret
stos
cmp
stos
dec
cmpsl
rclb
test
shrb
mov
out
dec
xor
push
int
sub
sub
jnp
push
pop
xor
inc
pop
pusha
pop
mov
fsubl
loopne
push
xchg
popf
or
and
push
inc
je
ret
and
hlt
mov
mov
in
test
insl
clc
and
lahf
xor
mov
dec
in
stos
inc
inc
or
mov
cmp
jmp
gs
clc
mov
push
mov
mov
stos
pusha
ljmp
mov
fneni(8087
lea
shll
popf
test
xchg
out
xor
mov
or
fimull
mov
mov
adc
es
out
pop
mov
mov
sbb
or
ret
pop
cmp
test
data16
push
insb
adc
pop
mov
data16
popa
inc
pop
lcall
add
ss
and
ficoms
mov
out
xor
fmuls
cwtl
scas
rorl
mov
and
push
xchg
shl
jnp
call
out
xchg
aas
sub
mov
mov
sub
test
jg
cmpsb
jl
ja
pop
inc
cs
push
mov
push
mov
ds
call
mov
jae
neg
inc
adc
push
cli
inc
dec
popf
movsl
in
aas
push
inc
repnz
call
xchg
adc
mov
je
jmp
ret
movb
imul
dec
sbb
into
dec
push
push
mov
popf
scas
pop
sub
fcmovnb
jle
mov
stc
rol
fsts
jb
lcall
adc
scas
out
lret
aam
jge
imulb
dec
xor
shl
xchg
mov
cltd
in
gs
shl
loope
pop
jns
mov
inc
mov
pop
stos
or
push
ret
mov
adc
stos
testb
adc
lcall
xor
in
hlt
mov
daa
mov
inc
arpl
inc
dec
test
or
add
xchg
pop
in
scas
out
jno
pop
mov
sub
and
hlt
leave
icebp
leave
sti
add
stos
cmpsb
and
cmp
inc
cmp
das
mov
mov
cmp
fwait
jo
insl
cmpsb
jp
jno
subl
dec
mov
push
out
xor
dec
bound
popa
add
and
movb
mov
dec
adc
out
push
pop
mov
sub
mov
js
mov
cmp
scas
pop
repz
ret
testl
dec
lock
dec
sbb
push
int
or
pop
mov
mov
rcrl
inc
mov
lcall
push
imul
cmp
cmpsl
insl
shll
dec
jno
jp
mov
orl
imul
lods
inc
pusha
insb
shlb
inc
push
push
andb
and
test
xchg
in
add
popa
pop
or
pop
mov
outsl
test
insb
js
in
stos
pusha
andl
addr16
cltd
das
jl
lea
std
loop
inc
pop
sbbb
and
dec
push
xor
cmp
daa
mov
mov
dec
dec
mov
adc
pop
bound
lods
das
test
ficoml
aad
mov
mov
scas
mov
push
ss
rcr
mov
pop
jae
inc
pusha
xchg
cmp
mov
cvtdq2ps
jbe
jle
imul
fbstp
and
sti
inc
mov
in
icebp
arpl
xchg
adc
or
cs
test
push
inc
dec
loopne
icebp
leave
out
call
jo
or
lcall
popa
adc
mov
pop
cmpsb
cs
rol
aaa
push
fwait
xchg
cltd
pop
cwtl
adcl
mov
fisttpll
jmp
leave
and
or
js
or
add
rcrl
or
push
gs
pop
lahf
out
sbb
test
repz
xchg
dec
adc
cmpsb
inc
ds
and
cltd
jge
ret
cld
imul
stos
into
mov
cmp
mov
jg
std
repz
sti
mov
sub
filds
movsl
inc
adc
enter
adc
cld
out
lds
pusha
inc
fsts
cmpsb
mov
inc
pop
or
mov
cmpsl
xchg
mov
test
xor
outsl
lret
cld
outsl
fiadds
cltd
mov
mov
mov
push
loopne
lods
add
cmp
push
lahf
aaa
cltd
cwtl
call
shl
or
lcall
loopne
outsb
sbb
push
mov
mov
gs
and
rorb
xchg
push
xor
and
jns
lcall
popa
addb
and
inc
arpl
cmpsb
cld
xchg
mov
int
inc
mov
sbbl
pop
xchg
mov
sahf
insl
test
ljmp
mov
mov
cmp
ficoms
add
dec
mov
sub
adc
addr16
dec
orl
cmp
xchg
dec
cmp
mov
fcmovnb
push
mov
fsubrs
sub
es
lahf
sub
aas
dec
pop
mov
xchg
js
sbb
aaa
hlt
insb
mov
add
inc
imul
cmp
cmpsl
clc
adc
push
stos
ss
adc
dec
pop
mov
xchg
bound
cmpl
lret
cld
pop
or
imul
sar
cmc
cmp
aad
aas
sbbb
cmp
repnz
jns
sar
popf
pop
pop
pop
andb
inc
adc
pop
jecxz
inc
add
dec
push
cmp
pusha
fwait
jb
cmp
sub
bound
sub
mov
xor
std
clc
sub
cmp
or
fnstcw
pop
mov
inc
pusha
and
sarl
push
loopne
xor
sub
xchg
es
test
jo
push
sub
loop
adc
icebp
outsb
mov
and
dec
mov
loop
imul
fidivs
cmp
idivb
xchg
out
lahf
cmp
push
sub
push
fwait
pop
das
inc
mov
dec
fcmovbe
xchg
loopne
dec
movsl
popa
leave
out
cmpsl
cmpl
stc
popf
pop
les
jns
mov
popf
xorb
and
jmp
inc
fisubrl
xor
inc
mov
int3
add
test
cmpsl
hlt
shrl
loop
jg
movb
fs
cmpl
pop
inc
out
jae
addr16
jne
test
div
xchg
mov
inc
inc
mov
les
lret
push
popf
repnz
xor
jbe
lock
mov
lahf
pop
pop
sbb
fnstcw
sbb
adc
into
inc
cs
push
ljmp
repnz
sti
rorb
lods
jmp
fs
int3
jmp
sbb
dec
or
xchg
push
or
pop
xor
or
inc
pusha
insl
mov
idivb
xor
in
repz
lret
mov
push
jg
jno
mov
lds
pop
fnsave
mov
or
sti
aaa
cmc
sbb
aas
or
adcb
mov
jno
dec
jb
cmp
and
daa
and
in
loopne
cmp
dec
cmp
jle
xor
sbb
inc
sub
mov
mov
pop
daa
cmp
sbb
dec
shrl
push
scas
dec
mov
in
dec
dec
mul
stos
cmp
sbb
mov
dec
cld
fidivrs
sbb
push
pop
cmp
insl
adcb
mov
jne
fimuls
and
movsl
jmp
cmp
imul
movsb
inc
mov
mov
xchg
add
movsb
pop
and
lret
push
xchg
lcall
mov
test
test
xchg
decb
adc
fwait
xchg
sti
es
sbb
mov
testl
jae
cmp
aas
inc
sbb
aad
shrb
pop
mul
jnp
aam
shll
mov
sbb
cmp
push
inc
add
loope
fldl
jbe
int
incb
ljmp
loop
and
xchg
popf
mov
stos
push
jecxz
xchg
cwtl
adc
xchg
les
pusha
xchg
cmp
iret
dec
decb
ret
xchg
pop
cmc
pop
nop
icebp
cld
push
adc
dec
in
inc
enter
xchg
cmp
mov
enter
aad
dec
mov
xlat
pop
cmp
aaa
aaa
xchg
pop
sarb
mov
pop
out
inc
ret
and
call
push
dec
dec
xor
fidivl
mov
mov
pop
shll
mov
loop
jmp
test
mov
test
lock
lahf
push
jmp
push
out
add
dec
add
jae
addr16
scas
mov
in
or
sbb
xchg
mov
imul
pavgw
push
ja
fbld
mov
sub
mov
sub
pushf
scas
fisubrl
mov
sbb
and
fsubr
pop
xor
and
lock
dec
xchg
call
rolb
push
fstpt
sub
aam
mov
mov
lods
adc
sbb
pop
lods
jns
test
lea
mov
mov
subb
lcall
and
push
push
dec
ss
push
inc
loopne
pop
ljmp
dec
push
inc
sbb
arpl
stos
andb
mov
leave
int3
notl
xchg
cmp
mov
sub
or
stos
aad
push
outsl
ret
ljmp
gs
out
xchg
xor
dec
icebp
jp
push
inc
cmpsl
cmpps
sti
dec
lret
scas
call
cltd
repnz
sbb
mov
pop
insb
sub
mov
fdivs
pop
mov
xchg
push
cltd
adc
lds
cmp
mov
mov
push
iret
das
addl
cmc
and
adc
ret
pop
dec
insl
inc
cld
orb
cmp
mov
push
popa
sbb
dec
xor
push
jae
fxch
xchg
sbb
insl
dec
mov
mov
jge
cmp
mov
icebp
movsl
rorb
jp
loope
adcl
aas
popa
lods
aas
aad
xchg
cmpl
pop
jl
cmp
stc
jae
in
flds
lods
outsl
repz
addr16
dec
sbb
push
js
pop
stos
test
loop
jbe
or
dec
fwait
aad
std
ds
aam
pushf
xchg
push
scas
inc
xor
mov
or
lock
push
in
push
or
mov
pop
dec
push
nop
xor
pop
cmp
pop
out
add
dec
push
loope
jne
scas
push
fs
mov
mov
xor
les
insb
and
xchg
sahf
fs
cmpsl
sub
mov
cmpsl
loopne
jp
adc
push
cmpsl
ds
shr
pop
loope
mov
dec
adc
mov
fs
sub
jmp
les
xor
xor
push
push
inc
pop
jg
das
icebp
cld
inc
arpl
mov
mov
jno
icebp
je
scas
mov
loopne
in
and
rorb
pop
fsubl
test
test
jo
inc
das
or
in
and
rol
xchg
iret
adc
aaa
push
imul
jge
lcall
loope
add
test
in
shr
popf
pop
pusha
jnp
xor
pop
mov
cmp
pop
insb
fs
pop
xor
pop
and
dec
add
pushf
ret
hlt
adc
je
outsl
mov
push
sbb
lcall
dec
mov
inc
cmp
and
lock
pusha
xlat
mov
inc
jnp
out
insl
adc
pop
cmp
and
aam
pop
mov
pop
in
sbb
shl
lock
fcmovnb
fsts
pusha
jl
inc
mov
xchg
cmp
push
xor
in
mov
add
jecxz
pop
inc
jl
lret
incb
ljmp
xchg
mov
mov
dec
sbb
inc
sbb
dec
add
dec
push
xor
cltd
in
cmpsb
inc
negl
les
cmp
stos
inc
push
push
movsl
addr16
xor
cmpsb
jmp
sarl
or
test
push
inc
aam
inc
and
or
aad
inc
or
stos
shl
fdivl
mov
lods
add
addb
sub
mov
out
ds
and
mov
dec
mov
add
jae
fiaddl
in
subl
or
push
adc
xchg
adc
or
xchg
sub
aad
verr
out
and
pop
nop
lods
sbbw
ficoms
in
hlt
mov
cmpsb
pop
sub
es
sub
fwait
subl
mov
cmpsl
or
pop
icebp
dec
loop
in
outsb
js
mov
addr16
leave
push
and
lret
xchg
pop
shll
daa
xchg
pop
pop
jecxz
add
push
fmul
scas
or
adc
pop
stos
or
sub
lcall
loope
fadds
pop
sbb
rol
pop
ret
cmp
sti
mov
loop
das
lahf
jg
lcall
in
ds
add
outsb
push
icebp
movsl
adc
push
fmull
fdivp
xchg
inc
pop
dec
repnz
xchg
loope
cld
adc
decb
sub
leave
pop
jnp
leave
pusha
pop
and
mov
jg
pop
xor
mov
jmp
out
pop
xchg
shr
push
cmpsb
rcrl
xor
xchg
mov
cmp
dec
shrb
pop
mov
push
ds
xchg
xor
imul
push
jo
add
push
mov
mov
adc
call
test
inc
mov
pop
inc
lcall
xchg
test
mov
adc
lock
sahf
andb
push
movsl
xchg
imul
adc
fmull
sub
lods
insl
mov
ret
hlt
mov
lret
adc
dec
mov
mov
xor
outsl
cmpb
jl
iret
pop
mov
or
addb
mov
outsb
add
popa
jns
jecxz
adc
orl
sarl
mov
xlat
scas
push
fadd
and
enter
faddl
rorl
gs
pop
aaa
cmpsb
adc
dec
pushf
xor
ret
cmpsb
add
xor
mov
loopne
fstpt
or
push
cmp
shl
mov
pop
repnz
adc
sbb
mov
jg
mov
dec
jge
or
mov
xchg
outsb
sub
push
test
pop
sbb
inc
jae
fstpt
ja
testb
dec
leave
mov
into
jmp
es
cmpsl
outsl
and
inc
dec
aad
clc
arpl
rcll
cmc
add
in
test
mov
push
jg
lahf
test
jmp
or
adc
mov
sarl
ret
addr16
out
test
ja
orb
inc
ds
aas
cltd
fs
popf
int3
test
inc
xor
bound
je
jecxz
xchg
inc
pop
stc
adc
cmp
xchg
xchg
add
or
or
dec
rorb
dec
xchg
jbe
cmpsl
insl
mov
out
lret
sbb
imul
xchg
mov
popf
jg
std
pop
pop
mov
jae
add
mov
jns
fildl
push
mov
pushf
mov
fldcw
xchg
sub
nop
lea
lret
lcall
dec
or
rcrl
pop
mov
push
mov
pop
push
or
cmp
ret
mov
mov
mov
aam
dec
mov
arpl
or
add
pop
popf
dec
loopne
jno
scas
sahf
loopne
cmp
sub
add
xchg
cmp
ljmp
xor
push
scas
sbb
mov
xchg
mov
xchg
mov
jae
movsl
insb
inc
lea
push
stos
mov
mov
in
fs
popf
cs
inc
repz
mov
cltd
xlat
roll
mul
mov
jns
cmp
adcb
push
mov
sbb
ds
jnp
adc
mov
lahf
test
fwait
loopne
popf
call
test
xchg
into
push
pmuludq
and
fmul
mov
mov
cltd
fucomip
dec
rdpmc
stos
fwait
adc
cld
dec
loopne
es
push
push
sbbl
subb
sub
pop
add
and
push
push
sbb
cwtl
sti
xchg
sbb
and
icebp
inc
bound
lock
shll
call
mov
add
test
push
je
data16
push
insl
cmp
or
aaa
sbb
cli
sbbl
rol
js
xchg
dec
mov
sarb
in
xor
or
lret
push
pushf
pop
lret
mov
cmp
add
dec
push
mov
jle
mov
jl
mov
push
pop
mov
mov
notl
bound
xchg
jo
es
addr16
xchg
cli
dec
and
push
xor
pop
cs
fs
or
jl
jge
lret
in
add
jge
xchg
test
outsl
loop
repnz
out
fs
push
adc
in
and
sbb
aas
std
movsl
cmp
stc
popa
jnp
fs
fbld
sbb
lea
add
aad
xchg
call
cli
xchg
imul
cmp
fwait
cs
cltd
mov
jbe
ret
stos
xor
loopne
call
jp
jg
mov
jg
out
test
lahf
pop
es
fcompl
mov
lcall
setb
mov
cmp
test
push
jecxz
cmp
cwtl
adc
push
mulb
jp
pop
and
jle
fldln2
and
add
bound
push
std
dec
dec
clc
push
xor
push
lds
in
or
inc
adc
jb
push
js
es
das
mov
out
xchg
dec
cs
scas
pop
mov
lods
pop
mov
push
xchg
add
or
add
cwtl
sub
imul
div
jge
into
xchg
jbe
xchg
ss
jg
stos
lods
aam
mov
push
pop
push
mov
pusha
fcomi
adc
xchg
sbb
inc
icebp
ljmp
outsl
into
xor
sub
push
sub
dec
rcrb
test
dec
sub
cmpsb
data16
xchg
ret
jecxz
jp
shrb
mov
xchg
lods
insl
sahf
xor
repz
xor
mov
ret
shrl
imul
jae
jge
scas
cmp
mov
popa
and
lds
insb
decl
ja
add
cli
inc
fsubrl
rcl
or
or
cmp
and
jp
push
jmp
lock
dec
mov
enter
leave
rorb
sub
outsl
fistpll
rorb
subb
mov
ret
mov
pop
fldenv
aad
cmpsb
cli
xchg
andl
sbbb
cli
mov
mov
insb
int3
int
pop
xor
int
add
jnp
inc
leave
imul
lods
mov
test
cwtl
repnz
push
sub
mov
shlb
xor
xchg
jns
inc
pushf
adc
nop
jno
add
test
icebp
mov
stos
sbb
xchg
dec
inc
sbb
into
lcall
xchg
lods
xor
add
cmp
xor
jae
sub
ret
and
pop
jb
ss
das
push
cmpsb
xor
mov
adcb
lcall
xor
bnd
cli
inc
inc
lcall
repnz
dec
add
or
fists
mov
stos
out
mov
push
add
xchg
jb
xchg
add
ret
push
mov
mov
push
mov
or
gs
cmp
sub
lds
nop
subb
or
sbb
into
cmpsb
mov
rcrl
xlat
fwait
xchg
outsb
adc
outsl
imul
js
addr16
cmpsb
or
pop
mov
sub
lret
mov
sub
add
or
scas
push
daa
shr
pop
jae
push
jmp
popf
xchg
outsl
ret
mov
adc
cs
mov
inc
sahf
mov
push
lret
and
lods
ja
into
popa
jnp
je
inc
pop
push
loope
jae
mov
jecxz
enter
cmp
imul
mov
popf
xchg
in
xchg
insb
add
orb
and
mov
divl
adc
test
adc
mov
ljmp
jo
add
cmpsb
push
mov
jmp
std
jl
loope
mov
push
dec
in
test
push
test
aad
je
aas
pop
test
add
push
mov
ss
imul
std
cltd
ja
jne
icebp
je
or
xchg
add
xchg
push
imul
cmp
ds
movsl
xchg
add
int3
ss
es
inc
call
je
push
push
mov
pushf
jbe
jmp
add
orl
cs
pop
in
and
push
pop
cli
mov
js
xlat
and
or
sub
or
dec
mov
mul
nop
sbb
dec
testb
xor
gs
and
jmp
xchg
xor
xchg
ljmp
push
mov
cmp
loope
jle
fcmovb
dec
xchg
ds
imul
dec
add
les
jae
idiv
pushf
movsl
pop
das
jge
xlat
lret
push
nop
sub
sarb
sub
sbbl
mov
popl
fistps
mov
repz
cmpsb
arpl
ljmp
inc
mov
dec
pop
add
xlat
jns
bound
sbb
call
dec
cmp
mov
jb
ret
jns
xchg
mov
cltd
fwait
aas
iret
adc
mov
mov
cs
pop
hlt
xor
and
cli
pop
ds
ret
jnp
pop
add
dec
xchg
sub
mov
dec
pop
out
icebp
movsl
test
push
push
out
test
cmp
rol
pop
outsb
je
ret
ss
sbb
test
lea
lcall
dec
hlt
xlat
shlb
pop
or
inc
push
js
push
mov
cmp
stos
jl
lea
fdivrl
lods
gs
push
fidivrs
sbb
sbb
in
push
dec
inc
fstpl
mov
fadds
adc
lds
cmp
enter
xchg
out
mov
sub
pop
adc
call
popa
add
add
scas
cmc
jae
addr16
aad
jl
in
mov
pop
jbe
roll
cltd
add
fnstenv
mov
cli
xchg
dec
mov
dec
in
mov
lcall
fs
ret
stc
nop
ljmp
in
and
pop
xchg
imul
cmp
push
pop
adc
jns
inc
aad
inc
xchg
add
mov
xor
test
adc
mov
xchg
and
pop
and
mov
mov
cmp
dec
xchg
mov
xchg
sbb
mov
into
imul
in
int3
dec
cmp
subb
mov
push
pop
out
xor
inc
addr16
or
out
mov
sub
leave
push
adc
mov
je
in
and
int3
add
xchg
rsqrtps
sti
loopne
inc
dec
xchg
dec
inc
mov
mov
push
out
push
or
jge
pop
mov
and
and
push
arpl
mov
pusha
fisubrs
fwait
add
add
push
xor
inc
inc
jmp
out
inc
popf
sub
testb
pop
ss
push
jo
xlat
rcr
or
jge
ds
inc
loop
addr16
add
in
lods
or
sub
movsb
inc
data16
jae
iret
inc
fiadds
mov
adc
cmpsl
jle
ficoms
mov
add
testl
mov
xor
loope
xorb
mov
mov
sub
repz
orl
ret
movsb
xchg
sub
mov
mov
cmc
or
jp
sub
loopne
ret
push
insl
sbb
in
pop
test
leave
daa
outsl
shr
sub
adc
cli
cmp
mov
popa
pop
sub
insb
push
pushf
xor
cli
repz
ja
out
and
push
test
jae
xchg
std
adc
stos
lock
dec
adc
mov
mov
xorb
pop
and
scas
sbb
xor
es
mov
fs
jno
jmp
cmp
cmpsl
jne
xchg
adc
adc
mov
add
push
aaa
pop
into
add
cmp
xchg
sti
loop
jo
shlb
xchg
jg
ret
test
xlat
inc
dec
jge
imul
loopne
xor
xor
fistpll
inc
idivl
cld
add
and
cmpsb
ret
cmpl
push
ljmp
jo
xchg
les
cwtl
loope
and
add
jl
or
imul
das
jle
xchg
jmp
jns
insb
jg
test
fdiv
outsl
inc
lods
negb
sub
stos
mov
jmp
dec
xchg
mov
js
mov
mov
xlat
les
pop
jbe
mov
mov
nop
xor
pushf
xor
xchg
inc
test
nop
xor
jae
call
aaa
and
repnz
push
or
mov
andb
jp
push
xchg
inc
xchg
dec
das
sub
dec
es
jno
loop
and
daa
xchg
outsb
push
adc
cmp
and
lret
mov
mov
addr16
hlt
les
jp
pavgb
adc
cli
xor
cmp
add
pop
xor
sub
dec
sbb
jp
cltd
pop
or
or
mov
mov
fbstp
or
mov
push
dec
mov
andb
call
loope
fsubrs
dec
rorb
pushf
jo
lea
mov
imul
cli
or
outsl
jle
mov
cmpsb
ja
lret
movsl
repz
divb
sbb
ja
or
fwait
insb
push
pushf
popa
push
xor
out
out
xor
mov
cmc
mov
mov
mov
cli
sub
clc
pop
inc
cmpb
ret
imul
pushf
mov
mov
ljmp
sti
lods
je
pop
into
pop
ljmp
call
leave
xor
sub
outsb
pop
push
mov
sub
cmp
lret
adc
pop
andb
lcall
and
test
aas
and
in
push
pop
sahf
cmp
xchg
inc
in
movsb
hlt
fisubs
leave
pop
in
inc
imul
aas
out
lds
insl
add
mov
stos
xchg
mov
xchg
outsl
insl
add
fiaddl
and
cld
cmp
sti
or
push
mov
mov
pushf
xor
push
enter
mov
test
or
or
repz
aad
lea
test
push
je
xchg
xchg
add
fwait
mov
or
push
stc
fcoml
sbb
icebp
xor
sub
stc
xchg
fdiv
out
bound
mov
add
mov
sahf
jle
xchg
mov
lea
ss
cli
mov
lea
out
cmp
sbb
jno
jecxz
popf
scas
fwait
xor
aas
pusha
clc
lock
popa
add
push
jg
ljmp
shll
mov
stc
movsl
pop
add
xor
fsubl
ret
dec
addr16
inc
cmp
jae
rol
int
aad
fwait
mov
mov
in
test
out
pusha
lock
adc
lcall
and
leave
repz
xchg
fwait
sbb
std
imul
xor
or
imul
mov
jge
addr16
daa
int
mov
cmpsl
subl
lock
mov
scas
push
iret
fisttpll
cli
dec
jge
pop
adcb
mov
sub
dec
popa
sub
cmp
inc
mov
mov
adcb
push
test
mov
xlat
cmp
outsl
push
cmpl
in
mov
scas
push
gs
push
sbb
jl
lret
es
loopne
or
insb
fnstenv
jns
mov
dec
inc
popa
std
dec
xor
mov
mov
mov
xchg
sub
call
shrl
mov
pusha
mov
jge
sbb
inc
adc
out
lods
inc
mov
pop
jle
xchg
fwait
cltd
or
adc
lock
add
sti
dec
xorl
mov
sub
dec
cmp
sub
xchg
out
cld
fisttps
js
jns
test
fcmovbe
lcall
jmp
push
dec
aad
and
mov
push
int3
pop
jmp
dec
cmc
ss
adc
popa
lods
xor
xchg
daa
in
lea
jp
subb
push
sar
add
xchg
ljmp
push
mov
lock
and
pusha
cmp
cmp
lret
data16
pop
imul
pop
repnz
xor
cmp
sub
in
mov
jb
fcoms
or
fsubrl
pop
add
jnp
shr
dec
mov
addb
in
flds
xchg
loop
jg
and
adcb
sub
insb
lcall
and
mov
xchg
fldenv
mov
fcmovb
pop
or
mov
in
jp
xchg
inc
test
call
inc
ret
mov
addr16
ja
stos
mov
mov
mov
sbb
xchg
xchg
aaa
pusha
movsl
mov
shr
nop
inc
and
in
in
jle
or
loope
js
leave
push
js
out
and
notl
lret
test
in
adc
idivl
negl
push
scas
aam
rorl
dec
dec
pusha
rcl
sub
mov
sbb
movsl
nop
sbb
cmp
jecxz
lahf
adc
shlb
dec
leave
das
repnz
and
jns
cmp
push
dec
dec
ds
je
enter
push
cld
xchg
dec
outsb
dec
push
pop
jo
push
pop
aaa
ret
sbb
mov
pusha
mov
arpl
xlat
mov
insl
sbb
ret
mov
pop
mov
clc
or
inc
mov
mov
bound
test
and
enter
jecxz
imul
sbbl
aas
jp
jne
shlb
stos
push
lret
mov
aaa
jecxz
inc
mov
stos
mov
cs
dec
scas
and
mov
and
aam
call
dec
sahf
inc
enter
adc
and
push
test
push
sbbl
jno
dec
scas
sbb
add
adc
test
mov
inc
pop
cmp
xchg
loop
jb
mov
sbb
bound
fnsave
call
sarl
dec
icebp
loopne
loop
aad
adc
or
cmp
nop
xchg
mov
ret
into
cld
jb
test
jg
push
out
and
mov
pop
and
hlt
lret
xor
loop
cli
in
pop
pop
pushf
pusha
cmp
cltd
shll
xadd
pop
mov
pop
je
mov
and
mov
cmp
cmpsb
inc
aam
mov
je
nop
xchg
inc
push
jg
jge
scas
notb
or
iret
mov
sub
xor
lret
jae
xorl
jecxz
leave
dec
mov
jne
bound
sbb
stos
scas
dec
scas
cmp
mov
or
pop
and
pop
add
ret
mov
notl
dec
jo
lock
pop
push
icebp
add
jge
jnp
ljmp
in
jg
xor
mov
out
mov
mov
fistpll
adc
iret
xor
xchg
dec
popa
push
call
in
jmp
cmpsl
mov
inc
daa
dec
mov
xlat
movntps
lahf
in
ret
mov
in
dec
cld
stc
mov
daa
fdivrp
jne
movsb
sub
cwtl
repz
aad
mov
xlat
jo
xchg
dec
sub
xchg
adc
fdivrl
imul
stos
jge
mov
mov
jp
pop
mov
cwtl
das
out
stos
sub
stos
mov
fstl
cs
pop
jnp
idiv
sub
pop
and
lods
std
or
into
jne
add
xchg
xchg
push
andl
scas
pop
pusha
mov
pop
jle
mov
and
xchg
push
mov
push
aad
lret
cld
lds
cmc
in
leave
push
xchg
jns
jl
or
push
test
push
pop
daa
lock
jns
sahf
and
mov
fs
mov
adc
insl
lcall
or
sub
mov
xchg
xchg
cltd
xchg
mov
outsl
mov
jae
hlt
push
fstpl
xchg
pop
ja
xchg
sbb
cs
aas
sub
ljmp
mov
cmc
or
dec
pop
lock
cmp
cmp
sbb
mov
icebp
insb
hlt
cmp
js
rcrb
cltd
sbb
inc
imul
fs
test
icebp
scas
pop
in
loopne
les
xor
aaa
out
loop
and
pop
jge
xchg
aaa
ror
fiaddl
pop
sub
mov
pusha
xchg
adcl
cmpsl
clc
ljmp
fldenv
repz
out
add
popa
mov
or
fs
insb
xor
lea
leave
fsqrt
das
popf
adc
push
mov
stos
sbb
insl
cmp
inc
int3
xor
arpl
mov
lcall
ja
lret
push
sbb
inc
xchg
xor
sbb
and
lret
outsb
jl
and
daa
xchg
outsb
inc
dec
sbb
outsb
call
mov
int
xor
sti
sub
testb
add
xchg
das
and
mov
push
ds
mov
fbld
stos
pop
hlt
sbb
jo
cwtl
jno
test
or
test
insb
sti
ljmp
cmpsb
gs
mov
mov
mov
lahf
cltd
cmp
xchg
out
js
cmp
ret
mov
call
and
jno
or
push
das
mov
mov
neg
repnz
sbb
ret
and
xchg
out
loope
cwtl
adc
xor
pop
mov
push
mov
jmp
sahf
sbb
pop
dec
imul
mov
mov
ret
int3
leave
in
lock
sub
xor
pop
mov
aam
fdivr
rorb
push
fwait
push
push
adc
stc
mov
push
movsl
popf
xchg
into
pop
fbld
adc
call
in
iret
shl
push
sub
aaa
cmpsl
mov
aaa
lret
mov
mov
cmpsb
arpl
loopne
dec
in
cmp
mov
mov
hlt
mov
sbb
pop
jmp
pop
cs
dec
pop
adc
sahf
jno
sub
lret
nop
mov
xlat
daa
outsl
mov
mov
movsb
mov
test
mov
mov
cmp
add
in
jbe
rcll
cmp
xchg
add
fsubr
xor
xor
inc
dec
mov
dec
lock
sbb
ret
bound
push
insb
pushf
sahf
ljmp
test
in
xor
pop
pusha
pop
mov
push
clc
out
pop
and
xchg
pop
test
ljmp
repnz
ret
add
xchg
push
rorb
or
rcll
or
repz
adc
mov
bound
out
xchg
push
ja
cmp
gs
xchg
test
lods
mov
insl
mov
mov
add
and
iret
ds
and
movb
divb
cmp
daa
sahf
sbb
push
int3
xor
test
int
cmp
push
stos
enter
int
xor
out
into
dec
ret
dec
inc
mov
icebp
sbb
jmp
movsb
addr16
mov
test
xchg
les
icebp
repz
cld
mov
int
mov
ss
movsl
cmpsb
stc
sarl
je
mov
jp
mov
pop
push
jae
and
ret
int
sub
xchg
lret
xlat
jbe
push
mov
test
cmp
jge
inc
fnstenv
add
clc
mov
fildl
cltd
test
and
leave
push
icebp
adc
stc
sbb
in
test
movsb
idivl
mov
lcall
and
cld
inc
pop
push
shlb
hlt
mov
icebp
pop
das
daa
ret
lock
push
in
sahf
jae
iret
or
mov
loope
mov
jmp
je
and
xchg
xchg
sti
xchg
int3
and
add
test
flds
mov
mov
cmp
data16
xchg
xchg
or
bound
mov
sub
and
xchg
xchg
sbb
pop
sarb
cmc
pop
insl
icebp
popf
sub
dec
repz
add
and
or
mov
es
cld
jecxz
mov
and
and
insl
std
cmp
dec
push
test
mov
jbe
frstor
imul
subb
stos
xor
xchg
cmpsl
dec
cltd
insl
cmp
mov
pop
ret
sar
jmp
pushf
outsl
and
sub
rclb
push
or
add
ret
in
and
rcll
fnstsw
and
push
dec
adcb
loop
les
fidivrs
pop
or
jle
jmp
lcall
cwtl
mov
loope
fxam
jle
jbe
sar
lods
push
pop
std
cltd
aad
lahf
dec
out
movsb
mov
lock
aaa
into
pop
insb
fucomi
popf
cmp
adc
ss
repz
imul
das
xchg
repnz
pop
pop
lcall
and
xor
inc
faddl
les
cmp
pop
jno
lea
xor
dec
pop
aas
dec
cmp
and
cwtl
loopne
inc
push
cmp
ss
arpl
mov
xchg
and
sub
sbb
cmpsl
push
mov
or
out
push
fldenv
sahf
mov
mull
xchg
pop
rolb
nop
stos
andl
cmc
adc
sub
pop
js
mov
xchg
aam
clc
add
in
hlt
mov
loope
out
nop
or
mov
cltd
fistps
jno
loope
sti
push
test
adc
xor
addr16
sub
mov
or
inc
test
or
fdivs
xor
jno
inc
sbb
xchg
sbb
out
ss
imul
jp
jg
jecxz
bound
xchg
and
inc
mov
push
and
sarb
push
loopne
jo
ss
or
popf
xor
mov
ret
out
outsb
imul
add
pushf
xchg
leave
jmp
jbe
xchg
mov
mov
jmp
cwtl
add
popf
pop
xchg
call
sub
sub
inc
loopne
leave
sahf
jae
adc
aam
call
and
out
mov
add
or
adcb
jg
ljmp
jno
dec
je
jp
push
push
dec
dec
pop
in
jmp
push
jne
mov
mov
mov
xchg
sub
mov
mov
scas
xorb
mov
push
xchg
xchg
dec
movsb
add
mov
lds
mov
and
jne
jmp
lcall
shr
scas
add
aas
pop
jne
pop
push
sub
in
ds
push
cmpsb
or
cli
dec
add
xchg
xor
fstl
pop
std
sahf
outsl
inc
dec
and
jg
insb
mov
rolb
xor
sub
push
or
or
and
leave
inc
pop
cmp
dec
iret
scas
popa
in
jmp
sbb
bound
sbb
xor
lds
arpl
cmp
sahf
jno
pop
inc
push
lea
xor
sub
push
inc
inc
sub
or
in
inc
fs
test
cmpsl
adc
popf
outsb
adcb
popa
mov
dec
movsl
loope
or
push
jecxz
push
movsb
sarl
xchg
stos
rcl
xchg
ds
ret
xlat
in
test
mov
pop
cmp
dec
or
loopne
mov
dec
push
and
fistl
xlat
sarl
sbb
cmp
aam
shl
dec
test
push
cwtl
neg
out
cmpsl
push
shld
fbld
sub
jmp
mov
mov
es
dec
adc
pop
mov
sub
popf
daa
xor
inc
mov
jns
lock
push
arpl
cmp
lods
loope
and
stc
das
lret
fsts
xchg
adc
inc
sti
jae
pop
cltd
add
mov
test
pop
or
mov
scas
js
pusha
scas
lea
add
mov
test
jp
add
cmp
sbb
jno
ds
daa
icebp
pop
adc
dec
pop
insl
jp
popa
dec
add
add
sahf
xor
inc
stos
jmp
xchg
sbb
out
leave
dec
mov
add
mov
fnsave
ret
imul
fwait
cld
in
stos
aaa
push
jne
int3
movsb
mov
rorb
sbb
jmp
jge
movsb
add
outsb
lret
xor
sub
out
jno
lret
test
xchg
clc
pop
out
dec
gs
adc
mov
dec
mov
push
cwtl
xor
sub
dec
scas
inc
push
mov
int3
and
mov
ss
ss
jmp
lcall
mov
or
outsl
inc
ja
dec
mov
loope
lea
shrb
ss
sti
mov
movsb
jecxz
je
es
mov
loope
dec
test
push
adc
xor
mov
scas
inc
nop
mov
out
jecxz
jns
jmp
aaa
aaa
push
test
scas
cmpsb
ja
or
mov
cli
mov
in
dec
in
mov
push
scas
call
jecxz
sahf
fmull
popf
mov
or
mov
xor
xor
ds
insl
sub
adc
pop
cwtl
jbe
xor
add
dec
repnz
mov
faddl
movsl
jb
scas
test
mov
ret
cmp
mov
popa
test
insb
sub
push
icebp
xchg
inc
pop
xor
cmp
pop
cmp
mov
jnp
push
sub
pop
mov
xchg
cmp
mov
les
int3
jb
out
mov
push
xchg
sub
lods
inc
push
mov
fsubs
test
aam
mov
jne
jne
cmpsl
adc
fdivs
cmpsl
stc
outsb
lahf
inc
jmp
repz
adc
mov
xor
xchg
test
mov
xrelease
sbb
sub
sub
sub
ja
pop
repnz
inc
add
push
imul
aad
push
jecxz
jnp
pushl
adc
mov
mov
and
mov
mov
out
sub
pop
xor
lahf
push
pusha
pop
adc
or
mov
shrb
jle
add
loope
lcall
jns
push
ja
and
pusha
pop
pop
test
and
popf
sub
ret
notl
ret
insb
or
cltd
adc
loopne
ret
and
mov
pop
add
in
mov
sbbb
ljmp
fsubrp
pop
xchg
test
imul
xor
xchg
aas
das
ret
xchg
call
ror
in
sti
icebp
ss
adc
dec
sbb
pop
jnp
clc
ret
fwait
xchg
notb
mov
lods
fs
aaa
hlt
pop
pop
adc
rclb
xor
cmp
pop
jp
sbb
stc
nop
pop
cmp
mov
adc
lret
pop
popf
push
in
data16
into
lcall
mov
sbb
cmpsb
je
jo
xlat
or
sub
mov
and
sbb
push
xchg
cmc
or
mulb
dec
add
pop
jg
imul
aad
inc
and
push
gs
pop
xchg
dec
xor
gs
into
jle
fld
mov
rcll
xor
outsl
add
mov
mov
shrl
scas
aaa
test
pop
jae
out
xchg
mov
aad
inc
or
mov
and
sbb
push
sub
aam
stos
pusha
popf
scas
pop
test
xor
dec
inc
sbb
cmp
rol
jp
dec
rcll
shl
sub
pop
in
xor
xchg
cmp
push
lock
pop
outsl
push
bound
fadds
xchg
scas
inc
nop
inc
adc
sbb
xorl
orl
inc
addr16
out
stc
add
jmp
or
or
or
sub
xchg
sarb
or
movsl
add
imulb
fwait
add
mov
negl
inc
or
jg
nop
lods
das
sub
xchg
repz
jb
inc
cmc
dec
xchg
mov
cmp
add
leave
test
lret
push
lret
loop,pt
testl
mov
push
push
xor
popa
clc
mov
mov
sub
push
aam
test
jge
rdtsc
rcrb
push
int
in
mov
pop
lret
int3
or
out
mov
jecxz
xor
test
xchg
add
sbb
xchg
in
orb
cmp
and
sub
mov
scas
call
sar
lds
add
subb
inc
dec
xchg
mov
fstps
fisttpl
sbb
rcll
xchg
add
loopne
dec
test
sbb
sbb
inc
int
insb
scas
sub
in
pop
jmp
aaa
mov
aas
cli
mov
outsl
push
les
dec
out
clc
ss
hlt
and
or
jg
add
push
nop
mov
add
test
xchg
imull
jno
sbb
hlt
push
add
mov
and
and
and
push
popf
push
movsl
push
mov
adc
mov
jg
xor
outsb
fnstcw
or
sub
int3
push
ffree
mov
mov
sbb
sub
dec
scas
sbb
movsl
in
and
imul
mov
mov
dec
mov
and
out
test
nop
out
cmp
je
lds
fsub
and
xorb
mov
dec
pop
cmp
fnsave
stos
inc
inc
test
xor
push
clc
addb
test
or
test
xchg
lcall
addr16
add
mov
xchg
mov
loope
xchg
cmp
jge
inc
stos
mov
xor
sahf
xchg
jae
lock
pop
sub
sbb
sub
imul
mov
jle
adc
ret
rcrl
jb
loop
mov
mov
nop
and
cs
popa
nop
mov
sub
repz
shl
dec
cmp
inc
xchg
cmp
jbe
cmpsl
ds
xchg
mov
jecxz
sub
add
inc
fcmovb
xor
push
icebp
jecxz
popa
pop
into
insl
lret
and
pop
push
stc
or
jecxz
adc
icebp
fidivrs
mov
add
addr16
enter
int
aas
into
fisubrl
repnz
rclb
add
ficomps
sbb
outsb
xchg
aaa
pop
or
dec
pop
aas
push
test
in
mov
xor
or
popa
fsubs
mov
aad
sub
sub
mov
dec
arpl
insb
inc
xor
roll
mov
sahf
addr16
scas
arpl
lret
pop
jbe
fsubr
mov
mov
sub
in
push
dec
loop
xor
pop
mov
fucomp
xchg
mov
cmp
sbb
std
popf
mov
inc
stos
mov
inc
ror
idivl
sahf
test
ds
fst
out
test
incl
or
xchg
in
std
imul
and
add
dec
jno
cmpb
push
incl
incb
das
ja
xchg
cmp
dec
dec
add
hlt
xor
pop
mov
add
popa
push
pop
push
sbb
les
loope
cmc
xchg
add
pop
les
adcl
lret
cmc
daa
push
mov
xchg
mov
popf
lcall
out
insb
lret
lret
sub
fidivrs
out
adc
pop
hlt
fistl
mov
or
call
cmp
pop
pop
mov
mov
popa
popf
mov
stos
jno
xchg
pop
or
fistl
jo
and
mov
mov
flds
out
test
lods
ljmp
std
xlat
ret
xor
repnz
jmp
insl
aad
enter
or
aaa
test
arpl
rcl
bound
icebp
push
cmp
aas
dec
jecxz
add
and
xchg
sbb
lidtl
popa
sbb
push
sub
add
cmpsb
sub
test
dec
loopne
sub
shrb
sbb
je
pop
mov
mov
leave
outsb
cltd
cmp
sub
pop
or
ds
sub
test
mov
das
jnp
add
pop
je
in
xor
idivl
fiadds
lds
ss
mov
inc
push
mov
cmp
loope
xor
sub
mov
adc
xchg
ret
stos
pop
in
or
jns
xchg
iret
adc
sub
orl
or
jns
push
fs
test
xchg
insl
mov
mov
jp
pop
push
or
cmp
popa
xchg
jo
sub
mov
ret
mov
mov
xchg
add
jmp
pop
xor
enter
enter
into
sbb
js
cwtl
es
dec
insl
sbb
jle
bound
icebp
push
or
push
out
pop
sbbb
mov
jecxz
sub
inc
jae
fisubrs
arpl
push
das
xchg
repz
fnstcw
into
aad
scas
scas
push
or
int3
inc
enter
ficoml
push
cmc
mov
pushf
jg
imul
stos
std
jnp
call
sbb
ljmp
mov
mov
outsl
cwtl
out
mov
sahf
cmp
push
push
outsb
sbb
lea
dec
push
mov
jmp
sub
mov
sub
int3
mov
add
xor
xchg
xor
mov
icebp
iret
pop
and
and
mov
push
adc
shlb
push
sbb
ds
mov
add
push
out
and
or
fnstcw
mov
cwtl
aas
mov
rorl
push
sbb
loopne
xchg
in
in
sbb
xchg
or
outsb
lods
aas
lret
cmp
sbb
sub
dec
jg
cmp
xorl
xor
test
pop
jbe
jp
outsl
inc
xchg
pop
inc
aad
inc
pop
cmp
subl
or
mov
push
push
movd
inc
popf
or
mov
and
dec
aam
outsb
ret
iret
pop
mov
dec
add
mov
ja
outsb
push
mov
nop
in
push
ret
aam
jmp
sti
sbb
int
mov
jo
inc
fsub
in
ds
das
inc
nopl
sbb
mov
lock
pop
hlt
xchg
scas
or
sbb
or
add
push
ljmpw
xchg
cmpsb
popa
mov
mov
fdiv
sbb
pop
mov
sub
les
inc
iret
add
dec
ljmp
jp
ja
xor
ljmp
call
popf
rolb
mov
pop
jg
inc
stos
arpl
int
dec
sbb
cmp
pop
mov
jno
adc
clc
inc
or
xchg
mov
pop
dec
add
movsb
and
push
xor
sbb
adc
or
test
nop
adcl
cs
dec
test
push
addr16
int3
xor
push
sub
xor
jmp
inc
inc
cld
pop
cmp
jmp
xchg
imul
repz
pop
inc
loopne
mov
repnz
fcomps
hlt
mull
ljmp
add
mov
jae
sub
mov
test
mov
popa
test
leave
out
aaa
sbb
cs
pop
mov
fistpll
xor
mov
fidivl
aad
jno
mov
fnstenv
pusha
xchg
lods
aam
pop
call
and
xchg
jmp
push
xlat
dec
pop
mov
xlat
fwait
jl
fistps
shr
sub
or
xlat
inc
aam
jb
arpl
mov
imul
stc
loop
scas
adc
ss
and
sbbl
aas
cwtl
jp
in
dec
imul
mov
dec
in
sbb
xchg
pop
int
adc
dec
fnstenv
adc
in
sbb
repz
imul
pop
xor
je
jbe
call
daa
or
sub
mov
addr16
xchg
adc
test
xchg
bnd
shll
ret
xor
clc
outsb
sub
cmpsl
imul
aas
mov
sbb
and
loop
inc
adc
push
call
inc
pop
mov
aaa
clc
rorl
int
push
adc
divb
out
mov
dec
dec
dec
push
movsb
inc
lcall
and
mov
addr16
cltd
jnp
imul
xchg
cwtl
insb
dec
push
jg
imul
out
data16
mov
test
mov
push
adc
xor
mov
mov
cmpsb
sahf
and
jb
dec
lret
push
and
pop
rcrl
sub
insb
gs
das
into
pop
into
jo
cld
jge
jb
inc
push
jbe
fdivrp
stos
adc
jg,pt
clc
ret
cltd
dec
push
mov
jle
or
lahf
inc
dec
pop
lds
pop
sbb
fcoms
mov
outsl
sub
push
daa
sub
aam
cli
pop
cmp
sub
inc
bound
xchg
and
shll
repz
sub
data16
mov
push
or
jne
sub
inc
scas
call
lret
lods
imul
add
scas
icebp
xchg
push
mov
pop
sbb
inc
push
pop
xchg
fmul
enter
call
xchg
sar
xchg
mov
fidivrl
adc
dec
xor
xchg
into
xchg
pop
adc
popf
pop
and
sub
xor
push
ss
incl
adc
adc
in
daa
pop
into
sub
sbb
shll
xchg
aaa
push
in
inc
and
pcmpgtw
in
mov
sbb
aad
push
jle
fildl
cli
mov
into
andl
or
cli
push
fimull
call
jne
mov
ja
xor
mov
out
push
in
xor
push
negl
push
jns
inc
jne,pn
std
js
mov
push
or
xorb
adc
dec
mov
outsl
shlb
jmp
add
mov
or
mov
lret
loop
mov
add
jmp
loope
mov
fistpll
xchg
jae
xchg
cmpb
idivb
mov
dec
cs
ret
fnstsw
ss
xchg
pop
xchg
lds
jl
add
inc
fdivrl
gs
sub
fsubrs
inc
add
scas
les
hlt
xchg
jae
ds
pop
icebp
push
dec
sbb
fnsave
inc
jmp
lock
outsl
shll
add
pop
mov
scas
push
push
jns
mov
int
xlat
ret
divl
or
pop
cmp
int3
and
cmpsb
push
inc
popf
scas
mov
inc
and
ljmp
mov
out
mov
xchg
aaa
or
and
pop
sbb
add
inc
hlt
cmp
push
dec
mov
inc
int3
mov
pusha
and
and
adc
ss
stos
js
pop
int
in
andl
push
ljmp
push
xor
pop
std
lret
jecxz
out
ficomps
cmp
mov
dec
pop
add
cmpsl
nop
xchg
aam
jne
sahf
lret
jecxz
mov
push
sub
ds
shl
pop
call
stc
mov
inc
adcb
dec
sahf
stos
jge
sahf
or
mov
pusha
divl
enter
jg
mov
jb
out
cmpsl
ret
out
in
cmp
inc
jle
imul
test
int3
xchg
pop
adc
xchg
xchg
aam
adc
andb
and
and
xchg
incl
je
xchg
cmp
hlt
mov
sbb
in
das
cmp
dec
sbb
inc
movsb
jl
imul
testb
mov
xor
push
xor
sub
inc
pop
test
jmp
lahf
ficoml
xchg
test
in
neg
jae
popa
jecxz
mov
dec
and
out
jae
mov
mov
fcmovnbe
popa
inc
push
pop
push
rcll
nop
repnz
es
cmc
int
icebp
inc
leave
sub
ss
add
popa
into
sbb
fwait
cmpsl
pop
nop
int3
pop
pslld
add
pcmpgtd
pop
xor
adc
fwait
dec
lock
int
jmp
mov
jnp
adc
mov
dec
and
shl
xor
xor
scas
call
into
cmpl
adc
mov
jl
jp
loop
inc
inc
inc
add
imul
repnz
fmulp
into
daa
outsl
test
inc
pop
jg
in
iret
and
mov
lret
sub
into
out
jbe
jbe
enter
jl
jno
lcall
fsubl
jnp
in
repz
xchg
push
dec
lret
fimuls
aam
mov
stc
mov
or
adc
sbbl
pop
mov
inc
ja
incb
dec
cwtl
pop
mov
or
rcll
adc
dec
mov
test
jp
fiadds
addr16
mov
xchg
push
cmp
cmp
adc
loop
xchg
das
daa
or
leave
add
ja
adc
lret
inc
divb
je
jae
sbb
aas
cs
xor
push
in
or
xor
sbb
stos
xchg
in
sub
fldt
int
stos
stc
cmc
out
ss
adc
lods
inc
adc
or
aam
xchg
push
pop
loope
mov
push
push
daa
movsb
jno
jno
pop
aaa
mul
sub
cs
or
nop
repz
push
add
and
insl
rorb
mov
bnd
ficomps
mov
test
stos
cwtl
gs
ds
test
or
cld
cli
inc
loope,pn
stos
mov
or
pop
cltd
mov
xchg
bound
into
ljmp
push
push
sbb
sbb
add
pop
in
inc
pop
scas
out
scas
lret
enter
mov
out
popf
movsb
cmp
mov
sub
ret
push
repnz
std
aam
mov
xchg
fucomi
bound
cld
sbb
sbb
not
in
push
in
mov
jb
mov
xor
clc
pop
sbbb
lock
or
iret
movl
cwtl
das
push
cli
or
sbb
cmpsb
imul
icebp
pop
lret
iret
cmp
add
testl
jecxz
push
rolb
fdivl
pop
jnp
xlat
adc
into
loop
das
pusha
mull
lret
jns
jne
mov
jmp
push
mov
clc
fnstsw
push
pop
cmc
inc
dec
push
gs
mov
xchg
fisubl
pop
cmpsb
inc
push
imul
in
inc
shll
leave
les
xlat
adc
cmc
mov
xor
cmp
aaa
mov
inc
push
pop
aam
or
and
popf
aad
jp
popl
jo
xor
out
lcall
inc
std
xchg
xor
shl
sub
mov
scas
jmp
dec
dec
sub
loopne
jg
lods
mov
outsb
scas
mov
adc
ficomps
ret
int
dec
mov
and
mov
lahf
mov
add
sbb
sub
xchg
testl
sbb
hlt
pop
xchg
mov
out
mov
add
sub
lods
stos
ret
dec
mov
xor
xorb
icebp
push
pop
fcompl
into
xor
pop
clc
je
sub
enter
jle
inc
mov
inc
scas
sbb
cmp
lahf
pop
sahf
inc
addl
push
lret
xor
add
push
test
xor
or
jmp
push
sbb
sub
enter
arpl
or
fs
or
ret
xchg
pusha
pop
ret
test
mov
loopne
daa
call
bnd
ljmp
sti
shll
es
pop
mov
xor
fisubl
mov
mov
xchg
bound
xchg
addl
mov
mov
loopne
lcall
mov
js
arpl
push
mov
movsb
call
push
cmp
dec
dec
sbb
aam
cmp
outsb
add
nop
sbb
push
loopne
loope,pt
jmp
push
inc
and
lds
sub
fdivl
data16
addr16
fwait
xor
dec
outsl
push
inc
cli
test
ret
ljmp
sarb
add
lcall
cmp
in
and
xchg
ljmp
mov
cmp
in
fprem
or
dec
loopne
xor
mov
or
push
cmpsl
test
loope
pushf
inc
lods
leave
out
cmpb
pop
test
mov
mov
mov
inc
gs
push
int
ja
pop
jno
lret
jo
test
or
mov
loop
fisubl
inc
lock
hlt
add
pop
mov
mov
lods
lods
add
ret
inc
popa
sti
lahf
out
jl
dec
xchg
cmp
out
mov
cld
rclb
jge
aad
fwait
mov
push
push
sti
xor
shr
das
int
xchg
pop
cs
mov
pop
mov
imul
in
dec
shl
inc
xchg
insb
incl
clc
xchg
push
data16
cmp
daa
adc
mov
dec
push
in
jp
push
out
mov
jne
dec
fdivs
dec
in
mov
mov
leave
jno
call
mov
lea
mov
sbb
dec
push
push
adc
sahf
clc
cwtl
sbb
mov
cmpsl
jmp
push
push
sahf
stos
pop
shlb
lret
jle
jg
in
sbb
pop
ljmp
mov
cmc
mov
in
push
imul
sbb
push
scas
jne
add
jne
adc
lods
inc
cs
je
sti
ljmp
adc
push
in
pushf
xor
jns
xor
pop
cmp
sbb
test
shrb
mov
pop
pop
test
in
cmp
mov
cld
cltd
adc
dec
lods
mov
fisubrs
movsl
cmp
push
fadds
xor
dec
mov
xchg
bound
pop
arpl
push
jl
jmp
sub
hlt
dec
das
inc
mov
in
mov
gs
pusha
jp
cmp
or
jnp
je
mov
loope
dec
negl
xor
popa
adc
aas
xchg
fwait
cmpsl
repz
xchg
jmp
jp
jo
leave
jns
pop
std
mov
das
ja
mov
les
repz
stos
inc
pop
popa
cli
xchg
cmpsl
sub
loopne
jae
jbe
cmp
mov
je
add
mov
fnsave
fiaddl
jo
dec
iret
jo
in
insl
jmp
popf
and
mov
cmp
mov
shlb
mov
mov
push
mov
xor
vpshufd
clc
or
shlb
repz
pop
xlat
lea
pusha
sbb
subl
loope
aas
insl
add
dec
inc
aaa
mov
sbb
xchg
mov
inc
pop
lahf
out
outsb
adc
call
imul
push
xchg
ja
cmp
test
aad
inc
aam
pop
jb
mov
push
mov
cli
pusha
mov
xchg
sbb
loop
add
sub
jecxz
pop
xlat
cwtl
mov
jmp
out
and
mov
in
out
pop
mov
mov
in
leave
jle
inc
and
dec
mov
jg
mov
stos
jg
xchg
dec
jnp
in
cmp
mov
insl
push
inc
and
jmp
out
mov
insb
inc
dec
repnz
fs
xchg
sbb
sbb
dec
rcll
rcrb
adc
sub
lret
jae
lret
into
jmp
aaa
mov
jge
xchg
mov
mov
nop
push
cmp
mov
lcall
jl
mov
pop
dec
aas
push
jg
insb
add
mov
sub
pop
adc
or
and
pop
inc
stc
pop
cmp
mov
or
push
arpl
je
push
dec
jecxz
sub
inc
inc
ret
push
xlat
stos
std
rcll
shll
cld
out
es
jge
push
mov
nop
or
adc
inc
mov
icebp
adc
or
inc
cmp
push
or
stos
jae
add
icebp
lahf
jno
fidivrs
jns
push
adc
incl
mov
and
mov
fsub
leave
icebp
shlb
push
xor
leave
pop
ret
fsubrp
hlt
shlb
mov
insl
aam
decb
mov
push
mov
sub
sub
mov
mov
sbb
mov
aad
pop
dec
in
dec
in
jge
jecxz
push
jle
dec
or
in
cmc
cmp
leave
dec
cwtl
pop
icebp
leave
pushaw
fistl
js
popa
int
mov
in
and
icebp
mov
xchg
mov
cmpsb
xor
es
push
mov
xchg
rolb
cmp
rcll
dec
dec
add
dec
jo
add
stos
dec
aad
cs
inc
out
cmc
ret
outsb
sbb
in
dec
cmp
inc
push
pop
sub
jbe
outsb
push
xchg
or
sub
sub
popf
mov
popf
xor
or
inc
in
mov
ficoms
fildll
push
and
icebp
sahf
jae
test
fcoms
test
jmp
lret
dec
jne
imul
loope
dec
iret
aam
enter
addr16
mov
dec
jbe
mov
sub
push
inc
dec
mov
out
por
data16
addps
mov
adc
xor
xlat
and
cmp
add
mov
rcll
mov
std
jae
pop
test
adc
pop
roll
jae
xor
int3
gs
xchg
mov
call
inc
arpl
dec
mov
cmc
int3
xchg
sti
and
movsb
mov
stc
ss
cmpsl
xchg
xor
cmp
sub
dec
in
dec
inc
cld
imul
mov
or
jb
cwtl
push
and
push
lea
sbb
out
adc
pop
fdivrs
sbb
jo
adc
ret
and
dec
loop
mov
fistpl
xchg
test
cmp
mov
test
ds
push
jae
test
repz
jae
jno
scas
sub
cld
adc
dec
aad
sub
cmpsb
xor
mov
xor
pushf
pop
dec
pop
and
cwtl
test
sub
cs
imul
repnz
repz
cmp
pop
in
mov
inc
call
mulb
ljmp
adc
and
xchg
sbb
mov
fsubrp
xor
adc
ret
mov
out
in
int3
in
mov
sub
adc
pop
push
inc
sbb
dec
mov
jo
push
and
ret
xchg
xchg
orl
lcall
xchg
shll
push
out
push
repnz
shlb
pop
dec
fnstcw
pusha
cmc
sbb
int3
mov
bnd
clc
and
push
push
add
mov
add
mov
das
jg
std
fs
clc
mov
add
aam
cmc
sbb
cmp
jb
cmp
mov
xchg
xchg
pop
jmp
dec
pop
cmp
mov
out
inc
pop
or
lcall
sbbl
sbb
jnp
pop
jbe
decb
loopne
adc
bnd
adc
out
xchg
mov
mov
sbb
ret
test
incl
dec
and
out
mov
in
pop
mov
or
andl
test
fisubs
adc
push
mov
mov
inc
mov
imul
ret
pushf
xor
mov
xchg
decl
fildll
notl
andb
xchg
jge
cmc
add
jb
push
jmp
inc
sti
pop
out
mov
pop
incb
loopne
dec
push
mov
pushf
xor
pop
lds
dec
mov
xchg
xlat
dec
or
push
fdivl
pop
adc
loopne
mov
inc
mov
enter
sbb
clc
pop
fwait
into
xorb
mul
sahf
mov
outsl
mull
lock
mov
mov
aaa
mov
out
popa
pop
fs
out
clc
or
in
imul
xchg
xor
adc
mov
mov
loope
cmp
fs
js
dec
inc
add
jmp
aas
das
mov
test
jo
push
into
and
or
addb
or
fwait
pop
mov
inc
pop
scas
mov
rcrb
add
shrb
lods
lods
jno
fidivrs
arpl
rolb
sahf
jno
xchg
inc
leave
xchg
mov
mov
or
nop
pop
or
inc
xchg
or
xlat
add
sub
cmp
nop
push
or
and
pop
in
rcrl
mov
push
push
mov
cmc
adc
xchg
mov
and
jno
jp
sub
dec
jl
or
cltd
sub
sbb
fiadds
pop
pop
test
fbstp
shlb
into
inc
rcr
sub
ret
jae
cmc
jne
sbb
enter
xchg
jmp
aaa
adc
push
adc
push
xlat
push
ja
xchg
push
jno
rorl
fidivs
pop
xor
sub
sbb
mov
lock
je
dec
into
cmp
sbb
sub
shr
xchg
push
xchg
mov
add
and
pop
push
xchg
mov
fs
cltd
xchg
push
inc
mov
cmc
xor
mov
aas
pop
out
imul
stos
dec
or
mov
xor
fwait
lock
ret
jae
jg
popa
inc
jmp
js
in
xor
adc
push
mov
cmpsb
stc
in
sub
pop
je
xor
and
mov
jbe
out
popa
sahf
sbb
movsl
cmp
jne
addb
xlat
mov
adc
or
mov
js
jge
outsb
cmp
cmp
xchg
and
sub
or
mov
dec
fs
lods
mov
inc
adc
dec
pop
and
xor
int
insl
mov
xchg
sub
pop
mov
scas
mov
cltd
divl
jne
push
lods
xor
out
mov
sbb
jmp
fdivl
popf
pop
dec
push
into
aad
lahf
mov
mov
push
clc
xor
dec
add
jle
movsb
or
mov
jl
out
mov
hlt
nop
call
aas
pushf
push
repnz
push
push
leave
loop
push
inc
insl
sahf
jne
xchg
fdivrl
inc
ds
mul
test
add
inc
mov
and
popa
es
add
insb
clc
xchg
fmul
cwtl
sub
pushf
lods
fmuls
movsl
cmp
sti
hlt
jmp
cli
cmp
stos
repnz
cli
int
mov
rcrb
imul
mov
xchg
push
out
nop
dec
cld
mov
cmp
pop
jno
lret
gs
cld
and
adc
jo
and
subb
dec
sahf
dec
cmp
aad
sub
pop
mov
or
test
jne
mov
fstl
push
inc
xchg
cmp
stos
ljmp
arpl
out
push
sbb
mov
mov
sbb
outsl
stos
jno
adc
mov
and
orb
in
movsl
inc
xchg
mov
aad
mov
mov
add
out
add
loop
adc
xchg
mov
adc
xor
add
mov
jb
aas
lret
adc
cmp
pop
roll
mov
push
or
cmp
jecxz
or
outsb
aad
dec
enter
mov
and
add
or
out
jns
rcll
push
movsb
cld
mov
xchg
lcall
push
xchg
cmp
dec
lcall
in
xchg
jb
push
mov
int3
pop
fidivl
into
or
pop
jnp
mov
sub
adc
sahf
and
mov
mov
add
pop
js,pt
stos
inc
mov
lds
sbb
mov
xchg
adc
mov
sti
fiadds
cmp
lahf
dec
in
xor
icebp
cmpsl
jbe
push
pop
popl
inc
pop
rcrb
jecxz
cs
cmp
push
idivb
pop
inc
sub
jne
insb
mov
jae
test
and
xchg
das
or
sarl
std
jg
dec
pop
icebp
cmp
sbb
lahf
ret
jbe
imul
or
xchg
dec
rcll
xor
sub
dec
mov
mov
les
stos
inc
mov
and
or
push
sub
shl
lea
or
sets
xchg
out
sti
scas
fs
pop
sbb
mov
stos
lods
mov
out
fsubrs
sub
add
dec
xor
add
adc
into
mov
loop
lahf
ja
vsubpd
iret
insl
dec
negb
xchg
sbb
fs
and
es
jb
xor
popa
jmp
movsl
sub
or
movmskps
push
stos
pop
xchg
imul
jg
pop
add
cmp
pop
cmp
testl
data16
lahf
ss
or
out
testl
loop
xchg
icebp
jns
and
mov
shrb
sub
pushl
mov
fucom
and
mov
mov
sahf
mov
jecxz
sti
pop
clc
jmp
test
daa
mov
add
sbb
xor
or
testl
pop
jp
iret
cwtl
add
xchg
insb
jl
or
and
mov
add
test
lret
push
push
push
jno
dec
dec
ds
cmp
lret
push
in
mov
mov
or
jp
mov
jno
mov
rol
stos
jge
sub
jne
insb
addl
cmp
mov
clc
lea
mov
lea
push
mov
adc
pop
and
adc
add
mov
out
or
cmp
adc
xchg
dec
aaa
dec
push
jne
pop
stc
scas
dec
bnd
inc
js
in
cmpsl
pop
xor
mov
or
insb
mov
jg
jno
fs
jb
inc
xchg
xchg
xor
int3
mov
push
or
mov
add
or
loopne
movsl
shr
out
push
lock
mov
cs
cmp
clc
add
sub
inc
out
mov
jl
or
shlb
xor
aaa
sub
cmc
inc
lret
dec
in
or
lds
push
insl
push
sub
sub
dec
mov
add
aaa
dec
std
and
movsb
fsincos
or
sarl
scas
pop
jg
sub
mov
mov
add
popf
xor
or
cmc
mov
mov
sbb
and
mov
sbb
lcall
shl
inc
lret
inc
mull
and
pusha
mov
and
notl
es
aam
dec
js
push
hlt
inc
es
arpl
mov
sbb
in
inc
or
jbe
std
push
lods
jnp
enter
cmp
enter
mov
inc
out
sbb
insb
sbbb
dec
movsl
and
sbb
cmp
movsl
sub
out
daa
jle
add
lcall
push
mov
ret
loop
xchg
pop
add
out
mov
mov
inc
out
cltd
jbe
jbe
dec
and
sbb
sbbb
add
dec
mov
hlt
rcrb
shl
cmp
push
ret
or
add
aas
shrb
jae
adc
aas
aam
mov
sbb
sti
fmull
aas
movsb
xor
clc
xor
daa
jl
clc
pop
mov
mov
mov
fdivp
mov
fs
pop
lock
fisttpll
mov
outsl
out
ret
je
lds
fdivs
sbb
repz
cmp
xchg
add
xchg
stos
adc
jl
int3
pop
sub
icebp
cmp
and
sbb
pop
in
and
inc
popf
ss
jno
shll
jge
imulb
or
sub
xor
inc
gs
dec
jle
loop
sub
pushf
sbb
add
iret
sbb
popa
jnp
mov
adc
push
inc
pop
sub
mov
orl
pop
bound
mov
roll
fucomi
sahf
cli
xor
sub
out
push
jg
sub
cld
cmp
cmp
push
jne
inc
bound
lods
and
in
pop
out
mov
xchg
and
aad
xor
pop
stos
push
mov
and
ja
sub
adc
cld
add
mov
push
add
hlt
inc
mov
xchg
push
int
xchg
xchg
addr16
adc
cmp
lcall
mov
push
ds
push
jnp
mov
insl
jae
push
push
mov
pop
rolb
sub
jl
lods
pop
leave
std
aas
cmp
ror
icebp
cmp
dec
js
subb
pop
push
and
mov
enter
and
rep
ljmp
pusha
sbb
out
rcr
in
or
rcrl
or
imul
cmp
pop
dec
dec
rolb
mov
xchg
mov
pop
hlt
test
jnp
loopne
int3
pusha
dec
lock
pop
push
mov
mov
cli
inc
sbb
xchg
out
xchg
xchg
cmpsl
cmpsl
mov
movsl
or
xor
lret
and
sub
shl
sbb
pop
call
or
subl
pop
movsl
stc
jp
sbb
lock
xchg
lods
jmp
or
ret
orb
pushf
push
enterw
sarl
insl
fcomip
loopne
movsl
sub
jae
lods
push
mov
aam
bound
insb
inc
dec
xchg
enter
mov
inc
stos
enter
adc
cmpsb
xchg
das
push
loopne
sti
mov
adc
nop
dec
xchg
out
xchg
dec
add
dec
jecxz
mov
outsl
or
je
mov
xor
inc
aas
cmp
and
mov
outsl
in
lods
nop
out
xor
inc
mov
inc
cmp
aad
in
push
ljmp
jno
into
adc
xchg
jle
jmp
movsl
sbb
dec
dec
daa
push
sub
dec
cmp
test
sbb
ljmp
push
ja
arpl
icebp
pop
in
fstps
jmp
lret
in
lods
push
in
repz
dec
in
idiv
call
or
inc
mov
ss
xchg
sub
pop
or
or
popa
lods
adc
lret
shll
sbb
pop
outsb
xor
cmpsl
adc
or
push
gs
je
push
push
stos
fsub
cli
pushf
dec
push
pop
dec
inc
cs
inc
paddsw
jb
cmpsl
or
mov
xchg
dec
sbb
sbb
cmc
dec
xor
jle
pop
out
sbb
push
jo
insb
jbe
sbb
ret
fwait
jle
jg,pt
cmp
sbb
inc
adc
repz
xor
test
push
fidivl
repz
mov
pop
imul
or
xchg
xchg
ret
inc
lods
rcrb
into
lret
negl
and
lret
inc
test
xchg
lods
pop
or
ret
es
sub
mov
xchg
loop
or
mov
rorb
stos
xor
sub
mov
sbb
mov
jnp
xchg
inc
icebp
adc
ljmp
push
subl
sub
scas
int3
xchg
stos
divb
jae
or
xchg
adc
aad
ja
subb
ja
xchg
pop
js
sti
fwait
fwait
jne
and
add
adc
push
cwtl
icebp
leave
fs
jno
ljmp
xor
fisttpll
stos
fs
add
jmp
cmpb
in
mov
sub
xchg
mov
and
imul
jbe
cmpsl
xor
add
cmpsb
shll
inc
in
jno
cmp
insb
push
pop
cltd
add
iret
xor
sbb
xchg
movsb
cli
inc
pushf
iret
cmpsb
es
adc
jnp
mov
ja
pop
mov
push
leave
mov
cltd
xor
cli
stc
std
pop
or
push
je
loop
xchg
fistpl
push
mov
inc
mov
ja
push
mov
xor
mov
xchg
xchg
xchg
push
out
push
outsb
and
mov
jbe
inc
inc
pop
mov
push
arpl
jp
add
subb
push
add
andl
sub
movsb
inc
out
or
lods
outsl
jae
and
daa
arpl
adc
test
push
and
jne
jno
xchg
cmpsb
into
xchg
sub
pop
hlt
mov
repz
pop
adc
dec
push
in
mov
cwtl
ficoml
jmp
adc
sub
insl
lods
and
cs
push
push
inc
xchg
loop,pt
out
mov
mov
fndisi(8087
jns
sbb
sti
jnp
and
rcrl
mov
out
addr16
lods
call
adc
push
cld
minps
lods
pop
mov
pop
ds
push
push
mov
lds
pop
push
imul
cmp
sub
fs
insb
mov
jge
int
aam
das
jnp
ja
outsb
int
pop
hlt
push
jp
sbb
or
push
ljmp
adc
cmp
push
rorl
mov
aaa
mov
inc
movsl
aad
adc
icebp
sahf
mov
and
daa
test
aam
dec
js
test
mov
xor
fbstp
ja
xor
ja
mov
imul
sbb
fimull
shll
mov
xchg
cltd
fstpl
call
adcb
add
jl
inc
xchg
jmp
mov
stc
popa
icebp
add
stc
xor
pushf
mov
jne
xchg
fwait
lcall
jg
sahf
mov
into
jo
stos
cmc
shrb
mov
ja
and
movsb
pop
sti
es
inc
mov
xchg
push
dec
inc
jmp
xor
imul
gs
inc
sbb
pop
dec
mov
push
idivl
push
sarl
mov
adc
lea
cwtl
cmp
or
lahf
inc
insb
ja
push
popf
imul
lds
and
mov
insb
rolb
fisubrs
clc
out
push
pop
popf
lods
xchg
fbstp
or
or
ret
xor
jle
and
ret
fists
sti
cltd
mov
enter
jns
cmpsl
shrb
sub
pop
repz
popf
int
mov
lret
sbbl
in
sub
mov
jmp
mov
clc
lock
sbb
cmpb
mov
notb
dec
leave
adc
scas
popa
scas
and
pop
mov
sub
push
das
rdpmc
mov
ja
scas
ja
adc
pop
int
jb
pop
movsl
dec
adc
dec
and
xor
and
jecxz
aaa
subl
inc
push
cmpsl
add
enter
mov
sbb
nop
adc
jge
jno
sbb
movsl
out
xchg
pop
and
cwtl
xchg
nop
adc
clc
adc
xchg
sbb
imul
aaa
mov
std
xchg
ss
push
and
or
out
nop
pop
sbb
add
jp
mov
aaa
sub
or
decb
adc
pop
call
push
pop
xor
sub
push
dec
into
test
or
mov
adc
xor
dec
cmp
mov
rolb
jnp
lahf
xchg
mov
stos
inc
sbb
filds
popf
or
iret
and
xor
pop
sub
outsl
ret
faddp
and
outsb
add
add
hlt
mov
pop
cmp
and
roll
fstps
das
outsl
out
mov
or
pusha
mov
dec
data16
jo
jle
push
push
jno
outsb
cvtps2pi
int3
inc
dec
jns
pop
loop
mov
inc
sbb
adc
lret
push
popf
stos
test
clc
add
dec
scas
sbb
push
movsl
adc
test
mov
cwtl
add
scas
out
push
mov
adc
inc
or
inc
push
jp
jge
cmpsb
out
lret
cmp
mov
adc
xor
pusha
mov
jae
fwait
sub
add
xchg
dec
sbb
pop
btl
cmp
pop
out
orb
ja
outsb
or
mov
aaa
adc
clc
mov
adc
pusha
pop
ds
sub
lods
das
les
push
inc
fbld
repz
pop
push
lock
ret
clc
xchg
sbb
xchg
xchg
arpl
mov
shrb
aaa
mov
cli
dec
sub
cmp
rcl
dec
cwtl
rol
cwtl
hlt
lock
cmpl
cmp
lea
jge
dec
test
rcrl
lods
dec
sahf
les
sahf
ds
mov
mov
in
add
fdivrs
add
jne
pop
fwait
lock
cmp
je
jno
or
ss
sbb
add
das
cmpsl
lret
cmp
out
mov
add
sbb
bound
insb
inc
arpl
adc
cmpsl
lea
push
inc
jno
mov
enter
mov
sub
add
imul
pop
push
jb
insb
xor
adc
inc
ljmp
sbbl
xchg
mov
mov
das
sub
push
inc
inc
jno
mov
push
pop
push
mov
sub
or
mov
mov
or
mov
push
jge
push
mov
mov
jecxz
ja
ss
sub
ljmp
in
jl
clc
in
sub
pop
mov
outsb
push
or
xchg
mov
scas
xchg
or
jge
sub
mov
lods
xor
or
xchg
xor
xchg
or
fcoml
ficompl
data16
cmp
shrb
xlat
cltd
jns
add
dec
pop
gs
fwait
je
mov
xchg
ss
scas
test
in
bound
add
mov
es
fucomp
pop
cmp
add
aam
pop
lock
outsl
scas
jo
sbb
adc
lahf
add
xchg
lahf
or
iret
mov
ret
mov
cmp
mov
mov
sti
mov
sub
push
jne
mov
jmp
out
mov
xor
lds
test
push
add
cmpsl
lahf
daa
clc
notb
jae
in
mov
pop
imul
xchg
pop
mov
mov
mov
push
insl
adc
insb
in
sub
hlt
mov
lret
rcrb
jg
fucom
xor
adc
xor
sbb
inc
insb
cmp
popf
addr16
inc
in
addr16
fistl
cmp
ljmp
lods
lcall
adc
mov
mov
rcrb
fdivrs
add
frstor
ds
mov
inc
or
push
loopne
inc
dec
testl
rcrl
shrl
loop
leave
mov
xor
mov
mov
xchg
xor
ja
rorl
pop
incb
ss
es
push
aas
mov
lock
movsl
push
lock
int3
aaa
sbb
dec
pop
ror
inc
inc
push
sub
jbe
gs
test
pop
out
add
adc
cmp
ret
ret
xor
scas
ja
test
dec
fbstp
push
mov
jge
addr16
adc
fistpl
xchg
mov
sbb
and
and
sub
push
imul
outsl
mov
adc
adc
loop
push
inc
pop
push
lahf
addr16
lea
shl
std
jne
jno
sbb
testb
test
insl
sbb
jp
jnp
push
sarl
dec
mov
fiadds
out
je
and
xchg
push
sbb
sbb
sub
repz
orl
dec
and
testb
pmulhuw
jmp
shlb
test
sbb
in
mov
clc
dec
cmp
sahf
jg
pop
lods
dec
movsl
dec
and
sub
cmp
shlb
cmpsl
mov
push
into
mov
jne
mov
xor
or
dec
adc
pop
xor
fmulp
subl
call
dec
xor
out
mov
or
push
push
sbb
add
mov
inc
enter
push
aad
aas
mov
mov
sbb
or
outsb
mov
pop
adc
push
inc
jge
das
scas
and
out
inc
stos
lret
sahf
mov
fucomi
mov
xor
out
pop
outsl
repz
andb
pop
insl
enter
jnp
inc
jae
jmp
fidivrl
icebp
push
scas
cmpsb
dec
sbb
jl
xor
and
jae
inc
and
or
xor
push
sbb
dec
lea
xor
cmp
or
mov
fcomps
mov
sub
adc
mov
sbb
aad
loop
int
add
sub
mov
stos
mov
scas
int
and
jbe
jb
imulb
mov
and
inc
sbb
les
mov
push
adc
dec
mull
movsl
outsb
pop
das
mov
ret
lock
lret
out
push
jns
movsb
fsub
cmp
test
lret
aas
push
cmpsb
mov
sbb
sub
fst
sbb
jo
mov
ror
ret
pop
push
add
pop
xchg
sub
int3
jecxz
push
dec
dec
in
ss
jno
test
jecxz
in
jne
mov
pop
enter
enter
mov
scas
aam
cmpsb
std
lds
aam
jmp
bound
ror
inc
cmp
jle
fsubrs
pop
mov
hlt
shlb
sub
call
out
frstor
dec
sahf
lret
sub
pop
adc
std
loope
xchg
iret
cmp
arpl
and
mov
shr
push
mov
hlt
lds
stos
or
or
mov
pusha
stos
add
xor
sub
lods
cmp
fisttps
popf
lods
inc
std
jecxz
add
push
icebp
push
xchg
push
lcall
sbb
pop
dec
pop
mov
push
jmp
mov
shll
fucomip
sti
or
dec
add
jne
and
jle
outsb
cmp
xor
test
fwait
je
fidivl
lds
ljmp
jp
scas
aaa
les
mov
movsb
arpl
jne
das
sub
popa
nop
fmul
aad
fnstsw
jle
push
pop
pop
popf
out
mov
popf
mov
dec
mov
cli
lea
bound
sub
cmp
loop
push
outsb
call
sbb
arpl
stos
es
add
cs
xchg
mov
repnz
pop
add
andb
inc
jg
decb
jmp
xor
dec
jnp
jg
out
negb
add
or
dec
popl
jg
dec
call
test
popa
and
jb
mov
push
outsb
and
xor
sbb
jge
ljmp
imul
sbbl
xor
xchg
in
aas
adc
push
xchg
repnz
aas
mov
fsubl
cmp
mov
push
or
jne
in
in
jns
dec
push
xchg
or
div
leave
or
std
leave
jecxz
and
les
rorb
add
sub
or
stos
mov
push
adc
arpl
sarb
outsl
popf
mov
sub
fldenv
stos
testl
xchg
in
jns
lea
jp
sbb
ss
and
mov
popa
xor
or
xchg
pop
mov
cmp
xchg
xor
xchg
push
inc
fwait
xor
jle
dec
out
insl
sbbl
cli
jecxz
adc
inc
push
adcl
je
mov
lods
pushf
dec
popa
orl
js
adc
mov
call
dec
jb
jp
jmp
push
mov
or
insl
mov
movsl
dec
adcl
addb
int3
leave
mov
gs
daa
xchg
or
sahf
sub
xlat
mov
mov
push
or
lods
add
and
shl
dec
decb
or
pop
sbb
mov
mov
push
jmp
adc
xchg
loopne
call
mov
sti
mov
dec
xchg
sub
xchg
xor
sbb
push
inc
bound
shlb
or
inc
cmpsb
idiv
mov
js
mov
dec
into
xor
xor
xchg
jecxz
popf
push
orl
and
movsl
insb
sub
jae
lcall
cmp
ja
pop
stos
or
xchg
test
call
xor
pop
mov
das
lock
stc
arpl
xor
adc
test
or
jb
sbb
in
mov
popa
cltd
mov
sarl
xor
lods
add
test
jle
test
fs
or
xchg
dec
cmc
lahf
xor
inc
call
sbb
mov
jecxz
andl
inc
shl
xchg
cmp
cs
mov
cmc
aaa
push
add
jne
dec
adc
adc
inc
les
mov
sub
pushl
lods
sbb
xchg
scas
push
gs
inc
call
dec
movsl
push
fldt
mov
out
lods
mov
fsubrs
aas
pop
call
dec
dec
mov
sbb
inc
imul
out
add
mov
je
cmp
or
shl
xor
inc
dec
and
pop
call
dec
sbb
mov
scas
outsl
adcb
jae
mov
add
sbbl
mov
jl
jecxz
mov
sarl
aas
push
and
sbb
push
fstpt
sub
cmpl
stc
cwtl
cmpsl
cmp
loopne
hlt
dec
mov
mov
mov
xor
or
mov
insb
sub
lock
je
jnp
or
mov
add
das
cs
mov
pop
repz
mov
or
test
push
mov
xor
mov
je
ss
out
mov
out
fbld
sub
mov
hlt
inc
jae
in
sub
cmpsl
arpl
jecxz
inc
loopne
cmp
dec
cwtl
and
pushf
jns
out
inc
inc
sbb
jae
lea
inc
inc
pop
shll
push
imul
xchg
iret
arpl
lret
repz
sbbb
mov
cmp
push
imull
fsubr
jl
arpl
push
inc
pop
fimuls
sub
dec
fcompl
mov
xchg
mov
push
jnp
pop
push
gs
scas
pop
gs
ljmp
dec
dec
pop
pop
push
cltd
cmp
pop
nop
lea
test
insl
popf
lods
or
mov
mov
lcall
ljmp
xor
cltd
mov
notl
rorb
in
pop
xchg
lret
xor
mov
jb
pop
pushf
pop
inc
fwait
cmpl
xchg
fidivl
lock
sahf
aaa
dec
repz
orl
and
iret
and
sti
mov
and
add
ljmp
into
cli
fnstcw
rcrl
fstps
ret
add
popa
ds
rclb
sub
inc
mov
inc
jns
scas
add
out
xchg
outsb
sbb
xor
ljmp
inc
mov
shr
ss
jg
pop
cltd
std
sarl
xchg
test
push
add
jle
cmp
jge
enter
mov
cmp
mov
mov
test
scas
fnsave
fmul
icebp
dec
mov
push
sahf
pop
out
cmpsl
testl
jle
push
cmc
or
lods
idivl
sub
cli
push
roll
jbe
pop
int3
mov
pusha
insl
je
push
lods
rol
gs
pop
push
cmp
popa
scas
fistps
js
mov
xchg
jle
jae
pop
cmp
aaa
js
cwtl
sub
scas
dec
jg
xchg
sub
pop
adc
int
dec
cmc
scas
cld
subl
pushl
dec
in
push
or
lahf
mov
sub
jae
aaa
les
add
pop
cmc
ds
xchg
nop
xchg
lcall
pop
pop
orb
int3
mov
ljmp
fldl
push
mov
push
and
dec
push
jbe
mov
movsb
ljmp
mov
fdivs
sub
aad
adc
dec
mov
adc
pop
mov
inc
ja
insl
sub
xor
cmp
add
mov
fstpt
sub
test
and
test
xor
push
mov
or
dec
es
popf
lods
fdivrl
mov
jne
sbb
xchg
push
push
mov
xchg
enter
mov
push
ljmp
jno
in
cmp
cmp
mov
pop
int
lret
lods
and
dec
xchg
dec
cmc
imul
mov
mov
imul
lods
add
pop
fincstp
sub
scas
test
mov
cmp
negl
mov
es
adc
ljmp
cwtl
es
add
ss
push
xor
mov
push
ljmp
repnz
int3
xor
addr16
mov
bound
out
pop
adc
ret
or
std
sbb
adc
xchg
xchg
mov
adc
pop
sub
sub
and
pusha
push
je
shrl
loope
fmull
icebp
mov
popa
sbb
sahf
bound
jne
and
mov
xchg
in
sub
inc
data16
mov
and
xor
ret
repz
add
aas
scas
cmc
in
movsl
push
aad
inc
and
enter
pop
pop
ret
mov
push
jae
les
mov
bound
push
mov
loop
sub
int
or
sub
mov
mov
sbb
add
mov
pop
out
fwait
jge
mov
adc
mov
fstpl
aad
andb
test
dec
adc
mov
mov
jl
inc
dec
pusha
idivl
cmpsb
sbb
repz
cmp
inc
inc
fstl
dec
addr16
nop
rclb
add
enter
mov
pop
in
or
jmp
and
pop
insl
mov
pop
adc
out
add
inc
jbe
lock
lods
mov
xor
out
lahf
dec
sahf
in
xor
call
fwait
mov
mov
adc
inc
add
pop
hlt
je
xchg
iret
hlt
popf
mov
push
jmp
push
push
xchg
test
inc
push
stc
pop
add
fbstp
pop
into
inc
and
lock
daa
cmp
xchg
pop
adc
xchg
loopne
sahf
adc
sbb
sar
push
mov
test
lods
and
lret
or
xchg
popl
sahf
mov
stos
xor
ret
inc
aad
pop
nop
xchg
rcll
ret
rorl
xor
lods
stos
and
push
mov
cltd
mov
xor
mov
inc
sbb
pop
out
lods
inc
pop
shll
cli
lret
enter
pusha
shrl
imul
mov
cmp
xlat
adcl
push
lret
mov
out
sbb
jnp
xor
cwtl
out
xor
fwait
mov
ret
rcrl
subl
jae
push
jge
push
cmp
stos
xchg
outsb
clc
ret
or
mov
iret
nop
ss
sub
in
inc
dec
rolb
ds
pop
loopne
iret
in
sub
iret
imull
pop
or
sti
mov
push
inc
int3
fsts
in
push
negb
or
in
clc
pop
and
shufps
xor
add
add
nop
int3
jl
andl
cmp
stos
lds
and
shll
ret
cmp
gs
dec
mov
icebp
push
dec
gs
pop
inc
push
sbb
loope
mov
les
mov
rorb
pop
ljmp
push
inc
stos
test
or
movsl
sbb
pop
xchg
incb
sahf
mov
and
adc
lcall
jecxz
out
sub
nop
fiadds
loop
xor
ret
loope
or
cmp
sti
dec
js
pop
fst
mov
cmp
in
mov
mov
pop
es
or
sub
push
jl
inc
xchg
dec
inc
pushl
in
xlat
cmp
jecxz
inc
enter
mov
pop
aas
aas
or
cs
pushf
aas
pop
jecxz
pop
pop
popa
aas
or
adc
enter
mov
out
shrb
sbb
xor
loop
push
xor
lds
int
clc
push
mov
decb
xor
xor
scas
dec
enter
insl
outsl
dec
sbb
scas
aaa
mov
jl
stc
or
mov
inc
cmpb
stos
pop
jp
stos
mov
mov
std
mov
xchg
lods
pop
mov
mov
mov
arpl
aas
aaa
ret
xchg
mov
lret
rol
cmpl
pop
lods
add
jo
neg
stos
jbe
inc
jmp
imul
lods
xor
adc
jno
mov
sub
int
mov
push
lock
iret
or
xchg
adc
inc
mov
inc
xchg
stos
jl
adc
mov
and
lahf
or
jbe
iret
sbbb
mov
xor
neg
lock
xor
xchg
dec
inc
out
xchg
fucomi
into
enter
mov
addl
xor
fdivrl
lret
test
sbb
mov
cmp
imul
xor
cmpsb
push
inc
xchg
inc
fidivs
addr16
enter
xchg
jmp
xor
cmp
jecxz
enter
xchg
pop
icebp
ret
cmpsb
push
jecxz
and
icebp
xor
jo
adc
cmpsl
movsb
arpl
jg
cmp
mov
nop
jnp
cmp
fcoml
orb
negb
inc
fs
repnz
inc
gs
cmpsl
movsb
ds
int
mov
lds
xlat
xchg
test
scas
bt
mov
shll
xor
lods
fwait
popa
fcoml
and
push
push
mov
shrb
pushf
outsl
lods
data16
pop
rcl
les
inc
pop
cmp
push
stos
xchg
fs
leave
xor
cld
pop
or
jmp
push
jo
mov
mov
cmp
sbb
rorb
hlt
cld
lods
negl
in
stos
adc
lds
loope
fwait
test
inc
sbb
pop
ret
lds
sbb
mov
dec
insl
jg
fimuls
push
aad
dec
mov
pop
push
gs
rcll
xchg
jb
mov
jecxz
add
push
add
es
and
push
test
gs
xchg
in
dec
cmp
ja
out
movb
mov
cmp
inc
fsub
mov
in
pop
push
repz
adc
dec
push
negl
mov
xchg
dec
jo
cwtl
decb
subb
cmc
lock
push
mov
dec
push
sti
into
mov
xchg
roll
jge
int
push
addr16
scas
xlat
sti
fcoms
ret
jne
dec
push
in
aaa
int3
cmc
adc
fstpl
cmp
dec
pushf
scas
push
out
push
or
aas
dec
dec
sub
subl
lock
cmp
sbb
sbb
mov
mov
fimuls
rep
jae
popf
stos
icebp
mov
pop
cwtl
loop
xchg
js
mov
mov
jp
sub
and
fcoml
adc
out
fisubl
sub
sbbb
xor
mov
or
ret
mov
arpl
xor
loopne
data16
aad
push
ljmp
out
outsb
sahf
sub
inc
inc
lock
ficoms
lahf
dec
mov
inc
out
ds
stos
or
mov
sub
lret
add
out
mov
cmpsb
mov
adc
lahf
enter
and
add
pop
jne
in
popl
ret
cltd
or
arpl
mov
mov
fneni(8087
push
test
stos
xchg
cs
jno
imul
dec
loop
ds
std
jne
popf
xor
mov
sbb
in
popa
add
rclb
lea
in
xorb
addr16
jae
adc
cmp
adcb
pop
adc
pushf
mov
aas
dec
add
mov
mov
or
clc
xchg
cmpl
jb
in
dec
lret
and
inc
insb
lds
cmpsl
jl
mov
xlat
add
xchg
add
mov
js
add
cmp
lret
pop
out
inc
icebp
adc
pop
movsl
data16
push
adc
fdivs
int3
mov
xlat
fs
mov
mov
push
sbb
sbb
mov
js
nop
push
xchg
insb
xlat
push
mov
pop
repz
push
or
adc
sbb
cltd
jb
push
mov
sbb
push
and
adc
fbld
xor
les
test
sub
sbb
xor
lret
lret
sbb
push
and
rorb
dec
cs
add
shrl
outsb
xor
mov
in
out
pop
xchg
adc
xchg
ret
sbb
or
je
sbb
fildl
add
xlat
sub
and
mov
xor
cmp
mov
imul
ficomps
lock
inc
inc
pushf
xor
sub
and
lock
pop
movsb
jno
add
mov
cmp
test
les
jno
movsl
ljmp
mov
pusha
dec
inc
les
inc
daa
jbe
cld
in
jmp
movsb
xchg
and
jnp
add
push
in
call
dec
mov
and
repnz
pop
out
cmc
mov
cmp
mov
loop
xor
rorl
inc
clc
mov
incl
scas
es
pop
jns
xchg
ret
ret
outsl
pop
repz
iret
xchg
into
adc
iret
push
mov
add
js
test
imul
push
cs
sbb
lock
dec
loop
loope
sub
mov
mov
out
dec
fwait
outsb
ljmp
sbbl
dec
push
pop
dec
out
cwtl
ret
imul
inc
pop
jae
pusha
frndint
imul
pop
jae
fdivrs
mov
pop
int
inc
jmp
les
xor
stc
aad
xor
repz
cmp
rolb
out
imul
mov
cmp
fidivrs
pusha
mov
inc
hlt
cs
popf
cwtl
dec
lcallw
lret
and
and
leave
mov
cltd
cli
jne
inc
pop
fbld
pop
decb
mov
mov
sarb
or
insb
out
mov
and
inc
imul
movsl
arpl
lods
mov
cmc
mov
and
es
xchg
adc
stos
sbbb
push
repz
inc
pop
fdivl
test
mov
push
jecxz
adc
das
xor
lods
daa
fwait
clc
fstpl
xor
inc
xor
jno
loopne
aaa
pushf
xchg
das
std
fbld
cmp
loop
add
xchg
ds
notb
add
pop
dec
fdivrl
lret
sarl
add
mov
divb
scas
repnz
js
cmc
test
in
aad
in
rol
and
cmp
rorl
sub
pop
loope
fisubs
mov
pop
mov
pop
adc
fistpl
pop
add
jno
sahf
addr16
mov
push
fst
dec
test
ljmp
cmp
jecxz
scas
imul
jo
dec
shll
adcb
int
scas
inc
aad
cmp
imul
push
movsl
sub
outsb
cmp
pop
cld
push
lret
cmp
dec
inc
jmp
insb
pop
and
push
and
cmp
mov
test
shl
inc
mov
push
xchg
stos
push
jbe
mov
test
dec
mov
loop
call
movsb
or
adc
mov
hlt
adc
cs
push
int3
imul
xor
lds
rcrl
ret
dec
mov
sub
inc
lock
and
and
shr
insl
add
mov
mov
sub
xor
jl
cmpsb
sti
lock
adc
sti
and
xor
pop
sub
stos
popf
cmp
dec
inc
lcall
inc
lods
inc
push
push
adc
jge
in
sahf
jne
clc
xor
in
jmp
out
int3
push
rolb
push
fsubs
xor
mov
mov
xchg
mov
insl
inc
out
inc
sbb
push
shll
lods
mul
enter
test
jp
in
mov
fcmovb
cmp
xor
or
adc
or
sti
sbb
and
mov
xchg
das
movsl
stos
dec
jg
mov
or
and
int
xchg
sahf
dec
in
iret
fwait
cmp
cmp
add
aam
and
shl
bound
add
notl
call
in
out
cltd
xabort
mov
mov
shlb
in
adc
insl
sbb
cltd
xor
mov
aaa
mov
hlt
push
xchg
pop
ret
mov
scas
inc
jo
js
add
sar
leave
jmp
fwait
stc
enter
loope
pop
lcall
fmuls
int3
adcl
xchg
mov
dec
mov
jecxz
jne
add
cmpsl
out
imul
out
loopne
outsb
rolb
imul
loopne
inc
add
add
jbe
mov
cmp
sbbl
add
jae
xor
out
xchg
push
mov
cmp
mov
dec
cmp
inc
out
loopne
mov
jb
inc
cmc
cmp
sarl
mov
jo
mov
adcb
xor
push
pop
pop
cmp
aaa
inc
pusha
add
dec
scas
cmpl
and
lret
in
faddl
and
pop
loopne
mov
dec
or
adc
dec
push
pop
or
aam
mov
jb
out
or
mov
jp
inc
and
mov
jnp
fwait
sbb
adc
leave
xor
ss
inc
repz
lods
xorb
sbb
and
xchg
pop
cmp
mov
and
jg
subl
in
lods
inc
mov
jne
movsl
mov
out
shll
cmp
and
xor
jle
xor
jmp
adcb
pop
sub
cmpsb
call
cmp
dec
in
and
push
jae
mov
lahf
mov
pop
lea
out
fsubr
lods
aam
sub
cmp
pop
addl
xchg
call
pop
out
pop
mov
aad
mov
pop
into
leave
cmp
push
aam
imul
dec
adc
pop
and
std
lret
sbb
dec
mov
cmp
repz
or
or
adc
leave
fcoms
push
aad
cmpsl
push
sbb
jecxz
mov
sbb
mov
cmp
dec
cltd
fs
sarb
popf
push
mov
jnp
outsb
pop
iret
fldl
mov
pop
in
jp
or
inc
push
mov
xor
fldl
mov
int3
xor
cmp
sub
sub
push
loop
loop
int3
xchg
aad
push
adc
add
or
jno
jns
push
jbe
cs
xchg
mov
jle
jno
sub
sbbb
sti
leave
jae
sar
xchg
ret
dec
fisubs
jmp
ss
jno
adc
push
pushf
jl
xchg
mov
scas
fldl
into
gs
insl
repnz
and
mov
inc
mov
stos
add
clc
or
fnstsw
push
insl
sbb
mov
push
or
jae
shrb
push
pop
mov
stos
loope
ds
adc
pop
mov
orb
dec
popa
lds
imulb
push
adc
and
dec
push
jae
iret
das
jb
push
push
pop
jb
dec
cli
flds
aaa
inc
add
pop
and
or
stos
jbe
ds
or
and
cmpb
int3
test
mov
cwtl
sub
push
pusha
push
adc
xor
popa
test
or
cmp
frstor
mov
sbb
scas
fisubrl
pop
loope
mov
orb
dec
fadds
loopne
or
outsl
fsubs
out
nop
adc
in
mov
fisttpll
inc
js
rcr
test
add
jbe
or
push
daa
jle
daa
loopne
cmpsb
jecxz
xchg
in
enter
push
js
mov
loope
out
hlt
pop
pusha
jb
sub
shl
mov
cltd
mov
dec
adc
adc
addb
and
sbb
int
mov
inc
inc
add
push
sarl
cmp
je
xlat
mov
jmp
sbb
out
ds
js
lahf
adcl
push
jne
ja
repnz
xchg
popf
jmp
xor
jle
add
sbbb
repnz
mov
and
xchg
mov
mov
pop
adc
inc
jmp
mov
push
out
push
mov
lock
jns
or
jmp
and
xlat
int3
cmpsl
push
movsb
xor
aad
lods
pop
clc
xchg
lods
sub
addr16
push
cwtl
fimull
test
xchg
in
xchg
psraw
fs
cmp
pop
jg
push
std
pop
fsubrp
outsl
fsubr
dec
in
inc
ficoml
sbb
fidivrs
pushf
inc
inc
nop
xor
push
outsl
mov
movsb
pop
std
lods
mov
dec
cltd
sar
cmc
add
fs
mov
jns
mov
sub
push
lods
inc
jb
fildll
fisubrl
leave
pusha
xor
das
cwtl
jnp
dec
mov
add
mov
adc
inc
cwtl
add
mov
notl
sub
leave
and
xlat
lea
stos
mov
pop
cmpsb
cmp
es
les
inc
fsubrs
out
push
adc
mov
sub
cmp
xchg
lret
cld
adc
pop
jo
dec
dec
pop
mov
xor
in
pop
js
lret
je
aaa
jp
inc
fcoms
ss
fisttpl
sub
mov
in
sub
stc
pop
adc
mov
adc
bound
mov
inc
inc
out
mov
fmul
in
sub
jge
jb
sbbl
inc
addr16
jb
sbb
pop
arpl
pusha
mov
mov
xchg
pop
xchg
pop
mov
jmp
mov
xor
sbb
inc
cmpl
lea
xor
push
call
xchg
add
sub
adc
test
push
cmpsl
dec
scas
sub
jecxz
pop
xlat
sahf
push
xchg
sub
cmp
jecxz
pop
das
mov
in
push
sub
mov
xor
jecxz
mov
add
pop
fisubl
jb
popf
push
mov
mov
ret
dec
in
out
scas
push
clc
sbb
int3
sbb
icebp
scas
push
int
inc
jno
inc
mov
int
hlt
loopne
push
cld
xor
xchg
sti
cmp
add
xchg
sbb
shrb
sub
lods
popf
mov
inc
xchg
mov
sti
pusha
mov
add
or
fldcw
stos
movsb
push
adc
xchg
jnp
pop
add
dec
and
sbb
out
inc
das
shl
shll
jmp
orb
mov
pop
mov
mov
cmp
pop
inc
outsb
inc
jle
add
xchg
xchg
pop
rcrb
movsl
lcall
sbb
test
mov
aas
dec
xchg
cmp
push
dec
push
mov
pop
jnp
or
jp
xchg
lock
sub
mov
xor
sbb
add
xor
pusha
or
xchg
adc
xchg
lret
lret
jne
mov
outsw
mov
loope
xlat
loopne
jnp
repz
pusha
mov
daa
testb
add
and
aaa
mov
fildl
lock
ret
jmp
pop
dec
mov
movsl
and
jl
lds
fisubrl
jae
mov
out
push
nop
cmp
pop
add
cmp
adc
test
or
xor
sbb
outsl
loop
mov
push
mov
mov
xor
mov
push
sub
outsb
sbb
dec
push
mov
xor
mov
pop
dec
xchg
loop
xor
movsb
cmp
sbb
xchg
mov
sbb
insb
int3
rcrl
fsubrl
sbb
pop
jmp
pop
mov
push
stos
popa
fsubrs
jne
stc
or
ss
lret
stos
inc
lret
jle
out
pop
popa
dec
cmc
mov
push
data16
cmp
js
lea
cmp
punpckldq
int
cmpsl
push
mov
loop
pop
sub
pop
pop
movsb
les
sbb
scas
jmp
in
mov
mov
xchg
pop
rclb
scas
andb
or
mov
cwtl
xor
into
jb
imul
mov
fidivs
add
push
sti
or
jne
lds
and
cltd
adc
mov
push
notl
ret
and
lods
xlat
loope
test
cltd
loopne
fildll
psraw
xor
sub
sub
pusha
stos
xor
scas
popf
xor
fninit
testl
and
or
orl
and
xlat
sub
push
push
or
idiv
lahf
leave
pusha
rcll
shr
movsb
out
aad
dec
mov
out
cmp
scas
pop
stos
dec
shll
mov
imul
cmpl
shrb
scas
mov
xorl
jp
jmp
cmp
jae
cmp
jge
mov
lret
jb
jne
cmp
jecxz
sbbb
cmp
xor
mov
sub
push
ja
outsl
mov
loopne
jmp
daa
lods
dec
loopne
and
mov
mov
fisubl
imull
lock
jnp
add
xchg
sti
sub
rclb
lret
push
sub
xlat
out
push
aaa
push
and
xor
mov
je
lret
jno
enter
mov
inc
push
sub
xlat
mov
int3
into
pop
push
mov
jne
xchg
loopne
cmp
neg
shlb
mov
sarb
lea
xchg
jle
sahf
mov
inc
inc
dec
cmp
jbe
or
xor
mov
into
out
mov
add
adc
rcll
mov
fiaddl
fwait
je
test
das
xor
shrb
dec
fldcw
rcrl
lods
mov
pop
inc
mov
ljmp
jbe
jo
push
mov
cmp
testb
loope
insl
je
cmp
lahf
inc
inc
stc
xor
cmp
mov
arpl
xor
jnp
mov
nop
imul
fildl
mov
mov
and
fstpt
xchg
mov
movsb
mov
rcrb
lds
xor
bound
mov
fimuls
and
loope
fistl
xorb
cmp
jo
pop
mov
cmp
aad
loope,pt
xchg
cwtl
inc
mov
sub
fstl
ja
pop
or
popl
arpl
rcrl
es
push
scas
sub
inc
push
loopne
into
faddl
ret
pop
mov
push
adc
dec
es
pushf
call
lret
rol
jae
into
pop
aad
jle
push
ficompl
iret
stc
je
mov
sub
insb
jb
sbb
mov
sbb
add
mov
mov
fiadds
xchg
mov
jmp
sbb
je
out
stos
arpl
call
or
fdivrs
xchg
xor
faddl
out
cmpsb
in
pop
adc
dec
cmp
aaa
fldcw
cmp
jecxz
movsb
jmp
into
test
xor
jns
icebp
push
push
or
add
pop
mov
imul
sbb
jg
inc
xor
cwtl
mov
data16
aam
mov
xchg
iret
xor
jbe
lret
push
lret
xchg
cmp
ret
push
xor
sub
jb
pushf
outsl
add
outsb
xor
shrb
fimuls
int3
or
jo
lock
mov
cmp
icebp
xchg
mov
push
mov
push
repz
sub
and
dec
mov
clc
int3
cmp
sub
or
inc
pop
cltd
test
in
sbb
js
leave
gs
nop
mov
loop
push
je
call
lock
les
lods
mov
and
dec
jp
movsb
mov
pop
xchg
js
cld
insl
ds
scas
add
andb
out
mov
mov
sbb
imul
xchg
jno
subb
rorl
mov
repnz
imul
andb
cmp
cwtl
daa
out
cmpsl
or
sub
and
mov
cmpsb
jmp
stos
inc
xlat
xchg
sbb
or
imul
push
test
in
pop
into
and
xor
cltd
mov
fsubr
std
dec
arpl
push
mov
js
icebp
mov
outsl
sub
outsl
xchg
cltd
mov
je
xchg
into
movsl
xchg
les
pop
xchg
sbb
sbb
mov
mov
mov
adc
adc
mov
mov
xor
loope
push
inc
mov
cmp
mov
aas
ret
adc
push
aad
xchg
pop
imul
dec
mov
out
xchg
mov
or
dec
std
jne
cmpsl
addr16
lods
ret
mov
fnstenv
mov
jg
stos
mov
cmpsw
cmp
adc
das
push
movsb
pop
sahf
pop
aaa
sub
inc
and
inc
int3
ret
pop
scas
sub
test
shrb
stc
outsl
pusha
lahf
imul
mov
arpl
cmp
hlt
hlt
adc
and
shrl
sub
mov
out
cmpsl
inc
mov
fadds
xchg
sbb
pushf
call
mov
inc
pop
inc
mov
pop
fsts
fwait
pop
jnp
insl
mov
bound
jnp
rol
lret
hlt
movsb
fbstp
repnz
in
xor
test
data16
inc
push
xchg
hlt
dec
arpl
stos
test
mov
adc
jle
and
es
fisubrs
testl
or
inc
addr16
ja
add
test
fbstp
imul
jo
adc
and
dec
ds
dec
mov
movsb
mov
popa
mov
mov
stos
shll
xchg
stos
scas
fstl
add
pop
sub
push
pop
mov
dec
nop
jbe
xor
mov
mov
push
je
cltd
movsb
pop
pop
test
push
nop
mov
flds
mov
aam
fldl
mov
fstpt
xlat
icebp
sarb
sahf
adc
in
fwait
data16
fmul
xchg
xlat
ret
prefetcht0
dec
scas
out
add
cmp
mov
jmp
movsl
jge
sub
inc
mov
shrl
mov
cmpsb
les
out
mov
test
mov
mov
pop
lds
fiaddl
subl
outsb
jl
repz
outsb
hlt
clc
flds
nop
xor
test
xor
pop
cmp
lock
ja
xchg
add
mov
jg
lods
jp
pushf
and
int
cmp
popa
ljmp
imull
mov
cmp
imul
daa
mov
xchg
push
jo
mov
cld
sub
sub
int
push
fs
loopne
lahf
xorl
jnp
dec
imul
sarl
rclb
push
nop
icebp
mov
xlat
cltd
inc
stc
popf
out
mov
aas
pop
popf
sbb
or
and
cmp
cs
mov
pop
dec
clc
add
xor
lds
cwtl
jno
and
aaa
jbe
leave
push
mov
in
xor
mov
pushf
xor
or
xchg
pusha
in
cld
test
rolb
add
mov
lret
mov
inc
xchg
or
xor
nop
push
pop
inc
xchg
sbb
jbe
mov
mov
mov
fwait
rcrb
cltd
outsl
insl
out
dec
rorl
out
jp
jnp
cmp
ja
jge
cmp
repnz
stc
ja
push
jno
out
xor
popl
nop
inc
sbbl
shl
mov
adc
jno
xchg
mov
sbb
sbb
dec
repnz
mov
ljmp
clc
outsb
lret
mov
or
popa
stc
fsubp
scas
push
mov
mov
inc
jmp
mov
pusha
inc
test
orb
xlat
inc
lods
pop
xchg
mov
and
mov
repz
inc
dec
add
rcll
mov
in
push
inc
test
test
rcrb
stc
outsl
lods
lahf
clc
addr16
es
mov
into
outsl
sbb
ljmp
pushf
mov
repz
and
mov
sbb
je
out
test
aas
pop
inc
in
subb
cmp
stos
jne
loopne
cltd
add
mov
jmp
adc
in
scas
lea
out
push
jne
or
jp
lret
inc
das
inc
or
jbe
lret
mov
or
jp
mov
aad
xor
jmp
pop
push
call
in
scas
dec
fs
mov
fldl
mov
popa
adc
imul
cmp
adc
repz
or
xchg
ret
cld
fildll
pop
xor
aas
je
jno
and
mov
adc
xchg
sub
ja
movsb
vmovsd
jb
mov
adcb
xlat
cmpsl
xchg
pusha
pop
inc
rorl
lret
insb
inc
adc
add
orb
dec
shll
daa
fcompl
orl
fnsave
js
mov
pop
test
mov
js
mov
aaa
jge
cmp
sub
cmp
sub
lock
mov
mov
ret
daa
aad
pop
cld
int3
aaa
cmp
fisubrs
xchg
sbb
fistpl
pop
cltd
and
into
jp
cmp
or
sub
push
fcmovnbe
xchg
sub
out
testb
or
ret
enter
xchg
pop
push
or
pusha
push
push
icebp
inc
lods
inc
xor
stos
test
adc
incb
cmp
sub
push
js
aas
popa
cltd
ret
xchg
inc
clc
adc
jg
or
pop
pop
pop
jns
jae
cmp
cs
push
lea
or
xchg
rcrl
ljmp
push
jne
xor
mov
pop
xlat
lods
inc
push
pop
clc
mov
lea
adc
xchg
lea
xor
je
and
inc
xchg
xor
adc
in
repz
das
or
jge
jl
sbb
testb
xlat
or
sbb
xor
mov
fistl
or
dec
jecxz
ret
inc
xchg
jo
jmp
and
pop
idivb
shrb
dec
and
cmp
cwtl
adc
mov
pop
iret
mov
push
inc
shlb
movsl
out
das
push
add
sbb
or
mov
inc
xchg
xchg
or
push
push
aaa
sbb
cld
pop
dec
sub
bound
popf
mov
pop
test
xchg
clc
aas
rcl
adcl
or
xchg
inc
es
shlb
push
movsb
xchg
in
ret
lds
adc
imul
inc
les
insl
sub
cmp
in
mov
xlat
clc
pop
push
lea
mov
mov
or
inc
out
arpl
fs
test
xchg
xchg
jge
fwait
or
dec
mov
mov
push
adc
into
es
adc
cltd
push
xor
cmpl
mov
dec
roll
shrb
sbb
adc
hlt
test
lods
imul
movsb
xchg
or
add
je
ljmp
scas
fidivrl
inc
scas
cmp
mul
pop
dec
loop
push
xchg
add
xchg
mov
pop
sub
cwtl
sub
or
mov
jae
pop
push
aas
inc
ret
mov
push
ret
and
in
mov
and
imul
and
std
lea
mov
fdivl
xor
fwait
push
inc
sti
cmp
dec
stc
mov
gs
lods
cmp
negb
sub
notb
add
push
cmp
mov
shlb
lahf
shll
xor
dec
inc
push
jne
inc
cltd
jns
stos
lds
sbb
mov
and
adc
push
jns
call
rcrb
adc
fcomps
adc
pushf
sbb
mov
jnp
jmp
add
test
jno
test
mov
shll
sub
bound
and
inc
gs
push
xlat
cmovae
xchg
pop
adc
lods
mov
xchg
pop
dec
lods
mov
adc
sbbb
cmp
sahf
aas
mov
jno,pn
mov
xchg
jbe
push
pop
mov
lock
ljmp
add
aaa
jb
jnp
mov
cmp
ss
push
jecxz
loopne
in
add
in
sahf
dec
into
bound
dec
or
bnd
mov
pop
data16
dec
arpl
push
in
arpl
inc
lods
lea
ljmp
adc
sbbl
inc
sub
imul
mov
mov
cmp
cli
inc
cmp
fldl
jg
mov
push
outsb
fmul
jae
pop
ss
data16
test
lods
cmp
fnstenv
xor
xchg
push
fdivrl
sub
and
pop
and
outsl
aam
jl
or
xchg
xchg
sbb
xor
loop
inc
repnz
mov
dec
pop
adc
aas
push
mov
sti
leave
push
insl
mov
lods
loope
fisubs
lods
sub
xor
or
pop
pop
xor
mov
iret
popw
aad
in
gs
jne
cld
cmp
inc
inc
cmp
xor
fldcw
mov
in
mov
mov
popa
shrb
aas
test
aad
add
and
enter
sti
mov
aam
cmpl
subl
add
gs
xor
test
dec
mov
stc
outsb
push
xor
shrl
jo
fs
mov
outsb
cmpl
out
dec
out
jno
cmp
jle
loop
pop
inc
pushf
subb
mov
rorb
mov
negb
cmpsl
sbb
les
fmull
or
push
insl
mov
inc
inc
mov
lds
es
repnz
jle
adc
hlt
inc
xor
gs
push
in
push
fistps
fwait
dec
into
push
or
call
movsb
rorb
adc
xor
or
stc
pop
adc
rcrb
es
data16
ja
test
mov
mov
add
pop
xorb
jnp
in
sbb
cli
sbb
xorb
hlt
xchg
cmp
xchg
xchg
or
lea
push
leave
xchg
and
in
adc
cmp
jp
test
aad
in
jle
sarb
cli
xor
dec
pop
adc
mov
push
repnz
mov
out
cmp
pop
test
cmp
ja
mov
jno
dec
mov
xor
mov
adc
loopne
iret
fs
xchg
add
mov
and
mov
jb
sahf
mov
pushf
es
ja
xchg
jnp
mov
fucomi
sub
and
sub
xor
out
push
aas
outsb
jne
xchg
add
movsl
mov
out
sbb
cld
inc
mov
xchg
bound
adc
jle
ja
push
mov
xlat
stos
lret
sbb
xchg
loope
xchg
jmp
jo
pop
or
jge
lds
out
mov
mov
pop
in
mov
in
cltd
xor
ret
ret
in
fistps
jl
add
pop
adcb
or
mov
fisubs
scas
shl
sbb
fs
movsb
repnz
or
push
leave
lea
sub
lea
sub
icebp
mov
push
decb
and
cmp
and
lcall
stos
add
sub
mov
sub
cmp
clc
mov
xchg
mov
lret
hlt
shrb
and
vmread
outsl
jnp
sarb
jge
fdivrs
daa
or
mov
mov
mov
and
inc
pop
mov
xchg
pop
inc
push
movsl
xor
sub
inc
mov
outsb
adc
push
xchg
xor
pop
rclb
mov
inc
fimuls
push
insl
clc
xlat
sub
fiaddl
xlat
dec
xor
mov
cmpsb
xor
and
call
clc
addr16
sub
mov
add
test
clc
xchg
scas
add
push
cmpsl
push
push
mov
fs
scas
inc
inc
test
sbb
jo
inc
scas
pop
and
mov
pop
dec
aas
mov
mov
decb
ficoml
das
xor
cmp
int
lcall
push
stos
inc
lods
sti
xchg
mov
fstpl
add
fwait
scas
fiadds
add
pop
and
ret
push
je
push
fwait
ds
fisubl
push
pop
in
push
mov
popa
mov
sti
cmp
pop
adc
mov
fwait
mov
daa
pop
dec
dec
int3
bnd
sbb
cmp
fwait
les
insb
xor
es
pop
in
xchg
pusha
cmp
sub
push
in
mov
sub
ja
aam
pop
push
sub
and
pop
dec
mov
rcrl
xchg
or
jg
mov
ss
jle
mov
sbb
sub
xchg
loope
mov
xor
mov
or
and
xor
dec
jmp
or
pop
jnp
mov
scas
add
adc
inc
call
test
fwait
movl
movsl
mov
leave
nop
lods
repnz
mov
test
scas
xor
or
into
cmp
les
push
out
fwait
inc
dec
enter
sbb
aaa
jb
inc
jb
outsl
add
dec
mov
or
repnz
xchg
inc
movsl
std
push
jecxz
pop
lcall
in
cmp
lds
jmp
jae
aas
into
aaa
adc
push
cmp
imul
movsb
int3
cmpsl
hlt
jl
add
cld
dec
pop
rorb
out
pop
fninit
mov
gs
add
cmpsb
jns
mov
or
inc
out
sub
scas
or
movsl
lds
loop
add
fwait
push
mov
movsl
ja
scas
lods
repnz
addl
jl
sbb
adc
ds
push
lahf
sub
or
es
jne
fwait
push
jg
sbb
icebp
decb
and
lahf
test
das
xorb
sarl
inc
push
cmp
fs
cli
pop
scas
push
jp
mov
fwait
cltd
stos
inc
in
sbb
popf
adc
and
imul
xchg
icebp
scas
and
sahf
push
inc
rol
jge
push
mov
or
or
out
mov
mov
in
ret
sbb
mov
leave
jmp
and
sub
sbb
ss
cmc
ss
mov
jle
jl
fs
and
inc
dec
into
xchg
or
jle
stc
pop
adc
or
popa
jge
int3
fsubrs
imul
repnz
je
shr
inc
inc
out
dec
in
lods
cmpsb
loope
sub
aam
aaa
pop
pcmpgtd
cmp
imul
les
mov
or
xor
mov
lock
add
arpl
test
push
jle
pop
das
fidivrl
test
push
ljmp
jno
in
xchg
repnz
pushf
mov
mov
jecxz
pop
push
cmc
push
sub
int
stc
ja
shll
std
mov
fisttps
roll
xchg
lcall
mov
scas
test
cmp
das
pop
or
adc
movsl
cmp
xchg
enter
push
jmp
jae
ljmp
push
in
sub
pop
pop
js
dec
xor
pop
cmp
out
filds
sbb
clc
movsb
pop
mov
push
fsubrp
inc
lsl
push
test
es
xor
pop
add
scas
mov
test
sbb
jmp
sub
jns
and
lods
out
add
jb
cs
xor
popf
jo
sbb
in
inc
jo
jae
outsb
inc
shrl
mov
or
aam
adc
lret
xor
iret
xor
cltd
jecxz
into
mov
sub
aam
pop
jnp
jge
pop
cmp
int
imul
jne
jge
cmp
and
and
inc
xchg
divb
dec
inc
jbe
cmpb
mov
add
popf
imul
sub
mov
pop
testb
mov
int3
pop
std
xor
shll
pop
ds
movsl
xor
fs
adc
cld
stc
ds
sbb
into
mov
fistl
lock
jp
push
rclb
xor
dec
pushf
cli
push
and
inc
sbb
vpunpckhqdq
divl
faddl
lds
std
or
xchg
dec
cmp
add
stos
push
adc
or
pop
sub
xorb
pop
inc
in
divb
inc
lret
icebp
mov
sbb
cmpsb
mov
jecxz
aaa
into
adc
or
cli
pop
roll
aad
add
pop
out
xor
loopne
rcll
xor
subb
mulb
orb
add
clc
sbb
cmpsb
lock
in
xchg
xor
cmp
jno
push
lods
out
xchg
scas
adc
fldenv
mov
gs
and
mov
jg
and
mov
xchg
or
lcall
xchg
xchg
xchg
stos
adc
fdivl
sarb
into
pop
jp
add
push
aaa
dec
mov
sbb
sub
je
push
lcall
popa
aas
cli
frstor
in
and
fists
mov
mov
xor
sbb
sub
je
pusha
push
pushf
push
or
sahf
cld
mov
adc
out
adcl
or
mov
fucomp
cmc
or
mov
lea
cmp
inc
mov
movsb
lock
xchg
popa
sbb
mov
and
pop
mov
sub
pop
mov
dec
jecxz
shll
neg
inc
cmp
adc
addr16
in
je
push
push
jno
js
data16
xchg
or
xchg
data16
push
lea
lds
rclb
popf
daa
and
std
cltd
je
push
stos
mov
stos
xor
and
test
pop
je
addr16
xchg
push
xchg
fcompl
add
mov
lcall
ljmp
push
mov
in
inc
sbb
fcmovne
jbe
fwait
fs
imul
xchg
push
xor
das
xor
xchg
mov
int3
lock
cmc
stos
in
adc
mov
addr16
sbb
sub
xor
jb
lock
es
mov
out
test
lods
in
adc
arpl
sbb
scas
add
sub
je
mov
add
pop
sub
add
in
dec
jle
jnp
and
xor
push
push
push
fidivrs
fs
xchg
ret
into
xor
jne
push
mov
fwait
inc
pop
add
loop
mov
ret
ja
cli
sbb
xor
cld
sub
data16
les
cmp
arpl
xchg
xor
and
sub
ljmp
cmpsl
xchg
hlt
pop
jmp
xchg
sti
xor
sbb
cmpsb
ljmp
lret
xlat
sarb
and
pop
mov
fs
mov
pop
ja
pop
pop
push
stos
loopne
in
cmp
inc
inc
or
xor
iret
cld
and
xor
das
mov
loopne
stc
les
lea
pop
shlb
stos
adcl
out
sub
pop
fwait
in
outsb
jl
lcall
jg
rcrb
cltd
dec
cwtl
pop
xor
arpl
mov
inc
inc
mov
sub
pop
mov
mov
rorb
dec
dec
mov
sahf
imul
in
add
ds
call
mov
popf
xor
js
push
test
mov
pop
in
pop
mov
add
aam
fdivr
clc
test
inc
jecxz
pop
dec
sarl
xor
in
loop
push
test
std
sbb
ret
xlat
cmp
ret
pop
dec
mov
imul
hlt
dec
mov
sbb
gs
mov
pop
subl
jl
cmp
push
ret
jg
lret
mov
adc
mov
lcall
sahf
jmp
cwtl
pop
push
mov
movsb
out
movsb
mov
xchg
out
xchg
cltd
out
mov
stos
jne
fisubl
cmp
es
pop
mov
xchg
out
sbbl
push
sbb
mov
popf
jnp
mov
pop
fld
and
dec
jl
in
aaa
mov
loope
and
fmull
negl
loope
inc
in
sbbb
scas
push
adc
dec
js
cmp
xor
fsubs
cmp
jb
lock
inc
dec
fnstsw
jmp
cmp
aad
bound
mov
iret
popf
jb
sbb
jo
mov
xchg
jle
pop
jmp
dec
cwtl
cmp
push
or
cs
push
stos
test
repnz
fistps
ret
push
pop
push
out
pop
shlb
xor
dec
enter
mov
adc
push
or
xchg
cld
das
lcall
sub
lods
mov
xlat
xor
pop
rcr
xchg
fcomip
jnp
fs
lds
or
mov
movsb
movsl
add
loop
mov
xor
xchg
test
inc
mov
aaa
xor
rorl
jle
xor
ljmp
push
mov
mov
adc
aam
pop
popa
lahf
je
jp
cmp
negl
xor
loopne
sub
daa
inc
cwtl
loopne
hlt
mov
adc
jo
add
hlt
shrb
push
add
jb
movsl
jne
mov
and
ret
leave
and
dec
in
jp
scas
mov
push
jae
test
adc
cmpsb
sbb
jge
dec
sub
in
push
mov
std
movb
mov
out
cmp
mov
jp
sbb
cmpsl
mov
jno
cli
andl
and
cs
jbe
jp
sub
jo
mov
add
mov
xchg
js
dec
sub
rorb
les
mov
in
aam
ja
loop
xchg
xchg
call
and
inc
inc
lods
andb
test
bound
aad
cli
leave
movsl
shrb
jmp
pushf
mov
pop
sub
ds
loope
or
jl
nop
inc
dec
aad
aad
mov
xor
sar
popf
or
xor
push
cmp
jge
mov
cld
jbe
sub
lea
push
cmp
xlat
jmp
ds
iret
fdivs
cmp
fs
pusha
cltd
aam
and
pushl
or
xor
in
lahf
inc
out
ret
cli
repz
xlat
inc
les
clc
lcall
dec
out
and
lods
das
mov
pop
sub
sub
sub
push
jno
lods
and
push
fistl
sbb
xor
js
mov
cmpsl
sbb
fwait
dec
mov
dec
sub
and
jge
and
cmp
fldenv
mov
movsb
push
xor
insb
jl
push
push
push
jmp
xor
xchg
daa
add
int3
lods
inc
jns
dec
jmp
push
push
fwait
xor
inc
test
adc
xor
repnz
push
xchg
mov
rcrl
or
test
lahf
nop
out
xlat
les
inc
test
fdivl
movsb
cmp
sbb
ret
inc
ret
in
test
adc
sbb
adc
xor
jns
and
and
iret
outsl
xor
or
stos
mov
add
pop
push
orb
jl
sbb
sbb
test
ss
dec
call
pop
imulb
add
adc
mov
xchg
inc
stos
in
lahf
fadds
fdivr
lock
jmp
lahf
dec
xchg
les
int
or
sub
stos
es
cmp
mov
sub
inc
cwtl
bound
and
enter
insl
das
adcb
dec
sahf
xchg
stos
addr16
inc
stos
jg
rcrl
and
xor
cmpsb
test
lods
and
subb
cmc
cmp
mov
or
mov
push
lret
insl
mov
mov
pusha
pop
xchg
mov
scas
jnp
ss
ficompl
sbb
or
jae
out
in
push
sub
push
jmp
clc
mov
push
int
push
subps
jae
xor
xor
out
mov
sub
mov
addr16
leave
push
loope
test
ss
out
push
add
and
lea
push
pusha
fdivl
rolb
mov
or
push
pop
pop
push
jmp
jle
imul
inc
mov
cli
aad
aam
pop
iret
sub
mov
sub
sbb
xchg
or
dec
inc
fisubrl
add
shr
adc
hlt
pop
aas
mov
jo
jl
jne,pt
les
push
loopne
test
lahf
nop
mov
sahf
arpl
lods
icebp
test
jmp
lret
lret
push
mov
mov
repz
sahf
aad
add
js
sbb
jle
fisubrs
int3
or
cmp
fwait
shr
lds
fisttps
lea
aam
pop
cltd
popf
movsb
int
push
mov
xchg
out
push
dec
push
xchg
sbb
cmp
stos
push
cld
add
lds
dec
icebp
mov
cmp
xchg
inc
fstpt
mov
aam
or
push
sub
dec
inc
fidivrl
sarb
popa
adcl
popa
jg
push
push
inc
inc
aam
and
orb
sbb
jb
lcall
jmp
cmpsl
fwait
cmp
cmp
push
mov
adc
ret
pop
lcall
cwtl
stos
cltd
pop
fidivrs
mov
push
or
in
cmp
jmp
push
add
mov
mov
daa
outsl
imul
mov
mov
sub
loop
clc
or
dec
mov
decb
cmpsb
repnz
cmpsl
or
add
and
fmuls
jne
mov
rclb
adc
call
fucomp
jne
add
jbe
lret
scas
scas
xchg
sub
sub
popa
inc
out
test
add
xor
adc
sahf
lods
or
jge
jl
jecxz
jae
push
movsl
push
mov
and
xchg
sbbl
out
push
xchg
jge
sbb
mov
test
mov
loop
repnz
pusha
into
cmp
or
lods
and
scas
cmp
push
adc
popf
lods
adcb
adc
xor
xor
loope
mov
jbe
int3
cmp
mov
out
lret
andl
xchg
ss
pop
ljmp
pushf
jmp
in
cmp
ss
xor
rol
mov
push
xchg
mov
imul
dec
mov
cmp
daa
push
bound
lods
pop
or
mov
pushf
repnz
aas
jnp
popa
std
cmp
leave
sti
push
adc
or
jne
mov
xorl
jae
jg
xchg
inc
std
pop
es
or
pcmpgtd
or
out
cmp
fidivrs
sbb
pop
sub
test
or
mov
inc
adcl
loopne
insb
adc
mov
outsb
cmp
inc
cmpsl
sbb
mov
add
xchg
sub
dec
roll
dec
sbb
fwait
mov
sub
cpuid
cmp
test
dec
mov
jne
pop
test
push
sbb
add
divl
or
xchg
nop
xor
leave
mulb
mov
les
push
cmp
aad
fdivrs
add
fwait
sub
xchg
loop
call
pop
jle
fwait
add
mov
loope
pusha
adc
pop
icebp
jge
add
xchg
mov
out
cmp
and
xor
push
xchg
push
rorb
dec
outsl
incb
cmp
mov
inc
sbb
pop
and
xchg
cwtl
inc
mov
jecxz
sub
lahf
in
imul
aam
cltd
add
lcall
and
pop
jmp
fcmovne
sbb
repz
jle
sysexit
lods
ja
les
iret
cld
pop
js
addr16
subl
jecxz
push
lahf
mov
cltd
movsl
addb
int
push
inc
inc
cwtl
lock
inc
jnp
inc
imul
or
call
addr16
sbb
sti
test
add
push
clc
sub
negb
jae
pop
sahf
js
dec
ficoml
and
jno
inc
cwtl
das
lsl
inc
jbe
and
dec
aas
jns
mov
imul
dec
int3
and
jae
mov
lds
xchg
sbb
movsl
aad
sub
es
sti
inc
xor
movsl
jp
xchg
or
sahf
in
aam
fdivrl
cmpl
xor
add
and
inc
push
test
das
jo
mov
pusha
sbb
xchg
je
xchg
sbb
xchg
sub
sbb
fwait
enter
lahf
sub
aad
push
add
mov
push
dec
dec
out
pop
inc
out
dec
mov
or
jmp
popf
sbb
push
cmc
popf
popa
sahf
jns
in
daa
xchg
lcall
cmp
cmp
aad
movsb
mov
nop
out
test
mov
or
sahf
mov
in
repz
ds
dec
add
sbb
outsl
push
lods
lahf
dec
fucomp
fsubrl
subb
mov
int3
mov
and
fnsave
shrl
push
xchg
scas
ljmp
aam
js
movl
lea
sub
rcr
popa
inc
pop
faddp
add
adc
cmpsl
fsts
stc
adc
stos
ja
ds
push
mov
cltd
dec
and
pop
mov
sbb
xor
jg
sub
cmp
ret
jb
ret
insl
std
shlb
insl
pop
les
dec
jns
mov
adc
popa
ss
es
addb
mov
mov
push
scas
inc
mov
outsb
mov
rorl
push
lea
leave
shrb
add
mov
loopne
cmp
sub
pusha
dec
popf
pushf
scas
mov
pop
out
aam
mov
scas
pushl
xchg
or
outsl
xchg
mov
mov
cmpb
xorl
aad
jae
xor
jne
imulb
push
pop
lcall
sbb
lret
xchg
add
mov
and
test
gs
inc
xor
cld
push
mov
bound
xchg
pop
dec
inc
inc
out
jle
insl
pop
scas
cs
loopne
mov
sub
sbb
xchg
cld
fwait
sarb
xchg
cwtl
dec
add
cmp
push
jg
pushf
mov
or
pushf
outsl
lahf
cmpsl
adc
ja,pn
add
inc
pop
sbb
push
icebp
push
fsubrp
cmp
xor
test
cwtl
jns
dec
mov
xor
lods
popa
ss
ret
hlt
aas
mov
or
push
dec
out
lcall
jge
inc
stc
cmpsb
icebp
dec
stc
stos
fcompl
std
out
cli
mov
lock
rolb
mov
jno
movsb
and
xor
inc
outsl
mov
lock
jg
pop
inc
lret
data16
inc
lds
repnz
jo
test
aas
pop
cltd
add
xchg
in
pusha
sbb
lea
aam
scas
mov
xor
test
or
call
jmp
pop
sbb
add
addr16
cwtl
jl
pop
push
ret
movsb
icebp
fstps
lds
sub
xchg
testb
popa
adc
jbe
or
jns
adc
fmulp
sbb
pextrw
sub
imul
pop
cmp
xor
rorl
shrb
psrad
mov
sbb
rcrb
pop
mov
jo
iret
loope
cmp
mov
fs
loopne
lret
popa
cmpsb
incb
cli
sbb
sub
xchg
jo
ss
popa
mov
or
jle
movsb
pop
ds
sub
cli
and
mov
add
insl
mov
pop
mov
mul
mov
ja
mov
cmp
cmc
pop
loope
fdivr
pop
add
adc
jmp
mov
ljmp
pop
call
sbb
popa
test
mov
gs
fnstenv
push
cmp
mov
bound
mov
or
mov
push
or
xchg
xchg
gs
repz
stc
xchg
cmp
xchg
pop
or
push
fucomip
push
adc
sub
push
jno
fucomip
mov
fucomi
sub
mov
pop
xchg
sub
scas
lods
inc
sbb
cld
lret
leave
sub
mov
xchg
cld
aad
pop
repnz
cmpsl
push
rcl
mov
lret
jmp
icebp
inc
or
pop
push
in
jl
jb
push
sub
jae
adc
add
mov
scas
into
and
jns
mov
add
pop
mov
fnstcw
shr
push
mov
in
cmpsb
pushf
shrl
push
hlt
fidivrs
and
pop
cmp
dec
mov
ljmp
cmp
sbb
mov
pop
movsb
push
pop
or
mov
pop
movsl
lea
cmpsl
sub
hlt
pop
and
lds
push
js
jne
inc
iret
sbb
pop
push
inc
push
or
cmc
pop
push
lahf
xor
xchg
mov
fiadds
xchg
jg
inc
daa
fisttpll
lds
imul
sub
outsb
daa
pop
dec
or
jge
sub
jnp
scas
test
je
cltd
and
scas
sarb
data16
test
inc
sub
out
mov
out
or
jle
fisubrl
push
or
adc
into
movsl
rclb
jo
pop
leave
sbb
mov
inc
jns
je
mov
push
call
pop
rsqrtps
dec
mov
fmull
mov
pop
imul
sti
fsubrl
inc
xor
jb
bound
jmp
cltd
push
subb
xchg
fnstsw
or
mov
and
add
xor
mov
mov
push
hlt
lahf
js
inc
pusha
mov
out
mov
repnz
aas
fisubs
add
push
testl
fmul
jg
or
out
aas
dec
ljmp
negb
lret
push
xorps
xchg
mov
mov
hlt
stos
outsb
sub
movsl
cmp
out
in
inc
in
hlt
and
sti
js
subb
clc
push
mov
dec
jmp
xorb
xchg
jle
xchg
dec
dec
and
mov
shll
rcl
dec
sub
sub
pushf
andl
int3
imul
inc
inc
mov
adc
inc
or
sub
mov
ret
push
sbb
lahf
mull
jp
daa
pop
add
xchg
ds
push
cmp
or
sbb
nop
insl
call
jb
cmpsb
lock
je
sbb
mov
and
jl
jbe
ret
aam
sub
orb
rorl
mov
sub
nop
inc
fadd
data16
pop
insl
arpl
lahf
mov
iret
subl
je
cwtl
jecxz
cwtl
das
dec
mov
aam
insl
mov
mov
loopne
hlt
in
cmc
arpl
enter
cwtl
in
das
loop
adc
push
push
or
cmp
add
js
sub
dec
imul
pop
adc
mov
leave
jg
cmpl
push
jno
int
or
data16
xchg
popa
rcll
add
mov
sub
jne
aaa
mov
stos
inc
cli
mov
sbb
les
mull
cmpsl
icebp
jns
movsb
xchg
inc
insb
xchg
in
aas
push
adc
jmp
sbb
imul
push
inc
cmp
xchg
pop
and
cli
inc
sbb
icebp
es
shlb
sbbl
adc
push
loop
mov
bound
mov
pop
dec
pop
in
ds
sbb
loop
pop
dec
arpl
jno
out
mov
jno
js
lock
leave
or
add
xchg
shll
addr16
test
lret
test
cmp
out
mov
in
into
sbb
mov
and
xor
outsb
dec
fs
jle
into
fdivl
divl
inc
test
es
pop
cwtl
test
push
fnstcw
divb
and
test
mov
cli
add
xor
adc
enter
imul
clc
test
int
imul
ja
mov
lea
lea
icebp
xchg
jmp
xchg
out
xchg
stos
cmp
push
mov
cwtl
frstpm(287
pusha
jmp
incb
and
sbb
int
add
or
xchg
mov
dec
push
mov
jge
cld
pop
ss
sbb
sti
sub
sahf
popf
xchg
add
mov
push
aaa
fidivrl
cmpl
push
std
and
mov
movlps
push
vpsubd
add
test
test
add
scas
push
sbb
xchg
in
xor
add
clc
ja
ret
mov
popa
jns
mov
inc
arpl
mov
lds
aas
fcompl
mov
data16
hlt
sbb
xor
xor
nop
cmp
push
push
out
dec
mov
mov
js
aas
stos
aas
stc
or
xor
decb
xorl
inc
fmulp
stc
adc
pop
scas
push
jb
or
mov
jne
cmp
dec
mov
push
xchg
xchg
pop
call
aad
sahf
bound
or
repz
daa
and
or
pop
cs
into
push
ss
fdiv
adc
jg
int
adc
sbb
popa
fildl
outsl
jbe
adc
repz
or
sahf
and
and
cmpsb
test
inc
fcoms
xor
and
pop
imul
cli
frstor
inc
fdivl
shrb
dec
dec
in
sub
test
dec
das
mov
js
mov
dec
or
jl
aas
dec
arpl
dec
add
pop
insb
xchg
fsubrs
test
mov
in
xlat
sbb
lahf
lods
mov
mov
mov
mov
cmp
mov
xchg
lret
inc
mov
es
lea
xchg
imul
jne
cmpsb
aaa
repnz
jecxz
dec
loop
mov
xor
imul
jno
or
ds
cltd
jo
push
shrl
dec
and
fs
sbb
and
jp
xchg
xlat
and
push
mov
ret
addl
pop
dec
ds
cmp
decl
push
cmp
pop
xor
gs
mov
dec
xorl
int3
inc
insb
pop
sahf
pop
jns
or
or
mov
std
dec
dec
xor
sub
jmp
lods
mov
jno
jns
mov
lret
mov
or
sbb
test
adc
jnp
fs
mov
insl
add
sub
enter
out
mov
lea
sbb
divb
gs
sahf
rol
push
sbb
hlt
push
push
xor
js
inc
push
pop
pop
adc
lret
or
ss
adc
test
test
xchg
xor
hlt
repnz
inc
mov
les
mov
inc
dec
call
fwait
add
mov
shll
inc
push
js
cmp
iret
sarb
pop
mov
and
jb
sub
pop
cmp
adc
push
cmp
and
mov
add
dec
mov
push
sarl
sbbb
dec
push
outsl
jnp
adc
js
xchg
sbb
mov
mulb
adc
dec
add
dec
ja
into
int
lea
fst
mov
xchg
stc
and
add
paddq
leave
pop
adc
repz
call
cmp
divb
cmp
sub
sub
icebp
cli
addr16
push
dec
mov
fisubrs
pusha
negl
mov
pop
loopne
popf
stc
jae
mov
sbb
sub
dec
sbb
shl
test
jmp
sbb
das
or
fadd
jp
out
rcrb
push
sub
add
or
lret
shll
insl
cmp
cmpb
rol
test
daa
stos
pop
mov
jns
mov
inc
pop
add
xchg
lcall
lret
adc
adc
imul
lret
pushf
xsha1
cmpsb
into
xchg
pop
ret
sub
push
push
mov
loopne
gs
add
pop
inc
xor
and
xchg
mov
aad
fwait
sti
xchg
push
cmc
xor
cltd
or
insb
sbb
dec
frstor
vmovaps
pop
in
ss
cmp
jge
lret
clc
push
test
std
fimuls
sub
imul
fdiv
dec
cs
insb
adc
mov
ret
cmp
push
pop
pop
add
fsubrp
movsl
pop
insb
xlat
or
inc
adc
lret
inc
fcomps
or
and
mov
lahf
xlat
imul
decl
aad
stos
cmp
imul
push
dec
mov
sbb
sbb
imull
pop
repz
add
js
mov
mov
and
mov
fisubrs
push
std
cmp
pcmpgtd
in
sti
ret
mov
xor
adc
mov
jl
subl
cmp
cmp
cld
aaa
push
fcmovne
call
fimull
xor
sbb
xchg
xchg
mov
negl
icebp
sbb
cmp
mov
ljmp
jl
pop
jle
xor
repz
or
mov
adc
mov
push
mov
pop
sub
add
in
andl
dec
out
mov
dec
inc
push
ja
xchg
push
fcom
pop
xchg
dec
gs
pop
pop
subb
mov
insb
jns
pop
add
sbb
fcoms
push
pusha
or
rcll
mov
sub
rcll
mov
or
js
xor
or
shr
cmc
and
cmp
add
dec
arpl
dec
mov
jge
mov
xchg
decl
fwait
mov
mov
cmp
jecxz
mov
ret
outsl
fwait
dec
ja
mov
shl
jmp
jmp
push
data16
aaa
push
test
mov
hlt
lret
jne
test
dec
shlb
icebp
dec
scas
mov
daa
lcall
or
push
cmpl
xor
scas
jle
popa
enter
stos
push
xor
fisttpl
dec
jge
dec
in
fcoms
imul
cmpsb
int
popa
les
jne
xchg
ret
pop
les
fmul
push
jns
jbe
cmp
lret
add
lock
std
lret
pushf
das
js
in
inc
fwait
leave
ss
xor
scas
inc
adc
lds
test
std
loop
inc
or
mov
lret
mov
daa
cvtdq2ps
mov
scas
cs
and
cmp
cmp
test
xchg
mov
aas
lock
sbb
mov
inc
dec
mov
pushf
jae
and
jmp
xlat
xor
jbe
aaa
sub
mov
cmp
es
pop
lea
fwait
fs
lahf
and
and
inc
call
sbb
rcrb
mov
icebp
aas
cmp
test
out
jbe
pop
jbe
cmp
lret
repz
and
pushf
inc
mov
andb
iret
xor
lcall
jo
push
push
adc
cmpsb
sbb
lahf
aad
xchg
ljmp
jp
adc
in
sbb
dec
into
das
addr16
in
inc
add
movb
clc
xor
cwtl
cmp
mov
andl
daa
pusha
bound
into
push
pop
testb
daa
xor
cld
or
jge
fnsave
add
or
scas
push
sti
fisttps
pop
fs
adc
push
mov
and
push
sarb
cli
pop
gs
icebp
iret
stc
pop
es
add
xchg
test
xor
test
jae
mov
test
cmc
cld
movsb
outsb
xchg
jne
inc
add
ss
push
fsubr
push
and
mov
push
sub
test
imul
sub
push
and
jno
sbb
outsl
cli
dec
sbbl
test
jl
mov
addb
js
movsb
repnz
mov
test
clc
daa
ficoml
or
stc
lock
cmpsl
sbb
aaa
lret
int3
xchg
sub
cmp
subl
inc
xchg
jmp
vsqrtps
cmp
and
mov
jge
push
jne
pop
das
add
popa
mov
pop
fldcw
es
xchg
ja
sahf
push
call
loope
scas
aas
dec
mov
dec
stos
jae
or
xchg
fstps
test
call
or
and
lds
add
jmp
lea
and
add
fs
add
int3
jo
add
jbe
popf
push
sub
add
sub
aaa
pop
lcall
test
adc
lret
jae
xchg
jg
movsb
jp
sub
scas
cmc
jle
adc
out
jae
lret
mov
loope
adc
sub
jae
mov
iret
pop
or
cmp
ret
jmp
out
dec
add
sub
enter
fbld
popa
enter
mov
and
lret
popf
cs
outsb
inc
mov
into
adc
push
icebp
stos
movsl
cwtl
add
jns
es
adc
cs
call
dec
cld
inc
mov
insb
push
test
popf
or
xchg
mov
lods
inc
jbe
lods
mov
shrb
and
push
mov
adc
ljmp
sahf
mov
ffree
or
out
adc
xchg
and
xor
push
mov
pop
lds
jle
sub
dec
mov
sub
jle
testl
or
push
mov
push
test
pop
mov
stos
cwtl
adc
lods
xchg
neg
dec
scas
mov
int
stos
jg
xchg
std
ss
sbb
inc
lock
adc
sub
scas
push
jae
test
mov
leave
ds
mov
fdivs
mov
jne
addl
jp
test
ds
int3
gs
push
xchg
xchg
das
inc
outsl
clc
and
outsl
dec
mov
lock
sahf
dec
repz
mov
xor
or
adc
fucom
jle
or
subl
cwtl
das
jmp
sub
jnp
test
xchg
scas
pop
sub
leave
mov
psrld
scas
ds
sub
mov
daa
cmp
ljmp
sbb
shl
mov
inc
xor
ds
cwtl
mov
and
mulb
jecxz
pop
cli
imul
jo
pop
mov
cmp
mov
lods
cli
mov
ss
pop
icebp
mov
out
and
test
test
mov
jae
fxch
add
pop
mov
lods
jns
loopne
stos
outsl
or
jb
lret
and
jb
lahf
imul
addl
shlb
enter
jge
and
fimuls
push
push
scas
jno
sub
sbb
out
shll
out
sarb
jge
adc
jae
xor
pop
imul
xlat
xchg
cmp
int
mov
in
or
sbb
loopne
and
scas
arpl
loopne
aaa
mov
mov
jmp
data16
repz
mov
mov
addr16
push
ss
pop
bound
pop
jns
inc
mov
mov
cmpsl
js
jmp
ret
stc
test
cmp
lea
mov
dec
call
rorb
test
mov
bound
jno
cmp
xchg
jp
mov
mov
rolb
into
cmp
add
outsl
sub
stc
fcoml
lret
imulb
lcall
clc
or
lret
add
xor
jg
push
insl
sbb
into
imul
jl
in
out
jmp
cli
daa
roll
mov
aad
ljmp
pushf
cli
fwait
imul
nop
fmuls
popa
mov
jb
shlb
movsb
mov
mov
pop
imulb
leave
or
mov
pop
sbb
xor
stos
jbe
sub
sti
pop
lock
int3
and
ret
jae
arpl
push
add
mov
daa
mov
movsl
sub
mov
sbb
loop
mov
imul
rolb
jno
mov
dec
sbb
test
popf
cmp
push
add
xor
or
test
jl
jne
mov
mov
dec
aam
sti
pop
insl
daa
inc
xchg
jb
jbe
xor
xlat
push
std
dec
dec
pusha
ret
sarl
or
cltd
lcall
into
in
dec
ret
lock
addr16
sbbl
sti
mov
mov
aad
bound
shll
sub
adc
testl
lea
jl
sbb
decl
pop
xchg
pop
idivb
adc
movsl
mov
lea
or
cld
push
push
add
aaa
jae
imul
sbbb
in
jge
dec
jmp
xchg
mov
shl
inc
jle
stc
sbb
push
ret
loopne
idiv
mov
dec
mov
sbb
cmp
clc
cmp
cwtl
ja
insl
test
push
insl
mov
add
sbb
fstp
scas
xchg
or
int
bound
jl
dec
sbbl
mov
ss
lock
pushf
out
xlat
sub
xchg
add
dec
popf
inc
lcall
xchg
jl
stos
mov
and
lret
jbe
and
jnp,pn
fcoml
popa
add
cmc
mov
pop
movsl
faddp
pop
test
mov
fsts
xchg
sub
and
jl
mov
bound
lcall
in
add
mov
cmp
loop
xchg
hlt
sub
or
and
loopne
sub
pop
dec
jle
stos
daa
xchg
adc
dec
jb
call
xchg
int
dec
pushf
and
sti
insb
add
cmp
jb
push
stos
andb
sbb
into
pop
jle
fwait
scas
sub
lret
inc
push
cmc
in
add
popa
in
lret
rolb
xchg
adc
pop
aaa
cmp
cmp
add
sub
sub
dec
cmpsb
in
cwtl
in
xchg
xchg
jae
mov
and
add
or
pop
push
cmp
and
btr
insl
data16
addl
adc
fdiv
jno
loope
out
fisttpll
stos
jmp
add
xor
lcall
cmpsl
sub
daa
adc
pop
lock
pop
dec
mov
cvtps2pi
fwait
imul
adc
pop
sahf
stos
and
lahf
ss
or
pop
cmpsb
jno
pop
push
lods
dec
jp
jp
inc
gs
push
enter
cli
push
addr16
repz
pushf
aas
pop
outsl
mov
in
xor
push
xor
test
mov
push
push
xchg
pop
dec
add
insb
jbe
cli
lahf
imul
cld
test
scas
imul
js
jge
push
test
stos
fnstcw
xor
mov
cmpb
jne
scas
imul
repz
jnp
add
mov
dec
cmp
enter
and
add
sub
shlb
fcoml
fimull
dec
mov
lods
cmp
pop
xor
fcmovbe
in
add
adc
loopne
inc
xlat
cld
jg
xor
pop
mov
stos
jl
ss
inc
push
fsts
jne
lods
shrl
push
jle
mov
xor
add
nop
jb
mov
cmpsb
add
mov
aam
sub
enter
pop
jmp
ja
or
addr16
outsl
sub
or
xor
xchg
call
in
ja
mov
gs
mov
mov
and
mov
std
adc
popf
ja
iret
cs
neg
arpl
dec
xchg
sti
jnp
inc
jg
pop
mov
loope
xchg
fs
jg
call
je
sbb
in
mov
mov
mov
sub
pop
decl
jns
pop
in
xchg
test
xorb
pop
mov
push
jmp
xorb
in
mov
out
les
pop
mov
scas
or
shrb
js
sbb
out
jo
fisubrl
loop
notb
rcrl
mov
movsl
cmp
test
je
pop
scas
std
push
xor
sbb
add
sbb
pop
lock
xchg
xor
insb
fcoml
xchg
sub
fs
rclb
gs
dec
test
mov
fbstp
in
icebp
lcall
lods
push
sbb
std
movsl
pop
out
test
or
popa
arpl
xor
lret
out
dec
push
or
pushl
popf
aam
into
mov
push
push
repnz
mov
jp
mov
aad
mov
mov
inc
fsubs
mov
sub
fwait
sub
pop
jae
xor
outsb
bound
movsl
xchg
sahf
imul
lock
and
sub
push
jg
fldt
icebp
mov
inc
paddb
or
inc
push
jl
inc
arpl
js
loope
shl
call
out
out
push
ja
jae
sti
ljmp
rcrb
setns
es
stos
xchg
jae
lods
inc
jns
cmpsl
sub
lret
dec
jb
mov
stos
ds
sbb
jmp
or
cs
cltd
fsubs
icebp
mov
je
jg
idivl
shll
fdivrl
mov
pop
out
lds
inc
fcomps
cmp
push
movsl
adc
push
das
xor
push
xor
mov
add
ret
ror
and
mov
push
or
shll
mull
dec
mov
mov
and
cmpsb
cmp
adc
popf
pop
xor
pop
mov
int
call
or
xlat
push
sub
xchg
inc
ljmp
scas
and
xchg
jg
jmp
jg
and
hlt
xchg
inc
gs
push
pop
mov
aam
jae
outsl
movsl
aam
or
std
fnstenv
aas
fisubs
rcrl
mov
mov
jg
sub
subb
sub
mov
add
push
sub
xor
mov
and
ret
adc
dec
popf
sbb
mov
xlat
pop
mov
push
orb
enter
clc
ret
xchg
dec
jmp
fucomi
inc
cld
push
mov
clc
lcall
sbb
lcall
mov
aam
inc
xchg
in
sub
push
addr16
imul
or
or
sti
add
pop
idivl
xchg
mov
bound
xchg
mov
aas
fisttps
ret
inc
lods
mov
fldenv
shlb
mov
mov
inc
xchg
mov
add
sbb
fidivl
out
jbe
js
test
cltd
fcmove
lret
xchg
mov
and
hlt
dec
jmp
jge
lahf
in
mov
add
loopne
mov
lds
subb
jb
pushf
dec
dec
xchg
or
mov
std
sub
dec
in
loop
adc
je
jle
or
adc
insb
gs
pop
pop
push
cmpsl
out
ss
cmp
loope
movsb
sbb
cmp
jns
sub
ljmp
jbe
cmp
enter
mov
pcmpgtw
shrb
or
or
and
out
ds
stos
pop
sbb
or
mov
fisubrs
dec
mov
mov
mov
fisubl
mov
mov
pop
push
sub
or
sbb
jecxz
fst
roll
dec
js
sahf
and
popf
cmpsl
dec
push
mov
dec
subb
lods
inc
inc
sahf
push
sub
push
movsl
add
lods
dec
in
adc
test
sahf
in
pushf
nop
mov
sbb
mov
sahf
inc
add
rsm
bnd
jbe
sbb
adc
or
jns
shl
nop
adc
sub
dec
xchg
scas
mov
inc
pushf
adc
cmp
pop
pusha
pop
movsl
xchg
jno
xlat
and
pop
shrl
push
cmpsl
cwtl
sub
test
lret
lods
push
mov
pusha
jo
lods
xrelease
mov
mov
and
jb
jb
or
and
mov
jbe
ja
test
out
sub
call
jmp
push
pop
call
outsb
dec
jo
sub
insl
cmpsl
lea
xchg
or
sbbl
cli
dec
lahf
ss
or
mov
push
mov
or
lret
xlat
mov
pop
ret
mov
xchg
jle
pusha
stc
in
dec
mov
add
push
add
imul
ja
es
mov
imul
movsb
push
sbb
xchg
imul
xchg
fildl
xchg
add
inc
fldt
sbb
insb
add
mov
mov
ja
add
loope
in
and
loopne
inc
adc
dec
jno
gs
sbb
pop
cmp
fsubl
mov
push
cld
scas
ds
xor
cmc
or
mov
or
je
lods
push
adc
les
mov
add
or
xchg
int
xchg
pop
fbstp
xchg
cli
ret
sbb
sbbb
cmp
lods
xchg
adc
xlat
dec
dec
pop
dec
negl
jp
jb
jge
cmc
scas
bound
test
cmp
xchg
in
scas
out
add
pop
jo
and
lds
pop
ja
dec
mov
cmpsb
leave
and
push
push
lock
rcrb
push
xor
jo
add
sbb
dec
jle
andb
lcall
mov
fsubs
push
jns
scas
mov
push
lods
mov
pop
and
push
inc
dec
repz
xor
sbb
ss
popf
push
ja
dec
xchg
mov
ret
jmp
pop
loopne
aas
fmuls
mov
cmc
leave
pop
mov
lock
sub
scas
cld
outsb
xor
mov
scas
pop
jl
sarl
sub
in
popa
mov
jb
cs
mov
enter
pop
insb
cltd
xchg
mov
lcall
and
xchg
sub
sbb
lret
xor
out
sbb
sbb
cmpsl
lock
lahf
movsl
cmp
cld
repnz
or
outsl
mov
scas
pop
fisttps
sub
flds
sbbb
hlt
cs
incb
fstpt
mov
xlat
sbb
mov
hlt
or
jge
pop
cmp
int3
ret
fstpt
pusha
idiv
cmp
sbb
jnp
mov
int
inc
fisubrl
stos
pop
push
jmp
cmp
pop
mov
cmpsb
jae
cmc
xor
push
adcl
hlt
aad
sbbl
ljmp
and
mov
mov
jno
adc
xchg
add
adc
ret
hlt
cmp
push
inc
adc
fucomp
sbb
fwait
xor
xchg
cmp
fisttps
les
jecxz
sub
jnp
sbb
test
add
pop
xor
insb
add
out
xor
mov
popf
dec
xchg
xchg
fwait
xor
jnp
sub
push
ljmp
and
push
fwait
dec
sahf
arpl
dec
push
pop
fldt
mov
into
les
adc
ficompl
std
ficoml
cwtl
inc
jmp
inc
loop
dec
cmp
add
pusha
xor
cmpl
incb
xchg
sub
and
jmp
pop
cld
test
ss
add
mov
mov
or
jge
stos
ja
inc
test
sbb
fidivrl
or
adc
or
jbe
or
aaa
fmull
out
jp
in
jle
test
cmpsl
std
dec
pop
ljmp
push
mov
sbb
or
mov
testl
jne
jge
cmp
jle
pop
lods
mov
ret
xor
pop
or
xchg
gs
cmp
mov
lods
inc
bound
lret
fucomi
adc
lods
xchg
aaa
push
xor
xchg
enter
fbld
fmulp
addr16
adcb
daa
sub
into
pop
cli
push
lods
es
or
jecxz
mov
scas
cmp
imul
cs
jae
adc
icebp
outsb
add
scas
cmp
push
xor
loopne
in
cltd
jp
cwtl
int
mov
xor
lock
xchg
xchg
cmp
stos
xor
jmp
fdivl
prefetch
cld
cld
movsl
mov
pop
std
insb
xchg
dec
pop
sub
jp
jl
cmpsb
lds
mov
pop
adc
imul
xchg
sub
jp
enter
mov
mov
rcl
sbb
inc
ret
addr16
fcoms
int3
pop
xchg
xor
nop
js
jmp
xor
pop
add
mov
jns
dec
mov
cmpsb
xlat
outsb
adc
pop
movsl
jmp
push
loop
int3
inc
mov
aam
lahf
cmc
rcll
out
lods
sbb
enter
push
sub
in
arpl
daa
inc
lods
jo
sarl
ja
or
lods
ss
cmp
daa
subl
pop
ja
je
jb
mov
mov
in
sub
add
add
movsb
repnz
adc
mov
adcb
cmp
adc
mov
jmp
pop
pop
mov
test
push
idiv
add
and
stos
les
mov
stos
shll
pushf
mov
aam
std
loope
sub
push
imul
dec
lret
inc
je
cld
and
pop
dec
mov
dec
fcomps
cld
pusha
aad
jns
cmp
sub
jge
lahf
jmp
sbb
outsb
adc
add
cmp
test
lret
gs
stos
mov
bound
adc
repnz
jne
outsb
aaa
pop
enter
std
out
in
ljmp
sbb
mov
pusha
fildl
and
les
push
fs
adc
dec
push
xchg
loope
jecxz
or
imul
mov
arpl
rcr
cmp
mov
aam
jno
cpuid
mov
js
jo
mov
loopne
sti
rolb
cmp
sub
dec
cltd
push
js
xchg
sub
adc
pop
sub
fldcw
scas
inc
pop
out
loope
push
push
test
xorl
aad
test
mov
dec
in
fdivs
push
mov
pop
cmp
xchg
repnz
add
mov
or
out
xor
popa
cs
cmpsl
mov
xor
push
lahf
pop
aam
mov
fsubrp
push
and
xchg
dec
xorl
shlb
mov
or
pop
fldt
lcall
xchg
mov
mov
shlb
test
leave
pop
shlb
or
stc
stos
mov
adc
aam
sbb
incb
dec
inc
gs
shr
or
and
sub
fdivl
lret
jbe
cmp
dec
push
xor
nop
sub
out
insl
pop
mov
mov
in
outsb
adcl
or
pusha
ja
or
sbb
cltd
adc
jne
cld
lods
rolb
in
adc
push
adc
arpl
inc
rorl
inc
ljmp
adc
les
push
sbb
addr16
imul
sbb
push
pop
cmpb
xor
dec
and
sub
xor
outsl
adc
js
out
xor
mov
cltd
and
cmpsl
ss
cli
mov
mov
iret
scas
sub
lcall
xor
pop
pop
fwait
lret
or
ljmp
mov
dec
adc
dec
nopl
in
xchg
sbb
sub
movsl
mov
pop
lahf
imulb
call
mov
push
push
and
xor
test
cmovbe
push
dec
call
mov
int
in
jo
inc
and
fs
jbe
add
jmp
filds
shll
mov
fdivp
int
cmp
pop
arpl
and
jnp
nop
jnp
and
mov
or
ds
mov
mov
adc
xchg
and
add
ds
shl
xchg
loop
aaa
movb
addr16
cmp
cmpsb
xor
rclb
xor
call
pop
imul
or
cmp
stc
adc
push
and
jbe
lret
mov
test
test
fnstsw
pop
stos
mov
mov
stc
xchg
push
insb
mov
mov
or
pop
cli
adc
cs
aaa
aad
add
mov
fsubl
lcall
outsb
int3
pop
xchg
jae
adc
cmp
jno
sbb
shlb
repz
mov
outsb
sub
jns
les
jno
push
fiaddl
xchg
sub
clc
outsb
xor
jne
or
xchg
sbb
push
mov
and
icebp
movsl
data16
mov
int
lods
mov
sub
or
adc
mov
pop
das
jno
outsb
and
push
imul
popa
xchg
add
loop
jb
aas
add
js
jno
hlt
test
xchg
aad
and
jp
and
fbstp
xchg
inc
pop
push
in
jns
mov
inc
pop
adc
xlat
cmp
sahf
push
mov
lock
pop
scas
jl
jb
mov
add
out
mov
inc
leave
mov
jge
mov
sbb
es
inc
icebp
ja,pt
sti
inc
cwtl
and
push
call
cmp
ds
andl
sbb
aas
mov
adc
xchg
push
mov
imul
mov
xor
insl
sub
out
jl
sub
les
lret
int
hlt
lahf
enter
iret
pop
call
xor
pop
js
dec
jl
pushf
popf
jge
push
xor
xor
inc
or
sbb
mov
movsb
add
aam
jnp
sbb
insl
cmp
pop
sbb
sarl
jne
add
psubsw
adc
jno
push
insl
and
xchg
mov
dec
mov
push
mov
not
mov
int
shrb
ficomps
mov
cmp
push
test
int3
ret
imul
inc
mov
sub
shl
inc
out
shr
sahf
cs
cmp
movsb
movsl
sbb
jo
push
jle
jae
lods
lds
call
call
lcall
testb
test
lods
adc
movsl
call
or
mov
test
rorb
lea
cmp
sbb
jns
ds
jle
pop
jle,pn
out
cltd
xchg
adc
inc
mov
gs
sub
add
out
or
lock
lds
jns
mov
out
gs
inc
dec
push
in
aad
lds
jecxz
cmpsb
jne
xchg
enter
cmp
sub
fisubs
add
add
xor
push
cmp
sahf
inc
sahf
add
jg
and
adc
lahf
shl
mov
or
jge
jmp
stos
cmp
adcl
push
add
lea
pushf
std
daa
and
fstpl
dec
or
ss
popf
and
xorps
data16
push
ja
cs
xchg
repz
lcall
shl
mov
into
jnp
je
insb
ret
sbb
testb
arpl
mov
xlat
lret
lret
subl
inc
mov
test
or
cltd
notl
decb
push
fistps
sbb
jo
pop
jb,pn
sub
xor
in
test
adc
bound
insb
fcoms
push
repnz
in
mov
jl
or
cmp
cltd
mov
testl
or
add
pop
popf
mov
pop
leave
cld
jo
cmpsb
xlat
inc
push
xchg
jbe
or
adc
loopne
dec
insl
test
fiaddl
xchg
inc
push
imulb
ljmp
jle
xchg
das
adc
mov
push
mov
dec
pusha
repz
fiaddl
cmpsl
popa
movsl
sbbb
xor
xor
shrb
xchg
and
mov
mov
jmp
loope
and
aam
and
pop
lret
loopne
cmc
pushf
mov
mov
adc
mov
popa
pop
push
inc
or
jg
mov
pop
sub
add
fucomp
jmp
mov
stc
add
adc
scas
jle
push
dec
out
test
ss
stos
mov
mov
adc
inc
gs
sbbl
imul
lds
icebp
xor
adc
cmc
outsb
fmul
dec
lea
cmc
pop
lods
pop
andl
cmp
cs
stos
mov
fisttpll
sub
lret
cld
lock
fldt
mov
add
mov
cmp
arpl
ret
rorl
xlat
call
fs
xlat
out
dec
fdivr
andb
jbe
data16
xor
int
xchg
mov
in
test
mov
or
adc
pop
repz
jp
sahf
test
imul
lock
inc
fs
shl
push
pop
add
daa
lds
aas
push
nop
jmp
cmp
mov
pop
jmp
int
std
fs
or
inc
mov
jbe
adc
push
shll
add
and
loop
pop
add
mov
pop
push
popa
sbb
stos
dec
hlt
sub
rclb
push
lock
fidivs
fcoml
mov
lcall
in
test
mov
sbb
notl
mov
sbb
aam
iret
ja
pop
pop
push
out
into
loope
cmp
push
or
push
outsb
mov
loopne
add
cmp
stc
nop
pop
movsb
loopne
andb
sbb
enter
out
stos
push
cmp
adc
mov
out
cmpsb
dec
lahf
sbb
in
test
daa
mov
jge
mov
and
ds
jnp
movsl
push
inc
ss
stos
cmpsb
push
push
push
je
daa
sub
loopne
and
adc
into
inc
mov
test
lcall
movsl
fnstcw
aad
call
daa
sbb
mov
sbb
adc
mov
sbb
xchg
xor
jne
lcall
mov
lret
and
insb
xlat
sub
leave
and
pop
inc
test
lcall
mov
dec
shrb
rolb
cld
adc
out
aaa
stc
addr16
or
ret
inc
scas
pop
movsl
mov
jno
mov
mull
fsts
push
inc
adc
cmc
jg
push
push
xlat
push
push
shlb
lahf
negl
int
inc
jl
mov
xor
jg
cmpsl
popa
xchg
mov
loope
jecxz
add
cwtl
icebp
adc
mov
and
fs
das
sub
inc
shld
das
adc
outsl
imul
sbb
mov
push
jle
ljmp
jecxz
sub
adc
icebp
cmp
mov
or
loopne
push
mov
add
out
and
jbe
in
sbb
jno
cld
lcall
mov
lea
xorl
lea
cmp
outsl
push
lods
outsl
push
inc
les
dec
fbstp
aam
clc
fnstenv
popa
scas
jb
push
in
mov
nop
pop
cmp
cmp
adc
xchg
mov
mov
call
add
insb
std
mov
shlb
nop
fsts
fisubrl
or
loopne
je
lods
rep
dec
sub
xchg
loope
fidivs
add
pop
fsubs
jecxz
lret
and
ja
dec
pop
jp
push
insb
nop
cmc
mov
clc
stc
or
push
fistps
xor
add
clc
cmpsl
ficomps
ret
ffree
xor
movsb
jmp
xor
xor
iret
dec
lock
xor
leave
mov
xchg
push
mov
aad
div
inc
lods
or
fidivs
add
xor
inc
outsl
aad
xchg
in
and
into
repnz
lock
sub
data16
in
loop
out
mov
or
test
mov
test
gs
repnz
xchg
sbb
andb
out
test
xchg
fsubrl
mov
jl
adc
and
dec
push
ljmp
loope
inc
push
push
jae
arpl
and
dec
xchg
fldenv
fisubrl
or
mov
sub
xchg
testb
push
adc
xchg
and
pop
mov
adc
mov
jo
inc
mov
rcr
int3
mov
fmull
sub
jl
cmpsb
jecxz
mov
jp
incl
dec
je
lret
cld
mov
fbstp
push
popf
cmp
cwtl
das
daa
aam
cmp
test
jb
push
dec
cmp
dec
popa
ret
fsubp
jge
mov
inc
sahf
cli
adcl
mov
dec
xorb
outsl
cmp
sub
pop
imul
pop
mov
mov
pop
outsb
or
xchg
push
xor
add
out
sti
pop
or
mov
mov
jg
mov
adc
cmp
xchg
cmp
fisubrs
cmp
fbld
or
jmp
mov
push
inc
imul
inc
cli
mov
les
in
xchg
cmp
test
sub
dec
mov
sbb
aad
cmp
push
push
stos
or
test
mov
lods
jle
les
shlb
pop
loopne
insb
inc
dec
fmul
subl
sbb
out
pop
cmp
lea
lock
addr16
mov
mov
lds
popf
arpl
outsl
shl
cmp
in
ret
out
jl
lea
mov
xor
dec
inc
aad
sbbb
out
cld
add
loope
jno
stc
mov
mov
xor
sar
or
xor
inc
ss
sti
vphaddbw
fimull
mov
mov
sub
dec
sbb
clc
cmc
imul
mov
pushf
test
into
ret
out
xorl
adcl
int
ss
inc
fcomps
enter
sub
shl
jo
pop
psrad
inc
outsb
xorb
jle
shlb
dec
in
cmp
pop
jp
andb
mov
mov
sbb
mov
cmp
xor
adc
mov
aam
mov
push
clc
inc
test
fmull
push
push
dec
inc
fildl
icebp
stos
cmp
daa
mov
imul
or
mov
xchg
clc
dec
push
jb
adc
pop
sub
fdivr
sub
fidivrl
sbb
ja
mov
femms
pop
sahf
test
mov
scas
xlat
arpl
xlat
jae
daa
movsb
dec
adc
movsl
xchg
push
scas
mov
mov
ret
call
push
inc
fidivs
dec
fbstp
lret
addr16
leave
loope
in
arpl
mov
cs
sbb
push
cmp
add
mov
lea
std
fwait
ror
and
mov
sbb
push
flds
fnstsw
mov
jp
xchg
out
push
sbb
fwait
cmpsb
or
xchg
mov
cmpsb
pop
popa
cmp
mov
pop
pop
call
sub
mov
mov
ret
mov
shlb
test
gs
out
cld
rcrb
in
pop
dec
out
lcall
fcmovnbe
push
lahf
shr
inc
mov
cld
xor
mov
xchg
in
mov
push
popf
rcl
and
pop
sti
sti
cmp
pop
adc
ss
in
xchg
xchg
sbb
push
movsb
icebp
xchg
pop
gs
push
leave
das
icebp
sub
xchg
loope
lahf
sbb
cmp
fs
mov
cltd
lret
loopne
cmp
loop
les
inc
dec
cmp
lock
xchg
int3
sbb
inc
pop
mov
int3
fsubrl
stos
jecxz
fadd
fldlg2
jbe
add
leave
mov
mov
jp
leave
and
inc
push
scas
jp
notl
leave
mov
mov
push
clc
or
into
das
sbb
mov
fidivrs
roll
sti
addb
lods
push
movsl
ficomps
sub
add
add
daa
inc
fcoml
incl
add
stos
divl
iret
test
js
imull
sbb
out
ret
pop
and
sbb
xchg
xor
xlat
pushf
mov
js
ret
aaa
sub
movsl
cltd
insl
add
imul
sub
cmpsb
les
rorl
pop
nop
or
mov
dec
pop
xchg
mov
fwait
dec
shrl
mov
push
adc
dec
int3
xor
inc
inc
jmp
inc
es
mov
ja
sti
pusha
mov
push
lahf
mov
fs
stc
popf
xchg
cs
add
jae
sbb
sub
push
int
ud0
dec
out
cmpsb
push
xchg
cs
stc
hlt
sbb
stos
fists
aad
mov
mov
cmpsl
test
addr16
and
add
nop
daa
ja
addb
pop
xor
cs
cmp
sub
jo
imulb
mov
test
push
inc
mov
stc
or
loopne
out
cld
test
cmp
call
mov
arpl
push
fcompl
inc
test
mov
fwait
pop
xor
mov
cmp
mov
mov
ljmp
xor
sbbb
xor
xchg
movsb
lret
repz
iret
cmp
imul
aas
out
sub
inc
loope
push
pop
mov
xlat
icebp
out
sbb
mov
inc
fdivrs
push
insl
loopne
cs
jbe
sub
pop
xchg
mov
sbbb
rcrl
mov
stos
scas
adcb
push
mov
shll
rorl
xchg
clc
sar
stos
push
pop
sbb
mov
mov
and
adc
int
jno
in
mov
pushf
or
add
ror
mov
pop
mov
outsb
loope
arpl
mov
arpl
dec
mov
lahf
and
cmpsl
je,pt
xchg
test
roll
shr
jae
test
imul
sbb
xor
mov
mov
mov
jle
sahf
sub
outsb
aad
in
ss
pop
adc
push
sub
movsl
imul
clc
cmp
jg
jg
pop
xchg
cmp
outsl
loop
dec
fs
imul
pop
dec
pop
xchg
adcb
push
stos
push
cmpsb
cli
and
mov
adc
jl
shl
cli
push
jmp
popf
fs
xlat
add
or
cwtl
dec
rcl
adcb
pop
jle
sbb
in
sbb
mov
cmc
cmp
inc
stc
sub
lret
inc
cli
cmp
test
inc
mov
sub
in
pop
repnz
shll
testb
mov
jbe
push
cmp
add
lds
pop
lock
push
lcall
inc
add
addb
jae
xchg
or
sarl
push
insb
add
inc
dec
lods
rorb
mov
xchg
dec
dec
xchg
or
jmp
imul
mov
mov
fwait
pop
out
and
inc
dec
hlt
pop
filds
pop
push
inc
aad
mov
movsb
cmp
cmp
adc
cmpsl
lock
xor
sbb
push
movaps
dec
sbb
in
sub
loop
jae
xor
xor
xchg
cli
inc
pop
xchg
sbb
popa
adc
mov
dec
xor
movsb
es
fsubr
arpl
scas
sbb
cmpsl
jp
loope
std
fiadds
pop
hlt
ja
mov
notl
stc
ffreep
out
test
bound
cmpsb
pop
cmpsb
xchg
adc
inc
fs
jns
sub
dec
shl
leave
and
push
clc
stos
inc
mov
sbbb
fs
sub
ss
aas
fisubs
in
das
sub
fistps
push
stc
jecxz
fcmovb
test
pop
push
dec
and
les
imul
mov
cmp
pop
aaa
icebp
add
pop
jmp
jmp
mov
inc
popa
xor
dec
rsqrtps
mov
jmp
xor
das
addr16
push
or
sbb
jno
dec
mov
mov
pop
dec
mov
pop
imul
cmpb
mov
pop
jp
int3
lock
xchg
inc
push
fcmovnb
xor
inc
int
sti
and
cmpsl
sub
xchg
mov
sbb
test
lds
xchg
ss
addr16
test
lret
fmul
xchg
push
icebp
inc
and
incb
aam
pushf
cmp
xlat
icebp
mov
jno
imul
xor
cmpsb
insl
sub
test
sbb
out
cltd
mov
outsb
mov
aam
pop
inc
stos
adc
fcompl
cmpsb
insl
add
pop
leave
mov
inc
jle
pusha
enter
push
aam
push
jo
fsubs
dec
pop
imul
push
lret
in
or
mov
imul
adc
bound
xchg
jo
adc
sbbl
rorb
push
imulb
jmp
and
mov
xchg
add
ret
inc
pop
mov
pop
push
ljmp
mov
cmpsb
daa
adc
je
ds
adc
inc
and
and
int3
mov
ljmp
lret
out
pop
mov
mov
clc
popw
ja
push
ljmp
insb
mov
or
inc
aaa
or
cltd
scas
addb
iret
fistpll
adc
sbb
repnz
mov
jnp
ds
xor
mov
push
mov
and
pop
sahf
dec
lea
pop
push
and
stc
aaa
dec
cmc
lods
fidivrs
cmpsl
cmp
lds
or
dec
mov
inc
cmc
es
dec
cmp
negb
testl
xor
fcmovne
push
inc
arpl
mov
gs
mov
repz
lods
pushl
js
mov
xchg
sbb
mov
inc
popf
mov
stos
ds
imul
lock
inc
fcoms
loop
xor
push
xchg
push
sub
adcb
pop
shll
xchg
mov
sti
inc
insl
cli
dec
fisubrl
add
sbb
fsubr
repnz
test
or
loopne
outsl
sahf
xchg
test
outsl
cld
hlt
scas
test
mov
mov
push
jmp
cld
push
das
outsb
int3
in
fs
sbb
lds
mov
mov
popa
sbb
cld
pop
bndstx
mov
scas
popf
sub
ljmp
or
or
jle
xor
mov
fcmovne
int3
push
hlt
pop
add
mov
xchg
pop
dec
inc
setp
imul
jmp
fistps
lea
stc
stc
cmp
inc
sbb
inc
test
sti
jnp
add
out
mov
out
into
sbb
hlt
inc
sbb
negl
imul
mov
call
xor
call
fnstenv
shll
and
jecxz
xchg
push
rclb
outsl
mov
lret
jp
loopne
push
and
loope
pop
hlt
iret
xchg
in
cmpsl
xchg
mov
repnz
mov
jns
mov
test
jmp
lods
enter
lahf
jecxz
and
pop
fst
fmuls
mov
out
fistl
sub
fwait
pop
jmp
mov
inc
pop
mov
inc
add
mov
add
xor
cld
sbb
gs
inc
sbb
inc
sti
cwtl
das
sub
push
repnz
dec
fdivrp
and
int
repz
push
jp
jmp
icebp
hlt
jmp
jns
mov
add
scas
imul
jbe
push
adc
stos
aam
xchg
orl
inc
test
test
push
sub
xor
cmp
mov
adc
cmp
mov
pop
call
hlt
ds
pushf
fcmove
in
mov
gs
xchg
jne
lahf
pop
incb
int
iret
mov
and
fxtract
adc
and
imul
and
jl
call
add
pop
or
rol
pop
divl
mov
out
xchg
movsb
fs
and
sti
mov
xchg
inc
mov
xor
pop
push
xchg
subl
sbb
dec
lea
insl
neg
leave
cmpsb
data16
pop
dec
dec
cmpsb
stos
sub
mov
data16
mov
loopne
aas
sbb
fadd
push
lcall
ficompl
jne
push
and
sti
rolb
add
sbb
xor
xchg
out
sti
jecxz
fucom
mov
cmp
rorl
jp
dec
cwtl
xlat
add
mov
and
fbstp
loopne
pop
mov
ljmp
sub
je
testl
add
mov
add
xchg
test
mov
push
in
cmpsb
mov
mov
je
push
add
dec
xchg
fnstenv
mov
mov
inc
jp
add
push
xor
out
push
mov
xchg
xchg
add
dec
out
lds
ret
cld
call
adc
dec
scas
jg
out
adcb
jo
and
mov
cmpsl
sbb
adc
insb
rorl
adcb
lret
ret
jae
or
rcr
cmp
fldenv
jle
dec
pusha
cltd
and
jecxz
xchg
sbb
jg
into
mov
and
adcl
xor
popa
daa
pop
repnz
sub
sub
jne
adc
sbb
xchg
loope
pushf
loop
cmp
inc
out
sti
pop
jecxz
mov
mov
pop
xor
scas
cmp
fiadds
push
add
stc
xor
jae
and
pushf
xor
pop
fnstcw
push
test
subl
fwait
pusha
jae
mov
scas
cli
and
cmp
push
jg
lcall
mov
in
xchg
arpl
xchg
fisttpl
and
or
dec
test
les
inc
aam
insb
mov
or
xchg
add
sahf
call
data16
adc
jne
fdivs
mov
push
dec
mov
jbe
mov
mov
scas
xor
orb
sahf
inc
or
add
es
daa
es
mov
and
jmp
push
data16
cwtl
jb
cs
cmpsl
cmp
lret
sti
inc
rcl
add
rclb
mov
mov
xchg
sbb
jle
pop
mov
xchg
mov
pop
fbstp
aas
mov
inc
jo
fidivs
adc
pop
mov
pop
pop
imul
scas
call
jg
xrelease
ja
test
in
ja
out
lods
add
push
xchg
add
repnz
movsl
cmp
sub
shll
adc
cmpl
in
sbb
jno
inc
jmp
mov
cmp
jecxz
inc
sbb
sti
fnstsw
add
jp
mov
dec
push
std
movsb
or
sbb
lcall
and
inc
loope
insl
add
dec
xchg
sarl
and
lahf
xchg
and
js
pop
call
test
inc
addl
lds
in
js
fadd
mov
mov
dec
outsl
movsb
push
inc
fimull
and
inc
subl
sub
cmp
and
inc
mov
je
pop
xor
inc
cs
out
push
pop
or
push
insl
in
jp
cmpsl
sub
pop
add
or
xchg
std
xchg
vxorps
or
jmp
imul
xor
jo
inc
movsb
dec
jmp
lock
xchg
adc
mov
and
push
pop
sbb
aaa
scas
mov
sub
or
push
dec
sub
imul
lret
mov
xor
rcrl
or
push
imul
adc
repnz
mov
je
out
xor
and
jb
cs
sub
add
pop
and
lahf
div
popa
push
jno
lcall
mov
dec
ds
xor
add
xor
movsl
es
cmp
sbb
test
fsubrl
lahf
add
pop
in
push
in
fwait
pop
inc
adc
add
mov
data16
or
stos
sbb
mov
or
push
pop
in
das
lret
cwtl
mov
xchg
lcall
push
dec
dec
push
sbb
inc
arpl
faddl
pop
repz
aad
mov
or
outsl
mov
mov
xchg
mov
or
mov
mov
jns
pop
mov
jl
enter
jmp
push
push
movsb
cmp
stos
test
ret
mov
mov
cli
sub
bsf
outsb
push
cmp
mov
mov
insb
xorb
mov
lods
pushf
dec
sbb
cmp
and
sti
mov
fs
mov
jne
shr
stos
lods
jg
clc
add
and
sub
adc
scas
and
in
and
cmpsb
pop
repnz
test
loopne
sub
add
test
ret
pop
imulb
dec
aas
loope
in
push
xchg
cmp
aas
mov
xlat
pop
repnz
dec
sub
aaa
mov
push
push
insw
lock
mov
subl
sbb
dec
aad
inc
insb
adc
jp
add
lds
add
mov
inc
jl
mov
push
outsl
cld
into
pusha
pop
xlat
xor
sub
lahf
fs
out
popa
lods
ljmp
call
cld
push
dec
aaa
pop
out
cmp
push
inc
pop
popf
sarl
out
push
aad
sti
xchg
jp
ret
cmp
mov
movl
cmp
sbb
mov
push
pop
jb
adc
push
xchg
in
in
xlat
ret
out
fidivrs
pop
pop
pop
push
call
lcall
jb
pop
mov
aad
outsb
pop
sub
push
sbb
cmp
jp
orb
adc
enter
sbb
insl
inc
mov
add
clc
xor
sbb
inc
icebp
jo
cmp
loop
in
pushf
mov
sub
imul
test
fs
jecxz
pop
cmp
jecxz
sbb
rcll
mov
lret
int
cmp
mov
mov
mov
sbb
jo
push
add
movsl
push
lds
mov
repnz
jae
ja
dec
popf
fnsave
xchg
or
inc
or
aad
ljmp
jo
fisubs
jo
in
aam
cmp
seto
inc
adc
pop
fildll
out
adcl
loopne
mov
out
movsb
andb
push
pushf
dec
push
and
les
and
lea
repz
lods
xchg
sarb
out
je
xchg
push
in
xchg
mov
cli
and
fcomi
lret
cmc
jle
mov
sbb
mov
mov
cmp
mov
repnz
fcoml
icebp
adc
jae
lcall
dec
lahf
dec
dec
jmp
in
data16
stos
adc
push
add
jns
xor
pop
imul
xor
push
xchg
pop
aaa
add
test
jnp
adc
cmp
add
xlat
repz
adc
in
inc
fsubl
sub
sbb
mov
mov
jecxz
jl
ljmp
std
jns
or
pop
cmc
inc
cli
scas
fucomi
mov
pop
ds
shlb
std
add
les
mov
lcall
daa
cmc
inc
dec
mov
aam
pop
dec
pop
inc
aam
out
push
dec
loop
pop
cmpsb
test
repnz
mov
sub
iret
xlat
mov
xchg
fwait
cmpsl
jmp
arpl
jmp
addr16
out
test
aad
test
lea
sbb
pop
cltd
das
dec
arpl
xor
ss
repz
push
lret
xor
lods
cmp
mov
sub
repnz
repnz
mov
and
jnp
push
xchg
inc
inc
jno
jg
xor
pop
mov
dec
add
sarl
mov
into
out
icebp
fdiv
cmp
imul
sbb
cs
sub
or
icebp
pop
outsl
and
notl
mov
mov
mov
leave
ljmp
mov
test
stos
xchg
ss
sbb
inc
inc
mov
ja
out
out
int
scas
fstl
test
xchg
je
nop
stos
mov
sub
add
adc
mov
fidivrs
mov
xor
sbb
jo
jmp
or
and
pop
jmp
ds
adc
lods
fstpt
add
pop
aaa
sbb
dec
cmp
inc
test
dec
out
leave
test
and
mov
outsl
sbbb
and
test
sub
outsb
xor
fcomip
mov
pop
pop
ds
std
lods
jmp
jae
or
std
shl
fdivl
inc
push
loopew
scas
nop
xchg
sbb
pop
pop
jb
ds
daa
pop
mov
ss
xchg
into
bound
loopne
lods
mov
stc
jge
xchg
add
adc
pop
mov
xchg
out
add
mov
push
mov
fstpl
inc
or
out
add
add
pop
cmpsb
in
jnp
adc
jl
fcompl
mov
jns
add
xchg
or
xor
sbb
insl
inc
xor
add
mov
and
xchg
loop
xchg
cmpsl
mov
add
jg
xchg
cmp
xchg
add
in
sbb
loope
add
out
push
adc
aaa
jecxz
mov
gs
mov
mov
jge
jae
pop
inc
scas
mov
sti
fwait
aas
ror
aam
aad
stos
add
ret
ret
fstpt
out
imul
scas
ficoms
ss
stc
addr16
ficoml
add
lock
mov
test
mov
or
nop
mov
adc
mov
and
and
push
xlat
and
dec
push
push
inc
dec
loope
stc
mov
xor
pop
pop
cld
rcrb
ret
rcrl
js
jae
hlt
xlat
insb
imul
mov
call
xlat
cmp
cwtl
mov
dec
ja
mov
enter
cld
lods
xor
or
pop
ds
in
rcl
sub
add
iret
arpl
cli
sarb
cli
pushf
sbb
dec
and
les
testb
je
add
pop
xchg
lahf
inc
repz
test
inc
xchg
mov
je
mov
pop
testb
rorb
pop
lods
inc
push
ds
mov
aas
fsubl
imul
arpl
cwtl
sbb
iret
mov
test
fwait
out
pushf
mov
roll
je
or
cmp
lock
in
pop
ficomps
xchg
fwait
mov
mov
std
xchg
adc
imul
cmc
sub
mov
sbbb
xchg
std
pop
sbb
jns
add
mov
test
in
sub
scas
adc
adc
dec
push
jg
sub
push
pop
push
gs
push
lods
cmpsb
xchg
stos
mov
xlat
mov
push
leave
inc
push
sub
aad
xor
imul
fldcw
or
cmp
stos
dec
xchg
jg
mov
ds
add
daa
inc
ror
pop
jg
dec
push
inc
test
ja
gs
mov
mov
bound
ret
jl
iret
ficoml
dec
fildl
xchg
dec
mov
mov
popa
andl
jecxz
lea
push
in
lahf
sarb
sbb
cmpsl
das
sbb
rcr
fimull
mov
fsubrs
andb
xor
addr16
cmpsl
or
or
scas
lds
adc
loop
pop
fsubr
pop
imul
adc
es
cs
dec
add
lea
lock
cld
xchg
cmp
lret
mov
out
insb
inc
jb
and
fnstsw
jl
iret
mov
push
imulb
ds
out
or
mov
push
in
adc
repz
sbb
pop
gs
sub
adc
add
icebp
popf
inc
shl
mov
adc
and
outsb
shrl
icebp
cs
insb
sti
sti
repnz
clc
or
sbb
loopne
xlat
sbb
inc
sti
push
orb
outsl
sub
pop
jg
rcrb
std
mov
mov
pusha
int
xlat
xchg
test
inc
lcall
adc
sub
and
gs
adc
andb
inc
lahf
sbb
cmc
xor
mov
adc
mov
mov
mov
cli
pushf
dec
aad
and
outsl
daa
ficoml
fstpt
pop
lret
inc
clc
xchg
push
aas
call
in
shr
ficoml
xor
shlb
pusha
in
pop
xchg
into
fsubrl
popf
lahf
jnp
jp
xchg
popf
xor
dec
cltd
jo
mov
mov
cmp
in
decl
test
cmp
daa
fstpt
rorl
mov
xchg
jno
jb
out
mov
das
negl
and
sub
mov
lcall
shrl
inc
movsb
mov
decl
test
jle
add
pop
out
mov
add
add
jle
or
mov
jns
out
repz
sbb
nop
xlat
xchg
pop
pop
mov
fcmove
sub
dec
dec
outsl
push
or
pushf
test
jne
sahf
push
lahf
mov
mov
mov
jne
mov
aam
testl
sub
dec
das
cmp
jae
aas
movsl
andl
in
dec
dec
repnz
ds
fucomip
int3
imul
divb
or
js
xchg
sub
mov
ss
daa
lcall
xchg
dec
jne
adc
clc
faddl
pushf
jecxz
sbb
or
inc
pop
xchg
test
ret
mov
out
or
and
popa
bnd
jne
insl
aaa
or
pop
xchg
subl
dec
dec
mov
mov
sub
es
stos
pop
inc
lahf
mov
iret
inc
mov
cld
push
pop
insl
jae
or
push
jns
lahf
mov
xchg
pop
std
scas
and
icebp
into
sub
mov
out
cmp
push
fwait
jp
movsb
leave
add
es
inc
or
clc
jnp
adcb
adc
data16
pop
and
push
loopne
je
lahf
and
sub
add
hlt
rorb
jae
push
in
xor
repnz
stc
fcmovb
fwait
rclb
rorl
xor
jg
inc
cmp
xchg
pop
xor
lds
hlt
sbb
cmp
cmp
negb
push
add
jns
fwait
push
paddusb
hlt
out
push
push
sti
nop
xchg
adc
inc
inc
lds
js
push
jmp
or
sbb
inc
mov
mov
insl
mov
push
sarb
repnz
mov
js
pop
mov
sub
clc
call
push
das
incl
fs
or
adc
aad
pop
rol
cmp
gs
dec
sbb
repnz
sti
je
jle
adc
jb
sub
dec
loope
cmp
dec
test
or
or
jno
sub
les
divl
inc
or
es
lea
sub
mov
pop
ret
mov
cmc
cmp
stos
xchg
ds
dec
out
xor
loop
insb
and
and
mov
shl
lds
test
call
add
out
ja
mov
in
lcall
arpl
add
push
adc
loope
sub
cmp
movzwl
inc
or
adc
ficoml
push
jae
mov
push
loope
pop
lret
cmp
mov
add
pop
jb
into
xchg
add
or
divb
xchg
fistps
mull
ljmp
mov
inc
adc
xchg
mov
cmp
in
dec
cmpsb
xchg
cmp
out
cmpsl
or
jmp
mov
out
sbb
dec
ljmp
add
scas
mov
adc
into
mov
jae
leave
inc
pop
or
scas
xchg
adc
mov
sbb
xchg
push
pop
into
jne
cmpsb
dec
jmp
cmp
cld
and
cld
mov
xchg
ds
hlt
decl
stos
xchg
xchg
and
or
and
sbb
out
xchg
scas
in
mov
push
and
dec
mov
mov
cmc
repnz
fwait
adc
in
push
ds
dec
stos
jecxz
mov
frstor
jb
aad
arpl
xor
popl
xor
inc
stc
push
inc
sbb
sub
xchg
xor
ss
mov
mov
inc
adc
cmp
mov
adc
mov
aad
repz
jg
lret
sbb
sti
jl
popf
lods
js
xchg
pop
xchg
addr16
push
es
push
data16
addr16
shll
mov
fidivrs
push
fisubrl
movsl
push
xor
sbb
or
in
sbb
es
jg
mov
fnsave
mov
sti
dec
addr16
sbb
sub
and
cmp
cltd
and
cmp
inc
and
sbb
ds
fcomip
mov
test
data16
pop
fwait
dec
enter
pushf
dec
mov
movsl
aad
addl
repz
cmp
fadd
pop
or
push
aas
dec
enter
call
loop
sbb
faddl
rcr
push
mov
and
mov
and
imul
add
ffree
jmp
sbb
cmp
stos
jl
pop
cmp
test
into
fimull
sbb
cmp
ds
ss
mov
xchg
stos
cmp
repnz
xchg
call
cmp
insl
sahf
mov
arpl
xor
sub
xchg
xchg
jl
jnp
cmp
xchg
sbb
scas
adc
pop
sub
lea
mov
pop
jne
leave
das
cvtps2pi
test
and
inc
aam
cli
addr16
jp
pop
jo
xchg
jge
push
cmc
adc
mov
jg
push
and
rcrb
sbbb
shl
shlb
xor
cmpsl
out
test
adc
and
test
shll
adc
lods
mov
je
sahf
mov
adc
push
out
sahf
pop
inc
in
out
lds
fstl
ffree
pop
jmp
sub
loop
mov
xor
stos
lock
fcompl
test
out
and
cmp
add
data16
push
fisubrl
rclb
xchg
xlat
push
sahf
jb
clc
mov
mov
stc
aas
loop
push
inc
dec
cmp
out
sbb
cmp
jo
pop
shlb
fstpl
aad
test
les
ljmp
pushf
loope
adc
cmp
mov
mov
sub
test
loop
xor
add
add
mov
lods
test
mov
loopne
push
mov
rcrl
sub
jle
cmpsl
scas
sub
jne
mov
jo
push
jnp
pop
out
das
pop
or
dec
mov
cmp
leave
mov
les
repnz
stos
jge
jb
jbe
push
loopne
adc
adc
xor
xchg
or
out
inc
ljmp
jge
testl
std
fnsave
or
adcb
inc
aas
outsb
jbe
fidivrs
xchg
adc
inc
inc
sbb
fs
loopne
test
push
xchg
and
psubb
pop
xchg
xchg
sub
push
div
sti
imul
enter
mov
dec
cmp
lock
dec
inc
js
imul
pop
stc
inc
lcall
mov
add
jecxz
test
scas
pop
test
add
xor
shll
iret
rorl
jl
popa
jbe
popf
sub
xchg
jno
mov
das
aam
mov
repz
mov
nop
or
mov
fwait
jne
imul
arpl
mov
shl
push
lcall
pop
frstor
jle
incl
fstpt
fildll
xchg
out
jo
mov
mov
pop
adc
int3
je
fcomps
adc
push
movsb
dec
pop
loope
jle
cmp
or
push
aas
cmp
cmp
and
jns
add
mov
pop
leave
xor
mov
xchg
push
jne
pusha
faddl
sub
cmc
sub
mov
push
cmp
sub
jns
push
rol
lods
jg
xor
les
inc
imul
pop
roll
xchg
mov
mov
out
mov
push
sub
ja
pop
test
lds
jo
lahf
bound
fs
inc
data16
jnp
mov
mov
push
mov
rcl
fs
out
sbb
push
mov
dec
xchg
imul
pop
sub
lret
enter
cmp
and
shl
loope
pop
push
mov
inc
mov
sahf
dec
stc
pusha
stc
xchg
fwait
repz
mov
fwait
scas
ljmp
loop
sub
mov
mov
fists
adc
xchg
mov
sub
or
mov
gs
cmp
inc
stos
inc
and
jb
aas
push
out
mov
xchg
daa
test
mov
icebp
or
mov
stos
movsl
jbe
push
test
xor
adc
mov
jno
or
jge
test
mov
fsubrl
rcrl
fimull
std
adc
fisubs
fisubl
cli
pushf
cmc
xor
mov
ds
pop
cmp
sub
xchg
andb
fmull
jmp
inc
sub
xor
mov
push
inc
mov
jl
sub
addr16
jo
push
daa
mov
xchg
mov
pop
mov
andb
sub
cmp
insl
je
push
inc
mov
jbe
xor
sub
adc
push
in
and
xor
jp
je
decl
inc
sub
sbb
in
aas
ret
int3
arpl
cmpsl
xor
ljmp
or
les
sub
mov
test
push
pop
jbe
mov
shll
fwait
roll
out
mov
insl
add
jp
push
mov
add
dec
inc
fidivs
mov
push
sbb
data16
repnz
sub
test
pop
icebp
inc
mov
adc
pop
nop
adc
add
or
mov
mov
jmp
push
inc
xlat
jecxz
and
xchg
out
push
fwait
in
or
jo
adc
xchg
mov
jbe
push
adc
and
jp,pn
cmp
add
inc
jo
sbb
fidivrl
push
pop
mov
mov
daa
stos
test
pop
or
lea
in
adc
stc
nop
mov
movsb
pop
sub
in
add
mov
mov
dec
push
jge
jbe
in
add
ret
addb
and
pop
data16
mov
popa
mov
dec
popa
pop
xchg
test
inc
jae
cmp
mov
and
jmp
out
inc
mov
or
lcall
subb
pop
sub
insl
js
dec
pop
dec
pushf
call
cs
loope
leave
add
mov
lods
imul
push
mov
das
lea
ja
mov
bndldx
or
xorl
out
lds
adc
pop
stos
gs
mov
fistpll
arpl
fsubrl
cmp
pusha
mov
xor
rcrb
dec
aam
mov
es
dec
loop
xchg
xor
arpl
jp
or
pop
jg
fnstsw
xchg
add
lret
push
shl
adc
andl
imul
shl
dec
or
jge
dec
jnp
mov
loopne
fistpl
mov
loope
out
fsub
inc
fcomps
lock
jle
cmp
bound
aas
mov
pop
fs
xchg
insb
int
mov
pop
scas
add
popa
test
dec
xchg
jno
and
lahf
jb
dec
decb
lock
mov
sub
lret
in
lock
mov
imul
xor
jno
scas
outsl
mov
dec
xchg
aas
fsubrs
pop
and
sub
bound
mov
and
and
test
inc
aad
rcr
sbb
aam
into
mov
lods
mov
sbb
pop
sub
icebp
jae
sub
fstp
call
out
gs
mov
mov
aas
push
sub
cmp
and
inc
sbb
or
push
xchg
sub
jle
mov
addb
sbb
aaa
adc
xor
iret
cmp
outsb
add
xlat
mov
and
sbb
fld
adc
in
sub
push
sub
mov
aad
fldl
jp
int
sub
loopne
and
mov
inc
or
and
xchg
mov
and
mov
mov
decl
xor
mov
xchg
mov
mov
xor
pusha
mov
sti
fistpll
cmpsl
cmp
and
roll
insb
sub
test
cmp
enter
mov
jno
scas
bound
imul
push
test
push
jp
mov
pop
jecxz
adc
lock
jo
clc
xchg
mov
and
inc
stos
call
add
push
repnz
sbb
add
jge
fstpt
sarb
shrb
or
mov
ret
xor
lcall
stc
cmp
sbb
icebp
jg
ja
fstps
push
add
je
daa
cmpsb
add
mov
lods
int3
pop
js
arpl
jp
cmp
inc
mov
dec
loopne
xor
inc
push
sub
mov
push
shlb
pushf
pop
scas
mov
adc
jbe
es
sti
or
dec
xchg
sahf
aas
insl
jl
dec
and
fldcw
adc
aam
fbstp
js
in
outsl
popf
popa
cs
movsb
dec
movsl
mov
fldcw
cs
rol
dec
dec
popa
mov
outsb
dec
aas
aad
nop
fisttpll
xchg
jnp
pop
lods
mov
loopne
lods
push
pop
lret
mov
in
out
in
push
aaa
mov
jae
add
mov
xchg
test
test
jne
dec
sbb
loop
xor
shrb
fcompl
or
rcrb
jne
and
fistps
pop
lret
pop
or
cmp
movsl
repz
bound
mov
leave
rclb
pop
inc
out
inc
and
inc
pop
push
repz
pop
push
add
add
dec
movsb
test
sti
pop
ss
popf
jo
sub
jecxz
stos
notl
fldl
imul
sbb
mov
out
xchg
fsubs
or
sbbl
xchg
clc
jg
jecxz
jns
xchg
jns
push
nop
lret
loope
xchg
cmp
cmp
inc
out
mov
orl
imul
jns
or
push
push
mov
popf
sub
stc
jae
dec
jne
cmp
add
rorb
pop
mov
lods
bound
mov
fsubr
nop
dec
inc
cmpb
mov
mov
cs
add
je
sub
out
pusha
add
rorb
ds
loope
push
cmp
cmp
pop
in
push
rcrl
sub
call
mov
call
int3
pop
int3
push
testl
cmp
jg
adc
adc
lods
inc
and
sti
fildl
fucomp
inc
int
test
lret
addr16
insb
stos
pop
add
push
dec
pop
insb
aam
mov
mov
cmp
xor
mov
dec
ja
cmpsl
xchg
rol
cmp
or
xor
scas
dec
push
scas
jae
push
jno
sub
jp
mov
sbb
test
inc
pop
mov
push
lods
pop
call
xor
fdivrl
and
mov
cltd
ds
xchg
pop
lcall
sti
sbb
loopne
or
adc
les
mov
icebp
adc
shlb
mov
clc
mov
test
inc
fidivrl
push
push
test
daa
dec
popa
pop
movsl
mov
push
sub
dec
lea
repnz
inc
sbb
std
cltd
inc
cmp
adc
pop
or
push
bound
ja
shl
pusha
and
aas
imul
aam
mov
pop
inc
lahf
mov
dec
push
mov
idivb
fisubrl
popa
or
inc
jmp
cmp
push
add
filds
outsb
xor
loopne
pop
push
sbb
inc
add
pop
in
pop
dec
push
nop
outsl
daa
mov
push
xor
cmc
and
xchg
mov
inc
jnp
div
lds
sbb
js
loope
rol
sbbb
jecxz
and
mov
shll
gs
mov
out
sbb
sbbl
mov
inc
rcll
out
loop
xchg
dec
xor
and
shl
sub
ret
inc
stc
fldt
sbb
addr16
or
inc
mov
decl
and
nop
lea
inc
adc
add
aad
inc
mov
scas
andl
cmp
testb
sub
insb
cwtl
das
mov
dec
mov
cmpl
movsb
rolb
pop
bound
jecxz
flds
xor
push
mov
pop
jno
jge
jnp
sub
sti
push
rcrl
push
dec
loope
mov
pusha
xor
dec
mov
sti
icebp
mov
ficoml
test
jge
in
or
xchg
pop
mov
rcrl
lea
adc
or
push
dec
in
pop
cmc
loopne
repnz
push
mov
scas
in
fldl
sti
ljmp
shll
stc
sbb
push
movsl
cmp
fbstp
roll
mov
cwtl
mov
pop
testb
stos
jno
jge
cmp
pop
add
or
jl
xor
iret
scas
aaa
push
or
shr
pop
movsl
cmp
mov
loopne
xor
jns
enter
pushf
roll
mov
push
roll
fdivrp
shrl
jbe
add
jne
dec
cmpsl
pop
pop
mov
jnp
and
int3
dec
leave
push
in
lcall
mov
mov
jbe
dec
das
or
mov
push
hlt
lret
jo
movsb
sarb
cmpl
loope
mov
jle
enter
sub
mov
loopne
cld
jl
cs
scas
stos
jl
lcall
mov
fwait
cmpsl
test
scas
push
xlat
or
sti
shrb
xor
es
shl
decl
cmpsl
andb
mov
push
fs
clc
inc
and
daa
xor
mov
add
or
shrl
sub
sub
add
adc
dec
out
into
mov
test
leave
je
dec
div
pop
lret
int3
lds
cmpsb
dec
and
and
in
cwtl
sub
pop
mov
mov
in
or
add
ds
cmp
mov
adc
mov
cmp
pop
imul
push
add
or
cld
sbb
outsb
out
jg
pop
mov
jmp
int
nop
push
cld
std
scas
lcall
inc
idivb
cmp
push
outsb
data16
scas
imul
cmp
popa
xchg
xor
pop
shrl
enter
movsl
ret
pop
insb
adc
xor
aad
je
mov
xchg
add
mov
repz
test
ret
fstl
push
stos
xchg
dec
jne
in
xor
dec
pop
aas
ficoml
loope
dec
push
mov
adc
popf
or
inc
xchg
std
xchg
push
movsb
dec
jne
cmpsb
cmp
push
sub
and
mov
repz
out
cmpl
fbld
sbb
add
mov
in
loop
mov
mov
mov
outsl
mov
mov
push
inc
sbb
cs
fisttpl
ljmp
xchg
jge
lret
nop
mov
adc
dec
pushf
scas
dec
ljmp
aas
stos
stos
pusha
ljmp
mov
push
lcall
mov
xor
and
das
insl
sahf
cmp
push
gs
pusha
out
int3
cs
cmp
mov
std
mov
sub
aaa
ja
push
pop
mov
mov
stc
xchg
sahf
cs
cmpsl
mov
orl
fisubl
sbb
mov
fs
mov
jp
sub
shlb
mov
cmp
push
jmp
arpl
sub
jp
push
mov
cli
push
cmp
pop
add
dec
sarl
jno
inc
mov
loope
and
sub
push
cmp
lcall
lds
xchg
mov
or
sbb
test
out
rclb
and
lock
jl
lret
lcall
loopne
sbb
mov
mov
dec
cmp
lret
rclb
stos
xchg
xchg
test
lods
or
rclb
jne
xorl
pop
jnp
adc
cmpl
sub
mov
adcl
cmp
or
sub
loop
push
imul
fstpt
push
dec
add
cltd
push
lods
mov
imul
sahf
insb
pop
jecxz
shlb
adc
xor
mov
ret
mov
mov
aam
in
daa
push
jecxz
test
push
xor
in
xor
pop
jmp
pop
sub
cmp
mov
orb
ja
stos
jg
mov
cmpsl
sbb
loopne
aaa
cwtl
adc
jb
xchg
sub
jmp
mov
mov
mov
dec
or
xchg
push
push
js
mov
ret
mov
ret
loop
lods
mov
fnsave
into
sbb
inc
ss
cld
xchg
std
add
lea
iret
fdivs
fstpl
sub
push
mov
dec
push
and
aam
js
adc
pop
std
push
popf
lods
test
sbb
nop
sahf
aaa
jbe
mov
mov
dec
sub
lds
lcall
outsl
ss
pop
pop
mov
pusha
in
jl
cmp
pop
add
aad
lods
scas
call
nop
call
scas
inc
sub
add
test
ret
or
jne
add
stos
repz
fwait
cmpsl
dec
mov
and
dec
jg
daa
enter
mov
jnp
xchg
jns
or
lea
fidivl
in
mov
ljmp
mov
fs
or
dec
mov
fwait
nop
push
push
pushf
mov
stc
inc
repz
shll
cmc
fadd
jmp
xchg
xchg
mov
aam
shll
adc
insl
jns
xor
scas
lock
lods
pop
mov
mov
push
test
push
xchg
xor
mov
cmp
lret
sub
nop
xor
jo
mov
dec
stc
or
outsb
je
pop
repz
or
rol
jecxz
daa
and
fs
jle
inc
bound
hlt
mov
shl
inc
das
sahf
mov
cmpl
sbb
adc
jle
pop
ss
xor
mov
cwtl
and
gs
test
andl
out
dec
lret
rolb
push
xor
in
das
cmpsb
cmp
ret
in
xlat
fdivrs
hlt
mov
xchg
lahf
add
outsl
pusha
jg
cli
insl
pop
sbb
dec
push
dec
loopne
xor
mov
push
adc
inc
xchg
repnz
jecxz
xchg
cs
shrl
mov
sbbb
outsb
lds
xor
adc
push
sub
scas
inc
in
push
in
xchg
fdivrl
aad
out
lcall
mov
xor
test
mov
mov
xchg
or
es
test
jae
enter
jae
orl
imul
addb
jo
mov
rorl
inc
jle
sbb
into
cmp
loope
shrb
test
push
jg
mov
xor
add
dec
xorl
aad
popa
outsl
push
mov
scas
out
cwtl
and
and
nop
pop
sbb
dec
adc
push
dec
sub
in
pop
ret
gs
xor
inc
aam
in
shlb
cmp
nop
adc
inc
movsb
pop
movsl
xchg
xor
jns
add
push
fistpl
js
popa
push
test
jbe
push
outsl
xor
shrl
xor
xlat
mov
mov
popa
mov
xchg
fstpt
push
or
cmp
xor
lcall
xor
mov
outsb
out
jb
and
mov
xchg
mov
std
mov
and
out
cwtl
test
adc
mov
mov
push
pusha
xor
shl
mov
enter
inc
aad
roll
iret
pop
movsb
adc
out
bound
in
sti
es
lret
lods
test
in
nop
pop
jnp
mov
rcl
andl
bound
mov
inc
gs
push
pop
icebp
test
mov
cmpsl
add
add
pop
imul
mov
aas
xor
mov
pop
xchg
cmp
jo
fwait
pop
in
sub
gs
adc
and
add
mov
lea
xor
xchg
mov
int3
arpl
push
pushf
dec
and
sbb
jno
loope
mov
shl
ror
cmp
ret
xor
cmp
inc
cld
ljmp
call
mov
mov
insb
sbb
and
mov
stos
ret
or
push
cmpsb
cmp
dec
sbb
adc
adc
add
xchg
mov
push
imul
clc
out
shl
leave
mov
stos
inc
fists
adc
insb
add
adc
lock
mov
imul
jecxz
and
xor
mov
mov
sbb
push
fwait
and
ljmp
mov
dec
repnz
int3
fdivp
pusha
sahf
clc
adc
cs
insl
sbbl
xor
sbb
and
sbb
jae
adc
jns
es
cmp
fstl
adc
dec
pop
add
movsb
adc
test
xchg
mov
sahf
jae
sbb
or
stos
push
leave
call
insb
mov
dec
movsb
push
pop
notl
leave
xor
out
mov
jbe
pop
jns
mov
mov
ds
enter
mov
sbb
mov
fs
popa
xor
jnp
lret
outsb
mov
fdiv
lods
nop
push
fdivrs
or
sub
pop
sbb
fisubs
sub
divb
bound
jno
inc
pusha
loop
ss
ffreep
repnz
mov
xor
cmp
dec
shrl
add
lret
xchg
shrl
jecxz
fs
xchg
cld
imul
xchg
dec
add
orl
add
add
xchg
xlat
and
mov
xor
addl
addl
cmp
adc
lods
fdivl
mov
cmpsl
gs
insb
xchg
inc
mov
in
mov
scas
rcr
lock
lret
pop
icebp
sahf
xchg
mov
pop
daa
cmp
cmp
pop
test
add
jbe
mov
xchg
fsubp
movsb
jnp
je
cmp
add
mov
mov
sbb
pop
sbb
mov
push
ss
sub
shlb
sub
inc
or
adc
add
xor
or
lods
sub
dec
int
out
mov
hlt
in
shll
jno
xlat
mov
fxrstor
imul
pushf
imul
mov
addl
std
rolb
movsl
nop
push
nop
arpl
mov
imul
mov
imul
aas
xchg
test
adc
jno
jp
xchg
add
jp
mov
shlb
xor
popa
stos
rclb
aas
in
xchg
jns
pop
insl
adc
aaa
sub
adc
jp
shlb
pop
sub
stc
add
xorl
cld
aam
and
jbe
les
and
cmp
popf
pop
sbb
adc
mov
sbb
out
and
aas
mov
scas
and
mov
jnp
jbe
pop
pusha
and
cmp
inc
in
mov
mov
lods
mov
jecxz
cs
pop
test
add
sub
and
or
cmovnp
ja
sub
popf
sub
leave
sahf
xchg
mov
dec
arpl
pop
jno
jmp
outsb
adc
nop
mov
ss
ds
test
cmp
sbb
dec
leave
fdiv
mov
push
dec
loope
xor
cmpsb
popa
jb
jo
or
adc
fisttpl
test
jns
sub
scas
inc
xchg
int3
icebp
mov
sarl
push
std
rolb
push
cmp
jbe
shrb
pop
cmp
mov
mov
adcl
jecxz
jg
pop
ffree
adc
adc
xchg
clc
test
loope
outsl
daa
mov
ret
scas
je
push
mov
adc
sub
xchg
cmp
add
je
mov
notb
outsl
jo
lahf
mov
shrb
sub
cld
mov
sub
repz
lahf
out
int
adc
ljmp
movsl
jno
sbb
xchg
xchg
push
push
js
arpl
daa
mov
stos
aam
fildl
aas
dec
cli
sbb
pop
es
cli
imul
or
xor
out
data16
inc
add
xor
xchg
cs
add
xor
pushw
pop
mov
inc
aaa
lret
cli
xor
fs
push
or
mov
mov
xchg
test
add
hlt
cmpsb
jne
outsb
comiss
andl
arpl
jl
push
sub
cmpsl
push
int
mov
push
popf
xor
jno
lcall
cwtl
stos
int3
mov
je
pop
or
or
das
inc
lods
das
ficoms
lret
mov
xor
adc
sub
repz
pop
gs
fisubrl
movsb
mov
mov
lahf
sub
push
dec
pop
mov
test
cmp
push
jmp
xchg
mov
adc
add
cmp
ljmp
add
pop
andl
push
pop
cmp
call
or
xchg
test
and
movsl
sbb
es
mov
push
repz
loope
fsubrs
into
adc
lcall
jbe
arpl
lods
xchg
incl
sub
pop
add
inc
subl
cwtl
pop
in
dec
ficompl
pop
mov
cmp
jge
sarb
gs
sub
add
jne
jae
push
mov
and
jb
bound
pop
mov
jo
mov
push
xor
or
or
out
icebp
ds
pop
int3
pop
loop
add
xchg
add
mov
push
sub
bound
in
xlat
aaa
stos
insb
sbb
pop
rcrl
lcall
loop
mov
inc
pop
icebp
jno
xor
mov
stos
adc
jmp
test
mov
xor
mov
and
mov
rcrb
pop
lock
adc
fadds
add
xchg
movsl
and
sub
or
cs
loope
daa
adc
in
push
xor
jmp
lock
inc
mov
jns
mov
out
inc
sti
pop
jne
jne
xchg
or
mov
jno
add
and
out
xor
xlat
xor
scas
lret
push
loope
fbstp
orl
sbb
mov
adc
pop
mov
cmp
jne
js
lahf
insl
nop
test
jo
add
push
stos
pop
into
stos
lods
or
xor
js
inc
pop
sub
fstpl
cwtl
xor
and
push
in
xchg
push
sub
mov
test
mov
lock
add
daa
push
mov
hlt
mov
xlat
adc
cmp
sub
push
mov
stos
sub
jle
xor
xchg
test
xchg
xchg
xor
jmp
mov
dec
jle
test
cmpsl
cmp
ss
sub
testl
jge
and
xor
xchg
pop
pop
and
add
es
outsl
or
ss
hlt
push
out
test
stos
out
cmp
dec
xchg
cmp
ret
pop
adc
repz
les
add
cwtl
sub
or
push
lds
inc
loop
push
dec
insb
pop
jae
call
xchg
add
and
lahf
notl
and
imull
sarb
push
in
add
aam
mov
sub
leave
adc
int
js
and
add
mov
push
add
mov
lock
mov
jge
lock
cmp
addl
inc
call
pop
adc
jbe
xchg
daa
mov
adc
inc
in
mov
dec
ficomps
dec
addr16
xchg
push
jle
push
add
mov
test
nop
fstpl
notb
ss
or
jmp
pop
in
ljmp
lods
xchg
lea
mov
push
sti
outsl
daa
mov
or
add
scas
outsl
push
inc
arpl
les
inc
fnstcw
aaa
cltd
pop
ljmp
jno
insl
push
nop
fldl
test
xchg
mov
data16
or
xor
pop
cmpsb
add
cld
imulb
add
lods
inc
lds
mov
and
imul
add
xchg
lods
mov
xchg
pop
mov
subl
xor
insb
ret
xchg
xchg
pop
xor
push
sub
test
outsb
outsl
lock
repz
xlat
test
movsb
sbbb
xor
adc
mov
inc
lcall
push
jns,pn
mov
xor
mov
or
loope
lret
xchg
add
push
push
popf
push
pop
adc
dec
mov
pop
jmp
sahf
mov
repz
mov
dec
inc
push
outsl
ret
fcmovne
xchg
sub
enter
push
inc
fldl
mov
pop
or
mov
imul
in
add
repnz
cmp
and
sahf
cli
cltd
aas
xchg
mov
enter
push
mov
fs
push
push
jbe
gs
xchg
sbb
test
mov
das
das
jae
pop
jb
popf
insl
add
test
cmp
sti
cmp
in
outsb
mov
into
xchg
mov
pop
add
xlat
mov
mov
add
fs
or
and
cmpsb
pop
inc
push
push
out
mov
fbstp
or
inc
in
in
ds
jecxz
clc
ret
std
pop
ret
push
sahf
xchg
ficoml
ja
pop
lods
out
cld
push
dec
jb
adc
mov
fidivl
or
out
pop
mov
mov
fists
cmp
and
sbb
ljmp
lahf
or
in
es
or
cltd
outsb
and
dec
fisttpll
pusha
cld
inc
aam
aad
andl
jg
fldcw
sti
movb
push
or
ja
add
pop
sub
aas
mov
insb
punpckhwd
inc
lea
sub
in
aam
mov
add
call
xchg
in
or
mov
ss
jno
ss
repnz
sahf
jne
push
pop
notl
push
pop
shlb
loope
jbe
sub
or
and
xchg
mov
sbb
add
ffree
setns
add
insb
jle
push
xchg
sub
scas
xchg
inc
ret
cli
leave
inc
cwtl
jae
hlt
push
push
sbb
push
adc
repnz
aaa
in
xchg
mov
lahf
jl
xchg
jo
cmc
rcrb
push
jae
or
or
or
jne
inc
push
jecxz
dec
out
jns
xchg
in
sbb
mov
test
rcll
push
pop
or
je
push
movsl
cmc
ucomiss
into
mov
pop
add
aad
in
xlat
sbb
cmpsb
imul
mov
call
cmc
add
xchg
loop
mov
aad
cmpsl
dec
insl
jl
fidivrl
mov
loope
mov
ljmp
sub
hlt
jae
or
push
jb
test
data16
jmp
xor
add
mov
iret
push
hlt
ret
leave
dec
and
cmc
into
out
xchg
sub
lock
lods
cmp
xor
dec
push
lds
mov
push
mov
in
push
mov
lret
popa
push
jmp
inc
pop
xchg
imul
xchg
cmc
mov
push
or
cmp
mov
sbb
mov
jecxz
dec
pop
push
movsl
add
mov
jbe
data16
push
test
or
cs
mov
out
pop
sub
ja
mov
inc
int
mov
dec
sahf
aaa
jnp
in
add
xchg
out
cmp
test
and
inc
aas
jb
or
insl
scas
mov
in
shl
xchg
xor
stos
dec
jp
or
dec
or
inc
out
bound
xchg
xor
daa
jl
jbe
in
test
sahf
sub
rcrl
dec
fs
movsl
adcb
sarb
add
pop
mov
jl
iret
cmp
adc
xchg
or
out
mov
push
ja
fistpll
xor
push
pop
pop
insl
add
mov
push
in
and
dec
push
push
fidivs
push
xchg
inc
mov
decb
xor
or
test
movsl
pop
insl
dec
adc
sub
sub
loopne
cmpsl
xor
mov
enter
rol
jecxz
rorb
jae
mov
insb
lods
cli
icebp
arpl
outsb
outsl
mov
data16
cltd
scas
test
popf
xlat
jb
pop
movsb
hlt
mov
and
push
data16
out
dec
push
stc
jae
out
jmp
inc
mov
mov
ss
pop
das
dec
mov
jle
xor
mov
fstpt
in
in
sbb
cmp
push
lcall
nop
fcomps
daa
push
and
lret
push
gs
jmp
add
outsl
les
testb
lds
negb
pushf
push
pop
test
cmp
jno
dec
das
repnz
mov
jp
inc
daa
pop
and
loope
adc
mov
mov
dec
clc
or
mov
into
or
jecxz
into
insb
lret
cmp
pop
push
push
push
mov
mov
lds
push
inc
dec
in
push
stc
in
inc
sbb
loopne
pop
sbb
es
lea
dec
or
or
xchg
daa
push
jbe
into
in
jbe,pn
push
dec
cltd
mov
mov
pop
mov
outsl
adc
addl
sbb
jb
je
insb
vfmsubadd213pd
or
nop
stos
jecxz
mov
je
fwait
aaa
inc
xchg
aad
cli
sub
mov
rolb
movsb
into
rolb
call
and
jl
sti
xchg
mov
pop
xchg
jecxz
jns
sarb
push
add
fwait
lret
sub
jbe
sub
cmp
loopne
gs
out
mov
adc
mov
outsl
jnp
ret
and
xchg
sti
cmp
mov
or
xchg
int
xlat
data16
or
cmc
xor
sub
push
jno
in
mov
mov
adc
movsl
xor
jns
dec
pop
hlt
pop
out
xchg
movsb
out
decl
push
add
pop
adc
xchg
mov
inc
ret
cltd
jbe
test
mov
cli
sbb
add
jge
movsl
ds
sbbl
arpl
pop
scas
xchg
outsb
push
sub
test
push
int
shll
push
sub
adc
push
and
xchg
out
fbstp
mov
daa
dec
and
sbbl
nop
add
gs
inc
out
pushf
or
stc
popa
push
add
stos
cmp
nop
pop
movsb
inc
inc
and
dec
loopne
xchg
add
sub
repz
lret
fstpt
push
dec
lock
stos
jns
fcomps
xor
lahf
pop
in
icebp
inc
loope,pt
adc
in
sbb
xchg
gs
sub
sub
mov
push
shl
cmpsb
icebp
js
dec
and
js
ds
call
das
nop
popf
mov
imul
test
mov
and
out
adc
insl
movsl
sub
mov
aas
dec
ret
push
out
xchg
cld
cmp
and
sbbl
mov
stos
xor
int3
sub
and
jge
inc
in
sbb
mov
mov
sub
inc
mov
mov
popa
clc
int
icebp
mov
roll
mov
mov
push
testb
pop
cwtl
arpl
xchg
push
xor
jp
out
das
inc
sbb
add
bound
inc
fsubrs
je
enter
sub
add
out
fbld
push
push
mov
inc
nop
lods
js
push
in
push
dec
and
jno
sbb
mov
clc
adc
rclb
push
jb
repnz
fidivrs
out
gs
int3
ljmp
mov
int3
pusha
aad
xlat
push
cltd
ret
and
jo
test
pushf
test
xchg
cmp
cmpsl
popa
sbb
fnstcw
pusha
sub
lds
mov
xchg
sbb
pop
dec
or
mov
cmp
imul
xor
adc
fwait
iret
gs
lock
adc
ret
mov
cs
movsl
std
dec
pusha
das
add
lret
jle
inc
pushf
scas
xchg
lcall
stos
outsb
mov
idivb
int3
aas
dec
sti
insb
out
mov
sub
dec
push
add
gs
dec
incl
xlat
push
fdivr
jg
cld
add
sbb
xor
inc
xor
rcr
repz
xlat
outsb
cli
pop
and
cmp
mov
test
xor
cmp
push
pop
push
shlb
adc
cmp
das
pushw
loope
lods
lds
add
test
dec
out
adc
xchg
mov
insl
jge
mov
ret
jbe
movsb
push
mov
mov
daa
jmp
lea
and
mov
js
and
or
sahf
jno
mov
sbb
pushf
daa
add
or
dec
jno
ret
inc
test
pop
sub
adc
inc
inc
push
mov
inc
sub
inc
pusha
push
xor
mov
in
xlat
loop
in
hlt
mov
or
call
dec
push
inc
call
cmpsb
xchg
ljmp
out
push
sub
fbstp
mov
sbb
mov
xchg
hlt
mov
jo
pop
hlt
mov
jg
test
insl
shr
jp
xchg
adc
gs
int3
pop
sbb
jne
cmp
popa
stc
test
int
dec
xor
sbb
jo
sub
mov
jnp
mov
mov
loopne
lods
adc
scas
out
addr16
adc
loop
jo
lea
add
or
cmp
call
or
bound
xchg
js
xor
loope
cli
nop
cmp
xor
push
adc
jnp
test
mov
int3
xchg
sbb
in
jno
adc
dec
lods
add
fcmovne
popf
fs
sbbl
aam
mov
push
test
sahf
ret
movsb
gs
adc
jb
push
in
push
pop
iret
stc
push
js
xlat
push
sbb
vmulss
lret
cltd
mov
xor
mov
and
jl
jge
fwait
push
int3
and
mov
push
dec
push
pop
xchg
lods
jno
dec
aam
jle
ret
push
fwait
jae
pop
hlt
and
iret
mov
adc
lods
ret
ret
jg
out
pop
scas
incb
sub
dec
sub
imul
leave
mov
mov
roll
icebp
std
jno
sub
dec
popa
add
pop
jecxz
cmp
pop
add
jbe
cmp
out
jmp
outsl
lea
push
mov
in
fistl
inc
xchg
push
xchg
shll
adc
mov
cli
xor
lds
les
fabs
arpl
cld
aaa
into
sub
test
pop
mov
cmpsl
ds
pop
or
lds
pop
ljmp
movsl
and
mov
sti
adc
xchg
out
cmp
ds
pop
sub
movsl
cs
push
xlat
sarb
btr
insl
das
cmpsb
or
jb
adc
fiadds
ret
cmovp
sti
hlt
sbb
scas
sub
movb
pop
or
or
gs
mov
in
pushf
pop
push
out
test
arpl
jecxz
mov
push
sub
out
lea
jne
fcompl
add
push
std
hlt
and
rorl
cmpsl
shlb
int3
jo
sub
push
ljmp
outsb
and
add
inc
adc
aas
mov
or
stos
movsb
sub
iret
repnz
xchg
jl
lods
adc
mov
mov
scas
es
and
xchg
xor
shlb
mov
test
inc
fdiv
xchg
addb
adc
pop
cmp
nop
dec
fcmove
fdiv
pop
pop
insb
cltd
add
inc
lods
mov
mov
adc
pop
scas
cmp
mov
and
sahf
js
int
fwait
cltd
and
in
xor
add
inc
rolb
fwait
lcall
mov
adc
pop
cwtl
xchg
lret
lock
in
sbb
or
pushf
pop
jmp
rcrb
mov
movsb
je
pop
or
or
repnz
xchg
call
push
push
pop
inc
fimuls
xchg
sbb
in
gs
cmp
mov
xchg
xchg
popf
and
psubsb
xchg
jb
leave
stos
js
xchg
scas
cmc
shrl
mov
push
push
fstl
add
scas
xchg
cltd
mov
rol
stos
sub
xlat
aad
and
sti
dec
xlat
dec
insl
lds
bound
popf
sbb
mov
dec
out
fidivrl
ror
popa
or
adc
and
or
repnz
and
add
faddp
out
fbstp
movsb
in
sub
lods
outsl
and
roll
repnz
mov
lds
inc
fimuls
leave
fdiv
in
int3
adc
or
sub
jecxz
mov
cwtl
sub
mov
mov
stos
xchg
mov
pusha
call
leave
imul
inc
jnp
aas
into
jle
sbb
out
mov
mov
cmp
loope
jle
add
mov
sbbl
xchg
pushf
xor
xchg
pop
mov
xlat
and
sub
xchg
mov
or
jnp
loopne
xchg
in
call
popa
sbb
or
cmp
jnp
mov
shlb
push
pop
adc
mov
ja
adc
hlt
or
inc
dec
pop
test
fidivs
iret
dec
adc
xchg
mov
stos
ret
lods
jl
shrl
xchg
imul
xor
clc
pop
pushf
cli
adc
pop
xor
adc
jbe
test
into
xor
pushf
iret
inc
jno
jg
jecxz
rolb
dec
inc
xor
inc
push
and
mov
xor
andb
xchg
xchg
inc
ret
jnp
xor
or
mov
in
bound
imul
loopne
rolb
sahf
or
inc
cwtl
out
das
mov
mov
mov
iret
orb
or
sub
cli
push
orl
mov
sub
and
sti
push
fmull
sub
js
pop
mov
xlat
mov
xchg
push
movsl
or
xchg
popa
ds
pop
xchg
dec
adc
sarb
rolb
xor
add
push
or
push
mov
push
mov
dec
dec
xor
lock
or
das
xchg
test
divb
fwait
inc
lods
rcrb
cltd
loopne
nop
push
push
cmpsl
subb
pop
xor
pushf
cmc
mov
adc
aad
insb
imul
das
pop
dec
outsb
sub
insl
add
pop
scas
ret
pop
andl
sbb
es
lds
popa
das
mov
cmc
push
or
sbb
and
and
enter
jp
push
roll
adc
fsubrp
mov
jecxz
mov
fnsave
outsl
cmp
cmp
clc
xlat
jo
repz
jne
xor
mov
sbb
inc
addr16
ja
sbb
pushf
xorl
mov
cwtl
sub
leave
sarl
outsb
pop
or
sub
and
stos
call
mov
leave
mov
adc
data16
push
and
or
sbb
cmp
movswl
outsb
push
je
adc
stos
rcl
shlb
jnp
sbbl
dec
pop
push
in
iret
jmp
and
mov
ljmp
xchg
and
jno
xchg
sub
push
jmp
shll
or
movsb
and
call
daa
add
jae
arpl
mov
add
mov
jae
fisubrl
xchg
add
add
je
push
jno
out
pushf
mov
dec
testb
inc
adc
inc
jbe
or
xchg
mov
mov
ja
push
dec
and
aam
cmc
push
call
clc
shrb
or
scas
xchg
jle
mov
pushf
push
jbe
test
xlat
ret
mov
fsubrl
push
cmpsl
mov
fildll
aas
mov
bound
aaa
jb
lock
adc
sbb
push
push
xchg
push
into
pop
jne
pop
hlt
mov
shll
ljmp
adc
mov
or
in
shrb
fwait
inc
push
xchg
out
mov
cmpsl
jl
mov
pop
in
bound
test
mov
insl
hlt
push
insb
pop
movsl
sub
jge
bound
xchg
sub
xor
rclb
stc
xchg
push
mov
mov
pop
aam
mov
dec
pop
pusha
jge
mov
bound
stos
or
imul
mov
aam
mov
repz
lock
adc
or
mov
fnstsw
sub
inc
nop
dec
jg
jecxz
inc
fadds
jo
sub
test
push
imul
lock
push
leave
xlat
imul
int
push
test
dec
mov
pusha
aam
out
out
mov
xor
pop
sbbl
int3
nop
popa
subl
xor
pop
xor
mov
or
pop
push
sbb
mov
imul
loopne
push
movsl
aas
lcall
mov
pop
subb
pusha
sub
repnz
pop
ds
insb
fistps
rcll
je
xor
push
mov
rcrl
mov
mov
cmpsl
pop
xor
dec
pusha
dec
dec
rcl
push
hlt
inc
lods
sahf
jmp
xchg
jg
mov
mov
mov
sub
inc
negl
faddp
ljmp
or
das
repnz
mov
inc
dec
arpl
sub
pop
pop
fwait
dec
inc
negb
imul
mov
mov
hlt
ds
nop
repz
sub
inc
add
jge
pushf
xor
mov
xor
in
incl
int
xchg
dec
xor
cmp
stos
lret
lret
push
mov
push
repnz
test
jp
lcall
icebp
mov
sub
mov
outsb
dec
aad
pushf
xchg
clc
jl
dec
scas
sbb
addl
adc
cltd
lods
pop
fmuls
xor
lods
xor
cmpb
mov
aam
push
mov
sub
cmp
stos
test
test
aad
adc
sub
jmp
lahf
stos
pop
cwtl
testb
jne
mov
jnp
mov
and
jb
movsl
vcvtss2sd
mov
mov
shrb
in
fbld
dec
and
push
push
out
subb
pusha
hlt
adc
js
enter
cmp
xchg
inc
gs
inc
test
lods
mov
sub
and
cmp
rcrl
shl
loop
mov
mov
cld
push
mov
insb
xchg
repnz
aam
xor
sbb
leave
dec
sbb
lcall
lods
mov
add
pop
mov
xor
dec
aaa
into
jnp
aas
stos
pushf
push
mov
xchg
lahf
aas
mov
adc
mov
mov
fmuls
cmp
scas
shlb
inc
fistl
xor
adcl
ss
cld
nop
sbb
mov
lea
sbb
stos
jge
mov
sbb
scas
cmpb
int
adc
jo
push
lea
xlat
sbb
sahf
ljmp
in
add
sub
cmp
sbb
jle
imul
pop
push
cmc
test
inc
out
xorb
sbb
es
xlat
jmp
out
pop
mov
les
dec
add
mov
push
xchg
and
jl
stos
inc
loope
in
test
xor
push
dec
pop
cwtl
repz
mov
cmp
std
mov
cmpsb
nop
mov
mov
sbb
je
push
jge
add
rorb
jo
xlat
xlat
jbe
jmp
push
mov
ret
movsl
fdivl
add
sahf
add
pop
xor
sub
js
cli
mov
addr16
dec
or
out
test
ret
mov
test
sbb
xchg
ds
sbb
add
cmpsl
push
aad
pop
xor
lods
int3
arpl
xor
pop
nop
add
sbbb
mov
addb
xchg
sbb
xor
mov
mov
xor
lret
lock
mov
push
dec
loop
dec
xchg
jmp
lds
and
repnz
mov
repnz
loope
sbb
fiadds
movsb
jge
sahf
cmp
popa
test
xchg
push
mov
test
sbb
enter
and
sub
imul
stos
jbe
cmp
add
cmp
addr16
xchg
dec
sbb
icebp
cld
push
sub
push
dec
pop
inc
sbb
xchg
nop
xlat
fidivl
mov
fisubrl
mov
add
sub
lods
cmpsb
push
sbb
aaa
add
add
push
jle
push
orl
aam
ljmp
pop
pop
ret
hlt
lahf
out
mov
mov
bound
fcmovbe
or
rclb
push
adcb
icebp
pop
push
push
bound
xchg
or
mov
inc
xor
sub
mov
xchg
dec
std
adc
int
lods
pop
inc
out
xchg
dec
icebp
call
test
adc
mov
or
cmpsb
jnp
es
test
inc
int
ja
or
jbe
xchg
push
nop
xchg
pop
imul
adc
adc
dec
and
shl
mov
je
mov
sbb
nop
fstpl
addr16
test
inc
sbb
mov
xorl
cmc
cmp
dec
dec
loop
and
test
imul
sbb
mov
sbb
sbb
aas
iret
sub
jg
mov
cs
jmp
and
push
lods
inc
lcall
mov
inc
mov
adc
mov
pop
xor
add
and
inc
dec
pop
mov
xor
xchg
mov
js
adc
movsb
mov
test
lret
add
pop
push
imul
lea
arpl
mov
lcall
lock
shr
and
pop
icebp
inc
inc
add
ss
hlt
sbb
aad
clc
mov
mov
dec
jl
icebp
test
jno
or
clc
or
leave
in
mov
or
xchg
ficoms
data16
mov
push
push
into
sub
mov
sbb
aas
inc
movsl
outsl
cs
push
cmp
or
scas
sbbl
jnp
cmp
addb
or
data16
rorl
lods
mov
push
imulb
hlt
mov
ret
sbbl
loope
mov
fs
xor
popa
repz
xor
cmp
aad
pushf
in
xchg
ret
sub
insb
pop
push
mov
scas
jge
jb
inc
jno
jmp
or
cmpsl
or
fimuls
adc
out
int
and
jp
imul
clc
and
sub
cmp
push
ret
jnp
cli
cltd
adc
inc
cltd
xchg
fimuls
pop
scas
cmpsl
pop
inc
push
dec
ds
xor
lods
jge
mov
or
xor
sbb
push
push
popa
sbb
xchg
xor
lds
dec
out
mov
cmc
loop
insl
xor
add
add
push
std
adc
scas
pop
mov
adc
inc
pop
dec
out
fpatan
dec
and
ja
pop
inc
push
pop
adc
jno
push
sub
mov
jecxz
ljmp
lods
xor
mov
dec
pop
stos
sbb
ret
jp
pop
movsl
mov
mov
inc
es
or
clc
jg
sbb
push
loop
jns
sbb
popf
arpl
sbb
pop
mov
outsb
ficoms
std
xchg
mov
pop
int3
lret
cmp
inc
jecxz
loopne
fdivrl
push
push
pushf
fidivs
ja
js
add
movsl
cmp
lods
cld
pop
filds
leave
and
push
out
movb
mov
mov
xor
stc
mov
mov
jns
movsl
push
fisubs
dec
push
jle
adc
mov
sbb
jbe
subb
mov
and
sub
mov
shr
imulb
sbb
nop
inc
xorb
add
xlat
icebp
xor
mov
mov
scas
nop
push
or
inc
jno
loope
sahf
xchg
shrl
mov
iret
jle
out
sub
jle
pop
mov
rorb
xchg
sbb
jecxz
xchg
mov
scas
jae
jbe
scas
mov
fwait
cmp
pop
lock
pop
add
lds
push
lds
pop
cmc
jbe
push
jp
jge
fdivrl
dec
mov
addl
add
ja
sub
sahf
je
movsb
nop
cltd
xchg
jnp
mov
pop
add
push
xor
add
adc
pop
xchg
push
mov
mov
setp
lock
mov
lret
rcrl
xchg
pusha
dec
fldenv
cmp
jo
outsl
xor
push
or
cmp
fimull
push
pop
or
aam
sbb
sar
fucom
test
sbb
stc
xor
mov
hlt
and
or
mov
or
xchg
adc
ficoms
insl
mov
fnstenv
jbe
or
cld
sarb
xlat
shll
es
fldcw
out
lods
dec
jecxz
xor
fs
test
pop
lods
sub
pop
push
sahf
cmp
or
in
adc
xchg
jmp
cmpsb
mov
addb
mov
stos
out
cmp
lea
or
cli
jno
mov
cmp
movsb
xchg
pop
aam
lea
jmp
or
test
mov
fcomip
lahf
rorb
shl
xchg
out
pushf
cmp
clc
lahf
jb
jae
mov
stc
fcompl
add
pop
inc
lea
jb
adc
jp
shlb
mov
mov
sbb
test
lods
dec
xor
imul
xor
fsts
int
sub
mov
daa
mov
push
xor
nop
mov
xor
inc
in
pushf
sti
fldenv
inc
int3
mov
mov
cmp
adc
pop
lods
lds
outsl
insb
jg
pop
lea
imul
test
adc
inc
cmp
enter
fs
mov
jne
adc
and
push
rorb
sub
sahf
daa
mov
aas
mov
out
dec
inc
xchg
scas
js
mov
js
pop
enter
repnz
in
jo
xchg
add
sti
orl
fsubs
ja
pop
stc
jno
das
rcll
pushf
mov
sbb
mov
mov
push
xchg
sbb
imul
fisttpl
sbb
pop
lcall
jg
and
inc
push
orl
in
push
testl
cmc
pop
mov
icebp
mov
adc
mov
cmp
pop
push
shrl
mov
cld
pop
lahf
lds
sbbb
push
inc
test
xchg
jmp
xor
or
cwtl
add
es
fcmovnbe
shrb
out
jae
xor
daa
mov
dec
lods
inc
lods
or
cs
pop
pusha
push
addr16
mov
test
mov
in
shl
mov
pop
adc
xchg
test
vpunpcklwd
into
testb
jo
and
push
adc
jns
add
das
xchg
add
push
out
inc
push
mov
xor
call
test
push
rorl
mov
out
mov
sbb
loop
lods
inc
xchg
adc
leave
xchg
pop
xchg
popa
jle
aam
push
sub
outsb
jno
sbb
scas
push
mov
es
fcmovne
jne
jge
mov
imulb
mov
fsubs
shlb
dec
and
insl
add
nop
sub
xor
mov
and
mov
add
and
adc
adc
nop
inc
add
sub
movb
test
add
pop
out
inc
push
lods
push
cmp
mov
lahf
sub
lret
jecxz
jb
movsb
add
sahf
fcmovb
out
pop
jne
inc
into
gs
dec
mov
lods
push
sub
jo
sahf
ret
push
hlt
pop
subb
or
cmp
inc
stos
cmp
inc
scas
jmp
addr16
or
add
dec
ret
or
pop
xor
sub
movsb
rorb
cmp
iret
je
mov
faddl
pop
xor
mov
mov
jge
cmp
inc
jb
loope
iret
js
inc
jno
cwtl
push
lock
pop
std
inc
xlat
in
int
push
jge
xor
jno
call
lret
shrb
xchg
dec
inc
sbb
cld
enter
cmp
cmpsl
aaa
and
jmp
stc
push
lods
imul
in
sbb
add
mov
jno
cmpsl
nop
clc
xchg
nop
inc
out
hlt
mov
fwait
notb
xchg
cs
iret
rcr
mov
and
outsl
sbb
lods
je
cli
ljmp
jo
stos
rolb
xchg
add
fistps
test
xchg
inc
cmp
mov
sbb
xor
cmp
rorl
arpl
std
ljmp
xor
jbe
jnp
test
enter
push
mov
cmpsl
mov
push
mov
cmp
mov
sbbl
sbb
ss
xor
add
test
adc
pop
hlt
or
pushf
mov
lods
xchg
and
testl
repz
xchg
sub
or
insl
xchg
sub
test
jle
sbb
inc
popa
or
stos
repnz
out
and
push
notb
sbb
jnp
sub
xor
mov
mov
push
or
jge
push
lock
ja
dec
inc
add
sti
jle
cmc
cmp
add
jl
movsb
andb
testl
sbb
add
cs
add
lea
adc
sbb
lea
cltd
mov
adc
out
pushf
scas
cwtl
in
rcl
in
std
in
clc
shlb
dec
mov
pop
pop
bound
xchg
inc
mov
out
xchg
mov
cmpsl
repnz
in
add
jmp
push
loope
subl
in
movsb
decl
mov
push
sbb
adc
leave
fsubr
or
dec
mov
nop
out
loope
mov
out
xlat
rep
or
xchg
adc
ret
jg
subb
pop
sub
dec
jmp
frstor
inc
daa
push
jo
shrl
xor
outsb
adc
lahf
clc
rcr
popa
inc
insb
rcrb
lods
ja
aaa
pop
inc
movsb
sub
jg
cmp
adc
pop
cwtl
das
rcll
mov
fs
test
test
xchg
jl
xor
cwtl
add
out
lods
in
mov
ss
xchg
stos
pop
fdivs
cmp
call
sub
and
stc
jbe
loop
xchg
push
lods
notl
lock
loopne
sti
lcall
es
xchg
pop
mov
mov
push
cltd
stc
push
push
push
bound
mov
and
pop
cmpl
stc
or
jmp
sti
sbb
mov
and
popa
add
mov
mov
popa
push
cmp
addl
pusha
idiv
jno
out
sub
mov
push
push
insb
fbld
arpl
das
inc
data16
jmp
add
roll
mov
ret
sti
enter
add
jmp
icebp
mov
dec
fwait
popa
mov
mov
fisttpl
int
mov
mov
lcall
std
mov
pop
out
mov
outsb
iret
aas
pcmpeqd
lock
out
adc
pop
sbb
cmpsb
out
push
pop
jno
out
xchg
fs
sub
dec
test
xor
sbb
clc
jne
mov
cltd
push
hlt
adc
test
jb
mov
pop
or
nop
cmpsb
push
in
pop
inc
xor
inc
add
int3
fidivrs
int3
pop
fistps
stos
mov
divb
or
xor
cmp
push
xchg
out
xchg
inc
jno
mov
movsb
ror
xlat
test
inc
mov
push
cmpsb
decb
outsl
dec
jecxz
movl
mov
dec
in
xor
hlt
dec
dec
mov
aad
daa
mov
jno
mov
in
in
inc
aaa
jo
insl
test
pop
inc
lods
pop
cmp
faddl
mov
cli
sar
nop
hlt
icebp
aam
cmp
xchg
ja
stos
outsl
dec
jecxz
mov
xor
jmp
mov
cmpsb
stc
mov
clc
jbe
lea
push
loop
adc
push
sbb
add
cmpsl
xchg
jne
pop
push
movsl
in
mov
xchg
insl
mov
ret
mov
jecxz
leave
shll
mov
add
das
jnp
adc
inc
imul
fnstcw
push
lods
lahf
idivb
loope
mov
mov
cmp
loopne
data16
cmc
dec
stos
in
cmp
mov
int
mov
mov
and
out
push
jg
enter
mov
pop
aam
sbbl
cmp
pop
jo
xorb
dec
in
lods
pusha
stos
cmp
int
or
dec
inc
pop
xor
les
shl
movsl
and
hlt
popf
dec
xor
xor
hlt
cli
or
add
mov
sub
sbb
out
mov
push
mov
stc
push
sub
std
pop
sub
jecxz
clc
aam
daa
stc
sub
cmp
cltd
les
and
jbe
test
cmpb
jmp
adc
aad
lds
fs
es
out
sti
and
jmp
aad
fnsave
push
pop
push
mov
push
aam
xor
test
rcrl
sbb
addr16
in
mov
shlb
push
add
andl
popf
je
rep
mov
std
xchg
fbld
or
pop
test
adcb
jo
fidivs
xor
jge
mov
ficompl
xor
daa
std
mov
push
mov
shrb
aaa
mov
jmp
inc
mov
mov
rorl
aas
stos
pop
xor
xor
sub
push
xor
loope
data16
inc
rclb
inc
or
mov
stos
movsl
and
sarl
jmp
cs
imull
push
lret
cld
sti
sub
sbb
lock
in
xchg
insb
or
sti
push
mov
loope
lds
mov
shlb
push
int
dec
pop
enter
adc
in
sbb
dec
loopne
mov
addr16
jl
shll
loope
clc
insl
jmp
pop
es
xchg
sbb
cmp
mov
dec
sub
idivl
dec
in
mov
jb
mov
ret
mul
dec
pushw
or
enter
sub
popa
mov
add
nop
mov
mov
addr16
xchg
and
movsb
jecxz
movsb
mov
je
xchg
stc
push
or
add
daa
stos
xlat
outsb
dec
out
xor
mov
in
fildl
pop
pop
dec
data16
sbb
fdivrl
adc
rcrb
mov
popf
xchg
mov
inc
mov
pop
inc
push
xchg
jns
cmp
or
pushf
shrb
cmc
jge
xor
adc
or
inc
in
dec
fdivp
jecxz
mov
pusha
outsl
jb
xlat
mov
jl
andl
mov
adc
and
mov
outsl
adc
xlat
jp
std
xchg
lcall
aaa
jbe
je
fbstp
sub
or
lods
cmpl
sbbb
ud0
xorl
dec
pop
mov
das
aaa
cmpsw
mov
pop
mov
lods
mov
and
pop
outsl
jge
dec
je
xchg
push
lods
or
push
int3
stos
outsb
add
in
fstpt
lcall
mov
mov
push
add
jbe
mov
pop
xchg
mov
push
nop
and
jnp
xchg
lds
adc
mov
test
xor
sbb
inc
in
mov
sub
jl
pop
stc
cmpb
out
clc
popf
enter
cwtl
das
repnz
and
or
test
add
mov
mov
adc
fsub
mov
aam
stos
inc
push
loopne
imul
mov
jle
pop
lea
rclb
lods
inc
xchg
das
pop
sahf
popf
aas
sahf
xor
lods
inc
or
xor
testb
xchg
sub
sub
aad
mov
fldcw
rcrl
pop
pop
lock
in
stos
inc
fildl
adc
push
or
stos
imul
jns
pop
pop
in
push
loop
mov
xorb
dec
pushf
js
arpl
xchg
into
or
adcl
popa
stos
xor
mov
mov
fmull
mov
popa
ret
pop
mov
test
in
je
loop
add
add
mov
pop
xor
push
sub
dec
idiv
es
sbb
dec
in
cmp
lock
pop
into
shll
mov
xchg
jl
out
sti
jo
xchg
mov
dec
movsl
jp
fldt
mov
pop
sbb
adc
imul
and
cld
cli
popf
ljmp
xor
popf
inc
jp
mov
pop
sub
and
lock
mov
jno
inc
and
inc
lret
leave
int3
enter
cmp
cwtl
and
dec
add
clc
cmp
cs
lcall
frstor
xor
mull
std
es
pop
and
in
jns
fdivl
insb
sbb
jge
mov
dec
dec
mov
mov
xor
inc
add
mov
push
xor
pop
jmp
xchg
fcomps
mov
mov
or
shrb
or
popa
push
movsb
add
fnstsw
jno
push
pusha
mov
sar
mov
inc
push
xchg
xchg
sub
imul
mov
push
test
sbb
je
sbb
shrb
test
sbb
jns
aad
sub
or
enter
sti
push
iret
sub
push
inc
lret
into
add
pop
fidivrs
cmp
add
out
mov
loopne
outsl
inc
fiadds
xchg
push
test
divb
and
push
je
inc
lret
int3
fistps
push
jmp
mov
fwait
mov
push
inc
dec
fmull
cwtl
cmc
int3
or
xchg
rorb
pop
or
add
ja
daa
jnp
aam
mov
jno
aam
sbb
fistl
jne
jp
pop
mov
jp
xorl
pusha
jnp
mov
addr16
push
dec
pop
sbb
popf
sub
loope
cmp
lea
movsb
aam
cs
dec
loop
outsl
lods
xor
dec
pop
mov
jae
repnz
inc
repnz
andb
and
shl
movsb
inc
mov
pop
movsb
cmp
cmpsl
ds
sbbl
pop
in
lahf
outsb
cmp
imul
rcr
jae
test
or
fildll
jecxz
push
out
xchg
add
xor
ds
popf
mov
sbb
push
lods
rorl
lods
dec
es
pop
pop
repz
int3
lea
cmp
iret
lea
in
int3
add
inc
mov
loopne
jecxz
inc
push
leave
cmp
out
inc
xor
sti
fsubs
mov
push
mov
sub
into
out
add
lods
les
push
sub
imul
call
mov
xor
mov
push
enter
sbb
mov
mov
loopne
loopne
inc
xor
sbb
xchg
sbb
dec
or
in
and
adc
rorl
imul
imul
les
cmp
inc
test
add
hlt
lret
mov
iret
or
lds
dec
jecxz
movsb
out
mov
jl
imul
xchg
cmp
stc
fdivr
xchg
or
out
pushf
scas
iret
scas
mov
imul
sahf
imul
xchg
cmp
pop
js
into
pop
dec
mov
lock
mov
adc
mov
cmp
pop
dec
loopne
sub
dec
fisubrl
enter
xorb
xchg
enter
xor
cmp
aam
cld
sbb
bound
push
mov
mov
imul
vmovdqu
loopne
or
dec
adc
ja
leave
sub
dec
test
dec
sub
out
and
pop
xor
sub
js
cmp
xchg
fmul
push
or
xchg
mov
out
testl
inc
fcomps
ret
dec
xchg
mov
xchg
mov
add
fadd
mov
and
cmp
xchg
xchg
ret
iret
inc
mov
mov
test
cs
test
insl
sahf
leave
cwtl
adc
mov
stos
jge
sbbb
in
dec
jg
das
imul
ret
leave
into
and
mov
sub
fldl
cltd
js
iret
jmpw
das
cld
aad
mov
cltd
and
stos
inc
sub
mov
pop
aad
repnz
lods
mov
xor
push
add
inc
inc
test
push
cmp
mov
sahf
add
sar
mov
mov
rcl
push
add
into
ljmp
jo
mov
mov
ds
xchg
adc
mov
clc
or
loope
into
fwait
cmp
dec
fwait
jmp
dec
mov
xor
cltd
push
in
sti
loope
loope
hlt
cmp
dec
or
in
sbb
in
fnsave
or
mov
push
lds
push
cld
fdivrl
addb
movsb
inc
ljmp
in
cltd
add
loop
push
cltd
or
xchg
inc
std
addr16
mov
xor
push
mov
arpl
scas
cs
jb
insl
push
mov
popl
jl
fsub
ret
aam
pop
mov
add
cmp
push
mov
sub
inc
or
jns
and
popf
sub
mov
jp
mov
push
rcr
inc
pop
leave
cmp
and
dec
das
bound
jno
pop
int
xor
movsl
inc
push
nop
out
pop
stos
pop
xor
inc
insl
mov
jmp
jp
hlt
rorl
fbld
push
lcall
sub
xor
jecxz
pop
adc
adc
sahf
or
mov
mov
inc
arpl
inc
xchg
aas
movl
in
bound
iret
aad
xchg
mov
and
arpl
cs
mov
arpl
sub
push
dec
inc
push
dec
fsubs
mov
lret
push
clc
sub
mov
call
subb
dec
jmp
repnz
inc
insl
jg
lcall
lcall
dec
xchg
les
fisttpl
subl
cmp
push
mov
cltd
sbb
and
push
iret
add
dec
das
mov
in
sti
lret
sbb
test
js
scas
fmul
lcall
jae
xchg
pop
jae
mov
inc
repz
pop
push
sub
mov
adc
daa
push
mov
enter
popf
push
cltd
sbb
add
lods
xchg
mov
sbb
sub
jnp
mov
pop
sub
push
xchg
ja,pt
sub
test
pop
xor
add
sbb
idivl
dec
fldl
sub
shll
stos
in
fmull
lcall
rolb
pushf
out
mov
jecxz
bound
mov
adc
dec
arpl
call
dec
aaa
dec
subb
mov
jmp
fdivp
outsl
daa
inc
inc
cltd
mov
movsl
sub
fsubs
cli
push
fmull
jp
jb
cltd
in
fnsave
mov
add
xor
sub
xor
cwtl
andb
cld
cmpsb
loope
rcrl
cld
mov
ret
xchg
mov
das
fstpl
inc
inc
pop
lods
incl
mov
mov
dec
mov
push
mov
dec
pop
xchg
fwait
and
dec
les
cmc
sbb
adc
adc
testl
icebp
xlat
inc
mov
adc
mov
or
jle
or
mov
cmp
pop
add
add
int
call
or
add
pop
sub
and
cwtl
nop
pop
mov
dec
mov
test
cmc
dec
cmpsb
sti
bound
out
pop
mov
jbe
arpl
into
outsb
or
in
cmp
or
loopne
rclb
xchg
cmp
cwtl
ljmp
push
js
pushf
jl
xlat
fs
fcoms
imul
gs
inc
jo
or
int3
out
push
sti
rolb
test
push
icebp
xor
data16
adc
mov
test
push
aas
roll
fmulp
cmp
xchg
sub
imul
outsl
mov
pusha
xchg
in
clc
shld
xchg
mov
sbb
rcl
jnp
jb
pop
loopne
xor
xchg
push
addr16
rcrl
xchg
inc
mov
outsb
stos
sub
test
fnstsw
jmp
mov
popf
outsl
shl
test
add
inc
shl
jno
or
push
mov
sbb
pop
dec
sahf
nop
or
fdivs
sbb
das
push
mov
fbld
or
push
test
pop
lods
into
dec
fbld
cmc
push
dec
add
dec
mov
data16
add
cmc
dec
out
popa
movsl
mov
pop
ja
ljmp
cmp
mov
mov
cvttps2pi
es
pusha
pusha
repz
imul
call
cld
cmp
imul
mov
push
sub
sahf
inc
and
outsl
mov
jmp
xor
jp
jnp
or
mov
pusha
inc
aaa
sbb
mov
andl
xchg
pusha
mov
lea
xacquire
sahf
xchg
add
xor
das
cwtl
xlat
mov
xor
fildll
dec
xchg
pusha
xchg
and
scas
inc
jb
sub
or
ss
sub
push
insb
jbe
jbe
hlt
and
cs
out
rolb
scas
loop
or
insl
mov
cmpsb
fnstenv
hlt
aaa
movsl
pop
inc
pusha
adc
fstps
bound
push
out
loop
or
nop
lahf
pop
cmp
ja
pusha
cmpsl
loope
push
into
mov
jmp
mov
pop
sti
fcomps
mov
mov
sbb
inc
dec
inc
jbe
fidivrs
sahf
cmc
stos
fwait
std
mov
jo
mov
xor
and
in
mov
leave
pop
mov
push
cmp
aam
sbb
jnp
inc
or
orl
mov
pop
dec
mov
mulb
es
xor
push
xchg
pop
imul
sub
lds
sarb
mov
jmp
inc
xchg
fwait
sti
xchg
push
ds
push
jbe
mov
sbb
or
imul
push
inc
sbb
sub
loop
mov
test
adc
std
or
arpl
cli
test
jmp
xchg
push
stc
or
add
mov
push
push
out
ds
repnz
push
in
mov
out
jmp
popa
mov
mov
xor
push
arpl
pusha
cld
sbb
jnp
js
dec
dec
fsubs
loop
mov
xchg
int
ljmp
insb
cwtl
mov
out
arpl
scas
mov
fcmove
sbb
or
sbb
inc
ja
cmp
std
xchg
adc
cmp
mov
jl
and
cmp
mov
jp
push
call
addb
shll
mov
pushf
std
mov
ret
mov
subl
aam
popa
cld
cltd
mov
sbb
jo
int3
sub
cmc
adc
mov
in
xor
jnp
jg
cmp
xchg
mov
dec
dec
dec
in
xlat
push
push
shll
push
jbe
xor
jbe
mov
popa
clc
xchg
jae
dec
fadds
pop
sbb
mov
dec
ret
data16
negl
loop
repnz
jle
insl
fsubr
sbb
sub
adc
xchg
sub
xor
xor
sub
pop
out
dec
daa
mov
fwait
in
into
in
adc
loopne,pt
addr16
dec
filds
pop
pop
lret
mov
ljmp
xor
dec
insb
add
loopne
sub
push
xor
xchg
mov
out
jmp
xchg
xor
or
ss
cli
pop
loop
push
xchg
jae
dec
mov
push
pop
into
adcb
cmp
cltd
cmpsb
and
cmpsb
sub
cwtl
js
sarl
xchg
js
inc
pusha
pop
ret
shl
into
enter
cmpsb
icebp
push
in
push
ret
fmulp
jge
cs
mov
inc
fisttpll
ret
dec
loope
pop
dec
dec
aam
in
mov
push
addr16
in
les
call
or
dec
jl
mov
pop
push
dec
pop
in
mov
xchg
jnp
xor
test
jns
fisubs
cs
push
mov
add
dec
xor
mov
pop
daa
pop
jb
or
adc
xchg
ljmp
jge
mov
les
jae
xlat
jecxz
test
pop
loope
test
clc
xchg
popf
inc
cmp
int
sbb
inc
pop
and
jp
lea
nop
jne
mov
enter
xorb
pushf
push
cmpb
int
ljmp
sub
pop
xor
inc
nop
cmpsb
mov
nop
push
mov
pop
fs
hlt
xchg
pop
les
es
pushf
fmulp
cmp
jle
scas
sub
mov
mov
clc
cli
daa
mov
pop
mov
ficompl
xchg
daa
fisttpll
filds
sub
pop
nop
push
inc
mov
xchg
mov
lcall
sbb
lahf
push
cmp
in
mov
stos
in
inc
pop
push
mov
test
pop
cmp
data16
cmp
inc
pop
inc
push
addr16
ljmp
cltd
xor
mov
aaa
sub
sub
pop
pop
mov
ret
fwait
push
pop
mov
sub
or
mov
mov
fmuls
jge
cmp
repz
test
sbb
aam
xlat
xchg
or
shlb
insl
loopne
xchg
xchg
xchg
jl
mov
fisttpl
lea
push
push
aam
xlat
push
imul
ret
sbb
mov
push
pop
icebp
aam
mov
mov
or
add
add
add
push
or
and
loope
add
adc
loopne
jg
xchg
or
inc
xor
jg
fsubrp
jno
lret
subl
inc
pusha
dec
xchg
push
fsubrs
xor
lea
cmc
adc
mov
not
xor
fistps
imul
dec
aaa
fidivs
jns
jle
int3
shrl
clc
into
pop
mov
or
nop
or
jae
pminsw
fwait
adc
es
mov
inc
ds
cmp
adc
jns
cmp
xchg
pop
xlat
cmp
add
and
addr16
int3
lret
stc
push
in
shrl
mov
out
ret
popf
and
sbb
ds
mov
imul
dec
imul
test
dec
sub
out
or
xchg
lahf
mov
imul
jle
push
mov
les
fdivs
ds
sar
push
lahf
sbb
popf
jb
fildl
test
int
mov
hlt
jecxz
shlb
jnp
mov
pop
cltd
xor
adc
ret
enter
cwtl
jmp
pushf
test
sbb
xor
test
scas
sti
mov
pop
repz
dec
gs
enter
rol
mov
lret
add
pop
inc
popa
les
jne
nop
xchg
mov
mov
xor
pushf
sbb
and
xor
stos
je
xchg
sti
lds
xor
andl
mov
or
les
out
dec
ds
int
pop
mov
sahf
bound
sbb
addr16
addl
cmpsl
dec
rolb
inc
lahf
out
mov
pop
cmp
mov
imul
xchg
fists
loope
outsb
cmp
into
gs
faddl
sub
sbb
loope
icebp
decl
mov
stc
lds
out
cmp
and
out
inc
dec
loop
xor
lods
xchg
and
mov
sbb
cmpsb
mov
fiaddl
push
loope
xchg
movsb
lcall
xchg
aam
mov
shlb
fisubs
outsl
cmp
inc
push
lds
push
outsl
mov
stos
call
or
jle
test
cmc
dec
inc
icebp
inc
into
ret
imull
in
add
add
pop
xor
or
pop
inc
mov
jne
push
dec
add
push
movsb
int
les
lret
gs
jge
sub
insl
inc
and
into
fidivrl
nop
pavgw
out
pusha
sbb
daa
call
and
fcomps
push
cmp
pop
push
les
sbb
and
outsb
dec
out
rolb
sbb
fisttpl
lahf
jnp
push
inc
stos
mov
mov
inc
outsl
jnp
sub
adc
inc
hlt
pop
jno
mov
fsubrs
lret
data16
lea
data16
pushl
jnp
inc
int
negl
jns
sub
sub
movsb
movsl
inc
xchg
int
les
xlat
sub
cmp
or
and
mov
inc
or
imul
jmp
or
lcall
imul
inc
push
jecxz
jae
dec
cmp
iret
cmpsb
mov
adc
scas
pop
adc
jo
xor
ret
jb
ret
dec
in
stos
loope
mov
scas
fidivrl
mov
fs
out
push
imul
mov
gs
jo
shrl
mov
pop
add
and
mov
outsb
sahf
adc
xchg
loope
mov
ja
out
jmp
aaa
fs
xor
pop
mov
and
dec
jo
mov
imul
xor
add
jb
push
mov
or
cmp
mov
add
stos
fldpi
push
lock
leave
dec
push
jbe
leave
mov
xchg
outsl
cmp
stos
enter
rol
test
sbb
test
fldcw
or
rorb
jmp
fdivrl
jmp
pop
test
cli
xchg
test
adc
lcall
out
xchg
add
js
adc
dec
and
dec
push
mov
dec
push
mov
jno
in
dec
pusha
ss
mov
cmp
enter
push
inc
dec
clts
inc
inc
sub
ds
pop
jmp
bound
lea
lock
fbstp
hlt
cmp
stos
mov
inc
jp
xlat
shlb
rol
mov
loop
mov
popl
mov
jno
jle
sbb
es
xor
scas
popf
ret
mov
fists
subb
je
push
jae
xchg
call
mov
mov
jb
sbb
cs
mov
xor
fnstsw
imul
les
orb
inc
xor
jle
loopne
stos
inc
xchg
jp
lods
fcmovnu
out
push
je
fbld
jae
adc
inc
xor
addr16
jmp
mov
in
popf
movsl
mov
jmp
loope
nop
mov
adc
push
subb
push
es
fdivr
xchg
pop
jecxz
mov
ds
in
lahf
cmc
leave
jecxz
jge
shrl
jb
xor
add
and
mov
jle
mov
iret
leave
pop
enter
mov
mov
mov
mov
mov
shr
test
mov
push
imul
add
sub
leave
mov
js
lods
sar
inc
js
jmp
mov
or
mov
and
stos
aas
and
inc
pop
mov
clc
sahf
test
xchg
mov
lcall
aaa
dec
push
in
xor
pushl
gs
mov
in
mov
gs
test
cmp
jns
push
mov
movsb
mov
aad
cwtl
pop
imul
movsl
aad
gs
mov
cmpsb
sub
leave
pop
pop
sti
push
or
adc
call
mov
pop
add
pusha
aad
sub
inc
mov
and
sub
sub
and
sti
xchg
xchg
mov
xor
mov
adc
data16
cs
jnp
adc
negb
cmp
ja
xor
test
fldt
ljmp
cmp
or
xor
bound
ret
sub
out
adc
adc
mov
xor
xchg
test
pop
pop
sub
and
dec
and
icebp
add
mov
sub
lock
mov
sub
mov
shrb
stos
push
inc
pop
loop
loopne
sbb
jns
imul
inc
or
cmp
sbbl
ret
mul
ret
cmp
shll
ljmp
xor
cmp
dec
pop
mov
pop
movsl
mov
test
mov
sub
or
jbe
cld
push
mov
dec
call
mov
fwait
add
jle
out
xlat
sarl
fcompl
inc
mov
insb
aaa
xchg
mov
xchg
aas
jmp
mov
jp
push
dec
fldl
xchg
test
sub
xor
jne
sahf
sub
push
frstor
mov
movsl
inc
or
loope
fucom
mov
mov
jns
adc
mov
or
pop
insb
pop
pop
jo
inc
lret
sarb
pop
jp
mov
fidivrs
dec
insl
into
gs
scas
fsubrs
in
push
rcl
icebp
cmc
pusha
mov
inc
xor
sub
mov
lret
xor
popa
push
mov
and
mov
dec
push
mov
mov
xchg
mov
mov
cmp
std
mov
mov
adc
movsl
inc
push
add
mov
sbbl
mov
and
jb
stc
pop
or
pushf
sti
and
inc
xchg
xchg
and
xor
out
xchg
flds
jae
jb
imul
out
and
out
ds
fdivrl
imul
pop
mov
arpl
fsubrs
les
mov
xchg
lods
jp
mov
outsb
fstpl
fisttps
and
in
out
dec
cmpsl
jle,pt
out
rcrl
mov
pop
icebp
push
sub
rcll
jae
jae
pop
insl
cmpl
into
pop
lods
mov
popf
lods
pop
push
mov
bound
mov
lds
rcr
mov
ficoms
or
scas
fnstenv
popf
nop
sub
pop
mov
inc
insb
inc
dec
loope
lea
aas
sbb
test
jecxz
ljmp
add
push
mov
pop
jb
andl
movsl
cmp
fimull
test
mov
mov
jl
pop
stos
xchg
mov
push
push
mov
or
adc
adc
mov
enter
dec
mov
push
lret
sub
je
les
sbb
xchg
gs
jno
aas
mov
pop
out
add
xchg
jl
data16
outsl
popf
and
pop
fwait
sti
aas
call
jne
cmpsl
aam
les
and
jmp
addr16
outsb
clc
shlb
inc
lret
pop
jmp
js
jne
jg
jecxz
mov
jne
cmp
jnp
or
out
sbb
xor
xor
or
int
fisubrs
dec
in
cmp
jmp
orb
mov
mov
ficompl
or
add
sub
ss
mov
push
jmp
rcll
inc
pop
jb
pop
imul
jle
lock
dec
stc
mov
xchg
je
or
mov
sub
dec
mov
int
xor
insl
aad
mov
mov
push
mov
dec
out
rcrb
adc
xchg
shll
push
push
push
ret
xor
fildll
push
add
cld
and
xor
fwait
lods
xor
cwtl
je
jecxz
cmp
xor
int
inc
nop
mov
adc
mov
push
sbb
adc
add
cli
outsb
add
mov
xor
xchg
movsb
dec
cmp
pop
xchg
add
cmp
lods
test
lahf
in
and
jmp
inc
test
fcoml
clc
push
js
lahf
and
ljmp
lods
push
jb
xchg
clc
pop
cmc
mov
maxps
jne
inc
movsb
repnz
fwait
repnz
into
xor
cmp
and
out
pop
pop
add
lret
das
mov
loopne
adc
xor
push
jno
out
hlt
adc
push
stos
mov
fsubl
scas
inc
jns
xchg
adc
pop
mov
lock
mov
insb
jle
push
mov
inc
add
gs
cwtl
ss
cmpsb
jb
sbb
leave
jnp
cmpsl
in
dec
stos
mov
roll
or
inc
fs
inc
mov
out
out
pop
cmp
mov
mov
clc
js
cmp
dec
push
movsb
repnz
adc
pop
and
popl
loop
xchg
lret
int
js
test
or
xor
inc
sub
sub
pop
pop
jb
cmp
add
xchg
loopne
mov
push
inc
popf
mov
stos
lret
in
sbb
in
cmpsb
mov
fdivr
std
cmp
jecxz
nop
xor
adc
sarb
jb
dec
mov
int
xor
lock
cmp
test
push
mov
adc
xor
cmp
lock
sbb
xor
shrl
lret
jbe
cmpsl
mulb
jmp
pop
ret
clc
or
je
cwtl
pop
mov
outsl
repnz
xor
inc
push
out
aaa
xor
cmp
cmc
loope
pushf
pop
pop
fwait
cmpsl
out
push
out
adc
test
sahf
gs
dec
and
sbbl
jne
fwait
idiv
mov
mov
cltd
and
sti
cmp
mov
mov
repnz
pop
sub
adc
inc
imul
mov
jge
adc
mov
ficompl
pop
sahf
mov
and
aam
sub
adc
xchg
inc
or
sbb
addl
add
jl,pn
pusha
jl
mov
adc
loopne
inc
in
mov
push
xchg
loop
dec
adc
push
xor
iret
mov
jg
lahf
cmp
mov
push
push
jbe
pop
fs
addb
mov
and
fwait
or
mov
aaa
popw
fnstsw
dec
frstor
push
loopne
adc
inc
xor
dec
lret
push
mov
insb
pop
cmp
pop
movhps
mov
sbb
fbstp
pushf
das
xor
jmp
push
xchg
jmp
mov
movsl
xchg
es
fidivs
out
imul
cmpsl
ret
cmovs
inc
push
data16
add
cld
cmpsl
or
into
je
sub
and
ja
sub
inc
outsl
dec
xorb
dec
adc
cmc
or
xchg
dec
in
jl
andb
enter
outsl
adc
adc
aas
out
mov
rolb
and
and
add
fisubl
or
adcb
push
fisubrl
pop
icebp
call
stc
push
ret
adc
sti
xor
mov
adc
mov
sub
jge
dec
popf
xchg
scas
cld
push
leave
adc
orl
sub
xchg
in
push
leave
and
das
xchg
xor
inc
mov
outsb
inc
in
xor
ljmp
bnd
adc
add
out
stos
jl
aas
daa
int3
or
dec
xchg
mov
dec
insb
sbb
sub
ss
popl
enter
or
push
sti
or
cld
iret
cmp
xchg
repz
push
out
out
sbb
mov
or
xchg
jecxz
psubsb
or
je
mov
call
dec
test
popa
pop
cli
xchg
jns
fwait
aaa
popf
ss
imul
xorl
scas
pop
jns
xor
and
jcxz
mov
mov
inc
testl
test
lock
ds
cli
je
aam
xor
clc
sahf
push
out
push
vcvtps2pd
push
push
out
xchg
cmp
mov
cmp
or
and
shll
jmp
scas
fs
xchg
data16
mov
repnz
fldz
dec
mov
sti
pop
scas
sub
cld
dec
leave
dec
dec
out
jecxz
xchg
mov
hlt
lea
and
pop
mov
sub
jns
cli
in
mov
sar
icebp
int
and
out
sbb
fcmovu
push
xchg
jecxz
jne
aaa
mov
insb
add
divb
dec
ret
cmp
loope
dec
or
aaa
test
aaa
rcl
cli
rclb
loope
mov
mov
enter
add
mov
sbb
jbe
stc
xchg
push
and
xlat
out
mov
out
cvtps2pd
adc
sbb
jge
xor
sbb
mov
add
push
aas
test
xor
call
push
in
push
inc
and
popf
call
sbb
jmp
mov
or
jmp
sbb
jge
ss
mov
call
mov
or
xor
in
sbb
dec
xchg
cmpsb
cwtl
out
test
into
jno
in
cwtl
dec
gs
push
mov
sub
cmp
push
jbe
fstpt
shr
stos
xorl
push
mov
xchg
das
inc
sbb
mov
stos
mov
push
add
xchg
lahf
xor
int
lock
mov
mov
jns
bound
push
xchg
sub
test
mov
in
pop
inc
dec
sbb
test
xor
mov
inc
daa
pop
pop
out
das
scas
negl
lahf
sahf
out
push
xor
cmpsb
std
fs
dec
xchg
push
cs
add
mov
sub
ret
out
inc
or
mov
aam
in
dec
loope
subl
shlb
popf
sbb
shr
or
or
jne
mov
and
aad
sahf
hlt
push
jmp
mov
push
out
ret
pop
xorb
mov
mov
push
add
mov
dec
or
scas
mov
sbb
stos
inc
dec
mov
icebp
inc
xor
inc
pop
mov
jmp
int3
xlat
xor
sti
or
pop
gs
sbb
sub
aam
xorl
aad
pop
addr16
xchg
cwtl
fnsave
or
dec
pop
cmpsl
imulb
pop
cmp
cmpsb
jne
add
xor
jg
push
sbb
pop
fldt
sbbl
clc
iret
mov
push
les
pop
lock
xchg
sbb
push
out
adc
push
inc
xchg
aad
sub
mov
and
aaa
into
sub
ja
hlt
insb
scas
xchg
push
iret
clc
mov
ficoml
loopne
mov
cmp
push
test
mov
push
add
pop
popf
lods
mov
push
stos
mov
ret
hlt
or
loopne
mov
inc
ficoml
inc
gs
fnstenv
cmpb
neg
cwtl
lods
bound
cmp
or
shl
fcomps
mov
xchg
mov
cmpsb
push
mov
mov
repnz
dec
fisttps
adc
cli
into
adc
mov
stc
int
mov
into
pop
icebp
lcall
sbb
adc
negb
frstor
fidivl
add
insb
mov
fucomip
aad
xchg
gs
cmpl
add
in
push
shlb
das
jns
out
test
adc
sarb
imul
es
xchg
pop
dec
loop
mov
icebp
mov
push
andnps
popl
sub
addr16
iret
push
sub
stos
jmp
push
add
scas
repz
lods
cmpb
sbb
ficoml
sbbb
in
and
inc
and
aas
sbb
xadd
inc
out
add
or
push
cli
dec
sarb
imul
pop
mov
mov
cmp
stc
or
pop
and
inc
add
aas
jae
xchg
movsb
imul
ds
repz
je
push
lock
push
inc
inc
or
in
push
leave
sbb
mov
popa
out
out
and
push
jmp
inc
enter
lcall
sbb
lods
dec
xorl
push
imul
or
pop
hlt
push
lock
outsl
lahf
icebp
mov
xchg
inc
pushf
movsl
mov
lahf
sbb
or
out
int3
es
pop
in
addr16
insl
dec
loopne
mov
pop
sarl
lahf
and
loope
mov
xor
pop
sub
lods
imul
scas
push
popf
jbe
mul
or
repnz
cmp
inc
outsb
mov
int3
pop
popa
das
mov
leave
cli
out
inc
ljmp
sbb
jo
dec
xchg
xchg
pusha
addr16
pop
cmp
insb
adc
pop
in
cmovne
cs
rcr
shlb
push
dec
push
mov
cltd
xor
push
mov
push
mov
mov
pop
ss
adc
scas
inc
jne
ret
pop
push
pop
push
push
jl
xorl
std
push
and
mov
sub
add
cli
in
lret
and
jle
push
sbb
cli
sbbl
xor
and
adc
lods
jae
pop
add
ret
out
pop
jmp
ficoml
mov
popa
adcl
adc
push
xor
push
push
stos
fwait
and
sti
mov
push
lds
loopne
decw
ficoms
mov
lret
decl
ret
xchg
shll
inc
push
shll
in
push
jne
lret
insb
mov
xor
jnp
adc
mov
mov
into
clc
jo
sub
xchg
mov
sbb
cmpb
les
fdivrs
sahf
stos
out
xor
or
jne
in
push
pop
repnz
std
sub
cli
addr16
ss
mov
mov
sub
pop
xchg
rcr
jle
jl
clc
bound
test
or
loop
cmpsb
sub
xchg
mov
pop
daa
inc
andnps
into
int3
movsl
jle
or
sbb
push
dec
push
loop
and
or
inc
adc
roll
divb
fs
sbb
fidivrl
fsts
sbb
lods
mov
mov
std
xchg
int
cmp
push
test
pop
les
push
stos
sbb
adc
sbbl
mov
ret
sahf
dec
stc
aam
je
xor
push
jne
sub
dec
mov
pop
arpl
sti
xchg
lret
push
js
cmpb
dec
xchg
in
mov
pop
cmp
jnp
or
fdivr
mov
jle
addr16
mov
fstl
cltd
mov
jp
cmpsb
inc
lcall
xchg
notb
rorb
sbb
pop
out
lds
fsubrs
fsubl
jle
rol
xchg
call
mov
hlt
loopne
xchg
mov
rorl
jl
jno
push
mov
shlb
adc
imul
mov
add
jne
sbb
fdiv
stos
inc
stos
stc
inc
in
fmul
in
sub
jmp
mov
and
fstpl
roll
mov
xchg
fs
and
scas
inc
outsl
adc
dec
xchg
sbb
dec
xchg
mov
and
pusha
cmp
aad
incb
mov
inc
fldcw
stc
adc
outsl
mov
cmp
repz
sub
jnp
push
ja
adc
push
and
sahf
xor
enter
aaa
loope
fbld
loope
jnp
rcr
sbb
mov
mov
cmp
cld
or
sbb
cmp
jns
mov
lret
cmc
add
pop
scas
pushl
aam
push
cmc
add
cmp
repz
dec
cmp
jge
hlt
jns
adc
mov
push
add
and
cwtl
dec
inc
aas
int3
insb
add
fcoms
adc
repz
or
jp
shrl
outsb
imul
int
aas
daa
xchg
add
insb
clc
subb
cmp
not
xchg
dec
lds
xchg
clc
fwait
scas
sbb
pmaddwd
jecxz
adc
cmp
lods
loope
fldenv
int
fbld
xor
movsb
pop
pop
ss
xchg
jge
mov
mov
mov
inc
movsl
bound
xor
jge
gs
push
in
into
fcmovbe
jns
int3
mov
dec
push
inc
out
jne
ljmp
fs
push
mov
pop
in
push
push
sub
or
stos
scas
inc
jae
xor
je
push
jbe
pop
leave
pusha
jle
insl
adc
xchg
out
push
xchg
loope
enter
jbe
mov
bnd
rol
jp
dec
xor
bound
inc
dec
hlt
hlt
mov
adc
adc
jp
rcpps
pop
push
mov
mov
or
mov
mov
ret
jnp
lea
frstor
in
nop
and
dec
lret
pop
out
xor
jns
mov
pop
jo
andl
jge
cmp
dec
sahf
jle
mov
nop
mov
pop
jb
idivb
inc
stc
lahf
rolb
add
lahf
mov
clc
dec
mov
mov
sbb
mov
imul
mov
pushf
hlt
ficomps
mov
jns
lcall
rcl
pop
dec
arpl
jge
mul
daa
in
jl
pop
dec
jp
repnz
or
dec
mov
pop
loope
pop
aad
adc
dec
mov
sub
movsb
sub
jbe
xchg
insl
pushaw
cmp
or
imul
sub
test
inc
mov
jae
jb
testb
insl
cmp
xchg
cs
pop
add
add
xchg
lea
sti
cmpsl
mov
rorb
mov
addr16
cmpsl
ret
imul
mull
les
jle
mov
mov
ret
fistps
scas
push
cmpsb
in
ss
xchg
mov
push
mov
not
sub
notl
cmp
call
sub
les
rcrb
mov
mov
pusha
mov
testb
dec
fists
aaa
push
cmp
out
cltd
xor
cmp
test
dec
mov
shll
subl
mov
mov
sbb
lret
sbb
out
xor
mov
and
add
sub
pop
repz
pusha
sbb
sub
inc
add
sub
pop
cmp
xor
scas
iret
or
pop
aaa
adc
mov
les
out
mov
mov
push
sbb
inc
sub
inc
cmp
imul
or
cs
mov
jbe
xor
inc
or
sub
in
insl
sbb
push
mov
sbb
cmp
in
jns
cs
rclb
xlat
fnstcw
mov
cli
pop
or
push
adc
pop
shr
ja
jae
fucom
push
mov
cwtl
sbb
add
push
repnz
xchg
sbb
pop
jecxz
xor
xor
xchg
outsb
jl
stos
mov
lcall
pusha
mov
aas
arpl
mov
outsl
dec
jae
aas
enter
push
movl
aad
addr16
imul
mov
pop
sbb
xchg
cmp
push
jae
pusha
sbb
repz
aaa
into
bnd
sub
int3
loop
inc
divl
out
cmpsb
and
jns
std
and
jmp
and
enter
ret
aam
out
jg
enter
xor
call
and
lods
sub
push
add
mov
xorl
mov
sbb
fwait
adcb
sub
sub
mov
add
xor
jp
mov
fwait
inc
mov
inc
aad
or
inc
inc
sbb
popf
stc
push
add
jb
scas
xlat
std
mov
xor
lods
inc
fsts
or
sbb
mov
push
ret
pop
daa
inc
jecxz
inc
popa
scas
jb
mov
mov
cmc
out
mov
mov
popf
inc
adc
and
lock
lcall
adc
and
stos
stos
lods
inc
push
test
dec
data16
xor
js
lahf
out
xchg
loope
popa
mov
ret
sub
inc
xchg
sub
int3
scas
add
scas
adc
loopne
inc
and
mov
fwait
sub
shlb
aam
stos
push
and
leave
pushf
adc
enter
xlat
pop
jne
cwtl
mov
xchg
fistpll
mov
notl
divb
insl
xor
jno
fldlg2
jp
sub
mov
in
shl
sub
mov
pop
mov
add
pop
imul
cmpsl
mov
lods
pop
mov
jmp
rcr
repnz
ljmp
das
mov
mov
nop
popa
and
inc
in
jle
cmp
pop
bound
loop
nop
pusha
sub
mov
jmp
aad
outsb
mov
cltd
push
sub
out
mov
ss
shl
push
pop
xor
mov
fildll
push
add
xchg
xchg
testb
aam
xor
lods
jge
daa
inc
daa
adc
and
dec
fwait
mov
test
insl
jbe
imul
ret
sarl
bound
mov
fcomi
jp
out
ret
sub
adc
repnz
test
je
inc
movb
mov
xor
scas
outsb
xchg
inc
jmp
addr16
lods
jp
xlat
xor
add
loope
outsb
xchg
ret
xchg
mov
or
cmp
adc
test
je
lods
xchg
icebp
xchg
imul
cmp
hlt
stos
stos
mov
mov
push
cwtl
xor
sub
mov
mov
das
inc
xor
pusha
jecxz
jbe
dec
sbb
xchg
push
mov
fdivrl
lcall
lea
lret
add
pop
push
xlat
into
pop
and
jecxz
push
call
adc
sub
in
xlat
mov
leave
push
enter
jmp
repz
mov
shl
in
sbb
mov
dec
popa
movsl
test
sbb
sbb
adc
ljmp
neg
fwait
data16
sbb
sarl
fldl2t
cmp
dec
push
out
test
stos
aam
cld
pop
ja
shlb
sbb
adc
fistps
gs
and
or
add
xor
aas
jl
or
push
fidivrl
fldenv
push
pop
jne
mov
dec
xchg
test
push
push
stos
lret
sbb
mov
rcrb
iret
in
adc
push
icebp
xchg
fildll
mov
pop
out
add
cmp
das
or
aad
imul
mov
popf
jle
stos
xlat
pop
push
xor
lea
jns
add
arpl
xchg
inc
popf
sub
shlb
imul
iret
push
addb
xchg
sub
lret
inc
xchg
scas
adcb
adc
mov
test
inc
jmp
imul
and
push
xor
pop
sbb
outsl
ret
push
movsl
dec
aad
mov
divl
push
inc
aad
jbe
pop
gs
roll
pop
nop/reserved
xchg
sbb
mov
push
adc
mov
movsl
dec
fcoms
jo
iret
fsubs
int3
aas
push
push
loopne
pop
cwtl
cli
das
inc
sub
fsub
in
hlt
adc
jg
mov
jbe
inc
dec
iret
xor
jmp
xor
lods
inc
push
xchg
bound
pop
jbe
sbb
stos
add
cmpsl
les
mov
xlat
repnz
fdivl
scas
jnp
pushf
idiv
jecxz
outsl
mov
sahf
jnp
mov
jno
jnp
std
sti
xchg
or
push
xor
je
sbb
push
cmc
cld
insl
sub
hlt
push
xor
ljmp
subb
or
cmp
push
xor
arpl
mov
push
repz
mov
xlat
and
imul
mov
mov
mov
dec
inc
mov
pop
nop
data16
inc
std
aaa
aam
les
daa
push
fisubrl
sbbb
push
and
lea
iret
pmaxsw
pop
lcall
outsb
in
into
out
enter
pop
pop
xchg
test
movsl
mov
jo
add
or
or
fnstsw
aas
lock
push
xchg
add
imul
sbb
dec
loopne
rorb
fsub
or
mov
test
pop
fwait
pop
inc
mov
pop
jnp
loopne
adc
cwtl
mov
dec
filds
imul
fnsave
cmp
pop
outsl
enter
cmc
mov
xchg
sbb
dec
mov
dec
xor
add
mov
fwait
out
cmp
test
std
or
shr
mov
push
mov
outsb
or
xchg
in
mov
cld
mov
inc
cmp
cmc
mov
das
cmp
lahf
loopne
out
and
dec
in
mov
imul
and
sub
cmp
in
cmpsb
push
pop
pop
xchg
adcb
push
jae
cmpsl
outsl
mov
bound
mov
lock
mov
mov
add
aas
pop
or
std
cli
inc
arpl
pop
xor
sti
mov
mov
mov
cli
push
out
sub
mov
lahf
in
scas
outsb
aaa
mov
and
stos
adc
out
mov
sub
cli
stos
lret
mov
les
test
dec
and
adc
or
popf
xor
jnp
or
pop
mov
femms
int3
pop
je
mov
pop
or
mov
into
jge
push
ja
mov
int
jbe
push
push
stc
add
movsl
and
stos
jle
inc
and
ret
gs
mov
add
cld
in
cmpsb
popf
mov
iret
rcl
call
add
inc
pop
cmp
mov
push
sbb
dec
mov
das
pop
ds
push
xor
dec
pop
xchg
imul
push
scas
mov
test
inc
int3
mov
mov
fstl
push
dec
ja
enter
jb
pop
jle
sbb
dec
movsl
out
pop
test
push
cs
mov
mov
or
sahf
clc
mov
mov
and
leave
movsb
and
and
in
icebp
shlb
filds
outsb
adc
xor
lret
lods
push
fcomp
imul
jg
mov
push
sbb
xchg
dec
mov
ljmp
movsb
fstpl
xchg
pop
clc
jne
mov
scas
push
into
ss
inc
push
pop
iret
gs
pushl
dec
sbb
xor
fildll
subl
loopne
clc
push
in
inc
mov
mov
and
push
jmp
jae
jmp
pop
pop
mov
lcall
je
mov
jecxz
je
mov
rclb
pop
in
loope
das
adc
sahf
xor
in
mov
and
jle
xchg
pusha
xchg
sbbb
sbb
in
les
jle
andl
mov
inc
sub
rclb
xchg
mov
shrl
movb
outsl
xchg
arpl
pop
sbb
mov
mov
imul
push
ss
lea
push
shlb
out
mov
xchg
sahf
rcl
jne
popf
into
gs
pop
in
xchg
adc
ss
jmp
or
xor
repnz
pop
cmp
and
jl
loopne
dec
loop
add
inc
andb
mov
inc
adc
mov
xor
xlat
adc
mov
push
mov
jo
addl
lret
outsb
in
xchg
or
sar
and
mov
cmp
daa
xchg
mov
enter
andl
movsl
lods
push
out
dec
xchg
repnz
or
lods
outsb
int
sub
adc
movsl
dec
and
inc
rorl
dec
sub
and
pop
ja
fisubrs
mov
adcb
outsl
push
movsb
cmp
clc
js
lds
push
cld
and
ja
inc
iret
call
ret
leave
pushf
cmp
cmpsb
les
adc
mov
adcl
inc
dec
xchg
lret
xlat
sub
inc
sbb
mov
insb
pop
jae
aam
and
and
test
jns
gs
enter
adc
cld
out
aad
push
arpl
scas
int3
fisubrs
or
cwtl
mov
aad
mov
fwait
and
mov
pop
xor
iret
push
xor
xchg
lea
push
testl
ja
fs
inc
popa
arpl
mov
repnz
mov
adc
popf
int3
and
cmc
out
mov
out
fmuls
mov
mov
xchg
mov
dec
loope
rcll
sub
iret
cmp
lcall
pop
loopne
or
sub
fsubrl
fwait
dec
insl
add
inc
push
push
jmp
and
add
daa
jo
push
adc
xchg
jnp
cmpsb
mov
shll
dec
mov
xor
or
and
ret
dec
popa
stc
call
or
mulb
dec
or
call
or
mov
inc
push
insb
in
inc
lret
pop
cmp
xor
gs
int3
and
out
add
adc
push
xchg
cli
adc
das
enter
jmp
stos
aas
mov
arpl
fwait
xlat
test
pop
cmp
cltd
pop
dec
cld
mov
sub
or
xchg
sbb
lds
jmp
imul
or
push
sti
push
push
out
adc
insb
shr
xor
cld
or
lock
gs
adc
ss
stc
negl
and
xchg
in
push
push
push
jne
dec
repnz
dec
in
adc
xor
push
mov
fdiv
ret
hlt
push
movsb
ds
cmpsl
mov
cmc
fnsave
hlt
icebp
repz
fs
subl
cmc
out
jne
mov
fbstp
mov
pop
out
mov
ja
mov
out
ss
or
enter
or
sar
les
mov
in
jl
ljmp
inc
lea
lret
sti
xchg
xor
sbb
je
ja
and
sahf
mov
test
out
xor
push
clc
mov
enter
mov
jmp
into
lods
lea
sub
jo
fiaddl
subl
pusha
movsb
add
sub
mov
loopne
mov
int
cmpl
int3
adc
xchg
xor
sahf
adc
pushf
mov
in
adc
inc
cmp
add
shll
js
inc
ret
stos
pop
jecxz
push
adc
mov
xor
mov
push
xchg
popa
in
cmp
loope
sub
or
and
inc
mov
test
dec
imul
cmp
lahf
cmc
dec
push
push
gs
push
jne
scas
push
mov
sahf
adc
fnstenv
bnd
aas
or
popf
mov
nop
cmpl
test
mov
mov
pop
mov
shlb
xchg
stc
insb
sbbb
sbb
sti
jbe
push
mov
fadd
push
or
pop
sub
mov
dec
cmp
pop
mov
inc
shlb
or
sub
push
paddb
xchg
mov
outsb
insb
in
sahf
dec
dec
xor
lock
xchg
sub
or
sahf
mov
mov
add
add
movsb
psrlq
jmp
dec
xor
push
xchg
cmp
and
cmp
movsb
dec
push
lock
aaa
std
or
cmpsl
jo
mov
in
stos
aad
sbb
xor
leave
aas
mov
test
outsl
push
fadd
lds
imul
out
in
addl
popf
push
or
test
push
ret
lods
push
repz
xchg
iret
pop
scas
es
mov
push
sub
pushf
xor
and
xlat
and
ljmp
xor
aas
stos
jle
lods
ljmp
jno
divl
cltd
ja
and
test
outsl
lea
mov
or
icebp
jp
loop
das
testl
sub
adc
ret
test
inc
push
jmp
int
leave
sub
xchg
test
lods
mov
mov
push
dec
dec
maskmovq
notl
cmpsb
das
add
dec
mov
cmp
imul
push
iret
js
jmp
mov
aaa
lea
cmp
das
sub
mov
xor
mov
sub
xchg
insl
xchg
in
fimull
hlt
pop
push
insl
popa
mov
and
aas
loope
lret
ds
ret
in
xlat
sub
aam
push
pop
leave
cmc
stos
inc
clc
loop
adc
xor
mov
fwait
pop
cmp
adc
inc
xor
xchg
in
lahf
push
insl
add
jle
dec
mov
leave
xchg
bound
mov
or
or
dec
iret
xchg
outsb
jbe
loope
loopne
jmp
add
push
add
dec
mov
aam
jle
mov
jg
jmp
mov
cld
xchg
daa
dec
scas
mov
outsl
mov
mov
lea
js
data16
fistps
dec
enter
call
scas
dec
jno
lds
sbb
mov
shl
fwait
lahf
push
stc
push
rcll
inc
mov
jle
mov
dec
fstl
mov
repz
and
or
aas
adc
xor
jmp
fstl
cltd
mov
dec
or
xor
stos
popf
xchg
sub
pop
loopne
inc
in
push
sbb
jae
cmp
pop
sub
out
push
sbb
loope
sbb
lcall
add
push
shld
rorl
jg
xchg
jns
jge
jne
mov
rol
adc
cmp
xor
mov
pop
insb
jmp
adc
into
gs
pop
add
in
das
push
mov
nop
jns
lods
nop
sub
mov
imul
adc
imul
xor
aas
lcall
mov
sbb
mov
push
divl
mov
sbb
aad
inc
xchg
rolb
das
pop
push
push
inc
dec
xchg
gs
aad
cltd
lea
inc
shlb
dec
test
lock
aas
cli
cld
scas
mov
fucomip
imul
adc
cmpsl
testl
inc
cmp
mov
xchg
test
aas
in
cmp
jae
sbb
ret
xor
pop
lret
hlt
repnz
and
mov
xor
test
adc
inc
das
js
lcall
mov
add
push
out
test
cmpsb
cmp
xlat
xchg
leave
pusha
clc
es
sbb
jle
leave
pusha
jb
es
mov
loope
pusha
adc
and
mov
dec
loop
pop
pop
aam
mov
outsl
and
bound
xchg
and
popf
mov
lret
nop
les
jb
aam
jg
mov
bound
ret
and
ss
sbb
shrl
xchg
and
divb
dec
pop
int
xchg
jbe
sub
sub
lea
xchg
push
icebp
stc
movsb
and
test
popa
pop
loop
sbb
mov
movsb
cmp
pop
pop
push
scas
lds
xchg
jno
imul
movsb
push
clc
popl
sub
ss
jnp
push
cmc
fdivrs
aad
jb
shlb
mov
jo
scas
sbbb
nop
jae
dec
sub
dec
jmp
mov
jb
mov
lahf
ret
mov
sub
orb
mov
mov
shll
push
sbb
mov
ret
or
hlt
pop
jle
mov
enter
pop
sub
pop
mov
jbe
and
cmp
pop
jne
loop,pt
lcall
adc
jb
inc
hlt
adc
loope
movsl
and
push
jmp
hlt
adc
mov
mov
mov
out
repnz
cmp
sub
mov
cmp
mov
test
sub
push
test
test
or
in
pop
or
or
cmp
pop
adc
hlt
add
loopne
stos
mov
pop
xor
and
addr16
sbb
adc
ror
out
sbb
jns
sub
xchg
jbe
bound
and
cmpsl
imul
sbb
int3
pop
hlt
std
fadds
or
sti
pop
sbb
out
mov
mov
test
add
adc
xchg
fnstenv
js
jge
lcall
sbb
es
pop
sub
xlat
mov
pop
mov
nop
cmpsl
clc
lock
push
or
aaa
lea
ss
adc
lcall
xchg
rcll
es
es
jmp
ja
call
popa
sbb
pushf
call
or
ss
mov
or
dec
shlb
mov
hlt
or
pusha
call
add
fcomps
xchg
mov
repnz
jp
pusha
dec
dec
pop
jl
pop
outsl
std
lahf
nop
mov
das
repz
imul
push
push
push
or
dec
shlb
xor
dec
cmpsb
sahf
inc
inc
dec
ret
mov
into
fstpl
adc
mov
cmp
pop
lds
pop
ficomps
test
jecxz
fsts
xor
and
pop
popa
pop
mov
push
push
pop
dec
push
jae
aaa
mov
pop
daa
mov
popf
jb
pop
les
jb
and
mov
fwait
push
mov
faddl
cmc
ret
repz
out
jecxz
iret
in
inc
aad
je
rcll
sbb
mov
lds
inc
add
mov
out
jnp
bnd
adc
mov
or
subb
jmp
xor
fildl
sbb
aam
jbe
loopne
rclb
cmp
pop
imul
lods
push
ret
or
push
data16
mov
mov
call
cmc
mov
not
bswap
aad
jge
inc
cmp
movsl
test
pushl
aad
xor
add
addb
ret
idivl
fstl
cltd
pop
jbe
xor
xchg
jbe
adc
jb
ss
pop
lahf
push
xchg
cmp
lret
mov
out
inc
insb
mov
leave
xchg
scas
icebp
int3
mov
fsub
pop
mov
int3
cmp
mov
cld
cmp
mov
push
aaa
mov
movsl
or
in
cli
std
cmp
adc
and
repnz
xchg
or
aam
mov
ffreep
xchg
loop
xchg
push
and
pusha
sub
xchg
and
and
mov
sbb
jnp
mov
imul
push
jnp
xor
lret
imul
in
mov
and
cmp
icebp
xchg
add
pop
icebp
in
adc
insl
cltd
xchg
mov
out
sub
xchg
dec
insl
fucomp
aas
mov
dec
dec
das
pusha
andl
pop
div
js
mov
leave
add
push
cmp
leave
dec
arpl
ret
cmpsl
ds
popa
les
and
int3
ja
scas
sbb
test
dec
sti
push
stc
fsubs
rclb
les
insl
out
cmpsl
sahf
mov
fcomip
mov
fbstp
mov
sbb
call
xchg
xor
and
or
cli
pop
dec
cmp
jae
add
or
repnz
out
jp
xchg
add
sub
repz
stos
push
mov
int
mov
jl
es
sbb
lret
cld
or
pop
sti
clc
mov
pop
loope
pop
bound
adcb
push
adc
mov
mov
out
les
adc
movsb
lods
cs
in
outsl
fcomi
or
mov
sbb
pop
mov
and
mov
sub
sbb
push
push
jae
mov
push
cmp
and
andb
outsl
sub
hlt
dec
loopne
rcll
lods
inc
pusha
xor
int3
insl
ss
loop
push
adc
push
jmp
xor
xchg
xchg
pop
repnz
push
mov
or
and
xchg
jo
mov
ret
out
mov
add
insl
add
cmp
jnp
jo
adc
xchg
mov
test
rolb
push
fwait
das
and
and
xchg
sbb
in
push
cmpsb
pop
sbb
mov
je
pop
sbb
xchg
sub
mov
sbb
lahf
aam
ret
cmpsl
pop
cmc
es
xor
bound
hlt
out
sub
inc
jl
pop
imul
addl
jns
fstp
shlb
sbb
sbb
stos
push
jecxz
add
ljmp
imul
push
loope
inc
faddl
adcb
mov
fs
rol
shlb
jo
leave
in
add
mov
mov
das
inc
mov
pushl
shlb
push
pminub
jl
ud2
in
lret
inc
add
enter
xchg
imul
xor
or
jmp
dec
inc
loop
xchg
arpl
inc
jne
xchg
imul
xor
inc
xchg
jo
jne
mov
popl
add
test
arpl
inc
mov
out
add
push
mov
cmpsl
inc
push
adc
mov
inc
std
bound
rorb
loope,pt
jnp
pop
dec
xchg
bnd
movsb
jmp
pop
push
js
repz
or
scas
jnp
push
in
inc
shrb
lret
out
cmp
and
jle
pop
mov
add
les
mov
jge
aad
and
outsb
loope
pop
repz
cmpl
sub
popf
mov
stc
orl
mov
ss
mov
popaw
mov
lea
ss
inc
jne
jae
push
call
dec
enter
or
push
gs
mov
pop
or
dec
hlt
xchg
sahf
mov
lods
mov
movl
sbbl
add
rcrb
inc
inc
popf
stc
out
sbb
add
psrld
test
and
ret
stos
mov
in
loop
or
setp
insb
cltd
das
repnz
fwait
jg
mov
fucomp
lret
leave
or
sbb
lods
loop
jnp
mov
dec
cmpsb
jmp
pop
adc
dec
lods
xor
cmp
xchg
movsb
sbb
push
cli
cli
mov
ss
inc
rcrb
lods
or
mov
int
xor
fiaddl
nop
enter
xor
imul
cmp
leave
out
pushl
jne
dec
jmp
and
cmpsl
push
stos
or
hlt
jge
bound
dec
xchg
sbb
sub
stos
clc
push
mov
ret
push
and
dec
daa
movb
daa
test
and
xchg
das
lret
cmp
mov
imul
cmpsl
movsl
cli
cmpsl
or
out
jne
imul
mov
and
mov
dec
xor
adc
push
orb
sub
sub
jbe
jmp
test
sahf
mov
cld
aam
jg
lods
sub
or
cli
leave
dec
ja
dec
popa
mov
fsubrs
jmp
stc
cli
mov
clc
jbe
ret
lods
jo
cmp
in
test
decb
xchg
or
aas
xor
xchg
xchg
inc
jl
push
inc
cmpsl
movsb
outsb
in
repz
shrl
mov
cli
loope
xlat
sbb
mov
mov
xor
sbb
aaa
bound
mov
cmp
ret
shll
inc
dec
jo
jge
fdivl
cmovno
mov
loope
cmpsl
clc
and
popa
cmp
pop
push
jo
cli
ds
jbe
mov
imul
aam
popf
xor
xchg
add
scas
fstpt
adc
jns
pop
cmp
pop
loopne
sarl
lret
mov
loop
fmull
outsb
repnz
xor
dec
cmpsl
out
pop
test
push
push
js
movsb
enter
push
scas
call
or
nop
or
push
cmp
push
and
and
outsl
lock
mov
pop
and
add
and
xor
jae
and
sbb
js
push
lock
push
sub
cmpb
adc
std
pop
push
int
scas
shlb
js
std
sbb
lcall
leave
mov
ss
arpl
aam
rclb
jle
in
jecxz
mov
mov
push
pop
jg
clc
clc
lods
dec
fists
lods
aam
stos
dec
mov
mov
dec
sub
push
sbb
inc
gs
idivb
sub
int3
inc
pusha
rcrb
push
and
in
mov
scas
mul
adc
mov
xor
jns
loope
or
adc
and
sbb
in
jb
sub
fucomip
lods
add
sub
push
insl
insb
xchg
int3
test
or
pop
inc
adc
pop
fs
add
fdivrs
pop
dec
loop
or
mov
mov
sbb
inc
bound
outsl
daa
inc
jle
jmp
insl
inc
xchg
inc
push
mov
dec
xor
out
pop
cmp
out
and
dec
dec
pusha
jmp
cmp
or
cmp
in
pop
push
push
aaa
push
push
cmc
xchg
push
js
xsaveopt
mov
push
xor
mov
mov
xor
xchg
out
sbb
inc
leave
xchg
sub
pusha
sub
shlb
pop
repnz
in
dec
dec
std
add
aas
cmp
push
scas
cmp
inc
and
xlat
pop
stc
lea
sbb
pop
sbb
xchg
adc
cmp
sbbl
fdiv
pop
pusha
inc
xchg
add
push
mov
adc
adc
jnp
inc
pop
lcall
nop
push
ds
in
pop
adc
mov
adc
fxch
arpl
mov
rcrb
add
xor
lret
int
leave
push
mov
cmp
mov
pop
inc
mov
mov
int
sarl
pushf
lods
jbe
sub
mov
and
lret
mov
push
lret
xchg
fsubs
dec
pushf
scas
movsb
ss
cmp
push
pop
adc
cmp
aaa
loope
out
int3
xor
add
push
xchg
adc
adc
xchg
dec
pop
bnd
jle
rolb
dec
dec
cmp
pushf
jecxz
jg
sti
les
insl
pop
mov
jb
subl
mov
pop
ficoms
psubq
inc
fwait
cmpsb
int3
dec
scas
jge
sub
setl
dec
es
ja
adc
mov
imul
scas
jno
orb
xor
and
jo
test
add
es
or
shll
sbb
int3
xlat
das
lods
filds
fwait
push
and
jle
mov
jle
lea
add
inc
and
xchg
jp
xorb
mov
or
movsl
adc
jecxz
sbb
pushf
or
rorl
repnz
clc
sar
inc
pop
and
sbb
xchg
inc
jl
in
rclb
nop
pop
out
pop
pop
decb
imul
dec
dec
pop
dec
pop
movsb
xorl
or
mov
adc
or
jmp
test
nop
ss
out
jno
mov
dec
je
mov
andl
dec
cmc
adc
rclb
cwtl
xor
xor
adc
hlt
mov
fsubs
dec
stos
lds
push
and
add
push
fwait
mov
xchg
pop
imul
orl
push
pop
into
xchg
mov
aam
cmpsb
mov
fisubl
adc
mov
sbb
test
sub
fstps
mov
mov
pop
ja
cli
cwtl
inc
cltd
or
xor
mov
pushf
pusha
or
fstpt
or
lret
mov
in
ret
pop
xlat
pusha
push
jb
lret
clc
xchg
and
push
xor
xorl
aaa
mov
in
cmp
ja
insb
fidivl
pop
push
ds
add
popa
je
pop
das
addr16
andb
add
aad
xchg
mov
rclb
fidivs
lcall
and
ret
scas
cmp
arpl
fucomip
movsb
pop
pushf
js
and
adc
push
adc
cltd
xchg
arpl
sahf
cmp
aas
dec
push
cmp
lcall
in
lods
mov
into
int3
xor
cli
inc
sbb
popf
add
sbb
arpl
cmpsb
negb
add
aas
mov
movd
lock
fildl
mov
push
sti
cmp
sbb
sub
push
adc
icebp
mov
xchg
fimull
ss
pop
lds
cmp
push
stos
mov
push
fidivrs
xor
pop
mov
inc
pushf
push
jbe
push
out
lea
fs
xchg
aad
int3
out
jecxz
dec
mov
cmc
addl
sahf
xlat
fldt
cmc
stos
stos
mov
shlb
add
mov
mov
mov
xor
xchg
cmp
and
xchg
sahf
sub
xchg
mov
push
cmpsl
test
or
mov
cld
sahf
sbb
fcmovbe
mov
popa
cmp
push
mov
pop
jmp
clc
sbb
add
pop
leave
xor
inc
shrb
sbb
loop
addr16
cld
xchg
into
fsubl
cmp
cld
stos
xlat
addr16
pusha
jae
dec
xor
add
pusha
and
lea
cmc
mov
cmp
jne
fadds
lods
add
cmpsl
test
faddl
lds
in
rcr
std
nop
and
pop
jl
popf
xchg
push
out
push
fld
dec
sti
adc
aad
es
mov
xor
icebp
cltd
pop
call
and
mov
rorb
mov
out
push
stos
nop
push
pop
mov
ret
jns
xor
push
sbbb
xchg
push
jae
or
cmp
jo
pop
dec
ja
jo
or
add
jo
and
aad
imul
sbb
mov
fistl
and
lods
mov
jnp
sarb
inc
adc
sti
push
popf
ret
jmp
popa
clc
cmp
cmp
or
sbb
cmp
xlat
dec
add
in
pop
mov
lahf
jne
shll
xorb
xor
xchg
lods
aaa
adc
hlt
mov
xchg
pop
outsb
outsb
xor
scas
arpl
lods
inc
jae
xchg
mov
in
adc
mov
and
arpl
lret
rolb
jne
push
call
dec
ljmp
rol
xchg
add
push
sbb
mov
ljmp
in
shll
push
fsubrs
imul
dec
jns
scas
mov
jg
mov
rolb
adc
jae
dec
pop
push
xchg
adc
sub
scas
out
or
adc
repz
hlt
dec
push
fwait
mov
jecxz
pop
push
add
push
ss
mov
push
mov
sbb
test
les
fiadds
dec
sbb
sbb
imul
or
adc
fs
mov
shr
repnz
iret
lcall
fucomp
cltd
pop
jbe
cmp
imul
sahf
imul
cmp
inc
fisttpll
fwait
out
int
fs
incb
and
lret
sti
inc
repz
or
outsl
fldcw
xchg
xor
adc
or
test
inc
xchg
lahf
push
and
es
xchg
adc
lea
sbb
scas
repz
sbbl
leave
ror
sub
cmp
lcall
lds
inc
lock
push
adc
inc
cltd
popf
dec
out
stc
cltd
xor
adc
lcall
cltd
pop
addr16
add
insl
loope
sub
xorb
cmp
in
aaa
inc
aad
es
cmp
dec
das
jne
cltd
cmpsb
push
aas
dec
iret
outsb
and
sahf
je
add
iret
cmp
leave
fwait
and
dec
imul
stos
cmpb
hlt
js
fiadds
adc
sub
add
pusha
xor
jecxz
xor
cmp
dec
les
cmp
mov
fmuls
hlt
and
clc
xor
xchg
sub
sbb
stc
adc
adc
jmp
int
cld
or
cmpsl
jno
jbe
mov
jg
loop
mov
sub
fmull
jg
rol
jl
dec
dec
dec
mov
jnp
sarl
aad
fisubl
add
xor
ja
test
push
pop
nop
pop
fimull
sbb
test
icebp
jnp
les
insl
cmpsl
loop
mov
loopne
cmp
sbb
ror
ficoml
or
pop
cltd
push
add
xlat
bound
dec
pop
faddl
mov
sti
sub
out
and
sub
gs
add
sub
gs
or
js
xchg
mov
daa
sub
push
fdivr
xchg
and
or
or
inc
adc
mov
mov
mov
out
jmp
mov
mov
cld
cltd
jge
int3
cmc
aad
daa
xchg
fwait
sub
jg,pt
jecxz
dec
aas
mov
into
add
pop
and
inc
mov
sbbb
jecxz
or
push
mov
jbe
insl
rolb
mov
jle
inc
fdivrp
mov
lock
dec
and
insb
dec
mov
in
daa
cli
mov
outsb
add
sbbl
in
aaa
cmp
mov
jg
and
push
stos
scas
pop
mov
dec
add
fidivl
pop
sub
dec
pop
mov
loop
jno
dec
out
andb
mov
push
ss
adc
leave
sbb
pop
outsb
xchg
mov
xor
repnz
mov
rolb
xlat
fsts
lcall
bound
mov
scas
daa
mov
inc
std
xor
test
fidivl
and
aaa
sub
jb
or
cmpsl
je
hlt
and
jle
testb
insb
or
imul
push
lods
mov
sbb
and
or
mov
fcoml
adc
xchg
add
jno
sarb
ja
das
stos
jp
movsb
scas
repnz
mov
cmc
cmp
lock
mov
adc
sti
loopne
cmp
or
testb
gs
test
cmp
cmp
sub
mov
adc
lret
bound
in
sbb
mov
xor
push
xchg
test
or
xchg
sub
ljmp
push
mov
push
cmp
push
inc
cmc
mov
aad
pop
nop
xor
andb
sbb
lods
js
popf
movsb
xor
and
cld
mov
or
xchg
and
imul
pop
jno
inc
sahf
pop
lahf
pop
scas
cli
sub
mov
push
pop
repnz
push
insl
add
sbb
je
mov
cmpsb
inc
clc
imul
je
dec
jecxz,pt
push
xchg
out
mov
adc
into
fsts
and
rcrl
call
cmp
add
pop
cmp
jecxz
daa
cwtl
push
das
push
mov
lahf
test
gs
stos
push
adc
dec
pop
cli
mov
in
sbb
mov
imulb
out
int3
movsl
icebp
fs
mov
and
int3
clc
xchg
aad
mov
and
dec
fnstenv
lret
bound
add
clc
push
js
nop
mov
xchg
mov
imul
aas
in
inc
in
fstl
les
ret
pop
push
fidivrs
shlb
fisubl
cltd
sub
pop
mov
ret
cmp
xor
jge
pusha
sub
lcall
mov
adc
stc
xchg
xor
data16
rcrl
mov
mov
sbb
cmc
mov
in
jae
dec
mov
or
mov
pop
push
out
mov
jnp
adc
mov
jge
testl
cmp
sub
popa
pop
fidivl
ror
and
mov
xchg
fnstcw
inc
mov
fidivl
dec
mov
mov
pop
sub
shr
insl
and
mov
pusha
ret
sbb
mov
insb
add
aaa
cmp
or
and
ret
into
xchg
test
pop
push
pusha
push
das
fdivrp
sbb
imul
mov
mov
pop
lcall
fs
jo
lret
sub
sbb
xor
loope
test
rcrb
fildll
sub
pop
sbb
out
add
dec
push
add
stc
jnp
sub
out
xchg
push
fmuls
aam
stos
sub
aas
pop
shrb
and
test
int
cli
cmp
fnsave
sub
aas
mov
xor
adc
push
lods
cli
push
or
jmp
fwait
mov
pop
sbb
inc
fcompl
jg
xchg
mov
inc
and
sbb
mov
adc
stos
or
mov
inc
adc
and
mov
mov
cmpl
stc
scas
divl
jb
or
es
mov
xor
jns
inc
iret
lock
xchg
pusha
mov
jecxz,pn
sbb
mov
pop
out
scas
orl
sbb
cld
xchg
inc
xor
andb
push
popf
jo
pop
scas
push
nop
imul
or
sbb
in
stos
inc
fildl
inc
fstpt
adc
jge
movsl
ret
rorl
jbe
movsl
push
mov
test
jo
mov
andl
mov
outsb
sub
insl
enter
mov
add
fidivs
and
lds
rcll
mov
pop
hlt
clc
add
xor
jl
sbb
test
in
popa
clc
or
jg
or
add
test
mov
jbe
mov
sbb
push
sbb
imul
push
out
push
sub
das
roll
std
sbb
je
and
cmpsl
xchg
xchg
mov
decl
fdivrl
ret
mov
leave
dec
jecxz
sbb
sbbl
mov
push
jnp
pop
lods
or
movsb
es
push
imul
push
mov
je
cmp
jle
cmp
and
sbb
jno
sbb
add
shll
push
mov
shlb
fidivl
cmp
test
adc
lret
mov
movsl
push
sub
jno
cmp
mov
xchg
clc
pop
sarb
icebp
in
lods
push
adc
dec
xor
bound
mov
mov
int3
add
or
je
pop
repnz
jp
dec
loop
out
jg
out
pop
jbe
cmp
outsb
add
xchg
sub
jg
movsl
into
gs
stos
inc
std
stc
in
subl
leave
pusha
dec
dec
cli
xchg
jg
daa
mov
inc
faddl
call
sub
arpl
pop
pop
lock
push
movsl
ficomps
push
xchg
sub
subl
dec
and
jnp
repnz
jle
jae
out
xor
push
sti
xchg
dec
xor
push
data16
mov
mov
pop
or
cmp
dec
jno
jle
jno
add
es
cli
aad
sub
dec
loopne
add
xor
pop
icebp
xchg
into
xor
sti
sbb
jae
cmp
sbbb
push
shrl
xchg
fldcw
cmpsb
sub
sub
outsl
stos
pushf
imul
lret
ljmp
dec
inc
gs
jno
push
out
movsl
xchg
fnsave
call
and
insb
add
xlat
outsb
jns
int3
arpl
hlt
mov
hlt
cmp
and
mov
data16
popa
clc
xchg
xchg
xchg
cs
mov
mov
adc
adc
cmp
pusha
sub
mov
in
and
jmp
dec
xor
ss
push
push
call
mov
les
push
cs
fwait
xor
cmpsl
mov
fucomp
std
sbb
mov
inc
mov
jb
sbbl
lret
jl
in
cmp
hlt
add
push
nop
mov
dec
loop
sbb
icebp
out
daa
inc
stc
nop
ja
jge
jae
pop
scas
int
lret
lret
out
xor
decb
xchg
in
ret
in
out
pop
cmp
nop
jns
dec
mov
arpl
jo
add
popf
xor
adcb
push
or
mov
arpl
jle
add
into
xor
dec
loopne
bound
xchg
add
mov
mov
add
xor
shrl
imul
jecxz
xor
dec
sbb
pop
inc
fidivl
ljmp
mov
jg
stos
lods
ljmp
mov
jle
jp
lock
xor
cli
imul
jge
dec
mov
sbbl
sahf
icebp
mov
and
aad
mov
addr16
cli
and
stc
std
xchg
sub
jg
mov
rcrl
pop
hlt
lcall
mov
pop
scas
inc
xchg
icebp
lret
bound
leave
pusha
sti
std
xchg
sub
xchg
cmc
xor
daa
xchg
xchg
sub
cli
xor
sub
xchg
cmc
fnstenv
xchg
push
in
ret
idivl
and
cld
rcrl
xor
ret
bound
pop
sbbl
add
cwtl
ret
dec
and
sub
cltd
shrl
repz
and
outsb
xchg
sub
aam
inc
fstps
dec
pop
mov
add
pop
xor
addr16
sbb
testb
test
in
test
and
push
jnp
lret
movsl
shrl
clc
pop
out
sub
cmc
js
sub
jg
xor
jecxz
in
adc
enter
jne
pop
loop
cmc
adc
add
mov
sbb
jecxz
adc
frstor
sysret
xchg
sub
sbb
cmc
adc
sbbl
pop
rcrl
stc
cmp
jae
adc
fsubrs
add
mov
clc
sahf
xor
and
ljmp
call
jae
xor
in
and
icebp
insl
add
push
pop
repz
clc
and
rclb
shrl
idivl
sti
imul
dec
sbb
jns
pop
mov
xchg
mov
les
fidivl
add
outsl
addr16
cwtl
das
mov
mov
fsubp
std
adc
add
xor
cltd
mov
push
in
test
movsb
xor
rcl
popa
clc
add
jnp
sub
push
push
dec
and
lods
lcall
push
jg
and
jp
dec
inc
out
xchg
mov
cmpsb
sahf
out
xchg
les
imul
sbb
test
or
fnsave
out
in
test
add
out
jno
ds
xchg
cmpsl
les
sbbl
std
cwtl
das
sub
ss
mov
bound
fucomip
orb
jae
pop
inc
mov
jb
and
leave
rolb
lcall
ret
pop
push
inc
repnz
pop
hlt
mov
les
sbb
das
jg
pop
add
ret
iret
lods
pop
xor
into
mov
call
das
push
pop
push
call
mov
ret
hlt
sti
xchg
xor
clc
push
pop
sub
nop
jge
das
scas
mov
fsubp
jp
hlt
or
das
dec
push
xor
xchg
push
scas
inc
fstp
rorb
daa
push
cmpsb
cmp
jnp
mov
xchg
xchg
fidivs
mov
cld
xchg
and
popa
js
inc
sbb
test
js
xlat
ljmp
sub
push
call
mov
rolb
movsb
sbb
mov
pusha
xor
add
loopne
and
adc
fnsave
mov
sarb
pop
jae
jecxz
xor
lods
ret
addr16
mov
pop
lock
fildll
adc
sbb
pusha
xor
xor
inc
mov
dec
data16
mov
or
call
in
pusha
daa
xor
push
mov
and
pop
fisttps
or
xlat
outsb
pop
sub
mov
int3
and
repz
adc
push
fs
mov
mov
pop
shll
add
popa
clc
add
daa
push
sub
push
movsb
jns
push
scas
ret
and
jmp
daa
mov
dec
jae
or
lret
mov
and
xchg
push
xor
mov
add
dec
aam
xchg
lret
mov
insb
pop
imul
inc
pop
cli
cmpsb
dec
je
xor
push
inc
aam
and
out
xlat
nop
sahf
stos
clc
adc
push
movsl
popa
mov
mov
shll
dec
lds
cmpsb
cmp
add
icebp
dec
or
lods
inc
sbb
mov
subb
xchg
xchg
js
pop
xor
subb
scas
xchg
and
jg
into
outsl
sub
cmp
inc
scas
xlat
ja
mov
mov
ljmp
mov
adc
mov
xchg
gs
inc
and
pop
imul
inc
cmp
ljmp
xor
sbb
nop
inc
or
mov
repz
dec
jecxz
insb
adc
pusha
popf
mov
fiaddl
mov
lds
in
test
mov
push
mov
lods
hlt
jl
mov
mov
ret
adc
loopne
lret
xlat
jmp
mov
or
fwait
repnz
pop
mov
aas
push
loop
jb
jno
repz
aam
popa
mov
and
outsl
leave
dec
ds
push
out
stos
call
jae
adc
xchg
test
adc
lcall
push
adc
push
popf
push
lahf
xchg
callw
dec
mov
jg
xchg
gs
and
popa
repz
inc
mov
lcall
push
fistl
jnp
xor
or
xor
mov
jne
lret
dec
add
mov
add
pushf
cmp
xchg
jp
mov
cmpsb
cmp
inc
add
lahf
pop
cld
lods
pop
iret
pop
jge
insl
lret
xchg
sub
and
fwait
cmc
ficompl
ret
sbb
cwtl
hlt
in
mov
adc
mov
add
leave
mov
sbb
xlat
loop
lds
xor
outsl
inc
lcall
pusha
pusha
mov
add
aas
loop
xchg
dec
mov
sub
push
ja
jno
addr16
sub
mov
add
lahf
xor
repnz
push
jle
stos
lret
sti
sbb
cmpsl
test
divl
mov
cmp
jne
fs
iret
sbb
in
ja
mov
call
mov
inc
les
fisubs
mov
out
pop
enter
mov
rcll
imul
push
mov
cmp
movsl
rorb
push
movsl
xchg
test
inc
shll
dec
lds
jp
mov
mov
shrl
dec
mov
sbb
dec
mov
xor
andl
int
aas
xlat
mov
icebp
or
mov
mov
xchg
cmpsl
iret
mov
into
mov
hlt
xor
call
stos
inc
mov
pop
sahf
pusha
test
out
push
ror
cld
push
rcr
sub
iret
fnstsw
hlt
lret
out
cmp
mov
pop
add
repnz
int3
stos
int
fsub
adc
out
insb
xchg
enter
lds
ret
js
movsl
pusha
cli
dec
movsl
movsb
imul
xchg
mov
cmp
fcoml
sbb
enter
fldt
or
out
lock
and
jmp
adc
xlat
lcall
mov
mov
test
cli
mov
mov
nop
jp
fwait
cwtl
andl
cmpsb
cmp
insl
leave
rorl
sub
xchg
xchg
call
cmpsl
jp
push
jb
aad
push
shrl
cs
jns
out
pop
adc
imul
insl
mov
inc
push
outsb
add
add
ss
dec
arpl
fdivrs
aas
shlb
mov
jo
inc
sahf
inc
cmp
sbbb
or
inc
popl
mov
shll
sarl
and
add
scas
insl
loopne
repnz
popl
das
loope
psubd
pushf
icebp
sub
and
out
faddl
pop
shl
loopne
mov
adcb
jnp
push
dec
iret
insl
jno
imul
andb
inc
pop
shrl
sub
ss
adc
ja
add
divb
add
push
bound
xor
mov
or
stos
imull
aas
pop
test
je
aas
inc
sbb
jp
iret
or
pusha
cmpsb
mov
out
fstps
add
xlat
mov
sbb
into
dec
mov
inc
rcl
sbb
into
and
in
push
out
lods
and
sub
dec
cmp
pop
aam
pop
mov
aad
addr16
hlt
mov
aam
out
in
js
or
decb
sbb
push
movsl
enter
mov
repz
cmp
aad
push
out
iret
aaa
mov
test
lea
adc
mov
mov
adc
movsb
lret
shufps
jecxz
dec
mov
push
fs
repz
das
orl
jnp
add
jnp
xchg
inc
fdivl
mov
push
push
mov
jmp
adc
or
sub
jb
and
push
push
inc
jmp
pop
popf
push
pop
test
add
mov
ljmp
in
into
inc
inc
ret
mov
in
lcall
ds
inc
sub
fidivs
ret
mov
xchg
sub
aam
sbb
mov
mov
adc
js
out
mov
cwtl
je
repnz
enter
jg
ret
lods
xchg
or
out
jle
into
jo
push
ss
inc
mov
push
fimuls
cmovne
stos
jp
jge
jl
lods
xor
dec
scas
cmp
ss
pop
lds
fcmovbe
pop
pop
or
inc
fisttpll
repz
mov
loope
cltd
or
in
add
pop
std
jecxz
add
cmc
sbb
cwtl
push
xchg
push
in
pop
test
lret
stc
das
fmuls
aaa
or
pop
push
test
cs
jb
lock
mov
daa
pop
inc
xchg
mov
js
mov
lahf
jb
scas
jo
cltd
mov
jno
ja
iret
inc
dec
and
addb
ja
cmp
jno
clc
and
imul
dec
das
hlt
xor
dec
out
and
fnsave
js
push
ds
mov
insb
outsl
push
mov
and
pop
dec
icebp
sub
mov
push
dec
dec
mov
pop
dec
cmpsl
cmp
sahf
lea
cmpl
xchg
mov
imul
call
test
push
xchg
dec
mov
pusha
cmpsb
arpl
xlat
xor
rorb
add
inc
cmp
outsb
mov
aaa
rcrb
out
jg
jge
mov
or
jnp
or
add
daa
imul
pushf
xor
sbb
cmc
dec
mov
clc
test
subb
subl
lahf
pop
sub
pop
pop
pop
iret
jg,pt
addb
ret
push
jmp
xor
pushf
daa
insl
sbb
xor
orb
js
int
mov
adc
jp
xchg
cmpsw
sub
jno
repz
daa
bound
mov
je
in
scas
pop
ljmp
pop
cs
inc
mov
pop
enter
pop
popl
lret
sub
mov
mov
xor
addr16
xorb
mov
push
mov
adc
pop
testb
aaa
cmc
add
or
inc
mov
cwtl
sbb
xor
pushf
insl
fisttpl
adc
iret
push
scas
bound
cltd
out
stos
pop
add
ret
adc
adc
adc
roll
pop
xor
jno
out
cltd
xchg
dec
sub
xorb
and
xchg
cs
and
mov
dec
mov
scas
push
cltd
mov
test
adc
movsl
in
xor
in
add
cmc
loop
mov
sti
rcll
rcr
push
ror
stos
pop
sahf
xchg
fst
mov
icebp
mov
out
or
in
inc
jg
push
stos
fistl
test
lret
push
jns
inc
mov
jae
bound
inc
push
mov
fwait
push
pushf
bound
into
jmp
pop
aas
mov
add
das
test
in
popa
jecxz
pop
stos
mov
inc
outsb
lcall
push
insl
lret
cltd
xchg
mov
xchg
fists
jge
fwait
inc
arpl
fidivl
fadds
std
mov
cmc
pop
or
out
xor
les
cmp
add
je
bound
xor
test
rcl
outsb
xchg
mov
daa
in
imull
xlat
sbb
add
adc
inc
cltd
std
xchg
jge
sbb
fists
xchg
test
cmpsl
ds
js
adc
pusha
pushf
lock
cmp
call
mov
xchg
ss
je
push
xchg
push
lret
das
push
arpl
xchg
pop
mov
adc
push
loope
adc
mov
ficoml
cltd
ret
and
mov
jg
imul
repnz
or
push
ret
xchg
mov
push
adc
outsb
mov
out
test
enter
cwtl
cmp
das
leave
mov
rcrb
xchg
push
inc
loope
xor
xchg
push
shlb
repnz
rorb
lcall
fcoml
xor
cmp
sbb
in
aad
testl
scas
pop
push
hlt
push
mov
sbb
negl
das
repz
mov
mov
imul
aaa
pop
sbbl
cmc
dec
adc
inc
leave
mov
jmp
in
lcall
lods
dec
mov
lods
iret
cmp
nop
mov
jo
jae
pop
lods
xchg
aaa
ss
push
mov
filds
lock
daa
xchg
into
push
das
and
pop
dec
ja
xchg
jne
scas
test
into
jae
js
popa
inc
inc
fnstcw
subb
daa
jge
add
sbb
xor
testl
pop
pop
xor
in
ss
jbe
fidivl
call
or
cmpsl
hlt
push
add
popf
mov
loope
imul
in
push
push
jle
test
and
lods
pop
pop
inc
mov
push
pop
sahf
xchg
dec
add
popf
dec
push
loopne
cmp
cmpsl
inc
insl
int3
inc
ds
pop
lahf
xor
xor
sbb
cmp
cmp
loope
push
adc
push
jg
les
call
sbb
xor
scas
aas
push
pop
or
pop
into
cwtl
imull
add
sahf
xchg
mov
ss
outsl
push
add
rcll
cmc
cmp
push
dec
fisttpl
jne
pop
inc
push
lods
pop
jo
mov
xchg
inc
xchg
mov
mov
mov
data16
imul
cmp
xchg
adc
lcall
mov
mov
xor
lods
pop
mov
stc
mov
lds
nop
pop
ret
loopne
fnsetpm(287
enter
movb
mov
cmp
sti
fwait
outsb
mov
movsb
jp
lret
daa
loope
sub
repz
pop
sahf
test
gs
jp
das
repz
dec
mov
xchg
pop
out
inc
dec
out
xor
pushf
mov
jno
movsl
mov
pop
aam
mov
sbb
or
mov
dec
mov
sar
int3
mov
jmp
mov
stos
dec
test
scas
pop
push
into
pop
lock
jle
icebp
cmp
fildl
lcall
xchg
xchg
lret
push
ret
ss
fs
mov
mov
fidivs
test
in
inc
push
ljmp
xor
mov
push
sahf
out
hlt
lds
push
lods
sub
jnp
iret
jl
popf
dec
test
sar
jl
fcomps
sub
mov
jecxz
fsub
test
inc
mov
push
bound
add
xchg
pop
inc
scas
pop
sbb
lods
dec
or
test
bnd
les
jecxz
in
mov
lock
lret
cld
das
mov
adc
dec
push
and
pop
jge
and
jmp
jne
fiadds
cmp
andl
pop
fildl
xor
cwtl
sub
jg
cmpb
ja
lcall
sub
xorl
sub
int
test
sti
cmp
xchg
lret
bound
icebp
test
mov
sbb
rcrl
mov
call
add
xchg
add
call
stos
stc
adc
out
imul
dec
fs
jnp
fwait
subb
ret
push
sbb
mov
add
repz
insl
push
adc
cmc
movsb
mov
pop
or
xor
sub
xrelease
mov
scas
lea
scas
insl
add
shrb
iret
push
stos
fnstenv
flds
push
in
test
movb
test
and
or
cmpsb
addr16
and
add
fwait
inc
xor
and
rorl
push
fidivrl
repnz
and
add
std
dec
or
arpl
imul
mov
jl
sarb
sub
jb
dec
xchg
xor
push
stos
arpl
pop
enter
ret
and
leave
xor
add
and
dec
jle
sbbb
mov
rorb
nop
cltd
xchg
jle,pn
mov
fs
adc
movsl
inc
xchg
xor
sub
imul
loopne
xor
pop
xchg
jbe
rorb
mov
das
and
mov
mov
call
push
xor
call
loopne
fabs
loop
imulb
repz
sahf
adc
mov
repz
ret
addr16
in
stos
xchg
jmp
sbb
sub
sbb
mov
rcll
or
cwtl
cld
popf
mov
ljmp
sarl
xor
lock
cmc
in
lret
cld
mov
cmc
das
fnstsw
xor
int3
fmull
push
lret
push
std
sub
sbb
sub
out
pusha
xchg
out
pop
lds
xchg
mov
and
add
pop
jl
and
inc
adc
fwait
pusha
bnd
cmp
mov
enter
mov
pop
outsb
cmpsb
movsb
ret
in
pop
aam
call
daa
or
xlat
sub
lcall
push
int3
ss
imul
repnz
call
mov
into
xor
jg
pusha
push
mov
sub
mov
jns
xchg
mov
xchg
sbbb
inc
js
addr16
sub
or
sbb
mov
lds
clc
inc
rcr
jo
push
pop
cli
cmp
jecxz
in
pushf
shld
loop
adc
jecxz
hlt
in
adc
xlat
lods
pop
pushl
leave
in
test
gs
xlat
pop
mov
sbb
cmp
add
pop
sub
cmp
cs
or
jge
adc
or
add
pushf
sbb
push
push
popf
jne
loope
xlat
push
dec
stos
fists
lds
mov
out
adc
push
iret
mov
loopne
jne
sub
aad
mov
jne
in
inc
out
js
imul
jno
mov
push
fsubs
loope
mov
mov
popa
jne
dec
jbe
pushf
inc
and
jbe
xchg
xor
jns
add
adc
xchg
ret
test
lcall
leave
dec
mov
outsl
int
shl
xchg
xchg
jb
or
stos
xor
cmpsl
add
or
repz
ja
jmp
shll
mov
les
pop
repz
mov
repnz
cltd
xchg
pop
je
add
jns
sub
push
push
rcrb
movsl
xor
bound
inc
dec
sub
push
inc
adc
push
mov
ss
and
dec
inc
jae
ds
dec
cmpsb
pop
pop
pop
ficoms
push
mov
dec
jno
lcall
push
test
stos
sub
fiadds
sbb
push
cmpsl
loope
addr16
ret
pop
and
test
addr16
mov
or
mov
test
sbb
push
mov
aaa
test
into
call
cmp
fsub
pop
mov
fisubl
cmc
movb
rcrl
out
add
loop
in
lcall
and
out
in
shrb
repz
out
sbb
sbbb
xor
lahf
dec
movsl
or
int
push
cs
mov
icebp
pop
andb
mov
sbb
scas
loop
lods
mov
jl
test
in
sti
sub
fmuls
cmpsb
call
or
push
jecxz
cmpsb
mov
pop
repnz
outsl
sub
dec
and
sbb
pop
clc
test
jmp
jmp
aas
or
pop
mov
xchg
addr16
ret
dec
mov
fcmovnbe
daa
int3
in
and
clc
sub
mov
cmc
push
scas
dec
iret
sti
cmp
or
aas
call
popa
xchg
and
testb
push
fcoml
mov
mov
pop
cmpsl
jge
addb
iret
or
mov
icebp
adc
sbb
rcrb
jmp
setbe
cmpsl
pop
roll
mov
jmp
mov
and
inc
mov
pop
popa
jno
addr16
push
dec
push
jg
dec
imul
pop
cmp
scas
jae
sahf
in
adc
mov
cli
xchg
add
ja
rorb
xor
jne
mov
mov
and
xchg
lea
fwait
jmp
inc
cmpsl
scas
repnz
mov
pop
icebp
jmp
lods
cmp
stc
fiaddl
mov
cmpsl
xchg
jb
xchg
push
movlps
sbb
dec
mov
in
cmp
jae
iret
inc
shrb
ljmp
or
test
ljmp
or
or
xor
stos
xchg
je
out
inc
cmc
push
les
imul
pop
mov
ret
ret
cmpsb
xor
push
dec
movsl
or
mov
xchg
popf
orl
cmpl
mov
popa
xchg
inc
cmc
lahf
xor
bound
xor
mov
add
sub
aad
xchg
or
test
sub
push
mov
in
out
inc
es
in
out
push
lds
xor
mov
or
cmp
jo
leave
pop
fisttpll
int
mov
test
push
out
and
lahf
mov
inc
add
sbb
out
xchg
inc
jbe
dec
mov
cwtl
sub
lahf
sbb
push
iret
xorl
xor
inc
mov
dec
jmp
test
inc
pop
cmc
rcl
das
loope
fiadds
in
fistpl
add
pop
out
call
mov
jecxz
adcl
scas
aaa
sbb
jne
mov
lret
aas
jnp
movsl
cmp
xor
ds
lock
sti
shll
rcl
mov
inc
jmp
mov
adc
mov
std
and
add
pop
testb
mov
sbb
mov
or
mov
and
jo
xor
push
push
mov
andb
mov
xor
sbbb
xor
sbb
int3
pusha
popf
leave
cmp
imul
arpl
in
xchg
jb
push
sbb
mov
je
mov
je
jmp
cwtl
xchg
pop
cmp
popf
subb
test
fsts
and
enter
cmc
mov
jns
lea
adc
add
xor
repz
in
outsb
ss
add
ss
shll
fmuls
stc
inc
mov
rep
pop
in
fisubrl
lds
loopne
rol
xchg
roll
loopne
adc
loope
pushf
jno
movsl
xchg
pop
repnz
aas
sbb
imul
test
lret
mov
adc
das
lret
adc
aaa
sub
dec
jecxz
jae
inc
push
adcb
cmp
xor
fsubrl
sbb
out
xchg
dec
xchg
popa
stos
adc
shll
push
jmp
sub
jl
xlat
inc
out
in
inc
sub
mov
out
and
int
jb
or
adc
rorl
inc
fcmove
fistl
or
sub
adc
ja
adc
je
sub
ss
pop
cmc
mov
mov
out
mov
or
xchg
jle
adc
inc
int
outsb
mov
push
mov
in
imul
xchg
insb
sahf
sub
jbe
repz
xchg
iret
push
mov
push
call
lods
ret
aaa
pop
push
jo
push
cwtl
flds
pop
stos
imul
movsb
popa
pop
jp
or
mov
push
data16
inc
xor
pop
jae
dec
mov
sub
push
cwtl
insl
lahf
and
aaa
je
imul
add
fidivs
and
arpl
in
xorl
or
jbe
sub
enter
lods
jmp
fs
add
sbb
pop
repnz
loopne
adc
enter
xor
je
xchg
xchg
mov
ret
repz
mov
cmp
inc
jg
cmpsb
mov
push
in
xchg
shrl
or
and
push
or
sub
jne
add
enter
mov
data16
cmpsb
cmp
aaa
outsb
les
pop
or
mov
loop
rep
sub
fistl
cwtl
inc
cld
dec
fildll
dec
data16
jg
cmp
sbb
or
repz
adc
mov
das
jecxz
fidivs
add
dec
ss
cld
xchg
push
pop
aad
mov
sbb
fstl
adc
adc
ss
push
mov
add
lods
mov
fisttps
jg
mov
jb
into
imul
mov
les
test
fists
stos
adc
xor
mov
cmp
cmpsb
mov
fdivr
imul
sub
mov
inc
jmp
mov
cmpsl
adc
add
pop
cmc
push
flds
or
sbb
fidivl
adc
jae
repnz
mov
adc
add
inc
fcoms
inc
fiadds
pop
imulb
sub
pop
jns
fisubrl
andl
int3
stc
nop
aad
push
es
scas
push
das
pop
hlt
pusha
js
or
sbb
xchg
sub
outsl
pop
mov
pop
add
jecxz
pop
div
cmp
push
jle
inc
mov
and
icebp
out
and
jg
mov
push
push
or
imul
pop
fnsave
pop
mov
cmpsb
stos
mov
popa
mov
imul
mov
aaa
add
shl
mov
mov
stos
jmp
insl
test
adc
fstps
rcll
mov
sub
notb
gs
xchg
bswap
loopne
dec
into
dec
push
outsl
repnz
xor
xchg
sbb
into
jmp
fisttpl
dec
jecxz
shll
lods
mov
mov
mov
and
in
loop,pt
insl
mov
nop
frstor
movsl
push
xchg
push
loope
adc
mov
dec
in
dec
das
pop
add
rcrb
mov
inc
mov
cmp
jl
add
jle
shll
add
inc
mov
add
mov
add
loop
cld
jno
lods
pop
xor
sub
push
popf
dec
and
pop
cmp
cmpsb
add
xor
xor
add
push
daa
xchg
cli
xchg
pop
xlat
lahf
xchg
cmpsb
clc
sub
out
cmp
ret
imul
das
popa
mov
jle
popl
xchg
dec
jg
jns
adc
inc
jne
cmp
loop
sub
or
fidivrs
sti
stos
sti
aaa
addb
aam
mov
mov
dec
and
aam
push
out
repnz
xchg
sbb
sub
sbb
pop
jecxz
mulb
dec
sub
xchg
dec
and
mov
ja
in
cli
sbb
fidivrl
sbb
xorb
fistl
jnp
sbb
jmp
inc
adc
leave
jp
lcall
cmpsb
ljmp
mov
dec
inc
lock
insb
push
in
adc
jno
jle
xchg
sbb
shl
je
pop
repz
cmp
xor
stos
adc
jae
leave
jle
xchg
sbb
sub
adc
xchg
xchg
mov
mov
cmp
xchg
test
dec
pop
pushf
shrb
mov
mov
sbb
pop
in
or
push
fcom
mov
jnp
push
push
dec
jle
ja
addr16
push
lods
xor
movsl
sub
call
std
add
push
cmp
mov
jmp
fwait
mov
or
mov
pop
scas
scas
rcr
mov
or
bound
loop
mov
mov
dec
xchg
cs
iret
data16
aad
mov
push
fwait
xor
das
fdivp
inc
fsub
outsl
fnsave
lret
bound
adc
mov
into
gs
mov
rorl
adc
push
in
xor
mov
mov
mov
cli
adc
jo
jae
sub
sub
addr16
jbe
lock
jae
repnz
xor
jle
xor
sarl
insl
jnp
fidivrl
test
hlt
pop
imull
sbb
shr
sbb
aam
ret
or
jno
xchg
cltd
cmp
mov
cli
jge
sub
pop
das
test
mov
out
push
cltd
ret
aaa
mov
push
xchg
mov
mov
mov
in
fidivrs
std
mov
jg
pop
mov
xchg
mul
test
push
push
jns
repz
jp
aam
ret
mov
xchg
cmp
xchg
std
arpl
test
xchg
aaa
lahf
and
movsl
iret
add
fdivl
cs
jecxz
test
xchg
addl
das
orb
pop
add
sbb
test
push
ret
ds
mov
sbb
xchg
dec
fiadds
std
nop
jbe
inc
lock
mov
lds
sbb
mov
dec
cwtl
cli
pop
add
push
ret
jo
jbe
mov
lods
push
sti
mov
stos
pop
add
adc
iret
xchg
mov
mov
xchg
xchg
inc
or
ret
inc
or
lret
cs
push
add
repz
jmp
loope
inc
inc
mov
mov
mov
cmp
add
cmp
jns
jo
sub
cmp
mov
aas
cld
mov
mov
mov
dec
push
mov
lcall
dec
movsl
xchg
fwait
sarb
pop
into
xchg
push
adc
inc
pop
testl
scas
xor
cltd
inc
pop
adc
dec
mov
pop
popf
jb
pop
fnstsw
nop
jmp
cmpsb
mov
stos
sarl
adc
stc
add
arpl
sarl
xchg
out
repnz
mov
mov
sarl
adc
mov
scas
add
dec
jle
fwait
negl
pushf
cmp
pop
rcl
testb
clc
push
mov
jge
mov
es
pop
sti
arpl
jl
mov
out
sahf
cmp
pop
lea
cmpsb
lahf
fnstsw
pop
leave
roll
int3
call
mov
push
out
in
mov
lahf
lcall
fnstcw
lahf
ds
popa
fdivrl
xchg
sub
gs
fwait
cmp
frstor
sbb
mov
xchg
jo
lock
pop
std
fmuls
xor
pusha
les
jns
hlt
sbb
sti
inc
dec
or
jecxz
pusha
xor
jl
and
inc
push
cld
inc
icebp
je
push
lahf
outsl
jmp
inc
dec
or
aam
push
push
imul
aam
hlt
popw
adc
arpl
dec
dec
or
negb
imul
push
pop
jb
sub
dec
imul
xor
je
adc
insl
call
cmpsl
sub
xchg
mov
sub
push
pusha
repz
jl
pop
mov
imul
fs
mov
and
dec
fidivrs
jnp
insb
test
mov
pop
int3
inc
jnp
stos
adc
pop
nop
mov
mov
iret
xchg
inc
aad
push
add
mov
enter
ret
xor
repz
pop
adc
adc
mov
roll
daa
pop
sarb
jmp
mov
rorb
fldl
push
inc
adc
cmpsb
or
cmp
imul
aaa
xor
sbb
mov
inc
int3
mov
add
adc
and
mov
cmp
jmp
cltd
das
xor
movsb
or
fdivrl
adc
cmpsb
or
cmp
push
rcrb
cs
and
dec
fnstsw
inc
fidivs
adc
imulb
mov
fistps
ret
mov
mov
aad
mov
cmp
or
sub
pop
xchg
and
mov
sub
int
cmp
pop
or
xor
inc
sti
xlat
push
mov
add
adc
cmp
leave
popl
aam
cmp
into
xchg
sub
stos
add
test
pop
lret
cmp
xlat
adc
pop
mov
jmp
iret
xchg
imul
push
aam
inc
xchg
aaa
stos
shll
sarb
inc
or
leave
push
int3
jbe
push
clc
push
filds
jecxz
sub
mov
mov
jle
fcmovnb
pop
faddl
push
inc
or
popl
ja
adc
xchg
aaa
popl
test
fsubr
jne
mov
mov
pop
add
divl
out
jb
xchg
jnp
cmp
int
and
xchg
nop
mov
sbb
js
es
loop
outsb
repnz
cmpsl
in
cmp
out
stos
orb
sbb
ret
sti
repz
xchg
out
push
hlt
mov
xchg
cmpb
and
data16
popf
inc
clc
pop
jmp
xor
flds
dec
push
mov
mov
data16
mov
imul
push
mov
xchg
or
into
xchg
leave
xchg
jge
push
daa
insl
stc
retw
xor
mov
adc
cs
sub
or
iret
xchg
mov
iret
cmpsb
in
movl
mov
lods
jle
inc
jecxz
cmp
xchg
stos
xor
out
int3
insb
pop
add
sbb
xor
mov
fwait
lods
sub
and
gs
repnz
lock
pusha
mov
mov
xchg
inc
cmp
outsb
in
lret
mov
and
insl
sbb
push
stos
roll
movl
out
insl
push
mov
cmc
lea
mov
pop
lret
xchg
stos
mov
push
sub
scas
mov
jae
adc
cli
pop
pop
dec
mov
scas
enter
jne
cmp
pusha
jle
push
dec
push
jle
push
xchg
ret
inc
pusha
idivl
loopne
loope
inc
or
xchg
cmp
sbb
xchg
cmp
ja
dec
sbb
mov
and
xchg
pop
cmp
orb
mov
cltd
lret
add
xor
xchg
pop
mov
mov
sub
pop
in
push
add
sub
aaa
ret
icebp
adc
cmc
mov
mov
scas
call
mov
test
loop
push
loopne
pop
ret
cwtl
pop
mov
xor
sub
cli
hlt
es
jecxz
icebp
arpl
mov
push
dec
shrl
punpcklbw
sbb
sahf
sti
pop
je
popa
repz
push
adc
cmpsb
addr16
mov
push
add
js
and
xchg
inc
cmc
jl,pt
cmp
std
pop
add
push
ss
lret
sub
rcrb
jns
pushf
jmp
inc
mov
test
push
fiaddl
das
mov
cmpsl
imul
mov
or
pop
movsl
sti
popa
imul
adc
jae
and
pop
daa
lods
push
ljmp
mov
lods
sbb
stos
lahf
adc
imul
mov
xchg
ljmp
mov
sbb
xchg
test
jnp
fcmovbe
pusha
ljmp
movsb
add
cmp
pop
or
xchg
cmp
pop
push
cld
sbb
dec
mov
lahf
inc
and
pusha
ss
fadds
sahf
loopne
adc
cmp
jge
sarl
sarb
test
addr16
shll
dec
popa
add
mov
jl
mov
inc
xchg
aas
cmpsl
xor
cmpsl
adc
and
push
mov
clc
pop
andb
jge
and
in
jmp
aad
mov
pop
out
pop
repz
adc
inc
lcall
loopne
push
aad
icebp
movsl
sub
filds
into
aad
out
mov
stos
jp
aaa
or
hlt
sub
andl
es
shl
int
adc
cli
inc
and
sahf
xchg
flds
mov
cli
fs
add
mov
sub
rcrl
or
xchg
push
add
leave
push
push
popf
sbb
jo
ret
cmp
repnz
xor
mov
insl
jmp
ficoms
pop
xchg
xchg
cmp
fdivrs
push
jge
fwait
aas
fidivl
mov
add
jecxz
mov
icebp
lea
mov
push
es
adc
xor
xchg
pop
mov
in
dec
pop
mov
dec
pop
cmp
mov
and
add
ds
js
cmp
push
les
cmpsb
les
lahf
sbb
fwait
mov
mov
xchg
xchg
lds
int
jge
and
cmp
or
adc
jp
stc
xchg
sub
test
cwtl
mov
adc
push
sub
mov
ret
pop
adc
addr16
xor
hlt
push
dec
push
out
loope
push
notl
mov
loope
jmp
divb
ss
pop
add
lods
mov
sbb
pusha
in
push
dec
insb
repnz
inc
lock
lret
mov
jl
sbb
mulb
ja
adc
mov
dec
or
adc
jmp
pop
push
add
cwtl
adc
dec
or
ffreep
inc
adc
cmp
popa
xor
and
xor
aam
and
adc
inc
popf
inc
push
sbb
call
addb
cs
loopne
xchg
ret
sti
mov
sbb
les
or
out
lds
push
ljmp
pop
pop
hlt
inc
psllw
xor
and
cwtl
lods
inc
repnz
nop
mov
fwait
inc
jb
popa
jmp
testb
xorl
call
xor
push
dec
daa
lock
xchg
mov
sahf
inc
jp
psrlw
jo
fwait
mov
push
cli
xchg
dec
enter
lahf
iret
nop
mov
iret
nop
push
movsl
inc
or
fadds
xchg
pop
ss
bound
rorl
pop
xor
movsb
ss
push
or
dec
or
push
xchg
aas
or
sbb
sub
stos
cs
push
add
loop
sub
push
mov
xor
repnz
xchg
pop
and
imul
or
mov
mov
repz
das
stos
ds
push
push
daa
cmp
cltd
ss
add
cmp
jmp
shlb
sti
add
push
jmp
mov
fsubs
mov
divb
cmpsl
cmpsl
daa
std
rorl
sarb
and
add
movsb
mov
test
jp
stos
arpl
fildl
or
fdivs
pop
sarb
and
ja
add
fs
mov
fs
test
push
push
sti
xor
jb
in
insb
shrl
and
push
sub
push
stos
xchg
mov
aam
push
jmp
jb
icebp
jle
pop
pop
cld
ret
lock
in
mov
adc
cmp
popf
cmp
sub
mov
jae
pop
icebp
je
mov
cltd
mov
loopne
lret
push
cmpsb
aad
jge
lods
add
mov
push
imul
cli
js
mov
mov
sbb
fadd
xchg
inc
loopne
in
cmp
leave
pusha
and
push
push
xor
addl
push
xchg
inc
pop
jb
push
or
movsl
ret
pop
push
pop
adc
mov
xchg
loop
jo
movb
mov
mov
lret
aam
xchg
sub
insb
lock
js
bnd
jl
in
mov
sub
fsub
je
das
xlat
and
xchg
inc
sbb
test
mov
leave
dec
inc
adc
sbb
js
sbb
adc
dec
pop
notl
lret
inc
pminub
xor
roll
daa
ljmp
jecxz
jecxz
icebp
inc
fwait
cltd
xor
fwait
xchg
sub
scas
mov
loopne
jns
repz
sarl
in
jmp
cmc
mov
aad
stos
jecxz
out
enter
jle
cmpsl
das
mov
stos
mov
test
lret
std
cmp
jne
push
negl
lret
andb
nop
popa
lahf
cmpsb
sub
pop
in
pushf
es
dec
lret
fbld
xchg
cmp
push
push
std
xchg
pop
dec
xsaves
mov
pop
pusha
out
push
push
adc
jbe
xchg
cmp
cmpl
cs
sbb
and
sub
aaa
pop
testl
movsb
das
ja
pop
ret
out
imul
push
in
push
jno
out
xchg
jo
and
movsl
xor
sti
out
push
adc
stos
mov
fidivrl
call
stc
ljmp
pop
jmp
mov
jg
out
ret
test
cmp
xor
jns
dec
repz
lock
imul
ljmp
mov
cmpsb
and
sub
mov
xchg
mov
mov
insl
fstpt
xchg
mov
pop
and
push
adc
cmc
jl
lods
sub
testb
scas
out
dec
or
push
mov
mov
nop
fnstsw
add
movsl
xor
mov
jb
inc
adc
loop
sbb
in
pop
push
dec
cmc
jo
sahf
mov
push
inc
or
jnp
in
mov
jg
dec
mov
jnp
cltd
sub
adc
test
insl
aaa
add
lea
add
inc
xchg
aas
pushf
iret
sahf
repnz
rclb
repz
dec
or
imul
and
iret
mov
cli
xor
mov
arpl
out
rorb
ret
xchg
pop
push
add
into
mov
icebp
int
push
js
outsl
stos
aam
sbb
lds
sbb
push
mov
adc
js
xlat
inc
cwtl
inc
add
and
gs
jge
ja
mov
and
out
jo
mov
mov
shll
sub
pop
add
fiadds
fnstcw
fbstp
gs
xchg
mov
xchg
out
sub
push
ja
sbb
rorl
js
ss
adc
xor
mov
loop
dec
rclb
lcall
mov
clc
arpl
fstl
call
std
sbb
xor
inc
or
cmp
rolb
mov
js
jg
sar
jg
add
jmp
jo
in
or
cmp
adc
push
push
clc
dec
test
popf
inc
xchg
fldcw
pop
hlt
pop
mov
jge
nop
cmp
push
cmp
test
sub
sub
arpl
aas
movsb
xchg
je
mov
sbb
push
jle
cmpb
insb
lock
adc
insl
cs
or
cmp
jae
mov
cs
pop
loopne
nop
cmp
call
call
leave
xor
ret
mov
fstps
in
dec
adc
rcrb
aaa
iret
popf
jl
inc
sbb
mov
pop
movsl
pop
mov
repnz
popf
inc
pop
in
dec
les
repz
imul
popf
or
adc
enter
adc
xchg
jnp,pt
or
popa
imul
push
jb
jg
dec
jl
xlat
out
cmp
jns
sbb
pop
insb
sub
push
xor
sbb
out
loopne
ret
in
mov
jns
adc
jecxz
cmpsb
dec
movsl
sub
iret
mov
scas
cmp
lcall
mov
or
dec
lahf
fildl
mov
scas
stc
arpl
fucomip
je
and
add
push
xchg
orl
arpl
push
inc
or
mov
mov
fdivs
xchg
arpl
xchg
xchg
inc
cmp
jno
sub
ss
sub
jb
cmp
mov
js
cs
xchg
clc
mov
jg
imul
data16
aaa
cwtl
sbbb
cmp
dec
lds
or
lahf
sbb
test
lds
cli
mov
out
mov
movsl
mov
and
or
push
dec
pop
pusha
shrb
jg
int
popa
scas
sub
arpl
mov
movsl
sub
pop
in
jne
and
mov
arpl
mov
lret
outsl
push
cwtl
inc
push
jp
shr
mov
stos
cmc
xchg
inc
xchg
mov
jno
int
mov
movsl
imul
xchg
and
cmpsb
and
cmp
rolb
push
add
sahf
aas
xchg
js
cmp
pop
push
pop
lock
pop
push
testl
pop
imul
jb
cmp
xor
in
and
lock
adc
ficomps
mov
ljmp
mov
mov
clc
and
lock
scas
sub
mulb
xchg
mov
les
sub
and
dec
lds
add
or
and
popa
pop
mov
dec
pop
fimull
xor
mov
mov
ljmp
roll
stc
add
seto
xlat
push
fidivrs
js
jl
fistps
pop
add
mov
mov
arpl
loope
jno
out
inc
adc
inc
pop
adc
int
xor
mov
insl
hlt
add
fs
push
inc
or
clc
and
ja
pop
int
addr16
inc
add
out
sub
mov
cmp
lret
and
aas
mov
hlt
push
pop
mov
fstl
xchg
aam
sub
pop
leave
xchg
pop
push
xor
adc
outsl
lock
stos
mov
orl
jno
lret
xchg
pop
test
popa
int
sar
mov
sbb
fidivrs
mov
iret
jecxz
add
lcall
enter
faddl
dec
loope
les
jno
sbb
scas
pop
pop
enter
add
xchg
movsl
push
aas
mov
pop
mov
push
lea
arpl
ret
mov
lods
push
ror
out
enter
xlat
mov
and
or
stos
ss
mov
mov
mov
push
fcmovnu
in
jo
and
enter
mov
mov
flds
cmp
in
int
fstpt
push
xor
cmp
mov
mov
jno
scas
movsb
das
push
jbe
int3
loop
pusha
hlt
aad
mov
dec
fs
cmp
xchg
inc
in
ss
cld
fnstenv
aad
jmp
push
pop
vaddpd
cltd
pusha
or
sub
cwtl
cmp
int3
lret
popl
negl
xchg
in
jo
das
in
mov
test
stos
sbb
push
lea
cmp
fnstcw
sarl
xchg
dec
adc
mov
sub
dec
aaa
in
iret
mov
xor
dec
lret
mov
pop
mov
pop
je
push
xorb
xchg
ss
loopne
lods
xchg
xor
mov
mov
subl
mov
xor
pop
std
jb
fs
push
fbld
lock
xor
mov
sbb
rcll
xchg
xchg
or
cmp
repnz
fisttpll
mov
cmpsl
add
pop
das
pop
inc
test
pop
sbb
mov
shll
add
leave
es
leave
sbb
lret
push
std
sub
xor
xor
fmul
lea
stos
jmp
out
push
insb
call
xchg
fldcw
jecxz
sti
pop
mov
sbb
and
mov
movsl
cmp
or
cmp
push
sub
sub
cld
fs
ds
es
lock
divl
cmc
push
adc
ja
xchg
mov
aam
movl
xchg
cmp
cmpsl
push
std
in
or
scas
rep
out
fnstsw
adc
pop
add
pusha
mov
callw
stos
sub
js
push
push
sbb
push
je
add
mov
jno
pop
push
pop
add
sub
fisttpll
in
add
xor
mov
and
in
jle
mov
fs
mov
arpl
pop
dec
scas
dec
adc
lcall
call
cli
fiaddl
sbb
in
jne
cmp
out
lahf
inc
repz
jecxz
jo
lods
mov
jp
in
out
and
sbb
mov
stos
sbb
sub
sub
jge
fldl
lret
fidivrl
mov
jp
mov
xlat
iret
or
mov
pop
pop
jmp
adc
jbe
inc
cmp
aas
movsb
dec
adc
test
mov
lcall
sub
stos
lds
cmp
sub
pusha
pop
sub
mov
in
ljmp
or
movsl
sti
lahf
out
pop
loop
inc
add
mov
sub
js
jg
pop
sub
lret
pop
cmpsl
imul
inc
shlb
inc
cmpsb
ror
repz
cmpsl
sub
clc
scas
inc
push
push
jmp
ss
test
out
mov
mov
loope
clc
ret
mov
movl
adc
dec
dec
or
inc
adc
mov
out
ret
dec
fdivrs
adcl
fs
mov
outsb
add
xchg
out
xlat
mov
mov
or
cmpsl
mov
addb
mov
in
xor
imul
jns
inc
jbe
mov
inc
sub
in
xchg
sarb
cld
pusha
ja
dec
adc
sti
fs
repnz
imul
inc
jge
jnp
mov
push
inc
aad
loopne
cltd
push
add
cld
mov
mov
add
mov
dec
roll
fidivrl
or
xor
dec
xor
push
xor
mov
stc
or
arpl
lea
dec
movsb
shrl
push
mov
pop
std
pop
cmp
mov
popa
in
imul
dec
pop
mov
cmpsb
dec
or
mov
or
std
pop
mov
cltd
xchg
sub
push
mov
sbb
inc
pop
test
mov
addr16
or
cltd
inc
or
ja
push
pop
push
aam
pop
jp
push
test
jle
inc
mov
pop
cmc
lahf
inc
cwtl
mov
jle
imul
imul
fs
dec
aad
orb
iret
nop
test
clc
adc
cmpsb
sub
xlat
xor
xor
adc
jo
sahf
cmp
adc
arpl
fdivl
int
cmp
lock
aaa
pop
lahf
xor
rolb
jbe
aam
dec
aas
out
scas
aaa
sbb
or
flds
je
pop
mov
arpl
pop
add
jne
adcb
dec
adc
adc
ret
xchg
or
lods
xor
pop
outsl
out
inc
adc
inc
cltd
mov
mov
dec
or
jg
aam
pop
lret
mov
dec
movsl
das
mov
push
lret
xchg
inc
fists
mov
pop
sbb
scas
and
int3
loop
fwait
inc
int
dec
setnp
mov
or
pop
pop
add
scas
jmp
add
dec
jmp
add
jg
and
mov
and
pushf
xor
pushf
scas
inc
rcrb
push
mov
xor
xchg
fistl
xor
jns
mov
mov
pop
test
ret
orl
mov
mov
stos
xchg
cmp
test
scas
xor
pop
sahf
inc
popf
push
leave
xchg
pop
lret
mov
stos
stos
xor
jmp
in
leave
ficoml
cmp
mov
stos
jns
insb
outsb
mov
jp
arpl
pop
dec
adc
dec
sub
mov
test
lret
rorb
add
push
pop
or
and
and
xchg
push
mov
lcall
dec
or
add
cmpsl
adcl
sbb
xchg
add
xlat
out
rcll
lods
mov
mov
inc
scas
ss
mov
fildl
cwtl
in
adc
sub
push
movb
sub
push
sbb
dec
mov
imul
lock
incb
xlat
sarb
ds
adc
sbb
jmp
sti
mov
imul
repz
xchg
addr16
int3
ret
jne
sbb
jbe
adc
cwtl
insl
enter
aam
inc
sub
clc
pop
je
cmp
and
pusha
cmc
push
aas
nop
pop
roll
mov
mov
nop
daa
repnz
mov
mov
icebp
pop
pushf
push
cmp
int
sub
rorb
fsubp
addr16
cmc
pop
sub
or
pop
inc
ss
orb
mov
je
mov
dec
popa
bound
mov
das
mov
cmpsb
pop
add
shll
popf
jns
faddl
sub
testb
cmpsb
xor
fwait
jp
sub
les
add
jo
xchg
inc
cwtl
imul
les
push
pop
dec
cli
pop
in
cmpl
test
mov
data16
in
jnp
pop
sbbb
push
sbb
mov
pop
lock
outsb
shrl
iret
xchg
add
add
or
lcall
sbb
cli
mov
xchg
dec
jne
mov
scas
mov
in
ds
mov
in
addr16
mov
popf
xchg
xchg
jmp
rol
ljmp
rorb
pop
outsl
out
out
or
roll
roll
test
push
mov
sub
orl
mov
sbb
cmpsb
xor
inc
roll
jmp
mov
dec
push
sbb
cmc
nop
sbb
xor
add
scas
sbb
push
mov
sub
nop
cmp
lret
or
push
adc
cmp
cltd
pop
dec
lret
fisttpl
loope
fmull
sub
mov
dec
aas
fisttps
test
dec
adc
xlat
adc
mov
mov
xchg
ret
iret
lret
adc
addr16
xchg
mov
lods
xor
xlat
jns
add
lret
sub
ljmp
sub
mov
mov
sub
es
jnp
sarb
outsb
aas
mov
pop
cmc
pop
sub
loop
adc
adc
test
jns
fmulp
xchg
dec
push
stos
push
pushf
imul
aad
jno
addr16
fimuls
int
push
lret
mov
je
gs
or
fs
sbb
jg
mov
shrl
inc
cmp
sub
and
xor
adc
shl
sub
sbb
xchg
les
mov
xchg
shrb
int3
xor
xor
rcrb
and
shl
push
add
shlb
mov
adc
ret
xchg
push
sbb
pop
testl
dec
or
clc
mov
xorl
cmp
mov
imul
popf
insb
orl
jp
repz
daa
sub
jg
push
es
jg
cmp
pop
push
lahf
lret
test
jnp
sarb
imul
or
mov
aas
in
movsb
cmp
add
mov
out
rolb
ljmp
xchg
movsl
shl
push
mov
adc
ljmp
jg
push
stc
pop
insb
inc
or
fprem
mov
or
arpl
fistps
push
pop
or
std
mov
test
mov
in
shlb
pop
mov
cltd
aaa
fst
cmp
xchg
jo
or
fsubrs
jo
pop
xor
imul
std
mov
das
rol
pop
add
lea
fldl
sti
das
mov
nop
outsl
dec
insl
lock
jge
int
mov
aam
test
pushf
movsb
mov
jl
mov
or
jb
cmc
test
cmpl
int
pop
pop
add
mov
push
movsl
xor
mov
inc
fnsave
mov
or
pop
add
fildl
frstor
lods
les
pop
add
push
mov
lods
loop
scas
or
popa
sbb
psrld
xlat
xchg
cmc
mov
or
xchg
cmp
jge
das
jns
mov
ja
cwtl
mov
dec
movd
js
jp
jno
fistps
out
cmpsb
mov
mov
mull
pop
ret
mov
movsb
cmc
mov
test
leave
mov
fisubrl
mov
movsb
pop
xlat
repnz
fiadds
pushf
es
fnstcw
rcrl
sub
xchg
inc
enter
add
ja
pop
popa
iret
mov
pop
mov
in
add
ja
repz
add
aas
lcall
inc
mov
dec
mov
int
sbb
sbb
inc
xchg
aas
cvtdq2ps
lds
push
and
sub
nop
inc
into
xor
mov
adc
sub
jns
xor
add
pop
jg
iret
xchg
dec
push
add
xor
icebp
push
jmp
mov
inc
adc
leave
adc
xchg
lea
pusha
test
pop
mov
mov
mov
xchg
sub
add
mov
daa
es
adc
jge
xchg
cmp
fildll
sbb
leave
loopne
jbe
sbb
aad
inc
out
jbe
and
es
mov
in
aam
or
xchg
inc
adc
pop
mov
or
pop
cmp
das
sahf
ds
pop
ror
add
roll
shrb
fs
cld
frstor
ret
push
add
mov
jmp
or
gs
jne
sub
aas
cmp
add
mov
cld
pop
fstp
cmp
mov
mov
cmpsb
movsb
add
imul
out
jno
push
jne
push
mov
jg
lahf
inc
mov
scas
sbb
mov
mov
sti
pop
stos
inc
jg
jne
fbstp
xchg
mov
fdivl
push
call
es
add
in
imul
adc
fimuls
call
dec
push
sub
mov
jmp
in
lret
cmc
popa
ljmp
jl
stos
cmpsb
sarl
mov
push
call
inc
fisubrs
adc
push
inc
inc
loopne
ja
outsl
cmc
pop
addr16
adc
and
xor
adcb
inc
push
inc
test
sbb
lahf
aam
pop
in
push
jbe
xchg
aas
and
cmp
ljmp
insl
jmp
ficoms
xchg
push
add
xor
outsl
out
jo
call
jo
outsl
push
mov
scas
push
enter
mov
mov
fdivrl
scas
faddl
sub
pop
xor
and
int
push
add
scas
sub
xchg
scas
inc
mov
xchg
jge
mov
lret
movsb
inc
mov
lods
mov
fdivrl
mov
xor
cmpsl
or
mov
out
mov
lea
jbe
jno
sub
test
mov
mov
mov
pop
lds
shlb
mov
ret
ljmp
mov
cmpsb
nop
xchg
int
ja
mov
cli
fsubr
out
push
add
outsl
jmp
cmp
sub
xor
in
jnp
loope
in
addr16
cld
stc
pop
jbe
enter
lds
les
mull
sbb
insl
pop
xchg
popa
imul
adc
mov
dec
in
repnz
dec
pop
into
jle
adc
pop
xor
test
mov
adc
push
neg
dec
push
stc
popa
or
iret
mov
stos
sarb
inc
loope
or
jl
and
sarl
ja
call
cld
ret
shll
mov
addr16
movsb
mov
shlb
push
call
cltd
or
cmp
leave
pusha
in
pop
mov
aas
mov
inc
loop
push
popf
xchg
add
bound
push
jmp
fidivl
push
popa
clc
xchg
and
push
fisttpl
fidivrl
popf
xor
mov
mov
push
and
fnstenv
inc
popf
xor
div
mov
cltd
mov
lods
jp
fnstenv
pushf
xor
int
testl
les
push
jb
xor
push
xchg
lea
aaa
push
call
sbb
leave
pusha
insb
fisttpll
jle
xor
pushf
adc
mov
or
add
testb
and
pop
iret
inc
fadds
jle
xor
sarl
adc
and
outsb
push
fwait
xor
ja
mov
lret
sti
insl
fsubrs
sbb
leave
dec
shl
repnz
push
out
adc
add
xchg
adc
call
cwtl
or
cmp
mov
ds
lods
inc
loope
push
popf
nop
add
bound
and
loop
jmp
fidivl
pop
sahf
fsts
clc
xchg
and
push
fimull
jge
popf
xor
lahf
popa
clc
rorb
push
xor
push
and
popf
xor
cmc
testl
jns
fnstenv
fwait
xor
int3
testl
ret
aas
outsl
push
jno
xor
adc
ss
call
sbb
leave
pusha
imul
and
out
mov
loopne
pushf
adc
and
or
add
testb
and
pop
into
inc
fdivr
jl
xor
iret
mov
adc
push
pushf
xor
jne
mov
enter
insb
fnstenv
sbb
leave
dec
mov
push
out
adc
lods
inc
mov
xor
xchg
adc
jmp
xchg
or
cmp
lea
call
inc
loopne
push
popf
mov
int3
arpl
scas
and
loopne
ljmp
cmpsl
or
test
es
fmuls
fstpt
xor
sahf
stc
iret
dec
mov
pop
and
sahf
xor
and
inc
adc
jno
cltd
xor
lret
outsl
jmp
call
ret
push
outsl
jecxz
lret
adc
lea
xor
stos
inc
push
mov
mov
fisttpl
jle
lods
inc
pusha
fiadds
popa
mov
and
pop
addl
sub
popf
pop
aad
testb
and
lods
daa
jge
pop
int
fsin
jp
xor
mov
push
mov
les
lea
adc
imull
jno
sbb
lret
clc
out
push
call
inc
mov
xor
and
in
lods
inc
xchg
push
jb
cmp
nop
daa
mov
jmp
inc
ficomps
sahf
mov
int3
arpl
scas
and
addl
stc
xor
mov
xlat
dec
inc
fstpt
sahf
xor
int
mov
pop
and
sahf
xor
and
mov
lods
jbe
fidivl
cwtl
xor
leave
cmp
insl
ljmp
sarb
outsb
loope
lret
adc
push
jmp
adc
ss
jg
sub
inc
pop
fldl
popf
push
or
mov
and
pusha
shr
jg
addb
es
popf
push
aam
testl
lret
inc
frndint
jns
xor
int3
mov
push
mov
ret
hlt
jb
mov
adc
jno
pop
xor
dec
mov
push
jmp
aas
mov
xor
es
mov
ljmp
jb
ss
out
nop
daa
mov
ljmp
pop
or
das
lods
es
cmp
movsb
or
xor
mov
dec
inc
fstpt
sahf
xor
int3
dec
mov
pop
pop
sahf
fidivl
inc
sahf
xor
and
lods
jne
fidivl
xchg
xor
enter
insb
jmp
push
lods
mov
loopne
lret
adc
push
jmp
adc
jo
mov
lret
fmuls
jg
sub
or
cs
pop
shr
jg
addl
push
shll
add
and
test
lret
sti
js
xor
lret
mov
push
mov
rcrl
mov
les
jno
push
xor
inc
mov
push
jmp
ds
xor
es
mov
ljmp
jb
xor
push
nop
daa
mov
ljmp
pop
or
lods
es
cmp
or
xor
adcb
inc
inc
fstpt
sahf
xor
lret
dec
mov
pop
push
popf
fidivl
aas
sahf
xor
and
push
lods
je
fidivl
xchg
xor
cmp
imul
jmp
mov
fbstp
adc
push
jmp
adc
popa
data16
mov
mov
fildl
popf
or
lret
sub
call
fnstenv
shlb
add
mov
push
leave
inc
fsqrt
ja
xor
lret
cld
insl
jg
lahf
sbb
popf
xor
jo
mov
ret
adc
jno
adc
clc
jmp
push
jmp
cmp
pop
xor
es
ljmp
jb
xor
lret
in
nop
daa
xchg
scas
inc
ficompl
lahf
mov
int3
arpl
dec
ljmp
mov
stc
xor
mov
aam
inc
sahf
xor
lret
push
jp
adcb
pushf
fidivl
ds
xor
and
push
lods
jae
fidivl
xchg
xor
cmp
jmp
mov
fidivs
jge
push
jmp
adc
lret
mov
mov
fiaddl
popf
or
popa
scas
sub
mov
add
fnstenv
shll
add
mov
push
enter
jbe
xor
leave
mov
push
sahf
sbb
jo
mov
testl
repz
adc
lret
inc
mov
push
jmp
cmp
jo
ljmp
es
pop
lods
inc
nop
add
xor
nop
daa
xchg
xorl
push
or
sub
es
jg
inc
fldt
dec
stc
jg
es
roll
sahf
xor
leave
inc
mov
pop
sbb
fidivl
cmp
clc
and
push
lods
jb
fidivl
xchg
xor
lds
clc
jmp
mov
fnsave
push
mov
jmp
adc
lret
aad
and
mov
flds
popf
or
scas
sub
pop
iret
call
fldcw
shlb
add
mov
push
movl
cmpsl
sbb
dec
enter
imul
sbb
jo
mov
testl
repnz
adc
inc
mov
jmp
cmp
xor
es
push
ljmp
jb
xor
nop
daa
test
ljmp
push
or
sub
ljmp
mov
stc
jle
es
rolb
jne
sahf
xor
enter
js
adcb
lcall
outsb
in
clc
pop
nop
mov
lods
jno
fidivl
xchg
xor
les
clc
jmp
mov
fdivl
or
cs
jmp
adc
lret
aam
and
mov
lods
inc
pop
fadds
popf
or
popa
lods
sub
pop
into
call
fldcw
iret
pusha
testl
and
push
movb
je
xor
mov
push
pushf
sbb
jo
mov
testl
icebp
arpl
jno
adc
inc
mov
jmp
cmp
xor
cmp
lods
inc
mov
jno
xor
test
ljmp
push
or
sub
jmp
fldt
pop
sahf
rorb
stc
jle
and
pop
rolb
fidivl
xor
movl
push
sbb
popf
xor
in
clc
pop
mov
lods
jno
fnstenv
xchg
xor
les
push
jmp
mov
lret
mov
pop
fisubrs
mov
lret
rorl
jg
es
inc
pop
fadds
popf
or
pusha
lods
sub
pop
int
jle
jl
fldcw
into
pusha
idiv
jb
mov
push
les
cmc
jae
xor
push
popa
clc
inc
mov
push
lcall
xor
insb
clc
sahf
push
mov
lods
lock
fidivl
adc
out
push
ljmp
jno
out
xor
daa
cmp
scas
inc
std
jno
das
scas
int3
arpl
push
addb
xorb
inc
aad
or
sub
jmp
fsubrl
popf
pop
sahf
into
dec
arpl
jge
and
sbb
inc
inc
fidivl
lahf
ss
popa
clc
lds
push
ja
jg
sbb
popf
xor
in
stc
nop
push
lea
scas
jo
fnstenv
xchg
xor
mov
push
ljmp
jno
push
mov
call
movd
mov
lret
bound
lea
test
xorb
pop
sahf
or
pusha
stos
sub
jle
jnp
fisubrl
popa
clc
jo
mov
push
ret
repz
xor
inc
lds
cwtl
sbb
jb
mov
stc
nop
popf
or
push
ds
fidivl
adc
int
mov
in
push
jmp
add
jb
out
xor
sub
test
scas
inc
mov
jno
sub
dec
addb
xorl
lods
inc
rcll
test
lret
bound
cmpsl
sub
jns
inc
fwait
pop
sahf
int3
dec
fs
jl
and
sbb
aas
inc
fidivl
mov
clc
ret
inc
mov
push
push
cwtl
fdivl
aaa
popf
xor
jmp
xchg
sbb
sbb
adc
testl
mov
jb
xlat
xor
or
push
call
push
jl
push
scas
das
int3
arpl
lea
sub
mov
stos
inc
push
or
test
es
sti
jp
fldt
int3
stc
std
outsb
and
lahf
push
sbbl
icebp
jno
mov
les
push
xchg
pop
fdivl
mov
xor
push
xchg
pushf
or
out
pop
fidivl
getsec
into
inc
mov
loop
push
in
xchg
add
scas
xor
jae
in
xor
sub
cmpsl
push
ljmp
jno
sub
es
in
test
lahf
lods
inc
rcll
mov
and
sub
xlat
inc
jmp
fisubrs
cltd
pop
sahf
lret
cld
jnp
and
sbb
cmp
mov
clc
roll
jne
jg
adc
fnsave
popf
xor
ljmp
mov
jo
nop
aaa
into
shrl
mov
push
in
adc
jae
data16
lret
xchg
sub
fldt
push
lods
cs
pusha
int
and
sub
inc
push
aam
mov
cmpsb
es
mov
stc
js
fsubrl
lret
sti
insb
and
sbb
inc
outsl
mov
stc
inc
ret
hlt
bound
je
mov
xor
lcall
mov
pop
or
stc
nop
loopne
push
in
nop
add
scas
xor
ss
add
sub
movsl
push
jmp
push
mov
mov
jb
sub
nop
daa
jl
in
test
sahf
scas
inc
rclb
mov
and
xorl
or
jns
es
int
inc
fldt
mov
stc
rolb
jae
adcb
xchg
fnsave
sahf
xor
sbb
sbb
or
cs
pusha
loopne
in
adc
jae
fs
lret
add
es
jmp
or
pop
stos
sub
fs
int3
mov
mov
lods
inc
push
rorb
mov
movsl
and
mov
clc
jbe
fsubl
enter
imul
pushf
sbb
fucomi
insl
mov
cli
inc
sarb
xchg
adc
je
mov
ss
sti
xchg
cwtl
pop
mov
mov
pop
fdivl
or
iret
cmp
cli
xchg
fistps
in
mov
sbb
loope
aaa
into
addl
sub
push
in
aad
mov
xchg
jae
sub
xchg
sub
in
test
popf
scas
inc
iret
dec
or
and
jmp
jne
inc
fisubs
inc
gs
ja
daa
mov
lret
cmp
insb
in
mov
cli
mov
loopne
sbb
xchg
fnsave
lahf
ss
xchg
sbb
sbb
or
aaa
into
mov
ficoms
jno
jae
vpermilps
push
xlat
scas
inc
or
or
lret
es
jge
subb
or
movsb
and
mov
divl
movsl
sbb
mov
imull
mov
dec
mov
mov
sti
aas
mov
sbbb
adc
je
mov
aaa
in
sti
xchg
xchg
push
mov
mov
pop
fnsave
cmp
cmp
in
mov
sbb
loopne
aaa
into
addb
sub
mov
mov
xchg
jae
daa
test
data16
sub
in
test
dec
or
and
jmp
je
inc
fisubs
or
jbe
daa
mov
lret
fsubrl
mov
cli
mov
filds
je
xor
xchg
pop
xchg
mov
jb
mov
into
mov
fstl
push
adcb
mov
jae
popa
shlb
sub
scas
inc
or
or
lret
cld
jl
subb
or
mov
ljmp
pop
or
imulb
mov
dec
mov
mov
sti
ds
sbbb
adc
je
mov
aaa
in
sti
xchg
xchg
add
sbb
mov
cmp
cmp
push
in
mov
sbb
fists
into
addl
push
in
rcll
dec
test
jae
cmpsl
iret
data16
sub
in
test
scas
inc
int
or
and
jmp
jae
inc
fisubs
xchg
or
jne
daa
mov
leave
cmp
push
mov
cli
mov
fiadds
je
xor
xchg
push
test
mov
fcomp
jb
mov
into
mov
fcoml
or
jae,pn
pusha
shll
sub
scas
inc
pop
jbe
or
leave
es
jnp
subb
or
mov
ret
hlt
jb
frstor
les
addr16
mov
dec
mov
mov
sti
cmp
mov
sbb
mov
aaa
loop
cld
xchg
xchg
add
mov
push
fnsave
cmp
cmp
push
out
mov
sbb
fimuls
into
jg
xchg
sub
mov
mov
test
jae
and
inc
xchg
sub
in
test
lcall
jge
int
pop
lahf
sub
rolb
xorb
fisubs
xchg
or
je
daa
mov
enter
imul
arpl
mov
fldl
je
xor
xchg
adc
sbb
or
stc
nop
pop
fistl
or
pop
scas
scas
sub
xor
sub
aam
inc
push
jne
or
enter
jp
subb
mov
mov
shr
repz
frstor
ret
fs
hlt
data16
mov
inc
mov
mov
sti
cmp
sbbb
push
fidivs
scas
mov
xchg
xchg
add
mov
push
fnsave
cmp
aaa
test
xchg
ficompl
out
mov
sbb
fisttpll
into
jle
xchg
sub
mov
mov
xor
or
xchg
sub
in
test
cltd
scas
inc
lret
dec
or
push
sahf
sub
iret
aas
jmp
jno
inc
fisubs
xchg
or
jae
daa
mov
aaa
inc
fsubrl
mov
cli
mov
faddl
je
das
lahf
ss
loop
xchg
adc
mov
mov
mov
into
mov
ficoml
or
scas
scas
sub
or
xor
sub
shrl
or
es
jns
subb
or
lahf
push
sub
bnd
frstor
ret
repz
mov
inc
mov
fsubr
addr16
or
mov
sbbb
or
mov
xchg
xchg
add
mov
push
fnsave
cmp
cmpsl
sti
xchg
fsts
out
mov
sbb
fmull
jge
xchg
sub
lahf
push
in
rclb
dec
xor
or
movsb
iret
data16
inc
xchg
sub
in
test
cwtl
scas
inc
lret
mov
sbb
ds
jo
inc
fisubs
xchg
or
jb
daa
lcall
adc
test
sbb
and
push
inc
fmull
sub
sbb
out
std
fwait
adc
adc
pop
mov
rolb
insl
sahf
jae
sub
inc
lret
and
mov
and
repz
ja
scas
mov
mov
bound
daa
call
fsubl
nop
and
jmp
sti
bound
add
mov
jno
jle
and
mov
push
aas
stos
rorl
inc
fildl
sub
scas
sub
dec
sbb
outsb
and
test
out
or
xor
insl
lods
or
sahf
mov
jbe
xchg
lret
sbb
out
xor
cld
cmpsl
or
loopne
dec
push
mov
push
push
ja
pushf
and
ret
xchg
mov
in
enter
imul
cmc
jl
xchg
mov
mov
gs
or
xchg
popf
fbstp
fidivrl
int3
jb
ljmp
sub
stc
xchg
inc
pop
addr16
xorb
sti
ds
adc
and
xor
popa
mov
jns
or
jns
lahf
xchg
mov
and
es
add
gs
in
add
xchg
pop
ss
imul
sub
inc
ja
xor
and
insb
mov
das
cld
fistl
je
fbstp
xor
push
mov
sti
adc
movsb
jns
jle
arpl
and
stos
leave
fisubs
jb
lret
adc
popa
insl
fstp
push
or
sbb
mov
imul
cwtl
xchg
fidivrl
jo
sub
jns
pop
sarb
mov
sbb
sub
data16
mov
fsubl
enter
out
cmp
in
or
push
cmpsb
inc
idivb
icebp
sub
loop
mov
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
leave
and
dec
lock
insb
sbb
mov
enter
decl
and
pop
mov
adc
xchg
lahf
movsb
fstpl
push
call
testl
or
inc
jo
js
adc
mov
or
icebp
pop
stos
xchg
jns
jno
jb
test
jl,pt
sub
jl
xchg
add
jge
sarb
adc
loop
add
cmp
xchg
call
imul
out
xor
data16
xchg
sbbl
push
jl
jns
add
arpl
mov
adc
lcall
inc
fwait
inc
mov
das
inc
inc
dec
add
stos
xchg
mov
movsb
rorb
mov
je
add
fiaddl
lock
push
push
outsb
push
sub
in
fdivrl
sbb
push
sub
ja
mov
aad
int
cmp
into
inc
fnstcw
cmp
jb
test
mov
cmp
push
add
mov
mov
loope
fisubl
out
in
jmp
and
cltd
je
xlat
into
xorl
int
scas
fdivrl
test
mov
mov
out
mov
xchg
bound
jge
jp
sbb
pop
lds
cmp
and
fxch
xor
cmp
int
jle
sbb
repz
xchg
and
andl
jno
cmpsb
mov
pop
push
popa
xchg
clc
push
or
inc
adc
inc
vpandn
popa
loope
and
into
int3
lods
cmp
push
lods
fcoms
cmpsb
sub
pop
add
dec
mov
push
fmuls
out
scas
lods
push
push
adc
mov
mov
pop
add
adc
xor
inc
mov
fwait
data16
cmp
lods
or
shlb
outsb
xchg
jnp
fsubrp
jge
hlt
in
fs
mov
xlat
xchg
out
fbld
sbb
loope
arpl
lds
jge
push
and
js
fbld
add
pop
stc
js
scas
bound
xchg
insl
xor
sbb
clc
mov
outsb
cmp
out
add
sbb
cmp
push
mov
jl
arpl
cmpsl
pop
mov
sub
mov
add
jne
push
negl
jo
or
sbb
add
pop
dec
xchg
jge
fs
and
or
xchg
test
sub
insb
mov
cwtl
imul
and
dec
sti
popf
xchg
insl
mull
add
and
nop
arpl
and
rorb
dec
dec
mov
je
push
stos
mov
adc
je
popa
cli
mov
xor
adc
mov
lods
popa
dec
mov
dec
xlat
sub
insb
sbb
cmpsl
inc
mov
lret
sbb
les
sahf
arpl
cmp
popl
mov
sub
in
dec
or
cmc
or
fincstp
pop
xor
or
push
push
das
js
stos
jb
mov
jnp
movsw
out
adc
in
mov
xchg
daa
or
aam
sub
jecxz
ds
xlat
adc
jecxz
aas
test
jns
push
adc
aaa
out
test
enter
sub
lds
aaa
xchg
cs
out
or
outsb
jp
pop
dec
and
test
gs
movsl
ucomiss
fdiv
jo
getsec
jecxz
push
dec
sar
loope
sub
int
sti
xor
les
js
or
cmp
xchg
mov
jmp
pop
push
int3
fbstp
in
cwtl
aaa
lret
push
addr16
push
jbe
lods
stc
loopne
push
or
hlt
jmp
mov
cmp
test
push
dec
ja
jae
xchg
in
adc
adc
add
cli
arpl
subl
out
dec
test
cmc
fs
dec
fwait
mov
xor
ds
mov
dec
dec
aaa
xchg
stc
or
mov
adcl
mov
loop
rcrb
xchg
pop
pusha
hlt
mov
pop
fwait
cmp
ss
ds
out
leave
cmp
and
in
adc
pop
addr16
ficompl
inc
dec
xchg
js
pop
lods
inc
add
jle
jnp
in
cmpl
int3
adc
inc
sub
pop
cld
call
pop
add
dec
add
jne
push
mov
incb
enter
je
pushl
pop
cmp
outsb
fwait
std
sbb
xlat
push
inc
jecxz
out
jmp
push
ds
mov
mov
dec
ja
adc
aaa
and
fwait
jne
test
repnz
mov
mov
dec
mov
lds
push
arpl
icebp
rcr
lock
dec
pop
push
mov
icebp
jle
mov
push
ret
popa
pop
cmp
stos
loope
or
xor
and
es
jge
dec
mov
ret
jne
fcmovb
dec
sbb
xor
stos
dec
gs
scas
sbb
xchg
enter
lods
xlat
jg
push
add
pop
add
push
jmp
pop
in
je
inc
mov
lcall
gs
sbb
dec
fs
mov
lds
or
ljmp
add
fwait
and
int
pop
mov
pop
in
iret
aad
inc
dec
aas
dec
xchg
sbb
hlt
test
jmp
cmp
and
cmp
or
test
cs
cmpsb
mov
pop
or
xor
push
and
hlt
or
in
jl
xchg
xbegin
call
xor
push
cld
jmp
mov
jl
pop
or
in
push
mov
push
rcll
push
jo
loope
jnp
insb
mov
and
fidivs
push
pop
sahf
mov
inc
scas
mov
pop
es
gs
inc
pushf
xchg
add
ror
push
push
shr
iret
repz
or
sub
in
das
jnp
cmp
push
mov
pop
inc
dec
stc
fldl2t
stos
adc
into
leave
jl
xchg
sti
fistps
inc
scas
mov
mov
jno
lret
mov
outsl
xchg
lret
mov
insl
xchg
int
mov
and
mov
add
jbe
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
cmp
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
adc
notl
fadds
loop
and
jmp
jb
or
push
pusha
sub
mov
aam
cmpsl
mov
scas
lea
inc
lods
test
pop
jecxz
repnz
inc
les
adc
fcmovnb
inc
mov
