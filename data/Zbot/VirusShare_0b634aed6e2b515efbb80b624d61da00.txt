jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
mov
sub
dec
xor
add
inc
sub
leave
sub
add
or
call
sub
or
dec
call
dec
add
add
and
mov
and
mov
or
add
or
sub
sub
add
and
and
jmp
sub
push
or
and
or
push
or
sub
push
dec
sub
call
sub
sub
push
call
xor
and
cmp
mov
mov
je
dec
inc
or
mov
mov
je
or
mov
mov
or
sub
cmp
mov
je
or
push
add
or
sub
call
or
xor
push
and
and
add
xor
push
and
push
and
push
or
add
add
xor
push
sub
call
add
dec
sub
and
add
mov
xor
add
or
or
mov
mov
xchg
xor
sub
shr
or
lods
xor
xor
mov
or
mov
sub
mov
dec
mov
jne
or
dec
sub
sub
pop
add
pop
xor
dec
pop
sub
jmp
cmp
rcl
xchg
iret
rcl
jnp
rcl
jnp
not
jnp
sbb
jnp
or
fimuls
push
jnp
test
out
sub
adc
in
sahf
ja
sbb
push
adc
and
xchg
enter
or
in
clc
push
cmp
mov
and
xchg
sbb
pop
aas
leave
int
mov
cs
or
sarl
pop
xorl
pop
scas
pushf
mov
sarl
jl
sbb
push
in
rcl
negb
jge
cmp
rcl
pop
inc
xor
cli
nop
ss
mov
and
scas
xchg
ret
mov
pop
cwtl
fs
push
push
shll
lock
xchg
stos
js
pop
mov
ret
sarl
rclb
rorb
sub
adc
cs
out
adc
test
cs
rolb
mov
sbb
js
pop
xchg
pop
icebp
mov
mov
add
cmpsb
jae
out
sub
adc
push
jg
push
xchg
pop
jmp
push
pop
orl
and
mov
repnz
cmp
rcl
cli
shl
cmp
push
in
cmp
rclb
rclb
mov
jnp
cmpsb
addl
ficoml
fs
das
lock
sub
xchg
jnp
pop
push
inc
lods
shll
fbld
fcomi
cmpsl
in
pop
aaa
cld
sbb
cmp
pop
sub
pop
pop
in
cmp
subb
rcl
mov
cmpsb
cltd
push
inc
inc
lods
shr
jl
or
data16
das
js
push
in
cmp
pop
pop
repnz
push
loop
xchg
shl
nop
sub
cmp
jl
push
pop
xchg
xchg
push
push
inc
lods
rcrl
jmp
cmc
push
inc
roll
into
cmc
mov
stc
repz
icebp
aad
rclb
push
pushf
rcrb
in
arpl
lods
pusha
add
xor
mov
pop
test
jb
fimull
inc
xor
test
mov
je
xchg
bound
testl
xchg
cmpsb
cmpsb
std
sbb
pushf
test
push
pop
adc
pop
xchg
mov
or
nop
pop
nop
aaa
loope
or
lods
imul
jp
shlb
and
pop
negl
lods
gs
mov
mov
mov
outsb
push
lcall
mov
aam
pop
add
ja
out
mov
aas
lods
fdivp
mov
jno
jmp
pop
pop
mov
in
inc
aaa
in
int3
xsaves
cmpl
pop
movsl
jp
arpl
jge
fidivrs
jns
rcl
push
mov
jge
movsl
xchg
mov
jae
pusha
mov
sahf
adc
lahf
xchg
jbe
pushf
roll
fdiv
sahf
fistl
xchg
jmp
das
jge
sbb
cmpsb
cmp
leave
pop
outsb
ficoml
movsl
mov
loope
jle
sbb
pop
push
das
shrb
pushf
rolb
push
clc
rolb
jp
mov
or
lahf
cmpb
movsl
mov
negl
xchg
push
cmpb
movsb
iret
test
aam
bound
pushf
sarb
leave
xchg
push
jle
out
add
cmpsl
cmp
inc
or
rcl
xor
jb
cmp
idivl
dec
adc
inc
arpl
xchg
jae
aaa
jge
arpl
cmpsb
xchg
adc
sbb
pushf
test
push
pop
adc
ficoml
xchg
mov
cli
push
mov
bnd
or
xchg
cmp
xchg
mov
mov
sub
pop
pop
mov
inc
notb
sub
shr
lock
push
mov
jge,pn
adc
adc
inc
pop
popf
jp
inc
sti
pop
dec
cmp
mov
jl
xor
mov
pop
mov
imul
mov
popf
sahf
rolb
cli
pushf
mov
lds
inc
arpl
dec
xchg
adc
mov
je
jl
arpl
add
nop
xorb
adc
adc
popa
sbb
lea
jle
cmpb
in
call
inc
in
cmpb
mov
push
bound
jge
pop
lods
mov
jmp
sahf
mov
push
pop
lea
or
out
les
into
or
jmp
lods
mov
xchg
pop
roll
repz
jnp
shlb
hlt
mov
mov
cmpsb
xchg
mov
xchg
and
jecxz
push
inc
xchg
jle
jge
push
mov
dec
popa
das
jge
pop
push
cmpb
push
cmpb
mov
aam
jmp
mov
or
inc
arpl
inc
iret
xchg
xchg
aaa
and
mov
inc
pop
add
rorl
xor
divl
xchg
adc
cmpsb
xchg
push
movsl
out
aad
call
ljmp
sub
imul
pop
xlat
mov
lea
jmp
xchg
push
lods
pushf
mov
cmpb
movsl
mov
pushf
pop
mov
hlt
cwtl
push
imul
jge
pop
cli
jns
mov
fsubs
mov
pop
xchg
mov
pushf
roll
push
pushf
rolb
xor
adc
mov
das
adc
mov
sahf
xchg
int
ret
movsb
lds
inc
arpl
mov
xor
fidivrs
cld
cmpb
rolb
mov
arpl
pushf
rolb
mov
imulb
mov
mov
mov
divl
ja
and
or
nop
pop
lret
test
mov
test
and
adc
jecxz
js
shr
mov
mov
das
iret
add
mov
mov
das
add
pop
inc
cmp
lds
int3
mov
xchg
sbb
inc
mov
mov
repnz
fcomi
push
loope
repnz
int
jnp
out
push
movsl
frstor
cmc
cmc
loop
adc
xchg
pop
mov
loope
xchg
adcb
movsb
inc
stos
scas
mov
icebp
mov
stos
jne
lods
pop
rcl
mov
ljmp
xchg
or
pop
mov
sahf
mov
mov
push
mov
cld
fcmovnbe
stos
dec
xchg
jl
nop
rclb
mov
rcl
repnz
xchg
or
cltd
xchg
lea
clc
xor
mov
cmpl
mov
pop
mov
inc
sub
sbb
mov
mov
enter
jo
and
inc
push
repnz
clc
fwait
cli
fwait
dec
popf
pop
test
sbb
ror
inc
pop
fstl
jae
push
imul
pop
movsb
test
hlt
lret
inc
out
cwtl
loop
adc
adc
xor
push
cmp
in
xchg
xchg
xchg
pushf
adc
mov
enter
sub
jo
xor
sahf
jo
mov
mov
repnz
lods
mov
xor
js
clc
sub
mov
fcompl
test
hlt
aam
cli
inc
lock
sbb
add
fsubp
testb
jo
jl
mov
ffree
andb
fldl
mov
inc
jb
pop
loopne
mov
adc
xor
cmp
ljmp
adc
stos
sub
push
and
into
cmp
ss
xchg
out
pop
and
out
pusha
xorb
shlb
add
mov
xchg
xchg
pop
cmpsl
cmp
cli
xor
jecxz
pop
sub
or
roll
lea
jmp
pop
subb
sbb
mov
or
jnp
rcl
call
jl
loop
int3
arpl
outsl
pusha
or
loopne
cmp
pop
cs
sbb
imul
dec
lods
call
push
scas
mov
in
jl
xchg
push
fnsave
push
lahf
insb
jae
data16
add
fstpl
cmp
sbb
xchg
test
aaa
dec
lcall
push
push
popf
xor
lret
mov
inc
sahf
int3
mov
push
addr16
adc
pop
pop
nop
adc
inc
adc
repz
sahf
movsl
fdivrl
and
pop
sub
dec
out
aaa
inc
test
in
adc
test
cmp
and
pop
int3
js
fcmovnbe
rol
roll
test
ret
shl
mov
enter
pop
and
adc
hlt
xor
push
rclb
xorl
in
inc
insb
push
xor
push
push
sti
mov
arpl
in
xor
sbb
icebp
and
pop
or
xor
jp
aam
lcall
xchg
test
jge
sbb
in
mov
xor
test
jmp
ja
in
jno
mov
jp
aad
cmp
jp
mov
xor
xchg
rorb
in
sbb
arpl
popf
xchg
push
xor
push
test
cmp
mov
push
inc
mov
lahf
jp
cmp
mov
orl
lods
cmp
popf
push
addr16
push
loopne
cld
movsl
in
mov
dec
and
mov
mov
scas
cmpsl
out
rorl
push
ljmp
loopne
pusha
jecxz
jae
sbb
test
cmp
xchg
pop
push
popf
mov
movsl
sbb
notb
cmp
mov
lret
lods
clc
ljmp
adc
scas
push
sbb
xchg
and
mov
jl
mov
std
lcall
loopne
pop
andb
sti
adc
mov
out
sub
jno
cmp
sahf
mov
data16
loop
xor
mov
add
xchg
mov
lret
add
insb
pusha
aam
and
mov
pop
and
leave
test
cwtl
pop
sbb
lea
mov
leave
movsb
test
cwtl
test
mov
mov
jl
les
imul
jg
lret
in
and
les
or
ret
jbe
mov
scas
loope
stos
in
fwait
outsl
pop
scas
adc
enter
adc
mov
pop
dec
cmpsl
xchg
jne
popa
mov
cwtl
aam
xor
loopne
xor
es
dec
push
inc
mov
sub
dec
shl
insb
ret
fcompl
js
mov
notb
and
inc
rcll
aad
xor
push
fwait
inc
sti
insl
push
dec
movsb
loop
leave
mov
mov
addb
loopne
jbe
out
mov
out
mov
pop
jl
xchg
push
and
xchg
insb
in
popa
insl
mov
shlb
xchg
idiv
mov
outsb
pop
ret
outsb
sahf
test
dec
mov
add
adc
lahf
das
add
jmp
int3
repnz
mov
xor
xchg
lcall
mov
mov
jns
js
adc
or
aad
addr16
aas
push
mov
leave
aaa
bound
rcll
sbb
jl
mov
in
push
adc
movsb
jmp
andl
shrl
pushf
xor
and
idivb
iret
fmull
add
addb
cmp
js
pop
xor
fiadds
into
lods
pop
stos
ja
pop
in
clc
adc
pop
lds
shrb
fcoms
push
jg
flds
xchg
push
add
jl
mov
mov
data16
lods
push
push
imul
fistps
sahf
adc
int
andb
ljmp
xor
test
sbb
ficoml
pop
iret
xchg
push
adc
mov
push
out
pop
cmp
mov
shr
loop
push
sti
mov
sub
cld
inc
add
aad
dec
and
insl
rorb
test
or
and
jge
mov
xchg
sbb
xor
cltd
test
dec
or
inc
rcll
mov
stc
popf
push
or
pushf
mov
xchg
or
push
jbe
daa
cwtl
push
xor
icebp
dec
cwtl
push
and
stos
call
mov
or
jno
in
xchg
stos
mov
xchg
dec
sbb
mov
dec
xor
mov
push
xor
roll
sub
mov
dec
cwtl
dec
xchg
testl
mov
sub
test
icebp
cmpsl
dec
ja
jle
call
xchg
in
addr16
and
subl
test
daa
arpl
inc
jp
cwtl
sti
es
or
mov
jp
scas
cmpsl
lcall
add
xor
pop
mov
xor
ja
mov
mov
inc
pushl
sbb
mov
in
in
arpl
xchg
in
mov
outsb
push
ss
scas
lret
inc
mov
lods
jle
aam
scas
stc
and
fidivrs
sub
sub
xor
adc
das
test
movsb
popf
fstpl
lea
dec
mov
jo,pn
pop
stos
inc
push
jecxz
xor
mov
stos
das
mov
and
sahf
shl
movsb
xor
xchg
xchg
test
push
cmp
mov
iret
and
loope
add
jns
arpl
cltd
test
mov
sarb
sbb
nop
clc
sbb
std
inc
and
cli
push
lea
lcall
in
xchg
movsl
cld
jb
les
cwtl
shll
fdivs
pop
cltd
shl
inc
dec
adc
sbb
adc
ljmp
sub
in
push
adc
pop
icebp
mov
rcl
xor
inc
mov
icebp
std
shl
lahf
pop
jb
jl
in
mov
arpl
mov
stos
stc
pop
lahf
cmp
pop
invlpg
ret
ss
mov
adc
pop
dec
dec
int3
inc
inc
in
cli
outsb
and
lahf
ds
fldenv
jne
fldpi
nop
stos
cmp
mov
mov
push
mov
test
and
xchg
int3
fbld
out
inc
insb
adc
xchg
mov
fsubs
les
inc
shrb
pusha
jnp
inc
mov
jmp
sub
push
jl
jl
and
test
mov
cmp
add
pavgb
sahf
les
inc
mov
xchg
mov
out
xchg
cs
xor
cmp
movsb
aam
xor
jbe
dec
mov
aam
stos
pop
xchg
stos
mov
movsb
nop
and
and
ds
pop
mov
addr16
call
inc
mov
call
lcall
fidivrl
sub
cld
mov
inc
adc
push
adc
adc
jnp
inc
or
cmpl
imul
pop
ret
cld
sbb
insb
mov
clc
mov
pop
mov
dec
iret
or
ret
dec
sbb
add
and
adc
repnz
out
shr
ds
jno
leave
roll
xorl
ficoml
mov
je
cli
cltd
les
int
jno
jg
pop
cmpsb
ret
in
lcall
clc
jl
jb
xor
nop
fcmovnu
fs
cli
jmp
cs
fidivrl
outsb
test
pop
fstpt
and
sub
jno
mov
push
cmp
xor
loop
rcl
jbe
clc
cmp
inc
mov
cmpl
je
or
cmp
mov
pop
lods
or
mov
in
negl
mov
cltd
jle
and
jae
test
cmpsb
lret
mov
cmp
int
dec
cmp
mov
aad
mov
dec
jle
mov
or
push
mov
mov
cmpsb
orl
lahf
or
shll
and
mov
cli
into
out
add
pop
and
pop
xor
addr16
adc
das
push
inc
shl
gs
jbe
cs
fs
js
push
imul
mov
ret
adcl
sahf
xor
and
mov
cli
cwtl
xor
xchg
ret
sub
mov
pop
adc
icebp
fdivp
xor
adc
xor
cltd
mov
test
jecxz
or
cli
repnz
test
enter
aad
scas
xor
ret
neg
jp
shll
gs
xchg
sub
xor
in
hlt
movsb
das
mov
jg
xchg
sbb
testb
xor
les
push
call
push
inc
push
loopne
jmp
lods
insb
mov
adc
ja
cli
adc
dec
dec
imul
adc
xor
adc
xor
test
pop
lcall
adcl
xor
ljmp
mov
fcmove
test
repnz
icebp
sub
test
scas
lcall
lret
mov
movsb
inc
fsubl
testl
je
call
mov
mov
inc
divb
or
sbb
sbb
ret
sbb
pop
pop
jns
lretw
xlat
loop
push
movsb
adc
inc
dec
icebp
lcall
lahf
js
lret
fsts
movsb
pop
adc
cmp
xchg
pushf
sub
fimull
popf
sarb
shll
inc
jmp
pop
push
loopne
mov
mov
daa
mov
and
cltd
stc
in
sbbb
inc
adc
and
mov
sbbb
scas
movsb
rolb
jnp
test
lcall
cmp
cltd
push
and
movlps
mov
gs
dec
int3
xor
dec
pop
mov
test
in
imul
lret
pop
sub
add
shr
out
dec
xchg
pop
and
out
mov
cmp
inc
ljmp
mov
mov
sbb
push
mov
sbb
inc
in
out
iret
mov
xchg
adc
and
fistps
mov
fdiv
frndint
orb
loop
insl
cld
imul
mov
dec
or
pop
dec
cwtl
movsb
lds
clc
subb
xchg
add
mov
mov
mov
or
call
lahf
stos
push
lea
or
nop
mov
cmp
cwtl
mov
test
adc
jp
popf
mov
pushl
and
mov
cmp
jns
jo
cld
jp
les
fldt
fdivrl
pop
outsb
aas
int
push
inc
inc
jo
xor
add
push
jnp
sub
mov
fstps
in
imul
mov
pop
push
sub
or
pop
and
dec
pop
push
sub
add
xchg
pop
das
lahf
call
vandps
adcb
cli
push
popa
hlt
mov
fidivs
mov
xor
cmp
xor
das
fwait
adc
mov
sbb
sti
jbe
lock
mov
mov
lods
adc
push
push
fbstp
mov
cmp
out
in
inc
cmp
dec
es
xor
jbe
or
mov
mov
mov
and
int3
inc
fadds
fdivp
mov
dec
adc
cmpsl
movzbl
test
jl
xor
sub
mov
mov
add
fists
inc
xor
xor
adc
and
fidivrl
cli
in
roll
lcall
ds
xchg
repz
and
fstpl
inc
test
movsl
push
ss
mov
xchg
mov
push
add
mov
lods
inc
roll
sbbl
movsb
stos
lahf
in
pushf
add
fisubrs
into
andb
xchg
leave
mov
inc
ss
and
lret
scas
nop
bnd
andb
ficompl
jno
pusha
cmp
sbb
mov
or
int3
das
adc
jo
mov
imul
sahf
shr
fmul
adc
add
jg
sarl
inc
pop
mov
lcall
fwait
ret
mov
in
push
and
jmp
mov
cld
xlat
mov
addr16
inc
std
mov
adc
and
inc
and
and
mov
pop
out
scas
xor
jne
sahf
test
std
mov
jno
jp
mov
pop
les
mov
sub
shrb
dec
fistpl
inc
mov
mov
adc
pop
fs
stos
nopl
sbb
fbld
cld
jp
mov
adc
pop
push
rep
jl
loop
aam
pop
mov
dec
pop
xor
icebp
push
dec
iret
push
cmpsl
dec
adc
adcb
mov
cli
or
sub
dec
cli
cmp
mov
gs
mov
imul
pop
mov
jnp
adc
sbb
idivl
hlt
aas
outsb
push
ds
inc
testl
mov
in
shrl
adc
je
movsb
dec
fistps
pop
out
int
sub
push
stc
aam
movb
fstps
fwait
mov
xchg
inc
pop
shr
subl
and
sbb
sti
or
sub
xchg
jb
xchg
xor
loop
push
fcmovu
pop
cmp
mov
add
js
cld
repnz
outsl
xorl
and
jb
mov
repnz
add
insb
mov
lods
insb
pop
subl
push
mov
mov
mov
enter
mov
addb
lcall
sub
push
insl
sbb
loopne
sub
and
jns
sarl
pop
pop
cli
xor
xchg
mov
pop
add
push
lock
fiaddl
aad
outsl
mov
fstpl
and
inc
jnp
push
repz
jp
int3
int
in
jle
add
adc
test
imul
inc
jns
mov
imul
movsl
pop
fwait
call
add
pop
scas
dec
ljmp
fldl2e
movsb
adc
shlb
das
fisubl
jg
and
push
shlb
lock
pop
idivl
jge
movsb
sbb
mov
cmpsb
push
add
push
push
add
cmpsl
dec
fwait
mov
jae
nop
push
or
sti
adc
lods
shll
push
pop
mov
orb
jns
shlb
mov
mov
jle
stos
repz
adc
pop
ficoml
test
push
mov
mov
aad
push
jae
push
sbb
pop
pop
or
xchg
or
jo
aaa
div
xor
push
mov
popf
and
sbb
sbb
lock
sub
pushf
push
cwtl
test
add
sub
mull
gs
or
pushf
mov
dec
out
mov
pop
and
pop
ja
pop
shll
xchg
sub
insb
movsl
push
scas
pop
jp
bnd
mov
jo
outsl
fistl
nop
xchg
out
mov
gs
repnz
mov
jo
sub
xorl
gs
lock
adc
dec
sbb
jbe
mov
rorb
cmpsl
mov
jge
mov
ret
pop
mov
fimull
add
jae
inc
jle
mov
imul
xchg
insl
add
lret
mov
push
out
mov
mov
inc
add
std
pop
inc
xchg
aam
enter
mov
pushf
sub
xlat
add
test
push
nop
jp
jmp
inc
xlat
cmc
inc
cmp
adc
and
sahf
sbb
nop
inc
stos
shrb
mov
inc
cltd
jbe
lods
mov
int
mov
push
jnp
popa
jno
sbb
add
out
ret
data16
add
sub
cmpsl
mov
mov
rcrb
inc
adc
stc
test
xor
inc
repz
inc
sbb
xor
loopne
mov
pop
push
ja
iret
ficoms
cmp
adc
out
mov
jl
xlat
rorb
dec
sub
es
push
ljmp
cli
cmpl
mov
test
xchg
inc
dec
jl
movsb
or
sub
inc
iret
mov
mov
sbb
lock
fiaddl
bnd
mov
fnsave
popf
xchg
push
lret
dec
into
mov
jl
or
leave
shlb
test
sub
in
lret
mov
jnp
lahf
call
inc
mov
popl
lds
loopne
sbb
sar
push
xchg
jnp
mov
rolb
in
push
push
mov
xchg
lcall
loop
bound
dec
popa
lcall
addr16
dec
xlat
cmpsb
sub
and
inc
pop
mov
fsubl
cwtl
aam
scas
enter
ja
adc
test
mov
mov
cwtl
aas
popa
bound
jg
shlb
testb
sub
loope
fisubs
add
mov
xchg
adc
xor
jne
clc
cld
mov
ret
ret
shl
mov
daa
bnd
out
adc
cmp
push
inc
sahf
ja
mov
pop
into
or
jmp
jmp
insb
arpl
int
mov
xor
ret
xchg
fmul
clc
rcll
aaa
push
xchg
pushf
fstp
inc
cmp
cld
pop
push
mov
cmp
add
arpl
jp
lods
ret
test
dec
jnp
mov
add
xor
leave
mov
mov
shrb
sbb
push
repnz
dec
dec
mov
loop,pn
and
lea
int
inc
jae
ret
and
add
sar
cld
enter
fsubr
test
sub
in
insb
cli
pop
stos
sti
mov
test
xlat
jle
popf
xor
ds
imul
jmp
es
xchg
jns
jae
sbb
loopne
pop
mov
mov
hlt
loopne
push
push
mul
mov
in
in
aaa
inc
test
imul
ficoml
fsts
jmp
adc
and
rcrl
sbb
stos
lcall
sbb
jno
adc
hlt
xor
ds
dec
xor
sub
push
adc
cs
xor
add
cli
pusha
std
mov
enter
sbb
cmpsb
lods
mov
inc
sbb
mov
stos
inc
jne
push
outsl
mov
mov
aad
cmp
fistps
or
dec
and
les
mov
jp
sbb
ds
insl
jne
cmpsl
sahf
pop
int
jge
mov
loopne
cld
mov
pop
ja
pushf
test
imul
lods
xor
xchg
push
mov
dec
cmp
jo
jp
in
and
lcall
fs
or
xor
push
or
and
dec
jo
das
pushf
cmp
sbb
test
xchg
and
sti
ficoms
mov
rclb
pop
jbe
cmpsl
mov
mov
mov
loope
pushf
fcompl
jae
xor
stos
mov
imul
jle
sub
mov
jno
fisubrl
adc
sub
mov
addr16
pushf
push
dec
out
or
shll
push
mov
push
push
and
pop
inc
imull
call
flds
add
or
jecxz
push
int3
dec
pop
inc
jge
adc
int3
sbbl
inc
push
das
xchg
shll
std
fdiv
mov
or
fisubs
cmp
bound
mov
movsl
cmp
cmp
jnp
cmc
and
into
cmpsb
rolb
pusha
mov
fisubs
cmp
lea
jnp
add
or
ja
xchg
sbb
sbb
dec
mov
adc
push
ret
js
cmp
out
sbb
push
add
mov
push
call
aas
mov
iret
push
pop
mov
cmp
add
lds
pop
notb
mov
add
inc
mov
sub
test
add
xor
cltd
movsb
sahf
add
inc
add
sub
jnp
movsb
dec
lcall
scas
adcb
ja
jb
lea
in
stos
loope
push
jno
inc
and
cmpb
cmpsb
adc
sbb
fists
or
sbb
mov
dec
inc
arpl
pop
sbb
jo
jp
gs
andl
xor
and
sbb
xchg
xorl
movsl
arpl
shlb
loop
mov
aad
dec
rcl
movsb
lret
cmp
push
movl
dec
lahf
lock
jnp
mov
sbb
nop
dec
sarb
and
rolb
loop
dec
ret
xchg
cwtl
ljmp
push
lods
xrelease
ljmp
mov
mul
and
cmp
dec
js
and
push
mov
int3
mov
sbb
cmpl
data16
inc
mov
push
in
fwait
cmp
add
mov
mov
cmp
push
mov
adc
add
jge
subb
mov
loope
out
sarl
xchg
mov
shlb
jo
jecxz
adc
mov
jp
popf
mov
xor
mov
fcoms
inc
xchg
hlt
cmp
jmp
dec
mov
fsubs
dec
adc
loope
cmp
lahf
fldenv
fwait
orl
mov
push
mov
jae
xchg
lahf
sbb
hlt
pop
lahf
loop
test
lcall
clc
cmp
dec
dec
push
mov
or
popa
je
cli
mov
cltd
jno
jno
sbb
dec
sti
hlt
stc
push
cmp
in
or
cld
xchg
cmp
pop
mov
clc
in
pusha
ss
mov
jmp
xchg
push
sub
fbstp
mov
pushf
in
push
sbb
call
addl
jl
mov
mov
push
adc
sbb
and
nop
sti
sete
push
push
bound
rcrl
sub
push
shrl
cwtl
inc
cltd
stos
mov
loopne
adc
loop
addb
insb
outsb
clc
ljmp
cli
mov
pushf
push
lock
pushf
push
jae
xor
hlt
mov
dec
fiaddl
mov
jl
push
enter
xlat
es
mov
stos
add
adc
mov
push
cwtl
adc
or
lock
sbbl
decb
mov
xor
je
pushl
bound
xor
push
lahf
lds
xor
cmp
push
or
inc
jecxz
in
jp
ljmp
jae
sub
jmp
repz
in
sbbl
push
mov
mov
lret
mov
test
xchg
xchg
push
xorb
or
inc
int
dec
int3
jp
lock
inc
or
xchg
add
dec
sbb
xor
bound
mov
insb
adc
jnp
and
add
mov
dec
shr
cmp
pop
faddp
and
add
pop
sbb
aam
mov
test
dec
mov
mov
mov
mov
cltd
loopne
fistps
adc
js
jg
jb
sbbl
mov
call
push
pop
inc
je
pop
lret
aaa
xor
mov
xchg
shl
stos
mov
scas
sbb
push
mulb
inc
adc
in
mov
xor
or
adc
fbld
inc
andb
in
bound
push
adc
mov
push
mov
jge
xor
lcall
sub
sub
pop
ss
pop
add
mov
shl
cmp
imull
je
sub
jo
ret
fxam
sub
bound
inc
pushf
test
faddl
and
je
xchg
sbb
push
sahf
push
push
lcall
adc
push
jmp
or
aam
in
iret
push
sbb
hlt
pop
mov
add
imulb
lea
jno
and
or
lret
xor
push
lret
es
loop
cs
cwtl
push
xchg
notb
scas
adc
sbb
test
mov
call
orl
sbb
in
decb
and
rcl
cs
ljmp
cld
mov
pusha
mov
ficompl
lock
mov
ret
fwait
sarl
fdivrp
nop
cmp
cli
shr
fsubl
outsl
xor
pop
stos
dec
repnz
lahf
xchg
xchg
push
nop
imul
pop
fcmovb
cmp
push
dec
imul
insl
fmull
imul
rorl
lock
xchg
scas
ja
std
into
mov
out
cmp
icebp
repnz
sbb
adc
sarb
dec
xor
xlat
hlt
bound
les
fdivr
mov
adc
aam
fprem1
inc
ljmp
inc
movsl
leave
gs
clc
sahf
mov
fdivs
movsb
shl
lahf
inc
sbb
xchg
mov
sbb
std
mov
scas
inc
xor
stos
mov
or
aam
data16
add
fmul
lds
pushf
stc
ror
jl
pop
sbb
mov
jp
je
xchg
sub
mov
test
ret
mov
xlat
sbb
pinsrw
clc
mov
xchg
into
pop
cmp
cwtl
dec
xchg
sar
mov
and
dec
leave
fwait
and
orb
mov
fmull
push
dec
push
fcmovu
daa
mov
push
subl
loop
lret
mov
sub
imul
loope
xchg
cmp
push
cmc
in
shlb
jmp
mov
dec
hlt
sbb
bound
data16
popf
dec
push
inc
test
pop
pop
sti
cmpsb
cmp
or
roll
test
push
inc
in
xor
mul
daa
sahf
xor
lea
mov
sbb
pop
insb
pop
test
sub
in
daa
xchg
jmp
inc
push
mov
pusha
xor
push
xchg
nop
xor
sub
popa
mov
cld
ja
push
inc
mov
jo
cwtl
sarl
pop
mov
subb
test
dec
pop
cmp
push
std
xchg
lods
inc
arpl
xor
jl
nop
andnps
sub
cmp
fnstsw
cmpsb
adc
bound
sub
iret
js
xchg
mov
pop
data16
or
add
scas
roll
les
push
loopne
mov
mov
pop
addr16
lea
movsb
or
adc
not
movb
fsubr
movsb
loope
adc
fs
push
popa
in
les
pusha
rcrl
into
loopne
inc
sbbb
pop
clc
mov
cmp
mov
scas
add
in
addb
adc
add
pop
pop
cmp
mov
pop
daa
dec
jnp
ds
adc
push
mov
cwtl
mov
inc
lea
pushf
push
es
add
pop
add
shll
xor
sbb
pop
cmp
jp
mov
cmpsl
iret
pushf
xchg
jno
out
jns
mov
std
mov
mov
mov
dec
mov
stos
ret
lret
out
mov
sbb
fxtract
mov
mov
jbe
in
dec
pop
or
mov
insl
mov
fistps
jae
fidivs
push
in
mov
dec
mov
jle
push
mov
jnp
cwtl
inc
dec
call
int
leave
enter
or
mov
repz
ljmp
and
and
mov
or
stos
in
dec
mov
jb
cmp
loope
lret
mov
xor
xor
faddl
fiadds
jne
dec
insb
pop
mov
sbb
aas
into
inc
add
fiadds
add
inc
add
testb
add
add
adc
add
sub
add
inc
add
push
inc
add
pusha
inc
add
insb
inc
add
addb
nop
inc
add
pushf
inc
add
stos
inc
add
mov
inc
add
fadds
add
inc
add
lock
add
push
inc
add
sbb
sub
add
cmp
add
dec
inc
add
pop
inc
add
push
add
jp
add
xchg
inc
add
scas
inc
add
rolb
inc
add
lock
add
or
add
inc
add
sub
add
add
dec
inc
add
pop
inc
add
inc
add
jbe
add
mov
add
inc
add
mov
add
into
inc
add
fadds
add
inc
add
add
add
inc
add
sbb
add
cmp
add
add
add
jle
add
mov
add
inc
add
lret
add
add
add
inc
add
testb
add
add
inc
add
adc
add
and
add
add
add
ds
add
dec
inc
add
pop
inc
add
fs
add
jbe
add
xchg
add
inc
add
mov
inc
add
add
add
add
add
inc
add
mov
add
inc
add
loopne
add
js
add
or
add
xor
add
add
into
inc
add
fiadds
add
inc
add
testb
add
add
adc
add
sub
add
inc
add
push
inc
add
pusha
inc
add
insb
inc
add
addb
nop
inc
add
pushf
inc
add
stos
inc
add
mov
inc
add
fadds
add
inc
add
lock
add
push
inc
add
sbb
sub
add
cmp
add
dec
inc
add
pop
inc
add
push
add
jp
add
xchg
inc
add
scas
inc
add
rolb
inc
add
lock
add
or
add
inc
add
sub
add
add
dec
inc
add
pop
inc
add
inc
add
jbe
add
mov
add
inc
add
mov
add
into
inc
add
fadds
add
inc
add
add
add
inc
add
sbb
add
cmp
add
add
add
jle
add
mov
add
inc
add
lret
add
add
add
inc
add
testb
add
add
inc
add
adc
add
and
add
add
add
ds
add
dec
inc
add
pop
inc
add
fs
add
jbe
add
xchg
add
inc
add
mov
inc
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
gs
imul
je
add
add
jb
outsb
push
add
add
push
jb
je
inc
imul
je
gs
imul
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
add
je
outsl
fs
gs
imul
add
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
je
outsl
outsb
jae
insb
gs
jne
jo
je
push
add
add
dec
popa
jo
imul
insb
add
add
insb
push
outsb
ja
outsb
add
add
je
push
push
jb
outsl
jb
je
add
add
fs
gs
jne
arpl
add
add
jb
jo
outsb
push
add
add
imul
add
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
gs
imul
add
push
insb
gs
add
push
gs
outsl
outsb
jae
insb
gs
push
add
add
push
imul
outsl
dec
jne
je
inc
jns
add
add
insl
imul
outsl
arpl
jae
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
gs
je
inc
jbe
outsb
je
add
add
dec
jae
popa
fs
gs
fs
je
add
add
push
imul
jae
jne
arpl
add
add
popa
jo
insb
insb
outsl
arpl
add
dec
inc
dec
popa
jo
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
outsb
push
gs
js
gs
imul
gs
add
add
je
popa
outsb
fs
gs
outsl
jne
je
add
add
je
je
imul
inc
add
add
dec
outsb
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
js
je
jb
arpl
jae
add
push
gs
imul
gs
add
add
je
jb
outsl
arpl
fs
js
push
add
add
popa
insb
inc
jb
add
add
je
inc
dec
inc
push
add
add
inc
jb
popa
je
inc
imul
gs
popa
jae
inc
jb
outsl
jb
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
gs
je
inc
imul
gs
je
dec
popa
outsb
fs
add
add
push
gs
jne
jb
outsb
je
imul
jns
add
add
inc
gs
inc
push
add
add
inc
gs
push
dec
outsb
outsw
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
jb
jne
insb
push
jb
je
arpl
add
push
insb
jae
jb
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
push
gs
outsb
push
gs
js
gs
imul
gs
add
dec
gs
jo
jb
popa
je
add
add
push
imul
jb
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
jne
jb
outsb
je
push
dec
add
dec
push
push
inc
push
push
cs
dec
dec
add
add
ja
jae
arpl
add
add
outsb
insb
outsl
arpl
add
insl
gs
jae
je
add
add
insl
insl
outsl
jbe
add
add
fs
jae
pop
imul
add
outsl
outsb
je
outsl
insb
data16
add
inc
push
xor
cs
dec
dec
add
add
inc
outsb
fs
imul
add
data16
popa
je
push
arpl
add
ja
fs
add
inc
imul
js
popa
jb
insl
push
add
add
outsb
fs
gs
popa
addr16
add
add
inc
jb
popa
je
push
imul
inc
add
add
fs
je
imul
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
add
je
imul
outsb
addr16
add
add
dec
gs
popa
addr16
outsl
js
mov
add
xchg
lret
into
fdivr
xchg
xor
pop
insb
push
arpl
leave
cmp
popf
inc
or
inc
xor
push
es
sub
inc
add
cltd
data16
scas
movsb
out
and
aaa
mov
xor
daa
das
sub
push
cmp
lret
pop
mov
ja
add
pop
popf
cld
aas
pop
jge
jo
or
and
cmpsl
push
ds
xor
out
push
fwait
inc
lea
les
mov
cmp
lds
pusha
cmp
imull
sub
stc
mov
sub
sbb
sub
bound
lcall
and
inc
leave
pop
sbb
cs
imul
sbb
pop
mov
pushf
aad
cmp
push
cwtl
mov
xchg
inc
xchg
cs
imul
push
jecxz
leave
or
mov
cs
cmp
mov
jg
jnp
lods
xchg
jbe
push
stos
in
xchg
jae
std
xor
jns
cmp
jp
jg
ja
add
pop
sub
dec
inc
lahf
bound
sahf
cmpsb
nop
iret
iret
lret
fisubrs
in
xlat
inc
out
push
dec
imul
xor
or
sub
cmpsb
pop
push
sbbl
ds
mov
rolb
out
fcomps
fildll
imul
rol
jge
inc
xchg
or
inc
and
loopne
dec
pop
loopne
push
mov
dec
outsb
test
ds
push
pop
lods
fisttpll
xor
push
jge
xorb
lock
or
xchg
inc
cltd
js
cmc
add
mov
movsl
xchg
push
les
ror
pop
imul
int
outsl
bound
dec
mov
or
insl
pop
ja
aas
mov
jae
jno
and
mov
mov
xor
dec
loop
xchg
iret
push
push
and
pusha
enter
jno
int3
or
inc
inc
add
lock
ljmp
add
and
or
push
xchg
fs
out
sbb
or
enter
and
addr16
inc
sub
in
loope
dec
imul
arpl
gs
push
push
out
lods
bound
pop
xor
adc
cli
adc
out
xchg
or
sub
xor
nop
fwait
mov
out
scas
jb
push
cmp
sahf
fnstenv
inc
cmp
mov
push
lret
dec
add
sarl
aas
sbb
fistpll
cmpsb
fnstsw
sub
sbb
sbb
inc
jl
and
mov
jl
js
test
mov
mov
or
roll
xor
popf
xchg
stos
pop
fnstenv
adc
mov
adc
pop
xor
fsubp
push
pop
adc
sbb
pop
iret
inc
fisttps
out
mov
addr16
stos
xchg
addr16
in
pop
mov
leave
ret
cmp
xor
xor
jmp
xor
loope
add
jmp
stc
pop
sub
and
xchg
in
imul
xlat
xor
std
daa
jle,pt
mov
addr16
mov
pushf
mov
mov
sbb
xchg
pop
pop
or
dec
jne
mov
xchg
push
stos
adc
inc
fnstenv
pop
std
movsl
mov
dec
lret
xchg
loopne
xor
jmp
cmp
ja
insl
and
das
and
add
sbb
data16
mov
js
outsb
xchg
rcll
xchg
jg
cli
out
push
inc
std
shl
sti
sbb
in
ret
xor
mov
add
lahf
andb
jmp
iret
adc
shll
rcll
push
test
pushf
xor
jecxz
aad
mov
nop
xor
xchg
lret
out
mov
or
jge
shrb
std
out
or
lods
shrb
lock
imul
push
call
sub
popf
incl
pop
inc
rcrb
repz
in
xlat
out
fyl2xp1
test
mov
or
lahf
in
mov
loopne
popf
or
push
xor
cmp
pop
sbb
aad
cmpsl
mov
cmpsl
pushf
ret
or
and
xchg
push
bound
outsb
mov
mov
out
mov
rcrb
mov
xchg
pop
xlat
imull
int3
xchg
xor
nop
dec
das
xor
or
imul
dec
sti
dec
xor
or
sti
icebp
pop
mov
cwtl
aas
xchg
push
xchg
jge
sbb
cmovge
movsb
sbb
sub
xchg
fmull
or
outsb
movsb
sbb
push
test
xor
mov
jecxz
xlat
sti
adc
ss
iret
out
ret
orl
add
inc
data16
push
cmpsb
shll
sub
mov
mov
loope
hlt
adc
loop
dec
repz
stos
cmp
mov
add
adc
imul
sarb
loop
jge
aad
pop
jecxz
inc
test
or
test
mov
ret
pop
out
insb
jle
xchg
mov
xlat
fldcw
call
scas
xacquire
xchg
pop
ljmp
out
fdivl
sub
insb
jmp
inc
movsl
cmp
mov
mov
cmc
jnp
addr16
xchg
lret
mov
out
cmp
mov
lahf
test
in
cmp
lret
push
loop
in
sub
xchg
or
mov
leave
das
fs
xor
mov
je
int
mov
xchg
pop
push
push
push
xor
xchg
fs
cmp
cmpsl
jge
sub
and
movsl
xlat
pop
mov
fsts
aaa
jmp
insl
jne
xor
shrl
fwait
sbb
inc
fimuls
ss
jae
shlb
xchg
mov
loope
ds
xchg
loope
popa
and
mov
or
sbb
mov
aad
xchg
pop
xchg
movsl
fcmovnb
mov
dec
data16
in
pushf
in
shll
fbstp
push
icebp
notl
out
mov
leave
ja
fs
xchg
jmp
stos
jg
arpl
xchg
leave
out
mov
lret
cmp
and
mov
or
mov
test
sti
mov
roll
lock
data16
inc
lods
cmp
lods
sbb
and
xchg
lock
pop
imul
push
repz
ds
xlat
outsl
daa
jbe
add
fldl
mov
dec
leave
daa
ja
and
push
push
out
push
lret
sub
inc
test
jns
mov
shr
mov
fs
mov
mov
mov
add
push
test
stos
div
ljmp
sbb
outsb
push
ss
add
mov
xor
loope
scas
pushf
xchg
xor
xlat
mov
das
or
data16
mov
adc
add
push
cmp
shrb
xchg
push
pushw
xchg
data16
bound
lds
mov
repz
shrb
pop
xor
movsl
test
mov
addr16
into
mov
lret
cmpsl
jecxz
movl
int3
dec
mov
cmpl
insb
call
cs
cmpsl
aaa
lret
jns
ds
lret
stc
seto
addr16
movsl
addr16
cmpb
lcall
xchg
and
inc
rcrl
push
pop
inc
divl
mov
mull
xchg
jne
mov
test
mov
push
fisubrl
loop
sub
inc
mov
ja
adc
push
and
jge
call
jne
dec
inc
sub
imul
fidivrl
mov
in
xlat
lret
xchg
xor
loopne
dec
nop
mov
lret
jmp
subb
xchg
add
inc
arpl
cmc
or
sbb
fimull
in
in
fbstp
pop
das
and
inc
xchg
hlt
push
xchg
notl
jae
sbb
test
jl
dec
je
inc
aad
dec
mov
ds
xchg
jp
jno
add
lret
mov
movsl
cli
movsl
lret
jge
sub
xor
mov
jae
or
xchg
adc
and
lcall
push
xchg
mov
add
cs
push
jg
out
or
mov
or
pop
and
outsb
xchg
add
inc
das
clc
sub
scas
adc
outsb
fs
sbb
test
xchg
out
adc
sub
jle
xor
inc
aad
pop
imul
cmpsl
ja
or
rcrl
daa
sub
and
xor
aad
add
lret
sbb
fwait
mov
mov
push
sbb
and
xchg
sti
psubd
pop
sbb
outsl
cli
push
jg
in
stos
xchg
ja
aas
rcrl
xor
fdivs
iret
mov
test
movsl
mov
lock
push
mov
scas
mov
aas
in
pushf
fstpl
fwait
sub
push
mov
es
mov
aas
add
or
mov
or
std
movsb
lds
in
cmp
out
jmp
std
in
adc
rolb
xor
pop
out
pop
dec
fisubl
sbb
add
outsb
and
cld
adc
aas
in
shlb
add
test
stos
clc
hlt
icebp
and
mov
in
xor
in
cmp
mov
mov
and
fscale
adc
int
popa
dec
cmpsl
pushf
and
dec
pop
jecxz
loopne
movsl
aad
lods
iret
in
fldcw
inc
in
loopne
push
push
and
rcl
mov
stos
pop
push
cmc
clc
inc
push
outsb
cmp
jl
es
pusha
stc
cli
push
add
lock
loop
mov
das
imul
adc
adc
xor
lahf
mov
mov
pop
dec
rep
cltd
xor
dec
cmp
mov
mov
mov
lret
cmp
ljmp
iret
outsl
decl
cmp
mov
rolb
pop
insb
lods
cmp
lret
cwtl
dec
sub
jl
fisubrs
pop
push
mov
shrl
pop
pop
mov
mov
mov
jmp
jo
jmp
mov
test
mov
scas
adc
xchg
and
xchg
sbb
cmc
mov
rclb
push
adc
icebp
mov
loopne
inc
push
pop
dec
or
pop
add
sbb
mov
addr16
out
xor
mov
mov
mov
lret
cmpsl
jno
into
jmp
xchg
xor
pop
pop
es
jns
sbb
leave
mov
addr16
cmpsb
cltd
mov
js
in
mov
cmp
insb
lahf
insl
add
mov
xchg
call
cld
sbb
leave
add
xchg
mov
and
aas
in
fldenv
stos
hlt
repz
push
outsl
arpl
aad
pop
fs
inc
pop
stc
sbb
imul
push
aam
rorl
pop
push
cmc
rcl
jb
daa
sub
push
bound
out
pop
and
js
inc
lcall
call
jno
lods
jecxz
mov
jo
imul
xchg
loope
movsb
lods
imul
sbb
scas
fdivrl
sti
pusha
sbb
mov
pop
in
mov
jmp
push
movsl
mov
jl
ja
lcall
test
push
ret
jecxz
dec
outsl
push
cli
test
pop
or
out
xchg
lret
pop
mov
xor
in
sub
scas
sub
aad
lods
pusha
jb
lcall
jle
cmp
mov
std
lods
or
jg
aas
inc
outsb
sbb
shll
lea
push
fbstp
mov
or
or
mov
jecxz
dec
adc
add
pop
pushf
roll
push
sub
pop
pusha
aaa
inc
adc
loope
cmpsl
idivb
ret
inc
sub
aad
cltd
lcall
ljmp
add
sbb
je
jns
ljmp
stc
fisubrs
stc
movsl
sub
push
cmpsl
xchg
iret
sub
cmc
loop
cmp
mov
cmpsl
xor
xor
insb
push
xchg
imul
roll
adc
fistps
bound
leave
mov
enter
cltd
insl
push
js
mov
lea
inc
stos
add
jnp
out
in
add
jle
jmp
adc
jg
cmp
icebp
mov
jmp
sbb
mov
sub
inc
pop
subb
mov
xlat
mov
jnp
lods
pop
shlb
lea
scas
sub
cmp
inc
in
cmpsl
cld
cltd
int3
xlat
pop
cli
adc
mov
sti
inc
pop
or
jns
sbb
push
int3
rorb
out
sarb
sahf
mov
and
mov
test
popf
mov
out
jo
pop
addr16
scas
out
dec
cmp
sti
ret
call
xchg
mov
xchg
ja
std
sar
cmp
test
push
push
in
ret
push
sahf
repz
addr16
cmpsl
pop
xchg
sti
pop
sahf
inc
jecxz
icebp
rep
fcoms
push
sub
ljmp
or
test
dec
mov
out
push
insb
dec
in
mov
pop
jecxz
lret
test
push
and
push
imul
or
testl
push
sbb
sbb
push
xchg
stos
xchg
repz
push
std
fs
mov
out
inc
xor
jbe
add
jbe
xor
fisubl
cmp
in
sbb
test
and
cmp
sub
xor
adc
and
popf
adcb
push
paddb
and
repz
push
adc
mov
mov
or
push
out
jecxz
ret
sbb
dec
dec
ud1
xor
jp
gs
ds
out
dec
xchg
jnp
add
out
xchg
int
and
sbbb
xor
xor
jo
jecxz
add
addr16
sahf
mov
test
push
cld
bound
ret
sarb
data16
in
or
fidivrs
ja
push
cld
inc
fnsave
push
xor
and
repz
cwtl
imul
js
aas
pop
adc
notl
push
add
scas
push
mov
mov
jne
in
push
mov
or
pop
mul
pop
pop
cs
inc
outsb
negb
inc
lods
mov
push
dec
dec
pop
xchg
fcoms
jp
daa
roll
aaa
xor
mov
adc
inc
xchg
or
mov
xchg
push
jb
out
cwtl
xchg
xchg
sub
jo
stos
xorps
mov
and
in
or
out
xor
out
xor
sub
xor
add
push
repz
cmpsb
mov
jbe
xchg
xor
in
int
lea
jp
data16
in
pop
sbb
adc
pop
push
sar
imul
and
sti
xchg
sarl
daa
pop
cmp
aaa
cmp
xor
pop
js
mov
stos
jg
inc
xor
push
mov
or
dec
fwait
lods
insl
and
sbb
adc
and
xchg
dec
xchg
sbb
push
adcb
mov
insb
int
mov
xor
es
lahf
or
push
and
mov
jmp
popf
xor
lcall
jmp
mov
mov
leave
repz
out
nop
leave
mov
aad
mov
and
outsb
cmp
jne
add
stos
and
lcall
cwtl
loope
test
fistps
psrad
fisubs
push
std
fdivs
lea
jle
xchg
xchg
jne
xchg
mov
and
jge
dec
and
add
sbb
mov
xor
fstpt
andl
cwtl
jae
xor
pop
xor
sbb
push
aad
xchg
push
mov
dec
dec
addr16
jg
and
jmp
test
pop
stos
push
jo
mov
addr16
and
xor
mov
mov
cld
mov
or
arpl
pop
jne
fidivl
hlt
flds
lahf
addr16
mov
jmp
aas
jbe
dec
mov
mov
xchg
inc
aam
mov
sbb
rorl
mov
mov
adc
dec
pop
jl
lea
clc
add
and
in
sarl
push
jo
repz
orl
cmp
adc
dec
sbb
xchg
inc
movsb
imul
mov
in
cmp
sub
inc
cltd
cs
int
and
sub
mov
sbb
loop
fidivl
or
lahf
jnp
mov
pop
mov
arpl
jno
lret
mov
jo
xor
pop
mov
push
outsb
adc
and
sbb
in
and
aam
mov
sti
sbb
lods
loope
je
xlat
popf
cli
movsb
jge
mov
out
sbb
enter
push
pusha
cmp
xchg
lea
xchg
testb
cmovne
das
sbb
lcall
mov
nop
test
pop
or
cmovle
mov
arpl
jge
inc
out
std
xchg
lds
xlat
push
cmpsb
and
sub
cld
mov
int
sub
je
add
xor
jmp
push
sbb
lcall
or
or
sbb
sub
imul
inc
mov
mov
adcb
pop
mov
push
out
aad
out
movsl
fnsave
cmp
arpl
aas
push
push
cmp
in
mov
lea
pop
pop
lret
dec
cmp
aad
cmp
repnz
pop
icebp
pop
js
push
xor
leave
loop
adc
dec
mov
rolb
lds
mov
xor
fstl
fnsave
inc
shl
gs
jo
icebp
mov
push
cmpsl
in
das
push
cld
and
adc
ljmp
push
ret
and
ds
imul
repnz
scas
mov
es
lea
popa
stos
xor
in
movlps
jge
out
lahf
pop
push
mov
or
fwait
daa
mov
outsl
pop
leave
jo
push
leave
jge
jo
pop
jne
into
push
shlb
jle
sbb
das
pop
dec
daa
mov
imul
mov
sub
in
and
xchg
xor
push
jl
lret
pop
lret
inc
inc
xchg
pop
fucomp
fwait
loope
push
push
lods
xchg
loope
xlat
jp
mov
mov
push
enter
bound
or
jge
imul
ja
mov
jg
inc
scas
pushf
xor
fists
cltd
cmc
mov
addr16
nop
leave
push
addr16
movsl
addr16
out
jae
rcrl
cmp
cmp
pop
adc
dec
jae
popa
popa
mov
movsl
and
insb
and
psubb
in
rorb
mov
xchg
loop
adc
mov
in
popf
dec
shll
cmp
fcmovu
fsubrl
inc
lret
lods
shrl
lret
jecxz
outsl
inc
and
push
xchg
mov
test
mov
push
xlat
or
mov
cmp
or
add
mov
stos
mov
lea
faddl
pop
mov
adc
cmp
je
add
in
cmp
sub
sub
lock
or
iret
pop
gs
in
scas
pop
xor
pusha
cmp
add
into
std
pop
pop
in
xchg
jmp
fidivl
dec
loopne
cmp
adc
icebp
clc
sbb
movsl
dec
mov
add
out
jmp
and
add
mov
push
sti
pop
push
enter
cmp
in
ret
xchg
or
xchg
repz
ss
loope
sub
push
xadd
dec
test
adc
pusha
test
mov
mov
fldl
cmp
shrb
dec
sar
push
pop
test
sub
imul
mov
jmp
mov
hlt
repz
xlat
sahf
xor
inc
add
mov
ljmp
cmpl
jnp
out
xor
hlt
pop
sub
incl
dec
ljmp
xchg
addb
mov
lods
out
sbb
test
adc
ret
cmpsl
imul
movsb
or
cmpsb
mov
les
jecxz
in
loop
movsl
lods
arpl
fs
js
das
lock
je
sub
gs
push
in
or
test
aaa
mov
mov
stos
adc
mov
pop
push
aad
push
jmp
sbb
sbbl
mov
idivl
jg
ja
pop
lcall
push
push
filds
add
dec
push
push
outsb
lret
loope
ret
or
repz
cli
xor
mov
adc
and
jne
ret
loopne
cmp
decb
out
outsb
jecxz
jns
jns
mov
mov
out
push
test
push
and
mov
mov
out
xor
cmp
loopne
mov
add
push
or
mov
out
dec
movsl
insb
gs
inc
push
lahf
popa
sbb
xchg
xor
imul
gs
adc
test
xlat
ljmp
pop
mov
pop
xchg
iret
jl
dec
inc
jns
sbb
cld
mov
insb
jle
jmp
push
and
push
jnp
aas
stos
dec
pop
sub
movsl
out
sbb
jle
js
imul
loope
clc
jmp
inc
and
jge
loope
adcb
push
pop
adc
cmp
push
dec
testl
adc
pop
push
cmp
cmp
cmc
cmp
xchg
out
enter
int3
inc
jle
addr16
mov
nop
dec
cwtl
ss
push
jp
lods
bound
add
ret
sahf
lret
sub
sub
mov
add
int3
xor
add
cld
frstor
in
test
mov
scas
mov
daa
call
and
cmp
loope
xchg
pop
mov
sbb
mov
stos
jno
adc
mov
insl
test
push
and
jmp
scas
bound
xchg
add
jmp
dec
xor
add
hlt
or
scas
pop
sub
pop
gs
inc
xlat
cmp
repz
push
push
jne
pusha
sub
jo
or
mov
sbb
sbb
pop
std
xchg
jae
scas
cmp
adc
lock
aas
mov
xchg
adc
loop
call
push
mov
negl
ss
add
xlat
jecxz
loope
sarb
cmpsl
dec
arpl
lock
xor
dec
arpl
arpl
loope
adc
cwtl
sbb
xchg
sbbb
outsb
and
push
or
addr16
leave
es
int
jo
mov
data16
push
sbb
push
push
sub
subb
arpl
cmp
jl
enter
ret
fidivrs
inc
xchg
adc
imul
jmp
pop
xor
divl
fwait
mov
jae
shrl
in
cmp
fmuls
je
dec
jb
iret
push
iret
mov
mov
movsb
sahf
gs
xor
outsl
push
ljmp
add
xchg
push
stos
push
mov
icebp
pop
cwtl
and
rclb
std
or
jl
mov
cmpsl
test
mov
dec
and
mov
sbb
sbb
in
mov
icebp
mov
loop
mov
add
jg
jmp
jl
fdivr
jno,pn
shlb
xchg
in
xchg
adc
bound
mov
fdivr
xorb
jns
mov
gs
mov
push
mov
sti
lock
cmpsl
out
ljmp
adc
push
sbb
mov
mov
cmc
mov
in
or
mov
mov
adc
test
inc
stos
xor
xor
ret
fists
sbb
pop
mov
inc
and
fcoml
das
leave
mov
call
jg
inc
or
test
adc
sbb
adc
push
dec
je
push
scas
mov
push
lahf
mov
cmp
int
les
in
stc
repz
mov
jae
xorl
mov
bound
inc
loop
movsb
icebp
sbb
push
push
mov
or
ficomps
repnz
push
and
xor
push
push
push
ljmp
dec
nop
inc
cs
inc
mov
push
cmc
insl
enter
sub
sub
cs
orb
stos
sub
out
dec
cmp
ja
outsl
insb
or
ret
stc
push
add
adc
popa
ss
adc
xor
scas
aaa
jge
push
mov
ret
addr16
mov
stc
or
inc
out
aam
pop
cmp
clc
and
iret
loopne
clc
add
sub
jge
loope
xchg
jmp
loop
test
enter
xchg
jo
pusha
jg
pop
mov
cmp
cli
adc
lods
sbb
call
lahf
mov
xor
pop
adc
and
cmp
inc
adc
enter
mov
cmp
jmp
xlat
decl
fsubp
inc
test
cbtw
and
and
pop
pop
sti
sub
sub
out
push
sub
or
xchg
xchg
in
daa
inc
or
lods
sub
cmpsl
popa
arpl
lds
not
push
or
cmp
cmp
sbb
inc
jl
mov
xchg
in
push
lret
inc
dec
cltd
sti
jmp
loop
shlb
xchg
shl
insb
int3
out
daa
jp
jo
int
lock
imul
pop
cli
dec
xor
out
lahf
sar
add
dec
adc
dec
lret
mul
push
inc
sub
and
sub
insb
mov
xchg
in
stos
cmpsb
push
pop
sbb
movsb
mov
sub
mov
pop
sub
push
shl
jmp
shll
xchg
mov
ret
xchg
mov
in
adc
pop
dec
xchg
or
sbb
jne
jmp
inc
add
loop
mulb
int
sub
or
lea
scas
push
outsb
xor
xchg
mov
fbld
add
hlt
xchg
jnp
and
imul
xchg
pop
xchg
in
cltd
imul
mov
scas
pushf
aaa
mov
xor
lods
adc
jle
loop
in
push
mov
mov
test
gs
ja
jne
int3
bound
ret
xchg
push
cmp
vpsubsw
cmc
popa
push
xor
ret
orb
ds
jecxz
jb
xchg
test
jne
pushl
mov
xchg
and
insl
gs
js
sbb
ss
in
push
nop
cmp
dec
lds
movsl
loope
xor
jp
adc
jmp
test
imul
leave
adc
inc
add
incl
int
and
or
inc
mov
or
xchg
mov
nop
mov
dec
pop
add
push
dec
and
pop
jo
lock
addl
inc
and
adc
inc
les
cmp
xor
scas
std
push
mov
mov
jle
std
pop
mov
xlat
fstl
mov
inc
push
bound
scas
out
adc
mov
test
scas
aad
stc
dec
inc
cmpb
sbb
std
lret
jae
pushf
xchg
cld
aas
ljmp
inc
pop
or
enter
outsb
mov
out
jmp
fistps
sbb
adc
incb
jmp
add
add
jmp
cmp
psubusw
sub
mov
ja
push
call
addr16
js
add
icebp
xchg
int
lods
mov
cmp
push
in
fisubrs
xchg
adcl
push
mov
xchg
cmp
test
sti
jmp
fnstenv
cwtl
pop
xchg
sbbb
xor
aad
cmp
jne
xor
addr16
lret
ja
push
lods
hlt
xor
mov
sbb
add
xor
sub
enter
iret
jb
cmp
addr16
inc
push
mov
pop
pushl
cmp
movsb
clc
inc
sbb
imul
cmp
cmp
fldcw
daa
jg
icebp
sub
jno
mov
add
loopne
dec
lahf
xchg
stos
pop
cmc
push
mov
mov
imul
popa
les
scas
dec
pop
push
push
push
push
arpl
adc
pop
adc
push
stos
dec
lods
dec
ret
lcall
repz
data16
decb
nop
daa
out
push
popf
push
out
mov
push
icebp
clc
xchg
leave
pop
out
lahf
loop
add
xor
inc
pop
add
jmp
push
pop
cmpsl
out
popf
iret
out
mov
sbb
xlat
push
pop
jmp
xchg
and
shrb
repnz
mov
xlat
testl
inc
or
out
jno
or
jae
jne
ss
aas
dec
sub
sbb
fs
inc
out
mov
insl
lcall
mov
fs
repz
fcmovb
sbb
cltd
fnsave
mov
in
mov
aad
ds
cmpsl
mov
es
jmp
out
ljmp
or
aad
jo
lods
ret
sti
rol
mov
add
pop
ret
xchg
ss
stc
jbe
das
insl
test
jmp
out
mov
stos
xchg
bound
in
je
in
add
and
addr16
pop
jp
jno
mov
mov
cmpsl
mov
cmp
mov
push
jne
dec
cs
mull
int3
addr16
push
xchg
pop
out
mov
jae
sub
testl
jmp
push
fsubl
xor
fsubrs
andl
test
in
imul
cwtl
cmp
mov
mov
jne
inc
pusha
push
stc
outsl
inc
fcmove
mov
pop
fwait
sahf
sbb
jns
jae
loop
sub
bswap
push
mov
xor
add
jno
imul
test
xor
push
leave
ds
fldl
addr16
lods
xlat
or
dec
sbb
lea
cld
sti
mov
mov
or
mov
lods
sbb
cmc
mov
repz
ficompl
fidivl
cmpsb
mov
clc
ja
jge
adc
in
mov
xchg
cmpsb
xchg
test
and
not
dec
gs
inc
loop
cmp
cbtw
inc
mov
popf
repz
loop
push
push
mov
mov
ret
les
das
loope
xchg
je
cvtpi2ps
mov
clc
jno
jp
aam
into
xchg
mov
mov
jno
push
in
sbb
test
aam
jp
pop
call
mov
dec
aam
jle
jle
mov
jne
xchg
xchg
cmp
in
sbb
push
inc
pushf
mov
fildll
sbb
mov
jecxz
inc
xchg
xor
xchg
adc
adc
dec
dec
loopne
cltd
xor
pop
mov
xorb
lock
lret
or
inc
sahf
lock
cmp
mov
and
cmpsl
sti
mov
insb
rclb
shrb
or
jmp
push
cmp
pop
push
enter
adc
and
fcoml
cltd
add
pop
int
sub
xchg
in
dec
fcoml
test
push
sub
push
out
jnp
xor
fsts
sbbl
fsubr
sbb
dec
enter
mov
out
mov
xchg
in
sbb
push
in
bound
xchg
jae
mov
sbb
sub
xor
iret
inc
popf
je,pn
test
sbb
xor
fst
jo
out
shll
rorl
jo
dec
jge
pop
loopne
xor
lret
punpckhdq
out
mov
out
pop
sub
insl
jae
stc
adc
cmp
out
ljmp
mov
jo
lret
subl
lahf
adc
cwtl
or
and
xchg
hlt
repz
pop
cmp
mov
and
sub
or
fimull
sub
arpl
pop
sbb
test
hlt
mov
popf
loopne
test
clc
cltd
push
mov
out
outsl
sarb
loop
sbb
inc
inc
or
push
cli
lret
ss
and
clc
xor
mov
in
movsb
adc
xor
std
out
cmp
xor
xchg
dec
xor
loope
add
aas
in
cmc
outsb
cli
jle
cltd
mov
mov
outsb
pop
sbb
loope
gs
push
rcrl
jp
ds
inc
mov
dec
out
mov
pusha
insl
shl
add
lock
mov
jmp
mov
test
stc
mov
dec
les
xchg
xchg
pushf
xchg
mov
or
stos
in
sub
and
mov
sar
sbb
loop
cmpsl
shll
xchg
mov
mov
or
outsb
inc
stc
enter
sub
movsl
adc
jg
sbb
add
add
imul
sub
in
xor
dec
xchg
mov
xor
xchg
mov
out
sub
push
sbb
aam
cmp
iret
sub
mov
xchg
cs
arpl
ret
push
ljmp
adc
xchg
and
outsl
jno
ds
jl
add
xchg
mov
mov
frstor
mov
mov
sarl
ret
adc
push
sub
inc
jecxz
scas
sti
int
loopne
sub
arpl
mov
mov
fwait
lds
ja
ds
cmp
addr16
push
out
cld
sbbb
xor
adc
or
repnz
lods
ds
pop
add
leave
sub
fwait
xor
arpl
push
mov
inc
daa
inc
cmp
ss
leave
test
cmp
cmpsb
and
mov
outsl
and
insl
test
out
and
repz
inc
dec
mov
push
inc
repz
data16
call
push
push
xor
cwtl
adc
frndint
mov
or
sbb
aam
add
push
pop
jo
popf
mov
mov
jns
movsb
imul
into
mov
in
fildl
and
aaa
jmp
pop
popf
addl
dec
loope
sub
inc
push
bound
mov
testb
mov
lret
mov
mov
xchg
push
mov
test
hlt
repz
fisubs
js
dec
push
cmp
es
stos
mov
rclb
push
or
subl
rorl
std
rcll
ficomps
insl
int3
and
es
and
adc
adc
and
in
and
sbb
arpl
jbe
inc
lods
lret
push
jmp
mov
xlat
push
mov
mov
lahf
add
fldcw
dec
mov
xor
ljmp
sbb
adc
scas
loopne
xchg
push
push
ss
adc
inc
mov
neg
and
xchg
test
or
enter
aas
les
inc
cmp
mov
data16
add
push
xchg
xchg
push
add
jmp
fnsave
dec
stos
loop
jmp
or
xor
lods
push
push
or
imul
push
jne
movsl
add
inc
test
add
push
ret
xchg
and
ja
sub
push
mov
mov
mov
scas
std
push
les
xor
jno
icebp
jecxz
or
hlt
mov
nop
iret
mov
fcomp
mov
inc
loopne
cwtl
pop
sarb
aas
daa
pop
xchg
scas
dec
push
leave
jne
inc
push
or
test
pop
lea
mov
push
sbb
add
add
mov
and
out
ds
test
push
add
xchg
or
test
pop
mov
mov
cmp
mov
shl
int3
sub
fdivs
push
sti
push
addr16
and
fstpl
add
adc
jnp
imul
xor
sbb
shrl
ss
jne
xchg
sbb
mov
mov
inc
aad
mov
add
push
xlat
aas
ljmp
out
push
stc
sub
xlat
popa
sbb
sub
sub
inc
mov
ret
mov
loope
pop
icebp
cmpsl
flds
jbe
sbb
test
aas
cmp
bound
movsl
cmp
pop
fstl
test
mov
pusha
or
jnp
cmpsl
mov
xor
das
cmp
mov
fcomp
inc
ror
aas
pop
ds
iret
xchg
inc
push
mov
nop
fmuls
imul
sarb
das
xor
dec
dec
sbb
cmp
cmpsl
loope
lock
add
dec
lds
pop
imul
dec
push
inc
cmp
push
and
jg
cmc
or
out
aad
xchg
mov
jecxz
dec
jnp
cli
xor
adc
sub
cmpsl
outsb
sbb
mov
insl
jecxz
sub
dec
jmp
insb
into
lret
and
rcrl
xlat
add
out
leave
rcrl
xchg
jp
xor
sub
add
adc
in
pusha
test
gs
cld
sub
push
jg
adc
movsb
pop
sbb
popf
test
push
jo
jo
sub
lcall
push
add
mov
or
cmp
xchg
mov
xchg
daa
xchg
icebp
add
nop
pop
out
mov
pop
jmp
out
sbb
sbb
and
dec
jb
addr16
imul
rcr
xchg
lods
jecxz
scas
cmp
iret
test
push
leave
and
xchg
dec
adc
enter
mov
inc
gs
ds
js
pop
lods
imul
push
sub
rcr
pop
cmp
xchg
ret
adcb
cwtl
arpl
dec
xchg
jb
dec
cwtl
iret
jle
push
sti
ja
jnp
das
lock
pop
jnp
es
cmp
cs
xor
incl
inc
mov
mov
iret
mov
notl
mov
lahf
pop
popf
jnp
mov
push
pop
loopne
cwtl
xor
mov
mov
popf
nop
test
pop
xor
push
movsb
emms
dec
sarb
push
xchg
pop
in
push
test
enter
dec
mov
leave
mov
sbb
pop
sub
bound
jno
pop
jp
inc
mov
std
insl
mov
cmp
inc
pop
sub
xchg
mov
pop
fldcw
xor
stos
repnz
xor
aad
cmp
pop
bound
push
mov
push
push
js
add
jne
pop
xchg
cmpsl
inc
lret
mov
hlt
mov
jmp
xchg
movsb
and
icebp
test
jne
movsl
cwtl
xchg
add
mov
xchg
sub
dec
dec
or
mov
cmp
pusha
jl
mov
out
cmpsb
outsb
aaa
sbb
andb
js
pop
cmp
es
sub
fisttps
in
push
test
je
mov
pop
in
pusha
jo
mov
das
inc
push
jmp
ja
iret
cmp
aam
inc
enter
fisttpl
lahf
add
jp
dec
or
data16
pop
aam
test
jl
xchg
xor
repnz
push
outsb
test
and
pop
jge
xchg
push
dec
cmp
mov
les
stos
andl
ret
stc
addb
sub
or
ret
mov
pop
out
fs
sahf
mov
mov
nop
in
outsl
sbb
ret
dec
loop
mov
mov
and
loopne
cwtl
push
and
arpl
fdivrl
jmp
xlat
mov
negl
push
pop
icebp
or
ja
xchg
fcompl
mov
lahf
inc
add
stos
or
xor
sarl
jg
addr16
fdivrs
mul
in
fnsave
orb
lret
dec
mov
xor
jl
jne
add
lcall
aas
popf
mov
lret
ljmp
dec
jmp
sti
int3
inc
or
out
mov
xchg
lret
shll
push
pop
pop
sti
addb
jmp
test
push
push
adc
test
hlt
xchg
push
xchg
inc
push
sbbl
ja
arpl
lcall
fwait
fwait
mov
int
es
sahf
or
xchg
pop
cmp
addl
xor
inc
lods
pop
push
cmp
or
lea
popf
xchg
push
sub
test
jo
jne
pop
cmp
movups
and
jg
push
xchg
sub
shlb
dec
jb
mov
jne
jle
add
jmp
std
in
fwait
insl
xlat
jecxz
and
scas
pop
fnstenv
sub
fadds
in
push
outsb
add
lock
jp
adc
pop
mov
and
cmp
mov
dec
and
fidivrl
mov
pushf
push
or
xchg
pop
push
out
adc
dec
push
xchg
xchg
nop
push
inc
sbb
add
cli
xchg
shrb
xor
mov
xlat
dec
icebp
jge
icebp
mov
push
stos
pushl
fnop
lret
dec
dec
adc
jo
div
nop
shrl
daa
xchg
imul
xchg
popf
lret
or
call
sbb
lds
cmp
push
fildl
nop
or
adc
daa
adc
in
popa
add
pop
lret
rorb
xor
mov
xchg
push
xchg
push
jp
addr16
push
enter
adc
adc
pop
cmp
arpl
icebp
jmp
mov
pusha
stos
int3
cmp
stc
pop
jmp
call
lret
les
stc
cmpsb
and
fisubs
push
push
pop
dec
push
repnz
sbb
push
pop
and
mov
cmpsb
push
jno
push
in
push
pushf
and
mov
cltd
and
jecxz
dec
lods
dec
aam
mov
mov
cmp
dec
js
std
sub
jge
dec
addr16
xor
stos
stos
adc
mov
mov
orb
add
push
jg
subb
out
out
sub
nop
mov
pop
je
lret
mov
push
test
push
or
shll
xor
lret
sub
add
inc
cmpsb
push
jno
cwtl
mov
mov
arpl
dec
mov
sbb
pop
jmp
ret
jbe
cld
xlat
mov
add
push
dec
push
psubsw
or
jecxz
lret
test
sbb
or
adc
xchg
std
sub
mov
inc
rclb
flds
dec
imul
pop
aas
fldenv
mov
or
cmpsl
xor
push
fnstsw
mov
imul
mov
sbb
negb
fs
inc
ss
addr16
xchg
lcall
inc
js
loope
movsl
dec
cld
out
inc
add
sub
fstpt
cmc
push
xchg
adc
adc
fistps
jg
pop
and
push
lds
xchg
movsl
jbe
jg
sub
push
jle
scas
push
pop
fisubs
inc
sub
test
jle
int3
add
jmp
sbb
jmp
out
jp
xor
add
xlat
add
xchg
stos
jecxz
frstor
dec
xchg
scas
mov
and
out
movsb
jmp
sub
fisubrs
cmp
push
and
push
pmaddwd
push
xchg
push
jno
dec
rcrl
adc
testl
mov
jbe
bound
add
ret
xchg
push
cmpsb
hlt
test
dec
popa
xchg
mov
jle
dec
cmp
mov
xchg
mov
data16
popf
lahf
jb
mov
in
iret
movsl
ds
xchg
rcl
das
ret
aas
es
fiaddl
mov
adc
xlat
sub
push
std
hlt
xor
hlt
leave
fildll
imul
lret
jns
out
out
dec
test
inc
loop
push
pop
xchg
ret
faddl
jecxz
sbb
rorl
jb
xchg
cmc
pop
jnp
hlt
mov
fidivrl
push
xchg
stc
jecxz
aas
ss
add
imul
jmp
out
sti
push
adc
popa
pop
addr16
fldl
fildll
add
inc
mov
ror
std
jb
ret
inc
mov
sbb
shrl
xor
repz
scas
sub
je
pop
test
and
adc
int
popf
sbbl
pushf
stc
cmp
mov
daa
cmpsl
sbb
fdivrl
test
inc
dec
jle
outsl
scas
pop
sbb
xor
sbb
int
test
pop
pop
dec
pusha
adc
rclb
dec
push
faddl
add
jns
lahf
fs
in
dec
cmpsl
add
insl
iret
sub
or
shlb
sahf
add
pop
rclb
in
test
mov
and
push
lret
inc
xchg
lea
mov
add
mov
adc
jmp
jp
mov
push
in
daa
inc
pop
fld
xor
loope
cmp
call
mov
out
fidivrl
push
jp
addr16
sub
cmp
sbb
scas
push
pop
fisubl
insl
ljmp
push
mov
push
out
mov
adc
aaa
fs
push
ljmp
push
and
aam
and
add
and
and
lea
sti
or
and
xchg
lds
xchg
cltd
mov
out
imul
push
notl
mov
sub
fadds
loope
inc
xor
decb
push
loope
xchg
cltd
sbb
imul
nop
xchg
cmp
pop
cmp
mov
dec
sarl
faddl
lods
call
hlt
dec
ja
push
rol
jne
add
std
cmp
in
and
mov
imul
add
push
sbb
std
jae
loop
stos
add
cs
pop
mov
mov
fcompl
mov
pop
jne
push
mov
aaa
arpl
mov
cwtl
out
dec
out
pushf
imul
xor
push
cmp
inc
push
sub
int
inc
int
es
imul
ljmp
les
xchg
shll
jp
cmp
insl
ja
cmp
inc
stos
xor
imul
fisubl
jmp
lock
xchg
lret
jnp
dec
rorb
loopne
or
sub
cmp
sub
mov
int
mov
out
and
jmp
xchg
push
fucomp
push
bound
cmp
inc
xchg
push
pop
adc
rcrl
daa
adc
scas
push
sub
mov
dec
rcrl
push
leave
pop
ds
dec
fdivrs
jb
rcrl
sub
sbb
hlt
dec
jbe
out
in
xchg
fs
loopne
je
mov
sub
lret
inc
adc
adc
idivl
ucomiss
adc
in
lea
xor
mov
jg
imul
hlt
jecxz
xchg
jbe
jns
xor
seto
add
addr16
or
jg
imul
lret
fnstcw
inc
jg
push
cld
cmovbe
sbb
cmp
inc
push
pop
aad
lds
sbb
xor
jo
cmp
movsl
xchg
mov
enter
pop
daa
and
cmp
xchg
cmc
mov
in
cmp
inc
sti
mov
loop
push
and
aas
jl
inc
les
lods
cld
xor
jns
push
push
loope
push
inc
daa
mov
aam
or
cwtl
push
pop
cmp
ret
hlt
mov
fsubl
mov
xor
call
bound
mov
into
xchg
adc
fcmovnu
dec
xchg
mov
inc
ljmp
pushf
sahf
daa
inc
stc
sbb
cmp
pop
aas
push
aam
mov
lcall
jae
movsb
out
in
jno
daa
ljmp
mov
pop
and
cmp
xchg
inc
gs
sbb
sbb
and
shl
jge
hlt
xchg
std
sar
dec
mov
mov
popa
jnp
xchg
add
lret
jecxz
test
cmpl
jnp
pop
xchg
inc
fbstp
lcall
mov
xchg
or
in
xchg
ljmp
mov
jp
add
add
push
enter
aad
mov
pusha
adc
add
repz
cmc
mov
addr16
push
icebp
out
xor
mov
jmp
cmp
push
insl
out
jno
data16
cmp
inc
jmp
cmpl
jmp
daa
cltd
sub
cltd
std
rorl
cmp
daa
jmp
jl
xlat
lret
aaa
pop
adcl
xchg
add
fwait
aam
dec
call
and
das
jg
cld
imul
pushf
or
int
lds
mov
xchg
cltd
addr16
inc
dec
pop
imul
std
popa
or
jmp
imul
adc
or
mov
ja
sub
movsb
popa
in
inc
cltd
adc
xor
or
lahf
mov
js,pt
mov
pop
out
or
sbb
arpl
sbb
sarb
incb
popa
xorl
mov
or
cli
xor
jno
int
test
imul
xor
cmpsb
aaa
mov
aam
and
push
arpl
in
hlt
xchg
arpl
lock
pop
cmc
or
fimull
xor
pop
ret
test
jmp
jns
shll
jne
divb
push
addr16
mov
cmp
into
out
sbb
jbe
rorl
dec
or
or
xchg
mov
out
lods
lret
xor
mov
cli
cmp
jecxz
mov
dec
pop
adc
mov
adc
inc
out
in
insl
push
push
nop
push
mov
hlt
jae
out
or
sti
stos
adc
mov
sbb
pop
pop
xchg
mov
or
pop
add
test
mov
push
jo
or
xchg
loopne
fsubrl
hlt
cmp
mov
xchg
jl
ret
mov
vandnpd
shll
ficoms
test
jnp
arpl
cmp
rorb
cmp
addr16
or
pop
cmp
icebp
push
movsl
cmp
jmp
mov
int
inc
push
mov
outsb
outsl
aas
mov
ret
repz
push
cmp
call
push
xor
dec
and
rcrb
popa
pop
pushl
inc
repz
jmp
sbb
movsl
out
bound
out
aad
xor
je
mov
sub
push
cmp
std
mov
std
les
mov
jo
dec
and
mov
or
add
mov
aas
in
fildl
jno
sbb
xchg
mov
lret
adc
pusha
sbbl
cmc
icebp
add
xorl
push
aam
out
jb
mov
jae
pop
add
pushf
pop
pop
arpl
xlat
repz
jbe
cmc
insl
lahf
mov
dec
sub
xchg
hlt
ret
insl
and
mov
mov
insl
mov
xor
push
cwtl
xchg
ret
or
inc
and
out
pop
aas
jno
or
inc
cltd
or
mov
inc
or
jmp
dec
pushf
cmc
xchg
cld
push
in
lret
lcall
xor
dec
jmp
repnz
push
out
fs
mov
movsl
inc
roll
dec
dec
jno
outsb
leave
adc
scas
aas
cmp
test
and
sub
mov
and
enter
or
xchg
sbb
mov
push
bound
push
xorl
bound
cmp
out
addl
fsubrl
sbb
lret
jae
or
add
fwait
mov
or
aad
cmp
flds
mov
jmp
cmp
jl
sbb
bound
xor
out
or
mov
outsl
add
ds
or
pop
mov
in
in
adc
aad
in
aaa
out
arpl
stos
fists
xchg
push
dec
cmpsb
add
lds
je
mov
icebp
shll
outsl
ret
in
call
mov
push
popf
inc
push
mov
test
dec
mov
jb
insb
sbb
or
push
xor
or
test
clc
sbb
data16
and
sbb
sub
inc
out
mov
xchg
arpl
int
dec
cli
mov
cltd
inc
or
ljmp
push
addr16
je
js
xchg
jb
pushl
pop
pop
ret
push
jmp
mov
iret
insl
shll
pop
cmp
mov
stc
dec
cmp
out
adc
pop
dec
jmp
cmp
pushf
xor
xchg
pop
mov
es
lea
mov
mov
fistpll
lods
sbb
jg
push
xlat
stc
cltd
rcll
dec
jo
cmpsb
cmp
ja
mov
xor
stos
test
xlat
cld
pop
jne
xchg
scas
sbb
dec
lods
pop
mov
pop
jnp
aam
or
aaa
fstps
stos
dec
js
jnp
dec
sbbb
clc
stos
imul
int3
push
cmp
mov
mov
sub
pop
mov
mov
loop
mov
test
cli
adc
loope
xchg
or
fcoml
add
icebp
cmp
out
sbb
mov
fwait
cmp
xor
sbb
fimuls
cmp
icebp
cmp
loopne
cmp
jle
arpl
mov
mov
fwait
mov
jmp
jg
arpl
jmp
dec
xchg
lea
adc
cmpl
movsb
popl
mov
pop
clc
sbb
sahf
out
incb
push
lods
xchg
ficomps
incb
mov
enter
pushf
mov
test
push
mov
and
cmpsl
sbb
push
loop
cmpsl
cmp
cmp
push
inc
sti
dec
add
lahf
adcl
mov
xor
jmp
lods
arpl
cmp
lods
scas
or
push
pop
mov
push
pop
mov
es
push
push
popf
sub
adc
inc
test
sub
ficoml
add
mov
adc
dec
stc
push
in
sub
lret
leave
fcom
ret
sti
pop
add
cmp
pop
pop
mov
icebp
and
jne
les
mov
cmp
pusha
push
dec
add
in
test
add
cmp
roll
cmp
addr16
cmpsl
dec
sbb
lret
les
repz
int3
and
jno
pop
jl
int3
cmp
push
gs
stos
and
movsl
in
xor
outsl
cmp
popf
sbb
push
push
xorl
imul
leave
dec
mov
fs
or
push
cmp
pop
sbb
add
pushf
sbb
push
rorb
leave
or
sbb
pop
out
pop
inc
mov
rcrb
ret
jne
ret
cmp
push
add
add
push
push
mov
push
pop
cmc
bound
int3
mov
xlat
jge
lret
inc
cmc
pop
movsl
stos
out
jle
scas
movsl
out
xor
pop
dec
mov
push
xchg
jp
sbb
add
cmpsb
rcr
pushf
dec
mov
fbld
mov
stos
xchg
call
fcompl
loopne
lret
push
ffreep
xchg
fnstcw
call
fisubrl
pop
push
out
pop
mov
jl
arpl
mov
inc
orps
iret
jecxz
out
inc
outsl
inc
push
inc
lahf
sub
scas
jmp
jnp
call
call
add
decb
push
mov
test
pop
mov
cwtl
loopne
dec
mov
aas
dec
mov
frstor
mov
fs
sub
out
xor
gs
pop
in
add
mov
xchg
fstps
mov
xchg
jle
xor
in
sub
loopne
and
mov
js
out
cmp
sub
add
xchg
in
pop
call
faddl
leave
pop
lock
cld
pop
test
inc
xchg
call
or
pop
push
mov
into
cmp
pushf
adc
or
cli
mov
in
mov
xor
cmp
in
cwtl
out
xor
loope
bsr
and
cmp
in
mov
and
sub
push
inc
sarl
mov
movsl
cmp
jae
out
pop
fistpl
insl
jecxz
out
mov
movsb
mov
mov
test
cmp
out
xor
js
or
leave
push
ja
fs
and
mov
rcrl
cmc
sbb
push
or
pusha
jno
fisubrs
cmpsb
mov
mov
out
mov
adc
ljmp
mov
jb
fnsave
shlb
movsl
sbbb
adc
and
dec
cmp
cmpsb
jb
std
sub
adc
jmp
sti
fisttpll
jmp
mov
in
mov
mov
and
jne
mov
inc
sbb
xchg
xchg
jl
notb
int
shlb
add
std
adc
imul
pushf
and
in
lret
inc
cmp
scas
stc
js
push
sbb
int
ljmp
repnz
inc
push
in
inc
dec
mov
sub
pushl
jo
cli
jae
fidivrl
pop
mov
imul
int
popl
out
sub
lahf
xor
insl
dec
je
inc
xor
xchg
push
adc
rcr
xchg
mov
cmp
daa
mov
jnp
or
mov
inc
scas
cmc
pop
mov
dec
adc
jne
xor
je
xchg
dec
adc
mov
sub
pop
das
mov
outsl
pop
pusha
mov
push
call
dec
and
data16
add
data16
loop
ss
mov
xor
xor
or
mov
into
pop
jg
enter
icebp
xchg
push
test
xchg
fldl
rorl
cmp
sbb
or
jp
xchg
xchg
dec
push
xchg
jecxz
jae
cmp
mov
add
push
mov
mov
jmp
aas
dec
addr16
fwait
add
and
pop
mov
in
lods
jl
jns
add
add
inc
hlt
decl
pop
cmpsb
jecxz
mov
cmp
pop
or
int
lods
test
cmp
mov
sub
or
cmp
xchg
loopne
jmp
jne
rcll
imul
xor
pop
and
test
shl
mov
jae
sub
mov
or
stos
inc
shl
xor
jmp
sbb
mov
push
aas
ja
in
cli
jo
adc
xor
cmpsb
popa
rcll
push
pop
call
ret
inc
mov
push
cmp
push
jmp
xor
adc
test
and
lcall
repz
sti
push
xor
rorb
pop
jecxz
jo
shrl
xchg
inc
pop
test
mov
and
mov
scas
adc
ss
and
cltd
aas
inc
and
xchg
adc
stos
cmp
std
jmp
cmp
je
mov
push
xor
cmc
sub
insl
lock
mov
out
scas
pop
or
and
sbb
pop
gs
cltd
xor
cld
sub
in
loope
add
insb
push
xor
xorl
pop
and
push
xor
std
push
push
mov
cmp
push
lea
dec
jmp
xorb
lods
lods
icebp
push
lret
scas
pop
pop
sub
pop
enter
iret
xchg
add
fs
pop
xlat
div
jne
jge
scas
gs
outsl
shrl
adc
cmpsb
imul
sbb
in
mov
in
cwtl
sbb
lret
ljmp
gs
or
push
testb
pop
sbb
lea
in
ficoms
cmp
adc
loop
and
popa
lret
in
push
and
mov
cmpsl
or
push
addr16
mov
sbb
hlt
or
adc
sbb
mov
sbb
pop
popf
mov
lcall
lods
loope
mov
insl
mov
pop
and
jl
test
movsb
lds
add
pushf
fistpll
out
addl
jnp
jge
es
push
cmp
movsl
jno
push
mov
das
into
pop
repz
ss
cmpsl
pop
mov
mov
arpl
pop
jmp
lea
inc
cmpsl
mov
mov
mov
push
adc
outsb
jg
and
push
loopne
adc
pop
negb
add
cmp
dec
pop
loopne
jb
out
sub
outsl
movsb
adc
jo
lds
inc
mov
mov
jmp
push
int3
stc
ret
dec
xlat
inc
mov
shrb
fsubl
out
pop
cmp
sbb
sub
and
xchg
add
in
jmp
cmp
icebp
or
sub
mov
sbb
mov
push
xchg
dec
andl
test
aaa
pop
mov
and
movsl
inc
sub
mov
es
push
stos
push
mov
jmp
mov
xchg
add
mov
pop
repz
jae
pop
hlt
xchg
jmp
mov
mov
in
dec
test
xlat
inc
movsl
push
adc
inc
int
out
sbb
sub
fisubrs
cmpsl
addr16
push
ret
stos
notb
cmpb
mov
xchg
cmp
leave
and
mov
addr16
push
jmp
inc
dec
jmp
push
mov
mov
xchg
add
jae
aam
orl
mov
in
mov
inc
jae
dec
mov
mov
inc
in
jp
xchg
xor
jl
cmp
mov
mov
jbe
imul
and
add
psubsb
jo
pop
jne
xchg
addr16
lret
or
mov
pop
mov
push
inc
jp
and
pusha
cli
sub
mov
mov
jnp
imul
pusha
dec
mov
mov
popa
add
adc
xchg
adc
movsl
cltd
nop
jg
test
inc
movsb
dec
gs
stos
insl
cmp
repz
pop
xlat
push
sub
testb
xchg
mov
js
jnp
mov
push
adc
xor
out
pop
in
incl
jne
pusha
mov
inc
sbb
das
inc
shll
inc
lret
enter
lods
mov
leave
lret
mov
ja
push
cmp
icebp
mov
repz
ror
das
mov
jecxz
cwtl
sahf
jp
fsubl
add
cmpsb
imulb
arpl
mov
cltd
jmp
out
jmp
mov
sub
loop
push
pop
pop
inc
sub
pop
dec
adc
hlt
cli
push
jnp
xlat
ljmp
add
lea
mov
inc
sub
jbe
dec
mov
stc
push
test
push
pop
xchg
lods
testb
fildll
iret
in
xchg
sbbl
or
popa
jnp
rorb
push
pop
sbb
int
sbbb
or
icebp
mov
arpl
fcoms
fwait
aam
imul
lods
dec
jbe
jmp
ja
inc
cs
jmp
jge
test
insl
je
xor
std
jo
aad
lret
arpl
sbb
lds
in
push
insl
jg
or
adcb
leave
push
lea
add
mov
lret
xchg
lret
mov
lahf
fcomps
push
mov
aas
roll
imul
push
push
idiv
pop
aas
mov
pop
jmp
out
dec
mov
inc
xor
cwtl
pop
dec
cmp
out
sbb
in
mov
iret
repnz
and
ficoms
inc
movsl
int3
adc
inc
aaa
push
xor
fcomps
imul
sub
dec
subb
xorl
stos
enter
sarl
push
sbb
les
aas
popa
lock
nop
cmp
mov
xchg
sarl
adc
cld
lods
push
outsl
xchg
and
pop
cwtl
sub
imul
mov
hlt
or
xor
scas
mov
add
push
daa
imul
jmp
fistpll
bound
outsb
xchg
push
and
int3
xchg
loope
cld
idivl
shrl
insl
jo
cmp
mov
rcl
inc
out
inc
bnd
fwait
sub
out
les
jno
jne
xorb
aaa
push
dec
out
faddp
adc
out
push
xlat
xor
in
inc
add
addr16
mov
fmulp
addr16
loop
mov
test
sub
call
pusha
push
scas
sbb
js
push
or
sarl
add
mov
dec
repz
jecxz
ret
stos
loopne
xchg
out
incb
es
push
das
loope
push
or
sbb
rcll
mov
ss
mov
xor
xor
iret
rolb
lcall
mov
movsb
lret
xor
fcoms
bound
cmp
addr16
mov
pop
sub
out
mov
daa
aaa
imul
xchg
xchg
cmp
lock
sti
push
sbb
inc
and
gs
addr16
out
sbb
add
les
mov
or
push
push
hlt
mov
push
sbb
jp
imul
cmp
std
mov
xchg
mov
dec
xor
jae
jg
test
xchg
clc
mov
hlt
jp
in
movzwl
bound
ret
xchg
loopne
mov
rcll
lcall
mov
lret
jp
dec
stos
loopne
push
lods
imul
scas
in
ficomps
mov
movsb
push
xchg
jne
mov
imul
mov
jmp
add
xor
fstl
cli
fsubrl
mov
jmp
pushf
fs
shlb
dec
loop
push
push
push
xorl
iret
aad
mov
aas
out
jo
cltd
mov
pop
insb
les
jmp
icebp
cmc
dec
jmp
inc
jne
es
int
mov
imul
cmp
clc
test
aas
pop
mov
xor
test
movsb
aad
mov
rcl
aas
es
fcomps
pop
shrl
movsb
xchg
in
cmp
mov
push
insl
push
imul
sahf
cs
lea
pop
faddl
xchg
cmp
movsl
call
lds
movsl
out
dec
in
mov
mov
out
add
cwtl
jl
xchg
jl
mov
xor
adc
in
mov
test
les
dec
out
cmp
inc
es
ret
stc
clc
mov
iret
lret
imul
nop
aaa
sbb
inc
cs
jge
xor
add
cmp
sub
inc
push
jmp
pop
int3
adc
jecxz
mov
mov
enter
mov
adc
jmp
jmp
loop
pop
aaa
lock
or
mov
mov
aam
imul
pop
icebp
sbb
sbb
mov
jge
dec
lock
jb
add
int3
mov
xchg
popl
mov
and
push
dec
ret
gs
psrld
mov
xor
add
mov
pushf
dec
or
pusha
fcomp
scas
ljmp
inc
mov
cs
cli
cmp
mov
cltd
aad
cmpl
addr16
jno
lods
add
jno
sbb
inc
shl
jo
movsb
jge
pop
push
pop
dec
rcr
mov
rclb
mov
or
and
mov
subl
xor
or
xchg
lret
popa
ja
lret
rorb
fdivs
push
sahf
cs
sub
cmp
mov
pop
in
lcall
sub
test
push
repnz
jmp
pop
in
mov
subl
xor
pop
jo
pop
ret
sahf
aad
pusha
inc
leave
int
pop
dec
and
ss
cltd
rclb
dec
pushl
bound
jno
jecxz
adc
test
xchg
jp
xorl
les
arpl
sbb
mov
cwtl
sbb
fisubs
aad
fs
xor
jno
mov
push
add
out
add
aam
sbb
aam
inc
xor
pop
push
and
cli
cs
push
adc
ja
insl
push
cwtl
cmp
pop
push
pop
mov
mov
imulb
xchg
stos
jg
cmc
push
into
fcomp
out
sbb
and
xchg
sbb
inc
repz
jns
cmpsb
orb
mov
ret
fstpt
xor
jg
add
pop
ds
aaa
in
mov
jp
aam
jmp
xor
nop
dec
repz
loopne
out
sub
or
lcall
jmp
xor
leave
or
repnz
or
jno
lods
out
mull
add
sub
into
loope
loopne
aas
in
push
cltd
and
ret
lods
iret
shlb
xor
rolb
scas
mov
xchg
imull
xor
xchg
jecxz
jo
push
xchg
adc
pop
sbb
sbbb
and
sbb
cmp
outsl
cmc
andb
loopne
dec
loope
pushf
push
or
jae
arpl
pop
shrb
mov
js
push
jge
pop
push
imull
cmp
cmp
jge
mov
sahf
ja
inc
jge
push
sub
gs
jmp
or
jecxz
in
fldl
xor
lea
dec
jp
cmpsb
xchg
fisttpl
cmp
sub
in
addb
mov
stos
dec
mov
imul
shl
loop,pt
orb
mov
mov
xchg
hlt
inc
andb
push
jg
jle
call
enter
push
xchg
push
in
cmp
dec
dec
dec
cmp
mov
sbb
cltd
inc
gs
das
jmp
push
xchg
xchg
adc
dec
add
aas
mov
call
lret
push
in
loope
pop
mov
adc
jae
sub
and
cmp
pop
in
cmp
pop
imul
dec
or
mov
test
push
into
dec
rcr
lock
mul
pushfw
sbb
cli
and
jle
xchg
push
mov
loopne
pop
push
ja
jnp
xor
shrb
leave
in
sbb
ret
xor
inc
and
aaa
stc
pop
push
xor
add
dec
push
pop
shlb
shrb
or
cld
pop
mov
add
inc
insb
xchg
pop
mov
scas
neg
cmp
xor
sub
sbb
out
mov
xor
frstor
fs
addr16
and
movl
aam
xor
jbe
scas
ja
sbb
imulb
adc
hlt
stos
mov
rorl
hlt
cs
mov
xchg
shlb
outsl
cmp
jecxz
jae
jecxz
roll
popf
mov
lods
ret
imul
es
addr16
ret
xchg
adc
ljmp
inc
call
sbb
jge
mov
inc
xchg
mov
cmpl
jg
iret
and
shl
scas
or
dec
jno
arpl
mov
inc
flds
daa
lds
sarl
out
mov
popf
xchg
ds
es
test
pop
push
out
xchg
inc
cmp
in
xor
jo
xchg
push
cmpl
sbb
adc
roll
push
sub
sub
stos
fists
mov
or
ljmp
and
ret
stos
test
add
lcall
aam
mov
pop
pop
std
inc
xor
pop
or
cltd
push
lret
in
insl
mov
mov
lret
fwait
loop
pop
sub
and
cmp
ret
lods
addr16
ja
stc
mov
fwait
mov
pop
push
mov
cmp
push
mov
mov
dec
sbb
dec
push
and
cmp
xchg
lret
xchg
add
sarl
gs
imul
add
addr16
and
dec
add
imul
xchg
jecxz
sti
sbb
jecxz
push
mov
or
fidivrs
loop
cmp
jnp
in
xchg
ja
xchg
scas
sbb
cmp
sbb
mov
xor
jge
xor
push
test
rorl
jne
out
jne
fwait
and
loop
adc
popa
and
icebp
dec
lods
imul
nop
mov
jecxz
fsub
lock
aad
mov
pop
imull
xor
mov
adc
stc
mov
popf
push
adc
cs
pop
inc
and
into
dec
jecxz
jmp
mov
test
add
mov
mov
cmp
ret
pop
pop
shr
fistps
mov
xchg
jno
mov
mov
pop
sbb
jne
imul
rol
insl
xchg
mov
sub
mov
jle
fcompl
adc
pusha
pop
sahf
test
xchg
ret
pop
loopne
fists
sub
mov
shll
jp
popa
mov
push
mov
in
mov
cmpsb
mov
inc
push
push
loopne
push
and
out
packssdw
fimuls
fcomp
repz
arpl
fildl
add
inc
and
xchg
int3
sbb
aaa
jae
btr
clc
mov
repnz
and
push
inc
std
incl
xchg
lret
fldt
or
xchg
shr
loope
fstpt
shrl
aam
stc
scas
cmp
fisttpll
dec
jmp
add
xchg
inc
adc
push
add
mov
leave
pop
inc
inc
ljmp
and
cmpb
hlt
add
adc
ja
daa
js
add
add
inc
pop
call
scas
add
push
jmp
bound
ret
mov
fildll
insb
ror
mov
daa
je
pop
in
aam
push
xor
jge
mov
sahf
stc
lods
cmp
in
aas
cmp
insl
or
inc
in
data16
sub
clc
out
fnstsw
xchg
fistl
in
into
pop
es
mov
loope
testl
les
in
xchg
imul
jmp
adc
push
fstpl
scas
xchg
inc
pop
fistpl
jecxz
pop
push
xchg
cmp
or
sbb
jbe
lahf
jp
add
and
cs
jb
enter
xlat
inc
adc
or
sti
test
mov
jle
xchg
sbb
mov
sub
push
lcall
imul
pop
jl
pop
and
fsubrl
pop
imul
imul
jne
add
add
pushf
fsubrl
repz
add
sub
test
jno
adc
in
mov
outsl
or
std
rcrl
fildll
arpl
sahf
test
mov
sbb
dec
xor
sub
or
inc
fstpl
xchg
rorl
out
sub
in
out
fwait
dec
aas
dec
lock
and
push
ja
in
pop
into
mov
add
pop
jge
cmpsl
int
and
out
std
or
cmp
sbb
pop
decb
push
jno
mov
js
js
fldl
pop
jmp
or
ja
loop
pop
rorl
jmp
mov
xchg
stos
mov
in
sbb
daa
loopne
aam
sub
mov
daa
int
repz
jmp
lods
mov
push
jno
addr16
jmp
shll
outsl
pop
sub
cmp
fnstenv
adc
push
pushf
cltd
in
movsl
add
insb
dec
and
xchg
stc
stc
sarl
dec
fld
enter
out
daa
push
sub
jecxz
jge
inc
cmp
add
mov
mov
sahf
xchg
daa
std
scas
inc
mov
dec
add
cmovp
insl
mov
shrl
test
pop
daa
inc
pushf
push
insb
push
push
xchg
repnz
rorl
adcl
repz
push
std
sbb
dec
mov
sub
movsb
lea
aad
js
push
jmp
adc
inc
inc
test
push
or
mov
mov
push
mov
dec
mov
xadd
cmp
and
inc
dec
je
pop
xchg
jmp
push
in
mov
out
push
dec
adc
sarl
shr
mov
test
movaps
testl
iret
das
dec
in
pushf
stos
xlat
in
sub
addr16
xchg
or
cmp
xchg
pop
cmc
test
xor
repz
dec
push
push
sahf
scas
aam
jne
sbb
sbb
inc
sub
scas
or
movsl
clc
push
cmc
js
ja
jb
add
mov
sub
imul
sbb
pushf
gs
shr
call
jno
mov
in
loopne
loop
cmp
int3
pop
int3
mov
andb
fildll
mov
aam
or
cmp
pushf
inc
push
sbb
insl
inc
lret
iret
stos
mov
mov
mov
test
outsb
scas
cmp
mov
and
xor
test
inc
rcl
outsb
push
pusha
mov
jg
xchg
gs
xchg
aaa
adc
mov
cmp
movsl
lcall
std
and
and
in
push
fwait
xchg
in
jae
push
loope
imul
shll
imul
test
jbe
and
aas
xor
cwtl
and
stos
std
cmc
out
in
aaa
mov
mov
xor
idiv
xor
rorb
xchg
in
sysenter
and
in
test
xor
ja
mov
sbb
push
stc
nop
add
lea
add
cwtl
inc
aam
sahf
test
push
mov
cmp
and
jo
scas
mov
dec
mov
sub
mov
dec
adc
inc
mov
cmp
gs
jecxz
push
imul
mov
and
add
test
mov
fisubl
add
jnp
test
xchg
ret
lea
push
fldl
fisubrs
paddsw
cmp
lret
insl
mov
outsb
fistpll
sub
scas
lahf
lret
xor
push
adc
push
and
push
jp
insb
ret
xchg
xchg
cmpsb
ret
dec
lcall
pop
loopne
push
dec
jecxz
shl
andl
leave
sbb
cmp
mov
js
loop
test
shll
scas
sbb
push
push
test
lea
fidivs
rolb
mov
in
addr16
xor
daa
in
xchg
mov
cmp
xlat
test
jg
jp
test
daa
jne
pop
mov
inc
xor
pop
fwait
or
je
sub
jns
push
cmp
adc
out
add
pop
movsl
int
outsb
inc
loope
out
jl
pop
mov
xchg
mov
add
cmp
push
jo
ljmp
sub
movsb
adc
jno
nop
cmp
or
xchg
dec
xchg
out
inc
out
dec
sbb
leave
sub
cmp
push
aad
jmp
ret
aas
fists
xor
andb
dec
mov
sub
adc
out
fcompl
loope
dec
push
fistps
push
mov
fbstp
ja
ficoml
rorb
test
or
jg
aaa
pop
cmpsl
loope
lock
movsl
inc
add
test
scas
cmp
hlt
xchg
ud2
dec
adc
xchg
pop
and
imul
or
pop
ret
popf
repnz
popa
dec
xlat
xorb
sbb
adc
sub
and
pop
gs
lods
push
nop
cmp
loop
pop
adc
mov
sub
pusha
mov
dec
or
loope
xor
jecxz
mov
jb
xlat
jmp
arpl
xor
mov
movsl
std
inc
dec
fisttps
insl
outsl
fisubrl
and
aas
cmp
xlat
mov
out
dec
add
ficoml
cmp
push
ljmp
cmp
dec
scas
push
and
adc
inc
mov
loopne
sti
cmpsl
scas
xor
and
inc
inc
or
das
fisttpl
push
rorb
push
imull
out
repnz
std
cmp
outsb
repnz
xor
xor
out
iret
xorb
push
hlt
sub
mov
mov
pop
or
cltd
push
xchg
add
fwait
cltd
or
and
scas
and
cmp
shll
jne
leave
or
test
insb
ret
dec
mov
das
mov
imul
stc
dec
daa
sub
mov
jae
mov
inc
addr16
rol
dec
mov
add
pop
sbb
push
fst
inc
adcb
imul
push
cmp
push
and
mov
pop
inc
mov
jno,pt
jecxz
stos
ret
sub
sbbl
loop
fdivr
jnp
cmc
mov
push
mov
sbb
cltd
jns
xor
shr
mov
mov
xor
jmp
les
jmp
notb
add
xor
or
lahf
mov
in
dec
call
xchg
lods
push
pop
imul
adc
jbe
mov
rcll
ret
sbb
sbb
lahf
sub
mov
movsb
nop
addr16
mov
enter
lret
or
sbb
repnz
dec
xlat
sbb
lsl
sub
pop
or
jnp
mov
imul
in
jg
hlt
shrl
push
jecxz
adc
lret
hlt
jns
inc
inc
adc
jecxz
mov
cmp
lret
inc
push
inc
scas
or
aas
pop
jnp
cld
xlat
shll
daa
sbb
jb
pop
and
push
stc
push
std
das
das
inc
dec
mov
or
cli
out
bound
in
daa
rcr
aaa
lret
jg
cmp
and
pop
hlt
ja
lret
loope
cs
arpl
movsl
mov
lock
data16
divb
cmp
sub
xchg
ljmp
xchg
adc
lea
mov
ljmp
xor
movsb
adc
push
enter
and
push
jo
fwait
leave
sarl
fcmove
out
pop
jp
dec
icebp
mov
das
gs
cmp
xor
pop
loop
in
mov
aam
dec
fcom
popf
jae
inc
test
cs
inc
cmp
aas
add
push
insl
in
insl
and
fnstcw
push
out
hlt
test
fdivr
push
sub
dec
ja
stos
frstor
xchg
mov
shl
sti
stc
in
xchg
mov
hlt
xor
cmp
nop
pop
xor
fistl
out
in
mov
pop
insl
insl
roll
or
add
leave
xor
in
jg
adc
leave
sbb
fidivs
out
or
fldl
jne
xchg
clc
mov
lock
pop
cmpsl
repz
push
and
push
in
es
mov
cmpsl
popa
pop
add
adc
and
xlat
std
movsb
pushf
sbb
jno
sbb
inc
jns
xchg
arpl
das
ja
pop
subl
and
adc
out
adc
inc
imul
jne
dec
cmp
sbb
dec
jmp
adc
jmp
xor
scas
gs
sub
out
mov
call
xorl
jns
jno
test
xchg
sahf
jb
mov
inc
adc
push
xor
shl
fucom
xor
push
sub
std
jg
xchg
push
xchg
fwait
pop
daa
jne
sarl
mov
add
cmp
xor
jl
out
popf
sbb
out
inc
icebp
and
adc
mov
jae
cmpsl
mov
in
mov
lret
or
shrl
bound
ljmp
sub
fldl
sbb
xchg
shr
addr16
movsb
mov
mov
cmp
imul
jl
in
sbbl
jb
iret
inc
in
add
adc
insl
ds
lods
push
sub
mov
arpl
adc
or
hlt
inc
mov
ss
into
pop
cmpsl
mov
pop
rclb
mov
sub
xchg
push
adc
les
xchg
xchg
or
fmull
dec
lock
out
or
cmp
ret
mov
dec
and
or
push
or
repz
das
jnp
js
pop
mov
lods
js
mov
push
sbb
xor
in
dec
cs
shll
icebp
icebp
aas
dec
sbb
xchg
dec
es
mov
adc
arpl
adc
aam
inc
pop
dec
mov
jno
jmp
je
jg
std
les
filds
imull
inc
sbb
rcrb
mov
sub
scas
jmp
nop
movl
push
mov
out
lods
outsl
xchg
lods
or
ljmp
or
pop
addr16
add
lret
mov
push
pop
fisttpll
jno
notl
xor
mov
xor
clc
dec
push
outsb
xchg
and
bound
adc
dec
jo
loope
je
lods
xor
and
cmp
in
daa
xor
outsb
and
xor
inc
mov
sahf
cmp
sub
push
pop
sub
sti
xchg
add
xchg
fidivs
adc
and
mov
std
sub
cs
insb
dec
pop
dec
aaa
push
push
pop
lea
int3
mov
scas
add
dec
negb
dec
adc
lret
dec
xor
or
insl
movsl
or
sbb
mov
sbb
out
xchg
into
hlt
outsb
push
lret
pop
cltd
pusha
imul
adc
sub
inc
inc
stos
jns
push
xor
cmc
scas
xor
pop
into
mov
sar
fwait
sbb
sub
xor
push
adc
cmp
and
imul
and
mov
xchg
pop
fildl
pop
xchg
jp
cmp
jo
xchg
and
pushf
pusha
shl
mov
lods
out
inc
jno
mov
testb
sbb
add
cmp
ds
mov
or
adc
jno
push
std
lock
push
aas
adc
pop
jl
test
icebp
loope
out
in
xchg
pop
iret
das
outsl
sbb
push
mov
jnp
push
addr16
sbb
ds
push
loope
push
gs
pop
lret
insb
rcll
cmpsb
insl
mov
pop
cmpl
sbb
xor
jg
adc
test
pop
xchg
dec
mov
dec
and
inc
adc
push
stos
push
es
addb
stos
fimuls
mov
push
fsubrs
outsb
lret
ret
xchg
test
daa
out
mov
ja
and
mov
cmpl
nop
jbe
sub
adc
pop
ja
movsl
push
mov
and
mov
pop
and
inc
inc
mov
mul
loop
cmp
lahf
pop
mov
add
xor
lcall
xlat
loope
dec
sub
or
arpl
and
sub
cmp
loop
sbb
or
lahf
pop
xchg
jnp
cmp
adc
lahf
mov
cli
aaa
sub
add
std
sahf
stos
das
xor
daa
xor
scas
cmpsl
decb
iret
xor
enter
or
lods
mov
mov
sbb
mov
aaa
and
and
add
daa
add
add
jb
sbb
rolb
clc
ret
out
pusha
fsub
cltd
insb
ljmp
inc
shr
mov
fistl
stc
and
mov
jbe
mov
rcll
mov
sub
inc
and
push
xor
inc
mov
add
jbe
xor
or
dec
faddp
out
add
out
xor
jbe
sub
sub
push
mov
jne
jno
imul
cli
push
imull
cmpsb
mov
arpl
mov
pop
iret
arpl
sub
cmpsb
sarb
sub
mov
adc
out
call
pop
notl
adc
jmp
cmp
push
aas
lret
jecxz
jno
adc
jbe
inc
sub
outsb
loopne
push
sbb
cmp
sti
repz
out
pause
push
jg
push
jp
sub
jmp
push
sbb
xor
add
movsb
push
inc
pop
icebp
arpl
push
sti
cmp
xchg
pop
adc
mov
out
lret
xchg
add
cmpsl
sti
call
push
in
xor
pop
loop
adcb
sbbb
lea
push
fsts
out
add
mov
aas
cli
mov
push
aaa
stc
mov
sti
ficompl
jns
movsb
pop
xchg
inc
loope
adc
in
add
pushf
mov
jmp
popa
rol
or
gs
jnp
push
out
push
mov
aas
push
push
outsb
and
add
lods
mov
loop
jmp
add
cmp
bnd
mov
push
adc
ds
jmp
push
aas
sub
addr16
lret
sbb
aaa
in
dec
in
cmp
push
inc
mov
in
sahf
daa
dec
mov
test
sub
fwait
in
fdivs
sub
pop
push
fisubs
jle
addr16
pusha
sub
jle
fists
add
mov
lcall
stc
dec
test
inc
xchg
push
pop
push
shl
test
data16
adc
sbb
jns
jae
in
outsl
imul
shr
pop
outsb
jno
std
or
pusha
xchg
xchg
jmp
lock
push
loope
clc
mov
add
into
mov
adc
mov
xchg
adc
movsl
iret
jp
filds
loope
out
adc
in
adc
adc
adc
sub
aad
sub
dec
dec
outsl
test
dec
nop
cmpsl
in
test
or
fs
mov
int3
add
fnsave
std
repz
out
cmc
scas
push
cmp
cli
sub
or
daa
sub
lahf
imul
jge
loope
pop
xor
push
mov
sub
jg
inc
sahf
data16
imul
jmp
outsb
stos
fld
ja
mov
jmp
lods
push
fwait
int
cmp
jmp
aas
dec
sbb
pop
mov
and
jne
mov
adc
mov
lods
ret
outsb
test
out
aas
cmp
sub
push
pop
and
xchg
fistl
mov
shl
sti
adc
adc
xchg
adc
in
hlt
outsb
cltd
shl
scas
push
mov
sub
mov
cmp
and
xor
push
out
sti
add
or
jmp
rcll
add
pop
arpl
xchg
mov
movsl
inc
outsb
out
enter
cmp
ret
xor
in
pop
addr16
insb
cs
push
mov
sbb
fdivl
addr16
imul
cmpl
push
aaa
jl
cmc
out
in
fisubrs
mov
jmp
or
mov
popa
rorb
push
aaa
insl
dec
jp
mov
mov
and
loopne
push
ja
cs
push
sbbb
jle
outsl
inc
and
in
xor
push
adc
sti
add
cmpsl
inc
jle
xchg
imul
mulps
popf
divb
inc
push
dec
sbb
loopne
push
mov
arpl
and
add
aaa
ret
ds
cmp
jbe
hlt
bound
or
xchg
mov
xor
movsl
loop
test
loope
jnp
out
outsb
lret
xchg
fwait
push
inc
dec
mov
addr16
testl
mov
and
movsl
mov
mov
out
mov
mov
pop
inc
push
cmpsb
mov
cmp
popa
mov
imul
fdivrs
cmc
adc
pop
out
scas
and
xchg
in
pop
enter
jmp
ljmp
imul
addl
add
and
pushf
cmp
je
in
mov
ljmp
push
xor
mov
nop
dec
and
ret
lea
clc
cs
cmp
pop
adc
jg
xchg
add
pop
mov
mov
stos
and
xor
xor
and
vcmpps
mov
int3
jl
push
adcl
data16
jp
sarb
dec
mov
xor
add
cmp
cs
outsl
ret
or
and
mov
cmp
or
sub
cwtl
loope
jl
adc
xchg
mov
pop
stos
mov
icebp
or
push
inc
aam
test
cli
push
cld
mov
cltd
outsl
mov
sub
push
mov
addr16
aam
popf
in
mov
add
test
jns
xchg
rorb
popf
imul
pop
sbb
out
cli
jecxz
std
out
push
ljmp
push
lret
push
dec
mov
rorl
adc
mov
sbb
cltd
sbb
scas
lds
aad
sub
dec
imul
rep
cmc
je
sbb
arpl
jno
push
inc
ret
xor
push
dec
push
push
hlt
pop
adc
out
xchg
movsb
in
mov
and
hlt
popl
call
sub
ss
mov
out
outsl
test
inc
cs
mov
mov
out
jno
sbb
loop
hlt
pop
push
in
ret
movsb
dec
ret
xlat
sub
or
addr16
add
cmp
push
test
adc
xor
sub
fwait
les
rcrl
pop
ljmp
movsb
addr16
int
in
push
jnp
xlat
adc
fimuls
inc
pop
pop
push
rorb
push
push
adc
mov
mov
sbb
adc
loope
fwait
sub
enter
shlb
cwtl
je
jne
movsb
push
add
les
xchg
or
push
sub
jnp
add
or
rcll
cmpsb
icebp
push
daa
aam
pop
mov
mov
ja
out
xlat
mov
sbb
xchg
pushf
aas
and
imul
test
sub
adc
inc
jmp
loopne
and
cmp
imul
fwait
sarl
int3
dec
or
jno
push
repz
xchg
xchg
push
sbb
hlt
sbb
outsl
cwtl
xchg
in
adc
dec
jae
adc
enter
pop
loope
andb
ds
inc
or
data16
repnz
fstpl
dec
lret
jmp
stos
ffree
arpl
xchg
cmp
lock
cmc
push
decb
into
popf
add
enter
loop
cwtl
cmpsb
sbb
pop
in
and
mov
dec
pop
icebp
addr16
push
add
iret
loope
iret
and
ljmp
jge
jo
push
push
cld
mull
lret
ds
btr
arpl
imul
xchg
pop
cmpsb
mov
mov
jnp
iret
arpl
or
push
in
popa
and
imul
ljmp
lods
orl
jle
inc
test
outsl
loope
add
cltd
cltd
and
sbb
sub
xor
mov
push
out
fstpl
xchg
out
cltd
mov
cmp
cmpsl
add
dec
rcrl
and
mov
loop
push
enter
out
cld
imul
punpcklbw
xchg
cltd
icebp
inc
loopne
fisubrl
adc
pop
stos
outsl
cmpsl
gs
out
in
sub
cmp
ja
xchg
out
sub
push
lret
pushl
sbb
xchg
mov
adc
mov
cwtl
fnstcw
push
stos
xchg
std
jne
xchg
lret
arpl
lahf
sbb
add
jno
push
arpl
jmp
imul
inc
and
fidivrl
inc
popf
pop
inc
or
jbe
frstor
sbb
stos
stos
pop
push
addr16
xchg
mov
sbb
imulb
outsl
mov
or
out
mov
cs
das
xor
dec
ljmp
sbb
xchg
lret
insl
lds
cmp
insl
imul
mov
out
test
pop
mov
xchg
jns
jbe
xor
out
or
sub
cld
pop
popl
stos
add
fwait
push
sbb
mulb
call
fdivrl
daa
mov
imul
je
test
xchg
cltd
pop
outsl
jbe
test
dec
inc
scas
pop
adc
test
fbstp
jg
push
lds
outsl
dec
in
dec
call
xchg
movsl
imul
or
int3
pop
lahf
and
ret
push
and
bswap
add
fdivr
push
xchg
popf
inc
data16
and
inc
push
jecxz
mov
push
std
dec
xor
stos
into
jmp
cmp
inc
inc
cmp
cltd
pcmpeqd
sti
mov
sarb
sbb
add
daa
inc
loop
lods
push
fmul
sub
nop
inc
ret
popa
leave
pop
inc
stc
loopne
lret
xchg
inc
sbb
inc
inc
jl
dec
hlt
rcl
push
addr16
pop
jmp
fsubp
arpl
cmp
mov
xlat
and
fidivs
shll
jno
push
bound
jl
out
es
or
in
xor
mov
divl
into
insb
mov
lds
lods
shrl
stos
add
mov
in
jo
std
insb
fcom
fnstenv
cmp
scas
xchg
inc
lds
scas
xchg
cmpsb
mov
lahf
imul
dec
call
scas
daa
add
ret
in
sets
mov
mov
sub
push
mov
in
iret
out
jo
idivl
cli
insb
push
jp
and
test
stos
stos
mov
enter
cmpsb
pop
xor
or
xor
call
push
pushf
int
loop
push
in
stc
loope
sbb
inc
push
mov
xchg
cmp
gs
out
aaa
insb
dec
xchg
mov
push
xchg
js
and
stos
sub
mov
out
cs
pop
jns
mov
fistpl
divb
xor
pop
out
cld
inc
in
rorl
addr16
daa
popf
and
jmp
sub
xchg
jge
out
push
pushf
cmc
test
in
sbbl
repz
jae
lods
shrl
xchg
xchg
xrelease
add
jae
cs
sub
psadbw
pop
dec
in
call
xor
jno
std
loope
lea
xor
lods
pop
mov
inc
mov
sub
scas
fbstp
fdivrp
pop
rcrb
mov
adc
and
jne
repz
cmpb
lods
jp
cmpsb
sbbb
lcall
jno
and
mov
xchg
jmp
and
push
jo
jmp
sti
ja
sub
imul
jbe
or
cmpsb
xchg
cmpsb
jns
mov
and
xor
adc
int
dec
in
dec
pop
je
int
dec
mov
add
or
aaa
test
data16
repnz
adc
icebp
pop
cmp
sbbl
incb
jne
cmp
int
inc
andl
punpckldq
incl
pop
inc
inc
bound
push
mov
gs
cmp
sbb
aad
rcl
and
aam
nop
fimull
add
and
rcll
in
sahf
sub
fucomp
xchg
mov
decb
or
jnp
mov
arpl
out
mov
xor
outsb
or
sbb
and
lds
mov
xor
lcall
mov
icebp
scas
pop
jno
mov
xchg
out
adc
mov
cltd
add
jnp
mov
mov
pop
arpl
es
xchg
xchg
pusha
xchg
cmpsl
enter
push
stc
xchg
cwtl
cmpsl
cmp
push
jg
mov
cmp
cwtl
and
mov
stos
xor
jne
sub
sub
lcall
add
imul
xchg
gs
outsb
into
push
out
jmp
icebp
pop
je
or
jle
fsub
jb
sbb
inc
pop
cmp
cmp
pop
xor
cli
movsb
shll
adc
inc
shrl
es
std
sub
icebp
mov
push
xchg
ja
cs
mov
and
cwtl
pop
cld
ret
stos
push
inc
pop
dec
xchg
mov
outsb
sbb
testb
addr16
adc
fbstp
imul
push
push
push
loop
dec
sarb
add
sti
pop
or
fistps
dec
ret
dec
jno
mov
stos
imul
push
in
xchg
idivl
imul
xor
shlb
in
jmp
mov
mov
sbb
mov
movsl
mov
mov
out
and
mov
int
mov
movsb
or
jmp
mov
dec
loopne
popf
pop
push
and
jmp
xchg
fs
pop
out
and
repz
or
stos
pop
stos
fwait
cmp
sahf
lcall
xor
movsl
lret
fisttpll
ficoms
int3
es
popa
cmpsb
stos
nop
out
or
pusha
xorl
cmp
loop
mov
pop
cmp
push
movsl
xchg
out
imul
imul
inc
push
pop
jmp
cmp
sete
xlat
xlat
xor
addr16
icebp
xor
addr16
cmpsl
jns
sub
mov
adc
sarb
sbb
imul
ficompl
cld
xchg
xor
bound
daa
cmp
ret
jno
imul
sti
fisubs
lcallw
jbe
mov
xchg
mov
dec
and
xor
and
lret
adc
adc
mov
push
loop
movsb
ret
loopw
and
cmpsl
aas
rolb
cmp
and
into
mov
push
icebp
pop
push
cmp
out
ret
outsl
mov
sarb
push
repnz
xor
push
sti
pop
hlt
out
ret
mov
repz
lock
xchg
imul
push
lcall
jne
jge
push
je
cmc
push
and
loopne
addr16
cmp
insl
cltd
mov
adc
imul
jmp
mov
out
in
jo
icebp
sbb
fistl
sbb
xor
call
xor
inc
xchg
mov
mov
fsubrl
cwtl
inc
pop
pop
pop
sub
bound
inc
lahf
sbb
icebp
mov
imul
add
mov
aas
mov
shlb
xchg
aam
addr16
pop
cmp
dec
xorb
mov
inc
ret
adc
adc
fnstcw
push
sbbl
in
out
cmpsl
mov
imul
daa
xor
mov
jg
mov
popf
pop
addr16
jmp
jecxz
js
addr16
arpl
out
dec
cwtl
bound
xlat
xchg
fwait
or
mov
into
inc
imul
ror
mov
movq
add
imul
enter
lret
xor
add
dec
shlb
mov
in
outsb
ja
aas
sub
push
aam
sbb
xor
addr16
pop
sub
ja
xlat
ljmp
repz
ret
push
push
jecxz
mov
arpl
mov
mov
pop
jecxz
ret
fwait
xchg
mov
lock
out
aaa
shll
xor
aam
ja
fistpll
mov
jg
push
scas
lret
mov
adc
pop
sub
in
int
ret
cltd
in
xor
adc
pop
fildl
in
xor
mov
mov
shll
pop
call
mov
incl
std
enter
das
jg
sub
test
sbb
data16
aad
sbb
ret
daa
mov
adc
test
adc
jno
shl
pop
xchg
push
popa
mov
int
cmp
jns
dec
mov
arpl
cmp
xchg
jne
fwait
jno
iret
cld
in
jbe
or
lds
test
std
popa
arpl
add
fistpll
mov
ret
pop
pop
sar
mov
adc
clc
mov
fldln2
cmp
adc
scas
cmpsb
jge
inc
adc
inc
stos
lea
mov
pop
pop
sbb
shrb
icebp
push
test
mov
pop
inc
loopne
mov
inc
pushf
sub
jnp
lock
repnz
jmp
std
cmp
imul
mull
sub
jbe
cmpsl
dec
outsl
negb
fs
add
sub
test
jge
jns
add
dec
push
std
rcll
cli
mov
pop
fstpt
mov
xchg
gs
inc
das
nop
push
lret
sub
mov
out
test
xchg
pop
int3
and
jnp
sbb
pop
sub
rol
pop
loope
icebp
jns
shll
add
sub
pop
ret
and
and
cli
push
jmp
loope
fnstenv
sub
stos
loop
jno
and
int
lahf
add
subl
cmp
pop
cmp
idivb
xor
mov
jl
mov
mov
dec
xchg
push
xor
test
add
scas
sub
add
in
aaa
rcl
sub
sub
mov
jns
in
xchg
sub
daa
les
inc
out
dec
push
outsl
mov
lock
jmp
leave
shrl
andb
sbb
fsub
jg
es
in
adc
cmp
inc
xlat
fs
push
mov
xchg
cmp
fadds
mov
shll
push
push
sbb
das
idivl
cmp
fld1
jg
dec
jg
addr16
lret
popa
jne
cwtl
in
and
dec
test
jb
and
xor
outsb
xchg
pop
imul
add
in
inc
jmp
in
push
std
fst
inc
fsubrs
xchg
out
sbb
daa
inc
mov
lds
fnstenv
aas
sahf
and
imul
shll
cmp
in
test
out
leave
xor
insb
lcall
in
pusha
xchg
mov
mov
mov
bound
push
in
movb
mov
loope
xor
or
cmp
and
jns
dec
pop
xor
lahf
jle
push
andb
cmc
jmp
movsb
mov
outsb
movl
jbe,pn
and
inc
push
cs
sarl
push
ja
stos
xchg
push
push
into
add
inc
ja
imul
scas
lret
mov
mov
cld
outsb
insb
mov
loopne
push
les
mov
ret
push
push
jge
sbb
mov
xchg
cmp
jbe
arpl
aas
add
or
loope
and
jge
cld
xchg
xchg
and
xchg
shlb
cmp
pop
jge
push
dec
repz
pop
pop
sarl
jle
xchg
stc
xor
mov
adc
repz
sti
xchg
xchg
out
ret
rcr
out
jl
mov
jecxz
or
aaa
mov
fs
add
cmp
lea
pop
mov
loope
stc
mov
jl
pop
lods
xorl
xchg
push
sar
xchg
mov
jp
fmulp
or
xchg
pcmpgtw
jge
fldl2t
aas
xchg
fidivrs
mov
jo
stos
adc
cmp
andl
push
dec
inc
fs
inc
fucom
mov
lock
aam
stc
into
inc
xchg
out
push
mov
fs
movsb
inc
jno
cmc
mov
or
jns
pop
outsb
outsb
rol
sub
mov
or
pop
dec
jp
in
jg
out
adc
xor
leave
add
xor
and
jp
test
sub
or
sbb
test
movsl
mov
pusha
xor
mov
imul
ds
outsb
ret
mov
sub
lds
imul
lcall
daa
push
loop
decb
insb
jmp
std
inc
mov
call
mov
addr16
pop
mov
das
scas
ret
xchg
aaa
push
popf
cmp
test
cmp
test
outsl
pushf
xlat
imul
nop
addr16
jg
arpl
movsb
jmp
or
test
and
cwtl
mov
into
xor
cwtl
lret
mov
loope
push
ja
ret
dec
imul
pop
pushf
or
das
rcrl
adc
mov
enter
jb
pop
jmp
xchg
cltd
and
cmc
xlat
insl
add
out
imul
and
jbe
xchg
push
aad
stc
push
pop
test
pop
dec
pop
nop
add
or
lods
cs
fisubs
mov
dec
xchg
or
or
and
lock
mov
mov
mov
xor
mov
mov
adc
roll
jle
hlt
xchg
cmp
lock
xor
lds
and
in
inc
jne
imul
neg
pop
pop
or
lods
test
push
cmp
jmp
jne
and
nop
pushf
call
xor
jnp
cmp
sbb
mov
mov
mov
pop
cs
enter
jns
mov
add
lods
cmp
daa
pop
mov
or
push
mov
mov
sbb
or
test
out
push
mov
lock
cmp
inc
pusha
js
pop
ss
loop
mov
adc
shrb
fwait
mov
enter
cmp
pop
push
adc
inc
cmp
fimull
arpl
lea
sbb
mov
mov
dec
in
neg
fldl
mov
cmp
add
imul
push
rep
mov
enter
xchg
out
stc
fwait
sbb
pop
stos
aam
push
cmpsl
out
lock
mov
xchg
xlat
addl
bound
int
cltd
mov
fadds
int3
and
mov
adc
sbb
and
pop
les
adc
mov
sub
pop
cmp
stc
scas
inc
jmp
aas
pop
out
pop
cmc
lret
loopne
addl
shll
ret
push
push
cmp
call
xchg
inc
inc
lret
push
mov
cmp
adc
daa
repz
in
out
dec
into
andb
pushf
adc
sbb
into
xor
daa
fdivrs
cmpsl
sub
lds
mov
mov
arpl
add
pop
or
int
push
or
nop
and
idivl
push
repnz
pop
mov
dec
push
xor
stc
ficompl
and
and
lock
dec
mov
cmp
imul
and
rorb
mov
jae
inc
frstor
call
inc
push
repnz
fldcw
lds
add
bound
call
nop
pushf
imul
cmp
adc
and
add
push
cmp
imul
or
jg
in
repz
imul
push
movsb
xor
cmp
loopne
movl
push
movsl
popa
mov
cmp
lods
adc
insb
mov
cld
in
dec
dec
jmp
mov
and
insl
and
inc
pusha
inc
in
sbb
mull
lcall
jge
cmp
sbb
sub
je
lahf
xchg
call
in
mov
mov
cmp
sbb
xchg
sbb
xor
push
jp
in
add
cli
out
jne
mov
fcompl
xchg
mov
lret
cmp
jb
lock
inc
inc
push
pop
ret
mov
lcall
jbe
adc
inc
and
push
dec
sbb
jns
in
pop
ja
pop
cltd
sub
and
pop
sub
and
adc
or
pop
add
push
std
sarb
push
or
sub
adc
sbb
jne
mov
xlat
clc
and
out
inc
push
sub
push
jns
push
mov
cmp
mov
cmp
std
loop
mov
push
adc
pop
mov
paddw
mov
scas
int3
js
jno
clc
push
push
cmp
mov
fcoml
mov
and
xchg
xor
mov
std
mov
fiaddl
inc
inc
cli
mov
mov
jno
pop
jb
add
imul
xor
in
insb
std
test
out
lahf
xor
loop
sbb
out
out
jo
test
pop
cld
xor
pop
ljmp
pop
inc
outsl
or
add
mov
shl
mov
sbb
loop
divb
stc
cld
adc
out
loopne
cmp
insl
insb
andl
jmp
jg
pop
out
ss
xor
lods
xchg
dec
pushf
adcl
pusha
in
fdivrl
jnp
orl
cmp
jns
sahf
xchg
ret
adc
rcr
das
test
fwait
cmp
pusha
jg
or
insl
or
adc
xchg
insb
daa
jle
aam
push
and
inc
addr16
leave
nopl
int3
and
jnp
push
inc
rcll
jnp
adc
mov
xor
daa
std
adc
add
push
shl
test
inc
gs
pop
loop
std
clc
ffreep
pop
mov
mov
repz
roll
test
push
jne
pusha
xchg
cmpsb
push
xchg
inc
xchg
shrb
mov
repnz
hlt
add
mov
sub
mov
pop
push
sub
sbb
inc
sub
push
sti
mov
enter
dec
xor
stc
sti
ss
lods
negl
icebp
mov
out
jae
cmp
pop
cmp
xchg
cli
xor
adc
push
ret
jmp
xchg
jne
test
or
jl
aas
loop
push
push
xchg
fcompl
mov
push
mov
lcall
stc
sarl
andb
mov
nop
or
mov
fdivrs
and
or
out
cmp
mov
mov
mov
addl
cmp
jle
scas
gs
ret
stos
imul
add
inc
shlb
gs
pusha
sbbl
fildll
std
imul
ja
das
cmp
stc
mov
mov
sahf
pusha
mov
adc
or
and
in
cmp
mov
or
call
pop
sub
lock
out
jl
and
adc
pushf
pop
mov
dec
adc
push
sub
fsubl
jg
pop
insb
imul
mov
mov
testb
push
push
jg
imul
insb
xchg
std
adc
push
and
sbb
jge
pop
and
lods
push
aam
dec
call
addr16
cmp
and
rcrb
cwtl
add
xchg
das
test
subb
mov
div
cltd
push
pop
xchg
pop
push
xchg
dec
popa
adc
aam
and
xchg
sub
xor
bswap
cli
ffreep
aad
fadds
cmp
das
ljmp
sbb
jecxz
loopne
sar
js
jmp
jno
sahf
cwtl
mov
push
and
scas
sbb
js
imul
or
jecxz
push
mov
jbe
inc
popl
repz
movsl
imul
and
sub
cmpsl
sbb
ja
xchg
sti
lret
pop
xlat
jp
and
mov
divl
cmpb
and
test
dec
jg
call
sub
push
mov
xchg
push
jne
arpl
push
filds
inc
sub
adcl
inc
mov
jnp
add
iret
cmp
pop
inc
jae
inc
cwtl
jle
and
incb
jne
out
and
sahf
hlt
and
out
das
push
test
lock
sbb
out
add
push
dec
push
inc
mov
fwait
jge
add
and
pop
in
xchg
jge
push
fs
stos
mov
test
add
sbb
jle
arpl
cli
clc
lmsw
sub
iret
xchg
jle
sbb
pop
adc
fisttpll
gs
lret
push
ret
add
repnz
inc
ss
test
and
call
cmc
sub
fbstp
sbb
cwtl
add
rcll
inc
test
cmp
mov
xchg
data16
sub
jne
pushf
xchg
mov
loop
mov
rclb
outsb
jge
jmp
movsb
lods
out
jge
xchg
jmp
push
mov
iret
ret
adc
push
adc
mov
xchg
or
arpl
sub
stos
insl
fldt
push
cs
inc
repz
test
out
xchg
adc
push
insl
or
lret
test
inc
and
test
rcr
subb
dec
imul
shl
negb
sti
in
mov
in
lock
xchg
sti
mov
mov
xor
dec
iret
mov
push
push
push
fstl
aas
je
adc
push
xlat
pop
sti
mov
mov
mov
push
jbe
jne
stc
shrl
lock
inc
pop
mov
mov
dec
daa
addr16
fsubr
loopne
pop
repnz
push
push
shll
insb
add
pop
mov
popa
pop
gs
push
dec
mov
xor
int
push
cmp
mov
in
dec
mov
stos
jmp
dec
xchg
or
rol
gs
icebp
cmpsl
mov
sub
jae
bound
loopne
dec
out
inc
sub
cmc
pop
test
call
pop
inc
xor
lods
add
sarb
xchg
sahf
cmpsl
xchg
repz
pop
inc
out
lods
push
and
jg
xchg
xchg
dec
mov
push
lds
aam
mov
pop
popf
mov
ja
jle
pop
out
push
add
push
mov
jno
push
mov
xchg
push
xor
pop
cmp
push
addr16
pop
push
mov
imul
fucomp
inc
jno
js
or
jmp
fs
xchg
xor
popf
and
imul
cmp
xchg
cmp
repz
gs
imul
in
dec
std
mov
adc
stos
out
xor
pop
gs
leave
xor
imull
sub
and
mov
push
out
fucomi
fnstenv
ret
in
dec
cmp
cwtl
repz
cli
test
mov
loope
lock
cmpsb
imul
popf
add
bound
clc
pusha
popa
stos
push
scas
fsubl
loope
sti
rorl
sub
out
int3
pushf
in
xchg
ja
sbb
pop
pusha
cmp
stos
insl
cli
dec
xchg
gs
scas
lods
out
outsw
mov
mov
sbb
add
mov
xchg
sbb
fwait
sbb
dec
repnz
es
mov
and
popa
xorb
adc
jle
sub
sbb
test
das
pop
loope
das
add
sbb
cltd
insb
cmp
pop
cltd
mov
in
adc
jb
aad
test
fbld
or
add
test
orl
sub
pop
hlt
outsb
xor
es
fnsave
out
mov
mov
and
cwtl
mov
sbb
dec
iret
dec
gs
adc
push
push
lods
repnz
mov
popf
or
inc
dec
dec
push
adc
test
inc
and
ret
or
push
add
pop
and
rcll
sbb
mov
xorb
loopne
mov
inc
lds
mov
fidivl
scas
out
sbb
push
mov
jb
pop
jne
xchg
xchg
push
fdivp
ret
ja
cmp
jne
mulb
adc
inc
gs
loope
adc
sarl
mov
adc
cmpsl
jecxz
cmp
stc
scas
mov
out
ja
inc
xor
dec
out
and
test
test
pop
jl
std
out
je
sti
xor
in
fidivl
ss
jecxz
pop
jnp
fildl
adc
push
cld
stos
movsl
jae
je
dec
repz
scas
loope
or
mov
pop
mov
push
or
xchg
push
repnz
adc
or
xchg
adc
std
adc
std
or
out
push
xor
aas
out
daa
std
stos
addr16
mov
sbb
iret
daa
cmp
dec
movsl
cmpsb
inc
rcrl
nop
mov
fcoml
je
arpl
popa
sbb
jp
int
inc
or
inc
lea
lods
insl
popf
ret
jno
fdivrs
in
mov
sbb
insb
jl
adc
std
test
cmpb
mov
ds
mov
sbb
pop
pop
mov
jne
out
push
push
xor
cmpsl
sub
jle
adc
insb
test
pop
cmp
jbe
bound
mov
fwait
pushf
push
mov
stc
fdivl
add
das
inc
lods
imul
movsl
pop
das
dec
inc
dec
inc
stc
fcomps
sbb
sbb
push
addb
adc
jne
and
push
insl
mov
addl
sarl
aad
dec
iret
mov
lahf
jo
cmp
mov
shll
dec
jno
inc
push
sbb
jg
and
lea
imul
lret
jg
sarb
fnstsw
movsb
mov
xchg
lcall
orl
mov
inc
push
scas
sub
ljmp
fwait
in
insl
add
mov
out
push
loop
xor
sti
xchg
sbb
addr16
xor
outsl
ss
sub
mov
lea
cmp
int
test
insl
dec
addr16
cmp
arpl
pop
inc
insl
mov
xchg
push
jmp
adc
xor
in
loopne
add
mov
push
movsl
or
leave
out
aas
lds
addr16
test
sub
and
cmp
cmp
fsts
jb
andb
mov
xlat
nop
imul
sbb
dec
mov
scas
cmp
fwait
dec
outsl
jg
ret
and
cmc
or
mov
push
shll
inc
clc
push
jge
fistpll
add
ror
jle
push
shlb
mov
movsb
and
sbb
and
imul
lret
sub
imul
cs
and
cli
stos
push
cli
fidivl
rclb
xchg
ficoms
aaa
mov
setae
mov
mov
push
xor
sbb
call
cld
imul
in
orl
jns
cmp
cmp
out
sahf
int3
shll
cmp
stos
cs
sub
and
push
jp
arpl
cmp
push
out
adc
out
mov
xor
cmp
loop
imul
fistps
push
jmp
xor
int
mov
mov
add
push
dec
ljmp
mov
in
dec
xor
pop
mov
or
xchg
jnp
xor
leave
pop
inc
rcll
push
jno
sbb
push
les
xchg
insl
sbb
ss
pop
pop
cmp
xchg
icebp
mov
pop
test
arpl
test
fists
outsb
dec
sbb
ds
loopne
movsb
in
cmp
xor
mov
pushf
mov
cmpsb
cmp
popf
jno
loopne
mov
adc
xor
subb
testl
test
or
int
xor
or
jmp
push
mov
cmpsl
pop
mov
insb
cmpb
push
or
jo
je
inc
mov
push
ds
cmp
stos
sub
lret
in
xchg
jecxz
imul
cs
scas
fdivl
incb
aam
movsl
icebp
out
mov
cmp
pop
leave
pop
lret
dec
jge
daa
mov
pop
cmp
push
sbb
mov
xchg
pop
dec
shr
xchg
add
xchg
dec
scas
or
divl
adc
push
rcl
popa
lock
daa
xor
pop
fwait
inc
push
icebp
or
aas
shll
jmp
jp
add
mov
cmp
pop
sahf
cmp
cmp
jmp
lret
mov
int3
test
or
rol
out
nop
pop
jne
arpl
mov
shrl
popf
leave
sbb
lret
in
shl
xchg
addr16
or
jmp
cmp
movsb
dec
stos
aas
cmc
mov
jp
daa
jp
iret
pushl
hlt
jo
dec
in
push
jl
push
mov
imul
push
out
stos
mov
add
out
jmp
xchg
cmpsl
or
ret
cltd
ja
inc
sub
pop
in
jns
aam
sbb
fsubrl
sub
outsb
shr
loopne
jge
xor
mov
xchg
jno
xor
scas
jnp
mov
mov
mov
icebp
xchg
mov
pop
jge
mov
add
add
or
and
pusha
and
enter
push
ss
gs
sti
lods
es
inc
inc
cmc
cltd
dec
sbb
out
push
cmp
sahf
add
inc
shl
jno
outsb
popa
les
jecxz
rcll
testl
xchg
insb
cli
adc
sti
fdivrs
shll
jmp
pop
into
pusha
sbb
movsb
cmp
imul
push
add
cmp
xor
jmp
popf
xchg
add
in
sbb
sub
push
push
vpshufhw
std
xchg
mov
bound
shlb
cs
inc
push
cmp
aas
mov
fmuls
and
ss
ss
lods
lods
out
dec
dec
insb
fcoml
js
fnstsw
sub
loope
pop
push
xchg
jns
xor
lods
jmp
lahf
jmp
inc
add
sub
jns
sti
lods
pop
cmpsb
and
in
xchg
jnp
inc
sub
mov
sbb
mov
and
adcl
jg
out
rorl
dec
push
pop
ss
add
and
inc
xor
dec
cltd
cmp
lcall
cmp
lock
xlat
pop
mov
rorl
imul
je
lods
xor
ret
notl
daa
dec
or
adc
out
adc
and
pop
fnsave
xlat
xchg
mov
mov
push
and
push
mov
cmpsl
les
hlt
enter
xlat
ror
jmp
sub
imul
lea
xchg
jne
fpatan
mov
loop
sub
leave
aad
xor
mov
scas
jge
cmp
or
xchg
push
sub
ljmp
imul
jnp
scas
loop
mov
lcall
mov
sahf
cmp
jmp
iret
cwtl
jl
sbb
mov
sbb
xchg
xchg
jmp
pushl
adc
mov
push
xchg
out
cmp
fst
sbb
cmp
in
and
fldl
in
jl
lods
cmp
mov
loope
pop
icebp
push
pop
push
icebp
adc
inc
mov
ret
insb
test
pop
mov
das
cli
leave
aaa
aaa
cmc
sbb
jmp
mov
jecxz
pop
ret
repz
aas
stos
dec
pop
cmp
mov
ja
ret
mov
lock
stos
pop
mov
sbb
mov
cmp
aas
lret
mov
ja
push
ds
pop
loop
es
xchg
sub
inc
insl
or
mov
xchg
jno
sbb
bound
pop
loope
xchg
movsb
dec
scas
mov
iret
jle
sbb
mov
pop
aad
cmp
call
std
mov
ja
mov
je
push
nop
or
mov
icebp
mov
push
dec
mov
lods
sti
cmp
xchg
jns
mov
push
jge
hlt
inc
push
enter
iret
sbb
jg
cmp
push
cmpsl
mov
push
ljmp
ja
movsb
pop
adc
push
rorb
loopne
xor
icebp
cmp
sbb
pop
popf
and
aaa
push
push
sbb
aas
cmc
push
iret
jnp
xchg
add
dec
popf
and
ret
sub
inc
pop
es
in
mov
iret
call
pushaw
or
jp
dec
subb
sbb
js
scas
jmp
cmp
sti
dec
inc
ficoml
fs
shrl
inc
test
ja
mov
in
mov
cli
insb
fstl
xchg
icebp
lock
scas
adc
jge
adc
stc
xchg
inc
mov
ss
sar
mov
dec
push
push
std
es
or
imul
add
aam
int3
xchg
sahf
jg
aad
add
jp
test
sbb
jb
xchg
dec
clc
shll
loopne
jno
sub
sub
inc
out
ret
or
pop
pushl
dec
xlat
data16
aas
xchg
jmp
das
pop
imul
add
mov
enter
xchg
in
push
mov
mov
movsb
out
or
movsl
push
loope
pop
xorl
aaa
jns
jecxz
sbb
inc
push
pop
adc
cs
push
cltd
sub
mov
mov
in
test
stc
ljmp
icebp
les
test
fistps
mov
aam
pop
fwait
sti
pushf
in
cmp
jbe
sbb
sub
pop
adc
test
adc
aad
std
and
mov
aaa
outsl
hlt
sti
cmpb
push
cld
push
dec
and
or
sar
das
in
sbb
out
insb
xor
mov
loopne
adcb
aaa
test
sub
cmp
lods
xchg
shl
add
fwait
cmp
mov
pop
push
sbb
test
out
test
adc
test
sbb
test
sub
sub
popf
insl
pop
cmp
xor
and
add
aas
xorb
inc
ret
xor
imul
lds
fsubrs
jne
or
push
fwait
mov
call
add
cmpsb
movsl
loope
push
jecxz
xchg
sbb
scas
push
cmp
mov
jg
push
adc
out
mov
mov
rorl
das
mov
jnp
dec
push
push
icebp
sub
xlat
push
loopne
mov
mov
lcall
int3
aam
sbb
pop
jg
adc
fidivs
cmpsb
daa
mov
ret
mov
icebp
scas
adc
imul
push
loope
sub
dec
push
cmp
pop
sahf
pop
cmp
xchg
repnz
xor
loope
stc
ror
cld
xchg
push
jp
cmp
int
pusha
sub
mov
mov
sbb
sbb
popf
inc
movsb
pop
int3
dec
adc
in
dec
in
or
stos
scas
sub
push
dec
push
rolb
pop
negl
jo
push
cmc
adc
adc
jae
pop
lods
fwait
sbb
xor
xor
mov
pop
pop
rcr
arpl
mov
lods
mov
aad
fists
mov
test
ds
adc
addb
pminsw
inc
test
xlat
add
xchg
pop
add
aam
xor
pop
pop
pop
ret
scas
xor
ja
inc
and
or
xchg
mov
or
sub
xchg
sti
mov
cmp
imul
insb
sbb
aad
lea
jb
nop
xchg
jmp
bndstx
push
mov
xchg
int3
hlt
mov
dec
aaa
mov
xor
jne
xor
or
shlb
leave
incb
or
ja
add
call
movsb
sub
xor
les
and
ret
rorl
outsl
or
insb
cmp
bound
icebp
add
cmc
sub
lret
mov
push
lock
hlt
mov
push
and
leave
push
fwait
out
ffreep
xor
push
adc
addr16
rcll
mov
cmpb
pop
and
xor
cmpsb
mov
addr16
or
dec
ja
mov
xor
add
test
es
mov
ja
add
and
call
xor
pop
ljmp
dec
push
in
cwtl
stos
lods
push
adc
jo
dec
decb
iret
daa
push
mov
or
cmp
add
mov
movsb
sarl
or
in
dec
lods
pop
bnd
in
pop
jns
cld
stc
call
inc
sub
jne
shrb
ja
jge
lds
jae
lahf
sar
stc
dec
sub
jb
sbb
or
mov
ja
sub
aam
ds
and
arpl
int3
jae
push
xor
fs
jno
lock
cmpsl
mov
inc
mov
pop
testb
ja
xor
pop
ret
aaa
xor
negl
cmp
ret
aam
or
mov
cmpsw
sub
push
pop
add
sub
cld
jmp
orb
mov
dec
fs
sub
ficomps
and
sbb
push
and
shl
push
nop
mov
jg
push
push
mov
jne
ljmp
in
sbb
jae
in
xor
pop
sub
sbb
in
add
jbe
jae
loopne
lods
push
lds
fldenv
adc
pop
int
cltd
mov
sbb
xlat
int3
lods
add
mov
push
inc
int
adc
ret
and
jae
std
je
or
fisubl
lahf
xor
data16
xor
icebp
jno
aaa
xor
fdivl
mov
aad
dec
fstpt
outsl
or
lds
fistpl
pop
aaa
insb
fs
pusha
push
aad
mov
stos
adc
sub
jge
shlb
cmp
or
in
jb
pushw
xor
js
int
cmpsb
insl
pop
mov
sbb
pusha
out
shrb
std
jnp
jg
pop
or
roll
repz
cmp
xor
xchg
stos
js
bnd
ljmp
mov
mov
dec
push
not
int
into
and
cmp
mov
and
cwtl
push
push
inc
ljmp
mov
stos
add
repz
mov
sub
subb
mov
movsb
inc
lods
xchg
imul
and
dec
push
cwtl
push
mov
aas
test
xor
pop
mov
cmp
outsl
popf
mov
sub
adc
cld
fimuls
and
inc
adc
in
jo
mov
test
sarb
adc
sub
mov
mov
outsb
xchg
mov
outsl
mov
mov
sbb
push
push
pop
lods
cmp
add
mov
mov
test
xchg
lahf
js
or
cwtl
stos
lods
mov
pusha
sbb
fwait
jae
dec
ja
and
pop
adc
or
dec
lods
pop
call
mov
push
hlt
cwtl
mov
aad
and
js
fcompl
xchg
stc
insb
sarl
daa
dec
in
push
scas
stc
mov
mov
in
push
sub
jbe
je
pop
cwtl
adc
xchg
fwait
test
repz
dec
mov
push
fdivs
push
aad
scas
into
lcall
cltd
iret
rcrb
out
push
xor
out
pusha
out
shll
movsb
mov
jo
push
frstor
bound
cmp
lret
lock
bound
fwait
mov
sbb
sbb
add
lret
push
push
pop
cmp
lcall
push
and
pop
pop
inc
test
pop
shr
int3
dec
push
fisttpl
sarl
xor
xor
outsb
ljmp
push
and
jno
xlat
mov
xor
pop
addr16
in
je
inc
dec
imul
xor
pusha
sarb
stc
repnz
pop
mov
ja
push
loope
xor
push
int
rcr
jo
pop
mov
sarb
inc
dec
sti
mov
cmp
outsb
and
jne
or
or
daa
push
cwtl
imul
sbb
int3
nop
test
cmp
adc
ljmp
pop
jno
cmp
and
or
sahf
sub
cmpsb
fbld
or
syscall
sub
jne
pusha
pop
dec
lods
fwait
pushf
sbb
xchg
aam
aas
jns
imul
nop
mov
push
dec
addr16
movsl
popf
xor
imul
cmpsl
out
loopne
xor
ljmp
jae
lods
pop
push
pushf
xchg
mov
cmpsl
dec
jg
sub
inc
test
hlt
mov
imul
imul
jb
push
mov
cmp
sarl
jl
into
cmp
movsb
jne
fiadds
outsb
xchg
pop
mov
insl
daa
jg
sbb
pop
dec
mov
inc
xorl
sub
add
dec
xorl
jnp
call
nop
and
or
dec
shlb
push
sbb
sub
push
sbb
subl
stos
xlat
dec
nop
push
lea
and
repnz
mov
lods
mov
jmp
outsb
push
movsl
shlb
hlt
jno
push
arpl
popf
add
mov
ret
jb
cltd
sbb
nop
dec
cwtl
mov
and
jge
dec
push
lcall
mov
mov
aam
aas
mov
jnp
adc
push
push
inc
mov
xchg
fwait
inc
dec
ret
mov
push
xchg
sub
flds
popa
push
sub
cmp
mov
adc
mov
scas
mov
xor
icebp
stc
scas
popf
xchg
dec
mov
dec
pop
clc
pusha
sbbb
xlat
mov
cmc
xchg
mov
pop
fs
xchg
pop
icebp
hlt
fstl
mov
cmpsb
xchg
aas
add
sub
xchg
cs
lahf
cwtl
divps
xor
sub
es
call
xor
iretw
push
jg
dec
fldt
and
in
pop
bound
or
push
mov
aam
outsb
cmp
pop
or
cwtl
sar
cmp
xchg
popl
mov
jecxz
xchg
dec
push
aas
or
add
push
push
enter
sbb
jmp
pop
mov
sub
mov
xor
iret
xor
in
loopne
mov
shl
cmp
gs
shll
xchg
out
ret
xor
mov
push
xchg
sub
mov
adc
xlat
daa
or
sbb
bound
test
push
jne
sbb
push
leave
push
push
testb
jne
jge
stos
fisubs
insl
cmp
add
mov
push
stc
out
movsb
push
inc
pusha
cmp
ret
out
cmp
or
and
dec
inc
stos
adc
pop
and
repz
sbb
push
push
ret
push
cmc
cmpsb
inc
mull
ja
out
cmp
mov
addr16
rcrb
pop
adc
and
jge
dec
test
push
adc
test
xchg
addr16
add
fnstenv
aas
out
jb
xchg
test
es
adc
mov
push
add
add
dec
outsb
cmp
mov
push
inc
pop
bound
mov
sbbl
pop
imul
sahf
pusha
sub
icebp
popa
sarl
mov
hlt
dec
repnz
pusha
in
push
pop
stc
test
mov
ljmp
adc
int
dec
in
clc
ds
sub
rcll
or
dec
xor
jl
push
pop
ret
cmc
mov
inc
sbbb
xchg
leave
ss
ds
cmp
jecxz
fisttpl
les
pop
in
mov
push
sbb
sbb
fucomip
pop
jae
and
or
es
mov
inc
stos
gs
sahf
xchg
push
loopne
lret
fadd
mov
push
sar
test
lock
push
push
fsts
popf
and
roll
loopne
dec
out
mov
sbb
cmp
test
movsl
lds
cmp
jecxz
adc
cmp
aaa
push
mov
das
mov
pop
out
out
subl
cmp
push
cmp
sbb
cmp
mov
and
mov
mov
scas
add
mov
push
dec
call
daa
add
sbb
mov
ljmp
iret
inc
pop
and
lds
outsb
xchg
push
mov
movsb
out
jl
pop
cli
loop
xchg
call
push
xchg
arpl
in
mov
ss
loop
cmp
and
cmp
cmp
mov
data16
push
movsl
movsb
push
xchg
lods
imull
lock
jg
cmp
repnz
inc
lods
mulb
ja
xchg
stc
movsl
dec
idiv
sub
cmp
mov
mov
jb
pop
adc
pop
adc
ds
cli
leave
ss
xchg
aad
cmp
hlt
xor
or
shl
dec
add
xor
les
push
fcoms
jp
test
xchg
pop
mov
in
popf
daa
lea
fldt
sub
imul
shl
std
mov
xchg
adc
scas
add
and
sti
cmp
call
addr16
adc
shlb
jns
push
sub
xlat
jl
xchg
dec
fisttps
lea
sbb
lret
jecxz
push
pop
arpl
mov
or
dec
push
pop
add
lea
mov
xor
sub
int
inc
inc
mov
into
cld
scas
popf
cmpsl
mov
arpl
xor
or
add
int3
xor
rcrb
mov
fs
icebp
mov
xor
jmp
lahf
movsb
sbb
in
notb
in
add
imul
push
fstpt
pushf
mov
add
cmp
in
sbb
jns
daa
or
xchg
repz
mov
jecxz
adc
dec
mov
mov
inc
in
push
push
xor
dec
and
rcll
push
or
add
mov
sub
cmp
inc
sbbb
mov
std
pop
push
mov
jno
jmp
mov
xor
insb
in
arpl
mov
sbb
jnp
xor
inc
dec
cmp
daa
push
inc
fwait
fwait
mov
xor
stc
int
aas
mov
or
cli
jmp
pop
jge
pavgw
aaa
jnp
and
jns
fcompl
test
scas
cmp
sahf
jnp
pusha
xchg
push
and
stc
pop
push
inc
loop
or
cmpsl
push
icebp
mov
mov
mov
inc
pop
js
sbb
dec
in
nop
test
addr16
push
in
mov
aas
or
bound
loope
and
jns
xchg
sub
pop
lds
mov
subl
jne
out
popf
sbb
jg
cwtl
cmp
xor
stc
movsl
and
mov
cmp
lret
mov
dec
test
ja
cmp
in
daa
pusha
mov
gs
xlat
jne
out
inc
sub
jno
lcall
scas
and
jns
jno
sub
fsubs
and
test
xor
iret
inc
aas
push
adc
pop
leave
cltd
in
int
aaa
cmp
mov
adc
loop
xchg
jmp
in
mov
add
and
hlt
adc
pop
xor
jl
clc
loope
mov
inc
fsub
xchg
out
adc
loop
jecxz
mov
jmp
xor
lods
stos
dec
cmpsl
movsl
mul
sti
jmp
or
data16
cwtl
xchg
std
cmp
lcall
mov
fldenv
lods
jbe
mov
mov
lret
fistpll
fiaddl
gs
sub
testl
cmp
inc
movsl
daa
adc
rep
ja
jmp
stos
and
fsubrs
mov
rorl
jns
in
cmpsl
mov
xchg
pop
outsb
dec
test
cwtl
rolb
sbb
dec
xchg
outsb
ljmp
rcrl
pop
push
mov
je
ffreep
cld
insb
clc
or
adc
loope
mov
or
add
mov
xor
jmp
loopne
mov
hlt
jp
xor
push
jo
sbb
jge
push
add
push
inc
or
pop
xchg
jp
lret
lods
dec
xlat
idivl
dec
jge
movsb
sti
xor
mov
push
push
mov
pop
inc
mov
pop
imul
leave
aaa
sbb
cmp
mov
push
sbb
lock
xor
mov
in
les
fsubrs
out
jne
enter
sti
aam
cmp
inc
add
jb
or
xor
pop
ss
test
sbb
in
fnsave
mov
jg
xor
xchg
popf
sub
dec
jne
and
rcl
jbe
mov
arpl
inc
out
mov
xchg
push
push
sbb
push
rcr
call
dec
decl
xchg
jle
jne
xchg
or
push
pushf
sahf
jb
push
xlat
or
adc
push
sbb
pop
and
outsb
or
rolb
sub
xor
cltd
out
dec
cmp
cmpsb
jae
mov
push
cld
popa
mov
pop
sbb
in
add
cli
mov
stc
sti
test
int3
jmp
pop
sub
mov
in
pusha
sub
mov
push
sbb
fistl
adc
push
test
mov
pop
hlt
sbb
push
jl
mov
sub
pop
mov
inc
std
cltd
ds
filds
xor
hlt
sbb
fdivrl
pop
inc
cmp
out
insl
push
test
add
push
sahf
push
mov
sub
lds
xchg
jbe
decl
pop
out
movsl
add
push
inc
xor
pop
addr16
in
mov
pop
ds
rorb
sbb
addb
int3
cwtl
dec
mov
arpl
adc
addr16
int3
xorl
dec
in
test
std
mov
inc
mov
cmp
repz
les
jno
lock
pop
dec
push
dec
cs
adcb
leave
loopne
popa
lret
fucomi
sbb
jp
cld
xor
push
rcll
mov
mov
test
cwtl
sahf
push
jp
leave
stos
inc
pop
inc
pushf
xchg
ret
subl
stos
in
and
lret
cmp
scas
js
mov
aas
lret
sbb
push
aam
jno
inc
in
shr
stc
out
pop
add
f2xm1
ljmp
lahf
in
sub
xchg
pop
inc
sub
dec
and
sub
mov
jle
xchg
xchg
imul
test
popf
mov
cmpl
push
mov
adc
rol
scas
sub
sbb
jmp
add
dec
and
ja
ja
pop
int3
xlat
sbb
pop
fidivrl
cs
xlat
scas
in
mov
or
adc
dec
cli
xor
adc
inc
addr16
incb
jg
inc
push
cli
sar
divl
ss
mov
or
push
or
add
loope
out
mov
inc
dec
jmp
adc
add
add
adc
lds
inc
mov
popa
lea
out
dec
inc
es
jmp
pop
andl
sbb
mov
aas
mov
jmp
in
adc
loopne
js
mov
mov
lods
or
jmp
daa
jae
test
outsl
and
call
outsl
dec
movl
xchg
stc
addr16
pop
mov
cmp
sbb
xchg
call
pop
shrl
cmp
add
cmp
mov
leave
das
xor
xchg
fdivr
push
cmp
add
addr16
in
rcll
test
aaa
dec
push
mov
imul
sbb
jnp
adcl
jge
hlt
fldl
pop
fs
into
imul
lahf
insb
sub
out
adc
cltd
mov
ficoms
popf
add
push
ss
mov
fstl
out
adc
insl
mov
mov
xchg
adc
cmp
xchg
xor
out
cmp
lret
adc
in
int
and
mov
sar
daa
sub
dec
mov
and
or
cs
and
mov
lahf
leave
pop
popa
test
or
repnz
ret
mov
js
push
xor
orl
lods
add
add
ret
push
stc
push
mov
outsb
cmpsl
aas
pop
icebp
popf
ret
subb
inc
in
stos
xorb
push
xchg
xor
fs
mov
insb
xchg
jne
mov
xlat
insb
imul
leave
cs
xchg
mov
push
in
xor
pushf
lret
scas
or
push
push
scas
push
pop
aas
fsub
nop
adc
jmp
mov
cmp
mov
cld
shll
mov
je
add
xor
jmp
imul
jne
adc
pop
mov
loope
ljmp
adc
push
pop
fstl
subl
and
jle
xchg
xor
mov
xor
js
loopne
int
jg
jle
pop
dec
sub
sbb
pop
adc
lods
add
clc
dec
push
mov
jb
push
std
and
xchg
mov
or
sbb
jmp
dec
xor
pop
push
push
repnz
sbb
or
cmp
dec
xor
sti
pop
cmp
mov
jg
inc
mov
pop
add
ficoml
push
lahf
fnstenv
ret
sbb
idivb
rolb
cmp
jo
outsb
dec
cmp
cli
pop
jb
insl
ss
mov
dec
cmpsl
add
inc
mov
aam
sub
xor
or
cmp
lea
pop
dec
push
push
leave
pop
aas
scas
cld
inc
subb
and
mov
adc
or
ret
sub
fisubl
fldcw
cmp
pop
mov
dec
inc
dec
in
imul
jnp
mov
jecxz
sub
inc
xlat
and
or
ret
das
in
ja
arpl
or
dec
or
test
sub
add
dec
stos
adc
adc
lds
je
daa
cmp
call
cli
cwtl
mov
or
stos
aaa
mov
push
scas
jge
pop
mov
icebp
je
and
jns
jno
out
sub
ss
lods
and
mov
scas
sub
in
mov
mov
cli
lret
aaa
and
notl
mov
stos
lods
dec
sub
jns
fidivl
add
mov
ret
mov
cmp
push
faddp
push
cmp
aas
mov
daa
and
insl
addb
enter
push
jno
bound
std
jae
inc
push
aaa
xor
cld
insb
xchg
sub
push
push
dec
and
add
adc
xor
jne
xor
pop
xlat
jnp
lahf
je
mov
inc
inc
mov
pop
cmpsb
jns
or
je
mov
fsubl
and
shrl
dec
mov
dec
pop
pop
and
mov
sub
mov
mov
jge
xchg
adc
jge
push
xchg
aam
jg
pusha
mov
in
mov
arpl
ljmp
repz
mov
pop
movb
jl
cwtl
test
pop
ret
dec
psubd
inc
push
cmp
xor
bound
imul
mov
xchg
sub
xor
xchg
push
add
dec
sub
mov
daa
ljmp
mov
adc
mov
imul
cltd
cmp
hlt
fcmovne
sbb
nop
pop
sub
mov
inc
stos
cmp
call
test
mov
es
clc
or
loopne
jp
cwtl
pushf
jl
xchg
adc
pop
scas
dec
add
leave
add
sbb
xchg
ret
jp
arpl
shll
sarl
aaa
push
fildl
movsb
mov
cs
sti
xchg
push
pop
add
xchg
pop
icebp
push
pop
fucomi
cmp
out
imul
enter
imul
xor
sbb
stc
ja
test
jne
pop
incl
sbb
pushf
add
dec
xchg
popf
addr16
sbb
or
xchg
in
add
add
outsl
mov
sub
aas
mov
dec
pop
cmp
mov
scas
stos
movsl
push
call
pop
dec
into
into
add
addr16
adc
dec
mov
fistl
movsb
pushf
mov
scas
jl
inc
add
and
jp
je
fdivrl
add
or
or
add
dec
push
mov
mov
mov
scas
or
push
ret
add
or
jl
leave
rorb
push
in
stos
push
add
fsubrl
sbb
dec
shl
xor
lahf
dec
pop
pop
fcmovnb
jmp
mov
sbb
xor
dec
popf
mov
sub
inc
aam
adc
loopne
imul
arpl
in
cli
and
mov
mov
mov
jmp
cmp
cmp
cli
int
outsl
je
imul
mov
inc
adc
out
mov
in
shll
arpl
xchg
mov
sbb
in
push
aaa
movsl
sub
cmp
repz
xor
outsb
add
in
xchg
xlat
aad
mov
xor
dec
movsb
addr16
cmp
stc
xor
sub
xchg
mov
xchg
rcrb
popf
adc
test
sub
aaa
sarl
clc
dec
add
fmull
sbb
cld
xchg
xchg
and
call
lods
push
mov
xlat
or
scas
push
cmpsl
adc
out
inc
sub
add
les
push
push
sbb
shll
sbb
adc
cltd
fldl
push
add
cmp
fsubs
sbb
cmp
pop
sub
mov
imul
in
jl
cwtl
sbb
dec
movsl
mov
dec
pop
push
popf
mov
mov
out
pop
and
sub
sub
loop
or
pop
faddl
push
dec
push
rep
cs
leave
push
cli
pop
aam
imul
push
rorb
arpl
cltd
sbb
push
xchg
dec
adc
adc
inc
mov
xchg
js
cmpsl
inc
mov
jmp
lock
mov
pop
mov
adc
sub
aaa
or
sub
outsl
mov
dec
pop
add
cmp
pop
addr16
add
push
in
sub
movsb
daa
or
out
jae
fisttps
outsb
add
cmp
and
test
movsl
mov
je
movb
pop
mov
sbb
sbb
add
dec
mov
mov
lahf
in
test
iret
mov
xchg
add
xchg
mov
aam
loop
test
out
xchg
lods
dec
pop
cmc
test
xor
jnp
incl
or
or
outsl
jb
cld
jg
mov
jno
cmp
jae
mov
push
xor
mov
push
adc
mov
loop
outsb
xor
rcrb
mov
popf
cmc
je
cmp
dec
shr
jmp
popf
sbb
je
or
xchg
adc
insl
pop
data16
mov
jl
addb
adc
fildl
inc
imulb
outsb
iret
aam
mov
insl
jle
xorb
lret
enter
clc
sahf
push
inc
std
decl
out
lahf
icebp
sbb
adc
and
jb
clc
cld
mulb
pop
inc
sub
mov
xchg
fimuls
jle
lret
and
push
mov
xor
cmpsb
mov
mov
pop
mov
mov
int3
gs
fisttpl
sbb
insl
mov
xor
rorb
inc
push
push
mov
in
shlb
cwtl
loopne
jg
fcompl
stc
and
mov
pusha
cmp
shl
and
fdivr
dec
je
lahf
fwait
jl
mov
rclb
out
push
jg
xor
jb
jo
jo
sub
call
shlb
ret
jg
dec
mov
jbe
mov
or
cmp
jnp
in
xchg
out
add
stos
dec
aas
daa
push
jl
push
xchg
xchg
and
cmp
movsb
mov
pop
mov
les
mov
pop
dec
jo
add
out
adc
xchg
add
jg
lea
push
enter
xor
sbb
imul
jl
push
pop
and
sbb
pop
stos
sbb
hlt
pop
daa
insl
ss
and
sub
mov
sub
mov
adc
pusha
mov
xchg
movsb
inc
mov
mov
pop
cmp
mov
cmpsb
jp
mov
xchg
sbb
cmp
iret
gs
pop
sbb
imul
out
fwait
int
sub
xchg
sbb
test
sub
jbe
mov
xchg
ljmp
add
aaa
daa
mov
cmp
mov
mov
mov
dec
lds
xchg
push
loopne
jns
and
loopne
stos
sbb
stos
mov
hlt
movsl
aas
std
aas
fwait
test
push
jno
add
cltd
arpl
sbb
nopl
jecxz
loopne
in
loope
fildll
jb
sbb
aaa
sbb
mov
cmp
call
lcall
adc
aam
push
roll
sahf
js
pop
mov
push
pop
inc
mov
pop
push
or
dec
jl
mov
loop
sti
stc
push
sti
iret
add
jbe
add
stos
adc
push
mov
push
out
lret
fidivrl
push
adc
cmp
shrb
les
push
fistpll
jg
pop
repz
mov
ret
push
or
test
dec
mov
inc
push
jge
out
cmp
jno
out
mov
rcr
outsl
inc
cmp
test
aas
shl
and
mov
scas
mov
filds
out
pop
leave
push
add
add
mov
mov
xchg
stos
and
sahf
in
push
clc
sahf
insl
jnp
xor
clc
jmp
push
cmp
cmp
xlat
es
ret
pop
xchg
outsb
add
cmc
push
pushf
test
std
push
and
imul
inc
mov
push
add
pop
or
jmp
cmp
into
daa
cmp
jae
push
addr16
mov
int3
mov
je
fwait
sbb
adcb
push
xchg
xchg
xchg
push
leave
inc
arpl
mov
mov
cmp
test
or
or
dec
mov
jns
rolb
rclb
push
rol
jnp
mov
sbb
lods
mov
sbb
dec
and
addr16
outsl
or
push
rcll
fists
adc
mov
shll
jno
sub
cmp
adc
add
call
cli
jg,pt
test
pop
push
sarl
fucomip
fdivrp
xchg
out
sahf
in
xlat
ret
jnp
push
into
add
adc
cmp
mov
movsb
sub
call
jae
xchg
jne
inc
cmp
pop
popa
outsl
and
pop
idivb
inc
jae
lea
xlat
rorl
int
int
jl
subl
jns
int
call
and
sbb
push
adc
inc
jnp
mov
aam
int3
test
lret
lods
sub
dec
insb
or
out
iret
add
cli
out
mov
or
in
bound
dec
jns
xor
push
or
inc
ret
inc
filds
push
sbb
mov
push
inc
fisttpll
push
cmpsb
shll
mov
sbb
stc
insb
inc
pop
popl
jp
mov
add
cmp
push
dec
pop
xchg
ret
in
ds
jg
jp
clc
cmp
loope
cltd
xchg
push
in
mov
test
pushf
xlat
icebp
pusha
mov
sub
pop
push
pop
loopne
xchg
std
cmp
clc
out
aaa
jge
decl
xchg
push
fsubrs
insb
push
mov
sbb
test
insb
int
mov
xor
mov
sub
xchg
loopne
shrl
inc
bound
ret
push
lret
icebp
fcmovnb
sti
test
push
xor
push
inc
mov
imul
sbb
mov
cmpsb
sbb
bound
or
idivl
ja
pop
jg
insl
add
mov
add
jne
lods
or
je
mov
adc
mov
mov
mov
mov
cmp
outsb
cmp
add
addr16
push
andl
jg
or
test
jbe
sbb
mov
dec
pop
mov
dec
loope
xchg
roll
subb
add
sbb
int
jno
mov
xor
add
push
sbb
ret
mov
add
mov
lods
lahf
leave
push
insl
xlat
ds
cmp
sub
stc
inc
cmp
leave
paddusw
cmp
nop
mov
stc
push
inc
add
mov
xor
jo
mov
and
inc
fisubl
dec
pop
dec
insb
in
inc
xchg
fisttpll
push
out
sbb
dec
and
popf
xor
in
call
ret
inc
xchg
stos
or
adc
push
pop
mov
int
mov
mov
loopne
popf
test
aam
cmpsb
es
bound
outsl
jae
inc
adc
in
mov
icebp
dec
rcl
or
lods
sub
cmp
cwtl
add
out
out
popa
insb
outsb
xor
sbb
ds
dec
aam
xor
pusha
pop
mov
push
add
push
cmpsl
call
stc
ret
daa
mov
std
xchg
jge
insb
add
aam
and
push
cmpsb
jg
clc
add
lods
insb
int3
pop
or
add
lods
mov
add
add
jge
mov
and
push
and
mov
movsl
pop
movsl
testl
lea
lcall
add
sbb
pop
or
xor
inc
xor
popf
cli
cmp
push
in
dec
nop
or
in
fistl
push
cmp
pop
sub
fstpt
sub
mov
scas
test
loopne
xchg
dec
fistpll
addr16
xchg
lcall
xor
xchg
add
xor
push
pop
sbb
mov
imul
jle
mov
int3
scas
push
sub
push
xchg
mov
sub
cltd
test
mov
in
mov
dec
mov
cmp
mov
adcb
cmc
mov
outsb
jmp
shlb
sub
xchg
scas
dec
test
and
and
jecxz
addr16
lods
jae
pop
inc
mov
addr16
cmpsb
std
imul
add
or
fs
insl
add
sar
fwait
add
and
daa
sbb
bound
daa
jae
cli
lret
sub
cmpsb
jecxz
mov
paddusb
sti
dec
mov
mov
idiv
and
add
push
insb
mov
gs
adc
insl
in
pop
movsl
adc
int
sbb
and
push
inc
mov
jbe
insb
mov
or
icebp
shl
pusha
dec
out
out
cmp
and
sub
sbb
je
push
cltd
testb
sbb
aam
out
loop
cltd
push
pop
mov
cpuid
push
dec
push
rcrl
xchg
pop
outsl
sbb
stos
fcomip
xchg
out
add
cmp
jno
shl
or
or
call
repz
push
push
add
sub
sbb
mov
test
ret
mov
movsl
mov
inc
adc
xor
call
int
mov
xlat
sub
out
sbb
jae
xchg
push
or
aaa
stc
imul
addr16
loopne
push
push
xchg
stos
mov
pop
pusha
aam
out
in
sub
push
mov
jmp
pop
and
aam
push
das
shll
push
outsl
in
test
popf
push
xor
insl
ds
filds
push
sbb
xor
or
pop
add
scas
std
or
popa
insl
imul
cltd
jae
std
std
push
in
and
mov
cmc
mov
mov
and
in
out
cmp
pop
incl
lock
outsb
sub
cmp
out
pop
stc
cmpsb
mov
sub
fs
mov
cwtd
sti
fcmovnb
push
cli
icebp
add
cmpsb
movsl
loop
mov
das
mov
movsl
call
xor
cli
jecxz
jae
jge
dec
xchg
in
pop
pop
inc
and
andl
lea
or
add
imul
fchs
adcb
mov
and
faddp
cltd
sbb
int
push
std
mov
fadds
cwtl
aas
dec
push
mov
sub
mov
es
mov
arpl
mov
out
dec
add
out
ljmp
and
cltd
and
in
mov
int
push
or
dec
push
sub
popa
cmp
cmp
or
in
mov
shll
jb
mov
lret
push
jp
push
dec
out
add
loop
and
flds
enter
add
cmp
je
mov
int
inc
cmpsb
shrb
jl
ljmp
scas
xor
ror
push
insl
test
adc
fists
sub
pop
lods
or
fdivl
sbb
je
dec
sbb
leave
mov
dec
push
mov
aaa
iret
push
cld
pop
dec
or
test
sub
and
jg
fst
add
and
xor
cs
decb
inc
test
repz
fdiv
xchg
hlt
push
insb
adc
push
and
mov
xchg
and
xorb
test
std
out
fwait
std
test
addb
push
mov
mov
fmull
cmc
and
sahf
add
adc
dec
dec
insl
lea
xchg
aas
je
mov
out
cmp
dec
dec
cwtl
mov
mov
fistps
sub
lods
sbb
push
pop
xor
dec
pop
test
mov
out
add
movsl
xchg
cmp
sbb
jb
scas
jne
js
shl
mov
nop
add
fstpt
test
add
sub
js
xchg
push
mov
cli
or
dec
dec
pop
or
aam
xor
push
aad
insb
dec
pop
adc
ret
ficoml
jmp
pop
cld
jae
loope
jp
not
xor
sub
inc
cmp
push
jge
xchg
dec
mov
adc
test
mov
cmp
xchg
aam
insb
mov
mov
fistl
push
ret
push
xor
insb
lods
add
inc
popaw
sub
cmpsl
mov
cmp
pop
push
pop
add
pop
push
int
int
push
push
jnp
aas
addr16
rcpps
pop
push
lods
push
push
sub
aam
js
dec
pop
imul
lret
repnz
ret
rcr
clc
sub
jle
cmp
jg
bound
fildl
jne
rcrl
jns
or
daa
jne
ret
insl
jg
mov
jp
in
loop
adc
insl
dec
inc
clc
push
fstl
or
fwait
inc
mov
clc
and
mov
aas
mov
sbb
out
outsl
data16
and
stc
pop
ds
insb
pop
int3
mov
jne
xor
insb
adc
xlat
sbb
mov
out
decl
sbb
push
pop
push
cmpl
cmp
inc
push
sbb
mov
jo
pop
push
aas
aam
cmc
fdivrs
arpl
test
fists
insl
fsubl
insb
in
aam
sbb
lea
add
mov
rorb
push
xchg
dec
add
loope
pusha
push
daa
dec
insl
stos
pusha
mov
rorb
pop
push
jecxz
jb
mov
dec
xor
out
inc
fildl
loop
sub
lea
call
daa
out
loopne
xlat
mov
repz
inc
mov
mov
inc
pop
and
daa
push
pop
sub
rclb
dec
pop
sub
pop
inc
loop
push
jns
rcrl
pop
aam
ret
dec
je
fs
xor
adc
addr16
outsb
xchg
pop
push
mov
les
call
arpl
out
sti
jbe
scas
lahf
sub
mov
lcall
jne
fnsave
push
xlat
add
jle
lock
pop
push
icebp
andl
mov
jne
sbbl
xor
into
gs
pop
leave
les
mov
cmp
fucom
mov
sbb
jne
outsl
push
fdivrs
cmc
dec
jmp
fsts
rol
ret
and
pop
xchg
out
push
out
cmc
jnp
jge
stc
out
in
into
andl
popa
outsl
add
mov
std
jnp
mov
repz
stos
mov
push
mov
lds
push
pop
inc
push
add
repz
inc
adc
push
xchg
lods
xchg
movsl
mov
in
test
cmc
jmp
cmpsl
jne
les
mov
jb
mov
shll
dec
out
shlb
xchg
in
stos
and
daa
mov
les
adc
rorb
pop
pop
dec
sub
mov
and
in
pop
sub
push
xor
jge
jmp
ret
cmp
adc
mov
xor
popa
shll
xorl
xchg
push
lret
je
adc
insb
and
mov
pop
inc
pop
dec
inc
add
outsl
leave
mov
addr16
mov
jno
mov
insl
push
push
outsl
aam
btr
data16
out
pop
mov
fs
or
sub
paddusb
push
pop
movsl
leave
xchg
rclb
cmp
insb
stos
in
scas
scas
sub
or
adc
dec
add
pop
mov
push
xchg
mov
cmpl
sub
test
cld
mov
ds
pop
add
xchg
ljmp
jo
xchg
push
popa
fcompl
es
insb
pop
xor
ret
popa
push
inc
mov
mov
mov
jns
movl
clc
push
lret
cmovb
cmpsl
fs
mov
dec
sbb
mov
mov
inc
lcall
cmp
xor
dec
movsl
add
jmp
xor
or
cmpsb
xlat
cmp
and
xlat
jb
pop
mov
insl
push
fxsave
cld
xchg
repz
sbb
test
push
sbb
mov
stos
imul
push
jmp
icebp
inc
jb
test
icebp
xchg
add
imul
insb
mov
sub
test
sbb
mov
test
imul
aad
jbe
fstl
sar
dec
fstpl
xchg
and
je
mov
inc
and
aaa
push
add
lods
push
fwait
mov
jne
and
icebp
mov
mov
ljmp
push
sarb
pop
mov
ss
das
out
out
loopne
enter
dec
mov
ja
stos
lret
push
mov
test
clc
cmp
ss
and
in
and
dec
inc
lea
stc
cmp
dec
loop
add
out
xchg
add
or
inc
push
jge
inc
daa
dec
cmp
jb
mov
push
push
in
mov
mov
xchg
sbb
xchg
jns
mov
push
std
or
lret
pusha
xchg
jb
icebp
les
pop
andb
movsb
push
mov
daa
gs
imul
ret
pop
test
loopne
mov
pop
rcll
clc
dec
jne
push
mov
fwait
insb
xor
rcr
shlb
mov
test
out
fdivl
pusha
ja
out
xchg
ret
cmp
add
pop
add
xchg
pop
rorb
popa
jae
dec
mov
dec
push
mov
lret
jbe
into
add
jb
fcomps
or
daa
test
rcr
mov
sbb
mov
mov
iret
xorb
leave
imul
add
icebp
xchg
out
sbb
mov
repnz
xor
cltd
cmp
daa
je
das
xchg
jg
int
dec
and
xchg
xrelease
mov
jnp
aam
ss
lahf
fldl
push
add
cmp
lea
ret
sar
vmovupd
scas
fs
cli
es
ja
cmp
test
hlt
push
pop
xchg
loope
inc
in
test
push
mov
in
dec
sbb
dec
filds
push
popa
mov
inc
push
iret
mov
fs
je
cmp
push
out
cltd
test
pop
sub
pop
or
mov
add
daa
fnstenv
stos
imul
cmp
testb
or
sbb
outsb
push
scas
pop
pop
pop
popf
mov
cltd
in
mov
bound
and
sbb
out
jbe
mov
mov
mov
xor
xor
shr
sbbl
mov
in
fisttpll
out
orb
adc
fs
shll
mov
fwait
xchg
cmp
and
std
bound
ja
mov
push
test
jne
loop
outsb
les
adc
mov
adc
jns
and
psrlw
cmp
jo
push
cmpsl
jl
mov
je
fisttpl
imul
outsb
jecxz
in
test
xchg
divb
mov
xor
fdivs
mov
call
out
icebp
mov
mov
loope
outsl
inc
pop
stos
cmp
insb
insl
dec
test
push
stc
cmp
scas
xchg
adc
sub
daa
or
repz
fcoms
xor
mov
mov
xchg
sub
sub
mov
xchg
or
insl
add
ret
inc
pop
insb
mov
xor
out
std
and
adc
mov
or
mov
lahf
inc
sbb
pop
mov
cmp
xchg
mov
xchg
data16
idivl
pop
add
daa
xchg
movsl
pop
jl
mov
push
jnp
sbb
mov
stc
jno
fstpt
jecxz
out
cs
jg
aaa
adc
inc
or
or
xor
psrad
emms
xchg
sub
outsl
pop
cld
lcall
fwait
test
push
test
insb
pop
out
add
sbb
scas
loopne
cmpsl
mov
cltd
mov
xor
and
aad
rcrl
iret
mov
push
test
mov
jo
rclb
cmp
dec
jb
cmp
inc
jmp
jge
xchg
fsub
mov
push
xchg
jno
sbb
mov
sbb
pop
cmp
cmp
ds
btr
outsb
outsl
mov
cmp
inc
pop
test
sub
pop
scas
xor
jmp
inc
aaa
lcall
jne
pop
fsubr
stos
jno
add
cmp
popa
sbb
push
shlb
pop
mov
scas
xchg
mov
inc
std
data16
mov
iret
dec
sarl
aad
dec
nop
je
leave
add
js
fnstsw
pop
subl
out
data16
mov
jae
mov
shrb
xor
sbb
mov
jge
xor
dec
insl
cmp
adc
test
mov
iret
lea
mov
std
jle
xchg
outsl
mov
push
ljmp
jne
adc
popf
sub
clc
je
add
stos
scas
mov
aam
pop
lea
fbld
add
iret
sub
in
mov
stos
insb
mov
jno
pop
push
jle
mov
stos
popa
mov
stc
and
adc
adc
push
dec
das
subl
enter
std
sbb
xchg
sub
jmp
cmp
mov
cli
gs
lahf
adc
push
sbb
int
pop
xchg
popl
mov
in
mov
inc
mov
mov
cli
push
pop
cmpb
cs
adc
and
sub
pusha
mov
dec
mov
push
dec
into
imul
lea
fnstsw
out
pop
iret
push
and
ret
xchg
add
dec
xor
mov
xchg
push
imul
movsb
mov
push
mov
fildl
mov
imul
sbb
dec
call
sbb
inc
daa
test
push
test
scas
test
fcmovnbe
add
int
movsb
and
out
inc
les
pop
aas
adc
adc
fimull
cmp
hlt
adc
int3
vpsllw
fisttpll
rep
stc
mov
scas
pop
pop
clc
inc
shrl
cmp
int
call
out
xchg
mov
cli
rorl
cmp
or
sub
push
jo
dec
aad
stc
push
daa
dec
sub
arpl
jo
mov
sub
and
push
mov
int
sbb
adc
xlat
lea
cmc
cmc
inc
adc
and
xor
sbb
inc
les
sti
std
jmp
cmpsb
out
xor
mov
jno
lret
xchg
push
xor
cmp
inc
mov
ret
into
mov
dec
scas
push
pop
pop
lret
inc
mov
mov
pushf
sbb
cmp
xor
inc
mov
clc
mov
mov
and
adc
out
sbb
cmp
fistpl
jg
xchg
cltd
lret
sbb
call
mov
push
stos
cmp
arpl
and
pusha
dec
xchg
lcall
xchg
fwait
cmp
and
data16
fs
mov
pop
cmp
repz
and
stos
xchg
in
and
push
sbbl
fnstsw
mov
push
inc
inc
stos
push
jecxz
cmp
xchg
pusha
and
push
stos
push
adc
mov
stos
imul
mov
hlt
ret
cmpsl
jbe
out
stos
sbb
dec
xchg
icebp
push
xor
push
bound
xor
int
sub
cli
leave
add
mov
inc
leave
xchg
cmp
rcr
mov
and
imul
arpl
sti
cmc
mov
fdivrs
ret
jb
xor
or
cwtl
sbb
repnz
push
repz
pop
test
pop
push
and
test
push
sub
jns
les
loop
ja
out
push
jnp
xchg
cmp
jb
lock
fistpl
in
lods
aaa
jmp
mov
outsb
push
inc
dec
inc
mov
xadd
adc
lock
sti
scas
test
jnp
dec
adc
cmc
xor
outsb
ja
out
dec
shr
mov
arpl
inc
int
test
pop
mov
in
jle
cmp
f2xm1
les
std
mov
or
and
out
mov
jne
or
dec
xchg
dec
mov
repnz
add
mov
stc
outsb
hlt
popf
inc
ret
push
aaa
pop
or
out
daa
rcrb
push
mov
leave
or
xchg
popa
lods
and
jae
dec
jne
popa
aam
sbb
jns
in
mov
mull
lahf
lea
sbb
pusha
and
sub
loopne
mov
and
stos
out
das
dec
cmp
xchg
add
sub
popf
pop
std
dec
popf
push
sbb
dec
repnz
ret
xchg
fcoml
fsubrs
jne
sbb
cmp
or
xchg
ja
outsb
cs
jns
add
cmpsl
cs
leave
xchg
out
mov
jecxz
cmp
or
sbb
mov
cmp
stos
or
inc
imul
pop
add
call
inc
cmp
mov
and
popf
mov
pushf
xchg
leave
xchg
ror
push
iret
popa
pop
sahf
pop
and
scas
cmp
cli
orl
jae
shrl
push
cmc
test
fdiv
std
jbe
in
cltd
xor
cmp
aaa
pop
pop
cmp
lahf
iret
bound
lea
and
add
dec
push
sub
out
outsb
out
ret
popf
xchg
dec
fsubs
cmp
scas
aam
add
movsl
mov
mov
xchg
popf
cmpsl
arpl
pushf
call
cmp
xor
push
push
adc
out
cmp
out
lock
pop
pop
sub
mov
dec
popa
das
outsb
dec
sbb
stos
jae
cmp
es
std
in
fcmovnbe
out
push
ja
int3
fwait
push
clc
cmp
inc
sub
pop
or
adc
dec
fwait
addb
outsb
jnp
outsl
popf
inc
pop
push
outsl
test
mov
xchg
fsubs
sub
mov
and
cli
push
in
mov
mov
dec
pusha
add
fnstcw
pushf
dec
fidivrl
mov
lcall
aaa
mov
insl
aas
scas
adc
out
cmp
fcmovbe
popa
and
scas
stos
movb
fwait
mov
push
cmpsl
push
xchg
jne
or
or
push
pop
loop
ret
add
mov
sahf
push
cmp
add
xchg
adc
push
pop
clc
imul
push
out
adc
cmp
inc
adc
dec
sarb
jmp
push
cltd
pop
jmp
add
xor
push
arpl
dec
je
stc
lods
aaa
inc
filds
push
mov
out
xor
pop
insl
pop
out
mov
xchg
insb
fwait
aad
or
cmc
popf
push
dec
cmpsl
jo
push
add
out
sbbb
xor
adc
fstl
cmp
inc
adc
sbb
push
and
jle
fcmovb
push
popf
test
jo
clc
in
ret
loopne
or
mov
dec
inc
sub
and
punpckhbw
mov
mov
iret
lods
sar
in
sbb
pop
inc
mov
insb
cmc
xor
