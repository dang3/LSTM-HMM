call
pop
divl
and
dec
rcrl
mov
stos
push
scas
push
adc
xchg
pushf
call
syscall
push
sahf
jmp
mov
mov
fincstp
test
out
test
inc
lds
ljmp
cmp
cmpsb
shll
fwait
and
sbb
lahf
repnz
shl
pusha
mov
cmp
jmp
lret
mov
push
sbb
dec
mov
mov
jns
inc
push
ficompl
jns
sar
clc
xchg
jl
hlt
jg
jle
scas
pop
jae
mov
cmpl
out
in
in
int3
insl
call
adc
push
fstpt
sub
pop
aam
in
idivl
dec
cmp
inc
and
mov
ljmp
int
andl
aas
sahf
in
int
fcomps
sbb
mov
decl
inc
inc
sbb
jo
mov
scas
nop
or
mov
js
inc
call
aad
incl
xchg
pop
mov
mov
das
mov
cmpsb
sarb
insb
loopne
adc
outsb
call
in
scas
dec
jo
lods
ret
sbb
in
les
pushf
inc
mov
nop
sub
jl
inc
loop
jne
jae
cmp
fdivl
xlat
loopne
xor
push
or
ja
dec
lds
call
xchg
cmp
and
shlb
jle
fucom
xchg
outsl
lahf
add
outsl
bound
ljmp
dec
push
dec
ret
ljmp
dec
cmpsl
pop
in
cmp
int
bnd
cmp
inc
jecxz
dec
sub
jo
adc
leave
into
das
stos
gs
lcall
xor
ljmp
jno
fsubrs
jg
add
popa
inc
repz
clc
jbe
mov
or
test
int
xor
jmp
popf
jle
aaa
pop
fwait
icebp
iret
ds
cmpsb
repz
data16
or
xchg
nop
popa
or
push
jmp
aam
mov
mov
xchg
jp
cwtl
test
lea
call
call
jle
mov
and
mov
dec
add
fdivrl
xor
stos
mov
incl
jp
cmp
jb
test
mov
pop
ljmp
int
stos
icebp
call
insb
mov
not
ret
inc
push
mov
xor
int
lcall
cmc
test
sbb
imul
push
jecxz
push
push
fdivs
test
xchg
aaa
sub
jmp
fidivrs
in
dec
adc
out
sbb
rcll
push
std
outsl
fsubrl
decl
or
stos
test
dec
test
cmc
pop
jb
addr16
push
pop
xchg
xor
neg
icebp
xor
decl
cld
outsl
out
mov
xchg
lahf
rcrb
movsb
aas
lcall
ret
jecxz
mov
xchg
je
ret
es
mov
ret
mov
cmp
loopne
aam
push
inc
ja
decl
bound
mov
lcall
les
call
dec
add
setnp
clc
or
std
mov
xor
dec
jp
jg
sbbb
outsb
mov
in
mov
or
lcall
push
xchg
aaa
std
ljmp
fsubs
scas
movsl
and
mov
andl
sti
mov
adc
addr16
fmuls
das
jno
push
xchg
outsl
aam
or
push
fsts
xchg
cli
popf
out
and
imul
repnz
sbb
or
xor
repnz
jmp
mov
out
repnz
loopne
dec
faddl
dec
scas
ret
jmp
gs
push
pop
jo
fs
pushl
popa
lods
inc
inc
mov
sub
in
add
xchg
lcall
ds
lcall
in
sub
aam
fistl
mov
push
adc
jae
sbb
mov
pushl
xor
fdiv
hlt
lods
mov
js
pop
mov
push
fcmovb
xchg
inc
in
stos
test
xor
mov
adc
push
and
adc
jnp
cmpsl
out
xchg
es
cmpsl
inc
inc
adc
pushl
xchg
lods
adc
dec
cwtl
pop
mov
out
jae
add
push
adc
xchg
scas
int3
lahf
mov
mov
xchg
aad
and
cmp
inc
pop
and
pop
std
xchg
inc
out
adc
mov
cmp
decl
push
sahf
scas
jmp
push
rolb
inc
inc
shlb
cmpsl
pushl
mov
jmp
fildl
cld
loop
in
push
or
fcmovnu
pop
into
out
pop
fs
jo
cmp
sub
negb
mov
jae
aaa
pop
cmp
mov
xchg
cs
jl
pop
cli
lods
pop
xchg
loop
call
cmp
mov
xor
test
mov
cmpsl
ret
pop
in
and
test
lcall
push
xchg
xchg
sbb
in
push
subl
mov
adc
jg
jo
cmp
adc
int
pop
fbld
sub
xchg
sbb
aad
out
cli
jmp
mov
xchg
xchg
xor
lods
mov
in
xor
add
jge
pop
jmp
fwait
cmp
sub
out
mov
rclb
or
mov
jl
mov
cmp
add
sub
xchg
jle
fsubl
sub
jmp
or
test
stos
jl
cwtl
fnstenv
imul
shl
into
fbld
xchg
xor
pop
icebp
xlat
inc
imul
inc
in
mov
lock
jp
fimuls
jmp
lret
int3
stos
mov
adc
add
pusha
rcr
push
rol
jg
daa
les
jp
hlt
aam
sti
inc
test
mov
pusha
ljmp
in
or
outsb
fistl
std
scas
out
mov
dec
cli
decl
popf
sbb
dec
divl
mov
rorb
push
mov
cmc
je
or
inc
push
lock
decl
xor
xor
pusha
push
jge
and
cmp
dec
pushf
ljmp
sbb
xchg
xchg
and
ret
insl
in
aaa
xchg
lods
sar
pushl
sub
sub
mov
or
out
test
sbb
aad
decl
jecxz
test
xchg
imul
push
sbb
out
jg
cmp
ret
stos
mov
mov
std
sbb
jb
mov
pop
orb
rclb
ja
jecxz
mov
decl
enter
mov
pop
adc
insb
es
xchg
ss
incl
adc
push
dec
xchg
repnz
rcrb
insl
jge
push
and
inc
or
jmp
mov
mov
dec
es
insb
pop
cmp
adc
shrb
and
sub
push
adc
cltd
adc
test
clc
adc
cmc
dec
mov
inc
movaps
adc
incl
sub
jns
xchg
hlt
rorl
inc
push
fstpl
mov
call
loop
cmovns
into
into
orb
lock
mov
lods
or
dec
mov
fcomps
js
test
push
pop
fnsave
pop
jno
mov
arpl
sub
test
cld
mov
mov
mov
and
or
roll
mov
mov
push
pop
icebp
jp
daa
inc
sbbb
gs
pop
cwtl
loop
adc
mov
dec
sbb
adc
jmp
cmp
mov
push
repz
shl
pushl
add
lea
mov
scas
inc
mov
cmp
cmc
pop
jge
outsl
jmp
ljmp
insl
push
es
ja
sub
out
js
inc
ficomps
lods
lds
dec
mov
push
add
bound
jmp
dec
or
push
adc
decl
in
lock
and
push
adc
xchg
rorl
add
rcr
adc
push
jecxz
sub
jb
insl
cmp
mov
or
or
jl
xchg
mov
enter
jmp
addr16
xchg
jp
sbb
in
dec
aaa
addr16
dec
movsl
dec
mov
sti
mov
cmp
popa
fdivrs
mov
test
pusha
pop
sub
mov
lcall
sbb
dec
cmp
dec
add
jg
js
push
lcall
fnstenv
cmp
and
hlt
in
mov
cld
lock
push
jmp
test
inc
mov
xor
mov
mov
xchg
mov
incl
xchg
imul
arpl
jb
mov
popf
adc
push
xchg
mov
and
pop
arpl
push
addr16
sarb
or
lods
xlat
fcomip
idiv
lods
pop
je
inc
lahf
mov
jl
adc
pop
jnp
ret
incl
pop
aad
fs
sbb
out
es
push
scas
stos
and
lret
xchg
or
incl
lods
and
jmp
cld
jle
inc
aaa
jl
cli
sub
out
loopne
shl
lret
jmp
pop
imul
ja
xor
pusha
xor
lea
or
lcall
addr16
jecxz
js
mov
insb
mov
loopne
mov
inc
xchg
mov
enter
sub
popa
ja
xor
lods
xchg
xchg
xor
ljmp
lods
jge
or
cmc
dec
mov
pop
pop
jecxz
xchg
icebp
mov
dec
pop
cmp
sti
add
jno
rcr
adc
xor
notl
jecxz
adc
pop
push
push
push
xor
aaa
cld
jmp
test
or
insb
sahf
movsb
cmp
fistl
std
jmp
jne
lcall
mov
les
lds
incb
fwait
cmpsl
push
xor
xor
decl
jno
mov
ljmp
lds
mov
gs
jne
jns
fcomip
lcall
xchg
dec
mov
das
je
repz
imull
sub
ud0
call
rclb
cmp
fmull
adc
lahf
das
mov
incl
stos
ljmp
cmp
push
shrb
test
popf
rcrl
in
fdivrl
fldl2e
pushf
test
das
loope
xor
int
movsl
xor
xchg
push
mov
int3
push
cmpsb
mov
aaa
cld
call
push
mov
notb
mov
jo
mov
sbb
lret
pop
insl
jmp
fildll
or
jl
loop
xchg
inc
nop
imul
ds
mov
jmp
in
jle
lahf
std
mov
mull
dec
bound
cmp
rorb
fisttpll
dec
rolb
fdivrl
and
aam
push
cmp
add
and
lcall
out
pop
push
and
cltd
xor
pop
cli
xchg
rcrl
adc
and
les
sub
pushl
mov
push
shll
push
jnp
mov
pushf
ret
sti
icebp
cwtl
sbb
mov
decl
sbb
xor
push
jo,pt
movsl
fcompl
leave
mov
cmp
or
sar
sub
mov
or
outsl
js
and
imul
pushl
fisttpl
sbb
adc
mov
out
mov
adcb
cmpsb
jmp
cmp
xchg
and
mov
dec
int
mov
nop
sub
mov
or
jmp
sbb
jo
jp
or
mov
es
jg
or
jge
orl
mov
mov
jno
call
sub
lcall
inc
xor
aad
mov
rorb
sti
lcall
xor
xchg
hlt
push
stc
jmp
mov
ret
dec
mov
cmp
jg
sbb
and
hlt
dec
dec
sbb
adc
xlat
ss
and
call
or
inc
xor
pop
mov
jl,pt
xor
push
movsb
inc
repnz
lcall
jb
sub
out
jnp
add
call
enter
lea
mov
stos
sub
lcall
pop
sbb
and
sbbl
adc
xchg
pop
add
incl
add
fstp
or
fiaddl
lock
push
pop
daa
mov
imul
cmp
pop
push
cld
fstpl
enter
mov
push
pushf
popf
addr16
aas
mov
adc
pop
add
in
push
jo
mov
pop
mov
cmp
push
add
movsl
mov
cmp
ss
mov
aam
cmp
xchg
push
or
shr
loopne
xchg
arpl
xor
in
imul
ss
jne
xchg
pop
jg
cmp
outsb
stc
sub
mov
sbb
lcall
jp
mov
jmp
orb
cmp
add
pop
adc
pop
inc
fldcw
inc
or
mov
ljmp
lcall
js
jae
sar
aad
es
or
pop
jne
insl
das
sbb
call
inc
in
les
out
cmpsb
pop
and
jae
sbb
push
outsl
lds
out
rorb
mov
dec
jnp
lods
pop
ljmp
push
iret
mov
aad
incl
pop
mov
and
out
or
roll
adc
ja
xor
mov
incl
xor
repnz
sti
sahf
leave
jge
mov
test
push
insb
ljmp
fucom
sub
incl
pop
gs
push
and
js
mov
test
cmp
flds
dec
inc
hlt
scas
adc
lock
mov
dec
mov
cmc
jg
mov
mov
or
sub
lcall
or
jmp
test
cmp
pop
inc
pop
pop
adc
cs
jge
jnp
cld
adc
and
lcall
dec
xchg
call
xchg
cmp
mov
divb
jo
and
push
insb
cmp
adc
into
cmp
test
ret
fistpl
xor
aaa
in
ja
jmp
adc
jo
mov
add
mov
sarl
pusha
inc
mov
cmc
xchg
jae
xchg
sub
push
lret
fsts
push
daa
xchg
push
jb
add
icebp
mov
lock
inc
jne
dec
movups
dec
lea
es
hlt
shll
inc
outsl
and
lock
cmp
in
jns
es
testl
jmp
adc
and
scas
imul
dec
sub
mov
adcb
call
pop
or
sub
mov
in
and
inc
jae
pop
dec
ds
sub
add
decl
mov
pop
push
mov
push
push
aaa
inc
push
std
mov
sahf
mov
mov
repz
jmp
jns
sub
iret
pop
push
sub
jg
jl
ja
out
jno
inc
sarl
ljmp
xor
lahf
jno
movsb
ja
pop
popf
pop
imulb
ficoml
xchg
or
mov
cmp
lock
pushl
daa
mov
int3
mov
mov
gs
fadds
fistpll
cltd
ljmp
pop
addr16
jecxz
pop
cmp
cwtl
movsl
jecxz
cmp
adc
lcall
cmp
repz
inc
sbb
cmc
scas
out
repnz
sub
cmp
lret
incl
mov
push
test
test
pop
mov
mull
or
aam
xor
lods
lret
pushf
fnstsw
lcall
push
loopne
jle
sbb
pop
inc
push
xchg
xor
rol
scas
ds
pop
push
push
rolb
rcrl
or
xchg
push
test
out
adc
pop
lahf
sub
fs
xchg
lcall
fmul
xchg
repnz
and
stos
test
cmp
xchg
adc
jg
loopne
push
jmp
cmp
int3
jg
jbe
jbe
shrb
rcrb
arpl
jmp
push
ret
popf
push
pop
stos
jae
fistpll
mov
push
sub
bswap
jmp
test
incl
push
cmp
inc
int
xchg
fisttpll
add
lds
add
mov
ja
imul
out
insl
es
xchg
negb
nop
mov
int
shrl
pushl
std
jno
pusha
dec
dec
cmp
ret
out
je
or
ss
inc
sub
aad
clc
jecxz
lea
loopne
mov
and
int3
push
repz
es
std
adc
mov
js
ss
inc
popf
push
std
cmp
mov
add
fistps
fldcw
scas
sbb
or
mov
xchg
lock
push
add
das
cmp
stos
inc
leave
out
cli
pop
dec
dec
inc
and
rcl
pusha
mov
dec
pushf
es
jg
cmp
insl
cltd
bound
mov
xchg
mov
dec
scas
or
pop
mov
sarl
rcr
call
jb
cli
jb
daa
dec
ljmp
daa
jae
movsb
mov
ja
cs
sarl
call
sahf
pop
fisubrs
dec
pop
out
push
ficoml
jns
jg
stos
shlb
pushl
mov
jecxz
xchg
pop
fstps
stc
cmp
dec
mov
push
aaa
jmp
mov
lea
fsubrs
xchg
clc
or
pusha
popf
faddl
in
daa
es
and
sub
cld
scas
add
mov
sub
push
dec
pusha
divl
mov
jg
aam
dec
cmp
iret
popw
pop
xor
add
lcall
incl
add
lahf
ljmp
and
jb
pop
mov
pop
cmpl
lds
or
les
cmp
push
nop
or
jg
out
jbe
arpl
push
jge
sbb
mov
pop
or
out
mov
inc
pop
inc
add
out
pop
push
adc
and
pushl
popa
inc
add
cmpsb
and
lret
push
mov
xorl
sti
call
push
xor
xor
adc
push
pop
pop
loop
outsb
or
aad
sub
jmp
jg
movsb
das
sbb
aam
adc
insl
loope
repnz
cwtl
xchg
fidivs
pop
xchg
dec
xchg
sub
cmp
in
enter
pop
aam
cmp
or
stc
pop
pop
pop
les
mov
icebp
ljmp
aaa
xor
sbb
loope
push
add
mov
cmpsb
sub
imul
adc
ljmp
jne
xor
xor
or
insb
pop
es
outsl
mov
add
jle
pushl
popf
ja
sub
push
stos
pminub
outsl
cli
leave
cmp
jnp
dec
in
aam
orl
dec
outsl
mov
decl
cmc
xchg
icebp
cmc
pop
lds
or
or
mov
imull
inc
mov
mov
mov
lods
sub
fidivl
out
mov
insl
jecxz
or
lret
pusha
pop
jne
xchg
jle
pushf
mov
jecxz
mov
pop
test
mov
cs
divb
in
pusha
and
add
lods
das
or
ss
out
cli
incl
mov
adc
inc
stos
mov
inc
test
pop
jbe
in
sahf
push
pusha
movw
pushl
fsubrs
jp
sbb
xchg
aas
dec
pop
mov
push
aad
sti
stos
mov
call
pop
jp
mov
fwait
call
daa
adcl
andl
incl
dec
mov
ret
fadds
add
dec
fldt
xchg
and
clc
inc
loopne
ret
mov
and
shlb
mov
and
lahf
jmp
mov
ljmp
xor
add
mov
shrl
mov
cwtl
add
cwtl
lcall
lcall
adc
icebp
dec
divb
xor
xchg
ja
loop
jl
in
cs
inc
incl
adc
mov
loope
inc
gs
popa
adc
add
xor
fisttpl
mov
cli
rorl
xor
jecxz
std
mov
push
fsubl
call
movsb
xorl
cmp
cmp
mov
lds
in
call
cli
xor
xchg
jl
ftst
icebp
and
clc
dec
loopne
xor
js
pop
sub
decl
or
xor
leave
pop
adc
pop
js
adc
insl
inc
lcall
out
cmp
pextrw
stc
jl
mov
addr16
gs
lret
shlb
stos
jmp
scas
inc
out
sub
xor
dec
or
loope
xchg
popa
ret
nop
mov
or
dec
les
int3
mov
xchg
movsb
test
stc
das
scas
sbb
call
pop
lcall
pop
mov
pop
ret
mov
dec
jnp
jb
pop
xchg
loope
mov
jae
jp
outsl
jmp
loope
or
cld
inc
add
out
popf
jmp
sbb
add
fsubl
jl
in
cmpsl
rorl
les
xlat
adc
and
xor
cmp
in
mov
ljmp
decl
mov
push
mov
fiaddl
insb
sbb
mov
pop
jl
mov
ljmp
rolb
int
xor
loop
popa
loopne
aas
mov
cli
aad
mov
out
cli
mov
xchg
out
cmp
out
rcr
sti
sbb
sahf
add
adc
mov
bound
dec
mov
lcall
divb
loopne
cmp
push
les
ljmp
pop
sbbb
mov
push
shrb
push
loopne
sti
xor
sbb
cmp
push
out
scas
call
pop
leave
mov
cmp
adc
xchg
iret
aaa
lahf
iret
mov
and
loope
adc
jge
fimuls
lea
fcomps
ja
ficoms
dec
pushl
test
xchg
or
xchg
aam
mov
and
scas
mov
sub
clc
mov
inc
pop
sahf
pop
dec
adc
push
cmp
outsb
push
adc
test
add
lahf
mov
in
popa
ljmp
jae
lcall
xchg
ror
in
xchg
jg
sub
bound
popf
mov
outsl
push
sbb
mov
je
xor
and
pop
aam
or
sub
jo
lcall
ss
inc
jle
mov
out
fwait
in
leave
popf
cltd
push
and
jle
cmp
mov
outsl
in
loope
aas
sti
xorl
test
xchg
jl
jbe
pop
out
stc
lods
xchg
shlb
mov
mov
cmp
mov
inc
pop
cmpsb
mov
pop
inc
xlat
stos
pop
mov
mov
jl
adc
test
mov
xorb
incl
pop
shrl
inc
sbb
cmpsl
cmp
es
sbb
insl
lods
push
add
mov
out
mov
fdiv
mov
xchg
mov
jno
enter
lret
jp
je
pushf
pushl
fldl
das
or
outsb
jb
xchg
daa
xchg
and
pop
mov
push
std
sbb
push
sub
mov
xor
adc
or
fdivr
jns
cmp
repnz
lods
dec
jmp
xchg
xchg
jg
or
in
call
daa
in
cs
cltd
mov
mov
imul
xor
push
mov
push
in
sbb
ds
pushl
xorb
push
enter
out
fsincos
clc
sbbl
daa
pushl
mov
repz
cmp
sbb
out
frstor
mov
loopne
decl
mov
out
sbb
pop
loop
sbb
inc
add
scas
cmc
pushl
int
push
inc
inc
mov
or
push
popf
shll
idiv
pop
cmp
mov
xchg
es
negb
fcom
fdivr
push
mov
xchg
hlt
mov
rcll
inc
lret
aaa
nop
dec
add
lahf
dec
xchg
jecxz
out
cli
jnp
scas
movsl
mov
pop
cmp
fdivp
js
jl
rcrb
inc
push
pushl
cmp
scas
push
fistpl
cmc
hlt
pop
inc
or
aam
xchg
cmpsb
adc
ud0
lcall
mov
dec
mov
rorl
sti
mull
pop
jne
negl
call
aas
jg
adc
sbb
outsl
stos
outsb
clc
pop
push
xor
sbb
aad
fnsave
xchg
cmp
jmp
or
cmc
or
sbb
mov
pop
imul
dec
outsb
loop
pop
lock
aad
jmp
rorb
outsl
fsts
xchg
add
in
test
inc
sbb
inc
pusha
test
inc
dec
xor
push
lret
push
fwait
std
push
mov
dec
imul
mov
xchg
fisubs
icebp
pop
jmp
rclb
stc
mov
lcall
mov
xchg
cmc
push
jmp
mov
xlat
pushl
int3
fisubl
lret
or
rcrb
jae
ljmp
andnps
sahf
imul
lds
outsl
cli
sub
jmp
adc
jae
jmp
andb
int3
jmp
cld
jnp
mov
cmpl
push
je
sahf
out
out
cli
call
lret
cmp
push
sub
cmp
mov
in
popa
stos
ja
or
dec
xchg
hlt
loopne
push
gs
pop
ret
inc
test
jmp
push
in
repz
inc
mov
add
pushf
or
out
test
pushf
call
lcall
cmp
mov
testl
jge
pop
inc
pop
xchg
popf
push
fwait
jl
fidivs
ljmp
jns
clc
mov
aam
js
aam
dec
pop
fildl
shlb
pop
push
in
dec
or
loopne
ljmp
cmpsl
into
mov
movsl
pop
sbb
push
outsl
lcall
sub
test
pop
decl
pusha
xchg
push
push
adc
pop
or
pop
jno
inc
jg
mov
mov
jecxz
call
inc
mov
fucom
ljmp
jp
jle
xchg
jmp
test
stc
and
incl
pop
outsb
test
lret
repz
and
shrb
inc
lahf
test
loopne
pusha
nop
cmc
or
add
fcmovnu
js
call
repz
sti
and
scas
sub
add
sub
loopne
popa
imul
sbb
testb
add
jae
outsb
fidivrs
bswap
jle
mov
jp
jg
sub
inc
lods
ja
sbb
cli
xchg
lret
pop
lods
and
decl
xlat
ret
cmpsl
inc
jbe
pop
push
pop
ret
outsl
push
add
dec
xor
mov
pop
mov
push
fsubrl
cwtl
fs
and
ljmp
or
aad
cmp
popf
imul
inc
rcll
popf
xor
mov
mov
clc
mov
mov
mov
iret
imul
sar
cmp
js
lods
ficoms
adc
ret
sub
call
pop
cmc
push
pushfw
push
cmp
push
mov
inc
jne
add
jnp
cmp
inc
push
adc
fprem
sbb
mov
adc
or
mov
sti
mov
iret
lcall
jg
mov
sub
rolb
arpl
jns
cwtl
ss
and
jno
xchg
xchg
mov
dec
add
call
daa
dec
jg
fdivrl
jmp
cwtl
cmp
fdivr
scas
decl
into
daa
shll
rcll
xor
or
je
call
jo
fstpt
mov
aas
clc
push
scas
mov
cmpsl
cmpsl
add
xor
lcall
orb
mov
in
cmc
lret
movsl
pop
js
divl
aad
xchg
push
push
pushl
adc
mov
sbb
sub
jnp
lods
repz
xchg
push
xor
mov
xor
push
sbb
adc
fistpl
jbe
into
cli
cmp
subps
push
push
xchg
popl
js
fs
mov
aaa
mov
push
push
popa
loopne
add
mov
es
and
ljmp
add
inc
cmc
add
mov
and
pop
into
adc
pop
adcb
pushl
loopne
les
jnp
cld
loope
jns
mov
inc
sub
repnz
popa
or
pop
scas
es
ljmp
mov
int3
in
adc
test
cmpsl
mov
dec
xorb
inc
jns
mov
call
into
push
inc
xchg
xchg
adc
jmp
jge
mul
mov
loope
pusha
or
f2xm1
loope
inc
jg
cmp
dec
push
cmp
sbb
and
sbb
jg
adc
je
iret
mov
and
inc
and
jmp
lds
push
sub
lahf
das
clc
ljmp
push
mov
lcall
sbb
adc
decl
fcom
arpl
jb
fildll
adc
sub
adc
pop
ljmp
push
adc
pop
push
scas
push
icebp
sbb
lea
cltd
es
in
call
jb
stos
cmpb
adcl
add
mov
push
pop
cli
dec
inc
mov
push
pop
dec
adc
mov
call
jne
cltd
ljmp
int
adc
fcmovbe
cmovg
inc
fidivs
enter
dec
fidivrl
pop
pop
sbb
sub
in
mov
mov
and
je
push
inc
cs
outsb
inc
or
inc
arpl
std
lret
jge
mov
leave
fs
pop
xchg
fisttps
addr16
cltd
xchg
cwtl
ja
imul
decl
outsl
scas
pxor
je
clc
adc
push
sahf
cmpsb
push
jmp
add
lcall
push
add
inc
cmp
inc
sbb
adc
popa
inc
mov
sbb
pop
fwait
or
out
jle
cmpsl
mov
push
mov
repz
insb
xchg
mov
test
stos
es
inc
cmpl
sar
fcomip
call
cld
movsb
mov
jae
mov
mov
leave
pop
into
jae
cmpsl
jge
jmp
fimuls
int3
ja
loop
lods
nop
mov
scas
lea
rorb
clc
mov
add
decl
es
shlb
or
enter
adc
or
es
aad
ss
add
pushl
xchg
or
fsubrs
xchg
jl
adc
mov
pushf
mov
add
addb
in
fwait
xchg
scas
imul
sahf
adc
dec
into
pop
fimuls
xor
ds
cmp
inc
out
adc
dec
or
add
sbb
cmp
fsubs
stc
fwait
add
ljmp
adc
jg
sarl
mov
fs
xchg
push
cmpsb
mov
xor
hlt
stos
lods
testl
scas
jns
inc
fs
mov
test
fsubs
push
push
pop
ljmp
fcom
or
loopne
sbb
sbb
mov
jg
enter
into
sbb
inc
mov
sbb
adc
push
dec
cld
decl
sti
mov
fstpl
testl
mulb
pop
lods
xlat
sar
call
mov
fwait
mov
mov
cmp
jno
add
lcall
push
cld
xchg
test
imull
mov
add
test
lcall
stos
mov
xchg
dec
loopne
aaa
cmp
and
inc
cs
sub
inc
jmp
inc
mov
lret
outsb
pusha
roll
xchg
xchg
test
inc
sub
xchg
pop
and
cmp
lock
mov
aad
cvtps2pd
clc
mov
hlt
pop
ret
pop
stos
scas
push
xchg
or
into
mov
incl
popa
dec
shrl
push
cmp
jle
lods
add
jnp
adc
dec
pop
call
sub
mov
push
mov
pop
inc
sub
and
mov
xchg
mov
mul
stos
jmp
sti
stc
add
fistpll
push
roll
or
enter
pushl
stos
loopne
pop
and
inc
mov
inc
pushw
mov
push
test
jb
adc
jp
add
lcall
ret
and
or
mov
test
outsb
aam
mov
cmp
jmp
lret
ss
es
mov
inc
cmp
dec
jge
dec
pop
aaa
xchg
out
sti
push
incl
aas
inc
repz
xchg
data16
jno
sub
into
add
xor
adc
dec
cmpsb
inc
lock
sub
adc
das
in
sub
cwtl
push
pop
adc
aam
stos
insl
sahf
aad
call
shlb
hlt
out
cmp
xchg
arpl
mul
inc
out
neg
inc
sub
fs
jg
inc
push
add
xor
ljmp
jmp
fwait
cmp
jmp
mov
and
dec
out
loope
loope
xchg
push
cwtl
sub
dec
pusha
and
fs
xor
fsubrs
adc
test
dec
cwtl
add
jecxz
inc
pop
fwait
int
sbb
dec
test
sub
iret
addb
in
shl
sub
outsb
or
aaa
call
jge
imul
fs
pop
inc
or
ds
sub
out
test
loop
cwtl
and
cli
in
addr16
xchg
jecxz
cbtw
push
mov
mov
je
ljmp
fwait
arpl
dec
lcall
aas
cmpl
loope
cld
aam
jecxz
push
in
mov
cmpl
mov
iret
pop
pop
or
pop
fcmove
mov
ljmp
outsl
sti
test
gs
stos
sub
rcrl
in
out
cmp
call
jp
jno
movsl
icebp
jnp
aam
xor
stc
inc
dec
icebp
push
pop
mov
lcall
jp
lea
pop
out
pusha
sub
inc
insl
stos
pop
popf
xor
aad
scas
imul
out
mov
in
dec
sbb
push
test
or
pop
dec
insb
xchg
add
adc
incl
dec
cmp
outsb
hlt
clc
testl
mov
jnp
popa
stos
pushl
xor
xor
lds
pop
ja
out
loop
pop
inc
xor
lcall
xor
divl
ss
js
or
lods
in
insb
jae
out
mov
mov
sub
ljmp
adc
rcrb
jno
sbb
loope
loop
enter
and
mov
stc
mov
scas
mov
outsb
lahf
xchg
stos
test
xchg
shlb
out
scas
jo
cmp
addr16
dec
mov
out
mov
outsl
adc
repnz
test
jmp
adc
add
pop
arpl
test
mov
fiaddl
call
mov
mov
or
nop
rclb
push
sbb
jo
jo
sbb
sahf
in
incl
sbb
cltd
and
out
push
jge
jmp
pop
jae
xchg
jo
mov
out
clc
incl
insb
and
ds
jno
mov
mov
stos
das
xor
hlt
bound
outsl
sbb
push
push
imul
sub
xor
lcall
into
andl
and
mov
sahf
popa
in
decl
iret
and
mov
jns
dec
dec
fldt
das
mov
fisubrs
jl
std
fimull
mov
xchg
fucomip
fsubrl
fwait
or
mov
sbb
jmp
dec
pusha
xchg
icebp
or
mov
loop
mov
cmp
insb
aad
and
mov
xchg
xor
fsubl
loope
inc
sbb
xor
decl
pop
mov
jge
imul
out
js
mov
sbb
iret
adc
repnz
das
lret
cmp
fstpt
dec
out
enter
outsl
pusha
cmpsl
or
movsl
dec
pushf
stc
imul
mov
in
or
jbe
add
add
call
outsb
push
ret
jb
cmp
sub
out
insb
insl
add
ljmp
outsb
imul
adc
aad
inc
mov
sub
sbb
fs
dec
daa
call
push
push
adc
sarb
loope
sub
mov
add
ljmp
jmp
in
shlb
aas
ds
ss
outsl
ljmp
jg
ljmp
pop
imul
sbb
imul
outsb
mov
sar
and
imul
xchg
scas
ljmp
adc
rolb
pop
mov
or
mov
out
in
jb
xor
ljmp
lret
adc
push
or
ficoms
std
xchg
inc
cld
cmp
push
sub
mov
mov
xchg
scas
repnz
or
mov
es
inc
xlat
mov
call
int3
jo
or
inc
into
aas
repnz
test
pop
and
mov
fcomip
das
ds
sub
sti
push
push
dec
lcall
adc
mov
cltd
jl
sub
jb
mov
sub
das
add
lock
dec
cmp
les
xchg
or
rcl
lock
adcb
dec
sahf
push
xor
bnd
mov
test
mov
sbb
inc
or
decl
jne
sbb
lret
mov
sti
sahf
shr
sbb
movsl
dec
loopne
dec
inc
into
ret
dec
ljmp
jo
lea
scas
xor
popf
decb
rorl
dec
xor
xchg
rcll
mov
insb
jo
scas
das
and
arpl
js
inc
je
sahf
mov
pushl
loop
mov
lret
or
xchg
inc
cmc
int
pop
shll
push
push
mov
scas
mov
rcr
mov
fistpll
js
sbb
scas
rcll
dec
jnp
loopne
pushf
pop
decl
jno
mov
adc
push
fimull
icebp
pop
stos
pop
sbb
jmp
pop
out
loope
jp
mov
cmp
mov
orl
stos
ljmp
and
cmp
cmp
incb
inc
jnp
test
in
xlat
xchg
cmp
push
fcomip
sbb
fwait
xchg
sub
jle
mov
inc
inc
xlat
or
or
dec
jnp,pt
scas
ficoms
xchg
xor
stc
adc
movsb
jne
mov
iret
mov
mov
adc
jg
lcall
and
cmp
aaa
add
adc
adc
mov
ljmp
test
icebp
xor
pop
push
sub
daa
psubd
stc
pop
dec
mov
lcall
cld
mov
inc
lds
mov
sbb
adc
les
imul
pushl
xchg
fs
jmp
insb
pop
xchg
cmp
inc
pop
jp
mov
imul
add
and
fildll
out
mov
shr
insb
xchg
test
andl
cmc
pop
cmp
inc
outsl
mov
cmc
add
icebp
inc
jmp
call
xchg
test
inc
dec
mov
cltd
mov
arpl
jmp
daa
out
xchg
adc
int3
and
jb
test
cmp
mov
mov
mov
pop
push
fimull
add
cmp
sar
dec
sti
sbb
pushl
ja
incb
mov
bound
rol
jne
sbb
jmp
mov
ss
rcl
test
push
test
adc
lahf
daa
out
dec
ficoms
sbb
popa
in
sbb
push
dec
mov
out
sub
mov
adc
and
jmp
push
movsl
xor
sbb
jp
cmp
cmp
arpl
xor
ds
fsubs
in
cwtl
xchg
xor
mov
mov
enter
push
movsb
jge
jbe
data16
ljmp
adc
out
add
repnz
or
xchg
xchg
or
test
dec
cmp
clc
int
lods
aaa
bound
adc
and
std
lcall
nop
repnz
push
jnp
or
lods
jecxz
stos
mov
or
ljmp
cmp
adcb
movsb
sub
mov
jbe
push
jge
test
mov
push
dec
into
stos
adc
sub
sub
scas
outsl
jns
shlb
jg
js
fs
xchg
push
int3
xchg
adcl
aad
mov
push
shl
enter
cmp
sbb
inc
outsb
popf
sub
in
pop
cwtl
stc
out
and
test
dec
call
inc
pop
add
incl
pop
lock
xchg
jo
jo
sub
call
std
popf
fnsave
out
gs
popf
clc
loope
inc
into
loop
ret
mov
stos
lcall
or
mov
cmp
outsl
ret
idivb
in
movsb
mov
repnz
decl
add
ror
dec
ja
cmp
cmp
adc
sbb
xor
pushl
and
cmp
mov
arpl
pop
push
out
inc
jg
jge
push
aad
sub
outsb
ljmp
out
sbb
jle
xchg
outsb
cmpsl
in
ror
imul
movsl
stos
enter
fnstcw
nop
sbb
sti
mov
cs
cmpsb
in
stos
icebp
aaa
arpl
xchg
xor
dec
test
adcl
jge
ljmp
iretw
int3
rcl
cld
cmp
and
shll
ret
loopne
jns
dec
loop
push
fldcw
mov
dec
clc
out
jle
xchg
les
push
sbb
outsl
mov
sbb
stc
mov
pop
or
das
cli
push
mov
inc
in
dec
adc
sahf
push
sbb
jo
sbb
dec
sbb
lcall
into
ds
gs
xchg
dec
inc
mov
stos
mov
lds
decl
sbb
gs
stos
stos
jnp
std
loope
jae
test
xchg
pop
add
mul
imul
push
pusha
in
pushf
cmp
add
bound
ret
cmp
fsubrs
decl
loop
gs
adc
imul
leave
sti
dec
getsec
in
js
insb
mov
call
test
mov
push
cwtl
or
aas
addr16
into
cmpsl
mov
test
sbb
test
call
outsl
dec
push
rcrl
pop
rol
pushf
and
xchg
pop
mov
xor
lahf
fwait
mov
lea
addr16
mov
sbbb
nop
cli
ja
decb
sbb
ljmp
jle
test
jns
ret
add
jno
popf
dec
cmp
jmp
add
push
insb
arpl
push
mov
push
dec
jbe
popf
dec
inc
leave
es
call
lds
cmpsb
add
sbb
or
push
repz
xchg
inc
out
sub
incl
push
xorb
xchg
dec
shlb
pop
cwtl
pusha
and
inc
ja
push
and
mov
outsb
add
lcall
adc
fisttps
jp
lock
push
inc
jns
or
push
mov
jo
loope
sub
cmp
jg
push
adc
scas
mov
and
insl
cld
pop
shrb
cli
push
not
mov
stos
aam
xor
xchg
insb
adc
xchg
aam
push
shll
aaa
sbb
ljmp
lods
shrl
pop
cmp
aad
dec
pop
prefetch
add
sti
out
pushl
scas
cli
test
lea
cld
in
shr
iret
shlb
mov
pop
jne
mov
fcomip
call
or
test
pop
lods
mov
insl
insl
shrb
cmp
sub
fstl
popa
inc
xchg
and
adc
jmp
pop
stos
xchg
sbb
push
pushf
loopne
into
cmp
dec
call
bound
test
scas
clc
inc
loop
repz
decl
inc
imul
inc
sbb
dec
movb
push
popw
out
fidivrl
jmp
cmp
jecxz
sub
push
pop
shrl
loope
mov
or
pop
fisubrl
lods
push
xchg
clc
jle
mov
pop
push
test
out
mov
scas
push
loopne
leave
mov
push
adc
ljmp
push
femms
stos
adc
push
jle
add
insb
add
aas
call
lea
dec
push
out
test
iret
popa
fisttpll
stos
xchg
out
out
sbb
push
out
mov
imul
cs
je
cwtl
mov
or
jno
xchg
sbb
pushl
shll
rcrb
pop
xchg
lret
adc
incb
repnz
push
jmp
nop
aam
xchg
mov
mov
iret
les
sbbl
mov
incl
sub
stos
inc
dec
insb
insb
loop
cmp
dec
iret
out
lea
sub
repnz
adc
adc
fs
mov
jo
dec
je
and
ljmp
cmp
enter
adcb
mov
jo
mov
xor
xchg
fdivs
mov
sbb
inc
push
inc
fiaddl
or
inc
add
call
sub
push
sub
mov
pushf
out
adc
dec
adc
jae
push
mov
or
push
js
inc
cmpsl
pop
sub
xor
nop
pop
loope
lret
dec
inc
insl
mov
adc
and
nop
cmp
mov
cld
lods
stc
pop
sti
pushf
cmp
xor
ljmp
mov
mov
aam
lahf
movsbl
dec
inc
loope
fs
inc
lds
pushl
aam
add
nop
xchg
in
jbe
mov
adc
shrb
fsubp
iret
sbb
call
add
inc
mov
adc
add
lcall
and
shl
cmpsl
iret
push
iret
push
jbe
mov
pusha
pop
or
add
pop
mov
rorl
lcall
jp
aas
jp
lcall
ds
cli
pop
popf
loopne
jnp
mov
fldenv
pop
xor
lcall
call
mov
inc
cld
adc
mov
xchg
mov
not
test
push
inc
push
lea
decl
and
push
pop
scas
mov
test
inc
lods
rcll
cmp
xor
shll
test
add
lcall
fxch
sub
out
xor
aas
jecxz
xor
push
xchg
xchg
mov
adc
sbb
xchg
sub
mov
mov
stos
pushf
lcall
fstpl
fwait
cmp
pop
fsub
ja,pn
sub
mov
xor
mov
add
mov
sub
pop
dec
lds
sahf
jmp
push
imul
mov
jge
ds
sbb
daa
icebp
movsb
inc
cmp
inc
sub
pop
cmp
cmpsl
cmp
cmp
jmp
adc
insb
push
mov
into
lret
ficoms
gs
pop
call
test
ljmp
sbb
ja
mov
hlt
mov
out
cmpsl
mov
mov
icebp
inc
cmp
jmp
cmp
push
and
pop
test
cwtl
inc
push
and
mov
out
and
dec
cs
lea
leave
mov
xor
or
push
lcall
mov
xor
pop
mov
dec
fstpl
push
jnp
lret
ud0
lcall
aam
dec
ds
movsb
fdiv
sub
jecxz
pop
das
addb
fcomip
call
sbb
adc
sbb
xor
fs
ss
jno
lahf
xchg
int3
sti
mov
jmp
inc
out
mov
or
xchg
arpl
sbb
and
xchg
xor
ret
jg
dec
xchg
lock
jecxz
clc
fnstenv
shrb
lret
imul
jmp
cs
mov
pop
movsb
adc
pop
in
inc
repz
movsl
add
push
or
adc
ljmp
lods
jns
aam
dec
sub
inc
pop
mov
ret
jmp
push
cld
jge
subb
call
jecxz
sti
xor
test
mov
fldenv
mov
jg
sbb
xchg
mov
xor
bound
pop
sub
icebp
aaa
cmovnp
sahf
scas
loope
in
jg
jmp
imul
fldl
sbb
enter
int3
add
mov
and
or
mov
addl
je
sbb
pop
mov
movsl
lcall
std
add
dec
ss
dec
in
ds
lahf
adc
adc
or
ud0
fidivrs
sub
stc
mov
pop
push
mov
repz
mov
add
call
xchg
pop
xacquire
pop
push
jnp
ret
sti
hlt
ljmp
jl
cmc
jae
lahf
sbbb
ret
hlt
scas
mov
cld
dec
imul
adc
test
insb
push
inc
in
test
rorb
in
ret
cwtl
add
clc
decl
sub
pop
jno
and
cli
jl
loop
or
jge
fstl
dec
cmp
push
pushf
push
inc
test
adc
mov
adc
dec
ret
fs
ja
pop
imul
call
add
push
pusha
pop
cwtl
jle
js
sbb
pusha
dec
fbld
lods
inc
data16
sbb
loope
mov
decl
sub
leave
push
push
test
dec
ja
jae
pop
sbb
dec
fsubrp
and
icebp
insl
call
fwait
xor
inc
xlat
sbb
mov
data16
pop
inc
mov
hlt
or
add
push
in
fcomip
xchg
mov
clc
test
or
mov
fldt
sahf
cmp
in
shrb
hlt
jecxz
pushl
fsts
test
xchg
das
fs
loope
sar
mov
subl
push
cmc
mov
push
popa
aas
adc
sbb
aam
xchg
cmp
call
mov
xor
rorb
jmp
enter
incl
rolb
pusha
rcrl
inc
jae
js
popa
pop
push
xor
push
inc
mov
or
xchg
jne
test
mov
shll
repz
rorl
jns
test
jg
das
fwait
insl
sub
lcall
mov
fldl
lods
push
std
out
scas
cmp
adcb
cwtl
jb
mov
frndint
add
fildll
imul
rclb
push
stc
sub
cli
inc
adc
pop
fdivrs
push
sub
mov
test
push
or
cmp
ljmp
pop
mov
xchg
xchg
xor
loopne
dec
rcll
call
nop
mov
inc
adcb
add
sbb
fsts
mov
repz
lcall
mov
stos
test
mov
jge
mov
pop
mov
cli
sbb
aas
or
dec
or
pop
jmp
repz
jo
arpl
push
sub
ljmp
pushl
inc
xchg
je
mov
aaa
lock
sub
subl
out
cld
xor
inc
push
loopne
jne
and
call
cmpsl
adc
sbb
sub
pop
fimull
dec
aam
adc
mov
jge
std
pushl
test
inc
fld
sub
xor
cmp
xor
jecxz
ljmp
fnstcw
ja
dec
leave
iret
pop
add
lret
inc
push
and
incl
lret
aam
jo
fxch
lahf
shlb
jnp
incl
loopne
or
lods
cmp
cltd
mov
mov
jecxz
pushl
adc
jl
and
cmp
mov
inc
pushf
cli
inc
bound
sbb
mov
jbe
cld
push
dec
es
insl
outsb
inc
cltd
dec
cmc
push
jle
cs
xor
sbb
xor
dec
pop
inc
cmp
cmp
sbb
jmp
mov
xor
dec
fwait
test
adc
movsl
aaa
mulb
mov
cmp
sbb
ljmp
jb
fwait
mov
data16
adc
inc
les
mov
xlat
popf
ss
movsl
pop
cmc
pushl
aaa
cmc
inc
aas
jne
bound
pop
inc
imul
jecxz
scas
dec
cli
pop
push
mov
je
sub
rol
neg
xchg
in
ret
jmp
jae
xlat
jl
mov
mov
push
pop
ljmp
jmp
popa
push
inc
loope
aam
rorl
inc
mov
daa
mov
rep
ljmp
add
sbb
fwait
jbe
popf
push
stos
xlat
out
and
decl
call
jae
sub
jo
jae
mov
nop
add
rcl
mov
pop
mov
dec
lcall
das
ljmp
cld
xchg
fs
es
mov
push
stc
or
clc
jg
xor
andb
cmp
mov
and
out
xor
out
mov
lcall
fwait
lods
mov
orl
sub
aas
test
xor
xchg
decl
stos
inc
arpl
mov
sbb
jge
daa
pop
stos
dec
adc
or
lcall
cmp
mov
jl
iret
inc
imul
jbe
movb
call
sar
inc
aas
push
cmp
jecxz
mov
cmp
push
jg
fwait
or
jg
adc
sbb
pop
iret
mov
sbb
fcmovnb
insl
inc
or
mov
jle
out
dec
mov
repnz
pop
lea
cmp
push
imul
nop
jg
insl
adc
sar
lcall
imul
mov
sub
sub
sbb
xchg
sub
mov
jmp
lret
cmp
xchg
outsb
int3
fisttpl
xchg
in
mov
xchg
std
add
cmp
movsl
xchg
enter
stos
lcall
movsl
call
pushl
mov
cmp
cmp
pop
push
in
mov
aam
rcl
addr16
int
cmpsl
popf
pop
mov
cmp
lods
sub
pushf
pop
inc
dec
roll
xchg
push
mov
call
mov
clc
std
iret
icebp
xchg
test
out
inc
or
mov
mov
inc
addb
sbb
rol
jbe
adc
or
popa
dec
sti
cltd
popf
cmp
jmp
mov
cwtl
add
xchg
add
mov
xchg
xor
mov
call
sub
scas
pop
xchg
inc
lea
arpl
adc
insb
sub
mov
js
push
pusha
ljmp
jl
jl
ja
sti
push
mov
fcos
ljmp
imul
mov
mov
lods
loop
cmp
lcall
call
mov
add
scas
sub
cli
clc
push
xor
lods
outsl
mov
and
cmp
lcall
ret
popa
fwait
xor
xchg
aad
or
movsl
lahf
outsl
notl
jo
mov
sub
fistps
into
mov
cwtl
adc
xor
std
cmp
pushl
jae
inc
sub
lods
mov
movsb
loope
mov
imul
xlat
pop
mov
add
mov
mov
lahf
sub
mov
decl
bound
ret
or
inc
sti
sub
inc
in
gs
or
data16
js
inc
pop
cmp
dec
test
mov
aam
addr16
aam
rolb
or
inc
int3
xchg
aam
push
es
xor
and
jg
or
shlb
dec
sub
shll
jnp
dec
add
xor
add
dec
bound
cmpl
mov
fmull
push
inc
movsb
pop
jns
inc
dec
imul
sub
xor
aas
mov
pop
imul
jb
sbb
mov
sbb
aaa
aas
adc
pushf
arpl
push
outsb
fnstcw
sub
cmp
push
sub
add
dec
sbb
adc
fsubrs
lahf
xchg
decl
mov
cmp
je
add
push
adc
mov
dec
add
ret
xchg
outsl
pop
ljmp
push
movsl
jbe
adc
pop
in
dec
adc
sbb
pop
add
cli
jp
decl
loope
xchg
xor
or
mov
jnp
pop
cmp
sbb
jmp
out
adc
mov
jecxz
popf
imul
and
ljmp
mov
das
or
push
push
adc
lds
mov
je
xchg
ljmp
add
jl
add
fwait
in
in
or
push
jo
test
cli
lock
cmp
cli
outsl
nop
fnstsw
and
jne
mov
mov
data16
jb
xchg
jg
insl
xchg
lahf
movsb
xor
bound
mov
inc
iret
cmpsb
decl
jnp
in
inc
jp
mov
mov
sub
sub
dec
cltd
inc
std
sbbl
ret
cwtl
pop
nop
mov
or
cmp
cmp
jbe
ret
in
sbb
push
fdivrp
pushl
cmpsl
dec
pop
loope
cli
jl
inc
bound
mov
sti
iret
inc
loope
out
adc
bsf
dec
mov
andl
adc
cmpsb
in
push
cmp
in
push
push
lret
or
sub
jbe
and
jo
aad
call
dec
scas
jns
sti
inc
mov
enter
fdivl
push
dec
cmpsl
cmp
pushl
lea
pop
or
inc
jnp
and
subb
and
ret
decl
sbb
jmp
aaa
jne
rcrl
dec
mov
outsb
sar
lahf
pop
push
mov
push
or
xchg
sub
mov
outsb
in
rol
dec
fisttpll
inc
popf
jg
fbld
push
push
js
jle
loop
jg
and
iret
jne
pop
gs
jle
inc
xchg
or
cmp
das
fstpt
xor
or
andl
cld
nop
sar
ljmp
add
sbb
lock
adc
pop
out
xchg
sbb
call
pop
adc
jg
lock
inc
dec
out
xor
mov
adc
aam
decl
ficoml
in
cmp
push
cmc
lret
mov
negb
jl
lahf
lret
out
shl
popf
xchg
lcall
arpl
lcall
xor
call
adc
imulb
dec
cld
push
decl
loop
movsl
test
push
cmp
mov
push
mov
inc
push
fidivl
push
pop
fcmovne
cmpsb
mov
or
xchg
lret
xlat
or
imul
cs
int3
decl
jp
fwait
daa
cmp
mov
scas
repnz
ret
rclb
pop
test
fisubs
nop
or
xor
mov
fisubrl
dec
shll
xchg
cmp
and
call
mov
int3
sbb
mov
push
add
stos
sbb
cmpsl
loopne
sti
fisubrl
dec
adc
incl
xor
pop
icebp
mov
cltd
xchg
mov
addl
adc
inc
mov
rcrl
leave
rorl
lock
push
mov
mov
test
pusha
push
test
sbbl
fisubrl
add
mov
xlat
xchg
pushf
inc
mov
push
and
push
out
test
push
lcall
fisttps
jo
fadds
cmp
and
xor
repnz
pop
rcr
call
sar
test
pop
xchg
aam
pop
filds
jae
rcr
cmpsl
adc
dec
mov
cli
add
inc
jp
add
xchg
inc
adc
push
jle,pt
lcall
scas
jbe
or
xchg
sbb
mov
data16
fcomps
das
lahf
pusha
mov
call
jp
pop
in
stos
ffree
cld
mov
push
sahf
sbb
decl
lock
pop
jae
adc
imul
imul
ljmp
divl
and
push
mov
xor
xchg
mov
xchg
jp
xlat
insb
add
or
decl
push
pushf
pop
sub
sti
lcall
arpl
push
cmp
in
dec
mov
call
pushf
inc
xchg
mov
fsubrl
add
xchg
and
loopne
mov
mov
fdivs
mov
cmpsb
cmpsl
xor
sbb
in
pop
inc
pop
popa
mov
jg
fsubr
mov
xchg
xchg
sub
mov
cwtl
mov
incl
jno
mov
outsl
outsb
mov
fistpl
aam
xchg
outsb
mull
ja
push
pop
pushl
jne
enter
notb
loopne
enter
add
mov
int3
out
clc
inc
sub
cmpsl
pop
add
xor
insl
ljmp
incl
push
and
jmp
push
bound
pusha
jl
jno
adc
out
dec
or
aaa
xchg
and
decl
push
aas
xchg
es
enter
js
pop
mov
mov
call
mov
add
nop
andl
sbb
xchg
cli
hlt
loop
lahf
icebp
pop
jge
xchg
cli
mov
cli
mov
or
repnz
mov
push
in
push
vpmadcsswd
lcall
jbe
enter
cmp
jmp
jle
push
and
jbe
lcall
mov
ret
cmp
and
mov
push
and
sbb
dec
imul
mov
dec
out
decl
out
sbb
lock
push
rcrb
jmp
fsubrl
fdivp
mov
dec
pop
jl
adc
xchg
xor
mov
sti
cmpsb
xor
data16
jg
ljmp
insb
stc
movsl
mov
add
stos
adc
pop
inc
stc
jo
add
incl
imul
bound
add
jo
orw
mov
addb
lods
mov
cltd
jmp
pop
adc
insb
pop
lods
mov
and
mov
fsubs
xchg
adc
push
mov
cld
jmp
je
and
mov
aam
jno
jmp
mov
stos
sarb
cmc
xor
decl
push
mov
and
scas
sub
out
daa
mov
inc
xchg
orl
add
aaa
sbb
pushl
es
add
cmpsb
inc
lds
cmp
push
cmp
cmpsl
adc
imul
inc
dec
mov
jae
pop
add
rolb
rolb
sbb
pusha
lea
ffreep
mov
or
jns
repz
daa
pop
add
dec
adc
aam
in
lea
xchg
cld
pop
mov
jp
stos
ljmp
fwait
data16
insl
fdivl
jmp
into
xor
push
incl
in
jl
xor
add
test
xchg
dec
fcomps
std
jmp
dec
dec
xor
popa
sub
adc
jbe
push
lods
in
xor
and
jmp
dec
fucom
inc
sahf
imul
daa
push
cwtl
test
push
jg
mov
loop
ljmp
sahf
popf
fistl
or
shrb
stos
jmp
add
pop
push
sbb
arpl
decl
sbb
adcb
sub
or
test
nop
xchg
leave
xchg
add
mov
jmp
jne
jno
xlat
mov
and
mov
aaa
stos
call
imul
inc
xor
psraw
cmpsb
push
repz
sbb
inc
leave
jne
clc
dec
inc
jmp
or
inc
pop
cmc
fidivrl
adc
push
fimull
sbb
test
cld
or
jmp
out
push
mov
movsl
pop
rorb
sbb
sbb
inc
xor
stos
cmp
jmp
adc
jnp
mov
and
pushf
and
xlat
stos
cwtl
sub
mov
pushf
adc
add
jl
add
xchg
jle
mov
mov
inc
cwtl
or
push
mov
sub
dec
out
and
rclb
decl
xor
xchg
stos
inc
out
mov
pop
fmul
cmp
and
mov
call
into
mov
insb
pop
and
inc
int3
loop
xchg
mov
shl
cmp
jbe
pop
aad
call
aad
dec
lahf
into
jle
xor
call
cltd
scas
xchg
ljmp
mov
cmp
test
js
fldenv
rorb
or
movsb
pop
xchg
jne
sub
pushl
jle
inc
imul
sti
pop
into
pop
cmp
inc
test
adc
rorl
fbld
jge
push
loop
and
and
rcr
mov
mov
call
push
jge
jecxz
sar
incl
movsl
cmp
sbb
cmp
lahf
loop
and
mov
jns
loopne
ja
inc
mov
sbb
cwtl
xchg
jo
pusha
push
pop
ja
xchg
jb
and
inc
ljmp
scas
cli
ljmp
jl
dec
or
cmp
xchg
add
jle
inc
pop
adc
jnp
pop
sti
pop
call
in
imul
test
sub
std
mov
jp
adc
mov
mov
decl
cmpsl
mov
fdivrl
push
or
cltd
dec
push
sub
push
pushl
or
cld
mov
out
sti
andl
fnsave
cs
nop
arpl
jmp
mov
arpl
mov
addb
and
push
or
push
add
mov
mov
in
leave
sub
pop
mov
in
fstpt
cmp
push
push
jl
mov
sub
pushl
popa
inc
xchg
push
loop
out
jno
and
int
sbb
fs
fisubl
jmp
adc
iret
stos
daa
xor
fstpt
pop
jb
lods
push
data16
add
fs
decl
out
mov
cmp
push
iret
fnsave
push
sti
sbb
filds
sti
push
adc
cld
pop
rcrb
lcall
mov
mov
inc
mov
mov
imul
jmp
in
sbb
mov
stos
dec
xor
push
dec
push
pop
adc
iret
push
lcall
shl
test
test
repnz
fcmovu
ja
add
dec
dec
sahf
sub
mov
mov
aam
xchg
out
bndstx
xchg
insb
cld
call
loope
dec
dec
cs
and
cmp
xor
out
jge
jecxz
add
stc
leave
hlt
jns
fs
fidivrl
std
scas
sbb
ljmp
clc
decl
lock
stos
js
cmp
lcall
scas
call
imulb
xor
sbb
sbb
das
mov
pop
jo
lea
test
incl
enter
cmpsl
inc
pop
pusha
lret
mov
sbb
mov
jnp
mov
imul
lret
xlat
xchg
lods
and
and
pop
jmp
out
push
push
or
inc
and
pop
scas
scas
fbstp
fdivrs
scas
mov
jno
inc
mov
insb
xor
std
in
jle
ficompl
xchg
test
out
out
dec
roll
xor
jne
xorl
jle
ds
js
mov
fcmovnb
imul
sar
mov
incl
push
test
rcr
outsl
int3
shrl
jbe
ljmp
inc
andl
push
push
push
adc
test
and
or
iret
fld
mov
add
adc
mov
nop
xchg
jle
sarl
fadds
lcall
mov
mov
mov
xchg
mov
cmpsl
outsb
inc
sbb
lcall
movsl
sub
and
inc
ds
push
cmpsl
test
js
arpl
testb
mov
xchg
inc
cmp
out
lcall
ljmp
and
mov
xor
xlat
xor
push
shl
fdivr
incl
xchg
push
data16
pop
dec
fstps
xchg
mov
pop
test
pop
mov
push
inc
ljmp
jmp
repnz
mov
jb
sbb
jmp
sbb
inc
outsl
mov
xchg
lcall
pop
jl
out
insb
out
inc
dec
nop
add
out
fldt
pop
sbb
and
loopne
xchg
jnp
decl
aad
loop
mov
xchg
pop
div
dec
jnp
mov
data16
inc
divb
dec
jmp
hlt
inc
aas
call
push
sub
push
mulb
loope
cli
dec
mov
leave
push
jg
mov
ljmp
in
sbb
leave
push
sbb
sbb
notb
decl
repz
xor
pop
xor
addr16
enter
dec
loopne
jl
push
aas
outsl
cs
mov
cltd
push
mov
jno
jo
dec
sbb
mov
sub
lcall
clc
sahf
outsb
out
dec
outsl
xlat
jo
stc
inc
mov
and
xchg
gs
pop
pop
insb
mov
std
lds
call
and
js
repnz
xchg
pop
pop
adc
repnz
jae
jle
shll
mov
std
mov
pushl
fidivs
es
sub
lock
fnsave
cmp
push
jle
sub
mov
jle
das
inc
dec
pop
xchg
dec
sub
inc
into
cwtl
push
call
dec
mov
pushf
mov
or
jbe
cmpsb
sarb
loop
dec
stc
jbe
addb
imulb
lahf
add
xchg
sub
xchg
insb
cmpsl
mov
adc
ret
ljmp
jmp
mov
xchg
cmp
or
sub
jg
sub
mov
ret
fadd
adc
mov
aas
inc
inc
push
jnp
js
pop
ljmp
int
dec
imul
enter
lods
insl
mov
xchg
ja
incl
inc
lds
push
out
fwait
add
sahf
movsl
rorb
inc
and
xlat
movb
mov
call
add
ret
add
cs
ds
outsb
inc
movb
and
in
test
mov
cmp
mov
or
dec
jle
aam
jo
mov
iret
mov
or
or
jne
notl
adc
mov
jmp
hlt
sub
cmc
push
jg
std
lret
adcb
pop
inc
rcll
nop
sbb
imul
cli
dec
scas
fnstcw
arpl
cmpsl
xor
fadds
jns
mov
jo
fmulp
lods
or
push
int3
js
mov
lea
sbb
test
xor
jmp
jbe
push
add
jns
sub
pop
mov
lahf
push
sub
mov
sbb
clc
and
dec
mov
lea
out
data16
aam
sub
mov
nop
inc
mov
pushl
insl
pusha
mov
add
lret
and
ffree
pusha
scas
mov
mov
mov
movsl
into
popa
dec
push
popa
mov
dec
negl
lds
test
mov
lcall
ss
in
fcmovb
in
push
xor
dec
jl
fmuls
sti
and
or
aaa
std
shll
cltd
rcrl
cmp
ror
jge
leave
pop
xor
xchg
aad
incl
int
les
push
xchg
jp
repz
dec
add
in
push
adc
cld
pusha
jg
push
mov
and
sbb
xor
mov
adc
cmp
stos
pop
pop
push
daa
xchg
jle
movsb
ljmp
mov
lahf
push
mov
mov
pminub
out
cld
addb
mov
insb
cltd
mov
ret
or
inc
insb
outsb
push
orl
jl
out
or
add
jmp
notl
sarb
jno
push
pop
stos
rcrb
pushl
push
mov
es
shl
pop
sbb
cmp
xchg
push
sub
cmp
jmp
or
sub
and
ljmp
jnp
sahf
clc
and
ret
jecxz
inc
dec
inc
decl
daa
xlat
loope
aad
inc
inc
adc
call
loope
add
int
ficomps
jb
adc
adc
mov
sarl
xchg
sarb
nop
iret
in
cmp
xchg
shlb
call
stos
sub
jbe
pop
add
sbb
fnstsw
aas
arpl
sub
cmp
fwait
jne
ja
cmp
divb
and
push
stc
jb
jbe
cwtl
mov
into
and
mov
insl
inc
outsl
clc
inc
cmp
out
mov
test
icebp
mov
mov
jmp
sahf
fisttps
mov
popf
mov
sub
dec
sti
xor
pop
sbb
push
mov
fcos
filds
movsl
ret
or
mov
dec
int3
pop
mulb
rcl
sbb
pop
jnp
pop
popa
xor
xchg
pushl
or
xor
cli
sbb
aad
mov
xchg
js
movsb
cltd
jecxz
xchg
aad
lock
push
lahf
mov
mov
xor
pop
lret
adc
call
jno
mov
mov
hlt
je
cmp
mov
jns
mov
mov
jmp
ljmp
mov
dec
pop
sahf
jge
mov
xchg
mov
ljmp
mov
xor
lret
ja
fidivs
cltd
xor
iret
sti
xchg
cwtl
mov
jecxz
lret
mov
inc
ror
imul
decl
shll
and
jmp
xchg
fisttpl
xor
sub
sub
mov
mov
dec
mov
or
repz
std
mov
push
xchg
push
and
dec
out
popa
lahf
mov
pop
push
xor
stos
push
repz
js
in
icebp
cwtl
lahf
sub
pop
test
lock
dec
push
out
movsb
movsl
test
out
dec
dec
lcall
fwait
lock
mov
push
sub
inc
outsb
mov
mov
and
nop
pop
jb
pop
jo
outsb
xor
mov
xchg
ud0
push
mov
push
loop
daa
push
adc
inc
nop
mov
pop
sbb
add
jnp
mov
sti
test
adc
sbb
mov
cmc
or
incl
or
mov
call
cli
pop
dec
adc
daa
lods
scas
xchg
movsb
pop
test
add
mov
decl
or
test
fldt
xor
cltd
push
jmp
lret
cltd
nop
dec
jl
mov
int3
pusha
dec
cmp
pop
push
cmpsl
mov
stos
bound
mov
decl
aaa
adc
add
adc
lahf
cmp
mov
push
and
call
fistps
lds
jb
sti
lock
call
imul
jmp
jecxz
movsl
adc
pop
in
pop
movsb
stc
jp
pop
inc
mov
popf
repz
cmpsl
lret
xchg
jmp
sub
and
xor
adc
pusha
cmpsb
sbbb
scas
jecxz
xlat
jge
jns
adc
jmp
or
or
add
mov
pop
fcoml
inc
add
ret
ret
dec
shrl
clc
mov
in
and
xchg
and
xchg
inc
dec
xchg
mov
mov
jmp
adc
in
pop
xor
xchg
roll
pushf
add
imul
fwait
inc
jg
incl
add
lods
fwait
mov
mov
or
mov
decl
cmp
or
addr16
stc
out
lock
or
dec
fdivrl
pushl
std
pushl
add
xor
pop
jb
dec
xor
mov
lea
lock
decl
mov
cltd
or
add
add
or
das
mov
mov
or
cli
mov
or
gs
and
fimuls
mov
cmc
aaa
xchg
das
stos
xor
push
data16
jbe
sub
sbb
inc
push
decl
je
mov
repz
xlat
and
fdiv
dec
test
push
inc
jle
pop
dec
jbe
decl
cmpsl
imul
out
mov
mov
out
mov
or
sbb
or
decl
mov
pop
es
mov
xchg
shlb
xchg
and
sti
push
aam
or
jmp
lock
int3
rclb
push
mov
sub
fadds
mov
mov
and
add
and
and
bound
dec
addl
jg
sub
inc
mov
es
enter
sub
jle
push
fstl
pusha
add
jmp
imul
arpl
add
push
pop
cmp
sti
cld
mov
test
lcall
mov
inc
inc
imulb
lret
mov
test
push
lahf
sub
push
cld
aas
incl
cmpsl
dec
outsl
jecxz
dec
shl
jne
add
xchg
imul
ljmp
clc
adc
adc
sbb
mov
sbb
mov
pushl
popa
mov
inc
cli
jno
push
enter
mov
outsb
fdivs
jle
fidivs
std
in
lret
lahf
jns
jb
std
mov
jg
cli
inc
decb
loopne
adcb
sub
cmpsb
jg
fsts
jge
aam
das
jecxz
ja
mov
call
int
lds
in
xchg
mov
cwtl
leave
je
cmp
jp
lcall
or
jns
lock
outsb
gs
fldenv
popf
std
in
dec
lret
imulb
repz
and
arpl
fwait
dec
test
cmp
loop
dec
test
aas
in
popf
das
dec
mov
fsubrs
shl
jnp
dec
enter
insb
lds
ljmp
mov
push
in
cmp
jecxz
xchg
in
mov
sbb
jbe
in
fmuls
sahf
call
jg
sbb
fiaddl
test
scas
addr16
xchg
pop
mov
or
decl
arpl
dec
imul
mov
sbb
loope
js
cmp
inc
adc
xor
xchg
ret
popf
push
mov
mov
xor
and
inc
pop
mov
incl
scas
test
rol
pop
fcoml
rorb
inc
push
mov
jo
lcall
repnz
testl
scas
cmp
sbb
daa
cli
dec
jb
sbbl
mov
dec
js
mov
or
mov
lcall
lcall
mov
or
cwtl
cmpsb
and
lahf
or
ret
push
lahf
jg
fsts
popa
sbb
add
jg
hlt
xor
ja
mov
fadd
incl
dec
out
xchg
xchg
inc
xchg
mov
and
jne
aaa
loopne
xchg
mov
data16
lcall
setne
adc
jge
xor
cmp
pushl
imul
jns
aad
jne
mov
cmpb
lock
ss
mov
fdivr
je
loop
push
fs
fbstp
inc
inc
adc
jae
mov
hlt
jmp
mov
or
sub
loopne
push
les
pushl
jnp
pop
ss
stc
mov
repz
inc
or
pop
add
mov
dec
mov
hlt
rorb
popf
sbb
je
out
or
and
test
xchg
and
jg
incl
inc
pop
inc
pop
add
dec
xchg
mov
xchg
das
push
sub
scas
clc
dec
push
xlat
pop
cmp
inc
bswap
mov
jo
sbb
pop
leave
pop
and
loop
pushl
mov
push
sbb
movsb
lds
repnz
flds
in
jg
stos
mov
int
ss
aam
rcl
add
jl
loopne
lcall
push
jl
lock
pop
adc
adc
leave
fiadds
push
or
js
mov
mov
loopne
imul
jle
ret
push
dec
popf
xchg
or
mov
std
push
loop
lock
lcall
out
int3
or
int3
test
jp
cmp
dec
mov
jge
jne
int3
enter
xchg
pop
sar
lea
fxch
in
es
dec
fdivrs
jecxz
out
std
fdivrp
incl
cld
test
jnp
xchg
mov
scas
fnstcw
nop
pushf
sti
push
cld
rcrl
mov
xchg
pusha
orb
cmpsl
fmulp
sbb
dec
imul
adc
out
adc
jmp
es
inc
fcmovnbe
fnstenv
jbe
adc
repnz
bound
and
inc
or
mov
adc
inc
in
cmpsl
movsb
pusha
pop
cmc
mov
pushf
xchg
std
insb
xor
test
cmp
mov
sub
dec
or
push
pop
inc
bound
loope
fdivs
dec
xchg
imul
jmp
enter
ret
adc
inc
rcrl
dec
or
jo
cmp
call
sub
jae
popf
adc
push
ret
add
xchg
hlt
xor
dec
xor
fs
mov
call
mov
mov
push
lods
enter
testb
out
icebp
iret
ret
arpl
ljmp
dec
cmp
mov
add
in
sbb
jno
hlt
push
pop
outsb
sarb
adc
call
cmp
lods
in
and
dec
add
mov
lret
jmp
test
cwtl
fisubrs
xchg
lcall
aas
mov
mov
scas
xchg
xor
ret
cwtl
dec
rorb
decl
xor
stc
jno
push
lods
cmpsb
add
out
jmp
sub
call
loopne
repnz
inc
push
faddl
or
dec
imul
ja
decl
stos
lods
cmp
sbb
sub
nop
adc
sar
jno
sahf
cmpsb
or
mov
pushl
dec
nop
cmp
subb
loop
mov
test
insl
stos
ds
sbb
test
call
pop
mov
lcall
pop
aaa
sub
les
out
int
hlt
loope
out
jmp
mov
fnstsw
xchg
fwait
test
push
or
test
cmp
in
sbb
push
jne
pop
pop
scas
push
xchg
or
repnz
cltd
ds
mov
ja
jmp
cld
lret
adc
fidivs
leave
shll
test
nop
ret
pushl
jge
dec
mov
pop
mov
test
test
subl
movsl
mov
mov
jmp
cmp
xchg
test
sub
add
iret
xor
jmp
sub
pushl
fisubs
mov
inc
inc
loope
and
shrb
lcall
mov
ljmp
jae
jo
push
arpl
aaa
out
cwtl
cmp
ss
mov
or
mov
jo
adc
inc
incl
or
xor
mov
mov
xchg
mov
xchg
cli
jnp
or
inc
lds
adc
cmp
pop
xchg
mov
js
cld
aad
leave
cwtl
bound
ffreep
push
notl
inc
insl
std
pushl
pusha
dec
mov
sbb
cmp
sbb
and
lcall
xor
mov
rcll
movsb
pop
loope,pn
ds
cmp
outsb
repnz
bound
daa
push
cmp
incl
scas
out
jle
cld
pushf
scas
add
stos
out
int3
jns
mov
jbe
fisubl
iret
mov
out
pop
movsb
shlb
xor
insb
rcrb
decl
add
std
gs
scas
ds
into
aas
dec
push
test
outsl
sbbl
add
in
decl
jp
or
dec
add
xchg
cld
fcmove
pusha
sbb
mulps
mov
cltd
inc
jle
pop
sahf
inc
aas
jno
sbb
and
dec
sub
sbb
or
ljmp
jae
dec
jg
ds
mov
lret
hlt
pop
mov
mov
aaa
iret
mov
cmpsb
stc
fadds
dec
mov
mov
lret
push
inc
xor
push
dec
add
pop
sub
dec
lret
or
int
ret
inc
loope
and
or
sub
mov
or
jp
test
pop
scas
sahf
in
shr
jge
fdivrs
insl
push
test
ljmp
cmp
push
movsb
stos
jns
in
in
ljmp
insl
popf
xchg
stos
jmp
adc
or
add
lock
push
mov
xchg
outsl
sti
mov
jns
dec
pop
and
insb
js
mov
or
aas
sarl
fcompl
call
mov
mov
fstpt
jmp
pop
jo
aas
pushf
mov
dec
inc
and
cmp
loop
movsl
push
ret
inc
and
loope
sub
sub
pop
adc
ljmp
or
idivl
imul
movsb
cmp
mov
loopne
stos
in
movsb
pop
lock
cmp
outsl
xlat
out
leave
lods
dec
dec
adc
popa
lcall
clc
xchg
lret
lret
scas
aam
push
push
stc
pop
dec
popa
xchg
lods
push
jbe
ss
out
incl
push
nop
pop
inc
clc
sbb
or
cmp
sbb
pushl
test
test
mov
jecxz
xor
pop
and
lcall
aaa
inc
mov
sbb
scas
es
leave
test
mov
orb
nop
loopne
dec
add
fldl
pop
outsl
sbb
mov
mov
mov
dec
fmulp
jecxz
ljmp
cmp
mov
sub
lret
xor
negl
mov
mov
addr16
sti
pop
outsb
in
cld
or
icebp
mov
add
insb
sbb
testb
gs
decl
loop
test
daa
add
xchg
mov
adc
mov
jle
lret
cmc
jmp
cmc
scas
inc
xor
call
or
movsb
fisttpll
incb
mov
lcall
adc
aaa
bound
dec
leave
nop
ret
jno
mov
and
pushf
shr
mov
decl
or
iret
inc
push
mov
in
sbb
mov
out
pop
xchg
add
loopne
inc
jmp
add
fcmovu
ds
xor
cmp
pushl
jns
sbb
fdivrl
adc
sbb
sub
cmpl
or
push
push
ljmp
mov
xchg
das
arpl
rorl
push
jae
xor
imul
loope
ret
imul
inc
rcl
cmp
clc
xchg
shll
into
mov
cmp
aaa
mov
roll
cmp
ljmp
inc
inc
cmpsl
cmp
dec
cmp
nop
jmp
xchg
cmpb
call
xor
mov
rcrb
ffree
ret
mov
fsts
test
addr16
and
call
movl
ja
jbe
cld
mov
ss
lods
fists
inc
or
aas
ljmp
inc
pop
cltd
fdiv
in
sub
pop
cmovge
mov
or
call
loopne
pop
inc
nop
adc
mov
xchg
lods
add
sbb
mov
dec
inc
xchg
mov
mov
mov
mov
push
mov
dec
push
cld
pop
mov
scas
in
test
pop
xor
mov
xorl
xor
iret
push
adc
mov
test
or
mov
decl
bound
outsl
aaa
lods
imul
push
xor
mov
filds
fs
inc
and
xor
scas
loop
sub
nop
lcall
xchg
sub
ficomps
adc
movsl
js
xor
dec
dec
push
enter
sbb
pop
cmp
mov
jg
lret
dec
mov
jae
mov
fisubl
sub
sbb
fisttps
cwtl
and
xor
rclb
xchg
inc
rorb
outsl
incl
adc
dec
add
jo
or
or
add
mov
jo
stos
sub
cmp
xchg
shlb
and
decl
jne
cli
push
cmpsl
out
fwait
test
stc
xor
cmp
or
popf
mov
decl
lods
outsb
and
scas
mov
out
aaa
aad
ljmp
hlt
aaa
jo
cmp
lock
lods
adc
shl
movb
lock
cmp
fdivl
jo
test
xchg
xor
mov
dec
in
add
stc
pop
or
or
xchg
lock
pop
sub
cmp
xchg
imul
lods
jl
out
adc
mov
or
adc
mov
adc
dec
push
ljmp
and
or
dec
jno
cmpsb
mov
adc
out
lods
addr16
dec
adc
mov
data16
jb
jmp
mov
fnstenv
dec
adcb
rorl
in
sbb
std
enter
jge
imul
cmp
pusha
fwait
pop
idiv
mov
add
shl
mov
int3
lcall
out
mov
or
nop
outsb
pushf
push
rcl
stc
adc
call
jmp
je
adc
jmp
mov
loope
mov
lods
incb
mov
dec
jo
jp
pop
and
pop
or
sbb
inc
cli
daa
aam
ljmp
and
scas
fisttps
and
xchg
mov
xlat
pusha
fsubp
push
movsb
mov
cmp
mov
out
cld
es
nop
jne
sarb
jmp
add
pop
std
incl
dec
scas
sub
js
aaa
cmp
popa
outsl
cltd
or
xchg
inc
andb
mov
in
fildll
adc
push
cmp
sub
fadd
dec
pop
dec
sarl
decl
cmp
dec
movsb
mov
loope
pop
mov
cltd
xor
adc
dec
jge
xchg
das
fnstcw
jp
ja
repnz
loopne
nop
sbb
xchg
dec
cs
push
jmp
cmpsb
mov
xchg
sub
pop
jg
clc
outsl
ror
test
in
fs
clc
hlt
xchg
pop
icebp
incl
into
ljmp
mov
gs
fs
lods
jp
mov
sbbb
fwait
scas
push
pop
sbb
pop
mov
mov
jg
add
pop
sbbb
inc
mov
sub
adc
cmp
icebp
test
fwait
sti
daa
mov
push
cmc
push
mov
gs
cld
jmp
arpl
loopne
dec
int
push
push
pop
iret
xchg
jecxz
xor
sahf
movsl
adc
loop
ljmp
xchg
sbb
fs
sti
xchg
cltd
loop
dec
adc
xor
push
xor
inc
cwtl
mov
fidivl
cltd
sahf
nop
xchg
into
jg
or
push
clc
push
inc
jle
dec
mov
aas
sbb
fisttps
pushl
in
cmpsb
iret
lods
xchg
pop
mov
or
icebp
mov
add
or
and
sti
inc
stos
sbb
xor
or
iret
bnd
jbe
std
call
add
pop
dec
je
inc
cld
call
jl
rorb
pop
mov
xchg
xchg
push
push
inc
outsb
lret
sub
ljmp
stc
imul
lcall
adc
sub
xlat
mov
rorb
clc
dec
cmp
push
call
mov
cmp
mov
inc
sub
fwait
or
mov
out
mov
loopne
repz
jg
cmc
pop
ror
mov
inc
adc
add
and
jns
insl
nop
pushl
xchg
mov
inc
adc
pushf
jge
push
mov
sbb
rorb
cmp
pushl
js
pop
mulps
adc
aam
fnstenv
sub
stos
iret
mov
cmp
out
inc
jl
sub
sti
aaa
cmp
and
mov
push
sbb
inc
cs
jge
push
xor
cld
or
sub
jb,pt
push
mov
jmp
sbb
jae
pop
scas
xor
imul
add
or
hlt
inc
add
lcall
push
aaa
mov
sbb
mov
jbe
mov
pop
sub
dec
jns
enter
shll
call
dec
int
cmp
rorl
add
ja
loopne
push
dec
push
sbb
jmp
inc
sub
xlat
jge
and
mov
xchg
mul
sbbl
repz
ja
lcall
testb
out
xor
cmp
cmp
insl
pushl
and
sub
add
insl
mov
out
insl
ss
aas
or
fwait
mov
push
call
add
pop
pop
mov
mov
push
pop
cmpsb
sbb
pushf
iret
inc
scas
dec
aad
pusha
push
pop
jmp
fimuls
repz
addr16
pop
push
mov
imull
cmp
movups
push
int3
in
cmc
call
xor
std
sbb
lret
lcall
outsl
cmp
in
das
shrl
shlb
loop
inc
adc
mov
jecxz
add
incl
pop
fdivr
test
test
aaa
mov
aam
add
adc
adc
pop
mov
insb
std
outsl
cli
incl
inc
jo
lret
aaa
mov
jns
mov
gs
movsl
fbld
ljmp
dec
dec
sti
movsb
sbb
adc
mov
cmpsb
cltd
push
lock
addl
pushl
jmp
xchg
fcoms
and
xchg
mov
or
addr16
push
int
call
adcl
xor
loopne
mov
cmp
adc
cs
hlt
inc
inc
movsl
incl
outsl
and
cmp
leave
pop
clc
movsl
and
cmp
adc
push
outsb
cmc
test
mov
imul
pop
fisttps
lea
aam
adcl
pop
iret
jbe
js
add
mov
mov
inc
sti
stc
adc
and
fwait
mov
jl
fs
test
fadds
aad
incl
popf
addb
lahf
pop
xor
inc
insl
mov
add
jg
idivl
dec
lret
jbe
scas
xchg
or
ljmp
mov
insl
cli
or
jnp
inc
andl
jg
cli
dec
test
pop
es
sbb
in
xchg
mov
decl
mov
xchg
sbb
mov
cmp
fdivrl
cld
jns
jecxz
aam
mov
divb
ljmp
xchg
inc
xor
pusha
lret
push
int3
and
insb
js
enter
xchg
popa
or
dec
mov
cmp
jg
out
cmp
mov
es
roll
xchg
fistps
das
addr16
pop
js
jg
mov
adc
mov
icebp
push
jae
push
loop
dec
imul
mov
lcall
repnz
mull
push
out
xchg
adc
or
sbb
sahf
push
bound
test
call
cmpsl
into
push
insb
inc
xchg
cmpsb
lret
test
xchg
mov
add
sub
daa
push
mov
das
sar
rcll
shlb
jg
sub
jp
ja
adc
into
push
ljmp
clc
jmp
pop
push
or
push
out
loopne
leave
adc
ret
cmpsl
incl
rolb
sbb
cwtl
fmuls
cld
mov
cmpsl
scas
je
lea
fs
dec
pop
xchg
lea
int
es
push
xor
sarb
sti
fadd
paddsb
outsl
dec
sar
jmp
cmp
or
xchg
mov
push
fidivs
mov
call
das
inc
push
mov
mov
in
negl
lea
loope
out
adc
jg
lcall
cli
movb
mov
scas
dec
sbb
sub
jnp
sub
into
sbb
nop
dec
sbb
nop
jg
ljmp
mov
movsb
das
inc
push
fiaddl
call
xchg
test
ljmp
aam
jl
es
push
adc
mov
test
xbegin
gs
out
or
cmpsb
decl
sbb
push
imul
xchg
mov
and
aas
mov
push
jne
pop
cld
cmp
lds
or
mov
dec
cmp
xor
lcall
lods
mov
push
sub
sub
push
js
sbb
ljmp
decl
dec
les
sub
aas
jmp
jle
sub
push
mov
sbb
imul
mov
mov
push
pop
lds
loope
cli
adc
in
or
inc
insb
lods
add
rolb
lret
pop
orl
lock
push
ret
mov
fdivrl
in
lret
loopne
pop
or
test
ret
mov
call
call
mov
hlt
fcmove
pop
push
jecxz
adc
adc
inc
pop
inc
inc
lods
out
fdivrp
ljmp
or
fwait
loopne
cmpsl
push
inc
pop
in
adc
cmp
lcall
aad
lcall
orl
mov
cltd
mov
addr16
sbb
cld
jg
xor
loope
dec
aaa
xorb
iret
rdmsr
movsb
push
mov
into
mov
or
ja
pop
cltd
mov
lret
incl
sbb
decb
xor
mov
movsb
inc
fs
pop
mov
or
fmul
pusha
ret
aad
push
js
jg
xchg
movsl
ds
mov
decl
add
adc
arpl
ljmp
jnp
mov
call
jns
mov
loop
push
xchg
jns
cmpsl
out
cmp
xchg
mov
imul
mov
movsl
insb
aaa
mov
or
decb
push
movsl
xlat
das
pushf
lret
addb
mul
out
xchg
fdivs
cmp
mov
xchg
loop
and
pushl
insb
pushw
push
sbb
push
pop
pop
and
pushf
icebp
das
sbb
enter
pop
ljmp
repnz
cmp
fs
cmpsb
stos
adc
jmp
and
das
xchg
push
mov
jns
sbb
xchg
mov
cmp
in
pop
and
cmpsb
xchg
icebp
pop
inc
mov
imul
mov
mov
mov
adc
sub
lcall
adc
cwtl
jmp
fdiv
fisubl
mov
fildll
int3
shrb
xchg
xlat
add
inc
mov
sbb
sti
cmp
imul
into
aaa
orl
push
ds
stos
int
jae
sub
bound
fucomip
xchg
inc
mov
add
pusha
cld
fs
sbb
in
pop
dec
inc
jg
sbb
sub
shrb
cmpsl
scas
pop
push
outsb
push
imull
call
xchg
ror
mov
jb
jne
lds
pop
mov
addr16
mov
aas
aaa
int
jae
pop
add
imul
imul
jg
xor
cmpl
insb
sub
ds
push
mov
dec
out
dec
outsb
mov
jecxz
lcall
xor
lods
imul
js
and
scas
add
push
push
jl,pn
mov
mov
ljmp
das
fstps
push
or
shrb
das
int3
push
and
stos
int3
mov
adc
adc
ljmp
jae
imul
data16
mov
incl
cmp
ficompl
pop
mov
xchg
and
xor
push
mov
test
inc
xor
sar
sub
decl
add
sbb
mov
cli
dec
mov
into
fwait
inc
mov
or
pop
sub
notb
adc
fimuls
das
into
sbb
repz
mov
ja
sub
dec
out
out
aaa
xchg
add
ss
popa
sbb
data16
addr16
mov
xchg
std
cmpsb
ret
pop
stos
je
leave
push
cli
xor
lcall
cli
clc
lcall
dec
push
lret
sub
js
xchg
mov
and
jne
push
adc
gs
sbb
sar
out
push
dec
stos
mov
pop
or
jo
stos
pop
fcompl
or
mov
jg
inc
or
cltd
pop
mov
mov
outsl
xchg
mov
mov
imul
cmp
mov
insb
outsb
not
out
push
shr
sub
jmp
or
bound
adc
call
ficoms
mov
into
pop
outsl
push
mov
push
xchg
push
pop
push
sub
xor
insb
cmp
jmp
lods
inc
lods
dec
and
and
mov
jo
mov
subb
mov
xchg
jae
push
xlat
sub
mov
adc
int
mov
into
mov
mov
into
mov
push
pop
dec
mov
xchg
outsl
dec
mov
pop
or
movsb
subl
sbb
lods
fstpt
mov
dec
pop
jb
leave
xlat
fbstp
popa
or
sbb
adc
aaa
mov
xor
jmp
cwtl
imul
xor
jns
outsl
cld
mov
hlt
xor
xlat
test
decl
aaa
dec
jo
dec
test
cmc
bound
psubb
sub
incl
pop
lock
jle
mull
and
and
sub
and
lds
incl
lcall
pusha
inc
or
jl
mov
sub
jp
cmc
jns
out
jmp
or
imul
cmp
xchg
cmp
ret
pop
mov
dec
popa
ja
jbe
jns
aam
enter
bound
pop
shlb
mov
outsb
cmpsb
jno
sbb
sarl
outsb
push
sbb
cld
imull
sbb
cmp
popa
jno
sub
sub
dec
push
sub
mov
decl
repz
fwait
push
test
js
cmc
pop
push
sub
mov
jp
lcall
or
mov
sbb
mov
sahf
mov
push
inc
jle
jbe
push
mov
int3
orb
xchg
add
sub
aas
fldcw
inc
mov
aam
iret
pusha
out
push
push
ljmp
and
das
adc
pop
adc
add
ja
jmp
xchg
push
andl
push
xchg
jnp
mov
pop
sub
jmp
dec
sub
pop
push
xchg
pop
fcompl
mov
lahf
into
into
xrelease
mov
cli
incl
pop
mov
flds
inc
adc
fbstp
fwait
ds
aaa
es
ljmp
adc
pop
mov
fdivr
add
pop
xchg
jge
test
cli
xchg
xchg
push
ljmp
mov
and
lds
repnz
int
fadds
loope
cmpsl
mov
sbb
cwtl
dec
mov
popa
decl
xchg
pop
jo
mov
je
pop
xchg
mov
out
dec
mov
mov
mov
imul
jne
push
rcrb
shrb
incl
popl
xlat
addr16
dec
xorb
out
pusha
add
mov
gs
inc
sub
sbb
incl
sti
stos
out
leave
and
repz
nop
imul
pop
mov
or
mov
add
cwtl
pop
pop
sbb
in
adc
aas
inc
cmp
lret
lcall
lret
rorb
insb
aad
jp
pop
mov
popa
jle
adc
out
test
pushl
cmp
mov
xchg
jmp
adc
sbb
test
add
mov
lcall
decl
cld
aas
andl
rorl
mov
cmp
ljmp
mov
mov
aad
or
add
loop
pop
jns
mov
and
jmp
dec
out
xor
rcrl
cmp
adc
cmp
cmp
mov
cmpsl
testl
pushl
pop
cmp
dec
cmp
test
sub
or
daa
bound
scas
mov
loope
cli
incl
inc
adc
pop
bound
dec
mov
leave
test
incl
lcall
add
movsl
dec
jge
mov
arpl
add
incl
push
ss
mov
xchg
lret
fwait
mov
sahf
repnz
in
dec
repz
dec
jp
neg
jns
mov
cmp
ss
and
in
mov
std
or
pop
aaa
jle
dec
adc
les
lods
cmp
inc
je
outsb
push
ljmp
push
cwtl
cltd
lds
dec
and
jecxz
inc
cmp
mov
xchg
mov
icebp
incl
aad
cmp
inc
hlt
in
xchg
mov
sub
incl
push
lret
imul
jns
jecxz
push
pop
lret
stos
jae
adc
call
repz
hlt
push
sbb
ficoms
and
inc
inc
ret
sub
cli
sbb
or
imul
aaa
xor
push
ljmp
sar
call
inc
dec
mov
mov
loop
fisttpl
decl
mov
xchg
nop
addr16
or
repnz
inc
in
cmpsl
mov
mov
sti
lahf
incl
mov
cli
jle
sub
push
add
inc
mov
or
mov
fdivr
mov
jge
loope
fwait
lods
or
hlt
sub
addr16
cmp
xor
int
hlt
sar
std
call
xor
incb
xchg
push
cmp
inc
daa
mov
cltd
ss
outsl
pop
cld
ljmp
arpl
sbb
mov
out
sbb
xchg
pop
mov
cld
das
mov
ret
std
shlb
rorb
jle
inc
cmp
aaa
cld
jge
xor
fisttpll
aaa
mov
in
pop
dec
shrb
lcall
mov
add
lahf
cltd
jmp
mov
sub
ret
add
sub
jmp
ljmp
push
nop
js
bound
idivb
lock
fldln2
addr16
or
mov
push
sti
bound
orb
pop
mov
out
lods
insl
pop
xchg
mov
xlat
decl
xchg
jbe
mov
and
stos
rcrb
cmp
pop
incb
fcomip
cmp
adc
adc
andps
or
push
jg
addr16
adc
inc
jns
das
inc
inc
fcmovnu
ss
outsb
int3
push
mov
dec
lahf
pop
cmp
xor
mov
shr
inc
inc
dec
mov
in
jno
cs
leave
and
mov
inc
scas
fdivrp
jbe
mov
and
ljmp
mov
dec
loop
shrl
or
lahf
jns
push
pop
clc
adc
js
mov
incl
sub
out
push
mov
or
jmp
rorb
xchg
pop
addr16
dec
inc
cmc
mov
sbb
pop
fcmovu
or
mov
inc
and
mov
fbld
push
out
ret
mov
mov
nop
mov
aaa
repz
fiaddl
lret
js
out
push
mov
div
aaa
pop
cmpsl
ds
sarb
push
loopne
sbb
jmp
aam
ljmp
into
xor
mov
xchg
popf
movsl
cltd
mov
dec
icebp
ljmp
pusha
push
lret
cmp
add
xchg
mov
xor
xchg
sbb
pop
and
shlb
xchg
xor
cmpsb
adc
jmp
jb
push
cmpsb
cmp
fistpl
add
inc
test
pushf
lahf
leave
push
call
aad
xor
push
scas
clc
mov
dec
popa
jne
push
in
push
stos
add
mov
jnp
jne
bound
jmp
pushl
sahf
pop
push
sub
mov
sbb
adc
cltd
mov
and
jmp
stos
or
jg
enter
mov
dec
stos
sub
push
xchg
das
in
xor
std
pushl
sub
or
and
cmp
aas
lret
stc
sbbl
call
add
mov
call
stos
sarb
pop
pop
lahf
idiv
jmp
sub
inc
fildl
fsts
das
push
cs
stc
mov
loopne
pop
call
mov
cwtl
jno
xlat
repz
jle
jnp
mov
or
mov
or
dec
sbb
sub
mov
adc
and
mov
incl
fs
jmp
bswap
or
repz
xor
scas
cli
decl
jmp
adc
jnp
adc
call
ret
cmpsb
bound
cmp
pop
cld
dec
repz
cmp
xor
cmc
jecxz
out
jle
push
es
push
cmp
pushl
cmpsb
sub
int3
ja
xbegin
out
fs
inc
sarl
cltd
test
push
insl
imul
das
repz
add
sbb
lcall
jnp
inc
sub
outsb
cs
push
cmp
xor
push
mov
pop
inc
push
jb
repnz
fucomip
in
dec
mov
out
dec
xchg
out
xchg
push
movsl
add
cmp
imul
mov
mov
ljmp
and
xchg
aaa
jp
mov
xchg
pop
push
lods
sbb
and
pop
mov
jecxz
imul
pushl
in
pop
pop
xchg
jmp
pop
aaa
lea
pop
sub
pop
inc
dec
jp
and
ss
incl
int3
roll
sahf
ret
js
fistps
mov
fmuls
sbb
pop
or
std
fcomip
or
sbb
popa
int
iret
scas
pop
adc
int3
jmp
adc
call
inc
dec
ds
outsl
xchg
inc
jl
jae
xchg
cmp
xchg
sbb
out
push
scas
mov
repnz
call
dec
or
popf
push
mov
and
sbb
inc
push
inc
fucomp
loopne
int
dec
cmp
jae
int
call
mov
daa
dec
xor
xchg
std
lret
lret
xchg
aam
pop
sti
jno
dec
mov
sbb
push
cmpsl
incl
cmp
cli
leave
pop
jecxz
addb
loop
lahf
push
push
arpl
shlb
daa
ret
push
int3
push
sahf
data16
and
addl
movsl
jle
out
decl
icebp
test
mov
push
push
jo
lahf
cmp
mov
xchg
sub
mov
daa
pop
push
mov
repnz
fidivrs
ljmp
pusha
jbe
dec
pusha
clc
call
sub
into
pop
push
xor
arpl
add
mov
fucomip
mov
testb
sahf
ss
cmpsl
iret
pop
cmp
mov
cmp
ljmp
jle
push
pop
mov
mov
dec
rclb
cli
inc
sbb
shl
jo
pushl
ss
fists
insl
jp
mov
xchg
enter
push
cmc
mov
mov
insb
inc
push
xchg
test
sahf
testb
outsb
or
push
bound
adc
incl
add
jecxz
inc
das
movsb
pop
mov
dec
cmp
fbld
mov
jmp
mov
pop
ds
cmc
push
enter
fwait
lock
decl
cmpsl
pop
mov
aaa
outsl
pop
xchg
testl
or
add
jbe
fadd
jmp
cli
nop
lret
add
sahf
inc
nop
and
test
adc
fcoml
adc
movsl
sti
out
or
jmp
and
loopne
std
pushf
sbb
mov
inc
mov
xlat
xchg
jge
dec
adc
incl
dec
outsl
loopne
jns
and
sbb
adc
popa
cmp
mov
mov
pushf
addr16
scas
inc
dec
test
add
mov
rorb
mov
cmc
clc
inc
add
cld
jb
fwait
mov
aas
xlat
push
dec
sub
ljmp
jne
xchg
pushf
cmpsl
pop
popa
je
jo
scas
mov
push
out
in
mov
ljmp
clc
stos
cltd
scas
jns
addb
adc
rep
ljmp
push
rorb
addr16
mov
ficompl
mov
das
andb
pop
cld
mov
xor
push
or
xchg
ljmp
dec
fs
push
push
cmp
lret
in
or
fidivs
dec
jmp
add
lock
leave
lods
add
addb
xor
mov
xor
mov
dec
xchg
jle
mov
push
les
cmpsl
push
hlt
shll
js
xchg
call
pop
sbb
cld
out
test
pop
jge
mov
cwtl
push
cmp
ja
cs
leave
mov
lahf
in
das
lods
pop
dec
push
hlt
push
jns
ret
fcomp
xor
mov
test
insb
push
fdivp
lds
xchg
inc
mov
or
mov
pushl
inc
roll
mov
ljmp
test
push
ds
mov
fstps
mov
cmp
sub
dec
nop
jmp
add
shrb
pushl
idivb
sub
jns
push
loop
test
adc
call
in
sub
cmp
stos
mov
or
ret
outsb
lcall
filds
cmp
lcall
test
mov
aad
cmpb
pop
std
pop
mov
lods
push
cmpsl
test
pop
gs
icebp
mov
dec
xchg
fnsave
sti
adc
and
repz
bound
call
movsl
pop
insb
dec
pop
test
imul
loop
mov
imul
pop
gs
mov
cmp
imul
dec
pop
xor
mov
xchg
mov
mov
sub
jo
mov
sbb
aas
add
je
ljmp
add
das
mov
loope
sbb
pop
leave
or
pop
mov
test
ficomps
test
adc
cs
ss
xor
incl
mov
clc
bound
movsb
mov
scas
mov
incb
clc
inc
pop
lcall
gs
and
outsb
loope
int
push
push
inc
or
insl
enter
mov
dec
mov
pop
xchg
adc
enter
jecxz
and
mov
movsb
xorl
lea
ss
xor
xchg
push
mov
xchg
mov
ljmp
into
mov
push
jle
sbb
sub
pop
mov
out
inc
and
push
cmp
jle
inc
aad
push
or
pop
fwait
or
aas
ret
xchg
mov
cmp
daa
push
ljmp
xor
fnsave
inc
aaa
call
pusha
add
and
repz
bound
jg
loope
jo
cmp
outsl
mov
jb
push
mov
xorb
inc
lcall
adc
lods
or
push
out
addb
cmp
mov
mov
xor
xor
cmp
aam
push
out
mov
clc
mov
out
adc
add
pop
xchg
cmp
push
jbe
out
test
addb
cmp
mov
xchg
ljmp
sub
pop
test
or
and
out
aad
scas
pop
or
inc
push
pushl
mov
jbe
lahf
jne
push
inc
loop
jg
xor
or
adc
dec
mov
dec
rolb
daa
loop
dec
imul
xor
jns
or
out
mov
add
pop
cmp
stc
inc
iret
loop
add
loopne
jmp
add
xchg
out
arpl
jmp
loope
mov
xor
xorb
xchg
xchg
call
inc
pushl
cmpb
loope
jg
push
neg
in
stos
std
mov
jg
rorb
pop
lock
decl
dec
sti
jle
pop
add
leave
jl
mov
mov
fstl
imul
ljmp
and
push
shrl
sbb
stos
pusha
lret
inc
xchg
imul
in
lret
rcrl
ljmp
inc
ljmp
cmp
inc
pop
xchg
ret
adc
mov
lods
je
jmp
pop
lock
pop
adc
xchg
push
jae
mov
sbb
jns
and
test
mov
and
jmp
mov
mov
shl
lahf
or
shrl
mov
int
iret
push
out
aad
pushl
mov
cmp
jl
jecxz
fildl
pop
dec
sub
add
call
testb
cs
inc
cld
or
inc
mov
aad
lock
out
xchg
xor
jecxz
jmp
das
decb
ret
sub
jmp
jnp
cmp
cmp
or
test
mov
pop
adc
xchg
push
or
add
mov
inc
movl
adc
jecxz
sbb
decl
mov
sti
nop
sub
add
sbbb
js
mov
push
xor
or
push
push
push
les
mov
ret
adc
inc
shlb
cmp
pop
dec
in
fmul
dec
sub
outsb
icebp
jmp
lret
adc
sub
jne
adc
xor
xorl
push
mov
lcall
inc
mov
xchg
sbb
jns
adc
out
jne
fidivs
cmp
sar
push
jl
xchg
add
imul
call
mul
lds
jmp
inc
addb
mov
fsubrs
aad
out
push
and
aad
sbb
imul
or
push
clc
dec
iret
ret
cmp
js
push
cmp
out
xchg
jne
fs
dec
pop
fstpl
rorb
or
jnp
ret
xchg
adc
cmp
mov
inc
fidivl
jo
sarl
jge
arpl
ret
jns
adc
xchg
pop
mov
push
call
xchg
das
mov
inc
outsb
mov
inc
pop
stos
shrb
or
incl
clc
adc
and
sub
in
inc
mov
pop
xchg
fisubs
push
jmp
loop
add
pop
pop
cli
adc
adc
pop
mull
cltd
xchg
fdivr
in
push
add
sub
mov
imul
dec
jno
xlat
ret
daa
test
repz
ljmp
cltd
and
popf
or
xor
les
bound
fisubs
adc
enter
jo
lret
cmp
mov
pop
inc
mov
pop
movsl
mov
cmp
aad
dec
jns
mov
pop
addr16
xor
or
xor
call
outsb
mov
das
roll
mov
pop
mov
cmc
xchg
jbe
sbb
ljmp
jp
add
cltd
xchg
pop
shrl
lcall
jmp
push
mov
rolb
inc
das
jbe
gs
mov
popa
testb
lret
mov
aaa
or
xlat
mov
fsubrs
mov
das
popf
dec
incl
mov
movsl
out
iret
pop
daa
int
mov
xchg
popa
ljmpw
fdivrs
js
cmpsb
fildl
pop
or
mov
sbb
jbe
hlt
incl
pop
subb
push
das
xchg
push
jecxz
sub
pop
jl
inc
scas
or
test
sar
lcall
and
dec
dec
sbb
lahf
xor
mov
sbb
push
mov
xor
ss
jge
and
inc
imul
out
shll
sti
xchg
jp
xor
dec
call
imul
add
stos
push
popa
loopne
dec
and
lods
xchg
cmp
or
test
mov
mov
dec
leave
mov
stc
stc
xor
push
dec
dec
inc
adc
sub
aas
push
iret
cmpb
adc
pop
cmc
lahf
mov
decl
hlt
pop
andb
push
sti
loope
les
sbb
into
int3
pop
pop
dec
xor
clc
pushl
test
pop
add
push
ficomps
ror
jl
or
adc
sbb
and
shlb
push
aaa
or
mov
push
push
fstps
lret
into
repz
adc
and
loopne
lock
jmp
xchg
mov
loope
and
mov
cmpsb
mov
push
push
push
adc
clc
jno
xor
repnz
pop
imul
ss
jae
pusha
cmpsl
stos
cs
ret
lcall
incl
pop
pop
inc
aam
add
cmpsl
push
push
and
pop
mov
out
cli
mov
es
cmc
out
dec
lret
push
pop
ss
mov
into
jno
out
cli
mov
call
sub
scas
and
in
mov
mov
lods
push
or
sar
mov
inc
aas
sbb
inc
sbb
lods
adc
leave
xchg
pop
ss
call
xchg
jle
sahf
cmp
xor
adc
testl
pop
into
insl
push
sbb
jmp
dec
in
cs
xlat
cltd
lret
mov
cld
mov
jecxz
cmc
dec
movsl
xor
adc
xor
decl
pop
sbb
xchg
aas
push
inc
or
ret
fwait
lock
js
add
cmpl
inc
cwtl
jne
cwtl
jo
mov
fidivs
jmp
jmp
shrb
rclb
loope
insb
inc
mov
mov
leave
push
cld
or
xchg
mov
test
ds
iretw
je
out
sub
adc
xchg
cmp
pushl
insl
je
dec
jns
stos
sbb
adc
pop
xchg
rcrl
mov
adc
add
pushl
jbe
dec
pop
in
test
adc
xchg
clc
add
jae
jb
ret
lea
lcall
mov
jg
mov
cmp
mov
gs
fwait
decl
add
int3
loope
inc
push
test
lock
mov
inc
dec
mov
add
adc
pushl
xlat
adc
cmp
push
repnz
and
push
fwait
cmpsb
insl
incb
outsb
sub
push
mov
add
loop
sbb
jg
jg
dec
push
jae
cli
xchg
out
hlt
dec
cmp
sbb
cmp
jmp
shlb
push
jl
out
pop
rcrb
push
and
psllw
cmp
add
fisttpl
sti
jbe
xor
push
sahf
mov
fidivs
pop
xchg
out
mov
out
jmp
das
xchg
adc
mov
je
pop
adc
roll
lods
call
ljmp
mov
adc
adc
push
inc
sarb
pop
mov
test
jno
cmpsb
movsl
call
sub
or
pop
xor
insb
inc
icebp
enter
mov
or
stos
decb
pusha
roll
jno
mov
pop
jg
lret
ja
inc
pop
push
inc
out
pushf
sub
lods
or
imul
add
mov
pop
std
adc
sub
add
xchg
dec
sbb
pop
lods
stos
or
pop
push
int3
dec
test
xchg
into
inc
es
push
mov
aam
sbb
pop
pop
mov
dec
in
xchg
push
lahf
imul
das
imul
mov
int
fidivrs
push
cmp
push
fwait
int3
adc
jmp
mov
je
clc
jmp
and
sbb
scas
jp
hlt
and
push
mov
lea
ljmp
lods
aas
pop
scas
push
insl
cmp
xchg
cmpsl
dec
jge
lahf
mov
adcl
popa
lods
mov
call
xor
mov
mov
sbbl
push
or
stos
jns
fdivrs
fcomip
int
mov
sahf
rcrl
imul
leave
sub
sahf
mov
sahf
cmpsl
cltd
push
inc
loop
mov
sub
jb
and
mov
mov
mov
jg
imul
push
or
ret
xchg
inc
int3
aad
daa
add
popf
mov
xchg
jne
imul
adc
bound
xor
les
sub
jmp
or
dec
or
stos
cmp
mov
int3
sub
pop
and
int
ret
jecxz
mov
mov
jecxz,pt
jg
xor
inc
imul
stos
clc
test
jp
xorl
mov
mov
jge
sub
cs
cli
jmp
jo
sbb
inc
fucomip
mov
xchg
sti
aad
mov
lcall
fidivrs
rorb
pop
xchg
sbb
jg
sub
jecxz
mov
mov
jmp
test
xlat
xor
aad
lds
iret
xor
push
mov
dec
sub
push
jg
mov
cmp
lret
test
xchg
clc
cwtl
fldt
inc
or
call
cmp
sbb
aam
sarb
jbe
push
jmp
push
stos
adc
incl
pushf
mov
test
mov
shll
ds
lret
js
add
decl
fnsave
dec
mov
aad
std
jge
aas
fnstenv
pop
mov
repz
call
push
dec
shlb
mov
mov
lds
in
sbb
and
mov
jo
cmp
adcl
mov
mov
repz
ret
in
lcall
jmp
jle
jo
cmpsl
lock
in
in
mov
daa
jecxz
dec
dec
cmc
push
adc
ljmp
xchg
les
jecxz
stc
xor
into
dec
gs
xchg
loope
clc
cli
ljmp
jmp
sub
and
add
test
push
cmpl
jmp
dec
xchg
movsb
icebp
xor
or
jnp
in
cli
pop
cmc
push
sarb
pushl
dec
icebp
jecxz
and
loope
addr16
mov
jl
add
push
mov
je
push
mov
jo
gs
xor
and
shrb
mov
shrl
out
mov
js
js
hlt
inc
rcl
outsb
dec
push
or
shlb
js
or
shrl
lea
jb
incl
fadd
cmp
test
add
hlt
pop
popa
push
sahf
paddw
mov
sbb
fcomip
das
xchg
xchg
call
or
je
shll
aaa
fs
incl
stos
lods
jmp
and
xchg
clc
cmp
xchg
stos
sbb
push
xchg
popf
push
stos
test
in
mov
add
cmp
sub
mov
int3
pop
ljmp
jecxz
cli
in
fidivl
call
lcall
out
and
aaa
pop
jle
mov
add
adc
xor
jmp
xor
icebp
outsb
int
repnz
je
dec
stc
ds
shrl
aaa
mov
out
jne
jns
fistl
xlat
sti
call
sub
addb
sub
clc
sbb
sbb
dec
stos
mov
mov
pop
rol
and
jp
xchg
push
and
inc
xlat
adc
js
arpl
stc
and
call
cmc
mov
pop
push
sub
mov
nop
xchg
or
iret
aas
xchg
dec
dec
gs
or
ja
jb
out
lahf
mov
jb
ret
pop
push
mov
adcb
rclb
jae
test
jle
dec
cli
jae
mov
pushl
aam
js
pop
insl
push
clc
out
mov
sahf
jne
mov
test
ljmp
shll
fs
mov
icebp
or
shll
cld
decl
push
or
fldenv
ror
adc
xchg
jmp
call
inc
data16
dec
jns
or
lcall
out
out
or
pop
jo
aam
or
push
dec
js
mov
add
lcall
hlt
xchg
ficoms
es
scas
xchg
lock
mov
xor
in
shll
sbb
testl
pop
fcompl
andb
fwait
jg
sbb
out
lahf
in
int
adc
hlt
adc
sbb
fsubrs
insl
fs
mov
sti
inc
xor
cmp
decl
ret
call
inc
add
in
into
das
lahf
arpl
shl
fs
mov
aas
call
testl
and
popf
jg
and
cmp
sbb
pop
push
push
mov
out
lods
les
jmp
push
xchg
inc
fcompl
xor
clc
sti
mov
xor
popf
sbb
pushl
movsl
xchg
pop
push
xchg
add
repz
pop
jb
and
dec
mov
insl
mov
ret
and
aam
lock
rolb
sbb
pushl
jne
and
dec
fistps
xchg
push
sub
aad
add
sub
aas
push
and
fidivs
loope
and
inc
pop
xchg
adc
jmp
lock
xor
aaa
in
in
out
insl
fcmovbe
xchg
aam
or
arpl
imul
inc
lret
push
xchg
ljmp
inc
inc
mov
jo
ds
xlat
mov
test
push
xchg
jbe
xchg
pop
rcl
cmp
inc
xor
dec
or
mov
adc
xchg
pop
add
paddb
pop
hlt
mov
add
cmp
xchg
mov
jnp
pop
or
pushl
mov
movsb
dec
int3
xor
xchg
sbb
pop
xchg
sar
call
popa
popf
movsl
clc
lds
lahf
pop
shlb
loop
shl
cmpsb
xchg
dec
arpl
sub
out
fimull
adc
adc
out
sub
cmc
es
sbb
bound
jns
mov
ljmp
add
repnz
pop
scas
cmpb
aad
into
xchg
inc
lret
pusha
xlat
or
mov
cwtl
xchg
aas
add
and
jns
dec
cli
lahf
fs
ljmp
mov
jo
sub
push
pop
ja
arpl
dec
push
lods
outsl
pop
repz
push
inc
pop
loopne
jmp
daa
sub
inc
cli
negl
jno
pop
cwtl
lock
insl
mov
mov
ljmp
or
dec
fiaddl
jmp
test
loope
mov
add
xor
inc
xchg
and
sbb
cmc
in
js
shl
ud0
pop
call
or
sub
jae
mov
sub
inc
insb
push
mov
vcvtdq2pd
mov
jecxz
ret
je
loop
in
jnp
incl
in
insb
nop
inc
push
add
mov
jl
adc
out
xlat
scas
xchg
mov
call
shrl
ret
mov
adc
loop
dec
loope
mov
ds
test
cli
call
mov
jno
mov
mov
nop
lds
add
push
xchg
dec
enter
lahf
decl
pushl
xorl
mov
push
insb
lahf
adc
jne
ljmp
lahf
shrl
cmp
cmp
insb
rcrb
push
dec
arpl
lret
pop
sub
or
nop
pushl
test
cmpb
and
sahf
or
inc
xchg
pop
or
xor
pushl
push
mov
xchg
bound
and
ljmp
arpl
jae
or
add
test
jmp
sbb
fmul
lea
idivl
pop
mulb
jo
dec
shrb
pop
stos
andb
add
push
cli
jmp
mov
xchg
cs
mov
lock
cmp
dec
jns
test
out
mov
lea
and
loop
lcall
in
je
pop
ret
sub
pop
hlt
jmp
or
or
and
cltd
adc
aaa
cmp
cld
bound
pushl
test
push
lea
mov
in
in
and
jl
enter
dec
mov
in
fcomps
mov
sti
in
mov
jnp
push
orb
ljmp
sti
xchg
push
dec
sbb
ljmp
mov
or
push
movsb
aaa
out
add
insb
sub
popa
bnd
add
fcomip
pop
les
push
mov
sub
lahf
cmpsb
inc
jnp
hlt
test
incl
push
lret
mov
mov
fnsave
mov
bound
mov
repz
xchg
popa
sar
aas
push
bound
in
cltd
hlt
int
pop
xchg
xlat
ljmp
movl
dec
les
fcomps
test
mov
icebp
cmp
jmp
in
inc
leave
fbld
xchg
pop
lods
mov
das
decl
sub
out
in
push
lods
sub
inc
fbld
jg
mov
cmp
mov
decl
mov
imul
scas
jmp
mov
or
call
dec
cmp
jb
jmp
out
jno
inc
fdivrs
js
xchg
in
jns
lahf
mov
lcall
push
fisttps
repz
ja
xchg
int
call
sub
lret
out
cmp
fisttpl
mov
sbb
scas
mov
add
and
lcall
pop
pop
mov
aam
add
xchg
flds
jg
mov
mov
call
out
xchg
loop
mov
nop
jmp
mov
cli
icebp
push
and
pop
pop
mov
jmp
adc
mov
cmp
pop
sub
lock
sub
push
iret
jmp
push
dec
in
leave
call
scas
dec
out
xor
fnstenv
testb
xchg
fsts
and
ljmp
mov
lea
in
sahf
xchg
mov
je
adc
inc
mov
iret
fimuls
stos
and
pushl
lret
lds
xor
jae
inc
xor
dec
cli
mov
push
push
dec
cld
stc
pop
ficoms
enterw
sub
mov
fwait
iret
cwtl
addl
movl
add
jp
sub
add
lcall
pop
cld
and
gs
or
and
jg
push
adc
jp
js
out
add
adc
fistps
stc
mov
dec
lds
clc
int
or
xchg
push
jnp
pushf
lahf
iret
into
shlb
sarb
pusha
push
sbb
adc
in
shlb
rcl
jge
pop
mov
mov
subl
jae
loope
ja
pop
and
ljmp
push
xchg
push
sub
xchg
lret
xor
stos
or
lea
or
add
fidivl
out
leave
lahf
je
pushl
pushf
test
cmpsl
cmp
sbb
xchg
repnz
sub
shl
sbbb
cli
cmp
fs
mov
xor
jns
xchg
add
mov
pusha
mov
mov
or
xor
fs
std
aad
insb
sbb
imul
in
ja
pop
sub
xchg
jnp
mov
clc
mov
pop
push
call
pop
xchg
inc
push
repz
das
in
xchg
rorl
ret
aad
mov
ljmp
mov
xchg
mov
jge
loopne
cmp
movl
or
mov
mov
or
imul
loopne
jge
movsb
aas
mov
jmp
sbbl
insl
mov
fbld
mov
inc
repz
mov
jecxz
test
stos
cli
lcall
out
xor
jge
or
sub
jne
cld
scas
jg
fcomip
jg
push
fnstcw
fucomip
int3
xchg
or
cwtl
jmp
decl
jo
dec
out
js
and
out
xor
scas
out
popf
mov
ja
je
mov
and
fcmovu
fstpl
ss
gs
es
addl
cmpsb
jg
incb
cli
call
out
js
or
incl
push
cmc
je
sbb
cmp
dec
clc
addb
mov
ljmp
and
jmp
sub
pop
movsl
push
or
mov
sbb
xor
sti
push
mov
dec
dec
decl
fistpll
cmp
push
lods
cld
in
iret
pop
mov
inc
mov
popa
jo
push
fcoms
data16
mov
test
arpl
movsb
push
jns
pop
rorb
decl
call
dec
sub
sti
and
mov
mov
mov
rclb
push
xor
lret
imul
mov
loope
roll
incl
popa
mov
mov
cmp
mov
ja
insl
adc
inc
mov
dec
sbb
hlt
imul
stc
xchg
or
dec
cmpsl
enter
pop
jno
out
dec
xchg
adc
lods
dec
test
sar
jmp
mov
add
in
push
loop
adc
dec
outsb
je
xor
mov
jg
std
inc
xor
subl
add
mov
add
subb
aas
sbb
push
testb
adc
xchg
addb
enter
nop
inc
inc
add
mov
add
push
push
les
lahf
mov
mov
decl
iret
nop
adc
xchg
sub
push
mov
fmuls
cmpl
in
push
jmp
xchg
fnsave
test
dec
mov
cmp
mov
push
sub
jmp
sbb
cmp
imul
jnp
inc
or
push
push
pavgw
fistpl
daa
inc
add
movsb
inc
adc
push
and
jge
adc
push
and
decb
callw
add
push
jnp
idivl
sub
cmp
loop
cmp
xor
sub
mov
mov
negb
sarl
lea
clc
addl
sbb
and
pop
mov
adc
dec
fwait
int3
add
mov
pop
mov
push
mov
aam
iret
aas
add
add
mov
inc
cmp
subb
xor
imul
popf
sarb
sub
test
out
ds
adc
cmpsl
jl
sbb
inc
jl
add
cmp
mov
add
dec
rol
pop
sbb
pop
notl
fnstsw
jge
mov
adc
mov
out
mov
cmp
add
loopne
popa
xchg
dec
xlat
jne
jle
and
mov
mov
pushl
ret
push
push
movsl
std
mov
pop
push
fildll
add
addb
jmp
xor
loop
out
cmp
cmp
bnd
push
push
push
add
mov
add
xchg
mov
test
pushf
popa
shr
mov
xor
out
in
mov
inc
add
inc
sub
push
sub
outsb
inc
addl
fcmovnu
out
and
pcmpeqw
xor
sub
loopne
jb
dec
ss
lret
aad
jmp
fisubrl
pop
scas
pop
mov
popa
mov
inc
scas
mov
pop
pop
mov
ljmp
mov
pop
outsl
jae
xor
xchg
std
bound
gs
xchg
fldcw
and
jnp
pop
in
mov
adc
mov
in
or
sbb
dec
push
lret
stos
and
xchg
scas
test
adc
pop
add
in
push
loopne
pop
or
into
dec
add
bndldx
mov
push
std
inc
shrb
outsb
nop
rep
lcall
sub
jnp
in
cli
je
and
ficoms
inc
loopne
sub
and
push
mov
mov
pop
and
dec
add
or
add
fwait
dec
lock
sbb
or
sbb
fiaddl
push
jmp
lock
imul
iret
push
lock
pop
jl
dec
fldl
push
dec
mov
pushl
nop
sbb
pop
nop
lahf
cmc
cmp
cwtl
idivb
and
lock
mov
cli
flds
xchg
insl
jbe
and
jns
pop
inc
lds
hlt
push
sub
lds
lds
cltd
hlt
loopne
jmp
scas
out
enter
xor
push
stos
push
adcl
icebp
pop
loope
mov
mov
and
int
mov
mov
push
sub
cmp
scas
push
das
inc
sbb
mov
jmp
add
ror
add
cmpsl
mov
inc
je
adc
inc
add
push
inc
cltd
add
inc
push
add
subl
push
add
adc
enter
nop
inc
add
add
or
add
pop
add
shlb
xchg
jmp
imul
bound
dec
sub
out
testl
sub
push
mov
stc
fld
jmp
mov
inc
sbb
mov
aam
adc
decl
lret
jge
std
out
sub
out
fstp
dec
js
rcrl
dec
mov
call
arpl
lea
test
xor
lahf
clc
inc
nop
mov
call
test
mov
repz
movsb
bound
sub
rcrb
stc
xor
jnp
icebp
and
jnp
push
jne
xor
scas
das
cltd
test
ret
xchg
mov
ljmp
pop
inc
pop
leave
or
mov
mov
aas
sbb
ds
inc
push
iret
mov
push
imul
mov
dec
and
mov
cmp
sbb
clc
cmc
lret
lcall
jmp
mov
cld
dec
dec
fcmovbe
inc
jo
mov
or
je
dec
stc
scas
sub
and
js
shll
adc
orl
fs
xchg
or
movsl
adc
inc
xchg
lock
jmp
and
dec
jb
cmp
lcall
pop
icebp
mov
jg
pop
dec
xor
dec
outsb
decb
adc
lea
jo
ja
int3
lds
mov
stc
popf
repz
out
call
inc
cmp
ffree
mov
pop
emms
fistpll
push
and
jno
inc
sbb
movb
push
imul
in
cmp
and
jl
mov
cmp
cmp
inc
push
xorb
incl
mov
cli
xor
inc
out
dec
xor
nop
pushf
movsl
jns
aam
and
dec
pop
push
psubb
pop
pushl
add
mov
rcll
xor
fcomip
pusha
ss
fnsetpm(287
sbb
mov
jmp
inc
je
push
pop
clc
out
pop
push
loope
or
dec
jns
cmp
jns
lods
js
jmp
mov
mov
mov
lcall
push
or
mov
push
outsl
cs
pushl
adc
cld
int3
dec
es
insl
scas
call
cmp
out
shl
adcb
insb
lock
lcall
inc
jnp
mov
repnz
mov
testl
cmpsb
push
mov
mov
fdivrs
insl
sbb
hlt
mov
aad
dec
and
xor
mov
add
add
incl
lahf
push
ret
sub
xchg
roll
ret
negb
aas
lcall
push
repnz
out
sarb
mov
fs
repnz
shll
mov
sbb
std
sarb
jne
xchg
or
fsts
xor
out
mov
decl
fnstenv
scas
out
shll
push
xor
pop
and
neg
ljmp
pop
lret
push
pushf
cmpsl
jle
lret
xchg
leave
aam
sahf
iret
andb
imull
idiv
fnstenv
lret
out
xchg
rcrb
xor
mov
jge
jmp
out
mov
iret
jmp
and
xor
mov
mov
pop
jge
sbb
in
ljmp
jg
outsb
test
xchg
cmp
incl
fmuls
negb
xorb
xor
jnp
inc
loopne
and
xchg
repz
outsl
dec
in
add
inc
pop
mov
jg
or
nop
stc
sti
cs
idivb
sahf
or
adc
xor
sub
add
repnz
or
fdivs
call
pop
cld
or
xor
pop
xchg
and
adc
out
arpl
lea
das
out
cmp
or
mov
mov
pop
cld
shll
ss
adc
sahf
adc
test
xorb
xor
cmpsb
mov
aad
push
arpl
pop
fdivr
fs
out
divb
dec
xchg
and
ss
xchg
aas
xchg
cmp
aas
mov
xchg
sbbb
jbe
xchg
add
scas
mov
std
aas
clc
outsl
dec
and
mov
dec
dec
lea
cld
fwait
scas
or
mov
push
lcall
cmp
pop
aaa
xor
or
in
into
orl
lds
outsl
andb
push
push
pop
into
or
fnstenv
clc
add
mov
mov
xchg
and
das
dec
xchg
inc
mov
mov
mov
data16
or
sbb
arpl
cmc
sub
pop
mov
jg
repz
aas
scas
bound
fldcw
arpl
cmc
and
mulb
subl
mov
mov
xchg
dec
mov
popa
sti
adc
xchg
out
fcmovnbe
rcrl
or
out
jb
pop
call
jae
sbb
inc
or
out
push
movsl
lahf
es
jnp
stc
fwait
fwait
repnz
arpl
fdivp
sbb
mov
out
outsl
dec
testb
inc
out
loop
stc
xor
jns
cmpsb
mov
sbb
push
imul
std
push
mov
push
ds
jecxz
inc
sbbb
in
sti
decb
push
jl
push
idiv
cmpsb
push
rorl
push
cld
push
clc
outsl
adc
call
std
decl
or
push
ja
out
cmc
hlt
pop
push
lock
dec
clc
mov
call
add
ror
out
xchg
pop
jbe
dec
and
insb
sar
jae
jmp
push
inc
in
or
sbb
lcall
fmuls
add
push
add
push
call
and
fldcw
outsb
ficoml
push
fstpt
adc
push
mov
jg
and
loop
xor
gs
repnz
cmp
pop
jg
ljmp
adc
ds
and
jg
in
lret
add
push
push
xor
xchg
push
fcmovne
out
mov
push
mov
jmp
sub
scas
xor
xchg
repnz
mov
incl
jge
out
push
and
inc
jge
ljmp
fs
add
and
in
call
lods
xchg
push
mov
sbb
jnp
adc
xor
and
cmp
lcall
mov
and
push
mov
addr16
mov
mov
incl
lock
pop
stc
sbb
imull
push
loopne
mov
push
sbb
mov
cs
div
push
xor
cmpsb
sub
lcall
mov
xchg
push
jg
out
pop
and
test
dec
jae
ss
rorl
inc
out
stc
mov
in
icebp
fnstcw
push
fstpt
outsb
sbb
lcall
xchg
insl
push
sbb
jno
jae
xchg
cmp
clc
adc
pop
movsl
pop
jae
call
push
pop
add
cltd
addl
mov
bt
push
test
andb
subl
or
fmull
and
std
add
jg
incl
adc
cmpb
fincstp
cmc
mov
nop
ja
push
lahf
sub
xor
stc
jecxz
divb
jbe
or
out
fcomip
mov
imul
outsb
movsb
add
add
aas
bound
jae
jg
mov
push
jg
in
lret
rclb
out
or
lahf
push
and
incl
pushf
addr16
pop
notb
inc
insl
push
fstpl
push
and
mov
lcall
xchg
loop
cmp
ljmp
add
rcrb
ljmp
mov
push
and
stos
sbb
lods
mov
jae
xchg
jl
fsts
std
jae
xchg
mov
lcall
or
mov
dec
mov
outsb
pushf
jle
cld
notb
addb
sbb
pop
fisttpll
dec
arpl
or
inc
mov
push
test
and
dec
cmp
pop
ficoms
jg
cmp
aas
cli
cmp
xchg
mov
out
and
xchg
jge
and
xor
hlt
clc
and
mov
addr16
je,pt
push
outsl
or
out
cmp
movsb
daa
jg
mov
jg
test
movsb
stos
rcrl
cmp
inc
adc
mov
rcrb
jl
rcll
mov
sub
repz
jbe
cmp
push
xor
je
dec
call
inc
inc
js
dec
imul
insl
jno
jno
push
dec
dec
push
gs
add
inc
xor
pushl
push
push
cmp
jb
dec
dec
dec
inc
dec
push
push
xor
jb
push
pop
arpl
ljmp
outsl
dec
insl
popa
inc
jp
aaa
dec
push
xor
dec
fs
outsb
bound
js
imul
ljmp
mov
push
jns
dec
bound
imul
insl
dec
push
push
insb
jp
jbe
inc
xor
dec
inc
dec
imul
jns
mov
push
dec
push
inc
dec
dec
ja
xor
push
gs
dec
push
push
push
dec
xor
push
ss
clc
in
decl
dec
pop
inc
xor
inc
jo
imul
pop
je
popa
inc
aaa
mov
ljmp
ss
xor
jns
dec
outsb
ja
inc
push
pop
push
push
xor
push
je
cs
gs
shl
mov
outsw
push
aaa
shrb
dec
js
jne
test
mov
jp
pop
jno
xor
fs
imul
jbe
dec
arpl
jne
inc
dec
push
push
push
jne
imul
jg
jp
addb
je
xor
push
inc
jne
cmp
arpl
dec
fiadds
jp
jbe
insb
outsb
dec
ja
je
push
jns
jbe
aam
outsl
pop
lock
pop
cmp
fdivs
addr16
jbe
cmp
outsb
mov
inc
adc
dec
jle
popa
dec
imul
xor
ja
push
je
push
dec
dec
js
insb
push
sbb
push
xor
inc
push
inc
add
push
xor
dec
sub
mov
mov
add
nop
inc
add
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
add
add
subl
inc
add
fs
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
insb
adc
incl
testl
call
call
scas
add
decl
je
jecxz
inc
dec
add
cmpsl
jnp
add
out
or
and
icebp
jg
lret
add
in
addl
lods
sbbb
mov
adcb
je
test
jle
add
sbb
push
addb
sbb
adcl
rolb
outsl
test
rorl
xchg
push
pop
or
cmp
in
pushl
sbb
aad
fldcw
jns
push
orl
inc
or
outsl
jg
or
fs
hlt
push
mov
add
movsl
cmp
or
add
fucomip
outsl
incb
ret
cmpsb
popl
shrb
dec
into
or
out
jge
popa
outsl
sbb
inc
inc
adc
je
repz
add
push
fwait
cmpsl
xor
unpckhps
jne
mov
int
jmp
sbb
jge
pop
sti
imul
push
jbe
mov
xchg
stc
lds
xlat
and
ljmp
dec
add
add
or
notb
pop
dec
test
arpl
sbb
pusha
add
insl
sar
cmpsb
jecxz
dec
inc
jecxz
or
mov
rcrl
jae
sub
jle
outsl
fiaddl
add
jne
arpl
mov
push
stos
cli
and
pop
pusha
sbb
cmp
std
xor
bound
cs
jmp
jbe
sar
lret
sbb
pop
add
cmp
cmpsb
out
imul
pop
ret
pop
repz
fistpl
sub
add
cld
mul
outsl
mull
mov
add
sbbb
stos
jl
xchg
adc
inc
xchg
xchg
icebp
sbb
scas
add
imul
ljmp
xchg
std
iret
mov
out
ret
pop
pusha
xchg
stos
pop
pop
dec
scas
dec
setae
andb
mov
push
jns
mov
aas
sbb
cmpsb
leave
loope
mov
inc
pusha
sbb
push
lock
stos
push
sbb
stos
das
test
cld
scas
cmp
pop
xor
push
data16
sahf
dec
cs
imul
pop
mov
or
pop
cs
adc
push
arpl
sbb
shll
shll
pop
fs
add
pusha
add
or
inc
repz
and
jne
add
cmpsl
sub
movsb
push
sub
popa
mov
add
push
jo
dec
stos
cmp
clc
sbb
stos
cmc
loope
pop
cltd
fwait
sbb
pop
dec
loop
out
sbb
add
jmp
fbstp
or
mov
mov
jle
inc
mov
cmpxchg
arpl
mov
int
outsl
sahf
idivb
mov
shl
or
insl
mov
xor
not
xor
scas
lcall
or
push
push
cltd
add
cmc
mov
sub
xor
lock
or
add
jne
push
ss
dec
imul
stc
rcrl
mov
sbb
negl
pop
jo
pop
popa
ja
inc
pop
movsl
insl
fidivrs
movsl
mov
pop
imul
ficoms
icebp
imul
lcall
mov
popw
xchg
xchg
push
push
mov
inc
jnp
loopne
ficompl
sti
sbb
aad
lock
mov
mov
mov
and
out
loopne
jns
adc
push
mov
setp
or
lock
stos
dec
or
add
jg
push
pop
inc
stos
sub
in
inc
push
pushl
add
outsl
mov
jnp
dec
dec
push
pusha
subl
outsl
incb
add
jp
sub
jo
neg
cld
add
xor
sub
sub
mov
add
xor
mov
mov
adc
roll
xor
psadbw
pusha
movsb
pop
add
jns
lods
push
mov
xchg
int
inc
xor
cmp
sub
js
ret
out
or
push
pushl
test
mov
xchg
add
cmp
add
jmp
mov
add
clc
lods
sbb
icebp
mov
jg
ljmp
fcomps
xchg
jo
jo
adc
sbb
mov
test
push
gs
add
out
sub
mov
or
call
ljmp
jge
sbb
pop
pop
daa
and
imul
ja
scas
clc
pushl
imul
mov
out
aas
xor
mov
inc
ljmp
jecxz
popf
xchg
inc
jne
cmp
xor
ret
fcmovne
roll
leave
shrl
rclb
fxch
fists
add
fld
out
fbld
shlb
ret
fld
ror
lret
adc
adc
ret
and
lcall
je
je
pop
out
incb
loopne
stos
sub
add
inc
mov
scas
push
sub
sub
add
sub
sub
mov
std
ds
movsl
data16
pusha
push
inc
dec
and
std
test
and
sub
and
int
dec
movsl
stos
aad
fstp
fstl
mov
inc
movsl
adc
stos
jo
incb
xchg
jbe
mov
loope
xchg
cmp
jecxz
ljmp
cli
cmp
insb
mov
test
movsb
mov
mov
push
add
mov
pop
adc
add
les
flds
aam
std
xchg
fcmovnbe
jg
fwait
pop
adc
add
pop
bound
out
add
add
adc
lock
jg
jae
or
lock
add
out
test
shlb
imul
fwait
or
cs
popa
push
xor
push
jo
arpl
jle
mov
add
adc
stos
and
cmpb
ljmp
mov
icebp
jne
int3
je
fstpt
jo
jno
out
in
mov
xlat
jae
add
loopne
jg
adc
adc
mov
mov
repnz
fdivs
dec
sbbb
add
sahf
lods
scas
xchg
outsl
adc
js
add
xor
addb
add
loope
mov
add
mov
cmp
stos
scas
pop
pop
push
and
inc
aaa
sti
inc
jmp
adc
rorb
das
sbb
lea
add
cmpl
pushf
lahf
sahf
cltd
cwtl
fwait
or
int3
iret
into
leave
cmpsb
lret
lret
mov
inc
rol
fstp
flds
fcmovnu
aad
xlat
push
repz
test
add
add
rcl
inc
add
outsl
add
add
sbb
push
pop
nop
incl
scas
test
movsl
movsb
inc
add
mov
negb
add
decl
popa
add
push
add
shlb
push
add
push
mov
sub
loopne
cmp
or
dec
rcl
push
out
clc
or
and
mov
pushf
iret
adc
mov
sub
xor
push
xorb
xlat
jg
inc
push
cwtl
lock
std
sub
fldcw
pop
pop
enter
ljmp
adc
filds
adc
mov
out
inc
dec
in
fldt
icebp
out
jecxz
cmp
repnz
in
inc
fcomip
add
es
inc
add
dec
fbstp
inc
lods
loope
mov
pop
mov
inc
data16
andb
cmpsl
loop
or
add
pushf
test
mov
mov
icebp
mov
das
cli
decl
push
jle
add
nop
stos
add
movsl
es
jge
add
sti
call
push
or
sbb
in
dec
data16
mov
add
mov
xor
clc
push
cld
repnz
arpl
mov
push
into
cmc
lahf
outsb
push
mov
outsl
jg
dec
je
outsb
adc
xchg
mov
mov
adc
inc
inc
fwait
jle
fisttps
test
outsl
gs
push
in
sahf
scas
cmp
xor
iret
push
cld
mov
movd
dec
add
adc
cwtl
or
xchg
rorb
invd
lock
ja
inc
add
scas
rorb
add
add
addl
mov
add
pop
add
pop
push
insl
in
pushl
sbb
adc
movsb
add
push
add
pop
hlt
lods
lds
sub
int3
mov
xchg
adc
div
mov
stos
rorl
pushw
mov
inc
lods
loope
add
jmp
mov
push
lahf
push
daa
mov
jo
fldcw
inc
adc
add
push
lods
repz
ret
sub
mov
inc
pop
or
stos
push
add
ret
rorb
aas
mov
data16
cwtl
add
scas
xor
cmp
scas
add
sbb
fbstp
fldln2
rorb
lcall
add
out
xor
popf
push
sub
enter
mov
pop
lds
fcmovu
cld
xorb
mov
push
push
add
pcmpgtw
xchg
jecxz
fimull
hlt
mov
add
cltd
mov
loope
cwtl
cwtl
cld
push
pop
stc
xchg
add
mov
add
pop
pushf
cltd
sbb
mov
pop
cld
lods
sub
inc
out
mov
add
rcrl
and
jmp
jo
inc
sbb
sbb
rcrl
pop
sub
test
loopne
dec
ret
lds
mov
inc
inc
stos
add
popf
dec
xor
mov
sarb
ljmp
filds
in
adc
into
dec
adc
adc
pop
rcrb
cmp
sbb
loopne
mov
xchg
add
lods
int
in
cld
xchg
add
outsl
add
push
add
test
jno
cmp
pop
mov
push
xchg
add
loopne
cmp
push
loopne
and
inc
or
mov
loopne
in
add
fs
xor
sub
pop
loopne
add
pop
jmp
jne
fidivrs
cwtl
sbb
cmpsb
mov
test
push
or
xor
insb
imul
xor
loopne
fldenv
enter
test
cltd
push
push
loopne
orl
stos
mov
loopne
or
or
xor
loopne
jno
in
adc
std
imul
sahf
mov
sub
ja
mov
int
daa
add
imul
jbe
ds
mov
cmp
sbb
cld
jns
rcll
push
out
loopne
inc
test
add
adc
xor
add
or
ss
mov
or
leave
inc
out
loopne
stc
pop
mov
push
pop
xchg
rcrb
adc
loope,pt
aam
mov
mov
loopne
test
pop
out
pop
sub
aaa
loopne
or
mov
ficomps
loopne
or
loopne
and
out
push
sub
loopne
shll
add
stc
repz
rcrl
loopne
cmc
jb
push
loope
loopne
in
inc
shl
mov
shlb
pop
cld
stos
imul
or
loopne
push
sub
xchg
outsb
lcall
vpunpcklqdq
xor
pusha
or
and
mov
sbb
loopne
rcrl
add
fcmovu
mov
cmp
icebp
sbb
jnp
out
cmp
je
xchg
inc
in
rcl
add
dec
pop
push
add
mov
repz
push
movsb
or
in
add
pop
nop
das
add
jno
dec
ja
add
out
lahf
aaa
sub
adc
loopne
add
cmp
sbb
pushf
rorl
into
sub
dec
imul
and
jle
ds
icebp
loopne
mov
and
adc
in
neg
and
in
cld
lret
mov
mov
popf
int
sub
add
add
out
inc
imul
xchg
stos
and
adc
test
mov
adc
out
lcall
ds
lahf
loopne
cli
push
and
push
xor
jecxz
mov
ds
or
or
js
or
lock
shr
leave
stos
jno
sbb
lock
mov
fisttps
fidivl
mov
push
push
lock
aad
hlt
jo
fidivs
int
fstl
jo
in
jecxz
sbb
jle
cmpsb
cmp
push
dec
lock
or
mov
testl
mov
mov
add
incl
dec
stos
imul
inc
lock
push
sahf
mov
lcall
lds
nop
and
incb
loopne
stos
in
or
jo
popf
cmp
mov
andl
addr16
mov
jge
adcb
cmp
or
adc
fnstenv
sti
ret
or
cmc
js
add
jnp
xchg
cmp
out
test
lock
setae
inc
jl
ljmp
lock
dec
bndldx
and
cmpsb
inc
aad
cmpb
clc
mov
mov
sub
pop
in
xor
pusha
pop
out
mov
inc
push
push
sbb
xchg
pop
push
popa
lods
cmpsb
mov
nop
sub
cmp
aas
outsl
in
mov
mov
sbb
push
leave
sbb
icebp
sub
or
out
test
mov
pop
loope
inc
in
int3
jo,pn
dec
mov
fidivrl
ret
sti
pusha
cmp
jno
mov
test
add
lds
cmpsl
out
fsubs
adc
andl
mov
insl
subl
sbb
scas
repz
inc
clc
pop
lock
add
mov
insl
les
in
and
outsl
lock
outsl
jg
pop
test
scas
push
lods
in
adc
lods
nop
lods
or
lods
out
out
lods
repz
lods
leave
lods
add
add
sbb
test
pop
lods
jbe
scas
push
lods
out
lods
sbb
sbb
adc
int3
lods
pop
lods
repnz
lods
enter
xlat
adc
lods
jo
adc
adc
outsb
lods
scas
lods
push
stos
lods
out
out
lods
mov
popa
lods
mov
lods
mov
out
jl
out
lods
jg
ljmp
cmc
je
ret
lods
jbe
out
jae
iret
lods
dec
lods
clc
dec
lods
scas
lods
dec
lods
xchg
dec
lods
stos
lods
out
out
lods
mov
inc
lods
mov
lods
mov
out
pop
lods
jmp
pop
lods
cld
lods
push
lods
hlt
push
lods
ret
lods
fsubrl
stc
or
lods
into
lods
push
lods
je
scas
mov
scas
mov
sub
scas
popf
fisubrl
repz
sub
scas
mov
scas
pushf
pushf
scas
mov
int
pusha
scas
cwtl
xor
cmpsl
lods
imul
adc
ds
or
jae
icebp
scas
cmpsb
scas
movsb
shrb
jg,pt
scas
mov
push
scas
shrb
push
repz
cld
scas
sti
lods
or
scas
mov
loope
scas
lret
push
scas
cli
mov
iret
out
js
mov
scas
out
adc
mov
scas
push
push
addl
mov
scas
call
scas
loope
jle
fwait
lods
je
fbstp
lds
fwait
dec
scas
lods
lods
dec
scas
addb
lods
inc
scas
xchg
xor
lcall
les
push
scas
shrl
scas
add
push
test
fwait
mov
test
popf
or
popf
add
or
test
add
test
dec
add
fwait
mov
test
nopl
or
test
add
sbb
lods
adc
test
mov
push
test
popf
adc
popf
adc
adc
adc
test
imul
fwait
mov
test
popf
push
popa
gs
arpl
test
jg
test
jne
test
fwait
mov
test
dec
jg
dec
popf
jle
dec
jns
out
clc
dec
popf
js
dec
sarb
inc
popf
jp
inc
jne
inc
popf
je
inc
outsl
out
ja
inc
popf
jbe
inc
jno
inc
popf
jo
pop
jae
ss
imul
clc
out
test
push
test
stos
adc
mov
out
outsl
test
stos
outsb
test
imul
stos
push
mov
out
gs
stos
fs
addr16
stos
data16
popa
test
stos
out
out
test
arpl
cmpb
stos
jl
pushf
out
jg
lahf
stos
jle
sahf
jns
cltd
stos
js
cwtl
jnp
fwait
stos
jp
lcall
xchg
stos
je
xchg
ja
xchg
stos
dec
test
dec
test
stos
out
out
test
dec
test
stos
dec
test
dec
test
stos
dec
test
out
decb
ljmp
in
inc
test
inc
test
stos
inc
test
outsl
out
inc
test
stos
inc
test
inc
test
stos
pop
test
pop
test
stos
lods
mov
decl
lcall
incb
mov
cld
push
lods
push
push
bound
insb
stos
sti
int
and
stos
cli
test
stos
hlt
test
stos
imulb
int
icebp
lods
stos
cmp
add
test
mov
scas
test
pop
stos
scas
push
cwtl
test
sbb
stos
outsl
out
sbb
movsl
adc
movsb
test
stos
cmpsb
test
adc
test
stos
mov
out
insb
stos
popf
test
stos
jmp
imul
mov
stos
sahf
test
stos
xchg
push
stos
xchg
add
data16
stos
xchg
stos
xchg
add
bound
xchg
test
stos
loop
jg
in
jle
in
test
stc
fwait
mov
jnp
fwait
jp
lahf
test
stos
out
ja
out
mov
stos
in
jno
loopne
stos
in
stos
ljmp
out
addl
mov
cmp
dec
stos
mov
stos
mov
or
mov
inc
stos
mov
inc
stos
mov
cld
int
inc
stos
mov
inc
stos
mov
stos
mov
inc
stos
mov
stos
mov
pop
int
cld
int
mov
stos
subb
mov
jg
aaa
rep
mov
mov
push
stos
xchg
jg
aaa
push
stos
test
stos
test
stos
xchg
or
sub
scas
rsm
and
or
pop
and
stos
and
aaa
jg
scas
add
push
scas
push
stos
and
stos
sub
lea
std
mov
stos
lods
aas
push
stos
add
sbb
cmp
pushl
adc
stos
data16
pop
stos
sbb
scas
insb
stos
cmp
outsl
stos
aas
scas
outsb
stos
ds
ljmp
push
stos
cmp
gs
xor
scas
stos
aaa
scas
data16
ss
ljmp
pusha
stos
xor
bound
or
scas
jg
add
loopne
les
or
stos
lret
jg
stos
or
je
add
dec
stos
sbb
dec
stos
pop
scas
dec
stos
pop
pusha
add
stos
sbb
stos
fmull
sbb
push
loopne
scas
inc
stos
adc
scas
inc
stos
hlt
inc
stos
repnz
inc
stos
inc
stos
lock
stos
adc
add
pop
stos
negb
scas
pop
stos
outsb
scas
pop
stos
outsl
scas
pop
stos
imul
pop
stos
imul
stos
gs
push
stos
fs
or
sbb
push
out
fimuls
or
scas
mov
movsl
or
add
movsl
or
decl
add
xor
add
add
adc
decl
adc
cltd
insb
movsl
mov
outsl
movsl
mov
push
movsl
xchg
movsl
out
decl
arpl
int3
jnp
mov
ja
das
jbe
cs
jno
test
jae
mov
inc
testb
movsl
cmp
mov
decl
movsb
imul
movsb
movsb
mov
mov
mov
cmpsl
push
fisttpl
movsb
cmpsb
mov
mov
inc
movsb
mov
inc
movsb
mov
mov
movsb
pop
mov
push
mov
pop
movsb
adc
pop
movsb
mov
pop
call
cld
fbld
pop
movsb
cltd
mov
orl
cmpsl
scas
lea
cmpsl
test
lea
cmpsl
test
or
and
cmpsl
movsb
lea
cmpsl
mov
stos
mov
mov
cmpsl
mov
sbb
stc
mov
cmpsl
clc
mov
push
jmp
cli
mov
cmpsl
cmc
mov
cmpsl
hlt
mov
cmpsl
testl
test
mov
cmp
cmpsl
xchg
imul
repz
in
mov
mov
insb
mov
sbb
bound
mov
jl
mov
jg
jg
mov
jle
mov
jns
mov
jnp
lahf
lea
sahf
lea
jbe
add
ljmp
jo
sbb
jb
add
cmpsl
push
cmpsl
call
ljmp
mov
adc
lea
pop
mov
pop
cld
pushl
adc
sahf
mov
into
mov
lret
mov
enter
sbb
les
cmpsl
mov
cmpsl
mov
test
decl
pop
cmpsl
out
mov
in
mov
mov
mov
clc
outsl
mov
cmpsl
xchg
lea
mov
push
mov
xchg
add
cmpsb
xchg
add
lods
jle
cmpsb
mov
add
outsl
cmpsb
or
cmpsb
cmp
or
add
mov
popa
cmpsb
cmp
bound
cld
jle
movsl
mov
out
jne
cs
cmpsb
jno
ud0
fcomip
push
cmpsb
push
push
mov
jge
dec
mov
jg
dec
mov
jns
dec
mov
jnp
dec
mov
jne
inc
mov
ja
inc
mov
pushl
inc
mov
jae
inc
mov
dec
test
mov
dec
test
mov
decl
pop
mov
dec
test
mov
inc
test
mov
inc
test
mov
ljmp
mov
or
stos
mov
add
mov
push
incl
mov
lods
mov
mov
sbb
jmp
pop
mov
mov
mov
sbb
mov
jmp
pop
mov
mov
adc
mov
adc
mov
insl
mov
jmp
outsl
mov
mov
mov
mov
decl
mov
addr16
data16
andl
bound
andb
mov
lahf
mov
jns
cltd
mov
jnp
fwait
mov
lcall
mov
ja
xchg
mov
jb
xchg
mov
dec
mov
out
mov
dec
mov
call
mov
inc
mov
in
inc
mov
out
inc
mov
loope
inc
mov
std
mov
pop
mov
mov
stc
mov
pop
mov
cli
mov
push
mov
pushf
pushf
bt
lcall
pushf
or
fwait
pushf
or
xchg
pushf
add
xchg
pushf
pop
mov
call
pushf
lods
mov
xchg
pushf
add
in
pushf
sbb
in
pushf
pop
mov
out
pushf
sbb
call
pushf
sbb
in
adc
in
pop
mov
jmp
pushf
adc
loopne
adc
loop
insl
mov
cld
pushf
outsl
mov
pushf
imul
sti
pushf
push
cli
pushf
mov
hlt
pushf
addr16
mov
negb
mov
repz
bound
int
jl
int3
pushf
jg
iret
pushf
jle
int
mov
into
pushf
jns
mov
jp
fldcw
jne
je
ja
jbe
jno
int
mov
jo
jae
jb
dec
mov
ss
dec
mov
mov
dec
mov
inc
data16
insb
mov
inc
mov
mov
pop
mov
aad
pop
mov
sub
pop
mov
sub
push
cld
pushf
pop
mov
mov
sarb
cs
mov
lods
adc
lods
adc
add
push
or
out
or
or
out
push
add
insl
xchg
add
jns
out
mov
repz
out
subl
iret
mov
mov
mov
cmp
repz
clc
mov
out
jns
repz
mov
sahf
test
push
cmpl
into
ds
jae
cmp
add
sub
fmulp
and
mov
jns
out
push
fdivrl
fistpll
fsubp
jns
out
mov
mov
sahf
out
sahf
mov
sahf
out
jns
aaa
push
mov
cmp
cmp
xor
xorb
repz
repz
movl
cmp
shrl
out
ds
int
push
int3
repz
repz
iret
push
into
sbb
repz
leave
sbb
sbb
sbb
repz
adc
pushf
pop
lock
adc
jns
out
outsl
push
fldcw
imul
push
out
sahf
push
xlat
fs
jns
out
shll
popa
out
sahf
out
pusha
shlb
sahf
out
sahf
bound
sahf
out
jg
jle
jns
jns
out
js
dec
or
dec
or
cmovns
lods
cmp
repz
or
inc
stc
js
repz
lret
lcall
repnz
xchg
pop
dec
pmaxub
lds
or
fimuls
xchg
rcl
xchg
incl
jo
mov
sbbb
lds
imull
call
out
dec
rcll
mov
ret
xlat
int3
lock
fisubl
push
cmp
iret
dec
fcomip
incl
call
fcmovu
jp
adc
std
lcall
push
lcall
iret
shlb
hlt
or
aad
sub
sub
repz
outsb
jbe
adcl
mov
xchg
nop
icebp
jno
cmc
jnp
aaa
das
sbb
sbb
sbb
mov
incl
sbb
cmpsl
arpl
mov
sbb
mov
pop
mov
mov
hlt
ljmp
xchg
pop
scas
or
lret
das
adc
in
out
push
in
cmc
aad
mov
lret
inc
in
rcr
or
mov
mov
in
or
das
sbb
jg
ret
lds
fidivrl
rcll
inc
pop
sub
cmp
es
dec
addr16
fcmovnbe
jg
inc
cmp
sbb
xchg
popa
sbb
sub
jg
lahf
xchg
lahf
sbbb
lahf
negb
mov
leave
lahf
cmp
push
sub
ficomps
push
jle
addr16
enter
sarb
mov
clc
ds
or
lods
lahf
jp
lcall
icebp
xor
push
jb
inc
call
mul
call
ss
leave
sahf
rcrl
lcall
cmp
add
loopne
mov
fwait
adc
dec
mov
sti
dec
mov
cltd
mov
mov
cltd
jmp
cltd
icebp
cltd
jno
or
inc
outsl
dec
repz
mov
xchg
cwtl
test
xchg
xchg
popa
cltd
jns
cltd
dec
cltd
inc
lcall
test
bound
lods
cmp
sub
imul
ljmp
sub
xor
sbb
ret
push
ds
out
mov
push
jo
repnz
es
xchg
cmp
cltd
fwait
xchg
fwait
jmp
fwait
icebp
fwait
leave
fwait
sbb
lcall
add
test
pop
mov
and
jnp
fucomp
adc
std
and
call
mov
loope
std
pushf
push
or
test
nop
xor
mov
fnsave
outsb
les
xor
dec
xchg
xchg
xchg
in
xchg
int3
xchg
inc
xchg
push
xchg
outsb
xor
mov
dec
ficoml
dec
in
pop
clc
lock
jmp
aaa
lahf
xchg
ljmp
sti
incl
xchg
imul
lret
inc
loopne
dec
and
in
sub
ficoms
inc
xchg
sub
sub
out
xor
xchg
pushf
xchg
pushf
pushf
hlt
pushf
pop
pushl
lcall
and
inc
hlt
inc
dec
dec
mov
xchg
and
out
cli
imul
cmp
loope
jmp
cwtl
int
ret
cwtl
rcrl
and
xchg
fildl
jb
movsl
lcall
repnz
lret
jge
pop
fidivs
add
mov
fwait
mov
xchg
lcall
sub
fwait
or
cltd
stos
adc
in
cmp
and
inc
fstps
dec
xchg
add
jmp
lcall
insl
lcall
cmp
fcmovb
push
incl
call
jg
mov
cmc
cltd
add
in
xor
xchg
aam
dec
xchg
inc
jg
call
out
notl
xchg
les
jb
stc
xchg
mov
jmp
inc
mov
pop
xchg
imul
mov
jmp
subb
inc
fs
enter
mov
loop
ret
inc
push
mov
xchg
push
push
movsl
xchg
mov
call
cmp
add
xchg
fs
inc
jge
xchg
xor
ret
call
std
push
jae
shll
dec
loopne
mov
cltd
es
or
xchg
cwtl
mov
jb
jmp
es
ret
lret
mov
xchg
pop
lock
ficompl
call
dec
xchg
inc
xchg
pop
xchg
lods
xchg
mov
xchg
lret
xchg
cs
xor
in
js
mov
decl
lret
xchg
andb
mov
xchg
inc
xchg
pushf
nop
rcll
pusha
nop
dec
nop
push
call
mov
lock
mov
in
jns
movsl
adc
icebp
stc
mov
decl
push
icebp
xchg
or
shrb
mov
ja
mov
pushl
mov
or
dec
subb
mov
hlt
or
mov
sahf
pop
sahf
cmpl
jae
mov
adc
popa
or
inc
aas
cmpsl
cmpsb
or
decl
cmp
mov
mov
mov
mov
xchg
jae
mov
addl
push
popa
ds
xchg
xchg
nop
xchg
xchg
in
push
popa
xchg
dec
inc
inc
mov
pop
ret
icebp
lock
decl
popa
jo
sub
sub
sub
and
jmp
cmp
cmp
cmp
xor
xor
or
or
lods
add
incl
sbb
sbb
sbb
adc
adc
outsl
outsb
imul
popaw
jg
push
sub
jge
jg
inc
jnp
jne
ja
jno
jae
dec
dec
dec
dec
dec
loopne
decl
dec
inc
inc
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
sbb
mov
adc
or
in
out
jg
ljmp
xor
jmp
add
in
out
loopne
loop
std
stc
clc
sti
cli
add
sbb
adc
adc
adc
add
add
add
add
xchg
and
and
and
add
add
add
add
idivb
xor
xchg
cmp
roll
and
fcmovnu
incl
adc
push
scas
adc
and
mov
sbb
and
incl
rclb
addb
jo
push
addb
aad
pop
sbbl
call
lods
sbb
or
mov
call
add
xchg
ljmp
cmp
mov
aas
add
adc
in
add
push
inc
push
jo
dec
rorb
or
or
std
mov
in
sbb
fxch
rolb
sbb
clc
ljmp
rcr
faddp
out
ret
or
or
enter
ffreep
aam
adc
mov
aas
or
pushw
addb
inc
invd
cmp
add
incl
in
stc
std
adc
push
std
loop
add
and
call
add
fstl
mov
leave
testb
sti
fisttps
popf
add
inc
mov
inc
add
lea
ret
mov
out
cmp
pop
lock
rolb
lret
inc
add
add
adc
pop
fucomi
mov
adc
fld
pop
mov
loopne
hlt
addl
shl
lea
add
mov
arpl
jnp
mov
push
imul
or
std
inc
in
pop
or
adc
call
and
test
pop
push
mov
lret
mov
fisttpl
sbb
pusha
add
mov
and
dec
out
add
and
mov
adc
add
sti
push
fisttps
mov
std
mov
inc
loope
les
fsub
mov
or
stos
add
adc
lret
cmp
pusha
loop
lock
xchg
addb
cmp
or
or
xorb
mov
ret
add
enter
enter
push
jno
in
loopne
call
push
and
sbb
add
or
loopne
shrl
stos
and
or
popa
add
adc
out
jmp
lea
pop
shl
mov
add
in
mov
add
jecxz
xchg
sarb
ret
xchg
pop
cmp
add
cmp
ljmp
cmp
sub
push
and
daa
sub
daa
cmp
sub
test
push
std
cmp
add
mov
mov
ljmp
bound
jmp
cmc
icebp
in
shr
out
add
cmc
loopne
ljmp
xchg
mov
add
add
imul
incl
inc
push
addr16
inc
inc
inc
inc
inc
inc
pop
jnp
add
inc
inc
push
inc
pop
add
adc
pop
push
push
rolb
jg
incl
jbe
and
or
add
cltd
lock
mov
xchg
adcl
cwtl
xchg
fcomip
fisttps
test
mov
cs
inc
push
add
inc
jae
mov
jmp
dec
add
pop
inc
push
inc
xorb
decl
xchg
or
push
push
adc
push
adc
dec
popa
or
add
cwtl
ficompl
cmp
ss
es
dec
pop
neg
pop
pop
jle
adc
push
pop
jo
sbb
pop
xchg
test
sbbb
arpl
jne
add
xchg
repnz
add
aaa
sub
xor
xor
add
loope
bound
pop
pop
dec
jle
push
ror
add
aam
xlat
rcl
mov
jg
jmp
loope
jecxz
out
clc
icebp
sti
in
jmp
ret
decl
add
ror
lock
ret
add
popa
pop
jp
insl
jo
in
mov
je
push
insl
jno
add
nop
dec
dec
push
or
add
jmp
lcall
pop
push
add
adc
push
mov
fxch
fcmovne
aam
add
fcmovu
clc
sub
add
ds
cmp
xor
xor
ret
jecxz
ror
into
enter
test
ror
pushf
mov
add
pop
loopne
adc
and
xor
sub
and
aaa
and
hlt
outsl
clc
add
cmp
sub
sub
sub
dec
cld
add
in
xor
or
add
sub
jecxz
popl
lock
scas
fstpl
clc
ljmp
mov
sahf
out
divb
int
add
mov
dec
mov
add
enter
pop
fmuls
ficompl
xlat
mov
fcoms
int
in
insb
loopne
add
jmp
cmpsl
scas
mov
inc
or
adc
sbb
push
sbb
adc
das
data16
testl
nop
mov
stos
mov
popf
jecxz
cwtl
loopne
out
imul
fistps
movsl
cld
rolb
mov
push
add
jg
xchg
insb
xbegin
add
add
mov
mov
mov
mov
scas
ds
mov
mov
sub
out
lods
add
lock
add
or
or
decl
push
adc
sbb
add
pop
pop
sbb
adc
fs
flds
lods
lods
jmp
fsub
stos
test
add
cli
mov
mov
mov
pop
jno
lcall
js
pop
inc
add
or
or
jg
loop
dec
dec
pop
add
adc
pop
jge
xor
jp
jl
cmp
scas
jne
add
outsb
jp
testb
cs
jmp
in
lock
clc
out
imul
dec
cmp
loopne
add
pop
mov
push
pop
inc
push
std
fbstp
mov
add
icebp
rcl
incl
jmp
inc
sti
jecxz
cmc
mul
rolb
das
jbe
mov
movsl
mov
stos
scas
adc
jmp
and
cmp
cmp
cmp
cmp
mov
adc
xor
mov
cld
fwait
ret
or
cmc
ljmp
push
sbb
push
add
lcall
cmp
sgdtl
insl
push
imul
bound
jno
notb
sbb
lods
sub
sbb
adc
or
push
sbb
push
push
std
ljmp
test
lret
idiv
clc
repz
call
mov
push
push
pop
icebp
decl
dec
js
pop
inc
dec
pop
add
dec
icebp
add
mov
stos
add
int3
out
leave
rcl
std
inc
clc
fsubs
add
aaa
xchg
or
push
push
or
add
lock
jg
adc
pop
add
and
ss
add
adc
sub
dec
inc
lds
adc
and
mov
fildl
lods
mov
mov
add
movsb
inc
mov
and
pop
bound
outsb
insl
push
dec
je
jge
outsb
dec
outsl
push
add
outsl
ffree
out
aad
ljmp
xlat
into
fiaddl
mov
push
push
pop
push
add
scas
inc
pushf
mov
mov
fists
and
aas
das
adc
xor
sbb
push
dec
or
inc
pop
push
xchg
mov
mov
sahf
test
pop
dec
pop
pop
pop
pop
pop
xor
loop
in
and
xor
mov
call
repz
cmpsb
stc
call
xchg
test
outsl
clc
incl
xor
jb
cmp
cmp
mov
stos
aaa
frstor
cmpsb
cltd
mov
mov
inc
add
stos
or
xlat
ds
and
xor
pop
inc
xor
or
mov
push
or
pop
inc
pop
add
push
or
and
cmp
adc
icebp
mov
cmp
das
sub
xor
mov
mov
sub
mov
mov
xor
loopne
mov
fxch
lret
mov
add
into
ret
lret
rorb
repz
fsub
sti
incl
mul
lret
lcall
repz
cmc
in
repz
jecxz
sbb
mov
cmp
or
jno
fwait
mov
add
and
fisttps
out
and
ret
pop
rolb
std
or
loop
jb
roll
add
fdiv
out
stc
nop
leave
add
sbb
sbb
ffreep
xor
ljmp
dec
jo
addr16
addr16
popa
ja
pop
pop
pop
dec
pop
int3
outsl
push
pop
inc
loope
sbb
push
push
inc
inc
inc
addr16
rcrb
and
decb
xchg
mov
lret
ret
lahf
jmp
jmp
jecxz
add
rcrb
pop
test
mov
xchg
test
mov
lods
repnz
mov
mov
mov
nop
popf
mov
fdivs
xchg
addl
pushf
mov
fwait
mov
jbe
add
in
idiv
add
push
jg
push
adc
push
cmp
cmp
aaa
mov
clc
sub
sub
xor
cmp
sub
cmp
cmp
add
adc
push
push
add
xor
mov
adc
sub
sub
aaa
aaa
and
std
scas
clc
fxch
mov
div
loope
push
inc
push
mov
push
mov
xor
pusha
addr16
cmp
fstpt
hlt
repnz
jmp
pop
and
xor
xor
cmp
sub
adc
adc
push
adc
sbb
jmp
outsb
push
or
adc
pop
and
and
sub
cmp
xor
add
cmp
inc
addb
inc
inc
inc
xchg
pop
adc
stos
or
or
sbb
pop
push
ficoml
lods
push
adc
jp
dec
pop
insb
call
sbb
and
data16
push
fbstp
imul
push
inc
push
inc
and
fcmovbe
int
add
sub
jo
jno
jo
bound
add
scas
mov
repnz
pop
push
inc
inc
push
inc
cmpsb
inc
jne
insl
outsb
jno
jns
mov
adc
pop
data16
mov
rcl
mov
inc
fld
add
xlat
jno
pop
bound
bound
pop
xor
sub
and
ja
repnz
push
dec
pop
push
pop
jg
push
or
pop
push
pop
adc
pushf
fcmovu
mov
mov
rol
xchg
add
fcmovnbe
xchg
add
flds
aam
xlat
incl
ret
inc
xor
rolb
lar
adc
dec
add
inc
pop
fcomip
mov
and
cmp
xor
nop
push
xchg
mov
sub
adcl
mov
pop
lock
repz
ss
mov
mov
or
incl
adc
xor
inc
inc
pop
pop
sub
scas
mov
sbb
add
and
incl
sbb
mov
mov
loopne
add
pop
dec
push
push
jge
mov
push
and
sbb
or
push
aas
jmp
pusha
pushf
jle
sbb
adc
ds
leave
mov
push
iret
fld
jmp
bnd
shrb
test
icebp
add
push
push
ja
ja
mov
inc
jo
in
add
sbb
repnz
lods
jmp
out
fistl
cmc
repz
adc
inc
into
inc
fmulp
xchg
xchg
les
push
add
rcr
fiadds
mov
push
ret
or
cmp
push
sbb
adc
add
push
imul
mov
das
clc
jecxz
lock
scas
or
mov
hlt
add
or
push
shll
push
inc
rcrb
dec
jns
dec
xchg
push
subb
sub
sbb
js
add
jg
push
mov
inc
pop
inc
and
add
sub
dec
cmp
dec
jle
divb
push
dec
push
jnp
cmpb
bound
call
push
dec
dec
insb
jg
add
xchg
mov
mov
pushf
mov
mov
lcall
add
add
dec
dec
pop
add
and
jl
mov
push
inc
push
sbb
add
pop
pop
dec
sbb
dec
push
inc
pop
sbb
call
push
push
add
pop
outsb
jg
jle
insb
jb
cmp
and
mov
jo
lcall
movsl
lock
cmpb
and
out
mov
pusha
jg
pusha
push
push
push
data16
pop
dec
pop
push
push
lcall
mov
call
or
jecxz
xor
mov
jg
sahf
mov
lahf
cwtl
cltd
mov
add
xorl
aas
xor
add
pop
lods
xor
pop
xor
cmp
inc
cld
sub
jae
loope
out
es
cld
scas
int3
loope
out
inc
shl
fistps
inc
sbb
cmp
push
pop
inc
add
popa
jns
pop
xor
mov
fdivs
push
and
add
lds
arpl
and
pop
pop
push
call
lret
sbb
sbb
dec
insb
push
fwait
add
stos
mov
incl
xchg
sbbl
lea
add
mov
lahf
pushf
lahf
add
fmull
fwait
cmp
xchg
xchg
pushf
lcall
mov
cmp
sbb
sub
aas
sub
call
jp
movsb
into
repnz
cli
ljmp
adc
incl
lock
out
mov
mov
lcall
mov
mov
sti
fcomip
mulb
xchg
or
add
or
add
adc
subb
adc
pop
xor
jl
adc
sbb
or
cmp
jmp
sbb
sub
ds
add
cmpsl
lods
mov
mov
test
lret
cmpsl
mov
xchg
nop
sbb
add
mulb
add
cmp
icebp
in
out
icebp
cli
mul
mul
sar
cmp
lret
rclb
testl
imul
fmul
sti
decl
mov
jmp
repnz
cmpsl
leave
in
out
stc
jmp
rolb
jl
mov
clc
sbbl
into
inc
add
data16
jle
insl
jp
std
das
push
addr16
cld
in
div
cld
cmc
add
cmp
loopne
fsub
out
lock
stc
add
mov
nop
and
adcb
addr16
push
cli
sbbb
jge
and
sub
jb
das
ss
in
adc
sub
xor
add
js
xor
cmp
popa
dec
or
popl
cltd
into
sbbl
sahf
test
iret
lret
mov
ljmp
pop
add
cmpl
xor
aaa
and
pop
and
cmp
and
xor
cmp
ljmp
std
lods
cmp
cmpsb
push
aaa
add
js
and
sbb
pop
add
push
push
push
lcall
and
add
and
sbb
adc
adc
and
rcll
out
in
loope
std
mov
inc
ljmp
aam
sbb
and
es
aas
sub
xor
pop
test
fiaddl
cmp
pop
or
or
xor
and
xor
add
sti
roll
fstp
fiadds
lock
or
aam
rolb
idiv
ljmp
aad
hlt
fcmove
out
cmc
out
loop
cli
scas
int
cli
out
movl
fcmovu
ja
jg
iret
aad
rcr
call
xlat
rol
aam
dec
pop
adc
dec
imulb
push
push
rclb
add
lds
popa
push
andb
popa
jle
jne
dec
pop
jns
jo
jne
das
rclb
insl
cmp
dec
push
addb
inc
dec
inc
sarb
shrb
in
loopne
stos
sti
mov
cld
jmp
pop
icebp
add
cmc
loope
add
cld
mov
dec
imul
cli
rcl
xchg
popf
nop
xchg
xchg
dec
sahf
xchg
test
out
clc
push
lds
ljmp
into
ffree
into
fdivrs
mov
movsb
cmpsb
mov
mov
and
in
cld
mov
lret
rclb
cmp
sub
mov
sub
xor
sub
decb
xor
xor
xor
xor
sub
cmpsb
incl
add
add
pop
push
inc
jg
in
push
or
or
sbb
pop
adc
pop
sbb
loop
push
mov
cld
popa
imul
jo
arpl
push
jb
cmp
hlt
je
je
lret
jb
jp
dec
add
adc
es
pop
mov
outsb
and
sbb
icebp
ljmp
mov
push
dec
dec
push
add
pop
push
mov
stos
nop
mov
out
out
mov
hlt
out
aam
mov
lock
mov
lcall
push
jl
xchg
test
lahf
mov
and
hlt
mov
mov
out
aad
loop
jmp
xchg
mov
fcmovnu
hlt
jecxz
mov
cli
in
popa
and
int3
lret
les
fcom
mov
rcl
mov
rol
aam
iret
in
ror
fcmovnbe
stos
incb
shrb
and
das
and
inc
xor
xor
add
pop
cmp
xor
sub
jbe
cmp
jl
ret
push
and
lods
or
xor
push
adc
push
add
adc
icebp
decl
adc
adc
adc
push
sbb
and
lods
cmpb
ja
adc
shlb
loope
outsl
push
cs
in
and
inc
ss
jno
adc
ljmp
sub
sub
xor
jge
cmp
cmp
add
sbb
mov
xor
pop
adc
xor
pop
std
jg
or
int
mov
jecxz
in
popa
add
pop
pop
pop
add
ja
sub
xor
push
inc
xchg
add
pop
lock
std
pop
pop
push
dec
push
dec
mov
or
test
and
or
mov
or
cld
sub
ja
ljmp
xor
sti
imul
lret
int
lcall
xor
loop
jg
add
pop
pop
add
push
add
adc
ljmp
add
mov
sbb
inc
add
and
arpl
popa
add
or
adc
adc
push
add
sbb
push
add
sbb
sbb
decl
loopne
loop
fcmovnu
loope
mov
cwtl
xchg
mov
movsl
or
test
xchg
movsl
lcall
xchg
xchg
mov
enter
inc
add
adc
std
jmp
fbstp
and
jecxz
jmp
addb
sub
daa
sub
sub
and
sub
pusha
mov
shlb
pop
imul
xchg
xchg
mov
loop
shlb
jno
mov
mov
aas
and
and
loope
inc
popa
bound
jb
add
imul
insb
pushaw
push
lahf
pushf
fwait
mov
cmp
sahf
xchg
aam
cwtl
call
enter
pusha
lods
sbbb
sbb
pop
add
dec
pop
push
pop
inc
pop
int3
inc
inc
inc
inc
or
adc
dec
inc
dec
dec
inc
inc
inc
negb
mov
add
xchg
rol
aad
js
rcr
dec
add
and
xor
scas
push
mov
int3
xchg
mov
test
add
mov
ds
sbb
cmp
sub
decb
jnp
jg
daa
int3
arpl
and
daa
fs
incl
and
mov
adc
sbb
jmp
and
pop
xor
mov
ss
and
cmp
sub
inc
pushl
je
and
cmp
cltd
sub
add
add
inc
clc
in
div
cmpsb
push
dec
add
inc
dec
daa
sbb
fcomip
jg
add
xchg
mov
add
popa
insl
sbb
call
mov
pushl
or
pusha
test
pushf
mov
add
loopne
mov
int
mov
add
fiadds
movsb
loope
jp
inc
fmuls
jbe
data16
jb
pusha
ficompl
pop
mov
add
jno
das
sub
jbe
jns,pn
mov
and
sti
jmp
add
adc
sbb
and
inc
inc
dec
adc
mov
ret
pop
incb
mov
movsb
mov
mov
dec
push
pop
adc
add
dec
inc
pop
aas
rclb
repz
in
mul
jmp
push
push
or
jl
add
inc
pop
ds
daa
adc
ja
or
addl
add
rclb
fbstp
hlt
dec
and
sbb
imul
jmp
dec
shlb
lock
hlt
repnz
mov
add
ljmp
mov
repz
xchg
sub
xlat
cwtl
int3
sar
fcmovbe
sbbb
enter
jo
add
or
or
inc
push
push
sahf
adc
add
pop
pop
add
xor
or
sbb
add
adc
pop
unpcklps
ss
ja
jbe
cmp
scas
aaa
jno
les
xor
xor
data16
stos
jns
test
push
aad
inc
ror
add
add
and
cmp
push
add
subb
sbb
fidivl
scas
mov
add
add
mov
rorb
rorb
fmuls
push
ds
jno
mov
into
push
jno
test
or
cmp
or
aam
xchg
fwait
nop
loope
les
push
sti
push
enter
rcr
insb
movsb
lahf
shl
jmp
push
add
push
add
adc
xor
out
mov
pop
xor
fcmove
sub
add
xor
adc
jmp
pop
insb
xlat
mov
adc
ret
fidivs
jo
fistps
xor
ret
pop
mov
int3
nop
push
andb
add
loop
mov
add
sbb
outsb
xor
fwait
dec
adcb
loopne
mov
push
mov
iret
xor
mov
stc
or
enter
ss
leave
adc
fisubs
clc
push
add
loope
iret
add
inc
add
xchg
mov
enter
mov
hlt
sub
ret
lods
sar
enter
inc
add
fcoms
in
jo
hlt
adc
ffreep
int3
add
xchg
push
fucomi
jg
fld
mov
jns
push
jmp
lods
cwtl
mov
or
in
int3
ret
leave
rorl
nop
or
int3
xchg
adc
pop
fstps
mov
adc
cli
lcall
jecxz
clc
out
inc
out
jmp
out
call
lret
adc
ss
sub
cmp
call
pusha
out
dec
or
ljmp
adc
loop
stc
icebp
or
out
inc
out
dec
sti
in
int3
jo
stc
mov
std
loop
push
xchg
hlt
loop
jg
jmp
xor
std
in
stc
ret
sbb
es
movsb
jo
jnp
aaa
aad
sti
xchg
mov
out
loop
inc
add
dec
or
pusha
mov
arpl
push
pop
stc
incl
out
add
sbb
insl
adcl
jecxz
lret
mov
pop
fsubr
xor
and
sbb
loope
stc
inc
add
loop
ret
enter
add
nop
ret
sbb
iret
sbb
ret
flds
f2xm1
cmp
cwtl
ret
add
mov
or
and
leave
fcomp
lret
mov
vshufps
leave
push
enter
ret
fldl
rol
enter
and
faddp
ljmp
adc
nop
and
and
stc
loope
inc
jecxz
cmp
loop
shlb
shlb
xlat
int3
enter
mov
dec
pop
xchg
pop
inc
out
mov
xchg
into
mov
lods
aad
dec
shr
fmuls
cmpsb
cmp
sub
cmpsb
clc
xor
and
sub
popa
push
in
lret
or
jae
ficompl
repnz
int3
pop
push
scas
test
mov
sub
adc
lcall
shlb
pop
sub
lds
and
mov
daa
lods
subb
pop
dec
aaa
xchg
xchg
and
adc
call
inc
fnsave
xchg
push
pop
out
int3
fimuls
into
lea
inc
lretw
mov
fisubrs
or
mov
shrb
fcoms
jne
aam
fcomp
leave
ret
cmpsb
sbb
push
das
out
fldcw
in
pop
icebp
ret
out
cmpsb
loopne
in
std
mov
jmp
lock
lret
lock
sub
add
call
inc
xlat
movswl
mov
inc
adc
push
sub
ret
dec
mov
adc
clc
ja
inc
inc
sbb
mov
push
sbbb
test
inc
ret
mov
loop
push
stc
lock
inc
into
clc
lcall
jno
repnz
fs
xor
repnz
ret
sbb
jbe
incl
mov
mov
rolb
inc
fdivs
pop
ficoml
push
jno
les
and
decl
pushf
mov
adc
bound
stc
in
sub
clc
push
decl
jo
add
push
sub
inc
das
jmp
cmc
push
lcall
aas
mov
mov
add
pop
pop
cld
add
push
and
nop
pop
mov
enter
push
or
mov
in
cli
ret
fwait
cltd
inc
inc
popl
out
lods
std
mov
dec
sub
xor
fdivs
cmpsb
xor
call
ret
rclb
sbb
jo
push
fsts
hlt
xchg
leave
mov
vpmacssdqh
les
enter
mov
ret
adc
pop
in
movsb
ret
pop
push
jg
jg
arpl
sub
add
xlat
or
fnsave
shrl
sbb
pop
scas
clc
pushf
aas
out
repnz
clc
lods
add
jo
inc
shl
lods
jnp
xchg
xor
push
scas
in
enter
loopne
loop
xchg
arpl
insl
push
lcall
mov
shl
or
mov
cwtl
pop
cmp
and
cs
push
cwtl
gs
js
jnp
scas
pusha
cmp
mov
mov
inc
add
repz
inc
mov
fucomp
sahf
insl
lock
test
aaa
adc
adc
jb
add
mov
cmp
call
fsubrs
sti
cli
sbb
fucomip
sub
mov
dec
and
notl
adc
cld
dec
mov
xlat
movsb
adc
inc
sub
lods
inc
push
lock
push
imul
enter
aas
and
orl
loopne
or
or
sbb
and
xor
or
add
add
push
add
test
stos
in
add
push
and
fs
sahf
outsb
clc
notb
loopne
xor
push
fcoms
and
add
imull
and
rolb
pop
shrb
jp
cmp
shlb
fs
jbe
pop
cld
nop
loope
xchg
mov
sti
adc
int
in
push
es
stos
scas
inc
xor
pusha
add
daa
inc
lock
mov
pop
pop
dec
add
sub
jbe
fsubrs
sbb
outsb
add
outsb
clc
and
fadds
xorb
add
and
rcrb
add
sti
testb
cli
and
sub
pop
orb
loop
xorb
popa
andb
je
rclb
add
in
or
sbb
subb
out
jg
scas
lahf
push
xchg
mov
push
test
or
dec
outsb
adc
add
dec
cld
jp
loopne
cld
fadds
mov
pop
sbbb
mov
jo
mov
mov
movsl
rcrb
mov
andb
popa
es
scas
cs
cs
cmc
mov
lods
fmul
rclb
movsl
mov
addb
fdivr
das
adc
mov
stos
inc
loope
inc
and
push
adcb
cs
ljmp
inc
mov
xchg
lock
push
scas
pop
sar
fildl
or
mov
pop
cmpsb
mov
das
sar
xchg
dec
xorb
xor
lea
sbb
lods
push
gs
shrb
enter
in
ljmp
push
mov
sti
test
inc
mov
rcrb
adc
aaa
adc
movsl
fldcw
sub
movsl
adcl
and
mov
inc
inc
push
fwait
movb
shl
das
mov
push
push
mov
sbb
inc
add
push
repnz
mov
jbe
incb
inc
scas
incb
xchg
rorb
rorl
loope
inc
cltd
hlt
or
shlb
inc
mov
mov
lcall
mov
lods
jecxz
mov
daa
outsb
testb
mov
cs
leave
push
inc
push
mov
xorl
and
push
inc
sbb
jo
out
sub
xchg
outsb
xor
call
insl
test
das
aam
add
pop
rolb
inc
cmpsl
jg
ja
insl
add
es
and
add
or
dec
pop
data16
sbb
pop
decb
mov
std
lcall
cmpsb
pop
jbe
jbe
push
push
sub
shrl
loopne
loop
bound
mov
or
xor
sub
add
add
aas
cwtl
pop
mov
and
lock
testb
push
mov
push
loopne
inc
sub
mov
outsl
loopne
pop
rorb
bound
fsubs
and
loopne,pn
xchg
pop
fsts
mov
cmp
test
sbb
mov
lds
sub
pushl
insl
jp
in
test
push
lds
jmp
push
in
add
sub
cmovbe
mov
mov
iret
notb
loop
push
push
fildl
adc
jg
incl
inc
xadd
addl
push
push
xlat
fadds
out
mov
and
sbbb
ljmp
and
or
test
inc
sbb
inc
add
pusha
je
mov
test
sbb
popa
mov
call
push
fnstcw
gs
push
push
hlt
and
pusha
pop
ret
dec
pushf
jbe
mov
dec
sti
xor
cs
inc
aaa
mov
and
inc
mov
insl
inc
mov
test
add
roll
adc
jbe
jg
push
insb
adc
test
mov
rcrb
xor
fxch
add
inc
je
repnz
inc
stos
sub
adc
fiaddl
sub
stos
rolb
mov
mov
lds
data16
clc
pop
jl
sti
mov
loopne
es
cs
subb
ret
mov
addl
movsb
pop
hlt
sub
and
inc
or
cmp
aad
adc
add
sbb
loopne
inc
mov
mov
and
movsl
or
imul
sbb
jg
fists
and
add
call
sub
and
push
inc
adc
mov
add
add
shll
add
es
jo
fadds
mov
adc
clc
pushl
mov
and
test
sar
fbld
dec
inc
sbb
rolb
mov
rorb
push
shr
inc
lods
sahf
div
mov
test
repnz
loope
inc
movsl
in
aaa
in
clc
add
and
test
std
aam
insb
inc
ljmp
adc
pusha
ja
add
idiv
add
or
add
and
cmp
inc
cs
fistpll
bound
pusha
test
push
pusha
xor
test
inc
add
sti
pusha
sbb
adc
fbld
test
lahf
pop
jmp
movsl
into
mov
push
fldt
inc
sti
adc
shll
lahf
push
rorl
rorb
or
test
inc
outsb
or
std
outsl
inc
movsl
mov
or
xor
inc
inc
ret
call
rcrb
or
filds
add
jmp
dec
lcall
fnstcw
xchg
jp
mov
adc
xor
std
mov
adc
add
repz
popa
add
add
adcl
sahf
bound
pusha
adc
push
cld
lea
movsb
xor
test
jecxz
sti
and
mov
lcall
lds
xor
mov
mov
jns
push
jmp
inc
add
and
fwait
andb
shlb
movsl
cs
cmpsb
clc
aaa
call
movsb
add
ficoml
scas
sub
add
push
lock
fisttps
lds
pop
mov
subb
scas
icebp
jmp
aam
add
bound
test
fisubl
mov
shrb
incl
push
mov
test
sub
xor
repz
ljmp
push
fiaddl
pop
xor
ret
or
adc
loopne
or
jnp
sbb
lock
inc
push
loopne
fistpll
inc
testb
cltd
push
sub
mov
cmpsb
pop
pusha
inc
les
push
xor
mov
std
addb
imul
xor
cli
sahf
push
xchg
nop
and
inc
mov
lds
adc
add
imul
sub
std
stos
stos
jo
add
xor
lds
lret
add
adc
push
jbe
cli
stos
popf
pop
add
adc
in
or
adc
inc
push
fidivrs
pushf
adc
xchg
add
popl
or
add
mov
xchg
mov
push
incl
xchg
adc
or
loopne
les
jge
add
xchg
outsb
push
lock
ljmp
repnz
mov
xor
add
insl
rolb
mov
or
insb
mov
jno
cwtl
and
push
and
rolb
lds
mov
std
sub
adc
daa
cwtl
and
push
add
das
clc
jg
lds
sbb
cmp
mov
adc
add
jmp
jmp
and
sahf
fs
adc
mov
mov
and
or
dec
mov
cmp
xor
xchg
and
push
aaa
dec
sub
sbb
push
into
es
cmpsb
cltd
inc
add
jnp
iret
and
int3
incb
add
sub
lds
pop
inc
xor
dec
stos
sbb
es
inc
cmpsb
adc
test
xor
inc
rcrb
inc
dec
clc
incl
scas
cli
push
fsubs
push
push
std
jg
ret
out
xor
and
pop
nop
xor
or
push
and
add
and
xor
inc
test
mov
shlb
mov
in
and
dec
fwait
mov
add
cmpsl
mov
push
inc
scas
or
xor
sub
and
push
and
shlb
lods
lds
add
es
mov
add
test
push
pop
mov
loope
or
rcll
out
xor
push
add
sub
stos
and
mov
sar
incl
fs
movsl
shll
inc
and
andl
mov
pop
mov
loopne
or
cld
and
mov
sub
sbb
push
test
pop
lock
scas
js
js
jmp
test
jb
jo
sti
or
adc
scas
incl
roll
pop
xchg
imul
cli
and
mov
pop
mov
shrb
mov
icebp
fldcw
test
add
mov
mov
bound
jo
xchg
fcomps
mov
xor
hlt
jmp
sbb
sti
push
popf
shrb
cs
mov
mov
and
jg
in
adc
pop
test
xor
mov
xchg
loopne
and
sbbb
fs
std
in
add
insb
testl
stos
inc
inc
scas
pop
cld
ljmp
out
inc
adc
and
add
sub
add
outsb
cs
js
mov
movsb
mov
clc
pop
sub
outsl
ds
scas
popf
jae
test
xor
lock
in
outsl
js
decb
lret
xor
mov
inc
cmp
mov
push
sbb
shrb
xorb
cli
pop
pop
push
mov
loope
rcrl
rcrb
ret
push
hlt
pop
inc
inc
push
or
insb
sbb
xchg
dec
sar
jo
shll
or
shlb
add
cli
negb
add
add
and
lret
mov
jg
fcomps
mov
push
push
test
stos
out
in
filds
icebp
scas
push
loope
push
xchg
insb
adc
and
inc
outsb
sub
cmpsl
xor
inc
in
jg
je
pop
add
sub
es
mov
mov
mov
sbb
sbb
dec
xorl
cmp
pushl
xchg
loopne
fisttps
inc
add
std
movsl
and
add
fbstp
jmp
lock
or
and
fcoms
pop
cmp
nop
push
inc
ret
cld
cli
mov
jno
jg
dec
lods
cmpb
adcb
or
stos
mov
pop
xor
fwait
mov
mov
decl
lock
shlb
rol
push
inc
dec
shrl
mov
push
test
cmc
scas
cmp
aad
add
mov
sub
jno
es
push
mov
fnstcw
mov
lahf
fldenv
add
outsl
test
jg
clc
jp
mov
add
xchg
inc
sbb
sub
jg
das
mov
data16
addl
pop
xchg
mov
adc
sti
add
pop
pop
test
xchg
test
roll
xor
cmp
movsb
out
push
mov
sbbl
inc
and
and
rcll
and
jecxz
push
push
xchg
shll
repz
mov
lea
call
push
xacquire
mov
add
fcomps
sub
test
push
sbb
mov
cltd
fdivs
rolb
andb
pusha
rorb
decl
or
or
push
add
call
or
loope
mov
mov
scas
stos
sbb
test
fcomps
xchg
adc
inc
scas
sbb
pop
mov
adc
sub
fidivrs
sub
dec
nop
pop
repnz
cld
cld
sti
movb
dec
push
jge
push
inc
jae
notb
sbb
outsb
sub
sub
lods
mov
or
or
fstps
jecxz
fcmovnu
orb
fcomp
push
fdivp
xchg
sbb
int3
std
add
add
push
insl
fdivr
add
mov
insl
push
in
push
lret
sub
inc
ret
jbe
push
pop
mov
add
icebp
movsl
test
rolb
cmp
outsb
add
repnz
or
sub
ljmp
and
mov
enterw
sti
lcall
fs
mov
sahf
inc
xchg
add
stos
sar
mov
in
lds
andb
imul
xor
stos
bound
clc
lds
push
adc
xchg
nop
push
jg
push
jmp
inc
sbbb
js
inc
addb
outsl
xor
add
or
and
mov
add
inc
xchg
test
dec
mov
sbb
jae
in
or
or
cwtl
popa
cwtl
cli
add
and
sub
push
push
add
push
cwtl
xorl
push
ds
std
push
cld
jmp
xchg
pop
andb
fsts
stos
pop
and
push
jmp
jmp
lds
fwait
shrl
stos
jmp
outsb
inc
cld
das
sub
mov
sub
sti
cli
sub
pop
fdiv
scas
clc
add
jb
aas
orl
hlt
inc
ja
aaa
sbb
mov
lods
js
and
and
shlb
shrl
pop
adc
and
out
xchg
jmp
insb
pop
sbbb
mulb
mov
adc
mov
or
add
mov
popa
scas
stos
shlb
xchg
loopne
hlt
icebp
push
and
inc
push
cmp
sbb
incb
push
lds
add
and
lahf
ret
push
xor
mov
or
xorb
out
cli
ljmp
nop
icebp
test
add
push
inc
adc
jbe
lcall
mov
and
inc
fwait
mov
pushf
nop
and
jne
xchg
adc
push
fdivr
push
cmpsb
and
add
pop
scas
std
and
std
std
add
andb
xchg
dec
imul
imulb
stc
cmc
or
mov
popf
or
inc
inc
shlb
rcrb
mov
lds
shll
ss
scas
shlb
jp
dec
lock
push
sbb
inc
push
inc
xchg
add
inc
and
push
das
mov
xchg
add
sbbb
test
data16
out
mov
cld
imul
out
loope
xchg
inc
and
push
or
jle
adcb
add
cli
xchg
fsts
or
test
ret
mov
inc
xorl
fs
mov
stos
push
int
dec
add
add
and
fldl
rolb
jmp
sbb
shlb
adc
mov
cmpb
pop
js
inc
ss
hlt
jle
test
sbb
cmpsb
inc
and
mulb
push
aaa
inc
adc
add
cmpsb
outsb
hlt
hlt
loopne
inc
push
nop
shll
es
xorb
xchg
enter
adc
ret
adc
shll
adc
and
push
jecxz
fs
and
mov
fmuls
aad
aas
add
add
add
sti
pusha
pop
mov
adc
incb
push
and
xlat
push
jne
in
orb
xor
adc
aad
xchg
scas
out
pop
mov
rolb
xchg
mov
add
push
movsb
sahf
jg
mov
pop
sbb
jg
sub
sbb
ljmp
mov
cmp
in
rolb
add
mov
xchg
pop
mov
mov
add
mov
sahf
jbe
cmp
sub
sub
or
addl
dec
stos
les
add
lods
loope
fimuls
and
and
sub
add
out
inc
test
std
sahf
inc
cmpsb
movsb
bound
inc
adc
cli
adc
pusha
sbb
fcomps
sub
inc
decl
mov
inc
xchg
repz
cmp
es
cwtl
int3
popa
and
push
add
outsl
shrb
push
xchg
inc
push
add
xchg
jo
push
sub
call
std
inc
or
loopne,pt
mov
push
pushl
jp
push
rorb
pop
inc
test
pusha
insl
inc
pop
mov
xchg
and
inc
push
cwtl
mov
dec
or
add
jl
sbbb
ftst
ss
imul
add
and
pusha
inc
fwait
sti
pop
test
pop
and
andb
movsl
into
fisubrl
decl
xchg
mov
stos
adc
aaa
pop
cmpsb
xchg
rorb
pop
add
mov
sbb
mov
pop
add
lods
sub
and
cs
push
add
adcl
mov
xchg
or
or
mov
push
je
dec
dec
add
and
and
roll
push
mov
pop
pop
hlt
arpl
loope
adc
cli
mov
add
faddl
push
aam
les
jbe
mov
inc
nop
cmp
ret
ljmp
push
jp
mov
cmp
push
or
add
mov
je
fstcw
mov
mov
adc
jmp
adc
outsl
mov
mov
jne
adc
mov
xor
xchg
rol
in
int
call
in
or
inc
dec
out
pop
mov
inc
ficomps
xchg
scas
es
outsb
mov
dec
cld
or
cltd
mov
incb
aas
sbb
mov
inc
lds
roll
loop
sub
movsl
push
cwtl
xor
test
jl
cs
data16
and
push
xor
test
pop
std
mov
movsb
std
imul
lods
movsl
shlb
lds
mov
sub
mov
jg
mov
sti
push
inc
fsubrs
inc
lds
pop
inc
addb
fimuls
movsl
shlb
andb
shrl
jns
hlt
nop
add
outsl
outsl
shrb
in
faddl
push
mov
jecxz
push
or
enter
jo
loopne
adc
loopne
mov
pop
inc
cmpsl
rolb
push
popf
hlt
lock
cmp
addl
add
sub
stos
sub
add
adc
pop
push
push
mov
andb
inc
out
pop
mov
das
push
add
fnsave
jecxz
mov
decl
lods
fadds
jmp
xchg
in
fldenv
and
inc
jl
test
add
pop
adc
scas
and
inc
and
ljmp
and
jmp
mov
adc
gs
lock
adc
cltd
inc
and
jg
push
and
adc
fcom
das
sti
and
xchg
or
pop
ret
nop
test
movl
cli
jg
cwtl
sub
mov
and
add
add
cld
push
push
mov
stos
lods
adc
aam
sbb
mov
or
push
sbb
in
ja
mov
and
mov
mov
sbb
jg
lds
add
mov
lock
adcb
mov
xchg
mov
mov
xor
mov
cli
inc
sbb
or
push
sub
adc
scas
cli
call
cltd
subb
xor
cli
adc
inc
push
scas
xor
and
xor
cmpl
fcoml
icebp
add
std
adc
mov
mov
ljmp
mov
pushl
push
inc
pop
pusha
dec
jmp
std
xor
mov
inc
andl
inc
cmp
jmp
mov
add
jmp
and
sbb
jmp
enter
pushf
adc
add
jo
lds
lret
fwait
or
adc
mov
fnstcw
bound
cli
jno
inc
push
lea
lock
mov
fbstp
bound
adc
push
mov
and
out
clc
sbb
mov
or
loopne
add
fldenv
fisubrl
test
adc
lock
inc
mov
pop
decl
xor
jo
inc
sbb
add
sti
fs
sub
clc
in
mov
push
rcrb
push
add
pop
pusha
add
cmp
mov
adc
das
sbb
or
inc
cli
adc
fiadds
mov
inc
jge
push
loopne
xchg
cli
pop
mov
jle
push
cmpsl
and
mov
fucomi
xor
outsl
incl
push
and
mov
sub
xor
push
mov
fisubrl
pop
std
movl
or
add
and
jo
mov
cmpsl
pusha
mov
inc
mov
xor
push
test
or
xor
pop
fidivl
clc
add
pop
call
sub
imul
cwtl
fisubl
add
or
aas
jbe
test
mov
jno
mov
or
xchg
push
call
push
add
rclb
xchg
fwait
and
adcl
aad
bound
mov
push
or
stos
ljmp
or
scas
adc
fsubl
cmp
je
lock
jle
push
dec
mov
popa
add
sbb
push
dec
push
outsb
aaa
ret
call
clc
and
fcomip
mov
loopne
loope
test
sub
stos
ss
xor
mov
ds
inc
das
fisubs
jg
cltd
add
mov
sub
aad
xor
push
lock
push
sbb
push
push
mov
mov
ljmp
jp
inc
or
test
in
or
cmc
pushl
mov
inc
test
fwait
mov
ljmp
test
cmp
add
pop
mov
jg
adc
mov
inc
lock
xchg
stos
mov
pusha
sti
adc
movsb
adc
inc
les
cwtl
std
test
sbb
nop
push
or
test
ljmp
lock
push
nop
add
add
mov
pop
aad
mov
into
lock
mov
lock
xchg
pop
cld
scas
add
push
xchg
outsb
fsubs
xchg
xor
es
dec
call
and
es
or
fstl
incb
and
pushf
rolb
decl
jae
lea
inc
ret
adc
sbb
icebp
and
stos
mov
or
or
icebp
decl
adc
sub
insl
decl
arpl
mov
imul
lds
inc
test
leave
inc
jae
je
std
sar
push
mov
loope
mov
and
mov
or
call
push
sub
adc
jb
and
mov
jno
inc
pop
je
mov
inc
in
sub
mov
into
subl
mov
mov
sbb
bound
sbb
sub
sbb
loope
push
mov
call
jo
fs
std
add
dec
shrb
cmpsb
lock
mov
int
add
adc
mov
adc
or
decl
push
push
push
sbb
add
outsl
cmpl
jg
fisttpl
fadd
movl
xchg
inc
jnp
jnp
mov
movsl
test
inc
loopne
ljmp
inc
pop
lock
flds
and
pop
adc
mov
sbb
jae
cmc
ljmp
add
inc
push
or
or
push
mov
add
les
call
mov
jb
movb
dec
les
inc
popf
andl
dec
add
movsl
addl
out
pop
pop
jle
mov
or
test
fadds
inc
jmp
or
mov
and
mov
mov
roll
xor
fidivl
std
or
push
add
dec
int3
and
fs
mov
add
sti
mov
sbb
xor
adc
mov
adc
outsl
push
inc
mov
les
xor
jb
clc
and
mov
rolb
or
addl
jecxz
adc
inc
add
test
adc
adc
adc
mov
dec
imulb
add
inc
test
test
push
lret
sbb
sbb
mov
dec
test
je
pusha
pop
jl
cmp
pop
add
inc
mov
sub
shlb
fadds
xchg
dec
pusha
addl
or
pop
dec
pop
xchg
enter
xchg
mov
sbbb
lods
fiaddl
and
mov
push
loope
add
push
aaa
push
xor
add
sbb
scas
cmpb
push
neg
jle
popa
pop
xchg
fldl
out
sti
mov
loop
xchg
or
hlt
add
mov
scas
test
fs
aad
popa
cs
add
inc
cli
call
mov
roll
push
inc
mov
adc
inc
scas
jp
mov
jo
shlb
leave
add
mov
add
orl
fdivrs
xchg
inc
cmp
add
or
lock
push
je
lods
stos
pop
push
loope
in
imulb
inc
xor
mov
popa
insl
cmp
data16
push
sub
adcb
add
js
bound
add
outsb
call
sbb
fwait
or
mov
shlb
insb
test
pop
incl
xorb
popa
inc
cmovbe
pop
jmp
std
fldl
add
or
insw
test
lock
add
and
outsl
sub
mov
lock
xchg
ret
int3
push
rclb
pop
or
pop
mov
mov
inc
jge
in
add
sbb
call
icebp
pop
insl
mov
cli
cld
inc
jb
es
hlt
push
loopne
add
lods
movsl
mov
xchg
pop
in
push
std
jmp
daa
mov
fcomps
inc
sti
shlb
lds
push
pop
sbbb
addl
fiaddl
push
scas
inc
inc
dec
loopne
sbb
adc
or
xor
adc
mov
pop
in
notb
cld
xchg
mov
fsubs
xchg
loop
filds
rclb
incl
sbb
sbb
inc
cmp
push
and
mov
outsl
clc
data16
movsl
add
loopne
fidivs
mov
pop
push
shll
in
and
fsubrs
xchg
jb
andb
sbb
pop
andb
sbb
and
repnz
call
es
and
sahf
xor
mov
inc
mov
loope
inc
fsts
cmc
and
frstor
sbb
or
push
loopne
loopne
pusha
and
mov
je
adc
stos
lods
ret
mov
in
dec
or
outsb
push
add
negb
stos
mov
inc
call
dec
clc
imul
inc
adc
lahf
jbe
add
mov
jb
or
rolb
pushl
mov
inc
scas
push
add
cltd
loopne
mov
pop
and
cmpb
fdivr
inc
test
xor
jbe
out
cli
mov
loopne
jbe
lds
popa
fwait
insl
test
mov
inc
sahf
mov
jo
bound
std
fsubrs
cli
sub
adc
decl
rclb
mov
out
loopne
mov
lcall
push
sarb
mov
movsb
rclb
xchg
inc
cmp
jg
scas
push
add
add
jo
push
xchg
sbb
inc
or
mov
lock
enter
daa
es
mov
push
mov
cs
jns
add
add
addb
hlt
fimuls
ss
repnz
std
data16
jne
mov
loope
cli
cmp
sbb
mov
and
and
mov
lcall
je
and
jmp
in
add
mov
test
mov
loopne
enter
adc
inc
loop
cmpsb
out
push
or
mov
or
or
sub
mov
or
cld
flds
or
mov
inc
jae
clc
push
push
in
push
test
xchg
push
sbb
fbld
or
fcmove
add
adc
or
inc
mov
inc
fisubrs
jbe
incl
adc
inc
sbb
inc
std
inc
mov
mov
shrb
adc
mov
adc
mov
sub
add
dec
and
mov
add
jns
jo
pop
movsb
sti
pop
test
pusha
pop
fs
mov
pushf
add
pusha
pop
lock
fldenv
xor
xor
inc
rorb
pushl
ds
les
push
orb
add
add
test
dec
icebp
incl
and
inc
pop
inc
mov
inc
roll
pop
mov
add
jno
push
inc
outsb
inc
es
es
push
stos
std
mov
inc
jp
mov
pop
fadd
bound
lock
mov
jg
icebp
add
dec
loopne
mov
sbb
jb
and
ret
in
mov
orb
sbb
pusha
xchg
pop
sub
lret
xchg
repnz
fstps
jmp
call
cmc
lret
and
shr
lret
es
lret
in
mov
dec
movsl
lret
cmpsb
insb
and
jmp
es
sbb
mov
stc
clc
in
xlat
pop
add
and
mov
sti
cs
cld
in
mov
std
and
cmc
es
nop
or
repnz
div
xor
cs
dec
fisubrl
cld
cld
mov
jg
push
lock
and
push
inc
cmpsb
sbb
mov
push
and
push
jno
inc
inc
inc
push
push
std
das
push
loopne
inc
test
xor
mov
aaa
std
inc
jge
cli
xchg
lock
fcmovbe
flds
adc
pop
ljmp
fnstenv
and
sub
jle
add
stc
es
rorb
lret
adc
xor
and
mov
add
jge
test
and
lock
pusha
mov
loopne
pusha
sbb
mov
sbb
pop
and
es
adc
bound
je
mov
add
mov
data16
pop
test
cmpsb
inc
mov
sub
push
dec
sbb
lar
jbe
fisubrs
push
add
xor
pop
sbb
icebp
or
call
movsb
ljmp
mov
or
shlb
add
adc
ss
push
push
mov
adc
pushl
add
sub
mov
or
repnz
dec
mov
outsb
andl
pop
scas
and
imul
pop
cmc
retw
push
pop
xor
add
or
mov
inc
cmp
sub
mov
push
lcall
sbb
xchg
mov
ja
out
mov
out
add
pop
popa
in
leave
and
movsl
loopne
inc
jae
adc
xor
cmp
aad
rclb
adc
cmp
inc
dec
pop
xor
inc
add
and
push
add
test
movsb
sahf
fbstp
jl
je
std
add
push
addl
add
test
adc
nop
addr16
cbtw
xor
inc
mov
ret
subb
fcomp
mov
inc
mov
popa
mov
sarl
mov
cmpsl
sbb
int3
addb
add
in
rolb
push
fnstenv
add
and
fwait
cmp
mov
and
inc
jno
inc
adc
add
add
add
stos
mov
sub
dec
xchg
push
cmp
out
clc
outsl
push
in
repnz
notb
dec
test
rclb
pop
xchg
sbb
and
and
mov
mov
and
lock
adc
jne
mov
cmp
or
sbb
ret
lock
mov
jo
pop
movsl
mov
out
add
mov
scas
inc
es
and
gs
add
aam
push
add
outsb
cmp
pop
cld
mov
into
clc
add
mov
mov
lea
nop
cs
cmpsl
lock
or
incb
mov
shll
inc
out
cli
pushl
sub
loopne
sub
add
loopne
fmuls
sbb
and
add
push
mov
jns
dec
pop
pop
ret
je
cmc
repnz
insl
dec
adc
or
cli
incl
sti
inc
push
xor
pusha
dec
bnd
xor
mov
pop
push
xor
out
pop
xor
mov
inc
das
xchg
add
rclb
dec
lods
imul
add
test
incb
stos
cmc
and
mov
add
mov
loopne
fiadds
jbe
push
or
sub
mov
push
pop
in
and
sub
dec
repz
rclb
mov
and
popa
xchg
rolb
es
mov
jmp
nop
mov
call
mov
aaa
imul
jae
add
inc
xchg
aam
sub
inc
nop
cmp
or
add
out
js
inc
insb
pop
inc
xchg
mov
pop
cmp
jno
scas
outsb
mov
xor
mov
repnz
incb
outsb
incl
inc
fst
and
sub
daa
add
push
pusha
lds
mov
adc
fcomip
add
loopne
insb
lahf
shll
mov
jbe
rolb
ss
adcb
adc
loopne
inc
adc
push
fst
inc
xor
pop
call
pop
inc
add
out
call
sbb
mov
mov
sbbb
xor
jg
adc
add
xor
inc
dec
push
dec
push
pop
xor
push
lods
shlb
loop
mov
pop
mov
es
es
mov
and
pop
mov
jl
mov
sub
sarl
jp,pn
xor
jg
pushf
nop
inc
les
ljmp
cltd
or
or
negb
add
outsb
rclb
es
pushl
jmp
add
insl
inc
in
aam
lock
or
adc
shl
jmp
dec
icebp
mov
adc
aam
outsb
pop
jmp
pusha
loopne
inc
mov
lock
lock
fistl
mov
pusha
and
mov
hlt
outsl
int
adc
insl
aam
sbb
dec
inc
pop
add
lock
enter
ret
jne
jns
adc
je
pushw
cs
sbb
mov
inc
or
xor
clc
lcall
jg
adc
add
xchg
std
add
in
push
lcall
mov
insl
add
imul
sbb
sub
jno
push
lods
pop
leave
mov
mov
add
add
cmp
pop
jbe
mov
push
mov
clc
rorb
mov
adc
es
test
push
sub
jb
adc
xor
addb
jb
fdivr
cli
clc
sahf
or
xor
lcall
outsb
and
mov
inc
inc
roll
adc
jmp
sub
mov
adc
add
add
mov
xchg
pop
mov
and
xor
jg
aaa
add
mov
mov
add
jmp
add
xor
xor
mov
out
xor
add
int3
and
inc
incl
or
add
sbb
sbb
outsb
push
xor
cmpsb
or
pop
inc
scas
jg
or
mov
mov
add
fists
std
sti
roll
inc
pop
pop
lock
test
add
push
je
lcall
es
loope
stos
lods
lret
shr
jl
loopne
clc
aaa
xchg
push
add
jmp
inc
and
sub
sbb
test
dec
add
sbb
mov
icebp
mov
xchg
and
inc
ds
faddl
xchg
jo
shr
ret
orb
mov
adc
mov
add
cmp
scas
cmc
inc
cmp
xor
mov
pop
xchg
pop
aam
or
adc
add
xchg
cld
scas
out
push
adc
add
and
and
outsb
addb
or
mov
vpminub
push
adc
adc
sub
stos
pop
inc
mov
fdiv
rorb
dec
movsb
notb
shlb
inc
sbbb
fmuls
xor
sbb
outsb
sbb
mov
jbe
xor
into
dec
mov
or
data16
push
adc
xor
cwtl
jno
lret
push
jno
xchg
or
outsl
add
add
call
sbb
movsl
and
ljmp
ljmp
sub
addb
test
mov
xchg
pushf
xchg
fldenv
inc
or
clc
pop
cs
mov
sti
shll
add
fiaddl
sub
mov
loopne
inc
sub
or
fidivl
mov
add
or
sbb
and
cmp
or
scas
jbe
dec
in
adc
push
mov
mov
test
fnstcw
inc
mov
or
cmp
fcom
add
add
inc
fldenv
ljmp
and
mov
es
mov
test
adc
cld
outsl
ss
inc
mov
out
mov
imul
fsubs
shl
pop
cmpsb
sub
movsl
fdivrl
jo
push
outsl
pop
xchg
sti
mov
add
aas
add
std
and
andb
inc
test
shlb
and
mov
subb
orb
es
cld
outsl
pop
fsubrs
sbb
shll
add
pop
fsubrs
or
jle
pop
jle
xor
sub
and
in
loope
add
in
mov
jb
aaa
adcb
test
push
adcb
push
mov
sub
mov
adc
mov
or
loope
outsl
jg
inc
andb
rolb
xchg
shlb
test
cs
movsl
scas
div
cmpsb
bound
jp
outsb
inc
cs
adc
add
pop
aaa
push
stos
inc
xor
call
inc
add
inc
add
mov
movsb
lods
insl
pop
ret
sbb
or
addl
fisubl
adc
out
in
add
lock
push
and
mov
ret
add
dec
addb
out
roll
adc
or
and
aaa
and
sub
add
bound
mov
push
xchg
sbb
mov
add
mov
adcb
sbb
loopne
cmpsb
ret
loop
outsl
push
test
sahf
shll
inc
fiaddl
dec
add
cld
xorb
adc
pusha
adc
scas
and
mov
ret
mov
sbb
or
outsb
icebp
mov
nop
lret
dec
cmpb
test
inc
imul
test
mov
andl
loopne
sub
lods
mov
add
call
fistpll
inc
and
rorl
adc
fsub
add
xor
inc
add
mov
mov
into
icebp
in
outsl
sub
inc
andb
scas
loopne
xchg
gs
lcall
and
rclb
dec
jne
dec
pop
inc
mov
sbb
stos
roll
in
mov
add
sbbl
jle
fs
sbb
pop
and
out
clc
inc
and
inc
mov
stos
fbstp
pop
add
test
lods
fsubs
cs
stos
fimuls
movsb
or
in
stos
pusha
add
out
push
adcl
fs
loopne
mov
sbb
mov
push
inc
or
mov
movsl
pop
jnp
pop
or
mov
pop
sti
push
sub
gs
lock
fcomps
lahf
mov
jo
mov
mov
in
xchg
push
mov
ficoml
incb
inc
shrl
insl
mov
stos
in
hlt
adc
xchg
ss
cwtl
shll
fisttps
sbbl
lods
call
push
cs
das
and
cli
push
or
inc
push
call
sbb
repnz
addb
ljmp
outsl
fldt
js
mov
inc
xor
and
mov
push
or
xchg
repnz
popa
inc
imul
mov
pop
jne
xlat
decl
arpl
fcmovb
sahf
cmc
enter
sub
rcr
sbb
rolb
outsb
mov
lret
pop
mov
enter
xorb
out
push
mov
xor
xchg
enter
pop
sarb
shrb
callw
in
adc
sub
popa
inc
aam
in
fs
in
jo
pusha
mov
pop
adc
push
gs
mov
sarb
lods
or
loopne
pop
inc
mov
mov
pop
inc
mov
mov
incl
rcrb
mov
outsl
inc
add
sbb
mov
mov
inc
mov
test
test
adc
mov
sti
sub
roll
add
bound
test
add
lahf
add
jle
scas
xor
cmp
inc
leave
inc
rcrl
or
inc
xchg
mov
test
clc
testb
add
sub
dec
lock
xchg
lcall
add
sub
dec
or
push
inc
pusha
add
movsb
ljmp
xor
nop
fcomps
push
jno
push
dec
shrb
test
loopne
fstps
mov
es
sbb
pusha
rolb
add
call
lods
lcall
std
outsl
push
js
scas
inc
and
lock
adc
ljmp
push
jno
mov
jbe
lock
test
jo
push
cltd
sbb
and
add
jbe
data16
sti
push
dec
lods
adc
xorb
bound
adc
cs
repnz
sar
xor
inc
or
inc
daa
mov
xor
rolb
mov
test
pop
push
mov
add
sub
rolb
cmp
test
mov
rcrb
mov
sbb
inc
push
and
data16
sbbb
xchg
test
inc
mov
xchg
ljmp
es
out
dec
shlb
push
add
vaddsubpd
inc
call
sbb
jge
jnp
xor
pop
push
push
nop
insb
sub
push
faddl
add
cmpb
mov
lock
roll
push
fisubs
inc
push
sti
mov
into
fwait
jecxz
loopne
or
push
push
fcomip
push
jge
inc
fisubrs
mov
nop
pop
add
xor
sub
cltd
add
or
or
hlt
add
es
jmp
in
xorb
jno
and
mov
and
add
add
push
sbbb
push
in
push
sub
stos
and
pop
adc
cs
rcll
push
jo
and
aas
out
inc
add
add
jno
pop
mov
jne
inc
dec
jo
jbe
dec
inc
sbb
mov
push
and
add
sub
loope
mov
push
lcall
sar
clc
jg
mov
push
add
stos
xchg
mov
mov
adc
cmpb
test
push
and
push
pusha
push
subb
mov
js
rcr
fs
mov
inc
dec
pop
loop
lock
sub
mov
mov
mov
xchg
xchg
push
in
scas
in
jbe
idiv
loopne,pn
lods
add
lods
sub
add
pop
push
lods
or
push
sub
sub
push
dec
add
aam
xor
mov
out
mov
sbb
jno
inc
inc
cs
pop
sub
lea
add
inc
movsl
inc
inc
add
fidivs
das
adc
add
add
mov
sub
mov
addb
ret
popw
and
adc
in
outsl
mov
add
xor
mov
pop
mov
jbe
loopne
pushf
add
ficomps
andl
push
and
imul
jo
push
add
sarl
sbb
or
frstor
lock
and
push
cmp
ds
sbb
add
nop
ja
add
rolb
inc
les
add
inc
jno
jo
add
push
in
adc
xchg
mov
cld
out
mov
rcrl
sub
jb
cltd
loopne
icebp
popf
ret
inc
or
inc
or
insl
jo
mov
or
add
adc
movsl
xchg
test
mov
cmp
dec
je
outsl
push
std
sbb
inc
or
call
mov
incl
jo
add
mov
cmpsb
push
dec
outsl
sub
adc
mov
adc
add
cmp
mov
pop
mov
mov
mov
sub
add
nop
mov
cmp
cld
and
aas
xlat
sbb
add
fwait
out
test
call
daa
cmpsl
jo
rorl
scas
cmpsl
lods
sub
scas
jg
adc
in
adcb
mov
repnz
mov
push
aam
movsb
cmc
mov
jbe
add
sub
xchg
and
outsb
or
mov
dec
sti
mov
test
add
sbbb
or
mov
sbb
or
out
add
call
mov
mov
mov
fdivs
fisubrs
lret
and
in
add
lock
fisttps
loop
aaa
push
icebp
ret
shlb
sub
int
mov
ljmp
jmp
xor
fistpl
adc
dec
pop
jg
jbe
jb
sbb
out
ffree
mov
xchg
cmpb
es
add
sub
xchg
push
shlb
mov
jge
in
test
mov
lds
test
adc
out
sti
cld
push
sub
sub
ljmp
adc
push
or
insl
cli
inc
cmpsb
call
je
sub
mov
call
xchg
add
and
aas
or
mov
and
add
enter
nop
push
movsb
adc
mov
incl
roll
sbb
pop
scas
xor
push
pusha
xchg
add
mov
push
push
xchg
cs
data16
mov
add
lock
inc
adc
sub
inc
mov
pushf
mov
call
stos
push
add
sbb
sub
push
fisttps
mov
out
xor
loopne
movsb
sahf
add
jmp
out
sub
inc
stos
loopne
out
in
fistpl
pop
outsb
shlb
addb
mov
cmp
push
add
movsl
and
stos
jmp
shlb
xor
xchg
call
into
fimuls
insb
es
xchg
aaa
std
fwait
or
cld
xchg
and
ja
and
clc
and
cmp
pop
and
mov
or
push
and
es
and
hlt
scas
arpl
add
sbb
mov
and
lods
xchg
adc
pop
push
sub
mov
add
je
xor
and
pop
lock
incl
add
adc
push
and
rclb
sti
inc
jp
mov
add
dec
fwait
in
jg
and
add
push
push
jmp
mov
jnp
aas
movsb
sbb
mov
adc
lock
inc
into
xchg
cli
scas
ss
add
xchg
pop
stos
es
push
pop
add
fdivrp
es
xchg
pop
fbstp
mov
sbb
add
or
sub
add
add
xchg
cli
xchg
clc
pop
fimuls
lds
adc
push
std
add
aad
mov
pop
add
ds
push
stos
fiadds
dec
cmpsb
fldl
popa
inc
test
pushf
adc
movb
out
cmpsb
data16
enter
ljmp
sti
push
dec
loop
dec
inc
and
pushf
push
dec
lret
outsb
mov
push
or
add
inc
cmc
dec
or
push
mov
push
pop
push
dec
inc
add
and
mov
adc
and
fisubrl
ss
lcall
jecxz
pop
cli
jmp
add
add
adc
or
rolb
mov
call
rclb
gs
inc
add
add
es
es
mov
or
scas
popa
test
cmpl
icebp
add
sub
addb
and
and
add
clc
mov
fiadds
add
jle
es
shll
mov
and
jle
inc
mov
pusha
xchg
cli
clc
ss
and
les
es
mov
mov
jbe
xchg
lods
sub
cmpl
scas
cli
add
mov
add
scas
xchg
sbb
imul
orb
add
inc
and
add
mov
bound
hlt
popf
orb
cli
jp
xchg
inc
rorl
int3
jle
mov
push
aam
mov
rolb
das
jbe
call
mov
sti
xor
cmp
or
adc
bound
or
ljmp
cs
add
mov
call
or
pop
loopne
testb
sub
sbbb
lock
cmp
push
sub
fs
je
lods
arpl
mov
cwtl
dec
inc
push
lea
add
js
fildl
aam
cmpsl
xor
jo
lock
add
jno
dec
inc
mov
add
cld
shlb
je
push
add
nop
push
adc
insb
rcrb
scas
outsb
dec
adc
loop
fisubrl
out
test
fwait
add
inc
sub
fiaddl
jns
inc
sbb
jg
sub
fstpt
add
mov
enter
jmp
inc
test
aas
or
push
fadd
or
xchg
scas
test
jb
and
xchg
orb
stos
pop
fwait
add
cwtl
add
clc
jle
sub
jl
or
call
lds
push
cld
add
inc
popa
iret
dec
out
out
sbb
and
stos
adc
push
lds
out
jmp
cmpl
mov
movsl
inc
int
stos
or
mov
mov
pop
les
icebp
scas
push
sti
fldl2t
rolb
enter
test
ja
filds
or
jb
cmp
add
inc
pop
cli
cld
xchg
clc
dec
fsubs
adc
lods
push
add
pushl
xchg
inc
push
cs
mov
and
ljmp
test
faddl
nop
call
jge
cmpsb
inc
int
scas
js
push
or
pop
sahf
and
sbb
sti
rcrb
es
pop
sbb
sbb
ret
pop
or
rcr
popf
inc
into
cltd
xchg
test
testb
inc
fldenv
add
es
mov
nop
inc
add
cwtl
push
mov
cmp
sbb
hlt
mov
mov
decl
inc
arpl
sub
repnz
movsb
pusha
add
roll
in
jl
dec
shlb
sbb
jne
xchg
sub
xchg
add
dec
sahf
jbe
or
sbb
add
enter
inc
outsl
sbb
mov
mov
dec
test
and
xchg
push
jmp
pusha
xchg
xchg
inc
cmp
cmp
add
mov
scas
dec
stos
or
in
push
push
andl
add
out
lds
add
aam
sub
jg
mov
adc
loopne
fldcw
fs
xchg
scas
mov
sub
out
sub
add
sub
mov
mov
movsl
mov
add
lcall
or
and
mov
in
inc
inc
dec
add
push
cld
fwait
pop
mov
ds
adc
mov
jo
outsl
and
dec
xchg
cmc
fcmovnbe
outsb
adc
inc
fnsave
xchg
test
and
sbb
xchg
sbb
loopne
mov
pushw
cmpsb
shlb
cld
sub
inc
jge
add
flds
je
scas
inc
shll
ret
mov
or
mov
pop
xchg
popa
or
inc
add
outsl
sbb
push
and
loopne
loope
pop
jg
mov
lahf
loope
rorl
std
inc
lds
sti
pusha
xor
add
xor
das
add
cmpsl
sub
gs
pop
in
add
pop
cmc
in
adc
add
aaa
shrb
mov
push
inc
add
icebp
cmp
pop
inc
push
jno
inc
popa
aas
inc
add
add
enter
cmp
outsl
aam
add
add
adc
stos
repnz
mov
inc
jg
lea
adc
cmpl
decl
inc
inc
push
popf
add
cli
xor
xor
cli
and
pusha
add
icebp
fnstsw
js
add
test
add
jg
add
roll
push
cltd
adc
and
add
jp
loopne
loope
add
aam
add
and
test
test
and
inc
inc
cmp
aam
xchg
push
fsubrs
inc
ljmp
fcom
loopne
repnz
movsb
and
adc
inc
inc
jecxz
mov
mov
mov
mov
xor
and
or
push
hlt
test
or
orb
outsb
es
mov
add
js
mov
addr16
inc
mov
pop
add
daa
mov
cli
or
pop
xchg
mov
add
mov
jne
test
fiaddl
xchg
sahf
jg
fsts
mov
scas
rcrl
add
mov
mov
adc
mov
movsl
inc
inc
adc
call
dec
pop
inc
mov
nop
jbe
ss
in
clc
addb
inc
dec
loopne
adc
ss
movsl
mov
sbb
sarb
loopne
sbbb
cld
fxch
sti
incb
sub
test
dec
in
and
jno
add
shll
std
pusha
pop
mov
xchg
sbb
pop
andl
add
or
vsubpd
cmc
mov
adc
repz
movsl
shrl
in
clc
outsl
test
inc
es
add
add
imul
cwtl
aaa
std
mov
jo
and
jo
and
push
aam
lock
mov
sub
nop
pop
push
add
add
lock
sahf
sub
and
loopne
mov
imul
jbe
mov
xchg
add
xchg
fstpt
mov
mov
in
mov
filds
jge
outsb
es
es
mov
sbb
add
sub
inc
cld
rclb
xchg
adc
sub
mov
adc
lock
es
and
sub
pusha
push
fdiv
pop
xchg
test
mov
adc
leave
mov
test
lods
mov
fdivr
mov
ss
fcomps
fsubr
xchg
push
and
loop
js
fcomps
lret
add
xchg
aaa
push
jp
push
sbb
jg
add
repnz
and
cmp
mov
push
loop
nop
xor
test
add
add
in
jo
out
xlat
adc
xor
xor
aaa
subb
pop
sti
or
sbb
add
test
mov
and
fdiv
jo
or
shlb
dec
add
pushl
sub
or
push
mov
cmpsl
test
push
add
add
incl
adc
push
add
movsl
push
insb
clc
mov
rorl
call
test
pop
push
adc
jg
aam
lods
mov
lock
or
fsubs
divb
fwait
inc
adc
andl
add
jo
div
testb
daa
jecxz
adc
flds
test
cmc
fsubs
vmaxps
add
adcl
jmp
movsl
and
xchg
mov
cmpsl
sub
jecxz
add
mov
or
sarb
sub
adc
pop
loopne
mov
mov
arpl
outsl
xchg
mov
lret
push
ss
out
add
hlt
test
mov
sbb
in
stos
test
loopne
es
loope
insb
mov
dec
mov
pop
mov
mov
bound
lods
mov
fsubrl
sub
cs
imul
sub
ja
pop
les
leave
and
mov
out
xor
push
add
mov
insl
shrl
xor
add
dec
mov
pop
je
test
fildll
adc
fs
scas
mov
in
pushl
inc
or
loopne
mov
flds
mov
icebp
ret
cwtl
mov
pop
inc
bound
icebp
lcall
lods
rorb
and
push
inc
leave
dec
mov
mov
xor
inc
push
add
mov
adc
loope
stos
sti
dec
and
rclb
loope
mov
add
cmp
fsubrs
jge
andb
cli
adc
cmp
std
lds
pusha
in
test
jo
adc
cmp
test
sbb
jl
jb
fstpt
xor
add
add
mov
in
add
and
ss
decl
or
add
mov
loope
jg
jg
std
add
xchg
adc
jge
pop
xor
subb
jecxz
bound
je
and
inc
movsl
xlat
mov
call
add
jmp
push
cld
loope
orb
daa
lock
nop
popa
xchg
pop
mov
leave
clc
add
outsb
cmp
sbb
lcall
sbb
mov
nop
imul
inc
push
sarl
inc
push
jnp
push
mov
mov
dec
fcmovnbe
or
nop
and
add
lcall
sbb
push
mov
push
shl
pushl
or
popf
jno
mov
jo
xchg
dec
cmp
mov
aam
jo
adc
add
inc
push
in
xor
stc
adc
jg
insl
std
and
stc
mov
add
or
inc
inc
jo
mov
sub
mov
lock
sub
fists
rolb
js
lock
add
or
or
or
fadds
pop
hlt
mov
mov
loope
aaa
rcrb
sbb
jae
pop
xchg
iret
dec
jo
push
or
ljmp
inc
mov
or
add
adc
fldl
sub
rdtsc
adc
cltd
add
enter
clc
mov
jle
add
sbb
xchg
inc
xor
push
imul
add
pusha
pop
and
loopne
andl
adc
mov
jne
cld
mov
insb
std
inc
cli
sbb
fldenv
sarl
sbb
xchg
pusha
shl
lods
ret
xor
jle
loopne
loope
mov
scas
jo
in
add
dec
push
nop
sub
or
popf
add
ret
add
push
pop
or
clc
testb
sbb
cli
and
mov
rclb
cmpl
sbb
aad
xorb
inc
fldenv
push
fcomip
mov
std
push
add
add
and
lock
filds
cwtl
and
xor
pop
add
dec
icebp
test
mov
lds
or
scas
adc
sbb
push
jle
and
inc
hlt
add
mov
sar
aad
nop
and
bound
adc
lods
push
or
add
xor
mov
add
testb
pop
sub
or
loope
std
inc
pop
cmp
xor
rcrl
fnstenv
cmpsb
and
popa
pop
inc
cmpsb
push
hlt
cmp
or
mov
out
sarb
cmpsb
test
hlt
lods
adc
dec
shll
loopne
adcb
add
add
pop
or
out
add
bound
sbb
popa
loopne
and
and
testb
adc
test
push
sbb
mov
pushf
lds
jmp
in
jo
movsl
or
sub
mov
loope
hlt
sbb
nop
sbb
shlb
lock
pusha
test
sbbl
cmc
pop
cwtl
jl
dec
mov
jo
ss
push
pop
or
loopne
add
pop
ret
push
dec
jle
stos
xchg
and
cs
imul
sti
add
ljmp
shl
mov
std
cmpsb
mov
push
out
rclb
inc
push
cli
rclb
push
push
outsb
jo
push
jle
push
and
test
inc
and
adc
test
xchg
xchg
mov
push
and
mov
add
into
aad
shll
mov
rorb
cmp
jno
gs
mov
je
aaa
or
add
add
int3
sub
in
rorl
sbb
add
fsubl
stc
rcll
movzbl
add
cmp
imul
lea
jbe
add
jb
pop
xchg
aaa
adc
mov
mov
pop
neg
xlat
push
lcall
mov
fadd
es
adc
jge
push
movsb
fisubrl
fidivs
outsl
inc
mov
add
cmpsl
push
std
xor
pop
inc
cld
addl
in
mov
cmpsb
pusha
push
cmpsb
dec
test
jmp
push
jecxz
or
test
xorb
rorb
add
fisubl
or
mov
or
or
test
inc
lea
outsb
cwtl
and
or
mov
fs
adc
adc
mov
add
aaa
sbb
into
xchg
es
pop
mov
pop
push
ljmp
xchg
outsb
es
add
imul
jmp
add
out
fadds
lcall
cmp
add
in
or
data16
cs
lds
andb
lock
inc
outsl
xor
inc
push
xchg
push
pop
sbb
jmp
test
jl
pop
cld
dec
pusha
and
aam
inc
aas
fiadds
and
mov
pop
jecxz
pop
sarb
aaa
add
jbe
mov
cld
fcmovnu
fwait
or
rclb
add
fdivrs
ljmp
pop
fsubs
pop
fchs
push
incl
jecxz
ljmp
pop
xchg
adcl
push
idiv
xchg
push
daa
loope
mov
sub
add
hlt
jge
inc
dec
out
sahf
jg
pop
pop
add
add
and
add
mov
loop
push
add
inc
add
add
cli
sbb
enter
mov
mov
lds
pusha
sar
sahf
fs
push
mov
frstpm(287
das
fcompp
test
cmc
in
adc
or
jle
repnz
call
pusha
sub
push
cwtl
mov
stos
adc
scas
add
test
xor
jg
sub
add
xor
add
andb
sub
pop
pop
sbb
bound
ret
outsb
rolb
or
adc
push
cmpsl
sub
mov
call
clc
test
add
leave
push
xor
imul
lods
inc
mov
mov
cmpsl
adcb
jg
jbe
inc
popf
sahf
pop
out
loopne
rolb
dec
call
jbe
and
add
aas
xor
les
sub
mov
and
cmc
outsb
add
test
test
rcr
fists
mov
loopne
repnz
lret
inc
es
mov
mov
and
or
jg
js
test
jl
cmpsb
mov
loop
add
and
fnstsw
pop
in
xchg
imulb
adc
jae
jle
nop
es
adc
xchg
aam
sarb
sub
cmpsl
int3
cmp
orl
jle
mov
xchg
pusha
inc
lahf
in
xor
push
insl
xchg
cmc
filds
adc
add
cmp
shll
cli
in
aaa
push
push
in
sub
sub
push
mov
out
mov
insb
dec
mov
jmp
pop
in
mov
flds
add
add
mov
or
mov
push
rclb
inc
or
add
fldenv
and
add
pop
inc
mov
imulb
inc
inc
dec
cld
and
lods
shl
cmpsb
pop
add
popf
sub
dec
mulb
mov
insl
lret
sbbb
in
mov
mov
stos
std
lds
addr16
insb
mov
and
mov
test
es
in
sub
adc
adc
pop
sub
es
add
add
clc
sti
mov
push
jecxz
add
adc
add
addb
es
xchg
sbb
in
scas
jp
add
les
sub
dec
push
scas
pop
es
jne
pushf
in
cwtl
addl
scas
cmc
add
nop
es
push
push
test
adc
jb
lcall
add
mov
adc
inc
scas
arpl
mov
cmp
adc
call
inc
add
rep
mulb
es
mov
mov
rclb
mov
fisubs
scas
fsubs
cld
add
outsl
popf
rclb
insb
movsb
insl
popf
scas
imul
lods
popf
and
or
mov
adcl
and
mov
push
cmp
lods
aaa
std
fists
fldenv
test
ret
fdivrl
negb
aam
es
jl
xchg
xlat
mov
mov
fldenv
addb
inc
or
les
stos
add
out
add
pusha
mov
push
xchg
inc
xchg
mov
inc
cmpsl
inc
and
pop
addl
mov
inc
mov
add
mov
rol
in
andb
stos
scas
outsb
jle
das
pop
pusha
push
les
sub
mov
and
inc
inc
data16
or
sub
fcmovu
inc
dec
loope
sub
je
ret
jg
in
jbe
ret
fstpt
ret
mov
out
cs
mov
sbb
add
and
push
add
decl
adcb
mov
xor
or
mov
mov
sub
and
loop
pop
repnz
flds
xchg
call
inc
adc
add
cmp
sub
inc
xor
and
inc
call
cwtl
and
fldenv
inc
or
inc
cltd
bound
jae
leave
or
std
pop
test
ret
std
mov
loopne
popf
mov
pusha
jg
hlt
pop
test
and
imul
push
add
lret
ret
add
jb
rolb
in
adc
cmp
arpl
xor
push
xor
or
enter
add
add
add
push
adcl
adc
xchg
and
adc
xchg
fwait
xlat
shll
xchg
adc
mov
add
inc
dec
call
jno
sub
xchg
xchg
mov
lcall
sbb
push
inc
pusha
or
aam
outsl
adc
pop
add
test
pop
call
es
inc
add
loopne
mov
repz
pop
adc
add
add
sbb
push
cli
ja
xor
xorb
xchg
das
js
stos
adc
popf
fadds
lods
mov
shrb
enter
jecxz
or
adc
rol
fnstenv
or
ljmp
enter
shlb
push
lret
lock
push
mov
push
repnz
test
push
jb
pop
xor
cwtl
dec
add
pusha
icebp
mov
pusha
popa
adc
push
arpl
mov
sub
cmp
sti
test
lods
lock
xor
jb
mov
pushf
push
or
xor
xchg
das
rol
jp
mov
cmc
adc
add
add
add
adc
loope
jo
push
dec
jnp
setns
adc
fadds
aam
pop
add
call
mov
lock
cli
adc
add
shrb
dec
fcmovnb
nop
fs
pusha
add
je
aaa
sbb
push
xchg
test
filds
adc
and
cs
lds
in
and
sarb
mov
lds
sarb
jo
sub
jbe
cmpl
fcom
sti
push
test
sub
scas
call
inc
nop
enter
pop
mov
and
dec
inc
call
adc
mov
push
fisubl
add
jmp
clc
xchg
and
and
mov
cmp
xchg
test
ja
mov
fiaddl
xchg
mov
or
inc
or
push
adc
add
lcall
and
movsb
orl
or
nop
lcall
fs
push
mov
call
push
lds
popa
dec
call
add
push
jno
push
icebp
xchg
mov
orl
enter
inc
push
cwtl
ret
adc
jo
stos
adc
orb
lcall
mov
cmp
sbb
mov
xchg
add
inc
movsl
add
lods
add
push
xor
push
xchg
stos
add
jne
xchg
inc
mov
add
lock
mov
mov
mov
cmpsb
imul
rolb
lods
xor
mov
mov
add
jo
adc
incb
rcr
repnz
inc
filds
shrb
mov
sahf
fdivrs
std
nop
sub
inc
dec
inc
cld
or
xchg
rcrl
jno
pusha
sbb
mov
xor
cmp
rolb
fimull
add
push
adc
dec
insb
sub
sbb
and
jns
roll
add
cs
shlb
add
adc
out
adc
and
sbb
test
fs
xor
jne
pop
sti
jne
add
lds
cmp
inc
icebp
scas
gs
add
push
hlt
incl
mov
jp
inc
dec
mov
mov
and
adc
fisubrl
je
mov
push
cmpsl
mov
mov
adc
push
adc
xor
adc
xchg
add
dec
aaa
adc
xchg
push
add
dec
cmp
cmpsl
addb
cmpb
scas
add
mov
incl
loopne
les
movsb
cltd
add
sbb
and
and
call
lahf
xor
sub
scas
scas
test
imul
push
fsubs
xchg
rolb
sahf
es
xor
incl
lods
sub
or
pop
out
adc
ja
sub
leave
inc
pop
push
nop
pop
inc
cwtl
adc
mov
jle
pusha
hlt
outsb
je
rolb
lods
out
inc
das
nop
mov
andb
mov
test
sbb
mov
cld
es
mov
xor
mov
add
add
movl
gs
adc
mov
mov
sbb
fdivl
mov
adc
adc
pop
sbbb
add
mov
mov
clc
xchg
add
fsubs
dec
call
lods
inc
mov
sbb
push
sbb
xor
scas
mov
sub
and
test
pushw
push
std
clts
test
xor
push
cld
mov
fimuls
mov
push
and
add
gs
mov
out
test
xchg
add
into
add
decb
pop
orb
jno
fisttpl
shlb
push
andl
lock
repz
mov
inc
push
cltd
and
jg
aaa
lods
and
in
mov
inc
cmp
sbbb
push
xor
test
outsb
sti
les
pop
mov
push
outsb
mov
inc
or
cli
loope
loop
pop
sub
mov
adcb
in
ffree
push
add
cmpsl
popa
xor
dec
cld
call
mov
dec
repnz
push
xchg
movsl
call
add
add
in
jb
add
lahf
nop
or
push
jl
jbe
scas
mov
xchg
test
add
push
push
adc
rcll
scas
lcall
xchg
lods
leave
ret
push
mov
jo
jno
inc
cmp
mov
mov
xchg
cmp
sub
mov
enter
adcb
mov
adc
jp
jo
xor
in
adc
push
imul
or
mov
mov
out
push
hlt
sub
subb
mov
lods
inc
and
inc
insl
xchg
adc
add
es
mov
scas
push
repnz
lcall
repz
repnz
pop
or
adc
push
and
add
hlt
int
outsb
jl
xchg
or
mov
cli
insl
inc
push
add
add
insb
inc
pop
jp
rcrb
add
or
add
pop
popa
stos
popa
in
xchg
push
and
sbb
pop
es
mov
in
cli
cld
add
pop
inc
outsl
pop
lods
ds
push
loopne
pop
aad
fldenv
sub
xchg
push
shll
mov
popf
inc
and
gs
mov
gs
mov
rclb
mov
inc
movl
or
add
push
je
mov
shrb
call
movsb
in
inc
outsb
inc
aas
cmp
adc
push
jmp
test
ficomps
push
dec
lods
mov
adc
mov
mov
or
add
dec
push
add
incl
inc
and
mov
push
sahf
add
imul
add
xchg
popa
outsl
and
test
sbbb
mov
dec
stos
adcb
xor
mov
mov
hlt
cld
lods
add
and
jb
orb
jl
xchg
mov
es
sub
stos
cmp
push
mov
pusha
pop
js
inc
lahf
mov
adc
aas
push
xchg
pushf
cltd
mov
push
pop
clc
add
js
add
add
test
add
std
inc
xor
gs
scas
hlt
fldcw
jmp
lcall
cmpb
or
mov
out
cltd
incb
adcl
add
movl
mov
jnp
lods
dec
sbb
cmp
add
adc
cld
cmpsb
ljmp
dec
mov
inc
add
adc
jb
scas
inc
pop
out
xor
and
rcrl
and
sub
xor
ret
mov
hlt
mov
xorl
add
xchg
rolb
fiaddl
stos
add
cmp
test
test
ljmp
mov
pop
rol
sbb
clc
ljmp
add
leave
xorl
sub
push
in
pop
subb
fistpl
jp
mov
test
adcb
sarb
cld
inc
aas
add
push
mov
inc
gs
adc
cmp
inc
sar
add
clc
das
outsb
shrb
add
pop
sarb
fisubrs
mov
push
push
imul
jle
jns
adc
int
pop
es
outsl
mov
cld
or
sub
add
and
adcb
mov
in
inc
or
adc
xchg
xor
sbb
dec
test
aaa
mov
decb
adc
adc
ds
dec
cld
or
and
insb
fcoml
jb
cmpsb
ljmp
dec
mov
test
retw
add
mov
xchg
loopne
and
mov
or
sahf
fs
lock
loopne
es
adc
mov
sbb
mov
sub
test
in
mov
fnsave
cld
lds
out
nop
stos
std
rolb
lds
dec
and
sub
or
sub
std
inc
lds
and
loop
mov
pop
and
inc
negb
or
pop
rclb
push
in
test
pop
call
jle
push
repnz
jle
mov
jg
ret
loopnew
lret
push
stos
cmpsl
push
pop
dec
andb
push
add
insl
subb
lods
call
jl
and
cmpsl
and
imulb
jl
add
ffree
sbb
pop
sti
in
sbb
sarl
mov
xchg
adc
inc
add
add
imul
lock
xorb
dec
aam
cmp
xor
xor
inc
sub
cs
sti
inc
std
test
xor
insb
ljmp
icebp
lcall
jne
mov
inc
mov
imul
ljmp
cs
add
xchg
hlt
and
pusha
adc
sbb
cld
inc
pop
add
fwait
add
jbe
adc
adc
adc
sub
movsl
int3
mov
mov
and
inc
ljmp
push
add
fdivl
fbld
xchg
sub
or
mov
and
add
and
dec
adc
mov
push
repnz
test
adc
cmc
pop
lea
pusha
out
clc
les
pop
mov
outsb
sarb
testb
mov
hlt
scas
push
test
lea
mov
mov
add
and
lds
mov
mov
and
rolb
sti
adc
inc
lret
xchg
add
fisubrs
inc
leave
fidivs
test
mov
aam
movsl
xor
mov
or
push
pop
das
scas
rorb
inc
mov
add
rorb
mov
dec
inc
add
orl
mov
int3
push
cmpl
loop
xchg
incl
insl
and
jge
inc
int
flds
movsb
mov
movsb
add
dec
inc
outsb
inc
mov
or
lahf
and
inc
inc
add
loope
pop
outsb
test
xchg
mov
inc
and
ja
jle
and
sub
pusha
jno
mov
inc
cld
scas
push
ret
clts
scas
loopne
inc
inc
push
bound
cs
hlt
xchg
lock
cli
dec
or
sbb
push
inc
mov
sbbl
add
fldt
bound
adc
adc
add
or
jmp
arpl
mov
pop
jae
addl
fstps
inc
icebp
test
and
dec
sbb
imul
add
dec
in
inc
and
lcall
pop
movsl
sbb
and
sub
mov
pop
cwtl
and
hlt
das
inc
mov
and
arpl
inc
es
pusha
sbb
je
add
push
fwait
or
cli
cmp
and
xchg
inc
inc
pop
push
or
das
adc
add
push
inc
lock
push
add
pop
fcmovnu
inc
or
cmp
inc
imul
xchg
jb
jo
mov
jg
lock
fdecstp
or
repnz
pop
ret
adc
add
xor
mov
mov
clc
mov
adc
inc
scas
add
cld
sub
add
jo
adcw
add
roll
add
sti
mov
or
add
out
ljmp
mov
hlt
idiv
in
sub
or
adc
sub
or
push
rcll
jl
xchg
pop
push
test
and
es
in
xorl
jo
or
imul
mov
xchg
in
shlb
add
clc
mov
pusha
push
into
mov
cs
ret
jg
lods
push
or
fstl
add
enter
js
jo
inc
jbe
pop
push
sub
adc
sub
and
add
lcall
lds
inc
sarb
mov
dec
adc
jecxz
add
xchg
aad
sbb
cli
rorb
scas
or
push
call
sbb
inc
shl
or
add
xchg
popa
call
je
mov
push
mov
pushf
and
jmp
and
cmc
mov
mov
push
xor
cli
add
dec
jp
or
idiv
test
fwait
inc
sbbb
cmpsb
jne
inc
cmovbe
pop
fdivrs
mov
leave
and
push
adc
jmp
lods
cmc
int
in
leave
sahf
jbe
xor
inc
jmp
rorl
pop
pop
sub
loope
loope
stos
xchg
mov
stos
xchg
enter
dec
mov
mulb
mov
cmp
inc
pop
stos
sti
add
lock
dec
fildl
or
sbb
stc
or
adc
lahf
and
and
lcall
mov
je
mov
add
xchg
sarb
or
push
adc
add
rcrl
les
add
dec
inc
mov
add
push
pop
sarb
mov
inc
dec
xchg
repz
sub
mov
add
js
loopne
jmp
aaa
imul
inc
insl
cmp
push
cli
push
shll
in
inc
add
push
jmp
mov
fs
xchg
mov
sbb
and
scas
inc
fiadds
addb
jmp
jmp
icebp
pusha
mov
nop
fwait
xchg
push
cltd
call
and
sbb
lock
sarb
add
mov
and
xor
inc
mov
push
jae
and
and
scas
flds
lock
cmp
mov
cs
xor
icebp
add
push
test
ja
xor
frstor
push
or
inc
inc
inc
mov
xchg
inc
pop
add
mov
mov
or
add
push
pusha
push
out
ret
shlb
add
std
mov
sbb
add
scas
push
or
pop
popf
cli
mov
inc
adc
xor
adc
adc
add
pop
movsl
imul
adc
in
shrl
adc
jo
mov
pusha
jo
mov
push
fdivr
ret
rolb
inc
xor
nop
or
add
add
add
push
rcrb
inc
and
jge
pop
gs
fld
xorb
sbb
adc
mov
shlb
or
pushf
sub
mov
adc
or
movsb
and
into
jmp
out
jne
add
add
int
sbb
pop
in
mov
add
cld
pop
loop,pn
rolb
dec
sarb
push
mov
incl
out
sbb
add
jmp
test
mov
rorl
mov
adc
leave
rolb
sub
pop
adc
jge
or
icebp
loopne
mov
mov
inc
mov
cmpsl
mov
push
adc
andb
dec
sbb
addr16
pusha
jno
and
js
or
and
inc
add
inc
lahf
je
cmc
je
and
ror
inc
out
dec
xor
xchg
xchg
add
add
dec
int3
cmp
cli
mov
or
dec
mov
rclb
dec
add
imul
mov
ret
ss
or
lcall
jmp
hlt
sbbb
dec
inc
ds
test
cmp
loop
fwait
mov
gs
and
test
ds
xchg
jp
mov
rcll
outsl
adc
insb
xchg
push
pusha
push
add
xchg
or
push
outsb
clc
shlb
orb
inc
dec
sbb
dec
push
call
mov
mov
mov
js
adc
inc
adc
scas
ljmpw
cli
scas
pop
jae
lcall
std
add
outsb
loopne
dec
ljmp
push
adc
fs
push
mov
cltd
sarl
stos
cli
cmp
add
lcall
mov
jno
mov
cld
cltd
in
aaa
sub
loopne
adc
stos
inc
popa
add
cmpsl
cmp
pop
and
and
stos
lods
jo
mov
mov
and
jb
and
adc
push
push
data16
popa
jg
cmpsb
movsb
inc
sbb
add
inc
cmpsl
inc
test
aaa
mov
rclb
sub
dec
jmp
jle
sarb
in
push
js
adc
push
add
rcl
rcll
repnz
cmc
pop
xor
push
rcl
adc
sub
mov
add
push
in
addl
aam
jg
adc
lret
add
adc
sub
test
cmp
mov
xor
lods
inc
push
pop
push
cmc
dec
loopne
int3
sub
add
pop
jg
shl
sti
add
mov
int
xor
test
neg
or
pop
xor
into
xor
mov
inc
icebp
mulb
orb
inc
pop
add
cmpsb
add
add
stos
addl
incb
lds
call
mov
and
push
mov
dec
pusha
movsl
pusha
or
or
jmp
scas
add
sub
mov
orb
lea
xchg
adcl
pop
mov
insb
xor
sbb
in
out
std
ficompl
cs
pop
cs
fildl
lods
ds
scas
cmp
int3
adc
add
and
roll
cmp
inc
incb
or
in
cmpsb
mov
orl
dec
dec
or
popa
mov
mov
in
dec
push
addl
push
sbb
cmp
mov
push
test
in
ja
fwait
and
inc
insl
inc
cmp
pushf
and
adc
test
mov
inc
and
inc
or
or
stos
add
cmp
and
rcr
inc
or
adc
and
add
add
cmpb
sub
hlt
es
int3
push
mov
or
in
sub
addb
incb
pop
in
push
sub
inc
rolb
lea
outsb
imul
ss
jne
jl
add
sbb
sbbb
mov
pusha
or
movsl
inc
push
push
inc
xchg
and
add
pop
sub
les
test
adc
mov
inc
or
add
push
push
mov
push
inc
push
and
popf
add
push
gs
sub
mov
and
lock
movsb
imul
test
test
jg
gs
mov
es
adc
mov
in
sbb
incl
push
outsl
sub
rorl
orb
sbb
sar
mov
push
fldl
mov
mov
cwtl
xorl
outsl
pushl
cs
inc
mov
test
inc
pop
add
or
inc
aam
sbbl
lock
mov
inc
scas
inc
mov
sbb
pushf
cld
sarb
cmpsb
xchg
adc
adc
mov
inc
in
sar
addb
lock
shl
loopne
insb
mov
mov
mov
in
sub
push
add
xor
call
inc
or
add
mov
push
int3
sbb
xor
dec
sub
rorb
mov
cmp
add
jp
push
adc
clc
loop
outsl
or
addb
jmp
pushf
or
cmc
mov
xlat
pusha
gs
cs
mov
push
lds
fsubl
inc
es
adcl
sbb
xchg
sbb
and
inc
jl,pn
ljmp
push
mov
es
loopne
push
and
lock
std
ljmp
dec
push
mov
and
and
fadds
pop
fdivs
mov
jne
ds
je
adc
das
mov
fists
lds
data16
stos
add
inc
mov
add
ss
and
push
jle
or
xchg
and
pop
inc
dec
jno
pop
xchg
icebp
push
pop
push
in
jns
add
and
je
inc
adcl
sbbl
shlb
shll
icebp
sahf
cmp
mov
sub
lock
inc
mov
test
fdivs
and
jbe
cwtl
out
push
popa
das
mov
clc
data16
pop
and
mov
orb
fadds
adc
adc
push
loope
fldt
or
add
add
push
loope
cmpsb
xor
add
pop
mov
cli
sbb
arpl
incb
ljmp
lods
loopne
pop
sarb
add
inc
imul
mov
mov
jecxz
pop
cmc
sbb
ljmp
fdivl
adc
mov
pusha
push
test
xor
aaa
and
popa
mov
xor
xchg
pop
jb
in
clc
loop
andl
dec
add
add
and
test
cld
std
std
es
imul
scas
pop
adc
jb
test
pusha
pop
hlt
sahf
pop
popf
cli
pushl
xchg
xchg
imul
popa
jb
fsubs
add
je
ljmp
int3
loopne
mov
inc
push
sbb
push
sbb
out
push
rol
call
andb
ret
jmp
adc
pop
scas
push
sbb
and
add
or
mov
out
mov
inc
outsb
scas
rolb
pop
clc
gs
jb
icebp
clc
mov
push
lds
and
adc
xorb
pop
cld
adc
jno
lds
movsb
add
sbb
movsl
or
fs
mov
pop
loopne
insl
insl
cmpsl
xor
in
jns
xchg
cmp
stos
cmc
or
call
out
jo
movl
inc
aam
xor
mov
mov
sub
inc
bound
pop
inc
dec
adc
pop
and
fwait
data16
push
push
xor
add
xor
ficomps
and
push
xchg
loopne
fnstcw
mov
adc
insb
push
fs
jg
scas
push
insb
add
and
fmuls
pusha
and
and
mov
shrb
and
test
inc
bound
jl
roll
loope
push
bound
sahf
inc
xor
orl
sbb
std
mov
mov
push
or
scas
lock
and
adc
mov
insb
scas
add
dec
sti
xchg
pop
ds
inc
icebp
cmp
imul
pop
sarb
ljmp
push
xor
movsb
and
inc
es
lock
push
push
movsb
push
scas
and
mov
pusha
pop
cs
inc
pusha
push
inc
incl
adc
je
mov
mov
jmp
fdivr
or
pop
push
inc
scas
and
test
movsb
dec
call
popa
jge,pt
sbb
dec
sub
rcr
or
pop
mov
push
dec
and
out
ja
pop
mov
or
call
xor
pop
mov
or
rolb
testb
nop
fwait
inc
add
cs
jg
and
shld
push
movb
fdivrs
lock
scas
push
push
adc
mov
add
negb
rolb
popf
rorb
mov
push
push
xchg
inc
or
inc
dec
cwtl
lods
pusha
dec
jmp
xor
and
repz
add
lock
out
add
add
icebp
add
cmpsl
sbb
daa
call
sbb
mov
adc
push
xor
ret
push
pusha
pop
push
icebp
add
mov
xchg
push
inc
cmp
cs
lea
lahf
cmpsl
adc
adc
stos
fldenv
lahf
mov
inc
mov
js
push
jo
dec
inc
stos
andb
ret
mov
push
pop
xor
push
sub
ret
lea
adc
adc
xor
cmpsl
decb
cld
inc
or
faddl
mov
pop
sti
stos
pop
data16
sub
es
and
push
fsubs
ljmp
inc
push
sti
repz
inc
push
sbb
add
jb
dec
es
mov
lock
mov
jl
inc
mov
lret
mov
and
movsl
insb
and
cmpsb
outsl
in
and
nop
xchg
push
add
mov
hlt
int
mov
sbb
adc
fisttps
or
cwtl
popa
xor
fisubs
rorl
inc
xlat
add
mov
push
arpl
icebp
lock
lods
pop
dec
pop
inc
xchg
mul
push
adc
das
adc
cs
test
add
sbb
or
dec
push
or
pop
dec
mov
dec
adc
mov
sbb
and
cmp
sub
inc
push
push
push
sub
lcall
pop
mov
testb
and
add
shrl
push
and
dec
je
idiv
aam
clc
fisttps
mov
xlat
shl
sub
xor
popa
fcmovnu
or
sub
mov
jbe
add
pop
lret
sahf
popa
sub
sub
cmpb
fwait
arpl
bound
add
decl
adc
pusha
or
lock
add
mov
xor
inc
test
push
ret
add
ljmp
sub
cld
adc
push
push
xchg
cs
cltd
adc
inc
loope
cld
jmp
testb
mov
jo
mov
adc
nop
push
bound
inc
sub
popf
pop
subb
and
in
nop
adc
cli
xor
add
icebp
in
mov
push
daa
fs
and
call
fbld
sahf
inc
insl
inc
loop
sbb
outsb
dec
and
and
mov
loopne
lahf
jbe
sub
pop
mov
orl
test
add
insb
int3
fsubs
mov
mov
pop
decb
ret
repnz
push
and
popf
int3
jle
outsb
and
movsb
push
in
and
push
xor
mov
mov
pushf
xor
add
xchg
mov
xor
outsb
call
inc
imul
stos
sahf
jg
pop
push
add
scas
arpl
mov
lods
fildll
outsb
push
fdivl
pop
jbe
iret
xlat
sar
ja
or
push
add
ret
lret
ret
test
cmp
scas
dec
add
movsb
mov
and
fwait
dec
and
adc
fs
ret
add
add
jmp
adc
sti
add
cmpsb
inc
sub
data16
dec
mov
adc
and
cmpsl
jno
ja
mov
rolb
xchg
ds
mov
adc
xor
xchg
rolb
inc
mov
loope
inc
inc
and
and
push
ret
and
xchg
pop
pop
adcl
test
sub
adc
add
dec
incb
or
mov
mov
adc
fisttps
popa
adc
push
loop
outsl
fs
jmp
popa
out
cli
movsl
cli
xor
les
pusha
es
pop
sbb
xchg
fcmove
xchg
push
jle
pop
sub
fstps
es
popf
xchg
and
popf
add
mov
mov
ljmp
scas
fdivs
testb
push
repz
loop
in
jmp
outsl
fsubrs
inc
dec
xor
jo
aam
in
mov
fidivrs
pop
ss
rolb
frstor
orb
lcall
pushl
enter
mov
inc
enter
adc
cwtl
push
pop
cmc
push
adc
push
movsb
lods
test
jg
aaa
test
mov
cmp
test
in
rolb
ljmp
imulb
insb
sub
cli
fbstp
cmp
and
nop
or
sub
add
shrb
pusha
pushf
test
xor
outsl
or
es
xchg
add
scas
or
add
data16
pusha
add
cwtl
and
mov
jb
fisubrl
int
sbb
xor
xchg
push
mov
sbb
ljmp
jg
or
lods
add
ret
xor
dec
and
add
pop
test
push
and
scas
movsb
cmpsl
pop
add
add
mov
in
push
mov
add
leave
fdecstp
push
add
outsl
or
fdivrs
scas
add
push
inc
add
add
test
or
sub
push
push
test
mov
cld
and
out
les
int3
je
loopne
std
in
mov
and
push
dec
lock
mov
call
sahf
add
or
or
scas
loope
lea
mov
cs
mov
mov
xor
sahf
call
aam
pop
icebp
add
mov
lea
jno
outsl
pop
popf
adc
clc
jp
add
lods
andb
pop
dec
and
scas
jecxz
push
mov
es
add
mov
shll
add
add
mov
mov
test
subb
xchg
mov
addb
loopne
add
pop
mov
mov
fadds
dec
lods
roll
in
ficompl
add
cmpb
andb
daa
addb
scas
xchg
sbb
in
pop
insb
test
cmpb
cmpl
xorw
pusha
std
das
clc
sbb
xchg
and
test
scas
shll
rcl
into
outsl
clc
mov
push
clc
inc
pop
ret
shrb
add
js
pop
add
pop
aas
cli
bound
and
cmp
inc
sbb
mov
inc
loop
imul
inc
arpl
mov
inc
xchg
out
jbe
mov
xor
add
negb
cwtl
fnsave
mov
jg
cmp
inc
fs
arpl
arpl
dec
sarb
pop
cmpsb
sub
jmp
loopne
imul
lahf
inc
clts
arpl
add
dec
mov
pop
loope
and
sub
lock
mov
rol
popa
adc
popa
jg
or
xor
add
inc
jl
in
adcb
and
loop,pn
add
xchg
pop
sbb
inc
or
call
adc
mov
rorb
addr16
adc
ds
sti
mov
jmp
add
fildl
add
mov
sbb
inc
sti
mov
mov
movsl
sarb
data16
lds
mov
ds
fldt
mov
sub
shlb
pop
adc
mov
cmp
xchg
push
in
cwtl
std
fistpl
cmp
loop
sub
jae
mov
es
sbb
sub
xchg
mov
pop
es
rolb
test
mov
pusha
jno
ljmp
cli
ljmp
scas
inc
pop
add
inc
xchg
pusha
subb
outsb
push
cmpb
jg
cmp
nop
inc
mov
inc
push
cmp
and
or
sbb
fstps
stos
mov
and
or
pusha
lea
rolb
ljmp
jg
add
push
cs
scas
add
adc
xor
call
jecxz
or
aas
inc
inc
add
mov
add
fucomi
jg
adc
inc
aaa
dec
fwait
add
popa
dec
rclb
push
push
push
and
out
mov
das
cli
xchg
repz
mov
add
aad
add
or
outsl
xor
popa
popa
clc
xor
sub
xlat
and
mov
jo
or
aad
add
movsl
sub
push
sbb
cmpb
data16
push
and
scas
add
sub
mov
pop
mov
and
mov
push
xchg
mov
mov
mov
pop
cmc
inc
test
and
in
mov
mov
test
gs
inc
aas
jmp
loopne
gs
jmp
test
and
sbb
daa
inc
stos
xchg
lock
sbb
inc
and
fmuls
outsb
add
and
pusha
xor
addr16
andb
and
scas
divb
lea
pop
cs
push
inc
fnsave
daa
add
cli
mov
pushl
lea
push
mov
dec
add
mov
pop
cmc
jg
lods
inc
lea
jmp
inc
inc
xchg
inc
cld
fwait
cmpsb
fdivs
pop
and
and
addr16
sbb
pop
std
dec
ljmp
and
scas
inc
lahf
scas
insb
fstpt
inc
fmull
adc
std
scas
int
faddl
push
faddl
outsl
decl
ljmp
rolb
ljmp
rolb
int3
outsb
fildll
loopne
dec
push
je
test
adc
and
enter
gs
adc
push
imul
and
or
mulb
sbb
or
repnz
iret
sub
add
in
sub
push
or
ja
dec
mov
and
test
dec
pop
icebp
xchg
clc
movsb
add
inc
addl
add
fidivs
cmp
outsb
adc
jmp
adc
daa
lock
enter
mov
dec
inc
data16
xchg
xchg
or
idiv
out
fcomps
dec
xchg
dec
test
pop
mov
push
ss
fstl
nop
shlb
sub
ret
pusha
cmp
ljmp
int3
lcall
and
and
icebp
jg
push
mov
sbb
mov
sbb
push
and
decl
xor
mov
add
add
shll
stos
mov
push
cmp
add
scas
fld
push
f2xm1
push
shll
push
call
jbe
lea
mov
or
mov
inc
push
mov
mov
orb
gs
add
push
pop
subl
xchg
sti
sbbl
addb
fldenv
jmp
mov
fildll
xor
addb
inc
and
es
sbb
sti
push
or
or
mov
roll
sub
inc
pop
cmpsl
inc
push
and
xchg
push
sub
rolb
add
daa
cmpsb
xor
jecxz
push
rcrb
push
lods
out
lods
pop
movsl
pop
roll
in
dec
inc
aas
push
mov
nop
decl
add
inc
add
xor
mov
pusha
loop
incb
or
inc
push
mov
push
mov
mov
rorl
add
ds
sub
jbe
or
push
adc
pop
mov
pop
mov
push
mov
and
xchg
mov
xchg
mov
fadds
dec
jmp
xor
inc
and
inc
sbb
or
pop
fmuls
pop
movsl
pusha
aad
call
loopne
fadds
jle
push
xchg
jne
fs
sbb
push
inc
mov
test
xchg
inc
add
push
add
orb
add
int3
or
mov
or
lods
push
or
mov
add
mov
sbb
jp
icebp
xchg
outsl
mov
xchg
and
add
mov
cs
scas
es
and
test
lods
daa
mov
mov
fsubs
inc
stos
adc
mov
outsl
outsl
add
dec
pop
jo
inc
call
jo
mov
nop
or
test
or
sub
adc
mov
or
mov
or
stos
mov
push
orb
das
inc
ret
out
xchg
sbb
and
icebp
or
add
out
test
in
and
icebp
js
pusha
xor
es
pop
cmc
inc
mov
mov
jecxz
out
push
sbb
lcall
movsl
call
add
dec
add
cmp
sub
mov
icebp
add
add
and
arpl
mov
or
mov
jmp
mov
lock
jae
add
inc
out
cs
imul
and
dec
sub
add
flds
push
fnstcw
push
sub
lock
sbb
push
mov
popf
pop
icebp
out
int
pop
or
jno
aas
je
jns
jl
testb
xchg
mov
data16
out
cmp
push
xor
mov
pushf
aaa
mov
fiaddl
into
sbb
push
movsb
xchg
add
or
lock
sub
pop
add
sti
dec
mov
into
cmpsl
sub
icebp
add
repnz
mov
popf
shrb
add
das
mov
fildl
iret
je
pop
popf
pusha
add
mov
test
in
outsl
push
mov
data16
add
add
pop
pop
mov
cwtl
nop
or
pushl
mov
in
addb
mov
mov
mov
adc
cld
xchg
outsl
loope
outsl
inc
adc
adc
adcb
add
mov
or
mov
dec
adc
loope
inc
add
sub
or
loopne
aam
icebp
repnz
xor
insl
repnz
pop
xchg
jo
mov
add
scas
mov
add
stos
es
dec
shll
test
mov
fsubrs
loop
ljmp
jmp
ja
adc
mov
fucomi
xchg
loopne
sub
sbb
mov
inc
rclb
pusha
faddl
jo
imul
nop
outsl
dec
sbb
cmp
push
fsubs
hlt
icebp
jg
mov
add
and
pop
lock
and
xchg
mov
ljmp
nop
fldl
jno
adc
xchg
or
mov
xchg
in
addl
mov
add
inc
mov
popa
scas
lock
les
shll
into
xor
add
call
rolb
lahf
adc
or
leave
mov
inc
sub
add
add
mov
xlat
and
ljmp
xchg
add
ja
jmp
ffreep
mov
enter
adc
nop
sbb
mov
pushf
push
pusha
adc
lcall
movsl
mov
enter
mov
pop
pusha
shlb
enter
mov
add
hlt
stos
lea
mov
xor
in
add
mov
add
mov
add
push
enter
lods
push
gs
stos
out
jle
push
inc
mov
scas
daa
inc
out
inc
sub
andl
call
loopne
rcrl
adc
sub
jbe
jl
shlb
adc
imul
dec
mov
ljmp
lock
push
in
fsubs
xchg
add
cs
xchg
ljmp
cmp
in
sub
or
sub
shr
push
popfw
add
daa
mov
lods
inc
adc
fisttps
add
scas
add
push
add
inc
filds
mov
movb
add
add
fs
xchg
movsb
inc
inc
jnp
orl
add
ljmp
lods
inc
pop
sti
jg
mov
add
and
inc
dec
xchg
mov
pop
jo
ljmp
or
aas
inc
push
mov
dec
clc
decl
scas
cmp
addb
out
andb
jg
mov
mov
js
mov
lcall
ss
out
pop
lock
adc
xchg
xor
rclb
mov
push
lea
jo
xchg
add
or
clc
roll
dec
inc
mov
rcrl
fscale
or
jne
daa
pop
and
pop
cs
and
dec
sub
mov
mov
call
inc
pop
ret
gs
mov
jp
add
xchg
add
fmull
inc
out
sbb
adc
and
call
inc
pushl
loop
rorl
cs
lods
rorl
pusha
jl
sbbb
cmpsb
ret
xor
xlat
and
lods
jge
incl
adcb
test
xor
push
push
adc
mov
decl
xor
xor
rclb
xor
and
movsb
inc
or
movsl
and
pushl
xor
or
inc
or
lcall
jmp
xchg
mov
push
add
push
inc
fcompl
fcoml
incl
cltd
loop
inc
push
adc
ja
cwtl
push
lahf
stc
cmp
cld
in
lds
inc
or
mov
or
insb
mov
push
leave
ret
push
dec
rcr
das
js
filds
and
mov
ret
push
and
rcrl
mov
shll
vpsadbw
sub
mov
cmp
push
fcmovu
inc
loop
sub
add
jp
inc
outsb
xor
mov
push
xchg
mov
loope
int
arpl
rolb
push
jl
mov
loopne
cmp
dec
jg
ja
les
addb
pop
pusha
and
push
pop
sbb
adc
or
sbb
push
fists
adc
imul
add
fistpll
movsl
loopne
popa
popf
add
sbb
shlb
mov
jecxz
push
test
mov
loop
lahf
cli
add
mov
inc
insl
sub
ret
cltd
push
movb
inc
les
inc
sub
pusha
mov
stos
jg
orb
rcrb
sahf
add
es
and
cmpsb
addr16
cmp
jg
xchg
testb
loop
and
or
cli
pop
and
int3
movsl
sbb
inc
shlb
shll
add
and
scas
in
add
push
mov
sub
js
stos
in
ret
lahf
dec
das
shlb
int3
add
mov
ds
push
shl
xchg
nop
ret
push
testb
and
push
dec
ds
mov
sub
adc
cmpsb
xchg
and
fdivrs
add
incl
sub
add
pusha
mov
jae
jb
sub
push
shrl
add
pop
lret
jne
cmp
inc
addr16
add
pusha
fs
enter
xor
stos
out
xchg
cmpsl
adc
mov
or
mov
dec
bound
cld
ror
shrb
insl
inc
fadds
sub
out
ret
incl
adc
or
es
orb
add
mov
jl
or
and
call
test
pop
pusha
inc
lea
jmp
push
adc
xchg
or
jg
fldenv
pusha
pop
loop
rorl
js
rorb
cmp
xchg
add
add
add
sbb
cmp
push
sub
add
inc
sub
cmp
and
adc
das
inc
mov
pusha
adc
jo
arpl
call
fs
xor
mov
inc
test
pop
out
jo
mov
mov
cltd
daa
add
out
sub
pop
andb
mov
add
add
pusha
pop
testb
ss
pushl
sti
and
or
stos
jnp
rolb
dec
cmp
pushl
add
inc
pop
adc
int3
pop
pop
les
jg
aaa
hlt
stos
lea
sahf
inc
add
sub
pop
push
add
mov
ljmp
ret
mov
cmpb
adc
mov
sbb
call
mov
aaa
lcall
aad
mov
xchg
jne
fdivrp
loope,pn
mov
loop
es
movl
pusha
add
outsl
cmp
pop
ret
push
cld
fidivrl
mov
fsts
daa
out
lods
xchg
adc
loopne
adc
loopne
and
inc
test
test
es
jle
addr16
es
iret
xchg
xchg
nop
push
call
inc
push
outsl
dec
les
mov
pop
pop
int3
xchg
shl
jnp
adc
push
incl
sbb
rorl
shlb
daa
fcoms
out
rolb
xor
mov
mov
or
mov
mov
fsubrs
fcomp
cmpsb
xorl
or
push
or
adc
xchg
xor
cs
mov
cmp
mov
add
out
sbb
out
xor
push
out
jo
jge
inc
xchg
decl
add
cmp
mov
sbb
loopne
fildl
adc
cmpsb
inc
inc
pop
mov
push
or
mov
or
xchg
cmp
bound
sbb
lcall
mov
int3
mov
mov
add
mov
std
negb
arpl
add
mov
adc
jno
or
pop
mov
xor
mov
adc
jecxz
adc
mov
cmp
fstps
outsb
xchg
pop
add
mov
mov
ret
xor
and
mov
xor
mov
dec
imul
pop
adc
push
loopne
imul
pop
lods
pop
daa
sub
push
add
cmp
sub
lahf
jmp
dec
sub
test
cld
ljmp
shrl
and
push
sub
inc
ds
loopne
push
sub
scas
mov
xchg
jp
js
scas
fs
and
add
pop
mov
push
int3
adc
movsb
sbb
loop
xchg
cmc
testb
lea
xor
std
je
pop
stos
shr
incl
add
push
jp
mov
mov
mov
dec
std
pushl
mov
adc
stc
xchg
cmpsb
loope
xor
sbb
cmp
add
in
mov
or
rcrb
cli
imul
sub
mov
sbb
dec
scas
rolb
fwait
mov
mov
inc
pop
cmc
and
jb
lea
enter
in
cld
adc
ljmp
shlb
data16
test
decl
push
stos
mov
add
cld
mov
mov
nop
add
adc
mov
loopne
ljmp
jg
pop
push
in
xlat
or
movb
scas
jge
shll
lcall
call
push
sub
mov
push
fdivs
rol
mov
push
ljmp
repz
adc
push
inc
loopne
add
rcrb
pop
dec
faddl
jl
inc
cltd
inc
mov
xchg
mov
adc
mov
enter
lock
inc
adc
inc
andb
movsl
inc
imul
repnz
cmpsb
clc
inc
add
ret
add
push
dec
in
flds
ret
and
or
in
cmp
and
sub
and
xor
incl
cli
and
mov
fnstenv
and
sahf
and
inc
sub
cs
outsb
or
jl
test
push
push
dec
mov
and
std
and
sub
cmpsb
es
scas
push
mov
scas
adc
adc
pop
push
test
rcll
outsb
test
or
jp
mov
sub
pop
add
fdivrp
sub
push
adc
sub
or
inc
pop
add
int
jmp
insb
dec
add
mov
dec
or
push
clc
pop
and
test
andb
or
mov
loopne
cld
xor
fisttps
iret
and
movsl
fcoms
inc
or
add
lock
mov
mov
orb
add
stos
inc
dec
jo
xchg
andl
ret
lcall
loop
xchg
mov
xchg
scas
push
into
addb
scas
xchg
movsb
dec
rcrb
xchg
mov
inc
and
mov
adcl
push
or
daa
add
fnstenv
jb
jnp
icebp
sub
add
push
sub
sub
and
test
add
incb
sbb
loop
lds
jecxz
int3
add
cmc
flds
xchg
mov
rclb
neg
add
addb
add
jmp
add
sbb
cmp
mov
in
clc
test
icebp
mov
jo
stos
and
inc
ss
or
sbbb
adc
xchg
mov
cmp
and
enter
push
pop
dec
loopne
sub
pop
pop
jge
adc
pushf
cli
les
cli
add
scas
inc
scas
and
jne
add
shlb
pop
add
jno
mov
gs
pop
sub
pusha
jno
decb
cmp
push
inc
sub
and
sub
inc
jmp
and
mov
pop
mov
lret
fs
hlt
xchg
int3
mov
push
cs
xor
inc
cmpsb
in
sahf
adc
sbb
cld
jg
lea
cli
shlb
mov
adc
icebp
aas
adc
adc
subl
mov
jg
je
inc
sub
stos
ret
into
jae
cs
fdivs
and
fisttps
orb
test
inc
inc
and
outsb
jmp
pop
mov
jge
jno
ds
jg
cmp
xchg
dec
addb
dec
sarb
in
add
inc
or
push
fldcw
add
loop
test
add
pextrw
or
sysenter
adc
add
cmp
inc
jmp
loope
mov
and
arpl
fwait
nop
or
scas
mov
loopne
mov
lcall
cmpb
sbbb
dec
andb
orb
pop
addb
fstps
inc
loop
imul
jecxz
fs
add
orl
sbb
add
shl
mov
fucomip
aaa
adc
adc
mov
and
frstor
lock
jg
push
int3
das
cltd
rclb
jno
jp
adc
lret
add
outsl
scas
xor
adcb
add
add
fidivrs
push
dec
arpl
and
inc
inc
add
add
stos
mov
jo
movsl
mov
bound
and
sbb
aam
and
popa
push
les
adc
add
orl
cli
call
jg
sub
loopne
cmp
jg
bound
and
shlb
pusha
adc
addb
or
test
add
andl
mov
ret
mov
lods
loopne
mov
adc
and
loopne
out
and
jns
dec
dec
addb
into
jne
loopne
cs
incl
pop
add
add
adc
inc
sbb
inc
je
or
mov
inc
ds
add
cli
popa
decl
mov
bound
fildl
fldt
and
jne
and
push
and
test
push
mov
incl
lea
adc
inc
clc
test
dec
shlb
mov
push
sub
pop
push
push
xchg
jp
push
mov
loop
xor
inc
jb,pn
jo
cmp
inc
jb
inc
paddd
mov
mov
inc
aaa
orb
xchg
movsl
and
inc
add
push
mov
or
int3
cs
or
sbbb
aaa
jmp
fsubr
mulb
inc
add
outsb
aad
rol
lahf
or
std
pop
dec
iret
lret
pop
inc
mov
jmp
add
xor
js
pushw
fisubrl
push
fs
outsb
add
cs
push
out
push
push
jno
mov
add
mov
mov
fimull
adc
jp
xchg
ret
sub
data16
lea
sbb
mov
sub
mov
mov
add
aaa
cs
adc
aaa
push
add
inc
rcll
or
jle
ds
out
dec
xchg
rolb
jbe
mov
or
add
pop
cwtl
dec
mov
leave
lock
push
cld
mov
fcomip
rolb
sub
in
or
mov
cli
dec
pushf
push
fucomi
push
or
push
mov
mov
inc
push
test
data16
lret
push
inc
or
mov
sahf
dec
jo
outsl
dec
xor
push
and
popl
test
xor
mov
repnz
mov
mov
xchg
rolb
lock
cmp
mov
inc
pop
out
scas
add
dec
lcall
es
push
notb
fldl
ss
adc
cmp
inc
in
add
cmp
mov
adc
inc
dec
stc
inc
push
fs
push
or
adc
sub
inc
dec
xor
inc
cmpsl
mov
insl
les
mov
movsb
pushf
out
repz
mov
add
mov
push
pop
cs
add
jbe
ss
insl
arpl
ret
adc
pop
inc
pop
pop
sbbl
pushf
jo
in
sti
inc
xchg
mov
int3
jno
xor
ficoms
add
push
out
push
dec
stos
cs
xor
fcomp
in
fistpl
or
xor
cmc
dec
and
sbb
jbe
jl
aas
movsb
icebp
lock
or
push
cmp
dec
mov
or
pop
jl
mov
or
dec
mov
loope
in
dec
sbb
dec
aas
inc
add
loop
inc
mov
in
mov
adc
dec
mov
adc
push
add
pop
jbe
adc
add
and
mov
and
pushf
add
fwait
cwtl
rorb
cmovns
add
shlb
data16
fildll
add
in
adc
popf
mull
push
or
and
faddl
pop
loop
scas
push
in
or
push
or
push
xor
fincstp
cmpsb
cmp
jo
jo
add
scas
jo
cltd
je
mov
pusha
adc
add
fstpt
int3
push
pushf
lock
mov
xchg
cmpsb
adc
cmp
dec
rcrl
add
jg
inc
adc
xchg
cmpl
in
jno
or
insb
cld
cmc
jg
ret
cli
add
push
nop
jge
fs
outsl
and
call
mov
sub
dec
lcall
pop
outsb
ret
dec
inc
fldcw
adcb
fwait
xchg
sbb
or
push
aam
loop
sti
add
mov
movsb
xchg
and
mov
sbb
add
mov
or
mov
xor
mov
or
in
xchg
add
in
out
jbe
pop
sub
mov
ljmp
lods
adc
push
adc
push
mov
out
std
fsts
and
imul
loopne
lea
xchg
sbb
sub
mov
push
inc
fwait
push
sahf
inc
mov
inc
test
pop
mov
or
mov
add
ljmp
scas
sbb
mov
fbld
loop
xor
scas
bound
add
call
and
cli
mov
inc
call
inc
test
add
sub
push
cmpsb
jno
xor
pop
sti
incl
rcll
lds
xor
cs
scas
or
push
or
inc
fistps
popf
pop
add
movsl
fprem
lock
rclb
push
mov
add
pushf
sub
xchg
add
rcrl
mov
and
adc
flds
insb
mov
fcomps
mov
inc
and
scas
and
in
idiv
and
sub
sub
cmpsl
idivb
inc
mov
and
jg
je
stos
in
outsb
xchg
test
lret
mov
pop
xor
or
popf
add
adc
mov
rolb
xor
add
sub
pop
mov
push
loope
sub
cld
pop
jno
adc
adc
or
andl
movsl
push
xchg
and
add
and
push
and
add
cmpb
push
and
and
add
or
pushl
or
adc
fldenv
lods
add
pop
and
incl
stos
push
sbb
dec
stos
mov
popa
bound
scas
hlt
pop
inc
push
sbbb
xchg
nop
shl
add
mov
loopne
xor
pusha
fcomip
jg
xchg
roll
push
scas
bound
add
mov
mov
call
add
mov
std
pop
hlt
call
test
cs
adc
add
sbb
popf
test
jne
test
mov
call
inc
test
adc
jo
stos
fcomps
cs
outsl
cli
bound
jl
out
xchg
cmp
scas
movsb
fistpl
push
ficomps
mov
adc
scas
aad
add
adc
movsl
nop
and
js
ffree
testb
adc
pop
pushf
fyl2x
mov
mov
or
repz
add
inc
and
pop
or
cmpsb
gs
dec
mov
inc
or
sbb
pop
push
add
inc
or
mov
xor
std
fisubs
xor
xchg
les
out
inc
sub
xchg
loopne
fdivp
add
pushf
js
in
dec
les
in
push
push
sbb
sbb
ret
loopne
xchg
push
adc
dec
sub
inc
xchg
inc
lds
xor
xchg
ljmp
mov
stos
xchg
test
loope
pop
fdivrs
mov
ljmp
fldcw
jbe
add
sbb
mov
sub
inc
loop
out
aaa
add
mov
mov
lods
adc
mov
mov
xchg
adcb
sub
inc
add
xor
dec
mov
cmpsb
push
add
push
pop
mov
adc
shll
jne
cmp
fdivr
sarl
sub
and
aas
add
inc
jecxz
shll
add
xchg
sbbl
dec
mov
loopne
repz
and
push
jo
jle
add
inc
push
add
fstl
add
inc
scas
push
and
lcall
push
mov
sti
push
pusha
dec
pushf
mov
std
or
movsb
add
cld
outsl
mov
aam
mov
pop
xor
add
xchg
sub
inc
movsb
sub
add
adc
call
mov
mov
xchg
clc
xor
mov
shlb
add
add
add
pusha
xor
insb
fsubl
jmp
mov
sbb
dec
lds
andl
flds
inc
mov
or
stos
call
sbb
clc
in
orl
lock
cmp
push
mov
sub
orb
push
test
lods
in
xor
pop
lock
hlt
cmpsl
and
or
pusha
clc
adc
pop
out
add
fldenv
stos
cmp
pusha
jmp
push
push
nop
mov
decl
add
jo
adc
addb
mov
inc
add
std
addb
mov
adc
scas
outsb
lret
lods
inc
lods
sub
mov
sub
pop
outsb
adcl
or
out
or
jg
roll
aam
fwait
subl
cltd
jne
cltd
ret
scas
inc
cltd
add
daa
adcb
lods
iret
popa
push
nop
fdivs
mov
stc
sub
push
xor
xchg
mov
sub
mov
inc
addr16
stos
in
test
enter
sarb
subb
or
cwtl
fimuls
int
mov
loop
dec
push
ljmp
and
sbb
lret
pop
add
test
jmp
and
inc
sbb
pushf
clc
push
inc
stos
dec
lea
sahf
and
push
mov
cli
cmpsl
cmp
incb
test
mov
dec
das
xchg
push
mov
mov
mov
test
mov
sbb
es
sbb
sub
mov
add
shll
push
cmc
push
shlb
cli
mov
test
sbb
jl
mov
cs
scas
rolb
add
mov
cmp
and
insb
test
adc
insb
aam
cmc
or
mov
aaa
mov
and
cmpsb
push
mov
cli
mov
bound
cmpsl
push
or
mov
outsb
sub
adc
push
xchg
inc
xchg
aas
fs
inc
rcrb
mov
add
into
cli
add
faddp
xchg
jno
or
mov
cwtl
movsl
hlt
jnp
mov
cmp
dec
imul
popa
inc
add
add
addl
xchg
and
sub
and
cli
mov
movsl
mov
mov
mov
adc
dec
inc
push
pushf
bound
mov
dec
adc
lock
cmp
pop
arpl
push
adc
fwait
or
adc
jo
inc
jp
dec
jge
sub
sti
dec
rorl
loopne
shlb
scas
nop
mov
mov
cmp
xchg
xchg
shlb
loopne
and
test
mov
add
std
bound
sbb
or
enter
out
add
or
enter
cmp
cmp
add
cli
std
outsl
push
shlb
adc
adcb
xor
loopne
sbb
aad
lock
add
pusha
sub
popf
shl
or
hlt
sahf
xchg
outsl
clc
or
repnz
fs
mov
popa
sub
cmp
fiadds
and
lock
mov
sbb
sub
sbb
clc
fdivrl
sub
and
rcll
xor
sbb
out
fisttps
shll
cmpsb
aad
loopne
subb
pushl
and
adc
push
test
sbbl
movsl
out
xchg
lock
shll
bound
fdivrs
xchg
ljmp
fnop
or
push
adc
and
shlb
movsb
inc
test
xor
outsl
inc
stc
push
lock
dec
inc
insl
sti
std
adc
cli
adc
push
push
popa
and
sti
bound
or
dec
sbb
add
lods
inc
sbb
dec
jno,pn
fdivs
dec
ret
dec
daa
adc
mov
push
inc
scas
out
pop
inc
clc
pushl
add
insb
or
in
xchg
sbb
fdivp
jmp
cli
pop
cs
hlt
dec
jg
xor
xor
adc
mov
mov
enter
js
idiv
pop
cld
add
mov
call
cmp
dec
and
sbb
xor
cmp
add
jg
xchg
xchg
pop
cltd
sbb
sti
out
cmp
in
jg
incb
mov
pop
mov
cmp
jge
mov
mov
mov
ss
mov
pushl
pop
pop
hlt
add
pushf
inc
cmp
test
mov
hlt
add
outsl
sbb
dec
xchg
out
cmp
fcoms
jecxz
addr16
pop
lock
lock
das
stos
stos
add
insl
and
jnp
in
mov
pusha
pop
adc
adc
or
loopne
jo
ljmp
mov
xor
push
in
jo
push
ret
inc
and
sbb
insb
mov
lcall
add
std
jge
insb
xchg
cwtl
lea
es
inc
decb
lds
ja
add
pop
test
add
fadd
in
or
fnstenv
cli
lods
jg
jo
and
cli
outsb
fadds
cli
scas
cmp
and
add
push
adcb
xchg
je
orl
sub
sbb
adc
cli
lds
mov
and
adc
or
lret
dec
sub
in
sahf
add
hlt
fcomip
lock
in
jo
daa
add
or
jg
xchg
push
adc
push
mov
das
or
or
test
or
lock
dec
sbb
or
int
mov
pushl
mov
mov
or
outsb
inc
shlb
dec
sbb
add
fistps
aaa
inc
mov
add
lock
xor
and
lods
and
mov
mov
jnp
adc
cmp
add
rclb
sarb
xchg
fs
sahf
pop
inc
ret
out
push
fadds
xchg
inc
popa
mov
or
andl
es
mov
mov
pop
inc
add
push
decl
movb
jb
cs
mov
clc
push
shll
movsb
adc
roll
or
xchg
push
or
clc
ja
popf
mov
std
lds
adc
test
or
enter
out
adc
mov
mov
xchg
add
mov
aad
data16
pusha
rorb
jb
xor
pop
loop
jb
adc
push
dec
cmp
and
inc
ss
or
incl
xchg
movsb
inc
and
lods
ljmp
mov
cli
mov
jg
fldt
icebp
sbb
cmp
inc
cltd
mov
notb
inc
nop
cmovle
xchg
inc
add
xchg
testl
movsl
es
dec
and
adc
sbb
add
sbb
test
jno
std
push
jle
scas
pop
sbb
adc
jle
add
std
jbe
cmc
and
add
add
test
cmp
gs
outsb
mov
movsl
jmp
jle
and
pop
inc
jge
popl
addb
add
nop
mov
inc
mov
push
jne,pn
mov
sub
nop
adc
push
push
cmc
fstl
or
xchg
jge
mov
cmpsl
cld
fxch
sti
mov
jb
xor
out
cmp
scas
shlb
cmc
scas
add
incb
lret
and
mov
scas
pop
sub
and
movsb
inc
fcmovnu
movb
add
fs
mov
cmpsb
adc
outsl
scas
inc
mov
xor
inc
dec
and
movsl
and
in
jo
and
sub
test
pop
mov
push
bound
add
cmp
pop
mov
test
jbe
pop
cld
outsl
filds
jmp
imul
mov
sub
adc
adc
adc
lahf
adc
add
scas
or
dec
inc
add
adc
jg
mov
mov
shlb
rolb
ud0
call
jbe,pn
add
daa
and
mov
jmp
ljmp
sbb
lock
mov
std
jo
mov
nop
lcall
xor
add
aaa
mov
push
imul
loope
add
mov
scas
clc
call
cwtl
push
cmp
icebp
add
mov
xor
xchg
fisttps
inc
xor
push
push
xlat
rolb
add
jg
or
mov
xor
or
nop
inc
pop
roll
divb
jnp
mov
bound
add
jp
push
ds
xchg
adc
inc
and
out
mov
call
pusha
or
xor
fidivs
js
addl
adc
nop
dec
push
add
loop
mov
dec
xchg
inc
dec
mov
or
and
es
adc
pushf
jp
inc
or
mov
test
mov
clc
mov
lea
or
nop
andb
mov
cmp
push
jns
es
pop
lock
or
shll
fdivr
jmp
mov
test
rorl
shl
or
dec
mov
pop
pop
pusha
ret
decl
inc
test
or
mov
shrl
loope
jno
push
insl
jae
incl
aad
and
sub
psubusb
imul
sub
xor
cmp
call
or
sub
call
add
mov
add
shrb
bound
incl
iret
add
xadd
sbb
push
push
int3
and
mov
mov
xchg
pop
cmpb
fxam
and
insl
sub
dec
inc
mov
cmp
mov
and
out
mov
and
in
sti
and
xor
mov
inc
out
push
adc
fmul
xor
test
lock
adc
mov
lods
sbb
test
repz
mov
es
loope
push
push
xchg
mov
mov
add
stos
and
jle
aad
inc
aam
in
inc
adc
push
dec
imul
loope
mov
mov
ljmp
fwait
lret
orb
std
push
xchg
mov
outsb
arpl
ror
push
and
enter
out
in
jecxz
repnz
sbb
adc
xor
es
mov
rorb
xchg
inc
or
or
mov
mov
rol
inc
fsubs
rclb
fldt
or
fs
pusha
lcall
push
adc
push
xchg
add
mov
sub
dec
mov
and
incl
sti
inc
sub
sub
inc
cli
loopne
repz
and
or
or
loope
jb
bound
cmpsb
cli
outsl
add
push
mov
xlat
push
or
cmp
js
add
addb
shlb
jmp
push
lods
lds
sbb
add
inc
pop
test
lock
fwait
shll
test
fnstcw
out
fldenv
fdivrs
das
clc
stos
and
push
or
lods
shrb
push
lods
fsts
movsl
pusha
inc
loopne
add
les
lock
mov
jmp
sub
mov
pop
jne
push
jl
xorl
sub
ret
pop
retw
adc
cld
push
adc
imul
inc
cmp
test
dec
xchg
mov
enter
in
sarb
and
inc
sahf
movl
std
xchg
adc
and
xor
dec
pop
or
lock
adc
dec
std
call
add
call
inc
adc
mov
scas
fldenv
add
add
movsl
testb
mov
mov
mov
pop
add
sbb
push
mov
mov
xorb
mov
dec
ret
xor
or
ret
stos
xor
sbb
or
push
dec
push
push
mov
add
xchg
aam
mov
dec
adc
clc
pop
add
pop
inc
add
fstpl
pop
mov
cs
sbb
addr16
and
outsl
shrb
cmp
cmpb
push
es
push
or
sub
cmpl
enter
test
cmp
andb
pop
call
pop
push
mov
jg
std
lds
scas
cmp
nop
pop
addb
addb
jnp
fmuls
lds
nop
es
or
test
push
push
call
repz
mov
nop
call
aam
sub
jl
sub
insl
adc
clc
addb
push
ret
push
mov
or
sbb
mov
orb
xor
outsl
subl
add
inc
orb
test
es
mov
sub
push
sub
shlb
pop
addb
inc
jmp
lock
cmp
test
pop
sarb
addl
and
sbb
scas
lret
int3
cmp
adc
mov
faddl
outsb
inc
dec
inc
mov
decb
ds
sbb
or
lea
fdivp
incb
cmp
mov
xchg
jle
sbb
ret
mov
add
inc
testb
mov
and
faddl
fistpll
out
sbbb
adc
add
add
popa
cli
outsl
add
nop
imul
insb
xchg
and
imul
adc
mov
pop
dec
imul
test
cmp
sbb
push
mov
cmp
fiaddl
and
das
jo
inc
push
jl
andl
mov
inc
and
stc
xorb
add
or
roll
fnstcw
insl
push
insl
cli
mov
lock
cltd
inc
fsubrs
loop
inc
mov
outsb
xchg
call
outsl
sar
add
scas
dec
inc
inc
cmpl
sub
mov
decb
outsl
mov
push
sub
add
and
add
adc
adc
sbb
jle
or
jnp
inc
std
mov
stos
lcall
adc
lret
orb
andl
adc
andl
fs
add
add
sub
movsl
cmp
xchg
ret
ljmp
popa
sub
xchg
or
mov
push
jmp
mov
bound
mov
inc
and
aad
ljmp
ret
and
repz
xchg
add
jle
sub
jmp
and
ret
add
addl
add
shlb
movsl
inc
mov
pusha
sub
mov
pop
rolb
or
and
imul
add
add
addr16
lods
push
adc
push
loop
dec
aam
pusha
pop
outsb
roll
pop
cli
rorb
mov
fisubrl
hlt
andl
jo
mov
push
stos
push
lock
add
addl
or
ja
clc
pop
sbb
push
rorb
pop
inc
push
cmpsb
xchg
add
fnstcw
pop
and
or
scas
pusha
pop
mov
or
inc
inc
and
dec
adcb
mov
inc
mov
add
adc
stos
subl
and
test
fucomi
xor
xor
push
mov
test
es
jecxz
movsl
jmp
filds
dec
inc
mov
mov
inc
and
mov
mov
loop
mov
xor
or
out
push
aad
call
inc
test
mov
pop
popf
pop
addb
outsl
inc
and
es
sbb
mov
pusha
sbb
pop
fcoms
or
sub
fs
mov
js
inc
sub
std
mov
inc
sub
push
clc
es
mov
dec
and
push
inc
sub
adc
sbbb
xor
adc
add
cmp
ljmp
jg
inc
and
add
es
movsl
and
adc
push
test
inc
push
faddl
adc
movsb
xchg
pop
rol
xchg
push
ror
inc
cmp
xchg
les
cld
subb
inc
xor
out
mov
adc
mov
push
add
lods
call
xchg
data16
cmp
sub
data16
arpl
add
movsl
call
xor
cmpb
shrb
movsb
icebp
hlt
call
add
test
add
outsb
xorb
test
jb
mov
mov
xor
jo
std
lea
ss
push
popa
add
mov
add
shrb
or
aaa
push
sbb
cmpsb
xchg
test
inc
in
xchg
sbbl
fcmovnu
out
push
sbb
scas
xchg
sbb
add
in
nop
pop
mov
and
mov
or
rolb
int3
add
add
inc
icebp
scas
mov
push
mov
stos
inc
add
sti
ja
mov
fcomps
or
add
test
inc
test
pop
cmpsl
and
in
add
ds
popa
pop
sahf
in
xor
or
sbb
lock
push
or
rcr
loope
jo
movsl
or
sbb
add
call
mov
aam
and
jle
call
jns
jmp
sub
outsl
add
mov
insb
push
add
out
das
jmp
lret
test
test
test
and
lea
lods
xchg
add
pop
cli
jg
in
cmp
cli
adc
ret
test
andl
sbb
loopne
nop
xchg
inc
or
adc
jmp
test
shlb
test
push
jbe
xor
adc
ret
inc
and
xchg
rcll
call
inc
lock
jg
test
mov
cli
and
es
mov
es
lahf
xchg
cwtl
sahf
fdivrs
fildll
sti
and
jp
test
insl
add
scas
push
pop
in
and
push
or
mov
fcomi
fwait
adc
xchg
mov
add
xor
add
fadds
je
jbe
add
hlt
decl
into
hlt
and
xchg
mov
xchg
or
push
xchg
add
or
outsl
push
adc
mov
enter
mov
or
pop
jno
or
aam
gs
ja
adc
and
movsb
add
cltd
jp
loopne
popa
add
push
push
insl
or
mov
sti
add
or
repz
sub
repnz
and
pshufw
pop
shrl
lods
push
mov
je
cwtl
xchg
pusha
fdivrl
push
lock
cmpsb
incl
rcrb
lods
push
mov
or
mov
mov
adc
and
push
and
and
test
or
in
subb
sahf
fcmovnu
pop
add
sbb
test
sbb
shlb
ja
outsb
adc
sub
add
mov
insb
fstpt
stos
mov
adc
adc
adc
and
mov
mov
movsl
lock
loopne
lods
mov
add
add
add
cmp
dec
lods
xor
aad
cld
movsl
test
mov
and
xrelease
cmp
out
testb
loopne
cli
pusha
inc
mov
outsl
fildll
sub
or
pop
popf
add
mov
filds
js
outsb
lret
jo
ret
lcall
int
fnstenv
push
subb
sub
or
jge
mov
and
insl
call
push
out
sti
ljmp
or
js
and
shlb
outsl
xchg
mov
mov
xchg
lret
inc
movsb
cmpsb
jecxz
call
in
repnz
mov
in
loope
mov
je
cli
and
pushl
sarl
push
mov
xor
mov
add
insl
sti
es
fdivrs
rolb
mov
or
sbb
mov
add
or
lcall
lock
inc
push
push
loopne
andb
fwait
adc
add
xchg
in
fimuls
fists
mov
shll
or
mov
ljmp
or
xchg
rcr
mulb
xorb
mov
mov
aad
inc
xor
push
mov
pop
cmpsl
add
nop
or
sti
jg
add
movsb
xchg
or
loope
imul
push
lcall
or
inc
out
xchg
add
jecxz
or
fwait
or
fwait
lea
adc
es
lock
or
loopne
mov
and
jo
nop
fmuls
adc
lcall
xor
rorl
mov
xchg
mov
xorb
add
mov
and
xor
mov
push
sbb
dec
sub
adc
out
inc
add
dec
and
xchg
pusha
imul
and
sbb
push
inc
push
or
adc
pop
jp
cli
push
pop
andb
mov
rol
cltd
add
decb
outsl
inc
and
fsubs
fstpt
xor
inc
fbstp
nop
add
inc
adc
call
inc
mov
mov
dec
fstpt
add
rorb
repz
or
xchg
loop
mov
push
xchg
rol
lds
sbb
xchg
and
inc
mov
or
dec
add
pop
lock
in
xchg
cmc
int
incl
cltd
movsl
or
xor
push
push
pop
inc
add
inc
pushf
lcall
scas
lret
mov
pop
cld
js
cmc
and
loop
incb
adc
test
sbb
ficoms
mov
xchg
std
mov
mov
push
xor
test
loopne
adc
fcos
fisttps
repz
add
mov
scas
jle
das
shlb
std
pusha
orb
add
aad
push
mov
dec
hlt
ret
aam
aad
xchg
inc
pop
nop
stos
pushl
mov
push
clc
movsl
inc
inc
icebp
adc
mov
out
fldz
ret
rolb
or
inc
outsb
addl
mov
int
lds
std
add
stos
sub
aad
outsb
mov
bnd
ret
clc
push
xor
adc
repz
xor
jno
repnz
sbbb
xchg
adc
add
aaa
sbb
imul
jl
mov
or
pop
rcrb
dec
sti
push
adc
add
jno
bound
ss
add
cmpsb
loopne
daa
out
cmp
cmpb
push
add
xor
scas
add
fildll
mov
xchg
fcomps
fiaddl
xchg
push
mov
add
in
retw
push
pop
add
xchg
mov
scas
int3
push
mov
lcall
pop
fwait
or
gs
sti
push
jle
fsts
in
clc
jg
mov
or
in
movsl
add
test
mov
add
je
add
mov
push
sti
add
add
repnz
fisubs
add
outsb
xor
imul
mov
push
xchg
out
cmp
in
ja
testl
add
cmp
inc
add
pop
ret
sbb
xchg
lret
movsb
notl
insl
cmp
add
aaa
add
jg
add
hlt
ret
std
cmp
jecxz
or
jmp
jbe
add
cmp
or
lods
pop
sub
mov
mov
xor
bound
data16
fdivr
mov
stos
cmp
jbe
cmp
push
dec
add
lret
mov
sub
out
xchg
add
pop
pop
pop
jp
jle
sti
or
out
inc
insl
adc
or
dec
pop
idiv
add
add
pop
cmp
dec
mov
adc
aaa
mov
sub
lcall
xchg
pop
add
rcr
pop
add
inc
fsts
push
add
or
sub
ret
lock
idivl
jge
dec
or
lock
jg
pop
mov
aas
sbbb
xchg
fistps
add
jo
jb
adc
lcall
sbbb
adcl
pushf
hlt
dec
xchg
mov
xchg
cmpsl
cmp
or
ljmp
dec
out
imul
xchg
cmp
das
stos
fs
jmp
incl
add
das
out
stos
test
xor
cmp
sarb
aad
sarb
sti
lds
addl
out
cmpb
xchg
dec
mov
inc
ljmp
fnstsw
leave
mov
inc
xlat
cld
xchg
or
roll
push
shrl
lcall
push
adc
add
je
decl
ret
push
rclb
jbe
or
ja
and
mov
inc
and
inc
inc
add
jnp
add
pop
sarb
scas
cli
aas
jl
and
mov
ljmp
call
or
push
cld
or
xchg
dec
je
out
sbb
pop
pusha
loop
xor
int3
jbe
push
mov
aam
fcompp
das
inc
cli
pop
pop
icebp
push
and
jo
xchg
dec
jne
int3
dec
add
cmp
mov
orb
popl
popa
mov
mov
insb
repz
ljmp
rolb
sahf
rcrl
enter
or
sub
sub
lea
insl
ret
lcall
pop
orb
jmp
outsb
repnz
outsb
push
mov
xchg
jg
mov
pop
dec
cmp
pop
nop
addb
loop
clc
sbbb
inc
mov
push
or
stos
lret
adc
inc
or
add
or
lcall
ret
pusha
push
pop
js
or
xchg
mov
inc
and
jmp
incl
pusha
sub
movsl
sbb
sub
mov
cs
cli
adc
xor
orb
sub
stos
xchg
popf
mov
jg
adc
inc
add
pop
sar
inc
xor
je
nop
xchg
leave
add
scas
push
adc
sub
bound
and
and
invd
mov
dec
sub
out
push
cmp
hlt
popa
jns
mov
add
shlb
lock
adc
ret
and
in
xor
pop
add
and
insb
and
lock
ljmp
mov
nop
inc
push
add
cs
popa
add
sahf
andb
pushl
sub
mov
fdivr
adcb
add
andl
jmp
fnstsw
fcmovu
shll
sbb
xor
push
inc
xchg
ja
icebp
sbbb
outsb
adc
or
stos
mov
cmp
and
sub
or
ljmp
push
adc
add
lret
add
lock
inc
pusha
inc
and
movsl
dec
repnz
mov
mov
xor
inc
and
sub
ljmp
jo
push
sub
fadd
stos
sub
pushf
out
test
pushl
and
ret
push
in
sub
and
test
and
sub
jnp
mov
jge
in
lcall
clc
jb
roll
mov
sub
push
cwtl
repz
rol
adc
add
adc
add
clc
mov
sub
mov
lods
or
std
incl
xor
pusha
inc
or
and
mov
push
js
inc
add
ljmp
bound
mov
inc
add
jbe
cmpb
cwtl
int3
and
hlt
sub
and
sub
call
aad
int3
sub
gs
adc
xor
ja
jmp
out
and
loope
rcrb
cmp
loop
loop
pop
push
mov
incl
xchg
movsl
add
sbb
les
pusha
test
fbld
inc
mov
cltd
mov
inc
movsl
aad
hlt
outsl
scas
cli
out
sub
nop
and
and
push
inc
adc
testl
sbb
push
cmp
push
sub
mov
add
movsl
loopne
out
cld
mov
and
xchg
lret
mov
andb
push
in
bound
mov
or
rcrb
cmpsl
mov
mov
mov
cwtl
scas
scas
movb
xchg
je
fldenv
bound
loopne
shlb
ljmp
jg
inc
mov
adc
add
lock
add
mov
and
sub
ljmp
inc
mov
shrl
out
pusha
or
cs
cld
arpl
inc
and
push
scas
fdivs
xchg
call
add
popa
inc
lods
rolb
les
add
pop
inc
jecxz
push
sbb
rolb
mov
lea
inc
stos
fcomps
adc
mov
mov
lods
sub
shlb
sar
push
mov
add
xchg
adc
mov
or
shll
or
jl
add
push
in
fnstcw
jo
orb
cwtl
sbb
orl
push
cmp
adc
push
test
inc
add
ja
push
sub
lock
sub
ret
out
or
cli
fchs
adcb
insb
fsts
mull
push
add
fistpl
push
push
movsb
fcom
gs
int
subb
stos
mov
outsl
outsl
and
addl
or
or
mov
or
push
xor
shrb
aas
inc
pushf
xchg
test
shll
in
and
xchg
sbb
bound
sub
mov
push
lock
jmp
addb
and
in
sub
jle
movsl
fnstenv
add
popa
adc
or
adc
inc
mov
es
mov
adc
mov
repnz
divb
rcrl
sarb
jp
or
mov
jno
movsl
sbb
adc
stc
cld
fildll
adc
dec
and
jne
xor
nop
or
xchg
fcmovbe
push
pop
push
loopne
and
leave
adc
jge
mov
inc
insb
add
cmpsb
insb
push
movsl
insl
sub
push
mov
ja
scas
sbb
push
sub
mov
test
add
add
mov
xor
mov
lcall
lea
add
nop
and
loopne
mov
lock
arpl
inc
sbb
icebp
cli
int
sbbb
insl
push
add
sub
inc
pop
xor
rclb
add
stc
push
push
cs
movsl
mov
push
mov
push
lock
lock
sub
push
fimull
test
clc
and
cwtl
push
lods
cld
pop
loopne
fucompp
nop
or
lock
mov
adc
flds
dec
add
js
leave
inc
repnz
sbb
inc
lock
mov
pop
pusha
lock
sub
hlt
push
cld
lret
adc
add
idivb
fsub
push
ret
movsb
inc
inc
xor
movsl
inc
mov
loope
push
inc
addb
adc
pop
push
or
lea
lds
push
jp
inc
outsl
mov
pop
push
jo
mov
inc
mov
adc
xor
arpl
or
sbb
adc
dec
aaa
sbb
adc
js
add
xchg
adc
xchg
ret
sbb
jg
jge
fnstenv
adc
nop
movsb
fsts
pop
adc
add
rcrl
or
mov
push
fwait
lahf
sub
clc
and
mov
scas
js
sub
or
incl
inc
mov
lock
xchg
add
fbstp
in
adc
movsb
lock
inc
ds
ret
xor
push
add
pushf
nop
push
rolb
sub
insb
lret
sub
movsb
add
mov
adc
inc
addb
or
inc
push
push
rorb
inc
push
jmp
mov
pushl
or
xchg
adc
pop
call
add
sub
mov
orl
addb
pusha
jbe
adc
pop
inc
mov
sub
push
nop
sub
xchg
rorb
cli
push
push
and
call
testb
xor
push
cmpb
and
hlt
rorl
sub
jb
shll
test
xor
sbb
pop
outsb
xorl
lcall
jbe
inc
push
cmp
and
mov
add
add
imul
inc
movsl
aad
mov
jo
add
sbb
shr
and
push
or
xchg
pop
pusha
hlt
inc
mov
xchg
aas
xchg
mov
pop
pop
mov
pop
add
mov
addr16
mov
insl
jge
jl
push
mov
xchg
jl
mov
sub
jo
icebp
xor
mov
or
cmp
aad
and
or
sarb
add
pop
pop
ljmp
xor
xchg
ds
pop
sub
sbb
test
andb
cmpsl
inc
nop
loope
cld
add
mov
push
inc
mov
lcall
cwtl
fsts
mov
cld
rolb
inc
mov
enter
jg
jno
jb
adc
sbb
xchg
push
cwtl
mov
cmpsb
call
mov
jne
popa
insb
mov
push
sub
jg
push
or
jb
inc
and
pop
insl
jbe
dec
mov
adc
inc
insl
cmpsb
add
pop
adc
sbbb
in
dec
rol
loope
pop
or
pop
mov
sub
lds
cmp
mov
pop
lock
arpl
rclb
dec
bound
int3
repz
jmp
jno
lds
mov
fimull
push
or
rorl
in
pop
mov
lds
add
lods
and
push
roll
aaa
add
or
mov
push
bound
jo
add
sub
mulb
sub
insb
dec
inc
jb
cld
lds
or
clc
inc
inc
jp
inc
xchg
rorl
test
data16
decl
xor
sub
popa
and
sbb
and
push
outsb
push
mov
and
adc
adc
andb
jo
and
push
xlat
mov
in
popa
sub
adc
in
in
push
aam
filds
push
push
mov
add
inc
cld
arpl
mov
pop
nop
xchg
or
mov
push
mov
test
xor
add
mov
jg
scas
mov
inc
mov
dec
mov
inc
mov
sti
xor
addl
adc
sub
mov
push
cwtl
add
cmpb
xor
xor
xchg
inc
enter
inc
jp
jg
sbb
insl
add
in
inc
pop
roll
cmp
shrb
loop
jbe
xchg
adc
mov
inc
lods
enter
add
into
out
dec
repz
scas
outsb
test
mov
hlt
out
add
out
les
push
out
and
push
mov
sbb
add
pusha
sti
push
aaa
sub
inc
decb
ljmp
imul
out
rep
repz
push
mov
lcall
mov
lahf
add
addl
pop
mov
or
pop
in
or
xor
and
sub
xor
push
fimuls
and
cmpb
mov
cmp
push
mov
addb
repz
xchg
adc
test
icebp
dec
mov
add
subb
add
xor
fcoms
fmuls
int3
push
adc
push
push
std
xchg
adc
faddl
out
lods
test
pop
cmp
xchg
scas
outsl
inc
in
and
aad
out
loope
mov
in
stos
lret
push
mov
lret
nop
fidivs
pop
in
decl
dec
fsubrl
fdiv
rcrb
inc
jge
pop
test
js
add
mov
push
imul
addl
adc
or
dec
into
mov
cmp
pop
dec
lock
inc
xchg
adc
stos
sbb
in
cmpsl
lahf
add
in
push
inc
sar
inc
add
mov
mov
and
dec
jo
adc
xchg
imul
push
roll
dec
xchg
es
lea
ljmp
aaa
movsb
sarb
mov
adcb
insb
pop
sbb
movsl
xchg
jb
push
or
ljmp
movsb
scas
mov
fistpll
jge
mov
stos
test
push
and
jle
call
call
test
xor
mov
testl
and
xor
add
inc
mov
jmp
rcrl
in
sbb
xor
xor
fs
movsb
add
sbb
jge
xor
mov
sarb
jo
rolb
xchg
clc
dec
and
cmp
inc
ja
push
dec
fidivl
call
or
add
or
rolb
loop
fnsave
sub
and
push
enter
dec
pusha
push
mov
andb
sub
test
adc
pop
ljmp
xor
pop
shlb
pop
icebp
fcomi
scas
pop
jle
cs
frndint
or
scas
pusha
mov
add
cmp
std
jb
aaa
pop
sbb
push
mov
add
stos
mov
cmc
pusha
sar
test
lock
jmp
add
add
push
pop
test
fidivrs
push
ret
decl
add
movsl
xchg
sub
adc
or
outsb
int3
rclb
sub
cmp
clc
xchg
jle
and
call
mov
cltd
cmpsl
adcb
shrb
movsl
aaa
inc
cmp
movsl
adcl
pop
jo
aam
mov
sub
mov
ret
add
mov
dec
or
lods
jae
popa
adc
push
mov
inc
and
rcll
call
and
addl
sti
inc
jne
jp
aas
adc
push
adc
mov
lahf
adc
aaa
cld
cmp
sub
add
push
cwtl
movsl
mov
sbb
mov
inc
lock
push
and
or
popa
clc
lahf
ljmp
mov
add
out
xor
out
jge
clc
ja
cs
popf
inc
or
cmp
std
pop
add
and
mov
and
adcl
adc
idiv
pop
call
inc
add
pusha
add
and
popa
push
inc
pushf
and
dec
xchg
loop
mov
mov
roll
add
insb
aam
or
cld
inc
push
ret
adc
testb
cs
sbb
cmc
pop
test
mov
jl
mov
lret
pusha
rclb
or
test
inc
shlb
inc
push
repz
xor
fldenv
mov
cmpb
adcb
popa
movsl
lods
xchg
and
lahf
hlt
pusha
add
dec
aam
and
and
decl
add
sbb
and
lods
test
inc
popa
xchg
mov
aam
adc
or
adc
loope
cmp
into
mov
jle
or
adc
mov
in
push
push
or
adc
push
sbb
ds
xor
or
jg
sti
std
push
and
mov
and
inc
addb
and
mov
out
xor
fcmovb
pop
mov
ds
fcompl
movsl
mov
inc
loopne
shlb
fcom
sbb
or
add
clc
sbb
mov
std
pop
pop
clc
mov
mov
mov
sub
xor
shll
mov
inc
or
mov
push
in
inc
mov
int3
mov
adc
jmp
mov
mov
jae
jle
and
es
shll
andb
mov
dec
mov
sub
push
shll
inc
das
das
test
dec
ror
push
lods
cmp
loope
dec
int
or
cltd
loopne
xchg
inc
fs
leave
inc
roll
mov
movsb
addb
clc
mov
jbe
icebp
sbb
decl
push
ret
add
nop
jle
inc
xchg
sbb
orb
lds
or
push
xchg
lcall
adc
xchg
push
fldcw
xchg
nop
add
nop
push
adc
icebp
and
es
pushf
xchg
fstpt
push
or
adc
ljmp
inc
rolb
arpl
add
sbb
clc
mov
cli
es
cs
clc
jbe
mov
xchg
loop
add
sub
add
xor
jo
push
cs
lcall
mov
add
call
repnz
mov
data16
dec
scas
out
xor
add
add
outsb
rcrb
add
jmp
mov
adc
push
adc
pushf
jo
push
incl
daa
shrb
std
rolb
add
cmpsb
es
dec
stos
xor
inc
and
mov
insl
repz
sub
dec
add
test
or
push
clc
add
movl
cld
jo
xchg
adc
addb
pop
fistpll
lret
clc
lcall
mov
outsb
daa
in
sub
scas
xlat
adc
adc
mov
lcall
fadds
popf
daa
pop
in
xchg
fisubrs
mov
aas
movsl
rcrb
add
push
fsts
subps
daa
repnz
sti
adc
add
dec
nop
cmp
pop
nop
jg
mov
cmpsl
push
push
add
push
call
mov
scas
addr16
pop
mov
clc
stos
int3
dec
inc
xchg
mov
cmc
xorb
pop
js
mov
rcrb
xchg
push
push
test
aad
scas
outsb
test
sub
mov
movsl
sbb
adc
add
ja
add
into
mov
xor
or
nop
jl
inc
stos
push
or
jne
and
adcl
cli
mov
fdivp
loopne
push
scas
loop
or
sub
xor
xor
adc
mov
pop
dec
inc
sahf
jg
ljmp
inc
add
add
xchg
clc
mov
les
and
test
adc
arpl
cwtl
and
add
mov
mov
xchg
loopne
or
mov
inc
and
push
test
scas
scas
pop
push
mov
mov
sub
push
xchg
mov
dec
loopne
es
shlb
pop
lea
mov
clc
data16
push
jbe
jo
shrb
cld
int3
mov
addb
out
jp
enter
sbb
pop
ds
or
rorb
xchg
or
aam
add
or
dec
and
add
in
out
pop
push
pop
xchg
jae
add
xor
add
loopne
dec
cmp
dec
sub
scas
mov
loop
scas
or
mov
or
and
sbbb
decl
mov
cmp
loopne
and
add
lock
push
push
insl
dec
or
mov
sarb
cmpsl
scas
adc
loope
mov
scas
mov
adc
jge
sbb
fldt
shr
test
jl
test
adc
inc
mov
jmp
mov
ss
mov
cmp
jl
movsl
daa
lock
and
loopne
sbb
lock
pop
lods
aas
pop
aam
and
jge
push
push
xor
xchg
and
xor
xor
call
pop
xchg
ss
les
nop
adc
and
pushl
shll
pusha
push
hlt
movsl
shrl
jno
pop
fnstcw
in
inc
sbb
jbe
in
sti
cli
jne
or
es
loopne
scas
gs
xor
pop
push
and
outsb
insl
mov
insb
ret
and
xchg
and
ret
sbb
pop
inc
xchg
adc
andb
add
push
out
mov
in
mov
xchg
insb
inc
sbb
or
popa
xchg
xchg
add
jno
jg
lock
push
inc
add
lock
inc
dec
nop
rcrb
mov
mov
cli
sbb
xchg
mov
fcoms
and
jne
gs
and
mov
and
sub
jbe
ljmp
mov
pusha
xchg
inc
fsubrs
dec
sbb
insb
mov
sub
mov
add
push
fdivrs
cs
adcb
cs
jne
add
imul
fists
xchg
cmp
mov
daa
clc
mov
xor
push
push
push
jl
mov
push
std
fldcw
push
sub
test
mov
jmp
cmp
nop
sub
pop
sub
add
mov
je
adc
lock
add
pop
mov
test
out
jp
add
clc
push
jmp
push
mov
rcr
xchg
ljmp
and
lods
loop
add
sysenter
scas
pop
orb
adc
push
pop
add
nop
adc
imulb
pop
lock
push
add
dec
inc
xor
test
les
pop
cld
jbe
cwtl
mov
dec
sub
mov
mov
xchg
pushf
and
adc
sub
ret
imul
shlb
and
or
ror
xchg
pop
sub
fwait
push
push
xchg
sarl
loop
mov
and
jmp
loopne
push
loope
or
bound
push
inc
xor
mov
and
stc
cmpsb
es
sbb
sarb
dec
and
int3
ds
sbb
mov
or
cmp
xchg
sahf
jp
jecxz
loope
push
es
clc
cmpsb
mov
std
outsl
pop
aam
ret
cmp
les
jno
out
cmp
nop
lcall
and
ret
lods
mov
jmp
cmp
es
adc
inc
push
push
jecxz
inc
fbstp
inc
in
inc
jne
fwait
adc
jne
push
aas
call
pop
add
fists
jg
cmp
jno
cmp
cmp
mov
jg
rcrl
addr16
cmp
mov
pusha
int
loopne
push
scas
jne
cmp
sub
push
lcall
adc
xor
movsl
js
mov
and
incb
dec
jo
push
inc
cli
push
xchg
ss
or
adc
cmpb
sub
inc
jp
add
push
in
sarb
test
push
testb
or
mov
pop
std
popf
pop
add
jp
dec
lcall
cli
cmp
add
or
hlt
andb
ret
mov
dec
aaa
test
jge
cmpsb
adc
xor
fcoms
jo
stos
mov
sbb
test
or
mov
cmp
pusha
add
push
push
sbb
inc
push
pop
mov
fs
int
insb
mov
sub
cmp
inc
add
out
lret
sbb
sahf
imul
add
and
cld
adcb
dec
jmp
adc
mov
add
mov
inc
adcb
filds
orb
shll
subb
andb
rclb
andb
sbb
call
addb
andb
flds
stos
out
dec
test
sub
add
dec
jge
inc
adc
lods
inc
jae
adc
mov
push
aaa
rorb
idivb
and
cld
add
pushf
repnz
inc
clc
adc
sub
in
or
and
add
or
ljmp
mov
push
xchg
adcb
push
or
lcall
or
movsb
lods
sub
enter
or
jmp
dec
orb
pusha
inc
cmp
jge
add
adc
add
out
sub
push
pop
xor
jb
ja
push
cmpsb
cs
dec
dec
jecxz
xchg
pusha
in
push
cmp
rolb
gs
and
lods
push
or
call
rorb
orb
ljmp
rolb
test
inc
adc
and
cmpb
mov
idivb
adc
addl
add
loope
lea
addb
push
cli
shl
cmp
add
inc
rolb
test
xor
xchg
mov
add
fisubs
inc
mov
push
fadds
mov
movsb
adc
and
pop
inc
imul
mov
insb
dec
add
adc
adc
lds
inc
sbb
xchg
arpl
xorl
add
xor
add
pop
andl
icebp
push
add
cmpsb
dec
xorb
and
inc
mov
inc
sub
inc
imul
adc
loop
and
mov
cs
jo
pop
inc
lods
add
ret
leave
dec
lods
mov
scas
inc
push
add
movsb
xor
aas
mov
scas
ret
adcb
mov
add
fs
outsb
lcall
fbld
stos
lcall
dec
rcrb
scas
call
push
inc
jns
jge
jbe
jg
and
cs
inc
cmp
lds
pusha
ss
das
sub
xor
cmp
mov
or
mov
dec
addb
and
aad
adcl
sbbl
pop
es
jle
pop
inc
and
mov
loope
and
sbb
inc
dec
pop
adcl
jne
jg
subl
add
loopne
add
xchg
add
fidivrl
mov
and
call
dec
or
insb
add
push
stos
pop
sub
mov
cmpl
loope
push
test
xchg
fistl
xor
pop
sbb
jmp
test
adc
insb
inc
jg
xchg
add
in
xchg
mov
add
fsubl
shlb
test
mov
punpckhdq
outsb
loopne
fstps
jb
and
add
or
mov
mov
mov
scas
xor
and
push
add
xorl
and
incl
xchg
mov
inc
and
sub
adc
pop
subl
mov
mov
inc
addb
mov
out
popa
addl
lock
pusha
add
push
mov
ljmp
add
fidivrl
adc
ss
add
sub
shlb
sbbb
sbb
xor
movsl
add
inc
filds
aaa
push
add
call
arpl
mov
lods
fcoms
ficomps
in
out
std
lea
jle
sbb
inc
test
addb
mov
add
adc
add
shlb
data16
testb
aam
xchg
and
test
jmp
in
es
inc
jle
mov
fsubrl
or
lods
mov
add
scas
jge
sub
faddl
push
sbb
scas
lret
or
imul
out
and
inc
push
xchg
dec
ljmp
int
repz
pop
ficoms
push
dec
movsb
mov
jo
inc
popa
or
push
shlb
cld
pop
jo
nop
jecxz
add
mov
pop
push
outsl
test
push
xchg
in
scas
and
clc
and
popa
iret
inc
in
outsl
insb
dec
xchg
mov
inc
or
imul
or
push
jl
test
and
or
ljmp
sub
cld
sbb
icebp
mov
test
sbb
push
sbb
popf
ds
add
lock
mov
add
jae
push
sub
and
rcrb
push
sbb
loop
loop
outsb
add
outsb
sti
aam
mov
cmp
scas
js
mov
outsl
push
fidivrs
loop
xchg
arpl
cmpb
scas
push
or
inc
insl
filds
fisubl
mov
add
gs
xor
add
clc
subb
outsl
fidivs
incl
pop
mov
es
and
divb
lods
incl
std
jbe
outsl
add
inc
adc
inc
xchg
push
add
aaa
cld
sub
fwait
mov
adcl
mov
inc
push
ficoml
std
lds
inc
jae
aam
lock
adc
jg
sbb
ss
xchg
jmp
call
push
rcrl
inc
cmpsl
xor
jmp
mov
cwtl
push
inc
mov
inc
mov
adc
sbbb
add
mov
and
or
outsl
sbb
inc
cli
push
add
dec
mov
add
ret
incb
aam
sbb
loope
xchg
mov
mov
mov
or
or
fsts
mov
adc
inc
fcmovnu
mov
and
jns
loopne
mov
sbb
cmp
clc
pop
cld
push
add
pop
icebp
cli
inc
fistpl
mov
add
or
addl
call
pop
ror
xchg
or
xor
es
inc
add
push
pusha
cmp
add
hlt
mov
and
scas
repz
xchg
loop
jl
loop
xor
mov
insb
outsb
inc
nop
and
lock
xchg
mov
jp
rclb
pop
and
and
pop
cmp
mov
pusha
adc
pushl
inc
add
add
fs
test
aaa
jne
sahf
push
test
mov
shl
es
push
mov
add
orl
cmp
xchg
insl
push
sbb
add
adc
fwait
and
divb
dec
jmp
sub
loopne
inc
push
dec
es
loopne
add
cmp
cld
outsb
or
stos
mov
std
lds
or
mov
inc
inc
incb
addb
push
mov
add
ljmp
add
popf
sbb
and
xor
jmp
add
ror
and
ja
fcomip
lea
mov
add
sub
insl
sbbb
pop
insl
push
mov
add
mov
sub
enter
mov
mov
and
mov
mov
mov
dec
push
or
pop
push
mov
inc
bound
mov
shll
jo
push
xchg
mov
out
add
inc
imul
pop
inc
sbb
movl
std
orb
dec
out
adc
pop
pop
rclb
and
icebp
outsb
clc
and
mov
xchg
fstpt
xchg
test
adc
jno
sahf
es
lcall
mov
adc
sti
inc
lea
mov
add
repnz
in
in
aaa
mov
inc
add
mov
push
mov
nop
mov
pop
jb
dec
mov
pushf
dec
lock
mov
outsb
jo
add
sti
lret
or
sbb
pushf
cli
insb
inc
sbbb
dec
push
push
sub
jno
lods
insb
dec
sbb
insb
addb
nop
sub
out
fmuls
sbb
inc
in
mov
and
ja
mov
xor
js
icebp
cmp
fs
roll
lret
lock
les
les
mov
mov
add
mov
and
or
incb
xor
push
gs
ss
dec
jo
inc
scas
xor
sahf
loopne
cld
adc
jmp
adc
idivb
nop
add
jle
shrb
add
or
mov
adc
les
sbb
push
push
dec
xchg
push
pop
jo
loopne
test
cmp
push
fcmove
sub
insb
cmpsb
int
jg
add
cmpsb
ljmp
cltd
push
test
pop
loop
sub
les
jge
mov
mov
dec
mov
dec
adc
in
movsl
dec
popa
push
pushl
inc
mov
cltd
adc
fmul
test
add
inc
rcrl
cld
adc
ret
mov
call
jbe
cltd
arpl
movsl
add
sbb
push
xchg
outsl
push
test
movsl
rorl
out
or
cltd
dec
mov
sbb
adc
notb
enter
fcoms
push
pop
mov
ret
ljmp
add
cmp
movsb
jo
mov
ljmp
es
lock
pusha
inc
xor
xor
pop
jno
outsl
mov
xor
or
push
bound
mov
mov
or
push
sbb
out
lea
std
fwait
and
mov
adc
or
inc
add
xchg
and
or
outsb
adc
push
push
fidivrs
lcall
push
inc
adc
push
push
sti
pusha
or
aad
enter
and
mov
loopne
mov
jg
sti
sahf
push
pop
push
add
loopne
mov
add
addl
and
mov
je
aaa
hlt
inc
loopne
push
lds
and
inc
inc
pop
inc
out
call
jb
and
call
jg
and
jo
adc
xchg
shrb
push
rolb
pop
adc
call
sbb
std
mov
pushl
cld
jg
or
fdiv
pop
push
movsb
and
loopne
bound
test
test
out
push
mov
mov
pusha
movsl
inc
jl
mov
popa
push
sub
mov
rorl
add
repnz
jo
push
fadds
loopne
cs
movsb
bound
inc
into
mov
pop
movsl
aam
mov
filds
rclb
les
cs
aaa
sub
loopne
xor
bound
rorb
inc
mov
xor
and
test
jg
int
repnz
pop
in
in
pop
mov
or
arpl
nop
push
dec
mov
sbb
in
cmp
adcb
jae
outsl
mov
loopne
mov
push
pop
test
add
int
adc
add
mov
or
xorb
add
mov
and
jl
jecxz
and
stos
inc
shr
cld
add
mov
pop
bound
mov
sbb
fdiv
add
sahf
faddl
cmpsb
add
mov
mov
jle
movsb
movsl
sti
pop
std
outsl
int
mov
fiadds
xor
push
add
rorb
sahf
test
xor
pop
adc
add
je
jbe
xchg
movsl
jbe
and
inc
and
xchg
mov
add
inc
je
ja
sbb
or
add
pop
loopne
jb
inc
hlt
daa
call
pop
dec
in
add
lods
xchg
orb
sbb
cmp
add
subl
orb
ja
pop
inc
mov
adc
test
adcb
push
sbb
and
sbb
mov
pop
mov
scas
xchg
bound
test
scas
xor
push
add
cs
in
cmpsb
pop
pop
xorb
or
sub
arpl
in
dec
ret
pop
mov
pop
movl
mov
testb
and
xchg
dec
inc
mov
cmpl
add
xchg
stos
dec
cmp
pop
call
loopne
scas
cli
sarb
add
push
jge
sahf
xchg
add
sbb
mov
pop
roll
fst
add
js
xor
data16
cmpsb
adc
adc
fbstp
call
mov
push
movsb
mov
add
lock
push
sbbb
pop
jo
mov
bound
jl
jle
mov
push
loope
mov
frstor
fcomp
add
adcb
xchg
push
lret
inc
movsl
mov
inc
fidivl
add
movsb
es
lea
sahf
rolb
scas
fdiv
jg
push
mov
inc
push
inc
test
fiadds
lods
mov
jmp
imulb
add
jge
or
lds
push
sbb
test
sbb
sbb
dec
cs
loope
shrb
mov
xor
insb
pop
in
sub
cmpb
xor
sbb
fsubrp
jp
sbb
push
inc
mov
pop
push
adcb
push
ret
ds
rolb
ficomps
add
xchg
jbe
jmp
rcrb
mov
sub
pop
lods
call
jle
outsb
mov
pop
mov
aam
sbb
rol
and
outsb
push
add
add
subb
inc
test
loop
fistpll
stos
hlt
scas
and
loope
mov
inc
out
fists
js
hlt
sbb
ret
loope
dec
xor
mov
cmpsb
arpl
adc
inc
adc
movsb
shrl
andb
outsb
std
or
cs
sub
rol
or
mov
cmp
inc
push
inc
xchg
incb
fidivs
fisttps
insl
insb
inc
je
sub
shrl
in
sub
add
sub
cld
mov
mov
pop
mov
push
mov
pop
movsl
fdiv
inc
mov
clc
lods
and
incl
adc
add
sbb
mov
pop
and
pushf
cli
sbb
xchg
sbb
jg
mov
scas
and
loopne
pop
addl
push
jbe
test
jne
push
cmp
lock
or
pop
inc
mov
inc
mov
adc
jge
pop
mov
loopne
inc
cmpsb
push
adc
mov
dec
jg
dec
sbb
mov
cld
mov
push
and
xchg
or
mov
imul
add
mov
mov
sarl
sarb
inc
scas
insb
sbbl
test
loopne
scas
lods
shlb
outsl
outsb
insl
popa
cmc
dec
fisubrl
push
add
test
mov
pop
adc
shll
jg
push
inc
adc
subl
icebp
fisttps
or
imul
dec
call
rorl
stos
hlt
and
sbb
addb
nop
add
rcrl
or
mov
bound
sub
cs
mov
loopne
adc
push
jmp
sarb
jle
or
inc
or
shlb
cs
test
stos
add
inc
psraw
mov
push
adc
and
enter
inc
std
outsl
js
rcll
mov
mov
or
in
mov
outsb
loopne
xor
xchg
nop
inc
fcmovnb
sbb
leave
sbb
pusha
xchg
sar
sbb
cli
jb
add
push
test
test
xor
int
jbe
ror
pusha
sbb
or
adc
test
inc
popf
sub
shl
xchg
cmp
cmp
mov
sbb
and
bound
pop
jae
inc
gs
mov
imulb
push
test
bound
aam
aas
xchg
ficomps
pop
fmull
inc
push
inc
call
jg
ret
es
and
mov
lock
or
adc
popa
jnp
inc
shll
push
inc
inc
cld
push
xor
dec
rcrb
xor
mov
cmc
mov
call
add
add
add
cld
pop
push
or
add
stos
sub
xor
adcb
cmpsb
mov
pop
inc
add
inc
jg
sub
mov
adc
incl
cld
xchg
ljmp
mov
mov
dec
sarb
push
mov
xchg
stos
pop
jno
cli
lret
inc
inc
popf
jbe
push
jno
sarb
test
mov
sbb
mov
pusha
data16
lods
adc
fsub
ljmp
adc
ficoml
sub
and
lcall
jmp
or
loopne
in
clc
cmc
lret
insb
inc
outsb
mov
or
mov
push
orb
adc
or
and
testl
cmp
loopne
and
sbb
inc
sub
les
pop
scas
loope
inc
xor
adcl
push
popf
dec
scas
in
lods
add
nop
cld
lcall
pusha
or
inc
adc
movsl
and
nop
push
addl
push
mov
pusha
add
movsb
mov
xchg
push
add
lds
and
cmp
sub
add
decb
adc
jbe
dec
mov
test
bound
fnstenv
cltd
push
and
fs
add
lods
mov
les
fwait
cld
xor
test
push
outsl
call
movsl
std
inc
cld
movsl
cmc
fwait
test
jge
pop
pusha
dec
imul
mov
std
add
sbb
and
and
cli
filds
cs
dec
loopne
test
add
in
mov
xor
test
add
jle
fmuls
or
out
mov
adc
adc
add
pop
dec
adc
xchg
shl
insb
adc
jo
pop
add
push
jmp
pop
jno
sarl
sbb
sub
and
add
sub
es
int
add
std
and
adc
and
mov
sub
add
adcb
stc
mov
push
out
std
shlb
cltd
and
loope
out
cmp
lahf
pusha
or
rolb
lods
add
ret
insb
or
sub
add
hlt
sub
and
subb
shrl
ja
add
cmovs
in
cs
mov
fadds
mov
mov
loopne
jecxz
bound
jmp
xchg
aas
mov
sbbb
aaa
std
decl
lock
shlb
fldenv
xchg
icebp
jg
add
loop
and
nop
sub
ret
in
mov
xchg
test
cs
mov
adc
add
clc
insb
lock
sub
scas
call
lret
or
nop
out
xor
adc
ja
pusha
mov
mov
jmp
fldcw
push
mov
mov
add
push
push
push
adc
or
lock
sbb
incl
pop
mov
xchg
push
mov
inc
xchg
lcall
mov
jp
mov
mov
mov
add
arpl
add
jecxz
std
xor
push
rolb
stc
mov
jmp
jg
xchg
movsl
sbb
mov
adc
aam
pop
and
and
repz
fidivl
inc
jl
test
jmp
push
loopne
scas
mov
ljmp
or
ljmp
call
mov
jo
cmp
test
jb
mov
mov
xchg
adc
adc
lock
clc
sbb
xchg
sarb
add
jae
pop
fmuls
inc
out
mov
inc
ja
add
adc
mov
scas
pusha
cmpb
cmp
push
xchg
jmp
fldenv
sub
popf
sbb
jle
sbb
sarb
pushf
data16
xchg
cmpsb
cs
jp
pushl
les
and
cs
xor
pminsw
or
cmp
rcrb
inc
cmovbe
ljmp
fcmovbe
inc
and
xorl
add
scas
pop
mov
shll
fs
aad
or
and
std
outsb
xchg
es
xchg
cmp
and
jecxz
or
out
add
xchg
jl
and
stc
mov
flds
outsb
pushf
test
roll
sbb
pushf
adc
outsl
ja
hlt
mov
int
jp
movsl
xorl
mov
or
inc
cmp
sbb
sbb
cltd
inc
adc
add
add
cld
cmc
incl
jno
cmp
add
addb
mov
push
xor
addr16
inc
mov
out
and
pop
mov
and
push
mov
xchg
enter
push
icebp
push
repnz
subb
inc
inc
jecxz
push
mov
mov
cmp
nop
sbb
mov
sbb
test
add
popf
and
aad
jb
jp
xchg
repnz
push
mov
stc
rorb
rcrl
jnp
std
inc
inc
je
outsl
xor
scas
pop
cmc
rcrb
stos
add
add
lret
sub
or
icebp
inc
sbb
lock
negb
inc
and
add
divb
enter
repz
stc
inc
insb
sti
xor
push
shlb
add
cwtl
sbb
or
push
inc
push
mov
jecxz
lret
aad
xor
mov
faddp
loop
inc
inc
sub
and
add
add
sub
mov
sub
nop
mov
mov
push
mov
dec
nop
imulb
mov
dec
clc
push
inc
mov
dec
add
iret
gs
loopne
mov
sarb
lea
in
push
mov
mov
mov
inc
enter
mov
stos
push
add
jno
or
sub
fcomip
out
or
es
jmp
add
and
cmp
adc
clc
mov
inc
push
mov
inc
daa
inc
or
xrelease
adc
sbb
mov
inc
push
sub
mov
xor
jo
inc
outsb
pusha
cmp
stc
leave
pop
loopne
xchg
fs
xchg
adc
mov
pop
xor
fwait
clc
arpl
cs
mov
add
cmp
jo
push
add
nop
ss
mov
mov
xchg
shlb
inc
ja
aas
sub
push
repnz
rorl
aas
pop
fdiv
push
or
dec
jecxz
es
jl
aaa
rolb
addl
decb
xor
loop
adc
nop
inc
call
in
fildll
testb
fwait
and
dec
pop
fildll
or
rcrb
ficompl
adc
mov
and
mov
push
lods
sub
and
call
loop
cmp
fsubrl
adc
jo
call
sub
xchg
andb
jbe
scas
mov
jno
loopne
fnstenv
incl
jo
pop
inc
in
pop
add
and
aam
test
cltd
mov
cmpsb
push
add
mov
jl
xor
mov
mov
adc
add
jl
cld
aas
mov
push
mov
jl
sbb
shrb
mov
inc
sub
mov
adc
scas
mov
cmpsb
push
and
sub
pop
jo
pusha
or
addb
sbb
ds
fs
xchg
mov
dec
inc
sub
pop
or
push
gs
push
push
inc
sub
mov
push
addb
xor
and
sub
cs
and
mov
sbb
inc
mov
mov
or
inc
insb
std
sar
add
int
adc
sahf
addl
call
xchg
add
add
add
and
lock
out
leave
cli
std
imul
jp
adc
mov
ss
out
pop
cmpl
add
icebp
scas
inc
lcall
jo
rclb
add
and
outsl
pop
call
lock
loope
ja
lahf
mov
pop
orb
fdecstp
and
sbb
mov
cli
add
push
dec
cmc
or
int3
dec
and
push
jg
and
rcrb
es
inc
add
dec
mov
xchg
addr16
outsb
add
push
imulb
or
lods
add
add
orb
orl
outsl
in
pop
adc
add
movsl
add
addb
sbb
shrb
fisubrs
addb
mov
test
add
or
and
inc
jbe
push
push
mov
push
pusha
je
jecxz
and
daa
call
loope
call
shrb
std
out
dec
ljmp
mov
outsb
add
mov
lret
and
adc
subb
nop
mov
mov
sub
aam
and
add
sbb
add
cs
in
or
mov
or
jg
inc
pop
fs
pop
call
pop
jp
xchg
inc
pop
xchg
sbbb
ss
push
les
mov
adc
or
and
shl
xor
movl
pop
mov
notb
fdivs
orl
xor
fildll
orb
add
mov
adc
cmp
nop
inc
ja
add
rcrb
push
les
fimuls
jmp
mov
loop
fistpll
jg
add
adcb
js
and
sarb
xchg
and
sarl
aam
fisttps
push
xchg
fsubs
mov
or
ret
mov
mov
and
jmp
cmp
jp
fsubrs
icebp
dec
inc
xchg
pop
inc
or
cmp
pusha
xor
pop
shrb
sbb
sub
stos
push
sbb
dec
mov
inc
push
inc
negb
stc
xchg
or
orb
sub
into
push
pusha
jb
push
rorb
jo
fistl
frstor
fcmovbe
test
mov
push
adc
lahf
inc
xchg
std
call
and
scas
and
test
orb
arpl
out
lcall
stos
add
inc
mov
inc
mov
pusha
pop
daa
into
fstps
inc
loop
aas
rolb
mov
add
push
jecxz
mov
xor
and
lods
fxch
mov
add
dec
adc
fstpt
inc
fsubrs
adc
adc
push
pop
pusha
inc
loope
pop
cs
inc
sbb
inc
stos
and
hlt
sbb
mov
les
add
outsl
decl
adc
add
adc
jle
test
out
xchg
push
xchg
loopne
and
xchg
aam
xor
adc
mov
adc
jb
hlt
pop
icebp
movsl
or
jl
add
mov
dec
or
loop
sbb
mov
add
popa
push
pop
inc
or
jle
pusha
pop
jo
outsb
push
aas
add
and
inc
fwait
in
test
scas
xor
inc
incl
mov
and
sti
adc
mov
inc
mov
sbb
outsl
xchg
rolb
loop
and
sahf
pop
lcall
mov
mov
loopne
jbe
mulb
push
adc
cli
inc
push
gs
insb
sbb
mov
push
in
imul
jb
or
dec
inc
sbb
mov
hlt
cltd
shl
push
roll
out
sub
or
int3
mov
adc
loopne
and
mov
xchg
gs
into
imul
data16
jge
add
test
xchg
pop
loope
loope
repnz
movsb
orb
mov
rcrb
pop
loopne
popa
mov
xchg
cld
movsl
jmp
lock
push
and
and
dec
sub
repnz
pop
cwtl
or
cmpsb
out
push
loopne
add
adc
mov
imul
cmp
decl
xor
mov
xor
outsb
rcll
and
call
loopne
lock
adc
pusha
fisubs
outsb
or
outsl
and
fisubl
adc
scas
cmc
cmp
jmp
xchg
adc
fisttps
adc
aaa
mov
mov
pushl
add
and
cltd
and
push
es
jecxz
ss
lret
adc
mov
mov
add
adc
sub
loopne
or
jmp
sub
ret
loopne
dec
inc
ret
in
jmp
inc
push
stos
and
pop
aad
mov
mov
je
aad
jbe
inc
shrb
stos
and
aad
das
mov
adc
xchg
popa
dec
add
les
bound
push
adc
push
or
idiv
lcall
loop
lods
inc
mov
add
popa
add
mov
mov
inc
mov
call
sti
daa
jge
inc
cmp
jle
cmc
movsb
xrelease
pop
mov
cs
notb
lret
scas
pop
movsb
xor
jle
stos
mov
push
dec
sub
das
call
mov
sub
loop
and
add
scas
insl
ret
sbb
inc
lock
inc
or
pop
popf
loopne
dec
add
add
and
imul
stos
and
dec
jg
loope
fdivs
orb
mov
and
loop
pushf
cmpsl
adc
and
pop
mov
inc
jbe
xor
cmp
sti
les
repnz
xor
test
adc
lcall
pop
push
sbb
fildl
xor
add
sti
or
pop
sub
in
or
fcmovnu
popa
cli
das
cs
xor
add
sub
push
mov
xchg
lock
pop
movsb
scas
inc
sbb
and
cli
pop
add
insb
xor
mov
jmp
sbb
in
das
test
sub
or
outsb
jne
mov
xchg
adc
jno
movsl
or
add
add
mov
iret
std
ffree
jmp
add
icebp
add
dec
scas
add
adc
add
sahf
adc
adc
add
mulb
mov
push
lret
adc
mov
mov
push
jecxz
pop
jl
fsubrs
fs
mov
test
inc
repnz
xchg
lock
mov
cmp
outsb
add
add
sbbb
cs
lods
sbb
orl
mov
inc
or
std
inc
mov
adc
cwtl
test
stos
test
push
es
inc
je
filds
repnz
jbe
ljmp
add
lods
jle
in
inc
rclb
lret
mov
andl
adc
mulb
scas
push
push
inc
xorb
mov
adc
cs
fmul
xchg
and
xchg
adc
bound
cs
shlb
inc
test
add
lods
push
inc
add
jg
pop
fisubs
clc
mov
jne
pop
xchg
xor
and
shlb
dec
adc
stos
push
pop
push
lock
mov
dec
nop
aaa
lock
adc
sbb
xchg
pop
push
mov
xor
xchg
clc
push
clc
push
andb
movsb
jp
sbb
pop
in
lods
flds
ret
sarl
icebp
jmp
and
popf
mov
pop
inc
rcrl
adc
pop
jb
add
es
mov
sub
inc
movsb
adc
out
add
roll
fsubrl
test
lahf
push
sub
aas
insb
add
dec
xchg
sbb
out
aam
xchg
push
je
popa
xor
mov
call
outsl
and
adc
scas
test
sub
and
jo
add
cmp
adc
add
sbb
inc
inc
add
adcl
outsl
xor
movsl
cli
add
add
dec
xchg
mov
fs
cmp
add
mov
movsb
rcrl
or
mov
push
xchg
outsl
filds
dec
rclb
cmp
mov
sub
shlb
out
adc
mov
mov
fs
add
xchg
pop
pop
outsb
push
filds
jb
jne
test
out
push
add
mov
sub
or
fsts
call
fsubrs
add
sbb
dec
lds
fwait
sbb
xor
sub
lds
fwait
adc
inc
xchg
inc
in
inc
in
inc
pop
hlt
inc
lods
orb
and
pop
mov
xor
ljmp
clc
pushl
mov
inc
dec
jo
daa
in
and
pop
or
js,pn
sbb
push
cs
inc
dec
lock
mov
adc
mov
dec
xor
sbb
add
add
fbld
fmuls
stos
and
inc
nop
inc
hlt
loope
ljmp
inc
add
stos
ljmp
xchg
push
add
dec
xor
or
mov
adc
test
push
lock
mov
jo
pop
jno
je
jae
jg
jo
ficoms
inc
lods
adc
es
adc
fdivr
adc
leave
adc
shrl
mov
cmpsl
nop
adc
adc
inc
inc
icebp
add
xchg
test
aam
xchg
xor
ret
sub
sub
or
lret
inc
es
pusha
pop
ror
push
sbb
push
xchg
mov
das
xor
mov
mov
dec
inc
inc
loop
jmp
inc
xchg
xor
xor
inc
dec
jp
mov
inc
test
add
adc
es
enter
ljmp
loopne
test
shl
mov
xor
test
push
popf
cmpsb
pop
adc
push
loop
pop
push
push
rorb
pop
add
mov
mov
xchg
add
adc
loop
call
nop
inc
das
clc
rcrl
subb
rcl
pop
pop
das
insl
cld
fildll
dec
movsl
add
popa
xchg
fistps
scas
ljmp
mov
mov
add
js
mov
push
cwtl
cmp
js
adcb
jne
adc
inc
and
insb
mov
loope
mov
mov
mov
daa
push
adc
jge
and
cli
xchg
nop
cld
ljmp
add
inc
inc
in
dec
cld
pusha
pop
loope
jo
clc
add
out
xor
shrb
add
pushl
or
mov
add
cmpsb
in
ljmp
roll
xchg
inc
add
stos
insb
mov
inc
iret
test
adc
mov
mov
cld
outsb
add
xor
and
rorb
clc
outsl
dec
push
mov
insb
adc
add
stos
add
push
pop
fdiv
adc
fprem
or
aad
push
ljmp
nop
cmp
iret
or
movsl
mov
stos
mov
or
subb
and
orb
or
add
or
or
xchg
cmc
es
fcomps
jp
mov
inc
movsl
lret
xchg
sub
mov
inc
sbb
dec
adc
cli
push
mov
adc
pushf
add
std
push
xchg
stos
rcrl
shrb
push
mov
inc
add
mov
sbb
mov
int
jl
loope
adcb
pop
adc
je
dec
inc
sbbb
sub
mov
nop
add
data16
je
cli
std
jp
pop
fcmovnu
add
icebp
add
pushf
add
xor
add
add
mov
xor
xchg
dec
add
inc
aam
pop
sbb
ds
in
add
inc
add
or
mov
mov
adc
push
mov
add
scas
sub
mov
cmp
push
mov
cs
incb
lock
add
sub
adc
inc
insl
std
nop
sub
cmpsl
inc
sbb
jl
xor
and
or
mov
mov
mov
imul
sbb
xor
inc
outsl
orb
xor
mov
sbb
and
push
pop
mov
sbb
fcom
mov
jne
mov
fnstsw
mov
test
add
xlat
repnz
add
roll
sahf
fldenv
mov
test
cmp
xchg
rolb
add
int3
sbb
lods
sub
add
loope
and
leave
and
fdivrs
or
mov
test
xchg
add
insb
mov
fistps
xchg
jl
fnstcw
jnp
mov
mov
cmpsl
pop
xor
fiadds
rcrb
lret
inc
sbb
pop
jmp
inc
mov
push
jge
xchg
mov
inc
test
repz
stos
pushw
add
push
jge
mov
add
mov
ljmp
mov
inc
jmp
add
or
scas
rorl
cltd
push
mov
jmp
mov
orb
rol
push
jl
or
cmp
daa
mov
xchg
mov
mov
popf
add
pusha
rolb
push
cmp
xchg
rep
pop
mov
pushf
rolb
inc
mov
fidivrl
push
pop
insb
mov
movsl
mov
and
adc
mov
scas
sub
out
add
lea
mov
mov
outsb
std
pushl
shlb
xor
jne
sbb
push
add
and
in
inc
movb
or
cmp
push
ret
and
pusha
xor
inc
add
inc
test
inc
js
sbb
sbb
icebp
xchg
fldt
add
add
fadds
sub
hlt
adc
int
add
adc
movsl
dec
inc
sti
jg
roll
push
test
or
pop
in
sub
and
aas
xchg
add
pusha
cld
aaa
sub
clc
ljmp
add
add
mov
sub
in
push
mov
pop
outsb
fisubrs
pop
adc
movsl
inc
pop
and
dec
pop
add
gs
nop
and
inc
clc
lods
call
adc
adc
test
ja
xor
lret
jecxz
insl
loope
inc
sbb
rolb
add
inc
push
pop
mov
inc
fsub
ds
pop
aad
fsubs
mov
loope
and
push
pop
xor
scas
add
test
push
mov
cmp
lods
or
add
mov
sti
jecxz
push
std
and
out
lods
loop
cs
add
std
add
inc
outsl
mov
sarb
shlb
shll
jl
cmp
test
xchg
into
fildll
add
arpl
lea
popa
cld
jmp
lods
inc
add
in
addb
mov
test
xchg
cld
fistpll
mov
inc
xor
mov
test
arpl
sub
jne
pop
mul
dec
ljmp
adc
sub
pusha
adc
aaa
push
ja
add
sbb
and
dec
push
cs
or
ret
aad
mulb
jp
jb
mov
inc
or
in
and
jl
dec
sub
popa
and
popf
fsubrl
or
xor
push
test
pop
push
dec
fisttps
mov
dec
testb
or
mov
push
xorb
outsb
push
pop
adc
ret
xor
and
inc
push
sbb
sbb
addb
dec
sahf
mov
or
add
sub
jae
xchg
dec
dec
adc
xchg
xchg
fcomps
mov
ret
cli
orb
out
cwtl
subl
push
pusha
push
lcall
add
jmp
aad
inc
push
push
stc
mov
es
mov
test
mov
fcomps
sbb
rolb
test
jecxz
scas
loop
cmc
add
fdivrs
out
add
pusha
adc
ret
sub
adc
add
xor
sub
pop
or
lock
push
mov
lret
mov
sub
es
jl
std
mov
add
push
aam
rcl
std
test
adc
ljmp
or
adc
ret
test
in
test
dec
or
mov
mov
popa
mov
stos
cs
add
addb
xchg
imul
add
mov
popf
mov
aad
pusha
rcll
pop
push
mov
std
test
lahf
mov
outsb
incl
in
and
in
filds
in
scas
imul
add
subb
mov
aad
call
xor
add
lret
mov
lret
sahf
mov
add
push
push
push
loopne
lret
mov
and
and
jecxz
rorb
je
fisubl
loopne
jp
or
inc
cld
jbe
loop
aam
and
test
inc
dec
jo
push
je
cli
pop
sbb
add
xchg
loopne
and
push
mov
inc
cmp
push
adc
and
lods
and
sbb
stos
push
jg
scas
movsb
sub
and
sbbb
mov
and
fsubrs
in
mov
or
fsubs
or
push
xor
mov
mov
stc
sub
mov
xor
and
add
mov
inc
adc
scas
imul
xchg
rep
inc
push
or
jmp
xor
in
jecxz
fmuls
push
sbb
add
push
and
test
or
scas
es
mov
shrb
daa
and
fisubrs
pop
mov
mov
mov
xchg
cmpsb
addr16
cld
decl
scas
pop
nop
adc
scas
xchg
daa
and
add
add
xchg
pop
pop
popf
loopne
adc
push
insb
or
stos
popa
lcall
and
pop
and
add
and
adc
das
cmpsb
outsl
push
testb
ja
dec
mov
pusha
sub
es
bound
mov
lea
jb
out
add
jmp
lahf
sub
xchg
sub
fldcw
out
mov
mov
loop
cmpsb
in
insb
cmp
pusha
push
xor
adc
mov
outsb
mov
gs
add
pop
popa
mov
stos
jmp
jo
mov
test
sub
mov
daa
pop
cmpsb
lods
cmpsb
loopne
es
dec
pop
mov
insb
popa
pop
dec
fs
push
daa
insb
and
insb
mov
jp
loopne
insl
dec
test
xor
and
dec
mov
jle,pt
xchg
rclb
daa
jmp
pusha
and
sbb
ljmp
outsb
adc
lods
das
inc
or
or
fs
test
movsl
add
daa
hlt
lods
sbb
cmp
lods
xchg
pop
and
inc
and
in
sub
outsb
xchg
inc
sbb
mov
inc
fbstp
nop
inc
stos
loope,pn
push
popf
mov
or
and
adc
or
pop
xor
jo
ret
pop
or
adc
push
cli
cli
jo
loopne
loopne
sbb
jg
and
pop
add
mov
mov
fistps
es
clc
pushl
jo
mov
addr16
loopne
sub
and
sub
and
loop
bound
popa
cmpsl
jne
out
fisubrl
mov
cmp
mov
fsubrs
xchg
fs
sbb
sbb
loopne
inc
jne
sbb
xorb
pusha
jp
push
pusha
out
lods
inc
pushf
out
mov
push
ret
inc
stos
or
fwait
subb
pop
inc
imul
cld
es
bound
lock
cmp
inc
cmp
in
ss
adc
loope
add
fnstcw
into
push
jecxz
xor
pusha
js
imul
and
scas
push
adc
pop
movsl
fdivrl
lcall
sbb
mov
outsb
inc
rolb
jo
mov
and
std
and
mov
incl
mov
es
loop
inc
ss
rorl
or
or
mov
or
adc
inc
add
mov
cli
sbb
or
and
push
inc
cmpsb
imul
fcomip
pop
xchg
into
in
arpl
scas
jl
cwtl
into
loopne
or
cli
fnstenv
or
push
or
mov
clc
ljmp
repnz
repz
push
xor
cld
movsl
je
adc
outsl
xor
ljmp
jle
add
push
sub
push
and
test
call
cltd
scas
pop
scas
fidivl
xchg
add
push
call
and
xchg
lea
hlt
xor
push
hlt
mov
repnz
xor
dec
rcrb
mov
and
mov
inc
rolb
je
mov
xor
rcrb
mov
orl
test
push
jg
xor
pusha
add
ss
sbb
jne
mov
mov
add
mov
add
inc
xchg
add
lods
add
decl
or
adc
nop
popa
andb
inc
aaa
popa
add
stos
jbe
mov
ds
lret
and
lcall
push
mov
add
mov
push
push
iret
pop
stos
or
sbb
je
mov
pop
or
pop
or
push
lret
mov
arpl
shlb
cld
cwtl
ss
dec
loope
ror
sub
jno
fwait
les
loopne
clc
push
sub
lret
clc
xchg
cmpb
clc
push
inc
pop
dec
mov
sahf
es
es
push
push
ret
es
xlat
jg
or
call
lea
cld
in
jg
lock
add
push
add
and
test
aad
mov
xor
inc
add
push
push
and
scas
mov
mov
push
movsb
into
fisttpl
les
mov
mov
lret
or
add
rolb
nop
xchg
insl
inc
sbb
pop
sub
or
mov
nop
cli
mov
je
cmpsb
mov
nop
or
jo
mov
sbb
loope
test
xchg
cmpsb
xchg
call
inc
add
or
mov
jns
adc
adc
sbb
xchg
jne
les
addb
xor
stc
cmpb
or
stos
add
adc
and
ret
or
xchg
jne
pop
fcom
adcl
cmp
fstpt
lock
imul
inc
fsubrs
lock
pop
inc
aaa
test
or
and
and
pop
in
imul
sbb
sbb
lock
fdivrs
lds
aam
test
aaa
roll
dec
and
push
cmp
es
mov
cmpb
mov
fsubs
dec
fld
dec
mov
call
add
add
dec
push
xchg
add
pop
mov
xor
jbe
adc
mov
fadd
pusha
add
sti
popf
rclb
cmp
mov
loopne
outsl
call
or
pop
xchg
roll
inc
jmp
cmp
cmp
in
imulb
push
push
or
adc
push
jb
jo
lcall
in
jmp
rolb
xor
inc
enter
push
sti
push
sarb
add
add
inc
shrl
pop
cmp
movsl
fnstenv
add
push
incb
or
jne
pushf
or
adc
cs
push
and
push
xchg
sbb
bound
cmp
adc
sbb
inc
add
out
test
dec
sbb
cmp
add
mov
in
xor
js
mov
xlat
incb
xchg
in
repnz
add
faddl
push
cs
xor
mov
shll
jge
std
dec
scas
call
cs
add
pop
add
imul
pop
xor
mov
add
or
mov
fadds
xor
mov
or
push
ret
cmpsl
xchg
inc
fisubl
xchg
repz
cltd
or
cs
lcall
add
orl
cmp
stos
stos
lret
mov
sub
jl
xchg
jmp
cmp
cmp
inc
add
andl
mov
adc
sbbb
pop
dec
clc
imul
orb
test
mov
ds
nop
mov
add
adc
inc
inc
incl
jae
or
sti
fld
test
push
mov
xor
cmc
add
lret
push
mov
fimuls
add
pop
je
and
fisttps
lret
orb
add
mov
and
js
inc
xor
inc
pop
in
and
dec
cmp
jbe
imul
stos
inc
add
pop
dec
add
inc
add
andl
mov
clc
andl
lods
movsb
mov
dec
inc
insb
adc
adc
das
loop
js
add
and
cs
or
bnd
cli
test
inc
mov
pop
add
cli
test
adc
rcll
aam
lods
into
inc
xor
sbb
mov
cmc
mov
adc
add
rol
sbb
outsb
mov
inc
js
pop
push
push
in
or
pop
enter
lds
test
loopne
mov
add
inc
push
stos
fdivp
and
and
fisubs
add
sub
fwait
push
pop
mov
xchg
std
cli
lds
pop
pop
call
inc
jo
call
and
inc
fwait
add
or
lock
lcall
lds
mov
pop
mov
sbb
xor
or
push
inc
gs
sbb
xor
xor
cmpsb
jp
sti
sar
enter
adc
test
pop
or
icebp
pusha
jp
sub
jnp
cmp
or
idivb
inc
add
and
dec
cli
fisttps
xchg
inc
test
mov
addb
int
cmpb
fcompl
inc
and
std
std
pop
test
pop
les
add
add
andl
test
mov
mov
jnp
scas
es
sbb
push
repnz
les
jl
call
sub
cmp
pop
push
inc
popf
pop
mov
lods
cld
jmp
jecxz
mov
xor
loopne
sub
add
std
cli
dec
inc
or
es
loope
sbb
fnsave
cmpsb
in
xor
lcall
pop
mov
sbb
nop
or
sar
in
mov
andl
dec
lods
xor
mov
test
and
shll
mov
mov
mov
or
outsb
inc
inc
pusha
mov
add
aaa
or
inc
nop
orb
mov
out
push
push
and
and
xchg
insl
xor
pop
sub
xchg
add
fdivs
cmc
movl
inc
pop
ret
add
adc
inc
sub
pop
addb
aaa
loopne
stos
cld
add
mov
add
jmp
add
xchg
jne
add
ret
nop
or
sub
inc
pop
nop
pop
mov
xor
push
or
insb
and
loope
push
cmp
mov
mov
outsb
sarb
in
pop
add
test
jl
inc
mov
test
mov
outsb
and
pop
mov
sub
or
or
cmp
test
and
insl
xorb
mov
rcrl
pop
inc
scas
js
mov
add
add
lock
mov
fwait
mov
mov
loopne
fbstp
mov
mov
push
inc
test
mov
sti
ret
or
mov
push
sbb
adcb
jp
pop
push
lds
mov
and
xchg
fbld
mov
inc
mov
and
mov
jo
pop
xchg
add
dec
mov
push
ljmp
inc
jmp
sbb
mov
mov
lcall
addl
sarb
adc
or
sbbl
add
xor
jge
std
lds
mov
xlat
inc
mov
xor
out
dec
movsl
mov
sbb
mov
add
fbld
test
bound
mov
mov
popl
and
loopne
jo
push
daa
jbe
std
inc
xor
pmullw
lock
scas
jo
or
ljmp
scas
lods
inc
icebp
nop
test
and
cmpsb
or
mov
jg
xor
add
xor
jo
test
adc
jno
lock
nop
sbb
fwait
dec
pop
mov
push
test
inc
cmp
fimuls
cmp
inc
inc
mov
cmp
mov
jns
add
mov
out
lea
pop
xchg
cmp
jmp
jo
sti
in
ret
dec
scas
add
xchg
fidivs
fcoml
negb
in
mov
xsave
sahf
cmc
cmp
scas
mov
cs
rolb
fwait
inc
stos
pop
addl
jmp
mov
jnp
sub
adc
or
mov
leave
rorb
inc
je
add
decl
cwtl
mov
sbb
jo
inc
mov
inc
sub
in
movb
adc
pushf
mov
sub
std
icebp
inc
inc
cmpsl
add
pusha
xor
sbb
pop
lds
sbb
pop
cs
add
jo
mov
loope
aaa
sbb
push
mov
push
or
ret
je
cmp
adc
mov
sbb
icebp
mov
shlb
add
lods
jmp
cmc
arpl
orl
adc
xor
loopne
pushf
xor
xchg
imul
push
cmpsb
jmp
mov
mov
or
mov
lock
sbb
push
add
xor
xchg
add
js
add
aam
sub
jbe
jo
jge
mov
adc
sbb
or
mov
mov
sub
shl
sub
in
jno
and
fnstcw
dec
mov
imul
repz
inc
add
mov
pop
ss
fcoms
add
aaa
mov
lock
popl
ja
mov
repz
or
call
mov
or
loop
cmp
or
add
mov
insb
fbstp
rolb
and
movsb
add
in
ja
push
stos
add
movsb
add
add
dec
sub
fldcw
shll
adc
mov
test
mov
cmpb
cld
movsl
decl
imul
dec
push
aaa
xchg
push
nop
cmp
bswap
push
roll
js
and
xor
lcall
jo
nop
add
inc
fs
call
cmp
adc
test
adc
ljmp
inc
push
push
inc
fsubrs
lods
decl
addb
adc
mov
push
add
push
or
inc
outsb
sarb
push
pop
sub
scas
popa
nop
je
addl
popf
test
es
sbb
or
inc
cmc
xchg
add
mov
orb
out
ficoms
std
mov
sbb
outsl
and
push
mov
dec
push
rclb
sbb
std
add
shlb
mov
inc
fmul
push
pop
lret
jmp
adc
and
push
sahf
jg
hlt
leave
cli
mov
and
mov
std
mov
inc
mov
inc
xor
insb
push
add
xchg
xor
xor
lock
dec
adc
insb
push
pusha
addr16
test
xchg
dec
sbb
fistl
mov
and
mov
jp
pop
shlb
lock
adc
cmp
xor
mov
push
lock
fcoml
ljmp
sti
inc
jge
cmpsb
mov
mov
insl
aam
insl
int
or
jle
icebp
pop
out
xchg
jg
mov
jno
mov
or
and
cli
xor
mov
push
inc
push
test
sbb
xchg
shlb
ljmp
nop
add
sub
inc
xchg
add
push
pusha
xchg
jle
or
call
mov
shll
mov
fwait
xor
mov
push
add
mov
adc
jo
xor
mov
xchg
dec
cli
inc
add
lock
inc
add
pop
std
lahf
xor
xor
add
add
fsin
push
push
xchg
add
adc
mov
nop
mov
mov
mov
insb
xorb
daa
test
addl
or
mov
inc
aaa
or
lock
cmp
push
ret
jg
les
and
and
ret
lahf
test
call
inc
cli
mov
adc
or
push
mov
mov
xor
cmpsl
fdivrs
lret
xor
mov
inc
mov
push
sbb
call
mov
vaddsubps
shll
cmc
bound
mov
cmc
lcall
mov
cwtl
push
cmpsl
push
fnstcw
ret
outsl
jbe
sbb
aam
nop
outsl
xor
test
fcomps
push
lea
scas
clc
idiv
mov
mov
mov
popa
pusha
push
cmpsb
cmp
mov
or
int
or
dec
push
xor
push
xor
add
adc
cmp
aad
mov
xor
clc
sarb
cmp
mov
or
lahf
sbbb
dec
test
pop
mov
fistl
cmc
xor
add
mov
fwait
std
stc
adc
inc
nop
add
nop
mov
inc
cmpsb
add
fbld
dec
add
dec
cli
mov
mov
call
xchg
push
inc
push
inc
or
aam
mov
mov
rcrb
add
add
je
xchg
mov
and
clc
sbb
clc
xchg
fsubrs
mov
mov
add
push
scas
dec
addb
jg
lret
xor
cld
pop
lcall
cmp
mov
orl
lds
test
cld
addl
dec
das
loop
mov
adc
movsb
aam
pop
arpl
inc
sbb
sub
push
xchg
adc
or
int
inc
lods
ss
aam
push
jo
adc
stos
loop
mov
popf
dec
es
sahf
inc
sbb
andl
pop
inc
mov
daa
mov
push
test
popf
fisttps
std
adc
adc
andl
mov
mov
xchg
xchg
dec
adc
push
adc
or
add
mov
jecxz
std
mov
frstor
push
mov
jg
dec
mov
aad
scas
mov
inc
add
add
rcl
inc
add
add
pop
mov
popa
add
int
push
mov
mov
inc
cmpl
cmpsb
push
sbb
cwtl
test
inc
or
pop
ljmp
fsubs
add
or
jns
add
fwait
and
xor
push
cmp
inc
adc
loopne
xorb
or
ja
sub
test
inc
pop
mov
fxch
enter
push
push
inc
movsl
mov
dec
jo
sbb
sbb
mov
xchg
rolb
cld
inc
sbb
sbb
ss
ds
adc
lret
sbb
jg
fsubrs
test
adc
pop
lods
push
or
cmp
std
movsl
and
jmp
mov
cld
es
stos
popa
sbb
or
shlb
jg
or
fsts
aaa
inc
cli
push
aam
mov
mov
test
mov
or
add
je
cmp
test
dec
fbstp
add
mov
xor
ss
clc
cmc
mov
sub
or
sbb
outsb
add
push
xchg
sarl
dec
movl
out
es
inc
mov
inc
andl
rclb
incl
shrb
add
incb
add
popf
faddl
rcll
aaa
inc
xor
xchg
faddl
inc
loopne
jnp
sub
lock
push
adc
es
cmpl
mov
mov
decl
xchg
int3
roll
scas
orl
and
adc
dec
scas
cli
jg
out
sub
repz
mov
movsl
and
inc
add
les
aaa
xor
lods
mov
mov
and
sub
push
fwait
repnz
inc
inc
cmp
sbb
dec
jmp
push
dec
adcb
adc
into
int3
add
cmp
xor
push
and
or
pusha
adc
mov
mov
dec
push
fadds
and
mov
cs
sahf
cmp
inc
call
add
lds
dec
jnp
mov
shlb
add
push
mov
cmpsb
add
add
push
or
int
clc
insl
rorl
mov
and
push
mov
sub
and
adc
or
or
mov
mov
nop
adc
fldenv
pop
jbe
scas
push
repz
sub
jne
movsb
cs
and
xor
dec
mov
enter
adc
adc
cmp
sub
repnz
in
repz
inc
imulb
push
vaddps
fstpt
fwait
or
fiadds
jle
inc
cmp
dec
mov
sub
inc
icebp
push
and
xor
gs
mov
mov
add
test
mov
add
or
push
push
or
mov
daa
jle
mov
mov
push
and
movsb
or
and
or
out
nop
fwait
inc
adc
push
adc
push
outsl
shrb
js
add
cmp
and
mov
cli
leave
addb
std
lret
mov
cmp
add
dec
and
pop
push
jmp
movsb
add
std
pop
inc
push
sbb
movsb
or
stc
add
mov
cli
cmp
push
adc
mov
jge
bound
mov
sub
inc
xor
lds
loopne
sub
sub
sbb
mov
fsubs
cmp
mov
sbb
mov
pop
roll
push
push
or
std
jl
xor
jg
orl
adc
xchg
add
inc
rcl
inc
sub
add
mov
mov
xor
sub
movsl
xor
push
stos
test
mov
jmp
loopne
movsb
or
inc
mov
pop
jp
sub
rcrl
in
or
ljmp
scas
mov
push
xor
mov
incl
lea
fstpl
lods
mov
push
mov
mov
and
movsl
mov
dec
pop
cmp
mov
or
sub
xchg
mov
in
rorl
cmp
cli
divb
inc
inc
xchg
or
mov
inc
mov
mov
pop
in
dec
add
popa
jl
sub
lock
or
bound
cmp
outsb
lods
gs
outsl
bound
call
or
inc
dec
mov
and
inc
push
xchg
add
sbb
inc
ljmp
adc
dec
nop
push
add
dec
ret
roll
or
clc
inc
sbb
inc
lds
and
push
fs
push
hlt
out
mov
sbb
inc
pop
push
lds
cwtl
addb
rolb
dec
incl
pop
jo
and
inc
cmc
out
shrb
andb
xor
rclb
jg
xor
aaa
add
adc
aas
or
or
xor
dec
and
jmp
stos
and
mov
sbb
inc
mull
and
lds
inc
pshufw
mov
mov
mov
test
add
mov
imul
mov
hlt
and
fcoms
push
jecxz
or
vmovupd
inc
sbbl
push
imul
mov
adc
loopne
inc
stos
add
stos
test
cs
mov
inc
adc
imul
rolb
inc
mov
icebp
aaa
or
into
xchg
nop
sbb
and
repnz
xchg
movsb
subl
xchg
outsb
mov
adc
int
xor
cld
dec
sbb
jmp
idiv
loope
mov
add
bound
imul
orb
je
add
enter
jge
dec
sarl
jg
icebp
ja
mov
mov
push
bound
jo
test
mov
scas
dec
gs
sub
out
lret
push
sbb
movsb
pop
enter
and
inc
pop
or
pop
xor
lret
insl
xchg
stos
dec
xor
aaa
inc
clc
aaa
sbb
xor
and
sub
xchg
push
dec
fbld
pop
xor
adc
int
dec
repnz
inc
setg
adc
and
xchg
clc
aaa
lcall
rorb
mov
or
adc
fsubs
mov
mov
inc
inc
mov
outsl
shlb
pop
push
sbbb
outsb
es
ss
call
pop
xor
lock
pop
xor
pusha
outsl
add
cs
into
roll
pop
inc
or
push
adc
push
mov
inc
or
mov
pop
jo
xor
mov
adc
cli
or
aam
inc
pop
and
je
add
xor
mov
or
adc
xor
negb
or
push
lock
mov
int3
adc
push
jnp
add
loope
scas
nop
push
ds
sub
call
jl
sbb
add
rorb
loopne
jle
fsub
cmp
adc
cmpl
xchg
clc
push
xchg
cmpsb
je
xor
add
dec
pop
outsl
in
outsb
pop
sub
sub
ss
cmp
cmpsl
add
xor
call
loope
jmp
add
push
mov
or
push
push
aam
and
mov
pusha
mov
push
test
decb
dec
pop
fiaddl
leave
push
test
sbb
jle
and
mov
push
shlb
je
jl
cwtl
stos
incl
mov
sub
or
daa
cli
test
orl
add
mov
inc
pushf
add
jae
mov
add
xor
sbb
push
fsubs
adc
mov
and
dec
pop
nop
push
imul
or
std
adc
xchg
inc
or
mov
fcoms
add
push
mov
imulb
mov
pop
shll
or
mov
cmpsb
jb
or
jo
xchg
jg
hlt
int
and
pop
adc
pushf
and
xchg
or
fbstp
or
sub
or
shlb
mov
mov
loopne
add
call
rorl
xchg
push
add
sub
adc
std
xor
jp
inc
mov
xor
mov
add
sub
adc
mov
sbb
fcom
cs
ss
negb
jl
fwait
test
add
add
notb
aaa
sbb
shlb
add
out
xor
adc
xor
adc
add
or
pop
or
stos
mov
xchg
sub
cld
lcall
sub
mov
jecxz
push
pop
bound
aaa
push
adc
jns
push
data16
je
decl
cltd
lock
fst
mov
popa
popa
inc
es
and
jo
imul
in
test
adc
add
adc
incl
add
xchg
mov
rolb
mov
add
test
or
les
in
rcr
pop
sbb
sbb
xchg
xchg
inc
inc
lock
mov
adc
inc
test
daa
push
add
add
nop
push
fsts
test
inc
sub
xor
inc
stos
and
ret
mov
inc
ret
int3
loope
incb
pop
pusha
rolb
jo
fisubrs
mov
ljmp
mov
push
enter
and
pusha
nop/reserved
sub
xor
sbb
pop
jge
pop
xchg
call
aas
loop
add
ret
jg
push
add
sbb
jle
inc
mov
lea
push
cmp
lds
dec
pop
xchg
mov
cmp
mov
test
outsl
mov
stos
sub
mov
je
jo
fiaddl
mov
xchg
das
or
xchg
mov
fisubrl
add
test
jge
loopne
mov
popa
fimull
push
sbb
cmp
adc
adc
add
xchg
in
and
push
mov
or
aad
add
popa
data16
jmp
orl
mov
push
sub
test
popf
and
addb
movsl
mov
pop
pop
insb
outsl
aaa
adc
inc
xchg
adc
or
add
cmp
jmp
add
shlb
push
fistpl
add
data16
mov
movsl
hlt
shlb
xlat
sbbl
es
pushf
stos
and
xorl
inc
movsl
mov
decb
add
les
adc
sbb
mov
idiv
push
jl,pn
pop
dec
pusha
addb
lret
adc
lahf
dec
and
inc
sbb
in
or
mov
or
fstpt
test
add
xchg
mov
fprem
sbbb
sbb
cld
call
inc
xor
andb
or
cld
pushf
inc
mov
test
and
push
mov
push
je
imul
add
mov
adc
adc
mov
es
add
inc
push
icebp
sbb
pusha
inc
inc
lock
or
adc
dec
orl
shrb
dec
cli
and
push
xchg
pop
inc
mov
mov
addl
loop
aad
mov
and
repnz
pop
sbbb
outsb
pop
int3
xchg
push
pusha
sub
push
and
add
push
nop
pop
and
sub
mov
adc
nop
sbbb
lods
bound
hlt
decl
daa
outsb
xchg
pop
pop
push
subb
fadds
andl
cmp
bound
scas
xchg
subb
cmp
daa
stos
mov
idivl
jge
sti
pop
push
es
sub
lods
std
call
test
cmpsb
fsubrs
push
dec
out
adc
inc
or
popa
add
rolb
sbb
lahf
jbe
sbb
add
mov
and
or
enter
sbb
mov
sbb
push
lock
push
incl
add
inc
push
cmpsb
push
fmull
push
add
push
xor
mov
dec
loopne
bound
shlb
fsubs
roll
pop
stc
dec
push
lds
or
jb
add
fbld
loopne
sub
orb
fildll
inc
outsl
cli
pop
rorb
inc
lret
cs
rcl
push
shl
andl
or
xchg
inc
je
pop
jb
xchg
andl
sbb
cli
shl
sub
pop
and
in
dec
shl
or
sbb
nop
add
movsb
fsubs
sbb
rorl
shll
push
lea
add
and
adc
mov
push
nop
int
pop
mov
push
inc
pop
and
and
dec
push
adc
inc
cmp
pop
loop
fs
mov
or
cmp
adc
out
xchg
call
inc
and
dec
in
stos
push
mov
and
mov
mov
adcb
and
sbb
loopne
mov
add
cltd
and
inc
mov
xchg
rolb
or
sar
push
adc
daa
int
bound
push
sbb
pushf
inc
mov
or
imul
add
push
add
xor
sbb
sbb
pusha
sub
sub
adc
int3
mov
outsl
test
xor
inc
push
fldcw
adc
fsubs
ljmp
mov
ret
mov
sbb
or
inc
mov
enter
adcb
cmp
mov
xchg
ds
push
js
pop
dec
cmpsb
mov
inc
xor
mov
dec
push
add
cli
insb
xor
sbb
push
adc
sbb
test
test
je
push
fisttps
push
inc
sbb
shlb
or
into
call
lds
int
pop
aad
mov
jnp
sbbb
and
int
fbld
in
or
and
or
es
and
jmp
add
push
inc
adc
pop
ss
cmpsb
ss
lds
and
int
sbb
pop
pop
inc
dec
cld
in
call
mov
popf
push
or
add
pop
and
cmp
fcoml
lcall
add
loope
or
add
icebp
jne
shrb
pop
ret
movsb
sub
push
addb
mov
roll
or
loope
leave
and
push
ret
loopne
sub
movsb
cli
sub
ds
sub
popa
cli
mov
cwtl
rcll
add
mov
push
and
addr16
cli
push
icebp
pushl
jbe
push
lahf
push
subb
inc
fidivl
lods
js
and
daa
push
and
ret
add
jl
inc
add
jle
pop
ret
imul
cmp
shll
dec
and
popa
inc
and
dec
cmpb
jbe
notl
rcll
jecxz
test
das
jp
js
sbb
pop
inc
lret
flds
or
movsl
in
ret
movsb
adc
inc
lea
insl
test
sub
lea
loopne
hlt
push
jge
cmp
cli
jg
mov
mov
movsl
jmp
xchg
fcoms
pop
pusha
sbb
add
pop
outsb
scas
fs
adc
and
jno
mov
daa
jne
flds
push
add
enter
outsb
pop
adc
pop
jge
lods
mov
sub
mov
clc
cmp
mov
fldenv
jo
push
loope
mov
xor
push
popa
xchg
fcom
push
dec
xor
and
cli
dec
out
inc
xor
hlt
sbb
push
shlb
mov
clc
out
adc
bound
mov
roll
lock
cli
mov
inc
jp
adc
sub
sbb
mov
or
and
movsb
in
jl
add
adc
jmp
hlt
cmp
movsb
jo
add
andb
mov
ss
add
jl
or
outsl
insb
add
scas
jb
pop
push
cli
dec
shrb
pop
xchg
jne
bound
add
sub
jg
push
or
inc
fdivs
add
and
mov
lcall
add
daa
add
add
push
in
and
jmp
xchg
or
inc
add
cli
incb
push
add
adcl
jbe
inc
add
es
dec
daa
cmp
outsb
repz
xor
notb
sahf
xlat
add
sub
mov
inc
and
inc
inc
lret
loopne
jl
pusha
into
and
test
mov
xor
adc
adc
es
push
cmc
aaa
jo
stos
rolb
inc
aaa
cmpsb
sub
dec
std
add
pop
push
jg
sub
add
jns
add
xor
mov
roll
adc
cmp
mov
les
inc
sub
mov
mov
fwait
clc
scas
push
std
mov
call
push
cmpsl
fnstcw
ret
lcall
inc
push
inc
jecxz
adc
hlt
repz
mov
add
inc
loopne
popa
aas
mov
nop
or
pop
add
or
add
aam
mov
mov
inc
inc
shlb
test
aaa
fnsave
lock
paddq
mov
mov
js
mov
xchg
fs
loopne
add
shrb
xchg
jl
inc
cmc
cli
mov
lock
mov
rclb
popf
fs
movsb
rorb
cmp
adc
mov
mov
je
push
mov
or
movsb
pop
mov
into
adc
hlt
mov
cwtl
daa
jo
inc
cmp
or
fsubl
stos
nop
cld
fists
jge
jbe
adc
inc
addl
test
xchg
movsb
ficoml
sub
scas
insl
adc
insl
xor
pop
or
out
lods
adc
adc
pop
in
or
mov
pusha
sahf
jg
add
add
outsl
lret
and
mov
push
pop
loopne
push
insb
fdivp
aaa
adc
scas
rolb
sahf
fldenv
out
push
out
fldt
test
movsl
mov
bound
fbld
loope
pop
rclb
push
shlb
pusha
cmp
xchg
sbb
push
and
loopne
fld
cmpsb
sbb
gs
fisttps
insb
fnsave
cmp
fists
ljmp
lods
push
nop
xor
notb
jo
add
and
movsb
mov
push
cmp
hlt
push
sbb
movb
jl
cs
mov
pop
mov
xchg
mov
mov
ret
dec
es
pop
mov
enter
mov
jmp
fildll
cmp
call
push
in
and
pop
dec
mov
movsb
sub
add
mov
dec
movsl
pop
inc
loope,pn
push
daa
js
or
in
push
and
shll
stos
xor
sbb
adc
jg
leave
inc
les
add
call
bound
std
push
mov
ljmp
add
lock
and
jle
bound
jp
jmp
rcll
mov
mov
and
pusha
xor
scas
sbbb
dec
std
rcll
or
inc
cmpsb
inc
xor
push
nop
call
test
xchg
pop
movsl
jge
outsl
adc
pop
or
out
mov
movsl
push
push
shrl
sahf
xor
sub
nop
test
push
push
pop
add
mov
mov
push
jge
hlt
sti
mov
lcall
mov
mov
shll
mov
inc
mov
or
clc
in
sbb
xor
cmpsl
pop
mov
xor
cmpsb
adc
or
out
add
sub
adc
jg
add
das
xchg
cmp
enter
test
enter
orl
inc
mov
inc
test
test
shlb
inc
push
sub
fmul
xchg
notb
lods
or
xor
jg
mov
xor
es
pop
xor
xor
push
or
pop
test
inc
ljmp
xchg
pusha
push
nop
clc
and
push
and
mov
cli
mov
lret
push
shrb
push
fdivr
push
and
andb
aam
add
pop
ret
insb
mov
imul
push
rclb
lock
jmp
or
div
outsb
adc
orb
mov
test
daa
loope
inc
add
insl
rcl
mov
arpl
test
fdivp
outsb
adc
push
and
jl
mov
and
cmp
or
nop
fisubrl
push
or
jp
inc
mov
pushf
add
ds
jnp
movsl
push
add
add
fisttps
inc
push
inc
cs
push
sahf
add
or
cs
lods
rorl
jecxz
scas
mov
ficompl
stos
mov
inc
xchg
mov
inc
sbb
sbb
mov
or
sti
inc
cmp
pop
inc
mov
xchg
orl
xchg
and
inc
push
mov
shlb
adc
fs
push
xchg
mov
cs
xor
in
pushl
adc
cs
xchg
adc
repnz
outsl
xchg
fdivrp
pop
shl
cld
jg
pop
cltd
shll
mov
rclb
mov
add
xor
ljmp
dec
int3
sar
fidivrs
js
inc
mov
sahf
add
outsb
sub
mov
lods
mov
sub
dec
mov
mov
pop
outsb
jbe
xchg
push
add
test
insb
or
add
loop
mov
lods
out
jle
push
xchg
inc
push
xchg
adc
int3
adc
adc
scas
sti
sbb
in
add
inc
add
aad
push
insl
sbb
test
cmp
jne
shr
test
mov
movb
add
mov
xor
test
test
cli
inc
pop
insb
sub
inc
push
xor
es
adc
dec
testb
repnz
nop
or
fildl
dec
jbe
xchg
mov
orl
rorl
stos
test
cli
inc
call
dec
icebp
fmull
subb
nop
adc
push
inc
or
outsl
mov
mov
cmpb
add
mov
stos
into
in
xor
leave
push
xchg
jecxz
dec
adcl
add
addb
xchg
pusha
xchg
and
and
push
orl
sbb
sub
in
cmp
push
into
mov
and
xchg
xchg
mov
xor
add
sbb
adcb
ret
mov
in
andl
addb
inc
xor
add
add
imul
add
and
inc
arpl
push
loopne
cmp
push
aas
xchg
fisubrs
fnstcw
xchg
cli
sti
imul
cld
mov
push
ficompl
incl
mov
fidivl
sti
or
loop
push
addb
push
mov
ds
pop
pusha
xor
mov
cmpsl
movsb
mov
jl
push
inc
dec
rclb
dec
ret
sub
jae
andb
sbb
jle
pop
sbb
sahf
mov
sarl
sbb
mov
sbb
add
sbb
dec
jmp
add
push
add
es
call
sarb
xchg
add
and
xchg
incl
sub
test
xor
sbb
shlb
mov
adc
jb
inc
inc
inc
shl
adc
pop
mov
enter
pop
adc
sahf
sahf
push
jl
and
jmp
incl
inc
inc
xor
or
decl
bound
repnz
and
mov
pop
shlb
jg
and
push
inc
push
mov
sbb
test
jo
push
inc
cltd
outsb
pop
inc
in
push
push
repnz
test
or
adc
inc
hlt
and
sti
ljmp
cmpsb
push
mov
push
insb
inc
xchg
stc
stos
movsl
fstps
add
insl
repz
mov
test
xchg
pop
repnz
push
pop
cmc
lcall
xor
loop
pop
and
sub
mov
mov
push
mov
inc
popa
and
cmp
mov
mov
push
add
lea
aas
inc
repnz
or
std
in
and
add
test
fdiv
rcrb
xor
clc
push
xchg
push
stos
outsl
pop
jo
add
mov
or
pushf
add
cmp
mov
add
cltd
jle
mov
mov
or
loopne
subl
lea
int3
subl
sbb
sub
fcoms
xor
cwtl
sti
adc
scas
pop
sub
adc
inc
mov
incl
dec
cs
loope
imul
and
repz
mov
pusha
cld
mov
cwtl
mov
pop
add
xor
lods
lock
mov
andl
jle
es
xor
mov
push
add
cmpsb
xor
nop
in
mov
ljmp
cli
lds
push
stos
fiaddl
pop
mov
js
std
fwait
jle
fnstcw
push
xchg
rclb
add
push
pop
cmc
sub
addb
jmp
pop
and
clc
push
mov
or
rolb
imulb
pop
rolb
movsl
pop
shlb
pop
mov
js
orl
dec
jbe
loope
shrb
fwait
mov
js
in
mov
mov
lret
mov
mov
and
jmp
enter
add
mov
sbb
mov
mov
inc
jbe
inc
xor
bound
or
mov
imul
ljmp
jle
in
popf
and
cmp
cmpsb
pop
mov
stos
mov
decl
inc
mov
inc
pop
and
add
push
jmp
push
jecxz
lret
or
or
jge
and
cltd
inc
pop
xchg
adc
loope
adc
imul
shll
jno
adcb
pop
and
pop
rclb
cmp
scas
xor
stc
mov
xor
inc
lock
jl
enter
sbb
inc
dec
inc
cwtl
pop
xchg
ja
fisttpll
roll
shll
test
sarb
mov
scas
add
add
les
jge
nop
insl
inc
sub
popa
std
mov
loopne
pop
push
sbb
mov
es
dec
lcall
sub
mov
xchg
adc
decb
shl
nop
mov
fdivr
inc
xor
adc
mov
dec
xorb
xor
pop
loop
fiaddl
inc
shrl
fcmovb
outsb
aad
fldenv
pop
sub
add
xchg
int3
push
add
xchg
or
lods
js
in
int3
mov
mov
adc
scas
jecxz,pn
sar
push
daa
stos
sub
fmuls
or
mov
and
push
pop
stc
fsubs
lods
mov
lret
mov
push
ljmp
push
mov
insb
hlt
push
add
mov
jmp
std
scas
sub
scas
adc
push
cld
inc
inc
mov
inc
pop
jbe
push
aaa
addb
in
adc
dec
and
mov
scas
inc
stc
mov
add
ret
stos
cmp
sub
fcom
adc
add
adc
sbb
adc
adc
inc
call
add
cmp
lret
cs
popf
mov
mov
icebp
add
add
xchg
add
mov
pop
cld
pop
cmp
mov
mov
lretw
scas
insb
cmc
add
inc
cmpb
sub
les
inc
add
ljmp
add
mov
mov
push
jno
lea
jle
mov
mov
rcll
sbb
inc
lods
pop
sar
aas
inc
add
inc
add
fstpt
decb
test
xor
push
rcl
add
dec
rolb
filds
inc
orb
in
jo
nop
sbb
fwait
shr
sbb
scas
ja
and
and
jecxz
movsb
inc
in
loope
movsb
xchg
hlt
add
adc
movb
cs
mov
add
addl
rcrb
inc
and
scas
clc
or
cltd
pop
in
mov
nop
mull
cmc
fists
inc
and
sbb
and
adc
cld
add
shl
fchs
sbb
xchg
xchg
int
movsb
adc
jle
js
roll
inc
push
mov
jmp
xorb
cmpl
sub
rclb
inc
fnstcw
fwait
or
fldlg2
xchg
clc
fisttps
in
add
adc
add
inc
in
add
test
or
inc
adcl
mov
mov
outsb
adc
clc
push
or
add
add
add
fdivrp
push
in
js
mov
xor
inc
sub
and
cmpsb
xchg
rorb
aaa
addl
test
jmp
jo
inc
mov
bound
aam
mov
xor
imul
mov
lods
push
jnp
add
rcll
shlb
fcomp
add
std
sbb
inc
xor
add
inc
in
mov
int
add
jae
inc
xorl
fsubs
or
dec
imul
rolb
mov
pop
sbb
add
xor
mov
fisttpl
and
cmp
jbe
xor
mov
add
xchg
ljmp
js
rorb
and
fsubrs
or
and
pop
rclb
rorl
inc
dec
inc
inc
loope
add
fdivs
mov
decb
and
mov
pop
mov
push
bound
mov
lret
sbb
fldt
pusha
mov
ss
or
stc
mov
icebp
dec
mov
xorb
test
cmp
mov
add
subb
adc
stos
fiaddl
sbb
ret
ljmp
mov
rolb
inc
mov
lea
movsl
mov
sti
mov
adc
jmp
jle
inc
mov
inc
popf
outsb
movsb
fucomip
add
dec
adc
aam
cmpsb
je
mov
add
jg
sbb
pop
mov
sub
pop
inc
rolb
loope
dec
movsb
mov
dec
dec
xor
push
push
mov
or
lea
cmp
fdivp
mov
add
or
roll
sub
lds
ret
xor
dec
add
xlat
push
add
cmc
xchg
xor
sub
pop
fcoml
dec
mov
cmpsl
ret
and
or
mov
mov
inc
jnp
aad
mov
xchg
mov
sahf
lahf
push
das
jle
sub
cmc
inc
lods
mov
add
mov
stos
mov
out
inc
js
test
les
add
inc
fsts
cld
jg
inc
mov
push
sbb
add
and
inc
dec
clc
decl
fsubl
push
push
dec
mov
fildll
mov
ficoms
sbb
push
fcoml
add
movsb
add
mov
or
dec
out
cmp
add
rorb
add
or
adcb
mov
push
sbb
mov
fildll
scas
mov
push
test
sbb
xor
cmp
clc
imul
mov
aam
imul
pushl
cwtl
pop
adc
xchg
and
mov
or
add
data16
add
mov
mov
enter
and
fs
rorb
bound
pushf
xchg
das
add
jg
call
lock
adc
or
in
lock
mov
mov
mov
sahf
push
fs
into
sahf
lods
adc
mov
je
xchg
sub
lods
or
mov
rolb
dec
cld
push
jle
cmp
inc
fwait
mov
out
cmp
stos
stos
push
pop
xor
stos
stos
dec
insb
or
add
data16
and
ret
fs
roll
inc
mov
mov
mov
pop
out
cmpsb
fstl
lea
and
ret
fbstp
outsw
sub
es
push
scas
inc
add
pop
fwait
dec
jl
cmp
loop
push
fldcw
mov
add
xchg
push
add
add
xchg
out
mov
loopne
inc
jp
fildll
fidivrl
add
pop
mov
icebp
cli
push
fsubrs
cld
push
movsb
jp
adcl
cmp
outsl
jbe
push
xorb
add
push
mov
mov
mov
jo
fbld
mov
ljmp
push
inc
andl
andb
lahf
addb
rclb
inc
pop
sbb
mov
cmp
cmp
adc
sbbb
ljmp
js
mov
cmpl
add
push
int3
orl
mov
mov
add
subl
mov
sub
or
push
push
and
pop
and
sbb
sub
orb
iret
pop
or
dec
mov
or
pusha
push
stos
mov
cmpsl
mov
rolb
push
imul
add
lcall
in
pop
mov
and
adc
add
adc
xor
mov
fildl
cmpb
jg
fistpl
aas
dec
leave
mov
add
inc
or
addl
cmp
xchg
inc
cmove
scas
fwait
dec
sbb
add
shlb
sahf
fs
movb
inc
sbb
lea
mov
fadds
fists
fnstcw
das
jbe
push
pusha
orb
stos
movsb
mov
inc
lods
addb
adc
in
or
scas
push
lret
andb
sub
clc
pop
shll
mov
movb
in
inc
inc
adc
incl
fsub
adcb
adc
add
add
inc
add
push
lcall
pop
xor
sub
xchg
mov
mov
or
mov
mov
cmpsb
or
push
push
inc
sbbb
sub
popa
sbb
adcb
inc
sub
loop
mov
lcall
xor
ret
xor
insb
mov
push
inc
sbb
push
xor
and
xchg
add
and
and
adc
int3
add
outsl
in
sub
es
repnz
add
in
sub
cltd
fcoms
or
aaa
pop
sub
dec
fs
inc
sbb
fstpt
call
inc
jge
sub
mov
and
lds
pop
scas
subb
dec
nop
sarb
loopne,pn
lods
or
aaa
pop
cli
pop
pop
add
mov
or
inc
cld
mov
mov
movsb
cs
cmpb
sbbb
sub
js
push
xchg
or
push
push
outsb
sbb
push
mov
cmp
or
jae
loope
mov
mov
add
jae
push
and
pop
arpl
sbb
fwait
mov
push
insl
sbbb
push
fidivrs
outsb
dec
ds
pop
and
loop
inc
sar
insb
mov
shlb
shlb
adc
pop
loop
movsl
inc
inc
inc
or
mov
push
pop
pop
daa
mov
pop
dec
insl
xchg
mov
pusha
pusha
jp
mov
sbb
add
xchg
and
pop
sub
push
push
jns
mov
cs
loop
pusha
mov
orl
movsb
pop
or
test
nop
jp
sbbl
repnz
cmpsl
imul
insb
cld
lods
mov
nop
imul
mov
sub
add
fdivrs
inc
cltd
gs
leave
jmp
pushf
jbe
aaa
sbb
xlat
loopne
fwait
mov
mov
add
clc
push
stos
clc
sahf
add
sub
loopne
insl
mov
adcl
movsb
loope
fwait
loop
mov
xor
xchg
cmp
add
and
xor
jl
mov
stos
bound
inc
mov
push
sbb
rclb
mov
cs
insl
inc
adc
das
mov
and
jmp
cmc
pop
test
and
mov
cmpsb
and
dec
or
xchg
test
rcrl
pop
push
pusha
das
arpl
mov
imul
jge
adc
and
add
call
movsb
and
inc
or
jecxz
sub
daa
sub
xchg
mov
sbbb
les
scas
mov
jnp
and
cld
add
sbb
test
inc
pop
mov
xorb
inc
cmpsb
icebp
cmpsb
inc
dec
rcll
sub
adc
and
into
inc
mov
subb
adc
mov
add
mov
cmp
add
xcrypt-ctr
cmpsl
sbb
adc
inc
shr
cli
mov
push
or
and
jmp
shl
clc
sbb
fs
iret
adc
adc
push
call
fisttpl
or
add
adc
push
xchg
inc
rcrl
and
aam
cltd
scas
mov
add
pop
dec
loop
into
add
and
push
sbb
lds
push
lahf
inc
adc
cwtl
push
ja
add
jl
ret
das
inc
push
neg
adc
or
lock
mov
insl
xor
add
mov
mov
mov
and
mov
stos
sub
xchg
add
scas
add
xchg
sahf
add
dec
cmp
add
outsb
lods
adc
pushf
std
or
lret
push
roll
or
push
cmp
push
add
outsb
add
test
sub
gs
cmp
push
sbb
iret
cmp
out
inc
mov
ljmp
imul
add
divb
add
rclb
xor
inc
sbb
mov
jo
popa
xor
or
insl
mov
jle
dec
fsubr
adc
xchg
mov
in
push
add
jo
fimuls
xchg
movsl
mov
ds
pusha
or
pusha
push
cli
adc
push
push
add
arpl
add
cmp
and
mov
jb,pn
dec
fdivrs
inc
adc
inc
stos
jbe
scas
mov
rorl
lahf
add
mov
scas
popf
movsl
sbbb
and
mov
sahf
jg
inc
push
adc
pop
ljmp
xchg
sbb
movsl
adc
add
push
mov
int
cmc
inc
xor
add
xchg
lock
pop
and
mov
adc
test
mov
lock
lock
xor
mov
add
add
mov
push
loopne
and
push
aam
stos
shlb
add
aad
and
call
shlb
out
adc
jb
movsb
mov
test
frstor
int3
mov
add
pushf
cs
or
or
add
push
and
incl
outsl
mov
inc
loope
ffreep
push
xor
inc
mov
add
shlb
sbb
lahf
fcmovnb
flds
leave
scas
mov
mov
push
cmpsb
xor
mov
movsl
pop
scas
xor
bound
sbb
aam
dec
sub
addb
sub
sbb
mov
loop
sub
mov
and
lock
cld
xor
dec
jmp
nop
inc
mov
movhlps
mov
ss
into
fcoms
sbb
lcall
add
push
inc
push
sbb
push
loopne
mov
test
dec
repnz
cli
fwait
inc
sbb
movsl
add
sti
mulb
mov
sahf
push
jle
add
xorb
pusha
pop
clc
rorb
arpl
pushf
sbb
jge
push
rorl
mov
xorb
rcrb
pop
std
sbb
loope
in
orl
adc
and
leave
fisttps
push
pop
movb
in
rclb
push
add
cmc
and
inc
lret
and
es
xchg
rcl
inc
nop
add
jg
lock
lds
push
sub
sub
push
xor
push
int3
addb
imul
cmp
ljmp
push
push
addl
mov
and
cld
outsb
inc
dec
fnstsw
adc
add
add
mov
jle
jge
cmovo
pop
pusha
call
cld
add
std
lahf
jbe
fsubs
jmp
fcomp
dec
nop
add
lcall
and
aas
add
mov
rol
add
sbb
lock
pusha
leave
push
inc
in
inc
jns
imul
shlb
insl
mov
push
sar
es
cmpb
mov
xor
adc
sub
push
adc
and
loopne
cld
add
ja
add
cs
nop
push
mov
adc
cli
xor
push
or
cld
inc
inc
int3
pushf
rorb
and
insl
xchg
add
cmp
add
fs
pop
test
hlt
stc
test
popf
and
xchg
movsl
add
xchg
in
inc
push
mov
inc
test
push
inc
rcl
dec
icebp
xor
mov
pushl
xor
fdivs
mov
stos
fisttps
inc
stos
repnz
inc
sti
xor
sub
sti
adc
shlb
in
sbb
ds
push
xchg
xor
sub
xorl
and
es
pop
or
popa
jo
insb
xor
ljmp
pop
insl
xor
inc
lcall
cmp
pop
mov
stos
popa
xor
jb
mov
xor
add
xchg
mov
push
adc
pop
mov
das
xor
push
hlt
es
jmp
mov
jno
xchg
and
insb
pop
and
movsl
inc
inc
mov
movsl
adc
ret
push
and
inc
pusha
mov
add
test
adc
lret
scas
fcoml
test
inc
repz
testb
shrl
mov
rolb
mov
test
insl
pop
enter
xchg
adc
into
push
or
fwait
mov
out
add
jne
adc
add
adc
mov
repnz
insb
inc
mov
pop
les
pop
enter
jmp
shrl
in
nop
cmp
mov
fwait
xchg
dec
rorl
jns
mov
or
add
inc
notb
in
sbb
call
shlb
fiaddl
es
sbbb
cmp
add
push
jl
inc
jp
dec
dec
subb
mov
adc
and
dec
sub
push
dec
add
ret
xchg
rcrb
add
push
in
dec
lods
jno
aad
add
xchg
add
in
mov
cmpl
push
cmp
pop
or
add
imul
cmp
insb
aam
or
adc
jo
sahf
test
or
repz
add
outsb
pop
in
in
push
jns
fists
xor
sahf
gs
mov
clc
inc
add
stos
add
sub
insb
add
mov
mov
aam
add
or
lds
call
loopne
rcr
xor
push
xor
dec
lea
jmp
mov
push
stc
add
sbb
into
mov
add
loopne
pop
cmc
adc
cmp
sub
ljmp
mov
cmp
aaa
ret
push
adc
mov
adc
add
int
mov
mov
dec
jle
add
and
or
mov
lods
and
dec
mov
mov
cmp
movsl
fisttpl
add
push
mov
pop
pop
mov
repnz
movsb
cmp
xchg
add
lea
aam
adc
sbb
out
add
and
add
mov
movsb
hlt
sar
jl
adc
es
out
subb
fiaddl
faddl
mov
add
cs
pop
addr16
mov
jb
push
jae
add
fidivs
add
pop
dec
les
xor
les
and
scas
repnz
dec
add
xor
add
and
add
xor
outsb
xchg
cs
pop
push
push
pushf
push
int3
setl
sub
test
jb
imulb
aaa
mov
mov
add
add
ret
test
jecxz
cmp
mov
inc
inc
fildll
movsb
test
adc
mov
push
add
psraw
or
xor
ljmp
add
and
mov
pop
mov
imulb
inc
or
adc
fmuls
inc
sbb
lods
add
ficompl
nop
shll
cmc
push
mulb
add
pop
enter
fldenv
cld
dec
rcrb
stos
into
cs
mov
jae
das
pop
add
repnz
or
neg
mov
mov
fstl
xchg
fadds
ljmp
inc
scas
jecxz
pop
add
aad
cs
push
mov
add
movsl
test
fistpll
xlat
and
out
imul
mov
inc
mov
adc
mov
test
shll
mov
add
push
or
add
or
or
movsb
jmp
data16
roll
or
jo
mov
push
adc
int
in
push
std
inc
ficoml
test
aam
adc
addb
jne
cmp
or
xor
xchg
sbb
loopne
outsl
lcall
cmp
add
arpl
push
mov
cmp
add
or
mov
in
cltd
inc
cmp
or
xchg
add
mov
ret
cmpsb
outsb
and
arpl
test
push
add
dec
add
test
and
jg
or
sub
mov
sbb
in
incb
fcomps
and
pop
es
and
xchg
xor
lea
ljmp
clc
inc
stos
pop
int
mov
cs
add
add
or
fsubs
sbb
sub
adc
outsb
mov
push
bound
jbe
jle,pn
add
or
jge
inc
je
js
and
into
inc
and
cmp
or
scas
addb
and
add
add
mov
add
push
shll
mov
popf
push
insl
mov
push
bound
mov
call
and
push
stos
or
popl
sahf
pusha
jl
add
jmp
pusha
pop
sarb
loopne
inc
adc
je
adcb
nop
mov
inc
inc
test
push
mov
test
fldenv
mov
mov
dec
adc
sbb
test
inc
push
push
inc
inc
fs
das
xor
jns
sbb
out
push
ja
xchg
inc
mov
and
mov
pop
cld
or
mov
or
test
push
test
add
fdivs
inc
adc
testb
sti
lcall
push
call
lcall
push
adc
mulb
rclb
xchg
ret
insl
ljmp
push
leave
push
and
movsl
bound
or
mov
dec
add
mov
and
rclb
mov
cmp
jg
orb
pop
out
sar
jecxz
pushf
nop
popa
inc
mov
cmp
xor
mov
pusha
adc
sar
outsl
movsb
add
loopne
loope
ret
xor
fs
and
fs
imul
add
push
mov
insl
mov
mov
repz
subb
ss
adc
sub
int3
push
pop
lock
ret
adc
push
inc
fadds
inc
adc
insl
jp
imul
sbb
fcomps
bound
cwtl
mov
insb
and
pop
mov
enter
mov
pusha
push
jmp
pop
scas
or
xor
sbb
jne
mov
dec
xor
cmc
inc
sbb
jmp
xor
add
std
dec
lods
nop
fs
pop
mov
es
insl
dec
push
sbbl
inc
push
pop
out
mov
loope
and
mov
pop
pusha
fsubl
adc
test
push
mov
pop
fs
jb
shlb
inc
dec
aaa
cwtl
or
ss
shll
test
add
lods
mov
sbb
sar
pop
shlb
sahf
dec
dec
adc
lods
outsb
sbb
push
sbb
in
inc
aad
data16
bound
xchg
testb
sub
call
dec
mov
mov
arpl
pushw
xchg
jne
cmpsl
jno
call
inc
dec
adc
rolb
movsl
icebp
add
add
bound
mov
push
adc
mov
push
hlt
push
bound
sub
mov
lods
push
mov
repz
mov
add
push
add
loopne
cmc
mov
loopne
pop
jle
adc
mov
pop
jbe
inc
adc
sub
inc
sub
pop
mov
and
mov
xchg
adcl
jmp
cmp
ss
jg
stos
sahf
xor
clc
jbe
or
imul
js
adc
push
nop
mov
push
mov
mov
mov
push
sti
add
mov
lcall
or
xorb
movsb
or
data16
dec
mov
mov
xchg
dec
add
call
cwtl
sti
sti
mov
loop
jp
pop
jp
sbb
inc
ljmp
cmpsb
push
sbb
lea
xor
mov
lock
popa
add
sbb
data16
push
push
lock
decl
dec
add
adc
pop
add
cli
xchg
mov
xor
sti
xchg
aam
lock
xchg
cmpsb
mov
add
mov
push
xchg
xor
mov
push
inc
sub
jmp
nop
lds
icebp
xor
jg
test
pushf
cmc
or
xchg
rclb
sub
adc
mov
xchg
scas
fidivrl
sbb
push
adc
jbe
rclb
push
sub
mov
cli
add
mov
lret
jne
add
adc
jle
std
lock
cmpsl
incl
add
test
ss
mov
and
cli
pop
lock
decb
rcll
or
and
add
cmc
aaa
inc
mov
aaa
and
sub
dec
xor
push
cmpsb
mov
loop
mov
inc
fidivrl
push
sub
sub
push
loope
and
nop
add
mov
xchg
insb
add
std
jg
icebp
subl
stos
adc
and
or
pop
add
inc
loope
fs
loopne
push
inc
jle
add
inc
cld
pop
push
loop
xchg
lcall
pop
enter
and
sbbb
sub
xor
sbb
sbb
jo
cwtl
ficompl
xor
movsb
stc
sbb
pinsrw
add
add
ljmp
push
and
movb
repz
pop
rclb
and
add
mov
outsl
push
mov
popf
popa
cmc
and
in
add
fs
fcoms
add
jle
xor
mov
mov
clc
sar
or
xorb
xor
pushf
sub
cs
lock
sbb
jo
xor
pusha
sti
mov
push
inc
shrl
push
mov
jg
mov
mov
push
movsb
in
add
rolb
xlat
push
mov
dec
in
mov
adc
inc
aam
fcmovnb
icebp
das
xchg
pushf
in
mov
mov
cli
fisubs
call
jb
cld
fs
fisttps
in
inc
loope
in
mov
and
xchg
sar
inc
push
pushf
xchg
push
add
mov
and
add
rclb
mov
mov
lods
adc
test
inc
insb
xchg
xor
dec
movb
addl
xchg
stos
and
xchg
or
int
ret
adc
push
dec
stos
nop
pop
xlat
add
sub
imul
insb
push
jne
mov
fdivrs
jbe
xor
xor
mov
push
sbb
sbb
cwtl
push
adc
hlt
pusha
inc
push
mov
test
stos
inc
sbb
hlt
incl
adc
xorl
jo
push
adc
leave
mov
out
mov
push
mov
push
add
add
pop
xchg
in
add
inc
loopne
mov
incl
push
inc
sbb
lock
inc
inc
or
mov
scas
xchg
or
nop
add
pop
jp
lret
sbb
jo
shl
add
adc
cli
insl
sub
lret
mov
roll
mov
pop
adc
mov
or
loope
add
stos
lcall
rcrb
lods
fsubrs
mov
dec
add
vpshufd
jo
and
nop
or
push
fstpt
call
sub
push
faddl
xor
test
clc
cmp
enter
inc
push
nop
cmp
adc
jmp
push
push
or
adc
rclb
cltd
es
out
mov
mov
push
jne
mov
jae
cmp
dec
add
test
push
cmp
lahf
mov
sbb
xchg
or
lods
cli
cwtl
pop
xchg
or
mov
jle
stos
lret
cmp
xchg
scas
mov
adc
sbb
push
aad
adc
ds
fcom
pop
add
dec
fbld
sahf
mov
push
nop
loope
or
iret
mov
mov
xor
pop
lds
or
cmp
pop
dec
ds
inc
ficompl
mov
xor
mov
gs
xchg
scas
shrb
xchg
lcall
shll
mov
push
or
inc
or
orb
sbb
or
or
xor
push
or
push
adc
dec
loopne
data16
inc
add
inc
fs
xor
or
push
call
or
jge
push
add
inc
sbb
and
xor
jo
push
mov
adc
pop
lcall
sbb
out
mov
pop
dec
mov
outsb
xchg
je
lret
ljmp
push
jle
std
inc
add
cwtl
mov
inc
mov
sub
sub
push
pop
test
dec
inc
push
sbb
test
or
dec
add
mov
inc
inc
mov
adc
addb
and
sti
sbbb
dec
cli
mov
pop
les
mov
push
scas
test
fildll
mov
cltd
sub
sbb
mov
inc
add
xchg
mov
or
outsb
mov
ljmp
add
fsubs
push
int
and
sahf
js
add
ljmp
scas
push
add
inc
mov
pop
daa
outsb
jl
mov
jg
inc
movsl
and
mov
and
or
cs
lcall
divb
add
or
fldl2t
lds
hlt
pop
and
sar
pop
or
out
xchg
lock
std
adc
adc
dec
dec
jp
inc
mov
add
mov
scas
cmpsb
out
imul
popa
cwtl
and
xor
push
stos
fucomi
repz
jge
sbbl
push
lock
addb
push
and
cs
les
cltd
clc
jnp
and
in
fldz
push
orb
xchg
sbb
pop
xchg
add
mov
sti
lcall
cmpl
popa
mov
and
loop
into
mov
push
add
hlt
ss
addl
sbb
inc
sbb
outsl
mov
or
sbb
flds
inc
pop
or
jnp
mov
push
adc
call
or
and
lods
mov
nop
mov
es
adc
mov
in
andl
imul
mov
lock
jmp
addb
fsts
inc
or
xchg
adcb
subl
adc
and
aas
loop
sub
ret
pop
inc
mov
jmp
mov
pop
push
inc
adc
sbb
sub
add
in
sub
push
movsb
xchg
inc
aaa
sub
mov
jmp
mov
rolb
inc
or
decl
loope
nop
push
inc
leave
fdivs
xchg
add
clc
dec
mov
shrl
cmpsl
mov
push
sbbl
cltd
test
mov
or
cmpps
cmp
jp
jo
ljmp
fs
inc
in
and
sbbl
cmp
inc
subb
orl
add
or
mov
mov
sub
cld
add
mov
inc
mov
outsl
dec
cmp
lea
pop
les
fdivrs
push
or
mov
jns
fldt
push
sub
or
inc
sarl
subl
adc
leave
test
push
pushf
mov
das
pop
loopne
mov
ret
mov
sub
add
arpl
adc
and
add
mov
adc
inc
insb
cmp
mov
and
sub
ds
dec
ljmp
insb
inc
out
loope
stos
clc
xchg
mov
inc
sub
push
daa
rclb
in
out
mov
rclb
add
out
push
add
dec
test
sub
jbe
cmpsb
rcrl
cld
xchg
add
mul
in
test
jp
sti
jg
and
cwtl
js
addr16
sub
imul
cmp
cmc
or
pushf
sbbb
add
imul
cld
js
adc
clc
inc
mov
jle
insl
test
movsl
adc
push
lods
incl
js
popa
sbb
movsb
mov
xor
addr16
sub
xchg
ja
sbb
pop
mov
or
push
shrb
jns
sub
mov
or
push
cld
mov
pop
loopne
enter
sbb
or
mov
cmp
or
pusha
and
pusha
sbb
in
or
xchg
loopne
or
addr16
sbb
test
bound
jbe
and
add
and
push
jbe
rolb
fwait
adc
mov
adc
inc
jnp
add
insl
adc
jle
hlt
pusha
jnp
js
sub
add
aas
cmpl
lock
movsl
test
push
add
divb
cwtl
outsb
test
push
xchg
roll
loopne
out
stos
xchg
icebp
cmp
test
loopne
xor
xchg
pusha
ficoml
pop
add
cmp
fnstcw
mov
dec
adc
adc
fldl
sahf
push
fcmovnb
mov
pop
lea
addb
sti
cmc
dec
fcomps
mov
cli
push
cli
inc
movsb
js
sbbb
jo
or
inc
ljmp
and
pusha
dec
xchg
lret
roll
leave
sti
inc
hlt
and
arpl
imul
pusha
pop
loopne
icebp
push
adc
out
xor
in
inc
push
and
push
test
dec
mov
in
dec
inc
sub
sbb
add
scas
push
adc
add
nop
push
sub
or
add
cmp
add
adc
inc
pop
orl
sahf
inc
mov
faddp
pop
cmp
scas
push
loope
stos
test
push
sarb
mov
pop
loopne
sbb
xchg
inc
cmp
add
sarb
stos
shl
mov
sbb
adc
loope
inc
fcmovnbe
insb
flds
sbb
into
dec
or
pop
lock
bound
add
incb
orb
add
test
adc
in
scas
add
int3
inc
cmp
sbb
shlb
rorb
push
inc
sub
scas
mov
lds
xchg
lods
incl
xchg
into
sbbb
test
sbb
test
pop
je
mov
mov
fs
jno
shlb
inc
sti
mov
inc
mov
dec
call
jmp
xchg
push
and
loop
xchg
pop
add
xor
push
icebp
and
inc
in
test
shlb
push
mov
out
mov
and
in
add
inc
subb
sub
or
xor
cmp
insb
mov
cmp
loopne
inc
or
jg
or
shrb
push
sub
out
and
add
fs
mov
or
sbb
xchg
repz
sub
fidivrs
loopne
add
push
mov
pop
mov
mov
lods
faddl
cmp
sub
or
sub
mov
fisttpll
gs
rolb
push
mov
es
inc
adc
mov
notb
pop
arpl
push
sub
and
fsub
xor
es
mov
adc
xchg
jo
pop
mov
and
ret
jl
push
es
mov
xchg
test
scas
rorl
push
mov
les
enter
in
mov
push
fs
arpl
popa
jecxz
cmc
push
out
adc
clc
scas
inc
insb
inc
inc
sub
xor
nop
add
xchg
sbb
add
dec
sti
movb
push
adc
push
jl
xchg
inc
rolb
or
and
shlb
loope
dec
imul
jo
mov
dec
or
stos
jbe
inc
xchg
sarl
push
add
add
push
gs
clc
adc
dec
dec
aad
popa
fcmovb
cld
xchg
pop
inc
dec
dec
sub
cmpsb
hlt
fildll
adc
and
rolb
pop
xchg
ret
add
testb
sub
je
aam
add
add
add
adc
mov
xchg
inc
xor
cwtl
pop
xchg
test
add
pop
xor
shrb
dec
add
mov
xor
scas
test
push
inc
push
les
jge
bound
je
and
mov
xchg
add
into
movsl
fmuls
and
add
mov
push
sbb
inc
mov
xor
movsb
add
lock
push
inc
outsl
cmp
cmpsb
fiadds
in
xor
mov
popa
cmpsl
add
mov
ficoms
aam
jb
mov
or
cmpsb
sbb
int3
cmp
fwait
ljmp
push
scas
mov
xchg
rolb
aam
pop
jo
jl,pn
xchg
add
stos
lahf
sbb
mov
cmc
dec
les
lods
push
cld
popa
xchg
push
sub
adc
sub
mov
adc
inc
int3
mov
or
popa
add
add
xchg
inc
push
into
lock
pop
aaa
test
ret
add
scas
ret
insl
xchg
cli
and
and
add
adc
mov
aad
xchg
pop
adc
call
pop
jo
movsb
and
jo
outsl
cmp
call
dec
insl
jecxz
push
roll
pop
sbb
push
scas
adc
roll
scas
jne
je
imul
pushl
adc
xor
scas
sbb
mov
push
jo
into
imulb
xor
xchg
add
add
es
ret
insl
imul
push
in
push
or
add
clc
fisttps
mov
add
push
cmp
or
xor
jg
mov
mov
arpl
mov
movsb
insb
aas
xchg
add
add
scas
nop
or
lds
or
xchg
pop
and
add
adc
scas
add
sbb
sub
clc
pop
pop
cmp
call
repnz
mov
add
pop
aad
mov
push
test
mov
xor
lcall
mov
push
mov
test
jge
incb
sbb
xor
int3
push
fldcw
push
or
ja
rolb
lcall
sub
es
adc
subb
orb
sahf
daa
outsb
xchg
sub
mov
xchg
inc
mov
dec
mov
movsl
push
mov
push
loopne
adc
inc
push
inc
das
cmpsb
mov
inc
push
in
push
orb
adc
dec
inc
mov
call
and
xchg
mov
and
popa
add
adc
xlat
fsubrs
add
es
inc
dec
cs
aas
sbb
dec
js
lock
ljmp
test
adc
and
sub
mov
inc
ljmp
fadds
inc
jmp
and
add
clc
sbb
add
sub
fdivrp
inc
repz
add
call
mov
arpl
push
inc
adc
adc
mov
xchg
scas
pop
and
or
and
xchg
rcrl
cwtl
stos
cmp
popa
cs
adc
xor
ss
test
pusha
jg
frstor
mov
and
inc
lea
mov
clc
lods
add
mov
inc
pusha
lcall
inc
rorb
push
outsb
andl
pusha
out
inc
jp
mov
xor
testb
loop
and
in
fstpt
out
inc
dec
dec
adc
sbb
push
xchg
dec
popf
lock
mov
push
lock
mov
add
push
addb
adc
cs
sub
mov
cmp
jle
mov
movsl
adc
pusha
or
ficoml
or
mov
out
fisubs
and
lock
add
mov
mov
push
and
jbe
xchg
arpl
movl
xor
push
push
lods
lret
aas
adc
in
add
xchg
push
or
push
fldenv
and
adc
or
add
add
shld
cmp
lock
fdivs
add
pusha
mov
xor
jle
add
clc
mov
push
push
rorb
sbb
mov
mov
clc
or
add
add
push
jecxz
pop
push
pop
add
add
in
cld
xchg
ret
xor
add
popa
out
add
xchg
aam
push
sbb
clc
jo
push
xor
inc
push
je
bound
push
mov
push
ds
ds
test
and
addb
mov
xchg
jp
out
nop
lcall
adc
test
outsb
inc
fcmovnb
cmp
adc
scas
std
or
stos
lds
outsl
add
push
sbb
sub
dec
jg
jo
orb
adc
mov
push
xor
test
outsb
addb
push
mov
bound
or
cmpsl
orl
add
dec
mov
push
ljmp
xchg
cs
xor
add
pop
sbbb
call
xchg
and
jmp
adc
shlb
push
push
push
sbbb
add
mov
xchg
imul
add
or
insb
sti
adc
out
popa
pop
or
cld
or
je
cmp
push
sub
aaa
cmpsl
and
mov
inc
push
aaa
pop
inc
sbb
add
insl
clc
cs
mov
sub
xchg
jp
inc
inc
add
xchg
or
sarl
mov
mov
or
and
shlb
inc
fadds
sub
call
mov
flds
add
inc
es
inc
push
push
adc
adc
xor
adc
rcrb
add
js
jmp
mov
and
decl
xor
jecxz
or
out
xchg
rclb
rorb
push
mov
nop
mov
and
pop
push
ja
add
adc
jne
add
jbe
add
mov
loope
inc
xchg
xchg
in
rolb
lahf
popa
cmp
outsb
mov
jle
jmp
enter
data16
pop
xor
adcb
sub
mov
xchg
push
shlb
in
add
inc
mov
add
ret
push
bound
stos
push
inc
xchg
sbb
dec
and
inc
daa
lret
insb
sub
gs
push
add
inc
inc
adc
das
sarb
out
rolb
rolb
test
clc
mov
js
mov
movsl
es
shll
sub
dec
nop
mov
mov
pop
dec
sarl
loop
in
or
or
lds
loope
sbb
sub
add
shl
ljmp
mov
roll
inc
sbb
test
sti
rclb
fmuls
adc
imul
lret
mov
orb
sbb
mov
sub
push
and
mov
sbb
and
pusha
bound
movsb
decl
cmp
inc
sbbb
stos
test
mov
fcoml
mov
pushf
inc
add
sbbb
nop
rcr
lods
in
add
popa
push
sbb
inc
pusha
or
sbbb
add
push
loope
mov
add
inc
xor
add
sbb
push
popf
es
lods
add
adc
roll
dec
test
push
and
push
insl
mov
popf
in
nop
and
add
push
inc
out
das
xor
es
sub
mov
or
inc
enter
incl
mov
fidivrl
mov
mov
cltd
mov
fbld
mov
addb
pusha
push
dec
popa
sarl
adc
adc
test
shlb
ret
sub
push
rclb
inc
push
loopne
and
fdiv
daa
sub
fistpl
mov
in
pusha
and
lds
out
push
inc
call
sub
sbb
sbb
sarb
push
push
call
mov
mov
mov
out
add
std
incb
adc
or
push
mov
loop
push
dec
sub
add
dec
sub
test
test
movsb
inc
xor
pop
inc
mov
pop
movsb
lcall
pop
popa
dec
mov
xchg
popa
outsl
je
adc
inc
loopne
add
clc
mov
push
add
inc
aas
jg
xor
mov
mov
pop
jo
cmpsl
mov
and
fnstcw
jbe
mov
add
bound
mov
lods
mov
dec
or
pop
sub
popa
push
cmpsb
dec
ficoml
jo
push
mov
shrb
mov
adc
movsb
scas
cli
inc
add
xchg
mov
ja
jne
mov
push
xchg
rcrl
insb
xlat
punpcklbw
mov
pop
pusha
scas
xchg
add
inc
in
add
pop
inc
jmp
ja
push
mov
arpl
loopne
mov
js
in
insb
loopne
mov
add
mov
stc
inc
pop
add
ret
inc
pusha
xor
xchg
ficomps
cmpsb
push
call
fsubrp
dec
push
dec
jge
adcl
pop
dec
add
jb
imul
and
mov
gs
inc
push
icebp
inc
mov
loopne
cli
int3
jne
inc
jl
add
addb
outsb
fnstsw
stos
insb
bound
xor
mov
pusha
and
push
test
push
aam
adc
or
fiaddl
data16
repnz
das
push
add
ror
das
addl
rolb
xchg
popa
xchg
mov
add
in
inc
pop
jle
push
xchg
push
jl
push
clc
add
daa
xor
xor
bound
and
fmull
mov
jp
push
sar
loopne
vshufpd
fsubp
fidivrl
and
and
ljmp
or
pusha
cmp
leave
push
sbb
fchs
adc
and
pop
and
mov
mov
cmp
sub
pusha
pop
scas
into
orb
mov
add
push
or
sbb
pop
inc
les
loopne
inc
sbb
dec
add
and
scas
adc
mov
inc
pop
nop
je
inc
loop
sub
in
and
mov
popf
lock
add
xchg
adc
rclb
sbb
and
insl
mov
cwtl
mov
mov
pop
or
push
rcrb
repnz
shrb
movsl
jg
mov
jmp
imul
or
and
or
add
push
mov
neg
fwait
aas
push
cmpsb
sbb
push
mov
addl
push
adc
fmuls
movsl
adc
and
ljmp
add
int3
mov
pop
mov
mov
adc
adc
stos
repnz
mov
push
gs
scas
push
or
into
and
mov
cld
sub
bound
or
add
pop
and
xchg
out
add
jecxz
push
add
push
scas
sbb
enter
insb
lock
pop
push
and
mov
inc
adc
subb
negl
xchg
cld
bound
or
pusha
xchg
inc
jo
sub
push
and
popa
std
pop
call
outsb
nop
xor
jmp
pusha
or
fimull
stos
and
xor
aaa
add
data16
and
popa
or
fistps
jbe
lock
insl
pusha
add
mov
push
es
add
addb
cmc
add
adc
adc
adc
sbb
adc
subb
ss
orl
cmc
push
cmpsl
lock
sahf
add
cmc
movsl
xor
cmc
inc
adc
movsl
inc
add
add
mov
adc
test
xchg
dec
inc
add
jb
cmp
inc
and
in
push
std
and
imul
mov
cld
mov
add
inc
jo
inc
nop
adc
and
dec
arpl
xor
es
mov
sbb
inc
adc
xlat
push
loop
rorb
pop
inc
popf
mov
jle
iret
pop
xor
sarb
sub
cmp
push
adc
push
jge
jmp
inc
mov
and
mov
dec
mov
popa
push
sbb
clc
test
test
xchg
and
nop
push
arpl
out
mov
add
inc
adc
or
mov
jge
xchg
add
mov
push
mov
icebp
jg
lret
add
push
nop
mov
loopne
pop
xchg
or
lret
shll
jp
add
into
dec
test
shrb
loopne
out
roll
call
inc
jbe
mov
push
or
adc
mov
push
push
aaa
test
call
lcall
or
and
add
xchg
or
xor
or
or
and
inc
jecxz
addb
inc
mov
push
mov
fnstenv
adc
cmpsl
inc
cld
ja
cli
jge
xor
mov
jns
insb
insl
dec
pop
dec
faddl
adc
inc
roll
inc
xchg
mov
mov
mov
in
adc
mov
xor
call
adc
pushf
push
adc
sub
lret
xchg
adc
push
sbb
ja
inc
out
add
or
adc
insb
inc
push
or
test
and
nop
or
lock
mov
rorb
xor
jo
lods
fadds
push
xchg
les
out
push
mov
xor
loopne
in
pop
fnstcw
xchg
push
mov
pushf
loopne
adc
mov
loope
je
shll
mov
cmp
cmpsl
and
adc
or
hlt
add
push
incl
ja
out
lock
loop
pop
loop
shrl
push
inc
sbb
lcall
cs
lods
test
adc
sbb
mov
inc
test
jne
mov
rclb
ljmp
lea
adc
nop
jl
jg
clc
inc
pop
shlb
add
xor
xor
mov
ljmp
add
adc
mov
mov
pop
inc
dec
pop
jo
push
ljmp
mov
xchg
cmp
adc
movsl
pusha
incl
test
sbbl
dec
and
outsl
mov
clc
and
and
push
lods
add
push
std
push
fdivrs
add
pop
nop
incl
jae
sub
sbb
dec
jp
adc
out
xor
mov
lds
int3
push
cltd
jp
dec
adc
sub
fwait
jo
mov
fmuls
pusha
adc
pop
dec
xor
decl
incl
adc
cs
scas
push
in
mov
cli
push
mov
shrb
inc
ljmp
outsb
push
sub
fists
stos
and
mov
jle
nop
or
scas
and
dec
pop
js
sub
andb
mov
jb
dec
mov
xor
dec
loopne
pop
inc
in
adc
inc
adc
inc
mov
orl
jbe
sbb
adc
ss
ss
push
inc
sbb
or
push
lret
and
dec
sti
xor
inc
inc
aas
into
cwtl
popa
sub
es
push
pop
cmp
out
and
insb
jnp
shlb
inc
sub
inc
cli
jbe
xchg
popa
or
sub
lods
sub
add
mov
cmp
cmpsb
add
les
xchg
xchg
daa
nop
cmpb
mov
xchg
add
mov
add
mov
dec
pop
add
test
mov
mov
lods
mov
add
mov
mov
mov
xchg
rorl
mov
or
sahf
in
jle
pushf
mov
ret
and
sub
and
add
fwait
mov
sub
fadd
adc
rclb
addb
or
pop
xor
cmp
inc
dec
push
cmpl
xorl
xchg
sub
jno
jne
sbb
ja
push
adc
adc
out
out
add
popl
fwait
mov
outsl
mov
inc
mov
sbb
xchg
add
lea
xorb
push
sub
dec
stos
sub
xchg
subb
decb
movsb
sti
fcomps
fdivrs
es
add
push
jmp
pop
test
rclb
cli
mov
push
pop
push
pop
inc
popa
rcrb
movsb
nop
sub
xchg
in
mov
add
repz
and
leave
clc
mov
inc
lahf
insl
lds
lds
cmp
adc
and
and
call
inc
cmc
push
notl
push
inc
push
test
inc
push
lds
push
loopne
and
sbb
pop
cmp
push
adc
clc
mov
add
test
add
mov
cwtl
movsb
jb
loopne
cli
das
mov
mov
adc
inc
lods
jge
pop
rorb
movsl
or
rcrb
dec
mov
cld
push
mov
lcall
sub
adc
add
mov
and
mov
or
std
fcoml
push
fiaddl
loop
scas
xor
enter
ret
mov
inc
call
mov
adc
and
lock
push
cmp
adc
cld
sarb
ret
addb
push
add
pushl
cli
adcl
cmpb
shlb
pop
mov
andb
push
and
rorb
clc
decl
jl
add
xchg
addb
ss
in
shlb
ljmp
subb
adc
xchg
xorb
out
lods
cmp
pop
adc
adc
add
mov
incl
and
es
add
xchg
adc
sbb
popl
jl
inc
sbb
and
decl
loop
mov
daa
push
push
mov
jle
clc
call
inc
add
cmp
mov
test
mov
movb
xchg
cmc
in
and
adc
adc
sbb
loop
sbb
xor
orl
sub
pop
lcall
dec
data16
into
push
shlb
push
pop
test
es
mov
cli
sti
std
and
sbb
add
test
and
ss
pop
outsb
inc
mov
and
cld
mov
dec
rclb
push
sub
xchg
jle
jecxz
add
mov
loopne
rcr
mov
js
shll
ret
inc
test
push
inc
or
leave
mov
pop
adc
mov
bound
fs
jge
cmp
loopne
sub
adc
xchg
insb
mov
add
mov
mov
add
xor
mov
inc
add
clc
cwtl
test
icebp
add
icebp
sub
lcall
adc
pusha
dec
hlt
add
lea
movsb
and
je
push
adc
inc
jg
scas
cmp
ss
jo
cmpl
xorb
jmp
inc
adcb
mov
cmp
sub
and
jecxz
inc
bound
cwtl
jp
mov
xchg
outsl
sub
cwtl
lcall
in
scas
jle
test
sbbb
sbbb
lds
and
loope
add
or
push
out
movsb
in
xor
rorl
addb
faddl
je
inc
add
or
pop
and
outsb
leave
pop
or
xchg
data16
inc
inc
inc
push
cli
push
mov
inc
icebp
add
dec
subb
addl
xchg
adc
pusha
jp
orb
add
add
jo
arpl
add
ds
std
jbe
mov
addb
popa
mov
mov
add
lds
inc
mov
ret
or
ljmp
cli
xchg
xchg
test
xor
push
mov
mov
inc
mov
add
aaa
mov
dec
mov
call
sahf
scas
ds
inc
std
add
push
test
inc
adc
add
xor
sub
adcb
dec
icebp
cmp
inc
pop
sbb
dec
data16
test
inc
push
shlb
mov
pop
or
sbbl
fcomi
jp
xorl
cmpl
xchg
push
sahf
cltd
sub
mov
sbbl
xchg
push
and
cld
idivb
push
cli
mov
mov
jo
loop
adc
add
push
fisubrl
popa
dec
aam
pop
repz
pop
inc
dec
push
xor
daa
inc
push
cmp
sbb
orl
std
stos
sahf
sub
add
and
mov
ljmp
pop
cmp
xchg
roll
mov
add
inc
enter
and
sbb
and
test
adc
pop
adc
mov
inc
addr16
inc
xchg
sub
and
and
icebp
cs
push
sti
out
adc
xor
cmc
addr16
scas
and
adc
push
adc
dec
les
cs
jmp
es
mov
push
inc
dec
inc
int3
shlb
pop
push
out
and
loopne
mov
push
decl
lock
adc
lock
adc
adc
aaa
movsb
in
aaa
fsubl
jmp
shll
les
daa
cwtl
fsubrs
or
aaa
jp
aaa
push
xor
xor
pop
mov
cld
adc
bound
aam
rcll
in
pushl
add
push
adc
adc
push
sahf
aaa
push
cmp
pop
add
adc
hlt
mov
sub
out
in
pop
rclb
gs
adc
lds
cmp
push
repz
in
in
dec
enter
dec
add
adc
and
nop
scas
cmp
lock
std
sub
inc
mov
orb
or
xchg
shl
dec
outsb
and
and
xor
cli
in
inc
add
out
int3
push
pop
push
mov
push
popa
rolb
shlb
pop
movsb
jbe
mov
aad
clc
adc
dec
rolb
loop
rolb
call
sub
and
push
push
sahf
cmc
outsb
dec
lahf
cmc
and
decl
dec
rclb
leave
mov
inc
es
xchg
adcl
pop
test
loopne
cmp
movsb
adc
add
cli
cmpsl
mov
mov
adc
movsb
popa
popa
xchg
popf
call
sub
pop
rolb
es
pop
cli
inc
dec
mov
dec
ret
addl
xchg
inc
out
mov
mov
jo
and
rclb
sub
mov
jmp
pop
push
rcrb
cmp
adc
sbb
mov
dec
loopne
inc
inc
pop
inc
outsb
imul
mov
scas
or
cltd
dec
inc
insb
sub
and
mov
pop
pop
add
mov
sbb
lcall
lds
push
xchg
pop
mov
push
cmp
decl
loopne
mov
sub
pop
dec
jbe
sub
clc
roll
jg
jo
push
dec
rorb
jb
add
stos
mov
jo
jb
cmp
and
les
movsl
dec
popf
ss
call
decb
ss
xor
and
js
lret
loopne
and
call
add
add
dec
sub
push
arpl
mov
cmp
dec
jae
or
pop
inc
or
xchg
rolb
fnstenv
inc
or
mov
sbb
pop
sar
incl
mov
testb
jb
mulb
shlb
add
or
ljmp
imul
popa
xchg
mov
call
mov
fnsave
aas
push
fcoml
xor
pop
pop
add
add
loop
cmpsb
rolb
mov
pop
inc
call
push
mov
inc
jne
mov
inc
mov
loopne
frstor
mov
xchg
pop
push
test
add
inc
fisubs
cmp
or
and
rclb
hlt
add
ds
outsb
je
xchg
mov
pop
push
jnp
xor
jne
add
inc
xchg
sub
loopne
inc
adc
xchg
loopne
mov
loop
pop
and
filds
add
sub
aad
xor
int
fwait
in
jmp
xchg
nop
mov
inc
xor
imul
incl
stos
adc
adc
sar
pop
lds
push
inc
xchg
jae
push
inc
iret
dec
sub
xchg
jg
add
rolb
push
or
movl
mov
cmp
mov
cmpsl
pop
loopne
add
movsl
into
cwtl
pop
cmp
bound
shrl
and
xor
or
scas
jle
xor
lcall
mov
xor
add
or
mov
insb
cltd
jo
mov
insb
ja
fsubs
and
mov
je
stos
lock
test
jmp
add
dec
or
ja
pop
mov
in
test
fdivr
stos
mov
fdivl
push
add
xor
or
outsl
inc
out
add
mov
add
jp
loopne
mov
test
pop
aam
movsb
test
add
add
repnz
aaa
lds
add
add
movsl
mov
adc
leave
cmovno
pop
sahf
inc
enter
cmp
cmc
mov
and
add
xor
es
push
out
nop
rcrb
pop
or
mov
push
inc
movsb
inc
pop
fdivs
sub
xchg
sbb
movsl
adc
int3
hlt
dec
cmpl
es
and
clc
movsb
jl
or
hlt
dec
add
adc
scas
cld
std
adc
xlat
or
cmp
xor
add
inc
xor
ret
cmc
sbb
mov
mov
mulb
subl
pop
fisubs
movsl
ss
push
loopne
roll
adc
pop
pusha
stos
push
push
fisttps
leave
ret
pop
adc
xor
or
xor
mov
inc
mov
shlb
jb
xchg
and
repz
in
xor
andb
adc
scas
ljmp
cltd
add
and
and
xor
push
shll
jbe
inc
inc
data16
mov
scas
scas
push
mov
xchg
loope
push
mov
or
stos
in
inc
push
scas
orb
or
xchg
jge
adc
xor
in
adc
pusha
or
test
or
ficoml
mov
push
shlb
out
mov
ljmp
es
xorb
mov
or
ss
inc
cwtl
jp
mov
mov
jg
push
aam
or
rorl
mov
inc
push
mov
in
ret
cmpsb
les
lods
add
test
mov
ljmp
addb
add
int3
sti
icebp
jg
mov
mov
xchg
or
pop
in
mov
sub
jl
sahf
xchg
scas
push
andb
mov
fisubrs
sti
sbb
pop
mov
es
outsl
push
add
cli
lds
sub
lock
fadds
sub
movsl
cmp
stos
rolb
push
adc
mov
cmp
xchg
mov
add
or
orb
insl
push
inc
xlat
mov
enter
stos
mov
add
aam
addb
outsl
cwtl
inc
call
loope
inc
mov
sbb
sbb
adcl
and
mov
mov
sbb
xchg
inc
aam
cmc
inc
cltd
inc
pop
mov
or
scas
mov
shl
xlat
shll
rol
fsubrs
xorb
push
lea
or
xchg
add
outsb
lcall
inc
out
lcall
pusha
pop
inc
pop
ret
dec
pop
push
inc
les
mov
rolb
std
mov
outsb
and
and
cli
adc
es
sub
inc
sub
mov
xchg
adc
pop
movsl
inc
inc
repz
and
add
lock
sub
loope
incb
and
mov
ret
test
imul
push
sub
add
lock
das
xchg
popa
cmpsb
fs
adc
cwtl
ret
shrl
mov
js
aas
lahf
js
dec
inc
dec
ljmp
dec
test
adc
shrb
sbb
add
lock
and
fistpl
inc
push
arpl
push
popa
cmp
mov
jmp
cli
call
loopne
dec
inc
punpcklbw
movsb
push
test
adc
out
cli
mov
add
insb
fdivs
loopne
mov
cmp
adc
mov
adc
imul
sub
add
inc
mov
call
add
push
xor
cmpsb
inc
and
addb
and
inc
test
sarb
cld
sbb
les
imul
pop
xor
and
xchg
mov
insl
xchg
and
out
es
cmc
stos
fistl
sub
add
stos
lcall
push
std
outsl
mov
xor
add
dec
adc
sub
xor
inc
pop
xchg
mov
inc
xor
xor
pop
ss
xor
mov
push
dec
addb
and
jecxz
adc
xor
pusha
daa
insb
andl
lds
adc
sub
loop
inc
jns
fisubl
lds
or
and
es
add
push
gs
sub
jge
add
push
push
imul
adc
adc
cmp
lcall
call
adc
adc
jmp
jbe
add
mov
push
icebp
add
adc
in
sub
mov
mov
push
jo
sbb
xchg
push
lock
ljmp
sbb
dec
adc
push
pusha
mov
repnz
insl
mov
rolb
inc
fdivr
movsl
shlb
cli
mov
sarb
jo
add
jns
jb
inc
jo
xlat
sub
or
or
pop
cmp
xor
lds
push
cli
push
push
outsl
bound
add
inc
push
dec
lods
push
rorb
repnz
xchg
mov
out
shrb
xchg
adc
cld
push
jnp
in
divb
or
std
cld
xor
outsl
pop
imulb
adc
popa
pop
ret
mov
ljmp
push
or
add
push
inc
dec
imul
push
add
add
sahf
test
pop
rcll
adcl
hlt
lods
rorl
adc
movb
mov
add
shlb
pop
add
roll
mov
add
pusha
or
jnp
adc
add
rclb
ss
hlt
cltd
add
paddusw
xchg
add
ret
fimuls
insl
jl
sbb
jno
push
adc
or
int3
xor
mov
cmp
xchg
jno
test
scas
dec
push
shl
inc
fnstcw
push
mov
pop
scas
loopne
les
push
dec
bound
repnz
inc
pop
add
lret
adcb
scas
xchg
or
push
nop
jns
rorb
cmp
nop
or
inc
es
sarb
adc
in
das
adc
add
nop
cmp
loopne
mov
ja
call
and
add
push
mov
arpl
mov
rcll
call
xchg
push
xchg
fdivrs
nop
push
pop
insl
lret
inc
pop
frstor
xchg
push
stos
jbe
fdivs
outsl
mov
in
dec
add
add
pop
scas
mov
mov
mov
sti
ss
aaa
cld
or
lds
xor
lock
and
xchg
sub
push
push
and
sahf
pop
loopne
jo
sub
shr
xchg
insl
jl
or
data16
mov
xchg
arpl
cltd
daa
mov
jbe
add
pusha
loopne
pop
fdivrl
inc
mov
fidivrs
xor
xchg
add
mov
bound
pop
rcr
enter
add
das
addb
sbb
adc
jle
mov
push
adc
lods
pop
mov
imul
out
adc
sub
add
je
dec
add
cmp
and
mov
test
outsb
add
lret
mov
cmp
pusha
scas
inc
mov
shld
rcrb
jo
jne,pn
ret
xchg
adc
imul
pop
adc
inc
mov
cmc
push
mov
out
sbb
loope
add
jo
inc
lcall
orb
pop
jle
loopne
dec
push
sbb
adc
inc
push
or
pop
and
movsl
lods
and
cli
mov
or
mov
test
aaa
inc
pop
and
cmp
nop
loope
sub
fs
addl
adc
cwtl
sub
xchg
fsubrl
sub
sbb
mov
call
sti
andb
jno
mov
dec
cmp
xor
repz
mov
add
scas
xorb
rorb
mov
popa
jmp
shlb
pop
mov
or
mov
xchg
nop
add
mov
test
ljmp
mov
rorl
sbb
inc
sahf
fsts
adc
and
vmovdqu
push
rolb
out
ret
xchg
mov
sub
nop
pop
in
cmp
aas
push
pop
fdivr
lds
jno
faddl
mov
inc
clc
adc
mov
dec
jb
ja
lds
mov
and
add
inc
movsb
mov
nop
cli
mov
ret
add
daa
idivb
xchg
pusha
or
xchg
and
test
xchg
adcb
mov
mov
outsb
pop
inc
and
loopne
pop
mov
pop
adc
andb
push
inc
sti
push
in
sbb
mov
fcomp
test
mov
out
mov
lods
ret
sbb
pop
and
movsl
fimuls
push
xorb
inc
lret
sbb
ja
adc
call
inc
adc
sbb
repnz
or
decl
xchg
movsb
add
stos
repnz
pop
fstpt
and
cmc
mov
add
scas
lods
add
cmp
pop
mov
pop
pusha
in
adc
sbb
cmpsb
push
cld
sub
pop
out
push
sbb
sbb
mov
dec
adc
cmpb
xchg
cmc
incl
mov
repnz
daa
sub
out
xor
or
or
or
in
dec
pusha
cli
sbb
jmp
xchg
movsb
sbb
call
inc
les
fisttpl
jecxz
bound
rolb
adc
insb
inc
inc
loope
adc
adc
push
dec
filds
mov
mov
test
lods
mov
jp
aam
ljmp
test
or
xchg
call
ljmp
pop
jo
shrb
mov
mov
mov
and
inc
lret
push
popf
lods
sbb
fcmovnu
cmpsl
and
mov
in
mov
lods
xchg
fidivl
and
mov
fcmovb
add
fadds
xor
fistl
xchg
mov
dec
adcb
or
xor
xchg
outsb
popf
scas
ja
stos
outsl
bound
insl
xchg
dec
and
adc
in
incl
icebp
popf
lods
adc
test
mov
shr
pusha
addl
sub
lcall
scas
in
sti
fnstenv
inc
popa
add
mov
inc
push
or
pop
add
push
rolb
or
lret
sub
push
push
mov
call
movsl
loopne
clc
sbb
fmull
mov
xchg
and
imul
lcall
cld
jno
loope
inc
aaa
mov
call
cmpb
push
or
loopne
xchg
push
ljmp
ret
fldlg2
je
dec
push
pop
jmp
imul
scas
xchg
mov
shlb
stos
jae
push
nop
pop
mov
jle
scas
fcomps
sbb
pushf
inc
add
pop
data16
out
jno
mov
clc
icebp
inc
in
mov
fiaddl
mov
test
cmp
jmp
pop
fisttps
push
fistps
push
fsts
add
mov
movsb
add
mov
add
cld
stos
adc
outsb
js
das
pop
or
mov
lods
daa
scas
pop
mov
int
dec
scas
stos
jp
scas
dec
inc
mov
mov
ss
inc
lret
es
or
into
pop
aas
dec
jl
pop
mov
mov
dec
mov
push
sub
adc
push
inc
push
mov
test
inc
jns
xchg
call
cmp
les
fistpl
xchg
addb
xchg
xchg
fdivs
add
mov
sbb
cld
incb
call
adcl
jbe
cli
int
mov
add
pusha
scas
add
out
dec
and
or
or
lret
adc
movsl
in
add
out
insl
out
adc
pop
insl
sub
push
pop
fiaddl
loopne
pop
push
in
inc
je
cmp
andb
mov
push
dec
add
ret
roll
lods
insl
mov
ljmpw
clc
loop
sbb
sub
bound
es
xchg
mov
dec
mov
addl
add
int
push
shlb
add
shlb
ss
shrb
inc
push
scas
lods
push
inc
and
mov
rolb
mov
pop
or
pop
inc
pusha
enter
inc
push
repnz
add
rcll
xorl
pop
xorl
repnz
shl
push
incb
adc
pop
xchg
inc
mov
push
loope
in
mov
inc
push
add
inc
enter
push
add
add
lds
xor
dec
and
xchg
inc
xchg
mov
pop
nop
push
clc
push
mov
dec
scas
outsl
and
inc
aam
aaa
jmp
outsb
inc
cmpsl
xor
inc
add
pop
push
or
jp
ss
push
add
scas
xchg
dec
push
xchg
pop
mov
je
adc
dec
push
inc
lret
xchg
icebp
jg
inc
fsubs
jecxz
daa
lods
or
dec
popf
sub
xor
inc
outsl
mov
test
add
cmc
xchg
or
add
inc
sub
loope
add
mov
fdivr
mov
adc
loope
rolb
fwait
add
ljmp
outsb
mov
ret
push
fiaddl
xchg
dec
daa
adc
xor
clc
inc
sub
test
std
es
mov
push
rcrl
shrb
mov
or
jle
inc
cs
lods
loopne,pn
mov
cmp
insb
inc
mov
sbb
mov
les
out
cmp
clc
in
adc
jp
push
pop
str
add
sbb
sbb
cs
add
mov
inc
mov
push
add
and
out
les
and
mov
pop
add
push
add
or
es
imul
and
loop
inc
and
mov
adc
lcall
pop
hlt
fdiv
stc
stos
pop
sbb
push
add
sbb
add
xchg
shl
and
adc
fwait
push
pop
je
jg
mov
data16
pop
xchg
fwait
add
mov
cmp
and
mov
in
push
mov
movl
loopne
insl
pop
pop
es
xor
jo
add
cmp
xor
xchg
cmp
xchg
add
stos
and
mov
mov
imul
pop
adc
lods
inc
fldcw
pusha
popf
movsl
adc
inc
add
push
pusha
pusha
test
cmpsl
or
pusha
pop
jne
mov
out
outsb
inc
shlb
add
nop
stos
lods
lods
sub
mov
subb
push
sbb
or
and
ffreep
xchg
jmp
sub
rorb
aad
adc
outsl
push
and
insb
inc
pop
adc
adc
adc
arpl
hlt
data16
jmp
adcl
sub
and
test
jmp
pusha
dec
add
jne
jnp
inc
js
and
mov
pop
pusha
adc
mov
cmp
stos
sub
and
add
stc
or
add
add
jecxz
add
jmp
and
jns
fucomip
lds
inc
shrb
dec
sub
out
mov
inc
adc
sbb
lcall
sub
sbb
or
nop
subb
xchg
mov
sub
dec
nop
xchg
scas
sahf
push
movsl
addb
xchg
ds
or
loopne
or
rcr
jp
push
es
aaa
mov
jmp
std
add
xchg
enter
push
push
es
push
test
mov
orl
ljmp
mov
and
lods
fisttpll
js
mov
insb
es
or
scas
mov
add
int3
mov
sbb
push
mov
inc
dec
mov
inc
push
cld
inc
push
iret
or
dec
lcall
add
jne
inc
sub
fisttpl
outsb
repnz
test
add
jle
push
xchg
mov
adc
inc
mov
and
scas
and
lds
loop
mov
int3
loope
test
lds
orl
xchg
loope
paddq
or
add
dec
push
dec
fdivrs
mov
pushf
xchg
pusha
pushf
sub
fisubl
cld
jo
and
cmp
sub
jo
xor
jl
mov
enter
mov
push
pop
aaa
int
rolb
inc
aam
out
sbb
loope
jb
std
or
repnz
pop
orb
clc
pop
lock
mov
fistpl
shrd
mov
jmp
sbbb
mov
pop
loope
mov
clc
lods
movsl
shrb
add
sub
xor
ds
push
sub
jp
push
sbb
outsl
jg
cld
in
pop
insl
add
fucomi
push
and
adc
inc
fistl
shl
or
xlat
mov
call
mov
jmp
add
add
adc
dec
test
jle
and
fbstp
movsb
cmp
push
push
mov
jne
and
pop
clc
or
or
add
movsl
xor
test
xor
cld
movsl
adc
inc
pop
xchg
cmpsb
test
call
js
cli
mov
push
popl
sbb
add
les
subb
lds
sahf
dec
mov
lds
movsb
call
mov
popa
or
bound
int3
je
bound
sti
or
add
adc
incl
in
fwait
mov
inc
cwtl
ss
and
adc
jne
dec
fisubrs
xor
xchg
es
add
jle
or
jmp
mov
dec
rcl
out
incb
in
mov
bound
nop
es
or
or
inc
and
pusha
lret
test
lock
jp
xor
jno
xchg
pop
sbb
lahf
addl
dec
cli
jbe
andb
jmp
inc
or
popa
pop
lcall
xorb
xlat
xchg
push
jb
out
inc
je
and
dec
or
test
jp
sub
andb
sub
nop
out
sahf
xchg
dec
xor
test
adc
stos
add
stos
xor
mulb
xor
sub
andl
jmp
mov
icebp
xchg
cs
in
inc
inc
popf
nop
movsl
cmp
sbb
lods
sub
cs
sub
rolb
and
lods
push
cmpsb
nop
or
cld
and
sub
adc
pop
stos
es
bound
dec
dec
push
sbb
adc
push
loope
pop
inc
mov
mov
lods
cmpsb
push
add
add
pusha
rcrl
xor
loopne
ljmp
pushl
sbb
inc
cmp
jge
data16
pusha
lods
xchg
rolb
adc
shll
push
jb
inc
pop
jecxz
add
or
mov
icebp
cmc
mov
push
ss
cld
aam
pop
dec
add
xor
push
aas
pop
fstps
cmp
push
push
and
and
inc
dec
mov
imul
movb
add
subl
addl
enter
jle
pop
incb
enter
movsl
ljmp
add
fwait
rcrb
push
sarb
mov
cmp
lock
cmp
pop
sub
sub
mov
aad
push
add
nop
cmp
xchg
cli
sbb
add
add
clc
aaa
push
xor
jmp
testb
or
rolb
mov
lahf
xor
jne
mov
roll
mov
adc
scas
push
add
xchg
push
pusha
cmp
leave
adc
cmp
add
xor
adc
scas
push
inc
push
out
mov
subl
rorl
aam
sbb
daa
test
xchg
fldcw
addl
loope
xor
fsubrp
nop
add
jno
adc
nop
push
adc
mov
fimuls
loop
mov
add
sti
loop
andb
adc
out
mov
sub
xchg
push
add
sub
shl
push
pop
xchg
xchg
call
fsubs
jo
dec
loopne
adc
call
lret
fnstcw
cmp
fcoms
push
popa
and
pop
xchg
push
decl
jbe
inc
adc
rolb
fisubrl
cmp
add
ljmp
outsl
push
inc
mov
ss
outsb
pusha
sub
addb
sbb
add
push
cld
fidivl
pushl
mov
push
jmp
add
add
mov
scas
js
scas
or
movsl
shlb
xor
mov
mov
jo
es
lcall
push
scas
add
incl
and
xchg
push
push
pusha
andb
mov
adc
mov
icebp
jmp
inc
sub
adc
add
inc
adc
int3
add
or
push
inc
lods
xor
jne
or
fisttps
adcl
pop
dec
jmp
ljmp
pop
ret
or
scas
pop
xor
mov
inc
mov
cld
inc
mov
sub
nop
push
fucom
push
test
mov
or
ret
mov
scas
in
in
cli
add
xor
insl
push
outsl
xor
pop
pushf
lods
aam
mov
mov
std
ljmp
and
pop
push
sbb
mov
add
mov
mov
inc
mov
mov
outsb
lret
incb
add
jmp
notb
xor
data16
nop
loope
adc
adcl
adc
in
cmp
inc
fidivs
or
outsl
es
jo
nop
lea
and
pop
xchg
clc
push
pop
push
repz
or
adc
lcall
fisttpl
cwtl
inc
jnp
jo
xor
call
xchg
push
or
adcb
fmuls
cmc
loop
shl
mov
bound
orb
mov
data16
push
sbb
pop
push
xchg
rcll
or
adc
or
je
mov
fs
pop
insb
xchg
inc
xor
cwtl
dec
adc
rolb
push
inc
insb
and
ljmp
add
aam
fadds
sub
cltd
vrsqrtps
lods
cli
scas
mov
mov
imul
sbb
stos
popf
mov
and
add
insb
mov
or
cmp
inc
enter
xor
flds
notb
andb
shlb
push
cmp
lret
shl
mov
lock
mov
neg
mov
hlt
jp
loop
jle
sub
or
push
pop
in
xor
aas
dec
pushf
mov
cld
add
mov
mov
jb
imul
les
cli
fdivrs
sub
out
add
std
inc
add
push
repnz
adc
jmp
sbb
cmpsb
push
or
dec
icebp
add
inc
sub
and
lret
add
or
and
es
aaa
xchg
sar
add
pop
in
enter
repnz
mov
dec
pop
or
push
xor
fs
dec
in
adc
ljmp
addb
mov
jl
stc
popa
test
adc
je
cmpsb
push
add
sbb
subb
outsl
cwtl
les
push
bound
dec
lret
or
aam
inc
in
cli
and
aad
aad
push
sub
nop
jge
and
test
or
es
ja
clc
outsb
and
or
cvtps2pd
mov
and
jge,pn
push
xchg
or
adc
mov
shl
pusha
in
lea
jp
mov
sti
addl
insb
jmp
mov
add
mov
in
dec
jb
lahf
add
sbbb
sbb
mov
mov
pop
sbb
ret
or
cmp
insl
shlb
mov
das
test
inc
add
inc
dec
and
push
inc
or
test
pop
fidivrl
shl
mov
mov
fldenv
outsb
or
and
or
jae
lret
inc
test
mov
mov
mov
jl
mov
sbb
call
scas
jo
lcall
cld
push
jle
mov
fcmovb
adc
lret
sarb
lcall
dec
clc
inc
daa
jecxz
mov
dec
daa
xchg
xchg
rcl
add
push
jle
aas
movsl
ljmp
and
imul
push
lods
orb
lret
add
daa
mov
ret
lea
std
inc
add
ficoml
repnz
or
dec
sbb
add
ljmp
repnz
inc
adc
sarb
or
jbe
inc
add
mov
lods
orl
jecxz
enter
rolb
sub
les
mov
and
lock
rclb
push
or
test
mov
xor
sbb
cli
push
and
adc
add
cs
push
mov
inc
repnz
fwait
push
sahf
inc
xchg
pop
fneni(8087
das
nop
push
and
insl
int3
cmc
pop
fld
inc
orl
ror
inc
int
jecxz
cwtl
insl
mov
xchg
lock
inc
sub
loop
es
add
push
ds
mov
aam
imul
out
dec
lcall
cmp
add
nop
insb
xlat
dec
test
and
addr16
xchg
jnp
aam
outsb
jg
shlb
cmpsb
add
push
loopne
scas
es
add
or
mov
test
and
dec
mov
pushf
mov
mov
push
inc
cli
sub
or
ljmp
lea
add
mov
loope
in
imul
and
std
aad
sbb
fucomp
imul
pop
or
shll
fwait
negb
sub
pop
add
add
mov
mov
clc
or
adc
jg
mov
sti
mov
cmc
aad
xor
add
in
cltd
sub
dec
insb
fdivs
or
sbb
es
pop
aas
in
jge
jge
adc
fadds
idivl
adc
aam
sbb
jno
cmp
cmp
inc
rorl
stos
mov
and
xchg
mov
popa
sbb
aas
shrl
xchg
mov
jns
shlb
subl
xor
pop
rolb
sub
sahf
fnstsw
rcll
sbb
shlb
or
out
sbb
or
mov
inc
and
push
sub
mov
ret
push
stos
mov
hlt
in
pusha
push
jnp
pop
fbld
cmp
xor
push
subl
inc
popa
fldt
push
test
pop
add
mov
jo
subb
dec
jne
mov
in
adc
enter
pop
lea
add
fiadds
push
push
aam
push
incl
jo
cli
xchg
fdivrs
mov
mov
addr16
loope
add
inc
add
or
mov
fcompl
xorb
fstps
dec
mov
or
inc
movsb
mov
testb
jmp
mov
pop
cmp
mov
insb
cmpsb
inc
fbld
inc
dec
cmpsb
add
outsl
es
in
movsb
add
mov
call
add
jae
lret
mov
test
add
sbb
inc
mov
loopne
or
call
and
in
push
ret
shlb
add
mov
jo
push
or
test
sub
clc
fbld
mov
push
push
adc
fwait
add
loope
out
xchg
pop
jo
popf
xchg
shlb
add
push
add
icebp
and
cmc
xor
or
insl
imul
cmp
pop
subb
jb
pop
xchg
push
stos
imul
test
ja
cli
mov
or
daa
lock
lret
rolb
sbb
ljmp
push
pushaw
js
or
call
subb
xchg
xchg
les
shlb
std
gs
orb
ret
cld
xchg
cltd
shl
xchg
cmp
std
stos
xor
xchg
pushf
and
in
cli
cmpsb
mov
mov
mov
shlb
mov
push
mov
add
xor
scas
push
xchg
adc
mov
test
stos
movsl
or
inc
push
xchg
adc
inc
jbe
xchg
inc
jo
or
inc
in
gs
xchg
and
adc
add
inc
fdiv
xor
pop
adcb
je
sbb
push
test
loop
fmuls
add
rolb
adc
xor
or
outsl
or
cld
mov
lods
loopne
jmp
mov
xchg
mov
and
mov
inc
ret
jmp
sub
test
or
ja
inc
es
and
call
aaa
or
mov
fbstp
rolb
adc
lock
or
hlt
nop
test
sbbl
sub
push
mov
cmp
clc
jp
test
push
fcoms
dec
inc
hlt
dec
shlb
pop
call
push
cmpsb
mov
add
hlt
dec
clc
push
jno
add
jns
jns
insb
cmp
jb
or
sbb
xor
stos
fs
fwait
dec
mov
mov
or
inc
mov
push
xorb
sti
inc
lret
adc
fwait
add
lods
fsubrs
movsb
inc
or
or
rcr
nop
scas
popa
lret
mov
push
fidivl
call
pop
and
add
inc
cli
decl
ret
or
test
adc
adc
popf
ja
sti
aam
lock
inc
pop
xor
jo
mov
cmp
add
loopne
mov
hlt
ja
or
mov
adc
testb
call
xor
or
test
add
dec
mov
inc
xchg
inc
dec
inc
cld
outsl
fisubl
mov
cltd
clc
es
xor
test
add
mov
jl
das
stos
nop
pop
inc
jmp
loope
add
mov
cli
mov
decl
or
lock
dec
push
pop
ret
cli
mov
loopne
adc
adc
loop
dec
scas
mov
and
ret
push
mov
push
lcall
push
cmp
lods
dec
popa
test
mov
in
sub
mov
add
inc
pop
sar
lock
jl
sub
rolb
filds
sub
and
sub
or
loopne
scas
inc
fiadds
test
and
jle
xchg
push
jns
stos
int
jg
mov
add
cld
orb
icebp
add
jmp
adc
dec
inc
lock
xchg
mov
inc
das
outsb
int3
inc
xlat
inc
sbb
mov
push
add
add
fistpll
fstpt
sbb
ds
add
inc
aam
rclb
inc
pop
or
push
or
or
inc
or
mov
sub
jg
addl
flds
mov
mov
lds
mov
inc
insb
std
mov
and
loopne
leave
adc
test
push
rolb
mov
imul
push
scas
add
ss
xorl
push
or
xchg
sbb
inc
inc
cmpsb
out
insb
push
loopne
mulb
mov
push
mov
add
dec
and
cld
jg
add
cmp
dec
filds
inc
mov
cmc
nop
adc
inc
cmp
push
adc
loope
xor
add
sub
lcall
or
inc
push
xchg
inc
add
inc
push
lods
es
fistps
push
xchg
add
add
icebp
add
or
inc
or
add
aam
dec
xor
in
mov
lcall
movsb
mov
sbb
and
mov
insb
pop
shll
xor
std
popa
mov
stc
xchg
jp
push
adc
roll
pop
lea
pop
mov
jp
outsb
and
fdivrs
out
adc
inc
sub
mov
jg
or
add
nop
dec
add
and
mov
mov
and
xor
cwtl
mov
cltd
les
xchg
ret
je
and
dec
jmp
insb
icebp
sub
cmp
mov
mov
mov
imul
mov
push
or
sbbb
adc
mov
stos
sbb
test
das
add
hlt
xchg
js
and
pop
mov
jb
je
inc
push
leave
add
mov
push
jp
not
and
lret
js
cli
stos
bound
in
fcomip
fbstp
push
test
xchg
xor
sahf
mov
xor
bound
hlt
cmp
or
xor
push
sbb
nop
pop
add
sti
repz
mov
and
xchg
inc
xor
stos
js
loopne
mov
gs
mov
test
out
xor
icebp
cmpxchg
test
rcr
pushf
roll
les
xchg
sub
sbb
inc
cli
mov
addl
adcl
inc
fsubs
push
sbb
jbe
inc
movsl
and
out
jmp
sbb
add
ds
jmp
lret
ds
xor
mov
mov
and
add
add
add
ds
enter
repz
xor
adcb
sbb
cmp
or
push
xor
or
fsts
ret
push
bound
and
loope
push
sbb
add
jb
cmc
scas
cld
inc
sub
cs
testl
push
pusha
dec
xor
jnp
scas
lds
fdiv
push
sub
outsb
sub
mov
or
pushf
jne
lcall
ja
jne
outsl
movups
add
push
push
dec
and
add
jle
xor
test
mov
pop
add
or
sbbb
push
xor
aam
outsb
and
mov
push
push
mov
cmp
mov
dec
pop
ljmp
inc
cmpsb
addb
loope
cmc
fiaddl
rcll
dec
sbb
test
or
das
lcall
add
ss
push
add
push
sbb
outsb
hlt
fcomp
mov
and
push
cmpsl
ret
adc
mov
outsb
filds
add
jle
xchg
fcmovnb
mov
and
es
mov
adc
fcoms
insb
inc
adc
sub
and
cmp
or
jecxz
xor
sub
dec
push
or
or
cmp
add
subb
sar
pop
cmp
es
dec
or
sub
mov
sbb
movsb
mov
push
popa
mov
js
jg
add
adc
mov
push
cld
xchg
inc
push
add
inc
xchg
xchg
pop
mov
sarb
jp
in
mov
test
xchg
push
rolb
cmpl
fadds
clc
fcomip
orl
inc
inc
push
test
sub
cwtl
and
or
pusha
push
mov
jmp
xchg
cltd
inc
or
dec
sub
push
cmp
add
shlb
jle
xchg
jo
jo
push
inc
xchg
cmp
shl
loopne
pusha
dec
push
inc
fildll
and
lods
cmpsb
enter
add
xchg
jne
pop
movl
xchg
pop
pop
out
lock
push
add
in
and
lcall
jg
aas
inc
stos
das
inc
adc
rorl
addb
dec
push
pop
or
xorl
add
push
pop
loope
cmpb
xor
pop
outsb
ret
cs
adc
or
lods
js
outsl
loop
in
mov
xchg
mov
sbb
dec
inc
subb
xchg
pop
rolb
sbb
cmp
inc
and
xor
andl
fsubrl
jnp
inc
add
aaa
cmpsb
mov
cmp
pop
mov
pusha
or
pop
adc
and
adc
push
mov
nop
loop
jne
outsl
ljmp
or
cld
out
mov
or
xchg
je
rcll
xchg
push
add
inc
mov
sarb
test
xchg
rcl
jo
andb
loopne
mov
notl
dec
popf
sarb
mov
xor
and
ret
clc
orb
loope
rcrb
notb
xor
pusha
add
mov
cli
movsl
adc
push
jmp
and
neg
movsl
adc
xchg
inc
push
sbb
push
pop
jo
mov
dec
sar
rcrb
inc
loop
jle
mov
dec
sbb
add
dec
rclb
cli
movb
sub
add
loopne
cld
fwait
xchg
cli
sti
pusha
pop
nop
lret
pop
test
and
int
inc
ret
lahf
jnp
js
jl
pop
add
adcl
inc
orb
stos
mov
sub
add
andb
out
sub
inc
pusha
and
inc
inc
cs
sbb
or
mov
nop
aaa
jp
std
sbbb
inc
sbb
and
mov
mov
das
push
adc
sub
mov
mov
push
test
notb
mov
mov
shlb
imul
pop
test
inc
clc
sub
and
sarl
push
hlt
adc
outsb
add
sbb
inc
lcall
rolb
pop
mov
pushl
and
in
inc
mov
mov
add
or
ss
movsl
and
loopne
dec
insb
xchg
push
inc
loopne
lret
mov
mov
cld
test
filds
lods
fistl
pop
clc
cli
cli
lds
aam
add
lret
pop
add
mov
lea
popa
inc
jbe
rorl
jo
add
pusha
sub
subb
inc
add
test
outsb
add
cwtl
mov
push
insb
pop
loopne
push
mov
lock
stos
push
pushf
and
fcompl
adc
pop
mov
cmp
jge
lea
insl
repz
mulb
jg
pop
pop
jbe
movl
mov
sub
loopne
xchg
jecxz
xchg
ret
loopne
mov
pusha
mov
lret
adc
in
ljmp
movsb
add
repz
movsl
hlt
cmp
fsubrs
jmp
inc
pusha
fwait
cmpsb
and
gs
mov
fs
in
fisubrs
cli
addb
ja,pt
or
pop
les
fdivl
loope
dec
call
xor
cld
insl
jge
mov
lock
std
pop
test
mov
data16
movsb
cmp
add
sbb
fcmovne
jmp
movsb
shrl
pop
testb
sub
sbb
movsb
into
filds
testb
mov
and
aad
mov
ret
jb
vpunpcklbw
or
inc
leave
lcall
andb
add
loopne
lcall
es
mov
test
out
fiaddl
xchg
rcrl
push
lret
mov
adc
sahf
add
shlb
cli
push
sub
roll
call
sbb
mov
loopne
repz
ljmp
and
sub
ss
adc
nop
in
adc
mulb
and
sbb
add
ret
or
mov
test
ret
xor
push
cld
sub
mov
push
scas
mov
add
inc
lds
cmc
xchg
shlb
cmp
or
aam
xor
jo
adc
dec
ficoms
jg
or
mov
loopne
movsl
or
jae
adc
scas
jno
outsl
pop
rcrl
xor
popa
adc
inc
adc
nop
in
and
sarb
mov
jmp
cmpl
pop
inc
pop
lock
stos
cli
mov
dec
cmpb
nop
add
add
test
add
pop
jne
adc
pop
add
fmuls
push
push
pusha
xor
mov
outsb
ss
sub
and
inc
insl
xor
gs
das
into
std
mov
test
mov
dec
test
and
decl
loop
and
mov
or
add
test
jo
mov
mov
lock
inc
dec
mov
add
fldt
loop
divb
jo
adc
add
aaa
and
loope
xchg
insb
add
push
cmp
test
mov
jecxz
add
lret
push
sub
add
pop
ret
sbb
mov
mov
fistps
mov
pusha
jge
or
push
inc
fdiv
gs
and
and
pop
inc
loopne
rorb
fmuls
push
jno
sub
mov
ds
imul
nop
mov
mov
sbb
rcrb
lcall
dec
sub
cmp
add
out
mov
sub
fdivs
inc
nop
mov
add
das
add
lock
lods
inc
sarb
push
push
sub
in
sub
ja
sbb
xor
mov
push
jb
std
bound
faddl
jo
pop
push
jmp
das
xchg
sub
arpl
inc
add
sub
adc
sbb
sti
and
adc
mov
sahf
cwtl
mov
stos
mov
mov
leave
push
incb
bound
cmp
movsl
adc
push
push
lahf
mov
inc
sbb
add
insb
enter
jmp
ss
jge
cmp
sbb
add
and
xchg
addb
ljmp
adc
cld
push
sub
std
xor
adc
adc
cli
dec
testb
test
push
inc
mov
insb
add
or
fadds
pop
rolb
fldcw
cld
pop
scas
fstps
imul
sbb
mov
or
pop
scas
xor
inc
xor
xor
add
adc
or
adc
inc
jnp
sti
dec
xchg
imul
or
mov
scas
sub
add
dec
mov
ss
xchg
test
addl
dec
test
mov
test
jle
cwtl
adc
jo
ss
sar
jmp
push
and
rcrl
in
sbbb
add
jg
fldl
and
hlt
xchg
repz
hlt
jmp
lahf
and
push
cmovne
rcl
outsl
mov
adc
sub
bound
inc
es
lcall
fisttpl
test
push
cmp
cmp
rolb
faddl
sub
inc
incl
sbb
sub
lock
mov
shlb
lock
sti
sbb
adc
sub
xorl
fimuls
lds
push
xor
incl
les
add
xor
inc
andb
mov
mov
xor
subb
lcall
cmpsb
adcl
inc
or
cmpsb
incl
bnd
test
lock
xchg
pop
inc
arpl
adc
sub
push
dec
into
add
mov
add
mov
mov
and
fimull
push
lods
rcr
in
sub
xor
sub
loopne
add
int3
cmp
movb
lcall
bound
sub
jns
shr
mov
add
ret
lods
jg
hlt
loop
mov
lock
sub
and
es
fidivl
pop
jo
and
aaa
inc
cli
jns
xchg
rolb
xchg
mov
add
inc
adc
and
jmp
mov
jb
mov
ret
jle
lods
pop
loop
mov
xor
add
xchg
adc
and
xchg
cmc
push
movl
jne
and
fcoms
inc
inc
iret
jp
mov
notl
jno
out
stos
sub
sbb
add
aaa
cld
fidivrl
jae
adc
cmp
cli
in
sub
and
dec
push
xchg
mov
mov
adc
jmp
inc
shr
gs
sub
sbb
add
push
incl
ja
les
inc
add
inc
or
lock
sti
iret
and
and
ja
push
in
js
inc
push
rorl
shll
in
mov
inc
or
push
sub
mov
into
inc
sahf
push
adc
push
adc
inc
push
pop
xor
shlb
subl
dec
jo
or
es
scas
rcr
leave
dec
pop
cmp
sar
aas
mov
push
add
repnz
add
inc
mov
sbb
popa
push
fadd
fistl
scas
push
dec
jo
fs
add
jp
mov
sbb
stos
adc
imul
inc
pusha
sti
push
cmpsb
jno
inc
pop
cmp
loope
pop
cmp
imul
jb
push
and
int3
rolb
push
das
adc
hlt
dec
jbe
dec
cmc
sbb
inc
jo
out
cs
mov
add
inc
add
push
sbb
adc
add
inc
push
mov
add
cli
nop
cmc
pop
call
push
stos
push
add
out
in
or
lret
scas
mov
loop
loopne
and
mov
and
fsubs
push
cwtl
dec
sbb
cwtl
bound
ret
push
jle
adc
rolb
dec
and
idivb
sub
sbb
xor
add
add
cs
idiv
insb
movl
lds
jo
int3
or
and
push
fisubrs
dec
icebp
pop
imul
fsub
push
add
rcrb
and
push
mov
icebp
ja
test
add
mov
cmpsb
push
subb
inc
jp
rolb
xchg
pop
ljmp
test
and
daa
add
push
mov
cmp
testl
inc
adc
push
cwtl
cli
or
sbbb
fcomip
out
hlt
pop
fisttpl
bound
cld
inc
sbb
cmpsb
addb
lds
popa
push
inc
addl
test
pop
mov
test
movl
add
jns
sub
jnp
aad
jne
add
sub
xorb
pop
cltd
test
and
stos
sub
xchg
inc
pop
dec
dec
cmpb
pop
add
inc
scas
shrb
sbb
mov
xchg
add
fdivrs
mov
sbb
jbe
or
ret
dec
cld
push
pop
jo
inc
pusha
add
repnz
jb
popa
std
push
rorb
xchg
add
leave
roll
movl
mov
outsb
push
jne
popa
shlb
or
or
push
push
test
sbb
adc
pop
push
das
rcrb
push
sbb
gs
js
or
inc
rolb
inc
add
inc
rolb
or
push
mov
add
push
jno
xchg
xor
push
js
arpl
xchg
shlb
push
sbb
test
sub
cmp
bound
movsb
orb
sbb
xor
mov
scas
popf
mov
xor
movsl
in
mul
push
mov
cmc
mov
cli
les
cld
add
and
mov
or
in
or
retw
pop
xchg
cmp
pop
inc
rol
pushl
lock
mov
or
inc
add
cmpsb
mov
cld
test
push
lock
add
push
clc
sub
pop
nop
add
jo
aaa
lret
ret
shlb
and
movsl
inc
mov
js
shll
popa
xchg
mov
sbb
mov
mov
cmpb
cmp
add
push
pop
rclb
add
add
mov
add
xchg
mov
adc
shll
xchg
outsb
add
imul
lds
inc
push
gs
xor
add
add
pop
stc
push
jge
addl
inc
or
aas
int3
popl
subb
es
inc
push
jge
loopne
mov
push
lods
pop
sub
adc
add
cmp
icebp
pop
jmp
pop
inc
adc
xor
pop
lock
ret
pusha
push
mov
sahf
into
dec
out
xor
loope
pop
incl
xchg
push
mov
subb
push
mov
dec
adc
clc
pop
popa
and
adc
adc
in
mov
repz
iret
mov
hlt
loopne
and
add
add
cs
lock
cmp
push
lods
js
es
sahf
and
rclb
lret
push
and
and
or
xchg
mov
cwtl
and
in
fnstcw
mov
imul
addb
add
rclb
mov
cmp
inc
and
pusha
cmpsb
jbe
sbb
xlat
push
adc
dec
jmp
nop
mov
mov
push
inc
sbb
adc
jle
andl
jb
loopne
and
and
incb
inc
cs
ret
mov
movsl
and
mov
test
sahf
cltd
adc
sbb
aaa
mov
add
mov
pop
and
hlt
mov
call
loop
dec
add
xchg
sbb
cmp
sbb
and
cmpsb
sti
push
add
xchg
ljmp
adc
push
pop
cmc
insb
push
mov
and
cmc
loopne
inc
mov
push
pusha
cltd
js
jl
inc
loope
shlb
jo
push
enter
add
loop
pop
or
aas
mov
cld
add
jg
pop
dec
test
and
daa
cmp
add
scas
push
xchg
sub
mov
out
jmp
push
or
bound
xor
sbb
orb
pushf
and
pusha
sbb
inc
add
loop
aad
or
mov
adc
loope
jb
imul
cmp
pop
lds
hlt
gs
inc
lods
mov
hlt
adc
add
movsl
and
push
or
enter
mov
cmpl
insl
xor
and
in
into
add
inc
add
cmp
inc
std
inc
lret
cmpb
shll
aam
lods
sub
imul
or
orb
ljmp
inc
add
orl
add
adcb
add
bound
adc
popf
adc
inc
testl
lds
fisubrl
or
and
or
test
sub
mov
mov
mov
xchg
jge
clc
push
xchg
lret
and
lcall
aam
xor
cmpsb
adc
loop
xlat
cmc
out
or
dec
loope
xchg
inc
jo
sbb
adc
test
loope
xchg
les
sarl
mov
test
xor
jg
roll
test
or
xor
in
push
mov
sub
jno
lea
sub
add
fcmovnb
adc
mov
add
flds
stc
sub
outsl
decl
out
fldl
aaa
mov
subb
cld
lea
roll
mov
add
dec
mov
ds
pop
and
out
fidivrs
add
xor
out
jp
mov
jbe
mov
lea
push
adc
jo
adc
mov
les
mov
sbb
mov
sbb
adc
xchg
shlb
fbstp
xchg
sub
jne
push
add
cmp
push
jl
adc
pusha
adc
or
rol
push
pop
mov
adc
int3
jge
orb
mov
and
sub
ljmp
mov
sub
dec
dec
adc
xchg
inc
mov
mov
lret
rcrb
sub
mov
cltd
or
fisttpl
adc
mov
mov
adc
inc
inc
jg
jne
sbb
movb
adc
pop
repnz
test
push
lock
fsubs
scas
jo
fstpt
mov
nop
rcl
pop
adc
scas
es
movsl
mov
cwtl
lahf
mov
inc
xchg
inc
nop
push
add
pushl
icebp
inc
popa
aas
pop
jl
sub
add
add
sti
sub
test
clc
mov
or
sbb
xor
call
pop
andb
test
xchg
sbb
push
fcoms
inc
inc
stos
insl
cli
test
out
decl
xchg
roll
inc
cmpb
in
outsl
cli
vmovups
aas
push
lea
jb
cmp
dec
out
cmpb
scas
push
cmc
ja
mov
lds
fs
mov
clc
aam
repnz
faddl
rorb
push
cmp
outsl
cmp
adc
int3
cmp
inc
cmp
rolb
cmp
dec
xchg
or
inc
adc
sarb
mov
call
push
nop
add
adc
add
add
je
pop
and
adc
sti
popa
inc
loopne
push
imul
jg
dec
das
adc
ret
adc
or
adc
xor
inc
pop
shlb
std
sbb
adc
shl
aaa
jnp
cmp
sub
push
add
outsb
add
mov
xchg
negl
sbb
add
mov
sbb
xchg
ljmp
mov
fs
filds
scas
sub
cmp
inc
faddl
pop
mov
les
in
cmc
add
pop
std
push
stos
pop
inc
inc
sbbb
cli
testb
imul
add
mov
adc
cmp
fs
or
loop
fcoms
inc
int3
xor
pop
icebp
pop
inc
movsl
movsb
pushf
stc
mov
fcom
ja
mov
pop
mov
fs
lods
loopne
icebp
pop
mov
lcall
and
cmp
test
cmp
pusha
xor
pop
mov
xchg
jle
inc
pusha
adc
add
adc
mov
adc
jb
sub
call
subb
xor
hlt
pushl
and
cmp
hlt
incl
dec
pusha
shl
sbb
loopne
push
mov
in
incl
inc
sbb
adc
or
add
sbb
xor
xor
pusha
add
pushf
add
add
lds
jno
call
cmp
dec
sbb
sar
dec
sub
fsts
jno
icebp
sbb
mov
setge
rclb
mov
dec
push
mov
add
fcomip
add
inc
cmp
stos
mov
inc
jae
pusha
adc
jb
scas
imul
lahf
mov
pop
mov
loopne
fisttps
into
std
and
push
mov
jmp
adc
pop
lock
or
adc
sub
pop
enter
pop
adc
sahf
adc
mov
pop
nop
push
lcall
xchg
push
and
mov
push
dec
or
loope
shrl
adc
adc
pop
lcall
mov
jge
mov
insl
jl
xlat
add
pushl
xor
sarl
xor
push
jns
push
js
sbb
jbe
push
hlt
jb
loopne
inc
cmpsb
sbb
sbbb
cltd
mov
adc
add
mov
adc
add
incl
lock
mov
mov
xorb
xor
icebp
adc
loopne
sub
adc
int
mov
and
adc
xchg
adc
sahf
cltd
lcall
sti
adc
inc
lods
inc
pop
cmp
icebp
loopne
mov
inc
jb
mov
sbb
jnp
or
enter
sbb
add
bound
xor
push
add
js
add
ljmp
mov
jmp
dec
add
mov
fldcw
xchg
mov
cmp
add
sbb
adc
ds
add
in
fucom
sbb
les
int
mov
pop
add
daa
jne
or
sub
mov
xchg
hlt
add
push
xor
jbe
mov
jg
mov
jle
push
push
add
inc
mov
jo
pusha
pop
movl
call
xlat
jo
adc
and
fwait
push
movl
int
aam
mov
push
jbe
push
and
pop
ljmp
dec
sti
push
xor
adc
or
clc
inc
aam
shlb
sub
adc
dec
dec
adc
add
adc
pop
add
pop
stos
inc
dec
xchg
lds
jecxz
int3
test
fcmovu
xchg
cmp
adc
addl
mov
push
nop
mov
add
add
pop
addb
inc
push
push
adc
faddl
fstpt
faddl
add
mov
js
fimuls
cld
or
xor
adc
or
pop
mov
and
push
lds
adc
and
les
add
pop
mov
test
rolb
inc
fwait
out
lock
rorb
mov
ljmp
pop
ret
xchg
jbe
xchg
adc
mov
insb
data16
inc
or
xchg
push
lds
ret
insb
test
and
imul
std
push
popf
orb
mov
xor
pop
push
push
push
je
cmp
cltd
sub
inc
push
inc
or
jbe
and
dec
dec
or
inc
cmp
mov
pop
es
ffreep
es
sbb
addl
dec
and
inc
mov
push
icebp
pop
sbb
das
jnp
or
pop
ret
jecxz
jp
mov
pushf
scas
stos
xchg
mov
push
mov
cld
aaa
sub
xor
push
mov
add
je
decb
pop
popf
inc
subb
mov
add
orl
fistpll
lcall
and
jne
sti
pop
mov
push
fwait
sbb
ss
or
push
push
inc
or
adc
add
push
add
mov
mov
add
outsl
cmp
sahf
adc
insl
pushf
es
add
mov
cmpsl
les
or
jl
mov
pusha
jns
movsl
push
mov
pusha
push
adc
mov
scas
rcrb
ljmp
cli
std
cmp
imul
sub
pop
hlt
mov
mov
cmpsb
jo
inc
pop
mov
push
xor
inc
out
insb
orb
inc
xchg
mov
loopne
pusha
xor
loopne
std
adc
sub
cltd
inc
add
movsb
xchg
jecxz
lea
fs
mov
or
adc
and
push
test
jecxz
std
jmp
std
shrb
inc
mov
jnp
filds
jbe
sti
xchg
loopne
adc
dec
adcb
imul
mov
cmp
push
pusha
or
xorb
fisttps
mov
xor
lret
mov
and
sbb
sbb
inc
out
xor
jb
daa
and
fnsave
test
cmp
add
std
sbb
jge
adc
pop
sub
pop
clc
cmp
in
jmp
or
roll
fadds
sahf
mov
std
sub
or
mov
or
jecxz
arpl
movb
xchg
dec
shlb
loopne
sarb
mov
sbb
and
adc
pop
or
add
jg
push
xor
add
fcomps
mov
sbb
pusha
cmp
cmpsb
adc
sub
push
rcrb
adc
add
in
jne
or
je
rolb
cli
jg
cwtl
sub
loopne
sub
sub
mov
roll
mov
movsl
je
movsb
std
ret
inc
mov
test
push
fstp
adc
lret
jb
add
test
add
pop
jb
in
add
js
shl
loopne
or
mov
test
pusha
cmp
dec
ret
add
sub
test
mov
add
dec
or
sub
lods
add
adcl
cmp
rorb
pop
insb
add
mov
std
mov
outsb
push
inc
mov
inc
lods
pop
sub
shll
scas
pop
mov
rclb
adc
xchg
fsubrl
adc
pop
or
movsb
push
orb
push
mov
pop
test
sarb
movsl
add
push
mov
jno
sbb
test
sbb
dec
lret
dec
mov
sbbl
inc
sub
push
pusha
aad
cmp
rolb
mov
add
mov
push
shr
dec
ljmp
cmpsb
push
mov
dec
inc
sub
jno
popa
or
adc
jno
sub
jno
dec
cmpsl
pop
popa
push
sub
js
clc
mov
push
jnp
jl
loope
add
xor
outsb
sub
or
divb
jmp
pop
push
or
sahf
add
sub
cs
in
hlt
or
adc
rcrl
add
mov
push
mov
jecxz
xor
les
scas
inc
add
add
shll
push
mov
mov
movsl
add
cmpsb
outsb
or
or
jnp
lahf
xorb
sub
test
xor
mov
pop
push
movsl
inc
dec
mov
adc
cmpsl
or
mov
je
out
xchg
es
nop
insb
mov
xchg
mov
xor
decl
sub
enter
mov
ss
or
add
jno
out
push
xor
or
punpckhdq
test
outsl
mov
adc
sub
nop
xor
orb
xchg
fadd
xor
or
add
icebp
add
ret
adc
outsl
inc
rol
add
adc
fwait
in
scas
fistps
push
xor
add
inc
loope
icebp
xor
fidivl
stos
and
call
pop
inc
jbe
mov
sub
xorb
dec
push
jns
jb
bound
xchg
cmc
rolb
shrl
pusha
dec
lahf
fs
inc
es
sarl
test
push
mov
in
fwait
movsl
mov
shll
fldenv
nop
sub
pop
ss
mov
jg
push
scas
pop
cmpb
add
add
xor
sub
adc
scas
mov
sbb
scas
loope
mov
jo
add
sbbb
lods
dec
push
xor
test
inc
inc
test
test
xor
inc
lahf
or
aad
jmp
mov
or
xor
jno
test
es
repnz
inc
sub
xorl
add
out
js
out
jecxz
je
bound
mov
inc
and
xchg
cli
mov
in
xchg
inc
mov
mov
mov
sbb
cmp
cmpb
movsl
test
xchg
pop
pop
lea
ss
xchg
in
adc
mov
cmpsb
pusha
xchg
lea
popf
lds
add
add
jmp
ljmp
mov
std
ss
mov
push
xchg
add
test
jle
std
push
js
shlb
cld
call
sbb
cwtl
rorl
xor
lds
and
in
movsb
adc
cmpsl
inc
sub
xor
or
and
mov
add
rolb
bound
stos
jge
rolb
or
cmp
and
or
or
fldl
lcall
cwtl
xchg
shrb
cld
push
and
roll
pop
inc
test
lahf
popa
cld
mov
popf
sbb
loope
leave
pop
jle
jne
dec
cwtl
movsb
xchg
push
sbb
int
cmp
mov
xchg
adc
push
test
les
loop
outsb
cmpsl
loop
push
mov
loop
sbbl
popa
add
shlb
mov
imul
or
and
test
movsl
fwait
sub
lods
xchg
aad
cmc
adc
xchg
hlt
inc
or
out
clc
pusha
mov
pop
and
sub
rcll
lods
aam
mov
add
xchg
push
pop
jo
mov
gs
and
inc
daa
scas
rolb
or
sub
cld
sub
pusha
mov
sub
sub
fbstp
bound
xor
fcomip
sbb
movsb
lock
pusha
scas
lock
fisttps
cwtl
push
jae
les
adcb
rorl
mov
shl
add
les
cli
mov
sbb
mov
test
icebp
mov
ljmp
or
xor
in
add
fucomi
idiv
add
add
and
push
hlt
imul
adc
or
or
adc
incl
loope
and
push
js
cmp
in
in
rorl
fs
imul
mov
inc
divps
sub
and
pop
loope
mov
sub
pop
adc
lock
fsubrs
sbb
fwait
stos
xor
inc
out
add
adc
adc
test
in
xor
add
mov
pop
fldl
cld
jmp
xchg
rolb
pop
in
adcl
lods
mov
inc
and
push
xor
in
push
mov
and
or
shrb
xchg
pusha
cmp
xor
fs
in
ljmp
xchg
jno
add
add
sub
push
or
jl
add
add
ffreep
cli
aad
adc
adc
xor
movsb
scas
dec
push
pop
es
xor
jg
sub
addl
add
xchg
and
insb
inc
pusha
sub
out
test
adc
rorb
mov
push
or
add
inc
pusha
andl
std
scas
push
lock
addb
add
adc
inc
in
scas
stos
andb
mov
dec
push
add
mov
fs
in
mov
push
into
loopne
inc
daa
push
inc
data16
mov
mov
js
add
inc
push
test
cmp
add
test
and
dec
sti
adc
outsl
mov
adc
sub
adc
adc
adc
outsl
incb
add
adc
adc
adc
adc
mov
add
cmp
cmp
push
mov
adc
fwait
dec
xor
xor
or
fistpll
jo
or
das
and
test
out
pop
jle
cli
add
jl
outsb
in
push
push
insb
inc
xor
add
test
fistpll
mov
adc
and
int
out
adc
adc
jl
insl
adc
adc
jae
imul
push
gs
ficomps
mulb
mov
adc
mov
rcrb
jle
lahf
shlb
fdivrl
adc
mov
test
std
push
jae
fwait
dec
repz
inc
mov
dec
xchg
fwait
dec
adc
push
loop
adc
cmp
addr16
int
adc
mov
inc
adc
adc
int
pop
and
pop
adc
xor
iret
fwait
dec
push
inc
mov
and
push
adc
mov
dec
repz
outsb
push
jns
adc
cmp
movsl
adc
adc
loope
push
mov
dec
loopne
or
dec
adcl
xor
and
mov
mov
scas
inc
cmpsb
mov
xchg
movsb
mov
adc
mov
inc
sbb
adc
mov
or
loopne
adc
inc
roll
adc
xchg
xor
fidivrl
push
mov
test
cmp
pop
adcl
sub
or
scas
or
jle
adcl
adc
ss
lahf
jecxz
outsl
or
or
adc
sbb
adc
xchg
add
and
mov
push
mov
insl
rclb
adc
jmp
loopne
jmp
repnz
fildl
xchg
out
mov
je
cmp
adc
mov
adc
push
incl
orl
ja
lcall
mov
cmc
adc
adc
adc
and
inc
aas
mov
repz
shll
lret
iret
adc
mov
ret
or
lods
pop
stos
inc
add
adc
lds
adc
in
inc
imul
ret
xchg
xor
jg
adc
lock
mov
outsb
push
fbstp
and
rcrb
bound
sub
rorb
mov
pop
mov
scas
and
insb
push
cmp
fidivrs
mov
inc
pusha
xchg
inc
enter
lcall
es
jl
lret
es
push
hlt
aad
fwait
xchg
jl
sahf
stc
xor
int3
mov
push
or
imul
sahf
subb
inc
add
add
rclb
and
or
adc
jp
xor
sub
imul
insb
inc
sub
and
and
test
es
das
subb
xor
es
loopne
inc
sub
cmp
paddw
or
cmp
and
mov
test
adc
leave
inc
lret
and
add
out
inc
das
inc
lods
and
aaa
roll
inc
sub
test
cmp
mov
push
jne
jns
xor
lret
push
rolb
cld
pop
outsl
ss
inc
cmp
test
addl
sbb
mov
test
adc
add
insb
lahf
push
mov
jbe
cmp
inc
or
mov
mov
cld
in
jmp
add
sbb
frstor
pusha
shll
adc
cmp
add
mov
dec
ljmp
enter
mov
dec
cbtw
xchg
addr16
jne
push
mulb
ljmp
jne
andl
popa
add
push
dec
adc
or
cs
ja
cli
dec
add
mov
add
push
xorb
std
pushl
and
jnp
xlat
and
jno
or
add
mov
and
or
adc
inc
cmp
daa
rolb
xchg
adc
mov
add
shl
inc
popa
add
xchg
xchg
dec
cwtl
or
test
or
lret
jno
ret
aad
sub
jle
stos
data16
ljmp
inc
pushf
cmc
xorb
adc
jmp
mov
or
loopne
lock
mov
pop
pusha
sub
bound
push
add
adc
and
pusha
insb
fstps
inc
push
adcl
pop
lret
or
cwtl
shl
adc
push
cli
inc
sbb
sbb
adc
add
lea
js
mov
and
add
mov
out
xchg
push
and
jo
adc
dec
mov
push
loopne,pn
loop
pop
aaa
dec
add
add
in
adc
lods
outsb
mov
cwtl
add
testb
sub
decb
and
nop
stos
adc
lret
xchg
test
adc
push
sti
mov
cli
and
adc
and
jge
dec
or
sub
push
and
cmovbe
mov
push
or
and
adc
add
test
add
sub
cwtl
sbbl
outsl
mov
les
add
fbld
xchg
pop
push
push
icebp
xor
inc
gs
xchg
adc
or
lcall
inc
bound
sub
inc
insl
dec
pushf
or
inc
inc
add
sub
pop
xor
jecxz
adc
inc
mov
inc
and
and
add
lret
adc
mov
fdivrs
mov
cmc
add
mov
faddl
scas
lock
call
pop
lret
adc
outsb
adc
test
adc
add
in
adc
nop
lcall
mov
mov
add
in
scas
and
or
adc
int
outsl
rolb
inc
mov
inc
inc
or
xlat
dec
xchg
push
cli
nop
add
mov
cmp
adc
lret
push
adc
dec
stos
insl
push
popfw
fdivrs
push
add
insb
push
cmc
fcoms
stos
inc
sub
cmpsl
pop
adc
cs
add
add
adc
and
fldpi
pop
lock
xchg
add
push
sbb
fstpt
add
pop
add
adc
outsl
mov
dec
sub
fimuls
outsl
push
add
js
shlb
jae
fsubl
sahf
addb
or
mov
push
data16
mov
push
shl
pushf
daa
out
lods
adc
cmp
or
sbb
cmpsl
add
hlt
cmpsb
repz
cmpsb
cmp
pushf
pop
add
mov
push
add
add
and
incl
inc
imul
inc
add
adc
xchg
icebp
or
scas
mov
cli
clc
lods
loop
push
xor
bound
xchg
push
pop
cmpsl
push
andl
pop
push
nop
adc
outsl
movsl
add
aam
xor
pop
cmpsb
pop
and
pop
mov
inc
sub
ds
mov
cwtl
xor
loop
loopne
mov
lea
push
pop
jp
mov
push
in
xchg
sub
mov
lock
mov
lock
lea
pop
clc
movsb
filds
mov
push
pusha
add
movsb
jg
mov
pop
stc
xchg
mov
pop
jl
mov
dec
xor
xor
mov
sbb
pop
add
jo
mov
mov
dec
or
mov
out
out
and
popa
adc
sbb
movsl
cmpb
add
jb
jbe
add
xor
sub
jnp
aaa
sbb
lea
mov
pop
inc
pop
pop
adc
mov
mov
pop
imul
push
es
rolb
rolb
or
add
adc
aaa
push
clc
mov
sbb
cli
cwtl
mov
mov
xchg
pop
fisttpl
cmpsb
jl
repnz
or
daa
cs
inc
loope
mov
mov
lods
ljmp
pop
pusha
stos
pop
push
cmp
add
push
decl
inc
or
mov
push
ret
lea
push
push
nop
add
or
pop
or
push
aad
xchg
inc
movups
sarb
jp
inc
sbb
inc
imul
mov
sbb
add
ret
shrb
or
mov
inc
or
sub
loope
daa
outsb
cmc
dec
cld
cld
bound
jp
adc
lods
adc
mov
inc
in
inc
icebp
adc
adc
mov
add
jo
push
je
loope
adc
add
mov
int
incl
loopne
and
or
fnop
add
call
fcoms
sbb
out
and
bound
xchg
outsb
fildl
popa
fdecstp
fs
add
arpl
mov
fisubrs
sub
sbb
xorb
fldt
pushf
addl
and
sub
imul
mov
push
das
mov
add
add
mov
sarl
and
sub
and
inc
clc
iret
sub
mov
and
nop
rclb
lcall
sti
and
ret
pusha
push
jmp
lret
adc
mov
das
clc
inc
sarb
jecxz
xor
adcl
leave
add
jo
add
mov
int
mov
sbb
xchg
jecxz
cltd
cwtl
inc
add
jp
shrb
bound
push
loop
loop
xorb
call
and
or
inc
push
cld
add
mov
push
cli
push
add
push
cmpsb
imul
jb
inc
rorb
add
inc
loopne
testb
or
loopne
jecxz
bound
lds
add
add
pusha
or
call
jge
orb
adc
adc
mov
or
aaa
nop
imul
rol
loope
pop
mov
pop
sub
aas
add
jb
aam
or
jle
adc
mov
xor
inc
repnz
lret
jp
mov
xor
cli
movsb
test
mov
andb
repnz
cmc
push
fcoms
dec
jno
jle
lock
cli
std
inc
add
mov
inc
push
mov
cli
cld
mov
mov
dec
mov
adc
popa
mov
adc
xchg
dec
rclb
jo
arpl
sub
outsb
adc
aam
inc
push
sbb
jb
adc
sub
jo
nop
or
lea
rorb
jb
push
repnz
insb
lods
movb
lea
mov
mov
out
cmp
bound
fstpl
pop
sbb
ljmp
std
adc
and
mov
mov
inc
push
and
scas
or
inc
adc
cmc
adc
scas
mov
push
sub
inc
sub
sbb
push
xor
pop
shrl
mov
lds
add
cmp
dec
add
add
and
sub
ja
lret
addl
adc
lds
fisubs
jp
cmp
fisttpl
sbb
add
add
mov
dec
add
jbe
mov
mov
cli
cltd
sbbb
mov
cmp
sbb
cli
ljmp
or
ror
lds
cmp
ja
mov
mov
ficoml
xor
aam
adcl
mov
lea
in
push
fwait
addb
jbe
test
jmp
pop
ljmp
ja
jbe
xorb
lret
and
push
testb
lea
push
xor
pop
mov
mov
lret
popf
xchg
lcall
psubq
dec
dec
add
adc
push
shlb
subb
shrb
decl
mov
les
roll
push
fwait
pusha
jo
add
or
mov
inc
xchg
adc
aam
jae,pt
loopne
sub
and
vmovhps
mov
movsl
mov
jecxz
and
mov
pop
addb
shll
cwtl
adc
push
shlb
imul
loop
subb
test
inc
and
cli
inc
mov
xchg
ret
add
inc
jb
xor
dec
lods
dec
insb
je
jae
mov
push
fwait
pop
enter
adc
or
bound
push
rcrl
jp
icebp
jns
sbb
cmp
sub
adc
sti
stos
je
push
add
es
push
cmpsb
lea
xchg
scas
mov
mov
fcomi
pop
xor
rolb
mov
push
sbb
mov
xorb
sbb
es
sti
roll
movsl
adc
movsl
push
xchg
ret
inc
inc
cli
clc
lea
daa
subl
or
mov
and
adc
rorb
dec
ja
rol
xor
insb
pop
and
mov
pop
add
fcmovne
add
mov
arpl
or
sbb
mov
dec
adc
add
xchg
cmpb
xlat
inc
nop
pop
and
cli
aad
cs
cmpsb
cwtl
repnz
inc
mov
sbb
push
or
adcl
sub
jle
adc
call
sub
push
aas
out
adc
popa
mov
shl
push
lock
xor
mov
out
clc
pop
cmp
cmp
or
and
xor
mov
mov
nop
sarl
inc
enter
add
leave
pusha
adc
test
fstl
sub
lds
and
shll
roll
aaa
add
test
leave
cld
inc
xor
rclb
cli
in
cli
sub
or
inc
outsl
rcll
stos
in
mov
push
pusha
or
filds
cmp
ss
mov
aaa
add
or
push
popa
add
pop
jne
xchg
xor
and
mov
mov
sbb
test
nop
adc
inc
pop
lods
and
sub
pop
insb
and
aam
mov
xor
push
and
mov
test
mov
mov
adc
pusha
test
inc
shlb
mov
adc
and
add
pop
mov
adc
or
loope
pop
mov
xor
and
and
jle
aaa
mov
shl
sub
repz
jne
subl
subl
adc
scas
cmpsb
push
add
add
ss
lahf
decb
loopne
loopne
lock
xor
dec
call
outsl
push
mov
inc
mov
and
fwait
cld
inc
xor
adc
cmp
lods
add
jg
test
push
stos
cli
adc
pusha
pop
in
jmp
xor
bound
inc
inc
fldenv
sub
pop
bound
mov
pop
add
icebp
aas
mov
add
mov
sbb
stc
loopne
mov
imul
arpl
cmp
jnp
cs
mov
mov
cld
enter
movsl
push
push
insl
add
adcb
sub
fwait
mov
stos
push
cmpsb
mov
jne
mov
and
or
mov
mov
pushf
idiv
jae
mov
add
in
add
jb
or
inc
sub
ss
add
orl
inc
or
ss
js
loopne
or
int3
add
adc
pushf
push
lock
or
add
xor
push
inc
xor
aad
jl
pushf
and
adc
stos
and
xchg
mov
lock
adcl
and
push
mov
nop
mov
es
jne
icebp
pop
or
in
orb
in
jb
rcl
mov
mov
xchg
shll
adc
fists
inc
repnz
ret
loop
stos
and
cwtl
mov
in
or
test
adc
sbb
push
aam
insl
fimuls
xor
xchg
rorb
xchg
in
fisubl
inc
in
insb
ljmp
inc
inc
mov
or
push
inc
mov
cmp
add
ret
jne
ljmp
fiaddl
sub
ficompl
mov
pop
mov
icebp
nop
les
out
cmp
add
lret
shlb
inc
dec
es
xchg
dec
loopne
push
sbb
pusha
cmp
loopne
or
mov
mov
lret
es
xor
inc
mov
add
mov
inc
lret
mov
in
pop
jne
shrb
out
mov
xchg
mov
ficoms
inc
add
jo
mov
push
bound
and
bound
es
es
inc
push
mov
js
rolb
aad
mov
andb
adc
mov
push
mov
mov
inc
mov
shlb
sub
add
or
clc
and
jns
addb
mov
lret
mov
mov
inc
inc
push
sahf
jg
fdivl
inc
mov
or
jo
cmpsb
ret
decl
pushl
rorw
pop
xchg
push
or
push
sbb
xchg
popa
add
pop
in
mov
popf
sub
inc
rolb
test
out
mov
jl
andl
out
dec
filds
mov
pop
rolb
xor
push
jg
call
jmp
rol
adc
cwtl
pop
jle
scas
je
std
cmpsb
negb
xchg
int
inc
lock
mov
fiadds
mov
dec
cli
sarl
call
dec
sub
hlt
test
or
loop
mov
and
jbe
push
inc
dec
nop
incb
inc
adc
loopne
lock
xor
xor
push
outsl
jmp
push
loop
jle
popa
push
loop
inc
ljmp
and
rorb
mov
fadds
imul
add
pop
es
ret
test
inc
in
xchg
pop
orl
loopne
divb
test
stos
clc
fldl
jo
loopne
mov
test
nop
mov
or
sub
sub
mov
push
or
xor
jno
adc
push
in
push
sbb
add
adc
pop
pusha
loope
loope
push
jbe
jecxz
push
clc
call
insl
jg
pop
addr16
xor
div
add
mov
jp
mov
sbb
and
add
jb
cli
popf
pop
pusha
add
inc
xchg
push
pop
jle
cmpsl
push
sbb
rcll
push
mov
inc
pop
fbstp
test
adc
shll
rclb
inc
add
je
add
add
and
rolb
lret
mov
pop
pop
mov
lock
aam
and
lea
jp
sub
inc
push
xor
stos
or
inc
movb
sbb
inc
mov
das
mov
dec
push
lock
jecxz
push
sbb
sub
lcall
mov
push
cwtl
cmp
dec
push
cmp
repz
add
inc
push
inc
sbb
push
push
inc
mov
rorl
pusha
arpl
lcall
rcrb
xchg
outsb
roll
and
jg
loop
es
inc
frstor
addr16
cmp
mov
mov
inc
filds
and
ss
push
daa
push
in
xchg
and
movsl
fdiv
loopne
mov
add
push
loop
call
faddl
jge
jae
add
add
and
dec
pusha
outsb
mov
mov
or
jne
xor
sbb
cmpb
adc
lret
and
push
shlb
lods
adc
xor
imul
adc
xor
sub
shlb
and
mov
scas
adc
sbb
in
xchg
pop
mov
jg
ret
inc
lds
push
sbb
test
shlb
jne
pusha
and
adc
push
or
inc
dec
cmpb
adc
adc
mov
dec
mov
inc
stos
imul
mov
out
push
push
std
add
mov
daa
in
mov
pop
pop
clc
jecxz
mov
pop
div
outsb
xchg
add
add
aaa
sbb
fcmovnb
mov
mov
cmpsl
rorb
sti
inc
in
jg
rclb
ja
pop
and
mov
or
push
inc
mov
add
mov
enter
inc
xor
dec
addb
add
push
xchg
lea
or
shlb
mov
bound
add
mov
lock
loopne
addb
or
mov
and
dec
adc
lock
or
adc
cld
es
cli
shlb
sub
jbe
test
lahf
mov
inc
mov
jno
xor
push
mov
pop
add
xor
xor
mov
add
mov
push
rcl
mov
pop
pop
add
add
adc
cmpsb
scas
cli
add
repz
push
add
push
insl
jmp
inc
ret
push
mov
ss
add
loop
pop
pop
in
les
pop
fisubs
or
sti
mov
adc
mov
sarb
or
sub
imul
incl
mov
cs
cmp
fcmovnbe
leave
mov
jg
idivb
in
sub
cli
jno
jns
bound
les
stos
and
in
mov
mov
add
mov
fidivrl
loopne
sti
call
sbb
mov
cmp
jecxz
rcrb
adc
xchg
mov
mov
out
jbe
push
test
sbb
add
add
inc
and
cmpsl
xchg
push
xchg
dec
aam
jp
push
inc
js
sarl
xor
fdivrp
jg
lcall
adc
sbb
psubusw
ljmp
push
fstpt
add
add
addr16
xchg
and
and
push
fidivrs
xor
test
aad
push
and
and
das
sub
ja
decl
inc
popa
cmp
mov
and
sub
in
divb
add
add
cmpsl
add
push
push
shl
mov
xchg
mov
les
addl
sub
and
mov
push
inc
imul
sahf
and
ss
add
mov
mov
mov
add
cmp
mov
push
cwtl
mov
mov
leave
and
mov
fisttpl
popf
es
cmp
subl
cld
mov
fnstcw
cltd
cs
push
mov
or
fildl
icebp
push
lods
cmpsb
push
xor
popa
inc
lahf
and
or
push
inc
adc
add
jg
sbb
and
std
lds
add
pop
in
push
subb
fptan
outsl
movsl
pop
dec
fcompl
aam
inc
push
mov
adc
cmp
mov
call
in
mov
andb
or
adc
stos
mov
mov
add
and
test
sub
add
add
push
xor
push
jl
mov
mov
idiv
aad
insb
lods
sub
cli
andb
push
orb
adc
add
aam
dec
bound
inc
lock
dec
insb
outsl
add
xorb
mov
cld
ljmp
bound
inc
lcall
dec
add
jo
test
je
xchg
hlt
add
enter
test
mov
ret
mov
sbb
and
mov
xchg
stos
mov
imul
es
xchg
and
and
inc
divb
dec
es
nop
xor
xchg
ss
inc
je
push
inc
fxch
inc
stos
mov
adc
mov
jmp
leave
pop
ret
jo
arpl
aam
and
icebp
pop
or
rcll
cmp
in
cmp
arpl
xchg
std
outsb
add
stos
frstor
pop
sarb
sarb
or
inc
pusha
ret
xchg
into
faddp
ret
and
lret
cs
pop
sahf
pop
mov
or
inc
scas
in
stos
mov
loopne
sub
sar
fiadds
rorl
repnz
cmp
rorb
cmc
mov
scas
push
adc
push
inc
add
inc
pop
inc
mov
fadds
xor
xchg
or
mov
imulb
cld
push
data16
bound
mov
sub
sbb
mov
adc
aaa
pop
clc
cs
ja
cmp
and
add
sub
cwtl
sub
lret
and
add
xor
mov
push
test
dec
fnsave
addb
add
or
shr
push
cmp
push
xor
icebp
push
cs
or
add
dec
sub
aad
or
or
pop
push
xor
and
mov
cmpsb
icebp
pop
add
addl
or
jo
inc
stos
lcall
pop
fistpll
jne
lds
mov
pop
add
fimuls
add
fidivs
shl
add
sti
cld
mov
mov
inc
hlt
mov
add
cld
and
add
pop
leave
cmp
ds
adc
scas
cmpsb
ljmp
or
popa
jmp
adcb
jl
jl
loop
cmpsb
fcomps
pop
adc
push
push
or
hlt
inc
xor
pop
fistps
add
jmp
xchg
sub
mov
movsb
add
jl
mov
call
sahf
or
add
mov
jne
ja
mov
in
je
pop
imul
mov
push
xor
js
mov
loopne
add
popa
call
int
lock
xor
cld
std
cmc
hlt
lock
pop
jae
gs
call
outsb
add
add
add
adc
mov
lods
sub
jne
xchg
dec
insb
sub
subb
xchg
adc
loopne
lret
add
mov
outsl
push
lock
jecxz
call
fs
pushf
in
add
and
stos
dec
roll
mov
mov
dec
test
test
pop
aad
fisubl
lcall
icebp
dec
mov
and
bound
jmp
inc
cmp
pop
adc
int3
ret
into
inc
adc
dec
orb
pusha
pop
nop
pusha
jnp
imul
adc
push
scas
cmp
and
xchg
sub
push
shlb
mov
push
inc
enter
inc
xchg
inc
test
and
mov
test
fcom
dec
rorb
xorl
and
mov
pop
dec
pusha
sub
pop
inc
dec
les
fcomip
outsl
es
add
dec
mov
mov
data16
imul
enter
or
fmuls
xor
scas
xchg
mov
std
and
sbbb
call
pusha
addl
cs
add
push
imulb
pop
mov
stos
dec
leave
inc
es
repnz
add
daa
sub
mov
aaa
or
lds
roll
cltd
push
push
lret
ret
and
adc
xchg
outsb
cmp
mov
xor
out
inc
mov
paddw
push
mov
add
add
or
and
dec
mov
fstpl
mov
and
mov
mov
mov
push
add
and
pop
mov
dec
inc
fildl
pop
loop
stos
add
mov
lods
jecxz
pop
ja
sub
add
jbe
push
std
jne
adc
add
add
or
pusha
adc
push
xor
push
push
in
dec
in
pop
testb
pushf
out
adc
xchg
push
imul
pusha
in
loope
xor
push
pop
cmp
pop
xor
arpl
xchg
mov
out
mov
pusha
adc
in
inc
ja
clc
popa
add
clc
test
and
in
adc
loopne
mov
sub
fisubl
push
xor
sbb
add
push
mov
imul
adc
mov
xor
add
jo
loopne
icebp
add
and
add
fcoml
notl
jo
push
jp
sub
test
fldt
add
jno
jne
jns
dec
xor
lock
inc
adc
push
fimull
sbb
imul
jmp
xor
das
lret
fistl
pop
xor
rcll
sub
stos
outsl
lods
jne
mov
add
icebp
push
std
or
add
or
cwtl
mov
stos
popf
add
test
mov
mov
mov
add
mov
sbb
mov
add
pop
inc
jnp
mov
sub
add
subb
mov
sbb
sbb
call
test
xor
lods
mov
sub
pop
bound
repnz
rorb
sub
mov
jecxz
add
pusha
xchg
pusha
xor
mov
dec
outsb
mov
test
pextrw
pop
mov
stos
stos
add
push
jns
test
add
mov
ljmp
sbb
jg
lods
fwait
out
std
jg
add
je
xor
add
jp
jo
mov
das
out
pop
shll
jo
shl
adc
add
in
xchg
lds
dec
push
repz
jg
lods
jo
mov
add
xor
mov
sahf
dec
add
pushf
lock
pop
sti
inc
push
in
cmp
add
inc
sbb
out
xor
aaa
mov
adc
mov
lock
popa
or
sub
lock
mov
aad
mov
lock
mov
stos
push
mov
stc
adc
in
shl
xor
push
pop
loope
or
jmp
xor
loope
mov
jne
sub
in
mov
add
cs
jns
lock
pop
repz
jne
xchg
xor
lahf
out
push
inc
cmp
push
std
add
mov
add
pop
xor
inc
xor
xor
dec
jae
ja
jnp
mov
push
mov
icebp
cmc
stc
xor
shll
jno
sbb
adc
pop
andl
shl
push
push
cmp
imul
out
sub
insl
push
add
push
ljmp
jno
and
sbb
cmp
mov
cmp
sbb
dec
mov
dec
jle
aad
fnsave
stos
add
int
lock
or
sub
rolb
icebp
stos
stc
xor
aad
push
pop
jne
jnp
mov
lds
addl
add
xor
sbbl
out
repnz
addr16
jo
mov
push
jge
icebp
mov
hlt
lret
xchg
jo
stos
xchg
or
popa
pop
jno
add
mov
push
fnstenv
push
rcll
sub
xor
add
or
xchg
mov
dec
jmp
add
addr16
or
jg
std
and
jge
lock
fdivp
xchg
je
xor
and
push
pushf
ss
fstps
frstor
fnstcw
lcall
sub
movsb
into
xor
out
mov
xchg
add
xchg
sbbb
mov
cs
add
cmp
aas
add
add
sbb
sub
or
xchg
cmp
lods
fildl
push
dec
add
fimull
ret
add
sbb
lret
push
iret
add
movsl
sub
inc
push
inc
add
add
aam
pop
mov
xor
inc
inc
bound
add
je
outsl
fidivs
hlt
stos
js
jl
add
add
stos
mov
rcrl
sbb
lods
sub
xor
cmpsl
icebp
pop
mov
rcr
stos
xor
cmp
and
xor
shrl
aam
imul
outsl
lods
cmpsb
mov
add
add
stos
xor
sarl
rdpmc
aaa
shll
sarl
aas
and
sub
xor
das
rcl
fcmovnu
ret
xor
shll
lret
iret
repz
xor
sar
jmp
out
dec
shll
out
xchg
xchg
fwait
lahf
xorl
xor
mov
dec
sarl
jg
out
scas
push
cmpb
add
int
xor
dec
jae
jnp
xor
sarl
imul
xchg
adc
shrb
imul
aaa
cmpsb
imul
imul
cmpsb
imul
cmpsb
imul
imul
cmpsb
imul
mov
xor
lahf
scas
push
shlb
pop
inc
rolb
imul
imul
adc
push
sbb
xchg
or
or
xor
add
mov
or
inc
mov
inc
fistl
lret
xor
imul
idiv
sbb
mov
cmpsb
jns
and
daa
sub
xchg
pusha
add
sahf
push
ret
lretw
iret
dec
sarl
cmpsb
stos
aaa
scas
mov
loopne
xchg
or
add
xchg
xor
jns
mov
stos
push
dec
shll
add
pop
pop
inc
insl
lcall
jae
ja
push
lods
push
jnp
jg
test
pop
arpl
call
popf
mov
pusha
sbb
or
jo
cmpsb
jns
aaa
cmp
shll
sbb
xlat
shrl
dec
fcmovnu
movsb
add
stos
movsl
mov
stos
imul
scas
cmpsb
add
sbb
cmpsl
mov
sbb
sub
stos
movsl
mov
fiaddl
sbb
addr16
inc
pusha
sahf
imul
mov
mov
add
and
mov
sub
mov
xor
sti
sbb
jecxz
jmp
pushf
stos
xchg
andl
pusha
dec
sub
add
repz
mov
cs
jno
xor
nop
push
test
lods
push
push
adc
es
xchg
ret
mov
stos
inc
push
inc
sbb
jo
push
inc
jl
add
xchg
mov
xor
sbb
adc
xor
scas
add
or
mov
andb
mov
and
mov
or
stos
popa
aam
dec
push
lock
in
fsubrs
fsts
pop
mov
push
inc
mov
les
sub
call
mov
lock
jo
mov
incl
mov
in
lods
mov
add
add
fdivs
adc
addb
lods
pop
sbb
add
cmp
adc
fisubrl
xor
xchg
mov
adc
or
mov
fiaddl
scas
cs
mov
loopne
or
cltd
cmc
fbld
inc
push
or
inc
iret
adc
popl
sub
pop
push
jp,pn
and
or
push
push
fldl
add
inc
jmp
ja
cli
add
inc
movb
pop
pop
mov
mov
cli
shrl
add
scas
inc
add
fildll
icebp
add
add
xchg
add
adc
popa
ret
jg
jg
adc
jb
sbb
mov
push
loope
mov
mov
pusha
and
cmp
roll
lods
adc
and
add
adc
push
push
or
inc
lock
cli
pop
test
or
xchg
notb
popa
add
faddl
dec
mov
call
push
or
mov
fcmovnu
and
or
add
adcb
je
xor
adc
add
mov
sbb
cmp
movsb
outsb
sub
add
add
and
dec
dec
mov
or
std
in
hlt
sbb
add
test
xor
stos
adcl
std
ffree
and
push
fcomps
stos
enter
andl
lock
clc
das
call
push
pop
mov
mov
add
arpl
and
add
mov
or
les
xor
sub
test
rclb
sub
adc
test
inc
ret
fldt
adc
and
je
loopne
movsb
add
sub
sbb
sub
inc
scas
pop
mov
icebp
adc
pushl
cld
mov
adc
jno
addr16
add
ja
stos
rolb
add
fildll
incb
xor
push
adc
xchg
sbb
shrl
adc
lods
push
sarl
or
movsb
jmp
dec
cmp
sbb
sbb
inc
dec
call
mov
push
add
sub
or
adc
add
mov
xor
sbb
inc
mov
seto
sete
jecxz
mov
fdiv
add
das
hlt
outsl
in
mov
mov
inc
push
add
testl
bound
aam
mov
es
push
push
stos
aam
xchg
xor
aaa
cld
hlt
add
mov
sub
add
add
bound
int
inc
ret
push
add
or
call
sbb
push
or
bound
sub
mov
mov
mov
pusha
xor
icebp
imul
or
add
jo
or
stos
loopne
add
jg
flds
adc
rolb
xchg
shll
int
and
inc
loopne
in
jg
and
push
mov
incl
fs
push
nop
sub
and
dec
repz
and
pop
mov
add
push
lock
sbb
push
cmpl
jg
mov
mov
dec
jo
mov
or
push
es
or
mov
test
enter
pop
jae
dec
fists
in
and
push
mov
sub
and
xor
mov
nop
jg
aaa
jl
shll
fs
mov
inc
mov
imulb
cmpb
sbb
lcall
jg
adc
or
push
add
mov
mov
outsb
add
or
repz
add
lret
add
inc
push
and
push
cmp
adc
add
fidivs
mov
pop
push
push
inc
sarl
add
sahf
xor
push
xor
sbb
scas
pop
mov
in
inc
jmp
fdivr
inc
out
add
test
or
push
adc
popf
cmp
push
stos
mov
aad
push
or
pop
ffreep
pop
pop
sbb
push
or
xchg
add
adc
les
mov
inc
arpl
jb
xchg
mov
xchg
inc
sbb
add
push
add
mov
cwtl
and
add
xor
in
cmpsb
lret
and
sub
add
adcl
inc
fildll
add
insl
adcb
add
sbb
sar
cwtl
adcb
jl
and
lock
sbb
or
cltd
js
mov
or
scas
push
pop
xchg
or
ret
mov
mov
mov
fldcw
mov
and
dec
je
and
push
push
inc
dec
inc
sbb
cmp
xchg
xchg
or
insl
fstps
lahf
adcb
flds
xchg
add
push
xchg
sar
lods
ljmp
mov
sbb
ret
or
outsl
jle
push
xchg
nop
mov
and
and
decl
test
dec
mov
push
inc
jp
scas
mov
xchg
imulb
push
enter
inc
in
push
jge
aad
add
pop
mov
push
add
bound
push
adc
aaa
sbb
fsubs
jb
or
mov
outsl
push
into
inc
rorl
add
aaa
sbb
sar
and
insb
inc
add
dec
sub
andl
clc
out
jp
add
push
mov
std
jg
scas
cmp
add
addb
addl
or
stos
sbb
inc
push
mov
das
shlb
es
push
inc
pop
sarb
mov
mov
fnstenv
bound
sub
or
sahf
sbb
mov
mov
fstps
or
scas
mov
in
inc
sub
cltd
jmp
mov
ljmp
fnstenv
inc
mov
add
movsl
roll
mov
mov
fcmovnu
fisttps
mov
ret
punpcklbw
popl
mov
adc
daa
pop
sarb
mov
mov
cmpsl
and
test
sbb
int3
sbb
daa
mov
outsb
cmp
add
daa
and
inc
mov
mov
or
and
mov
or
es
subl
and
lahf
ret
mov
or
lds
mov
push
in
push
sarb
ds
dec
and
and
shrl
cli
inc
push
mov
pop
xorl
dec
insl
inc
and
arpl
sbb
dec
rcrb
sub
rcrb
mov
nop
pop
or
add
je
inc
xor
shrb
sti
push
jno
loopne
and
lds
push
sbb
adc
push
adc
or
pusha
add
hlt
cmp
push
sub
adc
mov
mov
adc
jb
adc
pusha
or
gs
out
dec
scas
inc
add
mov
dec
xor
dec
dec
or
jb
loopne
stc
lcall
aad
push
dec
or
pusha
adc
and
cld
adc
lcall
push
push
insb
fildl
mov
stos
adc
push
test
push
aaa
das
and
pop
loopne
notb
sub
cld
punpcklwd
and
or
mov
adcl
adc
test
jp
adc
inc
jecxz
xchg
xor
sub
add
and
adc
sub
mov
fiaddl
roll
xor
inc
inc
pop
xor
dec
xchg
sub
repz
popf
jmp
lret
sbb
fidivl
lret
out
mov
add
fisttpl
aaa
lods
push
fs
add
divl
or
mov
jno
xor
xchg
addb
sbb
pop
sbb
jp
jo
fadds
cmp
sub
or
out
dec
test
mov
aaa
js
jne
stos
out
and
mov
add
or
inc
push
jno
pop
push
sbb
psrld
sbb
jecxz
lods
mov
fwait
sbb
mov
stos
sbb
push
das
sbb
cli
imul
mov
xor
xchg
xor
jo
fsubr
lods
mov
data16
dec
fwait
adc
mov
jecxz
mov
loopne
xchg
xadd
push
pop
mov
cmp
imul
mov
pop
mov
jae
incl
or
outsl
jo
icebp
and
mov
addb
icebp
adc
mov
lods
es
cmp
xor
mov
lock
dec
aaa
arpl
outsl
xchg
sbb
ficoms
jo
jae
cmc
xchg
fwait
loopne
movsl
pop
mov
cs
jge
aaa
loope
pusha
test
mov
xorl
cmp
cmp
xchg
mov
push
lods
out
mov
sbb
xlat
out
cli
mov
icebp
mov
adc
clc
outsl
rorl
aas
sti
testl
jp
lea
lds
sub
hlt
mov
mov
out
inc
movsb
jne
scas
out
adc
cs
sbb
dec
mov
mov
xchg
inc
test
cmp
fs
mov
test
adc
pop
cmp
jecxz
push
jo
sbb
stos
jl
inc
addr16
test
adc
pop
inc
push
and
add
loope
iret
ja
into
xor
popa
loope
lret
and
inc
jo
push
popa
add
sbb
imul
stos
and
dec
sbb
inc
sub
adc
push
popa
and
and
imulb
shrb
push
and
shlb
sub
and
popa
sub
sub
push
sub
fcomps
ret
rorl
pusha
or
inc
pop
es
inc
pop
push
add
dec
xor
push
adc
daa
xchg
daa
repnz
loope
add
clc
jg
fldpi
ret
add
ret
lret
loop
movl
lods
aaa
push
movsb
fldz
fcomp
ret
sbb
lds
insl
sti
inc
adc
pop
test
adc
cmpsb
xor
push
mov
add
std
ffreep
sti
dec
mov
mov
aam
lods
call
sti
lea
popa
leave
call
and
pop
cltd
mov
jns
add
jo
loope
fidivrs
fucomip
ljmp
into
int3
shr
enter
jmp
add
mov
faddl
ret
adc
fld
inc
mov
cs
rcr
add
dec
int3
xor
pop
iret
jge
or
add
fistpll
fucomp
rol
xchg
add
add
add
dec
test
adc
enter
jb
test
enter
ret
fistl
shlb
orb
call
push
bound
fisttpl
mov
roll
or
sub
add
mov
in
mov
fwait
mov
xchg
adc
xchg
or
insb
incl
inc
out
shrl
fistpll
in
adc
cmp
and
add
adc
inc
push
subb
xchg
es
sub
fs
adc
xor
xor
call
dec
scas
dec
das
xor
xlat
enter
mov
lods
add
dec
xchg
and
cld
mov
outsb
add
fiadds
icebp
add
pop
inc
add
pop
fsubrl
dec
add
in
xor
test
fsts
adc
shlb
inc
pop
nop
pop
cmpsb
push
or
xchg
pushf
mov
inc
sbbl
lret
jg
push
pop
pop
aad
loope
mov
or
jb
loopne
sbb
loopne
xor
and
ss
filds
imul
es
sub
test
xor
fmul
push
cmp
addl
adc
push
jecxz
aad
add
ds
jle
mov
add
fsubrs
add
inc
test
nop
repnz
pop
into
std
add
xor
fidivs
loopne
push
js
add
add
wrmsr
add
ret
sub
scas
loop
mov
add
xchg
test
mov
push
fdivr
clc
and
das
clc
pop
cmp
add
sahf
lahf
jno
mov
xor
and
xchg
lock
add
fwait
clc
orb
inc
test
lds
ret
sub
in
loopne
leave
fadds
in
lcall
push
mov
subb
addl
decl
adcb
iret
push
fcomp
sahf
or
sbb
andb
fiaddl
jle
bnd
loope
ljmp
nop
cs
cld
mov
mov
popa
cmp
nop
fdivr
scas
loopne
das
adc
pop
enter
clc
mov
mov
or
cmpb
test
add
sbbb
add
pop
sbbl
test
mov
sarl
jmp
les
test
fucomp
lahf
push
jno
inc
ret
filds
sbb
sbb
outsb
xchg
aam
sbb
incl
inc
or
lds
pop
shrl
decl
add
enter
pop
lds
adc
mov
cli
insl
mov
cmp
int3
inc
pop
lret
rcll
adc
cmp
pop
add
aaa
sbb
inc
add
cwtl
call
push
mov
les
adc
popf
push
mov
xor
sub
stc
push
je
or
insb
jp
fisubrs
stos
addb
in
movsb
in
inc
fldl
add
sub
sbb
jg
flds
inc
or
inc
mov
or
loopne
fwait
mov
push
insb
add
in
out
movsb
jle
std
fnstcw
inc
mov
orl
xchg
test
loopne
mov
push
add
and
int3
sar
and
ret
add
call
add
test
fadd
decb
pusha
adc
shl
arpl
fbstp
inc
push
xlat
add
adc
stos
fisubl
lret
loop
xchg
add
int
enter
adc
ret
rorb
add
inc
add
cwtl
enter
mov
cs
ja
sub
add
fldenv
hlt
cmp
xor
inc
and
mov
push
fs
or
cli
mov
push
jo
cs
fdivs
out
mov
test
ret
outsb
and
adc
fs
ret
dec
push
dec
imul
addb
and
clc
xchg
call
sbb
and
out
push
jecxz
push
dec
std
lcall
and
and
sbb
add
xchg
and
xorb
movsl
or
sub
dec
inc
dec
add
and
incl
aas
sbb
or
inc
pop
sbb
les
and
pop
xchg
push
or
add
or
outsb
loope
aaa
adcl
and
or
stc
and
or
lret
into
ret
loopne
shlb
call
loop
and
dec
mov
loope
push
ret
cmp
push
sahf
pop
movsl
add
outsb
and
dec
inc
mov
or
adc
fdiv
xchg
bound
test
cmpsb
jg
pop
mov
lret
int3
add
dec
clc
in
xchg
jg
dec
fdivs
loopne
push
popa
push
jecxz
stos
inc
in
imul
insb
cmpsl
aaa
arpl
mov
jno
cmpsl
add
andb
pushl
sbb
xor
inc
lods
outsb
test
add
out
inc
sub
out
jmp
lret
push
sarl
into
clc
scas
clc
out
add
adcb
xor
and
enter
add
pop
push
pop
in
adc
fiaddl
loopne
xchg
mov
cmp
ja
adc
add
xchg
add
loopne
call
or
add
fiaddl
inc
cmp
idivb
or
push
push
xor
arpl
roll
push
shrl
adc
scas
movsb
jg
inc
call
push
mov
cltd
decb
test
dec
inc
lea
fldt
mov
andl
xor
pop
mov
mov
sub
or
or
inc
pop
dec
dec
lock
add
pop
ds
daa
pop
loope
call
out
mov
call
add
add
pop
int3
inc
dec
add
call
xchg
add
or
pop
or
fadds
or
inc
mov
into
rcr
mov
cld
add
leave
and
popa
and
and
lds
sbb
add
aam
dec
clc
pop
push
scas
stc
je
sar
outsl
push
dec
push
push
shll
mov
lock
lock
cmp
push
sti
outsl
nop
lret
jae
xchg
sbb
scas
pop
mov
push
loopne
fdivrl
xorb
xchg
jb
arpl
and
lock
and
icebp
push
or
xor
pop
or
andb
add
inc
je
cld
clc
push
or
ret
lret
fwait
push
test
jmp
out
clc
call
test
sarl
push
or
and
cmpsb
pop
lret
jno
std
das
js
push
ficoms
aam
push
mov
daa
jecxz
mov
lock
mov
test
out
lret
popa
sbb
cmovb
jmp
pusha
dec
and
pusha
mov
cmpb
sahf
hlt
add
add
adc
add
mov
add
rolb
jo
pop
jo
dec
cwtl
clc
cmp
sbb
mov
in
push
sub
enter
pusha
mov
pop
cmc
pop
loopne
in
pop
push
adc
cmp
je
lret
cli
cmp
add
into
sub
pop
into
enter
add
pop
add
push
ss
cld
add
dec
arpl
je
xchg
add
xor
mov
jle
out
cli
pop
inc
scas
ret
and
rclb
loopne
fisubrs
js
and
fcomip
fistpll
fldl
clc
mov
or
sbb
fldt
mov
and
push
in
scas
and
add
call
call
xor
adc
xchg
add
ret
jo
test
or
sbb
das
mov
mov
mov
xlat
icebp
add
inc
and
jl
call
cli
pop
shll
das
inc
inc
sub
push
into
aaa
xchg
mov
hlt
in
sub
cmp
add
adcb
jmp
lock
lcall
sbb
mov
loopne
fmulp
dec
xchg
das
mov
in
aas
sbb
lret
xor
icebp
loope
lods
incl
and
pusha
xchg
int
adc
push
or
mov
push
or
lds
add
cli
and
incl
add
adc
int
add
pop
mov
jp
pop
js
and
into
or
xor
push
aaa
mov
jno
je
subl
inc
lods
shll
sub
mov
pop
lock
jbe
call
xchg
push
pop
ret
es
and
adc
xor
lea
add
add
sahf
in
sub
mov
push
add
adc
enter
movsl
xchg
ficoml
shrb
or
ret
movsb
aam
push
adc
add
push
bound
into
fcomp
add
rcll
pusha
mov
stos
das
xchg
sub
out
fnstenv
std
pop
lock
aas
add
adc
add
jbe
and
mov
aam
dec
in
dec
push
xchg
jo
in
test
xchg
into
aaa
cld
jo
fwait
add
xor
data16
test
ret
push
push
add
pop
inc
add
inc
add
lret
outsl
dec
pusha
pop
enter
or
andb
popf
mov
or
in
lret
ss
pop
fdiv
pinsrw
adc
add
stos
push
lods
jb
push
fstpt
xor
shll
add
add
sbb
lret
icebp
sarb
push
fisubrl
sbb
lret
insb
fnsave
mov
jb
cmpsb
sbb
xchg
or
inc
or
pop
xor
fldenv
hlt
pop
xchg
or
push
popa
and
jno
call
pop
lock
pop
add
and
das
les
shlb
adc
and
nop
or
fisttps
and
jne
add
or
sbb
leave
rcl
jp
shlb
mov
mov
std
xorl
in
fdivrp
add
push
cmp
jl
movb
sti
add
mov
js
mov
leave
scas
xor
fmuls
cmp
rolb
in
std
in
add
outsb
pop
mov
cld
fadd
mov
or
mulps
pop
mov
in
icebp
or
pop
mov
push
push
adc
enter
add
test
jecxz
test
adc
js
mov
into
push
lods
fsubr
mov
sbb
xor
mov
fistps
ficompl
pusha
xor
pop
pushf
mov
out
add
clc
ret
faddl
or
int3
testb
push
jle
push
xor
lods
jmp
fcmovnb
and
js
lret
adc
ret
in
loopne
sbbb
ret
mov
mov
sub
lock
out
mov
orb
or
or
or
dec
lea
test
call
pop
sbb
mov
fsubrl
jbe
ret
xchg
adc
mov
xchg
sbbb
clc
mov
loope
sub
sbb
in
adc
mov
in
inc
shrl
jo
ret
push
fnstsw
clc
fadds
movb
jae
or
in
mov
clc
in
push
fldt
lds
inc
lock
shlb
enter
outsl
ljmp
test
lods
sbb
stos
inc
or
inc
pop
add
jmp
fbstp
inc
and
add
aam
and
add
sbb
outsb
sbb
cwtl
les
or
dec
aaa
mov
ret
mov
ret
sbb
outsl
push
xchg
inc
add
movb
xor
sub
lcall
lret
in
inc
xor
or
dec
push
scas
fcoml
fdivl
sarb
xchg
lds
clc
lds
pop
out
rolb
jg
data16
inc
int3
fldt
add
popf
les
cmp
roll
rclb
incl
jecxz
sbb
lds
xchg
andl
ss
push
sbb
les
enter
jno
or
fisttps
lret
or
pop
inc
inc
movsb
sarb
adc
pop
ret
add
sub
pop
push
mov
loopne
or
jg
ficomps
pop
les
mov
roll
add
add
add
int3
leave
leave
inc
movsb
lret
sub
and
cld
xchg
data16
incb
shlb
fcomp
mov
or
pop
enter
mov
xchg
bound
adc
fisubl
add
and
fidivrl
movb
jle
loope
in
or
mov
mov
es
repnz
push
std
push
je
pusha
sbb
and
js
xchg
lret
clc
insl
xchg
test
arpl
mov
add
jecxz
dec
inc
aam
sub
sub
stos
mov
add
inc
xor
mov
cmc
mov
decl
add
inc
adc
or
push
icebp
push
mov
dec
add
stos
jecxz
xchg
jl
adc
and
jbe
sub
mov
rclb
std
stc
test
fsubrs
mov
subl
dec
push
orb
outsb
hlt
mov
push
lea
jp
inc
out
add
sbb
in
and
shlb
int3
dec
js
jg
movsb
fwait
ret
cmp
cmpsb
add
or
paddsb
adc
push
int3
lret
fisttpl
loope,pt
inc
rdmsr
scas
out
add
mov
or
inc
dec
mov
adc
adc
bound
out
xorb
nop
enter
ret
pop
push
sub
ljmp
mov
dec
adc
shrb
or
in
and
and
cs
or
cmpsb
or
ds
nop
or
cmp
loope
xor
cmpsl
push
mov
ret
loopne
and
fisubs
fbld
andb
dec
les
out
xchg
adcb
arpl
add
push
scas
mov
shr
sbb
mov
push
sbb
inc
in
inc
nop
outsl
add
stc
bound
in
clc
test
stos
inc
fs
mov
enter
in
sbb
in
ffree
cmp
fucomip
mov
add
push
push
jo
mov
or
repnz
add
mov
inc
test
fst
inc
sbb
sub
and
bound
xchg
scas
and
jg
mov
push
scas
cwtl
repnz
loopne
add
add
rcrl
test
or
and
les
addb
iret
xorb
jecxz
ficompl
rolb
flds
in
fmuls
iret
fmul
jecxz
mov
fnop
data16
jbe
add
dec
cwtl
dec
std
addl
xorl
rol
inc
sbb
nop
push
andb
inc
clc
dec
add
test
sub
push
adc
repnz
cmpsb
popf
push
cmp
jmp
add
clc
outsb
adc
jg
in
push
sbb
adc
and
mov
pop
aaa
or
push
jle
cwtl
inc
add
not
cmpsb
add
inc
jo
pop
pop
or
mov
movsl
xor
pop
ret
and
test
mov
pushl
add
std
outsb
mov
mov
ljmp
rcr
and
test
and
popa
dec
clc
xchg
add
outsl
jle
in
lea
sbb
xchg
mov
lock
mov
and
mov
cs
fdivrl
add
out
mov
ljmp
adc
inc
sub
mov
in
adc
push
in
aad
outsl
and
or
dec
and
call
pop
sub
pop
fisttpll
shr
adc
loope,pn
and
push
inc
roll
cld
out
or
loopne
movsb
jle
dec
popa
pop
test
mov
fbld
dec
push
or
jns
pop
inc
dec
out
cmp
cmp
mov
push
mov
mov
push
cmp
mov
pop
std
sub
fcomp
add
dec
or
loopne
cwtl
adc
inc
add
outsl
push
lock
push
add
testl
or
jo
or
lcall
and
es
lock
add
pop
cmp
mov
xor
lock
ret
loope
out
clc
fisttps
scas
dec
imul
orl
cmpsl
jp
fstl
das
clc
mov
push
xchg
test
cmp
mov
movb
push
mov
xchg
jge
mov
ljmp
inc
cmp
pop
fmuls
sbb
add
inc
xchg
sahf
nop
adc
xlat
and
lock
cld
js
adc
xchg
xor
arpl
sub
and
mov
mov
fs
aas
adc
xchg
fsubrs
xchg
lock
jmp
aaa
add
insb
lods
mov
ljmp
nop
dec
adc
xchg
pushf
mov
xlat
xchg
int3
clc
hlt
insb
rorl
mov
mov
andb
adc
sub
or
inc
adc
mov
add
dec
adc
shr
jge
decb
xchg
into
stos
popa
mov
stc
fisubrl
push
cmp
nop
cmp
xchg
mov
into
mov
pushf
inc
jmp
mov
xchg
mov
dec
mov
pop
and
cmp
cmc
xchg
xchg
loopne
data16
dec
sub
jb
call
xor
lcall
mov
mov
inc
cmp
lcall
cmp
adc
ja
das
or
sbb
mov
hlt
mov
sbb
rcrb
jg
test
hlt
test
enter
xor
testl
cmp
adc
cs
mov
out
iret
push
mov
add
sarb
jg
test
ret
sub
pop
mov
adc
arpl
sub
add
mov
sar
mov
sbb
push
adc
sar
add
sbb
dec
mov
mov
ret
mov
or
or
mov
sub
test
fs
aaa
xor
fbstp
ss
in
add
mov
xor
add
fldenv
pushf
pop
xchg
xor
jb
xor
divb
and
cmp
js
mov
xchg
push
add
lods
push
addr16
xchg
add
add
decl
insl
loopne
xchg
sub
xor
or
std
nop
or
outsl
call
or
or
push
xchg
out
or
out
or
inc
mov
mov
in
or
xor
outsl
and
cld
dec
in
cmp
insb
sub
in
aas
mov
add
push
add
dec
repz
roll
add
or
inc
add
mov
lcall
sbb
add
xor
push
jb
movsl
test
test
addb
cmp
and
add
fildll
cmpsb
fnstcw
fldl
mov
mov
ds
mov
out
call
adcl
stc
icebp
xchg
leave
xchg
rcll
rcll
cmp
xchg
or
xchg
imul
inc
nop
movsb
adc
cld
in
outsl
add
xchg
mov
jmp
xchg
icebp
leave
xchg
rcll
xchg
shrl
xchg
and
xchg
add
clc
int
cld
xchg
popa
xchg
jns
jno
xchg
inc
xchg
pop
xchg
push
test
xchg
stc
fisttpl
xchg
cltd
xchg
mov
stc
xchg
dec
sbb
rcll
xchg
push
aam
int
mov
sbb
xchg
jns
xchg
push
movsb
dec
inc
xchg
pop
xchg
push
test
idivb
or
lods
xor
popf
mov
outsl
inc
push
clc
popf
mov
jmp
outsl
out
popf
icebp
leave
popf
rcrl
and
out
decb
popf
add
popf
popa
popf
jns
jno
popf
inc
popf
pop
popf
push
mov
pushf
mov
pushf
mov
jmp
fwait
mov
leave
pushf
rcrl
pushf
cmp
stc
pushf
add
popa
pushf
jns
pushf
dec
pushf
inc
pushf
pop
pushf
mov
test
lahf
lahf
mov
lahf
jmp
fwait
mov
leave
lahf
rcrl
and
stc
fwait
mov
sbb
lahf
jns
lahf
dec
lahf
inc
lahf
pop
lahf
mov
test
sahf
sahf
mov
sahf
jmp
cwtl
fsts
sahf
sahf
roll
dec
loope
push
roll
jg
mov
aam
sbb
popa
sahf
jns
sahf
dec
sahf
inc
sahf
pop
sahf
ss
cltd
mov
fsts
fldl
fists
out
dec
cltd
rcrl
and
cltd
add
mov
insb
imul
stc
fwait
mov
cwtl
mov
cwtl
jmp
cwtl
mov
cwtl
mov
cwtl
fstps
jo
cmc
adc
popa
int
cld
in
cwtl
jns
mov
pop
cwtl
cwtl
test
fwait
fwait
fwait
dec
sar
fwait
sbbl
add
fwait
imul
loop
icebp
pop
icebp
jg
mov
adc
in
shlb
add
loopne
or
loopne
pusha
lock
push
dec
stc
dec
add
dec
jge
xchg
sub
xor
fwait
ret
testl
stc
adc
addr16
ja
xchg
xchg
in
repnz
scas
add
test
int
push
xchg
insb
mov
aaa
fsts
inc
xchg
imul
popa
inc
int
mov
pusha
inc
scas
popf
mov
xor
popf
dec
sar
popf
rclb
cs
xor
test
loopne
ficoml
and
pushf
sahf
aad
or
sahf
adc
aaa
mov
xor
cltd
cmpsb
cwtl
out
cmp
sub
fiaddl
loop
and
dec
sti
mov
add
cwtl
pop
cwtl
and
insb
cwtl
fs
inc
pop
insl
or
cwtl
pop
cwtl
push
cwtl
test
add
add
xchg
and
data16
fwait
jge
js
ja
jb
dec
fwait
inc
aam
lock
push
fwait
mov
push
fwait
ret
add
mov
xchg
inc
adc
xchg
out
xchg
add
xchg
notb
xchg
sub
scas
test
int
mov
rcll
dec
xchg
pop
xchg
mov
add
xchg
xor
ret
and
fisubl
and
cld
fcmovnu
jne
fsubl
ficoml
cmp
nop
imul
adc
push
nop
scas
xchg
sub
jp
stos
dec
sub
xchg
aas
xchg
mov
push
xor
lahf
add
push
pop
dec
add
in
loopne,pn
add
jle
ljmp
fwait
cmpb
lcall
xchg
and
or
jbe
xchg
xor
dec
loope
push
xor
lods
aaa
xchg
or
dec
xchg
mov
xchg
cmpb
dec
inc
lock
xchg
jge
jp
scas
test
sarl
xchg
xchg
repnz
rclb
bound
mov
pop
xchg
cmpsb
rclb
ret
addb
loop
sbb
pop
popf
call
pushf
and
adc
call
lahf
add
test
pop
out
or
push
dec
loopne
add
setne
dec
add
lret
or
out
mov
xchg
dec
xchg
cmp
push
xchg
mov
nop
fcomip
mov
popf
nop
cwtl
nop
lea
cmp
or
scas
pushl
mov
and
pop
pop
sbb
cwtl
ljmp
xlat
lcall
movsb
loopne
jle
je
dec
xchg
push
xchg
mov
xchg
std
xchg
ret
xchg
xor
sar
and
pusha
sub
xchg
add
out
lock
into
popa
push
or
popf
sub
jg
fs
jne
pop
adc
pushf
pop
pushf
ja
pop
add
push
loopne
cmp
lahf
clc
sahf
adc
dec
insl
cli
cs
sahf
inc
adc
std
mov
xor
cltd
cmp
movsb
cwtl
mov
add
mov
call
sbb
jg
mov
loopne
adc
xchg
mov
adc
lcall
jne
xchg
jp
jo
pop
xchg
sbb
inc
xchg
push
xchg
mov
jo
push
std
test
sbb
mov
mov
sbb
xor
popf
inc
popf
cmpl
sbb
jbe
add
or
mov
iret
mov
sahf
xor
and
cmpsb
mov
test
cltd
jge
cmp
mov
divb
std
fwait
push
jecxz
inc
rcrb
lcall
loop
outsl
decb
lcall
lcall
mov
addb
sbb
or
xchg
inc
inc
add
pop
xor
xchg
adcl
repz
ret
fistl
xchg
test
nop
pop
pop
shlb
mov
inc
pusha
sbb
cmpl
pushf
adc
mov
ds
xor
cs
aas
sahf
outsl
inc
sahf
incb
in
cli
lcall
dec
outsl
adc
mov
mov
mov
cmc
adc
fwait
sbb
sbb
jae
push
fwait
movsl
lcall
lcall
aaa
sbb
xchg
nop
adc
xchg
enter
xor
inc
fwait
mov
xchg
mov
xchg
lcall
cs
pop
pop
mov
clc
adc
push
in
into
icebp
sbb
jmp
lock
popf
out
popf
es
cmp
mov
lahf
setg
movsb
jmp
outsl
nop
adc
mov
xor
cltd
into
fistps
lcall
cld
dec
pop
setbe
fs
ljmp
xchg
cli
xchg
pop
mov
xor
popf
addb
xchg
lahf
dec
cltd
lcall
std
out
xchg
fcoms
divb
sarb
jo,pn
lcall
inc
lock
cmp
les
inc
pop
xchg
sahf
xchg
adc
or
jne
jbe
xor
nop
lods
add
sbb
stos
cli
nop
dec
repnz
into
cwtl
or
cwtl
lock
ficomps
pop
dec
cwtl
rcrb
mov
cmp
cwtl
push
cwtl
or
adcb
cwtl
push
cwtl
adc
mov
pusha
push
push
adc
cwtl
jp
bound
dec
mov
and
cwtl
pop
cwtl
pop
lock
push
es
fwait
stos
fwait
cmpsb
fwait
mov
fwait
mov
sbbl
mov
dec
cs
out
negb
out
loop
fwait
cli
negb
lret
outsl
inc
fwait
ret
fcmovbe
fwait
pop
fwait
push
fwait
push
scas
lcall
fisttpl
lcall
mov
outsl
adc
add
adc
lcall
out
lcall
lcall
lcall
jno
mov
add
adc
ds
lcall
mov
xor
push
lcall
mov
aaa
xchg
dec
rcrb
push
add
jo
test
test
call
popf
out
lds
jle
je
mov
pushf
mov
mov
or
ficompl
and
cmp
add
repz
and
cmp
sbb
pop
pop
xchg
jmp
imul
pop
fimull
add
xchg
add
lock
insb
push
xchg
lcall
mov
pop
xor
adc
loope
daa
xchg
lods
xchg
pop
xchg
push
xchg
and
std
mov
es
add
sbb
jl
jno
mov
test
shlb
nop
jle
pop
fwait
pushl
mov
xor
nop
insl
rcll
sbbb
add
movsb
popf
pushf
popf
xchg
popf
aam
add
mov
pop
and
cmp
stos
pushf
push
in
negl
incb
adc
mov
push
cltd
loop
test
inc
dec
lock
or
cwtl
sub
cwtl
sub
test
lock
sbb
fwait
rcrb
or
call
push
mov
and
sbb
mov
lock
mov
xchg
xchg
ficoms
hlt
aaa
jg
xchg
daa
xchg
aas
add
xchg
pop
pop
xchg
push
xchg
stos
xchg
cmpsl
cld
lcall
mov
xchg
lcall
xchg
xchg
lahf
nop
sub
fcoms
jne
pop
cwtl
adc
adc
pop
incl
push
inc
push
nop
mov
xchg
notl
push
xchg
cmp
ljmp
sbb
cmc
popf
das
adc
jp
pushf
hlt
decl
push
pushf
outsb
pushf
xchg
sbb
lahf
icebp
adc
push
sahf
subl
pop
loop
sahf
sub
sahf
inc
sahf
pop
adc
cltd
and
pushl
cltd
or
cltd
cwtd
xchg
cwtl
fdivl
movsb
jo
dec
ljmp
fcoml
adc
jmp
xchg
enter
jo
and
aad
jg
xchg
popa
push
scas
xchg
movsb
sbb
pushl
xchg
into
adc
xor
xchg
or
shlb
xchg
dec
lock
insb
movsb
in
nop
enter
nop
dec
nop
push
nop
mov
sahf
xchg
notb
xchg
dec
lock
popf
stos
pushf
mov
adc
popa
incl
mov
cli
pushf
repz
outsl
jg
and
inc
pushf
pop
es
pushf
stos
adc
sti
or
rcrb
jbe
dec
lahf
mov
fadd
sahf
fistps
dec
sahf
mov
cltd
mov
cmp
pop
aam
rcrb
jecxz
std
adc
pushl
push
lahf
pop
cltd
aad
das
scas
xchg
arpl
mov
outsl
xor
pop
xchg
dec
jbe
or
stos
xchg
adc
xchg
ja
jbe
dec
jp
int
cmp
mov
jl
push
jmp
adc
sbb
mov
fcomi
xor
dec
int
incl
fnsave
inc
jle
xchg
xchg
sub
inc
xchg
jns
test
xchg
jo
sbb
xchg
adc
dec
adc
jo
dec
adc
mov
jns
xchg
cmp
adc
lock
jo
push
fnstcw
dec
popf
jns
inc
pushf
mov
add
ljmp
sahf
fmuls
sahf
test
xchg
cltd
gs
mov
xchg
jbe
decl
lea
xchg
adcl
xchg
add
jg
dec
rclb
dec
icebp
push
sub
adc
fs
adc
mov
scas
adc
clc
fisttps
rcrb
pushf
jae
pushf
dec
pushf
mov
out
repnz
fdivr
lcall
push
mov
lahf
outsb
lahf
data16
and
mov
negl
sbb
cltd
xchg
xchg
jo
inc
xchg
mov
add
xchg
cmp
xchg
adc
xchg
cmp
push
std
call
or
mov
sub
xchg
rcrl
clc
incl
xchg
mov
lods
shlb
xchg
jecxz
push
push
vmread
out
push
mov
lods
nop
mov
mov
xchg
loopne
hlt
nop
fstl
call
rorb
inc
rclb
mov
call
lcall
and
xor
addr16
inc
xchg
push
adc
sbb
lahf
xchg
sti
xchg
mov
xchg
js
cmp
dec
xor
popf
fwait
popf
and
nop
insb
int3
ss
or
call
popf
daa
popf
cmp
nop
test
sbb
adcl
hlt
orb
pusha
les
add
sahf
sar
ljmp
jle
lea
lret
xor
iret
cwtl
mov
jg
cwtl
daa
mov
jno
pop
movsb
fwait
mov
lret
fwait
add
fwait
lcall
push
dec
cmpsb
lcall
inc
lcall
jbe
push
dec
xchg
push
adc
xchg
jmp
leave
xchg
and
push
xor
dec
adc
cmp
xchg
sahf
xchg
xchg
sbb
sti
or
cld
int
adc
xchg
push
stos
xchg
mov
xchg
xchg
loopne
or
cmp
jmp
je
inc
xchg
loop
xchg
xchg
es
in
scas
adc
push
enter
fwait
jmp
hlt
pop
xchg
mov
sti
nop
push
adc
nop
clc
fwait
mov
nop
nop
sbb
test
xchg
iret
sbb
pop
sbb
xchg
push
movsb
jbe
jecxz
repnz
sub
push
xchg
data16
mov
add
cltd
cmp
adc
pushf
lods
pushf
push
pushf
mov
gs
push
jle
add
dec
mov
pop
adc
push
andb
lahf
mov
adc
lahf
in
pop
fwait
int3
ffreep
lahf
fistps
push
lahf
rclb
jmp
outsl
adc
jp
dec
lahf
pop
pop
lahf
push
lahf
scas
sahf
cwtl
sahf
add
sahf
cld
sahf
cmc
sahf
rcrb
sahf
sbb
outsb
jo
je
push
add
add
aad
cltd
clc
adc
cltd
cltd
fstpl
cltd
and
bts
xor
mov
test
adc
cwtl
rcll
push
icebp
push
mov
push
cwtl
lods
fwait
dec
mov
inc
lea
shl
out
dec
add
ret
fwait
xor
fwait
dec
fwait
dec
sub
mov
movl
cmp
add
jno
stos
xchg
mov
jbe
pop
xchg
in
fists
rcl
aas
xchg
xor
pop
and
jne
inc
xchg
pop
xchg
mov
sbbb
push
cmpsb
sahf
pop
fbld
pop
mov
xchg
jne
jae
xor
mov
push
cld
xchg
out
xchg
or
aas
nop
adc
data16
inc
nop
pop
nop
push
aaa
jg
aaa
movsb
xchg
mov
das
xchg
ds
jbe
ficoms
dec
pusha
pop
xchg
hlt
icebp
lea
sbb
popf
lcall
push
sub
dec
adc
pop
aam
xchg
hlt
les
adc
pushf
cmpsb
lahf
mov
lahf
lcall
pop
lahf
dec
fstpt
sahf
xchg
sahf
cmp
or
jp
push
ljmp
cltd
lock
push
adc
xchg
sbb
bound
mov
xchg
rclb
or
sbb
xchg
sbb
inc
and
and
jle
add
adc
add
lea
add
popf
jle
outsb
push
js
add
popf
insb
dec
pushl
inc
jg
addb
sahf
neg
add
addb
pop
mov
xchg
cli
xchg
cmp
xchg
xchg
push
xchg
in
sub
fwait
add
scas
rclb
lods
push
push
das
clc
in
pop
popf
sarb
jle
lods
pop
push
add
dec
outsb
adc
push
lcall
cwtl
add
cwtl
adc
sub
mov
adc
jl
js
je
cwtl
dec
cwtl
dec
cwtl
inc
inc
rol
xchg
dec
pop
cwtl
push
cwtl
sub
ja
outsl
scas
cli
pop
inc
sarb
and
test
in
cwtl
fwait
xchg
adc
fwait
in
and
cld
fwait
clc
fwait
hlt
js
int3
stc
fcmovnu
fwait
enter
fdivrl
fcomps
sub
sub
cmp
xor
mov
xor
rolb
sub
sbb
xchg
dec
cmpsb
mov
xchg
xor
loopne
mov
xchg
and
inc
jnp
or
mov
mov
sbb
pusha
xor
inc
xchg
pop
adc
xchg
mov
mov
inc
xor
lock
jle
sub
adc
xchg
pop
xchg
push
xchg
insb
xchg
add
inc
scas
mov
mov
mov
xchg
out
nop
loope
pause
pop
mov
nop
fcoml
xchg
mov
adc
cld
outsb
xchg
xchg
pop
xchg
xor
dec
push
cld
ja
lcall
dec
popf
or
pushf
cwtl
and
lcall
sahf
and
mov
xchg
loopne
cmp
pop
cltd
test
and
xchg
or
dec
loopne
incb
scas
scas
xchg
iret
xchg
pusha
xchg
push
scas
xchg
stos
xchg
pop
cli
mov
or
mov
lcall
adcl
fsubl
mov
or
aam
xchg
xchg
xchg
out
xchg
std
adc
xchg
add
outsb
xor
xchg
and
sbb
push
xchg
cmpb
xchg
xchg
xchg
lret
pusha
sbb
jb
mov
adcl
nop
cmp
push
nop
stos
xchg
mov
xchg
push
xchg
fcoms
cwtl
xchg
cli
pop
aad
sbb
int3
push
js
int
dec
popf
popf
ret
xchg
in
lods
ljmp
mov
sahf
insb
sahf
inc
cltd
mov
hlt
cwtl
adc
mov
fwait
sti
dec
adc
je
ljmp
mov
js
xchg
sub
and
pop
loopne
mov
idiv
mov
sub
nop
es
pxor
xchg
es
xor
inc
in
push
push
or
inc
loopne
insb
lock
push
jne
mov
sahf
dec
ljmp
in
sbb
outsb
adc
push
js
jg
jmp
mov
cwtl
mov
add
fisubs
out
aam
mov
jecxz
adc
pusha
xchg
jmp
push
lcall
xchg
into
xchg
jbe
adcb
xchg
xchg
incl
or
jnp
mov
out
sub
jp
add
xchg
roll
stos
push
xor
xor
adc
or
outsl
adc
mov
cli
stc
adc
mov
xchg
mov
adc
xchg
push
sbb
xchg
arpl
pop
xchg
pop
lock
leave
pop
sbb
mov
adc
push
mov
jp
jae
dec
adc
pop
nop
fidivs
les
sti
xchg
lds
ret
xchg
mov
inc
xchg
mov
scas
loop
mov
push
adc
popf
sub
add
mov
cmc
lahf
inc
lahf
push
cmp
adc
add
mov
cmpsb
ljmp
lret
std
add
mov
clc
dec
fwait
mov
or
std
pop
lock
xchg
xchg
fmuls
xchg
or
push
jecxz
mov
add
xchg
fwait
test
jmp
xchg
cmc
adc
sub
popf
xchg
aaa
or
popf
in
add
add
pushf
cld
adc
dec
pushf
inc
adc
lahf
xlat
lahf
sub
clc
sahf
rcrl
fistps
sahf
adc
cmc
ja
mov
cltd
jle
ret
pusha
adc
mov
mov
mov
or
pop
int3
mov
cwtl
mov
mov
pop
fwait
imul
in
scas
in
push
pop
push
adc
lcall
nop
push
cmp
mov
imul
lcall
xchg
inc
xor
nop
dec
test
fbstp
rcr
pushf
out
mov
and
pusha
test
lahf
insb
lahf
jnp
cmpb
sahf
addr16
popa
shrl
jmp
inc
jp
pop
push
call
pop
adc
inc
lcall
cmp
xchg
inc
pusha
jmp
adcb
nop
push
nop
lret
pushf
xchg
mov
xchg
pusha
lcall
push
xchg
dec
adc
loopne
inc
xchg
mov
pop
fs
popf
push
cmpsl
in
jecxz
popf
cmc
mov
add
mov
fistl
pusha
stos
and
cld
mov
je
popf
push
adc
lods
popf
pop
sbb
push
push
mov
fcmovnu
js
pop
jb
xor
popf
pop
popf
push
popf
push
adc
pushf
mov
int
cld
pushf
mov
lea
cltd
pushf
xchg
xchg
pushf
out
pushf
in
loopne
jg
aaa
loopne
pushf
cli
pushf
icebp
push
lret
and
pushf
fstpl
mov
and
xor
pushf
xor
pushf
sbb
sbb
mov
enter
pushf
jns
fs
sub
inc
push
sbb
jnp
sub
mov
lahf
stos
lahf
cmpsb
xor
push
lahf
mov
test
incl
nop
lahf
out
and
call
imul
lahf
enter
jo
adc
push
inc
nop
lock
xor
jl
sbb
dec
jg
cmp
add
jge
lahf
cmp
jle
pop
xchg
sahf
adc
dec
cwtl
dec
movsb
scas
clc
mov
and
leave
lcall
xchg
lcall
mov
imul
inc
xchg
pop
xchg
mov
add
jb
das
stos
aam
xchg
test
call
sub
clc
xchg
xor
stc
push
sbb
popf
test
popf
sbb
jo
push
xchg
loopne
adcb
ret
pop
mov
insb
cltd
fmuls
pop
cwtl
xorl
push
xorb
ljmp
or
cmpb
icebp
ja
xchg
xchg
arpl
ja
inc
or
shll
ljmp
xor
cmp
sahf
mov
call
xor
sahf
cltd
cld
dec
push
cltd
out
push
movsl
out
scas
push
cwtl
cmp
sbb
push
sub
add
aaa
add
dec
lcall
xchg
inc
xchg
hlt
xchg
adc
mov
xchg
pop
xchg
and
cs
and
fistpl
sahf
ret
aad
sub
fstp
in
push
movsb
pushf
push
jmp
pop
push
pushf
lahf
lahf
xor
sahf
inc
push
ljmp
xor
lea
push
scas
adc
mov
sarb
rolb
ds
inc
inc
sarb
lods
xchg
sub
test
fstpt
add
mov
pusha
add
adc
xor
jbe
cmp
jmp
notb
or
sbb
bound
mov
lret
inc
dec
sbb
clc
push
pop
xchg
test
xchg
mov
adc
push
xchg
jns
cli
decl
mov
in
xchg
std
adc
std
mov
jmp
cld
xchg
fiaddl
insb
arpl
les
mov
push
ret
xchg
and
dec
xchg
scas
xchg
mov
bound
scas
add
cmpsl
sub
mov
mov
inc
or
popf
xor
jg
dec
inc
pop
push
mov
mov
push
stos
sahf
mov
ficompl
mov
xchg
sub
and
xchg
xor
xorb
lock
in
dec
lock
mov
push
add
adc
add
lock
and
xchg
in
cld
xchg
hlt
adc
cli
dec
xchg
rclb
stos
es
cmp
and
xchg
adc
outsb
xchg
addr16
or
inc
rorl
lock
push
cltd
in
pop
icebp
lea
and
lea
fisttps
je
in
xor
sahf
icebp
xor
shl
cmpsl
push
and
mov
or
sbb
add
sub
sahf
and
mov
and
lea
xchg
leave
adc
or
jg
jo
imul
lock
mov
push
and
lea
and
cmp
push
dec
addl
cltd
inc
loopne
or
and
xor
jp
cwtl
sbbb
adc
jns
dec
jo
subb
stos
loopne
outsb
mov
sub
or
insl
test
mov
fwait
or
fistpl
fbld
pop
fwait
push
fwait
push
or
test
lcall
pushl
lcall
popf
lcall
in
lcall
stc
lcall
and
lds
das
mov
lcall
or
add
lcall
add
imul
or
lret
sub
push
pop
stos
mov
cmp
jo
mov
add
xchg
addr16
add
lret
arpl
add
and
mov
sbbl
scas
add
insb
lret
xor
std
call
mov
add
pop
enter
sbb
je
bound
stos
call
sbb
ljmp
add
mov
add
movsb
data16
pop
icebp
pop
jbe
push
test
cmpsl
ss
add
jle
aas
lea
mov
sbb
add
or
mov
jbe
loopne
and
in
add
cmp
outsb
mov
decl
cmp
jle
int
mov
or
pop
out
shlb
cmp
mov
dec
icebp
aaa
or
add
xchg
jp
nop
ja
add
push
push
dec
dec
fistpl
mov
push
subl
dec
filds
xchg
je
addr16
mov
mov
mov
mov
pop
clc
xlat
pop
dec
and
xchg
fs
sar
decl
stos
shl
loop
mov
test
fistl
cmp
add
scas
xchg
mov
std
decl
dec
mov
sahf
out
aas
lret
jl
add
jge
pop
sbb
adc
ja
inc
fisubl
sbb
sub
add
pop
ljmp
add
mov
or
cli
ja
decl
sbb
or
mov
cwtl
leave
test
push
outsl
notb
add
xchg
aad
movsl
testb
shrl
andb
mov
mov
add
dec
sub
jg
hlt
aas
xchg
sbbb
test
sbb
les
add
decl
pop
or
popf
js
imul
cmpsl
pop
mov
call
pop
push
wrmsr
sbb
push
ror
sbb
sti
xlat
push
insb
cs
mov
clc
or
in
mov
sbb
cltd
xchg
inc
or
jg
test
adc
and
xchg
inc
negl
decl
push
mov
pop
xchg
add
and
add
lea
or
mov
xchg
aas
sub
cmp
out
mov
push
pusha
jno
push
out
xor
arpl
cmp
xor
fwait
add
call
fimull
add
sbb
push
fstpt
imul
fldt
inc
loop
int
xchg
jge
add
pop
bound
inc
mov
cwtl
sbb
out
decl
add
add
insb
pop
gs
dec
gs
outsl
jb
push
jne
jns
fucomp
jg
push
data16
outsb
arpl
outsl
jne
je
xor
fs
addr16
jb
push
jne
je
inc
jns
js
jae
push
gs
fisttpl
or
jb
dec
inc
gs
push
outsl
arpl
fstpt
inc
push
push
imul
push
test
mov
dec
fildll
in
insl
outsl
clc
insl
jo
gs
js
dec
outsb
addr16
mov
loopne
insb
dec
jbe
inc
push
inc
je
jge
popa
jo
mov
gs
je
imul
mov
outsb
mov
add
xor
mov
jge
in
inc
jb
xorb
xchg
outsl
outsb
xor
js
push
inc
mov
imull
mov
push
jae
insb
jb
outsb
push
cmpl
je
ss
add
jbe
and
sbb
dec
dec
bt
dec
fildl
roll
adc
inc
imul
mov
sbb
ss
push
mov
jae
ss
or
add
xchg
imul
push
push
xchg
negb
add
loop
jae
push
push
push
fmulp
jbe
sub
inc
and
inc
and
push
inc
jbe
mov
pop
mov
inc
inc
mov
push
jns
gs
mov
dec
or
push
fs
fidivs
lds
inc
mov
lahf
popa
bound
xchg
cli
jno
lea
addl
mov
dec
roll
dec
arpl
fmulp
cltd
xchg
push
add
push
and
cli
mov
jmp
lcall
push
jns
clc
cmp
and
insl
push
mov
xor
xor
push
jo
inc
inc
shll
sarl
adc
es
dec
outsb
inc
push
mov
sbb
inc
jecxz
jo
adc
pop
in
push
jnp
imul
and
add
outsl
inc
iret
push
insl
adc
cmp
mov
shll
push
push
cmp
imul
bound
daa
adc
xchg
adc
insb
sbb
jae
inc
jno
or
mov
add
lahf
mov
orl
xchg
mov
add
add
sbb
outsl
mov
stos
adc
and
or
js
sbb
inc
cs
add
ss
xor
imul
pop
xchg
or
push
push
sub
add
xchg
or
test
sbb
sbb
inc
jp
push
xlat
add
mov
or
push
xchg
or
ja
push
mov
cmp
push
fstpt
adc
nop
popf
jnp
mov
mov
mov
mov
pop
jns
sbb
rcr
mov
popaw
mov
inc
mov
adc
cld
mov
xchg
cmpsb
mov
shlb
mov
aaa
les
daa
mov
push
aaa
jae
inc
js
push
loop
jecxz
xor
xchg
add
insb
inc
andl
mov
outsl
xor
push
sbb
xchg
imul
push
pop
mov
xlat
and
insl
cmp
imul
pop
loope
nop
push
xlat
sbb
and
movsl
cmp
pop
pop
inc
add
sbbl
mov
movsl
test
inc
inc
rcrl
mov
add
incl
inc
sbb
cmpl
adc
and
adc
push
jbe
adc
addb
popa
divl
mov
inc
add
lea
inc
adc
add
fcoms
add
adc
push
inc
push
dec
cli
push
call
loopne
jne
add
lock
jbe
ds
sbb
imul
inc
inc
pop
and
dec
outsb
sbb
add
or
add
cmp
mov
sbb
stos
cmp
out
jb
jns
orb
jb
popa
je
inc
jnp
ds
pushf
jbe,pt
inc
outsb
dec
xchg
cmp
jae
rclb
mov
cs
shlb
add
sub
add
jl,pt
jb
jb
mov
aaa
scas
mov
inc
into
cmp
mov
add
and
add
add
incl
add
add
add
add
std
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
nop
add
addb
add
add
add
add
add
add
add
add
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
pop
add
add
mov
add
in
add
add
add
add
add
add
add
addb
add
inc
add
in
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
add
cmp
mov
add
add
add
add
push
cmp
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
push
add
or
push
add
aas
add
add
add
add
add
add
add
jp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
sub
or
add
inc
add
insl
add
add
je
jae
add
inc
add
insb
add
popa
add
add
add
add
cmp
or
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
jb
imul
jb
insl
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insb
add
popa
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
arpl
insb
add
popa
add
add
add
add
push
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
imul
data16
jb
insl
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
arpl
arpl
insb
add
popa
add
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insb
add
popa
add
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
ds
dec
jns
lock
int
js
sbb
mov
or
daa
xchg
std
aam
jno
cmp
inc
add
movsl
mov
cltd
in
shlb
mov
sti
mov
sbb
in
cwtl
int3
mov
sub
cmp
mov
ds
andl
pop
and
popa
lds
mov
jp
pop
xchg
cli
lea
jecxz
movsl
int3
punpckhwd
insl
dec
push
sbb
imul
sbb
rolb
adc
aas
mov
nop
into
sub
rcll
hlt
cltd
std
stos
fs
jmp
xchg
in
mov
pusha
fstps
push
aad
ret
rcl
es
mov
mov
sahf
aas
xchg
das
xorb
test
push
out
lcall
sbb
mulb
add
pop
sub
pop
xchg
leave
inc
sbb
fcomp
pop
cmp
mov
cmp
in
fwait
pop
addr16
or
push
cmp
test
fmuls
add
lods
adc
popa
cmc
test
stos
lret
std
cmp
jge
in
xchg
stos
adc
mov
lods
push
mov
add
mov
adc
pushw
int3
xor
mov
xchg
daa
sub
cmc
inc
or
add
addr16
and
cld
inc
insb
sbb
push
dec
jb
int
mov
pop
les
inc
push
jmp
test
aad
loope
sub
stc
aaa
gs
or
jae
add
fcoml
xor
jns
xchg
dec
js
out
sbb
cld
mov
repnz
dec
adc
cmpsl
mov
cmp
lods
sarl
pushf
pop
clc
xchg
xor
scas
pop
cmpsb
lret
icebp
stos
fimuls
pop
dec
jae
dec
mov
dec
sbb
je
inc
stos
sbb
pop
and
jle
hlt
add
aad
mov
xchg
push
sbb
ds
dec
add
mov
daa
mov
ss
insl
fs
shll
pop
jp
aad
mov
jne
int
push
and
arpl
fidivl
adc
inc
mov
or
mov
loope
inc
lods
xor
fsubrs
jle
lods
adc
xor
imul
cmp
add
mov
loop
mull
aaa
fmull
test
arpl
movsb
enter
ja
xchg
xchg
out
or
push
lahf
sbbb
xchg
mov
pop
mov
cmp
sbb
jno
dec
fs
subl
adc
push
push
push
cltd
test
lcall
stos
test
ss
in
add
xchg
add
inc
xchg
cmp
or
mov
jge
idivl
sti
cmp
inc
xchg
mov
loop
lock
jmp
mov
in
out
mov
adc
sbb
xchg
xchg
btc
lods
lea
out
lret
data16
adc
mov
mov
enter
sti
pop
adc
sub
fadd
jmp
push
ret
cmc
imul
das
iret
add
out
test
pushf
push
lds
repnz
int3
or
repz
mov
jnp
fwait
pusha
scas
test
mov
xchg
and
lock
or
xchg
xchg
adc
mov
lds
xchg
cmpsb
ret
outsb
dec
push
xchg
lcall
arpl
cmc
inc
jge
xchg
or
loop
scas
cmp
sbb
xlat
inc
add
ds
xchg
cmp
in
sbb
ret
bound
ja
add
sub
repnz
lret
sti
sbb
sub
sub
in
push
cmpsl
cmp
push
and
jmp
pop
jg
dec
sub
pop
push
jne
xor
add
and
insl
adc
insl
xor
stos
xchg
addr16
rcll
test
xor
in
fcmovu
in
ja
xlat
xchg
jl
inc
andb
fwait
xchg
xchg
jge
adc
aaa
mov
and
xchg
out
pop
pop
and
fs
mov
js
or
push
cld
mov
das
nop
pop
outsl
das
adcb
dec
sbb
add
pop
in
test
sub
negl
sbb
imul
mov
mov
adc
fwait
push
cmp
mov
jge
mov
jp
roll
jno
pop
addr16
das
mov
dec
jo
mov
cmp
cmpsl
sub
pop
sahf
ja
dec
aad
mov
cmp
pop
xor
sarl
sbb
sub
ljmp
shll
aam
scas
pusha
mov
xchg
mov
icebp
pop
into
and
imul
cld
iret
push
and
adc
cli
cmp
iret
sub
mov
addr16
or
xchg
ficompl
in
and
fcoml
sarl
ret
xchg
push
stc
inc
les
data16
xchg
es
jge
add
lea
sub
popa
aam
add
pop
xchg
dec
insl
jge
shlb
jmp
inc
mov
fdiv
jnp
add
shrb
cmp
cmpl
mov
enter
mov
mov
dec
xchg
sbb
adc
cmc
stos
and
push
lods
or
mov
fnsave
pop
push
push
cmpsb
mov
enter
inc
ss
rcrb
xchg
sbb
sub
lcall
punpckldq
stos
clc
test
pop
dec
ret
add
aas
mov
popf
pop
insb
outsl
adc
sub
pop
sar
and
call
in
sub
arpl
mov
xor
fidivrl
jg
lcall
in
and
and
cmpb
sub
jg
mov
mov
or
push
test
push
adc
sbb
or
sub
xchg
or
and
test
mov
xchg
pop
cmpsb
js
aas
insb
icebp
xchg
mov
sahf
dec
add
je
add
jbe
adc
lods
cmpsb
lods
mov
inc
mov
out
cmp
adc
pop
push
ret
inc
pop
and
std
sbb
movsb
lods
and
and
outsl
xor
jmp
sarl
and
pop
dec
push
mov
mov
clc
dec
inc
sbb
int3
out
ss
cwtl
and
sub
les
mov
daa
sub
test
cmp
mov
int3
in
in
adc
int
pop
and
mov
xchg
mov
aad
xor
in
cld
fwait
cs
je
pushf
push
adc
sub
mov
stos
or
daa
test
lods
mov
cli
cmpsl
in
leave
or
jno
adc
push
addr16
dec
jae
loop
and
cltd
cmp
xor
nop
mov
mov
out
test
adc
sbb
aam
add
inc
add
pusha
lahf
lret
sub
push
sahf
mov
add
cli
push
add
fbld
int
add
cmp
pop
popa
mov
enter
lds
cmp
mov
jb
scas
icebp
loopne
pushf
xchg
jbe
test
sbb
pop
or
dec
jmp
pop
mov
xchg
in
add
mov
mov
scas
js
emms
mov
jle
dec
and
or
imull
fists
mov
cwtl
mov
xchg
popf
ficoml
pop
dec
xor
cmpsb
cwtl
jno
clc
pusha
jns
add
inc
ja
inc
or
sub
sbbl
xchg
fstps
lcall
xchg
lock
mov
fmulp
add
inc
rorb
std
pop
jl
or
call
cmp
cli
fistpll
arpl
and
aad
into
xor
mov
mov
pushf
push
pop
lock
jg
inc
xorb
popf
arpl
inc
adc
push
dec
mov
out
andb
divb
xor
push
pop
pop
push
adc
or
jbe
int
or
mov
jge
adc
mov
arpl
jbe
subl
pop
inc
mov
dec
sub
jecxz
divb
leave
roll
arpl
loopne
dec
into
enter
cmc
loopne
mov
add
push
popl
and
jl
cmp
scas
mov
je
imul
ljmp
xor
fdivs
dec
dec
orb
mov
pop
mov
or
mov
psadbw
mov
pusha
outsb
out
xchg
lahf
dec
jae
pop
adc
aaa
pop
cmp
in
fs
sub
pop
sbb
ret
and
adc
rcrb
and
lds
jle
loop
dec
or
loopne
dec
and
mov
lea
dec
les
pushf
int
jbe
sub
or
aad
or
add
mov
mov
fisubrs
xor
xchg
mov
inc
pop
xor
add
add
rcll
push
jno
cmp
cli
ret
mov
sbb
sbb
daa
cmp
ret
dec
int3
arpl
adc
inc
jae
mov
das
cli
pop
stos
cmc
lock
shlb
incb
adcb
inc
xchg
sbb
cltd
les
sar
xor
mov
mov
imul
jge
xor
and
in
push
mulb
or
add
jecxz
mov
out
stos
sbb
push
ja
div
or
in
je
es
in
insb
stos
popa
ficompl
rorb
test
jno
stos
cmp
pop
je
mov
jne
into
je
mov
xor
lods
scas
add
jo
dec
shll
and
jbe
mov
cmpsl
sub
shlb
loope
jl
and
stc
stos
js
fistpl
pop
xor
or
dec
mov
insb
mov
movsl
ret
add
cmp
pop
enter
xor
sub
inc
or
in
mov
xlat
sub
lock
mov
xchg
cld
sub
test
mov
dec
dec
jp
ret
xor
fldenv
js
stos
push
enter
push
cmc
and
add
rorb
cmpsl
aam
push
push
xorb
in
and
js
in
jl
push
push
fsubl
outsb
mov
dec
pushf
dec
call
pop
and
addl
iret
pop
pop
mov
out
pop
lods
inc
pop
xchg
lahf
sbb
cmp
mov
fs
push
and
cld
mov
stos
in
addr16
push
add
mov
sub
push
hlt
push
push
mov
jno
add
rolb
dec
push
xor
xor
cmp
fcomps
or
cmp
mov
fdivrl
lods
pop
insl
in
fcoml
pushf
or
adc
push
cltd
int3
xrelease
rorl
pushf
mov
xchg
into
push
jmp
dec
jp
popa
sub
lret
pop
push
or
sbb
mov
lea
add
insb
lret
push
insl
nop
sahf
pop
adc
daa
xor
jmp
mov
mov
mov
ret
leave
inc
clc
and
into
push
push
outsl
mov
cmp
mov
in
mov
mov
ret
dec
fldln2
cmpsb
inc
jno
cltd
xorb
imulb
push
in
cwtl
jb
aam
xchg
sbb
jno
daa
dec
js
mov
jbe
jns
pop
pusha
lcall
addr16
dec
push
xchg
mov
dec
add
fidivrl
lcall
mov
or
pop
jae
ja
mov
fwait
sbb
out
dec
sub
lods
xchg
jbe
push
hlt
pusha
sahf
pop
rcl
pop
aam
out
rcll
xor
mov
push
push
rorl
insb
sbb
ficomps
cmpsb
movsl
int3
dec
fwait
jp
mov
xchg
jno
sub
add
pop
in
cmpsb
leave
outsl
sbb
mov
sub
xchg
adc
test
test
and
out
push
scas
xorb
push
push
add
and
nop
jg
inc
xor
sub
adc
mov
sub
xor
dec
sbb
dec
jmp
mov
jmp
xchg
mov
movsb
mov
xchg
stos
fadds
lea
jbe
and
pop
mov
ds
cmp
and
xor
hlt
sarb
lahf
pop
mov
dec
je
xchg
add
xor
adc
pop
xchg
ror
xchg
xchg
xchg
sub
mov
or
fimull
cmp
xor
push
loop
dec
cli
jb
fsubrs
mov
and
jo
andb
inc
pop
loop
pop
push
xchg
mov
inc
xlat
sbb
pop
sahf
ss
clc
jmp
push
inc
fs
xchg
int
jae
sbb
jg
dec
push
inc
xchg
mov
add
pusha
pop
sbb
add
sub
cwtl
sbb
fsubs
push
scas
sbbb
inc
int3
into
stos
cmpsb
in
lock
dec
adc
push
dec
or
cmp
sbb
fwait
nop
enter
jno
mov
scas
lret
mov
sub
mov
sub
push
out
test
dec
arpl
add
in
jne
loope
repnz
std
stc
mov
mov
stos
push
xchg
in
sbb
bound
pop
mov
pop
imul
es
xor
bound
les
sub
lods
int
xchg
stos
cmc
jge
xor
dec
xor
ja
mov
or
mov
and
pop
int3
std
sub
in
dec
fidivrl
scas
mov
add
cmp
mov
pop
push
pushf
je
aam
insl
lock
jge
out
dec
aad
and
out
stos
not
popf
ret
dec
loope
mov
inc
in
push
movsl
out
dec
fstl
rcr
inc
cmp
push
mov
ror
mov
icebp
sub
lret
les
dec
xchg
mov
in
push
jbe
ret
mov
cmpsb
mov
leave
adc
sbb
cmp
ret
out
aas
call
inc
sbb
inc
fwait
bound
cmpsl
push
mov
stos
pop
sbb
adc
and
scas
xchg
ds
and
ret
mov
pop
cmp
jnp
adc
das
nop
sti
leave
clc
fdivr
cltd
mov
cltd
jl
bound
push
inc
mov
pushf
sub
ljmp
mov
rorl
das
imul
and
in
es
aam
dec
adcl
push
adc
cmp
in
adc
sub
push
mov
mov
pop
loope
mov
cs
inc
pop
add
or
outsb
movq
inc
nop
add
mov
mov
push
and
or
inc
cmp
mov
lock
lock
mov
adc
sahf
jecxz
in
outsl
jmp
jecxz
pop
movsl
loopne
mov
aad
in
stos
cmp
xchg
push
addr16
xchg
negb
out
out
or
xor
xor
out
mov
xchg
mov
xchg
sbb
adc
sbb
jo
pop
adc
aam
adc
out
cltd
mov
push
mov
lds
pop
xor
in
lret
mov
incb
and
dec
lret
mov
cmp
and
sti
ljmp
sub
or
fmull
adc
rorl
jns
cmp
aas
and
and
inc
push
repnz
pusha
js
and
hlt
test
inc
cmp
pop
push
adc
and
cmpsl
cs
xor
data16
mov
mov
decb
mov
test
dec
mov
dec
add
aam
cmpb
popf
add
loopne
dec
in
xchg
xchg
mov
pop
adcb
or
push
popf
mov
cmp
inc
mov
ficoms
dec
lods
imul
xchg
pop
mov
jmp
popa
mov
push
pushf
outsl
sti
mov
hlt
mov
xchg
fstpl
push
jo
cmpsb
mov
xor
stos
dec
ret
out
jno
xchg
fs
push
jae
jp
mov
ja
leave
fidivs
outsb
and
pushf
xchg
dec
xchg
cmc
loopne
daa
xlat
ret
lret
sbb
iret
dec
push
test
jo
xrelease
sbb
mov
xchg
fcomi
shr
lahf
movl
hlt
rorl
push
stos
sbb
test
and
push
jg
pop
dec
adc
adc
xchg
dec
cmpsl
sahf
mov
adc
fdivs
xchg
mov
fwait
add
dec
xor
sbb
divb
arpl
push
xor
loope
cmp
mov
sbb
fisubl
test
pop
aaa
dec
mov
icebp
pop
push
adc
adc
xchg
popf
sub
jno
xlat
sub
mov
scas
stos
das
clc
shlb
mov
adc
sub
scas
mov
inc
dec
in
and
negl
dec
xor
push
push
xchg
addr16
movsb
push
push
and
jmp
fcom
test
aaa
mov
cli
inc
sahf
xor
sub
push
loopne
dec
aad
adc
or
xchg
or
lods
lods
iret
arpl
movsl
add
push
push
mov
push
xor
xor
pop
push
out
mov
inc
inc
mov
loopne
lds
push
in
lds
js
jle
mov
les
xchg
mov
and
cltd
lods
cs
sbb
or
outsb
addr16
lods
test
inc
inc
stos
sbb
inc
fdivrl
and
pop
adc
int
sub
bound
gs
out
mov
mov
loop
call
lret
jae
xchg
stc
mov
cmp
jbe
out
insb
leave
xchg
les
ja
leave
test
lahf
aas
jle
test
shrb
push
andl
adc
xchg
call
adc
les
stos
dec
or
push
mov
mov
mov
lcall
sti
add
cld
mov
fwait
push
sbb
xchg
lds
mov
pushf
and
call
cmpsb
out
mov
inc
xchg
outsb
pop
lahf
cmc
fcmovbe
fdivrs
mov
std
stos
lcall
push
incb
mov
mov
ret
test
push
in
mov
push
lods
test
inc
int
cmp
xchg
mov
cmp
jbe
dec
mov
jle
mov
cmpsl
add
das
or
inc
mov
dec
fidivrl
dec
mov
push
sbb
add
scas
repnz
cltd
lcall
jge
imul
fwait
lret
lock
mov
dec
mov
lahf
push
xchg
adc
xchg
cwtl
sbb
loopne
orl
ret
fmull
ss
fisttpll
adc
rcrb
fdiv
xchg
sub
jno
cltd
loope
lods
add
or
sbb
stos
orl
push
xchg
pop
test
dec
mov
lds
fidivs
jae
lods
clc
ret
mov
xchg
enter
dec
add
stos
sbb
outsb
pop
in
rol
sub
lret
jl
xchg
cld
sbb
pop
and
pop
pop
inc
cmp
jnp
out
roll
mov
out
jae
out
sahf
lcall
test
outsl
jbe
and
cmp
xor
adc
push
addl
jle
dec
sub
rorb
pusha
out
xor
adc
ret
mov
lret
lcall
and
dec
int
ds
mov
cmp
ret
iret
push
jg
xchg
loopne
mov
sbb
lock
inc
push
pushf
fcmovbe
push
push
push
mov
adc
jnp
sbb
rorl
push
cmp
repz
les
lret
sar
and
mov
jle
adc
pop
mov
xor
scas
aam
add
aam
nop
ljmp
gs
ds
test
fs
add
popf
push
les
xor
mov
shll
push
jmp
dec
std
dec
movsb
aad
scas
popa
aam
dec
jns
test
sub
jbe
add
inc
in
mov
pop
kxorb
push
test
fimull
imul
sbb
add
out
loope
lcall
mov
push
imul
mov
lods
jl
testb
dec
jecxz
js
mov
dec
pop
repnz
cltd
inc
stos
in
sbb
inc
or
or
inc
stos
mov
subl
jne
sahf
mov
shll
ss
cmpsl
push
icebp
cmp
pop
xchg
pop
or
fs
cwtl
insw
inc
inc
push
xchg
or
fbld
mov
pop
mov
mov
cli
add
scas
imul
faddl
gs
insl
sahf
cmp
sbb
subl
jmp
fnstsw
fwait
adc
dec
xor
in
repnz
cld
inc
mov
push
lret
and
aas
movsl
dec
scas
fnsave
pop
adc
mov
add
lods
imul
enter
xchg
pop
cmpsb
loop
mov
mov
dec
shll
cltd
sbb
or
jae
jno
les
xchg
mov
push
cmpsb
xchg
aaa
in
push
mov
pop
aam
cld
sbb
push
mov
sarb
add
scas
push
xchg
pop
fcmovb
dec
adc
jns
mov
loop
sub
cmp
mov
out
sub
mov
xor
cs
jg
mov
push
jbe
xor
mov
out
repnz
sbb
inc
mov
add
pop
inc
xchg
pop
pop
outsl
adc
test
fst
xor
xchg
pop
mov
sub
and
movsb
repnz
inc
mov
popa
dec
or
ffreep
lea
mov
hlt
aad
cmp
mov
mov
scas
mov
out
ds
adc
jp
fs
pop
or
dec
mov
data16
insb
les
daa
fsub
mov
sub
push
mov
loope
scas
inc
pop
push
outsb
fisttpl
je
xor
push
jg
outsl
lret
pcmpgtw
adc
jo
int
adc
mov
pop
lea
push
notb
scas
dec
dec
mov
mov
sub
xchg
jne
scas
mov
cmp
iret
mov
es
hlt
lods
cmp
sbb
inc
cmpsl
movsl
dec
enter
push
or
mov
rcr
jno
pop
outsb
fst
es
pop
or
push
push
movsb
xchg
add
fistl
es
push
xchg
jae
cmp
repz
insl
test
insl
cmpsl
add
xchg
ror
sar
inc
in
sti
scas
and
jae
repnz
mov
dec
sub
pusha
xchg
adc
jo
pushf
fnsave
dec
mov
outsb
jae
xchg
mov
jle
cmp
xchg
or
adc
adc
pop
lret
imul
repnz
js
cs
sub
in
mov
rcrl
adc
jbe
ret
idiv
dec
xchg
jp
xchg
leave
test
xchg
pop
push
push
movsb
push
in
inc
lahf
mov
repz
mov
rcll
pop
push
jmp
xor
dec
mov
outsb
iret
pusha
dec
scas
fdivrs
pop
aaa
adc
stos
inc
mov
inc
pusha
jle
test
cmp
sub
mov
mov
mov
mov
adc
adcb
das
sbb
cmc
out
mov
add
dec
cltd
fyl2x
ret
repz
push
cltd
adc
mov
jnp
xor
leave
fidivl
iret
sub
hlt
adc
leave
sub
mov
xchg
dec
xor
sbb
mov
sti
adc
mov
inc
pop
scas
cmp
and
sub
push
out
dec
add
xchg
jbe
mov
outsl
faddl
inc
jbe
rorl
scas
add
mov
mov
fists
lock
cmpsb
inc
dec
lods
aad
mov
jl
pop
mov
cli
out
sarb
ss
cmpsl
call
stos
bound
and
dec
loopne
insb
addr16
xor
dec
mov
sbb
adcl
mov
lods
cs
int3
lea
or
sbb
out
cmp
cli
jmp
push
out
inc
mov
daa
iret
xor
in
fisubrl
orb
push
xor
in
arpl
jmp
xlat
mov
subb
outsl
mov
sahf
inc
dec
dec
xchg
clc
pop
push
sub
inc
mov
xchg
jl,pt
jbe
rcrb
xorb
iret
xor
leave
fwait
sahf
fdivl
pop
pusha
aas
jl
push
jb
dec
add
add
push
xchg
aas
shrb
rcrb
pop
xchg
jae
ds
into
xchg
insl
or
pop
pop
into
ss
inc
std
inc
cwtl
std
daa
pushf
jmp
rcll
arpl
loop
ljmp
scas
movsb
cli
imul
and
dec
loopne
jno
mov
sti
lock
aad
lret
inc
loopne
imul
mov
les
sub
jmp
push
vhaddps
or
adc
lret
loope
orb
add
and
mov
sub
sbb
mov
mov
mov
or
pusha
push
push
js
add
sahf
xor
xchg
cmp
cwtl
or
cmp
fwait
jae
ja,pn
sbb
int3
and
sti
es
dec
rcrl
lock
jl
jb
imul
or
lcall
inc
adc
lret
xlat
arpl
fiaddl
out
mov
movsl
cld
pop
sbb
push
push
add
out
pop
jns
jo,pn
dec
movsl
sarl
push
pop
test
popa
mov
xchg
or
dec
jno
jne
xchg
shl
arpl
imul
sbb
sub
cmp
rcrl
lret
test
cld
mov
inc
xchg
filds
out
mov
cmc
and
sub
je
stos
je
bound
inc
sahf
fcmovnbe
jge
mov
inc
lds
xacquire
push
les
inc
cmp
mov
fs
xor
dec
pop
out
pop
add
push
aam
pop
pop
int
pop
xchg
mov
cmpsb
popf
das
lock
mov
int3
dec
and
stos
and
xchg
push
stc
insb
mov
in
or
outsb
mov
xor
adc
cmpsb
out
or
cmpsl
fstl
lret
xchg
test
cmp
nop
stc
sub
xor
imull
mov
scas
mov
mov
push
inc
lcall
cmp
lahf
es
pop
arpl
push
je
sub
dec
sub
adc
mov
sbb
add
mov
fsubrs
and
xor
inc
push
xor
pop
dec
fisubrl
je
jg
cvtdq2ps
dec
adc
xor
sub
push
push
sbb
repnz
sbb
adc
daa
mov
dec
roll
test
sbb
push
and
pop
mov
test
xor
cmp
sti
mov
iret
in
rcl
or
aaa
xor
mov
pop
mov
leave
test
push
push
in
inc
inc
add
xchg
jle
jb
push
mov
enter
test
cmc
mov
sbbl
out
push
out
pop
inc
dec
int
clc
mov
lds
sub
xchg
ficoms
std
adc
mov
push
cli
cmpsb
xlat
dec
mov
ret
popa
xor
scas
mov
xchg
mov
push
push
repz
and
dec
and
imul
fadds
out
pop
sbb
iret
dec
pop
adc
push
mov
inc
scas
add
xchg
jge
mov
and
arpl
andb
shl
cmp
dec
gs
cmp
pop
adc
les
repz
cmpsl
push
push
adc
in
push
imul
movsl
int
sti
jns
xor
jb
scas
loope
jecxz
ja
push
outsb
add
sarl
jmp
adc
xchg
mov
jge
xchg
lret
mov
pop
mov
es
inc
imul
mov
sbb
mov
clc
mov
ds
dec
call
int
cwtl
add
call
insb
movsl
jo
test
ljmp
jg
add
pop
daa
subb
pop
pop
sbb
test
pop
out
or
dec
mov
inc
cmp
imul
sbb
shlb
pop
and
cmp
inc
cmp
movsl
mov
xor
add
adc
mov
ds
ss
jle
push
mov
fnsave
fmuls
pop
lods
imul
bound
jns
das
stos
cmc
push
pop
xchg
push
xchg
mov
cmc
or
loopne
xacquire
pushf
cmp
jo
and
adc
sub
inc
cwtl
xchg
sub
xlat
cmp
mov
or
add
lds
lds
fstpl
jl
test
add
mov
gs
jle
pop
cmp
sbb
pop
shlb
mov
mov
rcrl
inc
dec
sub
dec
out
mov
pop
sub
add
data16
dec
js
movsb
in
or
mov
xchg
adc
negl
or
adc
push
rorl
add
out
xchg
mov
pop
sbb
or
pop
repnz
ljmp
cld
push
mov
out
daa
shl
sub
cld
push
mov
mov
sbb
jno
in
push
inc
cmp
test
sub
lods
lret
iret
pop
mov
lret
add
xchg
xchg
insb
xchg
dec
inc
mov
bound
pop
cmpsl
test
mov
lds
mov
adc
sbb
push
sbb
sub
jecxz
rorl
xor
stos
mov
das
sbb
jb
movaps
addb
push
lahf
mov
sti
xchg
dec
pop
pop
into
inc
mov
xor
ret
les
mov
xor
mov
shll
int3
cli
dec
sbb
stc
gs
sti
sbb
push
mov
adc
mov
popa
dec
inc
dec
mov
nop
sbb
shrb
push
sub
sahf
sbb
fisubs
jp
push
add
jns
mov
mov
scas
pop
push
mov
out
cwtl
js
mov
sub
mov
fnstsw
pop
lcall
shll
push
fldl2t
adc
stos
pushf
mov
stos
negb
mov
add
hlt
in
sbb
add
adc
pop
mov
data16
out
cmp
mov
outsb
test
mov
mov
iret
or
mov
xlat
mov
adcb
stos
cmpsl
pop
adc
ss
push
insl
lea
adc
adc
fbld
pop
push
jp
and
cwtl
in
jge
andb
in
xor
sbbl
repnz
mov
insl
xchg
jecxz
out
ret
mov
cmp
and
cmc
adc
mov
mov
out
mov
xlat
lahf
rol
add
add
sahf
cmp
cwtl
sbb
push
mov
xchg
ret
cmc
mov
je
cld
cmp
pop
dec
and
pop
dec
xchg
movsl
add
or
lds
fsubrl
mov
push
mov
xchg
lods
mov
in
sbb
mov
fisttpll
movsb
stos
push
mov
push
dec
out
sub
inc
jbe
jnp
jo
mov
popf
jle
or
lods
fimull
or
jle
test
fadds
push
and
jb
bound
jnp
xchg
pop
lds
sub
mov
xchg
mov
fildll
mov
pop
out
pop
jecxz
das
sub
shlb
test
jecxz
gs
pop
fmull
lods
jno
rorl
cmpsb
inc
in
imul
call
loopne
inc
adc
push
rol
xor
movsb
pop
pop
mov
sub
xchg
xchg
in
jno
stos
or
sahf
das
pop
sbb
pop
sub
or
mov
mov
push
inc
xor
cld
test
or
lret
xor
mov
les
add
loope
pop
shll
jbe
xchg
push
sub
push
mov
mov
js
sub
pop
test
mov
mov
and
repnz
popa
std
pushf
mov
push
icebp
jmp
jo
movsl
in
shlb
leave
aaa
and
mov
scas
lret
mov
add
mov
stos
out
push
pmaxsw
inc
inc
sub
fdivrl
cltd
xchg
hlt
fstpt
jle
cmc
mov
cmp
mov
or
mov
pushf
in
out
or
jmp
mov
adc
cmc
xor
mov
add
or
data16
fstpl
out
cld
test
in
dec
pop
and
fwait
cwtl
push
sub
mov
in
movsb
cmp
lods
push
loop
imul
and
mov
lock
repnz
cmp
insb
cmpsl
pop
rol
cmpb
or
ja
out
leave
push
sbb
mov
imul
mov
mov
jne
lea
pop
in
cld
mov
cmc
dec
jne
rolb
xchg
fiadds
dec
cmovg
inc
dec
insb
xchg
inc
jl
in
lock
stos
push
lds
pop
inc
shlb
out
inc
je
mov
fwait
cld
mov
dec
dec
lds
imul
aam
and
xor
popa
fstp
sbb
inc
mov
and
jg
inc
adc
lock
pop
data16
rclb
mov
pop
sahf
clc
sbb
inc
mov
dec
push
push
sub
xchg
mov
or
fcmovbe
lahf
in
call
cmp
std
mov
jbe
into
or
xor
sti
lret
test
sub
lods
push
sbbb
sbb
mov
jmp
addb
push
or
sub
aam
jne
nop
mov
and
xor
adc
lods
fcompl
push
jp
mov
xor
iret
cmp
pop
ror
pushf
shl
pop
rclb
into
dec
dec
lcall
xor
and
adc
rcll
dec
dec
mov
mul
jne
leave
addr16
cmp
mov
mov
pop
pop
inc
repz
sbb
clc
xchg
mov
mov
mov
loopne
repnz
or
xchg
inc
int3
xlat
ljmp
mov
mov
inc
sbb
dec
push
fdivl
loop
mov
sub
mov
push
xchg
jge
ret
push
in
inc
cmp
outsb
ret
sbb
push
pop
push
cmpsl
and
ret
xchg
add
sub
dec
call
jmp
insl
and
jecxz
add
outsb
push
or
movsb
xchg
xor
imul
mov
insl
punpckldq
bnd
xlat
scas
int3
inc
leave
int
push
inc
mov
mov
jmp
mov
shll
dec
mov
jb
jo
mov
xchg
repnz
mov
outsl
sahf
stos
pop
and
push
cmpsb
push
push
je
lahf
xor
arpl
dec
inc
rcll
push
or
mov
mov
fs
stos
enter
cmp
xor
test
inc
int3
mov
movsb
cmp
mov
in
aad
daa
std
fmuls
loop
jns
pop
mov
imul
shll
test
jns
and
cwtl
fdivrl
das
stos
sti
push
test
in
call
int3
scas
inc
dec
into
loop
les
or
sub
test
dec
scas
and
jg
bound
pop
cld
xor
pop
dec
shlb
in
mov
mov
in
cmp
jb
and
xchg
mov
xor
mov
cmp
or
inc
loop
xor
loop
xchg
inc
jl
es
xorl
and
cmpsb
aas
dec
add
ss
fnstenv
call
jl
mov
mov
into
jb
aaa
sub
cmc
and
les
adc
mov
mov
mov
repz
enter
mov
pop
rorb
pop
mov
cld
push
sti
out
or
in
ret
pop
out
mov
xchg
movsl
xor
mov
aam
into
ja
jecxz
dec
add
adc
lods
ret
loope
test
fwait
jo
and
stos
shrb
mov
out
xor
sub
ljmp
ljmp
ja
sbb
clc
push
mov
rclb
jg
sub
rolb
mov
xchg
popf
in
and
std
je
addr16
pop
cmp
xor
ja
outsl
insb
inc
push
sub
lods
sarb
jle
flds
fists
xchg
adc
lahf
push
adc
jecxz
push
scas
or
cs
and
dec
mov
les
lods
xor
mov
cmpsb
aaa
in
out
pop
mov
decb
out
and
call
fxch
lret
in
jmp
lahf
dec
jecxz
cmpsl
xchg
dec
outsb
cmpsb
notb
pop
ret
push
push
popa
psubq
insl
cmc
lods
add
popf
adc
xor
adc
jbe
mov
and
dec
cltd
sub
xlat
jb
fld
inc
sub
xor
fwait
inc
lods
or
push
call
add
lret
fnstcw
jp
aam
xchg
int3
push
iret
dec
out
sbb
sub
mov
xor
lods
xlat
pop
es
lds
push
pop
movsl
pop
scas
dec
jae
je
lods
or
sub
cmp
sub
lock
push
xchg
mov
aaa
out
lods
push
daa
fisubl
fistpl
ret
cwtl
dec
dec
jmp
test
pop
movsl
pop
hlt
sub
loop
aam
xor
jno
dec
scas
jmp
cmc
xor
and
adc
push
cmpsb
mov
xchg
jne
push
pop
std
sbb
test
pop
fisttps
mov
inc
loopne
enter
ljmp
in
nop
sbb
js
mov
inc
pop
lea
mov
mov
nop
lea
xchg
sub
sbb
je
xchg
sahf
ss
xchg
in
repz
mov
scas
mov
and
imul
xor
int
mov
loope
mov
sti
mov
ficoms
addr16
pop
push
pushf
xor
mov
mov
lahf
cltd
repz
or
daa
out
ja
test
xchg
outsl
lea
jae
daa
leave
push
scas
mov
sub
idivl
jmp
push
dec
leave
ja
mov
adc
or
js
jmp
popa
out
fsubr
or
lds
dec
sub
xor
mov
add
sbbl
les
into
mov
push
cmpsl
test
imul
nop
mov
and
jo
outsl
jne
dec
mov
adc
sub
in
lcall
sbb
ljmp
addr16
mov
mov
into
mov
mov
sbb
mov
xchg
sahf
repz
mov
adc
test
xorb
es
dec
sbb
mov
ljmp
push
cli
adc
ficompl
mov
stos
shlb
das
jmp
push
sub
mov
mov
lea
cmp
inc
out
dec
repz
sahf
add
addr16
imul
ret
mov
stos
outsb
mov
jnp
test
cmpsb
icebp
cwtl
cmp
adc
jg
sub
lods
stc
inc
push
add
outsb
fcompl
push
xchg
rcll
xor
xchg
inc
inc
mov
roll
popf
jae
sub
mov
sahf
jno
jne
jmp
inc
push
sub
test
pop
pop
fbstp
mov
and
add
mov
pop
jnp
and
or
in
pop
repz
pop
in
or
mov
cmp
in
push
push
lea
adc
scas
lods
aam
cli
test
mov
xor
mov
ret
xchg
xor
jmp
jb
out
adc
lcall
lret
or
sub
and
jmp
pop
mov
inc
mov
push
movb
std
repnz
cmp
movsl
rep
cmp
mov
sbb
and
push
repz
mov
push
outsb
mov
or
inc
sbb
lds
xlat
or
imul
into
add
cmp
das
orb
inc
push
xor
and
mov
push
sub
stc
popa
pop
pop
mov
in
fdivrl
mov
imul
jnp
movsb
scas
cmp
xchg
cli
popf
mov
dec
mov
bound
loop
sub
repz
mov
fldt
js
nop
mov
outsl
xor
mov
pop
cmc
out
ds
pop
jb
or
adc
jge
xchg
imul
fistpl
sti
adc
negb
out
mov
add
popf
mov
mov
push
shll
mov
stos
add
pop
in
pop
pop
loope
sti
fwait
cmp
lea
xchg
gs
mov
andl
mov
xor
adc
xor
lret
daa
adc
jae
lock
cltd
cld
sub
fldcw
notb
mov
jecxz
int3
daa
jne
xchg
pop
clc
inc
xchg
outsl
push
lea
mov
popa
loopne
in
jb
cmpsb
cwtl
or
popa
dec
jg
push
cmp
sbb
imul
push
sti
cmp
push
inc
cmp
pop
or
sbb
lods
imulb
leave
sub
cwtl
addr16
les
scas
jne
lea
or
sbb
lods
mov
enter
ret
loopne
testb
fsub
sbb
mov
stos
mov
icebp
out
in
in
push
add
mov
push
test
push
pop
out
out
xchg
popf
mov
inc
add
inc
pushf
cmp
and
fstps
out
push
jbe
sub
call
ss
loopne
add
xchg
fistpl
xor
jbe
xchg
or
jge
out
xchg
roll
ja
movsl
add
inc
or
orb
or
aas
xchg
xor
xor
dec
sub
mov
into
xchg
xchg
adc
hlt
cmp
xor
sbb
lock
jns
dec
jmp
add
push
aas
or
cld
sti
aaa
mov
xchg
rorb
adc
jns
push
mov
jg
movsb
aam
aas
shlb
pop
mov
orb
ret
xchg
test
add
or
out
mov
pop
dec
dec
cmp
push
push
insb
ss
sbb
mov
pop
stos
cs
sub
add
repz
inc
pop
inc
test
fadds
jg
dec
dec
dec
mov
and
repz
inc
shr
inc
adc
mov
das
jle
bndstx
subb
loope
cmpsl
jo
and
lretw
out
push
shl
jno
cmpsb
addr16
mov
cmpsb
jbe
lods
ud2
pushf
lret
lea
xchg
push
xor
xchg
inc
push
leave
repz
cmc
sbb
mov
push
fwait
lods
lock
mov
cmp
scas
and
ljmp
fyl2xp1
pop
fnsave
inc
cmp
cld
out
cwtl
adc
lods
rcrl
dec
xchg
cwtl
stos
gs
pop
mov
lret
sbb
push
pusha
lods
adc
xchg
jo
insl
insb
sbb
test
mov
popa
scas
cli
loop
cwtl
jnp
stc
push
dec
jns
testb
dec
mov
push
lds
aaa
adc
xchg
lcall
cmpb
lock
adc
setl
lods
rcrl
incb
lcall
fs
outsb
cltd
das
adc
sub
mov
mov
les
dec
inc
sbb
cmpsb
xlat
inc
inc
inc
or
imul
fwait
dec
xchg
sti
sub
arpl
jno
mov
jl
loope
rol
mov
in
mov
cmpsl
addr16
and
shll
push
into
fisubrs
dec
adc
xor
lret
sbb
cmpsl
jmp
mov
mov
mov
rolb
stos
inc
pop
popa
pmullw
dec
fdivs
cmp
stos
and
int3
sbb
mov
mov
add
and
pop
mov
pop
pop
int3
jecxz
cmp
jg
jns
jo
pusha
jecxz
push
xchg
hlt
jmp
stc
push
inc
xchg
mov
and
popf
imul
fcomip
shlb
das
sbb
xchg
mov
loope
mov
xor
and
adc
xchg
out
fs
xchg
and
xlat
pop
dec
rcll
addb
arpl
enter
sub
cmp
cmpxchg
jecxz
mov
inc
xchg
xor
inc
stc
fcom
jne
xlat
lahf
mov
sub
icebp
fwait
or
lret
imul
rol
mov
lcall
data16
mov
sbb
inc
and
add
xchg
mov
call
cmpsb
dec
mov
push
pushf
jnp
inc
pop
add
in
mov
xor
adc
sbb
sub
lret
mov
jmp
mov
test
pop
inc
adc
in
or
push
call
addr16
mov
mov
adc
adcl
cmpsb
inc
dec
test
xor
pusha
ja
inc
subl
push
pop
xchg
mov
pop
or
cld
mov
mov
jecxz
in
inc
dec
sbb
fwait
int3
rorl
mov
mov
pop
sub
sbb
sub
xorl
ja
sub
ljmp
add
arpl
adc
mov
jg
test
and
mov
mov
lcall
push
mov
cmp
cli
lods
loopne
hlt
mov
loopne
ret
mov
mov
mov
push
mov
cli
pop
out
es
aad
es
ljmp
jne
rcr
inc
inc
sub
xor
addb
jecxz
popa
push
test
pop
ret
push
or
jle
jmp
adc
pusha
fnsave
imul
test
pop
das
fdivl
imul
xchg
lds
xor
xchg
jge
dec
dec
jl
push
xchg
sub
js
mov
ret
jae
movl
sub
push
sarl
ds
and
adc
or
cmp
pop
test
pop
mov
and
lods
pop
pop
xchg
mov
jmp
or
and
sbb
cwtl
fs
sbb
inc
ljmp
gs
inc
addr16
imul
addr16
imulb
arpl
push
push
inc
push
jecxz
mov
mov
call
jle
in
js
lret
aaa
sub
std
mov
lods
lock
ficompl
adc
call
ja
cmp
sti
rcl
insb
ficomps
out
xchg
pop
out
mov
push
xchg
inc
cmp
jmp
rclb
test
xchg
sub
outsb
dec
addl
loop
sub
mov
fcoml
scas
xor
and
push
orl
cmp
add
pop
gs
idivl
dec
sbbl
aas
cmp
cwtl
pushf
or
out
jns
push
adc
cvtpi2ps
push
imul
adc
mov
cwtl
sub
jnp
ljmp
imul
sbb
jb
push
sbb
jmp
insl
inc
xor
pop
xor
mov
mov
ficoml
or
loopne
je
out
mov
into
mov
out
lahf
inc
aaa
mov
sbb
fstpl
mov
mov
int
push
inc
xchg
mov
lahf
fxch
sbb
imul
into
xchg
sti
in
push
mov
add
je
inc
push
movsl
outsl
cmp
pop
or
shll
xchg
mov
movsb
pop
sbb
pop
ljmp
cmp
pop
cmp
inc
mov
lds
sti
hlt
fildll
in
pop
xor
add
insl
lods
faddp
jnp
out
and
mov
sti
or
icebp
mov
pop
inc
pop
sti
out
cmp
adc
bswap
and
push
int
jg
xorps
push
imul
push
jp
mov
dec
mov
cmp
in
das
jne
pop
aas
cmp
pusha
sub
pop
sahf
cli
jae
jo
in
dec
sub
cmp
mov
pop
jg
call
pop
stos
repz
popa
adc
fldl
mov
stos
mov
lret
pop
xor
rep
sbbb
pop
loope
dec
adc
mov
cli
mov
roll
rcll
test
ret
cmp
dec
or
repnz
inc
and
bswap
pop
mov
jmp
dec
imul
cmp
or
scas
dec
mov
int
sti
cmp
out
jns
push
dec
jge
scas
into
push
push
iret
scas
jae
lret
bound
fwait
movsb
repnz
jl
ds
mov
subb
icebp
stos
stos
aas
push
neg
into
mov
jp
xrelease
add
and
paddusb
scas
push
cld
xchg
pop
mov
pop
in
test
dec
inc
ljmp
stos
push
or
mov
inc
lret
fstpt
test
ss
rep
jecxz
fdivrp
cmpsl
loop
push
lock
mov
xchg
bound
out
fisttps
mov
sti
push
rorb
je,pn
mov
dec
gs
mov
fists
mov
loop
pop
mov
into
or
aad
jecxz
sub
rcr
inc
lret
fbstp
mov
stos
pop
std
inc
mov
cwtl
cwtl
dec
imul
imul
out
sbb
and
inc
adc
sbb
in
push
sbb
lds
test
lods
push
adc
icebp
xor
xchg
sbb
fadds
mov
xchg
add
dec
mov
inc
jnp
xor
xor
aaa
lods
sub
push
or
je
pop
mov
push
push
ret
or
outsl
out
xchg
push
cmc
ja
cmp
les
adc
or
out
mov
stos
sahf
mov
call
adcb
dec
lcall
mov
fistpl
cmp
dec
mov
popa
inc
addr16
imul
mov
dec
xor
in
enter
xchg
mov
add
pop
enter
xor
mov
xor
xchg
dec
orl
mov
xchg
into
cmovne
sub
aad
inc
imul
pop
rcrl
mov
xchg
push
stc
xorb
jns
cmpsb
and
clc
call
std
fisttpll
xor
and
addb
bound
mov
add
cld
cmc
fs
push
pusha
sti
xchg
int3
add
loopne
or
fimull
imul
inc
jne
rorl
pop
aas
mov
jnp
stc
pop
inc
mov
testb
cmp
jae
cmc
inc
je
cmpsb
sarb
inc
js
jle
jb
mov
jno
movl
jnp
int3
xor
fisubl
addr16
and
pop
or
cmp
push
stc
push
scas
notb
sub
sbb
pop
push
cmp
xor
imul
push
out
bound
dec
mov
add
scas
pop
add
cmc
es
pop
sbb
pop
shll
cmp
cld
mov
or
dec
add
aad
rorb
sbb
and
lods
cmp
dec
sbb
stc
gs
lret
mov
and
flds
out
ds
inc
cmp
jge
dec
std
ds
mov
enter
pop
loop
in
in
loop
rol
pop
adc
xor
adc
add
mov
pop
cmp
je
movsl
sub
pusha
jae
fisttps
dec
xor
mov
repnz
not
adc
scas
les
mov
inc
jae
outsl
loope
sbb
and
repz
xchg
subl
arpl
testb
sub
xor
jo
add
fisubs
test
adc
loop
inc
jp
jo
xor
sarb
outsl
jecxz
xchg
sub
pop
inc
pop
fstpl
cmpb
mov
js
stos
addr16
push
je
jl
add
jns
xchg
outsl
sbb
mov
mov
ss
insb
xchg
leave
mov
daa
or
mov
xor
cmp
pop
mov
fs
push
pop
mov
dec
in
shrl
mov
stc
sbb
inc
adc
xor
pop
cltd
lock
mov
lret
xor
xor
push
jne
push
popa
jle
jo
rcll
rcr
mov
scas
sub
lret
lea
mov
push
and
sbb
sbb
sbb
movsl
cmp
psubb
aad
out
pop
lea
stos
xchg
sub
xchg
and
adc
ret
loopne
in
mov
outsb
sbbl
cs
mov
test
ja
inc
cmpsl
dec
xchg
pop
or
scas
cmp
scas
and
jl
add
fs
loopne
testb
xlat
imul
push
ficoms
outsb
daa
popa
inc
leave
mov
movsb
aad
movups
lods
ret
out
popa
cmpl
push
pusha
lds
or
jg
pop
ffreep
rol
sub
cmp
push
inc
mov
outsb
inc
loopne
push
test
pop
mov
push
inc
pop
jno
in
sbb
loope
xchg
stc
nop
cs
pop
mov
inc
sbb
int3
aaa
lahf
cld
sti
test
pusha
push
loopne
and
xchg
pop
call
jbe
lret
sarb
ds
andb
dec
int3
pop
mov
push
movsb
outsl
add
sbb
cmp
pop
xorl
cwtl
int
mov
dec
mov
fs
pop
cmc
xor
out
xor
pop
lock
pop
int3
mov
in
fldcw
mov
push
pop
push
sub
dec
add
pop
sahf
les
ror
dec
in
xor
pushf
and
cmp
mov
push
notl
dec
das
or
cwtl
fucomp
js
out
loopne
fwait
mov
jb
pop
pop
jmp
push
jns
and
jns
xchg
dec
sahf
pop
xchg
stos
push
inc
test
cmp
adc
test
cmp
ja
mov
loope
add
add
fwait
nop
test
aad
inc
lret
lret
inc
int3
popa
ss
out
sbb
stc
push
aas
andl
scas
mov
out
adc
imul
dec
testb
cmp
push
sub
jnp
jnp
movsb
lret
movsb
das
popf
jnp
xchg
inc
movsb
testb
push
sbb
add
push
movsl
cmp
mov
andl
mov
and
ja
test
cmp
xchg
pop
adc
lret
lahf
shll
in
lret
fstps
and
mov
mov
push
mov
inc
ja
lods
xchg
lret
ret
jo
pop
jo
jecxz
test
shrb
into
push
lds
jno
pop
sub
sub
sub
lea
dec
sub
sbbl
fwait
loope
inc
popf
push
rolb
mov
jo
mov
sbb
inc
popa
xchg
push
xor
fucomip
jg
jmp
xor
das
mov
or
push
or
movsb
inc
sbb
or
push
pop
xchg
imul
jo
ret
call
xor
push
fsubrp
sub
aas
xchg
data16
jbe
cli
mov
xor
fnstcw
outsb
mov
cld
test
push
push
stc
orl
orl
mov
and
xchg
movsl
out
push
aad
or
mov
mov
pop
fadds
jmp
mov
or
cmp
pop
sahf
push
scas
call
repnz
cltd
pop
sub
shrb
push
sub
inc
adc
fsubrs
aad
ds
lods
jl
dec
adc
insl
inc
rcrl
mov
xchg
out
popf
sti
push
xor
repnz
into
xor
dec
loop
lcall
icebp
mov
lea
out
xor
test
push
adc
movl
xchg
lea
popf
jg
and
xchg
shlw
sub
dec
or
jmp
xchg
cmp
push
cmpsl
add
xor
dec
out
jns
inc
and
mov
dec
add
sub
mov
xor
aas
jl
sub
mov
es
sbb
inc
test
mov
dec
sbbb
adc
cmpsb
jb
scas
inc
sbb
sbb
ljmp
out
mov
pop
jge
leave
mov
inc
cltd
xchg
imul
es
stc
jmp
sub
mov
xor
mov
cltd
and
mov
mov
pop
in
hlt
jmp
sti
xchg
jnp
xchg
cmp
xchg
cmp
jge
sbb
pusha
mov
fwait
ja
les
mov
adc
icebp
xchg
je
add
xchg
cs
call
jnp
add
fs
mov
inc
out
adc
adc
push
sub
divb
fldt
dec
dec
push
aad
sub
insb
xchg
ds
lods
fistps
notl
mov
stos
mov
mov
mov
inc
loop
push
fbstp
out
ret
dec
enter
inc
add
loop
xchg
pop
lahf
push
shrb
mov
jne
pop
roll
frstor
pop
dec
mov
out
notb
rclb
ret
lret
push
pop
popf
inc
jbe
int3
stos
cltd
aad
jbe
xor
ficoms
xor
adc
sbb
pusha
daa
dec
add
pop
sub
mov
push
jo
sub
popa
inc
lahf
xchg
sub
inc
lret
or
neg
repz
cmp
shrl
xor
sub
es
mov
dec
aam
cmp
xor
lds
xchg
sub
je
jge
sbb
les
xor
in
mov
and
jns
inc
out
sbb
cmp
inc
mov
pop
pop
mov
leave
cmp
aam
test
xor
pop
std
test
int
orb
jae
push
jl
xchg
jl
mov
sahf
inc
xchg
dec
fst
cwtl
and
push
fwait
jne
scas
push
out
jmp
xor
xchg
cs
xchg
mov
or
xchg
push
lahf
xorb
je
stos
adc
pusha
xor
mov
lret
xchg
or
add
psllq
add
bound
fimuls
sbb
popf
outsb
in
idiv
dec
mov
xchg
imul
fs
xchg
mov
loop
icebp
xchg
lock
mov
rorb
fdivr
mov
lcall
mov
xchg
and
sub
inc
sbb
data16
mov
jg
test
add
fadd
pop
negb
mov
add
out
mov
loop
movsl
ret
fsub
idivb
add
std
or
dec
dec
notl
and
dec
fisubl
ljmp
and
xor
push
mov
dec
test
jne
cli
int3
xchg
adc
jp
jne
in
sub
add
sbb
and
mov
dec
movsl
sbb
or
cmp
xor
stos
adc
pop
in
loop
shll
nop
adcb
icebp
mov
mov
cmp
jge
test
test
lods
aam
jb
ja
test
test
test
push
loop
add
orl
movsb
xchg
mov
xor
iret
mov
insb
push
ss
pslld
fstps
iret
andl
int
cmpsb
cwtl
jnp
hlt
jo
dec
les
push
xor
or
in
jno
cs
mov
jge
repz
movsl
xor
scas
pop
ret
scas
dec
mov
cld
stos
into
xor
ljmp
xchg
and
pushf
jle
clc
pop
and
repnz
je
sub
dec
lea
mov
xorb
xor
and
pop
or
xor
or
test
pop
rorl
test
xor
sub
lret
dec
push
mov
push
mov
es
and
leave
push
lds
aad
ret
andb
fbstp
cmp
mov
iret
dec
mov
push
or
dec
adc
outsl
inc
mov
movsb
jle
nop
mov
jle
das
ret
cmp
call
adc
out
arpl
cmp
testb
enter
outsl
xor
sbb
roll
insl
sahf
adc
jo
outsl
pop
pop
push
loopne
lcall
add
cwtl
cmp
sbb
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
push
add
or
push
add
aas
add
add
add
add
add
add
add
jp
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
push
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
sub
or
add
inc
add
insl
add
add
je
jae
add
inc
add
insb
add
popa
add
add
add
add
cmp
or
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
jb
imul
jb
insl
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
insb
add
popa
add
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
arpl
insb
add
popa
add
add
add
add
push
and
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
imul
data16
jb
insl
add
add
add
add
add
or
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
arpl
arpl
insb
add
popa
add
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insb
add
popa
add
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
xor
sub
and
xor
sub
and
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
ds
dec
jns
lock
int
js
sbb
mov
or
daa
xchg
std
aam
jno
cmp
inc
add
movsl
mov
cltd
in
shlb
mov
sti
mov
sbb
in
cwtl
int3
mov
sub
cmp
mov
ds
andl
pop
and
popa
lds
mov
jp
pop
xchg
cli
lea
jecxz
movsl
int3
punpckhwd
insl
dec
push
sbb
imul
sbb
rolb
adc
aas
mov
nop
into
sub
rcll
hlt
cltd
std
stos
fs
jmp
xchg
in
mov
pusha
fstps
push
aad
ret
rcl
es
mov
mov
sahf
aas
xchg
das
xorb
test
push
out
lcall
sbb
mulb
add
pop
sub
pop
xchg
leave
inc
sbb
fcomp
pop
cmp
mov
cmp
in
fwait
pop
addr16
or
push
cmp
test
fmuls
add
lods
adc
popa
cmc
test
stos
lret
std
cmp
jge
in
xchg
stos
adc
mov
lods
push
mov
add
mov
adc
pushw
int3
xor
mov
xchg
daa
sub
cmc
inc
or
add
addr16
and
cld
inc
insb
sbb
push
dec
jb
int
mov
pop
les
inc
push
jmp
test
aad
loope
sub
stc
aaa
gs
or
jae
add
fcoml
xor
jns
xchg
dec
js
out
sbb
cld
mov
repnz
dec
adc
cmpsl
mov
cmp
lods
sarl
pushf
pop
clc
xchg
xor
scas
pop
cmpsb
lret
icebp
stos
fimuls
pop
dec
jae
dec
mov
dec
sbb
je
inc
stos
sbb
pop
and
jle
hlt
add
aad
mov
xchg
push
sbb
ds
dec
add
mov
daa
mov
ss
insl
fs
shll
pop
jp
aad
mov
jne
int
push
and
arpl
fidivl
adc
inc
mov
or
mov
loope
inc
lods
xor
fsubrs
jle
lods
adc
xor
imul
cmp
add
mov
loop
mull
aaa
fmull
test
arpl
movsb
enter
ja
xchg
xchg
out
or
push
lahf
sbbb
xchg
mov
pop
mov
cmp
sbb
jno
dec
fs
subl
adc
push
push
push
cltd
test
lcall
stos
test
ss
in
add
xchg
add
inc
xchg
cmp
or
mov
jge
idivl
sti
cmp
inc
xchg
mov
loop
lock
jmp
mov
in
out
mov
adc
sbb
xchg
xchg
btc
lods
lea
out
lret
data16
adc
mov
mov
enter
sti
pop
adc
sub
fadd
jmp
push
ret
cmc
imul
das
iret
add
out
test
pushf
push
lds
repnz
int3
or
repz
mov
jnp
fwait
pusha
scas
test
mov
xchg
and
lock
or
xchg
xchg
adc
mov
lds
xchg
cmpsb
ret
outsb
dec
push
xchg
lcall
arpl
cmc
inc
jge
xchg
or
loop
scas
cmp
sbb
xlat
inc
add
ds
xchg
cmp
in
sbb
ret
bound
ja
add
sub
repnz
lret
sti
sbb
sub
sub
in
push
cmpsl
cmp
push
and
jmp
pop
jg
dec
sub
pop
push
jne
xor
add
and
insl
adc
insl
xor
stos
xchg
addr16
rcll
test
xor
in
fcmovu
in
ja
xlat
xchg
jl
inc
andb
fwait
xchg
xchg
jge
adc
aaa
mov
and
xchg
out
pop
pop
and
fs
mov
js
or
push
cld
mov
das
nop
pop
outsl
das
adcb
dec
sbb
add
pop
in
test
sub
negl
sbb
imul
mov
mov
adc
fwait
push
cmp
mov
jge
mov
jp
roll
jno
pop
addr16
das
mov
dec
jo
mov
cmp
cmpsl
sub
pop
sahf
ja
dec
aad
mov
cmp
pop
xor
sarl
sbb
sub
ljmp
shll
aam
scas
pusha
mov
xchg
mov
icebp
pop
into
and
imul
cld
iret
push
and
adc
cli
cmp
iret
sub
mov
addr16
or
xchg
ficompl
in
and
fcoml
sarl
ret
xchg
push
stc
inc
les
data16
xchg
es
jge
add
lea
sub
popa
aam
add
pop
xchg
dec
insl
jge
shlb
jmp
inc
mov
fdiv
jnp
add
shrb
cmp
cmpl
mov
enter
mov
mov
dec
xchg
sbb
adc
cmc
stos
and
push
lods
or
mov
fnsave
pop
push
push
cmpsb
mov
enter
inc
ss
rcrb
xchg
sbb
sub
lcall
punpckldq
stos
clc
test
pop
dec
ret
add
aas
mov
popf
pop
insb
outsl
adc
sub
pop
sar
and
call
in
sub
arpl
mov
xor
fidivrl
jg
lcall
in
and
and
cmpb
sub
jg
mov
mov
or
push
test
push
adc
sbb
or
sub
xchg
or
and
test
mov
xchg
pop
cmpsb
js
aas
insb
icebp
xchg
mov
sahf
dec
add
je
add
jbe
adc
lods
cmpsb
lods
mov
inc
mov
out
cmp
adc
pop
push
ret
inc
pop
and
std
sbb
movsb
lods
and
and
outsl
xor
jmp
sarl
and
pop
dec
push
mov
mov
clc
dec
inc
sbb
int3
out
ss
cwtl
and
sub
les
mov
daa
sub
test
cmp
mov
int3
in
in
adc
int
pop
and
mov
xchg
mov
aad
xor
in
cld
fwait
cs
je
pushf
push
adc
sub
mov
stos
or
daa
test
lods
mov
cli
cmpsl
in
leave
or
jno
adc
push
addr16
dec
jae
loop
and
cltd
cmp
xor
nop
mov
mov
out
test
adc
sbb
aam
add
inc
add
pusha
lahf
lret
sub
push
sahf
mov
add
cli
push
add
fbld
int
add
cmp
pop
popa
mov
enter
lds
cmp
mov
jb
scas
icebp
loopne
pushf
xchg
jbe
test
sbb
pop
or
dec
jmp
pop
mov
xchg
in
add
mov
mov
scas
js
emms
mov
jle
dec
and
or
imull
fists
mov
cwtl
mov
xchg
popf
ficoml
pop
dec
xor
cmpsb
cwtl
jno
clc
pusha
jns
add
inc
ja
inc
or
sub
sbbl
xchg
fstps
lcall
xchg
lock
mov
fmulp
add
inc
rorb
std
pop
jl
or
call
cmp
cli
fistpll
arpl
and
aad
into
xor
mov
mov
pushf
push
pop
lock
jg
inc
xorb
popf
arpl
inc
adc
push
dec
mov
out
andb
divb
xor
push
pop
pop
push
adc
or
jbe
int
or
mov
jge
adc
mov
arpl
jbe
subl
pop
inc
mov
dec
sub
jecxz
divb
leave
roll
arpl
loopne
dec
into
enter
cmc
loopne
mov
add
push
popl
and
jl
cmp
scas
mov
je
imul
ljmp
xor
fdivs
dec
dec
orb
mov
pop
mov
or
mov
psadbw
mov
pusha
outsb
out
xchg
lahf
dec
jae
pop
adc
aaa
pop
cmp
in
fs
sub
pop
sbb
ret
and
adc
rcrb
and
lds
jle
loop
dec
or
loopne
dec
and
mov
lea
dec
les
pushf
int
jbe
sub
or
aad
or
add
mov
mov
fisubrs
xor
xchg
mov
inc
pop
xor
add
add
rcll
push
jno
cmp
cli
ret
mov
sbb
sbb
daa
cmp
ret
dec
int3
arpl
adc
inc
jae
mov
das
cli
pop
stos
cmc
lock
shlb
incb
adcb
inc
xchg
sbb
cltd
les
sar
xor
mov
mov
imul
jge
xor
and
in
push
mulb
or
add
jecxz
mov
out
stos
sbb
push
ja
div
or
in
je
es
in
insb
stos
popa
ficompl
rorb
test
jno
stos
cmp
pop
je
mov
jne
into
je
mov
xor
lods
scas
add
jo
dec
shll
and
jbe
mov
cmpsl
sub
shlb
loope
jl
and
stc
stos
js
fistpl
pop
xor
or
dec
mov
insb
mov
movsl
ret
add
cmp
pop
enter
xor
sub
inc
or
in
mov
xlat
sub
lock
mov
xchg
cld
sub
test
mov
dec
dec
jp
ret
xor
fldenv
js
stos
push
enter
push
cmc
and
add
rorb
cmpsl
aam
push
push
xorb
in
and
js
in
jl
push
push
fsubl
outsb
mov
dec
pushf
dec
call
pop
and
addl
iret
pop
pop
mov
out
pop
lods
inc
pop
xchg
lahf
sbb
cmp
mov
fs
push
and
cld
mov
stos
in
addr16
push
add
mov
sub
push
hlt
push
push
mov
jno
add
rolb
dec
push
xor
xor
cmp
fcomps
or
cmp
mov
fdivrl
lods
pop
insl
in
fcoml
pushf
or
adc
push
cltd
int3
xrelease
rorl
pushf
mov
xchg
into
push
jmp
dec
jp
popa
sub
lret
pop
push
or
sbb
mov
lea
add
insb
lret
push
insl
nop
sahf
pop
adc
daa
xor
jmp
mov
mov
mov
ret
leave
inc
clc
and
into
push
push
outsl
mov
cmp
mov
in
mov
mov
ret
dec
fldln2
cmpsb
inc
jno
cltd
xorb
imulb
push
in
cwtl
jb
aam
xchg
sbb
jno
daa
dec
js
mov
jbe
jns
pop
pusha
lcall
addr16
dec
push
xchg
mov
dec
add
fidivrl
lcall
mov
or
pop
jae
ja
mov
fwait
sbb
out
dec
sub
lods
xchg
jbe
push
hlt
pusha
sahf
pop
rcl
pop
aam
out
rcll
xor
mov
push
push
rorl
insb
sbb
ficomps
cmpsb
movsl
int3
dec
fwait
jp
mov
xchg
jno
sub
add
pop
in
cmpsb
leave
outsl
sbb
mov
sub
xchg
adc
test
test
and
out
push
scas
xorb
push
push
add
and
nop
jg
inc
xor
sub
adc
mov
sub
xor
dec
sbb
dec
jmp
mov
jmp
xchg
mov
movsb
mov
xchg
stos
fadds
lea
jbe
and
pop
mov
ds
cmp
and
xor
hlt
sarb
lahf
pop
mov
dec
je
xchg
add
xor
adc
pop
xchg
ror
xchg
xchg
xchg
sub
mov
or
fimull
cmp
xor
push
loop
dec
cli
jb
fsubrs
mov
and
jo
andb
inc
pop
loop
pop
push
xchg
mov
inc
xlat
sbb
pop
sahf
ss
clc
jmp
push
inc
fs
xchg
int
jae
sbb
jg
dec
push
inc
xchg
mov
add
pusha
pop
sbb
add
sub
cwtl
sbb
fsubs
push
scas
sbbb
inc
int3
into
stos
cmpsb
in
lock
dec
adc
push
dec
or
cmp
sbb
fwait
nop
enter
jno
mov
scas
lret
mov
sub
mov
sub
push
out
test
dec
arpl
add
in
jne
loope
repnz
std
stc
mov
mov
stos
push
xchg
in
sbb
bound
pop
mov
pop
imul
es
xor
bound
les
sub
lods
int
xchg
stos
cmc
jge
xor
dec
xor
ja
mov
or
mov
and
pop
int3
std
sub
in
dec
fidivrl
scas
mov
add
cmp
mov
pop
push
pushf
je
aam
insl
lock
jge
out
dec
aad
and
out
stos
not
popf
ret
dec
loope
mov
inc
in
push
movsl
out
dec
fstl
rcr
inc
cmp
push
mov
ror
mov
icebp
sub
lret
les
dec
xchg
mov
in
push
jbe
ret
mov
cmpsb
mov
leave
adc
sbb
cmp
ret
out
aas
call
inc
sbb
inc
fwait
bound
cmpsl
push
mov
stos
pop
sbb
adc
and
scas
xchg
ds
and
ret
mov
pop
cmp
jnp
adc
das
nop
sti
leave
clc
fdivr
cltd
mov
cltd
jl
bound
push
inc
mov
pushf
sub
ljmp
mov
rorl
das
imul
and
in
es
aam
dec
adcl
push
adc
cmp
in
adc
sub
push
mov
mov
pop
loope
mov
cs
inc
pop
add
or
outsb
movq
inc
nop
add
mov
mov
push
and
or
inc
cmp
mov
lock
lock
mov
adc
sahf
jecxz
in
outsl
jmp
jecxz
pop
movsl
loopne
mov
aad
in
stos
cmp
xchg
push
addr16
xchg
negb
out
out
or
xor
xor
out
mov
xchg
mov
xchg
sbb
adc
sbb
jo
pop
adc
aam
adc
out
cltd
mov
push
mov
lds
pop
xor
in
lret
mov
incb
and
dec
lret
mov
cmp
and
sti
ljmp
sub
or
fmull
adc
rorl
jns
cmp
aas
and
and
inc
push
repnz
pusha
js
and
hlt
test
inc
cmp
pop
push
adc
and
cmpsl
cs
xor
data16
mov
mov
decb
mov
test
dec
mov
dec
add
aam
cmpb
popf
add
loopne
dec
in
xchg
xchg
mov
pop
adcb
or
push
popf
mov
cmp
inc
mov
ficoms
dec
lods
imul
xchg
pop
mov
jmp
popa
mov
push
pushf
outsl
sti
mov
hlt
mov
xchg
fstpl
push
jo
cmpsb
mov
xor
stos
dec
ret
out
jno
xchg
fs
push
jae
jp
mov
ja
leave
fidivs
outsb
and
pushf
xchg
dec
xchg
cmc
loopne
daa
xlat
ret
lret
sbb
iret
dec
push
test
jo
xrelease
sbb
mov
xchg
fcomi
shr
lahf
movl
hlt
rorl
push
stos
sbb
test
and
push
jg
pop
dec
adc
adc
xchg
dec
cmpsl
sahf
mov
adc
fdivs
xchg
mov
fwait
add
dec
xor
sbb
divb
arpl
push
xor
loope
cmp
mov
sbb
fisubl
test
pop
aaa
dec
mov
icebp
pop
push
adc
adc
xchg
popf
sub
jno
xlat
sub
mov
scas
stos
das
clc
shlb
mov
adc
sub
scas
mov
inc
dec
in
and
negl
dec
xor
push
push
xchg
addr16
movsb
push
push
and
jmp
fcom
test
aaa
mov
cli
inc
sahf
xor
sub
push
loopne
dec
aad
adc
or
xchg
or
lods
lods
iret
arpl
movsl
add
push
push
mov
push
xor
xor
pop
push
out
mov
inc
inc
mov
loopne
lds
push
in
lds
js
jle
mov
les
xchg
mov
and
cltd
lods
cs
sbb
or
outsb
addr16
lods
test
inc
inc
stos
sbb
inc
fdivrl
and
pop
adc
int
sub
bound
gs
out
mov
mov
loop
call
lret
jae
xchg
stc
mov
cmp
jbe
out
insb
leave
xchg
les
ja
leave
test
lahf
aas
jle
test
shrb
push
andl
adc
xchg
call
adc
les
stos
dec
or
push
mov
mov
mov
lcall
sti
add
cld
mov
fwait
push
sbb
xchg
lds
mov
pushf
and
call
cmpsb
out
mov
inc
xchg
outsb
pop
lahf
cmc
fcmovbe
fdivrs
mov
std
stos
lcall
push
incb
mov
mov
ret
test
push
in
mov
push
lods
test
inc
int
cmp
xchg
mov
cmp
jbe
dec
mov
jle
mov
cmpsl
add
das
or
inc
mov
dec
fidivrl
dec
mov
push
sbb
add
scas
repnz
cltd
lcall
jge
imul
fwait
lret
lock
mov
dec
mov
lahf
push
xchg
adc
xchg
cwtl
sbb
loopne
orl
ret
fmull
ss
fisttpll
adc
rcrb
fdiv
xchg
sub
jno
cltd
loope
lods
add
or
sbb
stos
orl
push
xchg
pop
test
dec
mov
lds
fidivs
jae
lods
clc
ret
mov
xchg
enter
dec
add
stos
sbb
outsb
pop
in
rol
sub
lret
jl
xchg
cld
sbb
pop
and
pop
pop
inc
cmp
jnp
out
roll
mov
out
jae
out
sahf
lcall
test
outsl
jbe
and
cmp
xor
adc
push
addl
jle
dec
sub
rorb
pusha
out
xor
adc
ret
mov
lret
lcall
and
dec
int
ds
mov
cmp
ret
iret
push
jg
xchg
loopne
mov
sbb
lock
inc
push
pushf
fcmovbe
push
push
push
mov
adc
jnp
sbb
rorl
push
cmp
repz
les
lret
sar
and
mov
jle
adc
pop
mov
xor
scas
aam
add
aam
nop
ljmp
gs
ds
test
fs
add
popf
push
les
xor
mov
shll
push
jmp
dec
std
dec
movsb
aad
scas
popa
aam
dec
jns
test
sub
jbe
add
inc
in
mov
pop
kxorb
push
test
fimull
imul
sbb
add
out
loope
lcall
mov
push
imul
mov
lods
jl
testb
dec
jecxz
js
mov
dec
pop
repnz
cltd
inc
stos
in
sbb
inc
or
or
inc
stos
mov
subl
jne
sahf
mov
shll
ss
cmpsl
push
icebp
cmp
pop
xchg
pop
or
fs
cwtl
insw
inc
inc
push
xchg
or
fbld
mov
pop
mov
mov
cli
add
scas
imul
faddl
gs
insl
sahf
cmp
sbb
subl
jmp
fnstsw
fwait
adc
dec
xor
in
repnz
cld
inc
mov
push
lret
and
aas
movsl
dec
scas
fnsave
pop
adc
mov
add
lods
imul
enter
xchg
pop
cmpsb
loop
mov
mov
dec
shll
cltd
sbb
or
jae
jno
les
xchg
mov
push
cmpsb
xchg
aaa
in
push
mov
pop
aam
cld
sbb
push
mov
sarb
add
scas
push
xchg
pop
fcmovb
dec
adc
jns
mov
loop
sub
cmp
mov
out
sub
mov
xor
cs
jg
mov
push
jbe
xor
mov
out
repnz
sbb
inc
mov
add
pop
inc
xchg
pop
pop
outsl
adc
test
fst
xor
xchg
pop
mov
sub
and
movsb
repnz
inc
mov
popa
dec
or
ffreep
lea
mov
hlt
aad
cmp
mov
mov
scas
mov
out
ds
adc
jp
fs
pop
or
dec
mov
data16
insb
les
daa
fsub
mov
sub
push
mov
loope
scas
inc
pop
push
outsb
fisttpl
je
xor
push
jg
outsl
lret
pcmpgtw
adc
jo
int
adc
mov
pop
lea
push
notb
scas
dec
dec
mov
mov
sub
xchg
jne
scas
mov
cmp
iret
mov
es
hlt
lods
cmp
sbb
inc
cmpsl
movsl
dec
enter
push
or
mov
rcr
jno
pop
outsb
fst
es
pop
or
push
push
movsb
xchg
add
fistl
es
push
xchg
jae
cmp
repz
insl
test
insl
cmpsl
add
xchg
ror
sar
inc
in
sti
scas
and
jae
repnz
mov
dec
sub
pusha
xchg
adc
jo
pushf
fnsave
dec
mov
outsb
jae
xchg
mov
jle
cmp
xchg
or
adc
adc
pop
lret
imul
repnz
js
cs
sub
in
mov
rcrl
adc
jbe
ret
idiv
dec
xchg
jp
xchg
leave
test
xchg
pop
push
push
movsb
push
in
inc
lahf
mov
repz
mov
rcll
pop
push
jmp
xor
dec
mov
outsb
iret
pusha
dec
scas
fdivrs
pop
aaa
adc
stos
inc
mov
inc
pusha
jle
test
cmp
sub
mov
mov
mov
mov
adc
adcb
das
sbb
cmc
out
mov
add
dec
cltd
fyl2x
ret
repz
push
cltd
adc
mov
jnp
xor
leave
fidivl
iret
sub
hlt
adc
leave
sub
mov
xchg
dec
xor
sbb
mov
sti
adc
mov
inc
pop
scas
cmp
and
sub
push
out
dec
add
xchg
jbe
mov
outsl
faddl
inc
jbe
rorl
scas
add
mov
mov
fists
lock
cmpsb
inc
dec
lods
aad
mov
jl
pop
mov
cli
out
sarb
ss
cmpsl
call
stos
bound
and
dec
loopne
insb
addr16
xor
dec
mov
sbb
adcl
mov
lods
cs
int3
lea
or
sbb
out
cmp
cli
jmp
push
out
inc
mov
daa
iret
xor
in
fisubrl
orb
push
xor
in
arpl
jmp
xlat
mov
subb
outsl
mov
sahf
inc
dec
dec
xchg
clc
pop
push
sub
inc
mov
xchg
jl,pt
jbe
rcrb
xorb
iret
xor
leave
fwait
sahf
fdivl
pop
pusha
aas
jl
push
jb
dec
add
add
push
xchg
aas
shrb
rcrb
pop
xchg
jae
ds
into
xchg
insl
or
pop
pop
into
ss
inc
std
inc
cwtl
std
daa
pushf
jmp
rcll
arpl
loop
ljmp
scas
movsb
cli
imul
and
dec
loopne
jno
mov
sti
lock
aad
lret
inc
loopne
imul
mov
les
sub
jmp
push
vhaddps
or
adc
lret
loope
orb
add
and
mov
sub
sbb
mov
mov
mov
or
pusha
push
push
js
add
sahf
xor
xchg
cmp
cwtl
or
cmp
fwait
jae
ja,pn
sbb
int3
and
sti
es
dec
rcrl
lock
jl
jb
imul
or
lcall
inc
adc
lret
xlat
arpl
fiaddl
out
mov
movsl
cld
pop
sbb
push
push
add
out
pop
jns
jo,pn
dec
movsl
sarl
push
pop
test
popa
mov
xchg
or
dec
jno
jne
xchg
shl
arpl
imul
sbb
sub
cmp
rcrl
lret
test
cld
mov
inc
xchg
filds
out
mov
cmc
and
sub
je
stos
je
bound
inc
sahf
fcmovnbe
jge
mov
inc
lds
xacquire
push
les
inc
cmp
mov
fs
xor
dec
pop
out
pop
add
push
aam
pop
pop
int
pop
xchg
mov
cmpsb
popf
das
lock
mov
int3
dec
and
stos
and
xchg
push
stc
insb
mov
in
or
outsb
mov
xor
adc
cmpsb
out
or
cmpsl
fstl
lret
xchg
test
cmp
nop
stc
sub
xor
imull
mov
scas
mov
mov
push
inc
lcall
cmp
lahf
es
pop
arpl
push
je
sub
dec
sub
adc
mov
sbb
add
mov
fsubrs
and
xor
inc
push
xor
pop
dec
fisubrl
je
jg
cvtdq2ps
dec
adc
xor
sub
push
push
sbb
repnz
sbb
adc
daa
mov
dec
roll
test
sbb
push
and
pop
mov
test
xor
cmp
sti
mov
iret
in
rcl
or
aaa
xor
mov
pop
mov
leave
test
push
push
in
inc
inc
add
xchg
jle
jb
push
mov
enter
test
cmc
mov
sbbl
out
push
out
pop
inc
dec
int
clc
mov
lds
sub
xchg
ficoms
std
adc
mov
push
cli
cmpsb
xlat
dec
mov
ret
popa
xor
scas
mov
xchg
mov
push
push
repz
and
dec
and
imul
fadds
out
pop
sbb
iret
dec
pop
adc
push
mov
inc
scas
add
xchg
jge
mov
and
arpl
andb
shl
cmp
dec
gs
cmp
pop
adc
les
repz
cmpsl
push
push
adc
in
push
imul
movsl
int
sti
jns
xor
jb
scas
loope
jecxz
ja
push
outsb
add
sarl
jmp
adc
xchg
mov
jge
xchg
lret
mov
pop
mov
es
inc
imul
mov
sbb
mov
clc
mov
ds
dec
call
int
cwtl
add
call
insb
movsl
jo
test
ljmp
jg
add
pop
daa
subb
pop
pop
sbb
test
pop
out
or
dec
mov
inc
cmp
imul
sbb
shlb
pop
and
cmp
inc
cmp
movsl
mov
xor
add
adc
mov
ds
ss
jle
push
mov
fnsave
fmuls
pop
lods
imul
bound
jns
das
stos
cmc
push
pop
xchg
push
xchg
mov
cmc
or
loopne
xacquire
pushf
cmp
jo
and
adc
sub
inc
cwtl
xchg
sub
xlat
cmp
mov
or
add
lds
lds
fstpl
jl
test
add
mov
gs
jle
pop
cmp
sbb
pop
shlb
mov
mov
rcrl
inc
dec
sub
dec
out
mov
pop
sub
add
data16
dec
js
movsb
in
or
mov
xchg
adc
negl
or
adc
push
rorl
add
out
xchg
mov
pop
sbb
or
pop
repnz
ljmp
cld
push
mov
out
daa
shl
sub
cld
push
mov
mov
sbb
jno
in
push
inc
cmp
test
sub
lods
lret
iret
pop
mov
lret
add
xchg
xchg
insb
xchg
dec
inc
mov
bound
pop
cmpsl
test
mov
lds
mov
adc
sbb
push
sbb
sub
jecxz
rorl
xor
stos
mov
das
sbb
jb
movaps
addb
push
lahf
mov
sti
xchg
dec
pop
pop
into
inc
mov
xor
ret
les
mov
xor
mov
shll
int3
cli
dec
sbb
stc
gs
sti
sbb
push
mov
adc
mov
popa
dec
inc
dec
mov
nop
sbb
shrb
push
sub
sahf
sbb
fisubs
jp
push
add
jns
mov
mov
scas
pop
push
mov
out
cwtl
js
mov
sub
mov
fnstsw
pop
lcall
shll
push
fldl2t
adc
stos
pushf
mov
stos
negb
mov
add
hlt
in
sbb
add
adc
pop
mov
data16
out
cmp
mov
outsb
test
mov
mov
iret
or
mov
xlat
mov
adcb
stos
cmpsl
pop
adc
ss
push
insl
lea
adc
adc
fbld
pop
push
jp
and
cwtl
in
jge
andb
in
xor
sbbl
repnz
mov
insl
xchg
jecxz
out
ret
mov
cmp
and
cmc
adc
mov
mov
out
mov
xlat
lahf
rol
add
add
sahf
cmp
cwtl
sbb
push
mov
xchg
ret
cmc
mov
je
cld
cmp
pop
dec
and
pop
dec
xchg
movsl
add
or
lds
fsubrl
mov
push
mov
xchg
lods
mov
in
sbb
mov
fisttpll
movsb
stos
push
mov
push
dec
out
sub
inc
jbe
jnp
jo
mov
popf
jle
or
lods
fimull
or
jle
test
fadds
push
and
jb
bound
jnp
xchg
pop
lds
sub
mov
xchg
mov
fildll
mov
pop
out
pop
jecxz
das
sub
shlb
test
jecxz
gs
pop
fmull
lods
jno
rorl
cmpsb
inc
in
imul
call
loopne
inc
adc
push
rol
xor
movsb
pop
pop
mov
sub
xchg
xchg
in
jno
stos
or
sahf
das
pop
sbb
pop
sub
or
mov
mov
push
inc
xor
cld
test
or
lret
xor
mov
les
add
loope
pop
shll
jbe
xchg
push
sub
push
mov
mov
js
sub
pop
test
mov
mov
and
repnz
popa
std
pushf
mov
push
icebp
jmp
jo
movsl
in
shlb
leave
aaa
and
mov
scas
lret
mov
add
mov
stos
out
push
pmaxsw
inc
inc
sub
fdivrl
cltd
xchg
hlt
fstpt
jle
cmc
mov
cmp
mov
or
mov
pushf
in
out
or
jmp
mov
adc
cmc
xor
mov
add
or
data16
fstpl
out
cld
test
in
dec
pop
and
fwait
cwtl
push
sub
mov
in
movsb
cmp
lods
push
loop
imul
and
mov
lock
repnz
cmp
insb
cmpsl
pop
rol
cmpb
or
ja
out
leave
push
sbb
mov
imul
mov
mov
jne
lea
pop
in
cld
mov
cmc
dec
jne
rolb
xchg
fiadds
dec
cmovg
inc
dec
insb
xchg
inc
jl
in
lock
stos
push
lds
pop
inc
shlb
out
inc
je
mov
fwait
cld
mov
dec
dec
lds
imul
aam
and
xor
popa
fstp
sbb
inc
mov
and
jg
inc
adc
lock
pop
data16
rclb
mov
pop
sahf
clc
sbb
inc
mov
dec
push
push
sub
xchg
mov
or
fcmovbe
lahf
in
call
cmp
std
mov
jbe
into
or
xor
sti
lret
test
sub
lods
push
sbbb
sbb
mov
jmp
addb
push
or
sub
aam
jne
nop
mov
and
xor
adc
lods
fcompl
push
jp
mov
xor
iret
cmp
pop
ror
pushf
shl
pop
rclb
into
dec
dec
lcall
xor
and
adc
rcll
dec
dec
mov
mul
jne
leave
addr16
cmp
mov
mov
pop
pop
inc
repz
sbb
clc
xchg
mov
mov
mov
loopne
repnz
or
xchg
inc
int3
xlat
ljmp
mov
mov
inc
sbb
dec
push
fdivl
loop
mov
sub
mov
push
xchg
jge
ret
push
in
inc
cmp
outsb
ret
sbb
push
pop
push
cmpsl
and
ret
xchg
add
sub
dec
call
jmp
insl
and
jecxz
add
outsb
push
or
movsb
xchg
xor
imul
mov
insl
punpckldq
bnd
xlat
scas
int3
inc
leave
int
push
inc
mov
mov
jmp
mov
shll
dec
mov
jb
jo
mov
xchg
repnz
mov
outsl
sahf
stos
pop
and
push
cmpsb
push
push
je
lahf
xor
arpl
dec
inc
rcll
push
or
mov
mov
fs
stos
enter
cmp
xor
test
inc
int3
mov
movsb
cmp
mov
in
aad
daa
std
fmuls
loop
jns
pop
mov
imul
shll
test
jns
and
cwtl
fdivrl
das
stos
sti
push
test
in
call
int3
scas
inc
dec
into
loop
les
or
sub
test
dec
scas
and
jg
bound
pop
cld
xor
pop
dec
shlb
in
mov
mov
in
cmp
jb
and
xchg
mov
xor
mov
cmp
or
inc
loop
xor
loop
xchg
inc
jl
es
xorl
and
cmpsb
aas
dec
add
ss
fnstenv
call
jl
mov
mov
into
jb
aaa
sub
cmc
and
les
adc
mov
mov
mov
repz
enter
mov
pop
rorb
pop
mov
cld
push
sti
out
or
in
ret
pop
out
mov
xchg
movsl
xor
mov
aam
into
ja
jecxz
dec
add
adc
lods
ret
loope
test
fwait
jo
and
stos
shrb
mov
out
xor
sub
ljmp
ljmp
ja
sbb
clc
push
mov
rclb
jg
sub
rolb
mov
xchg
popf
in
and
std
je
addr16
pop
cmp
xor
ja
outsl
insb
inc
push
sub
lods
sarb
jle
flds
fists
xchg
adc
lahf
push
adc
jecxz
push
scas
or
cs
and
dec
mov
les
lods
xor
mov
cmpsb
aaa
in
out
pop
mov
decb
out
and
call
fxch
lret
in
jmp
lahf
dec
jecxz
cmpsl
xchg
dec
outsb
cmpsb
notb
pop
ret
push
push
popa
psubq
insl
cmc
lods
add
popf
adc
xor
adc
jbe
mov
and
dec
cltd
sub
xlat
jb
fld
inc
sub
xor
fwait
inc
lods
or
push
call
add
lret
fnstcw
jp
aam
xchg
int3
push
iret
dec
out
sbb
sub
mov
xor
lods
xlat
pop
es
lds
push
pop
movsl
pop
scas
dec
jae
je
lods
or
sub
cmp
sub
lock
push
xchg
mov
aaa
out
lods
push
daa
fisubl
fistpl
ret
cwtl
dec
dec
jmp
test
pop
movsl
pop
hlt
sub
loop
aam
xor
jno
dec
scas
jmp
cmc
xor
and
adc
push
cmpsb
mov
xchg
jne
push
pop
std
sbb
test
pop
fisttps
mov
inc
loopne
enter
ljmp
in
nop
sbb
js
mov
inc
pop
lea
mov
mov
nop
lea
xchg
sub
sbb
je
xchg
sahf
ss
xchg
in
repz
mov
scas
mov
and
imul
xor
int
mov
loope
mov
sti
mov
ficoms
addr16
pop
push
pushf
xor
mov
mov
lahf
cltd
repz
or
daa
out
ja
test
xchg
outsl
lea
jae
daa
leave
push
scas
mov
sub
idivl
jmp
push
dec
leave
ja
mov
adc
or
js
jmp
popa
out
fsubr
or
lds
dec
sub
xor
mov
add
sbbl
les
into
mov
push
cmpsl
test
imul
nop
mov
and
jo
outsl
jne
dec
mov
adc
sub
in
lcall
sbb
ljmp
addr16
mov
mov
into
mov
mov
sbb
mov
xchg
sahf
repz
mov
adc
test
xorb
es
dec
sbb
mov
ljmp
push
cli
adc
ficompl
mov
stos
shlb
das
jmp
push
sub
mov
mov
lea
cmp
inc
out
dec
repz
sahf
add
addr16
imul
ret
mov
stos
outsb
mov
jnp
test
cmpsb
icebp
cwtl
cmp
adc
jg
sub
lods
stc
inc
push
add
outsb
fcompl
push
xchg
rcll
xor
xchg
inc
inc
mov
roll
popf
jae
sub
mov
sahf
jno
jne
jmp
inc
push
sub
test
pop
pop
fbstp
mov
and
add
mov
pop
jnp
and
or
in
pop
repz
pop
in
or
mov
cmp
in
push
push
lea
adc
scas
lods
aam
cli
test
mov
xor
mov
ret
xchg
xor
jmp
jb
out
adc
lcall
lret
or
sub
and
jmp
pop
mov
inc
mov
push
movb
std
repnz
cmp
movsl
rep
cmp
mov
sbb
and
push
repz
mov
push
outsb
mov
or
inc
sbb
lds
xlat
or
imul
into
add
cmp
das
orb
inc
push
xor
and
mov
push
sub
stc
popa
pop
pop
mov
in
fdivrl
mov
imul
jnp
movsb
scas
cmp
xchg
cli
popf
mov
dec
mov
bound
loop
sub
repz
mov
fldt
js
nop
mov
outsl
xor
mov
pop
cmc
out
ds
pop
jb
or
adc
jge
xchg
imul
fistpl
sti
adc
negb
out
mov
add
popf
mov
mov
push
shll
mov
stos
add
pop
in
pop
pop
loope
sti
fwait
cmp
lea
xchg
gs
mov
andl
mov
xor
adc
xor
lret
daa
adc
jae
lock
cltd
cld
sub
fldcw
notb
mov
jecxz
int3
daa
jne
xchg
pop
clc
inc
xchg
outsl
push
lea
mov
popa
loopne
in
jb
cmpsb
cwtl
or
popa
dec
jg
push
cmp
sbb
imul
push
sti
cmp
push
inc
cmp
pop
or
sbb
lods
imulb
leave
sub
cwtl
addr16
les
scas
jne
lea
or
sbb
lods
mov
enter
ret
loopne
testb
fsub
sbb
mov
stos
mov
icebp
out
in
in
push
add
mov
push
test
push
pop
out
out
xchg
popf
mov
inc
add
inc
pushf
cmp
and
fstps
out
push
jbe
sub
call
ss
loopne
add
xchg
fistpl
xor
jbe
xchg
or
jge
out
xchg
roll
ja
movsl
add
inc
or
orb
or
aas
xchg
xor
xor
dec
sub
mov
into
xchg
xchg
adc
hlt
cmp
xor
sbb
lock
jns
dec
jmp
add
push
aas
or
cld
sti
aaa
mov
xchg
rorb
adc
jns
push
mov
jg
movsb
aam
aas
shlb
pop
mov
orb
ret
xchg
test
add
or
out
mov
pop
dec
dec
cmp
push
push
insb
ss
sbb
mov
pop
stos
cs
sub
add
repz
inc
pop
inc
test
fadds
jg
dec
dec
dec
mov
and
repz
inc
shr
inc
adc
mov
das
jle
bndstx
subb
loope
cmpsl
jo
and
lretw
out
push
shl
jno
cmpsb
addr16
mov
cmpsb
jbe
lods
ud2
pushf
lret
lea
xchg
push
xor
xchg
inc
push
leave
repz
cmc
sbb
mov
push
fwait
lods
lock
mov
cmp
scas
and
ljmp
fyl2xp1
pop
fnsave
inc
cmp
cld
out
cwtl
adc
lods
rcrl
dec
xchg
cwtl
stos
gs
pop
mov
lret
sbb
push
pusha
lods
adc
xchg
jo
insl
insb
sbb
test
mov
popa
scas
cli
loop
cwtl
jnp
stc
push
dec
jns
testb
dec
mov
push
lds
aaa
adc
xchg
lcall
cmpb
lock
adc
setl
lods
rcrl
incb
lcall
fs
outsb
cltd
das
adc
sub
mov
mov
les
dec
inc
sbb
cmpsb
xlat
inc
inc
inc
or
imul
fwait
dec
xchg
sti
sub
arpl
jno
mov
jl
loope
rol
mov
in
mov
cmpsl
addr16
and
shll
push
into
fisubrs
dec
adc
xor
lret
sbb
cmpsl
jmp
mov
mov
mov
rolb
stos
inc
pop
popa
pmullw
dec
fdivs
cmp
stos
and
int3
sbb
mov
mov
add
and
pop
mov
pop
pop
int3
jecxz
cmp
jg
jns
jo
pusha
jecxz
push
xchg
hlt
jmp
stc
push
inc
xchg
mov
and
popf
imul
fcomip
shlb
das
sbb
xchg
mov
loope
mov
xor
and
adc
xchg
out
fs
xchg
and
xlat
pop
dec
rcll
addb
arpl
enter
sub
cmp
cmpxchg
jecxz
mov
inc
xchg
xor
inc
stc
fcom
jne
xlat
lahf
mov
sub
icebp
fwait
or
lret
imul
rol
mov
lcall
data16
mov
sbb
inc
and
add
xchg
mov
call
cmpsb
dec
mov
push
pushf
jnp
inc
pop
add
in
mov
xor
adc
sbb
sub
lret
mov
jmp
mov
test
pop
inc
adc
in
or
push
call
addr16
mov
mov
adc
adcl
cmpsb
inc
dec
test
xor
pusha
ja
inc
subl
push
pop
xchg
mov
pop
or
cld
mov
mov
jecxz
in
inc
dec
sbb
fwait
int3
rorl
mov
mov
pop
sub
sbb
sub
xorl
ja
sub
ljmp
add
arpl
adc
mov
jg
test
and
mov
mov
lcall
push
mov
cmp
cli
lods
loopne
hlt
mov
loopne
ret
mov
mov
mov
push
mov
cli
pop
out
es
aad
es
ljmp
jne
rcr
inc
inc
sub
xor
addb
jecxz
popa
push
test
pop
ret
push
or
jle
jmp
adc
pusha
fnsave
imul
test
pop
das
fdivl
imul
xchg
lds
xor
xchg
jge
dec
dec
jl
push
xchg
sub
js
mov
ret
jae
movl
sub
push
sarl
ds
and
adc
or
cmp
pop
test
pop
mov
and
lods
pop
pop
xchg
mov
jmp
or
and
sbb
cwtl
fs
sbb
inc
ljmp
gs
inc
addr16
imul
addr16
imulb
arpl
push
push
inc
push
jecxz
mov
mov
call
jle
in
js
lret
aaa
sub
std
mov
lods
lock
ficompl
adc
call
ja
cmp
sti
rcl
insb
ficomps
out
xchg
pop
out
mov
push
xchg
inc
cmp
jmp
rclb
test
xchg
sub
outsb
dec
addl
loop
sub
mov
fcoml
scas
xor
and
push
orl
cmp
add
pop
gs
idivl
dec
sbbl
aas
cmp
cwtl
pushf
or
out
jns
push
adc
cvtpi2ps
push
imul
adc
mov
cwtl
sub
jnp
ljmp
imul
sbb
jb
push
sbb
jmp
insl
inc
xor
pop
xor
mov
mov
ficoml
or
loopne
je
out
mov
into
mov
out
lahf
inc
aaa
mov
sbb
fstpl
mov
mov
int
push
inc
xchg
mov
lahf
fxch
sbb
imul
into
xchg
sti
in
push
mov
add
je
inc
push
movsl
outsl
cmp
pop
or
shll
xchg
mov
movsb
pop
sbb
pop
ljmp
cmp
pop
cmp
inc
mov
lds
sti
hlt
fildll
in
pop
xor
add
insl
lods
faddp
jnp
out
and
mov
sti
or
icebp
mov
pop
inc
pop
sti
out
cmp
adc
bswap
and
push
int
jg
xorps
push
imul
push
jp
mov
dec
mov
cmp
in
das
jne
pop
aas
cmp
pusha
sub
pop
sahf
cli
jae
jo
in
dec
sub
cmp
mov
pop
jg
call
pop
stos
repz
popa
adc
fldl
mov
stos
mov
lret
pop
xor
rep
sbbb
pop
loope
dec
adc
mov
cli
mov
roll
rcll
test
ret
cmp
dec
or
repnz
inc
and
bswap
pop
mov
jmp
dec
imul
cmp
or
scas
dec
mov
int
sti
cmp
out
jns
push
dec
jge
scas
into
push
push
iret
scas
jae
lret
bound
fwait
movsb
repnz
jl
ds
mov
subb
icebp
stos
stos
aas
push
neg
into
mov
jp
xrelease
add
and
paddusb
scas
push
cld
xchg
pop
mov
pop
in
test
dec
inc
ljmp
stos
push
or
mov
inc
lret
fstpt
test
ss
rep
jecxz
fdivrp
cmpsl
loop
push
lock
mov
xchg
bound
out
fisttps
mov
sti
push
rorb
je,pn
mov
dec
gs
mov
fists
mov
loop
pop
mov
into
or
aad
jecxz
sub
rcr
inc
lret
fbstp
mov
stos
pop
std
inc
mov
cwtl
cwtl
dec
imul
imul
out
sbb
and
inc
adc
sbb
in
push
sbb
lds
test
lods
push
adc
icebp
xor
xchg
sbb
fadds
mov
xchg
add
dec
mov
inc
jnp
xor
xor
aaa
lods
sub
push
or
je
pop
mov
push
push
ret
or
outsl
out
xchg
push
cmc
ja
cmp
les
adc
or
out
mov
stos
sahf
mov
call
adcb
dec
lcall
mov
fistpl
cmp
dec
mov
popa
inc
addr16
imul
mov
dec
xor
in
enter
xchg
mov
add
pop
enter
xor
mov
xor
xchg
dec
orl
mov
xchg
into
cmovne
sub
aad
inc
imul
pop
rcrl
mov
xchg
push
stc
xorb
jns
cmpsb
and
clc
call
std
fisttpll
xor
and
addb
bound
mov
add
cld
cmc
fs
push
pusha
sti
xchg
int3
add
loopne
or
fimull
imul
inc
jne
rorl
pop
aas
mov
jnp
stc
pop
inc
mov
testb
cmp
jae
cmc
inc
je
cmpsb
sarb
inc
js
jle
jb
mov
jno
movl
jnp
int3
xor
fisubl
addr16
and
pop
or
cmp
push
stc
push
scas
notb
sub
sbb
pop
push
cmp
xor
imul
push
out
bound
dec
mov
add
scas
pop
add
cmc
es
pop
sbb
pop
shll
cmp
cld
mov
or
dec
add
aad
rorb
sbb
and
lods
cmp
dec
sbb
stc
gs
lret
mov
and
flds
out
ds
inc
cmp
jge
dec
std
ds
mov
enter
pop
loop
in
in
loop
rol
pop
adc
xor
adc
add
mov
pop
cmp
je
movsl
sub
pusha
jae
fisttps
dec
xor
mov
repnz
not
adc
scas
les
mov
inc
jae
outsl
loope
sbb
and
repz
xchg
subl
arpl
testb
sub
xor
jo
add
fisubs
test
adc
loop
inc
jp
jo
xor
sarb
outsl
jecxz
xchg
sub
pop
inc
pop
fstpl
cmpb
mov
js
stos
addr16
push
je
jl
add
jns
xchg
outsl
sbb
mov
mov
ss
insb
xchg
leave
mov
daa
or
mov
xor
cmp
pop
mov
fs
push
pop
mov
dec
in
shrl
mov
stc
sbb
inc
adc
xor
pop
cltd
lock
mov
lret
xor
xor
push
jne
push
popa
jle
jo
rcll
rcr
mov
scas
sub
lret
lea
mov
push
and
sbb
sbb
sbb
movsl
cmp
psubb
aad
out
pop
lea
stos
xchg
sub
xchg
and
adc
ret
loopne
in
mov
outsb
sbbl
cs
mov
test
ja
inc
cmpsl
dec
xchg
pop
or
scas
cmp
scas
and
jl
add
fs
loopne
testb
xlat
imul
push
ficoms
outsb
daa
popa
inc
leave
mov
movsb
aad
movups
lods
ret
out
popa
cmpl
push
pusha
lds
or
jg
pop
ffreep
rol
sub
cmp
push
inc
mov
outsb
inc
loopne
push
test
pop
mov
push
inc
pop
jno
in
sbb
loope
xchg
stc
nop
cs
pop
mov
inc
sbb
int3
aaa
lahf
cld
sti
test
pusha
push
loopne
and
xchg
pop
call
jbe
lret
sarb
ds
andb
dec
int3
pop
mov
push
movsb
outsl
add
sbb
cmp
pop
xorl
cwtl
int
mov
dec
mov
fs
pop
cmc
xor
out
xor
pop
lock
pop
int3
mov
in
fldcw
mov
push
pop
push
sub
dec
add
pop
sahf
les
ror
dec
in
xor
pushf
and
cmp
mov
push
notl
dec
das
or
cwtl
fucomp
js
out
loopne
fwait
mov
jb
pop
pop
jmp
push
jns
and
jns
xchg
dec
sahf
pop
xchg
stos
push
inc
test
cmp
adc
test
cmp
ja
mov
loope
add
add
fwait
nop
test
aad
inc
lret
lret
inc
int3
popa
ss
out
sbb
stc
push
aas
andl
scas
mov
out
adc
imul
dec
testb
cmp
push
sub
jnp
jnp
movsb
lret
movsb
das
popf
jnp
xchg
inc
movsb
testb
push
sbb
add
push
movsl
cmp
mov
andl
mov
and
ja
test
cmp
xchg
pop
adc
lret
lahf
shll
in
lret
fstps
and
mov
mov
push
mov
inc
ja
lods
xchg
lret
ret
jo
pop
jo
jecxz
test
shrb
into
push
lds
jno
pop
sub
sub
sub
lea
dec
sub
sbbl
fwait
loope
inc
popf
push
rolb
mov
jo
mov
sbb
inc
popa
xchg
push
xor
fucomip
jg
jmp
xor
das
mov
or
push
or
movsb
inc
sbb
or
push
pop
xchg
imul
jo
ret
call
xor
push
fsubrp
sub
aas
xchg
data16
jbe
cli
mov
xor
fnstcw
outsb
mov
cld
test
push
push
stc
orl
orl
mov
and
xchg
movsl
out
push
aad
or
mov
mov
pop
fadds
jmp
mov
or
cmp
pop
sahf
push
scas
call
repnz
cltd
pop
sub
shrb
push
sub
inc
adc
fsubrs
aad
ds
lods
jl
dec
adc
insl
inc
rcrl
mov
xchg
out
popf
sti
push
xor
repnz
into
xor
dec
loop
lcall
icebp
mov
lea
out
xor
test
push
adc
movl
xchg
lea
popf
jg
and
xchg
shlw
sub
dec
or
jmp
xchg
cmp
push
cmpsl
add
xor
dec
out
jns
inc
and
mov
dec
add
sub
mov
xor
aas
jl
sub
mov
es
sbb
inc
test
mov
dec
sbbb
adc
cmpsb
jb
scas
inc
sbb
sbb
ljmp
out
mov
pop
jge
leave
mov
inc
cltd
xchg
imul
es
stc
jmp
sub
mov
xor
mov
cltd
and
mov
mov
pop
in
hlt
jmp
sti
xchg
jnp
xchg
cmp
xchg
cmp
jge
sbb
pusha
mov
fwait
ja
les
mov
adc
icebp
xchg
je
add
xchg
cs
call
jnp
add
fs
mov
inc
out
adc
adc
push
sub
divb
fldt
dec
dec
push
aad
sub
insb
xchg
ds
lods
fistps
notl
mov
stos
mov
mov
mov
inc
loop
push
fbstp
out
ret
dec
enter
inc
add
loop
xchg
pop
lahf
push
shrb
mov
jne
pop
roll
frstor
pop
dec
mov
out
notb
rclb
ret
lret
push
pop
popf
inc
jbe
int3
stos
cltd
aad
jbe
xor
ficoms
xor
adc
sbb
pusha
daa
dec
add
pop
sub
mov
push
jo
sub
popa
inc
lahf
xchg
sub
inc
lret
or
neg
repz
cmp
shrl
xor
sub
es
mov
dec
aam
cmp
xor
lds
xchg
sub
je
jge
sbb
les
xor
in
mov
and
jns
inc
out
sbb
cmp
inc
mov
pop
pop
mov
leave
cmp
aam
test
xor
pop
std
test
int
orb
jae
push
jl
xchg
jl
mov
sahf
inc
xchg
dec
fst
cwtl
and
push
fwait
jne
scas
push
out
jmp
xor
xchg
cs
xchg
mov
or
xchg
push
lahf
xorb
je
stos
adc
pusha
xor
mov
lret
xchg
or
add
psllq
add
bound
fimuls
sbb
popf
outsb
in
idiv
dec
mov
xchg
imul
fs
xchg
mov
loop
icebp
xchg
lock
mov
rorb
fdivr
mov
lcall
mov
xchg
and
sub
inc
sbb
data16
mov
jg
test
add
fadd
pop
negb
mov
add
out
mov
loop
movsl
ret
fsub
idivb
add
std
or
dec
dec
notl
and
dec
fisubl
ljmp
and
xor
push
mov
dec
test
jne
cli
int3
xchg
adc
jp
jne
in
sub
add
sbb
and
mov
dec
movsl
sbb
or
cmp
xor
stos
adc
pop
in
loop
shll
nop
adcb
icebp
mov
mov
cmp
jge
test
test
lods
aam
jb
ja
test
test
test
push
loop
add
orl
movsb
xchg
mov
xor
iret
mov
insb
push
ss
pslld
fstps
iret
andl
int
cmpsb
cwtl
jnp
hlt
jo
dec
les
push
xor
or
in
jno
cs
mov
jge
repz
movsl
xor
scas
pop
ret
scas
dec
mov
cld
stos
into
xor
ljmp
xchg
and
pushf
jle
clc
pop
and
repnz
je
sub
dec
lea
mov
xorb
xor
and
pop
or
xor
or
test
pop
rorl
test
xor
sub
lret
dec
push
mov
push
mov
es
and
leave
push
lds
aad
ret
andb
fbstp
cmp
mov
iret
dec
mov
push
or
dec
adc
outsl
inc
mov
movsb
jle
nop
mov
jle
das
ret
cmp
call
adc
out
arpl
cmp
testb
enter
outsl
xor
sbb
roll
insl
sahf
adc
jo
outsl
pop
pop
push
loopne
lcall
add
add
add
xor
lods
xor
in
xor
enter
divb
cmp
shlb
cmp
add
cmp
fdivs
cmp
push
xor
sbb
cmp
sub
cmp
cmp
cmp
dec
xor
pop
xor
add
add
xor
add
add
je
cmp
add
add
mov
cmp
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
insl
jo
fs
insb
add
popa
addr16
insb
insb
add
gs
insb
xor
cs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
arpl
push
outsb
fs
arpl
add
push
gs
outsl
jbe
push
gs
outsl
arpl
imul
push
je
push
je
push
