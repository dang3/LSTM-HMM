push
mov
sub
mov
mov
xor
mov
mov
xor
mov
cmp
ja
cmp
jb
mov
movl
xor
mov
call
cmp
je
test
je
movl
call
mov
mov
mov
mov
mov
pop
ret
cmp
je
cmp
je
mov
mov
mov
mov
pop
ret
lea
cmp
jne
movl
xor
mov
call
cmp
je
test
je
movl
call
jmp
movl
mov
mov
call
test
je
call
mov
jmp
movl
mov
mov
mov
call
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
lea
movl
call
sub
call
movl
mov
lea
mov
mov
mov
mov
mov
movl
call
mov
test
je
mov
mov
test
jne
cmp
je
mov
mov
mov
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
call
call
mov
mov
call
and
call
mov
mov
mov
mov
mov
mov
call
mov
call
mov
call
mov
mov
mov
mov
call
mov
jmp
lea
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
sub
movl
call
call
nop
lea
push
mov
mov
pop
jmp
lea
push
mov
mov
pop
jmp
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
push
push
push
xchg
adc
push
adc
jo
adc
je
push
xlat
mov
mov
adc
jo
mov
push
push
lea
mov
xor
pop
xor
adc
or
pop
push
and
sbb
mov
lods
dec
jge
fldl
xchg
jge
fstpl
pop
stos
pop
mov
je
push
push
push
push
push
xchg
push
push
inc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
push
divl
fstl
adc
mov
xchg
push
jo
adc
je
push
xlat
mov
push
dec
adc
jo
inc
pop
push
push
divl
push
xchg
adc
push
push
push
push
xchg
adc
inc
add
push
xchg
push
jo
push
push
push
cmc
je
adc
xchg
push
push
push
push
push
xchg
push
adc
adc
adc
call
test
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
mov
adc
jo
cwtl
dec
push
push
lea
mov
xor
pop
xor
adc
or
test
and
lods
fstl
movsb
filds
movsb
fldl
mov
sub
push
fists
mov
mov
filds
movsb
jge
fldl
test
pop
mov
add
test
mov
leave
ret
push
mov
mov
call
nop
nop
call
xchg
push
adc
adc
push
push
cmc
js
adc
mov
push
fstl
movsb
xchg
push
jo
je
push
mov
fstl
jo
xchg
adc
inc
je
push
int3
mov
jo
sbb
fists
mov
fists
movsb
fstl
jo
int3
mov
jo
push
dec
push
push
fists
movsb
fstl
mov
rcll
fstl
jo
xchg
push
jo
add
push
mov
call
test
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
xlat
lods
push
and
inc
xchg
push
jo
push
push
push
mov
xlat
mov
adc
adc
fists
inc
fstl
jo
fists
pop
fstl
jo
fists
pop
fstl
mov
xlat
mov
mov
add
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
jae
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
inc
sub
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
dec
dec
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
sbb
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
in
add
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
mov
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
mov
fmuls
xchg
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
push
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
xchg
and
add
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
clc
xchg
adc
adc
xchg
inc
adc
xchg
adc
pop
push
push
push
xchg
adc
fs
push
push
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
sub
push
jo
push
push
push
mov
xlat
mov
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
int3
fstl
mov
xlat
mov
and
adc
push
push
push
push
mov
xchg
adc
push
push
push
push
fists
pop
fstl
jo
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
and
push
xchg
adc
je
push
push
in
push
push
push
aam
adc
in
push
push
push
aam
adc
xchg
adc
push
push
fwait
push
xchg
adc
adc
adc
jo
fs
jo
push
push
push
mov
xlat
mov
fists
inc
fstl
jo
fists
mov
out
inc
push
push
xlat
mov
pop
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
pushf
fstl
mov
xlat
mov
dec
fsts
pushf
fstl
mov
xlat
mov
fstl
mov
xlat
mov
and
add
mov
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xlat
sub
and
push
push
push
push
push
add
js
fnstenv
jo
mov
adc
xor
adc
sub
movsb
filds
mov
aad
jmp
mov
test
pop
fists
pop
cmp
push
jge
fstpl
pop
stos
pop
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
add
push
adc
adc
xor
adc
adc
mov
adc
adc
adc
adc
test
push
je
adc
push
push
push
xchg
adc
fists
mov
adc
sbb
rcll
push
filds
mov
adc
adc
fists
pop
fstl
mov
rcll
flds
fists
mov
jecxz
push
fstps
push
push
push
push
filds
mov
adc
adc
mov
add
test
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
adc
xlat
sub
inc
fists
pop
aam
push
and
adc
pop
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
xchg
adc
fists
pop
fstl
mov
adc
adc
push
push
push
fists
lods
outsl
adc
pop
filds
lods
push
xchg
fists
pop
push
adc
fsts
lods
stos
push
mov
add
test
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
fstl
test
adc
adc
fists
pop
filds
lods
push
xchg
fists
pop
insb
push
and
adc
mov
lods
stos
push
mov
add
test
movl
mov
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fstl
mov
adc
push
jo
xor
adc
and
adc
dec
fists
pop
fstl
jo
fists
test
push
jo
push
stos
stos
stos
call
test
mov
mov
mov
leave
ret
nop
push
mov
sub
nop
nop
call
xlat
sub
inc
filds
pop
fists
pop
fcoml
adc
inc
stos
pop
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
nop
nop
call
xchg
push
jo
insb
adc
pop
push
push
xlat
mov
stos
stos
stos
xchg
adc
cmp
add
jo
xor
and
jo
insb
adc
pop
push
push
xlat
mov
push
shrb
fstl
mov
fst
sub
jo
iret
insb
adc
add
jo
jo
stos
stos
fst
sub
stos
stos
xchg
adc
cli
insb
adc
add
jo
pop
test
and
stos
stos
xchg
adc
jmp
adc
add
jo
mov
sarl
stos
stos
stos
xchg
adc
test
add
jo
test
cmp
stos
stos
xchg
adc
mov
adc
add
jo
loopne
stos
stos
fst
xor
jo
mov
roll
stos
stos
stos
fstl
mov
fst
xor
stos
stos
xchg
adc
stos
insb
adc
add
jo
sub
or
jo
pop
insl
adc
add
jo
xor
stos
stos
fst
or
stos
stos
fists
pop
fstl
mov
aad
sbb
pop
rcll
push
push
push
filds
mov
push
push
adc
push
pop
sarl
push
push
xchg
adc
adc
xchg
adc
push
push
push
push
fsts
push
jo
bound
jo
inc
push
push
push
xchg
adc
push
push
push
push
fsts
mov
push
jo
dec
stos
stos
stos
fsts
mov
adc
fsts
adc
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
push
push
push
fists
pop
fstl
and
xlat
mov
rol
push
push
push
xchg
adc
push
push
push
push
xchg
adc
push
inc
push
push
xchg
adc
push
push
push
push
xchg
push
jo
push
push
push
or
xlat
mov
fists
rclb
push
fists
rcr
adc
fists
mov
push
jo
shll
stos
stos
stos
test
mov
rclb
adc
push
push
push
push
xchg
adc
push
push
push
push
fsts
aam
adc
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
stos
test
mov
fists
aam
push
pusha
and
aam
adc
fists
mov
push
jo
shrl
stos
stos
stos
stos
test
mov
inc
adc
push
push
xchg
adc
push
fs
push
fists
movsb
fists
fstl
jo
fists
movsb
fists
fstl
jo
fists
mov
push
jo
shll
stos
stos
stos
test
mov
stos
stos
stos
xlat
jmp
push
pop
ror
push
push
push
xchg
adc
push
push
push
push
fists
movsb
fists
fstl
jo
fists
pop
fstl
jo
add
stos
stos
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
push
push
push
push
fists
movsb
pop
jecxz
push
outsl
rcrl
stos
stos
stos
sub
add
push
push
sbb
xchg
mov
push
test
push
push
lods
push
push
push
fstl
mov
push
push
push
push
fists
mov
adc
filds
mov
push
inc
fstl
jo
filds
mov
stos
stos
push
push
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
stos
stos
stos
stos
push
mov
inc
push
push
push
push
xchg
adc
push
push
push
push
fists
movsb
xlat
xchg
pusha
fstl
jo
fists
rcr
aam
push
push
push
xlat
xchg
pop
fstl
jo
fists
mov
push
jo
shrl
stos
stos
stos
test
mov
add
stos
stos
fst
in
push
push
xchg
rcrl
stos
stos
push
push
push
push
fists
movsb
fst
adc
adc
jae
rcll
stos
stos
stos
xlat
xchg
dec
fst
adc
stos
stos
xlat
jmp
push
and
rcll
stos
stos
fists
fst
sbb
stos
stos
xchg
rcll
stos
stos
push
push
push
push
adc
stos
stos
outsl
rcrl
stos
stos
and
rcll
stos
stos
stos
push
fists
shrb
push
mov
fstl
jo
fists
mov
push
jo
sarl
stos
stos
stos
test
mov
fstl
xor
xlat
mov
pop
push
aam
push
xchg
adc
push
push
push
push
fists
pop
fstl
or
stos
stos
stos
test
mov
add
test
leave
ret
nop
push
mov
sub
nop
nop
call
xchg
adc
xchg
adc
fists
mov
adc
pop
rcr
push
push
push
filds
lods
fists
mov
adc
jecxz
push
fstl
movsb
fists
test
jecxz
inc
push
adc
adc
adc
fldl
flds
push
push
push
push
fsts
mov
filds
movsb
fldl
xchg
mov
push
adc
adc
adc
adc
mov
pop
push
and
adc
add
inc
fists
mov
pop
call
test
movl
mov
leave
ret
nop
push
mov
sub
nop
nop
call
fists
pop
fstl
test
adc
push
and
test
adc
push
adc
push
and
adc
mov
add
test
movl
mov
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
sub
nop
nop
call
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
jl
fists
pop
jno
push
push
push
xor
adc
pop
fists
pop
jno
push
push
push
xor
adc
jecxz
scas
filds
pop
pop
jecxz
lods
sbb
push
push
push
adc
sbb
adc
adc
pop
push
push
fsts
movsb
gs
filds
pop
pop
jecxz
mov
pop
push
push
fsts
movsb
push
inc
call
test
mov
add
pop
pop
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
adc
adc
filds
fsts
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
xor
add
test
leave
ret
push
mov
sub
nop
nop
call
fists
pop
fists
test
adc
fstl
lods
xor
xor
sub
add
adc
adc
test
adc
fists
pop
fstl
mov
fstl
inc
fists
test
adc
adc
adc
xor
adc
test
adc
adc
adc
push
fsts
lods
gs
fists
pop
filds
test
inc
filds
pop
fists
test
push
filds
inc
fists
lods
fstl
in
sbb
leave
ret
nop
push
mov
push
sub
nop
nop
call
xchg
adc
sub
mov
aad
mov
sub
add
lods
xchg
mov
fstl
adc
mov
insl
adc
ficomps
adc
fsts
lods
stos
push
mov
push
push
push
push
xchg
adc
sub
mov
xchg
adc
sub
mov
pop
fists
pop
push
adc
test
adc
push
fists
mov
push
xchg
adc
fsts
movsb
stos
push
mov
fisttps
lods
filds
lods
fists
mov
insl
adc
int
adc
adc
adc
xchg
adc
sub
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
filds
lods
fists
mov
sbb
lods
fists
mov
adc
push
fsts
lods
xlat
push
push
mov
push
push
push
push
xlat
sub
mov
aad
mov
sub
fsts
mov
adc
fsts
mov
fists
pop
fstl
mov
fistps
pop
fists
lods
xchg
mov
fstl
adc
sbb
lods
xchg
mov
fstl
adc
fsts
mov
clc
fsts
lods
stos
push
mov
add
test
add
pop
pop
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
push
mov
sub
nop
nop
call
call
test
nop
nop
call
xchg
adc
fists
inc
fstl
lods
xlat
sub
lods
push
fists
lods
xchg
lods
push
push
xchg
outsl
adc
test
mov
push
adc
xchg
push
fstl
jo
fists
test
mov
push
adc
adc
fists
pop
fstl
mov
fsts
test
push
push
mov
add
test
leave
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
push
mov
mov
push
sub
and
call
call
call
mov
lea
mov
call
sub
test
jne
jmp
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
cmp
je
cmp
setne
xor
cmp
setne
test
je
lea
lea
test
je
inc
movzbl
cmp
setne
xor
cmp
setne
test
jne
jmp
lea
inc
movzbl
cmp
setne
xor
test
setne
test
jne
cmp
je
lea
cmp
sete
cmp
sete
jmp
mov
inc
movzbl
cmp
sete
cmp
sete
or
test
jne
movl
call
sub
testb
mov
je
movzwl
mov
xor
mov
mov
mov
call
sub
mov
leave
ret
inc
movzbl
jmp
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
jmp
lea
mov
mov
add
add
cmp
jb
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
fninit
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
mov
test
je
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
lea
mov
test
jne
leave
ret
lea
push
mov
push
sub
mov
cmp
je
test
mov
je
mov
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
lea
lea
push
mov
push
sub
mov
test
jne
mov
mov
mov
cmp
je
test
mov
je
nop
lea
call
dec
jne
movl
call
pop
pop
pop
ret
mov
xor
test
jmp
inc
mov
test
jne
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
add
cmp
jb
sub
orl
sub
jmp
sub
orl
mov
mov
mov
mov
jmp
nop
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
jmp
nop
nop
incl
add
add
incl
add
add
add
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
push
push
nop
nop
push
mov
mov
test
mov
test
test
je
test
xor
test
dec
test
inc
test
jmp
pop
test
pop
pop
ret
add
push
push
test
push
mov
mov
test
mov
test
sub
test
test
je
test
xor
test
dec
test
dec
test
jmp
test
pop
test
pop
test
pop
ret
add
xchg
loopne
inc
dec
or
das
divl
les
divl
les
divl
les
divl
les
divl
les
divl
icebp
cmp
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
mov
jb
xor
inc
dec
jle
into
movsb
cmp
aad
xor
sar
mov
cmpsl
insl
xchg
inc
ret
jmp
xchg
xchg
fisttpl
imul
lahf
pop
adc
push
pop
insl
test
mov
pushf
xor
int3
xor
jnp
mov
pop
xor
pcmpgtw
adc
inc
push
cmpsl
push
mov
adc
inc
push
cmpsl
push
mov
loopne
fnstcw
aas
out
pop
les
divl
mov
or
aas
out
pop
les
divl
les
divl
les
divl
out
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
jle
ret
cmpb
pop
les
divl
les
divl
les
divl
push
sub
and
push
shlb
xor
aas
out
pop
les
divl
pop
sub
jno
mov
or
push
dec
mov
dec
std
cwtl
mov
pop
xchg
repnz
out
pop
les
divl
adc
adc
push
ror
mov
add
push
pop
mov
stos
sbb
jo
aas
out
pop
les
divl
nop
pop
jl
pop
aas
out
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
ja
mov
pop
dec
or
push
cli
and
mov
roll
fucomi
cmc
xchg
movb
jecxz
xchg
lods
insl
xor
xorb
out
dec
lock
lods
cmp
test
arpl
in
push
aam
arpl
aas
lret
rclb
pop
inc
xor
int
jl
jne
mov
ds
int3
aad
cmp
sbb
stos
inc
inc
inc
or
dec
and
repnz
jmp
mov
cld
sahf
sbb
popf
lret
mov
add
mov
mov
pop
mov
mov
jb
int
dec
cmp
les
xchg
arpl
divb
in
push
inc
adc
imul
mov
adc
dec
outsb
fwait
orl
mov
ficomps
sub
pop
inc
cwtl
cs
xor
sti
ds
jmp
cmp
xchg
insl
enter
lods
nop
sbbl
dec
mov
pop
mov
lds
loopne
shlb
and
movsl
in
lock
sub
add
pop
xchg
ja
in
jae
clc
mov
in
cmp
pop
decl
sub
sbb
jnp
jg
mov
inc
aaa
shll
cmp
sahf
or
ljmp
shll
push
loope
notb
std
data16
lret
notb
add
xlat
fsubrs
cwtl
cmpl
fs
push
jmp
lds
pop
mov
dec
fs
push
push
cmp
loop
outsb
mov
mov
ret
out
loop
xchg
add
jg
rorb
popl
push
dec
imul
insl
pushf
sbb
sub
sgdtl
xchg
ret
bnd
shrl
les
and
scas
loopne
mov
out
or
jb
dec
xor
subl
cmc
ja
push
and
push
sbb
or
sbb
push
push
lret
inc
push
mov
std
shlb
insl
lret
sub
movsl
jle
js
notl
addb
aas
jp
jmp
sub
bound
lahf
sarl
fs
mov
add
sbb
shll
xlat
jo
ficomps
imul
movsl
in
or
out
sbb
mov
notb
popa
push
lds
push
inc
jb
push
rep
xchg
jno
dec
mov
pushf
lcall
stos
cmpb
or
or
std
imul
ds
stos
push
out
clc
fcoms
push
ds
mov
lret
negl
sbb
sti
out
aam
mov
inc
test
enter
mov
sub
rcrl
xor
mov
lock
add
arpl
sbb
loop
test
sub
movsl
add
add
in
push
pop
xchg
test
lret
or
in
mov
insb
stos
and
push
test
dec
mov
mov
push
in
aaa
loopne
inc
xor
xchg
sahf
push
addr16
test
sub
or
mov
das
jge
dec
js
mov
mov
mov
mov
cwtl
or
stc
sti
int3
adc
push
lds
fsub
sbb
xchg
ds
jae
out
lret
xor
xchg
jo
or
stc
xor
pushf
dec
sub
pop
arpl
and
in
and
cmp
outsb
mov
rcrb
push
ficoms
xor
xorl
loop
mov
rcrl
in
fbstp
loopne
jl
stc
aas
incl
xor
movsl
pop
xchg
xor
inc
mov
imul
push
jo
ljmp
cld
sbb
xchg
push
xor
jnp
addr16
mov
add
add
push
shlb
xchg
adc
sub
lods
jae
jnp
mov
sbb
pop
fimuls
arpl
out
stos
in
mov
aam
orl
mov
es
out
and
repnz
mov
lret
loop
ss
and
cli
rolb
mov
cltd
adcb
mov
cmp
and
shrb
rcl
movsb
jno
xchg
sti
mov
roll
push
xchg
cmp
push
jbe
push
sbb
insl
hlt
dec
fbld
xor
mov
jbe
push
jae
jo
leave
add
in
repz
bound
lret
inc
jge
sarb
fcmovnb
mov
cltd
inc
aam
rorl
adc
pop
mov
call
sub
mov
jp
in
sbb
adc
sbb
fcomps
and
and
xor
pop
jmp
adc
push
shrl
pop
test
add
pop
sbb
lahf
shrl
fcoml
sbb
xor
lahf
sahf
les
popa
lock
fdivrs
add
psubsw
sub
xchg
rclb
jns
mov
addr16
cs
xor
mov
fdiv
mov
stos
and
xor
jno
inc
arpl
xchg
cmp
imul
das
mov
fld
pop
lcall
mov
xchg
mov
xchg
subb
lret
ret
or
mov
sub
pop
and
negl
xchg
inc
addr16
mov
cs
fidivrs
push
addr16
sub
fwait
dec
jmp
into
in
jmp
loopne
cltd
and
add
ljmp
leave
mov
push
and
cmp
and
cmc
hlt
lret
adc
inc
aas
cmc
sbb
fldenv
jbe
rolb
std
rcr
mov
jbe
pusha
mov
stos
sub
pop
and
or
adc
mov
into
dec
das
call
xchg
push
xor
xchg
push
push
cmpsb
pop
mov
add
stc
cmp
ret
aam
hlt
mov
push
xchg
xchg
test
jge
mov
int
rcrb
pop
shrb
cmp
dec
jo
xchg
and
push
mov
aas
out
pop
les
divl
lahf
add
testl
dec
dec
std
jmp
mov
jno
cmpsl
sbb
mov
imul
fwait
mov
clc
mov
js
stos
cs
mov
lock
mov
cmp
shlb
call
xor
xlat
or
jmp
dec
inc
mov
mov
cmp
push
xchg
scas
xchg
jmp
dec
inc
mov
mov
aam
subb
push
inc
into
mov
out
inc
mov
mov
pusha
jmp
sub
adc
xchg
mov
lcall
mov
ror
pop
inc
add
pusha
xor
cmpsb
jecxz
push
rolb
sub
cmp
push
jbe
lcall
mov
inc
mov
or
dec
movsl
push
xchg
loop
push
out
shll
cmpsl
push
cmp
cmc
sub
jbe
push
push
adc
mov
adc
add
out
cltd
mov
inc
andb
push
xchg
scas
jne
movsl
popf
lret
jae
xchg
gs
out
imul
dec
repz
dec
out
cltd
mov
inc
andb
call
inc
add
std
cli
pop
shrl
pop
mov
mov
sub
and
inc
pop
movsb
push
dec
jle
out
cltd
mov
inc
andb
push
in
dec
xchg
mov
and
pop
dec
clc
mov
bswap
inc
push
loopne
sub
stos
pop
jle
pushf
call
sbb
mov
mov
mov
pop
xor
push
dec
mov
jmp
lods
or
movsb
and
dec
lret
lahf
lds
bound
test
xor
pop
int
lcall
push
push
add
outsl
inc
jge
mov
fistpll
sub
or
inc
cmpsb
popa
and
es
cltd
ror
jae
xchg
gs
out
add
adcb
cmpsb
decl
fistps
cmp
mov
jb
gs
out
mov
inc
jecxz
xchg
dec
push
push
sub
imull
fisttpll
imul
sbb
jmp
cmp
push
jge
fimuls
jmp
lods
jg
stos
cld
insl
push
subl
xor
nop
and
pop
int
lcall
in
mov
int
lcall
enter
adc
jge
mov
scas
imul
jns
jns
mov
dec
js
lcall
pop
cmp
popf
pop
and
adc
out
dec
lea
pusha
mov
aaa
mov
aas
flds
mov
stos
xor
pop
int
lcall
divl
push
push
or
or
adc
daa
inc
fisttpll
xchg
into
or
inc
push
rolb
mov
maskmovq
pop
xchg
inc
ret
insb
mov
rclb
mov
neg
movsl
scas
es
adc
scas
fistps
cmc
insb
mov
loop
fisubrl
or
adc
push
xor
xchg
stc
outsb
pop
xchg
clc
cmp
sub
les
out
pop
les
divl
pushf
jmp
cmp
mov
adc
and
mov
or
int
test
lahf
cli
push
pop
xor
movsl
lret
jae
jl
cli
imul
jbe
xor
xchg
subl
cmpl
cs
test
jp
gs
jne
int
jle
out
mov
dec
cmp
out
mov
pop
ja
data16
and
ja
in
cmp
fldcw
in
xor
jecxz
mov
mov
dec
icebp
sub
cmp
lock
jge
pcmpgtb
inc
cmp
enter
sub
nop
pop
inc
add
in
jl
adc
clc
and
inc
popa
xor
fdivl
xchg
sahf
test
jmp
mov
ljmp
ja
mov
jl
and
dec
push
dec
inc
jo
mov
daa
sbb
and
loop
faddl
or
cmp
adc
and
shlb
push
or
vmovdqa
adc
fcompl
popf
sbb
insb
psrlw
cmp
mov
int
lds
xchg
cmp
fs
loopne
mov
xchg
dec
test
push
sti
data16
and
std
inc
push
inc
pop
loop
imul
pushf
mov
jg
pushf
push
pop
stc
mov
pop
enter
scas
add
enter
cli
ret
mov
push
jnp
pop
cltd
xor
loop
xor
ficoms
inc
jmp
push
pop
mov
sub
ss
jae
mov
lock
cmpsb
mov
add
shlb
loopne
je
mov
pop
scas
cmp
cltd
call
popa
ret
arpl
notb
push
push
sarl
dec
mov
fimuls
cmp
cmovg
fcmovu
inc
ss
ret
cmpsl
push
add
int
stc
pusha
mov
fisttps
mov
mov
stos
jl
sub
data16
xchg
test
add
insb
mov
dec
push
sbb
andl
lret
ret
add
aad
test
or
sbbb
jae
fsts
cmp
and
sbb
fimull
mov
cs
iret
into
movsl
dec
gs
push
ror
sbb
in
cmp
sub
inc
cmp
out
and
xchg
lods
ret
cmp
jae
xor
fwait
xchg
ficompl
sbb
pop
adcl
xchg
push
mov
adc
mov
mov
lock
ljmp
lds
lcall
xchg
dec
xchg
cmp
fimuls
nop
into
btl
in
cmp
sub
pop
inc
mov
adc
and
cwtl
and
cmp
jbe
and
es
movsl
xchg
dec
enter
aas
push
mov
mov
xor
xor
subl
rcrb
mov
xor
aaa
pop
cwtl
mov
out
xor
mov
pop
jmp
or
jbe
and
pop
sbb
roll
xchg
repnz
scas
jno
or
in
cmp
jl
rcrb
fstl
add
hlt
shll
fs
mov
repnz
cmpsb
js
test
scas
insl
repz
xlat
adc
data16
outsl
push
sti
mov
ds
or
data16
lods
push
enter
jg
jg
lods
movsl
mov
ljmp
in
arpl
sub
push
sbb
mov
push
lcall
mov
fidivs
leave
mov
iret
rcrb
mov
adc
and
mov
or
int
jg
div
in
test
pop
xor
movsl
lret
cmpsb
sbb
mov
xor
pop
sbb
add
les
jns
test
and
xchg
mov
loopne
push
push
test
jp
add
ljmp
ds
mov
dec
cmp
push
push
sbb
ja
data16
and
je
in
movsl
add
insl
sti
in
xor
jecxz
mov
mov
push
dec
lahf
cmp
rcrl
stc
inc
cmp
inc
cld
fiadds
enter
add
in
xchg
cs
test
sahf
out
inc
fdivl
jno
lods
shr
subb
mov
push
lret
mov
jl
mov
mov
push
dec
inc
jo
mov
aas
repz
faddl
or
cmp
adc
and
shlb
push
or
daa
sbb
scas
mov
sub
popf
sbb
adc
stos
dec
ret
xlat
fstl
lret
adc
arpl
repz
leave
inc
fs
loopne
mov
xchg
or
int
cmpsl
dec
push
and
mov
pop
pop
loop
imul
pushf
mov
popf
cltd
push
lcall
mov
pop
enter
das
fsts
mov
mov
imul
push
mov
push
jnp
pop
cltd
xor
loop
xchg
rcl
xor
cltd
push
mov
adc
jbe
push
push
xor
cmp
mov
lock
sbb
ret
mov
add
shlb
add
mov
cld
stos
pop
fsub
sub
xor
nop
cltd
call
popa
ret
sub
dec
push
or
and
mov
inc
scas
sarl
ja
mov
jae
push
cmovg
fcmovu
inc
ss
ret
cmpsl
push
add
sti
ja
out
lock
fisttps
mov
jo
ret
popf
int3
data16
xchg
test
add
pop
movsb
add
popa
sti
lret
ret
in
ds
add
lahf
lret
add
mov
loopne
push
sti
adc
ja
testl
dec
gs
push
ror
dec
stc
jo
sti
xor
movsb
stc
sahf
cmp
out
and
xchg
lods
ret
inc
insb
sub
pusha
lret
je
xor
xchg
ficompl
mov
xor
push
mov
adc
adc
sbb
jl
dec
pop
push
mov
pop
in
fs
ja
xchg
mov
lods
adc
mov
sbb
lret
fimuls
nop
into
btrl
test
cmp
sub
pop
inc
mov
dec
cmp
in
cwtl
and
cmp
jbe
and
es
movsl
xchg
dec
jo
lahf
inc
inc
mov
pop
xor
xor
inc
pop
aad
in
rcrb
es
shlb
cwtl
mov
out
inc
push
aam
or
stc
inc
or
jbe
and
cmp
and
adc
jno
or
sub
jns
aam
lcall
xor
ret
loop
sub
shll
fs
mov
repnz
cmpsb
js
test
lds
fs
in
mov
xlat
adc
data16
outsb
cmp
adc
ds
or
data16
pop
in
mov
mov
mov
jmp
pop
pop
in
arpl
jae
sbb
push
fstps
int
jne
push
jp
dec
mov
sub
adc
adc
xor
jge
faddl
jg
push
in
mov
lea
inc
sahf
frstor
shlb
or
pop
mov
cmpl
fucomi
xor
push
xchg
lods
lret
lret
jmp
xor
jl
sar
lret
push
mov
sbb
ja
xchg
ret
das
add
push
lds
dec
fimull
rcrb
sub
pop
out
in
cmpl
out
aaa
aaa
cltd
aas
ss
out
pop
and
bound
or
wbinvd
xchg
nop
sti
inc
pushf
out
xchg
pop
mov
adc
fbstp
adc
pop
and
jne
out
pop
les
divl
les
divl
les
divl
les
divl
sbb
jl
cmp
mov
gs
rcrb
sbb
mov
test
leave
sbb
mov
leave
cmp
jmp
leave
cmp
jmp
mov
xor
mov
xor
sbb
pop
mov
mov
pop
mov
mov
loope
rcrb
loop
inc
bound
insl
test
mov
das
divl
les
divl
sbb
jl
cmp
rcrb
sbb
mov
leave
cmp
jmp
mov
xor
sbb
pop
mov
mov
cmp
xchg
fisubrl
lea
arpl
dec
mov
shlb
pusha
clc
jo
pop
mov
outsb
xchg
dec
in
fstl
cmp
out
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
mov
cmc
div
test
lea
cmp
iret
movsl
sub
or
repnz
or
popl
inc
scas
sbb
mov
and
and
aaa
sarl
ss
mov
in
lea
out
push
stos
jns
outsb
sub
loopne
jmp
cmp
in
and
fisttps
push
mov
inc
mov
movb
xor
sbb
and
in
repnz
dec
sub
pop
pop
and
jp
sub
cs
inc
pusha
aam
mov
into
ss
imul
cwtl
and
adcl
lea
in
dec
rcrb
inc
mov
xchg
push
jmp
stos
mov
dec
jae
mov
xchg
shl
gs
in
fistl
cmpsl
mov
and
test
jg
push
cs
mov
pop
in
test
stc
dec
mov
dec
sahf
in
call
adc
sbb
cmpsl
ja
dec
adc
fiadds
jno
mov
scas
push
rcll
jns
inc
or
es
outsl
hlt
and
pop
push
pop
and
sar
mov
mov
sbb
jne
adc
insl
aam
fistl
cmpsl
xchg
adc
jmp
into
outsl
mov
cmp
pushl
and
ja
jmp
adc
jbe
icebp
xchg
xor
mov
push
testb
push
mov
adc
sub
push
imul
dec
rorb
inc
jns
jnp
or
ret
mov
pop
sbb
ljmp
push
cmp
imul
and
mov
cmp
filds
mov
xor
pop
pop
or
stos
or
push
sub
pop
pop
inc
xorl
mov
ficompl
adc
pop
cmpsb
addr16
inc
aas
jno
movsb
data16
dec
testl
push
mov
pushf
adc
push
popf
popa
das
pop
imul
pop
sbb
lahf
cmpsb
pop
jp
add
addr16
cmp
push
hlt
notb
pop
stos
test
movsb
outsb
mov
add
mov
fwait
scas
or
repnz
cmp
adc
lahf
into
rcl
jne
cmpsb
cmpsb
or
pusha
daa
pushf
out
incl
pushf
rclb
lahf
lahf
cmp
pop
jmp
in
icebp
cmp
jl
pop
mov
sahf
in
adc
inc
xor
test
or
xchg
adc
mov
dec
mov
rcrb
add
adc
cmp
dec
lahf
ds
pop
mov
mov
add
cmp
in
mov
jp
inc
add
std
or
dec
stos
mov
test
fsubp
icebp
push
dec
pop
dec
xchg
sub
jns
add
int
mov
dec
enter
clc
adc
aam
repnz
push
and
aam
out
sbb
cli
inc
push
das
pushf
inc
or
pop
out
pop
xchg
cmp
push
stc
ss
push
mov
xor
imul
cmpsl
sub
out
pop
or
cmp
jns
out
out
add
adc
and
xchg
mov
pop
mov
or
cwtl
sarl
xlat
movsb
mov
xchg
sbb
mov
push
cmp
sbb
cwtl
fidivl
jl
mov
pop
sbb
mov
fwait
es
dec
xchg
mov
and
insb
leave
cmp
or
inc
test
icebp
in
jmp
sbb
fstps
lds
sbb
fisubrl
xchg
mov
sti
fcmovu
mov
pop
and
fadds
sub
pushf
jle
adc
cmpsl
subb
mov
pop
es
test
mov
popa
push
movsl
or
or
sbb
in
jmp
add
add
addr16
cmp
in
popa
add
pop
insl
add
hlt
clc
mov
ror
mov
imull
orl
adc
add
dec
adc
clc
add
out
fcoms
pop
and
out
mov
xlat
sbb
sub
or
les
stc
popa
and
dec
das
cmp
jecxz
btc
cmp
lret
sbb
cwtl
subl
shr
dec
movb
dec
bound
sub
fisttpl
adc
push
movsb
hlt
add
push
ret
js
out
lods
test
out
cmp
or
int
pop
dec
rorl
sub
pop
pop
pop
movsl
adc
sub
add
orb
xor
adc
jle
mov
mov
sahf
xchg
mov
mov
test
mov
les
dec
mov
out
dec
mov
setae
mov
xchg
add
mov
xchg
add
mov
xchg
add
mov
cmp
pushf
add
mov
in
js
add
mov
in
js
add
mov
in
js
dec
inc
cld
mov
dec
inc
cld
mov
dec
inc
cld
mov
dec
inc
cld
mov
dec
inc
cld
mov
dec
inc
cld
mov
dec
inc
cld
mov
dec
inc
cld
mov
lods
sbb
xchg
dec
lods
push
lods
sbb
xchg
dec
lods
push
lods
sbb
xchg
dec
lods
push
lods
sbb
xchg
dec
lods
push
lods
sbb
xchg
dec
lods
push
lods
sbb
xchg
dec
lods
push
lods
sbb
xchg
dec
lods
push
lods
sbb
xchg
dec
lods
jae
mov
push
or
inc
xor
leave
popf
test
cmpsb
adc
arpl
jg
aam
test
mov
lret
mov
mov
imul
lret
jg
cmpb
pop
sarb
cmpb
push
mov
popa
stc
push
mov
popa
stc
push
mov
popa
stc
push
mov
int
divl
stc
or
divl
stc
or
divl
stc
or
divl
stc
lods
inc
in
pop
in
lods
inc
in
pop
in
lods
inc
in
pop
in
lods
inc
in
pop
in
lods
inc
in
pop
in
lods
inc
in
pop
in
lods
inc
in
pop
in
lods
inc
in
pop
in
imul
inc
imul
inc
imul
inc
imul
inc
imul
inc
imul
inc
imul
inc
imul
inc
sub
mov
js
imul
repz
sub
les
fldcw
rcrl
xchg
push
dec
add
cmp
andl
jae
clc
dec
inc
cmp
jmp
cmpsb
dec
int
jecxz
das
cwtl
cmpsb
dec
int
jecxz
das
daa
dec
inc
sub
ds
daa
dec
inc
sub
ds
stos
cmpsb
adc
arpl
jg
stos
cmpsb
adc
arpl
jg
aam
test
mov
lret
mov
mov
lret
mov
mov
imul
subl
mov
imul
lret
jg
cmpb
pop
sarb
cmpb
pop
sarb
cmpb
pop
sarb
cmpb
push
mov
popa
stc
push
mov
popa
stc
push
mov
popa
stc
push
mov
int
divl
stc
or
divl
stc
or
divl
stc
push
xor
and
cs
fwait
pop
jmp
jno
mov
popa
adc
cmp
loopne
jg
add
push
cs
adc
mov
pop
popa
cli
sbb
dec
test
xor
dec
push
pushf
xchg
scas
add
je
or
fs
flds
push
aaa
jnp
aaa
cs
int
call
mov
insl
xchg
lods
adc
jbe
stos
in
or
outsl
cld
mov
insl
pusha
fwait
addr16
out
pop
les
divl
cs
fwait
pop
jmp
jno
mov
push
jl
iret
jb
loop
dec
lock
and
insb
push
xchg
xor
mov
mov
or
sbb
jecxz
mov
mov
cld
pop
dec
xchg
jb
jbe
mov
gs
and
hlt
nop
mov
push
movsb
pop
pop
ficomps
pop
in
cmc
or
inc
lock
loope
aas
fidivl
sti
xor
mov
into
inc
push
cmp
inc
call
test
xchg
addr16
out
cs
roll
jb
cmp
xlat
imul
push
sub
das
or
sbb
inc
xchg
inc
addr16
jp
cmpsl
lret
dec
insl
hlt
repz
pusha
shl
lcall
insl
and
pop
popf
mov
stos
fcomi
mov
and
inc
mov
repz
add
sbb
in
clc
test
aaa
add
imul
cmpsl
pop
sbb
lahf
stc
mov
push
mov
inc
sti
dec
insl
mov
pop
mov
out
js
jo
pop
out
adc
fwait
ds
pop
add
jne
sbb
pop
jno
or
mov
outsl
inc
dec
jns
jbe
adc
imul
test
xor
dec
lahf
mov
enter
sub
pop
sub
mov
sbb
mov
push
or
xor
xor
lret
clc
sub
test
testb
out
mov
rolb
xor
push
push
dec
enter
xchg
movsb
shlb
xchg
ret
dec
xor
frstor
pop
mov
div
add
movsb
mov
pop
test
repnz
pop
cli
aaa
jge
fs
les
lods
xchg
in
test
cwtl
popf
jne
cmpsl
fisubrl
push
sbb
sbb
pop
cld
xchg
les
adc
push
mov
dec
fstl
fmul
cmp
imul
pop
repz
lea
es
test
add
out
call
push
loopne
push
push
jle
sbb
push
xchg
sar
fldl
push
out
xor
dec
mov
pop
adc
inc
push
xchg
pop
inc
mov
add
in
mov
addr16
or
bound
mov
cmp
push
sbbl
fildl
push
loop
loopne
mov
lret
roll
xor
gs
int3
sub
jge
shl
inc
inc
cmc
or
push
push
or
stos
pop
dec
stc
push
pushf
mov
sub
dec
mov
aam
rcrb
push
aad
jp
mov
xchg
push
sbbl
mov
xor
mov
test
cmp
in
ljmp
int
mov
jle
push
div
push
xchg
fisttpll
jno
mov
push
pop
aaa
and
test
cld
lret
sub
jne
lds
jne
pushf
add
into
xchg
inc
std
rcrl
lock
cmp
jmp
mov
add
push
pop
into
popa
add
lods
inc
push
divl
jb
iret
ss
cmc
sbb
lock
or
jnp
or
test
mov
aaa
nop
add
xchg
test
push
std
push
scas
xlat
cmpb
in
test
push
xchg
or
imul
mov
dec
jne
imul
rcll
repnz
loop
dec
adc
jle
sub
push
outsl
xor
inc
mov
call
loope
pop
cwtl
push
les
mov
jl
shl
sti
stos
cld
xor
push
cltd
pop
mov
rcrl
addr16
jae
pop
xorb
loop
cmpb
ja
nop
adcl
insl
push
int3
xor
pop
and
aad
dec
and
push
fimull
or
out
dec
mov
xor
xchg
xlat
and
insl
push
lret
push
add
test
inc
aaa
lcall
jae
xor
cmp
cltd
push
enter
lret
cli
or
sub
xlat
cmp
pusha
inc
sbb
pop
leave
xchg
jecxz
loop
in
or
push
xor
xor
inc
xrelease
nop
mov
dec
push
push
das
jmp
mov
bnd
pop
jnp
aas
sub
inc
cmp
lret
mov
push
in
sahf
xor
and
ljmp
test
jge
test
fs
xchg
test
lahf
add
shll
ret
mov
cmc
pop
ss
dec
xchg
pop
pop
in
adc
push
pop
inc
outsb
cmp
xor
lods
pop
lcall
jmp
inc
enter
xchg
and
scas
icebp
aas
sbb
movsb
in
sbb
xchg
fisubl
subl
outsb
repz
mov
cld
jne
js
arpl
stos
cmp
int
mov
dec
inc
or
ret
bound
mov
int
pop
adc
ljmp
aad
mov
add
aas
pop
data16
ds
pop
and
stos
jo
movsl
insl
imul
scas
call
push
pop
xor
pcmpgtb
insl
mov
adc
in
and
xor
jns
inc
test
mov
fdivrl
cwtl
and
jnp
jno
mov
xchg
dec
jne
inc
xor
movsl
not
fsubr
leave
dec
jge
pop
sbb
sbb
or
mov
push
mov
rol
gs
add
add
outsl
xchg
or
leave
xor
fs
iret
sahf
or
dec
xchg
iret
sbb
dec
sti
xchg
test
mov
lahf
jnp
or
arpl
pusha
aad
cwtl
adc
adc
out
ss
and
testl
mov
popf
mov
cld
imul
bnd
mov
or
mov
push
push
and
out
jne
in
adc
adc
dec
loope
fidivrl
es
sti
icebp
lods
je
test
and
ss
jecxz
imulb
loopne
fsubr
incl
push
lock
movsl
cli
mov
push
jl
cwtl
adc
mul
dec
xchg
mov
mov
add
cwtl
test
loop
je
pop
push
sbb
sub
movsb
and
cs
inc
pop
fdivs
pop
cmp
jb
gs
dec
mov
inc
mov
and
mov
jp
das
jmp
jnp
inc
pop
xor
js
outsl
lds
lahf
mov
adcb
fnsave
jns
pop
andb
dec
mov
mov
sbb
mov
lcall
lret
scas
pop
push
arpl
xor
add
bound
ret
cmc
adc
xorb
pusha
imul
int
pop
fisubl
es
push
arpl
ja
cmp
mov
mov
rcl
adc
dec
add
jmp
movsb
roll
sub
xchg
inc
push
or
inc
cmp
popa
xchg
adc
pop
stos
lods
shr
adc
xor
stc
sub
push
xor
scas
cli
movsl
je
stos
push
fimuls
fidivrl
out
ret
enter
roll
aad
mov
scas
mov
outsb
lret
in
inc
xchg
lds
popf
ret
aas
dec
xchg
xchg
mov
cmpsl
push
leave
stos
sbb
jae
push
or
xor
mov
mov
adc
cwtl
sarb
mov
push
xorps
mov
lahf
je
pop
gs
and
fstpt
and
filds
mov
mov
inc
insb
xchg
dec
outsl
mov
add
arpl
xchg
adc
popa
mov
lock
mov
mov
jb
aas
stc
push
cmp
adc
mov
or
jle
lds
adc
in
and
xor
dec
outsb
adc
stos
mov
and
in
ljmp
inc
push
andb
jecxz
call
cmp
lds
leave
movsl
test
xor
repnz
push
push
sub
sti
sub
or
jl
xchg
xor
push
lret
das
aad
movsl
mov
shrl
push
sahf
ja
subl
ficomps
add
and
sub
fisttps
in
lret
mov
cmp
icebp
dec
inc
ret
add
cs
sahf
notb
stos
movsb
outsl
insl
lcall
push
int
add
mov
std
rcrb
sbb
jbe
cltd
enter
xor
das
repnz
jbe
ja
mov
es
jno
xor
shl
test
and
fmul
leave
sbb
and
pop
inc
add
add
pusha
loopne
dec
cmp
pop
pop
mov
xor
mov
sub
lds
xchg
stc
inc
jb
sbb
stc
add
in
sti
insb
sti
inc
adc
adc
dec
outsl
xor
xchg
inc
cmp
out
inc
or
jnp
cli
and
jl
add
jle
sti
cmpsl
xor
clc
sbb
insl
cmpb
push
jbe
aad
leave
cmp
xor
adc
or
nop
xor
sub
cli
inc
jp
xchg
jle
sbb
ds
cltd
mull
leave
stos
in
dec
scas
add
jo
das
pop
sbb
dec
sub
adc
jle
fmul
or
scas
add
add
add
aas
adc
inc
addr16
out
push
and
jecxz
push
mov
sbb
pop
lea
add
xchg
stc
mov
out
add
fstps
mov
cmp
ret
mov
add
fucomip
sbb
mov
or
push
sbb
mov
push
xchg
setge
jecxz
in
sub
mov
and
push
adc
daa
xchg
push
insl
lcall
mov
insb
fwait
mov
fsubrs
cmp
xchg
lock
inc
dec
hlt
loope
fistpl
sub
repnz
das
pop
sub
pop
xchg
jmp
orl
adc
cmpsb
mov
pushf
insl
in
jne
std
jge
push
push
mov
pop
jp
in
movsl
insl
xchg
outsl
mov
pushf
add
jmp
push
pop
sub
fsubrp
add
dec
fwait
insb
js
out
xor
push
cmp
xor
mov
lds
fbld
jns
inc
xchg
cmp
lock
nop
lods
imul
imul
jns
shll
lret
sti
push
fs
lcall
push
nop
call
scas
lcall
dec
mov
imull
fsubs
push
jmp
jno
addl
lods
out
sbb
notl
out
pop
orl
imul
loop
lret
fwait
repz
insl
or
aas
dec
mov
lret
ret
mov
pop
les
cmp
mov
aaa
mov
lock
and
cmp
add
arpl
mov
repnz
stos
pop
jle
fidivrs
jbe
out
mov
jae
clc
xchg
dec
adc
les
xchg
or
sbb
rcrl
xchg
mov
out
cmp
hlt
sub
pop
fs
pop
xchg
jmp
out
sub
and
xchg
roll
mov
cmp
push
push
mov
cmp
pop
mov
and
sub
jg
cmc
mov
pop
outsb
mov
pop
push
jns
cli
ret
add
scas
loop
dec
dec
daa
push
mov
lea
xchg
mov
mov
xor
test
add
loope
push
mov
pop
pusha
cmp
push
sbb
outsb
mov
int
adc
js
outsl
test
idivb
push
mov
xchg
xchg
xchg
pop
and
and
pop
sahf
mov
mov
push
mov
add
xchg
adc
addr16
loope
scas
add
inc
pop
sbb
mov
push
dec
xlat
data16
sub
or
inc
push
or
mov
jnp
fstpt
dec
into
push
add
cmp
movhps
push
popa
sbb
fcoml
loope
mov
cld
ja
xor
fisubrs
pop
aaa
xchg
and
jbe
dec
fildll
mov
mov
xor
mov
cmp
xchg
roll
fisubl
sarl
hlt
rcll
add
les
mov
les
xlat
mov
fists
xchg
pop
xlat
les
jmp
xor
lret
add
jae
rorb
xchg
push
or
xlat
iret
and
arpl
lock
aad
test
xchg
add
pop
dec
adc
mov
sahf
adc
xchg
fisubrl
adc
ror
xor
push
adc
xlat
ja
dec
adc
dec
and
pop
cmp
dec
arpl
inc
dec
mov
ljmp
clc
adc
jb
bound
xor
mov
test
testb
negl
std
fsubs
nop
pop
add
in
js
jmp
js
cltd
mov
or
stos
pop
mov
movsl
outsl
jnp
cmpsb
outsl
mov
pop
fcomps
pop
pushf
lcall
mov
scas
imul
sbb
insb
int
adc
hlt
mov
orb
dec
push
repz
pushf
sub
sbb
imul
sbb
jnp
mov
dec
or
movsl
add
fwait
stos
xchg
ja
adc
sub
imul
jp
and
jno
imul
lret
ss
repz
in
jl
sub
cmp
cmp
iret
adc
and
mov
cs
add
cs
push
add
mov
jmp
fcoms
scas
clc
dec
lret
jae
dec
in
js
add
loopne
mov
test
add
xchg
jns
cltd
cwtl
dec
sbbb
mov
loopne
mov
cmp
pushf
push
frstor
inc
iret
arpl
sbb
setne
ret
sub
or
mov
imul
xor
push
adc
shrl
pop
lea
sbb
mov
cmc
inc
inc
or
inc
or
std
cmpsb
or
mov
repz
xchg
inc
mov
imul
sbb
and
es
pop
sbb
add
fwait
cmp
push
or
sbb
push
fildl
inc
std
pop
ljmp
std
ja
lock
add
bound
pop
sub
cmp
mov
lcall
mov
sub
inc
sti
push
and
imul
lods
mov
or
cld
daa
mov
push
dec
cmp
mov
jne
jne
fcom
fcmovnb
adc
mov
insb
push
adc
dec
lret
xchg
mov
push
mov
movsb
xor
repz
out
xor
addr16
aad
sub
out
mov
push
js
movsb
and
data16
jmp
sub
jecxz
pop
aas
pop
xlat
popf
sbb
xor
xor
int3
xchg
sbbl
and
pushf
mov
pop
mov
ljmp
fistpll
cmpsl
data16
pop
decb
cmc
or
cmp
mov
cld
in
jo
in
in
lods
lahf
push
test
ljmp
addr16
lahf
xchg
xchg
test
leave
test
mov
sbb
pop
lods
mov
ud2
gs
add
data16
cmp
movsl
fsts
stos
cld
outsb
xchg
or
xchg
dec
mov
aad
mul
shll
push
insb
xor
inc
sbb
pextrw
push
mov
iret
pop
pusha
cmpsl
mov
pop
ja
inc
js
adc
pop
fwait
sub
ror
mov
push
jmp
sbb
xchg
inc
shrl
pusha
dec
pop
mov
inc
cmp
xor
xor
or
inc
in
inc
mov
mov
fmuls
pop
mov
daa
xchg
inc
mov
sbb
mov
push
leave
fbld
jmp
sahf
sub
rcrl
sbb
icebp
xchg
xchg
xor
dec
out
inc
jnp
pop
cmp
dec
lds
dec
pop
sbbb
add
jmp
in
es
dec
negl
das
mov
cmp
mov
clc
rcr
push
xchg
mov
fisubrl
mov
lods
ret
inc
mov
lods
dec
sub
ret
cld
dec
cmp
add
add
and
in
inc
pop
insl
inc
xor
sbb
push
push
les
sarb
add
xor
shrb
or
cmp
jb,pt
movsb
test
ljmp
lods
or
jecxz
rcrb
ds
sarl
lahf
sbb
bound
or
xor
nop
ljmp
jge
mov
std
cli
mov
je
in
out
fiaddl
mov
mov
orl
cld
dec
hlt
dec
ficomps
out
fnstcw
and
adcl
add
imul
add
sbb
lcall
xor
imul
xor
enter
fcoms
jp
xchg
js
daa
xor
xchg
je
iret
aas
pop
or
xor
xchg
sub
movsl
or
xchg
sub
mov
in
clc
xor
and
lret
imul
je
and
mov
push
clc
add
insb
adc
loop
pop
sbb
leave
pop
cmpsl
andl
dec
enter
cmp
pop
mov
scas
dec
insl
mov
and
pop
imul
add
int3
pmullw
and
xor
popf
push
jmp
iret
pop
xor
mov
clc
sahf
mov
ret
jg
clc
adc
loop
jno
orl
xchg
inc
das
or
inc
fstps
push
out
xchg
add
or
loop
call
cmp
shr
inc
cmc
in
sbb
sub
inc
fsubl
push
dec
pop
out
dec
sbb
jle
pop
sub
rcr
lret
xor
cltd
popf
cwtl
xor
pop
test
jno
mov
into
and
sti
push
ljmp
or
mov
adc
daa
addb
sub
mov
xor
outsb
or
scas
repnz
insb
scas
xchg
movsb
xchg
xchg
imul
xchg
sub
insl
push
scas
jle
inc
pop
pop
mov
in
xchg
incl
out
xor
movsl
dec
in
mov
addl
daa
repz
sbb
mov
fcoms
sub
movsb
sub
pop
and
inc
cmpsb
popf
ss
mov
mulb
pusha
jnp
jge
rcrb
mov
aad
pusha
test
dec
inc
dec
in
cwtl
int
insl
rolb
sbb
shrl
fldenv
popa
pop
xchg
bound
iret
mov
arpl
lds
ljmp
addr16
mov
jl
or
stc
lds
push
sub
inc
push
dec
outsb
loop
mov
test
ret
mov
pop
daa
cmp
mov
jns
sahf
ljmp
and
fidivl
mov
mov
fdivl
ss
ret
out
and
fs
pop
push
in
fidivrl
xchg
outsl
mov
adc
sbb
and
stos
jne
stos
and
pop
mov
mov
stos
or
lds
stos
shll
fists
pop
mov
ret
mov
cmp
dec
fdivrs
imul
push
sarl
xchg
mov
shlb
outsb
sub
or
cld
sub
fadds
js
enter
pop
imull
mov
push
cmc
pop
or
cmp
sbb
add
in
or
pushf
or
xor
mov
adc
pop
aam
shrl
pop
popf
pop
and
pusha
mov
pop
mov
mov
push
dec
pop
arpl
xor
jmp
test
pop
xchg
jge
insb
mov
jns
call
mov
ret
sahf
sti
adc
lock
mov
cltd
sub
xor
repnz
lods
rol
jg
sub
insb
cmpsb
lock
fdivrs
stc
subb
pop
jns
cmpsb
xor
sti
popa
and
aaa
stc
iret
inc
xchg
insb
pop
sbb
dec
push
inc
and
mov
in
or
inc
lcall
ficoml
mov
mov
inc
mov
sub
sub
lods
mov
les
jl
cld
fiaddl
mov
repnz
push
je
mov
rclb
dec
pusha
sbb
rcr
and
mov
aas
sub
fisttpl
dec
jbe
sbb
pop
adc
sahf
jge
mov
pushf
pop
cmp
clc
xchg
push
mov
inc
jge
ds
mov
pop
jbe
inc
cmp
out
jns
popf
test
mov
jp
cli
xchg
pop
lods
ljmp
push
ret
sbb
pushf
cmp
cmp
sub
insl
fstl
fsubl
dec
in
lods
jns
dec
pop
cld
sub
cmp
ja
ljmp
jnp
test
mov
stc
ss
jp
shll
mov
das
push
out
and
cmp
jns
out
fidivrl
dec
mov
or
pop
out
and
in
mov
ror
scas
js
popa
call
inc
iret
int
cmp
jecxz
clc
push
enter
sbb
adc
lods
cmc
dec
ds
push
push
fimull
mov
rcl
add
movsb
aas
and
cld
jns
mov
into
adc
out
push
mov
ret
insb
in
out
jp
ret
mov
mov
ja
fsubrs
mov
aad
xchg
dec
add
adc
jae
and
sti
inc
int3
adc
mov
jns
cmpl
pusha
mov
pop
xchg
lret
les
add
xchg
stc
fisubrs
sub
add
lea
mov
aam
inc
dec
xchg
sbb
imul
insb
test
shll
stc
ret
add
fwait
mov
iret
repnz
adc
mov
cmp
push
mov
pop
cmp
sbb
mov
orl
test
mov
adc
jne
push
push
sbb
dec
push
push
mov
cs
mov
in
aam
out
dec
adc
test
scas
lock
stos
lahf
pop
icebp
in
cs
push
or
jo
mov
add
or
fsubr
or
cmp
lret
mov
ficompl
cmp
lods
mov
lcall
bound
outsb
xor
call
bndldx
cltd
xchg
jnp,pt
or
jg
sbb
mov
jne
repz
fs
ljmp
jnp
dec
pop
test
pop
adc
adc
daa
push
mov
aaa
jae
jle
leave
xchg
insb
mov
lahf
iret
dec
jo
inc
loopne
mov
pop
sub
aad
or
stos
repz
pop
rcll
js
testb
cli
fcmovbe
and
scas
popa
addr16
push
stc
lret
sbb
push
pop
adc
adc
test
test
push
cld
mov
mov
cmp
mov
or
push
adc
dec
mov
dec
add
push
cmp
out
dec
repz
mov
rorl
das
push
or
hlt
aad
data16
das
in
mov
pop
pop
pusha
and
add
sbb
adc
jle
icebp
cmp
rep
and
cltd
push
push
xor
das
jae
daa
mov
popf
or
xor
jmp
adc
xor
xchg
enter
jmp
fidivrl
lods
dec
inc
cld
shll
mov
add
outsb
aaa
icebp
jns
inc
adc
cmp
inc
cmp
mov
or
loope
popa
outsl
daa
and
lahf
and
pop
add
push
into
shl
pop
fst
cmc
iret
lds
mov
movsb
or
and
xchg
scas
xor
mov
stos
out
push
mov
xor
cli
int3
or
push
or
movsl
mov
push
inc
xchg
mov
cli
push
add
fsub
pop
sbb
push
cmp
insb
pushf
push
dec
inc
in
push
lahf
mov
fisubs
clc
imul
mov
mov
out
ficomps
push
insb
lea
movups
sahf
mov
mov
je
ja
in
or
inc
gs
xor
aam
scas
mov
mov
add
cmpsb
inc
push
push
ljmp
mov
hlt
jge
inc
roll
dec
mov
repz
leave
int3
mov
adc
cmp
and
shlb
es
pop
leave
adc
add
call
xchg
pushf
jo
sub
cmpsb
test
push
fnstsw
sahf
fiadds
icebp
rcr
jne
sub
repnz
outsb
aas
pop
lods
push
aas
mov
mov
ja
inc
ljmp
pop
rorb
leave
sbb
iret
push
nop
in
pop
cmpsl
add
inc
insl
jmp
ja
cmpb
jo
or
or
rorl
popa
sub
jnp
cmp
pop
add
adcl
xor
scas
add
imulb
cmp
addr16
rolb
xor
push
mov
out
nop
cmc
push
sub
mov
pop
imul
aas
adc
xor
mov
mov
mov
stc
inc
lret
jle
cli
sub
xchg
jae
jns
pop
ja
mov
fistpl
ret
sbb
push
jns
mov
xor
cmp
dec
mov
repz
into
in
inc
lahf
clc
scas
repz
cmp
cmp
aaa
loope
mov
cmpsb
test
dec
jl
xchg
cmc
xchg
xlat
leave
push
aad
fisttpll
call
and
xlat
add
aam
pop
lock
sbb
sub
sbb
or
ljmp
clc
outsl
push
lret
sbb
iret
lea
and
add
xchg
repnz
sub
pop
test
dec
scas
orl
js
ret
movsb
xlat
std
imul
mov
mov
stc
out
test
mov
into
jmp
mov
dec
ljmp
test
mov
jl
fwait
or
jp
int
in
mov
sarb
dec
sbb
push
lret
shl
add
jb
bound
xor
rcr
inc
jno
aam
shr
mov
lahf
mov
xchg
orb
xchg
xchg
adc
jp
stc
sub
test
xchg
scas
inc
je
fimuls
ss
mov
ss
and
mov
pusha
jp
xor
addr16
cmpsl
stc
cmp
cmp
sbb
fwait
pop
xchg
pop
leave
fldt
leave
arpl
inc
mov
ficoms
ds
sub
es
movsb
inc
les
and
xchg
or
jno
pop
scas
cs
inc
push
mov
or
sbb
aad
imul
xlat
or
mov
cmp
pop
popa
xchg
aam
insb
addl
add
outsl
sbbb
fists
leave
mov
and
fwait
mov
ja
jae
stos
dec
sub
inc
push
dec
pop
ret
andl
enter
lock
clc
fdivrl
pusha
fisubrs
clc
xor
stos
fsubrs
in
dec
pop
xor
jae
jle
push
dec
jne
push
dec
inc
cmpsb
je
notb
jae
ffree
pop
mov
cmp
lods
subb
data16
scas
cltd
jnp
inc
aad
inc
mov
cmp
sub
sbb
test
add
outsb
sarl
sub
shll
mov
add
aas
lret
mov
cmp
daa
mov
pop
stc
cmpsb
dec
pushf
jle
xor
int3
push
add
xchg
mov
jo
pop
icebp
pop
pushf
out
jbe
in
mov
stos
mov
and
popf
bound
mov
dec
cwtl
add
push
aad
repnz
scas
push
inc
and
sub
pop
push
cmp
std
mov
adc
stos
test
insl
pop
lahf
xchg
xchg
xchg
decb
mov
add
push
mov
incb
pop
cmp
xchg
ret
aad
popa
mov
and
sbb
scas
fs
pop
daa
adc
push
in
mov
mov
stos
in
sbb
lret
rolb
jp
es
pusha
jle
add
rclb
mov
push
int
shrl
dec
js
sub
mov
cmp
loope
mov
xchg
xor
xchg
repz
jno
outsl
xchg
lcall
loopne
sarb
icebp
inc
dec
jecxz
mull
jns
repz
cmp
mov
sti
out
pop
stos
fldenv
push
out
sub
xchg
mov
xor
mov
into
not
and
push
add
xchg
cmp
popf
jnp
dec
jle
cmp
popa
mov
or
lods
subl
pop
jge
add
pushf
ljmp
ret
mov
mov
shrb
imulb
arpl
cld
push
add
mov
ljmp
scas
dec
mov
jecxz
sub
fisttpl
dec
ljmp
mov
xor
mov
push
shr
daa
mov
pop
and
mov
daa
cmp
imul
inc
adcl
xchg
int3
fists
and
dec
mov
sar
fs
fdivr
fs
fcompl
jno
xchg
mov
scas
or
loop
sub
push
add
into
add
push
cmpsb
dec
push
and
add
insb
mov
inc
pop
arpl
xchg
mov
sub
mov
movsl
gs
xchg
sub
setbe
clc
mov
aad
lods
decl
jb
rclb
mov
add
fs
push
fnstcw
pop
je
add
lea
sbb
sbbl
fs
fmull
pop
xchg
cmp
enter
push
dec
add
jae
sub
mov
xchg
je
push
fs
or
jbe
dec
and
pop
repnz
lcall
push
fistpl
add
jp
xchg
mov
pop
in
and
jle
xor
add
push
or
shlb
mov
ds
rol
jbe
in
sbb
data16
xchg
inc
lods
sub
pop
fstl
insl
mov
sbb
pusha
ljmp
xor
push
lods
cld
sarb
ss
rcr
adc
repz
and
call
inc
sti
jbe
popa
mov
fbstp
or
test
push
lock
pop
fs
into
enter
fwait
loopne
lret
mov
inc
fs
push
push
jmp
iret
enter
ret
loope
jbe
xor
pop
push
shll
or
adc
mov
pop
and
jne
gs
add
lcall
jbe
sub
add
ja
inc
repnz
shlb
push
inc
mov
aas
xor
push
out
mov
cs
push
cmpb
outsl
inc
push
int
adc
inc
in
or
fldt
push
xchg
push
xchg
insb
filds
setg
mov
pop
inc
cmpsl
subl
mov
icebp
lods
ret
lahf
xor
arpl
mov
jns
or
mov
mov
mov
stos
fcoms
fyl2xp1
mov
shll
fstpt
dec
xlat
loop
out
fnsave
subl
mov
sub
mov
popa
sub
mov
mov
in
inc
ret
sub
mov
test
lahf
repnz
xor
dec
and
mov
jb
cmp
xchg
not
ds
sti
fsubrl
push
and
aas
pop
or
jmp
or
dec
cmc
push
arpl
pop
mov
and
sti
fisubrl
fcompl
mov
or
lret
int3
dec
adc
xor
and
pop
push
sahf
jne
mov
xchg
mov
outsb
leave
sbb
xor
sub
std
outsl
fldcw
aaa
or
sub
mov
bound
stos
and
adc
js
xor
pushf
sbb
or
outsl
nop
cmp
or
clc
outsl
inc
xchg
pop
iret
sub
pop
out
xchg
mov
pop
sub
mov
push
xchg
xchg
and
cmp
outsl
and
lock
push
sub
mov
repz
sbb
sahf
add
stos
fimull
push
fldl
mov
arpl
cli
ss
insb
pop
addr16
sub
cli
or
sbb
push
ficompl
add
shlb
pushf
xor
clc
adc
add
jmp
adcb
add
ret
bound
xchg
cmpsb
push
loopne
int3
push
mov
out
jg
and
rclb
lret
dec
shll
adc
movsb
pop
imul
je
pop
gs
add
out
jmp
xchg
adc
adc
fisttps
scas
sub
dec
mov
push
stos
pop
pushf
xchg
mov
or
loopne
stos
cmc
dec
insl
lret
cmp
popa
jge
rcll
ret
insl
mov
outsb
jl
pop
ljmp
aam
cmpsl
fs
xlat
push
je
push
andb
shll
jne
ds
jp
xor
jns
jbe
roll
shl
enter
jle
jae
cli
shlb
push
cmp
lods
repz
cli
aas
or
fidivl
ret
mov
int
mov
call
and
xchg
mov
xchg
mov
xchg
mulb
inc
or
jbe
mov
inc
sub
xchg
dec
jmp
aad
lahf
not
sbb
lods
paddusb
push
push
adc
int
es
js
xlat
addl
jmp
enter
pop
xchg
sub
sbb
aam
shlb
xor
ret
sbb
enter
push
jl
in
cld
jg
out
cwtl
or
pop
jne
pop
inc
adc
mov
jmp
stos
ret
cmp
je
sbb
or
ds
push
fsubrs
call
dec
mov
lcall
fbstp
nop
lret
test
jmp
or
js
insl
je
cwtl
test
ja
xchg
sub
cwtl
outsl
sbbb
adc
aaa
cmp
call
test
adc
and
mov
imul
in
push
addr16
adc
xor
gs
adc
fucomip
aas
int3
into
fcompl
out
adc
cltd
xorl
iret
stos
mov
xchg
sbb
aas
lret
pop
mov
scas
mov
sti
xchg
inc
mov
push
cld
flds
mov
lret
andb
jae
cmc
cwtl
and
xor
lea
fcoml
fdivrl
push
js
rorb
outsl
mov
sti
xor
stos
loope
mov
xchg
repz
cwtl
sar
insl
jmp
sbb
push
dec
fwait
push
sbb
mov
mov
sarl
fildl
mov
mov
and
add
ret
lods
mov
test
mov
pushf
lcall
and
lahf
cmp
push
leave
ljmp
aas
and
pop
lods
push
jge
mov
inc
cld
test
push
or
shl
pop
cs
jmp
xchg
mov
shlb
xchg
mov
int
stc
cltd
orl
je
and
inc
stos
int3
movsb
mov
fsubs
and
mov
xchg
jbe
sub
arpl
xor
cmp
pop
push
cmp
fcomi
mov
subb
mov
iret
xchg
push
ss
lea
mov
fisttps
jae
or
mov
adc
jo
mov
aad
loope
mov
pop
test
mov
test
and
push
lods
imul
push
jne
ret
or
mov
jecxz
jmp
inc
xchg
int3
repnz
aad
inc
mov
repnz
pushf
in
pop
hlt
into
je
adc
push
js
mov
dec
mov
push
iret
mov
cltd
call
mov
fcoml
daa
mov
inc
popf
jnp
mov
frstor
cli
ljmp
cmp
mov
sahf
ljmp
cmp
test
add
xor
cmp
pop
sub
dec
inc
insb
and
inc
aas
mov
les
xchg
outsl
movsb
jb
vpshlw
dec
xor
std
jns
fnstsw
idiv
std
in
cmp
and
cli
push
lcall
jbe
mov
in
popf
mov
fsubl
mov
mov
sbb
or
leave
xor
aad
imul
jb
cmovs
jg
aad
jne
pushf
xchg
push
mov
sub
push
cmp
pusha
cmpsb
mov
xchg
push
insb
orl
jmp
clc
in
inc
or
subl
decl
stos
inc
inc
repnz
sbb
sub
xor
ficomps
insb
xorl
movsb
cmp
jae
std
pop
dec
jp
fistpll
xchg
stc
inc
movsl
fs
sti
push
jno
and
rolb
flds
shlb
mov
cmp
xor
jp
dec
or
jbe
lods
push
aad
inc
add
push
adc
std
fwait
pusha
mov
imul
pop
jecxz
mov
shll
test
xor
gs
cmp
pop
add
enter
popf
std
rorb
scas
dec
jl
insb
aaa
pop
and
inc
loope
mov
jmp
decl
pop
dec
aad
xor
jge
inc
lds
push
ja
cs
cmp
mov
pop
push
test
push
mov
ljmp
stos
out
mov
mov
outsb
fwait
loope
pop
xlat
xorb
jbe
jg
dec
fmul
movsb
sbb
sub
cltd
inc
loop
add
std
popa
out
je
rcrl
pop
jecxz
in
xor
mov
fstl
push
nop
mov
mov
arpl
sub
cwtl
jno
and
lods
mov
push
in
add
ss
xor
repnz
cli
ds
mov
repnz
arpl
or
or
dec
sub
imul
push
cmp
iret
ja
inc
ds
fwait
pop
imul
mov
sub
outsl
out
sbb
pop
cmpsb
sarl
popa
dec
test
jle
pop
sub
jecxz
divl
add
movsb
mov
mov
sbb
pushf
mov
scas
dec
and
jb
push
jg
ret
stos
mov
sbbl
and
pop
jbe
imul
jno
jo
pop
in
jbe
jbe
push
sbb
nop
bnd
dec
mov
fs
test
pop
adc
in
xorb
out
push
cmp
les
lock
jbe
cmp
add
sbb
dec
ja
add
js
ds
jl
pop
je
loopne
movsb
inc
cli
inc
fnstcw
mov
cltd
cmpl
outsl
ret
xor
es
or
or
cwtl
add
xor
rclb
stc
mov
jo
xor
pop
loopne
sub
lds
cmp
and
loop
loope
int3
or
mov
lret
ja
adc
pop
mov
xchg
std
or
cmp
fs
or
out
sbb
punpckhbw
clc
jns
mov
fdivl
sahf
push
xchg
test
dec
cvtps2pd
out
adc
mov
sbb
cld
xchg
ljmp
scas
add
pop
sub
lahf
push
mov
jns
adc
jecxz
adcb
adc
xor
sbb
bound
cmp
stc
arpl
inc
int3
xor
mov
push
das
mov
xchg
nop
aad
rorl
add
mov
push
jne
gs
push
sbb
out
mov
mov
jns
icebp
adc
push
popl
nop
mov
push
mov
xchg
xchg
fldt
inc
dec
xorl
mov
cmpsb
jns
inc
jo
lea
sub
sub
insl
push
xchg
mov
enter
cli
sbb
inc
sbb
divb
cs
adcb
gs
cmpsb
mov
xor
inc
js
test
mov
pop
sbb
test
and
mov
cmp
push
sbb
aaa
pop
fstpl
push
loopne
cmpsl
stos
pop
xchg
mov
mov
idiv
push
bound
inc
rorl
xchg
jb
add
or
pop
out
mov
inc
popa
and
cmp
cmp
inc
lret
push
out
or
loop
lahf
cmp
jnp
sbb
scas
mov
jg
sbb
lock
stos
iret
nop
or
lds
push
jae
ficomps
out
lds
fsubp
in
mov
sub
jle
add
dec
cs
lea
test
adc
xchg
sub
repnz
es
xchg
mov
mov
loop
arpl
popa
inc
sub
insl
icebp
pop
xor
inc
addr16
mov
lods
adc
xchg
imul
iret
dec
imul
arpl
inc
dec
int
xchg
jnp
scas
imul
adc
jmp
xchg
cmc
xor
into
mov
cld
decl
fwait
dec
sub
fldt
jge
pushf
sub
mov
add
mov
push
cs
stos
orb
fistpl
lock
es
push
mov
mov
jae
imul
or
pop
dec
jecxz
lcall
or
add
dec
mov
inc
icebp
in
and
fiaddl
jb
xor
push
dec
dec
cmc
xor
ret
xchg
sahf
pop
pop
bound
std
or
clc
ss
inc
mov
adc
xlat
scas
loop
push
sub
out
inc
insl
xor
mov
xor
into
sub
jo
xchg
popf
cmp
mov
mov
mov
lret
mov
bound
push
xor
stos
loop
sub
add
jecxz
mov
cmpsl
xor
lock
lock
pop
xchg
xor
lea
pop
adc
cld
test
mov
mov
dec
ficompl
pop
sbb
fisttpll
test
push
inc
test
into
cmc
dec
divb
unpckhps
dec
xchg
jg
sarb
cmpsl
iret
xchg
mov
mov
adc
int3
jg
xlat
pop
mov
in
xchg
dec
mov
rorl
inc
xor
jl
sub
data16
inc
xlat
mov
add
xchg
outsl
dec
jnp
arpl
mov
outsb
fsubl
test
imul
int
sub
clc
ds
lahf
dec
loop
push
shrl
xorb
jns
cmp
fstps
cmpsb
mov
imulb
adc
sub
std
out
and
ds
and
mov
xchg
ffree
filds
loope
sub
and
pop
sub
mov
push
imul
popa
sub
leave
sbb
and
sbb
mov
subb
and
mov
push
push
aam
bound
xor
aam
push
out
pop
or
sub
nop
adc
pushf
cltd
int3
cmpsl
out
mov
and
inc
adc
in
jno
xchg
mov
lds
icebp
push
jge
addr16
test
mov
les
mov
mov
lahf
repz
es
adc
cli
je
pop
cmp
jne
pop
or
mov
rcrb
mov
or
rcll
and
jbe
ret
ret
decl
or
gs
cmpsl
sahf
sub
mov
nop
stos
test
adc
clc
aam
das
arpl
cmp
inc
dec
shlb
and
mov
push
pop
xor
sarl
fiaddl
in
test
lret
inc
pop
insb
clc
pop
push
adc
mov
pop
int3
push
inc
jmp
jae
popa
push
lods
jbe
push
out
mov
lcall
xorb
les
add
cmp
mov
jae
mov
push
inc
jecxz
mov
pop
mov
fldt
stos
push
cwtl
lds
xor
adc
rcl
out
ljmp
rorl
lock
test
bound
cwtl
cbtw
push
inc
cli
movsb
or
sbb
lea
inc
sub
subb
xchg
mov
xchg
sbb
mov
mov
lcall
push
xchg
add
dec
negl
sti
pusha
ret
cs
push
add
mov
mov
pop
pop
mov
mov
pop
pushf
fwait
and
in
push
in
jle
ficoms
in
cmp
and
icebp
push
popa
nop
sub
mov
adc
adc
cmp
adc
mov
mov
pop
push
sub
daa
pop
xchg
pop
cmc
filds
ds
hlt
lahf
and
in
sarl
arpl
call
xor
push
sarb
call
cs
pop
orl
movsl
mov
add
add
fldcw
cmp
adc
add
rolb
nop
adc
rorb
add
xchg
xor
push
aas
push
punpckhbw
enter
out
adcb
push
xorl
nop
aas
pop
pop
pop
adc
aaa
add
je
pop
shl
insb
sub
or
lret
pop
cmp
and
xchg
fwait
inc
loope
loope
sbbl
insl
iret
adc
add
adc
lcall
mov
dec
hlt
inc
xchg
xchg
cwtl
test
clc
cmpsb
push
xor
stos
insl
jp
dec
stc
bndldx
xor
fnsave
leave
in
negl
xchg
jb
pushf
mov
add
jl
jb
jbe
lahf
shll
leave
rorl
data16
inc
rcl
mov
push
bound
test
pop
cld
pop
jmp
icebp
pop
or
mov
aaa
mov
xor
fstpt
movb
aam
pushf
and
fnstcw
loopne
mov
jecxz
mov
in
jbe
adc
xchg
arpl
inc
test
dec
fmull
ja
push
cmpsb
adc
je
sahf
dec
sub
jl
xchg
mov
hlt
xor
lock
push
cmp
lcall
mov
idivb
rol
push
rol
push
mov
pop
xchg
cwtl
js
aas
insl
shlb
std
mov
mov
add
push
imul
fldl
clc
daa
push
sbb
gs
loop
movsb
cmpsl
xchg
sub
cmp
pop
jg
les
xchg
sahf
mov
mov
lahf
pop
mov
les
lret
mov
movsb
and
xor
cmpsl
push
inc
lock
and
mov
cmpsb
xlat
xor
loope
and
cmc
std
pusha
pop
or
pusha
sub
xor
lret
push
ret
and
arpl
mul
mov
mov
mov
je
test
dec
push
inc
adc
or
call
push
mov
or
fidivrl
lods
icebp
mov
pushf
sub
test
aad
in
int3
lret
and
jne
fstps
paddd
test
pop
mov
push
or
jp
addr16
fst
ljmp
pop
lret
jno
cmp
lock
in
pop
sbb
arpl
in
mov
stos
dec
pop
xor
scas
out
xchg
push
loope
xlat
icebp
mov
shlb
jbe
cwtl
aaa
adc
test
lods
adc
xchg
lods
pop
stos
movsl
push
outsb
outsl
adc
cmpl
and
sbb
sub
sub
incl
ret
hlt
push
fldenv
cld
out
repz
or
fnstcw
mov
adc
call
adc
mov
inc
pop
inc
ds
dec
push
push
ja
mov
xor
fildl
xlat
js
inc
mov
cmp
lahf
les
iret
mov
xchg
mov
xor
int3
jg
xchg
je
jns
lret
pop
pop
and
stos
pushf
xor
xlat
fdivrl
or
dec
mov
jecxz
mov
sub
fildll
lcall
repnz
cwtl
add
and
push
js
sub
or
adc
cmp
cli
loope
mov
ss
dec
movsb
andb
or
outsl
mov
xor
cwtl
nop
mov
dec
imul
clc
sbb
mov
out
dec
ret
ficoms
or
pop
adc
ret
sbb
repz
xor
xchg
pop
cwtl
jge
icebp
sbb
pop
movsl
pop
out
mov
adc
clc
ja
inc
xchg
jg
xchg
add
push
jb
aaa
leave
and
shlb
test
adc
jecxz
dec
push
pop
xor
mov
pop
jo
cmpb
cs
adc
pushf
pusha
lods
xor
mov
sahf
cmpsb
andl
or
int3
sub
jp
in
lods
aad
pop
jmp
pop
pop
pop
pushf
pushf
pusha
mov
lcall
sti
jmp
lret
dec
int3
sub
aas
out
nop
fists
mov
jbe
and
push
jne
icebp
adc
test
into
inc
push
xor
adc
test
cmpsb
movsb
jne
lret
xchg
pop
cmp
popa
adc
ret
mov
or
lahf
fldl
push
xchg
pop
clc
mov
fdiv
test
lods
rol
pop
and
pop
aas
pop
imul
data16
jmp
and
add
pop
daa
mov
push
adc
mov
xor
sub
adc
xor
jo
mov
les
insb
jg
cmp
jbe
push
pop
jp
dec
jae
aad
pushf
nop
mov
pop
mov
or
insl
test
idivl
add
jle
adc
lahf
add
sbb
adc
iret
mov
jg
insl
aam
xchg
ds
mov
enter
sbb
sub
cld
lds
sub
push
out
sahf
fwait
sub
mov
test
loop
add
mov
xlat
sbb
sbb
cmpsb
fmull
pop
int3
mov
call
xchg
loop
mov
and
cld
leave
in
vmread
cld
cld
test
jbe
and
dec
push
outsl
push
sbb
push
in
js
push
xchg
out
inc
ds
rcrb
and
hlt
negb
and
test
les
divl
insb
dec
and
pop
imul
in
mov
scas
cli
pusha
jl
pop
fdivr
jne
jb
outsl
lahf
xchg
adc
sahf
sbb
push
push
sub
xlat
and
das
lcall
mov
sub
push
nop
mov
je
mov
cli
test
imul
inc
add
std
mov
or
repz
bound
dec
rorb
mov
cs
lea
arpl
popf
push
mov
out
ljmp
stos
mov
andl
mov
out
or
pushf
and
into
into
lods
mov
mov
pop
movsb
mov
add
repz
icebp
cmpsl
int
jmp
fwait
xchg
lret
sub
or
imul
scas
jecxz
xor
stos
sbbl
push
adc
dec
mov
add
and
xchg
neg
mov
aaa
sbb
loope
mov
adc
int
dec
pop
fcmovnu
aad
sarb
into
out
xchg
pop
loop
jne
xlat
std
aad
jecxz
js
nop
nop
sarl
or
xchg
fsubs
iret
mov
mov
ret
mov
pop
dec
sub
push
outsb
repnz
pusha
lcall
inc
leave
adc
sub
add
enter
cmc
jbe
gs
and
mov
cmp
mov
mov
je
out
popf
shlb
mov
pop
les
divl
les
divl
les
divl
les
divl
iret
mov
fwait
insl
jns
pop
dec
xchg
mov
lods
test
inc
fldcw
cld
adc
push
out
repz
and
lahf
and
xor
inc
ss
cmp
dec
xchg
and
push
int3
jp
pop
mov
aam
push
and
xor
inc
ss
xchg
popa
xchg
stos
inc
or
push
aas
out
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
mov
jns
sarl
jns
sarl
jns
sarl
jns
sarl
jns
sarl
sub
mov
inc
and
xchg
imul
mov
jns
mov
jns
sarl
jns
sarl
xchg
imul
mov
jns
mov
jns
sarl
jns
sarl
aas
out
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
jns
loop
xor
xchg
neg
mov
aaa
sbb
xchg
neg
mov
aaa
jbe
push
shlb
rep
sbb
xchg
neg
mov
aaa
sbb
xchg
neg
mov
aaa
sbb
xchg
neg
mov
aaa
sbb
xchg
neg
mov
aaa
sbb
xchg
neg
mov
aaa
sbb
xchg
neg
mov
aaa
sbb
xchg
neg
mov
aaa
jbe
push
shlb
rep
aas
out
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
mov
mov
ret
cld
xor
inc
cmpsl
jae
and
cli
popa
fwait
jge
sti
xchg
jae
xor
sbbl
into
stos
pop
lret
int3
data16
xor
iret
pop
dec
lods
andnps
cli
mov
mov
rcll
fucom
and
mov
mov
add
data16
push
shrl
mov
test
or
add
aad
sub
fwait
out
enter
mov
shl
fdivl
inc
ljmp
xor
into
xchg
mov
mov
fisubrl
andl
xchg
jl
fsubr
loopne
pushf
mov
sbb
push
pop
hlt
rorb
push
ret
addl
pop
loopne
xchg
mov
push
or
cwtl
js
data16
insl
jns
test
inc
pop
add
in
xor
pop
mov
mov
ret
lret
popa
inc
inc
sub
or
pop
push
fnsave
mov
cmp
xor
xor
mov
inc
loopne
icebp
push
jns
jg
aam
inc
mov
out
dec
mov
mov
sub
mov
movups
aas
inc
push
mov
mov
inc
mov
xchg
jnp
push
pop
roll
mov
shrb
jne
sub
xchg
sbb
mov
pop
pop
xorl
jbe
les
movsl
mov
xchg
lret
cmp
xlat
rcrb
mov
add
pushf
lds
add
sbb
les
push
dec
mov
aam
push
and
xor
inc
ss
outsl
mov
mov
push
int3
jp
pop
mov
aam
push
and
xor
inc
ss
mov
adc
paddb
mov
fucom
add
push
out
xchg
pop
lret
cli
and
sarl
movsb
sbb
dec
scas
pop
or
xchg
popa
mov
xor
add
jnp
adc
iret
js
ja
call
mov
sub
lock
mov
cmp
inc
popf
out
push
push
call
sub
cltd
out
loop
sahf
push
inc
hlt
int3
mov
xchg
es
and
in
cld
or
test
sub
xchg
sbb
mov
pop
pop
xorl
jbe
les
movsl
mov
xchg
lret
cmp
xlat
rcrb
mov
add
pushf
lds
add
sbb
les
push
dec
mov
aam
push
and
xor
inc
ss
outsl
mov
mov
ret
add
or
sub
mov
insl
jb
mov
jmp
push
mov
outsb
mov
dec
paddb
mov
fucom
add
push
out
xchg
pop
lret
cli
and
sarl
movsb
sbb
dec
scas
pop
or
xchg
popa
mov
xor
add
jnp
adc
iret
js
ja
call
mov
sub
lock
mov
cmp
inc
popf
out
push
push
call
sub
cltd
out
loop
sahf
push
inc
hlt
int3
mov
xchg
es
and
in
cld
or
ret
jns
lock
out
pop
les
divl
les
divl
les
divl
cmp
add
ficomps
aaa
scas
inc
xor
cmpsl
aas
out
pop
les
divl
les
divl
cmp
add
fidivrs
out
pop
les
divl
les
divl
les
divl
les
divl
jo
sbb
pop
aas
out
pop
les
divl
les
divl
les
divl
sub
bnd
out
pop
les
divl
les
divl
cmp
add
faddp
out
sub
rol
aas
out
pop
les
divl
les
divl
xchg
js
test
add
out
pop
les
divl
les
divl
dec
jmp
mov
add
out
pop
les
divl
les
divl
jnp
pop
sub
addr16
cs
mov
clc
cmpl
divl
les
divl
dec
cmpsb
loop
insl
iret
sbb
adc
inc
fidivrs
das
divl
les
divl
cmp
pop
shll
jle
mov
out
pop
les
divl
les
divl
adc
jl
pop
pop
int3
lods
inc
in
pop
in
negb
mov
mov
mov
daa
mov
clc
xchg
mov
scas
clc
hlt
jp
jne
cmc
out
mov
mov
daa
mov
clc
xchg
mov
scas
clc
push
lock
aas
out
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
jno
lods
sarl
lret
jmp
lock
in
clc
push
leave
lret
pop
sub
cmp
test
scas
mov
cmp
es
leave
out
jae
cli
dec
cmpl
xchg
stos
push
pop
popf
dec
sbb
insl
xchg
mulb
mov
jo
dec
add
das
cmp
insb
inc
adc
lret
mov
popf
das
fdivr
jg
xor
rcrl
gs
mov
mov
nop
jnp
sub
lahf
push
xor
popf
call
fs
and
orl
iret
add
bound
xor
out
cli
fadd
jl
cmp
push
pop
daa
je
aas
aad
mov
test
inc
mov
addl
mov
faddp
loope
jnp
cmpsb
push
or
jae
stos
je
imul
lds
xchg
rcr
dec
in
mov
jp
xor
pop
mov
fwait
negb
sti
push
push
leave
sbb
add
inc
ror
xchg
mov
ficompl
add
jg
out
push
inc
loop
jl
rorb
popf
loop
mov
mov
inc
pop
dec
aaa
sbb
mov
mov
jg
out
xor
shll
aas
cmp
xchg
fsubrp
clc
xchg
mov
push
stos
add
mov
push
cmp
daa
or
fbld
push
fadds
dec
stc
push
repnz
xchg
ficomps
sub
iret
xor
leave
cmp
dec
inc
mov
pushf
sarb
jbe
or
fwait
pop
sbb
jg
dec
mov
sbb
aaa
cmpsb
cmp
je
arpl
and
pop
sub
aas
out
ret
int
icebp
fldl
sar
jae
scas
insl
and
xor
in
mov
push
out
or
xor
repnz
mov
iret
mov
mov
xchg
cmp
or
icebp
cs
mov
xor
loope
mov
xchg
dec
sbb
push
icebp
mov
mov
out
in
js
test
shll
scas
divb
adc
mov
xchg
add
adc
repz
fimull
loope
mov
mov
movsb
das
cmp
shl
add
cmpsl
adc
call
lret
or
push
xchg
push
adc
inc
inc
dec
and
scas
jo
xor
je
mov
mov
sbb
pop
mov
lcall
pop
mov
out
xchg
aaa
and
xchg
jecxz
mov
sbb
mov
addl
and
std
cwtl
xor
movsb
inc
dec
xchg
mov
mov
add
xchg
cmp
andl
mov
stos
xchg
jge
popl
xchg
addr16
loope
ss
shll
inc
mov
mov
or
in
rorl
adc
adc
fisubl
imul
push
jl
pop
stos
xor
pushf
out
lea
xor
xchg
xor
int3
mov
cmpsb
push
jae
inc
daa
jns
pop
jge
pop
stos
dec
pop
in
adc
push
jae
sbb
push
inc
and
repz
or
sub
and
lret
cs
jecxz
inc
ret
or
ja
jno
sbbl
xchg
addb
ret
ss
jns
xchg
cli
popf
mov
fwait
sub
mov
jp
das
mov
imul
mov
fidivrs
xchg
push
lahf
jnp
std
pusha
push
dec
fildl
shl
dec
stos
fisttpl
int3
push
mov
pop
pop
xchg
xchg
sbb
push
adc
lret
pop
inc
in
xchg
sbb
rcr
dec
mov
add
scas
fdivr
loop
sub
sub
cmp
xchg
incb
icebp
fiaddl
insl
mov
fcmovu
scas
rorb
loop
push
push
gs
lods
xlat
jne
insb
fs
inc
stc
pop
stos
cmp
sub
movsl
loop
push
and
stos
and
jl
fisttpll
sub
dec
mov
xchg
sub
out
scas
sbb
adc
mov
out
pop
pop
clc
mov
cmp
outsl
push
jnp
cmc
shll
or
mov
fildll
xchg
pop
and
and
fxch
xchg
adc
adc
cs
adc
and
cmp
inc
xor
xor
ss
pusha
or
rolb
mov
mov
pop
mov
jl
call
popf
mov
cld
or
push
stos
mov
push
pop
out
fnstsw
xchg
add
pop
es
or
mov
loop
add
dec
pop
push
loope
loop
popf
adc
ljmp
cld
shl
mov
aas
pushf
int
xor
psubusw
jnp
sub
mov
sbb
rorb
push
pusha
mov
sti
test
sub
lock
jb
xor
jbe
popa
push
movsb
call
dec
push
inc
test
pop
les
out
loope
rol
lods
pop
gs
xchg
int3
ja
ss
push
ror
pop
push
pop
in
sub
shl
jns
popl
cmp
push
pushf
out
add
lods
mov
fcomps
pop
lcall
mov
pop
mov
data16
cmpsl
dec
xchg
add
or
sbbl
push
lahf
call
insb
cmp
lock
pop
mov
or
jp
jl
pop
dec
stc
clc
pop
or
nop
inc
adc
jae
lods
notl
cmp
or
ljmp
add
test
push
mov
or
loopne
movsb
sbb
cmp
das
fstp
pop
jno
ss
ret
dec
xchg
dec
stos
and
addb
jb
cmpsl
cmp
iret
nop
or
dec
pop
bound
jae
or
sbb
call
mov
dec
mov
imul
push
fidivrl
je
nop
sub
jmp
mov
mov
mov
std
dec
jg
xchg
mov
add
jns
jo
xorl
mov
in
cs
dec
movsl
adcl
loope
add
pushf
nop
xor
lcall
sbbl
icebp
dec
mov
pop
and
lods
xor
cwtl
cmp
rcl
iret
gs
xor
cwtl
rcrl
int3
icebp
aaa
add
add
or
in
mov
out
xor
add
loope
pop
mov
push
add
stc
pop
add
add
push
cmp
andb
shll
ljmp
jb
pushf
mov
bound
pop
test
pop
orl
das
ret
rolb
aam
and
pop
pop
orl
adc
repnz
dec
das
cli
stos
lds
scas
xchg
xchg
pop
nop
shll
cmp
ret
sbb
jecxz
and
stos
mov
push
and
lods
add
xchg
fsub
lock
jns
sbbb
mov
dec
in
or
xchg
popf
icebp
or
or
fwait
inc
cmp
dec
test
stos
cmp
jmp
or
or
sbb
outsl
orb
rolb
inc
sub
xlat
fldl
push
es
pop
pop
negl
or
jno
adc
or
cmp
push
adc
jmp
pop
mov
mov
sub
mov
in
fildl
scas
out
nop
cwtl
stos
faddl
xchg
in
jb
push
xor
adc
adc
pop
insb
nop
or
push
sbb
pop
or
hlt
imul
xchg
fisubrl
mov
dec
xor
mov
sub
mov
icebp
addb
xchg
xor
sub
xchg
test
inc
push
repnz
push
and
shr
adc
test
pop
cmpsb
add
push
outsb
repnz
ret
dec
imul
sub
push
push
arpl
ret
dec
imul
add
cmpsb
pop
cmovb
out
pop
les
divl
xor
repz
aam
out
popf
cli
in
and
lods
repnz
or
add
add
aam
ljmp
jns
xchg
xchg
outsl
nop
lea
mov
jno
push
or
add
inc
ljmp
push
jle
xor
add
inc
ljmp
insl
leave
jmp
addl
in
clc
mov
sbb
into
jnp
jno
movsb
push
xchg
pop
push
xchg
sbb
into
jnp
lahf
push
pop
imul
jp
jle
sbb
paddsw
scas
outsl
xchg
and
cmp
movsb
adc
xchg
cmpb
inc
cmp
notl
xchg
mov
imul
adc
sbb
out
mov
shl
stos
cli
xchg
in
insl
pusha
or
fdiv
loope
into
inc
je
mov
mov
and
xchg
sub
mov
dec
test
add
pusha
xchg
cmp
imul
dec
loope
fnstenv
xor
push
sbb
sti
fdivrp
ficomps
fwait
sub
imul
nop
cmc
incb
fnstenv
cmpsl
clc
push
imul
insl
repz
push
ret
inc
mov
dec
leave
mov
lret
jmp
subl
test
pop
jno
pop
jnp
pushf
sub
sbb
sarl
add
adcb
outsl
cmc
inc
mov
inc
adc
inc
ds
lcall
loop
cltd
push
and
fs
cmp
xor
and
fs
cmp
and
push
sbb
arpl
mov
adc
aam
push
jbe
xchg
out
insb
and
ljmp
sub
iret
or
push
and
mov
test
and
rorb
insl
lea
dec
mov
jle
jns
lahf
add
xor
mov
cmp
sbb
and
aas
out
pop
les
divl
lods
mov
hlt
aad
mov
xor
movsl
testl
in
aam
cmp
inc
mov
stos
adc
ret
std
stos
push
sbb
inc
lcall
dec
mov
adc
inc
iret
cmp
pop
in
lret
mov
in
jl
pop
sub
dec
jo
outsb
sarb
bound
icebp
adc
jecxz
fwait
test
pop
shld
lds
sbb
xchg
cmp
loope
dec
mov
stos
test
ds
fs
jb
test
hlt
cmpsl
sbb
in
sub
push
dec
mov
shr
inc
mov
pop
inc
inc
fldcw
push
or
in
pop
fisttps
movsb
fisubl
jo
mov
or
into
lea
mov
pop
aas
cmp
jbe
lock
sbb
into
test
call
cmp
adc
push
ficompl
imul
scas
enter
push
rcll
movsb
mov
adc
gs
lods
mov
dec
orb
mov
push
jl
jl
fs
in
sarl
loope
pusha
xchg
xor
std
lahf
xchg
mov
mov
insb
mov
inc
push
out
xor
adc
fstp
inc
mov
mov
gs
xchg
jle
mov
jmp
mov
rcll
movsb
mov
jmp
pop
sub
outsl
cmpsl
mov
lea
xor
xchg
mov
mov
cmp
jnp
push
dec
cmpsl
decb
daa
das
jb
add
sti
and
or
adc
mov
mov
in
fwait
daa
cwtl
jmp
rcll
sub
push
dec
xchg
aaa
test
retw
mov
pusha
jg
add
mov
pushf
stos
out
cld
cltd
or
mov
mov
fwait
add
testb
xchg
dec
inc
insb
daa
out
cmp
mov
inc
and
fmul
dec
ret
mov
out
nop
push
jmp
insb
push
dec
sahf
dec
sbb
pop
mov
cmpb
mov
dec
mov
mov
imul
sub
push
push
arpl
ret
dec
imul
ja
jg
jl
mov
iret
dec
adc
lds
or
xchg
call
das
or
lea
out
and
rol
mov
jmp
enter
fistpll
push
into
je
mov
insl
fcom
ret
lds
je
cmp
jae
pop
push
data16
andl
scas
pusha
test
sub
sub
test
fnstenv
lods
cltd
push
mov
enter
aam
mov
jns
dec
hlt
push
xchg
pop
adc
inc
adc
mov
or
pop
int
gs
pop
bound
ret
aaa
aas
jo
addl
mov
faddl
dec
scas
lods
add
xchg
sti
dec
cltd
xchg
push
lods
mov
add
test
ror
inc
stos
and
test
jo
jnp
jmp
enter
sub
mov
inc
mov
adc
pop
inc
xlat
rol
jge
out
sti
shlb
mov
in
fildl
or
pop
inc
dec
adc
mov
sbb
fmull
jp
jle
sbb
pop
test
mov
test
cmp
in
or
mov
incl
lds
repnz
lret
repz
adc
imul
addb
test
xchg
iret
aam
xorl
insl
push
lahf
and
repnz
cwtl
dec
jecxz
or
pop
xlat
mov
push
push
out
xchg
shlb
mov
jl
out
sbb
sbb
dec
xor
sti
out
add
pusha
gs
mov
test
push
leave
stos
or
das
addb
or
je
mov
push
cmp
scas
jle
cld
push
ret
test
cltd
inc
scas
lock
mov
and
or
inc
xchg
pop
xchg
sub
or
and
dec
mov
adc
dec
lds
jae
xchg
add
daa
mov
leave
insb
pop
push
insl
iret
push
push
fsubrs
mov
enter
xchg
mov
ja
aaa
outsl
leave
xchg
in
sbb
rcl
mov
xor
je
push
dec
cmp
rcr
rcll
cmc
aaa
xor
lds
into
push
lcall
or
mov
fimuls
cmp
cwtl
cli
jo
pop
jns
dec
mov
push
mov
test
fwait
in
inc
push
pop
subl
mov
cmp
xchg
iret
jmp
rolb
test
in
jecxz
add
adc
cltd
stos
jne
movsb
sbb
adc
out
inc
mov
mov
int
mov
cmp
push
test
xchg
into
adc
mov
adc
ret
out
inc
lret
lods
stos
adc
test
push
mov
mov
popf
jnp
push
scas
pop
sub
xrelease
test
scas
loop
outsb
inc
adc
int
imul
cld
sbb
cld
aas
inc
jp
inc
je
inc
pop
sbbl
lret
pop
mov
das
ljmp
add
iret
mov
jbe
jp
test
fildll
and
fadds
test
gs
cwtl
test
test
outsl
jp
jl
jae
clc
addl
fsub
inc
lcall
mov
xor
adc
xor
xchg
pop
push
into
dec
pop
pop
push
mov
mov
cld
addl
add
sahf
or
xor
sti
mov
hlt
clc
and
fistl
popf
xchg
jne
and
repz
loopne
add
rcl
ficompl
out
iret
or
sbb
or
cmp
enter
lea
outsl
loopne
setno
push
ret
test
cli
aaa
dec
sub
repz
rclb
fwait
push
and
aad
in
sbb
ja
xor
push
fs
stos
cld
into
in
idiv
push
inc
mov
add
pop
ss
rcr
push
push
xor
pop
or
in
inc
pmaddwd
loop
lcall
jns
js
nop
xchg
mov
pop
jp
cmpsb
in
mov
pop
xchg
aad
cmp
decl
sub
xchg
push
mov
xchg
popf
dec
lea
jno
bound
pop
mov
inc
insb
mov
int
sahf
imul
add
xor
ds
scas
stc
jb
test
or
push
push
popl
ret
adc
push
mov
loopne
sbb
arpl
xchg
xchg
mov
dec
push
jno
mov
cmpsl
dec
popl
gs
insb
adc
cwtl
jle
pop
std
mov
mov
out
mov
jl
or
and
jecxz
sub
cmp
mov
jnp
stos
pop
add
jmp
fisttps
cwtl
mov
movsl
dec
cmc
adc
mov
daa
mov
out
test
mov
jle
or
mov
int3
in
cld
cs
sub
jbe
push
or
inc
addr16
les
cltd
sbb
test
pop
pop
mov
and
bound
push
jne
add
in
sahf
lea
add
mov
iret
sub
ja
mov
cld
imul
int
out
mov
sub
add
sub
or
test
inc
push
and
cmp
rorb
ja
outsb
cmpsb
aam
rclb
insb
xchg
add
out
or
mov
lret
faddl
pop
test
aad
push
xchg
push
out
lea
rcr
pop
push
fiaddl
inc
jnp
push
aas
adc
mov
mov
and
cwtl
push
pushf
cwtl
daa
adc
xchg
shlb
cmp
lods
cli
outsl
or
stc
mov
push
scas
incl
loop
stos
sub
dec
mov
adc
fwait
jmp
inc
add
or
inc
jp
mov
mov
jle
cmp
pop
cli
add
enter
mov
lahf
test
gs
jo
mov
jno
lret
mov
adc
mov
ret
ljmpw
lods
mov
cmp
jmp
stos
sbb
inc
sub
xor
aam
out
cwtl
and
lds
mov
mov
addr16
fstl
push
es
ret
sbb
loope
mov
sti
cmp
repz
lods
mov
pop
xchg
arpl
stc
repz
cmpsl
mov
xchg
loopne
cmpb
jbe
add
cmp
mov
arpl
add
add
jnp
pop
or
sbb
loopne
dec
ja
popa
xlat
out
jg
das
xor
call
icebp
aaa
mov
test
lret
fstpt
sub
adc
xlat
fcompl
das
or
dec
jmp
push
jecxz
test
adc
or
push
push
lcall
sub
in
lods
sbb
push
pop
dec
pop
xor
pushf
or
adc
xor
pop
hlt
lahf
pop
imul
dec
mov
std
movsl
xlat
xchg
sbb
in
push
ret
repnz
or
daa
cmpl
lock
iret
inc
cmp
aad
aam
mov
push
bound
out
inc
mov
std
or
and
lret
xor
int
lods
adc
sbb
or
sahf
into
push
insb
adc
and
fnstcw
and
pop
lods
xor
loop
mov
cwtl
test
clc
data16
mov
inc
test
dec
inc
mov
jbe
lock
dec
lock
pop
and
jp
sbb
sub
pop
inc
add
adc
lret
pop
dec
inc
hlt
popf
mov
in
mov
int3
lods
lock
fmul
or
fst
or
ret
add
ljmp
or
mov
xchg
pop
xor
inc
popf
push
sahf
jbe
movsb
sbb
insb
mov
push
and
in
mov
mov
inc
repz
fbstp
sysexit
xchg
or
or
aas
cli
adc
dec
xlat
adc
test
fsubrs
jl
lret
pop
dec
push
imul
jo
and
adc
push
cmpl
insl
insb
mov
ret
rclb
jl
ja
outsl
inc
sahf
push
jmp
test
pop
add
lock
pop
ficompl
int3
lcall
fistpll
adc
rcrb
loop
enter
dec
adc
adc
push
int
enter
bound
repnz
push
ljmp
push
sti
dec
je
outsb
mov
sbb
jnp
sub
push
rcl
pop
sti
adc
cwtl
add
jg
cmp
shl
cmp
sbb
jae
jle
int3
dec
js
sub
xor
inc
sub
out
mov
mov
inc
scas
sbb
cmc
xchg
or
mov
pop
dec
sbb
push
sbb
arpl
sub
lods
jecxz
pop
adc
mov
pop
aad
push
das
mov
fs
lahf
cli
fcmove
add
roll
xchg
pop
sbb
rcr
popf
test
int
inc
push
cs
movsl
ret
dec
jl
ret
gs
leave
xor
ret
fnstenv
cmp
out
mov
into
sbb
jg
and
pusha
popa
movsb
test
xor
inc
cmp
cld
ds
clc
fadds
xor
js
loopne
in
push
repnz
out
pop
repz
cmpsl
pushf
iret
mov
in
idiv
and
push
adc
shr
mov
dec
repnz
imul
pop
push
outsb
jo
jns
call
outsl
dec
out
pusha
sbb
or
shrb
mov
aaa
jbe
stos
fwait
adc
subl
push
adc
pop
inc
aad
mov
test
jg
or
mov
bound
xchg
mov
out
fldl
xchg
mov
add
lods
insb
data16
sub
test
outsb
in
xor
mov
das
add
push
cmp
mov
sub
xchg
pop
test
je
push
sub
dec
push
fs
stos
push
les
jne
mov
dec
jnp
xor
sahf
xchg
cltd
in
adc
sbb
jbe
pop
xchg
in
xchg
mov
add
xchg
int
mov
xchg
mov
iret
sarl
stos
aam
xchg
test
add
jno
push
and
mov
inc
push
mov
test
out
mov
es
mov
xorb
or
cmp
ja
pcmpgtd
int3
cmp
test
add
or
mov
cmp
adc
shll
adcb
std
pop
dec
xchg
insb
sbb
inc
mov
sbb
jmp
add
adc
mov
push
adc
push
sub
scas
and
repz
mov
jae
push
pop
xchg
idivb
xchg
mov
or
cmp
movsl
loop
cli
mov
mov
pop
push
mov
or
mov
pop
dec
test
testl
ss
orb
fisttps
dec
dec
and
add
cmpb
mov
lods
sbb
scas
inc
les
std
xchg
xlat
jg
pop
lret
outsb
push
xor
cmpsl
lds
jp
ljmp
cmp
jp
hlt
cld
xchg
cmp
push
add
jmp
sub
pop
imul
inc
inc
clc
mov
and
jbe,pt
fstps
std
push
sbb
lret
pop
je
out
mov
push
fdiv
insb
add
les
adc
ljmp
dec
xor
dec
fsubs
xor
jbe
test
js
movsb
pop
rcrb
adc
xor
adc
test
sbbl
mov
mov
or
or
fnsave
mov
add
xor
ret
fisttpl
addr16
push
push
mov
fstpt
sbbl
inc
lahf
lea
imul
sub
mov
shlb
inc
mov
decb
push
mov
inc
movsb
cmp
jb
test
in
pusha
iret
add
mov
sar
xor
fmuls
lds
dec
cld
leave
jbe
xchg
dec
into
add
inc
push
addb
daa
lahf
or
gs
imul
sarb
push
pop
fwait
add
ljmp
inc
cld
movsb
pop
arpl
orb
adc
lds
iret
inc
pop
and
pop
cmp
daa
popa
sbbl
ljmp
out
int
rol
dec
pop
pop
or
mov
or
cmc
fists
push
in
dec
pop
subb
inc
out
add
mov
mov
mov
aad
push
xchg
mov
push
jb
add
pop
subl
loope
dec
lods
inc
sbb
aaa
mov
paddusw
lods
mov
outsl
push
cmc
cmp
mov
popa
mov
aad
fs
mov
daa
or
aad
mov
mov
in
cmpsl
ret
in
popf
movsb
jecxz
xor
xchg
es
rcll
jle
adc
mov
scas
leave
fstl
xor
cmp
call
push
movsl
loop
pusha
insb
cmp
dec
mov
fcomps
lds
add
add
stc
lahf
lret
dec
out
sub
sbb
ret
repz
insl
pop
arpl
ljmp
mov
sub
sub
scas
sbb
das
das
mov
cmpl
out
inc
push
or
divl
popf
subl
test
inc
mov
call
dec
dec
pusha
mov
mov
stos
xchg
push
outsb
jo
cmp
loope
shlb
push
jmp
popf
repz
cmc
pop
sbb
sar
dec
jle
push
in
stos
nop
add
sub
in
mov
cli
push
mov
jp
dec
testb
daa
add
xchg
dec
sub
and
out
or
roll
in
fisubrl
mov
or
add
test
adc
pop
mov
mov
int3
push
pop
pop
lods
push
xchg
cmc
les
mov
aam
cmp
xor
xor
in
nop
push
mov
int
push
xlat
int
push
mov
nop
out
std
imul
push
sbb
pop
jg
xor
mov
sub
add
arpl
cmpsb
aaa
sub
insb
cmc
pop
ftst
lds
or
int3
xchg
aad
enter
fsub
pop
push
pop
jmp
push
xor
and
lret
sahf
test
inc
mov
out
fstp
iret
push
in
push
das
sbb
sbb
jmp
and
cmpsl
sbb
sar
pop
insl
dec
addr16
pop
xor
dec
pop
push
lret
cmpsb
cmpb
add
fwait
or
xor
inc
or
jno
flds
leave
addr16
add
xor
xor
jp
push
push
xor
inc
outsb
jp
leave
dec
cmp
popa
mov
fbld
popa
daa
outsl
sbb
pop
mov
inc
push
insb
xchg
lds
or
cwtl
repnz
or
clc
lea
mov
mov
adc
ljmp
dec
push
pop
adc
test
adc
or
and
ret
scas
js
shll
mov
lea
mov
mov
adc
mov
popa
xchg
xor
sbb
dec
push
or
or
add
push
dec
push
jmp
xor
std
inc
jmp
dec
clc
push
lods
cltd
push
insl
mov
fwait
jl
mov
lods
sbb
inc
inc
mov
xor
movsb
cmp
jecxz
sub
aam
cmp
add
cwtl
mov
sbb
or
mov
out
pop
hlt
dec
out
gs
mov
mov
stc
lahf
lds
mov
lods
add
nop
jbe
jbe
lret
xor
lods
flds
fistps
shlb
cmpsb
dec
hlt
fnsetpm(287
push
mov
pop
ret
and
sbb
or
xchg
and
jbe
enter
jnp
xchg
stos
or
push
xor
pop
mov
fdivs
cmp
pop
xchg
outsl
sbb
dec
cmp
xlat
xor
aad
movsb
test
push
imul
sub
loope
mov
insb
pop
popa
jecxz
cmp
mov
and
adc
pushf
xor
adc
sti
sbb
sbb
inc
mov
in
aaa
or
cmp
xchg
inc
push
mov
xchg
call
xchg
rcrb
mov
icebp
mov
iret
inc
enter
mov
mov
pop
add
fsubrl
push
jnp
fmulp
or
or
or
or
pop
inc
bound
or
repnz
loopne
push
xchg
pop
and
mull
mov
insb
fstl
jecxz
mov
add
mov
sbb
ja
push
mov
mov
sub
add
out
inc
inc
fwait
cmp
insb
jbe
ret
dec
jg
or
mov
pop
dec
mov
cld
movl
hlt
lock
cmc
cmp
xchg
out
imul
jp
sti
gs
push
lret
xchg
pop
ror
jae
cmc
shlb
mov
jns
mov
jae
jle
fdiv
or
push
cmp
hlt
shlb
and
mov
dec
call
push
inc
cmp
out
pop
les
divl
or
stos
dec
pusha
pop
sbb
insl
and
jno
cmp
sahf
sub
push
mov
lret
mov
sub
mov
insl
jb
mov
jmp
lods
dec
jp
imul
lahf
jns
inc
inc
sbb
jg
lods
addr16
sbb
push
lcall
popa
lret
push
xchg
and
mov
adc
xor
jecxz
adc
insl
into
cmp
push
aaa
mov
test
jo
addr16
outsl
incl
test
aam
sahf
mov
xor
pop
pop
xchg
inc
sub
es
cmc
aas
and
push
cmp
add
int3
cwtl
inc
jmp
cmp
roll
mov
stos
adc
std
addr16
xorb
mov
xchg
pop
pop
leave
mov
rorl
ror
in
push
xor
stos
push
lds
jecxz
add
outsl
jmp
das
rclb
mov
movsb
testb
mov
icebp
mov
fisubrs
lret
sbb
jbe
mov
call
inc
test
xchg
mov
inc
xchg
js
or
jmp
cs
aas
lock
xchg
mov
push
aas
out
cltd
dec
jle
sbb
cli
mov
in
in
jo
movsb
int3
and
dec
jno
mov
icebp
call
jp
out
xchg
xchg
sub
fisubl
jns
pop
jb
insl
mov
insb
push
ret
mov
jge
xor
mov
lcall
mov
je
inc
pop
add
pop
dec
jnp
inc
notb
jp
mov
and
adc
dec
shll
push
aaa
fiadds
mov
fadd
xchg
in
push
inc
lods
in
push
add
lds
mov
mov
out
pop
les
divl
mov
push
clc
stos
call
outsb
nop
mov
pop
sub
mov
sub
xor
hlt
test
mov
mov
in
mov
cmpsb
es
mov
inc
xlat
xchg
lods
jg
inc
movsl
mov
mov
insb
bound
dec
movsl
mov
dec
stc
dec
std
mov
addr16
xchg
sbb
loop
out
inc
sbb
push
int
pop
cmp
sarl
imul
loop
adc
movsb
push
in
add
inc
pop
iret
dec
jbe
jo
imul
jmp
clc
loop
cmc
lods
add
jns
in
into
testb
xchg
sub
scas
lcall
popf
adc
inc
lret
fwait
dec
inc
add
dec
or
addr16
stos
push
mov
mov
js
mov
mov
aas
mov
sub
mov
cmpsl
fbstp
dec
lea
xor
sbb
leave
test
out
repz
and
push
popf
and
test
sub
cld
lret
loop
ret
and
inc
jmp
aaa
cli
lea
mov
xchg
cs
ret
mov
jnp
sti
addr16
and
lret
mov
scas
jno
jle
arpl
nop
pop
sub
add
out
mov
fs
push
push
lret
pop
movsb
pop
mov
fdivrp
int
mov
ss
fildl
mov
fwait
sbb
jg
ffreep
pop
sahf
sub
push
dec
testl
jl
popa
pusha
pop
push
jno
mov
jmp
insl
ret
inc
addb
sub
dec
xor
dec
jg
add
enter
in
push
push
int
push
push
add
push
sbb
rcrb
inc
push
mov
and
cmp
in
push
fs
push
andb
mov
or
outsl
jp
mov
movsl
fnsave
mov
mov
aam
ljmp
nop
cmpsl
out
sub
movsb
add
cmp
jne
mov
ret
sbb
push
or
mov
jp
add
push
pop
dec
js
aas
xchg
jno
mov
scas
aas
jnp
mov
pop
test
pop
and
pop
cmp
inc
or
mov
movsl
jge
push
adc
jecxz
stos
out
out
ljmp
cwtl
dec
push
rcll
push
pop
cmp
mov
mov
pop
sbb
ret
stc
xor
movsb
mov
xchg
push
add
push
outsl
and
or
push
aaa
in
xlat
mov
inc
jnp
dec
dec
push
inc
out
xchg
jnp
aad
jno
inc
xchg
and
xor
out
inc
push
jns
push
shll
xchg
jne
xchg
ret
add
std
mov
sbb
mov
call
cmp
push
push
and
or
sub
push
mov
mov
sahf
in
push
pushf
add
or
hlt
sbb
mov
sahf
in
xor
inc
add
ret
out
pop
inc
push
out
into
lahf
scas
add
pop
mov
xor
ds
mov
js
hlt
fs
push
jbe
pusha
ss
xor
aas
test
insl
sub
xor
clc
sbb
stos
mov
jp
sub
sbbl
mov
cs
scas
icebp
xchg
push
cmp
leave
mov
adc
test
jo
mov
jl
mov
mov
lret
test
adc
repz
inc
dec
call
dec
mov
xor
cmc
pop
lods
jmp
xorl
loopne
pop
adc
push
push
shl
inc
xor
xor
cli
outsl
mov
pushf
jo
loope
jns
or
dec
add
into
insl
pusha
xchg
daa
xor
lcall
nop
fcoml
pop
push
or
pop
incb
repz
aad
idivb
in
or
sub
dec
mov
in
add
movl
jge
lahf
add
push
pusha
cltd
shl
mov
fisubs
ret
cmp
imul
loope
sbb
js
cltd
pusha
orl
aam
sub
pop
mov
xchg
inc
cmp
pop
and
addl
in
nop
xchg
xchg
and
push
cmpsl
adc
xchg
pop
adc
popa
or
scas
into
cli
pop
inc
xchg
mov
inc
scas
bndstx
shl
and
xchg
sub
mov
jp
sbb
xor
jb
nop
out
lds
sub
jae
push
mov
add
fisttpl
sub
cwtl
je
cwtl
push
stos
js
stos
mov
xchg
xchg
cmp
xchg
ret
mov
mov
cwtl
pop
out
imul
xchg
mov
das
or
repnz
fsubrs
fwait
mov
jno
push
mov
arpl
sbb
push
and
pop
call
adc
mov
and
mov
pop
push
jl
sbb
es
lea
cmp
adc
mov
cs
adc
roll
dec
cmp
xchg
ss
jne
in
psubsb
adcb
outsl
add
push
insl
mov
sub
pop
xchg
jl
lret
test
leave
jns
ss
fisubs
inc
sub
sahf
jmp
add
les
shlb
mov
dec
cmp
aad
aam
scas
jp
push
cmp
cli
cmpsb
jno
test
cmc
mov
jno
push
mov
fcoml
lahf
cmpsl
adc
or
sbbb
push
jns
imull
subl
cmc
fwait
daa
cmp
adc
push
mov
stos
mov
add
scas
dec
lds
aaa
scas
lea
addl
inc
xchg
dec
add
lds
repnz
fs
pop
sub
fdivl
cli
or
dec
loope
xchg
jo
sub
adc
lods
icebp
mov
ret
xchg
pop
sbb
mov
lcall
ret
subl
push
add
les
in
xlat
add
adc
sbb
outsl
int3
mov
jecxz
jnp
and
mov
or
and
arpl
incb
aaa
fsubrl
xor
bound
jbe
cmp
jecxz
adc
push
cmp
sub
cmp
arpl
shrb
add
arpl
mov
mov
mov
mov
dec
push
mov
scas
add
mov
dec
cmp
rorl
xor
cmpsb
mov
pop
push
sbb
mov
jno
pop
push
sti
fwait
cmp
movsb
mov
mov
mov
insb
adc
ja
insb
inc
les
repz
sub
movsb
jbe
das
out
ljmp
iret
shll
in
pop
jmp
pushf
push
insl
dec
mov
and
shl
ficompl
push
hlt
decb
mov
xchg
lock
fnstcw
adc
jge
xchg
or
in
shlb
call
aaa
dec
sahf
sbb
dec
les
push
insb
adc
fistps
xchg
add
cwtl
stc
jnp
imul
cmp
leave
loope
cld
mov
lea
cmp
sbb
mov
inc
bound
movsb
mov
adc
movlps
test
cltd
not
jecxz
xor
cmpsb
out
fisubl
add
sbb
sti
jge
lret
inc
lcall
outsb
in
cmpsl
jle
cmp
icebp
call
loopne
jmp
sub
rolb
adc
push
cmc
mov
in
adc
inc
addr16
pop
inc
inc
dec
mov
movsb
push
mov
adc
mov
imulb
sarb
or
sub
scas
ja
push
jns
xchg
lea
lahf
repnz
fdivs
adc
daa
mulb
pop
arpl
stos
shl
jg
ja
jno
aam
adc
jne
dec
xor
imul
sub
push
xchg
mov
cmp
xchg
xchg
aas
xor
lds
adc
add
mov
push
test
cli
rcr
out
sbb
jecxz
es
pop
jbe
jo
sub
xor
mov
sbb
sub
sbb
add
lea
aad
pop
sbb
rclb
das
push
xchg
push
fs
bound
xchg
dec
push
icebp
and
xor
jle
movsl
or
aaa
lret
je
negl
or
ja
das
inc
inc
aas
sub
int
and
ret
lds
inc
adc
cld
lret
sbb
clc
imul
pusha
decb
iret
dec
pop
add
cmpsl
dec
inc
and
xchg
mov
lahf
insl
adc
mov
mov
sahf
test
js
imul
fdivrl
push
sbbb
mov
fcmove
push
dec
hlt
jb
sub
pop
ret
loopne
int
mov
jo
fwait
xor
leave
pushf
int
in
mov
addr16
xor
sbbb
std
imul
aaa
xchg
dec
iret
pop
mov
and
sti
cmpb
stos
sbb
cmp
rcrb
jmp
js
mov
sub
andl
mov
int3
sub
cmp
or
mov
lcall
sbb
aam
inc
xor
sub
rcr
push
nop
sub
and
pushf
jae
or
xor
xchg
xchg
or
repnz
pusha
subl
ret
mov
push
lahf
mov
in
clc
orl
test
neg
cld
in
scas
mov
pop
xor
push
dec
out
negl
push
outsb
mov
aad
cltd
cmc
out
outsb
lds
cmc
mov
pop
mov
push
inc
push
mov
call
pop
arpl
inc
adc
stos
outsl
sti
test
mov
insb
popf
cmp
xchg
scas
cld
mov
mov
aaa
and
int
adc
push
das
imul
sub
iret
in
ret
fmuls
aas
les
rol
int3
hlt
in
pop
or
inc
sub
mov
mov
dec
lahf
and
loope
or
xchg
dec
sarb
iret
inc
push
shlb
je
cmp
js
sbbl
xchg
fists
adc
imul
pop
mov
mov
incb
aad
mov
jnp
sbb
push
pop
and
mov
xstore-rng
cmpsl
test
pop
incl
xchg
stos
sbb
jp
nop
push
mov
imul
lods
xor
cwtl
push
bound
sbb
bound
mov
mov
cltd
test
pop
adc
mov
test
fwait
gs
ljmp
jge
mov
mov
dec
mov
js
lahf
jecxz
ret
negb
popa
pop
cmp
scas
ret
xor
stos
cmp
jl
dec
mov
fst
xor
lret
jle
adc
mov
sub
enter
ret
scas
leave
push
inc
dec
mov
sub
jp
mov
xchg
cltd
out
mov
push
punpckhwd
mov
pop
mov
fs
xchg
repz
add
or
cmp
pop
negl
cmp
mov
sub
mov
jp
mov
cld
mov
pop
pop
insl
mov
mov
pop
scas
mov
mov
mov
cltd
pinsrw
mov
mov
mov
addl
jg
or
lock
xchg
xchg
ret
in
loope
and
xchg
jecxz
or
push
aas
cmpl
loope
push
xchg
inc
mov
mov
mov
aam
jg
cmp
out
daa
adc
lock
add
pop
gs
dec
imul
out
inc
xor
xor
mov
fnstsw
gs
sbb
stos
fidivrl
sbb
jne,pt
dec
cmpsl
mov
cmpsl
enter
sbb
pop
icebp
push
mov
ficoms
test
shlb
or
mov
push
pop
mov
fs
cmpsb
jp
mov
cmp
and
addr16
pop
mov
cmpsb
pop
pop
push
sub
push
int
sti
nop
gs
out
movsl
test
push
test
sbb
aas
fs
rcrb
cmp
aad
loope
popf
inc
jl
push
mov
aaa
mov
mulb
xor
pushf
push
repnz
jge
mov
fstps
mov
pop
jmp
call
inc
test
movsl
cmp
and
xchg
js
pushf
xor
and
dec
popf
test
cmpsb
nop
ljmp
xor
test
sub
daa
fdivp
jmp
mov
outsl
into
stc
jl
aaa
outsl
pop
xor
outsl
xchg
int3
fmull
cltd
xor
fldl
push
pop
pop
pop
push
dec
lea
xor
test
cmpsb
jp
mov
or
xor
jle
mov
inc
mov
ret
cmp
mov
lcall
aad
mov
and
inc
sub
push
or
mov
imul
mov
lcall
loop
cltd
xchg
jns
mov
xor
pushf
in
cmp
daa
inc
aad
daa
aas
fs
dec
mov
scas
sub
stos
add
in
ret
or
das
jns
ss
insb
fcmovnu
icebp
test
cs
insb
jnp
pushf
jb
add
xchg
sbb
xor
push
jne
push
and
dec
push
xchg
movsb
hlt
xchg
push
cmpb
stos
enter
mov
xor
lock
clc
add
mov
pop
jae
movsl
insb
rorl
rdtsc
andb
leave
push
xchg
cwtl
xchg
lahf
and
scas
aad
push
sbb
xchg
clc
jmp
add
add
pop
and
out
cli
sbb
scas
adc
iret
ja
test
mov
jg
call
scas
fisttpl
xorl
sbb
fiadds
repz
cwtl
jg
xchg
daa
dec
and
push
test
clc
adc
sbb
imul
xor
stos
xorl
test
jns
xor
cmp
push
test
loope
xchg
or
push
xor
sub
out
adc
push
push
bnd
or
and
into
xchg
adcl
pop
lds
inc
gs
inc
xlat
adc
inc
mov
jnp
arpl
stc
xchg
fwait
ds
pop
dec
xchg
bound
push
mov
mov
xchg
mov
fcomip
inc
cwtl
mov
mov
rcr
adc
pop
ss
popa
cmpsb
push
stc
push
mov
sbb
ficomps
pop
inc
cmp
mov
scas
and
out
shrl
jbe
cwtl
sarb
mov
mov
lcall
sub
into
push
push
andl
jge
int3
mov
test
mov
mov
pop
push
lret
rorb
test
fcoml
and
sbb
vphadduwq
clc
push
and
popw
cmp
adc
xchg
xchg
mov
inc
xchg
fiaddl
aam
lret
pop
inc
push
repnz
lret
or
pop
cltd
cs
addb
sarl
int
pop
shrl
xchg
or
push
push
leave
hlt
bound
or
stos
fdivr
das
dec
les
fstp
shl
xchg
jmp
pop
pop
pop
and
aam
scas
fwait
cmc
cwtl
adc
jmp
cs
xor
fisubs
cld
jb
mov
imul
jne
test
mov
icebp
lods
daa
test
pop
mov
jmp
or
shlb
icebp
sarb
xor
in
mov
test
cli
cmp
adc
scas
mov
test
cmp
mov
or
inc
mov
out
into
js
cmpsl
cmp
push
push
mov
mov
jns
aam
sbb
xlat
sub
insl
push
nop
sbb
dec
jmp
cmc
ljmp
test
mull
xor
cmp
jns
cmpsb
stos
lea
fwait
scas
adc
and
lret
cmp
inc
jl
outsl
outsb
outsb
ljmp
cli
inc
inc
xchg
fcompl
arpl
push
shlb
cmp
imulb
xor
pop
outsl
and
pop
fisttps
add
scas
je
int3
dec
mov
out
dec
mov
sbb
sub
cmp
dec
pop
pusha
aas
lea
jge
int3
mov
out
cli
jnp
popa
js
lds
adc
xchg
stc
sub
xor
sbb
and
cmpsl
cmp
shl
jno
clc
fwait
stos
lds
int3
jo
push
mov
pushl
or
sbb
jecxz
divl
imul
es
dec
fidivl
arpl
pushf
and
shr
xchg
dec
mov
nop
and
jo
inc
or
dec
push
enter
xchg
insb
mov
pop
lcall
out
cs
xchg
cmpsb
xchg
sbb
xchg
xlat
jb
and
adc
loop
and
fidivrs
jnp
popa
xor
scas
fnstenv
sti
mov
leave
push
hlt
or
popf
mov
add
arpl
and
je
and
rcrl
hlt
enter
push
pop
jne
inc
inc
fildl
cmp
jge
xchg
mov
leave
sbbb
roll
add
shrl
and
fs
or
shll
xchg
dec
pop
or
adc
cmp
sub
jnp
push
ljmp
adc
std
aad
imul
mov
push
ret
nop
xchg
rol
icebp
mov
popa
xchg
mov
xorb
in
xchg
sub
cld
dec
lcall
sbb
nop
add
sub
adc
fsubrs
jnp
jg
cmp
scas
out
mov
subl
lods
loopne
into
xor
sub
in
add
es
shlb
mov
nop
fs
lock
in
outsb
adc
adc
shlb
cli
ficoml
addr16
and
xor
out
scas
xor
ret
fbstp
jb
mov
sub
mov
test
popf
xchg
adc
pop
ds
mov
scas
loopne
or
in
add
fstpt
and
mov
sbb
out
adc
mov
jmp
repnz
xchg
add
mov
dec
or
jge
rol
inc
sti
addl
add
les
std
pop
lret
mov
pop
loop
jnp
cld
add
cwtl
rcll
or
push
call
fcmovnu
adc
lahf
aad
or
pop
cwtl
xor
jae
mov
and
jno
mov
lods
inc
mov
sub
in
xchg
scas
movsl
adc
int3
stos
fdiv
mov
in
outsl
cmp
pop
pop
push
xor
lahf
mov
pop
out
pop
aas
add
ljmp
xchg
fld
adc
rep
or
nop
mov
cld
ja
push
fsubrs
xchg
lods
rcrl
ficomps
fwait
sti
movsl
or
inc
mov
jecxz
sub
cmp
mov
in
cli
or
clc
mov
cltd
mov
mov
das
test
fidivrs
int
rcrl
ljmp
mov
shlb
cmp
cs
arpl
push
into
arpl
lahf
scas
sub
jl
loop
add
mov
sbb
cld
jns
xor
loope
pop
mov
cmc
add
jecxz
stos
mov
scas
movsb
mov
cmpb
ds
mov
push
mov
add
call
push
jnp
cwtl
xchg
int3
sahf
ficomps
jo
push
jo
xorb
sub
jp
xchg
idivb
pop
mov
pop
mov
push
scas
js
scas
addr16
mov
sub
arpl
xchg
cli
adc
adc
jno
out
mov
std
xor
pop
ss
pop
ss
pop
jmp
pop
xchg
and
shlb
leave
mov
ds
mov
inc
nop
fstpl
clc
sub
addr16
ja
gs
imul
mov
imul
push
pop
pop
lods
out
insl
insl
jno
mov
cs
mov
loop
pop
lds
femms
pop
push
imul
jo
ljmp
div
jne
adc
sub
add
aam
sub
cmpl
lret
fdivr
fstps
mov
push
jge
jbe
jmp
sub
sbb
pop
lock
push
add
mov
jno
pop
repnz
push
mov
xchg
leave
testl
iret
outsl
out
pusha
out
mov
jecxz
mov
jl
and
movsl
or
int3
jne
mov
inc
sub
cmp
orb
push
fwait
in
pop
imul
push
mov
fists
outsl
loopne
xchg
xor
test
mov
adc
test
pop
mulw
adc
sub
xchg
xchg
jle
mov
sbb
xor
mov
ret
xor
pusha
insl
pop
mov
flds
sbb
push
inc
pop
add
out
fldenv
fstpl
mov
jg
das
mov
sub
ja
add
test
test
mov
cs
push
sbb
scas
scas
add
paddsw
sbb
push
jge
push
je
push
imul
outsl
loope
cwtl
ja
and
mov
push
cmp
lcall
inc
lcall
cli
int3
repnz
cmp
sbb
push
mov
inc
adc
sbb
call
mov
or
ret
pop
ret
push
xchg
int
ret
mov
or
xor
add
bound
mov
inc
xor
or
nop
gs
xor
ret
std
test
cmp
add
and
outsb
xor
xchg
in
out
pop
aas
outsb
xor
js
inc
outsl
test
add
xor
sbb
push
adc
lods
xchg
adc
std
in
jne
jl
insb
std
scas
std
orb
cmp
xchg
mov
or
push
test
lret
mov
xchg
std
scas
std
adcb
daa
xor
jge
out
cwtl
cmp
mov
and
pop
pop
mov
mov
jnp
adcb
stos
dec
sti
mov
mov
xchg
fs
xor
sbb
es
aas
scas
ljmp
pop
mov
rep
lahf
test
out
js
nop
mov
sub
push
das
or
add
jp
sti
pop
sbb
out
dec
adc
out
aas
or
push
xor
cmp
bound
mov
popa
fnstsw
cmp
sbb
ret
in
push
pushf
in
xlat
jae
notb
pop
fwait
dec
sub
mov
imul
mov
in
sub
sbb
lds
lret
jne
ljmp
sub
pop
adc
sbb
cmp
xor
sub
mov
data16
aaa
nop
push
mov
jne
xchg
add
mov
xor
loopne
mov
lret
xchg
pop
push
enter
or
int
in
add
mov
in
inc
xor
jmp
cmc
mov
jo
xor
dec
jg
jecxz
push
lcall
testl
mov
insb
xchg
lcall
mov
repz
pop
push
mov
aad
push
bnd
push
shll
bound
sub
mov
cmp
enterw
mov
xchg
cs
sub
push
loopne
mov
jae
add
aaa
pushf
jae
jae
sbb
mov
or
or
mov
mov
sahf
popf
fbstp
mov
cmp
out
pop
lock
inc
dec
mov
test
inc
scas
pushf
std
inc
xor
loope
stos
gs
stos
mov
xchg
pushf
pushf
stos
sbb
into
shrb
adc
mov
and
lret
dec
arpl
jp
cmp
dec
stos
dec
imul
mov
sahf
pop
jne
adc
leave
sub
je
dec
mov
repnz
data16
push
fwait
test
loopne
fisttpll
push
insl
dec
imull
and
mov
pop
sbb
lods
mov
sub
sahf
cmc
movsb
out
fs
arpl
iret
divl
push
mov
dec
clc
mov
push
loopne
pop
in
adc
lods
mov
cmpsw
jo
xchg
or
push
xchg
push
ffree
iret
sbb
pop
sbb
inc
clc
dec
mov
stos
xor
aaa
mov
in
jle
cs
add
mov
pop
push
xor
mov
add
outsl
adc
movsb
rolb
xchg
and
rcr
adc
jbe
push
and
pop
xorb
frstor
test
mov
addl
iret
push
and
testl
dec
pusha
test
je
adc
jle
rcrl
loope
push
sbb
inc
sbb
scas
insl
jo
sub
sub
les
push
xor
mov
ljmp
pop
arpl
sub
shlb
inc
push
int3
fnstcw
or
and
call
rcrb
inc
dec
xlat
xchg
pusha
or
fimull
pushf
sub
add
rcrl
add
and
push
negb
repnz
stos
inc
sub
inc
fldl
ss
dec
xchg
xor
add
push
insb
stc
mov
in
cmp
hlt
iret
adc
jae
aad
mov
xor
in
cld
out
push
inc
pop
dec
dec
lret
or
xchg
xlat
xor
jae
lcall
adc
xorl
fisttpl
inc
and
test
jae
hlt
lods
test
dec
push
inc
lods
xlat
mov
iret
xchg
add
fstpt
out
jmp
add
test
pop
ja
lret
pop
dec
mov
or
ljmp
xor
sub
dec
or
xor
dec
lret
xor
mov
lods
insl
xor
inc
fimuls
test
aas
jmp
add
and
insl
jecxz
adc
cld
mov
xlat
push
pusha
adc
fcoml
dec
out
jo
cmp
popf
repnz
popa
shrl
jle
inc
mov
or
adc
pop
loope
dec
out
and
xor
cmp
neg
out
bound
les
push
jle
mov
push
jno
scas
js
jae
pusha
push
jns
sub
test
cld
sti
cli
das
insl
mov
sbb
es
rclb
push
pushl
mov
xchg
mov
shrb
or
sti
jno
out
mov
insb
push
add
sbb
sub
setns
push
add
add
mov
pop
sbb
xlat
cmpsl
mov
out
ret
add
test
stc
fstps
aaa
stos
sbb
dec
and
cmp
pop
imul
cmp
inc
aas
lret
popa
mov
inc
add
sub
test
enter
pop
cli
mov
fwait
mov
dec
in
fldcw
sub
lahf
cmc
push
xchg
fwait
nop
push
or
mov
inc
and
inc
leave
adc
outsb
stos
xchg
dec
es
imul
mov
mov
clc
mov
fnstsw
pop
push
mov
mov
mov
sub
mov
mov
jne
sbb
addl
fistpll
mov
adc
push
out
pushl
pop
jle
adc
mov
popa
push
rcll
jl
bound
add
mov
stos
sbb
fisubl
jle
rcrl
inc
mov
jnp
negb
mov
movsl
in
mov
and
cmpb
xor
push
jg
data16
pusha
cmp
repnz
fidivrl
dec
jb
decb
in
mov
inc
push
shrl
jae
xor
shll
jno
jle
lock
int
inc
mov
lock
xchg
inc
stos
movsl
mov
xchg
mov
mov
or
dec
aas
test
mov
int3
jbe
call
jae
out
jmp
cltd
push
sti
xor
push
ss
gs
push
mov
stos
cltd
xchg
out
cmp
fimuls
call
push
adc
sub
arpl
cmp
in
cmc
fxch
pop
cmpsl
out
popf
xchg
negl
jmp
insl
fisttps
popa
shlb
mov
imul
dec
cltd
in
out
sub
lods
cmp
push
lock
icebp
xor
lret
aas
lods
inc
jno
lock
xchg
ja
jo
rcr
push
inc
insb
out
out
inc
cmc
out
xor
scas
icebp
adc
idivb
cmp
lock
mov
and
les
mov
jle
push
stc
aam
leave
and
testl
test
mov
leave
push
stos
sub
lea
clc
jle
mov
leave
add
mov
mov
std
and
orl
aas
and
ljmp
lret
adc
pushf
xchg
and
xchg
push
xchg
push
cld
cs
aaa
shll
sti
adc
inc
mov
lcall
daa
cmp
pop
sbb
mov
or
cmpsb
xchg
inc
jns
fcom
in
aam
out
cltd
clc
mov
xor
xor
mov
cmc
loopne
sub
inc
mov
mov
xchg
test
lock
xor
sbb
or
stos
dec
neg
xchg
mov
fcoml
jl
ds
gs
inc
lds
inc
mov
es
jle
mov
cmp
outsl
out
out
xor
scas
pop
push
jnp
sbb
sub
std
test
cmp
aaa
loope
xchg
dec
movsb
push
jle
stos
pop
mov
lods
adcb
xlat
mov
mov
shrl
sbb
inc
std
orl
sahf
fisubrs
lock
sti
xlat
rclb
sub
inc
pop
jge
mov
test
xchg
inc
jbe
stos
jo
daa
roll
xchg
jl
sub
les
es
push
adc
loopne
lods
cmp
decl
jle
xor
sbb
pop
in
sarl
push
shrl
leave
call
test
inc
jne
lds
cs
iret
jp
mov
mov
testb
jnp
mov
gs
and
mov
pushf
bound
jmp
aaa
adc
cmp
xlat
sbbl
sub
inc
xchg
dec
sahf
aad
xorl
xchg
insl
rcl
neg
jle
mov
xchg
inc
mov
mov
pushf
jg
jg
pop
ret
jge
jg
adc
je
xchg
aaa
xor
das
mov
imul
sti
cmc
xor
xchg
imul
movsl
insb
stos
lahf
dec
shlb
cmp
loope
and
lcall
js
imul
mov
pop
sti
sub
fsts
cmp
xchg
test
shlb
mov
das
mov
rorb
or
mov
adc
dec
cmp
or
pop
pop
adc
addb
scas
outsl
out
and
or
jb
pop
pop
pop
jno
cltd
test
add
inc
stos
add
lea
ror
cltd
mov
aam
xlat
xlat
and
xacquire
cmp
ja
jne
mov
jg
push
outsl
in
xor
mov
outsl
xchg
adc
dec
stc
repz
pusha
and
xlat
mov
adc
lcall
dec
cld
fmulp
push
dec
jae
pop
inc
mov
jp
es
push
sbb
inc
pop
bound
mov
inc
push
cmp
outsb
outsb
test
outsb
es
add
insb
lcall
cmp
mov
enter
movntq
inc
xor
aas
mov
negl
scas
mov
daa
adc
sub
cs
outsb
mov
add
mov
inc
scas
sub
in
mov
and
in
loope
pop
scas
or
lods
shll
xlat
movsl
cmp
sub
lock
es
stos
push
and
push
test
jge
xor
cltd
hlt
jae
ret
in
in
xchg
dec
mov
mov
xchg
pusha
xor
inc
call
xchg
mov
xor
fwait
mov
rcrl
andb
xchg
cli
or
inc
loop
js
dec
jecxz
lcall
call
cmp
gs
pop
les
stc
repnz
fwait
lcall
loop
cltd
stos
lcall
xor
out
jo
inc
sbb
mov
xor
jge
xchg
sbb
push
cli
scas
ret
repz
xchg
cmc
pop
pop
icebp
bound
cmp
sbb
out
or
stos
repz
xchg
lods
cmpsb
ljmp
mov
or
es
movsl
cmpsl
sahf
int3
mov
aad
insb
imul
jb
popf
sub
pop
mov
cmpsl
int
mov
mov
or
out
adc
push
call
test
ljmp
jp
popa
adc
xor
movsb
test
cmp
push
sarl
jno
and
out
in
xorb
dec
inc
pop
jbe
ret
cmp
add
mov
jle
xchg
and
mov
jg
or
out
add
ret
outsl
aaa
push
and
lods
add
pushf
int
cmp
xchg
lods
imul
add
xchg
roll
test
roll
dec
jmp
mov
jmp
nop
adc
mov
xchg
sbb
xor
out
cs
mov
xor
jno
sbb
lods
in
orb
std
fisubrs
repz
out
sub
xor
add
xor
xor
js
xor
addr16
xchg
adc
xor
or
xchg
in
orl
mov
jb
xchg
xchg
imul
sbb
fwait
jns
inc
lods
push
mov
xchg
pop
dec
ljmp
sub
movsb
loope
sub
icebp
test
inc
test
and
test
mov
add
imul
mov
mov
add
add
and
outsl
aam
cmp
sti
lret
pop
insb
ljmp
in
das
int
cmp
dec
xchg
sbb
xchg
div
push
pop
push
iret
sbb
cld
fdivr
sub
xor
pop
cli
mov
mov
or
iret
es
cmc
call
jle
adc
lcall
sub
pushf
shlb
mov
lcall
or
dec
loope
cli
pop
sbb
fdiv
dec
xchg
rolb
push
ljmp
jecxz
pusha
shll
aad
xchg
inc
jp
nop
imul
cmp
mov
add
and
add
mov
push
add
sbb
lcall
adc
cltd
in
inc
mull
daa
fisubs
rorb
cmc
add
pop
cmp
sti
ret
mov
into
daa
xlat
mov
fistps
ja
lret
jg
lret
imul
cmpsl
fsubr
xchg
jl
mov
mov
adc
loop
sahf
enter
int3
int
push
pop
mov
or
sub
xchg
test
cmp
or
mov
movsb
call
out
pop
cwtl
push
mov
lods
xor
out
call
cmp
dec
loope
cmp
rcr
cwtl
pop
jl
jbe
xchg
test
test
ret
lods
dec
bound
out
inc
lcall
push
outsb
repz
out
push
sti
out
jecxz
lret
jne
inc
adc
mov
sbb
testb
jp
xchg
cli
ficoms
fistps
loopne
lea
in
and
sbb
sub
xor
pop
inc
scas
lret
xchg
inc
pop
cli
daa
bt
push
fmulp
push
pop
int3
pop
cmp
xchg
pop
lds
cmp
movb
test
stos
jp
aam
pop
fcoml
adc
and
mov
mov
fildll
mov
and
jo
inc
push
or
inc
mov
or
or
xchg
pop
pop
fsubr
std
addb
ret
mov
jg
bound
addl
bound
mov
imul
and
in
jl
add
mov
jp
mov
sub
adc
int3
pop
mov
pop
icebp
iret
nop
pop
shrb
xor
jno
fildl
mov
push
xchg
or
mov
call
mov
out
sbb
inc
push
dec
xorl
pop
lods
sarb
fsubl
inc
dec
sbb
push
outsl
nop
cmp
xchg
dec
cld
push
shlb
mov
shll
pop
cmpl
cmp
fwait
mul
lret
and
mov
rorl
mov
push
mov
loope
pop
push
or
out
shrb
adc
sub
xchg
inc
in
pop
inc
inc
repz
shll
pop
jl
arpl
and
mov
dec
jle
cmp
inc
in
cmp
add
adc
sub
iret
push
ja
jns
fsubl
icebp
cmp
sti
outsl
mov
and
dec
mov
xchg
call
mov
dec
inc
ljmp
or
xchg
jecxz
je
scas
lock
xorl
push
clc
push
jl
sti
xor
pop
add
hlt
or
cmpsb
mov
xor
dec
sbb
pop
ret
in
xor
test
out
mov
shrb
adc
xchg
xor
sahf
jle
cmpsl
sbb
cmp
adc
inc
mov
clc
cmc
xor
jo
sbb
in
daa
ss
mov
lods
push
push
pop
mov
xchg
jl
enter
seta
orl
pop
dec
jle
mov
popl
cld
mov
aad
push
pop
movsl
mov
push
js
mov
outsl
xchg
js
sbb
jmp
cmp
sub
pop
in
cmp
mov
push
pusha
cmp
push
push
mov
sbb
lock
push
ret
pop
repz
repnz
push
mov
aaa
sbbb
push
adc
jge
rcl
fs
xchg
xchg
add
push
pop
loopne
or
mov
or
or
imul
inc
mov
push
decl
cmp
loopne
pop
aam
jnp
jno
cmp
mov
push
sar
outsb
in
out
bound
jecxz
loopne
test
je
jnp
in
push
push
lods
push
or
sub
ret
scas
mov
cmp
lret
or
push
lret
mov
xor
iret
xchg
nop
pop
out
and
jbe
aad
call
mov
inc
or
mov
stc
cltd
imul
aaa
cmp
iret
loop
pop
jmp
pusha
inc
nop
cmp
js
or
jp
loop
ficoms
andb
sbb
sbb
sub
xchg
add
ret
divl
sbb
pop
pop
faddl
xchg
lods
aaa
xchg
pop
pop
test
das
mov
jmp
into
outsl
mov
enter
das
mov
imul
fcomps
insl
fcmovne
push
das
xchg
jns
inc
jb
mov
test
cmpsb
int
fs
addl
lcall
cld
xchg
mov
pusha
sbb
fisubl
scas
in
xchg
adc
orb
es
insb
xlat
inc
sub
inc
nop
pop
sbb
dec
pop
mov
pusha
int3
je
mov
std
jle
dec
sub
mov
mov
mov
xor
cli
cmp
inc
imul
push
fmul
insl
lcall
movsl
aas
rcrb
adc
and
inc
dec
fisubs
lcall
imul
cs
mov
push
repnz
mov
lock
js
sahf
neg
push
mov
or
out
out
lret
mov
push
push
jp
cmc
ljmp
popf
inc
dec
cmp
mov
cmpl
mov
lahf
sub
xchg
fs
cmpl
rcr
xchg
enter
into
sub
xor
mov
cld
es
mov
adc
push
fsubs
addr16
add
dec
lock
in
pop
jl
mov
nop
inc
mov
push
inc
mov
xchg
inc
mov
add
test
push
divb
ljmp
push
ret
outsb
pop
sub
push
add
dec
call
lret
jbe
lret
ret
pop
aas
xchg
loope
jne
daa
sub
sbb
lods
mov
sub
jge
add
jo
dec
mov
ret
test
fwait
sahf
add
mov
inc
push
push
pop
lret
fimull
imul
stos
pushl
jecxz
xor
mov
leave
hlt
movsb
xchg
mov
sbb
movsl
fidivrs
out
test
mov
rcrl
inc
mov
adc
test
iret
mov
push
vminpd
movsb
aas
mov
push
xor
in
roll
add
jb
mov
loope
xorl
add
fimuls
test
inc
into
mov
add
jne
mov
push
cmp
xor
rclb
in
add
ja
and
and
stc
mov
xor
sbb
or
out
call
sar
mov
cmp
sbb
add
sub
sub
aas
repz
pop
add
lods
andl
cmc
jle
scas
and
outsl
jnp
push
xor
xchg
push
jp
pusha
in
mov
mov
sbb
push
xchg
pop
jmp
cs
out
push
lret
and
adc
pop
jp
ret
in
or
ss
sarb
push
pop
gs
pop
mov
push
lea
push
inc
nop
call
add
sub
pop
mov
aas
or
cmp
inc
mov
and
push
mov
out
pusha
dec
in
ljmp
fnsave
mov
or
push
and
fwait
test
mov
iret
rorb
out
cmp
shrl
dec
mov
cli
jecxz
add
out
lods
in
test
ret
mov
fdivrs
jecxz
rolb
addb
and
mov
xchg
ljmp
mov
dec
pusha
je
popa
xchg
push
scas
mov
insl
stos
lods
shll
cmc
out
push
push
rcrb
lahf
inc
in
dec
jecxz
dec
pop
pop
mov
push
or
mov
mov
and
stos
xchg
inc
andl
ljmp
adc
cmc
std
sub
inc
xchg
loopne
mov
js
dec
cwtl
jae
cwtl
mov
pop
and
shlb
fstpt
in
and
aaa
test
aaa
push
adc
call
icebp
sub
add
loopne
mov
lret
shlb
xor
jp
push
dec
sti
jbe
jecxz
cwtl
pop
insl
jbe
xor
push
xchg
pop
repz
cmp
aam
sbb
data16
xor
pusha
push
hlt
mov
adc
icebp
jecxz
aam
cli
adcb
sti
pop
add
inc
daa
dec
gs
and
pusha
into
cwtl
cld
pop
test
mov
push
xor
pushf
mov
sbb
mov
push
incb
or
aam
inc
xor
pop
in
add
jl,pt
imul
cmpsb
mov
faddl
mov
cmpsl
mov
in
inc
push
mov
in
xlat
or
or
push
loope
inc
cld
shrb
in
push
and
and
xchg
rclb
lret
sbb
xor
repz
std
pusha
mov
addr16
mov
mov
adc
icebp
jecxz
aam
mov
push
filds
xchg
lret
roll
dec
nop
mov
jae
sbb
aaa
lret
lahf
cmpsl
or
scas
dec
popa
iret
fprem1
es
mov
fmull
sbbb
ljmp
outsl
bound
jl
push
sbb
push
xchg
cmp
or
mov
mov
sbb
push
and
ja
ljmp
sub
adcl
repnz
pop
movb
adc
test
aas
add
mov
aas
xchg
xchg
int
pusha
cld
xchg
aaa
mov
pop
xor
pop
sub
ljmp
jns
push
push
jno
dec
sbb
paddsw
cmp
xchg
adc
fisubl
int3
fwait
mov
stc
adc
orl
sub
lods
xchg
xchg
fidivs
push
test
ja
fwait
cmp
repnz
ljmp
push
out
lds
dec
imul
sbb
loopne
popf
push
in
push
add
outsb
dec
popa
arpl
mov
push
or
cltd
push
lock
shlb
mov
pop
and
iret
sbb
ret
dec
clc
into
pop
stos
sbb
dec
fwait
lods
xchg
test
add
and
outsw
and
outsl
fwait
push
mov
dec
xchg
adc
sbb
arpl
and
push
psrad
sbb
xchg
testb
popaw
clc
push
shrl
sub
imul
xchg
xchg
mov
or
and
mov
sub
ja
stos
sahf
inc
xchg
pop
mov
mov
pop
dec
fsubl
jl
in
popf
repnz
jne
and
call
mov
movsb
jge
aad
mov
test
and
fwait
mov
sub
push
pop
inc
jno
hlt
mov
or
mov
push
lret
jp
xchg
aas
pop
xchg
mov
and
jb
mov
sbb
sbb
pushl
dec
pop
push
fsubr
scas
dec
lahf
daa
add
and
fistl
xor
cmpsl
mov
mov
es
mov
inc
aas
outsb
mov
mov
xlat
jl
nop
mov
je
or
push
mov
push
jae
inc
or
dec
test
out
sarb
popa
movl
testl
subl
mov
adc
and
sahf
jle
jne
hlt
rorb
sub
push
adc
loop
inc
data16
push
orb
daa
cwtl
shl
out
imul
pushf
dec
lret
mov
hlt
aad
jmp
mov
subb
jo
dec
insl
cmc
lcall
arpl
in
int
add
adc
mov
mov
cmp
call
outsb
insb
add
mov
inc
pop
loope
dec
leave
mov
out
rcrl
in
lahf
call
repnz
mov
jg
cmpsb
lret
xchg
test
test
mov
and
cmc
pop
xor
fisttps
cmp
jge
rolb
xchg
pop
pop
test
je
and
mov
jno
mov
push
fsubrs
ds
sbb
pop
sarb
aam
mov
mov
pop
aaa
jp
clc
inc
mov
in
jl
mov
aam
jo
div
cmp
push
inc
jmp
lock
repz
test
or
mov
inc
xchg
pmulhuw
lret
shl
loope
andl
ja
aaa
dec
add
scas
xchg
cmp
sub
fstl
ss
mov
lock
js
mov
out
push
popf
mov
insb
sahf
xor
sub
inc
jmp
jge
jg
ud2
or
lret
shlb
insb
mov
mov
or
sub
push
mov
pop
jle
xchg
add
repz
sub
sbb
mov
push
xor
out
and
popf
sbb
aaa
sbb
mov
jmp
rcr
movsb
arpl
xor
stos
inc
pop
xchg
fwait
stos
dec
inc
nop
outsl
and
sti
mov
xchg
jno
imul
subl
in
sbb
or
jae
adc
pop
jp
or
icebp
mov
outsl
fs
cltd
test
inc
movsb
pop
nop
adc
pushf
mov
std
pop
and
dec
sbb
fiaddl
and
sti
ret
ljmp
lahf
call
xchg
imul
ficoml
sub
adcb
pop
jle
lret
push
ds
ret
or
loope
mov
cmp
xchg
or
jmp
stos
xchg
dec
or
cmpb
push
stos
cmpsl
fldt
pop
dec
cmp
jl
into
jle
ficompl
sbb
pop
push
adc
jbe
ja
aam
in
sarb
mov
fidivl
pop
lahf
mov
mov
stos
jge
int
addr16
mov
and
lock
fwait
lcall
push
xor
sub
imul
dec
data16
popa
cwtl
in
add
sbb
xchg
sub
and
jno
add
test
xchg
inc
mov
movsl
leave
sbb
add
int
cwtl
imul
jg
leave
testb
inc
mov
jg
push
dec
mov
push
cli
xor
push
shlb
pop
loope
push
mov
jl
loop
and
xchg
pop
mov
pop
insb
call
xor
rcrl
cmpsl
adc
in
fists
sarb
and
flds
mov
mov
test
sub
mov
aad
mov
notb
mov
xchg
sbb
lods
gs
fdivrs
fdivrp
mov
orb
je
jb
test
aam
and
cld
push
jb
push
sub
jbe
aas
enter
push
mov
xchg
sbb
mov
into
cmp
dec
rorl
sbb
test
pop
push
loop
decl
push
dec
aam
push
inc
mov
outsl
adc
inc
out
aam
adc
cld
in
outsb
jge
sub
mov
shrl
dec
dec
imul
gs
push
cmpsb
test
into
stos
push
xor
js
inc
loop
mov
inc
into
lods
jns
and
rol
add
mov
mov
lahf
xor
dec
and
std
daa
push
sbb
rorl
and
cwtl
hlt
fimuls
dec
push
pop
call
sub
mov
add
call
cmp
insb
jo
cmp
das
mov
push
xchg
test
ja
iret
pushf
push
lea
aam
and
dec
inc
and
and
idivl
pushf
lea
test
dec
insl
inc
xchg
mov
jl
ja
test
mov
rcrb
lahf
movsl
out
test
jecxz
out
cmp
adc
xchg
sahf
pop
push
movsl
les
jp
push
leave
fsts
aaa
cmp
xchg
cmp
cwtl
sbb
add
adc
fdivs
sub
sbb
addr16
lcall
sbb
mov
test
jno
jbe
or
and
pushf
cs
sub
test
mov
xchg
adc
and
pop
jle
adc
lcall
inc
pop
mov
xor
pop
test
adc
jns
cmc
ljmp
cld
jp
cmp
sbb
sti
and
push
push
out
movsb
je
mov
call
sub
and
std
fists
out
insb
out
lcall
inc
dec
xchg
xchg
dec
push
bound
sbb
inc
adc
int3
outsb
cmpsb
or
sbb
bound
arpl
add
outsl
test
mov
pop
jne
aas
in
adc
mov
mov
xchg
push
jle
loope
adc
inc
and
mov
test
je
or
inc
xchg
sub
arpl
fdivrp
xchg
out
jne
or
xchg
fiadds
xlat
xor
inc
fdivrs
stc
mov
and
das
mov
stos
pusha
repz
lahf
dec
fwait
ret
mov
ds
pop
punpckhdq
mov
in
and
out
mov
jp
loopne
popa
stos
stc
in
clc
push
push
xor
push
js
pop
std
push
mov
fwait
out
aaa
clc
pop
lock
push
nop
test
mov
pop
and
imul
and
inc
mov
enter
aaa
cmc
lret
jmp
test
pop
pop
pop
out
jnp
dec
or
inc
cli
dec
push
ret
dec
mov
pop
out
inc
ss
cmp
in
xchg
test
nop
mov
jae
jmp
std
push
cli
imul
aaa
leave
rcll
es
ret
sub
or
xor
xchg
int
cmp
xchg
push
inc
fwait
divl
in
sub
sbb
xchg
push
movsl
mov
inc
xor
lret
out
pop
repnz
push
insl
add
jns
lods
mov
rcl
pop
add
add
or
mov
roll
aam
leave
sbb
stc
stc
sub
cld
inc
ret
or
cmpsw
dec
mov
mov
xchg
push
dec
xchg
movsl
call
aam
mov
aad
pop
jno
xor
imulb
fbld
jb
ljmp
cmp
cwtl
test
aaa
fstps
xlat
shlb
jnp
and
mov
sub
push
and
jbe
xchg
scas
xor
pop
mov
ret
outsl
in
mov
dec
inc
lock
or
pop
jmp
mov
add
mov
aaa
ja
jecxz
xchg
lret
lods
mov
ja
push
cmp
cwtl
mov
stc
xchg
ljmp
sbb
insl
daa
xchg
stc
mov
inc
jmp
jg
aam
pop
mov
add
int3
push
dec
xor
ret
mov
out
mov
nop
test
or
lahf
iret
sahf
repnz
cld
mov
mov
out
sub
lods
lret
xchg
lea
jge
or
sbb
xchg
cltd
adc
movsb
in
or
lea
push
popa
inc
je
ret
sub
xchg
mov
jecxz
cmpsl
xchg
dec
loop
in
dec
jbe
pop
scas
jno
out
ljmp
jno
jae
outsl
sub
leave
call
mov
pop
mov
mov
ja
std
push
inc
arpl
dec
in
sbb
jae
cmpb
mov
rol
jne
jle
sbb
and
ret
add
insl
in
inc
fdivp
adc
push
cwtl
mov
jbe
xlat
push
cmpsl
push
mov
cmp
sbb
add
stc
aam
xchg
jns
pop
or
pop
xchg
add
in
cli
dec
inc
notl
mov
arpl
mov
mov
out
add
sti
rcrl
or
lahf
push
shufps
mov
add
std
insb
xchg
orl
lahf
sub
std
test
xchg
dec
xchg
idivb
mov
in
shlb
add
fldl
dec
or
and
adc
pop
adc
push
fbstp
loop
stc
xchg
or
fcmovu
mov
sub
pushf
sbb
aas
ljmp
xchg
jno
dec
mov
jae
stos
pop
mov
inc
repz
xor
in
jae
xor
push
jl
push
stos
test
push
add
push
sub
cmc
std
test
mov
lret
pop
scas
cwtl
lods
shlb
adc
mov
lcall
fs
mov
sbb
shlb
adc
xor
or
aas
xor
xor
enter
xchg
sbb
data16
xchg
ficoml
sahf
xchg
push
scas
push
rorl
jge,pn
mov
jecxz
fnsave
xlat
clc
push
repz
sub
cltd
mov
dec
sti
mov
cmp
mov
or
dec
test
pushf
out
in
scas
adc
in
sub
into
arpl
jae
sbb
mov
fs
lcall
outsl
sbb
adc
inc
sub
xor
or
sbb
lcall
xorb
mov
mov
pop
gs
fimuls
stos
scas
ljmp
push
out
out
push
xor
mov
jnp
in
jbe
out
loope
mov
mov
sti
sbbb
cmpsb
pop
add
mov
in
addb
mov
xchg
mov
out
sub
cmpsb
sti
pushf
sbb
fwait
add
gs
icebp
cs
sbb
pusha
mov
mull
lods
xchg
pushf
mov
sub
fwait
jmp
mov
cmp
sti
jne
loop
sub
dec
mov
push
ficompl
test
je
push
in
inc
rcll
adc
jmp
mov
or
lcall
rolb
or
and
in
push
movsb
mov
lahf
es
cmpsl
movsl
xor
gs
test
shrb
adcb
push
xor
sbb
insb
jg
std
and
movsb
add
ficompl
stc
hlt
and
sub
xchg
pop
jb
cmp
call
dec
xlat
lock
int3
xchg
leave
mov
xchg
sub
adc
mov
or
rcrb
pop
inc
cmpsb
jl
int3
mov
pop
add
push
call
xor
test
cmpsl
test
into
outsl
ds
mov
lock
fcoms
xchg
mov
mov
sarb
imul
cmc
mov
notb
jns
shll
loop
popf
inc
inc
pop
mov
outsb
mov
mov
loope
add
dec
mov
popl
repz
dec
push
or
nop
xchg
or
imul
or
pop
jmp
adc
dec
sbb
aad
mov
cmp
sbb
jne
dec
icebp
imul
mov
mov
shrb
xor
mov
pop
ficoml
xchg
insl
push
xchg
ret
add
pushf
ja
cmp
mov
popf
daa
imul
ret
adc
mov
pop
imul
pop
xchg
dec
dec
fs
in
push
sbb
cld
inc
xchg
jbe
leave
mov
xor
stos
iret
push
sub
fwait
dec
lret
sti
mov
loop
xchg
cmp
fdivrl
icebp
add
or
in
loopne
adc
and
divl
xor
sbb
jmp
pop
test
cmpsl
in
jbe
shl
fcoms
aas
fcomp
clc
mov
fistpl
pop
inc
ffree
xor
shlb
mov
push
sub
stc
ret
cs
lahf
push
lahf
mov
jmp
xchg
ss
cmp
aam
and
and
test
mov
cld
mov
ljmp
rcrl
push
or
fmull
jnp
in
add
mov
aad
mov
lods
test
jg
pop
add
mov
or
jg
in
bound
dec
lods
lret
aaa
mov
bound
add
sahf
gs
ror
cmp
dec
punpcklbw
lods
pop
dec
push
dec
mov
insb
movl
in
idivl
fcoml
movsl
test
pusha
aas
into
sbb
xchg
mov
mov
fidivs
pop
out
das
cmc
addb
cmp
jge
les
rorb
add
sbb
inc
xchg
jmp
jmp
push
outsb
icebp
das
aad
pop
adc
lods
add
push
insl
mov
xlat
pop
pop
inc
movl
repnz
add
js
test
loope
ret
lds
mov
pop
loop
jg
inc
xchg
xchg
sbb
jbe
es
out
adc
ds
lret
jnp
addr16
or
hlt
push
daa
dec
mov
sbb
loopne
mov
std
popa
jns
dec
xlat
xchg
xor
xchg
adc
insl
ss
loop
test
ffree
jecxz
sub
scas
xor
add
dec
jl
aas
mov
jo
pop
mov
mov
fstl
xor
daa
sub
ja
fldcw
loop
sbbl
dec
dec
or
ljmp
push
arpl
rcrb
sarb
lods
xorl
push
subl
adc
mov
xchg
jmp
dec
adc
add
jno
sbb
js
sbbl
cltd
fwait
or
push
dec
iret
pop
mov
pop
mov
mov
cmp
push
das
fldl
mov
cmp
mov
sbbl
movsl
jg
or
daa
call
pop
out
xlat
jbe
mov
js
cmp
xchg
lahf
push
sti
push
sub
or
mov
or
outsb
loopne
ss
pushl
daa
cmp
scas
pop
cmpsl
loope
mov
mov
sub
or
lret
mov
cs
movsl
stc
outsl
push
nop
fucom
xchg
jnp
popa
cmp
adc
push
mov
imul
or
dec
mov
push
dec
and
cld
nop
adc
in
ret
test
test
mov
shll
filds
fs
xchg
mov
es
dec
add
xchg
adc
pushf
test
sti
mov
lds
adc
out
add
popa
jo
je
xchg
sbb
push
loop
ds
xchg
repz
decb
std
or
out
xchg
cmp
sub
xlat
push
sbb
mov
lahf
or
sub
dec
lahf
aas
icebp
jl
dec
mov
mov
xchg
sbb
out
or
lods
decb
loope
mov
out
out
jle
inc
mov
push
jg
jnp
push
xor
std
popa
pop
jo
or
inc
addr16
pop
cmpsb
rorl
cmp
lea
lods
aad
jecxz
xchg
xchg
sbb
popl
das
pop
bound
arpl
inc
fcomip
out
mov
jo
xchg
mov
repz
or
stos
mov
movsb
enter
or
or
jno
sarb
inc
dec
das
hlt
jecxz
cmp
xor
ljmp
lret
repz
lds
pop
jns
fdivrl
jbe
lret
int
fisttps
divl
int
xor
jecxz
in
xchg
inc
xor
scas
cwtl
pushl
movsl
ret
cmp
mov
pushf
nop
xchg
xor
data16
lods
adc
int
mov
add
mov
pop
and
add
outsl
mov
loop
rolb
dec
or
mov
ljmp
pop
daa
je
imul
roll
push
or
jae
fcmovu
mov
pushf
data16
outsb
arpl
pop
fcmovnu
mov
jle
mov
mov
jne
fxch
outsb
xchg
sub
into
loope
xchg
aad
loope
mov
xorb
sbb
lock
push
aaa
sbb
dec
test
cwtl
push
or
inc
inc
mov
ffree
icebp
dec
fwait
inc
jge
and
xchg
pop
pop
lock
mov
push
jbe
mov
js
mov
test
aas
xchg
outsb
cmp
pop
and
sbb
sti
mov
cmp
jmp
outsl
add
adc
movaps
jno
or
dec
je
mov
push
rolb
ret
sbb
xchg
and
xlat
lea
mov
pop
cmp
arpl
subl
jbe
rcrb
mov
and
cs
lahf
dec
imul
xchg
mov
pop
mov
push
jge
mov
cmc
or
push
mov
rcrl
mov
fdivrl
adcb
lahf
mul
mov
cwtl
pusha
aas
into
sbb
xchg
pop
or
pop
mov
stc
and
xchg
pop
fisubrl
cmpsl
aam
lcall
enter
fbstp
adc
sarb
cld
fisubrs
xchg
hlt
push
lahf
lahf
inc
ror
push
in
mov
pop
popf
push
sub
pop
out
sbb
out
mov
xor
pop
shrl
nop
dec
out
pop
or
pusha
mov
test
jns
scas
xchg
cmovl
xor
dec
out
test
sti
rcrb
cmp
test
jne
push
js
gs
loopne
scas
lahf
mov
shlb
je
sahf
cmp
movsl
bnd
mov
scas
dec
test
dec
pop
sbb
iret
xchg
adcl
and
leave
stos
lea
mov
fisttpll
or
pop
insl
fs
ret
mov
and
movsl
dec
xchg
mov
stc
inc
test
pop
jns
push
orb
pusha
call
js
pusha
dec
push
xor
mov
imul
fcompp
call
and
insb
sbb
add
xor
pop
es
cmp
aad
dec
stc
cmp
jo
fnstsw
and
lods
pop
mov
mov
leave
cmp
inc
lret
lret
mov
hlt
cmp
sub
rcrb
int3
jo
or
adc
mov
fisubrs
repz
xlat
sbb
xchg
mov
pop
cmp
xlat
pop
addr16
push
sub
adc
test
mov
add
repnz
mov
pushf
test
imul
test
into
adc
andl
rorl
jb
das
jae
xchg
or
push
cmp
hlt
fcoms
mov
push
dec
add
shrb
loop
jle
push
fs
int
mov
test
sub
cltd
dec
nop
loop
lds
adc
mov
rcrb
mov
cmp
add
lret
xor
repnz
loop
xlat
add
call
mov
arpl
outsl
mov
mov
and
or
push
xchg
cmp
ret
dec
repz
nop
shl
push
subl
jb
imul
sub
in
sub
mov
fsubrl
mov
sbb
jmp
dec
inc
lcall
incb
cld
add
in
cmp
mov
jbe
xor
bound
mov
loop
scas
enter
mov
ljmp
adc
pusha
inc
inc
imul
je
inc
test
mov
outsl
pushf
or
push
xor
add
push
xor
cmp
outsl
mov
pop
or
lret
popa
cmp
pop
push
test
ja
sbb
dec
sub
pop
es
roll
pop
mov
mov
jbe
aam
out
rcrl
fistps
arpl
pop
addb
add
arpl
shlb
and
repnz
idivb
mov
data16
inc
int3
lret
dec
lods
sub
das
adc
dec
mov
xor
push
sbb
aam
mov
dec
repnz
nop
xor
enter
or
or
xchg
scas
mov
mov
ss
pop
xchg
xchg
jne
push
jle
ja
push
fnsave
into
out
adc
jg
popa
dec
inc
push
mov
mov
mov
mov
push
jmp
xchg
xchg
and
xor
cmp
in
dec
xor
mov
es
pushf
enter
mov
mov
jl
mov
mov
mov
adc
jge
aam
pop
fadds
mov
int3
icebp
mov
adc
gs
fs
aaa
jbe
sbb
pop
call
xchg
dec
sbb
in
jl
negb
push
jno
enter
das
inc
lret
je
nop
mov
and
stos
enter
lods
movsb
or
aad
ss
mov
insb
jecxz
mov
daa
stos
xchg
mov
add
mov
bnd
loop
testl
jmp
test
mov
test
int
andl
mov
enter
iret
xchg
iret
mov
imul
mov
data16
dec
mov
movsl
sub
cmpl
arpl
cmpsl
xor
movsl
ds
fdivs
jns
push
out
xchg
add
mov
mov
cmp
test
mov
push
jbe
xchg
xchg
mov
and
daa
xchg
push
imul
cmpsl
movsl
stos
jp
xor
xor
mov
cmp
add
ja
mov
cli
clc
in
xchg
or
mov
stos
div
nop
popw
data16
push
mov
iret
xlat
movsb
scas
mov
aad
sbb
mov
in
mov
dec
inc
inc
jno
xor
cmc
popf
jns
nop
mov
sub
pop
outsl
inc
xchg
sbb
cld
jo
setnp
lret
daa
jns
lcall
push
in
je
hlt
loop
out
movsl
xor
mov
dec
sbb
mov
hlt
insb
das
sub
std
jns
mov
xor
es
sub
jb
adc
mov
shll
gs
imul
mov
stc
inc
inc
pop
push
sbb
xor
retw
sub
jge
in
scas
push
mov
cltd
int3
sub
enter
xor
rcrb
sub
inc
jmp
sbb
iret
rolb
rclb
cmpsl
iret
daa
pop
aad
fldt
rcr
das
mov
cmpsl
pushf
aaa
cmp
cmp
push
pop
dec
inc
bound
outsb
enter
push
lock
subl
clc
frstor
push
sub
incl
stos
int
add
mov
pop
sahf
insl
xor
insl
pop
push
or
mov
cwtl
fisttpll
sti
gs
pop
loop
xchg
cmpl
rolb
inc
xchg
pop
inc
fsubl
inc
popf
mov
out
pmulhw
adc
pushw
xchg
pop
ret
imul
ds
xlat
idivl
pop
xchg
nop
push
mov
gs
cmp
aaa
sbb
or
lds
adc
aam
je
jno
popa
inc
add
test
cmc
idivb
and
xor
jnp
in
sbb
int
mov
sub
mov
jnp
push
cmp
ja
xchg
xor
mov
fcmovnbe
mov
gs
sahf
dec
sbb
add
pusha
ja
sarl
fs
dec
unpcklpd
cwtl
je
cwtl
rolb
xchg
pop
dec
push
and
int3
popa
cmpsl
nop
pop
loopne
fbstp
xor
or
fst
addl
cmp
mov
ret
out
loop
sub
idivl
or
into
pop
cmc
adc
enter
repnz
mov
stos
cmpsl
aaa
ss
rcl
sbb
das
scas
movsl
fwait
jecxz
jno
push
shlb
or
lea
mov
pop
mov
pusha
pop
cs
sub
push
enter
das
sub
dec
or
xor
add
in
or
push
add
testb
insb
jecxz
pop
mov
jnp
cli
repnz
ret
pop
sbb
ret
loopne
ret
fsubr
pop
mov
mov
shlb
clc
mov
das
mov
mov
clc
rorl
push
and
lret
lret
and
out
insl
idivb
les
push
adc
mov
cltd
push
xchg
out
add
hlt
xchg
and
shlb
xor
xchg
mov
push
jmp
subl
xchg
decl
inc
push
psubusw
and
xchg
call
mov
or
loop
sbb
xor
push
loope
fs
cmp
pop
or
xor
stos
cs
add
push
pop
fs
sbb
xor
js
mov
gs
xor
imulb
cs
mov
arpl
mov
aam
andl
pop
scas
and
sbbl
int
push
xchg
andb
std
mov
sub
jl
add
cmpb
mov
in
adc
mov
xor
cmp
es
aad
jne
lods
pop
stos
add
dec
jmp
js
pop
mov
ss
fsub
mov
sub
out
nop
xor
loopne
mov
cmp
dec
dec
sub
mov
xchg
stc
jne
mov
loopne
rcll
cmc
imul
cwtl
mov
push
daa
sub
fnsave
mov
push
movsb
inc
mov
pop
or
cmpsb
addr16
fprem1
push
test
jg
into
xchg
adc
rcrl
and
add
cmpsb
mov
nop
mov
cmp
data16
fisubrs
out
xor
addb
addr16
pop
sub
dec
nop
ljmp
scas
mov
test
xchg
cmp
mov
loopne
xlat
pop
pop
inc
movl
arpl
pop
fldenv
fdivr
test
sbb
popa
idivl
mov
fistl
mov
and
sub
jmp
jbe
xchg
cmp
lahf
movsl
xor
addr16
or
xchg
jle
movsl
aad
fstl
xchg
nop
add
hlt
daa
adc
and
push
outsb
mov
rclb
je
push
sub
sbb
push
xchg
imul
inc
hlt
sub
mov
cmp
mov
fstps
loopne
and
lock
jae
mov
in
fdivrl
pop
cltd
xor
shrl
dec
inc
test
push
and
adc
mov
in
and
pop
lcall
fwait
mov
cmp
sbb
xor
nop
jbe
adcb
ret
sub
sbb
pop
stos
test
mov
mov
or
pop
dec
push
xchg
hlt
in
les
mov
test
idivb
jae
mov
xchg
xor
movntq
addb
rorb
xchg
hlt
test
test
in
adcl
sbb
outsb
push
inc
pushf
and
pop
mov
sbb
add
jge
cmp
je
test
mov
sbb
scas
pop
adc
js
push
js
je
in
insb
aaa
push
aaa
push
es
out
adc
movsb
test
push
popl
insl
add
dec
or
push
mov
mov
ss
lods
mov
and
out
popa
loop
sub
adc
xor
inc
jne
push
test
adc
push
jl
xor
sbb
add
xorl
cmp
sbb
out
pusha
sbb
ret
sbb
aad
cmp
pop
cmpsb
or
test
pop
repz
jns
repz
popf
ret
dec
je
call
mov
loope
sub
into
mov
addb
push
cld
daa
repnz
cmpsl
cmp
sub
daa
test
cmp
int
mov
mov
adc
push
and
push
ret
test
enter
dec
stos
adc
sbb
pop
xchg
pop
cmc
cli
cs
mov
out
clc
adc
cld
push
sub
mov
push
add
adc
mov
sbbl
fnstenv
rclb
lahf
add
in
xchg
clc
pushf
sub
in
xchg
push
mov
dec
pop
pushf
mov
jno
cltd
pop
ret
lock
sbb
pushf
andl
sarb
mov
mov
mov
lret
scas
aas
cmp
cmp
pop
xor
jecxz
iret
push
dec
in
sub
jl
or
dec
test
pop
and
aas
xor
test
or
add
xchg
mov
push
sub
adc
lret
inc
mov
int
mov
fnstenv
lods
es
divb
inc
test
xchg
aam
dec
or
das
imul
dec
addr16
daa
fmull
mov
mov
sbb
ret
subl
sbb
jg
dec
push
push
mov
cmp
pop
adc
mov
test
mov
sub
ja
das
shlb
cmpsb
and
or
mov
es
dec
jl
loopne
ja
iret
shl
jecxz
imul
pop
mov
clc
call
sbb
pop
or
pop
aad
sbb
jmp
and
jae
rorl
adc
hlt
add
and
inc
divb
mov
jbe
leave
push
jne
inc
loop
inc
ds
or
jecxz
ja
adc
outsb
rcll
xchg
and
mov
mov
push
mov
xor
add
sbb
pop
hlt
out
mov
imul
in
mov
cmp
mov
pop
addl
lds
sbb
cmp
add
ljmp
aas
movsb
mov
mov
or
jg
inc
enter
lods
inc
xor
jge
jmp
mov
jne
adc
dec
inc
js
cmpsl
xor
xchg
cmpsb
ret
loopne
add
xorb
jns
nop
dec
pushf
test
clc
jo
mov
or
xchg
xchg
mov
mov
rcrb
fnsave
cmp
test
xor
out
sti
fiadds
sub
test
add
xchg
dec
out
sbb
dec
mov
xor
jb
sbb
sbb
or
movsl
pushf
out
jle
jnp
inc
add
test
jecxz
cmp
bound
shl
adc
cmp
psadbw
inc
mov
aam
cmpl
and
adc
lods
jmp
repnz
push
add
call
mov
popa
jne
shl
sbb
push
ror
jae
ja
scas
add
ja
mov
sbb
xchg
jp
sbb
xor
and
shlb
out
pop
arpl
stc
int3
subl
cli
and
movlps
aaa
int3
xchg
add
xchg
mov
inc
sti
ret
and
rcll
jmp
test
test
mov
mov
insl
daa
add
out
cmp
pop
fsubl
aaa
push
int
lret
add
daa
push
add
test
mov
inc
and
in
xor
xor
out
mov
dec
fidivrl
cmp
xor
xchg
and
jo
test
and
sub
jne
inc
or
add
stc
jb
sbb
jbe
mov
xchg
sbb
cmp
movsb
fisttps
adc
sbb
pushf
call
ret
push
dec
and
loopne
les
lods
sbb
fidivrl
pop
scas
mov
push
cmp
pushf
lea
xchg
mov
mov
notl
das
ds
data16
out
xchg
leave
cmp
test
lret
insb
dec
sbb
mov
repz
pop
imul
mov
sbb
jb
cwtl
push
or
popa
jne
mov
or
lret
dec
mov
add
fwait
stos
mov
mov
aas
xor
je
cmp
in
shlb
xlat
ljmp
jmp
lret
sbb
std
or
in
xchg
mov
in
inc
cwtl
movsl
sbb
stc
aam
lret
mov
popa
enter
ret
sahf
stc
mov
cmp
scas
packsswb
inc
mov
xor
pop
out
mov
insl
jo
cmp
sbb
dec
daa
enter
arpl
data16
fsubrs
add
inc
or
daa
sub
push
loope
inc
mov
shl
loopne
int
popf
mov
enter
jno
mov
in
aaa
loopne
and
adc
int
or
lock
jb
repz
jl
mov
orl
test
xlat
jo
mov
test
push
pop
ret
shrl
xchg
jg
test
test
add
int3
mov
into
lods
lahf
ud1
lds
icebp
and
mov
sub
adc
sbb
sete
ljmp
mov
ss
xor
test
int3
cld
in
inc
jle
xor
jno
mov
ret
mov
pop
stos
add
outsb
mov
mov
les
mov
or
push
adc
mov
es
mov
or
mov
lret
scas
imul
and
sub
outsb
push
mov
pop
sub
xor
mov
iret
jmp
adc
std
fcompl
sub
inc
sbb
xor
jmp
lods
inc
cmp
jge
fst
mov
mov
roll
mov
insl
ret
das
mov
fcmovnb
mov
repz
mov
add
iret
xchg
sbb
stos
out
pop
xchg
aam
dec
leave
stos
sbb
test
pop
ja
or
push
std
dec
enter
les
and
imul
leave
or
mov
in
or
lahf
and
and
aas
lret
jp
dec
pop
xchg
icebp
in
xchg
in
sbb
mov
adc
cmp
js
out
test
sub
rcll
push
lds
ret
mov
or
mov
mov
mov
in
enter
inc
icebp
popf
lret
nop
cmp
or
loop
mov
mov
jne
sub
mov
int3
movsb
dec
pop
xchg
scas
out
mov
rcrb
adc
mov
ljmp
sub
mov
lahf
lcall
mov
cs
outsb
outsb
mov
cmpsb
sbbb
cmp
mov
xor
mov
pop
pop
fisubrl
xor
jns
rcrl
xchg
push
orb
test
fiadds
cmpsb
jae
pop
fisubs
ss
sti
imul
rorl
sub
cmp
test
mov
inc
cmpsb
out
or
jge
sbb
in
pop
scas
lock
aas
adc
jp
inc
dec
adc
lahf
aaa
add
mov
cmp
lahf
adc
loope
repz
ja
cmp
fs
mov
cld
sub
les
imul
mov
fsts
pop
xchg
ret
mov
pop
les
inc
pop
rcrl
aaa
ljmp
stos
xor
insl
cmp
fs
push
xchg
and
mov
cmp
dec
jnp
ss
int3
sub
sbb
adc
and
fcomps
pop
loopne
add
jge
lcall
jae
xchg
xchg
ja
add
pushf
into
pop
mov
in
inc
xchg
in
push
in
dec
dec
js
test
mov
adc
shr
push
pop
pop
out
pop
mov
pop
popf
mov
flds
xor
ss
mov
imul
dec
inc
push
and
ja
adc
and
mov
les
inc
in
ret
lret
add
push
insb
sub
mov
cmp
mov
adc
push
push
jmp
mov
lret
inc
push
stos
inc
or
and
icebp
jno
pop
sub
fs
out
je
testb
or
movsl
mov
arpl
jns
xor
movsl
ret
xor
fwait
push
mov
lret
sbb
jl
dec
mov
mov
outsl
pop
pop
jmp
add
adc
inc
adc
jg
cmp
xchg
sahf
xchg
lods
loop
xchg
xchg
cs
xor
aam
xchg
jmp
dec
mov
rorb
xchg
pop
mov
push
push
cmp
add
xchg
mov
jp
add
pop
adc
sbb
sbb
xchg
out
leave
in
mov
insl
mov
lds
ret
pop
pop
scas
into
sbb
jmp
adc
ja
shrl
loope
inc
sbb
xor
xorb
je
ret
xchg
addr16
mov
xor
les
pusha
addl
inc
popf
pop
cmp
add
mov
cmp
ljmp
ret
jb
pop
push
inc
pop
push
xchg
xchg
ds
lret
cmp
in
push
or
push
icebp
and
js
xchg
lret
jp
cmp
add
add
sub
dec
xchg
pop
push
fbstp
xlat
add
test
ficomps
in
jnp
mov
pop
mov
in
and
sti
pushf
sub
jecxz
cmp
sub
sbb
and
xchg
das
xchg
scas
pop
lcall
mov
push
dec
addr16
repz
ss
xor
mov
inc
jecxz
cltd
lahf
rcll
mov
ret
xchg
ljmp
push
inc
imul
push
fwait
popa
outsb
popa
or
sbb
sbb
dec
pop
sbb
shl
lcall
mov
cmpsb
push
dec
pop
cwtl
pop
test
or
clc
sti
shlb
jne
cmp
loope
pop
shl
sub
sbb
adc
fucomi
nop
sbb
push
sahf
or
dec
mov
test
jecxz
inc
insl
mov
icebp
jne
test
mov
ret
mov
xor
lods
sub
and
or
ret
fs
fdivl
lock
or
test
imul
pop
movsl
fstl
and
js
cmpsl
xor
mov
mov
mov
mov
addb
movsb
push
iret
mov
dec
fists
or
movsl
push
in
aas
cmpsl
stos
stc
rolb
fsubr
bound
in
xchg
xchg
dec
aad
aas
lret
fsubrs
push
push
and
dec
inc
lahf
insl
enter
xor
and
sbb
mov
leave
sub
std
xchg
sahf
pusha
jle
and
mov
inc
test
aam
enter
mov
push
ror
add
movsb
sbb
sub
xchg
adc
xorl
mov
fisttpl
pop
push
sbb
popf
pop
pop
pop
popa
adc
fsub
cmovle
adc
aas
fadd
cli
test
ds
pop
fcmovu
mov
test
cmp
and
jp
sub
xchg
bound
leave
mov
dec
sahf
stos
lahf
and
into
mov
jae
jns
mov
and
gs
push
out
icebp
shrb
loopne
nop
mov
loope
sbbb
mov
loop
mov
out
sub
dec
lahf
out
or
cs
out
into
cmp
ja
mov
mov
add
dec
mov
test
adc
cwtl
mov
mov
jnp
or
sbb
ljmp
dec
cs
and
cli
popa
fnstenv
ficoms
scas
jecxz
fmull
sbb
xor
jne
cltd
popf
aaa
ficoml
or
pusha
pop
pop
or
push
or
adc
push
xlat
shrl
cmp
in
sbb
or
movsb
lds
mov
adc
sub
faddp
fs
push
in
shlb
push
xchg
push
das
scas
jae
aaa
add
xor
push
cmp
or
in
and
cld
aam
in
mov
call
ret
aaa
jecxz
push
mov
inc
adc
jb
sub
pop
push
pop
mov
adc
in
lds
mov
xor
into
cmpsl
or
adc
sbb
sbb
stc
es
out
popa
lods
jmp
mov
mov
aad
sbb
pop
decl
popf
push
xchg
cmpsl
fcomp
cmp
iret
inc
cltd
imul
arpl
hlt
aas
mov
imul
dec
filds
mov
mov
xor
in
out
xlat
push
shrl
push
mov
nop
loopne
repz
push
or
pop
xchg
mov
cwtl
out
cmp
jecxz
adc
sub
xor
or
jmp
out
es
popa
mov
loopne
xchg
pop
and
test
dec
push
out
mov
out
ds
inc
xchg
sub
nop
mov
test
xor
jns
pop
ljmp
pop
test
ss
test
sti
test
sbb
aas
or
sub
popa
mov
xchg
mov
test
jl
cmp
mov
pop
jp
add
push
jecxz
mov
sub
in
push
bound
push
out
orb
shll
dec
mov
cmp
dec
and
mov
xchg
push
std
mov
daa
or
push
in
cltd
mov
loope
lea
xor
push
scas
ret
inc
fildll
xchg
scas
or
ret
and
insl
add
fisubrl
dec
scas
pop
add
roll
repnz
out
push
loopne
and
dec
test
shr
out
out
inc
pop
movntps
pop
adc
rcrl
push
or
mov
xor
lds
cmpsl
push
cmp
adc
dec
outsl
and
shlb
sbb
out
push
lret
dec
lods
lret
loope
fstl
inc
xor
jne
sbb
shr
cmp
ror
push
add
push
out
repz
pop
adcl
addr16
bound
cmp
mov
test
push
popa
mov
push
xchg
or
fnstcw
cmp
add
dec
sub
les
mov
sub
sbb
jg
or
push
mov
xchg
cltd
lods
mov
jns
xchg
and
ret
arpl
inc
inc
push
xchg
inc
inc
push
sbb
sub
js
in
dec
imul
adc
mov
in
pop
lods
add
sti
lock
mov
in
shrb
xchg
shl
push
fldenv
lods
fbstp
pop
shrb
loop
hlt
xchg
push
aas
sub
dec
sub
xchg
and
das
mov
shl
icebp
jmp
pop
pusha
js
inc
jne
fistpll
pop
popf
push
data16
and
mov
or
and
sbb
ret
xchg
stc
jp
outsl
mov
xchg
jbe
repz
push
repnz
rcll
cmp
cmpsl
adc
xchg
mov
sbb
stc
das
cltd
push
sahf
inc
fneni(8087
dec
dec
sarl
popf
ss
lea
adc
out
xchg
mov
shrl
sbb
and
push
xchg
sub
and
dec
mov
imul
xchg
fbld
rcrb
in
pop
sbb
and
sbb
xorb
pop
push
testl
inc
mov
or
into
cmpsb
push
cli
push
fmull
pop
loop
jl
lcall
jns
push
ds
test
mov
loop
or
cmp
outsl
insl
sub
shl
aaa
stos
push
stos
push
lea
inc
loop
cmpsb
orl
push
fwait
popa
mov
add
and
pop
mov
dec
mov
movsb
test
rclb
mov
pop
or
adc
dec
mov
push
sub
stos
aam
mov
push
pushw
adc
and
jns
xchg
lods
jbe
sub
mov
js
xlat
add
push
mov
in
scas
cltd
rcrl
addb
cmpsb
push
xchg
sbbb
iret
xor
adc
shlb
or
push
leave
hlt
rorl
pusha
jne
xchg
dec
or
in
lret
add
inc
xor
mov
mov
std
sub
cmpl
loop
pop
xor
mov
negl
xchg
int
mov
push
push
outsl
jne
int
inc
divps
sub
jae
push
aad
imul
popf
fcoms
push
push
dec
fbstp
lret
clc
inc
push
jl
xchg
cmp
ja
inc
test
or
pop
roll
adc
sub
icebp
stos
fidivrl
test
xor
and
jmp
fcomp
sbb
sbb
mov
sbb
pushf
or
repnz
pushf
popa
jb
add
jno
ficoml
in
jle
cmp
dec
int3
and
pop
adc
push
jns
pop
iret
inc
jbe
sub
sbb
roll
sub
cmp
pusha
dec
cmp
clc
push
sbb
scas
sub
in
or
cmp
popf
mov
inc
dec
mov
mov
cmc
aas
and
out
fmull
ss
xlat
xchg
shr
pop
shrb
inc
cmp
jns
sbb
testb
pop
or
mov
lret
jmp
sub
in
push
adc
cmc
push
sti
or
adc
cmp
pop
cli
jl
xchg
and
addr16
push
dec
jae
pop
stos
mov
lods
sub
imul
leave
stos
xchg
xchg
gs
or
inc
dec
push
movsb
xlat
xchg
sbbb
int
mov
xor
fdivl
rcpps
sub
mov
je
lock
jl
stos
aas
into
movsb
sbb
xor
test
mov
enter
out
fsubrl
movsb
cmp
cmpsl
and
shrl
mov
mov
xchg
in
xchg
in
dec
adc
rcrl
out
ljmp
jmp
shlb
and
mov
sub
cltd
or
xlat
test
lret
shlb
xor
and
push
sub
pop
loop
xor
mov
pop
js
gs
lret
and
clc
popf
pop
mov
daa
stos
push
add
sub
xchg
lock
imul
test
stc
pop
mov
test
testl
mul
and
dec
inc
stc
test
ficoms
xor
push
xor
test
lods
and
sub
sahf
ss
mov
xchg
mov
cmovno
xchg
push
pop
push
call
push
add
sbb
sti
cli
mov
mov
push
xchg
stos
iret
lcall
je
push
lcall
and
lods
sar
out
addb
inc
jbe
cmp
repnz
sbb
outsl
das
or
ret
adc
xchg
ret
sub
cmp
xchg
cmp
push
jno
enter
mov
cs
xchg
mov
jo
sub
pop
mov
jo
sbb
push
add
movsl
adc
lcall
or
fists
and
cmp
int3
movsb
pushf
xor
xchg
mov
pop
xchg
jmp
clc
xor
test
and
inc
fiadds
fsubs
leave
jp
scas
or
in
push
or
dec
cmp
cmp
dec
xor
aam
push
insb
mov
adc
cmpsb
out
push
adc
cmp
push
mov
jbe
jecxz
xor
fnstenv
jge
mov
mov
cld
sbb
orl
adc
icebp
adc
mov
jb
pushf
mov
nop
je
jno
cmp
ret
and
shr
cltd
shl
aas
addr16
sbb
cmp
xchg
jg
xchg
and
inc
lods
out
ret
cmp
adc
es
push
xchg
jmp
mov
fwait
lods
dec
cmpsl
inc
into
out
push
in
dec
lret
pop
mov
fstps
ret
push
clc
into
ja
mov
gs
sub
pop
xlat
dec
outsb
mov
mov
bound
mov
out
dec
or
enter
push
aad
xor
inc
xor
pop
sti
sbb
jne
test
pop
fidivl
adc
push
gs
or
test
in
or
sbb
sbb
xchg
mov
jmp
decl
scas
xchg
out
pop
mov
sbb
out
sbb
mov
sarb
orb
push
rcr
xlat
push
mov
inc
mov
or
lods
dec
enter
or
mov
pop
leave
mov
into
inc
pop
mov
pushf
inc
dec
repz
inc
insl
sbb
out
std
stos
adc
pushf
pop
mov
lds
and
xor
addr16
movl
xlat
sar
and
in
cli
mov
fiadds
pop
rorl
lock
aad
cmpsl
lret
adc
icebp
out
mov
paddb
push
enter
cmpsb
add
dec
cmp
repz
cmpsb
dec
or
lahf
jmp
inc
mov
stos
ss
sarb
dec
mov
ret
pop
enter
testb
loopne
lods
test
dec
sbb
lahf
jae
pop
lods
outsb
in
clc
push
lods
loope
pop
cmp
out
loop
pusha
in
jmp
sbb
push
adc
xchg
xchg
or
popf
push
mov
add
xlat
mov
jl
leave
outsl
push
int
sub
fstps
push
and
adc
orb
mov
ljmp
jecxz
pop
push
mov
cwtl
fistpll
cwtl
outsb
xchg
lret
pop
xchg
mov
fsubrl
jb
sub
iret
push
cli
testb
dec
orl
cli
loope
mov
push
stc
sbb
or
popf
in
bound
movsb
scas
xlat
sbb
jge
mov
or
push
xchg
fildll
pop
cmp
arpl
mov
xor
mov
jbe
nop
xchg
push
pop
roll
push
pop
cmpsb
mov
iret
sbb
cmpsb
dec
jle
mov
adc
je
fwait
testb
sub
mov
mov
cwtl
xor
leave
or
dec
mov
jo
pop
cmc
mov
addr16
into
adc
and
hlt
inc
outsb
into
cli
outsb
arpl
or
inc
shrl
lahf
sbb
mov
ss
repz
mov
stos
movsb
jo
fcmovnb
mov
and
leave
and
xlat
push
and
xor
mov
in
xchg
out
adc
jg
push
addb
push
sti
sub
and
push
xor
sub
or
lahf
loop
in
jmp
and
mov
dec
loope
xchg
sub
dec
sbb
and
jg
jl
int3
fistl
call
out
cwtl
ret
mov
xchg
xchg
pop
xchg
jecxz
add
mov
pop
adc
and
imul
mov
mov
jmp
lds
cmpsl
dec
rcrb
xor
ffree
or
mov
stc
loope
out
mov
or
aad
inc
aam
test
mov
aad
loope
adc
inc
pop
and
add
mov
ja
xor
loopne
test
shrb
scas
aam
sub
imul
in
ret
dec
inc
jbe
andl
sbb
sbb
add
repz
mov
mov
mov
fcoms
fwait
jb
mov
jnp
mov
push
mov
push
mov
pop
cld
adc
mov
in
enter
push
xor
dec
in
js
movsl
dec
es
xchg
test
not
sbb
insb
jo
or
mov
adc
je
je
xlat
sti
sbb
dec
inc
lods
out
arpl
adc
pop
ja
mov
mov
sahf
pop
ficompl
nop
push
mov
jns
xor
xchg
jno
rol
je
push
adc
pop
addr16
xor
loopne
sbb
stc
or
mov
push
inc
add
icebp
in
xchg
es
or
iret
orl
adc
repz
xor
adc
jle
lea
sbb
dec
bound
ja
inc
dec
hlt
cwtl
jp
mov
mov
rol
cmp
add
or
fs
mov
mov
and
insb
mov
xchg
aam
sub
pop
pop
imul
pop
ss
add
xor
sub
cmpsl
lret
jp
dec
and
jo
in
add
out
inc
sub
or
and
outsl
jmp
mov
adc
and
icebp
and
and
daa
push
jp
jmp
xchg
enter
or
mov
das
dec
das
push
adc
movsb
or
sti
mov
sub
stos
ds
pop
jmp
ljmp
call
and
mov
adc
push
stc
pop
pop
adcl
inc
popf
pop
push
jl
and
mov
outsl
mov
out
inc
aaa
mov
jmp
xor
pop
sub
rcrb
pushf
xchg
jmp
mov
ds
dec
sub
xchg
mov
idivl
sbb
push
dec
push
push
int3
lcall
mov
scas
into
lods
pop
push
pop
mov
iret
enter
cld
push
jo
outsl
dec
jo
lock
insb
pop
and
cmp
mov
aaa
data16
sbb
adc
or
mov
fisubrs
and
shll
les
sub
jecxz
or
loopne
test
sbb
fadd
pop
sub
push
imul
push
mov
and
jno
cmp
sbb
movsb
sti
dec
xor
jl
pop
jmp
incl
pop
das
out
rorl
adc
pop
pop
dec
push
mov
push
mov
and
pop
cmp
mov
out
mov
mov
addb
sub
test
hlt
frstor
lar
movsl
out
xchg
test
out
push
mov
dec
push
mov
enter
pcmpgtb
test
movsl
mov
jmp
inc
test
test
sub
sysexit
add
and
jp
insb
cmp
sub
xchg
lods
xchg
nop
xchg
jns
xor
mov
mov
movsl
cmp
xchg
lea
jb
dec
movsl
repnz
dec
loopne
jnp
imul
push
jbe
aaa
mov
pop
aad
pop
adcl
shl
lret
cli
loopne
dec
pop
xchg
daa
cwtl
mov
mov
mov
cmc
lret
xchg
iret
cmpsb
lds
jo
mov
xchg
fdivr
xchg
or
sub
push
repnz
sub
cmc
je
cs
mov
adc
or
cmc
dec
adc
mov
cs
in
push
addb
les
mov
cmp
pop
lret
int
addr16
push
cmp
or
inc
pop
mov
jno
lret
push
xlat
test
icebp
mov
jnp
loop
xor
test
sub
ja
loop
dec
fidivl
xchg
mov
xchg
lcall
into
jmp
dec
inc
mov
add
jno
lret
aam
scas
fwait
cmc
cwtl
adc
adc
iret
movsl
mov
jbe
test
scas
xchg
mov
and
movsb
outsb
lock
cmc
adc
ss
ret
out
fsubp
stc
and
aaa
cmp
mov
cmp
lods
subb
pusha
or
rcrb
in
decl
mov
shlb
xor
aaa
xchg
pusha
js
xchg
cmp
jl
cmp
push
negl
sub
rclb
adc
pop
fucomi
int3
gs
loopne
clc
push
fwait
scas
test
rorl
stos
inc
mov
in
in
mov
cmc
push
push
mov
rclb
jne
jb
popf
scas
into
push
leave
pop
in
iret
sahf
mov
repz
sti
pop
xchg
lret
data16
pop
les
push
pop
xchg
psubsb
cmp
add
ret
les
inc
cmp
mov
in
das
jmp
lods
sub
lahf
sub
add
aam
mov
lea
sub
roll
imul
insl
lcall
push
dec
sbb
ja
jnp
and
push
push
lock
fmul
testb
fwait
mov
cmp
mov
mov
cmp
mov
and
movsl
daa
lret
mov
sub
jbe
jo
jge
xchg
hlt
fwait
jge
pop
pushf
es
mov
xchg
test
inc
inc
in
jno
xor
mov
adc
and
cmpsb
movsb
test
gs
les
add
mov
popa
mov
xchg
loop
int3
mov
mov
sahf
mov
jno
or
jne
sbb
mov
test
adc
rcr
fs
scas
dec
mull
adc
adc
fstpt
dec
dec
pop
sti
ds
testb
cmc
fwait
clc
adc
adc
imul
dec
xchg
push
gs
popa
mov
fdivrp
add
push
push
aam
and
push
and
mov
jmp
lods
into
in
fistps
aam
push
mov
aaa
test
jnp
sub
cmp
sbbb
hlt
push
insb
movsl
add
push
pop
scas
scas
outsl
cmp
or
mov
xchg
arpl
xchg
mov
and
xorb
inc
jbe
sub
andl
sbb
mov
xor
xor
sub
jne
icebp
aas
push
cmp
sti
aas
les
cltd
push
mov
push
xor
rclb
sbb
rorb
outsl
mov
sub
loopne
and
loop
or
out
xchg
ficoml
jbe
cmc
fmulp
loope
mov
xor
mov
or
xchg
fstpl
sbb
stos
stos
addr16
out
iret
sub
cwtl
mov
push
shr
std
mov
fiadds
lahf
inc
push
push
orb
mov
negb
push
mov
xchg
sbb
sub
xchg
cmpb
lret
je
test
mov
or
scas
and
jo
sti
mov
pop
les
cmpsb
xchg
ja
dec
in
out
jnp
cmp
daa
out
mov
nop
test
inc
dec
or
push
outsl
jl
mov
mov
pop
adc
ret
in
andb
sub
sbb
mov
adc
xchg
adc
push
mov
jp
and
and
sbb
cmp
imul
leave
or
adc
cs
mov
out
in
mov
xchg
fimuls
mov
cwtl
xor
dec
mov
dec
les
dec
les
and
ds
mov
pop
dec
sbb
adc
mov
in
inc
mov
in
sub
cmp
and
shl
inc
jo
sub
orl
pop
lahf
push
pop
iret
xchg
push
negl
adc
mov
pop
push
cmp
rcl
mov
cmpsb
inc
inc
imul
mov
adc
std
in
or
test
mov
out
gs
jp
lcall
sub
negb
ret
push
test
mov
sar
call
lds
or
mov
in
pop
imul
addl
loope
cmp
sub
pop
sbb
dec
insb
inc
add
adc
mov
scas
and
test
fwait
push
test
mov
mov
adc
lods
in
sarb
sbb
shlb
mov
in
mov
mov
pop
sub
add
add
cmp
pop
mov
idivl
gs
fsubl
ffreep
test
fsubrl
repz
or
mov
jno
in
sub
sti
icebp
pop
pop
icebp
adc
xchg
mov
aaa
inc
xor
push
lahf
lea
xchg
jl
jmp
push
xchg
inc
imul
jae
pusha
fnsave
xchg
mov
out
inc
adc
test
jb
sbb
push
add
inc
cltd
divl
mov
mov
lods
call
fwait
stos
lret
push
std
add
inc
cmp
jp
sub
xchg
cltd
pushf
pop
and
adc
xchg
and
jp
ljmp
xchg
setp
add
movsl
scas
jecxz
call
inc
std
dec
sarb
enter
fs
adc
push
xchg
es
or
mov
cld
in
jo
xchg
xchg
aas
xchg
xchg
adc
popf
xor
insl
daa
daa
rcll
sbb
mov
jno
int3
sub
orl
push
xchg
ret
test
in
sub
push
add
das
jecxz
push
push
cmpsb
push
and
lret
inc
lea
int3
cwtl
rcrl
inc
mov
addb
mov
jb
mov
jno
sub
in
mov
or
loope
lods
int
mov
lahf
mov
fs
test
jbe
les
in
out
jl
int3
shrb
cmp
leave
ficoms
sbb
rcrb
sbb
lcall
mov
add
mov
push
xor
std
dec
add
push
shl
mov
pop
adc
xchg
cwtl
lcall
pop
pop
insl
xchg
xor
addb
push
push
nop
js
cld
aas
xchg
pop
mov
push
inc
push
je
mov
in
in
add
leave
jge
std
add
addr16
test
cmp
jp,pn
daa
sub
pop
idiv
addb
ret
je
cmp
cmpsl
inc
out
mov
pop
pop
lods
add
data16
add
pop
mov
cltd
les
xchg
mov
push
mov
rorb
push
sbb
scas
jp
cltd
aam
arpl
sbb
sbb
dec
dec
lret
pop
mov
mov
mov
cmpsb
test
std
dec
js
cmpl
cwtl
sub
scas
xchg
fcmovnbe
into
mov
daa
inc
scas
jb
add
push
ja
mov
xor
cmp
adc
sub
push
jmp
out
and
dec
inc
cmp
cmc
jle
jmp
enter
mov
jecxz
ficoms
lock
or
cmc
push
push
loop
mov
stos
or
xor
xchg
pop
xchg
es
loope
lahf
call
cmp
scas
mov
push
movsb
pop
ja
pop
cmp
pop
pop
movb
xor
movsl
mov
xor
es
or
and
dec
test
rcrb
jmp
lret
jbe
loopne
mov
movl
cs
cmp
mov
movaps
jno
or
mov
sbb
xlat
lret
rclb
lea
lods
xchg
orl
sbb
add
push
mov
in
lret
arpl
mov
xor
fnstsw
dec
and
mov
clc
scas
imul
xor
js
cmp
scas
add
test
test
sahf
loop
jecxz
adc
scas
sbb
outsl
outsb
adc
into
mov
enter
es
jg
lcall
xchg
lods
sub
es
lods
test
push
jge
jnp
push
adc
add
inc
cmp
adc
pop
outsb
js
and
cld
push
or
fldl
mov
ret
cli
inc
add
dec
jl
fistpl
ret
cmp
xor
sub
das
inc
add
jno
repnz
test
push
pop
fstpl
cmp
bnd
rcl
call
std
pushl
imul
stc
push
mov
outsb
xchg
int3
mov
sub
add
addl
xchg
inc
and
in
mov
adc
push
dec
pushf
daa
mov
jno
outsl
into
dec
pop
outsl
pop
sub
leave
into
adc
mov
xlat
in
dec
out
xchg
jl
mov
fs
jl
imul
jae
aam
cld
adc
sbb
das
popa
stc
mov
add
sbb
pop
popf
ss
outsl
enter
inc
gs
sahf
or
int3
mov
mov
mov
lods
push
mov
mov
xchg
xor
mov
sub
loop
out
fwait
loop
xchg
repnz
jmp
jne
mov
test
aad
movl
lea
addb
std
mov
icebp
pop
das
mov
enter
iret
jle
out
xor
les
pop
dec
loopne
dec
rcrb
adc
jge
movsb
cs
fldenv
fmuls
sarb
cs
shrb
add
sub
stos
xor
enter
sti
out
pop
xchg
fadds
cmc
xchg
test
xchg
and
add
inc
pop
inc
xchg
pushf
stos
in
cld
call
lods
cmpl
leave
add
mov
and
rclb
xchg
push
aaa
push
cmp
push
cmpsb
pop
xor
scas
nop
cmp
lea
jae
sarl
sbb
stos
in
arpl
pop
std
cli
pop
fildl
jl
mov
aam
or
stos
test
push
cwtl
inc
out
and
loop
dec
hlt
popf
les
cmp
das
in
pushf
int
fldln2
sahf
es
rorb
mov
imul
pop
xchg
jbe
xor
adc
fwait
mov
loop
sbb
mov
inc
outsb
push
out
test
xchg
xchg
test
ret
dec
ret
andl
popa
das
arpl
dec
sbb
out
lret
push
pop
sub
sub
daa
xor
xchg
fwait
cmp
xchg
dec
cmp
xchg
push
inc
int3
xor
mov
pop
inc
out
fucomip
das
jbe
pusha
sub
out
es
fistl
inc
aam
inc
pop
cmc
js
mov
and
fildll
add
inc
out
fimull
jo
icebp
adc
add
dec
mov
xlat
pop
sub
mov
mov
loope
or
mov
ret
mov
iret
jmp
fcmovb
daa
test
fnstcw
or
push
in
pop
xlat
xor
add
push
mov
pushf
in
nop
in
cmc
or
mov
push
out
test
xchg
xchg
roll
jno
nop
sbb
das
arpl
dec
sbb
out
lret
push
pop
stos
shl
mov
push
pop
mov
or
shr
dec
mov
shr
sti
mov
adc
lahf
stc
in
fsubrs
mov
and
xor
or
orb
out
dec
jo
push
mov
das
add
mov
mov
lret
sbb
lea
clc
or
add
jp
scas
xor
ja
fdivr
fstpt
int
insl
int
or
mov
jbe
ljmp
mov
jecxz
sbb
test
jmp
pushf
js
sbb
jg
add
shrb
ja
dec
fnsave
popf
pop
xorl
js
push
mov
sahf
cli
mov
or
inc
or
jmp
push
push
into
xchg
cmp
inc
push
sbb
xchg
aam
or
in
subb
jmp
cli
lods
in
sti
les
vpaddq
mov
or
aas
in
fdivr
movsb
popa
add
negb
dec
ss
shlb
sti
sbb
sub
test
repz
xor
call
pop
inc
lea
xor
outsb
test
clc
push
xor
hlt
adc
jle
dec
fldl
fcmovnu
mov
lcall
xor
adc
jb
fiadds
pop
popf
adc
adc
movntps
rcll
sbb
aad
cs
xchg
xchg
cmpl
pop
cmp
add
cmc
pop
mov
out
adc
mov
mov
xchg
dec
imul
ficomps
add
xchg
add
dec
sub
testb
fsubp
lea
inc
inc
repnz
ret
outsb
mov
bound
and
dec
xchg
xchg
push
push
mov
adc
mov
cli
pop
jmp
mov
xchg
xor
xor
mov
dec
pop
stos
or
movlps
ror
scas
jns
fwait
insb
cmp
pop
nop
fcomps
leave
int3
lock
jmp
shrb
in
and
in
shrl
mov
mov
repz
xor
and
pop
cmp
mov
xor
rclb
mov
push
adc
cltd
ret
sahf
in
pop
mov
push
xchg
ret
out
cmp
mov
cmp
and
test
imul
adc
ret
ljmp
adc
push
dec
out
mov
popf
jg
push
movb
add
add
call
push
xchg
sahf
adc
scas
lods
add
push
cli
sbb
mov
lahf
sbb
fisubrl
fstl
cmp
dec
pop
ljmp
jp
sarb
push
jecxz
push
cmp
dec
dec
pushf
inc
lret
lret
pop
fsubr
sub
xchg
add
mov
and
iret
cwtl
push
inc
notb
inc
inc
jle,pt
pop
test
xor
aam
pop
pop
adc
mov
mov
mov
cmp
mov
in
std
pop
leave
ss
push
shrb
loop
iret
daa
cmp
testb
out
insl
push
xlat
lods
je
jl
in
mov
fisttpl
adc
cmpsb
pop
add
dec
scas
xor
push
jge
je
fprem
push
push
jecxz
dec
test
clc
aad
jns
pop
je
xchg
and
mov
scas
sbb
xchg
or
daa
jno
and
cmpsl
dec
mov
add
aad
add
scas
loope
enter
push
mov
sti
out
fldl
sub
dec
rolb
mov
mov
lods
pop
push
push
xchg
es
dec
pop
xor
add
pushf
out
cmpsb
jle
sahf
outsl
cmp
repz
int
dec
pop
frstor
pop
pusha
push
and
pushf
rorb
aad
sti
inc
sbb
dec
push
das
add
arpl
inc
mov
sbb
es
rcll
push
inc
cs
outsb
xchg
pop
xchg
imul
cmp
or
mov
int3
inc
stos
pop
iret
inc
pop
fimull
sbbb
fsubrl
fstps
cmc
mov
and
pop
xor
jecxz
jmp
inc
mov
mov
mov
jns
jecxz
xor
loope
push
outsl
mov
cmp
loop
lods
loopne
and
jno
jns
popf
pop
test
imul
pop
push
xor
out
and
add
clc
inc
and
cmpsl
imul
in
sbb
popa
das
arpl
stos
leave
mov
stc
xor
incl
inc
pop
push
pusha
adc
ss
xchg
pop
notb
push
aam
mov
fistl
test
xor
loopne
jbe
cmp
push
repnz
shl
ja
popf
xor
push
pop
fmull
xchg
insl
sub
and
out
popa
cmc
jge
and
out
mov
and
xchg
cmp
subb
repz
inc
push
inc
and
jo
cs
sbb
rcrb
data16
inc
push
mov
mov
push
cmpsb
aas
mov
in
arpl
test
incb
pop
cld
subb
ss
jno
pop
jg
jbe
push
cwtl
and
das
movsl
cltd
and
mov
push
adc
cs
rcll
das
clc
je
jmp
sarl
mov
std
jbe
ds
mov
insl
mov
cmp
int3
push
jle
cmp
xor
push
ret
shlb
inc
cld
inc
pusha
xor
lea
cltd
sub
mov
cs
in
mov
inc
into
les
push
ret
sub
mov
aaa
pop
jl
mov
jmp
sbb
push
mov
dec
or
mov
jae
bound
outsb
stc
je
push
cmp
and
mov
pop
push
push
cltd
mov
sub
fcoms
dec
js
jg
out
inc
jne
es
dec
es
pop
jg
fcompl
or
popf
out
test
andb
dec
inc
data16
adc
sub
cmp
xchg
mov
cli
sbb
pop
adc
mov
jg
js
lret
fld
mov
sbb
cmp
inc
hlt
outsb
xor
mov
das
pop
aad
lods
jno
cmp
adc
sti
push
or
pop
jecxz
js
leave
xchg
jp
jno
cli
test
inc
sub
mov
and
adc
das
sbb
and
or
mov
inc
les
sbb
jg
xchg
push
outsb
dec
std
sarl
dec
and
and
cmp
inc
cmc
sbb
call
fistps
push
fsubrs
or
pop
cmp
fstps
fldt
push
sbb
jae
cmc
lock
out
or
ret
push
ja
mov
xchg
aas
push
ret
adc
sti
xchg
out
int3
xlat
cmp
fidivrl
mov
fidivrl
ret
popa
and
xchg
insb
pop
fs
in
jb
out
jle
popa
push
sbb
test
ss
in
adc
sub
in
xor
push
jo
and
sub
mov
fcoms
loope
add
repz
out
mov
dec
stos
xor
es
pop
jmp
stos
or
cmp
push
scas
lea
insb
pop
cmp
mov
dec
fadd
jne
pop
sbb
dec
mov
loop
push
xchg
or
jp
icebp
add
add
fdivrl
scas
sbb
push
fisttpll
iret
in
outsl
rorb
xchg
xor
mov
lahf
xor
mov
in
pop
sbb
int3
inc
pop
popf
mov
sub
jno
inc
sbb
fldl
pushf
int3
subl
js
or
cwtl
sahf
mov
out
dec
sahf
sub
loopne
aad
decb
mov
testl
ljmp
cmc
cmp
xchg
in
cmp
out
in
mov
shl
mov
mov
add
lret
cltd
push
jl
loopne
mov
adc
jle
adc
jge
ds
lods
cmp
cli
push
in
lret
cwtl
pushf
aaa
or
mov
roll
shrb
and
push
dec
cmc
mov
xchg
push
clc
jne
movsl
sub
aas
push
cmpsb
imul
xor
shrb
scas
sbb
push
push
push
jg
xchg
test
jne
mov
jae
cmp
loop
sub
mov
lret
pop
loop
subl
inc
jae
dec
adc
mov
aaa
ret
imul
into
rclb
jne
fbstp
cwtl
test
sahf
mov
inc
loop
xchg
dec
faddp
lcall
out
addb
iret
movsb
cmp
sarl
or
jmp
out
mov
jp
add
mov
push
aam
sub
sarl
lods
mov
cltd
in
int
scas
out
mov
out
xor
roll
fdiv
arpl
mov
jo
icebp
mov
hlt
in
les
mov
and
addr16
aad
divl
xchg
mov
repnz
xor
leave
pusha
sub
push
jl
outsl
je
push
dec
cmp
cltd
mov
rorl
mov
or
ficompl
mov
imul
pop
sarb
jp
imul
mov
jno
push
xchg
fstp
inc
add
xchg
mov
stos
lahf
lds
push
cmp
sti
mov
sahf
and
sub
hlt
jg
xor
enter
cmovae
mov
in
lods
xor
sub
jp
dec
fs
push
test
sti
imulb
dec
push
int
addr16
jbe
and
fs
cld
cmp
or
pop
pop
sub
outsl
outsl
dec
movsl
pop
inc
das
mov
mov
jnp
mov
fsubr
cli
clc
mov
pusha
int3
cmp
stc
std
add
xor
jg
lret
imul
mov
clc
dec
push
movsb
mov
mov
js
push
add
jecxz
sub
in
push
test
mov
mov
cmp
pushf
or
cmpsb
cwtl
mov
pop
mov
and
loopne
aaa
repz
aam
cmp
fcmovu
out
out
hlt
sub
test
jae
popl
jge
pop
ds
sub
mov
fwait
popf
shll
inc
sbb
fistpll
or
mov
pop
shll
scas
daa
bound
xchg
outsb
lret
and
test
sti
pop
lret
cld
mov
jnp
mov
sarl
push
repnz
aad
dec
adc
rcrb
mov
int3
add
hlt
push
pop
xlat
ret
mov
call
pop
and
dec
out
mov
add
mov
into
push
push
and
ss
rclb
test
mov
into
int3
cmpsb
mov
mov
aad
mov
lcall
pop
sbb
sub
sub
cltd
orb
dec
loopne
dec
outsb
inc
fildl
inc
mov
pop
jmp
movsl
and
dec
fsubrl
add
sbb
aaa
int
sub
adc
or
jne
cmp
mov
mov
loop
push
cltd
ret
inc
xchg
les
shr
fidivs
inc
xchg
cltd
inc
xlat
push
lods
xchg
jbe
push
ljmp
lods
xchg
sbb
mov
adc
fbld
pushf
mov
sub
mov
loop
test
adc
roll
sub
loope
xchg
jge
and
insl
or
push
jb
lahf
imul
xor
pushf
insb
sub
in
xor
xchg
negb
add
aaa
aas
mov
pop
test
rcrl
dec
movsb
jge
xchg
and
xchg
inc
cmpsb
jb
mov
add
xor
dec
clc
aas
jns
mov
call
shl
dec
xor
adc
loopne
pop
pop
xchg
je
in
imul
push
push
loopne
dec
fdiv
lret
popf
cmp
fsubr
sbb
or
xor
sahf
lods
mov
cwtl
arpl
out
call
jae
je
iret
popa
popf
push
xchg
pop
or
cmpsl
cli
cld
jb
mov
out
mov
test
int
pushf
gs
xor
push
int
test
sub
mov
inc
mov
inc
dec
mov
test
testb
repz
test
xchg
cmpsb
pop
sbb
out
cmp
mov
lcall
out
ret
into
das
stos
loopne
js
add
sbb
cld
dec
mov
iret
jg
out
inc
xlat
mov
std
xor
lock
xchg
xor
xor
mov
dec
and
sub
cltd
cmpsb
fcmovnb
clc
sub
push
sub
pop
rcrl
arpl
or
insl
roll
xor
out
ss
inc
nop
fdivl
mov
jno
or
mov
add
js
adc
cmp
mov
jnp
mov
mov
xchg
xchg
jnp
and
cmp
rcrl
cmpsb
scas
call
aad
nop
out
shl
ret
jle
int
mov
es
and
sub
and
push
push
or
push
ja
in
addr16
adc
cmp
sub
cmpsb
jo
mov
mov
iret
push
movl
jb
cwtl
push
outsb
add
cwtl
cmp
jno
sub
arpl
shll
ja
xchg
push
jb
adc
xchg
cs
test
lock
or
xor
loopne
setbe
dec
pop
scas
xor
div
or
loopne
and
mov
arpl
jg
repnz
mov
stc
vpmovmskb
pop
adc
inc
pavgb
or
int
sub
inc
pop
or
lret
dec
and
jp
repz
lret
add
mov
stos
xchg
mov
jnp
ds
fwait
jmp
in
pop
or
outsl
xchg
jae
sbb
rcrb
icebp
cmp
je
movsb
cld
cmp
lahf
cmp
jae
sarb
mov
stos
dec
or
daa
jne
hlt
jns
push
adc
jnp
and
fldenv
dec
pop
into
lods
iret
mov
fwait
cmpsb
pushf
push
int3
or
and
pushf
je
xchg
xor
mov
testb
cs
push
pop
out
leave
push
jo
pop
jne
and
xchg
leave
test
mov
lcall
testb
ret
inc
shrb
sbb
xor
xor
inc
rorl
cmc
xchg
mulb
push
sub
fcomps
lgs
sub
xchg
dec
rcll
cmp
mov
std
cmc
ss
mov
test
xchg
imul
icebp
pop
adc
mov
cli
mov
add
je
pushw
inc
rclb
adc
cmpsl
int
sar
cs
shll
mov
das
ret
je
notb
mov
aam
stos
push
inc
sub
sbb
sbb
and
or
sbb
cs
pop
pop
or
push
dec
imul
sub
xchg
loopne
push
jecxz
in
std
push
xlat
cmpsl
cwtl
mov
clc
mov
xchg
mov
xchg
cld
jl
sub
mov
stos
xchg
aad
outsb
loope
pop
or
push
test
mov
or
fbld
jge
mov
out
es
into
xlat
sbb
in
jl
test
mov
or
lods
mov
js
ret
adc
dec
xor
xor
mov
lea
repnz
xlat
pop
shlb
ret
loop
jg
inc
add
push
mov
mov
repz
in
fldcw
mov
add
les
lret
mov
mov
sahf
in
jns
push
lahf
stos
repz
inc
inc
jle
jp
ja
leave
lret
lcall
inc
sarb
cli
pop
dec
in
lea
xchg
mov
mov
or
or
cmp
cmp
mov
mov
rorl
dec
xchg
out
in
xor
pushf
add
sbb
lods
out
stos
aad
cmp
adc
gs
mov
push
lods
andl
sub
sbb
pop
add
pop
mov
iret
orb
bsf
cltd
sbb
mov
arpl
popa
fistl
lret
loop
mov
push
std
out
and
mov
les
adc
adc
fwait
sub
jg
xchg
test
and
push
jns
repz
mov
aaa
mov
lock
pop
idivl
loopne
jg
mov
aam
imul
setbe
test
xor
push
pushf
mov
in
ds
and
mov
popa
dec
aaa
push
xchg
cld
pusha
inc
mov
and
dec
mov
or
pop
add
push
add
in
aam
adc
ret
cmp
dec
ret
adc
push
je
aas
push
leave
jecxz
dec
ljmp
dec
push
cmp
cmpsl
les
mov
lods
xor
std
add
push
dec
subb
push
push
mov
pop
add
shll
dec
lret
lcall
mov
call
xchg
dec
dec
push
mov
aas
adc
jg
testl
ror
pop
out
dec
jle
jge
dec
pushf
dec
int
pop
test
in
mov
loope
sub
mov
and
jp
jp
or
cmp
mov
rol
pop
aam
sbb
sbb
mov
and
sbb
adc
movsb
xchg
jns
or
iret
push
ja
jae
scas
mov
xchg
lcall
adc
into
adcl
movb
push
das
hlt
mull
inc
xchg
stos
mov
mov
lahf
adc
inc
dec
ret
repz
icebp
sub
cmpb
xor
mov
xor
fldl
xor
scas
jnp
pop
pop
cltd
daa
mov
adcb
mov
mov
inc
xlat
test
pop
sbb
pop
add
mov
int3
shlb
sub
shl
or
jbe
jnp
in
xlat
mov
xor
push
mov
mov
js
xchg
mov
xchg
dec
ret
aas
jp
mov
bound
mov
inc
jo
daa
jne
shll
sbb
push
mov
nop
and
mov
popf
int3
lea
pop
stos
ss
int
out
and
outsl
incl
jbe
imul
gs
sbb
mov
sub
inc
mov
rorb
fistpll
clc
dec
jmp
les
mov
imul
stos
mov
pop
mov
test
dec
jne
pushf
mov
cltd
push
lret
jnp
dec
in
mov
jae
mov
and
xor
aam
jp
daa
sbb
int3
mov
jg
sub
push
out
insb
popa
push
mov
loope
jp
pop
push
arpl
xchg
repnz
inc
ret
outsb
xor
dec
cmp
pop
xor
inc
lcall
cmc
mov
sarl
jb
aas
xchg
cwtl
pop
xor
mov
jge
lods
dec
xchg
inc
mov
out
xchg
nop
ja
mov
pop
mov
push
push
mov
sbb
pop
leave
add
lea
int
ja
or
mov
outsl
push
test
sbb
sbb
pop
cmp
xchg
and
mov
divb
pop
and
sub
inc
xor
pop
pusha
push
sub
sbb
les
ds
lahf
adc
push
jne
bound
mov
cmp
push
insl
mov
xor
sub
rorb
or
mov
movsb
outsb
mov
hlt
fucomip
enter
aam
adc
not
push
mov
jnp
sub
add
in
push
outsb
xchg
xchg
repz
test
cli
out
and
stos
out
jmp
inc
mov
cmp
dec
cmp
inc
into
cwtl
mov
dec
push
movsl
lea
xor
adc
fldcw
gs
pushf
xchg
mov
loop
and
sbb
mov
add
add
int3
cmp
je
add
daa
les
mov
shr
jp
lret
jl
stos
rcrl
xchg
out
jmp
lret
sbb
pop
out
lcall
xor
notb
stc
jno
lcall
mov
cmp
adc
shrl
adc
xor
jb
push
mov
leave
decl
shl
push
addr16
cwtl
addr16
icebp
out
push
mov
dec
push
scas
xor
imul
adc
in
adc
aas
mov
sahf
cs
xchg
xor
pop
xchg
hlt
ficoml
lcall
out
sbb
pop
inc
dec
or
sbb
int
loopne
insl
push
add
ret
int3
inc
lods
sarb
jo
je
jae
je
push
popa
dec
fdivs
out
push
xor
mov
pop
fistpll
and
rcl
fistps
inc
and
xorl
dec
inc
das
mov
inc
cli
push
jns
sub
xchg
mov
dec
jb
push
in
testb
adc
xor
jno
inc
add
jmp
repz
jae
sub
test
dec
ds
mov
in
mov
add
cli
movsb
ds
mov
sub
pop
xchg
int
and
ds
dec
jp
push
xlat
adc
mov
das
cwtl
scas
dec
shl
mov
add
ret
xchg
jle
sbb
mov
add
ds
ja
mov
repnz
xchg
mov
mov
pop
fs
adc
jp
mov
push
movsb
bound
push
xchg
aaa
dec
pusha
xor
sbb
jb
mov
jb
inc
roll
sub
sub
cmp
mov
stc
jp
xlat
lods
hlt
in
or
sti
pop
mov
lret
mov
mov
cld
pop
xor
cmp
xchg
or
cmpsb
jle
add
xchg
jne
sahf
clc
mov
cmp
clc
mov
sub
cmp
mov
jmp
inc
pop
add
xchg
sbb
rcrb
add
fwait
insb
incb
sbb
sidtl
dec
mov
mov
leave
ds
aad
dec
les
sbb
insl
sub
jne
lret
xlat
es
cmp
out
inc
push
inc
ret
mov
lret
dec
divb
orps
aaa
repz
xor
jbe
cmc
movsl
jge
xchg
add
jg
cmp
rclb
dec
in
lods
and
fsubl
test
pcmpeqd
cmc
stc
enter
adc
add
test
fidivs
cli
pop
stc
push
mov
mov
jle
insb
test
cmp
dec
ss
cli
ficoms
or
call
sar
mov
xchg
notb
xchg
adc
addr16
int
pop
cmpsb
jnp
fistps
iret
push
jmp
dec
arpl
push
mov
loopne
pusha
push
rolb
xor
cwtl
xchg
jno
xor
repz
gs
jns
push
std
das
mov
push
pop
jg
xchg
mov
cltd
fmull
xchg
scas
inc
cmpsl
clc
ja
or
fcom
insb
push
xor
xor
repz
aaa
cltd
or
and
lods
adc
mov
xor
adc
mov
push
sub
out
adc
jmp
or
bndstx
add
add
dec
xor
dec
popa
cmpsb
leave
mov
xchg
hlt
test
fstenv
lcall
cmp
lahf
das
mov
mov
dec
pop
jmp
xor
mov
xor
icebp
fiadds
icebp
dec
sbb
sub
sbb
mov
loope
inc
pop
push
cs
mov
sbb
out
orl
rcl
mov
pop
inc
cld
xchg
push
jle
inc
add
call
add
dec
xchg
or
aas
mov
push
ret
jae
inc
jbe
dec
xchg
push
mov
ljmp
lds
lcall
sub
ds
stc
lret
push
sub
mov
cmp
ja
pop
hlt
pop
push
jmp
add
cmp
jne,pn
push
in
and
sti
leave
pushf
cmpsb
xchg
sub
imul
out
mov
push
mov
movsb
sbb
loopne
leave
pop
stos
ret
pop
scas
sbb
cmp
stc
or
sar
test
int3
add
movsb
stos
or
sarb
cli
out
add
hlt
data16
mov
lock
dec
mov
pop
test
ret
jns
movsl
sbbb
addr16
imul
arpl
sbb
dec
sbb
push
enter
into
adc
loop
rol
xchg
iret
out
dec
jecxz
add
out
orb
inc
enter
rorb
push
ss
fs
pop
dec
adc
iret
sub
ljmp
mov
sub
inc
inc
cmp
fwait
ret
pop
daa
mov
cmp
inc
and
sar
sub
mov
sub
insl
pushf
mov
mov
lock
sub
out
gs
sbb
ror
and
jl
roll
sub
outsl
mov
ljmp
test
ficoml
movsl
fidivrs
pop
sbb
ret
iret
mov
neg
outsl
fistps
out
push
jbe
add
add
sahf
sub
mov
xor
andl
jbe
mov
stc
mov
aad
inc
sub
sub
aad
lahf
and
jl
rclb
push
mov
pop
xlat
jbe
ja
leave
mov
xchg
sub
dec
icebp
push
addr16
fs
rol
mov
jecxz
repz
inc
and
test
gs
test
xchg
adc
and
sbb
scas
lock
pop
sbb
xchg
sub
stos
pop
sarb
fdivr
mov
sbb
lock
xchg
movsl
ss
mov
fs
mov
jp
adc
cmp
pop
test
je
adc
testl
jl
xchg
cmp
jbe
add
mov
pop
jmp
gs
cli
loope
inc
cltd
leave
add
pop
cli
hlt
gs
sub
test
and
es
fcmovnbe
stos
fnstenv
xchg
jp
popf
lock
sti
push
int3
sahf
or
jecxz
add
lret
mov
push
mov
push
push
and
xchg
dec
repnz
mov
loopne
cmp
cmp
dec
add
dec
in
jg
fdivl
in
mov
xchg
cmpsb
repz
xor
jbe
jg
mov
adc
inc
sti
adc
rorb
cwtl
aad
ret
aas
sub
add
icebp
adc
daa
outsb
in
mov
out
or
mov
xor
decb
rclb
dec
icebp
mov
mov
jo
jp
in
lods
sahf
or
stos
daa
addr16
test
mov
pushf
pop
xor
dec
scas
shll
in
aas
in
lcall
insb
cli
mov
cwtl
out
mov
loopne
xchg
popa
out
icebp
lret
mov
cmp
rcr
or
cmp
push
lock
rcll
sahf
mov
hlt
inc
push
les
je
std
mov
negl
fldenv
mov
xchg
je
pop
xchg
out
sub
pop
mov
mov
and
mov
cmpsb
mov
lods
jne
inc
jle
cmpl
inc
insl
sub
and
mov
out
js
sarb
jns
xor
adc
push
dec
ljmpw
dec
imul
push
repz
sti
scas
pop
and
jnp,pt
rcll
push
push
pop
sar
lcall
mov
clc
or
int
add
or
aam
inc
and
lods
mov
jne
fidivs
aam
leave
mov
daa
lods
push
inc
inc
pop
jns
mov
inc
dec
ja
inc
mov
in
and
mov
and
sub
sti
mov
clc
sbb
pop
pop
inc
xchg
je
stc
imul
stos
je
clc
ret
adc
cmc
cmpl
bound
mov
sti
pushf
rcll
out
push
and
add
int
pop
pminub
pop
dec
add
inc
leave
sbb
sbb
clc
sub
push
cmp
jbe
or
push
jne
jl
into
push
inc
jp
mov
push
popa
xor
xchg
mov
sub
mov
add
out
jle
cmpsb
and
adc
and
aam
xchg
mov
ja
cld
clc
push
jne
sbb
lods
mov
sub
movsl
stc
ret
adc
push
jnp
xlat
jb
mov
xor
into
sbb
stos
lcall
cmp
adc
pop
lret
dec
pop
push
lds
xchg
pop
pop
sahf
mov
xchg
popf
or
mov
or
das
lret
ja
mov
in
add
out
mov
movsb
stos
or
or
jecxz
fmull
jbe
repz
pop
fistpll
inc
in
shll
adc
sub
imul
int
not
enter
sbb
sub
push
jmp
addr16
push
je
jne
pushl
inc
fildll
shlb
ljmp
cmpsl
adc
push
jae
add
mov
sbb
div
mov
repz
inc
outsb
xchg
sub
fiaddl
push
fs
out
js
sbb
and
das
cmp
rorb
mov
aad
cli
aad
gs
in
sub
sbb
pop
loope
leave
lcall
jbe
daa
int
fisubrs
cmpl
out
adc
mov
or
shll
xlat
neg
sbbl
imul
mov
xchg
push
jnp
inc
sti
or
dec
adc
stos
or
pop
push
fistpll
test
test
lret
daa
push
fists
xchg
fimuls
fwait
mov
lret
add
int
cmp
clc
mov
inc
data16
lds
pushf
mov
mov
enter
pushf
sub
xor
outsl
push
out
iret
add
int
add
xlat
cltd
lret
imul
jg
push
mov
fwait
mov
push
mov
lret
pop
or
or
inc
jecxz
sahf
jno
cmpsl
push
insb
nop
xchg
jg
mov
inc
jecxz
sbb
adc
cli
jle
pusha
sub
cltd
pop
pusha
daa
in
das
sahf
movsl
or
leave
jbe
mov
add
repz
xorb
add
fimull
data16
dec
xor
inc
push
mov
cmc
into
clc
xchg
test
pop
inc
arpl
in
cmp
call
lret
sbb
rcr
aaa
xchg
push
push
mov
jecxz
lods
inc
mov
fsubl
in
cmp
ja
stos
xor
xor
pop
inc
adc
cmpsb
sti
inc
dec
push
shll
rcl
mov
sbb
cli
aaa
xor
mov
push
or
xor
cmp
js
mov
push
mov
ljmp
loop
leave
xor
inc
and
pop
pop
mov
mov
push
fcoml
xor
xlat
test
rcll
mov
sbb
mov
pop
out
sub
into
dec
faddl
pop
scas
repz
imul
std
cmp
mov
std
imul
inc
in
dec
pushf
out
movsb
ror
adc
fidivs
jge
or
pop
or
add
leave
movsl
mov
xor
and
iret
jnp
dec
jle
jae
dec
fildl
mov
sarb
pushf
mov
push
push
movbe
test
sbb
mov
cmc
hlt
mov
push
mov
in
mov
mov
or
sahf
jl
hlt
cltd
hlt
mov
hlt
call
and
dec
leave
sbb
aad
test
jnp
jecxz
je
dec
repz
xchg
dec
sub
add
enter
or
xor
stc
xlat
ss
add
pusha
in
sub
fsubr
lds
jl
idivl
fwait
sarl
push
adc
push
add
repz
mov
cmp
iret
ja
daa
or
mov
enter
xchg
sbb
out
jmp
mov
and
jo
pop
mov
stc
push
mov
les
mov
sbb
jecxz
sti
fdiv
clc
sub
lea
sbb
shll
mov
adc
jb
repnz
pop
xor
mov
and
or
testl
daa
aad
dec
jecxz
fildll
cs
xchg
and
mov
mov
gs
imul
and
repz
cmp
clc
push
sub
cmp
cmp
mov
or
add
je
sbb
add
ret
aad
mov
aaa
cmp
mov
pop
hlt
and
mov
and
push
xchg
push
inc
lea
adc
sub
pop
mov
test
pop
add
stos
stc
and
xchg
and
mov
xor
dec
aad
addb
imul
int
xor
into
push
insb
repnz
nop
and
test
sbb
mov
leave
fstpt
mov
and
aaa
or
test
movsl
inc
outsl
mov
dec
jb
and
cmp
add
adc
add
test
in
inc
dec
add
jae
je
xor
jge
pop
mov
loopne
xor
call
add
les
mov
test
in
sub
mov
dec
mov
mov
jmp
ret
ljmp
adc
adcb
sbb
loop
and
mov
cli
cwtl
xor
adc
push
xor
insl
stos
cmp
or
mov
jg
mov
call
popa
imul
push
add
jo
xchg
add
jp
push
roll
icebp
je
js
add
and
cmp
es
adc
repnz
cmp
adc
sbb
ja
push
out
jns
xchg
inc
cmc
cmp
mov
dec
xchg
fcompl
flds
pusha
sub
jl
mov
mov
adc
scas
test
out
mov
push
mov
dec
xchg
cmp
imul
add
aam
cltd
cs
sub
adc
cmpsb
lds
js
inc
fldcw
fcomp
mov
pop
mov
or
fwait
and
loopne
in
push
aam
insb
outsl
adc
jne
or
pop
cld
or
mov
add
push
xor
sbb
shrb
xor
inc
dec
call
add
arpl
mov
cmp
mov
outsb
jmp
ret
pop
jbe
fstl
out
jecxz
test
je
movb
loop
inc
cmp
xchg
xchg
js
cmp
shll
jecxz
mov
outsb
mov
stos
mov
insl
push
adc
out
xchg
sub
enter
outsb
repnz
arpl
jae
aad
mov
push
jns
in
ret
test
cmp
inc
subb
xor
test
and
push
and
xor
cmp
mov
das
mov
push
push
xchg
rolb
stos
pop
xor
pusha
push
mov
jnp
xor
cmp
add
mov
test
or
add
adc
xor
cmpsl
fbld
and
cmc
or
sti
lahf
lret
enter
cmp
movsl
popa
push
cmc
pop
and
inc
cmp
sbbb
fcmovbe
fs
jmp
fcmovu
fldl2e
or
adc
icebp
pushf
scas
xlat
mov
shll
mov
loop
jge
sbb
fidivrs
fistl
negl
inc
push
xchg
leave
add
into
movb
ret
hlt
loopne
mov
ss
or
imul
mov
movsb
in
movl
enter
mov
leave
adc
fnsave
xor
testl
imul
ret
push
in
jo
in
test
aas
rol
mov
lahf
cmp
pop
pusha
loope
pop
fadd
cltd
insb
push
mov
gs
push
loopne
inc
out
cmpsl
xor
scas
out
sub
push
pop
lds
and
jmp
lret
add
push
and
mov
add
das
dec
add
lea
cmp
dec
mov
sub
sub
test
add
mov
fbstp
push
lds
sub
fldenv
push
test
xchg
sarl
out
stos
sbb
xor
repnz
loope
pop
inc
shlb
push
mov
pop
fucomi
and
pop
adc
shrl
dec
and
cmp
icebp
pop
rcrl
adc
adc
inc
xchg
sub
mov
jno
nop
imul
ljmp
fistpll
orb
add
xchg
mov
push
sti
xor
pop
adc
xor
cli
fwait
popa
dec
dec
imul
jae
adc
mov
mov
adc
cmp
jp
mov
test
inc
jnp
cmp
out
push
out
js
cld
pusha
sub
sarb
jae
addr16
add
inc
subb
getsec
out
addl
xor
add
adc
mov
sbb
loope
jo
out
ss
ss
fildl
repz
mov
xor
jg
aaa
mov
add
inc
subb
pusha
insl
lods
cmpsl
lahf
cmc
xor
fcoms
add
jp
call
add
das
adc
sub
jne
out
es
pop
in
pop
gs
xchg
popa
dec
test
jle
mov
sarl
push
or
dec
scas
push
imulb
lahf
mov
sbb
popf
lret
pushf
stc
jnp
outsl
loopne
xor
jp
ret
stc
mov
js
push
rolb
aas
mov
insl
lods
lock
jb
pop
lds
out
adc
dec
sbb
pop
pop
fdivl
aad
out
mov
outsb
sbb
mov
dec
repz
mov
pusha
pmulhuw
pop
test
jg
cmp
mov
push
aam
pop
and
in
pop
push
repz
mov
and
pop
movsl
not
add
out
cmp
das
mov
push
aam
cwtl
xchg
or
ja
mov
rcl
push
nop
or
xchg
scas
int3
test
mov
jmp
jmp
xor
clc
push
rep
push
jle
jno
xchg
jo
sub
cmpsb
cli
jae
add
and
call
jne
jp
fstpl
adc
mov
jb
xor
out
out
js
fdivrs
mov
inc
cmp
xor
inc
addr16
emms
push
push
lret
leave
iret
into
dec
popf
and
push
pop
mov
mov
and
jbe
xchg
sbbl
dec
imul
aad
stos
xor
aad
loop
enter
leave
mov
jbe
sbb
cltd
fbstp
mov
xor
std
and
movsb
add
adc
sahf
mul
xchg
scas
mov
test
dec
adc
sub
shll
dec
js
fstpl
aam
jo
cmp
mov
cmp
add
and
push
lock
repnz
fisttpll
lahf
mov
jle
fprem1
xchg
mov
pop
or
pop
mov
dec
adc
sub
out
fs
fcomip
into
mov
pop
jo
pop
pop
loopne
and
mov
cmc
sbb
icebp
clc
test
negb
cmp
pushf
pop
jmp
movsb
rcl
ja
pop
clc
fnsave
shrb
jae
fsubrl
mov
push
jne
jecxz
push
mov
push
cmpsl
out
loope
scas
and
xor
xchg
repz
shll
test
xchg
test
ljmp
mov
loopne
pop
icebp
and
dec
fcompl
xchg
xor
loop
or
mov
aam
fstpt
notl
lds
push
insb
or
inc
mov
cmp
leave
pusha
sti
or
call
mov
lret
fdivp
lret
mov
imul
and
shrb
rorl
mov
xor
dec
mov
push
gs
inc
hlt
mov
lcall
xchg
jle
xchg
orb
popa
jle
int3
ss
inc
and
jg
jno
ja
cltd
pusha
scas
cli
cmp
mov
xchg
aad
movb
ss
fidivrs
lods
adcl
arpl
lahf
lods
sbb
into
loop
xor
rcl
pop
es
jecxz
stc
sbb
lods
jae
out
lods
inc
pop
jae
cwtl
jns
daa
aaa
xchg
cmp
int3
add
repnz
cs
sarb
stos
push
les
mov
adc
rcl
add
js
inc
xor
jg
and
jp,pn
adc
jbe,pt
pushf
rolb
loop
push
je
sarb
xchg
jg
clc
loope
fsts
testb
jmp
dec
data16
sub
sahf
imul
scas
icebp
pop
cmp
add
or
or
xchg
aad
mov
out
push
cmp
sbb
mov
add
ret
mov
xchg
jns
xchg
inc
cwtl
js
xor
mov
dec
movsb
pushf
xor
hlt
xor
push
jne
int3
andb
and
popf
or
rcl
or
icebp
adc
dec
mull
lret
ret
xchg
sbb
mov
xchg
mov
sub
cmp
xor
inc
dec
mov
push
xchg
fcom
pop
cmp
inc
clc
popa
bts
inc
cmpsb
jo
fucomi
inc
loopne
sbb
pop
arpl
cwtl
sub
ret
pushf
pusha
pop
jb
pop
sbb
xor
lock
xchg
and
adc
out
loope
aad
sbb
cli
lcall
mov
lds
fimuls
push
iret
cmp
aas
mov
jns
mov
stos
in
pop
or
push
pop
ja
jge
mov
adc
lods
sbb
lret
out
pushf
add
pop
stos
movsl
mov
or
lret
cmp
cwtl
push
jns
inc
ficomps
in
mov
sti
cmp
nop
rolb
gs
icebp
call
mov
jae
xchg
dec
stc
pop
in
in
sbb
icebp
aad
enter
and
fcmovb
les
adc
and
and
dec
push
cmc
mov
hlt
jecxz
andb
es
stos
stos
xor
movsb
adc
daa
mov
and
cmp
pop
in
push
rclb
sbb
cwtl
add
out
mov
push
push
jnp
fisttpll
jne
mov
mov
jo
int3
push
lods
inc
ljmp
mov
dec
or
jo
jmp
xchg
imul
sbb
scas
outsb
or
aam
mov
mov
xor
jb
adc
pop
pop
adc
push
dec
fs
jno
xchg
add
mov
sub
stos
test
test
cmp
lock
movb
or
subb
or
ds
popa
loopne
fcmovbe
mov
xlat
xchg
data16
cmp
test
sbb
sub
jge
lcall
push
mov
mov
pop
hlt
lods
out
fs
shlb
out
dec
push
or
cmp
cs
popa
sti
xchg
out
xor
push
inc
cmpb
xchg
xor
adcl
push
mov
mov
jae
fmuls
adc
mov
inc
xchg
dec
or
adc
mov
mov
iret
mov
and
sti
adc
movsb
inc
cmp
add
out
dec
xorl
lods
add
add
mov
push
jle
jmp
pop
xor
dec
sahf
addl
xchg
ret
cld
rcrb
ds
push
pop
xor
es
jmp
jmp
push
into
ljmp
rolb
in
mov
shll
xor
jne
shl
jg
lcall
pop
cmpsb
enter
enter
fwait
cwtl
test
mov
scas
jmp
repnz
int3
std
jp
ret
mov
sti
inc
mov
ret
fcmovb
push
sbb
cs
cmp
out
das
inc
sti
test
std
insb
movsb
out
add
jl
out
cmpsl
sarl
adc
test
mov
inc
test
jno
aaa
ffreep
jl
pushf
rorb
mov
lea
shrb
adc
mov
sbb
jg
jnp
jnp
jnp
aam
jg
sbb
daa
or
js
xchg
xor
push
pusha
fistl
aad
pop
test
fistl
enter
loop
lret
cmp
add
dec
sbb
lock
fdiv
jg
stos
jno
int
enter
dec
jb
add
mov
movsb
in
pop
mov
mov
out
or
sbb
push
lcall
arpl
jns
mov
or
inc
fisubrs
daa
xor
int
pop
repnz
cmp
insb
pushf
adc
cmp
js
xor
xchg
jecxz
or
test
test
pop
adc
mov
xor
xchg
loop
xchg
push
clc
mov
mov
in
scas
dec
cmpsl
sub
push
icebp
rcr
jo
lret
jmp
xor
in
sbb
fmuls
sbb
imul
and
mov
inc
jge
adc
or
xor
lahf
aad
push
jp
imul
mov
stc
adc
and
pop
les
movsb
jl
mov
mov
push
cwtl
adc
cmp
data16
ds
mov
pop
cmpsl
cmp
notl
jle
push
std
inc
jo
mov
mov
pop
inc
out
addr16
or
fwait
jno
aad
roll
mov
dec
cmp
or
jmp
mov
inc
fdivrs
push
sahf
arpl
es
mov
xchg
push
fsubs
jno
in
imul
add
out
cmp
inc
scas
repnz
int
pop
and
add
pop
data16
outsl
cmp
xchg
xchg
ss
jbe
mov
lret
fs
mov
pop
xor
mov
test
jno
pop
xchg
and
lock
call
out
push
add
xchg
push
mov
add
mov
jnp
rorb
pushf
lret
lret
hlt
scas
jecxz
add
call
adc
ja
adcb
mov
repnz
cmpl
stos
sub
dec
fimull
imul
pushf
pop
sbb
jae
sbb
xchg
daa
xchg
xchg
cmp
das
cmpl
lret
xor
mov
dec
lahf
or
mov
pop
pop
jo
inc
test
push
sub
cmp
jl
adc
loopne
aam
repnz
adc
scas
push
inc
test
add
xorl
jp
sub
testb
or
adc
mov
in
je
in
sbb
mov
mov
hlt
cmpsb
mov
out
pop
mov
sbb
cmp
inc
jle
fisubs
pop
xlat
out
adc
shlw
loope
rol
add
lahf
cltd
sbbb
stc
inc
inc
outsl
mov
push
aaa
pushf
cmp
pop
sbb
push
or
sub
jns
mov
ljmp
ja
adc
push
popa
fs
dec
cltd
dec
mov
dec
aas
mov
add
inc
cmp
insl
imul
xchg
inc
mov
lock
mov
jge
cmp
dec
rorb
sbb
movsl
icebp
stos
sub
push
in
in
test
push
arpl
mov
fidivrs
aad
push
xchg
fmul
hlt
sbbb
add
shrb
xor
sbb
jg
stc
out
adc
gs
cltd
cmp
xor
icebp
sbb
imul
xchg
pop
mov
mov
pop
in
inc
mov
daa
lcall
jl
je
sub
das
mov
dec
xor
mov
and
adc
dec
add
cmp
sub
push
jl
jp
repz
adcb
rcrb
fnstenv
lock
out
lock
jmp
adc
push
adc
pop
mov
pushf
push
mov
in
jge
add
xchg
or
pop
sbb
loop
push
les
inc
lods
divl
in
pop
mov
mull
push
out
sub
adc
sub
add
jmp
in
xor
sub
fcmove
in
mov
lea
push
and
xor
cltd
inc
adc
dec
pop
scas
stos
sub
inc
inc
insb
sub
scas
dec
push
xor
fwait
add
mov
test
sub
inc
and
pop
xchg
jb
jecxz
mov
dec
mov
inc
test
inc
rcrl
sbb
shl
add
and
pop
xchg
push
lret
arpl
mov
xchg
sti
add
int3
dec
popa
sub
dec
fdivrs
dec
shlb
sub
rorb
int3
sbb
es
jnp
sub
mov
push
loopne
jmp
stos
addb
movsl
sti
push
xor
mov
and
and
sbb
add
cmp
imul
dec
dec
ss
insl
sub
mov
add
repnz
aam
add
es
subb
negl
sub
int
int
cmp
cmc
inc
mov
mov
icebp
fstpl
shrb
push
outsl
mov
pop
jle
std
lds
ljmp
cmc
push
sub
push
test
stc
ret
add
repz
clc
ja
mov
add
pop
sbb
out
stos
test
popa
or
mov
fcmove
sbb
sub
insl
or
ret
clc
rcll
sub
gs
sahf
push
movsb
sbb
sub
in
iret
aad
es
xchg
int3
outsl
std
and
mov
jo
out
or
fucomi
mov
mov
aad
pop
je
xchg
lods
cmp
inc
fisttpll
out
js
mov
or
ficoml
push
loop
fs
add
or
outsb
or
adc
sbb
cmp
xchg
inc
inc
jbe
inc
xor
pop
scas
shlb
inc
mov
sbb
mov
sbb
ret
mov
push
mov
aad
xchg
fidivl
fisttps
dec
icebp
mov
mov
lahf
test
or
cmpb
bound
jne
adc
js
int3
sub
push
xor
adc
cli
cmp
mov
inc
out
lret
fs
pop
xchg
and
loopne
cld
arpl
addr16
testb
fmul
sub
fcoml
cmpsb
xchg
cmovae
shr
leave
dec
push
cmp
inc
je
sub
sub
sbb
mov
xchg
xor
sar
stc
iret
push
lea
jbe
popf
mov
sgdtl
mov
mov
loopne
push
negl
sub
mov
call
push
in
mov
jmp
mov
leave
repnz
adc
pop
adc
push
jb
pop
sub
sub
out
jp
lods
mov
xchg
mov
inc
xchg
out
jne
adc
call
mov
cld
test
xchg
in
sbb
xor
arpl
movsb
jbe
popa
pop
push
mov
xchg
cmp
out
adc
testl
jb
dec
xor
pop
cmp
lock
iret
xchg
adc
pop
daa
pushf
add
fimuls
mov
cltd
mov
sub
insb
dec
fs
adc
push
test
cli
push
fcmovnu
inc
xor
icebp
or
loopne
js
shrb
lret
push
sbb
das
and
orb
jmp
or
sbb
adc
jae
fmul
std
jno
jae
mov
outsb
mov
push
fdivl
imul
mov
add
inc
inc
lea
pop
dec
ret
mov
das
test
xlat
in
rorb
popa
loope
ret
aad
aaa
cmp
mov
out
decl
sbb
test
push
ret
fstps
fcomi
and
sub
hlt
sbb
add
adc
mov
test
sub
mov
es
cli
xchg
cmp
cmp
inc
cmp
jno
adc
pop
jnp
cld
mov
std
push
mov
movsb
rcrl
test
je
sarl
adc
add
pushf
inc
cld
pop
stos
test
das
test
cli
mov
inc
xchg
pop
adc
cmp
sarb
cwtl
cld
dec
xchg
lahf
cmpb
xchg
fsts
into
cmc
mov
jmp
xchg
xchg
jmp
inc
call
cmpsl
setne
test
addr16
mov
mov
cmp
out
aad
mov
or
daa
nop
lock
int
fcmovne
bound
sbb
mov
ss
aad
aas
push
lahf
push
lods
je
lea
rcrb
mov
adc
jns
addl
movsl
push
pushf
dec
xchg
int
cmp
gs
push
push
test
or
nop
add
inc
aam
mov
mov
inc
cmp
push
jmp
test
je
out
mov
rcrl
cmc
adc
jg
xchg
test
jecxz
add
mov
fcomps
pop
test
lds
jo
iret
ret
sbb
add
jecxz
sbb
cwtl
fiadds
dec
test
xchg
mov
repnz
das
mov
subl
mov
jl
hlt
mov
jle
xchg
mov
into
and
in
imul
ljmp
mov
xorl
ds
mov
fwait
call
pop
in
std
lcall
das
xor
mov
push
jae
add
jb
jge
int
mov
mov
cld
xchg
pop
xchg
ja
push
or
fwait
pop
cli
pop
cmp
pop
rcll
jne
push
movsb
mov
std
mov
fdivrp
add
inc
jg
lea
dec
sub
xlat
pop
mov
imul
int
cmpsb
lret
xchg
jb
inc
inc
out
sub
mov
jnp
arpl
push
dec
adc
mov
cmp
add
xor
ficoms
inc
pop
enter
inc
push
das
test
enter
jns
adc
negl
or
add
push
popf
xchg
loope
jnp
out
xchg
jecxz
in
cmp
adc
cmp
inc
xchg
das
cmp
xlat
aad
and
popa
mov
mov
cli
or
or
pusha
dec
aam
push
jo
or
sub
pop
outsb
jl
fwait
out
dec
testb
hlt
sub
ffreep
sar
fcompl
lods
js
in
sbb
and
lock
push
pop
push
ret
mov
pop
mov
mov
and
cmp
mov
mov
bound
jno
jb
lretw
jecxz
push
call
push
inc
push
fisubrl
dec
out
fdivrl
sarb
jecxz
rclb
rclb
ffreep
add
mov
rcr
cmp
xor
xor
mov
xchg
es
sub
aas
cmpsb
movsl
gs
jmp
fldl
cli
jecxz
popa
clc
stc
push
mov
pop
into
push
cmp
inc
daa
sbb
pusha
xor
sub
mov
push
std
rorb
dec
into
pusha
mov
sbb
imul
in
add
shrb
inc
imul
mov
sbb
rcr
int3
dec
gs
lock
gs
jmp
mov
inc
xor
ret
mov
sti
xchg
mov
push
out
mov
ds
in
pop
fnstsw
test
imul
pop
loopne
movsl
sub
adc
jb
insb
inc
sub
jge
cmpsb
or
add
jne
add
dec
dec
adc
mov
jno
into
push
bound
adc
dec
out
in
pop
sbb
stos
inc
rol
fs
repnz
jae
js
ss
fadd
push
scas
inc
sahf
pop
das
inc
pop
fldl
loop
cltd
mov
into
mov
push
movsb
mov
scas
xchg
push
data16
add
mov
adc
cmp
lods
sbb
aas
fwait
mov
rolb
shrb
jno
jp
dec
fs
aam
sub
and
scas
sub
into
dec
outsl
cs
adc
int3
xchg
ljmp
repnz
pop
push
push
jmp
add
and
aam
int
and
xlat
pop
pop
push
mov
aad
movsb
in
push
sti
pop
neg
mov
repnz
mov
cli
ficoml
pop
out
sahf
dec
mov
add
jg
sbb
sbb
imul
pop
adc
xchg
dec
mov
cld
js
lods
jge
jecxz
ljmp
pusha
xlat
and
out
adc
sub
fnsave
flds
jmp
outsb
sub
arpl
fs
inc
jmp
mov
xor
in
lea
ds
adc
test
mov
inc
daa
cmp
jmp
ss
push
mov
inc
pop
ret
ljmp
fmuls
dec
xor
popa
pop
adc
sti
in
or
push
int
insl
movsb
mov
lahf
or
jmp
push
jo
leave
jnp
fldcw
adc
hlt
pusha
sub
jne
cs
inc
js
mov
dec
sub
repnz
jb
inc
dec
repnz
push
xchg
jb
outsb
ret
fdivr
cli
jo
outsb
stos
mov
inc
in
xlat
xchg
cmc
xchg
popf
inc
lods
outsb
sbb
xchg
mov
push
aas
clc
das
stos
or
dec
push
or
xor
insb
insl
mov
push
pop
dec
dec
leave
pop
mov
jp
pop
ss
lret
popf
mov
cmpl
call
sub
cmp
mov
xor
daa
mov
inc
or
in
cmp
add
xchg
pop
xor
aas
jg
jle
and
pop
andl
mov
aas
sti
leave
into
jmp
jl
xor
ror
ljmp
sbb
call
mov
pop
mov
mov
shll
cmpsb
adc
stos
lcall
push
inc
push
jnp
mov
dec
adc
movsl
test
test
test
mov
ljmp
lods
inc
pop
jae
mov
vpunpcklbw
pop
in
cmpsb
add
test
movsb
push
cmc
out
js
shrl
mov
and
and
loop
xchg
rcll
dec
xchg
psrad
dec
mov
jae
mov
pop
imul
jnp
out
sbb
sbb
hlt
shlb
or
xor
cmpsl
mov
or
mov
rorb
test
jecxz
nop
movsl
lds
pusha
push
out
sahf
rolb
cmc
inc
add
in
cmp
aas
outsb
sub
loop
push
xlat
cld
loopne
sub
int3
outsb
mov
and
outsb
sub
sahf
popf
xchg
fstps
inc
add
daa
orl
cmpsl
arpl
fimull
scas
mov
pop
fwait
in
iret
push
and
pop
or
pop
sub
adc
jecxz
push
jne
mov
sahf
hlt
pop
cmp
lods
lods
incb
dec
mov
out
loope
mov
fiadds
icebp
add
jmp
mul
cmp
or
std
aad
push
mov
cmp
std
imul
xorb
lock
mov
sbb
cltd
jmp
rclb
imul
or
jno
adc
cmp
xor
andl
movsb
shlb
insl
push
mov
cmp
push
cmp
cmp
and
into
jnp
push
nop
jbe
pop
pop
in
stc
xlat
adc
adcl
and
cmp
xor
mov
imul
inc
sub
lock
or
test
mov
insb
mov
add
add
pop
xchg
adc
mov
pop
and
xchg
nop
iret
int3
pop
sbb
sub
and
ljmp
pop
loope
xorb
pop
jno
lods
push
dec
nop
or
cs
inc
adc
dec
lods
iret
mov
js
aam
dec
mov
and
aas
movsb
cmp
adc
adc
daa
daa
les
sub
scas
mov
mov
pop
in
pushf
and
push
outsl
add
in
pop
and
jmp
push
pop
enter
mov
bound
rorl
mov
and
out
jne
mov
fs
sbbb
jle
loopne
stos
ret
xchg
mov
mov
xlat
pop
insl
xchg
mov
push
cmpsl
inc
pop
test
or
xchg
es
cmpsl
push
jo
inc
push
cmpsb
cmp
mov
mov
gs
add
imul
js
stos
jne
xchg
xchg
lahf
dec
shlb
fstpl
cmp
outsb
push
jne
mov
imul
adc
aas
ja
insb
ss
enter
bound
jns
xchg
or
les
jb
addr16
movsb
pop
movsl
pop
ficoms
dec
pop
test
mov
test
mov
add
push
push
add
in
or
movsb
pop
fisubrs
add
sbb
cmpsb
jbe
and
inc
mov
mov
jmp
nop
mov
lock
xchg
mov
sub
mov
int3
adc
xor
scas
in
punpckhwd
popf
out
testb
and
shlb
in
out
stos
xor
cmpsl
fsubp
inc
hlt
loope
or
dec
popa
aaa
and
imul
inc
es
push
mov
fs
sysret
sub
lds
or
aaa
inc
cld
lret
mov
sbb
jl
pusha
push
push
inc
add
inc
pop
push
add
and
out
movsl
add
dec
or
and
inc
mov
and
push
dec
and
and
ss
sbb
in
mov
push
or
xor
cmpsl
cmpsl
out
sar
xor
lods
xchg
movsb
pop
inc
xor
cli
iret
add
ss
dec
addr16
xchg
out
fld
into
push
mov
cmp
xchg
add
inc
mov
mov
or
dec
xlat
iret
int
popa
mov
out
push
test
push
lods
mov
pop
push
loope
aad
std
lods
push
sub
cmpsl
inc
jge
imul
inc
cld
mov
cmc
dec
int3
sub
iret
loop
mov
and
daa
sub
pushf
lods
test
shrb
shrl
jns
aas
jp
push
jmp
insb
pop
or
negb
stos
inc
adc
in
scas
hlt
xchg
pop
mov
adc
mov
and
rolb
sbb
addb
inc
popf
and
int3
inc
mov
or
lahf
aad
in
cmp
and
fbld
jae
sti
sub
mov
lds
stos
enter
xchg
cmp
xlat
gs
pop
roll
mov
xor
js
scas
iret
inc
sbb
mov
lret
push
lods
sbb
add
repnz
aad
adc
mov
mov
cmp
cld
and
pop
xchg
sbb
dec
cli
fimull
lret
and
xchg
ljmp
cltd
pop
inc
rol
push
jbe
sub
xchg
lahf
or
or
xchg
test
shll
adc
inc
mov
jge
fnstenv
sbb
lock
lahf
cmc
outsl
pop
leave
lahf
out
sub
add
pop
push
repnz
js
sbb
lea
xor
mov
shll
and
lods
jmp
shl
aam
js
sub
es
je
push
pop
mov
cwtl
sbb
jg
arpl
xor
mov
xchg
jb,pn
mov
imull
dec
out
pop
sub
pop
mov
ret
sbb
cli
adc
aam
pop
xchg
jmp
jle
movd
aas
imul
mov
and
pop
cmp
cld
dec
into
ror
es
pushf
shlb
cld
pop
sub
fmull
mov
cli
loopne
mov
add
add
ret
repz
aam
mov
push
and
cmpps
push
mov
enter
push
lcallw
ss
ja
punpckhdq
pop
add
and
and
ror
pop
popa
adc
fildl
adc
mov
push
in
test
mov
jo
bound
je
and
mov
lahf
out
daa
nop
and
pusha
lahf
clc
xchg
sbb
mov
mov
inc
leave
ds
cmp
xchg
scas
dec
and
pop
and
xor
jge
aad
dec
jbe
mov
push
fwait
lods
out
mov
add
test
xchg
rolb
std
cs
mov
or
cmpsl
imul
push
inc
jmp
cmpsl
or
push
out
adc
popf
stos
in
mov
int
in
movsb
inc
aad
add
pop
jno
rcrl
divb
dec
fists
xchg
xchg
cmp
xchg
xor
mov
ljmp
pop
sti
mov
jp
int
push
rcl
sbb
in
sub
insl
push
cmp
stos
mov
mov
or
mov
cmpsl
mov
fdivl
fdivrs
das
enter
jl
das
cli
inc
mov
icebp
sub
xchg
mov
popa
jmp
hlt
imul
xchg
fnsave
das
or
cmp
dec
nop
mov
lcall
ss
xchg
pop
pop
cmpsl
mov
xor
fsts
rcll
mov
mov
and
leave
dec
cmpsb
jbe
mov
cld
adc
shll
xor
shl
or
sbb
mov
inc
xchg
cmp
inc
std
jecxz
mov
pop
push
fcoms
push
call
jne
out
xchg
imul
jnp
cmp
sbb
cmp
pop
or
pop
dec
loope
ret
and
add
xor
cmpsl
pop
adc
pop
xchg
lods
sarl
lods
pop
rcrl
hlt
cmp
mov
leave
test
sti
inc
cld
cmp
outsb
fidivrs
fs
lret
jbe
cmp
fs
xchg
mov
fs
scas
fmuls
pop
shll
scas
sbb
pop
fsubrl
xchg
popf
mov
push
inc
xchg
xor
add
lret
imul
das
xor
mov
xor
cmc
popa
fwait
or
add
xchg
pushf
in
sahf
or
leave
ljmp
sub
mov
push
add
test
adc
or
repnz
js
popf
mov
std
xchg
frstor
adc
add
pop
test
jp
orl
push
decb
stos
mov
jae
push
pop
nop
jb
fsubs
and
jp
daa
mov
mov
fwait
jle
cmp
xor
xchg
in
or
pop
sub
mov
lahf
ss
outsb
mov
repnz
inc
push
dec
dec
sbb
mov
cmp
fistpll
pop
push
popa
js
js
mov
and
cmp
jne
enter
cltd
fs
dec
scas
xchg
jae
in
aas
adc
lea
pop
addr16
shll
cld
adc
in
and
loop
jmp
ds
ficoms
add
loopne
push
cli
stc
rcl
and
scas
mov
pop
jb
pop
push
into
push
sti
mov
lret
xor
and
xchg
push
cmp
xchg
mov
and
dec
enter
movd
pop
arpl
mov
pop
jle
stc
stos
mov
mov
clc
jl
xlat
jge
or
pop
xor
jge
cmpsb
ficomps
inc
jbe
jbe
add
pop
lds
outsb
xor
lcall
push
testb
adc
push
orb
xchg
scas
cmp
test
xchg
pop
push
lret
pop
push
jo
jbe
mov
jbe
test
cltd
rcll
and
sub
and
mov
das
adc
inc
sbb
dec
xchg
lret
es
mov
js
mov
push
fsubrp
ficompl
bound
lods
jns
fwait
adc
ljmp
pop
adc
rclb
ret
or
xchg
lcall
cmp
push
push
adc
cwtl
or
fwait
scas
cmc
mov
push
aad
insb
lds
repz
icebp
xor
jle
push
leave
xchg
clc
dec
test
pop
bound
sarl
push
adc
and
insb
push
pop
mov
dec
mov
sbb
fistl
and
or
stos
xchg
dec
xor
xor
lahf
icebp
xlat
lock
incl
fs
dec
mov
stos
xchg
add
and
in
jge
sub
loopne
inc
lret
add
jne
adc
leave
push
sbb
int3
dec
cmp
and
jmp
daa
rcrl
dec
or
push
pushf
or
pop
mov
jg
int3
in
imul
jnp
loop
pop
xor
mov
out
or
popf
or
or
jecxz
movb
xor
jl
lret
dec
mov
aas
push
stc
push
lods
adc
xchg
jmp
push
pop
leave
imul
add
and
lock
adc
sub
push
sub
xchg
inc
xchg
test
jo
add
addr16
xlat
jp
stos
jge
xchg
jle
mov
cld
push
icebp
xor
xor
dec
push
sub
jge
data16
mov
repz
push
xor
testb
fwait
in
es
jecxz
outsl
mov
insb
in
cmpsl
in
lods
ss
mov
fisubl
ljmp
push
xlat
inc
sub
sbb
add
mov
mov
cwtl
shl
imul
adcb
sarb
or
int3
jl
push
xor
dec
mov
add
adc
cmp
xor
push
mov
loopne
push
inc
imulb
mov
xor
in
or
inc
nop
inc
stc
fstpl
push
jne
sub
jp
jp
sub
ret
leave
dec
sar
jnp
and
adc
shlb
adc
repnz
sti
inc
dec
xor
adc
xor
mov
loop
int3
adc
fbstp
jb
sbb
xchg
push
pop
pusha
mov
fsts
jg
icebp
sbbl
pop
int3
xchg
in
xor
stos
dec
clc
shll
dec
inc
xorl
jne
fisubl
sbb
sbb
inc
or
jo
aad
loop
xor
add
mov
lahf
arpl
cld
imul
fidivrs
inc
push
dec
mov
loopne,pt
stc
in
pop
imul
adc
cwtl
add
jge
popf
addb
xchg
sub
jne
cmpl
push
mov
jg
sahf
pop
push
rolb
push
pop
push
ret
iret
stos
mov
std
mov
sbb
movb
lcall
xchg
fdivrs
rcrb
lcall
int3
pop
movsb
ret
insl
push
adc
pop
jae
or
adc
scas
jle
pop
mov
gs
arpl
std
xor
jecxz
inc
pusha
loopne
adc
andb
pop
jne
scas
sbb
jne
decb
push
dec
in
bound
jmp
dec
addr16
jae
daa
fstpl
push
nop
fwait
ja
ds
outsl
push
rorb
fadds
xor
xor
loopne
in
outsb
and
sub
ds
movsb
stc
fcompl
pusha
xor
lods
cmp
xchg
out
addr16
in
clc
pushf
mov
sarb
addr16
les
mov
add
add
xor
loopne
setbe
cmpb
jno
sar
mov
jl
pushf
push
cld
dec
je
mov
out
lods
into
subb
je
and
mov
jecxz
inc
out
push
test
in
insl
or
adc
or
es
rorb
dec
addl
cmc
cmpsb
xor
or
dec
hlt
mov
jp
sub
xchg
xor
mov
dec
jno
and
fs
rorl
int
or
jge
cmp
fwait
sahf
cli
mov
das
subb
inc
arpl
cmp
fwait
outsl
xchg
in
pop
push
fs
inc
mov
int
cmp
adc
mov
cmp
dec
cmp
mov
fdivrs
jge
xchg
insl
lods
stos
jbe
mov
cmp
cltd
add
jl
fimuls
cmp
and
adc
mov
mov
sarl
repz
mov
cmc
mov
adc
fistps
jo
sub
les
insl
xchg
pop
add
clc
jbe
cmc
shrl
imul
add
pop
scas
cmp
mov
push
mov
jne
fistpl
in
push
adc
pop
outsl
jae
imul
lods
lcall
fs
push
rcr
lret
shrb
roll
jo
pop
gs
inc
and
xchg
in
enter
and
dec
or
dec
jns
or
in
jmp
cs
mov
int
mov
lods
xchg
inc
sub
dec
lds
xchg
rorb
cmp
jbe
loopne
fwait
int3
xchg
xlat
clc
sbb
jne
inc
push
and
subb
pop
test
ja
iret
movsl
mov
dec
in
loopne
dec
insb
mov
bound
iret
lods
daa
xchg
ljmp
mov
dec
mov
inc
and
and
sbb
xor
stos
loopne
jo
in
xchg
push
adc
pop
jecxz
and
bound
ret
fnsave
sub
push
lea
xchg
dec
cmp
gs
fdivrs
loope
jnp
cmp
pop
adc
in
dec
fnsave
xor
mov
xor
addr16
cs
data16
cmp
test
in
inc
fcompl
lds
mov
jae
xchg
jno
inc
arpl
mov
xlat
dec
pop
xchg
xchg
add
repz
orb
jbe
cmp
std
push
pop
adc
mov
jb
in
mul
rorl
test
in
adc
stos
cli
add
imul
cmp
xchg
aad
xchg
push
hlt
mov
ret
ja
jbe
dec
iret
fsubl
push
mov
dec
test
mov
and
test
add
femms
push
unpckhps
cmp
rorb
in
cld
int
shrb
mov
in
ss
jo
out
or
in
pop
mov
push
ljmp
cltd
sarl
add
xchg
inc
movsl
add
add
repnz
in
or
test
int
orb
lods
inc
jne
test
mov
cli
jecxz
or
jne
mov
or
sub
cli
mov
mov
cmp
pop
movntq
sbb
push
jb
iret
xor
adc
idivb
les
and
cli
mov
inc
gs
jno
sbb
dec
ror
mov
int3
jne
outsb
jb
fisubs
mov
cwtl
jmp
push
pop
leave
xor
gs
push
cmc
push
loopne
push
xchg
adc
sub
mov
enter
inc
jp
fwait
lret
dec
inc
cmp
lock
xchg
call
mov
cmp
mov
mov
jae
mov
sar
xchg
ljmp
and
xor
sub
push
sarl
nop
cwtl
pop
add
jecxz
lock
and
sbb
out
mov
ds
jne
and
imull
sub
add
inc
pop
push
int3
add
mov
mov
mov
jno
ret
lea
or
ret
pop
jg
push
sarl
mov
and
pop
jge
hlt
in
xchg
test
add
fmul
sub
ret
xor
push
out
sub
mov
cmc
out
das
pop
rcl
out
pop
or
sub
cmc
cmpsl
sti
jnp
shlb
xor
mov
icebp
jge
mov
add
xor
data16
xchg
jle
mov
leave
xor
push
shrb
cmp
shrl
or
loopne
mov
jge
or
inc
clc
sbb
out
aam
pop
inc
xor
cwtl
cwtl
cmp
cmpl
addr16
lds
and
ds
xor
aam
jo
ja
cmc
shl
xchg
test
cmpl
add
scas
movsl
pop
xchg
jg
xor
fldcw
cmp
dec
pop
andb
xor
add
mov
daa
int3
inc
std
mov
dec
stc
imulb
adc
adc
nop
ljmp
xchg
sbb
loopne
xchg
je
fs
push
and
pop
inc
cli
adc
push
clc
xlat
dec
push
adc
test
and
mov
and
in
adc
cmp
dec
push
pop
inc
push
cli
cmpsb
jae
cmp
mov
sub
push
or
push
xor
inc
adc
cmp
scas
mov
jge
inc
jns
pusha
add
sbb
mov
loope
adc
jo
push
push
mov
les
push
sti
ja
inc
inc
call
das
jo
stos
jge
mov
scas
mov
data16
xor
or
lds
jb
lock
push
fmul
imul
scas
add
mov
jns
pop
dec
dec
or
add
sub
cld
out
stos
stos
shrb
fs
daa
fs
jno
mov
xorl
push
dec
sti
xchg
push
push
push
fwait
loopne
outsb
add
sti
out
cmc
mov
lock
push
jg
imul
cmp
test
ss
dec
mov
push
mov
aas
mov
scas
dec
or
sbb
ja
ret
cmc
mov
dec
xchg
fiaddl
outsl
push
mov
clc
fsubrs
xchg
inc
mov
mov
mov
mov
adc
stc
sbb
pop
andl
dec
sub
add
inc
fldenv
or
cmp
pop
loopne
jle
jns
xchg
cltd
int3
mov
lods
mov
popl
adc
mov
daa
outsb
clc
push
jb
jae
jle
cmp
adc
mov
into
mov
push
jno
shlb
mov
adc
pop
mov
int
ljmp
out
shll
xchg
sarb
mov
dec
xchg
xorps
push
xchg
and
inc
pop
or
lcall
sub
sub
push
popl
add
mov
iret
or
pop
loopne
pop
push
test
pop
xchg
icebp
sub
push
mov
mov
mov
or
jle
inc
jmp
aas
lret
push
rcrb
jle
dec
sbb
xchg
jns
cs
mov
xor
adc
cmp
cmp
cwtl
popf
or
pop
or
fcomp
leave
jg
sbb
adc
push
mov
std
imul
push
fimull
out
push
cmp
sbb
jmp
aad
insl
fwait
sub
xchg
or
push
sarl
jno
xchg
movsb
sub
jp
aaa
xchg
fstp
movsb
xchg
out
pop
fs
jno
rclb
insl
pop
cld
daa
sub
movsb
pop
lods
ret
jl
xor
ret
fs
mov
pusha
ret
iret
or
loop
nop
dec
inc
sahf
adc
stos
jbe
xor
iret
cmp
mov
mov
enter
mov
movl
shl
dec
xorb
adc
jmp
inc
sub
addr16
mov
adc
sarb
cmpsb
neg
dec
sbb
movb
lods
aam
icebp
sub
insb
mov
xchg
jle
subl
pop
jo
test
int
fwait
ljmp
cmp
js
stos
jbe
xor
jl
sub
mov
outsb
adc
inc
fs
stos
fildll
lds
cld
add
jae
outsl
pop
test
dec
mov
adc
stos
and
popa
cmp
aas
mov
add
or
mov
inc
inc
jge
sbb
xor
pop
jnp
pop
imul
mov
loopne
lahf
sub
loopw
imul
not
push
mov
and
popf
and
ret
in
div
mov
out
xor
sbb
fisttpll
int3
mov
xlat
add
push
ret
in
idivb
mov
mov
dec
dec
dec
mov
inc
xor
sub
lret
js
xchg
xchg
xchg
mov
stc
popf
sub
sub
jecxz
daa
sub
fisubs
pop
popf
ss
mov
mov
aam
ret
xchg
es
repz
into
mov
add
cmp
dec
or
daa
dec
cmp
push
sti
jecxz
faddl
or
shll
es
fs
or
rclb
sub
sbb
call
js
mov
idivl
or
arpl
fdivrs
int3
mov
mov
sub
fwait
int3
call
sbb
arpl
add
pop
pop
int3
jnp
or
inc
or
push
cmc
push
xchg
arpl
xor
daa
add
es
adc
lret
mov
jg
mov
or
nop
fldenv
movsl
jae
stos
fidivs
jo
sti
hlt
adc
jns
add
push
or
jmp
jne
xchg
je
das
in
outsb
cmp
inc
orl
xchg
jp
cmp
sub
xchg
xchg
pop
adc
dec
dec
jle
scas
jmp
shlb
cmp
sub
xor
lret
sub
sbb
cld
adc
and
popl
adc
jo
std
xor
fadds
inc
cmovno
dec
hlt
int
stos
and
aam
enter
dec
inc
cmp
cmp
add
pop
cli
and
xchg
xchg
insl
fdivl
les
push
cmp
add
pop
xchg
mov
test
test
test
mov
ret
jnp
movsb
movsl
movsl
add
mov
jne
sub
dec
inc
xor
push
add
iret
sbb
jbe
mov
in
and
iret
sub
shl
stos
in
leavew
ds
dec
insb
cmp
cltd
jp
adc
fwait
mov
push
or
icebp
aad
inc
js
mov
fstl
mov
rcrl
lods
cli
in
jns
mov
mul
mov
cld
or
add
push
movsl
jmp
jae
test
mov
jge
fs
loop
mov
mov
and
test
jmp
xor
clc
into
popa
dec
fmull
arpl
pop
push
aam
out
outsl
dec
jg
jecxz
cli
adc
sti
mov
sub
inc
cld
sub
sbb
sbb
enter
cmp
dec
int3
ret
scas
jmp
adc
ret
or
sub
push
and
push
jbe
ja
xchg
jb
add
fdivrs
lret
leave
addr16
outsl
mov
out
jnp
add
jmp
dec
js
lock
inc
adc
pop
fs
lock
push
jne
icebp
xor
in
xor
cwtl
sub
fs
or
in
shrb
jecxz
daa
xor
aas
xor
or
fldcw
push
or
push
stos
ljmp
add
in
mov
and
jae
xchg
dec
add
jnp
fadd
fwait
shrl
xlat
mov
xchg
xor
insl
scas
cmpsb
mov
mov
filds
jecxz
sub
cmc
and
dec
xor
aaa
rcr
repz
mov
out
mov
inc
sbb
xchg
mov
gs
aaa
dec
xchg
loopne
jb
roll
repz
pop
mov
js
mov
jo
stc
int3
mov
jl
outsb
or
mov
mov
out
cli
imul
pop
cmp
xor
jle
lret
data16
sub
bound
mov
dec
push
push
ss
jl
jne
mov
mov
pop
and
adc
lock
jmp
cmp
pop
add
les
pop
movsl
push
data16
xchg
gs
ficompl
dec
int
push
mov
pop
std
xchg
mov
int3
mov
pop
gs
mov
mov
stos
imul
xchg
repz
in
xchg
lcall
sbb
mov
out
push
loop
lea
pop
lock
inc
add
sahf
jb
sub
or
sbb
ds
fldt
xchg
and
test
rcll
dec
fs
cs
popa
in
jo
dec
imull
jne
lcall
sarl
movsl
je
xchg
push
shlb
cltd
movsbl
xor
jnp
stos
pop
sti
adc
fwait
add
push
cmp
in
stos
xchg
cmpsl
fwait
and
mov
mov
jae
mov
jmp
pop
sbb
loop
rcl
sbb
push
jne
mov
sbb
mov
insl
call
clc
sub
ds
sub
jbe
push
xor
inc
sbb
iret
dec
and
movsb
push
outsl
mov
sub
loope
xchg
js
xchg
cli
jge
inc
mov
shll
ja
scas
mov
inc
push
cmp
popf
pop
hlt
inc
xlat
cmc
pop
mov
aad
mov
push
mov
pop
push
xor
push
enter
out
aam
adc
sub
or
cmp
push
mov
cmp
movsb
pop
test
xchg
clc
decl
sbb
jbe
scas
outsl
sar
xor
xchg
cltd
cli
push
sbb
dec
ret
adc
popa
stos
movsl
fcompl
les
repz
int3
or
inc
flds
adc
into
inc
or
mov
cs
cmp
mov
sti
into
mov
pop
dec
lods
icebp
jno
es
cmc
sarb
das
pop
int
inc
cmp
cmpsl
xorl
sbb
lcall
sub
dec
add
rcrb
lcall
or
sub
mov
insb
jle
imul
xchg
imul
adc
cltd
push
and
mov
into
in
clc
cs
pushf
xchg
js
shll
xorl
cpuid
xor
cmp
push
cmc
adc
sub
daa
inc
sbb
in
hlt
fdivrs
movsl
or
nop
leave
pop
pusha
bound
push
fst
pusha
and
sbb
adc
inc
push
adc
push
xchg
mov
in
rolb
or
fwait
sarb
pop
mov
cli
xchg
ret
xor
in
jg
mov
clc
arpl
jne
ss
mov
call
xor
mov
bnd
popa
jl
roll
in
or
daa
aaa
insb
xor
jne
in
testl
lods
js
mov
cmp
mov
fistpll
je
lods
lods
gs
filds
lds
pop
cli
jno
popa
out
movsl
pop
xchg
inc
and
xchg
cs
movsb
in
lea
push
pop
cmp
add
and
pop
mov
clc
lds
and
sub
mov
pushf
lcall
mov
imul
or
cmp
xchg
das
bound
sbb
xchg
cltd
repnz
outsb
mov
fwait
adc
mov
push
cwtl
sub
loope
or
adc
inc
insb
cmp
or
mov
mov
andb
bound
aam
testl
mov
fimuls
cltd
in
push
clc
ds
loop
faddp
xchg
scas
cld
repnz
mov
scas
in
xchg
push
cmp
add
lret
mov
inc
xchg
cmp
std
sbb
pop
fiaddl
mov
cmp
outsb
in
xor
fidivrl
sub
scas
push
adc
popa
xor
xor
das
inc
insl
int3
adc
and
mov
lea
push
out
aaa
mov
imul
loopne
clc
fstl
dec
xchg
mov
test
pop
and
or
sbb
aaa
shl
aas
popf
sub
sbb
mov
lret
xchg
push
in
jo
test
sub
xchg
push
movsb
lods
enter
mov
push
leave
inc
push
repz
or
xor
mov
mov
outsl
adc
arpl
add
ret
jae
mov
lret
notb
cmpsb
sub
cs
in
mov
loop
stos
lds
adc
pop
push
fmul
movsb
jo
jle
xchg
insb
fdivl
fld
sbb
aaa
mov
cltd
hlt
cmpb
xchg
or
scas
add
ret
pop
inc
in
call
adc
test
jb
pop
push
aam
fwait
into
pop
inc
mov
movsb
test
lret
into
pop
fistpll
sub
test
fs
repz
xor
test
ja
xor
mov
or
out
and
out
and
xchg
push
sbbl
xor
leave
fs
adc
jecxz,pt
dec
scas
add
push
inc
cs
divl
stos
xor
mov
pop
nop
jns
fdivr
pop
and
loopne
notb
mov
pop
xchg
jg
cmp
cltd
cld
push
out
pushf
push
in
shrl
sbb
cmp
xor
arpl
pop
out
jno
xchg
pop
loope
pop
xor
adc
jnp
aas
xlat
fs
aam
in
fneni(8087
rorl
adc
mov
outsb
pop
or
or
in
shlb
repz
stc
mov
fwait
jmp
jmp
bound
dec
xchg
jbe
mov
enter
sub
jae
cli
sbb
mov
and
fwait
push
movsl
xor
int3
pop
hlt
push
adc
mov
in
into
adc
or
adc
paddusw
mov
in
jo
sahf
sub
push
mov
xchg
jl
push
and
jl
loopne
outsl
imul
add
pand
or
popa
test
sub
jl
push
push
jecxz
hlt
pop
pop
loopne
xlat
lea
jmp
and
dec
out
shrb
ss
loop
dec
hlt
xor
sbb
push
ja
ljmp
scas
inc
in
divl
push
mov
push
pop
pop
mov
xchg
andb
cmp
icebp
xchg
test
inc
js
mov
lods
mov
push
mov
or
icebp
pop
lods
scas
mov
pop
sub
lods
cmp
iret
fs
addr16
in
insl
ret
xlat
cltd
lahf
adc
mov
and
repnz
cmp
pop
fldcw
push
stc
xor
mov
repnz
adc
xchg
xchg
mov
mov
jbe
or
sbb
inc
icebp
in
sbb
fsubl
mov
cmp
pop
push
test
mov
cmp
xlat
jge
pop
dec
and
or
jne
dec
leave
and
cmpsb
lods
nop
mov
lods
xchg
adc
pop
pop
mov
adc
in
push
gs
test
jae
shl
cmp
push
idiv
jl
xlat
and
and
repnz
scas
add
cmp
jne
lret
lcall
cmp
cld
fidivrl
push
das
rclb
sbb
sti
sti
push
sub
sbb
out
mov
add
pop
xor
fidivrs
mov
stc
out
loop
lahf
push
shrl
sbb
out
repz
mov
lods
stos
shlb
sub
fld
ja
lcall
xchg
jne
jno
xchg
in
insb
adc
xor
ret
pushf
and
std
frstor
cmpsl
inc
inc
es
pop
and
ljmp
ss
mov
push
pop
or
cli
dec
mov
inc
pop
dec
cmp
movsb
bound
jmp
add
pop
call
xchg
ret
jl
andb
cmovp
pop
incl
iret
jecxz
stos
andl
adc
cmp
adcb
aam
fidivrl
jmp
sbb
fidivrs
and
aad
jbe
stos
dec
pop
push
mov
sub
inc
not
push
jne
pop
xor
xor
push
roll
je
rclb
cmp
in
ja
mov
out
js
nop
mov
push
push
popf
mov
jmp
sub
push
fbstp
and
pop
jo
int
adc
sub
mov
sarb
jno
and
mov
xchg
pop
jl
add
or
outsb
call
adc
mov
dec
lret
aam
shll
or
jo
popa
aas
andb
xchg
sub
lcall
icebp
add
scas
cmp
jno
js
mov
iret
xor
sub
imul
mov
push
mov
cmp
inc
movsb
xchg
clc
sahf
adc
loopne
inc
cs
clc
cmpsb
mov
cmp
pop
pop
xchg
js
aas
imul
push
shrl
mov
shll
insl
add
dec
shlb
into
fisttpll
scas
and
and
mov
xor
in
jge
inc
fimull
mov
xchg
and
xchg
cld
xchg
mov
sar
xorl
leave
sub
imul
push
cmc
pop
xchg
inc
jle
pop
dec
jmp
dec
insb
adc
or
jbe
rcrl
lret
cmp
cmp
xchg
cmp
sbb
shll
mov
sub
lret
inc
pop
inc
pop
mov
icebp
pop
lcall
pushl
push
and
inc
fisubrl
lahf
std
adc
lods
inc
aaa
ret
or
xorl
imul
xchg
pop
or
mov
outsl
ljmp
icebp
dec
adc
mov
xchg
dec
inc
xchg
aaa
sbbb
sbbl
ja
out
cltd
adc
push
into
push
jno
pop
push
lret
jmp
mov
popf
scas
out
data16
pop
or
push
jae
rorl
adc
jmp
pusha
std
xchg
pop
lods
sbbl
cmp
fistpl
test
mov
add
inc
jns
rorb
lods
mov
add
ja
mov
sbb
mov
loop
pop
lods
into
push
sub
cmp
cmpsl
adc
push
enter
loopne
int
xchg
das
fisubrl
mov
mov
xorb
adc
cltd
push
pushl
das
jge
push
dec
insb
outsl
push
cli
add
cld
popf
lds
insl
arpl
push
jo
loope
mov
xchg
push
mov
addl
dec
lahf
fs
dec
xor
or
out
jmp
adc
movb
adc
scas
mov
add
add
bound
mov
enter
add
dec
adc
jae
push
pushf
jge
lea
xor
int3
sahf
mov
push
insl
xchg
and
pop
out
push
pop
cmpl
and
and
bound
in
aad
mov
stos
mov
xchg
push
iret
insb
cmpsl
gs
enter
mov
cs
ja
jb
or
lods
mov
jp,pt
imull
and
xor
or
fnclex
cmp
push
arpl
sub
push
cmpsl
fisttpll
and
fdivr
jae
pusha
add
mov
push
push
outsb
cwtl
push
insb
inc
jmp
inc
movsb
xchg
in
cmpl
test
mov
int
insb
scas
cmp
jge
out
orl
mov
mov
cwtl
sbb
add
fdiv
inc
mov
adc
mov
adc
xchg
mov
cmpsb
aad
dec
cli
mov
cmp
shrb
dec
xchg
lock
aad
sub
iret
addr16
push
clc
dec
cmpsb
scas
push
dec
adc
push
push
mov
mov
jns
pop
jp
loope
and
sub
addb
cmc
mov
dec
fs
sarb
fnstenv
je
dec
jo
mov
mov
dec
xchg
lock
aad
mov
xor
jns
mov
popa
jo
je
lret
jo
hlt
bound
adc
pop
adc
outsl
sub
sbb
bnd
test
cmp
shrl
pushf
xor
mov
mov
jns
xchg
jmp
hlt
ret
lock
inc
dec
sbb
clc
in
ret
dec
insl
jno
ja
xchg
sbb
sbb
mov
ficoms
and
enter
int3
fdiv
dec
addr16
adc
cmpsb
inc
xchg
lret
lahf
sub
dec
mov
mov
sbb
dec
mov
movsl
call
inc
addr16
sbbl
inc
dec
sub
inc
xor
jle
push
popa
adc
xor
xchg
cmp
shr
cmp
xor
lods
xlat
sti
shl
out
sub
sbb
push
lret
test
stos
rcll
sub
nop
movsb
loop
enter
or
mov
push
mov
in
out
xchg
lods
pop
out
or
mov
sahf
and
mov
test
xchg
xor
or
loope
mov
mov
cmp
notl
add
push
in
or
sbb
into
jae
cmp
mov
enter
imul
or
pop
adc
or
fs
ljmp
push
xor
mov
lea
rorl
repz
dec
mov
push
dec
mov
push
ret
xchg
mov
std
lret
ljmp
lods
sbb
dec
stos
or
imul
arpl
lcall
and
stos
in
or
mov
mov
push
push
btc
mov
pop
nop
add
mov
and
fwait
cs
or
repz
xchg
and
mov
test
imul
gs
cmp
rep
mov
arpl
jecxz
dec
lods
cs
jl
inc
sub
mov
stos
cli
or
xchg
xor
sub
sti
mov
arpl
stos
clc
mov
mov
gs
add
mov
outsl
sahf
or
les
movsb
adcl
pop
sbb
and
add
cmp
and
mov
aad
dec
xor
orl
mov
xchg
orl
cltd
into
in
xchg
stos
push
out
jns
sar
and
nop
les
inc
in
push
add
mov
mov
mov
repz
push
ret
sub
pop
fs
pop
jnp
cmp
fistpl
and
push
rorb
addb
pop
xchg
mov
sub
and
mov
test
aas
or
jno
adc
mov
sub
mov
leave
lcall
pop
sub
sub
das
jge
add
bound
in
push
or
fs
lret
push
rcl
push
push
xor
in
xor
and
bound
cld
stc
les
mov
lret
flds
fdivrs
loopne
outsl
pop
mov
das
inc
inc
jp
scas
enter
movsb
jno
mov
push
add
cmp
add
lret
lcall
xchg
hlt
pop
cltd
ret
add
lods
scas
imul
jbe
jno
and
sub
jb
imul
dec
es
cmp
sbb
and
mov
sbb
xchg
or
push
dec
dec
mov
mov
fildl
sub
icebp
negl
imul
testl
push
sarb
and
out
in
or
test
bound
addr16
add
fistps
push
or
shlb
ja
stos
jmp
xor
push
mov
dec
push
inc
nop
mov
ja
pop
gs
jge
sbb
popa
push
dec
inc
shlb
ja
stos
jmp
mov
cmpsb
lahf
xchg
jg
cld
lods
sub
outsb
add
jne
push
cwtl
jmp
popf
or
repz
pop
subb
scas
sbb
ss
out
mov
popf
dec
xchg
aaa
test
push
repnz
outsl
or
sub
mov
test
cltd
xor
sub
leave
fmuls
sbb
and
imul
push
xchg
pusha
test
mov
nop
decl
test
cli
and
pop
jb
cmc
jb
jp
pop
add
fadds
adc
jle
mov
or
xchg
fdivr
pop
xlat
mov
jecxz
pop
mov
inc
hlt
pusha
sti
shll
and
std
and
pop
inc
pop
jmp
mov
add
shll
xchg
insl
pop
mov
xor
dec
sub
addr16
or
mov
es
clc
stc
lcall
lods
dec
std
test
ret
leave
loopne
lret
xor
int
and
imulb
push
pop
jecxz
adc
lahf
rcll
insb
xor
sbb
adc
stos
cli
ret
lods
jecxz
das
jle
dec
push
add
jle
aad
stos
sbb
testb
lods
psubb
shll
inc
in
pusha
jl
sub
xchg
push
mov
stc
xchg
pop
mov
sbb
mov
add
push
push
data16
dec
shll
mov
test
cli
xlat
mov
inc
stos
and
cmp
xor
xchg
dec
shrl
add
loope
mov
inc
xor
mov
mov
movsl
jb
loopne
call
cmc
jo
mov
push
jb
inc
rcrl
push
jb
mov
into
sarb
mul
push
mov
sub
xor
inc
mov
xlat
push
mov
iretw
fsubl
mov
pop
push
jnp
gs
lret
and
cmp
sbb
gs
insb
test
push
or
es
js
mov
shll
mov
jle
sbb
mov
rcrb
cmpsb
cmp
ret
fdivrs
or
cwtl
sbb
mov
ffreep
cmp
orl
out
pop
les
fistpll
imull
fsubrs
iret
sbb
and
sbb
add
les
jl
data16
pop
xchg
add
push
cld
mov
repnz
add
mov
out
mov
push
sub
ja
repz
lea
insb
dec
out
rcll
xchg
test
loope
call
sbb
mov
das
pop
test
sbb
xchg
mov
pop
jmp
mov
add
push
dec
iret
lea
aad
insl
jne
xor
lea
aas
push
fdivp
iret
xchg
jnp
sub
or
pop
jmp
push
and
xchg
je
jmp
xor
dec
fwait
outsl
in
decb
movsl
imul
sub
cmp
adc
pop
rolb
xchg
stos
pop
mov
jbe
sub
jecxz
sub
rolb
in
int
imul
popf
jae
or
pop
js
test
addr16
xchg
pop
or
lahf
mov
loope
shr
decb
iret
sysret
xor
ss
test
es
or
push
popa
cli
call
lret
int3
loop
cmp
adc
pop
sbb
dec
jl
je
mov
sti
inc
call
xor
cmc
push
sub
pop
mov
push
lock
cmp
adc
imul
xlat
lahf
rclb
pop
jae
jg
pop
mov
add
mov
loope
cli
add
fdivp
into
mov
add
mov
mov
xchg
pop
jmp
testl
mov
aas
rolb
sarl
pushfw
jnp
push
sbb
scas
call
stos
pop
test
adc
imulb
jecxz
pusha
push
xlat
mov
or
mov
test
int3
mov
lods
pop
inc
or
loop
mov
sbb
inc
popf
js
xchg
sbb
rcr
add
int
imul
jmp
sub
pop
adc
add
fcoml
or
push
icebp
sub
mov
push
js
dec
int3
std
xchg
xchg
shrl
in
cld
lcall
mov
jae
out
mov
daa
js
xchg
xchg
cmpsb
dec
mov
out
insb
cwtl
out
inc
es
lcall
sub
mul
or
rolb
cwtl
ja
popa
imul
fdivrl
hlt
stc
arpl
outsb
movsb
pop
test
movsl
pop
test
ljmp
data16
jae
mov
dec
mov
push
leave
or
into
into
or
pop
in
in
pop
adc
outsl
fwait
subl
in
pop
fcompl
cmpsb
dec
xchg
or
mov
fisubrs
mov
mov
pop
cli
pop
adc
push
inc
jp
lahf
and
out
movsb
jmp
jb
xor
mov
rol
into
cmp
js
xor
push
sub
je
or
aas
or
call
cmpsl
call
nop
pop
icebp
dec
mov
jae
sbb
adc
mov
in
stos
aam
sub
dec
push
or
xchg
rcr
fs
inc
int
test
fsubrs
dec
jl
loop
xchg
mov
dec
inc
push
xor
mov
mov
jle
xchg
mov
mov
cltd
leave
out
jo
loope
leave
and
fs
or
adc
fistpll
or
add
jle
out
cmp
popa
dec
pop
ret
lea
dec
pop
repz
into
dec
fs
push
sbb
aam
sub
cmc
adc
pop
insb
aas
jg
or
mov
adc
xchg
sbb
pop
sbb
loope
pop
xor
fistl
repz
mov
insl
fstpl
xor
ret
sub
push
fisubs
test
ja
adc
dec
xchg
stos
push
mov
inc
xchg
mov
test
dec
pusha
sub
pop
call
adc
adc
mov
outsb
insl
aas
imul
fwait
scas
or
cs
dec
mov
nop
idivl
cmp
sbb
or
insl
test
push
je
enter
leave
in
dec
insl
adc
cs
mov
dec
push
jns
mov
dec
mov
xor
jb
rcrl
cmc
jecxz
and
loope
inc
cmpsl
push
and
adc
pop
icebp
add
add
pop
xchg
imul
jnp
mov
lahf
rcrl
xor
sarb
mov
test
and
xchg
push
jmp
lret
dec
push
fimull
popf
in
or
jg
mov
add
add
sar
sub
and
jo
std
cmc
addb
fbstp
push
sbb
push
loop
xchg
mov
push
xor
cmp
sub
fisubrs
insb
push
imul
push
cli
aas
xchg
dec
jnp
mov
leave
cld
jp
mov
mov
sti
jmp
test
in
sbbb
xchg
pop
dec
loopne
les
fsts
loop
jmp
adc
lea
sbb
stc
test
int3
sarb
sbb
out
aaa
in
push
testb
outsb
call
push
xor
outsb
repz
jecxz
rcrl
push
push
sub
cmpsl
xchg
dec
leave
inc
dec
push
and
pushf
sbb
std
fdivrl
loope
mov
and
insb
mov
test
dec
push
pusha
sub
mov
pop
adc
leave
adc
xor
int
dec
mov
sar
add
sti
pop
inc
mov
flds
jae
mov
adc
lret
int3
lea
mov
mov
or
dec
movsb
fiadds
push
test
jecxz
inc
add
loope
cwtl
jno
in
cltd
cmp
dec
in
jbe
jne
lahf
lahf
cmp
pop
bound
adc
xchg
push
ds
adc
push
cmp
std
sbbb
fidivrs
fwait
shll
cltd
cld
aaa
jle
adc
pop
jo
sub
es
sbb
testl
pop
test
fadd
rcrb
push
mov
out
or
fwait
lock
test
aad
dec
adc
inc
cmp
mov
jl
aaa
int3
in
push
xchg
aas
jno
sbb
jg
adc
je
adc
inc
cmp
cwtl
xlat
inc
or
pop
cwtl
cli
data16
jbe
xchg
mov
and
repz
push
movsl
movsl
xor
adc
inc
or
cmp
push
std
popa
mov
lea
andb
push
sbb
sub
push
shll
jo
out
ja
jae
inc
loop
out
insb
cwtl
out
inc
es
imul
insl
fs
add
mov
xor
adc
cmovb
std
or
mov
cltd
xchg
push
sbb
fldenv
in
add
lahf
adc
stos
test
pop
push
fcmovnb
sub
ja
fnsave
clc
ret
aaa
mov
pop
push
mov
add
cmpsb
cmp
mov
pop
pusha
jnp
xor
xchg
or
fstl
inc
sub
dec
xorb
pop
iret
push
jbe
mov
mov
aad
sub
leave
aaa
pop
dec
arpl
jp
cmp
aad
xchg
sub
mov
rolb
mov
js
mov
mov
ljmp
and
push
sahf
xorl
imul
cmp
loopne
jns
mov
mov
cmp
pop
jbe
mov
test
jbe
out
mov
shll
in
mov
std
add
pop
std
pop
cli
testl
pop
dec
insl
and
or
fldt
pop
mov
add
inc
sbb
in
cmpsb
out
xchg
mov
sub
test
dec
shlb
loopne
loopne
int
ljmp
sbb
push
cli
pop
in
jns
out
adc
jo
pop
mov
add
and
cmp
adc
sub
dec
gs
stc
sahf
mov
ss
out
int3
xchg
xchg
push
sub
fidivs
mov
mov
jecxz
mov
aaa
mov
and
mov
dec
mov
jns
int3
mov
in
or
in
sbb
xchg
test
pop
push
pop
lods
cmp
xchg
jle
ret
pushf
lret
dec
push
jl
or
cmp
jae
ds
in
sbb
adc
jne
xor
cltd
xchg
test
xchg
cli
in
xchg
cmp
mov
lock
iret
and
push
inc
mov
std
sarl
mov
aad
imul
jecxz
daa
aam
mov
outsb
ja
orb
pusha
sub
push
jg
push
in
adc
cmpl
sub
sub
push
xchg
dec
jecxz
adc
pop
hlt
push
dec
add
jns
stc
or
arpl
pop
das
insb
push
shlb
rorl
sbbb
out
sti
xor
insl
inc
test
cmp
stos
sub
push
das
insl
xchg
dec
add
adc
bound
pop
hlt
outsl
pop
sbb
mov
jne
push
mov
icebp
call
xor
mov
lods
push
das
test
in
sub
jg
cmp
or
cmp
add
jl
je
mov
sti
inc
lahf
dec
lods
xchg
add
ret
inc
add
push
add
dec
test
xor
mull
push
xor
dec
int
mov
mov
cli
out
bound
out
jae
adc
sbb
test
xor
jmp
ret
sub
pop
sbb
orl
out
dec
add
mov
cmp
jmp
mov
adc
jb
scas
fmul
insb
pushf
cmc
bound
cmc
mov
mov
dec
lods
loopne
stc
adc
push
pop
cli
mov
popa
xchg
dec
sahf
jge
adc
imul
test
jp
aam
sub
sbb
pushf
mov
pop
fisttpll
dec
call
push
mov
in
test
cmp
xor
out
mov
neg
pop
es
and
stos
push
lods
stos
lret
mov
sti
es
xor
pop
xor
xor
sub
xor
mov
and
sbb
shlb
push
jne
stos
sub
adc
lea
cmpl
in
aas
and
push
movsl
clc
xchg
mov
fsubr
lods
out
clc
inc
shrb
rcll
test
add
rcl
push
sbb
or
push
das
daa
nop
inc
push
ret
ret
ret
xchg
popa
cs
test
imul
rol
mov
sub
push
mov
arpl
pop
sub
popf
sbb
rol
jnp
mov
jge
in
mov
cmpl
ret
jae
xchg
sahf
daa
roll
jge
shll
insb
subb
loope
jnp
pop
flds
sbb
pmulhw
push
rclb
and
add
scas
loope
cli
call
out
jp
mov
jnp
movsb
sub
fidivrl
push
in
push
bound
or
ds
sub
out
pushf
xchg
loope
dec
clc
inc
dec
test
and
mov
shll
cli
cmp
sub
jp
mov
lahf
or
sub
or
lcall
sub
xor
inc
sbb
pop
loop
in
jb
jno
mov
and
subb
jg
lds
imul
or
jle
gs
std
jno
jmp
ret
xchg
bound
inc
pop
jns
popf
lret
pop
adc
pusha
clc
mov
add
into
mov
adc
mov
fwait
les
repz
cmp
inc
cmpsb
jae
adc
pop
enter
push
pop
fnstcw
mov
inc
dec
adcb
inc
stc
push
pop
arpl
cs
push
inc
ret
jge
ja
push
pop
dec
adc
add
jns
fsubrs
inc
hlt
push
fistl
push
aaa
mov
pop
inc
lret
cmp
cmpsl
mov
out
pop
daa
push
sbb
cmp
lret
inc
sub
ds
aas
or
outsl
add
pop
gs
xchg
sbb
cpuid
xor
add
cwtl
dec
loopne
clc
lea
sub
clc
sarl
pop
stc
leave
jne
repz
push
mov
jecxz
popf
ja
inc
lret
out
add
cmp
xchg
imul
cmpsb
test
mov
das
inc
out
jb
icebp
iret
jle
push
fimuls
daa
mov
xlat
les
push
test
test
filds
cs
dec
and
pop
add
jp
icebp
pusha
ds
jecxz
mov
cmc
jle
test
and
enter
push
icebp
xchg
pusha
mov
jmp
mov
inc
scas
mov
es
and
jl
movsl
dec
out
dec
pop
adc
jnp
daa
sbb
xchg
adc
mov
ss
or
mov
daa
popf
testb
jge
aas
push
sbb
xchg
mov
dec
lock
ss
cwtl
and
in
or
in
jb
inc
cmc
ja
push
push
xchg
test
lret
outsl
jecxz
dec
cmp
and
xor
xor
imul
nop
jo
mov
cli
leave
stc
outsl
add
stos
cvtdq2ps
jo
pop
imul
jmp
jmp
dec
xor
shr
outsb
das
cld
aad
mulb
mov
pop
push
mov
in
pop
test
or
mov
pop
scas
xchg
mov
pusha
in
adc
and
pushf
push
mov
fxch
or
js
test
or
adc
add
lock
mov
or
sub
cmp
addr16
and
insl
ljmp
scas
test
inc
pop
sbb
push
inc
add
jbe
pop
and
jb
mov
sub
inc
test
lcall
addr16
jecxz
jnp
dec
or
psrld
pop
outsb
mov
jge
mov
shll
cli
cmp
sub
jp
mov
lahf
or
sub
pushf
add
test
sub
inc
rorb
sbb
pop
cmp
stos
jecxz
ja
sub
mov
mov
and
xchg
mov
sub
lods
mov
ja
es
add
pop
lock
push
push
jno
sub
sub
jb
push
mov
cli
lock
ror
lods
pop
popf
mov
add
adc
ss
jmp
sub
pop
xchg
jae
in
fadds
popf
or
dec
sbb
lret
sahf
test
sub
push
add
mov
imul
mov
dec
scas
cmp
aam
ja
or
popa
pop
ret
xchg
lods
and
inc
push
movsb
addr16
pop
popf
mov
and
call
pop
movsl
imul
sub
sub
out
or
je
daa
dec
subb
enter
inc
popf
nop
loopne
into
adc
fst
jb
ss
sub
jp
dec
push
scas
push
lret
in
out
sar
fcomps
mov
fldcw
enter
xor
pop
sub
mov
mov
fsubrs
stc
cmpsl
mov
dec
mov
jae
int
cmpb
and
or
and
testl
in
cld
sub
adc
iret
fdiv
inc
or
fdiv
inc
or
or
aad
aam
mov
cwtl
push
enter
shll
jne
and
cmp
push
push
push
cwtl
lds
mov
jne
sub
jg
sub
inc
outsb
sbb
sbb
addr16
push
push
fcmove
out
mov
ss
loopne
icebp
nop
mov
int
fcomp
insb
jmp
xlat
lcall
adc
cmc
push
mov
lahf
mov
outsb
cmp
inc
and
cmp
enter
push
aad
les
cmp
pushf
bound
insl
jbe
orl
jp
dec
dec
and
mov
pop
adc
pop
inc
cmpsl
mov
lea
shlb
movsl
xor
icebp
adc
push
mov
dec
mov
lds
lea
sub
xchg
sub
cmp
xchg
into
loop
mov
sub
sahf
imul
pop
mov
xor
rorl
sar
inc
jmp
sbb
cmc
daa
bound
jle
pop
and
stc
adc
stos
inc
pop
mov
mov
ja
out
sub
rol
inc
or
adc
js
loope
add
sbb
imul
xchg
inc
repnz
mov
sti
cli
inc
push
fs
fs
mov
jno
mov
mov
mov
cmpl
sahf
fcoml
loope
push
movsb
push
in
fwait
inc
inc
mov
mov
dec
fisttpll
psubb
jecxz
ret
ror
mov
lds
cmc
gs
mov
test
mov
and
sbb
pop
scas
lds
ljmp
xchg
pop
sub
shll
into
add
std
repz
jae
adc
jge
and
xor
lock
nop
test
sub
out
pop
repz
aam
in
aam
xchg
fstpt
movsl
js
sahf
cmp
mov
dec
popf
into
dec
dec
cld
jle
scas
mov
movsb
sbb
aad
jns
inc
jno
pop
sub
cmp
cmc
push
imull
sbb
push
test
inc
xorl
pop
roll
das
pushf
xor
lahf
ds
arpl
loope
dec
lock
daa
dec
jno
je
loope
lods
sub
xorb
fdivrs
pop
aad
mov
or
lret
xchg
add
aas
add
ja
sub
and
add
nop
mov
xchg
mov
cmp
sbb
lcall
insl
outsb
loope
push
jg
lods
loope
fdivrl
sbb
adc
int3
repz
mov
fidivrs
mov
test
add
sti
sub
pop
mov
sbb
aam
mov
or
or
popa
xlat
aas
mov
sub
jns
cli
add
jge
adc
std
or
jp
shrb
rcr
scas
adc
adc
popf
push
aam
dec
repz
es
mov
lds
pop
stc
mov
add
push
rorl
adc
lahf
inc
jecxz
jns
cmp
arpl
lea
and
push
scas
arpl
xchg
push
rorl
jae
adc
dec
xchg
sub
data16
pop
pop
or
rclb
ret
jge
push
jno
xor
push
hlt
popa
pushf
rcrb
inc
shll
test
jg
push
xchg
cs
dec
fiadds
sub
mov
mov
push
sbb
push
and
pop
shll
pop
hlt
mov
push
cmp
lahf
pop
or
movsl
sbb
sbb
mov
jne
ret
dec
lahf
sbb
push
cmp
fcompl
test
push
div
jo
enter
push
out
aas
dec
inc
andl
loop
mov
xor
stos
sub
mov
jae
mov
call
call
push
dec
push
pop
push
stos
shrb
test
jecxz
cmp
jae
xchg
xchg
cmp
cltd
mov
sbb
pop
sub
test
push
jmp
cli
push
shl
or
es
push
or
gs
mov
jo
std
fdivs
sbb
cli
mov
out
inc
xor
cmpl
clc
iret
fidivs
es
in
inc
sub
cmpb
xchg
fdivrs
repz
ret
pop
sub
jle
jmp
push
lret
mov
xor
adc
leave
pop
sbb
lcall
or
mov
push
inc
cwtl
sbb
pop
push
popl
sarb
sbb
dec
stc
fstpl
or
cwtl
js
sub
pop
imul
pop
outsl
mov
jae
inc
aad
insb
andb
mov
testl
out
movsb
sub
inc
repz
jmp
lds
or
xchg
jo
shlb
push
pop
lcall
es
fcomps
int3
aam
sub
mov
bndldx
and
lahf
xchg
ficompl
inc
imulb
in
iret
lods
lods
adc
adc
adc
push
inc
dec
sub
push
frstor
inc
in
cmp
ss
adc
pop
jae
pusha
rclb
sub
add
and
mov
push
xchg
out
mov
xor
dec
adc
orb
je
xor
inc
dec
mov
sbb
sti
fsubl
outsb
xor
mov
mov
fstp
ss
mov
ficoms
daa
xchg
add
mov
dec
sbb
test
xchg
mov
mov
xchg
push
xor
xor
push
movsb
fcmovu
lcall
leave
sbb
jmp
cmp
xor
pop
push
fistpl
fisttpl
insl
dec
mov
test
mov
add
out
sbb
push
shl
scas
jp
out
cmp
rcrb
or
xor
xchg
sub
mov
jp
sbbb
or
push
adcb
push
sbb
pop
lds
pop
jno
mov
stc
mov
sub
repz
scas
push
loop
push
scas
jp
and
push
xchg
test
pop
sti
fnsave
xor
mov
nop
mov
and
mov
in
xchg
in
and
and
scas
push
mov
icebp
or
outsb
js
inc
add
push
dec
xor
jle
add
shll
xchg
push
jns
sahf
fwait
mov
popf
sub
arpl
xlat
mov
jae
sti
aaa
std
push
cwtl
mov
pop
cmc
in
hlt
jb
pop
jns
mov
and
lret
std
jno
scas
fldl
dec
shr
inc
popf
lahf
out
dec
rolb
jae
cmp
or
les
ret
test
loope
shlb
or
call
jne
lods
inc
cmp
mov
clc
xchg
xchg
dec
fisttpll
push
xchg
fbld
inc
cmp
inc
sarl
adc
add
push
popf
or
flds
mov
outsb
lods
xor
mov
pusha
mov
adc
push
push
sbb
das
pop
clc
bound
or
or
and
cmp
sub
and
mov
aam
pop
daa
div
jb
sub
dec
pop
pop
cmp
xor
push
cmp
int
jns
pop
addr16
cmp
inc
inc
pop
dec
mov
js
lds
decb
scas
call
jecxz
xchg
mov
xor
shrl
cltd
cwtl
addr16
sbb
pop
xlat
imul
lods
cmp
adc
inc
sbb
fidivl
insb
xor
mov
lods
lea
daa
lods
push
std
shl
imul
cld
jbe
ljmp
push
jmp
addb
sub
inc
xor
or
scas
aam
push
mov
je
js,pn
inc
push
faddl
fadds
jecxz
bound
push
int
sub
ja
jge
stos
sbb
push
bound
add
or
mov
fnstsw
jmp
mov
adc
in
daa
dec
mov
jo
js
dec
movsb
loopne
pop
mov
shrw
inc
out
pop
aas
inc
scas
imul
addr16
adc
adc
dec
sub
aam
dec
cmp
insb
sbb
sbb
dec
out
pop
sbb
scas
scas
add
paddsw
into
adc
dec
pop
imul
cltd
push
or
fsubrl
test
inc
mull
rcll
sub
daa
outsb
negl
push
mov
inc
aas
xor
jns
mov
inc
xor
mov
adc
add
or
or
cmp
dec
pop
aad
cmp
arpl
test
bound
xor
mov
test
ret
shlb
xor
mov
push
daa
aaa
aad
out
pop
push
sbb
pop
shll
or
mov
fidivrs
sub
and
sti
xchg
lcall
data16
fistl
xchg
shll
imul
sbb
popf
jns
addr16
imul
notb
aam
and
and
dec
lea
pop
repz
mov
pushf
sti
push
mov
mov
daa
push
cmp
ss
insl
dec
repz
sub
push
pop
int
and
mov
pushf
xchg
and
inc
pop
or
in
iret
ja
and
ret
cs
mov
movd
imul
nop
aad
lret
push
push
adc
xor
sbb
dec
iret
mov
pushf
leave
fsubrs
inc
gs
xchg
mov
movsb
addr16
sub
dec
test
jae
push
shlb
nop
or
inc
loope
movsl
jle
inc
int
mov
test
int3
cmc
sahf
dec
stc
test
lcall
cltd
fsubrp
sbb
in
mov
pop
pop
push
jnp
mov
fsubl
outsb
xor
movsl
leave
jg
test
ljmp
test
xlat
lret
adc
sbb
outsb
cmc
cli
cmp
call
push
jae
insb
cwtl
mov
mov
inc
out
popa
cmp
test
setle
xchg
push
xchg
or
jecxz
xchg
jb
adc
add
leave
dec
mov
ljmp
rcll
jbe
pop
cmpsb
mov
movsl
add
xor
repnz
mov
inc
jns
aaa
unpcklps
push
subl
in
adc
leave
int3
cmp
sbb
aas
xchg
lret
shl
sti
pop
mov
nop
clc
jnp
mov
push
loopne
lods
cmc
dec
adc
and
mov
mov
test
mov
or
inc
or
jne
cmp
or
nop
lcall
orb
mov
jne
xchg
lods
xchg
lcall
aaa
mov
add
stc
in
push
pop
cltd
dec
push
test
cmpsl
arpl
sbb
mov
out
cltd
xchg
addr16
insl
lret
repnz
outsl
lret
dec
dec
xchg
aad
jl
pop
decl
js
popa
xchg
adc
mov
mov
push
inc
cltd
pop
clc
sbb
cmp
or
mov
test
mov
lret
xor
fs
xor
mov
aas
div
dec
flds
or
in
clc
push
lods
loope
pop
cmp
loop
cmpsl
scas
aas
sub
jge
jns
adc
xchg
aad
out
push
ljmp
daa
xorb
cmp
sub
or
int
and
scas
sub
push
or
xchg
mov
stc
pop
lret
xlat
xchg
mov
enter
testb
push
push
aaa
sub
jp
mov
sbb
fisttps
addr16
mov
add
lods
cli
stos
add
sbb
cmpsl
sub
dec
enter
into
xchg
shll
or
sbb
jnp
fdivrs
mov
lret
outsl
js
insb
pop
loop
aaa
out
jnp
test
push
fs
sub
vprotd
addr16
adc
lods
in
jo
jle
arpl
mov
pop
shl
and
sub
das
ret
jmp
into
lea
outsl
cwtl
push
or
pushf
rorb
inc
daa
testb
push
push
mov
pushf
mov
add
add
imul
mov
xor
pop
repz
pop
scas
repz
push
and
gs
inc
addr16
adc
mov
mov
mov
push
adcl
or
adc
shl
adc
push
das
pop
loop
sti
mov
mov
loop
test
icebp
aaa
inc
pop
push
js
push
lods
and
xchg
incl
bound
negl
mov
movsl
aam
or
xchg
mov
push
popa
inc
std
adc
in
leave
mov
adc
js
daa
shlb
xor
imull
cmp
push
cltd
out
jns
aas
scas
mov
aaa
insb
jecxz
mov
in
mov
imul
nop
add
lods
fisubl
xchg
and
or
cs
and
pop
add
mov
in
incb
rol
daa
pop
sub
popa
push
ret
loop
rorb
pop
pop
loop
mov
push
data16
push
js
sbb
or
mov
clc
mulb
pop
arpl
and
lock
push
in
dec
cmp
aam
sbb
sbb
cmp
xchg
mov
inc
shlb
pop
mov
and
pop
divb
mov
push
lret
and
leave
jmp
in
mov
push
rol
cmpsb
dec
ret
and
add
nop
add
mov
in
andl
rcr
scas
out
cltd
sar
mov
xchg
cmp
mov
add
xlat
pop
xlat
sbbb
mov
jnp
mov
lods
out
or
jno
lods
sub
mov
ds
sbb
lds
pop
out
mov
jge
notl
adc
sub
mov
cmc
and
repnz
idivb
and
sahf
ret
pusha
or
cmp
xor
rclb
pop
pusha
lock
push
add
daa
xor
mov
cmp
pop
and
int
adc
or
arpl
adc
jo
insb
arpl
cmp
and
push
lahf
out
test
xchg
mov
mov
pushl
hlt
jnp
outsl
cmc
mov
fdivrp
lea
shlb
inc
outsb
in
lret
adc
out
shll
lcall
and
sbb
cwtl
addr16
lock
jmp
fsub
add
arpl
ljmp
cmp
dec
fiaddl
test
pop
sub
xchg
cmpsb
pop
int
sbb
jecxz
pop
dec
mov
sub
lea
dec
cli
jns
jnp
inc
lcall
mov
mov
xor
mov
out
dec
sbb
and
mov
loopne
and
loope
shrb
aaa
jg
mov
movsb
push
std
lods
lret
aas
xchg
xor
adc
cmp
adc
jbe
fbld
mov
jns
mov
push
je
inc
dec
fs
iret
lods
sarl
fwait
add
xor
mov
je
dec
inc
ljmp
in
cmp
fcomip
cli
sbb
jae
cmp
loopne
in
out
out
push
hlt
inc
sbb
pop
lahf
mov
sub
enter
sbb
ret
pop
out
lds
mov
pop
xchg
les
push
nop
ds
pop
inc
lods
mov
cmpsl
movsl
int3
gs
lods
insb
mov
shr
xchg
jl
dec
add
insb
cmp
stc
adc
popa
jp
loope
das
xlat
add
pop
dec
in
mov
loopne
mov
xchg
cmp
sahf
adc
sub
push
cli
jno
jnp
mov
push
pop
xor
and
in
jns
cs
scas
cmpsb
dec
dec
and
cmc
fs
push
mov
subb
or
test
push
imul
fwait
mov
adc
in
aas
mov
fidivs
bound
scas
daa
scas
cmp
push
sbb
sar
lea
lea
mov
gs
pop
jb
adc
sbb
add
jnp
xchg
add
jmp
fldt
jns
mov
adc
dec
lods
xchg
mov
xor
inc
push
sbb
add
insb
dec
fs
adc
cs
mov
sarb
mov
pop
int
or
mov
fnstenv
cltd
in
pop
jae
int
adc
push
sti
fsubl
outsb
xor
js
arpl
cmpsl
cltd
lds
push
cmp
push
pop
xor
in
cmp
pop
mov
cmpsl
movsl
mov
jne
mov
mov
fcmove
sti
int3
and
dec
inc
add
fbld
insl
and
insl
cmpb
sbb
mov
and
test
cli
psrlw
jmp
and
imul
inc
paddq
shrb
stc
sbb
lods
stc
mov
les
shll
adc
loope
xchg
add
xor
inc
in
mov
xchg
pop
negb
frstpm(287
shlb
fdivrp
xchg
push
and
scas
fcompl
leave
ja
outsb
xchg
jo
aaa
aas
jne
popa
jmp
lock
stos
fbld
mov
insb
clc
addl
jbe
pop
orb
pop
add
xchg
mull
mov
arpl
gs
jae
cmp
cmc
jle
scas
jb
jno
leave
mov
ss
rclb
xor
cmp
cmpsb
sbb
ja
sub
int
xor
or
insl
mov
fcomps
shl
imul
add
cmpsl
mov
loope
ljmp
mov
and
rcrb
xor
lods
xchg
lcall
int3
test
add
test
mov
dec
or
cmp
imul
scas
inc
rcrb
jl
mov
mov
andw
xor
xor
push
daa
ret
in
cltd
cmp
movsb
push
in
sub
aam
mov
or
outsl
push
adc
adc
xacquire
mov
lock
nop
jle
enter
testl
loope
sub
add
adc
sti
add
cmp
fldenv
mov
and
rorl
out
pop
enter
mov
sbb
cld
push
sbb
out
xchg
mov
daa
pop
fwait
dec
jae
push
das
or
push
pop
inc
rolb
lea
std
divl
sub
xlat
jo
jmp
mov
mov
push
pop
loope
movsl
mov
or
incl
push
loopne
dec
std
cmp
lret
sub
mov
mov
out
sbb
cmp
push
cmp
cmp
mov
mov
xor
dec
jae
cmp
sub
out
and
push
jbe
or
in
or
jae
jae
daa
or
dec
loop
mov
das
test
subb
push
push
imul
jle
push
addr16
out
hlt
shrb
loop
xor
adc
pop
mov
lea
lcall
mov
out
adc
add
les
pop
scas
mov
jno
sub
adc
mov
push
nop
sarl
dec
cwtl
mov
cmc
jb
inc
jge
stos
fneni(8087
or
cs
and
daa
icebp
fdiv
adc
out
lahf
insb
pop
sub
emms
std
shl
imul
lods
enter
cmpsb
mov
ljmp
push
and
outsb
xchg
iret
push
pop
pop
mov
push
insl
dec
and
mov
jno
dec
mov
xchg
in
lahf
std
push
and
fidivrl
cmc
inc
jns
xchg
adc
daa
jp
mov
cmp
sub
out
jmp
and
jo
lret
pushf
mov
jb
ret
aas
imul
lret
loop
enter
sub
pop
xor
inc
dec
add
sbb
cld
pop
fdivp
aad
dec
insl
jg
imul
fwait
addl
call
pop
test
push
adc
cmpl
int
push
divb
bound
popf
cld
rol
test
mov
add
cmpsl
arpl
mov
inc
mov
test
mov
or
stos
mov
lock
lret
hlt
mov
xchg
mov
outsb
mov
insl
stos
pusha
lea
adc
sub
out
cwtl
and
int
lock
lret
popa
pop
in
lock
dec
cs
insl
addb
xor
arpl
or
jg
push
lcall
xor
mov
fstps
dec
testb
stc
dec
ds
into
negb
outsl
shl
fs
mov
adc
cs
dec
addb
divl
push
fdivr
mov
adc
mov
pop
add
cltd
cmp
arpl
insb
cs
sbb
adc
cs
dec
addb
pop
loope
mov
int3
andl
insb
xor
pop
insl
mov
in
pop
mov
dec
inc
sbb
inc
mov
js
mov
dec
fwait
in
fs
jmp
nop
sbb
add
pop
cmp
cmp
loopne
add
cmp
fwait
lret
outsl
imul
mov
cli
push
lret
outsb
xor
cld
mov
inc
js
jle
addr16
rorl
xlat
and
fcompl
dec
out
jp
push
nop
sub
aam
fnsave
mov
cs
mov
rcr
sub
int3
pop
std
jp
or
inc
pop
xchg
test
repz
std
jo
xor
jle
repnz
ret
fxch
std
xor
xchg
ljmpw
add
and
movsl
xorb
ljmp
inc
rorb
fsubr
and
push
mov
push
in
outsb
mov
mov
push
ljmp
scas
push
inc
add
fcoms
shrb
out
cwtl
and
cli
rcr
ret
inc
jl
add
in
sbb
push
fstpl
mov
testb
or
push
dec
notb
mov
xchg
push
sbbl
cmpsb
sbb
fwait
js
add
xchg
sahf
xor
and
jp
and
mov
jno
cltd
movsb
cltd
and
mov
loop,pn
test
hlt
movsb
xchg
clc
js
inc
ljmp
pop
inc
popf
cmp
mov
ds
xor
mov
sbb
inc
rcll
enter
pop
xchg
push
push
and
call
or
lret
push
ljmp
push
or
outsb
std
or
mov
push
mov
jno
jecxz
cld
ja
jecxz
add
std
out
mov
sub
cld
repnz
mov
adc
fstpl
aad
nop
ljmp
sahf
pop
fidivl
and
iret
rorl
mov
dec
pop
cli
daa
pop
pushf
xchg
and
jae
add
lock
mov
jmp
cmpsl
jmp
ret
pop
fucom
cmp
lret
lcall
or
int
push
lds
or
aaa
bound
add
aaa
les
out
lret
xor
mov
pusha
jecxz
cs
cmc
xor
popf
lods
pop
pushf
cs
mov
xchg
add
and
sti
in
and
pop
ljmp
sub
data16
push
dec
fmuls
lret
ret
mov
push
lahf
insertq
aas
hlt
push
jecxz
in
cmp
sub
mov
jle
sub
lahf
sub
sub
fsts
xchg
jo
and
mov
jge
add
incb
mov
pop
repnz
repz
and
xchg
xlat
xor
aam
jge
and
mov
dec
xchg
fcmovu
jns
lea
sbb
cltd
mov
shl
xchg
mov
dec
sbb
mov
ret
les
or
ss
jb
lock
out
adc
adc
pop
cmp
add
out
adcl
popa
fisubrs
arpl
popf
jp
aad
sbb
inc
add
inc
xchg
sbb
sbb
and
or
mov
rorl
fisttpl
push
fistps
jmp
push
loopne
sti
popf
scas
test
popa
push
dec
imul
fwait
sub
cltd
pop
inc
jo
shll
xchg
jg
das
shll
xchg
mov
and
dec
aam
dec
pusha
jb
sbb
fiadds
mov
push
and
add
inc
xor
jp
lea
push
andl
dec
lock
icebp
mov
sbb
xchg
fbld
mulb
in
popl
and
mov
loope
push
adc
mulb
test
xchg
push
sbb
cmp
fsts
and
pushf
lods
cmp
lahf
xchg
push
femms
or
repnz
jno
ja
xchg
lods
push
xor
sub
ljmp
pop
xchg
scas
std
lret
add
stos
jnp
out
faddp
movsb
movsb
sar
or
icebp
sub
ja
dec
jnp
dec
shrl
push
cmpsb
xor
mov
enter
jno
hlt
push
repz
sbbl
jge
divl
notl
or
adc
orl
lock
or
das
cmpsb
mov
jno
iret
mov
and
or
jbe
cmp
mov
cltd
gs
fsubrs
inc
gs
pop
int
in
popa
mov
sbb
xor
loope
int3
mov
adc
mov
push
mov
adc
and
cmp
loopne
les
mov
or
mov
fwait
or
and
repnz
idivb
in
cltd
out
enter
cld
test
cli
push
cmp
cmp
ss
std
test
std
rcll
sar
and
cs
les
mov
or
gs
xlat
xchg
ret
test
out
sub
or
pop
sets
sar
sti
or
cmpsl
data16
mov
hlt
ja
push
jno
and
pop
push
xchg
mov
jg
dec
lcall
xchg
pop
jg
loopne
cmp
dec
inc
cmp
mov
les
lods
sahf
sub
jns
dec
sub
xchg
ja
xor
fwait
mov
or
out
jp
lea
push
mov
cmpl
cmc
jle
sbb
xchg
add
xchg
cli
xchg
daa
fs
shl
shlb
or
sub
imull
sbb
dec
ss
or
andb
fmul
out
adc
ljmp
dec
out
fdecstp
jmp
pop
mov
dec
mov
cmp
hlt
repnz
jp
sti
mov
shrb
stc
pushf
jno
xchg
xor
cld
arpl
fisubrl
test
ljmp
xlat
cmp
inc
les
hlt
int3
in
push
push
sahf
addr16
mov
out
std
pop
sub
xor
xchg
test
pop
cld
mov
jb
bswap
ds
add
mov
mov
jecxz
dec
adc
jno
adc
cmp
int3
imul
inc
or
jb
mov
jp
aad
call
lods
popf
dec
aaa
mov
push
test
lret
mov
aam
repz
mov
lret
fwait
add
mov
scas
sbb
xor
xor
xlat
mov
dec
out
fs
cmp
jb
xor
mov
xchg
shr
fs
loop
xor
jns
sti
scas
add
fninit
test
cwtl
out
push
cld
inc
dec
insl
dec
push
mov
xchg
push
add
lcall
rclb
dec
cltd
jmp
mov
xchg
or
cwtl
xchg
push
xor
lock
in
divl
test
out
pop
xor
repnz
dec
scas
ror
test
stos
jle
dec
pop
fstpt
xor
shlb
enter
add
leave
mov
xor
insl
shll
dec
ret
mov
mov
xor
lcall
dec
xchg
cmpsl
lret
movsl
movsb
insl
mov
push
cmp
jg
shl
enter
push
sbb
sub
jo
mov
push
xchg
push
push
cmpb
movl
std
xor
mov
mov
faddl
fadds
stos
popa
fbld
lcall
mov
pop
push
sub
xor
xchg
subb
cmp
or
xchg
addr16
adc
leave
push
mov
fisubrs
adc
mov
adc
xor
ds
hlt
scas
mov
fidivrl
xchg
pop
arpl
clc
inc
repnz
cs
or
lds
mov
les
shr
add
int
clc
xor
mov
iret
sub
sahf
ret
das
enter
repz
popw
ljmp
ret
hlt
cli
push
cmp
xor
xchg
mov
push
jno
mov
jns
scas
int3
mov
cltd
js
fisttpl
sbb
fwait
jne
rcll
xchg
imul
mov
sahf
inc
iret
or
pop
adc
adc
dec
dec
out
stos
jno
sahf
fmull
or
fsubl
mov
add
or
lret
jae
sbb
cltd
xchg
test
and
mov
mov
pop
cmpsb
pop
out
mov
mov
pop
jl
xor
xor
scas
in
cmpsl
jae
mov
push
xchg
mov
es
and
push
jne
fsubl
dec
in
dec
shll
sbb
cltd
clc
popa
ret
test
sub
mov
pop
lock
jne
adc
xchg
pop
mov
add
or
fsubs
clc
testb
xchg
mov
sbb
and
sahf
mov
push
cmp
xor
sub
add
or
or
sbb
mov
xchg
pusha
xchg
pop
mov
shll
cld
mov
ss
sub
lods
je
jge
jne
sbb
inc
ret
daa
xor
jmp
add
push
jns
pop
jecxz
jns
fwait
mov
lock
stos
ss
and
add
adc
lret
fbstp
lcall
xchg
xchg
mov
push
pusha
fidivl
xor
lods
jb
je
pop
nop
cmpsb
push
sub
xor
and
stos
jl
sub
cmpl
scas
nop
test
lods
adc
shlb
mov
fnstsw
lea
adc
loope
cmpsb
in
mov
pop
scas
scas
mov
jno
outsb
scas
and
inc
xchg
sbb
or
out
outsb
enter
arpl
pushf
mov
push
hlt
pop
mov
ljmp
and
adc
xchg
es
pusha
cmp
jl
jge
inc
push
ror
cmp
iret
in
push
ja
insb
push
test
loope
mov
push
rclb
in
mov
rcrb
ljmp
aam
call
mov
imul
and
mov
and
or
adc
lret
sbb
pushf
dec
and
js
or
pop
xor
sbb
push
mov
cmp
fwait
nop
pop
test
aas
cmp
int
jb
icebp
js
imul
sub
mov
jle
icebp
fldenv
add
negb
xor
pop
in
push
xchg
adc
pop
subl
push
popa
adc
cmp
mov
test
jns
xor
imul
mov
ret
lcall
dec
es
push
push
test
jnp
dec
pop
sbb
and
cmc
pusha
or
fs
insb
inc
adc
mov
divb
scas
addl
in
dec
pop
fildll
subl
xlat
movsl
movsl
cmpsl
cmp
loope
push
test
xchg
xor
mov
jnp
or
cltd
xchg
cwtl
add
pop
xchg
arpl
fisttps
xchg
lods
lods
cmp
out
inc
mov
inc
aas
inc
mov
xchg
jp
loopne
jp
xor
orb
sub
pop
sti
lret
and
cmp
and
enter
sbb
push
aaa
sbb
xchg
mov
dec
lret
fwait
sbb
addl
jnp
cwtl
xchg
cmpsb
mov
dec
adc
push
sub
mov
js
enter
fbstp
movsb
jnp
ja
loopne
fs
add
mov
insl
push
mov
int3
mov
mov
fldenv
popf
imul
sbb
pop
sbb
pushf
push
or
and
sbb
lcall
push
cwtl
jp
sub
mov
add
or
ret
nop
jbe
cmp
in
pop
sub
shrl
in
mov
stos
lea
mov
cmp
mov
push
cs
aas
push
pop
aam
clc
fcmovnbe
dec
mov
inc
daa
shl
inc
jo
dec
movl
sub
add
in
testb
mov
std
insb
imul
xchg
lret
or
xor
or
aas
cwtl
in
push
or
pop
fldenv
dec
add
in
cs
stos
shll
inc
gs
pop
movsl
jne
test
daa
pop
out
adc
sub
cmp
adc
mov
bound
sbb
cmpsl
sbb
cmc
sbb
mov
addr16
jmp
sbb
sbb
int3
imull
daa
pop
sub
sub
push
enter
sbb
cmpsl
dec
add
in
lahf
popl
jns
out
cs
dec
pop
inc
in
pcmpgtd
mov
fcoms
mov
cmp
xchg
jmp
and
gs
leave
pop
je
hlt
inc
out
or
sub
mov
in
or
jmp
sbb
sbb
lds
cli
loopne
cwtl
mov
mov
fiaddl
adc
lock
clc
enter
mov
outsl
es
fisttpll
pop
push
in
push
iret
imul
xchg
cmp
pusha
jmp
mov
cs
loope
xor
aas
mov
cld
pop
push
sbb
lods
cmpsl
fstpt
fldl
lock
popf
lock
lods
pop
repnz
out
lret
pop
inc
adc
mov
xor
jns
push
loop
adc
jge
cltd
lea
popf
or
pop
xchg
push
cld
clc
imul
inc
test
cli
sti
nop
insl
jne
repz
xchg
call
inc
mov
int3
sarl
loope
xchg
mov
testl
inc
shrl
push
mov
fs
inc
and
ds
xchg
pop
sbb
setae
sbb
mov
daa
aam
dec
cmp
sub
mov
lahf
dec
mov
fwait
and
into
jmp
jo
or
repz
sub
push
in
inc
aad
add
int3
cwtl
lea
and
add
rcll
xchg
adc
sub
and
lock
ja
int
push
test
popa
sbb
mov
nop
aad
and
adc
lahf
dec
add
adc
sub
dec
jb
mov
cmp
jns
xor
int
xor
sub
fneni(8087
scas
lret
leave
cmpsl
add
jl
lock
inc
bound
and
inc
ja
nop
popf
and
mov
mov
test
int3
pop
pop
adc
mov
and
enter
es
jecxz
gs
bnd
ja
jle
out
lods
mov
cmp
mov
adc
inc
xor
or
sub
fists
or
cmp
out
mov
cmp
adc
cmpsb
leave
ljmp
push
aas
enter
sbb
mov
pop
adc
pop
test
jmp
or
or
jmp
push
and
scas
dec
outsl
and
lcall
mov
adc
fisubs
mov
sub
movsb
push
pop
lods
push
mov
sbb
in
mov
jmp
ja
ds
jge
sbb
insl
jp
xchg
push
aaa
sub
pusha
pop
jne
xchg
jno
or
push
ss
sub
sub
sub
xchg
cmp
xchg
mov
adc
leave
shrb
and
je
aas
jg
rcrl
jno
or
push
adc
mov
ljmp
ds
shlb
fprem1
cmp
sbb
xor
inc
mov
adc
xor
dec
outsb
jg
insb
cmpsl
inc
je
mov
cwtl
jne
xchg
jno
or
push
fsubrl
ret
lret
dec
mov
mov
lcall
push
dec
je
ret
enter
nop
dec
mov
dec
lret
imul
inc
imul
sub
sahf
or
sbb
pop
jns
sarb
mov
nop
in
xchg
mov
scas
pop
push
inc
fnstenv
test
pop
pushf
enter
and
sbb
jno
addr16
pop
sbb
mov
test
out
insb
cmpsb
dec
nop
int3
aad
stc
lret
push
mov
insl
inc
das
pop
xchg
jp
and
lahf
cmp
xchg
mov
jns
mov
mov
xor
lea
fdivr
scas
xor
int3
push
pushf
fdivrl
cld
cmp
in
mov
pop
xor
ret
jns
mov
out
mov
sub
std
jge
cmp
mov
outsb
scas
stc
out
aaa
and
shlb
push
mov
sbb
lods
adc
cmc
add
push
mov
outsl
aam
ljmp
inc
cltd
or
movsb
imul
jne
out
rclb
inc
cli
cs
lahf
xor
xor
out
xchg
ss
lcall
jmp
rorb
icebp
fisubrs
xor
push
sub
sbb
and
pusha
ret
iret
inc
test
iret
and
mov
xor
xchg
pusha
mov
mov
sub
push
sbb
cmp
ret
mov
in
adc
mov
push
cmp
sbb
into
push
cmp
sbb
sbb
ljmp
sbb
mov
adc
or
pop
push
repnz
add
leave
sub
cmc
bound
mov
ds
push
mov
ja
or
sbb
mov
mov
aas
sub
jmp
rorb
repnz
add
adc
sub
xor
xor
mov
mov
faddl
push
stc
bound
dec
inc
inc
sbb
pop
jns
jne
addl
and
out
push
pop
inc
mov
push
out
mov
xchg
imul
sub
js
cmp
sub
imul
jo
shrl
xchg
jns
xchg
arpl
ffreep
out
sub
jp
or
cmpsl
jae
pop
ror
push
fidivrl
jmp
xor
dec
test
pop
adc
pusha
inc
aam
jnp
sti
cmp
dec
dec
jnp
pop
dec
mov
jmp
mov
xlat
outsb
les
pop
bnd
and
arpl
popa
jmp
fiaddl
rcrb
les
or
popl
pop
das
xor
sub
adc
mov
mov
aam
or
scas
sti
cld
roll
out
inc
sub
adcb
outsb
mov
out
push
das
por
loope
push
mov
into
aad
add
lods
arpl
or
xor
and
loop
int
call
aas
fwait
jmp
sti
fbstp
lcall
std
lock
enter
dec
xchg
movb
mov
xor
int
lock
fmuls
and
bswap
lcall
push
dec
mov
movb
stos
adc
or
mov
stos
sub
push
cmpsb
mov
nop
and
ja
jg
and
and
push
lods
pop
cmp
test
cli
and
dec
clc
sbb
push
adc
dec
fmulp
push
sub
xchg
xchg
arpl
ja
jo
adc
inc
mov
push
and
mov
cmc
jno
mov
xor
mov
ljmp
inc
xchg
jmp
dec
jp,pn
cwtl
lods
dec
std
mov
and
mov
popf
xor
mov
sarl
lcall
int3
maskmovq
sbb
xchg
or
pop
insb
iret
mov
mov
lods
lahf
das
or
bound
jb
xor
stos
xchg
mov
adc
cmp
int3
mov
movl
sub
jmp
and
fidivrl
test
mov
add
lahf
mov
shlb
mov
sbb
vorps
dec
testl
xor
test
and
cltd
cmp
hlt
stos
int3
shlb
sahf
ds
pop
adc
test
cmp
aas
cmp
mov
shl
sbb
inc
les
inc
and
les
push
push
outsb
les
ds
and
int3
jns
mov
cld
das
fldl
xor
adc
test
jae
sarb
dec
sti
inc
in
into
push
sbbl
pop
daa
jae
loopne
xchg
mov
cmpsl
sahf
out
loope
rcr
sbb
pop
sub
loopne
iret
mov
dec
loopne
adc
rorb
jmp
das
adc
repnz
enter
test
adc
imul
lea
push
xchg
mov
cmp
repnz
cmp
das
sub
fcom
shlb
mov
add
and
cmpsb
aam
arpl
mov
inc
sti
test
mov
xchg
std
aaa
repz
nop
leave
push
mov
lahf
sahf
sarl
int3
mov
ret
call
stc
lods
or
out
add
fadd
bound
ljmp
stos
gs
inc
jns,pn
sbb
jp
push
inc
loop
xor
ja
pop
movsb
jp
cmp
clc
test
jbe
cs
add
mov
mov
pop
or
and
xorl
stos
clc
pusha
adc
lds
aaa
insb
cmpsb
into
add
mov
mov
loope
jb
aad
cmpsb
mov
add
jb
jg
fistl
push
jns
lods
jp
or
fsts
gs
adc
inc
mov
stos
xor
dec
mov
jno,pt
cld
mov
ljmp
or
imul
pop
mov
insb
sbb
pop
jnp
imulb
push
mov
fisubrs
sub
mov
notl
into
cmpsb
cmpb
mov
out
dec
sub
or
adc
inc
mov
dec
arpl
sub
test
dec
aad
push
pop
mov
pop
enter
mov
stos
push
dec
ror
mov
pop
inc
sbb
mull
divl
push
mov
in
inc
and
mov
jbe
jmp
xor
mov
pop
popf
ja
push
int3
sahf
pop
lcall
arpl
inc
sub
mov
fsub
and
jg,pn
pop
cld
or
xchg
push
rorl
adcl
in
pop
mov
mov
xor
pop
mov
xchg
mov
pop
test
fistl
inc
cmp
xchg
sti
jno
jp
xlat
ret
popf
outsl
out
dec
lock
cmp
mov
sub
or
imul
inc
outsb
mulb
inc
in
je
sbb
dec
jne
cltd
jnp
jae
loopne
cld
dec
xchg
xchg
mov
cmp
adc
push
xor
jge
js
jp
pop
test
push
fcmovnbe
mov
out
or
push
outsb
dec
jg
repz
cwtl
shlb
xchg
lea
xor
mov
lcall
popa
aaa
paddsw
cltd
test
ret
lcall
in
inc
loopne
cmpsb
loopne
call
cmp
fdivrl
jo
stc
pop
hlt
scas
arpl
add
imul
dec
mov
add
arpl
jle
and
sarb
pop
cmpsb
test
or
cli
inc
shlb
les
cmp
in
imul
push
mov
push
and
out
fs
add
mov
loopne
pop
lods
repnz
out
mov
fdivrl
scas
leave
scas
out
mov
jl
ret
sub
dec
lret
push
sub
nop
and
pop
movsb
or
xlat
inc
testb
cmp
loop
sti
hlt
cmpsb
test
popf
add
lods
mov
dec
sti
ret
cmpsl
test
nop
test
mov
icebp
ja
mov
xor
addr16
sbb
scas
bound
shl
cltd
and
fmull
xor
es
xor
or
orb
push
fistl
jl
dec
in
leave
adc
adc
test
push
fisubl
push
push
std
pop
filds
mov
fdivrl
fsubrs
jecxz
lcall
movsl
or
or
ret
int3
push
xchg
and
inc
and
pop
xor
jge
inc
lea
cmp
adc
fcomip
jnp
cs
sub
subl
mov
pushf
call
lods
xor
orb
jge
sub
lret
mov
cmp
outsb
adc
pop
filds
xchg
dec
and
cmpsl
or
das
xchg
mov
fsubl
not
pop
and
adc
xchg
pop
mov
sub
xor
pop
gs
and
stc
mov
dec
xchg
ljmp
and
jl
jnp
mov
xchg
mov
mov
push
cld
and
or
adc
mov
jp
loop
cs
das
clc
scas
mov
add
mov
push
jae
pop
stos
xor
push
jle
cmpl
pop
popf
negl
mov
dec
jo
cli
mov
add
jle
xchg
aas
loopne
scas
and
mov
mov
ja
or
cli
push
add
icebp
lds
sahf
push
dec
push
mov
xor
iret
loope
imul
repnz
out
test
ror
push
les
leave
outsb
lods
clc
rorb
lock
fnsave
push
mov
les
cmp
stos
inc
sub
xchg
cmp
rolb
subb
out
jle
repnz
and
xchg
mov
idiv
fs
jle
xchg
inc
sbb
aaa
aad
pop
push
pop
call
pop
jp
pop
sbb
ds
xchg
imul
bound
jne
icebp
cmp
add
jno
std
shll
xchg
out
stc
pop
movsw
in
icebp
mov
std
test
dec
dec
mov
sub
push
sahf
push
aas
jmp
ror
push
add
add
mov
mov
call
ret
cmovp
pop
enter
xlat
push
in
mov
cli
fcoms
sarb
or
ja,pn
sub
jns
cwtl
loop
pop
mov
rcll
push
pop
out
aaa
jne
lahf
cltd
inc
pop
and
jo
cmpsl
mov
outsb
sub
ds
les
ja
add
push
scas
icebp
jmp
jecxz
jmp
stc
mov
and
xchg
cmpsb
mov
mov
adc
or
int3
in
and
lcall
std
jnp
xchg
jnp
jae
or
mov
xorb
in
scas
icebp
ret
jmp
xor
enter
out
jl
lret
cltd
inc
mov
shlb
adcb
cmp
and
vpsrlw
push
pop
push
lock
stos
push
pop
fistps
aam
push
insb
mulb
adc
mov
mov
push
aam
out
int3
cmp
xchg
xchg
and
inc
mov
dec
mov
xchg
nop
pop
sub
cwtl
in
push
lock
clc
test
and
and
lods
sub
jl
add
pop
pop
orb
push
daa
inc
sahf
ja
xchg
pop
dec
into
aam
int
pusha
inc
xlat
dec
jg
mov
orb
inc
imul
inc
addr16
ds
jns
dec
int
xchg
push
sub
rolb
fs
call
mov
lcall
in
and
pop
ja
pop
std
neg
fs
pop
mov
sub
xor
sbb
scas
gs
movq
cmp
add
push
inc
adc
sbb
jg
arpl
mov
sti
aas
imul
bound
inc
ret
dec
adc
push
xchg
cmp
push
bound
xor
outsl
fcmovnb
mov
mov
pop
xchg
pusha
adc
imul
test
xchg
sbb
ss
loopne
xor
in
cmp
add
jae
stos
mov
add
push
xchg
ret
pop
out
lcall
mull
inc
shll
jo
iret
loopne
out
loopne
int
ror
dec
xchg
push
and
loope
dec
cs
pop
jl
in
loope
xchg
or
pop
in
lcall
cmp
push
mov
repnz
mov
subl
scas
sbb
cltd
or
dec
lret
loope
lods
jle
push
repz
push
sbb
mov
push
and
mov
test
loop
mov
bound
or
cmp
add
cmp
dec
xor
push
push
fimull
lock
inc
xchg
sbb
add
imul
cmpsl
in
push
iret
sahf
cmc
mov
movsb
insb
rolb
call
jge
push
and
dec
bound
shll
int
bound
sbb
test
jnp
sbb
sti
inc
push
add
lahf
imul
jns
mov
fld1
andb
out
lds
push
popf
mov
mov
pop
fwait
push
add
push
loope
test
dec
sub
sarl
cmp
mul
ss
scas
daa
lahf
lock
ret
adc
fldl
sub
add
lock
mov
out
aas
adc
mov
and
fs
xchg
and
or
xchg
push
rcrl
dec
cmp
mov
sub
xor
mov
stos
fs
ficompl
mov
fwait
adc
fnstcw
mov
adc
or
mov
scas
ljmp
sub
shrb
push
mov
popf
adc
add
mov
popf
xchg
jno
shll
cmp
jb
xor
add
or
mov
andl
ret
sub
ret
xor
mov
call
or
xor
les
or
test
pusha
jbe
mov
mov
out
cli
inc
es
lds
test
lock
cmp
sbb
mov
jl
movsl
adc
std
es
adcl
sbb
inc
mov
fidivrl
out
mov
subb
jo
out
add
xor
in
adc
jno
dec
mov
push
icebp
mov
mov
push
sub
pop
cmpsb
negl
fisttps
adc
out
arpl
adc
adc
loope
jecxz
sbb
cmpsl
mov
icebp
sub
andb
xor
xchg
shll
xchg
fcomps
iret
pop
push
jge
test
xor
out
inc
xchg
cmpsb
out
icebp
mov
add
cltd
sub
popa
dec
out
dec
mov
lea
add
pop
push
mov
popf
loop
test
mov
and
xor
pop
or
adc
loop
sbb
outsl
in
dec
jne
mov
xchg
popf
lods
push
rcrb
sahf
jo
xor
test
repz
jge
sub
ficomps
pop
aad
xor
add
inc
mov
add
sub
je
cmp
adc
out
cmpsb
dec
or
movsb
and
jmp
mov
pop
in
outsb
xchg
push
mov
xchg
mov
cmp
imul
xchg
adc
ds
loope
mov
lds
cs
mov
dec
popf
sub
cmp
ljmp
nop
dec
push
xor
rorl
sbb
mov
push
xorl
aad
mov
cmp
hlt
push
jbe
pop
sbb
push
gs
cmp
mov
push
push
sbb
pop
dec
lock
leave
push
adc
cmp
mov
cmp
stos
outsl
mov
pop
fistpl
in
jg
inc
jae
pminsw
jae
dec
hlt
rcrb
movsl
ds
or
in
imul
mov
jmp
clc
push
aam
pop
jge
cmp
mov
xchg
and
ja
add
mov
mov
mov
sti
cs
inc
add
mov
movsb
stos
mov
test
xchg
jecxz
mov
inc
mov
out
pop
in
jmp
and
jo
jmp
adc
pop
gs
enter
sub
fildll
cli
or
mov
bound
pop
sti
ret
lahf
push
arpl
scas
cmp
int
dec
clc
inc
dec
data16
or
fistps
pushf
shrl
daa
leave
shrb
jnp
inc
bound
test
lret
adc
fistl
cli
test
xchg
sub
sub
and
dec
mov
dec
movsl
add
pop
int
inc
mov
lea
lahf
cli
inc
mov
testb
cld
pop
out
xorb
pusha
test
sbb
or
mov
xchg
push
les
xchg
stos
mov
pop
inc
xchg
adc
sti
ds
mov
jp
mov
adc
inc
add
sbb
divb
inc
lea
fwait
in
pop
mov
sub
repnz
aaa
out
imul
pop
inc
mov
sub
pop
xlat
dec
std
sti
je
mov
xchg
das
sbb
push
outsl
mov
pop
pop
push
loope
add
fcomps
adc
bound
sbb
je
add
and
mov
sbb
inc
maskmovq
mull
cmp
jb
dec
roll
xchg
das
andb
imul
lret
pusha
jae
cmpsb
push
lret
andb
rcll
sbb
add
ror
sahf
push
popf
enter
jl
push
pop
cwtl
push
mov
loop
sub
shll
mov
cwtl
aam
mov
test
popl
xchg
into
xlat
push
lods
mov
iret
clc
xchg
imul
ret
add
mov
push
je
dec
andl
push
loopne
and
pop
icebp
bound
lods
push
jecxz
pop
adc
cmp
push
mov
jnp
mov
jg
daa
push
insb
xor
cmp
or
mov
dec
lret
fildl
imul
mov
inc
mov
sub
fiadds
jecxz
repnz
lods
and
mov
enter
call
inc
leave
and
pop
lock
insl
mov
mov
mov
std
fisubl
rcll
sarb
inc
sti
inc
and
enter
in
push
das
addr16
dec
cmp
mov
leave
cmc
add
cmp
test
cmc
xchg
sbb
push
out
lahf
and
pop
cld
shrl
or
xor
pop
stc
xor
shrd
sarb
push
test
jp
cmpsb
xchg
mov
in
sub
mov
add
xchg
sbb
dec
jo
nop
jbe
fnstenv
fstps
rorb
cmpsb
out
adc
mov
imul
sub
jbe
int3
and
sub
jp
lea
dec
mov
add
das
mov
in
adc
outsl
dec
sub
xor
stc
adc
mov
addb
outsb
mov
cmp
mov
cltd
xorb
pushf
jp
jnp
mov
mov
in
dec
xor
push
jo
out
ljmp
pop
push
mov
cmc
cmp
and
jmp
pop
aad
jnp
int
enter
fucom
ds
shlb
lods
outsl
pop
and
bnd
or
cmc
or
xchg
hlt
mov
or
jb
insl
dec
push
fnstcw
xor
test
add
aad
rcrb
addr16
jle
adc
add
pop
dec
pop
out
imul
stos
test
dec
jl
jge
nop
mov
push
jge
or
cli
outsb
pop
mov
scas
and
inc
pushf
push
jbe
mov
sbb
dec
fidivrs
lds
mov
scas
cld
dec
lcall
sbb
scas
aad
cld
addr16
stos
jbe
in
push
inc
sahf
sub
stos
sub
das
mov
cwtl
add
fsubrl
lea
push
sub
imul
sub
mov
sub
mov
cmp
nop
pop
loopne
test
jb
mov
movb
fcmovbe
gs
lods
idivl
cltd
mov
in
fldt
rorl
mov
inc
loop
aas
and
xor
jg
mov
inc
mov
leave
mov
mov
fs
out
push
cmp
out
inc
push
push
or
and
int
lods
push
and
bswap
stos
int3
inc
adc
pop
dec
dec
mov
sahf
hlt
sarl
lds
loop
push
jp
mov
pop
xlat
dec
outsb
mov
mov
repnz
idivb
adc
loop
and
xor
add
je
mov
and
xchg
icebp
dec
sub
cltd
add
dec
or
movb
fwait
or
shlb
xchg
es
jb
sbbb
adc
push
int3
add
xor
pop
ljmp
icebp
out
xor
mov
roll
mov
and
mov
push
inc
xor
jno
xor
and
paddsb
cmp
xchg
mov
push
add
enter
into
push
jnp
int3
sbb
lret
cmpsl
xlat
mov
push
mov
add
int3
inc
mov
adc
pop
movsb
scas
jp
popf
in
cmp
vmovhpd
pop
or
dec
test
insl
subb
aad
shlb
jb
mov
push
sub
jns
into
std
mov
push
sub
inc
inc
dec
cmpsl
mov
or
into
adc
dec
add
std
cmpsb
inc
imul
push
aam
shll
xchg
les
add
xor
cmp
add
ret
hlt
imul
push
mov
xor
lret
xor
cmp
es
pop
cmp
xor
xor
sahf
ss
jp
mov
jb
gs
jae
cmp
jbe
mov
iret
or
popa
push
les
cmp
pop
lods
add
push
cmc
das
fcomps
incl
adc
cmpsb
cmc
pop
jo
pusha
sbb
push
fdivrs
jmp
push
arpl
idivb
push
mov
repnz
jne
xor
dec
movsb
dec
outsb
aas
invd
jno
push
lods
loope
loope
sahf
adc
nop
stos
addr16
push
in
shr
call
push
add
out
xor
test
pop
cmc
xchg
push
mov
rclb
fs
xchg
adc
out
scas
adc
cmp
cmp
dec
or
bound
or
xor
mov
aas
cmp
into
ja
mov
loopne
iret
mov
pop
insl
outsb
sbb
xchg
inc
add
pop
aaa
nop
icebp
push
es
pop
xchg
cmp
ret
out
pop
cmp
out
push
or
in
sub
pop
pop
xor
fidivrs
subl
xchg
dec
pusha
andl
int3
pop
cmc
mov
sbb
sub
xor
mov
test
flds
punpckhwd
orb
inc
mov
sahf
push
mov
adc
cmovg
jo
inc
and
mov
cmpl
mov
hlt
clc
cmp
xor
daa
mov
jbe
jge
mov
mov
jbe
add
repz
jnp
inc
cmp
mov
out
out
mov
mov
xchg
jg
icebp
inc
xchg
insb
rcl
xor
sbb
inc
cmp
inc
dec
decl
sub
cmp
fisttps
clc
mov
sub
ret
fcoml
leave
lods
lahf
sub
xchg
push
mov
jns,pt
stos
pop
shlb
outsl
shl
inc
push
jno
out
orl
pop
inc
dec
ds
shll
popf
mov
xlat
repnz
sub
les
mov
add
push
lahf
and
jnp
dec
cmp
adc
test
dec
mov
or
lcall
push
sahf
jg
pusha
xor
sub
and
test
xlat
lret
push
mov
jb
aas
leave
mov
sbb
jg
or
mov
outsl
sbb
fdivrs
pop
fmull
sub
lock
adc
xor
pop
and
inc
enter
jmp
lret
jle
ret
jns
ret
jae
mov
rcll
pop
sub
mov
out
push
test
sbb
pop
mov
daa
xchg
sbb
stc
icebp
push
dec
push
xor
cs
sbb
adc
fsubrp
fs
mov
out
popa
int3
jbe
scas
push
out
fsubr
push
sub
popf
out
push
ret
mov
out
xor
push
or
in
add
mov
fisttpl
mov
inc
adc
stc
outsb
push
test
in
lods
es
insb
lds
jae
sub
push
pop
xchg
aam
add
mov
cltd
pop
aam
dec
icebp
cli
test
adc
sahf
xor
xchg
push
mov
jnp
xlat
add
fidivrl
repz
dec
lahf
add
lods
push
rolb
adc
push
or
fisubrl
out
adc
sbb
aad
orb
xchg
and
out
xchg
sbb
adc
int3
es
inc
repz
fcmovb
push
or
loop
outsl
push
mov
out
fs
jmp
dec
addl
sbb
jl
cmp
cmp
idivl
jb
ljmp
mov
repz
stos
and
js
clc
xor
insl
jae
cmc
in
jp
sti
test
popf
aaa
and
mov
adc
lods
xchg
xchg
or
fwait
xor
pop
and
inc
xchg
pop
cmc
sub
daa
push
sahf
mov
sti
test
cli
fisttpl
and
sahf
in
nop
pop
jle
into
lret
sti
leave
scas
cld
xor
mov
lret
arpl
daa
add
push
test
xchg
inc
mov
adc
jmp
iret
cmpsb
push
xchg
sub
pop
pop
xor
es
idiv
push
ficoml
push
adc
sti
repz
repz
push
ja
dec
arpl
fcomi
clc
xchg
push
sbb
cmpsb
jmp
cld
or
jl
sub
js
lahf
jns
pop
jne
mov
dec
insl
xor
leave
mov
fnop
lret
push
es
inc
jb
jmp
lcall
scas
push
xchg
sub
push
push
out
pop
idiv
xor
jecxz
leave
mov
sub
ret
sub
jmp
mov
xor
lock
pop
andb
in
sub
test
mov
aam
add
adc
fiadds
sub
shll
mov
out
insl
mov
mov
out
fsubs
cmp
movsl
sub
xor
shlb
jo
fildll
scas
inc
sub
sub
pop
cmp
mov
jo
cwtl
in
insb
jne
cmp
andb
mov
xchg
insl
sahf
loopne
push
inc
and
lahf
or
pop
icebp
divb
inc
pop
pop
add
pop
movsl
mov
sbb
adc
pushf
jmp
jp
cmp
and
and
or
push
xchg
pop
xor
push
xor
fs
xchg
jns
ss
inc
js
push
inc
hlt
sbb
aad
sbb
test
test
mov
scas
mov
lods
adc
cmp
pop
out
rcll
inc
add
xchg
push
enter
pop
pop
ret
in
push
aam
call
fwait
out
aas
sub
jge
loop
xchg
daa
dec
sbb
xchg
imulb
mov
jmp
frstor
push
movsl
mov
xchg
cli
cwtl
bnd
mov
xlat
jecxz
pop
loopne
lods
lods
int
mov
xchg
fbstp
stc
mov
jo
int3
incb
mov
xchg
imul
fiaddl
and
in
jno
adc
movsl
out
inc
int3
pop
cmp
iret
cmc
aas
notl
and
or
mov
pop
imul
gs
sbbb
repz
fistps
and
adc
or
mov
movsb
mov
mov
adc
mov
call
or
pushl
pop
sbb
push
cmp
ds
sub
icebp
or
pop
stos
in
scas
sar
stos
mov
pop
cld
push
shlb
mov
pop
xchg
ljmp
inc
inc
pop
and
int
jno
lret
sub
cmpsl
pop
xchg
mov
int
dec
in
sub
popa
or
mov
adc
sub
mov
aaa
push
sub
daa
test
jae
test
inc
loope
out
mov
sar
add
cmpxchg
fildll
xchg
mov
pop
enter
xor
xor
int
push
nop
mov
push
rorl
lods
adc
jle
adc
ds
mov
fs
leave
fdivrs
leave
cmp
adc
jnp
mov
push
mov
outsb
stc
jns
lea
sub
push
and
mov
leave
jl
push
xorl
pop
push
xchg
daa
push
outsl
ficoms
iret
loope
jecxz
imul
mov
arpl
mov
jbe
not
rcrb
mov
loop
dec
jg
adc
mov
inc
push
mov
ljmp
ret
adc
or
xchg
cmp
repz
loopne
repz
popa
insb
inc
push
mov
or
xlat
cmp
loope
loopne
jo
mov
pop
test
sbb
inc
bnd
pushf
addr16
inc
aad
sti
in
push
out
cmp
js
cmc
mov
and
clc
ss
mov
xchg
pop
dec
inc
test
add
mov
mov
je
adc
xchg
jns
ljmp
fisubl
daa
es
cmpsb
aas
nop
cmp
xor
mov
pop
fildll
sbb
add
mov
js
jnp,pt
jl
sbb
inc
jg
dec
daa
out
sub
jmp
dec
sub
pop
sbb
out
sbb
xor
adc
xor
fs
movsb
adc
ret
xor
dec
dec
mov
xchg
pop
repnz
repnz
jl
pusha
dec
push
jns
cmp
out
dec
pop
mull
jg
sbb
dec
inc
inc
hlt
dec
stos
stos
sbb
fwait
rorl
jle
and
mov
sbb
dec
in
ret
mov
dec
mov
mov
dec
dec
rol
sbb
jmp
add
inc
outsl
pop
and
push
or
push
mov
pop
inc
leave
fisubrs
xchg
and
int
cli
ret
sti
mov
mov
add
out
jbe
jns
jo
orb
inc
andl
cwtl
mov
mov
mov
scas
push
cmp
adc
dec
pop
fdivl
lock
ds
dec
std
lret
push
mov
call
and
add
xor
add
pop
outsb
scas
sub
and
imul
dec
sti
push
test
clc
leave
adc
std
dec
jmp
in
inc
sub
jmp
stos
pusha
xor
enter
cmp
dec
push
add
xchg
add
lds
fldl
aam
xchg
adc
lcall
mov
mov
mov
xor
loope
and
xor
cld
jl
mov
mov
lret
pop
iret
xor
jp
dec
mov
lods
and
cld
aaa
jl
out
sbb
xchg
pop
inc
xchg
jns
push
fadds
xchg
fwait
xchg
and
push
pop
add
xchg
out
pop
add
cltd
and
xor
das
addr16
cmp
cs
jge
xor
insb
pop
icebp
add
ror
lret
outsl
and
cmpsw
dec
subl
cmp
notb
fbstp
aam
mov
adc
das
lret
xor
pop
jmp
jg
repz
aaa
and
push
push
push
jbe
test
out
xor
cmpsl
lods
pop
and
or
mov
lods
loop,pt
test
bnd
push
adc
push
xor
fadds
mov
xchg
arpl
push
jp
or
bound
mov
cmpsl
xchg
enter
adc
arpl
je
push
filds
dec
inc
cmp
mov
fisttpl
mov
mov
and
je
jno
jbe
dec
mov
stos
movsb
ret
mov
inc
fisubs
jge
xor
mov
and
jno
lods
mov
xor
out
nop
pop
test
mov
mov
push
dec
adc
push
mov
iret
xor
lret
lcall
mov
not
aam
mov
mov
lods
cmpsl
mov
inc
pop
imul
insb
call
repnz
adc
sub
inc
pushf
push
jmp
sbb
int3
lret
incl
cs
pop
sbbb
js
rclb
xchg
xchg
lock
aad
push
adc
jg
inc
fwait
xchg
sub
rcr
inc
lcall
ret
popl
inc
push
mov
lods
mov
pusha
in
ficoml
mov
mov
in
insb
ljmp
jno
mov
dec
push
pop
in
imul
mov
cmp
or
pop
ds
adc
andl
dec
push
sti
jge
xor
test
and
js
or
pushf
lret
cs
sahf
xor
sub
clc
in
mov
mov
inc
and
inc
push
jp
jmp
ss
jns
lret
jb
stos
sbb
dec
fwait
lods
inc
xor
inc
lea
xchg
stos
mov
icebp
std
cmp
jbe
pushf
pop
xchg
fisttps
pop
jne
inc
pop
or
ficomps
mov
loop
imul
in
cmp
jl
adc
enter
mov
jbe
pushf
pop
xchg
fists
jne
xor
idivb
cmc
jnp
sub
push
movsb
sbb
push
xor
mov
test
xchg
sub
addr16
or
sbb
dec
push
mov
jno
sub
dec
int3
rolb
fdivrl
xchg
jmp
pop
in
mov
and
pop
mov
inc
ficomps
mov
xchg
and
lea
jl
test
and
cmp
inc
bnd
lods
in
pop
stos
pop
cltd
test
ljmp
int
roll
pop
rclw
sahf
popa
push
pop
js
mov
mov
pusha
pop
push
add
addb
pop
or
dec
sti
and
jle
loopne
rcl
push
nop
or
idivl
and
fmuls
xchg
xorb
daa
xchg
and
das
or
lcall
pop
push
pop
ds
mov
jo
ss
dec
fcomip
xor
jbe
xor
add
or
lods
pop
jb
int
popf
add
inc
dec
repz
cmp
sbb
xor
loope
jl
lods
pop
inc
xchg
push
nop
rorb
dec
sbb
push
mov
sbb
divb
pop
cwtl
cmpsl
xlat
inc
jo
add
lcall
push
leave
jns
and
sbb
out
lock
aaa
scas
insl
mov
stos
cli
bound
pop
movsb
movsb
sub
cmp
das
aam
inc
fstp
call
cld
mov
push
jg
fidivl
xlat
push
mov
mov
rcrb
xchg
mov
mov
adc
out
and
mov
int3
int3
jge
mov
insl
dec
fs
xlat
cmpsb
inc
stos
dec
xchg
arpl
mov
jecxz
sub
mov
rcrl
sbb
cmpsw
adcl
sbb
icebp
mov
gs
stos
call
clc
mov
mov
iret
icebp
cmc
imul
jno
cld
dec
popa
mov
icebp
cmc
inc
fistl
mov
push
and
int3
std
fcompl
sub
push
ja
mov
test
push
xchg
in
dec
mov
jge
fwait
sahf
jae
pop
cltd
or
mov
xchg
jae
mov
adc
pop
or
out
in
bound
std
pop
dec
jno
jb
jecxz
pop
fmuls
scas
adc
movsl
icebp
push
xor
loopne
mov
xor
cmc
dec
sub
scas
imul
arpl
jecxz
enter
xor
fiadds
test
gs
shrb
mov
iret
pop
mov
cld
in
dec
pop
or
lea
out
faddl
enter
cmp
imulb
jno
call
repz
movd
arpl
xor
lds
xlat
loop
jno
jmp
mov
popf
sub
xcrypt-ctr
cmpsl
faddl
lahf
mov
cltd
xchg
stc
mov
jae
shlb
xchg
sarl
cld
sub
mov
clc
ja
mov
imul
mov
dec
xchg
nop
inc
pop
das
jl
testl
lea
stos
add
or
mov
inc
insl
mov
jmp
mov
jo
outsl
negl
or
mov
ret
in
loopne
push
popa
push
mov
push
jg
xor
pop
mov
insb
mov
add
pop
cmp
sub
cld
fimuls
in
pop
adc
movsb
push
pop
ss
mov
addr16
sbb
in
subb
jl
enter
pop
test
inc
pop
xchg
and
out
cmpsb
sub
mov
dec
insb
mov
mov
push
fstl
push
imul
ljmp
mull
jnp
cwtl
push
fwait
jno
xor
lahf
rcrl
push
or
jbe
or
mov
loop
pushf
add
loop
jmp
pop
out
adc
dec
jmp
cmp
stc
xor
rclb
jbe
inc
lock
cmp
jb
mov
xchg
xchg
and
cmc
cmpsl
mov
lods
std
call
je
xchg
iret
sub
push
dec
add
cmpsl
mov
xchg
int
cmp
xor
mov
pop
push
and
in
cmpsb
sbb
adc
add
rcl
cmpsl
xor
aam
mov
or
and
cmc
add
xor
std
dec
mov
ja
cli
and
push
pop
and
pop
pop
es
cmp
dec
cmp
imul
enter
jbe
dec
sub
jb
push
mov
out
cs
cld
ds
adc
movsb
sub
addr16
sahf
xor
dec
sahf
xorb
std
shl
imul
push
add
andl
adc
das
push
xchg
mov
push
lret
push
outsb
and
stos
movsb
sbb
ret
sahf
shlb
fbstp
lds
or
mov
jbe
jo
mov
add
inc
xor
pushf
pop
jno
push
xor
push
cmp
lcall
inc
adc
test
movsl
xchg
adc
xor
fmulp
std
inc
test
mov
mov
mov
adc
scas
das
jle
push
je
xchg
xchg
jmp
mov
popf
popf
inc
stc
or
loope
out
mov
fisubrs
cmp
sbb
jg
outsl
leave
aaa
insl
repz
jb
xor
test
data16
fs
lahf
xchg
lret
add
add
cli
or
frstor
pop
xlat
dec
outsb
mov
mov
loop
xor
jl
stos
bound
adc
cltd
mov
add
jp
ss
adc
pop
scas
popa
dec
push
std
dec
cltd
pushf
les
sti
cmp
insl
rol
push
and
or
call
pop
sti
loopne
xchg
shll
mov
dec
cmp
adc
lea
jo
outsb
arpl
clc
pop
movb
push
movsl
push
js
pop
aad
pushf
xchg
shr
or
mov
aam
xor
and
mov
and
push
push
dec
aad
adc
insl
or
inc
je
es
loope
pusha
cwtl
aaa
mov
mov
sbb
pushf
jmp
jns
sbb
pop
movl
pop
adc
repnz
dec
cmp
sub
rcll
xchg
ljmp
paddusw
xor
movsl
outsl
loop
jmp
xchg
adcb
adc
mov
sbb
inc
in
sbb
jb
sub
sub
cmovnp
pushf
xor
adc
ret
pop
jmp
cmc
les
pop
out
push
adc
mov
insb
ljmp
lret
out
pop
push
mov
mov
push
sbb
xor
and
push
call
xor
adc
jmp
or
xor
test
mov
xchg
int3
jmp
dec
test
jecxz
les
sahf
push
cmp
call
inc
mov
add
sbb
pop
cwtl
rclb
test
sbb
pop
les
jnp
enter
cmp
xlat
push
push
xor
je
xor
mov
adc
pop
jno
lea
lret
mov
dec
outsl
mov
dec
cs
fiaddl
cld
jp
sbb
cli
adc
jp
mov
mov
lock
jge
jge
push
rol
pop
xlat
dec
outsb
mov
mov
ffree
roll
xchg
inc
in
mov
inc
sub
cmp
cmp
xor
xor
xlat
mov
xchg
ret
xchg
sti
push
test
out
jg
test
xor
ja
jmp
or
popa
cli
jecxz
loope,pt
loope
jnp
lea
stos
imul
cmp
add
sbb
pop
mov
dec
outsb
mov
mov
jmp
cmc
add
mov
jle
dec
adc
out
xchg
dec
sub
push
lcall
or
fstpt
sti
nop
xor
clc
jb
movsl
fimuls
sahf
push
call
sbb
repnz
ja
pop
jno
mov
sub
sbb
call
faddp
subl
fidivl
lea
mov
mov
fs
outsl
daa
sbb
lcall
xorb
stos
leave
xchg
aaa
mov
mov
test
cmpsb
stos
rcrb
movsl
outsb
cld
push
mov
mov
lret
aas
push
push
cs
jp
cmpsb
pop
outsb
in
in
jg
and
dec
retw
mov
sbb
aad
xchg
mov
cmp
xchg
shl
insl
pop
in
dec
xor
push
push
push
shrl
arpl
adc
ja
xchg
cld
adc
into
nop
sti
outsl
incl
pop
jg
lds
data16
push
cltd
push
cmp
arpl
mov
mov
pushf
xor
xchg
or
adc
stos
int3
or
in
fsqrt
pop
xchg
pushf
xor
mov
movsb
enter
sbb
loope
jno
push
or
add
jns
in
clc
ja
ja
aam
arpl
aam
std
cmpsl
scas
lahf
dec
xor
pop
unpckhps
or
xor
mov
sarb
xor
sbb
fldcw
aas
frstor
stos
cmp
sbbl
mov
mov
ficoml
sbb
in
jl
jnp
repz
push
xchg
shr
int3
loopne
in
in
shrb
and
and
jge
inc
divl
jo
add
orb
jne
xor
push
and
and
or
aas
pop
aam
rcll
xchg
adcl
pusha
jno
push
push
dec
xchg
jne
aam
pop
sub
stos
je
inc
mov
insl
sbb
cmpsl
pop
xor
cwtl
jmp
jbe
xchg
insb
mov
test
dec
jno
push
or
ljmp
jecxz
mov
mov
inc
jle
rolb
cmc
mov
jnp
sub
add
ds
sub
neg
pop
fidivrs
add
fwait
insb
xor
xchg
pop
mov
mov
push
jb
dec
sbb
fldt
xchg
lahf
shll
rcll
and
cli
inc
push
lea
out
sarb
mov
hlt
cli
push
xor
xor
jae
cmc
and
icebp
imul
sub
sbbl
or
push
dec
cmp
jmp
fiadds
sbb
aas
pop
pop
jecxz
stc
sub
fucomi
ds
mov
sub
popa
loopne
push
or
ss
insl
xchg
pop
and
xor
shlb
xchg
nop
pusha
jb
cmp
fbld
sub
sbb
test
testb
sti
mov
push
std
and
push
shll
or
xor
in
pop
out
mov
loopne
push
jne
jbe
in
fwait
and
stos
div
daa
dec
arpl
nop
in
push
jmp
mov
int3
fcoms
mov
mov
aad
inc
mov
adc
popf
sarl
lret
add
cmp
mov
inc
mov
push
pop
cmp
andb
mov
test
in
lahf
adcl
in
push
dec
aam
pop
mov
xchg
push
andnps
mov
xor
data16
shrl
pushf
test
xor
xor
xor
addr16
push
fistl
fwait
xchg
adc
stos
enter
and
scas
shlb
dec
nop
inc
ss
addb
pop
push
js
pop
aaa
jg
jnp
stos
testb
mov
dec
adc
cmp
sub
mov
out
shrl
adc
mov
loopne
inc
sub
pushf
shlb
or
dec
stc
js
jno
pop
sbb
and
jns
insl
outsb
lret
mov
jmp
inc
fwait
cmp
mov
push
ficomps
out
je
shlb
popa
pop
inc
push
xor
stos
das
mov
sbb
add
cmp
sbb
lods
subl
jp
aam
ret
rorl
in
mov
popf
cmp
adc
or
add
pop
and
rcll
xor
push
fwait
int
js
ja
mov
fidivl
dec
popa
xlat
and
les
jno
es
aam
and
mov
or
cmpsl
lahf
iret
sub
aam
cs
mov
add
jae
out
pop
push
sub
sti
ret
dec
xor
xchg
addl
mov
inc
pop
sub
sub
jl
mov
pop
adc
lret
stos
out
xor
je
call
aas
cmpsb
mov
cmpsb
pushf
std
jbe
mov
mov
dec
lds
loop
dec
mov
pop
mov
out
mov
xchg
pop
sarl
jns
mov
ror
inc
fdivrs
and
pop
mov
cmp
mov
sub
mov
cld
xchg
insb
lds
mov
jbe
cmp
out
jnp
lods
lret
jo
mov
adcb
call
int3
or
lods
dec
xor
lods
mov
test
and
mov
rorb
mov
pop
shlb
bound
jne
mov
mov
je
inc
and
jno
gs
xchg
lahf
pop
xchg
xchg
push
aaa
shlb
nop
adc
orl
cli
rclb
cwtl
dec
loope
pusha
adc
out
mov
insb
push
loop
loop
addl
dec
hlt
cli
shlb
sbb
jl
ja
xlat
call
imul
cmp
sahf
inc
scas
arpl
xchg
push
sub
dec
sub
sub
xor
xchg
std
push
subb
cmpl
sbb
xor
mov
xchg
add
mov
test
inc
fs
repnz
adc
adc
fidivrs
sbb
or
mov
inc
fidivrl
or
cmp
jge
push
push
xchg
mov
popf
dec
addl
add
out
mov
jo
jne
inc
lea
ja
lahf
lret
pushf
jbe
ret
push
and
mov
movsb
or
in
jle
test
clc
add
gs
cmp
xchg
inc
rolb
mov
xor
mov
xor
push
mov
dec
stos
xchg
out
xor
mov
sar
sbb
cltd
or
out
mov
movsb
dec
test
mov
ja
and
das
insl
data16
sbbb
mov
sti
outsb
xchg
arpl
push
fnsave
inc
cwtl
add
xor
cmpsb
fisubl
lock
ss
cld
rcll
mov
divb
jle
outsb
scas
popf
or
shl
test
sbb
dec
xchg
mov
lcall
icebp
das
xchg
aad
pop
and
dec
jmp
push
jbe
dec
loop
hlt
jo
push
sahf
dec
lods
mov
adc
mov
fldl
mov
push
inc
jno
or
les
jmp
into
lcall
push
aad
cmp
xor
cwtl
mov
mov
jb
jo
cmc
iret
dec
das
mov
fsubrl
clc
push
sub
mov
adc
iret
clc
push
xor
xor
and
adc
pop
push
add
lods
fildll
aaa
leave
sahf
jl
mov
fadds
and
mov
cltd
xchg
mov
iret
divb
sub
jnp
sub
add
stos
dec
pushf
lahf
pop
ds
push
sbb
push
test
repz
les
pushf
gs
mov
in
cmpl
push
daa
das
stos
push
push
adc
fbstp
push
xchg
cmp
and
pop
orl
add
cmp
adc
mov
pop
mov
test
nop
xchg
repz
jmp
imul
cs
sbb
push
test
cmp
stos
out
out
cmp
mov
push
jp
jbe
xchg
fs
out
ficoml
jmp
mov
clc
mov
std
psrld
or
int3
repz
into
xchg
add
adc
jnp
adc
sti
in
mov
les
jmp
pushf
lods
dec
fs
push
hlt
or
and
adc
pushf
gs
inc
mov
pusha
pop
je
mov
cmc
icebp
jmp
xor
mov
add
lock
or
push
fsubrp
les
xlat
and
sub
xchg
movl
and
imul
sar
addr16
lret
inc
push
mov
test
data16
scas
ljmp
cltd
das
pop
pop
out
mov
push
inc
inc
sbb
push
and
or
xchg
sbb
xchg
into
int
sub
ret
cld
xchg
sbb
idivb
jle
scas
inc
inc
adc
int3
mov
ficomps
cli
rolb
xor
jne
idivb
xor
out
dec
les
insb
mov
jge
test
pushf
adc
pop
dec
test
lea
addb
bound
out
enter
sbb
and
push
jl
mov
or
pop
push
push
mov
or
or
scas
pushl
mov
adc
pop
rorl
xor
mov
andb
cmc
jecxz
push
in
mov
mov
xlat
dec
sub
xor
stos
xor
xor
inc
mov
xor
insb
fwait
dec
xorl
add
repnz
add
adc
mov
cld
jb
xor
inc
push
adc
mov
jg
push
pop
xchg
push
ja
jmp
stos
mov
negb
mov
data16
es
insb
jno
sahf
adc
out
hlt
fld
xchg
insb
dec
push
dec
sub
cli
stos
incl
or
adc
add
mov
jge
andb
add
or
xchg
jnp
jnp
pop
jne
clc
cli
pop
mov
xchg
mov
dec
xchg
lock
aad
mov
sti
dec
jnp
xchg
inc
adc
call
arpl
push
jb
push
mov
dec
pop
jecxz
ret
int3
out
out
add
push
jl
call
subl
mov
mov
test
movsb
jns
push
test
mov
leave
mov
imul
jge
xor
adc
call
and
clc
lret
adc
adc
push
mov
test
mov
enter
jge
data16
and
xlat
movsb
mov
sarb
push
pop
aad
into
sub
xor
iret
es
aam
sbb
adc
add
lods
mov
fbstp
je
iret
cmpsl
test
or
je
jb
xchg
pop
lahf
cwtl
arpl
sbb
cmp
mov
pusha
pushf
in
mov
ds
stos
lods
jle
andl
fistpl
inc
xor
fwait
cli
mov
in
sub
adc
pop
rorl
repnz
or
pusha
cli
adc
test
dec
rclb
sbb
and
popa
in
pushf
mov
inc
mov
mov
jmp
fisttpl
clc
scas
rcrl
sub
insl
cli
fistpll
cmp
xchg
adc
fcoms
adc
mov
fwait
push
sub
mov
and
pop
mov
rcrl
inc
cmp
ret
scas
dec
repnz
enter
xor
lods
inc
shrl
xchg
jecxz
std
cld
negb
aad
repz
test
loopne
mov
outsl
test
mov
lret
lock
sub
mov
in
lods
mov
stos
add
pop
addr16
add
inc
mov
mull
jecxz
fcoms
lods
push
dec
ret
ljmp
rcrl
sub
lea
push
pop
ds
mov
xchg
add
and
jo
les
popa
addb
jmp
mov
sti
fwait
add
xchg
cmp
fsubl
gs
pop
popa
inc
jae
mov
mov
in
jae
cld
dec
dec
lret
in
jbe
mov
sub
mov
mov
movl
push
fildll
or
xchg
ret
xor
fcmovnb
xchg
lret
cmp
in
inc
pop
inc
push
cmpsl
pop
adc
cli
mov
adc
add
lods
lea
popa
and
test
in
add
inc
lahf
cmp
ja
jns
bound
jbe
lcall
mov
int
bound
fcmovnbe
fucomp
push
jmp
sti
ljmp
cmp
aam
jmp
iret
pop
mov
cmp
inc
shl
dec
mov
mov
call
sti
mov
scas
xchg
mov
xchg
mov
testb
fsubl
cmpb
fstpt
add
pop
lret
push
testl
shll
inc
jne
jecxz
and
popa
rorl
fildll
inc
mov
jmp
pop
jecxz
sub
stos
out
aas
loope
jl
rolb
dec
sub
in
push
add
mov
fwait
dec
mov
cmpsb
paddusb
lea
test
daa
jne
mov
les
dec
mov
add
push
sbb
rcr
das
dec
shll
mov
fiaddl
mov
pop
xlat
shll
push
pop
ljmp
jno
xor
mov
adc
xor
ficoms
or
and
shrl
into
pusha
pop
xchg
sub
cli
push
add
test
add
ret
leave
xor
or
pusha
adc
mov
cs
push
jmp
inc
adc
inc
mov
aaa
add
push
add
ds
bound
dec
jns
lea
or
jae
fldenv
faddp
xchg
clc
lret
xchg
push
inc
outsb
sbb
sbb
adc
jmp
cmp
sti
or
cli
mov
adc
fadds
shll
jbe
cmp
lods
sbb
inc
pop
pop
dec
xchg
aaa
pop
mov
add
test
adc
sahf
jmp
sti
inc
cmc
in
add
mov
dec
out
sbb
pushf
xlat
sti
ja
push
inc
sti
jl
add
out
arpl
mov
dec
cmc
mov
push
pop
mov
xlat
jno
in
adc
sub
stos
jne
pusha
xchg
movsb
imul
push
sub
jmp
add
xchg
sbb
mov
inc
mov
mov
pop
je
push
inc
dec
fwait
dec
or
pop
test
cld
add
push
aas
stc
push
subb
mov
mov
cmc
push
inc
mov
mov
fstpl
xlat
lret
mov
dec
mov
dec
out
aas
lds
or
repnz
in
notl
mov
jmp
inc
or
sbb
hlt
pop
test
sbb
imul
push
sub
hlt
fs
js
jnp
pop
pushf
xchg
cmp
dec
int3
int
lds
push
insb
inc
push
or
incl
sbb
addl
subl
decb
arpl
jmp
imul
xchg
mov
mov
into
nop
cmc
xchg
mov
in
mov
sbb
jne
cmpsl
xor
jne
xchg
andl
pop
mov
sbb
in
pop
mov
cs
in
inc
pop
jns
das
push
cwtl
jl
sahf
add
jg
jecxz
movsl
jb
jmp
js
sub
in
es
lds
jbe
jne
negl
hlt
pusha
loopne
dec
cmpsb
jno
in
sbb
ret
adc
movsb
cwtl
push
cld
fsubl
inc
and
sbb
mov
sbb
and
dec
stos
addr16
cmpsb
pushf
jp
and
lcall
lds
xchg
mov
adc
dec
out
popf
icebp
adc
mov
sub
jl
mov
cmp
cmp
sub
xchg
or
inc
dec
test
dec
and
xchg
jecxz
fadds
push
lahf
sub
sbb
push
lock
bound
pop
dec
add
ds
decl
jge
lret
sbb
sub
mov
sti
sbb
xchg
outsb
add
add
dec
shlb
icebp
pop
shr
xor
sbb
data16
fldl
mov
push
push
leave
cld
lahf
test
sub
jnp
jle
add
insb
popa
cli
pop
enter
movsl
movsb
xchg
jp
es
mov
push
popf
scas
xor
mov
cltd
inc
xor
shll
pusha
mov
shrl
sahf
push
sub
pop
xchg
push
jnp
clc
jbe
pop
mov
jecxz
push
lock
sub
and
or
fadd
bound
mov
fld1
testl
push
mov
andb
mov
fwait
mov
mov
je
roll
pop
into
jo
cli
leave
jne
shr
mov
xor
fwait
bound
clc
ucomiss
mov
out
xchg
push
in
inc
mov
cli
in
sub
add
daa
jmpw
data16
mov
repnz
incb
pushl
dec
sarl
fwait
or
push
orl
repnz
shll
xlat
xor
orl
mov
push
sbb
movsb
xchg
jno
sub
cli
inc
addr16
decl
xor
inc
adc
and
repnz
idivb
fsubs
in
push
into
inc
fwait
cli
aad
mov
mov
fistpll
js
xor
mov
sub
lods
in
inc
daa
lcall
fistpll
mov
fidivl
add
mov
mov
movl
repz
mov
dec
cli
ficompl
sub
sub
dec
mov
pushf
leave
insb
mov
aas
mov
mov
in
mov
push
pop
sub
das
into
stc
frstor
add
and
mov
sub
jp
les
sbb
push
test
in
jmp
dec
incl
int
jle
push
in
sub
fst
dec
and
xorb
jo
mov
or
jb
call
lahf
add
mov
or
mull
loope
loop
out
pop
cmp
xchg
shlb
into
loopne
jl
inc
daa
sub
mov
sub
or
cmc
iret
cs
mov
jns
adc
xor
shlb
inc
aas
push
xor
imul
lock
xor
inc
cltd
xchg
push
lret
lods
jb,pn
add
insl
lret
into
inc
add
scas
xor
pop
and
loop
ror
push
call
dec
repz
clc
mov
jo
mov
pop
xchg
pop
mov
xchg
lret
cmp
jae
sub
mov
inc
jecxz
lods
xor
jl
xchg
mov
negb
or
and
dec
frstor
mov
add
adc
aas
roll
shrb
and
mov
xchg
pop
sub
scas
dec
sahf
shll
lret
jge
lds
notl
cmpl
pop
mov
pop
sahf
dec
sub
out
jnp
pop
jae
xor
imul
dec
pushf
ja
std
fistl
int3
data16
mov
pop
jne
xor
ja
std
fistl
data16
enter
jne
loope
es
rclb
mov
add
imul
pop
or
inc
push
aam
xorb
pusha
jmp
inc
mov
movb
aam
rcll
cmc
push
lods
add
iret
aam
out
lea
xor
fwait
and
jl
adc
sbb
into
sub
in
mov
test
xchg
sub
ljmp
repz
xchg
scas
rcll
int
rcll
in
test
test
and
lods
ret
xor
ljmp
mov
js
mov
insl
lock
movsb
int3
and
add
stc
aas
mov
cmp
sub
push
mov
pop
gs
xor
jbe
cmp
mov
cmc
test
mov
cmp
and
sub
rorl
cwtl
rcrl
ds
pop
and
inc
xchg
je
mov
cwtl
mov
xor
cltd
int
sbb
loopne
out
ljmp
push
aas
push
outsl
add
pushf
dec
dec
insb
dec
out
sbb
mov
pop
cmpsl
push
xor
cmp
popa
shll
mov
xchg
jbe
push
adc
addb
mov
adc
movsl
push
mov
or
sahf
jmp
dec
lods
dec
or
add
mov
js
pop
add
jge
jns
adc
sub
imul
xlat
ljmp
lea
xor
icebp
add
push
sub
int
and
mov
inc
cltd
cmc
push
jns
imul
aaa
xor
sbb
and
aam
jnp
int
loop
mov
loop
and
jno
aas
push
mov
xchg
ret
sub
mov
sub
push
jb
into
cmp
add
fstp
inc
neg
pushf
cli
xor
lods
lea
leave
mov
dec
rclb
mull
insl
lcall
mov
push
jecxz
test
adc
sbb
jecxz
notl
push
inc
mov
xchg
push
adc
cmp
adcl
inc
popa
loopne
or
inc
bound
jno
insb
shrb
ret
sub
jg
cld
sub
jae
out
je
xchg
arpl
dec
push
xchg
imul
lret
clc
add
push
ret
insb
ret
sti
cmp
mov
add
mov
test
jmp
mov
test
pop
pop
or
sub
lods
pop
mov
int3
jmp
sub
pop
xor
fdivr
andb
ja
jns
js
stc
es
ret
aas
aas
ror
push
jle
dec
mov
lcall
add
popl
loop
xchg
sub
pop
mov
inc
pop
jnp
hlt
rorl
rolb
mov
arpl
mov
add
pop
mov
dec
fsub
fs
and
aas
int3
incl
jae
adc
shll
jecxz
dec
std
mov
test
aam
lret
add
bound
popa
popf
push
and
outsl
cs
je
mov
lea
inc
mov
ja
int3
inc
mov
fidivrs
lcall
sub
mov
jnp
popa
pop
arpl
inc
inc
add
adcb
inc
decl
negl
adc
cmpsl
pushf
xchg
dec
lea
and
mov
aaa
jmp
testl
lret
jno
dec
insl
pop
shrb
push
aad
push
dec
push
or
imul
aaa
fistpl
jecxz
inc
dec
dec
jmp
inc
push
adc
pushf
dec
fistps
mull
adc
xor
mov
or
stos
cmp
clc
or
mov
popf
inc
xchg
pushf
lds
jo
sub
mul
xchg
sbb
pop
xor
pop
sbb
jo
sub
les
mov
push
mov
sub
sub
lds
dec
sbb
lods
or
cmp
mov
cli
push
dec
leave
pop
pop
pop
and
sbb
ss
and
pop
ret
pop
push
rorl
pushf
pop
or
jbe
mov
inc
sub
xor
pop
or
fwait
repz
sub
xchg
in
test
or
iret
mov
xor
int
icebp
scas
cmc
sub
aam
lock
orb
dec
popf
inc
fbstp
call
bound
dec
inc
scas
sub
push
mov
pop
enter
or
sbb
mull
lods
jg
sub
cli
js
sbb
lret
sbb
pop
add
icebp
adc
jecxz
cmpsl
and
mov
mov
mov
inc
daa
xchg
pop
mov
mov
cld
insb
pop
and
add
je
loope
jp
orl
inc
jmp
mov
call
loopne
jle
dec
ret
pop
mov
cmp
jmp
call
imul
mov
movsb
out
add
test
mov
bound
insl
and
stos
je
imul
repz
mov
enter
pop
js
rclb
scas
das
xchg
sbb
dec
push
fs
in
lret
mov
pop
mov
cltd
cmp
sub
dec
ja
jmp
sub
adc
outsl
push
int
or
and
pop
add
fisttps
pop
inc
pop
pusha
cmp
fildll
subb
fiaddl
jbe
fcompp
in
ds
fwait
movsb
pusha
ja
cmpsb
pusha
aad
push
add
adc
push
xchg
ljmp
ret
and
lods
gs
jae
cmp
roll
sbb
jge
mov
aaa
pcmpgtb
push
lret
xor
dec
enter
pop
push
xor
movd
sbb
sub
and
jmp
fsubl
lock
or
lret
ljmp
mov
and
scas
inc
mov
dec
lds
and
adc
mov
jae
push
dec
scas
loope
adc
ds
les
mov
ss
mov
inc
pop
dec
nop
xlat
push
int
push
inc
dec
test
insl
adc
mov
rol
and
mov
fidivs
mov
and
mov
fdivrs
xchg
mov
xor
lahf
push
mov
aaa
out
jle
insl
cmp
add
fwait
leave
rcrb
pop
push
lock
cmc
xchg
pop
cs
dec
jb
pushf
ret
icebp
lods
and
lret
or
stc
aad
and
push
fists
xchg
xchg
mov
push
loope
add
sub
adcl
add
and
jnp
fpatan
jg
inc
push
sarb
sar
rcrl
mov
in
xchg
mov
data16
push
sahf
push
jl
scas
lock
jbe
jle
mov
or
ja
shl
imul
push
adc
mov
jb
rcrl
jmp
insl
mov
push
cmp
cs
out
cmp
idiv
outsl
lea
mov
adc
imul
ror
outsl
dec
xlat
xor
push
mov
sti
jns
rolb
jecxz
shrl
adc
outsb
addl
adc
das
cmpl
jb
jl
fdivrs
ret
mov
add
or
fadds
or
mov
sbb
mov
xor
mov
xchg
ss
jnp
mov
cmpsl
adc
lahf
movsb
dec
adc
xor
fldl
imul
js
pop
sti
lods
div
bound
notb
orb
push
xchg
es
into
cmpsb
test
push
sbb
or
lock
mov
push
sbbb
mov
fisubl
jns
pusha
ficomps
mov
mov
adc
int
push
jns
adc
lods
dec
jmp
in
fstl
jp
push
clc
lods
xchg
pop
mov
fcoml
popa
dec
rcr
or
ret
sti
pop
stc
ficompl
xor
mov
sbb
mov
fstps
mov
pop
into
mov
fcoml
inc
jmp
lahf
inc
push
subl
das
out
jnp
test
pop
or
out
int3
mov
push
mov
pop
mov
iret
cmp
popa
lcall
lret
xor
sahf
pop
sbb
pop
inc
and
insb
adc
mov
pop
and
cld
and
fcmovbe
enter
mov
mov
jb
jg
mov
sub
adc
icebp
movsb
lret
ds
test
adc
mov
lods
or
mov
pop
and
lods
cld
popf
inc
push
xor
cmpsl
mov
mov
jb
jg
mov
mov
inc
pop
cmpsb
mov
cmp
ds
lret
mov
mov
pop
mov
mov
icebp
sbbb
daa
pop
lret
aad
test
gs
test
inc
pop
mov
mov
decl
cli
mov
pop
add
pop
imul
repnz
fwait
out
adc
ret
add
test
stos
enter
adc
lock
add
dec
std
jns
xchg
jnp
sbb
scas
jns
je
mov
pop
nop
mov
lea
xchg
dec
cmpsb
jne
lahf
cmpl
jns
push
fwait
sub
in
cwtl
adc
push
sahf
push
stos
clc
int
aam
fists
dec
push
sarb
mov
fsts
or
idivb
mov
cmp
rcl
out
pop
and
cwtl
adc
pop
addr16
mov
sub
sbb
cmpsb
sbb
popf
pop
push
or
inc
jl
out
xchg
mov
test
mov
ss
imul
add
pop
fimuls
cli
mov
js
xor
mov
dec
xchg
mov
push
loop
cmp
sub
stos
xor
sub
das
lock
sbb
daa
pop
es
das
push
loope
xchg
mov
cmpl
xlat
ficoms
and
movsb
add
or
pop
jmp
sbb
pusha
shlb
ret
imul
iret
mov
lea
sub
dec
pushf
scas
adc
adc
imul
sub
mov
mov
aas
leave
jne
add
dec
jg
scas
dec
inc
xchg
rolb
into
mov
out
hlt
jns
bound
xchg
cmp
mov
imul
cld
aaa
nop
xor
push
sub
gs
insb
pop
xchg
ret
sbb
jne
inc
jb
xchg
testl
call
add
xor
data16
popa
hlt
movsb
subb
jmp
add
mov
notl
inc
mov
dec
inc
enter
push
push
pop
xor
and
inc
mov
push
sbb
jae
inc
xchg
insb
dec
out
lock
cmp
push
add
lcall
scas
int
mov
shll
pop
stos
lock
outsb
sarl
mov
mov
mov
or
movsb
fbld
data16
mov
pop
ja
in
popa
mov
insb
pop
inc
pusha
add
or
out
lret
stos
loopne
sub
xor
jp
inc
sbb
cmp
add
test
dec
sbb
nop
stos
jns
shll
rcr
fildl
mov
pop
lret
cmpsb
int3
lcall
xorb
jae
pusha
test
outsb
lods
bound
jbe
mov
aaa
out
std
push
incb
inc
dec
nop
xor
xlat
testl
nop
xchg
mov
inc
sbb
sbb
jle
jne
xchg
cmp
pop
daa
mov
cmp
lcall
jg
out
nop
xor
in
daa
cmpsb
imul
xor
push
dec
push
cltd
inc
loope
sti
lds
push
stc
xchg
push
cli
and
sbb
mov
add
mov
mov
leave
fidivl
adc
push
push
dec
xchg
in
test
ja
pushf
jae
stos
sbb
sub
lea
cmp
mov
pushf
lea
mov
cs
jns
cmc
cmp
xchg
mov
jns
hlt
or
push
test
sbb
fdivs
mov
into
xor
imul
jo
add
dec
sub
mov
cmpsb
lock
jg
adc
pop
pop
dec
jno
popf
lret
cmp
nop
mov
and
push
insl
mov
shrb
in
aaa
lahf
cmp
jne
outsb
js
push
mov
dec
insb
popa
popf
mov
xchg
sub
data16
call
fdiv
stc
das
lret
push
sub
loopne
stc
push
xor
cltd
jno
xor
adc
mov
mov
jp
aad
fs
jbe
std
xchg
xor
pop
std
sarl
scas
cld
daa
data16
rol
adc
and
xchg
insb
stos
dec
movsl
into
cmp
in
lahf
lea
cmpl
repz
gs
out
inc
ret
pushf
ret
inc
cli
dec
pop
sbb
insl
arpl
pop
mov
adc
jl
loopne
or
stc
lea
xor
dec
arpl
dec
mov
sbb
popa
cmpsb
pop
pop
cmc
lahf
xchg
cmp
sahf
jne
and
jbe
sub
rorl
mov
sub
adcb
push
hlt
hlt
add
rclb
add
add
pop
lea
jbe
push
icebp
scas
xchg
sbb
cld
inc
sbb
xchg
popf
inc
jns
pop
xchg
dec
push
in
cltd
cmp
cli
into
xor
into
sub
jl
add
cmp
mov
xor
arpl
dec
loopne
add
adc
sbb
pop
repz
inc
lea
inc
push
or
sbb
dec
mov
ss
repz
cmp
arpl
js
xorl
divb
fmull
repnz
shlb
int3
adc
cmpb
lret
and
or
loope
pop
xchg
faddl
and
push
adc
lcall
aam
cmp
xchg
mov
cltd
punpckhdq
and
lahf
push
xor
push
sbb
call
imul
sbb
repnz
insl
or
dec
push
cmp
fidivrs
sub
faddp
stc
cli
push
icebp
ret
mov
mov
inc
imulb
sub
pop
cmp
cmp
jmp
cs
andl
cltd
jb
adc
jae
outsl
lret
testl
xchg
add
xchg
jae
loop
inc
jno
call
dec
push
xchg
adc
cmp
ja
insl
mov
out
inc
xorb
xor
cmp
ja
and
shrb
enter
xchg
out
js
sbb
insl
adc
jmp
cmp
xor
lcall
cmp
cmp
out
pop
push
arpl
jb
imul
add
call
push
imul
stc
dec
sub
std
pop
push
sub
movsb
sahf
xchg
rcr
mov
jo
out
xchg
add
add
mov
add
adc
mov
divl
insl
xchg
cli
ljmp
mov
ds
subb
mov
cwtl
sar
xor
jbe
fmuls
aam
xor
outsb
sbb
aam
movsw
lods
jnp
fwait
js
and
aam
or
test
push
xor
insl
into
xor
xchg
xchg
lahf
mov
fstl
inc
add
mov
push
repnz
ret
loope
repnz
das
and
mov
mov
popa
arpl
jne
addb
insb
mov
dec
mov
and
dec
add
xorb
push
or
inc
sub
jmp
pop
sbb
mov
inc
negb
push
out
scas
outsl
pop
xor
stc
dec
repz
insl
lock
pop
add
scas
and
call
or
push
push
stos
sbb
je
gs
loope
std
lock
mov
inc
aaa
dec
int
sub
inc
mov
jp
add
sbb
fnsave
and
icebp
jae
xor
push
xchg
cmp
les
jl
js
in
lods
xchg
cmpsl
inc
inc
jno
jb
pop
pop
jnp
clc
rorb
je
mov
insb
sub
sbb
fldenv
mov
mov
insb
jmp
or
push
in
or
sub
inc
testl
push
lret
das
adc
lret
stos
push
repz
jne
andb
jno
mov
inc
jmp
fistps
icebp
test
jo
aaa
icebp
decb
add
out
iret
addr16
clc
fisttpl
insb
sbb
lcall
fldl
sub
ret
outsb
xor
inc
mov
adc
sbb
inc
mov
lods
mov
das
test
jecxz
sbb
lret
add
les
add
inc
xchg
call
inc
mov
int3
pop
leave
mov
popa
push
cmp
int3
sbb
outsb
xchg
cmp
sub
sbb
jb
pop
cltd
pop
push
in
jl
adc
adc
bound
dec
adc
outsl
inc
and
pop
jno
and
pop
cmp
inc
incb
pop
aas
stos
mov
popa
loop
popa
and
movsl
sub
ss
addr16
mov
out
add
cld
outsl
fstpt
add
sub
ljmp
mov
push
fbstp
nop
test
mov
test
dec
aad
insl
ret
inc
addb
lds
jb
mov
dec
mov
fwait
sub
xchg
xor
std
cmp
jb
out
cmpsl
push
out
sbb
xor
push
xchg
push
mov
and
mov
lock
sub
cltd
push
stos
pop
xchg
test
repnz
add
adc
rcrl
int
popa
or
pop
mov
imul
cld
xchg
scas
push
loope
mov
call
jae
nop
jbe
imul
repnz
xor
pop
lods
and
in
fdivrl
pushf
insb
jl
xor
mov
inc
movsb
sub
lcall
aaa
insl
mov
in
mov
data16
mov
xlat
shlb
out
xchg
es
mov
adc
inc
or
cmp
pusha
ror
loopne
sbb
mov
inc
imul
cltd
lock
sar
jp
lock
std
xor
stos
dec
loop
lds
aaa
inc
andb
jb
jg
rolb
hlt
mov
mov
inc
addb
pop
pop
shlb
sbb
lahf
addr16
loopne
jge
pop
mov
adc
dec
mov
subl
xlat
icebp
clc
cmp
insl
ficompl
and
pop
cld
adc
cli
int3
fcompl
stc
dec
fs
push
lods
add
add
fisubrl
icebp
push
push
fdivs
cmp
rcrb
aad
icebp
and
ror
cmpsl
adc
repz
outsb
inc
mov
sub
mov
cmp
inc
dec
inc
sahf
lock
or
cmp
mov
or
sub
imul
aam
out
cmpsl
cmp
and
insb
icebp
scas
ja
jp
test
inc
xor
mov
aas
icebp
ret
mov
and
test
sar
sub
sbb
shrb
out
in
jecxz
mov
repz
stos
push
cmp
mov
jecxz
addl
sub
loope
cmp
in
mov
adc
adc
iret
mov
adc
iret
les
sbb
mov
inc
outsl
sbb
rolb
pop
lcall
or
pop
or
cmp
or
loope
jno
fs
nop
movsb
adc
call
add
scas
sti
iret
or
adc
jnp
ljmp
cmp
leave
rorb
sbb
bound
xchg
cli
jno
jle
lods
adc
scas
arpl
inc
pop
hlt
mov
xchg
test
xchg
mov
shll
mov
and
xchg
loope
fsts
pop
cli
pop
in
xchg
cmp
inc
cmpl
ficoml
cmp
imul
inc
out
test
xchg
push
pop
jecxz
mov
stos
mov
cwtl
xor
call
xor
xorl
fwait
push
add
dec
lods
mov
and
xor
mov
lds
mov
or
inc
stos
xor
jb
aam
scas
cmpb
add
sbb
and
jne
adc
jecxz
in
leave
push
mov
arpl
test
jnp
cmp
ja
mov
sub
and
pop
or
aas
xchg
mov
cmp
inc
fwait
in
lcall
fcoml
pop
sbb
cmpsb
js
and
loopne
mov
pop
cmpsb
rol
out
cmp
clc
ja
scas
jo
fs
incb
push
int3
inc
ljmp
jecxz
stos
je
or
lods
scas
adc
dec
jne
mov
dec
lret
imul
sub
imul
setns
fs
enter
shrb
fsubrp
xchg
add
lds
dec
mov
mov
js
fldt
xchg
or
mov
pop
and
cmc
xor
ds
and
add
mov
in
and
mov
xchg
and
jmp
push
shrl
pop
pop
ja
dec
cld
mov
mov
ss
or
mov
roll
popf
insl
push
xchg
ficoms
and
inc
hlt
stc
cwtl
pushf
loope
sbb
lahf
pushl
out
nop
xor
test
mov
lods
mov
push
mov
icebp
xchg
push
loopne
icebp
xlat
mov
ret
jge
jmp
xor
sub
out
mov
cmp
inc
inc
lds
push
sbbl
sbb
sub
mov
add
jl
rcll
push
insl
roll
fisttpll
gs
lcall
sub
loopne
xor
imul
pusha
daa
pop
add
sbb
mov
clc
pop
add
clc
fildll
inc
or
xor
loop
mov
xor
sahf
jnp
mov
mov
xchg
in
and
addl
movsl
push
inc
adcl
or
or
loopne
or
push
addr16
sti
add
pop
and
adc
add
or
jbe
test
and
out
cwtl
sub
rcl
add
adc
push
test
clc
icebp
cmp
pop
fimuls
aam
adc
push
push
push
sub
fcmovu
xor
sub
xchg
sbb
aam
push
fists
pop
add
imul
je
adc
cmp
mov
mov
popf
xchg
adc
push
push
fs
jle
mov
and
sub
out
je
cld
push
lds
in
xor
or
or
cmp
cmp
or
push
fstpl
rclb
call
clc
xchg
mov
sub
push
and
das
fildll
sbb
data16
fnstcw
pop
out
push
push
jge
add
cmpsl
push
push
jmp
ja
repz
adc
jge
arpl
sub
icebp
lret
cltd
aas
mov
push
mov
cmp
notl
js
pop
imul
repz
bound
popa
inc
mov
sbb
sbb
outsb
push
mov
mov
add
lcall
mov
inc
and
mov
or
js
and
sub
hlt
sub
stos
mov
jnp
xchg
incb
add
and
call
xchg
xor
lea
lods
xor
or
int3
mov
movsb
mov
je
lret
push
jnp
ret
out
pop
pop
ss
lods
mov
add
and
mov
ja
stos
or
sub
or
xor
dec
mov
inc
or
jae
nop/reserved
pop
stc
jne
cwtl
mov
xchg
arpl
dec
sub
daa
cmpsl
shl
cmp
pushf
rorl
xchg
mov
xlat
push
mov
sahf
arpl
push
rcl
jae
leave
sub
fwait
addr16
sbb
test
push
jnp
shl
sbb
jne
xchg
shrb
jg
cwtl
fisttps
pusha
orb
push
es
push
jnp
ret
jno
pop
pop
fsts
testl
jno
mov
lods
sbb
add
insl
inc
dec
loop
aam
scas
jl
add
aad
add
js
idivl
cmp
mov
sbb
dec
pop
gs
loopne
sub
cmp
pop
cmp
xchg
push
add
les
cltd
adc
inc
jns
hlt
jmp
mov
sbb
xor
dec
sub
inc
push
dec
mov
pop
dec
add
xchg
pop
mov
lods
pop
mov
out
dec
pop
cmpsb
mov
shr
pop
push
xchg
jmp
dec
xor
inc
inc
ret
lods
jle
dec
adc
xchg
fadds
xchg
sbb
push
ds
sarb
mov
sub
cltd
dec
jg
std
and
movsb
add
dec
mov
subb
in
jle
outsl
inc
pop
ror
and
adc
les
and
lcall
and
pop
ds
leave
and
push
sbb
lock
or
adc
sub
sbb
push
jle
repz
add
movsl
movsl
int3
or
sub
fistl
jo
xchg
test
sbb
adc
out
dec
sub
pop
push
dec
sub
lds
xor
cmp
pmaddwd
clc
or
xchg
jmp
cmpsl
sbb
and
neg
cld
sbb
lock
sbb
xchg
repnz
sahf
decb
cmp
popf
shlb
pop
jg
or
mov
xchg
sbbb
mov
hlt
mov
loop
xchg
or
stos
in
cli
cmp
xor
repnz
sahf
decb
ret
fabs
jns
sub
fdivrl
xchg
sub
xchg
cltd
icebp
sbb
push
cltd
mov
push
cmp
stos
jp
insb
in
icebp
filds
fcmovnu
lea
adc
lret
pop
xor
or
inc
icebp
lds
xchg
sbbb
jecxz
sub
movsl
enter
and
pushf
jl
outsl
insl
shll
lret
sub
cwtl
xchg
xlat
enter
xor
mov
jnp
test
sub
push
shr
xor
pop
inc
or
mov
ds
mov
pinsrw
cmpb
xchg
inc
mov
and
insl
jle
and
cmpsl
adc
and
loop
xor
xchg
test
mov
mov
imul
je
mov
bound
scas
iret
shl
inc
lahf
mov
jp
cmc
push
filds
add
ret
fimuls
lret
mov
xor
lods
loopne
add
mov
ja
mov
pusha
out
add
lret
xlat
cwtl
dec
or
adc
or
mov
orb
mov
inc
and
hlt
sahf
mov
lret
xchg
jp
into
push
sbb
enter
mov
mov
or
cs
dec
mov
adc
cmp
in
jae
pop
mov
stos
mov
test
js
fists
sahf
mov
in
inc
and
jge
xchg
dec
cwtl
and
jmp
test
mov
lcall
int3
adc
loop
icebp
pop
xor
sti
dec
jle
cmpb
add
dec
pop
fs
add
mov
and
push
mov
clc
or
lods
inc
clc
xchg
aas
movlps
out
or
cmp
sub
test
enter
fistpl
cmp
das
test
mov
mov
sahf
jg
add
mov
shlb
out
pop
push
mov
xchg
clc
xlat
pop
or
sbb
jmp
loopne
nop
out
cmp
push
incb
or
or
sub
testb
rorl
push
push
loope
hlt
xchg
andl
push
lds
nop
bound
lcall
testl
iret
scas
pop
push
push
notl
ja
dec
dec
scas
mov
pop
sbb
cmp
scas
adc
push
out
cmp
rcrb
xor
add
add
xchg
out
or
enter
sub
test
mov
jo
les
stc
cmp
push
add
mov
das
mov
mov
shrl
pop
aam
movsb
ss
fstps
xchg
cmp
or
sub
gs
sub
ja
mov
push
add
adc
cwtl
adc
leave
inc
sbb
movsl
and
mov
shll
bound
cltd
jae
inc
hlt
adc
mov
inc
xchg
clc
iret
xor
ret
add
sub
lea
pop
ljmp
das
jns
push
and
cld
cmc
xchg
outsb
imull
xor
and
aas
cmpsl
adc
repz
outsb
inc
mov
loope
les
cwtl
inc
xchg
addr16
pop
push
jge
xor
mov
push
pop
or
xor
jl
jb
test
fnstcw
sub
in
sbb
shr
rorb
inc
dec
push
in
mov
in
or
stos
aaa
icebp
jl
mov
fwait
mov
addb
push
mov
ret
arpl
imul
adc
sbb
addr16
scas
idivl
cmpsl
pop
rolb
add
pushf
jmp
add
xchg
jg
int3
lods
xor
add
fistps
xor
add
bound
in
fcmovnbe
xchg
fs
jae
mov
dec
scas
lds
div
adc
xor
stos
inc
sahf
xor
clc
mov
pop
mov
inc
push
loop
aaa
nop
test
movsb
fistpl
xchg
pop
jl
dec
add
mov
fsubs
sbb
notl
in
jge
rcrb
mov
jl
cmp
test
mulb
xor
inc
sub
lods
or
xchg
fstl
dec
stos
push
les
xor
addr16
sub
xor
pushf
js
sarb
cmp
add
sbb
cmc
fwait
xor
jnp
mov
jnp
mov
iret
mov
stos
add
pop
and
in
inc
dec
das
mov
inc
mov
cmc
dec
sub
rol
pop
std
aam
call
movsb
stos
jmp
pop
jp
out
pop
mov
js
repnz
jnp
or
repnz
xor
jg
jae,pt
mov
sub
sbb
lds
and
gs
xchg
and
push
in
lock
inc
mov
mov
shlb
aaa
xchg
adc
test
stc
or
call
mov
fcoml
orb
mov
inc
addl
lret
fs
sbb
sarb
aas
dec
cli
inc
mov
insb
aas
aad
inc
stos
fcoms
cmp
mov
addl
inc
int3
pop
mov
push
pop
pop
and
in
xchg
fisttpll
int3
add
enter
mov
jge
cwtl
sbb
pushf
dec
loopne
arpl
sbb
xorl
in
or
xchg
imul
inc
enter
jnp
sub
add
call
jge
insl
stos
pop
pop
xchg
pop
push
mov
cmpsb
sbb
mov
push
mov
fsubrl
or
jns
pop
pushf
xor
jns
call
aas
push
mov
lcall
or
pop
decb
pop
fcompl
aaa
mov
in
add
negb
das
repz
scas
xchg
jp
dec
mov
sub
arpl
pop
mov
and
insb
hlt
rep
pop
cmp
inc
imul
and
push
pushf
xorl
jo
cmpsb
ud0
stos
out
movsb
fnstcw
out
sbb
mov
or
mov
ljmp
or
add
in
call
or
iret
jp
dec
orb
pop
mov
adc
inc
mov
xlat
mov
push
call
xor
cmp
pushf
and
adc
or
ret
mov
cli
fstps
ret
cmc
xchg
push
into
iret
mov
sub
pusha
into
out
test
sub
enter
pop
lret
cmp
hlt
add
lock
mov
in
out
add
lods
pusha
add
inc
fwait
sub
test
pop
cli
rcrl
mov
jmp
lds
sbb
push
cwtl
insl
testl
jg
push
xchg
fildll
pop
neg
inc
jae
ljmp
stos
call
ja
push
in
mov
jb
sub
xor
test
testl
adc
mov
shrb
and
mov
les
test
mov
or
xchg
filds
xchg
mov
pop
rcl
ret
and
fistpll
mov
sbb
mov
dec
xchg
cmpsb
outsl
out
sahf
das
inc
scas
jb
add
out
adc
cmpsl
aaa
sbb
xchg
push
pop
int3
stos
iret
popf
or
fdiv
or
xor
rep
push
jns
stos
pop
mov
das
sub
fistps
cmp
js
mov
lret
ret
add
test
sbb
inc
push
mov
mov
push
push
out
mov
adc
sub
jl
jbe
adc
cmpsl
imul
sarl
inc
mov
stos
sbb
or
pop
lock
repz
je
add
into
fsubrs
pop
inc
jecxz
xchg
mov
push
dec
outsl
sub
fdivrl
int
jp
sub
and
jns
or
fstl
rcr
jl
mov
push
aaa
mov
je
or
lea
add
sub
fwait
aaa
roll
rclb
ret
mov
sbb
xchg
mov
dec
mov
mov
aam
or
push
dec
bound
mov
fisttpl
sub
push
aad
outsl
jae
aaa
cmp
in
inc
mov
add
ss
in
inc
je
mov
pusha
test
pusha
jl
dec
insb
sub
push
jb
xchg
je
mov
fs
lret
sub
sub
pop
data16
loope
iret
ror
fiaddl
add
mov
add
mov
or
pushf
mov
cmc
cmc
sbb
add
popa
and
pop
inc
movsl
xchg
and
mov
sbb
outsl
cmpsl
xchg
jno
adc
push
add
xlat
cmpsl
sbb
inc
or
lret
mov
pop
iret
adc
jnp
fisttpl
sub
ljmp
cwtl
mov
loopne
push
les
mov
jb
xchg
rorl
push
mov
adc
cmp
lods
jae
scas
cmp
cmpsb
shr
push
mov
add
lods
xchg
mov
cmp
push
add
cld
in
sub
adc
in
sarl
inc
scas
imul
mov
popa
xchg
xor
lock
mov
cmp
cmp
xchg
mov
pop
fwait
dec
or
sbb
ss
push
add
fwait
dec
cmpsl
lea
int
outsb
scas
fbld
insl
pop
nop
scas
aaa
xor
in
push
or
push
and
mov
adc
les
jp
imul
add
ror
or
mov
dec
jae
jg
gs
lahf
fsubr
aad
push
cld
stos
mov
inc
jo
mov
pop
sbbl
add
andb
test
lds
sbb
mov
cmp
dec
xchg
imul
sbb
xchg
js
mov
gs
in
mov
not
cmp
in
nop
xchg
cmp
test
test
in
jae
dec
cmp
negb
push
test
xchg
push
mov
lods
fwait
fs
jns
movsl
adc
fcmovb
ja
cmp
xor
and
xor
xor
loope
sub
mov
das
sub
clc
cmpsl
bswap
inc
jae
mov
shl
sbb
push
imul
rolb
cs
leave
int
gs
test
lods
mov
loope
pop
or
push
dec
adc
and
xor
push
out
les
addl
or
ljmp
pop
xchg
ljmp
out
ss
push
mov
jns
mov
jl
ljmp
xchg
sub
std
or
xchg
push
push
jle
mov
in
jmp
shrl
cmp
cmp
jbe,pt
mov
sahf
mov
cmp
inc
sbb
adc
test
mull
xchg
cwtl
test
lods
and
cmp
and
push
aam
mov
in
pop
cltd
in
jle
jnp
dec
sbb
loopne
mov
sub
and
mov
lods
aaa
or
jno
mov
repz
xor
pop
mov
divl
jmp
je
xor
pop
nop
cwtl
test
inc
repnz
dec
push
add
adc
jae
xor
psrld
add
add
dec
xor
pop
out
out
jecxz
jg
les
int3
fs
arpl
fcmove
scas
cltd
jmp
xchg
xchg
inc
pop
fsts
mov
shl
jns
jmp
mov
outsb
mov
shll
or
mov
shll
shld
sub
in
aaa
lods
gs
pop
xor
sbb
aad
jg
mov
jno
inc
jo
lds
fadds
int
addl
cmp
dec
xchg
loopne
mov
xchg
inc
rcrl
xchg
in
inc
or
push
orb
in
ficompl
push
lret
lret
call
cli
or
cmp
ljmp
test
dec
mov
mov
les
push
mov
mov
lods
push
mov
adc
cs
dec
pop
rclb
in
pop
push
enter
jns
out
dec
pop
sub
insl
or
call
push
jno
fwait
pop
imul
jb
ret
js
jge
jb
add
adc
paddd
mov
xor
lahf
mov
inc
daa
cli
dec
jge
adc
sub
adc
xor
pushf
leave
arpl
dec
fisubl
fcompl
sub
pop
push
cmpsl
popa
dec
cmp
cmp
mov
and
enter
add
daa
das
jnp
pop
sbb
add
lds
push
cli
inc
dec
outsb
push
js
nop
lahf
adc
mov
fadds
out
or
shrl
xchg
arpl
sarl
xor
movsl
xor
lock
lods
enter
xchg
cmp
xor
inc
pushf
fstpl
mov
dec
push
push
sahf
sub
adc
adc
cs
xor
dec
and
jl
push
pushf
xor
mov
fisttps
hlt
das
scas
jnp
mov
sahf
lcall
aas
fs
popf
cmp
cwtl
sub
stc
cmpsb
nop
mov
lods
xor
jbe
or
lcall
das
push
mov
pop
mov
dec
addb
lcall
mov
aaa
cli
data16
fcmove
sub
mov
mov
punpckhwd
xchg
lret
mov
jno
mov
sbb
push
xor
rcrb
sub
inc
pop
dec
mov
jb
rclb
cmpl
cwtl
cs
out
cmp
neg
mov
xchg
xchg
xor
cmpsb
mov
push
nop
popa
pop
adc
out
jmp
jp,pt
sub
jne
jecxz
xlat
sub
out
cltd
lds
xor
push
adc
jge
fs
test
mov
inc
xchg
xor
jg
push
dec
xor
ljmp
jb
add
mov
cmp
push
in
jmp
xchg
movsb
sub
in
iret
aad
es
xor
or
ficompl
outsb
mov
cmp
js
rcll
mov
sarb
inc
fdivs
xchg
ljmp
dec
push
adc
mov
sbbb
jecxz
xchg
cmpsb
movsl
pop
cltd
push
pop
gs
test
das
mov
xchg
push
insl
pop
movsl
sahf
aad
les
scas
and
mov
push
lahf
add
xchg
xchg
lahf
mov
jno
mov
popa
lret
or
jae
das
iret
jle
lods
sti
mov
test
push
mov
imul
xchg
movsl
mov
movsl
pushf
xchg
and
dec
mov
mov
andb
jg
lahf
shlb
sbb
cltd
pop
insb
in
lret
push
push
jne
ss
fisttps
popf
hlt
andl
sti
and
xchg
push
push
sbb
jmp
sahf
scas
out
test
loope
js
mov
xchg
clc
jmp
sbb
int3
inc
sub
popa
cmp
call
cld
lcall
add
jae
mull
stos
notb
cmp
movsb
in
push
repz
fdivr
mov
mov
cs
xor
ret
ja
je
int3
pusha
xchg
add
sub
loope
xor
jns
outsb
sub
pop
push
pusha
sbb
jbe
nop
aas
mov
into
addl
push
mov
sbb
push
pusha
jnp
addb
mov
mov
out
lret
pop
mov
ss
fidivrs
dec
add
pop
cmp
jmp
or
inc
in
inc
test
mov
sbb
and
rcr
cltd
negb
in
sbb
jmp
xor
sbb
ds
or
arpl
jmp
cltd
mov
pushl
sbb
jle
imul
sub
nop
dec
xchg
hlt
enter
push
push
leave
or
pop
es
int3
push
dec
lea
xchg
jp
cmpsl
xchg
pop
jp
add
cli
or
jns
and
cmpsl
gs
hlt
popa
or
add
sbb
inc
popf
in
push
lods
add
push
test
loopne
and
and
sbb
inc
aad
andb
sahf
cmp
lds
imul
aaa
adc
jo
jmp
mov
mov
test
sbb
push
dec
mov
mov
sahf
gs
sub
cmc
push
mov
mov
and
inc
inc
cmpsb
inc
xchg
ss
xlat
lods
jb
ds
mov
mov
rcll
call
daa
fsubrp
es
dec
mov
scas
jno
bound
sarl
insl
add
je
mov
sbb
mov
or
fimull
pop
lea
sbb
xor
mov
adc
hlt
mov
fiaddl
stos
sbbl
scas
cli
movsl
or
lret
cs
icebp
mov
sub
xor
pop
lcall
add
fisttpll
dec
in
mov
rcrl
mov
subb
ljmp
cmpb
rclb
mov
adcb
les
pop
iret
lret
adc
mov
das
pop
pop
lea
sbb
and
shlb
loope
pop
mov
in
sub
inc
cmpb
mov
inc
das
test
and
sub
jnp
fbstp
or
cmp
xor
add
and
cmp
xchg
ret
scas
pop
je
clc
scas
pop
lahf
or
mov
aas
test
mov
dec
xchg
test
adc
out
int3
pusha
in
sub
out
and
outsb
stos
mov
out
scas
dec
or
or
xor
out
xor
add
sub
rclb
xlat
jmp
mov
or
mov
sub
adcl
sub
push
js
outsb
scas
pop
sbb
pop
ret
pop
flds
xchg
cli
lds
call
iret
lds
popf
push
aam
inc
cmc
xor
pop
lcall
cmp
bnd
or
xor
pop
push
adc
mov
dec
es
addr16
insl
test
pop
mov
jmp
js
dec
push
lods
mov
daa
stc
xor
imul
faddl
popa
fists
fcmovnb
push
add
jl
loop
push
lret
mov
xor
fs
popf
mov
cmp
icebp
mov
mov
cmp
sbb
jecxz
adc
xchg
dec
cmpsb
filds
jle
out
add
pop
sbb
push
and
mov
mov
insl
pop
into
mov
jl
ret
enter
sub
arpl
mov
and
shr
fwait
scas
jecxz
dec
ljmp
into
shll
mov
dec
mov
and
movsb
and
mov
scas
aaa
imul
cmp
fiaddl
js
mov
inc
pop
pop
push
xchg
jge
and
mov
or
mov
sbb
add
and
out
dec
and
repz
xchg
js
shrl
jge
push
call
dec
jge
push
lret
out
popa
lahf
mov
mov
jg
insl
add
int3
inc
popf
sub
push
xor
xchg
decl
ja
mov
insb
push
mov
and
call
enter
push
mov
inc
lcall
test
and
dec
iret
pop
dec
add
clc
mov
push
repz
xor
mov
xchg
mov
out
xchg
cli
es
inc
pop
mov
pushf
xor
cwtl
jns
mov
xchg
inc
mov
add
or
cltd
adc
and
push
push
or
incb
repnz
fistpl
fists
out
or
imul
mov
out
jb
xor
sahf
loopne
add
xchg
cmp
or
pop
jl
mov
clc
test
test
and
lahf
push
pop
push
jp
pop
les
jp
sub
rcrb
movsl
ds
or
sbb
jmp
push
jb
jp
dec
out
or
sbbl
les
xchg
out
js
sbb
adc
shlb
inc
scas
sbb
lock
arpl
pop
xor
imul
inc
mov
mov
dec
inc
popa
jl
movsl
in
or
and
loope
enter
sub
shrl
jae
int
mov
mov
inc
mov
test
js
js
clc
sub
bound
dec
leave
xor
into
jecxz
push
nop
inc
jb
jne
sub
lahf
sbb
jl
xchg
sbb
or
cmp
pop
jle
cld
mov
cmp
dec
xchg
in
mov
jecxz
jo
or
in
gs
jl
lock
push
cmp
push
mov
push
repz
ficoms
push
scas
fdivr
jo
jge
pop
mov
cmp
pop
mov
in
addr16
data16
push
shrb
ret
inc
pop
inc
sub
cmpsl
pop
jbe
inc
es
inc
adc
and
in
fstl
loopne
mov
and
movsb
dec
add
jne
test
aad
add
jle
lcall
ljmp
bound
int3
insl
mov
mov
insb
fmuls
and
pop
mov
mov
je
or
repnz
fwait
jae
jle
adc
negl
push
fdivrl
ret
xor
arpl
inc
and
loop
ret
sbbl
leave
mov
std
jle
push
addb
call
cs
or
sbb
outsl
rcr
mov
imul
sub
xchg
into
pop
push
mov
sub
xchg
cmp
ds
cmpsb
cltd
fs
sub
cwtl
popf
jne
jmp
ret
xor
int
xor
jl
cmp
outsb
dec
cld
pushf
and
adc
sbb
push
dec
mov
loopne
xchg
and
and
sub
insl
mov
stos
sub
out
in
mov
out
ret
bound
add
jns
cmp
lahf
mov
mulb
mov
dec
stos
xor
adcb
lcall
sahf
or
push
adc
add
test
add
jmp
divl
add
addl
adc
scas
repz
es
lea
stos
cltd
add
add
push
ljmp
mov
push
and
rcrl
icebp
push
es
je
aaa
enter
xor
pusha
adc
mov
dec
clc
inc
add
pop
push
xor
adc
pop
pusha
xchg
push
add
repz
scas
and
mov
mov
mov
pop
out
pop
dec
loopne
mov
add
dec
mov
mov
shr
pusha
bound
inc
xchg
divb
sub
leave
or
jo
pop
insb
xor
cmp
imul
jo
jno
shlb
loope
out
add
add
or
push
xchg
stos
jae
mov
xor
cmpw
mov
or
push
pop
pop
cld
adc
fnstcw
mov
mul
push
fs
fidivrl
adc
clc
mov
out
and
dec
sti
popa
mov
call
jle
jnp
insl
in
mov
push
add
pop
les
adc
or
push
cmp
xlat
and
hlt
testb
stos
mov
mov
dec
dec
nop
shlb
push
mov
pushf
sbb
cltd
xor
add
aas
xchg
popa
adc
and
and
jmp
xchg
dec
sbb
movsl
jno
add
xchg
pop
push
ret
lock
in
push
div
out
adc
and
dec
dec
insb
lret
mov
and
mov
cmp
rolb
pop
es
loopne
imul
mov
mov
outsl
mov
or
shll
aas
fiadds
nop
sbb
test
inc
xchg
pop
mov
sbb
and
mov
xor
lahf
xchg
lock
xlat
mov
sub
iret
sub
insb
mov
and
jge
je
test
out
je
push
push
call
cmp
repz
xor
mov
addl
pop
adcl
pusha
jno
lock
xor
push
lcall
push
add
cmpsl
jo
movsl
mov
push
and
jo
das
sbb
push
pop
sub
cmp
ret
sti
fwait
loop
iret
in
or
mov
rorl
pushf
test
or
fdivs
xor
fidivl
cmpsl
shlb
lds
fisubl
jle
push
out
or
add
add
rolb
push
ret
pop
mov
xchg
mov
cld
push
push
jo
mov
and
push
push
fsubp
xchg
das
pushf
es
and
aaa
mov
shrb
sbb
push
shrl
clc
sti
jnp
sbb
test
fcomps
js
fsubs
sub
and
xchg
test
sub
add
bound
mov
ss
das
out
pop
sbb
add
enter
loopne
sub
inc
mov
mov
rorb
xchg
pop
outsb
mov
push
dec
out
into
scas
stc
push
sbb
fcom
aas
inc
popa
and
inc
jp
movsl
mov
in
and
mov
cmp
ljmp
popa
imul
fsubrl
int
loope
jo
cmpsl
popa
adc
data16
sbb
sub
jge
fst
fsqrt
rcr
pop
push
push
inc
or
cli
xchg
int3
stos
or
roll
xchg
mov
push
lret
mov
or
stc
fs
aaa
idiv
pop
inc
pop
shll
xchg
icebp
jle
out
jns
mov
js
push
xor
xor
cmp
inc
ljmp
ss
lret
xor
out
mov
shrl
jecxz
ljmp
iret
add
orl
cmc
sub
mov
loope
popf
push
push
mov
mov
and
and
sbb
fistl
add
inc
push
and
mov
mov
sbb
inc
pushf
js
sbb
push
fst
aas
cmp
mov
push
cwtl
cmpsb
inc
push
cmp
and
cmc
inc
dec
pushw
rcl
outsb
adc
out
push
sub
xchg
fxsave
lahf
push
or
cwtl
jp
xor
jle
insl
add
dec
lret
cmp
loopne
pop
jb
sahf
dec
mov
push
mov
test
into
sub
or
mov
lds
and
cmpb
lds
mov
and
jl
cmp
insb
lods
jp
scas
xchg
add
lret
pop
lods
pushl
into
push
insb
push
xchg
shll
sbb
pop
subb
sbb
out
push
std
mov
and
jmp
clc
push
inc
adc
push
insb
pop
cs
pop
idivb
adc
cs
rol
repz
jecxz
adc
cmc
loope
das
sbb
xchg
pop
mov
out
or
push
je
data16
push
movsb
or
icebp
into
mov
jo
cmc
sbb
loop
pop
aas
cmp
cld
subb
xor
out
push
push
cs
daa
jp
jp
dec
push
cmp
add
mov
movsl
call
aaa
push
out
mov
outsl
and
stos
mov
lods
pop
fidivl
int
lahf
incl
in
mov
jbe
test
xchg
jle
mov
stos
inc
mov
fisubrs
push
in
adc
xlat
jg
jle
insl
xchg
add
mov
push
rolb
mov
mov
das
sub
aaa
pop
inc
fdivl
xor
dec
jns
sub
cmovp
mov
or
iret
popa
jnp
notl
sahf
mov
add
push
pop
push
lock
stos
fadd
subl
roll
in
out
or
dec
cli
pop
popa
push
add
adc
xchg
jbe
inc
decb
shrl
dec
popa
sbb
jmp
insl
sbb
loope
pop
out
pop
pop
cli
ret
aam
ja
xchg
lea
ficomps
push
add
cltd
test
push
sbb
sar
or
pop
push
pop
aas
fcomp
fisttpll
shrb
add
push
mov
aam
mov
adc
das
andl
ss
fsubr
rolb
negb
add
jmp
test
dec
lret
pop
push
rcrb
cmp
lahf
sbb
xchg
insl
mov
ret
mov
sub
mov
or
test
mov
dec
mov
cmp
xchg
mov
jecxz
mov
push
cmp
outsb
push
push
dec
clc
xchg
xor
inc
push
fs
inc
xor
inc
movsb
fbld
addl
lahf
push
jnp
repnz
lea
jns,pt
mov
mov
lea
or
mov
mov
fdivrs
test
jae
xchg
addr16
inc
xor
inc
hlt
pop
add
or
cwtl
test
aas
les
jnp
push
dec
aam
ror
push
std
in
aaa
scas
les
std
ret
mov
xor
pop
cmpsl
mov
inc
or
dec
orb
or
mov
lcall
xor
fucomip
pop
mov
or
mov
fdivrs
add
arpl
xor
cmp
mov
pop
popf
cli
sbb
add
iret
cmp
jmp
mov
push
mov
pop
cld
push
push
lods
xor
scas
mov
addl
jne
insl
in
sub
mov
insb
adc
add
fcoml
pop
and
pop
scas
or
fstps
sub
adc
sub
ljmp
test
ss
loopne
jmp
test
pushf
pop
dec
movsb
sarl
inc
imul
mov
jmp
dec
ror
pop
jb
cmp
xorb
sarl
inc
jl
int
adc
lret
sbb
sub
test
sbb
push
loopne
aad
scas
cmp
stos
add
jl
mov
lods
subl
push
mov
mov
push
jae
hlt
or
jmp
mov
outsl
and
cmp
mov
fistpl
adc
sub
push
jae
mov
dec
push
push
in
inc
and
dec
xchg
inc
inc
into
data16
int3
arpl
jmp
adcb
inc
mov
es
mov
pop
jmp
je
add
jg
nop
inc
enter
and
jno
inc
and
inc
sbb
lock
dec
pop
gs
or
stos
stos
xorl
jle
pop
adc
cmpsl
roll
jbe
js
jmp
fs
add
test
xor
lret
jg
add
jecxz
clc
xor
mov
leave
outsl
push
int
or
sbb
push
lock
add
ret
sub
flds
xlat
test
in
nop
jp
incb
mov
xlat
mov
out
shrl
xor
xchg
xchg
dec
mov
push
icebp
fnstsw
fidivl
mov
sub
lds
mov
test
mov
insb
xchg
sbb
arpl
mov
inc
cld
je
sti
pop
hlt
inc
adc
bound
xchg
js
call
repz
sub
sbb
insb
and
jnp
jl
mov
pop
sub
scas
in
das
xchg
inc
sbb
lods
sbb
add
pop
in
aam
jbe
cmp
test
pop
dec
inc
mov
mov
cmp
sarl
cmp
repz
lock
push
sbb
das
adc
and
cmc
inc
pop
mov
add
dec
scas
jmp
mov
pop
mov
test
es
xor
sar
dec
ds
enter
sub
mov
sub
pop
push
mov
dec
and
jns
xor
stc
sahf
adc
mov
xor
cmp
pop
dec
xchg
xor
push
and
jae
add
lret
jns
je
pop
push
xchg
cmp
imul
sub
mov
mov
push
mov
sahf
mov
fisttps
mov
cmp
daa
mov
jp
rclb
mov
ja
imul
outsb
mov
jle
imul
cmp
inc
dec
arpl
mull
sbb
stos
loope
outsb
aaa
in
sub
sub
jp
loopne
rolb
jle
mov
gs
or
pop
lret
mov
out
jg
add
int
cmpsl
inc
mov
sar
mov
xorl
mov
jl
adc
cli
fstps
leave
insl
sub
xor
pop
sbb
into
es
or
mov
add
mov
cmp
rorl
dec
mov
sbb
xor
mov
inc
das
aas
xchg
or
lret
or
add
aam
fisttpll
push
and
icebp
mov
jbe
mov
pop
rcrb
pop
or
mov
int3
fcom
dec
fisttpll
push
and
lods
add
shlb
pusha
rcrb
pop
or
dec
bound
jge
lahf
fcom
dec
fisttpll
push
and
mov
mov
jge
test
rcrb
pop
or
sbb
out
push
aad
stc
pop
cs
and
orl
rcrl
mov
dec
fmuls
scas
xchg
push
shl
lahf
pop
or
mov
int
gs
shrb
mov
fmuls
sbb
cmp
xor
adc
and
adc
sub
sbb
inc
ror
fdivl
popf
in
fcmovu
mov
popl
cmpsl
shl
and
mov
not
dec
mov
popa
repnz
xchg
test
lods
or
popf
shlb
or
iret
adc
repnz
arpl
sub
nop
or
inc
push
pop
stos
fstp
dec
in
dec
inc
rol
stc
inc
repnz
adc
repnz
arpl
and
test
jne
js
xchg
xchg
mov
push
sbb
inc
pop
cmp
jbe
hlt
popf
into
aad
xchg
movsl
mov
push
sbb
mov
add
and
adc
std
es
sarl
jmp
stc
dec
pop
imul
adc
dec
inc
repnz
adc
repnz
arpl
adc
pop
jl
dec
pop
das
cmc
mov
xchg
add
jmp
mov
sub
cmpsl
cmpsb
call
dec
and
mov
cwtl
jge
ss
sub
mov
movb
frstor
cmp
pop
xchg
cmp
add
std
xchg
xchg
mov
jb
mov
addr16
cli
xchg
xchg
xlat
icebp
filds
jb
adcb
fs
scas
jnp
pop
les
dec
dec
daa
cmp
cli
mov
cmp
push
loopw
push
inc
lods
push
loop
ljmp
pop
inc
int
mov
adc
cmp
adc
fildl
out
je
mov
sbb
or
push
mov
pop
scas
pop
push
adc
jge
push
lahf
xchg
stc
dec
nop
push
cltd
cmp
add
add
xor
cltd
pop
sub
bound
mov
ja
xor
mov
dec
mov
aad
push
icebp
std
add
je
das
mov
outsb
cmpsl
pop
les
cs
aas
out
addr16
out
sub
cmp
outsl
fstp
sbb
ja
xor
ds
pop
das
pop
mov
and
test
imul
jne
xchg
xchg
lahf
dec
rclb
fdivs
jmp
sub
dec
cmp
cs
aas
out
addr16
mov
push
ds
mov
sub
fisttpl
add
sti
out
cmc
mov
push
mov
dec
mov
add
fsubs
ja
roll
mov
jg
xor
nop
lods
pop
mov
test
arpl
cmp
out
or
pop
cli
inc
pop
dec
sbb
mov
pop
push
sbb
xor
inc
push
dec
push
in
sub
test
push
fdivrs
push
sub
jb
and
out
inc
jns
sbb
mov
xchg
aaa
call
imul
xchg
movsl
pop
lahf
sub
jno
dec
xor
cmp
out
fiaddl
mov
scas
pop
jns
jecxz
pop
daa
outsl
mov
imul
scas
or
xor
lret
sub
mov
out
dec
jnp
inc
fisubrs
add
iret
mov
shrb
xor
lret
jns
push
cmpsl
pop
fwait
mov
sub
roll
cmp
dec
stos
push
jl
enter
or
cmc
outsb
inc
mov
bound
stc
lea
xor
in
inc
mov
in
test
icebp
cmpsl
mov
lea
ja
fstpt
stos
mov
popl
inc
mov
xchg
sub
ret
sbb
roll
insl
iret
xchg
lcall
xchg
insl
sbb
xchg
push
sub
jns
hlt
xor
lods
sub
jge
and
cmp
jl
pop
test
arpl
sub
adc
mov
xor
hlt
cmpl
mov
mov
sbb
fwait
inc
pop
out
in
jo
inc
mov
ret
sub
mulb
xchg
xlat
aad
sbb
inc
mov
cmp
fildll
movsl
repnz
push
inc
sbb
js
cmp
and
scas
sti
stos
movsb
mov
mov
xor
out
popa
aas
sbb
cmc
mov
inc
addr16
fnstcw
xchg
push
mov
xor
nop
outsl
dec
sub
dec
jp
aaa
push
test
adc
negb
in
lret
pop
jb
cli
ret
into
into
xchg
cmc
shrl
add
ret
sarb
clc
leave
repz
das
inc
push
adc
dec
lods
adc
pushf
cwtl
mov
xchg
cmp
xchg
add
imul
fnstcw
mov
lret
addr16
ret
push
jmp
add
dec
outsl
add
daa
outsb
lds
mov
sbb
adc
pop
leave
jae
imul
das
bnd
inc
pop
je
adc
push
in
sahf
std
inc
add
push
jecxz
orb
ffreep
sub
pop
stos
fldt
leave
daa
xchg
cmp
sbb
negl
adc
addr16
rcrb
cmp
add
or
test
dec
int
int
lods
mov
fildll
data16
sub
pop
int
mov
mov
jge
inc
test
adc
movsb
stc
inc
fwait
out
dec
mov
cmp
mov
loopne
andl
aad
lea
adc
adc
test
xor
lahf
movsl
das
and
mov
push
adc
stos
movsl
lock
jle
xor
mov
in
sbb
cld
inc
rcrl
and
or
adc
xlat
ret
movsb
or
mov
stos
dec
clc
inc
dec
or
mov
xchg
aaa
mov
ret
push
push
push
sti
bnd
das
ds
movsb
xchg
xor
dec
or
xchg
add
adc
hlt
iret
inc
xchg
mov
fdivs
push
push
add
loop
nop
int
mov
jbe
inc
dec
add
jae
movsl
aad
sub
or
mov
int3
and
push
mov
stos
out
lods
mov
pop
mov
cmp
dec
rorl
dec
jl
mov
push
mov
stos
out
lods
mov
ret
insl
pop
or
pusha
daa
cmpsb
jecxz
mov
fnsave
dec
mov
mov
cmp
cmp
xchg
stc
out
loope
jbe
shlb
test
pop
in
or
sbb
fistps
lret
test
push
push
arpl
inc
ljmp
and
nop
shrl
jmp
fists
dec
add
call
or
lret
iret
add
fimuls
jle
cmp
cmp
out
or
mov
adc
in
or
movsb
jno
jae
cwtl
or
jae
push
push
mov
mov
scas
out
sub
sahf
push
mov
test
andb
mov
jg
lods
loop
pop
clc
lahf
out
jns
dec
leave
push
sbb
jecxz
fcoml
in
sbb
scas
sub
dec
sub
push
mov
inc
pop
pop
cmp
fstps
fldt
inc
pop
sbb
xadd
out
xchg
into
inc
push
or
stos
and
into
or
dec
mov
mov
pop
pop
out
loopne
adc
push
lcall
and
stos
xor
fnstenv
or
cmc
push
add
sub
psubw
cs
inc
jnp
sub
cld
cmp
loopne
ljmp
shrb
push
aam
xchg
fwait
mov
cwtl
xor
jne
xchg
adc
lock
rcll
lods
es
push
sub
fistl
leave
pushf
adcb
cmp
out
cmc
std
push
mov
xchg
mov
mov
pop
rcl
add
xchg
dec
xchg
jmp
movsl
lds
xor
int
clc
enter
xchg
test
ret
sbb
lock
xor
rcll
pop
fildl
pop
outsl
imul
mov
jge
in
dec
jo
jmp
adc
and
int
pop
and
cmpsb
test
test
repz
rolb
and
pop
mov
push
cwtl
sbb
xor
scas
flds
fwait
mov
inc
push
push
pop
rorb
pop
mov
out
cli
inc
mov
mov
adc
jmp
movsb
mov
repz
pop
jg
cli
divb
cli
pop
lret
outsb
mov
push
int3
xor
pop
mov
mov
lea
cmp
or
jp
in
ds
xor
cmpsb
xlat
jne
fcmove
mov
test
hlt
ret
push
sbb
mov
in
xor
xchg
and
aaa
int
sub
in
or
fnstsw
sbb
imul
and
je
adc
cmp
fdivrp
test
shll
rolb
addr16
add
xchg
daa
mov
mov
fldt
xchg
dec
or
mov
mov
leave
fnstenv
sbb
repnz
imul
lahf
scas
icebp
cwtl
repz
clc
dec
cmp
xlat
repz
lret
push
jmp
dec
sarl
iret
jo
xor
fildl
paddsw
js
dec
push
mov
outsb
adc
or
cmp
sbb
iret
imul
lds
sbb
and
sub
dec
out
fsqrt
dec
and
std
sbb
jb
insl
push
jae
xor
and
mov
ds
cmp
add
pminsw
loopne
cvttps2pi
mov
pusha
int3
sarl
lea
xlat
aam
dec
loop
push
mov
or
push
jp
scas
lea
pop
std
sti
popf
add
or
xchg
imul
jg
pop
loop
mov
cwtl
popa
filds
ds
xor
insb
sub
mov
mov
fwait
scas
in
adc
dec
and
dec
push
iret
mov
adc
adc
pushf
add
adc
cld
popa
ljmp
or
mov
aam
mov
mov
sub
xchg
mov
std
sahf
inc
sbb
or
mov
aam
ret
mov
cmc
or
rcl
push
hlt
ficoms
sbbl
shrb
jo
mov
out
xchg
in
push
arpl
in
sbb
mov
loop
sub
sub
cmpsb
bound
in
sub
pop
xchg
xor
stos
movsb
nop
stc
lods
jg
ja
cmpsl
cs
xchg
ret
mov
dec
test
rcrb
aas
cmp
or
mov
mov
sbb
mov
push
mov
andb
stos
add
jne
cmp
test
ficomps
sub
cmp
pop
mov
xchg
imul
pushf
xchg
rcr
test
pop
jbe
fsubrl
cmp
into
jge
xchg
lods
fwait
repnz
lods
addr16
xor
jbe
sub
repnz
add
cmpsl
dec
mov
ret
jl
mov
scas
push
lea
mov
das
xchg
push
clc
inc
mov
shl
add
and
gs
adc
div
pop
cmp
into
xchg
leave
loopne
cmp
dec
hlt
rcrb
movsl
ds
or
movsl
sub
mov
sub
std
dec
arpl
int
jge
fists
xlat
push
and
xor
mov
aad
es
dec
mov
xchg
arpl
mov
push
bound
inc
adc
and
std
lods
pop
push
loop
jae
mov
cmp
lret
mov
imul
pop
jbe
pushf
leave
cwtl
push
pop
scas
mov
mov
mov
mov
lods
sbb
rolb
push
dec
adc
rcl
sub
mov
es
hlt
imul
inc
jmp
adc
jno
push
add
sbb
and
fcmovb
xchg
push
add
adc
ds
inc
push
mov
loopne
sub
addb
lods
ljmp
ret
inc
dec
inc
lcall
mov
lret
fwait
jle
inc
sarl
push
and
mov
lahf
xchg
xor
push
fidivl
cmp
ljmp
cmp
sub
nop
dec
lock
xor
dec
jb
in
cwtl
sbb
lea
xor
or
jle
ds
sub
fcmovbe
dec
movsb
and
xlat
sub
mov
inc
insb
xor
mov
fucom
and
not
scas
sti
arpl
js
dec
cmp
js
cmp
jle
push
lods
cmp
popf
xor
inc
mov
mov
mov
push
cmp
lcall
cmpb
int3
push
inc
call
xlat
fxch
and
dec
sub
and
cmpsb
push
test
popf
jecxz
mov
push
cli
inc
mov
xchg
bound
call
and
and
mov
loop,pn
sarb
xchg
dec
mov
out
divl
fwait
leave
cld
and
sbb
mov
neg
leave
push
mov
lahf
jecxz
das
or
sub
cmpb
sbbb
fidivrl
in
xor
in
cmp
pop
imul
cmc
leave
jge
imul
dec
mov
mov
js
mov
shll
adc
mov
sub
stos
inc
out
leave
ljmp
fs
and
jnp
insb
lds
mov
or
dec
or
pop
jb
pop
mov
and
orl
jmp
xchg
rcrl
jnp
jp
xchg
xchg
ficomps
add
pop
jno
adc
imul
sub
rcl
and
mov
sbb
repnz
lret
inc
shlb
cltd
imul
mov
imul
lret
test
nop
inc
xor
push
enter
cs
adc
xor
lahf
adc
mov
lret
mov
push
inc
and
adc
inc
jecxz
int3
icebp
and
push
mov
and
adc
testl
mov
sub
dec
fldln2
fistps
mov
movsb
cs
cltd
mov
dec
sbb
cmpb
push
mov
fnstsw
mov
jle
stos
dec
out
mov
inc
xor
add
stos
xchg
add
jne
xchg
pop
gs
ljmp
hlt
push
mov
push
cmc
adc
lret
xlat
and
dec
pushl
mov
fwait
cltd
mov
inc
out
xchg
lea
dec
movsb
mov
or
in
lds
add
hlt
ret
ja
popf
decl
sbb
bound
inc
push
adc
lcall
mov
sahf
push
lds
out
cwtl
mov
sbb
loopne
add
sar
filds
sub
fwait
ja
ss
stos
or
xchg
int3
add
or
mov
iret
sub
cmp
dec
inc
add
push
sbb
mov
movsl
repz
ja
repz
out
and
xchg
in
add
xchg
adc
and
shlb
sbb
xorb
cmpsb
ss
mov
faddp
aas
and
push
fisubs
daa
enter
sub
rorl
mov
mov
mov
leave
cwtl
ljmp
mov
fstl
jb
lcall
aam
fdivrs
scas
into
filds
fsubrl
stos
es
pushl
cwtl
jo
outsl
sub
cmp
xor
push
pop
pushf
loop
sub
insb
xchg
xchg
and
push
or
shrl
dec
mov
inc
add
jo
mov
int
scas
or
mov
fs
cs
jnp
insb
sub
cmpsl
jp
repnz
loop
sbb
fwait
fs
orb
je
jecxz
in
stc
jo
push
je
push
pop
mov
aas
pop
jle
nop
or
xchg
sbb
inc
inc
pop
push
xchg
shll
inc
subb
dec
scas
popf
and
cli
push
insl
mov
inc
push
loopne
aam
scas
imul
call
xchg
or
sahf
add
ljmp
test
dec
or
mov
sti
push
int3
rcl
sarl
orb
out
leave
repnz
xchg
cwtl
sbb
imul
inc
sbb
inc
push
movsl
cwtl
xchg
mov
enter
popf
cltd
mov
aam
xorl
in
lds
rcrl
inc
cli
ret
inc
mov
dec
cmp
dec
stc
pop
push
out
in
call
stos
test
lret
jl
and
enter
movl
pushl
dec
mov
mov
sti
call
jp
scas
push
lea
leave
mov
adc
daa
movl
inc
fimull
add
leave
sub
sbb
xor
jae
pop
cmpsb
jae
jae
stos
xchg
into
mov
aam
rorl
subb
pop
pop
lock
repnz
ja
mov
jp
or
lcall
push
sub
jae
jmp
jle
icebp
lds
add
push
pushf
scas
popf
inc
filds
xor
lods
fwait
scas
scas
scas
mov
data16
xlat
insb
mov
xchg
sub
mov
pop
orb
enter
xor
push
mov
xchg
xchg
notl
jnp
int
leave
jmp
daa
mov
popa
das
sub
pop
movsl
out
stc
xor
pop
leave
sbb
les
or
push
push
call
daa
fdivs
mov
lret
xchg
mov
add
repnz
repz
shlb
in
sub
fsts
inc
popa
xchg
inc
mov
cmpb
cwtl
or
inc
mov
rorl
rclb
add
cli
scas
adc
mov
and
movsb
roll
stos
xchg
and
lcall
aam
fdivrs
scas
into
filds
fsubrl
stos
es
out
scas
push
or
mov
and
cmpsb
test
lahf
cmp
outsl
call
push
pop
lea
push
pop
dec
fdiv
xchg
xchg
iret
xlat
pop
je
xchg
mov
inc
xor
or
jbe
in
sti
sub
fildl
shrl
es
sub
das
add
cmpsb
scas
xor
push
xchg
sbb
cmpsl
cmp
shlb
or
and
fsubrs
add
nop
out
pop
pop
inc
push
gs
dec
jo
mov
aas
fstps
sub
mov
sbb
pop
push
fwait
sub
jb
cltd
enter
arpl
test
les
inc
mov
push
fnstcw
xor
ret
in
aam
popf
mov
into
and
outsb
mov
out
inc
sub
repz
fidivl
cmp
mov
movsw
xor
cli
mov
out
addr16
bound
mov
cmc
jnp
lahf
fwait
xchg
lds
xor
arpl
mov
jns
outsb
or
sbb
rep
cmpsb
inc
pop
imul
mov
fimull
dec
data16
pop
and
icebp
sahf
bound
jae
adc
mov
add
pop
xlat
inc
xchg
pop
ds
popa
mov
sbb
addr16
lea
sub
in
adc
into
lods
cmp
ret
push
lods
mov
xchg
je
adc
cmpsl
lods
call
iret
aaa
pop
cmc
in
call
mov
xchg
fldl
or
dec
mov
add
lods
mov
test
mov
pusha
mov
ja
jmp
cmp
pop
and
dec
sub
outsb
es
adc
roll
shl
arpl
adc
jns
push
dec
mov
adc
or
fdivl
and
rcrl
std
jne
add
cmpl
mov
and
repnz
enter
pop
push
or
int3
inc
enter
ljmp
xchg
sub
ret
and
xor
inc
mov
shrl
mov
js
clc
in
stos
ret
mov
mov
lret
push
and
std
or
pop
andl
jno
xor
xchg
mov
lock
mov
in
push
adc
incl
fistpl
loope
hlt
xchg
pop
xor
sbb
mov
lods
cmp
jg
adc
or
mov
imul
pop
fldt
sub
sub
xchg
je
push
inc
xchg
clc
cmc
mov
fidivrl
out
xor
test
shrl
test
pop
dec
test
imul
test
es
sbb
in
inc
xor
cs
loopne
ret
bound
xor
pushf
cmp
mov
icebp
pushf
cmpw
in
mov
jge
sub
aaa
andl
sub
mov
out
jns
fadd
rcrl
stos
push
dec
and
add
xor
je
jbe
adc
sbb
mov
add
int
xor
sub
xor
sahf
test
or
cmc
loop
das
pushf
es
and
lahf
sbb
and
sbb
stc
cmp
jp
jmp
dec
cli
aaa
pop
loope
in
loope
stos
push
mov
aaa
pop
idivl
and
sub
cmp
loope
pop
lcall
push
mov
xchg
hlt
sbb
jmp
test
negl
or
sub
mov
pop
push
jmp
loopne
fisubrl
ret
jp
lahf
das
sub
xchg
inc
jle
push
dec
outsl
js
nop
js
cmp
pop
push
jecxz
dec
xlat
pop
sub
mov
enter
inc
repz
leave
push
add
xlat
pop
push
or
push
xchg
jnp
lods
ret
push
mov
scas
mov
movsl
mov
xor
outsb
mov
fdivrp
notb
mov
stos
pop
sub
aad
lods
clc
or
xor
bound
jge
rcrb
inc
insl
xchg
lret
pop
xchg
ret
and
nop
es
jge
or
lods
cmp
xchg
int
push
popf
jmp
sbb
dec
cwtd
aas
ds
sbb
inc
pop
aad
dec
adcb
and
popa
addl
mov
dec
inc
pop
push
js
test
cmp
mov
shr
ja
sti
mov
mov
in
ja
aaa
out
fsubrl
lahf
stc
xchg
mov
xchg
cmc
das
adc
adc
filds
sbb
xlat
pop
leave
push
fs
sbb
dec
jns
cmpsl
fwait
repnz
cwtl
push
movsb
int
je
adc
pop
mov
jbe
jne
inc
xor
add
dec
int
and
push
sbb
vpunpcklbw
bound
inc
pop
sahf
push
cmpsb
jmp
mov
movsl
xor
in
mov
sbb
jbe
je
subl
xchg
add
mov
pop
mov
inc
jbe
cli
add
ret
pop
dec
mov
pop
cmp
mov
lcall
ds
lock
jno
mov
cli
push
pop
xor
rorl
jg
mov
fmulp
dec
ret
jmp
es
test
sbb
xor
adc
cmp
jmp
je
add
es
cmpsb
cmpsl
jae
push
sbb
jecxz
jle
or
outsl
jne
cmpsl
xor
lcall
test
addb
mov
into
pop
les
icebp
es
ret
stc
mov
xchg
jae
pop
sbbl
pusha
jnp
jecxz
jg,pn
dec
pop
fsubrs
out
xchg
lods
dec
pusha
and
mov
das
push
sub
lahf
mov
jns
mov
xor
sti
xchg
fisttpll
and
pusha
xlat
push
pop
sbb
fisttpl
pop
sar
int
int
mov
xchg
cltd
inc
jns
jbe
pusha
test
dec
stos
inc
dec
and
mov
cmpl
inc
or
vcvtpd2dq
ret
inc
push
imul
stc
leave
jae
movsb
dec
out
inc
mov
cmp
aam
outsb
inc
mov
in
xchg
sti
pop
cmc
push
xor
mov
and
sub
or
xlat
adc
popf
xor
out
int3
lods
lret
xchg
jmp
lds
mov
ljmp
popf
jbe
popf
insb
jg
testl
lods
popf
xchg
movsb
jno
sbb
sysret
loopne
mov
xchg
xchg
push
push
jno
cli
or
bound
pop
stos
mov
jg
lds
jae
cltd
mov
dec
push
loop
fwait
pop
stc
sbb
aas
sahf
insl
jo
stos
loop
sub
mov
jle
inc
xchg
push
add
mov
imul
lds
lret
sub
mov
jecxz
std
outsb
call
mov
and
add
scas
add
imul
xchg
xchg
idivl
loope
in
icebp
adc
mov
pop
shll
repz
lcall
aas
mov
jmp
repnz
sbb
xor
cmp
add
out
cltd
nop
pop
flds
nop
adcb
sub
dec
xchg
push
sub
ljmp
dec
jae
in
push
mov
xor
push
sub
mov
or
sub
push
sbb
inc
jp
ja
sub
ret
mov
je
dec
lahf
mov
repnz
or
sbb
or
dec
shrl
adcb
test
movsl
out
dec
mov
xchg
and
xchg
inc
shr
push
fwait
test
xchg
fdivrs
mov
rorl
lock
aad
fdivrl
jbe
jne
mov
cmp
cmpsl
repnz
jne
sbb
adc
add
mov
jo
mov
mov
ret
stos
gs
out
pop
stc
ds
mov
loop
mov
and
jnp
js
pop
xchg
jns
lods
push
adc
faddl
xor
insb
insb
dec
push
push
fidivrl
jns
mov
incl
add
test
cmp
mov
hlt
es
nop
push
dec
dec
stos
sbb
adc
pop
pop
mov
mov
leave
imul
or
fmuls
sub
jle
fdivrs
xchg
les
gs
rol
arpl
ss
mov
rolb
jnp
fildl
fbld
das
test
lock
xor
push
mov
xchg
hlt
lock
inc
lahf
or
or
pop
or
jmp
pop
dec
fsubs
jo
pop
dec
icebp
in
sub
push
in
jne
mov
test
cs
in
and
inc
mov
push
imul
add
pop
scas
mov
test
bound
mov
lods
jnp
aas
sub
mov
sti
movsb
iret
mov
jns
jae
adc
inc
and
sub
in
into
mov
pop
xor
aad
cmp
push
pop
mov
cmp
lcall
pop
push
hlt
rcrb
movsl
ds
or
jo
fnstcw
das
add
nop
mov
xchg
and
ret
cmp
lret
setnp
sbb
mov
jmp
pop
push
mov
pop
mov
into
adc
add
mov
repz
outsb
push
hlt
es
xchg
test
out
psubusb
sbb
shll
cmc
test
dec
or
lret
add
push
out
mov
xor
mov
xchg
cmpsl
inc
push
andb
lahf
mov
dec
addr16
adc
jg
pop
lods
out
aad
movsb
push
push
lcall
cltd
in
movsl
dec
push
shlb
test
fucomi
sub
out
push
lcall
inc
into
pop
sbb
xor
aas
arpl
mov
xchg
dec
movsl
cs
mov
xchg
sub
push
push
cmpsl
xchg
in
mov
into
sahf
push
mov
mov
adc
inc
cwtl
jne
mov
imul
ret
push
push
sub
lock
xor
cmp
nop
mov
jmp
jne
mov
cs
dec
cli
push
fwait
jge
cmp
ds
or
dec
jge
aad
pop
fidivl
lcall
or
into
add
add
mov
in
in
rolb
mov
lret
push
adc
in
mov
clc
push
sub
push
push
cmpl
cs
jbe
fnstsw
std
call
ftst
scas
out
pusha
mov
inc
and
repz
sub
push
xor
pop
jecxz
sub
or
mov
sub
loopne
icebp
xor
mov
jle
fsubrs
dec
in
dec
jae
in
push
mov
add
jge
lods
mov
jne
pusha
sbb
inc
mov
repnz
mov
or
outsb
xor
enter
imul
inc
cmp
pop
add
ljmp
add
and
sbb
movl
pushf
xor
pop
xor
jle
pop
jecxz
dec
cmp
dec
jo
mov
into
cwtl
insl
push
out
inc
jl
pushf
push
adc
sub
mov
das
insb
sbb
ja
std
movsl
cmp
mov
orb
lret
sub
cmpsl
cltd
icebp
sbb
dec
clc
sbb
lea
jg
sub
shl
cmp
ljmp
in
mov
data16
mov
mov
fsubs
frstor
jno
ljmp
cmpsl
cmp
sbb
iret
outsb
test
add
loopne
mov
dec
sbb
bound
lods
or
clc
jmp
dec
push
test
xor
mov
loop
fidivrs
mov
cmpsl
mov
les
dec
fildll
mov
xor
negb
outsb
xchg
mov
sbb
push
ljmp
jg
adc
cmpsb
cmp
ljmp
dec
ss
mov
out
fs
add
in
cmp
popl
jle
dec
xchg
leave
inc
rcr
inc
scas
push
mov
jns
cmp
mov
repnz
xchg
dec
repz
pop
push
jmp
hlt
pop
lods
je
test
jnp
pop
stc
inc
loopne
xchg
cwtl
adc
aam
mov
out
jns
lds
jmp
test
subb
push
lahf
data16
jle
dec
xlat
decb
mov
movsb
adc
inc
movsl
cmpsb
pop
repz
dec
sub
mov
out
pop
xchg
shlb
pop
loope
mov
pop
pop
mov
jle
mov
inc
mov
or
outsb
stc
mov
ja
jge
cwtl
and
xchg
pushf
adc
lret
aad
das
cmp
adc
pop
je
adc
or
cmpsl
or
mov
ja
jmp
notb
icebp
mov
mov
imul
inc
cmp
int3
and
imul
lea
xchg
hlt
sbb
jp
loope
adc
popf
daa
add
add
push
shrb
push
ljmp
mov
pop
in
jns
out
lods
sti
in
adc
xchg
aad
insb
std
dec
pop
outsl
repnz
rcrl
cmp
sub
cltd
xor
cmpsl
push
shlb
shlb
add
scas
popa
test
cli
or
insl
xchg
out
ret
ds
aas
xor
sbbb
in
add
push
pushf
sub
aas
lcall
or
stos
sub
les
jne
ds
cmp
mov
iret
push
mov
inc
jae
decl
bound
aam
xor
push
xor
push
sbb
cmpl
lahf
mov
jbe
out
pop
inc
mov
je
mov
jmp
pusha
pushf
jl
inc
imull
push
mov
cmc
je
outsl
lock
repnz
and
in
stc
out
mov
pop
sbb
imul
movsb
mov
jnp
pop
pusha
pop
xchg
push
js
inc
xlat
or
icebp
xor
jb
inc
out
loop
or
mulb
and
xor
sbb
lcall
in
or
in
lea
insl
into
dec
mov
and
aaa
mov
push
dec
lods
add
pop
scas
imul
mov
adc
or
lock
pusha
jae
push
loope
lock
std
movsl
xor
pop
mov
pop
into
jp
pusha
mov
jle
mov
adc
pushf
xor
or
lret
adc
add
movsb
inc
call
adc
icebp
dec
std
ljmp
mov
dec
aaa
mov
stos
stc
arpl
xor
mov
mov
sub
mov
out
or
aaa
mov
jo
fwait
cmpl
pop
pusha
sahf
pusha
cwtl
sbb
in
or
lods
xor
int3
push
stos
mov
in
xchg
mov
mov
cltd
and
mov
cmp
stos
out
mov
ja
leave
sbb
icebp
push
enter
push
lea
xor
add
dec
popf
xchg
sub
mov
sbb
movsl
je
and
fldt
or
push
adc
lcall
test
shlb
adc
into
popa
mov
mov
ret
cltd
cltd
sti
arpl
sub
jmp
or
push
mov
xlat
inc
or
out
mov
sub
sub
aam
adcl
adc
xchg
jae
adc
enter
adc
lret
inc
gs
inc
sahf
cmp
imul
jg
mov
lcall
inc
clc
dec
xchg
lds
xor
fisttps
loope
mov
test
mov
out
sti
jnp
xor
out
cmp
sysenter
movsl
scas
mov
andl
rolb
popf
mov
sub
cmp
fldl
jg
fs
mov
sbb
pop
xchg
mov
inc
and
cmpsb
sbb
ror
or
pop
test
jb
int3
inc
xlat
mov
sar
cs
sbb
negb
mov
mov
cld
lock
mov
adc
or
cmp
adc
fdivr
push
mov
cltd
fstps
cs
fs
push
lea
cmp
out
aaa
in
fistpll
loop
push
sub
out
cmp
mov
cmp
fst
sbb
dec
lods
fsubp
pusha
mov
xchg
xchg
xor
add
dec
adc
cltd
xchg
dec
nop
ret
cmc
mov
cmpl
loopne
cmp
ds
xor
inc
into
dec
adc
push
inc
adc
fisttpl
add
fs
xor
mov
push
repnz
cld
adc
loope
and
mov
mov
pop
stos
shlb
or
loop
dec
xchg
xor
sub
sub
mov
pop
pop
into
aam
bound
stc
lret
test
shl
cmp
aas
or
or
pop
test
sahf
xchg
pop
push
mov
cli
inc
jne
mov
fimull
adc
aad
dec
cwtl
stc
adc
cmp
sbb
pop
sub
icebp
int3
push
test
push
scas
pop
cmp
cmp
push
cmpsl
or
int3
dec
bound
imul
jbe
adc
adc
dec
out
dec
lret
lcall
sub
mov
lods
lods
pop
push
outsb
push
push
or
rolb
nop
mov
subl
jle
mov
jg
shr
add
mov
jl
push
or
insb
nop
mov
imul
sbb
push
test
lret
andl
jne
in
movsb
push
mov
pop
packsswb
jecxz
push
mov
repz
mov
fs
cmp
icebp
push
mov
movl
xchg
popa
and
lock
xchg
out
sahf
loopne
lahf
loope
hlt
je
jns
cmp
jb
cltd
mov
pop
push
data16
or
mov
fwait
sub
out
mov
lods
icebp
pusha
scas
jns
cmp
xor
and
pop
aaa
or
push
cmp
pop
sbb
loop
push
mov
movsb
movsb
mov
js
cld
ret
sub
lods
les
mov
xlat
xchg
movsl
repz
aam
ljmp
sbb
je
andl
pop
or
loope
int3
ljmp
imul
movsb
fmuls
and
out
or
or
xchg
jge
loop
and
test
lea
cs
popf
scas
adc
loope
xchg
and
sti
mov
lret
insl
cmp
xchg
mov
add
mov
jecxz
outsb
cmp
mov
fdivrp
xchg
das
pop
mov
push
cmp
sbb
sub
aaa
rcl
push
cmp
icebp
fs
in
or
imul
pop
inc
push
aaa
inc
lahf
cld
mov
mov
clc
cld
mov
sbb
sbb
dec
jb
rclb
dec
inc
fnstcw
roll
jl
fdivs
mov
xchg
sub
into
cwtl
ret
inc
das
and
stos
fnsave
dec
xchg
pop
xchg
aad
inc
cmp
jl
leave
aas
cmp
repnz
add
filds
jp
enter
in
mov
pop
or
sub
enter
and
outsb
mov
loop
mov
frstor
or
xchg
divb
pop
cmpsb
int3
add
pop
fwait
test
ficomps
mov
je
outsl
xor
fcomip
mov
jmp
push
sbb
imul
cmp
icebp
xchg
fidivl
rclb
jmp
je
aam
lret
push
fnstenv
out
test
stc
mov
jp
xor
push
cmp
xchg
cmpsb
and
sub
cli
enter
shll
mov
dec
xchg
cld
ds
sbb
mov
mov
loopne
lret
xchg
fmuls
dec
push
std
sbb
pop
mov
jne
loope
push
jmp
mov
or
loop
xchg
mov
pop
sbb
mov
ret
or
pop
sahf
repz
inc
and
icebp
mov
mov
subl
jb
cld
xor
stos
push
push
pushf
test
push
push
jae
xor
cmp
xor
je
les
adc
call
push
adc
insl
mull
lahf
xor
or
lret
call
pop
aas
push
push
rclb
insl
loopne
add
inc
jle
outsb
pushf
std
sbb
repz
lret
sbb
add
dec
out
jnp
ds
adc
push
mov
adc
inc
ret
fmull
xchg
cmp
test
aaa
mov
je
fstpl
add
cltd
das
mov
in
or
cmc
icebp
and
out
fistl
lcall
xor
push
dec
mov
xchg
movsl
adc
stos
scas
int
push
test
push
adc
call
push
sti
shll
sub
jb
in
sbb
and
pop
xchg
loop
fucomp
jmp
sbb
xchg
add
xor
xor
outsl
test
iret
lea
popf
xchg
pop
dec
cmpsl
cltd
aam
inc
fisubrs
lahf
lretw
adc
push
popa
stos
mov
or
ret
lea
cmp
rorl
test
arpl
lock
add
cmc
stc
out
mov
pop
ja
adc
jbe
jp
in
ficoml
sub
rorl
mov
inc
adc
push
cmp
push
sub
mov
xchg
sbb
jle
stos
ret
loope,pt
push
and
mov
imul
ss
roll
jp
outsl
in
xor
mov
mov
filds
add
pop
cli
jo
inc
movsl
cmpsl
addr16
loop
repnz
mov
mov
out
lcall
les
or
mov
pop
push
jge
ja
mov
xor
rcrb
movsl
movsl
and
out
outsl
sahf
and
mov
aam
inc
jge
pop
orb
fiadds
dec
movl
jp
sub
add
and
lods
fnstcw
inc
mov
sub
jge
int
jnp
sarb
enter
mov
lret
outsb
ds
add
fstl
or
jo
enter
add
movsb
cs
loopne
movsl
xchg
push
jmp
dec
cmp
aas
or
ss
enter
cmp
mov
roll
sub
sub
fs
pop
outsb
jno
aam
sub
adc
add
jo
mov
add
mov
sub
jb
sub
mov
or
lret
pop
and
mov
gs
and
mov
mov
lahf
ljmp
push
inc
add
aaa
data16
sub
mov
push
bound
into
cmp
cmp
negl
adc
das
sub
test
push
icebp
icebp
outsl
and
arpl
push
iret
and
push
inc
xchg
ret
cmp
insb
jg
xor
shr
cmp
rcrb
push
jp
and
mov
mov
mov
ja
scas
adc
add
ja
push
push
addr16
cmpsb
pop
xadd
xchg
sbb
or
push
mov
fs
inc
push
mov
inc
mov
mov
jmp
in
push
mov
stc
and
adc
sub
push
push
add
out
xor
stc
mov
sar
fisubl
mov
sub
lcall
ja
pop
lret
add
imul
mov
or
lods
cmp
xor
xlat
inc
mov
out
inc
aad
inc
cmpsb
push
enter
mov
aad
sbb
mov
pop
mov
es
jge
fistpl
ja
les
ds
loopne
ret
in
mov
fwait
ljmp
rcr
sarl
in
xchg
stos
mov
adc
stc
movsb
mov
test
adc
loop
fidivs
add
outsl
lock
lods
outsl
mov
xchg
mov
dec
xor
pop
je
cltd
cltd
cltd
pop
popa
and
mov
lock
jge
adc
jmp
xchg
sahf
jle
mov
idivb
ja
pushf
mov
jmp
push
sbb
sub
mov
sbb
lods
pop
stc
clc
arpl
pop
notb
mov
mov
jl
dec
add
mov
pop
jbe
arpl
xchg
cmpsl
ds
loope
jb
inc
in
add
push
dec
insb
mov
fwait
cmp
out
mov
mov
int
repnz
dec
mov
sbb
or
lret
ss
aad
shlb
fdivrs
push
pcmpgtw
push
andl
mov
fxch
push
pop
push
clc
lods
lock
orb
repnz
fisttpl
int
fistps
mov
sub
ss
cvtpi2ps
jae
enter
jae
cmova
dec
sub
rclb
xor
cmp
inc
shlb
dec
jnp
push
cltd
push
push
adc
ret
mov
shlb
into
adc
add
and
dec
mov
je
int
pop
movsb
cmp
loope
pop
adc
je
or
push
bound
dec
xor
add
std
lahf
imul
xchg
aad
icebp
test
push
rep
aam
xchg
stc
dec
and
fucomi
mov
jle
fs
ds
jmp
jno
push
sahf
sahf
inc
sbb
ss
cvtpi2ps
jae
mov
xchg
inc
or
dec
sub
scas
xchg
xor
outsl
add
dec
cmp
inc
rorb
adc
add
dec
out
or
imul
jbe,pn
mov
imul
orl
out
pop
jp
jecxz
mov
inc
mov
insb
add
jg
mov
dec
or
add
and
call
outsl
lock
fstl
loop
sub
push
sahf
into
push
cltd
mov
and
mov
add
in
cmp
push
sbb
and
fsubs
jp
loopne
jne
stos
push
inc
push
std
xor
dec
adc
movsb
mov
mov
daa
cmp
in
jnp
push
adc
sub
xchg
sbb
cmc
insb
mov
test
sub
sbb
pop
ss
mov
mov
scas
pop
adc
mov
rcll
inc
dec
repnz
or
rclb
pop
sub
mov
movsl
sbb
fucomp
cltd
cltd
cld
shll
pop
jg
mov
mov
insl
dec
mov
test
mov
imul
sub
sub
fst
and
xchg
dec
in
mov
ret
push
sbb
xor
cmpsb
lret
loop
sub
aaa
subb
cmc
test
mov
pop
and
pop
stc
mov
aam
jno
rorl
pop
xchg
inc
jle
hlt
pop
mov
mov
cli
fcomps
ja
inc
mov
jne
repz
int3
sahf
xor
inc
jmp
js
loopne
ljmp
push
mov
push
xchg
sbb
cmpsb
cmp
or
or
xchg
add
xor
push
or
sbb
out
sub
fwait
xor
jge
js
std
mov
sti
xor
mov
cmpsl
xor
pushf
fldl
and
and
jmp
leave
pop
and
jae
loope
push
dec
or
mov
lea
sbb
or
std
lret
xor
cmpl
in
orb
push
lahf
pop
sub
push
mov
in
ja
xchg
mov
inc
pushf
mov
sbb
mov
mov
ror
pushf
std
dec
roll
ds
jb
insb
pusha
icebp
adc
sbb
dec
int3
push
shll
nop
in
mov
pop
fwait
loop
sbb
outsl
cld
mov
mov
or
fcomps
mov
insl
hlt
imul
xchg
insl
dec
jb
inc
ret
mov
cmc
punpckldq
jmp
xchg
adc
fdivl
jne
int3
icebp
cld
out
data16
jge
xchg
xchg
add
sbb
xchg
xor
jge
int3
mov
test
stos
repz
and
and
mov
lret
push
movsl
xor
add
sti
mov
stos
in
ljmp
xchg
in
cmp
imul
dec
sti
push
test
adc
xchg
cwtl
sahf
or
inc
sub
ret
hlt
test
push
push
mov
inc
lahf
mul
pop
in
sbb
xchg
add
lds
fldl
pop
fcomip
fcomps
push
push
push
lods
xchg
cs
lret
pop
mov
mov
cld
sbb
xchg
fcomip
push
iret
cmpsb
orb
mov
pop
lods
ja
mov
out
fmulp
mov
cs
je
enter
js
xor
loop
dec
mov
jg
aam
out
sub
mul
push
or
push
mov
test
stc
and
pop
testl
sar
lock
jp
sti
mov
jns
loope
cmp
mov
pusha
cmp
sbb
fs
test
add
cld
aad
cmc
jp
jbe
cld
iret
pop
jne
push
push
outsb
mov
mov
xor
jb
push
pop
adc
mov
fyl2xp1
fildll
dec
adc
xchg
add
and
orl
jecxz
mov
jae
js
cs
in
dec
enter
dec
cmpsl
js
addr16
movsb
pop
mov
xlat
aam
ffree
sub
adc
lods
loope
pop
cmp
mov
mov
push
dec
and
fsubrs
bound
nop
mov
pop
ljmp
sub
mov
xchg
xchg
push
jne
rcll
lcall
or
xlat
fldt
mov
aas
jne
cs
push
xchg
xchg
jg
scas
lods
test
adc
ljmp
and
lret
sahf
push
iret
call
and
scas
lret
pop
mov
jp
mov
xchg
int3
xchg
jl
test
lods
and
push
loop
les
scas
xchg
sub
mov
fisttps
sub
inc
or
fisubrl
cltd
dec
in
push
add
cli
cmp
sub
out
insb
push
dec
dec
push
scas
test
fs
outsl
mov
or
stos
mov
mov
popf
gs
rclb
mov
xor
mov
je
fsts
pop
jmp
xor
pop
insl
pop
pop
jne
pop
pop
pextrw
push
aas
stos
les
adc
cmp
jle
pushf
mov
mov
in
mov
pusha
js
pusha
andb
jbe
push
xor
test
xchg
test
and
arpl
stos
mov
in
aaa
dec
xchg
pop
or
out
out
int3
pop
adc
mov
mov
mov
add
mov
lods
fstps
dec
push
dec
ret
jg
mov
mov
add
fwait
xor
cmpsl
rorl
sub
add
push
xchg
rorb
inc
mov
fisubs
daa
hlt
sbb
xchg
out
jno
cmp
xlat
aas
fstpt
insl
inc
sub
inc
xor
jle
imul
cltd
pop
test
pop
idivb
in
push
jns
pop
xchg
pushf
adc
adc
test
adc
pop
out
popa
mov
addb
push
xchg
addr16
cmp
push
and
and
pop
imul
shr
ss
xchg
cmpsl
and
mov
pop
push
movsl
cmp
icebp
mov
push
loop
inc
xchg
js
dec
data16
pop
pop
push
ret
scas
rcll
out
xor
fstps
inc
pop
xor
sahf
pop
mov
dec
cmp
push
and
ss
add
or
xchg
pop
dec
mov
inc
bound
xor
mov
hlt
popf
testb
xlat
shrl
push
fcmovbe
in
xorl
mov
js
aaa
xchg
cli
or
push
pop
stos
mov
push
and
mov
xor
test
out
xchg
je
pop
jge
cwtl
jnp
mov
cli
int
cmc
cmpsl
xor
sub
aaa
pushf
cmp
and
test
stc
stos
rsm
push
mov
jmp
add
scas
imul
divl
scas
sub
mov
sarb
into
and
jmp
rcrl
xchg
jne
pop
pop
jecxz
dec
out
dec
leave
rorb
in
pushf
hlt
cmpsl
mov
shrl
inc
mov
inc
movsl
pop
dec
sar
jmp
jge
xor
inc
mov
fsubrs
lret
mov
push
cmc
pop
pop
into
not
ret
mov
shll
mov
lock
jg
fnsetpm(287
test
test
int
push
data16
and
fsubs
push
dec
xchg
dec
adc
je
and
les
or
cmp
push
stc
cmc
sbb
js
or
nop
mov
mov
dec
mov
int
add
add
mov
push
mov
adc
ret
jb
cld
imul
and
leave
or
xlat
and
xor
aaa
cmpsb
xor
loop
xchg
dec
or
pop
movl
test
jmp
cwtl
mov
clc
icebp
cli
in
xlat
mov
ja
jl
dec
and
fs
dec
aas
add
fs
mov
xchg
je
jnp
push
dec
cmp
out
int3
jb
inc
mov
xor
cwtl
pop
cli
pop
jae
add
sbbl
scas
mov
frstor
decb
sub
mov
movsl
cmp
push
xchg
lods
out
mov
sti
outsl
xor
mov
inc
lds
xchg
inc
mov
fcompl
inc
lea
mov
das
and
and
inc
cmp
push
rclb
std
jns
add
fwait
pop
fbstp
bound
pop
es
jb
negb
lock
xor
add
fimuls
shll
and
imulb
sbb
movsb
jae
fistl
mov
jge
loop
fisttps
fldt
mov
inc
pushf
jne
add
cmpsb
cmp
inc
push
dec
xchg
arpl
adc
sub
push
gs
inc
aam
lods
xor
inc
out
cmp
in
popa
incb
push
fisttpll
testl
mov
ret
jmp
out
sar
neg
inc
push
cld
jecxz
add
push
lret
or
mov
and
outsb
scas
cs
sbb
out
cmpsl
jg
push
xchg
mov
lcall
lret
and
cwtl
or
and
sub
cmp
rorb
push
sbb
cltd
gs
lods
dec
inc
and
sbb
dec
int3
jecxz
cld
je
fldl
jno
xlat
jg
push
loope
movsb
sub
inc
mov
pop
inc
cwtl
jecxz
mov
inc
or
lret
test
js
scas
push
stos
sbb
jbe
dec
or
lahf
cmp
fs
into
ret
mov
push
jno
scas
xchg
mov
cmp
inc
inc
cs
ljmp
arpl
adcb
or
dec
inc
mov
aam
jg
out
or
pop
pop
inc
movl
fwait
mov
out
daa
enter
xchg
or
andb
test
rcr
sahf
lret
out
sti
dec
popf
clc
dec
shll
inc
or
addr16
aas
mov
sub
in
xor
orb
out
cmp
adc
out
imul
insb
pop
xchg
fmul
popa
push
xor
fucomp
add
add
push
mov
adc
cmpsl
dec
mov
stos
mov
mov
mov
mov
adc
cli
loopne
and
sahf
xchg
lock
mov
jbe
or
mov
sub
call
call
stos
push
mov
xor
pushl
jmp
outsb
data16
push
xchg
test
in
rcrb
push
pop
imul
out
int3
out
or
sbb
lcall
pusha
and
in
int3
stos
xor
xlat
mov
pushf
repz
sub
jb
repz
movsb
insb
adc
outsl
inc
jns
aaa
xchg
das
adc
insl
inc
out
hlt
mov
movsb
xor
outsb
cmp
mov
stc
inc
in
shll
dec
sub
std
andl
xchg
or
mov
imul
mov
rcll
std
das
mov
movsb
xor
negl
imul
nop
dec
mov
or
inc
or
jg
inc
and
push
mov
sbb
lcall
push
xlat
out
mov
es
test
lods
sub
jbe
sbb
ds
aam
in
add
mov
pop
jae
add
add
out
lods
adc
mov
in
push
adc
nop
cmp
cwtl
mov
mov
test
cmc
mov
stos
xchg
cmpsl
add
and
pop
daa
mov
add
push
adc
or
cli
leave
add
scas
int
mov
mov
cmp
sbb
jne
out
imul
loope
push
cmpsb
and
push
aas
add
pop
mov
in
ror
lcall
movsb
push
mov
popf
jle
insb
cmpsb
pop
in
sbb
and
ret
dec
rcrb
xchg
das
xchg
sbb
rorb
fidivrs
in
pop
int
cmp
call
inc
fisttps
daa
push
jecxz
imul
and
loope
sub
xchg
jbe
sub
jb
or
clc
test
test
dec
scas
xor
cmp
stos
or
xlat
ret
int
jb
sbb
das
repz
push
dec
fiadds
dec
dec
into
sahf
movsb
outsb
cmp
mul
jecxz
sbb
sub
mov
test
rcrb
mov
roll
stos
cli
xchg
pop
std
sub
int
jnp
loopne
and
bound
inc
xchg
xor
mov
jbe
dec
and
jae
bound
in
cld
test
add
dec
aas
out
mov
push
mov
inc
addr16
pop
cwtl
add
test
pop
decl
test
mov
mov
pop
mov
lods
pop
sub
push
shl
das
xor
stos
mov
pop
and
xchg
jns
cmp
dec
adc
movsl
rcrl
adc
ret
dec
adc
les
in
inc
mov
sub
inc
ret
sbb
rorl
and
aas
mov
insl
lods
lret
in
push
fucomi
push
mov
sahf
pusha
movsl
xchg
sub
loopne
sbb
inc
in
push
push
dec
test
addr16
loopne
push
push
push
adc
call
frstor
xor
int3
mov
ret
jne
xor
insb
sbb
mov
fldt
fs
jp
into
jg
and
lcall
sub
cltd
jae
pusha
icebp
xchg
mov
test
jns
jmp
les
sbb
jl
repz
repnz
sahf
cmpsl
add
xchg
pop
mov
add
and
lods
test
call
divl
fidivs
xlat
cld
sti
cld
repnz
orb
in
push
jecxz
dec
pop
and
pop
sahf
aaa
in
pop
push
cmp
insb
lcall
push
jmp
stos
jmp
in
jb
arpl
js
int
ja
fdivr
xor
stos
test
sub
inc
sbb
lods
and
sbb
xor
fisubs
mov
inc
gs
dec
std
pop
lds
xchg
or
sbb
addr16
stos
dec
mov
loopne
jl
mov
and
movsl
cmp
cmp
adc
test
xchg
icebp
out
mov
jg
and
sbb
clc
jmp
fdivrl
mov
sbb
xchg
mov
xor
pop
mov
jp
pop
lods
lret
insb
jnp
add
pop
sbb
lods
mov
sub
dec
xchg
and
call
mov
das
in
loopne
inc
lods
add
frstor
sbb
push
mov
lcall
sti
paddusb
and
out
push
jnp
sbb
push
cmp
push
cltd
daa
and
add
dec
std
pop
lds
xchg
or
test
stos
dec
mov
loopne
out
call
icebp
xor
lds
fstps
xor
mov
jg
and
lcall
mov
arpl
cltd
jae
pusha
icebp
xchg
mov
test
jns
push
aad
cmp
in
dec
repz
fwait
nop
loop
stc
enter
pop
mov
add
and
lcall
jmp
pop
repnz
inc
fidivs
xlat
cld
sti
or
xchg
incl
out
pop
decb
pop
cmpsb
adc
pop
dec
jbe
scas
jge
mov
clc
test
jnp
mov
dec
popf
mov
xchg
leave
mov
mov
fldenv
cmpsl
inc
cmpsb
mov
les
loope
mov
jne
mov
pop
xor
xchg
and
adc
push
jo
test
gs
movsb
sti
pusha
xchg
stc
jmp
shl
lods
jmp
add
mov
je
adc
icebp
mov
rcrl
cmp
mov
clc
mov
add
xor
repz
jle
xchg
mov
out
mov
xor
adc
cmp
psrad
pusha
sub
dec
fcompl
mov
xchg
jno
movsb
push
mov
pop
inc
or
mov
pusha
jecxz
je
xchg
outsl
mov
lock
mov
daa
scas
ret
pop
aam
mov
jmp
outsb
and
xchg
aad
lret
mov
js
and
js
sub
lock
mov
add
mov
mov
fisubl
popf
test
fs
sahf
hlt
cwtl
mov
into
lods
adc
fwait
xchg
add
mov
push
nop
mov
jae
push
xor
pop
dec
lods
cmp
movsb
popa
gs
push
inc
or
imul
sarl
aas
ds
sbb
pop
push
loop
outsb
or
cmp
adc
mov
xlat
sub
fsts
fdiv
mov
or
andl
sbb
jle
fnstsw
movsb
lea
push
popa
mov
xor
xor
mov
sub
jo
lret
pop
ds
mov
push
xor
jae
arpl
and
cmp
sbb
xor
ffree
es
insl
pmaddwd
imul
into
and
hlt
in
outsb
push
jmp
pop
out
iret
scas
xchg
pop
mov
pop
mov
mov
out
fisttps
js
in
push
or
mov
sub
jnp
les
mov
movl
mov
mov
and
dec
or
sbb
cltd
out
data16
js
push
call
rcl
out
and
xchg
cmp
test
cwtl
and
mov
popf
les
hlt
adcb
lret
dec
sbbb
inc
xchg
lods
imul
fisttpl
test
mov
push
aaa
movsl
mov
loopne
rorb
or
xor
dec
fucom
dec
cli
xor
movsb
pop
sahf
push
mov
dec
fs
add
mov
sbb
ficomps
mov
enter
jmp
lret
scas
dec
sahf
inc
xchg
nop
adc
cmpsb
jge
add
ret
arpl
or
popf
call
mov
xor
es
sbb
mov
jns
adc
mov
fucomp
loop
insl
add
in
stc
cwtl
sub
ljmp
pop
out
sbb
fmuls
leave
xchg
insl
jmp
cwtl
in
mov
out
pop
inc
test
dec
sbb
cs
or
ds
addr16
pusha
mov
mov
fcoml
repz
js
and
mov
sub
lea
mov
div
xchg
jl
iret
or
ja
sub
scas
rcll
sub
aam
adc
in
out
in
lds
inc
gs
fldt
ds
loopne
mov
jp
test
mov
mov
mov
jp
xchg
push
dec
jl
sbb
test
sub
aad
stos
mov
loop
xchg
mov
and
fwait
jnp
ret
sti
mov
aaa
add
pop
mov
jnp
pushf
into
cmp
bound
sub
sbb
jno
jg
and
dec
ss
push
lds
enter
arpl
cmpsl
nop
xchg
arpl
std
int3
mov
xlat
fldt
icebp
xchg
mov
fwait
std
jne
pop
rorb
mov
sbb
push
stos
xor
and
test
push
lds
adc
clc
enter
push
jp
jl
int
aaa
cmp
sbbb
ret
int
pusha
in
push
xchg
fmull
cmp
stos
dec
hlt
or
pop
mov
sub
ret
lods
dec
hlt
rcrb
movsl
ds
or
in
mov
push
add
adc
adc
or
popf
push
mov
mov
stos
out
cmpsl
mov
mov
ss
pop
inc
add
test
xrelease
cmpsl
pop
pop
and
sbb
mov
xchg
inc
lret
shlb
fdivrp
cmp
in
cmp
sbb
sub
subb
stc
pop
sbb
shr
lea
mov
loope
ficoms
in
xchg
out
push
lcall
xor
rorl
inc
adc
shll
testl
sub
in
mov
pop
add
popf
divb
js
push
or
imul
pusha
addr16
je
enter
push
aas
out
inc
ror
in
lods
sub
cwtl
ffree
pushl
mov
cli
js
sbb
dec
in
mov
xor
test
push
xor
mov
cmpsb
jne
arpl
xchg
mov
js
push
jbe
jmp
das
mov
jp
fcmovnb
jbe
jp
cs
mov
cwtl
and
lret
inc
xchg
int3
in
push
jno
pop
es
jae
ds
mov
inc
nop
fstpl
sub
cmp
pushf
mov
inc
inc
xchg
mov
sub
pop
rcrl
mov
sbb
mov
icebp
movsl
adc
es
and
mov
leave
jp
xchg
mov
aas
dec
xchg
jae
daa
stos
xor
xor
sbb
stos
ret
xchg
ja
jo
das
add
aaa
stc
orl
add
aad
popa
push
ret
sarb
dec
sub
xchg
insl
jae
add
arpl
fidivrl
sahf
scas
dec
fcmovu
sbb
cmp
adc
xchg
push
cmp
dec
enter
imul
outsl
leave
xchg
mov
or
hlt
inc
lret
addr16
les
cwtl
mov
xchg
lods
stos
aas
sub
and
mov
adc
aam
lock
pop
ss
dec
out
hlt
aaa
dec
es
mov
jg
mov
js
dec
fs
pop
insl
or
jae
cltd
test
imul
mov
popa
jecxz
test
pop
iret
dec
mov
cli
inc
cs
mov
notb
ja
mov
xchg
pop
addb
mov
popf
dec
lret
pop
jb
loopne
das
lret
jg
mov
int3
adc
fstpt
jl
out
ljmp
es
pop
pop
jnp
sbb
mov
int
xchg
clc
cmpsb
push
mov
hlt
sahf
stc
out
imul
ja
mov
sbb
dec
lahf
jle
mov
push
and
mov
jmp
pop
or
dec
and
out
cmp
xchg
or
xchg
std
xchg
jne
add
pop
je
add
jo
fwait
mov
addr16
les
or
or
pop
mov
ret
adc
std
and
add
and
sub
mov
jle
fwait
jmp
movsb
jle
mov
into
adc
cmc
movl
mov
ljmp
mov
jmp
mov
pop
cld
call
push
divb
aas
or
mov
popa
jo
je
xchg
sbb
dec
test
pop
inc
stc
cmpsb
add
shll
dec
xor
push
mov
or
movsl
icebp
pop
ja
xor
in
xchg
es
mov
in
lcall
and
sub
clc
clc
enter
stos
dec
adc
jg
std
pop
push
push
adc
jecxz
testb
mov
dec
and
ficoms
cmc
and
repnz
idivb
rcrb
cmp
sub
iret
gs
add
inc
jbe
mov
lret
rep
outsl
cmp
add
js
popa
shll
int3
mov
inc
fs
sub
mov
aam
lods
push
cltd
pop
es
into
pop
dec
lret
push
mov
int
lea
push
lea
repz
repnz
push
and
adc
dec
dec
jae
loopne
jle
dec
adcl
dec
mov
jno
xor
inc
adcl
inc
fwait
out
mov
mov
pusha
xchg
push
leave
aaa
js
pop
xchg
xchg
mov
ds
pop
mov
push
in
and
pop
popa
fwait
adc
call
sahf
gs
jns
scas
repnz
in
mov
fs
jmp
mov
sbb
aas
popf
push
jecxz
push
test
pop
and
xchg
addb
mov
shlb
je
lods
cli
jl
xchg
jo
das
out
outsb
xor
cltd
call
xlat
sti
sub
inc
test
fs
xchg
cmp
inc
add
fcoms
cmpsl
inc
lods
adc
xchg
stos
repnz
push
and
cmc
push
xlat
sbbb
push
shrb
movsb
add
push
jbe
icebp
jb
shlb
add
loop
test
dec
leave
stc
idivl
jne
xor
pop
divb
popl
push
loop
arpl
lret
and
push
dec
out
mov
jl
inc
fmull
mov
and
pop
mov
sbb
xor
inc
push
decb
xor
jb
jbe
test
jno
rolb
shl
fidivrl
dec
dec
jbe
les
pop
xchg
bound
inc
cmp
push
neg
rol
lcall
mov
sbb
mov
cmpl
xor
push
movsl
sbb
sub
lods
cwtl
mov
pop
fcomps
mov
push
mov
ret
pusha
sub
cmp
jb
xor
mov
pop
call
test
sub
sbb
ret
icebp
push
lds
push
xchg
pushf
test
pop
jle
nop
gs
mov
cmpsb
inc
mov
xchg
dec
jbe
leave
pushf
scas
and
scas
loop
add
jno
jbe
cwtl
jp
cmp
mov
pusha
inc
xchg
adc
cli
jbe
inc
int3
mov
xchg
xor
cmpsb
cmp
jp
loop
add
inc
cmpsb
add
out
test
rcr
sub
push
dec
lods
loop
mov
cltd
sub
ret
out
out
test
rcr
sub
push
xor
call
sub
adc
sahf
out
test
rcr
sub
push
inc
pop
hlt
inc
cli
loope
sahf
scas
xchg
lods
add
and
mov
idivl
loopne
mov
pop
pop
bound
mov
jne
dec
fldt
outsb
frstor
pop
xchg
aas
or
cmp
mov
mov
call
cli
xchg
mul
push
pop
xor
int3
xchg
jo
inc
rorb
push
in
sbb
imul
dec
xlat
into
fcmovnb
xchg
jbe
jmp
mov
jne
in
test
outsl
pop
inc
fbld
enter
lcall
mov
cmp
xlat
test
xor
outsb
addr16
adc
sbb
xchg
data16
bound
js
cwtl
dec
repnz
mov
scas
dec
in
sbb
xorb
enter
sbb
mov
sub
cltd
adc
jg
and
popa
push
pop
dec
mov
pop
add
fisubs
mov
pop
xchg
pop
mov
jecxz
sahf
mov
dec
and
inc
xchg
dec
add
mov
insb
and
adc
inc
lods
movsb
das
mov
mov
cltd
inc
push
cmp
pop
mul
jbe
stos
je
sbb
push
xchg
clc
mov
push
add
inc
push
jno
mov
sub
jl
jbe
xchg
jbe
ret
mov
push
sub
xchg
push
sti
inc
xchg
movsb
and
mov
mov
or
jo
iret
fnstsw
jno
ret
add
rol
xchg
xchg
lahf
test
add
jge
neg
pop
les
push
ljmp
stos
adc
aaa
loopne
test
aaa
ss
fsubrl
add
ss
test
jecxz
xchg
aaa
cmp
sbb
into
sub
pop
jp
add
jmp
shlb
mov
int
inc
notl
xchg
test
sbbw
push
jg
jne
cs
pop
aad
cltd
cmp
pusha
std
stos
aam
popf
addl
jbe
mov
fcoms
imul
push
inc
gs
pextrw
insl
out
pusha
sahf
add
lret
xor
loope
movsl
pmaxsw
jnp
and
or
in
shlb
jnp
cmp
loopne
les
scas
ljmp
sti
xchg
cli
mov
lret
pop
pusha
cs
xor
push
ljmp
or
out
les
test
fsts
cld
insb
xor
hlt
and
shrl
out
mov
in
add
lcall
addl
push
cmc
push
aam
dec
sti
enter
cmp
out
sbb
dec
and
out
pushf
rol
mov
mov
lods
dec
push
cli
dec
imul
add
std
mov
mov
out
sub
lahf
lret
mov
pop
in
cmpsl
fwait
or
cmc
shlb
in
idivb
lcall
out
xor
pop
into
push
cmp
daa
jnp
idivb
xor
sbb
test
jge
stc
xchg
sub
outsb
xor
jl
xchg
pop
cmp
xchg
outsb
outsb
jbe
fcmovu
dec
mov
nop
insl
add
lods
xor
push
cmpsb
mov
add
jae
lds
cmp
xchg
faddl
push
xchg
pop
test
lea
sbb
push
mov
ja
stos
and
push
add
jb
sub
fists
mov
jo
out
addr16
adc
dec
leave
lock
or
mov
aam
cs
pop
repnz
cwtl
into
inc
or
rorl
jl
jne
scas
mov
sbbl
dec
int3
mov
repnz
push
insb
stos
inc
outsl
mov
js
ds
popf
iret
xchg
pop
push
and
dec
mov
mov
es
stos
xchg
jl
mov
cwtl
xor
lods
adc
push
pushf
xor
stos
pop
mov
push
xor
add
movsb
push
lods
adc
pop
mov
fsubp
out
cmc
pop
mov
jno
adc
and
ja
xchg
popa
sub
push
out
and
cwtl
jno
mov
inc
lahf
mov
jo
outsl
dec
sub
xlat
sub
or
nop
add
rol
cltd
pop
push
mov
int3
and
pop
ret
xchg
into
jno
ljmp
adc
add
jns
pop
xchg
ror
stc
mov
or
xchg
hlt
icebp
jno
mov
lret
das
dec
pop
fwait
xor
inc
sub
jbe
add
cmp
lret
call
xor
out
sti
mov
insb
fsubl
sbb
push
gs
dec
cmpsl
pop
mov
mov
in
in
aam
mov
or
or
aam
jmp
xchg
cmp
jne
mov
cmp
stc
xchg
inc
push
mov
call
adc
add
xchg
jno
pop
testb
xor
and
add
shl
and
adc
cmpb
into
repnz
fsubrs
test
cmp
adc
scas
inc
push
mov
scas
test
xor
ret
sub
in
cmp
adcl
popa
shlb
push
test
add
pushf
add
and
xchg
test
rsqrtps
add
fistps
iret
stos
mov
sbb
mov
stc
pop
aad
xor
and
daa
dec
std
into
mov
adc
inc
lds
push
push
inc
call
dec
mul
cld
dec
pop
cmp
xchg
insb
inc
mov
inc
add
jmp
push
cltd
xchg
xor
mov
pop
in
push
enter
or
data16
mov
insb
dec
inc
mov
fs
dec
in
mov
dec
negb
int
sbb
push
stc
jo
mov
push
sub
jbe
mov
cmp
fists
pop
sti
sbb
into
pop
test
pusha
stos
or
or
leave
pop
stos
stos
xlat
test
cwtl
faddl
insb
pop
jmp
fcmovb
not
push
fldl
sbb
ss
in
sahf
lds
adc
and
test
fs
sub
lods
sbb
arpl
leave
mov
std
mov
sub
sub
aad
cmpsl
bound
insl
fisubrs
sub
and
insb
fst
or
push
fldl
mov
scas
cmc
push
mov
mov
lock
push
xor
iret
lods
rorl
loopne
std
les
sbb
mov
lock
in
setl
fistpl
sbb
sub
xchg
or
rcrb
mov
adc
or
repnz
lea
std
cli
push
lret
add
mov
idivb
rcr
inc
sub
cmp
inc
sub
cmpsb
xchg
mov
jge
lret
std
repnz
xlat
out
push
outsl
mov
add
dec
in
and
jecxz
push
stos
js
sahf
mov
int3
or
les
in
cli
fiaddl
not
pop
rclb
inc
or
lcall
cmpsb
lret
cmp
xor
xor
cwtl
pop
mov
inc
sbb
daa
enter
mov
sbb
inc
pop
inc
xchg
jecxz
jnp
js
mov
sub
pop
and
jge
aam
adc
inc
pop
mov
cwtl
push
imul
imul
mov
clc
cmp
pop
scas
aad
and
into
icebp
les
fmul
aaa
jae
inc
adc
pusha
fsubr
fistpll
sahf
out
adc
scas
lea
dec
jl
xor
fwait
les
jns
cmp
es
inc
lcall
cmp
dec
add
push
fists
inc
sub
testl
test
test
fcomi
xchg
fstpt
or
dec
ljmp
addr16
lret
sub
and
cs
fwait
dec
cwtl
js
aas
mov
vmulsd
jle
outsb
mov
dec
lret
adc
arpl
pop
stos
pop
ljmp
bound
xchg
jb
popa
adc
repnz
xor
add
or
lret
test
pop
push
jae
pop
push
sbbb
dec
std
arpl
push
rorl
mov
push
imul
add
and
mov
fsubs
add
cmp
scas
dec
mov
andb
or
mov
inc
addr16
inc
sarl
jmp
jae
rorl
roll
gs
add
clc
shr
mov
rcll
sbb
fdivl
push
add
outsb
pop
out
xor
pop
lret
xor
inc
inc
adc
loop
mov
mov
movaps
inc
test
loopne
mov
test
cmp
lahf
add
aaa
inc
stos
fisttpl
lcall
fptan
mov
xchg
mov
data16
lret
mov
xchg
pop
lcall
inc
stos
push
dec
outsl
add
fistpll
loope
mov
xchg
add
push
bound
movsb
mov
and
xor
pop
sub
jbe
mov
cmp
cltd
lcall
inc
sbb
mov
subl
cmp
push
mov
pop
inc
adc
xor
push
xlat
outsb
adc
mov
test
ja
outsl
jns
aas
ljmp
cs
jl
dec
lcall
or
sbb
je
inc
cmpsl
inc
dec
pop
cmp
fisttpll
push
lret
xchg
out
dec
xor
xorb
push
sub
das
and
cmp
pusha
sti
out
mov
inc
fyl2xp1
gs
add
inc
test
test
jecxz
lret
mov
or
data16
sbbb
sub
jmp
push
std
and
das
dec
test
add
mov
loop
shll
xor
es
movswl
pop
shrb
out
cmpl
jmp
fwait
sub
out
jmp
mov
jmp
and
cmp
sahf
xchg
and
push
mov
movsl
lcall
aas
mov
dec
xchg
jg
cmp
repnz
push
push
sarl
adc
sub
cli
pcmpeqw
push
mov
aas
rcrb
mov
adc
or
repnz
lea
std
cli
push
faddp
mov
iret
roll
out
xor
and
mov
jecxz
fstl
cmpsl
inc
inc
or
cli
fisttps
enter
mov
mov
das
pop
sub
and
ret
add
push
inc
rorl
int3
sub
mov
xchg
xchg
aam
out
sbb
push
lds
jmp
js
fsubr
fs
xchg
mov
inc
cmc
dec
insl
lods
jl
and
push
addr16
pop
shll
inc
xorb
jae
out
sub
inc
dec
jl
icebp
call
negb
mov
add
dec
cmpsb
inc
stos
xor
movsb
mov
imul
inc
aas
sbb
xchg
mov
mov
scas
add
add
jnp
sub
sbb
sub
test
sbb
subl
int
mov
sbb
test
adc
cmp
or
inc
dec
or
push
int
mov
cmp
xchg
lret
mov
iret
sub
punpckldq
fsubp
movsl
cld
int3
aam
cmpsl
xchg
repz
sub
subb
ret
jbe
adc
jmp
cmp
ss
mov
xlat
jae
and
lcall
das
mov
sub
test
dec
mov
loope
mov
mov
lret
and
and
mov
mov
aas
std
pushf
into
cltd
xchg
cmp
cmp
push
sub
repz
mov
push
or
pushl
arpl
mov
lea
pushf
pusha
push
add
scas
ret
ja
cmpsb
sti
mov
lods
or
fnstenv
mov
adc
loopne
loope
mov
xchg
andb
out
in
jp
adc
nop
jl,pt
pop
imul
lea
testb
inc
daa
mov
bnd
fsubr
xor
mov
jmp
outsb
fmuls
pop
inc
sub
out
pop
lahf
mov
call
mov
and
inc
jecxz
jnp
mov
mov
mov
in
cltd
int
xchg
xor
fisttpl
pusha
pmaddwd
inc
std
imul
sbb
sbb
pop
test
add
sbb
hlt
cmpsl
data16
cld
mov
popf
mov
leave
add
repz
inc
jb
out
stos
jmp
sbb
mov
xor
push
stos
pop
and
mov
push
jle
sub
jnp
rorl
sub
mov
test
fs
fwait
jmp
add
leave
adc
jge
jle
fisttpll
push
mov
pop
jnp
inc
les
fistps
test
jne
inc
call
or
or
jo
push
loopne
dec
lcall
inc
cmpsb
jge
cmp
mov
mov
je,pn
cmpsl
out
cmpsb
xor
ret
stc
or
popf
sbb
sti
fnstcw
lcall
inc
in
test
aam
mov
push
pop
mov
fwait
mov
inc
adc
jno
in
mov
in
jo
lods
int3
cmp
shlb
movsb
inc
mov
cmpsb
in
aam
pop
xchg
and
push
mov
xchg
ds
pusha
lret
add
mov
lahf
insl
loop
movsl
je
sub
and
ret
pop
test
mov
int3
pop
arpl
out
jmp
lahf
in
movsl
out
pop
outsb
lds
push
mov
mov
pop
ljmp
adc
pop
out
imul
dec
cmp
xor
icebp
popa
rorl
jns
adc
mov
dec
push
inc
and
inc
stos
fldcw
movsl
mov
mov
out
data16
popf
dec
jo
shl
pop
jnp
arpl
adc
dec
loopne
jecxz
cs
clc
push
xor
fnsave
sub
outsb
lods
lahf
xor
and
mov
lea
adc
test
outsl
push
nop
test
sub
faddl
push
and
mov
jne
data16
std
adc
fisubs
adc
loopne
push
cmp
pop
fdivs
fistpl
int
into
sbb
mov
popa
push
mov
sbb
mov
jae
push
dec
inc
jle
push
cmp
lods
add
push
mov
jmp
push
js
out
gs
jne
dec
sbb
adc
adc
pushf
les
add
pop
lea
jns
dec
pop
roll
sbb
xchg
js
jns
cmp
sbb
mov
arpl
popf
inc
testb
jno
jl
int
scas
dec
mov
push
or
cmp
sar
pop
pop
or
cmpsl
push
lods
cmpsl
and
and
pop
sub
lods
or
add
cmp
dec
pop
out
pop
xor
mov
insl
arpl
xchg
scas
jg
ja
and
ljmp
jns
xor
and
jne
xchg
push
inc
sbb
aam
ret
jge
jno
pop
mov
sbb
out
pop
mov
mov
pusha
jne
stos
cld
mov
iret
jecxz
jl
jb
test
jbe
loope
shll
adc
push
fcom
dec
dec
scas
fidivs
pop
add
adc
push
sbb
fyl2xp1
add
mov
pop
mov
nop
push
push
cmp
push
dec
leave
sti
jb
stos
mov
jne
mov
aaa
adc
rep
push
pop
add
repnz
into
cmp
out
call
dec
call
call
cwtl
cmpsb
sbbb
cltd
hlt
stc
push
pop
push
idivb
ret
mov
cli
js
bound
pop
test
cmp
xor
and
pop
pushw
mov
jp
cmp
mov
stc
add
sbb
fwait
push
mov
dec
lret
imul
xchg
adc
push
not
lock
out
loope
in
std
inc
push
stos
jmp
pop
xchg
dec
enter
orb
add
adc
mov
adc
ds
imul
lcall
stc
add
gs
inc
sar
or
adc
popf
mov
test
sarl
lock
and
sub
pop
sbb
fcoms
jnp
je
jo
leave
xchg
scas
jecxz
xchg
stc
clc
in
mov
cmpl
adcb
test
stos
test
ds
push
imul
mov
adc
inc
dec
loopne
jno
idivl
xor
mov
add
xor
cmpb
stc
xor
mov
jns
test
or
sbb
xlat
dec
in
rcll
test
push
sbbb
sub
fistps
je
shlb
data16
mov
sub
mov
out
push
divl
jno
mov
mov
cltd
xchg
testb
inc
sbb
mov
sub
and
pushf
push
adc
or
or
push
adc
ss
out
sub
mov
mov
mov
xchg
sub
repnz
aaa
pushf
cmp
cmp
fcmovnbe
out
aaa
xlat
jp
cmpsl
clc
cmp
leave
xor
out
mov
leave
xor
fiaddl
xchg
add
fstpt
mov
loopne
mov
xchg
pop
dec
js
sub
out
movsl
std
cltd
ret
outsb
and
call
inc
mov
and
xchg
xchg
icebp
data16
jb,pn
pusha
fidivrl
je
push
or
sub
fdivrp
cmc
or
icebp
and
fdivrs
scas
dec
dec
pop
jae
idiv
cwtl
mov
xor
in
stc
iret
or
mov
clc
or
sbb
pushf
cmpsl
out
aas
in
fnstsw
sahf
xor
popa
into
fdivrl
mov
or
popa
mov
testl
in
mov
xor
subl
sub
or
lahf
push
stos
pop
add
cmp
icebp
jg
cmp
dec
push
or
loop
push
call
enter
nop
dec
inc
inc
mov
mov
enter
iret
mov
inc
mov
popa
or
je,pn
sahf
iret
xchg
adc
mov
adc
lret
sbb
loop
adc
aad
or
hlt
sbb
or
jmp
sub
push
les
jge
pop
test
push
lret
orl
xor
cmp
dec
adc
out
sub
idivl
enter
push
adc
mov
dec
jp
imul
scas
cld
and
in
xchg
pusha
add
sbb
sbb
out
mov
push
lret
inc
and
les
in
dec
push
mov
fwait
pop
push
xchg
fldl
ja
rorb
and
loope
pop
outsb
jecxz
cmpsb
pop
shll
jmp
cltd
ds
in
fwait
test
adc
xor
push
pusha
gs
shrb
addr16
jmp
clc
lods
pop
inc
addr16
jecxz
and
sahf
cmp
xchg
jle
push
sub
lods
lods
jne
js
jp
scas
imulb
test
lret
xchg
pop
sub
outsl
stc
adcl
sarl
fcomps
jecxz
lret
mov
fisubs
lahf
and
adc
out
xor
adc
or
push
mov
sarl
cmp
mov
and
jmp
inc
loopne
ficoml
inc
leave
sbb
enter
or
pop
mov
and
popf
xchg
sbbl
or
xor
ja
filds
int
adc
iret
jg
mov
fsubrp
in
xchg
and
inc
adc
in
xlat
xchg
test
call
cmp
adc
cmp
inc
pop
lea
gs
dec
jbe
mov
lds
xchg
xor
outsl
and
jb
int
mov
and
mulb
scas
adc
mov
popf
and
mov
adc
sbb
xchg
add
imul
mov
push
xor
jb
push
sub
jns
and
loop
adc
loopne
jo
out
push
cltd
jecxz
jbe
push
jno
mov
cs
aam
and
mov
js
and
dec
xchg
xchg
xor
sarl
clc
cmpl
dec
add
cmp
pop
mov
pop
lret
mov
ljmp
std
fwait
imul
push
or
pop
popa
mov
inc
loopew
mov
xor
pop
fcmove
adc
adc
and
dec
sbb
ss
stos
inc
mov
jg
fdivrl
movsb
sub
mov
and
push
aam
pop
push
mov
dec
sbb
pushf
xlat
mov
fyl2xp1
test
mov
mov
xchg
call
adc
lods
ss
frstor
mov
pusha
mov
cltd
sbb
sahf
mov
sbb
lds
push
ds
sbb
xor
push
pop
rorb
call
cmpsb
mov
jno
movsl
mov
loope
inc
push
rorb
lods
inc
mov
div
mov
xorl
shrb
movsb
loope
mov
and
lods
dec
jno
int3
sub
push
shlb
cli
pop
ja
fimull
lock
movsb
rorl
pop
sbbb
sub
add
push
enter
sub
or
add
popf
mov
aad
aam
add
cmp
mov
jbe
and
fsubrl
jnp
inc
mov
push
adc
sbb
adcl
fcompl
mov
lahf
sbb
mov
icebp
jge
pop
not
mov
push
lods
pop
and
fsubr
ss
ret
inc
shrb
xor
andl
sarl
pop
jo
fildll
int
lret
xchg
jg
test
nop
or
add
stos
add
movsb
fwait
cmp
scas
popa
pushf
addb
jae
mov
fnstenv
popa
jmp
xchg
and
sbb
mov
adc
ljmp
dec
mov
adc
sub
aaa
cmp
test
add
imul
cwtl
call
jne
call
subl
jl
dec
mov
aaa
orb
xchg
enter
jnp
icebp
cmp
cli
jmp
rcrb
shll
js
xor
cmp
mov
fistps
hlt
xor
and
int
lea
cli
scas
sbb
dec
lea
leave
pop
and
cmc
in
dec
out
imul
adc
cmpsb
out
lods
sarb
pushf
xchg
xchg
xchg
inc
inc
mov
xor
xor
insl
dec
movq
outsl
dec
push
mov
dec
sarl
aaa
xor
mov
fmul
mov
cmc
inc
and
lret
mov
add
xchg
mov
dec
xchg
aas
aaa
loop
sbb
cld
cmp
scas
jg
loopne
xchg
ds
mov
aas
aad
pop
jnp
pop
push
dec
pmaxsw
andb
or
pop
sbb
lods
sti
lcall
mov
mov
push
into
jecxz
xor
jo
lods
dec
ss
stos
pop
push
or
mov
adc
fidivl
shll
add
daa
pop
xor
jp
jb
out
mov
push
cs
push
dec
cld
dec
jecxz
adc
jecxz
cmp
adc
pop
inc
je
cmp
outsb
adc
add
adc
loop
scas
arpl
imul
pushf
data16
orps
pop
pop
popa
cltd
lahf
inc
pop
shll
xchg
and
call
loopne
push
jmp
jecxz
je
jle
cmp
jg
adc
outsl
je
sbb
dec
cmp
fstl
jle
sbb
mov
inc
or
sbb
rcl
ret
push
cmc
pop
das
add
push
sahf
out
out
sub
jno
loope
dec
mov
inc
shlb
add
ss
stos
jb
les
push
dec
xor
mov
outsl
dec
aam
push
mov
lea
mov
push
in
hlt
ficoml
xor
dec
lret
sub
cwtl
rcll
sub
add
jnp
es
int
push
pushf
ss
push
add
inc
jg
push
mov
pop
cmc
cld
nop
xchg
sbb
lahf
mull
test
lret
and
push
insb
dec
mov
sbbl
adc
and
lods
sahf
fadds
pop
inc
lret
sub
fs
pop
push
pop
mov
jno
mov
fs
xchg
adc
ss
in
mov
jb
in
mov
fisubs
xor
shrb
insb
push
lods
cli
in
fcmovnu
cmp
imul
mov
jp
push
jge
cmp
xlat
or
xchg
jle
ret
pop
pop
xchg
xchg
sub
and
ss
push
add
cs
dec
rcl
pop
stos
stc
xor
ret
test
pop
sbb
inc
test
cmp
call
pop
lds
pop
pop
add
int
or
repz
out
dec
movsb
test
sbb
cltd
adc
cmc
out
inc
mov
ss
call
rol
push
movb
out
inc
loopne
lret
inc
rcrl
jns
inc
cmp
fisttps
add
divl
data16
mov
and
das
fsubrs
mov
jb
mov
xchg
rcrl
testb
stos
int
out
dec
cli
lods
jo
sti
push
mov
imul
push
or
cs
scas
inc
and
mov
and
ljmp
lahf
cmp
mov
rcl
sub
cmp
mov
aaa
ds
stos
pop
mov
push
pop
das
or
pop
mov
mov
cmp
imul
adc
adc
mov
xor
jmp
inc
mov
sub
push
movsb
mov
pop
xchg
out
inc
call
loopne
mov
and
mov
mov
aaa
mov
jge
xor
mov
rcll
and
mov
dec
push
daa
dec
push
dec
xchg
sbb
xchg
mov
push
scas
mov
aas
add
ret
cwtl
push
mov
repz
aaa
jo
or
sub
adc
lods
sub
or
pusha
popf
cli
andl
loop
data16
dec
xor
hlt
pop
in
jge
mov
push
sarb
out
rcrb
cltd
hlt
sub
jg
loopne
adc
lret
cmp
icebp
cli
mov
jmp
test
sbb
mov
inc
pop
mov
mov
mov
insl
jge
cwtl
mov
addr16
xchg
in
mov
xchg
loopne
pop
push
and
or
push
daa
pop
cmp
test
add
add
mov
mov
or
cmc
sbb
adc
test
sub
pop
cmpsb
je
inc
rolb
dec
lcall
cs
lcall
mov
adc
or
adc
shlb
xchg
cltd
in
mov
jmp
aam
and
aaa
push
insb
pop
lret
lds
mov
loopne
mov
es
xor
dec
cs
xor
repz
cmpsb
out
pop
and
in
mov
into
adc
enter
adc
sub
inc
jae
cltd
fwait
dec
movsb
cmc
mov
or
mov
xlat
icebp
daa
fdivs
daa
pop
push
fisttpl
mov
jb
lahf
sub
cli
sub
cld
xlat
je
orl
jo
hlt
mov
aam
popf
push
fsubp
jecxz
adc
arpl
repz
je
mov
mov
mov
xchg
sbb
adc
and
call
xor
cld
push
icebp
xchg
aam
test
pushf
mov
sbb
addr16
jnp
xorl
push
dec
rolb
in
inc
call
or
sub
arpl
adc
xchg
pop
jne
scas
dec
cmp
sub
adc
xchg
in
pop
dec
dec
add
pop
mov
adc
sbb
sbb
dec
xor
repz
sbb
and
xchg
in
loopne
pop
xor
sbb
fcmovnbe
dec
push
add
mov
mulb
aas
sub
loope
divb
clc
fadd
cmc
int
dec
mov
mov
outsl
pop
jmp
inc
push
or
mov
xchg
add
sti
cmp
xlat
adc
shl
inc
jecxz,pt
lret
dec
femms
and
pop
imul
mov
or
xchg
outsl
cltd
mov
dec
popa
xchg
sbb
pushf
jbe
shl
aam
das
cmpsw
movsb
inc
inc
stos
inc
jle
inc
sbb
out
push
cmp
stos
cmp
inc
fs
jo
iret
sub
jae
mov
loopne
movsb
adc
inc
movsl
pusha
lds
cmp
xor
aam
fimull
test
cmp
and
das
xor
cs
cmp
dec
or
inc
js
mov
jp
mov
add
mov
mov
xchg
aas
sbb
adc
lods
pop
mulb
pushf
pop
imul
fwait
push
fnstenv
sbb
rorl
fildl
in
cmpsb
jno
popf
mov
adc
cmovp
mov
sbb
pop
or
bound
shr
add
das
fstpl
int3
mov
xchg
roll
xchg
subl
xor
jge
xor
push
mov
rclb
or
sub
mov
inc
mov
ficomps
add
aaa
shrl
adc
mov
ltr
push
aas
testb
sbb
mov
mov
outsl
loopne
insl
daa
loopne
scas
fwait
in
mov
push
lret
je
jle
mov
ds
out
sbb
loopne
jns
je
mov
push
push
sub
push
cli
scas
push
sti
into
sub
inc
imul
adc
fcomps
push
jb
in
das
ret
adc
nop
sub
rorl
and
or
jl
xchg
ja
cmp
iret
inc
fs
sbb
lods
cmp
sbb
and
mov
lea
dec
movsb
add
dec
cmc
mov
xchg
pushf
push
jae
dec
mov
fldt
pop
rcrb
nop
fdivs
jmp
jb
es
orl
out
sbb
insb
xor
adc
in
jg
cmp
sar
push
sarl
fcom
ficompl
mov
fisubl
notl
push
push
cmpsl
fbstp
int
push
mov
adc
pop
addr16
mov
lea
push
jp
pop
fcompl
adc
fwait
imul
push
mov
ret
lahf
push
mov
or
mov
mov
or
sti
xor
xlat
negl
fiaddl
repnz
dec
jo
shll
or
fs
les
or
int3
popa
cltd
cmp
divl
mov
nop
fs
pop
out
scas
sub
inc
adc
dec
pop
xchg
or
xor
clc
fldt
jne
nop
jbe
clc
dec
lods
sbb
dec
rcrb
into
lds
cmp
out
in
push
jge
push
fst
scas
fistps
cmp
or
pop
sbb
xor
popa
divl
mov
sbb
mov
pop
xor
pop
subb
lods
fidivrl
outsb
jle,pt
jle
mov
xchg
into
xor
xor
decl
xchg
nop
stos
mov
pop
out
jae
xor
ret
jl
mov
push
es
dec
add
stos
ficomps
mov
es
addl
ljmp
jle
mulb
mov
fsubr
cmp
loop
xor
les
or
ret
sbb
sbb
jecxz
lret
daa
adc
or
enter
add
xchg
jb
pop
xlat
cmpsb
mov
orb
and
clc
pop
pop
fsubl
fdivrs
lds
movsl
lock
clc
fstps
or
pop
jl
mov
cli
ljmp
mov
scas
xchg
test
push
jnp
mov
pop
ret
mov
push
enter
add
lock
pop
sbb
out
add
xor
adc
aad
pop
clc
dec
mov
mov
dec
push
testb
jo
les
and
inc
push
jl
sub
mov
inc
push
sbb
ret
add
lret
xchg
decl
sahf
cli
mov
popa
push
ja
sub
stos
pop
mov
leave
mov
ficomps
add
cli
jl
cmpsl
jnp
inc
jnp
jne
movsl
inc
addr16
ret
adc
mov
cmpsb
cmp
push
idiv
cmp
or
lods
hlt
push
xchg
jl
inc
dec
clc
xchg
aam
cltd
cltd
push
aam
in
int3
cmc
xchg
jl
ljmp
mov
hlt
sahf
jo
or
jns
push
lods
mov
adcb
jae
and
mov
sarl
lret
push
xor
and
and
xor
sbb
xchg
mov
test
fbld
imul
cmc
and
push
xor
cmp
vmread
ds
enter
bound
mov
inc
cltd
xchg
cli
jmp
xchg
rclb
jno
fdivl
mov
mov
xor
fisttps
lods
inc
fsubrl
cld
cwtl
in
es
icebp
and
adc
mov
cmp
fadds
lods
mov
inc
push
data16
popf
mov
cwtl
adc
mov
xchg
aas
add
mov
lods
leave
cmp
xchg
pushf
sbb
adc
in
pop
adc
arpl
push
cmc
xor
adc
jl
cmpsl
inc
mov
mov
inc
mov
imul
and
pushf
cmp
dec
pop
pop
dec
and
jmp
or
or
xchg
js
insl
jg
out
mov
pop
cmp
in
sub
xchg
push
inc
jns
sub
inc
jecxz
icebp
push
push
push
icebp
shlb
push
addl
lret
sbb
and
inc
mov
inc
push
pop
sub
xor
pop
dec
or
mov
push
jl
into
add
stos
sbb
xor
lahf
xchg
push
adc
call
cmpsl
mov
sti
inc
enter
sti
ds
fsubp
jecxz
adc
arpl
push
cmc
xor
adc
fbld
mov
mov
mov
scas
sbb
jbe
jbe
stos
sbb
sahf
push
and
jnp
and
sbb
cwtl
fisubrs
mov
addl
loop
pop
andb
movl
and
adc
and
sub
xchg
pop
sahf
ds
cmpsl
mov
cwtl
pop
ljmp
and
ficomps
aas
ret
enter
xchg
stc
aam
lods
pop
inc
mov
or
out
mov
fwait
mov
xchg
fdiv
xchg
das
mov
sarb
icebp
xchg
ss
mov
adc
mov
and
inc
inc
mov
xchg
mov
jno
mov
mov
mov
out
mov
daa
xor
in
js
xchg
push
xor
call
jge
xor
dec
xor
sub
xchg
mov
in
and
mov
cmp
mov
mov
or
xor
lea
call
nop
in
jae
or
fsubrs
stos
mov
nop
dec
push
pop
cltd
mov
add
pop
sbbl
pop
inc
push
inc
ljmp
push
or
inc
sbb
push
rcl
idiv
in
aam
inc
enter
dec
stos
loope
fnsave
sub
das
mov
and
aad
dec
pop
jb
xchg
sub
fwait
stos
loopne
mov
cmp
jp
cwtl
out
sbb
les
stos
pop
push
xor
je
pop
fdivs
push
lods
or
push
push
or
test
pop
sahf
or
push
add
pusha
lahf
mov
cli
dec
cmp
mov
xchg
stos
inc
pop
in
and
pop
xchg
pushl
lret
repz
mov
lods
pushf
mov
pop
xor
or
pushf
fsub
clc
idivb
mov
dec
aas
mov
fs
lea
mov
stos
bound
pop
arpl
and
fistpll
sbb
mov
test
sti
fs
add
add
xor
ficompl
cwtl
cs
mov
sbbl
in
fcompl
jne
xchg
pop
imul
sahf
xor
mov
loope
cmp
mov
sub
sbbl
push
iret
or
insb
inc
test
or
ljmp
jo
xor
pop
pop
hlt
adc
jmp
lds
frstor
mov
or
pusha
add
fstps
bound
xor
out
inc
jo
sbb
xchg
sbb
dec
ljmp
je
and
ja
cmp
jp
nop
dec
push
adc
imul
xchg
aam
add
jmp
daa
rcll
adc
in
test
adc
pop
imul
and
or
lcall
ss
out
xor
jmp
out
mov
pop
mov
xor
mov
adc
shl
mov
frstor
scas
push
shrb
pop
into
mov
cmp
nop
aaa
in
imul
inc
loope
mov
mov
xor
test
xor
dec
or
stos
push
aaa
call
enter
xchg
xchg
jge
mov
ljmp
mov
outsb
int
pop
jae
stc
jo
in
hlt
scas
pop
xor
inc
mov
adcb
daa
mov
dec
xor
cmpb
stc
mulb
xchg
ret
cli
push
mov
or
and
or
mov
fmulp
outsb
add
movsb
jmp
out
mov
sub
leave
mov
filds
aas
mov
test
sarb
std
scas
adc
lcall
addr16
dec
cmc
xor
jle
rcrl
fisttpl
xchg
pop
or
inc
pop
jne
push
movsb
pop
js
jnp
faddp
jno
lret
mov
pop
imul
mov
movsb
lods
call
add
in
fdivrl
aaa
call
add
stc
faddp
jno
lret
inc
fcompl
mov
call
jbe
clc
add
sub
gs
xchg
inc
cmp
leave
popa
dec
mov
add
add
and
jle
sbb
pop
mov
or
push
adcb
addr16
push
mov
les
xlat
mov
js
xchg
aaa
mov
in
push
mov
scas
jp
lea
arpl
mull
inc
mov
cmp
mov
sbb
and
sbb
mov
push
jo
mov
mov
push
push
push
sti
xor
addr16
popw
insl
imul
lds
aaa
out
aaa
and
inc
je
sub
aaa
int3
fpatan
cmp
push
gs
out
cmpsl
call
jbe
and
in
push
ds
mov
inc
xor
dec
cmc
frstor
push
lret
pop
push
xor
cmp
roll
push
pop
mov
es
aad
hlt
aas
in
push
out
fiaddl
push
push
pop
idivl
inc
fdivl
fs
lods
int3
mov
and
cmp
popa
lahf
push
fucomp
sub
xor
in
cltd
inc
cmc
adc
and
push
xchg
and
out
pop
push
mov
lret
inc
vhsubps
sahf
lds
mov
push
fwait
adc
xchg
push
in
dec
mov
aas
mov
ficomps
push
inc
adc
repz
inc
enter
addr16
xor
outsl
sahf
adcl
add
and
and
fdivrl
addr16
sbbb
sti
sub
scas
adc
sbb
call
popa
or
stos
stc
call
jp
mov
fdivrs
jp
mov
jmp
push
xchg
loop
leave
dec
jg
mov
push
sub
scas
xchg
push
test
sub
sbb
jmp
and
mov
sbb
fs
js
rcrl
sbb
call
cs
fucom
movsl
sub
fdivs
mov
sahf
push
dec
insb
jmp
mov
xchg
mov
test
arpl
cmpsl
loope
mov
adc
mov
jns
lcall
scas
loopne
or
sub
call
push
sbb
pop
sub
inc
into
into
imul
lcall
push
dec
jmp
test
scas
ds
ljmp
push
cs
mov
xchg
fstps
std
pop
sbb
jl
xor
xchg
dec
stos
in
sbb
dec
and
mov
or
pop
fcomps
xchg
subb
lods
mov
xor
dec
outsb
call
into
jb
add
mov
push
and
mov
or
test
xor
std
repnz
jns
inc
lock
xchg
mov
movsl
lods
mov
jnp
push
jno
mov
icebp
repz
dec
imul
sarl
push
push
jno
pushf
jmp
or
in
movsl
push
shll
in
fidivrs
xor
mov
sub
dec
or
pop
and
xchg
push
lock
sub
and
inc
dec
dec
stos
cmp
mov
add
xor
ss
cmc
sbb
dec
inc
mov
mov
idivl
lea
or
bound
in
and
push
sub
imull
in
pop
scas
imul
cmp
pushf
lds
push
inc
repnz
mov
adc
sub
add
and
ljmp
ret
xchg
loope
xor
sahf
repnz
lods
sbb
mov
mov
aad
mov
je
jnp
ret
xor
incb
int3
pusha
stos
sete
add
jmp
and
mov
scas
pop
push
clc
imul
mov
out
jbe
int
testl
add
xor
jo
sub
es
mov
sub
aas
jge
in
pusha
int3
bound
scas
mov
lds
push
push
pop
pusha
push
xchg
or
mov
and
rorb
cwtl
test
lcall
scas
xchg
dec
test
cmpsl
call
cmc
push
mov
lahf
xor
mov
jmp
push
dec
cmp
das
mov
das
push
fdiv
jg
mov
scas
scas
jns
ljmp
fsubrp
out
mov
pop
imul
sub
jno
or
and
lcall
or
dec
fwait
cmp
jmp
dec
fisttpl
fwait
rcll
cmp
or
sbb
cmpsb
std
cltd
arpl
inc
push
int
push
jp
cmp
shl
das
in
jns
pop
pop
cmp
adc
aas
lds
movl
adc
sbbb
jecxz
repnz
out
mov
iret
es
push
sub
shrl
inc
jmp
pop
inc
mov
inc
jle
sti
fidivrl
xchg
pop
test
xchg
cmp
int3
push
mov
out
xor
nop
inc
rclb
pop
lods
and
sbbb
cs
or
outsl
sub
pop
push
cmp
ret
inc
jbe
shlb
jl
adc
and
cmp
jns
lds
insl
stos
jge
rcrl
sahf
xchg
inc
mov
ret
xor
xchg
inc
and
ret
dec
rcrb
stos
mov
rorb
and
xor
adc
call
adc
pop
push
int
in
repz
xor
or
imul
shlb
insb
push
push
push
jg
ret
loope
cmc
sahf
dec
loope
scas
into
mov
outsl
loope
sub
aad
xor
push
add
mov
into
subb
cmpl
stos
add
aas
push
les
les
out
pop
cmpsb
xchg
jle
add
pushf
cmp
mov
cli
cmpsl
stc
aam
outsl
mov
and
outsb
adc
inc
sub
bound
xor
in
dec
jmp
push
jl
or
out
scas
ret
fs
inc
fwait
out
jb
mov
cltd
repnz
and
lahf
sub
cmpl
cld
sbb
cwtl
ficomps
inc
js
inc
jns
cmp
push
fnstsw
xor
mov
mov
int3
jge
daa
push
fs
shll
push
out
loopne
xor
adc
push
mov
addr16
lds
lret
mov
aas
pop
pushf
push
imul
pop
out
push
les
imul
sub
mov
inc
inc
push
sahf
xor
dec
mov
jns
orb
sbb
push
pop
mov
repnz
pop
cmp
and
xor
mov
inc
mov
mov
cmp
scas
daa
push
xor
pop
aam
or
ret
loop
dec
or
xchg
lahf
call
sub
sbb
xchg
in
jb
pop
and
repz
jmp
fldl
adc
sbb
dec
push
fcoms
test
out
push
mov
jbe
idiv
ret
sub
mov
insl
ss
cwtl
cmpl
inc
mov
out
sbb
inc
xor
sbb
add
fimuls
addl
ja
pop
push
sub
add
mov
mov
into
xchg
or
enter
test
pop
jp
sti
insb
or
mul
loop
mov
cmpsb
add
sahf
aad
jmp
mov
jae
ret
mov
and
or
mov
into
xchg
or
add
xchg
cmp
cmpsl
push
in
xchg
fcoms
and
andl
xor
repz
add
outsb
sbb
jbe
sbb
sub
pop
repz
rcll
push
adc
aam
sbb
dec
sbb
orb
cmp
mov
in
xor
sti
lcall
sahf
pop
push
fbld
insb
dec
icebp
sbb
mov
repz
xor
int
xchg
lods
push
and
fwait
sub
cmp
dec
inc
icebp
arpl
ljmp
test
fsubs
shlb
aad
jmp
cmp
pop
incb
int3
fs
inc
inc
sub
dec
pusha
xor
jbe
shlb
dec
popa
orl
enter
or
enter
popf
sbb
mov
lds
jg
pop
aam
jge
xchg
inc
and
ret
dec
rcrb
stos
mov
rorb
and
xor
adc
call
xor
nop
rcll
sbb
pmuludq
out
inc
inc
loop
icebp
mov
push
push
sub
push
mov
push
outsb
mov
xchg
neg
popf
in
or
fs
mov
mov
je
sub
imul
dec
push
shll
out
insb
lods
in
movd
enter
fcmovnu
and
outsl
test
sbb
jno
aam
jnp
je
leave
sbbb
fwait
call
dec
jle
into
loope
inc
mov
fs
aad
leave
stos
ret
adc
pop
mov
fwait
jno
adc
pop
mov
in
das
sub
outsb
in
in
dec
mov
rcll
in
mov
or
cmpsl
cwtl
lcall
das
lcall
xchg
push
adc
aas
adc
aad
in
mov
test
sub
xor
jl
inc
fsubs
ja
cmp
lock
js
mov
outsl
pop
fstpt
jmp
imul
mov
lahf
outsb
lea
xchg
mov
arpl
cmp
xchg
and
out
nop
scas
xchg
je
sbb
xor
rorl
gs
or
aaa
sar
mov
sbb
pushf
dec
mov
and
aas
add
pusha
mov
adc
or
pop
data16
and
add
cli
pop
mov
mov
in
inc
sub
cmova
sbb
jl
in
lds
lcall
pop
pusha
fisttpll
test
xchg
xchg
std
push
inc
outsb
in
push
and
mov
outsb
sahf
data16
inc
popa
repz
mov
sbb
dec
test
cmpsb
and
add
or
std
push
pop
aam
cmp
out
cwtl
dec
push
clc
outsb
jmp
adc
lds
cli
pop
or
and
and
push
pushw
jo
inc
popf
leave
cld
push
mov
cltd
sbb
cmp
push
cwtl
and
push
push
pop
push
dec
ret
xor
mov
adc
adc
lds
cli
pop
or
daa
jl
jb
nop
mov
int
mov
jge
lods
cld
inc
daa
push
call
or
push
push
pop
addr16
ds
fsubs
mov
xchg
jmp
push
out
insl
dec
sbb
dec
adc
and
dec
repnz
shll
test
sub
loop
lds
pop
aam
and
push
dec
inc
push
inc
je
arpl
inc
push
insl
repz
shr
jg
mov
push
pop
push
pop
loop
sahf
fcmovne
aas
mov
jge
push
das
add
push
ficompl
sbbl
lods
inc
in
cmp
pop
xor
andl
cmpsb
daa
rolb
std
ss
push
inc
nop
mov
cwtl
adc
add
rorl
cmp
and
inc
dec
add
lea
js
sbb
gs
int3
adc
push
sti
out
clc
rclb
or
push
stc
mov
mov
adc
stos
push
push
push
ficompl
sbbl
lods
inc
in
cmp
pop
xor
inc
lods
nop
mov
mov
rolb
cld
pop
mov
mov
cwtl
adc
add
dec
mov
lcall
pop
sub
mov
push
out
mov
out
pop
xchg
adc
push
sti
out
lcall
lods
in
push
stc
mov
mov
fwait
pop
push
leave
repz
fs
mov
fsubrs
sub
outsl
pop
test
cmp
sub
das
in
xchg
fcomps
out
push
std
xchg
leave
mov
add
xchg
je
lods
mov
dec
mov
aaa
ret
subb
adc
daa
adc
hlt
jno
out
sub
mov
cmp
incl
xor
rcll
push
sar
insl
rorl
mov
int
lods
adc
dec
jb
xchg
fwait
outsb
fisubl
pop
sbb
sti
push
movsb
pop
cmpsl
mov
lret
cmpl
in
cmpb
pop
xchg
in
test
xor
mov
imul
jno
inc
icebp
adc
in
add
adcb
pop
mov
mov
push
adc
leave
xchg
stc
adc
not
xor
cmpsb
xchg
mov
lock
mov
pushf
lea
cmp
lcall
sbb
in
add
mov
repz
lcall
mov
inc
pusha
dec
xchg
fimuls
cld
lds
aaa
test
mov
lods
scas
lcall
cmc
lods
pop
add
loope
ds
pop
add
rcl
pushf
jge
andnps
sbb
pop
cmp
push
dec
jmp
arpl
fmul
cmp
cli
popf
xchg
mov
popa
dec
std
aad
add
scas
test
dec
pop
sbb
dec
popa
les
push
pop
jecxz
out
add
push
cli
pop
adc
jae
xchg
std
push
loop
popf
daa
and
mov
movsb
hlt
in
repnz
lret
pop
xor
inc
jbe
fmull
scas
imul
xor
adc
mov
xchg
mov
adc
sub
cs
fadds
mov
stos
mov
in
mov
stc
inc
cmpsl
mov
icebp
loope
rclw
add
cmpsb
adc
mov
cld
rorb
outsb
lds
add
inc
cwtl
in
or
push
pop
pop
and
cmp
and
daa
fdivs
es
repnz
mov
or
mov
and
jle
sbb
loop
mov
aad
adc
pop
cmp
mov
inc
leave
cmp
icebp
stos
sub
inc
jp
cmpsl
stos
insb
fwait
imul
mov
cmp
push
inc
push
lea
cmp
je
popf
aam
adc
mov
dec
in
jns
jl
sbb
scas
cmpsb
mov
and
add
dec
pop
shl
mov
cmp
daa
mov
rcrl
cmpsl
paddsw
movsb
out
mov
cmp
fstpl
dec
lret
fisttpl
fists
mov
fst
leave
mov
mov
stos
mov
jle
test
call
sub
int3
dec
pop
and
adc
jbe
imul
lods
fadds
sti
sbb
mov
lret
adc
ds
cmp
icebp
cltd
adc
test
mov
inc
mov
or
xor
ret
ds
scas
insl
xorl
xor
outsl
pop
imul
lret
add
xchg
pusha
bound
ss
iret
or
push
std
sbb
dec
add
sbb
cmpsl
fbld
stos
mov
fstpl
mov
lods
sbb
jne
mov
pop
pop
or
arpl
mov
add
jl
cltd
scas
decl
sahf
cli
mov
imul
stos
into
dec
and
mov
fwait
sub
xor
sbb
jmp
dec
stc
loop
mov
pop
inc
into
test
int
jo
addr16
loopne
in
repnz
and
jo
jmp
rcll
dec
mov
mov
add
cmp
daa
icebp
cmpsb
dec
mov
cmp
loop
xor
xchg
mov
std
mov
and
in
mov
mov
scas
and
sbb
jmp
inc
cmp
jbe
pop
popf
mov
lods
push
js
out
roll
jecxz
fcoms
test
xlat
in
or
out
sub
mov
xchg
sbb
or
mov
inc
push
and
ss
fcoml
fisubrs
xchg
xor
xor
mov
pop
gs
daa
xor
or
mov
inc
shr
xor
test
jb
xor
mov
sub
pop
ds
inc
add
inc
mov
add
mov
nop
xor
jmp
dec
xchg
mov
sti
into
xlat
xchg
jne
orl
out
loope
cwtl
pop
push
sbbl
pop
dec
ja
mov
and
xchg
mov
sbb
or
cltd
das
outsl
sbb
xor
sahf
inc
push
pop
gs
and
sbb
lds
shr
pop
out
test
push
jecxz
mov
or
xchg
add
cmpsl
jl
xor
jmp
lods
imul
lcall
subb
rolb
push
lock
xor
xor
fists
iret
sub
cmpsl
mov
push
leave
inc
or
push
cmp
aaa
std
push
shll
add
cmp
mov
or
mov
jg
mov
push
rcr
movsl
pushf
pop
outsl
add
out
sarl
or
mov
mov
daa
mov
xchg
jns
loope
dec
mov
jmp
repnz
sti
hlt
dec
aaa
test
mov
inc
insl
lcall
jae
fnstsw
imul
add
nop
xchg
or
shrb
outsl
sarl
fstl
jmp
loope
dec
mov
mov
add
cmp
daa
icebp
cmpsb
dec
mov
cmp
loop
xor
les
inc
dec
cltd
ss
jmp
dec
add
push
xchg
pop
fadd
aad
in
inc
ret
dec
loope
fs
mov
xor
ljmp
repz
repnz
movsb
inc
dec
imul
jge
inc
sub
cs
iret
mov
cmpsb
shlb
jle
mov
mov
adc
xchg
lcall
cld
sbb
subl
out
arpl
ja
js
mov
push
lret
sbb
sub
mov
adc
cmp
ljmp
xchg
mov
xchg
xchg
lcall
iret
xchg
adc
test
or
adc
cmc
xor
push
andl
jg
mov
test
mov
mov
iret
sub
push
xor
mov
addr16
test
cmp
pop
push
or
and
xchg
call
test
nopl
dec
jecxz
out
lahf
mov
xor
inc
xor
sbb
pop
rcrb
sub
lcall
pop
fsubr
cmp
jle
aas
cs
inc
mov
and
loope
test
idivl
mov
daa
cmp
push
mov
push
test
cmp
shlb
imul
jl
mov
loop
or
ret
bound
int
jmp
js
loop
and
testl
sbb
mov
push
push
add
popa
add
pop
add
xor
aad
outsl
sarl
fstl
jmp
loope
dec
mov
mov
add
cmp
daa
icebp
cmpsb
dec
mov
cmp
loop
xor
cmp
daa
mov
je
call
cmp
xchg
leave
mov
sbb
and
sub
leave
adc
mov
int3
insl
je
xchg
sbb
inc
and
mov
popf
xor
aad
mov
and
sub
jmp
add
add
inc
adc
arpl
ja
out
movsb
mov
jb
push
pop
mov
sbb
outsb
insb
in
jbe
mov
int
mov
xor
es
daa
pusha
and
aam
xchg
jg
lcall
std
stos
sub
imul
sub
xacquire
adc
inc
xor
xorb
pop
mov
inc
test
test
dec
mov
icebp
jbe
dec
jl
insb
outsb
jo
sahf
push
ljmp
lret
pop
mov
jecxz
sarl
arpl
insl
dec
inc
lds
mov
add
add
xor
add
aam
enter
jge
pop
pop
xchg
insb
sbb
push
mov
jmp
xchg
aaa
push
arpl
pop
sub
mov
xor
dec
out
and
xchg
adc
fsubp
aaa
xlat
rorl
dec
add
sbb
ds
dec
cmp
cltd
ljmp
cmp
xlat
xchg
sbb
push
push
ret
mov
inc
pop
pop
je
iret
sti
repz
dec
sti
cltd
adc
xchg
mov
daa
filds
sbb
ja
xchg
ss
mov
add
jl
in
imul
pop
iret
sti
repz
jne
pop
dec
mov
in
mov
xlat
test
and
fstpl
dec
dec
hlt
fbstp
mov
dec
in
repnz
in
dec
pextrw
xchg
ljmp
pop
mov
pop
jp
in
mov
fldt
push
adc
out
fcomps
mov
sub
into
bound
nop
jns
fcoms
add
inc
loope
cwtl
cmp
rolb
mov
arpl
shr
adc
call
daa
add
mov
nop
cs
cli
pop
std
inc
sbb
cmp
mov
mov
mov
jno
cmc
cmpsb
adc
fsts
sbb
mov
aaa
out
ja
cmpsb
flds
push
loopne
mov
mov
insl
test
jmp
fs
ja
push
dec
dec
sbb
mov
sbb
and
adc
aam
mov
lret
jnp
dec
fdivs
stos
jbe
pop
or
and
add
ljmp
mov
dec
xchg
loope
enter
imul
mov
lods
xchg
out
jecxz
cwtl
pop
xchg
test
dec
dec
lods
into
rcr
loope
cs
lock
shrl
or
fcmove
inc
jmp
out
sbb
add
lods
adc
sbb
dec
sbb
lcall
mov
loop
mov
cmc
subb
call
test
push
adc
cmp
jge
sub
mov
popa
daa
jns
and
or
jae
xor
hlt
ljmp
out
scas
or
lock
xor
dec
dec
outsb
movsb
or
jl
ds
mov
insl
cmp
ror
lahf
mulb
stos
repz
xchg
lahf
and
icebp
aaa
test
mov
lods
scas
lcall
cmc
lods
pop
add
push
adcl
stc
mov
mov
repz
mov
lcall
fmul
leave
daa
ficomps
inc
sub
sub
and
inc
sbbb
add
test
mov
ds
fwait
cmp
sub
fbld
and
inc
movsb
jecxz
mov
ret
scas
xchg
sahf
or
jo
out
aam
or
dec
outsl
dec
addr16
dec
stc
mov
push
leave
jl
dec
sbbl
fdivrs
mov
sbb
popa
cwtl
cmp
js
pop
sbb
mov
or
imul
stos
stos
jp
jns
mov
sub
and
push
or
add
mov
sub
inc
outsb
ret
out
mov
jp
mov
pop
cmp
insl
loopne
insb
add
flds
imulb
loope
test
dec
les
push
jg
xor
lds
xor
movsb
rcll
leave
stos
jno
mov
jo
push
jmp
jo
push
jg
xor
or
mov
mov
shll
and
pop
push
or
dec
pop
fimull
dec
cwtl
addr16
xchg
clc
shll
and
mov
cli
jmp
dec
loopne
ret
dec
fwait
inc
or
js
fucomi
add
test
roll
dec
sub
jbe
das
cld
push
arpl
loope
outsb
js
shll
and
pop
fs
inc
shr
xor
adc
arpl
cmp
add
in
jns
and
daa
stc
leave
sub
jne
daa
or
adc
add
test
lods
or
jns
fisubrs
inc
aad
push
loop
mov
dec
mov
cmp
sbb
icebp
jecxz
mov
jecxz
ja
add
in
cmpsl
push
or
add
adc
pop
mov
dec
inc
call
popa
scas
jg
fistl
cs
mov
xor
sub
cmp
dec
test
sbb
leave
enter
loopne
ljmp
sbb
sarl
pop
mov
je
ljmp
rorb
jp
cmp
notl
cld
loopne
popa
lea
push
mov
addr16
push
sub
orl
mov
dec
loopne
lds
inc
test
jno
mov
rcrl
ja
cwtl
repz
xor
daa
shll
into
dec
cmp
loop
lods
clc
adc
cld
sti
xorl
int
lds
cltd
pop
xchg
mov
sbb
cmc
sub
xor
jg
enter
mov
adc
lock
mov
adc
in
lods
fistpll
cmpl
push
rcrb
cwtl
or
and
testb
stos
sbb
inc
das
arpl
int
rorb
lret
fwait
cli
in
sub
insl
inc
pop
fisttpl
jp
cld
repz
out
addb
mov
jl
add
out
imul
out
xchg
inc
adc
xchg
xor
sbb
test
lcall
sub
je
mov
xlat
jl
jg
cmpsb
push
out
hlt
bound
or
aad
enter
enter
lret
fyl2x
ss
xor
stc
xchg
push
rol
ds
lds
fistps
mov
into
and
rorl
lret
popa
icebp
adcl
inc
jle
stos
rorb
sbb
sahf
push
into
push
sub
lods
das
loop
or
fldl
jmp
mov
jo
addr16
xor
popa
or
add
outsb
mov
faddl
das
aad
cld
repz
jge
in
cli
cmp
jge
inc
icebp
add
rorb
out
scas
out
sbb
sub
clc
push
repnz
jmp
out
jge
cmpsb
push
inc
insl
std
cmp
cmp
nop
scas
adc
add
int3
pop
popf
aas
testl
mov
into
daa
insb
push
repz
je
fnstsw
push
icebp
xor
mov
or
mov
in
loope
and
add
fimuls
xchg
mov
xchg
lods
adc
dec
adc
out
fiadds
cmpsb
popf
pop
cltd
jns
lods
push
out
push
fstps
icebp
inc
pusha
ja
xchg
mov
sbb
push
pusha
xor
stos
push
aam
pusha
xor
out
xor
test
repnz
mov
jle
fiaddl
or
pop
fcmovu
lcall
jg
mov
cmpsl
mov
cli
and
push
clc
out
and
jl
mov
inc
jmp
cmp
xchg
bound
cltd
mov
push
or
mov
sbb
or
in
inc
cmp
sbb
fisttpl
out
fmuls
flds
pusha
push
sbb
mov
jl
fidivl
cmc
in
add
jae
pop
and
in
xchg
and
xchg
cmp
notl
outsl
jno
push
test
fbld
out
cmp
or
test
in
mov
incl
repnz
add
mov
insb
ret
mov
leave
inc
movsl
xlat
pop
cmp
inc
sbb
dec
out
popf
mov
add
jp
mov
fwait
out
lods
insb
lock
sub
jmp
pop
je
cmp
jb
mov
xlat
xor
mov
lods
sti
sub
push
xor
mov
adc
mov
push
cmp
mov
and
cmp
test
push
aaa
adc
jnp
jae
stos
jg
and
addr16
xchg
cmpsb
imul
push
lahf
negb
xor
sti
sub
push
ljmp
stos
pop
aad
movsb
and
mov
dec
jmp
in
and
ret
aam
repnz
out
pusha
rcll
jecxz
cmp
inc
sbb
shrb
int3
dec
sbb
movsl
jg
sbb
push
int3
ljmp
mov
sbb
push
push
cmp
aas
pop
xchg
sub
mov
push
testb
dec
jno
push
xchg
pop
sub
ds
into
jae
jne
ljmp
mov
pop
fs
or
rorb
xchg
jo
mov
mov
add
out
cmpsl
in
xor
cmpsl
xor
shrl
mov
insb
xor
push
idivb
cmp
out
popa
out
lret
push
ja
call
sbb
push
fnstsw
push
shl
das
push
add
cmpsb
pop
cmp
int
js
shl
mov
jno
sbbb
or
ficompl
mov
clc
mov
mov
ficomps
sahf
and
inc
lock
scas
js
jne
test
adc
fstpl
cmp
and
into
pop
hlt
pushf
repnz
xchg
fidivl
pop
mov
bound
call
das
jae
pusha
mov
or
fidivrl
les
orb
ss
movsb
jmp
js
rol
stos
cmpsl
lcall
cmp
add
aas
addr16
imul
pop
testl
and
push
lret
inc
cmp
jp
pop
add
test
xchg
push
fcomp
movsb
xchg
outsl
lds
or
cs
into
mov
ljmp
sub
mov
adcl
pop
cmp
jne
shl
push
fimull
sbb
bound
push
fadds
mov
or
add
mov
jbe
mov
pop
mov
adc
dec
xchg
mov
cmc
les
mov
ret
mov
and
and
outsb
xor
add
ret
leave
or
jmp
aas
jle
ljmp
inc
cmc
adc
aam
enter
mov
test
pop
mov
dec
shl
pop
lock
add
adc
movaps
sub
sbb
fwait
imulb
mov
pushf
popa
popa
cmp
popf
sub
or
je
xchg
fbstp
movsl
mov
xchg
xchg
push
add
mov
cmpsb
out
cmp
jo
xchg
and
jl
mov
add
xchg
mov
mov
andl
pop
imul
add
xchg
fdivs
xchg
sub
leave
rep
js
mov
sahf
das
xor
xchg
mov
mov
xor
andb
push
cmp
cmp
mov
test
enter
sub
or
mov
cmpsl
incl
imulb
xchg
and
js
pop
stos
nop
lods
fdivr
or
jecxz
jge
inc
call
shll
call
jnp
adc
sbb
xchg
pop
or
adc
xor
aad
out
lock
cmp
pop
jle
sub
aad
call
push
pushl
xchg
in
pop
pop
cltd
jge
adc
xor
aad
mov
jmp
inc
xor
mov
popa
lret
test
sbb
aad
push
repz
loopne
ds
xchg
cltd
loope
jb
push
fidivrl
dec
push
sbb
enter
xchg
jo
dec
repz
inc
cmc
sub
lods
lret
xchg
fsubs
js
mov
or
fsubrp
add
into
xchg
sbb
test
pop
call
jmp
inc
pop
xchg
leave
xor
daa
lods
test
xor
aam
unpcklps
aaa
push
mov
pop
inc
es
inc
pop
jge
es
in
cmp
fisttps
sti
shrb
mov
sarl
call
arpl
push
dec
pextrw
sub
xor
inc
fdivl
sub
jmp
pushf
push
mov
in
hlt
dec
loope
pop
into
mov
mov
dec
testb
out
popf
movsl
mov
cmp
lahf
and
and
push
add
cmp
pop
js
das
inc
les
fildl
fnsave
outsl
test
in
loop
pop
lods
add
sbb
int3
sbb
arpl
jecxz
cmc
mov
sbb
xor
int3
jne
xor
cmp
pop
mov
sti
stos
and
mov
in
mov
dec
cmp
mov
push
sub
lcall
jne
cwtl
xor
nop
dec
xor
ljmp
fmull
repz
data16
jo
test
cmp
cld
addl
adc
mov
daa
inc
fwait
fs
xor
mov
movsb
or
inc
push
adc
push
enter
fwait
xchg
jge
xchg
test
or
lock
sbbl
xchg
ljmp
pop
shlb
dec
outsl
ljmp
mov
das
jno
leave
ja
fs
out
das
xor
push
pop
add
push
mov
rcll
sub
mov
icebp
xchg
lahf
fiaddl
or
mov
cltd
cmp
fldl
push
es
and
jno
aad
lock
and
stc
mov
insb
xchg
push
bound
movsb
jne
pop
cs
inc
and
sbb
mov
inc
or
add
ljmp
jne
test
add
adc
insl
adc
fsubl
cwtl
dec
scas
addr16
insl
iret
je
mov
sarl
mov
xchg
cs
sbb
movlps
jecxz
pop
insb
imul
scas
sbb
les
fld
xchg
pop
and
push
stc
or
sub
add
adc
cltd
arpl
mov
test
movsb
popf
jmp
mov
mov
in
cmc
ret
cmp
fdivrl
ja
dec
cmp
rcll
stos
inc
repz
in
frstor
or
mov
outsl
jnp
push
and
andl
sbb
add
push
xchg
xor
jmp
and
xchg
adc
jae
sarb
adc
or
xchg
dec
cwtl
dec
arpl
cld
mov
fs
out
ret
es
lea
pop
bound
mov
jg
rclb
loop
imul
xlat
jbe
lea
mov
enter
fbstp
push
dec
push
stc
scas
mov
sarb
mov
ss
pushf
pop
repnz
cmp
lods
into
dec
mov
cwtl
cli
adc
or
push
aad
shr
daa
sbb
sbb
adc
in
inc
add
inc
stc
sbb
and
inc
and
push
mov
jl
movsb
stc
into
ss
jle
or
dec
std
inc
stc
cld
add
xor
lods
scas
scas
cmp
nop
enter
in
jmp
mov
popf
loop
mov
xchg
imul
fcom
xor
ljmp
clc
jecxz
pop
bound
icebp
lret
inc
jp
filds
scas
or
inc
inc
mov
rcl
cmp
cmp
das
sarl
push
jl
in
xor
jge
mov
or
lods
or
jmp
stos
repz
inc
fcmovnbe
mov
add
mov
pop
pop
push
pop
jecxz
mov
lods
mov
pop
lds
pop
add
sahf
cmc
push
mov
jne
jae
mov
dec
sbb
mov
jle
mov
in
cld
xlat
jo
jns
std
idivl
jge
popf
popf
mull
add
aad
add
jg
or
test
mov
jb
out
inc
js
gs
cmp
arpl
or
sub
pop
hlt
stos
pushf
fadd
dec
cli
cli
push
inc
in
aaa
cmp
jp
call
pop
pushf
mov
hlt
pop
in
add
icebp
jbe
ja
sub
mov
cmp
mov
or
and
sub
das
adc
mov
and
dec
pop
xchg
add
adc
push
sub
cs
pop
fildll
sub
dec
mov
push
pop
mov
mov
xchg
daa
dec
aaa
push
mov
or
hlt
mov
hlt
dec
and
inc
mov
xchg
nop
out
js
sub
add
jp
xchg
mov
pop
arpl
out
inc
xchg
fldenv
add
push
pushf
xchg
jmp
fisubrl
cli
aas
sbb
pop
mov
mov
cld
stc
lds
nop
adc
cltd
mov
jp
fnstcw
test
lret
cltd
mov
sbb
cmpb
mov
in
and
sub
movsb
lea
js
ret
mov
les
push
sub
shl
pop
or
jle
xchg
fwait
dec
insb
or
lret
sbb
jnp
aas
stos
jecxz
clc
pop
mov
test
cmp
push
pusha
cmpsb
or
dec
mov
mov
lds
lret
sahf
mov
pop
and
arpl
rolb
sub
fs
dec
jecxz
fcom
loop
fstl
mov
fs
sbb
out
adc
je
nop
cwtl
and
sub
cmp
xchg
test
pop
lret
rcll
pop
aam
mov
loop
push
cld
inc
fisttpl
addr16
push
rcrl
pop
mov
cmp
rcl
sub
push
or
andl
outsb
sarl
and
jg
mov
js
ljmp
sbb
pop
daa
dec
nop
xchg
test
testb
negl
cs
stc
pop
sbb
std
add
mov
shl
xor
or
sbb
ret
xchg
test
xchg
lret
adc
ret
icebp
mov
push
loop
ret
cmc
xchg
lock
jnp
popf
testb
shll
mov
es
pop
add
inc
fistpll
or
aas
das
cmp
inc
sbb
sar
sbb
fldenv
cmp
insb
pop
arpl
push
mov
jne
call
sbb
jmp
xor
lahf
dec
cmc
push
fwait
sbb
repz
aas
xor
add
fldcw
das
mov
and
incl
lods
test
sub
out
pop
mov
sbb
mov
mov
mov
push
dec
jle
jl
mov
fisttps
mov
add
movl
ret
js
insb
pop
insb
fisubrl
outsl
aaa
popf
xchg
xchg
mov
out
xchg
xchg
sar
xor
ficoml
mov
and
jae
std
jmp
cmc
and
add
xchg
add
mov
je
xchg
sarb
mov
call
ljmp
sub
ljmp
jb
mov
lds
mov
movsb
stc
mov
lret
xchg
decb
lods
adc
mov
int3
sub
jno
jb
fdivrs
mov
jns
xchg
or
mov
stc
sbb
arpl
mov
xchg
or
push
jecxz
add
ljmp
inc
push
mov
push
lahf
das
pop
iret
cmpl
jns
in
xor
jno
pop
xor
inc
mov
mov
jno
mov
pop
fcmovnb
sahf
jnp
arpl
ja
push
jl
cld
push
ljmp
mov
adc
fcompl
jle
cli
add
pop
cmpsb
dec
repnz
sar
xlat
imul
pop
sbb
nop
fucomp
push
inc
or
mov
xchg
or
ss
mov
leave
icebp
jno
fisubrl
pop
arpl
dec
jb
test
repnz
add
adc
and
shrb
push
xchg
mov
pop
repnz
push
xchg
out
pop
pop
xchg
addr16
xor
dec
push
inc
gs
div
xchg
cmp
and
lods
or
lret
sti
clc
xor
rcl
push
fists
aaa
mov
sub
jp
pop
push
das
add
or
mov
mov
rcrl
mov
pop
icebp
sti
std
pop
jmp
push
jbe
inc
pop
enter
shlb
jl
pop
shl
add
adc
and
mov
hlt
into
repnz
add
xor
xchg
pop
pushf
repz
int
mov
push
and
jmp
sbbl
shlb
pop
int
mov
int3
loopne
mov
lds
lea
mov
adc
movsb
push
lahf
pop
stc
jo
repnz
call
xchg
dec
sub
sahf
sub
js
mov
fistps
outsl
outsb
nop
ss
outsb
mov
push
fiadds
mov
shlb
inc
mov
lods
or
xchg
xchg
add
test
testb
or
mov
test
shrl
lret
iret
and
sbb
mov
cmpsl
push
mov
test
aaa
and
mov
xchg
inc
jbe
sub
xchg
mov
ja
mov
sbb
or
int3
jae
int3
push
or
popf
mov
insl
lds
shr
call
jno
subl
dec
in
mov
into
cmp
xlat
push
and
adc
cmp
andl
test
scas
xchg
add
inc
ljmp
cmp
sbb
pop
cmp
ss
xchg
sbb
out
ljmp
ljmp
push
call
cld
lds
movsb
xlat
jae
fistl
mov
ja
cmp
mov
dec
jge
rolb
orb
push
dec
sbb
es
js
push
mov
lahf
cli
xchg
dec
xor
movsl
and
ljmp
sub
and
cwtl
cs
out
cmp
notb
divl
in
popf
clc
cmp
jecxz
or
movsb
outsb
dec
and
repnz
mov
jbe
push
test
daa
sub
stos
mov
dec
and
addb
xor
rolb
and
decb
aas
lahf
jo
fistl
xor
jns
cs
data16
xchg
or
stos
hlt
inc
xchg
dec
push
rcl
adc
hlt
cltd
cmpl
test
aam
lcall
rcrl
sbb
out
cmpl
jecxz
jecxz
push
and
pop
xor
add
mov
inc
ss
jne
stos
clc
lret
adc
mov
loop
push
cmpsb
scas
in
insb
int3
in
adc
cmpsb
inc
xchg
fs
rcrl
push
clc
loopne
xchg
icebp
ja
ljmp
sub
out
sub
std
xor
cmp
cli
adc
and
mov
adc
aas
sub
lea
das
mov
push
mov
int3
pushf
out
and
cmp
push
mov
into
lods
fsubs
sub
scas
popf
mov
mov
fisubrs
mov
xchg
sbb
adc
jecxz
int3
fmul
ds
fsubrl
xchg
mov
nop
sub
inc
ljmp
ljmp
jae
fcoml
lret
pop
loop
dec
inc
test
and
lds
fwait
lock
loopne
xlat
aad
jno
mov
out
jl
xor
sbb
mov
sub
jno
xchg
addr16
jecxz
mov
sahf
lds
xchg
adc
xor
scas
stc
scas
mov
je
jno
leave
mov
pop
loopne
outsb
in
es
jge
loop
add
stos
and
xor
pop
mov
cli
in
cli
inc
les
cmp
loopne
popf
imul
sub
es
fadds
sbb
dec
inc
sub
lea
loop
mov
mov
adc
jne
inc
sahf
fsubl
in
push
gs
sub
xchg
fbstp
dec
clc
insb
stc
add
pop
aas
dec
cmp
pop
mov
xor
stos
lcall
jo
fwait
pop
cmp
ret
inc
ss
repnz
jnp
sub
mov
inc
pop
dec
cli
lret
sub
mull
lret
adcl
xor
pop
fldt
icebp
jns
and
sub
cmc
add
xor
dec
clc
icebp
dec
push
jge
fisttpl
jae
insl
xor
push
shlb
out
sub
clc
add
add
outsl
pop
outsl
mov
movsb
jecxz
scas
lods
cmc
jnp
sbb
int3
and
stos
jae
push
jl
pop
push
jge
sub
pop
adc
icebp
xchg
lds
inc
mov
pop
cmpl
call
push
in
add
les
je
xchg
mov
push
jle
adc
adc
add
out
mov
pop
cs
sub
jle
dec
into
cmp
mov
adc
inc
mov
jae
pop
and
lds
lods
jmp
mov
mov
insb
cmpsb
into
push
std
and
mov
fmul
push
push
mov
adc
data16
mov
cs
mov
pop
fwait
or
add
jmp
orb
stos
call
adc
pop
push
xor
or
bound
push
imul
sbb
push
ja
fcom
and
dec
pop
inc
mov
orl
les
jne
jmp
call
sbb
stos
out
lret
push
push
call
cs
pop
add
clc
addr16
rcrb
out
jns
fcomp
and
or
and
orl
daa
imul
nop
dec
ficoms
mov
dec
pushf
add
xchg
jne
jae
leave
std
sub
xor
jecxz
inc
scas
filds
push
sbb
sbb
scas
xchg
and
adc
sub
cmpsb
push
mov
fidivrs
cmpsl
aad
shr
pop
inc
inc
pop
icebp
enter
mov
push
push
inc
xchg
lss
fadd
imul
out
mov
fisttpl
mov
dec
test
mov
adc
sbb
pop
jbe
pop
push
jle
push
cmc
ss
bound
xchg
daa
imul
pop
dec
push
pop
push
push
out
and
sub
jg
mov
jne
outsb
jne
sbb
lods
add
daa
push
das
in
jne
in
int3
jle
jl
pop
mov
and
fwait
stos
arpl
fs
je
repnz
or
lods
shll
mov
or
cmp
fistl
or
xchg
test
inc
loop
clc
pop
dec
push
pop
idivb
ja
mov
xchg
into
push
push
bound
push
jns
sbb
cwtl
cmp
loop
leave
cmc
icebp
mov
sarl
ja
xor
push
dec
mov
cld
mov
push
cld
jb
out
jbe
sub
dec
and
lahf
stos
xchg
sbb
xchg
rcrb
pop
es
je
rcl
outsl
popf
mov
repz
jae
shr
repz
xchg
mov
adc
repz
jnp
out
jnp
mov
cmp
inc
adc
outsl
cmp
pop
jbe
jle
fistl
bound
insb
insl
xchg
inc
shl
cmp
jge
loopne
mov
add
ds
cmp
jnp
dec
aaa
xchg
cs
movsl
aas
xchg
cmp
push
push
iret
and
pop
add
arpl
notl
adc
inc
subl
mov
or
or
pushf
out
sbb
push
ja
loop
stos
sbb
cmp
enter
ret
icebp
mov
xchg
out
inc
jmp
xor
outsl
mov
sbb
add
sti
pushf
mov
add
jmp
jmp
pop
enter
std
cmpsb
fcomps
ss
cmp
shll
bound
insb
insb
popa
mov
pusha
fmuls
xor
ja
mov
dec
das
cwtl
inc
push
fsubrl
cs
jl
and
icebp
jp
mov
ja
test
xchg
jb
or
xor
fistpl
lock
repnz
aad
sub
int
mov
mov
jbe
xor
add
cmp
dec
nop
out
pushf
or
test
pop
imul
sti
leave
lds
add
sbb
cs
cmc
rcl
cmpl
inc
sti
lcall
addr16
in
icebp
bound
sbb
nop
cmpsl
sub
jnp
sbb
out
popf
push
sbb
cli
or
jo
ret
sub
sub
loop
pop
xor
cmpsb
fs
ljmp
push
and
sti
inc
xor
call
test
and
ret
fwait
scas
push
pop
lock
popa
xor
mov
push
xor
inc
das
and
aam
lods
lret
fdivs
and
in
mov
jge
jns
dec
cmc
bound
inc
pop
test
test
jecxz
fsubr
inc
into
push
in
addr16
or
in
movsl
orb
stc
in
jecxz
mov
loope
cmp
aam
push
pop
dec
sbbb
lahf
js
and
cmpsb
xchg
cmp
xor
xchg
dec
scas
repz
orl
idivb
je,pn
cmpb
ret
popf
testl
rorb
xor
pushl
mov
cmp
jns
mov
add
out
xchg
cmp
pop
dec
inc
mov
lds
push
out
push
ljmp
ficompl
push
rcrl
mov
push
popf
fildll
mov
add
movsl
add
aad
adc
adc
mov
mov
daa
mov
mov
lret
cmp
rolb
int
push
jmp
popa
pop
enter
add
mov
pop
popa
adcl
lds
notl
lock
arpl
loopne
or
push
lret
movsb
and
in
test
jmp
xchg
mov
bnd
adcl
das
mov
lods
add
lret
adc
jo
sub
fdivs
pop
mov
in
xchg
cltd
sub
in
loopne
jl
outsb
jne
sub
mov
loope
and
xchg
jb
mov
les
mov
xchg
fwait
je
addb
in
ja
in
xor
lret
rolb
xchg
sahf
dec
and
ds
lcall
jo
addl
add
inc
loopne
lock
aas
loope
sbb
push
aad
stos
je
jg
icebp
enter
inc
push
cltd
sub
ds
dec
inc
jge
and
je
mov
and
test
hlt
scas
in
xchg
lods
xlat
cmp
fidivrs
inc
mov
push
int3
es
push
xlat
push
xor
popf
in
mov
scas
stc
data16
pop
mov
add
push
cmpsb
iret
gs
stos
fists
add
mov
movsb
test
in
fldt
lods
push
inc
push
faddl
fadds
inc
std
dec
xchg
int
dec
or
dec
dec
push
xor
xchg
stos
stos
int
rcl
sbb
sub
mov
jle
aaa
xchg
pop
jnp
lds
cmpsl
rcr
mov
insl
pop
int
jle
pop
lahf
out
daa
inc
jle
fdivl
je
out
lea
mov
add
adc
loop
bound
dec
insl
mov
scas
ffree
and
pop
jne
push
es
sub
aas
sbb
mov
sub
rol
jecxz
iret
sub
xor
sbb
xor
and
xchg
jmp
rolb
out
dec
dec
push
mov
add
mov
sbb
pushf
sbb
fisubs
mov
xchg
mov
aas
sub
lea
inc
jl
sbb
hlt
xor
cmpsl
mov
xchg
pusha
xchg
sbb
mov
fcoml
fisttps
bound
stc
mov
sbb
adc
pop
dec
mov
jae
pop
mov
xchg
mull
cli
xchg
aaa
notb
ret
popa
mov
mov
dec
loopne
cmpsb
dec
roll
sbb
cmc
push
jnp
test
push
and
cmpsb
xlat
and
pop
fwait
aaa
mov
jmp
lcall
popa
popf
push
mov
push
lahf
mov
dec
cltd
loopne
shlb
ror
mov
jne
inc
loope
divl
xor
jo
xchg
inc
cmpl
mov
and
mov
loopne
push
stos
push
pop
or
fcomps
mov
scas
jne
insl
adc
ror
xchg
rorb
call
adc
push
xor
jbe
shrl
sub
mov
lcall
xchg
arpl
jg
icebp
mov
mov
mov
aad
cmp
cli
shrb
add
cs
xor
es
nop
pop
insl
fcomi
adc
arpl
push
mov
sub
and
xchg
fisubl
cmp
loope
imul
cmc
cmpl
test
inc
scas
fwait
or
pop
xchg
dec
bound
mov
popa
imulb
push
dec
cmpsb
mov
inc
jb
pop
xchg
add
out
mov
movsb
add
mov
fsubrs
inc
lret
imul
cmp
fs
out
ret
mov
sbb
dec
pop
cmpl
mov
xchg
pop
lods
mov
and
push
stos
je
mov
test
cmp
rcl
jge
add
sahf
test
movsl
rol
cwtl
iret
dec
mov
addb
xor
rcrb
or
mov
es
repnz
test
ret
adc
jne
cmp
inc
fldenv
into
leave
sub
adc
or
xchg
push
js
xor
adc
push
xchg
mov
push
dec
adc
fdiv
out
sub
aas
das
frstor
mov
pop
jne
in
movsl
adc
faddl
inc
imul
adc
xlat
cmpsl
add
sbb
aaa
cmp
mov
push
push
mov
lcall
push
pop
outsl
pop
ret
xchg
aas
cli
repz
push
cmp
mov
pop
mov
lahf
shl
aaa
xlat
lret
insl
enter
lea
inc
repnz
gs
jnp
and
loop
addl
mov
cs
or
loope
aaa
fsubrl
addl
lock
and
movsl
les
hlt
mov
xchg
mov
jo
jo
xor
lock
mov
pop
dec
push
dec
popf
int3
sbb
cmp
and
in
xchg
mov
pop
xchg
imul
adc
addl
pop
sub
fbstp
mov
jge
ljmp
iret
int
imul
test
ficomps
sub
loope
jnp
mov
add
xchg
and
cmp
and
sbb
cmp
mov
stos
pop
and
rcr
pushl
or
stos
stos
in
add
sub
push
popf
je
shl
jmp
scas
add
sti
ljmp
add
cmc
daa
arpl
scas
shll
aaa
mov
repnz
pop
lret
es
fbld
cmp
nop
jb
jecxz
aas
and
xchg
int3
push
dec
dec
mov
test
popf
pop
mov
mov
aad
and
dec
addr16
cmpsb
pop
push
jnp
cmc
call
rol
inc
decb
jecxz
mov
push
push
xor
insl
sbb
or
cltd
shl
xchg
lock
jo
imul
sbb
aad
xorb
jns
mov
lret
xchg
sbb
pop
add
jecxz
stos
mov
cwtl
insl
fwait
push
push
push
mov
inc
insb
cmpsl
outsb
jnp
push
push
xlat
adc
nop
cmp
fisttpl
aam
inc
add
pop
sbb
int
loop
sbb
xor
mov
fdivs
mov
xchg
cli
inc
and
jmp
scas
add
repz
add
fidivrl
pop
cmp
cmp
push
xchg
in
jl
cli
cwtl
pusha
inc
xor
daa
push
lcall
mov
loope
and
jecxz
loope
pop
mov
jne
icebp
int
cwtl
fisttps
sbb
add
pop
sub
xor
xchg
nop
stos
inc
pop
mov
loopne
add
clc
sub
jns
arpl
test
sub
mov
push
mov
lret
xchg
or
dec
and
xlat
sbb
or
aam
jbe
scas
gs
test
gs
push
xchg
inc
aad
pop
xchg
fwait
sbb
inc
xchg
sahf
imul
call
popa
fs
adc
pop
enter
out
xchg
scas
cmp
mov
jbe
cli
push
dec
outsb
dec
call
sbb
loope
out
fistpll
stos
inc
arpl
cmp
inc
push
pushf
pop
dec
dec
sub
repnz
jb
add
jb
dec
aaa
or
sub
psrlw
aam
and
cmp
adc
addl
fisubrl
hlt
and
lret
push
mov
pop
mov
sub
xor
sbb
adc
add
mov
push
and
dec
dec
clc
aam
push
add
hlt
jp
cs
dec
pop
filds
mov
data16
inc
test
and
cmp
popa
shl
sbb
repnz
mov
movsl
cmp
cltd
repz
pop
in
pop
rcll
in
and
lods
popf
daa
dec
in
jecxz
jne
pop
inc
mov
mov
daa
jns
xchg
dec
int3
inc
push
pop
mov
add
lret
sbb
mov
stos
xorl
jl
std
in
mov
pushf
push
aam
xchg
andb
mov
xor
xchg
pop
xlat
dec
outsb
mov
mov
pop
mov
iret
inc
test
dec
nop
stos
or
jle
jecxz
push
cli
sub
jae
push
lahf
mov
clc
orb
dec
cmp
mov
jl
add
sub
push
jne
movsl
jne
mov
mov
aas
in
das
inc
cmp
aas
xor
jae
jne
mov
inc
dec
mov
xchg
or
sbb
and
sub
into
add
sbb
cs
inc
popa
fidivrl
jns
xchg
and
bound
iret
shll
and
or
hlt
inc
aas
adc
push
bound
icebp
mov
js
xchg
xchg
insb
pop
jae
repz
jmp
sbb
inc
repnz
lea
cmp
pop
mov
subl
repz
in
mov
outsb
sub
mov
iret
add
cwtl
cmovbe
lds
lret
mov
inc
ljmp
adc
mov
jnp
bound
cltd
push
lahf
and
pusha
andl
dec
xchg
add
cmp
mov
mov
cmpsb
inc
lcall
insl
lcall
movsl
pop
pop
jecxz
mov
xlat
test
dec
inc
push
mov
gs
jmp
cmp
cmp
sub
pop
mov
arpl
popa
int
xchg
idivb
jmp
subl
sbb
das
jbe
pop
adc
dec
cmp
or
ljmp
es
in
lock
mov
add
pop
aam
cvtps2pd
mov
xlat
int3
fisttpl
call
sbb
pushf
lret
mov
add
lods
arpl
xor
push
pop
pop
lcall
push
ret
bnd
push
test
sbbb
and
xor
xchg
xchg
aas
cwtl
add
jmp
push
jg
std
lea
fwait
pushf
inc
add
cwtl
dec
dec
mov
stos
sahf
cltd
dec
mov
ja
outsb
sbb
aam
push
or
dec
lea
sbb
repz
loopne
insb
adc
adc
shrb
pusha
xor
shll
in
hlt
lret
into
pop
jbe,pn
fucomi
cmp
inc
xorl
out
scas
in
mov
adc
mov
rol
addr16
xor
aaa
bt
out
xchg
xchg
stos
orl
xlat
and
in
or
fimuls
push
shrb
cmp
xlat
fcompl
cmp
mov
sbb
das
mov
bound
adc
ret
xor
adc
ret
ljmp
in
test
adc
mov
pop
imul
sbb
or
test
rclb
xor
je
dec
xchg
lods
fstps
mov
and
sarl
or
popa
enter
int3
fwait
mov
push
test
and
pop
push
lock
clc
push
sbb
dec
jne
ret
mov
cmc
loopne
push
in
outsb
test
add
iret
leave
add
mov
push
jle
cmp
mov
das
mov
sub
add
mov
pusha
test
rolb
adc
aad
mov
sahf
aas
inc
repz
insl
bound
ficoms
mov
add
push
fxch
fs
addr16
negb
mov
shrl
xchg
lcall
nop
xor
loop
add
push
adc
xchg
jbe
fldenv
es
lds
daa
cmpsb
add
mov
mov
jae
pop
jb
lret
fadd
fsubl
push
sbb
test
xchg
and
dec
pop
dec
sti
sti
into
adc
mov
sbb
mov
xlat
ds
addl
lcall
add
xchg
repnz
popa
fwait
push
cltd
sti
cmp
push
xor
jnp
rcrb
jp
cmp
data16
repz
in
loopne
cmc
pop
jns
mov
loope
dec
xlat
mov
rcrl
in
repnz
addr16
mov
inc
les
and
add
sub
int
leave
hlt
dec
pop
mov
decl
adc
sarb
js
inc
scas
sbb
out
jb
mov
testb
loopne
push
push
lods
jne
in
testl
leave
out
xor
cmc
das
lods
ficompl
push
push
pop
shl
push
rorl
mov
mov
test
enter
std
into
imulb
jge
push
je
and
adc
push
or
pop
jo
lea
or
adc
hlt
stc
clc
pusha
mov
clc
dec
leave
insb
add
jle
push
fwait
push
loopne
mov
jo
mov
add
xchg
in
mov
ret
pop
into
or
orl
dec
aad
push
icebp
add
bound
xor
xchg
imul
aaa
or
lret
ret
cmpsb
cmp
pop
f2xm1
or
popf
xchg
jl
movsl
xor
cwtl
push
or
mov
cltd
sub
pop
dec
lret
mov
push
or
push
addr16
int3
and
das
ss
in
add
push
fs
out
or
scas
out
arpl
in
lds
inc
add
bound
adc
ljmp
jecxz
pushf
hlt
mov
cltd
outsb
imul
in
scas
out
arpl
in
sub
shlb
lds
push
shlb
dec
je
popf
cli
mov
mov
jae
sub
mov
pop
jns
es
pmullw
cmpsl
incb
arpl
sbb
mov
enter
pop
aaa
cs
mov
jb
pop
popa
data16
push
dec
mov
and
jbe
das
out
mov
fildll
push
or
repz
aas
loop
and
or
cli
inc
movsl
loop
in
xchg
in
mov
popa
bound
jmp
jecxz
xchg
pop
fsubl
sub
int
xchg
mov
ficoms
dec
movsl
in
or
or
mov
mov
pop
gs
rcpps
push
push
les
imul
cmpb
or
jo
fisubrs
sbbb
outsb
mov
mov
mov
fistpl
mov
add
leave
or
jo
lret
push
xchg
test
pop
xlat
jns
add
insb
cmp
adc
sub
das
adc
fwait
mov
adc
jnp
imul
cmc
mov
jns
cmp
dec
sahf
addr16
out
fadd
adc
inc
lcall
add
pop
or
fmulp
shrl
xchg
add
scas
mov
jmp
lods
jecxz
in
addr16
and
add
jnp
xor
xchg
stos
add
insb
lods
pop
mov
add
cmpsb
data16
mov
out
test
fwait
ret
out
inc
mov
add
mov
jnp
add
sti
cs
imul
stos
inc
ret
repnz
in
xchg
inc
pop
lods
mov
adc
adc
mov
xlat
insb
mov
icebp
push
mov
leave
pop
inc
xchg
cld
mov
test
psllw
mov
adc
test
dec
xchg
sbb
in
push
jo
sub
lock
and
pop
sub
cmp
mov
out
sub
imul
add
fmulp
or
out
mov
and
dec
push
adc
ss
clc
fnstsw
bound
pop
repnz
xchg
lahf
scas
loop
push
ja
ds
cmp
pop
mov
ljmp
pop
pavgb
mov
lock
xchg
xor
cli
push
aam
adc
hlt
repnz
inc
cmpb
in
loop
ds
or
jp
stc
sarb
xor
lahf
cltd
jg
mov
in
sbb
push
pop
mov
sub
dec
jge
jbe
ret
repz
xchg
loopne
cmp
jmp
pop
dec
cmpsl
mov
mov
ja
cmp
leave
jno
inc
pop
sbb
add
xchg
insl
pop
divw
lods
outsl
scas
push
fisttpl
in
mov
test
add
add
jecxz
enter
cs
mov
imul
xchg
call
add
push
insb
xchg
imul
insl
loope
test
dec
sti
fs
lahf
into
cmp
das
mov
pop
push
idivb
gs
mov
out
fucomip
or
pop
ret
fwait
jo
xchg
out
test
jno
std
cmp
stos
pop
mov
idiv
mov
cld
test
imul
loope
mov
mov
xor
int
ljmp
repnz
fs
mov
mov
mov
in
out
mov
xor
sbb
mov
daa
mov
dec
xlat
mov
sahf
inc
mov
in
pusha
sbb
shrl
xchg
outsl
mov
cmc
mov
mov
sti
testb
add
xor
and
lahf
decb
cmp
add
mov
dec
pop
sub
fdivs
test
xchg
lods
xchg
ret
out
cltd
dec
inc
push
je
icebp
push
outsl
adc
insb
mov
and
mov
dec
jno
adc
jge
int3
inc
iret
rorl
dec
xchg
mov
mov
repz
iret
xchg
jnp
or
clc
pop
adc
lahf
shrl
cmpsb
push
fnstcw
push
movsl
movsb
into
add
mov
mov
sbbb
imul
hlt
push
test
sar
adc
and
out
sahf
mov
push
push
cli
cmp
lock
add
imul
adc
popa
in
pop
push
aam
sub
push
dec
pushf
pop
cmpsl
add
push
aam
cmp
and
mov
dec
pushf
rclb
lods
shrb
hlt
inc
aam
sbb
sbb
in
out
push
cmp
or
out
inc
mov
fisttps
cmp
mov
sub
out
cltd
add
sbb
fidivrl
pop
push
sub
ljmp
and
out
cmp
cmp
ljmp
jb
mov
xchg
mov
data16
shlb
push
cmp
push
cmpsb
cmpsb
sub
scas
push
or
dec
arpl
clc
dec
xor
inc
ret
cmp
mov
dec
pop
fwait
jnp
pop
adc
mov
shr
mov
mov
push
lock
pop
cmp
out
testb
dec
imul
mov
lods
mov
rolb
cmp
dec
cmp
push
or
push
jno
out
call
pop
ret
push
sub
movsl
dec
stos
imul
push
fsubrs
cmp
testb
or
sbb
decb
ret
outsb
pop
jns
pop
loopne
add
add
lods
mov
pop
or
pusha
mov
cmpsb
dec
movsl
mov
popa
cld
xor
mov
pusha
repnz
pop
pop
mov
inc
test
sbb
sbb
sub
cmpsb
cltd
incb
inc
mov
sub
loopne
pop
cs
xchg
repnz
sbb
xor
push
ja
in
cmp
xor
jle
sbb
movsl
or
add
pop
inc
lods
fwait
sub
fadd
dec
adc
and
push
jge
jle
pop
push
nop
adc
add
or
jnp
insb
jae
dec
fisttpll
xchg
pop
test
xchg
arpl
xor
add
cmpsb
cmp
xchg
jno
mov
add
rorb
mov
je
sahf
in
adc
int
jns
out
dec
or
push
bound
scas
add
loop
inc
rorl
xchg
sub
lock
jp
dec
sub
dec
ficompl
rorb
inc
sbb
mov
psubsw
lock
repnz
rcll
jne
push
movsb
mov
testb
sbb
xor
mov
cmp
loopne
inc
dec
das
sub
orl
mov
repnz
push
pop
clc
mov
loopne
jg
mov
mov
mov
xor
jecxz
rolb
dec
mov
loop
outsl
adc
sbb
sahf
enter
ss
jmp
xchg
add
aaa
push
mov
out
add
xchg
sbb
cmp
xchg
insl
enter
bnd
daa
addr16
mov
jl
mov
mov
jmp
std
inc
lea
push
popf
mov
adc
or
pop
out
sahf
daa
cmp
jo
and
push
pushf
push
mov
sub
loope
sub
and
lea
insb
and
test
or
or
adc
jp
sbb
and
cs
movswl
jmp
inc
push
fists
xor
fimuls
sub
adc
pop
dec
fldenv
aad
fbstp
movsl
sub
rolb
cltd
loop
es
fbld
fs
shl
lds
ret
mov
shlb
cmp
insl
leave
ret
bnd
jo
int3
or
jbe
int3
aad
pop
test
xchg
insb
leave
adc
cli
lcall
xorb
push
cli
test
pop
fildll
add
mov
mov
loop
mov
xchg
ja
rolb
push
push
push
popf
dec
push
push
pop
shlb
jl
bound
adc
cmc
lret
pushw
test
mov
lods
xorl
push
inc
adc
lahf
mov
dec
adc
fwait
aad
outsl
inc
adc
and
adc
pop
inc
mov
pop
arpl
int
rclb
lea
mov
arpl
xor
or
sub
mov
mov
pop
dec
outsb
jge
mov
xor
mov
xor
subb
call
sub
fld
call
mov
loopne
xchg
aas
js
push
adc
in
int3
dec
mov
xlat
fs
in
xor
add
sbb
cmp
or
jne
cmp
xchg
sub
mov
push
jle
sbb
loope
mov
std
and
sub
adc
and
pop
cmpsb
lret
dec
imul
add
push
mov
bswap
xchg
enter
je
xlat
insb
mov
inc
xchg
push
ficomps
push
inc
push
mov
mov
jb
test
or
xchg
ret
repz
cmp
fcomps
lods
jmp
test
lret
xchg
iret
fldlg2
mov
inc
or
aad
lods
jp
mov
scas
scas
es
popf
xchg
dec
sahf
flds
add
push
ficoms
test
add
aas
push
and
out
push
dec
stc
stc
pushl
inc
and
mov
ret
pop
jnp
dec
jmp
iret
cmp
test
cli
sub
jno
xor
test
cs
sub
jo
mov
jns
dec
mov
xchg
repz
add
clc
xlat
push
mov
pop
neg
dec
std
ja
push
out
or
sub
adcb
or
dec
jl
xchg
es
rolb
cli
aaa
inc
mov
jbe
shlb
lret
ss
push
dec
push
and
and
sti
stos
jmp
mov
pop
jmp
mov
inc
lret
dec
jge
adc
push
insl
iret
mov
jg
sti
cmp
adc
add
rolb
test
cmp
std
jmp
test
daa
outsl
mov
fstpt
in
fnstenv
pop
push
pop
push
mov
pop
ud0
lea
fmulp
out
iret
test
push
jae
stos
cltd
and
mov
mov
pop
out
pusha
sub
xlat
shll
pushf
std
sbb
mov
jg
loop
imul
mov
outsb
mov
sbb
mov
pop
adc
xchg
mov
adc
rorl
jne
imul
in
outsb
fistpl
jge
and
fdivs
mov
pop
std
lock
and
jle
pushl
jl
xor
scas
mov
cmp
push
inc
outsl
push
int3
or
divb
mov
ljmp
adc
mov
cmp
rcll
subb
rcll
aam
ret
fs
add
adc
insl
mov
lret
and
in
lret
out
adc
in
loope
jge
xor
mov
mov
pop
imul
cmpsb
push
call
test
sbb
cld
inc
jp
add
xor
add
mov
arpl
popa
arpl
in
into
fwait
pop
stos
cli
xor
andb
jo
in
and
sbb
iret
stc
mov
dec
sbb
in
fwait
add
jne
test
fadds
cmp
or
add
fpatan
jg
jp
adc
popf
xor
mov
jmp
dec
mov
cmp
sbb
in
xchg
les
imul
pop
push
pop
sbb
sbb
rol
lahf
daa
in
in
or
sub
push
push
add
adc
cmc
repz
pop
aas
xchg
shll
fsubrl
mov
mov
sbb
nop
cbtw
in
inc
adc
fldl
adc
push
push
lea
imul
scas
jbe
nop
push
lret
in
mov
xlat
push
jp
mov
xchg
bound
jae
movsb
imul
jg
dec
ds
xchg
push
loope
xorb
aas
cmp
fsubl
xorb
dec
js
jl
push
addr16
mov
mov
mov
mov
pusha
fs
shlb
ds
pop
sbb
arpl
adc
push
pop
in
xchg
xor
das
loopne
out
or
imul
insl
andl
ret
or
sti
jns
adc
jno
or
repz
cmc
and
xchg
xchg
or
lods
call
cli
lds
xchg
aas
movsl
int3
aaa
aam
cmp
out
fmull
icebp
or
or
pusha
sbb
mov
push
and
pop
inc
cli
adc
push
clc
xlat
sbb
jo,pt
push
push
adc
dec
rorb
mov
loope
scas
adcb
sub
int3
push
pop
inc
insl
or
stos
push
out
add
addr16
lea
xchg
xor
mov
mov
pop
inc
xor
sahf
inc
fistpl
mov
jb
stos
sub
add
insl
mov
push
pop
or
cmpb
ja
xor
fcos
ret
xor
dec
cmp
mov
mov
mov
cwtl
inc
ljmp
xor
hlt
stos
mov
fcmovne
and
mov
lods
loop
or
jmp
mov
in
push
adc
inc
into
int
lock
inc
jecxz
pop
mov
mov
push
dec
jp
jp
add
sub
int3
push
pop
inc
mov
cs
test
mov
sbb
inc
sub
or
bswap
dec
inc
mov
lods
or
ds
and
ja
or
mov
jnp
int
cmp
sub
xchg
push
flds
ja
mov
pushf
or
pop
jo
sub
lock
fwait
repnz
xor
test
fisubrs
and
es
inc
fst
cs
cmp
repz
or
jg
mov
and
xchg
pop
adc
mov
stos
pop
daa
fcomps
sarl
test
ret
mov
imul
sub
adcl
out
enter
or
xor
pop
jecxz
mov
outsl
push
or
pop
fistpll
push
dec
sahf
xor
jecxz
mov
mov
fwait
cmp
outsl
push
jle
inc
repnz
cmpsl
sub
pusha
lea
add
test
popf
mov
ret
dec
dec
ja
aam
sbb
xchg
sub
mov
ja
dec
cmp
adc
daa
enter
and
jmp
xchg
sti
loop
xchg
inc
cmpb
add
lods
or
push
push
hlt
xor
ss
and
sbb
jne
fisubs
ljmp
ret
push
lcall
in
push
leave
mov
xchg
xchg
outsl
cmpsl
sbb
outsl
jb
dec
cmpb
aam
dec
pop
adc
sub
mov
jnp
rcrb
mov
pop
xor
js
adc
vcvtsi2ssl
cwtl
pop
ja
push
sub
adc
cmp
xchg
and
mov
push
xchg
sti
lds
sub
mov
xor
mov
push
xchg
repz
cmp
aad
rcl
loop
wrmsr
in
shlb
pop
shrb
cmp
in
repz
filds
cmp
cwtl
adc
loop
jmp
mov
idivl
mov
test
loop
addb
mov
filds
bound
and
xchg
stos
jg
pop
pop
je
or
int3
jl
jb
adc
pop
dec
dec
cmp
aad
scas
adcb
in
stc
in
js
das
and
xor
popf
jl
ret
dec
sub
push
aas
or
int3
push
pop
clc
out
outsb
pusha
mov
rclb
xchg
and
mov
or
fistpll
out
outsb
pusha
mov
rclb
xchg
and
cmc
adc
repnz
adc
jecxz
push
mov
mov
out
dec
aaa
orl
ret
mov
sub
inc
or
into
xor
sub
pop
xor
fisubl
ljmp
divb
add
test
shl
push
dec
xor
cld
popa
push
out
js
stc
fcompl
jno
xchg
fadds
mov
into
shr
mulb
xlat
push
shll
jne
test
test
pop
out
adc
sbb
mov
jns
test
sub
dec
or
rorb
lock
bound
movsl
mov
cmp
negb
mov
add
testb
jae
cmp
add
and
pop
push
cmpsb
xlat
push
push
sbb
fadd
cs
xchg
jae
pop
das
das
xor
jno
jl
scas
and
jmp
jnp
mov
and
jbe
stc
es
dec
jne
xchg
pop
addr16
adc
mov
push
in
shll
aas
shll
hlt
inc
rcl
shlb
fwait
add
inc
xchg
pop
mov
sub
lock
mov
testl
cmp
inc
sbb
mov
and
cmc
and
call
lods
sbb
lcall
sahf
das
mov
pop
mov
push
daa
push
mov
pop
pop
cwtl
imul
hlt
lea
fstpl
mov
stos
xor
lea
roll
dec
scas
jbe
std
mov
pop
aaa
jb
jns
daa
add
dec
ja
test
cmp
mov
mov
pop
repz
cltd
movsl
out
or
in
cmpsb
dec
adc
enterw
xchg
test
xchg
data16
sbb
jns
xorb
add
test
dec
sbb
stos
hlt
mov
fcom
ja
push
mov
push
inc
jo
pushf
mov
orl
mov
adc
push
in
lahf
pop
pop
and
mov
mov
stc
jg
dec
push
and
cmp
rep
fstpt
fimuls
scas
in
mov
mov
mov
inc
inc
pop
xor
or
xchg
jp
pusha
daa
jne
push
xorb
jecxz
mov
push
xchg
xor
mov
or
adc
sub
stos
mov
bound
cmc
fs
xor
rcr
mov
test
gs
add
in
pop
sbb
adc
hlt
xlat
jne
push
push
add
ret
xor
or
xorb
mov
flds
sub
pop
or
jo
cmpsb
iret
daa
rcl
mov
jnp
lock
add
sub
rorb
cmp
push
fiaddl
stc
sub
in
inc
and
stos
or
mov
loop
pop
stc
mov
pop
xchg
rol
aad
dec
rcrb
add
and
mov
and
pop
sbb
cld
cld
and
lcall
es
and
pop
in
jmp
mov
mov
cmc
pop
sahf
mov
adcb
jnp
popf
xorl
into
cmp
mov
mov
scas
and
out
push
sbb
jge
pop
pop
lret
sbb
in
cmc
adc
or
jo
xor
ljmpw
xor
cmp
call
dec
xchg
sub
dec
les
sbb
mov
mov
pop
ss
movsl
jae
int3
cli
jl
inc
cmp
mov
fdivrs
mov
cmp
dec
daa
mov
stc
test
pushf
aas
push
xchg
jbe
lret
sub
ret
aaa
stos
dec
add
int
out
mov
cli
iret
loope
and
adc
xor
jnp
mov
addr16
mov
subb
test
or
ja
ret
jbe
in
pop
iret
add
mulb
aas
movsl
pop
pop
fs
test
xor
mov
adc
push
loop
ja
adc
ficomps
dec
jmp
jne
jle
xchg
nop
int3
mov
lds
xor
mov
fmull
inc
fisubrs
xlat
scas
or
jl
mov
dec
sub
ljmp
xchg
sbb
mov
fdivl
xchg
cmp
push
fwait
cmp
ror
stc
into
jno
xor
in
int
add
xchg
or
nop
inc
push
in
fs
jp
aam
out
fisttps
dec
das
wbinvd
sub
jmp
mov
push
popa
and
pop
dec
xchg
mov
mov
cld
cmpsb
cld
adc
sub
jle
cmp
loopne
pushf
adc
xor
pop
jmp
sub
pushf
lea
mov
stos
sbb
cmpsl
shll
push
shl
push
jbe
fwait
rcr
push
xor
push
lahf
cli
notb
mov
xchg
adc
dec
pop
sbb
outsl
inc
pop
cmp
fisubs
cmpsb
pop
mov
mov
xor
adc
bnd
inc
cmp
loope
iret
fstl
jle
mov
xchg
repnz
sti
mov
lock
iret
or
in
push
cs
fldenv
pop
xor
aas
jecxz
push
lods
cmp
out
leave
stos
insb
arpl
mov
pop
jge
mov
jmp
mov
test
loope
mov
xchg
and
inc
fwait
add
scas
xor
fisubrl
aaa
lret
mov
adc
lret
sub
loopne
and
stc
loop
push
sub
cmc
out
sbb
pop
or
rorb
lahf
mov
push
aas
int3
or
outsl
cmc
or
es
push
jne
fwait
dec
out
pop
xchg
pop
and
shr
loope
jecxz
roll
sahf
iret
mov
push
cmp
xchg
cmp
mov
div
and
cmp
or
punpcklwd
lds
adc
pop
mov
push
pop
lods
icebp
lahf
pop
mov
iret
arpl
cld
clc
aaa
es
ficomps
lea
cld
mov
or
pop
dec
int3
movsl
icebp
dec
push
sti
out
lods
push
mov
mov
xor
rorl
bnd
jo
mov
dec
or
popf
adc
jg
xchg
xor
loopne
dec
cmp
xchg
mov
hlt
arpl
pop
sahf
sub
xor
loope
xor
mov
push
xchg
ljmp
loopne
ja
shr
adc
sarb
lret
in
cmp
fldenv
mov
scas
loope
dec
cmp
call
dec
xchg
sub
dec
les
sbb
mov
mov
pop
ss
movsl
jae
int3
cli
jl
inc
cmp
mov
fdivrs
mov
cmp
clc
pushf
lret
pushf
ret
dec
lods
lret
xor
aam
push
test
hlt
jno
lock
or
cmp
popf
push
cwtl
dec
xor
or
jle
jb
fwait
mov
inc
xor
sub
sub
push
sub
js
xchg
mov
xchg
mov
pushf
int3
inc
lock
push
ror
inc
notl
inc
xchg
cmp
imull
ret
clc
cmp
or
push
repz
push
mov
mov
mov
lock
shll
mov
push
nop
push
sub
push
mov
call
inc
xor
dec
push
sahf
jnp
sub
jbe
sub
adc
push
cltd
subb
sub
xchg
jae
lret
popa
pop
sbb
mov
cld
pop
mov
mov
dec
popa
xchg
sub
mov
outsb
leave
lea
test
mov
scas
jo
fsubrs
out
mov
add
notl
add
data16
xchg
push
scas
jnp
and
xor
add
or
and
enter
cmp
popw
stc
push
xlat
test
fbld
push
and
inc
adc
leave
xor
adc
std
jmp
push
push
jnp
int3
stos
mov
jb
pop
cmp
lods
dec
xchg
jp
out
es
rcrb
mov
xchg
and
sbb
movsb
lds
in
mov
cmp
cld
arpl
dec
dec
repz
sti
data16
stos
dec
pop
and
ds
jp
sub
push
jg,pt
push
mov
fnstcw
dec
shr
sbb
test
or
lods
inc
jle
jae
jmp
mov
cmp
pop
dec
jae
fdivl
jle
sbb
push
movsb
cwtl
add
pop
lret
dec
sub
add
cmp
dec
ja
test
pop
lock
and
inc
sarl
data16
lcall
push
jbe
or
add
test
xor
repnz
pop
out
or
dec
std
push
cmp
hlt
inc
dec
push
int3
stos
mov
jb
pop
cmp
test
push
xchg
je
pushf
inc
xchg
add
push
mov
incl
push
dec
repnz
cmpsl
sub
pusha
lea
mov
inc
xor
jge
jg
cmp
sub
xor
lods
popf
loopne
cmp
fst
roll
sub
or
lret
push
cmp
scas
sarb
jecxz
je
testb
jne
jle
adcl
in
xchg
jbe
int3
xchg
lds
daa
lea
pop
push
stos
mov
jg
cmpsb
inc
push
pop
and
mov
mov
pop
and
in
ds
xor
aad
movsl
and
pop
lret
pop
loope
ljmp
imul
shrb
cmc
punpckldq
or
gs
and
int
and
ret
imul
xchg
xor
scas
pusha
inc
adc
mov
stos
popa
hlt
jae
and
lret
cmp
push
daa
sahf
imul
popf
xor
sahf
lods
pushl
out
mov
mov
das
mov
push
imul
int
mov
inc
xchg
sub
sub
xchg
iret
xor
mov
xor
scas
stc
fisubl
sbb
sti
test
pushl
in
ds
in
sti
stos
and
arpl
loop
sub
ja
aad
mov
mov
stos
ljmp
js
mov
jl
pushf
repz
cld
andl
rcll
imul
add
ror
push
jg
pop
sub
repnz
cmp
movsl
ret
int
pop
and
inc
cli
sub
ljmp
out
push
ds
or
pop
cmp
test
mov
out
mov
ja
and
mov
inc
pop
rcl
push
fldt
mov
lea
in
inc
rcrl
ljmp
test
daa
ljmp
sub
and
lods
lea
scas
and
sub
popl
andl
mov
ficompl
imul
movsb
jo
das
xor
call
adc
inc
fwait
jb
sbb
xchg
aas
shl
inc
jbe
lahf
and
or
push
mov
pop
les
add
sti
mov
mov
notl
call
clc
push
in
sbb
das
and
add
sbb
ja
aam
jb
ret
add
sbb
dec
xor
test
ret
sbb
addl
xchg
xor
or
popa
sub
dec
mov
pushf
rcrb
pushf
out
push
enter
xor
ret
ficoms
push
in
jae
loope
ss
xchg
data16
mov
aad
es
aam
cmpsl
das
cmpsb
adc
jle
and
add
add
test
sub
jns
imul
fcoms
xor
inc
lret
add
popf
or
jecxz
push
jmp
or
sbb
gs
in
cmp
js
mov
repz
jmp
loop
or
cmp
sbb
std
inc
arpl
push
cmpsl
hlt
mov
inc
fs
out
out
lock
jecxz
pop
nop
idiv
popa
addb
lds
std
mov
push
dec
les
cli
das
scas
imul
pop
cmp
stc
ljmp
adc
jg
ja
push
mov
mov
repz
jg
ret
imul
outsl
loopne
movsl
pop
mov
pusha
ljmp
sub
add
dec
out
inc
fwait
leave
add
dec
das
jne
rcl
mov
jle
xchg
lock
sub
insl
jp
decl
das
sub
outsb
mov
stos
jo
and
cmp
inc
mov
pushf
jb
ljmp
xchg
xchg
rorb
popa
inc
idiv
gs
inc
pop
cmp
call
andl
int3
clc
arpl
std
movsl
adc
jmp
andb
pop
fwait
lods
inc
call
imul
cmpsl
dec
fs
adc
movsb
sbb
mov
test
jns
add
adc
or
cli
mov
pushw
dec
dec
ljmp
sbb
mov
lods
mov
data16
loop
popa
clc
out
or
notb
jecxz
mov
inc
push
rcll
xor
sbb
and
data16
sub
inc
push
xlat
iret
ret
fisttpll
pop
jp
xor
mov
mov
inc
inc
test
push
jb
add
pushl
sti
test
dec
pushf
or
test
add
jo
xor
inc
mov
popa
ret
push
pop
mov
jl
jge
jg
mov
popf
icebp
mov
or
mov
add
loope
pop
jl
and
aad
jmp
sbb
sub
and
int3
lret
cmc
xchg
mulb
and
xchg
or
lds
out
add
mov
std
inc
sub
mov
dec
xchg
fisttpll
push
xchg
ret
inc
je
insl
mov
out
or
jg
nop
xor
enter
jl
dec
clc
cmp
xor
push
jbe
or
sbb
outsl
out
ud2
jmp
outsb
ret
adc
imul
scas
jb
pop
roll
inc
leave
cs
jl
xor
xlat
in
add
push
bound
sbb
mov
insl
xor
and
les
je
in
sahf
call
sbb
popf
fldt
in
sti
out
loope
iret
push
rclb
aad
stc
push
pop
sub
lret
ret
adc
int
scas
fdivs
push
push
in
xchg
push
arpl
or
push
xor
stc
pusha
aaa
sti
and
data16
sub
inc
cmp
cmpsl
ret
lcall
sbb
dec
pushf
out
test
jg
adc
je
sub
mov
fmull
loopne
jb
dec
push
rcrl
or
jno
pop
dec
or
mov
lods
mov
aam
loop
or
mov
sub
xor
insl
add
into
push
insl
adc
sbb
cmpsb
stos
mov
ja
jae
and
imul
push
xchg
sub
mov
repnz
test
jae
dec
call
sbbl
mov
mov
mov
stc
mov
lods
pop
xchg
pop
mov
fstps
sub
jno
scas
inc
jnp
adc
inc
jle
in
nop
shll
jle
pusha
pop
dec
sub
mov
lahf
push
mov
stc
fwait
dec
pop
jo
mov
sarl
outsl
outsb
in
pop
mov
jo
inc
lds
xor
or
stos
mov
in
ret
pop
mov
lods
mov
jg
sub
jmp
jecxz
mov
shrb
inc
jb
test
fwait
push
or
xchg
gs
or
or
jae
loopne
stos
repz
cltd
hlt
mov
sbb
icebp
push
out
out
mov
insl
repz
inc
out
jbe
pop
xchg
inc
das
inc
push
push
push
dec
in
cmpl
inc
xchg
outsl
out
and
lret
clc
jl
mov
add
sbb
jo
fwait
push
jo
sti
ret
and
jecxz
jbe
insl
push
pop
dec
xor
and
jl
xlat
jle
test
shll
jbe
cmp
pop
jne
inc
out
lock
sub
inc
jb
test
fwait
push
or
xchg
gs
jmp
mov
loopne
stos
repz
cltd
inc
ret
dec
fcmovbe
pop
jmp
out
out
mov
insl
repz
inc
out
jbe
pop
xchg
inc
das
inc
push
push
push
dec
in
cmpl
repnz
aas
mov
rcrb
clc
jl
mov
add
sbb
and
lahf
cmp
mov
stos
xchg
in
outsl
ljmp
in
push
into
movsb
mov
or
adc
push
cmp
xlat
sahf
jl
lods
cmpsl
insb
mov
mov
sbb
out
int
bound
int3
dec
xor
xchg
lahf
clc
pop
add
pop
or
pushf
and
fwait
jmp
jo
push
sub
test
addr16
push
inc
fwait
push
cmp
sahf
out
cmp
mov
jnp
movups
xchg
nop
cmpsb
push
out
mov
xlat
call
cmp
push
jbe
cmp
aas
add
es
dec
in
loop
push
fdivr
ljmp
adc
jg
ja
push
dec
movl
test
shrl
popa
or
arpl
mov
adc
push
lock
dec
loop
push
imul
fsqrt
sbb
xor
sub
nop
sbb
xchg
jne
insb
add
sub
je
mov
mov
or
xchg
xorb
neg
scas
pop
addr16
mov
jo
fs
jae
stc
outsb
push
loopne
movsb
sbb
add
ucomiss
add
xorl
mov
es
data16
enter
sub
mov
lock
adc
xor
pop
sbb
out
int
bound
int3
dec
xor
insl
ss
xorb
icebp
sahf
cs
sub
das
leave
inc
mov
fwait
adc
mov
push
inc
sbb
sarl
rcrb
xor
fs
jecxz
pop
inc
sub
pop
or
ds
and
push
cli
fsubrl
repnz
jg
lahf
test
adc
mov
xorl
imul
pusha
popf
cmp
or
cmpsb
pop
pop
ds
loop
std
outsb
sub
int3
sbb
jmp
nop
stc
ljmp
adc
jg
ja
push
dec
movl
test
push
xchg
dec
jecxz
insl
cmp
outsb
add
push
xor
cmp
in
ss
repnz
popa
sbb
daa
stos
jmp
push
nopl
test
jo
mov
jp
shr
lret
or
mov
inc
adc
add
inc
stc
add
popl
fsubrl
jmp
leave
fisubrl
dec
ds
add
xor
xchg
xchg
jl
xchg
test
dec
sbb
out
int
bound
int3
dec
xor
std
outsb
addr16
cmp
push
loopne
imul
mov
mov
mov
les
adc
loop
pop
jae
push
mov
push
ja
push
in
xchg
adc
sub
push
sti
xchg
test
ljmp
in
cli
add
in
adc
mov
push
ret
jp
or
mov
pop
push
dec
cmp
mov
mov
pop
roll
inc
leave
cs
jl
xor
xlat
in
cmpl
test
jmp
and
xor
lods
insl
shl
inc
mov
jo
push
cmpsb
mov
mov
repz
jo
mov
jns
jmp
clc
pop
pop
or
inc
cld
fcoms
push
call
sahf
sub
pop
jnp
mov
in
xor
xorl
sahf
mov
das
ret
cmp
ret
faddp
fadds
insl
out
insl
jns
mov
jmp
xor
jo
xor
xlat
push
push
jae
dec
lahf
lahf
push
add
les
enter
mov
add
or
jbe
mov
cmc
mov
in
scas
icebp
dec
shl
inc
add
pushf
scas
popf
push
out
and
in
cmc
movsb
popa
aas
sbb
call
incl
and
jno
mov
test
mov
mov
xor
fs
adc
cmpsb
inc
int
mov
outsb
repz
mov
xchg
mov
pop
pop
push
call
clc
adc
inc
cmp
cwtl
cmp
ss
in
xchg
push
fisubrl
and
hlt
out
or
sbb
and
cmc
outsl
lea
notl
dec
test
xchg
icebp
xchg
sbb
out
sub
mov
lods
rcrb
xchg
pop
inc
jle
fldt
sbb
aaa
pop
repnz
adc
inc
or
mov
jbe
lea
mov
insb
xor
add
mov
adc
daa
sub
mov
or
mov
xor
push
aas
roll
out
xchg
inc
pop
push
sbb
out
xchg
mov
idiv
adc
push
mov
lret
sti
sub
out
sub
push
jne
pop
mov
fdivrl
or
int
scas
insl
mov
or
cmp
daa
jp
mov
inc
leave
cs
mov
lret
pop
xor
fdiv
stc
dec
in
xchg
idivl
cmp
inc
push
jg
push
or
and
rcll
sub
push
adc
mov
in
popl
in
xchg
jle
daa
mov
inc
jno
mov
sub
daa
adc
notb
mov
push
test
outsl
lock
mov
stos
dec
or
into
jg
or
jg
jl
or
jle
xchg
cmp
cmc
mov
aad
push
icebp
ss
arpl
xorl
ja
fistpl
or
or
or
ret
dec
shlb
shll
or
adc
outsb
aam
fistpll
push
xlat
pop
add
sbb
int3
arpl
push
in
sub
mov
das
ret
mov
loopne
add
mov
shrb
sbb
xor
jg
cmp
jecxz
scas
mov
scas
pop
push
in
cwtl
mov
mov
bound
mov
inc
inc
clc
cli
push
sti
mov
xorl
cli
icebp
shll
imul
mov
xchg
pop
fadd
out
ja,pn
add
ds
fldt
fbstp
and
add
add
sbb
sub
sub
add
nop
repnz
push
dec
cmc
mov
out
andb
dec
bound
mov
xchg
test
adc
sahf
adc
xchg
pop
hlt
mov
add
push
lcall
push
inc
push
dec
std
mov
dec
jns
xchg
and
mov
dec
sbb
out
ret
test
sbb
out
aam
aaa
imul
jle
inc
call
sub
pusha
xchg
add
pop
stc
mov
dec
adc
lock
fmull
int3
popa
dec
ffree
test
dec
nop
hlt
and
mov
imull
dec
xchg
sahf
arpl
and
ljmp
xchg
insl
test
adc
or
adc
sti
int
push
jle
sbb
fistps
enter
xorb
loopne
jo
inc
sbb
add
addr16
mov
lock
out
mov
idivl
fldl
das
xchg
pop
stos
xchg
cmp
frstor
jg
into
jl
adc
xchg
jmp
add
mov
jae
clc
ret
in
sarl
inc
add
ja
shr
or
scas
fbstp
adc
stc
int
out
adc
push
mov
pusha
or
ficoms
jae
loopne
inc
dec
cli
bound
push
popa
dec
mov
movsb
orl
jae
je
dec
adc
iret
mov
sarb
test
jg
in
fbstp
dec
or
push
je
push
outsb
sbb
popa
jp
push
dec
lods
test
fmuls
sub
mov
xchg
adc
mov
sbb
movsb
insb
mov
popa
cmpsl
fldlg2
in
shlb
rorb
sbb
out
int
bound
int3
dec
xor
in
xchg
cmovbe
push
dec
divb
cli
stos
test
shld
and
jno
mov
daa
sti
and
scas
pop
cmp
orb
cld
xlat
xlat
sar
mov
hlt
xor
clc
das
arpl
lock
fmull
xchg
mov
popa
es
imul
sbb
out
mov
adc
test
jl
pusha
stos
jle
inc
call
cmp
push
mov
mov
dec
adc
lock
fmull
xchg
mov
out
das
or
jo
mov
xchg
sahf
arpl
and
ljmp
xchg
insl
test
adc
or
adc
sti
int
push
jle
sbb
fistps
push
push
push
icebp
jo
inc
in
out
jle
xor
push
aad
adc
idivl
fldl
das
xchg
pop
stos
xchg
cmp
frstor
jg
into
jl
adc
xchg
jmp
add
mov
jae
clc
ret
in
sarl
inc
ret
sub
jmp
adc
stc
int
out
adc
push
mov
pusha
or
ficoms
or
inc
dec
cli
bound
push
popa
dec
mov
cli
mov
inc
pusha
stos
pop
popa
jp
push
dec
lods
gs
pushf
pop
pop
inc
xchg
jb
sbb
sar
pop
aam
sti
adc
movsl
ja
cli
mov
inc
sbb
add
je
pushf
or
gs
push
jmp
lds
out
inc
push
jb
add
insb
sbb
repz
and
push
and
pusha
add
mov
pop
push
lahf
clc
aad
cmp
dec
and
cmp
inc
cmp
mov
cli
push
xor
rclb
mov
insl
xor
jae
fmull
xor
push
push
mov
pop
sbb
and
cs
pop
test
adc
into
jecxz
pop
and
xchg
mov
mov
es
test
cltd
das
push
movsl
add
ret
lock
pop
push
mov
add
idivb
jmp
jae
mov
jnp
cmpsl
xchg
fstpl
fbld
inc
xor
or
int3
mov
jnp
or
xor
push
dec
mov
push
push
push
clc
ja
mov
in
mov
mov
or
clc
out
mov
and
addr16
sub
cmp
js
add
add
shl
imul
pushf
mov
pop
cmpsl
inc
sub
shll
xor
ss
pusha
push
repz
xchg
lods
popa
cli
decb
xor
add
dec
sbb
out
int
bound
int3
dec
xor
nop
jmp
es
out
mov
mov
sub
int3
jge
int3
popl
lahf
arpl
es
fdivrs
mov
mov
mov
sbb
fdivr
sbb
jecxz
gs
out
nop
fwait
pop
lahf
adc
mov
je
insl
fistpl
jne
lret
inc
mov
and
ljmp
filds
sbb
repz
sbb
icebp
in
xchg
fstl
idivb
mov
jle
mov
sub
adc
fstpt
mov
push
aas
add
mov
mov
xor
ljmp
adc
jg
ja
push
dec
movl
test
adc
fs
bound
pop
add
jl
or
and
cld
inc
jbe
loopne
ret
jecxz
loopne
mov
iret
add
adc
fwait
shll
dec
add
xchg
push
jl
js
clc
adc
lahf
in
dec
jecxz,pn
adc
popa
aad
fistps
push
jp
ljmp
sbbl
loopne
push
insb
jecxz
popa
xchg
ss
jo
xchg
shll
jge
jge
stc
lret
mov
push
sbbl
or
sbb
fwait
inc
test
push
incb
cmp
inc
daa
stc
addl
lahf
ljmp
mov
out
jne
xor
fwait
sbb
test
lcall
aam
dec
or
mov
jnp
mov
mov
ja
sub
pushf
cmpsl
aad
push
cltd
xchg
and
pop
pusha
pop
aad
int3
es
out
sub
movsb
and
out
lock
test
xor
repnz
shrd
daa
cwtl
fdivrp
push
dec
dec
or
sbb
ficoms
cmpsb
lret
cmp
mov
idivl
xchg
push
jbe
inc
lret
mov
sbb
imul
push
jns
loop
clc
inc
pop
insl
add
mov
mov
testb
rclb
pop
push
mov
mov
mov
dec
int
cld
mov
loope
repnz
jbe
loopne
lock
movsb
mov
rclb
mov
rol
in
cmp
sbb
and
nop
int
ret
cwtl
xchg
das
es
enter
mov
sub
cld
outsl
outsl
sub
ja
mov
inc
mov
mov
mov
in
adc
push
xor
into
fldl
jnp
jp
pop
pop
mov
fldl
fcoms
popa
xchg
sbb
fistl
pop
fxam
push
push
in
mov
filds
mov
sub
repz
ret
jecxz
sbb
sbb
push
std
xor
cmpsb
out
test
cs
into
popa
add
arpl
enter
cmp
inc
inc
insb
xchg
lahf
insb
mov
sarb
push
movsb
mov
sub
ljmp
mov
filds
loop
cmpsl
in
insl
cld
movsl
filds
mov
pop
pop
movsb
outsl
and
insb
push
push
jle
sub
push
repz
pop
imul
add
pop
xchg
test
mov
andnps
icebp
lods
lret
inc
fneni(8087
dec
dec
sarl
add
subl
jbe
cli
out
imulb
fbstp
adc
ja
lods
or
fbstp
ret
push
clc
jae
add
push
lock
stos
sub
jecxz
inc
je
ljmp
das
or
cvttps2pi
cmpsl
sub
pusha
lea
dec
sarl
add
jge
xor
in
mov
xchg
sti
mov
mov
xlat
mov
xorl
push
stos
sub
dec
dec
roll
xor
xchg
cmp
call
sub
js
push
push
cs
lods
cmp
jecxz
xchg
dec
int3
outsb
xor
ror
imul
mov
repz
daa
inc
push
movsl
xlat
mov
lock
pop
mov
nop
pop
fldenv
ffree
roll
movsl
mov
adc
fcoms
mov
imul
mov
sbb
cwtl
lods
cmp
pushf
xlat
sbb
pop
lea
cli
mov
lea
cmp
out
pushf
sub
jmp
xchg
les
fcompl
and
mov
sub
sub
popa
push
stos
jns
pop
push
imul
mov
add
lahf
mov
out
push
lcall
aaa
mov
mov
sbb
sbb
stos
dec
jge
rcl
std
in
adc
jae
int
mov
xlat
out
insl
adc
test
sbb
in
mov
inc
shrb
cmp
fistps
pop
insl
bound
cs
pop
push
or
ljmp
sbb
mov
push
push
js
js
pop
sbb
jecxz
pop
dec
xchg
movd
inc
test
cld
jl
pop
xlat
out
outsb
xorps
int
cmp
xsha1
cmpsb
iret
mov
es
mov
filds
fucomp
data16
ds
xchg
push
add
and
fsubr
pop
lock
fcoml
xor
lahf
mov
sub
fadd
sbb
mov
pop
popf
daa
pop
jb
ja
stc
pop
inc
mov
scas
movsb
loope
incl
roll
xor
sub
mov
xchg
inc
pop
add
cmp
sti
fmuls
dec
cmp
lds
in
sahf
repnz
lret
iret
jnp
stos
mov
repz
in
xor
add
lea
xorl
lds
in
rcrl
lcall
shrl
xor
jb
ja
cmp
add
jae
xchg
xorb
mov
push
mov
xchg
add
and
jp
imul
push
inc
in
xor
test
fcoms
jp
jecxz
sbb
jmp
mov
cld
stc
cmp
rcrl
mov
stos
shlb
jbe
int3
and
pop
or
shl
das
jle
push
add
and
incb
mov
inc
lcall
insb
loope
mov
push
sub
inc
mov
in
sti
fsts
sub
sahf
test
adc
test
cwtl
xchg
mov
mov
idivb
pop
out
lcall
arpl
jp
mov
lea
fists
cs
xchg
out
cmpsb
adc
mov
xlat
xchg
sub
daa
mov
push
sahf
mov
loopne,pt
ljmp
xchg
loopne
jecxz
push
cmp
add
lock
fcoml
xor
js
lods
mov
fadd
sbb
mov
dec
dec
sbbl
mov
jae
dec
mov
mov
cltd
sbb
movsb
push
jge
movsb
sbb
dec
pop
sub
arpl
jb
sbb
ljmp
sbb
in
push
push
aad
sbb
inc
imul
dec
add
xor
inc
jge
sar
xchg
cwtl
or
imul
rcrl
jmp
rorl
inc
sbb
push
pop
les
push
sub
es
cmp
xchg
jg
push
mov
es
shll
xchg
and
jp
imul
push
inc
in
xor
test
fcoms
jp
jecxz
sbb
jmp
mov
cld
stc
xchg
mov
into
push
jnp
mov
aad
shlb
jbe
int3
and
pop
or
shl
das
jle
push
add
and
incb
mov
inc
lcall
insb
loope
mov
push
or
mov
sub
sahf
test
adc
test
cwtl
xchg
mov
mov
idivb
pop
out
lcall
arpl
jp
mov
lea
fists
cs
ficompl
sub
jmp
xchg
loope
loop
inc
jo
mov
pop
sarb
movsl
adc
mov
and
icebp
add
dec
sti
ljmp
pusha
dec
push
or
lcall
adc
inc
or
or
popf
adc
cmp
mov
add
and
add
mov
bound
hlt
pop
cmp
in
sub
test
outsb
add
daa
jmp
pop
jb
cmovg
mov
jbe
lcall
lret
cmpsl
loopne
push
xor
mov
jo
movl
sbb
sbb
jb
test
sbb
shlb
add
jecxz
pop
sbb
shrb
jg
cmc
xor
pop
xor
push
subb
es
xchg
and
sahf
fldt
mov
aad
cmp
mov
dec
in
lea
jl
pusha
dec
ficoms
push
xchg
stos
sub
jge
aaa
xchg
nop
mov
mov
cmp
pop
sarl
popa
test
test
iret
mov
dec
jo
mov
adc
lods
mov
jo
stos
or
sub
jge
pop
sbb
jmp
mov
xorb
mov
add
roll
in
sbb
xor
sub
xor
and
inc
das
es
or
mov
cmp
mulb
ret
mov
xchg
hlt
out
pop
sbb
xchg
scas
sub
stc
inc
cwtl
dec
repz
in
andb
mov
push
fsubrl
add
repnz
unpcklps
add
mov
fmull
fistl
mov
or
ret
mov
fistpll
fs
sub
dec
jns
sbb
add
jbe
inc
or
jnp
fs
sub
mov
aaa
jp
inc
or
mov
jnp
fs
sub
xor
and
jno
lret
push
mov
add
jnp
fs
sub
and
fimuls
jecxz
stos
popa
arpl
jnp
fs
sub
pop
pop
stc
lods
push
bound
adc
std
les
insb
daa
mov
fnstenv
cli
fstl
add
fisttpl
and
mov
loop
jno
stc
jne
repnz
aam
add
fisttpl
and
mov
test
sbb
and
stos
leave
mov
sub
mov
sub
push
push
xchg
sbb
dec
loopne
sbb
or
ja
pop
inc
inc
dec
movsb
icebp
mov
cmp
or
gs
xchg
mov
into
mov
mov
aaa
sbb
cmp
gs
xchg
mov
stc
pop
dec
add
mov
pop
xor
cmp
gs
xchg
mov
cmp
cld
add
xor
push
gs
xchg
mov
mov
iret
mov
adc
cmp
gs
xchg
mov
iret
cmpsb
jl
ds
sbb
cmp
gs
xchg
mov
test
lcall
mov
cmp
gs
xchg
mov
fiadds
dec
dec
jae,pt
nop
into
fimull
outsl
jbe
mov
jmp
ret
jnp
stos
pop
jle
cli
lahf
push
cmp
mov
mov
notb
jbe
loope
repz
or
mov
nop
stos
sbbb
mov
fmuls
outsw
inc
push
loopne
mov
int
sub
addr16
pop
bound
fs
mov
fcoml
pop
cmp
cmp
leave
int3
mov
lea
mov
jecxz
std
push
cmp
add
mov
lcall
push
hlt
push
fsts
cmp
cmp
je
aas
push
sub
test
sub
je
and
pop
pop
icebp
xchg
fcmovu
test
cs
dec
insb
xchg
mov
and
test
mov
lds
stos
repz
push
pop
cmp
adc
out
fcoms
jns
add
jge
jl
jp
sbb
mov
adcb
clc
push
stc
icebp
es
cwtl
scas
inc
adc
sti
xchg
sbb
jle
or
pop
or
pop
jbe
sub
lods
fwait
jge
pop
jg
rorl
mov
scas
xchg
jle
mov
lret
jp
jnp
jge
sub
sbb
mov
inc
ja
cmp
pop
pop
adc
and
push
mov
xor
ss
pop
test
inc
ljmp
mov
iret
aas
sub
jmp
bound
lds
pop
adc
clc
leave
jne
sahf
and
out
pusha
lcall
cli
aad
jo
pusha
dec
arpl
cmp
mov
fldl2e
cmp
adc
mov
mov
mov
fs
mov
fdivl
popa
daa
jl
and
push
loopne
push
xchg
jg
aas
xor
adc
mov
sub
lcall
cltd
dec
xchg
inc
mov
rcll
sub
negb
jl
xlat
pusha
loope
cmp
adc
cmpsb
andl
test
iret
imul
xlat
mov
cwtl
xchg
out
mov
shrb
push
stos
rcrb
scas
push
mov
in
add
negb
sbb
lea
outsl
popa
movsb
ljmp
aad
sub
sbb
std
cwtl
push
mov
cmp
push
or
aad
pop
inc
cli
mov
das
mov
icebp
add
mov
xor
cmpsb
les
clc
push
ss
stc
inc
movsl
aaa
data16
add
cmpsb
push
mov
xorb
popa
mov
xchg
ja
test
pop
cmp
sub
and
add
orb
add
push
inc
sub
cmp
cmpsb
data16
sub
repz
hlt
lret
das
lea
popf
jmp
in
xor
xchg
mov
adc
pop
xchg
and
mov
scas
fwait
rcrb
aas
stc
and
js
cwtl
cmp
sbb
clc
out
les
jne
mov
pop
insb
or
jmp
lock
mov
or
cmpsb
aam
rorb
add
mov
xorb
sub
repz
hlt
lret
das
cmc
movsb
loopne
in
shll
fstpt
mov
je
add
jae
mov
stc
dec
inc
idivb
fsts
in
pop
push
jp
push
dec
inc
or
mov
dec
dec
aam
shlb
add
lods
jmp
loopne
lock
sub
sarb
or
or
xchg
mov
fisubrs
push
fnsave
jecxz
icebp
hlt
push
jp
pusha
xchg
or
dec
lret
scas
bnd
push
fxch
shl
fsubl
ret
jbe
test
loope
xor
mov
pop
gs
rorb
add
mov
xorb
sarb
xchg
mov
outsl
push
scas
jb
enter
dec
aas
xchg
addr16
pop
aaa
leave
mov
sahf
dec
sub
jns
popa
nop
test
sub
xchg
cmpsl
out
and
sbb
call
or
mov
cwtl
mov
in
out
les
and
dec
in
out
jno
ja
jb
push
adc
jp
adc
aas
jp
rcl
mov
or
add
sub
les
sti
lock
aad
data16
into
cmc
mov
push
les
sti
mov
xchg
sub
fdivrs
xor
mov
jno
sub
std
lcall
xor
xor
lds
jecxz
rorb
jb
stos
stc
mov
pop
fmuls
stos
cs
inc
ficompl
test
sub
mov
push
inc
lahf
pusha
jae
sub
jne
leave
pop
xchg
cmpsb
sti
adc
mov
jno
fstps
mov
lcall
into
out
mov
push
jo
jle
insl
aas
icebp
insl
movsl
fwait
out
push
sub
cmp
dec
add
lret
mov
push
dec
and
dec
push
xor
pop
dec
push
fsubl
push
mov
add
lahf
insl
add
in
out
mov
mov
call
lahf
push
xor
loopne
ret
in
call
cmp
insl
pop
jle
in
xor
sbb
out
pop
xchg
dec
mov
pop
imul
leave
mov
into
add
cmp
js
es
lcall
decl
jnp
add
cmp
arpl
cmpsb
out
sbb
lods
hlt
scas
out
jl
aaa
shr
ds
add
jno
adc
jno
mov
test
stos
data16
mov
aam
je
test
cmp
sub
stos
add
add
mov
lock
cli
ret
cmp
push
nop
add
ret
xor
or
pop
pop
sahf
popf
mov
repnz
out
je
pop
mov
clc
mov
mov
dec
rol
leave
sbb
ja
pop
fs
aaa
outsb
sub
sbb
ja
mov
jae
pop
and
mov
jmp
or
add
cmpsl
pop
sbbl
pop
lahf
sbb
comiss
lcall
scas
cli
iret
inc
xchg
lret
inc
sti
add
jle
mov
repnz
or
dec
subl
lds
gs
stos
into
test
mov
mov
push
jo
imul
sbb
sub
rcr
push
cld
es
mov
mov
pop
mov
test
out
push
fstps
mov
jl
lcall
cwtl
test
roll
popa
inc
xchg
mov
jbe
and
pop
jno
daa
andb
jl
sahf
leave
fdivs
adc
icebp
mov
shlb
xrelease
divb
mov
mov
outsl
push
dec
stc
insl
iret
dec
xchg
pop
and
jle
or
and
adc
stc
fstl
fisttpl
mov
add
push
ljmp
call
sub
in
fildl
pcmpeqb
incb
xchg
pop
jb
cmp
out
xor
stos
push
pop
dec
mov
incl
push
xchg
mov
adc
aad
jo
adc
repz
fdivs
xor
loopne
or
inc
add
inc
shrl
dec
mov
icebp
jp
lock
pop
mov
jns
push
xor
lods
ljmp
xor
mov
mov
cmp
sbb
mov
dec
mov
cmc
push
add
and
mov
mov
mov
mov
out
out
sarb
sti
cmp
jmp
test
push
dec
arpl
jge
test
js
movsb
jnp
loop
inc
add
jecxz
xorb
rorl
mov
push
xchg
add
or
loopne
add
lds
jmp
out
mov
adcb
cmp
pushf
into
aas
and
mov
fwait
or
mov
cli
repnz
js
aaa
xchg
std
push
pop
jb
mov
sbb
rcrb
mov
filds
and
jb
or
pop
dec
ljmp
enter
inc
pusha
in
in
in
stos
int3
add
sub
loopne
mov
push
add
mov
repz
push
xchg
popf
mov
addr16
insb
sbb
jbe
pmuludq
int
mov
fildl
aas
adc
pop
sub
jp
or
xchg
mov
ja
jnp
mov
clc
iret
dec
xorl
nop
in
inc
test
shlb
test
mov
pop
push
sbb
mov
jns
cld
xchg
repnz
clc
test
popa
ljmp
pop
and
xor
sub
xchg
in
out
fiaddl
sub
cmp
outsl
add
je
popa
addr16
sahf
psrlw
or
out
fs
stos
jo
mov
sbb
or
push
out
sti
mov
mov
push
adc
fldcw
dec
and
and
push
arpl
xchg
jecxz
mov
or
push
insl
xor
mov
and
cmpsb
cmpsl
mov
mov
inc
cmpsb
mov
and
aam
sbb
and
clc
mov
or
mov
lds
insl
dec
lcall
cmp
dec
add
lret
sbb
idiv
cltd
xchg
mov
mov
in
sbb
pop
lods
add
xchg
lret
mov
test
into
or
jae
cmp
mov
adc
movsb
scas
xor
fisubs
jnp
xor
hlt
inc
or
sub
aam
imul
pop
xchg
mov
and
test
punpckhdq
mov
jns
rorl
pushf
ljmp
dec
xchg
mov
mov
in
mov
push
mov
push
jns
fisubs
jnp
xor
hlt
inc
or
pop
push
stos
imul
rcll
push
cmp
gs
xchg
mov
jmp
lods
jno
and
ljmp
jns
or
xor
leave
pop
insb
or
mov
jbe
pop
nop
roll
fwait
pop
pop
lahf
adc
decb
dec
addr16
leave
fucomip
adc
ret
daa
inc
pusha
pop
push
push
xchg
test
bt
jg
sbb
mov
jnp
fs
sub
inc
cltd
inc
ljmp
pusha
mov
lret
scas
test
in
dec
push
mov
lods
mov
icebp
or
cs
imul
xor
sub
mov
xorb
xchg
adc
add
jle
mov
sbb
call
push
or
pusha
jnp
bound
or
xor
mov
xchg
lret
mov
test
into
or
jae
cmp
pop
jne
insb
in
dec
lret
fmulp
push
jnp
fs
sub
clc
aaa
sub
jb
xchg
shl
mov
sub
js
mov
push
fnstcw
gs
xchg
mov
push
xor
and
xchg
push
call
sti
pop
icebp
or
shr
adc
ret
nop
fbstp
mov
xchg
test
bt
jg
jl
in
and
cmp
adc
mov
adc
jp
sti
nop
mov
dec
mov
push
add
xchg
out
test
clc
aad
mov
or
inc
mov
inc
int
pop
sbb
xchg
cwtl
fimull
cwtl
or
mov
hlt
or
add
adc
gs
xchg
mov
sarb
xchg
mov
mov
in
dec
or
out
cmc
jb
scas
leave
dec
in
popa
mov
add
cld
jg
fisttpl
and
fstl
adc
mov
xchg
xchg
jbe
sti
push
xchg
icebp
add
leave
jmp
and
pop
jg
adc
ret
sbb
mov
lds
stos
and
pop
adc
cwtl
jle
in
dec
lahf
jge
or
scas
loope
mov
inc
xchg
mov
daa
cwtl
and
adc
inc
inc
aaa
xchg
and
mov
lret
xor
sbb
push
lock
pop
pop
jmp
mov
mov
xchg
cli
xchg
cmc
ret
hlt
dec
fidivl
pop
mov
xchg
cli
ljmp
xor
jnp
in
cld
pop
fs
rcl
xchg
xchg
push
or
out
stc
rcll
adcl
mov
xchg
ja
adc
push
or
loope
adc
daa
sbb
cmp
mov
xorb
xchg
push
dec
fstl
push
add
repz
shl
sarl
cli
jb
call
sub
mov
jecxz
push
inc
adc
mov
sar
es
push
es
stos
mov
rol
mov
mov
decb
push
cmp
test
mov
filds
mov
sub
repz
hlt
lret
das
out
sbb
scas
cwtl
stos
add
mov
adc
push
mov
jmp
ja
mov
pop
shlb
fsubrs
mov
daa
rcr
insl
popf
adc
fs
mov
filds
inc
cmpsl
cmovns
mov
xlat
je
mov
jl
fcompl
xor
mov
shr
js
adc
loope
in
test
cmpb
push
popf
test
push
insb
adc
sbb
cwtl
mov
mov
test
jno
bound
sbb
jne
pushf
push
inc
fnstenv
mov
mov
inc
outsl
mov
out
dec
and
push
mov
imul
and
cmp
ficomps
sbb
sub
fxch
add
xor
pop
mov
xlat
icebp
movsb
jbe
test
pusha
ss
aam
jecxz
mov
test
dec
push
out
pop
aam
mov
or
xor
mov
pusha
ret
aam
scas
pop
outsl
or
dec
adc
or
hlt
xorl
and
in
push
xor
push
int
adc
cld
push
fnstenv
push
pop
addb
xchg
mov
icebp
cmp
mov
jecxz
ss
mov
mov
jl
repz
or
xor
cld
jle
mov
mov
adc
lock
add
cmp
jb
std
xlat
stos
xchg
testl
icebp
frstor
in
cmpsb
push
cmc
aaa
outsb
scas
push
push
pop
in
mov
dec
sbb
push
testb
enter
cwtl
push
pop
xchg
add
mov
pop
outsl
push
xorw
dec
loop
sub
ret
mov
shlb
push
xor
cmp
pop
pop
pop
cld
loope
mov
in
lret
push
sbb
mov
mov
mov
mov
fnstcw
loopne
xlat
js
pop
jle
sahf
add
mov
idivb
rcll
xchg
movsb
aaa
ja
mov
dec
pop
mov
push
addb
push
sub
fistl
sub
and
lods
xchg
jne
cmpsb
or
jns
inc
mov
filds
dec
repnz
in
shlb
cltd
stc
push
nop
pop
les
jo
jbe
out
sbb
jl
in
jb
or
in
push
xor
bnd
popf
jmp
mov
add
outsb
cmp
or
icebp
ljmp
jg
adc
imul
lds
push
sub
jno
pop
leave
mov
mov
sbb
stos
test
jb
sub
push
addr16
xor
xor
pop
pop
pop
loopw
mov
xorb
push
dec
xor
cmc
add
repz
int
pop
shlb
mov
out
mov
inc
mov
daa
mov
andb
adc
outsb
test
mov
inc
dec
lods
add
sbb
sub
cmp
insb
stos
inc
jmp
lret
inc
lret
cmp
sub
sbb
xor
test
outsl
jnp
stos
or
in
je
jg
xchg
test
sbb
xchg
lods
sar
mov
add
sti
xchg
aaa
xchg
pop
cs
jns
xor
mov
xorb
xchg
adc
iret
or
add
ret
and
xor
stos
repnz
lods
jmp
jnp
sub
inc
jmp
std
sub
es
pusha
mov
arpl
repz
push
mov
cld
cmpsb
pop
out
mov
filds
aad
xchg
adc
iret
or
add
ret
and
xor
stos
repnz
lods
jmp
add
jge
mov
xchg
bound
or
add
dec
repz
push
mov
cld
cmpsb
pop
out
mov
filds
sbb
std
push
scas
push
rcr
lds
ficompl
jp
ret
and
dec
lods
bound
sbb
shrb
adc
mov
cmpsl
ret
and
dec
pop
std
inc
mov
std
sbb
mov
je
out
insl
mov
mov
cmc
decb
pop
xsha1
cmpsb
iret
mov
es
mov
filds
and
push
popl
mov
mov
adc
rolb
sbbb
ret
stos
je
xchg
pop
loope
pop
jl
pusha
std
fimull
mov
xor
sbbl
imul
add
mov
add
test
popf
push
lret
clc
adc
xchg
pop
sti
cs
sub
push
divl
add
clc
notl
addr16
or
stos
sub
loopne
les
fstl
mov
fsubrl
push
push
ss
sahf
cmp
mov
or
cmpsb
iret
mov
es
mov
filds
and
pushl
inc
jbe
fisttps
sbb
cmp
pushf
cld
mov
push
xchg
subl
fisttpll
notb
pusha
iret
mov
pop
pop
fwait
iret
sub
in
ds
mov
filds
in
sahf
inc
bound
std
and
mov
or
adc
xor
dec
divb
es
jmp
push
mov
ja
aam
xchg
jg
xor
jns
in
ret
push
cmp
add
adc
sbb
inc
lahf
rcrl
fdiv
nop
mov
in
jmp
pushf
fs
dec
pop
in
xor
add
mov
adc
mov
filds
cltd
mov
test
mov
adc
pop
mov
mov
sbbb
sbb
xor
shl
repnz
pop
sahf
dec
cmc
xchg
pushf
add
mov
inc
outsl
mov
aam
sarb
mov
mov
js
mov
cld
fcmovnb
lret
jne
mov
mov
add
out
shl
and
lock
inc
test
mov
addr16
cmp
es
adc
add
xchg
mov
jo
and
iret
lret
mov
test
sbb
jmp
shrl
jns
fdiv
imul
push
mov
cmp
mov
xlat
jns
pop
mov
inc
mov
pop
sbb
mov
jno
adc
je
jns
cmpsb
iret
mov
es
mov
filds
or
das
cmp
stc
adc
sub
mov
and
test
rclb
aas
jae
and
sub
enter
pop
jo
cmpsl
jp
nop
insb
test
jge
movb
ss
je
mov
imul
mov
fisttps
stos
testl
mov
sub
rcll
push
push
xor
loope
push
lea
dec
leave
push
sbbl
das
lods
sub
mov
sub
movsb
loope
insl
fistpl
pop
hlt
fistps
dec
add
or
arpl
ljmp
mov
ds
dec
cltd
jmp
neg
pusha
shl
xchg
dec
lea
enter
add
xchg
add
addr16
mov
mov
out
mov
nop
lock
lret
mov
lcall
les
push
jmp
or
mov
notl
fstps
adc
lcall
sar
xchg
dec
aam
lcall
inc
mov
xor
jle
leave
mov
inc
cmpsb
add
rorb
and
imul
pop
and
push
test
imul
enter
cmp
xor
sbb
mov
cmp
fprem
push
jo
xchg
mov
adc
fwait
xchg
push
jb
cmc
aam
adc
nop
add
cwtl
jp
push
ja
adc
jecxz
mov
push
fldt
inc
imul
xor
xchg
push
in
fidivs
add
jnp
les
sub
inc
add
cli
cmp
add
ror
sub
mov
xor
in
or
mov
filds
aam
sbb
xlat
sub
insl
repz
imul
pop
push
rcll
pusha
fsts
adc
adc
test
mov
sbb
in
gs
pop
push
loop
push
push
dec
stc
rcll
stos
in
push
jle
pusha
push
mov
pavgb
cmpsb
negb
mulb
dec
mov
cmpsl
lret
lods
lods
push
lock
mov
inc
pop
cltd
push
aaa
mov
jae
and
iret
insl
mov
hlt
ficompl
outsl
push
jns
lahf
sbb
dec
cli
subb
cmp
push
popa
jg
jns
sarl
je
aaa
jl
mov
shlb
das
sub
mov
loopne
cmp
mov
fwait
jns
mov
outsb
jnp
stos
mov
lahf
mov
mov
filds
clc
or
push
pop
and
sbb
cltd
outsb
ds
leave
mov
scas
jne
cs
mov
test
dec
icebp
out
jg
mov
jmp
mov
adc
cs
jp
test
fistl
jae
subb
les
push
arpl
bound
aam
fs
jle
and
add
int3
ljmp
cltd
jmp
sbb
jns
jo
pop
lds
mov
call
xor
insb
mov
sub
les
out
sbb
pop
jle
aad
jecxz
inc
ret
xchg
ja
adc
push
pusha
fmull
stc
dec
jbe
sbb
mov
leave
inc
push
lock
mov
out
aaa
sub
mov
dec
jg
sbb
mov
dec
cmp
outsb
out
xor
jg
mov
out
sub
or
scas
jp
aad
ret
mov
andb
fcoml
add
pop
fwait
enter
out
inc
xchg
cmp
aaa
mov
xchg
dec
mov
push
loope
mov
adc
cwtl
push
pop
imul
aas
in
add
adc
sub
sti
add
std
pop
sub
fs
sub
xchg
or
inc
cld
push
inc
sub
nop
xchg
mov
lcall
cmpsb
jnp
outsb
sti
fisubs
push
lock
shlb
sub
cmp
sub
xor
add
sbb
jnp
jge
ljmp
push
repz
push
cltd
aad
mov
add
jne
sbb
es
in
pop
inc
insb
inc
jae
sub
jge
movsb
add
shl
dec
cs
cwtl
and
or
xorl
sti
add
std
pop
sub
fs
sub
xchg
or
inc
cld
push
inc
sub
nop
xchg
mov
lcall
cmpsb
jnp
outsb
sti
fisubs
push
lock
shlb
sub
cmp
sub
xor
add
sbb
jnp
jge
ljmp
sub
dec
sahf
stos
fdivs
andl
jb
pop
cmp
mov
scas
cmpsl
int3
outsl
dec
into
popa
inc
mov
mov
jae
mov
sub
or
inc
cld
push
inc
sub
nop
xchg
mov
mov
and
ftst
shll
xor
push
push
aam
and
lock
shlb
sub
cmp
loope
hlt
mov
sahf
push
pop
pop
pop
pop
sub
nop
loopne
xor
arpl
mov
mov
add
mov
loope
pop
sahf
push
imul
pop
pushf
and
out
stos
jno
xchg
pop
xor
pop
lock
shl
call
sub
add
xchg
or
jae
inc
int3
jl
movsl
subl
jae
sub
pushw
push
jp
sbb
sub
lcall
in
xlat
pop
push
in
cmpsb
daa
dec
push
loope
add
test
mov
loop
scas
xchg
lahf
out
pop
jo
pop
fwait
les
fcomps
jns
dec
pop
das
gs
cltd
aad
mov
add
jne
sbb
es
in
pop
push
mov
cmp
and
aad
rcl
out
xchg
push
popf
mov
fmull
push
in
sbb
js
sbb
sbb
nop
adc
xlat
mulb
cmp
mov
and
scas
sahf
xor
mov
xor
iret
mov
lea
or
cmc
fnstenv
cmc
imul
rorb
xchg
add
inc
hlt
mov
or
mov
shlb
dec
xor
or
fadds
nop
push
bound
mov
pop
cmpsl
lret
jecxz
jb
inc
push
int3
imull
xchg
mov
mov
lea
in
mov
lahf
sub
sarb
push
xchg
lods
mov
ja
imul
mov
cmpb
inc
or
pop
and
stc
insl
sub
xlat
push
cli
rcrl
and
xchg
insl
mov
mov
pop
outsb
loop
cmpsb
mov
inc
repz
call
inc
pop
cmp
cli
shl
mov
cmp
cmpsl
push
xor
xchg
ss
mov
jae
mov
sub
or
inc
cld
push
inc
sub
nop
xchg
mov
mov
and
ftst
shll
xor
push
push
aam
and
lock
shlb
sub
cmp
mov
inc
xor
pop
pop
sub
nop
xchg
jae
aad
push
loope
add
sub
shlb
cmpsl
sub
test
dec
jnp,pt
inc
pop
into
inc
cli
mov
adc
sbb
pusha
mov
ja
or
mov
das
jns
in
cmpsb
pop
dec
push
cmc
cli
ffree
mov
pmulhuw
fwait
inc
movsb
cmp
mov
int
sub
lcall
add
push
setge
stc
iret
cld
and
inc
add
mov
xor
test
subb
stos
fwait
fs
pop
inc
jecxz
jno
sub
loope
repnz
adc
xchg
xchg
scas
test
mov
decb
mov
and
sub
inc
mov
pop
jl
sub
in
mov
int3
pop
push
inc
fistpl
fcmovu
xlat
nop
leave
xor
ss
push
cmp
out
dec
enter
cmpsb
aam
mov
sub
pop
lods
push
in
int
sub
enter
stos
fwait
fs
pop
inc
jecxz
jno
sub
loope
repnz
adc
xchg
xchg
scas
test
mov
decb
mov
and
sub
inc
mov
pop
jl
sub
in
mov
int3
pop
push
inc
fistpl
fcmovu
xlat
nop
leave
xor
ss
push
cmp
out
dec
enter
cmpsb
aam
mov
sub
xor
cmp
sbb
mov
push
cmp
data16
mov
mov
xchg
popa
pop
mov
shrl
push
sbbb
inc
enter
mov
repz
mov
adc
adc
and
cmp
test
pop
push
mov
adc
push
les
loopne
iret
jb
shlb
push
cmp
lcall
adc
cmpsb
movsb
inc
jle
and
arpl
sub
sub
shlb
fisubrs
jmp
aad
movsb
jg
xor
xor
dec
xlat
ds
push
stos
lock
xor
and
int3
dec
scas
dec
sub
dec
mov
jp
add
inc
push
jp
push
cli
push
or
sub
aaa
shll
dec
cmp
add
lret
enter
lods
ret
pop
push
mov
mov
lret
lods
or
xchg
stos
xchg
lret
imul
dec
in
popa
dec
outsb
adc
sub
mov
es
pop
mov
mov
fsts
cmp
pushf
xchg
inc
mov
mov
xor
xchg
fldcw
dec
pop
jl
clc
cmp
cmpsb
iret
mov
es
xor
aas
sbb
xchg
and
mov
push
or
ror
popa
rcll
sahf
js
pop
xchg
pop
mov
lds
mov
fdivs
call
in
sbb
fidivs
push
test
dec
popf
orl
jl
pop
hlt
popa
std
cmc
fstps
jns
xlat
fdivp
js
stos
mov
les
sti
pop
ds
jg
lea
fistps
cmp
xchg
push
cltd
lcall
movb
stos
cmp
push
pop
dec
inc
or
push
lds
adc
jge
pop
icebp
jge
inc
inc
xchg
rorl
lea
loop
push
cmpsb
push
xor
mov
xchg
ja
jmp
test
pop
or
sbb
cltd
loopne
cmc
inc
andl
jp
jmp
mov
or
insb
pop
jecxz
sbb
out
or
ret
xor
cmp
xor
stos
mov
les
sti
pop
ds
jg
lea
fistps
cmp
xchg
push
cltd
lcall
movb
stos
cmp
push
pop
dec
inc
or
push
mov
xchg
xor
sbb
or
cmp
test
movsb
imul
shr
mov
sub
je
xchg
imul
ja
stos
sub
rorb
ds
add
lret
addl
jbe
inc
out
add
outsb
sbb
jo
loope
add
sti
pop
ds
jg
lea
fistps
cmp
xchg
push
cltd
lcall
movb
stos
cmp
lea
sar
sub
stos
cmp
scas
lods
shll
mov
xchg
lahf
out
pop
jo
pop
fwait
xlat
cmp
lea
test
and
xor
js
stos
fwait
xchg
push
push
les
and
pop
in
pop
mov
xor
ss
or
test
out
data16
rcrl
cmp
sbb
dec
or
outsb
stos
pushf
xor
in
scas
hlt
insb
mov
in
xlat
into
xchg
pop
push
adc
adc
pop
cmp
call
outsb
arpl
scas
dec
or
shrl
dec
dec
cwtl
cld
xor
testb
sbb
sbb
adc
push
aam
mov
adc
mov
xchg
sahf
and
adcl
mov
xor
push
jp
fsubrp
inc
inc
xlat
aaa
cwtl
xor
jb
ss
fcmove
xchg
lock
pop
aaa
add
and
test
mov
out
inc
adc
sub
adc
lret
mov
inc
fcoml
inc
and
aad
test
mov
int3
jnp
aaa
cld
pop
push
addr16
aad
shl
popa
adc
add
daa
rcl
into
loop
inc
mov
lock
push
notl
xchg
lahf
out
pop
jo
pop
fwait
les
fcomps
mov
lea
xor
in
mov
hlt
cld
jmp
pop
lret
jmp
sbb
insb
scas
mov
inc
mov
fcoml
mov
jg
add
mov
pop
std
cltd
sbb
xor
mov
inc
ljmp
loopne
cmpsl
int3
jnp
aaa
addr16
popf
and
shl
mov
pop
cmp
subl
sbb
xor
pop
leave
xchg
icebp
add
jns
push
mov
scas
add
sbb
push
inc
mov
clc
mov
pop
pop
push
push
sub
cltd
jo
pop
dec
fidivs
xor
arpl
loope
xlat
ljmp
sbbb
insb
loope
push
ret
xor
or
xorb
jno
call
mov
loope
mov
in
pop
sub
rcrl
push
fildl
xchg
pop
mov
mov
das
cld
xor
inc
pop
jbe
cmp
lds
nop
icebp
mov
jae
push
outsl
movsl
dec
shlb
stos
enter
or
outsl
sti
mull
ret
mov
xchg
xchg
sub
pushf
jnp
add
mov
je
stc
xor
notl
mov
mov
xchg
cmp
gs
shlb
clc
mov
mov
mov
inc
stc
inc
cmp
fs
inc
fstps
cli
rcrb
les
rorb
mov
jmp
fldl
mov
xor
daa
mov
cli
imul
cmp
fcmovnbe
cmc
pushf
mov
sub
dec
cmpsb
mov
gs
dec
lret
cmc
lods
xor
jge
fisubrs
mov
incl
repnz
cmpsl
sub
pusha
lea
mov
inc
stc
inc
cmp
fs
inc
and
push
outsb
popa
jno
add
les
mov
pop
cmpsl
sbb
add
aaa
mov
sbb
cmpsl
and
pop
xchg
push
iret
sub
testb
and
dec
mov
aas
popa
sti
or
scas
fsubrl
out
int
ja
cmpsl
mov
filds
aas
popa
sahf
sub
sub
jno
mov
fsubr
fwait
mov
das
je
stos
std
push
f2xm1
dec
pusha
lcall
test
sub
add
hlt
dec
ds
push
mov
rcrb
lea
jge
add
push
mov
stos
adc
jo
in
out
xor
sub
xor
adc
xchg
orb
push
mov
inc
and
popl
sbb
out
xor
inc
sub
jl
gs
dec
sbb
and
mov
xchg
shl
fldt
in
mov
and
js
push
test
insl
int
or
stc
sub
sti
mov
cmp
adc
and
pop
pop
pop
mov
fistps
jnp
popf
sub
jl
inc
pop
fnsave
push
ljmp
nop
pop
adc
pop
nop
adc
fld
xor
les
repnz
mov
or
test
push
cmp
insl
adc
xchg
aam
orb
or
out
ficompl
sbb
in
cmp
fdivr
pop
je
data16
cmp
mov
movsl
pop
mov
bnd
es
jecxz
jmp
mov
bound
jecxz
das
loopne
outsb
outsl
add
outsb
jo
mov
in
jp
lea
loop
push
jbe
cli
pop
mov
ss
inc
notb
mov
and
aam
add
hlt
jne
fdivr
repnz
arpl
or
pushf
or
dec
int
jl
push
jge
cmpsl
add
fs
pop
or
scas
jl,pn
push
add
test
sbbl
clc
inc
jae
aaa
xor
jge
inc
dec
pop
and
js
jecxz
push
dec
fistl
jns
jmp
clc
addl
and
cwtl
fwait
loopne
dec
add
dec
loop
pop
nop
jge
jno
inc
pop
xor
out
fstpt
jnp
mov
sbb
imulb
daa
cmp
arpl
out
jae
push
sbb
push
leave
pop
cmp
out
ror
fsubp
xchg
fwait
lds
pop
shrb
push
jecxz
in
xor
push
loopne
ljmp
fisttpll
and
lret
push
jo
test
pop
call
mov
xor
add
pop
fidivs
std
jno
stos
add
cmp
xchg
dec
in
fiaddl
ljmp
lret
xor
mov
lock
adc
decl
jle
loope
fnsave
cld
jmp
iret
scas
pop
fisttps
cmpl
stc
and
fldenv
mov
test
mov
push
lret
cmp
xchg
lock
jb
in
mov
pop
dec
jge
in
das
test
pop
das
dec
mov
test
cli
call
xrelease
or
xor
dec
aad
into
push
negb
ficoml
xchg
jmp
out
mov
fdivrs
mov
cmp
push
adc
cmc
insb
mov
adc
nop
mov
and
or
fwait
push
and
cmp
lcall
xor
or
pop
cmpsb
dec
das
inc
push
stc
mov
jge
mov
xchg
bound
sbb
nop
mov
fwait
push
adc
sub
add
push
and
sub
mov
vpsrld
mov
filds
adc
sbb
xor
mov
movsl
mov
or
and
stc
sbbb
add
pushf
in
mov
jnp
jb
jp
shlb
fldl2e
dec
xor
fwait
mov
ficomps
cmp
jmp
pop
and
insb
adc
fsubs
mov
mov
out
mull
movsb
sbb
loopne
xchg
sub
enter
xchg
movsb
pop
or
enter
jmp
and
mov
int
push
in
fs
bound
jb
into
adc
shll
dec
cmc
gs
adc
mov
filds
stc
xchg
lock
out
cmp
sub
js
int
xorb
data16
insb
sbb
mov
in
out
out
pop
ljmp
pusha
sub
jbe
mov
dec
ja
sub
inc
cmp
dec
fs
out
pushf
mov
fisubrl
jne
jns
inc
cmc
lret
adc
cli
scas
xchg
mov
jns
xlat
sbb
and
lds
cmpsb
cltd
mov
add
push
inc
dec
jno
mov
gs
hlt
and
jl
sti
arpl
add
fsubl
mov
mov
pop
adc
jno
pop
xor
push
addr16
push
cmpsl
fwait
push
jb
icebp
aas
or
scas
iret
shl
sbb
add
popl
jbe
into
push
in
fcmovu
daa
dec
icebp
or
mov
pushf
sbb
rorb
jbe
addb
and
aas
cwtl
mov
push
cld
aad
mov
loopne
filds
ret
stos
mov
push
adc
adc
cmp
ficompl
add
dec
lods
fistl
iret
cmpsb
leavew
clc
in
sbb
pop
cli
mov
xor
push
dec
test
loope
jecxz
mov
leave
loope
data16
mov
dec
pop
xchg
sbb
lret
jnp
ret
popa
dec
ja
lods
add
pop
and
cmp
call
outsl
sub
mov
push
push
pop
xor
cmpb
in
mov
lret
movsl
adc
adc
add
mov
cltd
xchg
imul
fst
nop
leave
xor
ss
push
cmp
out
dec
enter
cmpsb
aam
mov
rorl
fisubs
loop
jne
cmpsb
dec
or
jg
push
paddsw
test
outsl
stc
add
fwait
cli
and
jge
iret
stos
cltd
add
ret
xor
or
insb
sti
mov
test
mov
inc
pop
sub
dec
js
call
pushf
insb
mov
aad
xchg
adc
cmc
add
or
das
pop
add
mov
or
mov
ja
xchg
popf
and
mov
add
and
fisttpl
mov
movsl
pusha
push
and
lock
sbb
push
aas
dec
xorps
test
and
mov
cld
adc
cmc
add
mov
pop
outsl
inc
test
test
push
dec
add
and
test
inc
xor
mov
bound
movsb
sub
pop
sti
or
and
jmp
push
in
popa
mov
fiaddl
in
sub
enter
mov
idivl
lods
push
and
fisubl
dec
in
lcall
mov
iret
pushw
rol
imul
adc
mov
outsb
test
pop
out
sbb
fbld
push
fsub
out
aam
jle
lods
jle
sub
inc
push
decl
jne
mov
jp
xchg
cs
add
sbb
js
std
push
xchg
push
add
fcoms
and
fmul
lcall
cmp
stos
lret
loop
icebp
outsb
pop
add
in
add
ss
inc
mov
inc
pusha
mov
adc
lea
movl
xchg
inc
pop
push
xchg
clc
inc
mov
and
shlb
pop
xor
jle
mov
enter
mov
idivl
lods
push
and
fisubl
dec
in
lcall
mov
iret
pushw
rol
imul
adc
mov
outsb
test
pop
out
sbb
fbld
push
fsub
out
aam
jle
lods
jle
sub
inc
push
decl
jne
mov
jp
xchg
cs
add
sbb
js
or
cmp
arpl
and
dec
jmp
sub
enter
push
rolb
test
mov
cltd
or
lcall
in
inc
and
test
dec
scas
aaa
dec
mov
adc
xchg
flds
xchg
dec
repnz
fs
add
pop
sub
sub
js
mov
mov
jno
and
in
and
inc
mov
test
jp
mov
fbld
push
mov
popf
push
jae
and
inc
push
ss
into
mov
jecxz
or
xlat
xchg
ss
movsb
add
test
fildll
incl
roll
gs
adc
mov
dec
mov
push
addr16
xor
fwait
test
adc
sbb
xor
lret
or
mov
push
repz
mov
sub
scas
lods
jbe
aas
cmp
rcrb
and
arpl
mov
dec
inc
loop
cmpsl
ljmp
jp
dec
mov
add
in
lds
into
in
ret
xor
and
je
pop
daa
adc
leave
cmp
cwtl
cwtl
in
pop
inc
push
in
inc
mov
sti
lods
add
dec
jb
cmp
inc
pop
pop
scas
clc
sbb
dec
es
dec
mov
and
ret
adc
rolb
or
lret
imul
jns
adc
ljmp
nop
inc
add
rcrl
popa
jno,pt
lds
leave
push
cmp
ja
aad
mov
pushf
dec
inc
xlat
pop
gs
outsl
mov
xchg
push
jne
fidivrs
mov
jmp
mov
jmp
or
dec
lds
aaa
push
mov
je
push
arpl
xchg
ss
mov
jg
inc
stc
push
std
out
adc
inc
push
scas
call
cmp
jecxz
jno
or
mov
push
jle
fadds
jae
into
and
mov
xchg
std
adc
fidivrl
push
xchg
bound
daa
iret
mov
and
fildll
incl
roll
gs
adc
mov
dec
mov
push
inc
cmp
pushfw
test
adc
sbb
xor
lret
or
mov
push
repz
mov
sub
scas
lods
jbe
aas
cmp
rcrb
and
arpl
mov
je
push
ror
inc
sub
std
fndisi(8087
addr16
notl
sbb
sub
or
or
inc
xchg
jg
in
movsb
scas
mov
fisttpll
fs
jecxz
mov
push
jns
gs
xchg
in
adc
lods
cmp
aaa
mov
loope
test
out
in
sub
std
pop
cltd
jle
test
adc
xchg
fldenv
mov
push
into
cmpxchg
imul
fsubrs
int3
sahf
cmpsb
pop
and
mov
daa
jp
adc
dec
aas
add
dec
outsb
sub
out
pop
loopne
pop
xchg
jle
xchg
sbb
push
or
lret
cmp
jo
and
push
pop
mull
rcl
or
sahf
cmpsb
pushf
mov
jno
shr
shlb
test
sub
pusha
lea
dec
aas
xor
or
jl
jp
cltd
pop
dec
mov
jnp
or
xchg
push
aad
fdivrs
push
fsubl
xchg
and
aaa
xor
mov
cwtl
fsubl
in
sub
pop
cltd
xchg
add
std
sbb
xor
xlat
cmpsl
dec
int3
or
xchg
mov
jbe
jnp
push
fbld
or
push
jae
psubw
jnp
xchg
cmp
in
add
js
in
or
fs
mov
adc
or
cmpsl
mov
das
dec
jno
mov
fimuls
orb
mov
add
cmc
inc
je
jmp
loope
push
cwtl
rolb
stos
shl
mov
push
mov
pop
testl
dec
push
pop
or
std
adc
subl
xor
sbb
push
jle
add
icebp
fidivrs
test
hlt
sub
add
mov
aam
test
rcrl
fldenv
addr16
leave
xchg
jo
hlt
cmp
mov
jle
leave
iret
shlb
out
jmp
sarl
jle
lds
adc
ja
hlt
movsb
sarb
add
dec
push
mov
pop
cld
sbb
cld
push
lret
xor
subl
sbb
pushl
ja
flds
jmp
add
fwait
xchg
sbb
push
cmp
dec
xchg
loop
out
lcall
jo
or
xor
mov
dec
fnstsw
xchg
adc
jl
add
adc
or
xor
insl
test
cs
fwait
pop
jmp
sbb
add
test
xlat
xchg
bound
leave
xchg
repnz
jns
mov
xchg
push
aas
stos
sub
xor
dec
pop
adc
pop
mov
mov
sub
jecxz
hlt
pop
add
fcoml
mov
lea
add
arpl
mov
cmp
cs
pop
pop
adc
repnz
lahf
gs
out
nop
xor
pop
or
ja
out
jg
into
lds
dec
out
les
pop
testl
cs
cltd
mov
in
fisttpl
xchg
inc
jl
sub
jae
lret
jno
mov
popa
sub
out
sbb
ds
pop
out
mov
rclb
xchg
push
in
aad
dec
shlb
add
fwait
xchg
sub
pop
jo
jg
mov
xchg
adc
stos
leave
popf
pop
and
cmp
lret
imul
push
outsb
mov
das
push
mov
fdivrl
insl
jnp
mov
mov
jae
xor
sub
js
inc
jge
inc
add
popf
mov
xchg
mov
dec
imulb
cmp
cmp
inc
jl
insb
sub
cmc
and
push
out
xchg
mov
jle
fdivr
dec
daa
add
jg
jl
ret
into
rcl
int
inc
repz
rolb
pop
sub
push
xchg
lds
or
ret
sahf
fwait
hlt
xor
cld
jne
sub
inc
addr16
jbe
add
mov
cltd
call
mov
mov
ficoml
cmp
jecxz
adcb
in
mov
mull
repz
pop
xor
xlat
mov
sbb
xor
push
hlt
popa
outsb
cmp
jmp
leave
mov
sti
outsb
pop
ret
cli
cmp
and
sbb
adc
push
int
mov
fisubs
push
outsb
test
int
lret
js
clc
test
xchg
scas
mov
xor
in
ret
scas
xlat
add
sub
ret
lds
dec
cmp
pusha
mov
psrad
cmpsb
adc
xlat
repnz
dec
and
or
cwtl
push
and
pop
clc
jo
int3
mov
jbe
mov
pop
scas
sbb
lods
push
rorl
sar
rolb
lret
loop
xor
or
ror
or
out
add
pop
pop
push
ljmp
dec
popa
cltd
subl
jne
push
push
xor
xchg
clc
jecxz
orl
push
xchg
xchg
sub
lds
dec
or
and
or
inc
out
test
jne
inc
lock
in
sub
mov
mov
adc
mov
rcll
ret
and
jl
xchg
movsb
and
sub
push
out
add
pop
pop
sub
ljmpw
notl
movsl
adc
in
push
subl
ds
cmp
push
out
add
pop
pop
xor
inc
mov
aad
sbb
lds
int
movl
xchg
push
popa
idivl
in
test
cwtl
add
jno
cmpsb
hlt
mov
jp
gs
pop
inc
xchg
pusha
lods
or
mov
aaa
lock
xor
jns
inc
mov
mov
sti
jne
pop
js
cmp
arpl
pop
shll
pop
daa
loopne
shl
push
dec
sbb
je
pusha
out
add
frstor
stos
ss
pop
sahf
sbb
dec
mov
sub
mov
popa
cld
mov
stos
xor
popa
mov
add
lret
xor
jno
mov
call
pop
pop
jle
xchg
adc
push
popf
test
mov
aaa
jl
pushf
cmp
sbb
cltd
repnz
cli
dec
jl
jg
xor
mov
adc
add
ja
lcall
in
fcompl
sti
sub
addr16
push
jg
pop
pop
subl
ret
jl
stos
lea
into
lods
mov
xor
testl
popf
into
ss
sbb
std
inc
or
cmpl
mov
mov
mov
mov
sbb
scas
stc
lods
js
jns
leave
mov
dec
and
adcb
inc
jne
iret
jb
loop
sbb
pusha
fs
into
popf
in
jno
and
fucomi
pop
xchg
scas
inc
movsb
inc
cmp
mov
jbe
sahf
fidivrl
xchg
cmp
mov
frstpm(287
fiaddl
int
jge
nop
inc
jbe
clc
fcoml
xchg
adc
loop
inc
pop
fdiv
shll
mov
and
ljmp
jo
jge
icebp
mov
adc
push
dec
inc
sbb
and
adc
sub
mov
pop
or
outsl
das
mov
mov
or
xchg
imul
es
mov
mov
in
jne
or
push
inc
sbb
jno
mov
push
out
std
dec
adc
je
stc
sub
xchg
iret
ljmp
ss
push
insb
loopne
sbb
mov
lods
repnz
mov
imul
inc
push
scas
loop
inc
in
fistpl
jno
fcmovnb
jl
jb
int3
roll
scas
fcmovu
scas
push
movsb
addr16
mov
sub
mov
sub
and
les
push
aad
es
or
jmp
out
roll
lock
fildl
cld
cmp
add
inc
pop
push
xchg
lret
xchg
push
xchg
cmpsl
xchg
dec
jb
jae
ds
xchg
dec
enter
mov
xor
cmc
or
lret
adc
rorb
pop
in
movsb
imul
mov
sub
mov
xor
in
xor
repz
in
adc
into
dec
add
xor
push
js
or
add
andl
xor
and
mov
ret
xchg
gs
movsl
loopne
loope
mov
mov
es
add
nop
hlt
mov
daa
call
jns
fdivrl
cmpsb
jmp
xchg
and
es
sbb
mov
lods
fs
jnp
jbe
pusha
inc
imul
mov
js
xchg
jb
adc
in
ljmp
repnz
lret
cwtl
mov
pop
pop
add
xchg
test
enter
dec
lcall
mov
pop
push
sysexit
dec
icebp
cmp
adc
scas
mov
push
mov
aas
mov
filds
les
pop
in
dec
jb
or
jns
cwtl
or
inc
or
xchg
scas
mov
sub
push
ja
les
pushf
xor
cmpsl
mov
rorl
mov
lock
lods
loop
jo
xchg
dec
jmp
jb
mov
or
out
subb
hlt
and
insb
negb
mov
rorb
or
push
mov
ja
insb
mov
je
adc
mov
xor
in
and
jle
in
sub
div
dec
movsl
rcll
je
pop
mov
loope
mov
mov
sub
push
and
dec
insl
loope
add
dec
mov
and
jbe
in
orl
or
xchg
loopne
or
pop
dec
cmp
pop
aam
lcall
std
xor
sbb
push
inc
add
and
mov
and
sbb
pop
push
cmc
jb
add
lahf
call
imul
lods
dec
xchg
insl
ficomps
jle
je
and
adc
outsl
dec
xchg
sub
dec
cmp
jbe
and
adc
pop
ds
lds
mov
mov
lahf
and
add
cmpsb
testb
lahf
push
mov
mov
cltd
push
mov
fbstp
jl
dec
push
int
add
sbb
lret
or
and
mov
addr16
mov
scas
mov
lcall
lods
pushf
add
outsl
fs
subb
adc
push
sbbl
mov
inc
xchg
loope
scas
jns
out
cld
dec
mov
rcr
loopne
fwait
aaa
mov
shl
fadds
fs
cmp
lcall
int3
repnz
out
lods
test
sub
ds
sub
pop
xor
jnp
inc
mov
fsubl
out
xchg
mov
cmpb
pop
cmp
pusha
and
mov
or
mov
push
fcoml
out
cmp
test
pop
push
daa
jbe
mov
push
rorb
cmpb
notb
aam
arpl
mov
testl
leave
faddl
mov
lock
mov
or
jns
adc
lock
sti
test
test
pop
ss
push
mov
sarl
push
ljmp
das
sbb
out
call
sbb
cli
adc
sahf
adc
mov
jbe
js
add
jg
cmp
popf
cmpsl
mov
pushw
jl
fbstp
pop
xchg
xchg
cli
jns
js
test
sbb
fstpl
sbb
push
outsl
loope
cli
daa
or
ds
xor
fwait
mov
push
xchg
std
pop
add
jo
mov
stc
sub
mov
cmp
sbb
and
jl
jg
mov
insb
mov
mov
int3
dec
cmpsl
sub
insb
fcomi
pop
arpl
add
xchg
jo
cmp
cmp
xlat
xchg
aam
mov
mov
adc
adc
test
aaa
mov
inc
sbb
stos
loop
mov
mov
scas
dec
pop
lcall
rol
pop
xchg
ja
test
sbb
pop
adc
ror
mov
std
dec
xor
nop
pop
and
push
xchg
fnstenv
clc
fs
incb
cmp
or
sti
insb
fidivl
psrad
and
pop
sahf
mov
xor
jbe
test
xchg
out
adc
xlat
inc
jo
inc
sbb
push
xchg
ljmp
dec
jbe
insl
test
fwait
sbbb
pop
dec
xor
out
sti
xchg
popa
and
add
scas
lods
dec
sbb
xchg
jmp
sbb
mov
scas
fwait
lahf
fistl
mov
xorb
lret
cmp
jecxz
push
mov
cmp
mov
inc
mov
fmull
jns
cs
mov
das
daa
scas
scas
xchg
lret
cltd
lret
loope
sub
into
xchg
pusha
add
int
or
and
add
dec
or
fildl
push
jne
push
fistpll
pop
xsha1
cmpsb
iret
mov
es
mov
filds
and
leave
and
movsb
pop
push
mov
icebp
mov
inc
in
insl
popa
imul
jno
inc
aaa
xchg
inc
repnz
loope,pt
and
lret
jae
cmpsb
inc
pop
mov
inc
add
sarl
jmp
xor
popf
adc
insl
rcr
outsb
addr16
dec
xchg
inc
jb
adcl
jns
movsl
ja
lahf
push
dec
mov
addr16
aas
jo
movsl
sahf
mov
and
mov
mov
cmpsb
arpl
mov
sbb
push
stc
popw
scas
pop
jle
xchg
divb
movsb
or
or
dec
lds
push
adc
xor
pop
std
sbb
lea
test
popa
out
mov
leave
inc
cmp
sbb
shl
push
cwtl
pop
movsb
jbe
cmpsb
test
mov
call
adc
mov
xorb
pushf
and
mov
mov
or
or
dec
and
mov
pop
mov
mov
push
cs
loopne
mov
jbe
daa
or
pop
add
fs
mov
xorb
push
mov
mov
mov
mov
outsb
xchg
stos
inc
sub
add
ss
dec
mov
cltd
aas
test
shr
outsl
mov
mov
add
dec
inc
fists
test
jg
push
sub
and
xor
mov
cmp
xchg
daa
inc
lock
xor
inc
stos
or
test
sbb
adc
into
in
sbb
out
jns
xor
mov
xorb
sub
fs
enter
xchg
and
mov
lret
xchg
fidivl
ficompl
add
pop
andb
mov
in
push
or
xchg
pop
jmp
jecxz
mov
lods
dec
mov
in
push
push
out
out
inc
push
mov
mov
jns
push
insl
xor
ss
sarb
imul
jle
push
and
xchg
js
dec
imull
xchg
mov
dec
mov
bound
movsl
js
and
cltd
mov
into
cmp
lods
lock
jb
cmp
xchg
lahf
dec
cmpsb
inc
mov
fsubs
shll
int3
out
shrb
pop
es
ret
cmp
movl
aad
fldt
lcall
jg
inc
xchg
jo
adc
test
jge
pop
xor
mov
ret
cmp
inc
cmp
add
imul
test
xor
scas
jmp
xchg
addr16
imul
sahf
adcb
push
orl
and
insl
fnstsw
or
out
dec
mov
lcall
inc
adc
push
das
fucomip
xor
mov
cltd
xchg
or
push
stos
fdivl
xor
nop
clc
leave
cmp
push
add
xchg
fcmovu
xchg
xor
mov
and
inc
add
icebp
aam
adc
in
cld
int3
cmp
enter
fstpl
pop
sbb
push
inc
mov
fs
cmp
ljmp
fsub
cmp
xchg
pop
inc
clc
clc
in
pop
xor
daa
inc
sarl
mov
pop
sbb
cmp
int3
insl
lods
push
cmp
aam
mov
push
ja
jle
adc
mov
sbb
mov
push
xor
dec
dec
jecxz
sbb
lret
adc
mov
fs
je
add
test
adc
sahf
daa
jecxz
add
mov
push
cld
les
mov
or
mov
cmp
and
fmul
jle
idivb
movsl
rorl
rcl
es
add
inc
xchg
lods
movsl
xchg
scas
ds
mov
jbe
add
xor
imul
cld
cmp
nop
jbe
inc
dec
pop
inc
and
push
lahf
rcrb
add
cltd
shrb
fidivrl
popf
cmp
mov
cmp
call
enter
enter
lret
dec
lods
loopne
dec
dec
stos
ret
pusha
and
push
xchg
int3
mov
lds
fldcw
shlb
outsb
scas
jne
in
push
stos
xor
push
sahf
pop
dec
ja
jnp
ror
jge
push
push
xor
in
jl
scas
cmp
roll
or
jb
or
outsb
popf
sar
jle
in
sbb
daa
sub
dec
jne
ss
jbe
and
daa
jae
test
test
and
adc
in
pop
pop
push
lods
sbb
mov
mov
inc
mov
sbb
mov
add
push
inc
cmp
clc
dec
inc
pop
pop
sbb
enter
jmp
pop
mov
sbbl
xor
and
sti
and
sahf
fildl
out
loop
repnz
call
daa
jp
jl
dec
das
jmp
add
data16
mov
filds
aaa
test
mov
cmp
int
lods
leave
ljmp
inc
ds
cmp
pop
mov
jo
adc
jno
push
nop
movsl
enter
dec
xor
lods
leave
xor
xchg
mov
into
fstpt
jne
mov
lea
or
add
cmp
cltd
dec
btr
adc
daa
lods
nop
daa
push
adc
mov
and
add
mov
lock
test
push
adc
rorl
jl
fimuls
sbb
mov
mov
adc
xor
mov
stos
dec
push
xchg
pop
pop
cmp
repz
loop
imul
imul
pushf
pusha
aaa
inc
mov
inc
jp
lods
mov
js
or
testl
dec
inc
xchg
mov
and
andb
dec
mov
add
mov
xchg
subl
out
mov
mull
jmp
push
daa
pushl
sbb
jnp
das
inc
adc
enter
ret
cmp
xor
incb
daa
repnz
aam
imul
in
mov
insl
pop
addb
js
imul
or
dec
pop
mov
pushf
jbe
into
out
sarl
add
xor
lcall
jo
xor
je
jl
mov
dec
enter
loop
insl
inc
mov
jb
cs
inc
test
mov
mov
xor
jnp
in
push
andb
mov
aaa
test
jmp
out
les
int
subl
mov
sub
push
addr16
xchg
dec
imul
xor
lcall
jnp
push
add
xor
ret
jg
or
xor
mov
andb
mov
push
out
fwait
aam
xorl
ss
mov
rcrb
lret
dec
pop
imul
xor
in
cmpsl
and
dec
in
dec
pop
inc
gs
mov
push
clc
jle
popa
inc
cmp
sbbb
loop
sub
cli
and
jns
lods
and
add
fmul
pop
out
lea
popf
in
pop
jle
test
jne
lods
cwtl
mov
sub
iret
imull
sub
lock
mov
mov
fwait
mov
rcrb
add
jl
fists
xor
mov
push
sbb
cltd
ja
dec
in
ud2
pusha
es
dec
stos
lret
jno
lret
movsl
lret
mov
cmp
jnp
sub
sbb
std
adc
lds
dec
and
push
fldt
fwait
xchg
movsl
adc
lret
adc
popf
out
sbb
pop
movsb
rcrb
lret
and
pop
or
jo
mov
ret
ja
bswap
mov
scas
jo
sarb
sbb
lods
push
sbb
cwtl
lock
mov
int
inc
roll
in
xchg
sub
lods
popf
cmp
pop
adc
adc
inc
mov
xchg
ljmp
pop
and
hlt
dec
push
out
aad
movaps
test
repnz
jno
gs
dec
push
insl
stc
data16
movsb
rcrb
pop
shlb
movsb
popa
call
in
lods
mov
inc
outsb
rcl
pop
dec
mov
inc
lods
insb
xor
inc
pop
mov
pop
push
lods
jecxz
adc
sti
and
pop
fcmovnbe
jo
push
enter
cmpsb
xchg
out
jmp
adc
cltd
cwtl
push
aam
add
sbb
dec
ficompl
mov
filds
das
outsl
int
inc
jne
popf
cmp
arpl
faddl
test
xor
mov
xlat
cmp
add
pop
int
movsb
roll
out
imul
cmp
scas
sbb
pop
mov
filds
adc
mov
push
daa
sarb
mov
mov
clc
pop
sub
pop
stc
dec
push
adc
lock
stc
or
xchg
out
dec
lods
push
fistps
int3
call
jae
add
jl
cwtl
out
mov
mov
icebp
hlt
negb
cmp
shll
stos
adc
fldenv
int3
mov
xchg
lea
or
sbb
rorl
xor
mov
test
ret
stos
add
std
adc
lods
sub
js
out
das
icebp
push
cli
mov
dec
daa
sahf
adc
jge
scas
addl
mov
push
mov
popa
in
icebp
int3
mov
nop
imul
add
lahf
shlb
imul
cmp
movsb
add
jge
das
sbb
jg
push
ud0
sub
aas
lds
xor
sbb
rcrb
xor
xchg
xorl
lea
lods
xchg
cmp
addl
pop
mov
cmp
push
decl
mov
push
icebp
jle
adc
lock
repz
nop
mov
pop
add
mov
mov
movsl
jge
xchg
icebp
inc
mov
das
xor
sbbl
jmp
dec
mov
sbb
mov
pop
jb
xchg
lods
dec
fmuls
bound
and
mov
rcrb
xor
mov
xchg
push
lock
aaa
jge
imul
dec
jecxz
lahf
cwtl
dec
clc
fcoms
sbb
cld
xor
lret
dec
ljmp
cli
and
repnz
lock
enter
mov
in
jg
xlat
test
iret
int3
je
dec
test
cmp
andl
sbb
sti
jne
in
in
sub
lds
lea
fsubs
dec
mov
out
sbb
jmp
dec
aaa
sbb
cwtl
popa
lods
and
or
jp
dec
dec
rcrb
push
xchg
imul
push
push
mov
pop
fsubrp
pop
push
push
mov
push
sub
push
mov
jle
ret
lcall
cmc
push
sbbb
sub
jbe
cmpsb
fildl
pushf
nop
aas
nop
repz
out
add
popf
and
aam
inc
or
int3
out
sbb
lret
test
add
xchg
les
push
lods
push
jge
cli
iret
xchg
push
into
daa
xor
jmp
lock
xchg
or
shlb
bound
clc
inc
xchg
movsb
mov
jge
test
imul
xchg
jmp
xchg
cmpsl
push
dec
iret
adc
mov
aaa
fldenv
test
xchg
or
sahf
push
jbe
inc
mov
mov
mov
and
cmc
lahf
push
mov
xchg
cmpsl
sub
pusha
add
into
xchg
mov
andb
xchg
jl
xlat
imul
shll
aad
cwtl
pop
adc
popa
jmp
xor
inc
int
ja
int
test
adc
mov
and
iret
pop
adc
jge
aas
out
pop
les
divl
lds
and
adc
jne
xor
mov
inc
mov
roll
adc
jne
add
cmpsl
mov
cmp
add
pushf
jb
jmp
sbb
xchg
mov
sub
inc
cwtl
cmpsl
scas
inc
loop
adc
xor
sbb
cmp
ljmp
loopne
rclb
jle
in
xchg
incl
subb
ret
sbb
out
sub
mov
or
data16
insl
imul
shlb
in
xor
cltd
lods
cmp
sahf
push
or
add
aas
add
test
cmpsl
jbe
repnz
xor
cmpsb
out
out
fnsave
push
mov
fcmove
pop
xor
call
jb
adc
xchg
push
cmp
jecxz
loopne
mov
lods
shlb
scas
dec
sbb
or
frstor
xor
jno
xchg
outsl
push
or
int
xor
andb
push
jbe
in
sbb
cmp
sub
or
pop
cmp
push
das
adc
adc
sbbl
or
jl
lods
or
and
enter
mov
mov
xchg
sub
mov
jl
mov
inc
dec
push
and
sub
sub
and
int
pop
mov
mov
ljmp
sbb
hlt
repnz
mov
push
xor
lret
lock
rorb
pusha
push
imul
push
ret
pop
push
or
nop
rolb
mov
addl
cwtl
jb
xchg
loope
stos
imul
sbb
sbb
aaa
testl
aas
xchg
mov
dec
or
xlat
mov
push
mov
stos
dec
sub
push
movsl
loopne
adc
jo
imul
loop
dec
and
sub
js
dec
stos
sbb
lods
mov
and
jo
iret
and
inc
rclb
cmp
add
mov
inc
cmc
lds
inc
or
std
push
dec
and
cmp
xchg
mov
mov
cmp
scas
addr16
xor
enter
int3
outsl
stos
je
add
sahf
xor
testb
inc
std
xlat
imul
jo
jge
push
jp
punpckldq
pop
call
fcomps
movsb
add
shll
jb
pop
xor
or
xchg
push
mov
pop
in
cwtl
adc
int
jbe
xlat
lahf
in
in
subb
in
int3
or
adc
dec
in
pop
cltd
fcmovb
fwait
pop
call
fcomps
pop
mov
lock
dec
push
loop
and
mov
cmp
shll
fimuls
aam
fistpll
leave
movsb
iret
repnz
mov
adc
add
gs
add
out
xchg
mul
pop
or
addr16
mov
xor
in
sbb
popa
jg
inc
xchg
mov
push
jns
mov
mov
xchg
sub
insl
jno
in
loope
lds
fists
add
and
push
out
insl
jns
pop
add
mov
add
mov
loopne
mov
loope
fisubl
sbbb
jnp
or
sbb
push
into
cmp
jbe
mov
mov
fwait
jbe
lods
mov
jge
jge
js
jmp
inc
enter
mov
insl
ret
add
mov
roll
and
dec
xchg
sbb
cli
xor
push
jge
andl
fnstenv
jecxz
mulb
mov
in
xor
sub
or
cmp
and
jge
scas
mov
inc
test
enter
es
dec
bound
inc
sbb
push
dec
jne
loopne
add
mov
jb
lss
fildl
dec
int3
jg
enter
inc
imul
pop
adcl
insl
call
outsb
push
xor
inc
lret
and
icebp
ss
jle
cli
dec
ret
shl
mov
dec
cmp
add
enter
scas
jae
dec
mov
lea
stos
jns
roll
outsb
int3
inc
push
test
cs
xor
roll
outsb
int3
inc
push
lea
rcll
cwtl
or
in
into
fwait
dec
movsl
sub
xlat
in
fistl
sbb
dec
jecxz
push
into
cmp
push
dec
fucomp
lds
adc
push
les
mov
and
mov
xchg
in
sbb
xchg
mov
dec
cmpsb
xchg
xchg
add
sahf
inc
jo
and
and
pop
jo
stc
lods
jmp
lret
pop
in
xchg
cld
sbb
sbb
mov
incl
and
jnp
xchg
cmpsb
in
dec
pop
cmp
add
mov
push
cltd
arpl
xlat
jb
rcrb
leave
pop
repnz
mov
push
or
jmp
inc
push
int3
adc
jl
stos
inc
ret
or
push
rorb
mov
imul
in
mov
adc
push
cmp
push
lds
sti
sub
jg
popa
add
fisubl
inc
fcomps
sub
out
mov
cwtl
jno
pop
out
sbb
inc
outsb
sbb
xor
fcomip
sbbb
jmp
or
insl
pop
adc
inc
lret
pop
dec
std
cli
mov
adc
mov
repz
movsb
sub
push
repz
inc
fcomps
sub
add
mov
dec
inc
aad
es
popf
xchg
xchg
dec
stos
and
inc
xchg
push
cmc
or
mov
sbb
mov
inc
add
pushf
sbb
dec
in
xchg
mov
stos
ljmp
push
bound
ss
in
fwait
test
ss
dec
xchg
ss
in
fwait
push
sub
push
dec
xchg
cli
leave
jo
jmp
js
inc
mov
cmp
inc
sarb
lahf
xchg
shlb
mov
mov
out
outsl
notl
push
sbb
push
add
cmp
cmp
lret
sbb
cmpsl
adc
and
add
push
and
mov
push
cwtl
cwtl
push
jae
fiaddl
shrb
jecxz
or
movsl
inc
sub
mov
mov
ljmp
mov
inc
iret
cli
sub
dec
out
push
mov
rcrb
add
popa
jae
push
sarb
js
int3
fisubrs
and
xchg
pushf
mov
mov
dec
loopne
popa
xlat
das
pop
sub
lret
leave
cld
and
insl
push
dec
scas
add
mov
jae
mov
int
add
loopne
push
into
std
cli
dec
sbb
jae
enter
aad
js,pn
mov
and
push
inc
mov
out
and
lret
popf
mov
aad
xor
orl
jg
mov
into
loope
out
mov
pushf
mov
ss
xchg
dec
and
push
pop
sub
and
sub
cmp
or
jno
push
sub
lods
xchg
push
clc
dec
adc
outsb
xchg
and
push
clc
xchg
xchg
sub
jl
pop
jl
cmp
dec
into
pop
lret
jne
push
adc
or
pop
mov
addr16
or
pushf
mov
push
mov
add
dec
imul
sub
fistpl
test
clc
mull
sbb
xchg
dec
inc
and
das
fucomip
and
jge
lcall
outsb
rclw
lock
out
or
jl
fmul
inc
lods
aaa
in
cmc
push
pop
adc
js
pop
push
pushf
test
hlt
adc
pop
test
lahf
in
repnz
jmp
mov
cmp
xor
cli
cmp
mov
addb
ffreep
sbb
or
dec
aam
jb
xchg
sub
pop
push
test
mov
fdivp
stos
xchg
mov
push
cmp
add
or
mov
lret
sbb
and
call
lods
out
sub
les
cmpsl
rcrb
decb
xchg
dec
les
cmp
into
stc
xor
fwait
pop
sub
cli
repz
push
xchg
xchg
or
xchg
shl
xchg
cmp
push
cmc
xor
frstor
mov
std
fmull
stos
xor
sbb
mov
cwtl
mov
xor
cmp
lds
xor
adc
push
data16
lods
addr16
nop
mov
inc
sbb
xchg
pop
mov
rorl
cmpsb
cmc
add
xchg
adc
ljmp
gs
lea
clc
aad
or
dec
movsl
sti
cmp
fmull
sub
loopne
or
lret
ljmp
clc
lods
adc
fsubrs
ja
mov
mov
sub
popa
ficompl
xor
rol
loope
test
push
mov
add
enter
jne
shr
into
mov
cmp
or
iret
push
adc
scas
push
mov
bound
cmpsl
sbb
sub
test
pop
loopne
outsb
dec
ja
adc
clc
and
sub
xlat
xor
mov
push
enter
enter
movsb
aas
cmc
xchg
hlt
icebp
inc
das
mov
cld
mov
out
subb
or
jno
dec
cmp
or
fldt
pop
inc
cmp
dec
lds
iret
aam
add
sub
xorl
lret
xor
gs
arpl
cmp
rcll
push
jno
pop
dec
leave
shr
mov
pushf
in
popa
fadds
xchg
add
adc
imul
pop
lock
in
lea
idivl
jno,pt
jae
sbb
xchg
pop
dec
or
push
bndstx
ret
movsl
cmp
loope,pt
add
and
les
stos
data16
ret
daa
faddp
in
fsubp
xor
in
fs
xchg
icebp
jo
das
ret
jp
mov
lods
in
lock
adc
or
sbb
inc
adc
and
inc
xchg
js
push
or
cmp
lret
icebp
mov
cmp
in
push
ja
xchg
push
pop
adc
and
xchg
jecxz
or
enter
xor
stos
mov
sub
clc
lcall
xor
cmpsl
orl
mov
mov
xchg
dec
cwtl
movsb
fcoms
pushl
push
jae
sti
or
fldcw
cmpsl
xor
fdivrs
call
daa
cmp
dec
mov
sub
lret
push
dec
cmp
adc
hlt
jbe
mov
std
sbbb
xchg
mov
movsb
pop
pop
andb
fmull
inc
sbb
push
leave
int
enter
das
fsubrs
push
cmp
mov
inc
dec
pop
jo
inc
pop
nop
rol
mov
xchg
test
fs
out
popa
push
fisubs
fmull
ja
out
push
xor
sbb
jo
pop
mov
fs
adc
test
add
mov
and
iret
movsl
sub
mov
fnstenv
in
repnz
sub
sub
and
jns
bound
les
inc
jmp
out
mov
mov
pop
jp
pop
push
stc
stos
test
ss
pop
mov
std
xchg
mov
stos
push
hlt
cmc
je
mov
cltd
or
adc
lds
adc
imul
or
fwait
testb
add
jns
ljmp
imul
fcompl
outsl
mov
in
dec
dec
jnp
push
adc
mov
jns
xor
fmuls
fs
push
gs
sbbl
pusha
pop
aaa
push
jne
inc
stc
out
mov
les
sub
or
jp
test
into
dec
icebp
pop
or
xchg
test
stc
pop
xchg
std
int3
sarb
dec
aaa
outsb
in
cld
outsb
inc
mov
adc
inc
xor
jle
cmp
inc
loope
aam
test
aaa
cmp
adc
or
clc
fnstsw
sahf
lret
adc
mov
shll
loope
imul
mov
fs
ss
daa
cmp
mov
mov
call
into
or
testl
insl
and
cld
fnstsw
je
bound
xchg
xor
adc
js
jo
sub
inc
jecxz
sub
add
cmp
fs
aaa
inc
cmpb
inc
shrb
clc
push
or
ret
push
outsl
int
inc
inc
sahf
xor
dec
push
subb
jle
pusha
jo
xchg
xor
push
push
mov
xor
or
js
mov
push
mov
loope
cmp
test
out
sbb
add
pop
lds
loope
sbb
xchg
popa
ljmp
sar
push
sbb
xchg
icebp
test
add
push
cmpsb
or
pop
cmpsl
es
mov
or
ljmp
inc
pushf
adc
aad
jmp
movsb
loop
sub
fcoml
and
imul
shlb
sbb
je
add
mov
andl
in
daa
fldcw
mov
rcr
jp
inc
xor
push
pop
mov
mov
lock
adc
testl
push
loop
or
notl
cmpsb
rcrb
jne
xchg
and
jg
sti
xchg
mov
test
mov
push
mov
xchg
sub
push
pop
dec
push
add
cmp
fnsave
dec
push
cmp
dec
cli
inc
out
mov
arpl
mov
push
sub
idivb
push
mov
adc
mov
test
and
loope
xchg
mov
ja
push
jg
cmovno
mov
popf
xor
jmp
push
nop
gs
mov
mov
push
fcoml
and
cmp
lcall
ljmp
ret
in
push
mov
and
cmp
lret
mov
nop
jg
dec
cmp
pop
dec
xor
loope
popf
sbb
or
lock
inc
lea
mov
jmp
pop
push
cli
jle
sub
push
xor
add
shlb
push
jb
and
outsb
mov
pop
inc
out
outsl
adc
mov
add
repnz
mov
fstpl
mov
lcall
les
mov
leave
xchg
xor
dec
sub
or
ljmp
push
push
and
mov
out
and
adc
sbb
or
lea
add
xchg
out
jecxz
aam
cmp
sub
add
dec
xchg
xchg
or
roll
xchg
lock
pop
loope
mov
mov
add
popl
jecxz
pop
inc
push
sub
adc
test
mov
pop
ss
xlat
push
clc
scas
cwtl
inc
lea
pushf
scas
xchg
jmp
and
mov
arpl
cwtl
sub
xor
bound
inc
int
mov
aas
mov
mov
mov
cli
insl
cmp
loop
mov
sarb
mov
pop
dec
cli
shll
fisttps
mov
adc
lahf
sub
loop
lret
inc
or
inc
pop
cmpsl
xchg
xchg
sub
jmp
aad
pop
lret
stc
cs
lock
sbb
in
add
divb
mov
repnz
or
push
fadds
cmp
decl
dec
leave
sarb
test
sbb
pop
out
xor
testl
iret
push
ret
data16
push
xchg
jbe
hlt
push
xorl
inc
cltd
push
xor
pop
aaa
mov
dec
xchg
dec
dec
pop
jno
fcomip
lahf
mov
mov
inc
dec
scas
icebp
imul
and
mov
dec
test
testb
addr16
movsl
push
aaa
push
popf
push
or
inc
ficomps
test
dec
xor
sti
mov
test
imul
popf
push
or
inc
ficomps
test
dec
xor
call
outsb
adc
aam
adc
arpl
enter
sbb
icebp
les
cmp
fsubrl
or
in
mov
sti
ss
rcrl
cmp
ficoml
adc
cld
cmpsb
cs
pop
call
jle
and
pop
push
jb
das
ret
dec
enter
cld
mov
push
sbb
and
mov
test
lods
stos
scas
repnz
pop
adc
mov
inc
add
sub
and
lea
hlt
sahf
out
arpl
adc
jmp
insb
cwtl
inc
mov
and
stos
stos
cltd
dec
or
shlb
xor
mov
lods
sbb
adc
out
scas
jle
lea
dec
xchg
xlat
iret
add
int
jb
mov
cld
adc
add
lods
adc
add
dec
mov
mulb
mov
inc
and
imul
add
sbb
lds
add
dec
cmp
clc
pop
add
xor
out
push
mov
movsl
push
je
fnstcw
adcl
jle
sbb
sbbb
mov
cmpsb
add
and
lea
adc
sbb
out
loop
push
out
int
mov
mov
data16
fists
add
mov
sub
je
out
or
imul
ja
loop
adc
pop
inc
mov
std
sarb
cs
in
push
es
inc
loop
cltd
xchg
out
inc
cltd
push
dec
jo
aad
mov
push
pop
je
movsl
ret
push
mov
sub
pop
lock
int3
scas
sarl
fs
lcall
dec
pushf
mov
pop
faddl
ds
dec
out
rolb
aaa
adc
leave
imul
push
mov
sub
pop
lock
scas
adc
ds
jg
iret
leave
add
and
ds
mov
sub
hlt
mov
mov
scas
pusha
adc
cmp
cmc
adc
rorb
push
cmp
mov
or
sbb
xor
test
inc
xor
icebp
cmpsb
mov
lock
cmpsb
and
in
pusha
adc
cmp
pop
lret
and
aas
xor
icebp
dec
jmp
mov
repnz
std
scas
push
push
jns
inc
xchg
pop
popf
jp
dec
cmpsl
cmpb
or
mov
in
adc
aad
loopne
sti
jmp
mov
inc
cmp
mov
outsw
xchg
hlt
addr16
dec
fdivrl
clc
test
movsl
xchg
add
es
pop
sbb
stos
mov
mov
inc
add
xchg
pop
adc
xor
incl
jae
and
or
mov
out
push
add
mov
inc
push
lods
dec
dec
cs
pop
jg
outsb
fwait
pop
or
scas
mov
adc
fidivrl
je
lea
or
dec
push
push
cmp
pop
mov
xor
lahf
pop
sub
hlt
insl
push
repz
xchg
and
xchg
inc
mov
fs
test
aas
inc
lock
xor
outsl
jmp
loopne
lret
repz
jl
jno
and
pop
sahf
fs
aad
scas
call
out
mov
mov
andb
jle
sbb
sbbb
cmc
hlt
push
jnp
jnp
lds
addl
rolb
push
pop
aad
icebp
lret
xor
push
push
cmp
inc
enter
out
jg
call
dec
push
negl
inc
mov
arpl
jle
sbb
sbbb
lods
sub
inc
pop
in
sub
pop
cmp
mov
mov
popf
pusha
ljmp
test
pop
dec
ljmp
icebp
and
mov
ret
shr
adc
cmp
inc
dec
mov
addr16
pushf
loope
loope
cmp
ds
sub
clc
inc
ficomps
mov
shlb
fistpl
fisubs
mov
mov
fcomps
ja
mov
sbb
rorb
push
xlat
aam
cmpsb
pop
lahf
or
jno
dec
fnstcw
push
pop
jne
out
rcrl
inc
flds
xchg
xor
inc
push
iret
mov
mov
or
test
xor
pushf
repnz
mov
dec
xchg
xlat
int3
rcrl
mov
addr16
lods
mov
mov
aad
aas
mov
or
sbb
xor
ret
push
ds
clc
xchg
jo
sbbl
dec
adc
mov
sbb
adc
das
or
scas
pop
jbe
jno
xchg
insb
jecxz
and
mov
in
sbb
incb
cmp
cld
sbb
ret
and
add
ret
scas
mov
mov
cmp
and
xor
pusha
push
or
mov
or
dec
push
push
cmp
fs
fnstcw
jno
pop
hlt
jp
insl
sbbb
adc
and
pop
mov
imul
xlat
lahf
scas
pop
fcomip
hlt
xchg
into
mov
lret
jbe
or
sbb
xor
mov
movsb
dec
pop
lcall
mov
cmc
arpl
test
fisttpl
jge
jae
neg
inc
pop
mov
fstpl
pop
bound
fldt
pop
lock
loope
cmpsl
xchg
pop
stc
and
insb
jo
adc
outsl
scas
leave
xchg
or
in
js
int3
jecxz,pt
paddd
jp
mov
sbb
mov
loopne
and
xor
mov
addr16
in
add
sbb
divb
cmp
dec
fxch
cmp
xlat
int3
rcrl
dec
xchg
inc
dec
movsl
lea
jl
mov
cltd
dec
rcr
loop
or
adc
pusha
xlat
cmp
jnp
and
ja
in
in
es
mov
xchg
or
xchg
and
xchg
insl
xchg
xor
ficompl
dec
adc
sbbb
arpl
insb
jl
out
inc
scas
ds
add
or
test
mov
mov
pop
cmp
cmp
fsubl
ret
adc
es
aas
sahf
add
jg
xlat
mov
dec
jae
jbe
dec
stos
pop
push
jl
push
ss
repz
and
mov
xchg
jge
push
mov
mov
inc
ficomps
test
dec
xor
inc
or
add
add
jl
push
lea
xchg
icebp
jno
test
sub
mov
mov
in
and
fimuls
xor
pushf
xor
mov
icebp
cmpsb
jae
rorb
fdivl
lds
ljmp
mov
lods
push
clc
js
jae
js
aam
out
addl
xor
sbb
leave
mov
lea
scas
loope
bound
mov
cmpsb
sub
mov
icebp
dec
cmp
dec
fnstenv
nop
clc
sarb
inc
ret
popa
mov
jg
clc
dec
test
into
or
lea
push
iret
or
mov
jecxz
pushf
sbb
rorl
test
adcl
idiv
repz
es
adc
or
icebp
addr16
orl
dec
xor
in
xor
repnz
clc
out
clc
mov
mov
mov
sbb
pop
inc
xchg
adc
mov
rorl
dec
addr16
jmp
mov
dec
iret
popa
ljmp
aam
out
je
jge
call
cs
cmp
lcall
jae
sarb
pop
mov
dec
fistl
add
mov
add
fisubrs
adc
cmpsb
jae
jns
and
mov
and
pusha
jp
iret
pop
push
das
loope
xchg
cmp
and
mov
or
sbb
xor
out
xchg
push
and
mov
xchg
in
xor
addr16
mov
adc
xor
pop
jge
lahf
pop
repz
xchg
sbb
popa
frstor
jmp
mov
jle
cli
jb
lods
in
out
mov
or
into
fnsave
insl
aad
sahf
jmp
jge
xchg
jge
pop
out
scas
dec
xor
jecxz
xchg
dec
enter
add
lock
mov
mov
and
or
adc
pusha
adc
cmp
add
int3
mov
mov
das
xchg
inc
pushf
adc
fldl
cld
dec
incl
mov
sahf
adc
idivb
shrl
int
xor
jp
shlb
mov
mov
and
sbb
push
adc
sti
lds
sbb
orl
out
aad
pop
and
or
cmpb
out
or
data16
add
jb
mov
arpl
ljmp
push
mov
loopne
mov
divb
xchg
sarl
shrl
aad
xor
leave
arpl
aam
rcr
or
push
jl
enter
pop
xchg
inc
iret
repnz
movsb
mov
dec
sub
std
scas
push
push
sbb
repnz
jae
jns
and
mov
sub
xlat
push
scas
pop
adc
pop
and
ljmp
div
arpl
iret
adc
xor
cmp
testl
sahf
es
pop
and
push
inc
stc
movsb
fistpll
or
cltd
sti
nop
stc
sbb
jb
cmp
mov
push
std
or
fdivrs
xor
call
shrb
push
cmp
dec
push
dec
pushf
adc
inc
xchg
cmpsl
adc
xchg
cwtl
mov
fildl
inc
xchg
mov
mov
add
xor
sub
dec
insl
pop
sti
mov
fdivs
fcmove
mov
pop
inc
repz
cmp
aad
jle
cli
jb
cmpsl
scas
jle
ja
jno
add
mov
push
imul
mov
adc
fadds
icebp
sbb
or
aaa
dec
lods
adcb
loop
in
stos
movsl
arpl
arpl
or
negb
xor
xchg
lret
inc
and
inc
enter
test
mov
add
inc
adc
adc
push
push
xchg
dec
sub
lret
cmp
jnp
xor
push
cmp
inc
cmp
xchg
movsl
inc
cmp
fisttpl
or
cmp
push
push
dec
out
sbb
dec
stos
pop
push
jl
push
ss
jmp
jl
cmp
les
divl
inc
pop
imul
pusha
lea
push
push
icebp
sub
aas
out
pop
les
divl
stos
inc
inc
test
push
mov
ja
jo
idiv
out
or
pop
push
movsl
aas
out
pop
les
divl
enter
inc
pop
ds
arpl
daa
sti
mov
sub
inc
cmpsb
push
hlt
sub
movsb
fdivrl
out
pop
les
divl
xor
fdivr
xchg
loop
jl
and
ss
popa
jnp
jns
jmp
les
out
pop
les
divl
xchg
pusha
pop
adcl
out
mov
xchg
mov
inc
loope
in
bound
pop
les
divl
into
or
daa
js
int3
out
mov
lahf
clc
movsl
push
pusha
dec
sbb
leave
mov
xchg
imul
aas
out
pop
les
divl
and
out
and
mov
and
dec
subb
mov
inc
mov
and
loopne
aas
out
pop
les
divl
in
js
dec
jbe
lahf
rcr
jo
pop
les
out
jnp
sub
das
divl
les
divl
ja
mov
pop
dec
or
push
cli
and
mov
roll
fucomi
cmc
xchg
movb
jecxz
xchg
lods
insl
xor
xorb
out
dec
lock
lods
cmp
test
arpl
in
push
aam
arpl
aas
lret
rclb
pop
inc
xor
int
jl
jne
mov
ds
int3
aad
cmp
sbb
stos
inc
inc
inc
or
dec
and
repnz
jmp
mov
cld
sahf
sbb
popf
lret
mov
add
mov
mov
pop
mov
mov
jb
int
dec
cmp
les
xchg
arpl
divb
in
push
inc
adc
imul
mov
adc
dec
outsb
fwait
orl
mov
ficomps
sub
pop
inc
cwtl
cs
xor
sti
ds
jmp
cmp
xchg
insl
enter
lods
nop
sbbl
dec
mov
pop
mov
lds
loopne
shlb
and
movsl
in
lock
sub
add
pop
xchg
ja
in
jae
clc
mov
in
cmp
pop
decl
sub
sbb
jnp
jg
mov
inc
aaa
shll
cmp
sahf
or
ljmp
shll
push
loope
notb
std
data16
lret
notb
add
xlat
fsubrs
cwtl
cmpl
fs
push
jmp
lds
pop
mov
dec
fs
push
push
cmp
loop
outsb
mov
mov
ret
out
loop
xchg
add
jg
rorb
popl
push
dec
imul
insl
pushf
sbb
sub
sgdtl
xchg
ret
bnd
shrl
les
and
scas
loopne
mov
out
or
jb
dec
xor
subl
cmc
ja
push
and
push
sbb
or
sbb
push
push
lret
inc
push
mov
std
shlb
insl
lret
sub
movsl
jle
js
notl
addb
aas
jp
jmp
sub
bound
lahf
sarl
fs
mov
add
sbb
shll
xlat
jo
ficomps
imul
movsl
in
or
out
sbb
mov
notb
popa
push
lds
push
inc
jb
push
rep
xchg
jno
dec
mov
pushf
lcall
stos
cmpb
or
or
std
imul
ds
stos
push
out
clc
fcoms
push
ds
mov
lret
negl
sbb
sti
out
aam
mov
inc
test
enter
mov
sub
rcrl
xor
mov
lock
add
arpl
sbb
loop
test
sub
movsl
add
add
in
push
pop
xchg
test
lret
or
in
mov
insb
stos
and
push
test
dec
mov
mov
push
in
aaa
loopne
inc
xor
xchg
sahf
push
addr16
test
sub
or
mov
das
jge
dec
js
mov
mov
mov
mov
cwtl
or
stc
sti
int3
adc
push
lds
fsub
sbb
xchg
ds
jae
out
lret
xor
xchg
jo
or
stc
xor
pushf
dec
sub
pop
arpl
and
in
and
cmp
outsb
mov
rcrb
push
ficoms
xor
xorl
loop
mov
rcrl
in
fbstp
loopne
jl
stc
aas
incl
xor
movsl
pop
xchg
xor
inc
mov
imul
push
jo
ljmp
cld
sbb
xchg
push
xor
jnp
addr16
mov
add
add
push
shlb
xchg
adc
sub
lods
jae
jnp
mov
sbb
pop
fimuls
arpl
out
stos
in
mov
aam
orl
mov
es
out
and
repnz
mov
lret
loop
ss
and
cli
rolb
mov
cltd
adcb
mov
cmp
and
shrb
rcl
movsb
jno
xchg
sti
mov
roll
push
xchg
cmp
push
jbe
push
sbb
insl
hlt
dec
fbld
xor
mov
jbe
push
jae
jo
leave
add
in
repz
bound
lret
inc
jge
sarb
fcmovnb
mov
cltd
inc
aam
rorl
adc
pop
mov
call
sub
mov
jp
in
sbb
adc
sbb
fcomps
and
and
xor
pop
jmp
adc
push
shrl
pop
test
add
pop
sbb
lahf
shrl
fcoml
sbb
xor
lahf
sahf
les
popa
lock
fdivrs
add
psubsw
sub
xchg
rclb
jns
mov
addr16
cs
xor
mov
fdiv
mov
stos
and
xor
jno
inc
arpl
xchg
cmp
imul
das
mov
fld
pop
lcall
mov
xchg
mov
xchg
subb
lret
ret
or
mov
sub
pop
and
negl
xchg
inc
addr16
mov
cs
fidivrs
push
addr16
sub
fwait
dec
jmp
into
in
jmp
loopne
cltd
and
add
ljmp
leave
mov
push
and
cmp
and
cmc
hlt
lret
adc
inc
aas
cmc
sbb
fldenv
jbe
rolb
std
rcr
mov
jbe
pusha
mov
stos
sub
pop
and
or
adc
mov
into
dec
das
call
xchg
push
xor
xchg
push
push
cmpsb
pop
mov
add
stc
cmp
ret
aam
hlt
mov
push
xchg
xchg
test
jge
mov
int
rcrb
pop
shrb
cmp
dec
jo
xchg
and
push
mov
or
out
push
mov
xchg
sbb
fnsave
push
pop
cmp
push
std
dec
xor
into
add
lea
stos
pusha
pop
fwait
lea
mov
sub
xor
je
popl
inc
xchg
aas
sarb
loopne
dec
cmpsl
stos
cmpsl
pop
in
sbb
push
jle
mov
je
rcrb
pop
mov
push
mov
pop
out
jle
cmp
xchg
in
xchg
sbb
adc
out
leave
xchg
mov
cmp
adc
sub
and
push
rclb
ja
mov
dec
sbb
jb
les
fcoml
sbb
ret
pop
std
dec
inc
imul
cmp
js
lods
call
lock
adc
mov
or
es
mov
add
mov
or
xlat
adc
mov
ja
fbstp
fldenv
inc
imul
imul
lahf
xchg
sub
sub
leave
popa
and
adc
xchg
fists
repz
pop
mov
mov
daa
outsl
push
inc
ficoms
lret
test
xor
addr16
mov
sti
std
mov
xor
sub
cwtl
sub
popf
sub
out
push
sub
fidivrl
out
jb
in
jnp
pushf
pop
stc
jmp
lock
imul
sbbb
pop
mov
push
sub
xor
cwtl
shrl
push
fwait
xchg
subl
mov
mov
shr
cmp
cwtl
cli
test
repnz
cmp
pop
stos
outsb
add
lock
test
shll
dec
jnp
in
imul
repnz
addb
negb
mov
xor
mov
in
jp
pop
cmp
mov
mov
aad
mov
sahf
fbld
pop
mov
stos
nop
leave
fucomip
insb
jne
jmp
aad
sbb
jae
cmp
stos
pop
ja
sub
jne
popf
arpl
pop
js
dec
arpl
push
js
cli
arpl
sub
clc
lods
adc
xchg
ret
cmc
cmp
fstps
fsubl
mov
cs
ds
lcall
insb
pop
imul
test
sub
xchg
xchg
xchg
out
xlat
outsl
add
add
jg
unpcklps
inc
ds
lcall
insl
imul
fdivl
leave
or
negl
cmp
in
or
fucompp
insl
mov
pop
add
inc
out
xchg
dec
in
in
or
adc
lds
pop
in
adc
cmp
pusha
jnp
mov
fdivrs
int
cmp
in
push
mov
int
jno
movsb
out
jl
adc
pop
testl
inc
out
mov
pusha
mov
adc
sub
jns
cmpsl
fs
fcmovnu
lods
adc
jnp
sub
dec
inc
and
xchg
inc
lds
cli
and
or
daa
ds
inc
insl
dec
ljmp
hlt
call
sbb
or
sbb
incb
data16
jg
jo
mov
test
or
bnd
test
nop
mov
mov
pop
fcmovne
clc
add
sbb
pop
or
mov
aad
lret
test
dec
gs
cmp
ss
rcr
mov
push
adc
jbe
fdivl
arpl
xchg
iret
dec
imul
stc
cmp
dec
daa
cld
xor
sbb
mov
sub
add
cltd
push
push
inc
andb
jmp
test
lcall
shlb
mov
inc
lea
pop
sub
divb
inc
xchg
cwtl
hlt
sub
sub
fcmovne
test
xor
push
insl
sbb
lcall
dec
mov
mov
es
ds
js
mov
scas
jbe,pt
in
jbe
cwtl
xchg
push
add
call
repnz
pop
stc
sbb
in
lcall
lret
sarb
inc
adc
mov
mov
push
repnz
cld
xchg
gs
sub
inc
int3
jge
and
sub
mov
fcoms
push
or
jg
dec
xlat
inc
rclb
pop
gs
cmpl
mov
mov
loope
cwtl
in
dec
xchg
push
aam
adc
cwtl
int
cld
imul
sub
and
scas
xor
and
aam
xchg
cltd
adc
jecxz
adc
mov
sub
loop
mov
sbb
sbb
stc
pop
and
sub
popf
mov
out
sbb
jbe
lods
add
pop
pusha
adc
cmpsl
pushf
scas
adc
push
and
in
fisubl
dec
fadds
jmp
cmpsb
xor
pop
les
pop
scas
ret
in
adc
sub
fcompl
test
les
push
repnz
cmp
push
ja
loop
jp
out
outsb
sbb
insl
push
bound
in
inc
call
in
negl
adc
push
fistps
jno
cmp
mov
and
xor
stc
pusha
orb
fwait
stos
out
cld
push
jl
sbb
xchg
inc
mov
mov
rorb
pop
in
shl
imul
jle
xchg
aas
ja
mov
dec
leave
sub
add
cmpb
and
dec
mov
jns
aas
in
daa
sub
cmp
out
inc
pop
xchg
inc
nop
enter
imull
mov
inc
inc
idivl
push
cs
adc
fdivrs
iret
aas
test
lahf
int
pop
add
inc
scas
call
aaa
mov
jg
sub
lock
mov
lods
sahf
pop
subl
iret
ja
loop
and
mov
orl
sbb
jmp
lock
imul
imul
insb
adc
cli
push
test
push
bound
push
mov
pop
movsl
dec
data16
es
mov
insb
mov
cmp
add
test
ja
add
in
pop
push
sahf
and
mov
mov
pop
add
mov
jne
adc
cmpsl
pop
sahf
mov
dec
mov
stos
cmp
les
xchg
pop
or
mov
xor
dec
movsb
cmc
add
pop
sub
xor
lods
ret
push
adc
pop
fisubrl
clc
mov
push
jno
mov
rorb
mov
repnz
push
add
mov
push
inc
bound
jb
inc
xorl
fimuls
imul
inc
pusha
ss
sub
cmp
xchg
fwait
scas
aad
inc
sbb
shlb
or
xlat
repnz
dec
stos
mov
out
mov
sub
int3
jle
and
and
jo
icebp
std
pop
mov
mov
lds
sbb
push
add
inc
iret
lods
push
mov
dec
dec
imull
sbb
stos
jbe
and
sbb
aam
mov
cmp
mov
stos
mov
mov
inc
lret
divb
aas
or
jb
cwtl
sub
popf
sub
iret
mov
push
lock
lods
push
fistpl
insb
rclb
sub
mov
dec
iret
adc
push
add
outsl
xorl
incb
lahf
iret
ja
loop
and
or
pop
xorl
dec
push
popf
mov
jp
jge
cmp
in
out
into
shl
cli
mov
stc
sar
push
scas
cs
inc
lods
stos
in
les
call
rcrb
in
fmuls
or
aam
inc
xchg
subb
sub
add
push
outsl
test
notb
dec
outsb
jns
mov
pop
mov
or
fsubrs
mov
test
xor
bound
pop
mov
sub
lret
outsb
sbbb
mov
cmp
push
fldcw
repz
call
and
nop
into
rol
gs
pop
inc
pop
sub
enter
mov
push
push
xchg
jbe,pn
pop
xor
xlat
mov
testl
stos
nop
popf
add
push
push
leave
test
fistl
sbb
fabs
sbb
ljmp
mov
or
adc
pushf
fwait
pop
xchg
loopne
inc
idiv
scas
ss
or
adc
popfw
int3
push
mov
cld
sub
jp
adc
ud2
jno
ret
loopne
jp
adc
inc
test
call
xchg
std
cmpsb
push
in
lds
insl
test
inc
sar
imul
lea
lret
mov
jmp
rcrl
scas
mov
dec
jmp
stc
mov
push
ds
adc
out
mov
nop
repnz
scas
daa
lcall
mov
xor
hlt
jle
xchg
adc
ds
jge
push
mov
and
inc
lea
addr16
int3
test
cld
push
sub
pop
js
shl
push
xchg
jno
pop
je
popa
inc
cli
ja
jo
pop
dec
cmp
cwtl
repz
repnz
xlat
addr16
jmp
stos
gs
dec
inc
fcomps
in
xor
or
mov
inc
push
mov
fst
shl
shlb
fcomps
es
mov
jle
mov
push
filds
xorl
mov
jb
add
lret
dec
das
add
insb
add
or
push
ja
add
jge
dec
sub
push
adc
push
and
mov
sub
ret
adc
das
nop
inc
jecxz
dec
mov
imul
adc
je
lahf
and
sub
hlt
push
jb
fwait
daa
add
xor
in
movsl
fildl
cli
insb
loopne
iret
or
sub
call
dec
mov
gs
push
adc
add
cs
add
icebp
adc
pop
shl
xor
mov
mov
fmull
push
rolb
mov
xor
outsb
ss
sub
mov
xchg
cmp
in
lret
push
dec
popf
stc
and
roll
mov
or
fs
sub
outsl
fldcw
xor
lret
and
sti
dec
mov
popa
dec
xchg
pop
cltd
push
insb
mov
fcoml
daa
push
push
inc
stc
pop
rol
mov
cmp
stos
stc
cmovg
imul
imul
push
and
cmpsb
xor
adc
jno
stos
fsubl
fdivr
jmp
testl
mov
gs
ret
sahf
mov
push
in
stc
hlt
pop
and
or
cli
outsl
pop
xlat
pop
sub
fwait
dec
add
sub
and
daa
sbb
loop
les
and
dec
xor
in
pushf
cmpsb
fidivrs
jns
or
popf
orl
in
std
pop
pop
test
sbb
jb
push
scas
mov
push
ror
nop
loopne
jnp
sbb
push
in
cld
mov
push
inc
or
test
aaa
lret
sarl
icebp
stos
aaa
fdivrl
es
jge
xor
jnp
add
nop
ror
call
fistpll
jmp
rol
xor
mov
test
sbb
mov
aam
sti
test
cmp
rcrb
jp
push
aad
fildll
aad
mov
adc
test
or
aas
out
push
mov
cmp
popf
mov
jp
imul
pushf
xor
push
mov
push
ja
mov
out
cwtl
lock
test
adc
lods
cmc
dec
stc
xor
or
lods
adc
and
loope
mov
adc
and
sbb
mov
cwtl
stos
xchg
mov
inc
cmp
scas
test
lock
add
mov
subl
fdivrs
stos
scas
adc
ss
outsl
inc
int3
adc
lock
rclb
loopne,pn
scas
jp
lret
xchg
clc
jb
lcall
repz
or
inc
aaa
jg
jno
sti
ljmp
adc
and
in
popa
cmpsb
int3
push
jle
outsl
push
pop
xor
ja
xchg
popf
jne
inc
addr16
rorb
dec
sub
or
loopne
jmp
cmpsl
arpl
mov
mov
fs
xchg
and
imul
sub
ja
loop
and
push
aas
mov
daa
loop
xor
and
jl
add
fisubs
lret
std
pop
cmp
sub
sti
stc
sbb
xlat
jp
sti
pop
jnp
test
pop
outsl
push
fwait
orl
enter
insb
xlat
pushl
imul
dec
int
call
xor
lods
jmp
loopne
sbb
jg
jno
sti
ljmp
fs
jno
rcr
add
pop
push
outsl
push
iret
mov
and
mov
xor
xchg
imul
xor
jl
cmp
adc
mov
out
inc
push
repz
nop
insl
inc
movsl
scas
push
fmul
xchg
nop
imul
mov
loop
std
test
xchg
insb
mov
push
xchg
sub
add
or
dec
inc
hlt
addr16
les
in
xchg
xor
mov
nop
std
xchg
aam
push
das
sbb
jns
ja
scas
xchg
movsl
roll
mov
cld
mov
dec
leave
mov
jno
jae
imul
fmull
mov
push
adc
in
push
std
arpl
jo
fcmovnbe
clc
fs
and
popf
in
or
mov
jg
mov
push
push
sbb
das
aas
or
insb
fcom
stos
mov
sahf
push
int3
dec
mov
pop
sub
adc
sub
aas
das
inc
pop
std
dec
jns
nop
mov
sub
pop
test
mov
xor
ficoms
in
notl
cmp
and
rolb
sahf
mov
leave
mov
xor
adc
pop
pop
and
sub
pop
push
dec
loopne
inc
lods
mov
out
mov
sbb
mov
mov
enter
mov
out
pusha
negl
add
popa
out
fistl
fnsave
and
pushf
out
out
daa
xchg
sarl
jecxz
stc
cmp
inc
mov
fimull
push
and
mov
xor
dec
sub
js
cmp
adc
call
jno
out
mov
call
stos
mov
inc
xchg
xchg
pop
jae
addr16
pop
loopne
das
stos
xchg
mov
inc
cmp
push
xchg
xchg
mov
mov
xor
negl
rol
clc
pop
push
pusha
mov
sub
imul
hlt
aaa
jno
in
cli
mov
aas
xchg
push
mov
enter
iret
incb
pop
mov
add
adc
ja
lahf
outsb
jne
dec
mov
mov
jp
inc
adc
aas
inc
push
sarl
fwait
inc
push
adcb
ret
aaa
jbe
xchg
jo
push
shrl
addb
xchg
inc
mov
add
xor
in
jno
pop
repnz
sub
push
mov
mov
stos
or
cwtl
add
arpl
xor
ret
adcl
cs
jb
mov
or
jmp
mov
push
sbb
mov
addl
subb
pop
jno
adc
mov
outsl
push
adc
sbb
movsb
mov
in
push
fstps
cmp
pop
mov
xor
les
sbb
movsb
mov
in
push
fldcw
jl
mov
ja
stos
inc
sbb
rolb
out
in
je
mov
mov
push
sti
cmp
push
fmuls
sub
xchg
cmpsb
clc
add
leave
movsl
and
fs
and
popf
test
lds
cmc
test
add
push
add
inc
mov
cmp
out
negb
pop
out
rorb
dec
cmc
iret
xchg
mov
ret
mov
jmp
or
stc
negb
scas
mov
das
push
sahf
ret
xor
push
aas
xor
mov
fs
mov
lahf
add
and
sub
cltd
lods
add
sbb
mov
and
insl
adc
mov
stos
rcll
in
mov
mov
std
outsb
fisttpll
sub
mov
push
fisubs
enter
adc
movl
cli
or
fwait
xor
mov
pop
mov
repz
cli
adc
jns
shll
imul
mov
das
subl
aas
lods
add
sbb
mov
and
insl
adc
notb
push
xor
std
scas
pop
sbb
divl
inc
lret
xchg
std
inc
add
outsl
and
in
test
or
shll
es
push
mov
mov
mov
leave
std
stos
jecxz
addr16
lods
push
xchg
lods
aas
fimuls
aaa
jnp
and
xchg
movsb
and
dec
or
pop
xchg
pop
mov
call
xchg
test
dec
mov
aad
mov
dec
aaa
adc
lods
shr
cmpsb
xchg
sbb
ja
rolb
and
xor
inc
out
stos
xorl
xchg
push
dec
cwtl
fcoml
adc
push
enter
inc
pushf
adc
push
push
cmp
clc
xor
push
repz
lahf
adc
scas
in
ja
cld
xchg
movsb
stos
pop
mov
test
xchg
xchg
inc
add
fwait
ret
adc
mov
sbb
int
testl
and
dec
inc
jno
inc
sbb
mov
pop
jl
mov
add
cltd
push
xchg
xchg
mov
sbb
jo
sbb
stos
pop
and
mov
ljmp
and
fwait
stc
idiv
dec
adc
push
inc
mov
faddp
lret
mov
xor
push
push
xchg
repnz
shll
out
dec
xor
ja
scas
addr16
imul
rol
loopne
imul
in
push
icebp
addr16
dec
shlb
je
icebp
push
or
push
push
and
pop
jle
inc
push
adc
mov
out
or
pushf
add
mov
sahf
subb
stc
and
adc
push
lret
clc
sub
add
and
mov
stos
mov
pop
into
sbb
gs
imul
int
movsl
jo
xchg
ret
mov
aad
fldcw
jmp
and
in
jecxz
test
lds
popa
cli
scas
add
test
mov
mov
js
movsl
cmpsb
and
cmpsl
cmp
mov
inc
int
sub
ss
fldt
cmp
inc
bsf
js
push
in
or
jle
bound
mov
repz
mov
jl
pop
mov
out
in
mov
mov
aam
fdivrl
ja
dec
into
xchg
mov
adc
aad
pop
and
adc
adc
adc
pop
lods
sub
add
fstl
lret
daa
cmp
leave
push
jl
xchg
push
add
mov
xchg
xlat
out
inc
loopne,pn
out
dec
sbbl
ss
mov
sahf
push
shl
shll
add
mov
nop
sar
jge
js
imul
mov
xorb
xor
adc
mov
or
mov
loop
outsb
lahf
imul
cmp
or
mov
inc
int3
jmp
cmc
mov
adc
push
nop
je
insb
addb
add
or
adcb
popl
sub
imul
fnstsw
sahf
das
leave
add
notb
add
pop
pushf
lret
add
stc
and
jo
dec
sbb
out
imul
hlt
sbb
pop
mov
sti
mov
dec
rorb
inc
xor
loop
fadds
pop
sub
nop
inc
sbb
sbb
fxch
in
cmpsl
test
xor
enter
and
fdivl
sbb
push
inc
jge
xchg
fdivl
call
addr16
jae
call
out
add
ss
xlat
xchg
popa
lock
push
inc
rol
andb
cmp
jo
mul
pop
cmpsl
fisubs
xor
sub
inc
leave
ljmp
or
mov
xchg
mov
mov
cmp
xor
jne
mov
pop
sbb
cmp
adc
xlat
cmpsl
lret
mov
call
test
cmp
insl
inc
fwait
jl
call
dec
jne
adc
repz
jns
data16
rcll
sti
out
addr16
inc
dec
xchg
xchg
clc
loop
scas
ret
sbb
xor
loope
jecxz
bound
bound
data16
lcall
addl
add
incl
fcoml
out
fcoms
xor
addr16
dec
or
push
xor
rcll
or
jmp
and
mov
adc
mov
imul
push
insl
sub
jnp
imul
or
rcrl
sarb
pop
test
inc
and
lods
sub
cmp
mov
test
cmpsl
inc
shlb
mov
xchg
ds
pop
or
pop
dec
adc
testb
cmp
mov
and
xchg
and
ret
test
pop
dec
pushf
jns
add
push
cmpsb
es
xchg
lret
outsl
cwtl
stos
cmpsl
mov
out
mov
lods
rcrl
iret
movsl
dec
mov
or
inc
in
dec
lea
cmp
in
push
inc
jbe
icebp
or
mov
loope
rcr
pop
xchg
mov
fsub
xchg
mov
js
add
fmuls
out
push
outsl
dec
pop
and
xchg
js
repz
xchg
arpl
add
jle
pop
cmc
mov
pop
aas
repz
push
adc
xor
or
mov
arpl
popf
mov
dec
xchg
fsubl
lea
inc
cmp
cmpsb
mov
inc
test
icebp
testl
lahf
cmp
out
push
ljmp
mov
jb
subl
push
psrlw
mov
mov
and
sahf
xchg
xchg
pop
mov
xchg
sbb
xchg
mov
int3
inc
add
cmc
setl
daa
mov
enter
out
pop
cmp
repz
adc
sub
gs
xchg
in
scas
dec
mov
out
and
shlb
mov
sahf
sarb
adc
mov
aam
sbb
imul
xorb
fiaddl
sub
daa
jmp
negb
out
out
sbb
xor
jb
xor
aas
popa
lods
adc
insl
loopne
pop
cli
repnz
xchg
add
or
insb
mov
hlt
mov
notl
push
and
xor
cli
mov
fsubr
js
movsl
dec
call
lds
mov
adc
adc
mov
loope
and
ja
cmp
lds
scas
sub
cld
lods
popa
fistps
fwait
stos
sahf
roll
roll
push
or
fdivrs
loopne
dec
cmpsl
stos
cmpsl
pop
mov
fnstcw
pushf
gs
test
decb
or
adc
ucomiss
jecxz
mov
les
mov
push
dec
repz
fsub
jnp
mov
add
xor
mov
stc
lock
push
or
or
mov
test
movsb
stos
xor
add
add
push
gs
adc
mov
cmp
mov
mov
sbb
inc
aas
pop
sahf
push
fucomip
outsb
xchg
pop
adc
cli
out
sbb
xor
stc
pusha
xchg
test
dec
lock
push
or
xchg
lcall
sbb
cmp
xor
push
scas
or
cwtl
mov
paddusb
cli
cmp
jl
outsb
cmpsb
inc
pop
mov
mov
fldt
and
jp,pn
mov
or
cli
int
xchg
in
imul
arpl
hlt
cmp
imul
es
and
fs
data16
xchg
out
daa
sub
popa
ret
cmp
mov
out
loop
es
stc
lock
pop
and
mov
pop
jbe
ret
add
incb
shrb
andl
inc
or
cmc
sub
dec
sub
push
lds
and
enter
rolb
fisubrl
adc
ljmp
sbbl
es
mov
ds
dec
andl
pop
jns
lods
and
mov
lahf
pusha
pop
inc
add
mov
rcl
mov
or
jae
sub
xchg
or
jne
xor
out
shlb
xchg
stos
jnp
push
shlb
dec
rorb
inc
jnp
popa
ret
imul
lret
dec
in
adc
call
int
rclb
push
dec
jb,pt
mov
push
les
push
aad
mov
ljmp
rorl
bound
jnp
xor
andl
sbb
repz
addb
xor
mov
pushf
cmp
mov
inc
jp
xchg
sub
cli
cwtl
push
sbb
lcall
dec
bnd
fisubrl
cmp
mov
cs
mov
xchg
dec
mov
sbb
int
cmpsb
adc
dec
dec
xor
cmp
stos
cwtl
fiadds
mov
pop
ret
jge
jae
test
lea
fistpl
xor
outsb
fdivl
or
dec
arpl
push
js
movsb
cmc
add
pop
sub
or
cs
inc
sub
jns
icebp
xchg
fstpl
cs
sbb
fisubrs
lock
in
push
adc
fcoml
lods
in
lock
add
cmp
xchg
scas
pop
cltd
jmp
lock
fisttps
fcmovbe
dec
frstor
les
divl
les
divl
les
divl
les
divl
ja
sub
adc
sbb
jbe
mov
dec
es
mov
cltd
lods
lahf
xor
sub
dec
pop
jp
sbb
outsb
cmpsb
adc
cli
loope
cmc
div
test
movsb
popf
adc
push
xor
pushf
push
inc
in
aas
mov
pop
mov
xchg
inc
xchg
lock
out
pop
les
divl
adc
out
mov
hlt
imul
lods
mov
in
pushf
sub
ja
test
fstpt
dec
push
clc
insb
push
insb
mov
out
pop
les
divl
daa
leave
fdivrp
mov
shlb
sub
adc
out
pop
les
divl
and
lret
test
es
xor
out
pop
les
divl
movsl
lea
push
cmc
movsb
sahf
adc
sbb
adc
inc
fidivrs
aam
add
add
ljmp
push
xchg
pop
subl
subl
push
sub
inc
inc
aad
popa
roll
or
pop
outsl
cmp
xor
ffree
jecxz
jne
out
push
push
mov
pop
add
add
jge
scas
jae
jne
insl
std
mov
sti
add
jae
dec
adc
sti
std
xchg
jns
test
push
xchg
fwait
into
push
mov
mov
jb
mov
push
push
dec
mov
pusha
dec
jge
pusha
icebp
jp
stc
xchg
mov
lret
pop
cmp
pop
jbe
stc
stc
int3
repz
je
lds
dec
fs
mov
cmp
adc
mov
mov
and
and
mov
loope
pop
pop
mov
push
jge
jns
mov
ljmp
xchg
sub
mov
loopne
jl
or
cmpsl
mov
test
std
mov
es
cld
fstpl
ds
ss
out
mov
add
pand
mov
outsb
mov
stc
xchg
outsl
mov
adc
aaa
xchg
push
jno
inc
scas
inc
dec
test
jbe
pop
mov
fldenv
movsb
mov
test
mov
cmp
and
stc
lods
scas
filds
dec
push
loopne
loope
and
lods
int
mov
push
test
sub
xchg
push
dec
cmp
pop
rol
cmp
push
fidivs
or
aas
mov
lods
aad
call
pushf
sub
sarl
and
cltd
xchg
push
addl
out
fwait
popa
out
gs
sbb
scas
dec
xchg
jge
aam
imul
movsb
xchg
bnd
jae
scas
ficoms
dec
jo
xchg
inc
cmp
pusha
mov
lds
imul
push
addr16
imul
mov
or
sti
repz
adc
push
dec
pop
fistpll
adcl
jo
pop
add
dec
les
dec
mov
push
in
gs
scas
mov
sbb
mov
bound
mov
aaa
fstl
ljmp
ret
je
out
dec
mov
les
divl
les
divl
psubd
pop
les
divl
add
cmp
pop
les
divl
adc
int
out
pop
les
divl
cmp
ljmp
das
divl
mov
aas
out
pop
les
divl
lods
xor
and
aas
out
pop
les
divl
addr16
jbe
cmp
out
pop
les
divl
sbb
aas
out
pop
les
divl
scas
stos
push
aas
aas
out
pop
les
divl
insl
popa
in
sbb
out
pop
les
divl
sbb
imull
les
divl
sahf
add
movsl
xchg
aas
out
pop
les
divl
insb
mov
out
pop
les
divl
dec
test
or
aas
out
pop
les
divl
add
adc
je
out
pop
les
divl
call
xor
out
pop
les
divl
aaa
inc
push
stos
xchg
aas
out
pop
les
divl
ror
adc
out
pop
les
divl
dec
mov
les
divl
lea
int
cmpl
divl
das
arpl
fistpll
out
pop
les
divl
add
adc
das
divl
pop
dec
push
push
aas
out
pop
les
divl
inc
bound
pop
les
divl
add
stc
pop
repnz
out
pop
les
divl
popa
ret
inc
sbb
aas
out
pop
les
divl
sub
decb
les
divl
iret
es
dec
inc
aas
out
pop
les
divl
mov
out
jae
out
pop
les
divl
jbe
jecxz
push
aas
out
pop
les
divl
jp
in
jp
aas
out
pop
les
divl
dec
xchg
aam
ret
aas
out
pop
les
divl
or
push
sub
das
divl
pop
mov
out
pop
les
divl
xchg
fidivs
pop
les
divl
lock
or
aas
out
pop
les
divl
sbb
aas
out
pop
les
divl
push
out
lret
out
pop
les
divl
mov
lcall
das
divl
push
loop
xor
das
divl
insl
sbbl
pop
les
divl
xor
aas
out
pop
les
divl
mov
aas
out
pop
les
divl
and
out
pop
les
divl
sbb
pop
les
divl
dec
mov
out
pop
les
divl
pusha
or
fdivrs
out
pop
les
divl
adc
out
pop
les
divl
cmp
rorl
aas
out
pop
les
divl
push
out
out
aas
out
pop
les
divl
mov
push
pop
les
divl
or
lock
aas
out
pop
les
divl
xchg
xchg
icebp
ret
jmp
out
pop
les
divl
jne
xlat
ss
out
pop
les
divl
push
xchg
inc
cmpsb
aas
out
pop
les
divl
pop
cmp
adc
das
divl
inc
mov
into
jne
out
pop
les
divl
cmpsl
cs
hlt
aas
out
pop
les
divl
ja
push
call
les
divl
inc
arpl
sbb
das
divl
mov
aas
out
pop
les
divl
outsl
aad
sub
aas
out
pop
les
divl
sub
and
mov
jnp
dec
decl
adc
inc
lods
cmp
cmpsl
mov
pop
mov
pop
pop
call
cmp
or
or
or
jb
jmp
jne
ds
mov
mov
push
xchg
fistl
cld
sub
jge
and
mov
mov
sbb
mov
xchg
sbb
sbb
jg
adc
movsl
mov
pop
xorl
pop
in
sub
push
mov
aas
out
pop
les
divl
les
divl
and
xor
cmp
pop
mov
std
push
xchg
stos
push
push
inc
mov
in
ds
testb
cmp
and
or
enter
or
incl
popa
out
adc
ss
int
out
das
sub
adc
sub
mov
lock
shlb
pop
ficompl
cmc
add
insb
sti
jne
fsubrl
xchg
sub
sbb
sub
xor
out
test
ljmp
in
roll
enter
or
adc
and
int
xor
adc
rol
cwtl
insb
das
mov
mov
push
sbb
or
popf
outsb
lock
jmp
clc
stos
rcl
jnp
push
dec
outsb
movsl
lret
hlt
pop
std
jnp
lret
jp
bound
xchg
ret
xchg
add
inc
mov
scas
repz
and
adc
sub
movsb
repz
xchg
iret
test
in
xchg
js
sbb
adc
test
test
rcrl
sahf
mov
jo
std
fxch
daa
dec
cmovbe
push
xchg
in
addr16
das
or
pop
clc
call
into
shll
and
insl
push
pop
xchg
pop
cmpsl
mov
mov
in
mov
cmp
daa
or
fbld
into
sub
mov
dec
xor
pmaxub
xor
push
adc
popf
out
jp
inc
add
jno
pushf
sarb
push
mov
sub
outsb
jp
dec
xor
movsl
pop
and
hlt
fucomi
and
pop
sub
aas
out
ret
int
icebp
aad
in
testl
hlt
cmc
mov
mov
ljmp
das
and
adcl
cmpsb
mov
iret
mov
mov
ret
dec
jle
pop
hlt
les
xchg
insl
ret
or
imul
icebp
mov
mov
pop
cmp
mov
inc
ret
or
je
int
mov
mov
ds
adc
repz
fimull
loope
mov
loopne
dec
pop
push
lret
call
inc
rorl
or
cmc
push
xor
call
pop
mov
ret
mov
mov
fmull
and
push
mov
addr16
jecxz
movsl
mov
repz
in
jae
push
test
xchg
jge
xor
out
xchg
iret
dec
push
adc
inc
pop
dec
sbb
cwtl
fcomi
shll
outsb
adc
mov
add
insl
add
ret
fadd
xchg
push
orb
push
test
cltd
pop
xor
sti
sbb
add
xchg
addr16
loope
ss
jne
imul
imul
in
aam
cmp
mov
mov
imul
push
jl
push
push
pop
fmul
push
pop
rol
add
xchg
hlt
inc
call
repz
out
sub
sub
xor
jge
pop
stos
dec
pop
in
adc
push
mov
xchg
sbb
cmp
adc
or
jle
mov
cmp
in
les
or
ja
cld
mov
faddl
pop
cs
das
xchg
mov
or
dec
daa
adc
das
pop
scas
xchg
cmp
out
popf
mov
fwait
sub
mov
test
sbb
std
cli
xchg
cmp
jmp
pop
mov
insl
adc
add
mov
loopne
fildl
shl
xchg
or
xchg
leave
psrlw
shlb
jns
js
pop
and
sbb
add
jno
pop
xor
jnp
dec
enter
cld
dec
xchg
ljmp
jno
jns
roll
adc
aas
lcall
loop,pt
push
push
gs
lods
xlat
jne
insb
fs
inc
push
dec
sub
push
es
inc
push
or
jle
cli
jp
je
jge
cs
inc
mov
pop
les
dec
dec
mov
aad
shl
enter
loop
cmp
push
push
bound
sbbb
cmp
xor
outsl
push
jnp
cmc
shll
or
aaa
inc
cmc
add
insb
aaa
sbb
mov
pop
jb
cli
push
jno
xor
pop
cmp
inc
xor
xor
pop
test
mov
scas
out
stc
sahf
mov
push
lret
dec
mov
and
out
idivb
pop
mov
in
sti
and
lock
push
outsl
insl
popa
shrb
fs
fistps
or
push
ret
jb
mov
push
mov
lods
jg
mov
jp
pushf
dec
mov
xchg
loope
xor
gs
adc
rclw
divl
jae
mov
pop
loope
into
ja
mov
jge
cmp
lret
fdivrl
jecxz,pn
or
rorb
insl
or
dec
out
sti
jnp
xor
lea
jb
pop
jmp
jmp
pushf
cmp
insb
jp
cmpxchg
jae
out
xchg
addr16
repz
sub
xchg
lea
add
out
mov
adc
xor
shrb
cli
xor
popf
pop
inc
mov
bound
outsb
ljmp
mov
hlt
clc
dec
addr16
loop
data16
cmp
sti
mov
inc
pusha
ss
aas
push
jge
mov
push
negb
mov
pop
dec
cmc
mov
push
cmp
and
sub
adc
xchg
pushf
vpmacsdd
add
inc
ljmp
clc
addb
sahf
jecxz
pop
jecxz
xor
dec
jl
les
jne
or
or
insl
das
xor
push
pop
pusha
xor
idivl
adc
icebp
das
xchg
dec
lcall
lea
and
in
scas
xor
xchg
repnz
and
mulb
xlat
test
sub
repnz
ficomps
fcmovnbe
dec
cmpsb
test
int
or
aad
ret
add
lret
or
cmpsl
xchg
je
and
push
nop
loope
cld
mov
jmp
test
lock
xlat
cltd
cli
pop
dec
aam
fists
aad
sbbl
repnz
int3
pop
hlt
outsb
fstl
xchg
loope
push
inc
mov
lods
push
pop
loopne
mov
fstpl
xor
jnp
pop
push
cwtl
cmp
ljmp
fidivrs
xor
testb
iret
push
xor
dec
cmp
xchg
and
or
scas
int3
into
or
pop
outsl
mov
pop
mov
ror
adc
dec
push
pop
dec
or
inc
addr16
mov
push
aam
push
adc
test
in
addl
sub
movsl
loope
cli
sbb
testl
or
movsl
cli
adc
pop
aas
mov
pop
data16
movsl
cmpsb
cmc
fiadds
mov
push
int3
mov
cmpsb
outsl
call
adc
stos
xchg
adc
xor
xor
inc
dec
mov
fcmovnbe
mov
fisubl
pop
push
call
or
push
cmp
jg
mov
movsb
movsl
push
cmc
insb
js
movsl
popl
and
xor
mov
shrb
inc
pop
push
icebp
and
inc
js
mov
dec
dec
lahf
je
jnp
or
rol
cli
xor
jge
or
orb
adc
and
pushf
mov
pop
jbe
sarl
fisubrl
mov
test
lahf
mov
fstps
fstp
movsb
add
sbb
scas
mov
scas
mov
es
enter
out
mov
stos
cmp
mov
lea
xor
mov
mov
xchg
dec
dec
adc
pop
stos
or
mov
js
rorb
mov
out
push
iret
mov
or
aaa
aaa
popfw
adc
cwtl
xchg
lret
inc
test
add
pushl
mov
sarl
xchg
xlat
or
sbb
pop
inc
adc
xor
in
jge
fimull
cmp
sub
and
cmp
or
cmp
cs
rolb
ja
adc
or
and
mov
cli
incl
adc
cmpsb
inc
repnz
es
xlat
pop
adc
lcall
pusha
jno
dec
rolb
ret
repz
xlat
push
inc
fisubrl
xchg
xchg
loop
dec
inc
imul
mov
dec
mov
popf
cld
in
aad
sbb
loopne
repz
sbbb
repnz
mov
jnp
xor
stc
imul
js
out
les
adc
jge
cltd
sbb
pop
lcall
cmp
aad
inc
xor
movsl
stc
cltd
add
sti
push
push
cvtpi2ps
js
xor
mov
in
cld
mov
clc
lock
in
or
ret
jmp
add
bnd
ret
sub
jb
pop
loope
pop
mov
call
in
push
push
pop
pop
xchg
fildl
or
lods
fimuls
pusha
mov
adc
fnsave
cmc
data16
inc
jo
test
incl
fst
icebp
pop
mov
rcll
cmp
adc
jb
test
pop
and
stos
aad
adc
pop
push
sbb
xor
sbb
scas
jnp,pn
mov
les
push
cmpsl
pop
clc
push
cltd
xchg
lahf
jno
xchg
pop
inc
sti
cmp
out
int3
push
int
inc
pop
mov
ss
repnz
sbb
pop
push
sti
add
sahf
pop
pushf
xchg
inc
jbe
dec
push
push
nop
pop
les
push
dec
sub
adc
cmp
xchg
frstor
or
pop
lret
aad
das
push
xchg
mov
icebp
sarb
stos
push
adc
pop
fwait
lret
xchg
das
xchg
cmp
int
lret
fldcw
cmp
and
stos
xchg
fisubrs
push
popl
mov
mov
pushf
and
cmp
sub
and
sub
loopne
into
lcall
leave
adc
cmp
push
scas
rcrb
mov
push
scas
mov
mov
jge
fsubr
loop
or
cmp
js
test
adc
adc
rcrl
insl
cltd
adc
movsb
roll
loopne
imul
iret
shll
popf
into
movsb
aaa
or
outsl
sahf
push
mov
inc
movsb
int3
cmp
pop
xor
inc
call
insb
icebp
pop
pop
jmp
inc
jecxz
push
xchg
dec
jbe
and
sbb
out
imul
test
inc
pop
xor
aas
loopne
xor
stos
in
pop
adc
in
xchg
scas
mov
ret
sub
call
pop
arpl
adc
and
xor
add
scas
rclb
adc
add
aaa
js
xchg
adc
mov
adcl
pop
push
imul
adc
cmp
mov
cmpsb
mov
mov
clc
ret
lods
mov
sbb
or
movq
lods
mov
repz
int3
int3
mov
shlb
mov
popa
sbb
or
shll
fimull
adc
or
pop
push
lret
outsl
xchg
sti
aas
shll
pushf
loop
mov
sub
mov
call
jecxz
mov
cltd
dec
lea
push
lock
push
addr16
test
ds
sarb
iret
mov
push
inc
das
stos
or
jnp
imul
stos
loopne
mov
ret
flds
sub
jnp
inc
jecxz
movsl
cmp
fsubs
pusha
jp
cmp
mov
decl
jecxz
leave
std
movsl
roll
aam
ret
cmp
mov
mov
cmp
ja
mov
mov
movsb
mov
insl
jo
aad
jno
sub
outsb
push
xor
jle
add
lds
ret
mov
sti
test
mov
pushf
je
imulb
shr
mov
mov
fdivs
mov
pop
fisubrl
and
cs
xor
insl
lods
push
stos
subb
sub
mov
sbb
xor
xadd
nop
adc
lods
repnz
push
dec
scas
add
out
sub
repz
mov
or
into
stc
cli
call
xchg
orl
push
iret
cmp
push
pop
push
std
pop
sub
pushf
fsubrp
gs
enter
jp,pt
arpl
pop
or
enter
cmp
sub
loope
test
adc
pop
popf
add
sub
mov
cmp
xchg
shll
daa
inc
test
pusha
sar
xor
rol
out
repnz
das
fnstcw
addr16
aaa
cwtl
sbb
inc
add
mov
insb
lret
and
inc
jmp
pop
mov
jo
mov
cmp
into
test
push
pop
or
rcl
jne
jae
xchg
loope
xorb
pop
mov
inc
je
and
enter
arpl
aas
out
sti
push
mov
sti
xchg
std
xchg
mov
or
cli
js
push
int3
adc
fwait
xchg
ficoms
out
cmp
dec
push
inc
pop
out
sbb
adc
sahf
pop
inc
sub
mov
mov
dec
gs
bound
je
sub
das
sub
loopne
ret
add
loopne
cmp
cmp
sub
push
push
idivb
xchg
cmc
mov
sahf
mov
mov
pushf
sbb
lret
push
or
cmp
mov
push
push
nop
stos
popa
stos
mov
subb
clc
mov
daa
mov
push
push
jecxz
fwait
dec
adc
loop
mov
mov
pusha
jmp
dec
pop
std
loope
in
bound
inc
aad
mov
daa
xchg
mov
push
jb
in
dec
lea
add
sbb
scas
movsl
mov
aad
lret
fldcw
inc
jo
push
sbb
push
dec
mov
mov
mov
jecxz
ret
pop
sahf
push
push
inc
xor
xchg
jnp
inc
pop
dec
sub
push
push
daa
dec
movb
and
ret
jae
dec
mov
xchg
loop
lds
add
jno
out
mov
jne
mov
insb
fsts
test
jle
sbb
jmp
add
test
or
xchg
aaa
cltd
pusha
mov
push
sub
xor
aad
int
xchg
inc
cs
shrl
clc
xchg
fildll
in
adc
jle
rsqrtps
push
and
xchg
imul
mov
cld
or
cmp
in
aas
mov
das
stos
xchg
pop
sbb
addr16
dec
fwait
sti
and
fwait
mov
clc
fidivl
xchg
jmp
cli
loop
push
jge
stos
push
shll
or
mov
movsb
mov
std
cld
dec
icebp
pushf
test
sbb
add
or
xchg
pop
adc
shl
sbb
mov
lods
sub
shll
ds
pusha
xor
notl
dec
pushl
push
jg
push
cli
xchg
xchg
enter
mov
lret
ret
sbb
int3
mov
subb
cmc
mov
jl
stc
xor
imul
leave
stos
pop
cld
pop
ret
cmp
arpl
cltd
adc
mov
std
pop
mov
inc
cmp
xlat
fs
jecxz
movsb
hlt
mov
je
ds
sti
jmp
fidivrs
fs
sahf
xchg
ret
inc
aad
add
ret
outsb
pop
fadds
std
mov
jae
push
adc
popf
orb
test
jo
xchg
xor
stc
dec
loope
adc
pop
cld
mov
adc
adc
imul
cmp
add
jge
mov
std
sbb
out
or
sbb
faddl
mov
lea
cmp
push
gs
mov
dec
pusha
sbb
adc
imul
divl
jnp
adc
push
jmp
shrl
fnstcw
stos
lock
adc
js
scas
xor
mov
push
sbb
mov
insl
test
aam
sub
xchg
out
shrb
clc
and
add
dec
aad
andb
rcrb
or
movsb
rep
sbb
dec
daa
sub
or
xor
mov
popa
clc
or
dec
cmp
sbb
jg
xor
inc
mov
jmp
mov
stos
cwtl
dec
test
stc
int
push
xor
inc
sbb
dec
jmp
notb
mov
int
outsb
and
push
cmc
push
sbb
int3
fcomip
in
in
xor
ljmp
ds
add
loop
jo
cmp
dec
sub
mov
xchg
add
sbb
xlat
shl
mov
scas
xlat
clc
add
inc
in
jae
add
add
fistps
xchg
ret
push
jae
push
insb
stos
rclb
and
stos
xchg
aad
mov
push
mov
cltd
or
xchg
aas
xor
lock
addr16
push
add
popf
pusha
inc
cmp
clc
jo
xor
lret
push
mov
push
sbb
es
xchg
lcall
add
mov
xchg
in
sub
mov
dec
push
or
mov
push
cmpsb
inc
int3
pushf
push
inc
rol
mov
jmp
mov
subl
cmpsl
cs
cmpl
movntq
out
sbb
mov
mov
std
dec
push
xchg
mov
out
nop
jae
cli
out
iret
daa
mov
enter
mov
xchg
lea
sub
push
fdivl
bound
popa
cmpsb
int3
testl
gs
push
xchg
dec
xchg
pop
and
cmpsb
mov
imul
and
nop
pop
add
cmp
xor
repnz
cmova
scas
adc
repz
jmp
iret
xor
mov
cmp
sar
mov
lods
and
cltd
cmp
pop
stos
mov
movsb
fsubrp
push
mov
add
xchg
in
adc
or
push
cmp
pop
aam
sbb
pop
out
push
fistpl
xchg
pusha
jg
int3
dec
cmpb
mov
test
fstpt
xchg
xlat
movsl
stos
jmp
test
adc
cli
addl
cmp
lea
and
mov
mov
imul
cmc
gs
insb
stos
mov
pop
icebp
bound
push
outsb
mov
jo
push
hlt
fs
or
push
enter
lods
out
mov
gs
adc
push
outsl
cmp
sub
and
xor
out
dec
lods
adc
mov
inc
shl
stos
sarb
pop
das
lahf
and
dec
leave
jno
iret
jle
test
lock
jne
int
ja
mov
cmpsb
int3
adc
xor
fdivp
lods
sti
push
and
lock
les
mov
push
mov
or
addr16
jne
call
int3
pop
pop
subb
insl
enter
notl
or
rcrb
aaa
sub
incl
lods
ss
and
rcrb
fldl
outsl
adc
push
insb
xchg
popa
sub
addl
pusha
stos
fsubrl
cli
dec
nop
aad
pop
mov
lret
ja
sub
inc
int3
fidivs
call
lcall
dec
push
adc
cmpsb
xchg
imul
mov
sbb
lret
cmp
lds
pop
es
jecxz
mov
fsubl
neg
or
and
xchg
pop
fcomi
fcompl
xchg
pop
data16
xor
clc
mov
sbb
and
mov
ss
in
in
imul
sub
xchg
push
fldenv
fbld
push
es
fldt
and
aam
imul
mov
pop
jmp
add
loopne
mov
jae
loop
in
push
pop
or
pop
pop
jge
xor
popa
js
jae
shll
lret
fiaddl
sub
cmpsb
dec
fs
and
xchg
sti
xor
pop
or
iret
sub
pop
scas
xor
sub
cmp
dec
jecxz
lret
cwtl
sbb
cli
pop
mov
push
jno
mov
hlt
pop
and
inc
mov
ds
adc
int3
lea
push
add
inc
outsb
pushf
jne
shrb
or
jae
jp
imul
jnp
lds
push
pop
ficoms
pmaddwd
jno
xor
imul
jb
mov
test
pop
push
mov
add
lahf
in
pop
xchg
mov
outsl
adc
jl
jo
sub
jecxz
cmp
test
inc
dec
ljmp
push
cld
and
inc
mov
sbbb
pop
data16
aad
loopne
push
and
lods
sbb
xlat
pop
les
cmp
sbb
adc
sbb
pop
outsb
xor
stc
mov
jmp
imul
rorl
add
mov
test
pop
dec
sub
or
adc
mov
loopne
rcll
fadds
push
jae
sub
pop
pusha
mov
aam
jo
pop
and
pop
std
pop
aad
jmp
mov
insb
inc
fmull
in
lahf
jmp
push
out
adc
pop
or
mov
fucomi
popf
xchg
pusha
jne
out
or
ja
loope
sahf
mov
leave
mov
mov
xchg
loopne
and
xchg
cmpsb
dec
clc
add
popa
pop
xor
adc
leave
ds
adc
push
lock
dec
and
fldcw
sar
mov
cmp
push
rcr
pop
test
sti
into
fstp
lahf
int3
mov
pop
orl
stc
cmp
xchg
push
ljmp
pop
jg
cmc
pop
mov
pop
sub
sub
fiaddl
jecxz
or
loop
mov
sub
ss
jb
cli
and
mov
pop
loopne
lcall
xchg
jl
inc
pop
or
sub
mov
dec
xor
fs
inc
or
mov
and
cmp
push
mov
popa
jb
and
sub
fmuls
mov
cs
sub
idivl
push
inc
rcr
xor
imulb
push
cmpsb
jmp
mov
stos
bound
xor
mov
pop
subl
mov
mov
push
out
addr16
or
dec
add
mov
pushl
movsb
imul
mov
das
decl
imul
inc
arpl
jge
aad
add
rcl
or
jg
mov
sub
xchg
std
stos
cmp
out
in
lret
adc
sub
inc
sbb
sub
mov
xor
fdivrl
outsl
xorb
fadd
xchg
ja
dec
lcall
adc
lea
in
inc
and
pop
jl
cld
cmp
cmpsb
std
mov
insl
or
push
push
out
mov
imul
mov
js
push
out
jne
daa
or
adc
mov
pop
cmp
ret
addr16
stc
adc
sub
add
in
lret
rcr
dec
add
inc
cmpsl
aaa
xor
jecxz
lods
add
je
mov
xchg
and
and
pop
push
sbb
das
jne
inc
ret
out
ds
repz
inc
addr16
push
ljmp
push
test
sbb
or
icebp
mov
and
sub
in
push
aad
repnz
and
dec
mov
mov
pusha
je
jmp
add
inc
les
jl
imul
cltd
dec
leave
stos
lock
xchg
jecxz
test
inc
push
iret
cs
dec
adc
xlat
xor
mov
mov
je
and
adc
pop
dec
mov
inc
in
push
cmpl
push
insb
and
push
lret
fwait
adc
fwait
dec
sub
lods
mov
filds
add
add
sub
sub
stos
lods
cmp
pushf
cmpsl
jp
stc
into
xchg
and
fstpl
ljmp
or
pop
mov
int3
mov
mov
fs
jecxz
jbe
xlat
pop
mov
mov
adc
xchg
in
mov
xor
nop
add
popa
xchg
jbe
mov
loopne
mov
cmp
bound
scas
push
jnp
cmp
dec
insl
sub
scas
outsb
jb
or
jl
add
fmul
inc
fs
lds
xor
popf
ljmp
sbb
pop
mov
lods
mov
insl
fcoml
push
push
mov
push
movsl
and
out
mov
or
sub
xor
mov
roll
ret
ret
negl
mov
fcmovne
sub
jge
jnp
xchg
push
pop
mov
imul
mov
pop
mov
push
xor
mov
shlb
and
icebp
inc
push
fiaddl
mov
loop
rclb
inc
addl
or
or
icebp
xor
adc
aaa
add
mov
inc
and
pop
and
test
jmp
inc
cmpsl
mov
inc
and
iretw
and
jb
xor
out
mov
ja
xor
test
jmp
push
jae
rol
bnd
mov
pushf
out
inc
movsb
push
scas
pop
mov
ss
test
inc
fistpl
ficoms
sti
mov
pop
leave
adc
inc
pop
mov
pusha
mov
add
je
stc
and
rorl
test
push
mov
add
fwait
jns
lret
inc
inc
out
pushf
sbb
je
mov
and
pop
addr16
cmpsl
jge
repnz
sbb
and
stos
mov
xorl
jbe
outsb
xor
fsub
movsb
fwait
jp
call
sbb
out
dec
mov
xlat
scas
and
clc
inc
xchg
popf
and
test
cli
cmp
jo
cmc
es
inc
loop
and
inc
jle
lcall
mov
jns
jg
dec
bound
mov
mov
ljmp
or
sub
insb
push
dec
cmp
mov
and
fwait
xor
lahf
sbb
or
daa
pop
jo
dec
fmull
jbe
inc
cmp
aam
stc
or
cmpb
fisttpll
loope
idivb
rorb
mov
gs
mov
jecxz
arpl
lahf
ds
lock
arpl
jle
jne,pn
movsb
push
imul
hlt
inc
testl
shrb
sbb
outsb
pop
ror
loop
stos
mov
in
dec
mov
cmp
inc
mov
fstps
mov
jmp
jne
loop
repnz
mov
jns
jecxz
sar
xchg
xor
mov
and
adc
jne
or
imul
testb
sub
rorl
adc
jmp
fs
lahf
dec
test
xchg
daa
jmp
sub
mov
and
sbb
das
cmpsl
loop
mov
ficoms
xchg
notl
pop
imul
aam
insb
dec
fnstsw
xchg
loopne
mov
arpl
decl
sar
dec
enter
mov
push
fimuls
and
bound
xor
popw
or
cwtl
jp
xor
mov
jle
into
gs
insl
ljmp
adc
out
sbb
adc
outsb
jecxz
jle
mov
push
jp
pop
in
clc
dec
out
xor
jae
push
mov
mov
inc
fadds
sbb
pop
int3
insb
cmp
xchg
mov
mov
lahf
lea
mull
sbb
jne
sahf
in
sahf
gs
sub
mov
mov
dec
lea
in
outsl
jns
insb
sbb
sti
dec
xor
xchg
hlt
hlt
xchg
movsb
cmp
adc
pushl
and
cld
push
add
pop
push
pop
xchg
xchg
negb
int3
cmp
rcll
adc
inc
inc
xchg
cmp
frstor
lods
mov
inc
bound
push
adc
jmp
mov
shll
add
sbb
nop
das
pusha
mov
mov
fwait
or
and
dec
adc
rep
and
enter
pop
loopne
xchg
pop
mov
xchg
pop
jge
jle
push
mov
or
mov
outsb
mov
int
jae
aad
call
mov
call
jg
xchg
stc
sub
and
arpl
cmp
mov
cmp
pop
pop
ss
cmp
daa
jne
int3
out
mov
xor
pop
dec
jo
scas
orl
out
pop
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
les
divl
add
add
pop
outsl
inc
push
sub
outsl
and
popa
pop
pusha
add
dec
inc
add
cld
add
adcb
add
add
add
inc
add
and
incl
inc
add
fdivl
inc
and
add
add
jb
dec
inc
push
dec
inc
dec
xor
cs
insb
add
je
outsl
fs
gs
imul
add
add
add
shlb
add
add
jb
gs
xor
cs
insb
add
gs
je
push
jb
arpl
jae
add
fs
insb
cs
insb
add
push
outsb
insl
popa
jo
imul
arpl
outsb
add
imul
jae
dec
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
popa
fs
jb
arpl
jae
gs
outsl
jb
add
je
push
inc
outsl
outsb
je
js
add
jae
insl
gs
push
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
push
imul
jb
add
mov
and
or
adc
add
cmp
movsb
shlb
lahf
sub
insb
dec
in
out
sub
adc
cmp
push
mov
mov
lods
rcr
jl
mov
test
pop
or
push
xchg
sbb
jns
cmpsb
or
shrl
std
das
mov
sbb
in
scas
loope
xchg
jle
push
nop
jl
cltd
jg
icebp
inc
cltd
mov
mov
repnz
push
cld
mov
imul
movsb
jle
xchg
hlt
je
or
pop
int
jno
dec
adc
jnp
pop
pop
ret
xor
mov
pusha
sub
jns
lret
fstpt
push
sbb
pusha
mov
sahf
insb
mov
mov
ja
xlat
daa
dec
xor
pusha
pop
pusha
push
repz
push
stos
bound
call
push
mov
stos
sub
int3
mov
call
push
mov
adc
mov
mov
test
je
ds
into
push
xchg
xchg
pop
iret
and
adcl
sub
mov
mov
data16
or
popa
xchg
test
jl
xor
test
mov
test
add
fmull
mov
lds
inc
hlt
addl
test
fwait
pop
sahf
inc
push
jmp
addr16
stos
shlb
push
fsubrs
cmpsl
setbe
or
outsb
in
jp
push
lock
sbb
add
data16
inc
sbbb
out
mov
test
pop
mov
fdivs
loopne
and
test
push
push
bound
aas
ss
sbb
xlat
shlb
dec
adc
rcl
ljmp
leave
jb
pop
jnp
cltd
sbb
aam
neg
call
jecxz
dec
jns
mov
push
rolb
test
inc
ret
pop
arpl
sbb
push
insb
ds
cmp
outsl
in
push
cmp
push
cld
insl
sub
xor
or
jecxz
std
dec
xor
pop
sub
data16
sbb
lret
rorb
enter
or
sarl
or
pusha
sbb
add
inc
and
pop
sti
clc
jmp
xor
fists
jne
adc
push
push
das
stos
push
add
xor
and
dec
jnp
push
sbb
ds
mov
cs
xchg
fldt
fcomip
test
aad
jle
xor
jae
dec
mov
pop
lret
mov
lock
mov
mov
dec
pop
rcl
sub
gs
clc
mov
dec
mov
nop
xchg
sti
dec
fucom
xor
movsb
inc
adc
call
lret
add
sahf
jle
mov
icebp
sub
fistl
jno
lods
ljmp
mov
loopne
scas
das
pop
cmp
mov
jne
sti
loop
sub
repnz
or
dec
sbb
iret
shrl
and
das
ja
push
mov
mov
int3
mov
mov
rep
sbb
dec
test
mov
adc
cmpl
lods
shlb
pop
push
add
jae
xchg
ja
sbb
and
ja
inc
push
iret
xor
int
mov
sbb
dec
jle
scas
sub
mov
and
loopne
push
fwait
ss
mov
arpl
cmpsb
fistps
inc
sarl
pop
fldenv
mov
subl
enter
jae
lret
mov
test
push
sbb
push
in
fwait
mov
add
mov
mov
push
imul
repnz
arpl
cs
test
pop
sub
lahf
test
push
test
jo
dec
inc
sub
es
mov
outsb
lods
jge
cmpsl
dec
mov
mov
jno
stos
in
call
lcall
sahf
mov
movsl
add
sbb
dec
or
adc
cmp
in
cwtl
push
aas
gs
inc
pop
in
imul
negl
cmc
xor
out
out
sub
lock
fisttpll
jo
jmp
push
add
imul
out
mov
cmp
jo
imul
push
add
pop
push
stos
sbb
pop
ds
scas
fidivrs
inc
jge
mov
fidivrl
mov
or
lock
sbb
pushl
or
mov
mov
pop
jp
and
stc
adc
jl
inc
xor
in
cmp
fcmovb
aaa
xor
mov
cmpsl
lcall
rorb
ds
enter
jne
cltd
int
loop
push
ljmp
mov
sbb
mov
mov
inc
outsl
mov
adc
and
mov
push
scas
mov
ficoms
or
mov
aas
iret
fcompl
jb
push
and
imul
fstpl
push
xchg
test
pop
fimull
je
lcall
cmp
jp
cli
sbb
or
ret
les
sbb
or
adc
fstl
mov
mov
sub
add
sahf
clc
fbstp
dec
xor
ja
sbbl
mov
cmp
movsl
and
in
out
repnz
sti
icebp
xchg
sub
mov
push
jo
jecxz
mov
jmp
xchg
out
ja
push
cmp
sub
sbb
andb
dec
cs
adc
ljmp
hlt
sub
div
cmp
cmp
pusha
jns
sbb
cmpsl
and
adc
imull
lods
jmp
pop
ret
ljmp
jnp
shll
jg
sub
mov
out
fnsave
ret
movsl
pop
insb
mov
add
into
out
cmp
out
sub
and
jne
fucomp
adc
int3
adc
xor
iret
arpl
stos
nop
pop
jae
cmp
sahf
aad
fisubrs
out
cmpsl
sub
pusha
stos
pop
stos
pushf
outsb
test
mov
push
mov
mov
mov
xor
inc
mov
sub
mov
push
fwait
cltd
mov
notl
lcall
xchg
pop
xchg
in
adc
mov
mov
mov
cmc
push
arpl
sbb
ret
sbbl
or
push
in
out
bnd
ljmp
jae
jl
fsts
pop
jecxz
fs
loopne
and
stos
stos
mov
rorb
cli
inc
hlt
inc
mov
push
sbb
and
inc
sahf
jns
fadd
dec
test
push
bound
iret
inc
lea
orl
ret
and
jg
je
imul
mov
push
add
sbb
add
andb
lea
ljmp
sbb
xchg
lock
inc
jle
icebp
in
pop
fstpt
and
fidivrs
out
lret
cmpsl
repnz
xor
test
clc
sbb
out
call
stos
cmpsl
imul
fmul
or
test
std
leave
sahf
push
push
rcr
jae
int
push
adc
pop
addr16
inc
jcxz
xor
jno,pt
clc
sub
out
ds
sub
sbb
pop
cmp
xchg
sbb
dec
divb
imul
imul
push
and
aam
hlt
and
mov
mov
scas
popa
add
idivb
push
inc
inc
and
je
and
mov
dec
scas
xchg
mov
rcr
hlt
jo
das
mov
mov
shrb
jg
test
xor
cmp
push
out
and
stos
and
sub
fiaddl
mov
bound
push
movsb
rorb
out
lea
dec
mov
mov
jl
into
stos
in
pop
aaa
rcrl
sub
xor
test
fldcw
dec
adc
idiv
leave
sbb
xor
es
jecxz
je
outsb
cmp
inc
pop
out
push
dec
cmc
or
xchg
mov
fsubrs
dec
mov
xchg
imul
xchg
xchg
sarb
adc
int3
xor
loope
push
dec
sub
sbb
hlt
pop
jl
sub
jo
daa
add
adc
sub
and
in
adc
dec
faddl
stc
pop
nopl
movsb
jns
inc
pop
outsb
mov
push
pop
xor
rcrb
fs
jnp
pusha
pushf
sub
call
arpl
ret
push
sahf
xor
add
dec
scas
adc
xchg
and
xchg
xor
and
and
mov
cltd
or
jb
sub
mov
sar
xchg
mov
bound
jge
lock
int3
out
mov
jge
daa
std
popf
ret
push
lea
repz
arpl
je
cs
stos
outsb
outsl
cmp
std
clc
hlt
pusha
fcoml
test
fucomp
mov
or
push
jnp
aaa
sub
insl
cmp
gs
add
rcr
or
add
xchg
mov
in
punpckhwd
lahf
jnp
pushf
jge
into
or
xchg
mov
mov
adc
mov
cmp
cmp
jns
adc
xchg
loop
subb
inc
push
int3
dec
jne
sbb
js,pn
inc
adc
push
xchg
mov
mov
sti
dec
sbb
imul
in
lret
mov
loope
pop
push
inc
inc
xchg
adc
outsb
in
or
sub
stos
aad
scas
fs
test
fimull
ret
in
push
cmpb
jnp
pusha
dec
pusha
add
cmp
mov
cmp
add
inc
ja
cld
xlat
xor
xorl
lock
mov
pop
add
push
mov
mov
popa
cs
mov
mov
out
je
ret
xchg
stc
push
je
mov
push
bnd
mov
es
test
sbb
test
xchg
pop
xchg
mov
inc
jo
mov
xchg
push
aad
dec
fiadds
leave
loope
or
dec
bound
jne
sbb
or
test
xor
les
pop
pop
call
and
outsb
sbb
fbld
mov
sbb
fdivr
push
cmp
into
loop
push
jg
dec
add
push
cli
addl
les
out
daa
mov
lcall
pusha
ret
mov
test
sub
lock
cmc
shrb
fdivl
xlat
sahf
out
arpl
cmp
xchg
ffree
push
xor
ret
out
lret
mov
mov
sbb
add
dec
cmp
jl
jl
jb
xchg
pop
rcrl
mov
push
in
mov
cld
or
jl
fadd
shrd
out
push
push
clc
out
mov
adc
mov
out
aad
les
push
into
mov
fnsave
lcall
cli
push
loopnew
pusha
inc
aaa
into
cmp
iret
cmc
cli
shll
ja
stos
sbb
mov
inc
aaa
mov
sarl
mov
aad
jae
mov
jnp
add
imul
mov
nop
mov
mov
outsb
ss
stos
dec
push
jns
xchg
mov
enter
out
clc
rcpps
lea
or
dec
rorb
cmp
push
inc
mov
lods
add
pop
mov
lcall
arpl
out
xchg
imulb
and
stos
add
movsl
movsb
shl
pushf
mov
push
fwait
push
adc
fs
loope
cmp
jmp
out
das
push
imull
add
pop
or
ja
test
mov
lods
out
fwait
xchg
in
cmp
nop
jmp
fnstenv
sub
cmp
add
ds
shrl
sub
lahf
pop
fwait
mov
pop
dec
cmc
mov
lods
sub
out
sbb
std
lods
mov
fwait
cli
xchg
in
shr
int3
push
cmp
sub
clc
sub
adc
add
push
pusha
jne
inc
push
xchg
testl
hlt
mov
lock
mov
sbb
xchg
sub
cmp
cmc
and
sti
pushfw
cmc
sbb
fsubl
sub
xor
std
push
mov
xor
add
ja
sub
ret
int3
stos
pop
xchg
lods
int3
push
pop
call
cmp
popf
aaa
xchg
stc
and
into
jnp
sti
fs
and
mov
mov
inc
cmp
fimuls
out
adc
scas
mov
std
sub
pop
or
inc
lcall
fisubrs
enter
idivl
sbb
ror
mov
push
fldl
pop
cmp
ds
mov
test
ljmp
adc
inc
outsl
cmp
arpl
fwait
rcrb
ja
scas
jo
dec
testb
pop
out
push
jb
pop
jge
scas
or
inc
inc
int3
loop
dec
push
shlb
scas
adc
loope
cmp
push
dec
mov
aas
outsl
subb
add
daa
jb
mov
adc
out
jns
mov
loope
mov
mov
xor
leave
mov
sbb
not
mov
stos
call
sbb
sarb
fimull
aad
ret
cmp
addr16
jl
stc
lea
mov
mov
sahf
idivl
mov
aad
pushf
inc
fldenv
sub
xchg
mov
jno
xchg
adc
in
jmp
mov
pop
fs
shrl
shll
push
rclb
inc
movsb
add
push
outsb
in
loopne
fistpl
dec
fs
pop
lahf
fists
mov
mov
or
mov
dec
and
jbe
lea
cltd
fwait
inc
outsl
or
sbb
fimull
fcomp
push
iret
jns
into
outsl
jle
int
mov
push
add
rorb
notb
and
and
cmpsb
xor
int3
push
bound
jne
xchg
ss
outsb
int3
jae
mov
dec
mov
dec
adc
jno
mov
xor
shl
inc
lcall
leave
add
test
loop
and
xor
and
add
jl
lret
mov
pushf
jbe
sarb
push
shl
inc
push
pusha
mov
inc
and
jbe
inc
test
pusha
jne
dec
dec
test
call
jp
stos
stc
dec
pop
ret
mov
ret
add
loope
imul
pop
cmpsb
sub
out
ret
dec
mov
loop
into
jecxz
push
out
ret
.byte
js
add
add
add
add
arpl
add
add
add
add
sbb
xor
add
add
add
add
popa
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
shlb
shlb
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
bound
add
bound
add
bound
add
add
add
arpl
add
add
add
add
add
add
add
add
fwait
add
imul
jae
add
in
add
je
outsl
insl
insl
popa
outsb
fs
imul
dec
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
addb
gs
je
jb
jne
dec
outsb
outsw
inc
add
add
add
je
outsb
push
gs
js
gs
imul
gs
add
daa
add
addr16
popa
imul
cmp
pop
pop
jo
pop
outsb
jbe
jb
outsb
add
add
jo
pop
insw
outsl
fs
add
push
add
jae
je
popa
jo
pop
je
jo
add
add
jns
pop
arpl
imul
pop
imul
pop
outsl
outsb
gs
je
add
test
pop
jae
je
outsl
fs
sbb
popa
je
js
je
add
add
add
add
insl
popa
insb
insb
outsl
arpl
add
add
outsb
popa
insb
add
add
cltd
add
jb
insl
jo
add
add
add
add
inc
jb
popa
je
push
imul
inc
add
add
push
imul
outsl
arpl
add
add
popa
je
push
popa
addr16
add
roll
inc
imul
outsl
ja
add
add
inc
gs
gs
popa
addr16
add
add
fs
jne
jae
jb
add
add
fs
arpl
inc
add
add
jae
push
jne
je
gs
popa
add
add
add
imul
popa
jae
inc
js
add
inc
add
outsl
ja
imul
add
pop
add
outsb
jae
popa
je
dec
gs
popa
add
add
add
pusha
add
add
add
add
add
add
add
dec
inc
dec
xor
cs
insb
add
add
sub
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
add
pusha
add
arpl
cs
insb
add
cmp
add
add
add
add
add
add
add
add
add
add
add
push
xor
cs
insb
add
add
inc
mov
add
add
add
add
add
sub
add
pop
add
adcb
add
mov
add
inc
mov
add
add
add
add
add
inc
add
addb
add
inc
mov
add
add
add
or
add
add
inc
mov
add
add
add
mov
add
addb
add
inc
mov
add
add
add
or
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
add
in
jo
add
add
add
jae
add
add
call
add
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
pop
ja
ja
ja
ja
jo
add
add
add
ja
ja
ja
ja
add
pop
jo
add
add
or
jo
or
jo
add
add
mov
jo
or
jo
add
add
mov
jo
ja
mov
pop
jo
add
add
mov
jo
or
jo
add
or
ja
jo
or
jo
add
mov
add
add
or
jo
add
orb
mov
add
mov
mov
jo
or
add
add
add
or
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
mov
decl
pop
jo
addb
lock
decl
pop
jo
xor
lock
decl
pop
jo
xor
lock
decl
add
add
add
add
decl
pop
jo
add
xor
decl
pop
jo
add
xor
decl
add
add
add
add
add
decl
pop
jo
add
add
cmp
decl
pop
jo
add
add
cmp
decl
add
clc
add
push
add
jmp
add
inc
add
incl
add
incb
add
cld
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
addb
pop
addb
pop
addb
jg
add
jg
add
incl
add
inc
add
incl
add
add
add
and
add
add
call
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
pushf
add
add
add
add
xor
aaa
add
add
inc
add
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
outsb
add
add
add
add
add
js
add
add
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
outsb
add
add
add
add
add
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
pop
add
.byte
