push
mov
sub
movzbw
mov
push
push
push
lea
push
push
sub
push
add
push
movl
mov
call
mov
mov
movzbl
lea
mov
lea
cmp
je
imul
add
mov
movl
mov
sub
add
lea
add
dec
sub
sub
mov
inc
mov
mov
mov
imul
mov
sub
add
cmp
mov
mov
je
cmp
je
mov
sub
add
jmp
mov
sub
add
mov
mov
mov
sub
add
mov
sub
mov
mov
movzbl
sub
mov
add
imul
add
imul
add
lea
cmp
mov
jne
mov
imul
add
mov
sub
add
mov
mov
call
mov
mov
imul
add
imul
pop
sub
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
xor
mov
mov
movzbw
add
mov
add
mov
sub
add
mov
movzbl
mov
sub
dec
mov
mov
jne
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
movzbl
sub
push
push
push
mov
push
lea
push
mov
push
sub
push
mov
call
mov
sub
push
lea
push
push
push
add
call
mov
add
mov
lea
push
push
call
add
lea
push
push
mov
movl
call
add
add
dec
jne
mov
mov
push
push
call
mov
mov
mov
imul
add
sub
mov
mov
push
push
push
push
call
add
adc
dec
mov
jne
mov
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
sub
lea
sti
mov
xor
call
inc
test
incl
add
incb
push
or
inc
incl
add
mov
incl
test
lea
add
xor
orb
or
xchg
push
int
inc
dec
pusha
loop
push
mov
xor
lea
hlt
int3
xchg
mov
add
or
repz
nop
inc
push
stc
add
inc
and
push
or
mov
jb
nop
xchg
mov
mull
cli
xor
or
sbb
mov
inc
add
xchg
mov
xor
call
clc
and
jae
xor
aad
test
push
xchg
push
jb
add
std
fwait
sbb
jb
sbb
mov
and
mov
lret
add
pop
sbb
data16
sub
sbb
add
rclb
xchg
insl
or
nop
add
cli
inc
add
and
mov
lret
inc
imul
mov
push
nop
sub
jne
adc
nop
outsb
push
repz
inc
sub
call
add
fs
jmp
add
xor
inc
xor
iret
incb
inc
ret
mov
leave
and
loope
xchg
add
add
lods
daa
nop
add
and
sub
insb
xchg
jb
loop
add
test
push
stos
mov
xlat
jae
cwtl
popf
cwtl
jp
mov
dec
bound
fs
nop
add
add
out
mov
add
nop
repnz
in
iret
mov
stos
addb
stos
xor
nop
sub
sarl
add
add
or
pop
add
pop
or
dec
in
into
sub
nop
icebp
xorl
cmc
leave
shll
addl
inc
push
pop
xor
cmp
lret
int
pop
push
roll
int3
add
add
dec
xor
sbb
fldenv
pop
sub
icebp
mov
int3
mov
or
mov
xorb
sbb
inc
push
or
push
cmc
shlb
add
mov
dec
jecxz
mov
lock
mov
pop
insl
mov
jg
lea
mov
fstps
rcll
or
lea
and
ljmp
lcall
idivl
nop
inc
jae
mov
pop
cmp
jb
cmp
mov
xor
nop
jle
iret
jbe
sahf
int3
sbb
int3
jb
pop
dec
and
add
scas
das
lea
add
movsb
test
jnp
fimuls
mov
sbb
push
jb
pop
sahf
add
or
inc
push
int3
mov
incl
add
mov
sti
test
incl
add
repz
add
xor
call
mov
cmp
add
addl
call
add
ljmp
inc
test
add
mov
incl
add
incb
add
int3
mov
cmp
or
mov
cmp
imul
xor
xchg
add
adc
mov
fsubrp
add
movsl
pop
mov
add
and
push
add
mov
xor
add
ja
nop
hlt
pushf
add
xchg
adc
mov
xchg
movsl
nop
loopne
sbb
inc
add
add
int3
mov
iret
loop
add
mov
pop
mov
jno
pop
xor
inc
imul
push
dec
xchg
or
mov
mov
add
add
jecxz
std
push
add
jbe
pop
pop
cmp
nop
xchg
xor
jns
call
mov
pusha
cmp
nop
lea
mov
das
add
push
xor
lds
test
xchg
lcall
xchg
add
jmp
mov
std
push
xchg
mov
movsl
or
add
adc
xchg
int3
mov
call
inc
aam
or
add
loope
shll
fldl
inc
push
add
pop
cltd
and
inc
cmp
add
test
dec
int3
call
sbb
add
push
decb
add
and
sbb
add
add
test
add
out
cld
push
int3
addb
iret
pop
add
loop
mov
xchg
and
add
jno
xor
cmc
pop
out
mov
nop
mov
pop
mov
pop
cmp
subb
imulb
add
stos
lahf
xor
loope
cmc
sub
int3
daa
push
int3
int3
sbb
jae
adcb
rolb
sahf
cmpsl
shr
cld
add
inc
jb
sbb
mov
ror
add
movsb
imul
pop
mov
lods
int3
cmpsl
jae
enter
ror
jecxz
imul
imul
adc
cmp
mov
cmpsl
pop
cmp
out
outsl
adc
xor
add
or
mov
lea
loope
aad
or
push
jge
fldt
popa
cmp
add
add
outsl
ficomps
mov
sbb
pop
lret
mov
in
lret
movsb
jne
xchg
test
daa
xchg
add
jns
nop
in
inc
outsb
add
xchg
loop
jmp
push
add
push
push
mov
inc
lock
test
aaa
jne
add
jecxz
mov
add
adc
shll
in
dec
or
add
push
int3
add
into
add
add
and
mov
enter
enter
leave
xchg
imul
xchg
add
sbb
add
xor
cmp
lea
xor
cmp
xor
lea
icebp
xchg
adcb
mov
scas
jb
add
push
nop
add
add
mul
loopne
call
sbb
push
rcll
jmp
nop
jo
loop
inc
add
ja
lret
mov
insl
hlt
cmpsl
mov
dec
inc
mov
call
mov
cmp
push
addb
fstpt
outsb
push
mov
mov
add
xor
xor
adc
jb
jo
dec
movaps
push
ret
cmpsl
cmp
mov
add
scas
lret
add
add
mov
popa
add
jg
add
out
mov
sub
call
xchg
nop
ret
add
lcall
jb
insb
into
jns
lcall
cmpsl
mov
adc
jae
into
or
sub
adc
adcb
rolb
add
test
push
mov
add
sbb
addl
inc
add
int3
jge
add
pushl
add
incl
add
cmp
div
decl
add
push
scas
scas
dec
int3
add
jae
add
jp
imul
xchg
jmp
popf
xor
jo
jo
out
rolb
mov
int3
push
jecxz
fwait
sbb
test
add
cmp
mov
mov
bound
sub
cs
int
add
cmpsl
nop
add
int3
int3
call
sub
cmp
ss
sub
add
in
out
cmpsb
add
call
sti
inc
lahf
outsl
mov
mov
shlb
int3
pushf
rcll
dec
xchg
and
adc
push
lret
dec
jo
sub
xchg
dec
add
dec
add
add
popl
pop
or
cmp
push
and
add
stos
mov
lea
mov
xor
addb
push
cmp
ret
pop
int3
add
pop
mov
sub
loopne
mov
push
push
je
add
dec
sub
mov
shlb
pop
push
add
jne
push
add
int3
add
xchg
add
out
andb
addb
xchg
int3
orl
int3
and
sahf
mov
je
adc
int3
lods
inc
imul
add
das
push
outsl
jge
call
mov
add
add
lods
mov
gs
lea
adc
cltd
inc
gs
add
cmc
mov
cmp
dec
negb
inc
cmpl
jle
add
and
adc
int3
jb
jns
mov
addb
add
add
jp
bound
call
lahf
add
push
push
adc
sbb
int3
lret
aas
loope
mov
or
add
mov
pop
clc
sti
add
popa
pop
and
insb
addl
add
fs
add
cwtl
add
mov
jno
add
cs
stos
arpl
mov
and
add
int3
int3
mov
mov
pop
divl
mov
inc
add
sub
add
js
outsb
aas
mov
push
sbb
add
mov
xlat
imul
sbb
fiadds
sbb
call
add
add
mov
lea
sub
lea
sbb
add
incl
mov
sbb
mov
add
decl
int3
inc
test
inc
data16
add
add
je
adc
incl
call
mov
sub
fcomi
add
add
decl
add
add
add
int3
sub
add
mov
push
or
and
ljmp
imul
ds
cmp
mov
add
pop
pop
call
add
cmpsl
jge
lea
mov
xchg
out
add
fcmovbe
push
add
insl
lock
add
and
les
fwait
add
push
sub
add
orb
insl
nop
jo
push
or
dec
aaa
adcb
ret
out
es
add
fmull
and
dec
scas
mov
push
add
leave
jo
ds
out
fld
and
mov
mov
adc
int
xchg
ret
inc
add
jb
int3
xor
mov
je
cwtl
popa
and
fisubrs
movsl
adcb
mov
fs
pushf
int3
add
xchg
js
jp
cld
pop
mov
mov
int3
int3
dec
ds
or
cmpsb
mov
add
add
sbb
sbb
cli
sbb
test
pop
push
sbb
add
aaa
outsl
cmp
mov
add
loop
mov
cwtl
out
sbb
xor
arpl
add
rcr
lret
ret
fwait
push
pop
popf
jb
sbb
cmp
xchg
outsb
xor
aaa
add
jo
movsl
pop
xlat
add
mov
add
popa
mov
lea
repnz
test
xchg
xchg
add
adc
add
arpl
add
add
add
lret
pop
add
add
je
leave
ss
mov
pusha
or
push
rorb
adc
add
xchg
add
cmovno
std
in
adc
jo
dec
or
test
cld
add
pop
int3
call
mov
xchg
xlat
add
sbb
add
or
int3
mov
lcall
aaa
or
nop
int3
or
or
nop
incl
push
out
imul
arpl
cld
push
cmp
sub
mov
add
movsl
imul
ljmp
sbb
addb
or
xchg
imul
add
add
and
jo
xchg
andl
add
xorl
adcb
add
inc
inc
int3
jo
lods
mov
add
inc
mov
add
lods
addr16
inc
adc
popl
cld
repz
adc
out
adc
add
inc
xor
mov
cmp
popf
adc
sub
hlt
int3
add
xchg
or
add
add
stos
mov
or
pop
pop
xchg
in
int3
nop
pop
push
xor
or
js
shr
add
addr16
xchg
add
dec
mov
mov
cmp
lods
adc
pop
push
in
add
aam
addl
cmpb
and
sysret
loope
add
gs
loop
push
clc
jb
ret
pop
adc
add
addb
add
add
inc
pop
mov
xlat
add
xchg
inc
int3
cmp
add
test
repnz
xor
mov
nop
add
and
std
xorb
js
add
inc
ljmp
cld
mov
inc
dec
and
sub
mov
inc
add
fst
ror
nop
cmp
cmc
popl
shl
add
movsl
xlat
les
add
jbe
ljmp
adc
adc
mov
push
xor
mov
test
int
test
add
jae
lock
or
int3
test
add
decl
add
popf
push
sub
insb
add
das
imul
rorl
inc
int3
mov
sti
adc
int3
mov
add
sub
xchg
jecxz
jb
inc
das
arpl
pop
add
mov
add
inc
dec
xchg
jmp
lock
jg
fcomip
push
add
lret
nop
add
dec
mov
mov
roll
add
cmp
pusha
push
add
int3
add
add
add
cmc
add
loop
out
add
mov
cmp
cmc
xlat
push
push
xchg
jg
add
cmp
xchg
inc
int3
add
ja
int3
cmp
subb
lret
add
data16
add
insb
adc
adc
xor
ror
add
arpl
lea
add
and
ret
iret
repz
gs
jbe
mov
rorl
or
in
add
nop
add
dec
nop
add
fnstcw
mov
add
int3
cmp
sbb
add
dec
hlt
mov
cmp
in
jo
add
sub
es
fisubl
add
cmp
sbb
sbb
sbb
dec
test
dec
jmp
push
inc
add
movb
push
je
sub
call
incl
incl
incb
incl
add
call
jne
sbb
add
incl
addl
add
decl
push
mov
int3
add
fs
out
nop
mov
aaa
arpl
in
and
dec
xchg
jo
aam
add
or
push
add
mov
imul
push
loope
add
outsl
loopne
add
out
sbb
cwtl
ja,pt
mov
add
and
add
add
or
jbe
mov
add
jne
inc
add
jb
xchg
ja
add
out
fmull
and
aas
sub
inc
mov
lret
pop
push
jnp
push
mov
push
pop
loop
int3
lea
dec
push
cwtl
add
cmpsl
rcr
add
add
mov
mov
jle
xchg
add
sbb
sbb
push
mov
subb
inc
shlb
test
test
lret
movsb
mov
leave
clc
add
out
mov
sbb
inc
cmp
add
mov
cmpsl
mov
add
and
sbb
mov
jb
sub
adc
add
cmpb
dec
mov
int3
jge
pop
jle
nop
cmpsb
gs
sarb
lods
push
add
lock
nop
add
add
add
sahf
movl
xchg
push
popf
insb
pop
inc
add
int3
push
into
xor
int
add
mov
test
int3
ds
and
stos
mov
mov
jb
inc
je
imul
jg
mov
jb
sub
jp
jle
int3
imul
adc
add
dec
adc
lea
push
and
mov
int3
add
fwait
in
add
xchg
dec
and
push
fldenv
fistpl
ret
addb
mov
arpl
jo
sub
add
add
cmp
fscale
mov
aad
push
mov
dec
cmp
int3
inc
add
movsb
xchg
inc
inc
add
jmp
nop
mov
outsl
call
test
ficomps
lahf
add
ja
inc
sbb
xchg
cmc
add
push
or
enter
xor
add
xor
inc
scas
dec
dec
add
addb
pop
fidivrs
int3
cmpl
sarb
aad
or
nop
pushl
pop
pop
add
outsb
cmc
mov
add
loopne
jb
xchg
push
aam
sahf
aas
mov
cmpsb
adc
lea
nop
push
mov
add
fidivs
out
add
sbb
xchg
faddl
cltd
push
addr16
incb
and
or
or
cmpsb
pop
cwtl
nop
jnp
cmp
mov
jb
call
insl
mov
nop
add
bound
add
add
push
mov
cmp
int3
pop
push
add
call
add
test
test
int3
int3
xor
mov
add
rorb
inc
add
ljmp
adc
add
push
ljmp
mov
call
add
mov
sti
sub
add
outsl
jmp
push
addl
call
decl
arpl
jne
jmp
movl
int3
cmp
mov
rol
les
incl
fimull
add
adc
hlt
jo
add
mov
lea
jnp
hlt
nop
inc
sbb
add
pop
lock
test
ret
add
jecxz
pop
data16
mov
int3
arpl
js
inc
xor
sbb
inc
add
shll
cmp
cmc
inc
int3
and
incl
and
pop
xchg
fldt
pop
mov
add
lods
jae
push
add
int3
repnz
rcrb
push
add
in
mov
call
add
iret
cmp
add
and
adc
ficoms
arpl
add
add
xchg
inc
popa
faddl
add
stc
in
imul
jae
das
add
pop
aas
pmullw
pop
nop
add
sub
xchg
add
stos
push
fcmovnu
or
add
add
inc
mov
mov
ss
push
addr16
scas
lahf
and
xor
fwait
lcall
mov
sbb
mov
fildl
add
add
inc
add
ret
mov
xchg
inc
in
jo
nop
add
in
xchg
mov
testl
int3
dec
adc
nop
stc
adc
xchg
inc
outsl
lods
lock
pop
addr16
or
add
out
mov
outsl
add
daa
jae
lock
nop
inc
mov
ret
repz
fwait
xor
add
outsb
test
pusha
cs
or
int3
mov
fmull
pusha
jne
inc
add
xchg
pop
and
ja
popf
add
mov
sbb
inc
mov
int3
aas
mov
add
je
jl
add
sub
mov
inc
inc
xchg
mov
and
add
bound
std
aad
add
xchg
aad
mov
add
outsl
add
nop
std
mov
and
push
addl
add
add
fimull
add
jb
hlt
mov
int3
test
icebp
push
inc
and
inc
fldenv
jae
add
add
add
mov
mov
add
scas
test
shlb
inc
add
inc
iret
icebp
add
leave
add
jb
int3
inc
repz
cs
loop
int
enter
cld
add
mov
mov
cli
cmpsb
dec
push
mov
and
nop
add
mov
int3
pop
out
add
pop
push
fldl
pushf
sub
ja
out
mov
inc
sbb
cmp
fidivl
insb
fbstp
or
pop
inc
dec
add
cmpsl
lea
nop
inc
push
jb
cli
and
sahf
int3
in
idivb
cli
sbb
call
xchg
add
jl
add
push
hlt
sbb
insb
add
pushl
xchg
dec
sahf
add
pusha
push
xor
inc
aas
outsb
or
icebp
add
sub
dec
pop
adc
add
pop
inc
jo
add
lret
add
jg
pop
inc
mov
int3
xorb
mov
add
push
add
jns
jb
xchg
inc
mov
lods
xor
sbb
xchg
das
test
add
loop
cmp
jl
xor
add
jb
out
jnp
add
push
jo
nop
jp
pop
nop
add
jg
and
nop
mov
in
jb
mov
inc
xchg
xor
pop
cltd
ds
xor
add
fsubrs
mov
add
pop
loop
add
test
call
sbb
push
pop
inc
nop
test
das
in
add
rolb
or
imul
xchg
push
xor
fidivrl
leave
fcoml
mov
mov
pop
jmp
in
jns
push
int3
pop
les
jo
loope
sbb
dec
xor
jae
add
aaa
adc
loope
js
jo
pop
loopne
jb
jle
dec
cmp
add
lea
lea
jge
adc
xor
call
xchg
stos
movsb
loop
add
inc
or
sbb
data16
pop
add
xchg
out
jle
mov
xlat
imul
pop
add
mov
add
add
mov
jle
mov
pop
arpl
mov
repnz
cld
mov
jl
test
mov
push
mov
test
mov
insl
jmp
add
ret
mov
or
int3
iret
push
outsl
xor
add
add
pop
jb
dec
push
jo
fucomp
add
mov
adc
push
mov
icebp
xchg
mov
orb
push
push
in
add
xchg
fldl
and
jnp
int3
mov
fs
clc
add
or
int3
nop
das
or
jb
sets
aam
stos
rcrl
inc
sarl
stc
inc
int3
call
and
and
ss
addb
cmpsb
push
cmp
xor
nop
pop
add
mov
jbe
iret
pop
repz
jg
add
mov
loope
add
imul
int3
add
adc
add
test
add
add
test
orb
addl
ja
add
incb
add
lcall
incb
add
jne
test
mov
dec
adc
or
int3
cmp
inc
les
lea
push
push
add
inc
orl
jb
sar
enter
xchg
add
cld
mov
adc
imul
inc
jae
loope
add
adc
call
sbb
int3
mov
call
or
add
push
xor
mov
into
sub
popa
xor
dec
add
imul
cmp
inc
stc
into
or
fdivrs
nop
iret
xor
mov
call
mov
incl
jmp
add
scas
ret
dec
add
pop
cmpsl
or
jo
add
add
testl
add
jns
add
loop
cmp
jo
push
incl
nop
gs
imulb
int3
nop
xor
add
int3
mov
jg
out
out
jo
xchg
ljmp
xor
xchg
xor
js
loop
int3
je
loope
sub
mov
ficoms
scas
into
add
in
jl
mov
add
inc
fisubrs
mov
aas
add
add
data16
outsl
int3
aaa
or
ffree
jo
in
mov
or
add
add
int
xchg
mov
xor
ror
je
int3
xchg
cs
jmp
xor
xchg
add
dec
or
test
mov
add
insb
or
stos
lea
mov
cld
jo
xchg
lcall
ret
sbb
cmpsb
add
imul
lock
lea
add
dec
push
and
stos
add
push
ret
add
add
adc
add
add
push
sub
inc
adc
add
jmp
arpl
movsb
adcb
je
add
aaa
mov
mov
xchg
and
cmc
lds
jns
inc
rcrl
fiaddl
add
mov
imul
sar
xchg
rolb
add
mov
dec
adc
jb
rclb
rolb
xchg
fs
jbe
fildl
or
pop
call
push
cmpsb
int3
add
sbb
lds
or
call
je
mov
inc
test
mov
mov
into
pop
nop
adc
sub
rol
outsl
lea
fildll
int3
pop
or
jo
lds
add
jnp
pop
add
fistpll
jb
push
mov
in
arpl
popa
pushf
and
mov
add
push
mov
add
push
mov
pop
add
nop
add
dec
jbe
add
pop
pop
add
jnp
pop
and
inc
xchg
in
mov
pop
nop
pcmpgtd
mov
cli
xchg
ds
jo
negb
rcrb
mov
mov
repz
inc
add
adc
add
movb
adc
test
add
sbb
std
arpl
add
add
jae
nop
add
dec
xchg
mov
lea
mov
jl
inc
mov
adc
push
xor
lahf
add
hlt
push
mov
sbbb
jb
int3
push
lret
jo
rcl
and
push
ficomps
lea
xchg
mov
xchg
add
in
xlat
testl
pop
nop
add
xor
add
mov
rolb
push
jmp
testb
add
pop
and
nop
out
pop
cmp
pop
inc
sbbl
ret
int3
fidivrl
add
dec
lcall
fists
dec
lea
add
add
call
decl
mov
decl
mov
pushl
push
mov
incl
add
or
incb
or
add
int3
int3
cmp
in
mov
mov
int3
lea
mov
test
adc
add
cmp
add
int3
push
in
push
add
push
add
inc
sar
fwait
add
sbb
pop
aad
nop
and
out
out
lea
pop
adc
push
mov
fidivrl
mov
pushf
call
cmp
call
mov
ds
popl
jae
xchg
mov
jae
add
int3
int3
push
das
scas
movsb
mov
add
loop
dec
mov
leave
enter
xor
mov
outsl
add
cli
daa
shll
or
add
push
xchg
mov
inc
cmp
add
inc
mov
mov
push
and
sbb
cmp
ja
stos
insb
int3
add
clc
cmp
xor
imull
add
nop
out
dec
mov
nop
mov
push
xchg
ror
add
inc
movsb
add
add
lea
int3
hlt
jbe
jo
add
rclb
cmp
xchg
xlat
xorb
sahf
scas
out
add
or
add
enter
mov
mov
cmc
imull
adc
add
lods
pusha
and
ror
lea
mov
inc
in
or
jge
imulb
loopne
int3
add
or
out
add
add
xor
ret
pop
and
add
je
sti
pop
int3
add
mov
sbbb
add
mov
fildl
mov
and
and
mov
js
lods
call
test
fcomp
cmp
mov
cs
cmp
inc
add
ss
add
testb
xlat
mov
rcrl
int3
mul
mov
jb
enter
add
mov
adc
cmp
sarb
add
and
out
and
lcall
inc
inc
add
cmp
inc
add
fidivs
push
cwtl
call
aas
ret
inc
add
mov
pop
mov
fidivrl
add
sub
nop
jnp
jmp
jo
pushf
addl
xchg
scas
hlt
add
imull
or
ljmp
sti
add
mov
lcall
sbb
fwait
mov
inc
inc
je
nop
push
lret
int3
int3
pop
mov
rcrb
adc
cltd
mov
push
dec
add
int3
mov
sbb
add
mov
call
xchg
add
in
mov
add
rolb
jo
mov
int3
add
pop
call
subl
cs
add
scas
jp
inc
inc
nop
jne
xor
xor
add
xchg
int3
or
into
insl
lea
in
test
mov
cli
sar
and
pop
add
ja
push
xor
mov
mov
lahf
pop
inc
jo
jb
ss
in
xchg
imul
mov
add
repnz
pop
mov
lods
popf
leave
sbb
inc
fmull
add
nop
movsl
loope
mov
xchg
cmc
imul
sub
add
jb
loopne
je
out
xor
add
mov
push
fs
add
and
xchg
inc
add
push
popa
add
int3
sub
loopne
scas
push
mov
dec
insb
push
inc
add
jnp,pt
pop
mov
add
pop
push
mov
pop
jo
and
int3
add
iret
out
mov
mov
out
jp
cmpsl
xchg
push
add
sbb
addb
sbb
xlat
mov
jno
sbb
jno
add
jo
sbb
popf
xchg
pop
inc
cmp
mov
mov
push
dec
jo
mov
add
add
xchg
inc
add
lea
sub
and
mov
dec
or
pop
xorl
lea
call
add
add
xor
inc
or
mov
mov
incl
add
aas
add
jmp
mov
inc
incb
mov
test
xchg
sub
push
incb
add
mov
xor
lea
or
mov
and
call
decb
add
adc
incl
mov
lret
hlt
sahf
aas
xchg
lahf
mov
jge
addr16
call
and
add
add
call
add
push
pop
sbbl
dec
pop
cwtl
adc
jo
call
add
add
or
sbb
stc
push
testb
fsubl
xor
fnstcw
cs
add
xlat
in
insb
addb
mov
nop
adc
push
and
nop
add
push
or
xchg
push
xchg
inc
xchg
test
add
test
adc
add
cmc
rorl
jns
fwait
jge
mov
data16
sbb
add
xchg
inc
jle
out
imul
nop
add
mov
hlt
inc
mov
shlb
in
or
mov
add
cs
call
mov
outsl
jo
fwait
jp
stos
jb
pop
lret
add
out
xor
xchg
jo
add
mov
adc
inc
jecxz
pop
cltd
pop
nop
add
testl
mov
inc
adc
pop
jno
add
xchg
cmp
add
adc
stc
jmp
add
xor
mov
inc
push
cmp
add
or
mov
lods
mov
add
int3
int3
leave
cld
loop
nop
insl
xor
movl
sub
add
cmp
cltd
add
in
add
add
stos
or
xchg
adc
lea
add
sahf
cmp
negl
mov
add
flds
add
aam
mov
lea
add
js
movsl
mov
int
popf
mov
wbinvd
inc
nop
jno
mov
mov
sbb
xchg
add
add
inc
and
or
inc
addr16
push
add
daa
outsb
xor
add
stos
int3
fdivrs
mov
mov
push
mov
and
loopne
add
dec
add
add
inc
inc
cld
cs
or
jae
mov
adc
add
pop
mov
add
popa
loope
mov
mov
test
add
js
push
add
ja
cmc
mov
add
and
or
add
adc
nop
outsb
rclb
sbb
pop
lret
add
sub
add
ljmp
repnz
ja
int3
mov
pop
in
out
lret
add
int3
andb
cmp
pop
call
jl
add
imul
add
xor
add
cmp
and
fmull
cmpsb
add
inc
cltd
and
push
pop
test
add
dec
xchg
subb
cltd
adc
add
mov
and
aad
int3
pop
or
icebp
xor
add
loopne
and
cmp
jmp
sbb
xchg
add
inc
insl
mov
mov
mov
test
sbb
test
or
movsl
add
mov
int3
mov
mov
sub
or
arpl
add
or
sbb
pop
add
sub
add
lea
sub
shrb
xchg
cltd
scas
jo
mov
dec
in
in
inc
add
fisttpll
xchg
int3
dec
adc
mov
cli
push
dec
lea
xchg
cli
xlat
nop
pop
adc
add
jno
or
mov
cmp
nop
nop
out
mov
add
cmp
mov
mov
add
jb
jmp
add
jecxz
enter
inc
test
out
ds
mov
ret
sbb
add
imul
das
testb
add
pop
mov
std
aaa
add
mov
push
add
mov
xor
add
mov
mov
pop
loop
clc
fwait
addb
repnz
push
jle
lret
add
icebp
vorps
pop
pop
xor
call
add
addl
xchg
add
add
loopne
add
add
lret
mov
xor
cwtl
or
xlat
mov
add
test
xor
add
add
jg
mov
sbb
push
dec
lods
adc
mov
jb
xchg
daa
or
adc
int3
cmp
cmp
mov
je
nop
into
pusha
push
xor
int
das
xchg
add
shlb
int3
lea
and
jmp
insl
dec
cli
shrl
nop
push
jmp
xchg
addb
pop
mov
out
stc
push
add
fwait
mov
ficomps
int3
int3
loope
sbb
jo
xor
and
inc
sahf
mov
pop
in
mov
lea
inc
call
jecxz
je
int3
mov
mov
push
cmp
inc
add
dec
int3
test
call
sbb
mov
jne
cmp
pop
pop
add
push
or
int3
incl
push
mov
inc
incl
add
je
add
test
or
mov
je
add
jmp
int3
int3
cld
call
add
add
mov
test
xchg
ret
add
or
je
push
cmp
add
nop
inc
aas
xor
imul
testl
mov
stos
sbb
mov
inc
push
add
jl
push
add
inc
jecxz
add
test
pop
add
ret
add
insl
popf
imul
mov
jb
stc
add
cltd
cmc
out
add
dec
xchg
pop
fcmovne
addr16
fadds
mov
dec
jae
and
mov
lea
sub
out
sub
ljmp
cltd
dec
xor
inc
xlat
pop
pop
int3
pop
int3
sub
inc
pop
add
mov
push
fimuls
mov
or
mov
jbe
mov
stos
and
add
dec
inc
out
out
out
mov
imul
pop
mov
repnz
pushf
inc
in
sti
call
jg
add
roll
out
pop
add
jmp
and
add
sub
mov
pop
subb
xor
add
or
shll
add
mov
mov
dec
dec
add
jg
stos
rcll
jecxz
xchg
inc
mov
push
in
out
cmp
ret
adc
sahf
movsl
mov
add
or
jno
addb
fldt
lahf
add
cmpsb
in
or
movsb
add
data16
mov
nop
shlb
add
int3
add
cmp
xor
repz
cmp
add
mov
sub
or
sub
cmp
add
iret
add
ss
add
push
push
data16
add
cmp
jmp
add
xchg
nop
cmpb
push
xor
rcrl
add
and
sbb
add
push
mov
adc
xor
xor
push
sub
mov
mov
jb
ja
and
int3
inc
mov
mov
add
pop
mov
jbe
xorb
dec
inc
and
sbb
pop
add
inc
add
push
push
mov
and
das
imul
add
mov
add
add
mov
add
mov
add
dec
movsb
add
lcall
jle
dec
mov
add
mov
add
cmp
add
pop
add
jne
fadds
ja
outsb
mov
inc
xor
dec
cmovl
inc
aad
pop
sbb
jo
insb
add
sbb
nop
fwait
test
mov
add
in
jnp
ljmp
mov
pop
and
je
sub
mov
into
cltd
fmul
push
add
ja
aad
pop
and
jb
cwtl
dec
js
mov
fmuls
into
and
int3
and
mov
mov
addb
mov
mov
or
cmp
jo
pop
repz
cmp
ja
xchg
daa
add
inc
ljmp
xrelease
adc
add
pop
lcall
pop
arpl
subb
adc
mov
add
stos
and
or
add
inc
jp
lds
xor
pop
sbb
mov
push
ror
pop
ja
push
repz
jno
into
mov
nop
xor
add
jns
and
int3
nop
fdivr
loopne
int3
imul
xor
jo
sbb
push
testb
lret
mov
movsl
and
insb
scas
addb
adc
dec
ljmp
sti
lea
push
sub
js
xor
mov
sbb
mov
add
and
or
add
aas
insl
jb
in
add
inc
add
in
jne
add
dec
adc
int
int3
add
add
ja
inc
or
inc
pop
or
sbb
inc
add
inc
es
or
cmpsl
imull
mov
pop
fistps
add
add
psubusw
loopne
and
popf
mov
int3
add
sbb
xchg
jl
nop
cmc
cmovg
test
add
frstor
push
add
fcmovnbe
nop
int3
mov
mov
gs
xor
xor
adc
sbb
inc
jge
pop
pop
xor
cmpsl
fimuls
rcrb
add
fildll
sti
mov
std
stc
dec
jo
mov
add
leave
sub
mov
mov
add
mov
xor
add
les
sar
ja
addb
jmp
xor
incl
add
incb
incl
addl
dec
int3
mov
call
add
jmp
je
jmp
sti
movl
mov
int3
cld
add
int3
add
pop
pushf
add
pop
mov
xor
pop
lea
add
mov
nop
mov
int3
lret
jle
adc
stc
nop
fimull
add
add
imul
sbb
inc
add
cli
mov
sahf
dec
inc
int3
cmp
xchg
cs
inc
jno
add
movsb
push
jl
mov
in
add
mov
xchg
mov
cmpsl
insl
in
inc
add
adc
add
addb
add
xchg
scas
scas
lea
and
push
add
aad
dec
int3
int3
orl
rorb
add
xlat
nop
mov
add
inc
inc
mov
mov
push
lret
jg
int3
push
push
addr16
sub
fbld
xchg
push
add
mov
arpl
fbstp
iret
xor
inc
push
mov
in
nop
pop
cmc
inc
push
int
add
in
test
popa
nop
xchg
and
int3
ja
cmp
add
add
enter
xor
jl
dec
push
call
mov
loope
xor
push
xchg
jae
and
imul
xlat
push
inc
sub
leave
nop
add
addl
xlat
call
clc
cli
roll
cld
int3
add
out
push
scas
nop
sahf
adc
and
arpl
cmp
ret
mov
in
add
jmp
mov
jne
roll
push
test
rclb
sbb
std
add
pop
xchg
int
and
testb
sbb
nop
jb
fs
xor
movsl
jge
mov
add
pop
pop
sti
aam
add
mov
jo
jl
mov
es
rolb
loope
xor
add
rcrb
mov
push
cwtl
dec
shlb
add
stc
movb
iret
addb
mov
add
shl
and
mov
movsb
fimull
pop
pop
add
into
cmp
inc
int3
movsl
cmp
test
movsb
push
cld
jg
add
pop
adc
stos
add
mov
lea
mov
testb
fbstp
mov
xchg
mov
cld
adc
jae
add
loope
mov
int3
jne
inc
mov
fnsave
add
fldl
and
add
jbe
mov
add
leave
daa
cmpsb
insb
movsb
add
and
test
jg
addr16
lods
fldl
mov
lods
int
nop
add
xchg
cmp
int3
bt
out
inc
cmp
ror
inc
sbb
clc
mov
aad
inc
add
xchg
lods
adc
arpl
add
nop
mov
xchg
add
mov
add
or
add
mov
add
add
pop
jne
add
xor
xchg
jl
int3
in
and
dec
aad
add
xlat
add
out
mov
aad
adc
les
repz
mov
fisttpll
mov
mov
imul
lret
nop
cmp
add
aaa
xor
push
add
sbb
add
push
test
xorb
out
mov
sbb
ret
push
stos
test
pushf
add
pop
repnz
scas
add
inc
fldl
add
movsb
sub
push
add
div
cmp
push
mov
cmp
xor
adc
add
repnz
cwtd
into
xchg
sbb
add
and
jo
sub
mov
sarb
js
rcll
jo
imul
and
jp
sbb
adcb
nop
jbe
and
xchg
shl
and
lea
push
push
aad
insb
add
addr16
popf
hlt
add
and
and
stc
xchg
cmpl
add
add
add
addr16
cwtl
and
out
add
popa
aaa
add
add
mov
addb
xchg
pop
enter
pop
mov
addb
mov
mov
addl
int3
jmp
gs
mov
add
xchg
daa
data16
add
xchg
pop
jne
mov
gs
stos
inc
xorb
iret
in
test
out
ljmp
rolb
lea
add
je
orl
call
incl
add
test
add
decl
sub
mov
incl
mov
add
sbb
call
inc
add
adc
sub
jne
inc
test
mov
call
je
incl
add
add
lea
ljmp
call
mov
add
int3
adc
add
jne
add
mov
jo
popf
or
dec
and
adc
or
loopne
int3
mov
icebp
out
das
lock
inc
sbb
add
add
xchg
lods
xlat
or
inc
loope
imul
adc
int3
cli
nop
and
or
add
mov
int3
push
fsubl
xchg
bound
add
add
add
insl
jmp
call
je
add
lea
add
add
adcb
dec
add
cmp
push
pop
sahf
push
push
add
xor
add
or
jo
jo
imul
add
sub
add
sub
xor
sub
add
and
int3
fs
out
mov
int3
and
aaa
cmpl
int3
xchg
adc
mov
aas
rolb
call
adc
loopne
xor
lds
stos
add
inc
loop
mov
add
dec
and
inc
add
pop
push
and
add
xchg
add
mov
jge
inc
hlt
and
mov
add
rorb
inc
ret
add
sbb
and
inc
adcb
outsl
add
inc
and
fiadds
jns
push
push
add
jb
add
adc
mov
add
jbe
shrb
andb
xor
add
inc
mov
mov
lock
cs
xor
add
dec
aad
add
stos
push
add
popf
mov
pop
int3
loop
jo
fiaddl
add
sub
cmp
xchg
insl
mov
add
mov
scas
add
xchg
fnstsw
fcmovne
xor
into
add
stos
sub
fcompl
add
sub
push
add
cltd
cld
or
jae
add
mov
add
insl
xor
cmp
dec
imul
add
mov
fcomps
add
xchg
add
add
ret
aas
add
or
adc
or
xlat
mov
cwtl
ja
call
mov
pop
loope
xor
adc
add
cltd
mov
int3
je
fidivl
inc
hlt
fcoms
xorb
mov
jb
cld
xchg
fdivrs
jo
jp
jbe
add
daa
in
mov
xchg
pop
jns
aam
cmp
movl
cmp
sub
add
jne
mov
sub
add
call
add
lahf
bound
mov
or
push
xor
test
aas
icebp
add
mov
inc
int3
sbb
cmpsl
xchg
xor
mov
imul
mov
add
xchg
mov
pop
dec
ds
int3
pusha
jns
nop
mov
or
lea
jb
jb
add
add
xchg
xor
add
mov
dec
fistpl
ljmp
test
ficomps
push
xorb
mov
inc
xchg
fisttpll
lods
dec
add
enter
add
cltd
inc
sub
jno
xor
jge
test
cmp
mov
nop
add
xchg
int3
add
add
int3
mov
xor
sahf
xchg
add
data16
xor
ret
dec
cwtl
adc
jo
sbbb
add
add
pusha
loope
scas
test
jae
mov
insl
mov
data16
inc
add
fcoml
pop
int3
add
push
stos
pop
jae
mov
js
push
cmc
add
add
inc
test
xlat
lods
lock
pop
mov
mov
mov
gs
xor
nop
or
dec
or
cmp
pop
pop
xor
jle
add
ret
add
pop
pop
in
add
jp
int
int3
rcr
pop
add
add
or
enter
and
add
inc
mov
dec
shll
mov
das
jecxz
and
add
pop
mov
add
int3
leave
mov
mov
mov
pop
imul
jl
push
mov
pop
sub
rcrb
mov
add
jg
int3
in
lcall
mov
cmp
jno
fwait
jns
pop
scas
mov
mov
jmp
push
mov
in
and
call
add
jno
int3
inc
int3
call
arpl
xor
mov
mov
mov
int3
int3
rclb
hlt
out
jo
inc
jl
add
inc
add
or
sub
inc
mov
fisttpl
sub
add
and
movsb
lock
sbb
pop
ret
add
cmpsl
add
adc
data16
mov
leave
lahf
add
xchg
test
lret
add
jb
add
roll
or
jb
add
push
sbb
in
lock
sbb
daa
pushf
mov
call
std
call
into
jne
mov
fwait
cwtl
add
xchg
stos
fists
arpl
call
and
xor
dec
nop
ret
push
dec
add
nop
nop
les
add
shll
in
inc
roll
add
xchg
test
lds
jo
xlat
ret
add
out
cmp
jl
arpl
lea
sti
incl
decb
incl
int3
add
add
add
mov
and
mov
decl
ret
test
incl
add
ljmp
incl
adc
incl
add
mov
adc
dec
jo
testb
je
push
add
out
lcall
xlat
repnz
mov
test
add
aaa
xor
xchg
imul
xor
push
aaa
nop
pop
jg
xor
nop
add
or
inc
inc
aad
add
adcl
add
leave
or
mov
adc
xchg
cltd
gs
loope
add
ljmp
add
shrl
nop
add
add
mov
stc
icebp
add
dec
dec
cltd
fistpll
xor
nop
mov
xor
rclb
nop
dec
test
fwait
repnz
add
les
pop
mov
int3
scas
call
and
nop
mov
nop
jmp
jbe
xor
lea
jo
les
add
sub
nop
jns
jo
cmpsb
aam
nop
add
cmp
add
mov
int3
xchg
lds
sahf
and
mov
add
push
sbb
add
jb
mov
scas
mov
and
repz
add
add
stc
sub
xor
dec
mov
add
xchg
cmp
das
mov
pop
add
cltd
mov
mov
fsubs
inc
nop
add
daa
mov
dec
int3
nop
cmp
out
stc
xor
and
lds
mov
fistpll
mov
mov
mov
lods
jb
nop
or
xchg
ret
into
add
int3
nop
int
sbb
xor
call
xchg
int3
pop
notl
add
fdivl
call
mov
mov
xchg
jp
fimull
outsb
pop
add
mov
enter
and
pop
jge
nop
xchg
sbb
je
mov
lret
mov
pop
add
add
sbb
sti
in
jb
and
ja
inc
xor
aad
adc
inc
or
jg
jb
fdivs
int3
jle
jbe
nop
jmp
hlt
jmp
add
test
add
push
cmc
add
daa
push
das
call
fldcw
call
inc
add
sub
add
cmp
mov
xor
xchg
nop
cmpsb
imul
int3
fwait
push
sub
add
arpl
leave
jo
lds
ret
or
mov
add
and
mov
jle
add
adc
inc
orb
nop
add
mov
xchg
out
int3
int3
in
inc
scas
push
stos
add
xchg
sysret
add
push
dec
andb
fbld
lahf
in
loope
jle
add
mul
repz
add
xchg
mov
mov
sbb
inc
aad
dec
mov
mov
xchg
inc
add
fisubs
xor
xchg
js
fildl
in
fneni(8087
add
add
lret
mov
jb
add
mov
add
inc
loop
xchg
mov
mov
add
inc
xchg
flds
cmp
or
bound
ds
int3
lods
xchg
inc
nop
push
stos
add
test
or
add
and
movsl
add
jmp
dec
int3
mov
lea
test
add
sbb
test
incl
add
add
or
mov
add
add
orl
incl
ljmp
sbb
testb
jb
sub
mov
ret
add
out
sbb
int3
cmpsb
daa
sub
and
dec
fs
lea
movb
jae
add
test
in
push
add
cmp
sub
jb
rolb
mov
imul
inc
pop
call
and
inc
mov
lock
in
inc
add
stos
jo
add
movsb
dec
cmc
sbb
jmp
nop
cmp
cltd
shll
dec
jb
xchg
movsl
jbe
add
or
cld
scas
dec
xor
sub
jns
xor
pushf
mov
popa
mov
and
xchg
sbb
loopne
aaa
add
mov
add
aas
loope
add
add
inc
movsb
gs
and
dec
bound
addl
mov
daa
je
mov
gs
nop
push
in
add
lcall
xchg
push
dec
add
mov
inc
and
nop
add
insl
or
mov
adc
bound
cmp
pusha
leavew
jo
mov
repz
lea
mov
cmp
lea
xlat
outsb
xchg
inc
cmpsb
ljmp
lds
lds
nop
add
dec
movsb
xchg
pop
int3
fsubrl
lea
ficomps
inc
adc
add
xchg
repz
mov
cmp
xor
xchg
push
std
cmp
add
cmp
add
aaa
daa
pop
add
adc
add
mov
movb
push
in
jae
addb
cmp
nop
lods
outsb
sbb
mov
jnp
add
cmpsl
std
pop
add
gs
lods
data16
pop
add
lea
out
xor
stc
outsl
dec
add
sbb
add
int3
add
dec
xor
adc
add
std
stos
rolb
dec
xor
add
data16
add
lcall
mov
nop
and
add
mov
add
xlat
pop
sub
add
sub
dec
sbb
sahf
mov
pop
shll
mov
nop
cs
jo
pusha
ss
fildll
dec
into
or
mov
inc
stos
jns
outsb
add
dec
lock
mov
mov
and
nop
aad
add
jmp
mov
add
push
xorb
ltr
xor
scas
add
lret
add
int3
inc
add
mov
cli
and
dec
cltd
insl
sbb
inc
popa
in
dec
pop
mov
mov
add
mov
add
daa
test
push
add
push
punpcklwd
call
add
mov
add
out
dec
addb
jns
stos
mov
sub
sbb
add
sbb
lea
decl
test
mov
call
add
sbb
leave
incl
pushl
lea
incl
sub
incl
jne
jne
jmp
adc
mov
call
test
sub
lcall
dec
inc
jo
xlat
fld
test
loop
gs
cmpsl
inc
jmp
call
mov
jbe
jb
fwait
pop
int3
aam
cmp
jb
cmpsb
add
push
fst
push
add
aas
add
out
pop
push
insb
and
test
add
fcoms
xchg
mov
fidivrl
outsb
jg
jp
imul
mov
call
int3
add
and
sub
nop
jo
leave
shrl
imul
mov
dec
adc
jecxz
int3
xchg
pop
sub
in
pop
aaa
nop
add
jmp
add
add
sbb
add
rorl
sub
nop
inc
lahf
stc
pop
mov
xor
in
faddl
add
lods
sub
xlat
add
jo
dec
out
xor
add
lods
sub
xor
test
push
sbb
adc
jno
mov
add
jmp
shrl
add
and
and
add
mov
jle
add
popa
mov
inc
call
push
out
and
loopne
insl
data16
add
sub
add
in
dec
int3
add
add
sbb
fs
jle
jb
xor
das
clc
jnp
add
or
xor
lods
outsb
scas
call
and
cltd
je
add
pusha
ret
out
dec
inc
orb
add
adc
add
mov
add
in
js
int3
jo
mov
clc
jo
dec
ljmp
sub
mov
stos
mov
jo
dec
nop
jo
mov
push
lea
add
mov
sub
cmp
xchg
out
mov
add
scas
or
mov
fdivs
or
and
test
add
cmp
add
xor
loopne
nop
add
or
xchg
add
test
cwtl
add
push
dec
cmp
orb
aas
jg
add
std
inc
add
xchg
mov
xlat
movsl
jne
daa
movsb
or
lret
jno
add
add
lret
out
aam
nop
xor
mov
adc
pop
call
mov
fisubrl
pop
add
and
test
add
push
cmp
decl
adc
leave
add
gs
xchg
les
les
int3
out
cmpsl
daa
add
xor
mov
popl
sub
int3
cwtl
or
xor
out
add
imul
int
int3
in
pop
add
iret
mov
push
sahf
sbbl
add
inc
testl
inc
or
leave
add
add
cmpsl
mov
mov
jg
add
mov
incl
incl
test
mov
add
push
incl
decb
add
push
mov
add
int3
add
data16
inc
decb
test
pushl
mov
add
incl
test
aas
jo
add
add
add
add
mov
decl
incl
int3
in
add
add
mov
mov
leave
mov
and
in
dec
mov
xchg
call
pushf
add
mov
add
ffree
es
add
push
xchg
mov
jnp
in
call
aas
nop
push
pop
inc
xchg
mov
lcall
lcall
rcll
mov
aas
and
pop
add
xlat
stos
xor
lea
lea
repnz
scas
popl
addl
mov
sbb
out
mov
call
mov
nop
add
adc
add
shll
stos
add
inc
add
inc
call
mov
aas
dec
add
dec
inc
and
andl
jl
roll
add
lret
test
or
shlb
add
add
popf
leave
or
jo
adcb
sahf
mov
add
add
nop
int3
add
mov
sbbb
sbb
aas
jp
sbb
mov
ds
int3
mov
call
and
pop
das
jle
shlb
dec
or
jo
cmpsb
mov
xor
shll
push
cltd
aam
call
xchg
bound
pop
push
push
add
call
sub
lea
add
call
mov
fadds
mov
imul
add
and
fadds
pop
push
cmp
adc
add
lds
add
pop
iret
mov
xchg
add
xchg
or
dec
or
xchg
xor
jg
add
icebp
mov
mov
movsl
pop
add
stos
mov
xor
fwait
dec
add
push
loopne
add
aaa
lret
sub
cmp
nop
movsb
js
cli
imul
repz
add
inc
aas
sahf
int3
ljmp
add
into
xor
sub
push
sub
sldt
test
jno
int3
and
xor
cmp
int3
lea
std
movsl
movsl
add
adc
sbb
add
jp
inc
mov
and
add
or
xchg
xchg
mov
les
xorb
inc
mov
dec
inc
lret
add
add
sub
testb
insl
jle
mov
xor
pop
nop
add
add
add
mov
test
cmpsl
repz
lahf
xchg
imull
xchg
imulb
sub
pop
adc
mov
out
jge
jo
sarb
mov
add
mov
pop
incl
in
push
lock
pop
add
sbb
pop
add
lods
addr16
dec
add
jp
sbb
add
add
pusha
repz
fildl
jo
add
enter
add
cli
jne
into
sahf
inc
add
lcall
stc
mov
cltd
int3
push
subb
cld
data16
xchg
cwtl
sbb
call
test
fcoml
mov
je
sbb
or
cmp
add
adc
add
xchg
sbb
mov
push
int
iret
add
add
stos
xor
add
jmp
add
std
jge
lea
add
push
xlat
push
mov
and
sub
dec
push
or
xor
adc
stc
addb
fwait
pop
mov
int
int3
jo
leave
mov
gs
sbbb
pop
adc
sarb
and
mov
gs
clc
add
mov
add
jle
push
in
add
add
push
neg
lea
iret
and
aad
cmp
jp
and
int3
add
mov
arpl
add
inc
add
and
and
xor
and
test
or
sub
incb
call
and
push
pop
xor
add
xchg
push
xchg
pushf
call
shlb
loope,pt
and
xchg
add
push
incl
nop
pop
mov
sbb
mov
mov
cmp
jae
add
xchg
cmp
inc
loop
add
add
outsl
push
push
leave
or
inc
incb
xor
add
add
int3
mov
add
mov
add
rcrb
ret
lea
add
call
je
int3
test
add
add
adc
incl
sub
decl
nop
add
out
sbb
cmp
add
jns
jo
leave
mov
pop
add
mov
or
add
mov
xchg
popl
bound
mov
pop
jp
int3
stos
mov
aas
std
test
add
aad
das
mov
add
push
jmp
int3
cmp
add
xor
jno
inc
iret
testb
aaa
adc
add
xor
nop
popf
pop
dec
repz
inc
push
cs
dec
pop
or
ret
pop
nop
add
pop
mov
inc
jb
adc
add
pop
add
mov
push
mov
mov
pushw
pop
gs
sbb
adc
stc
mov
shrb
nop
arpl
cld
add
add
loop
inc
and
cli
int3
sub
adc
je
lret
add
jo
add
mov
jae
lea
inc
xor
cmp
pop
aaa
add
aam
add
fmulp
add
add
cs
add
add
imul
inc
scas
stos
pop
mov
sarl
push
add
stc
inc
xchg
mov
add
add
and
out
add
xchg
mov
add
stos
add
cs
adc
add
sub
jl
das
cli
nop
add
int3
mov
subb
xchg
add
cmp
mov
add
nop
int3
lods
or
sti
jmp
int3
call
push
add
pusha
push
lahf
jbe
addr16
xchg
cmpb
pop
mov
or
lock
pushf
jge
fdivl
int3
and
lea
xorl
scas
pushf
add
push
xor
jnp
xor
jmp
pop
add
jno
jle
add
pop
fnstenv
add
mov
push
adc
sub
jo
push
adc
add
insl
inc
pop
xchg
add
mov
sub
aas
cmp
fwait
icebp
mov
cld
add
mov
add
mov
add
sbb
lcall
jecxz
add
popa
das
and
fs
push
xor
sub
ds
fildl
add
inc
add
sbb
add
mov
mov
lock
jbe
add
mov
xchg
adc
and
xchg
adc
cmp
sbb
cmp
add
rol
cmp
push
movsl
mov
ds
aas
inc
add
ja
add
and
mov
add
addr16
jne
mov
pop
mov
je
decl
incl
test
add
mov
add
jg
decb
incl
incl
inc
cld
sub
incl
add
add
pushl
jg
incl
add
jo
decl
mov
int3
test
std
add
mov
add
add
push
decl
add
adc
ljmp
sti
inc
decl
cmp
addl
incl
add
add
call
incl
lea
add
incb
test
lcall
add
je
test
ja
decl
add
push
pop
test
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pushl
popf
add
xchg
jmp
add
mov
add
mov
test
pop
out
test
add
add
add
int3
add
add
int3
int3
lea
call
add
add
int3
or
test
sbb
decl
call
push
push
add
decl
add
pushl
jmp
incl
call
int3
add
incl
decl
xor
sub
shlb
add
test
add
add
sti
add
incl
decl
call
je
call
incb
incl
add
adc
int3
jmp
push
add
decl
adc
incl
clc
inc
adc
mov
lea
test
incb
add
jne
add
int
decl
add
dec
int3
push
test
dec
ja
addl
add
mov
xchg
add
add
mov
add
add
add
pop
je
inc
add
je
add
jne
test
lock
incl
add
inc
decb
add
add
add
cmp
incl
incl
test
and
incl
adc
nop
fdivr
add
add
dec
int3
int3
int3
int3
sub
push
lea
push
call
mov
mov
mov
add
mov
adc
cmp
jne
cmp
jne
movzbl
mov
sub
add
mov
mov
mov
mov
push
push
push
call
add
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
call
movzwl
mov
mov
sub
sub
add
pop
ret
int3
int3
movzbw
mov
mov
push
push
push
sub
add
mov
call
mov
mov
lea
cmp
je
imul
add
mov
sub
sub
add
pop
ret
movzbl
mov
sub
sub
add
sub
mov
add
pop
ret
int3
int3
int3
push
movzbw
mov
push
push
push
push
push
lea
mov
call
push
call
mov
mov
mov
mov
imul
add
add
cmp
mov
je
cmp
je
mov
mov
sub
add
movzbl
mov
lea
jmp
sub
add
mov
jmp
mov
sub
add
mov
imul
add
call
mov
mov
imul
add
mov
and
cmp
mov
jbe
mov
sub
sub
add
mov
call
movzbl
lea
pop
mov
movl
xor
pop
pop
ret
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
pushl
call
add
cmp
jne
mov
test
jns
and
mov
jmp
orl
or
pop
mov
andl
mov
pop
mov
pop
ret
push
mov
push
call
test
pop
je
or
pop
ret
testb
je
pushl
call
pop
neg
sbb
pop
ret
xor
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
mov
cmp
je
testb
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
incl
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
pushl
push
call
pop
pop
ret
orl
call
cmpl
mov
je
mov
call
ret
push
call
pop
ret
push
push
call
xor
cmp
jne
push
call
pop
jmp
pushl
call
pop
mov
pushl
call
pop
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
call
pop
ret
push
mov
push
call
mov
cmpl
jne
push
call
test
pop
mov
je
mov
mov
cmp
jg
mov
push
mov
push
push
push
call
mov
xor
add
cmpl
sete
mov
mov
mov
mov
mov
pop
pop
pop
ret
push
mov
sub
mov
mov
lea
push
lea
push
pushl
pushl
call
pushl
mov
pushl
add
push
push
call
mov
add
call
leave
ret
push
mov
sub
mov
mov
push
lea
push
lea
push
pushl
pushl
call
pushl
mov
pushl
push
push
call
lea
add
cmpb
pop
je
movb
mov
call
leave
ret
mov
mov
and
ret
mov
mov
and
ret
push
push
call
mov
mov
push
call
pop
andl
push
call
mov
lea
push
pushl
push
call
mov
push
pushl
call
add
orl
call
mov
call
ret
pushl
call
pop
ret
mov
push
pushl
pushl
pushl
call
add
ret
push
mov
push
push
push
mov
push
mov
imul
test
mov
mov
mov
jne
xor
jmp
push
mov
testw
je
mov
mov
jmp
movl
jmp
mov
testw
je
mov
test
je
cmp
mov
jb
mov
push
pushl
push
call
sub
sub
add
add
add
mov
jmp
cmp
jb
cmpl
mov
je
xor
divl
mov
sub
push
push
pushl
call
add
test
je
cmp
je
sub
add
jmp
push
call
cmp
pop
je
mov
mov
inc
decl
mov
cmpl
jne
mov
pop
pop
pop
leave
ret
orl
mov
sub
xor
divl
jmp
orl
jmp
push
push
call
pushl
call
pop
andl
pushl
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
mov
push
or
testb
je
push
call
push
mov
call
pushl
call
add
test
jge
or
jmp
mov
test
je
push
call
andl
pop
andl
mov
pop
pop
ret
push
push
call
orl
mov
testb
je
andl
mov
call
ret
push
call
pop
andl
push
call
pop
mov
orl
call
jmp
mov
push
call
pop
ret
push
push
call
call
mov
test
jne
call
movl
xor
jmp
andl
push
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
pushl
pushl
call
add
ret
push
push
call
mov
test
je
cmpl
jne
push
call
pop
andl
push
call
pop
mov
test
je
push
push
call
pop
pop
orl
call
cmpl
jne
pushl
jmp
push
call
pop
ret
push
push
pushl
call
call
ret
push
push
call
mov
cmpl
jne
cmp
ja
push
call
pop
andl
push
call
pop
mov
orl
call
mov
test
jne
test
jne
inc
cmpl
je
add
and
push
push
pushl
call
call
ret
mov
push
call
pop
ret
cmpl
ja
pushl
call
test
pop
jne
cmp
je
pushl
call
test
pop
jne
xor
ret
pushl
pushl
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
cmpl
jne
call
pushl
call
push
call
pop
pop
ret
push
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
xor
ret
xor
cmpl
jbe
cmp
jmp
xor
cmpl
jbe
cmp
setne
ret
push
push
call
mov
mov
call
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
je
or
mov
shl
add
mov
xor
push
mov
call
cmpw
jne
mov
add
cmpl
jne
movzwl
cmp
je
cmp
je
mov
jmp
cmpl
jbe
xor
cmp
jmp
cmpl
jbe
xor
cmp
setne
mov
push
call
pop
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jge
push
call
pop
call
mov
call
mov
call
test
jge
push
call
pop
call
test
jge
push
call
pop
push
call
pop
mov
cmp
je
push
call
pop
mov
lea
push
call
call
mov
testb
je
movzwl
jmp
push
pop
push
pushl
push
push
call
push
call
mov
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
cmpl
jne
push
call
call
orl
mov
lea
call
ret
push
lea
sub
mov
push
xor
cmp
mov
mov
mov
jne
xor
jmp
mov
push
mov
and
sar
push
lea
lea
mov
shl
testb
je
push
push
push
pushl
call
add
mov
add
testb
je
cmp
mov
mov
mov
jbe
mov
sub
lea
mov
cmp
jae
mov
incl
mov
inc
cmp
jne
incl
movb
inc
incl
mov
inc
incl
cmpl
jl
mov
lea
sub
push
lea
push
push
lea
push
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
xor
cmp
jb
jmp
call
mov
xor
mov
cmp
jne
cmp
je
push
pop
cmp
jne
call
movl
call
mov
jmp
push
lea
push
pushl
pushl
pushl
call
test
je
mov
mov
mov
jmp
call
mov
jmp
pushl
call
pop
jmp
mov
testb
je
mov
cmpb
jne
xor
jmp
call
movl
call
mov
or
jmp
sub
pop
pop
mov
pop
call
add
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
push
call
pop
push
call
test
jne
call
mov
jmp
andl
cmpl
je
call
mov
mov
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
pop
pop
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
push
mov
mov
pushl
call
pop
ret
pushl
push
call
push
call
pop
ret
push
push
call
mov
lea
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
movl
jmp
push
call
pop
mov
cmp
jne
push
push
call
pop
pop
test
jne
push
call
call
movl
push
lea
push
call
add
xor
jmp
mov
jmp
push
call
pop
orl
call
xor
inc
call
ret
push
call
pop
ret
push
mov
mov
push
lea
cmpl
jne
push
call
test
pop
jne
push
call
pop
pushl
call
pop
pop
ret
mov
ret
mov
test
push
push
pop
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
test
pop
pop
mov
jne
push
push
mov
call
test
pop
pop
mov
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
xor
mov
mov
mov
and
sar
mov
lea
mov
cmp
je
test
jne
orl
add
inc
cmp
jl
xor
pop
ret
call
cmpb
je
jmp
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
mov
mov
cmp
jb
cmp
ja
sub
sar
add
push
call
pop
ret
add
push
call
ret
mov
cmp
jge
add
push
call
pop
ret
mov
add
push
call
ret
int3
int3
int3
push
mov
push
mov
mov
lea
sub
push
push
push
mov
mov
push
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
leave
push
ret
push
inc
xor
pop
inc
xor
push
mov
sub
push
push
push
push
cld
mov
mov
testl
jne
mov
mov
mov
lea
mov
mov
mov
push
call
add
or
je
cmp
je
lea
mov
or
je
push
push
lea
xor
xor
xor
xor
xor
call
pop
pop
mov
or
je
js
mov
push
call
add
lea
push
push
call
add
lea
push
mov
call
mov
mov
mov
xor
xor
xor
xor
xor
call
mov
lea
mov
jmp
mov
jmp
mov
orl
mov
jmp
push
lea
push
push
call
add
pop
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
push
mov
push
call
add
pop
ret
push
mov
mov
mov
push
mov
test
push
mov
push
lea
movb
mov
jle
mov
xor
mov
test
je
movsbl
inc
jmp
push
pop
mov
inc
decl
jne
mov
test
movb
jl
cmpb
jl
jmp
movb
dec
cmpb
je
incb
cmpb
jne
incl
jmp
push
call
inc
push
push
push
call
add
pop
pop
pop
pop
ret
call
ret
mov
cmp
je
push
call
orl
jmp
mov
movl
movl
ret
push
push
call
pushl
mov
call
mov
test
jne
push
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
movl
call
orl
mov
jmp
push
call
pop
push
call
mov
pop
pop
ret
push
push
call
mov
xor
cmp
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
mov
mov
mov
cmp
je
decl
jne
cmp
je
push
call
pop
orl
call
push
call
pop
movl
mov
mov
cmp
je
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
cmp
je
mov
decl
mov
decl
cmp
je
cmp
je
cmp
jne
push
call
pop
orl
call
push
call
pop
call
ret
xor
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
cmp
je
mov
test
jne
push
call
push
call
push
pushl
call
ret
jmp
jmp
call
test
jne
call
xor
ret
push
push
push
call
mov
test
je
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
mov
mov
mov
mov
mov
movl
mov
push
call
cmp
mov
je
xor
push
inc
push
call
mov
test
pop
pop
je
push
pushl
call
test
je
movl
mov
call
orl
mov
mov
jmp
call
xor
pop
pop
ret
push
mov
push
mov
xor
mov
push
push
push
mov
mov
mov
mov
shr
and
and
mov
mov
mov
movzwl
and
test
je
cmp
je
lea
jmp
mov
jmp
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
jmp
lea
mov
mov
shr
shl
or
or
mov
shl
test
mov
mov
jne
mov
mov
mov
shl
shr
or
add
add
test
mov
mov
je
mov
or
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
lea
push
lea
push
call
pop
pop
lea
push
push
push
sub
lea
mov
movsl
movsl
movsw
call
mov
mov
mov
movsbl
mov
movswl
mov
lea
push
push
call
mov
add
mov
mov
call
pop
pop
leave
ret
push
push
call
andl
push
push
call
pop
pop
jmp
xor
inc
ret
mov
orl
push
call
int3
cmp
jne
ret
jmp
push
mov
pushl
call
test
pop
je
cmp
jne
xor
jmp
cmp
jne
xor
inc
incl
testw
jne
push
push
lea
cmpl
mov
jne
push
call
test
pop
mov
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
orw
pop
xor
pop
inc
pop
ret
xor
pop
ret
cmpl
je
push
mov
testb
je
push
call
andb
andl
andl
andl
pop
pop
ret
testb
je
cmpl
je
push
pushl
call
cmp
pop
pop
jne
orl
ret
incl
ret
push
mov
push
mov
jmp
pushl
mov
decl
call
cmpl
pop
je
cmpl
jg
pop
pop
ret
testb
push
push
mov
mov
je
cmpl
jne
mov
add
jmp
decl
xor
mov
push
mov
call
inc
inc
cmpl
pop
je
cmpl
jg
pop
pop
ret
addl
mov
mov
ret
addl
mov
mov
mov
ret
push
lea
sub
mov
mov
mov
xor
push
mov
xor
cmp
mov
mov
mov
je
push
push
jmp
mov
push
pop
add
cmpl
jl
push
pop
cmp
jb
cmp
ja
movzwl
movsbl
and
jmp
xor
movsbl
push
sar
pop
cmp
mov
ja
jmp
xor
orl
mov
mov
mov
mov
mov
mov
jmp
movzwl
sub
je
sub
je
sub
je
sub
je
sub
jne
orl
jmp
orl
jmp
orl
jmp
orb
jmp
or
jmp
cmp
jne
addl
mov
mov
test
mov
jge
orl
negl
jmp
mov
movzwl
lea
lea
mov
jmp
andl
jmp
cmp
jne
addl
mov
mov
test
mov
jge
orl
jmp
mov
movzwl
lea
lea
mov
jmp
movzwl
cmp
je
cmp
je
cmp
je
cmp
jne
orb
jmp
orl
jmp
or
jmp
mov
mov
cmp
jne
mov
cmpw
jne
addl
orb
jmp
cmp
jne
mov
cmpw
jne
addl
andb
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
andl
mov
push
lea
movl
call
jmp
movzwl
cmp
jg
cmp
jge
cmp
jg
je
sub
je
sub
je
sub
je
sub
jne
testw
jne
or
mov
cmp
jne
mov
addl
testb
mov
mov
mov
je
test
jne
mov
mov
andl
test
mov
jle
mov
test
je
mov
movzbl
testb
je
inc
inc
incl
cmp
jl
jmp
movl
add
orl
cmpl
lea
mov
jge
movl
jmp
testw
jne
or
addl
mov
movzwl
xor
inc
testb
mov
mov
je
pushl
mov
lea
push
lea
push
movb
call
add
test
jge
mov
jmp
sub
je
sub
je
dec
jne
orl
movl
mov
mov
test
je
mov
mov
mov
add
mov
jmp
mov
lea
mov
mov
jmp
addl
mov
mov
test
je
mov
test
je
testb
movswl
mov
je
cltd
sub
sar
movl
jmp
andl
jmp
mov
mov
push
jmp
jne
cmp
jne
movl
jmp
mov
cmp
jle
mov
mov
cmp
jle
mov
add
push
call
test
pop
mov
je
mov
mov
jmp
mov
mov
mov
pushl
add
pushl
mov
mov
mov
movsbl
push
lea
push
push
mov
call
mov
add
and
je
cmpl
jne
push
call
pop
cmp
jne
test
jne
push
call
pop
cmpb
jne
orb
inc
mov
push
call
pop
jmp
sub
je
sub
je
dec
je
dec
je
sub
je
sub
je
sub
jne
movl
jmp
test
jne
mov
mov
mov
movl
jmp
dec
cmpw
je
add
test
jne
sub
sar
jmp
movl
mov
testb
movl
je
mov
add
movw
mov
mov
jmp
testb
movl
je
orb
jmp
addl
testb
mov
mov
je
mov
mov
jmp
mov
mov
movl
jmp
addl
test
mov
je
test
je
movswl
cltd
jmp
movzwl
jmp
test
mov
jne
xor
test
je
test
jg
jl
test
jae
neg
adc
neg
orb
test
mov
mov
jne
xor
cmpl
jge
movl
jmp
andl
mov
cmp
jle
mov
mov
or
jne
andl
lea
mov
decl
test
jg
mov
or
je
mov
cltd
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
testb
mov
mov
je
mov
cmpb
jne
test
jne
decl
mov
movb
inc
mov
cmpl
jne
mov
test
je
test
je
movw
jmp
test
je
movw
jmp
test
je
movw
movl
mov
sub
sub
testb
jne
pushl
lea
push
push
call
add
pushl
mov
lea
lea
call
testb
pop
je
testb
jne
push
push
push
lea
call
add
cmpl
jne
mov
test
jle
mov
mov
pushl
decl
lea
push
push
call
add
test
mov
jle
pushl
mov
lea
call
add
cmpl
pop
jg
jmp
pushl
mov
lea
call
pop
testb
je
pushl
lea
push
push
call
add
cmpl
je
pushl
call
andl
pop
mov
mov
test
jne
pop
pop
mov
mov
pop
call
add
leave
ret
jge
inc
add
js
add
js
add
jns
add
inc
add
inc
add
jp
add
in
push
mov
mov
test
push
je
mov
test
je
cmp
je
cmp
jne
and
cmp
mov
jne
push
call
add
pop
adc
xor
push
call
mov
test
pop
jns
and
mov
jmp
test
je
test
je
test
jne
movl
push
pushl
pushl
pushl
call
and
add
cmp
je
xor
jmp
call
movl
or
pop
pop
pop
ret
push
push
call
pushl
call
pop
andl
pushl
pushl
pushl
pushl
call
add
mov
orl
call
mov
call
ret
pushl
call
pop
ret
push
mov
mov
test
je
test
jne
test
je
or
mov
jmp
or
test
mov
jne
push
call
pop
jmp
mov
mov
pushl
pushl
pushl
call
add
test
mov
je
cmp
je
mov
test
jne
mov
cmp
push
je
mov
sar
mov
and
lea
lea
jmp
mov
mov
and
cmp
pop
jne
or
mov
cmpl
jne
mov
test
je
test
jne
movl
mov
dec
mov
movzbl
inc
mov
pop
ret
neg
sbb
and
add
or
andl
or
pop
ret
push
mov
sub
andl
cmpl
push
mov
push
push
mov
je
mov
mov
and
sar
lea
lea
mov
shl
add
mov
test
jne
test
je
cmpb
je
mov
mov
decl
mov
mov
lea
movl
movb
push
lea
push
pushl
mov
push
pushl
call
test
jne
call
push
pop
cmp
jne
call
movl
call
mov
jmp
cmp
je
push
call
pop
or
jmp
mov
mov
add
testb
je
test
je
cmpb
jne
mov
lea
orb
jmp
mov
lea
andb
mov
mov
add
cmp
mov
mov
jae
mov
mov
cmp
je
cmp
je
mov
inc
incl
jmp
dec
cmp
jae
mov
inc
cmpb
jne
addl
jmp
mov
jmp
incl
push
lea
push
push
lea
push
mov
pushl
call
test
jne
call
test
jne
cmpl
je
mov
testb
je
mov
cmp
je
movb
mov
mov
jmp
cmp
jne
cmpb
jne
movb
jmp
push
push
pushl
call
add
cmpb
je
movb
inc
mov
cmp
jb
jmp
mov
testb
jne
lea
orb
sub
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
and
inc
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
repz
loopne
inc
add
test
rolb
inc
add
test
mov
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
or
inc
add
inc
add
xchg
xor
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
lods
xchg
rolb
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
dec
xchg
push
xchg
pop
xchg
xchg
insb
xchg
je
inc
add
add
inc
mov
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
test
inc
add
xchg
aam
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
push
mov
push
push
call
cmp
pop
je
cmp
je
cmp
jne
push
call
push
mov
call
cmp
pop
pop
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
sar
mov
and
test
pop
lea
movb
je
push
call
pop
or
jmp
xor
pop
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
push
call
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
mov
mov
test
je
test
je
pushl
call
andw
xor
pop
mov
mov
mov
pop
ret
push
mov
push
push
push
push
mov
push
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
jmp
xor
or
jmp
mov
or
xor
inc
jmp
cmp
je
movsbl
cmp
jg
je
sub
je
sub
je
sub
je
dec
jne
cmp
jne
movl
or
jmp
cmp
jne
movl
or
jmp
test
jne
or
jmp
test
jne
and
and
or
or
jmp
mov
test
jne
or
jmp
sub
je
dec
je
sub
je
sub
jne
test
jne
or
jmp
cmp
jne
movl
and
jmp
cmp
je
xor
jmp
movl
or
jmp
test
jne
or
inc
mov
cmp
jne
push
pushl
push
pushl
call
mov
add
cmp
jge
xor
jmp
mov
incl
mov
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
call
add
ret
call
add
ret
push
call
mov
mov
xor
cmp
je
inc
cmp
jb
cmp
jb
cmp
ja
call
movl
pop
ret
call
mov
mov
pop
ret
cmp
jb
cmp
ja
call
movl
pop
ret
call
movl
pop
ret
push
push
call
xor
xor
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
mov
cmp
je
testb
jne
cmp
jle
cmp
jge
lea
push
call
pop
test
je
mov
pushl
push
call
pop
pop
mov
mov
testb
je
push
push
call
pop
pop
inc
jmp
mov
jmp
shl
push
call
pop
mov
mov
mov
mov
cmp
je
push
add
push
call
pop
pop
test
mov
jne
pushl
call
pop
mov
mov
jmp
mov
add
push
call
mov
mov
mov
cmp
je
mov
mov
mov
mov
mov
orl
orl
call
mov
call
ret
mov
push
call
pop
ret
cmpl
jne
cmpl
jb
xor
inc
ret
push
pop
ret
xor
cmp
push
sete
push
push
call
test
mov
je
call
cmp
mov
jne
push
call
test
pop
jne
pushl
call
xor
ret
xor
inc
ret
cmpl
jne
push
xor
cmp
push
mov
jle
push
mov
push
mov
add
push
push
pushl
call
push
push
pushl
call
pushl
push
pushl
call
add
inc
cmp
jl
pop
pop
pushl
push
pushl
call
pop
pop
pushl
call
ret
mov
ret
mov
sub
neg
sbb
not
and
ret
push
push
pushl
call
test
mov
jne
ret
mov
andl
andl
mov
xor
mov
movl
inc
ret
mov
lea
mov
lea
jmp
mov
sub
cmp
jb
add
cmp
jb
xor
ret
push
mov
sub
mov
mov
push
mov
push
mov
sub
add
shr
mov
imul
lea
mov
mov
dec
test
mov
jne
push
lea
mov
mov
mov
mov
mov
test
mov
jne
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
sar
dec
cmp
jbe
push
pop
mov
and
mov
jne
sub
mov
sar
push
mov
dec
pop
cmp
jbe
mov
add
mov
sar
dec
cmp
mov
jbe
mov
cmp
je
mov
mov
cmp
jne
cmp
mov
jae
mov
shr
not
and
decb
jne
mov
and
jmp
lea
shr
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
cmpl
jne
cmp
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
mov
mov
shr
lea
or
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
mov
shr
lea
or
mov
mov
mov
mov
decl
jne
mov
test
je
mov
mov
push
shl
add
mov
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
push
push
pushl
call
mov
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
mov
add
decl
cmp
jbe
subl
mov
mov
mov
mov
mov
pop
pop
pop
leave
ret
mov
mov
push
xor
cmp
jne
lea
shl
push
pushl
push
pushl
call
cmp
jne
xor
pop
ret
addl
mov
mov
mov
push
push
push
pushl
lea
lea
call
cmp
mov
jne
xor
jmp
push
push
push
push
call
cmp
mov
jne
pushl
push
pushl
call
jmp
orl
mov
mov
incl
mov
orl
mov
pop
pop
ret
push
mov
push
push
mov
mov
push
push
mov
push
xor
jmp
shl
inc
test
jge
mov
imul
lea
push
mov
pop
mov
mov
add
dec
jne
push
mov
push
shl
add
push
push
call
test
jne
or
jmp
lea
cmp
mov
ja
mov
sub
shr
lea
inc
orl
orl
lea
mov
lea
movl
mov
movl
add
dec
jne
mov
mov
add
lea
mov
mov
lea
mov
mov
andl
xor
inc
mov
mov
mov
inc
test
mov
mov
jne
or
mov
mov
shr
not
and
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
mov
push
mov
mov
sub
add
shr
mov
imul
lea
mov
mov
and
dec
cmp
lea
mov
mov
mov
jle
test
jne
add
cmp
jg
mov
sar
dec
cmp
mov
jbe
push
pop
mov
mov
cmp
jne
cmp
mov
jae
shr
mov
lea
not
and
decb
jne
mov
and
jmp
add
shr
mov
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
sub
add
cmpl
jle
mov
mov
sar
dec
cmp
lea
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
lea
mov
mov
jmp
mov
lea
mov
mov
jmp
xor
jmp
jge
mov
sub
lea
mov
lea
mov
sar
dec
cmp
mov
mov
jbe
push
pop
testb
jne
mov
sar
dec
cmp
jbe
push
pop
mov
cmp
jne
cmp
mov
jae
mov
shr
lea
not
and
decb
jne
mov
and
jmp
lea
shr
lea
not
and
decb
jne
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
sar
dec
cmp
jbe
push
pop
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jae
cmpb
jne
mov
mov
shr
mov
or
lea
mov
jmp
cmpb
jne
lea
mov
shr
mov
or
lea
lea
mov
shr
or
mov
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
test
je
mov
push
shl
add
push
push
call
mov
mov
mov
shr
or
mov
mov
mov
andl
mov
mov
decb
mov
mov
cmpb
jne
andl
mov
cmpl
jne
cmpl
jle
pushl
push
pushl
call
mov
mov
lea
shl
mov
mov
sub
lea
push
lea
push
push
call
add
decl
andl
ret
push
mov
sub
mov
lea
shl
push
pushl
call
test
je
or
leave
ret
push
mov
push
push
xor
cmp
mov
mov
jg
xor
pop
pop
pop
leave
ret
xor
mov
push
push
call
test
jne
mov
mov
lea
mov
mov
add
mov
mov
mov
mov
mov
jmp
xor
mov
mov
mov
push
xor
cmp
pop
lea
rep
jl
push
pushl
call
test
jne
mov
xor
add
cmpl
lea
jne
cmpl
jne
mov
test
mov
je
dec
cmp
jg
incl
jmp
mov
sar
dec
cmp
jle
push
pop
lea
incl
cmp
jl
test
jne
cmp
jg
lea
cmp
jne
mov
cmp
jb
jne
add
inc
cmp
jl
mov
mov
cmp
jne
xor
andl
lea
mov
cmp
mov
mov
je
mov
cmp
je
mov
cmp
jb
add
cmp
jae
mov
and
add
lea
cmp
je
cmp
je
mov
and
add
cmp
mov
jne
cmp
je
mov
sar
dec
cmp
jle
push
pop
cmp
jne
mov
cmp
jne
incl
mov
mov
cmp
jne
cmpl
je
cmp
mov
jge
mov
shr
or
or
jmp
lea
shr
or
or
mov
cmp
jne
mov
cmp
jne
cmp
jne
inc
cmp
mov
jl
mov
mov
mov
cmp
jne
mov
cmp
jne
addl
addl
shll
incl
add
cmpl
mov
jl
mov
cmp
jne
mov
cmp
jne
add
incl
mov
cmp
mov
jl
jmp
push
pop
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
push
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
ret
xor
ret
cmp
push
jne
mov
test
jbe
cmp
ja
push
call
test
pop
je
xor
mov
movl
inc
pop
ret
xor
pop
ret
push
mov
sub
mov
mov
mov
add
and
push
mov
sar
push
lea
push
dec
cmp
lea
mov
jge
or
shr
orl
jmp
add
or
xor
shr
mov
mov
mov
mov
cmp
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
jne
mov
jmp
mov
mov
and
and
or
jne
add
cmp
mov
jb
cmp
je
mov
mov
mov
cmp
mov
je
mov
mov
and
and
or
jne
mov
and
andl
lea
mov
and
or
mov
jne
mov
and
incl
add
mov
and
or
je
mov
mov
imul
lea
mov
mov
xor
and
jne
mov
and
push
pop
jmp
cmpl
jne
add
mov
cmp
jb
cmp
jne
mov
jmp
cmpl
jne
add
cmp
mov
jb
cmp
jne
call
mov
test
mov
je
push
call
pop
mov
mov
mov
cmpl
jne
xor
jmp
shl
inc
test
jge
mov
mov
mov
sub
mov
sar
dec
cmp
mov
jle
push
pop
cmp
je
mov
cmp
jne
cmp
mov
jge
mov
shr
mov
lea
not
mov
and
mov
decb
jne
mov
mov
and
jmp
lea
shr
mov
lea
lea
not
and
decb
mov
jne
mov
mov
and
jmp
mov
cmpl
mov
mov
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jne
mov
mov
inc
cmp
mov
jge
cmpb
jne
mov
mov
shr
or
mov
mov
shr
mov
or
jmp
cmpb
jne
lea
mov
shr
or
mov
lea
lea
mov
shr
or
mov
test
je
mov
mov
jmp
mov
mov
add
lea
mov
mov
mov
mov
test
lea
mov
jne
cmp
jne
mov
cmp
jne
andl
mov
mov
lea
pop
pop
pop
leave
ret
push
push
call
mov
mov
push
mov
call
pop
pop
mov
pop
ret
mov
ret
mov
test
je
pushl
call
test
pop
je
xor
inc
ret
xor
ret
push
call
test
je
push
push
call
test
je
pushl
call
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
push
mov
jmp
mov
test
je
call
add
cmp
jb
pop
ret
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
ret
mov
test
je
pushl
call
pop
push
push
mov
mov
xor
cmp
mov
jae
test
jne
mov
test
je
call
add
cmp
jb
test
jne
push
call
mov
mov
mov
cmp
pop
jae
mov
test
je
call
add
cmp
jb
xor
pop
pop
ret
push
push
call
push
call
pop
xor
mov
xor
inc
cmp
jne
pushl
call
push
call
mov
mov
mov
cmp
jne
cmp
je
mov
sub
mov
cmp
jb
mov
cmp
je
call
jmp
push
mov
call
pop
push
mov
call
pop
orl
call
cmp
jne
mov
pushl
call
xor
xor
inc
cmp
je
push
call
pop
ret
call
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
push
lea
sub
mov
mov
push
push
mov
xor
push
xor
cmp
je
inc
cmp
jb
mov
shl
cmp
jne
mov
cmp
je
cmp
jne
cmpl
je
cmp
je
push
lea
push
push
mov
call
test
jne
lea
push
push
call
pop
pop
lea
mov
push
call
inc
cmp
pop
jbe
mov
push
call
mov
lea
sub
push
add
push
push
call
add
push
call
pushl
mov
call
lea
pop
add
pop
and
call
mov
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
jmp
push
lea
push
lea
pushl
call
pop
push
pushl
push
call
push
call
lea
mov
call
pop
pop
pop
add
leave
ret
mov
xor
cmp
je
inc
cmp
jb
shl
cmp
jne
mov
ret
xor
ret
mov
cmp
je
test
jne
cmpl
jne
push
call
mov
test
pop
je
call
push
call
pop
ret
mov
mov
push
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
pop
jae
cmp
je
xor
ret
push
mov
push
push
push
push
call
mov
mov
mov
mov
mov
cmp
je
lea
add
lea
cmp
jb
lea
lea
cmp
jae
cmp
je
xor
test
je
mov
test
mov
je
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
add
cmp
jge
lea
shl
mov
andl
mov
mov
inc
add
add
cmp
jl
mov
mov
cmp
mov
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
mov
pop
mov
or
jmp
pushl
call
pop
pop
pop
leave
ret
mov
cmp
jne
pushl
push
call
pop
pop
ret
xor
ret
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
test
pop
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
push
xor
cmp
push
push
jne
call
mov
xor
cmp
jne
jmp
cmp
je
inc
push
call
pop
lea
mov
cmp
jne
lea
push
call
mov
cmp
pop
mov
jne
or
jmp
mov
push
jmp
push
call
mov
inc
cmpb
pop
je
push
call
cmp
pop
mov
je
push
push
call
pop
pop
add
add
cmp
jne
pushl
call
mov
mov
movl
xor
pop
pop
pop
pop
pop
ret
pushl
call
mov
or
jmp
push
mov
push
push
mov
xor
cmp
push
mov
mov
movl
je
mov
addl
mov
cmpb
jne
xor
test
sete
inc
mov
mov
jmp
incl
test
je
mov
mov
inc
mov
movzbl
inc
testb
je
incl
test
je
mov
mov
inc
inc
test
mov
je
test
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
test
je
movb
inc
incl
dec
jne
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
test
je
movzbl
testb
je
mov
inc
inc
incl
mov
mov
inc
jmp
movzbl
testb
je
inc
incl
incl
inc
jmp
test
je
movb
inc
incl
mov
jmp
mov
test
je
andl
incl
pop
pop
leave
ret
push
mov
push
push
push
push
push
xor
cmp
jne
call
push
mov
push
push
movb
call
mov
cmp
mov
je
cmpb
mov
jne
mov
lea
push
push
lea
xor
mov
call
mov
mov
shl
add
push
call
mov
add
test
jne
or
jmp
lea
push
lea
push
lea
mov
call
mov
dec
pop
mov
pop
mov
xor
pop
pop
pop
leave
ret
push
push
mov
push
push
push
push
mov
xor
xor
cmp
push
pop
jne
call
mov
cmp
je
movl
jmp
call
cmp
jne
mov
mov
jmp
mov
cmp
jne
cmp
jne
call
mov
cmp
je
cmp
mov
je
add
cmp
jne
add
cmp
jne
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
cmp
pop
mov
je
push
push
push
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
mov
push
call
mov
jmp
cmp
je
cmp
je
xor
jmp
call
mov
cmp
je
cmp
je
inc
cmp
jne
inc
cmp
jne
sub
inc
mov
push
call
mov
cmp
pop
jne
xor
jmp
push
push
push
call
add
push
call
mov
pop
pop
pop
pop
pop
pop
ret
sub
push
mov
push
call
test
pop
jne
or
jmp
mov
movl
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
push
push
push
lea
push
call
cmpw
je
mov
test
je
mov
lea
lea
mov
mov
cmp
jl
mov
cmp
jge
mov
push
call
test
pop
je
addl
mov
lea
jmp
orl
andl
movb
movb
mov
add
add
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
mov
test
je
test
jne
push
call
test
je
mov
mov
and
lea
sar
mov
lea
mov
mov
mov
mov
mov
lea
push
push
call
test
pop
pop
je
incl
addl
inc
inc
cmp
jl
xor
mov
lea
lea
cmpl
jne
test
movb
jne
push
pop
jmp
or
jmp
mov
dec
neg
sbb
add
push
call
mov
cmp
je
push
call
test
je
and
cmp
mov
jne
orb
jmp
cmp
jne
orb
lea
push
push
call
test
pop
pop
je
incl
jmp
orb
jmp
orb
inc
cmp
jl
pushl
call
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
lea
jmp
cmpl
je
lea
push
call
mov
add
add
cmp
jb
pushl
call
andl
pop
add
cmp
jl
pop
pop
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
push
push
call
movl
cmpl
jae
andl
mov
mov
test
je
call
jmp
xor
inc
ret
mov
orl
addl
jmp
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
jae
neg
add
add
test
xchg
mov
push
ret
push
lea
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
cmp
pop
jne
call
movl
jmp
pushl
lea
push
pushl
push
call
cmp
mov
jne
call
test
je
push
call
pop
mov
mov
jmp
mov
sar
mov
and
lea
lea
andb
mov
mov
pop
pop
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
pushl
push
call
add
mov
mov
jmp
call
movl
call
andl
orl
orl
orl
call
mov
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
mov
call
ret
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
cmpl
jne
cmpl
push
mov
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
mov
xor
pop
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
push
push
jae
mov
sar
lea
mov
and
lea
mov
shl
add
testb
je
cmpl
je
cmpl
jne
xor
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
call
movl
call
andl
or
pop
pop
ret
mov
cmp
jae
mov
and
sar
mov
lea
lea
testb
je
mov
ret
call
movl
call
andl
or
ret
push
push
call
mov
mov
sar
mov
and
lea
mov
lea
xor
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
pop
pop
test
jne
push
lea
push
call
pop
pop
xor
jmp
incl
orl
call
mov
sar
and
lea
mov
lea
push
call
xor
inc
call
ret
mov
push
call
pop
ret
mov
mov
and
sar
mov
lea
lea
push
call
ret
push
push
call
orl
push
call
pop
test
je
push
call
pop
xor
mov
mov
cmp
jge
mov
test
je
mov
mov
add
cmp
jae
testb
jne
xor
cmp
jne
push
call
pop
movl
cmp
jne
push
lea
push
call
pop
pop
test
jne
push
lea
push
call
pop
pop
or
jmp
incl
mov
call
lea
push
call
testb
je
push
call
add
jmp
mov
mov
push
call
pop
ret
orl
mov
sub
cltd
push
pop
idiv
mov
shl
add
mov
cmpl
jne
inc
jmp
mov
push
call
pop
mov
test
je
lea
mov
addl
mov
add
cmp
jae
movb
orl
movb
andl
add
mov
jmp
shl
mov
push
call
pop
test
jne
orl
orl
call
mov
call
ret
push
call
pop
ret
push
push
call
xor
testb
je
add
testb
je
or
testb
je
or
pushl
call
test
jne
call
push
call
pop
jmp
cmp
jne
or
jmp
cmp
jne
or
call
mov
mov
cmp
jne
call
movl
call
andl
or
jmp
andl
pushl
push
call
pop
pop
or
mov
mov
sar
mov
and
lea
mov
mov
orl
call
mov
call
ret
mov
push
call
pop
ret
pushl
call
xor
inc
ret
push
push
call
mov
test
jne
cmpl
je
push
call
test
je
push
push
call
mov
test
jne
mov
mov
andl
pushl
pushl
call
mov
jmp
mov
mov
mov
mov
xor
inc
ret
mov
cmpl
jne
push
call
xor
orl
call
ret
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
pushl
mov
mov
mov
mov
cmp
je
cmp
je
lea
mov
mov
mov
cmpl
jne
push
mov
call
call
jmp
popl
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
pop
pop
ret
push
push
call
mov
imul
mov
test
jne
inc
xor
mov
cmp
ja
cmpl
jne
add
and
mov
mov
cmp
ja
push
call
pop
and
push
call
pop
mov
orl
call
mov
test
je
pushl
push
push
call
add
test
jne
push
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
jne
jmp
mov
push
call
pop
ret
mov
call
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
shl
mov
mov
cmp
je
testb
je
push
call
pop
cmp
je
incl
cmp
jl
mov
mov
add
push
call
mov
pushl
call
pop
mov
mov
inc
jmp
orl
call
mov
call
ret
push
call
pop
ret
push
mov
sub
push
push
mov
mov
test
jne
mov
mov
mov
mov
cmp
mov
jb
cmp
jae
xor
jmp
push
mov
cmp
jne
xor
inc
jmp
xor
mov
mov
mov
cmp
je
cmp
jae
cmpl
je
incl
inc
add
cmp
jbe
cmpl
je
mov
cmp
jb
cmp
jae
mov
mov
and
xor
test
jle
cmp
je
inc
cmp
jl
push
lea
push
push
call
test
je
cmpl
jne
testb
je
mov
cmpw
jne
mov
add
cmpl
jne
cmpw
jne
sub
cmpw
movzwl
lea
jbe
mov
cmp
jb
mov
add
cmp
jae
testb
jne
push
push
call
test
jne
mov
test
mov
jle
lea
cmp
je
dec
sub
test
jg
test
jne
push
pop
cmp
jg
mov
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
cmp
jge
inc
mov
push
push
call
jmp
xor
jmp
test
jle
mov
push
push
call
test
jne
cmp
je
mov
lea
test
jl
cmp
je
dec
jns
test
jge
cmp
jge
inc
mov
lea
jmp
je
xor
test
jl
lea
mov
inc
cmp
mov
mov
jle
push
push
call
jmp
or
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
shlb
add
mov
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
mov
add
mov
add
inc
add
inc
add
inc
add
inc
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
mov
mov
add
mov
add
mov
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
pop
mov
add
mov
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
cld
mov
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
mov
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
pop
mov
add
inc
add
inc
add
or
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
mov
ret
mov
ret
push
mov
mov
push
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
cmp
je
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
mov
sub
push
call
pop
pop
mov
cmp
je
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
push
call
pop
pop
pop
ret
push
call
mov
mov
cmp
je
xor
cmp
je
mov
decl
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
cmp
je
decl
mov
decl
mov
mov
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
cmp
je
mov
incl
mov
mov
incl
cmp
je
cmp
jne
cmp
je
push
call
pop
mov
pop
ret
xor
ret
push
mov
test
jle
push
lea
add
pushl
pushl
call
dec
pop
pop
jne
pop
pop
ret
push
mov
push
push
mov
push
push
push
call
mov
mov
add
test
je
cmp
jne
lea
cmpb
je
push
push
lea
push
call
add
movb
xor
jmp
andl
push
jmp
cmpl
lea
mov
jne
cmp
jae
cmp
je
push
push
pushl
jmp
cmpl
jne
cmp
jae
cmp
je
push
mov
add
jmp
cmpl
jne
cmp
jae
test
je
cmp
jne
push
mov
add
push
push
call
add
cmp
je
test
je
incl
lea
push
push
call
test
pop
pop
jne
or
pop
pop
pop
pop
ret
xor
jmp
push
mov
push
pushl
call
lea
cmpb
pop
pop
je
push
push
push
pushl
call
add
lea
cmpb
pop
je
push
push
push
pushl
call
add
ret
push
push
call
push
call
pop
andl
call
mov
orl
call
mov
call
ret
push
call
pop
ret
mov
push
xor
inc
test
jne
push
call
test
pop
mov
jne
pop
ret
push
push
push
movb
pushl
mov
push
pushl
push
pushl
call
mov
add
mov
push
pushl
call
add
pushl
pushl
call
add
test
je
xor
pushl
mov
push
pushl
push
pushl
call
add
cmp
jl
test
pop
pop
pop
jne
mov
pop
ret
pushl
call
andl
mov
pop
pop
ret
push
mov
sub
mov
push
mov
xor
cmp
mov
jne
xor
jmp
cmpb
jne
cmpb
jne
mov
mov
cmp
movb
movb
je
mov
mov
mov
mov
cmp
je
mov
jmp
push
push
push
call
mov
cmp
pop
mov
jae
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
je
lea
push
push
call
test
pop
pop
jne
lea
push
push
push
call
add
test
jne
xor
jmp
movzwl
mov
lea
push
push
call
cmpb
pop
pop
je
push
call
cmp
pop
jb
mov
push
push
push
movb
call
add
cmpl
je
push
push
pushl
call
add
cmpl
je
push
push
pushl
call
add
mov
push
pushl
call
pop
pop
mov
pop
pop
mov
pop
call
leave
ret
push
lea
sub
mov
mov
push
lea
push
lea
push
lea
push
pushl
call
add
test
je
push
lea
shl
pushl
lea
push
call
test
pop
pop
jne
mov
jmp
lea
push
call
inc
push
call
test
pop
pop
mov
je
mov
push
mov
lea
mov
mov
lea
lea
push
push
mov
lea
push
call
mov
mov
lea
push
pushl
call
mov
movzwl
mov
push
lea
push
pushl
call
add
cmp
jne
mov
mov
andl
mov
mov
mov
mov
mov
cmp
je
mov
incl
mov
mov
mov
mov
mov
mov
add
cmp
mov
jl
jmp
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
cmpl
jne
push
pushl
lea
pushl
push
push
push
push
call
add
test
je
xor
andb
inc
cmp
jb
push
lea
push
push
call
add
neg
sbb
inc
jmp
xor
mov
mov
mov
jmp
mov
mov
cmp
jne
mov
mov
call
test
je
mov
pushl
mov
call
mov
mov
mov
mov
pop
xor
jmp
cmpl
je
pushl
call
pop
mov
pop
pop
mov
call
add
leave
ret
push
lea
sub
mov
push
push
mov
xor
cmp
push
mov
mov
je
cmp
je
push
call
pop
jmp
lea
mov
jmp
cmp
movl
mov
je
cmpb
jne
cmpb
jne
cmpb
jne
push
push
call
mov
test
pop
pop
je
sub
mov
je
cmpb
je
movl
mov
jmp
mov
push
push
pushl
call
add
test
jne
pushl
call
cmp
pop
je
incl
add
cmp
jle
inc
push
push
call
mov
test
pop
pop
jne
cmpb
jne
mov
cmp
jg
push
lea
push
push
call
lea
push
movb
call
add
test
je
incl
add
cmpb
je
inc
cmpb
jne
xor
cmp
je
call
mov
mov
mov
pop
pop
pop
call
add
leave
ret
xor
jmp
push
push
push
lea
push
push
call
mov
add
cmp
je
mov
xor
mov
cmp
je
pushl
lea
push
call
test
pop
pop
je
lea
push
call
test
pop
jne
and
jmp
incl
add
inc
cmp
jle
xor
cmp
je
call
pushl
mov
call
pop
mov
jmp
cmp
jne
xor
jmp
push
push
call
mov
xor
cmp
jl
cmp
jg
push
call
pop
mov
cmp
jne
xor
mov
call
mov
push
lea
push
call
pop
pop
mov
jmp
push
call
pop
mov
mov
cmp
jne
mov
jmp
mov
mov
call
mov
cmp
je
mov
mov
mov
mov
mov
xor
mov
cmp
jg
mov
mov
inc
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
je
push
call
pop
mov
call
cmp
jne
cmp
je
push
call
pop
orl
call
mov
jmp
push
call
pop
ret
xor
call
ret
andl
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
mov
movl
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
push
push
xor
pop
mov
rep
stos
xor
mov
mov
mov
mov
stos
stos
stos
pop
ret
push
mov
sub
mov
mov
push
lea
push
pushl
call
cmp
mov
jne
xor
mov
inc
cmp
jb
mov
test
movb
je
push
lea
push
movzbl
movzbl
cmp
ja
sub
inc
mov
shr
lea
mov
rep
mov
and
rep
inc
mov
inc
test
jne
pop
pop
push
pushl
lea
pushl
push
push
lea
push
push
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
xor
mov
test
je
orb
mov
mov
jmp
test
je
orb
mov
jmp
movb
inc
cmp
jb
jmp
xor
cmp
jb
cmp
ja
orb
mov
add
mov
jmp
cmp
jb
cmp
ja
orb
mov
sub
jmp
movb
inc
cmp
jb
mov
pop
call
leave
ret
push
push
call
push
call
pop
andl
call
mov
mov
mov
mov
cmp
je
test
je
decl
jne
push
call
pop
mov
mov
mov
mov
incl
orl
call
mov
call
ret
mov
push
call
pop
ret
push
mov
sub
mov
push
push
mov
xor
cmp
mov
push
je
xor
xor
cmp
je
add
inc
cmp
jb
lea
push
push
call
cmp
jne
push
xor
cmpl
pop
mov
rep
stos
mov
mov
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
xor
pop
mov
rep
lea
shl
mov
stos
lea
mov
mov
jmp
mov
test
je
movzbl
movzbl
cmp
ja
mov
mov
or
inc
cmp
jbe
inc
inc
mov
test
jne
incl
add
cmpl
jb
mov
mov
movl
call
lea
mov
mov
movsl
movsl
mov
movsl
jmp
orb
inc
cmp
jbe
inc
inc
cmpb
jne
xor
inc
mov
orb
inc
cmp
jb
mov
call
mov
mov
jmp
mov
xor
mov
stos
stos
stos
jmp
cmp
je
call
call
xor
jmp
or
mov
pop
pop
pop
call
leave
ret
mov
neg
sbb
and
ret
push
push
call
orl
push
call
pop
xor
mov
mov
mov
cmp
jne
movl
call
jmp
cmp
jne
movl
call
jmp
cmp
jne
movl
mov
mov
cmp
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
pushl
call
pop
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
mov
cmpl
jne
cmp
je
push
call
pop
jmp
mov
orl
call
mov
call
ret
push
call
pop
ret
cmpl
jne
push
call
pop
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
jmp
lea
mov
mov
push
test
je
mov
add
test
je
test
jne
mov
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
jmp
lea
jmp
lea
jmp
lea
mov
test
je
mov
add
test
je
mov
add
test
jne
jmp
mov
add
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
je
jmp
mov
mov
pop
ret
mov
mov
movb
pop
ret
mov
mov
pop
ret
mov
mov
pop
ret
push
mov
sub
mov
mov
mov
push
mov
push
mov
mov
and
and
test
push
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movl
mov
je
movb
jmp
movb
test
mov
jne
test
jne
cmp
je
cmp
jne
mov
cmp
movw
jne
cmpl
je
test
jne
push
jmp
test
je
cmp
jne
cmpl
jne
push
jmp
cmp
jne
cmpl
jne
push
lea
push
call
movb
andl
pop
pop
jmp
push
lea
push
call
movb
jmp
movzwl
mov
imul
andw
mov
shr
shr
lea
imul
lea
mov
mov
sar
movswl
neg
push
push
lea
push
mov
mov
call
add
cmpw
jb
lea
push
lea
push
inc
call
pop
pop
testb
mov
mov
je
movswl
add
test
jg
movb
jmp
cmp
jle
push
pop
movzwl
sub
andw
movl
lea
push
call
decl
pop
jne
test
jge
neg
and
jle
lea
push
call
dec
pop
jne
lea
test
lea
mov
jle
mov
lea
lea
movsl
movsl
lea
push
movsl
call
lea
push
call
lea
push
lea
push
call
lea
push
call
mov
mov
add
add
incl
decl
mov
movb
jne
mov
dec
mov
dec
cmp
lea
jl
jmp
cmpb
jne
movb
dec
cmp
jae
cmp
jae
inc
incw
incb
sub
sub
mov
movsbl
movb
mov
mov
pop
pop
pop
call
leave
ret
cmpb
jne
dec
cmp
jae
cmp
jae
movb
andw
xor
movb
movb
movb
inc
jmp
push
mov
sub
mov
test
je
cmp
jne
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
mov
jne
movl
pop
leave
ret
push
push
call
mov
mov
mov
xor
cmp
je
mov
pushl
pushl
call
pop
pop
orl
jmp
xor
inc
ret
mov
jmp
mov
dec
je
mov
movl
mov
jmp
mov
movl
mov
mov
push
lea
push
push
call
test
jne
push
lea
push
call
pop
pop
lea
mov
push
call
pop
add
cmp
jbe
mov
push
call
mov
lea
sub
add
push
push
push
call
add
push
call
pop
lea
add
and
call
mov
mov
push
push
call
mov
push
push
call
push
push
call
push
push
call
push
push
call
pushl
push
call
push
push
push
call
add
push
call
int3
mov
mov
mov
ret
push
push
call
pop
pop
ret
mov
mov
mov
ret
mov
cmp
jb
xor
ret
mov
and
sar
mov
lea
movsbl
and
ret
push
mov
sub
mov
push
push
mov
testb
mov
push
jne
mov
cmp
je
mov
sar
mov
and
lea
lea
jmp
mov
testb
je
pushl
lea
push
call
mov
cmp
pop
pop
jne
call
movl
or
jmp
xor
test
jle
decl
js
mov
mov
mov
mov
movzbl
inc
mov
jmp
movsbl
push
push
call
pop
pop
cmp
je
inc
cmp
jl
mov
jmp
addl
js
mov
mov
mov
addl
jmp
movzwl
push
push
call
pop
pop
mov
pop
pop
pop
call
leave
ret
push
push
call
mov
mov
push
call
pop
andl
push
pushl
call
pop
pop
mov
orl
call
mov
call
ret
pushl
call
pop
ret
jmp
testb
je
cmpl
je
decl
js
mov
mov
incl
movzbl
jmp
movsbl
push
push
call
pop
pop
cmp
jne
or
ret
incl
ret
push
mov
push
mov
jmp
mov
mov
decl
call
cmpl
je
cmpl
jg
pop
pop
ret
testb
push
push
mov
mov
je
cmpl
jne
mov
add
jmp
mov
decl
mov
call
inc
cmpl
je
cmpl
jg
pop
pop
ret
addl
mov
mov
ret
addl
mov
mov
mov
ret
addl
mov
mov
ret
push
lea
sub
mov
mov
xor
mov
mov
mov
mov
push
mov
xor
test
je
push
push
mov
jmp
mov
inc
cmpl
mov
jl
cmp
jl
cmp
jg
movsbl
movsbl
and
jmp
xor
movsbl
push
sar
pop
cmp
mov
ja
jmp
xor
orl
mov
mov
mov
mov
mov
mov
jmp
movsbl
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
orl
jmp
orl
jmp
orl
jmp
orb
jmp
orl
jmp
cmp
jne
addl
mov
mov
test
mov
jge
orl
negl
jmp
mov
movsbl
lea
lea
mov
jmp
andl
jmp
cmp
jne
addl
mov
mov
test
mov
jge
orl
jmp
mov
movsbl
lea
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
orb
jmp
orl
jmp
orl
jmp
mov
cmp
jne
cmpb
jne
inc
inc
orb
mov
jmp
cmp
jne
cmpb
jne
inc
inc
andb
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
andl
mov
andl
movzbl
testb
je
mov
lea
mov
call
mov
inc
mov
mov
lea
mov
call
jmp
movsbl
cmp
jg
cmp
jge
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
sub
jne
testw
jne
orb
mov
cmp
jne
mov
addl
testw
mov
mov
mov
je
test
jne
mov
mov
mov
movl
jmp
movl
add
orl
cmpl
lea
mov
jge
movl
jmp
testw
jne
orb
addl
testw
mov
je
movswl
push
lea
push
call
test
pop
pop
mov
jge
movl
jmp
sub
je
sub
je
dec
jne
orl
movl
mov
mov
test
je
mov
mov
mov
add
mov
jmp
mov
mov
movl
lea
mov
jmp
addl
mov
mov
test
je
mov
test
je
testb
movswl
mov
je
cltd
sub
sar
movl
jmp
andl
jmp
mov
mov
push
jmp
jne
cmp
jne
movl
jmp
mov
cmp
jle
mov
mov
cmp
jle
mov
add
push
call
test
pop
mov
je
mov
mov
jmp
mov
mov
mov
pushl
add
pushl
mov
mov
mov
movsbl
push
lea
push
push
mov
call
mov
add
and
je
cmpl
jne
push
call
pop
cmp
jne
test
jne
push
call
pop
cmpb
jne
orb
inc
mov
push
call
pop
jmp
sub
je
sub
je
dec
je
dec
je
sub
je
dec
dec
je
sub
jne
movl
jmp
dec
cmpw
je
inc
inc
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmpb
je
inc
test
jne
sub
jmp
movl
mov
testb
movl
je
mov
add
movb
mov
movl
jmp
testb
movl
je
orb
jmp
addl
testb
mov
mov
je
mov
mov
jmp
mov
mov
movl
jmp
addl
test
mov
je
test
je
movswl
cltd
jmp
movzwl
jmp
test
mov
jne
xor
test
je
test
jg
jl
test
jae
neg
adc
neg
orb
test
mov
mov
jne
xor
cmpl
jge
movl
jmp
andl
mov
cmp
jle
mov
mov
or
jne
andl
lea
mov
decl
test
jg
mov
or
je
mov
cltd
push
push
push
push
call
add
cmp
mov
mov
mov
jle
add
mov
dec
jmp
lea
sub
inc
testb
mov
mov
je
mov
cmpb
jne
test
jne
decl
mov
movb
inc
mov
cmpl
jne
mov
test
je
test
je
movb
jmp
test
je
movb
jmp
test
je
movb
movl
mov
sub
sub
test
jne
pushl
lea
push
push
call
add
pushl
mov
lea
lea
call
test
pop
je
test
jne
push
push
push
lea
call
add
cmpl
je
cmpl
jle
mov
mov
mov
decl
xor
mov
push
lea
push
call
inc
pop
inc
test
pop
jle
mov
push
lea
lea
call
cmpl
pop
jne
jmp
pushl
mov
lea
call
pop
testb
je
pushl
lea
push
push
call
add
cmpl
je
pushl
call
andl
pop
mov
mov
test
jne
pop
pop
mov
mov
pop
call
add
leave
ret
push
rolb
rolb
jecxz
inc
add
roll
jo
inc
add
inc
add
rolb
push
mov
push
push
push
mov
xor
cmp
je
cmp
je
mov
cmp
jne
mov
cmp
je
mov
xor
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
je
movzbw
mov
xor
inc
jmp
mov
movzbl
testb
je
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
jne
mov
cmp
jb
cmp
je
mov
jmp
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
jne
call
movl
or
jmp
call
mov
cmp
je
call
pushl
pushl
pushl
push
call
add
ret
mov
ret
mov
ret
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
push
mov
mov
xor
cmp
mov
jge
mov
push
push
push
push
call
mov
add
test
mov
mov
mov
jg
jl
test
jb
testw
jne
mov
cltd
sub
sbb
mov
mov
jmp
mov
mov
mov
sub
mov
mov
test
je
mov
mov
sar
mov
and
lea
testb
je
mov
cmp
jae
cmpb
jne
incl
inc
cmp
jb
mov
or
jne
mov
xor
jmp
test
js
call
movl
or
mov
jmp
testb
je
mov
test
jne
and
jmp
sub
add
mov
mov
sar
lea
mov
and
lea
mov
shl
testb
je
push
push
push
pushl
call
add
cmp
jne
cmp
jne
mov
mov
add
jmp
cmpb
jne
incl
inc
cmp
jb
testb
jmp
push
pushl
pushl
pushl
call
mov
add
cmp
ja
mov
test
je
test
je
mov
mov
mov
testb
je
incl
mov
sub
sbbl
mov
xor
add
adc
pop
pop
pop
leave
ret
push
push
call
pushl
call
pop
andl
pushl
call
pop
mov
mov
orl
call
mov
mov
call
ret
pushl
call
pop
ret
incl
push
call
test
pop
mov
mov
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
ret
push
mov
push
call
cmp
pop
jne
call
movl
or
pop
ret
push
pushl
push
pushl
push
call
mov
cmp
jne
call
jmp
xor
test
je
push
call
pop
or
jmp
mov
and
sar
mov
mov
lea
lea
andb
mov
pop
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
call
andl
or
call
ret
push
mov
sub
mov
push
push
xor
test
movl
mov
jns
mov
movb
jmp
movl
movb
mov
test
jne
test
jne
cmp
je
orb
push
mov
pop
and
sub
je
dec
je
dec
jne
movl
jmp
movl
jmp
movl
cmp
je
cmp
je
cmp
je
cmp
je
call
movl
call
mov
or
jmp
mov
jmp
movl
jmp
movl
jmp
mov
mov
mov
and
mov
cmp
push
mov
jg
je
cmp
je
cmp
je
cmp
je
cmp
jne
movl
jmp
movl
jmp
mov
jmp
cmp
je
cmp
je
cmp
je
call
movl
call
mov
or
jmp
movl
jmp
movl
mov
test
mov
je
mov
not
and
test
js
xor
inc
test
je
orb
or
cmpl
jne
orl
test
je
or
test
je
or
jmp
test
je
or
call
mov
or
cmp
jne
call
movl
call
andl
mov
jmp
mov
push
push
pushl
movl
mov
mov
lea
push
pushl
pushl
pushl
call
mov
cmp
je
push
call
test
jne
push
call
call
push
call
pop
jmp
cmp
jne
orb
jmp
cmp
jne
orb
push
push
call
orb
mov
sar
lea
mov
and
lea
mov
pop
pop
mov
shl
mov
andb
mov
jne
test
jns
testb
je
push
push
push
call
add
cmp
mov
jne
call
cmpl
jne
cmpb
jne
testb
je
mov
lea
orb
mov
pop
pop
pop
leave
ret
push
lea
push
push
movb
call
add
test
jne
cmpb
jne
pushl
push
call
cmp
pop
pop
je
push
push
push
call
add
cmp
jne
push
call
pop
jmp
push
push
call
andl
andl
pushl
pushl
pushl
lea
push
lea
push
push
pop
call
add
mov
orl
call
mov
call
ret
cmpl
je
pushl
call
pop
ret
push
push
call
andl
andl
pushl
pushl
pushl
lea
push
lea
push
mov
call
add
mov
orl
call
mov
call
ret
cmpl
je
pushl
call
pop
ret
push
pushl
call
pop
mov
mov
mov
mov
sub
add
cmp
jae
mov
cmp
jae
mov
add
push
push
call
test
pop
pop
jne
add
push
pushl
call
test
pop
pop
jne
pop
ret
mov
sub
mov
sar
lea
mov
mov
addl
mov
pop
ret
push
call
test
pop
mov
jne
push
pop
ret
andl
mov
mov
xor
ret
push
push
call
call
andl
mov
call
mov
orl
call
mov
call
ret
call
ret
pushl
call
neg
sbb
neg
pop
dec
ret
push
mov
sub
push
xor
cmp
push
push
jne
push
call
mov
cmp
je
mov
push
push
call
test
mov
je
push
push
call
push
push
mov
call
cmpl
mov
jne
push
push
call
test
mov
je
push
push
call
mov
mov
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
cmpl
jb
orb
jmp
xor
jmp
orb
jmp
mov
test
je
call
mov
test
je
mov
test
je
push
call
mov
pushl
pushl
pushl
push
call
pop
pop
pop
leave
ret
mov
push
test
je
push
push
mov
mov
test
mov
jne
shr
jne
jmp
mov
add
mov
add
sub
je
test
je
test
jne
mov
shr
jne
and
je
mov
add
mov
add
test
je
sub
jne
mov
pop
pop
pop
ret
test
je
mov
add
sub
je
test
jne
mov
shr
jne
mov
add
sub
jne
pop
pop
mov
pop
ret
mov
add
sub
je
mov
mov
add
xor
xor
mov
add
test
je
test
je
test
je
test
je
test
jne
mov
jmp
and
mov
jmp
and
mov
jmp
xor
mov
add
xor
sub
je
xor
mov
add
sub
jne
and
jne
mov
pop
pop
pop
ret
movzbl
mov
test
jne
cmpl
je
mov
movzwl
and
jmp
xor
test
jne
ret
xor
inc
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
push
push
pushl
call
add
ret
cmpl
jne
push
push
pushl
call
add
test
je
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
je
xor
mov
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
push
push
push
push
mov
xor
xor
pushl
call
pushl
mov
call
add
inc
cmp
pop
pop
lea
jb
inc
push
call
mov
test
pop
je
mov
xor
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
inc
cmp
jb
movb
pop
pop
mov
pop
pop
ret
push
mov
push
push
andl
push
push
push
mov
lea
movl
pushl
call
pushl
mov
call
add
pop
lea
add
decl
pop
mov
jne
inc
push
call
mov
test
pop
mov
je
push
add
pop
movb
pushl
inc
push
call
push
call
add
movb
pushl
inc
push
call
push
call
add
add
add
dec
jne
movb
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
mov
push
xor
mov
mov
shl
pushl
call
pushl
mov
call
add
incl
cmpl
pop
pop
mov
lea
jb
lea
mov
movl
mov
pushl
call
pushl
mov
call
addl
pop
pop
mov
add
decl
lea
jne
pushl
call
pushl
mov
call
pushl
add
lea
call
pushl
lea
call
pushl
lea
call
lea
add
push
call
mov
add
test
je
push
pushl
lea
push
call
andl
lea
mov
add
sub
mov
mov
mov
mov
pushl
push
call
push
call
mov
lea
mov
mov
pushl
push
call
push
call
addl
add
incl
cmpl
lea
jb
lea
mov
lea
mov
movl
jmp
mov
mov
mov
pushl
push
call
push
call
lea
mov
mov
mov
pushl
push
call
push
call
addl
addl
add
decl
lea
jne
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
push
call
lea
mov
pushl
push
call
add
pop
pop
mov
pop
leave
ret
cmpl
push
mov
je
push
mov
test
je
mov
mov
incl
inc
decl
cmpl
jne
pop
pop
ret
cmpl
mov
push
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
push
push
push
mov
xor
cmp
mov
je
cmpl
mov
jbe
push
cltd
pop
idiv
add
mov
inc
decl
test
mov
jle
cmp
ja
mov
mov
dec
mov
mov
mov
dec
mov
inc
cmp
jb
jmp
cmp
jae
dec
lea
test
je
push
cltd
pop
idiv
mov
add
incl
mov
dec
cmp
jne
mov
add
sub
jmp
mov
pop
pop
leave
ret
push
mov
movsbl
cmp
push
mov
push
mov
jg
je
cmp
jg
je
sub
je
sub
je
dec
je
sub
je
dec
jne
mov
cltd
push
pop
idiv
mov
test
jne
push
pop
jmp
pushl
mov
push
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
movb
incl
decl
jmp
pushl
mov
push
jmp
sub
je
dec
dec
je
dec
dec
je
dec
je
dec
jne
mov
cltd
push
pop
idiv
pushl
push
add
imul
add
pop
mov
call
pop
jmp
pushl
push
push
push
push
pushl
call
add
test
jne
xor
jmp
mov
test
jne
push
pop
jmp
lea
jmp
mov
cmp
jge
xor
jmp
mov
push
cltd
pop
idiv
cmp
jl
jmp
pushl
mov
push
jmp
cmp
jg
je
sub
je
dec
je
dec
je
dec
je
sub
jne
pushl
mov
inc
push
jmp
pushl
mov
push
jmp
cmpl
pushl
push
push
push
je
push
pushl
call
add
test
je
cmpl
je
mov
movb
incl
decl
jmp
push
jmp
mov
mov
mov
jmp
mov
mov
mov
jmp
mov
inc
pushl
push
jmp
sub
je
sub
je
dec
je
dec
je
dec
jne
call
xor
cmp
setne
mov
jmp
pushl
mov
cltd
push
pop
idiv
mov
jmp
cmpl
pushl
push
push
push
je
push
jmp
push
jmp
pushl
mov
xor
inc
jmp
cmpl
mov
jg
mov
jmp
mov
mov
mov
call
xor
inc
pop
pop
pop
ret
push
push
call
mov
xor
sub
je
dec
mov
je
mov
jmp
mov
jmp
mov
mov
mov
mov
cmpl
je
cmpl
mov
jne
mov
mov
mov
mov
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
pushl
lea
push
push
pushl
call
mov
cmp
je
mov
mov
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
xor
cmp
jne
pushl
call
pop
mov
cmp
je
movl
mov
pushl
push
pushl
lea
push
push
mov
pushl
call
dec
cmp
jle
mov
mov
cmpl
jbe
mov
mov
mov
mov
incl
incl
decl
dec
test
jg
cmpl
je
push
call
pop
xor
inc
lea
call
ret
mov
mov
mov
test
je
mov
mov
jmp
mov
cmpl
je
movb
xor
mov
mov
inc
inc
cmp
je
mov
movsbl
cmp
jg
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
push
mov
push
call
pop
pop
test
jne
add
jmp
mov
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
push
push
call
pop
pop
test
jne
add
mov
movb
jmp
add
test
je
mov
jmp
mov
test
je
cmp
je
movzbl
mov
mov
testb
je
cmp
jbe
mov
inc
cmpb
je
mov
mov
incl
mov
decl
jmp
mov
mov
mov
mov
incl
inc
mov
decl
mov
test
jne
jmp
incl
jmp
mov
dec
je
dec
je
dec
je
dec
jne
movb
jmp
movb
jmp
movl
movb
jmp
sub
je
sub
je
sub
je
dec
je
sub
jne
mov
dec
dec
je
dec
dec
jne
movb
jmp
movb
jmp
mov
cmpl
jg
mov
jmp
mov
cmp
jne
cmpl
jbe
mov
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
decl
jmp
cmpl
jbe
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
mov
test
jne
mov
mov
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
jmp
mov
dec
je
dec
je
jmp
movl
movb
mov
test
je
pushl
pushl
pushl
pushl
mov
mov
call
add
test
jne
xor
jmp
mov
mov
movzbl
mov
mov
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
mov
decl
mov
mov
test
jne
jmp
push
mov
push
mov
test
push
mov
jne
mov
mov
mov
test
je
test
push
push
mov
jbe
mov
mov
test
je
cmp
je
mov
movzbl
testb
je
cmpl
jbe
inc
cmpb
je
mov
mov
incl
decl
mov
mov
mov
incl
inc
decl
jmp
inc
xor
cmpb
jne
inc
inc
push
pushl
mov
pushl
lea
push
lea
call
add
test
je
inc
cmpl
ja
cmpl
jbe
mov
movb
mov
sub
jmp
cmpl
jne
decl
mov
movb
xor
pop
pop
pop
leave
ret
push
mov
call
mov
cmp
je
call
pushl
pushl
pushl
pushl
pushl
push
call
add
pop
ret
push
pushl
pushl
pushl
pushl
call
add
ret
mov
ret
push
mov
push
push
test
movzwl
movzwl
mov
mov
jne
or
leave
ret
push
push
lea
push
push
xor
push
inc
push
call
mov
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
push
push
pushl
or
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
add
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
or
lea
push
push
pushl
push
call
mov
or
lea
push
push
push
push
call
add
or
mov
mov
pop
pop
leave
ret
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
ret
cmpl
push
je
push
push
call
mov
test
pop
pop
jne
xor
inc
pop
ret
call
test
je
push
call
push
call
pop
pop
jmp
mov
mov
jmp
andl
movl
xor
pop
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
push
push
push
push
xor
cmp
push
jne
cmp
jne
mov
cmp
je
cmp
jne
mov
cmp
je
push
call
pushl
call
pop
pop
mov
mov
mov
mov
jmp
push
push
call
mov
cmp
pop
pop
je
mov
push
pop
mov
push
rep
call
xor
cmp
pop
mov
jne
push
call
pop
xor
inc
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
xor
inc
jmp
mov
movzwl
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
je
push
call
pop
or
push
call
pushl
call
pop
pop
mov
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
mov
mov
mov
mov
mov
mov
mov
mov
test
je
cmpl
jne
mov
cmp
je
push
call
pushl
call
pop
pop
mov
mov
mov
mov
mov
mov
mov
movl
xor
pop
pop
pop
leave
ret
xor
cmp
je
push
push
mov
cmp
jl
cmp
jg
sub
mov
inc
cmp
jne
pop
pop
ret
cmp
jne
mov
lea
mov
mov
mov
cmp
jne
jmp
push
mov
test
je
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
mov
mov
cmp
je
cmp
je
push
call
pop
pop
ret
push
mov
push
push
push
xor
cmp
push
jne
cmp
jne
mov
mov
movl
mov
jmp
push
push
call
mov
cmp
pop
pop
je
push
call
mov
cmp
pop
mov
jne
push
call
pop
jmp
mov
cmp
je
push
call
cmp
pop
mov
jne
push
call
push
call
pop
jmp
mov
movzwl
lea
push
push
push
push
call
mov
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
or
lea
push
push
push
push
call
add
or
je
push
call
push
call
pushl
call
add
xor
inc
jmp
mov
jmp
mov
cmp
jl
cmp
jg
sub
mov
inc
cmpb
jne
jmp
cmp
jne
mov
lea
mov
mov
mov
cmpb
jne
jmp
push
pop
mov
mov
rep
andl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
mov
mov
je
cmp
push
push
jne
movzwl
push
push
push
push
call
add
test
jne
push
call
mov
mov
movl
call
mov
movl
call
cmp
pop
mov
je
cmp
je
cmp
je
mov
xor
mov
mov
mov
inc
cmp
jl
lea
push
pushl
call
test
je
cmpl
ja
movzwl
cmp
mov
jle
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
mov
movb
movzbl
inc
cmp
jle
inc
inc
cmpb
jne
xor
push
push
push
lea
push
push
pushl
mov
push
call
add
test
je
lea
andw
cmpl
jle
cmpb
je
lea
mov
test
je
movzbl
movzbl
cmp
jg
lea
movw
movzbl
inc
inc
inc
cmp
jle
mov
inc
inc
cmpb
jne
push
lea
push
push
call
mov
add
mov
mov
mov
xor
pushl
call
pop
mov
pop
pop
jmp
mov
pushl
call
push
call
pop
xor
pop
inc
jmp
movl
mov
mov
xor
mov
pop
call
leave
ret
mov
ret
call
mov
cmp
je
call
mov
ret
call
mov
cmp
je
call
mov
ret
call
mov
cmp
je
call
add
ret
xor
ret
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
push
mov
xor
push
xor
inc
cmp
jl
push
push
test
je
mov
add
cltd
sub
mov
mov
sar
lea
pushl
mov
pushl
call
test
pop
pop
jne
mov
add
mov
jmp
jge
dec
mov
jmp
lea
cmp
jle
pop
pop
xor
test
sete
pop
mov
pop
ret
orw
call
mov
mov
ret
push
mov
sub
mov
push
mov
test
mov
je
cmpb
je
push
push
call
test
pop
pop
je
push
push
call
test
pop
pop
jne
push
lea
push
push
jmp
push
lea
push
push
pushl
call
test
je
lea
push
call
pop
mov
pop
call
leave
ret
xor
mov
cmp
je
inc
inc
cmp
jb
xor
inc
ret
xor
ret
push
mov
push
push
push
push
xor
pop
mov
lea
cltd
sub
sar
mov
imul
mov
cmp
je
jae
lea
jmp
lea
cmp
jle
push
pushl
pushl
pushl
call
pop
pop
pop
pop
ret
mov
dec
je
dec
dec
je
sub
je
sub
je
sub
je
dec
je
dec
dec
jne
imul
add
jmp
imul
mov
jmp
imul
mov
jmp
imul
add
jmp
imul
add
jmp
imul
add
jmp
imul
add
test
je
cmp
jl
mov
lea
push
push
push
call
xor
add
movb
inc
jmp
xor
jmp
inc
cmp
jl
cmp
jg
add
jmp
cmp
jl
cmp
jg
add
add
movsbl
shl
add
mov
test
jne
ret
xor
mov
inc
cmp
jl
cmp
jle
cmp
jl
cmp
jg
inc
jmp
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
push
call
test
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
call
leave
ret
push
mov
sub
mov
mov
push
lea
push
mov
and
push
or
push
call
test
je
lea
call
cmp
je
cmpl
je
push
pushl
call
mov
pop
mov
call
cmp
pop
jne
xor
jmp
xor
inc
mov
call
leave
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
push
push
lea
push
pushl
call
test
pop
pop
mov
mov
jne
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
je
lea
push
pushl
call
test
pop
pop
jne
orw
mov
jmp
testb
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
pushl
orl
mov
call
cmp
pop
jne
mov
jmp
testb
jne
push
call
test
pop
je
orl
mov
mov
mov
and
cmp
je
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
andl
xor
inc
jmp
lea
push
pushl
call
pop
xor
test
pop
jne
orb
cmp
jne
cmp
je
pushl
call
cmp
pop
jne
push
jmp
cmp
jne
mov
cmp
je
push
lea
push
pushl
call
add
test
jne
push
push
call
test
pop
pop
je
orb
cmp
jne
mov
mov
shr
not
and
pop
pop
mov
pop
call
leave
ret
push
mov
sub
mov
mov
push
mov
call
mov
push
lea
push
mov
neg
sbb
and
add
push
push
call
test
jne
and
inc
jmp
lea
push
pushl
call
test
pop
pop
jne
cmp
jne
push
jmp
cmpl
jne
mov
test
je
push
lea
push
pushl
call
add
test
jne
push
push
call
test
pop
pop
je
orl
mov
mov
mov
shr
not
and
mov
pop
call
leave
ret
pushl
call
sub
neg
pop
sbb
push
inc
push
mov
call
testb
jne
andl
ret
pushl
call
pushl
sub
neg
sbb
inc
mov
call
sub
neg
sbb
andl
inc
cmpl
pop
pop
mov
je
movl
jmp
mov
call
mov
push
push
call
mov
test
je
test
je
test
jne
andl
ret
pushl
call
sub
neg
sbb
inc
pop
mov
je
movl
jmp
mov
call
mov
push
push
call
testb
jne
andl
ret
push
xor
cmp
push
jne
cmpl
jne
mov
mov
jmp
movl
mov
cmp
je
lea
cmp
mov
mov
mov
je
cmp
je
push
push
push
call
mov
mov
add
cmp
mov
je
cmp
je
cmp
je
cmp
je
call
jmp
call
cmp
jne
push
push
push
call
add
test
je
mov
cmp
je
cmp
je
call
jmp
call
jmp
cmp
je
cmp
je
call
jmp
call
cmp
jne
xor
jmp
push
lea
call
mov
cmp
je
movzwl
push
call
test
je
push
pushl
call
test
je
mov
cmp
mov
je
mov
mov
mov
mov
mov
cmp
je
cmpw
jne
push
push
call
pop
pop
jmp
push
push
push
push
call
test
je
push
lea
push
push
pushl
call
test
je
push
add
push
push
call
add
xor
inc
jmp
xor
pop
pop
pop
ret
int3
int3
int3
int3
mov
test
je
mov
push
push
mov
mov
or
and
je
test
je
mov
cmp
jne
add
add
sub
je
mov
mov
cmp
jne
mov
mov
cmp
jne
add
add
sub
jne
pop
pop
ret
mov
and
shr
je
repz
je
mov
mov
cmp
jne
cmp
jne
shr
shr
cmp
jne
cmp
mov
sbb
pop
sbb
pop
ret
test
je
mov
mov
cmp
jne
sub
je
cmp
jne
sub
je
and
and
cmp
jne
sub
pop
pop
ret
push
push
call
xor
cmp
jne
lea
push
xor
inc
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
test
je
andl
lea
mov
add
and
call
mov
mov
mov
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
test
jne
push
push
call
pop
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
cmpl
je
push
call
pop
mov
jmp
mov
cmp
jne
mov
mov
test
jne
mov
push
call
pop
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
mov
pushl
pushl
pushl
pushl
push
call
mov
test
je
push
call
pop
mov
lea
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
jecxz
mov
mov
mov
xor
repnz
neg
add
mov
mov
repz
mov
xor
cmp
ja
je
sub
not
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
or
sub
add
mov
cmp
je
cmp
je
cmp
jne
xor
mov
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
xor
cmp
setne
lea
push
pushl
call
mov
mov
cmp
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
mov
cmp
je
testb
je
cmp
je
cmp
jg
pushl
pushl
push
pushl
pushl
pushl
call
jmp
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
mov
orl
mov
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
pushl
push
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
cmp
je
pushl
call
pop
cmp
je
pushl
call
pop
mov
jmp
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
pushl
call
add
mov
cmp
je
push
push
pushl
push
pushl
pushl
call
mov
mov
cmp
je
mov
add
and
call
mov
mov
mov
push
push
push
call
add
jmp
xor
inc
ret
mov
call
xor
xor
orl
cmp
jne
pushl
call
pop
mov
cmp
je
pushl
push
push
call
add
movl
pushl
push
pushl
pushl
pushl
pushl
call
mov
cmp
jne
xor
jmp
pushl
pushl
lea
push
push
pushl
pushl
call
add
mov
neg
sbb
neg
jmp
mov
cmp
je
push
call
pop
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
cmp
je
pushl
call
pop
mov
lea
call
ret
mov
push
mov
lea
xor
cmp
jb
cmp
jae
xor
inc
mov
mov
pop
ret
push
mov
push
mov
push
pushl
pushl
call
add
test
je
lea
push
push
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
test
je
incl
lea
push
pushl
pushl
call
add
pop
pop
ret
mov
push
mov
mov
add
push
mov
shr
mov
lea
or
mov
mov
shr
shl
or
pop
mov
mov
pop
ret
mov
mov
mov
push
push
mov
mov
shr
shl
or
mov
mov
shl
shr
or
shr
pop
mov
mov
pop
ret
push
mov
sub
mov
push
mov
xor
mov
mov
cmp
push
push
movl
mov
mov
mov
jbe
mov
mov
lea
movsl
movsl
push
movsl
call
push
call
lea
push
push
call
push
call
mov
movsbl
andl
andl
mov
lea
push
push
call
add
incl
decl
jne
xor
cmp
jne
mov
mov
addl
mov
shr
mov
mov
mov
shr
shl
or
shl
cmp
mov
mov
je
mov
mov
jmp
push
call
addl
pop
test
je
mov
mov
pop
pop
mov
pop
call
leave
ret
push
mov
sub
mov
push
mov
mov
xor
xor
mov
push
mov
mov
mov
mov
mov
mov
push
mov
mov
and
xor
and
and
cmp
lea
mov
jae
cmp
jae
cmp
ja
cmp
ja
xor
jmp
test
mov
jne
incl
xor
test
jne
cmp
jne
cmp
jne
jmp
xor
cmp
jne
incl
test
jne
cmp
jne
cmp
jne
mov
mov
mov
jmp
mov
lea
mov
movl
mov
add
cmpl
jle
add
mov
mov
lea
mov
mov
mov
mov
movzwl
movzwl
imul
mov
add
push
push
pushl
call
add
test
je
mov
incw
addl
subl
decl
jne
addl
incl
decl
cmpl
jg
addl
cmpw
jle
testb
jne
lea
push
call
addl
cmpw
pop
jg
cmpw
jg
addl
cmpw
jge
mov
neg
movzwl
add
testb
je
incl
lea
push
call
dec
pop
jne
cmpl
je
orb
cmpw
ja
mov
and
cmp
jne
cmpl
jne
andl
cmpl
jne
andl
cmpw
jne
incl
movw
jmp
incw
jmp
incl
jmp
incl
mov
cmp
jae
mov
mov
mov
mov
mov
mov
or
mov
jmp
neg
sbb
andl
and
add
andl
mov
mov
pop
pop
pop
call
leave
ret
push
mov
sub
mov
push
mov
xor
sub
cmp
mov
je
jge
negl
mov
sub
cmp
jne
mov
mov
cmp
je
push
push
mov
sarl
and
add
cmp
je
lea
lea
cmpw
jb
lea
movsl
movsl
movsl
decl
lea
push
pushl
call
pop
pop
xor
cmp
jne
pop
pop
mov
pop
call
leave
ret
push
mov
push
push
push
mov
mov
test
mov
mov
je
test
jne
xor
test
je
test
mov
je
mov
and
mov
mov
mov
and
or
test
mov
mov
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
mov
testw
push
je
mov
mov
lea
mov
mov
sub
dec
dec
cmp
mov
jle
push
push
push
call
mov
jmp
cmp
je
mov
sar
mov
mov
and
lea
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
mov
push
pop
push
lea
push
push
mov
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
mov
pop
pop
leave
ret
push
mov
push
push
mov
mov
test
mov
je
test
jne
test
je
andl
test
je
mov
and
mov
mov
mov
andl
andl
and
or
test
mov
jne
cmp
je
cmp
jne
push
call
test
pop
jne
push
call
pop
testw
push
je
mov
mov
lea
mov
mov
sub
dec
test
mov
jle
push
push
push
call
mov
jmp
cmp
je
mov
sar
mov
mov
and
lea
lea
jmp
mov
testb
je
push
push
push
call
add
mov
mov
mov
jmp
xor
inc
push
lea
push
push
call
add
mov
cmp
pop
je
orl
jmp
mov
and
jmp
or
mov
or
pop
pop
pop
ret
push
mov
mov
push
xor
cmp
jne
xor
jmp
mov
cmp
jne
mov
cmp
ja
mov
xor
inc
jmp
lea
push
push
pushl
mov
push
push
lea
push
push
pushl
call
cmp
je
cmp
je
call
movl
or
pop
pop
ret
call
mov
cmp
je
call
pushl
pushl
push
call
add
ret
push
call
pop
ret
push
mov
mov
call
mov
push
push
push
xor
push
pushl
mov
call
or
add
cmp
mov
je
push
push
pushl
call
add
cmp
je
push
mov
sub
test
jle
mov
push
lea
push
push
call
push
pushl
call
add
mov
cmp
mov
jge
mov
push
lea
push
pushl
call
add
cmp
je
sub
test
jg
jmp
call
cmpl
jne
call
movl
or
pushl
pushl
call
pop
pop
jmp
jge
push
pushl
pushl
call
pushl
call
add
push
call
mov
neg
sbb
neg
dec
cmp
jne
call
movl
call
mov
call
mov
push
pushl
pushl
call
add
mov
pop
jmp
mov
mov
pop
pop
call
leave
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
push
call
pop
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
push
push
call
mov
xor
cmp
jne
pushl
call
pop
jmp
mov
cmp
jne
push
call
pop
jmp
cmpl
jne
mov
cmp
ja
push
call
pop
mov
push
call
pop
mov
cmp
je
cmp
ja
push
push
push
call
add
test
je
mov
jmp
push
call
pop
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
call
mov
push
push
call
add
cmp
jne
cmp
jne
xor
inc
mov
add
and
mov
push
push
pushl
call
mov
cmp
je
mov
dec
mov
cmp
jb
mov
push
push
pushl
call
push
pushl
call
add
orl
call
cmp
jne
cmp
jne
xor
inc
add
and
mov
push
push
push
pushl
call
mov
mov
cmp
jne
cmp
je
push
call
pop
test
jne
jmp
xor
mov
mov
push
call
pop
ret
xor
cmp
ja
cmp
jne
xor
inc
push
push
push
pushl
call
cmp
jne
cmp
je
push
call
pop
test
jne
xor
call
ret
push
push
call
cmpl
jne
push
call
pop
andl
mov
push
call
pop
mov
test
je
mov
sub
mov
jmp
mov
orl
call
cmpl
jne
pushl
push
pushl
call
mov
mov
call
ret
mov
push
call
pop
ret
push
push
call
xor
mov
push
call
pop
mov
mov
mov
mov
orl
orl
push
call
pop
mov
mov
cmp
je
cmpb
je
mov
cmp
je
push
push
call
pop
pop
test
je
mov
cmp
je
push
call
pop
push
call
inc
push
call
pop
pop
mov
cmp
je
push
push
call
pop
pop
orl
call
push
push
pushl
call
add
mov
movb
add
cmpb
jne
movl
inc
push
call
pop
imul
mov
mov
mov
cmp
je
cmp
jl
cmp
jg
inc
jmp
mov
cmp
je
push
call
pop
mov
push
call
cmp
je
xor
inc
mov
mov
imul
mov
cmp
je
mov
imul
add
mov
cmp
je
mov
cmp
je
mov
sub
imul
mov
jmp
mov
mov
lea
push
push
push
pushl
push
push
push
push
mov
call
test
je
cmp
jne
mov
movb
jmp
mov
movb
lea
push
push
push
pushl
push
push
push
push
call
test
je
cmp
jne
mov
movb
jmp
mov
movb
push
lea
push
call
pop
pop
jmp
mov
xor
push
call
pop
ret
cmpb
jne
inc
push
call
pop
imul
add
jmp
cmp
jg
inc
mov
cmp
jge
cmpb
jne
inc
push
call
pop
add
jmp
cmp
jg
inc
mov
cmp
jge
cmp
je
negl
movsbl
mov
cmp
je
push
push
pushl
call
add
mov
movb
jmp
mov
movb
call
ret
push
mov
push
push
push
push
push
mov
mov
mov
push
cltd
pop
idiv
cmpl
jne
test
mov
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
shl
mov
jmp
mov
shl
mov
mov
lea
cltd
lea
mov
idiv
push
pop
inc
push
mov
mov
cltd
idiv
mov
pop
push
sub
mov
dec
mov
cltd
idiv
mov
mov
imul
add
add
lea
cltd
pop
idiv
mov
imul
sub
add
cmp
jg
lea
jmp
add
cmpl
jne
cmpl
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
mov
jmp
mov
mov
cmp
jle
sub
jmp
test
jne
mov
push
cltd
pop
idiv
test
jne
lea
cltd
mov
idiv
test
je
mov
jmp
mov
add
imul
add
imul
cmpl
jne
add
mov
imul
add
mov
mov
jmp
add
mov
add
imul
add
mov
jns
add
dec
jmp
mov
cmp
jl
sub
inc
mov
mov
mov
pop
pop
pop
leave
ret
push
xor
cmp
jne
xor
pop
ret
push
xor
push
mov
inc
cmp
jne
cmp
je
cmp
je
cmp
movzwl
movzwl
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
jmp
movzwl
push
push
push
push
push
movzwl
push
call
movzwl
movzwl
add
cmp
push
movzwl
push
movzwl
push
jne
movzwl
push
push
movzwl
push
push
push
movzwl
push
call
add
jmp
movzwl
push
push
push
push
push
jmp
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
push
push
push
push
push
push
push
push
push
push
pop
push
pop
call
add
mov
mov
cmp
mov
jge
cmp
jl
cmp
jg
cmp
jle
cmp
jge
mov
pop
pop
pop
ret
xor
jmp
cmp
jl
cmp
jg
cmp
jle
cmp
jl
mov
imul
add
imul
add
imul
cmp
jne
xor
cmp
setge
mov
jmp
xor
cmp
setl
jmp
push
push
call
xor
cmp
jne
push
call
pop
mov
cmp
jne
call
incl
orl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
call
orl
call
call
ret
push
call
pop
ret
push
push
call
push
call
pop
andl
mov
call
mov
orl
call
mov
call
ret
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
mov
mov
mov
or
je
mov
add
mov
add
cmp
je
sub
cmp
sbb
and
add
add
xchg
sub
cmp
sbb
and
add
add
cmp
je
sbb
sbb
movsbl
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
push
pop
call
mov
push
lea
push
push
call
test
je
mov
lea
push
call
mov
mov
lea
not
and
sub
mov
dec
neg
sbb
and
add
imul
add
cmp
mov
jb
cmp
je
mov
mov
push
lea
push
pushl
call
test
je
mov
add
test
je
testb
mov
mov
je
xor
inc
jmp
cmp
jae
xor
jmp
cmp
jae
mov
push
push
pushl
pushl
call
mov
jmp
mov
dec
neg
sbb
and
lea
push
inc
push
pushl
pushl
call
lea
pop
pop
pop
leave
ret
push
mov
sub
mov
push
push
xor
cmpl
mov
push
jne
push
lea
push
mov
push
pushl
mov
pushl
call
mov
add
cmp
jne
call
cmp
jne
push
push
push
pushl
pushl
call
mov
add
cmp
je
push
call
mov
cmp
pop
je
push
push
push
pushl
movl
pushl
call
mov
add
cmp
je
push
call
cmp
pop
mov
mov
jne
cmp
je
push
call
pop
or
mov
pop
pop
pop
call
leave
ret
push
push
push
call
add
cmp
je
push
call
pop
jmp
cmp
jne
push
push
mov
push
pushl
pushl
call
add
test
je
mov
mov
mov
movzbl
push
call
test
pop
je
mov
mov
imul
add
sub
inc
inc
cmp
mov
jl
xor
jmp
push
mov
push
push
call
mov
cmp
je
call
mov
cmpl
jne
pushl
pushl
call
pop
pop
jmp
push
mov
push
mov
movzbl
push
push
call
mov
movzbl
push
push
inc
call
add
mov
mov
inc
test
je
cmp
je
pop
sub
pop
pop
leave
ret
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
lea
lea
movzbl
inc
jmp
cmp
pop
pop
jne
neg
ret
jmp
push
push
push
push
call
mov
cmp
je
call
mov
mov
cmpl
movzbl
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
inc
jmp
movzbl
inc
cmp
mov
je
cmp
jne
movzbl
inc
xor
xor
cmp
jl
cmp
jg
sub
jmp
or
cmp
je
push
push
push
push
call
mov
mov
mov
movzbl
cltd
add
adc
mov
mov
inc
jmp
pop
pop
pop
cmp
pop
jne
neg
adc
neg
ret
push
mov
push
push
call
mov
cmp
je
call
mov
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
add
jmp
push
mov
push
mov
movzbl
push
push
call
mov
movzbl
push
push
inc
call
add
inc
decl
mov
je
cmpl
je
cmp
je
mov
pop
sub
pop
jmp
xor
pop
leave
ret
cmpl
je
movb
inc
neg
push
mov
xor
divl
cmp
jbe
add
jmp
add
mov
inc
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
ret
push
mov
cmpl
mov
jne
test
jge
push
push
jmp
push
pushl
mov
call
mov
pop
pop
pop
ret
push
mov
xor
cmpl
jne
cmp
jge
inc
mov
push
pushl
mov
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
call
mov
pop
pop
ret
push
mov
push
push
push
mov
push
xor
cmp
mov
mov
push
je
movb
inc
neg
adc
neg
mov
mov
pushl
pushl
push
push
call
cmp
mov
mov
mov
jbe
add
jmp
add
mov
inc
test
ja
jb
test
ja
movb
dec
mov
mov
mov
dec
mov
inc
cmp
jb
pop
pop
pop
leave
ret
push
mov
xor
cmpl
jne
cmp
jg
jl
cmp
jae
xor
inc
push
pushl
mov
pushl
pushl
call
mov
pop
ret
push
mov
mov
push
pushl
pushl
pushl
call
mov
pop
ret
push
mov
sub
mov
push
mov
lea
push
push
pushl
movb
call
test
jne
or
jmp
lea
push
call
pop
mov
call
leave
ret
push
push
call
mov
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
je
lea
push
push
mov
call
test
je
cmpl
jne
lea
push
pushl
call
test
je
cmpl
jne
movl
cmp
je
cmp
je
mov
jmp
pushl
call
pop
mov
inc
mov
jmp
mov
cmp
jne
push
push
push
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
lea
push
push
push
call
add
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
push
push
call
pop
pop
mov
cmp
jne
xor
jmp
movl
push
push
pushl
pushl
push
pushl
call
test
je
cmp
je
push
push
pushl
pushl
push
push
push
pushl
call
test
je
mov
mov
jmp
cmp
jne
push
push
push
push
push
push
push
pushl
call
mov
cmp
je
push
push
call
pop
pop
mov
cmp
je
push
push
push
push
push
push
push
pushl
call
cmp
jne
pushl
call
pop
mov
jmp
cmpl
je
mov
mov
jmp
mov
cmp
je
push
call
pop
mov
lea
mov
call
call
ret
mov
mov
sar
and
lea
lea
mov
shl
movzbl
push
mov
and
cmp
jne
mov
lea
andb
jmp
cmpl
jne
mov
lea
orb
neg
sbb
and
add
pop
ret
call
movl
or
pop
ret
push
push
call
mov
cmp
jae
mov
sar
lea
mov
and
lea
shl
mov
testb
je
push
call
pop
andl
mov
testb
je
pushl
push
call
pop
pop
mov
jmp
call
movl
orl
orl
call
mov
jmp
mov
push
call
pop
ret
call
movl
or
call
ret
cmpl
push
mov
jne
xor
pop
ret
test
push
push
jne
cmp
je
call
test
jne
mov
test
je
mov
test
je
push
call
pop
mov
jmp
push
call
cmp
pop
jbe
mov
cmpb
jne
push
push
push
call
add
test
je
add
mov
test
jne
xor
pop
pop
pop
ret
mov
lea
jmp
push
push
call
push
call
pop
andl
pushl
call
pop
mov
orl
call
mov
call
ret
push
call
pop
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzwl
and
ret
call
mov
cmp
je
call
cmpl
jle
push
pushl
push
call
add
ret
mov
mov
movzbl
and
ret
cmpl
sbb
neg
ret
mov
and
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
pushl
call
test
pop
jne
cmpl
je
ret
xor
inc
ret
push
push
call
xor
xor
inc
cmp
jne
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
jne
pushl
pushl
pushl
pushl
call
jmp
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
cmp
jne
xor
jmp
mov
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
xor
inc
cmp
jne
pushl
call
pop
mov
cmp
je
mov
pushl
push
pushl
pushl
call
test
je
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
push
call
pop
mov
lea
call
ret
push
push
call
xor
cmp
jne
push
push
xor
inc
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
mov
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
push
push
pushl
pushl
call
mov
mov
cmp
jne
xor
jmp
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
xor
orl
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
movl
push
push
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
push
push
push
pushl
call
mov
cmp
je
push
call
pop
mov
jmp
pushl
pushl
pushl
pushl
call
lea
call
ret
mov
add
ret
push
mov
push
push
mov
push
mov
cmpl
push
je
cmpl
je
cmp
jbe
xor
inc
cmp
jae
cmp
jle
push
push
push
call
add
jmp
mov
movzbl
and
test
je
mov
mov
sar
movzbl
testb
je
push
mov
mov
movb
pop
jmp
mov
movb
mov
push
pushl
lea
push
push
push
lea
push
push
pushl
call
add
test
je
cmp
jne
movzbl
jmp
movzbl
xor
mov
or
jmp
cmp
jl
cmp
lea
jle
mov
pop
pop
pop
leave
ret
call
mov
cmp
je
call
pushl
push
call
pop
pop
ret
push
mov
push
mov
lea
cmp
mov
ja
mov
movzwl
jmp
push
mov
sar
push
mov
movzbl
testb
pop
pop
je
push
mov
mov
movb
pop
jmp
mov
xor
movb
inc
push
pushl
pushl
lea
push
push
lea
push
push
call
add
test
jne
leave
ret
movzwl
and
leave
ret
call
mov
cmp
je
call
pushl
pushl
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
push
mov
call
mov
cmp
je
call
cmpl
jne
xor
pop
ret
pushl
pushl
pushl
pushl
pushl
push
pushl
call
add
test
jne
mov
pop
ret
add
pop
ret
push
mov
push
push
push
push
xor
push
mov
mov
mov
cmp
je
mov
push
push
push
push
push
push
push
push
call
cmp
mov
je
push
call
cmp
pop
mov
je
push
push
pushl
push
push
pushl
push
push
call
test
je
lea
push
push
call
test
pop
pop
jge
cmp
je
pushl
call
pop
mov
add
mov
cmp
jne
xor
pop
pop
pop
leave
ret
pushl
call
pop
or
jmp
mov
test
je
dec
cmpb
je
inc
test
jne
dec
mov
sub
dec
ret
push
push
call
mov
mov
xor
xor
inc
cmp
jne
push
mov
push
push
push
push
push
call
test
je
mov
jmp
call
cmp
jne
movl
cmp
jle
pushl
mov
call
pop
mov
mov
cmp
jle
push
mov
call
pop
mov
mov
push
pop
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
mov
jmp
cmp
jg
cmp
jle
push
pop
jmp
lea
push
pushl
call
test
je
cmp
jle
cmp
jb
lea
cmpb
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
add
cmpb
jne
jmp
cmp
jle
cmp
jb
lea
cmpb
je
mov
test
je
mov
mov
cmp
jb
cmp
jbe
add
cmpb
jne
jmp
push
push
pushl
pushl
push
pushl
call
mov
mov
cmp
je
mov
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
andl
orl
mov
xor
inc
xor
mov
cmp
jne
lea
push
call
pop
mov
cmp
je
mov
push
push
pushl
pushl
push
pushl
call
test
je
push
push
pushl
pushl
push
pushl
call
mov
mov
test
je
movl
lea
add
and
call
mov
mov
mov
orl
jmp
xor
inc
ret
mov
call
xor
orl
mov
mov
test
jne
lea
push
call
pop
mov
test
je
movl
push
push
pushl
pushl
push
pushl
call
test
je
push
push
push
pushl
pushl
pushl
call
mov
cmpl
je
push
call
pop
cmpl
je
pushl
call
pop
mov
jmp
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
pushl
call
pop
mov
cmp
jne
xor
jmp
cmp
je
push
push
lea
push
pushl
push
push
call
add
mov
test
je
push
push
lea
push
pushl
push
push
call
add
mov
test
jne
push
call
pop
jmp
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
test
je
push
call
pushl
call
pop
pop
mov
lea
mov
call
call
ret
push
mov
jmp
push
push
pushl
call
add
test
jne
mov
mov
cmp
je
test
je
add
mov
test
jne
mov
sub
pop
sar
neg
ret
mov
sub
pop
sar
ret
push
mov
push
xor
test
mov
jne
leave
ret
cmpl
je
add
inc
cmpl
jne
push
lea
push
push
call
mov
test
pop
mov
jne
push
call
pop
mov
mov
jmp
push
call
mov
add
add
mov
pop
test
jne
and
mov
pop
pop
leave
ret
push
mov
sub
mov
push
xor
cmp
push
mov
jne
or
jmp
push
mov
cmp
mov
je
push
push
call
cmp
pop
pop
mov
je
cmp
je
xor
cmp
mov
sete
cmp
mov
jne
mov
call
mov
cmp
jne
cmp
je
cmp
je
call
test
je
or
pop
pop
pop
leave
ret
cmp
je
xor
jmp
push
call
cmp
pop
mov
je
mov
cmp
jne
push
call
cmp
pop
mov
je
mov
mov
sub
pushl
mov
call
mov
cmp
pop
jl
cmp
je
lea
pushl
call
cmp
pop
jne
mov
mov
mov
mov
jmp
mov
mov
inc
add
cmp
jne
mov
shl
push
pushl
call
cmp
pop
pop
je
jmp
cmp
jne
cmp
jge
neg
lea
push
pushl
call
cmp
pop
pop
je
mov
lea
mov
mov
mov
mov
mov
cmp
je
pushl
call
inc
inc
push
call
mov
cmp
pop
pop
je
pushl
push
call
mov
sub
pop
add
pop
mov
mov
inc
neg
sbb
not
and
push
push
call
test
jne
orl
push
call
pop
cmp
je
pushl
call
pop
mov
jmp
pushl
call
mov
pop
mov
jmp
push
mov
test
je
push
call
inc
push
call
test
pop
pop
je
push
push
call
pop
pop
pop
ret
xor
pop
ret
push
mov
call
mov
cmp
je
call
cmpl
jne
pop
jmp
mov
push
push
jmp
movzbl
testb
je
inc
mov
test
je
movzwl
movzbl
shl
or
cmp
jne
lea
jmp
movzwl
cmp
je
inc
movzbw
test
jne
mov
movzwl
sub
neg
sbb
not
and
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
lea
pop
ret
lea
lea
xor
mov
push
mov
shl
mov
test
je
mov
add
cmp
je
test
je
test
jne
or
push
mov
shl
push
or
mov
mov
mov
mov
xor
add
add
xor
xor
xor
xor
add
and
jne
and
je
and
jne
and
jne
pop
pop
pop
xor
ret
mov
cmp
je
test
je
cmp
je
test
je
shr
cmp
je
test
je
cmp
je
test
je
jmp
pop
pop
lea
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
lea
pop
pop
pop
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
sbb
add
cwtl
xchg
add
xchg
add
pop
xchg
add
dec
xchg
add
ds
add
cs
add
push
xchg
add
or
add
cli
xchg
add
call
xchg
add
ret
add
add
mov
add
add
decb
add
and
add
ss
add
inc
nop
add
push
nop
add
outsb
nop
add
mov
add
mov
nop
add
nop
add
fcoms
add
clc
nop
add
add
add
sbb
add
dec
xchg
add
pop
xchg
add
jo
add
adcb
add
xchg
add
ret
add
xchg
add
loop
add
lock
add
cld
xchg
add
or
add
xor
add
inc
xchg
add
push
xchg
add
bound
add
mov
add
mov
add
int3
xchg
add
out
add
xchg
add
sbb
add
dec
xchg
add
pop
xchg
add
push
xchg
add
mov
add
mov
add
enter
fcoms
add
out
xchg
add
cli
xchg
add
adc
add
and
add
cmp
add
add
add
add
pop
add
addb
add
cmp
add
aaa
add
orb
add
adc
add
or
add
fmuls
add
mov
add
mov
popl
add
xor
add
add
add
add
add
add
add
add
or
push
xor
pop
jb
or
fisttpll
cmp
int3
mov
sub
movsl
jo
in
ret
aaa
adcl
adc
leave
int3
add
add
push
int3
jmp
and
and
loopne
and
add
arpl
add
shl
inc
add
mov
cmp
int
add
mov
arpl
or
xchg
add
add
in
daa
call
mov
add
out
and
sbb
nop
add
add
cmovle
add
mov
jge
sbb
clc
les
push
adc
out
jb
pop
dec
pop
push
mov
add
inc
push
addr16
lahf
sub
movsb
scas
or
add
lret
dec
arpl
mov
sub
jo
sub
pop
add
ret
and
add
js
mov
mov
nop
adc
sbb
call
add
es
dec
xlat
fstps
dec
out
mov
call
add
fisttpll
jbe
testb
push
lock
les
add
adc
and
std
cli
add
cmc
inc
or
add
shrl
call
adcb
mov
test
gs
push
cmp
aaa
pop
dec
or
mov
xor
and
fldl
call
sbb
add
xchg
mov
in
mov
in
scas
rorl
jb
mov
add
jae
nop
lahf
js
sbb
leave
hlt
arpl
add
add
push
xchg
add
and
arpl
iret
int3
int3
xchg
sub
jae
add
push
add
mov
int3
shr
push
leave
mov
mov
ret
fildl
ror
int3
add
mov
cmp
aam
jb
jbe
or
add
enter
add
xchg
jae
jp
mov
add
inc
lcall
nop
fnstsw
add
je
sub
inc
loop
mov
fisttpll
fidivs
xor
lahf
pop
int3
dec
sahf
and
xor
add
add
ss
out
mov
and
lret
sub
jg
nop
ss
bnd
add
cld
xor
les
add
clc
fidivs
addl
pop
insl
sbb
add
cmp
xlat
rcrl
inc
mov
int3
int3
mov
jno
call
cmp
nop
or
add
sub
mov
out
inc
mov
add
negb
mov
and
loope
add
or
out
fwait
add
lods
sub
roll
cmp
fiadds
jmp
jns
addl
int3
movsl
xor
sub
cwtd
shll
out
std
add
cs
out
dec
add
add
cmp
out
cld
jns
data16
std
out
daa
mov
test
std
add
std
add
shl
fwait
out
out
xor
add
jns
std
mov
dec
add
imul
mov
add
popa
mov
mov
pop
xchg
xor
mov
inc
pop
xor
filds
div
nop
mov
cmc
cmpsb
mov
decb
add
cmp
and
orb
pop
scas
pop
dec
jb
jecxz
xor
outsb
jg
pop
int3
or
or
cmp
into
pop
nop
bound
push
nop
inc
lods
push
addb
push
aad
ds
jnp
arpl
dec
add
jae
cmpl
inc
cmove
push
movsl
test
jnp
and
inc
or
repz
int3
int3
enter
add
lahf
lods
addr16
int3
cmp
popa
add
jb
mov
stos
inc
xor
sbb
lods
stc
sub
mov
int3
mov
mov
jb
mov
adc
mov
ds
or
add
in
test
or
je
insb
or
fnstenv
jo
cmpsl
or
add
in
adc
mov
call
lds
xor
add
adc
jl
inc
out
mov
stos
push
lea
stos
clc
sti
or
add
imul
add
xchg
lcall
dec
call
imul
leave
and
roll
fisubs
dec
cli
nop
jb
sahf
xor
dec
add
add
or
mov
lods
sub
mov
test
xor
std
push
gs
int3
popf
jbe
jge
add
and
add
enter
inc
jne
test
and
jo
mov
and
out
xchg
stos
int3
mov
add
scas
xor
sub
es
ss
mov
sub
add
pop
add
sbb
fistl
mov
pop
add
mov
fwait
test
popf
adc
pop
push
orl
dec
push
flds
leave
test
ja
inc
jb
mov
mov
xchg
sbb
add
aas
pop
int3
sbb
aad
and
add
cmp
fisttps
push
and
jns
pop
inc
cltd
in
add
pop
mov
jmp
mov
inc
mov
add
push
and
push
add
push
out
adc
lcall
pop
adc
add
aam
adcb
mov
xorl
daa
sti
mov
test
mov
sub
int3
mov
add
jl
sbb
int3
jge
jl
add
aad
add
cmp
loop
add
add
mov
mov
into
js
xchg
add
pop
inc
mov
add
mov
or
lods
push
lock
xor
test
xor
add
popf
add
mov
in
jge
enter
push
mov
mov
add
dec
mov
push
mov
push
nop
add
sti
push
inc
out
int3
add
pop
pop
rolb
xor
hlt
stc
addb
add
add
or
pop
iret
sbb
pop
jo
lret
lret
add
sbb
iret
jne
fildl
and
fwait
jo
dec
addr16
jno
add
movsl
add
dec
xor
je
add
int3
insb
and
mov
add
push
hlt
pushf
loop
int3
or
popf
data16
gs
pop
clc
add
xlat
mov
mov
push
lahf
add
cmpb
cmp
add
fsubrl
add
cmp
push
leave
int3
mov
mov
fiaddl
out
scas
mov
add
inc
add
call
mov
ljmp
rclb
lods
int3
xor
push
in
cwtl
add
jno
lods
dec
add
in
push
pop
pop
push
aaa
and
notb
aaa
inc
lea
mov
add
in
lret
mov
adc
xor
incb
xchg
cmp
ss
cmp
add
lock
sub
faddp
lret
cmp
js
inc
add
jge
add
mov
nop
jp
stos
push
and
nop
jb
gs
movl
int3
and
pop
shlb
nop
int3
fucomi
cmp
fldl
pop
xchg
insb
repz
add
adc
push
or
dec
and
int3
fs
aas
and
cmpsl
nop
mov
cmp
add
xor
sub
add
sub
add
jle
sub
addb
repz
jbe
add
add
cld
out
sar
add
add
out
add
add
cmp
jle
out
add
pop
cmp
add
add
add
add
add
dec
xor
out
dec
dec
cld
or
stos
out
cs
out
cld
cld
add
dec
shl
dec
aaa
cmp
stos
dec
outsb
out
lahf
xor
incl
out
out
cld
add
faddl
out
out
cld
loopne
out
out
add
out
add
add
out
movntq
out
loopne
adc
add
mov
movsb
push
fisubrl
addb
movsb
cmp
lds
push
nop
add
stc
mov
int3
push
or
aas
pop
outsl
mov
mov
rorb
fucomp
add
jmp
mov
xchg
add
adcl
imul
mov
and
push
pop
push
sbb
inc
lea
mov
inc
sbbb
add
inc
jecxz
insl
scas
mov
add
jb
push
das
rolb
pop
nop
nop
jl
divb
add
das
adc
push
mov
add
mov
fsubrs
add
add
popf
or
add
pop
xchg
cmp
lcall
cwtl
clc
add
inc
inc
loop
jo
mov
mov
add
push
aam
int3
xor
mov
nop
sub
lret
nop
add
les
lods
inc
xchg
stos
fsubs
mov
cld
adc
in
jmp
push
aas
mov
mov
mov
pop
mov
repnz
mov
jmp
sbb
nop
pop
imul
inc
lcall
xor
call
sbb
imulb
add
add
insb
add
popf
mov
incb
xchg
jecxz
test
adcb
nop
add
adcl
add
in
loop
add
out
add
or
push
push
mov
pop
jle
mov
mov
int3
imul
or
mov
and
popa
add
add
mov
rolb
stc
mov
rol
adc
push
ret
and
jmp
cmp
jo
test
add
pusha
scas
pop
cmpsb
mov
pop
pop
cld
add
cmp
out
aas
test
cld
stos
xor
sahf
call
addr16
xor
ret
add
stos
mov
repz
dec
aad
lea
ret
jg
xchg
insb
add
cmp
sbb
push
lock
jmp
add
or
xchg
dec
add
test
push
or
scas
addb
sbb
in
add
inc
inc
add
pusha
loop
add
adc
mov
les
in
int3
out
cmp
and
nop
jae
aas
mov
add
pop
and
add
es
ret
addb
sbb
int3
and
jno
stc
mov
jl
add
add
movsb
fdivl
notb
mov
xchg
and
push
adc
das
std
sub
mov
mov
movsb
mov
call
jns
call
jo
mov
popa
mov
orl
loope
add
add
sbb
xlat
add
xchg
fst
sbb
pop
mov
xchg
xchg
push
push
int3
int3
add
jno
and
pop
sub
dec
mov
mov
int3
nop
sbb
ror
cmp
rolb
bound
subb
enter
add
fwait
cli
addr16
int3
call
add
inc
jns
add
lock
mov
std
cmpsb
add
dec
icebp
cmp
xor
int3
inc
pop
in
jl
inc
int3
rorb
add
clc
jo
bound
mov
xchg
imul
sbb
loope
lea
add
push
jb
xchg
push
add
stos
int3
mov
pop
test
decl
pop
add
inc
mov
lcall
call
lea
hlt
call
lods
mov
jbe
push
add
jg
add
dec
pop
pop
add
adc
xchg
jb
or
fimuls
pop
inc
mov
add
mov
cmp
popf
jo
xchg
movsl
sub
jge
mov
mov
mov
xchg
inc
mov
xor
push
add
jl
dec
mov
xchg
call
inc
lea
mov
nop
xor
mov
mov
push
pop
aaa
inc
roll
int3
and
call
jle
add
and
inc
adc
inc
jo
lcall
data16
scas
out
ss
add
inc
idivb
add
fwait
jne
inc
xchg
pop
addl
data16
and
sub
mov
lcall
scas
push
mov
sub
cmc
or
hlt
mov
mov
xor
fadds
inc
xchg
mov
sub
outsl
jne
dec
or
lods
ss
sub
inc
inc
scas
bound
push
das
inc
lods
jbe
sahf
fadds
add
xorl
and
jl
jle
inc
mov
movsb
int3
fst
adc
mov
mov
xor
mov
call
add
push
xchg
add
test
add
add
sbb
mov
mov
roll
clc
lea
lahf
int3
int3
fldt
daa
sbb
int3
add
cmp
dec
lahf
add
ret
dec
inc
pop
jnp
add
loop
adc
nop
movsb
xchg
clc
add
adc
add
ror
cmp
sbb
js
nop
mov
add
cmp
add
and
jne
inc
js
or
nop
fs
add
fucom
incl
cmpsl
out
out
sub
incl
mov
rol
add
add
add
jns
out
out
mov
dec
out
add
push
adc
cmp
cs
mov
cltd
cmp
dec
out
cld
shlb
loopne
sar
out
add
mov
add
mov
cld
out
out
add
out
xchg
daa
add
mov
adc
jmp
pop
add
dec
loop
nop
mov
and
jmp
add
inc
add
add
xor
xor
and
mov
imul
mov
testl
add
out
add
repz
cmc
out
push
xlat
pop
add
pop
pop
mov
fwait
sbb
out
and
dec
dec
jne
call
inc
jb
add
iret
xlat
pop
jo
test
cmp
into
bts
nop
bound
jg
inc
and
xor
inc
fiadds
add
popf
in
pop
imul
nop
std
add
dec
mov
cmc
jo
fidivrs
add
xor
inc
or
out
add
aam
inc
xor
mov
inc
xor
repz
push
imull
mov
inc
ror
shll
mov
add
dec
inc
dec
add
add
out
int3
add
ret
sbb
mov
mov
push
mov
sti
out
fildl
add
add
push
mov
shll
movl
movsl
addl
mov
add
fisubrs
jecxz
int3
dec
inc
testl
add
mov
xchg
adc
jb
lock
mov
cli
js
ljmp
sahf
out
mov
or
hlt
jo
mov
add
lahf
imul
mov
mov
jp
add
aas
cli
scas
std
cwtl
add
pop
lahf
pop
mov
mov
adc
inc
add
in
or
addr16
add
ljmp
push
movsb
inc
add
pop
ret
nop
jo
jo
mov
jb
dec
je
pop
pop
aam
outsl
add
pop
adc
jo
mov
jo
jne
dec
nop
mov
and
out
add
orb
pop
ficomps
fdivs
imul
jno
and
int3
add
lods
add
xchg
cmpsl
push
add
shll
rdtsc
nop
fstl
nop
dec
fdivr
xchg
xor
push
int3
mov
add
filds
jo
or
nop
add
and
test
add
in
sub
pop
fwait
stos
mov
lret
inc
add
mov
es
xor
add
jno
push
dec
int3
int3
mov
shlb
inc
push
pop
sub
jbe
addb
aad
cltd
and
add
xor
xor
mov
and
mov
int3
call
jnp
sahf
int
xor
test
je
add
int3
push
or
repz
xor
nop
xchg
dec
inc
xor
lods
addb
js
pop
add
out
adcw
jno
int3
push
hlt
je
jb
push
push
add
dec
lods
loop
mov
cmp
popa
nop
jnp
int
fildll
jge
add
pop
jo
or
cmp
cld
inc
filds
add
scas
jno
mov
add
inc
jge
sub
or
les
and
sub
rcr
add
mov
mov
add
dec
ss
xorb
jmp
lea
push
fisubrl
fimull
inc
rorl
add
lock
int3
add
add
sub
add
sbb
mov
fwait
mov
int3
and
add
push
inc
inc
add
aaa
shrb
nop
mov
adc
add
cmp
or
or
add
add
xchg
imul
inc
add
daa
ficoml
xor
jbe,pt
xor
inc
sub
add
cli
adcb
add
inc
aam
add
push
mov
cmp
mov
add
dec
add
cmp
sbb
adcl
es
stc
push
bnd
mov
loop
xchg
nop
ja
mov
add
testb
mov
ficompl
add
arpl
xor
add
sbb
add
xor
sbb
add
movsb
fisubrl
add
add
sbb
jp
add
add
dec
jo
cli
int3
int3
mov
add
aam
in
add
insb
cs
add
call
add
sub
fdivrp
lret
add
add
adc
inc
add
xchg
add
pusha
addb
push
repz
popa
cmp
jg
mov
aaa
je
cltd
lea
push
rcrb
jmp
add
mov
test
nop
nop
mov
aad
xchg
add
sub
orl
mov
outsl
cmp
into
fiadds
add
add
or
jb
jno
xchg
loope
inc
dec
jb
mov
add
pushf
add
push
inc
loope
int3
insl
sub
jne
popa
jo
adc
call
roll
int3
mov
mov
and
bnd
add
aaa
mov
pop
stc
cltd
decl
popl
add
cli
push
int
ds
add
negb
sub
rolb
fcmovne
nop
cmp
jo
ret
jle
add
out
fdivr
cmp
out
sar
cmp
out
add
out
daa
add
clc
mov
stos
or
jmp
std
ret
pop
and
lret
mov
mov
inc
add
xlat
outsl
inc
add
mov
stc
dec
das
iret
jecxz
mov
aaa
dec
lods
iret
add
inc
add
push
iret
mov
mov
add
addr16
div
insl
into
mov
test
and
outsb
lret
mov
and
jno
into
add
lods
and
inc
sbb
mov
add
add
rolb
add
add
call
adc
int3
les
std
xor
std
nop
nop
xchg
inc
cwtl
test
testb
pop
nop
inc
xchg
sti
or
scas
and
cli
mov
icebp
xchg
add
add
decl
int3
pop
sbb
add
add
xor
insb
jp
add
add
sub
inc
rcll
mov
cmpsb
adc
jbe
add
fldl
nop
jge
xchg
filds
add
cmpsl
or
cmp
inc
add
pop
daa
push
daa
inc
inc
pusha
or
add
lea
inc
rorb
pop
mov
inc
sub
inc
add
xchg
sbb
int3
aam
cmp
call
int
int3
rol
adc
add
mov
lea
mov
jnp
nop
bound
movsl
add
add
js
cwtl
int3
and
cmp
int3
inc
fsubrs
in
pop
jp
int3
mov
lea
addr16
mov
add
movsb
test
scas
int3
mov
add
adc
nop
push
ja
xchg
dec
nop
nop
mov
add
int3
jno
adc
pop
push
mov
cmp
call
sub
cmp
push
out
mov
jmp
icebp
sbb
insb
mov
sbb
fldenv
mov
or
add
inc
xchg
pop
mov
dec
int3
call
popf
add
outsb
add
mov
add
incl
inc
dec
add
cltd
out
cs
out
loop
dec
add
std
jns
out
imul
add
out
out
std
cld
mov
std
add
std
std
cmp
fdivrl
and
loopne
mov
jo
loope
and
add
or
ret
adc
lock
testb
adc
nop
dec
cwtl
lds
add
mov
push
add
cmp
mov
xor
int3
aaa
das
sbb
inc
mov
push
out
lea
lahf
xor
std
push
lea
cs
xor
pusha
inc
lcall
jns
add
adc
add
dec
std
cmp
insl
nop
int3
out
jmp
adc
mov
add
mov
push
dec
push
pop
jo
lds
jo
imul
sbb
clc
mov
add
adc
int3
mov
xchg
pop
call
push
add
push
loope
cmpsb
sti
add
nop
mov
es
idivl
repz
jno
lock
add
mov
or
bound
jecxz
mov
aaa
cmp
stos
mov
in
add
mov
inc
xchg
ss
jb
mov
sbb
int3
adc
xor
fs
dec
rdmsr
mov
mov
rorb
add
aaa
lea
es
push
ret
es
int3
mov
js
push
lds
jmp
jne
inc
add
int3
cltd
xchg
cmp
int
mov
add
aas
pop
cmovno
mov
add
push
mov
add
lock
hlt
mov
mov
add
jl
les
mov
xchg
inc
xorb
mov
addb
cli
pop
sub
hlt
add
adc
rorb
into
test
test
cmpsl
mov
add
int3
jno
mov
nop
adc
int3
inc
je
call
rorl
xor
add
add
nop
adc
push
fstpl
add
rsm
cmp
or
add
mov
in
int3
inc
test
clc
lea
jno
jmp
push
add
inc
add
or
shrb
add
pop
adc
nop
add
out
roll
cmpsl
insb
pop
cli
fdivr
xchg
lea
sub
xchg
add
mov
cmp
sub
cmp
gs
call
int3
mov
jbe
nop
fildl
or
mov
xchg
in
inc
jno
inc
cmc
aam
dec
fisttpll
int3
xor
outsl
mov
add
xchg
fimull
insb
out
add
stos
sub
inc
inc
adcb
xor
out
mov
jns
add
and
nop
ds
mov
std
mov
int3
lods
das
and
pop
add
dec
add
ds
or
xor
std
cmp
add
data16
add
cmp
add
sub
out
add
out
cld
sub
cld
call
mov
shlb
add
nop
mov
fidivs
int
add
mov
mov
sarb
push
or
popa
flds
cmp
sti
add
scas
xchg
std
add
int
jb
and
pop
xchg
sbbl
stos
jmp
xor
mov
xor
xchg
inc
lahf
xchg
into
rcr
add
loop
xor
nop
add
shl
inc
xor
outsl
add
push
mov
dec
adc
add
clc
nop
add
xchg
cmpsl
push
add
mov
pop
adc
fcom
inc
xor
dec
jp
cli
inc
add
sahf
mov
inc
pop
clc
sarl
add
dec
and
jb
dec
addr16
aas
xchg
std
add
mov
jo
movsb
icebp
loop
int3
push
xor
add
cmp
add
mov
mov
nop
cmp
jo
or
lret
xchg
lods
test
and
mov
xorl
add
sti
or
sub
lret
nop
inc
sub
add
add
outsl
ss
int3
psrad
lea
mov
clc
adc
add
mov
add
cmp
ja
jb
and
sbb
add
fld
lahf
cmp
movsb
dec
divl
je
imul
adcb
inc
add
sbb
add
cmpsl
sbbb
xor
add
add
add
dec
dec
cwtl
add
sarl
roll
mov
mov
call
jo
icebp
mov
add
add
dec
inc
jnp
add
sahf
aad
pop
pop
stc
jb
jle
pop
test
add
or
ret
mov
add
add
adc
add
cmp
pop
cmpsl
and
xlat
or
sub
movsb
add
std
jno
ljmp
inc
push
add
mov
add
icebp
in
dec
in
add
or
push
popl
xor
ret
or
sti
inc
cmp
in
addr16
push
in
mov
add
adc
repz
add
int3
cmp
mov
sbb
pusha
mov
imul
add
jns
add
mov
repnz
xor
lods
sub
pop
jle
add
add
or
in
insb
add
int3
mov
push
inc
add
inc
push
call
insl
adc
das
xchg
ret
aaa
mov
aam
jl
mov
sub
lea
xchg
and
insb
loop
cltd
int3
pop
cmovno
daa
test
add
sbb
mov
mov
mov
fwait
and
sahf
imul
mov
cmpsl
push
xchg
test
jmp
add
xchg
pop
lcall
cmp
add
adc
scas
add
and
mov
add
xchg
shr
add
sbb
imul
sub
mov
cmpb
in
xor
xchg
lea
inc
mov
add
push
movsb
nop
je
jnp
sahf
sub
add
jmp
inc
mov
inc
mov
cmp
outsl
pop
popf
add
push
in
mov
mov
lahf
sbb
scas
pop
mov
ret
nop
int3
sbb
cmp
lds
fdivrl
and
int3
inc
rorl
xchg
out
cmovs
rorb
jno
mov
aas
adc
js
int3
mov
leave
pop
loope
add
rcrl
fidivl
or
decb
and
addb
aam
int3
mov
out
add
adc
push
jo
push
add
xor
nop
js
jns
xchg
add
adc
in
shl
sbb
stc
mov
xchg
std
add
enter
jp
cmpsb
int3
sub
inc
dec
push
ja
add
icebp
adc
mov
sub
lock
mov
push
add
loopne
lret
addb
mov
les
pop
inc
add
int3
pop
sahf
mov
lea
add
add
mov
inc
inc
add
cmp
mov
fdivrs
into
pop
sub
cmp
mov
pop
into
icebp
testl
orl
jns
jbe
lea
jb
inc
xchg
bnd
push
jmp
cli
std
or
inc
xchg
dec
xchg
orb
js
call
xchg
inc
add
push
push
sbb
call
add
sub
insl
add
test
cmpb
roll
stos
push
push
bound
jmp
pop
push
jo
icebp
int
push
add
out
add
add
mov
jmp
or
out
out
pop
out
insb
out
sar
cld
cmp
out
add
jmp
out
add
sub
cltd
rolb
cmp
out
test
sarl
jmp
add
rorw
mov
add
xchg
add
add
addr16
dec
insb
repz
and
add
mov
lock
cmp
add
pop
add
or
jo
cmpl
add
mov
add
push
inc
icebp
mov
lods
loope
call
popa
lahf
add
add
inc
sbbl
in
push
or
aad
roll
or
add
popa
loope
fcomps
lea
js
push
call
addb
push
add
push
add
add
pop
mov
inc
std
xchg
lcall
add
xor
jno
mov
jmp
add
mov
push
dec
pop
stos
nop
and
pop
aaa
scas
nop
nop
cli
test
lea
push
inc
add
cmp
mov
jmp
ljmp
mov
out
adc
fnstenv
add
add
int3
nop
jae
or
xor
dec
cwtl
mov
add
xor
lret
add
dec
add
add
add
or
add
pop
clc
mov
add
fldlg2
and
inc
add
les
cmpsl
inc
adc
nop
mov
aam
mov
nop
lcall
nop
sbb
lods
xchg
mov
inc
add
cmp
outsl
dec
jb
imul
movsb
mov
add
pop
adc
cmpsb
insb
push
stos
add
cmpsl
std
loopne
add
shl
cmpsb
push
add
je
xor
mov
jb
in
adc
mov
cmp
inc
insb
nop
mov
mov
imul
pop
adc
add
jo
mov
test
dec
add
push
add
int3
pop
pop
dec
mov
nop
int3
rcrb
jbe
inc
inc
call
add
adc
int3
mov
pop
push
ror
jo
test
inc
lea
cmc
push
popf
nop
push
pop
add
out
add
add
stc
pop
iret
push
mov
pop
scas
push
push
insl
nop
and
mov
bound
arpl
gs
add
and
pop
ret
jns
insl
inc
inc
lret
jp
dec
lea
lea
cmp
mov
shll
push
adc
pop
jge
or
roll
mov
add
rorl
xchg
fs
adc
mov
ds
dec
mov
pop
xchg
popa
push
leave
add
inc
mov
adc
lahf
mov
jo
pop
add
add
sub
add
movsl
ds
das
jns
fstpt
xor
add
inc
pop
sub
add
jae
sbb
stos
add
cmp
jo
mov
and
sbb
sbb
mov
pop
fcomps
mov
mov
push
fistl
jecxz
lea
ljmp
cmp
addb
call
dec
insl
je
fidivs
int3
enter
add
mov
add
nop
int3
scas
adc
mov
fs
push
mov
xchg
out
fnsave
std
add
sub
add
in
incl
dec
push
jb
adc
lock
int3
add
add
and
push
andb
jo
and
arpl
cmc
jo
adc
jg
jb
cmp
int3
dec
ds
mov
add
test
add
bound
xor
fwait
test
add
test
loop
add
outsb
cmp
mov
test
mov
fidivrl
scas
add
add
in
add
call
je
push
gs
jae
jp
imul
je
imul
out
push
fsub
out
pop
int3
addb
inc
xchg
add
sbb
add
jmp
jo
lret
call
aad
adc
mov
cmp
addr16
int
mov
int3
add
pusha
lods
shlb
add
add
repnz
dec
inc
and
sti
push
test
sub
ret
fldl
xor
incl
int3
in
mov
sub
jle
addb
push
cmp
add
cmp
and
and
jae
mov
imul
add
nop
add
pushf
cmp
adc
inc
arpl
divb
jns
cmp
popa
mov
xchg
cmp
int3
pop
jl
add
nop
nop
out
sub
adc
pop
fildl
out
pushf
nop
mov
push
mov
pop
and
imul
lret
add
jae
stos
add
add
xchg
add
pop
mov
add
sarb
inc
add
popa
add
add
mov
aas
nop
inc
inc
sub
or
iretw
inc
and
pop
cwtl
push
cmpsl
enter
loope
adc
sbb
inc
xor
add
and
scas
scas
mov
loop
aam
jo
xor
ret
sahf
add
add
sbb
push
nop
lret
mov
and
fnstenv
jo
mov
sti
lret
jae
nop
testb
jno
mov
adc
cmp
in
clc
add
jne
add
nop
hlt
sbb
add
stos
dec
add
nop
jo
pop
add
add
mov
lahf
aas
add
add
and
xchg
add
mov
pop
xchg
nop
dec
mov
mov
pusha
add
cmp
in
xor
fld
add
xadd
add
shlb
nop
adc
mov
inc
outsb
and
cmp
add
or
sub
fs
add
and
pop
add
and
xchg
xchg
int3
nop
xor
push
mov
sub
dec
leave
std
ja
and
mov
addr16
mov
jb
int3
add
scas
shlb
sti
mov
in
pop
testl
jo
mov
mov
add
add
or
inc
pop
push
in
mov
sbb
lock
fldl
int3
dec
xor
mov
addl
stc
inc
nop
sub
mov
or
testl
or
outsl
lahf
in
in
mov
call
push
add
push
mov
imul
sub
jecxz
aas
out
pop
mov
js
iret
add
sbb
int3
cmpsb
push
jecxz
pop
add
add
dec
cli
int3
mov
add
push
aaa
push
adc
frstor
add
cmp
inc
addb
add
out
out
out
add
add
add
addb
std
std
out
incl
std
cltd
lahf
test
out
out
jg
add
cltd
adc
jg
out
out
out
nop
fwait
add
mov
cld
out
add
std
out
add
test
pop
xor
out
fsub
add
incw
add
out
jns
jecxz
mov
add
cmp
out
fsub
loopne
out
data16
out
sub
out
in
pushf
inc
add
fbstp
add
mov
nop
add
arpl
add
inc
inc
lock
jb
jae
xchg
int3
or
add
mul
pop
nop
mov
lods
cmp
add
lods
xchg
mov
xor
xor
fucomp
mov
cwtl
stos
push
mov
add
pop
sub
dec
add
bound
pop
mov
add
aad
dec
repz
shlb
subb
nop
iret
imul
push
loope
and
nop
add
mov
int3
mov
inc
out
sahf
add
ds
jnp
sbb
jmp
jmp
nop
jle
adcb
and
pop
nop
mov
rcrb
mov
aam
lea
shrl
sub
add
es
cmc
sahf
into
cwtl
fs
inc
dec
int
cwtl
add
loopne
push
mov
int3
popf
add
sarl
ds
call
imul
pop
pop
filds
clc
push
mov
adc
add
loopne
arpl
add
cmpsb
push
bound
lcall
jo
int3
int3
mov
jae
and
push
int3
inc
mov
leave
dec
fimull
inc
add
or
add
mov
pop
call
popl
stos
jne
out
mov
mov
nop
add
call
cwtl
movl
pusha
adc
mov
jl
insb
inc
mov
int
lock
cmp
xlat
out
sbb
mov
xorb
pop
inc
mov
fmul
dec
cmp
lock
pusha
or
jne
int3
push
xchg
daa
mov
repnz
aam
lods
jnp
add
pop
fiadds
addb
test
or
fstl
add
push
dec
int3
or
int3
dec
fcompl
add
ja
add
lea
jo
xchg
push
scas
nop
lahf
dec
flds
pop
cmpsl
das
in
dec
call
add
add
add
addb
cmp
add
aam
test
addb
or
mov
add
adc
ss
push
int
add
jp
and
adc
in
jo
cmp
and
roll
daa
add
lds
inc
jp
pop
pop
popa
scas
cs
sbb
add
loope
xchg
int3
and
ret
add
outsl
xor
add
sti
add
gs
int3
sbb
test
mov
int3
push
pop
add
fsubrl
mov
add
mov
pushf
push
nop
add
nop
int3
push
cltd
add
hlt
add
adc
aam
add
ss
inc
lret
mov
add
mov
jb
dec
mov
ficomps
add
aad
int3
add
add
adc
mov
addb
lcall
pop
daa
add
inc
add
imul
pop
icebp
pop
cltd
mov
pop
and
inc
jle
xor
int3
and
push
xchg
jmp
clc
orb
inc
xchg
add
adc
mov
ja
add
call
lea
jo
dec
inc
pop
add
add
sub
xchg
mov
jo
jne
ret
add
stos
inc
loop
add
ja
fwait
test
cmc
movsl
add
mov
add
and
sar
jmp
lea
mov
add
cmp
xchg
mov
aad
in
jb
dec
test
and
add
or
add
add
mov
je
cmp
dec
pop
mov
push
and
shlb
int3
mov
inc
pop
jmp
add
int3
add
push
fiaddl
stos
sub
lahf
push
xchg
add
and
xchg
dec
mov
fsubr
add
mov
add
cmp
mov
inc
sub
add
fucomp
push
pop
int3
int3
dec
xlat
jmp
int3
idiv
roll
int3
nop
or
cmpsb
push
sbbb
stos
imul
test
icebp
and
out
xchg
add
push
cmc
orb
add
sub
jp
add
add
add
add
cs
sub
mov
push
lahf
cmp
xlat
sbb
ljmp
fnsave
inc
jmp
jo
xor
push
jo
add
hlt
int3
add
iret
shrb
inc
xchg
cli
and
nop
fisubl
sbb
xor
dec
mov
repz
jno
int3
les
add
cmpsb
rclb
xor
rolb
subl
insl
call
fildl
jb
les
add
loopne
mov
jo
add
xor
int
jb
or
pop
mov
mov
int
fldl
mov
out
lods
cmpsb
cwtl
add
inc
mov
sbb
fs
sti
add
pop
and
add
dec
jb
nop
push
dec
jo
dec
push
addb
sub
sbb
add
push
add
inc
jg
arpl
cmp
lcall
add
arpl
pop
leave
pusha
lds
sbb
push
iret
ret
je
std
ds
add
call
cltd
lods
nop
add
lods
mov
mov
jnp
add
dec
fisubs
mov
add
shrl
xor
inc
daa
movsb
in
mov
int3
mov
jno
or
nop
in
loop
add
out
add
aam
mov
in
mov
inc
test
add
out
xor
cld
add
imul
ja
jno
jb
addr16
addr16
popa
jbe
ja
jb
ja
jo
jb
ja
push
inc
fstpt
add
or
daa
call
mov
addb
call
add
inc
inc
push
decl
hlt
add
inc
out
out
lea
sarb
es
nop
lea
stc
pop
or
xor
outsl
nop
add
add
clc
stc
mov
fiaddl
add
ss
pop
jge
add
sbb
rcrb
push
xor
xchg
push
mov
or
xchg
lds
ljmp
xchg
stc
jo
add
and
mov
add
push
mov
push
stos
inc
int3
outsb
daa
int3
incl
mov
add
jp
add
cmp
jp
add
add
push
jno
sbb
or
sbb
jnp
pusha
adc
mov
mov
cmp
xlat
sub
int3
add
dec
jg
and
rcr
stc
xchg
int3
jb
pop
inc
dec
movl
ret
pop
mov
data16
xor
je
add
cld
scas
mov
cld
hlt
mov
mov
nop
test
int3
int3
mov
out
in
add
int3
std
mov
inc
inc
jmp
xor
out
add
pop
add
hlt
fsubp
stos
mov
int3
xchg
mov
and
sbb
add
and
mov
jp
add
enter
and
icebp
pop
add
out
cmpsb
addl
add
cld
fs
sub
nop
sub
out
int3
jb
bound
jo
push
sarb
pop
fadds
add
sbb
cwtl
movsl
nop
aaa
dec
jae,pt
das
xorb
ss
add
lahf
sbb
mov
jo
test
cmp
jp
add
testl
mov
add
sbb
fwait
loope
int3
inc
jo
gs
add
lcall
or
or
shr
xchg
insb
cs
adcb
int3
test
mov
add
scas
outsl
mov
add
je
add
push
nop
xor
mov
mov
mov
int3
add
cld
cs
call
and
xor
lea
push
add
adc
outsl
or
mov
outsl
add
mov
ret
dec
jb
into
jb
inc
std
popl
add
xchg
dec
rcrb
xchg
and
cmp
cltd
jno
mov
leave
in
rorl
call
or
sbb
addl
mov
jo
dec
imul
mov
pop
mov
inc
inc
sbb
jnp
mov
xchg
add
pop
call
aas
mov
dec
or
mov
lea
popa
push
test
xchg
stos
clc
test
sti
int3
loopne
ja
nop
pop
cld
pop
enter
int3
push
inc
int3
movsl
stc
nop
mov
int3
nop
lret
cltd
jmp
add
push
push
lock
sbb
push
push
push
jmp
add
dec
cmp
or
mov
call
dec
nop
mov
mov
mov
push
pop
sub
add
sbb
add
nop
andb
call
push
mov
jo
das
mov
adc
int3
ret
cmp
cmp
stc
jle
int3
add
addb
push
pop
nop
inc
fdivr
add
rclb
mov
inc
sbb
add
mov
lods
add
ja
cmp
sldt
test
xlat
mov
add
add
mov
jo
mov
data16
nop
loope
sbb
xor
lret
ljmp
cmp
imul
inc
dec
pop
insb
mov
std
adc
int3
mov
mov
add
adc
xchg
add
mov
aam
test
movsl
adc
add
or
sub
nop
pop
xchg
add
call
divb
fwait
int3
pushf
inc
leave
in
add
repz
faddl
mov
mov
int3
add
das
call
das
inc
add
jle
mov
std
and
rcll
int
or
pop
roll
jo
adc
test
inc
mov
add
dec
sbb
faddl
andb
cltd
cmpsl
xchg
mov
xlat
add
filds
fists
fdivl
and
push
add
add
cld
out
add
movl
and
jle
sbb
nop
jg,pn
out
cs
dec
incl
cmp
add
out
out
cmpsl
scas
mov
gs
jb
jno
imul
adc
add
dec
test
in
xchg
nop
js
sbb
mov
add
inc
xlat
add
daa
mov
xchg
add
mov
xchg
mov
jo
add
push
rclb
jae
add
and
inc
sti
pop
add
cmpsb
mov
lret
pushf
ja
repz
jnp
call
add
mov
pop
inc
mov
push
cli
rcrl
or
push
add
mov
push
lea
jg
repz
or
aas
add
mov
hlt
lods
add
mov
in
add
xor
xchg
mov
mov
add
scas
add
add
sub
sbb
mov
int3
ret
pop
int
fildl
enter
add
and
jo
mov
xchg
inc
sbbl
mov
add
out
mov
shlb
mov
jle
mov
fisubl
data16
mov
addr16
add
mov
inc
inc
mov
mov
lcall
test
nop
add
pusha
nop
pop
add
add
aam
add
push
cmpsb
nop
mov
int3
int3
xor
fistl
add
xor
dec
pop
or
mov
ss
in
shr
call
outsb
xchg
int3
nop
outsl
adcl
call
sarb
call
shll
mov
int3
hlt
rcrl
cmp
loopne
add
add
addl
shl
popa
xchg
xchg
das
fbstp
int3
xchg
inc
jae
adc
jge
ljmp
xor
orb
iret
int3
aad
mov
mov
ficoms
in
nop
pusha
movsb
jp
mov
repnz
lea
es
call
and
pop
mov
mov
mov
int3
inc
push
jo
nop
add
faddl
pop
or
sahf
add
sarl
xchg
dec
mov
jb
leave
icebp
add
pop
std
sti
ja
inc
stos
jmp
test
repz
add
sbb
add
add
mov
xlat
pusha
and
mov
push
nop
stos
cmp
call
add
jne
add
add
inc
lret
cltd
loopne
inc
xchg
int3
xor
push
and
sahf
xor
push
add
fcompl
mov
and
aam
add
test
sbb
xchg
xchg
das
jo
std
lea
not
cmp
add
dec
sub
in
dec
nop
pop
xor
loopne
add
add
out
pop
out
jmp
add
incl
add
inc
add
fadds
add
out
add
out
nop
inc
call
add
cld
cmp
cmp
std
out
out
out
dec
add
cltd
add
xor
lds
adc
ds
add
and
pushf
nop
push
add
inc
pop
arpl
mov
cmp
fs
test
add
sub
aas
int3
lea
aaa
mov
or
std
and
xlat
sbb
mov
adc
out
add
int3
or
inc
or
add
sub
in
inc
call
call
add
rorl
dec
int3
add
add
pop
add
jno
or
add
das
push
into
notl
or
jmp
jle
aam
mov
add
inc
movsb
pop
add
xchg
stos
dec
jo
mov
xor
jo
pop
adc
and
cmp
int3
mov
scas
mov
mov
mov
jmp
fwait
inc
xchg
add
jb
pop
push
test
iret
push
mov
inc
push
pop
inc
add
orb
jns
lret
testb
jb
add
pusha
rdpmc
add
aam
loope
jp
add
inc
mov
add
mov
in
call
mov
inc
pop
cmp
loopne
and
es
scas
aaa
nop
add
nop
sbb
out
add
add
xchg
into
push
add
shll
nop
or
add
loopne
add
mov
int3
adc
stos
nop
mov
inc
daa
cmp
int3
aad
cmovb
inc
adc
sub
cmpsb
pop
xor
mov
scas
call
add
das
dec
push
push
and
fcoms
jmp
add
clc
clc
int3
fs
sub
or
pushf
xchg
dec
sub
add
mov
add
sub
add
clc
nop
add
inc
add
xchg
loope
ja
xor
add
inc
stos
dec
incb
xor
add
int3
mov
or
push
push
jo
or
push
popf
mov
daa
notb
jl
leave
sub
nop
mov
dec
mov
data16
arpl
shlb
push
std
add
adc
test
sldt
bswap
sub
add
imul
scas
ss
mov
jle
xchg
add
add
js
inc
test
loop
sbb
imul
mov
jno
std
push
jb
gs
jo
fildl
mov
int3
cli
pop
in
cs
and
out
in
lea
xor
pop
lds
fldenv
mov
mov
stc
pop
repnz
pushf
add
adc
repnz
add
push
xor
sahf
add
xor
mov
or
pop
push
xchg
add
sahf
scas
outsl
sbb
add
test
cmpsb
cltd
add
add
cltd
or
sbb
nop
mov
inc
add
rorl
mov
adc
fisttpl
sahf
jecxz
int3
dec
int3
mov
loope
mov
je
add
xchg
iret
arpl
add
adc
lds
nop
mov
dec
mov
dec
outsb
dec
add
loop
scas
jb
push
add
cmp
lock
sbb
xor
jl
sbb
add
xchg
shrb
daa
mov
jns
add
and
mov
push
loope
xor
pop
jo
cmpsl
push
daa
cmp
add
xor
inc
dec
mov
je
gs
call
nop
mov
adc
call
cli
testl
cmp
scas
rorb
xor
mov
add
nop
inc
ds
out
add
dec
lods
jg
ljmp
dec
lea
aaa
jns
mov
dec
and
stc
sub
and
cmc
jecxz
add
jl
leave
cmpsl
pop
pop
sbb
leave
cmpsl
int3
add
cld
jae
int3
sub
call
pop
jmp
jmp
getsec
add
add
pop
out
add
out
sarl
dec
out
out
out
out
out
faddl
cld
dec
out
xorb
out
mov
mov
in
push
pusha
add
rorb
shll
xchg
arpl
call
mov
pop
add
add
int3
inc
aam
orb
nop
mov
xchg
push
add
and
mov
lea
ret
sub
mov
mov
and
lret
nop
add
dec
inc
pusha
add
adc
cmp
enter
add
lea
jne
scas
jb
mov
add
mov
adc
ljmp
add
aas
popf
insb
test
add
adcb
push
sti
mov
ljmp
mov
add
movsb
xchg
inc
aaa
scas
add
inc
nop
daa
insl
pop
add
adc
fsubs
push
add
ss
fcmove
imul
xor
aas
inc
sti
mov
loope
jo
loopne
arpl
cmp
add
cmp
mov
pop
stos
rcll
add
push
mov
inc
add
inc
pop
lret
int3
dec
jae
nop
insb
movsb
rol
js
add
lret
pop
and
lods
xor
add
pusha
popf
jl
add
cmpsb
fbstp
ljmp
jle
xchg
push
int
and
idivb
lcall
int3
mov
add
inc
and
jp
pop
adc
int3
add
pop
adc
aas
test
iret
mov
cwtl
jmp
mov
jb
jl
fimuls
in
call
mov
aaa
jp
add
lea
mov
roll
lcall
push
seto
add
in
mov
or
push
jl
add
fldt
popa
addb
mov
dec
jle
mov
dec
or
int3
cli
cld
aad
add
or
int3
add
out
adcb
mov
add
add
data16
add
loopne
data16
add
cli
orl
lock
subb
xor
xor
cmp
xchg
jo
inc
int3
incl
sub
lea
mov
out
loop,pt
lea
data16
mov
test
arpl
inc
dec
mov
sbb
xchg
int3
cmp
add
cmp
xor
fiadds
jo
mov
cmc
jg
lahf
pop
cld
in
jo
xor
jo
inc
jb
fisubrs
add
nop
add
inc
les
mov
push
push
out
add
mov
mov
mov
mov
mov
add
mov
int3
cmc
nop
call
mov
sbb
rcll
jp
call
and
fsubl
arpl
add
dec
out
int3
test
sbb
iret
cmp
add
fstpl
mov
add
repnz
test
arpl
int3
push
es
iret
add
les
rcll
loopne
pop
vandpd
add
cwtl
sti
js
add
adc
cmp
pop
repz
mov
int3
int3
mov
push
push
fisttpll
xor
jns
push
mov
add
add
mov
mov
fsubp
ror
cmpsl
ljmp
out
sub
int3
sub
mov
add
out
cwtl
stos
in
jb
gs
xor
dec
adc
pop
mov
mov
or
add
cmp
addl
test
or
mov
cmp
shlb
mov
stc
int3
jo
jae
cmp
int3
sbb
or
or
push
iret
add
xlat
push
jae
nop
add
adc
add
xchg
in
jecxz
jno
add
jae
mov
add
mov
mov
lods
mov
mov
jmp
add
inc
add
add
in
mov
pop
pushf
cs
mov
iret
xchg
push
adc
dec
add
mov
xchg
orb
movb
push
add
in
int3
int3
add
cli
shl
add
iret
add
add
inc
cld
inc
xor
roll
xchg
xor
popa
push
movsb
inc
pop
in
call
ret
dec
mov
int3
js
dec
jae
dec
enter
xor
pop
sbb
jo
adc
pop
inc
lcall
in
cmc
add
lea
jnp
mov
jo
add
mov
pop
mov
loop
add
lret
fdivrl
orb
int3
add
mov
daa
add
daa
incb
leave
add
dec
pushf
das
incb
scas
sarb
inc
nop
add
stc
loop
stc
int3
add
mov
xor
int
test
xor
mov
adc
mov
mov
int3
add
nop
add
aaa
lcall
sub
popl
mov
insl
aam
adcb
pop
dec
push
add
popl
or
add
xor
enter
int3
mov
adc
inc
and
cmp
add
jl
xchg
insb
sub
lds
repz
mov
add
nop
jo
xchg
das
jne
mov
test
mov
inc
wrmsr
inc
fldl
shll
dec
add
shlb
mov
stos
loopew
in
int3
lcall
xor
popl
and
or
in
popa
mov
pop
imul
loopne
add
add
imul
stc
lock
add
adc
xor
add
inc
sbb
mov
rorb
dec
std
mov
test
imul
in
add
mov
jnp
iret
std
int3
int3
xchg
pop
sub
sbb
nop
pop
add
cmp
nop
mov
lock
cwtl
lea
mov
sbb
sbb
loop
loop
sub
mov
outsl
push
jo
adc
xor
mov
xor
push
test
call
int3
mov
call
dec
shrb
add
dec
outsl
aad
jbe
add
ljmp
mov
cmpsl
adc
and
mov
andb
lods
out
add
add
inc
mov
push
inc
xchg
add
mov
push
insb
lea
pop
int3
pop
ficomps
lods
and
int3
int3
loopne
rcll
sbbb
int3
nop
and
int3
adc
into
leave
nop
adc
mov
mov
andb
idivl
movb
xchg
mov
addr16
sub
add
or
mov
jb
int3
push
pop
mov
rsqrtps
add
and
loopne
xchg
inc
adc
add
add
mov
mov
add
mov
incb
jo
xor
and
mov
and
jl
add
lahf
negb
and
add
cli
push
icebp
sbb
in
mov
add
jo
sub
add
jae
mov
loop
add
addr16
mov
xchg
nop
xchg
mov
cmpsl
mov
add
push
addb
ss
int3
loope
cld
sbb
int3
add
mov
cmp
mov
mov
int3
jne
xor
mov
mov
into
cmp
add
jo
xchg
rorl
mov
popf
lret
shl
sbb
jo
aam
add
lea
mov
xor
enter
add
add
gs
push
jmp
mov
xor
incb
add
cs
data16
add
push
outsb
mov
scas
mov
jne
shrl
jo
lcall
fistpll
dec
jge
mov
loop
jb
pop
outsl
iret
sbb
add
mov
loope
add
jmp
clc
and
jle
mov
inc
add
icebp
add
pusha
int3
mov
lods
dec
mov
add
movsb
out
sbb
cmp
std
int3
add
add
add
pop
shlb
add
xchg
add
mov
lock
cmp
aas
add
cmc
data16
nop
jb
xchg
cmp
int3
out
shl
test
xorb
int3
jnp
rorb
or
jle
fidivs
nop
add
sbbl
dec
mov
mov
sbb
daa
or
scas
xchg
scas
fildl
gs
shrb
add
sbb
jo
into
add
bnd
aad
sbb
xchg
inc
and
dec
shl
or
add
adc
cmp
test
pop
mov
add
lds
out
xor
mov
js
test
jo
add
jo
push
pop
mov
out
pop
test
mov
add
add
out
sbb
enter
inc
ja
mov
add
ss
add
out
test
icebp
add
jg
jo
jns
call
xchg
and
jecxz
mov
enter
pop
adcb
dec
mov
int3
inc
sbbb
nop
jmp
add
out
adc
scas
pop
out
loopne
test
out
out
add
cmp
std
std
add
stos
cmp
dec
add
xor
cld
incb
cld
add
lahf
or
out
imul
out
mov
xor
add
jle
pop
push
jb
fcomi
jl
dec
pop
insb
je
jge
push
cmp
nop
push
nop
fmuls
nop
sbb
lea
dec
out
mov
add
push
pop
call
xchg
sub
xor
jo
sub
pop
jns
int3
add
sahf
cmp
adc
movb
loopne
add
lock
test
jge
jmp
jle
dec
add
rorl
gs
in
nop
mov
lea
test
call
call
les
push
mov
leave
addb
jle
inc
int3
add
nop
add
pop
pop
push
ja
add
mov
xchg
add
jg
mov
cmpsl
subl
out
mov
add
test
push
into
push
int3
int3
sbb
xchg
nop
stos
push
dec
mov
int3
add
jg
add
xor
mov
call
iret
data16
jno
add
and
or
xor
mov
lea
sbb
mov
into
aaa
int3
js
add
jmp
add
int3
xor
jp
xchg
test
outsb
inc
mov
add
mov
inc
add
fcomps
and
add
dec
add
sbb
inc
inc
cwtl
mov
push
push
or
sub
int3
int3
loope
nop
mov
xchg
add
adc
add
ret
pop
add
dec
mov
mov
add
jp
iret
mov
js
call
add
or
lret
nop
add
cltd
cli
add
pop
cmp
nop
jo
cmp
adc
add
and
stos
inc
in
inc
int3
lea
dec
dec
pop
add
nop
pop
and
push
mov
cmpsb
jae
idiv
add
je
jne
add
lret
fwait
popf
in
add
pop
and
fisubrl
add
rorb
add
xchg
sub
ja
aad
add
jno
mov
pop
rorb
incb
sub
cltd
loope
push
add
out
add
dec
loopne
sbb
xor
add
push
dec
add
fistpl
nop
pop
mov
add
add
xor
add
imul
je
mov
push
rol
mov
xor
or
add
in
sbb
int3
repz
lahf
arpl
mov
in
add
jne
in
dec
add
or
push
dec
es
lea
sub
sub
sbbb
jo
add
mov
add
aas
cs
test
pop
daa
push
int3
jmp
fs
es
xor
lret
cmp
mov
fcompp
sbb
xchg
aad
inc
jg
je
jo
adc
jo
add
fldcw
hlt
add
sti
out
and
cmp
mov
bound
lods
pop
pop
add
add
nop
std
fcoml
cmp
jmp
out
and
cmp
std
cld
dec
adc
cld
mov
out
add
add
jae
std
add
add
out
loopne
cs
std
add
add
add
scas
out
and
std
sbb
add
rcl
mov
cmp
out
add
icebp
popl
jp
mov
fldl
add
and
sarb
insb
mov
jecxz
loope
lret
aad
add
xor
jnp
add
cli
mov
xor
pop
mov
add
inc
adc
add
and
nop
jb
add
notb
ljmp
inc
adc
testb
icebp
dec
inc
xlat
inc
call
add
clc
xchg
insb
add
enter
int3
add
push
mov
cmp
inc
mov
jg
fnsave
mov
scas
mov
cltd
pop
and
shr
adc
add
roll
xor
xor
dec
popf
cmp
add
ljmp
sbb
adc
xor
dec
push
add
mov
xor
push
dec
enter
jo
out
add
jmp
adc
mov
add
sbb
cmp
nop
and
jns
lahf
repnz
mov
mov
test
popf
or
pushf
pop
imulb
xchg
add
les
pop
ljmp
in
mov
nop
add
lock
inc
aas
jg
mov
push
jb
mov
inc
dec
fldl
add
inc
loopne
fisubrs
add
add
push
mov
mov
xchg
jg
fwait
xor
int
mov
xchg
jo
or
mov
movsl
out
rclb
adc
add
add
lods
adc
jmp
mov
fldt
add
cmp
cmpl
add
fnsave
mov
leave
cmp
add
jg
sbb
addb
xchg
mov
pop
push
pop
daa
daa
mov
xor
inc
jb
fisttpll
and
iret
nop
add
roll
jo
lea
dec
mov
push
add
push
nop
mov
lret
inc
lea
shr
aam
imul
pop
nop
xor
out
movsl
add
and
repnz
pop
inc
lcall
add
lods
cwtl
add
and
sarb
fmull
add
fdivs
push
insb
stos
loop
add
sub
mov
and
push
insb
leave
adc
jmp
and
xor
dec
mov
loop
cwtl
sbb
nop
mov
call
cmp
mov
repz
outsb
cltd
jo
scas
add
leave
push
ror
sub
adcb
and
nop
stc
gs
and
add
add
xor
push
ljmp
add
outsl
popa
adc
jmp
nop
pop
fcompl
jae
xlat
jno
cmp
popf
rorb
scas
pop
call
push
mov
filds
jb
into
ret
out
cmp
add
sbb
imul
popf
xor
adc
or
nop
and
daa
mov
add
mov
add
pop
add
pop
jo
jmp
aam
adc
and
test
dec
insb
int3
inc
mov
cs
cmpl
sbb
mov
sub
mov
jb
pushf
sbb
daa
arpl
xchg
mov
shll
sbb
aad
icebp
xorb
dec
xlat
ja
adc
add
lea
mov
add
jg
clc
pushf
int3
inc
shrb
movsb
add
cmp
jns
xor
movb
mov
addr16
int
sub
addb
xchg
cmp
call
xor
add
sbb
sahf
add
xchg
pop
sub
lds
sti
nop
sub
jo
inc
add
sub
int3
mov
sub
add
add
sahf
mov
rcll
fwait
xchg
push
daa
jb
fstps
fs
clc
and
add
jbe
loop
mov
data16
cmp
xlat
fbstp
xchg
cmp
add
loop
add
out
cld
add
cmp
cltd
std
out
add
push
add
mov
and
out
pop
cld
add
add
add
fsubl
roll
clc
out
push
fbstp
pushf
push
mov
dec
cmp
add
push
lret
xor
push
add
sahf
movsb
lds
sbb
dec
dec
in
data16
nop
push
sbb
dec
xlat
add
add
add
stc
addr16
xchg
nop
add
jle
int3
inc
fadd
xor
fmul
xchg
bound
add
lahf
jo
add
add
add
addl
xor
int3
lcall
adc
cmp
cmpsb
popf
loop
add
add
mov
or
mov
ret
jo
xor
int3
push
jbe
mov
inc
fcmovnbe
xor
int3
aaa
push
xchg
mov
loopne
nop
mov
ja
pushf
movsl
nop
int3
jae
jae
add
test
inc
xor
fcomps
sub
lea
int3
sub
mov
aam
nop
aaa
adc
and
dec
dec
test
popa
dec
jecxz
rcll
xchg
mov
popa
push
inc
sbbb
lcall
dec
mov
jb
and
mov
push
add
add
nop
fdivrs
mov
cmp
sbb
mov
push
push
dec
add
sbb
sbb
aas
js
test
je
adc
loop
add
push
cmp
and
and
dec
add
icebp
mov
bound
sub
add
dec
imul
aas
nop
xchg
cmc
cmp
xchg
cmpsb
adc
scas
sub
int3
shrb
add
mov
jo
mov
xor
xchg
jb
negb
xor
popf
dec
mov
add
mov
inc
xlat
test
loopne
inc
pop
nop
out
adc
nop
sbb
add
add
ljmp
xor
cmp
add
int3
push
repnz
add
cmp
push
add
sub
add
nop
pop
repz
sti
sub
enter
das
test
mov
sub
int3
sub
pop
mov
loop
add
cld
clc
data16
out
shl
cld
push
add
dec
mov
std
pop
and
cs
cmp
cld
out
cltd
out
push
movsb
add
pop
push
std
jp
add
adc
xor
mov
inc
js
add
xchg
leave
fisttpl
add
add
mov
cmpsb
xor
aaa
addb
xor
lods
inc
popa
cmp
cltd
add
mov
add
mov
aam
ss
sub
nop
popf
aaa
rol
push
add
pop
push
sub
pushf
and
push
aaa
push
dec
add
ja
mov
insl
inc
jp
add
add
push
int3
add
int3
lea
stc
mov
sub
stc
jbe
or
addb
jg
xchg
add
outsb
dec
stos
mov
stc
pop
dec
add
nop
mov
ret
fiaddl
orb
adc
push
mov
cs
rorb
mov
and
jo
add
xchg
mov
mov
aad
add
mov
add
push
shlb
popf
nop
pop
insb
loop
add
test
call
xor
mov
add
add
rclb
int3
sbb
pop
inc
or
jne
lods
and
adc
add
and
mov
lock
sbb
add
mov
stos
add
add
pushf
jb
rcrl
inc
add
dec
jno
push
int3
jb
xchg
inc
dec
jne
nop
in
and
ret
stc
lea
mov
int3
insl
into
lcall
and
popf
sbb
nop
dec
in
jnp
nop
and
mov
pop
faddl
test
cmpl
idivb
pop
arpl
sub
mov
mov
push
aas
leave
add
jbe
add
jmp
add
mov
add
jnp
std
in
dec
add
ljmp
sti
mov
nop
fucomip
pop
cmp
add
out
adc
push
enter
cmp
inc
sar
push
add
pop
dec
repnz
out
cltd
out
xchg
std
aad
out
out
out
add
lidtl
out
lcall
out
add
add
out
out
out
aad
into
inc
xorl
add
std
xchg
sub
cld
shll
mov
add
inc
test
add
add
sub
enter
inc
call
xchg
add
mov
and
mov
jne
nop
fidivl
sahf
shlb
xchg
pop
dec
add
jbe
or
jo
jo
push
add
lea
jns
add
xchg
xor
add
inc
add
rorl
pushf
rolb
int3
pop
das
fwait
mov
dec
insb
jns
xchg
jle
xchg
int3
add
add
dec
push
jmp
cld
mov
shld
aas
cltd
aaa
int3
push
mov
movsl
pop
push
clc
push
cmpsb
dec
mov
push
rorl
int3
dec
dec
xchg
add
arpl
nop
inc
jno
adc
xor
shrl
and
aam
xor
adc
add
sub
sub
les
cld
inc
and
mov
adc
int3
cwtl
popf
pop
push
call
add
insl
sti
mov
jo
jmp
xor
ret
mov
add
xchg
je
mov
sbb
add
repnz
xchg
sbb
pop
int3
jo
add
lahf
pop
inc
or
push
lcall
cmp
add
dec
and
cli
int3
or
lods
mov
nop
adc
cmpsb
cli
add
dec
cmc
decl
data16
aam
mov
mov
idivl
leave
inc
add
out
xchg
shl
add
mov
jns
dec
test
nop
add
jge
xchg
jo
jne
sub
outsb
in
fmull
lcall
fnstenv
out
jnp
add
int3
mov
dec
ljmp
and
and
xchg
sbb
rcrl
rclb
add
add
std
std
add
pusha
popf
inc
cmc
add
lret
mov
pop
adc
int3
mov
sub
push
jmp
into
shr
mov
add
aas
leave
mov
add
add
imul
mov
adc
dec
stc
add
add
cmp
mov
nop
xor
xchg
add
fucomp
lea
jae
ror
add
loop
aas
sbb
int3
push
das
and
test
adc
mov
xchg
jno
add
mov
pop
push
or
fdivp
out
add
jmp
inc
lods
pop
mov
nop
dec
enter
inc
add
fmul
test
pop
test
sub
add
sbb
mov
shrb
add
mov
mov
add
leave
mov
pusha
dec
inc
inc
add
add
xor
add
nop
lea
jmp
sub
add
push
add
xlat
in
adc
cmp
int3
mov
add
push
cmp
xor
ss
add
out
add
scas
add
add
add
std
xchg
out
out
data16
dec
mov
ss
fcmove
cld
gs
push
jne
jne
imul
insb
jns
imul
bound
imul
add
add
std
add
insb
cltd
out
dec
out
std
cld
std
add
std
xor
out
jae
cmp
rorl
add
lret
pop
cmp
xchg
mov
nop
add
sahf
push
jb
jp
nop
cmp
mov
push
rcrb
pusha
add
adc
add
xor
or
out
lea
cmp
out
jo
mov
mov
sbbl
imul
repz
fadds
mov
addr16
push
cld
mov
andl
add
add
mov
loopne
and
fnstsw
xchg
add
pop
pusha
mov
mov
nop
xchg
cmovno
stc
adc
jb
dec
shlb
add
adc
add
xchg
sbb
mov
mov
xchg
dec
pop
mov
mov
jmp
add
inc
jle
cs
add
movsb
fisttpll
add
int3
mov
inc
cld
lcall
inc
sub
in
add
enter
ds
inc
add
add
rorl
adc
sbb
inc
cmp
subl
or
pop
add
nop
lret
adc
push
add
outsl
pusha
js
lret
add
cmc
fidivl
add
subl
dec
sahf
adc
movsb
rorb
fidivrs
add
lds
std
add
pop
xor
add
add
cmp
fs
int3
inc
aam
xor
add
push
nop
nop
add
das
nop
add
lret
sbb
mov
and
insb
cmp
mov
int3
add
add
mov
xor
jno
mov
add
je
jb
pop
add
add
add
inc
push
pop
jno
nop
pop
add
sbb
xchg
movb
jne
repnz
jb
and
in
or
pop
rorb
dec
fwait
scas
insb
xor
int3
cli
jo
or
rolb
cwtl
mov
add
scas
aas
add
pop
lcall
iret
ss
imul
sub
add
mov
mov
es
pop
add
mov
dec
pop
pop
xchg
icebp
cmpsb
add
sahf
lds
into
jmp
push
mov
push
push
popa
xor
call
pop
jg
add
jb
mov
data16
jle
add
insb
or
mov
cmp
add
cmp
jge
pop
popa
or
std
call
adc
add
push
sbb
or
mov
adc
das
add
sub
hlt
testb
cld
andl
sldt
dec
mov
daa
jae
and
rclb
add
mov
movb
inc
mov
stos
or
testb
add
call
test
faddl
imul
in
mov
inc
ljmp
pop
lea
add
push
fmuls
andb
xlat
outsl
add
adc
jo
mov
nop
and
pop
push
adc
icebp
ret
add
mov
fadds
pop
mov
clc
scas
aam
add
add
jns
push
and
mov
daa
lahf
outsb
add
mov
push
cltd
nop
xor
mov
sahf
add
xchg
inc
lcall
add
nop
int3
nop
jo
xchg
jg
nop
jb
sub
insb
jg
nop
mov
jns
fisubl
add
aad
jo
add
sub
mov
dec
std
sub
int3
aas
out
jo
bound
nop
jns
fldcw
jmp
lds
in
or
add
ret
call
push
jae
add
mov
cmc
xchg
add
lret
mov
ja
adc
cs
add
lods
cmc
sbb
mov
and
subb
popf
ret
and
add
frstor
add
mov
jle
cmp
das
and
int3
int3
or
nop
nop
je
test
andl
push
or
orb
jne
add
push
xchg
add
inc
and
or
and
add
inc
mov
popf
and
inc
sarb
call
hlt
stc
mov
add
add
sub
push
add
sahf
add
nop
ftst
inc
stos
add
in
vpmaxsw
add
inc
pushf
ljmp
dec
adc
add
cmp
pop
and
add
ret
jne
nop
add
dec
movsl
aaa
int3
adcl
dec
jns
xor
add
nop
mov
inc
ss
out
out
cs
cld
out
dec
cld
out
xor
cs
cltd
out
out
aam
sar
clc
mov
cld
add
daa
insb
aad
add
leave
popa
les
xchg
dec
int3
add
inc
mov
fstl
sub
fstl
call
dec
add
dec
inc
add
push
add
jbe
inc
mov
iret
iret
lret
int3
jge
scas
add
add
cli
jo
inc
movsl
add
out
movl
lea
nop
nop
jge
outsl
dec
push
nop
add
loope
nop
add
add
add
fidivl
pop
dec
cmp
xor
cmp
ffree
inc
add
or
and
mov
paddsw
add
mov
sub
stos
and
ss
fs
push
cmp
int3
xchg
mov
add
call
add
jno,pn
sub
ds
nop
test
mov
mov
aas
xchg
mov
add
mov
mov
add
aad
inc
addr16
lods
add
pop
jl
outsl
fdivl
add
int3
xchg
mov
or
add
mov
outsl
pop
mov
and
jmp
icebp
add
repz
cmp
nop
fisubs
andb
repz
mov
fs
add
call
jp
add
and
int3
xchg
inc
aas
iret
add
jns
sub
and
add
inc
test
aas
push
dec
and
jmp
mov
adc
pop
add
push
adc
sbb
call
add
jae
aaa
inc
into
stos
pop
add
adcb
add
cmp
int
add
cmpsl
mov
pop
mov
jno
movl
push
add
mov
adcb
nop
jb
lcall
add
cmp
pop
jb
and
movsl
jmp
in
test
out
ja
fs
mov
or
nopl
and
cwtl
adc
out
dec
add
int3
jb
sbb
ljmp
xor
cwtl
fwait
adc
nop
cmp
nop
int3
add
rcll
int3
ja
nop
add
add
lea
add
nop
mov
cltd
adc
mov
jo
cmc
nop
and
jns
xchg
inc
or
pop
lret
out
int3
inc
xor
add
and
jb
jg
lods
push
dec
mov
xor
add
mov
add
int3
and
or
push
add
add
aaa
loop
mov
int3
add
jnp
sub
pop
enter
pushf
sub
mov
mov
pushf
inc
and
sbb
push
xchg
add
pop
jp
add
cmp
js
jecxz
jae
and
jl
cmp
add
pop
ret
pusha
add
rcl
add
inc
imul
nop
mov
pop
lods
pop
nop
nop
pop
xor
adc
add
sahf
fistl
mov
data16
add
dec
cmp
lods
popf
int3
inc
xchg
nop
lea
add
or
aaa
cmc
mov
stos
imul
xor
mov
inc
mov
out
imul
add
mov
sub
aas
call
pushf
out
add
adcb
mov
add
sub
nop
add
lcall
lahf
dec
pop
jae
int3
lea
push
add
rorl
or
add
xor
inc
cmpsb
push
add
and
imul
push
orl
add
push
iret
add
shlb
pushf
sti
gs
add
add
push
mov
aad
jge
int3
pushf
mov
mov
stos
dec
inc
cld
cmp
cmp
add
out
xchg
out
add
out
out
and
andb
out
push
cld
out
out
xor
cld
add
cld
add
add
clc
add
lahf
outsw
std
out
add
out
add
out
add
std
out
cmp
add
std
dec
filds
out
mov
out
mov
add
test
add
jp
in
pop
add
dec
jp
add
mull
in
xchg
stc
sbb
lea
out
out
add
mov
push
xchg
xor
int3
inc
scas
repz
cmp
add
nop
add
nop
nop
fidivl
or
js
add
movsb
add
add
lret
out
or
shlb
xchg
imul
scas
sbb
fcomip
add
dec
mov
int3
popf
pop
adc
xchg
and
jmp
scas
orb
xor
cld
in
xchg
nop
andb
push
lea
repz
or
cmpsb
nop
int3
xor
push
repnz
pop
jb
fists
iret
cmp
test
scas
repz
add
shrl
inc
jp
mov
nop
add
sbb
add
mov
mov
add
jl
ret
or
inc
add
push
jecxz
nop
xor
pop
loopne
push
push
nop
lea
cmp
movsl
scas
mov
add
bound
push
add
int3
ret
mov
sbb
add
xchg
mov
int3
and
pop
cmp
add
cmc
jb
xchg
push
jo
scas
je
inc
jmp
addb
mov
mov
add
add
add
and
jg
pop
add
xor
popa
shlb
add
add
aaa
lea
and
pop
push
int3
add
cmp
add
add
mov
mov
lods
aaa
add
int3
push
add
shll
ja
add
adc
add
addb
out
bound
mov
addl
negb
sahf
add
mov
mov
cmp
andb
mov
subb
je
push
add
or
add
in
in
and
imul
mov
add
cmp
lods
outsl
pop
add
ret
pause
add
and
sbbb
cld
int3
fiadds
jle
les
mov
fcoms
fldl
mov
ret
sub
les
add
cmpsb
inc
mov
js
dec
add
out
xor
add
fs
stc
testl
loopne
std
into
xor
outsb
repnz
add
movsb
and
out
xchg
call
test
add
pop
int3
ret
mov
int3
xchg
jnp
mov
xor
push
xchg
stos
faddl
add
js
int3
mov
gs
mov
nop
xlat
call
inc
cs
jo
xchg
scas
sbb
ret
jo
test
imul
cmp
ss
add
es
add
pusha
rolb
lock
das
out
add
clc
insl
add
mov
pop
int3
nop
inc
fnstenv
mov
xor
push
mov
ds
and
lock
inc
mov
inc
sub
cs
add
sub
jb
repz
jo
jno
pop
add
inc
and
pop
mov
inc
lea
cmp
aam
jo
and
sub
sub
add
popa
mov
push
dec
mov
and
int3
les
add
in
dec
add
mov
xor
cmp
nop
out
cltd
mov
insb
scas
imul
jnp
xchg
mov
add
jbe
and
mov
cmpsl
or
call
mov
add
add
in
out
add
pop
test
nop
aad
dec
mov
mov
add
int3
int3
push
insl
jmp
and
inc
shlb
jp
add
pop
pop
add
pop
add
insb
movsb
data16
movsb
add
add
mov
jge
int
add
negb
add
clc
nop
add
pop
pop
cmp
push
cld
mov
test
jo
movsb
push
push
jb
push
mov
pop
cmpb
inc
addr16
nop
emms
xchg
jmp
cs
lea
data16
push
mov
daa
repnz
inc
lcall
pop
pop
leave
int3
add
fadds
leave
test
dec
shr
int3
jo
test
xlat
add
sbb
mov
addr16
add
lea
mov
mov
rorl
addb
jne
inc
push
cli
pop
pop
add
lret
mov
je
adc
int3
add
add
pop
add
push
or
insl
xor
incl
xchg
push
cmp
pop
pusha
inc
add
sbb
test
push
add
jmp
out
out
out
out
lea
data16
lea
std
mov
out
test
dec
add
cltd
loopne
xor
add
jns
out
clc
add
nop
add
in
mov
filds
ror
and
mov
add
inc
mov
int3
mov
lahf
sub
decl
xor
add
sahf
sti
std
adcb
lea
fistps
push
jnp
lret
stos
scas
jmp
mov
xlat
sbb
sub
ss
int3
push
in
lds
xchg
in
adc
xchg
sahf
pop
call
jb
popa
les
or
pop
call
test
hlt
inc
pop
leave
add
xchg
mov
add
lcall
fsubrs
cld
std
mov
add
scas
push
add
sbb
addr16
mov
jae
add
add
add
pop
add
addb
outsb
mov
or
mov
shlb
pop
mov
frstor
pushf
lods
add
mov
nop
int
data16
add
push
pop
adc
add
push
xchg
pusha
mov
nop
fwait
mov
xchg
or
sub
mov
lods
sti
test
cwtl
shll
aam
add
je
mov
nop
inc
stos
xchg
addr16
shrb
rorb
inc
adc
addr16
add
cmp
add
add
es
shr
add
sbb
fisttpll
sbb
mov
push
sub
scas
addl
int
xor
rcrb
pop
pop
adc
adc
xor
push
pop
jno
add
mov
decl
cmp
je
dec
ret
sub
add
outsl
loope
adc
call
addl
lret
mov
push
pop
add
sbb
cmpsl
lea
mov
xchg
jmp
mov
test
add
adc
xchg
cmpsl
add
sti
sti
mov
add
lods
xor
xchg
ret
add
in
inc
add
in
xor
add
cmpl
out
rol
add
jo
cmp
and
int3
pop
dec
fnstsw
adc
nop
dec
sub
fnstsw
sub
mov
add
nop
nop
rolb
nop
push
sub
shlb
or
and
lcall
mov
mov
jecxz
int3
add
shl
mov
pop
loopne
out
call
mov
orb
mov
movsb
iret
ds
js
inc
add
or
lcall
popa
nop
cld
inc
dec
mov
dec
imul
push
and
mov
add
sub
add
fsubrl
lods
mov
repz
add
inc
add
add
xchg
mov
mov
xchg
sub
add
ret
unpckhps
add
insl
push
sub
or
incl
cmpsl
out
jmp
out
add
out
lcall
shll
dec
out
cld
nop
add
mov
out
out
test
int3
pop
or
add
call
inc
add
cli
jge
repnz
aaa
lods
mov
xorb
into
test
fidivs
add
pushf
mov
pop
rcl
pop
pop
repnz
imul
sub
add
add
cmp
add
pop
or
addl
nop
xchg
jb
jb
les
jno
adc
mov
inc
cmp
add
add
cmc
mov
dec
nop
int3
sbb
jg
mov
or
sti
mov
das
xor
add
stc
int
mov
sbb
jb
push
push
call
cli
int3
adc
nop
leave
mov
xchg
sahf
nop
mov
adc
jg
nop
outsl
adc
inc
addb
mov
fcompl
add
pop
add
jb
add
or
pop
cmpsb
push
inc
add
cld
fistl
nop
mov
xor
add
inc
lea
test
fmul
add
addb
lods
pusha
adc
or
or
in
call
mov
mov
jle
lea
mov
enter
jbe
mov
jo
fs
mov
int3
jo
sbb
fidivl
add
shlb
stc
stc
xor
int3
mov
sub
mov
sti
inc
inc
nop
add
call
add
stos
hlt
add
or
insl
add
adc
adc
daa
int3
adc
nop
add
cmp
cmp
add
xchg
in
add
fwait
pop
pop
fiaddl
xor
int3
add
or
mov
cmp
jg
mov
push
add
push
mov
mov
imul
mov
add
aad
out
int3
mov
mov
xor
mov
jo
mov
fwait
nop
lods
and
out
aam
dec
rclb
jge
add
cld
xchg
xchg
lock
nop
movsb
mov
ffree
shlb
lahf
mov
or
shll
pop
xchg
pop
sbb
add
xchg
jne
or
push
jns
cmpsb
add
mov
jae
inc
imul
nop
fdivrs
lea
sbb
add
andb
lods
fs
nop
int3
xchg
mov
inc
and
inc
fwait
mov
push
and
mov
mov
or
push
push
addb
and
call
mov
int3
in
mov
out
out
out
mov
test
out
add
std
add
add
cmp
cld
test
out
sbb
out
xchg
out
mov
push
data16
rcl
add
in
mov
and
push
inc
cmp
push
sbb
mov
xor
sub
add
inc
gs
xor
loope
jmp
and
punpckhwd
lea
jg
inc
sub
int3
fidivrs
sbb
dec
mov
mov
jo
je
shl
add
sti
outsb
inc
pop
xlat
lret
sub
cld
adcb
add
sub
and
xlat
add
lcall
xor
scas
sbb
dec
xchg
adc
nop
out
xor
inc
cmp
add
pop
jge
nop
imul
pop
jo
sbb
add
add
scas
clc
lock
inc
jb
mov
xlat
loopne
mov
jo
pop
repz
add
add
xor
movsb
nop
lds
mov
sbb
sbb
add
dec
loopne
sub
add
lcall
nop
and
add
dec
arpl
and
lea
shlb
in
lea
xchg
out
mov
jae
loopne
adcb
sub
fsubr
sbbb
and
add
int3
sbb
push
jb
push
jo
scas
mov
add
add
sub
push
in
jge
outsb
add
sbb
jo
add
mov
dec
inc
orb
mov
add
sub
mov
mov
add
movsl
add
fmul
add
and
popl
add
lods
mov
lret
sarl
add
jnp
xchg
jo
mov
add
lds
rcr
mov
cmp
bound
add
mov
addb
sub
arpl
stc
add
mov
add
add
inc
add
sub
stc
pop
add
nop
pop
jg
xor
jmp
push
add
nop
arpl
out
lock
jo
jp
pop
add
dec
mov
and
jle
inc
shr
int3
sub
or
add
xorb
add
mov
xor
call
nop
add
add
add
pop
jp
ret
add
inc
aad
cmpsl
xchg
int3
add
fs
sub
stos
jb
fnstcw
stc
sbb
push
cs
mov
test
xor
inc
add
out
add
mov
push
test
int3
mov
push
daa
int3
jnp
test
push
sbb
call
xchg
jb
ret
aas
jg
int3
add
push
lcall
jne
orb
movsb
js
stc
call
inc
scas
add
inc
and
int3
nop
lods
jmp
int3
nop
mov
inc
jle
cld
add
out
out
cltd
add
dec
cmp
add
out
pop
out
insb
mov
xor
pop
out
data16
out
cltd
pop
cld
out
jg
cs
out
lcall
out
subb
incl
cld
out
cld
out
add
std
add
jle
add
add
out
call
push
pop
sub
into
gs
add
xorl
lea
and
lds
mov
stc
cld
add
stos
mov
inc
ds
addl
cltd
and
mov
js
popf
or
add
cld
add
sbb
nop
int3
out
jle
mov
cmpsb
fwait
loop
add
add
sbb
sbb
stos
mov
scas
push
pop
jb
push
lret
add
push
mov
sbb
add
jo
in
and
mov
and
out
pop
mov
cmp
pop
notl
push
xchg
add
fcom
stos
adc
push
inc
sub
ret
add
lahf
pop
loopne
inc
mov
add
mov
nop
add
decb
sbb
mov
add
mov
out
testl
repnz
xor
andl
jb
dec
filds
int3
nop
pushf
push
add
call
call
call
aam
nop
jo
imulb
or
push
mov
mov
lock
add
inc
les
int3
and
mov
addb
stos
sub
cmp
add
test
and
int3
outsl
jae
mov
xor
les
add
push
nop
add
inc
stos
add
fwait
cwtl
imul
push
jns
push
nop
add
sub
add
dec
jle
inc
inc
movsl
div
inc
fisttpll
mov
test
adc
mov
mov
pop
aaa
sarl
scas
xlat
push
xor
nop
inc
mov
jnp
jns
xor
add
jo
xor
and
jecxz
dec
sti
add
mov
add
xchg
ja
push
addb
xorb
inc
mov
add
fstpl
add
adc
push
add
testl
adc
test
or
shl
xchg
add
dec
loop
add
popa
inc
mov
sti
aas
add
mov
das
push
adc
add
lea
das
or
and
icebp
int3
flds
fimull
add
rorl
jo
dec
adc
add
or
jg
mov
sbb
in
mov
xlat
notl
int3
xchg
mov
and
int3
aas
aas
das
add
xchg
xor
ljmp
loopne
call
add
ret
pusha
mov
or
add
lcall
add
jbe
xchg
add
and
add
xor
dec
jge
add
lods
add
add
sub
je
add
inc
dec
adc
int3
add
add
sbb
lea
jo
int3
lea
loop
push
add
mov
add
add
jmp
int3
and
ss
add
aad
sub
and
xor
jnp
mov
add
push
out
pcmpeqb
add
test
push
cmpsb
and
xchg
in
push
and
push
sub
addb
inc
popf
add
int3
add
push
dec
sldt
cmp
fsubrs
cltd
push
in
and
addr16
ljmp
jp
add
xlat
pop
data16
cwtl
fcmovb
jae
and
or
insb
add
push
sahf
or
or
popa
and
fisubrl
lock
push
ljmp
pushf
std
sbb
bound
add
cmp
push
add
inc
xor
int3
add
fldenv
add
adc
nop
jb
shlb
int3
cwtl
shl
add
jmp
add
and
movsl
add
mov
nop
stos
shl
cli
in
add
outsb
insb
aam
lret
adc
xchg
stos
sahf
pop
or
add
or
shrb
mov
call
jno
add
lock
cmpsb
add
add
add
mov
out
scas
add
adc
in
xor
cmp
add
daa
rcll
nop
sbb
pop
incb
add
xor
int3
sti
dec
lret
push
jp
nop
xchg
mov
push
cmp
mov
sti
jo
scas
ljmp
mov
add
cli
insl
add
outsl
add
mov
mov
mov
add
push
add
pop
add
jo
int3
push
clc
mov
add
int3
clc
aaa
mov
pop
je
add
iret
pop
or
std
ret
add
inc
int
nop
shrb
call
jo
mov
mov
mov
push
mov
out
mov
ljmp
imul
add
pop
inc
push
xor
mov
hlt
cli
mov
xor
cld
sbb
add
add
fimuls
int3
sbb
or
adc
pusha
mov
scas
add
mov
add
pop
pop
jo
push
add
add
add
adc
or
add
clc
xchg
or
fisttps
cld
iret
and
repnz
cmp
inc
cmp
add
and
repz
adc
mov
int3
fsubl
inc
dec
pop
add
push
jmp
out
out
out
inc
add
out
out
mov
out
ds
adc
jns
paddq
rcr
pop
out
add
lock
out
shlb
out
pop
lcall
out
popa
stos
sub
sub
xlat
sub
or
lds
call
add
fstl
and
add
push
dec
jge
bswap
mov
divps
nop
sbb
jo
pop
loop
ja
pop
int3
cli
cmp
bound
aam
add
add
and
inc
insb
add
daa
cmp
fldenv
add
nop
add
test
lea
lea
call
add
cwtl
jns
xchg
jb
mov
add
inc
sbb
ret
sub
jecxz
add
fidivl
add
cmp
std
dec
in
add
dec
jmp
mov
fisttpl
mov
int
mov
sub
jne
push
add
add
add
push
xchg
jecxz
mov
addl
adc
test
cli
add
mov
sbb
cmpsb
xor
in
add
ret
leave
add
cmp
nop
pop
xchg
call
in
mov
pushf
sub
inc
int3
inc
mov
add
aad
dec
cmpsl
nop
repz
outsl
ret
mov
clc
pop
ffreep
pop
mov
add
pop
popa
add
out
repz
and
adc
xchg
add
seto
lods
xor
lea
out
inc
pusha
nop
or
sbb
pop
cmp
mov
inc
jle
sbb
rcr
stc
inc
add
lea
xor
sbb
add
mov
shl
sub
bnd
xor
subb
call
call
dec
add
cmp
int
mov
jne
inc
add
adc
add
push
repnz
les
add
inc
jl
orb
sldt
lea
mov
test
and
popl
and
jg
stos
pop
int3
jo
pop
das
inc
pop
jb
cmp
andb
adc
xlat
nop
jo
into
je
pop
nop
add
loop
jb
pop
rorl
pop
mov
and
or
ds
call
sbb
add
and
and
bound
add
mov
shrl
push
add
cmp
inc
jb
jne
push
or
inc
rorb
push
stos
test
inc
lahf
aaa
jle
xchg
cltd
mov
data16
scas
out
aam
fwait
into
out
loopne
sbb
aas
cld
bound
addb
outsb
out
aaa
dec
and
out
out
out
xchg
shl
std
data16
ds
out
cld
dec
xchg
add
mov
dec
pop
add
add
cmc
inc
nop
rclb
add
pop
mov
add
dec
dec
add
and
pop
lcall
sub
and
loop
jnp
outsl
push
dec
mov
mov
mov
mov
adc
notl
xor
lds
jb
mov
lldt
jae
add
hlt
xor
add
or
insl
call
xchg
and
push
je
inc
mov
repz
add
mov
neg
push
movb
mov
sub
add
pusha
sub
mov
in
cli
cs
pop
call
imul
in
add
nop
in
adc
int3
mov
mov
mov
add
add
xchg
fldl
sub
decl
add
sbb
add
jb
out
sti
stos
add
neg
popf
ret
ror
xor
and
sub
jge
inc
int3
aam
outsl
and
add
fnsetpm(287
add
mov
push
inc
xor
enter
les
int3
push
sbb
sahf
inc
and
rorl
cmp
add
dec
add
aas
mov
mov
lea
dec
push
cmp
add
and
sldt
sbb
int3
mov
jbe
inc
xchg
pushf
mov
mov
out
pop
rclb
add
mov
int3
xor
push
jo
lret
add
add
xor
inc
and
dec
mov
adc
cmpsl
mov
xacquire
mov
sbb
add
push
nop
int
nop
mov
lcall
add
adc
add
lods
loope
call
pop
xor
jne
and
or
cli
icebp
addb
repz
add
roll
addl
aaa
add
dec
mov
dec
xor
lea
sub
push
or
cli
nop
sub
aas
sbb
pop
add
sub
lret
addr16
fsubr
push
imul
shrl
adc
jb
aad
add
jo
and
add
xchg
push
xchg
add
mov
leave
rcll
pop
pop
pop
lahf
inc
add
addr16
and
and
int3
add
sub
mov
add
clc
mov
xor
and
cmp
add
sbb
pop
jae
add
mov
and
mov
lret
add
dec
and
xor
push
jmp
inc
pop
and
mov
and
nop
in
push
add
into
sub
xlat
lcall
es
add
mov
add
push
sub
add
push
dec
add
add
push
jo
push
nop
das
push
int3
int3
aas
dec
add
xchg
sub
int3
push
aas
idivb
add
mov
pop
imul
sub
call
sbb
test
nop
jmp
add
sti
ss
and
add
mov
cld
out
add
add
add
add
out
jg
or
out
std
cmp
out
imul
cld
out
cs
call
mov
hlt
adc
add
ds
add
cmp
xchg
add
arpl
mov
add
cmc
push
jg
add
cmp
add
mov
mov
cld
insl
add
rcll
pop
es
fiadds
add
add
cmp
scas
mov
loop
xchg
nop
nop
fistpl
add
mov
add
mov
loope
xchg
addl
add
test
add
js
iret
add
cmpsb
test
mov
jp
sbbb
mov
and
mov
add
push
pop
movsb
in
mov
pop
scas
fs
hlt
call
aaa
adc
add
and
xor
into
int
xchg
lea
std
nop
add
psubsb
add
stos
aaa
adc
add
add
stc
out
adc
adc
mov
bound
add
test
jo
mov
inc
pop
jns
repnz
dec
loope
xchg
sbb
sbb
nop
xor
xchg
shlb
mov
xchg
clc
add
stc
add
out
jbe
add
andl
adc
pop
mov
call
sbb
add
addr16
add
lods
out
int3
idivl
insb
call
inc
les
adc
dec
lcall
int3
add
outsb
add
dec
jle
int3
add
sub
punpckldq
cwtl
les
std
stos
push
int3
add
mov
jb
cmp
adc
mov
cmp
int3
inc
lds
and
rolb
and
sbb
add
mov
inc
add
mov
xchg
xlat
add
ror
pop
enter
and
adc
or
add
or
jae
int3
add
adc
cmc
add
lods
adc
fists
in
add
mov
leave
xor
cmpsb
stos
add
fiadds
call
nop
sbb
xchg
xor
test
pop
xor
ss
stos
mov
adc
nop
push
movsb
jg
xor
or
test
out
mov
add
inc
nop
lahf
les
sbb
mov
add
adc
insl
inc
adc
mov
pusha
and
xchg
mov
add
dec
and
add
loop
and
adcb
xorb
inc
xor
jmp
add
add
sbb
int3
add
xchg
lods
ljmp
jb
add
hlt
shll
cltd
mov
add
pop
testb
xchg
inc
add
push
jo
add
inc
ret
mov
fucomip
int3
fs
sbb
daa
lds
jmp
lcall
inc
or
das
cmp
xchg
and
popf
int
sbb
add
fnsave
int3
add
dec
fnstenv
dec
pop
and
inc
add
inc
jbe
mov
sbb
gs
add
sarl
add
pop
push
add
mov
inc
dec
rorl
lods
addb
add
dec
int3
aaa
or
out
sub
push
fidivrs
loopne
jp
add
xor
lret
pop
cld
xor
data16
iret
xor
add
add
addl
notl
add
inc
add
leave
js
int3
mov
xchg
sbb
dec
mov
pop
add
fisttpll
mov
mov
incl
imul
jne
outsl
push
out
cltd
out
cmp
out
cs
out
loopne
add
imul
out
add
cld
dec
data16
out
out
dec
cmp
std
out
test
sldt
dec
out
shr
leave
add
out
ja
in
int3
jo
or
sti
and
add
cmpsl
sbb
add
dec
jns
add
data16
sub
lea
inc
pop
mov
idiv
push
or
add
jno
push
jne
and
iret
sbb
add
adc
push
mov
xor
add
lods
xor
add
insl
mov
add
mov
jo
int3
add
sbb
jge
jns
inc
fistpll
loopne
fs
arpl
nop
mov
cltd
scas
lea
mov
and
mov
popa
aaa
adc
popa
mov
int3
pop
pop
jns
inc
add
add
addr16
add
imul
outsl
mov
sbb
adc
jmp
imul
inc
lea
lock
repnz
add
jecxz
out
add
pop
sub
xor
add
loope
jl
int3
popa
inc
rcr
andb
add
or
aas
push
pop
adc
add
xchg
imul
or
mov
xlat
pop
inc
shlb
ljmp
int3
mov
daa
pop
add
cmpsl
call
clc
in
add
and
call
int3
shl
push
int3
in
cmp
out
clc
inc
nop
inc
sarb
int3
nop
or
xlat
addb
add
sub
call
call
fdivrs
mov
add
ret
add
test
inc
mov
or
sarb
mov
aam
pop
into
add
adc
mov
inc
cmpsl
xor
loopne
inc
add
inc
mov
stc
adc
add
xchg
iret
out
mov
mov
and
jnp
jp
mov
insl
je
lea
mov
mov
or
das
je
aad
hlt
pop
pop
inc
nop
nop
sbb
inc
stos
mov
and
push
xor
fldenv
and
fsubrs
add
jle
push
xchg
into
jae
insb
cmp
les
nop
mov
sub
jo
pop
daa
pop
imul
add
bound
mov
call
dec
add
mov
add
out
mov
add
sti
cmp
jecxz
add
icebp
sbb
or
mov
cltd
loope
pop
lea
mov
lds
or
add
cwtl
sbb
pop
repz
negl
out
mov
mov
cwtl
push
mov
int3
in
arpl
add
add
inc
mov
lea
jo
mov
add
fcomi
mov
int3
jns
jb
add
add
jmp
adc
cs
repz
lods
adc
ds
int3
xchg
insl
cmp
int3
push
add
int3
call
ret
add
out
and
mov
add
pop
sbb
imul
cmpb
sub
imul
rcl
xorl
scas
cli
call
fs
dec
add
push
lods
dec
pop
sub
mov
icebp
or
inc
jmp
mov
int3
add
add
test
mov
add
sarl
enter
loop
fistpl
orl
mov
inc
ffree
scas
add
cld
stos
sub
inc
mov
mov
xlat
test
mov
mov
push
cmp
mov
int3
add
pop
sbb
lea
add
nop
or
jp
add
add
push
jo
or
jnp
jb
mov
add
cmp
jne
pop
addb
ljmp
pop
mov
int3
fdivs
sti
nop
sbb
jb
or
jne
and
test
add
jmp
xchg
je
or
sysexit
add
dec
mov
int3
mull
enter
hlt
xor
popf
push
jb
add
out
adc
addb
mov
mov
add
pop
jo
sub
add
add
ret
push
mov
mov
aas
xor
movsl
out
lea
and
stc
rcrl
add
imul
mov
add
xchg
mov
adc
std
add
out
sub
data16
cld
shll
add
aaa
lretw
dec
add
add
out
out
add
out
out
cld
scas
lock
xor
scas
add
jns
add
cld
dec
add
out
scas
add
loop
out
add
cltd
roll
out
dec
cld
xchg
cmp
jmp
jns
add
add
cld
jmp
add
add
lret
cs
aad
add
add
mov
mov
push
int3
mov
xor
pop
jo
sbb
add
nop
rorb
shrb
add
dec
jo
add
lret
mov
mov
sub
call
aas
sub
or
or
lea
xor
mov
cwtl
add
enter
mov
cld
push
push
add
dec
in
popa
add
push
icebp
xchg
dec
add
and
aaa
mov
add
xchg
je
add
sub
adc
nop
nop
fwait
adc
test
and
jne
and
and
ljmp
lea
jl
add
mov
jo
loopne
in
add
inc
iret
shrl
push
cwtl
fcoml
stc
nop
add
add
fs
jb
sub
or
add
repz
idiv
nop
int3
data16
addr16
mov
or
or
add
mov
arpl
inc
mov
and
fcomip
jp
aad
add
sub
enter
aam
loope,pn
cwtl
jo
add
add
loope
push
rolb
pop
sub
add
xchg
int3
lret
outsl
nop
mov
hlt
lods
add
cmp
dec
mov
je
call
mov
mov
popa
int3
add
fwait
jmp
mov
xor
jmp
push
sti
incb
add
add
sbb
add
sub
imul
int3
mov
lea
cs
fcmovb
mov
dec
test
popa
nop
int3
jo
dec
adc
add
mov
add
adc
cs
mov
add
pushf
push
and
cmp
add
in
and
or
and
inc
xor
les
aaa
mov
add
in
mov
daa
je
imul
nop
add
mov
stos
inc
pop
xor
xor
loope
jnp
xchg
add
stc
iret
clc
cli
add
lahf
sub
dec
loop
dec
add
lret
mov
xor
add
mov
fstpl
add
movsl
popf
fs
scas
add
testb
nop
add
mov
add
and
mov
sub
add
and
add
loop
add
xchg
lods
insl
xor
jle
sub
pusha
call
cmp
sub
cs
add
cmp
mov
add
in
mov
icebp
push
addb
cmp
inc
nop
mov
fisubs
iret
imul
add
sub
popa
loopne
jo
and
jnp
mov
mov
xorl
adc
int3
xchg
add
sub
mov
push
add
nop
add
movsl
inc
nop
lahf
xor
lea
call
xchg
loopne
icebp
push
es
test
add
sub
call
pop
mov
sahf
cmp
es
xor
ja
mov
add
pushf
jbe
inc
mov
add
lods
jp
add
add
out
mov
loope
xor
add
mov
sbb
mov
mov
sbb
addl
add
int3
jmp
inc
sbb
xchg
mov
add
jb
or
add
in
lea
jb
nop
aas
xor
xor
mov
jae
xchg
lea
shlb
ss
or
arpl
adc
int3
int3
push
pop
add
add
and
filds
orb
mov
imull
add
enter
aaa
jecxz
push
or
lahf
stc
sub
or
add
mov
popl
loopew
mov
in
fcmovbe
add
loopne
fldenv
jg
shlb
jp
out
int3
lret
mov
insl
inc
cltd
mov
add
int3
add
or
or
adc
xor
add
fwait
cwtl
pop
fwait
call
add
stc
pop
add
sti
add
and
pop
imul
iret
adc
int3
and
and
iret
inc
lea
rcrl
inc
nop
add
cmp
add
cmp
sti
cmp
in
rorb
or
mov
mov
cli
pop
out
mov
das
inc
aad
mov
jbe
adc
mov
ss
lods
add
je
out
bound
int3
imulb
add
add
inc
shl
add
jb
mov
lock
call
sbbl
adc
lods
fiaddl
add
mov
pop
das
push
test
xchg
and
adc
inc
jns
jl
add
xchg
scas
jo
or
lea
mov
and
arpl
mov
ja
add
inc
adc
fstpl
and
sarl
dec
int3
mov
add
js
cs
scas
cltd
add
verr
out
shlb
add
jmp
cltd
add
add
add
loopne
dec
out
imul
mov
lock
add
out
out
mov
aas
aaa
inc
cmp
std
out
add
loopne
stos
out
dec
add
cmp
shll
roll
or
dec
inc
jmp
cltd
sub
add
add
out
cld
jns
out
jmp
shl
rcr
testl
lea
pop
sub
int3
mov
add
xchg
adc
int3
call
pop
or
sub
sbb
add
lea
ss
rclb
mov
shll
popa
add
sbb
jo
mov
int3
addr16
aas
mov
mov
pop
sbb
mov
pop
fldenv
add
div
sbb
add
push
int3
shl
add
cmp
jne
daa
imul
mulb
add
call
pushf
loopne
add
stos
jl
cmp
jae
xor
inc
int3
orb
int3
call
xor
jo
adc
clc
push
daa
sub
lods
jbe
add
add
nop
lea
jns
jb
and
mov
lods
add
int3
add
out
or
addb
repnz
mov
dec
add
jge
add
std
pop
add
hlt
imul
jp
mov
xor
clc
mov
arpl
pop
nop
add
and
add
add
scas
pop
mov
push
pop
nop
xor
gs
testl
xor
testb
fisttpl
out
and
loopne
jo
pop
mov
nop
add
add
sbb
add
out
jne
cmc
sbb
sti
xchg
nop
nop
and
je
notb
inc
int3
push
ss
rorb
xor
inc
call
add
mov
add
add
pop
popa
add
int3
mov
sub
aad
xor
movl
sahf
sahf
mov
mov
add
xor
mov
nop
inc
push
stos
and
divb
mov
out
dec
sub
data16
and
mov
sbb
nop
xchg
xor
inc
dec
dec
push
pop
mov
int3
nop
push
rcrl
pushf
dec
add
add
stos
es
add
mov
int3
lret
incl
mov
inc
and
lods
lret
mov
iret
and
pusha
push
shrl
call
add
int3
add
add
adc
andb
jge
add
loopne
add
arpl
jae
jmp
inc
xor
cmp
inc
add
or
int3
jo
mov
cmp
and
loopne
adc
mov
lahf
mov
add
sti
nop
push
pop
add
loope
add
ficomps
add
jmp
lret
pop
add
push
adc
mov
and
lret
sbb
nop
dec
sahf
es
mov
inc
xchg
dec
sbb
add
add
js,pn
hlt
jno
add
mov
mov
pop
lock
jl
nop
or
inc
nop
inc
sbb
outsb
dec
adc
add
inc
mov
push
gs
add
mov
sub
lcall
pusha
aaa
and
add
fdivrl
add
inc
test
and
sahf
dec
pop
pop
add
jg
popl
push
mov
fildll
add
fldcw
mov
out
int3
jmp
inc
inc
or
nop
sti
add
jo
pop
imul
pop
adc
movsb
add
sub
add
enter
into
cmp
pop
push
add
adc
cld
das
xchg
adc
inc
lock
addb
add
mov
add
cmpsb
push
jae
jb
add
jmp
into
pop
popl
dec
jae
pusha
add
jb
addb
sbb
add
mov
movsl
mov
push
mov
add
inc
lds
mov
nop
add
fwait
cmp
dec
out
dec
add
jmp
mov
mov
cltd
mov
mov
cwtl
test
sub
add
movzbl
add
xlat
mov
pop
pop
dec
sub
or
popa
push
xor
mov
add
lar
mov
cmp
mov
add
add
nop
out
mov
or
push
sbb
push
dec
add
jns
lea
loopne
js
int3
mov
push
pop
fwait
add
aam
mov
sbb
popf
add
leave
sub
nop
push
test
test
xchg
cld
mov
add
fisubs
sbb
sub
lock
inc
in
mov
dec
or
jo
repz
mov
iret
adc
and
rcl
lods
add
out
push
xor
fwait
cltd
sub
dec
das
sbb
add
lahf
xor
nop
sbbl
orb
jo
mov
push
mov
ss
inc
adc
xchg
dec
addl
addl
xor
incb
xor
dec
cmp
repnz
mov
ja
nop
shl
jbe
add
pop
add
sbb
and
and
int3
dec
fisubrl
lods
cmp
repnz
pop
and
push
lret
lds
cmp
xchg
andb
jp
add
int3
call
nop
sbb
jecxz
nop
xor
add
and
jmp
dec
jns
out
jmp
pop
movntq
out
out
std
mov
std
add
cld
scas
pop
cltd
out
data16
scas
add
dec
rorl
add
add
add
dec
add
std
std
call
out
loop
jo
loop
fisttpll
add
dec
imul
in
aam
jmp
cs
and
std
andl
jmp
xchg
pop
cmp
xchg
jo
imul
mov
pop
int3
lret
add
mov
add
dec
jp
nop
sub
xchg
add
test
xor
add
mov
xchg
cmp
nop
and
shl
jbe
sub
ss
add
nop
xor
cwtl
cmp
arpl
add
or
mov
add
sbbl
xor
mov
movsb
add
smsw
add
repnz
mov
and
pop
nop
xor
ret
jo
pop
push
xor
dec
mov
sub
xchg
fcomps
jp
add
ret
int3
cmp
nop
int3
xor
push
pop
add
and
mov
add
int3
sbb
cmc
or
push
and
cmpsl
sti
mov
andb
push
xchg
adcl
fadd
mov
das
add
jb
add
cmp
add
add
push
add
add
mov
int3
pushf
cmpsl
or
or
sbb
imul
sub
jle
add
push
jecxz
or
int3
nop
xor
ret
xchg
add
dec
jg
cltd
mov
mov
int3
lea
mov
stos
outsb
fiaddl
stc
nop
sub
addr16
dec
inc
icebp
pop
test
mov
push
pop
xor
add
or
mov
sbb
jnp
add
ja
or
inc
dec
mov
nop
inc
lea
pop
test
int3
add
sysret
sub
add
orb
int3
add
jae
add
jo
outsb
int3
cmc
xchg
cmp
pop
andb
xchg
lock
lea
int3
aas
xchg
push
rcrl
jg
add
pop
jmp
js
adc
lcall
cltd
xchg
roll
pop
dec
pushf
add
xchg
pop
mov
add
stc
xchg
add
push
nop
aas
inc
sbb
add
cs
jo
icebp
mov
fsubp
xchg
and
in
sti
repnz
add
fldl
pop
and
add
out
add
add
mov
add
mov
push
insb
incl
xor
call
es
push
lea
out
dec
decl
sub
mov
pop
mov
pop
out
mov
add
sub
divb
add
repz
int3
inc
nop
out
pop
ljmp
repz
add
pop
add
bound
imul
cmc
jle
add
cmp
out
sarl
out
daa
out
cmp
dec
add
out
add
add
add
add
addb
out
add
out
add
out
out
out
out
add
dec
out
out
add
cltd
std
pop
popa
cltd
out
out
pop
aas
std
xchg
fsub
add
loopne
out
out
data16
shl
and
dec
add
rolb
xor
add
mov
sub
inc
xor
xchg
int
int3
les
add
or
call
stc
call
aad
and
loop
add
int3
inc
ljmp
mov
xor
inc
leave
fs
ds
and
push
dec
adc
nop
mov
adc
nop
and
ja
push
mov
call
add
negb
mov
into
and
xorb
popf
ljmp
adc
inc
stos
pop
push
xor
sub
sbb
add
and
jmp
movsl
inc
jo
adcl
int3
add
nop
xorb
add
xor
xor
ljmp
divb
daa
cmp
pop
push
and
roll
nop
mov
nop
nop
rorb
test
stos
adc
sbb
shll
add
sbb
push
call
sub
pop
sbb
int
xchg
push
ljmp
pop
and
mov
call
roll
inc
xorb
mov
adc
int3
repz
int3
sbb
int3
aad
je
call
int3
xchg
call
sti
jae
add
andl
inc
gs
int3
add
rorb
nop
shrl
sbb
ja
pop
mov
mov
add
cli
mov
mov
sub
rorl
repz
mov
adc
fwait
jns
pop
es
add
cmp
pop
jo
cmp
mov
add
in
sbb
into
sbb
add
and
xchg
xchg
push
mov
mov
inc
fwait
lea
and
fimull
pop
int3
add
daa
xor
mov
int3
nop
cltd
into
loopne
jo
inc
pop
add
push
inc
dec
xor
rolb
add
xchg
mov
jne
xor
sub
int
nop
add
dec
and
loopne
xor
sub
mov
xchg
addb
fsubrs
nop
jo
add
stc
add
inc
pop
aaa
ss
movsb
ljmp
mov
pop
inc
push
adc
jno
bound
and
jo
xchg
loopne
add
and
repnz
add
arpl
pop
add
fwait
aam
nop
ret
int3
test
nop
nop
lahf
and
addb
sub
jns
stc
add
addr16
mov
cmc
pop
mov
pop
sub
dec
push
inc
sub
inc
daa
int3
add
ret
mov
xchg
add
nop
nop
insb
mov
repnz
mov
add
ret
arpl
xlat
add
sbb
sbb
addr16
add
fistl
mov
sbb
cmp
leave
and
clc
sub
adc
add
xor
nop
fsubrs
fadds
add
sub
mov
in
add
clc
xor
fdivs
cmp
lret
movsl
mov
outsl
neg
cmp
es
aaa
pop
add
int3
or
fidivrs
int3
add
add
add
pusha
jb
add
mov
pop
add
rcll
pop
test
add
adc
fs
xchg
add
mov
mov
jae
add
int3
add
dec
ss
jo
aas
aas
sub
neg
aam
mov
sbb
add
sbb
sub
sub
dec
arpl
fs
add
std
scas
cs
out
jns
rorl
popf
cmp
add
std
pop
out
out
jg
add
out
lcall
sbb
and
movl
rolb
scas
push
add
les
lods
dec
adcb
je
pop
inc
mov
add
repz
and
int3
das
loopne
movl
js
add
int3
sub
int3
mov
and
gs
icebp
jecxz
inc
jb
add
call
andl
xlat
or
cmp
mov
and
nop
jae
in
pop
sub
pop
mov
int3
push
jae,pt
adc
add
sub
add
rcll
jge
jo
lods
dec
jl
call
mov
pusha
mov
sbb
add
int3
nop
inc
inc
pushf
push
mov
push
adc
push
or
add
andl
call
test
mov
arpl
add
mov
add
ds
mov
into
add
les
inc
add
sub
xor
jno
add
outsl
add
pop
xchg
rorb
jno
aad
call
gs
add
cltd
int3
loope
add
pop
imul
add
stos
repz
out
dec
mov
sub
xchg
pop
fldl
add
xor
nop
call
jmp
call
nop
add
xor
mov
nop
daa
jge
daa
std
add
rcrl
rcrb
jecxz
lret
jno
pop
inc
push
loop
jno
aad
aaa
jae
outsb
faddl
add
enter
sahf
popa
pop
mov
stos
add
fldl
add
mov
int3
call
mov
mov
add
popa
cmp
mov
add
xchg
ss
add
push
into
pop
lods
add
scas
adc
mov
add
mov
out
adc
out
pop
push
pop
mov
sbb
cmpsl
ds
or
adc
jo
push
mov
xor
mov
flds
mov
pop
and
pop
ret
xchg
add
xchg
mov
pop
and
mov
sub
rolb
nop
aad
movsl
dec
add
enter
jno
jo
jecxz
hlt
sub
add
jno
push
add
jl
pusha
test
sbb
add
pusha
cld
data16
add
or
out
jecxz
add
dec
out
add
loopne
out
out
out
add
cmp
out
dec
cld
out
sub
dec
cs
jle
cs
add
fisubrl
out
decl
out
cld
addl
dec
roll
add
out
dec
add
out
std
adc
xor
dec
std
inc
movsb
add
in
fs
add
push
xor
and
adc
dec
repz
int3
add
cmp
roll
xchg
add
inc
nop
add
inc
inc
add
pop
sub
testl
cmp
mov
adc
aas
xor
and
xlat
subl
popf
jnp
inc
cmc
adc
pop
or
add
cmpsb
mov
or
je
mov
add
in
cmp
int3
add
jg
add
cwtl
nop
add
ficoms
xlat
lahf
pop
add
mov
inc
dec
inc
in
lods
loop
lea
cwtl
jne
jae
add
decb
push
bound
stos
imul
sbb
nop
int3
mov
call
out
add
test
xor
add
mov
int3
mov
push
adc
add
jno
jmp
add
add
adc
lea
rolb
add
inc
or
sarb
fcmovne
add
sti
add
pushf
pop
mov
insl
xor
pop
jo
mov
call
aad
add
sub
in
mov
push
sub
xlat
jb
push
rcll
mov
int3
inc
mov
test
add
xor
xor
mov
into
add
push
mov
ficoml
jb
mov
pop
xchg
cmpsl
jns
into
xor
nop
dec
jle
insl
test
mov
fnsave
stos
pop
and
nop
das
sub
nop
int3
in
xchg
push
add
test
rcll
and
sbb
or
sbb
mov
lods
into
arpl
outsl
test
nop
popf
mov
lret
jb
push
xchg
fadds
sahf
sub
xor
int3
nop
mov
jo
loop
cmp
mov
andl
loopne
xor
nop
clc
rorl
add
fbstp
mov
roll
call
add
or
push
das
fdivl
dec
nop
pop
nop
add
sbb
pop
add
add
mov
pop
test
cmp
push
add
jne
fildl
std
into
daa
or
inc
sar
int3
pop
test
inc
add
jo
add
xor
or
pop
add
jb
sub
dec
addr16
int3
jmp
fdivrs
add
add
xor
aad
jb
in
inc
lret
int3
ficompl
mov
inc
movsb
add
ds
pop
addb
les
call
cwtl
int3
int3
mov
adc
add
and
jo,pt
inc
push
inc
add
fisubrs
inc
push
jnp
mov
mov
xchg
nop
sub
stos
jle
imul
mov
int3
mov
call
int3
add
add
push
inc
push
inc
jo
lds
jo
jl
add
or
hlt
add
jge
push
mov
add
push
ss
add
icebp
sub
mov
add
jmp
adc
push
andb
mov
add
xlat
add
mov
jno
add
xor
add
nop
add
add
pop
fnstsw
fbstp
mov
sbb
jo
lret
adc
xchg
or
add
pop
inc
sahf
inc
int3
mov
add
add
cmp
add
out
cld
std
out
add
mov
add
scas
out
data16
cmp
orb
mov
cs
add
cld
add
add
push
cld
repz
jmp
out
aas
std
add
pop
cld
cld
out
jmp
cmp
loopne
js
pop
int3
sbb
xchg
mov
int3
xchg
aam
call
mov
add
add
popf
add
cmc
jb
or
sub
pop
sub
sbb
jns
add
mov
adc
mov
and
mov
add
cmp
add
outsl
add
sub
adc
xor
adc
nop
fmull
or
cmc
and
fldl
and
stos
or
adc
mov
add
add
aad
mov
jb
inc
sub
popf
das
add
or
add
mov
sbb
and
add
add
out
dec
inc
pop
call
repz
mov
pushf
lret
add
pop
adc
xor
cmpsb
int3
lret
das
nop
jo
jmp
add
call
jmp
shll
je
mov
lret
lea
adc
inc
add
rorb
mov
fidivrs
nop
adc
jae
jbe
mov
and
arpl
inc
add
std
and
lahf
cld
xor
insl
push
jns
add
inc
cmp
pop
int3
jbe
inc
push
mov
mov
mov
sbb
pop
pop
pop
ds
jno
mov
xchg
std
inc
add
xor
lret
test
int3
pop
jecxz
int3
bound
xchg
mov
add
rcl
add
add
lods
jge
fildl
push
shll
mov
lea
lods
push
mov
fisttps
nop
add
call
add
push
and
cmc
lods
divl
inc
out
andl
loope
int3
mov
pusha
incl
insl
dec
leave
inc
xchg
pop
inc
xchg
xchg
pop
repnz
add
mov
xor
cmp
out
insb
out
jecxz
mov
mov
jmp
add
or
inc
add
mov
iret
in
add
cmp
push
mov
lds
and
push
jb
inc
add
mov
cmp
jo
mov
inc
loopne
movsl
add
dec
std
add
xchg
mov
xchg
mov
add
push
test
jne
pop
mov
out
les
push
add
pushl
int3
and
push
add
jne
roll
dec
js
add
xor
lret
xor
sub
addb
imul
inc
jmp
xchg
pop
mov
jb
lea
jo
mov
stc
add
lds
add
nop
cs
aam
xorb
xchg
add
inc
cmp
inc
sbb
lods
mov
add
inc
fadds
push
inc
pop
pop
mov
fisttpl
jo
bound
or
add
add
add
mov
scas
jnp
add
add
pop
hlt
sub
xorb
jp
cmp
push
xchg
mov
add
shlb
sbb
scas
add
insb
ret
push
dec
les
and
add
je
pusha
add
and
add
nop
sub
ss
add
sub
rclb
cmp
aas
mov
gs
jae
bound
gs
jp
outsb
jns
xor
jmp
jns
out
add
out
cmpsl
out
out
push
cld
out
out
pop
add
out
out
add
out
add
clc
add
imul
out
sub
add
add
popa
pop
out
out
incl
shl
add
out
stos
call
add
dec
out
cmp
add
out
cld
jmp
out
add
out
mov
add
add
add
out
sub
add
cmp
mov
imul
rcrl
and
int3
lret
popf
movsl
orl
shlb
mov
into
stc
mov
add
imul
int3
popa
xchg
mov
fsubs
nop
nop
rcr
pop
nop
mov
rcr
mov
add
cmp
inc
imul
jp
out
cmpsb
lock
add
xchg
nop
add
ss
push
mov
mov
lea
lea
mov
add
add
inc
int3
xor
and
inc
push
mov
jbe
nop
jb
dec
or
add
add
aam
adc
lea
sti
aaa
addb
push
fdivrl
add
inc
repnz
int3
ljmp
add
jns
add
pop
bound
call
aad
nop
pop
xchg
mov
add
imul
add
and
and
mov
in
incl
nop
jne
xor
mov
add
rorl
add
js
lahf
push
imul
jo
push
inc
lds
movsb
push
add
adc
mov
fisubs
sub
mov
cltd
mov
popf
mov
fisttpll
inc
sahf
and
es
addb
pop
pop
xchg
mov
adc
xchg
add
mov
outsl
jo
sub
movsb
add
or
add
add
cmp
and
imul
push
push
fcompl
add
mov
add
dec
stos
or
jg
add
push
mov
add
add
nop
call
add
aad
add
sbbl
notb
add
lcall
arpl
add
pusha
mov
nop
pop
xor
int
add
divb
lea
jle
std
pop
into
nop
int3
je
xor
add
imul
fwait
add
mov
add
pop
inc
fimuls
add
add
fidivs
add
movl
lods
jp
lea
fwait
add
adc
add
jle
pop
sbb
testl
push
enter
mov
js
int3
xchg
in
add
fistpll
add
cli
xchg
mulb
lret
mov
add
xchg
mov
call
ret
in
jp
and
out
pop
gs
call
add
xlat
int3
stc
dec
xchg
sbb
pushf
push
pop
add
or
out
dec
lret
pop
or
xlat
cmp
add
mov
in
cld
fcoml
and
add
in
xor
aad
jl
push
rcr
nop
inc
adc
xchg
cmpsl
mov
nop
dec
pop
mov
jl
pop
jno
and
push
cmp
jmp
add
and
fists
dec
lods
call
push
mov
adcl
push
dec
add
add
lods
mov
dec
sub
jns
cli
cli
adc
iret
enter
add
pop
scas
inc
aad
mov
cwtl
testb
inc
call
in
nop
arpl
jp
xor
inc
mov
cmc
mov
add
add
cmp
pop
adc
bound
pop
out
jo
std
jge
mov
add
xor
sbb
fwait
mov
ret
jb
outsb
sbb
lds
inc
movsl
xor
mov
add
sbb
pop
lds
mov
mov
inc
cmp
and
addl
inc
mov
enter
nop
mov
dec
sbb
sahf
or
add
mov
xor
add
testb
jo
pop
inc
mov
pop
sub
cmpsl
lea
add
xchg
mov
nop
lcall
or
add
insb
jg
sub
xor
mov
lcall
jecxz
nop
sbb
inc
mov
jno
add
mov
jo
lea
int3
mov
icebp
mov
add
int3
pop
mov
mov
inc
add
mov
xchg
insb
bound
pushf
dec
aas
jno
nop
movb
ret
add
add
jae
movb
push
or
add
push
in
int3
hlt
and
sub
and
lret
and
add
nop
push
sub
int3
fistpl
sahf
lea
mov
outsl
add
add
jb
fstpl
roll
sbb
xchg
test
int3
pop
inc
lods
jnp
add
loopne
sub
dec
dec
int3
add
xchg
ljmp
push
add
in
int3
mov
std
cmpsl
iret
add
sarl
sbb
mov
fiaddl
ss
jo
stos
sub
add
ss
jnp
add
xchg
cmp
sub
pop
add
popf
sbb
mov
and
pop
popf
add
in
rcr
add
ljmp
jge
outsb
sbb
inc
sbb
and
movsl
sbb
inc
pop
add
ljmp
add
fcom
adc
addb
mov
fisttps
add
and
add
pop
push
add
mov
pushf
add
stos
xchg
lea
add
jl
cmp
push
add
mov
nop
add
pop
bound
add
popa
mov
mov
mov
jge
add
sti
add
insl
arpl
cltd
nop
aam
fsubs
sahf
std
out
incl
out
push
decl
pop
out
dec
add
out
pop
mov
sub
out
add
cld
pop
mov
ja
add
add
nop
les
add
dec
xor
xchg
mov
das
inc
jo
sbb
add
insb
mov
and
and
add
int3
add
out
repnz
or
jb
dec
pop
fisttpl
inc
add
jne
or
jle
inc
sub
push
push
inc
nop
push
in
cmp
xchg
jae
in
dec
inc
add
xor
incb
jo
popa
xor
es
nop
mov
test
add
mov
sbb
sbb
mov
add
add
xchg
or
jo
or
xchg
mov
add
mov
js
push
ret
add
xchg
cmp
add
sbb
add
jecxz
or
jno
nop
stos
ja
mov
fs
add
inc
inc
pop
int3
adc
cmpsb
xorb
nop
je
mov
ja
int3
sub
int3
in
sub
push
pop
scas
dec
add
gs
add
subb
test
inc
jbe
icebp
add
call
xchg
add
outsb
cmc
add
xor
dec
aas
xchg
push
testb
fimuls
popf
sub
xchg
inc
fstps
nop
bound
pop
mov
test
jnp
cwtl
addb
and
stos
push
or
nop
insb
jbe
add
adc
cmp
pushf
and
mov
nop
add
xor
into
xor
jae
inc
xchg
cmp
add
jmp
xor
dec
jge
sbb
pusha
pop
pop
add
notb
add
scas
mov
sub
mov
pop
gs
mov
xchg
add
int3
push
xchg
jge
pop
add
das
or
cmp
call
pushf
add
add
nop
popf
addb
adcl
pop
dec
xor
mov
test
out
add
add
adc
test
int3
add
or
test
mov
jmp
lods
mov
xor
fsubl
out
sbb
ret
jo
nop
lds
nop
add
out
movsl
es
add
jg
add
sub
jecxz
adc
and
cld
and
add
add
je
ret
nop
arpl
or
dec
rolb
add
loop
cltd
xor
add
cld
lock
adc
out
inc
add
pop
cld
mov
add
std
add
outsl
loopne
cs
mov
out
add
jle
pop
scas
scas
add
sbb
mov
cltd
fsubs
cld
dec
out
data16
xchg
imul
roll
out
out
out
xchg
pcmpgtd
dec
std
xor
add
out
add
add
shll
enter
and
add
data16
add
loopne
out
pusha
dec
add
orl
mov
cmpsb
mov
mov
into
mov
insb
jmp
outsl
int3
int3
nop
dec
pop
pop
add
sbb
add
fisttpl
add
add
mov
cli
mov
add
aaa
mov
in
mov
mov
push
cmp
mov
xorl
jnp
decb
xchg
out
add
mov
cmpsl
mov
lea
or
push
xchg
add
sbb
and
mov
xlat
in
xor
mov
add
push
adc
int3
push
inc
jnp
cs
inc
outsb
int3
jo
gs
mov
nop
fsubs
jmp
push
xor
add
push
loopne
stos
add
gs
adc
add
add
add
adc
cmpsb
lea
jmp
add
cmpsl
leave
cmp
add
mov
lcall
je
testb
or
aam
int3
pop
dec
lea
xchg
add
call
sub
mov
rcl
inc
inc
or
and
cwtl
and
int3
jo
add
fndisi(8087
sbb
in
and
ds
sbb
add
call
add
pop
rol
int3
nop
stos
arpl
and
divl
aam
inc
dec
xchg
add
pop
out
adc
lods
and
add
xor
testb
mov
add
shlb
adc
pop
add
add
jb
adc
inc
jae
cltd
cmpsl
add
push
jmp
cmc
mov
jmp
xchg
mov
orl
out
out
addl
repz
outsb
pop
add
xchg
inc
add
pop
int3
call
mov
mov
and
test
dec
nop
pop
std
and
push
add
mov
dec
nop
ds
call
mov
movsl
sbb
int3
leave
hlt
ror
clc
sbb
mov
sbbb
ds
call
pushf
inc
xor
cmp
gs
inc
dec
mov
jl
xor
and
sbb
fmulp
lods
and
jb
jbe
pushf
nop
add
fs
mov
add
fcoml
dec
add
push
dec
add
xlat
jle
pop
orb
add
rolb
dec
jb
dec
and
inc
lret
push
add
cmp
sub
sbb
mov
gs
jb
lock
hlt
ljmp
inc
xchg
xchg
cltd
inc
nop
lcall
cs
icebp
jecxz
mov
lret
out
xchg
add
inc
mov
add
or
sub
clc
mov
nop
mov
pop
lea
mov
jmp
pusha
add
mov
cmpsb
jb
add
inc
enter
dec
enter
mov
test
adc
push
sbb
cmp
mov
xor
push
push
adc
pop
call
adc
pop
lahf
xor
int3
orb
jle
add
scas
movsl
push
add
jnp
xor
xchg
test
sarl
xchg
mov
sub
mov
add
add
fs
or
add
nop
push
sbb
mov
call
inc
lods
loop
rorb
test
xor
int3
fnstenv
dec
xchg
add
mov
cltd
sti
into
call
fwait
inc
rclb
jo
inc
movsl
dec
fcoml
fstpt
nop
pop
and
cmp
mov
mov
add
stc
xchg
pushf
testb
jecxz
add
movsb
cmp
mov
clc
out
lea
push
int3
add
push
xchg
or
jmp
push
add
add
mov
xor
inc
out
push
push
pop
int3
add
test
xchg
add
add
inc
or
mov
insl
inc
add
call
cmp
push
lds
test
jmp
jb
jnp
sbb
or
xor
xor
mov
dec
jle
in
and
mov
scas
add
cli
inc
sahf
pop
inc
inc
add
jns
adc
addb
mov
add
movsb
inc
push
into
inc
add
js
movsb
das
add
add
lods
sbb
xor
sub
das
dec
inc
add
nop
leave
fildll
mov
push
cmc
addb
lcall
dec
int3
loope
repz
mov
loopne
add
into
adc
adc
and
mov
shr
call
mov
das
call
cld
adc
add
or
jp
add
add
push
ret
mov
add
dec
and
inc
add
mov
pushf
std
scas
inc
popf
push
les
out
add
xchg
add
add
add
rcll
in
pop
mov
movsl
lret
out
repz
rorl
mov
mov
lods
inc
xchg
xor
mov
mov
pop
dec
add
push
int3
add
dec
add
sub
addb
and
add
add
xor
dec
imul
or
repnz
int3
mov
push
add
popf
lds
int3
add
pop
or
mov
int3
in
cwtl
pop
nop
jo
lahf
test
call
pushl
out
out
add
out
data16
out
inc
out
add
mov
add
xor
cltd
scas
out
cltd
add
cmpsl
out
std
dec
cs
out
scas
mov
cld
cmovge
cld
out
out
add
add
subb
std
std
jecxz
sub
lea
push
pop
mov
aad
arpl
nop
jmp
lcall
je
nop
test
cld
add
jmp
bound
stos
addl
jl
fnclex
add
int3
inc
cltd
shll
jecxz
nop
cmpsl
push
mov
dec
lret
sbb
mov
xchg
jmp
mov
add
fnstcw
inc
fisubl
pop
add
sub
push
hlt
add
int3
std
imul
push
xchg
add
inc
xchg
imul
add
sahf
mov
mov
push
imul
mov
nop
mov
popa
jl
jo
jo
adc
add
adc
pop
repz
mov
int3
mov
int3
add
add
dec
nop
call
and
sub
inc
clc
push
xor
adc
xor
xchg
add
nop
sub
push
jl
mov
jg
mov
add
cmp
pop
or
lea
add
call
fst
jo
push
inc
add
sub
add
out
cmp
movhps
rolb
mov
inc
add
nop
repnz
or
add
and
sbb
add
js
sbbb
add
pop
push
pop
inc
addb
sub
loop
jmp
rolb
mov
mov
xlat
int3
add
inc
mov
add
and
int3
es
cmpsb
roll
jns
stos
out
mov
lods
scas
insl
nop
xor
pop
add
pop
mov
pop
pop
out
cmp
inc
gs
movsb
lock
add
in
mov
nop
add
test
mov
dec
repnz
pop
int3
sub
rsm
and
add
xchg
filds
pop
or
je
jbe
inc
add
pop
aas
cmp
adc
sar
inc
mov
nop
orb
cs
jg
add
aad
jns
insl
int3
add
mov
sbb
mov
add
lds
fistps
pop
inc
nop
lahf
jmp
dec
dec
arpl
call
test
adc
lea
push
xchg
aad
jecxz
xor
and
or
outsw
test
int3
nop
jae,pt
out
test
mov
out
cmp
inc
add
jns
cmc
add
push
mov
mov
inc
call
loope
add
inc
add
or
jns
js
add
mov
bound
add
add
sbb
add
xchg
inc
ss
jno
and
dec
add
pop
add
add
cmp
cmp
lock
push
lea
xchg
xchg
pop
dec
nop
add
popa
js
adc
xchg
loopne
add
ja
fstps
jo
leave
test
jae
add
mov
sbb
dec
dec
add
mov
dec
insb
push
add
mov
pop
mov
push
mov
inc
dec
popl
pushf
or
stc
inc
add
popf
add
add
sbbl
lock
das
addr16
sbb
jae
lock
and
jmp
lret
lods
in
add
jae
mov
ret
and
int3
sbb
xchg
dec
fidivrs
sbb
inc
int3
or
cmp
subb
add
xor
outsl
add
out
out
cltd
shlb
out
nop
out
shl
cmp
xadd
out
outsw
jb
je
fs
imul
outsl
arpl
popa
jno
jbe
imul
imul
outsb
gs
outsl
js
fs
jns
imul
arpl
gs
lcall
out
daa
add
cld
add
sbb
or
add
mov
rol
filds
daa
push
pop
or
inc
xor
jne
add
mov
add
add
nop
aam
inc
inc
pushf
clc
insl
xchg
inc
add
dec
out
lahf
add
mov
call
dec
scas
inc
cmp
mov
pop
add
add
popf
in
adc
sbb
mov
adc
add
addl
roll
int3
iret
es
add
xchg
lds
jg
add
icebp
push
add
test
jmp
hlt
mov
mov
pop
push
add
nop
jp
adc
or
loopne
xchg
ltr
jp
mov
addr16
add
sub
loopne
fdivr
bound
rol
cmc
rsm
xlat
add
push
xchg
lods
rclb
test
enter
add
sahf
mov
push
add
push
jno
push
sti
cmp
mov
xchg
mov
mov
add
ljmp
inc
mov
fwait
xor
cmpsl
add
fs
inc
lods
mov
and
mov
lea
call
imul
mov
add
loope
incb
xchg
xchg
cmp
jo
mov
stos
add
xchg
out
lea
add
and
call
scas
inc
add
adc
xchg
popf
lea
dec
push
xchg
jo
lret
stos
aaa
or
add
add
cld
ret
inc
cmp
mov
xchg
xchg
std
mov
loopne
add
pop
popf
push
ficoms
add
add
int3
inc
std
mov
fstpt
or
push
enter
add
adc
sbb
nop
xorb
test
add
lods
xor
mov
das
inc
call
add
je
mov
and
mov
or
inc
push
call
mov
or
lret
add
pop
bound
aad
add
leave
mov
jo
sbb
lcall
or
jb
ljmp
nop
mov
mov
loope
scas
add
sub
add
dec
mov
add
jnp
xchg
int3
inc
pop
imul
cld
push
add
rcrl
lea
inc
xchg
dec
outsl
add
xor
mov
lods
call
lock
push
aam
clc
cmpsl
dec
xor
add
sbbb
ret
or
jo
inc
aad
push
add
add
out
mov
add
or
loopne
ret
add
loop
add
sbbb
cmp
add
add
das
fbstp
sub
mov
lea
add
int3
sbb
insl
call
add
lock
and
xchg
add
add
into
inc
add
and
sub
nop
jmp
xchg
mov
mov
cmpsl
adcb
addl
cltd
fimuls
pop
int3
leave
dec
daa
inc
jb
xor
outsb
add
xor
in
add
cmp
fisttpl
add
jl
add
or
add
or
adc
add
pushl
inc
add
lahf
cltd
mov
mov
push
jge
xchg
adc
sbb
add
xchg
in
testb
dec
int3
push
dec
add
xor
mov
subb
xlat
push
iret
int3
std
mov
int3
lahf
push
xor
es
jo
xlat
lcall
pushf
cmp
add
ret
insb
sbb
add
add
inc
jnp
add
xor
stos
imulb
add
test
and
and
jnp
add
add
sahf
andb
mov
jo
lcall
add
int3
add
inc
dec
repz
nop
call
xor
mov
xor
inc
mov
pop
cmpsb
add
icebp
sbb
xchg
mov
add
mov
int3
add
loope
int3
and
in
inc
adcb
add
in
ficompl
pop
add
jp
add
nop
mov
nop
nop
in
mov
nop
rorl
adc
aaa
add
cmpsl
inc
dec
aad
xor
push
push
add
stos
adc
and
xchg
mov
add
xchg
ds
and
jmp
jb
nop
ljmp
lds
icebp
int3
dec
jecxz
call
notl
pop
fs
add
sbb
scas
scas
lods
stos
or
outsb
xchg
mov
xor
fwait
jae
push
sbb
jmp
add
ret
add
xchg
cltd
orb
nop
add
movsb
ljmp
andl
pop
or
push
xchg
jecxz
dec
inc
mov
addl
mov
imul
mov
sub
inc
out
test
loopne
out
cltd
out
out
nop
add
mov
jae
dec
out
mov
add
loop
out
dec
out
std
cmp
int3
nop
jne
sbb
adc
jp
add
popf
lods
frstor
lea
add
shrl
adc
mov
call
incb
aaa
push
cmp
repnz
add
call
mov
cmpsb
push
sub
push
xchg
mov
push
jb
outsb
xor
mov
pushl
jp
mov
pop
jne
dec
mov
aaa
add
cmpsl
les
xor
sarb
andb
enter
in
xor
sbb
add
push
cmp
xchg
nop
popa
xor
nop
inc
xchg
push
pop
nop
nop
cmpsl
xchg
mov
sub
mov
out
mov
xchg
xor
adc
or
mov
and
pop
and
call
int3
cltd
cmp
fdivrs
mov
push
add
add
ror
add
mov
test
inc
add
insl
or
dec
test
ret
add
cmpsl
xchg
inc
mov
add
jne
mov
add
test
scas
aaa
dec
leave
mov
push
imul
fildl
mov
nop
lea
int3
jo
push
mov
fmulp
inc
cmpb
mov
dec
xchg
add
add
push
inc
add
pusha
adc
iret
or
push
mov
lcall
xor
cmp
fiadds
add
shrl
outsb
xor
cmpb
int3
inc
mov
iret
leave
mov
add
lret
sbb
mov
add
and
add
mov
fadds
add
mov
add
pop
add
int3
cmpsb
xchg
jae
add
loope
ficomps
das
add
or
or
out
xchg
inc
ds
mov
add
call
call
add
in
mov
dec
inc
out
add
mov
call
mov
xlat
add
jle
and
add
add
jbe
add
pusha
nop
int3
sbb
sub
fadds
push
mov
jecxz
pushf
mov
add
add
add
jecxz
and
mov
fwait
adc
call
ja
cwtl
and
and
nop
lods
xlat
mov
aad
add
xchg
inc
pop
mov
hlt
nop
add
push
inc
daa
call
jbe
or
add
mov
stos
nop
int3
popa
bnd
adc
rolb
add
add
jp
cwtl
adc
push
fbld
xchg
lods
add
inc
add
sahf
nop
add
adc
imul
add
mov
outsb
cltd
les
inc
jbe
mov
jns
nop
les
cmp
add
add
adc
jge
add
jnp
mov
sub
xor
and
add
xchg
outsl
inc
into
sti
jo
jne
adc
int3
imul
jb
add
add
xor
jne
add
xor
stos
add
popl
popf
movsb
sahf
push
clc
fadds
nop
lret
jne
int3
jecxz
nop
add
add
fidivs
add
insl
lret
add
inc
mov
jo
cmp
mov
and
call
outsb
add
out
jecxz
dec
sub
xchg
mov
or
jno
add
pop
or
or
loop
int3
add
std
popa
pop
add
jge
mov
int3
dec
pop
cwtl
mov
or
xor
int3
add
fmull
sub
int3
add
pop
movsl
stos
pop
add
xchg
inc
icebp
add
xchg
fwait
pushf
incb
xor
xlat
ret
add
or
lea
adc
cmp
dec
mov
add
lock
nop
ficomps
nop
cwtl
aas
das
sahf
gs
movsl
mov
jb
test
fstl
call
call
add
mov
pop
out
add
mov
dec
fnstsw
push
add
repz
nop
inc
xchg
cli
add
jo
and
scas
cld
adc
jg
add
fidivrs
int
jne
gs
insl
outsl
insb
jne
outsl
jp
imul
jb
jae
je
bound
outsl
fs
insb
bound
outsl
jo
data16
outsl
je
push
arpl
jmp
out
out
mov
mov
loope
int3
sbb
pop
xchg
jg
jo
dec
and
fldcw
jae
and
mov
adcl
add
add
sub
mov
or
cmpsl
test
fistps
or
loop
out
lea
or
add
mov
jle
inc
mov
add
inc
out
lock
icebp
pop
into
mov
arpl
add
repz
add
add
xchg
add
mov
and
and
adc
xchg
lea
subb
rcrl
dec
scas
jmp
inc
xchg
int3
dec
and
add
popa
xor
add
jnp
dec
stc
add
nop
lret
mov
fistl
sub
add
add
jmp
sub
mov
inc
inc
mov
jo
addr16
xchg
not
pop
add
mov
add
xchg
int3
enter
shl
xchg
loopne
nop
jb
push
mov
add
adc
cmpsb
fdivrs
adc
add
cmp
inc
in
sub
mov
movsb
xor
int3
test
and
jns
iret
and
dec
test
fcmovbe
add
or
fwait
lds
jb
jecxz
je
push
mov
mov
lcall
inc
pop
mov
jnp
xor
xchg
add
jl,pn
rolb
jo
cmpsb
mov
loope
xor
cli
clc
pop
das
inc
nop
pop
xor
pop
andl
xor
or
scas
add
ss
jns
dec
insl
pop
add
int3
add
add
push
xchg
jecxz
add
push
test
jnp
int
sbb
and
xchg
nop
add
icebp
lret
mov
outsb
fldt
xchg
pop
movsb
add
lret
notb
mov
mov
jo
jae
xor
int3
lds
sub
iret
add
mov
cmp
mov
aam
jo
adc
aam
add
push
add
xchg
xor
adc
add
jecxz
in
pop
nop
adc
pop
sub
add
ja
scas
add
js
sub
mov
inc
jo
out
pop
std
mov
fnstenv
dec
lcall
or
int3
mov
nop
stos
inc
cmp
mov
nop
mov
aas
add
or
sti
sbb
lret
cs
mov
add
jle
xlat
push
nop
mov
lds
and
loope
das
add
add
imul
add
fiaddl
push
imulb
and
dec
je
pop
add
jle
xor
pop
xlat
lea
pop
xor
add
adc
sub
nop
and
movsl
clc
mov
adc
imull
mov
sub
mov
loopne
add
ror
add
int3
jb
pusha
popf
pop
inc
add
int3
sbb
jb
mov
data16
add
imul
int3
pop
and
mov
inc
pushf
lds
add
test
mov
inc
dec
add
add
add
shrb
int3
push
add
scas
push
sub
cmp
leave
mov
int3
xchg
movsl
inc
nop
xchg
push
icebp
lcall
fcompl
add
dec
dec
in
insl
sub
jb
pop
stos
nop
add
add
out
out
fdivr
ss
dec
out
out
out
add
add
jl
pop
add
xor
mov
fisubl
leave
jge
mov
movsl
flds
mov
mov
adc
add
cmp
aam
nop
fidivrs
add
enter
mov
xor
mov
aam
and
mov
add
popa
into
nop
and
ja
stos
fwait
add
sbb
sub
xchg
mov
mov
inc
jns
nop
xor
aas
add
cmc
mov
add
add
mov
xor
adc
add
add
sbb
loope
mov
dec
sbbb
xchg
hlt
inc
and
inc
fstl
xchg
add
add
adc
ss
adc
xchg
jmp
dec
add
dec
mov
clc
and
clc
xchg
add
ljmp
sub
sbb
adc
xor
and
jl
cmp
pop
int3
add
xchg
sub
and
das
mov
sub
enter
addr16
xor
addr16
adc
add
sarb
jno
call
dec
add
dec
ret
aad
add
aam
pop
mov
jl
jbe
xlat
loop
cwtl
xchg
add
add
or
aam
cs
sub
nop
mov
or
mulb
cmpsl
mov
add
push
mov
dec
sub
or
jge
aam
bts
add
lock
int3
nop
mov
mov
mov
ds
add
push
push
int
add
dec
mov
mov
into
das
int3
add
xor
add
cmp
dec
out
add
mov
cmp
jo
cmp
xlat
adc
mov
push
dec
lcall
add
adc
add
inc
clc
mov
inc
rcl
jae
cmc
movb
jb
popf
mov
add
testb
std
mov
mov
fsubp
cmp
lods
xorb
movl
mov
mov
fcoms
mov
add
pop
fiaddl
aam
xorb
add
dec
dec
cld
mov
aad
shr
mov
loopne
testl
mov
push
add
pop
mov
divl
popf
fidivs
xor
les
sbb
add
jmp
inc
fs
add
jb
pop
arpl
repnz
sarl
xor
sub
push
lahf
add
ret
mov
add
xchg
and
mov
xchg
jno
int3
int3
cltd
adc
mov
mov
retw
insl
bound
add
sub
adc
add
lea
test
out
scas
add
dec
pop
add
out
xor
aaa
push
loop
sldt
cmp
loop
add
data16
dec
mov
dec
out
scas
out
out
out
popf
add
out
add
lcall
add
sub
add
add
add
fwait
xchg
add
add
add
out
loopne
add
aad
mov
add
add
inc
cld
mov
std
dec
add
outsl
test
out
cmp
out
std
int3
cmc
cmpsb
pop
std
inc
add
pop
cmp
fcompl
int3
inc
stc
cmp
inc
dec
leave
iret
mov
int3
ret
int3
shrl
jbe
lea
adc
mov
ja
stos
add
add
lock
sarb
add
dec
mov
dec
lock
jno
pop
addb
aas
cltd
repz
mov
pop
nop
jle
mov
xchg
movsl
add
cmp
adc
add
jb
inc
loope
rorl
mov
add
addl
add
test
pop
daa
push
sbb
add
shll
aaa
lods
and
int
jns
into
add
cmp
lock
enter
and
xor
push
mov
loopne
orb
mov
push
pop
mov
jmp
lock
negb
rolb
int3
jb
inc
ret
call
scas
add
jno
add
xor
add
jle
add
push
mov
add
fs
mov
fisttpl
inc
add
rorl
nop
jb
mov
mov
cmpsl
push
sbb
test
and
mov
std
pop
xchg
fisttpll
or
int3
jge
mov
inc
icebp
pushf
sbb
jmp
iret
inc
add
ret
nop
fbstp
xlat
jmp
add
lea
addb
sti
movl
pop
sub
cmpsb
mov
fistps
xchg
test
mov
popl
int3
add
cmp
add
jb
mov
mov
cmpsl
aas
fnstsw
mov
jecxz
jo
mov
sete
nop
into
fidivs
pop
fildl
mov
cmc
dec
sub
add
jg
hlt
adc
mov
pop
loope
bound
xchg
adc
jno
cmp
jo
in
lret
dec
fnstsw
add
mov
bound
dec
add
sub
nop
or
xchg
dec
jb
and
inc
adc
mov
addl
pop
inc
sub
add
roll
nop
adc
pusha
and
int
add
jo
mov
adc
int3
cmp
inc
pop
xchg
add
mov
mov
imul
add
cwtl
adcl
pop
ds
mov
dec
loope
call
inc
cmpsb
mov
outsb
xor
jne
add
add
out
add
add
add
in
out
or
add
and
arpl
cwtl
inc
add
xchg
add
add
sub
add
or
add
xchg
add
inc
add
sbb
add
addr16
in
lea
scas
xchg
test
pop
into
faddl
sub
add
jne
sbb
sub
cltd
xlat
push
add
xor
into
lret
andb
movsl
sub
or
add
inc
add
pop
mov
add
scas
xor
call
add
xchg
add
jb
sbb
das
inc
jbe
add
sarl
cmp
xor
nop
mov
add
add
bound
nop
cmp
pop
int3
inc
mov
add
int
inc
sub
in
dec
add
enter
add
fistl
add
and
jb
cmp
int3
les
dec
sub
or
jb
bsr
xchg
push
roll
movb
add
dec
sub
pop
out
call
loope
and
sub
int3
xor
xor
aaa
data16
jl
pop
add
pusha
add
cwtl
inc
daa
mov
and
xlat
stos
push
hlt
leave
int3
add
mov
xlat
sbb
inc
nop
aaa
outsb
in
cmp
add
cmpsb
jl
out
jo
mov
pusha
pop
add
or
add
int3
mov
xor
roll
gs
fistps
out
mov
add
sbb
stc
add
ss
cmpsb
xor
inc
pop
std
inc
and
lods
je
pop
outsb
or
add
pop
sbb
add
push
xchg
lock
mov
and
adc
add
ret
sbb
fildl
push
xchg
call
sahf
adc
nop
rcr
jo
add
jne
add
roll
xor
lcall
push
add
mov
inc
dec
jo
add
cmc
rol
lods
nop
add
lock
lretw
cwtl
add
add
xor
aam
int3
add
ds
cmc
mov
movsb
inc
out
decl
adcl
int3
add
gs
inc
sub
lea
xor
pop
imul
cld
push
jg
mov
jge
mov
mov
sti
add
mov
int3
inc
xor
outsb
lret
cmc
mov
fbld
out
aaa
addb
ret
sub
nop
or
das
add
loope
xchg
jbe
add
cmp
clc
nop
loop
cmp
ja
rcrl
addb
or
add
mov
inc
test
pop
push
pop
das
cltd
std
xor
add
dec
rorl
mov
shl
out
out
repz
rorb
add
ds
out
add
lahf
lret
out
cld
add
jo
loop
xchg
add
sbb
nop
scas
pop
add
mov
dec
adc
and
ljmp
cli
mov
into
in
shlb
mov
test
call
out
add
imul
verw
add
icebp
add
arpl
adc
lcall
addl
outsb
mov
add
mov
pop
nop
add
nop
int3
cltd
inc
and
push
add
int3
add
pop
xor
call
lcall
int3
nop
shrb
cmpsb
mov
cld
in
jo
imul
nop
mov
mov
mov
mov
mov
jb
outsl
mov
fstl
movsl
add
sbb
fildl
sub
pop
mov
mov
testl
fcoms
add
add
or
dec
nop
int3
adc
xchg
das
add
mov
add
mov
add
or
sub
nop
ficoms
outsl
adc
push
js
add
loope
add
mov
cmpb
aam
add
xor
aam
xor
add
movsl
js
add
mov
iret
cmpsb
add
push
xor
add
repz
aam
pop
add
add
ja
inc
aaa
and
or
int3
ret
sbbb
sub
mov
stos
xchg
add
pop
inc
stos
int3
lods
xor
xchg
add
popf
jbe
inc
inc
mov
cmpsl
out
testb
jbe
mov
xor
adc
sub
out
mov
dec
iret
xor
mov
addb
push
out
pop
inc
add
xchg
int3
mov
loope
fmul
mov
pop
inc
mov
add
cmc
divb
mov
push
aam
xchg
fcoml
add
push
stos
inc
pop
sbb
int3
daa
mov
cltd
gs
lea
mov
imul
int3
add
sub
nop
add
dec
arpl
int3
les
xchg
xor
nop
adc
testb
add
inc
data16
xor
add
dec
shl
out
cmpsl
dec
out
xchg
loop
scas
xor
add
std
cmp
out
mov
add
cs
out
mov
cld
add
or
repz
popa
out
mov
lcall
cmp
loopne
cld
add
std
out
out
out
mov
out
out
shl
lret
loopne
pop
cs
xchg
out
out
aaa
add
add
cld
aaa
add
test
daa
add
jge
add
mov
bnd
mov
lea
push
xor
mov
outsb
jg
mov
ret
movsl
icebp
cmp
push
filds
add
and
fcmovne
gs
adc
xor
add
pushf
jecxz
mov
cmp
scas
mov
sub
mov
jmp
xchg
inc
add
das
cli
pop
mov
es
add
fucomp
aam
into
cmp
ret
xor
add
xor
mov
mov
or
lret
mov
push
mov
xor
sub
jo
outsb
out
add
sub
inc
add
cmp
pop
cmpsb
int3
add
cwtl
mov
xor
jbe
mov
add
inc
and
pop
nop
leave
cmpsl
mov
cmpsb
lret
sbb
pop
pusha
jmp
ss
jmp
cmp
xchg
pop
jno
inc
pushf
dec
movsl
xor
mov
xchg
add
pop
inc
fdiv
add
mov
mov
sub
icebp
nop
int3
insb
or
imul
popf
fidivrs
add
xchg
xor
cmp
and
aad
data16
push
xor
add
cmp
cmp
adc
nop
mov
pop
add
mov
add
jmp
lret
gs
xlat
cmpsb
jp
sub
add
add
lea
mov
mov
add
add
pop
es
in
int3
xchg
rcrl
subl
add
adc
push
add
in
push
mov
js
inc
inc
mov
ja
add
mov
mov
or
push
fisubs
sub
mov
inc
int3
mov
dec
sub
mov
lds
jmp
dec
mov
adc
nop
add
lds
testb
jne,pt
xchg
add
xor
mov
cmpsl
test
pop
inc
aam
add
xor
mov
mov
jae
and
mov
add
jp
mov
jmp
jo
pop
jno
add
mov
int3
subb
enter
inc
dec
aaa
push
scas
sbbb
inc
enter
mov
cmp
enter
mov
in
ret
les
mov
add
push
fldcw
clc
int3
cli
pop
jecxz
add
movsb
and
cmp
les
mov
add
repz
add
pop
jbe
xchg
mov
arpl
inc
out
stos
mov
xchg
add
fiadds
int3
ljmp
lea
jno
inc
out
dec
mov
add
movsl
mov
mov
imul
add
les
inc
cmpxchg
add
dec
add
add
nop
cwtl
dec
notb
je
test
jo
add
mov
dec
inc
mov
mov
bound
jo
mov
mov
nop
mov
orl
cltd
int3
xchg
call
add
mov
sbb
int3
add
int3
mov
mov
pop
pusha
ret
test
loop
inc
sbb
add
shrb
or
add
or
sub
push
jns
inc
add
jb
mov
pop
mov
ret
loope
add
mov
int3
add
outsl
mov
mov
xor
pop
dec
nop
fimull
pop
inc
mov
push
mov
sbb
mov
mov
int3
pop
jno
les
lods
aas
mov
out
lock
add
fsub
inc
mov
es
adc
and
jge
add
pop
dec
inc
xlat
add
mov
jnp
inc
inc
lods
test
jecxz
add
je
mov
xor
loopne
jle
lds
xor
add
mov
or
add
inc
xor
inc
aam
inc
call
inc
aaa
xor
add
in
cmp
nop
mov
pop
pop
add
clc
xor
xchg
xor
cmpsl
jo
cld
cmpsb
and
or
lea
bound
arpl
sub
inc
mov
lock
add
dec
enter
adc
mov
sbb
out
push
pop
nop
shl
push
or
and
pop
or
mov
leave
addr16
pop
sub
mov
xchg
into
add
push
outsb
stos
rolb
adc
sub
mov
pushf
add
scas
xor
call
testl
flds
lea
sub
mov
std
mov
jmp
push
out
inc
int3
cmc
test
cmpsb
xchg
mov
jp
nop
push
mov
mov
out
inc
add
lods
jbe
add
and
xchg
add
shlb
or
add
js
andb
add
mov
hlt
mov
and
add
mov
hlt
jns
add
outsl
into
incl
dec
ss
jp
mov
insb
insb
stos
pop
icebp
jo
push
sub
dec
jb
jmp
mov
push
push
push
jp
testl
daa
push
addb
add
adc
jmp
in
add
nop
jo
cwtl
sub
sub
jp
add
enter
or
int3
inc
add
add
xchg
out
cld
add
mov
rcl
jns
lret
mov
cmp
dec
add
cld
xor
out
loop,pn
out
enter
out
jle
cld
loopne
sub
add
mov
pop
std
cs
add
loop
out
out
std
loopne
xor
jle
sub
add
cltd
aad
lods
and
pop
lock
ret
mov
and
xor
jo
imul
mov
mov
ret
int3
jo
popa
sub
add
or
or
mov
shrb
in
test
add
add
jp
call
or
jo
sub
rolb
movsl
stos
or
nop
or
cmp
cmc
lahf
jbe
pop
jb
sub
jb
call
stos
shlb
loopne
out
add
xchg
or
pop
nop
and
mov
xchg
nop
dec
insb
cwtl
inc
add
lock
repnz
in
inc
out
push
andl
aaa
shlb
jp,pn
xor
add
int3
xor
jns
inc
push
lea
pop
add
hlt
icebp
jg
add
pop
inc
fistl
sub
insb
pop
mov
mov
xchg
cwtl
jle
loope
pop
or
aaa
or
adc
lea
add
adc
call
add
jge
in
and
mov
cld
add
int3
add
inc
add
outsb
xchg
push
sbbb
nop
rolb
imul
scas
pop
xorb
outsb
sub
ds
add
notb
xor
xor
nop
xchg
nop
mov
mov
mov
cli
pop
and
inc
pop
jmp
xchg
add
nop
xchg
push
nop
add
movsl
or
mov
push
sub
adc
nop
inc
adc
icebp
add
mov
sbb
iret
fidivs
and
cpuid
cmp
add
mov
outsb
stc
push
mov
in
test
xor
outsb
das
roll
nop
out
pop
mov
add
mov
test
pop
in
sbb
mov
cmc
add
int
addb
xchg
adc
mov
nop
cwtl
fwait
sub
push
icebp
pop
cmc
mov
xor
dec
and
int3
cmp
fildl
xor
filds
jp
adc
mov
and
cs
dec
in
pop
inc
stos
xchg
sbb
jg
lods
mov
xor
or
loop
mov
lret
dec
cmp
xor
mov
add
mov
add
cmp
add
loop
add
scas
mov
mov
add
cwtl
fistpl
cmp
clc
int3
add
inc
cld
cmc
lock
add
mov
jb
and
sub
sti
sub
add
xor
rolb
call
add
jl
and
pushf
sbb
add
add
sti
lea
cwtl
push
mov
in
hlt
jecxz
mov
nop
movntq
out
lahf
add
je
out
mov
int
int3
mov
mov
faddl
orb
inc
hlt
outsb
jbe
mov
add
mov
and
int3
add
cmpsb
int3
mov
add
out
pop
mov
mov
int3
jns
in
or
add
xor
nop
cmpl
iret
jmp
xor
xor
push
add
ljmp
lret
test
push
xlat
rorl
dec
jb
push
jae
int3
arpl
mov
addb
add
nop
addb
mov
pop
pop
inc
scas
adc
sub
sbb
cmp
add
mov
insl
add
add
clc
shrl
add
and
pop
jge
add
mov
movl
in
adc
add
popa
stos
stos
add
cmp
jecxz
add
div
or
add
popf
sahf
aam
nop
jb
or
inc
add
add
add
in
inc
call
stc
lcall
inc
int3
mov
ss
mov
call
sub
add
add
out
cld
push
cld
sub
out
out
add
incl
add
mov
cmp
out
dec
add
out
dec
push
push
push
jae
jb
insl
imul
push
js
bound
popa
push
js
push
outsl
push
imul
imul
jns
add
add
pop
cltd
cltd
aaa
ds
aas
pop
test
mov
shlb
xor
add
mov
push
int3
pop
scas
mov
xchg
inc
and
pop
cli
aas
dec
int3
add
rcll
mov
mov
mov
cwtl
cmpsl
stos
rolb
add
lock
mov
call
xor
test
cmpsl
and
call
daa
add
xchg
cmp
pop
fdivs
mov
push
ljmp
xchg
jg
cmp
or
add
sub
int3
add
add
xlat
dec
inc
popf
lahf
add
push
daa
loop
adcb
and
mov
inc
mov
in
push
pop
addb
sar
add
add
stos
push
mov
orb
jnp
inc
aam
jo
andb
int3
jecxz
pusha
push
addb
dec
add
aad
xchg
cltd
sbb
lea
notb
add
nop
mov
jb
inc
inc
push
in
xor
test
cmc
jge
mov
xchg
sbb
add
mov
jne
in
push
aam
add
sbb
add
adc
aas
inc
aas
ret
pop
js
subl
shlb
mov
nop
sbb
pop
lahf
dec
mov
movsb
mov
in
ljmp
mov
inc
int
adc
add
xchg
sbb
es
cmp
sbb
add
sub
sbb
int3
inc
das
movsl
pop
push
add
mov
in
fildl
adc
add
movsb
mov
add
dec
pop
jge
pop
add
fadds
pop
repnz
jb
inc
js
add
push
nop
outsb
loope
daa
add
lret
insl
add
fisttpll
add
mov
add
pop
in
lds
pop
dec
add
sahf
fadds
adc
cmp
mov
mov
push
imul
in
add
add
sub
lret
jb
int3
ret
push
std
cwtl
add
stc
mov
fcmovbe
nop
test
nop
xchg
or
mov
int3
and
std
mov
scas
aam
mov
add
call
int3
call
pop
add
pop
aam
push
mov
push
dec
mov
dec
push
mov
add
jmp
call
dec
out
test
nop
mov
rorb
add
pop
xchg
jbe
mov
nop
int3
test
pop
push
mov
fstpl
nop
add
mul
xchg
add
mov
seto
lods
mov
call
xor
addb
popa
inc
filds
mov
push
mov
mov
add
xor
inc
sbb
scas
iret
mov
out
or
push
nop
add
mov
scas
addr16
jo
xor
cld
int3
lret
pop
add
add
add
jecxz
add
hlt
nop
ja
int3
cmp
mov
call
add
cmp
and
hlt
pop
rcll
add
inc
push
mov
push
int3
jno
in
or
nop
nop
ljmp
or
add
add
mov
int3
or
jp
data16
add
cli
push
pushf
push
inc
inc
mov
aas
add
js
and
cltd
or
mov
and
inc
nop
ret
loope
flds
add
or
xor
mov
shl
lret
sahf
add
mov
or
cs
xor
int3
push
js
cld
testb
cltd
mov
cwtl
add
push
ret
jo
nop
imul
or
lea
das
out
xlat
scas
inc
add
add
jmp
sbb
lods
incb
add
sbb
xor
lea
mov
cmp
add
fnstenv
mov
lods
mov
inc
jle
std
mov
loopne
jo
fucomi
mov
js
mov
addr16
fldenv
fadds
add
push
popf
mov
jb
in
mov
fiadds
adc
sub
mov
push
les
jle
mov
push
sub
mov
add
mov
js
cltd
mov
lea
mov
mov
out
int3
inc
xor
js
xorb
jno
and
mov
add
mov
xlat
adc
stc
enter
sarl
mov
int3
scas
cs
push
and
int3
dec
lcall
jnp
jns
mov
call
dec
incl
add
out
incl
add
jmp
outsb
sar
std
out
data16
movntq
filds
out
add
shlb
outsl
out
inc
lea
cld
add
ja
cs
out
cld
out
cld
cld
out
cmp
mov
sbb
lods
mov
jl
xchg
cmp
jo
inc
cmpsb
xor
ret
arpl
and
add
es
shl
in
inc
add
imul
adc
add
fmul
and
xchg
sbb
and
fstpl
xlat
add
icebp
adc
xchg
lods
call
nop
fnstcw
xchg
adc
popa
repz
xor
add
and
inc
fiaddl
add
test
add
sub
and
add
add
scas
add
jmp
add
call
nop
jno
cmp
add
insl
add
mov
hlt
lcall
and
inc
mov
fwait
int3
sbb
push
dec
lcall
ror
mov
leave
pop
pop
jo
sbb
jo
mov
cmp
roll
insl
jcxz
cmp
loope
call
and
fiadds
add
dec
mov
div
testb
popa
nop
cltd
cmpb
into
push
jb
int3
add
in
data16
add
inc
dec
sub
mov
cmp
add
dec
cmp
cmp
add
outsl
int3
pop
mov
or
xchg
add
jo
jecxz
mov
popl
lea
test
sbb
sbb
inc
lret
mov
add
int3
add
ret
out
imul
ljmp
add
and
ljmp
cmc
pop
xorb
lods
add
adc
nop
ficomps
call
test
cmc
add
outsb
xchg
xor
rcl
add
test
sub
jne
xchg
addr16
loopne
xchg
orb
add
add
addr16
mov
inc
push
add
scas
jge
mov
inc
mov
add
sub
push
scas
fs
shr
add
mov
add
xchg
bound
push
xchg
sub
xchg
cmc
sub
nop
pop
sbb
test
push
cltd
xor
add
add
leave
xchg
sbb
sbb
sub
cmp
add
call
mov
fadd
addb
int3
xlat
pop
push
call
movsb
add
pop
addl
mov
inc
repnz
mov
add
mov
mov
cltd
pop
in
nop
lock
mov
aas
lret
in
movsb
add
dec
rclb
add
loopne
popf
xor
inc
xor
sub
pop
jno
push
inc
jnp
add
jno
add
lret
jo
adc
inc
and
add
nop
enter
mov
pop
nop
lcall
add
push
add
hlt
lret
out
and
jbe
test
test
int3
cmp
packsswb
xchg
addb
sub
sbb
add
mov
stos
call
jne
gs
ja
imul
bound
outsb
gs
gs
jbe
js
bound
gs
add
out
add
cmp
adc
xchg
jecxz
out
add
mov
pop
out
add
out
xchg
add
std
mov
fsub
xchg
add
add
roll
popw
add
out
addr16
add
adc
popf
out
add
xor
xor
dec
inc
nop
int3
daa
cmp
lret
mov
and
add
ret
push
jae
add
mov
jecxz
cmpsl
fldl
add
aam
inc
push
mov
mov
mov
add
and
add
push
adc
mov
push
push
add
mov
mov
int3
pushf
lock
sbbb
add
add
cmpsb
int3
popl
and
cmp
addb
pusha
mov
mov
mov
jmp
inc
sub
jg
sti
jns
ror
lea
mov
addl
sub
fldcw
iret
pop
in
mov
rolb
outsb
cmp
push
dec
xchg
cmp
add
lcall
outsb
popa
add
mov
addb
repz
fs
nop
call
mov
adcl
add
pop
add
imul
insb
shl
jb
xor
add
jecxz
push
cmpsl
add
push
mov
sbb
lahf
mov
add
ror
add
loop
out
lea
add
int3
cmp
jns
nop
mov
int
cltd
add
fiadds
mov
add
adc
add
ret
call
sub
jo
add
int3
repz
mulb
inc
add
aas
sbb
jmp
and
out
jmp
dec
daa
pop
fwait
addb
jns
jo
adc
loope
aaa
xorl
mov
mov
xor
fildl
cmpsl
add
push
test
lret
int3
cmp
outsb
add
add
popa
jo
std
andb
sbb
test
add
mov
loopne
pop
inc
sahf
aas
int3
add
jb
rcrb
fcomps
jbe
or
loop
mov
nop
aam
loop
add
popf
inc
inc
add
add
mov
sub
sub
add
and
xor
inc
out
cltd
cmpsb
adc
inc
fildl
aam
add
scas
int
mov
pusha
mov
jne,pn
nop
gs
nop
jno
push
pop
mov
int3
sub
addb
inc
bound
nop
pop
movsb
pop
add
add
push
outsl
inc
pop
add
mov
add
dec
xor
jl
call
sti
aas
add
jo
jb
xlat
jo
pusha
dec
loopne
nop
test
lret
jb
shl
push
add
aaa
adc
lcall
int3
and
pop
out
pop
pushf
dec
ds
add
mov
sub
add
xor
xor
lea
dec
pop
jp
nop
in
add
mov
add
in
out
int3
in
sbb
xchg
test
cld
adc
fildl
add
popf
int3
add
mov
int3
add
sarb
sbb
mov
mov
add
cli
pop
add
lret
sti
inc
add
adc
shll
call
and
cpuid
push
mov
dec
jb
addb
into
popl
daa
sub
jg
add
imul
adc
mov
cmc
lds
dec
or
mov
lret
fmull
push
add
loope
nop
jo
loope
push
out
add
add
jge
nop
mov
int3
add
add
mov
das
adc
mov
mov
add
rclb
add
orb
add
pop
repz
add
data16
xchg
add
imul
str
sub
nop
mov
fstpl
xlat
pop
adc
arpl
mov
jne
pop
push
lea
es
add
ljmp
and
mov
int3
mov
out
xor
add
add
cmp
rcrl
out
out
std
aad
and
decl
cmp
out
add
add
aas
incl
jns,pn
add
out
out
add
cld
pop
std
and
call
loopne
incl
loopne
add
lea
out
shll
mov
icebp
int3
nop
pop
push
inc
add
add
addr16
cmp
add
and
xorl
add
call
loope
int3
js
add
sbb
orb
addb
mov
int
clc
inc
pop
jns
jp
ret
add
int3
add
test
add
je
pop
nop
lea
xchg
inc
int3
out
hlt
push
jecxz
add
sbb
out
test
shll
pop
add
push
sbb
add
adc
cmp
push
insl
sub
push
std
loopne
enter
add
jb
add
lea
add
es
dec
mov
jecxz
call
popf
and
sbb
ficoms
pop
bound
jo
jbe
jmp
mov
jne
sub
push
mov
push
add
rolb
cmpb
orb
insb
add
xchg
sbb
in
mov
int3
pop
push
add
mov
jo
jp
and
mov
inc
pop
imul
in
dec
mov
add
jae
jmp
les
inc
cmpsb
mov
mov
or
xor
mov
sbb
add
sbb
insb
pop
int3
xlat
cmpsl
xchg
jo
outsb
gs
mov
add
cmp
cli
xor
add
out
inc
jmp
inc
int3
mov
xor
jp
or
lahf
pop
sub
adc
mov
and
nop
xor
mov
add
or
add
inc
imul
jo
adc
clc
pop
inc
adc
add
clc
xor
inc
rclb
pop
pop
stos
pop
dec
jb
dec
sbb
test
nop
pushf
fsubrl
test
pop
jecxz
fcmovne
pop
adc
pop
sbb
jle
rep
add
sub
inc
leave
mov
testb
mov
ljmp
bound
mov
jns
mov
jge
and
add
xchg
in
jne
xor
xchg
inc
nop
stc
sbb
movsb
add
xchg
sbb
add
addr16
ds
nop
push
xlat
dec
add
nop
nop
data16
out
push
cmp
int3
cmc
mov
inc
call
add
seto
insb
lret
loopne
mov
das
add
push
aaa
add
nop
and
test
mov
add
add
sahf
mov
add
xor
mov
and
sub
add
add
lea
loope
insl
jmp
int3
fwait
mov
inc
pop
jb
int3
mov
jbe
sbb
add
ds
call
int3
inc
frstor
xchg
nop
add
inc
iret
hlt
decl
hlt
stos
push
out
and
scas
adc
xor
lea
add
mov
filds
gs
hlt
inc
add
ds
xchg
sbb
or
lahf
pop
cmpsb
inc
push
add
and
add
in
addb
scas
add
mov
add
rclb
nop
in
inc
cmpsb
inc
jo
or
mov
loop
pop
cltd
xchg
add
sahf
call
sub
and
xchg
push
add
arpl
pop
insl
add
iret
enter
pop
xor
xor
lret
add
loope
sbb
sbbb
cmc
mov
loope
inc
nop
loopne
inc
mov
mov
xor
jne
test
pop
int3
add
inc
out
xchg
mov
int3
test
xchg
sub
jl
xchg
and
mov
xchg
int3
add
pop
icebp
mov
int3
decb
int3
jo
leave
xchg
cmp
stos
mov
pop
sbbb
add
xchg
rorb
mov
add
add
xor
popf
outsb
inc
add
int3
inc
push
repz
xor
popf
out
mov
jns
jnp
add
fisubs
add
add
push
nop
jo
push
mov
nop
inc
add
mov
cmp
insl
call
test
fldl
xor
adc
lea
push
arpl
push
call
int3
pop
out
push
xchg
rorl
mov
inc
shlb
orb
add
scas
pop
imul
and
pop
fiaddl
adc
add
mov
add
add
mov
test
add
shlb
inc
mov
loopne
add
push
outsl
xchg
int3
lea
popa
add
ret
add
inc
lea
cmc
adc
cmp
lock
lcall
add
inc
add
dec
push
inc
jo
adc
call
fdivl
int3
jp
ja
nop
nop
adc
cmp
fld1
rcrb
sub
lcall
mov
call
shrb
add
loop
ss
mov
xchg
mov
clc
out
cld
cmp
out
inc
out
cs
imul
add
add
add
jmp
outsl
add
std
pop
out
add
roll
cltd
out
add
fsubs
add
incl
add
mov
shll
add
add
add
popf
mov
xchg
cs
cwtl
add
cmp
jecxz
dec
sbb
subb
mov
dec
roll
mov
cmpsb
and
push
push
jo
rcrb
fwait
call
add
add
sbb
add
pop
mov
iret
add
xor
xchg
jne
inc
add
add
or
xchg
in
lds
inc
cmp
jo
lcall
mov
or
add
inc
adc
add
out
int3
sbb
bound
or
nop
sbbb
rcr
add
jo
mov
bound
add
lds
out
sbb
imul
in
sbb
lea
mov
mov
pop
push
add
scas
mov
test
imul
into
inc
nop
xchg
push
leave
in
sub
lea
dec
inc
mov
pop
pop
sbb
jo
xchg
test
dec
xchg
bound
ljmp
sbb
xor
inc
lret
call
add
mov
repnz
add
xor
test
jb
sbbl
fistl
dec
jno
add
mov
add
jp
daa
xor
sbb
outsb
lret
lock
pop
add
fstps
sbb
int3
roll
push
nop
mov
dec
mov
arpl
test
int3
out
roll
and
dec
mov
into
jge
add
ss
call
push
call
or
movsb
popa
mov
jo
sti
mov
cmp
add
cmp
ja
and
hlt
fdivs
add
lahf
jo
add
mov
fcoms
add
ret
insb
jle
add
enter
dec
add
nop
cmp
pop
lock
mov
mov
movsb
movsl
jg
lea
dec
and
nop
xchg
out
push
or
mov
xchg
nop
inc
inc
nop
add
inc
into
add
mov
mov
fcoms
pop
add
jo
pop
rcrb
sub
xchg
jo
sub
add
xchg
jns
imul
lret
scas
mov
bound
es
or
jb
jne
mov
cmpsl
sahf
jb
pop
add
inc
lea
or
pop
int3
and
out
incl
loope
mov
mov
cmp
adc
and
mov
mov
xchg
fwait
push
mov
sbb
in
lea
pop
imul
and
cmp
adc
mov
fs
adc
add
pop
inc
arpl
pop
int3
daa
push
jb
movsl
jnp
pop
jb
shr
mov
push
mov
bound
int3
add
xchg
pop
mov
testl
popl
jb
push
dec
xchg
add
in
cld
add
mov
cld
add
out
out
cmp
out
cld
lcall
add
dec
inc
jns
jns
outsl
jp
jae
bound
outsw
insl
jns
outsl
data16
gs
imul
imul
jo
push
cmp
adc
add
arpl
cmp
add
pop
inc
cmovno
add
fldl
rcll
incl
inc
call
cli
push
and
adc
mov
mov
inc
sahf
shll
adc
frstor
add
push
adc
dec
pop
ja
mov
add
mov
nop
test
aad
cmc
das
mov
fimull
xorb
sbb
call
ret
mov
sbbb
add
cmc
dec
add
add
pop
dec
iret
nop
add
sbb
aas
nop
popf
add
pop
imul
pop
add
add
adc
push
insl
dec
gs
lea
enter
pop
add
call
mov
mov
andb
int3
mov
lret
das
add
dec
mov
add
insl
add
int3
cli
xchg
int3
add
xor
and
mov
punpckhdq
jl
ds
lock
icebp
xorb
ljmp
imul
scas
add
mov
push
in
add
push
scas
insb
hlt
call
jbe
imul
cmpsb
ficoml
add
lret
xchg
lock
fcomi
sub
xor
test
test
ret
outsb
fildl
imul
mov
in
adcb
sub
cmp
addb
lds
mov
sub
mov
inc
int
mov
jo
cmp
addb
iret
arpl
rcll
nop
dec
int3
andb
out
inc
add
mov
arpl
adc
sub
repz
add
ret
and
nop
add
aaa
fisubs
in
sub
cli
add
cmc
ja
dec
xchg
add
test
or
mov
mov
xlat
xor
pop
cwtl
faddl
and
data16
in
popf
aas
cld
or
lcall
inc
xor
nop
mov
lea
add
lcall
add
jb
or
cwtl
ror
int3
add
ds
sub
and
cs
add
add
inc
insb
int3
lods
add
xchg
dec
test
add
rorb
add
pop
mov
add
aaa
jne
add
sbbb
dec
cwtl
add
add
add
ljmp
lret
int3
push
inc
sub
jne
jo
mov
add
dec
mov
sub
test
add
movsl
add
call
add
mov
outsl
add
inc
add
aam
repz
add
clc
sub
loope
nop
daa
outsb
inc
xor
shlb
mov
xchg
sbb
mov
xchg
sub
addl
or
fs
add
inc
add
loopne
add
mov
add
mov
xlat
push
jg
add
insl
ss
aaa
mov
add
pop
jmp
data16
out
out
add
scas
data16
out
ss
out
out
dec
jmp
add
pop
jmp
std
push
shl
rcr
cld
add
shll
add
ljmp
adc
fsub
jnp
cld
imul
std
rol
xor
out
add
scas
imul
out
test
rcl
sar
cmp
adc
lods
add
mov
adc
inc
sbb
mov
sub
fdivr
out
int3
inc
mov
sbb
nop
mov
add
fs
push
jae
cmpsl
dec
adc
imul
insb
jmp
add
loopne
jae
jmp
jo
jns
xor
nop
add
sub
inc
lea
loope
xor
pop
mov
and
js
pop
add
push
add
pop
adc
xor
add
cli
jmp
nop
and
xchg
push
test
inc
or
int3
lods
push
cmpsb
loope
inc
jbe
mov
push
imul
adc
shll
push
idivl
and
jp
mov
rolb
sahf
add
mov
int3
dec
push
in
nop
cwtl
jl
mov
jns
mov
arpl
and
add
jb
dec
ret
arpl
ss
add
fdivr
dec
dec
call
add
aaa
add
add
add
lea
inc
add
add
aaa
aas
and
and
cmp
add
int3
add
and
add
cli
lods
cmp
add
fimuls
hlt
add
mov
out
adc
out
dec
mov
mov
mov
int3
pop
daa
js
insb
dec
jo
dec
lock
sbb
add
jno
pushf
add
lods
das
dec
add
add
xchg
iret
xchg
add
cltd
stos
mov
mov
enter
add
xchg
add
add
jl
icebp
incb
cmpb
xchg
add
lret
neg
loope
int3
add
xor
nop
add
test
add
xor
dec
mov
fs
xor
call
out
mov
add
push
xchg
mov
and
mov
pop
jns
int
mov
inc
addb
mov
aas
mov
mov
dec
insl
sbb
mov
mov
jne
sti
aaa
add
out
insl
loop
add
nop
jl
jbe
outsb
bound
inc
int3
inc
sbb
jb
inc
add
mov
sbb
stc
filds
cs
je
inc
add
bound
and
or
cmp
add
xchg
pop
mov
add
jge
add
js
out
xchg
add
dec
movsb
cli
addr16
sahf
jo,pn
and
inc
add
cmp
pop
nop
add
adc
pusha
sbb
cmp
daa
nop
add
cmp
outsb
in
jbe
call
lret
add
dec
push
jo
adc
add
inc
mov
mov
add
add
inc
faddl
insl
jns
popa
lea
hlt
push
cwtl
add
arpl
xor
xchg
jmp
add
addb
sub
push
add
lret
mov
sti
cmp
mov
test
and
xor
add
nop
add
nop
fdivrl
cmp
add
xor
fiaddl
loope
sbb
mov
mov
mov
in
out
mov
mov
les
or
mov
js
int3
outsl
in
int3
lds
dec
test
nop
mov
jno
popf
add
inc
or
aad
in
int3
jo
mov
xor
scas
xchg
add
call
add
sbb
pushf
nop
aam
in
xchg
xchg
nop
add
add
ss
int3
sub
mov
call
mov
push
stos
mov
int3
add
out
sbb
add
out
jl
jo
lret
jp
add
pushf
push
es
sahf
xor
add
arpl
and
ret
dec
add
cmc
in
hlt
mov
nop
inc
and
mov
pop
shrb
mov
jmp
inc
int3
xor
adc
add
int3
pop
sahf
push
cmp
insb
mov
nop
cmp
pop
int3
and
cmp
cwtl
add
negb
incl
icebp
jnp
nop
int3
adc
jo
inc
jae
xor
sub
adc
std
mov
sub
add
add
pop
cmp
out
out
add
roll
add
out
add
add
add
out
out
add
jmp
out
add
std
mov
out
test
add
adc
cld
out
shll
pop
out
out
jns
aas
out
cld
cs
into
incl
cld
cld
out
stos
cmp
add
out
add
fdivr
add
in
loope
add
mov
int3
dec
adc
push
push
int3
add
push
aad
add
push
pop
sub
inc
jno
std
inc
shll
out
ljmp
xchg
aaa
mov
add
dec
add
fstpl
mov
call
test
add
sbb
mov
mov
add
jne
mov
xchg
hlt
mov
popa
jg
add
add
inc
add
mov
push
xchg
sub
add
inc
sahf
mov
cmp
popa
js
pop
mov
add
add
add
shrb
int3
fisttps
stos
pop
add
cs
adc
pop
iret
movl
je
lret
xchg
lea
dec
lock
dec
stc
int3
in
ds
push
mov
cli
add
mov
int3
mov
hlt
clc
mov
int3
pop
movsb
adc
mov
fidivl
ficoml
add
add
sbb
mov
add
lcall
mov
scas
jp
and
mov
sbbb
inc
cmp
scas
sbb
add
ror
lds
push
lcall
mov
dec
sub
ds
inc
jns
aaa
cs
jb
jg
pop
xchg
add
add
xor
cwtl
and
add
xor
je
inc
in
dec
das
add
add
sbb
popa
jb
rolb
fisubl
inc
repnz
add
aas
jmp
jp
fstps
pop
add
cmp
fsubr
repz
ljmp
int3
std
jg
inc
add
cwtl
andb
and
call
and
or
jmp
add
mov
roll
xchg
mov
cmp
addl
adcb
xor
add
push
fwait
stos
inc
add
mov
dec
add
dec
mov
add
inc
add
in
adc
push
mov
push
scas
jnp
add
pop
push
mov
mov
and
ret
lcall
push
setge
rcll
insl
mov
nop
add
mov
push
out
add
xchg
ljmp
cmp
ljmp
int3
out
fs
jo
mov
mov
mov
add
push
orb
cmp
push
fildll
pop
add
rcrb
nop
cmpsb
int3
and
sbb
add
mov
mov
xchg
pop
add
ja
inc
aad
add
mov
mov
add
int3
pop
pop
test
mov
add
mov
push
add
outsb
pop
jg
lret
addr16
dec
fadd
ljmp
aad
ds
call
lea
aaa
lea
and
add
std
hlt
fdivrl
int3
lcall
inc
dec
lea
into
add
cli
out
pop
and
pop
mov
inc
mov
lds
lahf
call
xchg
adc
sbb
sbb
mov
sub
mov
pop
nop
cmp
rcr
lock
xchg
inc
in
lea
pop
add
mov
int3
repnz
mov
xchg
nop
xchg
lcall
cmp
sbb
call
fcoml
in
inc
xor
icebp
in
xor
or
sbb
add
dec
sbb
pop
test
fs
mov
pop
call
jne
add
call
xor
push
int
ljmp
jnp
sub
loopne
add
rorb
jno
pop
jmp
sbb
mov
jae
add
xor
scas
add
imul
add
outsb
sbb
cmp
add
imul
out
mov
and
jno
ja
add
scas
pop
mov
jl
ror
add
imulb
jmp
xor
int3
cmp
add
xchg
ljmp
cwtl
out
inc
add
cli
and
or
iret
in
mov
in
int3
int3
outsb
mov
int3
leave
sub
int3
fbld
mov
int3
dec
lret
xchg
call
xor
mov
push
sub
push
js
xor
int3
add
mov
nop
mov
imul
into
pop
push
sarl
cs
pop
add
mov
loop
add
mov
inc
add
lock
nop
mov
cmp
outsl
fidivs
pop
or
repnz
adc
hlt
es
xlat
jb
sub
add
pop
in
pop
mov
ja
dec
les
das
mov
cld
cli
ja
add
mov
mov
cltd
add
cltd
and
add
jb
add
pushf
inc
mov
rorl
lea
shlb
mov
adc
dec
adcb
rcrl
pop
mov
or
add
sub
int3
xchg
xor
jp
add
ja
nop
xchg
mov
adcb
add
imul
add
mov
add
lea
jg
mov
nop
xor
xchg
lock
jb
movsb
mov
loope
int3
cmp
loop
add
fnsave
mov
adc
add
das
nop
add
int3
mov
ret
adc
xor
dec
or
sbb
or
inc
adc
or
inc
fcmove
add
daa
push
cmp
out
out
scas
out
out
cld
cmp
cmp
out
scas
pop
out
xor
cmp
dec
xor
xchg
out
pop
out
out
std
popw
scas
add
out
cs
outsl
mov
jns
insb
out
out
add
sub
dec
inc
cmp
pop
out
int3
add
cmpsl
test
mov
inc
int3
mov
add
lds
cmc
lea
je
fdivs
add
in
xor
int3
out
xchg
jb
int3
add
jl
nop
add
shrl
aad
add
add
jnp
add
dec
fbstp
pmaddwd
xor
and
fsubl
or
add
xor
sti
add
gs
aaa
add
mov
xchg
inc
fdivs
xchg
int3
add
clc
sti
jnp
add
cmp
aaa
scas
add
adc
and
fcompl
and
sbb
jo
cwtl
inc
inc
dec
add
fs
mov
aad
dec
nop
int3
fiaddl
add
int3
xchg
loope
addl
push
call
sbb
push
mov
orb
lds
xor
jge
pop
test
nop
dec
add
stc
xchg
orb
call
add
jge
mov
mov
adc
mov
jno
roll
ja
fdivp
cld
int3
pop
add
jns
add
push
inc
jo
and
add
sbb
push
les
mov
xor
ljmp
nop
mov
add
scas
push
jns
inc
add
out
inc
mov
add
insb
inc
call
in
mov
add
push
or
xlat
jns
int3
sbb
int3
es
fisttpll
dec
add
push
add
call
nop
add
adcb
add
push
dec
bound
xor
repz
imul
std
xor
pop
loope
jne
rcr
pushf
mov
jo
sti
add
lahf
dec
iret
jbe
into
cmp
and
jnp
popf
fmuls
inc
mov
and
add
push
fidivs
stos
cmp
jb
xchg
or
mov
xor
push
loopne
int3
push
iret
sub
add
gs
int3
add
dec
mov
and
and
adc
add
inc
sahf
add
fstpl
int3
add
into
mov
sub
call
add
mov
mov
add
pop
loope
lea
in
lds
pop
dec
aas
sbb
add
dec
data16
ficompl
mov
xlat
pop
mov
add
adc
mov
xchg
out
xchg
pop
push
sahf
nop
add
xor
pop
nop
call
jbe
push
adc
int3
adc
jo
ja
push
mov
popa
or
jo
jbe
lds
movsb
scas
mov
xchg
stos
inc
andl
fwait
xor
lret
inc
jl
sbb
nop
jo
cmp
add
fdivl
add
sub
sub
mov
lret
add
add
dec
mov
mov
and
lret
pop
inc
and
mov
aaa
and
sbb
adc
xchg
mov
add
sbb
add
cmp
and
jb
sbb
add
jo
sbb
push
insb
xchg
mov
int
mov
add
in
mov
adc
pop
arpl
nop
les
and
push
mov
bnd
mov
mov
call
inc
xor
xchg
mov
xchg
mov
rolb
add
jns
mov
jns
mov
into
or
add
nop
cmp
test
pop
jecxz
loopne
out
std
add
inc
out
imul
data16
imul
cs
xor
add
out
add
test
shlb
out
cld
std
data16
out
jmp
cld
mov
and
add
add
call
sub
aad
add
popf
push
pop
lea
cmp
popa
add
jg
add
vmovupd
das
pop
push
cmp
aad
xlat
add
xchg
aam
xchg
lret
add
push
clc
les
dec
movsb
add
data16
add
lea
inc
sarl
and
int
add
mov
enter
filds
int3
jno
inc
iret
add
jge
mov
add
adcb
inc
pop
cmp
aaa
nop
jae
sldt
xchg
mov
cmp
mov
add
icebp
add
fstps
cs
mov
mov
mov
jno
mov
lea
negl
add
adc
add
clc
fsubl
addr16
xor
cmpsl
mov
add
and
mov
in
add
pusha
pop
clc
fs
int3
mov
pop
rolb
fcompl
movsb
jns
nop
jne
sahf
add
jnp
rolb
or
dec
inc
push
add
xchg
mov
stos
mov
inc
std
xlat
nop
push
xchg
inc
sti
add
add
cld
add
lds
mov
jbe
int3
and
push
scas
jns
nop
add
sahf
xor
add
lret
inc
nop
int3
and
add
lret
jnp
add
mov
cmp
jge
push
clc
add
pop
dec
fmulp
inc
outsb
cmp
js
add
addb
push
in
rcrb
int3
fwait
inc
clc
nop
int3
decb
add
fcoms
add
ss
addl
rcrb
out
mov
xchg
pop
pop
add
push
in
movsb
lea
dec
shrb
adc
xchg
xchg
add
lcall
adcb
add
adc
or
stos
xor
jg
inc
add
xor
mov
es
add
mov
add
test
adc
add
cltd
xchg
inc
mov
imul
jae
add
pop
jb
xchg
add
and
in
xchg
shll
adc
pop
repz
aas
pusha
movsb
mov
insl
test
add
xchg
add
ret
inc
scas
sub
sbb
iret
inc
add
enter
nop
xor
mov
sarl
add
sbb
imulb
pop
add
popa
loope
adc
mov
mov
loop
add
or
fsubrs
sbbb
in
sub
add
sub
or
nop
dec
xchg
pop
adc
nop
mov
mov
add
jb
daa
push
mov
or
in
mov
add
incl
outsb
addb
sahf
and
repz
pop
adc
insb
loop
add
jns
or
in
add
sbb
sub
pop
mov
xchg
mov
xor
and
pop
dec
xor
mov
mov
in
add
cmpsb
push
loope
pop
int3
inc
mov
ss
mov
fsubl
jmp
add
dec
push
and
fwait
jno
in
int3
jo
call
mov
jl
mov
test
add
add
int3
add
cld
xchg
int3
cmpsl
mov
push
in
aas
mov
lea
sub
mov
push
js
add
or
and
nop
inc
aas
jne
inc
add
enter
call
shl
int3
add
push
dec
data16
int3
add
stos
push
cli
mov
add
mov
sbb
push
xor
popf
cwtl
push
push
ja
add
add
inc
mov
test
mov
jns
sub
mov
fidivs
mov
cmp
lret
mov
loop
lcall
popf
xchg
jecxz
add
mov
addb
aam
sti
mov
addb
mov
jnp
add
add
pop
inc
push
sub
dec
or
int3
test
addr16
loopne
add
add
nop
adc
add
lea
pushf
add
xor
jge
add
iret
jl
loopne
popf
add
mov
add
jno
cmp
mov
dec
mov
out
cld
data16
lahf
loopne
out
out
add
sub
add
jle
add
out
jg
out
xor
add
aaa
jo
add
out
dec
shl
add
xchg
scas
or
lret
add
fwait
xchg
xlat
add
add
mov
je
inc
add
test
inc
shlb
or
xchg
or
aam
jge
pop
into
in
xchg
imul
pop
int3
movsb
cs
inc
int3
int3
pop
into
pop
jns
int3
mov
fisttps
int3
mov
adc
push
fs
add
add
xor
push
testl
jae
mov
outsl
mov
or
sub
int3
cwtl
jle
stos
jo
add
nop
mov
mov
js
add
pop
add
aam
push
cmp
sbb
popa
lea
das
dec
fadds
sbb
add
shrb
add
fiaddl
icebp
repz
pushf
mov
adc
push
add
ja
in
add
lods
add
add
adc
add
mov
fbstp
mov
inc
addb
fs
les
add
or
xchg
call
ja
test
rolb
inc
add
inc
add
mov
push
xchg
push
add
jmp
cli
mov
add
stos
decb
lret
xor
add
fstl
rcll
adc
add
mov
and
inc
cmp
inc
add
cmp
or
int3
inc
call
cmp
fsub
in
push
add
pop
inc
sub
call
int3
mov
inc
nop
inc
dec
enter
dec
sti
das
jecxz
jl
das
pop
cmp
icebp
pusha
add
ljmp
add
jo
out
aas
add
leave
add
popf
mov
push
imul
add
add
jge
cmc
int3
mov
add
push
add
ljmp
sbb
stc
mov
call
add
mov
cmp
add
mov
stos
out
nop
popf
inc
sbb
push
sub
std
add
add
mov
sbb
inc
fidivl
mov
subl
movsl
xchg
insl
jno
add
stc
jnp
mov
mov
add
mov
xor
add
movntq
data16
fldl
out
rcrb
add
out
add
add
mov
out
mov
sbb
add
cld
dec
out
mov
nop
jo
lcall
adc
pop
mov
scas
push
sub
sub
push
cmp
add
int3
add
pop
jo
aaa
push
mov
inc
test
add
aad
add
sbb
add
add
fcoms
out
or
mov
imul
outsb
add
jb
xor
inc
sbb
mov
jle
add
xor
add
pop
outsl
mov
js
mov
add
loopne
inc
xchg
push
stc
adc
or
nop
ret
jle
addb
mov
fst
testl
cmp
add
lds
es
cmc
jo
pop
add
adc
int3
cld
cltd
out
inc
add
divb
add
add
push
lock
and
arpl
or
jo
std
and
mov
pop
pop
add
std
jb
cmpsl
clc
lods
popl
mov
add
ljmp
outsl
int3
add
dec
or
nop
andl
rorb
add
fwait
jg
out
int3
add
lret
mov
stos
add
lock
cmp
inc
jb
dec
js
add
mov
je
dec
int
testl
mov
ljmp
int3
rcll
xor
test
das
cmc
push
aad
sbbb
add
add
jo
aam
outsb
jne
mov
inc
adc
cmp
cmp
add
jecxz
sub
popa
xchg
flds
add
sti
jg
les
add
sub
sbb
cmp
jo
or
adc
add
sahf
dec
adc
jo
inc
add
aaa
xchg
nop
subb
add
cli
push
fists
inc
hlt
das
jl
enter
movsb
stos
in
and
and
add
jo
dec
imul
in
pop
push
add
xor
xchg
or
call
add
js
add
mov
pusha
add
adc
int3
xor
dec
gs
pop
testl
leave
add
cmp
mov
add
add
pop
and
sahf
nop
add
ljmp
jp
inc
dec
add
int3
lret
cmp
daa
inc
lea
and
out
xor
pop
add
pop
add
cltd
add
pop
out
sar
dec
xor
add
out
add
out
out
cld
std
out
out
mov
incl
jmp
add
mov
rorb
dec
cld
loopne
incl
mov
shrb
std
out
jns
loopne
out
lldt
fbld
out
out
cs
out
xchg
sbb
add
dec
add
xor
int3
add
and
or
add
sub
rcl
add
test
add
push
je
add
jb
or
jecxz
add
adc
push
xor
dec
cmp
dec
xchg
add
cmp
mov
cwtl
addb
push
mov
cmpsl
in
jp
add
cld
add
cmpsl
add
test
in
add
jb
adc
add
sub
nop
add
add
lea
outsl
aam
xor
xchg
in
les
add
addb
cwtl
outsl
nop
jns
movaps
add
add
or
mov
add
int
cld
and
push
inc
add
jb
int3
test
xchg
xchg
add
mul
dec
and
nop
cmp
int3
lea
mov
testb
jle
int3
bnd
mov
jnp
clc
mov
pusha
pop
add
dec
pop
hlt
nop
mov
mov
add
es
and
movsb
and
addr16
add
jecxz
dec
add
dec
xor
push
add
sub
add
cli
fisttpl
mov
inc
add
adcl
int3
mov
push
mov
call
fldt
pushl
pop
add
ja
int3
sti
popa
out
xlat
sub
inc
lcall
mov
jo
loope
pop
add
jmp
inc
scas
push
mov
sub
lahf
das
movsl
inc
jl
int3
pop
adc
add
inc
out
adc
pusha
rorl
xchg
call
imul
add
dec
addb
mov
xchg
add
sbb
out
jp
mov
mov
xchg
add
call
int3
or
add
les
jb
cmp
rolb
add
rolb
and
icebp
jo
call
in
add
stc
add
jbe
hlt
mov
and
sahf
mov
sub
mov
movsl
inc
mov
mov
mov
pop
cmc
push
add
lret
dec
jo
or
mov
add
inc
insl
insb
xchg
add
adc
add
push
or
adc
jo
sbb
js
sub
icebp
add
pop
scas
in
lea
dec
inc
add
sub
sub
repnz
add
add
enter
and
push
loop
add
mov
xchg
mov
nop
add
sub
add
ret
mov
adc
mov
add
jge
mov
repz
add
cmp
jnp
testb
fbld
popa
aam
or
in
aaa
push
jl
add
cli
popf
stos
add
mov
popf
jo
and
sub
loop
add
push
das
add
faddl
dec
mov
std
add
loopne
add
in
add
sbb
jmp
mov
out
dec
jo
push
and
lds
mov
neg
ljmp
cltd
lcall
add
sub
fwait
inc
call
push
lea
fisttps
mov
add
sbb
scas
add
sbb
and
out
xor
add
cmp
cmc
sbb
pop
or
pop
inc
int3
xchg
add
in
mov
cmp
sahf
push
mov
jp
add
mov
int3
int3
pushf
je
jl
call
inc
add
loop
and
mov
mov
sbb
int3
in
pop
jo
ds
cmp
add
sbb
inc
inc
and
test
pop
mov
sub
int
xor
rorb
pop
add
add
inc
xchg
inc
and
inc
int3
xchg
dec
xor
fs
xchg
lret
lea
jge
into
add
je
adc
imul
mov
cmp
int3
xchg
cmp
cmc
add
test
xor
push
es
mov
int3
mov
aam
ds
jle
mov
xorl
lahf
mov
and
pop
stos
add
add
mov
testb
mov
jo
jg
jbe
mov
in
stc
jle
add
nop
add
jp
pop
nop
and
add
add
and
add
fmuls
mov
int3
sbbl
inc
add
mov
add
dec
pop
xchg
add
xchg
xor
cwtl
sub
nop
aam
adc
mov
test
add
add
ja
int3
pop
shlb
sarl
xor
jb
fiaddl
pop
aam
cld
add
xor
add
add
repz
xor
lea
dec
orl
ljmp
jge
cwtl
ljmp
xchg
or
dec
std
rol
cmp
fwait
les
mov
pop
push
roll
dec
imul
add
incl
shl
add
out
out
xor
cld
lock
out
loopne
outsb
popa
cld
cld
out
cs
cmp
add
add
imul
add
jmp
out
out
stos
dec
add
out
sbb
cmp
cs
sub
fwait
jg
add
add
subl
pop
add
icebp
xchg
and
test
in
js
pop
mov
xchg
mov
push
int3
jecxz
roll
xor
nop
lcall
mov
or
cwtl
and
xchg
mov
jbe
mov
dec
fsubl
sbb
mov
add
jmp
jb
dec
mov
arpl
push
aam
add
les
inc
ja
add
nop
mov
lea
test
ja
dec
adc
xor
mov
add
fadd
cmp
fmuls
add
add
mov
test
add
push
fistpl
lods
andl
cmc
insb
sbb
les
call
xchg
add
imul
clc
inc
addb
enter
nop
add
inc
jge
mov
push
ljmp
call
mov
sbb
in
and
jns
divl
add
add
jno
daa
add
lea
inc
dec
int
imul
xchg
add
xor
stos
jg
push
scas
int3
add
ret
add
es
mov
sbb
add
nop
mov
push
sub
arpl
mov
andb
inc
nop
sahf
orb
mov
nop
nop
mov
jno
nop
xorb
mov
adc
jno
add
pop
mov
jmp
popl
cwtl
add
jl
mov
ljmp
add
ret
sub
jge
add
mov
jae
nop
add
jl
jb
sub
cmp
adc
dec
mov
dec
mov
sub
test
int3
inc
lahf
xchg
jae
mov
dec
mov
pop
add
aaa
lea
add
mov
sub
out
ss
add
cld
test
mov
stc
sti
ret
fdivrl
nop
pop
lds
add
add
sti
jecxz
xor
popa
js
int3
pop
xchg
lods
nop
and
mov
sub
int3
dec
das
cmp
call
add
add
pop
mov
add
loope
sub
jns
jo
and
jle
cld
inc
mov
and
inc
jge
lea
sub
stos
int3
call
data16
mov
push
push
int3
mov
int3
lcall
nop
sbb
mov
mov
xchg
mov
add
cmp
mov
add
lea
div
pop
adc
xor
cmpsl
add
and
imul
stos
popf
ds
lea
jbe
nop
push
int3
mov
jo
cmpsb
popa
add
add
mov
jge
sub
nop
xchg
fisttpll
add
inc
cmp
in
repz
stos
lahf
lea
mov
fucom
xchg
outsb
jo
outsb
mov
int3
addr16
ret
aas
xor
pop
add
popa
aas
push
inc
jmp
stos
pop
push
jns
ds
nop
and
or
nop
mov
push
add
push
out
dec
insb
inc
add
pushf
sbb
rolb
push
cmp
call
sbb
push
add
add
bound
add
xlat
or
xchg
xor
paddq
roll
jo
add
pop
add
lock
push
xor
or
add
out
data16
jo
xor
cmp
lock
ss
cmpl
sti
testl
mov
add
add
xor
notl
mov
jo
or
add
xchg
icebp
pusha
add
ror
sbb
add
jo
cwtl
xchg
jnp
add
cmc
cmp
cld
inc
int
add
cmpsb
xor
gs
pop
fisttpll
sbb
add
push
subb
aad
add
xor
and
loop
in
mov
sahf
ja
inc
lea
sbb
into
mov
mov
adc
or
mov
aaa
roll
ror
divb
pop
inc
add
fwait
pusha
push
cmpsl
add
scas
push
mov
add
sub
pop
divl
call
incl
in
mov
loop
nop
and
outsl
and
mov
add
inc
nop
inc
popf
push
ret
add
cmp
jae
int3
mov
int3
fs
xor
sar
jge
pop
mov
add
enter
add
cmp
add
jns
add
add
dec
add
std
out
call
scas
add
mov
into
incl
add
out
cltd
mov
cs
inc
push
scas
add
out
mov
dec
mov
dec
sub
std
add
add
out
out
clc
icebp
mov
repz
add
pop
xchg
out
add
cmc
pop
out
int3
hlt
testl
inc
xor
add
inc
in
int3
mov
and
xlat
fldcw
fwait
int3
mov
xchg
add
add
cmpsb
mov
outsl
mov
iret
xor
nop
fwait
mov
pop
add
outsb
dec
int3
nop
mov
int3
inc
call
nop
nop
ss
hlt
mov
movsb
test
int3
mov
add
js
add
addb
mov
jae
dec
icebp
inc
add
sahf
das
pop
int3
inc
dec
fdivl
mov
sti
aas
add
inc
add
mov
mov
pushf
ficoml
pop
and
mov
mov
jmp
int3
stos
std
stos
mov
add
mov
int3
nop
cli
outsb
lahf
lods
add
push
data16
lret
jo
pop
xor
inc
call
jo
int3
repz
xor
add
cltd
mov
add
push
repnz
jle
add
cmp
lahf
jecxz
and
daa
jnp
nop
add
lea
mov
rol
sarl
add
xchg
and
stos
in
add
xor
lods
and
int3
mov
push
test
add
push
fsubs
test
bound
iret
and
ljmp
or
add
iret
je
add
jbe
adc
add
cltd
jge
jae
add
mov
or
test
mov
jbe
add
xlat
addb
addr16
add
sbb
lcall
sarb
int3
inc
sbb
xlat
inc
add
inc
mov
lea
add
pop
incb
and
xchg
mov
lret
push
popa
sarl
dec
mov
scas
or
jno
int3
add
adc
sub
add
dec
xor
add
addr16
add
pop
fildll
sbb
inc
mov
lret
add
jb
mov
add
int
incl
lea
movsl
jae
sbb
cmp
add
jbe
add
in
ljmp
jne
outsl
std
add
int3
xor
jecxz
cmpb
call
out
int3
mov
das
xor
xchg
in
incb
subb
mov
bound
or
test
stos
add
add
add
push
add
inc
mov
rcr
sysret
inc
sbb
cmpsl
out
add
cmpsl
int3
add
movsb
add
daa
jo
xor
add
pop
repz
mov
add
mov
mov
add
outsl
mov
int3
mov
push
lock
pop
mov
jo
dec
out
dec
enter
rorl
add
mov
out
jo
imul
ljmp
mov
add
mov
inc
aas
inc
dec
add
ljmp
imul
adc
shrl
add
out
std
decl
mov
mov
std
test
add
add
add
bswap
add
loopne
std
cld
out
sub
jmp
mov
add
scas
out
out
out
add
cmp
jb
dec
mov
adc
in
test
add
adc
pop
pop
pushf
repz
call
shr
test
aas
and
mov
add
jae
dec
add
into
pop
insl
inc
add
test
add
stos
test
inc
pop
ffree
push
add
pop
and
add
mov
subb
add
add
add
aas
add
idivl
pop
call
into
lea
add
es
pushf
dec
add
jne
in
xor
nop
fsubs
add
sti
lcall
mov
inc
sbb
xchg
pop
inc
adcb
add
ret
aad
push
pop
inc
aaa
dec
aam
call
add
adc
jae
xor
jno
into
cmp
sahf
xor
sbb
inc
xchg
sub
nop
add
outsl
fadds
scas
and
add
xchg
jo
pop
and
mov
int3
add
rcrl
test
xor
dec
or
mov
inc
out
add
pop
nop
add
jne
test
and
lcall
stos
hlt
pushf
xor
jnp
mov
push
dec
popa
add
add
jo
icebp
jecxz
pop
iret
add
jns
out
sub
add
and
insb
and
jmp
add
in
scas
jns
add
jae
in
mov
cmpsb
pand
mov
call
inc
pop
cmp
pop
gs
or
cmp
add
mov
inc
sub
cmpb
jb
mov
sub
out
imul
cmp
cmp
and
fidivrs
adc
and
mov
dec
mov
nop
ss
popa
add
fsubrs
incb
jp
or
add
cmp
pop
addl
xchg
js
inc
rorb
or
int3
add
push
lcall
push
lcall
in
xchg
cmp
rcr
inc
push
aad
xor
add
add
and
lahf
add
cmp
nop
imul
or
inc
in
add
and
movsl
popa
add
aaa
aad
cmpsl
jo
cli
mov
push
stos
or
add
inc
cmp
push
int3
lea
ret
sbb
add
xor
rorb
dec
add
int3
loop
out
int3
add
jge
nop
dec
psrld
xor
cmp
imul
sub
lret
add
add
or
addb
imul
add
and
mov
in
mov
sub
sbb
jnp
mov
or
dec
cmpsb
mov
int3
iret
loop
call
nop
pop
or
add
bound
das
add
ljmp
mov
jl
push
imul
fcompl
add
hlt
insl
mov
dec
jle
mov
jmp
cmp
incl
add
dec
out
out
adc
mov
out
cld
out
cltd
add
sub
sub
std
out
out
cld
ror
add
cld
lret
cmp
mov
add
out
std
and
out
ja
out
out
nop
pop
std
or
out
pop
out
scas
jmp
out
add
jnp
dec
enter
jg
mull
rorl
xor
jae
inc
out
mov
add
add
dec
add
pop
sbb
nop
adc
or
movsl
mov
mov
push
mov
xor
inc
sub
nop
xor
add
int3
pop
in
xchg
mov
adc
enter
add
lods
std
dec
add
mov
add
add
fadds
mov
jo
jns
xlat
xor
mov
cmpsl
repnz
add
adc
das
and
add
aam
mov
inc
scas
push
int
jbe
notl
add
and
xchg
addb
popa
call
test
int3
mov
mov
lcall
add
pop
test
sbb
mov
mov
sub
add
fcoms
int3
adc
into
mov
arpl
mov
add
ror
test
xor
cmp
call
in
jb
inc
nop
or
sbb
mov
jo
or
js
mov
xchg
jo
movsb
setge
nop
nop
inc
mov
xchg
add
lret
aam
dec
and
mov
pop
add
add
shlb
in
daa
add
adc
add
movsb
arpl
dec
ret
add
mov
pop
sbb
add
std
cmpsb
roll
sub
cli
aas
ljmp
mov
lret
jo
sub
test
add
xlat
test
dec
add
scas
cltd
add
lcall
cli
pushf
insb
int3
movsl
test
int3
je
fwait
movsb
dec
add
into
lcall
stos
jb
add
and
dec
seto
pop
and
fidivl
sarl
rclb
cmp
add
add
inc
mov
and
insl
out
and
dec
mov
add
bound
add
or
add
cmp
mov
sbb
add
mov
shl
ret
pop
int3
cld
sub
sbb
hlt
jbe
add
jb
lea
push
add
add
pop
push
jae
nop
add
lea
and
jns
lods
addb
push
add
jnp
nop
leave
popa
inc
les
add
pop
mov
xchg
mov
std
sub
add
sbb
nop
mov
adc
nop
andl
or
sbb
mov
adc
mov
popa
and
xchg
fisttpl
pop
add
xchg
call
es
and
ja
add
fisttpl
mov
mov
popf
mov
movsb
or
add
jle
movsb
add
inc
cmc
add
je
int3
xor
negb
dec
aad
call
mov
in
lahf
add
push
mov
fists
xor
add
mov
or
clc
mov
mov
int3
jb
clc
cmp
aas
leave
add
fstpt
add
jo
sahf
pop
inc
mov
sbb
aam
insl
or
mov
mov
cwtl
adc
jle
add
out
add
sahf
addr16
imul
scas
push
add
and
hlt
int3
xor
dec
lea
data16
push
mov
add
sahf
lds
jl
adc
add
lret
inc
int3
cli
push
dec
add
ret
int3
cmp
aas
and
add
mov
mov
add
sbb
pushf
addl
add
and
sahf
cld
dec
addb
or
mov
push
xchg
fidivrl
and
notb
xor
shll
add
cld
mov
add
ret
imul
dec
jecxz
insl
lahf
mov
jmp
add
aam
int3
jbe
loopne
out
out
cld
out
add
pop
out
cmp
cld
out
cld
add
std
pop
add
sar
out
inc
out
std
add
cld
out
out
nop
out
add
out
add
jns
jle
jle
out
xor
mov
out
aaa
xor
sub
fildl
add
sbbb
add
scas
mov
scas
add
xor
mov
jp
adc
add
sub
mov
jae
add
and
scas
jmp
add
sub
or
int3
out
mov
shlb
push
dec
nop
add
int3
call
add
push
mov
test
add
insb
in
dec
nop
add
adc
add
or
push
mov
push
gs
inc
pop
or
dec
btc
xor
add
cmpl
adc
push
adcb
inc
mov
negb
jb
hlt
mov
inc
add
ja
xchg
repnz
and
daa
lds
add
aad
addb
add
add
sub
add
mov
sbbb
fwait
outsb
xchg
add
adc
add
sbb
jmp
shr
sbb
daa
aam
add
in
push
inc
cwtl
addr16
and
xor
stc
add
std
lea
dec
and
cli
add
roll
add
subb
nop
shll
add
addl
out
add
mov
mov
add
xor
sbb
lea
adc
inc
cli
addr16
add
rcll
add
cmc
cmp
roll
int3
lret
gs
nop
dec
sub
cmpsl
pop
add
or
push
fisttpl
jp
add
add
dec
inc
movsb
add
push
mov
mov
subb
loop
add
ds
add
rcl
stos
lods
and
add
int
nop
jns
movsb
int3
inc
push
call
incb
mov
xchg
fs
xchg
mov
out
xor
inc
sbb
mov
mov
pop
sbb
cmp
push
adcb
sub
xchg
clc
aas
lret
lret
mov
nop
xchg
or
inc
insb
loope
gs
and
repnz
xor
add
add
scas
mov
mov
inc
pop
dec
into
mov
nop
add
xor
nop
arpl
popf
jg
mov
in
je
ss
jb
pushf
pop
sub
aad
add
loopne
lods
push
mov
sahf
inc
add
adc
incb
add
out
jg
add
xlat
sub
call
xchg
inc
ja
std
ficomps
add
pop
nop
or
xchg
repz
nop
nop
add
adc
add
jne
add
or
call
or
out
roll
sbb
fadds
add
mov
lea
mov
test
fcomp
aaa
cmp
add
loop
lahf
out
aas
or
push
push
dec
or
add
add
cmp
cmp
jb
pop
call
or
add
dec
sbb
out
dec
add
lods
cmp
add
mov
mov
add
sti
fcoms
and
pushf
hlt
add
xchg
push
subb
call
dec
add
std
push
movsl
and
popl
add
arpl
xor
cld
dec
add
shl
out
cltd
out
cld
xchg
mov
aaa
add
popw
enter
out
add
add
cmp
data16
jmp
add
incl
add
and
shl
incb
roll
dec
mov
outsl
mov
dec
xchg
loop
shlb
add
dec
jg
enter
add
add
cld
std
add
aaa
cmp
jmp
and
out
out
cld
out
roll
out
push
out
and
add
cmp
out
add
add
cld
add
cld
cld
inc
cld
out
cld
insb
xor
out
cld
add
std
out
mov
sub
cld
out
out
cmp
jns
data16
add
mov
out
out
insb
out
nop
add
pop
cmp
out
add
out
jmp
out
cmp
add
out
out
jmp
mov
loopne
xor
aas
add
sub
cld
dec
pop
out
out
mov
out
jns
push
ljmp
pop
out
std
xor
out
and
jmp
loopne
add
cld
std
mov
out
jns
jmp
out
scas
cld
out
std
cltd
dec
dec
add
ljmp
dec
lea
dec
std
std
loopne
out
add
out
cltd
out
add
std
out
mov
out
out
data16
out
rolb
mov
xlat
clc
cmp
or
adc
mov
sbb
or
adc
mov
xor
out
jns
inc
xchg
adc
mov
repnz
jbe
push
cmp
mov
pop
mov
mov
adc
mov
sub
pop
xchg
call
rclb
xchg
lret
add
push
inc
push
dec
cmp
dec
and
incl
add
add
add
add
add
add
inc
add
incl
add
add
bound
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
addr16
add
add
add
incl
add
add
add
add
jmp
push
add
push
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
outsb
inc
add
add
add
incl
add
add
je
add
incl
add
add
inc
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
jb
gs
xor
cs
insb
inc
jbe
add
jbe
add
add
add
incl
add
add
addl
incl
add
add
add
add
incl
add
add
mov
add
add
incl
add
add
mov
inc
outsl
jb
js
je
jb
arpl
jae
add
arpl
gs
insb
add
incl
add
add
jne
je
insl
and
jb
jb
add
or
dec
dec
push
push
and
jb
jb
or
add
push
dec
dec
inc
and
jb
jb
or
add
add
inc
dec
dec
and
jb
jb
or
add
xor
cmp
push
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
imul
and
je
jbe
and
jb
imul
je
and
arpl
jae
data16
cs
inc
push
and
outsb
je
insl
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsb
popa
bound
je
and
imul
and
popa
jo
or
add
add
xor
aaa
or
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
insb
outsl
ja
outsl
and
imul
je
outsl
outsb
or
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
jae
imul
imul
imul
add
push
xor
xor
jo
jb
and
jb
jne
insb
and
outsb
arpl
outsb
and
insb
insb
or
push
xor
xor
or
and
outsl
jne
push
arpl
outsw
jb
pop
outsl
outsb
gs
je
popa
je
js
je
je
bound
or
add
add
xor
cmp
outsb
popa
bound
je
and
outsb
and
outsb
jae
insb
and
imul
add
push
xor
cmp
outsb
gs
arpl
and
popa
jo
gs
outsl
jb
or
add
add
xor
aaa
or
outsb
gs
arpl
and
insb
je
je
jb
popa
and
imul
jb
outsl
jb
or
add
add
xor
ss
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
je
jb
popa
and
popa
or
push
push
jo
insb
imul
and
jae
jb
jno
gs
gs
and
outsb
je
insl
and
je
jb
imul
je
imul
outsb
jne
jne
insb
and
jns
or
gs
jae
and
outsb
je
arpl
push
jo
imul
daa
jae
jae
jo
outsl
jb
and
insl
and
jb
insl
outsl
jb
and
outsw
jb
popa
je
outsl
outsb
cs
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
outsb
jbe
jb
outsb
insl
outsb
je
or
push
xor
cmp
outsl
je
outsb
outsl
jne
push
arpl
outsw
jb
popa
jb
jne
outsb
je
or
push
xor
xor
insb
outsl
popa
je
outsb
and
imul
and
fs
add
arpl
jae
data16
push
imul
sub
and
outsb
je
insl
and
jb
jb
add
add
or
add
push
jne
je
insl
and
jb
jb
or
push
jb
addr16
insl
cmp
add
add
cs
jb
addr16
insl
and
insl
and
imul
outsb
add
add
add
ljmp
inc
add
test
add
pushl
inc
add
add
add
add
incl
add
add
stos
inc
add
add
add
incl
add
add
lods
inc
add
add
add
incl
add
add
inc
add
lods
inc
add
incl
add
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
add
add
add
mov
scas
inc
add
add
add
incl
add
add
add
add
incl
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
push
dec
dec
inc
add
dec
push
dec
inc
push
dec
inc
add
dec
inc
pop
dec
dec
dec
inc
push
inc
push
pop
add
inc
push
pop
push
inc
add
add
dec
inc
pop
inc
dec
dec
dec
inc
push
inc
add
dec
inc
pop
inc
dec
dec
add
pop
cs
add
add
add
add
add
incl
add
add
inc
add
add
add
cmp
add
incl
add
add
ret
inc
add
add
add
incl
add
add
add
add
incl
add
add
and
inc
dec
add
xor
dec
dec
inc
add
add
and
inc
add
add
and
inc
dec
add
push
jb
addr16
insl
cmp
add
add
bound
data16
outsl
jbe
jb
jne
and
jae
bound
outsb
and
arpl
and
imul
and
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
or
ja
bound
je
jb
imul
or
inc
jne
data16
outsl
jbe
jb
jne
and
arpl
and
add
add
add
add
jae
arpl
imul
jb
outsl
data16
imul
outsb
and
jne
and
jae
bound
outsb
and
arpl
and
imul
or
jb
jne
je
and
and
outsl
addr16
insl
daa
jae
imul
insb
and
popa
je
and
push
push
outsl
addr16
insl
and
outsb
outsb
outsl
je
jae
data16
jns
arpl
je
outsb
jne
and
arpl
imul
and
jae
and
ja
bound
je
jb
imul
or
add
add
imul
outsb
and
arpl
imul
jne
and
arpl
and
add
incl
inc
add
add
add
incl
add
add
inc
add
add
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
sub
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
jo
js
js
or
or
add
add
or
add
or
or
pop
or
add
sub
outsb
add
insb
add
add
add
add
outsb
jne
insb
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
incl
add
add
faddl
add
add
incl
add
add
loopne
add
add
add
incl
add
add
add
add
incl
add
add
inc
add
je
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
gs
xor
fs
insb
add
dec
dec
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
jo
popa
insl
das
jo
add
add
add
add
ljmp
inc
add
inc
add
add
add
add
add
xor
popa
add
add
dec
addl
push
push
add
inc
add
push
add
xor
add
xor
xor
add
add
add
xor
bound
add
add
addl
dec
dec
add
addl
dec
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
addl
push
inc
add
addl
push
inc
add
xor
add
xor
xor
add
add
add
xor
data16
add
adc
inc
add
dec
add
inc
add
dec
add
xor
add
xor
xor
add
xor
add
add
add
inc
add
inc
add
addb
push
inc
add
xor
add
xor
xor
add
xor
add
add
hlt
addb
push
push
add
inc
add
push
add
xor
add
xor
xor
add
or
add
cmp
popa
add
add
in
addb
push
dec
add
addb
inc
pop
add
xor
add
xor
xor
add
add
xor
xor
add
add
addl
push
inc
add
addb
inc
dec
add
xor
add
xor
xor
add
or
add
arpl
aaa
add
add
aam
inc
add
add
addb
push
push
add
xor
add
xor
xor
add
or
add
arpl
cmp
add
add
addb
dec
inc
add
push
push
add
xor
add
xor
xor
add
or
add
arpl
popa
add
add
mov
push
dec
add
inc
add
push
add
xor
add
xor
xor
add
add
xor
arpl
add
add
addl
push
inc
add
inc
dec
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
in
addb
push
inc
add
dec
add
xor
add
xor
xor
add
add
xor
xor
add
add
addl
push
push
add
dec
inc
add
xor
add
xor
xor
add
adc
add
xor
popa
add
add
in
addb
push
inc
add
add
dec
add
xor
add
xor
xor
add
add
xor
arpl
add
add
addl
push
dec
add
inc
add
add
xor
add
xor
xor
add
sbb
add
cmp
popa
add
add
in
addb
push
inc
add
inc
add
dec
add
xor
add
xor
xor
add
sbb
add
arpl
cmp
add
add
addb
dec
push
add
inc
add
inc
add
aaa
add
add
add
xor
add
sbb
add
arpl
popa
add
add
in
addb
push
inc
add
inc
add
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
in
addb
push
push
add
addb
inc
dec
add
xor
add
xor
xor
add
and
add
xor
popa
add
add
in
addb
push
dec
add
inc
add
dec
add
xor
add
xor
xor
add
sub
add
cmp
popa
add
add
in
addb
push
push
add
inc
add
push
add
xor
add
xor
xor
add
sub
add
arpl
popa
add
add
in
addb
push
push
add
addb
push
inc
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
in
addb
push
inc
add
addb
inc
push
add
xor
add
xor
xor
add
xor
add
xor
popa
add
add
in
addb
push
dec
add
addb
dec
dec
add
xor
add
xor
xor
add
cmp
add
cmp
popa
add
add
in
addb
push
pop
add
addl
cmp
add
xor
xor
add
cmp
add
arpl
popa
add
add
in
addb
push
pop
add
addl
cmp
add
xor
xor
add
jb
addr16
jns
add
add
jne
jne
jns
inc
push
add
inc
arpl
outsl
jb
inc
jb
outsb
je
outsb
popa
add
add
jb
add
add
inc
outsl
insb
outsl
insl
bound
add
add
push
outsb
gs
gs
popa
add
add
imul
push
gs
bound
add
push
outsl
jne
push
imul
push
popa
outsb
popa
insl
popa
add
dec
jne
gs
bound
jb
add
inc
outsl
jae
popa
and
arpl
add
imul
add
popa
je
insl
popa
insb
popa
add
add
outsb
popa
fs
add
push
jo
outsb
imul
outsl
fs
and
jb
add
add
jae
jb
insb
imul
insb
imul
je
imul
popa
outsb
add
inc
gs
imul
imul
popa
outsb
imul
jno
add
push
ja
fs
add
push
ja
imul
insb
popa
outsb
add
gs
popa
outsb
imul
popa
outsb
arpl
add
outsb
arpl
add
outsb
insb
popa
outsb
add
outsb
outsb
imul
imul
popa
outsb
imul
jb
imul
push
outsl
jb
add
or
sbb
adc
add
or
adc
or
add
inc
add
push
add
dec
add
inc
add
test
inc
inc
push
add
test
inc
inc
push
add
test
dec
dec
inc
add
test
dec
dec
inc
add
test
dec
pop
dec
add
test
dec
pop
dec
add
dec
add
dec
dec
add
dec
add
dec
add
inc
add
dec
push
add
inc
add
inc
add
add
push
add
inc
add
add
xchg
inc
inc
push
add
inc
add
push
add
test
push
push
inc
add
inc
add
inc
add
imul
je
jae
add
jne
imul
outsl
insl
add
je
imul
and
popa
outsl
add
add
jne
push
gs
add
jne
push
imul
jae
jne
push
gs
add
jne
push
imul
jae
outsl
jbe
imul
jo
gs
outsl
sub
add
sub
popa
add
add
jo
and
imul
outsb
jp
add
ja
jp
popa
insb
popa
outsb
add
outsb
addr16
add
add
insb
insb
popa
outsb
add
gs
je
bound
je
imul
insb
popa
outsb
add
arpl
add
arpl
outsb
popa
add
add
imul
gs
arpl
add
add
cmp
push
add
inc
add
push
add
mov
inc
dec
push
add
inc
add
inc
add
mov
dec
dec
inc
add
mov
inc
dec
inc
add
mov
pop
dec
dec
add
mov
pop
dec
dec
add
mov
inc
dec
push
add
mov
pop
dec
dec
add
dec
push
add
dec
add
dec
push
add
dec
inc
add
add
push
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
mov
inc
dec
inc
add
inc
add
dec
add
inc
add
dec
add
mov
inc
dec
pop
add
mov
inc
dec
push
add
mov
inc
dec
push
add
mov
inc
dec
inc
add
push
add
dec
push
add
push
inc
add
push
inc
add
add
dec
add
add
push
add
add
add
inc
add
add
inc
add
add
inc
add
add
inc
add
dec
add
inc
add
push
add
mov
dec
dec
push
add
mov
dec
dec
push
add
mov
dec
dec
dec
add
push
inc
add
push
add
inc
add
dec
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
mov
inc
push
inc
add
inc
add
inc
add
mov
inc
push
inc
add
xchg
inc
push
dec
add
xchg
inc
push
dec
add
xchg
inc
push
dec
add
xchg
inc
push
dec
add
push
inc
add
pop
add
push
add
inc
add
push
add
inc
add
pop
add
add
push
add
add
inc
add
inc
add
add
xchg
inc
dec
inc
add
inc
add
push
add
xchg
inc
dec
push
add
popa
add
add
jne
add
jae
imul
ja
imul
insb
popa
outsb
add
popa
outsb
imul
gs
gs
popa
add
add
popa
outsb
imul
addr16
jns
jae
popa
outsb
imul
jb
outsl
and
arpl
jae
popa
outsb
imul
jne
add
add
popa
outsb
imul
popa
addr16
jns
add
add
popa
outsb
imul
popa
insl
popa
add
jae
popa
outsb
imul
popa
jb
addr16
add
add
popa
outsb
imul
gs
add
jae
popa
outsb
imul
imul
popa
outsb
imul
fs
popa
jae
add
add
popa
outsb
imul
je
insl
popa
insb
popa
add
add
popa
outsb
imul
jae
insb
jbe
outsl
jb
jae
popa
outsb
imul
popa
outsl
jb
jae
popa
outsb
imul
imul
jb
jo
bound
add
jae
popa
outsb
imul
je
and
arpl
add
popa
outsb
imul
outsl
insl
bound
add
add
jae
popa
outsb
imul
insb
add
add
popa
outsb
imul
imul
popa
outsb
imul
outsb
je
outsb
popa
add
add
jb
jne
jne
jae
sub
imul
add
jb
imul
outsl
jb
imul
add
jb
imul
insl
popa
insb
add
add
outsb
outsl
jb
imul
je
insb
imul
jae
add
add
imul
insb
imul
gs
popa
outsb
sub
jae
add
add
jb
popa
outsb
sub
insl
bound
jb
add
add
jb
popa
outsb
sub
je
outsb
jae
imul
popa
outsb
sub
jb
popa
outsb
add
outsb
arpl
jae
imul
data16
outsb
arpl
insb
jne
gs
bound
jb
add
add
outsb
arpl
arpl
popa
imul
outsb
arpl
bound
imul
insb
imul
add
insb
imul
add
insb
imul
add
insb
imul
outsb
imul
outsl
bound
outsl
add
add
insb
imul
je
and
jb
arpl
add
add
insb
imul
add
insb
imul
popa
imul
insb
imul
add
insb
imul
imul
add
outsb
insb
imul
add
insb
imul
imul
insb
imul
add
insb
imul
jb
arpl
add
add
fs
arpl
bound
imul
push
gs
imul
arpl
outsb
gs
sub
popa
jo
jb
add
add
imul
imul
gs
arpl
outsb
gs
sub
imul
add
add
arpl
outsb
gs
add
imul
arpl
popa
imul
bound
imul
je
popa
insb
imul
gs
arpl
sub
imul
popa
insl
gs
arpl
and
insb
imul
popa
insl
gs
arpl
add
add
dec
inc
push
add
push
add
jb
imul
outsl
jb
imul
add
jmp
or
in
inc
add
add
add
jmp
inc
add
inc
add
jmp
inc
add
inc
add
pushl
or
inc
add
add
add
incl
add
add
sbb
add
add
incl
add
add
add
add
incl
add
add
inc
add
outsb
dec
outsl
outsb
push
jne
push
gs
push
push
popa
je
add
dec
popa
outsb
inc
bound
jb
jo
dec
popa
jns
jne
dec
jne
inc
jne
push
gs
arpl
jbe
arpl
add
add
add
incl
add
add
inc
add
add
add
incl
add
add
add
add
incl
add
add
and
add
add
incl
add
add
and
add
add
sti
daa
inc
add
daa
inc
add
add
add
incl
add
add
sub
add
add
incl
add
add
add
decl
inc
add
inc
add
add
add
pushl
add
inc
add
add
add
jmp
xor
add
cmp
xor
add
int3
fiaddl
nop
lea
add
add
push
push
inc
push
mov
inc
jecxz
mov
jne
xchg
movsb
outsl
enter
add
pop
dec
outsl
insl
jne
imul
popa
jbe
insl
outsl
outsb
pop
pop
popa
jp
js
bound
imul
jno
pop
insb
outsl
fs
jb
arpl
outsl
pop
pop
jne
imul
insl
imul
jo
bound
add
lock
add
add
js
add
call
inc
add
inc
popl
add
popl
add
add
clc
lea
add
xchg
add
add
add
xchg
add
stos
xchg
add
cwtl
xchg
add
xchg
add
pop
xchg
add
dec
xchg
add
ds
add
cs
add
push
xchg
add
or
add
cli
xchg
add
call
xchg
add
ret
add
add
mov
add
add
decb
add
and
add
ss
add
inc
nop
add
push
nop
add
outsb
nop
add
mov
add
mov
nop
add
nop
add
fcoms
add
clc
nop
add
add
add
sbb
add
dec
xchg
add
pop
xchg
add
jo
add
adcb
add
xchg
add
ret
add
xchg
add
loop
add
lock
add
cld
xchg
add
or
add
xor
add
inc
xchg
add
push
xchg
add
bound
add
mov
add
mov
add
int3
xchg
add
out
add
xchg
add
sbb
add
dec
xchg
add
pop
xchg
add
push
xchg
add
mov
add
mov
add
enter
fcoms
add
out
xchg
add
cli
xchg
add
adc
add
and
add
cmp
add
add
add
add
pop
add
addb
add
cmp
add
aaa
add
orb
add
adc
add
or
add
fmuls
add
mov
add
mov
popl
add
add
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
jae
dec
gs
inc
jb
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
outsb
imul
imul
inc
outsl
dec
outsb
imul
add
outsl
insb
xor
cs
insb
add
xor
xor
fs
insb
add
lds
inc
gs
jb
imul
imul
push
imul
jb
je
arpl
xchg
add
je
outsl
arpl
gs
outsb
outsw
inc
add
je
push
insb
jae
insb
insb
outsl
arpl
add
add
je
jns
je
insl
dec
outsb
outsw
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
imul
jbe
push
je
imul
add
popa
jo
jb
add
or
jo
insb
insb
outsl
arpl
xchg
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
or
push
je
jb
jne
dec
outsb
outsw
inc
add
add
je
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
imul
addl
popa
jae
inc
jb
outsl
jb
add
add
imul
sub
inc
insb
jne
push
inc
jne
data16
add
mov
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
jbe
inc
jb
je
arpl
push
arpl
outsb
add
les
inc
popa
je
insb
inc
jo
inc
js
je
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
jne
jb
outsb
je
push
dec
add
push
add
je
jne
jb
outsb
je
push
add
mov
inc
jb
add
push
gs
popa
insb
jne
add
push
insb
jae
gs
popa
insb
jne
add
jb
arpl
fs
jae
add
in
add
imul
jae
lret
gs
fs
imul
insb
outsl
jae
dec
popa
outsb
fs
add
dec
gs
jo
gs
jb
jns
pop
add
popa
jo
jb
popa
je
add
aad
push
imul
jb
gs
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
add
popa
jo
gs
insb
insb
outsl
arpl
dec
add
inc
popa
fs
jb
je
push
je
add
insl
imul
outsl
arpl
jae
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
mov
inc
gs
je
dec
popa
outsb
fs
add
rolb
inc
gs
outsl
fs
gs
imul
add
mov
popa
outsb
fs
gs
js
gs
imul
gs
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
fs
push
dec
jne
je
inc
jns
add
inc
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
pop
add
je
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
imul
and
push
gs
imul
gs
add
push
je
dec
popa
outsb
fs
add
sub
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
push
outsb
ja
outsb
add
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
je
popa
insb
push
jne
jb
add
pop
add
je
inc
push
add
movb
gs
inc
dec
inc
push
add
sbb
inc
gs
push
dec
outsb
outsw
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
and
inc
gs
imul
je
add
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
je
jns
je
insl
push
imul
insb
gs
imul
jne
je
inc
jns
gs
outsl
push
imul
insb
add
gs
je
inc
imul
outsl
popa
fs
imul
add
out
inc
gs
imul
popa
je
add
insl
add
je
popa
je
inc
outsl
jb
popa
je
add
sub
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
fiaddl
inc
outsb
jne
push
jns
je
insl
dec
outsl
arpl
gs
add
push
add
push
popa
insb
imul
add
popa
insb
imul
addr16
add
je
je
imul
inc
add
roll
gs
je
imul
push
add
jae
dec
inc
dec
popa
jo
je
imul
add
popa
jo
je
imul
add
je
outsb
fs
inc
imul
gs
jo
imul
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
addb
gs
outsl
arpl
gs
outsb
outsw
push
add
insb
add
insl
jo
jb
push
je
imul
add
insl
jo
jb
push
je
imul
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
push
dec
inc
dec
xor
cs
insb
add
add
data16
inc
add
outsl
inc
add
loope
add
outsl
inc
add
add
add
ja
bound
jne
sub
add
add
add
add
add
add
mov
cmp
jp
jno
jae
out
lock
push
cmp
push
enter
mov
lea
pop
push
ret
ret
push
enter
rcl
or
int3
enter
dec
movl
and
repz
mov
add
sub
cld
dec
cmp
jns
and
lret
pusha
jne
arpl
push
imul
rolb
or
push
inc
pop
dec
add
shl
mov
pop
dec
and
fisubrl
push
popa
sub
cmpb
leave
pop
cli
lahf
pop
xchg
push
sub
and
push
mov
push
cmpl
inc
negb
js
dec
and
ffree
das
mov
mov
je
push
mov
out
lret
and
jne
scas
mov
in
repz
sahf
cli
movsl
cmpsl
jge
lahf
repnz
or
jne
jno
xchg
push
sbb
dec
jecxz
jmp
rclb
xchg
mov
jbe
outsl
mov
js
cmpsl
dec
das
adc
and
mov
jmp
sub
mov
fsubrl
push
shrb
aam
popf
icebp
pop
jmp
mov
add
rorb
push
fiadds
pop
repnz
dec
pusha
cmpsb
andl
jg
mov
fsubrs
test
pop
xchg
loopne
int
push
add
pusha
sbb
dec
test
loop
fucom
scas
int3
jmp
and
lods
pop
test
je
stos
ljmp
and
insl
pop
sti
sbb
xchg
mov
jp
push
mov
push
xor
adc
xchg
jno
cmpsl
scas
leave
aaa
and
inc
sub
jmp
add
test
dec
insl
mov
sub
lret
inc
lods
xchg
push
xchg
les
insl
jb
jo
jnp
pop
iret
mov
shll
add
push
cmp
pop
out
push
xchg
out
sub
test
add
push
jb
fwait
rcl
cltd
nopl
lret
mov
lahf
jb
repnz
cmp
mov
adc
mov
xor
lds
mov
cmpb
mov
roll
mov
jbe
fsub
sub
ljmp
adc
xchg
jbe
jl
clc
ljmp
lahf
sub
lods
fs
cmc
adc
sahf
mov
cli
out
and
shl
les
sub
push
cltd
jo
mov
aas
mov
popf
in
insb
jnp
insb
fsubs
cmp
add
mov
pushf
js
add
in
in
fwait
lahf
aam
imul
pop
mov
mov
sub
lods
je
add
or
fsubrl
dec
out
adc
adc
jno
rcr
arpl
loop
and
push
es
inc
scas
xlat
add
adc
dec
push
ja
adc
or
adc
out
pop
inc
fs
dec
dec
imul
cltd
sarl
cmpsl
xchg
jle
add
fnstenv
or
lea
gs
xor
mov
dec
lods
xor
mov
and
xchg
out
adc
dec
mov
incb
or
je
mov
ret
add
subb
mov
stos
push
cmpps
addb
mov
or
jg
in
or
xchg
pop
xor
xchg
mov
scas
dec
nop
jnp
jle
loop
mov
pop
pop
mov
mov
mov
decb
sahf
leave
cld
inc
rcl
cli
out
and
aam
jae
sbb
aas
gs
clc
jle
leave
fbld
js
or
mov
cld
lds
jns
push
outsl
shr
sarl
pop
inc
sbb
lret
adc
mov
pusha
xor
ss
aam
pusha
call
xchg
mov
sti
in
imul
dec
rcrl
outsl
xlat
fisttpll
cltd
cmp
mov
gs
out
or
cmp
pop
inc
cmpsl
jns
les
roll
int3
in
lcall
imul
push
xchg
jbe
fwait
adc
sahf
push
fdivrs
push
push
inc
mov
rcr
sub
mov
aam
cmp
inc
xor
pop
mov
loope
push
xor
stc
jb
into
aam
push
cmpsb
mov
pop
jle
push
maskmovq
idivl
mov
mov
xchg
sbb
in
loope
sub
fnstcw
push
mov
cld
or
idiv
cmp
xorw
pop
mov
sbb
sbb
mov
sbb
pop
mov
mov
das
dec
sbb
out
fnstcw
xor
stos
fiadds
adc
dec
sub
loopne
jp
xorb
ss
mov
daa
fnstenv
jae
xchg
mov
iret
xor
loope
rclb
mov
inc
movsb
rorl
mov
push
rcrl
lahf
les
mov
pop
xchg
lret
outsl
iret
popf
pushf
sbb
mov
sbb
mov
sahf
rcl
bound
mov
cli
nop
popf
fcoml
cmp
cld
xor
jo
pushf
int
xor
pop
xchg
inc
push
call
mov
pop
xchg
fwait
xchg
dec
cmp
adc
cmp
incb
mull
lcall
or
sbb
xchg
rcr
lcall
fsts
lock
jle
and
pop
jne
cmp
mov
jp
sub
xchg
sbb
out
decb
insb
sbb
and
aaa
jmp
xor
sbb
or
fcoml
mov
push
mov
xor
lea
icebp
cmpl
or
aad
mov
rolb
xchg
or
pushf
test
jne
scas
gs
ds
push
xchg
ret
ret
lahf
xor
jle
mov
je
or
xor
cmp
pop
pop
sbb
arpl
stos
push
dec
shlb
aam
inc
mov
adcb
pushf
lcall
cmc
dec
add
push
jbe
test
pop
loope
shrl
sbb
xchg
mov
mov
in
or
cmp
push
sti
inc
sub
mov
in
sbb
pop
ss
mov
mov
cld
xor
fidivl
and
rol
stos
daa
outsl
mov
mov
xchg
sbb
lcall
cmc
sub
cmp
push
mov
pushf
daa
sti
push
in
cld
jge
cmp
icebp
xor
mov
repnz
cli
pop
ljmp
ret
dec
mov
and
aaa
sbb
jo
aam
popf
iret
shlb
mov
mov
cmc
loopne
jle
mov
das
ds
aam
fcoms
icebp
sbb
stos
cltd
out
xchg
js
pop
sub
int
outsl
frstor
push
inc
leave
ja
in
in
sahf
pminsw
mov
xchg
stos
and
movsb
mov
mov
xchg
pop
adc
ss
push
inc
jp
pop
mov
push
inc
sbb
adc
insb
pop
inc
xchg
mov
lods
repnz
ss
inc
dec
lcall
and
push
push
and
jmp
mov
xor
int
pushf
sahf
adc
xor
and
mov
dec
xchg
hlt
in
loop
popa
testl
enter
les
xlat
mov
mov
mov
clc
cmp
repnz
lods
test
inc
out
and
sub
adc
lret
scas
bound
sub
ss
pop
fiaddl
out
std
push
out
cltd
add
out
fiaddl
add
std
pop
xor
out
cld
out
lcall
std
out
mov
cmp
std
out
add
add
incl
out
add
aaa
out
aaa
out
out
add
add
shrl
sub
shlb
std
dec
cmp
add
add
add
dec
out
mov
std
out
out
sub
fs
bound
jne
popa
insb
popa
ja
imul
jb
outsw
jb
js
arpl
jns
imul
outsl
jae
jp
outsb
gs
jo
jb
imul
je
insl
jne
imul
jo
insl
outsl
imul
insb
gs
jo
arpl
add
add
add
add
movsl
pop
loope
aad
mov
mov
sbb
mov
jns
mov
push
xchg
loop
shl
inc
sti
int3
cmp
push
push
jp
mov
inc
adc
mov
aaa
out
cmpl
ret
dec
nop
jns
lods
push
and
cmp
fstpt
loop
bnd
jae
jo
int3
incb
cmp
push
push
test
lods
mov
ret
push
fs
mov
cmc
cmp
jno
je
mov
sbb
add
enter
dec
mov
cmp
sti
cmpsl
sbb
xor
in
das
fisubs
call
repnz
cwtl
push
or
call
js
sub
and
add
mov
lock
adc
cmp
fucomi
or
inc
aas
cmp
xor
xchg
push
mov
mov
xchg
sub
mov
aaa
mov
pop
inc
lcall
in
pop
lock
jno
cmpsb
js
repnz
imul
adc
lret
lods
or
jg
xor
icebp
call
mov
push
mov
jl
shlb
push
mov
cmp
cmp
ret
test
sarb
mov
dec
jae
jae
xor
pop
mov
stos
stos
xorb
xchg
push
out
jge
pusha
rol
aas
mov
inc
int
clc
inc
lock
pop
cmpl
out
xor
pop
dec
fistl
sub
insl
in
out
movsl
stos
test
pushf
dec
push
push
pop
imul
sahf
or
and
lods
pushf
lods
mov
adc
in
push
xlat
cli
nop
lcall
call
xor
mov
cs
or
sub
xor
add
add
push
and
adc
hlt
mov
repnz
jbe
es
arpl
and
cmp
dec
xchg
push
out
lods
std
add
arpl
jae
push
cmp
lret
stos
idivl
xor
add
adc
aad
pop
outsb
dec
pop
mov
jg
fimuls
leave
add
pushf
cmp
sub
jecxz
and
out
cmp
cwtl
shrb
push
or
fdivrs
test
push
fs
mov
das
pop
add
xchg
mov
jl
inc
mov
cmp
dec
xor
nop
sub
js
jecxz
ret
mov
mov
notb
add
mov
adc
pop
shrb
adc
cmp
cmc
rclb
pusha
xchg
pop
cli
lea
orb
mov
or
mov
or
std
imul
add
sbb
ja
sub
js
inc
push
dec
das
frstor
stc
iret
subb
jno
mov
jl
ret
push
out
jo
fmull
lds
jge
and
xchg
push
sub
lcall
outsl
aas
xor
dec
pop
or
cmp
cwtl
add
push
mov
cmp
and
loopne
and
mull
pushw
stos
and
das
adc
xor
jp
in
mov
jnp
arpl
loopne
ljmp
xchg
fnsave
mov
xchg
push
test
xor
adc
icebp
push
leave
aaa
cmp
push
lcall
mov
push
fwait
xrelease
cs
sahf
mov
add
int3
cmp
adc
rorb
jnp
test
mov
mov
into
mov
aam
daa
inc
std
xchg
and
sbb
js
push
pop
rcr
dec
rcll
ror
jg
add
inc
nop
out
psllq
out
or
add
jmp
cld
data16
cld
out
cs
out
out
std
cltd
out
mov
xchg
out
cs
cmp
out
cmp
add
xchg
add
add
out
cld
cltd
loopne
out
lea
add
out
add
out
pop
add
mov
out
add
subb
std
sub
cmp
std
out
pop
sar
add
add
add
call
aad
jmp
fnstcw
js
jo
sbb
into
jnp
push
cmp
cld
in
int3
mov
in
sbb
or
cmp
add
mov
add
cmp
mov
add
xlat
add
adc
add
pop
popf
add
call
mov
sbb
icebp
mov
sbb
mov
int3
lods
mov
add
adc
xlat
gs
add
pop
loopne
jne
mov
rolb
mov
sub
int3
ret
movsl
cmp
inc
fadds
sub
rcrl
push
pop
fiaddl
jb
xor
int3
add
sbb
repz
adcb
push
xor
fstpt
insl
test
test
cli
add
icebp
add
jb
nop
repz
and
pop
cmp
arpl
jmp
push
cmpsl
mov
mov
push
push
in
nop
inc
int3
add
xor
sub
xchg
dec
lods
int3
add
mov
call
and
cmp
out
int3
adc
in
int3
jmp
add
sahf
mov
nop
xlat
clc
das
add
lret
and
nop
xor
ret
xor
push
daa
js
lea
adc
lea
add
inc
mov
add
jecxz
add
and
pop
inc
adc
lea
out
stc
mov
jne
test
jnp
add
roll
imul
scas
in
dec
out
lea
lahf
xchg
nop
int3
mov
ja
in
add
jge
add
and
add
or
xorb
test
int3
pop
xor
leave
mov
add
add
pusha
ja
fildl
sub
pop
outsb
jo
leave
data16
int3
int3
mov
addb
cmpsl
mov
dec
jb
mov
int3
add
xor
jmp
ret
inc
clc
push
add
cltd
add
add
fstps
addb
sbb
je
lea
pop
mov
int3
rolb
jl
pop
and
fwait
out
cwtl
add
and
add
inc
xor
outsb
pop
add
dec
add
adc
movsb
incl
add
cld
inc
cmp
jnp
sbb
add
stos
mov
jae
adc
or
jbe
xchg
lahf
xor
inc
xor
lea
pop
fnstenv
aad
add
add
xor
nop
jbe
dec
dec
sbb
add
mov
pusha
sbb
add
orb
dec
add
add
mov
std
mov
add
fsubl
std
shlb
and
lods
nop
add
nop
add
push
pop
inc
mov
sub
xor
bound
into
pop
add
negl
add
cmp
in
add
xor
or
dec
and
push
add
addl
add
add
fwait
push
rcrb
jecxz
lea
mov
call
xor
nop
dec
rclb
cwtl
mov
add
repz
popl
add
int3
pusha
pushf
add
xchg
in
mov
pop
nop
int3
dec
out
out
int3
pop
jle
xlat
fdivrl
push
jecxz
cmp
inc
add
std
pop
lcall
pop
lea
int3
add
adc
cmp
jns
cmpl
mov
iret
popf
xchg
add
push
and
jbe
mov
jns
inc
add
push
int3
add
jg
jmp
call
nop
aad
and
daa
je
lea
inc
nop
lahf
mov
mov
add
into
push
negb
pop
xorl
mov
mov
add
addr16
add
add
scas
sbb
nop
jmp
movsl
mov
add
pop
imul
add
int3
loope
cmpsb
inc
pop
lea
fnstcw
int3
adc
loop
orb
mov
add
in
inc
add
xchg
int3
mov
and
jb
sub
inc
add
sub
add
jb
mov
cmpsl
loope
inc
nop
add
test
lods
and
jae
sti
int3
int3
shrb
pop
jo
add
inc
or
aad
push
jb
nop
inc
xchg
mov
jle
add
mov
lods
sbb
rorb
mov
inc
cld
sub
add
fiaddl
inc
pop
mov
and
or
bnd
fistl
push
inc
mov
add
mov
push
sbb
imul
nop
xchg
xchg
jmp
imul
mov
add
rclb
add
mov
pushf
pop
roll
ljmp
sti
addb
mov
loopne
dec
mov
mov
cmp
not
movsb
repnz
xor
add
mov
add
out
cs
add
add
add
dec
cld
and
subb
lahf
cld
cmp
data16
out
add
aaa
out
out
mov
out
add
cs
cld
out
std
out
out
std
scas
lea
add
out
movsl
out
mov
dec
out
and
out
out
inc
out
rcrb
cmp
scas
cmp
jecxz
cld
sbb
add
jle
mov
add
pop
mov
dec
push
jne
jb
xchg
sahf
dec
jg
fadds
int3
popa
or
xor
mov
add
daa
mov
cli
aaa
int3
add
xor
xchg
call
add
xchg
nop
mov
icebp
nop
imul
add
je
or
jb
lods
adc
movsb
adcb
jg
add
jmp
add
cmp
fwait
jne
jb
gs
xor
and
add
fs
pop
and
jb
cmpsb
cmp
jns
sahf
and
scas
or
add
inc
call
add
mov
nop
jno
lcall
inc
stc
test
stos
in
sub
inc
daa
inc
jne
and
int3
mov
add
or
lahf
mov
nop
inc
add
test
mov
shll
add
loope
lods
addb
pusha
cmpsl
inc
mov
in
outsb
lock
test
dec
add
das
in
pop
xlat
pop
sbb
movsb
jecxz
xor
and
xchg
add
and
mov
jmp
jnp
add
pop
jno
leave
sub
add
lea
jge
jge
add
jl
add
and
add
sbb
and
movsb
lock
and
xchg
popf
and
mov
cli
add
push
enter
push
mov
lock
inc
add
nop
nop
push
mov
pop
add
dec
nop
cld
cmp
nop
push
fsub
lret
inc
pusha
cli
rcrl
mov
mov
int3
nop
test
popl
xor
sbb
movsl
inc
add
lds
pop
cmp
pop
lock
mov
add
mov
in
orl
add
mov
add
in
adc
ror
fmulp
mov
jb
jno
aam
add
jl
pop
fwait
int3
xchg
or
rcrl
popf
add
add
push
jne
nop
mov
add
add
nop
repnz
jg
aaa
shlb
inc
or
add
add
push
loope
stos
testb
pop
add
and
mov
cmp
mov
lahf
addb
pop
fldl
add
ror
mov
push
popa
jp
add
pop
inc
push
pop
adcb
ret
add
stos
xlat
jb
incb
inc
push
mov
add
pop
popa
lods
sub
push
adc
int3
add
push
adc
jo
pop
hlt
call
push
xchg
add
nop
add
leave
add
jbe
call
aaa
mov
mov
js
jnp
bnd
push
lret
add
aaa
nop
nop
es
xor
nop
repz
jl
jo
xchg
jnp
jbe
add
cmp
aam
add
repnz
movsb
mov
fisttpll
xchg
add
std
xchg
xor
xor
inc
movsl
loop
nop
ret
add
int3
cmp
icebp
insl
add
sbb
mov
jmp
fstl
add
rcrl
inc
add
ret
clc
add
insl
adc
fistpl
loopne
nop
cmp
and
mov
pop
pop
xor
lds
inc
sub
stos
das
int3
ljmp
std
out
add
mov
and
dec
mov
mov
inc
test
in
nop
add
fs
add
ficoms
inc
mov
add
data16
jmp
xorl
adc
add
pop
inc
push
add
scas
mov
pop
jecxz
pushf
stos
fsts
xchg
mov
nop
jbe
push
bound
push
cwtl
jl
add
inc
repnz
mov
inc
xchg
lcall
js
jae
nop
pop
add
mov
cmp
mov
gs
call
adc
jo
mov
pop
inc
push
nop
add
jb
incl
call
mov
jp
addr16
xchg
cmpsb
pop
mov
sub
nop
add
push
add
dec
scas
into
inc
mov
sbb
pop
mov
out
adc
xor
in
add
pushf
inc
nop
call
mov
mov
int
mov
out
add
push
lock
add
fsubl
data16
xor
dec
roll
add
add
add
jns
jns
out
cmp
out
add
mov
mov
inc
out
loopne
sbbb
dec
out
out
jecxz
add
std
add
cmp
add
ss
into
out
add
shl
out
out
ss
out
add
lahf
out
out
add
loopne
data16
add
out
out
out
out
std
cld
pop
out
out
data16
mov
xchg
mov
jo
add
stc
and
neg
add
mov
mov
out
push
adcb
add
cltd
and
cmp
add
js
dec
rclb
sub
int3
push
pop
mov
les
out
and
xor
sti
xorb
and
pushf
adc
lret
xor
out
add
pop
inc
in
nop
inc
decl
cmc
jo
stc
stos
mov
mov
fpatan
or
sbbb
fldenv
add
outsb
add
fs
mov
adc
cmp
rol
call
xor
nop
int3
int
and
add
or
fdivrl
int3
dec
adc
les
add
xchg
sbb
add
cli
imul
mov
add
mov
add
jb
and
test
adc
add
dec
lcall
xorl
loopne
add
xchg
int3
int3
mov
and
or
mov
dec
inc
push
aam
pxor
inc
popa
loopne
xchg
pop
int3
add
xor
sbb
int3
nop
das
push
movsl
push
mov
add
aad
mov
pop
inc
mov
nop
aam
push
mov
xor
jl
add
out
and
pusha
inc
mov
xchg
add
add
addb
arpl
popa
pop
jnp
int3
call
sahf
nop
call
add
xchg
jmp
mov
mov
cmpsl
xchg
add
pop
jle
lea
int3
nop
jecxz
cmc
loop
push
int
inc
pop
call
add
xor
jge
jb
mov
jb
stc
add
icebp
adc
cmpsb
add
cmp
test
and
movsb
rorl
test
inc
add
lea
inc
sti
add
daa
cmpsl
and
add
add
jmp
and
xchg
cs
call
nop
push
notb
std
out
add
jle
mov
int3
int3
test
out
in
rol
and
jle
mov
xor
sarb
pop
add
jo
andb
inc
add
jnp
sub
mov
mov
add
lahf
and
das
xchg
mov
add
and
enter
lret
test
nop
add
call
loopne
and
cmpsl
test
sub
add
inc
jo
in
mov
mov
cmp
add
bound
addb
pop
mov
shr
fldcw
filds
hlt
add
call
cli
add
arpl
add
fldl
xchg
stc
sub
int3
inc
push
mov
rorl
inc
add
sbb
add
dec
nop
add
push
add
lret
nop
cwtl
fstpl
loope
jno
adcb
xorb
ds
add
sub
add
cmpsl
sub
and
sbbb
add
sbb
add
mov
xchg
roll
mov
pushf
aas
lret
dec
inc
lret
clc
movsb
mov
call
or
inc
loop
and
xchg
add
mov
jmp
out
push
add
mov
jmp
ljmp
stos
das
cwtl
cmc
or
dec
add
cltd
hlt
lds
add
inc
flds
mov
nop
add
mov
mov
mov
int
cmp
add
mov
add
test
test
add
cmp
or
add
ret
movsl
mov
inc
adc
sbb
pop
not
add
adc
mov
nop
mov
mov
push
lret
add
enter
add
jp
pop
daa
add
xchg
roll
mov
jecxz
stc
test
nop
negl
mov
add
inc
ret
std
es
mov
into
mov
add
nop
call
pop
int3
add
push
movsl
mov
movsl
push
lea
xchg
sbb
outsl
rclb
add
sbb
mov
pop
nop
loop
out
jnp
aaa
ljmp
out
rolb
xor
clc
cmp
xor
add
cmpsl
xlat
add
mov
int3
sub
jae
repnz
xchg
rcll
jb
imulb
sub
sbb
int3
arpl
loopne
sbb
nop
sbb
xor
xor
add
xchg
int3
inc
repnz
push
jl
nop
jo
fmuls
je
xor
sarb
add
pop
dec
push
add
and
lods
push
out
inc
out
int3
popf
add
addb
mov
int3
and
add
xchg
inc
cmp
add
out
loop
add
std
cld
cld
inc
repz
out
out
add
mov
cmp
cld
out
cmp
add
dec
xor
out
outsl
add
adc
add
call
mov
inc
call
daa
add
pop
mov
ljmp
push
push
mov
nop
jo
sub
out
lret
popf
mov
jae
add
and
add
je
jle
imul
xor
stc
test
jne
lea
sub
jnp
orb
and
nop
pop
outsb
mov
test
add
sbb
sbb
fadds
pop
mov
insl
test
int3
push
xchg
push
mov
or
add
add
int3
and
js
nop
cmp
out
adc
adc
add
mov
add
into
imul
add
jne
add
mov
add
in
aas
jo
in
mov
or
jo
cmp
mov
int
nop
lret
lock
and
call
cs
add
jae
dec
nop
das
adc
xchg
push
cmp
nop
dec
stc
and
flds
nop
lods
inc
xor
mov
int3
add
adc
add
xchg
out
cwtl
int3
jecxz
test
out
testl
or
call
lods
sub
int3
xor
add
adc
push
or
cmp
pop
add
add
shll
dec
jmp
pop
aad
mov
and
add
mov
lahf
int3
pop
add
test
add
cwtl
popa
pop
test
ret
inc
sar
add
add
push
xchg
insb
fwait
add
cmp
out
enter
stos
mov
into
jne
lock
cmp
aam
xchg
inc
xchg
dec
fwait
push
mov
mov
add
mov
nop
inc
adc
add
ret
add
int3
ficoms
mov
aam
add
nop
add
jge
movb
and
and
nop
or
inc
in
add
cld
ja
xor
xor
mov
icebp
inc
push
cwtl
mov
add
pcmpeqw
mov
in
fisttpll
sub
lock
xchg
add
jge
gs
add
cmp
inc
pop
add
adc
adc
inc
test
addr16
dec
add
sub
gs
mov
mov
rorl
mov
fists
cltd
add
push
xor
jb
mov
out
int
call
scas
inc
mov
out
pop
add
add
and
jbe
pop
bound
cmpsb
nop
dec
insl
dec
add
cmpsb
mov
and
jb
xchg
add
mov
cmpsl
out
jle
add
std
jg
nop
pop
cld
nop
int3
gs
cmp
jo
push
xchg
lea
insb
gs
mov
pusha
jb
cmp
gs
int3
cmp
add
nop
add
xor
add
loop
and
jo
xor
call
rcll
add
add
mov
add
push
js
dec
push
jecxz
xlat
inc
test
sub
add
nop
nop
push
mov
scas
xchg
dec
push
nop
repnz
and
xor
xor
fwait
movsl
ret
add
mov
bound
add
add
jecxz
loopne
jo
mov
fwait
test
int3
aam
pop
cmp
lds
jne
lea
jo
and
xor
repnz
cltd
popa
dec
lock
mov
pop
add
into
in
add
pushf
enter
in
add
push
xchg
add
xchg
mov
dec
add
inc
xor
js
xchg
add
lods
inc
movsl
pop
testl
fdivl
ret
ljmp
pusha
adc
pinsrw
inc
in
fcompl
inc
jb
lea
nop
nop
xchg
rorb
add
pop
add
repz
inc
mov
sbb
out
enter
add
adc
add
call
and
cltd
je
add
movb
lcall
adc
sub
jno
or
jns
push
mov
stos
sar
dec
call
test
js
clc
add
cmp
in
lock
iret
inc
int3
pop
mov
sbb
adc
addb
mov
add
filds
xchg
jge
add
mov
gs
add
mov
clc
inc
jbe
sarb
mov
int3
pop
mov
jg
pop
mov
xor
ds
fadds
loop
imulb
jg
cld
pusha
int3
lea
xor
jge
pcmpgtw
inc
sbb
call
lea
stos
add
add
pop
and
lret
push
lock
stos
rcrb
int3
add
sti
test
adc
jge
pop
mov
add
mov
mov
je
and
es
cld
lea
out
xor
add
test
cltd
mov
mov
out
add
cld
out
out
out
rolb
out
out
clc
out
out
ds
std
std
add
std
roll
dec
dec
mov
xor
cld
aaa
out
std
adcl
dec
sar
decl
sbb
pushl
cs
add
dec
shll
sub
add
adc
stc
add
pop
push
lea
int3
add
mov
shll
mov
fisubs
out
add
jecxz
and
nop
nop
dec
cmpb
nop
add
cltd
flds
add
and
repnz
and
add
push
test
sub
js
push
movsb
and
and
add
in
inc
add
xor
sub
setp
add
ja
pop
std
nop
inc
cld
je
aaa
push
add
and
ss
shlb
add
data16
xor
fcompl
das
insb
add
mov
fnstenv
pop
add
add
push
test
xorl
dec
add
ja
int3
fiaddl
add
imul
out
mov
jo
popa
out
repnz
aas
and
xorb
dec
sbb
xchg
add
add
out
inc
mov
xor
mov
shll
nop
inc
lret
scas
cmp
or
nop
sbb
pop
dec
add
jbe
jnp
adcb
add
add
or
add
sub
outsb
pop
cwtl
add
movsb
sbb
and
loopne
cmp
add
push
or
add
xor
dec
or
ljmp
xlat
jge
ja
dec
and
add
inc
fldl
jb
mov
pop
inc
sub
pop
push
popa
aas
cmp
add
add
sarb
sub
add
enter
inc
add
imull
gs
add
inc
cltd
scas
push
push
jo
or
push
roll
roll
sub
adc
int3
adc
insb
pop
add
pop
pop
lods
scas
add
lea
lret
xchg
mov
inc
fists
flds
mov
fnstenv
lea
sbb
adcb
adc
lea
leave
sub
add
daa
fnstenv
lret
fimull
add
cs
idiv
mov
ljmp
mov
cmc
jecxz
and
nop
mov
hlt
adc
inc
and
arpl
xlat
aas
add
push
jecxz
aaa
add
and
dec
insl
cvtdq2ps
add
loope
add
imul
repz
or
jo
mov
xor
enter
mov
mov
add
jp
xor
aam
pop
add
mov
int3
rcll
test
sub
pop
or
mov
popf
fwait
cltd
mov
add
outsl
cmp
inc
inc
add
jo
ja
pop
dec
mov
das
scas
pop
sub
sub
mov
outsl
scas
lea
mov
pop
sub
popf
add
mov
lahf
dec
pop
add
push
add
in
jne
pmuludq
call
sbbb
cmpsb
loopne
nop
in
mov
dec
sub
add
cli
sub
mov
add
inc
frndint
imul
test
movb
aaa
addr16
loop
add
nop
add
push
iret
add
push
int3
add
call
mov
mulb
add
repz
jg
add
mov
push
xchg
add
adc
fidivl
add
mov
xchg
pushf
or
add
scas
pop
in
add
xor
cmp
in
inc
mov
sub
push
inc
dec
ljmp
push
xor
mov
pop
add
dec
mov
jbe
xchg
adc
dec
inc
pop
jl
add
scas
lea
sahf
ret
mov
push
pop
int3
jns
add
xchg
mov
add
sub
mov
add
mov
int3
roll
aam
add
jb
inc
push
shrl
and
pusha
pop
inc
pop
add
scas
pop
out
lcall
lock
shll
mov
adc
sbb
add
mov
add
addb
add
add
add
ret
outsb
pop
loop
int3
add
dec
testb
xchg
xorb
mov
mov
mov
in
or
sbb
jns
aas
dec
adc
cld
out
aad
std
out
rcl
cltd
data16
add
data16
jmp
rolb
push
dec
xchg
out
add
out
or
cld
out
out
shl
sarl
dec
add
or
imul
addr16
or
add
fsubs
inc
add
sub
add
addb
mov
jae
add
stos
out
stos
add
pop
push
mov
add
add
pop
daa
fsubrs
add
and
mov
inc
jo
cmpsb
or
fcomi
jns
call
pushf
cmpsl
and
add
into
add
sub
jb
adc
pop
jae
add
rcll
add
insl
dec
mov
add
cmp
movl
add
push
add
xchg
fmul
add
fistpl
cmc
mov
aaa
add
lock
sbb
add
dec
add
cmpsb
pop
popf
pusha
add
add
out
lea
mov
roll
sub
scas
lahf
nop
nop
and
nop
jp
nop
insb
mov
call
mov
push
insb
add
push
das
lea
movsl
pop
add
push
xchg
push
imul
int3
ja
mov
cmp
icebp
add
imull
stc
int3
add
add
add
mov
cwtl
addb
xchg
test
jo
mov
add
cwtl
xor
call
add
xor
nop
add
in
call
out
test
add
xchg
or
mov
call
mov
shl
nop
xor
add
add
xor
je
add
out
nop
int3
add
push
mov
outsl
add
inc
subb
lea
mov
add
add
lahf
add
or
mov
add
lcall
xchg
iret
and
pop
sbb
xchg
add
dec
test
div
mov
add
xchg
mov
adc
add
and
or
mov
nop
add
into
jl
roll
jns
cmpl
ljmp
cs
lea
add
repnz
push
xor
incl
add
inc
jl
repnz
fcmove
push
adc
push
jo
cmp
pop
sub
jne
ret
inc
jo
sbb
mov
xchg
mov
data16
bound
jb
rcl
test
add
add
loopne
std
out
push
imul
dec
out
cltd
jns
fdivr
std
sub
sarl
ljmp
std
cltd
loop
and
xor
cltd
mov
aas
add
add
nop
out
out
dec
out
add
out
inc
dec
inc
out
cmp
out
std
sbb
fadds
loopne
add
lahf
loopne
and
mov
add
rcrl
and
cld
fmul
nop
shll
sub
sarl
nop
test
xor
inc
mov
in
int3
inc
nop
int3
mov
int3
nop
xchg
xchg
push
cwtl
int3
adc
filds
sbb
sbb
and
jne
sub
inc
sahf
adc
out
mov
push
add
sub
add
nop
add
dec
xchg
push
jb
nop
add
add
lahf
stc
call
dec
cmc
or
les
mov
inc
add
add
imul
rcll
lock
jb
mov
sub
jo
pop
xor
stos
add
clc
fbld
inc
repz
jno
int3
mov
pop
pop
xor
jo
pushf
enter
mov
pop
cmp
jb
jecxz
nop
mov
mov
add
add
insl
inc
shl
pop
mov
cmp
lea
push
aas
sbb
mov
add
sub
rcl
add
or
mov
fiadds
and
sub
add
cwtl
in
popf
in
imul
add
or
testb
mov
or
add
or
jns
mov
les
push
sbb
jae
jae
mov
and
bswap
inc
sbb
push
and
mov
leave
stos
mov
fistpl
lods
sub
jl
add
fisttpl
inc
and
mov
clc
pop
cmp
add
clc
add
js
insb
data16
leave
jo
cmp
inc
add
mov
or
int3
aaa
ljmp
loopne
test
add
mov
cltd
adc
cmp
push
add
or
nop
add
fidivrs
sbb
sbb
mov
push
mov
pop
add
sbb
call
xor
and
and
mov
add
sbb
call
add
cmp
pop
sti
mov
pop
xor
jne
add
mov
jbe
jbe
xlat
in
mov
rolb
add
enter
jo
mov
leave
mov
add
xchg
dec
xchg
pop
int3
add
js
int3
cmp
or
add
sub
outsl
stos
push
mov
sahf
mov
insb
mov
mov
jp
dec
js
aam
add
addl
movsl
add
jle
outsb
js
add
and
aaa
cld
orb
nop
rcr
inc
nop
imulb
int3
add
cmc
rcl
push
add
and
nop
rorl
mov
mov
inc
daa
add
jge
jg
add
add
outsl
add
imul
sub
addr16
bound
jae
aaa
out
add
mov
nop
add
in
or
add
stc
pop
inc
add
nop
add
pop
cmpsl
mov
add
aam
in
pop
stc
aas
in
push
add
adc
sub
push
call
add
xchg
fadds
inc
lods
out
push
int3
nop
dec
mov
add
sub
add
sub
sub
adc
add
out
xor
add
pop
int3
ret
push
arpl
cld
cwtl
add
add
inc
xor
jb
in
pop
icebp
fs
sahf
fists
jns
adcb
mov
sub
add
leave
inc
pop
lret
data16
fdivr
int3
mov
call
push
std
mov
jl
push
cmp
or
into
inc
mov
scas
nop
mov
test
lock
popl
insl
aad
insb
fildl
add
lcall
mov
pop
add
jae
stos
int3
add
sti
scas
push
add
jmp
gs
mov
jecxz
nop
mov
xor
mov
add
aad
jo
scas
bound
test
int3
sub
inc
sarl
or
scas
lods
push
and
add
pop
jmp
jl
mov
and
mov
mov
outsb
leave
cmp
mov
jmp
or
popf
jp
jb
mov
sub
add
leave
cmp
loop
mov
mov
cld
out
add
testb
mov
aad
int3
xlat
adc
add
rol
sbb
out
test
add
icebp
lret
ud2
push
jp
add
int3
call
jo
loopne
dec
nop
dec
aas
sub
push
or
add
roll
xor
mov
sub
out
add
sub
mov
cli
add
out
imul
and
mov
mov
add
popl
cmc
addb
add
sbb
sysret
rolb
aas
out
add
add
add
data16
xchg
dec
loopne
cld
std
xchg
std
data16
ss
data16
cld
std
mov
out
out
add
cld
cs
fdivr
cmp
add
add
cltd
mov
add
xor
add
out
pop
lahf
loopne
pushl
add
out
into
lea
cmp
xor
add
add
out
cmp
add
ds
or
add
outsl
inc
stos
loopne
mov
jno
pushf
dec
add
adc
cwtl
add
add
jle
nop
jo
dec
push
pop
add
cmpsl
mov
ss
add
js
mov
add
movsb
add
mov
mul
out
xor
add
inc
xor
ret
lods
jg
call
or
ja
adc
nop
mov
cwtl
cmp
add
test
or
push
xchg
pop
ja
add
xchg
xlat
push
sub
add
jo
xchg
inc
pop
jge
jb
rcrl
outsb
int3
scas
imul
nop
scas
rcl
lcall
stos
lea
imul
int3
sbb
and
sbb
xchg
push
pop
nop
adcl
sbb
cmp
nop
jne
int3
out
popf
dec
mov
out
pop
fimuls
add
inc
fnsave
add
add
rcrl
int3
add
dec
inc
cmp
jmp
mov
clc
jl
add
hlt
lods
xchg
lods
nop
mov
loope
sbb
dec
or
lock
add
das
inc
nop
push
cmpsb
sub
lea
cmpsb
je
jle
add
pop
add
lods
jb
add
add
add
jecxz
dec
call
pop
xor
xor
pop
mov
jb
xchg
sahf
outsb
jecxz
mov
aad
sbb
cmpsl
push
fiaddl
call
stc
add
imul
movsl
push
rcr
add
nop
int3
cmp
inc
add
mov
lods
mov
push
jo
dec
cmp
adcb
push
ret
push
test
sti
pushf
mulb
inc
cli
add
repnz
inc
imul
mull
stos
add
outsb
or
add
mov
lock
lea
call
popf
test
xchg
addl
test
pop
add
insb
fiaddl
adc
call
add
mov
xchg
inc
iret
int3
nop
pop
jmp
jmp
lock
add
and
jo
repz
push
add
pushf
fcmovu
and
int3
add
cmp
adc
lret
mov
int3
jns
add
add
add
mov
add
xchg
lret
and
adcl
or
sbb
call
pop
cld
xor
lods
cmpsb
push
lahf
lea
dec
clc
inc
pop
stos
call
sub
mov
pop
cs
int3
int3
ja
mov
add
jo
sbbb
pop
pop
dec
push
add
xor
fs
pop
movsb
dec
mov
call
add
add
nop
pusha
das
adc
pop
outsl
add
and
mov
and
imul
mov
mov
mov
add
je
int
push
scas
shll
xorb
mov
mov
js
addb
pop
sbb
inc
cltd
xchg
add
mov
add
aaa
cmp
add
jo
rcll
mov
dec
int3
jns
add
inc
mov
into
pop
pop
int3
ljmp
ror
push
inc
add
inc
add
jp
add
nop
add
fmull
addl
mov
cld
and
pop
leave
add
insl
xlat
mov
and
sarb
xchg
mov
lea
aas
pop
call
and
pop
and
fldln2
ret
add
fadd
inc
add
inc
int3
pusha
push
jl
add
and
mov
mov
test
add
imul
add
nop
mov
mov
mov
incl
cmpsb
ja
mov
jnp,pt
call
push
add
seto
call
dec
mov
lods
fnstenv
jne
add
mov
cmp
sarl
fisubrs
xchg
jns
add
adc
call
add
fisttpl
push
call
adc
mov
popf
lea
xorl
adc
xchg
fildll
stos
ljmp
jb
aad
add
setns
jnp
jns
push
mov
jne
pop
into
add
and
xor
cwtl
repnz
inc
adc
jmp
xchg
add
aam
mov
into
or
add
and
sbb
add
cmp
popf
add
inc
add
xor
sub
enter
mov
pop
add
jno
popf
xor
add
push
sbb
xchg
jmp
daa
loopne
fwait
xchg
add
cmpb
pop
cld
add
shll
out
out
out
cs
cmp
add
out
add
scas
add
out
out
and
out
add
out
pop
cltd
loop
pop
data16
cs
ljmp
pop
data16
out
add
cltd
jns
out
movl
out
clc
out
pop
add
jno
fadds
add
stc
pop
add
mov
mov
stc
jmp
call
fisubs
int3
xlat
adc
add
mov
sbb
mov
adc
popa
mov
mov
push
xchg
filds
mov
adc
add
xor
pop
jb
jecxz
add
fwait
arpl
test
xchg
mov
inc
lcall
cltd
jb
filds
xchg
ficompl
xor
ljmp
lret
add
inc
sub
xchg
fwait
int3
nop
or
and
lea
int
psllq
mov
xchg
add
imul
or
and
pop
push
int3
nop
test
test
scas
jp
or
push
push
jae
lret
add
adcb
insl
add
xor
mov
leave
scas
scas
add
nop
add
push
or
iret
out
call
add
push
int3
jo
scas
aad
add
xchg
mov
inc
fucom
punpckhwd
insb
xchg
or
inc
sbb
add
mov
push
nop
add
mov
mov
add
lea
pushf
add
pushf
test
pop
in
mov
mov
mov
das
cmp
mov
int3
les
sarb
inc
int3
add
inc
xchg
insb
push
cmp
idivb
mov
mov
add
pop
outsb
stos
add
cwtl
mov
add
fwait
mov
nop
mov
scas
jb
mov
out
jge
mov
add
nop
jo
dec
xchg
inc
xlat
xchg
add
testb
push
dec
inc
or
sub
lea
lret
dec
lods
adc
incl
add
call
bound
sub
movl
call
sub
pop
pop
cmpsl
fiaddl
xor
js
aam
inc
mov
push
sub
xor
inc
in
int3
jno
loope
js
mov
add
hlt
adc
mov
inc
popf
add
mov
int3
jo
cld
mov
es
mov
int3
mov
idivb
pop
add
cmp
sbb
add
push
outsb
sti
sbb
fdivrl
movsb
int3
shlb
jnp
mov
inc
pop
repnz
and
in
test
and
mov
xor
sub
sbb
sub
dec
push
pop
add
add
js
pop
clc
clc
push
mov
add
gs
sbb
mov
rorl
inc
sub
int3
mov
notl
add
repz
sub
fmul
das
mov
and
xor
decb
add
shrl
jnp
nop
mov
lcall
insb
mov
outsl
and
and
aas
add
push
xchg
std
insl
add
xor
mov
add
xchg
ja
std
xor
mov
nop
out
xorb
inc
in
daa
or
add
imul
adc
mov
cltd
xlat
lea
and
jo
add
mov
xor
pop
inc
lret
pushf
xor
psubsb
sub
jl
mov
rcrb
xor
mov
call
jle
enter
add
push
lret
xchg
add
rcr
cltd
movsb
int
lods
jo
jmp
add
jb
lret
pop
push
cmp
push
adc
push
mov
out
or
add
in
mov
mov
inc
add
sbb
add
lea
ja
je
push
sub
add
clc
dec
test
xlat
push
add
xor
xor
pop
nop
int3
mov
mov
aad
cli
das
add
loop
inc
add
enter
dec
mov
xor
add
lea
fmuls
pop
xchg
int3
pop
inc
out
mov
rcl
mov
scas
add
out
out
add
loopne
xor
out
add
shl
pop
data16
add
andl
into
nop
mov
jae
test
sbb
inc
es
jp
add
loopne
shll
add
jns
jl
insl
daa
xchg
aad
mov
mov
add
inc
lea
lods
loope
int3
jns
fstpt
enter
jmp
sbb
hlt
and
pop
loope
in
pop
push
out
addb
or
mov
in
leave
call
xor
inc
add
sahf
sub
or
fbstp
lcall
cld
or
int3
in
sub
mov
cmc
xor
leave
nop
add
imul
add
call
cmp
sub
add
add
lcall
aaa
rol
add
mov
scas
jmp
add
sbb
dec
add
mov
add
les
xchg
add
cmpsb
add
inc
aam
test
add
add
add
inc
adc
inc
or
nop
inc
orb
mov
cmp
push
sbb
push
shl
jae
add
cs
lahf
cmc
add
pop
sub
sub
ret
fsubl
mov
push
lcall
xorb
nop
icebp
xor
sbb
lock
inc
inc
push
test
add
jecxz
sub
addr16
nop
lea
jo
sbb
int3
inc
aaa
lea
add
jecxz
or
add
pop
and
add
cltd
ficomps
add
add
mov
cwtl
push
jnp
add
mov
ror
cwtl
adc
pop
call
lcall
cmpsb
mov
mov
int3
arpl
add
lods
mov
sahf
xchg
and
call
shll
pop
jb
adc
dec
ret
jb
add
pop
les
add
xchg
push
test
jge
loopne
cmp
jnp
add
test
sar
sub
sar
mov
setg
add
lods
data16
jae
or
andb
int3
nop
outsl
push
dec
xor
add
jmp
add
cmpsl
add
dec
adc
movb
sub
cmpb
pop
in
sbb
adc
jb
into
das
ja
int3
xorl
mov
imul
out
and
add
nop
int3
xor
fisubrs
lret
scas
inc
add
jp
ret
loop
int3
scas
add
push
and
or
out
aaa
adc
mov
ret
ljmp
int3
flds
jmp
mov
cmp
add
imul
add
xchg
jb
fiadds
test
mov
das
mov
dec
cmp
js
add
nop
ret
jge
pushf
and
int3
add
mov
sub
sbb
mov
xchg
divb
int3
add
or
fsubr
xchg
xchg
movsl
dec
int3
add
stos
lods
add
daa
je
add
dec
add
inc
xor
arpl
fadds
mov
mov
inc
inc
xor
xor
jle
add
aas
push
add
aaa
dec
ja
add
cmpsb
mov
in
lcall
aaa
mov
add
pop
sub
lds
mov
nop
jo
fistps
cli
and
mov
xor
and
in
and
das
int3
nop
jbe
push
and
pop
mov
mov
pushf
add
add
jbe
sbb
cmc
nop
int3
adc
ljmp
mov
add
sti
jecxz
sahf
nop
add
xchg
popa
dec
call
add
fiaddl
nop
xchg
adc
repnz
add
dec
inc
add
add
iret
insl
mov
dec
add
pop
addb
int3
scas
popf
mov
js
lcall
ret
mov
and
mov
hlt
lea
lea
inc
sbb
shlb
add
jg
sbb
inc
leave
das
push
mov
xchg
iret
pop
mul
mov
xchg
addl
out
jne
mov
xorb
xchg
addb
imul
and
nop
scas
xor
ror
xchg
movl
popa
sub
nop
ret
imul
nop
call
fwait
sub
enter
rorl
incb
or
sti
mov
add
adc
jno
add
pop
ja
mov
or
jp
int3
rep
mov
add
mov
out
cmp
xor
ss
jnp
into
pop
movups
fistl
inc
add
call
int3
add
les
data16
add
push
dec
add
int3
lcall
es
xor
xchg
jo
ljmp
mov
bound
nop
fmulp
push
mov
lahf
dec
and
pop
icebp
mov
mov
xchg
jg
jmp
out
imul
or
add
les
mov
xorl
add
xor
xchg
loop
inc
add
jns
and
add
jo
mov
mov
jp
xor
add
xor
leave
or
jo
and
add
imul
xor
nop
mov
cmpsb
cmp
add
leave
add
pop
push
jp
pushf
add
push
test
and
pop
sub
add
add
iret
pop
fcoms
mov
ljmp
and
int3
jp
add
pop
sarb
add
mov
jne
add
je
cli
mov
out
cs
test
addb
xor
sbb
mov
add
movsb
jno
jno
add
repz
sub
push
mov
aam
add
dec
adc
mov
mov
popa
fildl
add
add
pop
xchg
sbb
jo
xlat
or
push
inc
add
xchg
incl
sbb
jl
xchg
xchg
imul
repz
add
loope
nop
add
fcmovb
bound
cmpsb
xor
add
ljmp
lods
inc
sub
add
mov
testl
xor
xor
add
dec
jecxz
mov
adc
mov
mov
nop
int
mov
enter
push
add
jae
sbb
int3
movsl
or
inc
jne
popa
nop
fcomip
lods
sub
and
pop
jo
cmp
add
xor
js
push
testb
int3
jae
add
fldl2e
add
cmp
add
ficoml
add
lods
push
add
add
fisttpll
add
out
rorb
loopne
push
call
rcll
and
add
add
add
xor
add
out
pop
or
push
sahf
sbb
out
lea
icebp
mov
xchg
push
inc
jo
sub
add
mov
mov
xchg
std
xchg
add
cmp
jnp
inc
int3
push
stc
enter
add
cli
gs
xchg
out
and
inc
mov
and
sbb
shrb
add
inc
add
sub
adc
jmp
lret
jmp
mov
mov
mov
les
int3
mov
add
cwtl
jg
and
leave
dec
dec
int3
push
push
stos
gs
lea
add
jne
sahf
xchg
add
dec
jp
or
int3
nop
or
jb
add
or
popf
dec
and
hlt
sahf
pop
lea
add
fsubrs
lcall
nop
push
insb
out
std
std
add
dec
sub
aaa
std
out
data16
add
out
cmp
loop
xchg
add
sub
mov
nop
xor
cmp
iret
add
ret
movl
push
add
nop
add
pop
clc
lea
enter
lcall
xchg
xchg
jg
ficompl
sbb
jb
add
push
fmul
add
sub
xor
cmp
add
pop
out
add
mov
and
lea
aaa
dec
add
lahf
movsl
add
sub
mov
int3
cmc
ds
adc
add
aas
and
inc
arpl
ja
add
cmc
outsl
cltd
mov
int3
sbb
inc
mov
int3
addr16
add
imul
pop
aaa
jo
ret
xchg
hlt
add
pop
in
insb
hlt
add
xor
inc
fwait
cmp
nop
add
mov
out
add
pop
push
call
mov
or
outsb
mov
xor
ljmp
cwtl
xchg
jo
adc
jb
in
shlb
pop
shlb
out
adc
cltd
add
testb
sbb
pop
add
jge
int
push
add
push
inc
and
add
imul
fcomip
add
xor
rcll
cmpsl
pop
add
nop
nop
out
dec
jno
aaa
add
hlt
cmpb
in
pcmpgtb
add
out
jmp
dec
fcoms
jb
fildl
mov
les
test
aad
add
in
roll
nop
dec
jo
add
int3
xor
rclb
xchg
in
rorb
or
pop
xchg
add
add
test
ficoms
int3
and
cmp
inc
ret
test
sbb
lea
add
pushf
mov
call
int3
cltd
jne
int3
push
or
mov
add
aam
test
mov
shrl
int3
mov
jl
mov
jo
sbb
sahf
lea
pop
xor
sub
add
cltd
mov
cs
std
dec
cld
scas
out
les
cld
dec
mov
lahf
add
out
dec
add
dec
cmp
add
cmp
out
out
add
loopne
out
cmp
out
add
cwtd
xchg
cltd
add
dec
pop
out
std
cmp
add
daa
push
int3
jb
jne
int3
mov
inc
or
aad
add
pop
pushf
mov
inc
xchg
push
popa
inc
push
push
inc
out
nop
xchg
jecxz
add
imul
fdivl
jo
pusha
orb
add
lea
mov
mov
xlat
int3
add
jo
cli
push
insl
add
mov
add
xchg
sbb
sub
add
or
add
hlt
int3
push
jmp
jb
loopne
xchg
fiadds
add
sub
sub
lods
int3
and
ds
mov
mov
xorb
add
lods
insl
push
jo
pop
iret
movsb
faddl
call
add
mov
push
jbe
inc
adc
push
sbb
mov
add
push
pushf
pop
or
movsb
mov
clc
shl
and
add
aad
xor
add
gs
and
push
mov
add
fcoml
add
push
xchg
aaa
mov
test
xor
mov
inc
int3
push
sbb
push
testl
push
inc
sub
lock
add
iret
sar
add
xchg
leave
sbb
inc
pushf
lds
aam
add
pusha
mov
push
xor
lret
inc
addb
popa
daa
out
sub
mov
dec
sbb
fidivs
out
push
int3
jb
or
mov
fsubrp
xor
mov
sti
ret
add
sbb
rol
pop
adc
das
rcrb
repnz
inc
add
xlat
add
push
add
pop
jbe
mov
add
and
pop
lret
add
jmp
popa
xchg
add
inc
or
add
nop
cmp
cwtl
mov
mov
push
adcb
or
jmp
jl
add
add
int3
pop
xchg
mov
ds
jo
sub
add
jl
outsb
mov
mov
cmp
int3
cli
mov
add
xor
int3
add
adc
cmpsb
add
jmp
lods
cs
add
int
mov
or
xchg
add
cmp
add
mov
add
testb
inc
add
out
xchg
and
add
ds
in
xor
add
cmp
mov
cltd
dec
out
push
divb
in
push
pop
jle
int3
adc
ror
inc
sbb
data16
nop
nop
mov
xor
cmp
pusha
and
in
pop
lods
push
int3
add
fwait
aas
pusha
movb
dec
icebp
cmp
add
push
add
shlb
pop
lcall
add
adc
inc
xchg
adc
sub
add
lods
add
or
add
fdivrs
nop
hlt
lret
and
popf
jp
nop
add
xlat
jb
mov
xor
adc
add
fcomip
popw
jge
lea
push
fcmovnu
dec
add
and
lea
call
mov
xor
shld
adc
xor
push
insb
ss
or
add
pop
sti
sub
cltd
add
add
mov
add
inc
movsl
movsl
adc
repnz
add
inc
int
dec
add
sbb
dec
add
adc
outsl
cmp
add
call
test
cs
std
out
add
data16
add
data16
aas
cld
pop
add
push
out
mov
out
add
out
out
lahf
out
add
pop
sarb
add
add
imul
add
mov
and
ret
std
cmp
adc
add
xor
bound
subl
sahf
pop
add
add
cmpsl
fcoms
int
inc
add
ja
jno
mov
xchg
add
xor
add
add
nop
or
xor
cmp
ds
inc
test
pop
xor
into
js
lea
mov
add
add
cld
lcall
mov
repnz
movsl
inc
or
nop
arpl
repz
mov
add
ret
pop
enter
out
mov
cltd
sbb
push
pop
nop
ja
rcrb
add
and
test
push
and
inc
xchg
cmp
dec
add
lcall
pop
out
add
sti
mov
call
int3
or
jmp
push
add
pop
mov
cmp
inc
data16
cltd
loope
lcall
lea
add
lods
inc
mov
push
cmp
scas
test
nop
rcll
shll
mov
add
pop
xchg
clc
mov
pop
xchg
test
jns
clc
add
in
dec
shl
nop
xor
arpl
mov
int3
call
add
fisubrs
adc
mov
fstl
add
popf
test
insl
add
aam
adc
jnp
mov
loope
add
mov
imul
push
add
fcmovnb
nop
int3
cli
jns
and
inc
sbb
and
inc
loopne
call
mov
xchg
out
mov
neg
lds
stos
stc
push
sbb
inc
add
aaa
adc
add
add
add
dec
cmp
mov
add
insl
add
add
ss
popf
nop
call
mov
inc
add
mov
dec
add
flds
inc
jb
push
mov
sub
ljmp
xor
test
flds
test
mov
popf
jmp
mov
or
pushf
mov
popf
pusha
xor
leave
xor
pop
stos
nop
add
cmc
xchg
push
pop
nop
nop
push
jno
int3
pop
sarl
sub
nop
xor
xchg
adc
int3
xchg
out
add
or
mov
add
inc
nop
mov
in
add
dec
push
loop
rorl
mov
add
bound
mov
aaa
push
and
fidivrs
nop
sti
mov
pop
or
nop
cmp
add
mov
testl
lea
in
mov
add
and
imul
inc
mov
data16
inc
dec
add
xor
mov
int3
mov
mov
add
add
dec
add
out
xor
or
add
incl
std
cmp
out
cld
scas
add
out
mov
add
rolw
std
add
imul
aas
std
add
out
mov
call
mov
fstpt
aas
inc
int3
outsb
subb
ret
add
xor
push
cmp
cmp
add
push
cmp
mov
add
add
mov
call
dec
add
mov
test
jb
cmp
mov
push
jecxz
pop
shll
add
sub
mov
add
add
dec
mov
add
cmp
add
mov
aad
fldcw
and
and
dec
imul
add
xor
subl
jb
xchg
loop
ret
lcall
testl
je
add
and
fcomps
jo
int3
roll
inc
inc
sti
pushf
add
movsb
xchg
ljmp
mov
add
xchg
in
into
pop
jg
jns
add
and
lret
add
and
fdivs
mov
inc
add
sar
popl
out
add
cmpl
int3
jge
jb
mov
jo
jae
subl
out
jmp
pusha
es
mov
inc
xorb
xor
xor
int3
sbb
xor
xchg
sub
and
cmp
pop
pop
aas
add
push
add
out
mov
add
mov
sub
sbb
and
add
cltd
cs
pslld
add
daa
add
add
adc
jo
jo
and
test
cmp
xor
mov
adc
clc
int3
inc
adc
mov
inc
mov
iret
sub
add
in
loope
les
sbb
enter
popf
movsb
and
ljmp
add
mov
xchg
add
loop
jnp
add
inc
int
add
popf
cmp
ret
add
add
fs
add
nop
mov
faddl
call
jle
outsl
push
test
test
inc
imul
adc
sbb
popf
push
pushf
xorb
mov
add
mov
push
mov
add
add
cmp
sub
dec
mov
jo
int3
inc
cs
rorl
pop
dec
add
dec
je
or
pop
outsb
addr16
stos
sub
xor
push
xlat
nop
add
add
cmp
jecxz
cld
push
mov
fnstsw
xchg
in
or
inc
mov
fmuls
or
lahf
fists
ret
add
xchg
verw
divl
cli
pop
ret
cmpsl
xchg
add
xchg
lds
adc
add
int
mov
xor
jp
add
pop
std
notl
dec
orb
jo
stc
sbb
jb
xor
call
incl
mov
sbb
jbe
aam
push
fmull
stos
call
aas
sti
add
aaa
outsb
shll
fdivr
pop
push
nop
add
dec
mov
add
stos
out
js
add
mov
in
aad
sub
jb
jnp
add
stos
mov
add
or
pop
add
push
add
add
add
test
pop
mov
dec
push
push
inc
jecxz
or
scas
and
mov
push
aaa
inc
hlt
nop
add
js
xor
push
add
test
nop
add
pop
add
pop
js
dec
jb
and
sub
lret
faddl
outsl
mov
mov
add
incb
add
add
sub
mov
jb
ljmp
add
sub
add
lret
jb
nop
in
push
movsl
add
insl
mov
nop
inc
call
roll
or
dec
sahf
cld
nop
int3
ficoml
and
push
add
int3
fs
sti
adc
ljmp
fnstsw
jo
mov
sub
add
hlt
imul
loop
call
dec
add
int
push
mov
call
aaa
add
push
mov
mov
pop
int
addb
xor
mov
dec
aas
add
push
int3
mov
icebp
mov
sbb
mov
addr16
pushf
jo
iret
aam
sti
scas
add
xor
jle
add
roll
add
subl
and
enter
out
add
pop
dec
lock
inc
clc
sbb
jl
add
loope
jns
mov
xor
orb
add
add
insl
jno
push
mov
pop
inc
leave
test
sbb
dec
mov
int3
nop
or
bound
cmpsb
add
cmovno
int3
gs
mov
out
imul
inc
in
fwait
es
dec
clc
call
add
lds
inc
mov
std
xchg
add
fadds
add
daa
repnz
loopne
andb
push
addb
add
test
int3
stos
imul
xchg
nop
add
nop
int3
sbb
sub
sbb
dec
xchg
push
add
dec
add
out
incl
cld
nop
inc
mov
les
jmp
xor
add
lea
cmpsb
mov
add
out
scas
fildl
je
add
mov
add
add
mov
repnz
cmp
pminsw
dec
scas
jmp
repnz
pop
push
add
stos
shl
adc
push
int3
adc
fistpl
inc
int3
cmp
sub
add
mov
add
add
add
jmp
inc
hlt
cmp
mov
int3
nop
lahf
mov
repz
jmp
lret
loope
xor
mov
adc
lcall
add
cmpsl
cli
add
mov
xor
jmp
jecxz
inc
cmp
xchg
sbb
stos
push
jecxz
pushl
jo
mov
sbb
add
xlat
pop
jle
and
xor
mov
add
out
add
pop
nop
call
inc
fmulp
aaa
add
mov
fs
movsl
cmpsb
add
inc
stc
fdivs
test
xor
add
std
xor
add
push
cmp
dec
int3
js
hlt
daa
xchg
add
mov
add
mov
inc
and
in
sub
and
add
ljmp
xorb
inc
xor
jle
adcb
enter
mov
add
mov
push
int3
jo
adc
sahf
nop
rcll
test
int3
sub
add
pop
les
push
inc
and
nop
shlb
add
out
sahf
lods
nop
pop
insl
mov
add
push
mov
mov
call
lcall
mov
push
adc
cmpsl
repz
stc
add
add
jo
mov
inc
add
push
nop
xchg
int3
add
inc
mov
out
inc
inc
aad
fiaddl
decl
add
mov
lock
dec
and
call
mov
jb
pop
sbb
pushf
insl
push
call
int3
fs
aaa
mov
jo
loopne
push
jge
lea
push
jb
cmp
icebp
add
xchg
int3
aaa
mov
rolb
jb
test
jns
shrl
mov
add
sti
pop
add
nop
xor
jo
nop
fbstp
mov
or
add
adc
mov
add
pop
outsb
lret
orb
pop
add
out
add
sub
adc
add
or
mov
xchg
add
lock
jmp
adc
dec
int3
stos
mov
jne
dec
mov
add
inc
addr16
add
mov
inc
add
jb
arpl
jle
add
jne
fdivrl
nop
xchg
cmpsb
mov
xchg
int3
add
xchg
mov
add
xchg
sub
inc
int3
add
sbb
in
and
inc
mov
sub
or
pop
sahf
fmull
cmp
xor
adc
int3
jne
push
mov
data16
add
int
add
mov
xor
int3
xor
dec
mov
mov
in
rolb
rcrl
jae
pop
int3
add
cs
add
sahf
jg
sbb
shlb
inc
push
pushf
pop
int3
add
dec
push
fldl
dec
test
xorb
jne
insb
fistl
shlb
xchg
inc
cs
cmova
cmc
lods
int3
mov
mov
sub
call
cmpsb
pop
xor
mov
inc
dec
add
fidivs
nop
inc
cmp
xor
dec
insl
dec
add
dec
xchg
int3
into
in
popa
daa
jne
int3
cmp
mov
sub
mov
add
sbb
add
scas
adc
and
sub
test
nop
mov
inc
xchg
fsts
mov
inc
sbb
call
mov
add
inc
mov
inc
add
lds
adc
into
sbb
xor
stos
add
das
inc
loop
cmp
and
out
add
cmpsl
movsb
pop
nop
inc
and
int3
lcall
js
fildll
jns
addb
mov
out
dec
int3
add
fcomps
mov
loope
cmp
add
add
out
out
loopne
xor
out
cmpl
imul
out
scas
dec
std
add
out
add
add
add
dec
add
xor
scas
rcl
out
clc
add
fsub
out
out
out
add
cmp
out
out
add
shll
call
inc
add
add
test
nop
loope
test
xchg
push
add
mov
inc
int3
xor
in
add
fsubl
pusha
push
add
orb
mov
repnz
add
pop
mov
mov
addb
push
pushf
add
nop
xchg
jb
shrl
shlb
lahf
movsb
lret
aas
das
jb
jl
inc
xchg
add
arpl
sub
imul
jb
call
xchg
add
loope
jl
mov
mov
add
fisttps
ljmp
sahf
fiaddl
xor
dec
and
nop
fisubrl
ret
fiaddl
add
or
push
int
add
rolb
add
or
add
xorb
rol
aaa
xor
sub
mov
add
adc
and
lret
mov
out
pop
inc
add
jge
ds
xor
add
jb
faddl
call
lock
cmp
add
jae
jmp
jo
xchg
shll
mov
add
add
xchg
push
mov
addb
mov
inc
loope
add
ret
call
subb
nop
mov
jo
xor
inc
add
movsl
int3
add
mov
and
xor
inc
call
push
lea
or
inc
push
xor
inc
test
jmp
stos
lret
mov
lahf
mov
mov
int3
dec
bound
jb
pop
dec
mov
jae
jo
cmp
cmp
lea
mov
sub
imul
stc
and
jo
cli
outsl
add
sbb
int3
pushf
adc
and
xchg
nop
jo
fwait
lds
aad
add
inc
inc
movsl
xchg
add
in
or
or
andb
mov
lahf
add
fidivrs
sbb
das
add
lods
mov
lea
call
ss
add
and
dec
loopne
rolb
lea
and
sub
mov
pop
mov
jle
leave
add
jo
mov
aas
nop
add
testb
push
repnz
sti
cmp
ror
adc
xchg
leave
sub
int3
mov
daa
add
ss
sbb
cmc
add
lock
or
mov
lea
add
dec
add
add
repz
add
push
xchg
adc
add
nop
and
mov
xchg
dec
push
lock
inc
insl
pop
lcall
xchg
daa
jb
xchg
adc
clc
loope
add
rcr
add
int3
jle
int3
nop
mov
test
movsl
dec
out
test
lods
xchg
and
insl
pop
jns
pop
add
jmp
xchg
push
add
add
push
push
and
mov
jns
jecxz
jo
dec
add
push
std
xor
jp
inc
dec
and
mov
dec
inc
add
movsl
pop
call
lcall
add
mov
aam
mov
daa
add
cmpsb
jbe
add
pushf
or
pop
rolb
stos
mov
push
xchg
int3
add
or
and
addb
outsl
jmp
int3
cli
xchg
push
lods
add
sti
fcmovnb
add
js
loope
add
or
and
and
add
jecxz
int3
stos
add
int3
icebp
pop
test
js
int3
add
inc
xchg
inc
mov
dec
int3
hlt
pop
adc
lds
add
or
add
jnp
adc
insl
jmp
add
call
add
aad
mov
or
or
mov
cltd
adc
jns,pn
jg
scas
out
std
pop
add
out
out
out
xchg
cld
aam
cld
rolb
insb
out
ds
out
cld
loop
add
out
add
std
cs
cld
nop
add
cld
lahf
out
cmp
mov
lea
dec
out
jnp
mov
pop
pop
dec
in
add
xchg
dec
sbb
nop
add
xor
je
jo
clc
pop
mov
inc
and
orl
cmp
add
add
outsb
js
idiv
int3
xor
dec
out
pop
and
cmpsb
movsb
mov
lea
stos
add
rcrb
add
dec
fidivl
or
nop
test
add
fldl
add
test
nop
cltd
pop
add
xorl
add
ja
int3
into
add
xchg
xor
push
mov
inc
pop
add
mov
add
push
mov
dec
ss
movsl
lahf
mov
shrl
sldt
icebp
jmp
add
into
add
sbb
add
mov
je
add
into
mov
mov
mov
jo
mov
lea
insb
jo
add
and
loope
ret
lock
out
out
sahf
pop
add
pop
add
gs
sub
out
push
jecxz
add
int3
call
add
add
add
jb
lea
sub
xlat
xor
imul
push
add
xchg
mov
ja
decl
add
rolb
out
sbb
or
add
sub
jne
add
xor
add
mov
cmp
stc
sub
mov
int3
and
loope
aaa
add
inc
dec
mov
orl
add
add
aaa
js
nop
in
ja
xchg
nop
shl
inc
cmp
add
pop
add
add
stc
fmuls
add
int3
lea
cmp
repz
roll
mov
mov
push
test
jge
sbb
add
enter
dec
mov
nop
push
dec
mov
and
jnp
add
imul
mov
sahf
sti
jmp
addr16
mov
add
emms
out
enter
loop
inc
fnstenv
decb
call
nop
sub
shrb
jno
add
and
dec
xchg
fs
jb
out
dec
push
and
jb
jl
xor
int3
add
int3
pop
rcrl
mov
add
mov
or
sbb
bound
add
stos
pusha
cmpsl
call
dec
nop
mov
sub
mov
sub
xorb
jns
sbb
dec
pushf
lea
cmp
cmp
push
add
inc
mov
int3
add
mov
ds
inc
call
inc
roll
add
mov
xchg
aaa
data16
cmc
add
jmp
outsl
pusha
nop
call
roll
xor
sysret
add
cltd
inc
sub
ret
adc
sub
sub
push
add
jae
sahf
stos
add
movsb
add
xor
lds
std
add
sub
jnp
add
pop
push
xchg
jo
mov
adc
add
nop
call
int3
mov
add
cmpsb
inc
xor
cmpb
add
push
push
pop
pop
dec
sbb
andb
rcl
push
xor
add
xchg
mov
adcb
sbbb
or
sub
out
cmp
nop
cmp
incl
pop
xchg
dec
scas
xor
dec
jle
add
push
add
add
movsl
mov
dec
jo
and
ss
pop
aaa
aas
add
aad
nop
std
xchg
mov
movsb
stos
add
jo
xchg
and
lahf
nop
add
add
jb
sub
add
push
cld
insb
adc
jb
add
mul
icebp
int3
cmp
add
mov
pop
add
in
lods
enter
mov
imul
xor
cltd
add
inc
outsl
rorl
nop
andl
inc
sahf
cmp
or
add
add
xchg
adcb
repnz
fdivrl
cmpsl
add
ret
adcb
data16
add
inc
movl
dec
add
js
mov
xchg
xchg
dec
add
add
mov
jo
jp
test
add
es
call
jecxz
and
divb
fwait
dec
lret
lret
out
nop
mov
cmp
or
add
push
nop
xlat
mov
push
xchg
jl
xor
add
add
daa
shlb
add
add
inc
nop
bound
popl
push
mov
in
imul
ja
inc
add
or
pop
jb
in
int3
push
pop
lods
push
inc
add
jmp
add
pop
sbb
fld
push
lret
int3
xlat
add
jo
inc
test
lcall
inc
call
or
aam
sub
adc
or
repz
xor
pop
jl
and
jge
add
call
jmp
add
mov
fldenv
jo
jl
insb
adc
lcall
dec
hlt
jo
pop
inc
push
push
add
out
sub
add
lea
add
mov
inc
call
imul
xor
cmp
fcoml
out
loopne
scas
add
mov
add
out
out
add
pop
sub
test
std
sbb
popf
sbb
add
pusha
lahf
push
add
pop
pop
sub
loopne
add
add
push
lret
add
andl
mov
mov
mov
int3
add
je
add
and
mov
and
jg
inc
inc
loopne
cmpsb
add
std
test
fldenv
add
push
xchg
xchg
ss
pop
adcb
in
jo
mov
lea
insb
cmc
xchg
xor
out
cld
adc
fiadds
cmp
cmp
repz
rcl
mov
mov
add
lcall
lea
lea
sbb
ret
int3
in
add
notb
and
pop
jb
lahf
jl
xchg
into
adc
pop
fldenv
add
add
pop
and
outsb
lods
xchg
shrl
xor
add
js
sbb
mov
jbe
in
pop
addl
xchg
int3
add
in
mov
lds
add
cmp
jg
add
stos
mov
add
cli
addr16
jnp
add
int3
add
ret
rcrb
inc
add
lea
popa
push
jl
and
and
testb
incb
setg
adc
add
dec
sbb
gs
push
mov
add
add
xor
push
push
add
jbe
js
xor
pop
inc
movsl
push
or
nop
int3
pop
popf
and
add
repnz
fildl
pop
mov
dec
xchg
dec
pop
nop
mov
jle
les
mov
scas
mov
call
inc
add
mov
call
inc
xchg
inc
rcll
ljmp
int3
add
lods
lret
cld
add
cmp
loopne
dec
inc
add
or
test
push
int3
add
sti
rolb
shl
mov
out
add
cmp
sarl
add
add
aaa
repz
out
out
std
out
dec
add
and
add
cld
psubusb
mov
loopne
rolb
data16
jmp
out
jg
out
jns
add
mov
add
mov
decl
div
and
lods
mov
and
add
lods
add
add
call
int3
mov
add
adc
xchg
jecxz
fwait
nop
int3
loopne
mov
inc
pop
xlat
scas
nop
adc
xchg
into
mov
sbb
xorb
lds
mov
scas
or
inc
popl
jno
add
push
jp
jae
mov
xor
add
loop
loop
and
test
sub
add
mov
cs
and
int3
inc
mov
jae
jl
and
pop
aas
insl
inc
lea
lea
ljmp
cwtl
mov
ficomps
mov
inc
mov
or
add
int3
add
push
lahf
aaa
sub
push
mov
out
add
std
sbb
ret
add
adc
aam
int3
mov
mov
inc
pop
fstp
es
nop
add
or
lock
loope
mov
sub
aaa
mov
adc
add
mov
je
shr
add
add
pop
scas
in
repnz
repz
mov
adc
nop
cmp
in
add
add
sub
add
cld
mov
mov
cmp
xor
mov
test
add
push
mov
cmp
xchg
xchg
xor
pop
int3
call
and
sub
add
adc
add
add
insl
mov
xchg
sub
or
add
or
dec
inc
test
xor
loop
int3
inc
cltd
sbb
fcoms
and
imul
inc
inc
add
loope
outsl
nop
inc
mov
fwait
sbbb
add
vpunpckhwd
pop
cmp
outsb
les
adc
add
push
adc
js
add
int3
push
enter
lea
pop
scas
and
imul
mov
sahf
iret
jae
pop
aam
add
mov
repnz
jo
repnz
cs
jb
sub
outsl
jb
out
pop
add
pop
add
and
and
dec
call
insb
add
push
movsb
dec
or
sti
cmp
mov
jp
ret
loopne
jbe
add
add
jl
int3
push
jbe
add
add
leave
clc
mov
inc
pop
xor
add
ret
nop
xor
adc
cmp
nop
call
add
lds
add
add
movsb
add
and
add
adc
data16
or
pop
pop
decl
mov
int3
add
shlb
push
add
pop
dec
and
aam
lock
and
out
dec
cmpsl
and
push
mov
and
and
in
mov
sub
cs
add
out
jbe
and
std
jae
add
cli
add
xor
xor
add
inc
fdivr
mov
sbb
bnd
mov
in
sub
pop
adcb
add
xchg
sub
mov
pusha
cmpsb
mov
inc
arpl
add
xchg
mov
sub
out
add
lock
add
push
xchg
insb
inc
add
mov
nop
nop
xchg
mov
out
test
lret
nop
add
jne
cmp
jb
aas
sub
rol
add
push
jo
icebp
cmpsb
in
jns
add
add
adc
add
repnz
add
fldl
fwait
inc
jl
pusha
sbb
xchg
pusha
sub
push
add
or
dec
pop
jno
nop
nop
mov
nop
cli
or
jge
xor
xchg
cld
stc
and
jo
test
lods
push
pop
int3
fisubrs
insl
mov
mov
mov
ja
xor
add
xor
add
fisttpl
dec
pop
add
loop
nop
add
out
les
out
xor
nop
add
insl
mov
nop
xchg
jne
and
push
ret
ss
jb
in
mov
nop
jo
mov
inc
add
mov
add
notl
push
cmc
nop
mov
orb
mov
cmc
movsb
dec
int3
mov
dec
xchg
xchg
inc
das
nop
int3
add
int3
xor
nop
int3
xor
in
add
and
add
mov
mov
psubw
fists
xchg
add
pop
fsub
xchg
add
add
add
arpl
decb
xor
or
add
add
mov
call
mov
add
adc
ljmp
dec
cld
cs
stos
add
out
cld
cmp
out
add
aad
loopne
cltd
loopne
out
int
mov
mov
or
jmp
add
add
ret
and
dec
push
jle
add
loopne
add
add
cmp
add
jb
mov
out
add
lret
mov
repnz
pop
inc
int3
pop
std
jo
add
add
aam
inc
lea
test
add
push
xchg
nop
call
add
incl
add
sarb
cmp
loop
add
or
mov
dec
insl
int3
int3
jg
xor
cmpb
add
mov
stos
stos
inc
add
jo
xor
addb
pop
loopne
jne
inc
xor
dec
mov
pop
icebp
add
daa
mov
in
pusha
sub
add
push
push
ljmp
xor
fdivl
ret
add
imul
add
push
enter
add
jp
or
cmc
ret
cmpsb
push
insl
add
clc
pop
les
nop
call
andb
insl
mov
or
and
movsl
mov
addb
cwtl
ds
out
loop
add
call
adc
nop
popf
insl
dec
inc
shlb
push
push
jnp
int3
mov
sbb
and
push
pop
pushf
sub
mov
or
imul
sub
push
test
add
add
iret
movsb
mov
add
mov
out
lret
xor
add
push
mov
in
lea
aas
lds
or
or
les
outsl
out
pop
int3
subb
aaa
into
inc
mov
pop
adc
mov
dec
shrb
add
cmp
cld
call
xchg
mov
addl
add
mov
pop
sub
mov
addl
add
sbb
add
in
or
adc
or
cs
mov
stc
jg
add
xchg
mov
jo
pop
mov
int3
jge
ss
push
add
cmp
stos
imul
lret
into
and
and
add
push
push
xor
adcb
add
sbb
arpl
jo
and
cwtl
outsl
mov
repz
int3
call
mov
push
adc
inc
int3
add
adc
add
cs
add
in
jle
int3
add
sahf
fisttps
cmpsl
inc
add
int3
add
test
pop
nop
add
and
shll
add
mov
add
push
dec
nop
mov
sbb
mov
add
lds
and
add
cli
sbb
sahf
out
adc
nop
out
repnz
pop
sbb
call
add
sub
mov
jge
inc
jnp
add
pop
and
jno
nop
add
nop
mov
adc
cmpsl
sbb
or
inc
add
pushf
push
shll
inc
loope
or
dec
sbb
mov
add
loop
xor
add
repz
dec
test
orl
cmp
call
dec
jb
mov
cmp
fs
add
shlb
shlb
jno
inc
into
subb
inc
mov
int3
add
dec
pop
out
lea
push
nop
inc
out
push
in
mov
inc
mov
and
lahf
js
repnz
dec
mov
xchg
xor
and
lds
jo
movsb
pop
fucomp
push
adc
std
into
fwait
lret
xchg
in
adc
cmc
call
xor
xchg
icebp
lea
int3
ret
sub
dec
add
inc
mov
add
mov
inc
roll
mov
nop
and
jne
nop
add
das
ret
aaa
add
iret
mov
mov
lea
push
cli
add
jecxz
jo
test
jo
and
add
add
aad
and
add
insl
dec
lahf
fdivl
mov
fbld
and
movsl
mov
pop
insl
str
add
mov
and
cmp
mov
jmp
sub
roll
add
add
mov
jnp
add
push
andb
add
cld
imul
lret
pop
out
ja
add
out
data16
out
add
scas
outsl
movntq
out
pushl
add
add
out
out
std
out
add
adc
enter
add
adc
data16
cld
dec
add
std
fadds
mov
sbb
add
out
out
xor
rorl
cmpsl
imul
out
out
adc
test
add
pop
push
or
and
out
repnz
mov
ret
scas
mov
js
pushf
std
fisubl
leave
add
cli
addr16
fdivs
nop
jge
add
add
jb
dec
test
cwtl
cmp
mov
sub
add
add
sti
inc
mov
add
pop
mov
sahf
inc
xor
add
lea
lds
xchg
fildl
add
cmp
cmp
ljmp
int3
ljmp
ds
dec
bound
stc
push
out
jo
in
nop
mov
cmp
mov
push
add
sbb
in
arpl
xchg
mov
xor
add
cmp
icebp
mov
out
add
nop
add
jo
add
add
mov
jae
nop
inc
add
pop
in
mov
pop
lea
inc
inc
add
add
fmulp
rclb
dec
jae
add
aas
addl
test
jp
call
jecxz
nop
add
ror
sub
stos
call
cs
int3
mov
push
test
nop
test
mov
mov
adc
pop
cld
nop
nop
jae
xor
push
add
mov
ret
hlt
push
jo
in
insl
lret
xor
add
fildl
int3
push
mov
mulb
add
mov
cmpsl
divb
addb
pop
arpl
mov
jg
xchg
add
int3
sbb
xor
shlb
pop
fs
add
add
mov
xchg
bound
int3
sti
lock
mov
ljmp
ret
mov
add
add
xor
mov
out
sbb
nop
aam
js
sahf
mov
inc
jno
adc
fldt
mov
add
lea
filds
incl
nop
out
in
in
add
mov
add
stos
add
jmp
sub
xchg
add
lods
mov
sbb
inc
es
popl
lea
xlat
adc
pop
mov
and
mov
arpl
int3
add
mov
repnz
lock
adc
mov
add
pushf
int3
jmp
call
lahf
addb
xor
inc
and
arpl
in
add
adc
sub
std
push
stos
roll
popa
imul
xor
int
pop
add
mov
pop
xor
sub
out
cmc
jo
sbb
pushf
test
mov
add
xor
and
xor
scas
mov
nop
adc
add
and
je
jg
xor
sub
mov
nop
add
mov
add
mov
jae
mov
je
and
lea
les
add
push
adc
jmp
and
inc
jb
scas
dec
inc
enter
scas
loop
int
pop
add
mov
xor
nop
add
mov
pop
xor
int3
ficoml
stos
xchg
jb
in
addl
mov
ret
add
enter
iret
add
jge
cmp
add
mov
add
sub
mov
mov
cmpsl
addr16
add
sbb
pop
call
and
add
imul
sub
jbe
int3
cwtl
insl
ja
mov
sldt
aas
sub
add
mov
cli
nop
jb
shlb
mov
lds
nop
scas
loop
inc
cli
js
xor
mov
je
push
cmp
sbb
mov
int3
fcompl
out
sub
add
jo
nop
and
mov
push
int3
nop
cmp
add
xor
popf
mov
nop
add
sbb
add
test
iret
int3
fsubl
gs
int3
call
fs
add
push
push
fwait
mov
stos
insl
mov
mov
add
jns
add
adc
pop
and
adc
push
gs
int3
lea
das
add
adc
add
xchg
xchg
mov
mov
xchg
add
mov
stos
sub
mov
insl
icebp
sbb
es
xor
aaa
enter
std
mov
mov
roll
out
in
sub
lahf
nop
int3
mov
add
adc
mov
add
xlat
add
in
mov
add
cmp
add
out
add
adc
cs
out
out
out
out
out
out
dec
out
xor
add
jmp
imul
cmp
cmp
pop
dec
data16
add
data16
cld
fdivr
cld
lea
out
std
sbb
add
out
cs
add
out
or
psubb
pop
inc
add
imul
push
je
mov
add
add
add
xchg
or
and
call
add
out
sub
cmp
add
loope
int3
push
adc
push
inc
jo,pn
xlat
and
push
add
orb
int3
nop
cmp
inc
stos
xor
mov
add
cmp
mov
pop
push
xor
add
pop
jbe
icebp
gs
mov
dec
xor
jl
nop
outsl
data16
adc
jns
add
xor
repz
add
gs
nop
mov
lea
push
jb
pop
popf
jge
lea
pop
mov
int3
rcl
out
add
enter
andb
sbb
aas
push
add
insb
inc
cli
xchg
inc
int3
jne
dec
inc
add
shrl
into
ret
fisttps
jl
int3
add
sbb
jle
and
nop
jg
mov
jge
int3
addr16
jns
nop
mov
andl
ficoml
add
or
pop
dec
add
ljmp
movsl
adc
int3
daa
pop
cmc
pop
push
subb
push
mov
mov
stos
adc
or
fsubrp
nop
mov
mov
jl
add
stos
push
stc
mov
rcr
add
cld
or
lea
sub
cltd
sub
inc
mov
mov
mov
lea
xor
and
add
test
add
bound
aaa
inc
rorb
hlt
add
divb
jnp
fmul
lds
add
cmp
pop
mov
je
popl
ffreep
add
imul
pop
push
aas
test
add
es
push
add
inc
add
jo
sarl
lahf
call
or
mov
fwait
jge
mov
nopl
aam
imul
add
add
dec
repnz
add
nop
aas
mov
int3
nop
mov
mov
popf
add
std
f2xm1
mov
fbld
enter
mov
sar
data16
cmc
les
stos
jp
cld
int3
test
pop
add
dec
push
insl
mov
sub
addb
rcl
jb
mov
xchg
and
and
shrl
sbb
sbb
add
out
add
push
and
adc
ss
lea
int3
mov
out
movsb
mov
mov
mov
xchg
fcmovne
lcall
cltd
out
jo
fsubl
sti
pop
jg
lret
testl
sbb
xlat
pusha
jo
push
ljmp
add
jno
add
call
pop
pushf
add
ret
scas
add
add
xchg
add
mov
mov
mov
and
or
mov
pushf
rcll
cmp
call
push
add
rclb
or
jbe
aaa
lea
inc
add
push
negb
add
loopnew
mov
xchg
sbb
jo
xchg
inc
xchg
inc
cmp
jle
rolb
push
dec
movsb
lods
lock
call
mov
add
arpl
out
cmp
add
repz
inc
aam
stc
or
pop
mov
pop
cs
and
xor
dec
push
add
pop
pop
leave
mov
or
lahf
ret
add
and
imul
and
adc
in
int3
loop
sahf
inc
sti
int3
cmpb
xchg
es
dec
push
mov
ss
outsl
int3
jbe
jecxz
js
inc
add
mov
dec
int3
sub
nop
add
push
jle
or
add
fidivs
ljmp
nop
add
shll
xor
or
pop
bound
or
in
mov
fimull
xor
push
add
mov
nop
sbb
or
mov
jmp
inc
pop
add
adcb
insl
inc
push
add
in
add
icebp
pop
pop
pushf
add
lock
lret
nop
add
add
dec
test
out
sub
add
ljmp
mov
add
cltd
cs
out
cld
and
data16
out
jns
cld
add
out
push
dec
pop
out
out
out
add
out
add
add
aaa
test
inc
xchg
out
jmpw
out
decl
mov
inc
jb
add
add
xor
sub
mov
fucomip
add
add
adc
icebp
repnz
std
sub
in
test
arpl
int3
add
ret
clc
sub
add
call
int3
lea
add
pop
push
rorb
fwait
add
popa
push
daa
dec
int3
mov
inc
cmp
mov
int3
outsb
sbb
xchg
rcll
add
ret
lcall
sbb
add
imul
mov
pop
pop
stc
cmc
stos
movsl
lea
sbb
lea
sbb
lea
inc
add
pop
sub
les
loopne
mov
add
jbe
mov
add
adc
xor
add
xchg
dec
pop
enter
repnz
adc
nop
stos
mov
filds
hlt
ss
roll
push
jne
jbe
loope
add
popf
jl
int3
mov
xor
add
mov
aas
and
xchg
pop
mov
mov
jmp
xor
int3
add
or
adc
int3
xchg
insl
and
lahf
push
addr16
pop
xor
add
push
pusha
dec
dec
add
loopne
mov
lea
mov
outsb
sbb
int3
sbb
call
imul
sbb
cmpb
int3
test
pop
jo
inc
and
icebp
aaa
mov
jno
adc
jo
and
push
add
mov
inc
add
imul
call
pop
aas
lret
add
pop
fs
int3
popa
xchg
sub
cmp
in
add
int3
cmp
rorb
cwtl
push
movsl
jb
sub
idivb
cltd
add
and
mov
mov
fstpl
jb
insl
inc
int3
test
stos
jnp
mov
pusha
loop
int3
push
mov
push
inc
sbb
ds
stos
sub
mov
dec
push
aaa
xchg
nop
mov
movsl
xchg
xor
int3
or
inc
add
add
add
xor
jb
push
cmp
add
dec
jb
aas
add
inc
ja
shlb
sub
add
add
call
inc
add
daa
pop
xchg
dec
sbb
add
xor
sahf
xchg
insb
sbb
pop
pusha
cmp
add
nop
nop
sub
xor
jg
inc
dec
inc
add
sbb
mov
cmp
add
nop
fxch
inc
call
xchg
int3
add
mov
push
sbb
sub
enter
nop
int3
js
std
daa
mov
loope
push
add
loop
adc
jb
ja
pop
mov
inc
add
mov
stc
add
test
xor
and
pushf
cs
mov
call
and
add
dec
roll
int3
mov
sbb
outsl
jbe
aad
xchg
pop
aaa
pause
add
jl
cli
add
fadds
add
push
adc
sar
add
cltd
nop
cmp
rolb
push
sub
lcall
add
adc
mov
add
pop
fildll
sbb
inc
add
dec
fcmovne
nop
add
sub
sub
xchg
nop
lock
jo
sahf
mov
int3
pusha
mov
cwtl
add
notb
fiaddl
lock
cli
shr
outsb
xorb
add
jne
in
add
mov
add
jg
clc
add
and
jmp
add
mov
push
mov
nop
mov
loop
xchg
test
add
in
inc
mov
dec
inc
add
jb
ss
aas
or
lods
dec
sub
add
push
mov
sbbb
xor
int3
nop
sub
popl
pushf
jno
jno
xchg
cltd
xor
or
ds
loope
cmp
mov
popa
sbb
enter
cmp
int3
cmpsl
fnstcw
add
fcoms
ljmp
add
sahf
mov
lret
mov
add
add
dec
pop
sti
or
adc
xchg
test
shrb
xchg
xchg
jo
das
push
and
dec
nop
add
fimull
ljmp
imul
inc
lods
sub
xor
jbe
push
lods
loop
clc
addr16
mov
adc
and
xchg
adc
fs
int3
outsl
xor
andb
lret
in
add
mov
push
shr
push
cwtl
insb
sub
mov
lcall
fwait
les
inc
stos
jge
and
inc
js
xchg
nop
sub
leave
loop
ljmp
add
inc
pop
ljmp
popf
xchg
lsl
add
mov
stos
lea
add
and
int3
push
jp
mov
fisttpl
inc
call
lea
call
lahf
add
push
mov
cs
nop
mov
aaa
loopne
lret
in
add
mov
add
and
add
movsl
nop
cmp
and
mov
jb
jg
cli
int
lret
add
pop
jmp
repz
cmp
sub
add
nop
imul
pusha
fwait
add
out
int3
push
add
mov
iret
nop
fnsave
jo
rcrb
addb
clc
lret
jo
ret
ljmp
out
inc
lea
xchg
add
scas
stos
lds
out
arpl
int3
add
ljmp
add
stc
mov
jp
lods
cld
das
add
repnz
mov
icebp
add
loopne
stos
or
frstor
add
add
xor
lods
roll
call
fadds
int3
out
lea
pop
add
ffree
addr16
sbb
nop
jo
cs
incl
data16
cs
cld
ljmp
bound
add
ss
add
cltd
cld
cs
stos
and
add
data16
add
add
es
inc
lret
mov
adc
add
pop
xorl
mov
add
mov
add
idivl
add
imul
test
pop
inc
and
lret
add
push
push
mov
dec
roll
mov
and
pop
jb
add
lcall
in
mov
mov
or
ror
incl
int3
fnstcw
sahf
loopne
cmp
int3
mov
jmp
push
out
fiadds
daa
fistpll
mulb
out
xchg
sbb
nop
in
shrl
dec
sbbb
int3
inc
aad
jno
into
add
add
jg
mov
pop
lods
cs
inc
hlt
test
push
sub
mov
add
push
inc
adc
hlt
stos
push
add
add
add
xor
call
int3
and
inc
popf
cmp
add
mov
xchg
jge
pop
sbb
add
std
and
add
mov
popf
jb
mov
bound
add
xchg
adc
and
or
pop
les
int3
jecxz
repz
daa
add
test
jae
dec
lods
jp
add
sub
mov
std
add
popl
add
outsb
push
rolb
and
pop
cli
test
add
dec
and
jle
and
mov
nop
xor
push
sbb
loopne
add
cmpsl
pop
jb
jae
int3
jnp
mov
add
pop
jne
call
add
add
dec
and
das
leave
sbb
int3
pop
int3
sub
int3
add
imul
jge
popl
jge
mul
xchg
and
xchg
jnp
sbb
and
cmpsl
sub
xor
outsl
adc
and
add
pop
imul
lea
outsb
add
movl
fdivrl
out
dec
pop
setge
daa
jbe
inc
ficomps
inc
mov
or
adc
fstpt
loop
out
add
repz
loop
xchg
dec
out
add
int3
add
adc
mov
pop
call
sub
negb
int3
jmp
sbbl
inc
test
and
xor
jge
inc
add
jl
ja
stos
add
xchg
lock
mov
inc
cltd
mov
adc
mov
decl
insl
arpl
mov
fwait
int3
add
add
ftst
add
sub
pop
roll
repz
add
add
ja
inc
mov
add
mov
cmpsl
jecxz
cmpsb
add
push
int3
and
sbb
xor
out
lock
loop,pt
add
mov
inc
pop
mov
mov
int3
int3
sar
inc
iret
add
aas
nop
lahf
rolb
cli
mov
jo
ret
incl
nop
mov
add
or
add
inc
push
add
mov
mov
sub
scas
pop
inc
add
imul
xchg
xor
int3
nop
ret
xor
ss
rcr
fsubrs
shll
into
add
or
add
test
and
ds
add
out
fnsave
jns
imul
jo
cmpsl
jg
inc
aad
push
xor
movsb
or
out
ja
add
adc
fwait
dec
add
mov
xchg
push
jne
mov
add
pop
push
cmp
push
sbb
mov
xor
add
inc
mov
add
mov
int3
mov
in
mov
mov
mov
int3
add
aam
mov
add
push
dec
lea
add
add
int3
mov
addl
lret
aad
add
cmp
cmp
iret
pop
jae
loop
nop
dec
add
gs
int3
xchg
pop
and
sahf
dec
or
insl
int3
cmp
push
mov
nop
leave
sub
js
sahf
sbb
sub
push
mov
dec
mov
icebp
xor
push
sbb
push
int
fisubl
sbb
adc
int3
jb
in
outsb
inc
lds
xor
pusha
xchg
arpl
cmp
sti
add
icebp
lods
lea
sbb
in
add
mov
inc
add
enter
push
mov
add
xor
jo
add
and
int3
lret
cmpsb
push
fisubs
add
inc
sub
jb
jb
je
pop
pusha
add
fucomp
cmpsb
int3
add
jl
cmp
add
call
inc
add
sbb
lret
push
nop
fdivrl
inc
mov
jg
sbb
in
jb
cld
sub
rcll
cmp
jo
outsl
std
add
inc
aam
add
mov
push
out
add
lret
add
incl
sbb
out
add
cs
out
add
shl
std
aad
add
dec
out
filds
out
out
cld
out
repz
imul
ja
mov
push
push
add
push
nop
add
orb
popa
nop
popa
inc
mov
mov
loopne
pop
add
jae
sub
add
jbe
add
pop
or
lods
mov
add
call
push
add
sbb
roll
jns
fimuls
add
sti
xchg
adc
mov
repnz
add
in
repnz
add
or
cmc
lret
jo
aad
in
add
pop
nop
mov
add
sahf
push
mov
mov
ja
xor
add
int3
rorl
add
xchg
inc
inc
xor
inc
sub
addb
push
add
nop
movsb
add
ds
out
cltd
aad
dec
add
mov
nop
xor
or
mov
rorl
sub
int
mov
es
pop
add
scas
inc
add
pushf
out
fsubr
nop
int3
sbb
xorl
cmovno
adc
int3
cmp
add
sbb
arpl
push
adc
insl
jle
and
out
or
mov
add
mov
add
repnz
add
dec
mov
jne
int3
fldenv
add
add
test
sahf
add
mov
add
insl
test
lahf
sub
mov
nop
jo
jecxz
push
and
testl
orb
add
inc
mov
jb
fidivrs
call
xchg
movsl
jo
cmp
pushf
pop
mov
jmp
adc
pop
add
jg
jns
add
adcl
mov
imul
add
aam
mov
out
add
into
or
movsb
pop
leave
add
insl
ds
repnz
pushf
inc
lods
mov
scas
jnp
int3
jb
sbbb
int
into
add
add
add
push
call
sbb
out
add
jg
dec
loopne
ds
mov
pop
add
add
and
ficoml
add
dec
fcompl
cld
add
cld
mov
inc
jmp
cltd
mov
add
jl
inc
mov
scas
nop
xchg
pop
add
lods
and
lret
mov
aas
mov
es
lea
cmovl
addr16
add
sub
loope
lods
jl
jb
xchg
add
popf
push
xor
fisubrs
add
push
js
mov
add
nop
mov
cmp
or
add
repz
xchg
mov
lea
call
rcl
add
enter
dec
push
int3
out
in
or
int3
add
ljmp
int3
cltd
movsb
push
pushf
iret
roll
add
pop
ds
ficoml
sbb
in
test
adcb
out
and
jecxz
nop
jmp
add
nop
and
movsb
mov
add
out
xchg
andl
inc
cmp
or
mov
cmp
ret
aad
jb
bnd
jle
test
jns
add
adc
test
sub
adc
push
or
int3
xorb
lock
inc
and
inc
mov
inc
std
nop
mov
int
nop
mov
mov
test
or
add
nop
mov
xor
mov
push
popa
xchg
add
int3
mov
xchg
rcll
pop
test
add
xor
mov
push
add
js
adc
add
dec
ja
addr16
adc
and
leave
jg
jmp
xchg
imul
add
cmp
dec
pop
add
int3
mov
dec
xor
pop
dec
testb
arpl
clc
movsb
xchg
jne
nop
add
mov
xorb
pop
mov
push
cmp
mov
inc
scas
pop
adc
nop
adc
sub
add
call
pop
loopne
pop
or
add
mov
or
out
test
jp
pop
add
add
add
test
add
mov
add
addb
imulb
push
in
add
jmp
nop
mov
nop
cmp
jo
rcrb
nop
pusha
jg
ret
add
xchg
imul
add
add
add
cmp
rcrb
add
ret
add
andl
pop
inc
lock
sbb
int3
and
dec
sub
pop
cltd
xor
adc
out
mov
jne
sbb
xor
ja
aam
add
shl
addb
dec
out
add
out
out
dec
addr16
jno
jb
insl
outsb
outsl
arpl
jns
imul
je
insb
jne
imul
jno
arpl
jns
jns
jns
gs
outsl
insl
jns
imul
std
and
out
ljmp
std
lcallw
shl
out
mov
pop
aam
out
cs
movsl
mov
xchg
pop
out
xor
pop
cmp
stos
add
mov
aaa
or
lods
inc
add
es
cmp
jb
in
addb
ror
aam
fwait
pop
repnz
jo
sub
pop
add
cltd
xchg
mov
and
dec
add
outsl
pusha
lea
nop
add
jecxz
add
jl
fnstenv
sahf
jo
or
add
int3
add
jns
int3
lret
adc
movl
add
daa
and
add
mov
jnp
nop
jae
icebp
mov
sub
cmpsb
imul
push
cmp
add
mov
xorl
ja
xor
mov
fwait
divl
out
cltd
add
popf
addr16
roll
pop
mov
dec
add
and
mov
add
fadd
add
mov
xor
and
mov
mov
movl
mov
int3
add
jle
add
std
xchg
add
inc
mov
test
int3
xor
fstl
test
insb
pop
out
add
add
inc
loope
int3
int3
stos
mov
pop
push
movsl
mov
add
je
outsb
add
push
pusha
add
cmp
in
xor
loope
ss
xchg
add
jno
xchg
pop
mov
adc
cmp
add
arpl
addb
fldenv
mov
mov
roll
pop
mov
add
das
cld
pop
jmp
addb
loop
add
jp
jo
add
mov
iret
mov
int3
das
ret
movsb
int3
addb
jno
jge
nop
mov
add
leave
or
pop
test
add
leave
inc
enter
js
or
dec
xchg
dec
int3
add
lds
add
add
add
cmpsb
in
ss
nop
or
nop
mov
cltd
inc
sbb
add
sbbb
mov
mov
int
add
stos
ds
sarb
add
xchg
mov
add
lcall
nop
jbe
add
xchg
push
int3
add
jl
ror
iret
xchg
jne
nop
add
lock
nop
add
outsl
mov
push
push
sub
mov
nop
cmpsb
insb
filds
push
outsb
jle
push
xor
ret
inc
int3
jecxz
fsts
mov
nop
add
push
in
icebp
add
lahf
int3
jb
bound
nop
jae
mov
loope
int3
movq
add
add
inc
ljmp
js
xor
add
pushf
orb
add
mov
nop
inc
bound
ret
inc
and
sbb
push
xor
jo
insl
push
push
fildl
add
loope
roll
dec
stos
mov
scas
sub
add
arpl
jge
add
scas
add
dec
outsl
jo
xchg
or
and
mov
mov
addr16
flds
mov
mov
int3
gs
roll
add
pop
aaa
push
add
sbb
roll
nop
push
add
cli
les
add
xchg
mov
fisttpll
outsl
add
pop
iret
jo
nop
add
cmpsl
mov
mov
cmp
add
ret
pop
adcb
fildl
dec
pop
push
cmpsb
jno
call
fmul
add
fidivl
mov
fbstp
fsubs
out
add
xor
aaa
mov
xlat
add
mov
test
fs
and
aas
dec
add
loop
stc
add
jl
push
in
jecxz
jo
add
lcall
mov
dec
aaa
adc
nop
add
add
imul
call
pop
inc
mov
gs
add
pop
mov
add
ja
pop
or
add
sub
dec
xchg
add
test
add
add
pop
rcrl
cmpsl
das
adc
shlb
lahf
adc
outsb
jo
int3
xchg
sub
outsb
add
push
jo
sub
lds
and
jo
push
mov
inc
inc
add
rclb
or
xorb
stc
mov
aaa
sub
add
stc
stos
neg
nop
nop
aam
addr16
add
mov
adc
add
xor
leave
mov
jp
insl
lret
sbb
add
imul
movsb
repz
int3
orb
jb
xchg
call
inc
add
push
lret
scas
leave
add
lahf
adc
mov
int3
rcl
fcomp
add
jmp
cmc
jge
push
iret
sysenter
std
int3
inc
mov
mov
xor
cmp
and
int3
add
or
add
cs
and
xchg
sahf
ret
jo
scas
mov
imul
and
je
stos
add
fsts
sub
jg
inc
add
inc
add
or
cmp
push
loopne
push
and
mov
lea
inc
nop
mov
incb
fiadds
nop
jle
mov
fildl
add
push
rolb
push
sbb
je
mov
inc
push
jl
dec
pop
repz
add
mov
nop
out
add
add
out
out
out
outsl
std
cs
add
add
add
add
repz
outsb
out
stos
ss
add
xchg
add
daa
out
out
cmp
add
cld
out
add
stos
fadds
lea
pop
shlb
add
fistl
add
js
movsb
lods
int3
mov
arpl
pop
jne
int3
aaa
xchg
add
xor
add
cli
dec
in
add
rol
mov
add
jl
lcall
jae
add
int3
add
xor
mov
mov
outsl
clc
cs
nop
add
add
xchg
in
and
scas
xchg
lea
inc
out
add
lock
add
or
add
mov
sbb
loope
inc
xor
mov
ss
mov
sbb
mov
jae
inc
repz
xor
cmp
add
icebp
xor
add
fmul
add
add
fs
xchg
sub
and
loopne
nop
add
inc
sbb
mov
cld
add
clc
lret
stc
jns
orb
push
jb
ffree
aad
es
adc
xchg
int3
xlat
aad
cwtl
add
int3
cli
add
loopne
add
push
mov
pop
sub
add
and
nop
and
add
test
add
loop
jg
mov
add
out
fiadds
addl
outsl
lret
jg
and
movsb
jg
add
or
add
add
add
cltd
int3
aad
cli
xchg
repnz
add
add
testb
and
sub
and
push
mov
int3
add
inc
test
jmp
dec
stos
dec
pop
call
repz
fisttps
jo
out
insl
enter
add
mov
imul
jnp
add
fmuls
in
add
lock
sub
inc
inc
pop
mov
int3
int3
out
mov
mov
pop
outsb
jo
pushl
add
addb
adc
sub
int3
push
add
jl
out
add
cmc
jo
add
add
pusha
mov
jb
lods
insb
mov
and
scas
add
push
sub
sbb
mov
and
mov
xchg
mov
repnz
add
xor
repnz
lods
jecxz
int3
pop
int3
inc
lahf
cwtl
and
ret
push
lds
cmp
jl
push
mov
mov
jmp
stc
mov
or
pushw
test
add
cmpsb
ljmp
pop
sbb
and
mov
add
add
inc
add
inc
insb
or
jb
push
fdivr
movsl
add
out
add
jne
fwait
add
inc
imul
mov
jnp
add
push
rcrb
int3
and
rclb
xchg
stc
jo
sbb
add
aaa
add
adc
test
add
dec
add
inc
mov
xor
fiaddl
fldt
imul
fstpt
xchg
ljmp
add
xor
ljmp
mov
into
nop
dec
push
fdivs
iret
dec
stos
mov
add
mov
dec
sub
int3
and
add
sbb
add
jo
sub
movsb
mov
add
clc
and
stos
mov
add
addb
jo
add
jno
test
add
ds
xor
addb
lret
and
mov
lcall
out
rorl
add
out
orb
add
ss
jns
xchg
aaa
out
dec
jmp
cmp
out
aam
pop
add
cltd
out
jmp
test
std
sar
out
test
add
cld
cld
out
add
out
add
cmp
out
incl
out
add
add
add
out
shl
add
add
loopne
cld
popa
std
loopne
cld
cli
add
lret
nop
fisttpl
xchg
sub
add
testl
pushf
int3
out
push
je
add
add
add
mov
adcl
cmp
jle
mov
fcompl
add
into
dec
scas
ret
loopne
sbb
xor
xor
mov
outsl
mov
sbb
add
mov
sbb
mov
daa
mov
int3
jl
lds
jle
sbb
inc
fs
mov
inc
mov
int3
add
jge
testl
cld
pop
int3
sarb
mov
mov
add
sbb
xchg
and
add
icebp
int3
call
sub
and
clc
int3
adcl
add
repz
pop
call
or
cmp
outsl
and
add
sbb
movsl
test
lret
add
mov
cmp
pop
filds
add
and
loope
add
loop
xchg
outsb
add
das
movsb
mov
cmp
mov
loope
add
xor
jge
xchg
add
jno
addb
pushf
pop
test
leave
nop
jno
add
mov
int3
ret
xor
add
test
lds
xor
xor
int3
shrl
add
nop
lea
sti
xchg
mov
ret
pop
lcall
adc
dec
mov
lea
add
int
and
add
inc
adc
mov
add
jmp
cmp
sub
adc
xor
mov
mov
xchg
mov
add
ret
cmp
call
andb
mov
sub
add
cli
add
loope
adc
call
adc
std
xor
add
mov
aas
push
imul
das
add
fimull
xor
push
stos
push
inc
dec
add
mov
in
addb
push
sbb
cld
aad
insb
pop
int3
add
test
xchg
and
lods
stc
popa
nop
push
arpl
int
add
data16
xchg
add
add
mov
add
fistps
in
add
addr16
test
mov
pinsrw
jg
rcrb
mov
add
int3
rorl
add
rorb
dec
add
push
lahf
in
and
int3
movsl
add
adc
jg
outsb
pop
mov
pause
push
ret
hlt
int3
int3
pop
js
mov
int3
int3
imul
xchg
rolb
add
inc
in
dec
mov
push
cmpsl
jo
scas
add
sbb
rcl
nop
fisttpll
pop
jl
out
lahf
jo
lods
mov
incb
int3
add
fisubrl
add
xor
xchg
mov
xchg
add
nop
subl
nop
dec
pop
stc
scas
pcmpeqw
inc
das
clc
cli
call
add
sub
rcll
add
or
xor
add
cmp
fcomps
cmp
add
out
push
sbb
clc
aaa
xchg
xor
int3
pop
mov
test
mov
into
lret
fldl
add
je,pn
inc
js
add
jb
push
and
push
add
cmp
mov
pop
mov
or
xorb
inc
inc
sbb
lds
mov
filds
addr16
pop
cmp
out
add
mov
fsubrs
and
xor
add
adc
nop
add
repz
addr16
cmp
hlt
dec
shll
test
insl
test
cmpsl
andl
mov
lcall
cli
inc
call
inc
push
nop
xor
aaa
mov
push
jno
int3
xchg
pop
and
nop
mov
add
ss
jecxz
add
aas
mov
int3
mov
add
cmpsl
rol
xlat
nop
add
add
fbld
xor
jg
stos
subb
add
mov
adc
add
add
add
data16
outsb
addl
shr
into
and
add
mov
dec
add
loop
das
lods
adcb
jnp
jns
int
jb
xchg
cmp
add
inc
subb
add
into
lahf
or
mov
fcoml
addb
push
add
mov
jne
nop
adcb
js
add
mov
out
pop
lea
sbb
or
push
dec
jno
pop
xchg
insl
rol
int3
inc
xchg
lret
cmc
mov
adcb
adc
add
cmc
lock
inc
str
nop
and
outsb
sub
pop
es
add
mov
fstpt
dec
cwtl
repz
and
movsb
jo
and
xchg
test
addr16
jno
and
fidivrl
add
icebp
fnsave
push
mov
pop
push
shlb
nop
loopne
add
adc
add
adc
addr16
add
cmp
lea
xor
loope
clc
pushf
lcall
add
scas
or
sub
nop
out
fdivrs
fs
mov
ss
add
lahf
inc
lods
jb
lcall
mov
cmp
add
mov
ror
add
popf
xor
popa
int3
add
shlb
cld
xorb
aas
cltd
add
add
xor
cld
cld
inc
clc
jns
aas
push
lahf
add
cltd
data16
add
cld
out
add
sub
jmp
inc
sub
xlat
or
mov
add
dec
sbb
dec
sbb
hlt
pop
sub
add
jae
xchg
or
nop
shll
nop
push
daa
in
nop
jmp
mov
fcomps
add
xlat
lret
add
and
scas
add
pop
pusha
cwtl
mov
in
mov
or
add
xor
popf
add
iret
dec
nop
test
pop
sahf
cmpb
int3
scas
loop
mov
jbe
jp
mov
in
add
xor
add
add
bound
int3
inc
add
add
ror
or
ret
outsb
jmp
int3
repnz
adc
out
outsb
cmc
inc
sbb
rolb
in
sbb
arpl
add
cmp
jle
and
xchg
inc
inc
jo
xor
filds
mov
jmp
pop
daa
lea
cmc
movl
jecxz
add
xor
inc
xor
add
mov
sbb
cli
call
pause
add
mov
ds
cmc
cltd
insl
cmc
in
call
test
mov
cld
ret
nop
nop
aad
dec
stos
lods
jb
mov
xor
push
add
sub
and
inc
arpl
mov
mov
add
mov
nop
add
jmp
pop
testb
ss
jae
pop
pop
mov
mov
pushf
mov
jae
inc
mov
inc
add
fstps
nop
insl
xchg
cltd
push
add
cwtl
jb
sti
mov
nop
fdiv
jecxz
add
jno
lds
add
ja
int3
jo
pusha
pop
xchg
sbbb
incl
outsl
lods
aaa
cmc
mov
add
xor
test
jo
pop
cmpsl
jno
add
jmp
es
mov
inc
je
inc
add
adc
ror
mov
lods
or
add
das
jmp
nop
or
cltd
mov
dec
ljmp
pop
lods
mov
pop
ds
add
dec
xor
cld
add
scas
add
nop
pusha
jmp
aas
verr
pop
dec
mov
addb
jmp
xor
pop
mov
mov
rorb
loopw
jo
push
push
int3
add
in
int3
nop
and
adc
int3
out
jmp
lods
add
mov
test
cmpsb
sub
add
mov
lret
mov
int
adc
nop
mov
push
pop
add
mov
add
add
or
add
push
add
sub
sub
mov
add
outsl
push
cmp
testl
xlat
adc
cmp
push
fs
add
mov
int3
cs
and
cltd
aas
jecxz
xor
mov
int3
int3
dec
imul
add
xor
mov
std
cld
out
out
bound
imul
imul
add
movsb
repz
pushl
std
loopne
add
data16
loopne
add
cmp
add
pop
std
cs
loopne
add
cs
out
out
add
jmp
cmp
std
out
cmp
out
out
shll
push
cld
cmpsb
jb
int3
add
into
sbb
cmp
imul
mov
in
movsb
add
add
nop
lea
sub
add
pop
add
add
int3
nop
xor
mov
int
dec
inc
add
pop
mov
mov
fwait
shll
add
popa
add
mov
mov
xchg
fnstsw
cmp
add
loopne
xchg
aam
je
add
add
scas
jle
dec
fiaddl
in
xchg
mov
int3
int3
dec
or
add
mov
add
add
shl
in
xor
cmp
xlat
rolb
lea
add
or
sub
xor
nop
xor
add
aad
loope
inc
les
das
addb
addl
out
mov
repz
jns
cmpsl
mov
jle
xor
sbb
nop
ret
mov
add
mov
sub
xchg
testl
jb
daa
jno
nop
push
and
add
jle
test
and
mov
add
roll
add
pop
mov
mov
pushf
jo
inc
ja
xchg
xchg
xor
push
inc
stos
mov
xor
int3
aas
call
inc
das
nop
nop
icebp
sub
cmp
mov
pushf
cwtl
nop
push
xorb
add
cmpsl
sub
add
pop
push
int3
lcall
mov
mov
inc
in
cld
add
ja
lea
pop
cmpsl
shr
add
popf
add
dec
sarb
and
insl
mov
mov
movsb
inc
add
cmpsb
gs
add
xor
inc
mov
add
xor
shrb
mov
jno
add
mov
add
and
mov
pop
sub
pushf
adc
lds
int3
jbe
jae
add
shll
je
dec
mov
add
enter
mov
je
in
add
lea
pop
mov
data16
jg
mulb
inc
pop
lcall
repz
fiaddl
mov
sbb
pushf
add
dec
xor
add
jnp
dec
add
out
les
add
inc
pushf
mov
mov
add
cmp
jb
cmp
inc
clc
jo
add
adc
pop
add
popf
jg
jge
sub
mov
mov
push
jge
add
clc
addb
mov
jne
jb
mov
add
add
inc
dec
add
adc
add
sbb
add
mov
and
int3
sbb
outsb
add
jo
inc
xchg
sarl
pop
jo
cmpsl
xorb
loope
lret
pop
aas
imul
imul
popl
add
jo
clc
add
xchg
test
mov
add
adc
nop
sbb
add
rcl
rolb
aad
mov
adc
cmp
add
mov
add
jae
push
std
sahf
add
inc
jecxz
testl
int3
jnp
cmp
xor
mov
in
mov
add
rolb
or
lods
int3
ja
xchg
nop
loope
or
stos
mov
add
insb
mov
mov
push
cmp
pop
add
lret
scas
xlat
lock
int3
inc
lret
nop
movsl
vpunpcklqdq
and
mov
int3
jae
pop
insl
jo
call
mov
xor
push
add
testl
test
push
pop
fwait
add
or
fwait
into
sub
xchg
or
lock
repz
nop
jo
movsb
out
pop
and
dec
ljmp
cmpsb
inc
inc
lods
push
stos
mov
add
adc
in
push
add
pop
rolb
push
fwait
nop
add
std
outsl
sbb
add
ret
ss
add
cmp
bound
add
xchg
mov
lea
mov
pop
mov
adc
xor
jbe
add
sbb
add
cmp
add
sbb
subb
xor
add
lret
mov
and
cmp
add
mov
int3
rclb
std
push
add
cmp
mulb
test
imul
jge
cmpb
int3
nop
popl
mov
ljmp
int3
xor
loop
hlt
out
cld
pop
sbb
out
out
out
add
add
daa
std
out
addl
jns
std
out
out
add
add
out
cld
dec
out
mov
cld
dec
dec
loopne
add
stos
add
add
add
mov
out
add
out
dec
add
jno
add
add
add
outsb
adc
inc
nop
mov
mov
add
mov
add
sub
loope
add
xchg
add
add
clc
hlt
add
inc
mov
add
pop
out
jmp
and
jo
add
ret
int3
add
xor
aas
xor
inc
add
and
scas
mov
ljmp
cltd
mov
xor
add
cmpl
add
mov
add
iret
das
and
mov
int3
pop
mov
aam
fbld
fistl
leave
cli
daa
mov
ss
data16
std
cli
call
inc
mov
ss
sti
prefetchwt1
add
aaa
push
int3
and
lods
icebp
mov
aam
mov
int3
dec
inc
sbb
dec
nop
int3
cmp
repnz
add
call
test
in
add
cs
xor
std
fldenv
lahf
incb
outsl
add
lret
mov
add
pop
daa
and
lahf
pushf
cltd
stos
movsb
mov
repnz
fwait
add
jecxz
cmp
xor
jmp
or
cld
in
xor
add
imul
xlat
adc
xchg
insb
pop
pop
lcall
add
xor
add
std
add
std
add
lahf
pusha
mov
jp
pop
inc
mov
add
fdivl
rorl
das
mov
jae
pop
fnstcw
lods
int3
mov
push
and
jo
or
aam
das
inc
add
iret
push
lods
sub
cmpb
add
loope
add
addl
jecxz
push
nop
inc
popa
rol
nop
add
xor
sbb
int3
or
repz
add
inc
xchg
dec
jo
add
mov
jnp
jo
jl
push
add
cwtl
int3
add
add
jl
add
sub
jo
adc
sub
pop
mov
int3
xor
mov
mov
jo
add
stos
inc
adc
in
outsl
mov
inc
int3
int3
scas
pop
nop
push
cmpsl
movq
push
jb
sub
lret
xor
and
add
stc
push
push
add
dec
pop
mov
add
roll
adc
inc
loopne
nop
mov
nop
and
lock
nop
mov
add
insb
and
nop
mov
adc
add
icebp
push
pop
add
inc
inc
inc
add
insb
movl
lea
repnz
or
js
add
mov
add
jl
ss
push
xchg
sub
jbe
testb
and
add
pop
sbb
dec
xchg
int3
test
adc
cmp
xlat
push
push
mov
dec
xor
jo
pop
mov
push
cs
nop
mov
daa
inc
jecxz
fsubl
rcr
popa
add
fldenv
add
sub
rcr
aad
add
pop
lds
xorb
je
add
mov
mov
jmp
xor
sub
lea
sub
pop
add
add
cmp
mov
push
add
jl
adc
add
add
rclb
inc
add
enter
testl
add
into
jnp
xchg
int3
add
and
and
jno
cmp
les
outsl
xor
add
int3
fldcw
lea
pop
mov
int
int3
jo
jae
cmp
stos
lret
popf
add
dec
test
lahf
adc
add
addr16
add
mov
int3
and
jmp
mov
jo
mov
scas
inc
cmp
lret
and
nop
gs
loopne
pop
pop
add
pop
pop
or
nop
add
mov
pop
xchg
into
mov
lods
sbb
add
jmp
dec
jb
add
adc
adc
add
add
or
aad
mov
add
mov
pop
and
mov
or
int3
and
cmp
int3
repz
cmp
add
add
mov
pop
js
addr16
movsl
add
pop
clc
scas
xor
scas
mov
or
int3
xchg
dec
add
pushf
or
arpl
nop
imul
cmp
add
add
jmp
call
add
add
lods
add
aaa
push
add
outsl
aaa
mov
nop
rcr
mov
jl
add
leave
stos
inc
add
aaa
adc
mov
in
jo
out
out
cld
add
add
cmp
dec
cld
out
jg
out
add
out
cmp
fsubrs
out
shlb
out
add
out
dec
data16
out
mov
out
cld
out
out
cmp
inc
out
out
out
out
add
cld
cmp
xchg
out
fcmovne
mov
lods
push
xchg
nop
add
adc
jns
add
dec
push
gs
or
or
or
arpl
leave
nop
fsub
pusha
push
add
xorb
push
xor
xor
fldcw
mov
jmp
add
xor
sub
inc
mov
add
jbe
faddl
add
mov
int3
cmc
in
mov
mov
inc
push
pop
lock
ljmp
xlat
out
add
cmp
cmp
nop
aaa
xor
sub
pop
fiadds
imul
xchg
add
test
xchg
lds
mov
ds
add
movsl
jg
or
mov
add
and
sub
push
adc
movsb
int3
pop
cmp
orb
hlt
jo
in
pop
andb
sarb
add
mov
xor
xchg
int3
xchg
sub
inc
add
sub
add
dec
push
sub
push
outsl
mov
lahf
in
ljmp
shll
push
mov
add
je
add
and
sub
add
jo
outsb
scas
add
jp
in
jb
jge
add
xor
add
add
aaa
in
add
les
pop
dec
add
mov
nop
pushf
loopne
pusha
add
adc
dec
mov
inc
add
lds
cmp
icebp
add
je
or
sub
jo
add
sub
call
scas
out
add
and
je
ds
call
xor
add
test
fisttpl
add
in
int3
mov
push
mov
aad
inc
mov
mov
icebp
cli
data16
add
add
cmc
add
sahf
jp
mov
add
mov
jg
mov
push
fisubs
mov
add
out
cmp
mov
fldenv
cwtl
incl
ss
enter
lea
aas
arpl
int3
data16
add
mov
add
mov
out
int
add
pop
movsb
mov
cmpsb
add
testb
shld
add
xor
fidivl
flds
mov
mov
shrb
dec
int3
pop
cmp
sbb
xchg
add
add
shrb
add
in
jo
xor
mov
mov
xor
xor
cli
add
xchg
xor
and
xor
nop
popf
mov
aas
mov
rcl
dec
or
in
stos
lods
lea
aaa
push
mov
push
int3
jmp
lahf
das
add
mov
test
mov
lea
mov
call
add
jge
xchg
dec
add
stc
mov
and
xchg
sub
nop
rorl
mov
mov
lods
add
cmp
and
cmp
push
cmp
xor
mov
and
nop
loop
inc
inc
mov
pminub
jo
ljmp
cmpb
dec
add
pushf
inc
jb
xor
xor
sti
or
pop
mov
test
mov
dec
jae
int3
jb
mulb
xchg
xchg
xor
int3
cltd
inc
stos
inc
adc
mov
or
stos
add
stos
outsl
or
inc
sub
mov
and
outsb
jge
push
scas
add
add
out
ss
fdivr
add
decl
nop
cmp
roll
out
dec
out
xor
out
add
jns
add
add
mov
imul
push
js
jb
outsb
imul
outsb
gs
js
insl
imul
pushl
jmp
dec
int3
ljmp
call
int3
add
adc
int3
ljmp
stos
int
int3
xor
test
add
mov
sar
mov
cmpb
out
add
add
xor
in
inc
fs
add
xlat
xchg
add
adc
xor
mov
inc
mov
xor
dec
adc
add
inc
into
dec
cli
add
sahf
add
out
push
adc
ja
cmp
fsts
add
mov
and
fcomi
movl
nop
and
cmp
iret
cmp
cld
int3
add
jo
xchg
add
dec
out
push
jl
add
pop
testb
push
add
clc
xor
cmp
fdivrl
in
add
jae
nop
cli
sub
xchg
push
movq
nop
dec
inc
add
add
ror
add
xor
add
pop
sbb
jae
adcb
sbb
popa
xor
pop
mov
rcrl
push
int3
add
rclb
gs
call
insb
adc
int3
pop
adc
pop
xor
cmp
add
sbb
addb
outsb
add
mov
imul
ljmp
add
cmp
push
push
lret
inc
loopne
out
add
jae
cld
int3
mov
jo
sbb
out
cli
mov
sbb
adc
stos
mov
sti
inc
mov
add
fisttps
test
jecxz
add
sbb
xlat
inc
pusha
mov
dec
mov
nop
sbb
sbb
and
fsubrp
sub
pop
ja
push
mov
mov
xor
xor
pop
add
in
mov
stos
add
add
std
pop
add
loopne
nop
pusha
nop
add
jp
push
add
movsl
pop
sbb
add
or
incb
faddl
int3
jae
mov
xor
mov
add
mov
add
fisttpll
rclb
add
ret
push
nop
int3
je
sbb
add
dec
mov
sbb
xor
add
inc
int3
fimuls
xchg
lds
lea
add
add
or
sbb
ret
add
sbb
repnz
jo
cmp
jecxz
add
jg
testl
sub
outsb
nop
add
inc
adc
sub
xor
sub
test
outsb
push
xchg
jnp
add
mov
add
add
push
insb
insl
sub
add
bound
add
pop
rcr
and
mov
mov
mov
add
push
and
call
ja
push
ds
dec
lods
pop
lds
xchg
add
pop
dec
je
lea
int3
nop
ja
mov
mov
pop
add
rorl
add
fisttpl
das
add
out
add
xchg
xchg
mov
mov
xchg
iret
inc
add
push
adc
add
mov
xor
inc
imul
imull
in
cmp
add
xor
dec
cmpsl
add
add
cmp
push
add
nop
insb
push
mov
lea
in
hlt
test
pop
scas
gs
pop
leave
mov
and
test
add
out
sub
mov
xlat
xchg
arpl
int3
and
insl
dec
test
sbb
add
popf
addr16
sti
nop
int3
pop
gs
bswap
or
xchg
jecxz
jns
enter
add
int3
fldcw
mov
xchg
xor
push
push
int3
add
mov
add
and
jno
mov
mov
inc
inc
insl
pushf
and
sub
test
add
cmpsl
inc
mov
loop
popf
add
call
mov
int3
lea
add
inc
je
jl
and
jae
repz
xor
jns
mov
hlt
aas
movsb
dec
add
dec
fistpl
sbb
xchg
push
add
nop
nop
fldcw
cli
fxch
jo
cmp
add
add
test
xor
inc
add
addb
enter
add
mov
test
add
xchg
imul
repz
add
cld
out
out
out
add
cltd
out
dec
pop
out
cmpsl
out
cmp
out
add
rorl
cmp
dec
lret
add
add
data16
out
mov
out
out
pop
jmp
out
jb
mov
add
add
data16
add
pop
add
je
lea
lcall
adc
int3
aaa
lock
pop
add
fiadds
pop
push
xor
inc
aam
jb
ljmp
rorb
call
fucomip
inc
loope
add
add
pop
enter
gs
push
inc
add
ss
stos
arpl
nop
sub
and
pop
lahf
sub
jp
add
dec
add
mov
lcall
scas
adc
add
add
dec
push
push
cmc
mov
mov
cmp
add
pushf
ss
pop
je
nop
mov
mov
add
cmp
push
int3
add
cmp
lea
inc
gs
dec
pop
mov
pop
push
mov
int3
nop
push
filds
inc
jo
mov
in
and
sub
add
out
add
add
daa
dec
dec
add
jb
ja
in
add
int3
add
xchg
fisubrs
faddl
nop
sahf
dec
cmpsb
out
cmp
cwtl
add
add
pop
xorb
add
sbbb
mov
and
add
dec
mov
add
outsb
sub
push
mov
addr16
add
or
add
add
push
ret
mov
out
add
fisttpl
push
nop
add
jbe
or
jno
pop
addr16
aam
mov
jecxz
shrl
test
and
ror
add
negb
adc
add
cmp
or
int3
add
adc
fsubr
repnz
mov
iret
jno
add
stos
xor
rorb
imul
pop
mov
mov
dec
and
cmpsl
mov
xor
add
cmpb
es
scas
cwtl
mov
aam
nop
push
jp
shll
push
nop
movsl
jno
mov
add
inc
mov
fsts
pop
mov
mov
or
out
pop
mov
int3
out
dec
adc
xchg
test
inc
push
jmp
xor
add
aas
inc
std
add
or
mov
addb
insb
inc
dec
add
movsb
cmp
int3
xchg
rorl
add
nop
test
int3
add
cs
sub
xchg
inc
lret
nop
xor
xor
andb
movsl
nop
push
jge
out
int3
es
int3
add
push
fildll
jo
and
add
inc
addr16
add
call
jge
icebp
mov
add
add
inc
inc
lea
dec
and
mov
das
dec
adc
add
xchg
fisttpll
inc
dec
je
dec
add
insb
mov
fs
lea
nop
icebp
inc
push
add
mov
call
add
out
shl
sar
rolb
data16
std
add
out
cld
rol
sldt
sar
cs
out
data16
out
add
fldl
dec
cmp
lahf
add
cld
dec
cltd
lret
add
cmp
aaa
std
add
nop
cld
out
test
movsl
out
std
jns
mov
lahf
inc
out
data16
shl
cld
out
add
add
add
out
mov
inc
mov
imul
sub
add
mov
fcoml
add
xchg
mov
sub
popf
sub
pop
add
int3
push
insl
mov
push
int3
xchg
repz
add
jne
inc
add
adc
add
add
scas
inc
add
shll
add
int3
add
sbb
or
add
mov
clc
pop
or
inc
cmc
pop
xor
in
nop
repz
stos
out
add
cmp
or
ret
xchg
imul
mov
mov
add
jno
xor
inc
push
out
subb
fiaddl
fldenv
es
sbb
add
mov
int3
mov
inc
sub
adc
imul
mov
add
add
std
pop
repz
pushf
add
das
rcrb
mov
and
cltd
pop
test
mov
add
pop
pop
jo
xchg
jp
push
jnp
and
add
mov
int3
shlb
pop
mov
call
cld
movsb
mov
and
repz
jb
adc
aas
add
xlat
nop
add
mov
push
inc
add
add
fcoms
add
dec
xor
orl
in
flds
xor
add
push
mov
add
jno
add
movsl
out
add
mov
nop
jg
pop
scas
addb
mov
add
jge
add
out
insl
int3
add
test
fsubr
das
sub
inc
pop
add
jl
sbb
fnstenv
add
add
mov
nop
pop
jmp
test
movsb
roll
xor
std
inc
add
push
out
mov
xchg
nop
out
lea
mov
mov
sub
fistpl
dec
sbb
push
or
add
shrl
aad
sar
int3
add
jmp
add
cmpsb
xchg
xor
push
and
add
push
test
nop
xchg
in
add
jge
jg
mov
dec
std
jbe
nop
and
push
xor
lods
mov
mulb
add
mov
jb
js
lock
mov
and
add
mov
pop
rolb
sbb
iret
mov
cmc
jle
add
lea
mov
sbb
push
incl
pop
jecxz
push
subb
fwait
stc
push
stc
add
add
cld
pop
jo
mov
rcrl
nop
lcall
call
jo
out
inc
jae
or
inc
nop
loopne
pop
ljmp
mov
stos
dec
adc
aad
and
nop
nop
sahf
mov
add
dec
cmp
sub
enter
notl
add
repz
nop
addr16
pop
pop
cmp
add
adc
add
jbe
mov
repz
dec
add
lahf
sbbl
xlat
cmpsb
out
add
lods
scas
loopne
nop
inc
subl
mov
aas
notb
mov
jb
pop
rorl
es
xorb
xorb
xor
je
and
add
adc
fdivrl
outsl
push
add
aas
xchg
adcl
dec
mov
test
pop
outsl
add
clc
int3
inc
rorl
sbb
jbe
repnz
lds
mov
inc
mov
rclb
nop
jb
add
xor
lds
push
xchg
push
add
add
jb
xchg
push
hlt
jmp
add
lods
out
xchg
add
nop
int3
dec
or
pop
cli
jo
aaa
pusha
pop
sbb
loope
ds
cmp
nop
loopne
pushf
cmpsl
int3
add
dec
outsb
inc
aas
iret
nop
add
lcall
jnp
lret
sbb
jo
or
imul
add
xchg
jb
xchg
jcxz
jnp
add
nop
add
mov
mov
sub
aaa
add
xor
nop
fs
aas
int3
mov
mov
add
or
pop
int3
call
int3
cwtl
xchg
cwtl
jb
lods
xchg
mov
stos
gs
add
xlat
mov
pop
inc
mov
xor
stos
mov
das
iret
fmull
int3
pop
cli
mov
lret
int3
add
in
jo
sub
lea
inc
add
call
mov
xor
int3
add
call
dec
jge
add
fistpl
pop
test
rol
pop
pushl
add
icebp
inc
adc
hlt
cmp
movsl
sbb
add
int3
nop
test
inc
add
ss
int3
or
loope
add
test
xchg
mov
add
add
pushf
push
jo
mov
and
in
and
xchg
outsl
repnz
add
std
out
or
jg
out
out
test
cld
out
add
add
aaa
mov
add
rcl
out
out
jecxz
cmp
pop
out
out
shl
fsub
out
out
std
mov
mov
scas
shl
std
out
std
scas
out
std
add
cld
cmp
out
pushl
pushf
fisttpll
and
inc
fnstcw
add
imul
add
mov
jo
imul
int3
int3
pop
xor
add
je
push
xchg
add
mov
dec
imul
lea
out
adc
add
shlb
into
cmc
jl
add
and
sbb
mov
aas
xor
nop
and
ss
add
out
in
lock
rolb
add
jle
imul
negl
ljmp
and
nop
loope
lods
xor
add
aad
aas
fmull
subb
call
add
add
fldl
and
xlat
ds
dec
nop
add
test
xor
dec
cmp
repz
mov
nop
in
or
mov
jmp
sub
int3
lcall
adc
in
sbb
fs
mov
pop
outsb
jo
add
add
clc
add
stc
jns
xchg
lods
int3
xchg
fs
add
ret
stc
inc
mov
push
shll
incl
mov
push
fiadds
sahf
das
cmp
cld
sar
add
js
popa
xchg
orl
push
dec
xchg
test
int3
movsl
jge
add
add
cmp
icebp
add
sbb
add
push
dec
pop
pop
inc
mov
add
out
dec
cltd
mov
fs
mov
add
sbb
mov
add
dec
inc
sub
mov
les
jecxz
xor
xor
mov
call
arpl
mov
xor
fs
jns
and
orb
pop
stc
divb
cli
or
add
ret
add
cmpl
add
mov
mov
movsb
call
fnstcw
clc
pop
inc
push
push
lock
nop
adc
xchg
push
lods
add
add
inc
test
pushf
xchg
jl
nop
push
movsb
bound
mov
out
sub
testl
dec
add
addr16
add
mov
arpl
cmpsb
add
addb
sbb
pop
jmp
pop
sti
dec
inc
pop
pusha
add
dec
add
mov
add
stos
sbb
mov
inc
xchg
add
pop
add
xor
add
clc
xor
add
add
add
daa
int3
movsl
xchg
lock
add
inc
and
inc
stc
add
push
popf
sub
xchg
mov
and
mov
add
test
sbb
pop
mov
lods
xor
mov
fisubl
mov
cmp
add
pop
xor
cwtl
xchg
xor
cmp
pop
hlt
xchg
jo
in
xchg
add
stc
popa
iret
add
jle
xor
int3
add
pop
push
pop
add
fucomp
xchg
nop
pop
pop
push
push
add
aam
xor
add
add
sahf
and
pushf
add
movsl
outsb
jb
xor
flds
add
js
movl
cwtl
add
and
mov
mov
pushf
nop
pop
enter
test
mov
int3
sub
inc
call
pop
out
sub
add
int3
int3
xchg
popa
pop
pop
add
sbb
add
add
sbb
xchg
add
js
xchg
mov
add
ret
mov
sbb
mov
insl
leave
mov
sbb
fidivs
sbb
call
ror
and
add
jo
shll
pop
mov
int3
loope
movhps
nop
test
addb
div
cmpsl
nop
cs
add
int
add
out
out
clc
scas
xor
dec
shl
lds
insb
sub
out
out
inc
aaa
lahf
lahf
ss
add
xchg
std
add
shl
into
pavgb
std
cmp
out
lret
xchg
out
add
cmp
add
add
fcompl
fcompl
dec
mov
inc
add
pop
add
addb
cld
fidivl
xlat
push
xor
inc
dec
xchg
movsb
nop
out
fwait
and
jl
xchg
add
xchg
jle
sbb
and
and
mov
fwait
pop
xchg
lea
stc
add
xchg
flds
mov
add
test
out
aas
loopne
loop
lea
pop
popa
mov
pop
nop
mov
jle
inc
sti
add
in
mov
fadds
call
and
mov
jb
dec
add
shl
push
jne
add
imul
ret
mov
int3
int3
insl
movsb
inc
andb
add
add
xor
sub
xchg
jbe
and
in
aaa
add
pop
inc
add
sub
fiadds
sub
scas
mov
add
lea
int3
js
inc
lea
subl
push
int3
add
cwtl
mov
xor
sbb
adc
ss
add
sbb
push
enter
es
in
nop
mov
fmuls
inc
dec
mov
add
dec
add
idivl
push
and
add
add
push
repz
xor
lea
add
jns
cmp
xor
jmp
add
mov
int3
or
mov
xorb
insl
mov
lock
adc
xchg
cmp
add
push
pop
add
es
addb
and
montmul
cmpsb
add
cmp
data16
out
lret
add
mov
loope
xchg
adc
lods
ds
leave
pop
inc
test
mov
scas
push
add
das
jo
and
mov
jp
jno
add
sub
loopne
icebp
dec
call
inc
adc
call
xor
push
and
ja
sub
pop
add
outsl
pop
add
jne
jnp
jb
xchg
movb
mov
nop
dec
mov
cmp
add
mov
loopne
add
aam
mov
mov
lea
or
inc
sarl
iret
cmp
cmp
lods
mov
jb
fmulp
cmpsl
cwtl
add
inc
jge
add
cmp
lea
add
xchg
pop
jo
icebp
lea
add
mov
pop
orl
inc
cmp
aaa
jo
ja
outsb
jae
xor
idivl
arpl
add
out
adc
in
call
jbe
add
mov
adc
jg
sbb
imul
cmp
inc
mov
sub
add
or
pop
cmp
mov
lea
lcall
jo
or
das
clc
mov
mov
fildll
dec
lods
xor
call
ret
cmpsb
shrb
nop
jg
call
or
add
pushf
adc
mov
pop
int3
addl
imull
add
jbe
or
std
loopne
mov
rclb
outsl
sti
mov
fsubl
das
imul
hlt
cmp
arpl
call
xchg
addr16
faddl
sbbb
mov
add
mov
dec
mov
add
lea
add
add
int3
aad
pop
cmp
mov
and
insl
pop
nop
add
in
repz
push
inc
push
ljmp
lods
inc
add
jl
popf
add
in
sbb
xchg
add
add
daa
mov
mov
inc
out
cld
jp
mov
gs
mov
mov
lea
jecxz
cld
and
mov
add
add
jecxz
gs
cmpsl
lock
mov
mov
incb
mov
add
rcll
sbb
or
jb
mov
add
jo
aaa
aas
add
add
lods
add
push
lods
xor
pop
add
nop
jle
insb
mov
xchg
xchg
xchg
nop
scas
arpl
test
mov
les
add
frstor
nop
cmp
fbstp
adc
mov
orl
clc
fcmovb
jo
cmpsl
sbb
sbb
add
fwait
outsl
xchg
and
sub
pop
mov
jb
jb
add
add
add
aas
mov
adc
mov
enter
pop
in
add
nop
subb
dec
ret
lea
mov
add
pop
shll
add
push
or
mov
popf
incb
lea
in
jp
and
aam
cmp
pop
xor
in
lret
cmp
xlat
sbb
add
dec
call
orb
nop
mov
lock
inc
clc
aaa
addb
notl
pushf
stos
and
and
andb
dec
add
incl
mov
int3
nop
aas
fidivrs
cmpsl
int3
dec
inc
aaa
imul
add
int3
xlat
lcall
divl
gs
fiadds
add
in
lea
mov
cs
mov
sbb
add
sarl
cmp
out
into
add
cs
out
add
pop
and
cs
out
add
cltd
cs
push
add
cltd
out
add
dec
loopne
nop
cmpsl
add
mov
cmp
lret
add
cld
add
add
out
push
in
add
xchg
ja
mov
cmp
xor
popa
cmpsb
add
insl
xor
add
or
mov
aam
call
mov
mov
bound
mov
imul
out
mov
push
movsbl
xchg
hlt
add
adc
add
cmpb
ss
scas
xchg
adc
and
mov
inc
add
adc
push
add
jo
rolb
gs
mov
add
sub
jg
add
add
mov
add
xchg
add
add
xlat
inc
fnsave
lret
cwtl
rorl
imul
cmp
mov
je
mov
mov
repz
mov
inc
stc
nop
add
mov
add
inc
mov
pop
fildll
out
add
adc
add
es
sbb
mov
inc
popf
jb
inc
adc
add
nop
loope
add
dec
fldl
call
roll
add
dec
and
and
inc
jbe
inc
test
and
xor
addb
fdivl
mov
movl
jecxz
adc
test
push
adc
out
and
cmp
pusha
add
pop
sub
add
je
add
call
add
es
jns
add
inc
pop
xor
es
sub
popa
int3
nop
cmp
lcall
stos
nop
cmp
dec
in
nop
mov
mov
adc
sbbb
jne
lods
jb
jg
fs
add
pop
add
fstl
dec
lea
lds
inc
fsubrs
nop
cmpsl
cmp
lea
cli
dec
dec
mov
cltd
test
inc
jmp
imul
sti
add
pop
push
xor
cmp
jo
push
fdivr
sbb
psllw
dec
mov
pop
iret
shl
lea
add
jo
add
pop
add
daa
punpckldq
mov
or
add
cli
dec
nop
aas
loope
int
sbb
aad
sub
mov
mov
add
movsb
push
add
addr16
xchg
lret
cmp
mov
imul
mov
xchg
imul
xchg
and
add
nopl
xchg
push
mov
jo
pop
test
inc
add
jno
sbb
inc
xor
add
inc
int3
in
add
in
add
aad
addr16
mov
mov
mov
lds
mov
add
add
clc
in
or
and
mov
inc
sbb
add
stos
hlt
xor
pop
sbbb
add
add
xor
nop
jo
push
mov
lds
dec
and
mov
and
jge
bnd
out
add
and
sub
cmp
fadds
out
cltd
add
out
out
xor
mov
xor
out
out
cmp
out
dec
add
cld
ss
std
nop
add
mov
add
jnp
lds
stos
xchg
sbb
mov
hlt
dec
movsl
and
jno
or
lds
inc
add
push
add
sbb
lea
add
sarb
iret
dec
pop
int3
xor
mov
enter
jo
push
test
leave
nop
add
xchg
outsb
out
add
jg
adc
xchg
sub
ljmp
add
orb
add
dec
lock
stc
sar
js
int3
xor
adc
lcall
int3
cld
xor
push
xor
add
orb
scas
xchg
loop
mov
jne
ret
addb
ja
push
int3
mov
sbb
fildl
jne
sub
mov
inc
fdivrs
xor
push
std
cs
lds
add
mov
inc
cmp
add
add
decb
cmp
call
cmp
sbb
mov
add
and
clc
jecxz
call
mov
jmp
test
into
cwtl
lea
xchg
test
test
int3
push
hlt
and
or
add
mov
add
add
movsb
enter
add
mov
pop
orb
add
mov
push
add
jecxz
cmp
popa
add
insb
add
pushf
loop
mov
nop
lds
mov
add
inc
nop
test
add
dec
jo
and
cmp
in
mov
inc
dec
cmp
adcb
add
xchg
mov
add
dec
test
insl
xchg
cmp
scas
pop
lcall
push
pop
sahf
mov
into
fiaddl
nop
adc
int3
add
jno
add
lods
sbb
xor
add
mov
add
and
push
mov
jl
cmp
ds
sub
jl
inc
int3
shrb
into
dec
add
nop
addr16
add
add
std
xor
cli
or
nop
dec
sarl
insl
or
add
add
lods
lea
and
pushf
fwait
es
mov
popf
stos
out
daa
add
xchg
xchg
cltd
mov
xchg
push
fisubl
mov
push
clc
scas
sti
add
loopne
jo
imul
push
pop
mov
sub
jno
in
pop
jo
or
adc
add
movsl
add
add
add
add
out
cmovbe
paddb
call
add
push
fisttpll
add
and
mov
nop
add
mov
and
arpl
add
jnp
cwtl
aas
mov
fdivrs
hlt
test
jb
or
add
bound
cwtl
and
filds
in
cmpsl
add
sub
mov
arpl
int3
pop
fwait
arpl
push
inc
repz
mov
inc
pop
mov
sbb
int3
shrb
pop
repnz
cmc
push
adcb
cmpsb
xor
or
mov
lea
adc
loop
hlt
nop
or
xchg
and
nop
add
inc
imul
pop
popa
or
in
fiadds
nop
dec
out
push
inc
stc
repz
mov
inc
lods
dec
add
lret
sub
popf
sub
int3
jo
mov
ret
int3
outsb
ret
sub
leave
push
hlt
call
test
add
or
cwtl
add
add
sbb
call
cmp
in
mov
inc
jb
xchg
push
jb
add
nop
and
mov
push
mulb
add
add
divl
sub
fidivl
add
push
pop
roll
incl
nop
mov
and
int3
inc
xor
aam
add
shll
add
cmp
lret
jnp
mov
cmp
int3
bound
shrb
enter
mov
data16
and
aam
aaa
cmp
mov
pop
es
inc
nop
jo
push
add
aad
lret
add
std
pop
sbb
pop
js
mov
outsl
cmpsb
ljmp
jecxz
addb
mov
dec
cmp
popa
lods
andl
testl
add
ljmp
nop
int3
lods
dec
je
jmp
jle
xchg
shll
push
mov
push
jg
into
xchg
cmpsb
int3
mov
add
add
xor
adc
add
testl
std
cmp
add
pop
dec
jns
sahf
add
out
dec
enter
ret
test
pop
inc
mov
int3
or
iret
ret
call
dec
ja
iret
add
stc
rclb
add
dec
scas
dec
add
fidivrl
add
jb
add
sbb
jo
push
inc
mov
imul
adc
add
dec
bound
add
add
mov
jl
loope
add
fs
std
pop
inc
into
add
pushf
sbb
ret
int3
add
je
add
int
insb
addb
aam
pop
inc
and
and
add
out
jne
int3
xor
and
fadds
roll
outsl
data16
jmp
faddp
add
sbb
or
and
scas
pop
add
and
cwtl
call
add
add
mov
add
xchg
out
jo
push
xchg
shlb
add
add
xchg
aad
inc
repnz
sub
add
dec
jb
push
nop
cld
imul
push
add
add
xchg
mov
add
fwait
add
int3
add
aaa
mov
aam
nop
xor
inc
fiaddl
push
mov
add
add
sbb
add
cmpsl
int3
add
dec
mov
mov
add
add
add
cmpxchg8b
adc
xchg
nop
jmp
int3
add
nop
nop
icebp
shrb
mov
int
jl
notb
jmp
std
lods
jo
xchg
cmc
and
cmp
add
inc
jns
aam
int3
lret
inc
sub
xchg
sub
nop
int3
fists
nop
dec
push
lods
ds
cwtl
cltd
das
cmp
mov
sub
xor
nop
sub
xchg
add
je
add
inc
inc
sub
inc
inc
add
pop
or
dec
add
push
add
addr16
add
outsb
mov
aas
dec
pop
xchg
test
sub
int3
and
mov
xchg
js
mov
clc
push
mov
rclb
js
ret
dec
aas
dec
jmp
inc
xchg
sub
call
aam
mov
clc
aaa
xor
std
out
out
sbbb
cld
outsl
fiadds
fstl
mov
dec
pshufw
xchg
aam
lcall
invd
jno
add
add
int3
int3
mov
test
shl
and
jno
inc
int3
dec
lods
mov
mov
add
sbb
int3
or
nop
add
mov
pop
daa
add
add
adc
pop
xchg
sahf
add
loope
mov
out
add
add
pop
add
bswap
add
in
lock
int3
add
scas
sahf
stos
mov
aas
jo
mov
pushf
ret
add
jge
add
insl
add
arpl
or
dec
wrmsr
hlt
fdivs
adcb
add
repnz
jecxz
mov
aaa
adc
addb
push
lahf
sbb
inc
lea
add
bound
int3
mov
inc
inc
pop
add
sub
andb
pushf
cmp
add
add
inc
call
lock
call
mov
int3
or
mov
les
xor
adc
add
push
lds
in
add
xchg
jb
mov
sbb
push
inc
iret
xor
mov
cmp
mov
xchg
jl
ja
pop
add
mov
cmp
icebp
nop
stc
scas
add
aaa
or
fiaddl
mov
add
test
lahf
in
add
add
hlt
nop
lods
jmp
fnstcw
push
mov
xor
and
stos
pop
out
inc
add
dec
add
pop
out
cmp
movsb
jmp
mov
data16
ds
add
pop
sbb
popf
sbbb
push
mov
nop
and
add
mov
mov
lds
test
je
add
lods
clc
xchg
sahf
jo
add
jns
add
add
pusha
fnstsw
sub
aaa
aas
xlat
jnp
add
pop
jbe
int3
or
cwtl
sbb
iret
mov
add
jb
imul
inc
jl
add
aaa
xor
add
sbb
flds
add
enter
loop
add
in
sbb
int3
fistps
and
mov
cmp
stos
insb
xchg
xor
mov
flds
inc
loopne
mov
jb
sbb
and
rolb
imul
nop
popf
ror
xor
and
add
adc
push
mov
mov
xchg
nop
add
add
and
sbb
shll
jb
fsubrp
cmp
repz
sub
cmpsl
repnz
je
nop
daa
rcrb
mov
dec
scas
std
add
enter
rorl
ss
lea
out
cld
push
subl
out
inc
outsl
js
bound
imul
popaw
jo
arpl
popa
addr16
outsl
jbe
jae
jo
ja
insl
jns
jne
popa
push
jp
arpl
jns
imul
insb
popa
push
gs
jb
insl
jns
outsb
cld
dec
out
out
out
out
cld
out
lahf
imul
out
lcall
add
pop
mov
jg
movsb
pop
pop
add
lds
push
pop
inc
int3
fmuls
inc
insb
xor
leave
mov
gs
jns
insl
int3
test
push
pop
test
inc
fisubs
testl
testb
push
imul
sub
dec
cmpb
mov
movsb
sub
nop
cmpb
adcl
dec
aaa
int3
add
push
inc
ret
add
inc
add
or
mov
fpatan
push
mov
int3
mov
xchg
ss
add
cltd
add
repnz
add
jno
push
add
fdiv
jno
sar
lock
nop
icebp
and
push
and
inc
add
lods
nop
add
jo
cmc
dec
lea
mov
sbb
jo
xlat
add
cld
or
and
sbb
icebp
sub
addb
mov
call
aas
fstpl
sbb
dec
jbe
addb
dec
sti
nop
nop
xorb
and
xor
add
fisttpll
and
test
pop
mov
push
pop
scas
nop
add
sub
dec
int3
int3
ja
test
jp
and
add
cmp
jno
nop
mov
xchg
lock
inc
call
int3
add
outsb
cmp
nop
lods
and
les
add
add
div
sub
xchg
xchg
int3
jo
cs
pop
inc
adc
jns
nop
sbb
imul
int3
mov
inc
add
push
nop
add
mov
add
sub
nop
add
in
scas
int3
add
sbb
cld
int3
push
and
xor
add
enter
dec
or
mov
loopne
sarb
mov
xor
add
mov
nop
testb
shrl
add
loope
inc
sub
out
pop
orb
sarb
xor
sbb
les
mov
inc
push
add
leave
mov
mov
hlt
nop
push
lcall
add
add
adc
pop
sahf
and
fiaddl
sbb
cmp
adc
pause
nop
lcall
je
scas
jno
rcrl
inc
popa
inc
imul
jbe
mov
add
insb
sub
jmp
nop
negb
roll
in
mov
call
and
add
out
sahf
add
adc
mov
add
add
add
and
movsb
movsb
in
add
sub
add
push
pop
mov
js
lea
int
stos
adc
sbb
std
orb
pop
fildl
add
int3
push
dec
xchg
call
aaa
add
pop
cmc
nop
and
pop
add
adcl
add
lea
add
push
add
xchg
mov
cmp
add
cld
fiadds
int3
shlb
int3
int3
and
int3
add
pop
dec
jb
ss
pop
leave
xor
movsb
addb
jo
inc
pop
pop
mov
add
int3
nop
jmp
adc
fwait
pop
nop
sbbl
add
call
int3
mov
add
stos
inc
incb
mov
and
adc
xchg
xchg
dec
sbb
jmp
cmp
add
daa
rol
rolb
dec
inc
rol
xor
nop
jnp
jb
int3
lock
insl
mov
mov
cmpsl
jecxz
mov
lea
add
mov
xchg
daa
add
int3
repnz
fs
filds
pop
leave
into
lret
int3
nop
scas
and
mov
lcall
out
add
rcr
cmp
mov
addl
jo
dec
and
int3
add
imull
xchg
fwait
jl
inc
pop
add
insb
and
lods
xchg
ficoml
xchg
add
loopne
mov
imul
int3
movsb
sti
andb
jb
sbb
fs
add
dec
inc
sbb
fiaddl
add
lea
nop
push
mov
pop
push
mov
je
add
scas
inc
cltd
jb
push
mov
mov
insb
mov
push
jmp
add
sbb
add
add
jg
stc
ja
add
insl
pop
push
add
lret
mov
sbb
mov
inc
add
movsl
xor
sbb
int
push
sub
int3
add
arpl
call
jnp
lock
les
sti
in
jb
add
add
sub
mov
add
xchg
mov
jp
pop
pop
inc
push
push
repnz
popa
lea
int3
add
test
inc
les
out
scas
mov
mov
lcall
aas
mov
pop
arpl
mov
iret
nop
add
add
pop
or
scas
stos
int
add
popf
lea
lock
mov
add
inc
inc
cmp
pop
popf
inc
sbb
mov
sub
out
cs
rcl
out
out
pop
out
xchg
add
std
cmp
cld
out
cmp
out
inc
out
rclb
out
scas
add
fiaddl
add
imul
jg
and
xchg
int3
mov
nop
nop
xchg
add
int3
cmp
add
dec
dec
add
adc
push
roll
nop
mov
jbe
nop
inc
xchg
iret
aaa
add
fsubrl
nop
mov
mov
and
pusha
imul
int3
int3
jae
outsl
sbb
add
faddp
sbb
jp
add
ds
sahf
das
push
add
mov
adc
movsl
add
mov
mov
imul
int3
sbb
fsts
stos
out
int3
add
jecxz
add
lret
into
mov
dec
adc
add
and
jecxz
inc
jmp
inc
xchg
in
xchg
add
nop
int3
add
push
data16
mov
lea
lods
add
enter
andb
inc
pop
dec
add
mov
add
shll
lcall
add
mov
lea
mov
push
mov
add
mov
pop
int3
call
add
imul
pushf
cmpsb
mov
inc
aaa
jecxz
inc
inc
call
clc
jo
dec
cmpsb
pop
inc
inc
pop
mov
sbb
add
mov
jle
jmp
fs
jo
mov
repz
jno
int3
or
ror
test
aas
or
mov
cmpsl
faddl
lcall
call
mov
call
out
flds
mov
or
add
adc
out
mov
dec
jb
dec
repnz
add
int3
add
stc
xor
and
int
mov
ds
and
cld
nop
inc
sbbl
jo
xor
mov
xor
fs
scas
jo
jns
add
rcrl
jnp
add
in
dec
sbb
int
cmp
xorb
icebp
push
inc
and
sbb
jmp
add
aam
test
or
pop
jg
mov
jns
out
incl
fsub
cmovge
add
std
pop
add
cld
std
add
add
jg
add
pop
faddl
add
testl
jmp
inc
dec
jne
call
insl
mov
and
dec
bound
int3
call
add
mov
mov
add
and
push
nop
jo
sub
inc
add
cmpsb
sub
cld
inc
pop
add
adc
es
stos
add
test
sbb
int3
add
pop
int3
add
mov
add
mov
jnp
sbb
lea
or
add
nop
and
xlat
dec
add
inc
inc
add
data16
cld
add
mov
mov
add
add
cs
int3
mov
movsb
sahf
add
mov
lahf
out
int3
int3
out
sbb
jmp
or
in
add
hlt
jmp
xor
jp
lret
mov
adc
add
jmp
cmp
cli
dec
mov
mov
add
jb
lret
add
xchg
call
mov
jb
aam
add
imul
mov
cmp
push
nop
mov
or
add
movsb
lea
nop
push
cmp
jmp
mov
mov
jo
negl
cmp
push
add
dec
ja
sub
nop
iret
sti
repnz
aad
je
and
and
out
add
sub
lea
mov
aad
add
cld
cmc
das
add
insl
ja
sarb
nop
add
shll
bound
inc
cmc
jo
xchg
arpl
push
xlat
les
nop
fdivrl
icebp
nop
and
xchg
das
int3
add
lahf
xchg
and
insl
jb
int3
add
push
call
addb
lret
jne
add
add
shlb
mov
add
into
lret
adcb
add
add
aam
jle
and
cmp
xchg
sahf
rclb
add
dec
sbb
lods
inc
add
inc
xchg
orb
lcall
cmp
nop
inc
sahf
xchg
stc
jns
add
add
adc
lods
or
mov
int3
in
pop
pop
add
mov
lods
int
mov
add
mov
push
outsl
ds
mov
cmp
dec
add
popa
lret
add
mov
in
test
mov
xchg
inc
add
xchg
aad
call
cli
add
mov
and
int3
adc
add
xchg
push
not
scas
int3
add
mov
inc
add
xor
mov
adc
mov
jg
cmp
das
jbe
mov
push
mov
mov
xor
test
outsl
add
repz
push
add
mov
lahf
xchg
add
int3
push
pushl
sti
add
add
or
push
fiaddl
add
pop
out
mov
mov
pop
loop
mov
sbb
sbb
int3
adc
incb
pop
shlb
enter
fsubrs
subb
nop
loopne
pop
ret
gs
mov
aad
imul
mov
adc
push
or
or
add
negb
std
call
iret
cmp
pop
add
add
call
dec
dec
loop
int3
and
add
xchg
add
jae
cld
add
mov
add
and
add
cld
rorl
pop
rcll
out
out
cmp
out
add
lret
add
out
out
add
out
out
out
cmp
cs
out
add
out
clc
add
cld
adc
inc
loopne
jmp
cld
loop
push
out
aam
add
out
jns
aad
nop
ret
add
push
or
lods
addr16
add
dec
inc
add
cltd
pop
negl
adc
xor
nop
jae
aam
add
ret
add
add
add
mov
lea
push
mov
shrb
inc
in
cli
fmulp
test
add
pop
aam
add
inc
test
icebp
push
add
iret
mov
sbb
int3
lahf
jecxz
int3
xlat
mov
int3
mov
jp
mov
pop
notl
pop
movsb
gs
int3
cmp
icebp
inc
cli
push
add
dec
loope
pop
adc
add
fdivr
test
add
and
add
add
pop
sbb
int3
xchg
pop
loop
pop
add
mov
push
in
pop
add
push
notb
sub
jbe
nop
xchg
call
cmp
cltd
add
adc
orb
sbb
inc
add
ds
add
or
addb
push
aaa
mov
es
cmp
lea
cld
rol
int3
pop
push
inc
aad
int3
add
xchg
ja
xchg
add
imul
call
mov
fstpt
mov
mov
imul
cltd
jae
lret
inc
int3
mov
xchg
add
cmp
dec
addb
jne
xchg
lcall
mov
xor
add
cmpsl
out
call
out
add
nop
pop
roll
sub
sarb
out
jne
add
jae
dec
sub
xchg
repnz
lea
add
leave
inc
add
mov
mov
idivb
xor
mov
add
mov
outsl
mov
int3
jo
out
mov
xchg
addb
and
fstl
inc
loop
sub
add
add
pop
mov
in
add
out
cmp
jb
int3
mov
nop
data16
mov
int3
lods
rol
fnsave
das
daa
roll
dec
addb
rcrb
loopne
fsts
inc
cmp
pop
roll
loop
add
xchg
faddl
jg
testl
add
fnsave
add
aad
add
push
add
and
mov
xor
inc
add
aam
sbb
mov
xlat
add
loopne
jae
mov
ja
stos
dec
fistl
xor
fwait
ljmp
cmp
sub
xor
outsb
and
adc
pop
loope
add
pop
inc
and
add
test
lret
int
add
mov
add
inc
out
int3
add
jl
adcl
sub
lahf
add
mov
xor
aam
add
das
scas
ret
lea
nop
int3
out
adc
add
adc
and
popa
cmp
fsubr
sub
jo
dec
mov
adc
add
orb
nop
xchg
imul
jecxz
add
dec
bound
pop
add
imul
jecxz
mov
loopne
scas
add
xor
int3
pop
negb
mov
lock
incb
add
mov
sbb
out
fmull
add
mov
jbe
add
dec
pop
pop
cli
jo
insb
mov
shrl
int3
jo
push
and
nop
call
add
cmpsl
mov
push
loope
mov
bound
add
lock
add
stos
sbb
imul
add
test
fildl
mov
outsl
je
push
int3
ljmp
int3
mov
mulb
mov
jb
cmc
fwait
cmp
js
and
add
sti
jae
adc
movsl
and
pop
pop
xor
push
dec
add
pop
inc
add
int3
sarb
and
mov
in
inc
mov
push
add
nop
pusha
sub
pop
add
jo
out
mov
int3
adc
loopne
lahf
pop
out
add
lahf
out
shll
dec
add
sbb
pop
pop
add
cmp
add
jns
out
add
out
out
std
sbb
xor
dec
cld
inc
ud0
out
dec
add
cld
aas
std
fnstsw
cld
scas
sbb
inc
cs
cld
cld
shl
cld
sub
dec
add
out
std
cmp
cld
out
add
adc
stos
std
jle
cld
shll
popw
out
data16
adc
inc
inc
add
call
lea
xor
cwtl
insb
sub
ret
inc
pop
cmp
pop
arpl
add
iret
inc
nop
mov
test
nop
inc
add
lret
dec
xor
xchg
pop
sub
mov
sahf
xlat
dec
pop
add
clc
daa
push
incl
add
mov
out
mov
add
xchg
pushf
iret
jmp
mov
nop
xor
sbb
nop
fimull
and
lea
xlat
xchg
inc
mov
nop
fs
jne
add
outsl
jb
clc
je
add
xchg
daa
or
xor
lret
add
inc
rolb
add
stos
je
shrb
sti
xchg
dec
mov
inc
pop
add
clc
in
sub
and
arpl
or
mov
aam
mov
add
outsl
add
ljmp
mov
mov
mov
aaa
test
add
mov
dec
popf
popf
mov
outsb
icebp
enter
ja
nop
pushf
int3
mov
pop
nop
sbb
push
jle
jb
pop
nop
stc
lods
inc
addl
add
call
add
pop
sti
int
add
xor
jo
pop
dec
mov
and
push
out
sbb
mov
jo
add
inc
leave
mov
scas
movsb
xor
cmpsl
mov
add
add
nop
int3
adc
mov
addb
sti
imul
enter
or
or
dec
movsl
jecxz
nop
jmp
sub
rcll
aaa
fldl
mov
in
scas
adc
xor
ss
inc
int3
add
cli
sti
or
dec
cltd
add
into
mov
int3
mov
jne
xor
mov
pop
add
add
inc
mov
jo
pushf
cwtl
cmpsl
mov
inc
jne
nop
jmp
nop
add
addr16
nop
and
das
mov
nop
mov
mov
jmp
mov
test
mov
add
sbb
stc
sub
add
push
mov
inc
mov
cwtl
inc
add
mov
je
dec
cmp
mov
int3
add
pop
add
inc
jecxz
adc
int3
mov
scas
pop
mov
sub
and
jmp
xchg
cli
aad
inc
sub
lcall
inc
shl
and
adc
fs
shll
push
add
mov
js
nop
pop
jecxz
xchg
nop
xor
add
mov
jbe
add
add
push
ret
aad
jo
fisttpl
pop
lods
inc
and
gs
pop
add
lret
inc
nop
add
clc
popl
add
in
pop
xchg
add
mov
arpl
jbe
add
cmp
and
mov
hlt
add
cmc
fadd
adc
add
xchg
add
mov
jo
jnp
lods
out
inc
lds
pop
jo
cmpb
inc
inc
inc
in
shll
add
adcb
mov
int
mov
dec
enter
inc
sbb
dec
add
mov
inc
out
add
adc
add
push
xor
int3
and
sbb
sub
jns
popa
add
jmp
sbb
add
call
sbb
iret
pop
aad
and
shll
mov
inc
add
out
lea
cltd
jp
or
inc
mov
into
add
dec
insb
jg
add
int3
dec
jg
sbb
nop
icebp
jbe
mov
xchg
mov
or
add
fisttpl
flds
lahf
xchg
cmp
ss
push
add
pop
or
inc
dec
ds
std
lret
popf
mov
in
int3
in
into
repnz
dec
clc
aaa
mov
add
mov
cmp
bound
add
iret
sahf
add
mov
inc
add
sub
imul
add
xchg
adc
sbb
scas
sbb
daa
mov
ja
aas
add
in
add
add
xor
test
pop
nop
aas
add
adc
pop
ss
fucomi
loope
lods
sbb
daa
sbb
dec
dec
jo
js
cmp
movb
sbb
add
popa
and
mov
rolb
or
dec
push
into
inc
add
insb
inc
jns
xchg
add
jb
out
xchg
and
mov
jge
lods
add
repnz
add
push
stos
out
mov
fadd
and
dec
push
fisttps
mov
cmp
mov
cld
jg
imul
nop
lcall
lret
call
jb
jo
roll
popl
leave
call
push
adc
call
add
xor
out
lock
add
cmp
sbb
adc
add
ret
sbb
leave
jb
andb
ficoms
int3
fsubrs
xorb
out
inc
mov
jnp
add
xorl
call
faddl
or
cmp
cs
and
aaa
movb
add
popa
mov
dec
and
lods
enter
rcrl
test
sub
add
dec
push
add
adc
add
mov
mov
addr16
ret
mov
add
or
add
fnsave
jp
xor
iret
jnp
and
add
sahf
lods
mov
adc
xor
xchg
add
loope
jmp
les
add
jb
inc
pop
idiv
add
mov
nop
sbb
leave
inc
sub
and
push
bound
jo
incl
adc
add
aaa
sbb
sahf
adc
add
ss
call
int
add
call
nop
sbb
inc
addr16
cmp
add
push
cmp
jno
add
in
rcll
pushf
add
jb
mov
int3
popf
in
into
incb
nop
shlb
push
ss
add
pop
push
rclb
pop
jo
add
loopne
add
cmp
xor
jg
xchg
add
int
jecxz
nop
add
mov
mov
adc
jecxz
pop
push
dec
mov
int3
add
inc
rolb
insl
fsubrs
add
clc
mov
icebp
inc
test
lea
sti
jge
xor
add
into
pop
mov
insl
cmpsl
fstps
xchg
add
jne
roll
call
adc
mov
shrl
dec
pop
add
add
int3
pop
fwait
cmpsb
roll
xchg
mov
aad
or
add
inc
ret
pushf
loopne
push
imul
cmp
lock
adc
sub
sub
cmp
movsb
call
fisttpl
and
inc
inc
nop
add
pop
mov
sbb
add
loop
dec
xor
shr
add
enter
or
int3
push
mov
and
nop
add
push
inc
adc
roll
add
and
test
pop
xchg
int3
cmp
nop
test
jo
nop
sub
mov
xchg
cmp
out
call
lds
int3
in
sarb
notb
in
mov
xor
mov
add
fadd
add
xor
call
push
inc
mov
daa
mov
and
inc
add
sbb
repz
insb
jl
insl
nop
sub
lock
call
push
add
lods
pop
mov
stos
mov
add
add
inc
call
cmp
int3
addr16
pop
rolb
add
in
lock
loopne
push
mov
pop
andb
pop
test
mov
in
adc
dec
push
gs
mov
int3
cmp
into
jo
push
lea
ret
mov
aam
add
inc
outsl
mov
xchg
add
call
cwtl
jo
jmp
ss
add
out
mov
add
imul
adc
out
sub
add
sbb
setae
int3
mov
jo
cld
sarl
rolb
xor
cli
aas
aaa
loop
add
or
fwait
pop
xor
and
lods
or
push
insl
js
fsubrl
nop
lods
pop
cmp
mov
lock
lea
scas
les
lcall
xchg
les
mov
enter
cli
mov
dec
add
cmp
movsl
jne
add
rolb
ljmp
lea
mov
mov
sbb
or
add
add
fs
add
nop
lea
xor
ss
add
mov
cmp
add
adc
add
ds
shl
add
add
incw
out
std
out
out
add
pop
out
cmp
data16
shl
add
add
mov
into
jns
dec
out
dec
shl
cld
cltd
data16
add
add
out
out
push
stc
jae
add
or
loopne
add
add
lret
lahf
add
nop
pop
jb
add
fadds
std
fldcw
add
or
add
inc
and
sub
add
pop
inc
scas
cltd
add
ret
pop
add
pop
add
arpl
inc
int3
stc
adc
cmp
xor
or
add
mov
test
ret
adc
xchg
std
ds
inc
add
add
mov
add
xor
insl
adc
add
cmp
movl
mov
xor
aas
hlt
loop
nop
mov
into
jnp
shrb
dec
enter
addb
pop
fstpl
mov
mov
add
or
push
test
adcb
out
das
loopne
add
stos
lods
xchg
int3
jmp
inc
ljmp
mov
add
pusha
cltd
xor
int3
add
lahf
cmp
nop
int3
adc
xor
lea
jmp
fwait
pop
push
stc
add
add
or
add
out
mov
add
or
add
add
sbb
jo
mov
cmpsb
lea
popa
xchg
scas
xor
imul
dec
test
out
or
in
xorb
loop
mov
insb
add
pop
int3
add
mov
and
xor
imul
mov
sti
dec
loopne,pn
jo
and
insl
call
inc
xor
cmp
lock
std
jo
int3
pushf
jnp
xchg
lods
cwtl
jmp
dec
popf
nop
add
int3
xor
rorl
add
addr16
push
nop
add
rorb
mov
inc
add
adc
stc
mov
ljmp
add
int3
xchg
cmpsb
in
jmp
mov
add
jbe
push
inc
leave
les
inc
adc
add
push
pmuludq
push
stc
lea
or
add
out
or
inc
mov
lea
push
pop
mov
xchg
sbb
xor
lahf
sbb
int3
add
jmp
or
mov
mov
daa
add
fmull
jo
mov
nop
jmp
addb
push
les
mov
add
inc
idivb
add
dec
add
int3
add
int3
repz
les
xor
icebp
mov
cmp
mov
repnz
adc
int3
xorb
xor
and
add
add
adc
mov
nop
adc
out
lods
out
test
add
xchg
out
loop
jns
cltd
add
movntq
add
scas
std
daa
out
cld
add
cld
out
out
cld
xchg
out
cmpsl
clc
add
out
lret
out
add
add
mov
xchg
and
in
js
lock
mov
jge
pop
or
pushf
add
insl
pop
push
xchg
loope
add
nop
int3
sbb
push
add
xchg
addb
mov
out
and
inc
inc
push
cmp
xchg
test
add
sub
pop
and
sbb
repnz
add
lea
cmpsb
incl
add
rorb
xchg
add
int3
les
dec
add
icebp
gs
add
cmpsl
push
ret
jo
add
mov
add
pop
nop
bound
aam
leave
ret
xchg
int
int3
and
loope
mov
dec
cld
jo
mov
sarb
mov
xchg
push
and
add
cld
mov
cli
lret
jb
mov
add
mov
cmpsb
adc
nop
and
add
loop
inc
cmp
xor
outsb
jne
nop
and
imul
nop
lret
cmpsl
pop
nop
nop
test
inc
jae
loopne
fs
add
or
and
nop
cld
lods
pop
xchg
int3
add
mov
add
in
lea
outsb
adc
adc
inc
mov
inc
cmp
icebp
addl
xor
popf
and
outsb
cs
stos
add
arpl
lea
xchg
xchg
cmp
xchg
daa
push
inc
xorb
ror
and
and
jl
cmp
jge
cmp
call
and
and
mov
jg
iret
add
adc
xor
fwait
sub
add
mov
out
aaa
add
jb
mov
ret
jl
mov
nop
fsubrs
mov
stos
dec
dec
ret
add
int3
dec
sub
add
fcompl
hlt
pop
add
add
jg
xor
lret
inc
cltd
mov
inc
add
jne
jne
mov
mov
lock
bound
sbb
faddl
and
call
int3
inc
jecxz
faddl
add
out
mov
add
add
insb
or
nop
sbb
add
movsb
dec
push
fildl
nop
jb
scas
inc
add
mov
and
imul
pop
sbb
out
adc
add
insl
add
lea
mov
imull
inc
add
test
add
out
out
arpl
add
sbb
mov
popa
xchg
dec
xor
enter
lea
push
push
mov
dec
ja
add
loopne
ds
sub
jb
aas
dec
xor
out
add
sar
cmp
out
scas
mov
loopne
add
cld
dec
out
out
sar
add
std
dec
clc
out
std
ja
jae
dec
into
pop
lret
outsb
add
out
add
test
cld
cmp
data16
shrl
out
out
clc
pop
out
mov
inc
add
decb
out
jnp
imul
add
shl
out
jmp
cld
cld
std
out
jmp
out
faddl
and
nop
nop
and
push
jbe
add
mov
pop
mov
and
pop
cmpsb
repz
add
dec
daa
add
add
push
mov
std
and
or
xlat
xor
sub
push
loop
add
xchg
xor
shll
orb
dec
je
and
add
arpl
or
or
ds
jno
inc
mov
xor
mov
push
and
out
outsb
inc
add
leave
xchg
and
int3
negb
sbb
nop
xor
add
cmp
cmpsb
sub
add
fistl
adc
call
rcll
cmp
test
pop
mov
cmp
add
xchg
jl
cmc
add
mov
test
mov
inc
pop
push
cltd
jmp
xor
xchg
inc
inc
int3
cmp
push
add
lock
dec
nop
fsubs
xchg
cmp
adc
add
roll
icebp
pop
xor
nop
nop
lock
lret
and
cwtl
call
lahf
add
repz
add
add
mov
imul
add
push
int3
aam
jo
adc
add
enter
nop
mov
int3
mov
imul
mov
inc
add
add
nop
or
mov
jo
mov
mov
push
xchg
movsl
out
xchg
outsb
sub
lods
mov
mov
mov
add
int3
nop
adc
pop
out
icebp
add
add
out
add
inc
pop
jne
inc
add
inc
push
xor
add
sbb
add
leave
inc
nop
mov
add
jo
mov
decl
push
and
add
add
into
int3
jns
add
xchg
push
fwait
lods
sbb
mov
pop
cmp
mov
nop
lea
js
mov
add
in
xor
sbb
cli
mov
lock
add
out
add
in
stos
sbb
lret
jg
stos
add
dec
fsub
push
call
fadds
nop
or
mov
mov
or
add
inc
cmp
nop
lock
adc
add
std
sbb
lret
add
ds
and
std
dec
pop
xchg
int3
add
add
popf
cltd
cli
mov
pop
test
repnz
adc
jno
fildl
int3
xchg
push
mov
xchg
xor
add
ljmp
dec
jp
clc
mov
add
and
mov
jne
flds
add
pop
aas
pusha
add
leave
sub
cmp
jp
add
dec
jle
loop
out
insl
pop
mov
out
add
cmp
inc
add
pop
push
inc
mov
add
pop
nop
nop
mov
outsb
cmp
aas
rorl
hlt
jp
pop
stos
int3
add
xor
fdivl
add
xchg
or
fisttpl
mov
mov
mov
xchg
add
shrb
in
fdivl
add
push
lret
xlat
int3
push
cmp
and
imul
je
sbb
aam
mov
lret
adc
push
decb
push
lea
int3
add
pop
rolb
call
jge
loopne
ds
jo
aaa
cmp
call
lea
xchg
add
add
lret
jmp
mov
hlt
in
data16
and
add
rclb
loope
inc
icebp
pushf
push
xlat
cmpsb
add
nop
mov
jae
lock
adcb
out
nop
testb
nop
shlb
in
nop
int3
dec
fprem
call
and
in
mov
pop
or
add
pop
scas
add
xor
inc
add
ss
adc
inc
nop
pop
mov
jbe
or
inc
pop
movb
mov
int3
add
js
dec
mov
push
aad
and
mov
xor
call
xchg
es
mov
ja
ds
int3
xchg
push
orb
int3
add
rcll
add
or
add
add
addr16
push
mov
push
pop
jb
rcll
ret
lea
add
jg
adc
inc
xchg
xchg
jbe
sub
add
mov
add
adc
mov
nop
cmpb
jb
lea
int
int3
out
aaa
jmp
popl
add
xor
and
test
push
cli
jbe
int3
mov
call
pop
and
mov
xchg
fidivs
call
and
in
cmpl
sbb
add
push
inc
push
add
lock
int3
sbb
rol
mov
fiaddl
xchg
xlat
add
mov
xor
mov
cmp
jge
xchg
fucomi
mov
es
lods
int3
nop
or
add
fptan
jge
lea
pop
mov
jmp
movsb
lds
jp
imul
push
gs
jne
popa
push
arpl
imul
push
gs
pop
out
add
out
std
pushl
out
mov
out
data16
std
mov
addl
add
std
out
add
out
pop
fsubrs
cld
cmp
cld
cld
add
add
daa
jmp
dec
lahf
add
data16
add
std
cs
out
std
aad
cltd
out
add
add
out
pop
nop
sub
jne
cld
lcall
cmp
add
add
and
pop
addb
call
loop
iret
into
testl
ja
add
sbb
jno
mov
mov
fs
ljmp
in
inc
jb
pushf
cmp
idivb
inc
jp
xchg
and
jl
int3
inc
std
xor
out
cltd
arpl
call
jno
sub
mov
roll
mov
mov
mov
xor
ret
mov
negb
pop
xchg
stos
jo
or
inc
add
data16
push
repz
xchg
stos
xor
int3
int3
jns
out
add
stos
xchg
dec
add
inc
popa
aad
add
int3
push
int3
dec
int3
sub
add
pop
rclb
sti
mov
inc
repz
add
add
js
pop
add
jge
je
add
push
notl
lods
dec
int3
add
inc
xlat
nop
pop
insb
cmpsb
push
mov
pop
int3
adcb
lret
pop
int3
add
ret
rolb
mov
cwtl
mov
xchg
add
mov
or
jb
insl
daa
imul
rcr
push
lea
nop
dec
jge
mov
mov
pop
lock
inc
scas
pusha
aad
nop
add
clc
nop
mov
adc
cwtl
or
mov
or
xor
jb
push
inc
int3
add
dec
push
int3
lahf
call
in
daa
add
add
sahf
movsl
mov
fistpll
scas
int3
add
pop
add
into
dec
add
inc
sbb
rolb
mov
mov
scas
int
int3
popf
mov
mov
mov
lss
add
stos
nop
add
pop
leave
xorb
xchg
mov
stc
and
mov
pop
push
and
add
mov
add
or
popf
jmp
rorb
mov
jb
mov
add
aas
or
push
add
shlb
out
pushf
addl
testl
inc
add
and
add
fiadds
mov
int3
add
outsl
in
and
push
test
cmp
jnp
les
and
jmp
add
adcb
pop
and
add
pop
sub
mov
jae
adc
add
repz
inc
js
outsl
ja
and
pop
inc
add
pop
xlat
lods
outsb
add
dec
jge
in
inc
xor
xor
xchg
cmp
fwait
cmp
add
push
xchg
mov
jecxz
test
mov
ret
xchg
sbb
add
mov
jecxz
xor
sub
adc
lods
test
add
add
int3
inc
subl
iret
imul
dec
les
mov
scas
add
and
int3
roll
mov
movsl
mov
sub
add
jl
add
leave
mov
lret
jp
add
mov
add
sbb
lea
xor
fists
cmpsl
push
int3
sti
fs
mov
pop
stos
js
in
mov
scas
je
xor
and
add
addl
pop
fadds
adc
mov
push
mov
movl
rolb
sub
arpl
int3
add
cmp
rcl
insl
arpl
nop
or
pop
xchg
or
lea
cmp
and
loopne
cmp
add
mov
mov
add
dec
gs
sbb
mov
sbb
sub
cltd
jne
inc
stos
xchg
add
popa
lea
repnz
add
mov
add
fildl
add
pop
icebp
lds
mov
mov
cmp
and
pop
add
loope
sti
push
or
call
pop
nop
lea
or
xor
jb
dec
xor
mov
pop
aas
out
nop
and
add
xor
pop
iret
push
push
add
add
out
in
pop
fimuls
je
jmp
mov
test
or
out
lea
adc
aaa
popa
add
add
int
icebp
xchg
mov
add
pop
and
add
and
and
xchg
add
lds
jge
xor
rolb
add
and
inc
cli
dec
push
pop
int3
bound
dec
imul
xchg
nop
inc
enter
orb
inc
or
add
sub
add
sbb
pop
pop
add
push
stos
lds
sbb
rolb
or
add
lea
add
mov
add
shlb
sub
jo
mov
add
mov
mov
mov
mov
adc
inc
rorb
add
lds
add
mov
mov
shrl
add
cs
mov
out
add
jecxz,pt
out
mov
lret
out
sub
and
add
add
cld
xor
shll
repz
add
add
pop
out
out
out
lahf
xor
shl
cld
out
cltd
out
and
add
jmp
out
mov
cmp
xlat
int3
add
dec
xchg
lea
push
pushf
imul
adc
adc
dec
add
xchg
jo
lods
cmp
mov
addr16
sbb
das
mov
int3
addr16
xor
nop
mov
jns
int3
xchg
jo
je
or
inc
add
rcrb
mov
out
xchg
stos
mov
lods
int3
adcb
int3
jae
jmp
std
fmuls
out
popf
mov
and
and
pop
movsb
loop
add
xchg
mov
push
movb
addb
add
dec
faddl
jns
sub
call
ja
int3
mov
add
mov
pop
ret
add
add
push
or
pushf
xchg
push
add
enter
in
pop
push
in
scas
inc
add
push
mov
add
movntps
fcmovnbe
add
outsb
inc
xlat
xor
lea
imul
pop
push
sbb
xchg
jo
push
mov
dec
sub
lods
mov
imul
loopne
jo
bnd
inc
or
subb
add
scas
int3
add
sub
int3
cmp
add
xor
insl
in
inc
xlat
mov
faddl
add
sub
add
jbe
add
mov
fprem
mov
mov
roll
sub
cmp
xchg
sub
sub
scas
dec
add
adcl
pop
jge
add
jb
or
add
and
int3
dec
orb
lea
int3
add
jbe
roll
mov
inc
movsb
lret
mov
int3
insl
sub
xor
inc
iret
mov
add
lahf
add
rcr
jg
add
insl
sbb
mov
add
xor
int3
mov
jp
mov
js
pop
inc
add
int3
dec
add
inc
fsubrp
mov
mov
inc
and
and
ljmp
out
sbb
pop
add
out
ds
add
sbb
xlat
movsl
imul
jge
into
jb
cmp
fwait
xor
mov
cmp
xor
push
stos
scas
fwait
add
adc
rclb
push
lods
roll
adcb
add
cmpsl
add
nop
call
push
movsl
add
push
dec
push
jo
int3
mov
mov
js
add
inc
dec
add
cmp
add
xor
repz
xor
mov
dec
fbld
inc
dec
or
int3
xchg
xor
hlt
fstps
cs
add
sub
add
int3
mov
out
es
mov
nop
cmc
loopne
call
add
movsb
jb
mov
je
jle
jl
add
adc
xor
lea
lret
mov
sbb
inc
mov
jmp
lret
sbbl
xchg
hlt
xchg
int3
dec
fmull
mov
push
faddl
add
aad
adc
xchg
jmp
cli
xor
mov
mov
adc
out
and
add
fdiv
add
pop
in
fisubs
add
int3
int3
add
ret
and
jg
lahf
lea
lods
fnstenv
add
cmpsb
xchg
inc
daa
das
add
push
add
fs
pusha
jle
stos
pop
push
add
mov
xchg
jo
dec
cmc
data16
add
subb
add
in
out
sti
flds
add
int
imul
mov
dec
cmc
add
addl
add
xchg
add
imul
out
data16
add
add
add
out
out
out
out
add
add
add
add
loopne
out
lock
xor
add
and
data16
cld
mov
out
mov
cltd
cmp
out
out
sar
out
mov
mov
add
sar
fdivr
std
call
out
out
roll
cld
out
data16
rcrl
dec
out
jns
add
js
nop
enter
loop
call
xchg
jno
add
cmpsl
adc
sub
add
cli
add
xor
jo
lcall
lds
lds
in
lea
out
lods
sbb
add
sub
jo
add
daa
pop
add
and
or
sbb
inc
add
xchg
and
jo
stc
ds
add
mov
aam
popf
push
int3
push
nop
and
mov
add
imul
add
and
mov
mov
nop
or
ret
cmp
mov
nop
add
xor
mov
add
add
jecxz
push
int3
add
hlt
cli
inc
adc
push
aam
add
add
imul
jb
sub
jne
int3
xor
pushf
in
cmpsl
add
mov
push
bound
mov
int3
daa
out
fisubl
push
mov
jb
cmp
mov
and
and
jb
call
add
xchg
stos
out
mov
and
mov
jp
add
fs
sbb
inc
push
pushf
stos
call
nop
jle
je
inc
inc
add
call
inc
test
popf
adc
add
in
jp
add
add
and
fldcw
adc
mov
cwtl
add
push
pop
ss
add
adc
add
add
add
mov
sub
add
mov
cwtl
mov
add
dec
sarl
xor
push
mov
idiv
idivb
add
inc
nop
inc
daa
or
pop
mov
enter
pop
lea
or
imul
nop
mov
dec
add
add
leave
add
add
out
jo
lcall
movb
cli
aad
call
and
test
call
sub
add
nop
add
pop
add
inc
int3
mov
mov
mov
add
cmp
add
inc
dec
loope
pop
mov
nop
sbbb
mov
outsb
sbb
int3
scas
out
outsb
pop
in
add
adc
cmpsb
adc
jecxz
icebp
pop
lcall
in
xchg
int3
inc
cmpsl
lret
pop
repnz
nop
jle
pop
sbb
nop
cmp
outsb
pop
fcomps
nop
push
push
int
loope
add
loope
lea
add
sbb
or
add
std
mov
or
nop
cld
int3
pop
sub
popa
cmp
out
or
add
cmp
jne
jb
nop
outsl
out
call
xchg
nop
pop
xchg
rorl
inc
xlat
cmp
addr16
lods
aam
sbb
sar
out
add
sbb
adc
imul
xor
int3
sbb
popa
fmulp
add
jno
int3
pop
xchg
sub
and
enter
mov
call
mov
sarl
push
lret
fmull
cmp
and
test
dec
fmull
repnz
packssdw
fcmovu
pusha
add
cmp
jg
mov
nop
pushf
pop
cli
ror
and
mov
sbb
add
nop
int3
inc
cli
out
sti
add
mov
out
jo
xchg
icebp
dec
loopne
add
dec
mov
pop
testl
xor
cmp
int3
lcall
nop
mov
inc
and
add
pop
pop
jb
lea
cmp
and
cmp
pushl
mov
mov
pop
or
mov
sbbb
sahf
push
nop
add
pop
dec
mov
pop
lahf
cli
addb
out
dec
leave
add
loop
mov
add
fstps
scas
movsl
jnp
mov
sar
dec
add
sub
pusha
lcall
nop
jbe
scas
push
lea
call
out
add
mov
fisttps
and
pop
mov
pop
ret
call
jle
sahf
fcomip
nop
int3
xchg
dec
pop
push
add
push
incl
in
mov
xor
int3
test
add
sbb
inc
int3
mov
add
xchg
test
add
andb
add
mov
jnp
add
int3
jo
push
or
int3
mov
in
pop
adc
mov
scas
lahf
xlat
and
insl
in
movl
mov
out
cli
add
in
pop
push
xchg
nop
lret
enter
in
mov
nop
cltd
or
sbb
ss
inc
clc
cld
xchg
int3
mov
dec
mov
addr16
inc
nop
lret
pop
fildl
add
mov
pop
imul
jecxz
add
push
aaa
dec
add
add
dec
and
imull
and
mov
sarb
adcb
add
mov
jb
add
lret
nop
sbb
add
idivl
add
mov
add
pop
mov
insb
pop
pop
xchg
add
ret
mov
xchg
dec
push
mov
jo
mov
sbb
jnp
add
scas
testb
out
out
add
test
out
cld
fiaddl
sbb
out
out
out
out
std
out
data16
loopne
out
out
roll
cmp
into
add
adc
out
xor
add
inc
mov
in
jmp
or
nop
mov
add
sub
inc
add
rolb
mov
int3
pop
mov
add
cltd
sub
mov
jle
daa
inc
int3
out
aas
mov
mov
add
or
nop
add
ljmp
nop
outsb
scas
pusha
mov
cmpsb
mov
and
dec
shlb
mov
jo
xor
int
roll
int3
dec
inc
and
nop
aas
cmpsb
out
add
and
add
cwtl
and
add
inc
loope
push
ja
add
in
pop
imul
int3
bound
fisubl
repz
sub
jae
add
addr16
add
adc
jns
push
add
add
in
add
nop
add
jp
int3
add
sbb
add
xchg
nop
pop
ds
inc
ds
add
pop
xor
out
add
mov
add
push
out
mov
daa
sysret
add
ret
mov
add
lcall
pop
or
add
nop
cmpsb
and
inc
add
sbb
mov
add
idiv
aam
nop
jp
aad
pusha
push
leave
data16
and
adcb
loope
add
sbb
add
add
pop
sbb
addb
int3
xor
jns
lcall
xchg
and
mov
in
add
push
frstor
out
add
add
push
inc
out
repnz
cld
add
jo
test
mov
xchg
int
add
sbb
dec
mov
fcoml
mov
daa
mov
add
push
add
addl
andb
mov
sti
add
scas
add
aaa
aaa
add
pop
xchg
add
inc
addb
sar
test
enter
in
add
xlat
jbe
out
nop
add
or
xor
test
mov
sub
nop
add
icebp
repz
fsubrl
mov
ss
add
ss
add
add
fisubrs
add
xor
cmp
outsl
rolb
ret
add
test
lret
mov
cmpsb
pop
xchg
movl
and
add
add
add
out
add
data16
out
add
out
movntq
out
jle
xchg
incl
add
out
mov
jp
int3
pop
lods
pop
jl
pop
orb
add
lea
adc
mov
leave
pop
mov
loop
pop
jo
jl
or
popa
rolb
add
aam
pop
mov
add
dec
xor
xchg
inc
hlt
in
jnp
int3
cmpsl
test
xlat
add
in
pop
jle
inc
jo
call
mov
and
sbb
inc
int3
insl
cmc
and
sti
nop
cmp
mov
and
jo
jb
add
add
inc
jo
push
scas
add
std
int3
test
hlt
add
jns
push
add
enter
pop
clc
add
cs
and
xrelease
mov
dec
push
add
jle
mov
dec
sar
nop
enter
pop
add
push
mov
xchg
add
lea
mov
mov
push
sti
mov
lea
add
mov
jo
rolb
nop
jo,pn
push
pusha
mov
add
je
pop
add
ss
xchg
push
mov
test
add
jbe
lahf
add
das
test
and
decl
repz
mov
push
xor
pop
add
jecxz
nop
pop
popl
nop
cltd
std
inc
add
add
dec
push
ss
nop
pushf
push
mov
shrl
add
xchg
lret
and
inc
adc
mov
mov
mov
mov
shlb
or
ret
add
lea
call
add
fidivl
push
data16
cmpsl
add
pop
mov
insb
push
add
cltd
jl
mov
push
sbb
add
add
jb
mov
scas
sbb
int3
int3
mul
inc
arpl
add
jne
jmp
push
add
ja
sub
cmpsl
clc
int3
sarb
add
int3
mov
sbb
cmp
dec
mov
call
mov
jo
ret
add
addb
ds
into
add
int3
sahf
mov
aas
xchg
andl
add
test
inc
jg
enter
scas
scas
decb
add
int3
popl
xlat
in
jmp
negb
add
ljmp
bound
add
xchg
lret
jae
add
sub
test
and
xchg
add
jl
or
data16
das
lea
pop
cmpl
jo
and
shlb
int3
gs
outsb
or
jmp
cmp
addb
cmp
adc
cmp
pop
jno
xor
xchg
inc
xrelease
sub
add
dec
ss
sub
jo
add
fimull
xchg
fcmovb
call
ss
lea
add
out
daa
jb
and
jb
loopne
jno
jb
jge
stos
push
add
js
ret
out
je
xchg
bound
sub
shlb
add
int3
add
jp
cmpb
or
mov
jae
push
cwtl
test
dec
js
add
mov
enter
sub
repnz
addl
add
jns
lahf
sub
test
stos
push
pusha
sub
lahf
add
cmc
mov
or
add
dec
sarl
sahf
es
and
roll
push
aam
int3
repnz
nop
ret
aam
jle
das
and
add
cltd
in
insl
add
nop
inc
push
das
dec
add
lods
popa
aas
into
add
add
fs
push
mov
leave
jnp
adc
add
inc
mov
cwtl
imull
add
fmull
fiadds
sti
loopne
jo
inc
jno
add
sbb
mov
lea
dec
fs
add
adc
mov
jmp
pop
push
add
cmp
cmp
loop
add
push
stc
daa
adc
scas
and
xor
loope
nop
add
jmp
shlb
ljmp
jle
dec
mov
insl
outsb
and
imul
pop
adcl
adc
inc
stos
inc
mov
add
rorl
jecxz
add
push
mov
sbb
or
jo
jo
pop
bt
jmp
xor
loopne
dec
popw
inc
call
mov
push
xlat
adcl
or
add
add
fimuls
or
dec
popa
addb
inc
sti
imul
xchg
add
pop
add
mov
int3
and
mov
nop
rorb
xchg
add
call
incl
out
nop
add
movsl
out
loopne
out
aas
add
pop
out
out
roll
xor
loop
add
add
add
add
sbb
out
add
out
repz
scas
cs
addb
inc
sub
add
mov
mov
std
add
or
add
add
fistpll
pop
jmp
fwait
ret
inc
sub
dec
pop
fmuls
imul
xchg
add
push
pop
and
jae
mov
xchg
add
insl
sbb
add
out
jnp
int3
leave
xchg
int3
add
or
mov
or
jae
add
xchg
scas
add
push
out
add
dec
repnz
add
sub
xchg
int3
int3
mov
repz
sbbb
mov
and
arpl
fdivl
add
and
add
xchg
test
add
addr16
popa
lahf
add
xor
cwtl
inc
lea
outsl
call
jge
mov
int3
add
fdivrl
movsb
call
pop
add
add
mov
add
inc
adc
ret
adc
add
pop
in
dec
add
insb
idivb
test
icebp
aad
add
add
repnz
fs
jo
or
and
push
mov
cmp
mov
and
insb
nop
jmp
ljmp
mov
push
pop
nop
push
sti
jnp
nop
pop
and
mov
mov
or
sub
add
int
mov
add
push
cmpl
add
jo
dec
cmp
add
add
adc
sbb
loope
lcall
push
sti
int3
lea
int3
pop
stos
add
decl
add
int3
lea
nop
inc
add
jae
mov
jmp
mov
sub
add
mov
push
jbe
sub
jge
out
mov
push
dec
push
aad
add
cmp
add
sub
in
inc
int3
adc
mov
push
and
fcompl
lahf
call
aad
mov
xchg
dec
jle
mov
out
sbb
adc
add
sub
inc
pop
loope
sahf
dec
int3
testl
push
or
inc
jmp
add
xor
imul
pushf
ret
bound
nop
int3
ss
negl
addb
test
push
add
lds
jg
add
stc
xchg
add
sub
xor
push
arpl
out
or
int3
mov
add
pop
push
xchg
pop
orb
test
std
xchg
outsl
sub
push
sahf
inc
mov
mov
jmp
dec
cld
add
mov
sub
mov
add
cs
incl
jecxz
add
add
out
out
std
add
addl
setnp
rolb
add
add
std
out
aaa
ljmp
jmp
data16
cmovno
test
nop
jo
mov
add
fists
dec
dec
mov
int3
add
lock
shlb
rclb
stc
mov
pop
sarl
add
out
cmc
aad
orl
mov
mull
test
subb
inc
nop
cmpsb
sbb
inc
add
xor
out
cli
add
mov
add
add
bound
rcrl
mov
dec
pop
jecxz
mov
hlt
cmpsl
xor
pop
adc
aad
add
add
sbb
aas
in
add
sub
mov
shl
push
add
into
jge
mov
pop
nop
add
push
aam
repnz
mov
push
jbe
addb
fwait
add
add
add
lcall
fbld
stos
int3
cmpsb
loopne
and
insl
pop
and
xor
adc
mov
cmp
out
rol
jb
or
movups
ljmp
add
lock
popf
int3
dec
inc
add
int3
hlt
add
push
mov
or
mov
push
push
add
out
xor
aad
add
jmp
data16
nop
in
mov
sbbb
jmp
add
sub
jecxz
and
add
aam
sbb
jb
mov
dec
lea
jb
add
out
mov
mov
cmp
cmp
mov
lret
dec
nop
add
xor
int3
mov
push
popa
add
and
push
pop
mov
cltd
xchg
insl
mov
jb
mov
push
test
dec
xlat
cltd
push
mov
sbb
aad
add
leave
lods
nop
add
inc
test
js
add
mov
nop
push
inc
sbb
sub
or
call
inc
xchg
add
cmp
je
iret
add
adc
jb
cltd
aas
jmp
pop
mov
dec
filds
add
rclb
pop
lea
dec
add
inc
lock
popf
lret
add
cld
scas
cs
cld
add
adc
out
std
add
out
cld
out
add
out
cmp
mov
sub
outsl
pop
std
add
out
aas
pushl
data16
out
pop
cld
out
imul
out
out
cmp
cld
ds
shl
dec
out
std
cmp
add
mov
add
out
lahf
out
out
pop
mov
out
rcrl
out
cld
loop
out
add
out
add
jg
inc
pop
int3
fucomp
inc
inc
cmp
daa
cs
pusha
add
ljmp
mov
xchg
loope
add
inc
jg
cmp
scas
ret
add
in
and
add
dec
push
nop
add
xor
mov
aaa
fldln2
add
jmp
push
mov
sahf
push
sbb
in
inc
int3
nop
out
dec
push
push
mov
mov
mov
add
xchg
sub
inc
inc
pusha
out
imul
sbb
imul
xor
jle
subb
sbb
add
add
mov
cmp
xor
ret
mov
push
pop
clc
int3
sahf
addl
cmp
out
ret
cs
add
push
lahf
jo
or
and
mov
call
add
in
and
xchg
mov
pop
pop
scas
stos
icebp
add
push
jno
jg
or
mov
jo
ds
ljmp
int3
fwait
xchg
jnp
pop
add
jmp
call
jmp
loopne
ja
sbb
stc
int3
add
sbb
jo
vpshuflw
lea
inc
test
insl
mov
add
out
sbb
fsub
or
push
ficoml
fldl
add
mov
add
add
int
dec
lock
aaa
jmp
xor
stc
add
push
xor
add
adc
ljmp
inc
dec
stc
mov
ljmp
and
shrl
jle
int3
jo
in
inc
mov
and
fidivrs
lods
xor
inc
call
and
shll
aad
test
xchg
stos
and
lea
adc
addb
xor
aam
add
xchg
fisubrl
int3
or
add
fldl
test
jae
sub
jo
jne
jbe
in
jne
inc
add
mov
int3
lea
fbld
push
or
adcb
cmp
mov
call
add
sub
mov
sahf
pop
and
push
repnz
pop
int3
int3
ljmp
faddl
push
popa
push
arpl
nop
mov
cmpl
add
loop
dec
mov
add
xchg
data16
add
add
test
dec
mov
and
add
inc
in
addb
pop
lea
fldl
add
pop
xchg
les
loope
xlat
call
movb
mov
add
pop
fldt
cmp
loope
push
and
mov
lcall
je
call
call
iret
lds
xchg
and
inc
mov
int3
add
pop
and
adc
push
add
movsb
mov
int3
add
pop
mov
push
pop
add
push
adc
pop
mov
lea
bound
ret
and
and
int3
gs
mulb
dec
jae
lea
gs
add
mov
addl
xchg
add
pop
lock
mov
in
sbb
clc
sub
scas
aam
inc
stc
insb
sbb
add
sub
iret
mov
shrb
cmp
mov
push
push
jo
sti
rorl
inc
icebp
mov
xor
out
add
add
cmpsl
roll
lahf
addb
inc
jge
or
sbb
bswap
clc
xlat
inc
icebp
jo
mov
call
mov
add
cmpsl
mov
lcall
and
lds
mov
int3
jl
pop
inc
adc
inc
add
sub
jo
adc
testl
mov
add
mov
loop
cmpb
mov
add
sub
pushf
fiaddl
js
adc
xor
gs
add
jg
ja
add
add
and
int3
add
dec
xchg
add
shll
std
scas
or
gs
add
mov
push
jae
add
xor
bnd
xor
je
jbe
xor
xlat
add
stos
xchg
lcall
add
jg
jo
outsl
cmp
add
nop
insl
dec
ror
enter
add
test
xchg
add
add
cmp
int3
mov
jge
xchg
jo
leave
mov
add
dec
dec
aaa
add
add
cmp
nop
add
ficompl
nop
xor
sar
xor
jnp
add
data16
add
test
adc
add
hlt
or
cmp
xor
add
pop
enter
aam
add
cli
cmp
inc
mov
mov
jg
and
mov
add
outsb
xlat
add
add
xchg
adc
mov
lret
and
scas
xchg
leave
test
mov
mov
test
add
sub
jle
int3
nop
fiadds
cmp
jo
add
addr16
fcoms
aaa
js
cltd
test
subb
les
orb
clc
hlt
sbb
pop
lea
stos
or
and
inc
mov
cmp
mov
sbb
sub
int3
adc
xchg
aas
mov
mov
mov
call
aaa
out
std
ljmp
aas
out
add
add
add
xor
aaa
add
lretw
out
add
shrl
out
add
std
sarl
add
out
loopne
xor
sub
cld
out
jns
out
out
fadds
add
data16
add
pavgb
and
mov
add
movntq
out
mov
out
data16
cmp
test
cld
shl
aad
add
add
add
add
add
inc
movsl
lret
sti
mov
jne
in
inc
and
cmpsl
jae
add
pop
lods
xchg
movsl
inc
rcrb
popf
testl
and
add
sub
xchg
filds
xlat
push
pop
pop
pop
add
push
hlt
cmp
pop
call
inc
int3
mov
ret
ja
flds
push
orb
jo
xor
mov
add
cli
sub
ds
add
jecxz
stos
mov
out
jmp
repnz
lea
inc
call
and
fiaddl
mov
xor
in
mov
lahf
popf
add
ror
add
add
push
sub
mov
nop
add
mov
add
fidivs
lea
pop
and
mov
fdivs
add
pop
add
add
pusha
addb
cwtl
and
cwtl
jp
pop
mov
add
imul
outsl
insb
cmpsl
push
out
int3
add
sbb
in
add
stos
cli
stc
insl
add
dec
mov
xor
sub
mov
mov
das
pusha
adc
test
jge
add
andb
dec
cmp
add
adc
in
data16
add
add
xor
pop
ss
repz
out
cs
add
mov
mov
fistps
lea
and
out
and
outsb
add
add
ss
xchg
inc
mov
inc
add
mov
push
nop
add
push
pop
jne
lds
subb
add
ljmp
fwait
add
add
sub
adc
mov
dec
aad
mov
js
mov
mov
jb
mov
adc
adc
test
jecxz
pop
fdivs
popf
das
xchg
int3
add
fwait
sbb
add
add
outsl
rolb
pop
lret
testl
jle
xor
dec
mov
xor
adcb
pusha
inc
filds
xchg
pushf
push
add
push
push
push
add
sarl
mov
test
xchg
loop
jle
fwait
add
lahf
sub
pop
add
lret
test
mov
xor
pop
add
int3
nop
adc
xor
inc
cwtl
addr16
call
scas
add
or
in
ror
xor
movsb
stc
adc
int3
sbb
push
or
push
int3
add
fldcw
jp
int3
add
lea
jne
xchg
push
ficoml
xchg
test
pop
out
loopne
add
pop
stos
int3
pop
xchg
adc
jb
inc
mov
adc
sbb
sub
cmp
sub
int3
mov
mov
mov
loop
add
add
insb
aaa
pusha
mov
fcmove
sbb
es
flds
test
push
add
cmpsb
jo
movsb
jecxz
pop
inc
add
nop
fwait
loope
add
test
add
popa
out
leave
pop
jne
add
mov
jecxz
stos
nop
inc
into
loop
push
pop
mov
out
xchg
mov
fcmovne
add
jo
out
pop
add
inc
pop
cwtl
testl
mov
stc
loopne
add
jae
nop
add
int3
adc
movsl
inc
sub
add
or
lods
test
inc
jo
nop
cmp
mov
les
ret
adc
push
int3
ret
cli
xor
int3
add
add
out
out
lea
rolb
cmp
mov
mul
add
sub
lret
pop
push
jnp
push
add
mov
jo
jno
jns
int3
mov
lea
js
scas
or
cli
xor
addb
mov
je
mov
iret
lahf
add
push
xor
add
or
shlb
sbb
insb
xor
jmp
adc
jge
add
inc
and
out
inc
fs
aas
cmp
inc
dec
add
dec
nop
subb
mov
and
in
dec
add
add
popf
ja
movl
add
mov
cmpb
test
add
mov
xor
add
lret
adc
dec
sbb
rcrb
outsl
cs
pop
push
add
xchg
cmc
ret
xor
hlt
cli
push
int3
inc
das
int3
mov
leave
push
sbb
lea
pop
in
add
nop
add
or
leave
aam
mov
data16
sahf
loope
mov
int3
mov
dec
or
mov
inc
incb
sub
sub
jo
mov
add
mov
jo
inc
movsb
add
ret
add
add
imul
int3
cmp
addb
xchg
jp
dec
mov
clc
jge
pop
mov
movsl
xchg
mov
cli
fildl
mov
jno
sti
mov
or
push
add
mov
les
jmp
add
dec
aaa
xlat
inc
ss
and
jne
lods
add
hlt
loopne
arpl
add
inc
add
add
loop
mov
addb
ss
add
arpl
cmp
inc
clc
std
test
std
outsb
out
add
cmp
out
cld
fwait
add
xor
out
add
add
add
out
pop
insb
add
std
clc
out
out
out
add
dec
out
shll
std
jmp
mov
add
add
fdivr
data16
add
add
shl
add
scas
add
cmp
out
sbb
out
out
std
mov
out
std
cmp
std
out
out
mov
and
add
cmp
sbb
xor
add
insl
adc
fs
ds
aas
int3
cmpb
popw
xchg
mov
inc
add
add
aaa
add
xor
addb
scas
sbb
mov
add
mov
mov
je
mov
int3
jo
jle
fldl
int3
sub
sub
push
mov
int3
add
scas
int3
add
add
mov
mov
jne
cwtl
jno
movsl
mov
xchg
push
imul
pop
test
add
cmp
loop
xorb
in
sbb
add
clc
adc
add
xorb
mov
sahf
sbb
int3
sbb
xchg
jmp
xor
xchg
pop
data16
lods
add
push
inc
sbb
xchg
add
sbb
lock
sbb
sahf
scas
fisttps
in
inc
dec
or
aad
and
add
sub
out
inc
movsb
inc
nop
and
leave
adc
xor
mov
ja
sti
ret
mov
sub
test
sub
push
add
ret
or
cmp
call
nop
lahf
and
int3
out
in
pop
movl
mov
int3
adcb
nop
mov
mov
sub
add
mov
adc
leave
xchg
test
xchg
jnp
incb
std
sub
inc
add
xchg
cmp
cltd
repz
mov
mov
pop
xchg
call
add
mov
jo
rclb
cltd
mov
int3
pop
inc
dec
mov
mov
pop
test
mov
aas
out
mov
sbb
add
mov
decl
lahf
add
and
mov
xor
iret
sub
jo
aam
mov
add
int3
add
or
mov
cmpsl
push
sub
xchg
lahf
and
push
add
imul
fcomip
xorl
adc
je
mov
or
add
push
adc
add
or
add
inc
xor
and
add
cli
fsubrl
sbb
mov
and
lcall
jle
and
int3
add
add
inc
fimuls
call
std
push
out
jmp
push
mov
mov
pop
cmc
sbb
shrl
jno
nop
repz
sub
add
aad
add
mov
xchg
pop
add
ja
pop
push
sub
pop
add
notb
xchg
mov
loop
jae
inc
fprem1
adc
mov
dec
stos
ret
movsl
add
stc
rcr
xor
jo
push
testb
int
mov
and
ss
add
add
sbb
scas
mov
fst
shl
add
cmp
xchg
add
jno
pusha
mov
jp
and
call
jnp
insl
fldt
jo
inc
dec
mov
sub
pop
sub
jmp
mov
jo
xor
enter
dec
add
outsb
mov
cltd
add
call
cmpsb
cwtl
add
repnz
scas
int3
les
jmp
sub
sbb
fs
jns
nop
add
sub
jge
nop
jne
mov
roll
roll
imul
nop
mov
dec
mov
lahf
add
arpl
adc
xchg
cmp
ret
add
or
add
aad
inc
add
jns
mov
addb
and
and
stc
aas
loop
add
xchg
cmp
fsub
sub
xorb
mov
in
repz
jb
test
push
mov
or
imul
mov
int3
xorb
cmc
cs
mov
scas
cmc
jo
inc
pxor
and
pop
les
xor
add
mov
sub
adc
mov
scas
mov
loopne
lea
aaa
push
mov
adc
mov
lea
push
sti
sub
daa
mov
mov
mov
lret
mov
out
fstps
nop
jne
push
push
repz
bound
mov
jb
add
inc
hlt
add
add
in
andb
xchg
in
loopne
nop
out
mov
add
pop
push
inc
add
mov
scas
mov
add
out
add
les
rclb
add
ljmp
out
mov
data16
pavgb
movntq
out
out
out
out
out
clc
lcall
test
inc
std
add
out
sub
out
cld
shrl
aad
add
out
add
add
add
xor
int3
and
cmp
fwait
inc
int3
iret
push
hlt
shlb
jp
sbb
adc
and
cmp
outsl
sub
rcrl
mov
add
fabs
mov
stc
rcl
sbb
int3
ljmp
icebp
cmp
sti
stos
add
jg
pop
pop
or
add
das
push
repz
lahf
fcompl
or
or
push
pushf
jne
add
repz
pop
ja
adc
in
scas
mov
dec
dec
add
or
je
add
mov
nop
mov
add
sahf
adc
test
add
nop
add
aam
mov
jo
mov
cwtl
popf
std
dec
push
int3
pop
in
js
nop
add
mov
insl
xchg
int3
daa
fcom
sbb
inc
cmp
push
add
push
inc
nop
rol
mov
sbbb
aaa
ljmp
cmp
cmpsl
jl
int3
push
add
popa
pushf
mov
mov
fldt
mov
pop
sbb
out
mov
dec
add
jb
sub
add
hlt
int3
and
add
mov
arpl
nop
add
dec
scas
add
sbb
push
mov
into
add
sbb
add
add
xor
rcr
or
and
mov
or
pusha
mov
add
sahf
insl
bound
outsb
add
int3
mov
call
in
add
std
pop
dec
lea
add
mov
nop
adc
dec
add
mov
mov
imull
nop
mov
lds
int3
shlb
add
add
xor
push
and
fwait
dec
int3
popa
stc
rcll
int3
int3
sahf
fistpll
add
and
dec
push
sub
add
add
rcll
pop
sub
inc
inc
repnz
or
mov
sbb
int3
and
cmp
lods
in
mov
pop
or
or
mov
mov
nop
add
leave
daa
fisubrl
and
fsubl
add
lea
cld
jp
lea
gs
and
mov
pop
or
mov
fld
js
add
inc
add
mov
inc
or
mov
add
aad
icebp
nop
pop
adc
jo
divl
add
and
push
dec
or
nop
sbbb
mov
jb
cmp
addb
adc
cmp
xchg
pop
add
lods
cmpsl
lea
pop
add
lret
fisubs
push
jo
roll
mov
sbb
pop
nop
add
or
decb
cltd
mov
or
int3
mov
outsl
leave
pop
add
inc
sub
nop
cmpsl
movsl
pop
mov
addb
dec
xchg
cs
mov
mov
in
add
dec
cmp
add
dec
add
xor
cmp
add
adc
loope
nop
add
inc
cmpsb
call
call
or
in
add
add
mov
inc
pop
fidivrl
mov
lods
fs
xlat
mov
pop
nop
mov
lret
xor
loop
addr16
add
ljmp
xchg
mov
dec
sbb
sahf
ret
fistl
cld
pop
lret
add
xchg
addl
outsb
lea
jmp
and
push
add
push
nop
and
sub
nop
add
cmp
mov
add
sbb
out
bound
add
push
daa
xor
les
add
lcall
test
and
test
mov
or
add
inc
and
cmc
mov
sub
add
mov
add
notb
int3
out
inc
nop
and
add
adc
add
jb
mov
out
repnz
add
mov
arpl
dec
aas
add
add
or
shl
xor
mov
dec
add
add
push
out
nop
add
cs
add
cld
xor
std
lret
add
out
or
std
cltd
cs
std
out
mov
add
std
loopne
cld
out
xchg
shl
inc
out
inc
outsl
jae
push
out
roll
pop
add
out
repz
mov
imul
pop
add
fadd
loope
mov
out
push
addb
nop
sub
xor
add
or
lahf
call
data16
fimuls
jnp
add
imul
add
sub
enter
int3
sbb
push
xchg
add
xor
push
imul
push
jecxz
add
add
adc
nop
xlat
inc
and
and
popa
out
add
xchg
jp
or
xchg
inc
add
cmp
into
and
icebp
in
inc
cmc
fadds
nop
fsubrp
push
outsb
inc
sub
cs
nop
and
mov
add
dec
jg
add
jle
int3
push
mov
cmp
add
xchg
add
addr16
lock
add
lahf
ss
add
call
movb
aas
inc
pop
movb
test
add
jo
adc
pop
jmp
push
and
jecxz
sbb
pop
lea
jns
mov
mov
push
ja
and
add
or
jmp
add
int3
ss
out
nop
mov
add
jnp
decl
clc
add
stos
adc
fnsave
andb
and
data16
mov
mov
stos
push
into
dec
mov
and
inc
mov
cwtl
sarl
test
sbbb
cmc
int3
dec
sub
mov
xchg
sub
dec
mov
or
inc
add
inc
push
inc
push
xor
push
add
pop
nop
int3
push
sbbl
mov
or
adc
jo
imul
fwait
cmovno
roll
pushf
out
insl
cmp
add
mov
into
mov
sbb
lea
xor
mov
rcr
and
xchg
mov
add
or
jnp
jmp
int3
add
xlat
xor
add
mov
add
ds
add
xor
test
and
mov
subb
out
jo
repnz
aas
xlat
int3
inc
movsl
xchg
push
je
mov
popa
pop
fcomi
push
push
add
int3
add
adc
mov
mov
add
cmc
call
into
push
nop
mov
int3
add
add
jo
sbb
inc
ror
fnsave
hlt
mov
dec
shll
insb
jo
int
adc
fsubrl
mov
insb
or
incl
add
dec
or
orl
cmpb
adc
mov
add
cmp
push
xchg
add
add
ror
sahf
call
mov
mov
cmp
xchg
out
int3
add
push
add
sahf
sub
sub
add
aad
bnd
sbb
add
push
and
pushf
mov
sbb
push
iret
incb
sbb
push
xchg
pop
mov
mov
int3
ror
cmpsb
data16
mov
lcall
mov
add
in
inc
pop
add
push
sub
add
out
and
jg
add
sub
mov
test
fisubl
xor
loope
daa
and
clc
int3
mov
and
cwtl
sbb
pop
jo
scas
icebp
jae
push
lea
push
or
add
int3
shl
cld
std
out
data16
out
inc
out
add
out
out
out
add
add
ljmp
aas
aas
aaa
incl
out
add
dec
cs
xchg
out
lahf
out
std
out
std
out
add
add
into
xchg
loopne
ds
out
xor
out
out
ss
add
add
test
dec
out
out
cmp
jns
pop
out
add
cmp
add
add
mov
out
pop
add
cld
cmp
cld
sbb
mov
xor
pop
add
cld
out
lcall
add
cltd
out
and
mov
loopne
cmp
scas
test
xor
data16
add
out
add
cmp
mov
out
aad
pop
std
lea
std
fcoms
loop
dec
out
add
lret
mov
std
out
out
std
add
cmp
cld
add
std
jmp
add
add
std
call
out
std
add
lret
loopne
add
cld
add
aas
out
aad
ss
ds
jmp
dec
out
cld
add
add
dec
add
out
out
out
dec
add
std
fwait
pop
out
cmp
mov
add
out
and
pop
roll
cld
incl
nop
out
dec
fsubrs
out
aas
pushl
cld
xchg
loopne
out
cld
data16
pop
std
add
out
out
loopne
sbb
shrl
cmp
inc
add
fdivr
add
add
add
cmp
add
aaa
scas
pop
add
data16
cltd
out
jnp
xor
add
lahf
xor
call
add
out
cld
add
sarl
cs
out
add
cld
cmp
pop
out
add
incb
sarl
cmp
add
mov
fsubrl
out
out
movsb
cmp
add
add
inc
add
out
cld
xchg
cld
out
std
out
cmp
cld
add
cmp
out
outsl
out
add
out
add
jns
out
roll
roll
out
xor
and
add
out
mov
shl
out
out
cmp
out
jmpw
std
add
out
out
loopne
add
out
pop
pop
add
stos
adc
stos
out
out
out
cld
lods
sahf
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
decl
inc
mov
push
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
adc
add
add
add
add
add
js
inc
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
add
inc
add
add
add
outsl
inc
add
add
add
outsb
inc
add
add
add
add
jl
inc
add
add
add
add
add
add
inc
add
add
in
inc
add
insl
inc
add
add
xor
add
add
and
add
add
adc
add
add
add
add
cld
insb
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
incl
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
cmp
add
loopne
add
add
add
add
add
add
add
add
inc
add
add
add
add
mov
inc
add
incb
push
fldl
ds
inc
add
add
stc
inc
add
inc
add
testl
mov
testb
add
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
add
add
add
add
add
add
ja
add
jns
add
loopne
add
add
add
inc
add
inc
add
inc
add
inc
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
jl
add
inc
add
inc
add
inc
add
inc
add
inc
add
jl
add
add
add
inc
add
add
add
inc
add
inc
add
inc
add
jl
add
inc
add
jl
add
inc
add
jl
add
jnp
add
add
add
add
add
add
add
add
add
mov
inc
add
mov
inc
add
mov
inc
add
jg
jg
jg
jg
loope
add
add
add
add
add
icebp
incl
add
add
push
add
push
add
loope
add
loop
add
incl
add
add
add
add
incl
mov
add
add
add
add
add
add
add
add
cli
or
add
add
add
add
or
push
ret
cmovo
add
add
add
add
adc
add
add
add
adcb
add
add
add
mov
add
add
add
leave
sbb
add
ret
inc
and
sahf
mov
sub
inc
rcrb
and
sbb
addl
xlat
xchg
inc
push
add
inc
stc
mov
adc
mov
decl
js
roll
loopne
jmp
xchg
test
mov
cmp
inc
mov
popf
sti
jmp
stos
push
inc
mov
repnz
test
pop
stos
clc
scas
adc
inc
jmp
aam
imul
loope
jp
iret
inc
gs
xchg
push
cmpsb
scas
mov
or
addl
cmpsl
xchg
cmp
xor
dec
cmpsl
in
cmp
sahf
xchg
pop
lcall
lock
mov
popa
sar
mov
fsubs
stos
xchg
clc
repz
mov
subb
fwait
xchg
and
and
add
int3
int
int3
int3
int3
int3
int3
int3
sti
aas
jno
or
mov
mov
cmp
dec
lea
aas
ret
shrl
mov
icebp
aas
rorb
and
cmpsl
out
aas
inc
cmpsb
mov
insb
scas
add
aas
xor
aad
mov
std
std
into
popa
test
ja
stos
in
das
dec
pop
loope
les
aas
xchg
les
jne
int
mov
addr16
push
mov
xchg
aas
and
loop
mov
jp
popa
push
pop
sarl
jl
mov
das
lea
mov
inc
aas
and
movsl
jmp
jg
sub
jge
mov
inc
rcr
push
arpl
int3
and
call
cmp
jp
and
cmp
mov
cmp
std
xlat
cmp
mov
sbb
add
movb
aaa
fldt
cmp
jno
shlb
out
dec
nop
pop
cmp
fisubl
xor
push
lahf
inc
pop
mov
sub
dec
in
ss
push
scas
into
imul
faddp
jge
call
mov
xchg
cmp
push
andl
dec
dec
gs
std
orl
in
ficomps
frstor
lcall
add
add
add
add
add
js
add
xchg
add
add
add
add
add
add
add
add
add
add
add
insl
add
add
lcall
add
add
add
add
add
ja
add
xchg
add
add
add
repnz
add
add
add
add
add
add
insb
add
add
add
mov
add
adcb
add
cmp
add
add
add
push
add
push
add
addb
add
add
add
push
add
add
add
add
add
add
add
add
ret
add
push
dec
add
mov
add
call
add
add
add
add
add
inc
add
dec
add
inc
add
call
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
inc
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
and
add
add
xor
xor
xor
xor
xor
xor
bound
xor
add
xor
or
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
dec
add
ja
and
add
imul
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
add
add
jb
outsl
add
jo
add
add
sub
add
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
and
test
add
add
add
add
add
add
add
add
add
and
add
imul
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
push
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
add
insl
add
add
js
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
add
add
jb
outsl
add
jo
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
jmp
push
cltd
out
add
cld
cs
out
add
add
out
dec
add
cltd
sbb
out
out
out
out
out
out
add
out
cmp
call
add
dec
movsb
pop
cmp
data16
jmp
xchg
std
out
out
out
add
cmpsl
inc
incl
cld
out
out
test
rol
dec
incl
out
add
lcall
out
lcall
insb
add
jno
add
mov
dec
ja
add
pop
adc
clc
add
pop
mov
add
add
xchg
cltd
xchg
add
inc
cmp
out
nop
nop
orb
cld
iret
int3
xor
mov
mov
add
cmp
add
faddl
int3
add
push
fwait
pop
add
daa
sub
xor
leave
lret
cwtl
mov
insl
mov
inc
jp
mov
rorb
cmpsl
sub
dec
inc
aam
cmp
or
mov
pusha
jne
nop
add
mov
int3
pop
movsb
xor
sahf
cmp
dec
push
and
add
inc
sbb
xchg
add
lea
xchg
rcrl
add
add
xchg
or
xor
mov
and
add
repz
nop
add
imul
inc
pop
sbb
mov
cmpsb
xchg
nop
mov
int3
mov
sarl
mov
test
notl
sahf
dec
roll
fstps
leave
add
and
inc
hlt
adc
fadds
add
xor
add
jg
sub
add
push
dec
call
inc
dec
lahf
nop
add
call
fcoml
aaa
adc
push
pop
xchg
add
test
add
mov
out
ja
sahf
add
push
stos
pop
add
aas
cmp
sub
add
push
loope
mov
mov
push
sti
cmp
add
test
cld
mov
pop
lds
add
stos
mov
mov
ljmp
gs
add
push
adc
mov
add
mov
rorl
add
in
xor
insb
popf
mov
cmp
and
int3
xchg
out
loopne
pop
add
jae
mov
or
xor
inc
jge
incb
xor
add
jp
mov
add
dec
movl
fwait
add
jmp
mov
aas
cmpsl
dec
mov
insb
insb
lock
add
add
stos
xchg
add
dec
inc
sbb
add
movsb
add
and
loop
add
dec
add
pop
nop
mov
dec
inc
cmp
loop
xor
sbbb
negl
add
addw
aaa
outsb
pop
inc
add
mov
mov
aaa
xchg
inc
add
push
inc
or
adc
ret
cmc
add
pop
fidivrl
mov
pop
filds
decb
outsb
stc
jns
xchg
mov
add
dec
jmp
gs
loope
call
lea
dec
pop
add
fadds
inc
xor
add
addr16
lret
ja
sub
mov
xchg
add
xor
lea
int3
and
adc
nop
sbb
fisubrs
xor
xchg
inc
inc
cmp
nop
add
pop
mov
aad
lret
mov
add
and
loope
jb
adc
call
xlat
nop
jb
sbb
or
test
shl
add
imul
adc
in
repnz
jb
push
sub
xchg
sub
cmc
nop
push
add
pop
push
mov
inc
adc
int3
out
sbb
nop
xchg
cmpl
add
ucomiss
rorb
xor
outsb
add
dec
loopne
jne
mov
mov
iret
pop
inc
pop
dec
adc
nop
popa
xchg
addb
pop
jno
add
add
mov
jne
pop
sbb
adc
popa
inc
sub
add
pop
nop
rcr
les
lods
xor
mov
mov
mov
in
add
add
scas
push
rcl
insb
inc
add
addb
in
mov
sub
xor
add
push
inc
fucomip
call
mov
xlat
aaa
mov
movsl
pop
push
popf
jo
adcl
pop
movsb
enter
fucomi
imul
add
addr16
add
out
or
pop
push
jnp
add
adc
lea
js
int
inc
dec
xor
out
dec
xor
add
add
add
sbb
pop
int3
nop
cmpsb
mov
mov
aaa
out
call
int
mov
xchg
and
mov
or
testb
jg
mov
xlat
add
and
add
ljmp
pop
stc
outsl
mov
inc
add
push
out
imul
xchg
jns
rolb
in
push
xchg
mov
std
out
cld
cmp
aam
out
data16
add
add
std
inc
test
add
dec
out
add
int
add
idivl
into
jae
test
rolb
add
popa
movb
xchg
add
cmc
pop
neg
lea
es
inc
add
add
mov
push
mov
jb
xor
icebp
loopne,pt
add
shlb
sub
fucomip
mov
and
loopne
add
test
push
inc
and
lret
inc
nop
inc
test
fsubs
sub
cmp
mov
scas
lret
nop
add
ljmp
and
adc
adc
cmp
adc
add
inc
cmp
mov
fwait
mov
add
clc
add
leave
in
add
pop
dec
stos
dec
add
cwtl
test
xchg
push
add
int
inc
adc
inc
jl
cmp
mov
inc
xchg
aam
popf
mov
int3
enterw
addb
adc
and
and
sti
lret
cld
xor
and
sbb
inc
int3
jae
lret
mov
cltd
lock
cld
add
sbb
add
sbb
stos
mov
add
or
inc
int3
sti
and
mov
jl
xor
add
sub
pop
incl
add
mov
mov
shl
xor
cmp
stos
test
cmp
inc
int3
mov
add
add
adc
xor
push
mov
or
out
jmp
in
push
sbb
cmp
lea
call
pop
lds
xor
jo
movsb
rclb
lret
or
addl
int3
mov
xor
hlt
mov
jnp
incl
int3
stos
sbb
inc
cmp
shrb
aaa
pop
loopne
out
mov
out
ss
cmp
lea
push
add
add
out
std
cld
fdivr
xchg
lret
std
add
xchg
cltd
out
std
mov
cs
jmp
add
add
out
xor
out
out
add
push
pop
adc
sahf
push
inc
lea
jb
dec
or
pop
add
scas
mov
pop
add
add
mov
mov
sti
add
repz
pop
cld
daa
rclb
dec
cli
pop
add
mov
cld
nop
loop
setle
adc
movsb
mov
dec
add
jge
mov
mov
lea
pop
add
add
pop
cld
stc
inc
sbb
mov
xor
mov
mov
xchg
xor
mov
je
ret
adc
xchg
int3
lea
aas
jae
addl
cmp
int
lahf
mov
icebp
test
push
lock
dec
int3
pop
inc
add
inc
dec
movsl
insl
cmp
add
fsts
push
into
ljmp
add
xor
sub
call
or
jnp
nop
movsl
aam
fisubs
jbe
int3
sbb
scas
divb
jge
add
add
call
add
mov
sbb
dec
jge
adc
adc
out
add
int3
sbb
call
mov
xchg
inc
add
jo
insl
and
and
add
dec
push
sbb
pop
in
pop
nop
nop
jnp
cld
xor
pushf
and
leave
mov
cli
add
loopne
add
fdivrl
movl
outsb
daa
jo
loopne
push
inc
int3
shll
lret
int3
push
out
icebp
add
fcoms
ss
dec
xchg
or
inc
es
mov
cmp
dec
sbbb
call
cli
inc
push
add
add
or
sub
lahf
or
nop
pop
adc
dec
xor
int3
sub
sub
add
insl
and
lea
imul
adc
outsb
add
inc
add
jle
arpl
scas
nop
int3
add
and
enter
add
sbb
inc
jp
add
scas
mov
filds
std
or
mov
nop
nop
cmc
xchg
pop
ss
add
out
add
mov
incb
in
mov
ljmp
lret
aam
stc
arpl
mov
in
jb
add
mov
inc
int3
inc
lea
mov
xchg
inc
nop
mov
nop
mov
sbb
add
or
add
gs
add
test
roll
and
add
cmp
lret
mov
pop
insl
add
add
aam
add
mov
add
push
mov
xor
add
mov
into
shll
xchg
xor
ds
test
xchg
outsl
mov
jbe
cmpsb
fcoms
idivl
add
and
mov
add
push
mov
xor
add
add
xor
nop
movsb
jo
testb
inc
mov
jae
test
jbe
loope
add
mov
jnp
out
add
decb
adc
sub
add
pop
mov
mov
add
xchg
add
and
mov
sti
sub
lret
lods
lods
or
int3
cmp
sub
mov
add
mov
add
out
mov
out
add
add
out
add
mov
add
ljmp
dec
pop
nop
add
pop
and
cld
loop
pop
cld
out
xchg
dec
and
xor
std
aas
out
and
out
ljmpw
fwait
cmp
pop
add
cld
add
movsb
mov
or
pop
inc
call
out
add
xchg
hlt
jl
pop
sub
mov
inc
pop
add
dec
cmp
add
int3
sbb
push
pop
pop
push
pop
int
add
inc
icebp
add
add
insb
add
cmp
add
es
xor
jecxz
xchg
popf
add
push
add
mov
dec
shlb
mov
mov
pop
call
xchg
add
jae
into
add
and
lea
cmp
flds
ret
dec
nop
add
push
cmc
pop
clc
add
xor
imul
jnp
insl
int3
add
out
std
lahf
nop
je
sbb
fucomi
add
jmp
mov
nop
and
clc
lcall
and
add
insl
jmp
ljmp
dec
xlat
add
add
pop
rolb
mov
arpl
ret
jb
push
fstpl
jg
add
inc
nop
mov
jbe
or
mov
cmp
pop
int3
or
dec
mov
stos
scas
mov
cmp
aaa
xchg
add
add
ds
call
addl
movsl
nop
inc
fstpl
pop
cmpsb
dec
add
jnp
dec
add
adc
aaa
int3
add
lods
jnp
xor
mov
aad
mov
in
add
add
adc
cs
call
pop
cmpsb
add
add
jmp
add
lods
sbb
scas
addb
insb
cmp
mov
test
xor
das
mov
mov
add
xor
dec
icebp
add
xor
daa
testl
xor
icebp
ja
dec
add
dec
inc
mov
gs
mov
add
mov
add
xchg
loope
add
pop
mov
mov
nop
mov
cli
stc
add
xor
pop
dec
int3
cmpsb
cmpsb
sbb
sub
add
mov
and
fs
hlt
repnz
mov
dec
push
push
rcl
inc
cmpl
lea
int
pop
push
nop
mov
ss
mov
pushf
push
xor
int3
jo
sub
lea
xor
dec
rolb
orb
sbb
mov
mov
rcll
cmp
sbb
inc
fsts
mov
int3
dec
hlt
add
pop
pop
push
data16
add
notb
call
mov
int3
mov
add
stc
cmpsb
in
jl
lret
sbb
dec
out
test
add
sti
and
scas
add
out
xchg
imul
nop
jnp
fisttpl
add
push
shr
nop
jmp
add
sub
inc
jle
mov
nop
inc
out
shrb
mov
jno
mov
test
fadds
shlb
xor
cmp
jb
xchg
jne
add
insb
mov
jle
inc
int3
cld
inc
cmp
add
clc
xchg
add
dec
xchg
or
jnp
sarb
ret
cmp
mov
xlat
jge
loop
add
int
ret
ja
xlat
sbb
adc
mov
lret
add
mov
add
mov
cmpsb
test
xor
cltd
xlat
add
pop
push
int3
sbb
jne
add
push
js
add
out
in
dec
inc
jb
jecxz
cmpsb
loope
jo
sahf
xor
vpcomb
cmpsl
jb
incl
add
mov
pop
pop
bound
int3
add
jg
das
mov
jno
jecxz
cs
and
movsl
xchg
mov
cs
into
out
cs
cs
dec
filds
add
out
add
sbb
add
lds
out
std
lret
pop
xor
out
cltd
cmp
mov
dec
out
out
out
fsubrs
add
add
out
add
add
add
add
sar
out
roll
mov
add
cmovs
aaa
pop
jmp
jmp
add
clc
clc
and
jo
call
addb
mov
add
lea
lea
daa
data16
mov
hlt
bound
cmp
jecxz
push
add
xor
push
xchg
bound
jo
adc
inc
add
add
and
add
nop
pop
mov
mov
sub
mov
daa
push
add
ficompl
and
stos
nop
fisttpl
sbb
push
nop
cmpsb
inc
negb
xchg
jns
add
xor
rolb
int3
arpl
mov
mov
inc
dec
jo
clc
outsb
jb
adc
adcb
pop
rcll
push
jle
mov
add
pop
pop
sbb
pushf
nop
adc
sub
nop
das
jo
mov
ret
fsubs
imul
jb
jo
movsl
fcmove
dec
hlt
int3
add
cmp
mov
jl
jb
add
mov
int3
add
mov
popa
sub
push
pushf
lahf
add
pop
add
jno
xor
mov
ljmp
lea
inc
cmp
cmpb
xor
movl
fildl
mov
cmp
inc
js
rclb
lahf
xor
rcll
pop
and
and
cmpb
add
sbb
jbe
add
push
arpl
in
add
add
xor
adc
mov
call
clc
cmp
add
bound
mov
sbb
add
test
clc
xchg
xchg
and
mov
mov
int3
sbb
jbe,pn
or
aaa
outsb
mov
stos
fldcw
sub
iret
out
js
and
mov
add
pusha
adc
or
repnz
aam
or
in
pop
clc
std
nop
add
imul
add
and
mov
mov
adc
leave
jo
bound
mov
out
in
add
ret
nop
or
inc
nop
cs
in
inc
add
jnp
or
add
movsb
pop
add
lea
dec
inc
add
and
lods
add
shlb
daa
mov
inc
inc
inc
mov
cmp
jae
sbb
adc
adc
mov
cmp
mov
sahf
out
push
add
add
iret
sbb
add
daa
sbb
roll
add
lcall
shll
add
int3
movsl
jge
jo
loop
mov
cmc
dec
inc
jl
jb
xor
ds
int3
dec
insl
nop
or
jo
mov
mov
mov
leave
nop
push
xor
out
xor
inc
roll
out
jns
nop
pop
arpl
mov
ds
es
popl
add
scas
popl
add
add
jmp
xchg
jmp
cmp
and
dec
inc
ficompl
xor
dec
lods
adc
cmpsl
cld
int3
int3
cmp
lock
incl
and
imul
jg
int3
pushf
mov
nop
add
insl
jp
add
in
jle
mov
add
aaa
jge
or
add
out
in
xchg
add
push
pop
inc
roll
add
jb
xor
pusha
loope
jle
or
int3
mov
mov
xchg
lea
gs
jp
jo
hlt
andb
add
or
xor
icebp
add
jb
in
ds
mov
nop
add
pop
mov
push
add
jbe
add
push
mov
arpl
arpl
into
mov
scas
mov
mov
mov
or
add
or
int3
jle
in
test
pop
add
jno
int
sub
addr16
std
add
in
mov
std
into
jnp
add
xchg
cli
jo
add
lea
mov
cltd
sub
cmp
in
out
mov
jb
sub
push
add
out
cld
add
add
mov
cmp
add
xchg
pop
out
out
incl
pop
xor
call
loopne
jns
jns
data16
sbb
out
out
lcall
call
cmp
mov
mov
sub
sahf
inc
mov
pop
aaa
outsl
inc
jb
jo
dec
and
jae
xor
data16
inc
add
sub
nop
add
call
jge
inc
aas
mov
inc
xor
ljmp
add
test
stos
in
ss
mov
add
in
inc
sub
add
mov
nop
jne
or
fs
js
inc
or
mov
add
push
imul
inc
mov
xchg
cli
mov
int3
out
jns
add
subl
int
leave
add
out
icebp
add
add
xadd
push
shrl
add
mov
add
jo
cltd
pop
lea
gs
sub
add
sub
mov
add
dec
fnstenv
aam
int3
shl
mov
enter
add
and
popa
arpl
int3
lcall
jbe
fadd
xchg
inc
mov
pop
mov
add
cs
add
out
shlb
lret
add
mov
nop
add
cli
mov
int3
inc
adc
add
lea
jl
add
jmp
sbb
add
push
stos
add
mov
add
sbb
sbb
add
int3
xor
and
xchg
adc
adc
mov
jmp
jns
popa
scas
int3
add
mov
pop
add
jb
sti
add
mov
incl
jnp
cmpsb
and
cmpsl
and
mov
add
jo
lret
jle
cwtl
add
inc
and
push
stos
movsb
lods
int3
nop
add
aas
fisttpll
add
je
push
nop
add
nop
daa
lods
or
std
nop
nop
add
pop
stos
fdivp
int3
int3
scas
stc
call
loopne
push
pop
lret
and
mov
or
stc
pop
pop
fwait
add
jge
xchg
add
lret
nop
jg
lea
mov
add
pop
fs
dec
push
add
nop
jae
in
addb
xor
jno
add
add
aam
out
mov
add
imul
lods
add
xor
add
std
cmp
inc
mov
add
mov
adc
nop
xorb
dec
add
jo
ret
xor
add
pop
push
jnp
add
add
imul
sti
add
sbb
and
cmp
rorb
into
nop
add
call
in
add
cld
insl
loop
or
fiaddl
insl
call
aaa
fimuls
loopne
int3
sbbb
and
call
jg
add
repnz
int3
cwtl
aas
or
add
ret
addl
mov
inc
fildll
push
popa
imul
add
mov
daa
std
std
outsl
jg
out
mov
lcallw
add
add
pop
cmp
lea
out
mov
add
add
add
jle
cmp
incb
out
cmp
repz
pop
nop
cwtl
mov
mov
in
mov
movsb
pop
and
bound
inc
pop
arpl
cmp
mov
adc
mov
test
int3
mov
inc
add
in
inc
popa
add
jno
push
mov
jg
aad
dec
int3
pop
add
cmp
popa
pop
lods
inc
mov
repnz
movsb
jmp
add
test
je
pop
les
lahf
lcall
cs
int3
jle
pop
mov
jle
add
cmp
cmpb
xchg
int3
insb
inc
sub
cltd
in
jno
mov
ror
adc
add
jg
nop
sti
mov
int3
lahf
mov
add
pop
xor
jo
add
inc
add
lock
mov
mov
mov
add
xorb
out
add
mov
sbbl
stos
scas
add
leave
pop
or
nop
push
repnz
add
dec
adc
mov
add
nop
into
int3
jp
int3
int3
push
push
popa
xor
jl
add
jbe
incb
in
and
pushf
or
xorb
lock
setae
les
mov
out
add
xchg
add
fs
adc
jle
inc
add
dec
add
xchg
xor
jno
in
add
sbb
loop
hlt
mov
push
popa
mov
add
enter
add
subb
mov
sbb
stos
add
dec
inc
cli
loop
add
pushl
pushf
add
ret
and
add
mov
add
and
add
adc
add
xor
add
addb
es
pusha
lret
xor
xchg
idivb
and
nop
aad
mov
adc
int3
or
inc
repz
mov
mov
dec
sub
add
xchg
cmc
aad
add
adc
ljmp
mov
cli
enter
dec
loop
data16
lret
out
lds
xchg
inc
inc
ficoms
sub
jmp
test
jge
lret
add
mov
cmpb
int
add
mov
inc
mov
pop
add
dec
scas
sbb
and
int3
inc
movsl
xchg
xor
int
mov
add
mov
mov
int3
fdiv
lret
loope
sub
jnp
add
xchg
int3
add
add
xor
adc
push
in
int3
mov
adc
and
out
fucom
cs
jg
add
shl
cmp
insb
mov
out
jns
aaa
out
add
std
mov
pop
aaa
out
cltd
out
dec
out
ja
sub
test
loopne
out
out
decl
out
out
out
loopne
add
xor
cmp
out
shl
add
clc
pop
add
add
std
lret
out
repz
add
std
out
cld
std
add
and
gs
mov
int3
add
aaa
das
push
fsubrp
nop
nop
lods
mov
sbb
mov
loope
stc
loope
mov
jmp
out
lret
add
xchg
mov
add
idivb
les
rcrb
mov
dec
add
and
xchg
arpl
push
add
jge
nop
insb
stos
xchg
xchg
mov
mov
cld
pop
push
dec
jo
aas
dec
push
push
cld
jmp
push
mov
add
and
sbb
cltd
inc
rorb
lea
test
mov
std
nop
and
jne
jge
mov
inc
add
outsb
push
aaa
jecxz
nop
int3
inc
lock
ret
add
out
icebp
add
push
xchg
push
push
mov
roll
xlat
or
and
inc
sahf
movsl
js
mov
scas
mov
testb
inc
push
das
aad
add
sub
sub
nop
rolb
adc
fiaddl
nop
loope
decl
mov
xchg
flds
mov
mov
xor
daa
cmp
push
mov
inc
in
mov
mov
inc
scas
mov
mov
add
jb
push
pushf
in
xor
add
add
cmc
add
jne
inc
sbb
add
push
adc
mov
xor
int3
or
xlat
push
and
add
imul
jge
in
cmp
insl
scas
ret
subl
nop
mov
add
mov
add
nop
inc
push
adc
call
int3
dec
adc
pop
add
or
add
and
xchg
mov
add
add
leave
add
cmpsl
add
add
int
mov
mov
dec
mov
dec
and
add
pop
scas
add
call
push
inc
add
add
mov
movsl
add
push
add
inc
jmp
push
lea
pop
pop
pop
add
jbe
adc
xor
in
xchg
add
ja
mov
add
xor
push
int
mov
lods
mov
pop
jb
mov
int3
mov
out
mov
cmp
mov
push
add
mov
pop
call
adc
add
add
sbb
push
popa
ret
mov
adc
mov
jnp
xchg
loopne
push
rclb
lea
int3
int3
movsb
cwtl
add
insb
mov
dec
int3
lea
fdivrl
mov
stos
testl
mov
insl
je
add
mov
popa
xor
hlt
pop
mov
pop
mov
add
sbb
add
pop
ror
inc
push
lea
add
xchg
sbb
std
sti
xchg
inc
mov
movsb
xchg
add
inc
xlat
inc
aas
xor
lea
and
scas
mov
dec
cmp
fdivrs
rcrl
inc
jo
mov
xchg
or
aad
scas
lea
add
jae
push
mov
inc
xlat
jae
add
pop
add
test
jne
jnp
inc
add
dec
pop
loop
jg
int3
or
js
add
xchg
loop
cmpsb
jo
sbb
add
cmpsb
sbb
inc
and
jmp
stos
jp
inc
mov
mov
lea
pop
jnp
mov
add
in
mov
dec
xorl
sub
outsb
jae
mov
test
xchg
mov
jbe
aas
add
rolb
aad
mov
movb
cmp
mov
loopne
imul
add
movsb
nop
add
adc
int3
mov
int3
int
inc
inc
pop
arpl
rorl
push
in
add
lds
add
mov
add
out
inc
mov
data16
int3
int3
mov
push
add
pop
loopne
and
popa
xchg
push
cmpsb
add
dec
push
dec
mov
imul
jae
ror
stos
int3
addb
mov
nop
mov
push
popa
pop
int3
jbe
arpl
popa
xchg
push
inc
mov
outsl
mov
add
xchg
add
jbe
xorl
add
xor
jo
fiaddl
movl
aas
mov
mov
mov
add
xchg
divl
sub
das
jg
cmpsl
mov
nop
add
jb
loopne
or
sub
add
push
mov
mov
and
jecxz
ljmp
std
out
cltd
rolb
fwait
adc
add
cld
cmp
loopne
pop
add
fsubrs
out
data16
popw
cld
out
cld
add
shl
out
cltd
dec
xchg
aaa
add
pop
out
cld
pop
scas
pop
add
out
out
out
out
pushl
out
add
cld
add
mov
std
out
push
std
add
cltd
add
out
out
std
out
pop
outsl
out
out
movsl
std
add
out
cld
out
sub
std
add
std
scas
push
add
xchg
inc
add
adc
inc
mov
xchg
clc
fwait
add
loopne
fwait
nop
xchg
add
jo
inc
sarb
ds
outsb
test
lahf
movb
scas
and
add
add
mov
inc
mov
cmpb
add
mov
cmp
sub
inc
push
push
mov
dec
jbe
shll
mov
call
outsb
add
test
lock
fmuls
mov
dec
push
xchg
push
add
out
fcoms
jb
sbb
ret
push
jo
incb
loopne
nop
gs
cli
adc
add
xchg
fidivrs
data16
cmpsl
cmpsb
push
arpl
push
add
stos
jge
push
push
mov
add
test
push
adc
lea
xor
xor
push
mov
add
das
add
mov
add
popa
cmp
nop
dec
jno
test
add
adc
add
cmc
cld
jb
fidivrs
xchg
add
add
sub
mov
mov
hlt
sub
xor
jbe
mov
outsl
sahf
int3
mov
adcl
jne
fwait
add
and
pop
lret
movb
jge
int3
add
push
rclb
and
add
push
nop
nop
xor
js
nop
cmp
mov
movsb
or
call
iret
js
lea
nop
call
add
mov
jnp
jo
sub
sub
in
add
fcomps
int
jns
xchg
inc
add
pop
xor
sbb
int3
mov
sysenter
cmp
inc
adc
out
mov
mov
add
inc
add
int3
sbb
call
test
aam
mov
jo
test
call
and
pop
cmp
jmp
arpl
lcall
adc
push
outsb
add
mov
int3
sub
pushf
nop
nop
dec
pop
add
and
sbb
mov
add
int3
mov
outsb
add
jnp
pop
add
mov
rcrb
add
add
fwait
clc
mov
xorb
hlt
add
cmp
inc
repnz
int3
sbb
add
imul
dec
add
fists
mov
mov
jb
jo
or
int3
cli
adc
push
test
add
lahf
pushf
bound
loope
scas
das
mov
mov
mov
add
add
mov
add
mov
jb
clc
jmp
add
pop
add
int3
add
push
imul
add
divl
mov
push
sub
or
call
nop
dec
repnz
pop
add
jb
lret
ror
mov
add
sbb
int
enter
aam
stos
cld
add
pop
fdivrl
arpl
mov
add
mov
call
lea
add
xor
add
jnp
test
and
ret
dec
nop
nop
push
lcall
loopne
inc
dec
jb
mov
add
mov
fcmovnb
rolb
outsl
fimuls
inc
lods
add
push
add
jb
sbb
mov
inc
xchg
sbb
push
add
inc
negl
add
mov
sbb
call
dec
addr16
int3
mov
mov
add
js
int
jecxz
push
nop
add
stos
push
add
add
call
adc
push
cmp
mov
add
add
add
fsubr
lea
mov
out
imul
or
cmp
ss
sub
std
enter
add
stos
ljmp
mov
movsl
dec
popa
xchg
mov
sahf
sbb
push
pop
inc
inc
and
movl
nop
test
jo
pop
addr16
lea
aaa
cmp
mov
movsl
aad
jo
add
add
pop
nop
mov
pop
int3
ss
adc
adc
sbb
adc
adc
pop
out
dec
je
int3
jb
jle
inc
in
lret
pop
and
pop
in
adc
inc
xorb
push
or
lahf
stos
dec
cmp
add
mov
seto
fcomps
jo
add
sarb
add
sbb
outsb
mov
jecxz
addb
lahf
in
es
rolb
jo
mov
add
jp
loopne
add
jbe
or
xchg
lods
jp
mov
sbb
add
into
int3
lea
xor
add
push
in
leave
jmp
mov
js
iret
in
sub
add
pop
mov
aam
cmp
cmp
aas
push
out
or
dec
stc
add
sbb
add
out
and
add
add
popf
out
lahf
nop
test
int3
jb
cld
cmpb
add
mov
add
jecxz
mov
nop
add
nop
inc
popf
fwait
mov
jle
into
xor
add
add
enter
aad
add
mov
ljmp
add
loopne
sarb
adc
sub
pop
hlt
scas
pop
filds
lds
add
pop
shrl
shl
sub
mov
out
std
add
out
add
add
out
add
cld
loopne
mov
pop
mov
add
out
dec
cmp
out
jns
aas
out
out
cld
out
dec
ss
lea
add
out
std
cltd
add
sarl
add
add
cltd
stos
add
sar
scas
shlb
add
push
push
popf
int
inc
inc
xor
int3
outsb
das
mov
dec
int3
scas
pusha
inc
pop
cmp
adc
nop
jb
pop
push
add
sub
movsb
and
mov
add
nop
push
dec
or
jmp
call
sbb
repz
add
ja
add
aas
call
push
call
nop
jg
add
jge
add
imul
add
add
int
inc
mov
fcmove
repz
xchg
nop
add
inc
divl
add
push
nop
lea
sbb
push
int3
xlat
insl
or
es
add
add
sbb
mov
add
pop
inc
push
iret
jb
inc
out
sub
xor
iret
addl
push
int3
or
add
dec
xchg
sahf
inc
nop
in
sbb
int3
in
mov
add
rclb
repz
add
mov
jno
insl
add
cmp
dec
into
add
nop
and
mov
lods
nop
add
push
xchg
add
or
mov
pop
xor
pusha
ljmp
nop
add
fsubl
mov
lret
jne
add
push
cmp
jl
xor
add
add
add
stc
test
pop
and
cmp
xor
imul
push
adc
add
lds
add
add
push
fs
adc
add
and
mull
adcb
pop
pop
cmpsb
add
add
mov
adc
pop
int3
mov
movsl
movl
fwait
subl
or
sub
or
mov
fmuls
jle
add
icebp
add
ret
xor
lods
push
mov
test
sbb
loope,pt
scas
cmpsl
lea
xor
mov
cs
pop
inc
pop
inc
mov
xchg
mov
add
push
iret
lds
mov
dec
xchg
cmp
nop
nop
aas
push
stos
movsb
insl
int3
xorb
mov
sub
ljmp
lea
test
add
in
cwtl
add
test
add
scas
inc
xlat
jo
add
pop
and
mov
inc
mov
adc
dec
push
out
add
ljmp
dec
add
out
add
shlb
lock
add
mov
cmp
mov
pop
add
cmpsl
jmp
mov
dec
add
pop
pop
int3
push
pop
pop
dec
mov
add
push
push
clc
jo
inc
ss
mov
addb
cmp
clc
xchg
arpl
int3
sbb
adc
push
mov
add
sbb
ja
nop
add
xchg
push
inc
mov
add
add
ja
push
rcrb
add
cmpxchg
nop
mov
enter
pop
add
test
call
add
inc
xchg
xor
jge
sub
dec
mov
add
jo
mov
in
add
gs
stos
movb
mov
and
aas
inc
dec
int3
leave
lret
popl
add
push
or
add
mov
mull
mov
add
push
add
ficoms
sub
add
testl
daa
cmp
add
add
fwait
add
fistl
and
add
dec
mov
inc
int3
fldenv
cmp
nop
add
call
lret
jmp
in
lock
pushf
and
fcmovnb
mov
cld
scas
add
mov
icebp
pop
and
inc
fwait
xchg
test
in
inc
mov
add
mov
add
xor
pop
outsl
arpl
int3
add
aad
jns
add
jae
imul
arpl
jns
jns
jns
jns
gs
je
jp
imul
jb
out
push
loopne
out
pop
pop
out
addb
movsl
out
clc
out
mov
addb
add
xor
adc
lret
add
dec
dec
sub
mov
rolb
jno
sti
jecxz
add
add
cltd
add
mov
mov
in
add
mov
add
movsb
std
push
ds
int3
pop
or
push
les
add
mov
roll
push
pop
jmp
fadds
bound
sub
mov
xchg
mov
mov
cmp
int3
ljmp
xorb
add
mov
pop
sub
lret
fisubs
add
and
xchg
add
mov
movsb
jl
mov
fnstsw
sbb
mov
dec
nop
pop
push
add
iret
mov
mov
cltd
push
add
sbb
add
sub
int3
test
je
jmp
inc
add
ret
jnp
filds
int3
ja
aad
int3
pop
jge
rolb
mov
test
nop
sbb
mov
nop
dec
jbe
int3
aam
add
hlt
call
imul
int
enter
inc
icebp
dec
hlt
arpl
add
int3
xchg
mov
lret
mov
push
sub
test
add
ljmp
add
lea
int3
loopne,pn
lods
nop
mov
int
nop
fs
call
xlat
add
dec
lds
addr16
and
movsb
add
sbb
adc
add
fbld
add
xchg
xor
add
mov
sbb
mov
popa
movl
roll
cmpsb
dec
add
push
test
faddl
lea
lods
pop
add
push
add
addr16
add
adc
add
cmpsl
pop
sbb
adcb
jg
jl
jb
add
add
test
gs
mov
dec
dec
add
cmc
addr16
mov
les
push
add
outsl
add
mov
add
dec
dec
aaa
mov
clc
add
mov
xchg
add
mov
add
mov
loop
or
lea
notl
addr16
mov
add
lods
dec
or
add
ljmp
in
push
and
mov
pop
xor
das
js
xchg
dec
hlt
jecxz
inc
add
add
inc
cmp
add
and
xchg
mov
cli
jns
nop
add
sar
jnp
inc
lcall
inc
add
cs
mov
int3
loop
jnp
outsl
jo
imul
outsb
jne
gs
push
insl
jne
jne
gs
popaw
push
jns
xchg
xchg
std
rolb
cmp
jmp
cld
out
add
test
into
aad
add
out
dec
out
lret
out
add
add
add
add
into
and
loopne
out
xor
cltd
add
out
ds
std
out
test
out
lcall
jmp
incl
addb
dec
mov
popa
sbb
mov
and
add
adc
cltd
rorl
dec
add
add
jnp
sub
mov
jb
fstl
sub
nop
add
in
or
lcall
jb
adc
inc
or
jne
jo
pop
push
add
insl
mov
sarl
and
sti
xor
mov
sub
dec
add
push
movsl
call
push
mov
add
sub
add
jo
aam
sti
xchg
inc
das
push
mov
jb
and
dec
lods
mov
add
mov
test
nop
sub
jnp
inc
jmp
sar
lret
mov
mov
fcmovnu
out
add
rol
adc
in
jb
push
add
bound
or
in
int3
fsubr
mov
shrl
mov
xor
insb
cmc
aad
add
xchg
and
jne
call
fstl
rolb
inc
out
dec
or
push
add
ret
fldl
int3
xor
int3
call
pushf
fwait
pusha
push
mov
jo
sbb
jmp
sub
fwait
lods
nop
jo
lock
dec
push
add
cmpb
add
xchg
mov
pop
ja
pop
xor
jg
add
scas
loopne
nop
jg
in
add
nop
mov
fiadds
cmc
int3
add
inc
xor
jo
inc
je
jo
dec
ljmp
add
inc
jbe
out
mov
lea
mov
iret
push
jb
inc
xchg
jle
rorl
int3
addb
pop
dec
pop
jae
andb
pop
add
xchg
cmp
call
dec
cmp
inc
inc
add
int
xor
push
mov
pop
int3
int3
out
cmp
call
das
call
ds
arpl
sbb
inc
fwait
xchg
out
nop
push
frstor
fldl
jb
mov
test
add
mov
int3
add
mulb
add
mov
mov
call
imul
pushf
pusha
adcb
inc
add
sbb
aaa
andl
add
push
aad
add
pushf
testb
mov
nop
jns
add
xor
data16
add
cmpsb
adc
lea
add
jg
lock
imul
call
xlat
xor
insb
mov
loopne
stc
data16
scas
pop
dec
dec
add
inc
jp
addb
add
mov
jl
int3
cmpsl
enter
cmp
cwtl
jo
or
aam
nop
nop
imul
cwtl
add
xor
out
add
addl
jecxz
frndint
scas
aad
push
popa
mov
sti
insb
jo
cmpsl
mov
mov
add
pop
add
or
gs
mov
fwait
jns
mov
out
mov
repz
add
jg
popf
fisttpl
arpl
adc
add
cld
jnp
xchg
add
movsl
xlat
fisubrs
add
jb
mov
call
lea
add
push
nop
int3
lods
dec
idiv
add
in
call
and
adc
xor
in
dec
add
orb
das
lods
ds
xor
xchg
mov
pop
mov
or
xchg
in
add
hlt
outsl
adc
add
fwait
add
and
ljmp
mulb
add
and
pop
cwtl
or
inc
push
int3
add
mov
mov
insb
out
jecxz
mov
add
pop
shlb
ljmp
call
xor
sub
inc
nop
and
stc
inc
mov
add
ss
jmp
add
imul
add
mov
adc
push
fldt
mov
mov
push
xchg
add
xchg
xor
xor
repnz
jo
and
nop
add
jmp
add
xorl
mov
add
xor
lods
mov
add
add
pop
and
mov
enter
jne
icebp
addb
add
dec
or
in
add
sub
and
and
mov
mov
fisubrl
xor
aam
ret
fists
inc
inc
iret
push
ljmp
inc
nop
mov
in
or
mov
nop
dec
test
mov
add
mov
add
into
loop
add
dec
mov
mov
inc
or
inc
jmp
mov
mov
int3
jb
pop
enter
insl
mov
sub
add
push
cmp
jp
call
mov
cltd
int
nop
add
xchg
push
int3
nop
add
sub
scas
int3
mov
mov
hlt
insl
pop
in
add
fmuls
bound
lahf
push
mov
and
pop
imul
jo
pop
out
dec
ss
imul
out
cmp
out
out
add
out
add
std
add
dec
out
add
dec
cld
std
cs
cmp
stos
out
xadd
adc
pop
std
add
std
add
out
std
std
rol
add
inc
add
and
incl
data16
dec
dec
cmp
out
add
ss
add
and
sub
loop
add
out
std
mov
add
add
call
sbb
mov
xchg
dec
scas
cmpsl
or
add
pop
sbb
cmpsb
fsub
jnp
lret
xchg
push
inc
movl
das
dec
pop
add
fcompl
call
jb
dec
jp
nop
mov
test
lea
adc
outsl
mov
pop
dec
inc
pop
nop
add
push
pop
add
add
sbb
popf
lahf
mov
add
xor
roll
add
int3
sbb
pop
call
ds
mov
test
push
lock
jl
add
dec
call
push
call
push
mov
and
ss
mov
outsl
ret
jnp
dec
push
fiadds
decb
imulb
add
jbe
adc
and
xlat
mov
lea
inc
addb
and
rorl
jecxz
int3
add
insl
add
aaa
int3
xorb
jne
in
and
add
add
dec
mov
add
mov
int3
aaa
add
adc
add
testb
cmp
add
jecxz
loopne
add
xorb
or
inc
mov
aad
mov
call
clc
nop
add
pop
iret
add
xchg
add
cmp
and
xchg
mov
sbb
jbe
add
cld
mov
add
push
and
cmc
or
xor
int3
add
rorb
sub
mov
fcmovu
add
ficompl
mov
scas
jo
call
and
or
jb
and
nop
adc
inc
int3
mov
sub
pop
add
add
add
int
int3
add
add
dec
dec
ret
add
mov
add
lods
imul
lea
xchg
adc
mov
ret
jno
jp
add
fsubrl
add
xchg
mov
cmp
add
arpl
inc
insb
nop
cmc
inc
lret
lock
jl
add
adc
push
movsl
loopne
inc
cmc
in
sub
lret
je
addb
cmpsb
cmp
add
roll
ljmp
popa
push
add
or
movsb
push
add
es
jo
pop
jg
add
inc
imul
pop
mov
add
jmp
cmpsl
cli
push
out
add
cli
inc
mov
stos
test
xorb
dec
js
and
xchg
popf
or
add
int3
bound
jbe
nop
ljmp
jo
lret
push
cwtl
orb
add
mov
add
jmp
cli
das
nop
and
pop
jo
int3
add
add
add
std
jp
shll
add
xor
andb
int3
dec
jb
add
orl
xchg
mov
fisubs
lea
pop
popf
add
or
xchg
call
lcall
int3
test
ret
pop
add
push
add
shll
test
sub
nop
xchg
push
mov
lret
roll
xchg
or
mov
cmc
rolb
movsl
push
inc
mov
es
add
mov
rcl
inc
sub
fists
stc
add
outsb
add
pop
ret
xor
fs
popa
xor
cwtl
xchg
mov
mov
sar
and
out
mov
out
into
add
insl
add
divb
inc
call
xchg
xor
or
mov
lods
xchg
jns
add
xchg
ss
inc
add
movsbl
sbb
mov
mov
int3
add
leave
test
xor
add
adc
and
pop
mov
mov
cli
add
sbb
out
rcrb
lret
lret
ljmp
sub
add
je
sub
push
cmp
inc
repnz
and
xchg
inc
cmp
out
cwtl
sbb
orb
call
and
jp
sub
add
sbb
cmpsb
int3
int3
loope
add
lcall
inc
shrl
add
add
sub
mov
and
rolb
nop
or
dec
ds
jb
mov
and
es
adc
dec
mov
add
add
sbb
cmp
xor
pop
add
inc
mov
add
aam
pop
ss
jb
fisttpll
movsb
mov
add
mov
int3
jb
repz
jne
xor
dec
ss
out
out
mov
add
jns
add
cld
shl
out
out
sar
cltd
dec
aas
add
mov
and
add
out
inc
roll
add
mov
aam
jns
out
out
add
cld
out
std
std
add
cld
stos
sub
data16
out
out
add
out
test
movsl
adc
in
fwait
ret
movsb
imul
and
push
inc
inc
loope
mov
push
fisubrs
nop
repz
jmp
call
call
xor
roll
inc
add
mov
add
lcall
add
mov
xchg
es
nop
mov
jg
adcb
add
adc
int3
fbstp
pop
enter
pushl
fdivrl
call
mov
fcomp
jne
add
push
xorl
pop
mov
addl
add
test
addl
out
jmp
dec
adc
add
xchg
cmp
sti
mov
adcb
and
pop
repz
imul
int3
add
and
sub
add
add
inc
nop
mov
add
add
xchg
adc
lcall
add
push
inc
stc
and
jo
lds
sbb
cmc
jb
scas
inc
jo
in
xor
mov
xchg
xchg
lret
jb
test
stc
mov
mov
mov
outsb
sub
decl
das
adc
gs
pop
nop
add
shlb
clc
scas
add
jb
push
movsl
add
dec
les
jge
dec
add
loopne
cmc
push
add
push
jne
mov
aad
roll
adc
call
mov
add
lea
and
int3
mov
add
fs
sub
int3
pop
imul
xor
and
mov
jge
jecxz
inc
loopne
enter
nop
sbbb
add
icebp
adc
xchg
jb
pushf
mov
inc
and
mov
cli
cmc
add
xor
or
sub
divl
pushf
inc
int3
jb
lods
call
mov
out
call
iret
add
push
inc
inc
das
mov
mov
cmp
ficoml
and
add
xchg
addr16
add
imul
mov
xchg
das
add
cmp
in
add
sbb
fldcw
int
cmpsb
adc
add
clc
jbe
mov
xor
add
in
loop
dec
mov
ds
testb
es
pop
out
and
push
cmp
or
aaa
xor
jae
jns
pop
add
xor
mov
add
stc
push
pop
jo
pop
out
cld
xchg
push
push
cmpsl
add
jo
ret
movsb
dec
and
int3
pop
in
dec
adcl
cmp
xchg
pop
add
mov
les
out
push
xorl
icebp
jl
add
repnz
jp
push
out
movsl
add
adc
xchg
and
das
or
cwtl
sbb
lret
in
outsl
jnp
int3
pop
mov
xor
inc
nop
add
cwtl
adc
insb
add
add
fistpll
push
movb
add
pop
inc
jle
add
leave
mov
int3
loopne
leave
or
and
sub
or
imul
idiv
mov
mov
add
inc
stc
mov
cmp
mov
mov
mov
mov
mov
pop
or
pusha
fistpll
add
in
lea
sbb
addb
addr16
mul
inc
add
std
dec
add
add
lahf
inc
negl
add
mov
add
mov
int3
add
jle
aas
add
xlat
mov
mov
sub
mov
addb
es
out
pop
add
popa
inc
inc
pop
lea
sub
lea
out
sbb
cld
cld
rcl
cs
imul
pushw
call
add
xchg
std
mov
data16
shl
out
out
mov
add
cmp
pop
cmp
cltd
out
add
add
or
inc
out
std
cs
cmp
std
pop
mov
roll
pop
std
xor
cld
aad
add
add
out
out
add
jle
add
cld
adc
cs
add
mov
jns
add
push
insb
add
and
ret
rcrb
add
cld
push
int
nop
int3
mov
std
out
nop
mov
stc
sti
roll
cmp
pop
ja
inc
nop
dec
pop
in
int3
add
cmc
nop
jecxz
call
loop
add
sysenter
in
cs
sbb
xchg
inc
movsl
pop
decb
add
add
lock
jmp
sub
mov
addb
pop
nop
or
outsb
xor
push
cmp
mov
rcrb
je
mov
cld
int3
nop
jecxz
xor
inc
add
add
pop
jecxz
sbb
add
fwait
mov
cltd
fcomps
push
lahf
gs
and
dec
dec
stos
pop
aaa
add
mov
nop
dec
sub
mov
sub
call
or
add
push
push
xorl
std
nop
xor
cmp
jecxz
int3
mov
add
int3
adcb
fwait
push
push
rclb
ret
jns
insb
dec
stos
xchg
nop
roll
enter
pop
mov
add
inc
pop
add
mov
add
mov
fnsave
push
cmp
jb
inc
add
clc
das
fadds
pop
xorb
aad
jmp
add
add
fldcw
sub
inc
and
inc
xor
scas
test
add
mov
dec
mov
add
xlat
pushf
pop
incl
mov
adc
add
ljmp
push
pop
mov
add
int3
pop
xlat
stc
arpl
adc
mov
mov
clc
dec
scas
inc
add
incb
lea
int3
nop
pop
outsb
push
jae
je
inc
add
and
mov
jbe
lret
add
inc
hlt
lret
repz
push
mov
xor
stc
mov
insb
jge
lds
stos
add
add
ljmp
mov
xor
push
mov
lea
lea
nop
and
mov
add
mov
cmc
popf
add
iret
or
or
popf
sbb
std
int3
add
icebp
mov
jne
add
inc
jb
and
and
roll
mov
ret
pop
push
add
cmpsl
out
dec
inc
mov
leave
aas
or
add
add
jge
mov
pause
jo
mov
add
xchg
ja
inc
mov
jg
xchg
stos
sbb
incl
mov
aaa
dec
jl
add
pop
in
sub
nop
popa
push
popf
xchg
cwtl
add
int3
std
push
out
popf
add
mov
je
add
in
xor
pop
mov
insb
jle
in
lcall
daa
out
popf
inc
add
xchg
lret
add
lret
add
scas
pop
jmp
test
add
mov
sub
int3
add
cltd
aaa
dec
pop
add
rorl
jecxz
pop
push
aad
nop
add
call
in
inc
cld
lret
jbe
cld
mov
fwait
ja
iret
add
push
jp
add
das
int3
add
jl
in
pop
pop
addb
push
cld
or
mov
sahf
lret
mov
in
or
nop
fists
mov
add
test
cwtl
dec
mov
je
int3
and
test
daa
loopne
mov
pop
enter
stos
neg
int3
add
mov
movsb
pop
nop
inc
les
add
adc
cs
aas
sbb
inc
lret
je
nop
fldl
and
sarl
into
icebp
add
add
repnz
pusha
and
pop
shr
int3
mov
push
dec
cmp
mov
fistps
mov
aas
subb
push
add
lret
mov
cltd
iret
inc
fnsave
mov
add
mov
jb
mov
nop
pop
jecxz
cmp
nop
add
leave
stc
adc
mov
pop
sub
outsl
add
add
add
out
out
out
cs
out
add
add
outsl
cld
out
out
add
stos
cmp
add
cs
mov
cmp
cltd
aaa
out
and
loopne
dec
out
cltd
mov
dec
lahf
out
pop
out
add
add
out
pop
add
jg
jg
aam
std
add
dec
sarb
mov
add
dec
out
fbstp
out
lahf
std
les
mov
sub
add
xor
inc
sbb
inc
pop
fistl
inc
int3
test
sbb
cmp
xor
dec
xchg
mov
int
cltd
nop
adc
inc
pop
mov
std
pop
cld
xchg
xchg
inc
xchg
push
in
add
sbb
jno
pop
mov
ljmp
add
fldl
inc
movl
ja
cmp
out
sbb
std
xor
xlat
arpl
out
mov
nop
fstpt
add
stc
jns
cs
add
iret
xchg
mov
add
sbb
mov
jo
nop
shlb
sub
popf
jnp
mov
xchg
data16
cmp
pushf
add
lret
pop
push
inc
mov
in
mov
cmpsb
lcall
pusha
call
aaa
aaa
lret
push
scas
movsl
xchg
add
lahf
jb
sbb
fwait
and
inc
pushf
xchg
add
outsb
add
cli
mov
add
mov
xchg
jo
mov
inc
add
xchg
add
or
repnz
add
scas
xchg
fiadds
pop
add
cmc
and
mov
shr
nop
mov
in
and
mov
mov
lret
mov
jo
nop
std
repnz
mov
add
add
jo
add
outsl
inc
inc
cli
movsb
dec
fcoms
xchg
cld
dec
add
push
inc
and
lret
add
add
lret
jb
mov
add
lea
xor
nop
dec
push
out
rcl
nop
push
mov
jns
add
mov
lea
mov
and
mov
addl
mov
popf
aam
add
push
push
out
std
sub
sbb
fimull
mulb
or
and
mov
add
fwait
out
inc
mov
xchg
cmp
sub
add
sub
jns
add
stc
shl
nop
int3
jp
adc
add
nop
test
in
xchg
cmpb
add
rolb
mov
mov
mov
add
rcrb
jne
ja
adc
mov
movsl
mov
hlt
nop
jb
repnz
dec
stos
pop
fdivr
add
int3
inc
inc
addl
popa
add
xor
insb
stos
lea
add
outsl
add
or
cmpsb
add
sbb
out
dec
in
or
pusha
sub
add
dec
adc
lret
pushf
jnp
add
add
inc
jbe
cmp
mov
xchg
or
jbe
add
push
jnp
add
loop
call
jp
int3
add
pop
test
add
int
popa
add
cmp
sub
add
mov
aas
sahf
lea
sbb
xorb
call
push
add
std
sahf
adc
add
pusha
mov
aam
dec
ret
int3
xor
shll
subb
xlat
add
icebp
shlb
nop
add
das
add
test
sub
add
negl
cmp
ret
jb
cmp
add
and
mov
lcall
inc
add
mov
repz
add
push
int3
notl
inc
mov
int3
jo
xchg
mov
cld
jle
inc
dec
add
nop
je
lea
ss
insl
int3
add
dec
add
call
sub
sahf
mov
loope
xor
lcall
rorb
int3
add
iret
mov
or
xor
xor
add
adc
add
dec
jp
insb
mov
mov
adc
mov
data16
outsl
popa
pop
add
inc
xor
mov
fs
mov
xchg
mov
pop
pushf
dec
scas
add
int3
add
rorb
fwait
in
int3
int3
add
dec
cmp
lret
lea
jno
cmpsb
add
push
cli
and
jne
into
add
add
dec
mov
push
jns
add
cmp
cmp
int3
lods
add
adcl
int3
mov
out
leave
pushf
add
andb
add
call
cli
add
lcall
add
lret
add
out
add
loopne
out
fsub
mov
add
jns
roll
xor
out
out
rorl
data16
add
add
out
mov
stc
stc
movsb
add
out
mov
xor
jecxz
in
xor
mov
cmp
add
aaa
lods
fucomip
jo
dec
mov
mov
shrb
mov
mov
push
mov
mov
push
shrl
add
imul
inc
mov
outsb
outsl
jo
stos
enter
add
sub
bswap
inc
sub
or
add
add
add
cmp
jb
movsl
popa
lcall
pop
mov
inc
mov
pushf
ficompl
mov
bnd
adc
jo
mov
add
nop
movsl
inc
dec
mov
add
xchg
out
int3
int3
pop
jb
add
sub
jmp
nop
add
push
enter
inc
mov
jo
sbb
add
nop
mov
mov
inc
ds
int3
int3
sbb
jle
add
outsb
lret
xchg
mov
test
out
mov
mov
add
dec
call
scas
mov
add
rclb
fstpt
add
pop
sahf
inc
add
dec
add
add
add
adc
add
jg
addr16
add
fsub
ljmp
loopne
add
stos
lahf
add
pop
loope
sarl
dec
sbb
jge
nop
mov
jae
jle
sub
pop
mov
addr16
fstpl
mov
add
daa
adc
call
mov
mov
push
sbb
int3
add
add
sbb
sti
and
movsb
add
mov
mov
mov
int3
nop
hlt
int3
jbe
push
xlat
add
mov
int3
add
xchg
movsb
imul
sbb
jne
ds
mov
jecxz
pusha
fwait
add
int3
mov
pop
aas
add
rolb
jmp
std
cs
add
cld
out
ud0
sar
into
sbb
add
out
fadds
data16
cld
add
xor
sbb
mov
out
nop
lds
cmp
add
inc
out
mov
rcrl
jg
out
add
add
out
std
test
jg
mov
into
lds
std
ss
cld
out
movntq
cltd
out
shl
pop
add
xor
inc
add
out
or
out
cmp
or
std
verr
xchg
cld
adc
add
jmp
std
add
add
shl
insb
add
cld
pop
cmp
out
add
out
add
add
add
rolb
add
xor
xchg
xor
xor
xor
xor
xor
xorl
xor
xor
xor
insb
xor
movsb
xor
xor
mov
xor
xor
xor
xor
xor
xor
mov
xor
xorb
ss
fdivs
loope
xor
test
lods
aaa
mov
sti
aaa
pop
cmp
cmp
ret
cmp
cmp
cmp
cmp
cmpl
or
cmp
jae
mov
sarl
cmp
cmp
mov
mov
movsb
cmp
cmp
cmp
cmp
cmp
fwait
cmp
and
pop
jns,pt
ret
ds
idivb
inc
aas
nop
aas
loopne
ljmp
add
add
add
xor
xor
pop
xor
jae
mov
xor
xor
insb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lret
and
imul
mov
aaa
es
data16
jge
les
out
aaa
cmp
jl
lea
xchg
cmp
cmp
cmp
cmp
cmp
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
out
cmp
jo
mov
fstpt
and
aas
dec
aas
lea
mov
aas
add
add
add
add
add
xor
ja
xorb
xor
xor
sbb
xor
push
xor
mov
xor
xchg
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
lret
xor
dec
ss
ss
xchg
fdivl
stc
xor
pop
aaa
data16
xchg
aaa
mov
aaa
pop
cmp
cmpl
xor
jg
mov
mov
fdivrl
sbb
cmp
cmp
cmp
cmp
jo
sarb
cmp
ds
cmp
cmp
cmp
cmp
cmp
cmp
cltd
cmp
or
pop
ds
ds
sarl
push
aas
push
aas
aas
fidivrs
cmc
aas
add
add
add
add
add
xor
xor
xor
bound
push
xor
xor
xor
xor
xchg
mov
xor
push
xor
jo
scas
xor
xor
xor
xor
xor
xor
xor
xor
js
test
adc
sub
ja
cltd
ss
ss
ss
aaa
jo
jg
movsl
aaa
mov
cmp
cmp
leave
cmp
cmp
pusha
cmp
cmp
cmp
cmp
jno
scas
cmp
cmp
cmp
cmp
cmp
cmpl
sbb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
xor
dec
ds
ds
ds
aas
popa
aas
jp
movsl
aas
mov
les
call
add
addb
add
add
xor
xor
push
xor
xor
xor
xchg
cmpsb
xor
xor
xor
xor
xchg
xor
xor
xor
cltd
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
jmp
sub
jbe
movsb
ss
aaa
xchg
aaa
lods
aaa
mov
xlat
aaa
cmp
cmp
cmp
and
daa
cmp
cmp
cmp
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
daa
cmp
in
cmp
and
aaa
cmpb
ds
ds
ds
or
daa
aas
xor
dec
aas
je
aas
sarb
add
add
add
adc
pop
xor
xor
xor
xor
xorb
xor
sbb
bound
jle
xchg
fdivs
in
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
addr16
adc
xor
jnp
lret
ss
aaa
pop
aaa
imul
aaa
loop
jmp
cmp
lods
cmp
cmp
cmp
cmp
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jl
mov
ds
jg,pt
lret
aas
pop
aas
cmpsl
aas
mov
add
mov
add
add
add
xor
xor
mov
xor
ja
mov
xor
cwtl
xor
xor
xor
mov
mov
xor
xor
xor
xor
xor
shlb
jb
xchg
ss
sbb
gs
jne
mov
fdivs
stc
aaa
add
pop
cmp
cmp
mov
enter
adc
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
fdivrs
cmp
fs
fdivrs
push
aas
adc
dec
aas
push
lcall
add
rolb
lret
add
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
xor
xor
jo
mov
xor
mov
xor
xor
xor
jp
fwait
xor
sbb
pop
ss
shlb
aaa
cmp
jle
aaa
shll
sbb
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
jp
mov
ds
ds
cmpl
loopne
or
pop
aas
push
aas
mov
aas
add
add
add
rolb
add
dec
xor
xor
xor
xor
xor
xor
push
mov
cltd
xor
xor
xor
xor
popa
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
enter
and
imul
ret
ss
inc
aaa
push
aaa
jl
mov
mov
add
cmp
fwait
cmp
cmp
push
cmp
cmp
cmp
cmp
dec
cmp
jb
movsb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cltd
cmp
sbb
ss
ds
imul
idivb
sub
je
mov
loopne
add
add
add
xor
xor
xor
xor
js
lahf
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
imul
out
and
xor
xor
xor
je
xchg
xor
adc
aaa
arpl
popf
lds
push
aaa
xor
dec
aaa
push
aaa
and
cmp
cmp
cmp
cmpsb
cmp
cmp
cmp
cmp
jno
test
cmp
je
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
enter
sbb
dec
ds
ds
fidivrs
or
pop
aas
jge
test
xchg
aas
movsl
aas
mov
aas
add
add
add
enter
dec
xor
xor
xor
xor
xor
xor
xor
mov
ret
xor
xor
xor
jnp
mov
mov
xor
xor
xor
xor
xor
xor
mov
add
push
and
imul
ss
ss
aaa
jle
les
out
aaa
cld
aaa
inc
cmp
cmpl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
insl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
sub
inc
ds
cmpl
ds
aas
and
dec
aas
data16
push
stos
aas
loop
cld
aas
add
add
add
into
add
add
xor
xor
xor
xor
xorl
scas
xor
xor
xor
xor
push
xor
push
xor
xor
xor
xor
xor
xor
xor
iret
xor
ja
mov
aaa
sub
jp
movsb
aaa
mov
aaa
cmp
cmp
cmp
jle
int
push
cmp
cmp
cmp
mov
cmp
cmp
cmp
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
in
cmp
jae
mov
cld
ds
xor
cmp
pop
aas
jnp
mov
test
lock
add
add
add
add
add
xor
xor
xor
xor
xor
ja
jge
mov
xlat
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jge
xchg
xor
inc
ss
mov
mov
lret
add
inc
aaa
bound
outsb
aaa
test
xchg
aaa
fbstp
divb
adc
inc
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
insb
cmp
and
pop
cmp
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int
loope
or
sbb
sub
inc
ds
mov
sarb
fidivrl
adc
xor
jl
mov
pushf
aas
xlat
aas
out
aas
add
add
add
fadds
add
xor
mov
fnsave
sub
cmp
arpl
lcall
xor
xor
xor
xor
xor
xor
pop
xor
xorl
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
stos
xor
inc
ss
ss
ss
ss
aaa
jne
xchg
aaa
mov
shlb
in
aaa
and
dec
cmp
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
jle
xchg
cmp
cmp
cmp
lea
test
iret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
push
ds
mov
movsl
ds
lret
aas
sub
jnp
mov
mov
aas
add
add
add
xor
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
jl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
leave
xor
push
ss
ss
ss
and
insl
aaa
mov
loopne
sbb
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
lods
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
sub
pop
ds
loopne,pt
ljmp
aas
fnstcw
add
add
add
add
add
xor
xor
xor
xchg
xor
out
and
bound
popf
xor
xor
xor
jno
mov
xor
xor
xor
xorb
xor
xor
xor
xor
xor
xor
bound
lret
sbb
sub
inc
mov
xchg
shll
pushl
inc
aaa
push
aaa
bound
imul
aaa
mov
cmp
mov
xchg
cmp
cmp
cmp
jbe
cmpsb
cmp
cmp
mov
jmp
icebp
cmp
cmp
mov
lds
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
cmp
fnstsw
cmp
pop
ds
ds
ds
aas
jno
xchg
aas
loop
add
add
add
add
add
xor
xor
xchg
xor
xor
xor
xor
xchg
mov
xor
xor
mov
xchg
xor
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
int3
xor
stc
xor
test
mov
mov
aaa
sub
inc
aaa
push
aaa
popf
aaa
mov
cmp
pop
cmp
jae
mov
ret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
adc
dec
lea
lds
in
and
sub
bound
mov
aas
add
add
add
add
add
arpl
lods
xor
xor
mov
movsl
xor
xor
xorl
xor
xor
xor
xor
ja
lret
xor
xor
xor
xor
xor
xor
xor
test
divl
imul
and
xor
inc
aaa
push
test
aaa
pop
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jbe
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
loopne
cmp
insb
ds
fdivrl
ds
aas
movsb
aas
xlat
aas
add
add
add
das
xor
mov
xor
xorl
in
out
xor
pusha
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
shlb
sbb
pusha
mov
mov
aaa
mov
iret
aaa
push
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
test
mov
cmp
jle
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
xchg
cmp
sub
xor
inc
xchg
xchg
ds
enter
ds
je
jge
leave
aas
iret
aas
fstpt
add
add
add
inc
xor
xor
xor
xor
xor
inc
xor
sahf
xor
xor
xor
xor
xor
xor
jg
lea
shll
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lea
adc
xor
fs
cs
jbe
xchg
mov
aaa
cmc
aaa
add
inc
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jbe
movsl
cmp
push
sub
cmp
pop
ds
ds
idivb
add
push
aas
mov
mov
add
mov
add
xor
imul
xor
xor
xor
xor
jb
test
scas
xor
xor
xor
xor
xor
xor
xor
and
inc
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jmp
ss
ss
ss
adc
xor
cmp
jno
mov
cmp
xchg
cmp
cmp
cmp
lahf
cmp
cmp
cmp
cmp
jnp
int
loop
sub
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jno
mov
inc
jo,pt
mov
aas
push
aas
jnp
test
scas
aas
aas
fnstcw
add
add
add
fadds
add
push
xor
dec
xor
mov
fwait
xor
xor
mov
mov
xor
xor
xor
test
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xchg
xor
sbb
insl
ss
ss
ss
ss
aaa
lea
xchg
aaa
mov
into
aaa
out
aaa
sbb
push
cmp
mov
int3
cmp
cmp
cmp
cmp
jp
mov
cmp
cmp
cmp
cmp
cmp
test
aad
stc
cmp
cmp
cmp
cmp
cmp
cmp
cwtl
cmp
sbb
ds
aas
push
aas
outsl
aas
jae
jns
ret
aas
fistpll
jmp
add
rolb
add
add
add
xor
push
xor
xor
xor
dec
xor
jbe
xchg
xor
xor
xor
xor
xor
dec
xor
xor
xor
xor
xor
ret
xor
sub
je
mov
in
out
ss
ss
aaa
xchg
aaa
fdivl
adc
cmp
cmp
cmp
cmp
cmp
popf
cmp
sub
inc
cmp
cmp
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
loop,pt
repz
aas
mov
ret
aas
add
add
add
les
add
aas
xor
stos
xor
xor
xor
lods
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
fs
lds
pusha
ss
jg
shlb
and
jo
mov
fnstenv
loop
sbb
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xlat
cmp
pop
jnp,pt
cmpsl
fnstsw
idivb
std
ds
aas
lcall
add
lock
mov
xor
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lea
adc
xor
dec
lea
fbstp
in
xor
cmp
bound
jl
mov
leave
aaa
lock
sub
push
cmp
pop
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
js
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
imul
gs
mov
sarl
aas
inc
aas
outsl
aas
xchg
aas
stos
aas
fstpt
loop
cld
aas
add
add
add
rolb
add
dec
xor
xor
xor
xor
xor
xor
insl
xor
xor
insl
xor
divb
adc
xor
xor
xor
xor
xor
xor
xor
xor
push
xor
test
fdivs
add
pop
mov
add
adc
cs
jle
mov
aaa
aaa
sub
push
cmp
cmp
cmp
cmp
pop
cmp
cmp
inc
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
lds
xlat
ds
or
xor
aas
mov
iret
aas
hlt
aas
add
add
add
enter
adc
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
ss
ss
fdivl
lock
inc
aaa
dec
aaa
nop
aaa
lods
aaa
fnstenv
add
cmp
cmp
cmp
sbb
aaa
cmp
cmp
cmp
cmp
test
movsb
cmp
cmp
cmp
cmp
cmp
pop
cmp
cmpl
dec
cmp
cmp
cmp
cmp
mov
mov
lahf
ds
aas
mov
sarl
aas
add
add
add
into
add
add
xor
push
xor
xor
xor
xor
pushf
xor
xor
xor
xor
pushf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
test
stos
shlb
ss
ss
pusha
aaa
jns
mov
cmp
pop
cmp
mov
cmc
cmp
push
cmp
cmp
cmp
mov
cmp
cmp
cmp
jg
mov
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
ds
jo,pt
jns
mov
mov
leave
ds
aas
sub
push
cmpsb
aas
loope
out
in
aas
add
add
add
add
add
dec
xor
ret
xor
xor
xor
xor
xor
xor
xor
xor
adc
inc
xor
xor
xor
xor
xor
xor
xor
xor
add
and
push
ss
fwait
ss
aaa
and
push
aaa
xorb
aaa
ret
aaa
out
aaa
sbb
sub
cmp
cmp
cmp
cmp
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jnp
cwtl
cmp
sbb
aaa
ds
lea
fnstsw
hlt
ds
aas
cmpb
aas
int
aas
add
add
add
add
add
xor
insb
xor
xor
xor
xor
xchg
xor
xor
xor
xor
xor
xorl
add
xor
xor
xor
xor
xor
xor
pop
xor
std
xor
test
hlt
add
inc
aaa
dec
aaa
insl
aaa
jp
shll
aaa
push
cmp
sahf
cmp
cmp
inc
cmp
mov
fdivrs
cmp
cmp
jnp
xchg
mov
sti
cmp
cmpl
std
cmp
xchg
cmp
cmp
cmp
cmp
lret
cmp
es
jnp,pt
cmpsb
fdivrs
and
xor
pop
aas
push
aas
clc
aas
add
add
add
add
add
xor
xorb
xor
xor
pop
xor
mov
xor
xor
xor
jnp
test
shll
adc
sbb
xor
mov
clc
xor
xor
xor
xor
xor
xor
shll
inc
ss
outsb
ss
mov
xor
imul
cmp
dec
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
jg
cmp
cmp
cmp
cmp
cmp
jno
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fdivrs
push
mov
mov
mov
aas
adc
aaa
aas
push
aas
imul
lds
iret
aas
out
add
add
add
adc
and
inc
xor
xor
xor
xor
xor
xor
jle
xchg
xor
xor
xor
xor
sub
cmp
jb
movsb
xor
xor
xor
daa
xor
jb
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
int
call
ss
ss
aaa
xorl
or
pop
cmp
cmp
cmp
insl
cmp
cmp
cmp
jb
cwtl
cmp
cmp
cmp
dec
cmp
lahf
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lds
cmpl
cld
ds
mov
leave
aas
cmc
aas
add
add
add
wrmsr
dec
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
imul
aam
jmp
aaa
jns
mov
shll
out
aaa
add
push
cmp
mov
iret
cmp
cmp
cltd
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
fwait
cmp
cmp
fdivrl
out
ds
aas
das
aas
aas
aas
cmpb
aas
fdivrs
add
add
add
aaa
xor
xor
xor
xor
sbb
xor
lods
xor
xor
mov
xor
mov
xor
xor
xor
xor
xor
xor
xorb
ss
mov
ss
aaa
cwtl
aaa
mov
divb
dec
cmp
cwtl
cmp
cmp
cmp
cmp
cmp
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
leave
cmp
cltd
ds
add
aas
xchg
aas
cwtl
aas
fidivrl
add
add
add
les
add
dec
xor
test
lcall
xor
xchg
lea
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
and
arpl
test
ss
and
and
aaa
shll
or
and
aaa
cmp
jns
lea
mov
cmp
cmp
pushf
cmp
cmp
push
mov
cmp
cmp
cmp
jns
xchg
cmp
and
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
jp,pt
cmpb
ds
jecxz
stc
ds
aas
adc
adc
aas
mov
add
add
add
add
add
xor
insl
xor
lcall
xor
xorl
or
xor
cwtl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
add
inc
ss
ss
movsb
ss
ss
jo
xchg
aaa
mov
cmp
xchg
popf
cmp
cmp
cmp
cmp
mov
cmp
xor
dec
cmp
xchg
cmp
cmp
cmp
cmp
cmp
js
xchg
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
test
std
cmp
ret
and
insl
aas
lea
xchg
aas
test
add
adc
add
add
add
xor
inc
xor
lods
xor
xor
xor
xor
mov
xor
xor
push
xor
xor
xchg
xor
xor
xor
xor
xor
inc
xor
cltd
xor
fidivs
xorl
ss
aaa
jnp
cmpsl
aaa
aad
out
aaa
add
sbb
and
cmp
cmp
cmp
cmp
cmp
cmp
and
dec
cmp
jae
mov
sarl
or
cmp
imul
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
xor
push
js,pt
test
lods
ds
sarl
adc
aas
cwtl
aas
xlat
aas
out
add
add
add
mov
xor
jne
ret
xor
xor
xor
xor
xchg
stos
xor
xor
xor
pop
xor
test
mov
xor
xor
xor
xor
xor
xor
lds
data16
lahf
ss
aaa
cmp
push
aaa
mov
mov
aaa
push
cmp
cmp
popf
cmp
cmp
cmp
mov
cmp
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lcall
ds
js
lea
int
clc
and
push
aas
lea
enter
add
add
add
add
xor
xor
xchg
xor
xor
xor
xor
xor
xor
xor
xor
stos
xor
xor
xor
xor
jge
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
xor
pop
movsb
ss
or
cmp
ja
les
adc
push
cmp
pushf
cmp
cmp
cmp
cmp
xchg
cmp
cmp
push
cmp
cmp
cmp
cmp
cmp
movsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jo
popf
cmp
adc
push
jns,pt
ret
ds
add
xor
ja
cmpl
fidivrs
aas
add
add
add
add
add
xor
outsb
xor
xor
xor
xor
xor
pop
xor
dec
xor
popf
xor
xor
xor
xor
xor
xor
xor
xor
xor
enter
or
ss
ss
ss
aaa
popf
aaa
jmp
adc
push
cmp
cmp
cmp
jle
mov
out
cmp
cmp
mov
les
add
and
dec
cmp
js
lret
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
aad
fnstsw
inc
ds
ds
loopne,pt
idivl
adc
das
aas
push
aas
jnp
mov
aas
add
add
add
add
add
lcall
xor
outsl
xor
pop
xor
xor
xor
xor
lcall
xor
xor
xor
xor
xor
xor
xor
jbe
pushf
xor
daa
ss
ss
lcall
aaa
and
cs
ja
mov
aad
pushl
cmp
mov
cmp
cmp
imul
cmp
cmp
cmp
cmpl
cmp
cmp
cmp
sub
xor
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
cmp
jl
mov
inc
cmpb
ds
sub
ss
push
aas
nop
aas
mov
add
nop
add
aam
add
aas
xor
scas
xor
xor
xor
xor
fwait
xor
xor
xor
xor
popf
xor
xor
jg
stos
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
shlb
adc
ss
imul
fbstp
cmc
ss
dec
aaa
xchg
aaa
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
iret
cmp
cmp
cmp
jne
sahf
cmp
cmp
cmp
cmp
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
lahf
cmp
stc
cmp
xchg
ds
std
or
and
daa
aas
dec
aas
pusha
aas
cmpl
add
add
add
dec
xor
jg
xchg
xor
xor
xor
jg
cmpsb
xor
xor
xor
xor
jb
mov
xor
xor
xor
push
xor
xor
xor
xor
xor
xor
xor
xor
xor
call
ss
ss
mov
mov
out
sub
jbe
xchg
aaa
aad
daa
cmp
cmpb
cmp
cmp
cmp
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
hlt
cmp
push
ds
ds
aas
cmp
gs
xchg
mov
aas
add
add
add
mov
add
inc
xor
xor
sahf
xor
xor
xor
movsl
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
mov
ss
xorb
ss
repz
aaa
sbb
push
xorl
aaa
stos
aaa
shll
aaa
sbb
cmp
cmp
cmp
jl
mov
cmp
cmp
cmpb
cmp
cmp
cmp
imul
mov
std
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
les
xchg
test
aas
imul
add
add
add
mov
xor
xor
mov
xor
xor
xor
imul
xor
xor
test
xchg
xor
xor
xor
jo
jp
lea
xlat
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
fnsave
xor
inc
ss
ss
fnsave
and
pop
aaa
movsb
aaa
mov
cmp
mov
cmp
pop
cmp
mov
cmp
cmp
test
cmp
jnp
sarl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
pop
imul
ds
aas
dec
aas
xchg
aas
in
stc
aas
