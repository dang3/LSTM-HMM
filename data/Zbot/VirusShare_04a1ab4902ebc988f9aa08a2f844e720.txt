hlt
push
imul
and
cli
into
mov
fdiv
jle
aaa
loop
adc
mov
sub
push
pushl
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
in
sub
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
mov
mov
mov
pusha
call
add
mov
scas
in
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
add
or
mov
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
and
adc
sbb
pusha
daa
mov
ret
in
icebp
mov
in
sub
push
push
pushl
pushl
pushl
call
add
pop
lea
pop
mov
ret
add
push
or
popa
xchg
cmpsb
xor
scas
out
add
adc
push
ficomps
addb
arpl
insb
lahf
pop
aad
push
jae
pop
adc
cmp
in
sub
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
out
inc
pop
xor
insb
push
xor
xchg
out
adcl
push
lea
push
subl
lea
push
subl
lea
push
mov
push
subl
mov
add
call
pop
mov
xor
adc
sub
mov
popl
mov
lea
mov
mov
sub
push
pop
xor
cmp
je
sub
lea
pushl
pop
dec
lea
push
popl
pushl
lea
pop
repz
jmp
mov
pop
ret
add
data16
jg
xor
xorl
aas
pop
ds
outsb
pusha
add
popf
add
sub
mov
imul
sbb
paddsb
das
add
and
xor
das
ljmp
mov
enter
cmp
push
mov
out
out
scas
mov
adc
mov
sub
push
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
insl
xor
imul
xchg
pop
cmpsb
push
ret
adc
stos
jns
adc
in
sub
ficoml
jo
ljmp
pop
pop
pop
push
mulb
in
enter
dec
movsl
xchg
push
sbb
push
clc
sbb
in
push
push
pushl
pushl
push
call
add
pop
lea
pop
mov
ret
rorl
cmp
int3
gs
jmp
ret
mov
clc
sbb
sub
lods
mov
shl
pushl
pop
lea
mov
fisubl
add
mov
and
add
and
add
and
add
and
add
and
add
add
stos
and
add
add
and
add
add
mov
and
add
add
xor
add
or
add
add
add
and
add
ljmp
add
and
add
add
add
and
add
and
add
and
add
add
pusha
and
add
and
add
and
add
add
mov
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
pusha
and
add
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
stos
and
add
add
and
add
add
mov
and
add
add
xor
add
or
add
add
add
and
add
ljmp
add
and
add
add
add
and
add
and
add
and
add
add
pusha
and
add
and
add
and
add
add
mov
add
add
add
dec
add
je
jb
arpl
jae
gs
jo
add
gs
inc
add
outsb
arpl
dec
outsl
add
roll
dec
gs
jo
imul
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
insb
jae
jb
jo
inc
add
add
je
je
jb
jne
dec
outsb
outsw
inc
add
add
je
jb
jbe
push
jns
gs
add
add
fs
je
insl
push
add
inc
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
push
add
add
imul
jb
je
arpl
add
rolb
dec
gs
jo
gs
jb
jns
add
je
imul
bound
gs
add
sbb
push
jb
je
inc
outsl
outsb
jae
insb
gs
add
inc
jbe
outsb
je
add
add
gs
inc
imul
jae
jb
outsb
push
add
jae
inc
outsl
jo
inc
imul
jb
je
inc
outsl
outsb
jae
insb
gs
add
add
fs
imul
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
push
dec
inc
dec
xor
cs
insb
add
add
inc
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
push
imul
jb
gs
add
inc
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
dec
inc
dec
inc
dec
inc
push
cs
insb
add
pop
add
addr16
outsl
js
add
add
arpl
inc
jae
jb
outsl
jb
pop
add
addr16
outsl
js
add
add
jo
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
or
push
gs
jb
inc
jb
outsl
jb
add
inc
jb
dec
jae
add
push
add
outsb
fs
push
push
add
outsb
fs
push
add
inc
push
inc
jae
jb
outsl
jb
add
inc
jb
dec
jae
add
pop
add
addr16
outsl
js
add
push
dec
push
cs
insb
add
add
add
add
xor
add
jo
add
pop
add
sbbb
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
popa
add
test
add
cmp
add
loopne
add
mov
add
cwtl
mov
add
push
add
add
call
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
lods
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
stos
lods
mov
mov
cltd
pop
xchg
xchg
xchg
or
jg
jnp
jnp
lods
lods
lods
add
cmpsl
cmpsl
push
mov
mov
mov
ret
ret
lret
lret
into
int3
rcl
in
rcl
shl
iret
rcl
hlt
int
int3
hlt
enter
enter
in
mov
mov
lods
lods
lods
lea
fwait
cltd
and
jne
pop
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
mov
lret
lret
rcl
sar
xlat
xlat
xlat
std
xlat
fcomp
fcom
fdivr
aad
dec
ror
dec
into
int3
aam
ror
sar
mov
mov
scas
iret
movsl
mov
xchg
das
das
and
add
push
add
add
add
add
add
add
add
add
lods
stos
stos
add
lods
scas
sbb
mov
jnp
mov
sar
dec
lret
lret
rcl
aam
xlat
xlat
call
fcom
call
aad
into
int
dec
int
call
aam
dec
int3
int3
inc
sarl
mov
scas
scas
std
cmpsl
test
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
push
add
or
or
sbb
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
enter
int3
call
rcl
fcom
call
fcom
call
aam
dec
into
int
lret
dec
into
int
vshufpd
sarl
mov
mov
cmpsl
test
jmp
fwait
cltd
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
arpl
push
imul
pop
pop
pop
fs
push
sbb
or
push
sbb
aaa
cmp
adc
pop
pop
pop
add
add
add
add
fs
mov
pop
mov
mov
mov
mov
mov
rol
ret
dec
enter
rcl
call
aam
call
aam
call
ror
dec
leave
enter
inc
mov
mov
lods
scas
scas
jmp
pushf
popf
xchg
cwtl
xchg
lcall
addl
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
arpl
push
push
push
add
jo
jge
jl
jg
jge
jo
jo
popa
bound
push
push
push
xchg
cmp
inc
inc
mov
jo
outsb
nop
arpl
pusha
inc
inc
inc
xor
add
add
add
add
movsb
movsb
movsl
add
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
lret
leave
leave
leave
inc
enter
ret
mov
mov
lods
scas
scas
jmp
lcall
xchg
xchg
xchg
xchg
xchg
cltd
cltd
fwait
in
addl
push
or
add
add
add
add
add
add
add
add
add
add
add
outsl
jo
add
pop
or
jnp
nop
fcoms
addl
jp
jnp
outsb
outsl
jo
addr16
fdivs
jne
jge
jg
jp
jns
gs
inc
inc
cmp
pop
sbb
adc
adc
stos
lods
lods
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
test
cmpsb
lcall
xchg
xchg
incl
addb
xchg
xchg
xchg
mov
mov
xchg
mov
jns
jns
xor
xor
add
add
add
add
add
add
add
add
add
add
mov
pop
push
addb
in
mov
incl
mov
std
mov
jge
jb
jo
jae
je
jle
jge
test
jnp
addr16
cmp
es
push
jge
jge
fwait
cltd
cltd
lea
test
lods
sti
lods
lods
stos
lods
lods
lods
test
test
mov
fwait
cltd
xchg
xchg
xchg
decl
jge
jns
jns
jl
jns
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
scas
stos
xchg
sbb
add
add
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
xchg
std
xchg
xchg
xchg
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
xchg
pop
push
or
inc
inc
dec
insl
insl
insb
jl
test
leave
lcall
out
lcall
std
mov
mov
xchg
mov
lea
lcall
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
lods
cmpsb
stos
add
pop
adc
cmpsl
scas
call
fwait
xchg
cwtl
incl
xchg
decb
xchg
xchg
popf
sahf
popf
std
mov
mov
xchg
in
nop
nop
xchg
in
xchg
push
jne
femms
dec
add
or
inc
sub
sub
dec
dec
data16
jo
mov
xchg
rclb
xchg
std
mov
call
mov
test
stos
cmpsl
stos
pushl
movsl
scas
mov
xchg
stos
std
rorl
mov
mov
ljmp
mov
add
pop
adc
mov
jmp
popf
cwtl
pushf
incl
mov
call
xchg
nop
xchg
xchg
xchg
pushf
sahf
pushf
mov
stos
test
mov
xchg
xchg
fstpt
jnp
push
push
push
outsl
dec
dec
dec
pop
popa
bound
jb
mov
lahf
test
int
nop
xchg
in
xchg
xchg
testl
mov
jmp
lahf
pushl
imul
mov
aaa
jge
mov
jbe
mov
movsl
mov
mov
lods
stos
mov
mov
add
mov
add
pop
adc
mov
ljmp
popf
decl
nop
call
xchg
xchg
call
xchg
xchg
lcall
sahf
lahf
lahf
mov
movsb
movsl
stc
cwtl
cltd
lcall
xchg
xchg
les
lcall
lea
stc
xchg
xchg
std
xchg
je
lcall
jmp
inc
jnp
mov
jns
mov
jb
mov
insl
ljmp
adc
stos
or
ljmp
jle
mov
mov
stos
pushf
movsb
movsl
mov
add
mov
add
pop
adc
mov
lcall
xchg
xchg
call
fwait
cltd
lcall
lahf
mov
lcall
xchg
cwtl
call
cwtl
nop
call
xchg
lcall
fwait
mov
cld
popf
mov
xchg
push
xchg
push
jge
cwtl
dec
js
fwait
cmp
cltd
sub
popf
pop
addr16
sahf
pop
jmp
adc
test
pcmpgtw
lods
pcmpgtw
scas
adc
mov
imul
mov
insb
mov
lcall
lods
scas
lods
scas
movsl
movsl
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
lcall
xchg
xchg
lcall
sahf
lahf
jmp
movsl
movsb
jmp
cwtl
xchg
decl
mov
mov
xchg
js
fwait
jno
fwait
arpl
call
sub
call
or
pop
call
add
mov
adc
stos
sbb
mov
outsb
pushl
sbb
jae
mov
and
shlb
inc
aas
test
ret
mov
scas
scas
mov
mov
mov
add
add
add
mov
scas
add
pop
adc
lods
mov
shlb
lcall
mov
cmpsb
jmp
stos
test
lcall
jle
decl
inc
outsl
decl
arpl
mov
pop
incl
add
push
incl
add
xchg
add
xchg
add
cltd
add
mov
or
pushl
daa
ja
mov
sub
mov
sub
inc
sub
leave
xor
leave
jg,pn
enter
leave
lods
inc
mov
mov
mov
mov
movsb
add
push
push
adc
test
ljmp
popf
jmp
stos
test
stos
lods
lods
ljmp
mov
ljmp
mov
mov
xchg
incl
or
push
incl
add
addl
incl
push
decl
add
xchg
add
cltd
add
lahf
add
add
lods
adc
mov
aaa
cmp
enter
leave
cmp
iret
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsb
movsl
mov
add
mov
add
add
add
mov
dec
dec
adc
cmpsl
ljmp
popf
jmp
lods
scas
pushl
mov
pushl
mov
ljmp
decl
or
mov
pop
decl
or
xchg
push
incl
add
mov
push
call
add
pushf
add
mov
add
lods
add
mov
jno
ret
dec
inc
mov
int3
inc
mov
roll
call
dec
mov
xlat
dec
xchg
call
dec
xchg
fisttpl
fisttpl
ficoml
call
test
mov
mov
movsl
movsb
movsl
arpl
mov
add
add
add
cltd
xchg
lcall
jns
jl
sahf
mov
lcall
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsl
mov
decl
pusha
decl
adc
pop
decl
add
add
xchg
add
popf
add
mov
add
stos
add
mov
arpl
shll
call
push
cwtl
call
push
lcall
pop
popf
fists
fistps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
test
cmpsl
jne
lahf
mov
add
inc
inc
adc
ja
sahf
fwait
lahf
jmp
lahf
lcall
mov
mov
mov
mov
mov
mov
mov
ljmp
inc
je
xchg
and
xchg
and
call
and
xchg
sbb
or
decl
add
cltd
add
mov
add
lods
add
mov
data16
mov
xor
call
pop
lcall
bound
in
test
in
cmpsl
jmp
gs
jmp
addr16
jmp
xchg
mov
cmpsb
test
lahf
mov
mov
add
add
add
inc
aas
adc
jae
cltd
xchg
cwtl
call
lahf
popf
sahf
ljmp
mov
pushl
mov
mov
mov
mov
jg
xchg
sub
cltd
xor
lcall
call
or
xchg
add
lcall
jmp
add
mov
pushl
adc
roll
fldt
jmp
jo
jmp
jo
call
jae
in
jne
jmp
mov
in
je
out
jbe
in
je
jmp
mov
mov
cmpsb
cmpsb
lcall
mov
add
add
add
jle
cmp
aas
adc
outsl
js
lea
popf
fwait
pushf
pushl
mov
mov
mov
mov
mov
movsl
lods
lcall
outsl
lcall
aaa
jae
sahf
xor
lcall
call
add
movsb
add
test
add
mov
data16
mov
sbb
ficoml
jecxz
mov
jmp
jge
jmp
mov
out
cmpb
repnz
push
test
jmp
mov
inc
mov
stos
cmpsl
popf
sahf
pushf
daa
lahf
lahf
sahf
add
add
add
add
aaa
cmp
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
mov
ret
inc
ret
mov
mov
mov
cmp
movsb
inc
jle
movsl
inc
jge
movsb
aaa
js
lcall
lcall
pop
ljmp
add
add
mov
add
shll
cmp
movsw
ljmp
out
lea
push
xchg
sar
pop
push
xchg
ret
push
xchg
xchg
clc
mov
out
pop
fnstenv
ret
clc
stos
stos
test
xor
pushf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
imul
mov
mov
mov
mov
sar
ret
inc
inc
mov
mov
jle
lcall
dec
cmp
movsl
xor
lcall
add
mov
add
lods
add
mov
arpl
mov
add
movl
call
xchg
vlddqu
push
lcall
negl
lret
cli
lahf
into
cli
sahf
int3
cli
cwtl
lret
push
xchg
ret
mov
inc
enter
mov
mov
nop
popl
fwait
lcall
cmp
add
das
or
cmp
push
dec
dec
jecxz
pop
popa
call
mov
mov
mov
sar
ret
inc
leave
inc
mov
mov
ljmp
xchg
movsl
sub
cltd
or
pushf
add
mov
add
mov
popa
mov
add
enter
rorl
je
loopne
xchg
in
lea
push
cmpsb
into
push
cmpsb
int
clc
cmpsb
into
sti
test
sar
cld
cmpsl
sar
std
stos
sar
stos
iret
cmpsl
sar
negl
lret
leave
lret
std
mov
mov
mov
xchg
xchg
add
fwait
lcall
xor
or
bound
push
xlat
je
jb
mov
mov
ret
sarl
ret
inc
dec
enter
rol
mov
cmpsl
jmp
push
mov
scas
dec
test
mov
add
movsb
add
add
mov
fs
mov
add
into
add
fadds
je
ficoms
jl
out
pop
cmpsl
push
lahf
lret
cld
scas
sar
cld
mov
cli
mov
cli
scas
sar
cld
mov
mov
cld
mov
std
mov
mov
cld
mov
push
movsl
jmp
mov
dec
enter
mov
fisubl
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsl
jo
mov
xlat
fsubr
not
rcl
std
lret
dec
leave
lret
dec
lret
lret
lret
enter
lahf
lods
ljmp
push
mov
lods
jg,pt
mov
add
lods
add
mov
arpl
mov
add
roll
jo
add
loopne
jae
ljmp
sti
scas
aad
mov
std
mov
mov
std
mov
xlat
std
mov
fdivr
divl
call
lret
int
mov
mov
xchg
or
add
add
xor
xor
add
add
pop
pop
pop
or
enter
jecxz
pop
out
call
test
in
leave
fucom
fcmovnu
fcomp
fdivr
fdivr
int
sar
mov
push
ljmp
sub
mov
add
mov
mov
add
lret
add
add
fldl
ja
in
js
out
das
xchg
clc
mov
cld
mov
loope
inc
loope
inc
loop
inc
fdivrp
inc
loopne
dec
dec
dec
fdivrp
inc
fdivrp
std
leave
loopne
sti
mov
lret
lret
mov
mov
xchg
adc
add
add
std
incb
incb
std
std
incb
hlt
div
or
out
jmp
in
in
out
sub
out
out
dec
call
jmp
out
in
out
fcmovnu
fucomp
les
xchg
cmpsl
cmp
mov
add
test
popa
pushl
add
lds
imul
add
xlat
add
add
ljmp
cli
mov
loop
cld
int3
in
dec
in
dec
in
dec
in
std
int3
loope
dec
loop
shl
std
shl
shl
std
shl
sti
out
mov
xlat
inc
cmpsb
test
xchg
xchg
xchg
sbb
lcall
std
std
add
std
add
clc
testl
lock
out
lock
pop
out
icebp
lock
out
in
pop
fsubp
loop
mov
xchg
sti
lahf
es
push
pop
jmp
pop
pushl
add
movl
jb
flds
jne
jecxz
jnp
jmp
jl
negb
cld
mov
shl
shl
std
shl
std
shl
call
jecxz
aam
out
std
fsubr
fucompp
std
iret
loopne
repnz
aad
in
lret
repz
xchg
xchg
and
cwtl
xchg
add
sti
add
std
stc
add
sti
clc
add
cmc
repz
aad
xor
mov
xchg
negb
add
add
scas
add
mov
add
lret
call
add
faddl
ja
out
jns
out
sbb
cld
ret
fdivrp
std
xlat
ljmp
fldlg2
std
fldl2e
std
fucomp
fucomi
fsubr
std
fsubrp
std
fsubrp
std
fucomip
std
aam
push
ret
out
iret
ror
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsl
jo
add
add
mov
loopne
add
enter
mov
cltd
repnz
and
sahf
add
add
mov
mov
add
into
add
aam
jno
fiadds
je
call
sub
cld
shr
std
fucomip
std
fsubr
fsubr
std
aad
std
aam
cld
shl
cli
shl
clc
int
push
int
push
rcl
out
mov
xlat
sti
mov
mov
cltd
cltd
cltd
cmp
fwait
add
xlat
add
enter
mov
mov
jmp
add
mov
mov
add
rolb
outsb
fadds
jae
loop
jp
jmp
aaa
xchg
sti
cwtl
enter
loope
cld
lret
cli
stc
rcr
idivb
push
mov
iret
out
mov
lret
call
rcl
ljmp
imul
cmc
loopne
mov
mov
xchg
add
add
add
int3
lret
add
sarl
lahf
xor
pop
ljmp
add
mov
add
dec
pop
jno
rorb
jne
fisttpl
ja
loope
cmp
dec
xchg
call
scas
lret
mov
out
enter
cld
fildll
neg
mov
enter
int
into
fsubp
iret
aad
loopne
fcmovb
out
loope
in
in
test
in
lock
ljmp
push
stos
lods
lods
adc
cmpsl
test
add
ret
rolb
ret
rol
pop
mov
stos
aam
dec
jg
popf
sbb
test
insb
scas
and
mov
jns
mov
dec
test
ret
stc
leave
arpl
hlt
rorl
mov
mov
enter
lret
rcl
int3
mov
iret
shlb
fcom
aad
fcmovu
loopne
gs
in
out
call
xor
div
mull
repnz
fstp
or
mov
into
add
add
add
mov
rolb
mov
test
push
lock
sbbl
sarb
mov
ret
mov
cmpsl
enter
lret
ret
into
enter
into
into
addr16
iret
push
rcl
rorl
xlat
inc
aam
xor
daa
xlat
sbb
adc
in
push
loopne
jecxz
call
repnz
add
sti
testl
incl
std
incl
mov
mov
shrb
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
xor
int
daa
lret
rcl
and
rcrb
rcl
rcll
rcl
aam
rcl
push
rcr
xlat
add
fstp
add
add
in
add
in
jmp
lret
fcom
add
std
add
mov
add
ret
ret
les
rol
sub
mov
mov
push
rol
or
enter
enter
lret
add
aad
add
aam
rcl
aam
aam
aam
aad
xlat
add
fsub
add
fiaddl
loopne
loop
fiadds
in
out
lock
icebp
add
incb
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
ret
les
ret
mov
mov
mov
ja
stos
test
cmpsl
test
and
add
add
add
add
add
add
add
add
mov
push
rol
mov
into
into
iret
jmp
rcl
cmc
aam
aam
ror
into
cli
lret
int
stc
int3
int3
lret
hlt
mov
mov
iret
lods
lods
lods
fwait
xchg
xchg
xchg
dec
aas
ds
add
sbb
add
adc
add
push
add
add
cmpb
inc
inc
aas
add
push
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
mov
enter
sar
call
call
rcl
dec
iret
into
dec
lret
mov
mov
cld
lods
lods
stos
icebp
cltd
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jae
je
jae
gs
dec
dec
dec
cmp
sub
sub
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
int3
lret
call
rcl
call
rcl
dec
lret
lret
sarl
ljmp
sahf
lahf
xchg
cwtl
xchg
jmp
jno
xchg
adc
add
xor
add
add
add
add
addb
test
jns
push
push
pop
pop
pop
movsb
push
push
push
stos
push
insl
insl
push
pop
pop
cmp
cmp
pop
jo
outsl
adc
mov
fstpt
mov
ret
mov
mov
mov
jmp
fwait
pushf
call
xchg
xchg
fwait
lcall
dec
dec
dec
dec
movups
xor
add
and
add
adc
add
pop
fwait
fwait
lcall
xchg
cltd
fcoml
addl
jmp
js
sarb
jnp
jp
jp
je
jae
push
push
push
cmp
aaa
sahf
pushf
sahf
mov
lods
scas
repz
lods
lods
sti
scas
scas
scas
std
test
test
call
xchg
call
mov
scas
jmp
lods
scas
leave
movsb
movsb
movsb
cltd
jb
jae
adc
adc
add
add
add
add
outsb
insl
outsl
pop
mov
mov
test
std
nop
nop
nop
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
and
inc
inc
inc
inc
dec
jo
jo
mov
cwtl
cltd
cltd
repnz
xchg
xchg
std
mov
call
popf
sahf
ljmp
scas
std
mov
mov
stc
mov
mov
movsl
movsb
cmpsl
pop
addl
add
popa
popa
popa
or
lods
mov
cmpsl
lahf
movsl
decl
mov
nop
mov
std
sahf
lahf
lahf
sti
lahf
mov
lcall
push
push
jo
pop
pop
outsl
insl
insl
outsb
xchg
subl
mov
lcall
mov
pushl
pop
mov
jnp
mov
lods
stos
insl
test
add
add
add
add
pop
or
mov
in
mov
nop
call
xchg
cwtl
call
cwtl
lcall
lahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orl
cld
xchg
pop
cmp
dec
jp
movsb
inc
js
scas
aaa
js
mov
jb
mov
outsl
ljmp
sbb
pop
mov
mov
jle
mov
add
add
add
pusha
pop
pop
or
mov
in
movsb
cmpsl
lcall
popf
lahf
jmp
lahf
mov
decl
addl
xchg
jb
cld
xchg
pop
test
xchg
dec
jp
nop
cmp
xchg
sub
xchg
sbb
adc
mov
push
push
pushl
sbb
mov
and
pop
xchg
mov
lods
scas
xchg
lahf
popf
popf
adc
add
add
pusha
pop
pop
or
stos
mov
stos
mov
mov
ljmp
cmpsl
cmpsl
lcall
pop
jnp
mov
imul
sub
push
pop
decl
or
mov
push
call
add
fwait
add
test
arpl
mov
jb
mov
sub
jle
enter
lret
xor
inc
test
scas
movsb
cmpsl
test
sbb
add
add
pop
pop
pusha
or
movsl
test
test
cmpsl
jmp
scas
scas
pushl
mov
jmp
inc
jb
mov
pop
decl
or
test
push
decl
add
xchg
add
lahf
add
movsl
add
mov
insl
inc
ss
inc
mov
rolb
roll
aad
xchg
fmuls
call
arpl
stc
mov
mov
mov
std
incb
add
add
popa
popa
pop
or
popf
mov
ljmp
mov
mov
mov
ljmp
push
jnp
sbb
popa
decl
or
decl
add
mov
add
lods
add
mov
dec
xchg
fcomps
fcompl
ficomps
jmp
pop
mov
fisubrs
lret
test
cld
mov
mov
cmpsb
lods
cmpsl
xor
add
add
dec
pop
jle
jl
pushf
xchg
lcall
lods
mov
mov
mov
mov
mov
mov
sahf
fs
xchg
sub
insb
call
adc
xchg
add
sahf
add
cmpsl
add
scas
add
mov
xor
fisubl
jmp
insb
stos
jmp
outsb
stos
jmp
jb
in
jb
jmp
jns
call
cmpsl
mov
shrl
jg
add
add
add
dec
pop
insl
insl
push
mov
xchg
pushl
mov
mov
mov
je
lcall
cmp
pushf
sub
call
add
mov
add
mov
inc
or
xlat
inc
xchg
jmp
jp
jmp
test
push
xchg
out
xchg
mov
test
push
cltd
fwait
lcall
sub
push
push
push
dec
pop
pushw
loopne
mov
mov
mov
ret
mov
sahf
jmp
inc
jg
mov
push
pop
jmp
add
mov
gs
mov
push
jne
loope
mov
push
xchg
push
cwtl
push
xchg
stc
cltd
leave
stc
fwait
lret
push
xchg
jmp
lods
inc
mov
stos
popa
mov
add
add
inc
inc
pop
pop
pop
pop
fisttpl
mov
mov
ret
inc
ret
mov
test
movsl
pop
xchg
stos
dec
test
mov
add
test
pop
pushl
add
lret
add
fsubs
cmp
jp
push
movsb
int
imulb
into
cld
stos
sar
sti
stos
sar
cld
lods
sar
stc
cmpsb
int3
jmp
mov
inc
rol
stos
test
popf
or
add
add
dec
dec
dec
aaa
jb
je
test
int
out
into
int3
cmc
leave
lret
enter
mov
mov
mov
stos
pusha
mov
lods
inc
jle
mov
add
mov
arpl
ret
dec
add
fildl
ljmp
cld
mov
cld
mov
fcos
std
mov
std
mov
sar
jmp
enter
repz
lods
mov
add
add
add
add
or
aad
dec
jecxz
loope
ffree
fcmovnu
fcmovnu
fcom
out
shll
test
jae
cmpsb
push
pop
ljmp
add
lret
call
add
or
lock
mov
sti
loope
std
enter
leave
fdivrp
std
enter
leave
loopne
std
fdivr
lock
leave
divb
popf
popf
sbb
add
add
std
incb
incb
jmp
in
sbb
in
jmp
call
in
xchg
mov
mov
mov
add
mov
inc
add
iret
add
faddl
jbe
call
insb
mov
sti
ret
sti
shl
std
shl
std
shl
call
out
call
out
jmp
push
enter
int3
sar
mov
mov
add
incb
std
incb
std
cld
pop
push
mov
pop
xchg
lahf
or
test
pop
pushl
add
rolb
jno
fiadds
jbe
out
and
cld
shl
std
fld1
cld
xlat
jmp
cld
fsubr
cld
aam
push
xlat
jmp
rcl
sti
mov
popf
sahf
das
add
add
int3
int3
int
mov
bound
ljmp
addr16
add
add
loope
jns
out
das
xchg
push
pushf
enter
loop
stc
lret
cmc
hlt
ret
aad
icebp
ret
std
out
ret
in
in
in
in
fsubrp
mov
test
add
add
add
push
mov
jb
or
imul
pop
jno
int3
and
sub
pushf
clc
loop
mov
out
loop
lret
jmp
fidivrs
lret
leave
fmulp
sarl
jecxz
fistpl
in
out
jns
rcl
dec
mov
add
add
mov
inc
mov
mov
ljmp
xchg
fidivrl
jle
rol
lods
mov
lahf
mov
sarl
leave
jge
aam
into
pop
rcl
iret
dec
xlat
cmp
loopne
das
in
fsubl
jecxz
repnz
in
jmp
fcmovu
faddl
std
add
add
add
incb
mov
mov
outsb
mov
stos
jns
mov
mov
mov
mov
xor
leave
leave
leave
and
aam
pop
mov
rcl
or
loopne
or
into
int
lods
stos
stos
add
std
incb
std
add
add
add
into
into
pextrw
or
int
int
stos
lods
lods
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
cltd
lcall
ret
enter
enter
mov
sarl
mov
insb
lods
stos
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
stos
stos
stos
add
mov
jmp
aam
std
rcl
sar
into
into
int
mov
mov
test
test
sbb
push
add
add
add
add
add
add
add
add
jae
jno
push
dec
dec
das
das
cs
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int3
int
aad
aad
into
into
int
enter
mov
lods
scas
lcall
mov
push
add
add
add
add
jne
jae
xchg
adc
outsl
outsb
ret
popa
mov
data16
outsl
insl
outsb
jb
popa
popa
cmp
pop
sbb
mov
in
mov
mov
mov
stos
lods
lcall
xchg
xchg
lcall
xchg
cwtl
lds
jb
daa
es
pop
add
add
jae
jae
pushf
xchg
fwait
mov
test
mov
xchg
or
addb
push
dec
inc
mov
fwait
into
mov
lahf
mov
decb
lea
ljmp
mov
in
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
lods
movsb
test
cld
mov
mov
xchg
xchg
xchg
cld
pushf
sahf
sahf
cmc
lcall
mov
push
push
imul
jge
lea
xchg
notl
mov
pushl
push
mov
stos
mov
test
stos
lods
add
add
add
cmpsl
mov
mov
lods
cld
xchg
xchg
xchg
call
cltd
cltd
lcall
lcall
xchg
mov
loope
jbe
out
xchg
arpl
std
lcall
ljmp
and
mov
insb
pushl
sahf
scas
lock
mov
imul
int3
add
xchg
pop
scas
cmpsb
stos
test
popf
popf
popf
jmp
mov
xchg
decl
js
nop
inc
jae
lea
imul
sbb
pop
lcall
or
scas
sbb
je
mov
sub
les
test
rcrb
subl
jae
push
movsb
pushf
mov
cld
test
scas
scas
ljmp
xchg
decl
or
xchg
push
decl
add
mov
adc
ret
dec
aas
mov
iret
inc
mov
aad
call
dec
xchg
dec
cwtl
mov
mov
mov
movsb
movsb
movsb
push
add
add
push
xchg
xchg
test
lahf
movsl
cld
lods
lods
scas
pushl
mov
ljmp
ss
nop
pop
decl
or
xchg
add
mov
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsl
call
pushf
mov
test
cmpsb
cmpsb
pop
add
add
bound
adc
sahf
pushf
lcall
mov
mov
lcall
xor
cltd
and
call
add
stos
add
mov
xor
call
jnp
out
jge
out
jge
ficompl
mov
mov
add
add
adc
push
cmp
mov
mov
ret
ret
mov
jmp
jle
sahf
and
pop
jmp
add
ret
fisttpl
in
mov
cmc
xchg
clc
xchg
clc
xchg
jmp
movsl
inc
mov
movsb
sub
aas
inc
aas
adc
push
xchg
xchg
cld
ret
inc
ret
mov
cwtl
ljmp
sbb
movsl
add
mov
gs
add
aam
jns
ljmp
cli
stos
iret
sti
lods
sar
std
scas
sar
cld
lods
iret
jmp
enter
rcr
movsb
movsb
ds
std
incb
xor
xor
scas
mov
mov
mov
aam
rcl
out
leave
lret
mov
mov
jmp
add
ret
add
aam
jno
out
xchg
clc
pop
cld
mov
cld
ret
cld
ret
fdivr
inc
fcos
icebp
mov
ret
test
dec
jg
addb
add
add
in
or
jmp
out
outsb
fcmovu
fldenv
movsb
outsb
ljmp
add
lret
add
fiadds
ja
lock
xchg
cld
mov
dec
in
call
out
std
shl
std
aad
call
out
hlt
fcos
rol
int
lods
lods
lods
popa
addb
add
incl
std
push
int
shrl
lahf
sbb
lods
add
mov
add
loope
js
cmc
push
cmpsb
cld
enter
aad
cld
out
std
aad
cld
aad
sti
shl
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
les
mov
push
arpl
mov
push
je
fstpl
jg
in
imul
out
mov
iret
repnz
loope
lret
aad
ljmp
scas
push
lcall
add
popf
stos
xchg
inc
and
ret
int3
lret
mov
xlat
mov
lret
int
xlat
lret
iret
pop
xlat
dec
jecxz
loopne
out
out
in
in
in
sbb
rol
add
mov
cmp
movsb
lods
arpl
mov
ret
lds
int3
sbb
fstp
bswap
into
int3
or
aam
push
std
std
incl
addl
add
stos
incb
rol
add
incb
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
add
add
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
and
inc
repz
test
arpl
pop
mov
das
push
fsub
jnp
cmp
imul
imul
jge
mov
fisttpll
aad
xor
repz
test
pop
mov
push
movsl
xlat
jecxz
or
mov
stc
sub
cwtl
pop
sbb
mov
insl
lds
cmp
jp
and
adc
cltd
inc
jb
adc
cwtl
das
divl
mov
dec
or
cmp
insb
popf
pop
jnp
lea
cltd
xor
adc
test
xor
xchg
push
insl
xchg
hlt
mov
pop
insl
add
cli
adc
lea
jge
test
in
add
pop
xor
insb
add
push
out
xchg
and
add
fsts
and
sbb
inc
xlat
jle
in
outsl
lahf
pop
cmc
rclb
jl
and
and
ja
ds
cwtl
mov
repz
fidivrl
or
les
cs
mov
push
inc
fidivs
xor
test
lcall
out
and
aaa
dec
insl
add
dec
insb
add
mov
add
test
aas
and
lds
in
test
jecxz
les
add
xor
and
test
cmpsb
cmpsb
out
fcom
pop
hlt
or
add
add
mov
mov
adc
data16
xor
cmp
push
jmp
test
lret
mov
jecxz
das
adc
cwtl
andl
mov
mov
cmp
lahf
cmp
lret
sti
cwtl
cmp
leave
sbb
in
ljmp
mov
add
add
pop
mov
and
cmp
pop
stos
ss
mov
xor
add
sbb
pop
mov
cmp
aam
mov
rcl
fucomip
xor
rolb
jo
inc
popf
xor
jne
mov
adc
jo
sbb
dec
cmp
into
insb
imul
inc
aas
addr16
jo
add
xchg
push
pop
mov
int
loop
mov
push
dec
hlt
pop
repnz
inc
cmp
ja
call
out
leave
adc
jne
sbb
and
sub
inc
nop
mov
ret
stc
cmp
pop
adcb
ss
test
sahf
xor
mov
fldt
rorb
jb
sub
stc
nop
fidivrs
cld
mov
pop
scas
xor
sbbl
push
xor
cmp
push
ljmp
jno
sub
fnsave
es
cld
xchg
push
pushf
lods
inc
into
jb
mov
out
lret
bound
lds
iret
testb
je
push
out
dec
xchg
pop
sahf
imul
sbb
inc
fisubrl
mov
inc
mov
mov
fnstsw
movzwl
test
xor
movsb
cmp
sub
fnstenv
scas
dec
loopne
sub
mov
push
lods
lods
push
xchg
jmp
push
jmp
sub
pop
movsl
dec
loopne
jle
mov
rcrl
lods
inc
dec
repnz
and
bound
shr
repnz
pop
out
adc
lahf
inc
call
es
insl
mov
mov
rorb
cli
cmp
shlb
pop
sbbl
data16
ss
or
mov
fldcw
rorl
fdivl
sub
pop
stos
cli
xchg
fdivrl
std
scas
std
sbb
add
int
and
jmp
jbe
push
test
jb
es
add
jb
fdivl
xchg
stc
jno
mov
adc
testb
pop
scas
inc
inc
xchg
loopne
fadd
pop
push
mov
movsb
cmp
adc
mov
dec
loope
aad
pop
add
adc
push
or
jbe,pt
in
mov
ret
imull
jnp
inc
out
xchg
dec
leave
pusha
jnp
shrl
fwait
jg
roll
jo
xor
call
test
lock
lret
xchg
pop
bnd
repz
xchg
sub
jnp
push
dec
sbb
jbe
lock
mov
cmpsl
ds
std
arpl
sub
test
leave
xor
cli
xchg
popa
clc
push
mov
dec
loope
inc
pop
insl
push
movsl
lcall
sub
orl
data16
scas
inc
add
in
test
stos
or
lock
mov
xchg
pop
scas
imul
repnz
insl
add
sub
sahf
pusha
lods
xchg
sub
mov
mov
or
jecxz
in
std
xchg
jmp
xor
pop
imul
test
outsb
bound
std
xchg
jmp
aad
imul
mov
loop
sbb
imul
dec
fs
in
rcrb
cmp
data16
xor
in
mov
mov
lret
shrl
mov
scas
inc
jne
fnsave
test
push
out
dec
dec
loop
xor
popa
cmpsb
sbb
cmp
dec
out
jp
pop
lock
mov
push
out
aas
jnp
ret
pop
push
sbb
xor
dec
outsl
push
jl
iret
data16
dec
in
push
lea
cltd
outsl
push
int3
mov
mov
cmpl
outsb
sahf
mov
adc
push
lea
cmp
pop
push
int
iret
mov
inc
call
aaa
jnp
data16
pop
repnz
mov
movsl
cmp
ss
ss
cmpsl
sarl
stc
nop
jle
pop
imul
jecxz
jp
adc
pop
fnstenv
sti
xchg
je
sbb
fidivrs
fnstenv
ss
scas
push
in
fnstsw
testl
in
aad
out
ds
outsw
aaa
lods
inc
data16
hlt
call
xor
fs
jmp
aas
pop
hlt
insl
xor
fbstp
mov
outsb
in
test
xor
cmp
add
mov
cmp
aas
push
imul
out
cmp
cs
mov
jne
ljmp
ret
push
ljmp
adc
outsl
mov
sbb
inc
imul
push
ljmp
pop
jne
std
xchg
lock
mov
test
jl
lock
int
hlt
out
sub
sbb
fs
add
pop
call
or
repz
mov
xchg
mov
sbb
adc
sub
sub
push
ljmp
jmp
mov
fildll
dec
and
inc
or
jbe
addr16
mov
and
rcl
cs
lret
cmpsl
ds
xor
push
mov
mov
fisubrl
mov
sbb
pop
jae
pop
test
into
shlb
leave
sbbb
sbb
aam
imul
mov
lds
and
adc
push
sub
pushf
pop
insb
add
mov
fisttpl
das
cmp
sbb
mov
inc
subb
xlat
sti
dec
loop
stc
inc
icebp
stos
inc
and
in
andl
cmp
or
testl
lea
sub
adc
into
cld
and
es
push
ljmp
sti
xchg
leave
popf
mov
lret
in
insb
adc
pusha
negl
cmp
outsl
xor
mov
stc
nop
mov
xchg
or
sub
imul
push
mov
into
and
sbb
sub
cmp
testb
mov
cmpsb
call
or
and
sub
adcb
movsb
loopne
pop
sbb
lock
cmp
lock
cmp
addb
into
gs
ljmp
inc
lock
jmp
das
lret
mov
in
loop
sbb
jne,pt
jo
cmpsl
mov
fnstsw
push
psubsb
inc
sbb
fcomi
bound
insb
subl
mov
push
or
xor
sub
cmp
outsl
push
scas
cmpl
repz
or
cwtl
das
push
and
push
jge
dec
stos
jl
sub
enter
es
adc
push
dec
push
xchg
nop
pop
test
jmp
mov
or
dec
loopne
sub
shlb
adc
popa
clc
adc
adc
outsb
es
scas
push
mov
mov
loopne
clc
adc
dec
push
jne
test
mov
or
sbb
xchg
aaa
loop
test
aas
stos
subb
mov
inc
pop
mov
lcall
repnz
jmp
push
sti
test
cmpsl
dec
push
jae
les
push
mov
out
jbe
adc
xchg
sbb
sub
fxch
dec
clc
sub
push
sub
cmpsb
mov
mov
out
xchg
out
outsb
add
iret
fiadds
jno
stc
shlb
dec
es
cmp
mov
lahf
sub
sbb
pushf
add
leave
mov
jno
jle
js
mov
popf
loopne
pusha
add
loop
fnsave
xor
mov
push
stc
jge
push
test
mov
shll
sbb
movsl
sbb
dec
push
test
inc
lahf
sub
cmp
pop
shrb
imul
iret
jbe
out
je
out
dec
xchg
inc
cld
push
cmpsb
pop
xor
nop
inc
ret
icebp
sbb
movsl
fmul
jae
idiv
out
sub
cmpb
mov
in
scas
fadd
add
add
pop
pop
data16
pop
out
or
faddl
inc
sub
jmp
push
jbe
push
mov
cltd
cmpsl
test
out
xchg
mov
adc
inc
ret
push
lods
jnp
icebp
aam
push
push
xchg
out
xchg
sub
pop
incl
les
mov
dec
aad
and
inc
add
and
pop
xchg
sub
add
insb
dec
cli
or
ja
xchg
sub
cli
hlt
push
push
cmpsb
mov
push
daa
sbb
out
out
xchg
push
subl
jb
stc
aad
xor
push
sub
mov
sarl
pop
js
push
cmpsb
or
in
inc
lahf
inc
cmp
pop
dec
test
mov
mov
inc
pop
out
mov
and
movsl
xchg
mov
inc
fistl
aas
xchg
lock
scas
outsl
scas
mov
shrl
scas
testl
int3
decl
into
outsl
orl
jl
jns
cmc
xchg
fdivrl
std
jp
insl
inc
jp
xlat
mov
out
in
ficompl
xor
scas
scas
inc
loopne
mov
or
lret
cld
fidivs
shr
cwtl
je
dec
and
lret
push
push
jp
popf
lock
inc
jmp
pop
mov
mov
sub
lds
inc
and
add
imul
imul
sub
cmp
mov
lods
jp
fbstp
movsl
xor
fbld
shrl
xchg
push
or
nop
jecxz
or
sahf
hlt
mull
and
fistpl
fwait
push
sbb
push
out
imul
dec
mov
dec
sahf
pushf
rcr
nop
daa
fidivl
aam
mov
pop
repnz
fcoms
jp
adc
cs
lahf
clc
jmp
das
rorl
mov
cmp
jbe
fnstenv
xor
shlb
xchg
loop
push
out
cld
test
outsb
add
andl
push
movsl
push
mov
popa
std
pop
mov
lods
push
icebp
xchg
sub
mov
loope
add
cs
gs
lcall
bnd
pop
icebp
ljmp
adc
dec
and
jns
inc
fadds
rcrl
push
call
sbb
fidivs
xor
cltd
sbb
ja
cmp
xor
pop
pop
out
dec
jnp
mov
addr16
xchg
jmp
mov
or
mov
insl
ljmp
lock
insl
add
sbb
xchg
push
push
movsl
mov
mov
ret
add
fsubrs
sub
loope
lods
testb
stos
and
das
add
push
inc
dec
inc
imul
mov
shrb
dec
or
data16
sahf
xor
lods
push
mov
mov
hlt
sbb
rorl
dec
inc
pop
sahf
dec
hlt
data16
sbb
mov
xchg
inc
das
insb
mov
dec
in
fadd
push
std
stos
jge
clc
push
fbstp
adc
mov
aad
mov
ret
fsubrs
in
rcrb
mov
popf
rdmsr
push
out
push
sub
mov
fsubrl
fbld
in
loop
push
sbb
jae
dec
lcall
cmp
scas
sub
xlat
outsb
adc
ss
xor
pushf
lahf
pushf
push
jmp
mov
jb
into
jnp
int3
xor
nop
daa
subps
mov
fistpll
out
int3
arpl
adc
andl
push
or
push
arpl
mov
push
rolb
pop
sahf
mov
and
fistps
xlat
pushf
clc
xor
gs
cmc
ljmp
adc
aas
jge
lds
xor
ret
mov
push
xchg
outsb
or
cmc
mov
in
fisttps
out
xchg
fisttps
out
push
cmp
add
test
imul
jns
ds
stos
inc
dec
push
xchg
frstor
pop
xchg
sti
aad
fdivrl
repz
rcrl
mov
xor
aam
pop
sub
orb
loopne
cmp
int3
fsubs
or
xchg
cltd
and
cmp
mov
mov
xor
pop
dec
pop
shrl
loopnew
mov
add
shlb
sbb
sbb
xor
or
es
in
jp
out
movsb
out
insb
add
mov
and
xchg
sub
xchg
mov
dec
pop
sbb
loopne
nop
ja
pushf
xor
and
push
loop
leave
mov
rcll
lods
push
pop
out
xchg
outsb
add
daa
pushf
mov
test
xchg
sub
mov
dec
rcr
outsl
je
shlb
xchg
add
insl
xor
mov
xchg
ret
test
sub
imull
dec
loope
popa
push
call
xchg
lods
sbb
cmp
xchg
mov
mov
mov
xor
loopne
cmc
pop
shrl
push
call
repnz
movsl
jle
adc
bound
dec
loope
fmull
push
push
add
add
push
xchg
dec
mov
test
cmpsb
cmp
xor
pop
movsb
pop
fnsave
loop
pminub
test
sub
xchg
xor
or
jmp
push
mov
add
ret
cmp
adc
cmp
ja
outsb
cmpb
xchg
insl
cmc
ffreep
pop
ficompl
cmc
mov
in
outsl
jae
stos
lods
mov
mov
xor
adc
cmpsb
adc
ds
add
add
sbb
jp
xchg
outsl
stos
inc
mov
int3
enter
ret
or
jle
adc
js
popl
mov
rclb
cmpsl
lahf
sbb
flds
lds
pusha
notl
dec
jecxz
jnp
adc
mov
shrl
mov
jo
xor
mov
rcll
inc
repz
inc
or
and
es
decl
inc
fdivrl
xchg
arpl
lds
addb
sbb
jno
sahf
adc
ss
aaa
adc
add
push
sub
inc
int3
pop
not
scas
stc
nop
mov
rcll
scas
or
xor
push
shll
pop
in
jb
dec
push
out
pop
mov
mov
rcrl
adc
sub
std
xchg
cwtl
sbb
sbb
mov
aad
xor
mov
dec
and
popa
ljmp
xchg
movsb
xchg
mov
push
shrb
arpl
mov
jb
inc
faddl
popf
push
movsl
ret
cli
xlat
jmp
ret
fadds
sbbb
repz
loope
dec
nop
daa
dec
dec
push
inc
mulb
fidivs
fmull
xchg
stos
dec
lods
inc
jae
or
lock
mov
dec
testb
arpl
lahf
push
into
fs
pop
jl
mov
pop
lds
jb
daa
sbb
stc
test
ret
sub
sahf
xor
fldenv
and
adc
clc
movsl
bound
enter
stc
lock
add
adc
and
pop
adc
gs
enter
outsb
jne
dec
out
xchg
push
popf
and
insl
add
dec
and
adc
and
mov
popa
clc
push
inc
pop
jg
outsl
push
sahf
cwtl
in
mov
rolb
lcall
and
mov
inc
xlat
mov
aad
cmc
sub
and
out
inc
jl
jp
inc
fidivl
loope
clc
dec
daa
mov
mov
jb
insl
xchg
test
xchg
shll
in
cld
sbb
add
sbb
inc
cltd
xor
insb
pop
icebp
jle
mov
mov
aad
push
in
sub
xchg
pushl
push
inc
shrb
aaa
aas
aad
lock
repz
jecxz
out
push
movsl
or
push
cmp
sub
fs
xchg
cmp
mov
sbb
push
push
inc
xchg
sub
cmp
lods
ret
pop
ds
mov
push
adc
push
and
push
movsl
inc
inc
xchg
cs
jo
ret
xchg
or
shrl
push
imul
dec
xchg
xchg
iret
insl
pop
mov
call
cmp
pop
dec
addr16
fimuls
loope
mov
lock
call
cmpsl
or
mov
rclb
mov
lret
pop
icebp
mov
shlb
fistpll
push
lret
lret
daa
xchg
sub
pop
mov
mov
std
dec
inc
fdivrl
fstl
jns
mov
or
loope
cmp
rorl
xchg
sub
aam
inc
gs
or
sbb
or
sub
cld
xchg
out
mov
adc
ds
data16
ret
inc
pop
in
test
pop
hlt
cmp
jnp
push
push
sub
ds
cltd
xor
push
dec
fisttps
mov
std
xchg
dec
out
dec
mov
add
xchg
cmc
loop
clc
mov
cmpsb
cmc
adc
cwtl
push
push
lds
sbbb
shlb
bnd
cmp
adc
pop
repz
xchg
cmp
adc
mov
out
ja
das
mov
in
xchg
mov
clc
mov
cltd
pusha
adc
insb
mov
int
mov
xor
into
dec
adc
mov
das
mov
adcb
pop
mov
imul
mov
or
lret
xor
adcb
insb
movsb
jbe
mov
ret
mov
sub
lods
add
fwait
xor
cmp
cmp
and
int3
mov
inc
jge
jae
enter
imul
subl
add
jno
pop
mov
xchg
sub
lds
pop
rcll
push
out
jnp
dec
loop
lahf
jge
loopne
jge
mov
nop
daa
cmp
pop
les
and
cmp
jne
dec
cmpsl
dec
mov
jle
leave
pusha
add
icebp
mov
fdivl
jns
mov
or
lret
sbb
push
repz
and
jo
movsb
inc
push
in
jbe
mov
leave
sbb
sub
int3
arpl
mov
into
gs
mov
adc
ss
movsl
addr16
loopne
mov
add
fimull
or
and
sub
lcall
cmpsl
loop,pt
sbbb
add
pop
xor
push
out
mov
pop
push
stos
add
jmp
bndstx
in
push
inc
fmuls
stos
pop
neg
popa
pop
scas
xchg
cld
jge
cs
int3
in
pushf
xor
mov
jne
mov
shrl
lods
xchg
sub
jp
mov
xor
pusha
test
sub
fadds
jno
or
les
jl
jl
pop
sahf
push
in
iret
cmp
add
mov
pop
mov
je
xchg
test
leave
xor
xchg
arpl
mov
mov
cmp
cmp
or
pop
icebp
pop
in
stos
adc
ss
addr16
xchg
sub
mov
fldt
or
mov
pusha
leave
lock
subl
popa
push
outsl
sub
mov
rcll
jp
mov
frstor
data16
mov
shr
sti
andb
mov
fdivl
jmp
rorl
adcl
out
add
es
mov
and
addr16
fmull
gs
sahf
mov
pusha
mov
adc
mov
fildl
xchg
add
shrl
and
lahf
ss
cmp
mov
fcmove
arpl
cwtl
das
andb
and
jg
mov
lret
call
fwait
jb
insl
add
xchg
dec
jno
cld
stos
in
insb
add
int3
int
idivb
add
push
sbbb
mov
fdivl
push
int
mov
popa
pop
mov
ja
jb
cli
stos
fucomp
jg
int
mov
sub
jnp
jae
lods
arpl
into
adcb
mov
mov
aam
fs
xchg
sahf
push
mov
fsubr
lods
sbb
aad
mul
js
push
push
jmp
mov
popa
clc
clc
jb
and
int
and
jle
and
enter
jmp
sbb
dec
outsl
xor
lret
lock
jecxz
adc
aaa
mov
jno
xor
xchg
int3
jle
fwait
cmpsl
in
outsb
add
repz
and
ljmp
fisubrs
movb
xor
int
add
pop
repnz
pusha
fs
cltd
int3
xor
cmc
mov
js
push
add
std
xchg
stos
pusha
push
scas
cmc
mov
jb
push
add
jl
jno
dec
stos
pop
pusha
testl
pop
loopne
push
hlt
sub
sub
dec
popf
xor
into
cld
xchg
clc
cltd
or
inc
jecxz
mov
mov
push
mov
mov
sub
inc
aam
mov
lahf
fnstenv
rcrb
jns
or
les
std
fs
sahf
push
shrl
mov
sbb
xchg
or
movsl
xor
daa
mov
mov
mov
xor
cmpsb
cmp
and
scas
inc
jl
pop
xor
jge
push
je
xchg
out
test
mov
xchg
in
inc
std
xchg
jp
in
test
fwait
es
and
push
pop
movsl
lods
inc
fiadds
cmp
cmp
add
scas
inc
loopne
jge
outsl
add
cmp
pop
out
test
test
push
lods
insl
hlt
push
mov
mov
dec
mov
xchg
sub
xlat
and
pop
divl
xor
dec
test
lret
cmc
lods
jne
push
testl
lods
inc
cmc
mov
mov
sahf
adc
push
ljmp
lods
xor
jge
notb
mov
dec
adc
jl
lods
ss
jno
sti
xchg
stc
xchg
repnz
sbb
xchg
inc
in
cmc
mov
or
and
sti
mov
mov
fisubl
adc
mov
inc
in
add
mov
add
ljmp
movsb
std
xchg
filds
and
add
and
mov
and
fdivl
pop
push
ret
pop
mov
stos
inc
pusha
stos
jl
aam
jne
mov
fsubrp
orl
sub
mov
adc
scas
loop
push
sbb
aas
xchg
sub
lcall
ja
or
shll
push
or
jl
pop
jne,pn
pop
jp
mov
cld
xchg
add
cmc
mov
and
mov
adc
sbb
xchg
ret
divb
jne
inc
add
mov
xchg
push
push
in
xorl
mov
ss
sbbl
xchg
inc
out
je
sbb
les
adc
adc
inc
faddl
cmpsb
outsl
push
roll
mov
loope,pn
adc
push
out
mov
out
gs
in
aad
aam
shl
ss
sbb
push
mov
cmp
jp
mov
mov
fldl
scas
nop
sub
lret
in
xchg
sub
xlat
mov
add
insl
add
and
xchg
sub
jae
xchg
lret
add
insb
je
xor
push
xchg
lock
jbe
std
movsb
jecxz
test
addr16
hlt
cmp
leave
outsb
adc
dec
loopne
arpl
add
ljmp
bound
xchg
jnp
fcmovnbe
outsl
add
sub
or
test
les
xchg
ljmp
and
dec
add
cmp
push
negb
mov
and
stos
mov
flds
mov
cmp
push
out
xchg
inc
cli
lea
adc
jecxz
or
call
cmp
sahf
cmp
mov
ljmp
in
ss
fstpl
pop
push
test
pop
jmp
lods
jl
aam
insb
stc
mov
mov
daa
fstpt
pop
dec
mov
xor
jns
arpl
leave
hlt
xchg
stc
aaa
ss
push
daa
rolb
fnstsw
pop
in
or
test
out
imul
aaa
je
or
mov
mov
fcoms
lcall
bound
adc
mov
inc
lret
pop
popa
out
pop
sub
rcrl
mull
int
mov
pop
shlb
bound
in
pop
and
mov
arpl
ficompl
mov
mov
ds
xor
adc
add
adc
xor
mov
enter
jne
fsubs
fisttpl
repnz
out
mov
fstpl
lcall
or
push
jle
mov
outsl
scas
sub
out
mov
fnsave
std
lods
inc
adc
jmp
xor
xchg
pop
cmpl
arpl
mov
and
inc
icebp
add
push
scas
inc
je
aam
arpl
mov
or
dec
sbb
xor
xor
arpl
lret
push
nop
and
mul
xchg
sbb
shlb
mov
ljmp
shll
cli
jbe
sbb
filds
mov
bound
int3
push
mov
pop
jno
mov
aad
lods
xchg
xor
jl
push
test
xchg
xor
dec
hlt
xchg
jbe
lds
lcall
mov
shl
jnp
aas
lahf
and
or
jp
outsb
mov
jp
fstp
pusha
sti
repnz
js
adc
jg
sub
bnd
lahf
bnd
mov
jle
lret
adc
bnd
sub
nop
jno
hlt
jns
mov
js
stc
sub
pop
add
ja
sub
and
lret
add
int3
lahf
push
push
es
repnz
aas
lea
cwtl
jno
mov
mov
sbb
add
mov
pop
cmp
pop
push
bound
push
aad
xchg
loopne
jp
or
mov
jp
inc
out
xchg
adcl
lock
adc
or
and
popf
sbb
ret
sub
adc
mov
mov
dec
scas
dec
test
fidivs
aam
loope
adc
xchg
inc
es
pop
addr16
scas
cwtl
jns
and
int3
lods
inc
decb
push
in
cmp
shrl
pop
outsb
add
movsb
mov
sub
lds
mov
add
pop
xor
push
pop
mov
pop
fwait
test
mov
lret
popf
xor
dec
and
xchg
mov
jns
call
or
cmp
mov
mov
xchg
sub
jmp
mov
xor
push
shrl
lea
sbb
popf
xor
std
pop
scas
cs
dec
dec
adc
cwtl
mov
fnstcw
or
adc
pop
dec
das
jns
sti
xchg
mov
dec
in
rcrb
mov
jmp
add
mov
push
cltd
cmpsl
ds
fbstp
adc
xchg
sub
jnp
xor
add
jns
push
test
sbb
cmpsb
ja
mov
inc
or
and
xor
pusha
or
lock
imul
pop
mov
enter
lret
imulb
jl
je
pushw
mov
mov
xor
rcrl
inc
mov
inc
cltd
xchg
pop
lea
enter
or
movsb
pusha
lcall
andl
sub
mov
in
xor
jae
ret
test
enter
sbb
loopne
xchg
insl
jle
or
fadds
xchg
into
mov
dec
sbb
inc
divb
adc
xchg
out
subb
xor
fs
outsl
addr16
or
ret
bound
add
outsb
cmp
mov
mov
in
pop
lods
add
lods
sbb
add
pushf
adcb
mull
mov
cmp
ds
push
sbb
mov
shl
cs
cltd
or
lcall
push
test
lcall
test
lock
sub
mov
xlat
push
outsb
bound
aas
xor
out
andl
sub
es
mov
repz
sbb
es
scas
loope
dec
aam
clc
aas
sbb
andb
out
psubusw
add
repnz
mov
sahf
aas
call
jnp
cld
mov
fdivrl
repnz
and
mov
mov
dec
adc
mov
mov
and
jo
popf
mov
daa
fcoml
push
adc
and
mov
xchg
xchg
mov
in
add
jp
or
out
enter
dec
cmp
inc
jae
push
adc
or
mov
shll
pop
mov
mov
mov
nop
xorl
adc
sbb
setl
lds
out
fistpl
mov
lods
jmp
nop
and
outsb
lock
pop
imul
push
jo
pop
push
test
lock
pop
push
pop
mov
mov
fcoms
push
enter
push
rcll
scas
cs
loopne
cmp
jnp
das
stc
add
jp
ret
cmc
xchg
loope
or
cltd
sbbl
gs
xchg
daa
lods
call
out
mov
daa
add
les
adc
sbb
cli
cmovnp
inc
cmp
test
pop
std
loopne
dec
pop
stc
imul
loopne
int
stos
std
fildll
push
fistl
mov
cltd
cs
sub
mov
sub
dec
in
loope
fcomps
sub
outsb
mov
push
shrl
add
push
icebp
in
jo
xchg
cltd
lods
jne
neg
inc
mov
enter
lea
mov
aaa
lcall
movl
and
dec
mov
inc
lea
cmp
pop
sub
icebp
mov
mov
pop
pop
jns
lods
rcrl
xorl
pop
cs
orb
or
lahf
iret
jnp
out
daa
mov
mov
xchg
fisttpll
jb
xor
dec
pop
mov
xchg
sbb
cld
shl
sbb
insl
rcrb
aad
das
xchg
movq
cmpl
xor
cmpsl
into
test
mov
inc
inc
shlb
arpl
mov
pop
dec
xchg
push
push
xchg
leave
adc
or
cmp
xchg
push
arpl
cmp
pop
insb
or
add
push
pop
cmp
pop
mov
adc
shll
push
mov
sub
mov
in
dec
jmp
popf
js
dec
sub
push
or
rorl
into
sub
hlt
sub
mov
fs
sbb
testl
xor
jmp
sbb
repnz
xchg
sub
test
sbb
jb
xchg
jnp
mov
pop
ljmp
stos
mov
jp
pushf
jmp
jae
out
or
popa
shr
lds
jp
sbb
xchg
inc
hlt
xchg
xchg
dec
in
iret
xor
stc
add
sub
hlt
repnz
rcll
idivl
sqrtps
xchg
out
jbe
and
test
adc
push
loopne
cwtl
cmp
in
mov
dec
inc
dec
stos
leave
mov
mov
test
jae
jge
push
fs
fcomps
mov
xlat
ss
or
jne
inc
add
notl
xchg
loope
lea
mov
dec
pop
sub
es
jnp
pushf
or
mov
xlat
repz
in
jb
push
pusha
jb
dec
cmp
test
movb
mov
pop
cmp
push
fisubrs
data16
jne
cmp
inc
dec
ret
push
fidivrl
enter
cli
dec
push
cmp
outsl
fcompl
jo
shll
cs
sub
inc
inc
sar
lods
mov
ds
pop
jb
mov
cmpsl
icebp
jge
inc
pusha
add
cmc
scas
push
cld
xor
hlt
dec
filds
push
fdivrl
add
xchg
imul
jecxz
pop
mov
js
stos
iret
lods
cmpsl
lock
loopne
xor
fs
daa
adc
call
fstp
push
lods
sub
int3
test
xchg
xor
push
rcrl
mov
popf
jb
push
loopne
adc
inc
leave
and
jae
push
adc
adc
ficompl
jno
cmpb
into
or
xchg
jge
push
fwait
mov
cltd
pop
adc
jnp
pop
jg
pop
adc
movsl
into
dec
lea
fisubl
cmpsb
xor
fcompl
stos
or
cld
sub
and
mov
push
adc
mov
es
fisubl
add
dec
jo
and
lds
loopne
jecxz
call
mov
ljmp
aad
or
sahf
dec
test
loope
aas
dec
jge
arpl
mov
repz
xor
and
add
loop
inc
dec
jge
xorb
out
or
sbb
fwait
or
xchg
insb
stos
addr16
xor
adc
cwtl
in
stos
loope
sub
inc
mov
enter
pushf
sti
cmp
test
pushf
cwtl
jno
jo
je
cwtl
xor
mov
pop
loop
sub
aas
fdivrl
add
andl
add
out
xor
xor
mov
mov
std
add
pop
test
sbb
inc
adc
xchg
aaa
movl
repz
and
cmp
push
sarl
inc
adcl
pop
pavgw
xchg
sbb
mov
movq
call
in
mov
mov
push
xor
add
and
fmulp
mov
mov
inc
icebp
gs
cmp
xchg
mov
xchg
and
adc
lahf
sub
adc
or
ds
movsl
bound
push
popf
sub
nop
jo
sub
dec
push
sub
insl
pop
dec
xlat
insl
rorl
pop
mov
sub
adc
decb
add
xchg
mov
cmp
lods
aaa
in
ds
adc
fisubrl
mov
ljmp
mov
inc
repnz
mov
adc
sbb
sbb
sub
je
xlat
es
xchg
pop
pop
loopne
cld
out
repnz
jnp
or
xor
or
insb
rolb
data16
inc
aad
sub
lret
cmp
movl
lahf
sbb
jbe
and
adc
js
sub
fistl
rep
popf
aam
mov
shl
pop
ja
add
jae
and
mov
das
pushf
xor
or
mov
loopne
sahf
test
roll
les
mov
or
addr16
lock
nop
negb
xor
or
sub
sub
rcrl
jbe
js
orl
adc
clc
cmp
or
or
imul
outsl
push
rorb
fsubrs
test
cltd
xchg
mov
xor
or
adc
std
call
cmpsl
nop
jmp
mov
call
xchg
jg
fstpl
scas
jl
dec
sub
lds
xchg
jmp
push
mov
mov
push
cmpsl
jns
xchg
and
test
adc
pop
inc
in
inc
aas
fistpl
dec
push
or
sub
mov
xor
add
inc
cs
lahf
pop
cmpsb
test
sub
inc
mov
push
mov
adc
aas
cmpsb
mov
adc
je
inc
arpl
pop
bound
cmp
cmp
mov
dec
add
enter
cmp
imul
ja
dec
cmp
js
dec
or
icebp
mov
sbb
int
adc
mov
repz
rol
mov
repnz
xchg
add
pop
jnp
cmp
iret
rcrb
push
xchg
lret
pop
sbb
adc
icebp
jle
insb
pop
cmp
sbb
xchg
dec
sti
aam
jb
pop
sbb
pushf
test
pop
ret
shlb
mov
or
in
popf
loop
repnz
pop
xchg
fsubrl
xorl
adc
sbb
fldcw
xor
xchg
xchg
ljmp
cwtl
lock
add
loopne
cmpsb
in
mov
mov
test
fs
dec
adc
xor
and
mov
test
movsl
mov
xor
jnp
insb
xchg
test
inc
outsb
xor
jns
jl
mov
incb
mov
aam
mov
mov
inc
mov
scas
jb
into
mov
divl
mov
dec
insb
fsubrs
mov
lods
shll
das
pop
lods
xor
push
inc
jp
loop
sti
imul
les
mul
js
leave
push
adc
call
sysret
rcr
in
cmp
test
lds
mov
insl
pop
movl
rorb
insl
pop
inc
mov
sub
xor
insl
xor
mov
adc
leave
add
gs
pop
add
int3
add
repz
sarl
ja
pop
in
addr16
sbb
pop
sbbl
rcr
call
jb
divb
in
in
mov
les
and
filds
push
lds
jmp
cmp
sahf
sub
cmpsl
loope
lea
int3
adc
mov
mov
outsl
xchg
insl
jns
sbb
mov
hlt
rorb
dec
or
mov
mov
xor
insb
mov
mov
call
sub
cmp
stos
mov
call
bound
and
les
orl
js
mov
and
data16
test
lock
mov
cmp
xor
decb
fdivrl
cmp
inc
mov
mov
bound
iretw
pop
sub
pusha
or
mov
dec
les
mov
iret
gs
cmp
outsb
ja
mov
in
pop
mov
jp
insb
pop
scas
sub
dec
jbe
pushf
shll
pop
jg
adc
xlat
xor
mov
add
fs
jl
mov
nop
insl
ja
jmp
mov
icebp
mov
cmp
ds
fucom
in
xor
pop
adc
jle
cli
sub
lea
push
arpl
or
sbb
jo
jo
mov
pop
outsl
adc
xor
push
dec
xor
cwtl
push
mov
loope
pop
cs
mov
es
and
ljmp
nop
pop
mov
sarl
pop
stos
mov
xorb
add
inc
add
pop
cmp
dec
int
mov
incl
add
ret
jnp
push
jno
pop
call
or
mov
shll
inc
fbld
or
sahf
cmpsl
insl
mov
mov
js
fmuls
into
mov
in
cmp
jbe
scas
sub
cmp
dec
or
notl
adc
cld
jmp
and
roll
out
cmp
roll
stos
lret
pop
and
and
lods
lcall
push
das
addr16
pop
and
insl
nop
xchg
fisttps
push
ss
mov
stos
jecxz
cmp
cmp
ss
adc
decl
cmp
aad
int3
cmp
in
sbb
ljmp
insb
cmp
lds
movsb
fcmovu
rorb
dec
lret
cli
rcl
iret
imul
cwtl
mov
and
fstpl
sub
jecxz
rcr
add
cs
cs
pop
pop
add
roll
pop
xor
xchg
dec
rol
dec
xchg
les
repnz
cld
pop
rclb
outsl
sub
repnz
jl
or
ss
xchg
cwtl
cltd
sar
shl
fcmovu
das
je
sbb
jg,pt
data16
loop
mov
popa
jnp
xchg
out
sub
push
repnz
adc
pop
adc
sub
and
jg
out
inc
xor
int3
inc
dec
pushf
inc
ljmp
mov
lock
stos
and
fistpll
cmp
mov
daa
xor
insb
test
add
lret
mov
push
std
adc
aam
shl
sbb
pop
adc
cmp
pop
xor
add
xor
mov
andl
pop
and
call
dec
and
fiadds
push
ja
push
push
fwait
out
addr16
push
je
inc
jne
dec
xor
push
add
and
pop
mov
xchg
fiaddl
test
mov
les
jecxz
sbb
pop
mov
and
jp
cmp
imul
cmpl
mov
pop
je
pop
call
test
repnz
push
sarb
hlt
out
xchg
ret
ja
dec
dec
adc
and
leave
das
aad
inc
pop
xchg
popf
mov
ret
jle
and
ret
push
and
and
push
sbb
lret
les
fstpl
mov
scas
fcmovne
jg
or
xchg
lds
scas
push
les
fimull
shrb
adc
fucom
add
xchg
test
out
lock
add
push
cmp
fimull
xor
out
das
dec
and
pop
add
not
mov
stos
mov
jp
push
xor
xlat
cltd
jne
mov
sarb
sarl
jmp
in
aaa
adc
js
cmp
adc
das
sarb
add
out
test
rcrb
in
repnz
cwtl
mov
test
mov
mov
out
jne
jo
push
test
shlb
pop
dec
sub
cmpsb
pop
aas
mov
int3
add
in
out
add
add
das
pop
pop
test
xlat
pop
test
xlat
adc
and
pop
inc
sub
aaa
cmpsb
dec
loop
push
pop
sti
add
sbb
cltd
cmpsl
pop
into
cmp
xor
push
xchg
xor
nop/reserved
sbb
jbe
fisttpl
cmpb
sahf
andl
imul
and
rcpps
push
cmc
les
arpl
xor
sbb
movsl
adc
stc
lret
mov
inc
lods
xor
mov
pop
sub
sub
lret
mov
mov
adc
pusha
sbb
mov
xor
test
mov
jb
cwtl
or
mov
adc
cmc
movsb
outsb
or
lcall
ss
and
shl
clc
jmp
cmp
fsubrp
cmp
fstpl
jae
and
xchg
test
outsl
and
cmp
repnz
jnp
rcrb
jmp
cmp
aaa
arpl
dec
push
mov
and
rcrl
sbb
aam
xor
movsl
std
lds
mov
mov
js
int3
fbld
ds
test
mov
inc
out
repz
mov
mov
mov
int3
jne
outsl
push
pop
nop
enter
push
int3
out
mov
in
shrl
or
and
pop
push
mov
in
dec
mov
ret
cmp
es
sub
mov
mov
jbe
fstps
in
rorl
mov
mov
movsl
xchg
jle
out
leave
je
add
sbb
jg
xorb
inc
sbb
in
insb
pushf
lea
push
mov
es
and
shl
out
inc
cmp
and
sarb
daa
lahf
fs
push
inc
sar
loope
es
jl
std
mov
insl
or
pop
sar
sahf
arpl
jb
cmp
adc
xchg
sbb
inc
hlt
xchg
add
nop
inc
dec
jae
ret
mov
arpl
xor
sub
or
mov
mov
ljmp
push
fucom
pop
sub
pop
cmp
adc
dec
and
out
dec
sub
stos
jae
imul
arpl
mov
and
rorb
jnp
aad
lcall
xchg
mov
sub
es
outsb
aam
sub
adc
lock
ljmp
adc
and
sbb
ds
popf
je
xor
test
push
mov
or
dec
mov
jo
xchg
mov
jo
xlat
lods
aad
faddl
std
or
test
shll
add
sbb
dec
adc
ja
sub
repz
fstps
std
pop
rolb
mov
lret
fldt
add
popa
jle
idivl
xchg
inc
mov
fimuls
in
cs
aam
fldcw
fcomps
cmp
xchg
xchg
or
mov
inc
out
orl
or
jns
pop
xor
jnp
cwtl
jmp
mov
fdivrl
cmpl
adc
subl
add
cld
out
and
jle
enter
cmp
scas
fisubs
fisubl
aad
clc
push
icebp
lods
mov
imul
imul
sbb
cmp
mov
mov
mov
rclb
jo
xchg
pop
pop
jns
cmpl
rolb
adcl
xor
stos
adc
lcall
movsb
cmp
and
cmp
ja
mov
sbb
rclb
jecxz
das
sub
jo
ds
mov
ror
xor
sub
iret
es
cs
xchg
dec
pop
pop
ret
int
cmp
cwtl
ss
mov
mov
pop
xlat
ss
sti
jle
lret
xchg
lods
add
fistps
pop
insl
mov
and
popl
add
mov
popl
daa
pop
pop
sbb
mov
leave
sub
js
push
lea
scas
or
cld
enter
call
das
push
or
xchg
lea
int3
push
cmp
adc
mov
cmp
cmc
pop
mov
or
in
push
sub
push
gs
cmp
xchg
std
dec
mov
xchg
movsl
sbb
gs
aaa
loopne
dec
pop
xor
in
cmp
xchg
jge
movsl
push
cld
jnp
movsb
icebp
xlat
mov
xchg
orl
aam
nopl
dec
mov
pop
cli
test
and
jne
dec
fsts
shrd
lds
inc
test
mov
out
repnz
call
lret
mov
pop
add
and
inc
mov
ss
push
sub
mov
sub
cmp
adc
inc
pop
out
or
daa
insl
adc
pop
lahf
aaa
inc
test
out
push
fstpt
adc
push
loopne
push
inc
mov
cmp
xor
mov
pusha
or
xor
stc
mov
xor
or
test
ret
push
mov
and
int3
jns
xor
out
cmpsb
popf
flds
inc
push
push
or
and
cld
xchg
int
sbb
inc
mov
inc
out
out
and
fwait
cmp
push
jg
xchg
insl
mov
push
sbb
and
daa
cs
xchg
cld
stos
push
mov
mov
xchg
cmpsl
stos
cmpsl
xchg
orb
orb
std
and
mov
cli
pop
jb
sub
jne
mov
dec
cmpsl
inc
pushf
fisubrs
dec
pop
mov
je
pop
xchg
adc
jbe
daa
sub
ds
pop
sahf
fcomp
lods
ret
inc
fistpl
dec
popf
leave
cs
int3
call
push
outsl
leave
imul
dec
sbb
dec
pop
pop
loope
int3
cltd
data16
cmp
movsb
pop
jp
lods
push
inc
sbb
adc
out
xchg
sahf
or
sbb
push
or
das
gs
fstp
push
movsl
mov
aam
xor
cmpsl
inc
lods
lahf
ds
pop
pop
rol
jl
cmc
imul
or
dec
mov
push
leave
inc
imul
pop
sub
sub
push
add
pushf
jns
les
cwtl
nop
mov
jns
aad
dec
adc
push
jnp
sti
push
dec
test
and
and
sub
push
shll
aam
cld
push
adc
mov
dec
adc
and
jnp
loope
pop
dec
mov
push
ljmp
imul
scas
adc
std
mov
inc
mov
test
cltd
aas
sub
ja
cmp
cmc
sub
out
addr16
aaa
and
fsubrs
push
cmp
sub
les
negl
fidivs
aad
inc
jns
add
dec
sahf
aaa
fwait
adc
setl
dec
gs
xor
out
sti
pop
xchg
ret
cmpsl
inc
jns
out
fiaddl
cli
mov
push
push
shrb
outsb
push
jo
jmp
movsb
into
xchg
mov
push
jo
bound
in
xor
pop
sub
in
nop
cmp
lds
cmp
roll
adc
data16
aam
push
cmpsl
cmpsb
outsb
fisttps
adc
push
repz
inc
adc
cmp
scas
enter
push
sbb
jmp
hlt
mov
jg
addr16
shrl
rcrl
inc
cwtl
fsubrl
pusha
sub
lock
mov
xchg
push
mov
jbe
rcr
mov
pop
fs
jecxz
stc
repnz
rclb
lcall
js
shlb
pop
push
outsb
jnp
xchg
loop
imul
imul
dec
das
stc
sarb
out
mov
pop
adc
and
ljmp
gs
and
fucomip
mov
push
inc
pop
jae
mov
fimull
call
pushf
outsl
mov
cmpsl
mov
jae
mov
aas
mov
mov
inc
lcall
or
and
fs
incb
inc
sub
adc
cmpsb
lcall
xor
pop
lret
jmp
pop
inc
mov
arpl
imul
mov
outsl
push
sbb
inc
sbb
mov
dec
mul
jae
nop
imul
out
cwtl
nop
ret
es
add
mov
jae
xor
dec
lcall
xchg
stos
pop
sbb
pop
out
fisttpll
mov
dec
add
lods
xchg
mov
add
jl
test
cltd
adc
sub
cmp
out
inc
sub
je
out
mov
add
pop
fs
pop
call
xchg
cwtl
mov
aas
into
dec
leave
mov
pop
imul
in
jnp
push
insl
cltd
out
xchg
jp
jl
cld
imul
mov
dec
add
or
push
cs
pushf
lahf
imul
push
sbb
mov
idiv
add
jle
push
popa
sub
add
pop
ret
and
jg
xchg
and
je
bound
int3
ljmp
xchg
cld
outsb
ja
cmpb
pusha
pop
popf
push
pop
fs
push
and
jns
int3
sbb
xchg
int3
jns
out
cltd
push
fs
add
xor
mov
mov
mov
xchg
ss
cwtl
lcall
mov
fxch
imul
jmp
xor
jmp
movsb
xor
in
sbb
in
aam
and
data16
push
fsubrl
movsl
in
pop
call
jb
enter
inc
mov
es
icebp
cmpsb
test
fwait
mov
es
aam
or
dec
add
test
mov
inc
jb
out
movsl
or
popf
dec
inc
mov
aas
sbb
jle
or
aaa
shl
loop
popl
in
lds
mov
mov
adc
or
shrl
int
lcall
lods
call
xorl
push
in
mov
jnp
xor
shr
dec
mov
rolb
outsb
stc
pusha
repnz
dec
jp
cltd
pop
scas
mov
test
pop
hlt
fsubs
inc
das
sub
mov
cmp
xorb
jecxz
in
aad
jecxz
popa
push
xor
inc
ret
add
jo
imull
loopne
mov
roll
mov
xchg
adc
jmp
std
call
cmp
addr16
sub
inc
adc
jno
dec
aam
jp
dec
mov
inc
pop
mov
sbb
shr
fstps
pop
and
adcb
xchg
adc
inc
fisttpll
repnz
jnp
push
sub
call
or
mov
cmpb
jmp
xor
int
sbb
jns
or
cmp
test
sbb
in
cltd
int3
inc
lds
push
stos
insl
movsb
xchg
clc
add
add
lret
and
movsb
lods
add
dec
out
lock
fsin
xor
pcmpgtw
testl
call
adc
jle
imul
sbb
lret
jl
cld
mov
sbb
pop
dec
lock
sub
sbb
insb
adc
shlb
orl
add
jb
hlt
push
data16
subl
push
dec
test
enter
push
jnp
adc
or
mov
aaa
pop
sub
sub
das
cs
fstps
add
mov
arpl
sub
jle
jnp
and
or
and
testb
adc
rep
cld
cmp
xchg
orl
push
fldl
out
inc
fwait
push
mov
adc
mov
mov
ret
pop
push
cmpsl
testb
rorl
ret
pushf
lret
pushf
in
cmp
jo
jl
aad
cmp
jne
mov
test
cmc
ss
xchg
loope
loop
lcall
xchg
lea
inc
xor
xlat
push
je
fmull
rcll
dec
add
insl
in
push
addb
mov
mov
aad
sub
xor
push
jg
mov
leave
ljmp
xchg
cwtl
js
lret
mov
outsl
add
or
cmpsb
jnp
pusha
in
roll
cwtl
inc
jns
insb
dec
push
lcall
outsb
push
scas
mov
fcoml
sbb
jg
cwtl
jge,pt
jbe
or
push
fwait
lcall
mov
idivl
dec
dec
stc
lret
inc
out
bound
or
dec
mov
into
push
pushf
pop
or
fisubl
imul
fwait
lds
aas
xchg
inc
and
imul
adc
sub
cwtl
lods
or
push
cwtl
pushf
repnz
mov
test
mov
arpl
sti
rep
mov
add
adc
push
orb
xchg
sbb
jmp
jmp
aad
cltd
hlt
cmp
loope
jecxz
mov
ljmp
mov
stc
xorb
mov
add
jl
aam
movsb
call
fwait
movsb
or
sub
fidivrl
jbe
pop
xorb
out
adc
xchg
push
jae
test
sbb
sbb
mov
and
dec
jae
cmpsl
mov
xchg
sbb
rcrb
sbb
push
es
mov
cs
jne
dec
es
scas
shrl
rolb
cwtl
sub
lock
imul
fs
xchg
call
mov
xor
xor
mov
loop
jno
xchg
add
sub
pop
mov
inc
dec
movsl
mov
insb
stos
pop
lret
bound
xchg
adc
mov
sub
cmp
mov
lds
inc
xlat
add
and
and
mov
inc
fdivs
xchg
stc
fnstenv
mov
out
pop
sti
lds
testb
out
mov
roll
test
adc
in
cmp
mov
inc
fsubp
and
gs
add
aaa
jbe
test
les
push
test
adc
pop
mov
or
movsl
aad
rolb
dec
punpckhbw
add
xchg
sub
xchg
mov
mov
ret
pop
mov
imul
and
cltd
gs
shrl
xchg
stos
rcrl
sub
or
xchg
inc
xlat
xor
push
jmp
jns
xor
push
cmp
push
sbb
mov
sub
mov
out
nop
loope
xor
mov
dec
and
mov
bound
xor
lahf
mov
push
fnstcw
lea
cli
fdiv
stos
or
cld
adc
enter
sbb
dec
cmpsl
push
outsb
push
sub
jb
and
rorb
arpl
test
movsl
les
loope
bound
mov
clc
xchg
xchg
daa
rolb
loope
jo
stos
add
enter
sub
inc
xorb
repnz
in
push
lods
mov
lret
bndldx
add
lock
movsl
cmp
pop
and
data16
pop
div
dec
xchg
imul
js
cmp
or
add
aaa
cmp
dec
cmpsl
xchg
in
sbb
test
enter
and
mov
iret
and
jl
pop
jp
mov
push
and
insb
xchg
stos
jg
sbb
stos
outsl
push
sbb
enter
ja
adc
movsl
cmp
fwait
call
jmp
dec
jecxz
loopne
mov
pop
das
add
out
jl
scas
inc
xchg
push
jge
test
mov
pop
dec
out
pop
inc
clc
push
jg
dec
popa
jbe
or
rcrl
add
inc
ds
sbb
mov
nop
daa
push
xor
inc
ja
cmp
or
sbb
aam
das
rclb
popf
xchg
bound
xchg
mov
pop
push
hlt
cld
xchg
lret
aaa
mov
sbb
xchg
or
nop
bound
xchg
sbb
xchg
xchg
jno
ret
mov
mov
scas
out
xchg
mov
or
fidivl
xor
mov
lock
into
testl
imul
or
shlb
ss
daa
lret
bound
insb
sbbl
cli
inc
fucomp
scas
lods
inc
and
jb
adc
push
out
ljmp
or
sub
pop
jge
nop
jnp
lea
movsl
sub
inc
jnp
cmp
cmp
in
push
pushf
xor
data16
ds
xchg
out
lret
mov
cmp
inc
out
je
or
sbb
pop
or
sbb
and
sub
fbstp
dec
jmp
jg
push
out
lahf
mov
shrl
dec
loopne
repnz
and
jle
inc
stc
jne
inc
cwtl
add
push
ljmp
mov
fidivs
rcrl
xchg
outsb
int3
xchg
cmp
add
sbb
cmp
and
and
and
xchg
lods
repz
pop
dec
dec
xchg
shlb
addr16
mov
bound
fistpll
fnstsw
xor
sbb
cmp
xchg
daa
fadds
in
or
dec
test
sub
xor
jl
add
xchg
cli
fdivr
loop
inc
imul
jns
ss
and
ljmp
add
adc
jl
cwtl
mov
es
rorb
popf
popf
das
xchg
sub
xor
dec
sbb
inc
dec
inc
add
iret
subl
sub
ss
mov
lock
xchg
data16
repnz
stos
scas
ljmp
cwtl
out
push
enter
sbbl
adcl
jae
rcl
fsts
out
cld
bound
dec
idivl
fnstcw
or
into
gs
and
xchg
ret
or
jnp
and
xchg
pop
inc
fmull
in
add
imull
inc
fisttpll
fsubrs
xchg
add
lret
mov
xor
int
adc
int3
arpl
aam
xchg
dec
jecxz
or
jp
testb
pop
aad
popl
out
xlat
decb
xor
mov
mov
daa
and
mov
push
xchg
pop
cmp
jbe
or
jge
sbbl
repz
cld
repnz
pop
sbb
pusha
neg
inc
push
out
jno
imul
lcall
sub
mov
sub
jo
cmp
mov
ja
add
push
sbb
in
xor
inc
xor
pop
lock
or
or
sub
xor
daa
fbstp
xor
xor
aaa
cbtw
das
push
das
int
pusha
xchg
xchg
sub
jnp
push
lods
dec
es
mov
test
jb
and
repnz
xchg
mov
or
shrl
cmp
movsl
fisttpll
sub
adc
sub
int3
xchg
rolb
jns
mov
xchg
jb
xchg
leave
stc
nop
cli
popa
inc
fcoms
cmp
cwtl
jl
or
cmp
pop
aas
jbe
aas
sti
xchg
scas
push
sbbl
sbb
popa
js
push
pop
lds
les
push
out
pop
push
out
xchg
adcb
xchg
sub
cmc
insb
add
jecxz
les
mov
and
xor
insl
add
inc
inc
xlat
xor
in
inc
jne
cmp
lods
inc
push
dec
mov
movsl
dec
testb
dec
cmp
aas
pop
into
gs
dec
jns
aas
aad
les
push
mov
inc
pop
mov
data16
insl
add
gs
out
pop
out
cmpsb
pop
pushf
xor
dec
orl
cmp
inc
jbe
xor
cmp
lods
fiadds
inc
and
sbb
xchg
retw
pop
cltd
ljmp
add
call
outsl
inc
mov
adc
cmp
lahf
popf
fbstp
enter
push
rcrl
ja
adc
pushf
xor
dec
or
xor
dec
cwtl
xor
movsb
ret
hlt
cmpsl
sub
push
out
out
xchg
push
sbb
insl
mov
movsl
dec
out
mov
mov
sub
lea
xor
nop
addr16
nop
sarl
mov
dec
out
stos
cmp
fsubl
loopne
cmp
mov
push
lcall
mov
movsl
pop
inc
mov
lock
aaa
nop
daa
cmpsl
pushf
add
adc
pop
dec
out
xchg
inc
xlat
mov
jp
cld
dec
jecxz
mov
mov
cmpsb
pop
mov
and
xor
sub
adcb
test
popf
mov
clc
jo
cwtl
das
fidivs
push
arpl
sub
cmp
mov
aad
push
xchg
insb
add
dec
lock
cli
xchg
dec
aas
jae
scas
xchg
movsb
cmp
scas
in
test
adc
inc
pop
jo
push
fwait
loope
int3
xchg
lock
pop
jl
dec
dec
outsl
push
cmp
std
xchg
popf
push
mov
add
lods
clc
and
sbbl
or
cmc
mov
sub
pop
push
adcb
and
jg
lods
js
fdivrp
es
or
mov
and
jg
mov
inc
fcmovb
pop
fbstp
sbb
sub
sbbb
lahf
fidivs
adc
stc
inc
aas
es
lahf
rcrl
fbstp
or
pop
nop
daa
push
and
popf
test
cwtl
das
mov
mov
push
insb
inc
imul
pop
popf
addr16
mov
test
inc
xlat
inc
repz
outsl
push
dec
cmp
push
dec
xlat
fbstp
sahf
adc
sbb
lods
inc
dec
sbb
adc
repz
adc
out
xor
sub
xor
mov
xchg
sub
ret
add
push
aas
pop
shlb
ds
or
mov
inc
and
sub
fidivs
lcall
xchg
sub
xchg
cmpb
repz
test
push
pop
loop
push
mov
loop
out
dec
rclb
pop
sahf
xchg
stc
or
mov
mov
cmpsb
cmp
popf
pop
cmp
loopne
push
aam
lret
sbb
stos
mov
or
lret
push
movsl
sti
mov
mov
push
xor
imul
in
orl
bound
xchg
sub
clc
shrl
rolb
add
mov
ret
pop
rcl
insl
add
in
sbb
pop
dec
in
ljmp
pop
sbb
dec
out
aam
pop
enter
cld
or
jnp
mov
sbb
xlat
push
xor
cltd
imul
push
pusha
les
mull
sbb
adc
add
inc
jnp
ljmp
cmp
jg
scas
sbbl
out
adc
pop
xor
dec
inc
and
je
cli
xchg
add
push
mov
mov
jnp
stos
testb
sub
pushf
xor
add
mov
cmpsl
ds
lods
push
in
fimuls
mov
cmp
jp
push
repnz
shl
xor
sbb
stos
mov
fwait
xor
sarb
cwtl
cmpsb
cmp
es
rolb
mov
cltd
mov
xsha1
cmpsb
iret
or
cmp
ljmp
ret
lret
bound
mov
pop
hlt
loopne
mov
inc
cli
call
divl
mov
fsubp
jb
shlb
mov
sbbl
daa
iret
pop
repnz
mov
mov
popf
xor
mov
lds
mulb
out
xchg
shrl
cmp
arpl
inc
fxch
je
or
jnp
or
push
lcall
xor
pushf
mov
jne
push
or
fldl
and
in
sub
aaa
into
fimuls
pushf
xor
aam
push
enter
inc
or
jp
inc
jns
inc
insl
adc
jo
jo
mov
shll
adcl
mov
xchg
ljmp
dec
out
cmp
stc
mov
movsl
cld
xchg
lods
loopne
and
cmpsl
ds
and
mov
pushf
cmp
into
sbb
jnp
add
jle
les
jb
push
and
pop
mov
outsl
adc
or
inc
add
xor
sub
adc
mov
movsb
into
xlat
sbb
or
lret
lcall
mov
mov
xchg
sub
xor
lods
cmpsl
sbb
lds
out
push
xchg
shlb
push
adc
push
mov
jo
mov
movsb
jmp
in
fidivl
push
push
jmp
rcrb
out
test
push
movsl
mov
mov
aam
sub
sahf
pushf
sub
pop
fucomip
or
push
pop
sahf
jge
mov
fisttpll
adc
push
pop
xor
mov
movsl
rcrb
add
inc
fprem
inc
insb
add
popa
clc
dec
jge
xor
lods
test
fidivrs
mov
dec
adc
mov
mov
clc
mov
or
scas
cmp
ds
jbe
ss
nop
cwtl
pop
icebp
lret
out
in
jp
pop
pop
ja
cmp
xchg
sub
lea
scas
inc
fsubp
shrl
add
xor
repnz
in
test
movsb
pop
lcall
and
out
inc
inc
fidivs
push
rclb
sbb
out
jg
sbb
cmpsb
cmp
popf
xor
ret
pop
mov
jge
loopne
je
sub
xchg
pop
aaa
sti
xchg
imul
mov
sarb
rolb
fnsave
into
push
and
push
das
push
in
pusha
jne
push
cmpsl
xorl
cli
aam
sub
sbb
dec
dec
daa
scas
inc
pop
outsl
shrb
jp
lods
ret
cmc
scas
jmp
pop
out
xchg
sub
pop
or
imul
dec
loopne
mov
imul
clc
cli
xchg
sub
movsb
cmp
stos
inc
dec
jg
aad
jp
fs
loopne
mov
sbbl
mov
sbb
leave
inc
jns
push
stos
test
divl
or
std
sti
xchg
das
cmc
mov
imul
aaa
into
mov
mov
cli
xchg
test
ss
lods
pop
sahf
pop
xor
pop
fs
adc
mov
inc
xlat
add
dec
loope
push
lahf
cmp
inc
fcoms
mov
sbb
sub
test
movsb
shrb
add
scas
ss
testl
stc
jnp
jmp
cld
xor
out
mov
test
out
stc
nop
daa
das
or
aaa
xor
push
jae
arpl
mov
jmp
lahf
sub
mov
bound
inc
fldt
mov
sbb
es
sbb
in
inc
and
lea
popf
mov
out
xchg
xor
mov
loope
sub
mov
sub
jge
sbb
insb
xchg
xchg
mov
add
sbb
mov
or
add
pusha
int3
arpl
int
or
sahf
call
es
ja
pop
scas
subl
lahf
ret
mov
fidivs
mov
lods
daa
loop
pop
adc
pop
mov
dec
and
dec
in
clc
xor
jmp
out
xchg
jmp
sbb
lea
lods
inc
mov
sub
add
pop
aad
mov
decb
das
jge
lahf
push
stc
nop
xchg
mov
mov
int3
add
jnp
das
mov
rorb
lahf
rep
add
call
leave
pusha
mov
jne
stos
inc
sub
jne
pop
mov
push
mov
in
test
and
pop
aas
mov
lds
data16
lcall
imulb
add
mov
and
push
insl
xchg
stos
inc
or
gs
xchg
sub
fucomp
test
adc
shll
lods
inc
imul
push
in
mov
mov
imul
sub
fnstenv
xor
mov
loopne
mov
xor
mov
imul
mov
jg
repz
dec
ds
xor
xchg
imul
fwait
fwait
std
xchg
or
fsubrs
cmp
lock
and
cmp
sarb
stos
insl
loop
mov
jne
inc
cmpsl
loope
or
mov
fsubrs
ljmp
fiaddl
and
xchg
loopne,pn
ss
adc
insl
or
pop
std
mov
sub
out
icebp
sbb
data16
mov
sahf
xor
xchg
mov
xchg
adc
sahf
xor
cwtl
xor
js
sbb
jl
push
out
test
or
and
xchg
repnz
jle
cmp
xor
jbe
out
mov
jbe
shl
repnz
mov
and
jle
jne
dec
ss
mov
enter
iret
inc
mov
sahf
xor
sbb
dec
cmc
mov
rol
push
repz
pop
nop
ljmp
enter
pop
or
pop
jnp
in
test
jp
dec
push
mov
dec
pop
jns
add
ret
cmp
dec
dec
pop
call
push
fcoml
std
scas
inc
out
call
ret
xor
push
sbb
loopne
lret
aam
push
enter
inc
sbb
testb
xchg
fimull
mov
cmp
lahf
lea
ss
push
fistpll
into
mov
pusha
mov
cmpsb
jae
fld
jp
mov
mov
mov
pop
sub
jmp
shrl
pop
sahf
orl
fwait
xor
mov
shrl
sub
jns
cmpsl
insl
add
loopne
adc
add
cmpsl
xor
and
xchg
mov
popa
lds
jecxz
leave
dec
loopne
mov
out
clc
mov
shlb
pop
imulb
in
int
mov
fidivl
scas
outsl
push
loope
imul
cli
adc
dec
xor
inc
jno
push
in
scas
andl
ljmp
add
inc
insb
add
inc
adc
xor
inc
fwait
inc
mov
cmp
dec
out
dec
pop
repz
icebp
mov
dec
hlt
mov
cmp
xor
xor
mov
shlb
inc
in
sbb
sbb
inc
jecxz
js
es
bound
xchg
jns
mov
std
sahf
mov
push
out
cmp
inc
or
xor
cmp
jae
mov
ss
popf
xor
ja
idivl
or
push
cmp
xchg
push
jae
in
push
out
xchg
outsb
jl
pop
ljmp
fs
sub
ja
sti
xchg
push
jo
insb
mov
mov
js
mov
stc
nop
daa
mov
inc
mov
xchg
aad
push
leave
testl
shlb
mov
test
jne
fsubl
rcl
repnz
imul
mov
adc
push
arpl
pop
cmp
dec
out
cs
add
call
inc
fadd
inc
mov
jbe
out
xchg
int
mov
sub
or
fmuls
mov
out
jl
dec
scas
in
dec
fnstsw
mov
fsubp
jecxz
cmp
fldcw
add
add
dec
test
cmpsl
mov
mov
mov
rorl
movsl
cld
dec
repz
xor
int3
arpl
subl
icebp
fdivl
xchg
cmpsl
push
add
out
das
cmpsl
dec
popa
clc
test
in
jns
loopne
out
jbe
fbstp
fs
cld
lea
shll
or
mov
jg
push
push
imul
imul
lods
xor
aas
pusha
xor
mov
mov
add
push
scas
inc
dec
in
mov
ret
pop
cmpsl
hlt
ret
pop
daa
cmpsl
pop
sahf
push
inc
pop
hlt
jb
int3
arpl
call
inc
mov
push
out
loop
rclb
inc
dec
in
andl
ja
cli
xlat
inc
faddp
in
and
push
pop
jbe
xor
xorb
push
imul
pop
call
cmp
or
shll
push
cmp
inc
cmp
xor
push
mov
mov
mov
test
mov
stos
fimuls
pop
sub
mov
popf
js
scas
inc
shll
xchg
icebp
xor
in
push
call
xchg
jmp
sbb
xchg
sub
pop
scas
inc
dec
outsl
daa
mov
repz
stos
inc
jae
mov
shl
xor
arpl
stos
inc
ja
mov
shl
mov
aam
or
jbe
sahf
cmp
or
lods
inc
sahf
jle
repz
mov
fisubl
mov
stos
inc
inc
icebp
cwtl
das
and
cmp
shrl
pop
ja
imul
outsb
add
int3
sti
adc
xorl
dec
movsb
lods
inc
sbb
icebp
lods
cmp
popa
imul
adc
mov
and
in
nop
mov
call
in
dec
addb
push
repnz
adcb
das
xchg
ss
jno
sub
and
rcl
jg
adc
repnz
jecxz
scas
jg
push
repz
adc
push
scas
inc
mov
jb
jge
cmpsl
cmp
fists
movsl
xchg
or
fwait
mov
xchg
cs
pop
int
pusha
inc
sub
lahf
enter
inc
shrl
mov
mov
sti
mov
adc
jno
lods
inc
outsb
dec
out
lret
cmc
push
in
fnstenv
jb
test
andb
out
sahf
nop
sub
ja
sub
jmp
fnop
or
fildll
test
xchg
sub
orb
mov
mov
test
sub
fldenv
xlat
pusha
cli
fsubrs
add
inc
or
leave
pusha
adc
mov
sub
jl
mov
ficompl
cs
xor
add
pop
decb
out
cld
jb
adc
add
mov
mov
push
cmpsl
ja
adc
dec
dec
in
xchg
int
mov
xor
pop
cmc
pop
repnz
fs
jb
sbbl
add
les
pop
mov
push
sub
jmp
imul
dec
pop
mov
push
jmp
sbb
fs
add
test
jl
mov
cmpl
jle
lods
stos
fwait
xor
lock
test
scas
sbb
stos
shl
or
jecxz
aam
inc
cmc
movsb
cmp
popf
in
test
or
arpl
pop
xchg
fwait
out
or
cs
lock
icebp
sti
xchg
sub
int
xor
xchg
sub
xchg
add
fldcw
mov
cli
or
test
mov
jns
push
lahf
fdivl
clc
mov
and
cmpsl
movsl
ret
add
mov
mov
fimull
sbb
pop
repz
xor
adc
adc
or
ds
in
pop
sbb
xchg
sub
loop
cwtl
das
mov
fnstsw
mov
mov
inc
jle
jle
cld
xchg
je
jge
inc
xchg
mov
pop
jecxz
add
cmpsb
cmp
cld
mov
mov
xlat
dec
out
test
fnstenv
jp
or
outsl
aaa
jne
add
xchg
sub
mov
mov
jnp
sbb
mov
shrl
push
sbb
je
dec
fbstp
sbb
pop
inc
fimull
pusha
pop
fwait
repz
pop
fnsave
fsubrs
sbb
cmp
ret
pop
nop
loopne
lds
addr16
and
fs
add
iret
cmpsl
pop
cmc
out
push
xor
dec
mov
mov
enter
push
lods
mov
insl
sub
jo
push
ret
jl
xchg
xlat
fnsave
xor
and
pop
divb
mov
push
dec
push
adc
cmp
sbb
pop
jns
jge
arpl
clc
xor
xchg
cmp
leave
and
cwtl
mov
pop
sub
push
aas
dec
sbb
subps
rorl
jb
fldcw
pop
pusha
jge
scas
mov
mov
test
filds
cmpsb
inc
fistl
or
jle
out
add
int3
xor
mov
fisubs
iret
lea
loop
dec
loop
add
shll
push
adc
jno
loope
sub
sub
dec
pusha
idivl
lcall
pop
nop
daa
xchg
cld
arpl
ljmp
lcall
sub
jbe
mov
ds
stos
lock
cmp
lret
cmp
ds
sar
xchg
ret
xlat
jno
fidivl
sbb
jb
idivb
add
or
cmpb
into
pushf
cmpsl
ds
jb
nop
subl
fbstp
rcrl
stc
add
out
mov
mov
or
push
pop
nop
or
and
arpl
aam
xor
int3
arpl
lds
mov
rcl
cli
xchg
leave
jbe
xor
xor
iret
cmp
fnclex
jns
adc
lret
aam
aas
adc
ss
test
sub
mov
fsubr
or
lock
loop
cmp
sbb
and
dec
loopne
xchg
mov
cmpsb
int
leave
pusha
pushf
pop
hlt
lcall
lcall
mov
push
popa
lods
inc
push
cli
or
addr16
fnsave
and
lds
mov
lea
jns
scas
loope
and
stos
push
add
jbe
push
add
dec
out
ret
jns,pn
push
imul
test
std
xchg
push
jmp
push
jmp
mov
and
mov
xchg
xor
test
inc
push
test
in
push
in
sbb
ret
pop
mov
sub
jnp
sub
dec
loope
mov
pop
add
das
andb
lods
xchg
sub
xchg
and
inc
xchg
cmp
fidivl
pop
cwtl
das
dec
lahf
int3
arpl
pop
mov
popf
addb
arpl
repz
cmpsb
lea
fcomip
mov
mov
dec
jmp
test
xlat
shrl
lcall
cwtl
add
jbe
lock
xchg
int
or
push
popf
push
sub
jo
scas
and
sarl
cmp
lods
push
lret
inc
push
out
movsl
cmp
and
push
ja
shrl
in
and
arpl
add
scas
inc
fsub
scas
icebp
mov
mov
fiadds
mov
test
inc
xor
sbbb
add
shrl
jp
nop
insb
into
adc
lcall
pusha
lods
and
into
xchg
inc
fbstp
mov
mov
bound
xor
push
dec
jecxz
loop
xchg
sub
inc
pop
vcvtdq2ps
mov
lea
sahf
loopne
lock
mov
sahf
xchg
sub
inc
inc
fdivl
xchg
shrb
pop
iret
dec
jle
vmwrite
test
xor
dec
sbbb
icebp
call
or
shlb
hlt
stos
cmp
ljmp
ss
ficomps
iret
out
or
loop
dec
loope
add
je
adc
pop
pop
pop
icebp
xchg
push
lcall
ja
clc
mov
es
jle
inc
leave
inc
fisttpl
movsb
xchg
jbe
jbe
outsl
cltd
mov
mov
sbb
push
inc
lods
lods
inc
pop
ljmp
xor
add
pop
repnz
addr16
popa
dec
in
jp
adc
jno
jne
lcall
outsb
add
xchg
out
mov
mov
mov
or
mov
push
jmp
xchg
imul
pop
aas
push
out
jle
bound
mov
sbb
cmp
loop
clc
xchg
xchg
pop
cmc
les
jl
pop
or
xor
push
ljmp
jno
loopne
insl
adc
nop
daa
xor
hlt
outsb
arpl
scas
and
rcll
jg
sbb
jb
xchg
cmp
rorl
adc
jb
cs
mov
and
jne
push
push
insl
xchg
pop
gs
mov
and
pop
int
cmp
sub
push
adc
or
pop
movsl
xchg
pop
test
in
clc
jecxz
adc
sbb
dec
ss
xor
and
mov
outsb
push
adc
inc
das
cmc
mov
jge
xchg
adcb
mov
fwait
xor
aam
enter
push
cmp
dec
out
pop
fsubrs
js
add
mov
loop
mov
std
add
inc
push
push
xor
xchg
pop
mov
out
idiv
outsl
push
sub
add
and
push
mov
sarl
push
loop
xor
ds
repz
add
adc
adc
or
nop
es
movsl
cli
mulb
mov
mov
mov
xchg
andl
ss
loopne
or
icebp
fdivr
popf
pop
das
push
addb
jmp
adc
negl
and
fnstcw
test
leave
int
fwait
iret
xchg
fidivrs
in
call
or
cmp
sub
mov
dec
loop
xor
pop
add
addr16
push
out
test
test
mov
push
sti
sub
sub
stos
inc
cmpsb
dec
dec
fistpll
enter
data16
rcrb
out
dec
icebp
test
and
pushf
lahf
inc
mov
mov
leave
adc
inc
ljmp
xchg
cmp
jle
jmp
or
fimuls
dec
dec
dec
shrb
rolb
cmc
mov
aam
stos
add
jle
shrb
jb
ds
pop
int
push
cld
shlb
mov
rolb
fisttps
std
sub
pop
push
pop
je
xor
push
scas
shr
xor
fists
call
mov
iret
aam
das
enter
push
mov
test
imul
add
stc
add
inc
xor
push
movb
pop
sahf
add
out
lock
nop
daa
js
sbb
sarb
test
jbe
inc
dec
popa
clc
cmp
adc
add
sub
inc
add
movsl
cmp
enter
insl
xor
les
push
pusha
incl
out
fs
or
add
in
test
inc
ficompl
scas
nop
aaa
pop
js
incl
dec
xor
sahf
jbe
out
aam
pop
leave
rolb
inc
add
loope
movsb
lret
dec
fsubp
fsubs
lods
mov
test
pop
cwtl
and
jne
aam
daa
xor
jns
fadds
xchg
gs
mov
arpl
pop
jo
lret
cmc
cmp
inc
popf
or
lahf
mov
mov
sbb
mov
nop
push
ret
std
or
pop
clc
loop
adc
pop
lret
xor
push
and
sub
aaa
cli
xchg
inc
pop
sub
imul
test
push
sub
cs
sub
cmpl
or
xlat
pop
aam
inc
inc
mov
iret
scas
dec
scas
add
shr
cmp
in
mov
jp
outsb
xchg
test
xchg
sti
jl
into
dec
mov
cmpsl
push
aam
jnp
daa
inc
jmp
into
imul
mov
fwait
loop
cmpsl
outsb
jns
lahf
scas
ret
dec
fcoml
add
shrb
xor
sbb
call
push
repnz
std
out
cmpsb
mov
xor
je
mov
int
cld
mov
cli
and
xor
out
out
sub
outsl
sbb
hlt
xor
rorl
pop
outsb
ja
addb
add
or
out
xor
add
inc
mov
ss
fiadds
jecxz
mov
and
sub
scas
rcll
dec
inc
fdivrl
int3
inc
movsl
into
sbb
mov
cmp
cmp
lret
rolb
push
mov
cmp
into
nop
jp
sbb
ljmp
lea
sbb
lds
cmpl
sbbl
mov
pop
pop
lret
cmp
and
cli
arpl
mov
inc
xor
and
js
cmp
ret
jo
shll
and
je
mov
cmp
inc
or
push
shlb
and
jns
mov
push
lcall
insl
fisttpl
pop
xchg
cmp
flds
stc
gs
mov
test
add
fiaddl
cltd
xchg
add
and
cmp
jnp
xchg
pop
and
sbb
xor
icebp
cmp
and
sub
sub
sbb
rcrb
aas
es
xchg
pop
shl
mov
ficomps
xchg
jbe
outsb
jmp
outsb
ja
xor
ret
push
sub
xlat
mov
mov
fcmovnbe
int
jbe
xor
arpl
test
stos
ds
stc
xchg
dec
ficoml
or
aaa
adc
jo
sub
sub
rclb
or
arpl
sub
sub
mov
cmc
gs
scas
push
add
lret
jle
in
lret
cmpsb
xor
int3
mov
faddp
subb
pushf
sbb
outsl
ljmp
add
xor
jno
mov
mov
popf
inc
sahf
push
movsl
mov
fistps
and
mov
bound
push
add
mov
ja
push
lret
scas
loopne
or
and
and
in
std
je
dec
sub
pop
es
lahf
cmp
cmp
adc
or
ss
xchg
inc
and
popf
fcomps
in
cmc
sbb
jnp
ret
mov
mov
mov
outsb
out
movsl
push
ljmp
cli
pop
xor
jae
sub
ds
dec
xchg
loope
repnz
inc
add
mov
inc
fwait
ja
orl
loop
jmp
lahf
fdivr
sub
add
lret
ja
or
divb
ds
lcall
xchg
fstps
mov
push
inc
and
hlt
ljmp
adc
lea
mov
sahf
inc
inc
movsb
xchg
push
repnz
sub
insl
loopne
mov
add
lret
aas
loopne
shlb
call
pop
jns
cmpsl
cs
push
jo
into
and
aas
in
cmc
and
lcall
test
mov
sbb
push
cld
loop
int
jge
aas
movsl
fldcw
push
xor
dec
xcrypt-cfb
cmpsl
and
lret
adc
push
mov
sbb
cmpsb
cli
icebp
dec
inc
dec
ret
ljmp
cmp
sar
mov
add
scas
and
xchg
push
inc
dec
insb
jp
push
xorl
scas
lret
pop
iret
mov
jbe
pop
sbb
dec
adc
pop
dec
sub
ret
jne
adc
rcrl
dec
adc
xchg
pushf
aas
filds
cmp
into
subl
xor
adc
test
inc
inc
movsb
daa
mov
test
stos
xor
mov
mov
jns
xchg
mov
pop
aad
data16
popf
push
adc
mov
inc
cmp
jne
andb
or
adc
loope
int
jno
insl
adc
xchg
mov
sarb
cli
jge
mov
rcll
pusha
in
inc
aad
push
cvtdq2ps
aaa
add
fimuls
lock
daa
lds
ja
dec
dec
addr16
push
fidivrs
test
lods
popf
out
lret
xchg
cs
rclb
push
jbe
negb
bound
ja
lds
xchg
sub
subb
mul
cmpb
mov
pop
sahf
jle
add
movsl
setg
test
mov
ret
loopne
pop
adc
loopne
pop
xor
test
std
mov
into
call
fmuls
inc
cli
aas
mov
fnstsw
gs
adc
push
cli
sarl
adc
push
add
fs
daa
mov
jae
push
out
pop
lcall
daa
lods
push
stos
push
fiadds
dec
data16
in
ja
pop
lsl
sahf
nop
cli
sub
sbb
mov
cmpsl
or
sbb
rcrb
mulb
mov
xlat
daa
sub
repz
fdivp
jb
decb
sbb
pop
sub
inc
inc
je
scas
pusha
xchg
bound
mov
jnp
sti
mov
test
popf
rcrl
mov
push
stos
subb
jg
dec
sbb
es
stos
pop
and
lahf
mov
and
mov
push
loopne
pop
jnp
inc
mov
jo
pop
mov
arpl
icebp
jbe
dec
mov
pop
in
adc
add
cmpsb
cmpsb
sbb
ret
push
mov
sub
pusha
filds
popa
sarb
mov
jle
pop
mov
xlat
dec
cmp
jle
mov
mov
inc
stc
pop
enter
jo
loopne,pt
es
lds
xlat
int3
icebp
addr16
sbb
xchg
fbld
insb
pop
mov
ja
incb
inc
mov
dec
test
mov
jnp
vorpd
mov
cli
lahf
sbb
inc
sub
add
xchg
lahf
and
outsl
push
sbb
test
add
divb
loope
loope
movsl
mov
loope
push
mov
adc
lds
pop
repnz
push
movsl
cmc
lds
mov
push
mov
jnp
inc
push
fcmove
push
cmp
pop
mov
fmuls
je
inc
mov
xchg
sub
mov
mov
in
mov
stc
nop
jb
push
in
and
pop
in
out
int3
pop
lidtl
imul
out
mov
fdivl
push
push
pop
imulb
xor
adc
xorl
rcl
iret
data16
mov
test
outsb
ja
or
fcmovbe
sub
add
daa
dec
fistps
push
ljmp
jno
ror
test
std
repz
pop
and
pop
cmpsb
cmp
test
les
leave
test
sti
add
xlat
adc
adc
aas
pop
xor
xchg
scas
push
ljmp
jb
xor
xchg
cmc
out
bound
bound
rclb
mov
lock
sub
push
sub
ret
rcll
imull
cmp
mov
inc
pop
xor
imul
jno
xor
add
orl
fidivs
lret
adc
add
fbstp
and
arpl
adc
jne
andl
icebp
mov
mov
jne
inc
fcompl
mov
xchg
sub
adc
dec
insl
arpl
shlb
popa
outsb
add
enter
pop
cmc
lret
bound
fs
in
xchg
dec
jmp
std
fstpt
jbe
sub
adc
stc
andb
movsb
mov
stc
lds
ret
subb
sub
push
ret
push
mov
rcrb
icebp
adc
push
inc
adc
inc
fsubrs
fs
xchg
mov
lcall
or
lret
xlat
outsb
mov
call
loop
jo
xor
push
mov
xchg
push
out
cld
lret
cli
outsb
add
orb
jg
push
popf
aam
stos
inc
shl
and
es
enter
inc
fnstcw
out
jns
pusha
test
in
jle
push
in
and
jb
inc
fdivs
mov
clc
ret
xchg
fsubp
cmp
adc
sbb
or
mov
fstps
mov
push
pop
test
fdivl
js
sub
cld
xchg
or
xor
push
mov
lahf
mov
iret
cmpl
mov
iret
bound
push
in
add
xchg
or
or
scas
jecxz
mov
and
inc
fisubrs
dec
jae
fs
xchg
aad
call
jmp
sbb
movsb
jno,pt
add
pop
les
jge
call
jmp
add
sub
sti
xor
insl
gs
cmp
out
test
fsts
cmpsl
or
enter
lds
dec
loope
ret
mov
add
xlat
aad
popf
enter
in
lret
bound
or
outsb
lcall
pop
dec
ds
pushf
or
xor
pop
push
and
lds
sub
scas
pop
pop
repnz
mov
mov
adc
push
das
imulb
imul
pushf
lret
fbld
xchg
out
jbe
jb
inc
sar
es
ds
subb
in
cmc
repnz
mov
dec
adc
ficoml
and
int
sarb
xchg
ret
stc
mov
mov
loop
add
mov
sbb
orb
jb
imul
pop
daa
jge
pop
jl
stc
jo
fsubrl
lods
push
inc
cmpsb
dec
or
push
jns
jb
test
xchg
pop
jo
scas
cmp
shlb
sti
inc
leave
mov
lock
sarb
lods
imul
cmc
adc
inc
push
jl
dec
gs
jb
negb
xor
sbb
xchg
outsb
dec
sbb
roll
pop
dec
mov
cmpsl
sbb
aam
or
sti
mov
or
add
stos
push
adc
jl
adc
pop
rorl
xlat
pop
sub
fs
sbb
xor
loop
mov
imul
and
inc
adc
imul
jae
jmp
negl
std
xchg
adc
js
mov
xlat
outsb
inc
push
mov
daa
stc
xchg
negl
outsb
add
rclb
pop
gs
fld
and
cltd
push
shll
in
loope
pop
lds
daa
std
add
ret
test
js
jae
xor
add
dec
jmp
jmp
pop
adc
test
cld
arpl
sbb
sbb
jne
test
lret
iret
fwait
or
iret
inc
dec
loop
lock
out
xchg
or
jp
xchg
sub
rorl
sub
sbb
lds
mov
test
fcomps
lods
inc
or
rolb
es
push
add
push
add
out
aas
or
test
in
dec
dec
fistps
or
inc
lret
sti
data16
xorl
jno
ja
pop
xchg
sahf
jne
shlb
mov
xor
lods
add
xor
out
mov
push
ljmp
repnz
shrl
mov
nop
daa
push
and
shrb
xchg
and
push
imul
mov
jge
xor
adc
test
js
pop
stos
stos
mov
and
dec
aad
push
adc
push
inc
stos
mov
adc
ss
pushf
popa
mov
cmpl
xor
mov
ret
hlt
adc
aam
imul
mov
sbb
stc
nop
jns
icebp
sbb
insb
add
xchg
dec
mov
xchg
jno
int3
inc
and
fnstsw
aas
pop
aaa
inc
enter
repz
cmp
addl
push
sub
aam
aas
ds
arpl
in
outsl
daa
ss
test
lret
sub
ljmp
push
iret
cltd
repz
fbld
ja
scas
inc
js
arpl
testb
mov
pop
cmpl
bound
adc
add
fsubrl
shrl
jp
fists
pop
add
dec
push
xchg
xor
sub
test
insb
push
lds
mov
add
sub
ss
lret
lods
inc
mov
mov
pop
pop
xor
movsb
lcall
mov
jb
movsb
xlat
fwait
xor
ret
mov
xor
dec
leave
clc
xlat
outsb
in
in
jo
loope
les
add
dec
inc
mov
mov
subb
fs
out
test
mov
or
xchg
call
jno
fidivs
aas
pop
mov
push
into
gs
xor
cmc
mov
addr16
js
sub
dec
nop
in
test
in
imul
mov
sahf
shrl
sub
stos
sub
push
mov
loopne
sub
push
lods
inc
push
add
xchg
std
xchg
add
sbb
xchg
or
out
xchg
fidivrs
fistl
or
xchg
or
jg
lock
mov
pop
test
push
mov
fstpt
or
pop
rorl
clc
pop
lea
mov
in
and
mov
push
or
jecxz
scas
adc
out
push
lods
xchg
je
enter
sbb
dec
cmpl
in
mov
inc
std
je
rorb
sub
mov
xor
je,pn
adc
sub
push
call
cmp
dec
out
pop
hlt
mov
push
mov
jl
add
dec
in
jno
nop
inc
xor
stos
xchg
gs
into
cmp
aas
imul
ret
dec
in
or
imul
aas
rcl
inc
and
or
loopne
cmc
mov
int3
ds
mov
or
lods
inc
and
add
scas
pop
hlt
sub
out
cld
xchg
push
cmpsl
arpl
sbb
test
or
xor
aas
lret
lock
and
shrb
addr16
sub
cmpsb
lret
pop
cmp
dec
or
inc
xlat
iret
sub
pop
pop
movl
xchg
mov
loopne
adc
fimull
aad
xchg
fs
hlt
lahf
mov
jge
out
mov
ds
xchg
mov
cmpsl
mov
sub
arpl
scas
push
pop
push
ljmp
outsb
add
or
ljmp
mov
aaa
movsl
ja
sbb
push
xchg
sarl
xor
lahf
push
ljmp
std
xchg
mov
inc
mov
xor
enter
icebp
mov
push
xchg
dec
filds
pop
scas
in
fs
push
xchg
mov
mov
call
mov
cmpsb
shl
mov
push
in
stc
push
in
sub
xor
xlat
sbb
test
and
xchg
or
xor
rcll
les
insb
add
xchg
fsubl
inc
mov
cmp
scas
inc
cwtl
add
mov
xor
mov
inc
xchg
sub
cmpsb
dec
out
aam
aam
sbb
mov
ret
vmovlpd
movsl
inc
add
xchg
fs
in
mov
test
pop
adc
pop
xchg
lds
orl
mov
xorb
mov
or
cmpsb
push
pop
lock
ret
aad
out
test
les
imul
xchg
cs
faddp
pop
fidivl
in
mov
ficomps
incl
mov
pushf
jl
mov
fisubl
xor
jae
iret
data16
lcall
jp
jge
jge
fdivrs
int
cmp
pop
cmp
arpl
shrl
test
shll
xlat
inc
fucomi
daa
fidivs
or
fwait
mov
cmp
or
inc
fildl
mov
in
adcl
ret
enter
ds
ret
pop
aaa
sub
test
pop
and
pop
push
add
lods
int
mov
rcll
pop
mulb
enter
in
inc
mov
pusha
divl
aad
pusha
out
push
or
scas
jns
in
ror
gs
adc
test
mov
adc
adc
ss
test
pop
icebp
sbb
ds
loop
jmp
imul
pop
hlt
mov
test
or
push
testb
adc
fmuls
pop
test
std
xchg
test
sbb
sbb
mov
stc
cmp
mov
sbb
leave
mov
fstl
iret
jecxz
dec
in
mov
sbb
les
sbb
mov
fidivs
mov
shlb
loopne
add
fistl
jns
xor
loope
lea
xlat
sub
jl
jp
xor
and
pop
ret
pop
icebp
hlt
shrb
fcmovnu
cmpsl
inc
rolb
lds
repz
and
inc
lds
adc
inc
xor
pop
test
sbb
gs
push
loope
test
ret
out
and
stos
inc
fldt
jecxz
pop
pop
fnsave
rol
cmpsb
nop
cmp
rol
ret
push
jmp
ds
mov
mov
mov
push
fcomps
sub
adc
ds
pop
dec
mov
sub
cmp
pop
pop
xor
xchg
xor
sub
inc
ret
pop
cmp
adcl
mov
ret
repz
and
mov
jmp
xor
stos
inc
jbe
mov
test
pop
xchg
fcmove
insl
inc
cmp
cwtl
and
pop
sbb
sbb
insb
dec
mov
jl
dec
pop
sahf
sbb
aad
ficompl
test
test
cmp
mov
mov
push
sub
mov
aas
mov
inc
mov
fcomps
xor
outsb
mov
mov
scas
mov
outsb
xchg
sub
lret
ret
sub
movsl
es
mov
pop
hlt
sbb
jmp
outsl
xchg
rcl
gs
divl
mov
pop
add
jns
bound
addr16
sub
adc
stos
inc
and
cmp
sbb
mov
faddl
or
jb
loopne
or
adc
push
mov
inc
and
pop
scas
dec
jg
int
lret
outsl
jnp
in
cli
push
cmpl
cmpsl
ret
dec
aam
lods
loope
xor
into
cmp
mov
in
and
rcll
sbb
pusha
or
adc
in
lds
incb
push
mov
xor
fisubrs
iret
int3
arpl
imul
ret
insb
mov
jno
jl
push
mov
cmpsl
xchg
pop
mov
inc
out
inc
notl
ret
lahf
ss
push
inc
mov
int3
cmpsl
cltd
stos
fadd
adc
xor
push
push
sbb
dec
jbe
xor
or
stc
pop
inc
movsl
lahf
std
xchg
pop
daa
jae
push
loope
mov
adc
aad
and
xor
pop
xchg
imul
sub
jb
xchg
sub
arpl
push
pop
ror
bnd
repz
fidivrs
cltd
das
int
cld
pushf
fst
stos
push
inc
test
cmp
dec
add
enter
pop
pusha
addr16
mov
lcall
out
adc
mov
enter
lods
pop
packsswb
jg
lret
pop
hlt
gs
or
icebp
in
fwait
inc
fstl
mov
mov
pushf
mov
daa
movsb
addr16
ds
ljmp
aad
cmp
les
hlt
mov
rcll
mov
dec
xchg
mov
or
popf
stos
inc
sbb
iret
mov
dec
lret
in
mov
repnz
flds
mov
xor
outsb
xor
jns
dec
lods
jge
ljmp
scas
out
mov
orb
inc
jbe
jne
lds
jns
xor
xchg
lahf
pop
cmpsl
or
popf
test
xor
cwtl
mov
lods
jmp
jmp
movsb
clc
sub
push
cld
cmp
inc
xor
aad
stos
gs
into
jo
negb
mov
push
in
pop
sub
dec
mov
jge
jg
inc
popa
sbb
and
movsl
push
cmp
lock
adc
enter
and
xchg
movsl
add
andb
test
pop
mov
movsl
add
or
add
mov
xor
push
jmp
push
mov
adc
mov
addr16
out
test
scas
adc
mov
sbb
mov
mov
jo
fsubrp
push
ds
dec
push
sbb
int3
addl
jl
pop
cmc
xchg
loopne
enter
hlt
add
push
and
in
lods
or
xor
lds
inc
add
or
or
ret
sbb
ljmp
pop
and
fisttps
fimull
jae
pushf
popf
xchg
clc
push
jge
xor
jp
xor
mov
push
add
jmp
pop
push
packsswb
and
pop
add
adc
popf
jbe
and
push
sub
sub
or
lods
stos
jecxz
cmp
mov
cmp
subb
dec
outsb
out
mov
and
ret
fnsave
addr16
mov
lea
lods
inc
jo
dec
loop
xchg
fsubp
aaa
sbb
xchg
dec
pop
imul
pop
push
xor
lea
sbb
ja
add
lret
out
pop
pop
es
jns
ljmp
in
test
sarl
jle
test
aad
out
push
fwait
call
nop
cli
or
aad
out
sub
mov
hlt
pop
fldt
lret
ret
mov
dec
popa
clc
adcb
and
push
add
pop
bnd
rol
jp
aad
sub
add
or
push
test
popf
hlt
dec
shll
xchg
inc
cld
push
and
jb
xchg
sub
xchg
sbbl
adc
iret
es
jg
jg
push
add
cli
imulb
stos
lcall
and
mov
insb
dec
inc
enter
pop
out
inc
jnp
adc
pop
jecxz
out
cmp
mov
negl
jecxz
aaa
cs
mov
xor
in
mov
gs
jns
mov
arpl
sahf
bound
fildl
push
out
in
pop
test
and
mov
inc
sbb
lahf
sub
pop
dec
xor
lahf
addl
out
jno
dec
mov
mov
aaa
pop
pusha
imul
addr16
inc
inc
xchg
xlat
test
test
clc
ret
out
aad
sub
or
adc
mov
inc
aad
ja
sbb
dec
cwtl
data16
sub
addr16
out
pop
pop
call
or
sub
movsl
sbb
pop
lahf
jnp
lahf
xchg
mov
inc
cmp
push
adc
mov
inc
add
movsb
cmp
and
push
adc
dec
fsts
ljmp
data16
rorb
dec
jo
sub
mov
mov
inc
cmpb
test
je
pop
xchg
push
push
mov
fdivrs
add
lods
push
jbe
popf
sbb
mov
mov
fwait
pop
fcomp
or
fcmovne
add
in
xor
push
out
push
inc
and
sbb
aam
movsl
mov
and
cmc
dec
mov
sbb
jb
adc
inc
dec
in
test
mov
jl
lret
bound
sahf
push
mov
repz
xor
add
cmp
adc
mov
popa
dec
or
je
mov
rcrb
iret
pop
xor
fsubrs
jbe
pop
loop
mov
sbb
xchg
addr16
push
stos
pop
imul
or
and
pop
repz
dec
push
gs
add
lods
mov
jl
adc
out
jle
mov
lock
jg
inc
or
ja
cwtl
out
jne
ret
hlt
aam
mov
cli
pop
mov
fimuls
aam
ret
inc
idiv
int
repz
ja
insb
sub
gs
call
mov
jle
loope
test
decl
mul
mov
xor
hlt
cmp
xchg
mov
sbb
test
mov
jnp
push
ljmp
test
cmp
dec
mov
je
jnp
fsubrl
adc
jle
stos
inc
xlat
mov
xchg
ss
mov
sbb
jmp
pushf
push
push
jbe
pop
or
cmovbe
mov
jp
or
lods
pop
gs
fwait
lea
stos
adc
into
fnsave
dec
pop
inc
cmp
jae
lock
movsb
mov
mov
lods
fsubrs
and
mov
jp
mov
lds
leave
and
pop
lock
popa
sbb
aaa
in
sbb
adc
movsb
negl
or
out
ds
fdivrp
xchg
out
mov
cmp
js
mov
dec
mov
and
ljmp
xorl
cmpsl
aad
mov
pusha
out
pop
fdivl
sbb
jp
pushf
pop
repnz
sti
int3
lock
push
test
stc
push
in
sub
minps
popf
inc
pop
negl
pop
pop
push
ljmp
lock
xchg
mov
jmp
cltd
lret
jge
add
push
out
mov
int3
push
addr16
es
xor
shrl
fisubrs
sbb
cli
jmp
dec
loope
lds
mov
int3
ja
cli
ja
mov
shll
adc
js
into
test
mov
scas
shlb
and
push
leave
sbb
out
adc
aam
scas
sbb
outsb
mov
dec
push
adc
das
in
jno
dec
xchg
add
imul
xor
xchg
mov
xchg
jl
nop
daa
aas
popf
and
dec
mov
cmpsl
mov
sbb
leave
or
adc
jb
pop
movsb
inc
lcall
fcoml
and
pop
adc
movsb
stc
or
addr16
pop
jg
fucomip
cmpsb
rclb
addr16
inc
cmp
jne
add
lods
mov
fisubs
pushl
jns
in
adc
aad
jl
and
xor
add
xchg
and
mov
cmp
pusha
gs
adc
inc
movsb
cmp
faddl
push
std
popa
pushf
shrl
ja
popf
stos
inc
mov
shll
lret
out
cld
scas
add
and
test
xchg
fidivrl
shr
lds
scas
xchg
hlt
mov
mov
sarl
std
inc
or
fisttpl
dec
inc
ret
mov
jle
cmp
mov
lcall
stc
lret
popf
dec
stos
inc
mov
mov
cmpsl
pop
les
mov
and
enter
lcall
xor
xchg
pop
pop
scas
mov
pop
out
fistl
xor
es
daa
scas
mov
pushf
add
sti
xchg
xor
data16
inc
fidivs
sub
sub
mov
dec
imul
test
xor
xchg
xchg
in
ficoms
mov
xor
add
pop
scas
cli
iret
cmp
mov
sysret
sbb
out
jecxz
adc
sbb
xor
cmp
mov
mov
jb
xchg
loop
addr16
aaa
jle
int
idiv
orl
iret
adc
or
out
scas
push
popa
pushf
and
test
mov
lods
xchg
dec
ret
fsubl
icebp
fisubrs
inc
dec
icebp
jg
add
out
enter
mov
aam
shlb
jle
add
cmc
and
fidivl
xchg
cmp
test
and
mov
push
cmpsl
fldenv
add
jl
inc
pusha
push
ret
and
xor
pusha
es
sbb
sarl
jae
cmp
mov
data16
mov
pop
out
sbb
jge
inc
sbb
push
outsl
pop
add
xchg
jmp
inc
shlb
mov
xchg
cmp
adc
jmp
xchg
sbb
ds
cmp
xchg
or
lret
and
add
pop
and
add
mov
pusha
fisubs
icebp
push
into
std
cmp
jmp
decb
repz
arpl
clc
leave
add
mov
jp
pop
xor
leave
sbb
xor
add
loope
pop
frstor
jmp
and
insl
mov
inc
sahf
mov
mov
cwtl
aad
lret
dec
push
mov
sub
arpl
sbb
outsb
fimull
xor
test
push
dec
aam
jne
push
mov
in
dec
sbb
xchg
push
insb
mov
jge
cwtl
inc
icebp
fsub
test
in
jno
jmp
fisubrs
std
aas
loopne
stos
mov
mov
sbb
sub
or
or
dec
in
test
gs
sbb
xchg
lret
lea
mov
test
xor
les
std
in
js
sahf
cmc
and
movsl
push
out
addr16
montmul
cmpsb
lds
rcll
dec
out
inc
fisubl
clc
int3
jecxz
icebp
inc
inc
cltd
or
int3
fsubrs
or
push
or
insl
add
pop
cmp
paddsw
jnp
jg
jge
test
sbb
inc
mov
jne
aad
imul
cli
xchg
mov
mov
sbb
nop
movsb
push
jmp
jb
movsl
cmpsl
and
jmp
cli
sahf
rcll
cmp
sub
lcall
add
stos
lret
pop
ljmp
aas
jecxz
mov
outsl
jmp
jae
rorl
insl
and
mov
loopne
in
and
pop
adc
mov
hlt
sbb
xchg
jg
andl
adc
xchg
pushl
into
lds
fnstenv
cmp
cld
out
ja
inc
insl
fiaddl
adc
out
jo
mov
gs
ret
inc
mov
xor
or
adc
mov
push
cltd
sti
mov
mov
jecxz
xchg
sbb
cmpsb
push
add
jl
jb
bound
xorl
test
pop
cld
sbb
mov
lcall
xchg
sbb
iret
pop
ret
scas
sub
xchg
aad
nop
daa
lods
or
mov
sub
mov
xor
ljmp
dec
out
sahf
jp
mov
inc
dec
or
cmp
aas
mov
das
sti
clc
mov
repnz
fistl
fildl
or
pop
shl
ds
lds
dec
cmp
and
aam
and
add
xchg
xor
adc
ret
pop
or
cs
mov
cmp
pusha
dec
lahf
push
mov
mov
or
shlb
sbb
push
or
ss
fidivl
cltd
sbb
or
lods
inc
adc
cmp
lods
addb
rcrb
jno
loope
inc
aam
ret
pop
outsb
cmc
xchg
insl
aad
sahf
xor
jmp
in
aas
cmp
add
hlt
pop
sub
les
addr16
aad
dec
out
mov
cmp
jle
cmp
pop
or
repz
shl
fcomi
xchg
dec
mov
shlb
test
movsb
pop
sub
xor
cmp
cld
xchg
dec
pop
push
mov
and
ja
mulb
add
lds
test
lret
mov
xchg
and
in
inc
xor
xchg
push
push
cmp
aas
push
mov
outsl
jno
out
sub
femms
dec
dec
filds
xchg
xor
push
mov
outsb
popf
pop
iret
cld
pop
adc
les
and
adc
add
and
and
push
pop
movsb
cmp
mov
pop
fbstp
pusha
movsl
insb
aaa
or
pop
test
out
pop
sbb
addr16
mov
fsts
rcrl
jne
lock
cmpb
ret
stos
mov
stos
cld
popa
jne
push
cmp
lods
fistpll
iret
popa
sbb
and
stc
nop
imul
mov
mov
fbstp
sbb
dec
bswap
bound
push
push
movd
popf
jo
xor
aas
jae
mov
fnstcw
in
sub
testl
cmp
out
subb
xor
jne
xor
jne
out
idiv
and
jecxz
or
jecxz
ljmp
scas
dec
ret
cld
popf
mov
in
sahf
cmpsb
bound
fwait
sub
add
adcb
pusha
jno
xchg
dec
and
pop
push
imul
xchg
int
push
push
jb
gs
add
inc
and
mov
js
lods
push
mov
add
ja
pop
in
aaa
mov
fidivl
dec
push
add
xor
jns
xchg
dec
pop
mov
decl
shrl
fstps
cmpsl
stos
je
ds
hlt
xchg
cmpl
insl
xchg
nop
pop
lods
mov
andb
push
out
orl
inc
scas
cmp
iret
mov
adc
out
push
mov
mov
pop
jo
dec
adc
insl
test
pop
mov
das
sub
xor
mov
aaa
xchg
mov
add
les
sub
jge
nop
jnp
xor
dec
movsl
cmp
adc
cmpsl
insl
in
ds
pop
xchg
sub
rorb
adc
lods
inc
jne
pop
hlt
mov
xchg
icebp
mov
mov
xchg
and
repz
cmp
mov
std
lcall
jne
ds
xchg
imul
mov
and
mov
mov
fnstenv
or
out
cmpsb
stos
inc
add
push
sbbb
aad
mov
or
loop
mov
jl
push
jmp
iret
mov
stos
out
enter
incb
sub
mov
movsl
adc
pop
dec
pop
add
push
push
stos
lock
xchg
add
in
gs
test
adc
mov
loop
add
pop
jns
pop
push
mov
push
test
xchg
inc
daa
jp
sub
lds
xlat
cli
cmc
cmp
imul
outsl
xor
inc
jmp
arpl
mov
mov
push
mov
xor
test
mov
jo
jge
jb
add
dec
daa
data16
jno
inc
push
push
aaa
push
jmp
movsl
mov
mov
fmull
pop
dec
das
lods
inc
popa
insl
loopne
lahf
or
mov
xchg
repnz
jg
adc
mov
sub
popf
pop
cmp
xchg
jp
mov
jmp
or
orb
mov
shll
cmpsl
aam
movsl
icebp
testb
jle
jno
cli
mov
ret
outsb
dec
repz
mov
popf
jecxz
addr16
stc
in
cmp
clc
addr16
add
sti
jg,pn
pop
out
sub
jg
popa
out
mov
jno
js
aad
repz
dec
pop
xchg
test
loope
sbb
pop
mov
adc
push
adc
sarl
xchg
leave
push
movsb
cs
xchg
sbb
dec
addr16
decl
mov
or
popa
push
sub
mov
mov
inc
int
das
pop
xor
xchg
push
jmp
and
popf
cli
jb
xchg
popa
cmc
mov
cltd
fs
rcrl
add
add
sub
rcr
cmpsl
xchg
inc
lret
jns
mull
scas
aam
addr16
in
stc
cmp
pop
jg
nop
or
inc
inc
das
add
test
mov
lahf
imul
lods
lods
jp
sub
je
xor
jo
xor
sbb
dec
push
mov
mov
shrl
hlt
adc
arpl
sbb
xchg
and
inc
sbbb
les
lcall
out
shl
mov
in
sub
and
mov
std
xchg
or
rcrl
xchg
fdiv
dec
push
pop
jmp
test
and
xor
mov
push
mov
psubsw
xchg
xor
push
fs
test
push
or
orl
loope
sahf
mov
inc
out
pop
dec
popa
js
cmp
inc
stos
push
arpl
pusha
lds
ljmp
sti
or
lds
cmpsb
cmp
or
xchg
test
lahf
lods
mov
inc
xor
hlt
dec
call
mov
test
jbe
mov
jp
clc
out
rcrb
or
adc
imul
mull
pop
xor
push
stc
mov
aas
xchg
fsubs
mov
call
popa
fisttpll
aad
mov
bound
cmc
pop
add
dec
fldz
mov
jecxz
prefetchwt1
pop
jo
cli
push
test
cmpsb
clc
movsb
std
pop
hlt
cs
jnp
add
pop
movsb
test
jns
pop
shrl
add
fs
stc
adc
sbb
movsb
cmp
cmpsw
fidivs
inc
cmp
or
cs
cmc
lahf
inc
cmp
incl
clc
dec
aad
sub
clc
pop
test
sarb
xlat
rcrb
inc
fsubl
inc
fdiv
jns
push
sub
mov
pusha
ds
daa
add
inc
popa
add
sub
jno
jns
xchg
outsl
inc
push
pop
jne
mov
sub
inc
mov
shlb
pop
or
jecxz
pop
stos
loopne
leave
jns
cmpsl
in
arpl
icebp
sub
mov
xchg
add
mov
sbb
cmp
cmc
pop
adc
push
lahf
push
xor
mov
mov
ror
fs
dec
repz
jnp
aad
daa
cvtps2pi
push
push
cmpsb
clc
movsl
push
adc
push
negl
fcmovne
lea
out
jno
cmp
std
fistpll
push
mov
add
enter
cmp
inc
pop
popa
xchg
pusha
movb
clc
mov
pop
orl
xchg
cltd
mov
jnp
mulb
xor
add
cmpsb
cmp
sbb
inc
xchg
pop
js
cmpsb
mov
adcl
nop
pop
sub
sub
jae
mov
cmp
fisubl
add
dec
mov
fwait
add
lret
xchg
sub
in
add
dec
imul
xchg
inc
int3
lcall
fsubp
test
adc
jnp
das
push
rorl
imul
in
lret
mov
cmp
daa
pop
les
inc
or
dec
inc
dec
mov
and
xchg
or
inc
movsl
mov
scas
pop
lret
add
mov
mov
mov
sub
ds
mov
insb
adc
xor
mov
xor
clc
jno
das
mov
dec
mov
ret
negb
outsl
push
inc
jnp
add
in
xchg
inc
mov
ljmp
andb
or
in
mov
sahf
shlb
iret
shlb
cmp
aas
dec
xchg
insb
in
jbe
pop
daa
mov
sub
mov
pushf
inc
add
push
ficoms
outsb
mov
decl
xor
pop
mov
sbb
hlt
add
clc
dec
xchg
sbb
test
scas
push
or
dec
in
cmp
pop
repz
arpl
rolb
repnz
xchg
imul
ja
stc
jl
fwait
fs
inc
stc
and
in
mov
popa
mov
lods
adc
popl
dec
push
mov
jne
jno
cmpsl
ret
les
fs
movsl
push
inc
lea
inc
pushf
outsb
fiadds
cmp
imul
mov
inc
xchg
jg
pop
mov
sbb
in
les
adc
adc
mov
outsl
out
push
and
xor
sbb
rcll
imul
jp
push
sbb
int
jmp
mov
push
packsswb
mov
push
cwtl
push
inc
cmc
imul
jb
cltd
jl
push
mov
push
jb
fcom
lea
incl
mov
xchg
sub
push
mov
std
sbb
loope
bound
fdivrs
fistpll
outsb
movsl
mov
xor
sbb
in
add
and
mov
push
lret
std
pop
lock
pop
dec
in
jle
sbb
stc
imul
popf
xlat
mov
rorb
or
fildl
dec
xor
enter
aad
xchg
fs
inc
fisttps
ja
dec
sub
mov
mov
bound
mov
mov
xchg
jge
mov
mov
inc
scas
pushf
test
add
aad
adc
movsl
inc
push
insl
and
movsb
pop
inc
out
sbb
fs
mov
mov
nop
mov
shl
pop
xchg
fstpl
push
out
cwtl
fpatan
shrl
cmp
mov
and
mov
nop
mov
gs
mov
dec
setno
inc
mov
aad
xor
mov
addb
or
aad
lock
push
fists
loop
and
fstpl
jge
hlt
mov
cmpsb
dec
nop
mov
cli
and
adc
mov
into
dec
js
mov
cmp
push
xchg
faddl
adc
int
sub
cs
inc
fadd
pop
insb
add
mov
mov
loop
add
xchg
mov
mov
inc
inc
pop
repz
or
adc
mov
scas
push
fmuls
pop
jmp
dec
dec
in
sar
push
lret
insb
jnp
jmp
js
xchg
jl
cwtl
jp
xor
cmp
push
inc
xchg
mov
sahf
shrb
fsub
and
inc
mov
inc
lods
mov
fstp
je
mov
and
sti
mov
mov
sbb
aas
ret
mov
notb
pushf
xchg
adc
add
cmpsl
jo,pt
cmp
pop
xor
divb
notl
mov
notl
test
cld
test
mov
pop
imul
fs
pop
cmpsb
cmp
push
sbb
icebp
mov
add
mov
add
ret
xchg
rorb
mov
imul
sub
mov
pop
mov
jge
cmp
inc
mov
and
lock
mov
ja
mov
add
or
fnstenv
pop
negb
sbb
imul
inc
push
scas
pop
outsb
icebp
and
sbb
in
repz
aas
dec
adc
or
cmp
das
inc
dec
push
dec
call
out
add
or
inc
pusha
or
inc
filds
inc
cmpsl
mov
repnz
dec
inc
imull
rorb
cwtl
xchg
sbb
dec
mov
bound
bound
cmpsb
push
xor
fldenv
mov
inc
scas
ret
sub
push
stos
xorb
mov
xlat
sahf
ss
jl
push
cmp
cmp
push
mov
insl
test
jmp
out
dec
xchg
cmp
add
roll
inc
jb
hlt
into
movsl
sahf
or
cmc
mov
es
mov
and
mov
sub
push
iret
cmp
popa
clc
ljmp
lods
sub
add
sbb
dec
jmp
adc
arpl
inc
dec
dec
icebp
push
and
mov
dec
xchg
into
imul
xor
lahf
daa
jl
inc
mov
xchg
imul
xor
sub
scas
dec
lret
xchg
outsb
aam
xor
jae
adc
subb
sub
mov
push
jl
jb
sbb
pop
cmp
leave
je
mov
faddl
jg
cmp
xlat
hlt
in
popa
ret
out
sbb
dec
mov
jno
popa
sub
ffree
mov
sbb
cmpb
jmp
imul
test
sub
icebp
mov
pushf
mov
iret
daa
mov
fisubs
mov
fcoml
cmp
xor
pop
add
and
scas
mov
ja
cwtl
arpl
divl
movsb
jo
mov
jl
pop
sbb
sbb
data16
pop
jnp
push
xchg
in
test
ljmp
lds
sub
jae
les
push
sub
xchg
push
popf
sti
xor
push
scas
loopne
daa
adc
test
sarb
test
loop
adc
pop
xchg
pop
add
popf
lods
fwait
xchg
ljmp
cmp
stos
xor
pushf
int3
in
push
roll
lea
gs
push
and
cmpsl
fistps
adc
xor
jno
cmc
pop
ds
jo
pop
sahf
ficompl
sbb
mov
mov
sub
inc
popf
cmp
push
repnz
andb
jae
call
mov
cmpsb
xchg
xor
xor
xor
adc
cmp
movsl
dec
jecxz
push
shl
xlat
push
mov
insl
fidivrs
vpmadcsswd
data16
mov
sbb
xor
or
loopne
pop
fimull
push
mov
jbe
pop
mov
xchg
or
dec
mov
and
leave
aam
xchg
out
test
pop
pop
inc
cmp
es
popf
out
sahf
mov
sbb
mov
adc
pop
sbb
xlat
sub
adc
clc
adc
imul
sbb
mov
subb
adc
pop
fadd
sub
jns
hlt
negl
dec
aam
cli
push
jp
shrb
xchg
adc
imul
push
push
aas
stos
fdivrs
dec
scas
stc
jbe
add
push
push
push
jp
inc
insb
ljmp
shlb
mov
mov
inc
push
icebp
pop
lods
dec
jecxz
xor
popa
add
pusha
jb
lods
mov
inc
mov
arpl
and
inc
pop
movsb
adc
in
inc
adc
in
mov
std
pop
daa
xor
negl
push
cmpsl
sbb
cltd
jge
test
mov
xor
add
sub
and
pop
repnz
mov
dec
xchg
and
pop
mov
jge
pop
fldcw
outsl
call
test
insb
mov
pop
mov
jno
jns
or
mov
dec
testb
mov
fstps
sbb
dec
cmp
loop
cwtl
or
lds
loope
lahf
adc
movl
jmp
lahf
pop
xchg
icebp
leave
pop
push
movsl
stos
cmpsb
rorl
hlt
and
jge
out
inc
push
xchg
mov
push
out
mov
push
jne
orb
pop
mov
sbb
dec
test
andb
push
out
cld
gs
data16
dec
push
outsb
mov
jge
xchg
add
ljmp
lea
packsswb
jge
adc
push
cmp
fstpt
aaa
into
sbb
shll
aad
push
mov
fisubrl
cmp
pop
loope
stos
xchg
cmp
jno
sbb
push
cmpl
loopne
sbb
dec
xchg
sub
iret
pop
cmp
aam
sub
jb
movsl
dec
dec
fst
testb
cli
adc
shlb
pop
loope
hlt
popa
jp
xchg
pop
push
xchg
lret
or
xor
sarb
mov
iret
jge
xor
jmp
fisttpl
xchg
jae
mov
xor
add
les
imul
push
xchg
scas
mov
mov
shr
stos
enter
lret
fiadds
loopne
aas
jae
into
faddl
inc
pop
pop
xor
stos
jle
jle
add
xor
test
xchg
jp
stos
lahf
mov
xor
cltd
out
lea
stc
js
mov
lret
and
pop
adc
test
addr16
pop
roll
ficoml
cwtl
push
and
andl
xchg
mov
jg
pop
lcall
iret
xor
out
lock
in
scas
aas
dec
repnz
jns
rol
js
push
in
xchg
repz
sub
adc
cmpb
jle
cmp
orb
cmc
jo
sbb
or
cld
xor
test
fistl
push
jno
clc
jae
sbb
repnz
jne
mov
jl
jmp
stos
popf
cmpsb
arpl
int3
mov
rorl
push
les
ret
fsts
inc
mov
shr
fs
push
mov
mov
and
inc
mov
adc
push
adc
cs
sbb
push
andl
sti
dec
fidivs
add
mov
mov
cltd
in
mov
sub
in
adc
inc
mov
adc
ljmp
xchg
mov
xchg
jo
loopne
mov
mov
aas
fs
icebp
or
das
jne
pop
js
mov
aam
inc
xchg
sub
dec
hlt
stos
out
fistl
ja
ret
cmc
mov
addb
test
stc
popf
inc
leave
xor
jne
outsl
add
cmp
xor
flds
enter
mov
jno
loop
in
out
popf
icebp
mov
int3
loop
lock
fcmovnu
sbb
imul
lea
add
pushf
jns
int
xchg
mov
jmp
jo
push
and
ds
int3
mov
je
lds
add
test
mov
int
jmp
out
scas
insb
xchg
push
mov
jl
das
ss
clc
repz
and
nop
push
or
fmuls
pop
cmp
add
fidivrl
dec
dec
mov
loopne
vcvttpd2dq
shl
ss
inc
shl
mov
cmpsb
cmp
mov
jmp
stos
dec
xchg
jmp
pop
xchg
mov
test
fwait
shrd
sarl
fistps
push
inc
adc
adc
ja
sbbl
pushf
or
call
and
jb
das
push
iret
push
mov
jo
xor
and
jne
sbb
xchg
inc
imul
icebp
scas
and
adc
insl
imul
cmc
outsl
push
xor
test
mov
fucomip
idivl
pop
addl
cld
movsb
loopne
pop
repnz
nop
fs
adc
pop
push
xchg
lret
dec
sbb
mov
mov
mov
push
fadds
dec
sbb
mov
dec
cmp
adc
adcb
dec
lahf
int
mov
dec
shld
aas
sub
outsl
sub
xchg
mov
gs
scas
mov
adc
push
addr16
loope
in
test
cmpsl
pop
aaa
test
clc
mov
add
push
mov
pop
stos
ficoml
xchg
or
push
mov
sub
cmp
jecxz
call
cltd
ret
jp
rorl
filds
and
dec
mov
fmul
pop
fstl
cmp
jge
push
outsl
push
cwtl
xchg
mov
mov
jno
cmp
gs
cmc
mov
xchg
subb
les
jbe
push
test
fisubrs
inc
xchg
pop
jb
insl
sbb
and
sub
cs
adc
or
inc
xchg
mov
mov
ss
mov
inc
pop
in
push
mov
xor
jns
scas
mov
inc
adc
inc
push
and
mov
es
shrb
je
or
inc
or
outsl
or
insl
cmp
mov
xchg
jmp
pop
out
sub
shlb
sub
mov
out
pop
mov
mov
aas
rcll
mov
xchg
xchg
pop
and
jnp
mov
jne
cs
xor
mov
jns
xchg
sub
jae
jnp
pop
adc
sbb
sbb
add
gs
or
outsb
jp
push
bound
jo
insb
popf
push
mov
jp
pop
add
dec
xor
fcoms
lret
rol
sti
mov
push
stos
ret
mov
fidivrl
repz
mov
xchg
pop
lds
jnp
outsw
clc
dec
jge
push
xor
xchg
mov
and
sub
mov
cmp
adc
stos
out
adc
leave
gs
pop
gs
sbb
lds
jge
mov
push
lret
cmp
jmp
mov
incb
leave
cmp
stc
lods
leave
je
in
mov
push
add
cmp
outsb
jecxz
pop
dec
pop
xlat
cmc
or
mov
pop
fwait
lods
std
mov
push
jge
pusha
push
cmp
or
fcoml
jmp
aaa
jmp
je
psubd
inc
mov
fucomp
mov
test
jns
testb
lods
adc
loope
fwait
push
and
jg
std
popf
aad
call
js
daa
rclb
daa
lea
lds
push
movsb
sahf
mov
fs
xchg
sarb
dec
push
hlt
xor
sub
add
push
push
rorb
pop
and
or
repz
in
cmpsl
jle
pop
and
xchg
add
jecxz
repnz
pop
ljmp
pushl
and
sub
xor
into
add
sub
xorl
loop
jl
js
loopne
add
jp
dec
inc
hlt
or
sub
mov
clc
adcl
sub
adc
movsb
mov
ud1
jge
out
sbb
test
ss
dec
mov
test
inc
push
scas
mov
lcall
jl
dec
mov
push
popf
lret
mov
jnp
or
jle
pop
cmc
out
ljmp
sti
lds
adc
xchg
mov
ficoms
std
inc
xchg
xor
cmp
loopne
lret
dec
dec
push
dec
in
inc
sarb
in
out
in
fcoml
adc
mov
mov
mov
cmp
jge
adc
mov
lret
xchg
add
xor
ret
xor
addb
mov
and
or
dec
lds
aaa
push
jge
mov
out
xchg
in
popa
sahf
jecxz
xchg
out
dec
adc
fs
pop
iret
fstpt
dec
adc
mov
test
or
cltd
inc
mov
shrb
xchg
mov
xchg
out
js
jg
or
imul
mov
mov
les
ljmp
xchg
sub
aas
stc
mov
add
xor
pusha
ret
mov
scas
sub
push
inc
cmc
inc
cmpl
movsl
mov
mov
add
sub
xor
lret
sbb
lahf
cs
test
lret
jns
lret
xor
mov
mov
lahf
xchg
jge
and
push
push
add
bound
imul
fisttpll
fidivl
xor
or
push
mov
in
rorb
dec
mov
clc
xor
icebp
fbstp
mov
fsave
stc
nop
movsl
push
ljmp
lock
stc
movsb
mov
mov
divl
xchg
add
nop
clc
pop
pushf
sub
into
leave
or
mov
sbb
rorl
mov
sti
cmp
scas
xchg
push
mov
sub
pop
imul
sbb
jmp
subb
jno
mov
mov
jge
lret
cli
mov
push
add
mov
sbb
cmp
shrl
std
and
mov
xor
dec
or
repz
mov
repz
dec
cmp
fstpt
pop
pinsrw
pop
lock
ret
and
pop
ror
repz
in
or
add
popa
sarb
push
or
in
sub
add
jmp
out
jecxz
ljmp
lds
fistps
push
out
mov
fldcw
cmp
push
divl
or
jmp
add
xchg
xchg
xchg
repnz
sbb
xlat
pop
repnz
in
jg
jns
ja
icebp
sbb
outsb
pop
repz
aad
popf
movsl
js
or
shrl
dec
inc
adc
or
mov
out
or
cmp
outsl
call
xor
xchg
dec
cwtl
into
loop
cltd
pop
xor
pop
insb
sbb
pop
icebp
loop
repnz
inc
decl
cli
push
push
jne
mov
aaa
rcrl
dec
rol
sub
pushf
jl
je
and
inc
jno
cltd
inc
jp
idivl
loopne
shll
test
pop
push
repz
or
cmp
and
mov
int
out
aaa
outsl
pop
xor
repnz
dec
adc
jge
and
push
sbb
aam
es
cli
xchg
sbb
arpl
push
cltd
add
bound
push
sbb
stos
jmp
pop
mov
push
push
sub
sbb
decl
orl
sub
dec
or
cltd
fildll
xlat
cmp
cmp
jo
cmpsb
sti
out
push
leave
imul
int
mov
stc
out
pop
pop
in
cmp
mov
rcrl
pop
test
sub
lcall
inc
fsubs
mov
das
pop
stos
cmp
mov
sbb
xchg
pop
sub
jp
test
dec
nop
mov
xor
jge
clc
ss
inc
ret
fs
insb
mov
les
andb
xor
xchg
pop
movsb
mov
mov
sub
sub
sbb
inc
push
lods
inc
mov
lret
cmp
dec
lret
popa
out
and
filds
out
je
and
xchg
shrb
outsl
xor
mov
cmpsl
dec
mov
dec
sbb
jle
shrb
sub
sahf
mov
or
popf
cld
mov
xor
xchg
jne
sub
andl
hlt
cs
or
orl
jbe
loopne
add
xor
loopne
stos
loopne
xchg
push
jne
jno
xor
popf
sub
mov
xchg
pusha
fdivrl
xchg
mov
jge
shl
pushf
aam
clc
mov
jge
lcall
sbb
xchg
pop
xchg
sub
xlat
mov
pop
lcall
inc
inc
or
loope
and
xchg
std
jmp
rcll
enter
ds
push
dec
jnp
mov
out
mov
sbb
sub
push
imul
fwait
push
jp
dec
mov
out
lods
loope
out
adc
inc
or
add
daa
dec
pop
lods
pop
inc
aas
aad
sbb
xchg
dec
and
stc
fsubs
rol
sub
xor
test
xchg
xor
pop
in
fimull
cmp
js
outsl
pop
mov
jle
js
in
fidivl
in
cmpsl
xchg
xlat
orl
mov
add
jmp
cmp
xchg
cld
push
xor
lock
addr16
adc
ss
xlat
dec
or
jno
xchg
shlb
repnz
aaa
or
outsb
cmp
push
xor
testl
sbb
in
cld
lock
test
cmc
daa
data16
jnp
sbb
sbb
xor
mov
sub
testb
je
mov
add
and
rcrl
and
mov
dec
xchg
mov
cmpsl
adc
outsl
cmc
dec
adc
arpl
pop
scas
daa
xchg
cmc
leave
pusha
sub
jecxz
testb
dec
scas
nop
stos
inc
iret
sti
or
roll
sub
ret
push
fiaddl
inc
loope
gs
mov
jns
je
aam
xchg
sub
and
xor
push
add
sbb
js
push
xorb
xchg
pop
loope
andl
mov
std
int
cmp
mov
lds
xorb
sub
push
mov
or
xchg
lock
xor
jae
out
lahf
push
pop
jle
xchg
mov
into
and
ret
int3
sahf
cmp
adc
pop
scas
cmp
movsl
mov
push
xor
inc
je
dec
cmp
lret
hlt
pop
testb
dec
xchg
mov
xor
pinsrw
inc
jmp
es
jae
popa
testb
lea
mov
jnp
int3
arpl
xchg
inc
stos
or
push
cmc
inc
loop
je
les
lods
jb
pushf
into
movsl
dec
testl
and
mov
cmp
lcall
mov
fildll
iret
callw
pop
enter
aam
in
hlt
cmc
mov
outsl
test
or
out
movsl
mov
push
call
mov
nop
mov
inc
loope
insb
adc
iret
xchg
faddl
clc
or
sub
jl
cmpl
push
xchg
mov
test
out
xchg
add
mov
jbe
ss
sahf
push
rclb
fidivrs
mov
out
outsl
push
mov
pop
imul
ret
pop
jb
pop
arpl
fistpll
push
push
push
mov
out
pop
cld
push
es
data16
sub
shlb
jne
loop
xor
push
shl
sbb
je
xor
jno
je
out
jnp
mov
or
sub
dec
or
jmp
xlat
les
popa
es
pop
bound
xor
xor
scas
adc
mov
mov
push
cmpsb
repz
cwtl
sub
lds
int
pushf
jg
adc
mov
pop
sahf
dec
push
lods
jg
inc
sub
pop
mov
daa
sub
mov
push
dec
add
add
pop
fs
xchg
or
mov
inc
jo
frstor
add
jbe
rorb
lea
fsubr
daa
mov
adc
bound
shl
inc
int
aas
sub
cmp
stos
and
mov
sbb
or
jmp
dec
xor
pop
push
scas
pop
and
inc
cld
int
insb
cmp
push
mov
or
mov
sub
movb
mov
es
addr16
stos
cmp
stos
pusha
jb
int3
fisubrs
push
mov
push
inc
pop
mov
sahf
stc
xor
jb
pop
xor
ja
cmpsl
sbb
test
mov
adc
test
aaa
mov
mov
xchg
cmp
hlt
xchg
sbb
cmc
and
sub
lahf
xchg
sub
in
xchg
rcrl
in
aad
pop
cld
cmp
out
xchg
fwait
mov
adc
and
cmp
push
jb
xor
xchg
popa
lock
movb
stc
sbb
push
fstpt
cmp
xor
cmpl
movsl
hlt
hlt
mov
add
js
mov
and
sub
or
dec
daa
data16
push
out
lret
fldt
in
subl
xchg
loop
push
out
dec
jecxz
or
sub
adc
add
roll
out
hlt
sbb
push
cmpsl
mov
je
add
xor
mov
mov
leave
push
insl
cs
mov
mov
test
sahf
das
dec
pop
popa
mov
fadds
and
push
sbb
fnstenv
clc
rorl
out
dec
add
divl
pop
dec
mov
or
ds
cmp
loope
and
and
or
andb
dec
xor
mov
lcall
dec
cs
rcrb
out
rcrl
xorl
mov
jg
cmp
loope
fisubl
out
popa
dec
inc
cld
mov
test
int
sub
popf
jmp
ret
jne
hlt
and
xor
sub
insb
dec
push
dec
arpl
xchg
rcr
rorb
add
mov
ret
pop
test
push
mov
push
inc
cmp
mov
or
or
jno
or
sbb
scas
movsb
std
and
inc
andb
stos
push
dec
add
sarb
add
mov
test
lret
faddp
dec
scas
mov
cmp
xor
inc
fscale
in
bound
scas
subl
sub
icebp
movsl
or
lods
inc
and
sbb
incb
es
lods
mov
mov
cmpsb
insl
sub
shll
or
mov
or
jo
cmpsb
ljmp
and
adc
xchg
add
scas
popf
xor
cmc
int
mull
mov
cmc
mov
fldl
incb
or
add
jb
test
aaa
push
xor
push
loop
popf
out
sti
fbld
loopne
inc
fucom
add
addr16
fucomp
popf
push
ret
repnz
fiaddl
sub
and
leave
sub
cld
jle
pop
popf
lahf
dec
pop
mov
sarl
sbb
stos
mov
xlat
test
push
insb
fbstp
add
out
repnz
add
dec
mov
inc
call
stos
ret
and
pop
push
add
or
outsl
or
pop
mov
mov
lret
aam
mov
sub
sub
orl
gs
adcl
movsl
sbb
rcl
aas
inc
mov
jbe
das
shrl
push
push
pusha
cmp
imul
add
inc
adc
je
das
pop
loop
in
jo
aad
daa
ret
cld
dec
in
inc
push
fldenv
imul
mov
mov
sbb
pusha
inc
pop
jbe
jbe
lea
xor
pop
addr16
inc
mov
hlt
mov
jmp
sti
ror
sbb
mov
and
popa
inc
sahf
xor
mov
mov
std
jmp
stc
sbb
cmc
jo
mov
pop
out
add
mov
jmp
mov
or
jb
sub
jp
dec
inc
and
out
cmp
ds
daa
pop
xor
lods
in
inc
pop
rep
shrl
clc
stos
sbb
int3
fwait
imul
fidivs
adc
jne
data16
stos
push
enter
and
dec
inc
jmp
xchg
pop
insb
mov
sub
movsl
or
pop
xor
mov
imul
adcl
int
je
fstps
movsb
fisubl
cmpsb
mov
in
outsl
sahf
and
notl
lcall
sub
arpl
out
adc
inc
mov
sub
test
pop
push
aaa
add
je
add
sub
sbb
jbe
mov
int3
insl
rorl
popl
cltd
mov
pop
rcrl
or
cld
pop
adc
mov
jae
jmp
je
incl
lret
pop
outsb
add
hlt
movsb
cmp
fcmovnb
les
push
in
adc
test
and
sbb
xor
lret
or
clc
inc
xchg
pop
mov
mov
rcr
xchg
mov
fimull
pusha
adc
mov
sar
push
inc
mov
f2xm1
std
adc
cli
les
jg
xor
sahf
cltd
xchg
sbb
sub
push
cwtl
push
int
mov
mov
pop
mov
orb
mov
sbb
les
stc
or
int
pushf
push
and
mov
add
mov
je
add
fnstcw
cmp
data16
push
lahf
test
cmp
pushf
jmp
jae
mov
aam
imul
outsl
sbb
cmp
sbb
jl
ljmp
mov
push
fdiv
and
xchg
arpl
xor
push
add
xchg
xchg
bound
xlat
leave
and
stc
xor
bound
inc
imull
dec
pop
dec
mov
jl
lods
pop
fldenv
add
test
mov
loopne
cltd
out
mov
in
mov
mov
das
add
popf
frstor
push
jae
xchg
into
loopne
mov
faddp
arpl
bnd
adc
add
addr16
push
lcall
loope
dec
inc
bound
stos
fiaddl
loope
inc
inc
movsb
push
lods
mov
gs
add
mov
shr
lods
pusha
aas
out
in
inc
fisubl
xchg
xchg
xor
shrb
sub
mov
enter
int
popf
jp
sarb
or
ss
cli
or
dec
int3
sbb
mov
jge
jo
lods
clc
popf
or
iret
lret
mov
test
adc
cmp
mov
icebp
and
les
decb
mov
in
in
add
rorb
mov
hlt
fdivrs
xchg
idivl
mov
cmp
scas
cmpsl
sbb
add
idivb
into
lds
xchg
loope
mov
inc
jo
sbbb
dec
mov
rolb
adc
mov
adc
pusha
xchg
push
in
push
nop
dec
gs
orb
dec
or
sar
sbb
add
divb
mov
cmp
push
cwtl
mov
dec
movsl
fwait
in
test
add
in
test
adc
xchg
int
leave
insb
adc
pop
add
jns
xor
scas
pop
mov
fidivrl
sub
mov
push
out
cmp
js
pop
call
xor
inc
and
lahf
add
dec
imul
lret
mov
repnz
icebp
xchg
and
repz
push
push
add
mov
sbb
lods
pushf
sub
mov
jg
add
pop
mov
push
lret
out
gs
mov
mov
jge,pn
add
movups
nop
pop
scas
inc
cmp
popf
xor
nop
jmp
xor
fiadds
adc
int
insl
adc
mov
inc
xchg
iret
fildl
lds
scas
mov
pop
xor
les
test
fildl
scas
sbb
movsl
pop
jb
nop
fs
shrb
push
mov
and
push
sub
xchg
or
mov
andb
pop
pop
cmp
fstpt
dec
lret
pop
and
loop
jl
inc
ss
cmp
pop
iret
push
rorb
ret
pop
xor
fisttpll
inc
cld
test
push
sub
das
push
and
xchg
mov
jg
mov
push
mov
add
jb
das
lods
cmp
adc
sbb
dec
dec
fiadds
push
mov
loop
jnp
xlat
mov
add
out
test
pop
repnz
aad
xor
test
scas
call
or
mov
loope
loop
jno
add
cmp
aam
rorl
lret
push
adcb
rcll
test
das
cwtl
push
dec
inc
lock
jge
test
mov
add
xchg
push
cmc
mov
push
ret
andl
aad
push
jmp
pop
out
mov
das
mov
inc
movsb
imulb
fwait
adc
mov
pop
or
out
xchg
int
testl
shl
sub
mov
jo
jle
jb
or
lcall
pop
xchg
push
jg
outsl
push
add
inc
xor
or
and
mov
shlb
jae
std
loopne
jno
add
es
stos
fsubr
sbb
fidivl
jb
rolb
and
add
push
dec
push
test
loopne
lea
out
push
xchg
sub
inc
nop
lods
call
mov
sbb
outsl
xor
insb
sub
test
test
jp
call
xchg
and
fxch
mov
push
xchg
cmp
mov
aam
sub
mov
mov
dec
cmp
mov
out
in
enter
sbb
hlt
int
cmpsb
leave
enter
arpl
lods
popa
int
stos
pop
neg
arpl
sahf
pop
inc
inc
aaa
hlt
and
lods
stc
dec
mov
or
cmc
loopne
and
call
cs
outsl
dec
pop
lock
mov
jle
add
pop
mov
subb
lcall
bnd
sbb
rcrb
in
aaa
pop
daa
or
add
mov
lahf
or
pop
insb
faddl
push
stos
jle
mov
or
mov
lret
pop
mov
jo
js
repnz
dec
jns
subb
mov
icebp
ss
and
aas
push
inc
cld
push
pop
in
popf
sub
ret
out
add
mov
js
push
mov
insl
aam
pusha
mov
int3
inc
test
repz
insl
adc
pop
pop
mov
movsb
fsubrs
or
inc
mov
fildl
scas
dec
repnz
popa
loopne
cltd
xchg
ja
scas
repnz
mov
xor
mov
mulb
enter
mov
int3
out
lds
test
mov
subb
test
mov
sbb
sub
mov
in
enter
cld
lods
and
ret
es
out
pop
sub
rorl
inc
sti
jmp
add
pop
iret
mov
cmpsb
mov
push
sahf
jge
inc
sub
jg
imul
sti
cmpsl
cmp
aas
mov
adc
jmp
in
test
dec
jp
adc
add
sub
or
packsswb
lods
jl
sti
inc
cs
outsl
pop
iret
lahf
jae
sub
mov
add
jb
aas
icebp
cwtl
in
mov
ja
or
scas
mov
push
mov
pop
jbe
mov
popf
mov
sbb
imul
push
add
outsb
fnstsw
xchg
mov
ljmp
jp
inc
pop
and
sub
cmp
mov
js
jg
dec
add
lcall
mov
dec
iret
stos
jbe
arpl
push
and
cs
test
mov
cmc
orb
push
iret
jp
enter
cmp
mov
fldcw
push
ja
aam
imul
sbb
lds
mov
push
movsl
out
icebp
movsl
pop
add
sub
pop
aaa
ror
in
mov
cli
outsb
out
mov
cmc
cmp
push
test
popf
addr16
adc
stos
pop
jne
and
inc
sbbb
mov
and
scas
mov
aam
insb
iret
in
mov
lahf
in
nop
lds
ss
nop
jl
and
cmc
mov
dec
lcall
mov
xchg
add
and
adc
sub
repz
adc
outsb
cwtl
mov
das
pop
sbb
std
sbb
pop
mov
adc
rolb
dec
pop
pop
cmp
ljmp
xchg
int3
mov
mov
popa
and
inc
sbb
jb
lcall
cmpsl
fdivp
xor
movsb
add
lods
inc
pop
data16
lcall
xor
dec
dec
push
bound
cmp
mov
pop
in
inc
popa
adc
xor
jb
mov
ljmp
jp
pop
jle
sub
cld
adc
sub
pushf
push
inc
out
or
pop
jge
cwtl
pop
xlat
cmp
mov
jbe
lds
push
xor
adcb
pop
repnz
lea
popf
dec
mov
ss
mov
cmp
xchg
stos
cmp
insb
rcrl
aas
mov
xor
ljmp
push
test
imul
push
mov
lock
jl
jns
inc
xlat
push
ljmp
xor
dec
jns
rolb
mov
jmp
scas
call
jp
sbb
dec
cltd
dec
xchg
les
mov
pop
shrl
inc
cli
ret
ljmp
fsubl
movsb
in
mov
or
lds
das
rol
xchg
enter
pop
das
jnp
scas
jge
mulb
inc
jge
sbbb
nop
mov
jns
push
out
outsb
hlt
fwait
inc
cld
xor
outsl
jns
xchg
cmp
cmp
ja
ds
imul
xchg
jo
sub
mov
sub
int
pop
lea
and
or
xchg
push
fcmovb
outsl
cmp
push
mov
inc
popa
clc
mov
fdivrl
mov
arpl
int
pop
mov
add
inc
or
add
pusha
jnp
rorb
jns
insb
mov
sub
push
shr
mov
mov
scas
cmpsb
fisubrl
lods
loop
cs
dec
vsqrtsd
xchg
out
lock
sbb
jnp
adc
add
adc
push
xchg
dec
enter
add
add
setne
or
push
jae
sbb
lahf
testb
or
mov
cwtl
pop
add
jle
cmp
xor
inc
inc
data16
insb
add
xchg
out
jb
fmuls
adc
das
or
icebp
jecxz
aas
sub
daa
outsl
shlb
pop
lods
inc
data16
inc
fimull
or
adc
decb
mov
push
in
sbbl
dec
and
xchg
lods
and
dec
int3
mov
push
shll
test
sub
or
ja
jecxz
fistpll
in
sbb
cmpsl
jnp
xor
inc
sbb
and
out
addl
xchg
cmc
inc
mov
mov
add
inc
or
cmp
add
scas
jle
repnz
out
movsl
mov
es
shrl
dec
cmp
ss
sub
jg
int
scas
push
icebp
adc
xor
aaa
hlt
push
outsl
es
repz
and
cld
in
adc
push
and
push
jns
loope
push
fisubrl
inc
and
shrb
jle
repz
test
cmp
or
repnz
cs
xchg
mov
lods
nop
jnp
neg
nop
xchg
sarl
mov
mov
dec
ljmp
sahf
jbe
rolb
pop
imulb
push
cmpsb
adc
push
jge
adcl
imull
mov
jo
pop
inc
jne
in
sub
jns
repnz
fdivrl
out
xchg
fmuls
sti
es
push
lods
test
push
je
fwait
xor
int
in
test
hlt
xchg
dec
js
mov
jns
mov
ja
lock
push
push
ds
stc
outsl
jae
in
mov
fnsave
cltd
xor
dec
mov
rorl
adc
divl
testb
std
adc
stos
cmp
jbe
or
arpl
adc
aam
fstpt
mov
cwtl
das
dec
or
shlb
add
aas
fs
cli
std
xchg
scas
cmp
inc
fcmovb
fmuls
push
lahf
sub
xstore-rng
cmpsl
lds
pop
jmp
or
xchg
lret
jno
jl
lcall
mov
fisubrl
or
jle
in
aam
fstpl
xor
xlat
push
sub
sbb
add
pusha
mov
sub
int
mov
movsb
rclb
scas
call
mov
mov
mov
aad
dec
mov
push
inc
pop
icebp
jg
fsubr
mulb
repz
rcll
sbb
repnz
sbb
jbe
movsb
aas
leave
xlat
mov
and
inc
mov
jns
loope
sbb
mov
cmc
mov
testl
or
stos
lea
mov
stos
shlb
loop
and
inc
aas
es
aad
loope
scas
xchg
imul
xchg
sub
inc
fcmovbe
dec
inc
sarb
pop
test
xchg
sarl
jge
push
notb
xchg
es
inc
cmp
loopne
fwait
movsl
neg
mov
arpl
leave
aad
inc
mov
ret
data16
cld
xlat
xchg
jb
sbb
fwait
popa
fmull
addr16
cmp
mov
inc
in
add
pop
lahf
jmp
xchg
adc
dec
mov
scas
sbb
adc
jmp
iret
pop
xor
cltd
pop
cmc
lret
mov
fdivrl
pop
xorb
inc
data16
int
psllw
adc
and
pusha
push
out
dec
test
push
nop
mov
out
movsb
imul
out
cmpsb
rcrl
or
repz
and
pop
outsl
andl
enter
aaa
into
stos
mov
mov
mov
shrb
inc
mov
sub
rcrb
or
fmuls
inc
iret
sub
push
into
gs
xor
idiv
fiaddl
movsl
mov
popa
push
mov
mov
xchg
js
jnp
xor
mov
jle
add
dec
mov
aad
sub
dec
mov
sub
dec
mov
inc
les
mov
jle
sub
xchg
sub
test
lods
inc
or
repz
mov
sbb
add
inc
clc
push
push
lock
jbe
ljmp
sti
vpsubw
dec
loopne
or
inc
fldenv
pop
sub
cmp
repnz
mov
cmpsb
sarl
jl
ret
mov
pop
ret
or
inc
adc
sub
mov
jbe
hlt
mov
idivl
imull
cmp
dec
pop
adc
les
or
mov
pop
and
inc
cli
cmpsb
cmc
in
daa
gs
jne
xor
sbb
xlat
insl
inc
fistpl
jg
jl
push
out
xlat
rcrb
loopne
pusha
and
pop
or
inc
mov
xchg
sub
mov
inc
mov
lods
iret
scas
repz
out
cmp
imul
shll
test
sub
ret
inc
jb
aaa
add
jbe
and
mov
call
and
sub
outsb
jo
dec
add
inc
sub
shll
sbbl
test
mov
fsubrs
lods
mov
sbb
cmp
clc
in
outsl
in
pop
int
or
mov
sti
pop
xor
in
divl
incb
pop
repnz
sub
shr
sub
dec
adc
pushf
or
negb
xor
inc
imul
scas
push
mov
push
and
lock
pop
aas
add
add
mov
mov
inc
pop
cmpsl
mov
cmp
cld
adc
test
push
inc
fistps
stos
inc
add
and
and
lahf
sub
icebp
pop
shlb
enter
call
scas
subl
sub
lret
or
int3
hlt
lock
lods
and
jb
inc
ja
sub
xchg
push
adc
jmp
inc
and
cld
out
test
rol
push
arpl
push
das
cmpsb
dec
sbb
mov
fiaddl
scas
inc
pop
xor
fnstcw
or
sub
inc
jg
cmp
xlat
mov
aaa
hlt
inc
incl
rcl
mov
movsb
hlt
mov
mov
inc
test
cmp
add
je
call
aaa
stos
mov
push
or
push
fwait
lret
imul
bound
cmpsb
in
push
push
fnstsw
sti
xor
jp
gs
push
inc
sahf
adc
sahf
push
loope
mov
stos
xchg
lods
lcall
data16
dec
mov
test
repnz
in
into
mov
pop
repnz
les
jae
pop
in
xchg
lcall
test
scas
cmpsl
ljmp
sub
gs
aam
test
sbb
adc
mov
mov
fldenv
adc
mov
fistpl
les
nop
xor
xchg
mov
test
nop
jle
test
int3
sub
add
sarb
jge
and
xor
sbb
mov
jp
add
les
adc
add
inc
je
dec
movsl
push
xchg
push
roll
das
or
scas
and
fcomps
ja
mov
insl
dec
mov
rolb
movsb
pop
dec
mov
adc
aam
adc
jno
sub
data16
mov
negl
xchg
mov
dec
add
pop
dec
dec
cmp
subb
or
cmp
fwait
pop
adc
clc
shll
mov
out
xchg
mov
aaa
into
pop
insl
adc
in
ret
jbe
xchg
xchg
ja
push
loop
xor
xchg
fidivl
mov
ret
or
xor
daa
psllw
jp
scas
int
outsl
add
fnsave
testb
lds
fmuls
iret
popa
or
inc
cwtl
adc
in
cmp
pop
lods
scas
mov
cli
mov
sub
lea
std
or
cli
dec
mov
mov
pop
fistpll
sub
lods
xor
lods
cmpb
mov
pushf
sub
jl
and
adc
lcall
gs
aam
add
cmp
insb
hlt
mov
adc
pusha
mov
aaa
xor
addr16
push
cmpsl
push
xorl
sub
maxps
dec
iret
int3
pop
imul
popf
test
sarl
lds
lahf
hlt
scas
ret
mov
outsl
aam
sbb
lcall
cli
fwait
loopne
std
xor
or
cmp
jp
mov
cli
subl
push
lret
jg
sub
lock
or
push
das
pop
pop
jmp
stos
add
jb
cmpsl
ret
pop
je
lret
push
dec
aas
aad
and
jge
jecxz
movsl
inc
mov
mov
ret
pop
mov
adc
and
push
test
xchg
add
and
sub
cmp
and
add
xchg
sub
sub
dec
mov
test
iret
mov
and
sbb
add
jecxz
xchg
mov
outsl
outsb
sub
rcl
test
out
ret
mov
push
jl
das
sub
rcrb
orl
xor
sub
repnz
jae
xor
mov
pushf
cmp
es
clc
popf
xchg
fdivrl
out
cli
jne
repz
fisubrl
call
xor
pusha
cltd
xor
or
shll
rcrl
icebp
fwait
push
mov
xor
jno
mov
sub
xor
mov
outsb
daa
inc
lea
xchg
push
xchg
sbb
pop
pop
imul
imul
cmp
testl
jg
or
xchg
cmp
pop
mov
push
sarb
sbb
addr16
insl
lret
inc
add
sub
pop
ja
mov
mov
lret
sar
jo
adc
std
arpl
xor
outsb
test
fwait
sti
fldcw
mov
inc
push
outsb
jns
sub
dec
sarl
fldt
pop
jg
cwtl
std
stos
jns
stc
mov
push
jge
adc
mov
dec
sub
mov
adc
shrb
lcall
fistps
mov
xchg
bound
dec
js
xor
add
and
xor
mov
push
shlb
sub
jne
aam
test
movsl
adc
fidivrs
pop
dec
repnz
add
mov
fidivs
lahf
stos
sbb
push
xchg
cwtl
das
xchg
aam
xor
ja
fnstsw
add
xor
mov
and
mov
out
rcrb
cmp
adcl
add
ds
add
cmp
dec
mov
imul
cld
leave
jno
sti
and
insb
xchg
xchg
xlat
outsb
mov
js
jg
adc
push
adcl
jb
mov
push
add
inc
push
mov
mov
inc
push
ss
or
dec
iret
mov
cmp
add
mov
xchg
xchg
add
mov
mov
lret
outsb
xchg
mov
mov
sbbb
jecxz
arpl
xor
push
sti
jae
or
and
sahf
fs
adc
xor
dec
pop
jne
por
cmp
and
iret
jp
ljmp
adc
jo
jb
inc
push
orl
jl
sbb
ljmp
pushf
push
push
sbb
sbb
jmp
jl
lcall
dec
aad
or
out
cmpsb
cmp
fsts
push
lcall
in
arpl
or
cmp
lret
fists
adc
mov
in
daa
inc
fdivp
lea
icebp
adc
cmp
dec
mov
cmp
dec
pushf
ret
pop
cmp
test
cmc
fsubp
ja
outsb
mov
sub
and
fs
cmpsb
bound
aam
outsl
jecxz
mov
shll
mov
jae
mov
mov
adc
ja
xchg
arpl
push
fimuls
adc
mov
push
cmp
arpl
aas
dec
scas
pop
repnz
adc
jge
and
jle
imul
jge
cmc
popa
dec
lret
shlb
int
push
adc
addr16
dec
orb
cmp
lcall
sbb
das
mov
subl
test
dec
testb
pop
out
cmp
dec
sbb
stc
movsb
mov
scas
inc
ljmp
xor
push
and
fnstsw
cmp
sbb
ret
xchg
fldenv
or
jnp
popf
lods
icebp
push
push
movsb
popa
popf
popa
imul
xchg
mov
dec
test
aaa
adc
out
pop
mov
repz
adc
call
test
mov
xchg
notl
hlt
push
enter
pop
mov
mov
das
lock
xor
push
ret
cwtl
test
add
clc
nop
lock
in
imul
mov
test
notb
adc
lods
pop
pop
outsb
pop
xor
cmpsl
pop
cltd
in
fs
mov
xchg
mov
repz
inc
adcl
mov
xchg
xor
jg
insl
insl
adc
push
stos
jle
xchg
push
cmp
loope
test
enter
jns
dec
fidivrs
adc
xor
or
test
enter
dec
in
idivl
loop
mov
jbe
ret
mov
sub
jl
add
push
test
lcall
push
fnstcw
mov
mov
cmc
add
fldl
inc
in
xchg
sub
out
add
testb
lcall
dec
pusha
push
outsb
lcall
add
std
lcall
xlat
fdivrs
addr16
call
leave
xchg
xor
mov
dec
jp
and
les
adc
dec
adc
xor
jo
push
insl
mov
in
test
xor
shll
call
adc
jo
xchg
ss
push
sahf
aaa
into
ret
xchg
adc
dec
sti
inc
fsubr
in
mov
shll
or
js
and
popa
test
mov
mov
out
push
test
scas
imul
jle
or
test
scas
jge
inc
sub
in
push
idivl
lret
movsb
fsubr
les
enter
jae
imul
xchg
cmpsl
scas
adc
dec
mov
test
mov
cmc
in
push
int3
mov
std
test
adc
das
int
fidivs
sub
ja
dec
pop
loopne
repz
add
lods
repnz
icebp
mov
dec
jmp
insl
xor
pop
popf
fidivl
test
mov
mov
repz
mov
cmc
insb
mov
jge
repz
fdivl
add
sub
or
sbb
pop
cmpsb
or
jle
inc
mov
int3
imul
pop
dec
stos
inc
cmp
outsl
mov
fsubr
rcll
push
das
out
fcomp
je
data16
xchg
clc
decb
push
arpl
push
hlt
lret
fildl
jne
shll
loopne
add
mov
in
xchg
sbb
addr16
jo
in
adc
cmp
cmp
push
fldt
xchg
cmp
dec
mov
pop
sbb
shrb
pop
push
mov
movb
push
adc
cmp
jae
mov
sti
sbbb
sahf
pop
clc
pop
cmp
sub
add
mov
fistl
pop
lods
pop
outsl
loop
inc
in
add
ret
mov
mov
push
in
pop
cld
cli
xchg
aaa
lret
adc
push
into
cmp
into
sub
add
nop
jbe,pn
gs
test
add
popf
test
push
push
test
fsubl
cmp
lods
and
xchg
sbb
dec
jmp
enter
loopne
or
push
pushf
arpl
fbstp
sbb
add
and
sub
xchg
sub
xchg
push
mov
fimull
gs
cmp
subl
jbe
loope
cwtl
mov
lret
push
roll
insb
xchg
cltd
and
leave
adc
mov
cmc
mov
jmp
add
jle
push
xor
shlb
stos
pop
inc
mov
xchg
fmuls
lea
add
stos
sti
cmpsb
stc
push
jmp
xor
dec
xchg
inc
cld
cmp
dec
rcrb
pop
xchg
mov
fldln2
push
roll
xchg
scas
pop
hlt
out
sub
jns
jnp
pushf
cmp
jmp
dec
test
xor
pop
mov
imul
mov
or
out
mov
adc
ret
push
ljmp
jb
inc
ja
scas
pop
xor
mov
popf
rorl
or
je,pn
sbb
jecxz
mov
std
mov
faddl
and
or
push
popf
or
xchg
mov
inc
roll
and
subb
leave
leave
jb
xchg
sub
fistps
cmpsl
push
cmp
add
xor
fchs
jp
stc
mov
addb
or
leave
lds
push
fs
out
fldenv
les
mov
cltd
xor
pop
ret
push
fnstsw
jg
adc
pop
cwtl
adc
cmp
pop
popf
bound
std
sub
jg
pop
mov
addb
or
repz
xor
ljmp
iret
in
cmp
push
mov
jb
xor
xchg
cwtl
imul
stos
mov
loop
or
and
xchg
cli
xchg
mov
mov
push
rcrl
xor
and
adcb
sub
pop
cmpsb
xchg
ret
hlt
movsl
xor
inc
fcomp
cltd
pushf
push
out
stos
fdivl
jge
cmpl
lods
ja
pop
repnz
jns
mov
mov
jmp
std
sbb
push
cli
add
pop
mov
or
jne
sub
sbb
leave
pusha
mov
push
mov
jno
mov
xchg
call
mov
fs
mov
xchg
jae
push
sbb
stos
aam
push
lret
mov
data16
lret
ss
out
sti
es
inc
cltd
and
sub
jge
adc
loop
jo
mov
xchg
scas
int3
cld
adc
aas
mov
fwait
cwtl
cmc
in
shlb
xchg
push
lds
loope
lret
out
pop
lock
das
sub
add
scas
fbstp
push
pop
add
xor
out
add
pop
fcoml
out
lret
fs
cmp
xchg
push
frstor
in
in
pop
sub
sbb
mov
or
dec
mov
jnp
inc
out
cmp
push
adc
pop
in
jbe
mov
repz
cmp
sbb
jmp
cld
cld
mov
pop
cs
cmpsb
inc
pop
inc
rclb
pmaxub
push
and
xlat
nop
pop
ret
or
aas
iret
imul
inc
ljmp
pop
mov
jbe
loope
ret
fidivs
pop
sub
fs
mov
dec
mov
cmpsb
jns
rcl
repnz
in
lds
add
sub
fimull
cwtl
dec
pop
push
ljmp
jno
pop
movsb
fiaddl
sahf
cmp
lret
addr16
imul
xchg
cli
xchg
add
dec
rcll
mov
mov
xchg
add
xor
jns
or
pop
cmp
sbb
popf
in
pop
jecxz
xchg
lods
mov
push
jnp
test
jne
inc
fdivrl
pop
pop
lods
adc
mov
test
push
loope
fbstp
cmpsl
idivb
fidivrs
sti
rorl
mov
addr16
pop
cmp
xor
xchg
mov
stos
loope
insl
loopne
mov
mov
lahf
cwtl
sti
mov
sbb
sahf
ret
jl
test
lods
ja
ljmp
add
push
mov
aaa
pop
int3
xchg
jbe
xchg
add
inc
frstor
jns
test
cmpsl
testl
add
daa
cmpsb
cmp
in
xor
ja
lret
sti
imul
loop
lcall
ret
mov
pushl
or
sub
addr16
pushl
ffreep
fcoml
mov
stos
inc
imul
lods
mov
cmp
xchg
add
mov
mov
push
andl
cmp
xor
out
mov
xchg
dec
adc
sub
fidivs
mov
fldt
xor
mov
add
jbe
inc
xchg
add
xchg
xchg
test
lahf
les
out
adc
sti
mov
xor
out
cltd
pushf
adcb
dec
inc
mov
mov
jno
inc
pop
push
mov
ss
lods
inc
idivb
fstpt
adc
inc
sti
xor
lds
insb
and
xor
mov
sub
inc
adc
fadds
test
jne
popf
outsb
push
ja
test
lahf
push
mov
xchg
mov
ret
cltd
xor
jp
mov
dec
xor
mov
pop
cmpsl
stc
fdivrs
sub
mov
push
imul
aas
inc
fmuls
roll
roll
or
xchg
sub
sti
je
xor
inc
arpl
jle
push
or
adc
aad
cmp
add
add
insl
rcrl
das
popf
cmp
xchg
push
xor
jmp
fsubrl
mov
stos
mov
jns
jno
inc
bound
mov
leave
pop
aam
mov
pop
scas
iret
int3
push
es
ret
jb
mov
andb
push
mov
cmpl
sbb
aad
bound
outsb
cmp
adc
flds
add
loop
sbb
fucom
jmp
cmc
mov
aad
dec
je
repnz
repz
add
rcrb
dec
out
jg
mov
sbb
sub
jl
flds
jmp
and
sahf
inc
push
test
das
loopne
addr16
mov
jnp
pop
mov
fcmove
adc
cmp
pop
or
mov
shll
cld
bound
xchg
jp
pmulhw
sbb
inc
sub
lea
sti
stos
inc
in
test
jmp
mov
fwait
mov
aad
iret
out
sub
mov
mov
les
add
mov
lods
hlt
rcl
js
fisubrl
lods
in
aam
inc
sahf
test
pop
clc
jecxz
lcall
and
lcall
jp
je
dec
lret
add
js
xchg
stos
inc
push
sbb
push
ljmp
int3
cs
inc
jnp
aas
jp
xor
outsl
sbb
repnz
pusha
push
out
jo
ffreep
in
add
jecxz
ljmp
test
mov
mov
cwtl
cmp
pop
ljmp
aaa
dec
pop
and
cmp
hlt
jge
loop
mov
psrad
insb
adc
push
pushf
stos
inc
mov
test
in
push
test
jle
jnp
sub
mov
mov
aas
mov
test
xchg
push
xchg
sbb
imul
lods
xchg
push
adc
repz
cwtl
popf
outsl
mov
jge
jo
out
into
dec
mov
jmp
or
dec
test
mov
ret
repnz
stc
mov
mov
and
lcall
add
inc
sti
mov
push
loop
cmpb
mov
sti
test
lock
or
out
mov
testb
inc
ret
aam
pop
jb
xor
xchg
xor
stos
aaa
int3
bnd
mov
into
inc
cs
dec
sub
and
lods
pushf
xor
hlt
mov
loop
mov
inc
mov
push
xchg
test
mov
pushf
and
cld
and
sub
cmpsb
in
cmc
xor
ljmp
sub
fdivs
mov
rorb
push
mov
popf
mov
mov
mov
inc
je
sub
jo
or
jb
jae
negl
gs
lods
xor
gs
test
ficoms
and
jmp
stos
sub
xchg
dec
ret
icebp
lods
pop
cmpsl
lahf
lods
fdivrs
mov
std
xchg
shll
jae
repnz
mov
js
jmp
flds
xor
fwait
scas
pop
adc
iret
cmp
sub
sbb
notb
mov
and
test
mov
arpl
loope
bswap
cmp
adc
ljmp
pop
inc
add
clc
movsb
test
ja
cs
cmpb
cli
mov
sub
push
or
inc
fcmovnu
subl
jge
xor
dec
stos
in
stc
scas
push
clc
and
mov
lea
cmp
aad
pop
sub
jae
incb
and
inc
lahf
mov
insl
mov
enter
in
mov
rol
imul
jne
fdiv
mov
out
in
sahf
and
icebp
pop
or
xchg
mov
inc
movsl
int3
mov
outsl
pop
push
cld
xchg
bound
faddl
sbb
mov
shll
lods
test
xchg
cmp
repnz
movsl
stos
add
dec
rclb
cmp
fwait
xchg
and
push
jmp
cmpb
push
rol
ror
std
leave
loope
pop
test
imul
test
sti
test
mov
loopne
fimull
roll
nop
or
sub
xchg
test
std
xchg
inc
loope
sti
mov
push
inc
decl
mov
push
test
imul
and
mov
testl
loop
mov
jmp
sub
dec
adc
or
mov
xchg
dec
std
and
scas
xchg
imul
or
xor
in
or
pop
inc
xchg
sub
pop
add
fidivs
push
and
ds
stos
dec
xchg
aad
xchg
nop
arpl
movsl
cltd
fnstcw
dec
loop
push
adc
pop
push
xorb
mov
mov
fsubp
jge
cmp
stc
cmpsb
mov
adc
push
sahf
js
mov
loop
les
xor
and
push
adc
iret
mov
or
bnd
push
imul
dec
stos
mov
xacquire
clc
adc
call
pop
push
inc
mov
xchg
mov
xor
cli
and
pop
ret
loop
mov
or
pop
xor
sub
adc
or
jbe
inc
sbb
add
push
aas
push
mov
lret
pop
sub
jl
gs
push
test
push
jg
lock
aad
adc
sarb
mov
jmp
dec
adc
fstps
or
int
mov
pushf
fldl
into
subl
xlat
xor
outsb
cmp
ret
mov
lods
push
insl
jle
add
clc
cmp
mov
push
or
or
imul
fwait
jle
cld
xor
dec
inc
stc
push
outsl
daa
rclb
push
and
ljmp
lahf
jno
shrl
popa
cmp
cmp
cld
jecxz
aam
and
sbb
cwtl
add
cltd
rcrb
sub
xchg
divl
push
addr16
fcompl
xchg
lcall
mov
pop
icebp
jb
daa
mov
scas
pop
aaa
addl
shlb
lahf
push
jl
jnp
mov
pop
mov
add
test
jl
inc
sub
insb
add
mov
jnp
jle
stos
and
arpl
bound
enter
push
mov
jmp
mov
mov
sahf
jp
inc
js
pushf
js
sub
cmp
and
daa
fists
stc
adc
je
inc
mov
xor
push
stos
mov
xchg
lahf
inc
mov
cli
in
adc
cmp
mov
das
es
out
mov
sbb
iret
xor
jecxz
mov
jbe
adc
pop
enter
jmpw
sbb
and
sti
repnz
ja
and
sbbl
sahf
jp
out
in
inc
into
call
dec
insb
imul
cmpsl
andb
pop
jno
icebp
loop
stos
jbe
aad
xchg
dec
push
add
insb
mov
sbb
pop
sub
loopne
std
fs
inc
dec
xchg
outsb
xchg
and
ret
mov
dec
pop
imul
add
inc
sarb
xchg
imul
jnp
jo
pop
mov
je
jae
popf
daa
inc
mov
mov
test
dec
shll
mov
lret
ja
jp
cmp
mov
pop
repz
shll
cmp
xor
push
stc
or
mov
movsb
mov
and
out
stc
rorl
mov
negl
mov
imul
clc
fnstenv
jmp
add
xor
fists
test
test
jae
iret
insl
inc
fcomps
pop
xor
dec
in
das
loop
xorb
mov
popf
je
xlat
cmp
xchg
lods
jp
imul
lea
js
loopne
inc
popa
clc
xor
dec
in
sub
jp
bound
xchg
xchg
ror
daa
mov
lds
mov
ljmp
fwait
xor
sub
jp,pn
pop
leave
or
xor
sbb
jne
add
shl
cmp
mov
cmp
pop
jbe
lods
pop
lock
and
inc
shr
jbe
cltd
and
fsubp
jmp
gs
outsl
hlt
pop
mov
test
mov
fists
xchg
pop
jns
leave
jb
lea
sub
mov
pop
leave
aam
in
sbb
xchg
push
popa
or
mov
rcll
fadds
and
test
dec
add
or
ret
aad
ret
testb
xor
pop
mov
es
mov
fcmovnb
push
test
sbb
mov
scas
pop
or
mov
mov
ret
adc
lret
in
pop
and
cmp
pusha
ret
dec
pop
lock
dec
cmp
jle
js
sub
sub
jg
pop
adc
loopne
pop
mov
lret
dec
iret
clc
testb
and
cmp
inc
or
xchg
adcb
and
adcb
add
sub
jae
dec
jg
inc
arpl
xor
mov
sub
out
iret
xchg
pop
sbb
insb
xchg
sub
cld
sbbb
add
das
and
dec
out
das
out
imul
inc
outsl
repnz
fstps
push
push
popf
mov
push
jb
pop
icebp
adc
into
mov
lea
sub
jnp
mov
aad
mov
mov
mov
mov
fldenv
fildl
jg
xchg
fnstsw
loope
add
push
cwtl
mov
out
mov
cmp
out
outsb
cmc
inc
lods
test
shld
cmp
or
sub
insl
test
or
or
imul
clc
mov
cli
xchg
inc
add
xor
sbb
dec
sbb
jno
mov
cmpsl
mov
lods
xchg
shrl
fwait
cmp
cmp
scas
dec
and
gs
mov
mov
fwait
ret
subb
les
cmp
insb
lea
lret
or
inc
pop
dec
xor
shlb
enter
mov
cmp
movsl
cltd
sarb
rolb
sbb
pop
mov
lret
add
mov
stos
scas
cwtl
faddl
adc
adc
rcll
xor
ss
xorl
xchg
inc
fcomip
mov
xchg
cwtl
pop
js
adc
scas
push
insl
repnz
out
mov
lods
xor
js
cwtl
xchg
mov
in
sub
jb
ret
pop
xor
dec
imul
sub
sbb
jl
dec
sbbb
repz
inc
les
pop
jo
dec
and
inc
das
insl
sub
cmp
pop
in
sti
cwtl
jnp
push
mov
pop
leave
nop
aam
fiadds
cmc
insb
sbb
sti
into
gs
add
xor
sub
test
dec
mov
jle
pop
adc
scas
repnz
rol
pop
add
scas
mov
divl
bound
xchg
mov
aam
pop
push
in
pusha
inc
repnz
mov
cwtl
cmp
ljmp
std
push
add
pop
cmpl
mov
dec
pop
lods
loop
test
pop
adc
ficompl
ficoml
dec
sar
mov
push
ret
add
repnz
jecxz
mov
imul
pop
jns
add
adc
shrb
pusha
movb
dec
mov
lcall
aam
and
repz
das
or
clc
mov
inc
lret
sbb
mov
jg
or
fs
pop
fld
add
fimuls
ljmp
jb
js
or
lds
inc
sbb
push
cltd
dec
jecxz
mov
stc
popa
int3
push
orl
cmp
sbb
mov
out
sub
dec
cmp
inc
lret
cmp
sub
add
rcr
mov
stos
mov
push
push
scas
cmp
loope
dec
fdivs
in
daa
cld
sbb
jae
pop
adc
das
cmp
hlt
inc
or
cmp
roll
je
arpl
rep
and
pop
call
roll
test
adc
sub
inc
adc
out
cld
push
cmpl
faddp
les
sbb
cli
and
shlb
daa
stc
js
fs
sahf
clc
jmp
jb
mov
inc
into
repnz
and
jae
in
add
lods
mov
jmp
jb
pop
movsb
loop
inc
add
xchg
imul
cmp
outsl
mov
push
ficomps
dec
faddl
loope
xor
sub
mov
jecxz
sbb
aas
mov
hlt
push
rol
push
xchg
scas
test
push
lret
out
test
lret
jne
outsl
lcall
data16
cwtl
xchg
shl
mov
inc
jp
lods
mov
mul
or
sub
mov
xor
test
add
push
push
insl
mov
xor
xor
cld
pop
or
xor
pushf
imul
xor
dec
ficompl
jle
cwtl
and
test
shll
aaa
into
cmp
lret
dec
dec
mov
xchg
sub
fcompl
push
xor
push
or
xchg
int
inc
add
imul
dec
lea
lahf
out
clc
shlb
cmp
ficoml
dec
push
popa
adc
push
and
fcoml
cmp
icebp
cmpsl
cmp
sbb
les
and
jp
loop
cld
fwait
jb
mov
mov
outsl
in
push
jne
inc
push
push
pop
push
push
lods
mov
lods
cmpl
je
fwait
mov
out
es
mov
mov
fwait
cmp
push
add
add
add
pop
negb
loop
and
test
movsb
notl
lods
lds
fistpll
mov
outsb
add
mov
leave
lcall
inc
cmpsl
pop
popf
push
lahf
adc
mov
cmpsb
fistps
fists
adc
jl
xchg
mov
mov
and
push
add
insl
sbb
fdivp
pop
cmp
mov
fisubl
enter
into
lcall
pop
inc
push
into
and
fnstcw
std
enter
clc
pop
not
xlat
push
xchg
negl
fldt
stc
inc
jns
sti
mov
movb
stos
lea
jg
fsubrs
mov
idivb
shrb
aad
ss
pop
jno
inc
cmc
cld
es
in
xorl
adc
andl
outsl
cmp
fdivs
pop
bswap
pop
pushf
testl
adc
pop
xor
scas
fbstp
fsubs
in
push
mov
lret
int
loopw
push
inc
pop
test
js
cwtl
sbb
lret
adc
xor
push
jmp
sub
jp
mov
jp
jnp
orb
out
gs
mov
daa
lahf
and
dec
lods
add
jp
xchg
mov
mov
cld
xor
sahf
ss
stos
push
pop
cld
mov
cmc
sbb
arpl
clc
or
les
xchg
out
movsb
rcrb
mov
popf
lret
push
cmp
das
mov
frstor
mov
scas
subl
inc
and
into
ficompl
mov
jbe
and
push
and
popf
stos
out
lret
add
jbe
fldcw
jl
rclb
int
jle
xchg
mov
push
jmp
mov
mov
movsb
gs
subl
js
adc
sahf
inc
pop
xor
out
adc
push
push
jno
cmp
add
aaa
aam
mov
pop
ja
dec
sarb
out
xchg
sub
je
xchg
push
xchg
jbe
mov
xchg
push
lahf
jnp
push
into
pop
adc
aad
leave
jo
lret
jae
and
dec
stos
cmp
roll
test
mov
daa
pop
cmp
pop
dec
dec
pop
sarl
lcall
dec
sti
test
sub
xchg
or
rcll
pop
mov
push
fnstcw
scas
cmp
lds
xchg
push
mov
mov
mov
mov
dec
inc
sub
cmp
xor
xchg
in
jae
lret
sarb
leave
xor
pop
add
jmp
mov
iret
inc
sbb
adc
int3
sbbl
mov
int3
dec
ss
and
subl
jno
or
icebp
sbb
xor
jmp
mov
xchg
adc
pop
hlt
push
jl
lds
testl
lods
pop
push
mov
or
jl
shrb
xlat
popf
mov
pop
jmp
push
cwtl
sub
and
decb
lcall
pop
jo
jns
pop
ds
cmp
dec
cmp
mov
js
xchg
scas
sub
sub
inc
leave
xor
mov
lods
adc
ljmp
cmpb
mov
xor
and
push
nop
sbb
shll
mov
ficoms
inc
pop
inc
psrlq
adcl
dec
cmc
cld
or
imul
push
shrb
cmc
pop
mov
mov
shld
pop
jmp
cmp
add
jne
add
sarb
push
cmp
push
outsb
xchg
sub
daa
or
aaa
lock
mov
mov
faddl
mov
cmpl
cmp
hlt
popa
negl
mov
push
in
push
adc
mov
push
xchg
xor
adc
aaa
push
out
filds
aam
jge
cmp
bound
imul
pop
xor
pop
popa
clc
dec
dec
pop
out
out
push
push
jb
in
pop
es
or
stc
inc
adc
aad
fcmovbe
testb
jle
mov
push
lods
sub
das
movsb
inc
pop
ret
jno
insb
adc
roll
or
cmp
fstl
push
in
adc
lcall
mov
mov
sbb
mov
pop
data16
je
sbb
sbb
mov
push
mov
mov
and
or
cltd
cmp
mov
cmpsb
ss
pop
and
push
pop
inc
shr
mov
mov
imul
ss
cli
mov
add
jle
std
cmp
or
inc
inc
adc
adc
scas
push
jno
push
xor
in
enter
sub
pop
bndstx
add
mov
push
jo
dec
scas
xor
addr16
inc
idivl
inc
divl
pop
jb
jb
mov
cli
cmpsl
mov
sbb
in
mov
pop
rorl
icebp
mov
add
inc
scas
adc
int
cmp
out
cmp
push
jne
in
push
movsl
in
xor
jp
mov
push
in
lea
jp
mov
or
sar
jge
and
bound
push
mov
mov
xchg
lods
sbb
test
addr16
mov
jp
sub
add
lcall
lcall
sti
mov
mov
xor
pop
or
adc
pop
inc
cs
xchg
out
enter
fstpt
rorb
jae
xor
xor
clc
pop
mov
pop
mov
rcll
xchg
pop
push
mov
sub
jg
or
jmp
jl
sahf
mov
add
xor
jo
andb
inc
test
popa
stos
jmp
fldl
xchg
ss
mov
mov
sub
jnp
ljmp
fs
adcl
or
mov
sub
fcoms
lahf
pop
jle
test
sub
mov
sti
inc
out
mov
repz
pop
in
loope
xlat
sub
js
pop
paddsb
adc
nopl
or
mul
jl
cmpsb
lods
pop
jle
mov
sti
loopne
repnz
mov
push
arpl
inc
mov
cmp
push
adc
or
cmp
add
mov
jb
mov
imul
aad
addb
xor
fcoms
adc
mov
mov
arpl
iret
add
fs
stc
or
testl
xchg
jmp
stos
and
cmp
push
or
sub
daa
lret
cmp
mov
fldcw
push
fdivr
stos
in
aaa
pop
and
mov
cmpsl
jne
aad
enter
lea
pop
test
pop
addr16
ret
xor
fwait
shlb
ss
push
test
cmp
cli
xchg
add
mov
xor
loope
jge
add
pop
jae
mov
jnp
mov
mov
cmp
pop
popf
and
dec
dec
xor
mov
mov
pop
sbb
ds
insb
fs
xchg
test
ret
inc
mov
shrl
cmp
cmpsb
xor
xchg
mov
clc
or
xor
shlb
and
cmp
in
repz
bound
shrl
lcall
jnp
mov
clc
add
sti
in
ja
xchg
cmc
adc
mov
loop
popf
xor
xlat
cmp
mov
or
cmp
pop
jecxz
dec
and
dec
adc
lea
push
sti
and
mov
scas
lds
lds
int3
add
pop
lods
jo
mov
jae
and
out
dec
fisubs
lret
scas
les
int3
arpl
mov
pop
test
cmp
adcl
ljmp
add
mov
es
ljmp
sbb
int
scas
nop
fstl
inc
ja
pop
shrl
dec
mov
iret
adc
mov
inc
lds
inc
mov
mul
dec
push
jmp
int3
pop
into
std
stos
push
or
sub
jle
jmp
jb
mov
arpl
insb
push
out
jno
leave
mov
push
jo
xchg
push
lahf
xor
sub
ljmp
adc
jno
sub
cltd
push
test
mov
shlb
or
mov
pop
sahf
jmp
lcall
addr16
pushf
ret
and
mov
push
cmpl
iret
loope
fcomi
ss
scas
psrlw
add
test
lret
fisubl
andb
push
push
sub
adc
ja
fs
sbb
mov
or
xor
enter
cmp
xchg
add
jg
popf
enter
jg
dec
pop
out
jae
mov
inc
jmp
xchg
fwait
pop
push
adc
add
mov
and
xchg
sub
sub
es
pop
loop
into
subb
dec
sub
mov
adc
pop
mov
rorl
fistps
xor
add
mov
xchg
jnp
out
adc
inc
mov
pop
lock
cli
xchg
std
std
cmp
hlt
xorb
daa
dec
fdivrs
fdiv
inc
sub
inc
lcall
and
add
mov
or
sub
dec
pop
or
xchg
int
sub
mov
lret
jmp
mov
or
dec
xchg
mov
mov
aam
pusha
fistl
push
dec
pop
jne
mov
nop
sub
lds
sbb
in
fsubr
call
in
aas
aad
and
pop
popf
inc
cwtl
sbb
pop
pop
cld
adc
idivb
sbb
lahf
and
loope
xchg
lahf
stos
jl
ret
push
xchg
aad
mov
enter
mulps
sub
mov
mov
push
in
fs
pop
jmp
inc
push
or
shll
add
leave
mov
out
lret
stos
and
cwtl
das
adc
add
pop
jnp
mov
mov
jle
mov
cmpsl
jg
sbb
mov
fnstcw
dec
les
sbb
mov
add
dec
mov
cmpsb
push
popf
pop
xor
cmp
push
scas
jge
js
adc
cmp
push
into
jecxz
xchg
mov
je
cmp
loopne
icebp
popa
loope
inc
xchg
xorb
aas
cmc
push
push
sbb
xchg
dec
jp
add
movsl
mov
aad
adc
adc
inc
neg
sub
mov
inc
inc
aas
jb
inc
gs
adc
adc
lds
pop
mov
inc
xchg
jle
loope
orb
and
aaa
into
mov
loopne
icebp
push
lret
cltd
xor
sar
fcompl
push
xor
fs
mov
push
add
sbb
jns
xor
adc
pop
vpaddq
sub
cmp
movsb
jge
inc
popf
mov
ljmp
pop
popa
notl
loopne
or
mov
divps
idivb
and
fildl
mov
mov
lahf
mov
insb
push
jb
sahf
clc
or
jnp
fimull
out
jge
add
mov
xchg
sbb
mov
into
shr
loop
pop
sbb
cmp
pop
xchg
mov
scas
pushl
adc
mov
aaa
imul
push
jmp
adc
ljmp
arpl
mov
fists
xor
sbb
mov
ja
add
dec
cwtl
cmp
add
push
fsts
enter
movsb
ret
inc
or
lahf
or
inc
or
std
lret
jnp
mov
jg
jl
xchg
jl
and
mov
jo
lret
pop
mov
cmc
sub
adc
sbb
mov
pop
push
sarl
sbb
mov
in
pop
out
dec
push
dec
inc
out
test
shl
mov
sub
pop
mov
xchg
fstl
mov
jbe
mov
fldl
xchg
adc
sub
cltd
inc
adc
jbe
mov
sub
cli
cmpsl
dec
jbe
ds
sarb
gs
les
xchg
jne
dec
in
sahf
mov
push
insb
add
push
shrb
xor
icebp
mov
sub
push
inc
in
mov
cwtl
std
lods
das
inc
fbld
cli
rcl
lock
fldcw
jmp
cmpsb
sbb
loopne
insb
mov
mov
sub
cwtl
aas
mov
addl
xabort
mov
clc
cmp
push
rol
sub
inc
outsl
daa
mov
loopne
inc
clc
mov
push
inc
idivl
xchg
dec
or
dec
cmp
xlat
dec
adc
lcall
lods
nop
lahf
mov
lret
cld
cmpsl
hlt
or
cli
bound
inc
xlat
pop
dec
cltd
das
ror
pop
jno
hlt
mov
es
aad
movsl
fidivrl
pop
pop
insl
mov
and
adc
lods
mov
cltd
sbbb
stos
fnop
insb
mov
push
out
hlt
inc
xlat
adc
mov
mov
insb
pop
sub
sbb
adc
xor
outsb
xor
fwait
lcall
and
je
in
dec
addl
jae
xchg
test
ret
mov
int3
movsb
or
outsl
decl
movsb
add
mov
or
pop
ja
fmull
fwait
mov
push
sbb
loope
mov
je
push
out
aaa
stos
cmc
mov
enter
fwait
das
jno
loop
lds
mov
mov
rol
out
add
adc
test
bound
xor
cmpsb
push
cmp
jecxz,pn
sub
pop
and
pop
mov
mov
sahf
sub
hlt
inc
pop
es
or
mov
repnz
adc
loopne
xor
push
cmp
pop
fdivl
mov
mov
lret
lock
xchg
sbb
sbb
lods
clc
stc
mov
das
xor
push
jecxz
push
out
or
ret
mov
in
test
jmp
xlat
xlat
fdivs
lcall
dec
in
xchg
push
ja
and
rolb
fwait
mov
out
cld
ljmp
cltd
or
je
mov
and
and
push
out
and
push
pop
stos
int
pop
jge
cmp
jns
test
rclb
jl
test
popa
subl
fdivrs
rcll
arpl
jo
add
jl
xor
mov
push
xor
out
and
les
sbb
mov
cmp
pop
add
mov
dec
jne
incl
mov
ljmp
in
pusha
scas
inc
or
ret
repz
push
adc
ret
sbb
xchg
cmc
test
or
fcmovb
inc
outsb
data16
lods
mov
or
jno
aaa
loope
and
pop
push
xchg
stc
dec
rolb
int3
mov
jl
scas
push
sti
jbe
dec
or
mov
sbb
nop
aaa
out
ret
test
mov
pop
mov
scas
sbb
xor
mull
bound
gs
add
mov
lret
pushf
out
jns
mov
cwtl
cmpsl
push
and
mov
arpl
mov
mov
mov
cltd
xlat
sub
sbb
dec
and
jnp
mov
xor
jecxz
pop
dec
iret
jae
shll
and
or
test
or
test
inc
clc
into
mov
sbb
push
sahf
leave
push
sub
xchg
cmpsl
into
cwtl
pop
stos
lret
xlat
dec
iret
push
pushl
ds
pop
mov
jns
loopne
je
popf
inc
fmuls
adc
pop
dec
sarl
mov
lods
sbb
lods
inc
jns
out
sti
into
imul
outsb
fs
outsl
pop
cmpsl
sti
inc
pusha
sub
push
rcrl
clc
or
sti
andb
push
xlat
jmp
xchg
add
mov
push
adc
mov
fisttps
shrb
cmp
mov
aaa
pop
mov
or
daa
lcall
gs
fisttps
mov
and
adc
xlat
rol
sbb
jmp
lods
popf
dec
and
out
out
dec
in
push
xchg
loope
mov
leave
and
adc
push
mov
add
and
fldl
call
xchg
inc
pushf
pop
mov
push
xor
js
aaa
push
inc
out
rol
inc
or
pusha
pop
iret
fiadds
mov
push
scas
ficompl
sub
cld
xor
adc
or
incb
gs
cld
xor
repnz
jecxz
outsl
add
adc
xor
xchg
sbbb
ljmp
aas
push
clc
icebp
cwtl
and
fwait
lea
int
or
rorb
add
jmp
pusha
js
jmp
xor
inc
clc
in
imul
test
leave
loop
push
clc
cmpsb
aam
xlat
push
add
xor
jb
push
out
sbb
fstl
nop
push
les
imul
into
pop
push
loopne
push
jb
sbb
push
lds
pop
test
hlt
insb
adc
or
sbbb
mov
jmp
xchg
ja
and
add
outsb
sbb
xor
cmp
mov
outsb
mov
rorl
push
popa
mov
repz
in
loop
add
inc
jnp
inc
and
jge
pop
dec
out
mov
xorb
dec
pop
adc
mov
js
adc
xchg
pop
movsl
and
jbe
fidivrs
jne
and
arpl
or
insb
sti
movsb
les
decl
fisubrs
xchg
popf
mov
movsl
sbb
and
ss
mov
dec
enter
insb
lret
lret
pop
decl
or
push
dec
or
mov
jmp
or
cmc
cmc
fstpt
mov
mov
fcmovnu
daa
sbbb
jnp
je
add
fidivl
xlat
popa
add
test
pop
mulb
adc
lahf
pop
push
and
nop
outsl
and
insl
pop
inc
idivl
add
pushf
mov
fdivrp
ljmp
sub
mov
pop
pop
icebp
and
jp
lahf
jae
das
cli
jbe
gs
cld
mov
sti
xchg
jae
push
int3
fs
in
push
push
and
xor
add
outsb
mov
and
aam
shl
mov
stos
sub
push
mov
dec
lcall
stos
sti
dec
push
mov
icebp
adc
in
or
std
loope
jae
lcall
sahf
or
test
jge
movsb
daa
cmp
ljmp
pushf
xor
fsubrs
jecxz
fcmovne
sti
testb
jge
mov
xchg
and
jo
insl
rcrl
jb
sbb
push
sbb
adc
cltd
mov
cltd
dec
inc
out
rcr
outsl
and
cli
movlps
xor
jmp
dec
inc
insw
sub
xchg
scas
mov
testb
daa
rol
int
divl
cwtl
adc
js
loop
cmc
mov
ss
js
cmp
and
scas
pop
push
pop
dec
inc
jmp
cmp
mov
xchg
popf
rorl
mov
add
gs
xchg
sbb
sbb
or
add
stc
ja
scas
imul
adc
dec
mov
ret
add
dec
push
out
icebp
lret
xlat
cmp
loop
call
add
repnz
and
pop
mov
in
sbb
aad
mov
cs
mov
sub
mov
js
inc
cmp
inc
pop
xchg
fnstcw
je
mov
out
cli
add
fistl
das
pop
mov
and
mov
rorl
out
xchg
mov
or
pop
dec
cmp
adc
dec
in
in
mov
int3
push
push
popf
adc
fildll
jle
mov
jmp
xlat
dec
loopne
adc
lret
js
addr16
xor
ja
imul
sbb
mov
in
add
xrelease
mov
cmpsl
popa
clc
fsubrs
insl
iret
jle
mov
hlt
cmp
lahf
dec
clc
mov
sbb
dec
lret
lods
dec
fbld
lret
xchg
xor
outsb
push
test
dec
add
xor
lret
xor
and
addl
mov
insl
stc
push
and
fists
and
popf
stos
xor
lret
mov
sbbb
imul
jle
outsb
insl
mov
dec
ret
push
cmc
inc
repnz
inc
out
rol
mov
js
sbb
xorl
xchg
popa
rorb
mov
enter
sub
dec
cwtl
lods
ret
loope
out
adc
and
inc
dec
push
aam
xchg
pusha
and
push
cmpl
push
out
pusha
std
sbbb
jecxz
sub
fldl
dec
add
push
out
gs
push
sbb
mov
out
popf
adc
mov
inc
fxch
out
insl
pop
scas
push
stos
mov
and
pop
push
dec
test
aad
adc
mov
pop
inc
pop
cmp
inc
cmp
cli
dec
mov
ret
dec
sbb
mov
lods
push
in
fsubrp
mov
and
js
pushf
push
sub
cmpsb
cmp
push
ret
mov
scas
outsl
ret
pop
adc
dec
xlat
cmp
out
imul
test
mov
jnp
mov
loopne
or
mov
js
and
je
test
leave
sub
jge
mov
cmc
push
mov
or
insl
lcall
jmp
or
dec
and
mov
cmpsb
inc
fidivrs
notl
inc
lahf
enter
sbb
add
cmc
push
pop
test
int3
mov
sbb
cmc
xchg
mov
jl
hlt
xchg
movsl
sbb
sahf
sbb
repz
xchg
pop
adc
shl
push
mov
ret
pop
mov
adc
cld
jb
sbb
cmpsl
push
adc
mov
test
mov
sub
and
icebp
iret
in
test
pop
jb
js
sub
mov
imul
insb
rolb
clc
or
jmp
into
in
dec
ja
push
pushf
and
dec
jne
imul
adc
mov
adc
out
mov
loopne
mov
mov
scas
inc
pop
js
jg
popa
es
adc
inc
and
mov
ficomps
push
dec
push
and
and
aad
or
aaa
leave
jmp
mov
inc
loope
push
out
movsl
sbb
inc
xlat
outsb
or
ror
int
stos
pop
adc
xchg
aaa
xor
pop
nop
jnp
lods
and
shlb
xchg
mov
sti
push
jle
jae
jne
pop
sbb
pop
sti
inc
fisubrl
or
push
dec
and
dec
push
lret
out
aad
mov
and
jmp
mov
repnz
shlb
adc
adc
nop
mov
jp
add
arpl
shrb
xorb
ljmp
pusha
or
in
push
dec
pop
sub
call
aas
js
loope
std
push
roll
cwtl
xor
sbb
push
mov
mov
inc
push
jge
test
xorl
sbb
xchg
mov
mov
or
xchg
pusha
mov
sbb
bound
shl
aaa
cmc
adc
call
fsubrl
int3
xor
adc
jmp
xchg
xor
jmp
mov
std
xchg
push
lock
pop
mov
fcoms
icebp
dec
fnstenv
decl
push
sbb
xchg
adc
xor
bound
pusha
cli
sub
sub
sbbb
pop
push
test
and
xchg
nop
sub
aaa
push
push
jge
scas
mov
inc
test
mov
xor
enter
mov
dec
and
aas
clc
cmpl
inc
in
fmull
or
outsl
cmp
ficoml
add
dec
ljmp
cmp
lods
mov
loop
test
into
jg
inc
mov
sbb
dec
cmp
fcomip
movsl
sbbl
and
sub
add
je
arpl
cmp
sbb
push
nop
mov
pusha
sahf
adc
mov
fs
pop
jne
inc
movsl
mov
loope
test
mov
scas
icebp
xchg
or
aam
in
inc
push
or
inc
orl
mov
ret
cmp
xchg
adc
outsl
rorl
pop
loope
xorb
cmpsl
dec
outsb
adc
fstps
es
push
dec
jnp
adc
adc
xor
popf
cmp
push
ss
and
rcll
movsb
cmp
popl
call
hlt
add
cwtl
mov
add
scas
cli
jg
das
stos
gs
in
pop
stc
lods
push
mov
or
fs
xchg
scas
jbe
andl
fdivrp
and
hlt
clc
and
fbstp
enter
repz
ljmp
lods
out
sub
mov
stc
popa
stc
out
dec
rcl
xchg
pop
or
adc
scas
xchg
js
aad
mov
add
les
and
mov
jmp
and
adc
pop
mov
fidivrl
rorl
hlt
scas
xchg
stos
xchg
sarb
cmp
jp
dec
mov
dec
mov
fnstcw
or
shl
je
shl
imul
pop
pop
hlt
arpl
push
outsl
repnz
add
stc
cs
scas
test
outsb
add
mov
adc
jmp
ficompl
je
jae
inc
sub
mov
sbb
nop
mov
sbb
arpl
insb
idivl
and
jl
das
data16
ret
pop
imul
fiaddl
loope
cmp
pop
inc
jl
sti
fwait
xchg
cltd
bound
xchg
jbe
cmp
lea
mov
xorl
es
xlat
scas
repz
cmp
adc
xchg
pop
aaa
clc
inc
decl
pop
cmpsb
xor
int
into
cmp
sub
call
aaa
int3
mov
sbb
push
mov
cld
mov
test
sbb
mov
cmp
dec
adc
sbb
xor
push
imul
sbb
pop
fstl
pop
adc
lea
mov
pop
mov
inc
leave
js
fsubr
mov
rol
jl
or
add
ret
lods
mov
test
jge
jp
or
rcll
ja
fidivrl
push
scas
ja
frstor
push
jbe
test
inc
popf
lods
inc
push
call
imul
cmp
mov
les
inc
aas
je
iret
gs
in
add
insl
in
cmp
inc
adc
inc
imul
sub
and
out
lcall
sahf
cmp
pop
and
cmpsb
or
stos
inc
nop
loop
scas
and
mov
fcompl
les
jge
jo
mov
add
popa
and
test
sub
xchg
jnp
jle
mov
mov
jmp
sarl
enter
cmpsb
mov
data16
xor
jae
sbb
daa
dec
bound
cmp
gs
xchg
adc
jns
loop
fdivrl
jne
push
lock
out
cmp
rclb
jo
xorl
jg
inc
or
xchg
xor
xchg
pop
dec
dec
cmp
mov
mov
xlat
out
xchg
test
outsb
cmc
lock
push
mov
imul
ja
xor
inc
and
add
xchg
mov
cmpsl
jl
jecxz
mov
xacquire
jg
inc
scas
pop
sbb
adc
rclb
rcrb
rcr
cmpsl
jns
sbb
sub
or
dec
movsb
xchg
aam
int3
cmp
dec
push
iret
lahf
je
xchg
popa
jg
xchg
push
mov
shlb
add
mov
movsb
fbld
sub
adc
into
testb
pop
fisttpl
push
imul
adc
loope
and
mov
and
shr
jge
nop
jg
test
cltd
sub
inc
jmp
jl
sub
cmp
and
test
lods
and
je
pop
in
cmp
cmp
inc
xor
push
push
inc
mov
dec
fdivs
push
out
jo
mov
mov
push
add
ja
jp
call
add
and
negl
scas
mov
sub
adc
and
subl
hlt
pop
and
add
imul
add
mov
test
or
or
mov
jne
pop
push
inc
adc
mov
sub
dec
testb
jg
adc
jnp
add
stos
test
into
lds
rclb
loopne
lods
outsl
in
inc
cmp
shrl
xlat
fwait
icebp
or
mov
dec
cmp
cmp
pop
push
push
gs
jae
push
cwtl
clc
adc
stc
int
mov
push
mov
mov
sbb
jae
jl
int3
movsb
jns,pt
and
dec
mov
xchg
in
pop
mov
imul
rolb
aas
inc
frstor
ret
outsl
jne
jp
add
js
mov
xor
and
frstor
aas
cmp
push
loope
jae
je
pushf
sub
mov
and
mov
dec
adcb
mov
mov
cli
inc
imul
roll
sbb
jno
adc
push
sbb
and
dec
popa
lret
dec
cmpl
push
jle
cmp
jbe
in
push
sti
rclb
clc
loop
pop
insl
push
cmpsb
mov
add
inc
popf
sub
push
dec
or
inc
lahf
loop
rorl
aam
adc
jge
pop
add
in
pusha
push
adc
jne
scas
arpl
out
std
push
push
cli
pop
jl
xchg
mov
and
pop
imul
arpl
insl
jp
notl
aad
add
inc
jmp
push
gs
jne
xor
bound
mov
addr16
loop
xchg
dec
and
inc
dec
adc
push
cmp
xor
js
jmp
sbb
inc
adc
jle
xchg
xchg
arpl
xchg
pop
mov
sarl
xchg
mov
scas
pop
mov
pop
insb
fdivs
outsb
push
cmpsl
cmp
imul
lahf
jbe,pn
add
mov
hlt
aas
in
and
sahf
imul
pop
xchg
dec
jne
test
lds
inc
cmpsb
lret
mov
mov
test
fisubrs
lods
jo
cmc
xchg
int3
push
sub
dec
aad
jnp
not
cmp
stc
dec
cs
mov
or
arpl
cmpb
mov
je
mov
arpl
xchg
push
js
dec
stos
jns
in
pop
stos
sub
or
xchg
stos
mov
mov
fstp
je
into
mov
inc
add
add
xor
mov
or
call
pop
das
jo
popa
xorl
lock
aaa
js
out
add
jle
ss
xor
pop
loope
jle
outsl
push
mov
outsl
or
test
rcl
icebp
outsl
jge
sbbl
lock
in
xchg
es
pop
stos
xor
pop
and
fisubs
stos
push
cmc
lahf
or
testl
scas
sbb
push
fwait
insl
scas
test
cmpsb
mov
sbb
mov
jbe
lods
mov
fisubrl
cmpsb
lahf
cmp
mov
mov
cmp
xchg
and
mov
jbe
cltd
out
and
data16
xchg
add
dec
dec
dec
mov
sbb
push
mov
sbb
in
mov
cmc
mov
adc
lods
xchg
inc
and
xor
repnz
adc
sbb
xchg
dec
mov
mov
inc
mov
scas
out
shlb
lods
pop
add
add
inc
lods
adc
sub
adc
lods
call
jp
sbb
mov
sahf
pop
push
inc
push
stos
xlat
fdivrl
mov
cwtl
cwtl
dec
push
jne
mov
jp
nop
xchg
push
fsubr
cmpsb
lds
hlt
sbb
lods
lods
mov
fbstp
loope
negl
dec
les
stos
es
js
insl
aas
cltd
push
movsl
add
jne
call
xchg
stos
aas
scas
push
std
cmp
xchg
out
xchg
test
lea
sub
add
aam
xor
or
xor
jne
pop
push
and
out
in
adc
push
cmp
out
xchg
cmc
mov
iret
mov
loopne
sti
ret
icebp
daa
ljmp
xchg
inc
popf
dec
pop
iret
popa
jl
mov
repnz
ss
arpl
rclb
rcrb
js
jnp
test
push
pop
adc
dec
in
jle
inc
scas
mov
dec
or
rorl
mov
stos
sub
shlb
loope
xchg
test
push
cmp
and
jecxz
or
mov
mov
jmp
ja
push
and
ds
imul
shl
cmpsl
gs
inc
xchg
push
stos
pop
sub
repz
adc
bound
cmp
aad
mov
mov
arpl
sti
jbe
dec
movsl
xor
in
add
dec
push
mov
mov
cmc
xor
es
xor
ds
inc
sub
or
add
mov
popa
jno
lock
ret
adc
dec
pushf
pmovmskb
pop
ja
mov
in
adc
je
cld
mov
dec
xor
dec
testb
sub
clc
push
push
cmp
add
jae
cmpb
loope
ds
sarl
push
gs
xchg
sub
neg
jae
dec
js
cmpsb
icebp
mov
xlat
mov
sarb
in
mov
xor
mov
cmp
cmp
inc
fimull
das
sub
jae
js
mov
lods
cli
or
enter
jecxz
mov
push
mov
popa
jns
mov
aas
movsb
fucomi
pop
ret
inc
jg
movsb
ljmp
fsubrs
clc
xchg
cmp
pop
popf
push
xor
and
leave
ss
jl
popf
jmp
cmp
jl,pt
adc
dec
sbb
jg
subl
arpl
add
or
pop
imul
mov
mov
jp
inc
dec
pop
lds
in
cmp
mov
test
and
fistpl
xchg
notl
das
scas
out
cmp
arpl
push
jne
add
out
rcrl
mov
in
or
test
stc
in
movsl
scas
mov
jmp
cld
shll
or
xor
out
jle
stc
mov
xor
jo
dec
or
sti
out
popl
and
fnstsw
pushf
loop
push
adc
rcl
out
and
push
jno
ljmp
stos
add
daa
je
pop
negl
fcmovnu
jp
fucomp
mov
fs
mov
or
cwtl
pop
ror
daa
sti
pop
mov
arpl
cmp
fwait
hlt
ja
ss
and
pop
cltd
xor
rcrl
adc
jge
fldcw
push
in
addl
or
xlat
cli
call
stos
sub
push
sub
jo
pushl
jp
adc
and
jle
add
xchg
dec
xor
popf
jb
aas
mov
push
pop
jp
xchg
aaa
lods
cmc
in
xchg
fildl
or
sbb
fdivl
mov
ss
enter
adc
xchg
lcall
sbb
mov
test
mov
inc
lret
in
jnp
lret
mov
cli
push
lods
mov
orb
lcall
cwtl
pop
into
cld
loopne
insl
jno
insl
and
dec
ficompl
scas
pusha
test
sbb
pop
xchg
xor
mov
mov
cmp
mov
xchg
push
push
mov
push
iret
push
out
and
sbb
cmp
xor
loope
pop
adc
mov
sbb
mov
sbb
addl
adc
fisubl
jb
fdivrl
mov
movsl
push
test
jge
mov
xor
lods
jnp
sbb
pop
into
pop
in
pop
mov
adc
sbb
dec
pop
lret
insl
adcb
adc
pop
stos
pop
test
out
dec
in
push
lret
xor
and
cmp
sahf
pop
lock
loop
cmp
pusha
pusha
sub
ss
or
mov
aam
push
pop
or
push
loopne
movsl
xor
gs
dec
out
bound
aam
pop
sbb
js
ss
fstpt
add
jg
and
sahf
hlt
mov
stos
xor
mov
dec
inc
fiadds
jmp
cmpsb
nop
insl
in
sbbl
outsl
data16
jno
mov
mov
or
inc
fimuls
int3
jg
leave
or
push
das
loop
stc
jae
pop
mov
jmp
sub
or
adc
out
mov
lods
pop
mov
pop
sbb
arpl
fdivrl
ficoml
jl
int3
adc
lahf
lock
dec
adc
jno
cmp
in
push
out
ret
pop
cmpsb
sbb
jne
bswap
shl
xor
mov
stos
rcrl
roll
push
mov
add
xchg
jns
dec
iret
cmpsb
arpl
push
dec
and
imul
aaa
xor
pop
push
mov
mov
call
int
jae
cmc
cltd
xor
xchg
loop
rolb
dec
adc
jp
pop
jae
add
cli
pop
cmpsl
adc
mov
mov
decl
xchg
movsb
sbb
add
mov
push
jo
or
xor
sbb
xchg
jl
or
aaa
xchg
scas
shrl
xlat
popf
stc
out
xor
pop
xor
dec
cmp
pop
xor
test
jge
lcall
push
fistpll
push
mov
adc
mov
cmp
imul
push
mov
sti
nop
das
push
xor
mov
push
jecxz
aas
and
jmp
popa
cs
add
add
adc
outsl
and
pop
lcall
outsl
aam
mov
imull
mov
add
lret
jae
rol
adc
int3
popf
xor
push
cwtl
and
push
sub
cltd
call
cmp
scas
inc
sbb
adc
sub
inc
mov
in
mov
arpl
aam
xchg
data16
adc
sub
xchg
pop
mov
mov
pop
pushf
ret
add
mov
fcmove
mov
in
mov
sarb
xor
lret
inc
sub
push
jge
rol
lods
addr16
test
or
inc
push
pusha
sbb
ds
imul
loopne
add
movsl
xor
xchg
scas
pop
subl
cmc
sub
pop
mov
jb
pop
in
pop
sbb
rorb
jle
jecxz
enter
or
jmp
cmp
das
inc
mov
out
sbb
cli
sbb
mov
mov
fimull
mov
insb
mov
popf
les
icebp
push
sub
mov
scas
orb
add
pop
adc
divl
data16
pop
aaa
bound
loope
out
xlat
inc
sahf
xor
cmp
mov
pop
lds
jmp
in
inc
mov
jecxz
aas
mov
jp
jle
shrl
adc
mov
mov
jge
enter
add
add
sahf
mov
and
mov
cmp
rorb
mov
jg
out
lcall
ljmp
repz
mov
mov
dec
aam
decl
jp
iret
fs
and
mov
in
add
adc
cmp
and
in
mov
out
mov
mov
pushf
es
cmp
pop
xchg
jge
loopne
pop
mov
jge
pusha
popf
lods
outsl
rcrb
adc
fwait
iret
lcall
in
jmp
das
mov
xchg
out
ret
sub
movb
mov
xchg
sbb
aas
pop
add
jg
adc
lret
xchg
xchg
das
xchg
pop
out
xor
mov
movb
cmp
sbb
xor
shll
or
das
mov
fnstenv
movsb
jg
inc
pop
sbb
push
scas
inc
cmc
fistps
in
adcl
call
out
xor
xorl
loop
fs
inc
sbb
xor
jg
pop
mov
out
xchg
stc
sub
mov
inc
pop
insb
jae
and
pusha
stos
mov
sti
fwait
and
dec
test
insl
and
fstpl
in
add
mov
xchg
pop
pushf
adc
mov
sbb
adc
or
rorl
idivl
shll
push
fwait
cmp
push
fwait
pop
ds
nop
mov
shrb
cltd
xchg
shrb
mov
or
fsubs
fnsave
jns
divb
jbe
pop
mov
xchg
and
sbb
jbe
inc
push
sbb
push
add
sub
xor
xchg
sub
out
push
jae
outsl
aad
pop
fs
mov
mov
and
xchg
inc
aas
ja
xor
sbb
fcompl
mov
or
and
imul
jo
out
dec
in
adc
pop
cmc
fcomp
mov
pop
je
mov
das
push
pop
cmp
fwait
xchg
scas
int3
push
jmp
cmp
push
test
imul
nop
ljmp
mov
jbe
popf
loop
iret
sub
lea
push
xchg
stc
ljmp
ljmp
out
loopne
add
add
sub
cmp
xor
ds
or
jmp
adc
in
mov
outsl
push
pop
mov
push
ret
sub
clc
xor
dec
sbb
sub
add
loop
push
and
int3
fisubs
sbb
dec
fisubs
xchg
and
jne
xor
dec
in
sahf
inc
shlb
mov
fldt
xchg
cmpsl
fnstenv
stc
mull
scas
cmp
loope
lods
and
push
mov
push
or
cmp
dec
fwait
jbe
jne
imul
enter
mov
in
out
imul
jmp
xchg
dec
push
or
inc
dec
in
mov
hlt
cmp
lods
adc
adc
icebp
maxps
pop
mov
shlb
cld
or
pop
imul
pop
sub
sbb
mov
inc
mov
xchg
imul
and
insl
aas
pop
or
out
cmp
dec
jg
movsl
sbb
mov
outsl
dec
enter
into
xor
add
push
lcall
ss
mov
adc
dec
sbb
jnp
and
inc
pop
or
test
pop
loopne
add
mov
or
sub
mov
inc
jno
xchg
jle
sbb
adc
pop
pop
mov
or
pop
lods
jecxz
ljmp
outsl
jb
ss
andl
sbb
mov
insl
cmp
insb
fisttpll
arpl
lcall
mov
xor
cld
ljmp
sub
xchg
sbb
dec
cld
stos
dec
loope
adc
add
dec
jne
movsl
pop
bound
movsl
test
cmp
call
sub
xchg
cmp
jno
inc
mov
pop
or
out
xor
in
adcl
mov
std
adc
add
sbb
push
mov
sbb
int3
xchg
sbbb
mov
sbb
xchg
jl
dec
sub
jns
es
insl
bound
push
xchg
sub
mov
outsb
add
pop
or
pop
mov
imul
mov
xor
mov
sbb
insb
lea
loopne
stos
mov
and
mov
test
mov
add
dec
mov
loope
mov
mov
mov
mov
repnz
pop
cli
testb
int3
movsl
mov
out
repz
or
imul
mov
andl
cwtl
inc
repnz
mov
mov
push
mov
clc
push
shrb
pop
cs
fs
mov
cli
dec
xchg
jl,pn
sub
out
mov
lock
mov
lods
mov
jo
adc
incl
mov
clc
xor
outsb
adc
scas
inc
int
xchg
in
in
xor
xchg
jae
sarb
cmpsb
insb
fbld
mov
xor
mov
lcall
mov
enter
fsubs
or
scas
fdivl
inc
jecxz
imul
ja
adc
lods
xchg
cmpsl
sub
outsb
xor
mov
pop
negb
inc
push
into
or
pop
xor
in
xor
out
sahf
imul
fidivs
shll
cmpsw
std
xchg
pushf
cmp
inc
mov
inc
push
in
jl
pop
jae
add
fsubl
popa
test
adc
dec
xor
ds
pop
mov
in
mov
in
jp
lock
not
gs
jl
jb
or
call
xchg
outsl
into
mov
testl
push
and
sahf
sbb
ficoml
mov
hlt
mov
incl
lods
cltd
fdivrp
push
mov
adc
cmpsb
rcr
mov
adc
test
in
aas
aam
into
out
cmp
pop
push
jns
movsl
jge
imul
scas
and
rolb
fs
daa
lock
jl
mov
and
int
sub
or
push
aam
dec
dec
adc
pushf
xor
mov
mov
jns
adc
je
les
mov
and
int
das
push
mov
xchg
sub
or
pop
movsl
cs
xor
lods
inc
pop
rcrb
cmp
popf
sbb
jmp
mov
fisubrl
jp
je
mov
mov
shl
jmp
hlt
sbb
jmp
clc
ja
mov
lea
test
incb
sbb
jg
mov
cmpsb
add
and
popa
seta
popf
je
and
movsb
and
inc
sub
xchg
ret
xor
mov
movsl
orb
jge
pusha
mov
fisubrs
les
add
pushf
xchg
test
lods
test
nop
mov
dec
in
int3
faddl
mov
sti
fldcw
adcb
mov
dec
int
push
in
fidivrl
mov
arpl
pusha
popa
inc
adc
mov
fisttps
decl
xor
jnp
hlt
push
divb
and
stos
sub
sub
loopne
mov
sbb
mov
jnp
mov
vpmuludq
rcrl
sbb
sub
pop
sub
sub
stos
push
jnp
pop
and
rcrl
add
lock
lods
dec
pop
sbb
adc
pop
jl
arpl
mov
sbb
push
mov
mov
pop
divl
loopne
jle
adc
mov
aas
or
cmp
frstor
push
aas
sub
js
mov
or
popf
icebp
fwait
adc
nop
inc
mov
loope
lret
data16
pop
les
pop
xor
les
push
inc
mov
inc
jns
pop
inc
jmp
jl
loope
cmp
xchg
cmc
arpl
imul
jnp
fsubs
cmp
jl
push
jmp
lods
pop
insb
xor
sbb
f2xm1
hlt
fisttpll
stos
scas
imul
xor
lcall
loopne
ss
mov
stos
add
jle
pop
daa
push
std
cltd
flds
movsl
jb
in
xchg
or
in
ret
cmpsl
sub
lds
mov
pusha
mov
sahf
pop
sub
mov
sbb
pusha
and
sahf
mov
mov
fwait
xorl
stc
fmul
xor
and
cmp
push
es
mov
mov
aam
or
add
insb
data16
rcr
out
xorl
mov
aad
jne
sbb
jo
cli
insl
or
movsl
cmpsb
cmp
and
pop
sbb
jo
push
xor
mov
jo
fnsave
adc
notl
cmp
mov
out
outsb
jecxz
rorl
xchg
adc
test
mov
mov
fistl
sub
subl
pop
mov
icebp
cmc
stc
mov
xlat
notb
sub
adc
mov
cmpsb
xor
cmp
add
inc
out
and
xchg
lret
ret
lahf
stos
xchg
push
dec
in
dec
inc
sbb
ds
addr16
dec
call
dec
add
mov
mov
scas
aam
sbb
fldl
adc
mov
lods
jle
repz
dec
jle
sub
xchg
outsb
sbb
and
xchg
or
out
aam
bound
mov
mov
in
shl
in
int3
mov
and
insb
adc
fsubs
xor
mov
pop
in
sbb
mov
cmp
xor
adc
ficoms
dec
mov
jno
and
mov
out
rcrb
dec
test
test
or
push
addb
je
out
popa
jno
xchg
int3
andb
pop
sub
jbe
mov
dec
inc
dec
iret
movsl
ljmp
lds
pop
mov
xchg
test
and
sahf
xor
jb
mov
repz
aaa
sub
daa
or
loope
or
mov
jo
pop
push
mov
lods
mov
gs
rolb
scas
je
fs
xor
cmp
jb
push
daa
pop
out
ret
lods
leave
bound
nop
and
popa
add
out
cltd
inc
rcrl
cltd
push
cmp
imul
fdivrl
xor
sub
xor
loopne
aas
fs
jo
adc
das
fldcw
arpl
xchg
adc
movb
adc
cs
push
pop
ret
dec
add
mov
mov
fidivl
jbe
inc
lds
dec
pushf
push
cmp
out
xor
inc
out
mov
call
dec
imul
inc
ret
jg
xor
sbb
xor
add
rep
loope
cld
repnz
int
or
mov
movsl
in
out
leave
mov
adc
sub
int3
arpl
sub
fwait
outsb
test
mov
or
stos
fwait
lcall
cwtl
dec
aam
ljmp
imul
push
sarl
lcall
cwtl
cmp
xchg
pop
mov
rep
inc
in
out
dec
scas
insb
xchg
pop
adcl
subl
pop
mov
icebp
xor
sti
lods
jg
xchg
mov
pop
pop
xchg
inc
and
mov
xchg
push
lahf
push
mov
lods
in
push
loope
add
fwait
insb
fisttps
adc
leave
sbb
ja
js
aaa
xchg
mov
data16
es
xchg
xchg
xchg
mov
and
outsb
movsb
fdivrl
lea
dec
add
mov
adc
outsb
xor
xchg
ja
and
fwait
test
pop
cmp
push
mov
add
fistpl
cmp
jmp
loopne
mov
add
mov
int3
add
fs
push
out
iret
cld
mov
scas
pop
push
dec
aad
or
cmp
pop
and
es
filds
mov
and
je
sahf
inc
sbb
sahf
push
lret
sbb
xor
mov
pushf
in
adc
movlps
inc
in
pop
sbb
sbbl
push
push
je
mov
call
mov
cmp
insl
adc
cmpps
mov
or
rorl
andb
leave
push
jmp
cmpsl
push
xor
cmp
pop
paddsb
jo
cmp
jge
dec
add
xor
push
rolb
pop
ss
lock
add
pop
xor
pop
lods
inc
mov
dec
cmc
mov
push
ret
mov
push
xlat
mov
fadds
or
imul
jge
test
loope
lret
adc
or
sub
fstpt
mov
lods
inc
inc
sbb
les
jmp
sub
jmp
pop
stos
pop
loop
inc
scas
cmp
pop
pusha
and
dec
je
sub
popa
jl
outsb
mov
or
mov
mov
push
imul
out
addr16
mov
mov
or
mov
sbb
outsl
inc
push
adc
or
sub
ss
inc
lods
fdivs
loop
pop
in
mov
in
notb
push
adc
in
divb
jecxz
je
mov
fistpl
std
and
mov
jecxz
cmp
dec
aad
adc
out
cli
imul
mov
push
std
mov
xor
mov
test
and
mov
ljmp
subl
popl
scas
ljmp
or
imul
xchg
mov
iret
aaa
adc
push
dec
rclb
cmp
out
stos
sbb
jbe
adc
mov
jge
ret
aaa
adc
movsb
es
popf
loope
insb
mov
das
popf
insb
sbb
or
adc
and
imulb
adc
out
dec
jb
mov
adc
imul
lahf
notl
imulb
sub
xor
addr16
stos
push
outsl
mov
push
in
mov
push
mov
push
stos
in
icebp
enter
cld
in
cmpsl
push
repnz
pop
lret
sti
dec
cmp
jne
mov
or
call
out
sbb
adc
out
mov
cmpsb
xor
mov
xor
mov
orl
mov
add
mov
pop
dec
mov
pop
and
push
push
xchg
mov
and
pop
fsubrs
dec
mov
sbbl
mov
add
iret
sbb
jbe
cmpsl
inc
pop
pop
outsl
push
or
inc
in
mov
adc
ss
fists
popa
loope
data16
mov
std
or
repnz
shrb
mov
shlb
pop
and
lret
inc
xchg
sub
adc
mov
setle
out
mov
inc
movsb
jecxz
in
dec
in
ror
out
out
inc
pop
ja
imull
popf
or
cmp
out
cmovp
loop
jmp
and
mov
mov
roll
int
hlt
rol
inc
in
inc
imul
xor
stos
sbb
stos
fisubrl
cmp
stos
rorb
mov
stos
sub
fistl
mov
mov
lret
popa
push
push
fsts
call
ss
jb
testl
pop
movsb
sbb
pop
cmpsl
iret
mov
stos
and
icebp
cmpsb
mov
pop
push
aaa
mov
cmp
mov
jmp
nop
sbb
stc
fcoml
rorl
sbb
out
push
arpl
push
push
out
add
incl
or
cmpsl
mov
dec
not
inc
fldl
sbb
das
icebp
aas
mov
repz
sti
jp
adc
fstl
jecxz
and
jns
sub
out
scas
dec
pop
sbb
inc
mov
fsubr
fisubs
push
jmp
js
xor
lret
adc
or
dec
std
push
xchg
lret
fsubrs
lods
sti
test
and
mov
imul
movsb
mov
cltd
fisttpl
xchg
mov
das
sub
loope
dec
and
stc
movsl
sahf
push
jg
stos
fdivrs
lahf
shrb
fwait
sub
aas
clc
daa
mov
jl
inc
fninit
imull
shlb
and
mov
pusha
cltd
cs
fstpt
nop
enter
mov
mov
nop
cld
dec
fs
sarb
repnz
jmp
jle
pop
pop
scas
lahf
or
mov
pop
inc
flds
inc
inc
pop
add
notl
add
jl
dec
fildl
add
cmc
nop
aaa
mov
mov
sahf
xor
stos
stos
jbe
push
iret
cwtl
pop
lods
or
fidivrs
test
push
push
and
inc
fisubrs
lds
mov
dec
jg
adcb
pop
popa
sbb
fs
ror
filds
jne
sti
cmpsb
es
mov
fdivrp
inc
cmc
movsb
push
dec
stos
cmp
jnp
rcrb
test
xor
jle
leave
es
xor
mov
pusha
rol
mov
jno
and
push
xchg
in
xchg
dec
xlat
arpl
pop
xchg
pop
stos
sub
js
jae
out
xor
xchg
push
mov
mov
pop
cmp
xor
ret
pop
pop
mov
xchg
stc
jp
jmp
dec
fstl
scas
movsl
sbb
dec
ss
push
les
adc
jmp
xor
sub
add
repz
popa
clc
and
add
mov
loope
aaa
push
lea
rcrl
jb
xchg
cs
lahf
xchg
or
push
mov
pop
dec
push
sub
dec
scas
inc
repz
mov
shrb
inc
sti
sub
insl
xchg
cmp
xlat
outsb
andl
lods
xor
mov
ja
sbb
xchg
sub
hlt
scas
add
shrb
daa
loopne
test
cmp
xor
and
jno
mov
cmc
cmpsb
or
add
mov
mov
nop
daa
shl
sahf
xor
mov
fdivl
jb
cmp
imul
pop
adc
and
xor
xchg
push
xlat
jecxz
inc
xlat
push
pushf
pop
into
xlat
pop
movsb
mov
or
adc
call
push
cwtl
jns
adc
cmp
or
mov
mov
or
dec
ds
mov
insl
scas
aam
cwtl
pop
jb
sub
mov
xor
leave
fldenv
xchg
mov
arpl
and
or
fs
and
mov
xchg
cmc
std
push
shr
cltd
sbb
or
fadds
jbe
sub
sbb
inc
rorb
dec
ss
in
xor
fidivs
cmp
cld
cltd
mov
insl
add
or
xchg
sub
mov
sbb
jnp
pop
xlat
loope
pop
imul
ja
and
mov
lahf
sub
push
push
dec
adc
cmp
fsubr
inc
xchg
in
rorl
inc
pushf
lcall
mov
sub
mov
mov
loop
ljmp
sbb
mov
jbe
cwtl
out
outsb
ljmp
cmp
cmpb
or
xchg
mov
outsl
jo
adc
cmp
dec
test
dec
nop
xchg
xor
mov
adc
dec
out
sub
xor
arpl
pop
or
dec
cmp
fs
mov
jle
push
mov
ret
mov
sbb
mov
mov
mov
std
push
int
jp
push
add
sbbl
dec
outsl
push
or
sub
or
or
push
add
insl
push
in
jo
inc
push
fldpi
push
test
nop
pop
test
mov
adc
mov
stc
jl
dec
rcrb
das
dec
pop
loope
xor
test
add
mov
mov
loop
stos
aam
out
movsl
push
ja
push
jbe
stc
das
stos
inc
add
enter
adc
cmpl
mov
testl
mov
jo
push
xchg
mov
jno
and
push
je
out
xchg
bound
daa
clc
fs
sub
adc
dec
dec
clc
or
out
outsl
push
jmp
inc
pop
repz
mov
pop
lcall
dec
call
or
cmp
pop
stos
stos
mov
gs
adc
pop
jbe
pop
test
cs
pop
iret
jp
dec
and
jne
mov
jle
aaa
and
jl
in
test
push
repz
and
dec
idivl
testl
js
push
sub
lods
insl
add
sub
scas
jbe
ss
scas
mov
and
arpl
lea
clc
cld
jno
cs
dec
jge
ret
fisttps
inc
ficompl
fstl
push
mov
cli
out
adcl
push
add
shr
dec
es
xchg
ljmp
mov
cmc
in
movsb
addr16
mov
xor
test
mov
ljmp
add
lret
mov
imul
sbb
hlt
xor
jmp
mov
jno
xchg
flds
and
mov
pop
cmp
insl
cmp
clc
mov
dec
mov
sti
dec
sub
sbb
and
gs
mov
cwtl
out
stc
and
ret
out
loopne
xchg
mov
les
lock
adc
jg
mov
xchg
mov
sahf
xor
lcall
add
aaa
adc
pusha
clc
addr16
cwtl
sbb
subb
push
jl
add
and
jno
jbe
xchg
mov
mov
jnp
and
mov
fucomi
jle
std
adc
cwtl
dec
xor
sbb
stc
loop
dec
xor
out
pusha
mov
ds
jl
out
popf
pop
push
aam
aaa
cmpsb
xchg
fisttpl
sbb
rcrb
xchg
loop
leave
cmpsl
push
inc
pop
mov
inc
inc
sbb
add
sub
push
lock
mov
mov
enter
cltd
push
push
subb
mov
fmuls
jne
mov
test
sbb
mov
sbb
ret
shlb
sti
pop
dec
mov
adc
out
movsl
call
in
scas
xchg
rclb
pop
fdivs
or
mov
rclb
cmc
int
xorb
lea
out
aad
xor
adc
sbb
enter
sub
popa
clc
rcrb
jno
inc
jl
dec
xor
mov
inc
push
faddl
notl
test
cltd
inc
add
pop
pushf
ficomps
loopne
sbb
ds
fcompl
mov
insl
ja
cmp
lock
mov
dec
sub
arpl
push
lahf
out
shrb
sub
imul
or
test
lahf
push
repnz
cmp
mov
pop
pop
xor
mov
iret
lcall
jmp
sub
sbbb
sbb
sub
addr16
mov
out
push
out
sti
cmp
cmp
xchg
cmpsl
scas
adc
adc
into
leave
fs
xor
clc
lds
mov
je
dec
enter
pushf
and
dec
andl
sti
std
aad
fs
push
arpl
inc
xchg
test
cwtl
pop
add
pop
pop
aaa
cwtl
and
addr16
push
xchg
jle
and
or
fidivrs
fcoml
push
mov
xchg
add
xor
and
xchg
lcall
into
fdivs
cmp
or
mov
test
popl
js
jb
mov
add
ret
imul
shll
pop
dec
cmpsb
xor
mov
nop
mov
jo
addr16
fs
jno
jno
and
push
insb
rolb
add
ljmp
loopne
inc
out
mov
or
aad
mov
mov
jge
pop
add
movsb
push
ficoms
lret
jnp
pop
mov
jns
xchg
pop
add
add
xor
lea
lret
xchg
lea
or
leave
sti
xchg
addr16
push
test
aad
fidivs
mov
cs
movl
test
arpl
xchg
pop
mov
or
and
mov
imul
int
xchg
xor
fildl
filds
movsb
sbb
repnz
pop
std
mov
out
sbb
jno
sbb
dec
imul
jno
dec
dec
sahf
aam
sub
cmp
stos
lods
lahf
scas
and
imul
ret
stos
push
jb
mov
add
lods
push
in
fisttps
mov
mov
xor
popa
aad
cmp
es
dec
rdpmc
repz
ja
cmp
loopne
mov
or
push
movsl
ds
iret
or
sub
bnd
data16
mov
or
inc
jl
xor
and
stc
add
out
jno
push
out
add
shll
icebp
cmp
and
test
jp
repz
xchg
gs
sbbb
mov
push
mov
mov
pop
mov
aaa
movsl
mov
or
mov
xor
sarl
bound
pop
cli
mov
sar
push
fldcw
adc
es
sahf
js
sarb
mov
fcoml
scas
mov
ja
sbb
push
push
sbb
imul
jae
repz
push
jmp
mov
mov
or
mov
fs
and
push
sub
in
test
pop
test
sub
sub
lea
jo
bound
sbb
cmpps
insl
add
push
loope
aaa
jg
jb
js
and
sbb
push
sub
dec
cli
fbstp
cmc
aas
sarl
std
xchg
cmovp
andl
jb
cli
add
rolb
xchg
mov
and
fmuls
or
cmpsl
sbb
loope
ret
dec
shrl
clc
jbe
or
cs
jg
or
in
loop
loop
or
lahf
adc
addb
jo
in
dec
sbb
out
test
inc
push
sub
xchg
aas
cmp
scas
xlat
push
rol
push
test
mov
cs
adc
adc
jno
inc
sub
push
aad
dec
in
rorb
jae
and
or
pusha
cmp
dec
jnp
fucomi
bound
fmuls
pop
hlt
mov
lahf
dec
pusha
ret
sub
test
sbbl
sbb
jg
arpl
cld
ljmp
sub
arpl
imul
hlt
mov
add
pop
adc
mov
mov
pop
jne
xchg
ds
push
dec
in
fcompl
outsl
mov
insl
ja
fisubl
sbb
cltd
rclb
loop
jl
pusha
sahf
adc
jb
jae
outsb
jns
test
lea
in
je
dec
in
sub
jle
push
and
pop
mov
enter
or
aad
mov
mov
sbb
mov
xchg
ss
out
mov
pop
push
jge
mov
push
aaa
or
adc
sbb
leave
divb
and
popa
pusha
pop
pushf
stos
adc
push
push
nop
push
leave
sbb
mov
cwtl
jae
rclb
loop
jge
fstl
test
sbb
mov
add
je
or
std
dec
cmp
setnp
mov
mov
push
out
jecxz
insb
mov
sahf
xchg
shll
sub
rcll
push
inc
repnz
sbb
and
lret
xor
push
out
out
push
pushf
movsl
pop
aam
mov
push
test
stos
stc
nop
faddl
mov
call
mov
ret
adc
out
dec
out
cmp
sbb
jae
int3
lock
fildl
push
push
leave
shl
icebp
ljmp
lret
push
lods
lods
mov
fmulp
fidivl
or
out
ret
mov
iret
mov
mov
loop
pop
mov
xor
and
inc
cmpsb
mov
loop
sub
loop
inc
sub
mov
push
sub
lock
push
loope
push
cmp
pop
jle
cltd
xchg
insb
cmp
imul
mov
mov
leave
mov
out
movd
dec
or
bound
fadds
out
lea
cli
mov
filds
mov
repnz
dec
pop
lcall
testb
lcall
cmp
inc
add
aaa
push
cs
loopne
push
icebp
ss
pop
cmp
pop
jo
imul
dec
aaa
push
mov
lret
pop
repnz
movsb
stos
ret
pop
filds
dec
adc
push
mov
aam
ret
inc
aad
lds
pop
push
ret
add
xchg
jecxz,pn
dec
pop
mov
lds
pop
loop
in
mov
lret
loop
ds
or
mov
mov
shll
pop
jmp
push
dec
rolb
xlat
mov
xchg
repnz
fsubs
mov
cmp
xchg
daa
xchg
insl
cli
jge
cvttps2pi
mov
sub
xchg
into
movsl
inc
adc
push
pop
cmp
out
testl
or
xchg
popl
xchg
jp
imul
inc
in
and
jp
imul
pop
fldcw
fidivrl
cld
test
push
out
into
pop
imul
or
cmp
mov
dec
fisttpl
or
test
mov
shlb
out
sti
or
mov
stos
sahf
mov
fisubrs
and
push
in
aam
jnp
arpl
sub
pop
adc
xor
sbb
and
es
test
pop
insb
test
xor
pop
dec
mov
mov
mov
xor
addr16
jle
and
into
test
pop
jg
mov
jmp
jge
jo
mov
mov
or
cmp
ret
shll
add
fisttps
or
aam
fsubrs
xchg
cmc
stc
repnz
push
xchg
ret
mov
aad
in
cmpsb
adc
mov
fs
xor
out
cmp
sub
popf
in
adc
mov
les
subl
sbbl
mov
lods
push
js
mov
adc
imul
cmpsb
lock
push
mov
adc
mov
hlt
in
mov
mov
loope
jmp
scas
out
dec
xchg
push
enter
testl
into
insl
arpl
sbb
int3
daa
jnp
push
movsl
divb
insl
sub
or
stos
cmp
and
or
mov
mov
sbb
jmp
mov
jne
out
imul
cld
shl
stos
loop
xor
sbb
mov
outsl
cld
sbbl
sub
inc
aas
fcompl
ds
popa
leave
pusha
xchg
das
adc
ret
xor
inc
xchg
push
fbstp
jmp
call
rcrb
outsb
dec
sbbb
js
xchg
sub
mov
mov
leave
leave
and
sub
or
popl
mov
adc
into
out
pop
mov
fiaddl
pop
or
std
xchg
jg
mov
pop
pop
xchg
pop
hlt
test
cmp
push
jnp
pop
push
les
xor
mov
push
mov
jae
sub
sbb
imul
xor
mov
push
jb
jl
xchg
repz
cmp
push
je
and
pcmpgtd
fs
mov
dec
dec
test
mov
jg
repnz
push
xlat
sbb
sub
dec
push
rep
cltd
add
cmp
add
imul
xor
jo
jno
mov
test
aas
out
pop
loope
loope
dec
push
jmp
cmpsb
fistl
mov
shlb
xchg
add
out
jnp
fsubrs
sbb
popa
add
pop
cmpsl
addb
cld
int3
loope
sub
bound
push
lret
xor
push
and
mov
or
int
pop
xor
leave
addl
lods
pop
scas
sub
mov
xor
xchg
divb
mov
popf
cmpsl
and
jb
pop
stc
sbb
sbb
jne
mov
mov
jmp
inc
stc
lods
or
lds
cmp
out
push
sahf
push
sbb
fdivr
mov
cli
popa
stos
imul
push
push
call
sbb
dec
mov
lea
mov
inc
and
jmp
testl
xchg
ljmp
test
cmp
insl
adc
pop
cld
cmp
in
and
inc
pop
loopne
mov
mov
roll
mov
leave
lahf
mov
fs
cmc
push
lods
test
lods
shrb
roll
pop
repz
sub
dec
pop
test
testb
jl
jle
cmp
cmc
clc
mov
lcall
inc
bound
enter
inc
mov
jae
dec
lcall
stc
je
fisubl
test
hlt
inc
mov
push
or
mov
sub
in
xchg
mov
clc
or
in
and
test
and
push
cltd
sbb
mov
inc
out
mov
jl
sahf
aaa
dec
cmp
mov
add
aam
nop
or
cs
pop
mov
enter
jbe
xchg
int3
inc
push
sti
int
push
icebp
mov
repz
hlt
cmpsb
inc
xchg
push
and
push
pop
data16
leave
test
mov
fistps
add
push
mov
imul
mov
je
inc
repnz
mov
adc
adc
test
out
push
test
cmp
icebp
pop
movsb
stos
in
dec
inc
mov
push
cmpsb
inc
data16
out
cmp
mov
jge
inc
daa
cmp
sbb
into
push
mov
sbb
push
mov
push
xor
inc
mov
jne
mov
or
nop
sub
mov
cmpsb
mov
sub
or
stos
sbb
fwait
xchg
jnp
jp
bound
inc
stc
pusha
mov
mov
fidivl
xchg
ljmp
int
xchg
repz
and
mov
loopne
push
cmp
outsl
fwait
in
pop
xor
mov
mov
cwtl
insb
sub
xor
jp
out
hlt
inc
nop
call
ljmp
test
iret
scas
pop
cli
mov
subb
xchg
rorb
aas
mov
fsubrs
fwait
mov
sbb
iret
dec
les
cld
cwtl
lcall
inc
fstpl
add
add
or
xor
xchg
xor
mov
mov
push
aaa
in
ss
in
ret
pushf
daa
jl
imul
inc
cmp
pushf
dec
enter
sub
mov
sbb
adc
cmp
push
or
mov
pop
and
inc
dec
out
fmuls
xor
inc
jle
repnz
inc
out
lock
fstpt
aad
fisttpll
rolb
pop
ret
pop
lret
les
sub
push
ret
pop
call
and
loop
inc
sbb
ja
in
gs
add
lods
in
sbbl
mov
mov
test
loope
aam
shl
push
or
mov
mov
xchg
dec
aam
push
add
xchg
mov
sbbb
lret
adc
jae
push
add
test
adc
push
sbb
ficoml
dec
xchg
into
jmp
mov
nop
xor
pop
bnd
test
or
cmc
mov
xor
sub
push
cmp
push
and
xor
rcrl
pop
addr16
loope
outsb
or
bound
scas
sub
mov
js
mov
and
fadds
arpl
into
push
pop
inc
mov
arpl
dec
pusha
cmp
aad
fstpt
pop
inc
adc
mov
fmuls
rep
add
jno
mov
sti
mov
js
scas
jmp
cwtl
pop
out
mov
pop
xor
shll
pop
lahf
inc
out
xchg
jecxz
inc
inc
shr
sub
call
cmp
ljmp
cmp
popf
mov
xchg
lahf
or
push
incb
push
aaa
stos
mov
stos
and
arpl
cmp
dec
cld
mov
and
sub
adc
jnp
movsl
icebp
and
push
jmp
cld
xchg
js
outsl
jno
pop
or
dec
scas
lods
jnp
sbb
jno
push
out
std
das
push
nop
out
test
xor
pop
mov
cmp
movsb
or
push
sarl
imul
insb
add
cmpsl
ret
arpl
shr
dec
imul
repnz
mov
mov
jp
movsb
xchg
imul
icebp
dec
popa
xchg
push
inc
sbbb
mov
mov
mov
sub
mov
sub
push
js
inc
pop
adc
in
sarb
xchg
add
cmc
ss
push
std
jo
push
lcall
out
push
aam
ss
xor
stos
test
ljmp
push
dec
loopne
divb
mov
sbb
cmpb
push
jg
xor
push
add
push
cmp
ret
and
movsb
std
icebp
and
inc
and
lock
push
stos
inc
xchg
xchg
popa
mov
scas
and
iret
nop
dec
mov
into
fsubrp
pop
out
gs
push
fwait
mov
dec
cmpsb
test
add
mov
xor
adc
test
dec
xchg
adc
loopne
aam
popf
stos
call
mov
clc
aam
stos
rclb
jno
pop
mov
xor
mov
sbb
test
rol
xor
bnd
aam
inc
stos
adc
jb
inc
test
jo
insl
leave
int
out
mov
pop
in
mov
and
pop
movsb
cli
cmp
data16
adc
fwait
test
inc
jmp
xor
das
lret
dec
push
ljmp
pop
mov
cmp
mov
cmp
push
lods
lds
pushf
aas
pop
mov
pop
dec
scas
or
cmp
aam
scas
mov
scas
pop
mov
mov
loopne
stos
xchg
dec
cmc
dec
dec
or
pop
sbb
xchg
cmovge
stos
fdivrp
pop
repz
das
jne
xchg
push
lock
sbb
jl
aaa
outsb
dec
movsl
sti
in
into
lock
pushl
pop
pushf
xor
dec
shrl
push
lods
pop
mov
inc
enter
cmp
shll
jo
paddb
in
sbbl
add
or
mov
loope
adc
dec
dec
ss
sbb
xlat
test
cmp
xor
sub
repz
pop
hlt
pop
pop
cmc
adc
pusha
jmp
cmp
out
pusha
fcmovu
testb
xorb
lock
mov
imul
clc
in
dec
out
cwtl
rorl
pop
xorb
mov
cmpsl
lds
jle
lea
inc
scas
fiadds
mov
xor
or
loope
lock
test
test
sahf
pop
sbb
dec
loopne
decl
pop
jecxz
repz
sub
in
mov
sbb
cmp
lods
pop
movsb
pop
insl
inc
inc
pop
div
mov
repz
clc
je
push
inc
cmc
dec
iret
cmp
dec
xor
ret
into
ret
es
cmc
out
iret
loop
in
mov
or
xlat
cmp
mov
push
outsl
or
jmp
cmp
inc
inc
jp
lock
es
pop
aaa
inc
sbb
repnz
dec
mov
cmpsl
xor
icebp
lcall
bound
inc
int3
sbb
cmc
adc
inc
hlt
popa
cmp
pmaxsw
push
jecxz
cwtl
loope
data16
jae
push
xor
into
fmull
mov
jle
insl
ret
cmp
xor
xor
cmp
fildll
cmpsl
rclb
pop
pop
shl
sahf
jno
or
adc
sahf
negl
mov
into
xor
movsb
aad
mov
and
pop
out
mov
sbb
jl
imul
jge
or
lds
sub
inc
test
pop
push
mov
sahf
scas
adc
or
int
jnp
shrb
mov
push
pop
or
cli
maxps
lods
rcrl
mov
jbe
pop
mov
dec
or
sub
wbinvd
loopne
mov
dec
fwait
insb
and
outsb
jl
nop
jg
loopne
fadds
int
mov
cmp
push
enter
aas
aad
mov
mov
lds
pop
decb
add
nop
gs
pushf
sub
ret
mov
ret
cmp
push
jl
mov
jbe
pop
cmp
gs
push
int3
pop
push
add
divl
loopne
mov
icebp
cmpsb
cmp
pushf
dec
inc
fdivrl
mov
jae
fwait
pop
je
test
ss
sub
fnsave
outsl
adc
cs
inc
sahf
push
xchg
pop
imul
inc
pop
icebp
mov
and
mov
out
mov
cmp
sbb
stos
lret
pop
movsb
mov
mov
scas
jecxz
mov
loop
jae
or
loopne
xchg
popf
lcall
insb
jl
flds
lds
insb
lds
lock
jae
fldln2
push
adc
mov
es
inc
scas
jnp
and
pop
repnz
jbe
mov
pop
mov
and
push
stc
out
popf
inc
jae
sbb
mov
or
cmp
insl
add
shl
insl
fstps
roll
xchg
fdivrl
notl
cmp
mov
ret
push
fsubs
mov
pop
daa
leave
rclb
inc
call
xchg
adcb
insl
ds
sbb
cltd
gs
out
jb
adc
out
and
jge
sub
jmp
mov
adcl
inc
sub
pop
push
ret
jl
xchg
fwait
call
or
in
int3
loopne
loope
add
cmpsl
cmp
dec
aam
mov
pop
testl
ret
pop
aam
jae
mov
adc
divb
out
mov
rcll
adc
mov
and
inc
mov
insb
std
cltd
imul
cmp
insl
adc
pop
out
cmpsb
popf
jl
sti
mov
aad
scas
push
sbbl
fisubrs
inc
popa
jp
andl
cwtl
mov
aam
gs
sbb
and
cld
stos
cmp
mov
jl
out
inc
lods
jmp
icebp
scas
xchg
cmp
jge
lahf
lahf
idiv
sbb
imul
mov
out
dec
push
mov
in
mov
fwait
lods
test
seto
in
inc
in
mov
push
mov
cltd
clc
lret
orl
loope
cmp
pop
push
daa
add
push
icebp
fucomp
add
pushf
xchg
int
push
jl
jge
or
pop
lds
repz
add
testl
mov
or
add
loop
cmovg
xor
cmp
jbe
xchg
mov
sarl
shrb
and
jle
lods
mov
mov
push
and
cmp
mov
pop
pop
cmp
jo
hlt
and
aad
fsubr
xchg
pop
insb
sub
mov
mov
outsb
scas
out
mov
fs
ss
rcl
out
mov
cli
xchg
ret
out
int
lods
cmpsl
dec
mov
fs
dec
inc
shll
pop
daa
cmp
xchg
mov
cmp
subb
mov
jbe
push
mov
dec
les
mov
mov
and
in
sbb
pop
fcompl
clc
xchg
mov
loopne
ret
test
jecxz
cmp
mov
das
adc
cltd
test
inc
push
je
int3
mov
imul
lea
sbb
notl
es
mov
mov
lahf
jmp
ja
scas
mov
add
mov
bound
outsl
leave
movsb
sbb
mov
mov
and
jmp
dec
cs
jno
lods
sub
mov
or
xchg
push
fistps
fcmove
add
push
into
ret
sahf
jle
popf
inc
in
sahf
sbb
enter
add
sbb
pusha
or
fbstp
pop
xlat
daa
orb
test
sub
or
inc
in
add
dec
out
lods
mov
mov
mov
arpl
loope
fwait
aad
std
mov
insb
mov
aad
popf
or
cwtl
dec
push
or
and
lds
sahf
loop
mov
pop
sbb
pop
dec
inc
testb
fimull
mov
dec
pusha
in
cs
or
cmpb
jae
push
dec
repz
mov
jne
xorb
xor
jmp
insl
test
mov
inc
dec
insl
ficoml
jne
jmp
sub
out
dec
lahf
push
rcr
rep
int
daa
les
jns
lret
dec
mull
gs
into
dec
cmpsb
imul
add
add
adc
aaa
outsl
js
mov
addr16
cltd
push
jge
jbe
lret
add
and
ret
sub
int3
fbstp
rol
jmp
cmpsb
ret
cmp
adc
adc
jae
mov
adc
and
js
xchg
scas
inc
mov
ret
sbb
aam
adc
mov
jge
add
mov
fsts
movq
fdivs
pop
cltd
cmp
int3
imul
push
pop
fisttps
mov
bound
mov
je
shlb
popa
sti
inc
test
dec
sub
mov
es
movsb
mov
mov
mov
xor
push
and
inc
scas
testl
xlat
rorl
pop
movsl
xor
adc
push
inc
leave
scas
mov
rolb
ja
sub
xlat
cmpsb
ja
xor
pop
jle
enter
xchg
hlt
mov
sbb
xchg
add
stc
xchg
movsb
je
jecxz
sarb
out
inc
add
adc
fimuls
jb
sbb
scas
mov
push
dec
popa
iret
in
inc
filds
pop
inc
fbstp
imul
lods
pop
push
adc
sbb
out
mov
mov
scas
shrl
fimuls
pop
jmp
lret
sti
out
push
popl
sti
push
mov
scas
loop
xor
in
push
push
jmp
aaa
mov
push
mov
rcrl
add
or
scas
int3
adc
dec
push
mov
ficoms
add
call
test
orb
mov
xchg
test
mov
add
dec
mov
movsb
pop
nop
jl
lret
dec
jmp
repnz
lods
inc
add
fcmove
out
in
pop
adc
jge
in
js
jo
lret
jge
cs
nop
daa
pop
lods
xchg
push
test
scas
ret
adcb
insl
cpuid
mov
ss
xchg
adcb
or
or
rorb
mov
add
insl
sub
xchg
mov
or
outsb
mov
or
into
xor
jae
xor
mov
fstl
push
mov
pop
scas
xchg
icebp
mov
into
out
sbb
mov
push
mov
jne
leave
and
cld
outsl
inc
insl
test
sahf
pop
mov
cmp
cmp
fcmovne
std
rolb
stc
dec
gs
xchg
xchg
sbb
jae
imul
inc
adc
cmp
jne
lock
in
jp
sbbb
mov
mov
sbb
aaa
std
mov
xor
outsl
inc
mov
mov
pop
rorb
clc
sub
xor
push
in
adc
stos
add
ljmp
sub
leave
cmp
dec
fprem1
mov
test
mov
sub
xchg
mov
outsb
push
mov
in
add
xchg
push
and
sbb
mov
aaa
pop
out
outsb
ljmp
aam
push
pop
xchg
sbb
std
and
notl
mov
mov
jle
adc
leave
cwtl
aad
jb
xchg
mov
dec
sar
aas
mov
shlb
jg
push
popa
push
add
adcb
loope
mov
jmp
push
fdivs
cmp
adc
sub
lcall
push
je
cld
int3
arpl
push
dec
cmp
imull
insl
sbb
cmp
push
jns
sarl
rcrb
pushf
cmpsb
mov
inc
popa
fldl
inc
leave
nop
sbb
shlb
push
and
cld
outsb
adc
dec
shl
hlt
push
fstpt
into
push
fisubrl
sub
dec
xor
mov
dec
ds
jo
jge
inc
push
js
iret
fisubl
sub
and
imul
iret
cmp
or
lods
fdivrs
adc
jns
imul
sbb
pop
repnz
pop
push
mov
sub
jno
pop
lock
fcoml
fidivl
cmpsl
dec
add
jns
cs
in
iret
movl
mov
insb
lret
cmp
sbb
dec
sbb
mov
or
out
dec
jae
push
lret
adc
bound
add
pop
outsb
daa
xchg
mov
js
je
sub
lods
mov
inc
mov
in
popa
push
sbb
mov
mov
pop
push
or
iret
pop
mov
jecxz
xlat
out
outsb
aad
jno
sub
rolb
scas
mov
sbb
add
xor
cmp
gs
iret
push
or
xchg
push
sub
or
nop
leave
ss
loopw
xchg
loope
imul
and
fidivrl
xchg
jb
repnz
push
sbb
fcompl
jl
lea
mov
sub
outsl
mov
push
or
lds
jno
dec
add
push
push
sbb
pop
adc
shrl
cmp
shll
ret
jnp
mov
cli
fsts
stos
lret
jmp
mov
jb
adcb
sbb
add
sub
rcll
adc
cmc
xchg
adc
xchg
ja
push
inc
jl
jge
add
mov
xchg
jmp
dec
pop
in
sbb
ret
js
or
bnd
xchg
and
nop
data16
or
mov
leave
in
pop
cmp
test
mov
dec
adc
pop
mov
mov
lds
fcoms
inc
mov
icebp
lret
jbe
fists
mov
sub
adc
movsb
pushf
dec
and
in
inc
cli
enter
mov
dec
adc
in
aam
adc
sbb
divb
dec
jge
pop
movsl
inc
jp
adcl
repnz
mov
sarl
out
outsb
sti
imul
icebp
data16
lods
gs
rol
inc
dec
popa
jl
mov
pop
xchg
push
mov
lcall
aam
leave
xor
ret
fcomps
in
adc
movsb
xor
dec
out
push
daa
mov
shl
in
adc
mov
and
lds
imul
push
popf
adc
fdiv
cmp
or
jns
sbb
das
adc
add
inc
test
popa
roll
mov
lcall
cwtl
sbbl
scas
imul
jo
dec
mov
lea
dec
pop
dec
mov
sbb
cmpsl
cmpsl
sahf
jle
shr
test
sbb
cmp
push
imull
cmp
push
cltd
cmpsb
xor
ljmp
xor
cwtl
inc
mov
inc
rol
popa
mov
popf
dec
jae
dec
pop
ss
in
aad
repz
mov
pop
add
popf
xchg
add
mov
jns
pop
imul
jecxz
mov
loopne
in
jp
xchg
sub
pop
mov
push
roll
gs
shrl
fcmovne
xor
pop
adc
into
mov
add
cmp
push
testb
mov
fbld
les
ds
lods
addr16
jo
push
mov
stos
into
cld
data16
rorb
xchg
ljmp
push
stos
push
jb
das
and
sbb
pop
dec
xor
mov
fcomps
fbstp
scas
in
cmpsb
sbb
les
pop
aad
popf
mov
pop
test
xchg
mov
or
pop
fsubrl
mov
pop
test
cwtl
adc
lods
popa
in
cwtl
adcl
add
and
inc
lock
push
push
sub
test
repnz
jp
movsl
mov
pusha
add
xor
pop
cmpsb
bound
pop
popa
pop
imul
adc
dec
jbe
loop
lretw
test
sbb
pop
into
sbb
pop
ficoml
test
mov
push
aam
push
sub
lods
outsl
mov
dec
stos
mov
iret
ljmp
sbb
mov
nop
imul
insl
and
dec
add
push
pop
mov
mov
adc
out
push
notb
or
into
xor
pop
xor
lods
adc
or
out
mov
aam
cmpsb
sub
jmp
sub
test
xchg
mov
aad
movsl
imul
xchg
jecxz
mov
push
sbb
scas
in
clc
pop
idivb
fs
sbb
and
pop
in
add
ret
inc
ret
inc
fisttps
mov
dec
outsb
out
cmp
jbe
mov
push
outsb
mov
dec
imul
pushf
fbstp
ret
mov
imul
or
pushf
insb
add
mov
mov
lret
stc
repnz
cmp
loop
les
dec
push
repnz
in
ret
cli
xor
sbb
mov
mov
jns
sub
mov
stos
xor
jb
inc
addb
xor
aaa
inc
std
push
cmp
mov
int3
xor
mov
in
mov
xor
rcrl
sahf
cmp
popf
xor
push
ret
sbb
lock
repz
pusha
adc
sub
mov
mov
pop
dec
xchg
or
mov
ja
enter
scas
or
mov
sbb
not
mull
mov
into
enter
aad
fbld
mov
or
hlt
data16
loop
ja
mov
ret
pop
test
int3
stos
xchg
lret
je
adc
jecxz
arpl
jnp
dec
mov
mov
fists
cmpsl
pop
or
dec
dec
sub
js
xchg
cmp
out
andb
and
mulb
mov
data16
jge
dec
nop
daa
in
xchg
sbb
js
pop
stos
mov
jl
mov
inc
bound
test
ja
push
jns
mov
mov
add
jae
add
xchg
jb
test
pop
jp
imul
out
push
lods
push
inc
sbb
retw
cltd
clc
inc
push
push
inc
fldenv
cwtl
mov
je
pop
and
std
addl
dec
ret
jnp
insb
jecxz
xchg
fidivrs
mov
mov
cmp
and
iret
xor
subl
aaa
addr16
icebp
lahf
pop
mov
cmp
inc
fwait
popa
clc
ja
rorl
addb
sbb
dec
ljmp
or
popf
stc
jo
sbb
mov
sti
push
or
jle
arpl
lahf
testb
push
popa
or
js
leave
loop
in
add
subl
and
pop
mov
out
and
sarb
cmp
push
jno
pop
movsb
adc
fcomps
or
imul
adc
xchg
jmp
or
add
adc
cld
cmp
xor
pop
jg
sti
mov
xchg
mov
add
bound
and
jb
shll
sbb
push
daa
push
adc
lcall
das
call
and
pop
daa
ret
pop
lret
movsb
mov
adc
jae
sub
in
cmp
popf
test
mov
push
es
test
fbld
std
and
cmp
jge
sbb
jb
repnz
push
outsb
add
sbb
ret
mov
fnsave
or
inc
fs
xchg
mov
dec
sbb
push
leave
mov
xor
xor
xchg
sarb
push
mov
jl
adcl
adc
pop
jo
sbb
cs
cld
mov
dec
pop
nop
rep
inc
cmp
pop
scas
jae
sub
add
daa
lds
or
inc
push
sub
lods
mov
xchg
lea
pushf
adc
xchg
cmp
rclb
and
dec
lods
fidivs
imul
and
or
cli
inc
movsb
bnd
or
cli
shrl
cmpsl
lcall
enter
or
cmpsl
mull
testl
add
hlt
xor
int
xor
stc
and
fsubr
xchg
pop
xchg
repz
push
mov
jle
jns
sub
and
and
sub
inc
out
pop
jae
jnp
dec
mov
pushf
shrl
sbb
pop
mov
dec
fsubrp
jge
jl
out
mov
out
mov
arpl
dec
sbb
loop
clc
xlat
testl
mov
jb
mov
dec
mov
cmc
sbb
maxps
jecxz
push
fadd
pop
divb
lea
int3
xor
xchg
ds
lods
sti
cli
push
daa
mov
insl
mov
loope
cmp
adc
or
xchg
push
or
out
repz
in
ja
push
sub
and
mov
fldt
or
in
push
dec
mov
cmp
sbb
jl
mov
pop
cltd
mov
xchg
insl
stc
adc
rol
mov
mov
lods
sbb
jb
pop
add
cmpsl
into
dec
mov
fsubl
enter
sub
sbb
ror
outsb
hlt
sub
fmull
jae
cmp
adc
dec
lock
clc
jae
mov
mov
push
insb
xor
pop
xor
and
rcrb
inc
je
inc
sub
xor
scas
test
push
into
dec
call
pop
jo
xchg
cs
inc
leave
mov
mov
stos
pushf
mov
xchg
mov
or
bound
xchg
sahf
sarb
test
dec
xor
mov
test
loop
stc
xor
stos
lock
adc
push
or
gs
adc
xchg
mov
insb
cld
out
mov
pop
insl
sub
aaa
fistps
icebp
addl
mov
xchg
dec
enter
sub
sub
add
fildll
sub
shll
movsb
xor
push
daa
push
inc
or
jp
in
test
shrl
xor
mov
sbb
sahf
dec
cmp
mov
fs
rcr
sub
push
mov
outsl
jl
jge
jecxz
adc
xchg
scas
pop
in
mov
incb
pop
mov
nop
xor
sti
outsb
jl
jle
aam
or
mov
leave
jp
cmp
pop
fwait
xor
jmp
xlat
jmp
insl
loopne
xor
sub
cmpb
cmp
add
jns
or
push
jbe
sub
mov
testb
sbb
cmp
xor
mov
movb
lods
adc
sbb
aaa
fsts
pushf
jae
jo
mov
in
fptan
arpl
inc
ja
fistpll
lds
loop
push
push
xchg
adc
dec
inc
and
mov
lds
aas
and
cmp
add
sti
pop
dec
outsl
add
jo
xor
in
push
arpl
sarb
jmp
xchg
add
xor
daa
movsb
push
jne
popf
cmp
and
aaa
out
rcrl
mov
pop
cld
mov
mov
push
push
mov
je
pushf
dec
clc
inc
lahf
push
xor
cmp
xor
cli
stos
pop
adc
pop
inc
jge
add
ss
nop
cwtl
subl
aaa
in
movsb
sbb
pop
and
lret
aaa
sub
xor
jecxz
mov
lds
or
in
adc
andl
int
jge
dec
jmp
into
dec
mov
xor
xlat
das
mov
cmpb
je
ja
mov
adc
cld
jnp
call
jns
pop
and
cwtl
incb
adc
xchg
push
out
testb
add
imul
inc
lahf
inc
inc
test
cltd
xor
inc
icebp
movl
add
lret
je
and
sbb
pop
adc
push
pop
mov
or
rcrb
jbe
dec
cmp
cltd
cli
pushf
xchg
xchg
mov
inc
jo
out
xchg
xchg
mov
dec
sbb
sub
push
in
sbb
mov
dec
push
cmp
push
in
lods
sbb
jae
inc
jae
adc
test
mov
pusha
cld
lds
leave
xor
mov
push
fdivl
lods
dec
jg
fdivrl
lods
mov
add
sub
push
xchg
ja
movsb
and
xchg
mov
dec
mov
rorl
lds
jecxz
rorl
lcall
lods
in
test
sbb
outsl
in
add
ret
mov
repz
cmp
lds
out
aam
cmpsl
inc
cmp
dec
repz
mov
xor
xor
loopne
adc
leave
nop
mov
je
pop
movsb
jp
xchg
mov
cmp
movsb
jge
ja
jl
dec
mov
inc
es
outsb
jl
push
inc
out
mov
aas
nop
xor
add
stos
jae
or
adc
cwtl
pop
xor
aaa
stos
pop
mov
add
mov
xor
push
stos
jle
pop
sub
popf
pop
andb
mov
inc
decb
mov
int3
mov
sbb
mov
in
fadds
sti
cmp
inc
lcall
inc
stos
cmp
xor
ret
insb
test
mov
push
and
sahf
in
push
lods
push
jno
mov
mov
jnp
mov
ret
pop
mov
ret
lcall
and
mov
inc
push
jecxz
cwtl
shlb
cmp
mov
loopne
xor
pusha
js
in
add
or
mov
fsubl
mov
jmp
sahf
xor
mov
dec
xchg
jno
je
shr
pop
cmp
sahf
pop
lds
movswl
jo
cmp
add
in
lea
lock
fnstenv
std
out
inc
lea
fistpll
stos
sbb
mov
mov
cmp
pop
xor
dec
mov
inc
stc
lea
lock
fsubs
cmpsb
stc
into
xlat
mov
push
in
in
loop
and
jmp
imul
cmpsb
jno
pop
sbb
js
shrl
adc
and
inc
cmpsl
jns,pt
add
pushl
sbb
test
stos
filds
xchg
gs
fisubrl
pop
sar
popa
test
cwtl
dec
push
out
cltd
test
inc
or
pop
cmp
xchg
testl
or
test
dec
or
jge
in
movsb
pop
pop
xchg
push
jne
mov
add
push
shll
jno
lock
cmpsb
aad
add
jb
jmp
negb
mov
out
mov
pop
jne
test
js
sbb
dec
pushf
sbb
cmpb
jae
push
loop
mov
nop
push
xor
push
or
mov
test
mov
jle
arpl
jp
lock
mov
mov
fists
mov
inc
xlat
fldpi
mov
jnp
push
mov
push
jge
mov
fdivl
outsl
mov
int3
mov
stos
cltd
lret
iret
xchg
out
inc
dec
lock
in
sub
into
bound
and
inc
test
lods
mov
dec
loop
fwait
push
test
push
xor
lea
shll
inc
mov
dec
adc
mov
jno
scas
jb
dec
je
mov
mov
mov
cli
subb
lock
ljmp
and
jmp
add
ret
ds
fwait
outsb
into
mov
std
jne
or
repnz
mov
xorl
xchg
aaa
cmp
cmp
ss
or
adc
inc
add
and
dec
jnp
ret
js
sbb
jge
shrl
test
pop
inc
xor
sbb
nop
aaa
stos
add
jbe
cmc
insb
and
or
fldl
dec
or
push
ret
jp
sub
or
fsubr
popa
mov
or
movsb
out
and
mov
jb
sbb
xchg
mov
movsl
cmc
push
xchg
push
sbb
xchg
push
movsl
dec
fstps
push
lods
scas
cli
pushf
adc
push
fimull
idivb
pushf
andl
std
test
and
push
fidivs
movsb
imul
sbb
aas
inc
loope
dec
adc
popa
in
dec
dec
add
rorb
push
andl
cmp
ja
add
xchg
outsb
test
push
mov
outsl
sarl
push
shlb
cmp
lea
out
std
mov
add
sbb
inc
lcall
pop
and
xchg
push
cld
push
mov
int3
and
xor
ret
mov
ret
push
aaa
cmpsl
push
popa
pop
sbb
lock
cmpsb
push
out
pop
fwait
cmpsb
push
jne
bts
push
fstpt
xor
jmp
jg
push
fstpt
jg
xchg
mov
sub
mov
das
mov
cmpsb
mov
mov
mov
popf
popa
lret
call
and
enter
test
pop
in
ljmp
push
adc
loopne
xchg
pop
cmpsl
in
dec
mov
hlt
pop
loop
xor
into
loop
sub
loop
jae
or
das
xchg
jnp
xchg
and
sbb
xor
add
clc
or
add
jle
sbb
sub
out
lods
clc
xor
lods
and
test
fstpt
jg
lret
out
sub
lods
outsb
test
data16
dec
push
sub
mov
sbb
ss
mov
sbb
sar
and
mov
rorb
xlat
jmp
push
or
push
cmpsb
sbb
mov
or
enter
xchg
test
mov
sub
fsubrs
xor
fiaddl
loopne
ss
or
inc
movsb
lock
fdivp
pop
jns
jle
or
add
shlb
repnz
sahf
sub
mov
jns
adc
push
popf
pop
icebp
iret
dec
testl
test
fisubs
incl
pop
push
loop
int
dec
jmp
cmpsl
imul
stc
and
sti
mov
pop
pop
inc
xor
sub
out
mov
fsubrl
into
fimull
or
xchg
add
mov
dec
fidivrs
or
add
pop
jb
inc
xor
inc
gs
adc
sarl
inc
sbb
repnz
jl
loope
lock
or
cmp
movsb
lcall
cmpsb
sub
mov
inc
imull
ret
sbb
xchg
jns
cld
xchg
lods
xor
dec
scas
xchg
cs
aas
jno
push
stos
mov
pop
inc
loopne
xchg
pusha
lock
add
roll
repnz
out
cmp
pop
add
cmp
daa
stos
into
and
mov
and
fisubs
mov
add
cmp
and
xchg
mov
fimuls
int3
adc
rcrb
jo
ss
pop
cwtl
push
xchg
mov
rol
cmp
mov
fists
and
dec
push
pop
xor
lfs
push
mov
sub
or
repz
xchg
hlt
int3
pop
in
push
iret
gs
xor
cmp
in
mov
or
adc
aam
dec
or
and
out
call
pop
insb
add
xchg
mov
adc
adc
cmp
lods
in
pop
xor
mov
or
jno
insb
aaa
fstps
mov
addr16
xor
jne
xor
adc
fsubp
int
cltd
mov
push
divb
xchg
arpl
lret
cmp
and
add
es
sti
dec
cmc
fiaddl
or
orl
xor
in
cwtl
daa
ss
fdivrp
cwtl
and
mov
int
daa
push
mov
jp
xor
arpl
cmpsl
jp
sub
stos
insb
in
stos
scas
dec
mov
mov
pop
stos
in
daa
inc
testb
leave
mov
popf
hlt
pop
mov
sbb
lods
mov
insl
inc
adc
inc
lret
mov
test
push
ljmp
loopne
outsb
lea
pop
cmp
cmp
xor
out
dec
jge
pop
loop
inc
pushf
pop
add
imul
inc
movsl
je
sbb
xchg
scas
pop
pusha
push
jae
gs
gs
ret
mov
ss
loopne
inc
testb
lret
rdpmc
stos
jbe
cmp
test
sbb
mov
xlat
popf
xor
mov
lret
adc
jl
test
and
and
lcall
pop
add
pop
dec
mov
sar
sbb
cmpsl
repz
test
push
in
ret
hlt
test
push
cmpsl
out
in
leave
movsl
lds
xchg
test
mov
lret
bound
test
clc
or
cltd
sbbb
and
cmp
adc
loop
std
sbb
push
sub
out
mov
pop
jmp
in
lcall
xchg
jne
adc
mov
pop
test
mov
adc
sub
cmp
xchg
xchg
stos
push
movsb
sub
mov
fdivl
mov
or
cmp
inc
ret
insl
mov
dec
cmc
push
adc
xchg
sub
adc
out
insl
or
mov
int
xor
daa
xchg
gs
fwait
shl
jns
out
in
fldl
rolb
mov
out
mov
in
les
mov
and
sbb
movb
inc
cld
xor
cmc
sbbb
pop
add
mov
cmp
dec
sbb
xor
fistpll
mov
mov
sbb
scas
or
jnp
add
nop
push
inc
pop
mov
loopne
lods
mov
jge
jl
mov
push
jo
jo
jo
and
rcr
mov
xchg
inc
push
inc
test
scas
adc
lds
rcrb
dec
pop
loopne
outsl
push
cmpsb
mov
mov
sub
dec
xchg
fadds
int
out
test
or
xor
mov
mov
imul
add
jno
push
sbb
loope
in
mov
dec
xchg
jb
lret
push
pushf
pop
fcomps
dec
mov
push
out
mov
cs
xchg
cltd
cmp
imul
sbb
testb
cmpsb
adc
mov
inc
int
das
add
into
sub
sbb
mov
sub
sti
dec
add
leave
xchg
inc
out
pop
ficoms
ja
dec
call
cmp
lods
jle
lahf
push
xchg
mov
lea
dec
aam
adc
jge
adc
das
or
mov
fidivl
leave
adc
lds
loop
add
xchg
das
push
inc
test
jbe
pop
scas
and
xor
ret
in
mov
das
cmp
in
pusha
mov
inc
fimuls
ror
inc
mov
in
push
mov
out
xor
cmp
pop
xchg
jae
sarl
pop
inc
inc
orb
push
icebp
xchg
sub
pop
xchg
mov
cmp
iret
insl
and
mov
popf
xor
repz
xor
cmp
in
or
jb
stos
dec
cmpsb
push
adc
xor
xchg
or
dec
mov
inc
cli
decl
pop
pop
mov
adc
fistl
mov
bound
dec
aas
push
mov
sub
test
dec
arpl
lds
out
add
mov
in
cmp
xor
clc
and
xchg
dec
inc
data16
add
test
mov
dec
xchg
fdivr
dec
aam
adc
push
mulb
sub
les
xchg
hlt
mov
cmp
mov
clc
jae
aas
loop
pop
aas
ret
jno
shr
rorb
in
jns
or
repnz
xchg
adc
adc
insb
push
dec
imul
dec
aam
and
ljmp
mov
jo
xchg
shlb
mov
in
ja
pop
scas
fnstsw
push
sbb
cli
sbb
xorb
movb
mov
addr16
xchg
ffree
xor
push
mov
shl
ds
cmpsb
or
and
inc
adc
pop
and
inc
inc
outsb
lret
jbe
cld
pop
movsb
repnz
imul
inc
xchg
inc
push
mov
arpl
mov
or
in
xchg
mov
enter
aas
or
mov
jecxz
dec
out
jo
push
loope
cmc
mov
insl
sbb
leave
stos
jno
cltd
push
cmpps
jns
pop
mov
mov
ja
dec
rcrb
xchg
imul
sub
pop
jmp
inc
stc
mulb
mov
push
xchg
and
and
adc
repz
push
test
rorb
sti
push
xchg
ficomps
in
out
add
mov
adc
inc
cmp
mov
push
mov
in
cmp
loope
push
dec
call
mov
les
or
sbb
clc
inc
pop
mov
dec
pop
and
sbb
inc
sub
stos
in
hlt
sbb
and
xchg
fdivs
jae
scas
push
and
adc
mov
popl
xor
in
imul
fdivr
aas
jmp
repnz
add
pushf
fdivs
xor
mov
pop
hlt
ja
pop
adc
out
jp
inc
cmp
dec
mov
loopne
xchg
ds
in
inc
mov
loope
or
cmp
nop
fidivl
mov
push
mov
dec
pop
enter
dec
shld
or
pop
xchg
out
or
call
imul
movsb
ja
lea
out
in
cmp
cmp
rcrl
sub
mov
push
pop
xchg
inc
push
cli
pop
das
shlb
pop
daa
push
jecxz
mov
cmp
sbb
mov
stos
mov
loop
jo
push
clc
loop
inc
adc
pop
gs
cmp
in
or
outsl
add
loope
mov
pop
xlat
cs
lds
or
inc
xor
dec
adc
test
sub
lods
mov
stc
mov
nop
mov
add
mov
cmpsl
insb
js
cmp
les
or
test
cmp
push
int
mov
daa
push
mov
xchg
add
mov
call
and
mov
xchg
test
in
fwait
ss
aaa
add
stc
arpl
jmp
mov
pop
add
fistpl
xchg
cmp
outsb
daa
pop
fildll
pushf
cmpsl
aas
mov
shlb
inc
push
insb
mov
data16
ror
jne
sbb
fimull
test
ja
std
rol
dec
loopne
inc
pushf
or
and
sbb
repnz
inc
stc
cs
push
je
push
lods
sbb
fnstcw
pop
pushf
cmc
or
mov
add
add
scas
out
lea
mov
mov
jnp
or
popa
xor
and
stos
push
shrl
mov
outsb
jle
cwtl
push
sub
mov
jge
loope
mov
push
js
insb
fsubr
pushf
lret
loop
mov
out
lret
mov
add
and
sub
push
loope
daa
cltd
test
mov
fidivl
jle
test
stc
test
xchg
cli
aas
test
outsl
xor
or
xchg
sbb
scas
iret
js
pop
cmpl
fcompl
pop
or
push
xchg
nopl
xchg
push
dec
xorl
popf
mov
xor
inc
repnz
test
mov
pop
xor
es
mov
scas
leave
mov
jno
in
fcmovnbe
and
add
mov
in
fdivl
movd
push
lods
lock
dec
push
push
scas
inc
xorl
nop
dec
mov
adc
outsl
push
jno
sub
rorb
mov
adc
xor
icebp
push
xor
push
xchg
sub
xor
iret
and
inc
lea
xchg
mov
fstl
add
fsub
push
inc
xlat
clc
push
aaa
out
pop
fldpi
xchg
sub
and
xchg
sub
mov
adc
xchg
jge
loope
add
adc
dec
pop
sbb
mov
jns
xchg
mov
fisubrl
pop
inc
aas
dec
cmp
jg
loopne
cmp
shl
sbb
inc
inc
cwtl
push
or
lcall
pop
jmp
sub
lahf
arpl
sbb
shll
movsl
les
imul
test
sub
mov
add
xor
andb
mov
ljmp
and
adc
sub
jp
test
add
roll
cmp
push
xlat
inc
pop
andl
or
cmpsl
cmp
ss
and
pop
sub
dec
popa
sub
rcrb
push
sub
enter
cmp
inc
ret
sub
xchg
mov
cmp
ss
xchg
data16
faddl
shll
ljmp
orb
fisubrl
xchg
sti
js
sbb
mov
test
sar
and
mov
add
nop
daa
pop
int3
pop
adc
stc
or
insb
lea
cmpsb
xchg
call
inc
hlt
jae
jecxz
insb
ss
imul
jg
arpl
std
ss
in
jmp
cmc
mov
mov
xchg
jecxz
xor
pop
ficomps
insl
ret
repz
xchg
call
cld
pop
cmp
out
push
jo
xlat
fiaddl
sub
lret
fs
leave
in
inc
popa
in
jmp
les
push
lds
mov
loop
dec
xor
mov
or
and
add
push
ficoml
jbe
stc
dec
addr16
dec
mov
dec
pop
in
jle
xchg
mov
pop
dec
xchg
repnz
daa
lcall
roll
mov
lods
aad
sub
sub
jg
hlt
mov
enter
mov
push
test
xchg
call
iret
fdivs
aaa
je
or
wbinvd
fdivl
int3
jg
jp
fldenv
sbb
xor
pop
fidivl
pop
lea
outsl
in
sub
into
sahf
test
ljmp
aam
jmp
and
push
shlb
jno
shlb
outsl
xchg
mov
push
das
mov
test
xchg
mov
hlt
mov
lods
jns
mov
lds
mov
loop
mov
testl
and
push
push
inc
pop
push
insl
push
jae
inc
or
mov
mov
add
and
inc
xchg
add
repz
sahf
inc
inc
ds
xor
or
sub
popa
ljmp
mov
movsb
xlat
out
add
les
adc
sti
inc
jne
and
mov
loop
repz
pop
fimull
pusha
inc
add
fldenv
mulb
xchg
lret
push
rorl
jae
ret
std
pushf
push
clc
nop
flds
into
cmp
sahf
cmc
mov
sbb
arpl
stc
or
mov
or
lods
adc
jmp
push
sbbl
sub
cmp
sbb
int
mov
push
jmp
jnp
std
push
loope
add
jb
pop
mov
mov
call
das
push
test
push
mov
xchg
and
out
dec
dec
adc
sbb
xchg
cmpsl
dec
lods
insl
mov
adc
and
lret
fistps
sbbl
int
outsl
rcrl
in
fistps
push
jne
and
and
mov
test
cmp
pop
pop
inc
and
jp
sub
xchg
enter
xor
push
and
inc
andl
push
aam
adc
xor
out
ja
xchg
jg
pop
jno
ds
pop
push
push
xchg
leave
mov
sbb
shrb
push
sbb
dec
les
xchg
push
fucom
xchg
sub
movsl
les
lahf
mov
xchg
pop
mov
insb
mov
inc
out
cli
es
fildll
icebp
cmpsl
iret
shld
jmp
mov
lock
insl
subl
cld
mov
fldl
sbb
xchg
dec
jne
lds
fs
call
loopne
add
test
sbbb
mov
push
rcrl
mov
loop
icebp
mov
mov
and
jecxz
cld
inc
cmp
pop
out
call
dec
pop
adc
into
xchg
xchg
mov
fidivrl
cli
cmc
push
mov
xchg
mov
negb
push
adc
outsl
adc
push
push
or
fiadds
sti
pop
sahf
sub
mov
xor
movsl
inc
pop
aam
inc
mov
or
rol
xorl
lods
mov
mov
ficoml
mov
test
daa
jle
movsl
in
xchg
mov
jle
and
fdivs
inc
dec
addl
dec
pop
mov
fidivrs
or
push
ljmp
sbb
push
test
js
xchg
xor
jp
loopne
and
dec
mov
dec
test
push
xchg
sbb
daa
inc
mov
mov
cmp
adc
sub
stos
repz
xchg
push
inc
outsb
inc
xchg
dec
mov
mov
xlat
jnp
and
add
mov
popf
jno
ljmp
adc
mov
mov
bswap
jecxz
mov
shrb
mov
pop
mov
mov
dec
dec
jecxz
jb
push
jmp
fisubrs
mov
cmp
addr16
pushf
or
mov
sbb
or
lss
mov
cmp
cmp
mov
cmp
mov
shll
adc
push
cwtl
xchg
push
mov
aam
mov
into
xorl
push
sub
cmp
fcomps
mov
or
fidivs
pop
pop
jmp
gs
xchg
rolb
in
mov
xchg
xor
pop
gs
sti
imul
xchg
fmul
xchg
sti
stc
sbb
and
add
cmp
pop
loope
mov
sub
cld
cli
pop
jecxz
or
shll
dec
push
test
xor
inc
aam
movsl
loope
es
cmpsl
sbb
das
or
rcrl
jle
xor
dec
xchg
sarl
inc
inc
jle
out
loopne
sbb
mov
fdivl
mov
or
fnsave
je
xor
test
add
xchg
mov
sub
and
inc
stc
shl
repz
stos
or
mov
in
push
andl
push
jnp
fidivl
loopne
push
cmp
repz
pop
fistl
nop
popa
xor
add
enter
outsl
fistl
lods
mov
jno
out
test
inc
cld
stos
jnp
fidivrs
pop
xchg
fidivl
repz
sub
jns
mov
push
lea
enter
test
mov
jg
idivb
dec
fildll
lcall
fists
das
cmp
faddl
push
pop
and
mov
add
adc
push
rcl
sub
repz
inc
sbb
iret
jbe
jbe
lahf
cvtps2pd
inc
aam
mov
test
add
inc
inc
push
ljmp
push
xor
or
dec
or
insb
inc
repnz
dec
push
int3
cs
xchg
loopne
adc
fbstp
sbb
jb
and
test
pop
test
pop
pop
jmp
mov
and
lcall
jb
enter
aaa
xchg
jmp
and
xchg
stc
nop
add
loop
icebp
cwtl
sub
fcmovnbe
mov
xchg
mov
push
imul
xor
mov
sub
jno
adc
inc
xorb
pop
iret
jg
push
or
mov
inc
xlat
bound
dec
pop
jge
and
sti
mov
sub
add
xchg
pop
sbb
push
xchg
cmp
pusha
pop
or
hlt
arpl
xchg
int3
js
xchg
lock
push
jb
sbb
aas
xor
inc
pop
out
in
mov
sbb
fs
cmp
jbe
cmpsb
loopne
sub
repz
rcll
outsl
daa
bound
adc
popa
jnp
cmpsb
scas
mov
xor
fildll
cld
mov
into
pop
ss
pop
les
popf
mov
orb
aam
out
gs
scas
mov
test
sub
imul
pop
xor
lret
aas
popa
sub
dec
repz
lods
xchg
push
mov
cmpsl
lcall
out
es
das
or
dec
dec
in
and
jne
es
xchg
ror
shrl
je
mov
sahf
jb
sti
xorl
cltd
lock
fmull
add
stos
mov
test
out
inc
xchg
and
cmp
in
mov
sub
fbld
insl
xor
aaa
movsb
inc
je
pop
data16
mov
cmp
pop
add
jne
popa
sarl
sbb
and
mov
fsubs
inc
and
xchg
jle
shl
test
cmp
cld
loop
fidivrs
ror
into
mov
inc
call
sbb
sti
sub
jmp
push
dec
mov
cmp
and
int3
pop
push
ljmp
jno
cmp
inc
fiaddl
daa
and
inc
pop
dec
push
ljmp
jno
loope
in
jp
in
cmp
addr16
xor
ss
imul
lahf
mov
xchg
xlat
je
fcomip
nop
int3
daa
fucomip
fisubl
nop
inc
mov
stos
outsl
ja
int
add
push
inc
xchg
jbe
shrb
mov
inc
push
xchg
mov
mov
dec
jns
mov
ja
adc
jo
and
popf
push
sub
add
movsl
data16
leave
aam
stos
out
bound
stc
ja
and
fisubl
sarb
mov
rcll
push
cltd
es
pop
ret
xchg
xor
ret
mov
sub
stos
enter
lds
push
fdivrs
arpl
xor
jnp
sub
lea
sbb
fnsave
push
lahf
adc
test
stos
popa
pop
out
mov
mov
cltd
xchg
das
lret
mov
sarb
sbb
mov
jae
aam
mov
pop
insl
adc
mov
jp
mov
sbb
mov
arpl
lds
sub
pop
mov
cld
lahf
mov
dec
insl
test
pop
mov
xchg
mov
sti
add
sbbl
outsl
ficomps
sub
lock
sub
adc
or
mov
mov
dec
push
jp
ljmp
lcall
xor
faddp
cmpsb
data16
mov
xchg
imul
lock
jmp
jmp
aaa
xchg
add
incb
fisttps
mov
adc
subl
sub
and
test
inc
addr16
dec
pop
call
outsb
pop
xchg
popl
inc
icebp
and
xor
xchg
sub
repz
jl
or
add
jecxz
jbe
jns
sbb
icebp
cmpsl
or
bound
jmp
mov
arpl
dec
or
into
and
push
out
mov
mov
pop
xlat
jne
and
out
adc
ds
lock
mov
arpl
pop
xor
pop
add
and
mov
lods
mov
rol
aad
arpl
js
outsb
sub
hlt
test
mov
fsts
int
and
pop
jmp
enter
rclb
or
pop
pusha
push
xor
ret
sti
jno
pushf
mov
adc
jbe
insl
hlt
xchg
ja
test
add
mov
pop
or
add
sti
aad
gs
xchg
sub
or
mov
push
pop
pop
mov
in
inc
in
dec
aam
sub
scas
xchg
jne
cs
push
leave
push
jbe
xchg
mov
subb
lods
push
jb
scas
jae
orl
mov
mov
jl
cmp
xchg
dec
aam
loopne
mov
stos
cmp
gs
xor
xchg
jecxz
cmp
push
lock
inc
hlt
pop
inc
insl
jmp
jae
cmp
add
jg
es
leave
movsb
out
int3
sub
lds
incb
inc
loopne
cmp
mov
in
out
add
je
cmp
mov
inc
repnz
popa
cmc
adc
popf
xor
xor
cmp
cmp
and
add
sub
mov
addl
push
push
push
or
leave
dec
mov
inc
fstpl
dec
cltd
mov
cmp
lock
movsb
pop
rclb
jbe
pop
out
fidivs
mov
sub
testb
xchg
mov
ds
movl
fists
fnstcw
adc
mov
cmp
frstor
lds
xchg
cwtl
ljmp
push
pop
or
gs
sub
int3
xor
jnp
jne
jecxz
dec
inc
sub
add
pushf
push
dec
test
cmp
hlt
cltd
outsl
add
inc
mov
pop
insb
push
mov
cmpsl
cmp
ljmp
cmp
or
clc
lcall
imul
pushf
movsb
sbb
aas
push
cmp
dec
sbb
add
les
pop
jmp
push
fadds
fisubrs
or
ds
cld
imul
rol
and
jmp
pop
std
ret
xor
xor
dec
in
dec
jge
lods
push
sub
sahf
pop
jmp
add
and
in
lods
pop
cmpsl
mov
sub
add
xchg
xor
les
jb
adc
sahf
adc
cmp
xor
pushf
dec
sbb
jnp,pn
add
repnz
test
lret
or
pop
pop
adc
sub
inc
xchg
jno
mov
ds
push
sahf
xlat
roll
dec
movsl
popf
mov
xchg
sbb
or
mov
divb
cltd
xchg
and
jg
adc
inc
lahf
and
fs
outsl
mov
notl
aaa
or
sub
je
test
xchg
rcll
cwtl
mov
fnclex
push
or
adc
leave
lahf
aas
mov
cltd
ljmp
loope
or
mov
leave
mov
or
out
dec
dec
xlat
jp
push
pop
inc
in
add
cmp
pop
cmp
cmp
divb
into
mov
sbb
cltd
jle
inc
or
push
inc
mov
inc
and
xchg
sbb
popa
arpl
iret
cli
jnp
aaa
mov
loopne
mov
cmp
push
add
adc
push
movsb
mov
shll
rorl
out
mov
in
jne
out
and
sub
and
ret
dec
dec
outsb
dec
sti
pop
imul
pop
adc
out
xchg
pop
les
adc
ret
dec
pop
incl
das
jl
pop
lds
mov
pop
mov
xlat
cmp
lahf
loopne
dec
movl
imul
hlt
add
nop
lret
shl
mov
inc
insl
xchg
push
je
lcall
sbb
arpl
les
cwtl
jg
sbb
adc
mov
cmp
mov
dec
icebp
xchg
pusha
ret
pop
mov
insb
repnz
xchg
aaa
pop
into
xchg
sub
test
mov
pop
push
push
movsl
inc
mov
lods
xchg
scas
sbb
sbb
fs
xchg
mov
add
mov
xchg
in
arpl
sbb
fdivs
andl
enter
adc
cmp
jae
add
xchg
mov
mov
jge
repnz
jp
fsubrl
mov
idivb
les
jno
dec
cmp
enter
cld
aas
push
xor
sub
pop
pop
and
int3
mov
cmpsl
mov
roll
fs
arpl
int
push
mov
mov
loopne
cwtl
jmp
mov
rclb
push
cmc
jne
pop
push
push
sbb
lret
rcll
sub
inc
mov
dec
in
iret
dec
jne
shlb
jp
in
jge
mov
jb
sahf
and
iret
add
sub
aas
ret
mov
loopne
mov
out
clc
pop
sbb
mov
mov
fidivs
or
and
xchg
roll
pushf
dec
in
inc
arpl
mov
jae
icebp
lods
ljmp
aas
push
in
outsl
fisttps
cli
push
lret
jnp
hlt
loopne
stc
sahf
adc
add
clc
and
pop
push
jmp
sbb
mov
mov
ja
jae
adc
dec
cli
push
aad
xchg
dec
pop
sub
pop
adc
das
stos
aas
xchg
mov
lret
adc
in
jp
fsubrl
adcl
push
add
inc
xchg
jge
push
sbbl
popf
pusha
lcall
loope
lods
cmpb
orl
push
mov
fistl
add
add
mov
imul
loope
stos
pop
popf
xor
sub
dec
scas
lcall
in
js
dec
leave
test
loope
outsb
rol
lahf
fisubs
lret
lds
mov
fistps
sub
mov
fs
inc
xchg
push
aad
inc
pop
pop
popf
test
and
pop
cmp
int
fcmovne
arpl
jo
outsb
test
sbb
rclb
in
je
cmp
jmp
pop
xchg
cmpsb
repz
mov
or
cli
and
mov
pop
inc
inc
lcall
and
sub
fwait
sub
adcl
cmp
loopne
xor
es
adc
xchg
gs
montmul
cmpsb
movb
or
hlt
mov
lods
xor
lock
test
cld
xor
popf
jae
bsf
xor
mov
xor
push
mov
arpl
push
and
sbbb
sbb
cmp
outsb
push
mov
push
stc
test
and
imul
sti
cmpsl
xor
icebp
adc
out
or
ljmp
inc
mov
fmulp
pusha
adc
jnp
clc
mov
push
ss
in
pop
negb
mov
cmpsl
and
jecxz
inc
bound
inc
mov
mov
mov
outsl
adcb
mov
lods
shrb
imul
addr16
cli
xor
daa
out
rcrl
inc
adc
inc
cmpsb
xor
and
xchg
lret
jae
mov
jns
leave
shrb
mov
cmp
xlat
xchg
mov
dec
inc
fidivrs
cmpsb
xchg
mov
test
and
dec
push
lock
push
and
push
inc
cld
pop
jle
xor
mov
lock
sti
or
daa
aas
testl
sub
and
push
insb
xchg
cmpsb
mov
or
cld
xchg
enter
sub
data16
add
xchg
push
sbb
sub
sti
or
das
repz
sti
int3
fidivrs
sahf
daa
xchg
push
mov
cmp
fdivrl
fcompl
inc
arpl
cmp
mov
roll
mov
popf
out
inc
push
out
adc
push
hlt
lods
mov
add
movsb
test
and
sbb
fimuls
call
nop
mov
or
icebp
dec
or
shll
xor
push
sub
gs
inc
rol
mov
scas
inc
jns
push
or
test
pop
imul
jmp
or
into
xor
ds
test
enter
push
fs
sti
push
stc
andb
pop
lods
cmp
adc
cmpsl
add
aad
xlat
mov
inc
sub
in
insb
rcrl
ja
into
test
enter
fildl
aam
xor
jmp
sub
rcrb
ret
hlt
dec
movsl
inc
inc
mov
add
jmp
lret
jb
jae
lods
cmpb
sub
xchg
pop
mov
cmpsl
pushf
lahf
push
lret
mov
movsb
daa
adc
loope
xor
repz
xchg
mov
dec
sbb
or
cmp
loop
jmp
jl
and
mov
xlat
testb
adc
xor
cs
hlt
sbb
sub
fidivs
ds
jp
xchg
mov
jg
dec
sti
movsb
loop
sbb
pop
cltd
sbb
add
daa
dec
add
fstpt
mov
xchg
inc
sbb
lret
loopne
outsl
or
jl
movsl
jne
subb
pop
test
pop
shll
mov
or
sbb
pop
aaa
movsl
jbe
mov
fldt
popa
nop
push
insl
add
sahf
jle
sti
xchg
lahf
mov
adc
aaa
mov
and
jae
rolb
pop
and
add
in
mov
xlat
or
movsl
and
and
mov
popf
mov
fbld
dec
jo
das
mov
dec
sub
push
sbb
mov
int
fcom
xchg
jle
sbb
fstl
fwait
and
adc
jecxz
stos
inc
sbb
and
stos
pusha
repz
repnz
jp
popf
popf
pop
rorb
mov
push
mov
inc
movsl
leave
testl
adcl
xchg
sub
jle
std
andb
pop
sub
arpl
jne
inc
push
mov
mov
shrl
push
mov
orl
mov
movb
lahf
xor
cmp
cmp
scas
rolb
roll
inc
call
push
mov
out
outsb
mov
mov
cmp
fisubrl
rcrb
xor
xchg
cmpsb
ds
test
sbb
pop
mov
dec
loopne
mov
pusha
xchg
setb
ja
imul
pop
stc
js
cmpsl
lods
ret
sbb
mov
dec
enter
jecxz
cmp
sahf
imul
sbb
ret
lcall
push
sbbl
sub
push
xchg
mov
popf
and
cld
push
lret
sub
add
test
iret
and
cmpsb
andnps
test
or
xlat
int
lcall
jecxz
or
inc
data16
push
cmpl
lds
mov
arpl
adc
xchg
daa
movsl
xor
fwait
sub
jno
adc
aaa
stos
mov
es
jns
mov
mov
mov
ficoml
dec
sub
lods
adc
mov
fimuls
das
loopne
fnsave
fdivl
std
lcall
lds
cli
xor
jne
xlat
mov
dec
dec
loope
hlt
mov
movsb
adc
out
test
gs
scas
aas
shll
cmp
pop
sbb
push
push
leave
int
push
std
pop
idivb
aaa
lock
mov
lock
es
inc
outsb
popf
hlt
pop
sbb
pusha
xor
arpl
mov
push
testb
popf
pop
fs
jbe
inc
add
dec
pushf
jae
in
movsl
adc
push
push
mov
cmp
pop
adc
rclb
pop
lds
or
popa
dec
xchg
xchg
fimuls
mov
decl
xchg
lea
enter
inc
scas
ss
xlat
insb
insb
lret
inc
cmp
test
test
movsl
ret
in
sbb
lods
pop
outsb
xchg
jle
inc
sub
lret
jae
and
pop
popa
push
sub
das
cltd
mov
leave
mov
push
push
push
fdivs
mov
ficoms
xchg
dec
nop
push
push
negb
movsb
lcall
mov
cmp
adc
roll
mov
js
push
jns
insb
stos
je
movsb
out
ss
aad
cltd
xor
mov
in
cmpsl
insl
dec
int
jl
mov
lea
pushl
and
mov
inc
pushf
scas
sar
mov
into
add
aaa
sub
sub
push
rolb
jb,pn
push
jle
sbb
cmp
add
mov
and
daa
lret
sti
dec
ja
cs
sbb
push
inc
sarb
push
xlat
cmpsb
add
mov
add
cmp
add
lret
insl
mov
xlat
pop
adc
jae
cmpl
dec
xor
popf
push
shrl
push
pop
cmp
jecxz
adc
lds
loopne
pop
cmc
sbb
mov
repz
jne
jecxz
mov
mov
and
push
mov
mov
and
sub
mov
jnp
repz
push
adc
fsubs
push
test
add
inc
adc
xchg
lods
jno
jle
inc
sbb
fs
leave
jecxz
push
push
mov
enter
push
inc
fiaddl
inc
loope
shll
pusha
jp
loop
add
dec
mov
fcmovbe
jmp
in
push
negl
xchg
leave
lods
add
sarb
mov
sub
iret
das
add
dec
mov
jnp
mov
xor
push
add
mov
ret
jnp
hlt
addps
mov
fsubl
sbb
jmp
mov
enter
or
add
mov
mov
or
ffree
or
movsb
sbb
jp
add
xor
loop
push
dec
fadds
jmp
pop
jbe
xor
cld
scas
imul
lods
pop
jmp
andl
test
int
hlt
push
mov
mov
call
in
lea
jae
ja
in
decl
stos
mov
pusha
push
sbbb
mov
pop
xor
cmpsb
add
xor
addb
ret
fwait
mov
jge
xorl
xchg
imull
fistl
lcall
pushf
or
ss
mov
cltd
xor
pop
pushf
fisttpl
and
xor
mov
sti
cwtl
xchg
mov
cli
jle
sbb
mov
sbb
jmp
add
js
pop
sub
in
js
stos
loope
jne
lods
or
lcall
xchg
cld
mov
and
xchg
sbb
inc
inc
test
fldl2t
dec
pop
test
in
cmp
in
jge
rorb
bnd
repnz
adc
stc
into
ret
add
icebp
cmp
mov
mov
les
jno
cmp
add
xor
xchg
push
pop
fnstcw
scas
push
in
mov
roll
jle
imul
lahf
push
into
cld
aam
sbb
ss
outsb
push
shlb
sbb
xchg
mov
leave
je
mov
stos
sbb
dec
mov
shlb
lahf
mov
ret
adc
push
ret
es
jno
xchg
daa
dec
call
notb
rclb
sub
and
arpl
daa
inc
dec
sbb
push
imul
iret
or
pop
mov
fsubp
pushf
push
test
and
mov
push
sbb
imul
pusha
push
pop
outsb
xchg
mov
cwtl
jno
mov
outsl
adcb
sub
pop
fcoms
add
add
rcr
or
shl
adc
push
hlt
lods
test
shrb
cmpsb
jl
into
sub
data16
mov
clc
pop
and
or
shl
test
scas
std
pop
jae
and
adc
in
addl
mov
mov
xor
int
add
jl
fwait
and
mov
int3
mov
pusha
pop
cmp
adcb
mov
and
test
jbe
or
or
or
jg
cmpb
xor
mov
jns
jge
insb
push
add
mov
shrl
push
in
cmp
jmp
jp
pop
cmp
sub
imul
xor
mov
and
stos
sbb
push
movsl
and
aas
xor
iret
das
mov
dec
mov
clc
fisttpl
cli
push
cmp
push
jmp
das
out
add
mov
rorl
jecxz
pusha
repz
cmp
testb
jge
dec
leave
gs
cli
out
nop
rcrb
test
and
push
xlat
or
nop
cmp
notl
lods
fcom
test
add
xor
out
les
stos
ret
mov
push
dec
xchg
loopne
into
sbb
adc
push
repz
and
mov
xor
and
pop
sub
dec
out
stc
or
mov
stc
and
bound
lahf
mov
call
roll
clc
addl
bound
addr16
aaa
dec
push
out
mov
cmpsl
pop
rcrl
dec
or
hlt
out
sbb
mov
imul
add
mov
sbb
or
sbb
inc
out
jge
xor
enter
sub
iret
pop
into
dec
pop
repz
montmul
cmpsb
push
jns
xchg
mov
outsl
daa
push
pop
mov
jp
mov
sbb
push
jb
sahf
mov
push
call
jb
scas
loope
loopne
lea
nop
mov
xchg
scas
mov
and
in
enter
or
adc
fs
outsb
xchg
xor
daa
popf
mov
call
push
aad
out
push
sbb
adc
and
sbb
fildll
lea
lods
scas
es
fsubrl
clc
adc
notl
sbb
push
lahf
cwtl
test
push
lods
cld
cltd
and
enter
adc
jnp
cltd
out
xor
aad
pop
mov
orb
push
jge
mov
ret
mov
testl
jmp
pop
cltd
sub
and
xchg
mov
roll
cmp
push
cli
cmp
arpl
sub
pop
cmc
aaa
push
imul
cmc
pop
enter
jnp
dec
sbb
imul
push
fisubs
stos
lds
add
mov
test
mov
mov
lock
nop
or
add
imul
pop
adc
arpl
shlb
pop
fidivrl
loop
or
push
add
ret
cltd
scas
mov
call
xchg
ficoms
mov
cs
xchg
fwait
push
push
xchg
xchg
dec
mov
xchg
lret
jno
outsl
and
out
clc
pop
fists
movsb
repnz
push
mov
pop
inc
clc
jle
cli
xchg
in
adc
mov
xchg
jno
xlat
xor
loop
seto
test
repz
adc
jb
stos
mov
inc
inc
sub
sbb
inc
push
clc
push
or
fnstenv
jmp
xchg
adc
inc
push
pop
sub
add
test
pop
mov
pop
mov
mov
jg
loopne
or
fs
aaa
dec
int
cmp
sub
imul
or
addl
in
in
jb
mov
push
xlat
insl
mov
add
mov
arpl
sub
mov
gs
and
stc
incl
mov
arpl
cltd
pop
xchg
xchg
sbb
and
or
lcall
cmp
push
inc
out
sbb
pop
dec
shl
test
xor
jecxz
mov
mov
or
nop
push
aaa
loopne
jle
mov
shrb
enter
push
sub
push
jns
mov
mov
mov
sub
cmp
lds
loop
out
loopne
out
xchg
cwtl
xor
sbb
mov
mov
fidivrs
xchg
sbb
arpl
repnz
fs
out
cs
jnp
push
testl
addr16
aam
leave
pop
fdivrl
mov
iret
das
test
jae
add
add
push
daa
outsl
pop
mov
insl
mov
dec
jmp
mov
gs
je
push
loopne
xchg
sbbb
scas
and
xor
movsl
rorl
fists
xor
jns
jmp
int3
dec
mov
bound
rclb
pushf
rolb
bound
cwtl
sar
enter
lods
lods
xchg
ret
add
outsb
rcrb
add
pop
cmc
outsb
push
les
mov
xor
adc
std
dec
cli
icebp
fs
xchg
adc
inc
jne
jns
lret
and
mov
dec
int
jnp
cmp
cmp
sbb
dec
jge
fdivrs
cmp
enter
jae
aad
insl
dec
jecxz
xchg
insb
or
sbb
in
fidivs
mov
and
jmp
add
sbb
cmpsl
xchg
aad
lcall
sub
addr16
sbb
xchg
dec
cmp
clc
in
add
sbb
add
sbb
pop
iret
rorb
xchg
loope
jl
sbb
pop
add
bound
lahf
inc
jmp
cmc
out
inc
pop
or
out
movsb
adc
sbb
dec
adc
xchg
cmp
out
pop
push
cwtl
shll
inc
push
movsl
mov
pop
jg
xor
cwtl
testl
cmc
or
sub
push
or
mov
pop
mov
push
pop
fisubs
xchg
mov
or
iret
andb
inc
clc
cmp
cmp
out
xor
lods
jmp
insb
xchg
popf
push
loop
inc
or
idivb
es
ret
sub
and
push
sub
inc
sbb
lcall
jle
clc
mov
cli
or
or
cltd
pop
pop
hlt
add
jnp
dec
aaa
inc
test
push
mov
xor
addr16
mov
jp
dec
pop
rcrl
fimull
test
xchg
pop
jge
insb
mov
iret
pop
jo
dec
jmp
add
sbb
sub
jae
sub
leave
sbb
dec
decl
xchg
mov
cli
pop
jmp
mov
popf
sub
lods
mov
ret
add
scas
add
xchg
in
insl
mov
pop
cmpsb
xchg
sbb
mov
inc
into
cld
and
and
inc
idivl
pop
rolw
cld
daa
lret
push
cmpsl
testl
sub
sbb
mov
aas
pusha
push
jno
jp
mov
fistl
xor
into
xchg
mov
incl
or
pop
xchg
sub
cld
add
je
xchg
jae
mov
jecxz
insb
lret
dec
push
sbb
orb
or
sbb
scas
in
xchg
movsl
pusha
dec
pop
mov
inc
xor
out
inc
and
mov
mov
mov
data16
out
mov
push
ret
push
or
mov
pop
jne
insl
xchg
jnp,pn
nop
sbb
test
aaa
mov
addr16
mov
sbb
cmp
push
out
add
lea
movsl
ja
out
lods
lock
mov
stos
mov
outsl
dec
sysexit
push
xor
jg
and
ret
push
in
cmp
jno
pop
sub
xchg
mov
mov
mov
xor
mov
push
inc
pop
sub
or
ja
pushf
repnz
xor
push
and
mov
sub
inc
inc
jno
inc
pop
nop
sub
outsl
xchg
imul
mov
dec
repz
lret
dec
fwait
movsl
lods
push
js
jnp
and
mov
push
xchg
mov
pop
ljmp
aaa
jne
lret
cmp
leave
push
inc
hlt
dec
ds
and
icebp
xchg
fs
ficoml
inc
pop
icebp
es
ret
testl
aaa
imul
pushf
pop
lods
push
scas
jmp
fcompl
xchg
sub
je
iret
lds
jbe
sti
jbe
and
fs
fs
push
xchg
push
jns
xchg
push
fcomps
call
sub
sahf
xor
cmpl
push
inc
fstps
clc
jp
mov
jmp
cwtl
mov
jmp
mov
sbb
pop
rclb
push
fidivl
mov
aam
pop
and
xchg
add
mov
and
sub
pop
sbbb
pop
testl
jns
dec
pop
sahf
mov
add
jbe
add
cmpsl
popf
pop
xor
add
cs
jae
push
inc
mov
cmpsb
inc
fcomi
and
stc
int
lds
gs
push
gs
imul
shll
sti
add
sub
xlat
mov
or
mov
enter
push
jmp
ss
ret
push
mov
adc
and
loope
leave
and
cmp
or
movsb
cmp
and
jge
xchg
mov
push
dec
es
xchg
dec
lods
push
aas
in
jns
bound
iret
and
mov
imul
call
cmp
lock
mov
xchg
sbb
pop
jmp
mov
jb
je
mov
hlt
jne
pop
cmpsl
or
adc
jno
scas
push
roll
pop
lret
sub
mov
mov
mov
cmp
sbb
movsl
decb
hlt
cmc
lds
cmc
dec
call
sarb
ds
mov
fisubl
add
mov
push
imul
mov
ja
cmpsl
jae
fsts
or
scas
push
psrld
fiadds
and
lcall
rol
in
ret
repz
fsub
or
sti
xor
jnp
push
xchg
lea
jae
and
inc
popf
xor
lods
sarb
mov
xor
pop
pop
dec
pop
out
inc
gs
cmp
daa
cs
lret
xor
xlat
dec
dec
pop
jle
into
mov
push
mov
das
inc
or
push
aaa
mov
pop
andb
movsb
jbe
or
popa
and
in
pop
divb
add
or
xor
mov
jg
add
or
lcall
mov
dec
cmpsb
or
cs
mov
sbb
sub
mov
pop
call
lret
and
popf
in
jno
mov
jo
inc
loopne
inc
lods
add
frstor
mov
sub
adcl
dec
add
pop
imul
xchg
pushf
in
lea
jg
sub
mov
sti
adc
out
setb
sbb
xchg
sar
leave
or
pop
std
in
inc
in
xchg
xlat
icebp
fnstcw
dec
mov
add
out
cmp
jmp
scas
xchg
repz
and
shrb
or
iret
ret
dec
pop
hlt
lock
adc
pushf
lods
sbb
adc
pusha
outsl
imull
mov
popa
pop
lea
push
xchg
lea
and
hlt
mov
das
stos
stos
xor
ljmp
inc
cmp
js
push
stos
pop
jge
sbb
cmp
mov
xchg
outsb
test
cmp
lods
inc
mov
dec
repnz
cli
lret
mov
mov
movsl
mov
mov
das
pop
inc
adc
scas
pop
sti
loopne
dec
arpl
scas
sub
fisttps
mov
push
repnz
jnp
xchg
lret
popa
shlb
sbb
mov
sbb
shlb
cmpsb
add
adc
cs
out
sub
push
decl
xor
shll
pop
cltd
pop
add
fs
int
mov
cbtw
cmpsl
stc
sub
dec
push
scas
inc
rclb
jno
xor
add
call
jae
in
out
ficompl
mov
pop
mov
vmovaps
fstpl
mov
xchg
xchg
jg
dec
mov
out
push
lods
inc
sahf
popf
pop
xor
and
sti
pop
cmp
data16
dec
loopne
mov
test
nop
mov
leave
in
jne
ret
cwtl
jg
pop
icebp
jecxz
mov
hlt
jp
cld
daa
mov
fnstsw
push
pop
loopne
adc
mov
scas
out
and
pushf
ss
jmp
popa
pop
and
mov
andl
out
push
out
pop
shll
or
pop
xchg
adcl
dec
lahf
adc
out
sub
dec
gs
mov
and
popa
mov
jno
ds
sub
inc
xor
loop
or
pushf
add
fldenv
lret
mov
jb
adc
inc
lcall
out
test
lods
push
outsl
push
dec
adc
and
clc
xchg
adc
cld
lcall
cmpsb
cmp
pusha
dec
cmp
aas
out
nop
pop
mov
mov
pop
jmp
mov
or
cld
test
cmp
inc
xlat
cmc
cmp
nop
outsb
cli
test
jecxz
push
lcall
adc
es
sbb
dec
jecxz
aas
outsb
add
dec
push
loope
mov
mov
jb
jmp
add
cmpb
enter
pop
jmp
out
outsl
repz
ss
pop
adc
pusha
add
push
cmp
inc
pop
mov
das
sbb
test
mov
dec
movsb
lock
dec
add
mov
xchg
xor
sub
pushf
pop
outsb
or
sbb
dec
test
int3
nop
fnstsw
pop
faddl
sub
mov
or
mov
jg
jns
ljmp
movsb
imul
cmp
enter
xorl
fldenv
cmp
xchg
sub
loopne
int3
push
add
insl
stc
in
pop
jo
daa
hlt
mov
jns
cmc
es
xor
sti
mov
fisubrs
fstps
add
movsl
cmp
mov
adc
and
mov
xchg
push
leave
fdivp
idiv
fwait
xor
push
or
cmpsb
ficoms
inc
getsec
sub
cmp
scas
insb
xchg
test
rcll
add
xchg
push
pushf
xor
pop
shll
or
mov
mov
sub
dec
pop
xor
ljmp
rolb
inc
and
push
outsb
inc
into
and
dec
pop
pop
cmpsb
or
push
test
stc
lea
dec
arpl
mov
jge
pop
and
rcr
stc
cwtl
hlt
dec
fs
adc
and
out
addl
adc
xchg
sub
jb
movsb
pop
sti
sbb
adcb
mov
lcall
mov
gs
or
loopne
pop
pushf
jecxz
fs
loopne
cmp
ret
cmp
adc
rcl
rdpmc
inc
jle
in
add
inc
pop
and
mov
in
jae
pop
adc
ss
push
dec
jle
cmp
insb
add
mov
aas
push
and
ja
xchg
mov
lds
addb
dec
adc
jbe
int3
lret
pop
push
fidivs
dec
fldcw
inc
stos
in
imul
lret
xlat
idivl
sbb
hlt
in
mov
das
inc
inc
out
xchg
mov
cmp
aad
add
dec
sbb
aas
int3
iret
subb
cld
aaa
mov
les
cmc
scas
cmp
test
dec
pop
pop
subb
push
mov
dec
push
in
shl
fsubrp
add
sub
cmp
ret
push
jbe
ficomps
or
xchg
xor
xchg
mov
xchg
test
fsubl
ret
or
or
dec
mov
leave
xchg
or
mov
xchg
cmp
mov
test
xor
add
lret
adc
push
cmc
ds
iret
test
xor
xchg
scas
mov
into
and
inc
sbb
inc
repnz
in
jne
adc
and
sarb
cli
xchg
sub
pop
cmc
inc
push
mov
push
fnsave
iret
xchg
lea
push
lods
mov
fistl
es
jae
sbb
push
adc
mov
lcall
shrl
or
xchg
addb
mov
jg
insb
jne
andl
adc
cmp
cld
addl
fcomp
mov
scas
insb
lahf
outsl
nop
xorb
sub
or
aas
mov
xor
je
sarb
fs
push
es
jle
cmc
sbb
test
jo
into
rorb
out
inc
popa
cmp
fwait
lret
and
inc
call
pop
jge
mov
loopne
gs
add
mov
lret
in
enter
mov
es
pop
in
les
mov
push
add
adc
cltd
mov
sbb
adc
pop
arpl
ficoms
and
es
push
iret
add
and
mov
fildl
add
xor
push
push
movsl
xchg
ja
aaa
push
push
outsb
insl
ret
les
mov
sbb
repnz
and
xor
add
daa
sbb
lea
stc
xchg
fs
push
in
stos
xor
in
cmpsb
add
inc
adc
jl
ret
sbb
call
int
daa
jmp
dec
mov
lret
jmp
and
dec
outsb
and
push
cmp
dec
fs
xor
push
stos
jo,pn
push
loopne
xchg
adc
pop
mov
in
mov
push
mov
int
jmp
jae
jecxz
xchg
out
sti
xchg
mov
test
scas
fnstenv
pop
jae
test
and
push
es
repz
aam
cs
adc
sbb
and
clc
sub
mov
daa
pop
pop
iret
push
lea
xchg
dec
inc
mov
das
loopne
push
xchg
add
loopne
or
jo
int
jl
in
addr16
sub
adc
in
push
lods
fstpt
push
cmp
in
test
jge
inc
adc
cmpb
popl
aad
xor
aad
add
int3
dec
pop
test
fdivrs
addr16
enter
xchg
xor
xchg
mov
das
iret
out
xchg
dec
push
push
ret
pop
cmp
and
dec
fidivrs
dec
dec
dec
inc
in
and
int
cld
test
xor
rolb
xor
cmovbe
in
add
pop
int
aam
or
loope
mov
lock
mov
rcrl
hlt
xchg
adc
les
test
adc
mov
push
push
add
dec
cs
push
lds
mov
fcmovbe
jg
mov
sbb
pop
mov
jns
xor
pop
push
inc
or
mov
add
pop
mov
loopne
jb
sub
bound
pop
adc
sub
bsf
sub
hlt
jae
push
mov
pop
or
push
inc
add
sbb
push
jne
dec
mov
lret
ret
cmc
mov
ds
push
add
mov
fnstsw
mov
scas
jmp
jle
xor
xlat
cmp
aam
dec
movsb
in
in
xor
jge
pop
push
cmp
mov
add
and
or
push
cmpsb
inc
adc
lock
mov
push
cli
ds
dec
decl
insl
cs
js
pop
inc
mov
out
ret
jnp
xor
xor
push
stos
rol
test
ret
xor
loopne
or
sbb
test
mov
outsb
add
scas
out
dec
insb
cli
xchg
imul
or
aam
lods
bound
cmp
jecxz
ret
xchg
mov
push
orl
mov
xchg
adc
and
push
xchg
adc
and
bound
fnstsw
jg
fstp
in
stos
push
or
jp
fdivl
inc
jg
jle
lret
pop
mov
enter
xchg
push
mov
cmp
cmp
out
imul
jmp
dec
cmp
dec
shll
and
cmp
sub
mov
test
loope
mov
imul
add
out
push
mov
leave
adc
sbb
add
shl
pop
cltd
rcr
jo
mov
push
fildl
repnz
js
mov
mov
pop
cmpsl
mov
lea
dec
in
add
sub
and
subl
or
sbb
inc
test
loope
add
rcrl
mov
sbb
lds
cwtl
stos
lds
mov
jl
push
or
jnp
lret
mov
cli
mov
loopne
cmp
jae
cwtl
stos
inc
or
loopne
std
adc
pushf
pop
add
mov
rcrb
sub
mov
inc
fdivrs
pop
pushf
les
in
add
testb
mov
mov
xchg
pop
or
add
shll
ss
mov
mov
lods
enter
es
pop
jl
mov
and
inc
mov
mov
cmpsb
jecxz
cmp
mov
fdivrl
sub
sti
stos
cs
inc
push
out
insb
add
test
pusha
xor
pop
insl
into
lret
les
xor
pop
adc
and
dec
pop
scas
addl
sub
jb
xchg
push
add
mov
inc
jns
icebp
ljmp
adc
ds
mov
jb
out
pop
push
adc
fcomip
cmp
std
mov
jmp
rcll
les
mov
enter
fstpl
sub
lock
adc
push
je
jp
lret
and
dec
out
jge
jp
adc
mov
out
call
cmc
or
push
or
aad
push
sahf
shr
inc
je
mov
dec
adc
xor
lcall
pop
insl
stc
pop
test
inc
data16
pop
cmp
mov
dec
loope
pop
in
push
aas
mov
fildll
inc
dec
sbb
fbld
inc
fucomi
jae
mov
cmp
imul
in
rol
jnp
jb
rcrl
sub
out
shll
inc
out
ja
and
mov
aam
cmp
sarl
mov
xchg
xchg
fstpl
inc
mov
xchg
mov
fucomi
popa
xor
jno
or
inc
cwtl
repnz
call
out
loopne
cmp
insl
add
adc
pop
mov
mov
xchg
add
xor
and
pop
pop
sub
cmp
clc
or
jp
test
rol
jp
ljmp
fnstenv
mov
mov
arpl
movsb
dec
pop
dec
add
dec
movhps
xorl
loope
pop
add
mov
dec
das
cs
inc
jb
test
daa
hlt
pop
pop
repz
ljmp
mov
pop
lret
jno
push
sub
mov
fdivl
movsb
lods
mov
rcll
mov
imul
inc
mov
mov
scas
and
mov
cmp
sbb
icebp
outsb
jle
dec
mov
ja
add
es
test
xchg
pop
repnz
es
pop
or
xchg
scas
sub
dec
xchg
jb,pn
imul
xor
pop
sub
iret
push
jp
lods
jle
repz
adc
xor
jae
xchg
mov
fsubl
inc
stos
in
sbbb
jne
test
mov
test
mov
push
and
dec
movhps
adc
pop
sub
repnz
sbb
cmp
enter
lahf
repz
mov
aam
loope
add
fisubl
jmp
inc
sbb
notl
fcoml
jne
cs
xchg
sub
add
jae
lock
mov
jg
shll
fmull
jecxz
rclb
aam
push
stos
pop
ss
flds
test
lret
lock
push
cmpsl
lea
or
mov
or
mov
scas
test
dec
pop
clc
jle
or
outsl
outsb
jle
arpl
adc
inc
and
rorb
iret
aam
hlt
mov
sti
xchg
inc
pop
inc
pushf
add
sbb
test
mov
cmp
jecxz
call
fildl
mov
stc
lcall
pop
mov
cmp
mov
inc
cmp
or
dec
pop
pop
jle
aam
js
repz
imulb
arpl
jg,pt
out
and
push
pop
xchg
push
stos
push
push
jmp
inc
cwtl
pop
scas
in
jb
mov
xor
cmp
lahf
add
xlat
fistl
push
sbb
pop
cmp
and
and
xchg
mov
clc
sahf
icebp
add
divb
mov
insb
fldl
push
pop
jecxz
into
xchg
add
push
cwtl
out
popf
leave
daa
sti
fwait
or
adc
movsl
icebp
inc
cmpl
in
xchg
sub
pop
xor
data16
loopne
inc
and
push
aad
js
enter
outsb
sbb
mov
or
out
cmp
and
xorb
fbstp
faddl
mov
mov
loope
cmp
xor
sub
call
sahf
and
shrb
inc
flds
push
lods
faddl
jno
adc
jbe
outsl
mov
push
pop
scas
xchg
jne
iret
adc
sarb
int3
pop
adc
and
lock
test
test
mov
push
or
dec
pop
imul
jae
outsb
inc
or
pop
and
dec
and
aad
mov
lods
xor
pop
seta
sbbl
into
int3
outsb
sub
out
mov
mov
sub
out
popf
jp
mov
ljmp
jb
test
mov
mov
sub
lret
pop
cmpsl
xchg
daa
js
or
stos
aas
mov
mov
dec
pop
icebp
pop
mov
mull
call
in
push
ja
push
lret
cmp
mov
sahf
pop
fildl
rolb
movsl
push
adc
dec
lds
adc
push
call
xchg
shrl
mov
dec
and
outsb
sbb
pop
mov
and
push
inc
aas
inc
inc
test
je
int3
jae
inc
cmp
adc
call
inc
xor
test
shl
inc
loopne
je
pusha
sub
sbb
mov
inc
test
cltd
pusha
sbb
push
push
pusha
mov
dec
out
xchg
js
js
mov
ljmp
les
outsl
idiv
pop
call
push
movsl
cmp
xor
cmp
jge
jno
test
push
adc
inc
stc
fdiv
daa
outsl
pop
ds
ds
pop
dec
popa
cmp
adc
push
push
pop
mov
jb
setns
push
fnstcw
jecxz
repnz
push
cwtl
mov
lret
cld
mov
je
lods
das
ficoml
jns
rcll
mov
rorb
lret
imull
fbstp
sbb
sarl
subl
loop
lods
adc
lahf
mov
mov
adc
insl
in
jl
icebp
jae,pn
scas
movsb
dec
fdivrs
lea
cmpsb
cmp
les
cmpsl
shl
outsl
mull
dec
stos
inc
or
mov
leave
inc
test
test
adc
xor
cwtl
jbe
out
mov
sbb
pop
lods
aas
adc
es
xor
in
lods
inc
add
sub
xor
aad
xchg
loope
mov
push
cmp
fnstenv
mov
loopne
push
cs
cmpsb
xchg
adc
aaa
pop
lret
inc
frstor
pmaxub
mov
ja
cmpsb
std
xchg
flds
xchg
and
inc
push
inc
ret
leave
loope
cmp
push
lret
xchg
mov
je
xor
stc
lods
jg
or
clc
push
scas
mov
push
adc
mov
sub
aas
and
icebp
xor
fmull
fnstsw
out
mov
in
in
sarb
push
jne
stos
and
stos
ljmp
iret
sbb
addr16
outsl
ljmp
push
jnp
imul
and
stos
mov
sbbb
mov
or
xor
jl
mov
loop
add
arpl
mov
js
hlt
or
push
jge
xchg
jnp
and
push
mov
repz
cmp
enter
or
cli
iret
and
xlat
icebp
ret
outsb
das
mov
xorl
or
mov
cmp
adc
jne
mov
into
scas
ret
add
inc
push
pop
lods
fwait
sti
add
out
subb
fs
ja
sahf
test
jmp
scas
in
sbb
push
addr16
add
icebp
mov
repz
inc
sarl
push
sbb
dec
jae
call
dec
ljmp
pop
ljmp
inc
or
or
lret
lret
hlt
mov
mov
stos
mov
stos
fnstenv
xor
cmpsl
xor
mov
jbe
xor
mov
out
and
and
cmp
int
dec
fnclex
out
xchg
lods
orl
jns
insb
fistps
test
fidivrl
mov
dec
addr16
shrl
pop
adc
jle
jno
xor
mov
insl
sub
lods
sbb
or
pop
mov
aad
in
aad
decl
js
mov
cmpsb
repnz
addb
xor
loop
iret
cs
ljmp
testb
fisttps
pop
pop
mov
jecxz
ja
iret
hlt
hlt
cmp
and
mov
rol
pop
aam
mov
pop
lds
dec
xchg
divb
cmpsb
lret
cmp
adc
adcb
xchg
sub
mov
pcmpgtd
adc
xchg
je
fwait
xchg
add
ret
mov
xchg
outsb
lcall
pop
mov
xor
sbb
mull
insb
mov
sub
dec
shll
mov
movsl
lds
jae
in
daa
out
mov
ret
push
scas
dec
iret
mov
mov
dec
and
jns
dec
cmpsb
cmpsl
dec
imull
jp
adc
dec
mov
xchg
push
adc
sbb
out
out
dec
add
push
pushf
and
ljmp
rorl
outsl
pop
dec
aas
add
xor
or
imul
testl
dec
xchg
insl
jo
loop
es
cmp
and
fldl
pop
jg
jecxz
fldenv
dec
outsb
push
icebp
dec
rorb
add
ret
std
pop
and
sub
jns
mov
sbb
xchg
adc
outsl
ret
loopne
cmc
nop
fwait
pop
out
andl
pop
out
cmp
cmc
mov
pop
sbb
sbb
jo
cmp
sub
dec
nop
inc
dec
arpl
jge
cmp
sub
mov
cld
outsl
xchg
xor
in
mov
jmp
and
addr16
cs
mov
lret
gs
sti
mov
hlt
aas
cmp
pop
lds
fucomp
orb
stos
inc
lods
ficoml
loope
cmp
push
addr16
sbb
call
outsl
push
adc
int3
lock
fcoml
shr
sti
mov
pcmpeqd
adc
iret
mov
mov
pop
lock
sbb
mov
js
pushf
or
xchg
xchg
test
push
cs
lahf
xor
cmc
inc
dec
pop
jle
jnp
cwtl
pop
sub
xor
ss
add
inc
sahf
push
in
roll
movsb
adc
and
and
rcr
or
ret
push
pop
fcompl
mov
sar
insb
js
dec
loope
clc
pop
les
sbb
je
out
push
aas
dec
sub
or
arpl
push
in
das
cmp
and
mov
and
mov
ja
fisubs
push
add
roll
sbb
mov
in
setg
dec
pop
pop
rcll
inc
mov
adc
repnz
fs
into
je
adc
push
icebp
pop
daa
add
testl
lret
dec
cs
int3
pop
jmp
mov
movsb
jne
cld
sub
sbbb
pop
xlat
mov
nop
mov
pop
sahf
jb
bound
adcb
sbb
rcll
push
add
or
dec
daa
lea
jnp
shlb
mov
daa
mov
or
add
pushf
xor
ss
cwtl
in
cmp
frstor
add
ret
sbb
lret
test
mov
scas
std
cmp
sarb
inc
xlat
add
out
jecxz
and
push
jmp
sbb
cmpsb
movsl
inc
cltd
push
imul
pusha
dec
inc
stos
mov
cmpsb
rol
pop
flds
in
clc
lret
sbb
fisttpl
in
push
call
mov
out
mov
js
int
sub
jmp
dec
out
shl
rcrb
sbb
fldcw
ss
sub
push
sbb
outsb
push
sbb
mov
xor
popa
rcrb
fs
mov
pop
scas
dec
sahf
push
and
ja
jae
scas
sti
or
mov
in
jg
mov
pop
jbe
stos
pop
outsb
mov
mov
push
pop
push
rcr
jbe
mov
adc
lcall
cmp
add
inc
insl
movsb
bnd
fsubrl
or
mov
outsb
jge
das
stos
mov
and
sub
xor
push
out
mov
adc
jl
cmpsb
lret
adc
adc
mov
int3
and
adc
push
xchg
sub
daa
jecxz
call
int
lds
mov
out
aas
lock
push
outsl
bound
push
pop
incl
out
stc
push
pop
pop
nop
sbb
jmp
mov
loope
lea
cmp
jae
add
xchg
xchg
lea
push
ja
popa
mov
lcall
mov
and
xorb
divb
outsl
aam
notb
dec
push
xor
les
push
add
les
sub
out
cli
outsl
dec
lock
lds
inc
les
rclb
push
jbe
je
sub
and
hlt
adc
repz
cmp
fsubr
pop
imul
mov
xor
cs
xor
push
lock
xor
or
roll
stos
mov
jno
mov
ja
xor
mov
mov
jbe
imul
fadd
push
or
pop
repnz
sub
imul
or
add
clc
test
lret
sbb
out
cmp
lods
push
adc
xlat
addr16
adc
jmp
jl
jae
jne
bnd
or
test
mov
jno
sub
xchg
jg
jge,pn
add
xchg
imul
pop
ret
pop
stos
test
call
xchg
push
mov
and
aas
sbb
add
mov
add
mov
push
popa
and
negl
mov
push
dec
aad
push
adc
push
gs
into
call
jnp
xor
inc
pushf
push
sbb
aas
stos
cmpsb
sub
dec
outsb
bound
in
out
cwtl
stos
lahf
jle
das
and
mov
in
xlat
mov
ret
mov
addr16
inc
rcrl
cltd
iret
iret
adc
mov
dec
jns
fstps
dec
stos
movsl
mov
shlb
enter
xor
xchg
shrl
dec
pop
push
addb
enter
rcrl
xchg
adc
pop
xchg
out
inc
pushf
xor
ss
inc
jle
sub
enter
lret
jae
cltd
mov
mov
aad
into
xor
orb
mov
mov
dec
rcll
mov
inc
imul
gs
ja
shl
inc
je
push
sahf
andb
or
sbb
inc
sahf
test
shlb
xchg
xchg
out
sarb
jae
js
jnp
xor
xchg
addr16
out
xor
shlb
test
xchg
pop
lods
xchg
mov
int
scas
cmp
sbbb
dec
pop
repz
loopne
gs
cmpsb
adc
pop
loope
adc
ja
mov
imul
pop
mov
adc
xor
in
xchg
sbb
dec
fidivs
xor
jns
fisubrs
lret
cmp
cld
iret
and
cwtl
pop
lock
ss
add
push
and
pop
sbbb
imul
cmpsl
push
jns
or
cs
and
inc
xchg
mov
jecxz,pt
add
mov
jg
fisubrl
mov
arpl
inc
adc
inc
xchg
repz
mov
sbb
pop
pop
add
sub
mov
out
adc
inc
adc
ljmp
cmc
lret
mov
cmp
cmp
leave
xlat
pop
pop
stos
mov
pusha
ja
cmpb
fwait
adc
ret
mov
mov
push
push
add
xor
mov
aaa
stos
mov
mov
sbbb
shrl
lret
fisubl
mov
adc
mov
cs
movl
scas
push
mov
adc
sbb
inc
sbb
xor
popa
mov
inc
je
cmpsb
sbb
aaa
xchg
jge
mov
jae
test
adc
sbb
jle
fwait
and
out
xchg
sub
add
aas
dec
andl
pop
sbb
push
mov
xchg
add
mov
cwtl
push
repnz
sbbl
xlat
and
dec
inc
dec
loope
push
xlat
sub
popa
push
pop
mov
push
add
pusha
mov
jp
inc
nop
iret
xchg
bound
xchg
mov
lods
lcall
lods
jns
pop
mov
lcall
or
jno
mov
lret
bound
push
sbb
popf
xorb
pop
insb
inc
add
mov
loop
xchg
xchg
mov
stos
sbb
fsubs
mov
aas
insb
pop
mov
loope
sub
push
mov
inc
fsubrl
lds
lea
xor
mov
mov
aam
xchg
sbb
or
imul
repnz
fcmovnb
sbb
xor
push
mov
loopne
hlt
cmp
sbb
lahf
lcall
ljmp
push
mov
lcall
dec
xor
cmpb
sub
aad
xlat
pop
daa
adc
lods
inc
and
xor
out
sbb
jnp
cmpsl
xor
clc
ja
push
mov
mov
push
popf
jg
in
into
mov
aam
mov
jl
movsb
and
loopne
pushf
pushf
mov
inc
sti
mov
push
ss
test
pop
xchg
popf
js
iret
xor
loop
xchg
sub
or
ss
dec
push
into
out
jne
xchg
sub
leave
scas
inc
sti
jo
call
in
mov
cmp
cmp
xor
and
lcall
bound
rorl
addr16
test
mov
push
into
mov
mov
add
pop
sub
scas
push
inc
outsl
outsl
adcl
inc
arpl
pop
outsb
mov
mov
sub
div
ja
dec
fistl
mov
or
cmp
push
sahf
sub
addb
inc
in
fimull
cmpsb
sahf
mov
jp
dec
xor
jp
add
rcrb
and
into
test
sti
ljmp
mov
ret
js
data16
outsb
push
ljmp
jno
adc
notb
pushf
cli
cmpsl
repz
pop
inc
dec
push
xchg
lock
adc
int
mov
mov
mov
sub
imul
cmp
std
inc
dec
inc
out
popa
fs
and
les
cmp
mov
mov
cmp
adc
ss
push
hlt
mov
std
inc
loope
sub
fisttps
push
icebp
daa
shlb
lret
pop
lahf
subl
jecxz
sbb
scas
imul
pushf
inc
xchg
jecxz
movsl
add
adc
xchg
cmp
sbb
sbb
sti
pop
dec
in
push
xor
push
inc
insb
add
faddp
add
fucomip
or
int3
cmp
add
jp
pop
std
sub
pop
push
test
imul
lods
cmp
inc
xchg
pop
xchg
pop
out
push
mov
xor
jo
xchg
sub
xchg
mov
adc
sahf
dec
cld
lock
push
push
es
daa
out
test
inc
or
xchg
sub
shr
clc
xor
mov
shl
jmp
sub
addr16
mov
push
jecxz
adc
test
mov
and
sub
sbb
or
jge
outsb
sahf
sub
push
mov
xor
icebp
dec
pusha
xlat
sbb
inc
dec
dec
movsl
cmp
jmp
mov
cmp
sti
xchg
push
pop
out
popa
ss
pop
adc
loopne
and
jge
inc
sbb
outsl
mov
or
call
leave
pop
xor
test
aam
je
sub
mov
jne
jne
test
push
stc
and
lock
fmuls
add
mov
sub
inc
jecxz
das
push
lahf
pop
mov
lret
cmp
in
in
push
pusha
les
jo
fcmovnb
in
and
dec
lds
lret
nop
xchg
jmp
xchg
xchg
ret
repz
cmp
loope
test
fsubrs
into
daa
lcall
dec
sbb
das
sbb
popa
xor
jb
sbb
and
stc
insl
repnz
dec
push
aam
pusha
xchg
les
mov
mov
stos
int
rorb
lahf
mov
ret
or
dec
stc
xchg
push
fdivrl
test
mov
fisubs
inc
push
psrad
dec
dec
aam
imul
incb
xchg
xchg
lret
dec
pop
cld
push
mov
and
fstpt
mov
or
or
movsb
addr16
ror
ret
es
xor
ret
push
icebp
fisubrs
loopne
cli
sti
jbe
mulb
xchg
je
xor
mov
push
jno
cmp
sti
mov
bound
mov
cmc
mov
jle
dec
js
test
addr16
and
mov
mov
scas
test
loopne
cltd
and
pop
daa
cld
mov
daa
rcll
inc
aas
mov
cmp
or
sub
fnsave
add
pop
xor
mov
push
xor
inc
xchg
ret
and
test
or
imul
sbb
add
mov
sbb
add
gs
mov
roll
loopne
push
imul
jo
dec
clc
xchg
pop
cmc
mov
std
jg
in
inc
cwtl
mov
aam
data16
fisttps
scas
data16
sub
or
outsb
cmp
jecxz
arpl
push
push
mov
jle
mov
leave
inc
incb
movb
pop
dec
pop
inc
orl
xchg
push
push
jae
test
arpl
xchg
push
orl
pop
pop
dec
cs
and
adc
inc
not
push
aam
out
xchg
mov
loope
push
std
lods
and
fs
lret
jbe
std
inc
xor
negl
mov
pop
or
push
outsl
add
lods
jnp
rorb
mov
push
in
loope
jl
and
or
push
cld
lods
mov
add
js
inc
sbb
jb
addr16
insb
outsl
sub
sbb
push
aad
sbb
dec
popa
mov
cwtl
bound
xchg
xor
call
cmpsb
mov
imul
subb
lret
clc
and
mov
pop
dec
add
lock
and
xchg
mov
inc
push
cmp
inc
call
addr16
pushf
fidivs
test
push
cmp
xor
cmpb
andl
stc
in
jb
pop
shll
jns
cmp
cld
lcall
dec
push
in
addb
mov
daa
xchg
push
add
outsb
adc
mov
cmpsb
sti
fwait
and
jbe
or
shrl
jno
mov
jno
mov
cld
xchg
push
daa
daa
in
movlps
test
inc
mov
or
jb
xchg
pop
xor
add
inc
shlb
dec
sbb
clc
jge
mov
xor
lods
dec
cmp
jo
loop
sbb
popa
pop
jg
mov
fiaddl
sub
push
cmc
push
cmp
or
xor
icebp
push
push
movsl
lds
ss
dec
fdivrl
pop
lods
test
out
stc
and
pop
sub
jle
jno
lds
adc
mov
xor
sbb
jns
xchg
cld
ret
mov
clc
popl
imul
ja
jecxz
cmpsb
cmp
mov
std
pop
and
dec
add
test
pop
sub
in
xchg
mov
pop
pop
mov
jbe
adc
sbb
xchg
pusha
loopne
push
jns
sub
shll
lds
add
jp
stos
inc
inc
pop
inc
xlat
pop
mov
insb
mov
add
push
mov
mov
js
cli
test
jb
popf
dec
mov
shl
jge
shlb
pop
sbb
int3
in
push
out
or
and
jl
mov
mov
enter
sub
or
and
jbe
lods
jg
fwait
cmp
movsl
push
popf
out
dec
push
inc
xor
iret
fnstsw
rol
push
adc
cltd
and
ret
inc
and
xchg
jge
mov
xor
cmpl
rclb
mov
add
xor
aam
sub
add
pop
xchg
xchg
mov
dec
sbb
sub
xchg
fdivp
shrl
cmpsl
or
pop
ret
testb
xor
add
fdivs
rcr
jns
out
mov
and
into
cmpsb
adc
cmc
cmp
hlt
mov
mov
sub
fidivl
out
push
imul
lret
shll
mov
frstor
pushw
ljmp
mov
add
fnsave
lret
and
sbb
push
aas
or
clc
ret
cltd
sub
addr16
fidivrs
stc
nop
aaa
pop
lock
xchg
popf
jg
and
cmp
pop
std
xchg
les
stc
lea
cmpsl
int3
js
ficoml
add
add
jne
repz
cs
popa
int
rcrl
icebp
decb
inc
adc
and
xor
les
repz
mov
adc
ljmp
jo
dec
iret
incb
hlt
cmc
xchg
mov
inc
jo
pop
jb
push
fcomps
fstpt
ret
push
xor
mov
jp
pushf
ljmp
push
imul
push
mov
mov
xor
jg
in
push
sub
pop
fimuls
in
push
out
iret
mov
lret
outsb
outsb
add
pushf
out
call
cmp
mov
arpl
pop
xlat
mov
sub
sub
filds
adc
mov
sub
or
insl
sbbb
xchg
in
or
jle
sbb
test
lock
aad
push
cmp
scas
mov
repz
cmpsb
pop
ss
jbe
xorl
jl
add
lods
fsubrl
jle
or
push
jno
mov
shlw
aas
addr16
gs
jbe
scas
dec
jne
loop
sbb
in
inc
dec
int3
xor
out
xchg
mov
movsb
arpl
push
call
or
and
mov
ficoml
in
je
jmp
stc
add
xor
jecxz
lods
dec
sub
fwait
jle
mov
in
adc
pop
insl
fwait
xor
adcb
mov
mov
clc
sahf
inc
jmp
daa
jno
call
out
test
sti
pushf
and
xor
aas
or
notb
lret
imul
iret
cltd
pop
push
push
sub
fs
and
stc
enter
sub
jnp
mov
loop
push
movsb
push
pusha
mov
pop
out
push
mov
mov
adc
scas
sbbb
sub
ja
repnz
addr16
decl
mov
cwtl
or
push
inc
fstl
mov
push
dec
in
add
sub
fldcw
xor
mov
enter
mov
gs
test
mov
repz
cmp
push
testl
ficoml
sub
mov
push
sub
push
mov
inc
inc
in
mov
loopne
jl
and
adcl
mov
inc
lds
inc
pushf
mov
aam
loop
mov
shrl
dec
shlb
fisttpl
call
jmp
cli
cld
fidivs
stos
roll
and
movb
mov
pop
dec
arpl
mov
push
stos
add
cltd
adc
sbb
pushf
ret
dec
mov
pop
ds
test
dec
popa
cmp
insl
aaa
repz
lds
ret
add
push
loopne
push
sbb
and
icebp
sahf
jge
sub
sbb
cwtl
and
insb
outsb
cli
sbb
jmp
lret
or
ds
and
testb
jne
mov
dec
add
pop
sbb
test
std
push
xchg
fmull
mov
scas
lret
out
dec
dec
test
ficoml
pop
mov
push
imul
paddsb
xchg
dec
in
cmpsb
or
divb
pop
adc
sub
push
push
adc
or
xchg
sbb
mov
mov
mov
stos
push
repnz
dec
mov
sbb
pop
xchg
and
xchg
repnz
dec
fdivl
lds
jne
shll
jno
xor
fdivr
cwtl
push
jo
dec
fidivrl
push
lret
pop
test
cmpsb
out
sub
stos
ljmp
aam
movsl
push
jecxz
hlt
lret
testl
sbb
push
popf
sub
pop
or
or
mov
jge
push
aas
jge
xor
in
imul
and
test
ss
pusha
ljmp
stos
push
dec
lds
gs
arpl
into
insl
sahf
push
mov
es
sub
out
mov
dec
cld
mov
inc
clc
and
add
ret
aas
cmp
sbb
sahf
f2xm1
xchg
bound
or
lods
shrb
sbb
pop
mov
dec
inc
cld
out
adc
jp
loop
cwtl
mov
cmp
or
dec
mov
adc
cmpl
call
jp
in
jecxz
xor
pop
popf
add
inc
sbb
jl
fisubrs
dec
movsb
mov
mov
jb
imul
aaa
xor
out
xchg
adc
add
xchg
fadds
mov
popa
and
xchg
fdivrl
sub
mov
jnp
adc
imul
jne
and
mov
stos
test
popa
jmp
cmp
outsb
les
mov
and
inc
test
and
cli
jns
push
cmpsb
sahf
adcl
in
mov
cmp
adc
ds
dec
movsl
or
ljmp
mov
mov
into
ljmp
ret
fwait
xchg
inc
fldcw
inc
fnstsw
xor
loop
pop
pushf
xor
inc
mov
cwtl
data16
je
xchg
scas
mov
cmp
sbb
rcrl
jo
pop
fbstp
add
mov
scas
adc
inc
jbe
jo
sbb
jmp
cmpl
lea
lret
cs
pop
jno
insb
sbb
into
dec
sbb
dec
add
popa
loope
pop
leave
mov
jmp
add
scas
mov
js
adc
jp
sbb
hlt
inc
xchg
stos
mov
pop
mov
icebp
sahf
bound
imul
pop
fdivl
add
cld
mov
inc
push
inc
push
dec
mov
pop
adc
mov
pop
lds
fldcw
and
add
and
imul
imul
xchg
add
dec
scas
pop
dec
add
insl
push
sbb
pop
xor
pop
movsl
iret
loope
daa
sahf
ds
xchg
dec
mov
addr16
lock
std
in
stc
mov
mov
adc
test
das
push
es
and
add
popa
aad
gs
test
jmp
call
iret
inc
lods
fisubrs
lds
dec
test
xor
das
lret
cmp
nop
setns
dec
roll
push
inc
call
sbb
adc
sti
push
fs
mov
mov
cli
jle
cmp
loopne
cmpsl
push
sub
lahf
dec
in
and
sti
xchg
popf
pushf
pop
imul
repz
cmpsb
or
mov
cltd
xor
adc
out
dec
push
aas
js
sub
dec
test
ljmp
mov
mov
dec
pop
xor
arpl
stos
aaa
sbb
cmpsl
cmp
sub
cs
jge
mov
ret
outsl
sub
pop
inc
xor
pop
filds
ja
pushl
push
add
stc
in
imul
mov
xchg
pop
out
popf
addr16
pop
mov
daa
adc
mov
dec
outsl
mov
ds
jl
js
lock
outsl
and
ja
mov
int
xchg
fs
push
jno
popa
push
lret
fs
mov
pop
cmp
fucomip
cli
or
pop
xchg
sub
xchg
sbb
in
push
orl
mov
mov
pop
pop
xchg
imul
jl
daa
popf
xchg
fsubl
scas
adc
xor
lea
push
fistl
jbe
push
mov
lret
cmpl
dec
or
je
cmp
lret
rcrl
ds
push
fidivrl
push
mov
and
fs
cli
addr16
call
sarb
addr16
clc
pop
inc
fmuls
pop
xor
lret
into
inc
push
movb
push
pop
xor
enter
push
aam
jbe
xchg
std
pop
fcompl
pop
in
insl
jbe
outsl
mov
dec
idivb
test
notl
push
loope
pop
xchg
sub
arpl
xchg
jbe
in
test
add
imul
arpl
je
data16
out
xchg
dec
rcll
cmc
imul
mov
icebp
arpl
lods
gs
mov
sub
stos
xchg
cmp
jl
sub
subl
jle
dec
daa
sbb
xchg
mov
orl
pop
leave
shlb
cmc
or
pop
xchg
insl
in
or
outsl
jae
mov
xchg
push
inc
fs
or
in
push
roll
dec
cltd
or
pop
scas
and
sub
popf
jbe
jb
mov
lret
pop
into
xor
jle
out
pop
stos
cwtl
push
outsb
movsl
adc
cli
mov
repnz
push
call
and
sub
sub
mov
xor
push
adc
ret
mov
pop
cmp
mov
dec
loope
jge
xchg
mov
and
fwait
pop
push
adc
repz
daa
test
test
push
xlat
and
pusha
inc
data16
xchg
and
adc
ret
mov
push
inc
adc
icebp
xchg
jne
push
test
jnp
sbb
in
push
add
or
fisttps
sbb
lods
mov
leave
push
stos
push
movsl
mov
sub
mov
mov
sub
enter
fucomip
scas
xor
test
cmp
fnstsw
lret
pop
outsl
push
jne
movsl
fnsave
test
ficomps
psubd
test
es
push
in
test
shlb
stos
jmp
fldcw
stc
push
test
popa
fwait
dec
adc
mov
hlt
jno
rclb
cmpsl
sbb
mov
inc
cmpsb
repz
fucomi
out
adc
push
sbb
pop
xchg
add
cmpsl
out
cltd
xor
mov
int
adc
inc
mov
cli
aam
stos
mov
stos
sub
push
xchg
and
ss
cmc
jmp
cmp
dec
mov
fwait
mov
jmp
mov
jle
push
xor
lds
ja
and
iret
push
std
sub
jns
mov
test
arpl
cmp
mov
cmp
jl
fwait
push
adc
arpl
push
sbb
mov
mov
adc
dec
cs
aaa
push
pop
in
test
pop
das
notl
pop
push
repz
negb
sbb
sub
mov
es
push
movsl
inc
cld
lcall
push
fsubr
sbb
fsts
xor
push
add
sub
and
in
sbb
mov
shlb
sub
jge
add
dec
xchg
rcrl
mov
xor
sarl
loopne
lods
mov
aam
addb
inc
daa
xor
dec
add
imul
xchg
xorb
push
push
jno
shll
adc
inc
dec
cmpsl
xor
call
or
adc
mov
add
es
push
xor
iret
int3
xchg
in
inc
into
loop
lea
mov
out
add
jl
jno
aam
shl
jl
ja
mov
mov
jp
gs
negl
js
jb
xchg
sbbl
rolb
ud2
arpl
popf
icebp
adc
mov
js
mov
repz
icebp
sarl
stos
inc
add
scas
leave
push
orb
int3
stc
rcr
ljmp
mov
xor
mov
xor
inc
scas
leave
adc
push
ljmp
push
cmpsb
mov
and
data16
ds
mov
dec
mov
pop
or
xlat
popf
jg
mov
aad
mov
sbb
mov
sub
jnp
stos
xor
sbb
fdivrs
std
mov
das
leave
cli
not
mov
push
les
jnp
dec
lock
cmovbe
xchg
ret
xchg
mov
daa
pop
loope
ds
enter
push
dec
push
pop
inc
aam
cmc
mov
adcb
rolb
insl
in
repnz
mov
aam
jecxz
ds
cmc
or
pop
adc
jp
cmp
popf
or
out
testb
or
sbb
testl
test
incb
lret
rcrb
inc
xor
addr16
pop
out
fwait
inc
mov
mov
jnp
in
cmp
data16
push
je
lret
mov
popf
repz
xchg
test
and
cmpsl
into
cli
or
mov
xchg
test
inc
repz
mov
inc
mulb
cmc
add
les
jg
jp
mov
xor
sub
ja
sbb
lret
cmpsb
fnsave
mov
jle
cmp
cmpsl
push
pop
jae
pop
je
not
enter
inc
add
jns
mov
mov
xlat
repz
enter
aas
dec
inc
jge
lds
repnz
xor
mov
repnz
das
arpl
add
outsb
adc
mov
pop
lock
jecxz
jg
mov
scas
dec
repz
jno
jg
xor
xchg
sbb
mov
add
jne
push
add
test
mov
or
sti
xchg
fndisi(8087
cmp
movsb
jb
dec
jo
mov
lret
push
iret
dec
or
jmp
ja
pop
xor
dec
imul
mov
inc
lahf
dec
dec
xchg
fwait
push
jmp
inc
outsb
fdivrs
int3
test
out
xlat
fimull
xor
or
gs
ret
aaa
inc
push
cli
add
sbb
cmp
test
push
mov
repz
xchg
sahf
dec
inc
or
cmp
ljmp
sbb
cltd
mov
lcall
loopne
cmp
pushf
icebp
inc
cmc
in
cltd
ret
enter
sub
dec
cltd
std
xorl
js
cmp
cmpsl
fwait
stos
sarb
out
cltd
gs
lds
jne
fdivs
mov
sarl
rcrb
icebp
and
loopne
lock
xchg
mov
cmp
cmc
aam
cmp
and
std
inc
out
ja
in
xchg
push
jae
popf
addr16
fnstcw
dec
insb
leave
fld
fcomps
sbb
cs
pop
je
cmp
cmp
mov
add
ret
mov
pusha
push
jmp
sub
hlt
popa
mov
mov
xchg
dec
iret
pushf
divb
mov
mov
sti
pop
lahf
jno
outsl
cmpl
shrb
pop
mull
ds
movsl
xchg
push
lea
add
jno
adc
jbe
push
test
xor
fmuls
fcmovnbe
cmp
jg
dec
cmp
test
adc
movsl
in
ret
inc
or
and
ret
jp
rcrl
imul
ret
sti
pop
iret
sbb
jge
jo
aas
adc
xchg
adc
sbb
dec
jp
stc
sub
inc
push
test
cli
pop
cmc
sub
push
movsl
orb
push
adc
cmp
ds
push
rol
jecxz
data16
ds
mov
cmp
add
mov
sub
inc
xchg
jecxz
pop
lock
mov
and
push
pop
test
push
mov
rorb
push
popa
mov
jns
fldcw
scas
sbb
cmpl
dec
pusha
sbb
cli
jecxz
mov
test
sar
shlb
sbb
push
das
or
push
mov
dec
cmpsb
leave
cmp
mov
shrl
dec
xchg
into
mov
cmp
cmp
repz
add
ds
repnz
sti
push
fidivrs
repz
pop
xor
data16
movsb
sbb
push
andb
sbb
inc
sub
fbstp
rorb
sarb
dec
pop
jle
xchg
popa
push
popf
gs
popf
and
cmp
test
sbb
mov
ret
and
rorl
sti
movsb
adc
loopne
fdivrs
fs
add
cmp
sub
or
xchg
mov
aam
movsb
pop
ret
fnstcw
cmp
pop
cwtl
aas
sti
dec
in
pop
cmpb
ja
cld
test
ret
jecxz
shl
mov
bound
test
cltd
push
adc
rcrb
push
bswap
push
pop
sbb
jmp
sbb
ret
and
jbe
icebp
inc
xchg
mov
je
cmpsb
inc
push
xchg
inc
incl
int
adcb
push
add
lock
xor
xor
lret
and
test
push
or
stos
push
pusha
pop
ss
sub
lret
mov
dec
xchg
mov
sbb
call
pop
push
or
or
push
in
xchg
roll
sub
pop
xchg
xor
xchg
mov
fstpt
or
jle
cmp
pushf
jecxz
push
dec
or
repz
ret
faddl
outsb
je
fildl
fidivrs
push
js
mov
sbb
lcall
and
out
dec
sbb
sbb
add
or
arpl
jb
push
call
addr16
stos
icebp
arpl
sbb
rcrb
out
lcall
stos
xchg
xchg
fucomip
jae
or
push
aas
jle
add
insl
inc
stos
jl
ret
mov
std
mov
scas
xor
adc
test
imul
jmp
fdivrl
cli
jmp
push
sbb
ljmp
es
cli
adc
or
jp
pop
lds
pop
scas
incb
add
xor
sbb
aam
int3
faddp
or
rorl
out
sti
insl
pop
out
leave
mov
jbe
sbb
xchg
cmp
das
add
iret
xor
jo
or
dec
ret
mov
sub
xchg
incl
xchg
ja
sbb
push
iret
lahf
jecxz
nop
stos
push
cmc
ret
mov
test
aam
mov
dec
dec
jecxz
pushf
sub
or
icebp
mov
xchg
std
jb
fisubrl
shlb
xor
ret
mov
shl
add
int3
jnp
push
push
dec
pop
loopne
into
adc
shrl
in
hlt
pop
outsl
adc
stos
mov
xchg
jbe
xchg
xor
xchg
sbb
dec
pop
or
rcrl
xor
imul
jg
mov
int
into
int
out
out
leave
fsubl
push
push
sti
inc
push
ss
mov
mov
std
aad
cmc
jg
sbb
cmp
loop
mov
lds
cmp
fucomp
mov
mov
cmc
dec
pop
fnstsw
addr16
mov
dec
mov
gs
iret
pop
mov
gs
mov
loopne
jne
scas
iret
jecxz
test
inc
sub
call
jmp
mov
pop
add
sub
sub
js
sub
out
ficoml
mov
add
cltd
mov
hlt
shl
fcoml
jmp
xor
push
xchg
bound
pop
or
dec
cmp
lods
subb
sub
das
scas
jbe
lahf
mov
lods
mov
inc
xchg
js
xchg
mov
jmp
xlat
mov
mov
iret
out
popa
mov
cld
adc
test
into
aad
dec
xor
xchg
cmpsl
cwtl
test
push
or
lods
pop
xor
cmpsb
sbb
fadd
in
sub
out
lods
daa
mov
mov
inc
aam
enter
mov
sbb
fs
das
cmp
ss
lcall
sub
mov
xor
bound
jge
add
sahf
pusha
lods
ss
xchg
pusha
aam
in
jge
pop
fwait
push
adc
dec
inc
add
mov
dec
pop
sub
std
das
xchg
int
inc
std
lods
jmp
sti
sub
test
xor
xor
mov
shll
jle
repnz
mov
push
leave
push
add
mov
add
add
enter
cmp
daa
sti
and
xor
jl
psraw
push
cmp
pop
jmp
push
dec
insb
rclb
and
push
adc
add
mov
stos
dec
pop
cs
mov
ret
jmp
insb
xchg
ja
pop
andb
xchg
sahf
bound
push
jmp
xchg
ljmp
inc
sbb
or
fldcw
dec
sbb
jp
pop
mov
sbb
jnp
scas
cmp
popf
dec
lock
cmp
out
add
jg
fidivs
test
cmp
xchg
aaa
out
repz
fucomp
orb
or
stos
or
mov
xor
mov
inc
clc
sbb
incl
sbb
je
cmpsl
aad
push
adc
jnp
add
mov
push
jbe
xchg
ljmp
and
jne
jnp
cmpsb
sbb
imul
xlat
or
cmp
jge
ja
cmpsl
adc
dec
lahf
test
ja
jnp
pop
sub
dec
push
push
out
insl
jne
push
xlat
mov
cld
inc
jg
jbe
cmpsb
out
and
std
mov
and
out
inc
sub
mov
lahf
jns
adc
in
mov
cwtl
aad
jmp
or
sub
mov
mov
call
dec
mov
and
inc
bsf
inc
mov
iret
mov
pop
and
or
pop
xchg
sub
decb
loope
mov
jecxz
add
and
push
push
or
test
lcall
ret
ljmp
push
sbb
push
sub
push
nop
jl
inc
mov
enter
mov
pop
mov
mov
sbb
fucom
repz
daa
stos
fsubs
int
push
jp
and
js
inc
mov
mov
mov
jne
cmpsl
stc
ror
stos
insb
xor
mov
mov
pushf
rcrb
aam
push
jb
adc
inc
fnstsw
jl
jp
xchg
outsl
lods
fmul
sub
cmpb
stos
xchg
mov
or
adc
sub
arpl
add
and
mov
aam
imul
mov
inc
daa
mov
scas
ljmp
inc
iret
jmp
inc
xchg
mov
pop
mov
cmpsb
arpl
and
cmpsb
movsb
imul
jbe
sub
arpl
and
inc
popl
out
push
mov
test
mov
rol
pusha
push
cmp
and
push
dec
roll
sub
stc
jg
test
int
sbb
stos
inc
dec
lods
add
insl
xor
fisttpl
fiadds
leave
addl
fdivl
mov
dec
insb
stos
orl
push
icebp
and
dec
in
pushf
xor
aas
imul
sahf
jge
lock
sbb
cmp
ss
out
push
fdivs
push
mov
xor
sbb
mov
cwtl
shlb
std
xchg
shll
mov
inc
or
movsl
jle
mov
push
outsb
cmp
ret
lret
insl
imul
sbbb
push
out
xor
js
mov
or
mov
mov
ss
sub
shr
enter
mov
mov
xor
mov
mov
and
mov
jle
pop
ss
data16
shll
jb
mov
sahf
inc
inc
test
lret
lret
out
dec
sbb
in
sbb
adc
testb
sub
adc
bound
xchg
xor
sub
add
pop
insl
xchg
sbb
cmp
fcoml
and
pop
repnz
cld
daa
push
jns
div
jae
lods
sbb
inc
cwtl
test
jmp
and
mov
xor
popf
nop
data16
sarl
hlt
pop
test
add
jnp
hlt
into
adcb
dec
pop
xor
lods
push
mov
inc
movsl
sub
outsb
mov
cmp
push
jp
jnp
add
pusha
xor
movsl
cmp
pop
sahf
clc
mov
mov
cmp
sub
pop
pop
inc
stc
jg
mov
aad
push
mov
jle
lcall
push
imul
dec
cli
sub
mov
lret
sub
sbb
jae
in
scas
nop
call
xor
test
pop
add
es
and
icebp
cli
jne
ss
mov
data16
cwtl
add
int3
das
or
and
sahf
mov
mov
call
mov
out
push
int
sub
mov
mov
xor
int
shrb
mov
push
mov
mov
push
push
lds
sub
outsb
add
movsl
inc
rolb
pop
dec
jmp
dec
jge
xor
inc
mov
inc
popa
pusha
test
and
adc
xchg
and
pop
mov
push
sub
cltd
stos
pop
or
mov
in
imul
repnz
jl
fdivl
ljmp
int3
cmp
stos
mov
shll
in
jns,pn
adc
je
dec
push
push
dec
push
sarl
shr
cmp
adc
xor
stos
fnstsw
xor
idivb
repz
jno
out
dec
jb
dec
pop
dec
inc
lahf
imul
fcomps
icebp
adc
push
aam
sbb
insl
in
pop
ret
mov
cmpsb
dec
cmp
pop
xchg
inc
nop
pusha
sub
sahf
sahf
xor
cmpsb
dec
or
aam
fcomps
fs
or
inc
and
cwtl
push
mov
popf
lods
aaa
mov
dec
sub
lahf
xchg
jl
xor
jns
or
lret
arpl
xchg
mov
cmp
mov
cmp
hlt
sbb
sub
lret
dec
add
icebp
out
and
psadbw
lret
mov
aad
jne
jl
inc
xor
popa
inc
push
test
loopne
jne
hlt
pop
xor
and
push
inc
inc
aam
ja
push
in
aas
pop
out
ds
sub
mov
push
sahf
mov
push
jo
out
push
out
and
and
shr
add
adc
negl
insb
stos
fisubrl
mov
dec
mov
cltd
cltd
pushf
jnp
js
sar
xchg
in
das
stos
and
test
sub
xor
push
and
stc
mov
arpl
cltd
ja
inc
jb
roll
cmp
push
call
inc
push
in
fxch
nop
sti
mov
xlat
pop
jo
stos
mov
dec
mov
adc
xchg
xchg
push
jg
loop
cmp
jbe
jbe
pop
sti
scas
jg
aad
cmpsb
pop
adc
bswap
jg
aaa
or
movsl
mov
add
xchg
add
xchg
out
mov
popa
or
cmp
pop
lock
and
les
in
mov
stos
adc
scas
mov
xchg
fisttps
lahf
dec
fs
adc
pop
rolb
sbb
stos
stos
push
cmp
sahf
or
loop
imul
adc
sub
incl
fmull
jo
dec
test
aam
fidivrs
adc
andl
gs
push
adc
lea
xor
xlat
stos
ds
lock
clc
cmpl
iret
mov
xchg
jo
mov
sub
jle
mov
or
or
sbb
gs
iret
les
sub
xor
stos
or
sub
and
xchg
pop
sub
push
lret
leave
mov
int3
lock
jbe
bound
mov
loop
xor
mov
shlb
adc
cmp
vmread
pop
mov
lock
xor
cltd
sti
loop
adcb
push
int
add
sbb
loop
imul
pop
lods
xchg
iret
push
insb
les
mov
jmp
sub
jmp
xor
fistpl
push
adc
jae
repz
mov
mov
jb
push
mov
nop
mov
xor
jge
mov
popf
gs
lods
mov
icebp
dec
aad
out
fmuls
xchg
scas
lock
repz
push
xor
jp
gs
int
sahf
ja
int3
test
jmp
in
into
push
push
dec
data16
jp
mov
cld
outsl
test
je
fwait
sub
xchg
sti
or
sar
xchg
push
scas
jl
sbb
mov
mov
xchg
push
movsl
pop
mov
rolb
add
sub
mov
fldl
dec
scas
fisttpl
adc
dec
mov
mov
leave
inc
cli
mov
ds
and
clc
xchg
cli
push
xchg
mov
jns
ror
pusha
add
out
push
mov
and
fisubs
loopne
fisubrl
andb
scas
lods
mov
call
cli
or
cltd
in
cwtl
into
mov
adc
rcrl
fwait
cs
mov
decb
iret
mov
leave
xchg
lods
pop
mov
jno
fists
fists
rcrl
add
arpl
lea
xor
stos
lret
xorl
call
repnz
fstpt
dec
cmp
sbb
ja
mov
mov
iret
gs
ss
subl
lods
stos
pop
or
jae
sub
dec
shll
insb
dec
dec
lds
ljmp
mov
cmp
push
xor
icebp
xchg
push
pop
enter
mov
rorl
jecxz
push
dec
in
jnp
and
add
sbb
mov
xchg
fildl
or
imull
mov
aas
push
ja
iret
jp
test
out
sub
sbb
jmp
xlat
jno
ss
ja
xor
inc
clc
sub
mov
mov
mov
add
aam
scas
imul
pop
dec
ficoms
fstpl
sti
fsubr
xchg
es
or
sbb
fisubs
add
rcr
sbb
mov
aad
imul
out
rclb
ret
push
cmp
stos
push
mov
shrb
pop
jmp
cmp
xchg
add
fs
call
dec
in
std
dec
divb
aas
out
mov
adc
push
data16
xchg
sub
pusha
push
jmp
cwtl
inc
lods
mov
out
add
sbb
cwtl
adc
cmpsb
jecxz
jbe
sub
pop
das
mov
leave
fildll
push
push
int
mov
shrb
inc
adc
jno
mov
jns
pop
bt
decl
pop
cmp
push
pop
inc
xchg
data16
pushf
mov
pop
idivl
gs
repz
push
cmc
mov
ss
insl
cli
rcrb
xchg
add
test
aam
movsl
sti
jle
aas
loopne
xor
and
ret
sub
test
or
loopne
insl
dec
fs
sbb
outsl
inc
icebp
sub
push
imul
adcl
push
lea
xchg
sbb
push
lods
dec
outsl
imull
xor
xchg
cmpsl
sti
inc
adc
jnp
inc
push
pop
jmp
and
leave
rclb
mov
movsb
cwtl
pop
fucomip
add
mov
dec
ds
cmp
dec
xchg
pop
mov
adcb
sarb
pop
cmp
enter
lods
std
stos
add
cmpsb
out
sti
mov
scas
in
lcall
mov
pop
imul
imul
pop
je
mov
ds
sarb
icebp
int3
inc
sub
adc
xchg
mov
and
mov
mov
push
loop
adc
je
dec
cmpsl
mov
pop
pop
outsl
mulb
pop
repz
lret
or
sub
les
aad
enter
pop
rcll
js
scas
pop
push
mov
add
push
adc
push
addr16
xor
test
cmp
dec
push
aas
pop
jo
xor
mov
sti
es
push
cmpsl
sbb
jnp
vandnpd
add
stos
dec
test
fidivl
jecxz
dec
fisubrl
lahf
lcall
test
les
push
mov
outsl
mov
mov
mov
popf
cmpsb
roll
jp
ljmp
xor
cmp
aaa
test
sub
popf
dec
into
pop
push
jg
and
push
push
add
pop
sub
mov
jl
fdivl
jnp
pop
add
call
mov
cmpb
les
jp
push
sbb
movsb
and
imul
test
mov
mov
fisttpll
fildl
push
xchg
adc
dec
mov
fwait
cltd
jl
outsl
lds
das
mov
pusha
or
mov
jmp
mov
in
pop
or
rorb
dec
stos
lahf
mov
adc
sbbb
sub
sbb
push
jg
pop
lods
xchg
pop
insb
ret
int
mov
sbb
xor
cmp
test
in
sub
arpl
xchg
cmp
push
lcall
xchg
jo
dec
imul
push
aam
cld
orb
inc
lret
pop
pop
out
dec
sarb
aam
mov
mov
adc
add
jg
xlat
sub
or
or
sub
pop
cltd
loope
repz
mov
loopne
iret
inc
adc
sbb
jb
insl
cld
inc
and
cli
addr16
push
les
fwait
hlt
xchg
and
fidivrl
xchg
xor
adc
lds
daa
jo
mov
fwait
repnz
xor
mov
test
mov
push
out
pop
xchg
xor
subb
sarb
or
fbstp
test
inc
nop
stos
jno
or
shrb
es
push
mov
loopne
cmpsb
les
sub
inc
cs
insl
fstpt
cwtl
xor
mov
xchg
or
adc
shlb
jg
jbe
dec
pop
fwait
divl
lds
and
dec
repz
cli
cmp
pop
xchg
mov
jb
nop
pop
push
mov
movntq
mov
lods
shll
rcr
cwtl
pop
imul
and
sbb
insl
dec
jmp
hlt
xchg
icebp
or
lcall
mov
test
jge
pushf
sbb
into
xchg
testb
sbb
rcrb
xchg
mov
adc
push
pushf
rorl
mov
xchg
insl
hlt
mov
mov
dec
fildll
dec
mov
clc
jmp
or
sub
sti
jbe
ret
jbe
leave
mov
inc
pop
pop
repnz
addr16
insb
jns
sbb
and
xor
mov
mov
push
out
test
xchg
std
cmpsb
xlat
loop
loop
rcll
mov
lahf
push
mov
jg
and
loop
out
popa
fdivrl
xchg
inc
imulb
bndstx
out
sahf
leave
xchg
fidivrs
mov
clc
arpl
push
cmp
test
or
movsl
add
movb
xchg
add
xor
cld
inc
call
push
mov
out
cld
mov
mov
xor
stc
les
es
out
into
mov
lods
pop
cmp
test
mov
outsl
lock
fsubrs
add
imulb
sbb
jne
imul
lret
or
nopl
pop
lods
ret
jl
or
fdivl
push
test
mov
cli
adc
aad
rcl
jnp
mov
dec
inc
stos
pop
sbb
jp
fsts
lea
out
pop
xchg
pop
hlt
push
push
aas
add
andb
pop
jbe
es
push
cmp
jmp
xor
add
mov
dec
and
jle
test
out
dec
shrl
shl
mov
mov
sub
es
cwtl
fs
mov
and
mov
push
push
pushf
inc
mov
xor
in
mov
imul
aaa
ficompl
pop
scas
pop
std
testl
dec
mov
pop
call
xchg
jnp
jp
push
les
shr
and
gs
sbb
sbb
fidivl
adc
out
xor
pop
or
das
mov
sbb
enter
js
mov
fs
ret
movsb
outsb
fcompl
cmp
xchg
loop
adc
push
call
mov
lds
in
adc
or
dec
xchg
sub
pop
in
sbb
mov
ret
adc
push
inc
sub
movsl
sahf
lock
xchg
or
jmp
nop
cmpsl
push
xor
add
in
add
cmp
cld
in
ja
pop
push
and
stos
push
hlt
aam
xorl
mov
mov
loope
adc
adc
mov
les
stc
insl
sub
outsb
andl
inc
shrl
scas
push
scas
fisttpll
or
js
sbb
pop
inc
mov
js
enter
mov
mov
shrl
loope
push
aam
fwait
xor
pop
ss
nop
mov
jp
cmp
add
and
mov
push
pop
ja
cmp
inc
subl
dec
popf
fwait
sub
mov
mov
inc
imul
jae
rorl
stos
jbe
mov
dec
fidivrl
add
sbb
fisttpl
xchg
mov
test
repz
pop
inc
add
cmpps
cmp
idivb
mov
cwtl
test
inc
ds
out
add
xchg
lods
outsl
dec
and
dec
jg
mov
sti
clc
xchg
ret
out
mov
aad
dec
xchg
jne
pop
jbe
jae
aam
popf
cmp
jg
adc
adc
sti
aaa
fildll
mov
inc
call
mov
sbb
scas
sub
dec
mov
jg
xchg
es
add
lcall
cmp
fwait
mov
fnstsw
mov
fistpl
fidivrs
xchg
xor
sahf
das
cld
push
ss
frstor
push
in
cli
adc
or
pop
ss
push
cld
xchg
sbb
dec
into
fdivrl
xor
and
hlt
cmp
or
loopne
pop
sub
lret
addr16
rolb
enter
add
and
outsl
cmpsb
clc
sahf
mov
call
adc
gs
xchg
popl
xchg
pusha
jns
arpl
inc
mov
ljmp
into
mov
sub
test
int
mov
inc
cmpsl
xor
cli
mov
dec
sub
cmpsb
cmpsb
in
jb
dec
ja
fwait
and
sub
add
xchg
cmpsl
or
mov
cs
xor
fs
rclb
out
sbb
xor
icebp
xchg
xchg
test
fs
mov
test
and
jmp
clc
cmpsl
inc
stos
jbe
int3
adc
jmp
and
fcmovne
and
loope
daa
rcr
push
shl
cmp
mov
cmpb
add
sbb
mov
cmp
mov
es
mov
cmc
dec
popf
cmpsl
dec
pop
mov
cltd
dec
movl
insl
les
push
imul
popa
rclb
stos
into
xchg
push
out
out
test
add
and
pop
dec
cli
lods
idivb
lock
iret
fildl
arpl
repz
pop
mov
xorl
sbb
jp
insl
sti
call
fst
fldz
test
out
scas
hlt
test
je
fs
cmp
fcomps
fs
hlt
push
orl
sub
sub
mov
jecxz
mov
mov
jo
jne
outsb
daa
inc
jno
fdivs
jl
inc
cld
sbb
add
je
arpl
xchg
popa
adc
lock
pop
cwtl
xchg
out
dec
insb
test
imul
adc
lods
ret
sbb
ret
movsb
notl
push
jb
sbb
jnp
and
inc
jmp
rcll
mov
add
mov
lret
imul
and
and
cli
adc
addl
mov
jae
clc
cmpsl
scas
sbb
dec
xor
adc
ljmp
dec
push
mov
mov
jl
and
std
mov
and
fidivs
out
push
pop
inc
lods
mov
mov
adcb
dec
or
out
cld
inc
test
pop
icebp
iret
stos
adc
loop
inc
jns
out
sub
dec
and
dec
cmp
in
mov
jg
lods
cmp
sbbb
sub
mov
mov
fld
push
cmc
ja
clc
lods
jno
int3
mov
push
push
arpl
filds
aas
dec
lock
adc
dec
add
jb
pop
out
das
ja
xchg
or
xchg
pop
xor
sahf
mov
mov
bound
mov
pop
mov
xor
das
lods
js
adc
movsb
xchg
js
pop
inc
lret
cltd
sbb
mov
xlat
movd
mov
ds
lcall
pop
fnsave
scas
sub
dec
ss
lea
shr
xchg
lret
jb
mov
jp
cmp
dec
hlt
dec
nop
dec
aad
shll
pop
test
pop
push
push
cmp
cltd
std
xor
jg
outsb
cmp
aad
jne
sti
or
iret
sbb
es
pop
jns
insb
divl
ljmp
adc
das
sub
adc
push
inc
ds
mov
in
add
push
inc
xchg
push
fmull
std
or
in
jo
addl
scas
cmp
popa
xchg
sub
call
mov
das
addr16
pop
aaa
sti
xlat
push
out
mov
jl
inc
popl
xchg
pmulhw
mov
jne
push
push
ljmp
ds
push
push
mov
clc
aaa
dec
jo
mov
jle
idivb
lods
jno
ret
push
inc
inc
das
lds
dec
pop
outsl
lods
xor
loop
cltd
push
mov
decl
xlat
and
aad
jecxz
push
cmp
inc
pop
pushf
mov
push
es
dec
loope
mov
add
push
imul
loope
jae
nop
mov
pop
in
cmpsl
pop
mov
add
jmp
mov
ror
fmull
lds
pop
repz
mov
push
jmp
pop
lea
cmp
jp
test
xchg
ror
int
loope
jg
sbb
mov
fldenv
inc
rcrb
mov
sahf
aaa
or
movsb
xor
out
gs
cmp
shr
pop
cmp
inc
xor
push
and
jae
dec
jb
ja
js
mov
fstl
lret
xor
ds
in
sub
mov
js
xorb
es
test
mov
out
pop
mov
jne
out
jmp
sub
cmpsl
xchg
mov
div
mov
rcll
inc
mov
ja
inc
fadds
dec
loope
nop
sahf
in
jle
xor
scas
lock
push
out
mov
rcl
cmc
fcomps
ja
xchg
dec
dec
dec
sbb
xor
mov
shr
mov
xor
cmpsl
sbb
push
sbb
pop
ja
imul
insl
ja
jge
in
jl
data16
divb
pop
sbb
inc
outsb
mov
rcrl
dec
notl
cmpl
scas
jae
or
insb
jg
out
dec
jecxz
sbb
push
out
gs
pop
xchg
shlb
fstl
mov
scas
loop
ja
inc
shlb
out
shl
push
or
xchg
imul
xchg
popf
push
repnz
repz
shll
scas
mov
pop
mov
pop
dec
mov
cmp
xor
cwtl
aam
mov
mov
out
or
fbstp
add
sbb
or
in
push
pop
push
mov
xchg
rcll
ret
xor
and
scas
stos
xchg
out
std
hlt
icebp
enter
fiadds
iret
inc
fiaddl
and
fidivrs
pop
pop
iret
xor
jbe
sub
inc
or
into
pop
movsl
jle
cs
lock
and
cmp
faddl
mov
jg
dec
lock
scas
cwtl
xchg
lret
cmc
ss
cmp
ret
divl
das
cmp
add
pop
mov
mov
ret
add
sub
test
mov
xchg
sub
call
aaa
imull
cmpsb
sub
push
aaa
cmp
or
xchg
inc
ret
push
jo
jb
dec
arpl
dec
pop
inc
cmp
in
mov
cli
out
js
adc
push
in
pop
and
in
std
je
cs
sbb
inc
cmp
imul
notl
hlt
cmpsb
sbb
pop
xchg
xchg
mov
dec
sbb
icebp
loopne
rcrb
dec
mov
mov
ret
popf
mov
xor
mov
repz
cwtl
test
or
inc
pop
popf
push
pop
jle
imull
cli
cltd
popf
xchg
das
mov
pop
add
into
ljmp
adc
outsl
push
fs
push
bsr
in
shll
je
push
xor
lods
leave
es
pop
sbb
insb
mov
pop
insb
fists
cld
cmpsl
cmp
cwtl
xor
push
sub
fs
sahf
or
mov
sbb
jo
jge
mov
daa
mov
mov
in
mov
idivb
call
jg
test
push
cmp
mov
in
aas
cmp
mov
lret
lods
mov
arpl
adc
call
push
call
cmpsl
shl
push
pushf
sub
stos
jbe
pushf
push
sar
push
fldcw
xchg
dec
incl
in
mov
adc
mov
push
xor
jmp
jp
out
cld
dec
xchg
cld
xchg
cmp
lods
repnz
sub
pop
repz
movsb
xchg
out
dec
jmp
out
sbb
add
sti
inc
jae
nop
movsl
add
out
mov
mov
sahf
xor
movsl
cmp
push
js
add
mov
inc
jns
int3
mov
test
dec
int
jg
movsb
jmp
out
outsl
inc
push
xor
orb
insl
xchg
ss
cs
popa
aaa
imul
enter
jecxz
scas
and
mov
call
add
cli
subl
cld
sbb
sub
loope,pt
or
dec
and
sub
arpl
fistpl
daa
and
pop
pop
push
and
jmp
clc
jb
push
jbe
das
add
or
imul
es
lods
stc
xchg
mov
cltd
mov
sbb
fisubs
sub
gs
lahf
cmpsb
ret
inc
sbb
cld
jge
or
and
adc
stos
inc
add
imul
lahf
jl
test
xchg
cmp
push
fadd
sub
subl
stc
inc
mov
push
fwait
jne
ljmp
scas
push
cld
mov
jb
stos
xchg
cmp
test
inc
cmp
jle
aas
mov
pop
pusha
push
rcl
pop
lret
cmpsb
sub
xorb
mov
notl
sub
orb
lods
aad
fs
sub
pushf
push
jno
lds
negb
jle
int3
adc
into
inc
jno
mov
icebp
das
xor
arpl
jbe
xchg
ljmp
cmpsl
ds
sub
out
xchg
fildll
test
dec
xchg
ss
mov
mov
inc
les
push
mov
inc
sbb
inc
mov
testb
popa
jmp
dec
dec
lods
testb
jb
dec
movsl
fistpl
lds
and
outsl
push
cmp
fdivrl
shrb
gs
xchg
adc
cs
jne
aas
add
lea
xor
xor
test
mov
adc
ss
cmpsl
aas
sbb
inc
mov
or
stos
int
lahf
leave
hlt
jle
push
in
xchg
or
lods
add
push
xor
mov
cmc
es
mov
shrl
js
and
loop
sbb
scas
imul
sbb
popa
into
pop
adc
adc
and
dec
jmp
fwait
into
fsubrs
clc
mov
and
sbbb
jl
xor
mov
xlat
es
xor
dec
pop
mov
sub
stc
xor
xor
lods
mov
cmp
inc
lods
pusha
mov
xchg
std
insl
adc
cmp
pop
mov
lahf
ljmp
out
scas
addr16
cmp
mov
stos
add
cmp
sub
lods
jne
filds
push
icebp
loope
and
popa
cwtl
dec
xchg
std
mov
les
insl
jbe
pop
fmulp
mov
dec
and
dec
xchg
jo
dec
jb
or
rcr
cmpsb
outsl
push
push
dec
es
in
sbbl
imul
jecxz
add
in
jg
xlat
insl
call
or
pop
insb
aad
pop
pop
push
xchg
out
mov
in
out
aaa
sbb
pop
cmc
mov
mov
jmp
sbb
pop
cli
pop
dec
lcall
sbb
sbb
shrb
jg
mov
dec
out
or
adc
scas
xor
es
and
int3
push
aas
mov
pop
lret
movl
mov
xchg
wrmsr
cwtl
push
xchg
mov
sahf
jno
lret
int3
jns
jae
or
jbe
outsb
push
jmp
insb
xorl
stc
fst
cmc
push
sbb
aam
add
daa
neg
fisubs
gs
mov
loope
fstl
loop
dec
cmp
adc
xchg
xor
mov
loope
icebp
popa
or
adc
mov
fld
pop
bound
out
iret
hlt
movl
lret
bound
or
inc
and
mov
rclb
loopne
jg
adc
cmp
pop
sahf
lret
pop
cld
pop
and
add
adc
mov
xchg
fs
rclb
daa
setae
sbb
pop
pop
loope
jns
cs
jne
mov
cmpsb
pop
lcall
movsb
movsl
mov
mov
ret
push
push
or
cmpsb
sbb
jl
or
jecxz
add
sbb
lret
rclb
mov
xchg
outsb
loope
push
outsl
mov
rcrb
cmp
mov
xlat
out
sbb
mov
shrb
adc
fdiv
push
jb
insl
cmp
sbb
imul
pop
sub
outsl
ret
add
cmp
scas
icebp
rcrl
jno
dec
cmp
in
push
ljmp
jb
orl
jmp
dec
je
xchg
dec
xchg
jmp
and
popa
adc
lds
ror
jg
fucomip
jecxz
mov
call
sbb
lods
cmpsl
mov
add
movsbl
int
lret
out
sub
fstl
decl
mov
push
push
mov
sbb
in
shrl
iret
out
cmp
inc
aad
cmp
out
pmaddwd
lret
sub
push
lods
movsb
pusha
jmp
push
je
jle
cmp
fisubrl
cmpb
mov
inc
stos
xlat
loopne
gs
aaa
lock
cmp
push
sahf
outsb
add
or
adc
je
jmp
mov
xchg
ret
insb
pop
popa
ss
xchg
out
test
test
sarb
ljmp
pushf
push
dec
mov
push
xchg
fcmovnb
into
add
cmp
dec
aam
dec
int3
out
xchg
jb
insb
inc
xor
xchg
and
sbb
in
gs
ffree
sbb
repnz
aam
popf
cmp
out
test
jae
movsl
xor
das
daa
test
fistpl
fnsave
mov
mov
int
add
sbb
xchg
subb
mov
pop
repnz
loopne
dec
lods
jns
in
dec
sub
mov
push
pop
movsl
adc
clc
ss
mov
repnz
jno
sbb
xchg
pop
inc
xor
jl
jne
push
lods
jp
xchg
pusha
adc
xor
sub
or
mov
push
mov
es
adc
mov
mov
ds
push
jo
cmc
xor
inc
jmp
jns
cmpsl
out
enter
jo
adcl
xchg
jbe
adc
pop
addr16
dec
shlb
ficoml
test
cld
mov
push
lods
pop
jecxz
bndstx
icebp
popa
mov
pop
mov
cmp
sbb
rol
fdivl
lcall
adc
and
addr16
cmpsb
lods
jbe
out
push
lahf
mov
push
xor
push
movsl
dec
in
scas
dec
xor
push
aam
out
add
xorb
mov
aam
in
ljmp
insl
ja
movl
xlat
cmp
les
cli
push
lcall
push
cmp
jb
push
rol
scas
ficoml
xor
push
inc
push
add
popa
out
cmpsb
les
xchg
mov
jg
movsl
cs
mov
jno
das
push
inc
push
je
sbb
shlb
jle
mov
xchg
int
push
shl
into
xchg
xchg
inc
pusha
aam
jmp
fsubrp
sub
push
test
add
scas
sbb
lret
jp
inc
flds
pop
adc
and
nop
or
add
jnp
mov
pop
int
pop
fcmovu
mov
pop
jge
inc
cltd
adc
fmulp
xchg
test
jno
push
cs
imul
out
outsl
mov
fsubr
and
xlat
or
in
shrb
adc
jnp
int
mov
andb
lcall
insb
inc
js
fmull
xchg
sub
lahf
adc
sbb
mov
shrb
add
mov
mov
xor
cld
fdivrs
insl
ja
sbb
mov
popf
out
mov
loope
xchg
into
imul
push
pop
or
fbstp
push
xor
mov
sbb
push
jo
push
xor
inc
mov
icebp
cmpsl
xchg
add
cmp
repz
nop
cltd
sbb
jne
scas
xor
push
pop
cmp
push
repnz
pop
rolb
mov
fiaddl
push
nop
shll
add
add
out
or
hlt
mov
js
dec
pop
nop
pop
inc
pop
ja
mov
fsts
popl
cmp
addb
or
jae
sbb
pop
dec
lock
and
shl
or
xchg
inc
jl
in
mov
mov
adc
mov
repz
aad
push
mov
imul
icebp
mov
push
movsb
mov
and
movsl
shr
and
cmp
adc
ss
enter
mov
and
fdivrs
outsb
aaa
sub
dec
pop
rcrl
mov
cmpsl
xor
fnstenv
js
inc
pop
mov
cmpl
ltr
pop
mov
popf
sbb
add
mov
nop
mov
rcrb
shll
jmp
jle
pop
js
add
jbe
jmp
into
imul
xor
dec
and
shll
mov
dec
xor
jg
test
vpmulhw
popf
je
mov
xchg
sti
inc
nop
mov
mov
mov
mov
fistpll
pop
dec
add
fnsave
jecxz
loope
jle
lret
icebp
in
xor
rcll
cmpsb
and
add
int
sahf
and
or
fstpt
cmpsl
jns
scas
or
hlt
cmp
lds
cltd
cmp
adc
jne
xchg
pop
nop
cli
push
inc
mov
pop
fnsave
push
roll
pop
popa
clc
or
call
xchg
or
shrl
scas
fmulp
and
cld
xor
sahf
cmpsl
lcall
out
test
stos
mov
andl
psubsb
jbe
cld
out
cmp
fidivrs
decb
and
add
daa
ss
push
xor
stos
jge
movsb
sbb
and
jecxz
inc
pop
out
inc
cmp
movsb
cmp
xor
xor
call
call
shlb
std
rcl
mov
imul
jmp
or
push
imul
enter
dec
dec
out
jo
adc
aam
loop
int3
arpl
sbb
mov
and
out
xchg
hlt
aaa
outsb
cs
sbb
jne,pt
shrb
inc
popf
outsb
cmp
push
cltd
inc
enter
bound
test
pop
sub
iret
push
inc
pop
push
fildll
inc
popa
add
es
sbb
sbb
dec
xchg
pop
imul
scas
mov
sbb
mov
cmp
push
pop
inc
in
into
mov
jae
leave
inc
shrl
adc
mov
xchg
ds
lret
dec
loop
and
cs
push
mov
mov
jnp
mov
pushf
xor
xchg
in
or
out
cld
xchg
mov
test
and
mov
test
inc
fidivrs
mov
loopne
test
xchg
arpl
imul
xor
cmp
dec
sbb
inc
cmpsb
pop
xor
xchg
sbb
iret
lds
dec
and
cmp
and
loop
iret
ss
add
std
incb
lds
fisubrs
pushf
insb
repz
lds
out
mov
or
xchg
push
mov
movhps
dec
jns
fucomi
pushf
in
or
pop
out
adc
pop
pop
push
clc
or
loop
pusha
test
out
pop
repnz
mov
adc
adc
push
add
adc
mov
adc
inc
push
sub
jnp
fisubrl
mov
loopne
je
lods
push
mov
loope
rcrb
dec
fs
adc
andl
add
outsl
add
cmp
push
mov
adc
push
rorl
out
cld
pop
adc
jge
test
jle
xchg
dec
pop
scas
imul
addr16
nop
mov
push
je
in
call
adc
xchg
not
sbb
pusha
xbegin
and
movsl
idivl
leave
mov
xchg
repz
jns
add
xor
test
leave
mov
or
cmp
dec
add
in
outsl
sti
leave
push
pushf
sbb
leave
mov
mul
pushl
loope
or
pushf
cmp
mov
add
adc
add
out
scas
sahf
sub
addl
sbb
test
shll
ss
nop
mov
fs
jno
jns
cmc
xchg
sub
fstpt
rcrb
jns
pop
cmpb
std
notb
negl
xchg
push
mov
and
xchg
daa
lods
ss
mov
clc
out
cwtl
push
or
arpl
insb
and
test
mov
adc
pop
pop
push
into
xor
add
int3
pop
cmp
mov
jg
dec
stos
mov
push
mov
les
mov
cmp
pusha
add
clc
xchg
mov
sub
jnp
dec
and
test
dec
mov
orb
cmpsb
outsb
dec
stos
sub
incl
mov
insl
loop
dec
mov
sbb
aas
inc
daa
into
xchg
movb
arpl
setne
bound
js
lcall
and
push
mov
test
ficompl
jmp
aad
adc
scas
paddw
or
insb
adc
or
sub
mov
inc
fimull
push
and
clc
out
in
imul
push
int3
pop
pop
es
mov
out
xchg
sbbb
mov
fwait
stos
pusha
ss
shll
das
outsb
mov
sti
sbb
andl
ss
adc
leave
ss
jo
aas
mov
mov
data16
test
xor
adc
sbb
jmp
roll
movsb
pop
cmp
xor
jno
xlat
insl
clc
cmp
imul
cld
lods
andl
pushf
or
int
push
test
cmp
or
inc
inc
cmpsb
les
adc
push
shrl
push
sahf
ds
inc
repnz
cld
inc
ror
mov
pop
mov
stc
inc
cwtl
lods
enter
inc
add
out
test
arpl
and
jbe
aas
test
loopne
loopne
in
push
mov
mov
mov
ret
mov
shrb
int3
jb
mov
xchg
xchg
sub
adc
test
cmp
aas
in
add
or
popf
mov
out
jnp
cmp
sbbl
xchg
adc
xchg
mov
push
movsl
mov
in
sub
inc
js
mov
or
and
aas
popf
js
mov
in
mov
cli
cmp
inc
fsubrl
jecxz
in
popa
push
push
aam
ss
popa
push
aaa
mov
dec
insl
cwtl
adc
xlat
mov
add
mov
ja
stos
jmp
shlb
je
jmp
cli
loope
push
push
outsb
sbb
arpl
push
sbbl
hlt
mov
imul
repnz
mov
std
pop
mov
mov
test
dec
xchg
jae
mov
jg
push
cmp
repz
in
pop
mov
repnz
pop
inc
push
cltd
icebp
lahf
stos
mov
decb
push
push
mov
aad
enter
mov
out
dec
scas
pushf
rcrb
adc
mov
scas
fsubrl
movsl
cmp
cmpsl
fcomps
jmp
mov
ss
pop
pop
sahf
push
lret
cmp
lret
in
test
dec
xchg
or
xchg
add
dec
stos
dec
insl
xor
mov
cmp
neg
mov
xor
push
push
call
add
jno
repnz
montmul
cmpsb
les
mov
mov
fcmovnu
jno
adc
movsl
lock
xor
mov
cltd
xor
jb
mov
loope
leave
push
xor
int3
jecxz
push
pop
xlat
mov
push
adc
sbb
ss
inc
mov
ret
xchg
sub
sub
sti
push
cmp
nop
insl
sbbb
push
lret
cmpsl
arpl
push
cwtl
mov
push
xchg
test
insb
leave
pop
jle
pop
mov
gs
insl
sbb
pop
mov
dec
arpl
cmpsl
mov
fisubrs
cmp
cmp
out
cwtl
mull
stos
movsl
push
in
outsl
sarl
sbb
xchg
sub
and
jge
add
jnp
std
lods
dec
cmpb
inc
xor
pop
repz
aam
cwtl
lods
jg
xchg
push
or
das
mov
stos
inc
cs
xor
stos
ds
push
mov
fcmovu
jbe
mov
and
lds
jno
arpl
push
sub
jg
test
mov
insl
sub
lock
add
or
popa
clc
shlb
push
icebp
push
test
enter
push
xor
mov
jae
inc
mov
out
test
call
mov
xchg
jmp
fnsave
xlat
repz
lahf
cmp
jge
pop
jmp
shll
or
and
pop
lahf
jge
add
xor
and
lcall
mov
dec
mov
xlat
dec
mov
or
pavgw
mov
mov
push
jns
imul
sti
fwait
push
and
frstor
adc
lret
negb
pop
loope
push
pop
cmp
xor
mov
push
jne
adc
cmc
add
nop
jnp
inc
add
jp
and
adc
jp
in
movsb
jmp
ds
mov
into
xor
pop
dec
inc
or
inc
lods
mov
aas
mov
pop
sbbl
sbb
lahf
stos
inc
add
loop
jecxz
movb
fadd
xchg
lods
lret
addr16
adc
jno
cmc
xor
adc
jp
pushf
pop
inc
adc
lret
and
sbb
push
test
fwait
pop
pop
sahf
or
out
test
ljmp
mov
dec
insb
inc
scas
testl
sahf
push
ror
dec
mov
dec
pop
pop
pusha
mov
pusha
mov
test
arpl
sub
dec
adcb
cmc
cltd
std
shll
adcb
jo
or
fimuls
andb
movsb
xchg
fnsave
pop
inc
xchg
xchg
xlat
mov
shrb
sbb
xchg
sub
dec
je
or
movsl
pop
dec
pop
or
or
imul
push
lahf
or
cmpb
jno
mov
pop
ja
outsl
rcl
sbb
mov
ljmp
ret
in
fisubrl
jbe
mov
loopne
stos
test
data16
ss
in
and
pop
je
and
and
cmp
inc
push
test
jbe
adc
pop
stos
cwtl
out
push
cmc
mov
nop
cwtl
in
lcall
aas
incb
sbb
inc
scas
call
or
sub
notl
mull
je
lock
pop
push
negl
or
push
mov
shll
addl
or
cmpsl
inc
jns
jmp
iret
enter
cmp
movswl
lods
sub
push
cmp
div
scas
icebp
jge
push
add
hlt
and
shlb
sti
mov
fdivrs
cmp
jbe
ficomps
and
add
mov
data16
test
stc
mov
cmp
ss
jns
subb
pop
and
inc
sbb
xchg
sbb
icebp
or
sti
cwtl
das
sub
lcall
mov
sar
into
cmp
lods
mov
dec
pop
mov
in
rclb
jp
and
stc
cmpsb
push
add
movsb
or
sbb
jb
adc
ja
iret
push
out
aas
fdivr
inc
cs
push
je
sbb
out
or
fldcw
inc
push
stos
dec
mov
xor
int
push
mov
mov
pop
xor
aas
loope
push
or
jp
mov
inc
popf
cmpsb
add
and
out
sahf
es
add
loopne
or
mov
push
push
das
jg
cmpsl
mov
mov
pop
inc
mov
mov
sub
fimull
and
or
jp
mov
clc
mov
sbb
imul
aas
xchg
dec
popf
rcrl
dec
aaa
call
std
daa
iret
lods
sti
jne
push
cli
test
add
pop
cmp
inc
jle
mov
dec
dec
sarl
xor
jle
adcb
aad
addl
loope
push
push
leave
lret
or
pop
inc
pusha
daa
add
scas
psrad
sub
faddl
insb
adc
mov
pop
push
fstpt
arpl
sub
jno
repz
faddl
in
cmp
pop
jecxz
fs
loope
cmp
outsb
clc
movsl
in
dec
in
push
add
xor
insb
rcr
xor
push
inc
pop
sbb
cli
inc
adc
add
hlt
adc
cli
xorb
mov
push
hlt
addr16
push
sbb
push
mov
sub
decl
and
inc
or
or
and
scas
push
push
xor
jbe
and
jnp
mov
mov
xlat
cs
daa
cmc
pop
inc
sahf
pop
repz
js,pt
mov
jno
ret
and
sub
inc
xlat
rorb
xchg
mov
and
or
cmp
pusha
mov
insb
lods
mov
cli
or
xor
mov
jnp
dec
lods
adc
dec
out
fistl
and
addr16
dec
push
fdivs
mov
xchg
dec
xor
push
sbb
icebp
lret
fs
sbb
or
push
xchg
out
xorl
fsts
adc
sub
sarb
data16
ror
sarb
mov
mov
loopne
out
sbb
dec
pop
cltd
xchg
mov
clc
aad
add
dec
ret
divl
gs
xlat
in
nop
daa
xchg
add
push
je
leave
mov
push
ljmp
sbb
stc
cmp
mov
outsb
out
jno
sbb
pop
dec
movsl
mov
mov
jb
shll
mov
xchg
ja
push
mov
dec
js
inc
ret
xor
inc
popa
dec
cld
sbb
mov
aad
idivb
mov
pop
dec
jecxz
pop
xor
add
daa
jle
sub
jae
and
jp
add
xlat
xor
and
fcompl
or
out
add
pushf
add
mov
test
lahf
add
leave
call
push
xor
mov
mov
std
insb
inc
mov
jb
int3
roll
stos
cld
push
sar
push
add
in
sbb
hlt
insb
movsb
cmp
push
pop
cwtl
cmp
sbb
into
xor
and
in
rclb
push
insl
jge
mov
xchg
jb
adc
mov
iret
pushf
mov
int
sub
jnp
out
repnz
xchg
lds
ja
jle
push
cwtl
arpl
popf
push
test
cld
push
insl
or
add
pop
jmp
ret
xchg
call
push
mov
mov
jns
xchg
aad
aam
jg
cmp
mov
lods
hlt
into
movsb
or
movsl
xlat
cmp
lods
or
and
imul
xchg
mov
dec
dec
push
jge
out
cmpsl
jmp
add
jmp
sti
clc
sub
std
decl
jp
cmp
fidivrs
lea
mov
ds
lahf
sahf
jnp
lret
mov
out
mov
fs
mov
dec
or
ds
outsl
sbb
mov
mov
mov
mov
inc
js
adcl
sbb
mov
cs
jae
cwtl
cmpsl
pop
cltd
sub
cltd
icebp
pushf
or
aaa
mov
dec
push
in
jg
loop
jg
jae
mov
es
arpl
loop
bound
xor
mov
test
lahf
sarl
lock
jp
push
divl
es
jb
sbb
shll
jmp
mov
or
movsl
push
es
je
or
xor
add
lods
push
add
mov
and
push
cmpsb
jbe
lock
pop
inc
and
xor
int
inc
xor
int
sbb
pop
int
mov
xchg
dec
push
mov
push
scas
mov
rorl
pop
ja
pop
push
fbstp
cmp
add
lret
inc
adc
std
and
test
jl
cmpsb
int
fnstcw
xchg
jp
lods
mov
js
add
mov
aas
dec
jmp
add
pop
jbe
or
gs
int3
jecxz
lods
cmp
fwait
dec
in
inc
cmp
cli
test
sub
fldcw
data16
imul
inc
fcompp
mov
adc
cmpsl
fisubl
out
sub
imul
add
nop
hlt
popl
popf
xchg
adc
adc
movsl
inc
sbb
dec
subl
mov
push
cmpsb
mov
ret
popf
xor
sahf
dec
bound
lret
out
pop
shrb
inc
mov
cmp
cmp
mov
repz
and
sbb
stc
pop
dec
dec
subb
push
ror
or
xlat
repz
push
push
movb
jecxz
jle
mov
cmp
dec
repz
ja
pop
xor
jmp
dec
mov
or
iret
scas
and
sub
iret
push
stc
inc
jns
fldt
ja
scas
xchg
dec
mov
lds
int
and
enter
mov
or
outsb
xchg
aaa
stos
aam
pop
fcompl
push
outsb
mov
mov
leave
lods
jb
and
lret
std
fucom
pop
xchg
int3
add
sbb
decb
jmp
pop
dec
pop
mov
fimuls
lret
dec
mov
cmpsl
or
daa
adc
pop
test
xor
xlat
fs
or
ss
mov
sarl
lret
rolb
imul
outsl
movsl
mov
incb
jl
pop
mov
test
pop
test
repnz
adc
cmpsb
bound
je
dec
xor
pop
ficoml
popf
jne
mov
and
clc
push
fidivl
pushf
xchg
out
cmc
lea
mov
mov
lret
pop
sub
insl
sar
dec
lcall
or
dec
mov
repz
sub
jge
cmp
xor
sbb
scas
sub
cmp
push
scas
movsl
xor
dec
push
stos
stos
fs
xchg
adc
shlb
rol
es
adc
cwtl
mov
sbb
fucom
mov
cmp
out
or
iret
mov
sbb
or
xor
hlt
test
lret
in
mov
insb
mov
arpl
ljmp
xlat
pop
sahf
pop
out
pop
mov
push
cmpl
xchg
stc
jge
mov
ret
pop
clc
push
dec
jecxz
push
insl
aam
addr16
jl
leave
mov
loopne
ret
test
cld
push
daa
add
clc
icebp
mov
enter
jo
jg
and
dec
enter
outsb
into
and
jg
ret
mov
aam
jmp
pop
out
mov
pcmpeqd
adc
loope
or
mov
xor
mov
std
test
das
add
iret
push
jae
je
or
in
dec
pop
sbb
in
pop
sbb
sbb
adc
xchg
push
jbe
mov
sbb
sbb
cmp
xchg
inc
pop
mov
xchg
xchg
or
mov
jle
sbb
xchg
adc
push
movsl
mov
fldl2t
push
test
pop
xchg
dec
mov
jmp
adc
xchg
xchg
xor
add
mov
std
pop
bound
adcl
je
mov
scas
sbb
rorb
xchg
sub
cwtl
enter
dec
jecxz
daa
das
cmc
sub
test
push
mov
iret
scas
arpl
cltd
repz
and
mov
ret
das
add
add
push
out
xor
jne
cmpl
jns
mov
pop
mov
push
outsb
mov
xlat
push
xor
mov
mov
jg
sti
cmpsl
dec
sbb
ljmp
arpl
into
xor
arpl
aaa
dec
sbb
cmc
push
add
out
dec
xor
popf
lods
push
mov
jecxz
lods
ret
loopne
hlt
push
xor
mov
in
mov
push
mov
mov
cmpsl
and
das
js
dec
shrl
adc
jne
out
xchg
lods
vmovapd
nop
pop
and
xchg
xchg
mov
xchg
mov
in
out
in
pop
lods
pop
dec
dec
pop
mov
iret
ret
sarb
fsts
sub
loope
pop
lcall
andb
int
dec
inc
popf
and
pop
outsb
add
jl
mov
aad
xchg
jo
push
mov
sbb
popf
lods
into
lods
fnstsw
sbbb
push
sub
push
jo
or
mov
mov
push
adcl
or
lods
cmp
frndint
xchg
scas
aaa
or
adc
mov
leave
fists
int
inc
inc
bound
mov
and
pop
cmp
aaa
out
imul
je
rol
and
cmpsl
mov
orb
push
popf
in
lret
movsb
jo
fsubl
inc
sbb
xchg
dec
sbb
idivl
call
sbb
leave
sub
cmp
mov
push
jmp
cmp
es
dec
xor
jne
popf
sbb
cmp
imulb
bound
adc
insl
pop
jmp
adc
adc
into
cmp
out
push
adc
cmp
xor
imul
pusha
mov
fldenv
and
mov
rol
jbe
mov
movsl
mov
cmpsl
hlt
in
fsts
cmp
aaa
arpl
mov
xchg
inc
scas
or
ficoml
sub
inc
dec
out
icebp
inc
inc
lods
inc
push
dec
scas
mov
popa
stos
inc
adc
push
pusha
out
add
fsub
lock
stos
add
ja
push
cmpsl
sti
xchg
pop
cmc
sahf
sub
add
ret
test
pop
in
shrb
sub
pop
fnsave
loopne
fbstp
in
test
orb
aad
inc
mov
xor
mov
mov
pop
dec
mov
adc
cmp
fcomps
jnp
mov
lret
jo
cwtl
push
mulb
ret
out
adc
int
push
outsb
cmp
xor
lret
popa
xchg
pop
ds
xchg
movsb
and
mov
or
lods
cmpb
fucomi
mov
clc
push
rcl
sahf
sub
cmp
lcall
cmp
mov
xor
lods
mov
repz
sahf
aas
sti
push
das
sub
insl
inc
push
out
mov
push
sbb
push
js
sahf
inc
pop
add
or
movsl
jo
scas
fimull
add
sbb
test
lret
addl
jle
add
push
gs
mov
out
ret
xor
pusha
or
cltd
cmp
push
insl
loopne
repnz
push
xchg
push
add
dec
dec
jae
cmpsb
std
shrl
sub
push
mov
add
imul
std
and
ss
jbe
rorb
adc
mov
testb
es
in
out
jge
stos
in
mov
xor
adc
jle
lods
int3
xor
orb
xchg
movsl
sub
fldcw
dec
ret
lret
jecxz
arpl
push
fisubs
test
fs
xchg
xor
and
xchg
scas
out
test
ds
cmpl
sbbb
imul
pop
push
cmp
bswap
xchg
add
mov
sti
stos
pop
test
insl
in
lret
add
cmpsb
mov
or
and
cmp
dec
hlt
jno
ds
outsl
pop
shrb
and
sahf
cmp
outsl
cmpsl
adc
nop
fldl2t
shll
xor
scas
mov
push
add
test
jmp
push
and
outsl
lds
mov
ja
jle
mov
push
add
leave
jns
cwtl
into
fdivl
mov
mov
ljmp
rcrl
jne
bound
cmp
shll
push
mov
in
xchg
into
adc
movsl
add
sub
loope
ret
pop
ja
loope
xchg
push
dec
add
rcrl
test
push
dec
cs
ret
xor
movsb
inc
pushf
stos
sbb
and
stos
aam
bound
dec
shl
dec
fildl
and
cmp
jge
lret
in
pop
pop
dec
subb
cmp
push
ja
jge
test
roll
add
aad
cmp
cli
mov
out
ljmp
pop
sbb
push
push
stc
std
in
pop
inc
scas
mov
imul
mov
xlat
mov
bound
test
lock
fxch
pop
fidivs
subl
mov
mov
insl
int
xchg
ret
cwtl
std
inc
int
hlt
push
inc
xlat
dec
pop
call
out
jae
pop
int
insl
sub
movsb
sub
adc
and
push
adc
add
mov
pop
or
int
fs
xor
mov
push
out
xchg
or
in
subb
jecxz
mov
iret
mov
fists
or
cmpsl
je
fsts
pop
xchg
cltd
xor
mov
lret
out
insl
inc
movsb
mov
adc
lret
out
in
or
in
dec
in
cmp
push
sbbl
pop
fcmove
and
mov
and
mov
fsts
mov
add
xlat
push
xchg
cld
mov
cmp
out
add
cwtl
inc
cmpsl
hlt
mov
adc
add
fwait
out
test
dec
pop
orb
lock
push
mov
filds
mov
cwtl
dec
inc
call
pop
and
inc
fiaddl
in
lods
pop
scas
pop
ret
cmp
ja
jns
jl
xchg
mov
into
jne
sahf
bound
int3
push
or
iret
lahf
lret
nop
and
arpl
inc
inc
pop
out
test
scas
jb
and
push
mov
adc
adcl
push
mov
dec
aam
mov
push
bnd
or
iret
aaa
sub
imul
test
stos
addr16
and
mov
lcall
lods
mov
adcb
push
inc
fdivs
xchg
orl
dec
fsubr
mov
mov
lahf
rol
adc
or
jl
aad
mov
mov
mov
gs
daa
sub
cwtl
mov
add
cmp
xchg
xchg
lods
lods
and
mov
mov
mov
push
sub
sahf
mov
repnz
or
pop
hlt
dec
pop
inc
dec
or
jnp
lret
loope
out
or
imulb
or
pop
xor
sub
push
mov
xor
xor
cmp
push
pop
mov
fdiv
jl
mov
data16
xchg
out
xor
popf
xor
mov
cmp
xchg
and
pop
icebp
repz
jge
aad
outsl
and
lret
fldl
lret
xor
xchg
sbb
daa
adc
loop
inc
or
idivb
jns
in
push
ret
jns
and
jge
pop
cmp
sub
xchg
imul
mov
mov
mov
lcall
cmp
leave
adc
and
out
dec
hlt
mov
shlb
iret
loope
ret
xor
in
inc
jg
dec
mov
sbb
and
mov
or
push
mov
jns
add
or
cmp
int
add
cmpsb
or
in
imul
lret
mov
dec
out
rcrb
jae
pop
and
dec
ret
mov
pop
loop
mov
aad
xor
pop
sarl
xchg
inc
movsl
incl
std
sub
cmp
lahf
xchg
cmp
xchg
cmp
cltd
loop
pusha
divl
cs
lock
test
fistpll
push
dec
mov
jnp
sbb
test
in
enter
jno
mov
dec
xchg
jg,pn
sbb
inc
jg
negl
fdivrl
xchg
cltd
test
jl
cmpsb
enter
data16
cmc
or
mov
push
ficoml
xor
movsb
push
movsb
xchg
orl
out
pop
dec
aad
movsl
jno
dec
arpl
loop
lret
mov
xor
out
cld
cmp
mov
popa
xor
lahf
and
lcall
inc
fwait
adc
push
aas
call
cli
xchg
push
pop
inc
fisubrl
jo
mov
adcb
pop
xor
xchg
movsl
dec
fistpll
fcoms
adc
lcall
and
ret
cmp
push
or
imul
mov
lahf
hlt
mov
scas
arpl
cmp
mov
adc
jb
fcmovne
or
jns
in
sub
pop
test
popf
hlt
and
xchg
mov
xchg
sub
push
in
jle
cli
imul
sahf
sbb
inc
push
cs
sub
xor
fdivl
add
into
gs
jo
xorl
into
xor
push
jns
and
sbb
leave
mov
mov
xchg
sbb
mov
loope
add
cs
dec
mov
jnp
jmp
rorl
imul
pusha
push
ficoms
cld
push
mov
fldl
xlat
data16
ds
xchg
and
push
dec
mov
jg
fldenv
in
scas
test
push
add
jno
add
adc
jecxz
ja
aas
cmp
xchg
xchg
fs
pop
sub
push
ljmp
pushf
cmp
inc
clc
xor
inc
fiaddl
dec
add
cmp
lods
fisttpl
sbb
xchg
stc
inc
loopne
sub
aas
int3
dec
mov
or
or
xchg
adc
fadds
test
stos
into
cld
inc
inc
mov
lcall
lahf
pop
ljmp
push
popf
mov
ds
and
les
fwait
xor
xor
loop
mov
add
addl
inc
das
pop
xor
scas
lret
cltd
lahf
retw
sub
pop
xchg
sub
nop
lds
sahf
xor
inc
stos
push
push
fmul
mov
and
push
mov
test
in
jmp
sbb
clc
jg
mov
jno
xchg
mov
inc
xchg
jne
add
and
cwtl
ljmp
or
jmp
push
popf
popf
xor
inc
xchg
mov
xor
jns
jle
aas
rcl
mov
push
jo
pop
cmp
sub
out
xchg
popf
push
aaa
into
aaa
mov
int
sbb
aad
fisttpl
out
mov
insl
test
cmpsl
lcall
cltd
mov
mov
xchg
push
enter
std
test
enter
testl
rcl
outsl
in
mov
shl
rorb
inc
ljmp
dec
pop
inc
mov
sarl
lds
jmp
mov
pusha
xchg
add
in
std
push
pushf
sub
fucomip
dec
mov
pop
or
or
mov
shlb
mov
dec
inc
push
rorl
add
loope
js
mov
add
push
loopne
int
fwait
out
stos
pop
in
fwait
xchg
sbb
cmp
ss
int
test
jne
lods
into
lcall
pop
fidivl
or
sub
pushf
loop
or
sub
rep
rcrb
or
rolb
xchg
and
and
rcrl
jmp
jns
bound
inc
ret
sbb
cmp
decl
enter
hlt
addr16
pop
pop
jo
mov
test
xor
xchg
add
jns
xor
imul
fsubl
icebp
pop
jns
fdivrl
es
divl
push
jge
nop
adc
xchg
inc
mov
mov
xchg
lahf
sbb
inc
jecxz
cmpsb
xor
fmuls
push
push
mov
test
add
cmp
ljmp
jno
xchg
mov
or
sbb
adc
cmp
pop
mov
aad
sbbb
stc
shlb
sub
sub
dec
icebp
imul
pop
lea
adc
cmp
rcrb
mov
sbb
mov
pop
sub
sahf
shrl
clc
scas
call
xchg
jbe
dec
mov
shl
dec
repnz
jb
xlat
lcall
add
shl
cmp
pop
jae
cmp
and
adc
mov
inc
adc
int
jae
mov
cmpsl
js
call
test
scas
daa
out
inc
in
jae
xor
mov
test
jne
addr16
out
leave
sahf
mov
je
xlat
mov
jle
popa
xor
icebp
cmp
xor
pop
ret
insb
divl
je
cmp
mov
mov
clc
repz
mov
pop
js
je
mov
jmp
mov
dec
sbb
jecxz
push
sub
or
lds
push
lods
outsl
rcll
or
mov
inc
push
jo
push
addb
sbb
mov
or
lcall
das
mov
xlat
dec
add
xchg
and
nop
mov
or
adc
test
inc
cmpsb
ss
xor
jge
push
stc
cmc
sbb
clc
dec
lahf
jp
leave
cmp
decl
add
outsb
push
pop
sahf
xor
iret
sti
jmp
fistpll
lds
xor
sub
cmovle
push
xorl
pop
lahf
push
mov
jge
sub
add
lahf
sub
shll
fmul
outsb
arpl
int
push
imulb
loop
mov
push
gs
push
mov
int
test
out
ds
xchg
lret
xor
xor
vhsubpd
sub
in
jns
out
sbb
and
loopne
cmp
sub
ja
xchg
lcall
inc
ret
pop
test
imul
adc
inc
mov
cltd
mov
iret
add
stos
mov
hlt
push
jns
adcb
or
mov
jl
and
addb
iret
cmp
jp
jne
adc
test
pop
xchg
cwtl
jae
xchg
arpl
nop
push
inc
push
jp
mov
aad
enter
adc
popf
push
mov
xchg
subl
push
push
push
mov
mov
push
int3
fidivs
loopne
fidivl
xor
adc
lods
xor
xchg
pop
jae
pop
movsl
cmp
shrl
and
sbb
fwait
xor
cmc
sbb
pop
ret
fisttps
cwtl
out
xor
jge
loope
and
adc
jg
scas
mov
cld
xchg
mov
pop
add
arpl
mov
add
push
dec
adc
and
popa
cmp
stc
mov
sarb
jp
xchg
out
inc
adc
cmp
mov
mov
sub
sub
loope
and
jecxz
push
dec
cmpsl
or
dec
mov
sub
int3
mov
sbb
push
and
mov
stc
aad
jg
fisubs
mov
cmp
adc
fwait
mov
ss
lds
loopne
mov
mov
adc
lret
sbb
jb
add
or
or
mov
jecxz
and
jge
lcall
sbb
jecxz
push
mov
pop
popa
xor
loope
andb
sbb
inc
aaa
and
fwait
scas
aaa
test
mov
out
cld
cmp
fidivrl
ljmp
xlat
scas
lahf
lods
add
jb
mov
out
in
xchg
mov
push
aaa
push
mov
insl
xchg
fwait
cmp
sbb
js
fsubl
mov
mov
and
repz
mov
hlt
dec
mov
push
cld
pop
push
mov
xchg
inc
pop
mov
cltd
loope
and
cmc
sub
inc
rcrb
repnz
aaa
adc
loopne
les
mov
lea
out
adc
int3
mov
mov
xchg
sub
push
imul
mov
adc
imul
or
cltd
ret
aad
outsb
mov
sub
pushf
or
dec
loope
movsb
pop
in
test
adc
mov
shll
sbb
jbe
mov
jno
pushf
scas
test
out
in
inc
push
ficomps
sub
adc
insb
inc
subl
or
dec
movsl
cmp
in
imul
pusha
adc
jb
and
je
add
fwait
insl
adc
lahf
add
xchg
jp
fs
and
xchg
ret
outsl
mov
jl
fwait
push
pop
sahf
aad
push
jg
movsl
mov
cmp
fstpl
cli
pop
xchg
cli
or
es
pushf
adc
bound
clc
jbe
mov
data16
dec
inc
adc
addr16
fcomps
mov
adc
clc
negb
cmp
cltd
jnp
xchg
xor
adc
mov
mov
insb
aas
mov
inc
mov
jecxz
pop
xchg
add
mov
inc
mov
pushf
loop
std
fwait
cmp
nop
cmp
lret
xor
sbb
inc
popf
jo
cmp
cs
icebp
cmp
push
push
test
push
sbb
jb
jg
pop
loope
stos
dec
fmull
popa
jmp
push
sahf
xor
xchg
and
bound
in
mov
ljmp
enter
clc
inc
and
cld
adc
sbb
test
gs
arpl
pop
sub
fidivl
add
xor
and
pop
into
scas
jmp
inc
gs
cmp
pop
subb
icebp
sbb
into
out
mov
xchg
jmp
cmp
fs
mov
and
or
iret
mov
shlb
cltd
data16
inc
inc
and
sbb
dec
adc
sahf
lahf
pop
mov
sub
sub
pop
pop
mov
addl
dec
inc
fldenv
aas
sbb
sub
test
pop
jmp
leave
push
mov
aad
or
cld
test
dec
shrl
lds
xor
fsubrs
jbe
or
mov
gs
dec
mov
dec
xchg
icebp
xor
mov
xor
roll
addps
nop
or
jb
mov
xor
addr16
lret
sub
mov
xor
testl
xchg
sahf
push
or
cmp
sub
xor
cmc
and
sbb
xchg
jg
lahf
mov
imul
shlb
out
fcompl
adc
mov
test
inc
lahf
and
loop
cltd
rcrl
jo
sub
adc
icebp
sbb
ret
enter
fs
jno
rcrb
roll
and
pop
sub
sub
mov
into
sub
or
cs
pop
jg
pop
mov
push
imul
icebp
or
push
push
std
fwait
in
jle
sti
add
jae
xchg
fdivrs
insl
sbb
daa
push
sub
out
mov
xor
shrl
add
mov
inc
jb
sahf
scas
daa
push
push
stc
jmp
jp
arpl
and
mov
jge
daa
sub
xchg
cltd
and
and
xor
cmpsl
scas
jno
ficoml
rorl
mov
insl
in
push
pop
inc
xor
jae
xor
lret
mov
push
jp
mov
pop
mov
or
dec
cmp
call
add
mov
xlat
or
sahf
mov
outsb
sti
sub
movsl
push
or
xor
mov
sbb
ret
lahf
jno
or
sub
fwait
xor
dec
sub
mov
jo
dec
loope
aaa
int
cmpl
cmp
fadds
cmpsb
in
pop
ljmp
pusha
cmp
pop
testb
in
sub
cmc
stos
add
xor
xchg
xchg
xchg
push
mov
fstl
ret
cmpsl
shr
pop
int
pop
mov
xor
push
pop
xor
or
add
test
sbb
cmpb
test
loopne
dec
gs
sub
inc
mov
jae
add
loopne
add
xlat
xor
jmp
repnz
add
add
sub
push
outsb
xchg
inc
inc
in
add
in
jb
notl
lods
mov
fnsave
mov
add
ds
inc
mov
into
pop
dec
mov
sbb
sbb
popa
xor
lret
popf
fs
jnp
loopne
or
sub
add
loop
out
lahf
pop
cmp
test
pusha
into
in
movsb
ret
mov
jecxz
ja
mov
shl
test
sub
loop
mov
sbb
xchg
cltd
or
mov
lods
aas
fcomps
js
pop
adcl
jns
xchg
push
mov
in
in
pop
dec
mov
insb
lcall
xor
dec
ss
or
inc
cmp
add
pushf
scas
fisubrl
addr16
sub
mov
xor
pop
xor
or
cmpsl
xchg
loop,pn
imul
fbstp
xorl
enter
call
dec
sub
push
movsb
repz
aam
cmpsl
xor
in
nopl
xchg
xor
pop
push
insb
push
cld
roll
ljmp
icebp
xor
daa
mov
mov
and
inc
mov
dec
or
lcall
mov
mov
ds
jne
add
push
push
jecxz
cltd
cmp
pop
pusha
or
xchg
ja
cmc
lock
es
xchg
out
shrb
sarb
mov
pop
mov
sbbb
lods
push
pushf
fstps
popf
jl
fidivl
sbb
hlt
ds
dec
std
jne
ss
or
adc
mov
movsb
cmp
les
nop
sbb
iret
cmp
mov
dec
pop
jo
jecxz
jg
shlb
adc
sub
ficomps
jge
sbb
xor
les
push
sahf
sub
xchg
lret
data16
adc
xchg
je
push
cmpsl
aad
aad
pushf
push
xchg
das
in
xor
mov
mov
cltd
mov
cmp
mov
cli
imul
mov
cmp
sbb
push
cmp
pop
jge
fisttps
dec
jecxz
dec
bswap
mov
jns
sarl
cmp
xchg
fists
nop
mov
sbb
shlb
imul
adc
scas
xor
xchg
mov
mov
push
push
lods
xchg
inc
mov
out
fnstenv
lret
jp
cwtl
test
sub
push
lcall
repnz
test
sbb
std
pop
mov
or
mov
mov
and
js
call
mov
mov
mov
xor
mov
inc
enter
shr
icebp
jecxz
push
and
es
or
jmp
xchg
or
mov
stos
dec
or
push
shlb
xchg
loope
outsb
sub
insb
add
shll
add
mov
mov
mov
aad
ret
or
lret
and
mov
stos
inc
sbb
pop
popf
ss
mov
xlat
dec
leave
mov
pop
adc
sbb
insl
pop
cltd
ja
xchg
xchg
mov
sahf
scas
bndstx
aas
or
sub
insb
pop
out
in
push
dec
cmpsb
cltd
sbb
lret
xchg
rorl
roll
sbb
mov
loopne
pop
xor
in
jns
aaa
cld
outsl
movsl
add
ud1
scas
mov
cld
stc
ja
adc
lret
adc
jbe
lds
jne
cmp
and
test
dec
pop
sahf
repz
daa
faddl
cmpsl
push
adc
stos
xchg
xor
sub
inc
fisubl
loop
push
xchg
dec
popa
stos
jnp
mov
notb
cmp
into
aad
in
jb
sarl
scas
mov
loope
xchg
shrb
jne
rol
jl
clc
ficoms
popa
out
xchg
sahf
orl
and
jge
pushf
xchg
mov
out
das
fcoms
cmpsl
out
enter
in
imulb
fucomip
or
lods
scas
cs
ss
dec
fmul
jg
xchg
sbb
fs
dec
cmp
jecxz
jb
fs
mov
mov
cmova
mov
jno
fisubrl
xor
repnz
xor
dec
aad
cmpsb
fs
cmc
adc
push
int3
pop
imul
inc
popf
rolb
popf
or
cmpsb
xlat
int
push
pop
orb
or
adc
dec
fdivrs
xchg
in
out
test
stos
psllq
ret
inc
inc
push
push
adc
pop
dec
rclb
jb
cld
sarl
add
cmp
int3
xor
push
xor
movsl
stc
loopne
mov
jge
inc
out
push
sbb
dec
xor
pusha
out
jo
cmp
cmp
testb
cmc
jge
sti
adc
adc
aaa
xor
xor
outsl
jge
pop
inc
cmp
frstpm(287
push
mov
cmp
or
mov
pop
roll
add
xor
push
in
insb
jns
movsl
icebp
sbbb
mov
cmpsb
imul
adc
mov
in
jo
arpl
int
mov
adc
jo
lret
push
or
xor
je
xchg
mov
into
jmp
out
jns
mov
or
scas
in
mov
sbb
mov
lods
xor
dec
dec
movsl
stos
pop
ds
rolb
push
pop
aam
pop
sbb
or
jne
sub
mov
adc
and
mov
inc
adc
roll
jge
jno
dec
repz
mov
scas
inc
xchg
imul
call
jns
inc
mov
dec
cwtl
je
syscall
push
xchg
rorl
repnz
push
leave
sbb
xchg
mov
rcr
xchg
shrb
mov
jmp
add
and
jbe
sarl
icebp
sbb
xor
push
nop
loop
inc
inc
xorb
xchg
int3
arpl
xchg
xor
enter
mov
cwtl
push
in
sbb
mov
push
pop
xorb
stos
aas
das
dec
add
fisubl
mov
jo
cld
pcmpgtd
ljmp
inc
aas
call
xchg
fs
sbb
in
les
jg
dec
mov
xchg
or
xchg
pushf
scas
int3
push
and
aad
add
mov
jp
mov
pusha
das
outsb
sub
mov
pop
movsl
cmpsl
std
or
or
neg
pop
fldl2e
fbstp
jmp
sbb
xchg
fdivs
sbb
mov
jbe
loopne
cwtl
das
popa
mov
dec
bound
gs
int
sbb
lods
out
int
sub
mov
sub
call
mov
and
push
xchg
push
adc
push
out
js
pop
pop
pushw
insl
imul
mov
aas
lea
pop
xchg
push
jne
inc
cmp
adc
xor
and
test
daa
ss
cmovns
add
adc
repnz
xor
rcl
imul
fimull
mov
push
and
shrb
int3
pop
imul
sti
test
lods
sub
cmp
cwtl
out
cld
leave
and
nop
out
bound
cmp
test
and
shrb
inc
push
lret
into
pop
cmp
pop
in
xor
aad
mov
ds
sahf
fistps
mov
pop
jecxz
mov
imul
in
cmpl
ret
lcall
jne
jp
mov
mov
push
cmpsb
inc
mov
fcmove
xor
xor
data16
sbb
or
cltd
xor
add
fsubrl
shrb
arpl
icebp
xchg
xor
xchg
xor
or
ret
lea
jle
testb
imul
pushf
lods
jecxz
push
in
cs
xchg
dec
icebp
cmpsb
aad
negb
mull
push
mov
sbb
fdivl
fcompl
loopne
xor
icebp
push
mov
pop
cld
popa
js
enter
rcrl
mov
sarl
lahf
std
push
call
fwait
into
outsl
or
fsubrp
or
stos
dec
pop
fwait
sti
aad
xor
test
sbb
sbb
cmp
aaa
outsb
add
lods
adc
sti
mov
adc
dec
lret
in
cmpl
sbb
mov
stc
jbe
pushf
and
sbb
testb
xorb
mov
adc
sbb
sbb
xor
mov
sub
add
popa
les
pop
and
sub
test
int3
add
outsl
aam
mov
pop
mov
and
dec
test
ss
mov
mov
mov
ret
jecxz
mov
aaa
clc
xchg
jp
push
aas
data16
pop
fildll
mov
mov
sub
fisubs
mov
jnp
scas
adc
xchg
int3
sbb
sub
popf
bound
adc
jmp
jmp
lock
and
shl
or
mov
outsl
out
aaa
inc
mov
loope
loopne
scas
mov
jle
and
mov
mov
movsl
lock
dec
mov
ss
sub
push
mov
fisubrl
fstpt
dec
pop
inc
inc
mov
push
push
xchg
stos
in
lahf
dec
sub
push
out
and
or
push
and
inc
dec
mov
adc
sub
pop
cmc
popf
cwtl
push
push
sahf
icebp
add
aaa
mov
aam
and
pop
mov
mov
movsb
mov
test
pushf
mov
jns
xorl
pop
jnp
mov
inc
xchg
int
cmpl
test
xchg
dec
jmp
stc
in
jns
mov
jo
inc
push
sbb
outsl
push
or
push
mov
inc
dec
enter
add
lret
mov
insl
gs
test
pusha
push
rorl
out
loope
mov
out
inc
jl
mov
clc
push
jge
vpmullw
lock
ret
pop
daa
mov
pop
or
jle
scas
fcmovnb
inc
inc
sbb
jb
mov
sbb
inc
xchg
sub
dec
aaa
sub
test
mov
mov
test
dec
jge
push
push
in
cwtl
daa
ffreep
std
loop
jge
xor
ds
sti
add
divl
dec
push
out
and
sub
mov
fstpl
mov
popa
js
cmp
cld
lods
mov
inc
cmpl
lcall
cwtl
xor
mov
mov
adc
fnstenv
loopne
add
mov
or
adc
shrl
jae
sarb
out
popa
ret
call
sti
movzwl
popf
or
push
jo
xor
dec
mov
push
push
aaa
aas
out
addb
in
pop
scas
mov
repz
pop
lock
xchg
jp
mov
add
mov
dec
iret
fs
daa
insl
jmp
add
mov
sahf
push
lods
and
shl
sbb
xor
cld
bound
push
aaa
repz
or
push
divb
aam
scas
inc
cmp
lret
insl
and
movsb
lea
jecxz
adc
pop
add
inc
xchg
dec
xchg
les
sbb
push
or
pop
xchg
movsb
sbb
sbb
adc
mov
or
fstenv
inc
push
shll
cmpsb
test
xlat
jno
js
xor
inc
lds
jle
pop
loopne,pt
push
scas
into
dec
les
xor
xchg
pop
xor
mov
mov
test
ljmp
push
cmp
movsb
dec
xchg
fisubrl
inc
adc
popa
test
adc
ljmp
out
out
pop
mov
lock
cmp
scas
mov
sub
mov
dec
nop
jmp
sub
mov
xor
inc
sbb
add
or
fisubs
push
ror
cmp
sbbb
dec
mov
jmp
mov
sub
push
nop
daa
test
fdivs
xlat
imul
xor
stos
in
loop
and
das
lds
repnz
and
aaa
push
jp
mov
jecxz
popf
js
and
inc
out
addr16
shlb
mov
leave
dec
mov
and
and
or
int3
clc
xchg
adc
out
adc
and
mov
inc
or
jae
xchg
arpl
pop
push
es
inc
fiaddl
test
inc
xchg
push
xor
inc
je
cltd
and
sub
repz
cs
inc
push
mov
movsb
jae
out
mov
pop
repz
and
fdivl
subb
adc
pop
mov
sbb
xor
xchg
sarb
fisttpl
ror
sar
jmp
leave
jmp
addr16
leave
pop
sub
pop
cmp
xchg
jmp
leave
jmp
imul
add
add
mov
imulb
clc
sahf
ret
pop
mov
cld
xchg
pop
loopne
add
sbb
popf
add
sbb
test
mov
xor
fsubrs
cmp
fwait
shrl
fidivrl
dec
xor
mov
xchg
lods
pop
hlt
xchg
pop
fnstenv
jb
pop
cmp
rep
frstor
or
std
mov
sbb
fstpt
jae
push
jg
sub
mov
arpl
cmp
int
pop
cmpb
add
xor
sub
das
in
stos
aam
out
inc
leave
pusha
je
les
je
xchg
sub
xchg
int
in
sub
sub
pusha
js
add
xor
fsubrs
subb
xchg
push
sbb
pop
pusha
xorb
dec
out
mov
fwait
inc
sub
add
aaa
xchg
add
seta
test
add
mov
divb
call
inc
xor
adc
pop
jp
adcl
jecxz
mov
aad
push
dec
lods
sub
test
mov
notb
test
and
pop
xchg
das
mov
xor
xchg
mov
push
fisttpll
mov
xor
jecxz
jg
jae
or
jns
mov
dec
push
push
cltd
movsl
mov
cmpl
mov
xor
filds
xchg
sub
xchg
imul
inc
dec
mov
dec
mov
mov
add
pop
adc
shl
loop
adc
push
jb
jne
cmp
mov
js
rcrb
popf
adc
jge
cli
jno
sub
aam
aas
push
fcomip
mov
cmp
sbb
and
stos
inc
leave
scas
push
adc
mov
fnstenv
xadd
xor
mov
pop
cmp
push
cmpsl
clc
shll
movsl
jns
in
ficompl
or
in
ret
xchg
popa
gs
imul
xchg
pop
sahf
outsl
sub
pop
push
adc
inc
xchg
int3
mov
push
ss
inc
push
popf
dec
sbbl
fstps
sbb
popf
mov
and
test
out
dec
stos
idivl
push
sbb
push
sub
bound
jno
mov
in
aaa
add
cmp
and
sub
and
jg
test
pop
scas
mov
jno
pop
and
sub
push
sarb
mov
adc
jp
push
insb
mov
leave
xor
mov
pop
gs
adc
mov
mov
mov
out
or
cli
dec
jo
jg
outsb
mov
add
push
ds
cmpsl
call
pushf
mov
loopne
sub
lret
cmpsb
stc
mov
inc
jl
cmp
std
jp
imul
cmpsl
add
pop
xor
xchg
repz
js
and
push
out
pop
fnstenv
mov
pop
in
cmp
cmp
hlt
jo
es
in
dec
into
loop
mov
roll
sbb
lods
pushf
addr16
repnz
push
stos
adc
out
sub
inc
adc
jecxz
adc
out
lahf
pop
rcl
cmp
fcmovb
fisubrl
jo
popa
jb
xor
ror
repnz
lds
or
sbb
push
lods
fsubl
sub
adc
cmp
push
out
or
and
mov
xchg
sbb
or
hlt
pop
xor
shl
and
scas
loopne
sub
stos
loop
jo
push
add
push
push
xor
push
pop
xchg
popf
mov
lea
into
jb
and
ja
mov
jns
fstps
pop
mov
xchg
loope
out
lods
fwait
movsb
sti
push
into
jbe
bound
inc
addl
iret
dec
jecxz
test
jecxz
push
iret
dec
and
sbb
mov
jns
aam
cmp
pop
clc
pop
mov
jg
push
out
mov
arpl
inc
addr16
lret
vpaddb
xorb
data16
frstor
sub
xor
fisubs
sbb
sub
cmp
mov
in
xchg
mov
popf
push
inc
sbb
dec
mov
push
ljmp
jno
imul
and
jecxz
iret
push
sub
into
pop
push
stos
xchg
jge
push
jne
lods
cmpsb
les
pop
rep
dec
sbbl
int
es
sbb
ljmp
in
je
imul
outsb
pop
ficoms
shlb
xor
or
idivl
sbb
push
jmp
mov
adc
sub
jle
testb
test
inc
imul
sub
pop
push
adc
aad
notb
mov
xchg
repz
sahf
push
adc
sub
add
mov
cmp
popa
fcompl
jbe
incl
sbb
dec
incb
gs
es
sbb
dec
jno
mov
xchg
mov
les
ss
mov
adc
inc
mov
adc
int3
mov
xchg
mov
les
jl
shrb
or
xchg
in
mov
mov
aad
fisttpll
stc
out
push
pop
jmp
lahf
add
stc
iret
push
jno
arpl
subl
fisttpll
pop
or
scas
xlat
mov
mov
ds
inc
fsubrl
sub
jle
push
imul
mov
jecxz
nop
add
add
sbb
fldcw
add
sub
sbb
aas
test
dec
cmp
aaa
xchg
movsb
hlt
xor
in
push
push
js
pop
daa
jecxz
push
cmp
pop
jg
sbb
xor
push
out
cli
dec
loop
addb
mov
mov
mov
lret
or
inc
fidivrs
push
push
sahf
add
int3
sub
je
inc
sub
xchg
adc
mov
pusha
xor
das
addr16
jns
pop
or
adc
xchg
jns
xor
cmp
xor
fwait
mov
jp
nop
jno
aam
cmp
pop
sbb
mov
es
mov
inc
xsaveopt
repz
movsl
lock
call
pushf
mov
jle
mov
mov
add
jmp
jge
sub
mulb
and
in
sbb
dec
inc
mov
ja
and
mov
out
aam
xchg
jae
pop
imul
shrb
das
sahf
or
cmp
xchg
ja
xchg
call
fiaddl
xor
mov
mov
xor
sub
mulb
mov
lea
jb
mov
jo
mov
scas
testl
push
rolb
insb
jp
jne
loope
sub
es
dec
add
repnz
fsubrs
inc
fstpl
adc
push
shll
cltd
pop
shl
jl
std
loopne
outsl
ljmp
mov
pop
hlt
popa
imul
jns
jmp
pop
jle
jle
jno
faddl
sub
push
out
addr16
dec
and
lea
jae
pusha
xchg
ja
pusha
push
addb
pcmpeqd
stos
mov
push
sbbb
mov
pop
add
repnz
aas
push
xchg
sti
faddl
mov
call
and
inc
repz
stos
stc
insb
icebp
xor
inc
arpl
add
nop
or
dec
pop
stos
mov
sub
push
pop
repnz
sub
aam
pop
hlt
outsl
cltd
das
stc
pop
cmpl
add
sbb
mov
xchg
arpl
test
out
pusha
inc
scas
push
loop
mov
mov
xor
push
jno
imul
adc
or
mov
inc
ljmp
fstpt
test
addr16
cmp
push
mov
js
addb
adc
insl
inc
pop
mov
test
lret
movsl
mov
dec
rolb
ret
mov
cmp
xor
cmp
daa
mov
ds
roll
inc
lcall
and
or
push
mov
in
ja
push
stos
fs
xchg
popf
je
mov
sti
jnp
and
mov
rorl
cmp
in
adc
pop
cmp
dec
hlt
testb
sbb
shlb
movsb
jecxz
sbb
push
js
lahf
gs
je
aas
clc
mov
pop
ret
fstl
loope
push
cmp
pop
mov
mov
mov
je
enter
mov
xchg
inc
pushf
mov
fldenv
inc
aas
popa
adc
sahf
or
jo
mov
fdivp
fnstsw
adc
sbb
add
rorb
out
jl
imul
in
imul
pusha
lods
shlb
in
mov
inc
ret
lcall
lock
pop
mov
pushf
sub
mov
in
movsb
lret
nop
mov
push
clc
imul
xor
lahf
cmpsb
xchg
mov
adc
test
sbb
fsubrl
imul
aas
stc
mov
jne
xor
movsl
mov
pop
les
push
fsubl
ss
icebp
je
gs
xchg
cmp
ss
cmc
cmp
sub
xor
pop
pop
jb
in
adcl
cmp
sbb
das
pop
in
push
test
mov
xchg
jbe
sbb
stc
and
stc
js
cmp
mov
lret
mov
repnz
ja
jno
lea
adc
sub
popa
orl
in
scas
push
jne
dec
cmp
in
pop
mov
or
jl
xor
pop
and
ss
dec
mov
outsb
lods
xchg
sub
les
sub
fisubrs
iret
xchg
and
adc
test
in
jg
mov
cli
dec
lahf
negl
outsb
addl
sarb
xor
andl
movsl
cld
adc
cmp
adc
or
jbe
jle
or
sbb
pop
push
add
cltd
fdiv
adc
add
shl
dec
test
daa
rclb
dec
outsb
cwtl
outsl
stos
mov
scas
rcll
lock
dec
xor
jle
imul
dec
out
inc
adc
rolb
sub
lcall
popf
call
orb
jbe
popf
dec
lahf
ss
sbb
dec
lods
sbb
add
data16
bound
test
sbb
pop
nop
jnp
cmp
lret
stos
jge
mov
jb
cld
test
pop
pop
lock
mov
pop
stos
push
loopne
lea
mov
push
sbb
aad
in
icebp
adc
mov
and
cmp
adc
adc
cwtl
mov
out
cmc
sub
shll
mov
xor
outsl
dec
out
mov
mov
mov
xor
icebp
mov
sub
fsubrs
fiadds
test
jns
out
lcall
ret
jecxz
pop
cli
or
xchg
sub
xchg
cltd
fisubrs
sahf
data16
sub
push
push
call
call
test
sub
add
std
arpl
xchg
mov
push
dec
push
call
insl
in
and
add
insb
mov
dec
ret
movsb
xchg
add
push
mov
cwtl
pop
sbb
mov
insl
mov
ds
mov
movsl
std
sub
cmpsb
sbb
out
into
je
sub
add
and
hlt
in
aam
les
aam
out
mov
leave
test
ret
xchg
jne
adc
push
push
mov
push
mov
int3
push
flds
lahf
and
bound
iret
fcmovne
leave
movsl
xchg
mov
mov
out
ficoms
cmp
sub
cmpsb
or
sub
repnz
lcall
negl
add
cmc
jnp
out
pop
push
rorl
enter
out
ds
jno
ja
icebp
push
leave
xchg
andl
das
shll
adc
arpl
jae
rorb
pop
out
call
jp
sbb
andb
nop
cmpsl
inc
out
das
mov
push
fdivl
jae
mov
sahf
cmp
pusha
mov
ja
adc
lret
xor
add
outsb
push
mov
cmp
aaa
inc
fisubs
out
ja
aaa
fists
sbb
or
std
cmp
stos
iret
adc
leave
sbb
pop
add
stos
mov
das
shll
mov
xor
imul
fmulp
inc
adc
jne
push
sub
jne
inc
xor
test
jnp
cmp
jno
xorl
and
cmp
xchg
xor
cmp
mov
push
push
or
es
lahf
jb
dec
sbb
icebp
out
cmc
fadds
push
stos
outsb
add
jge
jp
adc
cmc
inc
test
inc
xor
mov
loopne
repnz
nop
je
cmpsb
stc
jg
push
in
mov
jl
fadds
fwait
inc
inc
jmp
insb
sbb
mov
decb
and
mov
subl
daa
adc
or
lods
lds
mov
push
xchg
push
cmpsb
pop
xchg
push
stos
dec
push
pop
enter
rclb
dec
aas
sarb
jecxz
push
stc
dec
mov
add
lcall
mov
jno
or
out
nop
or
pop
mov
shrb
inc
scas
pushf
push
or
inc
mov
ds
std
jo
lret
data16
jecxz
icebp
icebp
cmp
jns
adc
jb
push
mov
imul
dec
lock
or
out
cmpsb
mov
pushf
inc
fnstcw
ljmp
dec
ljmp
inc
sub
enter
shrl
movsb
pop
pop
and
imul
out
mov
lret
inc
pop
jp
mov
jg
xchg
jns
adc
or
imul
stos
pop
cmp
imul
jl
adc
sbb
sbb
pop
or
sub
aas
popa
test
mov
xchg
dec
mov
lea
in
adc
lea
mov
jecxz
loope
pop
ret
dec
out
fistl
dec
mov
test
inc
sub
lcall
sbb
dec
mov
int
mov
inc
mov
fwait
mov
call
mov
movsl
xchg
dec
loop
outsb
test
in
mov
aaa
cli
jno
dec
lahf
idiv
lret
fstpl
or
test
mov
adc
fisubl
push
jge
iret
mov
pop
imul
movsb
xchg
in
push
iret
xchg
notb
and
add
sbb
push
push
xor
hlt
insl
mov
loop
cmpl
pop
jo
shrb
push
cmp
aam
mov
mov
out
enter
rolb
mov
loop
mov
sbb
push
pop
bound
pop
cmp
push
or
loopne
js
subl
pop
dec
aaa
xor
inc
es
or
sub
aad
cmc
sub
aam
js
in
adc
jg
sub
enter
pushf
bound
mov
cmp
movsb
jecxz
add
push
repz
jecxz
lods
icebp
movsb
cmp
adc
repnz
add
add
cmc
add
mov
mov
add
les
push
test
adc
outsl
add
lods
xchg
jo
push
mov
prefetchw
push
leave
jecxz
pop
xchg
outsb
loope
mov
out
jl
pop
repz
sub
mov
lret
xorb
push
add
rcll
pop
jnp
sub
xor
sub
hlt
lock
cld
pop
mov
sbb
cmpsl
cmp
sbb
lea
gs
pop
orb
add
cmp
leave
push
pusha
mov
loope
cmp
lret
stos
icebp
aaa
lds
mov
jnp
stc
ljmp
les
dec
test
mov
lret
nop
imul
sbb
xchg
in
loop
sbb
in
nop
stos
pop
mov
js
xchg
sti
add
pop
dec
fwait
dec
cmp
out
jne
out
sbb
outsb
push
pop
incl
mov
call
sbb
sbb
lret
sbbl
dec
lret
sbb
jb
insb
pop
pop
stos
pop
neg
jle
and
mov
std
gs
nop
inc
inc
into
xor
jmp
pusha
andl
push
fwait
daa
mov
mov
lods
or
xchg
ds
mov
sub
clc
shrl
cli
xor
mov
sahf
fcomps
mov
or
lods
inc
cmpsb
push
mov
or
add
hlt
shrb
or
das
mov
fstl
cmp
jno
pop
test
lds
int3
xor
pop
dec
inc
xor
inc
ficoml
inc
popa
clc
jb
pop
inc
mov
push
adc
inc
dec
rolb
sub
out
mov
aaa
cs
add
cmp
imul
jmp
out
repnz
mov
stc
mov
loope
ljmp
call
dec
push
adc
cs
imul
fcompl
fxch
movsl
mov
push
jle
outsl
jp
push
popa
mov
aam
mov
std
and
std
lret
test
cmc
cmovp
jp
xor
xlat
fwait
lods
mov
shll
dec
pop
xchg
in
int
push
ror
or
pop
stos
pop
mov
push
cmpsb
inc
outsl
cmp
cmp
cmp
imul
out
imul
ja
mov
lcall
in
int
mov
push
push
jbe
mov
loop
add
mov
dec
addr16
mov
jbe
cli
ds
shrl
xchg
in
addl
or
mov
test
in
dec
out
lods
sbb
out
mov
int
xor
or
sbb
pop
hlt
in
add
xchg
mov
mov
fsubr
sbb
sbb
dec
sbb
aam
and
adc
mov
jno
mov
xchg
xchg
movsl
ret
stos
pop
inc
incl
dec
data16
fsts
add
addl
test
push
stos
repnz
sahf
stos
pop
or
jp
xor
in
arpl
ss
incb
pop
mov
int
mov
and
mov
data16
xchg
jb
popa
movsb
repnz
mov
jle
aaa
aad
lahf
and
leave
cmp
mov
or
pop
jecxz
push
inc
dec
mov
imul
into
nop
cmc
jbe
cld
lcall
in
push
mov
je
in
pop
pop
mov
mov
push
mov
cltd
mov
aaa
push
mov
adc
push
xchg
xchg
mov
lret
sbb
push
and
insb
jle
xchg
lret
pushw
pop
jg
es
pop
mov
xchg
mov
cli
and
mov
sbb
dec
int
out
sbb
jbe
cmp
pushf
outsl
pop
push
sbb
mov
test
mov
add
cmp
mov
test
or
imul
jl
dec
pop
lret
hlt
dec
aaa
push
mov
stos
jne
sub
ds
pop
xor
test
or
lret
mov
idivl
sahf
ficoml
sub
gs
pop
push
outsb
rolb
mov
cli
or
cs
push
adc
inc
inc
mov
cmp
lahf
mov
shl
pop
mov
lods
xor
dec
rcr
or
pop
push
or
pop
scas
sbb
jo
dec
pop
hlt
fidivl
sbb
jl
or
cltd
or
jp
pop
pushf
jge
repnz
xchg
adc
lret
mov
push
dec
pop
or
jns
xor
cs
fisttpl
xchg
dec
ljmp
or
mov
ljmp
scas
or
insb
mov
mov
outsl
fsubrs
pop
sbb
out
test
mov
lcall
inc
adc
push
popf
mov
add
sub
loope
dec
ss
pop
sub
test
inc
es
pop
test
movsb
repnz
jns
cwtl
inc
adc
imul
pop
iret
inc
insl
add
stos
cmp
pushf
ret
mov
cmc
js
repnz
lahf
test
imul
mov
outsb
cmp
test
popl
stos
cmp
in
xor
xor
aas
cld
cltd
jbe
adc
fldl
decb
pop
movsb
pop
ds
mov
mov
add
pop
mov
arpl
pop
fisttpl
mov
push
adc
sbbb
fildll
push
fstpt
add
jno
push
adc
lret
ja
pop
mov
push
jg
dec
xchg
inc
mov
lahf
or
repz
mov
xor
iret
jle
leave
imul
fwait
xor
cwtl
mov
pushf
clc
or
push
mov
shr
jnp
pushf
scas
dec
sbb
dec
repz
add
and
lock
gs
inc
mov
cmp
mov
scas
aad
mov
lock
repz
cmpsb
popf
cli
push
and
xchg
jp
push
mov
add
jno
iret
dec
pop
jbe
mov
pop
inc
mov
sbb
push
dec
movsb
push
jmp
hlt
dec
fs
scas
adc
arpl
xlat
repz
pop
cltd
lds
out
ljmp
add
fidivl
arpl
cltd
lret
clc
xchg
and
or
dec
sbb
lcall
cwtl
notb
fistl
or
ds
sub
loop
mov
jbe
mov
push
xor
push
mov
and
data16
xor
jb
setge
xor
orb
out
ss
mov
iret
jbe
out
xor
mov
cltd
in
cltd
inc
out
add
cmpsl
jge
inc
lcall
in
sbb
in
sbb
sub
push
push
ret
adc
or
loopne
out
mov
pop
mov
lea
xchg
mov
int
mov
out
push
adc
xor
or
mov
imull
jmp
arpl
and
pop
andb
test
push
sahf
sar
pop
ret
xor
bound
push
mov
xor
sbb
lods
das
dec
add
inc
xor
in
addr16
outsb
jns
out
inc
sub
add
add
fld
pop
mov
xor
xchg
push
inc
and
lock
lods
outsb
jp
sbb
aam
pop
jecxz
cmp
push
mov
mov
scas
mov
std
ficomps
es
mov
cmp
lods
ljmp
pushf
test
sbb
mov
pop
test
cmp
push
mov
fisubrs
pop
enter
insb
test
jo
xchg
mov
call
sbb
aas
ss
outsb
arpl
or
cmp
or
aam
push
in
xchg
das
sub
sbb
inc
inc
and
leave
pusha
cmp
mov
inc
mov
lret
xor
mov
mov
xor
inc
push
je
addr16
inc
push
sbb
scas
les
andl
and
sar
xchg
push
outsl
add
je
pusha
aad
cltd
testl
popa
fisubl
inc
in
push
mov
shl
mov
mov
cmp
aaa
repnz
mov
add
mov
or
fbld
jb
dec
or
xor
xlat
and
addr16
dec
stc
jge
inc
cwtl
stc
leave
arpl
stc
pop
xor
xor
sbb
aam
push
jbe
cmc
mov
cmp
sbbb
and
sbb
xchg
lret
jle
inc
pop
add
popa
push
xor
sti
loop
xor
testb
pushf
sbbl
clc
fwait
mov
enter
movsb
mov
notl
loope
pusha
dec
and
sub
shrb
mov
test
sub
jle
clc
cltd
stos
sub
pop
sbb
dec
push
movsl
mov
pop
mov
inc
jmp
roll
adc
mov
sub
lds
xchg
xor
push
push
add
pop
daa
int
mov
ljmp
decb
sahf
sub
adc
jnp
sti
add
pop
xor
cwtl
or
movsb
cmp
outsl
xchg
or
mov
jmp
shl
or
es
mov
rclb
xchg
repnz
lea
insb
sub
bound
inc
push
jl
add
popf
sbb
push
inc
sbb
and
mov
jb
mov
mov
loope
adc
sti
jl
adc
mov
dec
cmpsb
test
dec
cmp
xchg
sarl
cmpsl
scas
add
shl
xchg
adc
dec
lcall
aaa
adc
sbb
negb
cmpsb
jge
xor
dec
cmp
pop
push
cmc
mov
shrb
and
jb
lcall
pop
mov
addl
cmp
cld
in
cmpsl
aam
fmuls
test
inc
sbb
and
fnstsw
ficoml
aaa
popa
add
xchg
push
aam
adc
xor
pop
add
loope
pop
or
mov
not
in
mov
add
lea
mov
jbe
cs
mov
xchg
scas
pop
loope
insl
aam
jge
pop
sbb
push
sbb
jns
pusha
out
in
fildll
xchg
sti
sbb
inc
bound
pop
in
sahf
mov
sbb
ret
gs
repnz
cmc
push
inc
cmp
mov
fwait
pop
inc
rcrl
inc
lret
loopne
ret
and
mul
mov
xor
test
into
aaa
cmp
cld
mov
dec
xor
adc
mov
jbe
adc
jl
sub
sbbb
repnz
testl
push
xchg
jge
xor
mov
lods
rol
pop
into
dec
and
ret
jl
adc
sub
adc
fstl
and
lea
xlat
xlat
sub
pop
aas
ficoml
cmp
arpl
inc
fadds
mov
stc
adc
mov
pop
insl
call
in
test
inc
push
in
das
push
and
cli
loopne
xchg
xchg
inc
xor
fisttpl
and
jb
cmp
in
xor
jne
insl
and
push
incb
fisttpll
clc
or
inc
lods
outsl
in
enter
xor
inc
sub
imul
push
mov
inc
jbe
imul
jae
sub
push
enter
loopne
movsb
sahf
es
adc
stos
pop
push
repz
lret
pop
pop
or
nop
imull
es
dec
ja
out
push
inc
outsl
aas
sbb
repnz
jb
xchg
xlat
outsb
and
inc
aam
cmc
mov
pop
and
jo
imul
mov
pop
cmp
lcall
fs
push
dec
ret
mov
sub
sub
stos
adc
subb
ret
ja
pop
cli
xchg
cmp
xor
lods
lea
and
sub
fldenv
or
push
dec
mov
ret
rcll
jge
sbb
loop
adc
dec
add
cmp
outsb
mov
test
decl
cltd
jge
pop
repz
push
fistpll
push
sub
mov
ja
jno
jns
adc
mov
and
in
push
mov
and
test
jne
ljmp
in
or
and
jns
daa
int3
gs
mov
stos
notb
aam
jmp
in
cmc
mov
orb
or
jae
popf
and
sbb
xor
fisubl
daa
sub
popf
sbb
out
lea
xchg
lea
fs
out
push
xchg
dec
mov
push
push
in
push
sub
loope
iret
add
inc
push
jns
scas
and
adc
mov
mov
popf
adc
ljmp
loope
aas
mov
cmp
outsl
xchg
dec
push
mov
add
push
fwait
and
mov
ds
stos
or
push
mov
mov
shll
inc
rorl
dec
dec
shll
lahf
dec
add
orb
add
mov
jbe
ret
repz
arpl
nop
mov
stos
scas
nop
sub
andl
dec
cmp
loope
xor
sbb
adc
imul
add
sbb
lahf
lods
sub
addr16
xchg
and
inc
mov
dec
insl
mov
adc
cmp
js
sbbl
in
mov
in
call
fsubp
in
stos
jmp
inc
mov
lock
xchg
mov
xchg
jg
stos
cmp
js
lock
pop
cmp
cmc
jae
popf
int3
sub
pop
push
jno
adcb
rorb
add
sahf
jb
xchg
dec
ds
in
idivl
cltd
jnp
mov
mov
pop
jb
outsb
mov
pop
das
jb
pop
cs
fwait
mov
lods
jo
cmp
inc
jecxz
loope
cld
or
sub
lret
enter
jno
and
ret
adc
dec
dec
and
mov
push
push
jno
and
jp
pop
mov
cmp
xchg
incl
out
pop
inc
jo
test
ret
stos
pusha
and
dec
push
test
mov
or
push
jno
ret
cmp
fwait
jno
cmpsl
and
sti
loope
test
sub
inc
inc
push
in
int3
push
and
adc
inc
xor
sub
ret
repz
in
test
sti
dec
icebp
mov
xchg
cwtl
mov
addl
dec
pop
out
out
shl
cmp
scas
inc
xchg
sub
xor
shrb
cmp
in
adc
inc
inc
bswap
xlat
mov
lcall
into
js
leave
add
sbb
push
xor
pop
addr16
dec
mov
loope
pop
pop
les
xor
popa
into
sbb
jecxz
mov
aaa
or
push
jmp
push
cli
sahf
pop
outsl
in
push
jno
jmp
and
cltd
in
stos
pop
lret
pop
cmp
repz
and
cmp
stos
sahf
lret
es
mov
lods
add
inc
cltd
sub
stc
sub
sub
jmp
push
subb
push
cltd
dec
and
sbb
push
in
sbb
inc
mov
pop
or
cmp
sbb
scas
lcall
jno
fldcw
mov
sbb
pop
push
shll
jnp
pop
mov
mov
in
pop
sbb
outsl
mov
clc
or
mov
imul
sbb
inc
ret
sub
inc
pop
lods
addb
push
mov
mov
push
dec
add
pop
cld
and
mov
inc
arpl
lret
js
outsl
jmp
iret
mov
xchg
ret
lods
mov
shlb
out
sbb
dec
xor
and
stc
sbb
icebp
xor
test
filds
mov
fldcw
xor
push
fldl
pop
mov
pop
mov
mov
adc
xchg
aad
jno
cmp
cmc
bound
shr
or
sbb
xor
rcrl
negl
and
pop
dec
mov
shl
xchg
fisttps
sbb
push
pop
inc
push
xchg
mov
fstl
and
pop
popa
sbb
in
xchg
mov
xlat
cwtl
cmp
mov
sbb
les
jno
pushf
mov
rcrl
add
mov
fdivrs
fcoml
sbb
push
or
fnsave
insl
cmc
mov
hlt
mov
hlt
iret
ds
ret
int3
and
mov
or
xchg
mov
xor
push
imull
sbb
lahf
mov
sbb
sub
xlat
push
movsb
inc
int3
jo
shrb
xorl
negb
roll
aas
add
jp
jmp
not
jno
push
aam
shlb
jno
sub
test
add
push
or
je
nop
cmp
push
decl
std
jne
adcl
mov
movsb
mov
test
inc
adc
stc
pop
fisubrs
mov
and
adc
cmpsl
mov
outsb
sbb
mov
outsb
inc
popf
push
in
mov
xchg
add
pop
inc
mov
xchg
ljmp
scas
je
icebp
int
inc
fs
pusha
and
dec
mov
in
xlat
or
or
insl
push
dec
inc
xor
sub
and
and
daa
mov
add
push
loope
dec
push
sub
loope
idivl
fidivrs
lea
dec
jmp
out
std
pop
jbe
mov
lcall
push
cli
pop
scas
sub
mov
mov
jp
mov
sbb
icebp
nop
cltd
or
inc
stos
enter
cmpsb
add
sbb
dec
adc
sub
test
mov
inc
inc
push
fadds
js
push
jge
fisubs
dec
sbb
add
xchg
mov
int
dec
push
push
cmp
inc
adc
jecxz
popf
cltd
mov
lret
nop
insl
mov
sub
mov
inc
stos
mov
sbb
xor
dec
fs
jmp
cli
xrelease
cltd
pop
lcall
stos
in
adc
or
scas
mov
lea
in
pushf
scas
rclb
jmp
inc
fcmovu
mov
xor
fsubs
daa
cltd
mov
mov
and
inc
push
fbstp
scas
inc
out
pop
es
negb
stos
push
lods
jmp
mov
pop
hlt
ret
or
or
and
or
push
cmpsb
lcall
sbb
and
hlt
lret
mov
frstor
pop
lret
je
xchg
jp
out
mov
mov
iret
sub
xor
sahf
cmp
pushf
out
decb
mov
in
adc
cmp
push
xchg
lahf
mov
mov
testb
push
lcall
and
cmpsl
cmp
cmp
rorb
pop
mov
cld
and
insl
mov
mov
cmp
enter
or
pop
dec
lret
int
dec
lahf
dec
dec
adc
xchg
sbbb
das
mov
or
or
stc
xor
jae
ss
dec
lods
and
xor
mov
fistl
lds
push
jo
sub
das
push
xchg
sub
subb
cltd
fcmovbe
testb
sbb
lea
jns
mov
subl
enter
in
pop
push
mov
lret
sbb
in
push
xlat
repz
mov
and
sub
outsl
in
lret
push
cmpsb
mov
add
insl
clc
in
sbb
add
add
xchg
cmpsl
mov
xor
call
sbb
lds
mov
xor
test
lds
xor
jecxz
cmp
xor
fbstp
sub
mov
test
in
roll
mov
add
mov
mov
jbe
andl
pop
mov
xchg
icebp
cmpsl
out
repnz
rclb
sbb
in
test
sti
mov
insb
or
addb
dec
inc
enter
fcompl
mov
shlb
leave
mov
mov
jmp
movsb
sbb
repnz
adc
adc
rcpps
lods
add
fwait
xor
sbbb
sbb
push
push
xchg
jns
loop
into
movl
lods
add
or
lahf
mov
lds
jge
push
in
test
mov
outsl
jno
out
mov
jbe
jbe
pop
lea
stos
or
shlb
adc
jne
dec
adc
lar
pop
aaa
stos
xchg
sbb
xor
movsb
sub
scas
call
int
sbb
shll
mov
pop
jge
jle
mov
sub
in
fsubr
add
or
lret
inc
fldenv
dec
scas
cmp
popa
or
xchg
into
and
mov
stos
cmp
pop
enter
fbld
movsl
loopne
xchg
data16
lahf
push
test
cmp
xor
out
bound
sahf
cmp
adc
lods
inc
adc
xlat
cmpsl
cmp
and
sub
ret
inc
inc
gs
sbb
inc
popa
cli
cltd
inc
jo
std
mov
lcall
in
inc
repnz
and
cmpsl
leave
shlb
pop
mov
shl
pop
xchg
sub
push
out
fwait
adc
mov
sub
es
fidivl
sti
stos
lods
push
sub
inc
lcall
enter
xchg
movsb
lcall
arpl
aam
imul
stos
mov
fdivs
push
xchg
xchg
xor
jne
inc
test
sbb
sbbb
mov
sbb
pop
sub
pop
xchg
sbb
int
ror
jmp
xchg
add
mov
add
lock
cmpsb
and
dec
jmp
insb
xorb
lods
or
pushf
dec
stos
xchg
push
lock
mov
test
movsl
xchg
dec
in
enter
fsubrs
movl
inc
jge
mov
dec
test
or
or
push
pusha
mov
sbbl
outsl
jge
daa
mov
loopne
dec
into
and
cld
adc
xor
mov
outsb
leave
rol
addr16
scas
cmc
enter
pop
mov
nop
mov
fidivl
pop
jge
ja
inc
pusha
mov
jb
lret
cli
imul
mov
decl
leave
push
into
push
fidivrs
std
inc
adc
inc
orb
jmp
mov
mov
testl
repz
xchg
js
imul
mov
jmp
mov
psadbw
cmp
push
mov
mov
iret
mov
in
popf
sub
fmul
mov
repnz
jne
rcll
mov
mov
mov
nop
loope
jmp
outsb
lock
mov
fs
cmp
lea
hlt
add
es
mov
xor
ss
sbbb
pop
jmp
fisubrs
sub
jb
cwtl
push
pop
pop
icebp
mov
js
jno
sbb
push
xor
cmp
fists
push
inc
or
pop
cmpsl
data16
mov
xor
in
leave
fxch
mov
fcoms
ja
ficoms
jo
push
incl
cmpsl
scas
cmp
mov
xchg
ds
mov
outsl
sub
add
xor
jne
je
mov
and
test
mov
xchg
pop
movsb
lret
aaa
mov
cmpb
xor
xchg
cli
adc
cwtl
sbb
dec
pop
incl
sbb
jno
aas
xchg
push
sbb
fistpl
sti
jle
data16
lahf
sbbb
mov
push
mov
sbb
mov
push
insb
sub
sub
shl
add
inc
ljmp
and
insb
pop
lds
std
mov
sbb
xor
dec
cmp
incl
iret
js
and
push
mov
in
pop
int3
and
sbb
int3
jne
mov
add
mov
jl
es
pop
flds
aad
inc
push
in
aaa
repnz
lock
inc
cmp
cmp
jb
lcall
cmc
scas
pop
mov
scas
cli
inc
stos
je
hlt
pop
lret
push
mov
inc
mov
mov
loopne
push
jbe
js
cs
das
add
loopne,pn
adc
xor
ja
aas
call
adc
loop
popa
jl
aas
add
mov
dec
popf
pop
mov
xlat
es
mov
mov
outsb
mov
xor
icebp
enter
xor
push
inc
pop
scas
mov
mov
test
iret
ds
adc
push
pop
cwtl
xchg
sbb
lods
in
movl
out
sub
add
outsb
xorl
xor
sub
cmc
int3
mov
or
xor
das
jl
shll
xchg
in
pop
pop
hlt
call
dec
dec
lcall
sbb
les
popa
push
daa
dec
insl
lret
xor
dec
sahf
xor
popa
icebp
inc
sbb
push
cmp
xor
and
adc
jo
push
lods
pop
mov
int3
sbb
inc
sbb
xor
dec
pop
mov
in
lods
sbb
ljmp
lahf
sbb
ja
loop
or
mov
in
aas
mov
xor
jecxz
sbb
mov
movsl
dec
mov
pop
jae
xchg
addr16
xchg
daa
add
pop
ror
int
cld
add
inc
fstpt
dec
or
pop
shr
cmc
std
sti
and
dec
dec
dec
dec
loop
mov
dec
inc
add
mov
lret
bound
push
and
xchg
push
adc
cmp
icebp
stc
scas
addl
or
mov
jne
loop
push
mov
inc
fsubs
push
jl
mov
pushf
fwait
outsl
mov
insb
imulb
and
popa
out
inc
pop
repz
adc
mov
xorb
sbb
sub
cmpsb
lret
roll
push
and
inc
jnp
xor
stos
pusha
ljmp
mov
or
pop
ja
jge
sbb
cmp
loope
or
adc
cmc
sbb
mov
scas
sbb
mov
imul
aad
out
shll
rcr
inc
inc
pop
push
repz
ret
pop
imul
gs
movsl
pop
cmpsb
cld
mov
cld
daa
stos
inc
pop
sbb
push
jne
imul
pushf
sub
adc
movl
lret
inc
dec
jg
popf
and
push
pop
test
out
insl
and
test
or
pop
rorl
push
xor
pop
aaa
push
loopne
adc
adc
sbbl
mov
test
push
add
test
xor
jle
add
sub
insb
sbbl
xor
les
and
and
dec
xor
add
out
mov
mov
pop
in
inc
lds
clc
push
mov
push
popa
mov
sub
sub
mov
mov
dec
out
dec
or
or
adc
or
jno
dec
adc
outsb
adc
ss
movb
xor
or
es
in
xchg
xchg
aaa
pop
jg
iret
nop
xchg
add
outsb
mov
test
cmpsb
loop
outsl
mov
xchg
nop
nop
insb
test
jbe
stc
imul
xchg
sub
mov
adc
push
outsl
xor
ljmp
push
push
orl
add
and
cmc
js
popa
movsl
mov
fdivp
lods
lret
aam
pop
cmp
fcomp
scas
jno
jle
mov
int3
xchg
std
adc
mov
cmc
xor
sarb
nop
jo
fcoms
push
add
sub
cmp
fdivrs
inc
mov
ja
mov
inc
inc
movsl
cld
mov
psubw
inc
fs
addr16
jmp
out
shll
mov
mov
add
bound
cltd
sub
stc
je
leave
mov
mov
in
mov
ret
fstps
rorl
mov
mov
or
xor
rcrl
push
sub
push
int3
xor
inc
in
cmp
cli
push
je
lea
add
cli
xchg
jae
inc
out
mov
pop
jmp
fwait
mov
arpl
lea
lods
add
pop
cs
lods
stc
jne
mov
push
cld
fwait
stos
in
hlt
xchg
shrb
mov
jne
lock
cs
mov
sbb
cmp
mov
mov
pushl
icebp
pop
xchg
dec
std
adc
jne,pn
cmc
inc
adc
jge
repnz
aad
add
jl
rcrb
inc
fsubp
scas
jl
or
stos
jo
inc
test
mov
xchg
jnp
cmp
mov
lcall
lcall
jle
sbb
subb
subb
pop
into
scas
mov
shlb
or
insl
push
popl
inc
or
cld
or
test
ret
inc
or
pop
mov
stos
xlat
in
daa
add
cltd
stc
mov
mov
xchg
mov
inc
xor
icebp
enter
and
pop
xor
test
jmp
divps
imul
cwtl
das
outsb
dec
pusha
scas
mov
rcrb
xchg
std
daa
xor
sbb
addr16
lea
test
mov
adc
cmp
mov
and
je
push
jg
cmp
xlat
test
mov
add
testl
inc
push
xchg
lods
dec
push
int
push
jp
xchg
add
jb
and
scas
adc
pushf
icebp
std
push
jno
jae
cmp
mov
push
jp
dec
cmp
out
push
in
shrl
xchg
cmp
rclb
add
popf
lods
and
xor
or
int
inc
fwait
cmp
mov
sub
pop
jmp
push
mov
decl
cltd
sub
add
shrl
mov
xchg
out
cmp
mov
push
scas
aaa
cmp
pop
mov
sbb
inc
mov
aad
shrl
addb
hlt
fidivs
test
outsb
cs
adc
es
cmp
fs
jecxz
enter
popa
mov
stos
call
sub
addb
daa
cmpsb
cmp
sub
cmpsb
call
pop
jmp
adcl
sub
call
jmp
mov
aad
rcrb
notb
in
popa
orl
mov
testl
xchg
lret
push
fsubr
adc
xor
outsb
xorl
xor
adc
adc
xchg
pop
mov
test
cmp
stos
outsb
add
test
dec
fldt
or
dec
cmpsb
adc
scas
xchg
enter
mov
fs
imul
mov
inc
xor
mov
lds
ja
inc
xlat
pop
cmp
aad
adc
in
test
or
mov
loop
enter
xchg
mov
pop
fwait
ss
jns
leave
cmp
push
adc
lcall
push
pop
mov
dec
out
scas
inc
and
int
jae
iret
xchg
inc
xchg
addr16
cmpsl
xchg
stos
pop
cmc
lret
jl
fstpl
cld
push
movsl
test
push
lock
sub
aad
incb
jg
es
pop
clc
mov
add
pop
lcall
and
xor
aaa
int
aad
rcrl
push
fisubrs
mov
jmp
jmp
in
and
cs
mov
and
movsl
cmp
loopne
inc
push
mov
dec
mov
push
push
scas
pop
push
pop
dec
xor
jns
fldl2t
lcall
ja
xor
add
xor
loop
xchg
mov
icebp
mov
mov
cltd
lahf
imull
cmp
in
stc
mov
repz
jne
fisttps
out
cli
xor
sub
sbbb
rorb
test
mov
fcoml
test
or
mov
and
loop
test
push
jno
loope
sub
or
leave
or
leave
mov
push
int3
dec
lahf
jg
jg
inc
popl
out
mov
dec
mov
leave
mov
jecxz
rcll
mov
fisubrs
rorb
test
mov
aam
sbb
mov
sti
popa
std
shrb
fs
scas
mov
jmp
aaa
sbb
jl
sbb
fbld
arpl
sbb
fcmovnu
mov
pop
xchg
in
xor
lods
ljmp
stc
mov
stos
cwtl
into
ret
lds
sbb
xor
xor
out
mov
ret
jne
rclb
inc
sbb
mov
mov
jg
aaa
pop
mov
rcl
data16
add
es
in
test
ret
or
cmp
inc
mov
stos
add
mov
sarl
into
inc
mov
add
test
insl
sub
popf
lea
pop
in
cmp
xchg
shlb
xor
pop
cmpsl
cmp
repz
outsb
mov
lahf
push
xchg
imul
pop
out
stc
inc
adcb
ja
fs
lods
inc
lret
xchg
mov
mov
loopne
pop
scas
aad
ja
pop
ja
shlb
mov
loopne
mov
mov
fistps
xor
fnsave
mov
xor
lds
pop
roll
pop
ret
add
cmpsl
push
sub
out
test
cmpsb
add
jmp
jns
pop
adc
getsec
add
imul
pop
inc
pop
clc
pop
es
mov
cmpsl
ds
mov
fistps
push
add
mov
mov
lret
sti
xor
pushf
cli
addr16
sub
lea
shl
es
and
push
enter
sub
xchg
mov
nop
movsl
cmp
dec
lods
xchg
push
push
shrb
ljmp
fildl
adc
add
pop
fsubrp
pop
repz
mov
push
inc
outsl
fadds
dec
xlat
aad
inc
dec
inc
in
mov
adc
push
mov
inc
dec
int3
xchg
xchg
dec
cltd
inc
fisttps
or
pop
jno
mov
aad
inc
fidivrl
push
popa
xor
lds
add
inc
aad
test
and
adc
icebp
adc
and
mov
iret
out
ficoms
xchg
bound
push
popa
cmp
movsb
push
jbe
cli
mov
sub
lahf
shrl
les
dec
lock
je
pop
adc
dec
loopne
cmp
sbb
test
jnp
xor
jmp
mov
or
adc
outsb
popf
xor
into
nop
xchg
xor
out
sub
sbb
xchg
pop
cmp
test
test
test
xchg
lods
sub
pushf
sbb
dec
pop
outsl
and
ljmp
xchg
fs
dec
and
dec
stos
cmp
out
xchg
sbb
mov
cmpsl
xor
fisubrl
inc
adc
in
ret
or
lods
in
cltd
loope
jecxz
stc
add
in
cld
popf
xor
pop
cmc
xchg
sbb
push
sub
jge
inc
mov
xchg
fs
sbb
out
in
and
xchg
loope
sbb
mov
frstor
or
dec
icebp
sarb
mov
iret
and
bound
imul
inc
fdiv
add
rcrb
cmp
loope
cwtl
in
inc
sbb
add
adc
jno
rcll
ret
pop
push
lock
mov
clc
inc
aas
mov
pop
loop
add
mov
mov
outsl
into
cmp
adc
fstpl
lcall
cmp
pop
ret
xchg
mov
jecxz
mov
mov
sub
add
es
pop
rclb
xor
rcrl
cmp
ja
pusha
mov
incl
mov
arpl
xor
push
adcb
pop
leave
fwait
repz
dec
jo
pop
adc
pop
cmp
adc
dec
xchg
out
mov
and
push
jmp
ret
cmp
insl
mov
iret
jb
jno
inc
push
or
push
dec
sub
lahf
loop
push
out
in
inc
pop
or
xchg
out
stc
enter
sub
pop
dec
jl
pop
out
out
mov
push
lret
mov
lds
dec
xchg
out
inc
in
aam
jmp
lret
push
decb
lock
sub
seta
inc
call
out
bnd
xor
gs
mov
xor
jmp
sbb
xor
pop
adcb
sub
decl
xor
in
gs
test
dec
push
andb
mov
xchg
add
cmc
fwait
pop
fucomp
outsb
inc
out
pop
dec
out
pop
iret
xor
inc
inc
enter
jno
xor
out
mov
mov
cmp
cmpsb
sbb
fcom
insl
mov
push
xor
adc
ficoml
xchg
jg
add
andb
scas
fists
mov
adc
sub
es
movlps
in
mov
lretw
jnp
flds
push
cmp
loopne
stos
leave
enter
out
inc
pop
mov
dec
add
in
repz
sbb
cmp
cmpsb
pop
scas
ss
add
mov
xor
daa
dec
inc
pop
xor
xor
cltd
pop
jmp
push
jbe
fsts
int
mov
int
jle
adc
test
mov
out
js
and
inc
cmp
push
lcall
ja
sub
lds
push
nop
imul
imul
ss
insl
sub
bound
pop
xchg
mov
loopne
jl
aam
pop
jo
or
mov
test
sub
in
xchg
jne
xchg
inc
inc
pop
mov
xor
mov
lea
lock
andb
jno
ljmp
enter
int3
mov
adc
fnstsw
pop
dec
out
mov
jmp
push
adc
stos
sub
mov
jl
pop
in
movsb
push
push
rclb
sub
push
movsl
pop
test
dec
xor
stos
fdivs
mov
cmp
mov
enter
push
cmpsl
and
sbb
insb
push
or
js
notb
imul
or
jp
fnstsw
icebp
mov
add
and
out
jns
inc
aaa
jnp
xor
cmp
jne
dec
xchg
sbbl
je
shlb
mov
mov
shll
sub
out
lods
mov
movsb
mov
jg
mov
loopne
sbb
repz
cltd
sub
add
mov
fdiv
inc
cmp
test
push
scas
push
cs
pop
pusha
inc
inc
push
in
lcall
mov
sub
fs
test
cmp
pop
stos
pop
in
les
add
xor
jp
or
xor
gs
cmp
push
cmp
sub
loope
inc
cmc
mov
inc
rol
in
pop
push
sahf
xor
mov
subl
in
stos
inc
sbb
mov
cmp
mov
xchg
sti
mov
mov
clc
cltd
das
into
pushf
jb
sub
mov
and
mov
xor
mov
sbb
push
inc
test
push
lahf
jb
andl
je
ficomps
mov
cmp
and
fisubrs
out
aam
push
scas
outsb
jl
inc
lods
sub
fs
sbb
mov
dec
imul
rcll
rcrb
stos
jo
sub
lock
adc
fs
insl
popf
out
sahf
xor
int3
xchg
xor
cmp
adc
mov
out
inc
push
pusha
mov
icebp
int
lret
test
add
ljmp
cli
enter
test
testb
jmp
mov
push
cli
stc
rcr
pushf
iret
xor
lea
sbb
in
add
inc
bound
push
inc
cmp
xchg
mov
aas
or
mov
fisttpll
or
mov
ja
inc
push
dec
cmp
test
js
mov
adc
mov
scas
dec
sbbb
jns
xchg
test
bound
mov
mov
push
sti
cmc
push
fbstp
or
and
add
sub
mov
dec
adcb
loopne
jb
jb
or
lahf
daa
fldenv
movsl
arpl
jmp
sub
movsb
imul
mov
pop
xchg
movsb
mov
jmp
jge
lcall
pop
cmp
xchg
mov
aas
mov
dec
lret
inc
fisttpl
jbe
or
and
and
daa
out
sub
dec
dec
addr16
fxch
je
mov
inc
repz
and
lret
xchg
mov
add
mov
xchg
xchg
add
les
push
outsl
dec
mov
loope
aas
mov
mov
pop
xchg
cli
and
cmp
mov
push
lods
loop
jb
div
or
stc
nop
cltd
pop
mov
pushf
ficoms
xor
test
ret
sub
jae
mov
pop
hlt
xor
and
adc
daa
inc
mov
rep
in
inc
fwait
inc
add
mov
mov
push
roll
rcrb
or
adc
mov
mov
idiv
jne
or
sbb
into
test
movsl
dec
ja
cmp
leave
sti
rorl
sbb
inc
out
jne
jnp
jge
add
outsb
inc
in
lods
xchg
jne
mov
or
pushl
iret
xor
inc
mov
sub
push
mov
imul
or
mov
rcll
add
not
pop
scas
lea
outsl
adc
adc
dec
pop
test
xchg
insb
mov
in
lock
fdivl
sbb
xchg
mov
cmpsb
add
int
ret
push
xor
aas
push
pop
xor
and
xor
add
sub
sti
sbb
dec
sbb
loop
cmp
jle
call
sbb
pop
dec
push
mov
cmp
jne
lret
adc
xchg
push
lods
inc
sub
inc
and
jecxz
sbb
pop
mov
xor
cmpsb
mov
addr16
test
testb
lahf
ret
sahf
ret
lahf
inc
jmp
and
inc
arpl
ret
ffree
mov
push
out
movsb
out
xchg
lods
pop
jne
hlt
mov
jnp
push
cmp
enter
mov
in
push
lods
push
jae
cmp
leave
sub
aas
adc
pop
fdivr
xchg
mov
aas
xchg
movsl
mov
sub
test
shlb
popf
xchg
iret
data16
fdiv
sub
aad
popa
cltd
adc
ret
imul
popa
xor
pop
loop
cmpsb
icebp
je
adc
mov
jae
pop
in
push
jb
xor
sarb
imul
push
lods
or
jne
mov
adc
adc
das
xabort
or
in
push
xchg
out
icebp
jecxz
test
push
icebp
mov
movsb
mov
push
adc
jecxz
jno
mov
lret
cmp
sub
jb
lock
adc
xchg
adc
lods
jns
pop
jl
push
sub
flds
enter
fdivp
push
icebp
lock
pushf
mov
pop
push
icebp
xlat
insl
fwait
add
fwait
mov
add
jno
es
insb
xchg
jp
xlat
push
je
test
and
es
stos
pop
std
std
xchg
das
xorb
out
int3
and
xorl
sahf
mov
je
jmp
xchg
dec
sbb
pushf
xor
push
jle
loope
arpl
inc
inc
les
jmp
sbbb
out
bound
push
std
sbb
adc
pop
push
fsubs
rorb
and
fnstcw
sub
xchg
cmc
add
pushf
mov
cwtl
lods
inc
insl
push
push
dec
andb
adc
cli
test
mov
es
mov
ret
jae
pop
ret
cmpsb
inc
mov
pop
fidivrs
xor
sbb
lret
add
in
into
cmc
stc
out
dec
jmp
dec
sbbb
mov
insl
pop
mov
fninit
mov
pop
jp
cmp
fdivrl
or
jge
push
cmp
movb
adc
push
xchg
addb
or
sbb
lahf
add
xchg
divl
addr16
pusha
ffree
xchg
sub
decb
outsl
adc
mov
aad
add
fcomps
mov
mov
pop
sub
pop
cwtl
jns
les
mov
mov
dec
jmp
adc
gs
ds
cmpsb
sahf
ss
nop
mov
dec
jecxz
lock
lock
xlat
pop
or
int
jp
cmp
sub
out
rclb
fiadds
cmp
int3
sub
jb
jl
data16
fmull
or
mov
inc
stos
xchg
test
test
mov
add
rcrl
xchg
mov
out
hlt
fldcw
movsl
pop
or
pop
inc
sbb
fsubrp
int3
mov
jp
cmp
sbb
mov
sub
inc
mov
rclb
ret
outsl
push
fistps
idivl
bound
ss
adc
dec
lcall
imul
xchg
mov
sub
dec
sbb
cmp
jne
dec
aam
aad
test
insb
neg
jbe
push
mov
pop
mov
xchg
add
mov
pushf
inc
inc
into
adc
push
sub
jle
cltd
lods
push
outsb
jb
mov
xchg
sbb
or
sbbl
jbe
insb
test
int3
out
push
xor
inc
arpl
mov
lret
dec
mov
aad
jo
shrl
jge
imul
pop
test
mov
or
popf
fidivrs
xchg
mov
in
popf
mov
dec
pop
imul
add
cmp
pop
insb
pop
adc
icebp
adc
enter
imul
out
xor
shll
xchg
add
aad
mov
pushf
xor
fsubs
pop
add
adc
push
mov
or
dec
bound
jo
pop
and
jb
scas
pushf
outsb
add
sbb
out
mov
je
mov
out
adc
ljmp
pop
gs
add
insl
or
adcl
mov
imul
ljmp
adc
sub
jno
pop
out
or
dec
mov
mov
adc
jg
and
xchg
cmpsl
addr16
jae
mov
divl
push
lfs
mull
loopne
jb
out
mov
mov
test
sub
xor
scas
pop
mov
mov
enter
ljmp
push
in
sub
mov
xor
loopne
scas
iret
pop
call
mov
sub
mov
pushf
jge
sbb
or
jbe
sub
ficompl
push
fcoms
push
push
push
loop
cmc
lahf
subl
out
inc
sbb
add
aam
clc
push
cmpsl
mov
dec
sub
mov
popf
push
lea
scas
call
push
dec
and
xor
mov
add
iret
sub
cltd
sbb
int
in
cld
mov
shl
js
adc
ficoms
mov
jae
mov
lock
inc
pushf
mulb
xor
push
push
push
fcoms
test
aaa
ja
repz
aad
push
mov
mov
mov
das
xor
rol
lahf
cld
xchg
daa
insl
add
nop
xchg
push
mov
mov
loopne
lcall
int3
cmp
int3
das
loope
xor
repz
aam
lahf
sahf
clc
mov
les
sub
jae
xor
and
sub
repz
shlb
xchg
shll
push
pusha
jmp
push
xor
or
ja
cmc
mov
and
sbb
xchg
dec
push
imul
jae
inc
cltd
clc
clc
sahf
cmp
lcall
cmp
ja
push
jno
mov
xor
inc
jno
cmp
jae
les
nop
jne
pop
out
cs
push
inc
or
rcll
mov
int
jb
mov
in
dec
cmp
imulb
or
cmp
fld
dec
ja
mov
ret
push
push
cs
popf
pop
adcb
ljmp
jbe
data16
xor
adc
push
mov
aam
shrl
cmpsb
imul
mov
cmc
mov
mov
icebp
sub
leave
inc
pusha
repz
gs
packsswb
mov
mov
sbb
dec
add
push
in
rcrl
out
das
fsubl
outsl
cs
cmp
xor
gs
shll
cwtl
ret
or
rolb
xor
mov
inc
cmp
pop
je
add
call
and
test
and
and
imul
sbb
pop
or
push
movsl
jecxz
fsubl
fs
push
out
iret
pop
mov
jnp
pop
rcrb
ret
je
cmpsb
lock
stos
jae
ja
mov
shlb
xchg
loop
imul
xchg
sbb
addr16
and
in
out
mov
xchg
lea
adc
push
jmp
imul
fdiv
je
cmpsb
or
push
pushf
dec
insb
fwait
dec
mov
frstor
jnp
es
cli
adc
or
push
adc
jnp
sub
xchg
mov
mov
mov
mov
fisubs
lea
or
pshufw
xchg
jne
jno
test
test
into
daa
sbb
out
inc
fisubl
ljmp
jns
outsl
daa
ljmp
xor
jmp
mov
inc
and
mov
cmp
cli
jno
lahf
imul
hlt
fsubrs
or
daa
stc
and
subb
outsl
jnp
pop
jb
movsb
rorl
inc
cmpsb
and
and
jmp
out
enter
adc
inc
cmp
enter
out
daa
mov
mov
pushf
mov
cmp
stc
adc
xchg
pop
mov
xchg
cs
mov
push
xchg
mov
mov
add
cvtps2pd
nop
push
add
imul
stc
shrl
pop
push
push
adc
scas
mov
jne
add
nop
cmp
imul
insb
jle
cli
addr16
pop
sbb
test
sub
mov
cmp
jnp
cmp
std
sbb
pop
pushf
jns
in
dec
testl
jg
fsubp
inc
or
adcl
mov
mov
jae
push
jp
aaa
push
jmp
mov
fisttps
mov
fdivrl
stos
divl
mov
idivl
xchg
cltd
mov
fsubrl
shll
add
xor
ja
inc
jae
pusha
inc
jge
mov
mov
fnsave
mov
or
add
ja
out
decb
pop
push
jno
mov
xor
lret
test
xorb
mov
fadds
inc
inc
stc
push
sbb
mov
push
in
pop
cs
mov
sbb
enter
sbb
das
xor
xchg
xchg
clc
mov
xor
push
jb
popf
into
fisubrs
mov
sub
push
sub
aas
mov
mov
push
inc
roll
sub
bound
pop
fs
mov
xorb
std
cmp
ljmp
jo
adc
das
mov
testl
call
or
call
popf
stc
push
cmp
pop
testl
sarb
pop
cmp
pop
push
rcrl
jl
test
mov
add
roll
add
es
testl
sti
ds
sbb
xchg
cmpsb
mov
sub
pusha
sahf
gs
mov
popa
and
xchg
data16
mov
popa
xchg
mov
inc
pop
push
xchg
xchg
cmp
adc
aad
ljmp
xor
test
mull
loop
loope
ds
sub
notl
dec
in
insb
les
insl
mov
cmp
fwait
test
aam
mov
bound
xchg
and
adc
lret
xchg
adc
mov
add
mov
lret
mov
pop
or
push
into
pop
arpl
pop
neg
les
outsl
jbe
shrl
ljmp
sbb
fs
dec
mov
popa
leave
jae
mov
mov
cmp
dec
lods
push
pop
sti
inc
je
push
xor
sti
push
pop
ss
mov
add
pop
cmp
jnp
insb
fxch
jne
jle
sbb
daa
jle
inc
jp
data16
mov
push
cmp
dec
dec
ss
popf
push
cmovs
and
addr16
xchg
or
popa
xorps
mov
loopne
lock
adc
sub
sbb
js
enter
cmp
rorl
mov
imul
into
xchg
test
push
in
cld
mov
je
and
dec
mov
push
pop
arpl
ret
jno
jmp
int3
pop
std
fs
icebp
lods
adc
adc
jle
hlt
mov
das
clc
loopne,pn
or
repnz
in
lea
push
adcb
jbe
jge
push
xlat
dec
cmpsb
mov
sbb
adc
xor
test
scas
xchg
aas
out
inc
inc
inc
adc
inc
fldl
nop
xor
push
loop
push
cmp
subb
shrb
rorb
rclb
in
lds
jmp
add
mov
iret
mov
mov
scas
les
ds
fistl
push
push
subb
pop
scas
lret
divl
push
in
arpl
sub
test
leave
insb
lret
das
cmp
push
sbb
xorl
jge
pop
vpaddd
sarb
pop
popa
add
sbb
or
or
jnp
mov
and
jno
and
es
imul
enter
sbbl
loope
dec
cmp
hlt
dec
jbe
cmpsl
mov
dec
shlb
dec
shrb
out
cmpsl
popf
mov
pop
push
xchg
push
sbb
fs
sub
jbe
icebp
fwait
orl
add
in
aas
pop
jge
fcomps
mov
dec
pminub
dec
out
hlt
outsl
jns
xchg
insl
sbb
and
fimull
dec
out
cmp
jbe
mov
and
inc
fmul
inc
and
jae
dec
ds
js
sub
add
cmpsb
and
xchg
cmp
in
sti
xor
repnz
xor
adc
pusha
cmp
imul
pop
adc
mov
or
in
pop
add
dec
loopne
in
insl
sbbb
fwait
and
movsl
sub
add
je
pop
pop
add
out
test
je
dec
dec
sub
cmp
add
xor
cmp
sbb
pop
sub
dec
nop
shrl
jo
adc
sbb
lods
cmpsl
hlt
mov
and
inc
loope
jp
and
call
sub
aad
mov
mov
pop
adcb
dec
icebp
movsl
cld
inc
and
mov
stos
pop
jg
pop
sub
lods
xor
sbb
dec
fildl
jecxz
dec
ljmp
sub
fs
in
push
in
mov
pop
mov
push
es
or
jp
lods
inc
fstpl
jno
jp
add
les
sbb
aad
mov
mov
into
leave
int
adc
jno
inc
mov
dec
or
fnstsw
push
shrb
add
and
jbe
pop
pusha
sbb
nopl
or
mov
jne
out
aam
push
lahf
jl
sbb
in
loopne
mov
xlat
push
push
pop
lds
pop
mov
pop
out
test
cmc
adc
cs
adc
cmp
fadds
mov
js
ja
rcrb
cs
pop
fsts
add
push
pushf
pop
out
add
cmp
cs
bound
jno
jae
dec
mov
xchg
les
imul
mov
mov
lret
int
xlat
movsb
mov
dec
rolb
sub
mov
cmc
es
push
fcoms
add
and
test
mov
mov
shlb
inc
jecxz
lret
inc
aas
fs
fsub
test
mov
lret
pushf
in
icebp
insb
stos
cmp
lea
pop
ret
cmpb
cltd
sahf
jb
sar
inc
ljmp
and
mov
flds
bndstx
mov
fsubr
out
popf
xchg
pop
cmpsl
lock
or
addr16
jne
inc
xor
incl
les
mov
mov
dec
push
pop
jo
jo
les
pop
aaa
testb
add
cmp
adc
sub
push
inc
adc
jae
insl
in
inc
repnz
test
mov
call
push
xchg
out
cmp
sbbb
loopne
aaa
mov
sbb
sub
mov
arpl
mov
fsubrs
mov
cmpb
pop
mull
fs
mov
outsb
lds
jo
dec
mov
dec
and
imul
or
mov
pop
cli
or
mov
pop
in
data16
or
nop
adc
sbb
nop
pop
addb
mov
pop
push
or
mov
test
pusha
mov
mov
dec
scas
push
int3
rcll
addl
mov
jae
xor
adc
pop
mov
and
aaa
lret
push
lods
stos
iret
and
jbe
shll
test
xor
push
push
ficomps
movsb
push
sbb
outsb
and
lods
or
adcl
jo
lret
loope
dec
lret
or
xchg
adc
imul
imul
out
orl
sub
rcrl
cmp
lret
testb
or
ljmp
test
push
ja
in
push
inc
inc
mov
je
mov
mov
sbb
xor
cmp
pop
test
dec
loop
adc
cmc
inc
pop
js
mov
call
pop
flds
push
ret
inc
outsl
leave
push
inc
into
mov
dec
inc
dec
sub
fcomps
add
cld
inc
mov
sti
mov
and
cld
jp
fbld
adc
push
mov
sbb
mov
in
inc
push
test
sbb
cmp
pushf
scas
mov
bound
push
in
sahf
lds
shll
popa
xchg
and
pop
add
cmp
stos
cmpsl
xchg
cmp
jo
add
shlb
xlat
mov
pushf
hlt
xchg
adc
mov
mov
inc
popf
out
pop
imul
push
sbb
sub
int
ss
jg
xchg
pop
pusha
mov
mov
je
cmp
mov
jmp
dec
imul
xchg
ret
cmp
jp
inc
popa
mov
jne
ljmp
lock
adc
mov
cmp
test
or
mov
jp
out
cs
pop
sub
xchg
adc
mov
lock
int3
fisttps
scas
add
scas
cmp
fadds
lret
sub
shll
aaa
vmovups
std
sbb
fwait
sti
movsb
cmp
outsb
call
lock
mov
sbb
mov
cmp
enter
arpl
cwtl
leave
jnp
push
into
dec
in
xchg
push
sub
and
adc
test
xor
push
mov
push
pop
fmull
pop
cmc
js
mov
repz
sbb
nop
lahf
fnsave
or
ret
jno
inc
xor
pusha
push
scas
mov
add
push
dec
mov
xorb
cmc
mov
xor
mov
push
mov
mov
les
pop
aam
sub
insl
fcomip
or
xchg
or
add
loopne,pt
out
lock
dec
push
and
or
inc
cmp
push
jecxz
dec
add
cli
xor
cmc
sub
test
inc
inc
and
popa
int
mov
mov
xor
xor
mov
push
test
adc
lret
push
pop
push
xchg
sub
mov
loopne
and
inc
mov
pop
int
mov
repnz
scas
xchg
add
mov
fsubs
aad
sub
leave
mov
iret
push
lods
mov
xchg
loopne
imul
jg
sub
jo
sbb
xor
jne
mov
cmp
inc
mov
and
stos
mov
or
mov
les
dec
fcmovnu
jbe
pop
mov
and
pop
ja
sbbl
xchg
sbb
cmp
rcr
jo
fs
xchg
sub
scas
dec
cs
aaa
lea
cmp
dec
push
aam
pop
nop
rcl
icebp
jl
mov
inc
shrl
inc
dec
dec
sbb
mov
out
in
inc
shlb
mov
aad
jne
dec
cmp
xchg
cld
pop
sarl
outsb
insl
add
insb
push
icebp
fisubs
mov
jo
or
rcrb
jo
xchg
and
inc
lcall
xchg
add
lahf
cmp
aaa
insl
data16
inc
lea
mov
mov
imul
xor
je
sbb
fldt
out
jae
lret
je
inc
pushf
xlat
test
inc
pop
jmp
adc
or
inc
fsubs
vmulss
sbb
rorb
lea
shld
xor
data16
insl
mov
stos
insb
add
adc
test
mov
dec
insl
mov
adc
jg
orb
mov
movsl
sub
or
imul
jecxz
xor
repnz
jno
inc
or
mov
lods
xchg
dec
testb
inc
test
int3
ficoms
inc
push
adc
lcall
ss
fwait
mov
out
xchg
sub
in
xorl
jnp
pop
xchg
fstpl
xor
sbb
xor
adc
jge
das
push
mov
and
push
adc
jb
and
outsl
sub
jo
mov
shrb
adc
out
cmp
jne
jno
inc
sub
cmp
int
out
dec
push
fcmovb
cmp
push
lcall
ret
inc
in
pop
sahf
adcb
xchg
mov
aam
iret
loope
mov
pop
mov
xchg
sbb
sbb
sub
or
int3
xchg
xor
scas
pop
fs
dec
mov
sarb
sbb
stos
pop
ret
cmp
pop
pop
shld
shll
cld
test
ss
dec
inc
rcrl
push
xchg
test
push
imul
pushf
pop
jns
push
jge
cmp
sbb
or
and
sbb
sub
xlat
add
in
stos
mov
shlb
push
imulb
sbb
hlt
sahf
xor
mov
push
mov
dec
lods
inc
jl
stos
inc
push
pop
int3
in
aas
pop
insl
jno
inc
mov
cmp
pushf
ret
dec
adc
ret
dec
pop
adc
fcmovnbe
fs
insb
inc
push
bound
inc
imulb
call
dec
or
out
dec
loop
mov
mov
clc
ret
mov
repnz
xchg
sub
mov
pushf
mov
out
movsl
lds
mov
xchg
mov
sarb
jo
rclb
pop
xor
test
or
repz
gs
cmp
inc
jmp
push
push
mov
arpl
in
lahf
mov
inc
jns
xchg
and
push
jae
dec
mov
mov
pop
xchg
xlat
cmp
test
int
sbb
outsl
lods
mov
jb
icebp
lahf
push
arpl
clc
sarl
nop
pop
inc
fwait
pop
cmp
cmp
adc
inc
mov
out
sbb
add
test
push
jnp
sti
and
ss
lds
pop
pop
adc
dec
in
mov
jle
lea
rolb
mov
iret
jbe
adc
mov
scas
dec
or
mov
dec
mov
inc
lods
mov
push
mov
sub
cltd
xorb
dec
xor
inc
repnz
xor
dec
pushf
xchg
bound
hlt
mov
pop
mov
nop
xchg
xor
mov
stos
shl
mov
push
jno
dec
dec
mov
inc
sbb
sbb
movsl
mov
jg
pop
in
std
movsb
mov
js
clc
jl
repz
mov
lods
outsl
mov
sbb
mov
mov
mov
rcrl
xchg
fbstp
je
and
push
out
mov
cwtl
dec
jecxz
out
adc
sub
mov
vpshufhw
inc
inc
iret
inc
xor
add
cld
hlt
mov
xchg
dec
mov
lret
pop
cmc
shl
outsb
dec
repz
add
xchg
add
lahf
out
fcomip
in
scas
loop
loop
jmp
bound
xor
cmp
scas
jno
sbb
xor
fs
int3
test
stc
out
push
adc
loope
aaa
cmp
jmp
inc
pop
lock
dec
lds
add
movsl
lock
mov
aas
int
add
imul
push
push
sbb
pop
xchg
repnz
jge
lods
das
pusha
outsl
inc
xchg
push
fstps
xchg
imul
ror
push
mov
pop
ret
xchg
dec
fbld
mov
cmp
mov
shlb
adc
iret
into
xlat
cmc
leave
inc
push
je
push
adc
es
lods
push
enter
cmp
cmp
mov
repz
outsb
cmp
sbb
push
pop
fcomps
mov
or
add
mov
push
out
adc
orb
xchg
mov
out
leave
pop
xchg
add
cli
xor
pushf
xor
cmpsb
test
push
cmc
fcompl
int
sbb
fildll
push
jmp
cmc
cmp
or
push
mov
jno
xor
clc
sahf
das
mov
jl
aaa
sahf
xor
pop
out
aas
hlt
jl
scas
adc
rcll
aam
imul
loope
test
idivl
cmpsb
sub
jp
out
cld
scas
xor
repz
xchg
xlat
mov
mov
sub
add
inc
dec
adc
or
inc
mov
cli
xchg
flds
outsl
popf
sub
mov
test
rep
nop
leave
inc
fnsave
rcr
out
in
push
xchg
leave
lock
add
lds
mov
lcall
add
inc
iret
xchg
in
mull
push
xchg
ror
scas
insb
jns
jle
lea
insb
cwtl
jne
mov
xor
sub
cmp
push
leave
xchg
mov
push
jge
imulb
ja
fwait
xor
push
in
xchg
mov
sahf
adc
inc
mov
sub
xor
xlat
hlt
or
mov
popf
mov
push
or
js
addl
pop
cmp
mov
xchg
adcl
aas
test
sub
jae
inc
lahf
out
add
int
jbe
mov
push
stc
xor
jae
outsb
lcall
mov
mov
xchg
movb
mov
lahf
cmp
das
jb
dec
xchg
pop
fistpll
fsubl
orb
out
bound
loope
clc
stc
or
xor
pop
mov
inc
fildl
cltd
cld
lcall
in
pop
stos
sti
stos
mov
inc
into
pop
fcmovnbe
inc
and
xor
fildl
int3
scas
cmpsb
test
mov
mov
xor
or
jbe
mov
imul
jl
or
cmc
dec
fstpt
sbb
mov
int
sub
pop
push
push
jmp
lret
inc
sahf
cmp
pop
jl
push
mov
mov
push
mov
mov
cmp
stc
test
push
inc
xchg
add
cltd
inc
xchg
xor
das
mov
cmp
push
sub
sbb
cmp
mov
dec
fwait
mov
arpl
pop
jecxz
int3
mov
dec
push
mov
ret
rcr
repnz
outsb
lods
sub
mov
add
int
xor
add
mov
mov
lods
pop
ljmp
jne
test
ja
lea
inc
pop
pop
push
fstpl
aas
pop
dec
jno
sahf
das
imul
push
lods
xchg
mov
or
mov
test
divl
sub
jb
sub
popa
daa
cmp
negl
push
jns
mov
pop
stos
cmp
sbb
sub
out
clc
sahf
sbb
out
enter
push
add
jb
outsb
shll
mov
popf
negb
out
fsts
out
cli
loope
push
pushf
cmpl
addr16
pop
fisttpl
icebp
cmpb
or
or
in
xchg
sbb
add
stc
or
rcrl
and
dec
xchg
mov
sbb
test
clc
jecxz
fwait
or
ficompl
ds
out
cmpsl
dec
outsb
lret
sahf
stos
push
mov
mov
inc
sub
insb
jg
push
or
bound
pop
jbe
jmp
mov
sbb
xlat
lea
mov
cmpsl
rorl
xchg
xchg
cmpsb
cmc
mov
push
inc
mov
lahf
add
insb
inc
jmp
sti
jo,pn
jp
call
fdiv
scas
and
je
decl
sarl
std
inc
cmp
add
fisttpl
repnz
mov
dec
mov
pushf
sub
mov
xchg
subl
inc
add
pop
add
mov
jl
or
adc
shlb
out
addr16
jnp
iret
cmp
push
ret
add
ss
jl
aas
arpl
outsb
hlt
cld
outsb
loopne
push
cmc
jb
inc
push
cmp
push
or
jp
ret
int3
dec
stos
mov
setae
ljmp
adc
lret
icebp
xchg
cmp
sbb
repnz
xchg
outsb
inc
fidivrl
pop
lods
or
dec
jle
mov
adc
or
push
adc
inc
outsl
scas
pop
fcoms
pop
xor
pop
jne
sub
sub
xchg
repnz
outsb
iret
idivb
xchg
sbb
lret
xor
inc
rcrl
loope
sub
mov
test
fwait
or
sbb
stos
jecxz
xchg
mov
pop
repnz
inc
in
sbbl
add
add
xchg
outsb
in
pop
call
jb
inc
and
xchg
inc
outsl
fadd
les
cmpsb
lock
push
ja
add
add
ret
sub
xlat
fisttpl
flds
mov
insl
mov
loope
lret
dec
in
fisttps
mov
aad
adc
mov
jg
mov
popf
scas
cli
stos
dec
shll
ss
push
repz
cld
jns
inc
jbe
jne
pop
add
jns
and
lret
and
push
insl
inc
lea
xchg
cmp
add
mov
or
leave
cld
pop
insl
ffree
sub
push
inc
and
xchg
dec
scas
push
mov
mov
das
or
mov
mov
stos
sarl
pop
test
hlt
pop
int3
fwait
sub
xor
jnp
clc
dec
enter
jo
pop
out
jecxz
inc
add
movsb
je
sbb
lods
es
mov
fnstsw
dec
xor
dec
mov
mov
mov
pushl
push
fadd
pop
mov
cmpsl
daa
mov
mov
mov
dec
xor
inc
ljmp
dec
mov
jnp
pop
inc
cmp
loopne
mov
inc
xchg
and
lods
xor
push
inc
inc
andl
cwtl
pop
mov
add
lret
clc
test
mov
loop
iret
push
fcmovb
das
mov
push
sahf
repz
pop
jle
cmp
or
xor
xchg
jbe
ret
mov
lds
mov
jge
dec
add
sub
test
lret
inc
mov
adc
cld
iret
push
mov
jg
sbb
cli
push
filds
test
dec
mov
or
jo
rcrl
mov
in
sub
mov
les
mov
jne
idivl
sbb
xchg
testb
pop
jo
push
xchg
pop
gs
fsts
sahf
cs
pushf
sub
jno
hlt
jnp
in
fidivl
imul
sti
jmp
sub
mov
sub
pop
and
cmp
dec
xchg
sarb
movsl
inc
aaa
mov
cwtl
jb
cmp
rorl
jl
adc
arpl
loop
fistl
hlt
jle
lock
sub
popa
inc
push
sub
out
jb
add
adc
pop
int3
pop
stos
mov
in
test
call
mov
ljmp
insl
movsl
stos
cmp
pop
mov
loope
adcb
and
push
inc
mov
hlt
test
fmulp
out
sub
push
push
andb
cmc
call
xor
cmp
xchg
inc
repz
cmp
gs
jb
push
arpl
pop
and
pushf
jmp
mov
add
insl
in
sbbl
cmc
or
or
mov
sub
sbb
mov
pushf
add
sbb
mulb
imul
or
xchg
fists
sbb
mov
pusha
xchg
fs
outsb
cmpsl
xor
jecxz
add
xor
xchg
and
dec
mov
fs
and
mov
shll
jg
iret
xchg
out
cltd
mov
leave
movsl
insl
jle
sti
push
jp
sbb
jecxz
out
test
sub
ret
and
sti
int
shr
daa
pop
insb
ret
sar
xor
mull
rorb
imul
push
cltd
data16
ss
aaa
sbb
add
push
and
stos
pop
jno
sub
dec
stos
mov
mov
xchg
daa
xor
xorb
repnz
stc
pop
test
cmc
cmp
mov
pop
jl
sub
xchg
jb
aas
mov
daa
inc
loopne
jne
sub
mov
mov
pop
push
sbb
shlb
add
cmp
subb
or
imul
mov
jno
inc
int3
jae
pushf
mov
cmp
xlat
outsl
ljmp
lock
mov
imul
inc
cmp
sbb
rorb
cmp
out
int3
and
or
scas
xchg
xor
inc
daa
mov
int3
mov
add
sub
mov
aad
cmp
ret
adc
cwtl
jno
pop
mov
pop
stc
push
xlat
in
cmp
das
fdivr
popf
jbe
shlb
push
out
cld
adc
fisubrl
das
outsb
ret
mov
push
dec
lahf
and
out
xchg
es
imul
mov
cmpsb
mov
sbb
in
pop
lds
xchg
hlt
jp
mov
nop
push
or
and
mov
out
sub
dec
push
push
push
insb
xor
push
imul
arpl
scas
test
dec
sub
pop
and
mov
xlat
add
or
mov
and
mov
mov
addr16
xor
mov
test
mov
push
cwtl
sub
lcall
notb
cmp
scas
mov
popf
cmpl
sbb
ret
aas
cli
adc
dec
xor
dec
add
outsb
repnz
adc
testl
stc
jo
leave
lret
xchg
pop
jmp
cmpsl
sub
adc
es
cs
cli
adc
mov
or
sbb
jnp
jno
rclb
loope
adc
and
fbld
fs
arpl
popf
mov
push
jno
call
mov
sbb
rcll
lret
sbb
xchg
xchg
and
or
les
test
inc
pop
imul
cmp
in
dec
shlb
lods
push
push
fmull
imul
sti
cwtl
insb
stos
push
imulb
cltd
je
outsl
sbb
repz
xchg
test
mov
movsl
sbb
ss
or
mov
dec
push
xchg
add
scas
pop
xchg
pop
lret
xchg
push
mov
mov
bound
sbb
push
aam
xchg
sti
pop
jl
xchg
mov
test
jecxz
aad
push
inc
fwait
xor
sbb
fcomi
or
rcrl
dec
jnp
iret
loop
adc
mov
cmpsl
push
lret
fst
mov
lock
loope
mov
cmpsl
bound
add
shll
inc
ret
mov
leave
lret
or
lahf
adc
popf
pop
and
mov
jmp
ss
jae
mov
pop
xchg
out
jmp
or
sarl
push
fsts
aad
inc
ret
push
stos
xchg
mov
shufps
mov
mov
push
sbb
pushf
addr16
mov
leave
mov
adc
mov
jno
aam
in
stos
xchg
cmpsl
mov
xchg
xor
or
out
sti
jns
fdivr
rcrl
ljmp
cmp
push
jle
scas
and
out
pop
lds
outsl
sahf
stos
push
aas
loop
push
sarl
inc
lret
pop
adc
js
lcall
dec
or
inc
out
cmp
mov
mov
andb
mov
popf
or
jo
xchg
adc
mov
add
cmp
stos
cmp
subl
inc
pop
mov
xchg
add
test
nop
orl
pusha
hlt
inc
shl
daa
data16
rclb
popa
mov
mov
inc
and
and
lcall
xchg
pop
sub
push
push
aad
sbb
out
sub
imul
push
call
iret
dec
xchg
cmp
scas
sbb
testl
sub
push
jmp
dec
push
mov
js
imul
mov
jae
inc
sbb
jp
jle
cltd
pop
adc
fbstp
mov
jbe
add
popf
das
xor
cmp
jb
fsubs
inc
pop
imul
stos
aas
xor
inc
push
mov
cmp
fdivrs
cli
push
jle
jns
out
push
popf
xor
or
add
outsl
dec
test
push
and
xchg
inc
lods
dec
inc
divb
cwtl
sti
mov
cmp
mov
insb
rcrb
mov
fisubrs
fsubrs
dec
imul
js
mov
cwtl
popf
adc
mov
mov
lea
loop
pop
adc
jnp
xchg
pop
inc
ja
clc
mov
ds
fmull
mov
mov
gs
ret
out
bound
sti
mov
shlb
adc
jecxz
out
xor
xchg
ljmp
pusha
iret
sbb
js
mov
cmp
test
sbb
jp
adc
push
clc
ror
fcom
icebp
mov
adc
push
dec
pop
gs
iret
xor
lock
and
lea
scas
fstpt
inc
or
fiadds
push
call
popa
mov
lds
add
ljmp
insl
cmc
enter
jns
mov
cmp
add
mov
daa
jno
or
pop
xor
stos
shl
faddl
fdivs
pop
inc
dec
jecxz
jp
push
test
icebp
push
pop
ljmp
or
sub
mov
out
pushf
add
repz
jp
insl
les
adc
in
pop
loope
mov
sub
xchg
imul
mov
lea
or
cmp
aad
sbb
inc
pop
dec
ds
gs
pop
and
pop
xchg
test
lds
dec
pop
cld
aad
enter
sbbl
addb
sbb
mov
cmp
lret
jl
cmp
or
ss
in
out
fwait
scas
push
mov
mov
sub
mov
push
lret
jnp
jno,pt
or
inc
test
jae
and
mov
pusha
out
pop
leave
adc
xchg
lods
fucomi
fiaddl
mov
ret
aad
pushf
or
mov
test
out
fisubl
xchg
in
stos
adc
sub
cmp
stos
movsl
in
inc
pop
lds
mov
pop
gs
roll
shll
filds
inc
add
push
call
jne
sbb
or
cmp
mov
mov
test
jg,pt
sbb
test
pop
mov
ret
mov
clc
sbb
and
cli
es
mov
mov
into
ljmp
pop
jg
mov
scas
out
loop
addl
leave
outsb
push
jne
mov
mov
mov
js
push
add
add
xlat
mov
ret
push
mov
mov
xor
repnz
mov
mov
mov
popa
test
mov
int3
dec
inc
pop
cmp
xor
pushf
mov
stos
mov
push
jle
rcll
inc
ljmp
sbb
cld
jbe
inc
cmp
orl
sahf
pop
loope
adc
flds
xchg
and
pop
push
xchg
cmpsl
in
lea
in
lds
dec
mov
push
pop
jge
lods
mov
cmp
xchg
inc
into
icebp
mov
je
fldt
inc
or
cmp
mov
mov
aaa
xor
out
lcall
adcb
es
testb
outsl
xor
xor
in
and
test
dec
pop
subb
movsl
lds
pushf
cmp
imul
out
add
adc
imul
xor
lods
mov
out
rcrl
and
sbb
sbb
mov
add
inc
pop
mov
adc
negb
dec
pop
scas
int3
mov
or
mov
sbb
pop
push
push
fmull
test
and
cmc
dec
xchg
ja
testl
shrb
push
sub
ss
call
idivl
xchg
add
ret
fmul
xchg
adc
shlb
pop
push
imul
js
cltd
out
rorl
xchg
xchg
lret
out
jl
sub
daa
incb
xchg
push
aam
test
aaa
push
ss
jg
push
lods
or
in
icebp
into
dec
or
mov
or
outsl
cwtl
cli
aad
adc
je
cmp
fstl
gs
xchg
cmp
addr16
mov
inc
pop
jecxz
inc
sbb
mov
jae
jmp
mov
daa
dec
fisubrs
stc
popa
mov
add
or
pop
lret
mov
out
test
lods
in
pusha
cmpsb
mov
jo
and
adc
repnz
jb
jecxz
push
bound
pusha
pop
subb
mov
ja
sbb
ret
fsubrs
mov
lods
out
imull
ret
arpl
lret
ja
pop
push
mov
pop
fldl
sahf
fbstp
cmp
mov
dec
out
inc
pop
and
jge
jne
push
pushf
outsb
adc
fsts
fs
ret
push
fbstp
je
mov
into
scas
pop
add
xor
push
movsl
xor
adc
aam
adc
arpl
jnp
mov
sbb
jns
mov
and
push
dec
test
inc
ds
mov
xchg
xor
in
jmp
or
add
jno
pop
jmp
pop
add
adc
add
mov
imul
xchg
scas
int3
jo
mov
push
xor
inc
sbb
dec
arpl
insl
xchg
mov
cmpsl
add
push
stos
xor
int3
mov
lcall
pushf
mov
xchg
mov
loopne
arpl
push
push
xchg
scas
and
mov
rcrl
je
aam
add
cmp
push
sub
ds
pop
icebp
loopne
aas
out
popa
jne
clc
shlb
test
in
out
mov
mov
mov
push
inc
sbb
mov
arpl
inc
aad
or
sub
test
cs
jo
mov
mov
out
add
sahf
inc
arpl
inc
xchg
jo
test
mov
gs
and
aaa
xchg
mov
or
cmc
pop
pop
clc
icebp
add
js
and
outsb
adc
sub
sbb
add
lret
ljmp
fnstsw
shrb
sti
lods
subb
mov
repnz
add
std
lods
or
mov
andb
add
das
sbb
add
mov
js
add
sub
cmpsl
cmpsl
push
mov
adc
mov
or
sbb
jecxz
imul
push
adc
in
fidivl
rclb
adc
cmp
sahf
stos
xor
pop
jae
addb
push
mul
cmpsl
out
push
jbe
mov
mov
imul
jge
jmp
sbbb
sub
add
mov
dec
inc
std
mov
add
mov
addr16
in
movsb
dec
loopne
adcb
stos
cmp
ret
cmp
daa
ret
insl
mov
das
sub
jb
mov
pop
add
nop
fidivrs
sbb
test
or
or
or
adc
xchg
sbb
mov
insl
shlb
jb
aad
cmp
pop
jbe
cli
imul
pop
sahf
sub
rorb
and
xor
dec
jecxz
pop
jnp
or
mov
or
xor
adc
push
rcl
jne
into
shrb
outsl
jle
lds
sbb
jo
aam
hlt
mov
hlt
sub
arpl
inc
xchg
jno
mov
jmp
fidivl
mov
imul
add
cwtl
into
cmp
sbb
adc
jo
fucomi
ret
loop
ds
test
sti
and
imul
jbe
push
repz
ss
xor
add
vpunpckhbw
adc
xchg
mov
outsb
test
adc
xor
rcll
aam
push
sbb
lahf
fstpt
mov
cmp
xor
dec
mov
jmp
lahf
shlb
push
or
or
xchg
mov
mov
jo
push
push
add
push
push
or
push
stc
popf
std
stos
cs
imul
sbb
lcall
mov
pop
test
xchg
stos
mov
jne
dec
push
or
push
mov
gs
mov
mov
dec
dec
dec
cmp
jecxz
pop
dec
xchg
cmp
adc
xchg
fsubrs
nop
mov
sbb
fdivr
andnps
cmp
flds
jg
or
push
sub
out
dec
in
lods
dec
in
clc
leave
sbb
jl
inc
mov
pop
rol
cmovns
stos
xchg
fwait
test
pop
mov
in
mov
test
add
push
mov
loopne
push
mov
cmp
lods
repz
mov
mov
cmpsl
add
mov
int
addr16
and
inc
cwtl
mov
adc
stc
out
pop
push
lods
and
xor
inc
jmp
fs
fcmovnb
sbb
xor
bound
hlt
jmp
aad
in
popa
int
fsubr
js
mov
add
mov
and
cmpsb
mov
mov
daa
inc
xor
cmpsl
add
add
clc
pshufw
mov
and
fadds
pop
sub
lret
test
dec
cwtl
popa
stos
jne
ds
test
inc
outsl
sbb
les
shlb
xchg
push
insb
mov
fstpt
and
dec
pop
shll
cmp
pop
mov
xor
out
push
testl
imul
sti
cmp
loop
xchg
cmp
stc
out
mov
andl
cmp
iret
out
jne
mov
mov
fistpl
xor
ss
xchg
sub
popf
jne
ret
lret
sbb
inc
adc
inc
out
cmpsb
cwtl
bound
pop
cmp
mov
decl
loop
and
mov
in
xor
add
mov
in
int3
pop
mov
mov
cli
fists
xchg
outsb
pop
add
pop
sbb
notb
cmp
filds
add
test
cmp
push
shlb
lods
dec
jp
std
aas
shrl
fdiv
dec
sbb
shl
scas
xor
fnstcw
jae
sub
push
test
pop
adc
mov
mov
pop
stos
rorl
notb
mov
pop
mov
mov
or
cmpsb
mov
rorb
cmc
pushf
sbb
pop
cmp
test
stos
mov
out
mov
scas
jbe
pusha
stos
sahf
inc
xchg
in
xor
js
push
xchg
scas
jae
js
mov
iret
ret
push
ss
dec
fsubl
jmp
cltd
add
movsb
lods
cltd
clc
mov
xchg
sbb
aam
dec
inc
shll
lcall
sub
xchg
ljmp
cmp
mov
rcrl
shlb
bound
cmpsl
push
jge
stos
movsb
pop
insl
xchg
inc
je
cld
shrb
add
shlb
int3
jg
adc
add
shrl
mull
mov
mov
push
lea
xor
push
mov
sub
mov
test
jnp
test
movsb
outsl
loop
adc
inc
add
and
add
fimuls
push
outsl
lret
pushl
jnp
adc
inc
pop
push
loop
push
out
cmc
or
mov
push
jl
ja
cld
inc
jbe
stc
adc
ljmp
or
stos
mov
int
arpl
cmp
mov
or
lcall
movsb
data16
push
scas
inc
leave
orl
adc
mov
sbb
sti
cld
dec
shlb
jno
clc
push
test
lods
inc
add
mov
xchg
pop
jb
adc
jle,pt
cmp
pop
out
dec
pushl
mov
rorl
sub
lods
jle
mov
das
xchg
aad
cmp
inc
enter
cwtl
fstpl
inc
dec
lcall
sub
scas
lcall
mov
mov
nop
jecxz
std
int3
es
jmp
dec
sahf
lods
push
insl
add
lock
cli
or
inc
pushf
out
ljmp
in
jb
push
pop
je
jo
pop
outsl
xor
ret
xor
fcompl
loopne
jle
sub
mov
std
xchg
insb
cli
andl
jle
lcall
and
add
lock
mov
or
inc
mov
int3
push
popf
call
sti
nop
inc
jp
inc
ljmp
adc
dec
psubw
cmp
sahf
inc
adc
shll
xchg
mov
xchg
add
mov
xchg
xor
adcb
lds
arpl
cld
bound
enter
adc
int
das
xchg
push
xor
lds
lock
xor
sbb
lret
ret
loope
add
mov
xor
push
lea
lock
push
mov
xchg
adc
adc
cmp
push
call
jg
jb
push
xor
jno
sbb
cmpsb
pop
fsubrs
or
insl
xchg
adc
fistpll
inc
ja
test
fs
outsb
and
out
std
and
adc
xor
test
cmc
shlb
ds
fisubs
mov
sub
jg
and
negl
cs
loopne
inc
adc
mov
aam
movsb
stc
adc
movsl
jo
mov
push
fldl
lret
and
mov
imul
push
pop
enter
and
jno
mov
lea
mov
jno
pop
movsb
fs
cmpsl
out
cmp
outsb
mov
xchg
scas
jnp
insb
arpl
dec
repz
push
out
nop
movsb
pushf
rcll
mov
jecxz
pop
mov
lds
push
popf
xor
jecxz
aad
and
inc
test
push
mov
mov
loopne
stc
push
xchg
popf
nop
lods
mov
and
cmc
std
pop
hlt
inc
cmp
shrb
mov
sub
das
stos
jle
pusha
push
add
mov
xchg
ret
cmpb
push
pop
popa
fistpll
test
test
stos
inc
pop
xchg
fcomi
push
lods
daa
outsl
test
test
sbb
and
int
dec
pop
add
xchg
out
mov
sbb
sbb
aas
push
inc
pop
imul
mov
leave
push
sub
pop
cmpsb
out
sbb
add
sbb
ret
fdivp
notb
sub
xchg
add
stc
stc
lea
add
mov
xchg
nop
outsl
sahf
sar
mov
ret
adc
pop
dec
rcl
lds
dec
add
adc
cmc
imul
sub
es
xlat
mov
sbbl
rcrb
fwait
dec
and
ror
frstor
mov
mov
push
js
nop
insb
dec
loope
mov
push
lcall
and
pop
mov
xchg
lods
jg
cmc
cmp
mov
sbb
pushf
test
cwtl
adcl
mov
inc
xchg
push
fdivs
adc
mov
jne
pop
pop
xchg
pusha
andb
mull
mov
inc
mov
setae
or
jle
sar
add
leave
pusha
or
and
jmp
mov
or
jo
xchg
stos
popf
mov
shl
insb
adc
fwait
sti
pop
or
lock
mov
jp
loop
shll
xchg
jae
fstl
call
scas
add
push
setbe
fsubrs
fistl
pop
outsb
test
pusha
adc
jle
sete
ret
bound
or
inc
mov
shr
pop
pop
jne
stos
push
jge
or
stc
decb
pop
push
addb
nop
shrb
and
inc
arpl
fisttpll
pop
jecxz
push
sub
int3
cli
or
incb
aam
and
adc
movsb
gs
stos
sbb
or
xchg
jnp
int3
arpl
scas
movsb
out
cltd
std
inc
jg
js
fiaddl
push
cmp
xor
mov
movsb
cltd
inc
pop
xor
mov
stc
rclb
fwait
clc
mov
jg
in
addb
shll
mov
xor
mov
imul
xor
int3
fistps
mov
dec
negl
stc
xlat
and
cltd
push
ds
in
and
push
push
jle
mov
fsubr
inc
dec
mov
mov
or
stc
and
into
daa
mov
xor
in
jns
ret
and
sti
insl
subl
lods
adcb
sbb
fs
xor
mov
push
loop
stc
xchg
loopne
cmp
or
dec
andb
aaa
jg
cwtl
xorl
dec
pop
pop
and
test
pop
test
lret
sahf
sbb
push
cwtl
pop
xor
cli
cmpl
sahf
stos
inc
cmpsl
sub
mov
pop
sbb
loopne
insl
js
mov
std
dec
sub
mov
pusha
mov
adc
xchg
cmpsb
test
mov
pop
fisubrs
lcall
or
rcll
sbb
testb
push
sub
orb
cmp
leave
movsl
iret
pusha
jle
inc
pop
mov
sub
sub
cmpsb
xor
adc
cmp
cmc
pop
push
aad
xlat
jp
cmc
push
jmp
subl
into
lret
jnp
fs
xor
ja
pop
stos
mov
or
mov
jnp
loopne
push
sbb
sarl
and
add
push
xor
daa
mov
fisttpl
cmc
mov
inc
adc
mov
or
dec
lods
add
pop
std
adc
loope
nop
loopne
jmp
addr16
or
lea
xchg
or
ja
ljmp
dec
jo
jg
xor
mov
fsts
add
xchg
and
or
addr16
in
outsl
loope
int
lret
or
scas
ljmp
jne
rolb
cmp
cld
xchg
pop
pop
jmp
xor
jg
adc
leave
add
xchg
pop
sbb
cs
push
or
inc
cmp
push
loop
nop
dec
test
push
ficoml
add
ss
and
mov
adc
mov
ds
and
aas
adc
xor
inc
fucomip
loope
xor
lock
rcr
aas
pop
push
jge
stos
out
roll
fidivl
pop
sub
jo
sbb
jns
bound
or
mov
mov
mov
push
stos
mov
dec
mov
mov
stos
imul
inc
sbb
mov
mov
shlb
rolb
scas
sub
mov
inc
pop
adc
inc
pop
mov
mov
pushf
sub
cmpsb
call
filds
jns
icebp
xchg
scas
aas
outsb
adc
jae
mov
cltd
call
movsb
idivl
xchg
sub
mov
test
and
out
out
pop
rep
add
jbe
or
es
jecxz
mov
add
out
add
ds
test
pop
out
bound
lret
mov
aad
popw
xor
js
scas
cmp
sti
mov
xor
mov
ja
push
stc
jbe
mov
in
ja
daa
mov
cmp
xlat
or
cli
cmp
popf
insb
xor
and
and
push
cmpsb
aaa
aad
and
lcall
push
xor
jle
mov
leave
cmc
mov
arpl
repnz
xor
xchg
fnsave
or
repz
mov
fcoms
fidivrl
out
call
dec
and
in
add
inc
out
push
push
in
xor
cwtl
or
xchg
sbbl
push
daa
add
ljmp
inc
out
jns
insb
into
movsl
sub
jecxz
xor
fcompl
xchg
pop
mov
xor
push
ss
insl
sbb
shlb
pop
mov
jno
or
sti
jg
mov
push
mov
add
int3
into
fs
or
enter
jge
mov
adc
lret
test
mov
or
rorb
popa
mov
cmp
test
cmp
pop
mov
inc
jmp
in
jns
int
ds
cmc
cmpl
pop
dec
fldt
lea
jg,pt
nop
jmp
int
cmp
sbb
in
xchg
mov
in
sbb
adc
add
lret
repnz
add
sub
nop
test
aaa
cli
in
fyl2x
or
sbb
pop
pop
fildll
jb
sbb
push
mov
inc
mov
ds
inc
loope
cld
mov
iret
andl
data16
push
sbb
and
shrl
mov
leave
cmp
xchg
test
sub
jns
xor
mov
mov
jecxz
gs
icebp
out
sahf
mov
xchg
xor
es
data16
mov
mov
xor
pop
arpl
dec
push
adc
or
je
ffree
pop
outsb
insb
inc
adc
outsl
sub
jg
mov
lea
mov
sub
nop
or
inc
out
push
sbb
adc
loope
test
fisubrs
push
test
je
push
out
push
cmpsb
pop
lret
sbb
mov
lds
int
popf
ja
jb
dec
nop
inc
pusha
mov
int
push
mov
mov
roll
cwtl
enter
jmp
inc
scas
rorl
daa
ljmp
loopne
stc
push
push
fs
inc
mov
dec
sub
fcomps
push
mov
push
icebp
mov
adc
xchg
pusha
ds
sub
adc
mov
leave
push
jp
cmpsb
insl
jmp
push
xor
push
int
sarl
mov
pusha
or
dec
xor
lds
push
testb
or
mov
ds
mov
lock
sub
les
add
mov
xor
and
lea
xor
pop
in
scas
push
test
hlt
repnz
fwait
mov
xchg
ficompl
cmc
dec
mov
jle
int
mov
enter
cmp
xchg
inc
shr
scas
push
adc
fdivs
mov
clc
push
test
push
test
in
sbb
add
mov
mov
shlb
ljmp
mov
bound
test
mov
ror
imul
mov
jge
inc
bound
sub
sub
das
xchg
ljmp
mov
mov
out
lret
adc
mov
scas
cmpl
or
jne
sti
es
or
cmp
fsubrl
xchg
mov
fbld
mov
data16
daa
mov
orl
sbb
and
pop
popa
int3
push
cmp
sbb
ret
or
mov
add
xor
push
hlt
push
ret
ljmp
ss
loope
int
ds
pusha
lcall
in
out
mov
adc
stos
sahf
xlat
mov
and
inc
gs
out
mov
movsb
adc
nop
xor
insb
loop
cmp
push
aam
aas
xchg
repz
pop
jbe
rolb
xor
scas
repz
add
repnz
stos
dec
adc
mov
sbb
cmp
mov
scas
aad
mov
inc
aad
cltd
call
out
cmpsl
mov
outsb
sub
add
sub
inc
lret
iret
ss
push
push
inc
out
into
dec
out
aam
jns
lods
insl
add
ret
orl
xchg
sub
xchg
mov
dec
dec
in
shr
fucom
sub
fwait
sbb
stos
mulb
ss
or
cmp
adc
out
xor
cmp
in
jmp
sbb
sub
jb
rcll
sub
xchg
pop
popl
movsl
mov
test
adc
cltd
ja
mov
xor
mov
leave
add
push
push
push
insb
and
sub
inc
out
mov
push
adc
adc
outsl
ret
andl
dec
adc
and
mov
mov
test
cs
je
iret
inc
lcall
jb
xor
add
into
decl
addr16
out
ss
das
outsb
mov
xor
xor
or
cld
fsubrs
adc
add
push
out
ret
lcallw
xor
sub
sbb
push
adc
and
cli
xchg
and
fnstsw
jb
loope
lea
imul
out
fs
adc
sub
sbb
add
insb
xchg
inc
sahf
and
dec
xchg
xor
mov
mov
repnz
pop
sbb
add
loop
push
pop
ds
xchg
fbld
dec
xlat
pop
js
cli
mov
jl
insl
popf
rol
sar
jl
es
dec
out
iret
sub
lods
daa
mov
xchg
pop
push
jo
mov
outsl
cmc
push
jmp
fdivrl
repnz
mov
fdiv
sub
jbe
pop
scas
push
xchg
scas
or
loop
cmpsl
xor
addr16
xchg
out
inc
pusha
cmp
out
mov
lret
hlt
jbe
jg
cmpsb
jnp
or
jecxz
add
cmc
pop
das
add
dec
pop
mov
in
mov
in
cmp
mov
xchg
imul
sbb
inc
dec
lahf
je
into
and
icebp
stos
jg
sub
push
mov
bound
xchg
xchg
adc
rolb
add
pushf
add
testb
and
push
inc
shlb
sub
aam
jb
and
pop
mov
mov
cmp
sbb
imull
inc
xchg
frndint
push
dec
int
repz
mov
jp
rcrl
push
stos
pop
dec
sbb
and
xor
jae
jl
lahf
out
arpl
iret
ljmp
pop
sbb
sti
pushf
jne
mulb
push
xchg
fdivr
or
in
shrl
pop
dec
push
mov
push
fiaddl
std
ljmp
lods
rolb
mov
outsl
push
adc
mov
sbb
add
cwtl
add
lret
mov
mov
add
push
popl
cwtl
ljmp
jnp
inc
jno
mov
lods
test
jge
add
mov
xchg
sarl
jl
insl
cld
sbb
mov
jne
adc
lods
mov
sahf
pop
sub
jg
popf
or
insb
and
xor
nop
and
aas
xorl
call
push
ds
xor
push
dec
and
sub
or
cltd
pushf
sub
cltd
or
scas
fsubs
in
sub
jae
lret
das
insb
jge
cmpsb
push
sub
xchg
nop
xchg
jecxz
in
mov
repz
mov
ror
insb
pop
push
dec
adc
pop
pusha
rcrl
enter
inc
test
jl
lds
ror
push
dec
fisttps
jo
testl
repz
jge
mov
jmp
push
xor
xor
dec
pop
adc
push
in
jb
lahf
xor
in
or
in
push
push
lea
inc
adc
out
mov
sar
pop
or
lods
out
push
mov
dec
or
outsb
inc
int
out
add
adc
mov
cmc
push
sbb
sahf
ss
arpl
pop
mov
and
cltd
cmp
adc
mov
icebp
outsb
lds
inc
sahf
xor
lea
jb
call
repnz
mov
es
in
out
lods
xchg
fcmovnb
push
dec
mul
or
dec
xchg
mov
in
push
add
sub
and
jo
jns
mov
enter
xchg
out
popf
fimull
jg
pop
into
fmull
test
clc
inc
out
mov
repnz
and
arpl
cmpsl
icebp
dec
clc
add
push
xor
xchg
shrl
daa
pop
repnz
stc
out
enter
push
divb
lahf
mov
enter
jo
lret
or
rcr
or
lods
mov
jecxz
add
ja
and
xchg
and
add
pop
scas
fnsave
outsb
pop
ficomps
ljmp
mov
rcll
aaa
or
outsl
notl
nop
sti
xchg
popf
lret
pop
cmpl
hlt
ljmp
push
inc
sbb
xchg
or
pop
add
jnp
divl
add
fldenv
incl
shl
fsts
and
imulb
mov
fimull
hlt
adc
loop
add
pop
loopne
mov
pop
insb
jp
cltd
in
lea
mov
imul
xchg
mov
adc
ljmp
jbe
cmp
pop
aad
sti
pop
std
jno
mov
push
ss
ret
fbld
inc
jmp
popf
aas
dec
mov
adc
push
push
pop
push
pop
cmp
lods
lods
mov
xlat
mov
inc
mov
subl
loop
test
pop
dec
cli
int
sbb
mov
rcrb
int3
xchg
je
imull
pop
and
xor
sbb
les
adc
es
inc
xchg
xchg
add
add
xor
and
push
insl
push
lret
cmp
shlb
pop
and
or
cmp
out
subpd
outsb
test
or
push
repz
ret
pop
lret
in
rclb
aaa
popf
sbb
pop
scas
pop
or
cs
cwtl
jg
cs
dec
dec
ret
jle
in
pop
mov
mov
int
mov
rorb
inc
shrb
in
mov
inc
into
sbb
xchg
outsb
jb
cmpsl
aas
je
testb
ljmp
rcl
add
ffreep
nop
cmp
sti
jbe
sbb
ret
les
xor
cmp
jnp
out
or
or
xchg
loopne
popf
xorl
dec
cmp
cmp
xchg
movsb
mov
add
and
data16
push
sub
fisttpl
cmp
imul
cmp
lds
jbe
mov
addr16
push
inc
xor
jl
cmpsb
pusha
ret
sub
popa
int
inc
fs
pop
inc
push
cmp
fsubrl
sbbl
xchg
xchg
fs
xor
xor
sub
rcl
dec
stc
cmpsb
cld
lock
movsl
add
add
cmp
sahf
and
out
sbb
dec
je
adc
xchg
rcll
xorb
cmc
jns
lods
out
push
dec
ds
xchg
lods
sbb
cmp
test
and
data16
cli
pop
leave
xchg
push
and
repz
or
xor
int
stos
lret
and
test
inc
push
or
xchg
lret
inc
sbb
lea
jbe
bound
jno
adc
add
adc
mov
lahf
add
ss
xor
stos
test
sarb
cmpb
cs
push
ljmp
es
icebp
push
loop
sub
mov
aaa
dec
roll
nop
pop
jbe
lret
aaa
mov
rclb
and
rcrb
inc
push
js
inc
repz
rclb
adcb
fcmovnbe
mov
mov
mov
push
cmp
pop
jmp
sub
jo
push
fwait
xchg
addl
xchg
pop
ljmp
cmp
loopne
ja
rclb
mov
mov
lcall
and
and
or
sbb
test
push
fldl
push
ss
andl
dec
test
ja
mov
test
sbb
jmp
push
xlat
stos
cmp
lahf
jne
dec
arpl
fsubr
xor
pop
loopne
inc
sbb
lds
lock
pop
stos
xchg
add
out
arpl
stos
pop
add
inc
add
loop
push
in
icebp
inc
push
and
into
inc
lret
jbe
xchg
xor
jle
jp
dec
cmp
jae
and
and
mov
jmp
mov
cmc
imul
inc
and
leave
or
nop
daa
cmpsl
je,pt
cltd
int
daa
push
ja
into
mov
mov
popf
lods
movsl
sbb
cltd
subl
cltd
lock
fdivs
mov
and
inc
mov
aad
loop
lea
mov
aam
push
mov
mov
jb
pop
inc
and
dec
fstps
dec
in
jecxz
push
fld
insb
and
adc
test
lods
cmp
pop
lds
inc
adc
xchg
stos
lock
mov
xor
mov
xor
mov
mov
cmp
or
lods
ds
orb
adc
xchg
add
insl
scas
sub
push
shll
movsl
push
adc
out
pop
fs
add
push
or
ss
ds
subl
sbb
jb
dec
xor
inc
shl
push
dec
lcall
stc
repnz
bound
jno
xorl
push
mov
lock
mov
push
inc
add
jns
push
rorl
pop
imul
fscale
add
cmp
faddl
ficomps
es
sti
cmpsb
in
cltd
dec
lret
adc
ffreep
sbb
inc
cmpsl
roll
pop
test
or
mov
mov
sub
dec
cmp
inc
sbb
mov
inc
sub
stos
fs
jmp
pop
ja
jnp
cmp
dec
dec
mov
test
repz
or
mov
in
mov
push
mov
cmp
xor
xchg
loope
pop
or
pushf
xor
dec
loopne
push
or
cmp
pop
adc
sbb
mov
lock
mov
or
dec
inc
rcl
lock
out
add
mov
incb
cmpsb
test
sub
push
out
jns
pop
test
jbe
scas
mov
jl
pop
test
push
pushf
inc
leave
in
cmp
pushf
push
cmp
cmpl
loope
push
out
iret
js
bound
faddl
arpl
fwait
int3
or
jmp
dec
ja
push
mov
rol
add
pusha
test
xchg
mov
xlat
nop
sbb
cmp
inc
dec
pop
shrl
int
out
jle
loop
or
jbe
rclb
and
mov
mov
mov
xchg
pushf
dec
push
dec
lea
adc
adc
mov
addr16
mov
jmp
scas
inc
lock
add
js
fildll
testb
fsubrp
xor
test
fwait
call
lea
inc
or
lods
cmp
jge
ret
and
adc
ja
lea
mov
stos
jle
fs
dec
pop
xor
adc
cmpb
add
inc
cmp
jp
outsl
or
push
jge
mov
add
roll
data16
stc
mov
lock
xlat
push
movsb
insl
enter
loopne
les
orb
push
aam
and
je
push
fsubs
pop
ljmp
xor
mov
jae
out
mov
xor
sbb
clc
aas
jno
adc
jg
pop
mov
sbb
sub
xchg
inc
ljmp
xor
push
push
enter
dec
shrl
mov
insb
xlat
test
mov
inc
jmp
cmp
loopne
add
sub
mov
xor
push
idivl
mov
add
sbb
xchg
icebp
bound
loop
dec
mov
call
mov
dec
mov
psrad
adcb
mov
arpl
jg
or
dec
out
inc
add
ret
ss
lods
pop
inc
imul
imul
xor
inc
cli
push
or
lock
sbb
je
scas
push
daa
enter
jne
cmp
jp
sbb
add
sub
mov
jecxz
mov
mov
xor
jnp
xchg
cwtl
inc
push
pushf
test
push
pop
loopne
mov
mov
test
pusha
mov
sbb
fldl
mov
lock
icebp
ret
aad
jno
mov
xchg
dec
mov
ret
sbb
test
cmp
mov
pop
cmc
inc
aad
inc
shr
sub
repnz
sbb
xor
adc
jno
sub
add
lods
mov
cmp
lds
mov
push
jecxz
xchg
xor
xchg
xor
decb
dec
dec
mov
inc
cltd
out
popa
push
cltd
iret
push
inc
hlt
ljmp
lods
fiaddl
and
adc
imul
sbb
xchg
outsl
and
mov
fldcw
jge
xchg
int3
enter
dec
loope
ja
jb
jmp
call
data16
ds
mov
js
ror
xchg
mov
test
ret
jg
hlt
sub
lea
cmp
scas
push
lods
pop
push
pop
lock
lahf
iret
fisttpll
lret
into
and
loope
pushw
mov
mov
lods
fwait
adc
loopne
bound
or
aas
xor
mov
flds
daa
xor
xchg
mov
or
jno
sbb
gs
and
fisttpl
sbb
stc
jl
sub
divl
lock
jge
xor
addr16
fisubl
or
and
loopne
fidivrs
std
jmp
pop
scas
lahf
or
or
xor
xor
stc
mov
or
xor
jne
pop
jnp
pop
ja,pt
iret
fs
mov
arpl
inc
scas
cli
in
aaa
dec
enter
outsb
ret
cltd
and
cmp
jecxz
cmova
in
cmp
push
push
cmpb
pop
daa
jnp
mov
mov
subl
pop
dec
bound
cmp
push
jp
xlat
outsb
push
enter
loopne
pop
xchg
pop
es
stos
jp
rcrl
jmp
jle
xchg
test
sbb
push
xchg
repz
enter
xchg
xchg
and
xchg
sbb
jl
sub
xchg
mov
cld
insb
mov
dec
loope
add
lods
jp
mov
or
jmp
stos
enter
jbe
dec
in
incb
fnsave
sbbb
mov
jns
sub
xor
mov
xor
mov
xchg
jge
cs
sbb
sub
dec
push
arpl
jmp
or
pop
stos
test
mov
dec
stos
fmuls
test
inc
je
cli
and
sahf
add
and
sbb
mov
icebp
cld
outsl
scas
pushf
call
push
mov
call
push
pop
mov
and
bound
and
mov
mov
nop
dec
filds
out
outsb
inc
ds
adc
ss
sbb
test
add
stos
mov
and
adc
imulb
sti
nop
push
sbb
jnp
insb
cmpsb
mov
mov
jg
movsb
cmp
push
cmp
imul
cmp
push
cli
repz
inc
jno
repz
mov
sbb
loope
inc
aad
std
and
jns
fisubs
push
mov
subl
lock
cwtl
xor
dec
pop
mov
rcrl
inc
es
pop
cmp
lcall
mov
sbb
pop
pusha
jns
xchg
inc
mov
pop
xor
out
call
dec
mov
lcall
push
in
jle
loop
sarb
pop
mov
stos
dec
jge
dec
cmp
jg
jmp
lret
xor
dec
mov
loopne
test
stos
jmp
bound
mov
mov
les
faddp
pusha
mov
adc
push
hlt
lcall
cwtl
stos
testb
lcall
les
sbbl
ret
pop
add
movsl
stos
mov
xor
push
test
cmp
fnstcw
mov
pop
aas
testl
pop
inc
push
sbb
add
iret
aas
insl
ret
xchg
lds
xor
les
inc
jae
inc
cmp
mov
out
and
xchg
fldl
notb
out
lds
xchg
dec
or
out
adc
in
add
repz
imul
sbb
int3
jo
stc
and
mov
ljmp
js
dec
or
jge
push
cmp
or
inc
loop
std
lret
xchg
add
lret
and
negl
push
loop
dec
add
mov
cmpsw
push
mov
xchg
data16
pop
jmp
test
icebp
xchg
dec
out
mov
lret
in
cmpb
adc
sbb
mov
shrb
mov
pop
add
jmp
outsl
bound
imul
mov
int3
push
sbb
xchg
mov
fidivs
imul
push
jecxz
int3
std
push
xor
shl
lds
adc
frstor
or
int3
sbbb
pop
es
sbbb
sbb
or
push
sbb
push
aas
not
fistl
xchg
test
jb
lock
mov
call
stos
lds
decb
sub
cmpxchg
pop
mov
jl
js
add
jle
jbe
ja
movsb
jae
stos
popf
push
enter
movsb
fmull
inc
in
and
stc
and
test
test
movsl
sbb
cld
ss
sbbl
and
mov
iret
pop
jmp
fucom
ja
lods
leave
adc
aad
outsb
dec
xor
in
stc
pop
push
cmp
inc
ret
pop
push
jecxz
inc
stos
dec
dec
pop
out
pop
addr16
enter
imul
adc
arpl
out
ljmp
fwait
test
sbb
cmp
and
cmp
or
mov
fdivrs
rclb
sub
push
mov
scas
mov
push
jmp
scas
jae
jns
and
sub
jle
push
mov
or
mov
dec
pop
out
pushf
dec
les
repnz
cmpsb
stos
into
sub
leave
fbld
aas
cld
outsl
mov
push
rol
fcmovu
fildl
push
into
jo
addr16
lret
sbb
jo
iret
shr
sub
and
rolb
dec
cmp
cmp
pop
aas
adc
cmp
fucom
mov
sub
sbb
out
pop
inc
aaa
adc
jno
mov
jo
cmpsb
popl
mov
shrb
push
mov
lret
jmp
xor
xchg
cltd
and
es
arpl
insl
sbb
lock
push
or
or
mov
repnz
fldenv
mov
insb
aas
jns
stos
pusha
mov
inc
jne
cmpb
push
jg
fmull
push
ds
call
jmp
out
jo
xor
sbb
add
pop
adc
lock
and
jl
sbb
iret
jp
lret
sbb
lea
sbb
pop
shrl
repnz
mov
and
lret
movsl
test
loope
fimull
fiadds
jmp
dec
leave
jg
xor
enter
pop
dec
cmpsb
int
adc
mov
mov
xchg
jge
lahf
test
mov
in
sub
adc
cmp
ss
in
jmp
jb
jmp
out
jl
xchg
cmp
ljmp
xchg
push
inc
sahf
fwait
adc
addr16
lods
ret
imul
das
cmp
popf
add
add
inc
sbb
popf
lods
cmc
add
sub
dec
les
aaa
ljmp
cwtl
ret
ret
dec
dec
or
fsubrp
outsl
dec
pop
mov
xor
mov
jle
xor
inc
sub
jmp
sbb
jne
stc
sub
popa
outsl
fistpl
add
dec
lods
test
cld
stos
icebp
jge
out
mov
in
dec
adc
shlb
cltd
inc
imul
xchg
pop
push
jne
ret
mov
lods
inc
adc
jns
gs
sub
aam
mov
inc
or
xchg
add
test
pop
mov
xor
sbb
lods
xchg
loop
js
test
fsubs
cmp
and
lea
cltd
lret
in
ss
std
push
popf
fldcw
addr16
int3
test
lret
xlat
lea
xchg
dec
push
cmp
cmp
pop
enter
and
loopne
xor
jecxz
into
xchg
mov
mov
js
enter
lcall
inc
lret
adc
push
pushf
dec
ffreep
jbe
fwait
xor
xor
fcoml
push
mov
mov
jle
push
scas
jno
je
inc
xor
les
cmpsb
pusha
outsl
int3
rol
rorb
mov
mov
adc
aad
dec
mov
scas
out
andl
repnz
lcall
xlat
aas
je
pop
test
lret
sti
xor
fmull
xchg
sahf
scas
mov
ret
outsl
int3
call
test
mov
js
cmp
jge
les
jmp
arpl
xor
mov
pop
fwait
clc
or
sub
call
jae
or
in
pop
fsts
or
sbb
cmp
cmp
lock
xchg
ljmp
insl
jge
jle
mov
cmp
push
in
pusha
hlt
enter
xchg
jmp
fs
xchg
or
nop
cmc
ret
pop
cmp
pusha
rorl
rolb
jg
xchg
addl
cs
out
pop
in
xor
inc
jmp
inc
mov
sub
or
repnz
jno
cs
out
pop
xchg
xchg
aam
ljmp
xor
push
cltd
inc
nop
dec
cltd
mulb
lahf
pop
sub
adc
jmp
mov
push
ret
lret
gs
sti
lods
inc
sub
pushf
or
and
arpl
sbb
sbb
mov
ret
xchg
pop
sarb
jae
rol
data16
jns
cmp
mov
mov
xchg
lret
scas
mov
sub
sti
int3
mov
ljmp
lods
adc
xlat
jo
enter
pop
mov
lods
mov
pushf
cmc
fwait
iret
jl
shr
pop
sahf
fbstp
cmp
gs
test
or
push
push
imul
xchg
mov
sub
inc
lret
push
inc
mov
popa
adcl
inc
push
lds
mov
push
mov
add
sub
or
adc
aaa
not
xor
data16
pop
cmpb
lods
pop
dec
test
and
ds
pop
ret
mov
mov
decb
push
xor
push
aam
lds
and
rorb
bound
imul
cmp
and
inc
jle
imul
mov
xchg
mulb
mov
xchg
int3
mov
jp
subl
push
lods
xor
das
data16
fidivs
arpl
rcrl
and
xor
stos
js
pop
fcmovbe
addr16
jp
stos
imul
arpl
andl
out
cli
or
test
dec
mov
scas
or
mov
fsubl
hlt
mov
inc
fidivl
adc
or
pusha
and
inc
xor
push
xchg
push
mov
xchg
shlb
sbb
adc
loop
mov
lahf
xchg
addr16
cwtl
mov
fidivs
jp
jmp
dec
fdivs
or
pop
dec
pop
pop
lret
mov
icebp
mov
cmp
faddl
mov
add
adc
sub
and
mov
add
mov
dec
sbb
jmp
or
sub
add
xlat
repz
cmp
mov
dec
dec
ret
rorl
dec
pop
in
push
mov
xor
cmp
sbb
push
loope
fsubrl
push
lds
aas
loop
shll
outsb
pop
cltd
packssdw
pushf
addr16
daa
out
fstl
push
sub
sub
jge
call
jmp
movsb
sub
xor
shrl
dec
outsb
dec
es
out
xlat
aam
mov
add
into
inc
sti
in
cmpsl
adc
imul
xor
pop
repnz
dec
mov
pop
ds
aam
shlb
add
xor
faddl
xchg
and
dec
jg
cmp
and
adc
dec
sti
push
orb
sti
test
push
push
cwtl
sti
stos
jno
enter
push
fcomps
shr
jne
cmp
mov
dec
inc
push
add
scas
inc
dec
ss
pop
push
out
popf
lds
rcll
inc
inc
dec
cmc
call
or
or
ret
test
mov
mov
outsb
adc
leave
mov
inc
jno
shlb
in
add
scas
inc
lret
aam
test
push
jne
mov
push
loop
in
inc
pusha
inc
mov
lret
jno
jg
scas
scas
and
loope
outsl
push
ss
add
dec
in
imul
xchg
cmp
les
mov
jp
cld
pop
jae
xlat
push
ss
loope
in
fwait
jno
movsl
into
imul
fldt
out
leave
cmpsl
cltd
pop
sbbl
mov
das
outsb
inc
push
jo
hlt
js
mov
fidivl
dec
filds
in
divl
adc
repz
or
test
mov
scas
aaa
jne
or
mov
add
sub
mov
pop
stos
ret
ffree
fcomp
inc
pop
push
movd
repz
push
ds
lahf
outsl
jmp
gs
mov
and
pop
jae
scas
jb
sbb
imul
pop
push
push
icebp
ret
das
aad
add
sbb
sbb
pop
testb
fucomi
ret
lret
xchg
daa
inc
inc
cltd
adc
popa
jge
std
push
pop
cli
xchg
mov
dec
ds
mov
repz
mov
sub
les
rolb
push
imul
sbb
push
ret
xchg
rcrb
push
xchg
sub
cmp
cs
sti
sbb
xchg
popa
fisttpl
out
int3
xor
iret
mov
testb
adc
push
or
fsubr
inc
das
mov
jg
lret
sub
rorb
sub
and
test
xchg
inc
mov
push
fcompl
ret
jns
cld
nop
adc
push
push
push
repz
test
pop
inc
stos
add
fidivrl
mov
jbe
sub
jae
jge
aas
xor
in
dec
add
loope
push
rcll
ds
mov
mov
push
sub
addr16
lock
push
rcll
inc
dec
shlb
pop
sbb
aam
cmpsl
dec
cmp
movsb
js
pop
xchg
pop
outsl
in
dec
dec
jbe
pop
cmp
xchg
mov
test
outsl
or
inc
mov
fists
jb
ljmp
xchg
out
adc
sbb
mov
sub
lret
nop
mov
or
mov
mov
aam
shll
stc
or
inc
mov
jmp
inc
or
push
or
mov
mov
pop
adc
inc
daa
lahf
mov
lret
jnp
mov
adc
inc
clc
adc
cmpsb
sbb
jae
repz
dec
pop
cmp
mov
xor
or
cmp
int3
dec
pop
sub
inc
mov
mov
jae
dec
sub
jl
aad
shlb
mov
add
mov
mov
or
ret
jge
and
enter
cmpsl
das
ljmp
sbb
aas
aad
xchg
data16
sbb
in
scas
dec
jnp
std
popf
cmp
ret
pop
movsl
cmp
xor
jg
ret
dec
fldenv
icebp
xor
inc
fistpl
frstor
xchg
xor
ret
mov
mov
outsl
sarb
xor
out
inc
movsb
and
dec
push
inc
mov
push
inc
pushf
adc
jmp
popf
aas
outsb
mov
lds
aad
lods
adcl
dec
jp
ja
call
cmpsb
ret
rcrb
cld
jmp
rolb
sbb
sub
imul
or
test
arpl
jne
pop
outsb
dec
jb
rclb
fisubrl
popa
push
rcll
mov
or
or
leave
jecxz
xchg
cwtl
push
mov
adc
xor
jne
stos
pop
dec
mov
test
shrb
push
mov
mov
xor
test
mov
xchg
pop
clc
push
add
pop
adc
loopw
sbb
and
mov
jecxz
push
jmp
push
loope
mov
test
mov
dec
jnp
les
push
adcl
ds
push
inc
inc
mov
lea
cltd
jbe
push
aad
mulb
sub
out
inc
in
mov
xchg
roll
imul
add
cmpl
jmp
or
std
ret
sub
push
xlat
mov
or
es
add
das
fwait
or
push
xor
test
push
inc
xchg
out
psadbw
and
stos
xchg
insl
ljmp
mov
pusha
inc
ds
jg
jle
inc
pop
mov
push
in
add
dec
jecxz
mov
mov
push
push
inc
inc
lret
in
jb
dec
sbb
mov
or
add
jb
push
popf
xchg
sub
lods
cs
popa
enter
push
or
sbbb
cmp
insl
inc
sarl
mov
cli
add
cmpsb
sti
mov
jp
sbb
inc
stos
adc
fwait
and
int
add
ret
jmp
or
rorl
icebp
out
inc
shll
cs
mov
push
pushf
push
fdiv
in
insl
push
push
push
ss
xor
inc
dec
mov
lea
sarb
inc
xchg
rcr
xor
inc
in
dec
sub
xor
inc
dec
gs
jge
mov
cmp
jg
loopne
stc
shlb
add
ret
jmp
in
push
dec
cltd
xor
push
adc
mov
push
cmp
jg
push
inc
aas
xlat
sbbl
xlat
inc
mov
ja
stos
push
lods
jno
shlb
lds
fbstp
pop
add
cmp
insl
loop
pop
repnz
mov
add
cmpsl
cltd
das
mov
mov
mov
add
enter
in
jg
cmp
rclb
pop
xchg
into
test
inc
mov
cwtl
xor
mov
jle
cmc
and
jp
mov
movsl
sbb
adc
mov
add
bound
ljmp
popf
mov
mov
and
pop
push
arpl
jnp
cmp
jg
mov
sbb
enter
mov
push
jle
shrb
and
dec
cs
xchg
loop
pop
cmc
mov
add
jns
jb
dec
cmpl
xor
sbbb
dec
clc
xchg
sarb
pop
or
pop
rcrb
in
mov
cmp
stos
xor
jmp
inc
rcll
popf
subb
adc
jg
inc
call
cmp
lret
in
fwait
data16
cmp
iret
mov
je
mov
cmp
imul
lds
std
push
repnz
lret
xchg
mov
and
dec
fwait
or
jmp
mov
lahf
testl
outsb
rcrb
push
andb
movsb
jno
sbb
jns
hlt
add
push
adc
lcall
and
arpl
stos
sbb
dec
sub
loopne
fistpll
mov
ret
cmpsl
shl
mov
jns
loope
addr16
dec
mov
lds
jg
dec
les
mov
js
push
jge
pop
or
push
mov
dec
add
adc
clc
movsl
or
fisubl
fstps
arpl
iret
std
xchg
push
les
dec
orl
or
loop
push
xchg
xor
stos
divb
sub
push
into
cmc
push
aas
cmp
mov
mov
popa
rcl
je
sub
aam
xor
push
iret
xorl
movsb
inc
mov
mov
ss
ret
inc
pop
fldcw
dec
es
loope
pusha
ja
inc
insb
loopne
rcrb
pop
mov
push
inc
push
rcrl
popa
and
jp
sub
fimull
push
xlat
mov
clc
mov
ret
xor
inc
inc
jns
js
call
inc
dec
out
roll
dec
out
push
clc
dec
insl
add
pop
mov
iret
push
cmp
mov
outsl
mov
mov
adc
popl
mov
adc
push
dec
add
rcrl
leave
mov
cmp
cld
fwait
int
mov
mov
les
aaa
fstl
leave
lods
sbb
test
sub
sbbb
int3
ja
mov
test
inc
cmp
das
sub
imul
pop
add
aas
pop
push
pop
push
fwait
shl
xchg
sbb
cmc
jne
das
pop
lret
sub
movsb
inc
mov
xchg
enter
insl
popl
cmp
lock
dec
fbstp
out
popf
daa
and
add
dec
fisubrl
popa
cmp
cwtl
fs
leave
dec
repnz
and
fadds
lock
int3
pop
inc
andl
push
pop
stc
popf
mov
loopne
lret
jo
or
xor
jecxz
mov
inc
cmp
lods
mov
ret
or
sub
sahf
fcmovnb
les
cmp
roll
sub
mov
pop
and
pop
js
out
test
cmp
pop
sbb
stc
jp
scas
repz
mov
mov
repz
inc
jmp
fsubl
cmp
insb
xlat
pushf
sub
mov
out
pop
push
cmc
mov
mov
in
arpl
xchg
dec
push
xchg
inc
pop
sbb
jmp
stos
fwait
xchg
sub
out
xor
ss
les
mov
mov
and
lods
push
or
into
daa
cmp
mov
ds
or
add
adcb
xor
jns
es
dec
fwait
mov
inc
push
js
add
movsl
xor
adc
cmp
pop
mov
push
sub
aaa
out
or
cmp
adc
sbb
push
cs
add
xchg
je
jg
push
mov
adc
fdivrl
lret
dec
into
fdivrl
mov
mov
dec
mov
sbb
andb
cli
cmc
mov
in
and
rcrb
xchg
pop
jle
xchg
add
mov
pop
stos
je
lds
xchg
jno
pop
ret
mov
std
movsb
adc
xor
sub
push
fisttpl
aas
and
xchg
mov
loopne
inc
pop
xor
mov
mov
loopne
xor
mov
pop
aad
popa
dec
je
test
cli
push
add
xor
jbe
rol
sub
mov
outsl
lds
outsl
add
adc
sbb
mov
or
adc
hlt
cs
dec
test
jne
cli
out
inc
jecxz
movsl
dec
fstpl
out
sti
pop
sub
xor
loope
push
outsl
insl
push
adc
push
pop
cmc
mov
mov
sbb
xchg
push
sub
je
adc
das
or
mov
pushf
cli
int3
mov
enter
imul
lahf
push
lret
sub
mov
push
in
push
xchg
inc
call
xlat
jmp
lcall
push
sahf
call
pushf
add
mov
push
popl
sbb
fidivl
and
inc
pop
repz
orl
movsl
cs
mov
je
or
gs
mov
js
lods
scas
xchg
out
mov
lcall
loope
test
shlb
nop
mov
cmp
loop
scas
daa
jecxz
fsts
sub
jmp
xchg
push
stos
xchg
sbb
mov
fstpl
psubsb
inc
das
inc
mov
mov
lret
mov
adc
jbe
xor
orl
lds
mov
js
dec
inc
out
adc
xor
mov
insl
filds
in
push
dec
jmp
mov
push
nop
mov
mov
dec
clc
mov
lcall
repz
imul
sbb
rcll
mov
fcmovnb
adc
xchg
jbe
inc
mov
jmp
or
or
enter
sbb
xchg
ds
ja
push
xor
repz
cmp
push
in
testl
enter
xlat
aam
add
std
shrb
xorl
adc
xor
push
sub
push
dec
scas
sub
sub
xlat
cmp
lret
movsl
imul
mov
negb
and
mov
dec
add
push
mov
push
push
aaa
adc
jmp
scas
lds
inc
aam
bound
mov
clc
inc
pop
and
lret
leave
lods
mov
jge
mov
cmp
dec
repz
jle
dec
cmpsl
mov
test
xchg
cmp
hlt
mov
xchg
xor
sub
in
gs
add
push
cltd
sbb
fiadds
loop
xchg
sbb
sub
loope
adc
mov
repnz
xor
adc
shrl
ret
fnstcw
lret
push
mov
jle
bound
mov
xchg
push
test
cld
pop
fildl
cwtl
out
or
lods
add
lods
rol
subb
sub
je
jecxz
xchg
rorb
mov
movsb
mov
daa
scas
inc
pop
lahf
xchg
iret
enter
lock
dec
mov
in
push
out
dec
jbe
loopne
jle
icebp
inc
enter
imul
push
bound
push
add
fstps
xchg
and
es
imul
push
loop
sahf
repz
inc
movsl
ja
adc
jne
int3
push
testb
mov
shll
aad
icebp
imull
js
pop
sarb
sbb
cmpsl
fbld
xor
fwait
xor
in
out
ljmp
movsl
or
ss
jmp
jl
mov
fcomip
mov
push
sub
out
enter
pop
mov
std
mov
pop
cmpsl
xchg
push
cwtl
lret
mov
enter
mov
movzbl
adc
insb
xor
mov
shlb
and
push
movsb
mov
leave
loope
jae
adc
pop
movsl
push
sbb
sarl
popf
push
cmpsb
pop
push
sbb
pop
gs
mov
leave
xor
pop
loopne
sub
in
lret
adc
xor
iret
data16
bound
bound
xchg
insl
and
ret
or
jns
into
xchg
insl
xchg
es
mov
push
andl
pop
popf
ret
push
fcmovnb
or
jmp
sub
jnp
xor
jne
shrb
mov
mov
add
xchg
xchg
fadd
movsb
out
out
arpl
xchg
pop
jl
lahf
movsb
jno
mov
cmp
xchg
dec
insb
jg
cmc
lock
pop
jg
push
aam
push
rcrb
mov
loop
push
jg
sub
stc
mov
push
mov
cld
mov
sub
pop
dec
fbld
cmp
cwtl
jl
mov
push
pop
lcall
dec
mov
icebp
and
mov
cs
adc
mov
imul
outsb
inc
mov
add
adc
scas
pop
xor
xlat
push
pop
adc
outsb
dec
xchg
imul
test
dec
popa
sbb
xor
mov
movzwl
loopne
test
stos
mov
and
jno
push
mov
push
imull
push
sbb
call
gs
inc
das
dec
mov
sub
into
lcall
loopne
xchg
stos
ds
add
jnp
cmp
add
push
adc
sbb
mov
pop
cmpl
enter
rolb
stos
xchg
and
sbb
test
inc
pop
cli
xchg
mov
fcom
sub
scas
mov
push
imul
push
or
fcmovnbe
imul
in
jp
push
cli
inc
jne
sbb
pusha
mov
scas
xor
movsl
or
adc
sbb
cwtl
xor
mov
scas
es
lods
xchg
ffree
xor
adc
mov
es
add
pop
adc
fwait
push
call
or
jne
in
repnz
out
xchg
xlat
popa
fsubs
cmpsb
or
xor
jo
in
test
cwtl
jge
fnstenv
shll
add
std
cltd
jecxz
lea
add
fwait
out
and
in
sub
lods
mov
shrb
xchg
and
iret
adc
popa
nop
xchg
xor
aad
mov
out
test
push
xor
mov
cwtl
mov
fldln2
mov
pusha
addb
dec
push
fs
mov
pop
sbb
sbb
sub
cltd
shrb
out
mov
fwait
fs
data16
divl
imul
outsl
pop
iret
xor
lock
sbb
loope
mov
fildll
rol
xchg
add
cmp
xchg
fdivl
push
out
fcompl
mov
imul
mov
cmp
sahf
jne
shlb
pop
inc
mov
js
and
scas
sbb
add
rorl
push
pop
jg
jne
pop
mov
lret
lock
xor
daa
sbb
pop
pop
fiadds
in
mov
xchg
xchg
dec
or
xor
add
mov
and
int
ss
sub
idivl
mov
jl
out
sti
nop
stc
add
sub
push
adc
and
call
testl
cmp
icebp
pop
mov
fstl
dec
add
add
xchg
pop
fildll
and
hlt
pop
jecxz
fmuls
aam
mov
xchg
mov
sbb
jl
in
repnz
popf
hlt
pop
popf
mov
cltd
sbb
ror
outsl
mov
sarl
jg
pop
iret
jnp
dec
inc
cltd
nop
mov
and
pusha
movsl
outsl
shll
push
jg
jns
or
sub
mov
iret
insl
loope
loopne
jb
xor
push
push
out
xchg
adc
inc
fstl
mov
mov
add
aam
js
push
out
push
and
loopne
std
test
js,pn
es
fldt
leave
inc
cs
ljmp
and
sub
or
or
subl
daa
inc
shll
dec
add
xchg
addr16
test
fcomip
sti
lock
and
and
ss
popa
mov
test
push
pop
mov
fdivs
xchg
sbb
mov
mov
mov
mov
aas
mov
fstpl
pusha
push
es
xchg
rorb
jno
and
icebp
dec
ds
jns
mov
out
sahf
je
dec
sbb
ss
insb
inc
pop
xchg
push
cmp
mov
jecxz
inc
sub
inc
out
push
je
pop
pushw
cltd
ficomps
mov
mov
ret
sbb
mov
mov
and
inc
pop
loop
dec
lahf
mov
sub
in
inc
mov
lcall
loop
dec
in
je
jmp
mov
cli
sub
mov
andl
or
dec
pop
push
dec
mov
cmp
in
dec
inc
sub
mov
int
sbb
jmp
pushf
inc
movsl
fldl
data16
push
mov
mov
push
in
icebp
and
adc
inc
inc
pop
push
pop
push
cmp
rorl
pusha
mov
ljmp
fcoms
push
sub
popa
add
lcall
jmp
pop
ret
lret
push
popf
cmp
mov
fwait
out
dec
ljmp
xor
dec
cmp
jb
stos
xor
jmp
inc
sbb
ret
ret
mov
xor
hlt
mov
fdivrl
clc
mov
xor
fidivrs
pop
mov
xlat
mov
dec
add
sub
in
and
lds
in
mov
lret
fwait
int
daa
inc
mov
jmp
leave
adc
dec
mov
mov
ljmp
imul
shll
pop
and
dec
scas
out
aaa
sbb
imul
mov
mull
scas
lds
aas
add
movsb
cmp
sbb
shrb
inc
push
mov
xor
xchg
call
adc
and
and
xchg
sarb
mov
xor
jmp
push
push
xor
insl
inc
push
sti
std
mov
decl
addr16
lret
cmp
dec
xchg
cmp
xchg
pop
std
out
mov
fisttpl
and
stos
cmp
jecxz
fstps
jnp
test
imul
jmp
aam
mov
or
es
jo
loope
xlat
popf
xlat
or
dec
in
mov
dec
repnz
adc
sub
gs
cli
jmp
jae
pop
mov
lea
cmp
lods
fwait
sub
adcb
mov
in
sbb
jmp
jnp
lahf
and
and
jnp
dec
dec
inc
insl
loope
stc
ds
loope
push
fidivs
ret
adc
out
fmul
imul
cmp
iret
sbb
cld
loope
mov
or
cmp
jo
sbb
ja
adcb
test
and
pusha
and
mov
push
sbb
push
jne
xor
fisttps
ss
push
mov
mov
mov
int
std
pushf
outsl
lds
jb
add
jne
cmp
sub
fucomip
mov
shrb
jo
mov
andb
sub
nop
pop
mov
jo
push
popa
cli
jne
cmp
loope
fcompl
adc
cmpsb
dec
dec
adc
int3
test
js
aaa
fcompl
or
dec
push
test
in
into
adc
call
in
cs
sub
mov
addl
stos
inc
gs
xchg
mov
in
jnp
rcll
sbbl
movsb
inc
xor
dec
jecxz
stos
dec
loop
add
cmp
je
in
imul
insb
neg
out
popa
leave
lahf
stos
xchg
psubsb
push
leave
lods
arpl
sub
xchg
push
aas
or
or
ret
sub
addr16
adc
out
enter
mov
jbe
push
int3
adcl
iret
shlb
leave
jg
fdivl
push
filds
in
ja
cli
arpl
xchg
pop
cwtl
sub
ret
jns
lock
dec
loope
add
adc
hlt
mov
in
cmp
cmc
mov
lods
sub
std
leave
out
hlt
pop
jmp
xlat
mov
daa
arpl
xor
rol
rcrb
imul
adc
cmpsb
jo
pusha
inc
shr
xchg
rcrb
jae
sub
push
int
leave
jo
push
inc
pop
xchg
subb
jl
sbb
outsl
cli
fdivl
or
or
iret
call
cmp
fcos
cmp
xor
sahf
xchg
sbb
mov
mov
insb
pop
mov
ljmp
xor
fmull
jne
xchg
jbe
pop
mov
pop
xor
mov
or
pop
and
xor
mov
out
xorb
outsl
push
pop
aaa
into
das
pop
dec
subb
insl
push
sbb
loop
pop
sahf
clc
add
dec
sbb
jbe
pop
jecxz
dec
faddp
not
push
jmp
or
mov
xchg
xor
mov
dec
and
pushf
fwait
mov
mov
mov
sbb
rol
leave
add
mov
jno
call
ret
and
mov
std
and
in
fcmovne
clc
shrl
mov
es
repnz
jb
pop
and
loopne
ja
sbb
mov
lods
inc
xor
jg
repz
outsb
sub
xor
jecxz
icebp
adc
cmp
push
xchg
call
mov
addr16
jno
inc
cmp
fistps
sub
push
repz
xlat
jno
sahf
xchg
stos
push
stos
and
jb
bound
mov
mov
nop
inc
arpl
inc
sbb
push
loop
fmuls
sbb
rcr
and
iret
pushf
dec
in
fdivrp
test
test
jnp
mov
daa
cmpsb
cmp
ret
call
inc
adc
mov
add
addr16
cmp
or
loope
push
outsb
loop
xchg
inc
out
test
dec
add
hlt
push
lods
mov
fwait
mov
jno
lret
pop
xchg
xchg
insl
dec
jnp
test
shl
mov
ja
xchg
aad
pop
outsl
stos
inc
push
xchg
pop
add
or
lods
inc
xchg
outsb
xchg
add
ja
pushf
xchg
push
cwtl
repnz
and
mov
or
loop
xchg
dec
inc
mov
xor
or
insl
pop
icebp
mov
add
ror
sub
sbb
pop
daa
mov
or
xchg
pop
aaa
add
ja
movsl
icebp
cmpsb
jle
xchg
mov
cltd
push
xor
push
xchg
es
sub
repnz
mov
adc
push
or
xor
add
sbb
into
mov
subb
cmp
popf
mov
and
add
repz
into
and
rcll
int
push
inc
cwtl
pop
lret
test
mov
int
sti
stc
je
push
leave
in
xchg
add
pop
ja
xor
push
and
in
rcll
mov
jae
aas
jmp
pop
sbb
loop
mov
leave
mov
adc
add
ret
xor
andb
pop
in
sub
cmp
dec
mov
mov
out
ljmp
xchg
pop
push
pusha
ret
or
pop
pop
xor
outsb
shl
and
sub
jecxz
pop
cwtl
mov
mov
dec
dec
cmp
xlat
testl
xchg
sbbl
jl
pop
ret
or
mov
mov
fmul
lock
or
insl
mov
outsb
shrb
outsb
push
dec
push
call
aas
pop
and
aad
or
push
lods
orb
and
mov
adc
or
mov
pop
mov
sti
jbe
jmp
adc
jno
sbb
pushf
xor
push
inc
stos
popf
mov
pushf
and
sbb
jle
cltd
sub
flds
mov
mov
cmp
inc
sbb
pop
cmp
icebp
ljmp
loope
jmp
lret
int
icebp
push
cld
outsl
movsb
das
setle
call
inc
jle
decb
mov
pop
pop
mov
lock
push
cmp
pop
bound
mov
xor
mov
cld
std
arpl
orl
sbb
xchg
repnz
mov
outsl
js
daa
inc
sbbl
inc
inc
sbb
mov
aam
mov
andb
or
push
popf
mov
push
lcall
cwtl
or
adc
sbb
in
dec
xchg
cmp
sub
stos
insb
or
loop
sub
pop
dec
fs
or
and
cmp
jp
fiaddl
fdiv
js
ljmp
jae
sub
leave
fsts
mov
stc
ss
cwtl
or
mov
sbb
add
fisttpll
or
pop
cltd
insl
mov
pop
cmpsl
cmp
add
cwtl
xorl
and
xor
xchg
add
cmp
sub
adc
movsl
xchg
mov
adc
push
cmc
cmp
in
out
cmp
out
test
sbb
lods
fs
fucom
insl
aam
add
mov
mov
lea
mov
push
arpl
push
push
test
cmp
mov
push
cmpsb
cmp
fstpt
sub
lds
pop
lds
test
sbb
loopne
xor
push
divb
lret
sti
ret
and
iret
fiadds
mov
xor
xor
xor
jne
mov
mov
lds
daa
pop
mov
jg
shlb
sbb
iret
add
mulb
orb
repz
cld
mov
jmp
add
xchg
xor
mov
vpcmpeqb
icebp
daa
negl
scas
insl
out
inc
mov
stc
clc
pop
jne
call
cmp
pop
arpl
inc
decl
enter
ret
jge
xchg
jns
lahf
push
rcrl
xchg
lods
fadds
cwtl
data16
cmp
seta
adc
or
call
out
jle
es
cld
daa
in
cld
test
push
fidivrl
dec
or
xchg
mov
adc
cmp
or
lcall
inc
xchg
test
push
pushf
out
test
cwtl
or
outsb
xorb
leave
data16
dec
pop
daa
in
sub
ret
xor
data16
jmp
in
xlat
sarb
xor
pop
add
out
xor
ret
inc
xchg
push
sti
shrb
lds
jo
stos
out
cltd
aas
and
cmpsl
mov
clc
pop
les
mov
pop
sub
scas
mov
popf
push
adc
leave
add
fs
cmp
scas
mov
int3
mov
aas
arpl
mov
xchg
or
idivb
jne
popf
fwait
fsqrt
or
sub
pusha
mov
pop
jo
aas
popf
xlat
lcall
std
sbb
dec
mov
and
clc
lods
xchg
movsb
lock
mov
in
fisubs
push
jge
fnstcw
or
mov
mov
mov
and
repz
imul
lock
xchg
mov
jle
and
insl
sub
divb
test
dec
pop
je
pop
push
adc
push
push
lret
or
or
mov
pop
cmc
mov
fistpll
aaa
jg
imul
or
and
out
je
mov
int
add
negl
sbb
les
mov
cld
pop
mov
lcall
cwtl
out
mov
mov
test
frstor
pop
push
xor
xor
js
je
xchg
mov
sub
sub
aam
es
mov
dec
xchg
idivl
mov
mov
aad
xor
push
sbb
mov
cli
xor
or
cmpsl
and
mov
and
pop
inc
ss
scas
lahf
dec
in
dec
mov
jge
jnp
popf
loop
add
fs
insb
jne
sahf
ljmp
out
ss
scas
out
cld
adc
sub
das
ret
mov
pop
mov
cmp
adc
xchg
loope
sbb
inc
xor
cmpl
out
mov
add
dec
fstpt
int
cli
and
sbb
adc
pop
jg
repz
cmp
jp
dec
negl
add
push
aaa
notl
ja
shrb
lods
inc
test
into
popa
je
push
fs
push
mov
add
repnz
push
push
loop
push
dec
frstor
sub
sbb
mov
xchg
push
push
mov
mov
test
pop
popf
popl
jnp
sub
out
popf
xchg
jnp
rep
cltd
rcrl
lret
leave
mov
scas
jns
notb
push
test
rcll
shlb
ret
sub
cmpb
jb
pop
push
push
sahf
ss
icebp
fadd
movsl
pop
mov
clc
jne
inc
push
in
xchg
pop
pop
scas
xor
dec
imul
sbb
add
mov
sbb
ret
ficomps
mov
in
fiadds
mov
loop
movsb
test
and
inc
shrl
and
mov
sbb
popf
int
inc
repz
mov
mov
push
pop
fcmove
inc
add
ja
test
jnp
or
mov
sbb
inc
xor
jbe
xlat
pop
sub
inc
jns
jae
ret
lahf
and
inc
jmp
push
fsubr
loope
push
sbb
bound
adc
or
call
or
movsl
jmp
in
cmp
ljmp
ljmp
cmp
lds
int3
arpl
lcall
test
adc
in
inc
and
out
mov
into
pusha
daa
jg
aam
mov
test
stos
insl
and
rorl
loopne
mov
in
and
in
sahf
ret
incl
pushf
pop
movsl
arpl
pop
dec
xchg
addr16
xor
das
out
or
into
iret
dec
stos
mov
das
jno
sub
mov
test
and
cmp
cld
mov
inc
dec
popa
or
roll
mov
xor
in
les
movsl
repz
mov
shll
ja
popa
mov
shll
xlat
insl
push
mov
mov
mov
pop
adc
sbb
jns
lret
adc
add
ja
mov
lds
dec
xchg
js
inc
or
subl
std
jge
cmpsl
pusha
adc
inc
inc
daa
xor
dec
sub
clc
pusha
jb
xchg
xlat
rcl
idivb
and
je
data16
popa
jns
mov
push
cmpsb
jno
loop
cltd
and
out
pop
stos
cltd
xchg
je
push
lods
pop
push
ja
out
xor
jl
scas
cmp
out
inc
and
jle
clc
out
pop
insb
push
fistps
loop
jne
mov
xor
cmp
xor
inc
jle
out
jns,pn
push
ror
xor
jo
inc
sub
pusha
sub
ljmp
dec
cwtl
fstl
mov
jnp
xlat
jmp
outsl
mov
pop
and
sbb
push
jnp
cmpsb
in
sbb
inc
mov
xchg
jns
call
fisubrs
sub
dec
lea
je
cmp
int
daa
incl
pop
mov
mov
dec
clc
pop
cmc
add
inc
adc
cmpsb
inc
sub
and
mov
call
lret
test
xor
arpl
fsubs
pushf
cmp
rcrb
sbb
and
pop
cmp
add
notb
movsl
add
fistl
cmpb
jecxz
or
add
mov
mov
mov
inc
mov
inc
cmovno
and
adc
jle
loopne
adc
popf
in
bound
adc
loopne
push
test
adc
out
mov
sub
loope,pt
lret
jp
je
bound
dec
mov
jp
clc
out
or
lcall
push
outsb
sbbl
enter
sbb
push
imul
pop
popf
xor
xchg
pop
inc
rcll
mov
mov
push
mov
mov
push
xchg
shr
mov
icebp
mov
sti
fcoms
sbb
pop
mov
jb
push
sbb
xor
mov
rcll
pusha
pop
shll
insb
cmp
lds
test
dec
aad
xchg
mov
push
lret
sub
rorb
es
imul
sub
repnz
aad
pop
lret
test
mov
out
mov
adc
cmp
push
mov
andb
lods
cmp
pusha
pushf
je
aam
stc
jb
fiadds
add
jmp
je
xor
mov
ds
clc
movsl
dec
rclb
xchg
aam
inc
imul
jb
push
mov
push
aam
dec
test
inc
out
scas
add
orl
ljmp
add
inc
lret
pop
dec
aam
aaa
aaa
adc
je
mov
and
dec
sti
es
jne
gs
inc
adc
xor
js
xor
push
jecxz
fwait
loopne
rclb
lods
lret
mov
mov
cli
test
fs
cmpsb
iret
or
ret
mov
pop
fisubrs
xor
arpl
gs
test
cmp
iret
fmull
vmovaps
xchg
mov
incl
push
shll
push
pushf
mov
movsl
jae
add
bound
and
repnz
inc
push
cmp
ljmp
pop
dec
pop
scas
jp
ja
or
test
inc
cmp
mov
test
mov
cld
sbb
sub
lahf
cmp
jb
xor
lahf
sbb
mov
mov
mov
stos
movsl
leave
jp
andl
push
xorl
jbe
cmpsb
cmp
sub
xor
adc
in
test
out
fistl
xor
stos
sub
aaa
xchg
popa
out
sbb
fcmovnu
call
clc
movsb
dec
pop
in
adc
adc
mov
insl
pop
sub
repz
dec
mov
pop
scas
aad
jnp
outsl
divb
mov
cld
outsb
clc
sbb
adc
inc
js
stos
repz
xorb
ss
insb
int3
sbb
mov
out
ds
jo
add
push
sub
inc
sub
mov
push
outsb
repnz
mov
mov
fdivl
sub
pop
push
dec
inc
call
push
int3
gs
and
push
jnp
mov
mov
mov
mov
adc
mull
clc
lods
cmp
pop
and
mov
in
jg
outsl
sub
inc
roll
iret
jg
push
inc
pop
cmp
inc
and
ds
adc
addr16
imul
jle
mov
and
aas
hlt
mov
mov
in
repnz
push
mov
shrl
cmpsl
jle
neg
jmp
mov
push
stos
inc
orb
call
mov
pusha
or
loope
mov
lock
int
fcomip
in
mov
ljmp
outsl
pushf
shlb
or
dec
push
clc
jg
movsb
add
inc
mov
test
xchg
adc
inc
push
or
lock
or
add
out
xlat
int3
std
jo
jnp
mov
cmovae
in
sbb
repnz
xchg
adc
fdivr
stos
mov
loopne
or
mov
fwait
mov
push
cmp
into
addl
adc
mov
jge
in
sahf
cmp
je
cwtl
lods
mov
push
and
into
movl
inc
sub
mov
popa
or
negb
ja
fcmovnu
jae
nop
sbbl
adc
fadds
pop
in
xlat
jo
loope
jae
jne
fsubrl
into
dec
sarl
push
pop
push
scas
das
lock
mov
jbe
cmc
out
fbstp
jle
mov
fcmovu
inc
push
push
fadd
sub
mov
arpl
mov
or
push
sahf
in
jnp
iret
pop
and
cmp
pop
inc
sbb
fidivrs
hlt
jnp
roll
inc
stos
or
fidivl
fsubrl
std
lock
pop
push
mov
dec
js
imul
test
mov
fiaddl
xor
mov
stos
cs
push
pop
pushl
push
sub
push
call
or
lret
data16
jnp
addl
and
cmp
sub
sbb
stc
xchg
je
xchg
sti
aaa
push
sub
sub
push
ret
jge
inc
mov
out
iret
data16
jae
adc
je
scas
jbe
out
out
and
xor
mov
or
cwtl
xchg
dec
es
or
xor
pop
movsl
cmc
dec
pop
and
sbb
leave
push
fisttpl
jne
inc
cmp
jns
pop
cmp
inc
cmc
lret
push
pop
push
ds
icebp
xchg
adc
arpl
adc
pop
or
in
cmc
imul
sbb
in
shlb
cmpsb
lock
pop
shrb
fwait
xorl
or
rclb
adc
jecxz
lea
hlt
inc
xchg
mov
jmp
fildll
sahf
rcl
fdivl
mov
movsb
jnp
lds
dec
movb
mov
sub
leave
popa
sahf
cmp
cs
mov
pop
mov
jbe
push
xchg
insl
or
mov
stos
inc
xchg
mov
gs
sbb
mov
pop
mov
lea
dec
out
push
mov
ss
inc
adc
push
jmp
or
adc
daa
fdivl
xchg
in
mov
xchg
add
push
and
adc
out
fildl
stos
pop
mov
lea
cwtl
fucomip
jp
data16
or
pushf
pop
sub
push
push
icebp
mov
or
sub
rorl
xchg
movsb
ljmp
mov
mov
aam
jnp
pop
xchg
mov
mov
push
jg
aam
jmp
imul
jb
dec
pop
cli
xchg
dec
push
daa
loopne
xchg
fwait
xchg
xchg
cmp
xchg
insb
sbbb
popf
jle
dec
aam
lahf
and
mov
xchg
fildll
xor
call
test
lods
shll
xchg
ljmp
mov
pop
dec
repz
jg
cmpb
xchg
int
dec
cmpl
jge
aam
dec
mov
lea
imul
push
clc
or
movsl
ss
lcall
stc
cmp
xor
and
rep
mov
int
lret
jp
jb
add
pop
push
mov
xor
dec
shrl
add
fisttps
sbb
cmp
xchg
adc
push
pushl
mov
sti
icebp
shrl
mov
and
andb
hlt
inc
mov
xor
xchg
scas
cld
mov
cmp
add
pop
shlb
xorb
xchg
imul
repnz
stos
popa
fcompl
cwtl
test
fadds
or
xchg
stos
add
and
xchg
sub
add
insb
cmp
mov
mov
jbe
jo
sarl
pop
pop
jno
or
je
sub
add
bswap
inc
add
jg
gs
andl
imul
sti
stos
mov
adc
push
jnp
sbb
mov
std
popa
xor
and
push
pop
out
xchg
repnz
icebp
jbe
lcall
in
cltd
or
hlt
cli
pushf
aad
add
stc
out
int
testb
jns
mov
jns
and
add
das
adc
inc
sti
xchg
jmp
xchg
jl
or
cli
stc
add
xchg
enter
gs
cmpsl
adcl
adc
sub
adc
push
call
fsubrl
mov
loopne
jmp
xor
adc
sti
in
sti
mov
push
out
arpl
shl
sub
jl
lret
xchg
js
add
cmpsb
mov
lgs
lahf
cmp
inc
in
test
stos
fcmove
fdivs
jmp
dec
and
fisubl
rcrl
imul
cmp
sbb
int
adc
pop
sbb
xorb
pop
xor
int
clc
xchg
jo
push
inc
push
jo
mov
xor
cmp
pushl
pop
sbb
adcl
mov
add
sbb
je
xor
out
repnz
ror
add
cs
inc
cwtl
push
sub
movsl
xchg
ja
inc
iret
pop
test
add
mov
mov
or
sub
push
addl
clc
popf
xchg
sub
imul
rorb
sub
cmp
ss
iret
jecxz
xchg
popa
jmp
jo
xor
incl
adc
and
xchg
push
std
xchg
fs
add
inc
or
jle
shll
sbb
jne
add
cmpsl
data16
and
and
loopne
cmp
mov
mov
test
shrl
sbb
je
cmp
xchg
push
mov
mov
sbb
mov
cmc
jbe
jecxz
dec
pop
push
jmp
scas
add
or
aad
xor
aaa
mov
cli
mov
push
cmp
jmp
adc
cld
pusha
mull
push
cmc
lret
or
xchg
sbb
mov
ret
out
dec
pop
in
das
pop
sbb
mov
addr16
xchg
inc
les
xchg
add
flds
mov
js
mov
push
mov
inc
movsl
push
popf
push
push
lods
ljmp
pushf
jae
push
mov
xchg
cli
or
mov
dec
stos
cmp
shrl
pusha
adc
lcall
mov
add
jns
sbb
push
adc
push
test
add
adc
adc
jge
push
pop
dec
pop
test
pushf
or
or
and
out
mov
xor
add
pop
cld
or
insb
mov
data16
and
scas
xor
xchg
test
or
mov
add
push
ss
push
mov
fistps
stc
xor
js
cs
sub
mov
mov
sarb
lds
ds
sbbl
int3
jns
jns
cmc
mov
rclb
out
dec
test
add
adc
cmp
icebp
xchg
cltd
sub
mov
sbb
imul
out
data16
pop
call
xor
sub
jae
mov
dec
pop
hlt
add
xchg
sub
xchg
inc
cmp
rclb
pop
in
cmp
sbb
loop
hlt
pop
mov
fcmovne
int3
mov
xchg
dec
incl
test
pop
out
pop
rol
pop
xorb
lds
addr16
inc
add
lret
int
test
and
dec
stc
or
enter
fwait
repz
xlat
shrb
stos
jns
pop
jbe
aam
aas
push
aaa
pop
orb
inc
cs
fs
sbb
sub
pop
and
in
sahf
mov
and
add
or
stc
xchg
sbb
cmc
sbb
dec
insl
inc
push
cwtl
ja
sbb
cmp
out
inc
xchg
push
pop
inc
cmpsb
add
lods
fsubrl
lods
sub
mov
cmp
ret
mov
iret
ret
inc
ret
int
jecxz
fs
inc
iret
inc
mov
and
pop
or
ret
ja
pop
in
out
xchg
repnz
jle
mov
adcb
pusha
std
lods
fmull
dec
fildll
sub
fcmovbe
dec
data16
jp
popa
xor
enter
mov
sbb
movsl
loop
jbe
push
cmp
inc
scas
and
lock
jb
and
pop
hlt
cmc
jmp
into
dec
push
cmp
lods
xchg
lods
add
ret
sub
sub
mov
sub
xlat
add
jl
cmc
test
sbb
inc
data16
test
sbb
pushw
mov
insb
iret
sbb
push
pushf
rcrb
pop
out
out
sahf
mov
sub
adc
icebp
xor
push
shlb
or
arpl
mov
pop
adc
mov
xor
adc
pop
sub
inc
xlat
cmp
insb
aad
pop
mov
sbb
jecxz
mov
jmp
iret
out
je
xchg
rcrb
adc
mov
gs
and
in
insb
mov
std
mov
test
push
jb
addb
sbb
gs
sub
mov
int3
cmp
shr
test
sbb
dec
fsubrl
dec
idivb
fs
mov
pushf
out
add
insl
add
arpl
add
jp
cmc
loopne
xlat
jnp
mov
cmp
popf
addr16
loop
mov
push
jp
rclb
test
dec
adc
lret
jae
pop
movsl
mov
or
cmpsb
jge
push
int
test
pushf
stos
push
pop
sbb
and
xor
out
les
fwait
bound
mov
fcoml
dec
add
f2xm1
lret
or
lods
jns
add
and
jg
aaa
je
adc
cld
xchg
ret
mov
sbb
mov
pop
jle
push
mov
fucomip
pop
sahf
scas
jg
push
popa
shlb
popf
mov
ljmpw
sbb
add
mov
push
add
mov
xchg
pop
in
addr16
add
mov
out
popa
or
out
mov
clc
popf
int3
lea
jo
add
test
sub
in
movsl
mov
jle
loop
jle
stc
pop
add
jle
ss
mov
cwtd
popa
xlat
push
mov
fs
aas
jmp
repnz
pop
add
stos
dec
mov
loope
xor
mov
lret
sbb
xchg
imull
add
xor
mov
lret
xor
push
push
mov
ljmp
call
fiadds
pop
pop
popf
leave
mov
dec
mov
add
movl
and
cmp
cmpb
out
sub
sub
adc
gs
inc
lret
lret
xor
add
gs
clc
mov
mov
pusha
fsubrp
sbb
dec
adc
xchg
xchg
rcll
push
jno
lock
test
fistpl
mov
into
xchg
ret
sub
cmpsb
mov
repnz
cmp
mov
cmp
into
jge
sub
mov
int3
stc
jo
adc
xor
sub
dec
dec
ljmp
out
repnz
fcoms
in
or
mov
rclb
sbb
sub
scas
adc
jns
mov
lods
jmp
fprem1
movb
aam
sbb
xor
mov
push
sbb
std
dec
insb
iret
push
test
push
mov
jne
test
mov
sub
out
pop
cwtl
pop
xchg
iret
insb
cltd
and
ret
cmc
lea
mov
addr16
popf
lret
pop
adc
fadd
cmp
movsb
int
push
cs
int3
jae
or
pop
js
add
dec
jb
stos
arpl
push
inc
mov
inc
pop
pop
dec
clc
mov
popf
sub
sub
cmpsl
adc
adc
push
data16
int3
mov
xchg
and
dec
cmp
add
repnz
mov
xor
pop
jp
push
ljmp
mov
out
cmp
pushf
push
ret
cltd
pushf
sbb
jp
mov
inc
hlt
push
xchg
mov
lret
bound
mov
mov
test
imul
mov
lock
xor
pusha
push
xchg
dec
inc
or
add
aas
loopne
xchg
add
sbb
and
inc
enter
add
fstpl
cld
mov
sbbl
ret
leave
sub
aad
popf
dec
call
push
shrl
xlat
pop
jo
call
add
test
inc
faddl
fidivs
data16
xor
pop
aas
add
imul
push
adc
stc
adc
stc
out
pusha
lods
aaa
stos
mov
leave
mov
rcrl
loopne
out
fs
int3
jle
aaa
int
xor
pop
lret
push
sti
iret
movsb
jns
mov
add
xor
sbb
push
jo
add
jmp
sub
cwtl
jae
sahf
leave
mov
popa
mov
adc
jnp
mov
mov
ret
outsl
sbb
cld
daa
mov
outsb
mov
aad
jmp
pushf
pop
push
sub
outsb
jg
sahf
std
les
testb
fwait
adc
jp
mov
int
sbbl
lret
roll
scas
aad
inc
loope
dec
test
out
xchg
mov
jne
cltd
jbe
jle
mov
icebp
ds
cwtl
pushf
push
jae
lock
mov
or
xchg
cltd
test
jp
jae
pop
jecxz
cmp
dec
cmp
push
adc
inc
xchg
out
stc
mov
mov
cmp
test
inc
adcl
int3
arpl
xchg
in
test
push
and
subl
call
in
sub
mov
insb
jle
std
mov
insl
aaa
ret
lea
cmp
xchg
mov
popa
test
jmp
dec
push
jb
mov
data16
jle
popa
cmp
push
fmull
adc
lods
call
loopne
ficomps
mov
mov
mov
enter
cli
add
mov
insl
push
data16
mov
jecxz
jp
adc
je
jne
js
loop
xchg
ds
mov
test
jp
or
and
popf
xor
jae
add
lahf
je
mov
repnz
arpl
xchg
mov
ret
and
xor
insb
mov
loopne
inc
pop
cltd
adc
repz
aam
mov
stos
mov
cwtl
imul
pop
out
jg
push
cmp
repnz
repnz
or
and
mov
adc
xchg
rcl
test
xchg
add
pop
jo
xlat
mov
outsb
jecxz
outsl
mov
subb
in
pusha
adc
mov
sbb
loopne
inc
xchg
adc
mov
fsubrl
lcall
add
inc
mov
pusha
rol
ss
push
das
iret
cmpl
mov
loope
leave
dec
adc
enter
push
out
fadd
iret
loop
or
cs
dec
or
add
jp
movsl
ljmp
jbe
xor
test
sbb
ficomps
pop
pop
xchg
sub
sbb
stos
rcrb
pop
nop
icebp
jne
es
scas
stos
subl
cmpl
xchg
sub
pop
mov
push
sbb
out
mov
bound
xchg
jle
leave
iret
cmpsl
leave
mov
cmp
int
fwait
sub
mov
lcall
mov
pop
push
ljmp
cmp
out
repnz
push
pop
test
or
mov
xlat
ret
mov
cmp
loope,pn
pop
inc
movsb
pop
push
dec
lods
leave
mov
lcall
inc
icebp
push
cli
pop
push
cs
mov
sbb
jnp
cmp
and
in
push
repz
xorb
insl
lods
cmp
sti
cmc
mov
enter
ja
das
subl
pusha
xor
sbb
sti
adc
dec
out
mov
dec
dec
arpl
test
push
das
cmp
movsl
ja
test
ds
xor
sub
sub
cmpsb
in
push
in
mov
imul
sub
jp
and
popa
loope
dec
repz
movsl
cmp
je
sub
fstpt
cmp
in
and
xor
sbb
mov
popa
fcoms
or
pop
out
rcrb
inc
pushf
std
pop
sahf
in
hlt
mov
les
adc
mov
test
loopne
cmp
mov
shrl
mov
inc
jmp
leave
pop
jb
xor
sub
fwait
add
fwait
inc
fmulp
divl
in
gs
pusha
push
imul
stc
or
repnz
hlt
pusha
push
ds
test
sbb
mov
add
pop
xor
jno
sahf
data16
in
dec
ficoms
dec
sbb
cld
insb
add
mov
mov
inc
push
adc
cmpsb
jmp
xor
and
cltd
or
mov
xchg
dec
cmp
sub
sbb
xor
bnd
fdivs
or
movsb
jmp
popf
jl
das
cmp
sub
jnp
aaa
je
mov
test
adc
aad
push
nop
popf
bndstx
xchg
add
push
test
or
je
mov
out
adc
push
in
mov
incb
fnsave
or
movsb
cmp
aam
xlat
popf
jmp
mov
fisubrl
out
cltd
js
and
or
push
fildll
enter
push
insl
clc
lret
int3
mov
cltd
lds
pop
decl
es
mov
hlt
xchg
xchg
push
add
dec
call
andb
sub
test
lcall
stc
cmp
mov
dec
jo
ja
jo
adc
imulb
mov
jb
mov
and
std
ret
pop
out
gs
mov
rcrl
mov
sarb
cmp
lods
jmp
lahf
repnz
daa
jg
add
inc
mov
mov
popa
inc
insb
lds
jbe
shrl
movl
dec
xchg
dec
and
ficoml
clc
mov
adc
loope
xor
mov
les
pop
push
ja
les
in
out
jne
cwtl
and
paddd
rcrl
xchg
cs
or
mov
fwait
jge
jle
aam
out
mov
adc
shr
add
nop
lea
ret
cmp
frstor
xor
out
cmp
pop
inc
push
fcoms
in
or
jb
sub
test
push
out
fidivrl
lahf
push
rol
daa
notb
aad
aam
xor
sub
inc
and
push
mov
cmp
lret
or
dec
mov
aaa
out
mov
pop
into
jno
cmp
out
mov
mov
jmp
cmp
mov
sub
xchg
pop
adc
jle
dec
xor
icebp
lcall
dec
adc
insl
sub
mov
sub
mov
test
mov
popa
ljmp
mov
sub
inc
push
scas
mov
sub
mov
icebp
insb
in
js
fildll
inc
mov
sub
loopne
lcall
jle
fbstp
sahf
xor
das
movsb
inc
pop
lahf
cmp
mov
je
jbe
incb
repz
add
ret
mov
test
test
inc
fisubl
in
sbbb
push
idivb
aas
and
xor
push
jne
or
js
or
mov
movsb
push
cltd
xor
mov
inc
adc
xor
dec
stos
test
cmpsb
xor
mov
dec
or
cmp
pop
in
dec
shlb
xor
je
mov
and
jp
pushf
es
jecxz
add
daa
push
sub
arpl
inc
fs
aas
push
pusha
icebp
pop
bound
sub
stos
repz
arpl
inc
pop
add
lret
push
sbb
addr16
inc
fidivl
fsubr
inc
sub
aam
aas
mov
pop
aaa
data16
aas
fistpll
mov
jmp
ret
push
xor
adc
xor
bound
test
popa
jns
or
cmp
in
xchg
aam
and
cmc
pop
jno
gs
daa
arpl
mov
stc
or
mov
leave
pop
adcl
testl
andl
and
lock
cmp
mov
or
shrl
xchg
or
negb
push
in
xchg
in
mov
fidivs
loopne
dec
daa
subl
ret
bound
push
sub
int
xchg
lahf
in
es
pop
mov
push
mov
sub
xlat
jbe
leave
les
sti
push
cli
scas
xchg
int
es
imul
adc
xchg
sbb
or
movsb
pop
xlat
mov
ret
enter
pushf
cmpsl
sbb
mov
xor
push
adc
sbb
xchg
jno
std
inc
sbb
lcall
mov
pop
jnp
in
sub
ss
dec
in
sahf
xor
mov
push
ja
pop
mov
or
dec
sti
mov
call
fcomps
sar
push
mov
fcoms
cld
imul
lock
cmp
pushl
mov
and
inc
fnstcw
dec
push
movsl
movsl
cmp
jge
xor
ret
pop
adc
arpl
cs
dec
push
jl
fsubrl
dec
lods
aas
push
lds
imul
dec
stos
mov
push
jl
pop
mov
lret
clc
sbb
cmp
lods
push
and
xor
addr16
dec
enter
stc
mov
cmpsb
xchg
cmp
cmc
xchg
ss
mov
push
insb
pop
adc
xor
jp
out
push
nop
mov
xor
jnp
insl
jne
and
mov
or
pusha
xor
jmp
jno
pop
and
cmpsl
adc
clc
mov
pop
xor
jne
test
pop
pusha
ss
pop
lret
mov
mov
jae
dec
xchg
pop
adc
adc
push
pushf
cmpsb
mov
fisubrl
movswl
adc
or
out
outsb
icebp
jl
pusha
mov
sbb
push
pop
mov
mov
movsl
cmpsl
aaa
inc
notl
cmp
mov
lea
mov
cli
aam
cwtl
pusha
movsb
mov
add
mov
cld
repnz
xchg
movsl
xor
push
or
fs
lret
mov
adc
adc
sbb
push
sbb
or
outsl
push
in
insb
inc
push
les
arpl
cmpsl
and
dec
iret
jge
dec
dec
pusha
push
push
aas
xchg
shlb
lods
jnp
mov
jge
add
sub
or
jo
push
cwtl
mov
dec
inc
fidivrs
xchg
and
gs
inc
xor
push
jge
fs
lret
mov
sub
push
pop
cmpsb
std
pop
arpl
mov
or
dec
sbbb
jmp
movsl
xchg
pop
call
imulb
sbbl
xchg
outsl
sub
imul
push
rolb
ds
js
imul
pusha
test
scas
jnp
dec
jecxz
xchg
pusha
push
and
out
inc
jb
imul
insb
fnstcw
mov
or
xchg
xor
mov
clc
loop
sub
push
push
cmp
xor
mov
dec
push
xor
loope
push
sbb
popfw
dec
inc
pop
stc
mov
test
jbe
lret
lahf
lods
cmp
adc
sahf
xchg
pop
stos
cmp
shr
lea
les
dec
dec
adc
rorl
adc
adc
repz
xor
cmp
fstl
and
movsl
mov
out
mov
shl
cmpl
outsb
test
jb
not
mov
jo
daa
fistps
mov
cmp
loopne
sub
lock
cwtl
in
cmp
pop
push
jne
pop
cmp
adc
jb
adc
sub
mov
sub
adc
cmp
fidivl
dec
test
rclb
sbb
lret
dec
outsb
dec
jmp
lahf
xchg
dec
mov
aad
pop
jns
ret
orb
mov
xchg
ljmp
out
icebp
xchg
jae
pop
cmp
xor
sub
notb
mov
es
cld
das
jne
movsl
into
jo
push
rcll
or
sbb
dec
lahf
jl
shr
xor
lcall
and
cmpsb
cmp
and
enter
jns
mov
add
jl
xor
loope
inc
mov
push
push
inc
fs
cmp
sub
dec
dec
lret
scas
jno
or
cld
pop
shr
adc
cmp
shlb
inc
fsubrs
jp
stc
stos
in
outsl
jnp
add
shrl
lahf
xor
je
test
mov
inc
fmuls
pop
xchg
in
aaa
dec
cmp
jo
jmp
mov
jae
pop
mov
and
into
jae
lods
inc
add
int3
arpl
mov
clc
ljmp
dec
xchg
sub
in
pop
cmc
adc
pop
setae
negb
fdivl
jg
cmp
pop
pop
cmp
sbb
and
sub
pop
rol
jp
stos
xchg
decl
add
jne
cmpsl
mov
test
xchg
ljmp
push
repnz
ds
sub
mov
add
int
data16
mov
push
jne
and
inc
xchg
sub
sbb
mov
sbb
adc
jne,pt
adcb
or
daa
inc
sub
adc
pushf
stos
push
pop
mov
mov
ljmp
mov
mov
lods
andl
cmp
sbbl
pop
aaa
into
inc
cld
and
jp
shl
pusha
out
sbb
addr16
gs
push
aaa
in
dec
in
scas
arpl
push
stos
es
adc
push
test
lret
cmp
dec
add
mov
and
cmovl
lcall
jmp
sub
push
popf
mov
ss
mov
and
mov
mov
inc
lret
rcl
insl
add
dec
subb
add
mov
das
jmp
mov
out
ds
sub
iret
mov
adc
mov
mov
fwait
pop
pop
xlat
cmp
test
cmp
pop
adc
dec
or
andb
stc
rclb
xorl
jbe
sub
cmpsl
rcll
mov
popa
lds
out
sbb
mov
jmp
pop
pop
push
stos
push
sub
mov
cmp
xchg
cmp
push
enter
es
xor
adc
icebp
cltd
mov
mov
pop
cli
aas
push
lods
jmp
mov
lret
icebp
push
les
mov
mov
jge
dec
dec
mov
dec
pop
add
mov
cmc
bound
rcrl
cmpl
mov
adc
scas
mov
jle
daa
pusha
fdivs
incb
pop
icebp
inc
mov
idivl
dec
lcall
andb
out
subl
pop
sahf
jg
imul
ss
lcall
or
arpl
xor
data16
mov
push
daa
jo
iret
loope
push
ds
out
jge
sub
or
testl
test
add
out
inc
pop
adc
sbb
lods
in
sbb
out
push
mov
lods
jle
addr16
add
and
stc
and
sub
lds
dec
addr16
stos
cli
jge
movsb
ss
or
add
faddl
fwait
mov
mov
iret
outsb
jp
cs
jne
mov
pop
push
fdivr
or
insb
pop
push
lret
loopne
je
sahf
jnp
mov
or
dec
xlat
subb
jge
aas
or
pop
daa
incb
or
mov
xor
rcr
push
in
jp
mov
arpl
int
rcr
pop
and
sbb
or
testl
add
sbb
fldt
shll
rcrb
dec
inc
in
dec
out
nop
push
pop
les
push
jnp
xor
cmp
cmp
hlt
xor
cmp
ret
xlat
cs
pusha
adc
sub
lcall
xchg
cmpsl
aas
push
sti
aam
test
inc
mov
pop
fnsave
jb
andb
in
idivb
rcll
insl
jl
mov
inc
jns
jecxz
insb
push
push
sbb
adc
sub
cwtl
das
push
jecxz
push
pushf
daa
mov
pop
mov
sub
out
mov
je
inc
mov
lock
mov
fcmove
mov
insb
add
jnp
lea
xor
in
mov
xchg
add
ficompl
ja
sub
iret
ds
sbb
ror
mov
scas
sub
flds
orb
enter
sbbb
mov
or
mov
es
out
inc
fucomi
popa
in
std
xchg
adc
inc
sub
dec
or
and
dec
jge
sahf
int3
or
cli
or
adc
pop
lcall
out
cmc
adc
push
push
loopne
adcb
jno
and
adc
fidivl
push
imul
mov
lret
adc
jno
popf
mov
mov
cs
jne
xor
shll
lock
push
cli
mov
cmpb
cltd
lds
inc
sbb
stos
or
mov
loope
or
mov
inc
pop
dec
pop
mov
lods
sbb
adc
iret
popf
xor
out
mov
in
mov
adc
aaa
and
push
adc
in
jbe
out
push
pop
inc
cltd
sbb
adc
js
sbb
inc
jge
in
mov
neg
cli
mov
bound
psrlq
or
lea
cmc
lcall
rcl
es
mov
aas
mov
in
shll
lret
sti
jbe
das
pop
into
xor
sahf
loop
mov
push
shlb
xlat
xchg
push
jb
dec
mov
mov
js
mov
leave
std
lods
or
in
mov
sub
xlat
les
aam
addr16
loop
fwait
mov
out
xor
sub
shlb
loope
push
ljmp
jno
das
fnsave
xor
push
movsl
dec
jae
jmp
imul
pushf
pop
add
push
lea
inc
xor
inc
mov
addl
xchg
sbb
test
cmp
and
mov
loopne
xchg
cmp
inc
jecxz
xchg
clc
add
push
lret
cs
lea
shrl
mov
stos
xchg
sbb
cmp
adc
movsl
lds
push
jno
stos
fistpll
xor
arpl
adc
xchg
mov
int
mov
dec
mov
rclb
pop
pop
push
inc
mov
je
dec
in
or
imul
and
cmc
xor
dec
dec
arpl
movsb
mov
test
clc
je
jo
pop
lods
push
pushf
mov
pop
sbb
adc
repnz
addr16
loopne
lock
repnz
lret
lret
and
pop
mov
and
mov
loopne
icebp
int
mov
lret
ret
data16
shlb
cmpsb
repz
stos
lret
mov
jns
or
inc
out
setnp
popa
pop
das
jbe
shll
push
inc
adc
push
iret
dec
pop
sbb
adc
inc
jmp
insl
mov
inc
inc
cmc
mov
adc
jns
stos
xchg
lcall
sub
fldenv
push
mov
push
or
fdivrl
fs
mov
test
or
mov
and
mov
stc
cmp
roll
dec
push
fnstenv
mov
leave
into
lock
jmp
pop
test
dec
sub
scas
and
push
ficoml
mov
lret
out
movsl
jmp
jmp
cli
cld
jo
cs
mov
cmp
lods
sbb
push
arpl
sub
ss
fistpll
dec
shlb
pop
hlt
test
inc
sub
je
adc
xchg
mov
dec
add
inc
data16
fsts
inc
in
in
ljmp
iret
xchg
xchg
mov
inc
fldl
jnp
inc
mov
pop
mov
arpl
mov
push
xchg
sub
mov
arpl
cs
imull
inc
fimull
sbb
jnp
mov
dec
jbe
dec
addr16
inc
enter
gs
push
call
cs
pop
push
mov
int3
push
mov
rorl
add
leave
loope
or
dec
mulb
aad
jno
imul
in
mov
out
das
xchg
or
jle
loop
bound
leave
jae
push
inc
fldl
fisubs
mov
std
xchg
inc
mov
sahf
or
lret
cmp
in
lea
add
inc
std
in
outsb
jecxz
cmp
loopne
jl
test
mov
inc
scas
pop
adc
movb
aad
sahf
push
lock
push
jmp
ds
jo
ss
aam
mov
add
frstor
sbb
mov
pushf
cli
stos
daa
pop
out
push
ja
imull
iret
sub
arpl
shl
sub
and
xor
xchg
sarb
adc
mov
mov
jbe
adc
andl
fisubrl
adc
je
inc
cmpsb
lret
mov
sarl
jmp
xlat
call
cmp
mov
add
daa
test
mov
cmpsl
dec
push
or
cmpsl
mov
shll
std
pop
dec
stos
pop
enter
lret
aam
dec
out
sbb
add
dec
std
movsb
loope
xor
add
ficompl
jecxz
sti
lret
jne
enter
inc
loopne
jns
fidivrs
dec
xchg
ret
xchg
insl
rcr
vpextrd
jmp
xchg
adc
mov
fs
enter
ret
xchg
jmp
test
in
loop
push
add
sbb
mov
xchg
ret
negb
movhps
xor
xchg
scas
jp
adc
stos
xor
mov
insl
sbb
xchg
mov
stos
xchg
insl
lock
xchg
cmp
lret
and
pop
cmp
shlb
mov
fsubrs
and
fbstp
into
dec
imull
icebp
adc
pop
cmp
sub
pop
inc
fisttpll
mov
xchg
loop
mov
add
sbb
leave
fnstenv
push
mov
loopne
sub
cmc
add
scas
clc
stos
inc
fimull
xchg
and
xchg
mov
lds
aad
mov
fdivs
inc
faddp
mov
xor
stc
or
shl
movsb
pop
add
sarl
mov
out
mov
and
scas
or
aas
shlb
icebp
pop
dec
sbb
jp
and
jg
cmpsl
sub
push
repz
testl
lods
pop
aad
sub
mov
pop
adc
repnz
rcl
sti
mov
inc
xor
cwtl
mov
push
out
sbb
jl
sti
clc
dec
pop
cmp
jnp
movsb
rolb
leave
sub
xor
inc
add
or
cwtl
push
or
sarl
adc
pop
adc
or
push
push
add
push
je
stos
adcl
jne
loope
and
cld
dec
imul
add
mov
aaa
sahf
inc
popf
mov
shlb
leave
and
lret
cmc
ja
mov
inc
and
movsb
push
and
gs
out
add
fdivr
pop
push
call
rol
ret
out
sbb
add
mov
jle
dec
mov
int
popl
push
cltd
push
shl
xchg
xchg
out
and
mov
clc
orb
pop
mov
fs
adc
movsl
and
repnz
or
loope
insb
das
lret
mov
nop
sub
lods
jbe
mov
outsb
dec
dec
ret
sbbb
mov
push
and
push
dec
mov
xchg
mov
jge
sub
frstor
add
sub
inc
push
jnp
jne
lods
cmc
sbb
test
push
lds
add
and
or
stc
imul
pop
or
sub
rcrl
fnstenv
cmp
xor
and
clc
sahf
arpl
adc
movsb
enter
in
in
push
ss
test
push
shll
shr
rcrb
or
add
xchg
js
fbstp
ds
arpl
adc
adc
negb
cs
stos
add
add
sbb
mov
push
mov
jp
pop
in
das
push
incl
and
mov
push
lcall
mov
add
cmpsb
imul
add
in
mov
hlt
outsl
rcll
sbb
or
mov
jle
push
les
lret
xchg
xchg
int3
sahf
xor
bnd
xor
in
shll
jp
jb
cld
frstor
mov
fmull
jns
lret
call
mov
inc
push
mov
pop
xor
enter
out
cmp
in
aas
ljmp
mov
pop
std
insb
push
fs
jecxz
in
repnz
movsl
add
popf
xor
mov
dec
push
jne
xor
lret
mov
lcall
jmp
cmp
inc
xchg
data16
jl
push
push
fisubl
test
mov
lods
aam
pop
push
insl
cld
xchg
hlt
and
mov
add
inc
test
lea
sbb
test
mov
cmpsb
fsubl
sub
adc
jbe
xor
and
ret
sbb
aad
bound
aaa
outsl
lds
add
pop
sbb
movsb
cmp
dec
cmc
shrl
push
jne
sub
scas
cmp
pusha
push
add
dec
pop
cmp
lods
bound
lahf
stc
cmpsl
mov
loopne
pop
add
gs
outsb
pop
dec
inc
or
push
inc
es
and
testl
dec
in
outsl
lcall
movsb
or
iret
mov
mov
jecxz
sub
mov
adc
mov
pop
jo
lcall
jmp
fldcw
loop,pt
mov
test
jns
mov
or
sar
cmp
push
add
loopne
bound
dec
addl
jne
jnp,pn
inc
mov
cwtl
jno
std
psubb
cli
push
loop
test
add
sub
lods
jle
fbstp
push
xchg
out
mov
pop
sub
movsl
pop
push
mov
mov
rcrl
icebp
movsl
cmpl
cmp
jmp
incb
add
scas
inc
das
ret
test
mov
xchg
jl
xlat
dec
ds
mov
outsl
inc
fs
mov
inc
mov
jno
ljmp
mov
iret
cmpsl
cs
out
pop
mov
enter
sub
cmpsl
sub
cmp
dec
subb
lcall
mov
ljmp
out
std
sub
mov
adc
or
daa
sub
jbe
cmp
push
mov
jg
in
lahf
sub
sbb
loope
sti
in
push
cmp
mov
sbb
mov
int
mov
loop
push
pop
addps
out
push
mov
add
das
jp
int3
mov
rclb
sti
pop
pop
jp
lods
pop
xlat
push
sub
or
test
lea
jne
xorb
inc
jp
push
xchg
in
adc
jb
push
push
and
cmp
jb
in
popf
push
sahf
dec
or
xorb
cmp
insb
sbb
les
xor
data16
popf
lea
in
mov
pop
mov
inc
scas
lret
cmp
jmp
orb
jb
in
jle
xor
dec
es
or
jns
dec
sti
dec
mov
dec
insl
xlat
jns
lods
sub
xor
lods
xchg
pop
fcmovnbe
popa
repnz
pop
bound
or
inc
rcrl
cmp
ja
mov
push
pop
cltd
aad
ret
xor
pop
jp
cmp
sbbl
jecxz
repz
xor
adc
fdivrl
mov
mov
adc
outsb
repz
dec
push
add
pop
nop
lea
sub
sarl
call
mov
add
jl
mov
mov
aam
mov
lret
xor
out
ljmp
and
mov
xor
insb
mov
shlb
sahf
xor
call
dec
repnz
xlat
test
lods
andl
out
jae
into
xchg
sahf
jp
cwtl
xor
inc
cmp
jb
mov
mov
dec
xlat
out
sbb
jmp
cmp
jns
inc
push
sti
xchg
add
nop
push
push
lock
imul
roll
call
ficomps
push
and
scas
mov
sub
jge
fsubrs
dec
fsubl
jge
add
hlt
and
subl
aaa
mov
add
and
sbb
mov
adc
sahf
in
incl
outsb
in
cmc
bound
clc
fdivp
push
dec
mov
testb
pop
int3
pop
aam
or
xor
jmp
push
jmp
dec
dec
jo
cld
dec
inc
mov
cli
push
imul
mov
add
or
xlat
jb
or
xchg
dec
movsl
movsl
nop
daa
xlat
les
cmp
mov
test
ret
cwtl
movsb
pop
sub
scas
inc
hlt
hlt
xchg
push
mov
or
xchg
mov
push
xchg
imul
jnp
orb
fcompl
dec
pop
jae
leave
dec
in
cli
ds
loope
insb
sub
andl
nop
and
inc
pop
mov
xor
sub
xor
xchg
xor
imul
fnsave
lret
arpl
jp
cmp
mov
cmp
cmpl
sbb
fldt
movsl
and
inc
push
jae
and
xchg
adc
sub
and
ljmp
rolb
fstps
fisttps
fldpi
sbb
repz
testb
mov
mov
mov
pop
loop
jge
mov
ja
mov
xor
pop
mov
sti
sbb
cmpw
inc
adc
fwait
push
adc
fisubs
push
insb
or
mov
and
and
and
fcomps
or
jecxz
idivl
in
outsl
sbb
arpl
and
pop
mov
cld
sbb
inc
sbb
mov
fdivl
lods
xchg
adc
je
mov
enter
adc
loope
jae
aad
cmpsl
faddp
add
std
ja
add
mov
and
xchg
lds
fistpl
fmuls
aas
lea
and
push
ret
shr
leave
xchg
pop
jmp
ret
lods
es
jbe
jecxz
jne
jle
cmp
shrb
add
incl
or
shr
or
ss
pop
inc
push
idivb
out
mov
mov
stos
adc
lods
sbb
sbb
stos
cmp
notb
xor
mov
fsubl
lret
sub
data16
add
test
push
lea
out
repz
test
jecxz
inc
hlt
push
ljmp
lock
pop
push
cwtl
pusha
aaa
mov
adc
jne
xor
in
movsb
xchg
mov
cmpsb
mov
repz
jl
jbe
mov
mov
xchg
push
cmc
mov
sahf
dec
in
cmpb
nop
lods
cs
cltd
inc
inc
rcr
lock
inc
inc
icebp
sbb
in
inc
ret
adc
pop
mov
sub
outsb
hlt
jge
ljmp
add
jge
add
imul
add
ja
xlat
rep
inc
in
inc
dec
xchg
add
adc
testl
fcomps
mov
jmp
aaa
repnz
sub
in
adc
sti
add
sub
ja
stc
cltd
mov
cwtl
data16
adc
pop
cwtl
jmp
pop
out
lahf
inc
dec
cmp
jmp
lea
inc
daa
aas
jp
scas
pop
mov
cltd
xor
xchg
rclb
pop
movsl
enter
xor
jp
fsubs
xor
or
fistps
pop
inc
push
sbb
mov
sbb
sti
mov
sbb
cltd
mov
aam
xchg
add
sbb
ret
xchg
mov
rclb
pop
aas
int3
icebp
insb
mov
ljmp
sbb
mov
push
push
push
sti
xchg
cmp
sbb
movsl
dec
addr16
mov
mov
add
push
mov
push
insb
daa
and
xchg
and
add
pop
cmp
std
cmpsb
dec
in
mov
fstpl
add
add
iret
outsl
mov
jb
fs
iret
mov
and
mov
add
dec
mov
pop
loope
jl
cmp
cmove
or
sub
clc
repz
cmpsb
in
cltd
mov
cwtl
xchg
mov
lods
ja
push
mov
mov
inc
scas
push
sarb
shrl
cmp
aam
shrl
outsl
cld
and
inc
or
push
jne
xchg
insl
add
cli
and
mov
loope
sub
shll
fwait
mov
flds
jno
loope
lds
push
inc
icebp
cli
dec
lods
popa
lcall
jb
jnp
pop
cmp
aad
or
decb
imulb
inc
cmp
les
pop
sbb
mov
push
mov
cwtl
xor
fcom
mov
jg
cmpb
das
inc
pop
repnz
lods
fdivrs
lret
je
cmpsl
dec
rorl
lret
addr16
adcb
pop
out
mov
stos
dec
mov
ljmp
xor
fimull
adc
cwtl
jp
push
popf
rolb
inc
movsb
and
popa
xor
jne
mov
push
out
jae
sbb
lock
mov
repz
dec
add
xor
insb
adc
or
cmp
shll
xchg
jmp
rorl
into
outsb
and
fdivr
fnstenv
std
sahf
sub
sbb
xchg
dec
cli
xor
aad
lock
lods
std
fnsetpm(287
xchg
ja
les
insl
jg
fsts
add
mov
in
pinsrw
dec
loop
pop
shll
adc
xchg
inc
cmp
push
hlt
ficomps
sub
adcb
push
movsb
sbb
pop
push
cmp
pop
out
sbb
lds
addr16
pop
mov
jp
and
scas
jg
out
mov
xchg
adc
aam
into
and
inc
out
mov
jle
mov
clc
mov
divl
nop
dec
add
stc
xor
pop
fisubrs
inc
out
popf
test
push
comiss
cmp
xchg
xchg
aas
push
and
mov
xchg
pop
scas
out
cmpsb
testb
lcall
loopne
dec
jae
dec
loopne
xchg
inc
sbb
pop
dec
stos
inc
push
xor
sar
stos
dec
xchg
xchg
stos
push
sub
pop
cltd
es
xchg
gs
int
fiadds
ret
leave
scas
aaa
gs
add
fdivrs
xor
gs
sti
inc
pop
leave
pop
jnp
sbbb
shll
out
sbb
sbb
mov
rcll
subl
dec
push
jmp
subl
and
fidivl
pop
aad
dec
xlat
pop
movsb
mov
bnd
sbb
sub
adc
incl
int3
xor
fisubl
push
push
jmp
inc
add
mov
adc
jmp
xor
xor
aaa
into
pop
xchg
ficoms
mov
cmp
xchg
lods
xchg
lcall
and
sbb
ds
sub
jmp
je
sahf
std
mov
js
adc
mov
cltd
ljmp
fistpll
push
int3
mov
pop
std
mov
dec
inc
xor
mov
nop
dec
mov
dec
fidivl
dec
int
inc
mov
pop
orb
inc
xor
or
pop
not
cmpsb
adc
jg
cmpsb
arpl
jge
pop
dec
xchg
push
dec
enter
mov
insl
rclb
imul
jmp
cld
sub
fidivl
fsubl
test
lods
fstenv
dec
mov
icebp
cmpsb
sub
xchg
test
fisubl
or
mov
adc
movsl
rorl
dec
imulb
jnp
push
fcmovbe
rol
pop
fistl
xchg
dec
mull
mov
js
inc
sbb
adc
mov
test
mov
mov
jno
mov
inc
adc
mov
cld
dec
test
sahf
or
gs
pop
lock
aad
stos
in
xchg
xor
jbe
out
xchg
jo
jp
push
mov
adc
sbb
scas
inc
inc
mov
dec
fdivrl
push
push
int
and
hlt
ficoml
jmp
cmp
mov
insb
jecxz
movsl
cltd
sub
adc
adcl
insl
lcall
sub
insb
sbb
push
push
sar
add
inc
mov
pop
stc
cltd
lahf
mov
filds
sub
lds
or
movsl
out
or
and
sub
jmp
jmp
mov
cmp
sbb
inc
pop
insl
inc
out
and
scas
inc
nop
cs
or
dec
cmp
repnz
pop
das
sub
insb
pop
push
pop
dec
ljmp
jp
stos
ret
pop
adc
inc
inc
dec
sti
gs
imul
adc
lock
xchg
add
xchg
add
xor
out
mov
add
add
rorl
sbb
arpl
cmpsb
test
andb
std
xchg
icebp
arpl
test
scas
sbb
nopl
cmc
lds
sbb
mov
adcl
mov
mov
add
and
xchg
fidivl
xchg
scas
aad
fdivrl
xor
add
negl
subl
push
mov
jmp
incb
fistl
mov
pop
in
jbe
pop
cmc
mov
push
xchg
femms
popa
dec
in
lds
push
idivl
pop
cltd
movsb
lods
ret
push
adc
push
push
fmul
cmp
xchg
iret
imul
mov
fisubs
push
push
inc
jp
jmp
stc
fcmovnbe
lock
mov
inc
jbe
addr16
int
test
jae
mov
mov
icebp
iret
sub
cmp
dec
jmp
in
push
icebp
sbb
jo
lret
lret
sbb
lods
cmpsb
ja
leave
mov
pop
mov
push
sbb
sti
xchg
cs
cmp
and
shl
sbb
aam
push
or
dec
loop
xchg
mov
add
sub
stc
in
pop
push
dec
sub
loope
aas
push
cmp
imulb
xchg
jns
popa
nop
push
inc
xchg
inc
scas
push
aam
les
pop
lods
pop
pusha
lret
sbb
pop
stos
les
sub
repz
cmpsb
xor
or
pop
xor
jnp
push
insl
rclw
and
xchg
es
add
push
test
fdivrs
jmp
stc
add
mov
push
ret
outsb
push
xchg
mov
enter
jno
test
sti
andb
jl
loope
lds
dec
mov
mov
pavgw
bound
jne
xchg
push
test
pushl
mov
jns
push
outsl
adc
push
shll
jo
mov
lock
sbb
popf
inc
pop
sahf
xor
sub
pop
cmp
pop
dec
add
clc
test
int
lcall
cmp
adc
test
jge
ds
pop
call
call
ficoml
xor
mov
cmpsb
sbb
stos
in
aaa
inc
lahf
es
fs
pop
xor
or
imul
sbb
scas
aad
jnp
movl
xor
or
jne
lock
sbb
inc
jo
inc
xlat
adc
inc
jns
scas
rol
inc
push
mov
mov
lret
outsb
shl
adcl
jo
mov
push
cmp
xor
sub
pusha
lods
in
ret
shr
iret
jb
or
cs
out
into
enter
sbb
jmp
stos
inc
cmpsb
mov
or
lret
dec
mov
pop
push
push
or
rcrl
mov
addr16
sbb
js
inc
jecxz
jecxz
push
xor
or
mov
movsb
mov
mov
push
ret
push
cmpsl
outsb
mov
sub
lret
bound
daa
dec
pop
jg
fdivs
xchg
cwtl
xor
inc
pushf
shll
jae
loope
out
mov
ret
and
insb
xchg
andb
sub
nop
daa
add
push
scas
aas
mov
pop
in
out
imul
push
data16
fs
sbb
out
cmp
ret
pop
jno
popa
pop
loope
dec
or
mov
push
imul
xchg
pusha
aad
inc
es
repnz
mov
aad
in
jg
pop
jecxz
lea
push
lret
incl
cwtl
xor
pop
mov
push
dec
mov
pop
cmp
xlat
ds
sahf
pusha
stos
cli
int3
out
test
xchg
sub
mov
mov
mov
push
aam
xor
aad
popf
ret
xchg
add
hlt
push
xchg
sub
test
cmp
int
xchg
xor
inc
xchg
push
add
pusha
jb
mov
scas
xchg
out
ret
pop
jo
aad
add
out
xchg
fbld
in
push
xor
adc
cmp
pop
cmp
add
test
push
movsb
lahf
xor
jl
adc
aaa
bound
mov
push
fwait
js
inc
jle
in
jmp
pop
jmp
es
sub
xchg
sbb
shll
notl
stos
sbb
inc
sub
cmp
mov
mov
jne
iret
das
test
jno
test
aam
and
sahf
aad
sbb
cmp
mov
jae
push
fsubr
aaa
jl
insl
pop
mov
fisubrs
rcrb
js
inc
mov
mov
cmpsb
sbb
mov
rol
addb
das
sub
jb
add
jl
stos
arpl
xchg
xchg
in
push
test
mov
dec
loope
push
dec
jecxz
mov
dec
or
jnp
mov
dec
dec
loopne
pusha
fnstsw
mov
push
mov
int3
dec
cmp
dec
mov
mov
pusha
mov
fucom
xchg
sub
cmp
xor
data16
andl
enter
pop
test
jbe
add
and
push
xchg
mov
inc
arpl
xchg
mov
loope
mov
js
mov
ret
xchg
test
push
push
mov
insl
les
jo
clc
neg
jno
mov
and
clc
or
rclb
outsb
mov
cmp
sub
arpl
out
test
adc
xorb
push
pushf
and
fld
test
test
pusha
clc
sub
dec
jg
scas
cmpsl
pusha
or
jae
jne
or
pushf
adc
xchg
popa
sub
jno
ret
xchg
push
jle
int
jnp
dec
lods
jae
mov
and
ljmp
andb
dec
mov
push
cltd
shrb
test
mov
cmp
add
xor
sub
add
xor
push
xchg
xor
dec
dec
rcrl
int
push
lea
mov
lret
test
add
mov
add
sub
mov
addr16
repz
mov
or
or
aaa
add
clc
in
movsl
lahf
sbbb
repz
fisttpll
adc
dec
loope
lcall
movsb
fimull
mov
enter
popa
ret
ror
in
jns
data16
xchg
pushf
call
sbb
cli
or
aaa
arpl
movsl
xor
sbb
mov
sti
faddl
xchg
rcll
dec
xchg
sbb
push
ret
leave
jl
xchg
mov
push
xor
mov
shrl
fcompl
dec
in
in
aas
xchg
std
mov
fisttps
ret
push
gs
push
cwtl
sbb
bound
adc
sbb
mov
push
hlt
adc
sub
cmp
mov
fs
sub
jle
mov
aam
dec
pop
inc
dec
add
xchg
hlt
adc
fsub
aas
pop
jmp
imul
repnz
xor
mov
and
cwtl
sar
add
or
movsb
stos
sub
test
mov
out
add
mov
push
movsb
repnz
popa
enter
add
dec
rcll
test
mov
enter
ret
outsl
test
xchg
mov
and
fs
int3
int3
je
xor
nop
jmp
inc
mov
fs
ja
popa
xor
sbb
xchg
rclb
cltd
shlb
push
adc
lea
out
aam
scas
xor
pop
cmp
add
popa
clc
mov
adc
xlat
jg
and
xchg
mov
or
inc
mov
mov
imul
rep
movsl
daa
jbe
into
loop
stos
pop
out
aam
ja
test
shlb
mov
data16
xor
sbb
add
mov
lds
jns
and
imul
imul
cli
push
and
loope
pop
aad
sbb
push
imul
adc
jns
jp
insb
aad
mov
mov
test
ss
stos
mov
sub
jbe
cmc
xchg
push
pop
pushl
jl
arpl
fwait
ljmp
repnz
sub
fmuls
out
mov
mov
int3
ja
push
icebp
int
mov
fsubrs
lods
ljmp
pushf
jg
jnp
rcr
mov
push
push
xchg
call
rcrb
cmp
mov
jp
or
cmp
xor
fisttpl
sub
outsl
mov
dec
push
and
scas
aam
inc
mov
dec
cmp
cmp
pop
jnp,pt
or
add
movsl
xor
ljmp
movsb
adc
fnstsw
or
sub
scas
ret
in
add
fcoms
jo
and
dec
jo
mov
daa
cld
imul
jb
jmp
loope
inc
fldl
add
shrb
jmp
out
jnp
cmp
imul
mov
bound
fcomip
sbb
pop
adc
and
jl
xchg
pop
daa
or
out
add
cmp
stc
mov
pop
data16
sbb
mov
pusha
negl
movsl
ds
std
add
stos
mov
xor
in
frstor
sub
hlt
stos
fnsave
pop
cmp
inc
dec
in
xchg
into
loope
inc
insb
add
dec
push
jge
mov
jns
mov
sub
push
sbb
fidivl
test
cs
das
mov
sub
stc
or
fstl
sahf
test
inc
xor
jo
mov
and
push
jmp
jge
fbld
jb
mov
addb
sar
cwtl
pop
push
ret
bound
adc
rol
and
notb
sub
mov
sbb
jmp
push
xor
pop
jne
fcompl
adc
das
inc
ret
push
aam
lea
imul
cmpsb
imul
pop
and
pushf
lret
idivb
push
sti
adc
subb
je
dec
dec
insb
outsb
dec
int
mov
fisttpl
outsl
outsl
adc
sbb
mov
dec
pop
fldln2
std
push
ret
pop
xchg
inc
jmp
pop
cmp
dec
dec
and
push
adc
xor
mov
xchg
mov
arpl
xchg
or
add
adc
xchg
or
in
inc
xlat
add
dec
cwtl
add
pushf
gs
negl
or
xchg
adc
enter
mov
jo
insb
jnp
adc
add
inc
jge
dec
xor
adcl
fsub
mov
sahf
out
inc
mov
or
fs
pop
inc
lahf
push
icebp
mov
add
dec
jae
in
sti
lea
mov
or
inc
pop
lcall
jge
outsb
std
jge
cwtl
push
adc
arpl
and
xchg
jl
dec
movsl
jbe
jne
dec
sbb
add
daa
cmp
or
dec
dec
xchg
and
repnz
cmp
in
adc
and
xor
xchg
inc
jle,pt
jo
mov
jge
pushf
outsl
mov
shl
mov
subl
inc
push
jg
or
add
xor
sbb
scas
inc
test
sbb
imul
mov
push
leave
call
test
test
dec
pop
jne
xor
in
gs
or
or
dec
cwtl
js
sbb
jge
out
lock
mov
or
xchg
lods
xchg
lcall
cld
cmc
adc
arpl
sahf
ss
mov
fimull
pop
inc
adc
dec
inc
cwtl
in
jns
aas
gs
sti
adc
fstpt
imul
adc
ret
adc
or
xchg
sub
fwait
mov
sub
fs
or
test
cltd
inc
fcmove
cmp
mov
or
jb
sbb
pop
dec
sbb
sub
jne
lds
mov
sbb
mov
rcll
outsb
inc
or
gs
cmp
adc
into
lock
push
shl
and
cmp
out
pop
ja
inc
dec
pop
push
sub
or
dec
sub
xlat
sub
jp
mov
mov
mov
push
fnstcw
jbe
cli
fdivs
xchg
inc
insl
testl
outsb
rcll
or
adc
in
mov
fnstsw
push
pop
into
arpl
fsubrp
push
test
imul
or
daa
xchg
sbb
and
or
movsb
test
jns
inc
jle
ja
mov
xor
out
pushf
outsl
mov
icebp
xor
popf
cmp
push
jp
jb
out
test
cmpps
or
cs
les
jp
and
pop
adc
out
push
icebp
xlat
outsb
and
leave
cmc
mov
cld
adc
xchg
push
xor
dec
out
std
filds
adc
sub
xlat
mov
add
cwtl
xor
leave
inc
fistpll
or
loope
jmp
test
inc
mov
or
movsb
mov
data16
adc
pop
lahf
xor
mov
add
lret
hlt
mov
nop
pop
add
popa
rolb
sub
out
xchg
xchg
clc
xor
out
pop
xchg
mov
xor
mov
lock
imul
add
mov
lcall
lret
cli
push
adc
loope
outsb
ljmp
mov
pop
inc
fs
sbb
fistps
lods
xchg
xchg
lahf
xor
in
xchg
mov
sbb
lcall
mov
fiadds
mov
pop
add
stos
pop
mov
nop
mov
orb
cmc
xlat
clc
in
lahf
imul
scas
stos
dec
mov
fdivrl
xchg
xlat
sarl
aam
movsb
push
shr
out
sbb
rcl
sub
loop
std
xlat
push
rcrb
cmp
jno
push
sbb
inc
aam
leave
nop
and
idivl
dec
cmp
xlat
dec
push
or
pop
mov
not
mov
sub
adc
js
push
and
inc
inc
divl
out
jg
fsubrs
or
lea
imul
sub
setp
xchg
dec
mov
ja
cmpsl
cs
outsl
add
mov
cltd
add
jge
out
adc
or
jecxz
jbe
mov
ret
inc
adc
mov
test
fcmovnbe
mov
sub
rcr
rclb
ljmp
jb
in
inc
repnz
inc
mov
dec
jno
jl
pop
xchg
xchg
or
or
negl
mov
lock
dec
fadds
pop
fisubrl
cmpps
fdivrs
jnp
jae
cld
test
pop
and
shrl
clc
loopne
jb
into
xor
mov
add
loopne,pt
addr16
repz
loopne
mov
mov
insl
mov
jl
fldenv
push
test
inc
cmp
dec
xchg
jge
mov
jne
sbb
imull
loopne
stos
fwait
pushf
xor
dec
lods
xchg
pop
inc
mov
cmp
gs
cmp
ds
dec
in
dec
sarl
call
ret
rcrb
pusha
rcr
imul
roll
into
out
lret
jle
mov
adc
push
xlat
jb
shlb
push
jmp
adc
std
loope
add
shrb
or
negb
adc
cltd
xor
push
test
mov
push
ret
cmc
cmp
pushf
sarb
fs
popf
adc
push
leave
xor
jne
int
pop
pop
fsubs
and
jmp
ja
cmpb
inc
test
hlt
lret
scas
pushf
dec
mov
and
mov
or
jg
mov
jne
adc
jmp
mov
mov
popa
addr16
pop
adc
mov
aaa
mov
stc
jg
adc
adc
out
jnp
popa
fidivrl
push
arpl
int3
mov
stos
push
sbb
aam
jae
and
fstpt
cmc
mov
aas
push
xchg
incl
lret
fiadds
pop
gs
pushw
xchg
xor
add
je
test
rcrb
in
mov
sub
inc
mov
mov
pusha
call
je
xchg
fnstcw
rcrl
adc
loop
mov
mov
mov
mov
fsubl
mov
bound
xorb
push
lods
aam
jg
cmpsl
cmp
mov
inc
pop
xor
inc
mov
lock
sti
add
sti
inc
cmp
and
cmp
ret
pop
bound
repnz
sbb
adc
stc
mov
xor
inc
jmp
in
pop
outsl
cmp
ljmp
ror
ja
movsl
iret
and
mov
inc
and
cmp
aaa
mov
jle
inc
dec
and
aaa
jmp
dec
into
pushf
cli
aad
cld
loope
jecxz
sbb
push
test
inc
add
into
les
insb
cmc
cmpsb
mov
lea
lock
out
pop
add
sbbl
rorb
mov
mov
jmp
pop
je
dec
or
outsl
and
sub
mov
repz
add
xchg
stc
xchg
outsl
movsb
test
imull
cmp
jo
andl
push
cmc
fmull
in
cli
adc
or
cmp
push
jl
sbb
stc
int3
orb
add
test
and
xor
cld
sub
cli
mov
or
cmp
sbb
xchg
das
add
mov
addr16
push
mov
sub
sbbb
xchg
mov
and
aaa
arpl
jp
pop
dec
inc
fdivrl
lock
sbb
nop
subb
ljmp
fdivrs
fildl
or
sahf
cmp
mov
roll
push
andb
sbb
sub
sub
lcall
aad
shl
dec
mov
sub
std
scas
inc
cmpsl
add
xlat
addr16
loop
mov
fs
aad
xor
loopne
out
into
mov
aam
lahf
lods
ljmp
xchg
jno
inc
fisttps
xchg
jecxz
mov
mov
nop
out
xchg
hlt
cmc
push
jecxz
jo
pop
das
inc
lds
add
cmpsl
rorb
cmp
add
push
cmp
sbb
scas
mov
lods
shl
fisubrs
das
test
in
cmpsb
dec
cld
imul
sub
inc
xlat
xlat
jno
pop
in
std
in
aas
push
pusha
loop
mov
inc
add
cmp
imul
xchg
jmp
into
lahf
push
mov
mov
scas
lods
push
push
fdivp
mov
pusha
mov
inc
in
add
notb
mov
in
clc
aaa
lea
rorl
add
scas
xchg
scas
fs
pop
lds
into
fsubr
pop
outsb
lds
pop
mov
mov
es
jmp
icebp
mov
xor
jl
ficoml
rcrl
scas
push
mov
mov
inc
push
jmp
lret
rcrl
icebp
add
mov
je
rcll
ds
les
and
mov
ret
dec
out
push
inc
pop
xchg
xchg
adc
clc
inc
push
cmp
gs
loopne
pushf
or
data16
es
jae
and
mov
dec
pop
mov
aad
in
loop
push
pop
daa
out
cli
imul
js
or
imul
aad
jg
mov
cli
arpl
fwait
aas
xchg
lahf
jle
and
jge
xor
xor
cmp
lcall
push
decl
add
xor
and
fisubl
repz
jae
push
imul
andb
jne
cmp
repz
push
xchg
mov
cli
scas
inc
sub
int3
arpl
je
scas
xchg
es
fnsave
aam
fbld
xchg
fildl
or
jmp
and
inc
xchg
push
jecxz
cltd
mov
jae
sub
push
jno
ffreep
ret
jl
mov
test
add
gs
les
push
sub
imul
jno
shlb
insb
mov
dec
mov
aad
popf
adc
iret
out
repz
adc
mov
stos
out
test
mov
subb
xchg
out
xchg
outsb
test
rcr
xchg
mov
std
dec
in
jno
add
push
das
pop
add
out
test
into
testl
and
jge
movsl
int
icebp
inc
out
mov
and
cmp
sub
xor
rcl
sub
test
jno
rorl
pop
push
sub
cmp
mov
sbb
sbb
cmp
inc
mov
mov
mov
sarb
xor
out
imul
pop
xorb
movsl
jb
ds
inc
push
adcl
push
aam
push
mov
pop
xor
add
mov
ret
pushl
push
pop
cwtl
stos
jmp
jmp
push
jb
mov
push
and
mov
ret
repz
sbb
clc
dec
popa
pop
lahf
stos
nop
sbb
xchg
ss
mov
mov
aas
pop
inc
sub
xchg
cmp
sbb
xchg
xor
cltd
lods
inc
inc
in
cmp
out
sbb
loopne
insb
pop
fstpt
xchg
xlat
rcrl
addb
add
inc
jno
xor
ss
lock
cli
out
test
push
movsl
push
lret
sti
xor
dec
sti
scas
insb
inc
push
cltd
in
xor
movsb
sub
push
movsb
mov
mov
enter
mov
inc
imul
movsl
xor
pop
scas
add
insb
orb
pop
xor
insb
mov
scas
in
mull
pop
dec
adc
push
mov
ljmp
rcll
rol
add
ja
and
mov
inc
mov
setge
inc
iret
cmpsl
ret
add
adc
sahf
mov
clc
negl
repz
fwait
repnz
jg
mov
dec
sarb
je
hlt
jl
dec
xchg
mov
xchg
fdivrs
mov
stos
sub
pcmpeqw
fwait
push
mov
in
dec
addl
fwait
push
jb
jb
push
aam
jl
aas
adc
loop
add
sti
lock
mov
pop
icebp
movsb
mov
adc
arpl
mov
cwtl
pop
dec
push
ret
xchg
iret
fwait
inc
jecxz
mov
popa
mov
sub
sub
mov
jmp
ljmp
sti
cwtl
xchg
es
jns
pop
push
orl
or
lock
pop
outsb
clc
out
mov
cmp
push
jmp
iret
xor
push
push
or
aas
adc
push
cmc
ret
mov
cli
xor
push
sbb
andb
sbb
jmp
xchg
xor
or
imul
adc
add
pop
add
shrl
xchg
cmpsb
cmp
sbb
mov
xor
aas
mov
dec
lea
les
cld
shlb
add
add
xor
mov
mov
xlat
or
push
and
jne
ss
aaa
push
fistpl
and
jl
in
pop
sahf
mov
lock
mov
inc
adc
lcall
lcall
imul
push
inc
loop
in
addr16
clc
cwtl
and
arpl
addr16
sub
cmp
ret
sub
das
add
pop
bound
mov
sub
dec
dec
daa
pop
outsb
pop
xor
xor
jecxz
dec
repnz
mov
xor
pop
sub
dec
cmp
ficoms
inc
dec
int
sub
arpl
ja
push
cmp
fsubrs
arpl
mov
test
mov
sbb
cmpb
mov
movsl
sub
stos
and
out
jge
scas
mov
mov
sbbl
inc
sti
arpl
jbe
mov
sti
xchg
clc
dec
mov
in
out
cmp
icebp
movsl
and
adc
mov
push
lret
add
shrb
lods
inc
cltd
out
pop
adc
xor
pop
popa
pop
ss
ss
cmpsb
cmc
cmp
es
jno
sarb
sbbb
xor
or
cs
inc
lahf
jae
test
cmpb
mov
loopne
mov
mov
inc
adc
stos
shrl
out
adc
rdtsc
enter
fldt
popa
std
xchg
push
negb
stos
mov
add
cs
or
mov
mov
imul
jns
loop
or
sbb
xchg
jbe,pn
lcall
not
iretw
xor
add
cs
bound
sti
sbbl
sub
push
ljmp
jo
int
dec
fists
aam
fbld
scas
pop
or
inc
ficoms
sbb
insb
outsb
adcl
xor
and
xlat
cld
mov
faddl
push
shll
lock
push
aaa
push
scas
aam
sub
sub
insl
scas
cmpsb
mov
and
sbb
sub
dec
clc
imul
dec
aam
adc
adc
cmp
xchg
scas
mov
add
scas
xor
scas
mov
fidivl
ja
subl
mov
xchg
rcll
lods
daa
lcall
jmp
js
xchg
and
and
stc
jae
inc
pop
jmp
adc
pop
inc
push
add
fidivl
js
scas
and
lret
push
xor
movsb
data16
mov
push
xor
test
lret
ja
cmpsb
inc
or
fimull
rcrb
sbb
cwtl
pop
inc
lea
movsb
push
inc
in
push
test
sbb
mov
xchg
cld
cmp
jae
fldenv
jne
notl
adc
dec
and
jns
imul
pop
ffree
pop
shlb
jge
pop
out
push
arpl
push
lods
arpl
and
popf
xor
sahf
xchg
pavgw
imul
and
ss
lahf
imul
xor
test
push
pop
repz
ds
icebp
out
in
and
popf
fistl
leave
in
and
mov
jp
sbb
daa
mov
pop
jp
pop
imul
adc
xchg
int3
pop
pop
xchg
stos
cwtl
into
pop
pushf
push
mov
je
repz
into
movsl
les
jns
xchg
sbb
lods
cmpsb
dec
and
pusha
int
inc
xchg
add
stc
lods
pop
cmp
sbbl
cmp
mov
mov
pop
out
jo
mov
shll
es
lret
adcb
jmp
lret
inc
mov
xchg
decl
or
xchg
mov
gs
sub
cmp
call
jnp
and
add
out
pop
fdecstp
mov
lock
out
movsl
cmp
add
pop
push
es
pusha
mov
lret
mov
arpl
mov
cs
hlt
pop
jg
ss
cwtl
inc
xchg
imul
aaa
or
cltd
xchg
stos
lret
jecxz
out
rolb
push
sub
fidivl
cld
push
add
mov
into
adc
or
inc
cmp
dec
and
jmp
inc
in
loop
gs
fldt
enter
rolb
adc
mov
pushf
cli
xchg
mov
mov
push
sbb
xchg
and
pop
push
negl
icebp
pop
lock
js
push
jno
lret
fsubs
xchg
sti
push
pop
andl
mov
stos
sub
mov
or
mov
fisttpl
repz
xor
inc
stc
test
cld
nop
mov
out
lea
pop
gs
lea
jle
push
pop
mov
inc
cmpsb
clc
or
pop
std
ljmp
lea
jo
insb
scas
push
jno
jle
pop
enter
push
jmp
mov
jns
fs
and
cmp
in
cmp
cmc
bound
xchg
jo
enter
cmp
lea
orl
outsl
mov
fsubrs
in
out
mov
pop
adcl
in
data16
aam
jge
xchg
inc
mov
cmp
xlat
jne
mov
clc
ja
mov
add
mov
cmc
jge
jno
push
lahf
lret
cld
inc
daa
jecxz
sbb
mov
jns
sbb
loop
jp
fisttpl
dec
pop
inc
cld
lods
stos
jge
cmp
dec
sub
dec
sbb
enter
test
ficoml
addr16
inc
inc
mov
out
int3
lret
dec
xor
xor
mov
cmp
push
loopne
xchg
inc
xor
push
cmp
dec
sub
cmp
cwtl
mull
ja
in
push
mov
xor
ja
in
push
dec
test
dec
mov
cmpsb
mov
xchg
ret
or
push
cmpsb
lahf
repnz
movsb
ljmp
xchg
add
rcrl
sub
pop
push
bound
imul
sbb
or
jne
xor
pop
cmc
insb
xor
mov
mov
and
lret
aam
cld
aad
mov
xchg
ss
data16
ret
cmp
pop
sub
pop
negl
push
das
sbbl
sahf
pop
jmp
leave
movups
xchg
out
jbe
xchg
cld
icebp
enter
mov
lds
xor
xchg
push
add
arpl
or
push
popf
sub
sahf
jmp
push
loop
negl
lods
mov
loope
jp
in
xor
out
or
mov
repz
mov
lds
movsb
dec
jecxz
sub
popf
repnz
adc
pop
mov
push
cwtl
test
add
shll
mov
aam
pop
pop
out
dec
inc
jecxz
cli
in
icebp
and
fldcw
add
ja
popa
add
dec
cmp
and
mov
mulb
mov
jne
cmp
aad
dec
out
test
nop
repz
xchg
incl
xchg
sub
clc
aaa
xchg
push
inc
push
push
lcall
std
mov
and
mov
insl
push
lods
mov
xchg
pause
pushf
data16
cmpsb
mov
divl
mov
ret
cmp
mov
or
adc
scas
add
mov
fwait
adc
ret
sbb
lret
pop
aad
fucomp
push
shlb
pop
inc
jno
cld
cmp
cltd
xchg
adc
addb
jno
popa
loope
and
int
jae
mov
ds
or
push
test
mov
roll
shl
inc
jne
cmp
xor
popa
push
stos
sbb
rsqrtps
mov
jg
loope
enter
shld
push
mov
xlat
push
and
and
das
popa
imull
insl
sar
dec
lcall
cmpsb
les
out
aas
cmp
adc
enter
adc
test
add
stos
test
xor
push
int3
in
inc
gs
int3
and
sbb
sti
pop
lock
add
pop
rorb
clc
loope
in
lds
lret
repz
or
cmpsl
mov
std
inc
xor
out
mov
fs
pop
sar
sbb
test
cmp
cld
and
mov
mov
fisubrl
lods
ljmp
mov
jae
lret
pop
scas
adc
lock
stos
sbb
incl
mov
jle
sub
mov
or
xchg
mov
shll
mov
jmp
dec
jmp
mov
imul
cmp
mov
cli
jmp
test
xchg
setle
aam
jno
sbbb
push
aas
push
pop
aas
in
jno
das
push
sbb
adc
mov
inc
jge
inc
sbb
mov
inc
aad
xchg
out
mov
insb
mov
rcrl
pop
adc
mov
test
sbb
dec
shlb
sbb
cld
dec
push
add
lock
mov
mov
push
arpl
inc
mov
std
push
mov
cmp
cmp
xor
cmp
cmc
ja
stos
mov
and
addb
xor
mov
out
imul
dec
int
es
pop
or
mov
jbe
ljmp
icebp
sub
adcl
in
loop
or
inc
mov
push
fldenv
std
loope
in
jnp
dec
push
xor
lret
lock
jmp
push
sbb
jno
and
push
inc
out
add
jbe
imul
addr16
pop
ljmp
das
mov
lret
xor
scas
das
test
rcrl
mov
xchg
mov
dec
xchg
xchg
cmpsl
pop
adc
aas
out
xor
add
sub
and
add
ret
hlt
enter
lds
fdivrs
jno
sub
stos
inc
ret
imul
aam
xor
jne
adc
rcrb
xlat
add
fwait
out
lods
pop
in
cld
subb
into
aam
subb
scas
inc
add
and
ficoms
and
cmp
lock
inc
fists
lret
fisttpll
out
push
and
popf
fs
cmp
ja
test
cltd
cltd
ud0
cmp
sbb
and
inc
popa
jae
xor
push
jae
lock
jge
std
push
ret
xchg
or
and
in
movlps
dec
cmpsb
mov
dec
mov
pop
stos
inc
sbb
jge
ret
mov
mov
aas
or
mov
xorb
push
out
or
add
or
mov
mov
sbb
pop
mov
cmp
std
push
mov
cmc
and
add
pop
adc
add
adc
std
push
lea
nop
pop
mov
lahf
xchg
cli
ret
mov
xor
div
mov
imul
add
sahf
lods
and
shll
xchg
cs
inc
faddl
jge
sbb
xchg
sbb
mov
test
push
inc
pusha
mov
stos
inc
ss
leave
add
xor
popf
mov
mov
jp
cmp
push
sarl
call
fldt
shrb
pop
mov
imul
mov
psrlq
fsts
into
shll
aaa
xchg
inc
jecxz
inc
into
fcompl
and
xor
out
movsb
xor
pop
mov
les
fiaddl
sub
pop
cltd
jle
iret
scas
pop
in
mov
in
inc
mov
xchg
cmp
stos
jg
adc
push
push
sub
cwtl
lods
mov
leave
xchg
sbb
shlb
fcmovu
xchg
mov
sti
mov
dec
fmuls
into
lea
push
push
sbb
sub
jg
add
mov
inc
xchg
enter
int3
adc
cwtl
pusha
scas
inc
int3
xor
or
rcrl
xor
roll
cmpsl
dec
sub
and
lods
sbb
fstp
aam
shll
stos
pop
int3
mov
xchg
sub
sbb
shl
outsb
imul
stos
inc
push
decb
daa
cmpsl
cmp
or
xor
insl
jnp
mov
scas
into
cmpsl
jl
int3
fdivl
test
lods
std
cwtl
mov
xchg
aam
mov
incb
pop
insb
xchg
jae
push
popf
es
add
in
sub
xchg
xchg
test
jecxz
imul
mov
sahf
pop
jns
cmp
push
int3
arpl
and
out
les
sahf
xchg
lret
jmp
jmp
pop
pushf
lock
cmp
adc
push
inc
rorl
add
mov
mov
pop
cmpsb
cld
mov
sbb
push
pop
daa
sarb
int
insl
stc
mov
and
lret
testl
fcom
sub
and
dec
inc
pushf
xchg
pop
aas
rcl
xor
hlt
pop
jmp
add
mov
fimull
xchg
pop
mov
or
push
add
dec
dec
add
push
cmp
mov
out
jbe
dec
cltd
les
sbb
fsubl
jnp
jo
xchg
sbb
dec
push
mov
mov
test
mov
mov
and
cmp
adc
jle
pop
sub
xchg
push
shrl
dec
mov
stc
in
sub
loope
stos
jnp
scas
repz
xlat
cmpsl
aaa
pop
std
lods
jb
push
mov
cmp
fmull
jbe
insl
pop
pusha
testl
gs
movsl
imul
pushf
or
mov
cmp
xchg
push
mov
xchg
mov
dec
and
xor
jbe
cs
outsl
xlat
add
cwtl
fbstp
xor
cmp
jp
cmp
je
es
loope
sti
repnz
mov
fidivrs
iret
fidivs
mov
mov
popa
clc
shrb
fwait
pop
loope
push
adc
sub
mov
dec
xchg
add
and
or
inc
and
dec
cwtl
mov
aam
inc
mov
xor
fwait
pop
or
and
cld
pop
jnp
or
outsb
mov
sub
dec
fistps
xor
pop
xchg
pop
inc
test
in
mov
rcr
pushf
out
xor
mov
xorl
aad
imul
arpl
test
sbb
ret
xor
add
mov
or
leave
outsl
mov
xchg
dec
fdivp
push
xchg
add
scas
das
pushf
je
cmp
loop
fidivs
movsl
sbbl
xchg
gs
out
mov
add
pushf
xchg
subl
and
shrl
cmp
test
imul
adc
jecxz
pop
cmp
into
loop
jae
out
mov
aas
jp
out
fisubrs
or
ja
loop
push
aam
les
shr
add
test
les
lds
add
shlb
push
negb
add
testl
push
push
inc
cmp
pushf
testl
jo
repz
sbb
js
cmp
call
push
sub
sbb
in
push
testb
push
into
xor
add
mov
pusha
mov
cmpsl
lods
xor
sbb
lds
fcomp
bound
dec
cld
xchg
mov
cltd
test
aad
adc
or
adc
in
mov
test
push
lods
inc
jecxz
sbb
rcrl
sti
ds
xor
jp
push
add
rcrb
arpl
idivl
mov
fisttpl
mov
mov
push
rcll
fucomi
stos
insb
fcomp
sahf
fdivl
push
stos
add
mov
cmp
push
std
xchg
andl
lret
int
add
nop
sub
aas
sarb
sub
cmp
test
cmp
outsl
xchg
and
inc
mov
repnz
sbb
aaa
dec
mov
cld
jo
add
mov
push
inc
outsl
div
adc
mov
shll
mov
lahf
fstl
pusha
scas
inc
xchg
je
jbe
int3
mov
and
cld
xlat
insb
dec
sub
dec
and
icebp
inc
cld
in
lahf
jo
sbb
mov
idivb
and
nop
daa
sub
scas
mov
sbb
clc
js
mov
and
ret
or
lock
aas
or
and
sub
ret
cs
shlb
sbbl
lcall
or
paddusb
notb
xor
push
jle
add
push
sub
es
gs
lahf
cmc
mov
sub
sub
xchg
dec
insb
inc
cli
sbb
sahf
mov
fisubs
mov
push
xchg
bound
pop
daa
mov
addr16
inc
push
call
cmpl
cmp
pushf
xor
xor
dec
sub
xchg
bound
xchg
cmc
mov
ljmp
sahf
xor
loopne
lahf
jbe
fldl2t
pop
ficoms
fiadds
pop
mov
pop
sahf
in
orb
shl
cwtl
shl
xchg
xor
leave
fidivl
cli
or
xchg
mov
fdivs
xlat
jae
out
imul
pop
outsb
rcl
xor
insb
rcll
xor
mov
mov
mov
push
mov
sbbl
adc
jecxz
test
adc
dec
aad
jg
mov
adc
dec
movsl
sub
fnstcw
jo
ret
movsl
out
je
dec
loope
xchg
mulb
push
cmpsl
or
push
mov
cwtl
das
xchg
push
pushf
pop
inc
mov
movsb
mov
mov
mov
fimuls
jl
fs
repz
xchg
repz
inc
cmpsb
jnp
lahf
ds
dec
cmpb
lds
xchg
sbb
jnp
test
cld
insl
mov
and
dec
dec
in
or
or
jb
stos
mov
dec
call
lahf
push
imul
mov
je
sbb
dec
jmp
lock
rorb
lock
aaa
push
adc
mov
js
movsb
jns
mov
enter
cmp
fildll
fisubrl
xorb
adc
pusha
xor
adc
or
mov
pop
inc
gs
in
mov
in
stos
lods
jns
push
pop
je
mov
and
loopne
dec
mov
inc
das
push
enter
int3
loopne
cmp
xchg
ja
ss
push
or
stos
inc
sti
xorb
test
lods
clc
adc
sbb
inc
cmp
repnz
out
lcall
adc
idivl
dec
lcallw
js
fisttps
and
out
outsl
inc
pop
pop
xor
ds
push
xchg
jge
push
add
push
sub
sahf
push
lock
in
cwtl
dec
or
adc
jp
mov
ds
shrl
jo
bound
mov
fwait
and
stos
std
pop
pusha
push
add
enter
mov
fldcw
in
dec
dec
push
add
dec
sbb
sahf
xlat
repz
sbb
gs
js
jge
jmp
stc
nop
imul
scas
xchg
jge
pop
sbb
stos
jnp
cmp
andl
sub
jnp
inc
addr16
pop
dec
mov
mov
jae
pusha
dec
and
sarb
adc
pushf
xor
aam
or
dec
cmc
sub
in
in
popf
push
or
push
xchg
cmp
dec
add
rcll
mov
rol
in
jl
xor
insl
daa
cmp
add
pop
xor
adc
addb
xor
inc
or
push
imul
xchg
jnp
stc
mov
popf
lods
aam
outsl
push
test
adc
outsl
and
mov
sbb
lret
jb
popa
jns
or
or
fistpl
out
mov
jne
jecxz
pop
repz
movsw
in
jmp
jo
fsts
sub
popa
arpl
xchg
pop
and
data16
push
add
push
jno
loope
ret
adc
dec
push
pop
leave
int
iret
mov
add
cld
aad
rcrb
test
sbb
push
jnp
jne
dec
lea
add
pop
lock
or
xchg
repz
fs
fmul
mov
leave
xor
pop
out
push
xlat
dec
fists
jo
test
mov
mov
and
aam
xor
sbb
rcll
xor
sub
mov
outsb
push
mov
das
bound
push
jle
dec
scas
lock
jae
std
aam
and
test
inc
movsl
cmp
push
mov
or
sbb
xchg
scas
xchg
cltd
xchg
pop
inc
repnz
cmp
or
mov
addr16
in
mov
cmp
mov
or
test
ficomps
enter
inc
fisttpl
movsl
out
andb
dec
pushf
dec
dec
stos
jge
push
sbb
inc
arpl
sbb
xor
in
mov
out
jge
leave
fpatan
jl
in
adc
ret
ljmp
popa
mov
pop
jb
inc
imul
das
pop
push
mov
addb
std
mov
sub
cwtl
es
pop
or
imul
xchg
xor
or
mov
dec
and
push
outsl
loope
sbb
dec
pop
cs
adc
pop
cltd
stos
movsl
mov
push
pop
pop
push
ret
lea
mov
push
sub
loope
fwait
imul
mov
xchg
sbb
xchg
xor
jge
mov
in
add
sbb
sti
imul
aam
jno
mov
out
add
inc
cltd
outsb
es
scas
add
mov
stos
or
into
lock
daa
lcall
pop
addr16
sub
repnz
cld
adc
test
ja
mov
sbb
dec
pushf
xor
sti
mov
fstps
mov
sbb
jae
ljmp
arpl
jns
xchg
xor
or
insb
int3
push
push
aad
lea
or
pushf
cmp
jne
fisttps
add
repnz
and
mov
movsb
shlb
shrb
into
push
out
ja
adcb
and
sub
dec
pop
xor
sbb
std
sub
mov
cwtl
add
pop
adc
shrl
cmp
sbb
xchg
jo
in
push
cmp
in
cmp
imul
fsubrl
out
adc
jge
cmp
push
mull
jae
dec
cmp
jne
mov
test
dec
imul
mov
push
adc
pop
dec
adc
fnsave
arpl
dec
xchg
mov
pop
jns
mov
cmp
and
enter
pop
lock
aam
ss
mov
or
cmpsl
sti
cwtl
mov
xchg
das
lock
int
add
mov
lods
inc
sbb
push
lds
not
imul
and
iret
fidivl
das
jnp
insl
mov
cmpsb
clc
les
pop
loope
pop
cmp
pusha
mov
jnp
push
add
addr16
cmp
mov
icebp
xor
in
mov
aad
jmp
insb
inc
mov
js
dec
pop
pop
cltd
jecxz
lret
jnp
cli
insb
popf
cld
or
inc
clc
push
lods
aam
out
out
add
pop
inc
leave
jmp
out
imul
or
and
loopne
cmpsb
push
aad
test
mov
or
sahf
xchg
pop
outsl
lods
iret
loop
bound
pop
sub
pop
or
push
lcall
push
jmp
jae
xlat
sub
sbbb
mov
mul
xor
sub
rolb
xor
pop
mov
lods
dec
mov
popf
pop
push
xchg
sti
pop
idivb
leave
xor
and
stos
call
and
add
pop
push
ja
xor
cmp
xchg
cwtl
test
ret
pop
add
es
pop
ljmp
xor
xchg
mov
pop
sahf
fistpll
inc
pop
jne
mov
cmp
jp
jp
aad
cld
pop
xchg
jno
or
lea
adc
and
dec
std
sti
xlat
and
mov
clc
sub
xchg
ficomps
xchg
dec
rcrb
mov
mov
mov
pop
addr16
cmp
scas
push
mov
cmp
mov
sbb
sahf
dec
add
push
mov
pop
shl
je
daa
jl
cmpl
pop
xchg
cmp
mov
or
jle
xchg
mov
sub
aaa
sbb
addr16
lds
xchg
mov
dec
dec
lret
cli
lods
jp
aad
ja
dec
mulb
mov
faddl
sbb
bndstx
inc
push
mov
sub
addr16
out
xchg
enter
cmp
or
lretw
outsb
push
jb
jo
rclb
insb
dec
jl
pusha
xchg
xor
outsl
insl
xlat
ret
xchg
dec
or
inc
xlat
lret
and
out
mov
es
fdivp
loop
sarb
xchg
aad
lds
mov
cmp
sbb
mov
sarl
fisubrs
out
add
dec
fidivs
out
lcall
lods
dec
and
mov
xlat
dec
or
lcall
cmc
scas
insb
bndldx
or
dec
stc
hlt
cli
cmp
mov
adc
jbe
or
or
sub
sub
pop
dec
cmp
mov
insl
hlt
ja
add
movsb
sbb
movsb
les
mov
fbld
mov
push
addr16
cmp
inc
dec
iret
jecxz
sub
orl
lret
lcall
dec
adc
jns
sub
into
adc
shr
push
insl
in
aam
inc
xchg
add
fildll
jae
lea
sub
xchg
in
push
mov
adc
push
pop
xchg
aaa
fstpl
ljmp
ds
lods
xor
and
pop
add
mov
fstpl
xlat
popf
sbb
orl
and
or
das
xchg
test
jne
pop
call
inc
icebp
repz
jecxz
add
push
push
sbb
pop
jecxz
push
push
ljmp
pop
dec
fstps
out
dec
cmpb
xchg
aas
shlb
xchg
cwtl
fwait
sti
sarl
pop
xchg
ja
jg
xor
xor
call
mov
inc
in
push
push
jmp
int
adc
ss
mov
push
mov
fcomps
popa
scas
push
push
ffree
sbb
cmp
stc
pop
push
mov
and
fisubl
subl
out
cmpsl
iret
xchg
popa
loopne
cmpsb
jecxz
xchg
enter
and
mov
jle
push
jg
dec
pop
cmp
jl
mov
add
test
sti
lock
sti
pop
sub
and
fildll
adc
jge
mov
pop
arpl
sbb
clc
adc
ud0
rcrl
mov
jp
std
sub
mov
roll
movsb
ja
push
scas
scas
test
cld
inc
and
push
dec
mov
shrl
sbb
add
cmp
pop
cmp
xor
hlt
jge
xchg
mov
movsb
test
xchg
push
xchg
push
popf
mov
jne
in
mov
mov
test
imul
mov
shll
xor
imul
inc
cwtl
inc
loopne
out
shll
xor
rorb
jbe
sbb
das
push
xor
fbstp
test
iret
popa
fisubl
sbbb
sbb
adc
adc
mov
xchg
ret
sti
jns
es
mov
jp
xor
aas
std
mov
push
movsl
out
inc
sbb
popa
sbb
xlat
add
jno
jp
cli
cmp
cmpsb
pusha
cmp
dec
mov
adc
mov
add
push
inc
mov
out
sub
adc
inc
in
adc
pusha
or
vpmulhw
push
sbb
roll
inc
imul
mov
jne
push
xor
fldl
in
pop
lret
mov
sub
or
push
and
sub
inc
push
add
shlb
int3
out
dec
cmpsb
inc
in
dec
cmpsb
jp
pop
cmp
in
lcall
mov
cmp
ljmp
sbb
inc
leave
adc
dec
mov
pusha
lock
into
inc
test
fbstp
adcb
jnp
adc
push
xchg
enter
jbe
xchg
push
in
sbbl
push
stos
and
mov
clc
repnz
lods
stos
or
xlat
add
mov
enter
push
lret
fnstsw
inc
sahf
push
mov
xor
repz
push
sbb
inc
sbb
dec
pop
lcall
push
mov
data16
rcrb
pop
popa
int3
cmp
mov
xchg
cmp
jmp
mov
sub
fistps
push
mov
sbb
divb
ljmp
aaa
enter
imul
ljmp
xchg
sub
addl
out
pop
imul
stos
jmp
ret
jle
rcr
lahf
add
dec
mov
mov
mov
dec
into
push
ja
add
out
movsb
mov
in
inc
lret
pop
insl
xor
lds
xor
movsb
stos
cmp
in
xchg
sbb
cmpsb
push
cmp
xor
stos
adc
int3
roll
add
push
ljmp
mov
mov
add
rorb
std
mov
xlat
mov
fs
fmull
mov
lods
sbbb
xor
push
loope
jb
sbb
scas
jo
push
push
or
jl
dec
push
push
movsb
call
pop
or
lcall
dec
sbb
lds
repnz
mov
stos
jbe
scas
xchg
and
xchg
mov
popf
gs
inc
jb
jmp
push
xchg
add
aam
icebp
xlat
bound
adc
es
cmp
mov
repz
gs
sti
dec
iret
fistl
les
push
fldenv
nop
xchg
cli
fsubr
outsb
mov
scas
call
cmp
sbb
jnp
jge
mov
or
mov
sub
mov
movsb
mov
lret
out
jne
and
adc
imul
daa
imul
clc
xor
lret
lock
and
in
lret
adc
movsb
fldt
nop
fldcw
stc
inc
ljmp
mov
jle
push
popa
mov
into
popl
out
int
fwait
xor
sbb
sbb
adc
pop
mov
out
and
jg
mov
jmp
mov
xchg
cmp
xor
mov
into
mov
les
int3
in
mov
push
cs
mov
lret
xchg
add
add
roll
mov
sub
or
mov
pushf
adc
or
out
sbb
aaa
fucomp
imul
fstp
sub
xlat
mov
leave
sub
sbb
dec
push
daa
rorl
inc
add
cs
aaa
into
pop
mov
in
push
inc
xchg
je
pop
cltd
inc
fnstsw
adc
pop
mov
sbb
push
push
cltd
jns
inc
cmp
jmp
sbb
aam
movsb
out
xchg
jle
ficoms
or
sti
jecxz
lods
ljmp
cmp
test
aam
push
in
insl
push
daa
jno
adc
dec
xchg
cmp
fisubrs
int3
bound
mov
notl
cmp
mov
outsl
in
outsl
loop
add
lock
js
dec
and
jo
call
lcall
repnz
xchg
lods
or
push
jo
fsubrp
inc
es
into
xchg
xchg
mov
push
cli
or
mov
cmp
sbb
test
lret
pop
lock
and
fnstcw
sub
movsb
jns
stos
jle
fucom
shlb
adc
push
adc
cmp
adc
hlt
sbb
or
or
and
out
push
jne
ss
jp
je
add
inc
mov
mov
fs
out
mov
rorb
cmpsl
mov
pusha
jne
shl
je
mov
and
jp
cmp
mov
dec
xchg
mov
and
mov
aaa
cltd
sub
adc
insb
push
and
sub
out
in
pop
stos
push
cmpb
cmp
aam
loopne
jmp
jp
jo
jle
stc
adc
lahf
ljmp
xchg
dec
iret
xchg
xchg
cltd
and
stos
push
mov
add
add
push
mov
push
test
fwait
lcall
dec
jbe
jg
notb
test
ret
sub
gs
repz
in
jb
jp
sub
sti
adc
xchg
je
mov
push
dec
out
dec
test
jnp
jno
sub
jns
dec
int3
cli
adc
aam
movsl
icebp
sti
andl
cmp
inc
push
pushf
sti
fisubs
movsb
mov
xor
mov
call
jg
and
scas
inc
push
in
pop
iret
push
sub
bound
push
adc
mov
jne
mov
andb
mov
xchg
jmp
or
xchg
in
pop
iret
adc
in
imul
xchg
xor
fidivrs
subb
loopne
shll
loop
sbb
or
mov
push
ret
add
mov
pushf
pop
int3
arpl
sbbl
mov
jne
xor
mov
sti
mov
xlat
shll
dec
mov
pop
aaa
lahf
ss
fistl
xorl
repnz
push
aam
or
jno
gs
sub
test
dec
comiss
mov
repnz
cmp
movsl
jle
push
push
bound
jle
dec
es
dec
cwtl
test
jmp
scas
cmpsb
pop
out
addr16
push
subb
xchg
mov
xchg
lods
je
pop
mov
enter
inc
mov
fldt
push
lods
and
lea
add
mov
or
mov
mov
add
or
movsb
sahf
jnp
cli
ret
adcb
inc
ficoml
stos
xor
iret
lcall
pop
fnstsw
or
xlat
lretw
xchg
and
popa
cwtl
das
xchg
popa
test
mov
arpl
push
insb
add
jbe
cmp
sub
and
sub
cld
cltd
stos
xchg
leave
fnstcw
inc
pop
scas
jg
adc
iret
ljmp
fstps
faddl
sub
xor
mov
jne
or
ret
sub
dec
aaa
dec
mov
and
out
addr16
push
or
sti
mov
divb
sarb
repz
dec
inc
mov
push
imul
in
aaa
enter
adc
sub
jae
xor
stos
jmp
mov
sbb
mov
insb
adc
int3
sbb
insl
mov
movsb
std
cmp
mov
fwait
cli
or
orl
or
mov
inc
inc
cs
or
pushf
neg
loope
or
jmp
out
cltd
cmc
dec
mov
out
jns
pop
xor
arpl
adc
and
sbb
jle
pop
mov
in
test
and
cli
mov
pusha
xorb
mov
sbbb
popa
jg
movsb
add
inc
xor
int
fisubl
mov
clc
mov
or
enter
movsl
cmp
loop
jecxz
fldt
andb
mov
jle
push
popf
mov
pop
lock
xchg
and
leave
ljmp
and
inc
xlat
repz
pop
sub
add
inc
lret
jns
lret
sub
pop
inc
test
mov
lcall
subl
mov
insb
mov
mov
xor
add
cmp
mov
mov
adc
mov
pop
adc
xchg
xor
and
orb
add
mov
sub
rcrb
scas
xchg
dec
ss
jmp
imul
mov
js
mov
or
jns
shrl
scas
sbb
or
and
shrl
inc
sti
xchg
jbe
repnz
or
mov
cmp
push
rcll
test
inc
lock
cltd
in
inc
push
imul
out
int3
cmpsb
pop
clc
pop
movsl
mov
pop
aaa
push
mov
jge
outsl
insb
stc
inc
pop
xor
mov
clc
lods
out
out
and
push
int
loop
sbb
nop
dec
fisubrl
cmpb
sub
push
fs
shr
xchg
ss
mov
xchg
sub
inc
adcb
xlat
es
movsl
inc
inc
mov
arpl
daa
push
cs
shrl
roll
dec
jmp
or
sub
pusha
mov
xchg
adc
ret
insl
or
push
lea
add
fsubrs
notb
sti
dec
fidivl
cld
inc
dec
das
inc
xchg
in
xchg
adc
xor
inc
push
jo
mov
push
out
ja
mov
xor
push
rorb
jp
aaa
sub
movsl
dec
add
sub
xor
pop
orb
popa
mov
jns
fldt
xorl
std
push
push
jg
lods
cmpsb
mov
and
mov
adc
xchg
shr
out
es
mov
dec
out
mov
imul
iret
inc
lahf
and
shlb
int3
je
pop
sub
imul
loop
or
mov
data16
int
flds
lods
scas
and
sti
jecxz
repz
mov
jle
mull
push
in
mov
stos
jp
mov
jp
int3
fnsave
jae
lds
dec
popf
sub
and
push
pop
hlt
cmp
sbb
xor
xor
mov
push
and
shlb
push
das
popa
movsb
shr
pop
mov
mov
leave
sbbb
or
jb
jae
in
mov
fbstp
imul
jne
jb
jns
or
dec
mov
fbld
add
and
pop
xor
aad
stos
lock
out
dec
mov
ret
xchg
push
insb
xchg
cmp
pop
push
cmp
in
jns
pop
push
ficoml
pushf
sub
out
sbb
pop
ss
xchg
mov
push
in
sbb
mov
inc
cmpsb
out
dec
andl
test
mov
mov
testb
inc
xchg
xor
data16
lcall
push
inc
xchg
sub
xchg
scas
cld
dec
push
loope
push
ret
hlt
adc
and
sbb
sbb
retw
inc
es
cmp
pop
mov
pusha
and
rol
xor
setp
rol
push
jne
out
test
aad
cmp
cmp
and
push
cmpsb
imul
push
mov
test
je
incb
mov
pop
xor
lock
push
testl
icebp
imul
add
add
dec
pop
adc
or
push
shl
add
adc
les
divl
fdivrl
imul
imul
add
cmpsl
adc
ss
cli
out
cmpsl
ja
add
aaa
out
mov
and
loope
lods
mov
mov
pop
test
mov
pop
cmp
sub
inc
mull
mov
ret
add
inc
xlat
scas
icebp
lret
lock
push
cmp
popf
insb
add
inc
sahf
ret
and
icebp
outsl
push
cmc
adc
and
iret
lea
cmc
and
mov
add
or
inc
sti
test
jo
xor
push
cwtl
pop
int3
and
cmc
jge
jp
sub
pop
cmp
das
ret
fs
adc
pushl
add
int3
jge
decb
daa
repnz
es
or
dec
loopne
popa
cld
sahf
test
push
dec
loopne
popa
adc
je
mov
test
lret
xor
mov
stc
mov
test
and
fisubl
ss
cmp
popw
jle
jmp
imul
mov
mov
clc
repnz
dec
daa
sub
sub
push
mov
pop
fisubrs
jge
pop
insb
dec
jns
push
dec
sub
pop
dec
in
pop
loope
xor
gs
or
cmp
xlat
sbb
push
pop
push
out
fbstp
inc
push
hlt
filds
jecxz
fdivs
shlb
clc
mov
lcall
jp
cmpsb
outsb
test
js
sbb
inc
leave
dec
sbb
mov
aaa
sbb
les
sbb
jo
adc
test
cld
adc
inc
pop
xor
cmp
mov
int3
sbb
mov
sbb
scas
gs
arpl
shrl
test
sbb
sub
cmpsl
cmp
adc
cli
out
stos
fnstsw
add
push
in
sub
push
adc
test
adc
mov
arpl
icebp
and
lods
pop
cmp
inc
aad
mov
cmpsb
cmp
andb
cmc
and
mov
xor
mov
mov
inc
mov
mov
cmp
out
ret
ljmp
push
js
mov
adc
je
dec
push
push
xchg
scas
lret
dec
subl
shr
fsubr
insw
jb
or
test
scas
xchg
sub
pop
jmp
inc
adc
cmp
xor
mov
jno
mov
mov
out
inc
hlt
mov
fildll
xor
pop
gs
lahf
fiaddl
and
cmc
sbb
in
bound
daa
ss
loope
lcall
outsb
pop
aaa
clc
sahf
in
xchg
movsb
cmp
mov
aam
mov
out
pusha
divl
xor
aas
sarl
adc
enter
movsb
mov
stos
add
lret
enter
clc
loopne
mov
andb
jle
pop
das
dec
mov
add
xor
sahf
in
icebp
push
es
test
inc
xor
stos
loopne
pop
das
add
xor
mov
lahf
adcl
xchg
shll
fidivl
shll
push
mov
mov
and
cmp
out
add
xchg
leave
jns
pop
mov
pop
mov
aam
jnp
xchg
cmp
lahf
cld
lcall
fs
dec
pop
fnsave
sub
repz
push
mov
cmp
pop
inc
pop
xchg
mov
dec
leave
lret
outsb
and
pop
dec
inc
flds
lock
jmp
lahf
sub
ljmp
adc
test
fs
lahf
xchg
in
insl
shl
or
in
xchg
test
ret
js
out
sti
cmp
xor
push
pushl
jmp
rcl
stos
jecxz
push
mov
push
xor
jb
cmp
fidivrs
add
mov
push
xor
cmp
xchg
rcrl
nop
out
jae
pop
mov
sarl
push
jmp
mov
test
dec
adc
mov
js
hlt
mov
adc
rcr
cmp
jnp
mov
push
jno
xchg
cmp
push
jecxz
pop
movsl
scas
shll
lods
cltd
rclb
lret
pop
aam
fsubrp
movsl
pop
sahf
pop
cwtl
sub
push
xchg
scas
inc
or
mov
es
dec
fwait
cwtl
dec
js
dec
xor
xchg
add
and
repz
inc
push
cli
pushf
outsl
sbb
push
mov
push
pop
cmp
pop
insb
cmp
lock
mov
push
cmc
jle
test
pop
sub
xchg
xor
xchg
shll
cwtl
push
out
xchg
popa
fidivl
xor
outsl
repz
cwtl
out
mov
mov
inc
lcall
mov
or
rorb
add
mov
sub
xchg
aas
pop
test
xor
lds
add
out
cs
mov
insl
insb
pop
nop
add
xchg
lds
adc
stos
mov
jnp
jnp
not
ret
lods
sub
sbb
mov
call
push
xor
ret
stc
pop
xor
and
sbb
mov
jmp
stos
add
add
inc
mov
leave
mov
loop
imul
xchg
xchg
push
repz
inc
push
and
mov
bound
push
ljmp
insb
add
xchg
fsubrp
psllw
add
idivb
mov
add
dec
lds
lods
pop
stos
mov
popf
or
andl
out
jnp
xchg
cmp
mov
sbb
lahf
cs
aad
aas
add
cmp
jmp
inc
mov
leave
shlb
pushf
xor
xchg
inc
push
mov
movsl
cwtl
ljmp
mov
cs
leave
dec
inc
fidivrl
cmp
pop
stc
aad
stos
cmp
xchg
outsb
pop
and
mov
leave
loopne
je
push
or
inc
aad
push
mov
cld
mov
ret
xor
cmp
fnstsw
pop
es
aaa
or
cmp
stc
mov
pop
add
stc
jmp
and
jl
cmp
loope
bnd
daa
shrl
dec
mov
and
mov
add
jnp
xor
fwait
inc
and
pop
shr
cmp
cmp
icebp
inc
fsts
mov
xor
sub
loopne
adc
xchg
jno
int
push
mov
xchg
pop
dec
ja
cmp
add
incl
mov
rcrl
mov
mov
scas
sahf
sbb
push
jp
ss
adc
mov
add
mov
lahf
mov
notl
pop
jl
fwait
lods
jle
bound
add
addr16
pop
pop
pop
fwait
jg
movsb
dec
adc
or
mov
push
pop
nop
shrb
jno
adc
fldenv
mov
jle
inc
mov
dec
mov
sub
mov
aam
mov
mov
fsubrs
sahf
andl
insl
ljmp
mov
out
lock
inc
sbbb
ja
sub
test
insb
call
mov
dec
xchg
inc
inc
cs
shlb
dec
jge
idivl
stos
scas
sbb
jb
nop
jmp
fidivs
repz
and
mov
xor
sbb
pop
rorb
loope
jbe
and
repz
jp
popa
rorb
mov
push
dec
rol
scas
jae
push
sbb
in
fists
mov
sarb
jecxz
push
les
mov
sbb
jge
xchg
mov
xor
imul
repnz
pop
pop
xchg
push
mov
mov
xchg
insl
xchg
pushf
je
out
mov
and
rorl
icebp
lods
out
xchg
jmp
jbe
out
sub
into
insb
out
mov
sbb
inc
jnp
gs
adc
sub
movsl
xchg
movsb
fisttpll
sub
pop
and
ja
inc
push
lds
mov
ds
filds
dec
xor
lea
add
sub
jl
adc
or
faddp
ret
jbe
mov
xchg
and
arpl
decb
enter
pop
es
jnp
mov
loopne
xor
clc
stos
cmpsb
loope
xor
mov
inc
pop
icebp
mov
pop
sahf
xor
insb
add
cmpsl
mov
fnsave
out
push
add
nop
fldcw
ds
lods
inc
imul
cltd
add
notl
or
push
ljmp
lock
add
mov
fcmovbe
std
mov
sbb
adc
jbe
fucom
sub
sbb
sub
jg
mov
addl
or
xchg
jle
jl
dec
adc
add
dec
sti
mov
shl
subps
iret
jbe
fcmovnbe
mov
cmp
push
in
mov
mov
cld
jnp
xchg
or
sub
sub
icebp
and
sub
insl
inc
or
jnp
movsl
jl
xchg
in
or
jmp
aas
or
fwait
das
cs
pop
push
and
pop
std
pop
outsb
stos
jne
popa
cmpsl
int3
cmc
xchg
fsubs
push
xchg
stos
ret
push
pop
xlat
cmpsl
mov
scas
sub
sbb
sbb
mov
push
sahf
fstp
jge
cmp
in
lret
repnz
xor
push
sub
xchg
cs
mov
pop
pop
mov
xchg
fcmovne
mov
test
ljmp
decl
movsl
popf
mov
push
xor
push
pop
adc
popa
pop
lahf
sbb
and
ror
xchg
leave
loop
loope
mov
pop
mov
mov
mov
test
mov
pop
mov
sub
mov
mov
push
cmc
adc
xchg
shl
jp
lcall
push
movsl
jp
cmpsb
xor
adc
call
push
int3
jae
or
aaa
mov
bound
mov
cmc
out
dec
dec
adc
and
sti
lea
xchg
call
and
into
dec
xchg
aad
in
pop
pop
add
in
icebp
cmp
pop
mov
push
cmp
movl
sbb
cmp
lea
mov
fisttps
sub
xchg
push
jecxz
je
sbb
mov
mov
loopne
mov
nop
sahf
addr16
in
add
js
cs
imul
or
cmp
bound
and
mov
addr16
jg
and
push
sbb
les
lods
ret
bound
pop
push
sub
in
mov
lea
sbb
outsl
jg
or
test
jmp
mov
cltd
cmp
dec
jo
inc
mov
outsb
sbb
sbb
lock
out
or
inc
push
sbb
ret
gs
sahf
and
stos
xchg
aas
mov
mov
dec
and
xor
xchg
sub
shrl
in
bound
push
add
jb
mov
or
add
scas
mov
pop
cmp
mov
adc
xchg
mov
push
das
movb
adc
ljmp
or
mov
sub
scas
inc
in
fwait
xor
cwtl
mov
inc
hlt
mov
rcrl
mov
mov
pop
lds
shlb
mov
dec
sub
push
jo
push
daa
fmuls
fildl
ficomps
xchg
adc
dec
stc
movsl
mov
xor
adc
nop
pop
and
mov
call
xor
push
lods
push
loopne
lods
push
lret
enter
adc
js
pop
stc
call
pop
stos
lret
incb
inc
xchg
scas
mov
push
in
subl
rorl
mov
sbb
mov
testl
jge
int3
outsb
xchg
push
repnz
popa
stc
mov
jb
inc
fwait
xor
pop
lahf
lahf
push
cwtl
movsb
xor
push
inc
mov
shrl
lret
jge
popa
in
jb
inc
pop
and
mov
sbb
and
adc
ret
jge
std
out
lods
call
mov
jle
sub
push
faddp
hlt
xchg
enter
loop
push
ljmp
cmp
popa
fmul
or
das
mov
cmpsl
inc
and
xor
jl
push
sub
icebp
or
mov
push
inc
pop
add
pop
mov
inc
add
out
sub
or
mov
ret
push
mov
loop
cmp
sub
adc
loop
push
jb
adc
xlat
mov
mov
cmp
enter
lock
rclb
mov
imul
sbb
in
xor
mov
das
fwait
jo
push
push
xor
sub
es
dec
add
insl
xor
dec
adc
xchg
pop
lea
sub
clc
daa
xchg
stc
frstor
xor
insb
mov
cmpb
sar
adc
sbb
jp
stos
pop
push
inc
dec
lods
ljmp
lock
ss
rcl
pusha
xor
cltd
lcall
add
xchg
fdivs
call
xor
rep
je
mov
cmp
mov
outsb
cmp
xor
pop
icebp
movsb
dec
lea
arpl
shrl
add
xchg
cmp
lcall
push
sub
out
mov
mov
pushf
pusha
dec
add
and
testb
popf
mov
and
lea
mov
cmp
sahf
imul
add
enter
aas
cmpsb
mov
rol
push
xchg
scas
ficoml
out
inc
outsl
pusha
nop
lds
mov
out
push
cmp
ficoms
std
shll
pusha
setle
out
xchg
sub
pop
pop
or
stos
insb
scas
sub
pop
icebp
aam
mov
or
dec
sbb
sub
divb
fidivs
cwtl
pop
mov
cmc
leave
or
adc
test
xchg
lret
pop
lret
lods
mov
aad
mov
adc
mov
pop
repnz
xchg
scas
sbb
jns
fidivl
icebp
mov
cmp
loop
mov
insl
mov
ret
pop
nop
das
pop
in
jnp
daa
sub
and
cld
mov
sahf
mov
pop
adc
push
dec
rol
arpl
addl
inc
fcomp
inc
xor
jecxz
fisubrl
dec
jecxz
fwait
jbe
mov
or
mov
xchg
sti
adc
mov
int3
cmp
scas
cwtl
pop
push
decl
push
mov
mov
mov
mov
jmp
cmp
enter
push
xchg
mov
and
jo
and
mov
arpl
orl
dec
dec
cltd
hlt
mov
jo
lock
cmp
mov
xrelease
aam
mov
repz
js,pn
xchg
ret
mov
int
dec
and
imul
fldenv
and
or
lods
adc
xchg
imul
mov
mov
test
inc
clc
loop
stos
arpl
pop
xchg
lret
cmp
cwtl
cwtl
insl
clc
push
pop
sbb
jns
inc
pop
hlt
mov
gs
je
hlt
jbe
mov
adc
rcrb
and
dec
pop
push
adc
mov
push
mov
movsb
cmp
xor
mov
mov
popa
ret
lcall
std
inc
inc
andb
mov
mul
mov
ss
test
push
xchg
divl
jns
stos
dec
fisubrs
pop
lea
push
sbb
sub
dec
out
sbb
and
dec
inc
mov
dec
loope
mov
cli
out
scas
in
cmp
in
push
sbb
cwtl
cmpsb
jns
loope
or
add
xor
sarb
and
sbb
out
xchg
insl
xchg
inc
mov
fs
fldpi
add
xchg
mov
rclb
dec
pop
cmp
sub
negb
sbb
shl
pop
in
fcomps
xor
mov
adc
popf
fsubrp
mov
fldt
mov
add
push
ljmp
and
dec
in
sub
cmp
mov
or
mov
cmp
cli
pop
sbb
sbb
mov
lods
imulb
rcll
or
push
and
add
mov
les
push
mov
out
cmp
xchg
jle
jbe
andl
scas
pop
pop
int
inc
ja
mov
xchg
dec
cmp
mov
ja
lock
leave
mov
pop
icebp
add
negl
cmc
lods
in
xchg
clc
fnstenv
jle
cmp
xchg
or
shlb
mov
in
xchg
add
clc
xchg
aaa
push
mov
sbb
bound
and
push
inc
or
decb
xor
cmp
xor
mov
pushf
lret
push
dec
mov
das
cmp
pop
adcl
test
mov
pop
loop
fisubs
push
cmp
push
push
xor
xchg
dec
test
or
fidivrs
pop
adc
sbb
sahf
arpl
in
sbb
sub
jl
call
xor
out
stc
cwtl
push
xor
dec
dec
xlat
push
std
les
dec
lods
and
lret
popa
mov
pusha
cmc
aas
sbb
mov
enter
popf
je
es
xchg
and
xchg
mov
add
scas
and
push
dec
and
mov
mov
mov
cmp
stc
les
movsb
leave
sub
leave
sbb
inc
leave
mov
push
mov
movsb
xabort
mov
adc
fisttpl
test
sub
mov
pop
jmp
jns,pt
push
iret
out
into
jne
fs
nop
cli
dec
sahf
es
add
mov
aam
lcall
insb
inc
pop
pop
dec
lret
or
dec
call
or
mov
add
mov
aaa
hlt
in
add
out
add
fldt
inc
cmpsl
in
aad
leave
mov
xchg
popf
hlt
iret
cmpb
out
mov
push
loop
ja
cmpsb
sbb
cld
xor
jg
dec
int3
jg
inc
imul
push
dec
leave
push
das
call
and
jo
and
lahf
adcb
dec
cmp
push
loop
xor
add
sbb
fstl
in
movsl
inc
scas
aaa
fstpt
test
cmp
inc
stos
outsb
insb
rcll
inc
popa
insb
mov
mov
cmp
sbbl
dec
cmc
mov
sbb
mov
xchg
dec
iret
imul
adc
bound
inc
mov
xor
adc
or
push
xchg
arpl
dec
sub
fpatan
add
cmp
cltd
mov
daa
mov
sub
and
lcall
mov
and
andb
push
rcrl
ljmp
rol
jl
sti
mov
and
pop
xchg
mov
outsb
into
adc
jle
int3
addr16
leave
dec
je
inc
xor
dec
sahf
enter
or
jmp
ljmp
lret
mov
fildll
dec
arpl
mov
scas
mov
andb
aad
stos
push
je
push
sub
jp
test
repnz
sub
or
jmp
fst
adc
jnp
ljmp
mov
orl
fcomps
jne
lock
loope
pop
xchg
inc
push
lds
inc
jg
mov
iret
dec
cmpsl
pushf
aad
xchg
jns
sbb
mov
adc
repz
cmp
jne
repnz
pop
ss
pop
mov
pop
and
inc
repnz
xor
inc
xor
jl
arpl
push
imul
and
cmp
xchg
in
xchg
push
xchg
adc
ss
lahf
jl
sub
leave
mov
sahf
jno
cmp
es
dec
in
daa
lahf
addr16
push
dec
aaa
cmpsl
xor
xchg
add
xchg
data16
cmp
std
orl
orl
pop
adc
inc
push
pop
add
movsl
cmpsl
pop
hlt
lock
fwait
jne
rolb
out
push
push
in
push
dec
adc
int
arpl
sbb
mov
in
inc
jae
inc
fbld
mov
int3
jbe
sub
in
xchg
imulb
cmpsl
mov
or
inc
dec
fs
xchg
xchg
jle
mov
loope
xchg
sbb
xorl
mov
mov
cmp
adc
jno
push
xchg
hlt
or
lret
jo
xchg
hlt
rcr
ret
push
scas
jl
sub
cltd
loope
je
cmp
add
xchg
push
movsl
push
out
aad
and
push
jbe
sbb
inc
test
mov
jg
xchg
fwait
je
int
cli
int3
gs
sarl
insb
add
mov
xchg
mov
icebp
aam
jl
xchg
cld
js
cs
push
xor
push
cwtl
rorb
fs
jb
cmpl
stc
push
or
nop
decl
daa
xor
or
push
dec
fdivrl
aad
icebp
jns
out
cli
lods
arpl
mov
cwtl
pop
push
pop
push
inc
rorb
inc
pop
aas
aaa
dec
pop
insb
and
inc
jg
push
cs
daa
push
sub
lds
add
mov
pop
jno
mov
test
cmc
jno
ror
push
cmpsl
push
cmp
push
lea
sarb
sahf
fsubr
int
xlat
scas
std
adc
bound
cmpsb
pop
adc
xor
lahf
lods
or
idivb
out
push
inc
nop
sub
ret
enter
hlt
movsb
cmp
add
pop
fidivrl
fcompl
lret
pop
or
in
cli
xchg
mov
les
add
xchg
test
sub
inc
jns
js
jo
or
lea
sub
mov
push
sahf
push
stos
push
mov
or
outsl
push
lcall
and
xor
je
cmpsw
xchg
jno
loop
cmp
lock
dec
mov
fcomps
mov
xchg
stos
xchg
or
stc
sub
or
push
cmpsl
mov
pusha
or
lahf
js
mov
jmp
jmp
xchg
and
push
cmp
cmp
sbb
or
push
test
imul
dec
sub
mov
and
pop
test
sub
test
add
adc
inc
faddl
outsb
stc
mov
adc
xchg
and
lcall
push
push
loope
mov
cwtl
and
aam
pop
test
int
push
into
pop
enter
psubsb
shlb
mov
out
test
loope
out
push
push
test
xchg
fisubl
add
mov
imul
push
lock
into
push
push
fisubrl
cmpsl
cmp
adc
xchg
gs
cs
shll
cwtl
jne
push
sub
inc
stos
cwtl
incb
stc
daa
mov
jecxz
sti
into
mov
movsl
push
add
iret
mov
sub
adc
cltd
mov
stos
js,pn
mov
pop
or
add
xor
cwtl
gs
adc
pop
sub
xor
in
stc
jg
cmovge
fwait
dec
in
mov
or
loopne
test
mov
xchg
lods
inc
pop
xor
add
sub
int3
add
xlat
std
stos
mov
mov
inc
mov
xchg
pop
mov
pushf
mov
sbbl
xchg
mov
scas
mov
push
fnstsw
arpl
or
cmp
test
test
scas
ja
repz
pop
pusha
adcb
jns
dec
addr16
and
into
inc
cmpsl
int
daa
mov
inc
js
notl
into
enter
mov
xchg
and
xor
in
add
lcall
mov
adc
jae
push
in
lcall
mov
movsb
cmp
mov
jge
sar
jae
nop
aaa
loope
mov
pop
pop
xchg
lods
xor
xor
jg
out
mov
sahf
xchg
mov
xor
addb
roll
pusha
xchg
popf
xor
jo
cmpsl
hlt
pop
sub
cli
xchg
es
pop
sub
outsl
testb
cld
sbb
or
lds
lea
xchg
popf
imul
call
pop
stc
cld
enter
adc
push
loopne
xchg
lods
add
outsl
lret
add
adc
pop
jmp
xor
jnp
lock
and
cmp
jnp
int3
lret
or
mov
add
fiaddl
and
pop
scas
jp
lret
jnp
fs
or
int
popf
sbbl
sub
xchg
pop
mov
dec
jle
rorb
push
jns
shrl
mov
xor
sbb
movsl
in
mov
addr16
fimuls
and
adc
mov
mov
leave
cs
std
js
repnz
cli
test
imul
jae
mov
cmp
add
inc
push
dec
mov
sub
add
and
std
nop
push
enter
mov
push
jp
jmp
out
and
pop
sub
cs
gs
sub
push
iret
adc
test
pop
scas
inc
int3
jns
cwtl
ds
mov
xor
sbb
adcl
int
sub
push
clc
push
mov
push
xor
test
sbb
imul
xchg
je
adc
movsl
cmp
and
jb
bound
mov
aad
inc
addr16
hlt
popa
mov
sahf
cmpb
and
xor
test
arpl
pop
jo
sbb
jae
fstpl
adc
jb
stos
jo
les
or
and
stos
mov
in
int3
add
int3
lods
and
pop
leave
ds
loopne
loop
pop
jmp
mov
xor
pop
jecxz
popf
scas
xlat
ljmp
cmp
mov
cmp
shrl
hlt
or
xor
push
in
push
cwtl
js
das
test
lret
call
mov
lock
cmpsl
ds
add
xlat
mov
cmc
sahf
test
mov
pop
sub
xchg
addr16
pop
xor
lret
push
sahf
jmp
sub
ss
and
mov
fs
repz
jbe
mov
stos
xchg
fidivrs
movsb
jae
add
test
inc
fidivl
leave
sub
push
ljmp
call
mov
insb
or
mov
cmpsl
xchg
sub
xchg
push
divl
sarl
gs
and
out
pop
test
sbb
sub
movsb
cmp
ret
scas
movsb
ret
iret
rcl
lret
jg
arpl
mov
shl
pop
dec
pop
cmp
cmp
cmc
jmp
mov
movsb
and
std
js
leave
xor
mov
push
mov
fildl
inc
dec
scas
adc
pop
and
les
jae
xchg
addr16
mov
nop
fldl
or
inc
fsubrs
adc
pop
fucom
push
jno
xchg
and
sbb
call
mov
sbb
call
in
insb
hlt
xchg
inc
les
loope
pop
sti
add
loopne
adc
or
xchg
loope
or
jl
lret
sub
scas
dec
shll
xchg
jbe
push
fmulp
das
loopne
std
sbb
jmp
cmpsl
xor
sahf
dec
cmpsb
push
adc
sahf
xor
xor
in
push
pop
push
pop
push
cmc
arpl
inc
xor
cmpb
mov
mov
ja
add
cmp
in
adc
sub
daa
cltd
test
jnp
aam
add
ljmp
jb
outsl
mov
in
test
push
sti
arpl
sarl
sahf
xor
cs
xchg
sbb
dec
dec
push
lcall
jge
dec
scas
test
out
ffree
pop
movups
test
sbb
out
mov
add
mulb
push
mov
fsubr
shr
outsb
sbb
cmp
aam
push
je
push
cmpsb
cmp
fsubrs
add
jae
movsb
fldcw
xchg
mov
sub
fbld
ret
bound
test
sub
inc
cltd
dec
mov
xor
mov
fnsave
shl
add
iret
mov
mov
mov
test
xchg
xor
popf
inc
addr16
mov
test
in
pop
flds
or
mov
adc
xchg
cld
lcall
in
jnp
add
arpl
rorl
sbb
jp
push
mov
adc
dec
add
mov
or
dec
push
jmp
sub
push
cmp
and
sbb
test
sub
inc
sub
and
inc
xchg
call
ficoms
and
ret
jbe
pop
mov
js
add
jno
fisubs
mov
inc
cmpsl
popa
xor
out
aas
push
ljmp
addr16
fbstp
fs
push
test
movsb
xchg
mov
popf
nop
mov
mov
hlt
data16
lret
sub
pop
add
loop
pop
adc
pop
cmp
push
fwait
jmp
ds
cwtl
xchg
inc
test
iret
push
pop
jle
iret
rolb
sub
inc
pop
loopne
rcr
sbb
stos
or
ss
lods
inc
test
xchg
testb
dec
fsts
jb
inc
cmp
sub
gs
dec
mov
sub
repnz
pop
cmp
stos
push
into
jae
dec
pusha
dec
lods
stos
add
sub
jnp
fwait
outsl
iret
ja
stos
or
shrb
or
scas
daa
cmp
jbe
jae
imul
data16
mov
mov
jg
fimull
fcmovnbe
aam
ljmp
pushf
out
mov
popa
mov
pop
jmp
push
adc
push
pop
inc
adc
lret
adc
and
stc
adc
push
outsb
aaa
pop
pop
jle
ljmp
dec
cmc
or
test
ja
mov
cmp
loope
mov
les
hlt
xchg
xchg
cmp
fildll
xchg
sbb
and
sub
sahf
in
jo
dec
mov
fcomi
sbb
movsl
icebp
sub
add
fldenv
mov
test
iret
fbld
xor
jge
dec
cmp
ds
stc
adc
and
push
aaa
fmul
inc
dec
jne
in
fwait
mov
jbe
jbe
arpl
xchg
icebp
cmp
push
aaa
pop
adcl
ljmp
pop
shl
cld
pop
iret
cmpsb
jae
mov
adc
fstpt
push
xlat
jb
mov
insl
mov
mov
cmpsb
imul
repnz
sbb
xchg
mov
add
mov
fldcw
movsl
icebp
enter
or
adc
popa
je
xchg
test
fcomi
jmp
push
sub
fistps
into
fnstenv
out
cld
ret
and
dec
stos
filds
sbb
jne
pop
mov
adc
sbb
or
sub
outsl
inc
dec
jl,pn
out
fsub
lods
or
add
add
fisttpll
leave
int
inc
pop
cmp
lret
or
fs
in
stos
scas
shlb
mov
imul
nop
jl
xor
movsb
cmp
xor
jmp
sub
xor
shl
ss
sti
loop
movsl
or
loop
or
mov
clc
add
or
repz
push
std
cli
mov
sbb
test
test
push
lea
cmp
aam
sbb
adc
cwtl
int
or
pop
push
out
jge
add
inc
xor
or
mov
andl
jns
cmpb
and
pop
leave
fwait
mov
mov
ret
mov
rcrl
fnsave
icebp
mov
aas
cmp
clc
test
push
arpl
xor
data16
mov
stos
mov
cs
adc
dec
mov
xor
loop
sbb
je
xor
daa
pop
and
adc
cli
int
in
dec
pop
mov
mov
lods
js
push
adc
test
lret
dec
dec
repz
mov
and
adcl
push
pop
filds
ljmp
lds
loop
and
mov
fldt
pop
dec
loopne
mov
cmpsl
in
stos
addr16
xorl
mov
sbbb
mov
aam
stc
inc
dec
or
mov
in
pushf
pop
in
mov
mov
or
pop
gs
mov
fdivs
push
pop
lods
adc
mov
pop
leave
cwtl
icebp
lds
jl
pop
jl
aaa
loop
adc
dec
sbbb
stc
sti
jp
sahf
pop
mov
fstl
inc
pop
imul
push
repnz
daa
mov
pop
xor
fisubrs
xor
cltd
xor
rol
ljmp
jae
insb
in
cmp
xchg
pop
imul
es
or
out
adc
loope
inc
scas
outsl
and
shrl
mov
lcall
and
mov
mov
mov
cmc
dec
sub
lods
xchg
jl
sbb
xor
sub
mov
les
lods
ret
add
daa
mov
sahf
js
cwtl
dec
push
xchg
sahf
rorb
and
pop
push
sub
arpl
cmp
sbb
das
pop
sbb
icebp
pop
fs
mov
popf
decl
dec
sti
xchg
jl
or
xchg
push
sbb
fidivl
mov
xchg
insl
pop
inc
cmp
sbb
mov
dec
cmc
jne
adc
dec
mov
xor
xchg
adc
rorb
push
and
jg
add
push
lret
push
inc
ret
sub
xchg
mov
jecxz
mov
dec
out
out
sbb
inc
fsubr
lcall
jne
in
andl
or
js
int
sbbl
jle
lret
out
xchg
fildl
nop
xor
std
test
push
jmp
sub
jb
mov
int3
scas
scas
or
push
hlt
es
sub
mov
idivl
in
sti
adcb
mov
out
andl
and
loop
aas
push
jo
outsb
push
inc
sbb
mov
sbb
stos
mov
adc
leave
bound
push
dec
inc
js
mov
movsb
cwtl
test
test
mov
popa
and
mov
xor
jno
dec
mov
mov
sub
rol
jp
fxch
pop
and
divl
fisttpll
fmul
cmp
or
lock
aas
inc
pop
insb
sub
xor
push
mov
cmpsb
mull
push
arpl
das
fisttpll
shll
pop
add
mov
pop
lods
loop
push
inc
dec
pop
cmc
insl
cwtl
das
cmp
fsubrs
pop
int3
enter
sahf
cmp
mov
push
inc
imul
lcall
push
xchg
in
movsb
cmp
test
sahf
ficoml
cmc
mov
es
mov
fists
leave
imul
cmp
and
sahf
mov
fisubs
sbbl
lret
bound
into
out
xor
xchg
icebp
sbb
decb
scas
fcmovnu
pop
and
cmp
popf
insl
add
push
adc
push
mov
imul
inc
add
bound
in
enter
jb
cmp
xchg
pop
int3
imul
and
pushl
loope
adc
js
js
cli
mov
adcb
hlt
dec
mov
jnp
lds
xchg
xchg
xlat
outsb
or
mov
push
mov
scas
iret
xchg
mov
sti
xlat
mov
repz
ficomps
ds
mov
lcall
inc
out
or
adc
sub
jg
or
cmc
sbb
sub
inc
lods
mov
lea
add
jmp
jmp
xchg
dec
push
gs
sbb
dec
or
push
xor
cli
int
scas
test
xchg
lret
mov
inc
cmp
rep
jg
jnp
bound
es
pop
sub
jbe
movsl
push
pop
movsl
pop
fwait
out
rol
xchg
stc
mov
fdivl
icebp
daa
jge
adc
sbb
rcrb
shlb
push
xor
adcl
out
add
jmp
mov
fcompl
jb
insl
xchg
mov
gs
dec
inc
lret
lret
jmp
out
gs
adc
cmp
lods
mov
repnz
jmp
incl
les
jno
or
adc
mov
daa
dec
imul
add
jns
mov
movsl
int3
push
ja
xchg
loope
lods
pop
aaa
nop
sub
mov
js
sub
sahf
sbb
testl
das
mov
cmp
jns
mov
push
or
sbb
push
mov
dec
cs
add
sbb
cwtl
out
imul
stc
lahf
pop
fxch
xchg
lock
or
sub
shrl
mov
xchg
pmaddwd
cmp
and
dec
sub
xchg
leave
mov
add
add
stos
sub
xor
bound
out
or
daa
orb
mov
out
cmc
push
push
ja
inc
push
lea
push
cs
xor
ret
dec
out
pop
mov
cmp
outsb
stos
fs
pop
cmp
in
pop
cmp
in
cld
xchg
aaa
push
xchg
cltd
xor
xor
xor
jge
push
jecxz
test
cld
push
dec
sbb
push
lcall
sbb
mov
addr16
stos
push
add
imul
push
call
inc
pop
dec
movsl
cmc
pop
push
jo
repz
adcb
or
xchg
pop
xor
aas
xchg
daa
mov
add
adc
dec
fs
stc
in
mov
ret
sbbl
lds
and
shll
fs
mov
xchg
jp
mov
mov
std
inc
rcrb
inc
push
sbb
imul
xor
outsl
outsl
in
xchg
jmp
clc
mov
xor
pop
sub
arpl
mov
movl
xchg
or
test
lcall
in
adc
shrb
xchg
xor
movl
in
inc
or
cwtl
sbb
push
stc
shrl
mov
push
cmp
cltd
ret
outsb
repz
bound
xor
sbb
push
data16
and
add
fs
cs
inc
popa
mov
mov
je
stos
sub
push
fadds
jbe
ror
mov
fwait
notl
aas
cmp
jns
pop
ljmp
mov
mov
add
add
lahf
mov
or
fisubrl
xchg
fs
aam
pop
push
out
into
sahf
pop
xchg
mov
in
into
fsubrp
sub
shrl
pusha
sbbb
pop
xor
loopne
in
sbb
pop
in
mov
mov
std
cmpsb
or
popa
push
imul
stc
stc
adc
mov
lret
iret
in
rcrl
and
sbb
ds
jmp
mov
pop
bound
and
int
outsb
arpl
mov
mov
cmp
frstor
push
fs
test
add
addb
sbb
and
scas
mov
je
mov
sbb
js
out
lea
shrl
jmp
sub
jne
lret
dec
sbb
mov
out
and
sbb
int3
mov
aad
ss
pop
mov
pusha
dec
movsb
loop
inc
idivw
lock
ds
jge
mov
and
out
divb
dec
loope
fidivs
add
ret
stos
dec
jg
jl
dec
shlb
lret
cmp
dec
cmpsb
jmp
popf
sbb
int
sahf
mov
stos
jecxz
pop
in
sub
and
mov
sub
js
lods
sbb
aaa
sbb
mulb
inc
mov
cld
mov
lds
xor
in
mov
cmc
xchg
cmpsb
pop
xorl
inc
xlat
mov
adc
sub
mov
xor
adc
enter
fwait
jmp
jo
mov
loop
call
add
outsb
add
addl
sub
pop
push
pusha
jae
add
lea
cmp
ja
dec
ss
mov
xchg
in
jle
lahf
ret
and
cli
or
dec
jo
sub
daa
mov
push
inc
clc
imul
adc
inc
fistl
fdivrp
inc
cmpsb
sbb
ficoml
lea
andl
jno
cmp
sub
or
add
sarb
or
nop
arpl
xchg
mov
sbb
pop
sahf
pop
pop
or
mov
adc
out
fnstcw
push
pop
stos
jp
rolb
je
aad
das
pop
or
mov
jecxz
outsl
push
or
test
or
lea
inc
dec
dec
cmp
out
fadds
push
jmp
jae
pop
xor
jb
adc
das
cmp
loopne
push
pop
in
in
mov
scas
jecxz
fnsave
movsb
or
pusha
sub
mov
cmp
cmpl
push
jle
shrb
es
mov
jge
mov
repz
push
sub
sbb
sub
inc
sbb
mov
fidivrl
or
push
in
or
pop
hlt
add
into
mov
iret
mov
test
daa
fwait
jge
cmp
insb
jl
jp
mov
movsb
das
mov
sbb
cmc
mov
push
inc
and
dec
mov
mov
jb
add
jno
cmp
loopne
mov
and
and
in
lods
push
add
call
mov
adc
in
cli
mov
or
mov
jecxz
fwait
out
inc
out
inc
dec
repnz
movb
ss
push
scas
mov
shrb
or
es
cmp
leave
lahf
push
adc
test
xor
adc
and
or
inc
mov
scas
mov
stc
cmp
popf
xor
inc
jp
fsubrs
in
in
cs
orb
sahf
mov
test
push
mov
dec
sahf
mov
pushf
sbb
adc
xchg
aas
push
fistps
push
cwtl
jnp
iret
sub
add
stc
rcrl
stos
arpl
mov
cmp
sar
jmp
mov
ss
lret
mov
fidivl
clc
add
and
dec
cmp
fisubrl
mov
aam
xor
add
pop
sar
sahf
xchg
jno
aaa
mov
xchg
jmp
inc
lods
cmp
fsubr
fnstenv
push
aad
insb
cmpsl
sbb
xor
loop
lret
bound
enter
add
pop
mov
into
inc
scas
js
loop
inc
cwtl
fnstenv
imul
xor
orl
cmp
icebp
jmp
into
xchg
mov
push
pop
pushf
and
add
popa
iret
jo
or
mul
fstpl
push
nop
ja
cmpsb
mov
mov
push
jbe
jl
sub
pop
mov
push
stos
push
push
push
pop
inc
fcos
xchg
fcoms
iret
jbe
jne
push
fwait
jb
mov
mov
fstpt
dec
out
shl
js
js
mov
cmp
les
maxps
addr16
cmp
sbbb
or
ljmp
jp
movsl
out
shl
fwait
mov
add
popa
arpl
or
mov
xchg
ret
xchg
cmpsb
mov
fsubr
push
mov
jbe
fadds
lahf
shll
lahf
negb
pop
push
mov
sbb
push
cmp
movl
pop
mov
cmp
in
and
mov
xchg
fdivl
mov
mov
xchg
mov
adc
fdivs
cld
pushf
mov
dec
push
jo
pushf
xor
out
scas
push
cmp
out
mov
ret
rcrb
insl
in
cs
dec
dec
imul
inc
loop
stc
adc
cs
shlb
loope
add
mov
mov
push
sbb
adc
stos
outsb
xor
shlb
adc
and
push
cs
fisttps
scas
cwtl
sbb
fwait
mov
jns
bound
adc
sub
ret
push
and
mov
imul
imul
push
inc
test
sahf
xlat
int3
fcoml
clc
jbe
rclb
or
rorb
inc
cmp
add
cmc
inc
cltd
ret
jb
stos
mov
or
iret
mov
iret
cli
xchg
push
lods
adc
movsl
cmp
jge
pushf
sub
jle
mov
fucom
scas
inc
add
or
int3
repz
and
rcl
movsb
mov
mov
addb
fistps
mov
stos
mov
sti
pop
repz
pop
xchg
int
jp
pusha
aas
jnp
out
inc
outsb
mov
mov
outsb
add
jne
or
mull
sbb
cs
aas
cmpb
and
aad
add
movsl
xchg
ja
adc
dec
out
jg
dec
mov
mov
or
mov
pop
cmp
mov
movsb
mov
pusha
js
int3
test
fwait
xor
mov
stc
dec
out
mov
add
cmp
and
lods
push
mov
notl
push
sbb
fisubrs
mov
shll
inc
sub
or
ret
fucomp
hlt
inc
movsb
js
push
jo
sbb
inc
sbb
sub
xor
mov
sub
mov
dec
lret
pop
dec
add
mov
mov
dec
lea
dec
icebp
out
arpl
fdivs
inc
pop
xor
cmp
xor
xchg
mov
adc
push
or
mov
inc
frstor
les
pop
fsubrs
add
add
mov
loop
adc
sub
pop
imul
jecxz
negb
mov
xor
dec
in
lahf
ret
cmpsb
lea
mov
and
icebp
aaa
rcl
xor
loope
inc
push
add
popa
int
sbb
leave
dec
jle
lea
adc
cmc
sub
sbb
inc
loop
add
xchg
dec
jne
mov
sbb
scas
lods
sub
and
xchg
sbb
mov
in
adc
xor
sahf
push
mov
pop
mov
sub
es
addr16
ljmp
mov
popf
repz
push
mov
or
jge
jae
popa
xchg
mov
shll
xor
fistpl
je
jne
xchg
loopne
mov
imul
pop
jg
sbb
xchg
xor
or
shlb
push
and
sub
mov
add
lods
cltd
repnz
cmp
xor
testl
add
sbb
mov
sbb
dec
js
shll
xchg
sub
xchg
das
adc
mov
int3
std
dec
jns
jmp
cmc
mov
fldcw
test
scas
inc
cmp
ret
pop
push
pop
add
xor
xor
jl
dec
lcall
scas
pop
mov
in
rorl
lods
mov
push
or
inc
ret
stc
rcl
pushf
mov
shrb
mov
out
fisubl
push
lds
outsb
jmp
or
nop
lahf
and
push
mov
cmpsl
aas
dec
cmp
mov
and
xchg
inc
roll
out
stos
fucomip
mov
or
shr
xor
fldcw
sahf
or
push
notb
adc
jae
jne
jo
in
cld
add
push
sbb
inc
js
enter
popa
ljmp
add
sbb
sbb
dec
cmp
mov
mov
loopne
dec
js
mov
mov
or
push
lods
cmpsl
or
call
mov
shll
std
add
mov
push
pop
inc
pop
aad
xor
cli
cltd
xor
shlb
add
mov
mov
cmc
adc
nop
jns
sub
xchg
push
jae
push
test
sub
icebp
mov
mov
cmc
test
push
jno
adc
ss
push
dec
sbb
loope
dec
cmp
mov
aad
pop
rolb
pop
jo
mov
jne
test
filds
loopne
dec
std
mov
loop
pop
clc
loop
outsl
je
ljmp
sub
pop
lock
inc
das
lea
bound
int3
jnp
mov
sub
popf
pushf
outsl
andl
mov
fldt
mov
jno
push
enter
jg
sbb
mov
push
mov
jge
ds
fsts
sbb
mov
jbe
sub
sbb
push
ret
pushf
lcall
jns
ds
cs
aaa
sbb
hlt
dec
jecxz
dec
mov
mov
icebp
gs
test
xor
incl
add
adc
inc
lret
jae
dec
out
lahf
sbb
jge
xor
inc
add
add
adc
xchg
xchg
std
fistps
sub
test
cmpsb
inc
add
testb
movsb
test
inc
xor
jno
repz
cmpsb
or
ret
adc
fsubrs
cmovl
sarl
inc
cmp
lds
insl
push
jmp
push
and
std
dec
imul
shll
push
add
in
repnz
add
shll
pop
pop
jp
xchg
clc
jmp
lcall
icebp
rcl
mov
cmp
fstpl
xchg
sub
sub
iret
pop
adc
out
pop
repnz
add
bound
sbb
mov
fcmovnbe
cmc
or
jo
mov
idivl
sbbl
jmp
out
ljmp
cltd
es
idivb
inc
lods
sbb
test
sub
add
fsts
shll
cmp
push
pop
iret
je
int
cli
outsb
jge
dec
and
cmp
pop
mov
leave
inc
gs
dec
out
or
daa
jl
sub
aam
jno
or
int3
ror
inc
or
xchg
xor
aad
les
dec
cmpsb
lock
and
loopne
jno
mov
test
ret
cld
xchg
fwait
push
sahf
outsl
sahf
sub
popf
sub
pop
loopne
sub
xchg
pop
call
mov
dec
mov
mov
outsl
sub
idiv
test
out
push
loopne
jnp
push
sar
div
movsb
inc
sbb
rcr
jnp
test
test
and
pop
insl
insl
sbbl
mov
push
lret
add
dec
in
jb
fdivs
and
dec
pop
cmp
mov
mov
mov
mov
ja
gs
cwtl
sarb
sti
cmp
loope
xchg
mov
push
repz
stos
xchg
sbb
xor
aaa
sbb
stc
or
insl
test
int3
fnsave
mov
add
insb
fstpl
adc
push
lret
outsb
push
pushf
cmp
push
cmpsb
cmp
sbb
fcoml
cmpsb
popa
mov
daa
fisttpll
cmp
dec
mov
add
movsl
pop
addr16
inc
dec
mov
lods
out
scas
push
loope
xor
sub
mov
mov
jo
fwait
int3
pop
cmp
pop
cwtl
shrb
inc
fucomp
jp
adc
dec
loope
inc
testb
push
xchg
xchg
movsl
add
sbb
push
ss
and
outsl
adc
adc
jns
inc
fldcw
inc
int
lret
jnp
push
test
pop
adc
cltd
xchg
sbb
pop
dec
push
scas
xor
loopne
push
neg
jne
sub
andb
push
push
imul
cmpsb
xor
ljmp
adc
xchg
jbe
aad
push
sub
pop
insl
cmp
outsb
aad
cmc
rorb
cmp
cmp
cmp
nop
lods
cltd
lret
arpl
pop
push
popa
notb
lret
mov
in
inc
or
xchg
in
in
cmp
mov
cld
push
fsts
mov
lods
push
std
xchg
dec
xchg
dec
push
fisubrl
loope
mov
mov
push
adcb
in
mov
sbb
das
cmp
sbb
cs
jae
sahf
dec
lock
mov
ja
sub
aas
pop
dec
dec
sti
fimull
das
push
ss
cli
and
cmp
scas
push
mov
ret
xlat
mov
rcl
jp
or
lods
fwait
jo
inc
fxch
jne
ljmp
addl
and
push
out
fists
cli
pop
icebp
mov
or
and
ret
jbe
inc
ljmp
sbb
std
fadds
xlat
dec
scas
or
push
xor
out
iret
pop
sti
and
mov
cmp
das
lods
jmp
mov
frstor
sti
push
test
or
sub
adc
sub
adc
mov
mov
flds
ja
icebp
and
rolb
shl
cmp
out
arpl
lcall
jp
push
sub
xchg
mov
adc
mov
shl
imul
ss
jl
popf
loope
test
xor
ja
push
pop
or
shrb
xor
mov
and
shll
adc
dec
add
das
repz
inc
aam
xchg
cmp
lahf
jl
sub
cmpsl
repz
adcl
jecxz
pop
fstpt
popf
dec
lret
aaa
sub
pop
mov
les
dec
loopne
out
sti
cmpsl
ret
pushl
push
mov
lods
push
mov
cmp
stc
call
movsb
in
movsl
mov
mov
or
mov
fstps
add
pop
mov
pusha
outsb
inc
sub
push
or
je
pop
ljmp
push
xchg
inc
pusha
repz
js
cltd
fucomip
int3
jp
aaa
data16
and
mov
test
lds
and
inc
push
in
out
add
popa
test
int3
jecxz
in
jle
mov
sbb
insb
shlb
push
add
insb
incb
mov
mov
and
dec
ror
insl
sti
out
pop
popa
xchg
hlt
sub
xchg
inc
daa
jbe
jecxz,pt
out
adc
inc
jl
mov
push
lahf
inc
inc
nop
xchg
add
int
add
hlt
add
add
pushf
add
mov
aad
xchg
sbb
hlt
jg
shll
pushf
lods
rcrl
addr16
outsl
es
fstpt
lds
cld
insl
sub
pop
push
inc
xlat
sub
data16
cwtl
mov
pop
je
pushf
idivl
adcb
jbe
mov
jbe
hlt
xchg
imul
dec
inc
or
adc
pushf
xor
xor
aas
dec
imul
lret
xchg
jae
sbb
jns
adcl
inc
ret
rep
jae
mov
fsts
pusha
arpl
ss
imul
xlat
loop
push
adc
sbb
cmp
lock
cmpsb
or
addr16
pushf
mov
aam
aad
mov
mov
ret
pop
push
pop
out
les
pop
ljmp
jecxz
dec
xchg
int
std
arpl
inc
leave
sbb
sub
push
add
cmp
and
cltd
sbb
fldl
push
in
lods
loop
stc
adc
adcb
mov
jo
xchg
xchg
add
es
es
sbb
inc
ss
fwait
in
mov
lahf
out
repz
inc
xchg
push
mov
cmpb
adc
jnp
pop
jmp
inc
sbb
jmp
push
ss
xchg
sbb
ss
nop
dec
cmp
mov
minps
bound
icebp
jmp
call
xor
or
and
lret
add
jp
dec
add
out
imul
negb
dec
mov
mov
jo
xchg
sbb
fwait
jmp
mov
dec
imul
push
iret
xchg
mov
xchg
icebp
mov
mov
mov
push
fwait
jbe
xor
sub
pop
das
int
inc
sahf
repnz
out
frstor
adc
push
out
out
push
fdivs
fidivl
mov
add
jb
jge
inc
lock
int3
sub
je
add
test
sub
std
gs
xchg
addl
jno
shrb
xlat
int3
sub
into
aas
add
mov
lret
jbe
insb
pop
popa
adc
mov
pop
mov
das
fwait
es
jle
or
ljmp
or
push
push
in
pop
aad
lock
lods
push
lea
and
inc
mov
jmp
pop
xchg
or
into
inc
or
into
jmp
mov
pusha
insl
es
in
mov
inc
ds
mov
dec
addl
jne
mov
jns
call
inc
dec
fwait
dec
mov
and
cwtl
icebp
movsl
cwtl
jb
pop
lock
adc
pushf
fld1
dec
in
jne
sbb
mov
push
dec
sbb
stc
jp
lahf
nop
mov
push
and
jbe
test
sahf
add
push
adc
sarl
iret
popa
jnp
mov
ret
mov
out
fwait
push
mov
test
mov
das
jle
pop
mov
sahf
push
arpl
mov
loopne
add
test
mov
push
push
fstpl
xchg
or
dec
mov
jg
jge
aam
push
jnp
xchg
adc
lods
push
adc
pop
cmp
scas
sbb
or
cmpsl
fs
out
addr16
xor
js
sbb
push
add
movhps
xor
call
int
iret
divb
xor
popw
outsl
js
loop
into
and
dec
nop
inc
fadd
jg
int
mov
inc
mov
fcoms
jns
mov
icebp
jg
pop
jb
aam
lock
adc
and
cmpsl
ret
cmpsb
pushf
out
mov
xchg
fdivs
fistpll
sbb
xchg
and
scas
addr16
inc
sbb
scas
loop
adc
cmc
dec
les
push
pushf
jmp
cmpsl
int3
inc
std
jae
jge
jge
mov
inc
insl
jecxz
inc
jmp
in
inc
movsl
cmp
callw
xor
xlat
bound
push
sub
mov
jns
jle
fsubs
out
push
pop
stos
inc
fdivrl
xor
mov
jnp
iret
in
mov
mov
in
xor
iret
jecxz
push
lds
in
mov
in
cmp
rcrb
add
mov
xor
test
jnp
stos
add
dec
push
lcall
fs
popa
xor
jg
sbb
or
lea
jb
dec
cwtl
dec
ss
mov
push
mov
push
xchg
mov
scas
hlt
xor
mov
in
mov
negb
sahf
lods
inc
mov
pop
lret
jne
imull
cmp
imul
pop
ljmp
lahf
or
lock
cmp
stos
cmp
call
rcrl
dec
and
fbstp
push
add
cld
dec
fists
pushf
mov
jb
jns
push
push
inc
cmp
xor
ret
ret
push
dec
dec
push
out
jo
adc
sub
dec
scas
mov
mov
lret
adc
rcrl
mov
idivl
mov
iret
xchg
stos
pushl
jge
xor
iret
sub
sbb
cltd
mulb
mov
fists
call
add
outsl
daa
imul
sub
icebp
movsl
jno
and
xchg
pop
ds
lds
fmul
out
dec
and
dec
fisubrl
fcomps
mov
pop
imul
pop
in
cmp
jge
dec
in
scas
std
sbb
pop
fdivs
std
jmp
cmp
inc
leave
mov
lret
sahf
mov
jg
pop
fbstp
pop
add
mov
and
mov
rclb
jmp
ja
xor
jno
das
mov
adc
pop
jp
push
adc
jbe
es
je
mov
pop
in
inc
pop
out
shrl
cmp
cmp
add
movq
push
inc
fsubrs
push
sub
jp
pop
iret
cld
ds
ja
jl
mov
test
xchg
lret
xchg
pop
xchg
jmp
cmp
mov
sbb
out
out
adc
cmp
inc
sub
subl
leave
aad
shrb
testl
jo
cmp
push
mov
mov
movsl
fbstp
adc
inc
mov
into
das
jb
xchg
sub
mov
add
icebp
cmpsb
dec
jecxz
adc
shlb
jno
pop
fwait
lods
xchg
aas
add
fdivs
jne
pop
cmc
test
shrl
ret
insl
icebp
mov
jns
ja
lods
fwait
aas
pop
les
outsb
jge
lret
mov
scas
aaa
clc
xchg
add
cmp
hlt
test
xor
fimuls
inc
shlb
in
xor
mov
test
lret
mov
mov
ljmp
mov
movsl
cmp
hlt
cmp
in
xchg
aam
clc
mov
pop
mov
push
mov
adc
ret
sub
stos
loope
sbb
stos
mov
shrl
sub
jnp
mov
imul
xchg
ret
push
call
inc
test
je
ret
adc
iret
test
subl
mov
lret
aaa
subl
stos
push
inc
test
xchg
sub
sub
lahf
imul
test
or
dec
sahf
test
sub
bound
xchg
outsb
cmpb
daa
xlat
cwtl
xor
mov
dec
loop
adc
lock
xor
push
push
push
lock
mov
inc
aaa
xor
test
mov
insl
and
cmc
mov
xor
mov
stos
jae
mov
push
mov
xor
in
jmp
insb
and
push
out
dec
mov
inc
add
push
sbb
lret
xor
repz
repnz
repz
inc
inc
xor
or
test
stos
cmp
ljmp
jbe
or
aam
mov
push
ret
jnp
mov
out
jle
mov
xchg
fmull
push
push
jnp
bnd
fwait
icebp
es
sbb
mov
inc
sahf
cs
xlat
mov
jbe
cmp
call
iret
jg
add
ss
push
fs
cmp
jo
xlat
rclb
xchg
loope
mov
mov
cmp
leave
jecxz
xor
add
adc
pop
idivb
jnp
andl
jmp
popf
xor
sbb
and
scas
push
ficomps
sbb
inc
cmp
adc
ljmp
lods
sub
pop
push
sbb
fs
ljmp
sbb
and
adc
jge
mov
sub
add
scas
or
aas
adc
pop
les
out
cmp
mov
into
xchg
or
cmp
xor
inc
adc
repz
in
test
mov
inc
cmp
cli
ss
ljmp
test
repz
cltd
inc
cs
or
in
lods
outsb
sub
jg
mov
divb
outsl
pushf
cwtl
pushf
sti
arpl
in
shl
mov
push
clc
cld
test
fwait
xor
shrb
cmpl
sub
cmpsl
dec
cmp
cmpsl
jp
dec
mov
je
push
sub
sbb
lods
sub
mov
std
dec
xor
cmp
pop
add
repnz
push
dec
fstl
insl
mov
inc
add
cmpsb
cmc
in
dec
fwait
sti
pushf
cltd
xchg
mov
mov
cmp
test
inc
fstps
dec
leave
jmp
dec
pusha
idivl
or
ds
jecxz
pop
idiv
and
cltd
inc
sbb
pop
lret
xchg
lods
cmc
xor
sub
inc
pop
and
sub
cwtl
scas
dec
jns
add
push
sub
stos
ror
pop
insb
dec
loope
jl
jmp
hlt
rorl
imul
outsl
lret
jns
int
dec
pop
shl
sub
subps
mov
stos
cmc
aas
push
hlt
arpl
mov
push
sub
dec
jbe
insl
cmp
orb
jle
sbb
xchg
out
dec
lods
jo
rcrb
imul
les
loopne
out
sbb
imul
in
insl
pop
push
xchg
lods
xchg
mov
ficoml
mov
lea
inc
push
xor
stos
hlt
push
jmp
outsb
sub
lahf
in
mov
movsb
js
fisubl
mov
jno
dec
mov
testl
leavew
sbb
outsb
inc
insb
jle
imul
outsl
adc
mov
dec
mov
sub
dec
push
mov
and
test
cmp
movsl
das
stos
add
ds
sbb
sbb
adc
mov
mov
out
dec
stc
adc
adc
out
in
jmp
pop
xor
xor
jl
xor
cltd
ja
mov
and
push
add
jns
lret
xchg
decl
or
mov
pop
sub
xor
andb
mov
gs
pop
jl
outsl
movsl
jns
dec
mov
out
adc
cmovno
cmc
mov
loope
inc
push
push
mov
push
mov
jl
call
mov
in
mov
insl
scas
pop
or
jle
inc
movntq
sbbl
stos
adcb
loop
mov
fldt
mov
sbb
dec
dec
and
ljmp
pusha
mov
xchg
ret
xor
sub
sbb
push
les
pusha
bnd
lret
cs
adc
cmp
sbb
test
mov
arpl
pop
jge
enter
mov
mov
jb
fs
insb
lcall
aaa
bound
pop
lcall
inc
rcll
mov
fwait
xlat
das
add
lods
dec
push
xchg
repz
cmp
ret
pop
rclb
loope
and
jnp
sbb
cltd
jbe
pushf
xor
sbb
dec
mov
loopne
push
adc
lret
adc
mov
fnsave
xor
std
pop
adc
aad
fnsave
xor
jns
adc
ficoml
xor
stos
bound
test
mov
gs
lret
rcll
outsl
push
mov
pop
addb
mov
out
cmpsl
cld
nop
fwait
pop
test
dec
add
mov
or
push
push
push
mov
es
stos
loopne
into
cmp
pop
lock
push
movsb
aas
cmp
addr16
negb
jo
leave
cli
sub
sub
outsb
push
pop
fwait
bound
cmp
cmp
inc
push
xor
dec
ljmp
movsb
adc
or
enter
int
stos
out
jle
flds
pop
movsb
mov
inc
jo
and
jmp
push
jl
jns
dec
stc
pop
dec
ret
enter
pop
loope
jbe
in
xor
testl
subb
adc
div
test
xchg
jmp
sub
pop
push
fmuls
cmp
lret
xchg
test
adc
shrb
mov
xchg
je
lret
scas
xchg
sbb
mov
addr16
jle
lea
add
outsl
jns
or
inc
xchg
ss
and
data16
ja
push
andb
cmp
imul
out
pop
jmp
mov
icebp
mov
xchg
cli
popf
psrad
fisubrs
push
or
fisttpl
pop
cltd
imul
in
or
test
adc
or
mov
xor
ljmp
pop
cmp
in
and
iret
mov
xor
mov
add
push
sarl
stos
mov
out
divb
jbe
inc
movsb
iret
loop
ja
sbb
push
call
pop
nop
andb
pslld
ds
cmpsl
dec
pop
std
mov
and
inc
push
les
adc
stos
cmp
jecxz
dec
push
push
js
mov
pop
dec
pop
ljmp
push
sub
mov
int3
outsl
jecxz
cmp
insl
adc
lret
cmp
stos
dec
mov
add
test
popa
sahf
movsl
cli
or
arpl
icebp
mov
push
sbb
popf
lahf
icebp
out
cmp
push
test
xor
adc
xchg
mov
ljmp
daa
sbb
dec
out
leave
ficompl
out
aas
sahf
cmp
mov
aas
cwtl
dec
mov
inc
pop
loopne
cltd
mov
and
out
and
and
ja
dec
adc
sbb
sbb
in
lods
and
cwtl
dec
lahf
lret
in
sub
or
out
jmp
inc
jmp
jno
adc
mul
jae
inc
movsl
add
ss
lret
repnz
daa
or
xor
mov
push
in
outsl
dec
dec
jnp
test
je
frstor
nop
cmpsl
rorl
movb
gs
in
out
ret
cmp
dec
jns
mov
xchg
imul
out
loopne
int
sub
pop
mov
imul
xlat
xchg
loop
xor
xor
jmp
ret
inc
sub
jbe
movsb
popf
out
mov
les
stos
mov
xor
or
cmp
dec
pop
or
das
pushf
xchg
sbb
jns
push
adc
imul
cld
popa
out
pop
mov
movsl
add
jns
fldt
pushf
pop
loopne
dec
pop
lock
jbe
inc
out
add
subb
dec
cld
out
pop
add
repz
push
inc
mov
ja
jns,pt
arpl
adc
mov
shrb
ficompl
mov
mov
rorl
and
cmp
mov
and
mov
lock
ret
gs
xchg
icebp
cltd
lret
daa
shlb
out
cld
fisubs
add
inc
add
fldt
sbb
add
mov
jns
jb
cmp
loopne
jp
clc
stos
mov
ds
fdiv
xchg
inc
rcr
sbb
outsl
push
push
xor
arpl
or
ja
loopne
sbb
sub
stos
mov
and
stc
xchg
ljmp
sarb
sbb
clc
lahf
xor
std
hlt
mov
std
mov
mov
orb
xchg
mov
mov
imul
cmpl
mov
xchg
pusha
outsb
stos
xchg
inc
les
mov
daa
out
mov
mov
mov
add
sub
jl
loop
cmp
cld
sbb
out
out
mov
in
push
es
sub
lret
pop
pop
pop
aaa
or
mov
xor
cmp
test
sub
pop
cmpsb
jg
push
in
dec
rcrl
mov
jp
jp
mov
mov
inc
jne
add
xadd
test
lcall
int3
fistl
rorl
test
dec
sbb
inc
loop
std
ja
std
or
jbe
enter
lcall
mov
out
jle
sbb
aas
jbe
and
pop
push
or
fmull
add
pop
push
pop
popf
mov
cmpsl
jno
mov
inc
daa
pop
jle
addr16
cltd
jp
iret
hlt
cmpsb
lock
fsubs
movsb
cmp
mov
xor
fistpl
push
sbb
and
shll
inc
and
xor
inc
int
cmp
mov
mov
dec
pop
push
mov
cltd
adc
sbb
sub
jp
or
dec
mov
fnstcw
lret
jle
and
sbb
and
movzbl
push
xor
in
adcb
or
push
cltd
adc
and
test
push
cltd
cmp
das
inc
push
sub
lret
js
loope
sub
test
cmp
repnz
cs
adcl
fsubrs
jo
movntq
cmc
ss
daa
sbb
push
rcrl
jg
insl
sahf
jmp
js
lods
imull
mov
adc
mov
loop
add
or
stos
test
xor
cmpsb
fs
stc
add
jl
push
shll
dec
pop
sbb
lahf
sub
mov
inc
aaa
mov
mov
sub
sbb
dec
push
sub
imul
xchg
mov
aad
mov
pusha
inc
fiadds
testb
jp
mov
mov
adc
add
loop
cmpsb
clc
push
insb
jge
pop
push
lcall
loopne
into
xchg
lea
call
icebp
enter
call
mov
cwtl
add
pop
ss
les
fiadds
ds
test
pop
repz
pop
shlb
cmpl
jg
fstpl
test
test
pusha
stc
adcl
mov
adc
and
int
jnp
add
popa
mov
mov
les
aam
pop
and
jbe
dec
inc
loop
inc
in
test
dec
sbb
mov
outsb
jl
ds
aas
pop
mov
movsl
push
adc
arpl
insl
cltd
cmp
mov
jl
pop
sub
or
repnz
inc
pop
std
sub
pop
mov
cmp
xchg
jo
pop
ja
ljmp
adc
adc
out
mov
push
jge
and
adc
cmp
or
in
repz
xor
and
mov
mov
sar
aas
adc
inc
xchg
push
fmul
int
cli
stc
movsl
xchg
sbb
hlt
hlt
adc
and
flds
loope
xor
mov
adcb
out
clc
jmp
mov
jb
out
mov
pusha
or
scas
icebp
cmp
leave
in
pop
push
cmp
sahf
mov
adc
adc
stc
int3
cmpsl
cmpl
stc
shrb
xlat
outsl
xchg
push
loope
or
pop
in
cli
jecxz
sbb
int
scas
in
pop
in
push
ret
stos
jge
aas
loope
xor
xchg
loopne
out
xchg
ss
mov
mov
cld
in
push
adc
orb
xchg
xchg
jne
push
movl
sub
imull
shrb
test
xchg
dec
inc
arpl
mov
movsl
cmp
test
mov
insb
sahf
std
dec
cli
ret
adc
and
mov
outsb
add
mov
mov
pop
pop
push
sub
push
loopne
int
xchg
daa
pop
cmovo
idivb
bound
fdiv
jg
dec
mov
popa
testl
cmp
mov
dec
stos
cmp
rcrl
or
xor
dec
lret
in
xchg
sub
lahf
stos
ja
xchg
or
mov
and
cwtl
fnstenv
xor
push
mov
lret
jp
bound
dec
imul
divb
pop
jmp
insl
dec
mov
xchg
int3
inc
aam
xor
dec
cmpsl
mov
adc
pop
mov
cwtl
stos
pop
jno
mov
jne
cmp
and
xor
into
sbbb
aad
movsl
cmp
divl
pusha
cmpsb
lcall
sub
pop
stos
cmp
test
lahf
or
push
mov
sbbl
push
mov
add
jno
pop
adc
inc
push
push
xchg
cmp
scas
xor
or
arpl
dec
jb
mov
dec
mov
add
sub
outsb
js
mov
mov
mov
cmp
mov
lret
out
fdivrs
insl
pop
push
idivl
mov
push
icebp
test
outsb
mov
cmp
scas
adc
stos
mov
cmp
mov
cmp
xchg
push
jo
push
xchg
sub
jge
pop
mov
xchg
data16
and
mov
fldenv
pusha
mov
aad
push
inc
int
out
in
rcrl
and
sbb
mov
paddusb
adc
mov
popa
jge
add
iret
cmp
jne
lret
xlat
adc
or
into
popf
fninit
mov
movsl
add
or
xchg
push
push
jmp
ljmp
out
jae
imul
add
xor
sub
sub
rol
je
jbe
push
and
and
sti
aas
push
mov
dec
mov
jp
ja
ss
cmpsl
stc
add
pop
negw
or
out
lret
sbb
pop
cs
movsb
test
shrd
mov
or
leave
mov
repnz
pusha
mov
dec
ret
and
icebp
bnd
addr16
jecxz
adc
ja
or
adcl
repz
and
push
mov
mov
jp
loope
pop
push
scas
adc
out
mov
dec
out
xchg
jmp
sbb
sbb
or
or
sub
scas
adc
adc
adc
jbe
add
sub
and
call
ret
jno
jecxz
adc
or
out
sti
rclb
lahf
adcb
daa
sub
fiadds
loope
fisubl
sbb
rclb
pop
mov
fldt
or
lods
in
and
push
cli
pop
push
cmp
sbb
xchg
jge
in
cmp
mov
outsb
inc
push
movsl
jno
pop
mov
aam
jnp
lods
js
cmpl
adc
mov
cmpsb
jns
sbb
imul
dec
mov
lcall
inc
ljmp
test
push
jge
cmp
jge
push
mov
fldt
or
lea
and
ja
shl
dec
test
movsl
lea
cwtl
sub
pushf
loopne
aaa
cli
or
lret
dec
cmpsb
jmp
mov
rcr
sub
cmp
mov
push
test
mov
sti
pop
jnp
dec
mov
inc
imul
push
adc
mov
add
cmp
pushf
rol
and
cmp
in
sbb
cltd
dec
ljmp
stos
xor
inc
pop
fs
fiadds
push
sub
dec
mov
jne
test
int
repz
mov
js
sub
lret
shll
mov
mov
enter
pop
jmp
movsb
inc
insb
mov
aaa
rcl
cmp
sub
loopne
xchg
imull
cmp
sub
xchg
mov
popa
mov
subl
dec
push
lea
gs
mov
mov
int
and
and
stc
or
cli
movd
dec
dec
jge
fstps
scas
stc
pop
icebp
add
lcallw
subb
xchg
cmpsb
enter
incb
daa
lret
fwait
mov
shlb
cld
xchg
fmull
pop
stc
dec
ret
add
mov
cmp
test
sbb
mov
mov
dec
sbb
mov
xchg
cs
mov
test
lds
inc
out
sahf
aam
rcl
mov
in
push
test
aad
fidivrs
mov
push
push
xchg
mov
repz
pop
imul
mov
das
aam
inc
or
or
test
popf
sti
pop
mov
fs
sbb
in
adc
cwtl
mov
mov
jmp
mov
inc
dec
fcompl
cmpsl
cmp
pop
jbe
test
ss
cld
push
pushf
sub
fisubl
enter
xchg
jg
and
inc
out
mov
mov
or
int
mov
sbb
and
movsb
out
int3
pusha
add
push
into
adc
push
cmp
orb
add
sbb
pop
nopl
cltd
mov
loopne
rclb
jg
fldpi
push
sbbb
mov
pop
fnstenv
add
push
andl
sti
pop
cmp
mov
mov
mov
fcoms
or
jno
push
mov
pop
lods
lock
sub
repnz
dec
xor
outsb
mov
pop
xchg
mov
mov
repz
test
iret
jbe
pushf
pop
xor
adc
fmulp
or
fnstcw
data16
pop
fwait
pop
mov
std
mov
dec
jbe
jmp
fldenv
cmp
dec
pop
xchg
in
nop
rcrl
cmpsb
addr16
scas
xor
sbb
sub
adc
sar
mov
mov
dec
cli
or
lock
sbb
roll
shlb
cmp
ret
jp
push
pop
pushf
jge
push
mov
adc
mov
mov
adc
nop
bound
jo
push
push
xor
test
lret
lock
pusha
pop
pop
cmpsl
fnstsw
mov
imul
faddl
pop
push
in
int
cmp
fnstenv
xchg
adc
lea
rcl
adc
mov
adc
push
jb
xor
ret
cmp
ret
sub
pop
mov
mov
cmpsl
shlb
inc
sub
iret
nop
jmp
movaps
cmovg
pop
cmp
xor
paddw
mov
mov
aaa
push
loopne
fisubrl
test
insl
aaa
inc
mov
cmpsw
arpl
fcmovnbe
or
js
and
or
pop
xchg
mov
adc
sbb
enter
and
imul
in
lock
jg
mov
xchg
sbb
inc
jg
jle
int
sti
fwait
dec
and
dec
inc
js
dec
pop
xor
cmpsb
or
je
add
adc
in
xchg
ror
xchg
adc
push
jo
arpl
mov
in
adc
mov
sti
push
aas
dec
ja
pop
loope
je
jbe
cmp
adc
push
movsl
daa
fcoml
scas
sbbl
dec
or
ja
stc
nop
or
xor
dec
add
int
loop
mov
mov
dec
cmc
fcom
xchg
loopne
decb
nop
cmc
mov
push
cmc
gs
aas
pop
cs
pusha
xchg
iret
mov
ficoml
or
fmulp
and
sbbb
mov
xchg
and
sbb
add
push
test
lea
in
mov
leave
imul
sbb
jnp
mov
adc
dec
pop
jge
pop
les
popa
jns
insl
sarb
aaa
add
lcall
sarl
push
es
jo
pop
jns
mov
cmpsl
cld
dec
fadd
cs
or
jno
stc
cmpsb
out
fcmove
scas
push
and
jnp
repnz
in
mov
je
add
cmc
ret
mov
fisttpll
lods
xchg
lock
mov
push
sub
ficomps
lret
cwtl
cmp
divl
dec
dec
add
jle
inc
mov
mov
adc
mov
shlb
cmp
cli
mov
add
enter
lds
lods
jg
inc
fldcw
repnz
push
movsl
mov
mov
dec
push
jmp
push
pusha
sbb
xor
sub
ja
push
subl
adc
jecxz
dec
jl
jno
jge
cld
popa
inc
clc
or
dec
cld
push
hlt
push
fstps
mov
pop
iret
into
mov
stos
inc
sbb
push
jb
mov
mov
xchg
push
fnstenv
add
sbb
and
cmpsl
mov
sub
in
scas
sbb
or
lret
xlat
push
xor
pushf
arpl
jbe
nop
cmovge
mov
inc
sbb
sub
pushf
pusha
mov
jo
iret
fistl
mov
pop
stc
in
dec
mov
aas
std
js
push
insl
into
gs
pusha
ss
inc
adc
mov
push
bnd
test
lods
fisttps
jecxz
jg
sub
cmp
add
dec
cli
or
mov
aad
cmp
stc
inc
in
daa
xchg
pop
push
inc
fcomp
cmc
js
je
arpl
shll
stos
xor
and
aam
sub
repz
or
mov
ja
adc
add
gs
mov
test
xchg
add
icebp
xor
inc
imul
cltd
xor
cmpsl
lcall
mulb
cli
mov
jge
adc
push
and
pop
and
cwtl
pop
xchg
xchg
dec
add
das
loopne
dec
lds
push
lret
cmp
sbb
xlat
xor
and
push
cltd
cmpsb
test
xor
sub
les
cmp
enter
jno
pusha
ror
sarl
fnstenv
push
repz
push
inc
clc
xchg
sbb
lea
mov
push
xchg
mov
mov
sahf
and
mov
cmp
or
sbb
es
fwait
add
xchg
mov
mov
mov
dec
fsubrs
sbb
rorl
notl
pop
shl
ja
imul
adc
mov
mov
sbbl
cltd
dec
pushf
sbb
ljmp
adc
fidivl
ret
push
xchg
testl
jno
popa
sbb
adc
ss
lds
dec
lahf
cld
jo
andb
stc
mov
push
sbbb
and
sbb
mov
pop
addr16
fistpl
pop
bound
sti
nop
cwtl
jae
sbb
call
pop
mov
inc
loop
or
add
fs
mov
inc
sbb
js
adc
dec
dec
imul
cmp
push
and
dec
add
cmpsl
mov
call
mov
hlt
lcall
dec
sub
cmpps
and
pop
inc
pop
xor
arpl
pusha
addr16
sbb
fists
jecxz
jne
push
inc
pop
lods
fidivrs
push
and
pop
jns
inc
jb
jecxz
adcb
xchg
xor
jge
shll
pop
add
stos
dec
add
aad
xor
push
leave
lcall
cmpsb
adc
and
adc
pop
sbb
and
sti
daa
mov
push
pop
adc
inc
movsb
pop
push
push
inc
cmp
sbb
rol
sub
ljmp
xor
fmuls
or
mov
int
mov
test
sarb
jns
or
movsl
add
bound
push
outsl
es
jo
mov
adc
aad
les
jg
jg
add
or
ret
ret
pop
xor
popa
loope
pushf
or
mov
mov
xorb
sbb
jmp
pop
sub
dec
int3
fimuls
daa
stos
out
push
or
aad
in
and
mov
hlt
clc
push
stos
push
loop
nop
arpl
mov
jp
pop
movsb
stc
pop
shlb
push
gs
push
mov
loope
fnstenv
in
bound
mov
and
rcrl
sbb
mov
pop
pop
lret
cwtl
dec
cmc
cmp
stos
fwait
adc
xor
mov
push
ljmp
in
loop
mov
jo
call
test
loop
mov
je
nop
jae
or
iret
mov
cltd
adc
mov
jecxz
mov
xchg
or
cmc
jno
and
xor
test
mov
jmp
cs
and
xor
cmc
xchg
sub
inc
xor
xchg
xchg
sbb
into
sar
cmp
iret
lret
adc
inc
shll
inc
push
sbb
dec
movsb
leave
add
jmp
das
fbstp
mov
std
xor
test
push
popa
dec
out
cli
testb
insl
int
xchg
mov
xor
xchg
sarb
sahf
push
inc
call
mov
fcoms
push
or
loope
ja
fnstcw
adc
sbbb
lods
push
fiadds
mov
inc
push
dec
loopne
mov
cmc
mov
mov
pop
mov
in
jne
push
cwtl
fnstenv
push
popf
int
xchg
into
test
and
or
xchg
fcmovbe
notl
inc
sti
movsl
ret
rcl
in
add
jge
push
pop
cmp
test
xchg
sub
iret
enter
xchg
jno
push
jb
mov
frstor
jle
fsubrs
pop
cmp
pusha
and
jb
nop
pop
js
mov
xchg
pop
and
jle
in
xor
es
test
out
stc
add
std
mov
iret
pusha
add
ds
pop
loopne
notl
mov
push
sub
js
pop
push
xchg
out
dec
loop
mov
pusha
adc
mov
mov
aas
jnp
dec
push
pop
addr16
jne
in
and
jl
jne
incb
out
adc
sbb
jmp
imul
or
inc
and
inc
int3
lret
mov
cltd
mov
mov
popa
lea
call
dec
adc
js
xlat
fidivs
stos
sbb
mov
cmp
push
jp
imul
jl
add
out
cltd
xor
xchg
cltd
notl
roll
lahf
mov
adc
pop
mov
cmp
cmp
inc
and
pop
les
sub
iret
add
incl
sbb
adc
add
call
or
xor
or
lods
inc
mov
inc
ftst
jo
jg
pop
add
nop
lods
xchg
ljmp
adc
aas
pusha
fbstp
jne
insb
imul
mov
std
jmp
sbb
cld
or
scas
jp
push
push
mov
icebp
movsb
or
leave
jns
lret
in
testl
xor
std
push
jl
push
scas
jb
adc
cmc
fsubrs
sub
pop
pop
or
lahf
lds
mov
popa
repz
and
sti
add
ljmp
data16
or
sbb
daa
mov
addr16
xchg
mov
aad
mov
fidivs
sbb
dec
nop
test
ret
sbb
cmpl
mov
pop
repz
push
jp
movsb
mov
jb
testl
sbb
push
adc
rol
mov
pop
out
and
int3
je
jbe
jbe
push
ljmp
adc
icebp
test
lret
js
rcll
loop
adc
pop
hlt
mov
jnp
loope
pop
mov
push
jmp
cltd
bound
xchg
mov
ljmp
aaa
fs
push
mov
call
add
dec
out
and
insl
add
jg
xor
arpl
mov
in
out
enter
inc
pop
sbb
sbb
mov
or
lock
hlt
fs
inc
fidivl
jnp
mov
popa
clc
iret
rcr
hlt
pop
mov
popl
fnstenv
insl
push
jmp
adc
repnz
imul
cmpsl
pop
mov
xor
sub
popa
pop
cmp
push
call
daa
rcr
in
mull
jl
inc
rclb
add
enter
loopne
mov
sbb
sub
xor
imul
loope
repnz
fidivl
paddw
sub
mov
movq
cmp
lret
xor
sub
pop
inc
mov
jns
adc
lods
fwait
in
adc
or
and
shlb
inc
cwtl
das
jb
test
lods
xchg
sub
iret
hlt
mov
in
lds
and
push
xor
addr16
in
xchg
xor
push
add
js
inc
es
push
arpl
mov
jae
imul
cmovne
cmp
icebp
mov
jg
mov
mov
loopne
aas
lock
das
push
push
push
jp
aad
lret
inc
adc
hlt
pop
pop
lock
push
or
push
xchg
imul
repnz
xor
out
push
aam
xor
out
test
jl
subb
sahf
cmpsb
and
in
std
jo
das
imul
testl
sbb
mov
das
add
gs
jo
es
mov
xor
aaa
into
cmp
mov
push
jecxz
sbb
push
hlt
mov
or
popf
cmp
jle
pop
jecxz
sub
pop
inc
fidivs
lock
sub
add
xor
clc
cmp
je
sbb
xor
adc
rcrl
adc
sbb
or
cmp
call
outsl
sbb
or
pop
cmp
cltd
xor
add
repz
add
sbb
dec
loopne
add
sbb
and
xor
cli
lahf
ss
js
push
stc
imul
inc
icebp
jg
and
xchg
sub
sti
xchg
sub
adc
and
sub
repnz
clc
and
adc
cld
xchg
xor
jmp
xchg
cs
add
mov
lds
clc
lock
pop
and
cld
shrl
lds
je
sub
sbbb
xor
lds
clc
lock
mov
sub
jmp
stc
cmc
push
in
daa
sub
lcall
xor
pusha
sub
xor
pop
mull
jl
add
mov
in
push
jmp
ret
mov
repnz
dec
in
sub
push
popa
in
addr16
pop
mov
mov
cld
popa
out
cmpsl
push
mov
ret
pop
xor
out
inc
push
mov
movsb
cmp
sub
pop
jecxz
test
clc
or
cmp
jg
push
out
mov
pop
lds
mov
xor
fs
cmpsb
cmp
call
inc
ja
je
cmp
xor
push
lods
sbb
shrl
or
aam
xchg
cmc
mov
xlat
scas
inc
push
popa
repz
shrl
movsb
cmp
inc
ficoms
subl
mov
adc
test
mov
jo
shlb
push
out
mov
jbe
dec
cmpsl
sbb
mov
jae
sbb
jns
mov
and
aad
ret
mov
stc
jne
andl
mov
sub
cltd
cmc
mov
popa
mov
fucomip
push
adc
fcomps
mov
and
in
fsubrs
or
cs
in
mov
add
push
cmp
scas
inc
add
scas
xchg
es
cmpsb
push
mov
out
loope
pop
mov
add
aad
repz
cwtl
das
adcb
lahf
inc
test
xchg
fisubs
arpl
mov
jbe
jnp
and
pop
sti
xchg
mov
loopne
sub
cmp
jnp
loop
cmp
adcb
hlt
adc
and
xor
ja
lea
xchg
sub
push
add
jae
stos
and
bound
nop
daa
ss
mov
fisubl
rcl
jo
addr16
mov
sub
xchg
cmp
xchg
je
jno
mov
or
aas
sbb
insb
jmp
xor
mov
fmull
or
lock
jns
sub
dec
push
ljmp
jecxz
iret
cmp
cmp
ja
adc
aam
mov
shrl
sarb
aad
fiadds
jge
lahf
stos
sub
push
pop
lret
es
test
ret
hlt
ja
mov
lret
cld
push
scas
inc
dec
mov
popa
call
add
xor
xchg
adc
inc
mov
clc
popf
sbb
jmp
lret
or
stc
cmp
ss
test
cmp
movsl
fcomip
pop
stos
ret
jnp
sub
test
xor
xor
cmpsl
lods
ret
fdivrs
pop
cmc
outsb
add
fdivs
or
rcll
and
inc
sbb
or
popa
or
add
mov
cld
xchg
sbb
sbb
sub
inc
xlat
mov
aam
add
popf
mov
and
jmp
popf
cld
mov
push
out
inc
inc
xlat
outsb
jbe
jne
xchg
xchg
or
in
add
xor
mov
addr16
mov
mov
rcll
test
hlt
cmpsb
pop
ljmp
xchg
aam
push
or
stos
repz
mov
and
push
ljmp
inc
jecxz
push
mov
fldcw
push
enter
je
mov
cli
sub
cmp
leave
add
sub
ljmp
stos
cld
xor
arpl
shll
and
out
or
cld
test
jmp
pushl
xlat
xchg
test
mov
adc
jnp
jnp
cmc
mov
movsl
mov
cmp
mov
je
push
add
out
pop
aaa
int
mov
shl
adc
movsb
mov
cmp
mov
in
sbb
faddl
push
fdiv
mov
je
fidivs
mov
inc
fmull
bound
cmp
jb
adc
xchg
mov
and
mov
jecxz
aas
ja
sarl
dec
inc
clc
data16
imul
hlt
inc
mov
xor
push
jae
lret
sub
mov
xor
fwait
cld
sub
or
adc
inc
fcom
or
adc
sarl
add
mov
lock
lock
sarb
shll
and
xchg
cltd
xchg
sbb
stos
xor
and
cwtl
in
jecxz
mov
jb
or
outsb
stos
xor
hlt
sub
icebp
int
call
int3
sarb
std
xchg
mov
imul
mov
loope
adc
jb
rorb
mov
dec
mov
rclb
jbe
dec
arpl
add
dec
test
cmp
mov
pop
jae
mov
pop
dec
pop
ret
pop
pusha
mov
dec
fs
xor
or
mov
cmpsb
dec
add
dec
les
loop
std
das
pop
lds
out
aas
rorl
or
inc
stos
adc
inc
scas
or
pusha
mov
xchg
pop
jne
pop
sbb
cmp
adc
sub
insb
mov
xor
mov
ja,pn
je
fdivl
cmp
scas
jns
mov
add
stc
xchg
dec
dec
mov
dec
das
mov
dec
or
scas
pop
jne
pop
in
cmp
fists
cli
push
mov
adc
xchg
dec
shrb
mov
inc
rolb
jae
pushf
xchg
cmp
pop
out
dec
iret
mov
loopne
mov
dec
jmp
mov
jle
mov
xchg
mov
add
adc
adc
jl
lods
call
cmp
pop
add
jne
repz
sbb
aas
icebp
xchg
add
hlt
in
pop
out
dec
mov
insb
xchg
add
inc
movsl
sbb
cs
xchg
jnp
leave
hlt
xor
mov
cmp
fcomp
inc
int
cmpl
or
dec
xchg
cmpsb
rcrl
mov
sbb
add
lea
lods
cmpl
jp
mov
lds
push
divb
jne
or
adc
loop
xchg
jmp
repz
add
xchg
lds
jne
lea
leave
inc
insl
sub
mov
jo
add
xchg
mov
fsubrl
xchg
jmp
and
ljmp
and
pop
cmp
mov
outsb
lcall
lds
icebp
cmpl
sti
mov
lcall
addr16
ljmp
shrl
mov
fsubr
push
leave
leave
mov
xor
mov
ds
jl
adc
cmp
or
push
stos
xchg
imul
popf
xchg
cmp
jae
int3
shll
shrb
lea
mov
ret
orb
sbb
fimuls
ds
lea
dec
pop
or
mov
cmp
cltd
xchg
fstps
test
mov
out
ret
mov
inc
ret
pop
mov
adc
popf
pop
repz
popa
aaa
adc
cmp
pop
push
clc
and
or
mov
je
or
bnd
and
sub
imul
fdivl
outsb
push
add
ja
or
cld
xchg
loop
nop
push
dec
test
sar
inc
lods
pop
inc
mov
mov
cmp
dec
test
out
or
icebp
mov
inc
cld
xchg
ss
pop
aad
jnp
aam
and
flds
adc
add
movsb
mov
and
xchg
and
xchg
cmp
mov
sarl
testb
sub
outsl
cltd
test
addl
outsb
jbe
sub
js
mov
repnz
mov
daa
mov
cmp
or
add
enter
or
dec
inc
lds
icebp
sub
aaa
int
imul
push
mov
leave
inc
je
negl
fidivl
cmpsl
cmp
mov
dec
pop
shrl
in
dec
rcrb
jecxz
inc
xchg
xchg
inc
in
stc
loope
cmpb
inc
mov
jo
inc
lods
xchg
ss
test
dec
pushf
stos
or
jp
out
jns
lret
adc
dec
shll
cmp
popf
test
leave
and
out
jmp
ss
cmpsl
adc
lret
mov
fstpt
rcrl
or
into
mov
fbld
lret
mov
fnstcw
loopne
ret
jle
xlat
mov
dec
mov
or
das
mov
pop
test
aad
push
xchg
ror
push
lock
movsb
cmp
in
notb
xor
js
insb
int3
inc
cmp
mov
jae
pushfw
xor
mov
ja
push
imul
adcb
std
xchg
push
inc
ficompl
test
mov
xorl
adc
ret
xor
push
add
popf
inc
sbb
out
push
scas
stc
mov
push
in
movsb
sbb
inc
mov
movsl
sbb
iret
push
fcmovne
mov
out
push
xchg
add
push
push
jns
jne,pn
jmp
ds
testb
inc
mov
sub
sub
sub
roll
orl
dec
pop
rcll
das
out
or
and
bound
cld
arpl
sbb
addr16
cmpl
inc
mov
inc
and
xchg
xchg
ss
xchg
jne
outsb
popf
arpl
jbe
xchg
xor
bound
mov
and
popa
movsb
test
jmp
add
daa
pop
into
test
iret
inc
adc
xlat
jne
add
inc
and
mov
sbb
xchg
jmp
lods
cli
xlat
loop
ret
fsubl
in
mov
mov
faddl
cltd
test
and
sbb
popf
dec
fwait
loopne
push
push
pop
dec
jg
xor
push
les
jnp
sti
pop
cmpsl
xor
cli
cmp
das
out
jmp
push
rclb
out
jecxz
enter
in
sub
in
xlat
xor
out
dec
pop
pushf
xor
sbb
xchg
js
mov
cltd
pop
push
pusha
or
cmp
push
pop
jge
gs
or
push
push
in
mov
jmp
das
cmp
adc
sbb
clc
inc
push
hlt
sub
push
push
pop
imul
push
mov
call
movl
mov
mov
xchg
repnz
stc
daa
test
addr16
xchg
orb
dec
lea
movb
xchg
sub
div
pop
mov
stos
pop
repz
addb
mov
lea
repnz
leave
inc
sahf
mov
jb
movsl
gs
loope
and
cmpsb
out
repnz
js
pushl
mov
repnz
cld
sbb
mov
jge
pop
add
pop
xor
mov
les
sub
cs
sub
and
imul
sub
dec
push
mov
mov
iret
dec
adc
sbb
inc
xor
ja
sbb
or
adc
and
call
push
aam
rol
push
enter
jmpw
iret
and
add
add
aas
xchg
scas
xchg
sub
std
repz
adc
fadds
ja
sub
fimull
outsl
aad
xchg
daa
enter
pop
cmpsl
stos
aaa
lods
pop
test
dec
ret
les
in
xor
mov
iret
data16
mov
insl
lods
pusha
jno
dec
lds
inc
xchg
mov
scas
mov
adc
loop
rolb
out
xor
fucomip
and
mov
push
or
adc
pop
sub
pop
sbb
mov
sub
jns
pop
dec
mov
xlat
sbb
xchg
xchg
pop
pop
stc
sub
jp
aaa
xor
dec
lods
push
out
pop
ljmp
addr16
push
test
ret
pop
push
std
divl
out
mov
inc
add
test
test
cmp
push
mov
cmp
pop
daa
insl
lahf
xchg
test
inc
lahf
pop
adc
data16
inc
jnp
and
or
cmp
repnz
insl
fs
fistl
xchg
es
push
lret
mov
rcll
mov
jno
lea
gs
mov
sbb
in
inc
pop
mov
lds
jmp
in
movsb
popa
clc
aad
push
rclb
testl
push
shll
and
xchg
push
push
dec
dec
inc
dec
loope
cmp
inc
mov
push
rorb
in
xchg
leave
lds
sbb
idivl
in
lds
inc
lods
mov
fidivs
lods
xor
stc
fildll
lods
or
cwtl
xor
sub
hlt
jnp
in
xor
cmp
adc
sbb
sbb
out
test
xlat
pop
daa
push
lods
test
and
shrl
jmp
mov
fidivrl
fildll
or
cwtl
xor
push
pop
ljmp
adc
gs
pushf
add
cmp
pop
and
sbb
pop
xor
add
sbb
nop
push
mov
sbb
inc
mov
and
fs
push
xchg
mov
cmc
pushf
and
adc
es
lods
test
mov
ficompl
dec
fwait
sahf
loopne
xchg
mov
xchg
jle
les
mov
loop
jbe
xor
sub
into
inc
add
addr16
test
mov
mov
mov
pop
aam
in
dec
mov
cs
fdivs
dec
mov
rorb
out
xchg
sarb
dec
loope
lock
fwait
xchg
or
enter
push
ror
inc
mov
loopne
push
pop
lods
pusha
mov
je
scas
mov
inc
adc
jnp
xchg
xchg
insb
fimull
aam
cmpsb
movsb
cmp
pop
inc
ret
dec
into
pop
xor
mov
pop
sub
jbe
xchg
push
and
inc
fiadds
push
leave
inc
stos
dec
sahf
popa
insl
stc
stos
pop
into
daa
xchg
sub
jecxz
int
repz
icebp
add
add
icebp
std
clc
pop
in
loope
jb
add
sti
cmp
push
test
les
add
or
sub
clc
sub
rolb
jecxz
in
pop
mov
lea
jo
lcall
hlt
mov
popl
jmp
stos
adc
or
pop
cmpsb
in
lea
fcoml
add
hlt
fwait
pop
add
outsb
sbb
push
lods
insl
mov
jae
mov
lods
xchg
sub
pop
int
bound
ss
sub
pop
push
orl
daa
dec
ret
xchg
imul
test
faddl
or
adc
popf
lods
outsl
and
jle
sub
nop
pushf
sbbl
repnz
dec
xlat
cmp
inc
js
fs
sub
xchg
and
inc
addr16
aaa
xor
fcoml
add
push
ss
in
mov
sub
sub
push
das
cltd
push
adc
mov
cltd
dec
cmp
aad
push
ja
xchg
pop
adc
into
addl
into
popf
xor
mov
cld
test
and
jg
jmp
mov
push
push
and
adc
ret
mov
out
xor
test
add
push
cltd
fs
imulw
xor
push
mov
dec
sub
jnp
mov
push
jl
jbe
addr16
dec
jl
xor
jb
cmpsl
pop
jle
or
sbb
lahf
push
mov
test
popf
xlat
xchg
xor
movsl
clc
js
mov
adc
into
add
sbb
fldpi
gs
lret
test
inc
into
ret
pop
dec
shrl
inc
test
sub
jecxz
mov
push
adc
jge
sahf
cmp
and
pop
addb
dec
test
test
push
mov
xlat
fidivrl
xlat
mov
repz
popa
aaa
int3
and
ret
push
out
flds
lods
jo
repnz
xchg
xor
sub
jmp
cli
xlat
push
testl
sub
mov
cmp
cmp
les
imul
mov
nop
sub
out
add
mov
jns
pop
in
or
jnp
push
pushf
pop
aas
jle
lcall
stc
inc
cs
pop
cltd
popa
icebp
daa
cmp
mov
dec
pop
sbb
movsb
popa
or
pop
jb
stos
xor
loopne
lret
mov
ficoms
fisttpl
cld
das
xchg
rcrl
adc
sbb
sub
leave
add
out
push
mov
jo
xlat
push
pop
aaa
mov
push
jl
jbe
sti
and
je
mov
sub
and
sub
in
pop
outsb
cmp
dec
inc
in
pop
pop
and
mov
rorl
stos
bound
mov
lock
and
mov
add
push
jb
adc
push
xor
outsl
pop
stc
pop
in
call
or
scas
ja
sub
push
add
push
divb
outsl
fdivp
mov
pop
in
cmp
xchg
jne
sub
jne
xor
test
sbb
loop
xchg
cmp
inc
scas
push
divb
sahf
or
fs
enter
nop
daa
jmp
lea
sub
mov
fs
mov
xchg
push
cmp
lret
bound
pop
fimuls
jnp
fs
dec
mov
jbe
xor
std
push
sbb
mov
lea
sub
lea
dec
out
jl
shll
popf
rorl
lret
outsb
scas
gs
mov
or
xchg
pusha
sub
xchg
sub
jb
inc
stos
movsl
cmp
sarl
fldt
sbb
mov
sbb
jmp
testb
aas
les
ret
or
loop
adc
xchg
mov
lahf
stc
mov
scas
or
gs
nop
jae
sbb
or
orl
popa
dec
jle
imul
pop
popf
xor
push
cltd
pop
xchg
jge
andb
and
mov
mov
cs
std
xchg
pop
add
inc
fiadds
cmp
fsubl
cmp
mov
in
sbb
sar
test
call
cmpsb
add
and
xor
ljmp
push
imul
fbstp
out
sbb
fcmovnbe
pop
mov
and
sub
shrl
inc
movsl
repnz
cli
cmp
sub
mov
mov
mov
imul
mov
jnp
pop
testb
and
ljmp
inc
lret
push
pop
jecxz
movsl
enter
ds
pushf
xchg
lods
xor
sti
jl
adc
lock
mov
outsb
cmpsb
ret
out
pusha
sbb
dec
aam
sahf
mov
lds
into
cmp
jmp
mov
imulb
add
daa
jno,pn
fwait
ds
push
inc
shll
sub
scas
test
cmp
filds
daa
into
inc
test
mov
jmp
in
outsb
call
out
pop
shrl
fbstp
leave
jmp
jecxz
xchg
or
rcrb
and
jb
cmc
mov
lds
pop
or
pop
imul
jg
jp
mov
jecxz
push
leave
jl
faddl
cmp
out
jg
mov
scas
sbb
aas
mov
and
jle
dec
dec
out
sub
in
enter
popa
movsl
sub
mov
roll
xchg
decb
jge
jp
sbb
sahf
orl
push
mov
push
rcrl
adc
xchg
cli
xor
pop
loope
rorl
rcrb
mov
push
scas
imul
and
dec
cmp
fadds
cmp
and
cmp
aad
bound
rcrl
mov
pop
dec
inc
or
cmp
pop
loopne
cmpb
dec
add
stos
inc
dec
cmp
pop
jp
lods
pop
push
aas
add
mov
dec
mov
mov
lods
xor
mov
push
adcl
inc
mov
lret
pop
inc
jecxz
push
aad
aad
and
aas
rcr
outsl
xor
ret
mov
cmc
imul
in
out
jmp
mov
sub
jl
loopne
mov
clc
out
test
adc
fnstenv
sbb
add
jmp
push
push
mov
insl
inc
mov
hlt
dec
push
mov
test
repnz
lea
icebp
sbb
push
and
lret
bound
mov
and
cmp
hlt
mov
dec
mov
imul
nop
daa
pop
scas
xor
sbb
cmp
sbb
movntq
out
xchg
xchg
mov
add
imul
xchg
and
inc
leave
imul
clc
xchg
inc
cmp
adc
stos
ja
push
pop
lret
xchg
js
pop
cwtl
lea
mov
test
lea
in
cmp
and
cmp
pop
scas
mov
fmull
dec
lret
loopne
mov
out
cmc
sbb
shr
push
lret
or
sub
lock
sti
out
int3
push
mov
push
or
mov
jbe
mov
dec
orl
les
xor
mov
sbb
xchg
xchg
sub
push
inc
dec
out
popf
ret
pop
inc
rcrl
call
stos
push
leave
or
inc
movsl
lcall
scas
test
mov
out
imul
lret
int3
xchg
jmp
add
add
subl
hlt
mov
mov
dec
iret
fisubrl
cmp
das
ret
push
leave
cmpsb
loop
mov
loop
enter
sub
xchg
xchg
dec
add
mov
dec
repnz
setae
js
jmp
scas
pop
repz
out
addl
repz
mov
loopne
mov
fnstcw
jge
rorb
je
int3
ja
lock
jg
movsl
int
repnz
mov
push
mov
ret
pop
pop
pop
int
popf
dec
cltd
bound
cltd
xchg
xchg
dec
mov
jno
dec
push
and
js
mov
cmpb
in
or
lahf
out
into
add
jmp
pop
sar
adc
cmc
test
fists
pop
imul
cmp
xchg
sub
jno
add
sub
lods
sbb
mov
mov
adc
scas
shlb
addr16
mov
cli
dec
loopne
int3
and
inc
xor
ljmp
xor
mov
and
pop
xchg
sub
das
loopne
jle
adc
and
xor
jb
push
xor
enter
cmpsl
jns
mov
mov
je
lcall
mov
addb
or
mov
dec
popf
loop
in
cmp
les
cltd
xor
pop
loope
aas
adc
loope
std
and
cmp
icebp
sub
or
dec
sahf
cmp
sub
xor
movl
mov
imul
sti
call
mov
jmp
jne
mov
ljmp
pop
jbe
mov
and
aad
sarb
inc
ret
repz
dec
stc
shll
cmpsl
faddp
pop
push
enter
inc
mov
scas
dec
loope
ja
dec
aaa
adc
pop
cmpsl
inc
int3
sti
pop
nop
sub
sbb
shll
icebp
sub
push
iret
in
xchg
js
ret
call
or
xor
add
jecxz
movsb
push
cs
icebp
jecxz
into
mov
dec
aad
dec
loopne
not
push
int3
ret
testl
adc
push
adc
pushf
cs
and
rcl
fadds
push
adc
stos
and
add
cmpsl
mov
push
or
ret
loop
repnz
das
in
cmp
adc
xchg
call
ljmp
and
mov
out
movsb
mov
or
rcl
aas
in
lds
fsubrs
fldcw
loop
or
xlat
into
and
xlat
cld
outsb
imul
sbb
mov
rep
jge
mov
ret
hlt
addr16
pop
cltd
adc
in
in
push
add
in
pop
and
aas
mov
loop
xor
xchg
add
xor
push
call
xchg
pop
ss
xor
push
mov
sub
dec
insl
cmp
popa
xor
call
test
inc
xor
js
and
sub
inc
fnstcw
insb
add
pushf
pusha
test
out
jle
and
pushf
xor
pop
sbb
in
imul
outsl
sbb
testb
adc
shlb
aad
loope
leave
adc
out
jp
or
cwtl
das
pop
scas
sub
inc
pop
rcl
imul
enter
repnz
out
add
es
push
leave
cs
and
dec
lret
sti
insl
imul
sbb
testb
and
mov
scas
out
pushf
xor
cmp
cmp
data16
insl
mov
jmp
mov
and
mov
jl
cltd
xor
popf
stc
into
call
test
cmp
pop
outsb
inc
movsb
mov
test
mov
sub
mov
cwtl
jle
stos
inc
sub
pop
mov
dec
enter
ds
or
cld
rcrl
js
repz
and
sti
daa
mov
dec
cmp
sub
mov
mov
jl
push
cmpsl
and
shlb
inc
lds
inc
xchg
dec
jecxz
test
arpl
das
push
pop
inc
ljmp
xchg
or
leave
push
es
sbb
xor
sub
and
and
das
mov
inc
jecxz
inc
cltd
ja
pop
out
int
and
sub
push
xor
icebp
shlb
test
scas
dec
or
and
adc
fisttpl
sub
pop
andb
aaa
xchg
jno
sub
and
repnz
fwait
pop
xchg
inc
aaa
dec
mov
push
mov
mov
repnz
int3
and
inc
fs
shrl
test
adc
pop
pop
sbb
push
jb
lahf
aas
dec
daa
sbb
xlat
xor
xor
lock
add
cs
jns
jecxz
popa
push
int3
jg
cmc
fmull
arpl
sub
push
daa
les
jp
lcall
inc
adc
cmp
mov
fcoms
lods
xchg
addb
mov
xor
cmp
xchg
push
jb
clc
ss
lods
push
test
pop
sub
or
mov
in
jecxz
cmpsb
das
icebp
mov
or
dec
or
iret
mull
mov
xchg
inc
loope
sbb
ja
xlat
mov
jno
mov
cltd
jne
ljmp
cmp
nop
cli
and
fdivl
push
enter
and
mov
mov
ja
icebp
dec
add
ljmp
push
aad
fs
dec
jb
push
movsl
into
icebp
dec
insb
jb
lret
jmp
lret
xorb
cltd
cmp
mov
or
into
add
aaa
hlt
push
popa
out
outsl
adc
inc
push
push
mov
out
pop
lahf
aaa
cmp
popf
mull
xchg
inc
adc
mov
das
insb
sbb
push
in
fwait
lret
cmp
shlb
push
pop
sbb
adc
scas
test
fstpt
cmp
dec
add
test
mov
or
mov
sub
fmuls
pop
inc
jge
mov
sbb
sub
add
lods
int3
push
sub
sbb
lods
push
lcall
in
sub
out
orl
jno
or
xchg
xorl
ficoms
out
xorl
push
xchg
push
pop
arpl
mov
scas
incb
push
movsb
negl
pop
mov
mov
data16
cld
scas
iret
in
fsubrs
inc
pop
push
pop
icebp
inc
sar
nop
ret
clc
insb
add
aad
jle
fwait
cmpsb
cmp
ret
mov
and
mov
or
cmp
stos
pop
icebp
mov
dec
sbb
icebp
lret
pop
cmc
mov
dec
add
ds
jnp
iret
mov
clc
jb
mov
mov
imul
call
std
aaa
shrl
mov
pop
add
jecxz
call
mov
sub
cmpsl
ds
aaa
stc
nop
test
testb
cltd
loop
or
aaa
lret
cli
jg
mov
sbb
sarb
sbb
mov
repnz
pop
in
lods
sub
push
lods
inc
andb
dec
push
mov
fnsave
test
adcb
adcl
sub
aad
xor
stc
popa
in
push
call
cmp
xchg
std
pop
cwtl
sbb
lods
std
dec
nop
ja
sub
clc
imul
int
imul
test
xlat
outsb
sub
push
aad
cmp
nop
aaa
jge
jecxz
xchg
outsb
push
cli
stos
shr
pop
mov
filds
cs
clc
jae
sub
sbb
add
aam
and
stos
and
push
std
daa
aaa
sahf
inc
adc
inc
and
xchg
repz
sbb
jnp
push
dec
add
stos
dec
push
clc
cmp
cmp
insb
outsb
push
clc
sbb
sti
pusha
and
push
clc
sub
mov
cmpsl
pop
inc
push
divl
loop
shlb
dec
jns
cld
bound
outsl
popa
jb
imul
mov
addr16
cmp
imul
hlt
jl
jno
sti
pop
jmp
loope
jmp
sti
cmp
inc
sahf
mov
int3
xchg
loope
mov
lcall
jl
pop
push
out
jno
jg
inc
dec
insl
mov
dec
lcall
test
lods
push
jae
adc
xchg
cltd
imul
mov
int3
cmpsb
movsb
int3
nop
shlb
and
pop
or
or
incb
and
mov
or
std
pop
dec
je
rolb
sahf
dec
push
pop
push
add
ret
fwait
sbb
xchg
pop
cmp
pop
push
cmc
pop
mov
xchg
cmp
ficomps
xchg
ja
sti
fs
push
sti
inc
test
push
pop
xchg
push
iret
aaa
mov
pop
and
or
mov
mov
push
xchg
shr
test
add
inc
popf
lcall
xchg
dec
adc
lret
test
in
xor
ret
adc
ret
pushf
lock
cmp
dec
adc
arpl
popf
stc
jne
xchg
ret
out
enter
add
inc
fwait
icebp
pusha
rcrl
rcrl
gs
fimuls
inc
setle
andps
ljmp
outsb
insb
jmp
xchg
dec
or
into
lea
ds
mov
iret
pop
int3
or
icebp
xchg
lret
in
arpl
icebp
adc
pop
in
dec
or
xchg
cwtl
or
in
cwtl
push
adcl
mov
jnp
clc
sbb
fs
mov
mov
cmp
mov
shl
rorl
lret
pop
mull
push
gs
lods
cmp
cmp
inc
bts
in
test
mov
in
out
gs
fwait
mov
mov
enter
sarl
and
and
push
sbb
data16
mov
mov
pusha
repz
mov
inc
push
lds
arpl
aam
jle
popa
hlt
jno
xor
les
into
mov
lahf
mulb
es
ja
xchg
idiv
sti
stos
cs
loop
mov
lret
adc
xchg
rcll
out
in
sbb
loope
jo
pop
std
add
cs
mov
mov
jb
pop
mov
addr16
xchg
rclb
add
mov
mov
cmpsb
repnz
sbb
cmpl
push
inc
adc
jg
imul
pop
stc
adc
inc
cmovae
xor
sahf
adcb
sbb
sbb
lds
arpl
enter
and
push
inc
jae
sbb
lahf
dec
push
gs
inc
adc
stos
pop
cli
test
dec
push
dec
mov
sbbl
imul
sarb
inc
stc
pusha
popf
lret
sub
fildl
xchg
cmpsb
pop
add
enter
in
negl
test
pushf
les
cltd
int
and
mov
cmc
cltd
sub
aas
push
jnp
mov
leave
xor
xchg
mov
lods
dec
adc
lds
mov
in
insl
lcall
dec
xchg
les
dec
cmp
adc
es
ret
mov
mov
pop
sub
sbb
mov
sbb
and
mov
pop
mov
outsb
hlt
xor
hlt
pop
mov
mov
dec
inc
lods
data16
xchg
xchg
adc
jns
mov
imul
push
cmc
pop
xor
pushf
aas
lds
add
dec
adc
mov
fucomi
pop
add
adc
shll
mov
xchg
cmp
and
vaddsubps
adc
lret
xchg
cmp
sbb
ficoml
xchg
cmp
and
pop
xor
and
ret
xor
adc
lret
push
xchg
cmp
pop
mov
aas
loop
push
sub
mov
out
sbb
test
stc
jmp
out
jae
add
cmpsl
sub
push
aas
mov
mov
stos
xor
mov
pop
mov
xchg
add
adc
inc
scas
xor
jp
push
mov
leave
push
inc
mov
dec
test
mov
movsl
sub
ftst
push
jge
mov
mov
mov
test
sbb
adc
and
xor
mov
jae
idivb
insl
iret
inc
lds
mov
push
sbb
stos
sub
cmpsl
in
pop
push
loop
xchg
pop
inc
int
cs
mov
mov
inc
icebp
pusha
in
movsl
or
imul
dec
or
mov
adc
mov
mov
jge
lds
cltd
cmp
aaa
pop
mull
jne
jns
push
dec
aam
rol
xchg
out
stc
push
daa
mov
out
pop
les
cmpsb
cmp
js
cld
bound
mov
xor
cmp
es
pop
fsubs
int3
xchg
fistl
callw
cmpsb
sub
cmpsl
add
cmp
cmp
ss
gs
das
push
int
fwait
enter
mov
into
bound
rcll
ret
lret
sar
pop
in
xor
mov
mov
add
xchg
jno
popa
adc
in
xor
fmulp
sub
dec
and
inc
sub
loop
popa
repz
add
iret
pop
adc
pop
stc
aaa
dec
push
decl
sub
fs
out
push
add
xor
inc
adc
scas
cmp
push
ret
push
nop
lods
sub
mov
roll
popf
jl
lret
mov
je
sbb
push
push
dec
pop
std
cmpsb
inc
pop
sti
ss
cmp
cwtl
mov
or
enter
push
ljmp
cmp
lahf
imul
cmp
push
mov
nop
xchg
pop
lcall
ret
filds
and
xor
or
aas
movsb
push
lret
dec
das
cwtl
inc
sbb
push
adc
aas
test
jb
cs
jge
xchg
addb
cmp
aaa
sbb
jns
dec
adc
mov
std
gs
cwtl
inc
jb
cmpsl
clc
add
out
repz
roll
out
pop
mov
push
mov
cmpsb
test
xor
sub
jb
adc
xchg
lcall
xchg
push
cld
pop
stos
lret
mov
mov
sti
jne
and
jno
cmp
stc
outsb
rclb
pop
mov
lds
jns
sub
mov
loop
enter
cmp
sub
adc
push
dec
out
adc
xchg
pop
lock
cs
add
sub
xor
pop
add
fs
inc
mov
mov
dec
call
stc
les
jp
popf
inc
push
imul
aad
js
mov
push
mov
jns
sbb
mov
test
inc
or
push
call
aad
and
dec
or
sbb
mov
mov
jns
lret
shrl
pop
std
pop
outsb
fstpt
mov
nop
cmp
insb
mov
add
add
push
jnp
inc
cld
and
repz
mov
rorl
lcall
je
lock
aas
clc
data16
cmp
dec
add
pop
mov
or
pop
aad
arpl
and
arpl
jo
sub
pop
insb
in
mov
clc
pop
aam
adc
into
or
pop
jb
adcl
mov
inc
dec
fs
call
divb
lods
adc
scas
adc
inc
adc
int3
arpl
sbb
je
out
ljmp
xor
jnp
cmp
dec
insb
or
cmp
mov
cld
or
adc
jp
sub
push
popf
mov
xor
jmp
cld
pop
ds
cmp
and
adc
mov
mov
jge
inc
jmp
lock
sbb
mov
lahf
push
sbb
and
stos
enter
mov
jg
dec
roll
and
mov
inc
scas
sub
mov
jo
aas
cltd
inc
outsb
ret
xchg
xor
mov
jmp
mov
rcrl
mov
sahf
inc
fcomp
xchg
fisttpl
sbb
adc
pop
xor
mov
daa
daa
mov
xchg
sar
rcll
cmc
rcll
sbb
mov
mov
fldl
sbb
add
adc
test
orl
sti
popa
test
rorl
ja
add
lahf
jg
stos
out
pop
add
cmp
xchg
xchg
cmp
pop
xchg
cmp
adc
pop
andb
movsb
xor
mov
stos
adc
fiaddl
adc
xor
cmp
leave
xchg
jle
hlt
pop
xor
mov
jae
orl
xor
or
aad
push
test
sbb
dec
or
or
or
sbb
or
shrb
and
bound
pusha
cmc
inc
jge
push
jbe
dec
or
push
pushfw
lock
arpl
mov
test
inc
jns
adc
out
xor
pop
andl
cmp
cs
data16
mov
shl
mov
push
sar
das
sub
dec
adc
or
xor
loop
mov
xor
out
or
fsubl
fs
and
ret
outsl
shl
arpl
rcrb
mov
addr16
inc
fcmovne
mov
fstps
xor
lods
sub
xchg
aaa
fidivrs
daa
test
or
cld
or
insb
dec
dec
ss
mov
lods
enter
ret
xchg
lds
dec
add
cmpsl
xor
scas
ss
nop
mov
adc
icebp
stos
jle
pop
in
inc
push
mov
fdivrl
lods
adc
jecxz
nop
inc
jns
test
test
mov
rcl
jns
xchg
or
pushf
and
or
outsl
sub
jnp
je
sahf
insb
pmullw
rclb
mov
and
int3
mov
dec
or
fistpll
jo
cmp
negb
shr
adc
in
and
cmc
mov
dec
in
fcoms
jle
pop
cmpsb
cs
int3
mov
ret
mov
repz
jnp
push
inc
or
ret
pop
or
rclb
cwtl
xchg
xor
test
inc
or
faddl
mov
les
pusha
in
jge
mov
out
js
jnp
pop
mov
cltd
ss
push
ffreep
mov
mov
aaa
mov
aaa
jge
push
jmp
stc
fs
cmp
pop
clc
hlt
and
push
cmc
sbb
imul
mov
movsb
xor
out
xchg
icebp
mov
mov
testb
mov
adc
pop
add
inc
or
sbb
call
dec
mov
orb
lock
fisttpll
pop
std
or
pop
jmp
mov
pop
lcall
int
test
test
xor
scas
xor
aad
test
sti
data16
or
pop
pop
mov
leave
dec
adc
ds
sbb
sub
cli
jmp
fldt
cmp
jne
hlt
pop
repz
xchg
lret
adc
adc
adc
push
rolb
add
mov
loop
mov
fildl
mov
aam
mov
jl
dec
aam
movsb
jbe
popa
add
lock
xchg
inc
scas
pop
and
jecxz
fnsave
lea
cld
mov
ret
push
sarl
adc
stos
jo
or
jne
inc
or
arpl
ds
stos
jb
fdivs
jnp
pop
cli
test
add
mov
lds
mov
push
in
push
add
add
xchg
inc
xor
mov
xchg
jne
sbb
lss
aam
mov
cmpsb
jg
mov
gs
stc
outsb
push
add
in
scas
mov
fcomp
mov
pop
das
or
test
les
test
mov
lods
inc
movsb
or
push
inc
mov
ja
xchg
add
arpl
push
rcr
add
in
inc
fwait
aas
call
std
lods
xor
jae
cmp
leave
mov
scas
into
pop
mov
xchg
xchg
aas
dec
fstpl
add
jae
mov
mov
sarl
xchg
aam
enter
leave
pop
mov
sbb
lods
ds
inc
sub
and
mov
stos
pop
into
sbbb
loopne
stos
xor
movsb
sarb
mov
and
xchg
in
jnp
ljmp
std
pop
pop
ja
aad
dec
lret
bound
pop
repz
arpl
out
fs
mov
sahf
push
sub
xchg
pop
adc
adc
popa
cwtl
loope
mov
dec
xchg
movsl
xor
jmp
push
sub
or
xchg
dec
adc
and
jl
icebp
pop
aas
mov
mov
orl
or
add
cmpsl
sub
push
daa
stos
add
push
mov
repnz
mov
test
sti
add
jmp
cli
lret
pop
push
std
push
and
xchg
xor
addl
orl
in
outsl
fdivrl
daa
stos
repnz
stos
cmp
fildl
push
adc
rcr
daa
test
imul
sarb
jg
loopne
sub
fstl
ret
sbb
lret
dec
sbb
and
push
adc
hlt
pop
sub
gs
imul
xchg
add
ficoms
bnd
icebp
inc
ja
mov
jno
and
inc
flds
xchg
std
mov
shll
lock
negl
fsts
out
sarl
gs
outsb
inc
push
negb
daa
test
mov
sub
cmp
mov
mov
fadd
fisttps
call
inc
dec
adc
pop
mov
sbb
dec
roll
ljmp
scas
xor
js
int
or
stos
push
mov
xchg
ds
xchg
inc
or
pop
xlat
jnp
mov
xor
and
xor
imul
dec
push
loop
jns
out
divl
lcall
sarb
mov
mov
lods
push
clc
pop
sub
or
scas
inc
or
fistpll
and
xor
inc
pop
jl
xlat
js
insb
es
cmp
mov
rcrb
jae
int
lea
loope
loop,pn
mov
push
dec
cmp
inc
jnp
and
fdivrs
rcll
jo
inc
lcall
sub
aam
outsl
jmp
adc
pop
sub
mov
je
cli
cld
push
mov
add
jg
or
push
dec
or
iret
jbe
lahf
outsb
add
mov
mov
mov
imul
sub
pusha
push
xor
cmp
sbb
mov
mov
js
inc
adc
aam
push
stc
int3
add
fimull
stos
daa
ss
pushf
ds
jmp
mov
xlat
orl
adc
lahf
clc
mov
lret
mov
insl
push
add
outsb
sahf
cmp
iret
jb
cmp
cmc
pop
mov
stos
mov
inc
mov
scas
mov
test
out
ss
or
ja
movsb
pop
xchg
mov
dec
orb
pop
stc
mov
lret
and
push
addr16
iret
les
jno
sbb
add
clc
out
jo
sarb
mov
scas
shlb
add
pop
fcomip
pop
or
and
add
aad
push
adcl
or
jge
inc
xor
das
push
add
ret
ljmp
xchg
push
mov
push
test
jmp
mov
dec
or
lock
scas
sub
imul
test
cmpsb
xor
or
mov
add
mov
fidivl
test
clc
xor
jmp
jl
sub
mov
mov
aad
push
mov
xchg
mov
mov
sarb
and
mov
inc
mov
scas
shll
jo
or
subb
push
aad
dec
inc
mov
mov
cwtl
or
add
push
faddl
sahf
ljmp
xor
in
add
xchg
pop
push
insb
repnz
cmp
adc
in
push
or
jmp
push
mov
xor
add
adc
mov
pushf
adc
leave
xchg
decl
cmp
sbb
mov
aas
mov
jnp
dec
push
pop
jo
xor
mov
fwait
sub
cmp
test
fmull
std
jecxz
mov
fistps
shlb
or
arpl
mov
sbb
in
out
xchg
icebp
add
pop
lds
mov
mov
xchg
mov
mov
movsl
repz
test
pop
mov
test
sbb
aaa
movsb
lods
daa
pop
sub
mul
mov
xchg
cli
loopne
outsl
int3
sahf
cmp
daa
mov
jle
add
add
xchg
pop
fnsave
sbb
add
addr16
push
push
cld
push
adc
cltd
inc
int3
push
psrlq
and
jno
pop
add
cmp
sarl
out
inc
push
sub
out
and
test
mov
add
xchg
push
ret
lods
xor
jbe
adc
sahf
aas
movsl
js
push
jge
xor
pop
ret
enter
and
ja
cmpb
mov
notb
rol
sub
movsb
call
lds
dec
push
js
mov
xlat
addr16
mov
sarb
stos
orl
mulb
ret
popl
bswap
in
sahf
add
fcomi
je
or
mov
sbb
jb
roll
cmpsl
test
xchg
test
mov
ljmp
iret
xchg
fwait
add
pop
sbb
push
std
lea
std
pusha
cld
es
ds
sub
insl
push
jno
adc
push
push
add
pop
or
fnstcw
repz
or
mov
mov
movsl
xor
jge
xor
cmp
mov
ja
loop
rcll
xchg
and
fdivrs
xor
addr16
and
pop
add
push
test
in
cs
out
cmpl
or
lods
add
jae
jecxz
add
leave
xor
outsl
jno
lods
lea
loopne
fsubl
cmpsl
filds
addr16
lcall
stos
fsubrs
jmp
xor
mov
xor
das
scas
sub
cmpsl
xor
or
cmc
in
push
jae
popa
hlt
rolb
mov
mov
in
sbb
dec
add
xchg
insb
repz
dec
adc
mov
ret
mov
or
je
xor
mov
push
flds
lahf
adc
sbbb
adc
fiadds
sarl
or
xor
sti
cmp
jmp
insl
sub
or
stos
lds
sub
xor
imul
js
mov
into
lea
enter
push
jle
xchg
cmp
push
flds
inc
test
lret
push
cltd
jb
mov
adcb
and
mov
scas
mov
xchg
add
xor
mov
sub
mov
mov
repz
cmc
sbb
sub
push
dec
sbb
and
loopne
fnstsw
cmp
insb
pushf
das
test
sahf
mov
sbb
inc
scas
inc
js
jmp
das
add
push
inc
or
testb
inc
lds
xchg
addr16
push
stos
shll
xor
dec
fisubs
sub
mov
push
rcrl
iret
hlt
push
add
pop
jl
ja
movsl
xor
pop
out
cmp
cmp
jl
mov
or
cs
aas
mov
or
fs
sarb
ja
shrb
inc
ljmp
repz
out
lret
rep
xor
inc
movsb
sarb
out
cmp
cmc
repz
push
into
cs
ljmp
push
ret
push
in
addr16
test
vfrczsd
mov
push
or
mov
adcl
or
mov
push
call
addl
mov
add
sbb
add
mov
test
dec
xchg
mov
cmp
ds
adc
loop
int3
mov
int3
mov
lods
xor
stos
mov
cmp
das
cmpsl
jne
lcall
xor
adc
leave
inc
adc
aam
xchg
cwtl
sahf
inc
inc
enter
xchg
insl
hlt
jl
insl
hlt
insb
insl
mov
loop
ret
or
movsb
sub
scas
mov
addl
repnz
cli
and
ret
insb
in
fistpll
mov
ljmp
nop
shl
sbb
sbb
and
cmpsb
inc
push
dec
dec
mov
xchg
pusha
cmc
jecxz
int3
mov
cmp
mov
cmp
dec
ss
push
jp
aad
xor
cli
mov
lods
into
xchg
xchg
das
lret
in
push
and
push
test
lahf
sahf
out
mov
notl
negl
stos
fadds
rdmsr
outsl
repz
cmp
and
insb
imul
adc
sub
cmc
inc
dec
push
cmp
xchg
inc
adc
push
inc
push
lods
call
movb
stos
sub
jnp
stos
sub
inc
sbb
pop
in
into
xchg
sti
and
mov
lods
das
mov
sub
pop
jns
gs
stc
pusha
mov
cmp
jg
lret
jo
fcomp
ret
enter
pusha
icebp
jge
cwtl
cmp
popa
daa
mov
mov
push
movsl
jmp
cli
xchg
adc
ret
xchg
xor
enter
lods
ss
gs
es
jae
jmp
mov
cmp
pop
int
xlat
jnp
pop
cmp
cmp
imul
jmp
movsb
mov
pop
lret
cmp
clc
arpl
xchg
cmp
in
div
add
shl
lods
das
in
pop
sbb
xchg
stc
stc
fs
stos
out
xchg
cmp
repz
enter
repz
pop
jnp
sub
push
std
popa
inc
cmp
sbb
cmp
mov
and
and
xlat
cmp
xor
fidivl
pop
add
stos
cli
push
adc
loopne
out
dec
push
pop
sbb
sub
jecxz
push
xor
in
popl
in
cld
mov
sbb
fistps
inc
and
mov
lcall
les
jg
imul
sbb
jae
pusha
mov
jns
fnstcw
imul
js
dec
xchg
pop
insl
repz
daa
lods
sbb
push
orl
movsb
mov
fldcw
mov
fadds
pop
adc
add
mov
call
adc
mov
pop
loope
jae
ds
flds
xor
mov
cs
fstl
lret
adc
dec
test
mov
mov
data16
stos
sub
mov
sahf
jp
int3
daa
rcl
js
cmp
adcl
dec
adc
inc
out
jne
pop
and
push
and
roll
pop
add
fidivl
sysenter
ja
insb
pop
push
cli
mov
mov
mov
addr16
xchg
int3
jae
arpl
sbb
insb
dec
or
cmpsl
imul
ss
fists
rclb
or
imull
mov
sbb
push
inc
adc
ds
jae
roll
andl
dec
pop
fldt
je
cmp
jnp
fwait
sub
mov
mov
test
stc
movsl
xor
jae
outsl
insb
pop
clc
aas
jno
cwtl
in
out
test
pop
mov
jbe
mov
cs
lea
xor
int3
das
mov
adc
dec
xchg
xor
aad
add
pop
jbe
jle
ret
xchg
outsb
psrlq
sub
and
loopne
in
ljmpw
aas
mov
orl
dec
adc
bound
jge
cld
sbb
and
into
ret
cld
pop
adc
stos
sub
iret
pop
shll
and
aam
inc
adc
adc
rcl
adc
stos
or
cmc
gs
pop
in
outsb
mov
movsl
cli
pop
testb
sti
mov
jnp
aas
add
pop
cli
mov
mov
jnp
mov
pop
into
and
addr16
jmp
stc
negb
adc
mov
cwtl
inc
shlb
lock
adc
dec
repz
mov
scas
paddq
rcll
mov
mov
push
in
or
jno
stc
adc
leave
nop
in
jo
sbb
adc
mov
cmp
ficomps
out
cmp
jp
xchg
das
aad
sbb
cmpsl
add
int3
xchg
pop
mov
lahf
and
and
bswap
mov
cmpsb
mull
push
mov
cmp
inc
adc
or
pop
and
xchg
inc
stos
sub
out
cmpsl
das
cmp
insb
add
popa
clc
pop
fwait
mov
int
jmp
mov
mov
xchg
out
flds
int
decl
lret
lods
xchg
pop
push
mov
into
xchg
test
lock
jo
pop
mov
add
add
ret
lock
pop
in
outsb
inc
mov
or
les
pop
test
test
bound
pop
clc
sahf
sahf
push
add
or
addr16
mov
inc
aad
mov
lcall
movsl
std
dec
or
mov
mov
adc
dec
fnstsw
stc
add
sub
sbb
pop
push
dec
arpl
insb
repz
imul
daa
jbe
into
xchg
lock
std
repnz
hlt
pop
into
loope
aas
jnp
push
std
add
dec
lock
test
ret
inc
adc
ret
imul
cmp
jne
iret
pop
jge
and
cmc
mov
jbe
hlt
fisubrl
mov
dec
push
xchg
xchg
std
gs
mov
cmc
pop
rcrl
lds
push
mov
jle
aas
mov
ffreep
mov
or
pop
test
lods
mov
dec
adc
ret
sbb
mull
lahf
insl
jmp
mov
or
sahf
cmp
cmpsl
xor
jns
outsl
insl
inc
mov
xchg
fidivs
movl
xchg
push
popf
jp,pn
jnp
sub
imull
mov
sbb
push
std
bound
jmp
mov
mov
jne
sub
movsb
xchg
cmp
push
aas
sahf
and
out
cmp
push
cmc
jae
xor
ja
push
xlat
jb
add
and
pop
jbe
nop
divb
lret
xchg
sub
sbb
addr16
add
adc
into
xchg
es
mov
sbb
mov
ja
cmpsl
js
bound
aam
fcomp
adc
imul
push
je
push
ret
or
ret
xor
pop
mov
mov
jmp
xchg
js
jns
ret
movsb
sub
mov
or
xor
push
jg
pop
cld
or
fbstp
imul
insb
jle
pop
mov
mov
sbb
or
dec
pop
cld
sti
insl
clc
pop
adc
add
mov
mov
sub
jl
in
push
push
cltd
enter
sub
inc
mov
and
cmp
mov
out
in
push
sbb
out
loopw
loope
dec
std
mov
cmp
inc
inc
adc
sbb
ds
sub
rep
cmp
test
inc
js
fiadds
jg
add
rclb
mov
push
push
add
cmp
data16
test
outsl
mov
clc
leave
inc
inc
push
adc
hlt
ljmp
or
lock
adc
ds
cmc
daa
pop
pop
clc
or
rclb
push
jmp
xchg
pusha
ds
adc
das
jmp
arpl
test
sbb
add
jle
cmp
cs
cmp
and
daa
fidivs
aam
adc
dec
or
jmp
sbb
and
fistpl
inc
mov
out
insl
cmp
xchg
inc
cwtl
and
test
outsb
add
mov
stos
fwait
inc
pop
push
pushf
cmp
fstpt
or
outsb
add
out
outsb
loopne
xor
sub
pushf
jge
sub
lret
dec
push
jmp
sbb
sub
xlat
jp
sub
movsb
mov
stos
xchg
ds
jne
outsb
sti
xchg
cwtl
insl
push
iret
xchg
fdivr
and
mov
mov
imul
cltd
pop
cmp
mov
fdivl
popf
fdivrs
mov
loopne
scas
pop
cli
lcall
dec
mull
xchg
mov
mov
jns
rcll
mov
mov
sbb
call
scas
push
jecxz
fistpll
mov
xor
add
inc
pop
addb
into
xchg
into
mov
mov
mov
push
sti
xchg
mov
ret
sar
push
add
lcall
imul
dec
pop
pop
out
rcll
in
nop
push
add
adc
jle
fstpt
js
cmp
push
add
jae
nop
loop
bound
aad
les
pop
scas
adc
rolb
jbe
and
inc
repnz
inc
pop
ret
sahf
sbb
repz
cwtl
jmp
jp
mov
test
aam
call
fwait
inc
mov
mov
out
outsl
adc
inc
or
inc
shlb
shl
xchg
dec
dec
or
into
mov
mov
inc
push
stc
sarl
loop
call
nop
cmp
inc
lret
mov
movsl
cmpsb
xor
rolb
pusha
push
mov
or
mov
push
je
fistpl
lret
lea
addr16
dec
cltd
and
out
pop
cld
pop
shl
add
std
or
ret
popa
jecxz
inc
adc
ljmp
xchg
add
int3
fxch
roll
cli
mov
mov
out
imul
lock
nop
inc
adc
mov
test
daa
and
adcb
imul
add
push
jl
roll
sbb
xchg
xor
and
hlt
pop
mov
mov
jmp
cwtl
xchg
pop
int3
flds
outsb
mov
mov
je
out
movsb
sub
pop
iret
add
dec
lea
cmpsb
int
cltd
outsb
mov
lret
out
hlt
mov
rcll
test
lea
xor
push
scas
es
dec
in
add
add
push
int3
arpl
cmpsl
ljmp
cli
or
repz
es
inc
sahf
inc
fcmovne
addr16
cwtl
lock
stc
and
adcb
or
fdivrs
pop
pop
testb
jge
jecxz
fidivl
add
xor
mov
pop
push
mov
lods
adc
xor
fs
testb
push
adc
sbb
pop
or
and
daa
jg
inc
mov
outsb
add
add
mov
into
and
stos
inc
and
popf
stos
inc
enter
and
cld
xchg
out
sbb
add
sbb
clc
mov
ret
hlt
mov
mov
ficomps
punpckhwd
bound
xor
mov
scas
xchg
sub
insl
pop
mov
int3
out
hlt
mov
iret
adc
mov
xor
push
lods
nop
daa
fbstp
in
add
add
push
int
test
mov
dec
cmpsb
jmp
fsubrs
inc
popf
stc
or
icebp
dec
daa
mov
inc
popf
inc
fmul
gs
xchg
out
arpl
and
sbbl
cmp
testb
jge
loope
add
mov
loopne
scas
adc
xor
lea
test
mov
adc
adc
or
mov
es
hlt
push
out
jle
inc
mov
outsb
add
add
jmp
inc
pop
js
sahf
test
lret
sti
xchg
out
lds
fisttpl
add
pop
outsl
stc
mov
roll
mov
fcompl
or
jl,pn
pusha
mov
lcall
aam
dec
push
bound
scas
xchg
daa
insl
pop
mov
int
jp
mov
adc
mov
xor
push
stos
xchg
sub
jno
out
scas
inc
xor
insl
add
push
int
adcl
and
jmp
push
inc
pushf
testl
pop
lock
daa
mov
inc
fwait
inc
fmul
fs
cli
push
mov
mov
jno
inc
fnstcw
xchg
lahf
les
testl
add
nop
mov
ficoms
scas
push
fnstenv
xor
mov
dec
adc
or
mov
es
repz
call
scas
inc
outsl
push
ja
lret
bound
cltd
lea
and
adcb
push
jbe
sahf
cmpsl
aas
leave
pusha
jno
and
jle
sbb
in
pushf
push
insl
stc
sahf
aaa
and
icebp
mov
mov
fistpl
or
mov
adc
mov
fwait
xor
sarl
scas
xchg
xlat
outsb
pop
mov
int
jns
mov
int3
adc
mov
xor
dec
test
push
out
cld
scas
inc
cs
outsb
add
adcl
jmp
aam
stos
inc
fwait
cmc
or
out
inc
daa
mov
inc
cltd
inc
fmul
arpl
popf
xchg
jmp
cli
sbb
and
out
sbbl
cmp
popa
clc
mov
mov
push
fbstp
add
nop
mov
fcoml
scas
or
cs
sub
push
ljmp
jno
add
es
es
repnz
jmp
lods
inc
jo
jbe
lret
call
ljmp
je
lahf
movsl
cmp
es
ret
fmull
push
popf
adc
arpl
pushf
xor
sbbl
mov
fldenv
or
xchg
sub
pop
mov
jae
jle
xor
sarl
mov
and
outsl
push
mov
into
loope
testb
lret
sti
push
je
xchg
lret
xchg
sub
outsb
push
call
sub
outsl
push
repz
into
gs
mov
shlb
inc
cltd
repz
in
inc
sub
inc
xchg
inc
popa
pop
sahf
xchg
jmp
and
sbb
inc
mov
stc
mov
mov
pop
fnsave
jae
sahf
xor
mov
fistpl
scas
or
fidivl
sub
clc
jmp
dec
push
lods
jl
jb
add
xor
iret
and
push
jmp
stos
inc
jo
je
int3
arpl
xchg
mov
push
call
or
insl
lds
mov
rclb
fisttpll
push
popf
adc
sti
fwait
xor
fs
inc
fnstenv
xlat
pusha
testl
sub
pop
mov
je
jl
xor
iret
mov
mov
and
outsl
push
scas
cmp
loopne
testb
enter
push
jne
test
xor
dec
cmpsb
xchg
sub
insb
push
call
sub
iret
data16
mov
shll
inc
xchg
repnz
jmp
sub
jne
jmp
faddp
pop
pop
sahf
nop
call
and
sbb
push
stc
xchg
mov
pop
fnsave
sahf
xor
mov
ficompl
mov
mov
aaa
into
pop
idiv
in
mov
push
lods
jp
jae
add
sub
push
jmp
stos
inc
jo
jb
int
std
xchg
mov
push
out
inc
sbb
mov
imul
mov
mov
filds
popf
adc
cld
lcall
sbb
addl
push
mov
testl
daa
jle
pop
mov
jne
jp
xor
mov
mov
and
jo
lods
cmp
fidivs
mov
adc
or
sbb
dec
movsb
xchg
sub
imul
divl
pop
lock
iret
data16
es
popf
in
test
lods
inc
xchg
lock
ljmp
cmpl
out
cld
pop
mov
mov
push
inc
fdivl
mov
cli
xchg
mov
sbb
xor
je
sti
lahf
ss
dec
mov
mov
mov
aaa
into
pop
cmc
stc
nop
daa
jge
in
scas
dec
pop
scas
jns
jae
add
xchg
sub
ljmp
jno
jno
int
sti
xchg
les
orl
inc
pop
jo
mov
push
sub
mov
fiadds
sahf
packuswb
cwtl
xor
sbb
addb
or
cmp
aam
clc
add
es
pop
mov
jne
jns
xor
push
std
xchg
cmp
mov
mov
pop
fidivl
stos
cmp
fdivl
movsb
std
push
out
cs
push
lods
testl
int3
dec
mov
push
ljmp
jno
out
dec
iret
data16
nop
daa
inc
fwait
in
test
arpl
mov
jmp
or
cmpb
faddp
pop
or
adc
sbbl
add
xor
fs
test
mov
sbb
das
fnsave
mov
xchg
mov
mov
mov
mov
aaa
into
pop
hlt
cli
xchg
es
in
lods
inc
sbb
lcall
xchg
sub
push
jmp
je
inc
cmpsb
cmp
into
gs
nop
nop
daa
ret
test
inc
adc
ss
arpl
sub
icebp
mov
cmpl
gs
xchg
cs
jmp
or
stc
add
pop
nop
and
pop
push
mov
jbe
ja
xor
ss
cld
push
sbb
mov
cmp
fidivl
nop
mov
les
scas
cmc
dec
jbe
jg
ss
mov
push
jmp
repz
and
inc
shlb
push
xchg
sub
out
test
popa
scas
inc
xchg
in
or
sbb
ds
outsl
or
cmpl
dec
ffreep
pop
or
adc
test
data16
xor
gs
sbb
push
or
sbbl
sub
mov
xchg
mov
mov
mov
lahf
fnsave
cmp
push
repnz
xchg
and
push
in
stos
inc
sbb
std
xchg
aaa
into
enter
push
jmp
mov
movsb
cmp
insl
testl
scas
inc
adc
popf
xor
fs
out
xchg
cmpb
or
xchg
sub
mov
out
inc
fsubrl
shlb
add
mov
sbbl
loope
lahf
cmpsl
add
xchg
xor
mov
mov
sbb
jae
cmpsl
cmp
fsubrs
xchg
mov
ret
repz
ja
jge
aaa
into
inc
sahf
xchg
sub
push
in
xchg
icebp
mov
and
shrl
or
sub
xchg
out
xchg
pop
mov
xchg
ljmp
in
sub
insl
push
in
test
mov
mov
loopne
adc
sbb
incb
das
xchg
cld
sbb
sbbl
sub
jbe
mulb
xchg
mov
mov
mov
popf
fnsave
cmp
push
lock
xchg
and
out
test
lret
cld
xchg
aaa
into
sbb
push
in
sbb
dec
mov
shlb
mov
xchg
scas
inc
adc
movsb
pushf
xor
fs
jmp
mov
dec
loope
fmuls
mov
xchg
sub
mov
out
inc
fsubrl
into
arpl
lcall
pop
mov
sbbb
lods
loope
fbstp
aaa
movsl
add
xchg
xor
mov
mov
sbb
je
movsb
cmp
aad
sti
xchg
sahf
negb
daa
rcrb
icebp
dec
js
jp
cmp
inc
fwait
xchg
sub
xchg
out
mov
and
shrb
or
xchg
pop
mov
out
movsl
sbb
sub
push
out
test
mov
mov
push
stos
sub
fldt
xchg
sub
dec
data16
jg
ret
mov
loopne
pop
hlt
mov
xchg
scas
inc
rclb
sbb
add
cmp
push
out
cld
xchg
and
out
cmpsb
inc
sbb
stc
xchg
cmp
les
xchg
sub
in
in
push
outsb
mov
mov
rcl
repz
xchg
mov
punpckhbw
movsl
cltd
xor
bound
in
xorl
or
xchg
sub
mov
in
inc
int3
fs
std
pop
les
push
sbbl
stos
loop
fnsave
cmp
lds
mov
sbb
jne
mov
cld
xchg
popf
hlt
pop
icebp
and
inc
js
js
cmp
inc
cltd
xchg
sub
xchg
in
mov
push
mov
or
aas
shrb
or
les
mov
push
movsl
push
mov
loopw
sub
push
mov
mov
fldt
or
sub
fisubrl
dec
loopne
andl
push
mov
loopne
pop
repz
xchg
lods
inc
rcrl
sbb
lcall
cmp
push
in
std
xchg
push
jae
lock
aas
sbb
notl
xchg
sub
adc
mov
sahf
xor
shrb
mov
mov
dec
or
cs
pushaw
mov
in
test
aam
mov
es
push
mov
pop
loop
inc
fisubrs
lret
sti
push
lds
test
dec
test
mov
cwtl
sub
dec
pop
mov
push
fbstp
mov
std
xchg
fwait
repnz
repnz
jns
jbe
cmp
inc
xchg
xchg
cs
popa
pop
out
xchg
ljmp
out
shrl
pop
xchg
sub
nop
icebp
mov
pop
mov
mov
xsha256
cmpsb
adc
shrl
xor
lock
xchg
mov
fldcw
or
xchg
pop
stc
dec
loope
andb
jl
ret
pop
add
es
pop
icebp
movsb
cmp
jp
xchg
lods
inc
ret
int
mov
xchg
loopne
leave
pop
cmp
push
ljmp
mov
les
testb
cs
loope
out
adc
dec
popf
xor
gs
xchg
sub
fnstenv
cmpsl
xchg
sub
addr16
mov
out
test
rorb
add
mov
rcll
and
jbe
fbld
enter
push
pop
xchg
test
test
jnp
insl
mov
cltd
sub
rcrl
and
inc
lahf
ds
addr16
xchg
cltd
icebp
pop
repz
jp
jne
cmp
ds
cwtl
das
enter
nop
jmp
ja
in
aam
outsb
add
repnz
pop
mov
mov
adc
fidivs
lds
lock
xchg
push
push
movsl
sbb
add
movsl
sub
sub
pop
pop
testl
mov
push
pop
add
es
pop
out
movsb
cmp
jp
xchg
stos
inc
ret
int3
push
mov
xchg
loopne
push
cmp
xchg
sbb
repnz
ret
jns
cmc
lea
sarl
fistps
adc
dec
pushf
xor
arpl
xchg
sub
xlat
mov
or
xchg
sub
addr16
mov
out
out
test
rorb
add
add
scas
mov
loopne
dec
fbld
data16
notl
xchg
test
cmpsl
in
fldcw
cmp
mov
and
inc
sahf
aas
iret
gs
xchg
xchg
lock
hlt
and
jnp
je
cmp
cmp
cltd
xor
pop
pop
lock
mov
sbb
aad
insl
add
mov
push
mov
mov
adc
fdivl
das
fs
lock
xchg
mov
push
movsl
sbb
sub
aam
mov
pop
cmc
dec
loope
jg
ds
push
pop
add
xchg
push
in
movsb
cmp
jns
cwtl
stos
inc
ret
lret
pop
mov
xchg
loopne
lds
xchg
sbb
repz
ret
hlt
mov
sarl
pop
out
push
imul
insb
out
adcb
aad
dec
pop
arpl
test
pop
mov
out
out
test
into
or
lcall
add
and
ret
mov
fidivs
loopne
ljmp
notb
pop
test
xchg
xlat
push
cmp
ret
dec
and
inc
pushf
aas
int
call
pop
mov
jnp
jb
cmp
cmp
pop
icebp
out
dec
sbb
aad
imul
cs
repz
fists
test
test
das
cld
icebp
mov
test
mov
montmul
cmpsb
adc
add
mov
mov
pop
hlt
dec
loop
jge
ds
inc
imul
add
jecxz
push
in
movsl
cmp
ja
cwtl
test
ret
pop
jb
pop
mov
xchg
loope
lds
ds
out
xchg
sbb
repz
cmp
adc
mov
sarb
pop
lock
addr16
cltd
das
ja
popa
mov
xchg
sub
or
mov
pop
popa
adc
pop
mov
in
out
xchg
into
or
add
and
push
stos
mov
fdivl
loope
std
test
push
push
pop
adcb
push
dec
mov
movsl
cmp
testb
daa
mov
and
inc
lcall
xchg
in
pop
hlt
sbb
jnp,pt
jo
cmp
xor
pop
pop
repnz
mov
push
scas
jns
loopne
aad
imul
repz
adc
fisubrl
das
pusha
sti
repnz
dec
adc
push
mov
mov
pop
repz
jecxz
jnp
lods
inc
push
ja
lds
mov
lret
and
jp
in
cmpsb
cmp
cmpsb
aas
les
pop
mov
xchg
loop
les
ds
in
xchg
push
insb
pop
repz
aaa
push
mov
mov
cmp
mov
fistpl
or
mov
xchg
sub
aad
ljmp
mov
pop
adc
pop
mov
loop
lock
int3
push
movsl
std
push
insl
add
push
sub
and
jo
loop
sti
test
add
dec
pop
adcb
pop
dec
mov
cmpsb
cmp
and
inc
and
inc
cwtl
aas
leave
arpl
cwtl
xchg
ljmp
out
jnp
outsb
or
aad
cltd
xor
pop
pop
repz
mov
adc
jp
fbstp
cltd
xor
mov
mov
fistl
test
cmpsl
aad
fldcw
repz
dec
in
dec
adc
add
das
shll
dec
in
jns
ds
inc
imul
int3
lds
mov
leave
pop
in
push
ljmp
movsb
cmp
and
ret
dec
jecxz
cwtl
adc
pop
hlt
fwait
xor
jnp
out
xchg
xor
pop
repnz
dec
xchg
sub
pop
mov
insl
call
or
mov
shll
stos
mov
push
scas
xor
loopne
icebp
mov
lret
sti
push
outsb
add
dec
cmpsb
mov
fsubrs
jecxz
stc
stos
inc
sub
push
repz
enter
mov
inc
lahf
out
shll
ds
repnz
and
and
inc
xchg
inc
xlat
popa
add
sbb
adc
aaa
lea
hlt
mov
mov
adc
xor
insl
gs
cltd
xor
xchg
mov
ficoml
test
xlat
sub
pop
clc
repz
jg
in
dec
adc
add
mov
push
lock
in
js
aas
stos
inc
imul
lret
pop
std
xchg
mov
push
in
push
call
add
insl
les
mov
rclb
xlat
inc
loope
cwtl
adc
cmc
lcall
adc
test
xor
pop
repnz
push
xchg
sub
pop
mov
outsb
out
xchg
cs
or
lea
iret
mov
add
lea
shrl
scas
xor
fbstp
mov
enter
push
outsl
push
test
lds
lea
insb
dec
jecxz
clc
stos
inc
sub
leave
pusha
jge
mov
inc
sahf
out
shlb
ds
icebp
add
pop
jmp
and
ds
inc
fadd
pop
add
sbb
jge
imul
xor
push
pop
hlt
xchg
mov
adc
xor
outsb
fs
cltd
xor
xchg
mov
fsts
into
fidivrs
inc
inc
jp
dec
faddp
mov
inc
aam
outsl
or
test
jb
pushf
movsl
out
pop
loopne
gs
shr
xor
addps
add
jne
jle,pn
cwtl
data16
dec
sbb
jno
lods
cld
lock
sub
sbb
add
dec
pop
and
test
insb
or
std
jp
sub
fisttpll
ds
jge
inc
add
dec
add
mov
lods
mov
rcrb
das
pop
repnz
notb
sti
scas
pop
out
cs
lahf
or
adc
jno
jbe
mov
and
dec
add
push
dec
call
movsl
into
mov
xor
pop
xchg
cmp
dec
orl
sub
test
in
xchg
pop
add
leave
out
jmp
call
mov
pop
add
adc
jns
mov
mov
mov
notb
movsl
mov
mov
repnz
ds
stos
mov
lods
inc
mov
pop
clc
sub
cmpb
es
roll
pop
xchg
mov
insl
sub
in
xor
jl
mov
and
rcr
push
jns
inc
jecxz
fwait
lcall
cld
sbb
pushf
repz
sub
popf
xchg
xor
dec
add
loopne
and
adc
fidivrl
out
add
mov
loope
pop
lock
inc
in
xchg
stos
popa
sub
addr16
les
mov
cs
and
dec
add
notb
mov
pusha
adc
popa
jo
sub
pop
mov
sbb
scas
ja
mov
out
mov
stos
js
jmp
push
lods
pushf
jmp
mov
fcomp
mov
popa
inc
bound
adc
jmp
std
add
out
sbbl
sahf
test
or
mov
scas
stc
xchg
les
outsb
xchg
and
dec
lock
mov
push
iret
subb
mov
mov
mov
mov
sahf
dec
mov
or
jb
addl
push
mov
adc
jb
sub
daa
jae
repz
and
or
sub
cmp
add
popa
push
popf
fisubrs
inc
mov
fs
add
cld
add
add
cli
push
call
pop
stc
xchg
loopne
ljmp
nop
loope
outsl
and
loope
nop
rcl
xor
mov
mov
test
sarb
cmp
mov
inc
sahf
arpl
xchg
enter
lds
incl
jle
xlat
frndint
xor
push
dec
mov
pop
fwait
dec
mov
popa
push
mov
jecxz
jnp
sbb
insl
xchg
inc
cmp
mov
xor
rcrb
xchg
or
outsl
test
out
fcomps
loope
jp
jbe
fimuls
add
es
ja
mov
and
iret
rol
push
mov
mov
fiaddl
shlb
ss
leave
cmpsb
loopne
insl
xor
je
call
push
xchg
in
sbbl
fs
cmp
xor
push
fstl
dec
pop
pop
scas
push
adc
xchg
add
mov
mov
out
pop
or
in
sbb
outsb
mov
jo
or
xor
fnsave
xor
mov
das
pop
xor
cmpsl
in
test
xchg
fadds
xor
lcall
pop
sbb
fdivr
and
add
inc
and
dec
notl
fwait
outsb
xlat
add
xchg
jo
insl
mov
push
rep
mov
loope
jne
mov
mov
sub
sbb
cmp
xchg
fmulp
iret
gs
ret
cmp
mov
xor
sub
lds
faddl
call
out
xchg
cmc
popa
inc
pop
sqrtps
addl
sub
das
inc
scas
dec
xor
push
cli
pop
push
jp
data16
xor
push
add
lods
xor
xchg
repnz
push
add
iret
je
xor
inc
mov
test
mov
push
sahf
push
mov
add
or
mov
cmp
jo
sub
push
push
mov
sbb
mov
mov
mov
fbstp
lahf
sub
or
addl
lds
lods
add
push
pop
push
sub
movsl
rcrb
inc
out
xchg
dec
and
lock
movsl
xchg
out
lcall
inc
repnz
cmp
pop
test
inc
call
fidivs
imul
addb
call
outsb
jle
mov
sbb
imul
aaa
insl
imul
ficomps
xchg
inc
int3
sub
cli
or
and
jb
push
sub
xchg
lcall
mov
int
adc
je
rclb
aas
test
notl
lcall
es
push
and
push
sub
xor
mov
popa
sbb
inc
shr
gs
inc
int
mov
mov
dec
insl
push
mov
xchg
outsb
jo
mov
xchg
pop
inc
sub
add
fs
lcall
add
pop
cld
add
repnz
jbe
sub
in
mov
xchg
add
scas
repz
cmp
stos
jmp
pop
lret
sbb
repnz
jb
xchg
cmpb
pushf
lea
lds
out
push
je
icebp
adc
bound
rcpps
sub
xor
rcrb
pop
loope
xor
mov
in
adc
cmpsl
push
out
adc
cs
inc
mov
sarl
xor
fdivrs
xchg
andl
das
sub
inc
dec
lret
mov
call
inc
ret
push
mov
xchg
sahf
es
cwtl
aas
push
adc
lods
lods
add
push
stos
cmc
or
pusha
cltd
shr
idiv
adc
jbe
push
out
dec
inc
push
sbb
int3
repnz
and
and
loopne
daa
mov
mov
into
rorb
push
jle
cld
cld
imul
fbld
push
pop
addl
movsb
xchg
decl
movsl
icebp
std
dec
xor
shufps
test
lock
xchg
ja
xchg
push
xchg
out
inc
xor
mov
xor
mov
ret
mov
mov
mov
push
mov
shl
jns
fnstsw
xchg
sub
pusha
cmpsb
mov
stc
or
movsl
imul
pop
xor
loope
lock
jge
jle
push
sub
into
mov
cmp
push
data16
xchg
notl
or
jbe
pop
pop
mov
icebp
in
dec
aaa
adcb
mov
sti
jnp
or
js
test
xchg
in
bound
add
inc
sub
aam
ja
mov
jo
and
dec
call
jbe
and
mov
bound
loop
aam
dec
adc
cli
pop
leave
mov
lahf
xor
les
cmp
sub
aad
jl
inc
xchg
xchg
adc
imul
add
hlt
jbe
pop
xchg
jns
rcr
mov
lods
mov
fcomps
adc
pop
jecxz
push
test
dec
sbb
jg
out
xor
fsubr
inc
in
pop
in
jo
sub
insb
jl
or
push
pop
pop
sub
adc
out
popa
jo
test
enter
push
add
stos
push
sti
or
call
inc
ss
leave
daa
adc
push
pusha
es
and
xchg
sub
insb
sbb
cmp
ret
pushf
sub
enter
cmpsl
cmp
negl
rcrb
gs
xchg
mov
daa
push
xchg
xchg
xchg
sbb
xchg
xchg
fsubs
cmp
adc
bound
pop
and
xchg
daa
stc
dec
and
and
std
aas
dec
ret
testb
addr16
outsl
pop
cmpsb
nop
outsb
sub
xchg
outsl
pop
test
outsb
sub
xchg
outsl
push
stos
nop
outsb
fistl
insb
and
out
push
scas
rcrb
ja
das
push
pusha
jg
jp
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
jl
je
ja
addr16
fadds
jmp
adc
jmp
jb
pop
jnp
sbb
test
sub
aad
test
mov
jnp
adc
daa
xchg
push
cmp
xor
add
jecxz
std
pop
pop
mov
sub
adc
jns
pop
mov
push
.byte
add
