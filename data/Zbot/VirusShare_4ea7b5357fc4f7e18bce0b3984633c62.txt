add
add
pop
push
mov
sub
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
lea
pop
mov
ret
add
add
in
pop
push
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
add
add
mov
add
add
nop
add
add
add
add
add
add
add
add
inc
mov
and
sub
lods
mov
mov
shl
lea
mov
mov
add
stos
mov
push
pop
cmp
je
sub
sub
je
sub
mov
add
mov
cmp
je
mov
sub
jne
lea
jge
popf
pushl
pop
dec
call
jmp
add
stos
push
mov
sub
push
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
add
in
pusha
push
push
lea
push
lea
push
subl
lea
push
pushl
subl
pop
call
pop
mov
xor
adc
sub
mov
pop
mov
mov
lea
mov
push
mov
addl
pop
push
pop
xor
xor
push
popl
add
and
addl
clc
adc
pushl
lea
lea
pop
repz
add
cmp
jne
mov
pop
ret
add
add
add
add
add
add
add
push
mov
sub
push
pushl
push
pushl
call
add
pop
lea
pop
mov
ret
add
add
push
mov
sub
push
pushl
push
call
add
pop
lea
pop
mov
ret
add
add
add
add
add
add
add
in
pop
push
push
push
call
add
pop
lea
pop
mov
ret
add
add
add
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
.byte
nop
mov
and
add
and
add
and
add
add
int3
and
add
add
enter
push
and
add
and
add
add
ljmp
add
add
cld
and
add
and
add
and
add
add
mov
add
bound
add
int3
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
sbb
add
and
add
and
add
add
add
add
hlt
and
add
and
add
and
add
add
and
add
add
test
add
inc
and
add
add
add
and
add
and
add
and
add
add
int3
and
add
add
enter
push
and
add
and
add
add
ljmp
add
add
cld
and
add
and
add
and
add
add
mov
add
bound
add
int3
and
add
add
and
add
and
add
and
add
and
add
and
add
and
add
add
add
add
sbb
add
and
add
and
add
add
add
add
dec
add
insb
outsb
inc
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
popa
jo
jb
add
test
inc
jb
popa
je
inc
jbe
outsb
je
add
enter
jae
gs
popa
insb
jne
add
add
imul
jb
je
arpl
imul
je
imul
push
add
inc
add
outsl
jae
dec
popa
outsb
fs
gs
add
je
jb
jbe
push
jns
gs
add
push
gs
insl
gs
push
add
push
add
je
jb
arpl
jae
gs
imul
gs
je
jb
jne
dec
outsb
outsw
inc
add
popa
je
inc
jbe
outsb
je
add
lods
add
je
outsl
insb
jne
gs
popa
je
dec
popa
insl
gs
add
je
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
add
das
add
outsb
fs
je
insl
push
add
add
fs
imul
add
dec
add
je
jb
arpl
jae
gs
jo
add
popa
je
inc
jbe
outsb
je
add
aad
inc
gs
gs
inc
imul
dec
inc
dec
xor
cs
insb
add
pop
add
je
jo
jo
outsb
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
insl
push
insb
jne
dec
imul
add
add
arpl
gs
outsl
jb
inc
popa
je
jae
add
add
je
jo
jo
outsb
add
inc
inc
inc
push
push
cs
insb
add
inc
jb
ja
gs
outsl
jb
push
dec
add
outsl
add
jo
jb
push
push
outsl
push
inc
popa
je
add
insl
add
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
outsb
add
inc
gs
insb
popa
jae
dec
bound
arpl
push
inc
inc
dec
push
cs
insb
add
add
add
add
xor
add
pop
add
orb
add
jo
add
mov
add
add
add
add
add
mov
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
or
add
inc
add
test
add
cmp
add
add
add
add
add
ja
add
add
add
add
add
add
add
add
add
xor
add
cwtl
roll
add
add
add
add
add
add
add
add
and
add
add
andb
add
imul
sub
add
mov
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jge
jl
jnp
stos
stos
stos
add
cmpsl
push
mov
mov
mov
ret
les
int
int
rcl
shr
rcl
shl
iret
iret
shl
int
int
leave
leave
leave
repz
vshufps
mov
mov
lods
lods
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
mov
and
mov
leave
lret
not
rcl
cld
fcom
std
xlat
fdivr
xlat
xlat
xlat
aad
dec
iret
iret
dec
into
int
aad
ror
sar
ret
std
mov
mov
scas
iret
movsl
mov
mov
cs
add
push
add
add
add
add
add
add
add
add
lods
lods
lods
add
lods
lods
sbb
mov
jnp
mov
sar
mov
leave
lret
rcl
iret
aad
xlat
fcom
call
fcomp
call
aam
dec
int3
int
int
into
call
aad
dec
int
inc
sarb
mov
lods
scas
std
cmpsl
cmpsl
cmpsl
ljmp
pop
fs
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
pop
pop
pop
add
inc
add
pop
add
push
or
or
sbb
push
add
add
add
add
or
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
leave
dec
int3
into
call
rcl
call
xlat
fcomp
call
aam
dec
int3
into
dec
lret
leave
dec
into
into
inc
rol
mov
mov
ljmp
mov
lcall
and
push
add
add
add
cmp
add
sub
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
imul
fs
push
sbb
prefetchw
sub
push
push
xor
cmp
aaa
cmp
cmp
and
and
push
push
push
pop
add
add
add
add
arpl
add
mov
pop
mov
mov
mov
mov
mov
mov
ret
enter
iret
sar
aad
aad
aad
call
iret
sar
leave
leave
leave
inc
inc
mov
mov
ljmp
mov
sahf
cwtl
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
jo
jge
jge
jle
jge
jb
jo
arpl
mov
cmp
cmp
mov
outsb
outsb
jo
bound
pusha
inc
inc
inc
xor
add
add
add
add
movsb
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
leave
dec
leave
leave
dec
lret
leave
dec
enter
mov
mov
scas
lods
scas
jmp
fwait
lcall
xchg
xchg
xchg
xchg
cwtl
lcall
lahf
ds
add
xor
add
sub
add
and
add
sbb
add
adc
add
pop
outsl
outsl
outsb
add
pop
or
jl
nop
mov
xchg
xchg
xchg
incb
jnp
jnp
jl
outsb
outsl
jo
push
push
jae
jle
jg
jp
jp
arpl
fs
inc
inc
cmp
sbb
sbb
adc
or
lods
stos
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsb
test
lcall
xchg
incl
test
xchg
xchg
xchg
lahf
lahf
lahf
sti
mov
cwtl
cwtl
mov
jp
jns
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
jno
cltd
popf
in
mov
mov
addb
decb
xchg
jle
jge
jb
jo
jne
jae
jge
jg
test
xchg
addr16
cmp
ss
jle
cmp
movsl
mov
test
sti
lods
lods
lods
stos
lods
lods
stos
test
movsl
std
fwait
cltd
lcall
xchg
js
jp
jnp
jnp
mov
xchg
mov
mov
sti
mov
mov
mov
mov
mov
scas
lods
stos
xchg
push
adc
add
or
add
add
add
add
add
add
pop
pop
adc
mov
mov
xchg
xchg
xchg
incl
test
mov
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
or
addb
mov
push
push
or
inc
inc
dec
insl
insl
insb
jl
xchg
leave
cltd
lcall
lcall
std
mov
decl
mov
fwait
cltd
fwait
jmp
scas
mov
mov
mov
mov
mov
std
mov
mov
movsb
mov
jnp
scas
cmpsl
stos
add
pop
adc
cmpsl
scas
call
cltd
xchg
xchg
incl
xchg
decb
xchg
pushf
sahf
pushf
std
movsb
movsl
movsb
stc
mov
xchg
xchg
in
nop
nop
in
xchg
push
jne
or
add
inc
sub
es
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
xchg
std
lea
call
mov
cmpsl
ljmp
test
scas
mov
xchg
test
mov
xchg
lods
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
les
lcall
mov
decl
nop
nop
xchg
xchg
xchg
popf
pushf
pushf
movsl
movsb
movsl
test
movsb
mov
fstpt
jnp
push
push
push
outsl
dec
dec
dec
popaw
pusha
bound
je
mov
jge
test
mov
xchg
xchg
in
xchg
xchg
testl
mov
jmp
mov
mov
pop
mov
aaa
jg
mov
js
mov
movsb
mov
mov
mov
mov
movsl
movsb
add
mov
add
pusha
adc
mov
ljmp
popf
decl
nop
call
xchg
xchg
call
cwtl
cltd
cltd
fwait
lcall
movsb
movsl
mov
stc
xchg
cltd
lcall
nop
xchg
les
xchg
lcall
xchg
cmc
xchg
test
std
xchg
jae
fwait
imul
ljmp
jp
mov
je
mov
insl
ljmp
packuswb
lods
or
lods
or
mov
jge
mov
mov
lods
pushf
movsl
movsb
mov
add
mov
add
pusha
adc
mov
ljmp
sahf
call
xchg
xchg
lcall
pushf
pushf
jmp
popf
popf
lcall
xchg
xchg
call
xchg
xchg
call
xchg
lcall
fwait
sahf
stc
lahf
xchg
popf
cld
pushf
xchg
xchg
imul
xchg
dec
jp
fwait
cmp
insb
pushf
push
push
jmp
ljmp
adc
lods
adc
scas
adc
mov
imul
adc
mov
insb
mov
cltd
scas
mov
scas
lods
scas
movsb
movsl
movsl
sub
mov
add
add
add
add
pop
pop
adc
mov
ljmp
popf
call
popf
popf
lcall
movsb
movsl
jmp
mov
xchg
decl
mov
decl
mov
cltd
jno
cltd
bound
call
sub
decl
or
xchg
add
call
add
lahf
push
pop
jmp
sbb
mov
outsl
pushl
push
outsb
mov
and
and
mov
inc
test
ret
mov
scas
scas
mov
lahf
lahf
sahf
add
add
add
add
add
pop
pop
adc
scas
mov
mov
cltd
sahf
lcall
movsb
mov
jmp
stos
stos
jmp
lcall
mov
decl
push
mov
popa
decl
adc
incl
add
push
incl
add
nop
add
xchg
add
lcall
jmp
push
jo
mov
jne
mov
sub
inc
sub
les
jnp
sub
dec
xor
enter
enter
enter
mov
mov
lret
mov
add
add
add
add
lods
mov
push
adc
test
mov
mov
mov
test
ljmp
mov
ljmp
mov
mov
mov
arpl
xchg
push
incl
add
addb
incl
add
mov
push
decl
add
xchg
add
cltd
add
sahf
add
movsb
add
scas
adc
mov
aaa
cmp
aaa
cmp
cmp
int3
cmp
call
cmp
mov
rorl
dec
mov
std
mov
mov
movsl
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
cmpsb
ljmp
lahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
js
decl
push
decl
push
push
decl
or
add
push
decl
pop
call
pop
jmp
add
stos
add
jb
les
test
lret
dec
inc
call
inc
call
dec
fmuls
call
dec
xchg
fimull
fisttpll
fistl
call
test
std
mov
mov
movsl
mov
lahf
or
add
add
add
add
dec
dec
adc
jl
popf
mov
lcall
test
pushl
mov
pushl
mov
mov
scas
mov
mov
aaa
outsb
decl
pusha
call
adc
decl
or
mov
push
call
add
sahf
add
add
cmpsb
add
test
push
gs
and
mov
push
cwtl
call
push
fwait
fistl
fstl
ficomps
ficomps
jmp
pop
mov
jmp
pop
mov
dec
mov
mov
cmpsl
test
jne
mov
sahf
add
inc
inc
adc
ja
mov
mov
sahf
ljmp
mov
pushl
mov
mov
pushl
xchg
mov
decl
and
push
call
or
call
add
lcall
jmp
add
mov
fs
mov
xor
call
pop
fwait
ficompl
fbld
fbld
jmp
cmpsl
jmp
gs
out
test
ljmp
fildl
mov
cmpsb
cmpsb
mov
mov
add
add
add
xchg
xchg
xchg
add
inc
inc
adc
jae
fwait
xchg
cwtl
call
mov
scas
lods
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
fwait
jo,pn
fwait
xor
cwtl
daa
imul
xchg
or
xchg
add
cltd
add
mov
add
lods
add
mov
pushl
adc
rolb
fsubrl
jmp
outsl
lods
jmp
jo
jmp
jb
call
jae
in
jae
out
jne
out
jbe
in
je
jmp
xchg
mov
cmpsl
test
lahf
lahf
lahf
pop
sahf
lahf
mov
add
add
add
jle
cmp
insb
outsb
js
mov
lcall
mov
mov
mov
mov
mov
mov
mov
cmpsb
scas
lcall
xor
mov
cmp
mov
sbb
call
pop
lcall
add
test
add
mov
fs
mov
sbb
fsts
jmp
jbe
call
jge
in
jg
out
cmpl
push
test
push
cmpb
aam
mov
stos
cmpsl
sahf
sahf
popf
daa
lahf
mov
mov
add
pusha
add
aaa
cmp
pop
pop
pop
jne
jge
out
test
xchg
xchg
xchg
pushl
mov
mov
mov
ret
rol
pushl
outsb
mov
lcall
jmp
cmp
fwait
sbb
add
sahf
add
add
test
pop
ljmp
add
mov
add
dec
and
movsb
ljmp
in
mov
push
pop
push
pop
push
xchg
push
xchg
xchg
in
mov
lods
stos
mov
popf
pushf
xor
pushf
add
add
add
inc
cmp
push
inc
dec
inc
jb
pop
dec
in
imul
pushl
mov
inc
mov
ret
ret
ret
mov
jl
lcall
dec
jg
lods
dec
test
movsb
xor
lcall
add
mov
add
stos
add
mov
fs
mov
add
enter
fdivs
jmp
ja
in
xchg
cltd
push
cltd
push
fwait
fwait
lret
lcall
cld
popf
int
cli
lahf
int
sti
cwtl
lret
xchg
ret
fidivrs
cli
mov
mov
lahf
sahf
sahf
aas
xchg
nop
popl
lcall
add
cs
cmp
outsb
dec
dec
dec
jecxz
pop
pusha
decl
mov
mov
mov
sar
mov
enter
mov
mov
ljmp
dec
xchg
movsl
sub
cltd
push
pop
lcall
add
stos
add
mov
mov
add
movl
jne
fiadds
out
mov
push
movsb
int3
push
movsl
into
clc
test
cli
cmpsl
iret
cli
movsl
into
sti
cmpsl
into
stos
sar
stos
iret
cld
test
jmp
mov
dec
enter
mov
into
lahf
mov
xchg
add
fwait
fwait
add
add
add
sub
inc
inc
inc
bound
pop
xlat
jne
jb
mov
rol
ret
mov
ret
ret
ret
inc
mov
pushl
push
xchg
scas
push
mov
scas
dec
xchg
lahf
sbb
sahf
add
jmp
add
mov
mov
add
int
outsb
fadds
je
ficoms
jl
out
pop
cmpsl
push
popf
leave
cld
scas
aam
cli
mov
cli
scas
sar
cld
scas
sar
cld
mov
cld
mov
cld
mov
std
mov
std
mov
std
mov
push
movsb
jmp
mov
dec
enter
mov
ficompl
xchg
xchg
or
add
add
xor
sbb
dec
dec
dec
outsb
outsl
jo
cwtl
cltd
lcall
fcomp
jmp
xlat
not
rcl
std
int3
into
into
dec
leave
lret
dec
lret
lret
inc
enter
lahf
scas
jmp
push
mov
lods
cmp
arpl
mov
add
mov
mov
add
rolb
outsb
call
add
filds
je
call
jae
sti
lods
aad
std
mov
cld
mov
fcos
cld
mov
xlat
cld
mov
fdivr
std
mov
fcos
stc
mov
jmp
mov
call
lret
mov
mov
xchg
or
add
add
xor
add
add
or
mov
pop
out
call
test
jecxz
leave
fstp
fsubp
fcmovnu
fcomi
fcomp
fsqrt
xlat
fdivr
into
ror
mov
push
ljmp
sub
mov
add
mov
mov
add
leave
add
add
faddl
ja
jecxz
ja
in
das
xchg
push
mov
cld
mov
loopne
inc
loopne
std
std
fdivrp
inc
loopne
std
fdivrp
std
std
loopne
dec
std
lret
sti
mov
enter
into
mov
mov
xchg
adc
add
add
std
add
std
add
std
incb
hlt
cmc
testb
out
in
pop
jmp
out
sub
out
in
dec
jmp
call
jmp
aad
jmp
mov
xchg
cmpsb
cmp
mov
add
test
add
add
lds
imul
add
add
filds
ja
ljmp
sti
mov
loop
std
lret
dec
in
dec
in
std
into
loop
dec
loop
dec
loopne
dec
jecxz
dec
in
shl
call
in
cld
fcos
in
mov
fdivr
ret
ret
out
cmpsl
cmpsb
test
xchg
xchg
xchg
sbb
cltd
cltd
add
incl
incl
idiv
clc
add
repz
hlt
icebp
push
out
lock
in
lock
out
in
pop
fsubp
loop
lds
xchg
sti
lahf
and
lcall
add
add
mov
gs
add
movl
jno
fiaddl
jne
jecxz
jp
in
push
jle
negl
sti
mov
dec
out
cld
iret
in
std
shr
shl
call
in
std
aam
jmp
std
fucomi
std
fldl2t
std
fldl2t
std
shl
push
aad
jecxz
lret
repz
xchg
xchg
and
xchg
xchg
add
cli
add
cld
testl
repz
or
aad
xor
jb
negb
add
cmpsb
add
lods
add
mov
add
lret
add
add
fldl
ja
out
ja
in
sbb
sti
ret
loopne
xlat
call
std
fldl2e
std
fucomp
std
fucomp
fucomi
fsubrp
std
fucomip
std
fucomip
std
shl
push
aam
out
rcl
iret
clc
lods
lods
lods
lods
xchg
xchg
xchg
outsb
outsl
outsl
add
add
add
loope
add
leave
sbb
stos
jnp
repnz
and
sahf
add
test
pusha
pushl
add
ret
dec
add
add
loopne
je
jmp
sub
std
shl
jmp
lock
std
fucomp
std
xlat
jmp
cld
shl
cld
shl
cli
shl
clc
int
push
lret
fdivr
cmc
rcl
in
mov
call
sti
mov
mov
lcall
add
add
add
fcom
add
mov
subb
push
sahf
add
ljmp
add
mov
add
rolb
jo
add
add
call
xor
cli
leave
cli
lret
sti
fdivrp
clc
mov
aad
repz
into
push
mov
int
jmp
mov
iret
std
call
vmaskmovdqu
fsub
cmc
loopne
mov
mov
xchg
add
add
add
into
int
mov
mov
movsl
loopne
xor
jmp
add
mov
addr16
mov
add
into
or
rorl
jne
fsts
ja
loope
cmp
dec
xchg
jmp
scas
lret
jmp
scas
leave
std
loope
cld
fidivs
mov
leave
ljmp
into
rcl
shl
fcmovnb
call
in
test
out
out
popf
call
lret
lods
stos
stos
adc
cmpsb
cmpsb
cmpsl
add
ret
rolb
ret
rolb
ret
rcrl
stos
aam
dec
cmp
sbb
test
push
lods
es
mov
jns
mov
dec
xchg
ret
push
stc
lret
test
mov
out
mov
mov
enter
lret
rcl
int3
mov
iret
shll
xlat
aam
jg
fcmovnu
jb
gs
in
out
jmp
xor
cmc
div
and
icebp
lock
fstp
or
mov
int
xchg
add
mov
rol
mov
scas
mov
test
imul
mov
popf
in
mov
sarb
mov
les
ret
ret
int3
leave
int
iret
into
into
addr16
iret
rclb
rcl
dec
xlat
inc
aam
aam
daa
fistpl
fcmovnu
fcoml
fsub
jecxz
loope
in
out
jmp
add
cli
testb
std
add
std
add
incb
mov
mov
mov
mov
lods
mov
mov
mov
mov
mov
ret
push
rol
inc
ror
xor
int3
leave
daa
int
shlb
rcl
rcrl
iret
rcll
rcl
rorb
rcr
aam
aam
fadds
add
in
add
in
jmp
add
std
std
add
mov
add
ret
ret
sub
mov
mov
push
rol
or
leave
movb
leave
movl
leave
aam
add
add
fcom
add
add
aam
add
add
aam
add
loopne
add
fstp
add
in
add
icebp
repnz
std
incl
incb
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
ret
ret
mov
mov
mov
test
stos
dec
test
cmpsl
and
add
add
add
add
add
add
add
add
mov
push
sarb
aam
into
into
jmp
rcl
cmc
aam
aam
into
iret
into
cli
lret
int
stc
lret
lret
mov
mov
iret
stos
stos
stos
fwait
xchg
xchg
xchg
dec
aas
ds
add
sbb
add
adc
add
push
add
add
addb
add
push
push
add
add
add
add
add
add
add
add
add
mov
mov
mov
leave
cld
into
iret
into
aad
call
aad
call
rcl
dec
into
iret
dec
lret
lret
mov
mov
stos
stos
lods
icebp
xchg
cltd
cltd
mov
or
or
add
add
add
add
add
add
add
add
add
add
jae
jne
je
je
fs
dec
inc
dec
cmp
sub
sub
ss
sub
adc
sub
add
add
mov
mov
mov
mov
mov
mov
dec
lret
rcl
sar
aam
sar
lret
inc
mov
pushl
test
popf
cwtl
xchg
xchg
jmp
jno
xchg
push
push
push
dec
add
add
add
add
add
add
jg
addl
test
jp
imul
pop
pop
pop
movsb
push
push
push
stos
push
insb
insb
push
pop
pop
cmp
cmp
pop
jo
jo
scas
scas
scas
pop
mov
mov
mov
mov
mov
ret
mov
mov
mov
cmpsl
cmpsl
test
lcall
xchg
xchg
xchg
fwait
cltd
cltd
out
test
movups
xor
add
and
add
adc
add
pop
lcall
pop
fwait
xchg
lcall
addl
jmp
jp
sarb
jnp
jp
jp
jae
jb
push
push
push
cmp
jne
popf
pushf
sahf
mov
scas
lods
repz
scas
lods
sti
scas
scas
scas
std
test
pushf
pushf
call
xchg
call
mov
scas
jmp
scas
lods
leave
movsl
movsl
movsb
cltd
jae
jae
adc
adc
add
add
add
add
insl
outsl
insl
pop
mov
loop
cwtl
sahf
incl
mov
sti
xchg
xchg
xchg
lock
xchg
nop
fimuls
mov
jp
pop
and
inc
inc
dec
outsl
jo
orl
cwtl
cwtl
repnz
xchg
xchg
std
mov
call
sahf
popf
ljmp
mov
mov
scas
mov
mov
mov
movsl
movsb
movsl
pop
jg
jg
popa
pop
pusha
or
lods
mov
cmpsb
mov
mov
mov
call
sahf
lahf
sti
sahf
mov
cltd
call
push
push
push
jo
pop
pop
outsl
imul
jg
subl
mov
lcall
mov
pushl
pop
mov
mov
jge
mov
scas
stos
insl
stos
test
add
add
add
pusha
popa
pusha
or
mov
in
mov
xchg
call
xchg
lcall
lcall
fwait
lahf
pushf
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orb
xchg
insb
test
xchg
pop
cmp
dec
jnp
mov
aaa
jbe
mov
je
mov
outsb
ljmp
sbb
mov
mov
mov
mov
jle
mov
add
add
add
pop
popa
pusha
or
mov
in
movsl
test
lcall
mov
lahf
call
decl
jp
std
xchg
jae
cld
cwtl
pusha
cmp
dec
jns
cmp
xchg
sub
xchg
sbb
xchg
adc
sahf
punpckldq
test
ljmp
pushl
sbb
mov
and
mov
stos
mov
scas
scas
scas
xchg
popf
lahf
sahf
adc
add
add
popa
pusha
pusha
or
stos
mov
test
lahf
lahf
ljmp
test
cmpsl
lcall
pop
jns
mov
imul
sub
sbb
pop
incl
push
push
decl
add
popf
add
cmpsl
or
mov
jae
mov
das
jge
les
jge
das
cmp
lret
inc
stos
mov
mov
mov
test
test
add
add
add
pop
or
movsb
test
jmp
scas
mov
mov
mov
mov
mov
cmpsb
cwtl
mov
decl
addps
test
push
incl
add
popl
push
call
add
add
mov
insl
inc
aaa
test
lret
inc
mov
rolb
call
inc
nop
call
inc
xchg
fadds
call
popa
popf
dec
cmpsb
mov
mov
movsl
movsb
daa
incb
add
add
pusha
pop
popa
or
mov
ljmp
mov
mov
mov
stos
lcall
pop
arpl
xchg
sbb
lea
pop
decl
push
call
add
cmpsl
add
scas
add
mov
dec
xchg
fsts
ficompl
jmp
pop
lahf
jmp
pop
mov
fisubrs
dec
cmpsl
mov
ret
cmpsb
xor
add
add
dec
pop
jge
jl
popf
cwtl
cltd
jecxz
lahf
mov
pushl
mov
mov
jmp
cs
lcall
and
call
add
sahf
add
add
scas
add
mov
xor
loope
stos
jmp
outsb
lods
call
jo
in
jb
jmp
test
mov
inc
jg
jg
add
add
dec
dec
dec
pop
insl
insl
insb
bound
cltd
xchg
ljmp
mov
mov
mov
jbe
lcall
cmp
popf
sub
call
add
movsl
add
stos
add
mov
fs
or
aad
xchg
jmp
jns
jmp
test
push
xchg
push
mov
mov
cmpsl
cmpsb
push
fwait
lcall
sub
sub
push
push
dec
pop
imul
mov
mov
mov
mov
ret
mov
pushf
jmp
inc
cmp
sub
lcall
ljmp
add
add
lret
adc
mov
push
xchg
cltd
xchg
clc
lcall
notb
inc
mov
lods
popa
lahf
lahf
lahf
or
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
rol
ret
xchg
test
movsl
push
xchg
lods
dec
test
mov
add
pusha
pushl
push
fisubl
cmp
jnp
push
movsb
lret
push
test
cli
stos
into
sti
stos
iret
cld
lods
sar
cld
lods
sar
stc
cmpsl
int
out
enter
in
test
pushf
sahf
or
add
add
dec
dec
dec
aaa
jb
jb
stos
stos
stos
ror
int
out
iret
int
lret
int3
lret
sti
enter
enter
mov
bound
mov
add
mov
gs
add
int
insl
fildl
clc
xchg
std
mov
mov
xlat
cld
mov
mov
sar
ljmp
repz
scas
scas
mov
add
add
add
add
pop
or
aad
dec
loopne
loope
loopne
loopne
fstp
fcmovnb
fcmovu
xlat
out
shlb
test
je
cmpsb
push
pop
ljmp
add
leave
add
add
in
jl
icebp
push
mov
std
loopne
inc
loop
std
loopne
std
loopne
dec
std
lret
cld
lock
leave
divb
popf
sahf
sbb
add
add
std
std
add
incb
jmp
or
in
in
sbb
in
jmp
ljmp
xchg
mov
mov
mov
add
mov
arpl
ret
dec
add
fldl
jne
call
outsb
mov
std
ret
fdivrp
cld
shl
shl
call
out
call
out
aad
fsubr
cld
shl
push
xlat
fmul
sar
mov
mov
add
std
std
add
std
incb
cld
std
cld
pop
aad
aam
mov
pop
xchg
lahf
or
ljmp
add
add
roll
outsl
fiadds
ja
out
pop
mov
clc
mov
std
shl
std
fldl2e
fldl2e
cld
xlat
out
std
fsub
std
fld1
xlat
out
sti
shl
push
fdivr
aad
mov
popf
popf
das
add
add
int
into
or
arpl
ljmp
add
movl
jae
loopne
ja
in
xor
sti
int
stc
lret
test
aad
icebp
rcl
lock
sar
out
vpsubw
aad
ljmp
ljmp
stos
das
std
add
add
add
push
mov
jae
push
data16
mov
insl
inc
sbb
lret
and
cs
ficoms
clc
jecxz
mov
out
in
leave
jmp
fnstsw
lret
leave
loopne
sarb
in
fistpl
out
jmp
rorl
mov
add
stos
stos
stos
add
xchg
movsl
les
xchg
mov
nop
fidivrl
andb
into
lahf
mov
shll
enter
int
aam
into
pop
aam
iret
dec
fcom
xlat
cmp
das
in
frstor
in
icebp
adc
in
in
or
std
std
add
add
add
incb
mov
mov
outsb
scas
mov
scas
mov
push
mov
mov
shrl
leave
enter
rclb
rol
adc
rcl
or
loope
or
int
add
std
std
std
add
std
incb
lcall
shufps
or
int3
int3
int
lods
lods
stos
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
fwait
lcall
ret
mov
leave
mov
rol
mov
scas
mov
insb
stos
lods
stos
xor
je
add
add
add
add
add
add
add
add
add
add
add
add
stos
lods
stos
add
mov
jmp
aam
aad
rcl
sar
into
iret
int
stc
mov
mov
test
jg
gs
push
push
add
add
add
add
add
add
add
add
jno
jb
push
inc
inc
das
sub
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
aam
dec
iret
int
mov
mov
scas
scas
jmp
mov
push
add
add
add
add
jne
jae
test
adc
arpl
mov
pushw
outsl
outsl
jb
bound
pop
pop
pop
sbb
mov
in
mov
mov
mov
lods
stos
lcall
xchg
xchg
lcall
cwtl
xchg
lds
jae
daa
and
add
add
add
je
jb
popf
xchg
pushf
mov
test
xchg
xchg
test
addb
push
dec
push
inc
mov
pushf
into
mov
mov
xchg
decb
lea
ljmp
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
xorb
stos
mov
cmpsl
cld
mov
mov
xchg
xchg
xchg
cld
popf
pushf
pushf
cmc
lcall
mov
push
push
imul
jle
mov
notl
mov
mov
lcall
jno
mov
lods
lods
push
lods
stos
stos
add
add
add
test
test
xchg
xchg
xchg
call
lcall
cltd
lcall
xchg
mov
loope
je
out
nop
bound
std
fwait
inc
jne
cmpsb
cmp
scas
sub
outsl
pushl
aaa
jl
mov
mov
imul
int3
add
xchg
pop
lods
cmpsb
stos
test
sahf
sahf
sahf
jmp
mov
xchg
decl
push
jbe
nop
inc
je
mov
push
mov
pop
call
or
scas
sbb
je
mov
sub
lds
mov
mov
subl
jne
push
movsb
pushf
mov
cld
test
scas
scas
ljmp
xchg
decl
or
xchg
decl
add
mov
adc
shll
dec
aas
mov
rolb
call
inc
call
dec
xchg
dec
lcall
movsb
movsl
mov
add
push
xchg
xchg
xchg
test
mov
scas
pushl
mov
mov
call
sbb
popl
pop
call
add
add
mov
push
xchg
fistpl
jmp
pop
mov
jmp
cmpsl
call
lcall
cmpsb
cmpsl
cmpsb
pop
add
add
bound
adc
popf
lcall
mov
mov
mov
fwait
dec
jl
pushf
xor
cltd
and
call
add
stos
add
mov
dec
xor
jmp
ja
jmp
mov
lock
out
jg
fistpl
mov
and
add
add
dec
adc
push
cmp
mov
rol
mov
fs
movsb
inc
jl
mov
add
add
mov
gs
pop
insl
fisttpl
in
lea
push
xchg
push
cwtl
leave
clc
xchg
jmp
cmpsl
mov
movsl
movsb
sub
inc
inc
inc
adc
push
xchg
xchg
mov
inc
ret
inc
mov
cwtl
ljmp
sbb
movsl
add
mov
fs
add
aam
js
ljmp
cli
stos
sar
cld
lods
sar
std
scas
sar
cld
scas
sar
jmp
lret
mov
movsb
ds
std
incl
xor
xor
outsl
outsl
jo
scas
mov
mov
aam
mov
aad
rcl
shr
leave
lret
mov
mov
jmp
add
ret
add
aad
jno
call
nop
cld
mov
fdivr
cld
rcr
cld
ret
cld
ret
lock
ret
test
dec
cmpl
add
in
in
or
out
jmp
outsb
fcmovu
fldenv
movsl
es
ljmp
add
lret
faddl
out
cmp
std
into
in
std
shl
shl
std
shl
std
aam
push
fcos
aam
into
in
scas
scas
scas
popa
cmpl
add
incl
std
incb
lret
int3
shrb
mov
add
mov
add
jecxz
jns
hlt
push
movsl
cld
loope
std
call
aam
cld
shl
sti
shl
push
enter
int
repnz
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
mov
or
fistps
jg
ljmp
cli
out
mov
into
bnd
ret
out
aad
ljmp
scas
push
lcall
add
popf
lods
xchg
dec
and
push
mov
ret
int3
lret
mov
mov
lret
int
xlat
int
pop
xlat
dec
in
fistpll
out
out
out
out
out
sbb
rol
add
mov
lods
arpl
lods
mov
les
ret
and
ror
fisttps
int
int
aad
push
std
incl
addl
add
lods
std
incl
mov
std
std
add
std
std
add
add
add
addb
movl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
call
mov
rcll
sub
stos
inc
jl
into
gs
sub
out
and
or
je
sub
xchg
xchg
and
in
and
aaa
cmp
imul
mov
cmp
fidivrs
adc
rclb
cltd
xor
jne
test
xchg
xlat
fcom
insb
or
sbb
pop
dec
cmp
jl
adc
into
shrl
movb
je
and
sub
imul
xchg
mov
enter
sti
jmp
test
dec
cmp
subl
pop
mov
ret
in
cmc
loope
mov
dec
xor
imul
sti
mov
aas
in
xlat
sbbb
push
pop
cmc
aas
sub
adc
mov
xor
rcr
jae
pop
mov
xchg
push
pop
xlat
outsb
mov
scas
cmpsl
lods
cmc
mov
enter
add
xor
push
in
dec
push
xor
subl
movsb
push
out
mov
outsb
add
pop
dec
rcrb
add
push
movsl
stos
and
sub
js
hlt
movsb
pop
push
out
dec
jnp
adc
into
cltd
xor
pop
xor
dec
inc
mov
insl
lcall
mov
xchg
xchg
sub
or
test
sbb
mov
dec
in
or
outsl
push
inc
pusha
xchg
sub
mov
inc
in
stos
inc
flds
into
gs
fnstenv
pop
in
orl
adc
aam
pushf
xor
testb
pop
dec
test
outsl
scas
pushf
pop
lret
mov
push
jmp
xchg
pop
jo
mov
and
aaa
add
pop
mov
bound
test
inc
ficoml
pop
sub
dec
push
call
js
outsl
push
into
cltd
jbe
lret
out
lea
in
xchg
sub
inc
stos
push
mov
lods
arpl
pop
adc
loope
loopnew
adc
in
and
cmp
sub
mov
les
mov
pop
ret
repz
test
fs
inc
mov
mov
lock
and
enter
outsl
arpl
push
out
jl
lea
lret
adc
cld
scas
mov
loopne
xor
dec
add
xorb
mov
ret
lods
inc
cmc
cmpsb
daa
mov
dec
clc
inc
fsubrl
push
sbbl
sbbl
inc
out
lahf
and
fcoml
mov
cli
in
push
sbbb
call
mov
scas
insb
lods
mov
int3
mov
fists
adc
xchg
jno
arpl
es
aaa
into
sub
lods
inc
or
jge
lret
bound
jae
sarb
xorb
pop
sahf
add
inc
ja
and
fs
fisubl
leave
popa
clc
cli
or
dec
nop
daa
mov
mov
ret
hlt
xor
cli
gs
sbbl
lcall
scas
in
sub
push
pop
push
ss
jg
jb
pusha
push
jmp
sar
nop
add
jb
in
pop
scas
push
push
xchg
sub
ja
int3
test
scas
inc
mov
push
ljmp
jb
dec
jmp
xor
daa
mov
ret
hlt
movsb
daa
mov
inc
testb
imul
cli
jns
or
int3
push
sub
pop
popa
inc
fstl
mov
sti
in
add
stc
nop
sbb
cmp
lods
mov
int3
mov
ficoms
or
subb
cmpsb
pop
mov
or
sub
sub
outsb
jp
scas
inc
dec
cltd
inc
fcmove
outsl
sbbb
in
testl
jo
pop
repnz
xchg
add
rclb
mov
sbb
inc
gs
js
push
xor
movsl
cmp
push
xor
xor
shlb
movsb
cs
adc
es
and
cmpsl
jge
cmp
jae
xor
sub
out
cmp
sbb
jnp
shlb
das
mov
fcomi
xchg
es
jmp
adc
ds
nop
insb
les
test
mov
mov
push
fmul
pushw
jb
push
sub
pop
pusha
shl
mov
mov
jb
and
mov
and
test
shrb
push
mov
outsb
or
push
call
inc
and
stos
inc
adc
or
pop
repnz
fcmove
or
mov
inc
xor
shlb
ret
mov
dec
out
sub
pop
jecxz
inc
adc
cmpsl
ds
or
lds
inc
ficoms
data16
or
jne
cli
adc
aam
and
js
shll
into
add
xchg
sub
and
lret
dec
in
iret
ljmp
and
pop
cmc
clc
ret
or
pop
sub
ret
test
bnd
and
pop
sub
roll
repnz
fs
push
pop
shlb
repz
dec
in
xor
fs
repnz
inc
fstps
lds
lret
repnz
insl
in
fsubrs
cmp
ret
xor
icebp
mov
mov
aaa
fs
in
repnz
fdivl
aaa
nop
daa
mov
in
mov
test
arpl
mov
pop
mov
es
arpl
lock
mov
sub
fs
mov
xchg
bound
xchg
sub
out
and
imul
cmp
and
or
mov
pop
lock
popf
pop
aam
dec
or
ljmp
sub
jg
fistpl
jmp
dec
sub
cltd
pop
ficoml
or
sbbb
push
inc
fisttpl
dec
loope
fisubl
or
pop
cmc
repnz
and
add
or
push
repnz
inc
fistl
adc
repz
aas
pop
mov
jns
ret
call
push
dec
and
add
imul
or
sbbl
sbb
push
dec
out
push
in
sbb
or
mov
sbb
pop
icebp
sbb
or
cmp
addr16
and
pop
icebp
push
repnz
pop
cmp
sbb
or
or
lods
rcrl
inc
fcomps
std
fbstp
xor
addr16
mov
js
pop
mov
cltd
cmpsl
mov
adc
ds
push
xor
ljmp
jno
mov
lcall
call
add
jo
sbb
repz
push
or
testb
cmp
imul
scas
xchg
xchg
int3
and
mov
dec
xor
push
lea
lahf
mov
filds
or
imul
pop
pop
sbbl
lods
lods
sbb
add
sub
gs
push
inc
fmull
lods
icebp
mov
shrl
push
std
shrl
and
ja
jge
loop
test
lret
sti
push
dec
loopne
and
mov
int
pop
out
cld
push
insl
add
sbb
test
xor
inc
aas
jne
inc
xlat
dec
stos
shrl
aam
rorl
add
add
stos
xor
rcrl
pop
mov
push
pop
push
popf
cmp
or
fstpl
push
cmp
pop
push
xchg
jo
jnp
cmpxchg
xor
or
dec
jecxz
and
lcall
popf
xor
jge
inc
stos
xlat
outsb
cmc
ret
pushf
xor
sbb
mov
lea
mov
push
jmp
cmp
sbbl
lea
xchg
sub
cmp
ret
push
test
inc
fidivs
movsl
jno
rcll
movsb
cmp
icebp
test
jb
scas
inc
je
sbbl
call
pop
jbe
cmp
fldt
stc
adc
das
inc
rorb
push
push
fldl
cwtl
or
mov
mov
mov
fists
push
xor
fs
jne
pop
test
xorb
or
pop
daa
inc
fcoms
xchg
pop
cmpb
jno
enter
je
iret
or
pop
sbb
dec
jbe
dec
movsb
addr16
cwtl
clc
lea
mov
insb
insl
lcall
or
loope
lret
ret
xor
popa
jo
cmp
mov
sbb
ret
rolb
pop
out
out
and
jb
xor
shll
lods
test
inc
jns
lock
pusha
pop
sbbl
mov
cmp
xlat
xor
and
out
jg
jecxz
mov
es
mov
and
lock
xlat
jl
add
dec
or
insl
lahf
popf
push
nop
inc
call
enter
cmp
adc
out
arpl
divb
cmpsl
icebp
ja
jle
sahf
scas
lret
and
lret
js
dec
jbe
xor
fsts
sbb
fstps
mov
stos
mov
test
jbe
pushf
mov
aaa
jns
enter
dec
mov
insb
fmull
in
insb
ficomps
jecxz
dec
adc
xor
iret
es
inc
in
pop
cmp
icebp
mov
push
adc
and
and
clc
pop
add
out
xor
push
test
mov
mov
clc
sub
loope
inc
jne
jb
lea
pop
adc
stc
add
sub
lods
pop
jecxz
ljmp
pop
jb
fldt
repnz
andl
lock
adc
flds
test
pop
bound
dec
pop
push
iret
cmpsb
jge
xor
jo
and
xchg
xor
pop
mov
sub
sbb
rcrb
pop
push
dec
rcrb
dec
mov
mov
nop
aam
test
sbb
xchg
or
mov
push
int
add
rcll
inc
and
push
cmp
pop
inc
out
pop
mov
mov
int
les
or
xlat
in
imul
add
std
ret
imul
dec
add
dec
testb
push
xor
out
adc
dec
aaa
and
mov
sbb
les
aas
in
dec
mov
daa
shrb
test
push
jbe
push
xor
sbb
movsl
into
mov
cmp
pop
xor
pop
adc
and
cmp
inc
mov
sub
sbb
push
outsb
mov
mov
popf
or
mov
nop
ss
lcall
daa
and
mov
cltd
leave
ja
push
sbb
adc
cli
testb
in
test
pop
stos
sbb
dec
repz
push
inc
mov
mov
or
leave
mov
dec
fs
adc
dec
mov
jns
jns
lock
negl
xchg
inc
jmp
clc
jp
jp
jo
pop
xchg
mov
test
cmp
sub
push
ljmp
cmp
mov
and
mov
adc
jl
push
scas
movsl
xchg
sub
iret
fidivl
jbe
sub
test
mov
stos
inc
ret
fsubrs
mov
repz
scas
inc
out
ret
pop
leave
pusha
dec
pop
shlb
lock
sahf
adc
lea
daa
hlt
mov
pop
bnd
xchg
sub
adc
aas
dec
xchg
iret
imul
data16
lcall
sbb
and
inc
mov
cmp
test
mov
cmpsl
lods
test
das
rorl
repnz
pop
insl
sbb
ss
insl
sub
inc
hlt
mov
loopne
mov
add
inc
xlat
lods
sub
mov
pop
cmc
jbe
addr16
jl
mov
sub
and
rorl
cld
ljmp
pop
int3
mov
out
mov
jb
shrb
popf
cmpsb
cmp
xchg
xlat
les
mov
loop
adcl
push
lods
add
or
mov
das
addr16
lods
lahf
cmp
mov
aad
in
adcl
dec
lret
and
out
loope
mov
aad
xchg
scas
mov
pop
ror
mov
ljmp
scas
or
lcall
and
test
aas
sti
shlb
ficoms
cmc
pop
testl
push
sbb
fnstenv
cli
mov
mov
mov
lods
jp
hlt
mov
scas
adc
out
inc
fistl
jb
mov
lret
nop
daa
inc
xchg
adcb
addr16
xor
mull
cli
xchg
aam
fidivl
std
sbb
mov
push
lods
std
mov
adc
jbe
dec
mov
ljmp
jno
repnz
pop
lods
sbb
jbe
mov
xchg
js
int3
arpl
xchg
sbb
sbb
or
jo
data16
jge
push
jmp
xchg
test
sarl
jb
es
mov
ss
dec
rclb
mov
jne
ja
jb
push
std
xchg
jp
stc
nop
rclb
sahf
cmp
sub
and
out
pop
enter
jno
or
adc
std
test
jg
cmpsl
or
popf
xor
jge
movsl
mov
push
imul
test
fmull
or
es
push
sbbl
out
call
add
cld
and
stos
scas
je
dec
xchg
xor
xchg
scas
shrl
mov
repnz
insl
add
xchg
adc
pop
in
lds
dec
dec
jecxz
and
popa
mov
push
sub
mov
test
cmc
mov
scas
cmpsb
cmp
jne
les
lahf
xor
inc
and
jns
jo
out
mov
xchg
jecxz
jge
mov
pop
mov
fistpl
les
test
pop
fwait
in
add
mov
xchg
inc
es
mov
xlat
adc
mov
fsub
js
xchg
pop
cmc
add
xchg
arpl
jl
in
sbb
es
and
rclb
lods
inc
push
jp
lock
js
je
mov
push
int3
jo
xchg
cld
out
sub
push
sbb
lods
in
iret
push
vpunpckhbw
js
std
pop
adc
xchg
sbb
xchg
enter
mov
push
in
jle
xchg
jae
out
cli
xchg
loope
xchg
sub
sbb
pop
shll
into
data16
mov
int3
in
orl
sbbl
and
mov
mov
sub
rolb
repnz
loopne
arpl
gs
popa
mov
xchg
insb
mov
mov
frstor
rcr
loop
push
sbb
dec
xor
je
mull
sub
jne
pop
or
xchg
sub
xchg
mov
aam
lods
and
loope
dec
dec
xor
jp
call
add
sbb
pop
pop
or
mov
and
jo
lods
inc
push
cltd
jl
sbb
lret
xor
jg
inc
stos
inc
pop
int3
push
popf
adc
enter
and
bound
inc
fprem1
in
pushf
dec
sbb
sbbl
addr16
test
ret
mov
push
inc
mov
gs
cmpsl
ds
mov
andw
cmpsl
std
xchg
stc
mov
jp
adc
in
add
mov
fcomps
push
cmp
incb
push
pop
repz
xor
adc
mov
mov
cmp
mov
repnz
loope
addr16
insb
gs
call
mov
sbb
test
dec
cmp
lock
das
and
dec
loope
dec
dec
in
xchg
push
ret
jae
jmp
add
dec
insl
sbb
push
stos
xchg
imul
lock
cld
xchg
fs
push
movsl
xor
sub
test
dec
loope
dec
inc
fldl
punpckhwd
mov
push
out
cmpsl
xchg
int
outsb
add
and
sahf
xor
xchg
repnz
js
xchg
fidivl
add
xchg
jg
clc
into
xchg
push
mov
ljmp
sub
inc
dec
in
notl
mov
imul
fbstp
xlat
mov
push
insl
mov
ds
push
push
add
pop
xchg
sub
je
mov
sti
xchg
inc
pop
add
jo
pop
mov
cltd
daa
mov
jns
xor
push
xchg
pop
repz
out
icebp
jp
adc
jnp
ret
das
dec
jmp
xor
mov
aam
cs
aad
lods
dec
repnz
add
mov
fldcw
sbb
xor
jae
mov
xor
pop
stos
inc
test
enter
pushf
xor
aad
jge
add
fwait
cltd
jo
mov
mov
or
inc
fmuls
add
idivb
adc
popf
lret
lds
fwait
xor
popa
pop
cmc
inc
or
adc
jb
outsl
scas
das
lcall
cld
mov
stos
add
mov
cmp
aam
add
add
add
sub
sub
or
push
test
loope
scas
shrl
orl
xchg
les
ss
and
jmp
add
js
shlb
sbb
call
push
popa
push
movsl
cmp
inc
xchg
ret
adc
dec
loope
add
cmpb
xor
xchg
cs
daa
mov
mov
int3
lcall
ljmp
jno
add
mov
inc
jge
roll
lods
inc
mov
leave
lret
bound
fldl2t
addb
jne
fwait
sub
sahf
bound
mov
daa
cmp
cmp
jp
push
popa
clc
jbe
out
xchg
lahf
jg
in
push
movsl
jmp
sahf
xor
mov
rorl
pop
insl
fidivl
jg
adc
clc
or
xchg
cs
and
lds
aas
test
jecxz
ss
pop
hlt
push
repnz
jnp
push
lea
cmpsl
pop
sub
lds
ja
dec
inc
dec
jecxz
nop
aad
leave
icebp
jp
fsub
repz
negb
test
mov
pop
add
xchg
sub
ja
mov
in
andl
add
and
and
sub
repz
inc
fst
sbb
pop
push
repz
jmp
jns
jnp
jb
xor
ret
pop
mov
ja
mov
xchg
hlt
mov
sbb
test
cmpl
mov
or
rcr
lock
shll
ja
pop
push
pop
out
cmp
or
inc
push
mov
push
xchg
scas
out
xchg
mov
bound
adc
movsl
outsl
daa
jmp
ret
mov
rorb
into
mov
mov
sbb
outsl
push
xor
or
test
cmp
inc
mov
inc
in
xchg
mov
les
in
cmp
and
jae
xor
iret
cmpb
mov
sub
testb
or
fcoms
cmp
xor
mov
dec
xchg
loope
xlat
sbb
and
mov
and
fcoms
add
sbb
hlt
mov
jno
adc
mov
imul
fwait
xor
fcmovnb
pop
or
je
mov
fsts
sbb
xchg
xlat
in
mov
orl
icebp
inc
outsl
adc
outsl
std
jo
xor
push
dec
in
mov
mov
sbb
neg
sub
jg
cwtl
mov
pop
bound
or
insl
jo
jmp
das
jno
sub
leave
bound
xlat
cmc
std
xor
mov
shl
pusha
pop
sub
nop
pop
inc
mov
inc
shlb
jo
inc
push
dec
iret
sbb
mov
mov
xchg
xchg
notb
sbb
xor
lahf
dec
xchg
cmp
pop
pop
mov
fcomp
pushf
xchg
mul
loop
mov
xchg
mov
and
pop
xor
pop
adc
scas
scas
stos
mov
outsl
in
mov
push
dec
sbb
and
icebp
int
popf
dec
clc
xchg
testb
lret
movsb
into
cmp
pop
mov
mov
mov
loop
arpl
mov
leave
daa
in
test
cmp
add
inc
mov
scas
cmp
idiv
xchg
mov
jae
xor
mov
push
out
popf
xlat
or
in
add
fidivl
movsb
mov
sahf
mov
mov
test
sub
movsl
dec
addr16
mov
dec
popa
add
stos
loopne
int3
mov
adc
lcall
or
pmullw
insl
insb
jmp
mov
xchg
cmp
roll
push
int
cmp
faddp
fiadds
xorl
test
mov
rcll
jmp
fs
inc
mov
repz
add
dec
out
push
push
jg
test
push
mov
je
inc
jl
int3
adc
ret
test
daa
xchg
xorl
and
jecxz
stc
mov
pusha
xchg
movl
and
sub
inc
mov
out
je
addr16
jmp
and
andb
adc
stc
lods
std
adc
cmpl
aam
push
pop
sub
iret
aas
mov
hlt
pop
int
insl
les
dec
jns
inc
rcrl
ds
test
movzbl
adc
xchg
fneni(8087
andl
outsb
movsl
adc
xor
fcom
or
xor
mov
or
incl
cmc
popa
xchg
addr16
add
dec
sub
cmp
push
nop
iret
sbb
lret
xchg
fwait
mov
outsl
cmp
jnp
jmp
pop
test
dec
cltd
in
jne
adc
push
jbe
sbbb
and
loope
xchg
push
mov
in
fnstenv
add
add
iret
add
dec
xchg
cs
repz
les
jno
pop
adc
repz
cltd
cmp
lret
mov
mov
and
push
addb
ss
pop
push
or
fidivrl
push
mov
cmpsb
out
pop
lcall
add
mov
xor
pop
int
ljmp
out
cmc
mov
sub
pushf
and
cli
pop
imul
arpl
mov
mov
outsl
push
clc
mov
hlt
mov
mov
jne
mulb
pop
jne
or
test
push
cmpsb
les
mov
lea
mov
dec
jo
test
rcll
inc
push
xlat
dec
mov
and
ljmp
popa
fcompl
into
pusha
inc
dec
or
or
hlt
outsb
sbb
lcall
pop
int3
nop
push
dec
xchg
dec
sbb
and
call
jl
or
xchg
insb
pop
flds
xor
leave
inc
mov
sub
xchg
data16
push
repnz
dec
sbb
mov
jecxz
leave
push
push
push
mov
lret
and
jge
xor
add
jp,pt
fcoms
push
mov
in
dec
mov
inc
daa
mul
aaa
in
and
jmp
fwait
clc
data16
iret
push
jmp
sbbl
jg
dec
test
test
sub
pop
push
cmp
iret
mov
xor
xchg
pushf
xchg
enter
fldenv
push
outsl
push
ret
push
dec
xor
popa
pop
out
test
lds
testb
or
xor
sbb
push
cmp
aad
ret
mov
add
mov
insb
incl
jg
push
push
cmp
sub
fcompl
loop
xchg
add
cmp
enter
sahf
test
sub
sub
or
sbb
cmp
loopne
cs
xchg
cmp
int3
cltd
mov
insl
xlat
xor
jo
lea
iret
daa
repnz
mov
outsb
mov
sub
and
mov
pushl
fmull
jb
test
cmovae
or
icebp
mov
sbb
lret
cli
aam
mov
and
mov
mov
dec
daa
testb
sub
pusha
or
test
das
mov
push
sahf
imul
stos
add
iret
and
aaa
clc
and
in
dec
pusha
xchg
lea
sbb
and
fiadds
repnz
adc
test
loope
movsl
dec
sub
adc
and
loope
sbb
fnstenv
pop
jns
loope
aam
add
out
inc
movl
jno
mov
sbb
fmuls
fnstcw
adc
ret
rcrl
mov
mov
dec
pop
dec
lea
push
int3
cmp
aad
pop
rcrl
mov
sbb
ret
in
push
jb
cmp
imul
sbb
inc
mov
loope
movsl
fisubrl
out
add
xor
cmc
jne
cld
pop
jo
scas
lods
inc
xchg
rorb
inc
xchg
test
and
sti
mov
push
dec
jno
mov
dec
addr16
jl
mov
arpl
push
push
fcmovnbe
mov
std
push
je
lret
enter
mov
gs
shrl
mov
cs
testb
push
testb
stos
fmuls
xchg
xor
sbb
out
jne
jns
pop
push
pusha
inc
clc
loope
mov
repnz
push
and
xchg
mov
fcomps
adc
lds
mov
sar
inc
ljmp
xor
cmp
addr16
test
jnp
xor
and
sub
xor
lret
out
dec
pop
lret
aaa
inc
lock
in
jbe
mov
jp
xor
ds
sbb
stos
pop
or
cwtl
nop
push
in
add
arpl
pop
inc
enter
xchg
mov
daa
std
sub
xchg
mov
cmpsb
sbb
cmp
cli
dec
pop
pusha
xor
dec
and
inc
and
pop
bnd
or
lods
test
enter
sahf
xor
fwait
cmp
in
imul
insb
mov
test
sbb
push
pop
push
and
xchg
mov
adc
mov
dec
sub
mov
sbb
dec
mov
sub
xchg
xchg
add
fs
lret
mov
cmp
push
or
jne
lea
and
movsb
push
cmp
jp
lret
stos
jge
pop
icebp
loop
pop
cwtl
inc
mov
imul
decl
cmp
ss
lret
pop
aad
daa
mov
mov
xor
mov
mov
fisubrl
in
stos
dec
std
bound
es
mov
ret
push
xchg
and
jmp
inc
cmc
jbe
in
xchg
in
sub
mov
mov
mov
cli
xchg
enter
repnz
jnp
mov
scas
shlb
mov
mov
outsb
lods
inc
lcall
pop
clc
bound
jnp
clc
and
or
data16
fs
jmp
ds
test
mov
mov
adc
sub
push
pop
stos
and
mov
mov
in
cmpsb
xchg
inc
mulb
ret
jp
into
adc
sbb
divb
shrb
fwait
pusha
repz
sbb
cmpsb
push
in
inc
jo
mov
rorl
mov
fwait
sbb
clc
mov
sbb
inc
clc
rolb
je
out
loope
push
jl
faddl
or
mov
mov
mov
push
and
push
xor
movsl
cmpsl
cmp
adc
mulb
je
lods
das
sbb
arpl
daa
jecxz
cmp
fildl
repz
mov
cwtl
outsl
das
jecxz
scas
das
in
mov
cmp
outsl
jbe
roll
popf
xchg
add
sub
mov
jno
push
sbb
xor
and
bound
out
in
cli
pop
test
push
lods
ja
rol
mov
loope
inc
pushf
xor
dec
add
data16
ja
orl
incb
xor
ja
add
test
inc
test
xchg
loop
pusha
shlb
cmp
pop
xchg
lcall
das
gs
push
mov
rclb
or
out
movsl
jae
jbe
mov
cmp
cmp
in
ljmp
mov
loop
ja
or
or
pushf
and
cmp
aaa
je
adc
mov
ss
pop
jnp
lcall
lods
out
das
jno
cmp
jbe
sbb
inc
add
push
enter
cmpsb
insb
xor
scas
xchg
and
hlt
pop
cmc
ret
xchg
faddp
dec
sbb
or
or
js
push
icebp
rcll
lods
lret
lds
test
lods
pop
mov
daa
xchg
iret
sbb
mov
out
sub
sbb
xor
fstps
loope
adc
and
test
or
sbb
xlat
fs
insb
flds
std
aam
push
and
or
mov
sub
ret
mov
divb
dec
jb
in
mov
and
cld
cmp
or
pusha
mov
inc
sub
add
dec
cmp
push
mov
aaa
pop
pop
inc
xor
xorl
test
sub
lcall
push
stos
add
mov
outsb
in
repz
addr16
jmp
and
mov
mov
fcomip
adc
sub
or
inc
push
mov
aam
shrl
jle
or
push
pushf
aam
push
push
xchg
lods
xor
cmc
dec
fbld
loop
outsl
pop
xlat
inc
enter
leave
push
jbe
mov
mov
and
jno
pop
cs
inc
cmp
cwtl
add
sahf
sarl
xor
jno
sbb
lret
lret
psadbw
add
sbb
fadd
pop
movsb
mov
add
mov
mov
loopne
sbb
lret
ljmp
pusha
mov
xchg
pop
inc
xchg
sbb
add
push
repnz
dec
jns
pop
insl
je
mov
pop
jge
sbb
adc
push
rcll
cmp
and
nop
stc
out
pushl
add
push
lds
mov
mov
insl
xor
xchg
adc
and
std
xlat
xchg
push
sbb
icebp
or
les
call
xor
mov
xchg
and
inc
insb
pop
cmp
gs
inc
fsub
fistpl
jns
dec
xchg
ret
test
jge
jno
mov
mov
xchg
bound
lret
mov
dec
mov
orb
xchg
jbe
xor
es
jmp
cmpsl
xchg
ljmp
push
or
ret
lahf
inc
mov
mov
icebp
add
adc
jae
jbe
rcr
pop
push
or
pop
jbe
das
dec
es
in
sub
lcall
rcrb
mov
jg
xor
lcall
fs
xchg
xor
mov
rcl
pushf
inc
sub
punpcklbw
out
vpor
lock
adc
call
sub
sbb
and
sub
jo
cmc
not
and
cwtl
sbb
mov
fnsave
mov
jg
adc
cmp
sub
stos
mov
fnstsw
icebp
xchg
sahf
ret
aam
or
inc
outsl
outsl
jae
jp
int3
push
loop
adc
push
out
adc
repnz
aas
jmp
imul
sbb
es
xchg
push
push
dec
lea
cmpsl
mov
daa
add
outsb
das
lret
cltd
lcall
test
or
scas
xchg
or
or
xchg
lret
inc
inc
idivl
dec
cmpsb
js
push
adc
lret
inc
popf
lods
imul
xchg
sub
dec
cmpb
sahf
repz
aad
mov
ret
or
inc
enter
daa
shr
in
out
jecxz
xor
adc
insb
adc
lock
ss
cwtl
dec
pop
push
or
mov
sahf
inc
icebp
lods
adc
push
jns
push
and
shll
sarl
adc
adc
push
cs
lahf
sub
xchg
cltd
pop
hlt
hlt
repz
sbbl
test
aas
loope
mov
rcr
cmpsb
test
xchg
pop
xor
dec
jmp
sbbb
neg
pcmpgtw
cmp
sub
mov
and
mov
mov
sbb
pop
pusha
jno
cmpb
lock
push
sbb
mov
jp
jmp
jg
sbb
popf
insl
imul
call
jge
and
in
scas
push
addr16
cmp
lods
push
invd
mov
test
inc
cmpsl
jns
or
ret
pop
rcrl
cmpsl
lds
gs
in
dec
test
cwtl
jmp
fdivl
dec
jo
xchg
aaa
mulb
dec
repz
insb
and
lret
pop
xchg
mov
fwait
dec
mov
gs
pop
mov
or
outsb
add
and
pop
jge
or
into
mov
mov
cmp
mov
jae
jl
push
icebp
cli
mov
mov
jno
sti
popf
je
aam
dec
js
mov
mov
ret
push
sub
push
int3
lret
imul
and
adc
hlt
hlt
decl
cmp
pop
and
aaa
mov
and
hlt
xchg
icebp
and
int
mov
movsw
cmpsl
push
inc
imul
sub
and
mov
jecxz
test
mov
stc
cli
mov
rorb
mov
les
fisttps
dec
into
shl
imul
sub
jl
dec
and
es
mov
js
andl
imul
pushf
xor
stos
xchg
mov
stc
stc
mov
aas
aam
popf
mov
push
jl
xchg
test
outsb
mov
xchg
pop
cld
add
xchg
mov
pop
add
aam
jg
push
leave
dec
xchg
in
int
lret
lcall
pop
push
scas
xchg
daa
jmp
aas
inc
inc
je
ret
popf
adc
lahf
mov
mov
shrb
mov
in
stc
sarb
xlat
fldenv
jg
and
dec
clc
pop
mov
mov
jmp
inc
pusha
test
xor
sti
outsl
sahf
out
insb
movsb
inc
daa
mov
mov
push
lods
in
rorl
outsb
sbb
xchg
enter
enter
cmp
push
jno
push
xchg
bound
test
into
jmp
jp
lock
sar
loopne
pop
data16
fwait
shrb
stos
lods
data16
lds
mov
xor
imul
test
fdivp
fistl
shrl
adc
cwtl
inc
inc
aas
and
mov
fbstp
dec
hlt
cwtl
pop
push
add
in
out
sub
cli
mov
adc
pop
inc
loop
mov
mov
and
adc
int3
lds
lret
sbb
lahf
ljmp
fldl
mov
out
rol
addr16
repnz
cmp
test
and
inc
dec
fldenv
dec
cmpl
insl
repz
and
xor
cmp
das
out
sbb
mov
or
xlat
mov
insl
rcrb
push
jl,pn
stc
pop
cmp
test
xchg
pop
cltd
push
jge
add
xor
or
xor
lret
lret
mov
lea
add
frstor
and
dec
pusha
jns
cmp
dec
inc
jb
mov
imul
or
stos
add
cmp
nop
fsts
mov
xor
insl
out
aaa
xchg
mov
notl
lea
pop
add
sbb
mov
lret
or
loop
sub
adc
mov
and
add
cmc
mov
imul
shl
js
mov
test
cmp
inc
dec
sbb
jb
pusha
pop
imulb
fwait
pop
jns
mov
cltd
or
jne
shl
scas
xor
rolb
push
cmp
jnp
fsub
test
loop
xlat
xor
mov
repz
cli
sbb
insl
inc
push
into
popa
movsb
clc
add
cmp
das
jbe
iret
or
sti
loop
fistl
out
stc
cmpsb
mov
pop
in
in
push
or
lahf
and
and
sub
rcll
inc
adc
jns
fwait
clc
mov
or
ja
repz
cmp
cmp
and
or
icebp
fisttpl
sahf
ljmp
movsb
fsubrl
cmp
xchg
mov
inc
pop
mov
ficoml
sahf
adc
sub
fwait
xchg
mov
xchg
xchg
int3
das
pop
iret
movsb
xchg
jp
xchg
mov
mov
ss
sbb
sub
stos
ja
sbb
jb
jns
ljmp
fs
fs
cwtl
jle
push
jae
sub
aad
push
mov
xor
xor
inc
fcomp
cmp
or
pushf
dec
lods
iret
in
fsts
leave
or
mov
movsl
je
dec
inc
repnz
cmp
pop
sahf
inc
inc
shrl
cmpsb
jg
and
mov
and
and
test
xor
lret
sbb
jne
inc
fisubs
fsubl
mov
and
outsb
lods
rcl
push
push
jo
jbe
andb
shll
rcll
loopne
mov
sub
insb
rcrl
lock
sbb
aas
bound
pop
dec
insb
enter
icebp
loopne
movsb
mov
sbb
xor
pusha
loope
mov
cwtl
mov
mov
mov
xor
jne
idiv
xor
xor
dec
hlt
mov
jg
insl
in
pusha
mov
push
mov
pushw
inc
or
xor
ss
mov
add
ljmp
cmpsb
call
pop
inc
sarl
add
sbb
and
xchg
ret
cmp
cmc
and
mov
in
mov
lock
and
pop
jecxz
pusha
sti
loop
into
fisubs
scas
shlb
add
lds
repnz
fs
mov
cmpsl
jb
xchg
pminub
push
mov
xor
bound
std
shl
and
pop
cli
ret
mov
mov
mov
lret
dec
je
into
loop
mov
mov
adc
loop
or
xor
in
out
cmc
ret
jp
nop
in
adc
shl
adc
dec
loop
inc
arpl
mov
add
cmp
fcom
insl
sub
jnp
std
call
jne
mov
rolb
lret
inc
and
mov
leave
ret
hlt
je
fcoms
cmpb
out
add
xor
stc
out
pop
stos
lods
xor
aad
in
mov
jnp
xor
push
aad
xor
jb
push
movsb
mov
lret
outsl
scas
shlb
lea
cwtl
cld
lea
push
data16
or
outsb
out
std
dec
in
int3
pop
add
xchg
repnz
and
in
mov
xchg
jmp
cli
and
in
xor
leave
dec
push
mov
push
sbb
into
imul
push
hlt
neg
mov
lods
jp,pn
xchg
mov
jle
sbb
ds
jae
sbb
inc
pop
adc
bound
ja,pt
sub
dec
mov
in
out
je
in
sub
lahf
or
hlt
fiaddl
xor
inc
lret
mov
imul
xor
outsl
fsubrs
xchg
inc
jl
adc
and
movsl
les
clc
dec
sub
setle
aad
mov
adcl
fadds
xchg
xchg
test
mov
lods
mov
ret
sub
sbbb
jg
xchg
adc
test
inc
rorb
arpl
fucom
outsb
nop
leave
push
test
xchg
jno
jae
rol
sub
sub
add
out
cmp
pop
rclb
sbb
push
push
pop
sub
aad
jle
cmpsl
dec
sub
mov
jmp
lods
enter
add
jmp
dec
mov
sti
and
les
push
pop
pushf
mov
jmp
dec
icebp
dec
xchg
and
dec
je
test
pusha
or
lods
sub
insl
mov
jno
das
push
mov
fldl
mov
shll
cmp
mov
mov
cmp
add
out
daa
sbb
inc
mov
rcll
dec
push
inc
int
adc
push
adc
std
in
sbb
adc
jle
mov
sar
aad
iret
rolb
test
dec
subl
jo
test
scas
shlb
push
jnp
outsb
inc
in
sbb
or
out
lahf
fimull
push
push
add
arpl
stos
fdivp
out
data16
jecxz
push
test
xchg
loop
outsb
aas
in
push
inc
out
push
pop
mov
in
das
mov
cli
push
adc
fcom
xchg
not
mov
adc
adc
int
xor
arpl
pusha
and
scas
cs
js
call
aaa
sahf
jnp
scas
popf
addr16
rep
and
lret
sbb
mov
cwtl
cmp
sub
or
cs
cld
sub
dec
mov
cmp
test
xchg
mov
pop
adc
rcll
rorl
mov
mov
add
mov
and
int3
xchg
sahf
or
dec
subl
mov
enter
popa
es
fstpt
pop
mov
or
jg
or
add
orb
mov
insl
clc
test
in
mov
mov
decb
call
scas
es
push
mov
and
mov
std
xchg
jg
mov
pushf
shll
jnp
int3
mov
leave
sub
mov
mov
fstps
mov
stos
xchg
aas
add
in
out
sub
test
rol
outsl
sets
ja
sub
lret
dec
lret
je
xor
ret
pop
sbb
xor
xchg
cltd
int
pop
mov
inc
testb
add
shrb
in
hlt
jne
int
inc
jae
mov
xchg
fadds
std
sub
mov
adc
mov
cwtl
in
sbb
xor
sbb
cmp
cmc
push
mov
xor
imul
ja
mov
pop
inc
repnz
das
in
xchg
popa
mov
bound
push
cmp
sbb
inc
loope
fidivrs
jno
xchg
mov
xor
enter
insb
test
adc
daa
cli
mov
sbb
in
subl
pop
fmul
out
xchg
addr16
js
je
and
add
fcompl
out
xchg
jns
add
call
inc
aad
orb
outsb
stos
popa
gs
mov
test
andl
jae
inc
ss
cmp
jo
mov
sub
test
xlat
cmp
mov
cwtl
pop
test
mov
cltd
xchg
add
sub
jb
jbe
push
or
mov
into
das
push
xchg
push
loop
ret
cmp
arpl
insb
xchg
test
push
shll
mov
push
inc
or
or
cmovge
and
and
dec
jl
ret
test
mov
fadd
add
fidivl
hlt
call
lods
shr
jo
inc
cmp
mov
sbb
stc
adc
loope
mov
cmc
inc
and
fs
mov
scas
cmpsl
bound
int
jge
or
roll
out
in
cmp
mov
in
test
pop
inc
ficoms
clc
js
jmp
sar
out
adc
inc
cmp
les
icebp
push
shrl
cmpl
movsl
popa
jle
cmp
xor
and
inc
dec
fmuls
outsl
mov
ret
mov
insb
or
and
sbb
sbb
outsb
dec
sub
lcall
stos
xor
mov
or
setae
test
jbe
mov
pop
mov
sub
adc
pop
adc
sbb
xchg
pop
call
sbb
push
test
aas
dec
sbb
xchg
stos
inc
or
mov
test
xchg
mov
push
mov
pop
pop
orw
int
pop
pushf
jecxz
inc
sbb
hlt
adc
mov
into
popa
xor
aam
mov
pop
add
inc
lcall
or
or
or
ret
dec
out
adc
in
clc
sub
xchg
decb
cs
xchg
stos
in
mov
pushf
sub
cld
mov
mov
stos
jns
in
sub
mov
aad
fnstsw
test
insb
nop
lods
movsb
cltd
push
jae
xor
jb
lods
rcrb
aaa
aas
and
imul
shrl
les
cmp
mov
cli
mov
add
mov
sbb
subb
adcb
add
inc
sbb
pop
test
add
js
add
jecxz
mov
into
movsb
mov
push
inc
pop
in
fwait
mov
mov
xor
push
movsb
pop
or
add
inc
or
inc
aad
out
mov
inc
fdivrl
cmpsl
int
out
sarb
arpl
cltd
mov
mov
cwtl
outsl
in
scas
mov
test
dec
pop
enter
outsl
jl
inc
dec
dec
push
stc
jl
iret
cmpsl
mov
outsb
imul
mov
out
jle
sub
loope
mov
daa
and
std
fwait
clc
insb
dec
or
mov
out
adc
in
loope
adc
xor
push
pop
mov
ljmp
cmp
gs
push
push
fucomi
sub
insl
lcall
adc
cmp
pusha
jp
push
fbld
in
insl
inc
cmp
inc
sbb
mov
mulb
mov
cmp
cmp
add
add
pop
int3
and
push
cmpsb
sbb
mov
aaa
pushf
add
lea
pop
add
lcall
push
inc
xchg
jbe
cltd
pop
inc
and
lret
hlt
pusha
loopne
mov
out
es
xor
dec
and
shlb
and
out
jns
mov
cmp
test
or
cmp
cltd
cli
add
jecxz
das
sub
lods
popf
push
mov
mov
sahf
int3
out
hlt
dec
push
jg
add
fists
fistps
mov
inc
inc
movsl
add
sbb
hlt
pop
popf
mov
test
imul
enter
pop
lret
mov
xchg
xorb
fcmovu
andb
inc
push
call
imul
and
adc
jp
or
sbb
xor
jge
sbb
and
inc
mov
push
mov
pop
repnz
pop
push
and
lcall
addr16
jmp
dec
stos
in
xor
int
add
rclb
scas
cld
pop
sahf
jo
icebp
mov
and
in
jg
jae,pt
or
or
push
fwait
enter
dec
sub
ds
nop
jne
adc
adc
sub
add
stc
adc
ret
sub
inc
fisubrs
and
jbe
mov
add
das
push
in
and
arpl
je
out
lods
add
mov
mov
and
and
loopne
sbb
ja
pusha
into
mov
and
lret
insl
sti
iret
int3
test
dec
inc
int3
and
or
mov
cmc
fwait
add
scas
pop
and
mov
scas
jbe
xlat
cmpsl
rclb
leave
pop
cmc
cli
and
push
sbb
dec
jne
daa
cmpsl
outsb
pushf
xor
sarl
dec
adc
jno
outsb
in
test
rorl
jmp
das
movb
cmp
pop
pop
hlt
mov
add
loop
mov
cmp
xchg
sub
push
mov
mov
aam
in
adc
xchg
dec
or
xchg
imul
xchg
push
adc
call
or
cmp
dec
in
pop
jge
lea
add
cmpsb
xchg
fadds
mov
cmp
push
fidivl
dec
pop
jle
cld
xchg
ficompl
sbb
mov
inc
adc
rcrl
test
and
dec
loop
inc
cltd
xor
outsl
push
outsl
cltd
rcrl
xchg
sub
in
fidivl
in
inc
push
inc
add
jno
iret
imul
mov
fimuls
mov
push
mov
mov
fcoml
cld
push
xor
sbb
shrl
jp
cmp
mov
movsb
pop
and
jb
jl
lds
into
dec
jecxz
es
inc
and
pop
fs
pusha
sahf
jl
inc
cmpsb
mov
mov
add
mov
pop
push
inc
xlat
mov
inc
cmpsl
scas
xchg
sub
enter
cli
sbb
and
insl
add
inc
insl
jle
lea
lahf
jbe
leave
mov
push
in
adc
insl
outsb
pop
lds
test
pop
add
lds
dec
jle
js
cmpsb
cmp
ret
lret
repz
lods
sbb
outsb
add
stos
mov
fdivp
aam
inc
push
push
mov
jge
jno
out
jp
inc
movsb
lret
les
lds
popf
push
imul
dec
jno
sbb
int3
and
jbe
push
add
dec
jo
pop
stos
imul
hlt
mov
dec
lock
mov
test
lret
hlt
mov
js
adc
xchg
dec
outsl
mov
cltd
insl
stc
xchg
mov
pop
cmc
lock
sub
adc
mov
mov
ret
add
out
repz
sub
dec
popa
clc
ja
fs
xchg
cwtl
lea
mov
sbb
jecxz
ret
sbb
loope
dec
cmp
loopne
xchg
mov
lahf
mov
popf
xor
rolb
inc
dec
sub
sub
pushf
xor
mov
xor
or
jo
sub
push
push
pop
add
mov
gs
rcl
mov
repz
dec
and
mov
ret
or
cld
loop
add
push
add
addr16
test
in
ror
arpl
lods
inc
pop
pop
inc
fadds
mov
mov
pushf
and
daa
cmpl
adc
mov
add
sub
daa
and
jae
dec
mov
pushf
cmpsb
xchg
pusha
test
out
rcrl
dec
loopne
cmp
jl
stos
movsl
test
aam
fisttps
lahf
or
adc
push
jnp
mov
je
sti
lods
lds
dec
lea
pop
xchg
dec
sbb
stos
xchg
fs
jecxz
mov
push
in
shlb
cli
push
dec
in
sbb
cmp
pop
pop
cmc
andl
fs
and
xor
inc
dec
dec
in
movsb
cmp
ret
std
out
or
in
cmp
arpl
int
test
mov
fists
pop
adc
fs
insl
or
xchg
je
sub
in
rorb
or
xchg
sub
sub
push
xorb
lods
movsb
push
in
fmulp
xchg
cmp
dec
in
pop
xchg
sub
cmpsl
xchg
loopne,pn
into
gs
or
in
mov
in
stos
popf
xor
mov
add
cmc
mov
movsl
ss
pop
hlt
mov
add
mov
in
clc
popf
xor
or
xor
xor
fs
sahf
sbb
and
ljmp
xor
push
jns
xchg
xchg
stos
inc
lret
movsl
in
in
pop
hlt
push
push
jp
cmp
sub
bound
in
test
icebp
fstp
mov
or
int
sub
sbb
xor
dec
loope
xchg
dec
in
lret
popf
xor
in
jb
pop
pop
ret
pop
push
cmp
rep
xorl
into
inc
fisttpll
add
es
jmp
mov
rcrl
add
arpl
inc
and
pushf
xor
shll
hlt
sbb
hlt
inc
adc
xor
xchg
outsl
dec
jecxz
mov
xor
mov
xchg
sub
add
fs
sbb
test
cmp
cmpsl
dec
in
add
add
pop
sti
xchg
xchg
pop
stos
inc
mov
adc
mov
outsl
jmp
or
jle
bound
xchg
cltd
mov
inc
adc
push
cmovp
cmp
push
mov
ret
imull
mov
push
sti
mov
arpl
mov
outsl
into
adc
mov
outsl
dec
loope
cmp
arpl
dec
loop
add
add
fimuls
lahf
pop
pusha
push
mov
in
cmp
stos
add
pop
cmc
cli
push
cmpsl
mov
sbbl
fidivs
cmp
enter
dec
icebp
mov
fidivs
fwait
and
cltd
scas
lock
rcrb
mov
dec
pop
out
jle
inc
fstl
jge
int3
je
mulb
les
and
mov
push
fs
push
loop
push
pushf
push
lea
mov
push
adc
add
cs
fcompl
cmp
and
push
dec
fimuls
mov
jns
dec
repz
sub
sbb
mov
sub
xchg
mov
int
test
aas
loop
sub
push
mov
inc
jae
int3
push
mov
loop
sub
add
sub
mov
inc
xor
jns
inc
out
xchg
fs
out
push
sbb
xchg
xor
xor
bound
aam
mov
roll
lahf
adc
and
pop
inc
sbb
push
xchg
sub
mov
iret
imul
ss
xlat
imul
mov
xchg
xlat
xchg
xor
mov
ret
or
cmp
pop
mov
cld
stos
into
pop
xlat
adc
repz
stc
fisubrs
andl
dec
out
js
mov
push
in
xchg
decb
ds
cwtl
sbb
pushf
je
pop
mov
les
ret
adc
adc
and
cwtl
fs
push
movsl
mov
movb
rcrb
cmp
push
sbb
outsb
xor
mov
jle
pop
divb
outsb
dec
sbb
xchg
xor
mov
fucomi
mov
mov
sbb
daa
jnp
stos
xchg
pop
xchg
and
cmp
rcrl
sub
xor
cmpsl
push
and
sbbl
repnz
jne
push
std
cmp
push
sub
fs
shll
pop
fnstenv
int3
dec
out
cs
mov
xor
mov
mov
cmpsl
lret
or
repz
sahf
inc
imul
cmpsl
jg
scas
xchg
clc
scas
cmp
dec
pop
sub
xor
cs
dec
push
loope
movsb
mov
xor
cmp
scas
dec
sub
imul
outsb
adcl
and
sub
stc
mov
inc
push
repz
or
xchg
subl
rclb
add
shll
adc
pop
adc
sbb
neg
adc
dec
movlps
lcall
mov
test
sub
sahf
cmp
dec
cmpxchg
mov
jecxz
adc
and
lret
fs
insl
or
popf
pop
fnstenv
iret
dec
out
testb
pop
pop
mov
jae
mov
scas
mov
xchg
xlat
loope
add
adc
push
je
repnz
outsb
or
jecxz
inc
repz
sbb
add
shll
jbe
sbb
mov
lea
icebp
lock
mov
sbb
lcall
pop
jmp
or
cmp
inc
out
pop
inc
jns
addr16
cltd
lods
add
in
lcall
xor
mov
aad
popa
mov
cld
xchg
out
adcb
or
mov
jp
cmp
inc
int
inc
out
out
and
dec
loopne
inc
in
je
dec
out
xchg
shrb
mov
mov
sbb
xor
daa
cmp
inc
outsb
dec
inc
fdivrs
dec
jecxz
lcall
adc
std
xchg
and
sbb
mov
fildl
popf
or
pop
lock
and
push
inc
fnsave
rclb
fbstp
jmp
arpl
test
sbbl
sti
xlat
pop
testb
in
test
std
xchg
pop
insl
or
mov
sub
in
fdivrs
rorb
push
dec
fbstp
es
out
push
dec
data16
jns
jne
mov
mov
sub
or
mov
aam
rclb
aam
das
mov
jmp
test
lods
fsubs
mov
stc
cmp
mov
and
jle
insl
leave
in
test
into
gs
sarb
xor
dec
jecxz
push
sbb
jbe
sub
mov
xchg
mov
fsts
sbb
push
rcrl
xchg
sub
cmpsb
lahf
rclb
push
popf
add
leave
pusha
inc
and
stos
push
push
xor
mov
les
or
sbbb
fidivs
jge
jbe
pop
jnp
or
call
pop
sbb
mov
movsb
test
fisubl
and
sbb
xor
dec
cmp
push
xchg
jle
cwtl
sahf
mov
add
fcomi
xchg
cs
std
inc
ficompl
cmp
push
push
cmp
loopne
je
insb
mov
sar
xadd
cmpsb
mov
in
jbe
mov
cld
and
mov
mov
hlt
imul
mov
inc
jge
dec
test
inc
and
mov
lahf
roll
lods
shrl
hlt
adc
out
xor
sub
mov
cmp
xor
xchg
pop
add
insb
sub
sbb
out
jecxz
insl
mov
jbe
or
and
cs
les
mov
sbb
inc
xchg
shlb
adc
push
pop
test
data16
popf
xor
aam
push
movsl
repz
jb
cwtl
popa
push
xchg
sub
mov
xchg
icebp
inc
insl
add
mov
js
mov
cld
xchg
outsb
xor
pop
test
jno
lret
push
popf
insl
mov
adc
inc
fdivrl
rorl
mov
stc
stc
cmpsl
ds
jle
mov
ret
cmp
jl
mov
mov
lcall
and
fistpl
sarb
lods
inc
jl
stc
insl
jns
outsb
stos
popf
jp
lods
inc
push
dec
mov
jbe
jb
push
fs
out
pop
mov
cli
xchg
push
outsl
stc
nop
lahf
pop
and
mov
decl
aam
stc
out
incb
xor
jb
loope
push
call
bound
dec
xchg
xchg
in
mov
mov
leave
pusha
xor
mov
shlb
or
clc
xchg
nop
jbe
ret
add
mov
fs
aaa
mov
imul
in
sahf
fdivp
lea
mov
andb
dec
in
and
mov
cld
xlat
and
enter
lods
or
mov
pop
jg
mov
dec
jae
mov
cmp
mov
loope
aaa
es
xchg
fisubl
mov
mov
and
or
sbb
and
and
sbb
mov
xchg
fbstp
int3
and
mov
and
popa
mov
mov
jmp
and
adc
sbb
lret
aad
sbb
or
mov
hlt
jg
mov
jae
pop
movsl
jae
mov
push
sbb
cli
xchg
inc
fwait
or
cmp
mov
mov
or
stos
xchg
sbb
push
push
adc
push
xlat
sbb
dec
cli
adc
aaa
sbb
mov
shr
repnz
push
in
lods
pop
sbb
lds
adc
push
arpl
mov
sbb
dec
xchg
jl
or
fnstenv
mov
mov
je
scas
lcall
and
xchg
xchg
dec
icebp
mov
pop
hlt
leave
cli
and
jle
xor
mov
sahf
pop
not
insl
sbbl
xchg
imul
adc
ret
xchg
xor
inc
xlat
outsb
jae
add
sub
pop
cmc
fldt
inc
fimull
lret
mov
mov
jns
jo
xlat
outsb
mov
movsl
ret
pop
pop
mov
push
jecxz
nop
daa
dec
data16
pop
cltd
mov
xchg
std
pusha
shrl
add
push
add
gs
adc
mov
sub
sbbl
fimuls
pop
inc
cltd
jnp
lret
and
lea
xchg
ljmp
call
push
sbb
mov
lret
adc
std
mov
das
lods
xor
xchg
cmpsb
sub
lock
movsl
jns
pop
sbb
push
stc
nop
dec
or
ss
mov
std
mov
std
xchg
jb
jno
packsswb
test
dec
pop
scas
jle
decb
cli
inc
fsubrs
sbb
ljmp
test
xor
scas
movsl
cwtl
es
test
loop
mov
lods
dec
xchg
bound
inc
std
xchg
jae
cmp
xor
cmp
mov
fistpll
cmp
lret
cmp
stos
mov
sarb
push
mov
mov
jno
dec
in
stc
mov
scas
dec
lods
int
fimuls
testl
mov
cmp
push
add
push
popa
addr16
push
fistpll
mov
or
data16
pop
imull
pop
andb
mov
jae
imul
adc
scas
inc
clc
push
inc
fiaddl
fnstenv
xchg
fbstp
sub
subb
adc
sbb
mov
stos
daa
mov
dec
imul
lods
lahf
dec
out
sub
cli
insl
inc
call
or
das
jle
mov
mov
mov
mov
mov
cmpsb
cmp
jb
mov
jecxz
push
out
test
testb
mov
push
sub
sub
xor
pop
cmc
fnstcw
call
sub
jb
lret
fucom
jp
mov
orb
mov
loopne,pt
jno
lods
inc
sub
ljmp
lods
sbb
fstp
add
into
or
pop
out
mov
inc
sbbb
outsb
ret
pop
pusha
notb
push
mov
pop
jecxz
int3
arpl
shlb
dec
xchg
nop
cmp
sahf
stos
push
or
xchg
ds
pop
or
daa
xchg
pop
push
mov
sbbl
xchg
test
lds
aas
cmpsl
test
xchg
sbb
rcrb
mov
push
ja,pt
mov
add
mov
pop
cmc
inc
call
fsubrl
xor
popa
das
jecxz
mov
movsl
push
out
push
fimuls
arpl
mov
in
push
iret
into
add
pop
inc
xbegin
push
cmc
jg
mov
jmp
in
xchg
sub
dec
sbb
jb
inc
int
daa
mov
mov
scas
inc
lock
ja
jo
mov
jmp
arpl
aaa
dec
out
mov
lea
sahf
fbld
mov
sbb
adc
mov
sbb
divb
daa
mov
mov
repnz
es
push
popl
dec
inc
daa
mov
aas
cmp
add
test
xchg
cs
pop
ret
pop
dec
pop
rcrl
pop
mov
dec
shrl
cli
cld
xchg
in
stc
add
jbe
mov
scas
loop
cmp
push
gs
xlat
xchg
sbbb
xchg
jns
jmp
in
pop
neg
testb
xchg
scas
mov
mov
push
add
jb
jb
dec
es
pop
xor
das
pushf
lcall
dec
test
fwait
insb
add
dec
push
ljmp
ret
inc
stc
nop
jae
adc
sub
add
fistps
inc
fmulp
into
inc
fdivrl
mov
sbbl
xor
sub
test
mov
pop
dec
leavew
pusha
cltd
mov
mov
xchg
cli
add
mov
int3
arpl
dec
aaa
into
jg
inc
fstl
aam
and
stos
jae
faddl
movsl
cmp
jbe
sbb
scas
inc
mov
cmp
jo
mov
jmp
pop
push
sbbb
ficompl
sbb
lret
daa
mov
jmp
xor
mov
sbbl
addr16
xchg
xchg
loop
or
aad
adc
aam
ss
pop
test
ret
cmc
jl
adc
je
jb
insl
xchg
push
sahf
js
adc
imul
mov
cli
mov
in
loope
push
jmp
jg
lcall
jnp
shrb
roll
je
xchg
sub
repz
cmpsb
sub
fsubs
daa
pop
lahf
pop
repz
fwait
pop
lock
outsb
add
inc
cmp
icebp
cmc
jmp
pop
sbb
nop
daa
jmp
aam
or
gs
fmul
push
popf
sti
pop
mov
mov
gs
lds
cmp
or
loop
jecxz
jp
add
adc
mov
cmc
xchg
push
push
jg
jb
daa
mov
pop
sar
nop
add
cmpsb
cmp
jb
les
js
lods
test
scas
inc
fcmovnu
je
xchg
movsl
sbb
jmp
testl
mov
fwait
lock
adc
daa
lret
setns
inc
jp
jge
bound
sahf
std
mov
addr16
and
dec
or
xchg
insl
inc
fistpl
mov
cs
fisttpl
dec
out
popa
lahf
xor
jl
mov
and
pop
fsubrl
in
cmpsl
cmp
push
icebp
mov
scas
adc
rolb
leave
xor
push
push
out
mov
pop
mov
lods
jb
fildl
nop
sub
rcrl
or
xchg
jge
pop
cmpsl
shrl
jl
xor
sarb
cmpsb
jg
xlat
outsb
push
mov
cmc
mov
lret
sti
inc
imul
dec
xchg
xchg
leave
outsb
push
out
ljmp
rcr
scas
inc
unpckhps
std
test
mov
mov
sbb
jl
sbb
mov
sub
lret
sbb
in
jl
insl
insb
outsl
push
lahf
jo
in
popa
pop
cltd
xor
dec
stos
inc
jg
nop
daa
pop
sti
fnsave
mov
cmp
int
scas
pushf
icebp
mov
mov
and
push
ds
push
call
pop
hlt
add
xor
adc
add
cmp
add
stos
ret
pop
sbb
sahf
xor
push
and
xchg
notb
mov
inc
or
mov
mov
aad
mov
xchg
stc
push
jmp
sbb
fistl
xchg
xchg
sub
mov
ljmp
add
jb
loop
std
xchg
push
movsb
cmp
push
mov
test
aad
inc
loopne
je
jl
push
hlt
ljmp
mov
stc
nop
cmc
xchg
cs
cmp
jmp
in
jl
fidivs
sbbb
or
push
jle
xchg
sub
aam
dec
push
xor
aam
shl
repnz
sbb
jbe
xchg
xor
mov
mov
cltd
sti
in
ret
cmp
in
aam
hlt
add
les
cmc
clc
mov
or
and
shrl
adc
pop
inc
sub
aam
xor
mov
popf
out
add
test
cmpsl
xchg
das
mov
mov
dec
jecxz
cmp
ja
cld
xchg
int
cltd
xor
sub
out
cmpsb
stos
inc
fldz
sbbl
shl
test
aad
out
leave
sbb
mov
leave
cmpsb
cmp
mov
mov
sub
xor
inc
lods
jecxz
notb
add
clts
jecxz
rcl
mov
lahf
xlat
jbe
dec
test
gs
fsubrs
out
popa
ljmp
sbb
es
push
out
adcb
leave
sub
cli
adc
jno
jge
cmc
scas
mov
push
sub
push
xor
or
call
dec
andb
adc
je
in
aaa
xchg
divl
jg
jns
and
sti
push
sub
test
mov
repz
mov
add
andb
and
push
lds
aam
mov
sbb
popf
gs
decb
in
cmpsl
push
cmp
cmp
add
es
mul
jno
jno
adc
fisubl
mov
pop
in
mov
sub
xchg
sub
dec
adc
xchg
xchg
push
out
mov
inc
fmuls
adc
movsb
insl
pop
aas
mov
dec
loopne
aas
add
cs
jge
mov
lea
mov
mov
shrl
jle
fwait
cwtl
loope
lret
sbb
sub
and
and
mov
or
stc
pop
cwtl
call
pop
or
popf
xor
lret
lcall
jl
inc
scas
xchg
outsb
pop
or
js
sbb
cltd
dec
mov
cmp
in
jg
aas
in
lcall
inc
enter
fs
insb
xor
dec
in
cmpsl
lds
pusha
imul
pop
mov
dec
imul
rclb
pop
rep
test
in
sub
mov
out
in
in
inc
xlat
imul
push
rcrl
push
jmp
lret
test
mov
ror
mov
push
out
mov
ss
popa
clc
lods
daa
shrl
sub
fcompl
sub
stos
dec
fucomip
ret
lcall
cmpsl
cmp
sbb
or
jno
mov
or
stc
stos
inc
sub
lods
push
imul
lret
loopne
mov
mov
push
in
test
and
idivl
xor
out
pop
negb
out
insb
imul
int
xor
into
adc
inc
stos
mov
xlat
outsb
popa
xor
shll
out
sbb
adc
dec
xlat
inc
fmull
jg
sahf
jo
dec
out
adcl
stc
add
mov
mov
aam
cli
xor
xchg
jle
pop
adc
adc
push
xor
add
enter
cmpsb
cli
testl
nop
adc
xor
flds
insl
add
jmp
xchg
cs
outsl
rcrl
adc
pop
lock
popf
dec
adc
in
test
adc
cmp
shrl
mov
push
ljmp
iret
data16
push
nop
push
dec
in
push
leave
pusha
mov
sti
xchg
orb
sbb
or
icebp
aaa
into
and
add
clc
ret
mov
or
mov
movsl
cmp
and
rcll
add
sub
mov
and
xchg
lcall
mov
ret
enter
dec
jae
arpl
jae,pn
sbb
jne
fldt
enter
rcrb
inc
lret
dec
inc
addl
enter
scas
sbb
push
popf
aam
inc
pop
or
int3
shrl
popa
test
push
jns
pushf
stos
xchg
mov
pop
out
mov
loopne
cmp
dec
mulb
in
xrelease
in
ja
jmp
sub
mov
daa
mov
pop
cli
gs
jmp
in
push
stc
les
pop
testl
inc
sbb
xchg
mov
xor
jne
mov
aaa
into
das
insl
imul
scas
pop
jb
jl
mov
out
sti
stos
inc
sub
lods
fsubl
jge
movsl
outsb
cltd
incb
adc
pop
xchg
xchg
cltd
mov
aas
adc
jo
push
popf
jmp
sbb
jno
scas
adc
rcrb
lea
dec
jecxz
js
jge
jle,pt
jno
xor
pop
sub
xchg
sub
dec
push
inc
les
jno
cmc
bound
test
pop
ja
pop
mov
repnz
testb
stos
fidivs
xchg
montmul
cmpsb
les
int3
push
cmpl
mov
xchg
cs
aaa
dec
loop
inc
jp
aaa
loop
adc
aaa
push
in
test
xchg
pop
lods
mov
push
dec
les
fiaddl
lds
push
inc
ss
sarl
add
mov
test
jb
clc
stos
das
sbb
movsb
cmp
xor
lds
dec
test
xor
jno
mov
mov
dec
sub
aad
mov
dec
filds
imul
imul
fidivl
cmpsl
lods
inc
fnstcw
es
rcr
fnstenv
xchg
add
rolb
testb
call
lcall
fdivrl
xchg
loope
pop
sti
adc
addb
sti
xchg
push
cmp
imul
subl
add
add
out
out
loop
clc
and
xchg
jg
mov
cmp
mov
xchg
in
xor
push
cmpsl
fdivl
ficompl
or
adc
dec
lret
insb
add
outsl
jne
aas
cmpsl
cmp
mov
jnp
stos
adc
loop
fisttps
rorl
pop
push
in
rolb
push
sarb
shlb
add
mov
call
dec
and
test
xor
ret
dec
xchg
inc
jl
jnp
mov
or
idiv
inc
jmp
add
dec
insb
cmp
add
mov
fists
mov
jmp
inc
fdivrs
jmp
cwtl
xlat
mov
out
fnstenv
jno
js
and
loop
sbb
xchg
fcomip
arpl
mov
je
shlb
push
inc
int
or
add
popa
in
mov
pop
push
jnp
ficomps
imul
cmp
push
sub
mov
cmp
inc
scas
lret
xchg
int
int
jno
nop
pop
push
fistpl
inc
xchg
mov
mov
adc
outsb
xchg
cmp
push
int
imul
add
outsb
xor
sbb
loop
or
mov
xor
pop
in
mov
aad
filds
cmp
or
cs
dec
xor
mov
sahf
cltd
inc
adc
mov
mov
cmp
jge
lret
jecxz
sbb
mov
mov
add
push
jmp
shll
les
lret
arpl
in
divb
or
outsl
hlt
fwait
jb
aas
pusha
lret
xlat
jae
addr16
push
pusha
in
mov
test
jge
jb
jb
pop
mov
mov
stos
mov
xchg
mov
push
jle
mov
psrlq
lods
into
xchg
mov
jle
movsl
popa
daa
xor
dec
scas
xchg
cmp
arpl
out
sub
mov
pop
aas
mov
jb
sahf
inc
sub
shl
cmp
sahf
dec
in
popf
inc
ljmp
or
xlat
cmp
inc
mov
dec
sub
mov
mov
aad
in
ffreep
scas
icebp
jae
cmc
xlat
dec
push
jno
insl
scas
aad
dec
sub
es
mov
stos
daa
test
or
adc
hlt
pop
or
inc
loop
daa
cmpsb
or
rclb
movd
mov
and
loope
jno
rcll
mov
int3
xchg
stc
cmpsw
sbb
jl
mov
mov
sbb
cmp
popf
aas
or
rcr
push
push
lods
add
mov
stos
push
arpl
mov
inc
mov
pop
sub
sub
out
xor
mov
mov
push
mov
test
or
dec
icebp
test
pop
call
bnd
xlat
aas
inc
adc
xchg
add
test
inc
popa
cmp
mov
in
pop
fnstcw
push
nop
inc
cmp
leave
pop
subl
loop
cmc
inc
xchg
out
test
jmp
pop
shll
aam
ficoml
js
add
pop
stc
es
adc
pop
inc
mov
dec
gs
lds
jmp
inc
push
cmp
lret
in
gs
fidivrs
subb
adc
push
dec
or
stos
pop
or
xlat
das
xchg
jmp
push
or
xchg
adcb
push
pop
ret
xchg
push
sub
sti
push
pop
xor
mov
push
xor
xor
lahf
pop
imulb
daa
cmpsb
cmp
sbb
loope
test
mov
fldt
mov
cmp
mov
push
jns
push
mov
out
lea
shlb
jae
repz
out
cmp
lahf
sti
adcb
jb
subl
xchg
dec
sub
adc
push
movb
repz
add
test
jns
test
adc
loope
mov
mov
sub
stc
mov
sub
or
sub
out
jg
or
add
push
imul
outsb
in
mull
shll
mov
cmpsl
push
lea
cmpsl
popa
cmc
es
not
or
ss
pop
pusha
ffree
test
jmp
lea
xchg
and
mov
cwtl
int
mov
xchg
push
sub
pop
jns
lods
test
dec
xor
push
sbb
xor
inc
mov
movsl
imul
push
mov
fwait
nop
cmp
loop
lahf
dec
push
call
inc
inc
in
mov
test
sbb
je,pn
mov
inc
repz
les
push
pop
push
sub
outsl
cmc
mov
sub
rolb
add
ja
negb
adc
mov
mov
add
inc
mov
mov
mov
arpl
lea
push
lret
sbb
mov
pop
pop
lds
ficoms
imul
inc
jp
sub
sti
dec
aas
aaa
sbb
outsl
ljmp
push
inc
sub
lods
inc
gs
xor
dec
sahf
js
imul
test
sbb
dec
negl
and
jno
add
das
add
jae
mov
fwait
icebp
aad
lcall
mov
sahf
sahf
aaa
sbb
sub
inc
xchg
inc
xchg
rcl
sar
popf
popa
mov
pushf
inc
add
xor
push
int
mov
imul
cld
push
std
into
dec
xchg
jp
adc
jl
popf
mov
mov
xchg
mov
adc
nop
sbb
jne
cmpsl
int
mov
ja
add
mov
mov
sub
push
add
data16
stos
gs
out
cmp
cmp
imul
pop
dec
loop
mov
xchg
lods
imul
ljmp
pop
ds
movsb
cmp
mov
cli
xchg
in
loope
sub
pop
mov
dec
decl
mov
inc
jmp
testl
xor
sub
mov
cwtl
arpl
iret
jbe
cmp
subl
push
repnz
out
cmc
xchg
arpl
in
pop
clc
add
out
leave
xchg
out
adc
ljmp
cltd
push
clc
sub
into
push
loope
mov
xchg
add
cmp
push
int3
push
sub
dec
adcl
push
cltd
and
in
or
cli
cltd
jmp
push
and
imul
push
lret
jne
push
pop
jo
nop
sahf
les
push
into
jle
test
or
nop
into
movsl
into
mov
fnstenv
lock
lret
mov
cmp
mov
movsb
adc
dec
sbb
aam
pusha
ret
push
push
inc
shll
xchg
add
dec
movsb
adc
popa
sub
loope
jle
arpl
pop
rcll
sbbl
add
hlt
repz
adc
rorb
cltd
jb
push
xlat
stos
test
sahf
ret
fisttps
idiv
or
mulb
adc
scas
pop
or
insl
fnstcw
lods
jo
lret
outsb
mov
adc
pop
fdivr
ss
das
fbstp
mov
dec
push
cmpb
pop
test
pop
jle
imul
lea
push
gs
test
mov
adc
js
or
xchg
inc
jge
insl
or
adc
mov
push
mov
push
push
loope
pop
and
in
out
sbb
sub
jge
call
pop
mov
cli
lods
mov
pushf
rorl
push
cmp
lds
mov
xchg
jge
mov
lods
push
push
jnp
mov
test
sub
jl
stos
in
add
outsl
pop
dec
mov
sbb
jbe
faddl
mov
mov
std
cltd
imul
mov
scas
sbb
sti
add
iret
xor
in
subl
mov
rcrl
sub
fidivs
in
mov
sahf
cld
xchg
sarb
adc
and
cmp
je
push
call
sbb
dec
out
or
insb
mov
insb
mov
mov
movsb
das
inc
aad
testl
adcb
insb
adc
pop
mov
mov
push
arpl
fnstenv
test
jne
sub
mov
cld
xchg
or
sbb
jno
je
sbb
dec
loope
xchg
adc
pop
lahf
xor
mov
rorb
stos
bound
jbe
out
mov
or
cs
sub
es
xorl
je
sbb
dec
loopne
xchg
adc
push
lahf
xor
mov
rorb
mov
popa
xor
ljmp
sub
insl
pop
jg
gs
hlt
mov
mov
ret
hlt
jnp
fisubrs
gs
push
test
push
mov
mov
push
aas
lds
outsb
xchg
sbb
jne
mov
mov
imul
popf
push
adc
mov
fdivs
mov
ffree
cs
lret
loop
adc
imul
fwait
xchg
xchg
enter
sbb
stos
lock
arpl
xor
int3
jno
aad
incl
push
test
repz
jl
jno
imul
les
push
lahf
in
dec
pop
shll
push
les
mov
mov
ficoms
test
in
xor
popa
or
dec
in
pop
cmp
add
mov
repnz
mov
pop
add
adc
jp
aas
lods
push
cwtl
das
mov
pop
ljmp
in
push
std
aam
das
je
lcall
and
aam
inc
xlat
dec
cmc
lds
imul
inc
dec
jecxz
mov
jns
lret
add
xor
push
cmpsl
xchg
mov
cmp
xchg
mov
pop
outsl
out
pop
sbb
mov
out
imul
push
xor
push
push
scas
inc
nop
dec
jo
jl
sbb
push
inc
in
xorl
push
movsl
inc
sub
lds
mov
lahf
pop
jnp
in
inc
pop
icebp
cwtl
cld
xchg
incl
sbb
xchg
addr16
scas
and
dec
loope
inc
loop
outsl
enter
or
cmp
in
arpl
xor
mov
and
test
or
inc
mov
subb
xchg
sub
cmp
push
dec
iret
movsw
outsb
sbb
nop
and
dec
jecxz
cmpb
mov
out
or
cmpsb
ds
nop
lret
cmp
jne
mov
inc
xlat
mov
fldl
into
lods
dec
loopne
out
or
testl
popf
xor
xchg
mov
lret
jmp
mov
mov
cmpsl
ds
or
sbb
pop
jnp
push
leave
dec
out
jno
std
bound
sub
hlt
mov
repnz
push
lods
xchg
pop
sbb
sbbb
scas
rcrl
daa
mov
xlat
fcomip
mov
int3
cmp
cld
repnz
mov
lahf
ss
insl
add
xchg
stos
inc
or
mov
out
xchg
mov
mov
hlt
fisubs
push
push
ret
out
cld
jbe
jb
mov
jns
sti
pop
cli
sbb
mov
adc
add
mov
int3
push
add
lds
lret
add
imul
inc
fists
add
mov
add
inc
inc
fidivrl
jns
or
pop
push
movsl
inc
imul
pop
pop
mov
cmpb
outsl
push
pop
mov
nop
ss
pop
add
xchg
push
enter
jbe
es
inc
dec
jecxz
notl
push
pop
jb
dec
addl
inc
and
mov
popf
adc
xchg
inc
cmpsb
aad
sbb
push
jle
cmc
mov
int3
out
mov
fbstp
rorl
adc
repnz
hlt
jecxz
fs
push
add
addr16
mov
cmc
or
dec
pop
sub
rcrb
xor
sub
in
dec
dec
mov
insl
nop
pusha
xchg
push
adc
push
gs
xchg
pop
clc
push
jp
dec
sbb
movsl
mov
jnp
mov
sbb
mov
mov
js
jge
shrb
and
pop
in
push
inc
in
orl
xlat
outsb
dec
or
push
adc
push
sbb
jnp
das
cld
xchg
mov
ret
mov
sub
cmc
ds
jmp
dec
jecxz
sti
xchg
xchg
andb
cltd
mov
ljmp
or
fdivrs
imul
fisubrl
add
cmc
mov
mov
jne
loopne
mov
adc
rcrl
cld
xchg
push
dec
pop
bnd
les
adc
test
dec
loope
add
loop
fldcw
ret
mov
push
enter
jb
das
fs
xlat
outsb
int3
test
jns
outsb
aad
xchg
sbb
scas
mov
bound
sbb
dec
cmp
mov
ljmp
rol
xor
rclb
daa
mov
pushf
add
mov
cbtw
lds
or
inc
sub
fwait
loope
rcrb
mov
xchg
cs
fsubrs
xchg
mov
cli
xchg
push
push
push
out
jbe
dec
push
mov
jnp
dec
aas
jnp
insb
add
scas
push
lods
and
test
add
divl
mov
lea
jnp
pop
mov
inc
push
popf
mov
enter
sub
shrl
and
nop
mov
cwtl
das
and
dec
fbstp
push
pusha
testl
mov
pop
das
cmp
data16
jbe
push
ja
cmp
mov
enter
cmp
mov
adc
nop
in
out
inc
fdivrs
xchg
mov
pop
inc
fmuls
sub
jle
jg
ret
jo
inc
fsubl
xchg
or
add
aas
xchg
test
or
mov
subl
imul
dec
add
cmp
sbb
pop
jp
dec
and
cs
or
pop
hlt
or
mov
adc
jg
or
stos
sbb
xchg
lods
jge
inc
lods
into
jns
rorb
loope
sti
shrb
pop
repz
sub
decb
in
js
jae
lcall
popa
clc
int3
sub
ss
imul
cld
fs
pop
inc
add
push
aam
icebp
add
icebp
push
mov
sti
orl
mov
push
mov
dec
testb
cmp
push
push
mov
inc
notb
lods
push
imul
sub
jl
test
push
mov
nop
lds
mov
xchg
lds
stc
xchg
or
es
sbb
stc
cmp
push
out
sub
mov
mov
pop
xchg
cmpsl
ds
pop
sub
std
add
add
fs
lds
mov
bound
xor
subb
jo
adc
dec
pop
shrl
in
xchg
pop
jo
ret
jo
filds
inc
frstor
inc
pushf
xor
push
jb
mov
stos
and
aaa
push
lret
sbb
dec
and
cld
xchg
ror
hlt
mov
icebp
les
xchg
inc
add
out
jne
and
lahf
xchg
add
sub
mov
xor
add
lock
fnstenv
pop
push
out
test
mov
push
adc
sbb
pop
mov
inc
pop
sbb
and
mov
sub
mov
pop
rclb
sbb
cmc
loope
out
in
test
or
jp
cmp
add
scas
sbb
mov
shll
jns
mov
lds
mov
push
out
xchg
fdivr
shrb
cli
cmp
jmp
cwtl
das
rorl
jle
push
movsl
popf
lahf
cmpsb
cmp
popa
xor
lds
les
pop
and
rcrl
mov
scas
or
int3
bound
shlb
jge
push
outsb
divps
ss
clc
push
jns
insw
aad
frstor
loopne
icebp
test
and
pop
in
cmpsb
push
icebp
mov
hlt
push
mov
mov
adc
shlb
sub
stc
nop
sub
sub
jp
ja
mov
aaa
inc
xlat
cmpsl
pop
sbb
cmp
pop
push
ljmp
add
es
jmpw
jns
sbb
outsl
jp
pusha
mov
pop
loope
cmp
sti
ror
jp
aad
push
enter
xchg
sbb
pop
loopne
mov
rorb
inc
push
sti
xchg
inc
jg
insl
sub
pusha
pop
sub
enter
adc
push
shl
jecxz
fistps
adc
dec
or
xor
pop
mov
lret
jno
mov
jecxz
jb
repnz
loop
mov
sub
mov
outsb
pop
add
jb
mov
cmp
jo
ret
or
rolb
xchg
iret
dec
into
pop
xlat
daa
mov
loop
ret
lock
xchg
adc
pop
imul
or
cmp
cmp
sbbl
add
add
sahf
sbb
jno
mov
jp
repnz
clc
cmp
pop
ja
cmp
pusha
repnz
insb
lret
in
cmp
xor
shlb
lahf
jl
xlat
outsb
and
rcll
lods
insb
out
sbb
cmp
add
pop
icebp
push
nop
xchg
sub
jbe
push
jecxz
dec
adc
ss
pushw
sub
jle
nop
push
rcrl
fiaddl
testl
pop
shr
popa
in
cmp
clc
cs
mov
in
imul
or
mov
add
loopne
repnz
into
rcll
in
add
mov
ficomps
gs
dec
call
lods
xor
sbb
shlb
aam
rclb
jo
daa
fidivs
dec
mov
in
fwait
lods
inc
int
sbb
and
rclb
mov
out
jecxz
push
popf
lds
or
pop
pop
xchg
sub
stos
mov
fisttpll
shlb
fnstsw
rsqrtps
test
or
cmpl
sub
fsubrs
dec
dec
dec
out
sbb
cmp
pop
testl
sub
idiv
popf
cmp
sbb
out
lods
dec
or
mov
fcomp
mov
cmp
leave
int
out
adcb
push
ljmp
imul
lods
jbe
mov
gs
pushf
lret
bound
pop
iret
push
ljmp
inc
fisubrl
or
jl
scas
out
sub
xlat
mov
push
pop
iret
mov
jg
dec
mov
xor
mov
fistl
or
repz
outsl
push
pop
jns
test
orb
cld
shrl
in
es
pusha
pop
jo
add
ret
mov
cmc
int3
add
inc
dec
push
and
dec
imul
fldenv
ret
repz
fwait
inc
adc
push
inc
popa
and
cltd
mov
xlat
in
mov
divb
or
jge
mov
xchg
stos
fwait
xor
mov
add
dec
dec
in
mov
cmp
fs
scas
loope
pop
lock
ss
xlat
ja
or
popl
test
enter
das
mov
scas
inc
sub
xchg
sub
jg
jge
dec
out
sahf
mov
ja
repz
out
and
fnstenv
inc
mov
js
ja
pop
cltd
out
xchg
jp
in
stos
ljmp
cmp
mov
ret
cs
outsb
sbb
xchg
xor
popf
cmp
imul
dec
adc
pop
mov
mov
adc
sbb
pushf
addb
inc
hlt
clts
into
int3
pop
cld
les
std
insb
adc
sarb
loopne
sub
sti
ret
movq
ss
lods
jp
stos
and
and
push
jnp
push
jns
jae
cmc
std
xchg
jecxz
pop
daa
orl
je
dec
fsubs
push
lds
jbe
lods
jbe
mov
mov
sub
dec
jnp
jne
movsl
shr
cltd
cmp
xchg
jno
and
pop
ret
xchg
test
cmpsl
adc
jecxz
mov
mov
mov
lahf
dec
and
pop
or
xor
and
adc
mov
mov
push
outsl
dec
arpl
loope
ljmp
enter
pop
or
mov
stos
fdivrl
inc
cld
or
inc
mov
jg
push
push
mov
mov
lods
les
test
sbb
sbb
dec
and
setp
cmpsl
mov
shrl
push
mov
ds
iret
bound
stos
out
loopne
xor
out
push
fwait
xor
push
call
test
or
movsl
popl
cmc
mulw
xlat
int3
pushw
inc
jnp
ja
in
adcb
daa
ret
mov
adc
aaa
lds
sbb
dec
mov
js
insl
ja
lahf
fcomip
mov
shll
arpl
dec
inc
test
mov
shlb
push
in
pop
mov
mov
lret
mov
push
lods
or
fisubs
psrlq
adc
stos
inc
arpl
dec
xchg
dec
add
inc
or
test
sub
out
xchg
push
stos
inc
mov
leave
inc
in
mov
jae
jnp
ficoml
out
fistpll
adc
out
aaa
je
or
arpl
divl
jns
data16
js
sti
bound
and
and
testl
dec
outsb
or
sub
ljmp
mov
aam
cld
iret
data16
data16
push
in
push
shlb
push
or
shrl
cmp
or
les
inc
or
scas
stos
pop
cmc
sbb
imul
ret
mov
cli
xchg
nop
aam
call
prefetchwt1
push
xchg
ret
pop
fimull
fisttps
lcall
sbbb
mov
lcall
inc
mov
loope
mov
pop
enter
mov
mov
mov
icebp
ret
pop
iret
push
pop
aad
fisubs
faddp
lds
out
shlb
adc
fisubl
adc
out
xchg
push
sbb
push
or
mov
pop
adc
scas
inc
mov
ljmp
rclb
aad
dec
pop
setl
test
outsb
sbb
hlt
cmp
rorl
addb
ss
inc
add
push
test
out
clc
pop
popf
pop
hlt
into
loop
xorl
cli
sbb
add
lret
clc
je
xchg
adc
mov
aaa
into
mov
loope
or
inc
xchg
sub
mov
mov
adc
jge
fnsave
mov
add
loopne
pop
mov
jge
fs
hlt
xchg
xchg
xlat
outsb
ret
adc
push
std
xchg
mov
xchg
sub
ss
xchg
test
enter
mov
lods
push
aas
pop
or
jb
pop
push
mov
stc
inc
in
outsl
push
out
sbbb
jecxz
stos
ja
jmp
pusha
dec
xor
ds
mov
inc
xchg
xchg
sub
cs
sahf
mov
jb
in
repz
mov
jle
jp
sbb
aam
jnp
sbbl
sub
xchg
dec
dec
mov
push
outsb
jnp
insb
jbe
lcall
jnp
cmp
pop
in
test
out
mov
fildll
hlt
jge
fidivs
sahf
sbb
add
jne
mov
out
push
lods
fmuls
fsubrs
stc
and
imulb
dec
loop
mov
pop
not
cmp
arpl
movsb
xchg
cs
arpl
lret
sbb
jbe
in
and
lods
ds
es
or
cwtl
xlat
sub
adc
jl
call
add
mov
inc
addr16
aaa
mov
add
and
mov
inc
sub
xor
movsl
mov
cmc
cmp
jb
orl
mov
fistl
pop
push
filds
arpl
xchg
xchg
adc
xorl
test
jne
shll
cmp
push
dec
int3
insb
push
mov
icebp
jbe
mov
loopne
jnp
push
cmpsb
movsb
pop
notl
sub
cmc
in
xorb
daa
mov
outsl
and
xchg
sub
mov
lcall
add
test
xchg
sub
out
test
pop
jge
mov
pop
push
pop
scas
dec
lea
cmpsb
addr16
sbb
popa
clc
mov
fidivs
adc
out
xchg
movsl
cmp
sbbl
mov
pop
mulb
out
xchg
insl
jecxz
pop
push
insb
add
xsha1
cmpsb
lret
loop
inc
lds
mov
lahf
les
cmpl
lahf
push
jno
es
rol
icebp
cs
pop
outsb
rclb
repz
ret
stc
iret
jmp
out
repnz
lods
dec
mov
xchg
sub
xchg
fs
mov
mov
xchg
jle
ja
adcb
outsl
cmp
jge
jbe
xchg
insb
sahf
push
xor
imul
sbb
sbb
std
dec
leave
mov
ret
rep
sub
jge
repnz
loope
insl
xchg
sub
hlt
inc
sub
and
clc
icebp
pop
repnz
les
push
add
mov
push
push
sub
mov
pop
data16
jecxz
dec
movsl
nop
test
aam
in
push
mov
rcrb
scas
cmp
push
rcrl
daa
mov
push
mov
jb
adc
nop
daa
xchg
push
in
adc
or
jne
xchg
sarb
push
mov
es
lods
inc
loope
rcrl
add
movsl
inc
inc
fdivs
mov
rolb
mov
adc
cmp
push
lods
push
mov
bound
xchg
or
lret
stos
sub
int
dec
enter
dec
arpl
lret
and
jb
test
fidivs
es
push
sub
lods
pop
jno
out
stos
inc
inc
fdivs
je
xchg
lret
imul
popa
rcrl
aad
mov
loope
jmp
inc
andl
adc
pusha
dec
lds
aas
push
push
mov
call
lock
lahf
fistpl
mov
std
cli
jno
outsl
ficomps
out
imul
out
mov
loop
jno
pop
cmp
mov
ret
inc
push
daa
out
sub
cli
push
mov
pop
or
fwait
or
xchg
sub
ret
pop
push
dec
aaa
mov
cmp
js
and
std
std
lods
aad
popf
lret
adc
lea
cltd
mov
and
cmpsb
insb
pop
arpl
movsl
inc
cwtl
sbb
sbb
out
cmp
inc
or
pop
adc
push
xchg
xor
mov
pop
push
xor
pop
rcrl
mov
inc
inc
inc
fisubrl
sbb
out
xor
lcall
pop
cmpsl
jns
xor
mov
inc
std
or
lea
scas
mov
jno
enter
mov
lock
jbe
add
aas
cmp
add
mov
push
adc
sbb
mov
push
popf
insl
rolb
hlt
lock
jo
cmp
lea
dec
mov
dec
in
rcl
sbb
test
mov
imul
mov
add
test
repz
sub
mov
mov
mov
clc
jl
xchg
cmp
jl
dec
ds
fmuls
jle
xor
testl
push
jns
data16
jge
inc
test
dec
lcall
sbb
lock
repz
fldenv
push
and
mov
pop
ss
or
cmp
inc
lods
inc
stos
or
xorb
xor
xchg
inc
mov
jne
dec
mov
push
add
es
pop
es
mov
mov
jns
sbb
push
stos
test
in
cmp
fsts
dec
xchg
jl
lret
push
test
jecxz
cmp
cmp
xchg
or
ret
outsl
jl
push
sbb
fmuls
jecxz
fstl
xor
fimull
inc
aad
ja
inc
ss
mov
inc
jge
les
add
jnp
scas
pop
sbb
lods
outsb
xchg
dec
movsb
nop
xchg
xchg
push
mov
adc
imul
adc
cli
mov
in
dec
mov
fistps
or
adc
lock
adc
test
mov
repnz
scas
jb
adc
sbb
stc
or
shrl
sarl
shrl
jne
adc
ret
fnstenv
xor
pop
fisttpll
xor
nop
fwait
mov
xchg
sub
xchg
push
ds
je
push
repnz
dec
xor
jecxz
inc
dec
out
mov
ds
test
xorb
mov
dec
scas
stos
inc
loope
aam
and
sbb
jmp
dec
es
sbb
imull
pop
pop
sbb
adc
outsl
dec
xlat
sahf
mov
je
dec
fmull
sahf
int3
pop
push
lods
sbb
les
cmp
stos
mov
inc
dec
call
mov
cs
push
cmp
xor
cmc
push
sbb
sbb
mov
add
dec
popa
insb
sysexit
nop
neg
jne
push
and
fsubs
mov
sbb
lret
sub
inc
shrb
lret
test
jae
js
and
mov
ret
imul
or
or
mov
or
mov
xchg
cmp
pushf
out
lret
insb
add
adc
dec
pop
mov
aas
gs
add
and
xchg
dec
int
mov
popf
inc
fstp
and
ret
sub
es
cmp
push
add
lret
xor
aaa
out
mov
push
pop
mov
dec
cwtl
das
adc
xor
mov
rcl
jge
adc
adc
jo
add
adc
xchg
push
int3
arpl
cs
pop
mov
fildl
out
dec
icebp
mov
pushf
xor
cmp
dec
data16
loope
push
aad
xchg
jo
pop
jno
pop
popf
stos
popa
mov
cmpsl
xor
movsl
cmp
push
cs
jle
push
cmpsb
lods
sbb
xor
mov
or
mov
pop
imul
jno
loop
pop
test
ss
xchg
push
insb
xor
jge
cmc
push
repz
mov
lea
test
dec
pushf
inc
shlb
jge
xchg
lds
add
movsb
ljmp
into
aad
sbb
mov
xchg
push
and
jmp
fstp
mov
pop
mov
dec
adc
add
ret
scas
pop
loopne
xchg
or
cmpsl
cmp
xchg
jae
jle
cmpl
lods
scas
mov
inc
cmp
cli
pop
js
leave
lea
test
mov
mov
mov
lcall
pop
sahf
and
and
inc
inc
movsb
adc
icebp
in
and
mov
dec
out
xchg
sub
mov
into
pop
repz
pop
ret
and
add
dec
add
dec
dec
les
inc
lds
xor
inc
insb
jge
xchg
jp
test
mov
pop
push
inc
inc
and
lcall
xchg
adc
leave
mov
and
fs
loopne
mov
jl,pn
fmul
loope
adc
mov
fisubrl
scas
pushf
sti
aad
dec
mov
aad
mov
out
aas
rclb
push
shll
pop
jg
sub
mov
adc
ror
mov
pop
mov
shll
test
cmp
sbb
and
add
cld
xor
cmp
cmpb
stc
mov
scas
pop
pop
xor
testl
jns
add
mov
pop
xlat
fs
nop
lcall
gs
xchg
xchg
rorb
or
xchg
outsb
aaa
mov
jl
xor
xchg
push
fdivl
mov
mov
into
mov
test
fnstsw
mov
mov
xchg
xchg
ss
pop
jecxz
push
and
lods
pop
pushf
cwtl
or
mov
or
call
xor
dec
dec
add
js
outsb
aam
andl
test
aam
es
push
adc
push
jo
adc
pop
repnz
pop
mov
push
lods
stos
movsl
push
jg
inc
lods
out
sbb
push
mov
ret
push
xchg
js
pop
stos
mov
and
arpl
test
pop
out
add
xor
sbb
adc
imul
jns
xchg
jp
sub
insl
aas
repz
inc
hlt
lods
mov
sub
xchg
les
and
fmulp
adc
mov
sti
mov
popa
bound
mov
jp
or
js
js
ja
adc
pop
jbe
xchg
add
mov
xchg
jp
test
mov
adc
xor
test
push
ret
or
sub
mov
mov
push
lahf
xchg
adc
sub
jge
out
daa
arpl
ds
call
sahf
or
aam
lock
mov
adc
mov
cltd
ffreep
ret
aas
in
and
mov
dec
fistps
xchg
pusha
lret
data16
cli
dec
jecxz
dec
adc
insb
lods
inc
sahf
arpl
mov
add
xor
push
adc
movsl
sbb
push
lods
mov
or
mov
jge
cmp
inc
sahf
push
insb
mov
inc
and
arpl
sub
sbb
fcoml
mov
movsl
andb
divb
fidivs
jecxz
add
stos
push
mov
test
cld
mov
sbb
int
mov
adc
xor
inc
mov
push
sahf
pop
adc
sahf
xchg
jb
pusha
push
clc
adc
iret
dec
xchg
push
scas
stc
pop
xor
enter
ret
xor
dec
icebp
push
mov
mov
jge
insb
les
and
cmp
insl
mov
or
mov
in
sahf
enter
sub
aas
call
push
jmp
inc
mov
lret
mov
xchg
mov
pop
loopne
lahf
xchg
loop
les
mov
sbb
aas
and
dec
add
lahf
loop
leave
adcb
xchg
imul
sti
xor
fisttpll
push
sub
push
and
mov
lods
ss
cmp
jle
enter
dec
in
mov
add
mov
pusha
loop
mov
inc
adc
sub
push
push
fidivrs
xchg
push
test
or
addr16
stos
dec
rorb
ljmp
cmp
fstps
les
negb
out
pop
daa
and
lods
push
nop
sub
dec
lahf
les
outsb
out
cwtl
repz
xchg
out
into
das
mov
and
inc
popa
adc
je
sahf
fwait
ds
sbb
sbb
push
mov
pusha
popa
arpl
jae
lods
push
sbb
dec
ret
mov
fisubrs
stc
lods
repz
mov
cmp
pop
push
fdivrs
jne
hlt
mov
sti
add
xor
pop
out
mov
or
addr16
jb
out
jbe
sbb
aad
enter
inc
repnz
jbe
loopne
es
movsb
pop
les
in
mov
fwait
in
testl
lcall
sub
add
mov
jmp
shl
dec
add
dec
adc
cmpsb
fs
xor
and
mov
sub
adc
rcll
mov
jno
rcll
xor
jbe
push
adc
hlt
mov
push
lret
daa
xchg
sarb
sub
sbbl
sub
lret
pop
icebp
pop
dec
dec
mov
aas
outsb
xor
sahf
xor
clc
push
inc
jnp
push
add
add
xorl
mov
ds
fsts
or
call
mov
inc
ret
adc
xor
aaa
rorb
icebp
div
xchg
jns
jmp
dec
loopne
xor
loope
adc
loop
cmc
adc
jg
add
call
push
test
test
pop
rcl
fldt
scas
icebp
sbb
ljmpw
dec
adc
pop
push
movsl
lea
fwait
xor
sbb
sbb
add
or
hlt
out
je
xor
or
fcmovnu
lret
gs
test
mov
inc
mov
pop
imulb
les
push
mov
xor
push
enter
xchg
and
iret
push
pop
outsl
out
cmpb
aam
cmpsb
ss
cmpl
or
push
test
adc
fidivrs
inc
mov
mov
dec
cli
fmul
inc
scas
cwtl
aam
psubsb
sub
xchg
add
fcoml
push
adc
pop
mov
mov
xchg
fistps
pushf
xor
imul
jg
mov
mov
sahf
repnz
adcl
and
cmc
sbbb
dec
les
pusha
xchg
sub
test
jae
mov
fnstcw
clc
jb
mov
jns
sub
pop
inc
hlt
fisubrl
pushf
aam
movl
push
gs
mov
xor
adc
jle
adc
pop
fldenv
inc
mov
ror
dec
imul
outsb
pushf
sub
xchg
hlt
xchg
push
movsb
cmp
cmp
or
cmpsb
loop
xor
scas
cmp
sub
sbb
push
mov
jae
dec
aad
and
rcll
ljmp
jp
je
and
das
std
pop
popf
loopne
int3
icebp
shlb
mov
jle
rcl
or
dec
cmp
or
jg
popa
jne
imul
int3
ljmp
mov
dec
fdivrl
sub
jno
out
xchg
jb
sti
loop
sti
xchg
jl
mov
push
or
lret
stos
sbb
pop
mov
jne
pop
mov
fldt
mov
cmc
xor
inc
arpl
int3
jmp
or
out
add
fnstcw
inc
xor
add
loopne
sub
sub
pop
pop
icebp
arpl
jmp
mov
cmp
jb
imul
in
lock
cmp
popf
loope
or
addr16
scas
sbb
cmp
jle
xlat
nop
daa
or
ret
xor
lret
sub
insb
in
in
mov
stc
js
repz
fidivl
into
pop
or
xor
adc
cmc
xchg
ds
icebp
lret
fiaddl
loope
push
lret
jae
and
cmp
or
pop
int3
mov
flds
xlat
mov
leave
jg
out
cmp
popf
ss
inc
aad
mov
pop
stc
sub
mov
add
dec
roll
mov
xor
or
adc
or
out
push
add
clc
cmp
into
loopne
xor
sarb
rolb
call
sbbl
insl
mov
les
pop
test
cmp
pop
in
xchg
jmp
dec
xor
add
xchg
sub
jb
jo
push
mov
inc
and
xchg
lds
mov
stos
inc
or
cwtl
outsl
push
shrl
stos
gs
sbb
test
loop
shrb
and
nop
daa
cmp
inc
mov
sbb
lods
adcl
mov
test
xchg
dec
popa
loop
push
fsubp
faddl
xchg
push
jns
lcall
out
js
popf
cmp
xor
jecxz
mov
adc
pusha
xorl
mov
pop
repz
inc
fucomp
inc
es
lcall
fucomi
arpl
lock
scas
sbb
sub
fidivrs
jp
or
inc
ret
dec
push
add
test
ret
mov
js
xor
fwait
add
js
cmpsb
test
sbb
fstl
mov
mov
push
test
xchg
pop
leave
ds
stos
imul
dec
fbstp
and
cmpsb
xchg
int
jns
aam
inc
js
jb
jno
mov
jle
pop
adc
movb
jg
mov
sub
cmp
shr
aam
ljmp
dec
jp
pop
repnz
xchg
leave
jp
fwait
push
ljmp
dec
cmp
dec
fistps
dec
xor
cmp
mov
in
movsb
sti
xchg
or
test
jle
push
jmp
and
insb
add
sub
jg
in
test
add
mov
sub
testl
daa
jg
pop
dec
dec
cli
xchg
dec
outsl
scas
inc
xor
add
mov
andl
jl
sub
mov
dec
lcall
lods
arpl
push
fmulp
arpl
shl
mov
sar
mov
sbbl
xchg
xlat
dec
loop
inc
testb
aaa
fcmovu
pusha
mov
aaa
mov
stos
inc
inc
inc
inc
ficoml
mov
enter
jg
xchg
insl
add
test
and
mov
mov
xchg
mov
adc
aam
fidivl
repnz
push
push
call
enter
mov
scas
inc
sub
jne
jle
xor
add
es
fstl
insl
add
js
push
jp
test
push
fwait
mov
lock
das
test
pop
xchg
leave
xchg
sub
mov
cltd
decl
jle
and
loopne
pop
lock
movsb
pop
repnz
xchg
jae
or
insl
adc
enter
sbb
pop
mov
dec
mov
imul
les
mov
aad
pushf
mov
ret
pop
daa
cmp
movsb
mov
lock
cvtps2pd
ret
push
mull
in
pop
add
in
test
repz
and
push
lock
movsb
adc
xchg
mov
fnsave
jb
adc
mov
loope
mov
jg
clc
movsb
mov
sar
inc
fistpl
xchg
stos
inc
add
mov
icebp
mov
add
mov
lock
mov
arpl
jge
addl
js
push
out
and
or
xor
or
aam
clc
jge
mov
jge,pn
pusha
call
fidivs
or
and
cmp
adc
xchg
inc
mov
inc
sub
dec
cmpsb
scas
test
adc
add
int3
arpl
jmp
pop
and
lcall
mov
mov
or
dec
cltd
aas
push
jnp
xchg
fsubs
xlat
stc
stos
test
imul
popf
decb
test
les
decb
mov
imul
jae
xlat
mov
dec
in
icebp
pop
movsb
rol
mov
add
adc
ja
cwtl
imul
and
mull
loope
mov
push
mov
mov
cmp
xchg
movsb
inc
push
mov
in
aam
lret
aad
rolb
fisttpll
ss
xchg
fs
mov
cmp
cmc
jo
mov
mov
jns
jl
or
movsl
xchg
push
fsubrs
adc
xchg
sub
popa
clc
mov
xchg
imul
push
xor
sbb
inc
mov
mov
lods
sbb
pop
cmp
adc
adc
adc
pop
icebp
fldt
sbb
stc
cmpsl
shlb
fs
push
outsb
insl
adc
popa
mov
xchg
outsb
aas
int3
lock
nopl
mov
imull
sahf
jo
mov
into
pushf
out
lods
push
jo
mov
sub
mov
mov
sub
mov
cwtl
clc
pop
pop
rcrl
mov
loop
sub
mov
int3
arpl
xor
xchg
std
scas
inc
das
mov
inc
fisubs
mov
leave
pusha
ss
sbbl
and
bnd
xchg
sub
test
out
and
push
ss
decb
mov
xchg
outsl
pop
adc
inc
std
xchg
shrl
lcall
sub
cmp
mov
fidivrs
adc
push
test
jae
sub
je
push
dec
out
xor
hlt
push
andb
ja
push
int3
dec
xor
cli
mov
repz
add
add
clc
sbb
lods
mov
int3
lcall
dec
add
ret
int3
jg
xor
jae
mov
mov
jns
addr16
pop
cld
es
stos
pop
mov
jbe,pt
movsl
xlat
pop
lods
lret
or
cli
in
adc
es
add
cmp
xor
adc
and
cmp
js
adc
cwtl
pop
pushf
xor
stc
nop
cmp
loope
inc
sub
xor
lods
inc
in
dec
mov
inc
adc
outsl
push
dec
test
out
test
repnz
add
gs
out
loope
or
push
lods
pop
inc
call
jecxz
bound
test
testb
es
lods
iret
data16
mov
xor
and
xor
inc
push
jne
mov
push
out
das
stos
lea
scas
inc
xor
sbb
stc
jne
pop
dec
mov
repnz
icebp
xor
mov
loop
xchg
and
add
sbb
cmpsl
outsb
pop
cmp
das
xchg
out
test
fldenv
loope
dec
rorb
stos
jo
add
inc
and
mov
push
or
repz
sub
ficoms
sbb
mov
fiaddl
push
push
mov
lock
push
mov
in
and
push
or
sub
pop
sbb
sub
and
dec
ja
push
stos
dec
cmc
scas
lcall
mov
lahf
mov
jmp
or
lds
jmp
das
pop
cmc
mov
jb
mov
and
or
decb
sub
mov
and
test
xchg
mov
mov
ja
test
push
pop
ret
scas
xchg
sub
jp
cmp
repnz
mov
gs
fnstenv
mov
jmp
ljmp
adc
ljmp
inc
stos
push
push
mov
lret
ljmp
jmp
loopne
cmp
mov
or
out
test
dec
in
sub
adc
sub
popa
clc
mov
fstps
mov
jnp
call
pop
popa
cmp
xchg
jns
mov
mov
mov
arpl
push
out
test
mov
rcll
aad
push
out
xchg
jg
shrb
popf
sbb
into
aas
mov
mov
ss
xchg
jmp
loopne
jle
pop
add
sahf
jge
xchg
inc
mov
outsb
add
push
mov
aaa
ja
sbb
aam
arpl
xchg
xor
mov
mov
sbb
insl
xlat
int3
arpl
mov
sbb
xchg
cs
or
in
mov
sub
mov
xchg
dec
ljmp
lea
lahf
sbb
js,pt
xchg
mov
call
pop
cltd
es
das
cmpb
dec
add
es
inc
xchg
mov
add
test
jp
mov
movsl
fwait
cmpsb
cmp
lock
insl
jp
in
test
mov
inc
out
push
and
nop
daa
cmp
ss
pop
shrb
pusha
int3
arpl
xchg
sub
shrl
nop
in
sub
xchg
sub
mov
leave
pusha
adc
aad
mov
repz
out
addr16
mov
fistps
mov
mov
and
pop
arpl
fidivl
mov
adc
ss
cmpsb
or
in
ja
jae
inc
fcoms
jge
add
es
xor
mov
push
in
andl
jae
or
dec
sub
pop
repnz
pop
xchg
rorb
lahf
sbbl
mov
rcll
jle
in
jbe
scas
inc
sub
dec
mov
insl
dec
shrb
mov
sub
mov
sbbl
push
sbb
push
inc
cmp
mov
mov
leave
out
test
or
cmp
mov
inc
pop
jb
dec
cmp
xchg
sub
shlb
lret
mov
mov
push
cmpsl
das
out
xchg
lea
orb
dec
aam
ret
lret
es
loopne
ret
hlt
js
test
fiaddl
or
negb
inc
fisubl
jg
xchg
sub
mov
gs
mov
mov
cmp
cltd
dec
mov
inc
in
xchg
jnp
sub
or
aaa
sub
test
rcl
shr
fs
push
outsl
scas
ds
stc
andb
inc
fcomi
fldcw
inc
das
sub
add
stc
jno
lahf
pop
cmc
inc
insb
and
dec
iret
js
push
imul
ds
sub
push
inc
pop
inc
ljmp
mov
pop
mov
repnz
pop
and
push
leave
sub
inc
inc
inc
into
nop
fcmovu
adc
mov
cld
outsb
and
lock
mov
bound
mov
inc
loopne
push
dec
cmc
out
imul
lds
jne
jo
fsubl
pop
dec
mov
lods
jl
fistps
in
aaa
ss
inc
pop
inc
int3
pop
repz
dec
jo
cmp
mov
ret
je
jns
jb
xlat
pop
leave
pop
mov
xchg
jge
pop
outsl
and
lret
and
aaa
stos
and
xchg
pop
inc
fcoml
xor
cmc
cld
adc
les
add
xchg
rcrb
ret
jnp
dec
ret
nop
jns
inc
mov
std
xorb
je
outsl
xor
xor
add
sbb
stos
fs
adc
sub
xor
inc
sbb
test
das
fiaddl
push
movsl
xor
mov
mov
xor
push
out
push
sbb
repnz
lods
or
ds
dec
in
jnp
mov
fisttps
push
xchg
data16
aad
loop
push
scas
cli
es
pop
sbb
imul
or
mov
js
lods
mov
pop
mov
mov
jnp
pushf
pop
fistpll
inc
jbe
jg
pop
mov
bound
int
fistpll
mov
in
jne
cmp
mov
add
xchg
mov
xchg
mov
movsl
hlt
mov
jbe
fs
push
mov
lea
mov
add
insb
call
xchg
mov
outsl
daa
and
insb
adc
fnstenv
fwait
mov
mov
icebp
inc
cmp
cmp
push
xchg
test
mov
xor
mov
xor
or
aaa
dec
hlt
nop
xor
lock
call
ret
jne
repz
cmp
xchg
sbb
cmp
xor
pop
sub
inc
in
mov
imul
fimull
fcmovnbe
pop
mov
rcr
rclb
mov
and
xchg
ss
and
mov
scas
fisubrl
out
xchg
rorl
sbb
pushf
xchg
dec
or
mov
and
cmp
jecxz
ja
xchg
xor
dec
push
xchg
loop
ds
add
mov
jl
inc
sub
mov
dec
into
in
cmpsb
adc
mov
lods
lds
pop
add
add
jg
xchg
sub
fs
jmp
mov
add
sbb
mov
aaa
fisubrl
aam
sub
hlt
movsl
mov
shrl
mov
bound
repz
jmp
lods
add
jb
aas
mov
lret
sbb
sub
jle
jnp
fs
or
adc
mov
cli
mov
adc
inc
lods
sbbl
sar
lahf
stos
lret
mov
je
orb
fwait
and
and
adc
enter
or
xor
xchg
jmp
loope
add
sub
ret
call
xchg
adc
adc
mov
js
xchg
call
xchg
push
pop
sub
leave
daa
pop
lock
dec
sbb
add
mov
push
xchg
jbe
inc
adc
xor
in
gs
inc
sbb
enter
adc
ret
sbb
sub
cmp
add
or
mov
jg
in
flds
push
aaa
lods
into
xchg
loopne
fsubl
mov
jnp
popa
jb
fwait
std
ja
mov
push
insl
or
subl
fs
cmp
scas
std
aad
std
dec
dec
mov
popa
adcb
aam
repnz
icebp
cmp
dec
inc
dec
and
outsb
cs
movb
xor
subb
mov
lret
adc
lret
jge
bound
xchg
jl
test
adc
push
lock
xlat
test
dec
scas
xchg
cmp
loop
xchg
push
out
or
pop
aam
test
je
push
jae
xchg
gs
pop
jnp
push
mov
push
mov
lea
repz
dec
mov
int3
and
inc
dec
out
mov
outsb
jl
lcall
adc
movsl
ret
pcmpeqb
cmp
jle
dec
push
sbb
clc
or
sbb
mov
xchg
xor
repz
stc
and
mov
sbb
inc
push
popf
inc
mov
add
mov
inc
fstl
fnsave
stc
adc
mov
mov
mov
in
stos
aaa
lret
pushf
movsl
scas
inc
fcomp
dec
mov
sub
xchg
sub
xchg
ja
mov
pop
mov
shrl
push
mov
lcall
xchg
mov
cmp
push
dec
add
inc
push
mov
pushf
xchg
and
ret
sbb
fidivrs
pop
fistpl
or
mov
leave
push
out
stc
orl
xchg
inc
test
test
hlt
lods
xor
data16
and
inc
arpl
mov
fadd
push
ficompl
dec
pop
jnp
ret
ret
adc
loope
test
lcall
pop
stc
add
xchg
aas
pop
cmp
and
sub
and
pop
mov
xor
cli
xchg
or
imul
sbb
rcrb
or
jb
mov
push
nop
jne
movsl
mov
adc
or
idivl
sub
xchg
ja
mov
lea
dec
mov
adc
ja
aas
mov
add
pop
lock
dec
andb
ja
push
mov
fs
cmp
decl
xchg
mov
ret
mov
aam
adc
pop
test
sbb
rorl
xchg
sbb
jbe
cmpsb
sub
push
inc
fstpt
xchg
pop
lcall
out
mov
push
jne
xor
lcall
movsl
sub
adc
xchg
xor
out
jne
jno
add
xor
cmp
ret
xlat
sbb
mov
mov
out
mov
dec
addr16
mov
adc
rcll
push
xor
into
xchg
cltd
movsb
cld
xchg
fsub
cmc
mov
cli
ss
mov
and
fwait
lods
inc
mov
enter
and
cld
dec
sub
sub
lea
lods
mov
lods
clc
sub
das
cmp
sbb
and
sti
push
pop
dec
fstps
nop
test
popa
negb
and
jge
jb
push
in
add
scas
shrl
test
xchg
pop
dec
sahf
add
push
push
inc
and
fimull
fsubrs
adc
or
js
insb
aam
bound
jp
push
aaa
xlat
icebp
jo
arpl
lock
repnz
and
pop
test
xchg
sbb
mov
mov
mov
fcmovnbe
addl
and
out
sbbb
add
das
mov
push
ja
xchg
mov
mov
adc
and
xchg
ds
loop
jmp
negb
in
adc
outsl
xchg
lret
xchg
push
xor
add
scas
cs
push
jo
sbb
test
test
push
mov
ret
mov
mov
int
in
imul
adc
dec
fchs
cli
mov
stos
mov
push
ljmp
sub
dec
pop
mov
dec
dec
insb
mov
mov
inc
push
mov
inc
out
ja
call
addb
and
ret
push
test
lcall
cltd
sbb
jl
pusha
jmp
rcrl
fs
sbb
xchg
popa
xchg
in
insl
ja
pop
in
lret
add
leave
mov
push
mov
loope
pop
test
movaps
pop
xor
aas
and
outsl
mov
xchg
mov
popf
pop
sbb
and
jmp
loope
inc
xchg
mov
hlt
mov
adc
test
sti
xchg
cld
loop
xor
adc
sub
minps
xchg
sub
fisubrs
push
mov
mov
or
ret
testl
loope
jp
xlat
inc
adc
aam
pop
xor
aam
cmp
cmp
sbb
sti
and
inc
adc
iret
mov
push
push
xchg
xchg
dec
xchg
mov
scas
scas
sub
loopne
stc
add
subb
je
pop
push
das
movb
dec
mov
add
ret
insb
addb
inc
sub
es
ljmp
cmp
das
jae
popa
jb
sbb
jp
jnp
inc
mov
repnz
push
mov
jp
inc
xlat
movsl
enter
cmc
push
mov
jmp
xor
out
lock
fstps
xchg
dec
add
ret
dec
test
mov
scas
mov
and
sbb
jg
mov
jnp
stos
nop
test
dec
fcmovb
pop
or
in
test
lds
clc
dec
or
rorl
pop
lahf
ror
adc
mov
sub
repz
mov
mov
fistpll
xor
mov
int
or
mov
push
sbb
popa
mov
and
add
addl
push
lock
cmp
pop
mov
mov
movsl
dec
mov
ror
popa
popa
mov
pop
xchg
lahf
jg
imul
imul
cmp
fisttps
outsb
gs
test
scas
rorb
or
xor
je
xchg
cwtl
das
xor
push
mov
cmp
push
lcall
addb
cmp
cmp
pop
clc
fs
jecxz
int
inc
sbb
mov
and
ret
dec
xor
fnstenv
adc
add
lods
imul
sbb
sbb
test
lods
fdecstp
mov
leave
xor
dec
rcrl
out
fimuls
ds
repnz
adc
mov
sahf
icebp
mov
ucomiss
add
pop
cmp
out
mov
fsts
pushf
pop
icebp
daa
sub
adc
repnz
sarb
inc
dec
jg
push
cmpsl
aaa
into
stc
add
clc
mov
repz
loope
negb
xchg
or
gs
or
repnz
mov
adc
pusha
das
out
mov
lea
mov
mov
mov
into
and
adc
and
inc
loopne
add
sbb
das
and
push
push
ror
pop
loope
jae
mov
mov
push
mov
aam
cmp
cmpsb
pop
adc
jns
movsb
xchg
adc
push
and
xor
test
ja
das
cs
or
subl
mov
cmp
enter
movsl
sub
hlt
out
sbb
add
xor
mov
mov
mov
inc
lods
int3
or
jne
imul
loop
into
and
inc
inc
addr16
jne
pop
cltd
int
test
popf
dec
mov
cld
mov
pop
cli
sub
add
dec
subl
mov
xor
aad
or
orl
stos
inc
lret
push
xchg
std
mov
popf
add
inc
push
in
xorl
jmp
push
out
add
xor
outsb
mov
sarb
adc
or
sahf
inc
out
in
sub
iret
ret
movsb
jne
addr16
jl
rorl
and
insb
mov
xor
cmp
sbbl
xchg
mov
in
xchg
fnstcw
subb
int
lahf
enter
jle
imul
mov
push
lods
repz
mov
push
jg
popf
stos
movsl
pop
fstl
mov
fsubl
movsl
cmp
or
add
mov
rorl
sub
and
adc
fnstsw
loop
or
js
mov
mov
push
nop
nop
mov
mov
xchg
fldl2e
orb
mov
aas
push
pop
adc
lcall
cmp
xor
mov
cltd
mov
mov
cmp
ret
nop
adc
shll
test
inc
mov
bnd
inc
stos
add
test
cmp
test
dec
pop
mov
bound
rcr
repnz
loopne
push
mov
mov
in
pop
lret
lds
mov
lock
rclb
leave
ja
movsl
inc
adc
push
insb
dec
repnz
jecxz
insb
popf
xor
sbb
outsl
test
rclb
lret
pop
into
xchg
add
sbb
test
inc
push
mov
add
repnz
push
scas
and
fiadds
inc
xor
cmp
sub
in
add
and
inc
mov
fmull
xchg
out
leave
fucomp
sti
test
ss
test
push
pushf
decl
xchg
push
push
or
mov
pop
push
call
pusha
add
ret
arpl
fwait
adc
adc
xchg
push
out
out
cltd
das
js
xchg
xor
sbb
cmp
in
insb
mov
rcl
rclb
mov
inc
hlt
mov
iret
ret
xchg
inc
rorl
loopne
mov
jl
aas
push
sbb
push
popa
dec
aam
pusha
pop
jmp
shrb
mov
pop
repz
or
cltd
rcrb
xchg
loop
idiv
xchg
daa
cld
jno
test
lahf
mov
jne
inc
xor
pop
xchg
xor
bound
pop
inc
xchg
adc
sbb
ss
stc
nop
fimuls
sbb
fnstenv
das
jo
daa
cmp
dec
add
aaa
fstps
loop
and
addr16
xchg
jl
out
xor
inc
rcrb
out
test
inc
push
jg
cmp
cltd
movsb
or
mov
shlb
ret
xor
pushl
jne
xchg
ss
jbe
imul
and
pushf
mov
push
jl
addr16
xor
pop
sbb
mov
mov
aas
rcr
jo
ljmp
jno
xchg
hlt
jle
inc
lcall
pop
jo
cmc
sarb
inc
sub
push
fcmovne
into
arpl
idivb
pop
mov
mov
adc
test
add
or
lret
push
add
ret
fldenv
pop
ret
dec
loop,pt
dec
jecxz
int
xor
or
ja
cmp
sub
nop
outsb
dec
hlt
cltd
cld
shlb
jnp
das
fmull
loope
cwtl
cmp
stos
pop
dec
sbb
int
scas
aad
jp
jp
xor
mov
push
or
mov
xchg
lods
pop
sbb
sub
decb
mov
xchg
cmp
fiadds
sub
inc
lcall
cmpsb
push
inc
faddl
pop
lods
mov
ficoms
and
pop
movsb
cli
loope
xor
push
cmp
stc
aaa
or
dec
sub
pop
shll
lret
jle
jno
mov
pop
jecxz
rcrb
mov
ss
jge
sub
xor
dec
out
lcall
ds
sbb
jmp
mov
jo
repz
pop
mov
sahf
mov
sbb
jle
push
jae
xchg
subb
mov
dec
outsb
add
sbb
mov
stc
andl
adc
repz
shlb
cwtl
shll
jo
cmpsl
push
ja
fwait
adc
mov
pop
ret
lcall
loop
pop
insb
stos
pop
jle
inc
mov
imul
movsl
leave
iret
pop
cmp
out
js
nop
pop
mov
jecxz
aaa
idivb
out
fidivrs
adc
sbb
jmp
adc
call
cmpsb
dec
inc
stc
imul
mov
add
std
push
in
or
add
push
stos
incl
inc
adc
ljmp
mov
movb
cmp
mov
shl
out
jmp
sub
ds
pop
pop
mov
xchg
pop
insb
cmp
pop
lcall
dec
mov
mov
leave
clc
push
fs
xsaveopt
in
mov
mov
jmp
inc
jmp
push
push
add
ds
and
push
jns
push
test
inc
mov
rolb
js
ss
and
inc
jbe
inc
imul
dec
xor
ret
jno
push
inc
mov
jno
in
mov
ret
je
hlt
imul
int3
and
cltd
bound
xchg
cmc
mov
js
push
fucom
jp
add
mov
mov
mov
into
das
scas
mov
int
cld
sub
mov
daa
push
sbb
mov
jno
roll
pop
inc
subl
loop
test
mov
fndisi(8087
into
and
push
adc
repnz
sub
cmpl
icebp
mov
push
push
stc
iret
push
adc
inc
repnz
push
in
push
lahf
cltd
fnsave
out
sub
mov
mov
jmp
mov
fcmovu
popa
arpl
jo
push
push
jnp
pop
or
sbb
and
cmp
dec
pop
test
int3
dec
mov
lret
out
xchg
imul
jp
mov
outsl
ja
mov
fiaddl
arpl
fnstenv
or
dec
cmpsl
pop
jg
sti
out
and
add
idivl
sbb
jg
rcll
xor
fnsave
nop
hlt
lcall
or
ret
inc
data16
in
aas
cmp
dec
loop
icebp
push
cmp
add
jae
mov
ret
push
adc
or
add
mov
shrl
outsb
mov
icebp
jns
loopne
in
dec
cwtl
inc
sbb
imul
cmp
icebp
sbb
push
sbb
aas
mov
and
cmpsl
ret
xchg
mov
jmp
stos
es
sub
mov
jnp
popa
inc
cltd
sbb
push
xchg
mov
inc
inc
out
lods
add
mov
cmp
cmp
stos
push
repnz
popf
fidivs
add
jmp
mov
lret
inc
cltd
das
xchg
push
push
xchg
inc
jbe
dec
push
adc
std
xchg
das
adc
pop
or
or
adc
and
repnz
cmpsl
sub
sti
pop
xor
mov
push
sub
and
cmp
mov
out
enter
or
inc
push
inc
xchg
and
out
in
pop
dec
mov
jnp
cmpl
fnstenv
dec
int3
cmpsb
inc
inc
mov
xchg
cmp
jno
aas
outsb
ds
xchg
addr16
jne
ja
mov
lods
pop
inc
fisttpll
sbb
pushf
dec
fsubr
cmpb
clc
xor
movsb
cmp
xchg
ja
ret
xor
jl
cmc
mov
add
xchg
popa
cwtl
mov
xor
fnstcw
mov
js
je
sarb
fcomip
stos
mov
xchg
mov
inc
mov
mov
mov
data16
fs
fdivl
out
mov
sbb
mov
hlt
gs
pop
cmp
pop
or
lods
inc
mov
inc
sarb
add
lds
dec
clc
popl
xchg
mov
mov
ret
test
cmp
jno
aam
ds
cltd
jns
xor
loopw
scas
sti
es
jb
div
lods
push
test
or
cmp
add
pushf
jecxz
jne
push
imul
inc
sbb
rolb
lret
lea
jae
stc
xchg
cmpsb
sbb
and
mov
pop
sub
or
lret
xchg
mov
cs
iret
ret
xor
or
out
mov
ss
push
loope
mov
inc
sbb
cli
cmp
inc
xchg
dec
add
lock
stos
cwtl
daa
mov
fldcw
repz
fs
or
jg
cmp
outsb
jge
bound
movsb
jmp
xor
es
sbb
stos
fbstp
xchg
call
ds
lods
fidivrs
rorl
or
xchg
das
cmp
int
jne
jmp
inc
adc
and
lds
xchg
pop
ret
lods
mov
cmp
movsb
cmp
add
call
leave
pop
idiv
enter
fnsave
out
and
push
sub
jmp
mov
push
or
out
lcall
push
repnz
movsb
dec
aad
pusha
jns
inc
dec
dec
dec
lea
pop
push
mov
loope
scas
mov
push
stc
fwait
cmpb
cmp
dec
int3
dec
stos
cmp
in
push
hlt
pop
ds
add
aam
shrb
sbb
jmp
psllw
icebp
mov
mov
fwait
adc
mov
das
icebp
push
push
add
enter
les
xor
mov
inc
insl
test
push
mov
scas
jb
push
jbe
iret
mov
pop
loopne
xor
push
insb
aaa
dec
stc
and
scas
ljmp
repz
scas
cmp
mov
and
mov
subl
push
xor
xor
fsub
push
cmp
or
pop
ret
stos
inc
lods
mov
cmpsb
rolb
sti
ds
movsl
push
pop
mov
mov
mov
mov
pop
enter
sbb
add
movsb
lods
jmp
sub
adc
adc
jns
xor
jb
push
je
xchg
or
pop
insb
sub
packuswb
stc
int3
stos
into
pop
sbb
mov
insb
fbstp
jle
mov
cmpsl
sbb
pop
mov
mov
shlb
xchg
mov
dec
pop
and
or
add
lods
push
push
mov
inc
pop
jns
out
aas
lds
jg
mov
sbbl
xor
outsb
sub
jl
mov
fdivrs
pop
or
mov
fists
sub
out
sbb
push
cs
push
inc
jbe
jmp
adc
mov
pop
movsb
jb
fldl
sub
pop
lret
jbe
rcl
cmp
sub
faddl
mov
sbb
jno
lock
andl
ds
data16
and
stos
stc
jb
inc
lret
dec
fmuls
pop
dec
xchg
sub
cmp
insl
mov
xor
mov
arpl
push
and
iret
sahf
xor
cli
in
daa
ret
pop
dec
enter
cmp
mov
push
enter
xor
lods
inc
fwait
out
das
negl
in
jb
inc
cmp
test
int3
addb
or
shrb
int
fdivr
stos
loope
fcoms
add
adc
push
sbb
add
jmp
mov
xor
in
ds
fwait
push
divl
lods
mov
fstpt
pop
mov
pop
xlat
inc
int
push
test
xor
cmc
dec
jl
pop
cmp
testl
insb
cwtl
arpl
pop
insl
sub
test
or
cmp
dec
sbb
repz
mov
push
and
jne
mov
xchg
dec
movsb
sbbl
das
mov
daa
adc
add
es
sub
jo
xchg
shr
pop
lret
pop
and
movsl
cmp
mov
inc
mov
insl
subl
test
lods
movsb
cmp
mov
xchg
int
dec
pop
sub
add
dec
into
xor
sbb
pop
mov
bound
in
jg
mov
repz
and
inc
mov
and
arpl
lahf
sbb
stos
cmp
ja
jns
adcl
lret
sub
out
sbb
fildll
mov
mov
mov
ljmp
or
loopne
das
cmpsb
neg
or
sbb
lds
push
popf
fbstp
iret
jae
jmp
rcrb
cmp
mov
cmc
sarb
mov
out
je
fdivrl
jne
xchg
jp
pop
or
lahf
jno
or
sub
movsl
fmuls
call
and
or
ss
mov
jae
aad
ja
inc
jge
shlb
ret
lock
push
push
hlt
and
cmp
inc
jnp
pusha
arpl
les
test
and
jg
dec
sub
fxch
mov
xor
pop
push
xchg
xor
dec
shll
int3
out
loopne
call
outsb
addr16
hlt
mov
pop
mov
xchg
push
sub
shll
lea
adc
inc
int3
cmp
lcall
cwtl
mov
or
cmp
iret
subb
rcll
sub
push
call
jl
adc
ss
out
pop
les
cmpsl
mov
xchg
sub
sbb
cmp
andl
inc
add
inc
ja
gs
inc
lock
jno
in
pop
cmpsl
xlat
insl
in
cwtl
cwtl
mov
ds
popa
cld
jne
sbbl
inc
fwait
xor
mov
mov
sbb
xor
jnp
xor
sub
aad
push
into
fdivl
xchg
or
sbb
fldenv
sbb
jp
mov
aad
imul
xchg
imul
push
in
jle
add
xor
inc
cmpsl
adc
sub
popf
sti
mov
sub
adc
int3
fildl
mov
push
cmp
mov
push
test
mov
int3
aam
xor
repnz
mov
sbb
sbb
cmp
lods
cwtl
mov
and
add
mov
mov
lcall
scas
imul
andb
das
inc
adc
push
cltd
dec
loope
inc
clc
popa
ja
push
mov
add
mov
pop
sbb
fbld
loopne
imul
push
fsubrp
movb
push
aaa
es
in
add
popa
hlt
fildll
push
call
iret
data16
pusha
sti
in
sbb
mov
ficoms
imul
stos
dec
adc
xchg
push
rcll
lcall
sub
jnp
pushf
xchg
pop
roll
sbbb
cmpsb
pop
ljmp
lock
aad
outsl
mov
lods
enter
cli
xchg
sub
std
cltd
loop
scas
inc
add
testl
xor
insb
push
xor
popl
or
or
jge
sub
ret
xchg
adc
dec
push
fwait
outsb
mov
sub
sub
xchg
push
loopne
xchg
mov
dec
push
mov
ror
fwait
xor
lock
ds
jo
popa
lods
push
insl
rorl
lcall
jecxz
jb
test
aam
scas
or
fs
xlat
sbb
and
stc
mov
mov
cmp
int
cmp
dec
aam
js
inc
push
fisttpl
xchg
pusha
pusha
repnz
and
mov
fmuls
mov
xchg
pop
decl
sbb
stc
sbb
cmp
cmp
fildll
cmp
sti
xchg
adc
je
xchg
movsl
repnz
pop
ja
ljmp
mov
dec
call
movsb
movsl
lret
and
mov
roll
out
xor
xor
lods
push
ss
or
fwait
xor
or
test
popf
mov
rorl
js
lods
mov
and
push
lock
add
movd
and
lods
sub
lods
push
dec
jmp
cltd
adc
je
out
dec
leave
jb
xchg
jge
inc
jae
repnz
loopne
ficompl
lock
lods
xchg
dec
sbb
daa
repnz
mov
adc
xorb
lret
sub
and
mov
push
lods
inc
pop
out
mov
push
pop
mov
ret
sbb
pop
ljmp
pop
out
out
mov
movsb
je
xor
sahf
or
inc
imul
sub
add
sbb
jb
leave
cmp
mov
push
add
inc
sarb
loopne
out
sbb
jge
mov
dec
jno
mov
cmp
jno
aad
insb
inc
inc
cmp
mov
cmp
ljmp
pop
push
in
mov
test
push
xchg
add
add
popa
sub
inc
dec
fwait
jg
int
sbb
jecxz
sbb
aam
pushf
mov
xlat
cmp
hlt
outsb
hlt
insb
popa
mov
push
in
xor
sub
movsb
jae
and
push
jmp
leave
cs
mov
daa
icebp
dec
and
decb
out
bound
out
data16
loope
popa
stos
mov
fs
mov
push
xchg
call
outsb
inc
pusha
aad
iret
xchg
jl
in
popf
popa
and
call
aam
xlat
xchg
cs
add
iret
mov
push
or
icebp
cmpsb
lods
mov
and
inc
dec
pop
popa
cmp
xlat
mov
hlt
jbe
xchg
mov
push
sbb
pop
mov
sar
and
rolb
imul
je
call
addr16
xchg
add
stos
ds
imul
je
sub
jecxz
std
xlat
mov
jo
push
inc
data16
nop
xchg
arpl
xor
int
and
mov
cmpsl
xor
pop
loopne
loope
sbb
shrb
add
clc
cmp
icebp
pop
dec
cmp
insl
xor
sub
xor
dec
out
xchg
mov
aas
jbe
movsb
jecxz
cmp
jae
ss
jg
sbb
mov
lods
sbb
mov
jo
enter
pop
rcll
mov
imul
and
lcall
and
mov
pop
jg
dec
arpl
insl
into
aas
jno
mov
pusha
mov
mov
and
into
mov
test
mov
cli
cmpsl
sahf
hlt
push
push
xor
pop
stc
xchg
daa
pushf
cmp
xchg
and
fsubl
dec
cwtl
dec
dec
sti
cmp
push
pop
jo
xor
add
cmp
mov
dec
or
out
stc
nop
sbb
subl
lcall
rolb
dec
movsl
icebp
mov
xor
cmp
and
mov
sbb
cmp
add
mov
push
adc
lods
jo
cld
jae
add
arpl
popf
mov
push
call
cmpsl
mov
sbb
je
addr16
arpl
cmp
xchg
add
jbe
repnz
sbb
fwait
push
inc
mov
into
mov
in
jg
jecxz
xor
int3
test
arpl
push
dec
pop
jae
cld
inc
enter
push
sbb
push
ljmp
xlat
pop
xlat
ret
pushf
lea
dec
cmp
movsb
jge
pop
pusha
lds
push
push
addb
sbb
loop
push
jp
cmp
cwtl
inc
ffree
int3
add
ffree
and
sbb
test
mov
adc
dec
and
mov
inc
adc
xchg
push
mov
rorl
push
xor
push
dec
pusha
sarl
mov
sub
loop
cmp
fwait
aaa
imul
lret
sahf
fldl
loope
mov
gs
scas
dec
inc
mov
aas
lods
sbb
repz
sbb
or
loopne
scas
fisubs
or
jl
mov
mov
out
cmp
inc
dec
xchg
fisubs
push
mov
xchg
pop
call
test
inc
mov
push
jecxz
jge
cmc
xchg
xor
rolb
add
mov
jge
mov
pop
push
aad
movsl
ret
pop
lods
add
stc
inc
loopne
fs
insl
push
mov
add
gs
xchg
fcmovu
fs
popf
mov
outsl
daa
or
insl
jge
in
inc
mov
and
fldcw
out
mov
divb
repz
lcall
aad
adc
sub
and
fwait
ss
cs
lods
cmp
mov
pop
lock
jecxz
je
mov
dec
fwait
and
arpl
adc
or
adc
jnp
cmp
test
inc
push
pop
pop
cmp
sub
loopne
mov
push
daa
scas
jb
pop
movsb
ja
hlt
push
in
cmpsb
aas
xchg
daa
push
mov
inc
push
lock
bound
and
push
mov
std
insb
repz
sarb
add
jl
int
push
call
mov
outsl
mov
fdivrs
add
fisttpl
lock
xchg
jle
cltd
stc
xchg
sete
xor
lods
mov
andl
sbb
popa
add
mov
and
jns
loopne
cmp
daa
dec
mov
mov
inc
dec
ds
dec
pop
cltd
cwtl
pop
mov
pop
popf
cmpsl
jp
adc
xor
xchg
xor
pop
out
pop
test
daa
sub
out
xchg
xchg
das
mov
cs
int3
aad
mov
ficoms
andl
mov
adc
jmp
mov
inc
xchg
mov
mov
shrl
out
jbe
dec
xor
mov
or
daa
push
js
xchg
jne
iret
sub
mov
inc
cmp
inc
xor
lds
subb
aad
shr
aaa
adc
jl
addb
adcl
and
mov
out
loope
stos
inc
mov
pop
leave
subb
mov
ret
add
push
xchg
hlt
pop
ss
push
sbb
inc
push
jnp
je
in
adc
push
pop
adc
mov
jns
and
dec
jp
mov
xor
xchg
sub
add
adc
test
in
push
jb
dec
dec
inc
push
std
jno
xchg
cmpl
stos
xchg
mov
pop
and
push
mov
inc
or
cmp
fstpl
inc
mov
into
pop
xor
mov
pop
and
add
andb
stos
jns
aad
daa
jle
negb
mov
in
ror
repz
jecxz
int3
push
insl
ja
stos
lahf
testl
fs
gs
pop
cmp
mov
inc
or
inc
repz
sub
addr16
pop
popf
push
repnz
aaa
xchg
push
xchg
add
movl
or
push
bound
mov
stos
aam
test
push
and
push
xchg
test
inc
leave
lock
out
and
push
out
add
adc
scas
test
data16
pop
mov
add
dec
sub
push
decl
cs
fldl
mov
sub
testl
xchg
nop
js
loop
lret
jb
sbb
cmp
jo
out
aad
notb
popf
arpl
pusha
stc
iret
les
sub
mov
cmc
scas
out
and
xchg
bound
add
jae
mov
out
sub
inc
ljmp
dec
inc
popa
dec
int3
cmp
xchg
pop
sbb
imul
xor
test
into
movlps
test
fdivrl
aas
push
ss
push
xchg
ret
add
lods
mov
popf
sub
scas
cmp
rcrb
testl
addr16
lock
in
daa
pop
outsb
jbe
pop
clc
scas
sub
push
movb
and
arpl
ljmp
and
dec
mov
les
insb
js
mov
mov
inc
fisttpl
lret
enter
inc
clc
fxch
push
loope
imul
mov
mov
inc
sub
shl
jbe
jo
into
jbe
scas
sub
inc
ficoms
loop
dec
lret
in
cmp
shrl
pop
push
and
jg
adc
xchg
pushf
dec
or
push
fcomip
jbe
into
sub
cmpb
lock
stc
ds
adcl
jmp
scas
sbb
or
cmp
adc
sbbb
mov
arpl
dec
pop
mov
es
adc
addr16
enter
rol
stos
dec
arpl
push
sub
sub
push
outsb
jne
dec
xchg
xlat
and
mov
mov
add
clc
dec
sarb
inc
jle
movsb
xchg
xchg
inc
mov
and
frstor
add
arpl
cmpsb
pop
sahf
aad
sbb
adc
add
lods
mov
scas
paddd
sbb
xchg
adc
and
jg
jbe
andl
xchg
and
arpl
pop
loope
mov
push
stc
lret
mov
in
cltd
xor
fidivrs
into
andl
xor
int3
imul
mov
pop
xor
pop
gs
pop
lret
out
dec
bound
jmp
jb
inc
scas
mov
in
scas
inc
adc
jmp
sub
cmpsb
ret
rolb
fwait
sbb
loop
enter
lds
divl
push
cmc
jno
jle
int3
mov
rclb
jle
scas
pop
sbbl
fwait
imul
xchg
and
mov
and
jne
movsb
xchg
pusha
pop
mull
outsl
xorl
pop
push
or
mov
ja
pop
testb
dec
push
mov
push
push
jmp
out
push
pop
inc
out
or
int3
dec
push
arpl
mov
repnz
lods
out
pop
stos
xchg
cmpb
mov
adc
pop
mov
dec
scas
mov
inc
push
sub
cmp
in
jecxz
and
sbb
jb
cltd
gs
cmpsb
or
and
lea
imul
mov
in
aam
fwait
add
cmp
inc
jo
movsb
sub
pop
scas
cltd
int
mov
fs
lds
movb
sub
loopne
in
add
sub
hlt
mov
ja
dec
test
fwait
add
jns
repz
arpl
call
mov
into
xchg
stos
lock
xor
sub
cli
leave
cmp
push
adc
popa
pop
push
stc
nop
cmp
mov
cmp
jmp
inc
lods
test
lods
je
das
sub
dec
mov
cmc
cmp
pop
push
jnp
xor
cmp
add
pop
jg
adcb
jecxz
mov
testl
adc
outsl
push
pop
fnstcw
push
in
les
fwait
cltd
mov
pop
jno
add
gs
imul
nop
orl
fcmove
or
add
mov
arpl
in
push
stos
dec
cmp
int3
lret
jbe
sub
rorl
jge
jbe
push
add
dec
aas
imul
cwtl
mov
cmp
cld
push
or
adc
push
pop
pop
ret
cli
xor
test
or
sbb
cmp
hlt
imul
adcl
and
lret
jge
xor
sub
cmpl
aas
fwait
shlb
pusha
addr16
jo
mov
xor
lret
pop
cwtl
push
ret
gs
stos
in
inc
ret
lods
out
jnp
jmp
pop
fsubl
dec
clc
or
rcrl
into
pop
sahf
sti
movsl
cwtl
nop
xchg
and
mov
pusha
andl
decl
xchg
sbb
movsl
sahf
dec
mov
aaa
out
jecxz
sbb
jp
adc
mov
iret
jbe
adc
sbb
mov
scas
shrl
stos
mov
addb
enter
xchg
xchg
fsubp
dec
adc
outsl
icebp
xchg
mov
test
repnz
outsl
cltd
iret
inc
dec
pop
cmp
lahf
movsb
rclb
mov
lods
les
sub
xchg
sub
out
push
ficompl
mov
and
xchg
sub
mov
add
int3
fcomps
test
popf
and
push
inc
xor
clc
add
test
lret
pusha
mov
mov
push
lcall
and
pop
test
movsb
jne
dec
cmpsl
push
inc
adc
push
stos
lods
cs
lret
frstor
imul
push
stos
push
push
or
mov
movsb
cmp
nop
cmp
adc
mov
leave
jb
out
enter
aam
adc
mov
call
cmp
int
ret
mov
push
imul
pop
cmpl
daa
outsl
or
ret
mov
daa
std
sti
xchg
out
pop
dec
in
add
lock
and
int3
xlat
sub
scas
add
cmpxchg
pop
fsubrs
inc
and
scas
jae
xor
test
inc
cmp
outsb
sbb
cmp
inc
jne
xchg
push
dec
pop
gs
lock
mov
xchg
cmp
push
jl
je
mov
jg
xor
daa
cmp
repnz
xchg
lock
jmp
pop
loope
loop
push
ficoms
jle
mov
fxch
out
cmc
cmp
jae
leave
mov
shl
outsl
daa
insb
inc
in
les
int3
loopne
out
aaa
dec
idivl
jp
sbb
or
out
std
push
fs
int
mov
jb
leave
and
xchg
jnp
std
add
add
push
dec
test
mov
aas
hlt
push
jno
data16
jbe
sbb
shlb
cli
push
fstpl
iret
outsl
push
mov
inc
mov
fcmovne
fs
push
outsb
sbb
and
push
fists
sarl
rcll
movsb
mov
push
push
test
pop
stc
mov
pop
aad
stos
mov
mov
call
adc
sub
stc
xor
call
xchg
clc
aas
or
and
pop
test
xchg
fmull
loope
jg
lahf
add
cltd
cltd
std
call
call
je
jo
jg
clc
or
push
outsb
test
fcmovnb
pop
xor
inc
pushf
pop
and
addr16
add
mov
test
jns
jbe
bound
pop
dec
xchg
dec
std
jo
cmp
cmp
jmp
mov
testb
sbb
fisubrl
out
add
mov
pop
sbb
fistpll
xchg
sbb
lret
scas
or
lcall
pop
outsl
mov
xchg
sub
inc
or
sub
or
mov
sahf
mov
fildl
cltd
pop
jp
outsl
lods
jo
cmpsb
mov
fidivrl
xchg
mov
clc
mov
fsubrl
push
jno
mov
imul
add
xor
jmp
rcrl
inc
stos
call
and
adc
pop
call
scas
ds
push
push
ret
add
push
jl
test
popf
add
ffreep
and
jne
andb
lea
pusha
nop
push
mov
xchg
arpl
sbb
sbb
xor
mov
fcoml
in
jne
notb
mov
lods
jl
aas
xchg
pusha
rcr
test
fidivs
mov
cmp
das
push
mov
lcall
xchg
loope
enter
sub
pop
stos
jmp
inc
fwait
and
or
int
inc
xor
xchg
lock
and
notb
inc
dec
repnz
stc
adc
cmp
enter
xorl
push
adc
rcr
add
cmp
in
mov
mov
test
xor
mov
sbb
pop
ret
hlt
cmpsb
push
aam
out
addr16
rorl
lret
repnz
fcmovu
sbb
xor
enter
imul
pop
xlat
repz
dec
aam
xchg
arpl
or
test
aam
fcmovne
sub
je
cmp
mov
pop
test
rcll
and
or
loopne
lret
popf
inc
cmp
mov
adc
rcrl
sbbb
add
push
stc
inc
mov
mov
mov
xchg
pop
cmp
cltd
je
lock
push
push
push
or
je
add
shll
cmp
sbbb
test
out
cli
xchg
mov
jl
imul
sub
fwait
lods
adc
xor
add
mov
sub
push
cmpsb
mov
pop
mov
adc
and
mov
repnz
inc
loope
xchg
fmull
inc
jbe
aad
pop
adc
mov
jl
mov
cmp
imulb
psadbw
cmpsb
inc
add
push
out
mov
dec
push
and
dec
test
into
xor
sti
pop
push
push
adc
inc
jg
pop
pop
xor
ffree
fcomps
mov
fs
mov
sbb
or
jmp
push
pushf
sub
int
scas
xchg
insb
or
iret
jbe
xchg
jbe
add
sti
pusha
push
mov
mov
rolb
and
aam
das
aas
dec
sbb
out
pop
nop
stos
shll
sbb
xchg
inc
pop
sub
ret
dec
or
and
mov
push
mov
push
orb
ret
rolb
outsb
scas
push
xchg
xchg
repz
lock
mov
gs
pop
xchg
or
inc
scas
xchg
cltd
test
cmp
fbld
mov
andl
mov
mov
lcall
cltd
pushf
data16
mov
lahf
push
scas
jmp
sub
add
jg
sti
pop
pop
push
or
cwtl
or
jb
cmp
fcmovb
iret
mov
fadds
fisttps
xchg
mov
fistpl
xor
cmp
jmp
mov
jle
and
inc
test
imul
jne
movsb
fidivl
mov
xchg
or
dec
and
pop
cli
inc
xchg
in
or
jne
fidivrl
hlt
hlt
dec
mov
das
cmp
pop
xchg
add
pop
pop
sub
push
shr
mov
jg
outsl
mov
lock
cmpsb
das
rol
pop
dec
and
pop
cmpsl
mov
cltd
cld
mov
jecxz
or
aas
xor
cmc
cmp
pushf
jae
xor
cli
jns
add
fisttps
pop
push
xchg
dec
loopne
or
icebp
sbbb
fiadds
das
pop
fsubr
aas
in
lods
das
mov
xor
test
push
lret
jge
adc
sbb
mov
aaa
push
imul
pop
hlt
add
js
mov
rorl
mov
push
inc
jg
push
movsb
roll
jae
in
push
in
rorb
fisttpl
out
rcr
int
cmp
dec
pop
movb
ficompl
lods
mov
dec
aad
sub
daa
pop
fnstsw
lret
jg
rcl
jo
popf
mov
mov
fs
sub
push
mov
orb
mov
iret
mov
push
cltd
mov
jo
gs
dec
imul
loop
cli
and
adcl
mov
jmp
pushf
add
pop
dec
cltd
or
js
cmpsb
xor
xchg
sbb
mov
mov
movsb
add
addb
mov
jb
xchg
add
mov
sti
jmp
incl
test
stos
imul
cmpsl
dec
js
aas
xchg
lret
addr16
std
push
enter
stc
pop
adc
mov
mov
jae
rcrb
xchg
push
mov
mov
push
push
mov
xor
loop
mov
mov
push
jp
movsl
and
xchg
imul
test
cmp
sarb
out
mov
das
clc
sbb
insb
adc
pop
or
in
les
cwtl
xlat
daa
out
jmp
xor
icebp
cmc
sbbl
dec
mov
arpl
mov
cmpsl
push
sbb
pop
dec
ds
outsb
dec
ja
mov
push
scas
shl
mov
popa
jne
xchg
iret
pop
in
out
loop
dec
sub
cld
xchg
ret
xchg
hlt
dec
fwait
xor
xchg
sti
pop
adc
inc
lds
and
jns
pop
enter
jp
fimuls
sub
ret
int3
rcl
testl
test
lret
lcall
pusha
jge
fisttps
shr
jl
popf
lods
leave
dec
and
pop
out
sub
imul
shlb
dec
add
mov
lods
or
test
test
sbbl
add
pop
dec
pusha
push
out
sbbb
movsl
std
push
sti
pushf
pusha
aad
push
mov
icebp
movsb
pop
cmp
dec
add
push
xchg
scas
inc
jl
jns
test
ret
lret
push
scas
xchg
in
xchg
sub
adc
mov
mov
fdivrl
ret
inc
lods
and
push
or
stos
fwait
pushf
pusha
ror
mulb
xchg
pop
ss
orb
pop
in
ss
inc
cltd
stos
test
push
popf
or
fwait
jmp
mov
xor
push
je
sub
push
leave
mov
or
mov
mov
daa
bound
and
pop
fdivl
mov
cmc
adc
inc
leave
mov
fwait
jmp
fcoml
test
aas
inc
sbb
pusha
mov
fsts
dec
int3
lret
flds
or
inc
inc
shlb
sti
jbe
xchg
push
call
push
sub
add
push
fwait
xchg
sub
mov
repz
push
inc
or
adcb
xlat
jmp
jg
mov
mov
lahf
pop
lret
shrb
dec
pop
push
pop
jae
inc
xchg
movsl
cmp
push
sbb
mov
imull
pop
dec
sub
pushf
pop
fwait
loope
test
and
mov
inc
arpl
fisubl
adc
mov
push
mov
xorl
enter
mov
stos
in
cmp
aaa
and
push
lods
inc
jl
jae
jg
xlat
test
jecxz
inc
ret
sbb
cpuid
imul
xchg
adc
and
sub
sbb
sbb
jge
mov
dec
pushf
outsl
mov
or
inc
mov
mov
jle
rcrb
fisttps
sarb
cmp
clc
pusha
sbb
pop
out
sub
mov
sub
pop
stos
into
arpl
out
lret
sahf
lods
iret
enter
mov
mov
jb
sub
cmp
or
ss
mov
dec
inc
cwtl
or
das
sbb
cli
jno
inc
xor
loope
sbb
sbb
sbb
sbb
jge
push
sub
iret
mov
adc
inc
inc
dec
into
enter
loopne
mov
addr16
and
outsb
or
add
int
cmc
sbb
lea
int
stos
jmp
lret
sahf
jbe
xchg
jns
sbb
push
dec
sbb
push
sbb
das
jle
hlt
stc
push
mov
jg
push
or
aad
das
popf
stc
add
inc
daa
scas
xor
cmp
in
sbb
xor
mov
mov
mov
xchg
xlat
jmp
or
ja
cmp
mov
xlat
jb
pop
call
push
ds
push
psubb
scas
xor
stc
repz
pop
cmp
aas
sahf
dec
pop
shlb
gs
mov
roll
es
and
push
cli
shrl
jne
and
ret
outsl
fs
and
mov
mov
and
sub
xchg
scas
in
sub
and
fcomps
push
sub
inc
jl
mov
mov
push
mov
push
js
sahf
jb
addl
jle
adc
pushf
xchg
mov
or
and
call
mov
loop
insl
ror
ret
jl
loop
inc
xor
cld
hlt
in
fisttps
push
xor
jae
div
jbe
mov
jle
lcall
jg
or
ss
notl
iret
insl
mov
adc
rcrl
and
movsl
lock
cs
cmpsb
hlt
pop
mov
jno
ljmp
ja
lds
sbbl
mov
repnz
leave
fstps
jbe
xchg
inc
fcmovnb
scas
and
lcall
mov
mov
pop
xor
adc
popf
cmp
push
incl
cwtl
xor
jl
aad
mov
roll
movsl
mov
adc
rcrb
repnz
in
jmp
addl
repz
mov
pop
jl
push
jo
popf
in
punpckhbw
push
cmp
arpl
push
sti
pop
jno
lods
loopne
ja
sbb
outsb
mov
insl
jo
or
xor
pop
out
push
lock
loop
clc
scas
int
mov
xor
cmpb
push
cmp
pop
mov
mov
mov
andl
aad
push
push
fnstsw
stos
cld
repz
push
add
mov
rorl
cmpsl
push
scas
pop
in
cld
sahf
dec
adc
adc
dec
pop
leave
and
insl
cmpsl
test
fwait
xchg
mov
jl
fistl
sub
iret
and
inc
arpl
shll
ja
mov
adc
std
or
mov
int3
adc
pop
cmc
pop
xor
push
add
and
pop
mov
inc
les
ret
out
and
or
jl
sub
lock
insb
popa
inc
pop
popf
sti
xchg
test
sbb
decb
or
lods
pop
sbb
push
fistl
call
cmc
jne
push
mov
mov
jmp
cmpxchg
lds
or
or
xor
jns
mov
add
pop
dec
or
adc
jns
pop
mov
add
mov
sub
fxch
sub
repnz
cmpsb
sbbb
pop
lret
cli
xchg
xchg
fldcw
hlt
cmp
sbb
push
scas
sub
mov
fidivrs
lret
mov
daa
push
and
lods
lret
fsts
imul
mov
jae
jp
test
add
in
pusha
inc
sbb
adc
lret
pop
mov
xlat
je
dec
dec
mov
aas
lahf
out
pop
neg
fmul
mov
push
mov
dec
cmpl
stc
xorb
push
dec
in
or
dec
pop
push
pop
lods
or
ret
jle
movsb
xor
pop
sub
nop
pop
divl
pop
push
or
int3
test
addr16
mov
xor
dec
js
jecxz
mov
push
call
lods
sub
dec
cmpsb
cmp
push
push
cmp
outsl
and
add
push
je
out
mov
sub
aad
inc
daa
ficompl
in
mov
jmp
loopne
mov
lods
out
xchg
sbb
mov
cld
in
loopne
mov
pop
jbe
dec
mov
dec
push
xlat
repnz
or
aaa
iret
orl
dec
push
jnp
push
test
cmpsl
sbb
das
mov
push
test
mov
jns
mov
out
xor
pushf
into
cmp
outsb
mov
aam
nop
push
fisubl
outsl
lea
das
xchg
xchg
pop
lods
aaa
cmpsl
mov
divl
sub
stos
cmp
cmp
andb
and
or
or
outsl
cmp
mov
cs
fisubrs
or
sub
pushf
mov
les
es
sbb
pop
push
js
loope
in
loopne
iret
mov
adc
or
add
std
je
xor
clc
inc
sahf
hlt
out
movsb
fwait
sbb
fs
mov
xor
out
lock
lock
call
adc
cmpsl
pxor
or
es
in
push
fistl
add
cmp
loopne
sarb
stos
add
push
add
clc
jo
ficoml
or
jo
push
inc
jle
cli
lret
jb
jl
icebp
jnp
or
mov
sbb
pop
inc
sub
sbb
fimuls
repnz
stos
cwtl
push
outsb
repz
icebp
push
cmpsl
xor
xor
jecxz
movsl
push
lock
push
xor
stos
pop
das
ret
push
xor
jb
das
jo
cli
or
es
in
sbb
sub
das
mov
sahf
sub
add
mov
aaa
ss
sbb
sbb
test
push
add
xor
xor
pop
push
mov
lret
push
jmp
adc
pop
push
movsl
mov
xchg
sub
jbe
repnz
shrl
xchg
pop
mov
push
mov
mov
pop
mov
jmp
or
sub
mov
pusha
loop
sbb
mov
xchg
jo
push
and
pop
ja,pt
jmp
rcrl
js
inc
or
jb
add
sbb
push
mov
add
test
mov
clc
add
mov
shr
ret
fdiv
stos
dec
hlt
xor
cmp
das
mov
or
sub
das
adc
and
mov
xor
fwait
test
lret
test
lods
and
scas
imul
push
push
jo
outsb
pop
popf
arpl
mov
test
ret
ja
mov
jnp
leave
fidivl
mov
mov
test
inc
cmpsl
cmp
xlat
dec
push
pop
fdivs
dec
jmp
jecxz
jbe
lret
std
lret
ss
push
mov
mov
push
addr16
mov
dec
repnz
sub
adc
pop
push
sarl
daa
fildll
fstps
and
cld
stc
cli
sti
leave
cli
sbb
jns
mov
jecxz
pop
out
adc
jle
xchg
scas
sub
pop
mov
inc
les
cld
adc
sahf
xchg
jle
out
cmc
or
cwtl
sbb
lret
sub
adc
xor
jns
mov
jmp
arpl
and
and
xchg
push
mov
sbb
in
nop
daa
xor
adc
push
cmpsb
pop
movsl
xlat
je
aad
cmp
mov
lcall
cs
xchg
xor
cli
cmp
call
sub
imull
add
sbb
sbb
xchg
pop
jecxz
stos
cmp
push
push
addb
jle
fs
mov
fwait
nop
je
cltd
movsl
push
mov
or
pop
push
test
xor
ret
bound
fmuls
push
mov
xchg
pop
call
sub
cmp
loopne
lods
cmc
nop
lret
fmul
sbb
xor
mov
pop
jno
shlb
dec
out
test
or
jg
jno
or
fisubl
mov
fstpt
fldlg2
jbe
mov
sub
cmp
imul
jae
xchg
add
sub
xor
mov
pop
in
jmp
pushf
fsubr
dec
xchg
jb
enter
sbb
jge
or
scas
inc
daa
mov
scas
cmpsb
int
pop
lods
lret
addb
ja
inc
fistl
push
mov
shl
jl
cltd
lods
adc
mov
nop
aam
inc
paddsw
mov
test
inc
fsts
push
push
sub
cmp
push
xchg
mov
xor
sub
inc
xor
fists
cmp
aam
jp
mov
or
adc
pop
jnp
outsl
mov
xlat
ljmp
push
shrb
fdivrl
xchg
stos
xchg
mov
cs
pusha
inc
inc
xchg
test
popa
mov
sub
xor
push
pop
out
pop
sahf
and
adc
imul
pop
int
push
cs
xchg
inc
mov
cmp
push
mov
jmp
scas
jbe
mov
lret
lods
inc
call
mov
ret
push
mov
jmp
shl
fst
addr16
ds
xchg
pop
icebp
out
inc
pop
mov
lods
out
lret
sub
insb
outsl
loopne
inc
or
and
loopew
cltd
push
lock
mov
daa
mov
jno
mov
dec
loopne
push
popf
cmpb
addr16
sub
nop
adc
dec
out
cmp
sub
xor
mull
mov
clc
add
cs
popf
sub
lret
dec
out
inc
aad
cli
inc
insl
add
push
lds
mov
xor
popa
and
add
xchg
dec
dec
mov
cltd
push
adc
data16
and
push
imul
lea
aad
inc
inc
nop
stc
push
dec
add
pop
inc
cwtl
das
js
sbb
sarb
and
push
sbb
pushf
ljmp
jnp
ds
xchg
dec
xchg
mov
jle
mov
enter
imul
inc
mov
out
test
ss
or
add
in
lods
ja
or
cmc
out
pop
std
mov
push
jle
test
icebp
jns
adc
mov
loopne
jne
or
lock
adc
daa
xchg
push
xchg
addb
mov
pusha
shr
sbb
add
and
imul
add
sbb
loope
push
rcl
push
imul
mov
mov
jae
pop
push
lods
lock
xchg
call
mov
fldt
cmp
dec
mov
out
sbbb
sahf
xor
lret
insb
orb
mov
ficomps
xor
in
ss
adc
and
xchg
popf
xor
in
std
or
scas
inc
fs
mov
in
push
lods
paddb
jmp
xor
jecxz
ds
clc
fsubrs
push
pop
repz
jb
ja
jp
movsb
jae
scas
pop
mov
mov
push
mov
inc
mov
aad
hlt
sub
jnp
add
or
dec
fnstcw
cmp
jmp
popa
xchg
mov
out
fcomp
pop
out
fsubr
xor
cmp
or
ret
imul
imul
mov
lea
cld
lea
add
xchg
mov
mov
fcmovnbe
test
lret
dec
fucomp
pop
sbb
jae
lods
cmp
movups
mov
sub
xor
ds
add
sub
dec
hlt
dec
inc
insb
add
adcb
jl
sbb
xlat
in
test
inc
mov
inc
lock
or
es
in
movzbl
adc
sbb
daa
insl
aam
pop
sbb
mov
cmp
cmp
popa
stos
mov
and
jmp
sub
aam
cmp
mov
ret
sub
popa
sar
sbb
adc
in
ljmp
ss
push
xchg
insb
or
das
hlt
mov
adc
shlb
xor
mov
lret
fnstsw
pushf
sub
jp
jmp
out
cmp
add
inc
into
inc
and
xchg
mov
sub
cs
pop
inc
jp
sti
push
adc
mov
cmpsb
sub
orl
loope
mov
out
aas
mov
adc
lea
inc
or
loopne
sahf
stos
clc
fsub
rcll
ss
gs
outsb
sbb
ret
xchg
sbb
fwait
jb
sti
jg
rorl
aas
mov
dec
jecxz
and
in
sub
cmp
jmp
stos
jmp
cmp
icebp
iret
fwait
das
add
fistpl
xor
clc
dec
sub
dec
aad
std
or
addb
push
cltd
mov
add
out
mov
cmp
and
ret
jg
bnd
mov
xchg
pusha
mov
scas
insb
ret
mov
or
loopne
sub
nop
std
cmpsb
lock
rclb
sub
jg
mov
add
lods
xchg
pop
pop
cli
sti
es
std
int3
pop
push
orb
jns
test
adc
rol
adc
adc
fs
cltd
stos
data16
push
imul
cli
sub
sub
mov
push
mov
pushl
into
divl
sbb
push
idivl
mov
nop
outsb
aam
orl
mov
push
push
push
fcomps
mov
imul
cmp
popa
mov
lods
fneni(8087
cmpsl
inc
bound
mov
sti
mov
pop
jnp
aas
aam
dec
mov
dec
fstp
popf
dec
pusha
iret
std
cmpl
int
pusha
pop
xor
adc
xchg
jb
arpl
scas
fiadds
jnp
repnz
das
jns
fnsave
mov
into
sbb
mov
ret
pop
jne
rcll
stos
add
fdivrs
cs
ror
cmp
pop
mov
xor
repnz
mov
sarb
inc
mov
loope
inc
adc
out
ret
sub
insb
xchg
lcall
js
pusha
cmpsb
mov
xchg
mov
je
or
pop
in
es
loop
sub
xchg
out
cmp
stos
xchg
inc
pusha
sahf
lock
jge
outsl
out
pop
popf
hlt
mov
fsubl
loopne
mov
in
mov
jle
daa
int
cmp
into
mov
push
psubq
xchg
fnsave
stos
lock
and
roll
sub
xor
cmp
mov
lcall
outsb
mov
lods
lahf
pop
rclb
push
addr16
shlb
mov
mov
pop
out
test
lods
mov
dec
xchg
addr16
adc
in
and
adc
push
test
ror
xor
gs
inc
cmp
add
mov
fcomip
lea
sub
inc
pop
jmp
ds
pop
sti
outsb
shlb
and
push
and
cwtl
or
scas
out
cmpsl
addl
mov
je
mov
pop
ss
adc
std
mov
cmc
repnz
add
cmp
sub
test
adcb
sahf
sahf
daa
mov
mov
nop
imul
dec
cld
mov
push
jno
mov
les
pop
andl
lock
aad
in
pop
out
fucomp
adc
inc
xor
mov
jne
out
in
repnz
outsl
js
sbb
add
dec
nop
insl
clc
cltd
lock
dec
movsl
fcoml
pop
and
push
mov
xchg
in
pop
rcrb
sub
test
jle
mov
or
cmp
jne
mov
jp
xor
add
rcrl
popf
bound
cmpb
dec
lods
jp
imul
xchg
inc
fistps
mov
xchg
jge,pt
clc
jge
sbb
insl
mov
pop
jb
scas
cli
adc
mov
arpl
pop
dec
sbb
cli
xor
inc
dec
xchg
pop
fistl
rolb
mov
mov
sbb
clc
jno
adc
mov
sbb
fldt
pop
outsb
add
push
mov
pop
not
dec
cmpsb
cmp
shl
jp
int
adc
pop
pop
xchg
cmpsb
push
xchg
test
ja
shll
mov
and
loop
push
cli
cli
xchg
sub
adc
jle
sbb
sbb
rclb
dec
mov
jbe
mov
ficompl
test
mov
or
mov
ret
jae
jecxz
outsb
dec
xor
in
cwtl
sbb
stos
jge
sbb
jae
stos
sbb
lret
lret
mov
pop
mov
mov
cmp
pop
insl
in
inc
pop
jb
jb
sub
mov
mulb
repnz
test
lods
push
and
out
pop
cmp
popa
mov
pusha
test
rorl
rcrl
data16
lret
mov
pop
sub
jl
add
mov
mov
pop
mov
pop
ffree
in
out
icebp
cmp
popa
outsl
fstl
adc
jns
push
sub
shll
sub
push
mov
push
in
mov
lret
jg
sub
jne
sahf
jnp
cmpsb
sub
sub
cmp
jno
out
nop
inc
loope
xchg
adc
mov
pop
mov
pop
xchg
jae
adc
mov
pop
push
jge
jle
add
mov
cltd
and
pop
loop
fucomp
lock
shll
aam
inc
push
and
inc
fildl
pusha
push
rclb
add
insb
adc
jl
lods
dec
mov
xorl
scas
mov
adc
jge
pop
or
aaa
lret
pusha
sbb
mov
jne
pop
or
dec
cmp
fcomi
ret
subl
cmp
scas
xor
out
adc
mov
mov
jge
inc
dec
imul
sbb
push
pop
xor
mov
mov
sub
sub
inc
ss
out
js
fidivrs
ljmp
dec
cmp
fisttpl
or
iret
push
outsb
rorb
add
bound
jae
cmp
insb
daa
mov
xchg
out
jge
mov
sbb
es
fstpl
imul
add
imul
cmp
xor
scas
inc
xchg
inc
addr16
into
int3
push
mov
jne
dec
pop
cmp
dec
and
call
mov
jle
insb
mov
andb
jmp
mov
les
es
mov
mov
inc
call
fs
call
xor
push
inc
mov
nop
or
push
outsb
out
push
sub
lret
xchg
xchg
jns
add
fsubl
outsb
sarl
insb
jl
add
pop
movsb
scas
and
mulb
ror
mov
ljmp
insb
jno
movsb
pop
xor
andb
inc
jne
cmp
push
push
xchg
sub
push
sub
adc
vcvtsi2ssl
enter
and
enter
ss
addr16
mov
ss
rcrb
inc
sbb
insl
stc
dec
xchg
loopne
mov
cld
push
pop
pop
decb
mov
adc
cmp
das
push
arpl
subb
jmp
fcoml
mov
rcrl
dec
sti
mov
fs
fs
aas
push
or
insb
cli
dec
jmp
sub
xor
lcall
cwtl
inc
fisubs
mov
fdivrl
xor
add
outsl
out
icebp
sbb
xor
add
pop
push
shlb
jg
adc
fbstp
popf
hlt
pusha
sbb
cmp
call
cmc
push
push
pop
hlt
wbinvd
cmpsb
jnp
pop
pushf
in
scas
out
push
test
imul
push
jns
out
sti
add
ss
and
enter
insb
iret
data16
inc
cmp
cli
mov
scas
xorb
inc
in
ja
pusha
test
pop
jae
cmp
pop
sub
jl
fiaddl
and
sub
cmp
popa
cld
lods
insl
fsubrl
int
lahf
ja
arpl
xor
cmp
dec
in
arpl
xchg
inc
and
mov
push
imul
lods
dec
add
fcomi
stc
and
ds
or
enter
lea
push
or
cltd
pop
xchg
mov
mov
cmp
in
or
addb
test
add
xchg
pop
dec
push
push
inc
pop
lock
int
ds
add
movsb
arpl
or
arpl
fiadds
xchg
mov
je
sub
sub
rorl
cmp
aas
icebp
fldl
inc
or
js
cmp
call
xchg
popa
sbb
jle
cmp
jnp
mov
iret
pop
lods
pop
mov
fucom
imul
cltd
fldenv
loopne
rclb
add
testb
push
mov
xor
sub
nop
scas
fmul
adcb
inc
icebp
dec
pusha
and
mov
test
push
and
jle
je
sbb
mov
cmpsl
xorb
mov
mov
dec
mov
adc
lcall
scas
aam
ja
dec
daa
jnp
cld
incb
add
inc
fcoml
and
cmp
outsb
add
push
mov
mov
push
in
fs
cld
xchg
push
fdivp
dec
sarb
sub
pusha
dec
es
test
mov
jle
das
imul
cld
dec
dec
mov
jmp
aad
dec
pop
jg
cmpsl
ds
pushl
mov
jnp
jmp
incl
or
dec
push
mov
sub
mov
or
lcall
and
aaa
xor
pop
mov
aas
into
dec
in
mov
imul
dec
leave
and
xchg
lock
add
adc
pop
mov
in
mov
xchg
jle
mov
inc
ljmp
pop
jp
push
mov
cmpsb
dec
out
add
push
repnz
jne
std
movsl
das
lret
movsl
fst
cmpb
jne
mov
inc
pusha
pop
loopne
xlat
outsl
je
xchg
xchg
loopne
push
and
cmpsb
lock
mov
mov
push
cmpsl
adc
jbe
out
mov
testb
xor
pushf
jo
pusha
mov
mov
stc
sarb
xlat
outsl
fidivrs
cmp
inc
xor
daa
lahf
stos
cwtl
cmp
in
aas
cld
lods
cmp
jns
dec
test
mov
pop
into
xor
cmp
sub
mov
jns
dec
lods
mov
pop
mov
dec
pop
sub
jge
pop
sub
adc
xchg
aaa
fdivr
imul
clc
roll
add
lea
bound
jecxz
pop
xchg
mov
mov
adc
lahf
dec
mov
or
xchg
xchg
rcrb
dec
enter
jp
sub
or
mov
xchg
jmp
mov
hlt
and
in
cmp
xchg
mov
out
ss
xchg
imul
pop
add
inc
inc
inc
jl
std
cltd
into
gs
jne
adc
add
call
fwait
jb
pop
xor
mov
sub
jb
cwtl
xchg
pop
sub
jae
push
imul
pusha
movsl
jne
add
mov
xchg
mov
das
in
inc
push
loopne
aas
dec
mov
ljmp
imul
and
lret
stos
xchg
sub
filds
mov
stc
mov
push
fisubrl
adc
orb
mov
cmp
mov
xor
fmuls
int
mov
pusha
daa
shl
mov
mov
push
int3
inc
jbe
xchg
xchg
rcll
and
fs
xchg
xchg
out
insb
dec
add
xchg
mov
cmp
pop
adc
test
rcrl
ja
vpmulhw
or
lret
mov
push
stos
or
cmp
push
mov
mov
lods
jecxz
and
mov
cltd
mov
sbb
ljmp
insb
cmpsl
js
jne
repz
mov
cli
dec
sub
mov
les
std
aad
dec
pop
pop
jge
dec
ror
dec
and
es
mov
repnz
test
fwait
sbb
add
cmc
ljmp
ds
into
sub
fildll
ret
add
xor
fldl
mov
mov
mov
clc
sub
repz
les
lret
pop
out
jmp
or
sbb
movsl
jl
cmp
pop
and
popl
mov
push
rcl
add
popa
daa
mov
sub
clc
cld
ret
es
push
popf
push
daa
loopne
int
in
out
js
les
and
mov
jmp
inc
push
mov
test
pop
xchg
ss
lret
pop
out
jmp
fcoms
mov
mov
sbb
iret
test
inc
frstor
pop
mov
repz
pusha
jmp
sti
push
cli
data16
lcall
push
mov
cmp
xor
add
lock
push
inc
dec
adc
fidivrs
sbb
cmp
cmc
daa
int3
pop
mov
dec
fs
mov
mov
rclb
mov
inc
sti
test
sub
notl
in
pusha
clc
pushf
xchg
aad
clc
iret
stos
mov
out
hlt
pop
adc
dec
adc
jne
push
loope
cltd
pop
pusha
jae
push
inc
arpl
mov
mov
cmp
test
cmp
sbb
mov
jno
dec
and
stc
and
gs
outsl
push
jo
pop
jno
add
sub
ljmp
movsb
mov
mov
push
jo
hlt
push
cmp
pop
xchg
hlt
cmp
dec
mov
and
push
sub
sti
pop
clc
imul
add
push
arpl
fdivrl
pop
arpl
dec
scas
shrl
jno
lods
aaa
lock
cmpsb
fnstenv
cs
imul
cld
data16
push
and
pop
inc
and
loopne
cld
add
xor
mov
or
xchg
cmpsb
ror
mov
sub
test
mov
xchg
leave
in
arpl
push
das
push
js
lcall
mov
xor
stos
dec
scas
into
gs
push
loop
push
clc
in
xchg
pop
repnz
jo
jp
sub
loopne
ja
push
popf
or
shrl
adc
cmc
mov
movsl
jmp
xchg
fcmovu
data16
push
jne
add
jl
dec
mov
enter
jecxz
sarl
sbb
leave
enter
pop
out
in
outsl
jmp
inc
aas
rcrb
call
loope
jl
jmp
call
mov
ret
call
dec
ja
mov
xchg
mov
or
jp
into
enter
xlat
fildl
dec
sarb
inc
fistl
sbb
outsb
clc
cmp
pop
sahf
pop
popf
add
or
and
jg
arpl
jno
mov
xchg
test
popa
outsb
jp
mov
push
inc
ljmp
lahf
mov
leave
insb
movntq
shll
inc
adc
sbb
xor
mov
ret
cmpsb
dec
cmp
pushf
daa
mov
scas
xchg
inc
jmp
leave
jmp
jle
pop
inc
mov
sub
and
inc
inc
mov
jno
mov
push
popf
mov
sahf
mov
ret
push
in
or
mov
insl
jmp
inc
nop
adc
mov
sbb
or
dec
cmp
les
mov
push
fcoms
fsts
sub
cli
lock
and
out
xchg
sbb
add
enter
stos
and
repnz
push
call
loope
pop
icebp
mov
fidivrl
pop
and
fistpll
jnp
ja
or
dec
push
stos
mov
daa
jp
add
lods
movsl
mov
into
fldl
lods
mov
pusha
pop
jmp
mov
shll
sahf
lods
pop
xchg
cmp
das
js
and
cmpsl
cltd
std
adc
ljmp
cmp
sbb
xchg
dec
inc
sub
sub
mov
xchg
or
int
ljmp
lahf
mov
inc
or
pop
sbb
ds
std
ficomps
push
lods
fcmovb
call
adc
imulb
xchg
mov
dec
enter
jae
mov
add
cmp
ljmp
and
mov
test
inc
clc
sbb
mov
dec
lahf
and
adc
push
inc
mov
xchg
lods
outsl
dec
mov
out
push
aas
adc
fnstenv
xchg
xor
mov
xchg
in
stos
sarl
cmc
sub
pop
mov
test
add
push
mov
and
ficomps
leave
xchg
push
outsb
sti
inc
repz
outsl
dec
fsubrl
or
in
pop
lods
lods
fldcw
loopne
popa
movsb
stos
mov
mov
fadd
sub
add
push
iret
mov
pop
lods
xor
or
add
hlt
cmp
movsb
xchg
push
adc
daa
stos
dec
xchg
cmp
loop
roll
aas
jle
dec
fbstp
loopne
cmpsl
fnsave
dec
push
lock
adc
pop
outsb
adc
bound
sbb
and
out
xchg
call
jge
adc
jno
in
jl
add
jle
shrb
cmp
jle
mov
adcl
ljmp
rol
pop
sub
popf
cmp
dec
mov
jle
ret
ja
jno
add
add
popa
mov
rorb
stc
ss
cld
shll
sub
pop
cmpb
sbb
cmp
xchg
add
pop
not
cmpsl
lret
lcall
jae
sub
in
rcrb
imul
shll
mov
daa
xor
stc
mov
pusha
lock
push
push
rorl
mov
cld
pop
dec
xchg
xor
or
gs
lock
pop
ret
outsb
sbb
mov
stos
shlb
lods
cmp
arpl
mov
rol
fcomps
stc
adc
lahf
cmpsl
out
xchg
add
xor
sub
rcrb
pop
mov
cli
xor
push
icebp
es
mov
ret
outsl
push
xchg
sub
cmp
test
pop
mov
cwtl
adc
mov
bswap
jae
and
cmc
add
jns
add
nop/reserved
jns
mov
rcrl
ja
ja
mov
int3
lret
dec
fcmovnbe
outsl
mov
jne
mov
cld
lcall
in
pushf
jge
dec
dec
push
inc
dec
lods
scas
mov
inc
fildll
rol
arpl
push
fstpt
jns
and
cmp
mov
fdivrl
nop
ror
aas
or
cmp
add
xchg
mov
fisttpll
mov
xor
inc
out
outsb
sub
leave
sub
xchg
dec
enter
xlat
daa
xor
jo
aas
jecxz
call
loopne
pushf
dec
push
std
lods
fcoml
mulb
aad
and
xchg
popa
adc
mov
push
nop
mov
jle
lock
add
xchg
mov
xrelease
imul
in
sbb
or
inc
mov
out
push
and
outsl
sbb
pop
fadd
arpl
or
dec
pop
vpsrlq
mov
ret
movsb
jae
sbb
test
bound
addr16
xchg
jg
mov
jae
int3
jg
imul
inc
push
aas
mov
fisubrl
adc
or
outsb
je
xchg
push
int3
mov
loop
sub
add
xchg
repz
ja
push
stos
pop
jae
mov
jmp
pop
xchg
and
jmp
cwtl
mov
push
popf
fisttpll
and
jo
arpl
inc
insb
add
rol
jo
mov
js
clc
sahf
push
cltd
test
negl
enter
aas
add
mov
mov
lret
xchg
push
and
in
sahf
push
repnz
push
leave
mov
push
mov
aam
lcall
rolb
jmp
imul
lahf
imul
sbb
mov
lahf
out
fnstsw
cwtl
lret
scas
mov
mov
jae
mov
sar
inc
add
dec
xchg
daa
mov
outsl
out
push
xchg
cmp
movsb
inc
addr16
pop
mov
xchg
push
dec
ror
xlat
dec
popa
lea
imul
imul
sub
dec
shlb
add
sbb
stos
sar
test
mov
cli
lea
aaa
into
shrb
cmp
sub
movsl
loope
fwait
sti
cwtl
mov
or
stc
push
sub
pop
das
fs
xchg
shrb
mov
mov
and
dec
aad
es
sbb
int
sti
mov
hlt
xchg
and
stos
cli
mov
sbb
inc
fs
mov
lods
shlb
mov
out
pop
sub
aaa
loop
push
idiv
xchg
cmp
mov
mov
or
cmp
out
bndldx
aam
xchg
sti
cmp
fmuls
popf
pop
icebp
mov
jns
and
push
test
sbb
pop
in
sub
out
dec
aas
push
incl
nop
outsl
mov
lret
jb
mov
js
or
or
inc
aaa
push
jne
xchg
sub
jb
jo
mov
xor
lret
push
jno
mov
jge
out
cmpsb
jo
push
rorb
insl
or
adc
cmp
jne
dec
ljmp
xchg
pusha
jge
jne
xchg
insb
push
inc
mov
call
loope
mov
cmp
xchg
sub
int3
xchg
sbb
pop
cwtl
addr16
roll
sub
pop
adc
dec
out
imul
xor
mov
fucomp
mov
andl
adc
inc
add
xor
pushf
pop
aaa
jge
push
mov
and
iret
and
imul
xor
pop
sbb
iret
adc
jl
and
lcall
stc
and
or
mov
mov
xor
mov
inc
popa
insb
ljmp
or
outsl
jnp
mov
das
xchg
inc
lock
out
jns
xchg
sti
cmpsb
adc
fbstp
int3
ficoml
std
out
or
ret
xor
testb
popf
sbbb
adc
ret
xchg
cmp
loopne
mov
sahf
and
sub
enter
in
iret
movsl
jae
pop
mov
mov
loopne
lret
add
out
xchg
sub
in
xorl
inc
fldt
jnp
adc
xor
ss
sub
xor
push
adc
jmp
mov
test
mov
inc
mov
scas
or
push
repz
jge
clc
sub
icebp
add
inc
frstor
les
pop
call
ficoml
and
mov
rcll
mov
lods
mov
inc
pop
sti
pop
icebp
mov
shr
out
mov
or
xchg
pop
xchg
in
mov
mov
cmp
push
dec
xchg
cmp
cmpsl
add
mov
cld
out
outsl
cmc
imul
jl
and
cmp
scas
fisubrs
ja
mov
and
add
insb
pop
pop
scas
cld
or
loop
jne,pn
and
dec
fdivrp
mov
or
nop
xor
adc
call
mov
lods
and
xor
and
pop
xchg
out
sub
dec
inc
aaa
iret
stos
lods
mov
push
dec
fs
clc
xor
sub
enter
leave
xchg
or
inc
lret
jg
loop
mov
imul
subb
adc
in
inc
inc
xchg
arpl
mov
push
stos
lcall
imul
jno
jno
dec
xchg
add
mov
pop
sbb
dec
fsubs
jmp
push
sbb
das
jb
inc
dec
mov
hlt
ret
fs
mov
mov
fisubl
inc
pop
pop
pop
mov
dec
fdivrl
in
test
fsts
xor
in
inc
sarl
mov
adc
add
pop
xor
mov
dec
add
loop
cmpsl
sbb
cmp
imul
sahf
rcrl
es
daa
sti
inc
fsubrl
popf
push
sbb
in
cmp
sub
cmc
or
clc
stos
aas
xor
ror
mov
jb
out
or
cld
push
mov
fnstsw
mov
add
inc
pop
std
dec
call
jl
sbb
add
cmp
add
in
lods
repnz
and
rolb
repz
inc
jns
dec
push
loope
outsb
xchg
sub
push
push
or
into
push
pop
pop
fildl
and
daa
mov
add
scas
loope
sub
inc
lret
xchg
adc
pop
aaa
notb
cmp
inc
push
fwait
xchg
aas
int3
jno
push
orl
lcall
and
out
mov
outsb
pop
rorl
lds
sub
inc
xor
pop
inc
jns
inc
mov
xor
test
cmp
push
mov
lods
jmp
cmc
icebp
popf
std
adc
or
shlb
test
jmp
loop
pushf
enter
xor
push
add
fimull
and
cli
fwait
sub
in
test
ss
inc
add
jge
imul
stos
jl
shrb
jae
and
int3
xor
in
es
jmp
popa
enter
and
cltd
jg
ret
shlb
ror
mov
cmp
lcall
pop
push
push
pop
ljmp
push
in
or
sbb
sbb
cmc
adc
inc
cmp
sub
test
xor
jo
lods
push
sbb
cmp
cmpl
ljmp
push
add
lock
pop
fisttps
shrb
jo
jo
adc
xchg
push
loope
cs
loope
aas
xchg
mov
pop
and
rcrb
push
imul
push
out
or
mov
xor
mov
je
inc
push
hlt
in
mov
lods
cmp
or
aam
pop
testl
lds
idivb
bound
add
punpckhwd
gs
mov
outsb
add
je
test
iret
int
dec
loope
rorb
sbb
mov
outsb
jno
loop
aaa
push
imul
pop
scas
movsb
lods
xor
push
inc
or
out
mov
call
mov
lcall
and
cmpsb
andl
xor
cltd
inc
nop
xchg
aad
cltd
or
orl
inc
push
das
xor
cmc
js
dec
and
hlt
add
mov
je
adc
mov
inc
mov
mov
mov
xchg
sub
mov
in
stc
adc
mov
dec
sbb
adc
mov
xchg
pusha
and
sbb
push
inc
call
sbb
jne
mov
in
pusha
and
aad
xor
jle
add
shl
faddl
sar
jg
pop
sub
fsubrs
fdivl
in
sub
inc
aad
addr16
out
sbbb
jp
adc
insb
xchg
cmc
adc
rcrb
push
imul
or
sub
not
mov
stos
shrb
cs
mov
in
repnz
aam
nop
pop
js
aad
and
inc
mov
repz
xchg
dec
xchg
imul
mov
mov
dec
data16
dec
or
push
pop
ret
cld
jns
and
push
pop
or
push
cmpsb
sbb
cli
adc
xchg
in
ffreep
dec
xchg
lret
icebp
out
pop
hlt
and
and
pop
xor
scas
bound
pop
push
jno
sub
mov
cwtl
ret
shlb
cwtl
pop
scas
jl
mov
dec
int
scas
dec
xor
cwtl
push
test
rcll
enter
in
mov
dec
inc
popf
push
push
outsl
insb
lahf
shld
leave
pop
sub
dec
add
xchg
scas
mov
das
daa
outsl
popa
mov
push
pop
bound
inc
xlat
mov
mov
cmp
inc
frndint
xchg
adc
scas
sbb
mov
daa
cmp
lds
pop
inc
xor
jecxz
mov
push
bound
andb
movb
sti
cs
dec
jg
xchg
bound
mov
xor
sub
push
cltd
das
inc
mov
mov
outsb
outsl
add
adc
sub
test
test
adc
jo
arpl
outsl
fld
orb
inc
test
cs
rcr
or
cmp
cmpsl
loope
addb
inc
xor
lea
jnp
lahf
das
mov
xchg
pop
popf
add
jmp
and
out
mov
icebp
dec
mov
mov
push
or
dec
push
in
jle
scas
cmp
and
lsl
popa
clc
movsl
cmc
outsb
loope
jnp
push
lods
xchg
inc
inc
xchg
inc
into
enter
jbe
dec
aam
out
je
mov
insb
fs
add
fidivrl
fs
rcrb
sbb
lock
xlat
or
cltd
es
inc
mov
jns
cwtl
ret
and
mov
pop
sahf
inc
xlat
iret
jl
inc
jmp
pop
push
sbb
xchg
in
lcall
out
insl
arpl
popf
sub
adcl
mov
in
scas
testl
addl
jno
jae
idivb
add
add
pop
repnz
inc
bndstx
jns
mov
push
subb
dec
and
fs
and
jno
rol
xor
lock
fistpll
mov
or
lods
test
xchg
or
mov
rcrb
inc
fsubrp
pusha
std
int
fbld
inc
mov
cmp
pop
inc
int
in
inc
push
inc
push
cli
xchg
xor
xor
scas
test
cmp
das
test
pop
or
loopne
add
jp
insl
dec
data16
mov
mov
pusha
fisttpl
add
stos
mov
sub
mov
lods
dec
cmpsb
push
mov
cmpsb
std
adc
and
mov
shrl
bound
xor
add
cli
dec
mov
and
into
mov
cmpsb
add
sahf
mov
sub
lock
js
mov
xor
add
cmp
jnp
aad
lea
stos
leave
test
stos
inc
jb
pop
dec
jmp
fwait
sti
push
pop
sbb
test
add
cmp
xor
cmc
mov
add
int3
mov
xchg
lods
pop
inc
in
lcall
sbb
insl
push
test
jle
stos
jp
or
popf
cmp
jl
scas
sbb
test
sub
sub
add
inc
or
mov
loope
aas
push
jb
scas
cmp
std
inc
imul
cli
and
adc
adc
ficomps
es
sub
and
xor
add
movb
insb
test
and
mov
insb
jno
pushf
sar
ret
push
or
or
cmp
dec
fdivl
jle
or
jbe
add
xlat
bound
es
jl
pop
jle
jne
jbe
movsb
cmpsl
push
fsts
mov
xchg
rcll
inc
pop
decl
mov
insb
jle
xchg
push
divl
aad
push
push
inc
jns
sub
popf
jle
sub
xchg
push
bound
xor
cltd
and
pop
popf
mov
jno
std
ret
das
call
in
inc
adc
push
out
xchg
and
xchg
dec
push
cld
dec
in
jne
jmp
mov
sar
sbb
jbe
fnstsw
pop
adcl
cld
sbb
or
fwait
mov
lea
push
sbb
pusha
hlt
das
cmp
mov
mov
ret
xor
test
fcoml
jns
ja
inc
test
scas
lea
xor
aas
push
iret
xor
cmpsl
ds
unpcklps
out
mov
add
notl
das
jbe
pop
mov
xor
and
pusha
sub
dec
and
sub
inc
sarl
xchg
xor
outsl
daa
xchg
cmp
adc
dec
in
jl
es
jae
inc
push
das
sbb
jp
repnz
sub
in
add
es
stos
cltd
push
sbb
in
adc
mov
cmpsb
call
mov
imul
sbb
push
ret
mov
data16
sti
xchg
and
push
or
pop
mov
jns
lock
mov
dec
in
inc
les
add
cld
adc
addl
cmp
or
jp
dec
loopne
lds
int
mov
inc
frndint
jno
shrb
xchg
xchg
sub
repnz
out
mov
mov
in
fcmovbe
into
gs
cwtl
dec
inc
testb
sti
test
mov
das
inc
fsubs
mov
stos
xchg
sarb
add
xchg
aaa
add
xor
loop
mov
les
xchg
mov
add
adc
popl
mov
cli
jb
aaa
cmp
cli
sub
fs
push
push
fbstp
clc
hlt
mov
jge
stos
outsb
pusha
ret
pop
push
fldenv
lret
dec
sbb
lods
dec
or
imul
out
stc
nop
loope
pop
repz
ds
mov
push
dec
pusha
addr16
fidivs
leave
gs
mov
sbb
inc
mov
repnz
or
mov
cwtl
imul
out
stos
push
inc
add
mov
add
add
xor
cwtl
push
or
movsl
fidivs
sub
pop
or
pop
lods
das
xchg
scas
jnp
xchg
call
cli
inc
pop
add
popf
inc
pop
pop
mov
shrl
or
mov
stos
mov
sarb
jg
pop
push
cmpsb
pop
scas
pop
push
jge
js
ja
lea
push
ljmp
push
fdivl
push
fs
ret
ret
push
jmp
cmp
scas
inc
in
loopne
mov
dec
loop
bound
into
push
mov
sti
mov
fwait
xor
cmp
add
stc
nop
int
and
xor
sahf
xor
loopne
xor
mov
push
in
fs
jne
out
mov
jnp
stos
jmp
cmp
jb
cmp
cmp
out
test
in
cltd
xor
dec
xor
inc
inc
and
test
loop
adc
push
xchg
cs
dec
inc
fstpt
fnsave
iret
out
sub
inc
adc
add
mov
pusha
popa
mov
or
nop
sub
cmp
in
pop
fs
sbb
adc
jo
mov
pop
mov
push
imul
pop
push
inc
xlat
dec
mov
mov
out
cmp
mov
out
sbb
push
or
xchg
add
push
cltd
test
stos
in
mov
mov
fisttps
xchg
lods
sub
mov
arpl
aam
and
push
cmp
mov
aaa
mov
popa
out
rcrb
and
int
in
arpl
jo
clc
gs
inc
mov
dec
fildll
xor
lods
fmulp
mov
sub
sub
lahf
jecxz
mov
inc
outsb
jle
outsb
pusha
outsl
xor
rcrl
mov
in
pop
mov
sbb
lret
adc
jo
sub
mull
inc
mov
pop
dec
je
push
movsl
mov
dec
in
andb
aam
aam
adc
sub
lret
and
jnp
mov
jle
stos
jg
ds
arpl
fisttpl
addb
rcrb
pop
dec
xchg
mov
add
fisubrl
or
sub
imul
cltd
push
cwtl
mov
jg
into
xchg
lret
out
inc
fdivp
add
out
mov
mov
cmp
test
sbb
loopne
add
shll
enter
xchg
jecxz
test
pop
shl
out
cmpsl
cmc
clc
cmp
jno
addr16
mov
ret
pop
adc
or
mov
mov
inc
or
jg
into
test
mov
lret
nop
dec
and
es
push
pop
add
dec
push
mulb
jl
pop
sbb
add
jge
test
ljmp
mov
add
in
dec
sahf
sbb
scas
dec
and
lds
call
mov
cmp
xchg
in
lock
rorl
adc
and
movsb
sub
pop
push
std
imul
in
mov
pop
xor
adc
xchg
stc
xor
lods
inc
pushw
cs
push
stc
nop
nopl
jo
xchg
cs
jb
mov
or
add
gs
cmp
xchg
rclb
mov
add
mov
stos
add
mov
dec
cmp
fdivl
outsl
nop
daa
mov
ret
jnp
cmp
mov
dec
movsl
dec
or
jl
icebp
dec
lcall
stc
pop
dec
fstpt
iret
sbb
loop
sbbb
mov
add
aad
dec
pop
mov
movsl
mov
xchg
movlhps
lods
mov
cmp
xchg
ret
shlb
filds
or
test
cmc
call
mov
ja
aad
mov
les
aaa
jecxz
adcb
notb
mov
enter
mov
cmp
scas
dec
pop
cld
xchg
cmp
fnstcw
mov
push
dec
in
std
movsb
cli
out
arpl
sbb
les
lret
outsl
rolb
test
stc
lret
inc
setbe
movsl
out
imul
sarb
pop
push
mov
in
push
repz
imul
add
flds
mov
sti
jl
xor
cmpsb
jne
add
dec
lds
push
shlb
loop
mov
or
and
and
add
cmp
lods
mull
adcl
mov
stos
jbe
fiadds
dec
sahf
shll
adc
ja
xor
loope
je
sbb
and
inc
xchg
je
xlat
in
fldl
nop
sbbl
int3
leave
int
push
xor
test
add
add
push
xchg
movsb
cmp
sub
pop
in
pop
or
or
mov
push
mov
inc
push
sub
mov
xchg
pop
rolb
pop
bnd
call
and
dec
lahf
out
cs
movsl
mov
mov
lods
xor
push
push
mov
imul
mov
test
scas
inc
mov
stos
and
xchg
mov
fwait
lds
jae
pop
ficompl
test
xchg
mov
pop
fsubrl
sbb
adc
out
and
xchg
cmp
jle
das
daa
dec
lods
inc
jl
xchg
dec
cli
sbb
jg
lcall
mov
sbb
or
repz
pop
mov
or
add
dec
xor
pusha
fcmovnb
faddl
popf
or
push
std
or
std
pushf
dec
out
test
xchg
jle
popf
mov
cmpsl
cmc
mov
idivb
std
cld
ret
test
mov
push
xlat
lods
insl
fdivp
nop
lods
sub
outsl
push
pusha
dec
loop
mov
mov
inc
lcall
mov
xchg
jne
sarl
aam
enter
mov
pop
sub
mov
xlat
outsb
std
imul
dec
repnz
out
outsl
inc
into
leave
cmp
mov
hlt
out
fstl
cmp
sti
imul
jle
filds
sahf
xor
fstp
mov
cmp
enter
iret
movsb
repnz
das
cmp
mov
hlt
adc
mov
jae
lret
ljmp
lods
xchg
cmp
movsl
add
pusha
inc
pop
out
jae
jns
sbb
or
movsl
lds
lcall
gs
popf
test
inc
adc
outsb
loope,pt
neg
sar
imul
scas
cmp
xchg
addr16
cmp
or
cmpsb
push
mov
cltd
and
mov
rcr
pop
xor
fwait
loopne
addr16
mov
jae
std
cmp
inc
mov
insb
test
lret
xchg
cmpsb
sbb
into
inc
and
adc
push
int3
pop
es
imull
mov
sbb
mov
jl
fcompl
dec
push
repnz
stos
adc
cltd
dec
push
mov
hlt
adc
shlb
xchg
loop
mov
or
cs
aaa
lods
add
pop
cmp
insb
jp
push
imul
hlt
sbb
popf
fstpl
add
or
ds
dec
inc
jb
in
out
lds
pop
rclb
pop
scas
jmp
or
lea
lods
xor
xchg
clc
lcall
xorb
out
and
mov
lcall
adc
lret
sbb
add
jae
sbb
inc
fsqrt
xchg
xchg
cmpb
mov
or
xchg
xchg
inc
sub
jp
add
lock
call
push
dec
mov
mov
xor
dec
push
fwait
cmpsl
inc
sub
ljmp
jecxz
repnz
push
or
inc
and
jne
lret
bound
sub
shlb
ss
test
adc
xor
push
mov
inc
dec
jns
loope
xchg
adc
pusha
mov
inc
dec
es
fwait
dec
inc
add
jns
cmc
cmpsl
mov
push
push
call
stc
test
mov
and
call
inc
scas
cwtl
xchg
cs
inc
enter
xchg
mov
mov
cmp
repz
aaa
ds
inc
rcrl
jecxz
adc
add
fsts
int
jbe
dec
xor
inc
daa
push
sysexit
push
mov
lcall
dec
mov
push
mov
mov
add
stos
stc
addl
cs
pushf
sub
dec
out
aas
cmp
outsl
dec
loope
loope
sbb
dec
push
ljmp
jno
insb
jle
nop
add
push
ljmp
es
fisttpl
pop
mov
filds
mov
shrl
push
push
in
sbb
lock
xchg
rolb
inc
mov
in
pop
inc
outsb
movsl
scas
sahf
xor
int3
mov
sti
inc
decl
jbe
movsb
add
push
mov
sbb
xchg
xchg
push
out
mov
push
je
jnp
in
push
repz
sbb
xchg
lods
push
sub
or
mov
fisubrl
ret
shl
mov
inc
fidivl
fdivrs
push
pop
scas
add
mov
sbb
adc
sbb
inc
dec
mov
xchg
ss
sbb
inc
inc
cmp
lock
notb
bound
decl
or
test
jmp
cmpsl
pushf
or
dec
pushf
clc
iret
dec
shrl
cmp
stc
xlat
sbb
cmp
nop
cld
or
pop
repz
pop
mov
je
mov
sbb
out
adc
and
repnz
in
sbb
outsl
mov
cmpsl
mov
jmp
mov
add
xchg
mov
adc
jno
pop
xchg
push
jp
mov
cmp
jmp
jb
mov
mov
clc
mov
mov
movsl
cmp
push
dec
fisttps
enter
sbb
push
loope
xor
xchg
enter
sahf
push
sub
cwtl
das
add
cli
lcall
cwtl
xor
rolb
out
sub
arpl
mov
js
inc
stos
inc
sbb
idivl
inc
pop
or
aam
in
imul
pop
cmp
js
shrl
lock
mov
in
iret
push
call
add
lock
inc
push
dec
clc
fidivrs
mov
pushf
cmp
les
les
pop
pop
push
push
stos
sub
sub
int3
or
mov
in
or
bound
std
jo
adc
add
out
pop
xor
adc
push
shl
cmp
mull
ds
popa
inc
inc
cmpsl
fldl
cwtl
or
sahf
test
adc
jp
daa
lods
xor
cmc
mov
lret
xchg
stos
jecxz
dec
out
lcall
nop
sub
mov
or
test
sbb
movsl
push
int3
test
sarb
fnstsw
in
sbb
or
and
dec
sahf
nop
jne
les
push
and
inc
fldenv
jmp
ja
sbb
or
shrl
mov
jg
mov
jle
mov
fwait
gs
or
leave
fadds
jmp
adc
mov
sbb
insl
int3
aad
adc
mov
and
xor
rsqrtps
xchg
sub
stos
lahf
dec
mov
inc
movsl
jge
jmp
xchg
pop
push
rcll
aam
stos
sti
cld
mov
das
xchg
adc
mov
or
or
cmp
cmpsb
sub
cmp
mov
inc
jle
stos
cmovg
lods
loopne
add
xor
and
test
ljmp
pop
push
leave
addr16
adc
pop
cwtl
xor
stos
test
mov
push
mov
cmp
pand
int3
push
add
ficoms
mov
ljmp
jg
xchg
fwait
js
mov
or
dec
mov
int3
scas
fmull
orl
or
insb
in
add
xor
daa
mov
sbb
sub
mov
call
ss
jnp
inc
cmpsl
push
shrl
in
dec
movsb
das
fidivrs
lret
out
adc
jbe
pop
das
fsubp
ljmp
push
sbbl
inc
mov
popa
or
or
bound
xchg
imul
dec
mov
je
out
sbb
sub
repz
pop
cmpsl
jo
push
in
sbb
dec
or
and
shl
add
lods
dec
fs
adc
fwait
inc
pop
sub
mov
ret
inc
sarl
jecxz
jle
popf
xor
fwait
or
ss
int3
lods
pop
adc
cmp
or
push
mov
or
dec
frstor
push
sub
and
or
scas
pop
pop
loop
jb
lock
dec
mov
clc
xchg
nop
push
repz
cltd
std
sub
push
subb
cli
sbb
fcomps
int
pop
mov
cld
addb
push
je
repz
push
das
xchg
loope
jg
jb
xchg
jno
cmp
shll
out
mov
adc
cmc
in
xor
sub
dec
daa
xchg
cmp
movsb
cld
push
cmp
push
mov
add
sti
push
mov
dec
adc
dec
push
cs
aad
xchg
push
daa
stc
or
cmpsl
shlb
ret
mov
js
adc
aam
mov
imul
push
dec
push
xchg
pop
ss
mov
addr16
iret
fimuls
inc
jo
rcl
push
divb
movsl
in
lahf
nop
daa
rorl
dec
jae
sub
arpl
cs
mov
aaa
jbe
xor
xor
jbe
int3
inc
mov
outsl
fcmovnu
adc
sub
imul
stc
xchg
pop
xchg
enter
cmpsb
inc
das
and
cmp
lea
add
enter
pop
hlt
leave
nop
sahf
mov
fidivrs
push
sbb
add
and
insb
fldt
lods
out
loopne
adc
cmp
cmp
jecxz
and
mov
loope
push
mov
push
pop
dec
mov
shl
std
testl
jmp
pop
xchg
insb
adc
sbb
fcoml
and
sti
cltd
ss
data16
pop
adc
xlat
pop
mov
fildll
sbb
lcall
xlat
lods
filds
xchg
popf
adc
in
shl
ds
popf
jle
sub
test
adc
jno
cmp
ss
jl
out
movsl
cmp
je
adc
mov
call
pushf
imul
push
sbb
cmpsl
mov
test
xor
mov
jno
sub
inc
jecxz
mov
bound
pushl
jmp
cmpsb
adc
adc
push
or
inc
sub
mov
ret
loopne
mov
pop
mov
nop
mov
cmp
in
dec
stos
push
popf
mov
jbe
dec
out
xchg
push
cmp
decl
repnz
adc
cli
test
scas
pop
adc
pop
xorl
decl
jle
test
and
ja
jbe
or
pop
mov
lock
cld
sbb
cmp
lea
push
xor
adc
imul
inc
add
sub
pop
cld
sub
sbb
sub
lods
xor
sub
adc
and
mov
idivb
pop
xor
xchg
push
out
add
rcrb
inc
ds
cmp
mov
cmp
cmp
shl
cmp
xor
add
shrb
and
sbb
adc
addb
nop
lods
pop
jbe
or
cmpsl
inc
xchg
sub
mov
mov
xorb
sub
xchg
repz
daa
stc
lock
mov
xor
scas
daa
ljmp
mov
pushf
sub
inc
sti
out
xor
mov
cli
mov
pop
sbb
dec
jge
pop
stos
ret
aad
icebp
leave
and
push
insl
mov
sbb
or
sbb
xchg
mov
add
cmp
test
mov
pop
leave
or
jbe
aam
jp
lods
and
and
lods
aas
pop
fwait
sbb
sub
daa
stos
inc
push
mov
stc
xor
inc
into
gs
dec
roll
sbb
fwait
or
test
mov
mov
xor
cmp
or
aas
adc
dec
pop
and
testb
pop
lock
pop
mov
pop
dec
mov
inc
xor
xchg
aam
sar
shlb
lahf
cmp
fs
cwtl
cmp
adc
jns
jae
lock
or
notl
push
es
inc
mov
cmp
jnp
jl
push
in
movsl
mov
inc
lret
mull
pop
in
cmp
dec
mov
cmpb
sahf
sbb
iret
mov
mov
out
cmp
push
inc
sub
jbe
lcall
out
jg
cld
in
pop
ficoml
movsb
test
or
int
cmpsb
ret
pop
xor
fldl
cmpb
scas
mov
pop
xchg
rolb
fprem1
mov
pop
aas
insb
ds
xor
cmp
out
insl
cmpl
sub
sbb
xor
jmp
fsubrp
sub
xor
inc
xor
mov
int3
imul
imul
dec
jne
cmp
lahf
andl
or
loop
fstpt
xchg
push
rcrl
lcall
fsubrl
xor
out
xor
lods
push
repnz
mov
lock
and
out
and
and
xchg
cld
push
xor
loope
movsl
aad
fwait
pop
repz
icebp
in
dec
out
test
cmp
push
addb
and
jmp
pop
and
out
sbb
or
aad
mov
xchg
jge
scas
push
out
sub
ficoms
adc
insl
sub
mov
mov
sub
leave
roll
pop
cmp
push
je
add
adc
aad
inc
xchg
jecxz
std
add
push
repz
mov
push
add
imulb
dec
or
add
lret
loop
mov
pop
push
mov
fcoms
rcrl
outsl
jl
outsl
and
dec
jecxz
push
fs
mov
out
sahf
rorl
mov
test
test
clc
fidivs
pop
pop
cld
mov
fiaddl
popa
cmp
pop
call
xlat
fidivrl
shrb
push
shr
ret
push
lcall
push
imul
xor
xchg
mov
in
pop
push
inc
mov
lret
push
jmp
adc
loop
fwait
rcll
adc
gs
push
fnstenv
adc
cmp
mov
dec
fidivl
fmulp
pop
pop
repnz
jnp
push
jns
or
sbb
and
lret
jo
mov
or
mov
sub
sub
je
iret
dec
pop
test
adc
es
pop
lea
push
hlt
notb
or
loop
jp
stc
fstps
je
loop
lods
inc
mov
mov
scas
pop
jb
jo
push
inc
fldl
repnz
jecxz
lods
push
js
mov
inc
nop
add
jnp
push
xchg
aam
pushf
and
jbe
cwtl
mov
jo
pop
inc
fwait
xlat
mov
stc
loopne
adc
insb
int
aam
repz
jb
sbbb
dec
sarl
cmp
mov
or
jne
jge
mov
pop
mov
stos
dec
loope
xlat
arpl
stos
push
pop
ret
rolb
jns
scas
mov
add
mov
sbb
adcl
and
inc
pop
std
ss
xchg
imul
mov
pop
push
xchg
repz
sbb
fdivrs
push
mov
pop
push
xor
popa
mov
stos
mov
fisttpl
xlat
dec
ffreep
stos
mov
sub
in
xor
insb
or
enter
sbb
or
xchg
xor
xlat
js
movsl
cltd
sub
inc
sbb
sub
out
cli
push
push
movl
mov
or
xor
sub
popa
mov
les
mov
lds
ret
mov
ror
mov
mov
decb
xchg
sub
mov
ss
xchg
jle
idiv
push
stos
push
rcll
orl
je
dec
daa
mov
bound
adc
fmul
jp
and
dec
stos
xchg
test
inc
and
decl
jb
xchg
mov
adc
gs
pop
insb
pop
xor
out
stos
push
mov
notb
and
sbb
out
clc
sub
cmpsb
push
into
mov
je
bound
and
fdivrl
int
push
enter
int
andb
das
sbbl
xlat
mov
pop
jnp
fstps
pushf
mov
dec
ljmp
xchg
pop
sbb
xchg
xor
push
push
jbe
ljmp
ss
outsb
in
jge
outsl
mov
mov
dec
lods
xchg
dec
addr16
mov
into
sub
dec
ljmp
call
push
add
dec
dec
sub
sub
push
pop
std
test
imull
dec
pop
outsb
pop
add
add
dec
fs
js
xchg
popf
dec
push
lret
push
adc
aaa
mov
sub
scas
mov
inc
mov
pop
stos
call
subb
movsl
sahf
xor
xorl
arpl
jae
fnstenv
mov
cmp
inc
lods
aad
test
in
push
mov
lock
in
mov
in
sbb
inc
fidivl
cwtl
inc
lods
inc
dec
xor
xlat
adc
repz
cld
jae
cmpsl
mov
mul
mov
int3
repz
scas
mov
arpl
sbbb
ret
sub
imul
sub
fcomps
adc
xchg
pop
mov
push
arpl
push
out
mov
mov
mov
dec
pmulhuw
jp
arpl
inc
mov
dec
icebp
out
addb
ret
scas
pop
movsl
lret
pop
fcmovu
loope
mov
mov
push
out
clc
pop
xor
mov
xchg
shlb
xchg
scas
shll
popl
dec
jl
test
ss
push
mov
arpl
mov
xor
insl
push
adc
out
sub
rcl
pop
mov
fdivr
or
fwait
aaa
loope
ljmp
roll
add
jb
movsl
fwait
movsl
xchg
fwait
xor
aam
ret
xor
push
dec
pop
aaa
xchg
inc
scas
dec
orl
test
ds
fldt
shlb
mov
or
push
push
and
push
mov
inc
popf
jo
test
mov
xor
in
mov
xchg
pop
pop
test
sub
xor
or
mov
add
adc
pop
adc
leave
xchg
and
add
add
lock
testl
add
ljmp
cmp
jno
repz
push
test
ljmp
or
jbe
sbb
jmp
or
and
int
lock
mov
sub
push
test
inc
popf
pusha
cld
orl
mov
or
ljmp
cltd
jl
mov
xchg
fcomip
push
sbb
jno
push
cmp
ja
mov
icebp
ret
push
std
jo
mov
dec
imul
mov
jecxz
in
sub
mov
outsl
mov
outsl
clc
mov
fidivl
popa
js
jbe
clc
xor
leave
test
xchg
cld
inc
dec
lds
leave
jne
cmp
sub
hlt
fsubl
inc
adc
les
mov
repz
push
pop
rcl
push
or
loopne
cld
stc
adc
sub
das
add
aam
jo
out
cmp
push
sbb
xchg
call
outsl
xchg
dec
cmpsb
mov
lods
pop
xor
mov
std
pop
ret
mov
pusha
stos
lds
xchg
cs
mov
sub
push
sub
jecxz
mov
cmp
dec
je
lret
test
aad
mov
int
adc
cmp
lret
adc
add
out
mov
daa
sti
movsl
fldl
pop
cmp
das
jge
repnz
out
mov
push
imul
pop
sbb
rolb
inc
cmp
jg
lds
dec
repnz
icebp
cmpsb
cmc
stos
insb
cmp
jns
push
test
gs
adc
push
inc
decl
inc
inc
subb
out
sbb
outsb
and
jnp
xchg
out
push
pop
sbb
dec
les
cmc
push
dec
pusha
lahf
popf
sub
or
call
dec
jno
clc
sub
jae
push
in
and
jno
insb
je
out
dec
stos
dec
mov
ljmp
rcrl
int
les
lea
leave
sahf
xor
cli
outsl
sbb
mov
inc
lahf
ss
jmp
pop
push
lahf
scas
inc
adc
popf
jo
shrl
pusha
xor
mov
xchg
cmp
popf
mov
pop
ds
sbb
xchg
insb
xchg
jmp
leave
and
add
in
shrb
sub
inc
ljmp
sub
test
pop
mov
jno
and
jae
mov
out
mov
jmp
adc
stc
lret
loopne
and
test
jbe
cmpsl
xchg
xor
pop
mov
inc
mov
gs
cwtl
pop
psrad
mov
sbb
mov
mov
push
jno
imul
repnz
loop
sub
aad
stc
sbb
dec
lods
cmp
imul
popf
push
cmp
lret
push
loopne
push
adc
and
lods
enter
jl
lods
and
call
lret
sub
adc
pop
adc
fsts
mov
pop
mov
out
cwtl
sbb
jp
enter
pop
sbb
aad
and
filds
jle
in
mov
int
gs
int3
out
mov
test
and
sti
adc
loop
sub
and
inc
and
sbb
xchg
jne
into
mov
mov
rcrl
dec
mov
inc
mov
adc
xor
lret
and
cmp
pop
bound
dec
aaa
lcall
lahf
mov
sub
inc
xchg
pop
jb
insb
adc
adc
fmul
popa
jg
push
mov
jo
sub
std
popa
dec
mov
addb
mov
adc
push
out
and
xchg
sub
ret
inc
movsl
fsubr
es
mov
fsts
or
xor
or
insb
xchg
fldt
adc
es
add
and
cltd
push
push
and
jno
decb
mov
in
cmc
add
aam
aas
fbstp
dec
cmp
bound
xchg
xchg
adc
call
or
cmp
xor
lods
inc
hlt
jbe
addr16
xchg
sub
ret
push
mov
imul
daa
cmp
inc
push
inc
sub
nop
mov
pop
daa
jno
loop
mov
scas
idivl
push
pop
hlt
daa
data16
adc
sub
push
xor
inc
stos
and
stc
cmp
mov
repnz
dec
int
xorl
aas
adc
sti
popa
jb
lock
mov
mov
cmp
xor
in
leave
push
jle
sub
decl
or
insb
rcrl
stc
add
mov
sbb
int
jb
dec
ljmp
mov
dec
imul
pop
in
test
jnp
push
jmp
adc
and
jne
aaa
push
mov
pop
sub
or
std
sub
das
adc
dec
add
mov
xchg
call
adc
lret
and
mov
cmpsb
mov
or
fldl2t
xor
lahf
ss
push
mov
xchg
aas
pop
testb
xchg
mov
and
add
xor
ret
test
and
popa
js
fadds
sub
sub
mov
dec
adc
mov
xor
test
pop
inc
decb
pop
scas
imul
inc
jl
test
xor
inc
mov
rol
and
jmp
push
sub
cmp
scas
rcrb
xchg
rcrb
andb
inc
pop
xlat
cs
in
dec
in
add
insb
jle
inc
and
sub
int3
insl
mov
sub
outsl
mov
sahf
xchg
daa
cmpsl
jne
test
cld
xor
or
mov
mov
loopne
adc
jnp
les
rorb
lcall
incl
mov
mov
mov
lret
ret
test
sti
test
std
fsubl
jmp
aaa
push
jno
scas
cmp
outsl
in
fs
cs
fnsave
push
mov
int3
add
lcall
stc
test
sub
daa
mov
push
mov
dec
mov
pusha
gs
dec
cmp
inc
pop
mov
fcomp
jge
nop
dec
cmc
aaa
hlt
aad
jae
and
shlb
jbe
and
push
arpl
cmpsl
nop
pop
int
cmp
cmp
outsb
mov
rorl
xlat
mov
shlb
mov
jne
fcomip
cmp
and
in
std
add
push
xor
scas
inc
sbb
xchg
mov
lods
mov
es
les
inc
sub
xor
jp
andb
test
pop
jecxz
stos
xor
sbb
pop
fwait
push
cli
lret
lahf
fcoms
gs
push
lahf
sarl
mov
inc
test
mov
dec
adc
sbb
out
sbb
je
aas
fcompl
hlt
mov
enter
sahf
lods
push
dec
icebp
and
out
pop
pop
outsb
xchg
ss
daa
mov
mov
aas
repnz
lods
dec
aad
popa
mov
iret
xor
lods
popf
or
push
xchg
add
inc
sub
hlt
adc
mov
mov
cltd
fldl
xchg
fmull
xchg
cmpsl
daa
jns
daa
mov
filds
jp
dec
and
lret
sahf
cwtl
stos
cld
dec
and
dec
into
int
repz
jle
adc
push
jne
aam
std
stos
scas
sbbl
add
repz
enter
mov
ror
ljmp
test
push
sbb
cltd
push
in
sbb
push
movsl
std
shrb
lret
das
fcompl
inc
mov
jg
pop
add
fs
lcall
sbb
add
pcmpgtd
mov
or
mov
jl
leave
imul
popf
stos
and
repnz
xchg
popa
add
fistpll
shll
and
mov
lcall
push
imul
and
cmp
stc
aaa
inc
lods
cwtl
decb
bound
and
jnp
add
push
mov
test
dec
out
test
sbb
jl
das
cmp
sahf
in
mov
arpl
xor
rcrb
pop
icebp
ds
inc
dec
push
adc
es
mov
adc
jge
and
ret
fdivrl
jge
outsb
jae
pop
in
pushf
or
fdivl
movsl
fxch
pop
push
jg
mov
out
push
xchg
push
jne
rcll
dec
cmpsb
xor
leave
or
mov
push
inc
sar
push
push
dec
fildl
mov
std
xchg
fsubr
xor
leave
push
mov
leave
fbld
cmp
adc
jl
mov
mov
scas
push
leave
test
add
lds
jns
mov
popa
andb
leave
test
cmp
or
jp
cmpsb
and
mov
lret
sbb
movsl
sbb
js
orl
xor
test
xchg
sub
cmpsb
push
fisubs
inc
loop
sub
sub
pusha
scas
icebp
lcall
mov
jle
loopne
pop
lcall
fmuls
faddl
aad
xchg
push
xor
pushf
popa
lahf
push
fcompl
in
idivl
xlat
sub
mov
dec
cmp
data16
inc
xchg
sub
fnstenv
sbb
pop
shrl
popl
movsb
stos
repnz
mov
pop
sub
lahf
scas
mov
fimull
lds
fsubr
sbb
cmp
mov
shrb
xor
inc
xchg
in
clc
iret
cli
and
mov
mov
adc
test
lahf
push
cmpsl
or
test
in
imul
adc
sbb
adc
push
pop
daa
popa
mov
xor
jle
add
xor
in
jne
add
jp
sbb
push
dec
sub
jle
test
rclb
cltd
test
or
arpl
imul
xchg
cmc
int3
cmp
movsl
push
mov
aas
stos
inc
out
cld
loope
test
lds
pushf
scas
hlt
outsl
movl
dec
sbb
xlat
out
dec
leave
push
lock
popf
or
mov
push
xor
or
lret
aad
lahf
int3
dec
mov
in
imul
les
mov
repnz
mov
jae
iret
sub
jmp
ljmp
out
xchg
jae
pop
mov
mov
push
es
or
les
dec
inc
outsb
adcl
shr
mov
xor
popa
lods
insl
out
pop
in
xchg
jb
xor
xor
sbb
les
scas
arpl
or
jbe
adc
movsl
mov
in
in
ret
rcl
scas
or
addr16
add
mov
dec
das
outsb
xchg
sub
push
test
pop
mov
ljmp
loope
and
mov
rcll
in
cld
pop
or
lods
leave
dec
call
pop
sub
and
roll
out
cmc
add
ss
imul
pop
std
xlat
jne
jle
pcmpeqw
in
adc
adc
mov
clc
lcall
dec
iret
orb
push
jmp
inc
movsl
push
push
add
sub
mov
dec
or
aam
subl
sub
cltd
enter
mov
mov
adc
and
fistl
sbb
test
push
addb
into
imul
dec
leave
lret
cmpsb
jnp
jns
xchg
fstps
daa
shl
mov
push
popf
mov
dec
xchg
dec
fcmovnb
hlt
mov
rorb
popf
sbb
cmp
mov
jo
xchg
scas
pushf
es
clc
fmulp
or
in
pop
mov
sbb
cmp
sub
mov
pusha
psubusb
aaa
xor
mov
jno
or
and
xchg
enter
mov
shr
jp
mov
cmp
xor
cmp
movzwl
cltd
pusha
xlat
xchg
in
jo
and
mov
loopne
pop
adc
mov
jno
cs
adc
xor
jo
mov
push
or
xor
in
aam
out
xchg
mov
aad
insl
outsb
ret
ret
push
mov
je
add
dec
mov
mov
nop
adc
sub
addl
and
bound
out
push
sub
ss
cmp
mov
pop
pop
loope
pop
push
jecxz
icebp
adc
mov
xor
jl
aaa
scas
mov
mov
ss
or
add
lock
scas
aas
mov
pusha
push
sbb
test
fldenv
mov
mov
popf
mov
aam
lret
pop
js
loopnew
cltd
mov
scas
cli
cmp
push
sbb
sub
sarl
out
sbb
inc
mov
sarb
push
not
push
lcall
call
lods
ss
jge
pop
cmp
cmc
mov
and
fpatan
jns
jbe
add
js
dec
inc
or
gs
jae
test
jbe
pushf
xorb
ret
cwtl
xchg
ret
jnp
jp
inc
pushf
loopne
lcall
and
mov
lret
xchg
push
adc
in
in
bnd
dec
push
add
and
or
push
jbe
mov
lahf
in
lods
shr
lea
inc
adc
sbb
push
popf
leave
loopne
push
mov
xchg
cmp
movsl
push
pusha
rcll
inc
lret
int
mov
lret
addr16
pop
int
pop
mov
dec
repz
popa
cltd
loope
fstpt
mov
jmp
test
jae
cmpsl
mov
fimuls
cvtdq2ps
add
mov
in
mov
jbe
adc
les
or
add
sbb
adc
orb
stc
inc
fsubrs
mov
inc
fadd
mov
push
mov
push
mov
mov
fbstp
and
push
and
mov
adc
or
xchg
pop
sahf
and
movsl
fisubl
xor
push
mov
cltd
mov
pop
pop
andb
pushl
dec
fs
fcmovnu
jecxz
cwtl
into
test
test
inc
pushl
jg
je
jae
fwait
and
mov
mov
dec
in
fwait
sbb
nop
adc
mov
or
mov
repnz
repz
cmpsb
xchg
sub
sbb
outsl
loope
mov
sub
mov
pop
push
adc
mov
loope
mov
sti
cltd
jo
out
mov
push
or
loopne
add
divl
fwait
test
add
jp
jns
scas
xchg
pop
push
fldcw
or
scas
orl
xchg
inc
and
pop
pop
sbbb
lcall
pop
inc
inc
add
iret
pop
dec
ds
fimuls
psllw
sti
stos
jns
pop
cs
mov
cli
mov
xchg
adc
movsb
xchg
mov
add
pusha
ss
dec
lcall
aad
inc
xchg
hlt
or
clc
lret
push
xchg
jno
push
orb
jmp
adc
xor
pop
bound
fnstcw
mov
in
or
sbb
add
sub
test
jnp
outsl
test
xor
cmc
mov
lcall
jle
adc
dec
xchg
push
je
lret
mov
fimull
or
push
ja
imul
addr16
or
call
js
nop
inc
scas
lods
push
rorl
fildl
xchg
nop
mov
jno
movsb
sub
aam
test
stos
mov
int3
and
sbb
pop
movsl
mov
jp
loope
lds
mov
xchg
pop
test
pusha
mov
in
mov
dec
mov
fcomip
adc
mov
add
data16
out
push
daa
test
shll
jnp
pop
mov
mov
push
sbb
and
nop
int
mov
jecxz
pop
pop
repnz
popl
inc
lods
js
test
push
dec
mov
adc
jo
jns
cmp
sub
sar
xchg
add
stos
inc
push
lcall
push
jmp
push
lcall
sbbl
in
inc
fisubs
int3
iret
testb
int3
xor
push
jae
xchg
inc
js
adc
nop
jge
fwait
aad
fwait
pop
push
mov
cmp
add
movsb
mov
push
aaa
pop
fsubrp
mov
cmp
stc
jl
loop
mov
cmp
loope
daa
stos
shl
dec
sbb
fistl
aaa
stos
mov
lahf
jo
cmp
sub
stos
repz
popa
mov
or
pop
out
dec
in
nop
xlat
adc
or
jl
ret
imul
and
out
mov
pop
scas
jl
ljmp
inc
sub
fisubrs
jo
and
cmpsl
out
pop
pop
cmp
cmp
xor
mov
imul
sbb
leave
fisttpll
call
iret
jno
cmp
in
test
filds
add
scas
fwait
scas
js
popf
je
out
mov
popf
jo
pusha
add
test
stos
fidivs
mov
and
leave
scas
incl
test
mov
leave
in
loopne
mov
xor
sub
inc
or
jbe
js
popl
int3
insl
scas
xchg
jmp
inc
jne
mov
popa
and
sbb
clc
dec
dec
ret
lcall
clc
mov
xor
cmp
stos
or
fadds
pop
jg
aaa
jnp
in
mov
das
out
jns
imul
pop
in
iret
xor
cmpsl
shrl
adc
mov
int
call
cltd
inc
mov
mov
shrb
jle
jge
jp
es
mov
xchg
xor
xlat
loope
cld
sbb
rcrw
lcall
test
mov
es
idivb
imul
and
push
movsl
inc
xchg
push
xchg
outsb
mov
sbb
sbb
fsubrs
cmp
das
mov
int3
add
sbb
movsb
inc
gs
inc
fwait
cli
mov
iret
mov
aad
in
gs
insb
jne
xor
sbb
and
ret
fidivs
or
sub
inc
stos
xor
lds
ror
push
mov
stc
cli
jl
daa
in
fs
cmp
sub
sbb
jae
movsb
in
ret
faddp
sub
loope
push
rcrl
mov
dec
in
xlat
add
mov
inc
jnp
jge
pop
movsb
add
mov
popa
inc
ret
dec
mov
dec
cwtl
das
ret
lret
jecxz
inc
popa
mov
push
mov
shlb
push
addr16
lods
ljmp
sahf
aam
inc
int3
aaa
or
dec
scas
mov
psubusb
dec
push
push
jne
mov
rorl
aas
outsl
stc
insl
inc
lods
into
dec
xlat
aas
push
int
cmpsb
mov
gs
movsb
push
or
jae
notb
cmp
rcrb
add
dec
loop
push
xchg
xor
scas
imul
mov
sbbb
mov
sarl
into
imul
inc
adc
jmp
test
lcall
xor
dec
data16
dec
or
shlb
cmp
sbb
mov
sub
sub
push
fists
fisubrs
nop
in
inc
popf
and
out
push
ds
xorl
xor
xchg
xorb
rclb
scas
jae
aas
icebp
mov
das
cli
cmp
xchg
gs
ja
repnz
mov
mov
movsb
rcrl
pop
push
mov
loop
inc
test
sub
mov
cmp
in
gs
cmpsb
sbbl
mov
sbb
out
gs
xchg
clts
es
push
push
sbb
xchg
cmpb
pop
rolb
cltd
cmp
lret
sub
cmp
es
lods
dec
inc
fdivrl
in
lret
sbb
xor
in
add
pop
aas
popf
fucomp
fmuls
sub
test
fisttpll
mov
pusha
jmp
cld
out
and
inc
in
daa
leave
sbb
cli
fiaddl
sbb
int
movsb
adc
xchg
lods
cs
mov
jle
lahf
aad
aam
cmp
in
test
inc
xchg
inc
or
enter
scas
cmpl
int3
popf
popf
xchg
sbb
add
mov
pop
insl
je
jp
cmp
out
mov
hlt
adc
fwait
add
fwait
mov
push
jae
into
lret
mov
jle
in
jo
push
lea
and
loope
lods
mov
loopne
sbbl
pop
ja
test
adcl
scas
iret
data16
sub
aas
in
jo
in
std
fidivs
dec
xchg
sbb
xor
fsubs
jo
xchg
mov
scas
jle
push
in
adc
fnstcw
aad
and
inc
idivb
push
cwtl
pop
fsubl
mov
sbb
or
and
pushf
sub
cmc
xchg
out
mov
mov
or
test
jo
xchg
sbb
dec
adc
sarb
mov
push
sub
mov
cmc
sbb
lods
flds
lahf
mov
add
jle
push
insl
testl
inc
adc
lcall
and
jecxz
dec
int3
and
sbbb
insb
jecxz
push
lahf
xor
xrelease
scas
mov
int3
ficomps
fildll
ror
out
repz
fdivl
cmp
adc
or
push
cmc
movsb
jp
aas
sub
sub
andl
lock
fidivrs
fisubl
pusha
cmp
out
mov
mov
mov
jbe
mov
pop
ds
shrd
arpl
cmpsb
ss
xlat
sub
movl
imul
cmp
clc
popf
pop
cmc
push
shrd
sbb
and
scas
out
jl
xchg
dec
lods
cmp
pop
xor
lahf
xorb
fcompl
cmp
sar
sbb
or
fldl
inc
dec
xor
push
lods
adc
loope
push
mov
push
ljmp
jb
imul
cli
ljmp
pop
adc
ss
jl
repz
sahf
push
in
or
inc
jge
sbb
xor
mov
lahf
js
shlb
xor
adc
call
mov
aad
or
in
sbb
in
cmpsb
mov
xchg
mov
leave
test
ljmp
dec
mov
jp
sbb
js
test
lock
scas
ret
sbb
es
jmp
jecxz
jo
sbb
sub
repnz
scas
mov
ja
rcrb
out
lcall
pushf
clc
jg
popf
fnsave
sarb
dec
call
jl
or
aaa
andb
int
mov
cmc
pop
jle
xor
int
js
aaa
call
and
inc
sbb
or
push
push
pop
mov
add
ljmp
cmpsl
inc
es
cwtl
lods
inc
lods
std
xchg
fimuls
repz
sbb
jl
ret
popf
aaa
into
into
jl
add
cmp
inc
mov
shrb
sub
jo
stc
icebp
mov
push
jbe
add
nop
and
cmpsb
push
mov
sub
cmp
shrl
nop
outsb
ret
mov
jne
sub
xor
cld
ds
nop
push
adcb
andb
push
jle
pop
lret
push
inc
mov
popa
in
xchg
jecxz
mov
push
mov
cli
jle
jmp
sbb
jg
repnz
sub
xor
xchg
js
jecxz
mov
add
jecxz
or
mov
xchg
das
rclb
jbe
add
push
jo
test
xchg
inc
out
cmp
ficoml
movsl
icebp
divl
int3
cs
lods
fmul
dec
push
jmp
iret
les
call
mov
clc
push
test
and
fs
pop
es
and
sub
xchg
mov
dec
sbb
sub
in
xchg
or
je
xchg
icebp
or
imul
push
mov
push
icebp
xor
and
and
icebp
xchg
js
lds
mov
aas
rcr
leave
dec
aad
mov
cs
jl
call
jle
jnp
mov
shll
add
mov
or
negl
mov
sub
mov
ret
xchg
pop
out
add
inc
dec
pop
jae
fidivl
ret
shr
mov
pop
lea
mov
inc
mov
test
mov
icebp
movsl
in
sbbb
aaa
push
jmp
or
sub
movsb
scas
inc
xlat
out
cmp
jnp
mov
les
cwtl
das
sub
cli
adcl
outsb
popa
mov
mov
dec
sub
mov
pop
push
movsl
dec
rolb
insb
sub
mov
or
gs
pop
xsha1
cmpsb
mov
bound
dec
aam
int3
or
dec
or
loope
pop
mull
mov
dec
mov
mov
fwait
movsb
jmp
sbb
mov
cmp
sub
fs
jae
pop
int
adc
xchg
in
adc
sbb
xor
into
fnstsw
stos
int3
pop
mov
in
test
or
push
shrl
stos
inc
push
out
sahf
stos
in
movsl
cmp
loope
data16
ret
mov
addr16
test
fdivrs
xlat
cmp
fcmovb
pop
or
call
das
movl
mov
inc
aas
rorb
xchg
pop
pop
fists
imul
ret
movsb
or
lea
mov
sti
scas
adc
test
mov
jno
mov
push
mov
ljmp
cwtl
dec
rorl
sbb
and
repnz
cs
or
adc
stos
sub
decb
adc
dec
mov
shrl
fnstenv
ret
mov
xor
aam
ret
mov
pop
add
sbb
clc
inc
fs
movsb
js
inc
mov
and
jmp
cli
or
cmpsl
out
movsb
cltd
rcrl
leave
and
lret
popf
push
push
addr16
ss
outsb
aas
out
jne
das
mov
or
push
push
popf
inc
inc
xchg
sub
adc
es
cwtl
add
call
cmp
pop
stos
push
jnp
test
and
xor
cltd
add
lret
sub
lods
dec
fcompl
cmp
lea
dec
cmc
lret
sbb
jge
fisubrl
xchg
and
or
enter
sbb
cmpsb
movsb
cmp
xor
jg
lods
cmp
mov
xchg
and
pop
out
sub
in
dec
jo
das
lods
pop
mov
addl
fcomi
lahf
xchg
and
popf
mov
repz
and
cmpsb
push
imul
test
lea
push
lret
mov
popf
jne
sti
ficoms
adc
pop
or
out
inc
sarl
pusha
add
mov
pop
xchg
inc
rolb
adc
cmpsb
pop
mov
inc
inc
into
xchg
dec
xchg
cltd
sub
orb
ret
ds
add
ljmp
rcrb
daa
pop
cli
jg
dec
repnz
test
mov
adc
fists
ja
mov
and
pushf
aad
adc
jle
aas
imul
jg
mov
fisubrs
push
cmp
int
icebp
sub
push
stos
in
add
arpl
or
imul
dec
mov
imul
sti
inc
fcmovnb
xor
sub
testb
pop
jecxz
or
imul
rol
jno
rcr
ss
mov
lahf
push
js
dec
xor
int3
jmp
cmpsb
stos
scas
enter
cld
movsb
mov
mov
cli
inc
mov
out
inc
mov
xor
out
lock
dec
test
lds
icebp
cld
sarl
dec
ljmp
outsb
jl
add
xor
dec
push
push
lahf
insb
add
inc
outsb
push
jne
lock
je
cltd
xor
jns
roll
fbstp
inc
movsb
inc
fwait
andl
add
jne
test
xchg
int3
cltd
std
mov
loop
outsb
add
pop
repnz
or
enter
imul
xchg
std
rclb
dec
jp
mov
push
xlat
daa
xor
mov
outsb
or
cmp
mov
cmpsb
sbb
add
mov
and
out
push
dec
decb
movsl
out
jns
sub
pop
cs
dec
lahf
mov
frstor
mov
xchg
addr16
adc
mov
xchg
sahf
fmul
cmpl
jbe
pop
jge
jp
bound
lret
add
jno
mov
fidivrl
popf
mov
arpl
or
orl
cmpsb
mov
mov
and
pop
push
roll
push
ja
mov
adc
les
aam
les
xchg
pop
cwtl
cmc
into
or
das
dec
jecxz
fcoms
pop
add
push
daa
test
xchg
push
mov
xchg
sarl
cli
xlat
outsb
and
cmc
cmp
in
xchg
lcall
sub
mov
cs
and
lds
shll
mov
push
mov
aaa
dec
push
jbe
cwtl
clc
lret
add
pop
inc
push
mov
mov
inc
push
data16
js
jnp
adc
mov
inc
in
dec
jecxz
xchg
dec
incl
push
and
rcrl
fnstenv
inc
fdivl
lret
jae
adc
jbe
clc
mov
dec
add
lea
dec
add
inc
fcmovnbe
jge
sbb
aaa
fbstp
push
es
add
es
cmp
call
cmpl
mov
sub
adc
cld
inc
fdivrl
add
hlt
adc
enter
aas
dec
fs
mov
cs
out
adc
sbb
adc
lret
sbb
pop
dec
jmp
in
add
pop
lock
mov
lret
adc
xor
push
mov
in
dec
iret
adc
cmp
pop
int3
enter
sahf
ret
arpl
and
add
dec
sub
test
push
mov
mov
push
insb
jg
mov
outsb
in
add
mov
pop
mov
inc
data16
pop
ljmp
divb
movsl
jnp
aas
lock
call
cmp
mov
inc
inc
or
loope
nop
sub
mov
jae
loope
int
add
mov
dec
pop
scas
jb
mov
call
loopne
daa
cld
pop
pop
push
pusha
sub
cmp
mull
mov
int3
loope
xchg
cmp
mov
or
mov
dec
pop
subl
icebp
movsb
pop
shlb
sbb
es
shr
xor
mov
test
mov
imul
ret
outsb
add
call
xor
out
cmp
ss
inc
outsl
insl
loopne
ljmp
dec
push
cmc
clc
outsb
push
jns
pop
lret
inc
andl
daa
clc
push
popf
gs
push
cmpsl
xchg
pop
jp
aaa
cmpsl
call
mov
push
shrb
icebp
aas
cwtl
mov
repz
es
adc
testl
das
or
dec
in
andl
add
in
xor
in
and
imul
inc
fsubl
lret
bound
mov
jo
pushf
bound
daa
mov
pop
jno
sti
scas
jns
inc
stos
sar
ret
dec
loopne
inc
dec
fs
fsubrs
aaa
or
or
mov
jbe
mov
dec
loopne
lods
cmp
pop
jg
jns
sub
inc
cmpsl
cld
inc
arpl
push
push
je
sub
test
lds
pop
sub
pop
pop
adc
test
outsb
adc
bound
lods
xchg
into
icebp
ret
jns
inc
pop
data16
dec
dec
jecxz
dec
pusha
test
add
jp
push
pop
and
mov
mov
jae
pushf
data16
shlb
movsl
loop
add
mov
mov
mov
pop
lret
jnp
test
movsl
cld
pushf
stos
cltd
mov
jge
xchg
mov
shrb
out
leave
xor
cmpl
iret
jae
pop
stos
xchg
sub
dec
lods
mov
shlb
cli
lods
aas
lret
inc
orl
add
fdivrl
jl
stos
adc
cmp
and
fs
pop
inc
fldenv
cmpsl
popf
xchg
jo
xchg
data16
stos
push
fucomi
test
ja
jnp
call
scas
int
loope
sbb
mov
mov
mov
pusha
loop
xor
push
es
ja
inc
addr16
mov
and
sbb
or
or
pop
xor
int3
lcall
inc
jl
ss
orl
or
hlt
inc
shld
sub
aaa
inc
sbb
test
fwait
movsl
fs
mov
or
dec
xchg
jmp
cltd
inc
imul
aaa
clc
xchg
fwait
outsb
clc
bound
insb
sti
mov
popf
jg
sbb
mov
das
xchg
xchg
call
add
fimull
out
add
loope
push
mov
test
out
jns
add
shll
cli
add
pop
es
lret
sahf
xor
push
add
rorb
xchg
adc
clc
movsl
inc
mov
adc
inc
das
loopne
clc
lods
cwtl
test
push
cmp
je
mov
xorl
cld
jo
je
cmova
lcall
stc
adc
inc
sti
fwait
jnp
push
cltd
lret
mov
mov
popa
scas
out
add
adc
repz
in
test
xchg
lock
adc
adc
int
mov
jne
mov
in
lcall
pushf
repz
mov
es
adcl
test
push
inc
xor
sbb
lret
jmp
sbb
pop
mov
push
and
aam
outsb
push
aaa
jo
jecxz
clc
fs
mov
in
push
ds
inc
sbb
push
lds
push
xor
rorb
repz
iret
xlat
sub
cmpsl
mov
pop
adc
jl
sbbl
and
xlat
stos
mov
push
mov
inc
pusha
leave
xor
in
std
ds
inc
pop
imul
or
xchg
movsl
ljmp
les
call
pop
sahf
fbstp
jae
lretw
jae
push
movsl
cmovle
cld
push
sub
or
je
mov
hlt
xchg
xchg
adc
mov
cwtl
xor
int
stc
mov
push
test
ss
mov
and
mov
mov
insl
push
ret
sti
dec
cs
jnp
jo
push
cmpsl
xor
test
inc
or
gs
dec
and
movsb
push
sub
and
push
movsb
clc
test
daa
push
xchg
dec
arpl
add
mov
jb,pn
fnstenv
aam
out
mov
ljmp
stc
ret
push
mov
pop
flds
xchg
push
out
ret
je
stc
xchg
movsb
dec
mov
lods
subl
mov
cs
rcrl
rclb
sbb
jp
lret
dec
iret
mov
sbb
mov
cmp
pop
in
jo
cmp
mov
addl
and
mov
mov
push
out
movsl
adc
stos
mov
sbb
cmpsl
stos
jnp
fmull
call
dec
movsl
popf
gs
lret
addr16
pop
lds
xchg
arpl
aaa
push
cmc
or
push
inc
stos
fcoml
repnz
andb
and
and
adcb
add
pop
mov
insb
in
push
daa
mov
subb
adc
jne
mov
movsl
add
ljmp
and
xchg
jge
rcrb
mov
cmc
cmp
das
cmp
lds
iret
testb
cld
sub
pop
mov
sbb
sahf
int3
mov
imul
pop
push
push
add
add
sub
push
in
adc
pop
jge
stos
cmp
es
dec
push
into
scas
xchg
add
scas
test
pusha
mov
sbbl
fsub
sub
hlt
pop
cld
xchg
mov
mov
sub
sub
movsl
xor
cmp
and
xchg
push
lea
mov
jmp
xlat
adc
in
clc
test
call
push
jmp
add
movl
stos
call
or
gs
mov
push
jg
or
add
fistpl
push
cmp
push
out
dec
aas
xchg
sub
push
scas
cmp
incl
push
add
inc
xchg
shr
addl
add
lcall
dec
and
cmp
pop
pushf
push
fwait
in
push
test
cmp
repz
int
and
out
xchg
mov
pop
mov
lret
and
cwtl
cltd
popa
test
xchg
and
dec
jmp
add
les
push
sub
adc
call
cmpb
dec
test
mov
push
mov
mov
cmpsl
add
mov
nop
clc
ljmp
mov
xchg
aad
inc
mov
insb
mov
adc
cld
inc
mov
jmp
xor
sbb
int
pop
mov
cmpsl
sbb
call
xchg
push
repz
mov
sbb
aas
sbb
mov
xchg
incb
push
into
mov
or
push
movsl
bound
orl
mov
daa
mov
loop
js
inc
aam
cltd
add
outsb
mov
or
mov
stos
jp
out
xchg
cs
cmpsl
sub
aaa
jmp
nop
test
not
bound
aad
or
cmp
fsubs
dec
repnz
test
and
ja
jns
and
lret
push
es
inc
stos
mov
push
mov
cmpsl
cmpsb
jns
inc
repz
sti
fwait
in
or
pusha
cmp
xor
cmpsb
std
or
insl
dec
int3
adc
push
outsl
daa
cwtl
aam
sbb
add
mov
jge
shll
ret
and
mov
imul
bound
xchg
pop
and
adc
movsl
popa
stc
in
nop
cmp
js
dec
sbb
and
mov
inc
pusha
push
arpl
rolb
fwait
cmpsl
inc
push
call
xor
outsl
push
xchg
sahf
int3
pop
sarb
loop
nopl
notl
mov
cld
fwait
cmpsl
out
stc
pop
cmc
sub
imul
add
pushf
mov
jle
xor
movsb
incb
out
stc
sub
or
cmp
sub
test
adc
sub
hlt
sahf
mov
shl
dec
mov
aad
addb
pop
inc
add
call
fmull
fdivp
push
mov
loop
das
cli
je
fbld
xor
xchg
sub
push
push
sub
push
jp
fucomp
xchg
test
movsl
idivl
adc
out
mov
jg
jbe
les
fnstenv
xor
cmp
stc
mov
jg
mov
lock
pop
push
pop
jg
std
cmpsl
jle
mov
add
dec
test
push
dec
ljmp
jo
es
jg
jnp
outsl
mov
cmpl
pop
sub
and
xchg
sub
xchg
outsb
frstor
lret
inc
dec
es
stos
jl
xlat
ficoml
jae
cmp
sbb
stos
les
ret
sbb
rcrb
out
sbb
dec
or
cmp
lock
stos
int3
mov
iret
mov
scas
jp
roll
fiadds
enter
mov
call
and
cs
cmp
cmp
dec
in
scas
push
sub
js
fnstcw
in
lods
repnz
mov
or
mov
mov
rolb
or
insl
xchg
xchg
loop
aad
jnp
in
push
mov
fcmovb
push
int3
ret
pop
lock
icebp
or
test
js
insb
stc
mov
les
push
pop
out
xor
push
pop
loop
div
dec
pop
and
hlt
sub
xor
cmpl
idivb
cmp
orb
xor
std
adc
loope
popa
mov
xchg
stos
aas
mov
sbbb
add
xor
mov
mov
rorb
jp
xor
das
in
insb
into
cltd
xor
pusha
ja
cmp
in
dec
sarb
loopne
and
or
jmp
shll
or
push
and
fistpl
push
mov
cmpl
and
clc
sahf
xor
push
std
shll
sbb
mov
cmp
mov
pop
test
dec
adc
mov
sub
jge
iret
nop
stos
dec
sbb
mov
loopne
sbbb
fisttps
pop
test
stos
add
xor
in
sahf
cmp
cs
ficompl
push
lahf
lcall
mov
mov
sbb
xor
dec
mov
decb
lods
jb
sahf
push
jns
xor
jo
push
rol
fnstsw
ja
push
shl
insb
mov
jge
das
movb
mov
mov
cmc
cmp
int
mov
mov
xlat
jns
dec
les
cmc
xor
mov
cmp
or
mov
movsl
dec
orl
mov
pop
aas
sti
xor
adc
mov
pop
stos
sub
cmp
sti
mov
xchg
cld
xchg
lret
sti
cwtl
dec
jecxz
xor
mov
lcall
mov
ret
mov
icebp
shlb
jmp
call
stc
je
js
fs
pushf
inc
stos
jmp
addl
xchg
sti
es
imul
out
stos
add
aad
movsb
ret
jle
dec
jge
repnz
and
mov
ficoms
fistps
fsubrs
and
daa
push
cmp
iret
fildll
push
inc
mov
fwait
and
je
add
cmp
std
arpl
pop
push
xchg
cmc
int3
mov
sbb
fwait
iret
scas
and
lahf
or
sub
roll
cmp
xorb
pop
sahf
xlat
or
movd
inc
jg
int3
or
adc
outsl
inc
icebp
xchg
outsl
jge
ds
sahf
cmc
pop
in
mov
into
scas
mov
stos
mov
push
movsl
push
in
hlt
mov
add
cmp
ljmp
gs
data16
xlat
adc
mov
in
fwait
push
sahf
jmp
inc
leave
pop
cmc
add
adc
pushf
dec
in
mov
into
jo
insb
repz
xchg
or
push
cmp
imul
cmpsb
out
test
mov
cmp
fidivrs
push
insb
test
cmp
js
inc
stos
mov
out
decl
sbb
push
cmc
mov
lahf
push
mov
out
dec
in
cld
stos
ret
in
pop
out
xchg
in
daa
sbb
scas
mov
je
xchg
das
pop
lea
push
mov
jnp
cld
and
xor
stc
push
or
push
mov
ds
pushf
or
mov
pop
mov
fwait
arpl
mov
sbb
xlat
in
dec
jbe
outsl
add
pop
incb
or
hlt
adc
push
cs
pop
repnz
jge
stos
ficoml
rclb
ret
repz
xor
shll
xchg
push
shrl
adc
jmp
or
jb
pop
sbb
adc
pop
add
cmpsb
fldenv
stos
or
cli
arpl
jge
jne
mov
jne
cmc
shl
mov
mov
add
insl
add
jecxz
and
push
test
adc
sbbb
inc
in
movsb
dec
ret
mov
sub
loopne
sub
or
outsb
sbb
push
xchg
add
dec
push
push
mov
mov
rcl
mov
dec
out
push
in
das
loope
and
ja
incl
lods
gs
xor
xor
xchg
daa
pop
or
mov
out
mov
shlb
and
mov
add
push
mov
popl
pop
ss
leave
mov
cmp
stos
aas
sub
lret
insb
in
xor
sub
or
icebp
mov
jb
scas
sub
mov
xor
lock
mov
insb
mov
pop
notb
fnclex
xchg
in
xor
pop
pop
xchg
and
mov
in
iret
sub
sbb
mov
int3
xchg
xor
mov
outsl
sbbb
pop
ljmp
out
push
or
dec
cmp
in
popf
push
in
popf
jnp
lods
sbb
adc
sbb
add
cmp
or
jle
pop
pop
mov
out
movsb
mov
sbb
mov
xchg
aaa
data16
lahf
fnstcw
inc
xchg
aaa
pop
pop
lcall
xchg
fmull
mov
xor
xor
icebp
inc
mov
dec
imul
pop
jl
mov
xor
pop
cmp
pextrw
push
dec
in
cld
xchg
dec
inc
insb
cmc
adc
pop
mov
ja
add
adc
push
int3
faddl
stos
and
enter
xor
stos
dec
ss
cli
shll
call
mov
inc
jge
int
dec
or
aam
push
push
aam
das
scas
fistps
push
mov
fisttps
jo
dec
shlb
sbb
loop
cmpl
inc
add
lock
fwait
mov
std
mov
xor
mov
enter
icebp
xchg
mov
call
xchg
inc
test
mov
mov
popf
outsb
jne
dec
outsb
mov
stos
jbe
aad
cmp
mov
adc
cmpl
lahf
sub
dec
in
dec
push
xchg
repz
jb
sbb
shll
xchg
addr16
test
adc
filds
ja
add
adc
out
pop
nop
popf
jg
fldln2
aas
sahf
adc
and
js
jo
or
add
mov
out
aaa
inc
mov
mov
jg
pop
incb
sbb
in
bound
idiv
push
jne
sbb
xor
push
mov
cmp
jno
pop
out
adc
mov
call
push
out
xor
sub
lds
push
repz
add
adc
aam
je
add
scas
mov
cld
xchg
test
out
jg
xor
adc
addr16
in
in
xchg
pop
push
lret
jp
je
jns
lcall
ds
mov
cmp
fs
aad
inc
add
sub
push
mov
lds
jmp
sbb
push
jbe
add
mov
push
sub
cmpsb
cmp
sub
sti
inc
pusha
sub
lock
pop
fnstcw
inc
pop
push
pushf
or
movsb
repnz
scas
in
or
aad
ds
add
jge
fcoml
xchg
inc
test
and
out
cmp
in
push
jnp
mov
sbb
sub
mov
int
xchg
push
test
or
mov
lea
pop
in
repz
out
cld
lcall
sbb
dec
fildl
hlt
scas
and
jg
lret
mov
sarb
insb
ret
daa
jno
jp
out
sti
cmpsl
loopne
mov
aam
mov
pop
filds
xor
es
cld
adc
cmp
lock
out
push
sub
jle
mov
mov
xchg
lahf
icebp
enter
ficoms
dec
pop
sarb
jecxz
mov
ss
ret
fldl
jge
imul
cmpsb
or
data16
mov
dec
test
enter
ljmpw
jno
dec
in
insl
dec
call
and
pop
jl
jmp
or
mov
cmp
jle
iret
mov
in
jmp
xchg
add
sbb
mov
je
xchg
out
xor
popl
sahf
mov
xchg
pushf
inc
les
or
pop
pop
shrb
ret
daa
fs
fs
inc
pop
popl
idivl
and
or
jl
ljmp
jno
cmp
push
sbb
shrl
daa
jecxz
int
push
mov
sub
mulb
and
dec
stos
inc
ljmp
pop
pusha
jae
adc
add
mov
sbb
mov
inc
and
mov
movsb
lea
adc
xor
dec
dec
xor
jo
pop
ret
cli
lahf
xor
scas
arpl
into
call
pop
out
div
mov
push
outsb
scas
push
and
pop
sub
pop
xor
inc
inc
dec
arpl
cmp
shr
test
test
pop
imulb
mov
xchg
mov
stos
repnz
cmp
das
sbbl
inc
sub
push
aas
pop
mov
test
cmpsl
cmp
inc
cs
or
pushf
mov
or
mov
xor
mov
inc
mov
jo
icebp
and
mov
cmc
das
mov
jb
jge
out
lcall
dec
stc
and
out
mov
dec
lds
xorb
pusha
xchg
scas
out
and
sub
sbb
xchg
pop
mov
sbb
dec
js
cld
xchg
mov
pop
lahf
stos
lea
js
lret
sahf
shll
xchg
jo
insl
loopne
sbb
ror
adc
in
push
and
xor
and
aaa
in
lds
xchg
hlt
inc
xchg
jecxz
shr
inc
mov
jg
mov
mov
and
sbb
mov
sub
lret
cwtl
cmp
inc
xchg
adc
add
push
jbe
out
cmc
cmp
jecxz
aas
add
daa
push
lock
cmc
push
addr16
cmp
push
and
inc
das
ds
xor
icebp
test
cmp
xchg
lret
sti
jae
adc
in
pop
xor
mov
mov
or
jne
add
pusha
js
into
fwait
or
scas
imulb
jbe
cmp
jo
mov
inc
pop
ret
mov
dec
sbb
push
aas
push
add
sbb
rcr
xchg
fisttps
xchg
test
mov
mov
jns
out
mov
adc
aad
jg
iret
pop
lods
push
bound
xchg
jne
notb
jns
jo
jnp
sti
bound
xor
rorl
data16
inc
inc
arpl
andb
cmp
fstpl
divb
lret
jp
jp
or
imul
jge
pop
xchg
into
lods
stos
arpl
das
mov
fsub
sti
fwait
xor
and
push
xor
sbb
out
jbe
in
pushf
inc
stos
inc
cltd
imul
fs
inc
and
jle
ficompl
je
xchg
sti
add
sub
and
fnstsw
leave
sub
push
loope
out
adc
pop
xchg
mov
int
adc
in
cs
fsubr
dec
enter
movsb
cmpsb
mov
sub
push
out
pop
sub
jb
aad
lret
and
jl
xor
or
lcall
add
and
cmp
pop
mov
cli
shll
rcr
test
xchg
mov
dec
mov
repz
ljmp
movsb
push
enter
push
mov
sbb
or
cld
or
imul
gs
push
loop
xchg
pop
sub
dec
jbe
sbb
or
mov
leave
and
orl
scas
in
push
add
pop
mov
dec
jecxz
sbb
aas
adc
ret
call
test
sbb
adc
ljmp
call
inc
mov
push
addr16
mov
std
jae
scas
in
mov
ret
mov
pop
outsb
adc
sbb
rorl
fnstenv
out
mov
andb
xor
nop
stos
call
dec
insb
lret
sahf
outsl
js
hlt
mov
idivl
push
sub
push
or
movsb
fidivrs
cld
jae
lret
mov
icebp
sarl
inc
lds
bound
daa
add
fsubrs
pop
lret
mov
jns
ljmp
pusha
adc
pop
jne
dec
pusha
pop
movsl
fs
aaa
lret
mov
sbb
mov
adcb
add
pop
jg
int
cmp
jle
sbb
aad
adc
cmc
jns
js
subb
fwait
and
cmp
jbe
pop
cltd
test
or
fsubrs
mov
divb
mov
ret
out
jmp
and
xlat
mov
jecxz
sarb
dec
mov
dec
in
mov
rclb
push
insl
sbb
mov
lahf
or
and
cwtl
jg
add
push
and
push
test
loope
pop
xor
and
add
add
jo
fisttps
xchg
int3
fidivl
leave
cltd
add
add
inc
in
mov
fnsave
enter
fstl
rclb
mov
cli
pop
mov
out
arpl
pop
ds
jae
fwait
xchg
dec
add
repnz
xchg
jbe
leave
push
fnstenv
lods
add
test
sub
and
xchg
mov
pushf
sub
xchg
adc
dec
inc
movsl
out
stos
cmp
xchg
aam
inc
stc
fidivrs
sub
xor
push
pop
cli
push
sub
mov
sahf
lahf
lods
xchg
add
sbb
shrl
mov
imul
call
cld
jl
jns
aad
shl
rorl
call
cmp
pop
lds
popf
mov
xchg
mov
lahf
nop
dec
mov
xor
and
sbb
adc
adc
fs
aam
out
jbe
mov
dec
sbb
and
jne
imull
sbb
shrl
out
mov
nop
scas
aaa
or
jg
xor
inc
testl
or
jmp
or
cmpsb
in
mov
pop
fs
aad
pop
imulb
push
mov
xchg
scas
xor
rolb
sub
and
xchg
add
dec
out
movsl
and
inc
xchg
stos
or
and
leave
and
movsb
mov
xchg
aam
rclb
js
or
es
cmp
int3
sti
jb
mov
in
notl
cmp
mov
xchg
fdivs
or
jmp
imul
xchg
fadd
aam
mov
mov
jl
xchg
daa
jnp
sbbl
jl
je
mov
mov
push
mov
pop
movsl
std
je
ds
jnp
js
jl
push
pop
mov
push
enter
lahf
fnsave
add
pushf
sti
es
mov
mov
mov
aam
mov
sub
pop
imul
add
jne
adc
movsl
shll
idivl
fldcw
lods
sbb
addl
xor
push
clc
outsl
movsb
fadd
lods
jl
cs
filds
inc
fcompl
mov
mov
nop
daa
andl
fimuls
pop
loop
lea
pusha
push
pop
sbb
xchg
lret
xor
jae
xchg
jle
je
adc
xchg
lret
mov
jae
cmc
jp
inc
push
adc
fs
mov
jno
adc
mov
add
roll
mov
pop
cwtl
insl
cmp
outsb
adc
sahf
pop
nop
push
leave
in
sahf
and
adc
stc
xlat
arpl
cmp
jg
ja
jo
mov
jge
push
jb
adc
sub
mov
adc
jg
lahf
pop
shr
jp
pop
xor
jo
rcr
inc
movl
int3
xor
and
jmp
bound
sub
mov
mov
xor
daa
outsl
mov
arpl
lahf
out
lret
mov
int
enter
dec
jno
stos
in
fsubrl
clc
cmpsl
pop
jns
ss
lcall
cmpsl
cmc
xorl
pop
mov
sarb
sub
jl
sub
pusha
mov
popf
imul
xchg
nop
mov
push
movsl
in
cltd
add
jns
das
mov
je
in
roll
lods
cmpb
sub
or
dec
test
insl
inc
jmp
ud1
inc
jbe
psubsb
add
jae
fildll
fwait
add
test
adc
icebp
jl
lock
push
add
and
mov
mov
and
inc
cwtl
mov
inc
addb
das
xchg
xor
loope
fs
test
sarb
xchg
sbb
ret
and
mov
rclb
jp
rcll
jo
pop
je
loope
jns
cmpsb
cmp
push
sbb
cld
stc
stc
mov
repz
mov
pop
adc
dec
adc
xchg
sbb
mov
add
push
sbb
scas
jno
mov
loopne
daa
adc
rcrl
xchg
mov
pop
mov
insl
ss
dec
outsl
cmp
jle
jmp
sbb
pop
push
cmpsl
lods
outsl
sub
cs
cld
pop
inc
scas
pop
and
inc
stos
enter
movsl
je
ja
push
test
mov
adc
dec
mov
mov
pop
adc
pop
push
xlat
pop
aaa
lea
jbe
mov
dec
mov
lea
or
fwait
xor
test
loop
repnz
movsb
js
dec
rcll
insl
mov
jge
ds
push
call
pop
test
push
xchg
lcall
les
xchg
inc
fimull
sbb
xchg
xor
cmc
inc
lea
add
mov
xchg
add
push
sbb
push
pop
daa
ja
aam
popf
ljmp
mov
pushl
icebp
inc
cmp
icebp
popa
inc
inc
aad
mov
dec
lods
out
iret
shl
lret
dec
in
stos
fldt
mov
sbb
dec
add
ret
data16
ss
fldcw
and
sub
sub
outsl
movsl
call
mov
popf
push
push
ss
popf
stos
push
jne
lcall
or
lods
sarl
adc
jnp
push
jle
std
cmpsb
push
shlb
clc
jae
dec
mov
addr16
out
xchg
add
stc
in
sahf
xor
shll
and
cmc
pop
scas
test
bound
and
push
outsl
push
cmp
pop
lea
sti
pop
pusha
mov
push
seto
test
mov
mov
push
out
sti
xorl
mov
cmp
out
test
push
or
stos
shrb
jecxz
or
mov
adc
push
clc
xlat
and
lods
int3
xchg
cli
mov
in
loopne
cmp
lock
mov
loope
xlat
mov
add
pop
dec
insl
add
insl
jge
mov
cmp
sbbb
out
cltd
xchg
push
jae
sub
in
push
popf
mov
push
and
inc
cld
lods
into
fisttpll
mov
jg
mov
dec
cmp
insl
loopne
stc
mov
dec
and
rorb
movsl
push
fs
push
testl
ss
aam
repz
adc
lcall
loope
leave
sub
cli
adc
push
cmp
pushf
cmpsb
leave
cmp
and
lahf
rclb
mov
leave
insb
dec
in
or
jbe
dec
sbb
lea
and
rolb
xchg
movsl
stos
std
xchg
fnsave
dec
sub
movsl
push
cmp
out
jb
or
out
cmp
in
adc
jbe
leave
add
jns
pop
pmullw
mov
mov
nop
daa
sahf
jge
imulb
scas
inc
data16
imul
mov
test
out
popa
sbb
stos
rcrb
mov
mov
jp
rorl
lea
loopne
jnp
jmp
scas
add
xchg
sbb
push
push
adc
cwtl
imull
push
jl
push
and
and
rcl
inc
sti
sarb
and
int
insb
mov
frstor
add
out
sti
btc
pop
jg
cli
dec
jg
mov
in
lock
push
shl
and
mov
fcmovnu
rorl
into
mov
jp
out
push
movsl
and
add
jbe
mov
pop
imul
ljmp
ds
xor
or
xor
aaa
push
arpl
jmp
daa
lods
and
dec
cwtl
jge
js
and
push
mov
cmp
int3
jbe
and
cli
xor
sbb
pop
lret
jecxz
xor
push
add
fistpll
in
mov
inc
pop
inc
popf
jmp
in
js
outsl
daa
mov
shrb
jge
ljmp
jno
sub
jp
or
jge
cmpsl
ds
push
mov
push
shll
add
int
cmpsb
jl
jnp
enter
pusha
out
mov
fcmovbe
sbb
adc
sub
hlt
mov
fstps
sub
mov
xor
and
mov
addr16
sahf
imul
in
xchg
repnz
dec
loopne
jns
sbbb
inc
pop
in
pop
scas
and
pop
jecxz
push
fadds
mov
ret
outsl
sti
xchg
dec
push
sbb
cmp
mov
shlb
and
jl
and
bound
dec
nop
inc
or
addr16
aam
insb
in
and
and
enter
js
cmp
fstpl
mov
push
roll
mov
in
imul
cmp
pop
std
psrlq
push
jp
leave
push
je
pop
add
dec
add
pop
shrl
xor
mov
stos
mov
mov
ret
inc
leave
xor
and
mov
mov
lahf
jmp
sbbb
clc
xchg
clc
fwait
sti
cmp
pop
out
cmp
jne
popa
mov
cld
xchg
xchg
scas
adc
cli
add
jo
fwait
mov
and
mov
xchg
fisttpll
inc
arpl
das
jno
and
jg
xor
xchg
mov
sub
push
sti
sbb
dec
pusha
mov
out
loopne
cltd
sub
test
pop
mov
fisubl
repnz
mov
sub
scas
mov
clc
popa
fmull
divl
or
daa
addr16
out
pop
cld
pusha
and
add
les
scas
sbb
mov
cmp
scas
xor
push
mov
adc
jl
adc
mov
sahf
lcall
cld
lods
outsl
mov
mov
dec
aad
andl
xor
jno
fstl
sbb
jecxz
pushf
idivl
pushf
cmc
mov
sbb
cmpl
cs
adc
arpl
mov
sti
or
lcall
lea
in
je
sbb
mov
shl
call
ret
aas
es
inc
xchg
dec
mul
ja
or
push
ds
int3
mov
ret
mov
jb
pop
jl
pop
inc
iret
hlt
loopne
dec
mov
xor
dec
or
in
insb
sub
sub
cmp
sub
mov
mov
push
iret
pop
xchg
mov
mov
push
popf
adc
mov
sti
jbe
pop
popf
push
aaa
pmaxsw
out
int3
pop
mov
add
test
push
jo
addl
dec
adc
or
fidivs
ret
int
clc
or
stos
loope
add
and
pop
loope
jae
pop
cmpsl
mov
xlat
enter
xchg
in
test
adc
ja
leave
js
cmp
sbb
lods
xlat
bound
push
mov
or
out
test
or
out
int3
and
shr
mov
mov
fsubrp
hlt
pop
xor
icebp
daa
mov
cmp
mov
mov
shl
add
sbbb
subl
cmpsb
cmp
addr16
jno,pt
xchg
cmp
dec
push
dec
push
push
and
pop
cmc
adc
jb
add
sti
push
xchg
aaa
scas
movsl
notl
mov
rcrl
aaa
xchg
xchg
outsl
or
pop
cmp
push
out
sub
mov
hlt
sbb
jbe
fldenv
xorb
dec
stos
or
dec
adc
ss
cmp
cmp
push
cmp
orb
neg
imul
mov
out
test
mov
or
ljmp
cmpsb
rcrb
loope
sub
xlat
xchg
and
shrl
push
loop
cmpsb
imul
addl
xor
fucomp
cmpsb
mov
adc
adc
lds
test
cmpsb
es
mov
mov
mov
outsl
inc
lods
inc
jbe
in
leave
xlat
dec
pop
fcomps
mov
es
inc
ljmp
call
inc
push
aaa
sti
in
add
cmc
rorb
popf
aas
pushf
movsl
data16
and
add
add
lods
mov
xlat
inc
jno
nop
adc
mov
aad
add
pop
mov
pop
clc
jns
ficomps
xchg
scas
cltd
mov
inc
int3
mov
xor
pop
dec
and
stos
and
clc
mov
jbe
fs
xchg
psrlq
stos
xchg
sub
jb
lds
dec
mov
or
shll
dec
icebp
xchg
fcmove
test
fiadds
sbb
xor
test
mov
hlt
mov
subl
xchg
das
mov
dec
adc
pop
pop
pop
mov
lss
jb
xor
sub
or
dec
push
ret
dec
jecxz
mov
lock
shll
data16
pushf
scas
mov
pop
ljmp
cmp
idivl
or
sti
popa
and
pop
out
cmpsl
or
xchg
push
insl
movb
inc
pop
enter
stc
lods
cmp
sub
bound
ret
jo
cmp
xchg
aad
xchg
pop
cmp
je
std
hlt
stos
jge
pop
popa
add
xchg
lcall
jne
sbb
sahf
adc
clc
pop
stc
or
shl
push
cmp
sbb
cmp
sbb
jne
dec
addr16
inc
insl
xor
jae
fsub
dec
mov
stos
pop
les
mov
jecxz
xor
shr
in
sbbl
mov
std
inc
mov
sbb
push
clc
sbb
pop
pop
lods
inc
jecxz
cmpsl
mov
stos
aam
xchg
xchg
jno
push
ss
inc
sub
insl
test
and
sub
ljmp
call
dec
inc
xchg
sbb
enter
movsb
xor
xchg
mov
sub
rorl
scas
cli
lcall
inc
icebp
jne
hlt
push
out
pusha
loope
loope
cmp
xchg
cmp
pop
dec
daa
aaa
fsts
icebp
mov
repz
jo
gs
push
shr
jg
in
fiadds
add
push
dec
mov
ficoml
stos
pop
int
insl
cmp
data16
gs
and
test
popa
sub
in
mov
lahf
pop
repnz
inc
mov
leave
pusha
add
adc
cwtl
mov
mov
les
sub
adc
out
outsb
sub
dec
aad
das
mov
popf
sti
gs
ss
ret
pop
loopne
xchg
sub
daa
cmp
ja
fdivp
sub
rol
ret
imul
js
mov
jle
fistpll
push
inc
inc
out
jne
inc
dec
xlat
jge
and
dec
add
lret
sub
mov
dec
sbb
sahf
std
pop
aam
add
inc
enter
int
fwait
mov
sbb
popf
adc
mov
dec
push
shlb
ss
outsb
and
push
dec
push
dec
xor
in
push
aam
shlb
std
xchg
push
repz
xor
dec
dec
das
mulb
push
xchg
cmp
push
cmp
mov
inc
mov
insb
add
sub
or
sbb
imul
in
jnp
sbb
loop
popa
leave
add
adc
cmc
addb
push
and
loope
mov
jmp
cli
push
les
push
aaa
call
pop
mov
out
cld
insl
push
and
sub
pop
lds
sbb
pop
add
jo
arpl
enter
dec
aad
icebp
pop
rcl
imul
or
sbb
mov
fwait
in
enter
mov
test
jecxz
mov
je
stos
push
add
mov
sbb
testl
or
dec
xlat
and
mov
xchg
lods
dec
and
ja
adc
inc
aam
test
mov
cltd
in
lcall
arpl
inc
aaa
add
loopne
data16
dec
mov
cld
mov
int3
jecxz
addb
ror
pop
add
loope
sub
xrelease
push
push
je
insl
shr
push
inc
lds
js
enterw
xbegin
sbb
mov
out
pop
icebp
jo
mulb
or
mov
dec
insl
xor
fildl
inc
dec
popf
add
inc
sub
inc
inc
daa
mov
mov
jle
mov
into
test
xchg
test
fucomip
sti
call
inc
gs
push
aam
out
fisubrl
insb
push
inc
mov
jge
test
ss
sbb
mov
fcmove
cmp
ret
cmpsl
bound
movaps
inc
adc
rcrb
popf
sahf
jnp
daa
daa
inc
pop
scas
fwait
or
shlb
popa
jo
jp
ret
outsl
insb
andb
mov
pusha
add
mov
inc
and
out
add
adcl
imul
add
mov
ret
insl
sbb
cmc
test
sbb
push
out
and
icebp
cmp
in
aas
fiaddl
loop
or
push
xor
cmp
mov
int3
aas
outsb
popa
jmp
jmp
inc
fistl
pop
insb
js,pt
icebp
xchg
cmp
jmp
inc
call
jl
pop
jecxz
xchg
loope
jb
adc
bound
enter
std
mov
dec
mov
lea
andb
das
jge
cmp
mov
addr16
or
outsl
shrl
jae
in
inc
and
cwtl
dec
scas
std
xchg
and
jns
ljmp
pushf
repz
pop
inc
test
fdiv
xor
jle
sbbl
loopne
xchg
inc
or
or
mov
dec
lahf
mov
std
popa
stos
dec
in
lds
mov
xchg
cmpsl
and
repnz
cmp
xchg
ret
or
cmp
mov
mov
fsub
jns
sbb
pop
popa
std
or
imul
ret
popf
xor
pop
xlat
jb
pop
fsts
dec
cmp
mul
call
movsl
and
inc
push
leave
dec
insl
shrl
cltd
mov
lret
pop
jl
dec
popf
jb
ret
movsb
rcl
pop
xor
nop
mov
iret
fstpt
sub
push
pop
cmp
sbb
pusha
or
cmp
in
mov
or
push
pop
push
xor
xchg
push
dec
mov
inc
fwait
mov
sub
sub
dec
jo
hlt
xchg
adc
push
shrb
sub
push
add
dec
xor
aas
stos
xchg
dec
jecxz
sub
gs
loop
shl
adc
mov
add
push
out
pop
xchg
shrb
pop
adc
rorb
testl
inc
jmp
inc
sub
jns
loop
sbb
inc
fisubs
stos
jne
jns
out
xchg
jbe
shr
dec
or
push
inc
xchg
imul
js
loope
icebp
fwait
adc
mov
xor
or
ds
and
cli
inc
dec
sub
push
and
lret
mov
lods
inc
and
aam
mov
bound
mov
test
or
shl
stos
fcomp
outsl
jb
incb
xchg
imulb
pop
add
cld
mov
cmp
push
ret
sub
out
or
in
mov
fs
jnp
cmp
jl
aad
and
xchg
sarl
in
lcall
cltd
sbb
in
cmp
pop
stc
in
xchg
fdivs
add
sbb
dec
loope
mov
mov
rol
mov
daa
fmulp
ficoml
sub
xor
dec
xchg
pop
xchg
sub
dec
arpl
aam
mov
mov
sub
out
test
push
mov
iret
call
mov
nop
or
pop
push
cmpsl
cmp
push
lods
xchg
jb
dec
test
adc
pop
nop
jecxz
lods
xor
lret
adc
dec
sbbb
push
pop
movsb
fbstp
push
testb
jno
repz
cmpsl
sub
mov
mov
xchg
mov
idivb
lcall
movsl
in
lods
mov
pop
rol
jle
adc
sub
leave
lea
cmp
rol
push
and
fcoms
lret
nop
jg
in
adc
inc
test
ret
sub
movsb
mov
mov
fdivr
xchg
and
nop
xor
inc
ss
or
es
cwtl
jnp
or
sbb
jle
add
shlb
gs
sbb
mov
xor
and
ljmp
inc
mov
xchg
sbb
or
repnz
xor
fs
fistpll
shll
outsl
cmp
pop
inc
icebp
scas
adc
xchg
lods
into
mov
stc
cmc
fnstcw
mov
pop
jnp
scas
sub
xorb
pop
incb
sub
insb
das
adc
inc
mov
pop
mov
mov
sbb
fmull
cmpsb
pop
cs
int
jg
adc
push
and
mov
inc
xchg
or
lea
mov
cwtl
in
or
mov
xor
cmc
loopne
rcll
push
out
mov
xchg
pop
mov
jbe
outsb
jbe
sub
les
fs
imul
mov
ljmp
aam
dec
adc
test
roll
or
fimuls
push
xorl
fnstenv
jo
sahf
pop
fcoms
scas
pop
xlat
repz
and
loope
pop
mov
lret
ja
popa
push
or
aad
jnp
mov
mov
add
sarl
add
imul
scas
and
rorl
fnstcw
and
sub
xchg
fstpl
jae
lret
call
dec
outsb
hlt
mov
mov
cli
gs
iret
testb
lcall
fildl
pop
addr16
fstpl
pop
insb
cmpsl
mov
test
ficoml
add
inc
xchg
ret
jbe
sbb
push
inc
pop
sub
jne
jecxz
cmpsl
pop
popa
jnp
jb
or
adc
lods
fmull
adcb
cmp
rcl
lcall
mov
push
dec
aaa
clc
jl
xor
jle
mulb
push
xchg
ss
aaa
mov
aam
mov
push
ret
shll
enter
imul
and
push
mov
mov
loopne
int
pop
cmpsl
xor
adc
jl
je
out
inc
xchg
push
lods
das
jnp
cwtl
movsb
adc
jne
dec
pop
jg
xchg
and
mov
mov
inc
inc
and
cltd
sahf
rcl
xorl
xor
movd
jmp
push
push
mov
cli
adc
pop
movl
test
pop
inc
jo
add
mov
cltd
icebp
push
int3
mov
dec
iret
xchg
nop
xlat
lret
cmp
xchg
pop
shr
repnz
out
pop
dec
out
aam
add
out
outsb
add
pop
push
sbb
aam
xor
subb
loope
push
xor
mov
je
cmp
fadds
dec
flds
aaa
and
xchg
loopne
in
jbe
aaa
test
adc
sub
shl
test
cmp
cmp
nop
ret
data16
mov
fstl
hlt
pop
mov
push
add
xchg
sub
xchg
scas
mov
inc
loopne
cmp
shlb
pop
lea
ret
loope
insl
and
inc
mov
inc
out
mov
movl
mov
mov
jmp
flds
test
push
jnp
stos
inc
jl
mov
jp
pop
jle
push
mov
test
pushf
xor
pop
ret
xchg
pop
or
or
fists
jge
jmp
lock
pusha
int3
in
cmp
adc
loopne
push
popa
cmpsl
ja,pn
stos
xor
cltd
cmp
stos
xor
es
dec
leave
xchg
jno
xor
push
dec
fs
jno
stc
gs
sub
sbbl
test
nop
push
test
dec
jle
inc
jecxz
mov
aas
cmp
out
outsb
add
or
cs
punpcklbw
inc
fmull
arpl
daa
add
les
xchg
rcrb
mov
ror
push
mov
push
mov
jbe
push
add
push
stos
rsm
shlb
mov
movsl
scas
and
sbb
stos
insl
fwait
xor
lock
lods
dec
mov
popa
jns
push
cmp
call
cmp
in
fwait
or
xor
lock
dec
pop
out
nop
loopne
mov
push
mov
jb
mov
mov
mov
push
inc
cmpsb
je
repnz
cmp
frstpm(287
outsl
loop
jno
ds
addb
std
mov
push
test
scas
and
xlat
ret
fnsave
push
mov
inc
mov
or
sub
mov
mov
iret
cmpsl
push
je
imul
cli
dec
pop
mov
jnp
cltd
lock
mov
fdiv
int3
mov
inc
int3
and
jae
loop
lds
dec
add
or
xchg
jl
dec
hlt
jns
dec
testl
mov
mov
inc
loope
jle
lahf
lret
xchg
scas
and
add
in
push
sbb
xor
xchg
out
dec
jmp
adc
and
inc
movsl
xor
sbb
jo
pop
xchg
pop
adc
add
enter
in
lock
lret
xor
xor
xor
imul
pushf
cli
add
dec
mov
inc
push
dec
mov
adcl
repz
ret
pop
imul
js
jno
add
adc
fs
or
inc
test
xor
jmp
push
cmc
xchg
aam
sbb
jne
or
loop
inc
ss
js
test
cmp
mov
mov
movsl
mov
jo
incl
xchg
jae
subl
lahf
daa
xchg
mov
sub
js
loopne
inc
xchg
fidivs
jo
jg
jnp
jg
sbb
outsl
cld
pop
lahf
pop
mov
shl
cmp
cwtl
xchg
cmp
popa
and
mov
fcoms
sub
adc
mov
and
fimull
xor
test
cmp
mov
inc
jmp
or
insl
add
fwait
cmpsl
je
into
nop
jno
dec
or
sub
loop
out
ret
mov
push
cmc
adc
aad
xchg
adcb
daa
inc
xchg
jae
das
sub
mov
inc
stos
cmp
cmp
out
sbb
stos
sahf
or
ffreep
cld
push
pop
aad
add
and
insl
add
daa
mov
xor
arpl
mov
or
jmp
sar
dec
pusha
lea
movsl
je
inc
gs
shr
dec
pop
xchg
mov
daa
call
mov
sub
mov
cli
pusha
xor
pop
sub
vcmpps
out
mov
cld
imul
dec
icebp
dec
mov
sbb
dec
sub
lret
sbbl
adc
or
adc
pop
sahf
or
cmp
mov
and
sub
jmp
dec
pop
scas
jle
push
movsb
dec
test
mov
mov
push
std
jg
addr16
pop
mov
loopne
mov
fcomps
imul
popa
inc
fldl
cmp
andb
push
out
mov
int
xor
jne
or
movsl
push
adc
shrl
push
mov
push
cli
jb
arpl
sbb
pushaw
and
xchg
ds
inc
sub
xchg
pop
stos
xlat
inc
popf
test
rorl
sub
mov
sub
shll
shl
in
or
in
sub
and
std
xchg
ja
sarb
cwtl
sbb
leave
test
ds
cmp
in
in
in
out
mov
andb
sub
sbb
pushf
rol
std
stos
xchg
push
cli
pop
in
outsl
xchg
icebp
enter
insl
fisubs
jae
sub
ds
mov
shll
xchg
jecxz
add
add
cwtd
test
xchg
test
in
xor
cmp
and
std
dec
xor
not
ss
mov
mov
mov
outsb
xlat
aas
dec
stc
ds
aas
mov
movsl
mov
mov
int
les
fistpl
or
dec
aaa
into
jg
dec
in
push
jmp
in
xor
pop
cwtl
out
js
and
popf
add
movups
test
loop
cmc
dec
outsb
rorl
scas
clc
out
push
in
fldcw
je
push
mov
or
jmp
mov
es
in
xlat
mov
mov
clc
lret
out
mov
mov
pop
sub
movsl
roll
imul
outsl
in
cmc
loopne
cmp
divb
mov
fiaddl
xor
clc
jp
adc
cmp
scas
mov
pop
or
inc
movsb
fcoml
imul
mov
jnp
fsubp
cld
orb
adc
cmpsl
add
cs
and
fcompl
mov
fcomi
adc
les
gs
dec
push
or
cmp
or
pop
xor
adc
inc
or
pusha
pop
insb
gs
mov
mov
in
inc
mov
cmpsb
jo
movsl
and
jg
add
dec
cmpsl
or
jge
aam
add
cmc
lock
xor
cltd
fs
scas
push
lea
ja
add
inc
lea
enter
insl
jmp
add
dec
xchg
xchg
push
hlt
dec
in
add
inc
cltd
push
into
pop
ljmp
hlt
inc
adc
cmp
dec
imul
cmp
jno
sbb
mov
push
cmp
inc
mov
mov
push
inc
inc
lret
lock
lock
cmp
aaa
xlat
inc
fmuls
pop
pop
lock
mov
cwtl
adc
mov
or
lret
mov
mov
in
cld
jb
cmp
outsb
pop
inc
int
mov
inc
inc
lcall
push
inc
mov
pusha
mull
into
jo
ret
cli
xchg
fninit
subb
xor
mov
out
andb
and
fnstsw
mov
mov
pop
arpl
xchg
mov
loope
or
scas
push
push
enter
lods
adc
arpl
mov
in
mov
sbb
test
and
bound
andl
cmp
dec
nop
inc
inc
xor
jns
xlat
dec
dec
jbe
jnp
lods
sar
shll
ret
mov
repnz
shll
imul
ret
jg
jge
movsb
mov
out
lcall
test
arpl
fidivl
in
jge
imulb
cmp
mov
sbb
fwait
xor
fdivr
shll
xchg
or
lea
mov
inc
data16
mov
xor
cltd
dec
shlb
adc
js
lods
and
iret
bound
inc
xor
xor
popf
lods
out
and
insb
xchg
popf
xchg
sub
cmp
stos
js
fstpt
lods
test
shrl
lods
jg
fidivs
push
iret
loope
lcall
mov
xor
dec
cld
pop
lahf
cmp
pop
insl
or
cmp
fs
inc
int
popa
fmull
popf
shll
pop
imul
jbe,pn
aam
inc
packsswb
adc
outsl
loope
sbb
add
jnp
fadds
and
dec
aas
cmp
icebp
cmp
adc
cmp
rcrb
and
pop
insl
xor
mov
sahf
xchg
test
movb
push
jecxz
push
rcl
jg
sub
aas
lret
xchg
adc
jnp
movsl
imul
pop
cmp
lahf
cmp
insb
mov
jle
inc
inc
lods
pop
xor
shl
mov
lret
mov
mov
movsl
sub
scas
or
inc
fistpl
mov
popa
stos
stos
pop
faddl
mov
in
inc
cwtl
testl
add
cltd
outsb
test
jb
and
mov
stos
mov
aaa
mov
test
ss
imul
cmc
sub
dec
aad
sub
jp
lods
orl
pop
cmpsb
pop
mov
jl
int
jns
in
add
push
xor
sbb
sbb
fwait
mov
test
mov
mov
mov
mov
in
pushf
xchg
mov
mov
adcl
loopne
loope
cs
iret
sbb
das
ljmp
dec
lock
aad
mov
ljmp
in
lret
or
dec
mov
jbe,pt
push
mov
xor
lret
ffree
enter
xor
mov
mov
jl
cmc
test
mov
add
cmpsb
and
ljmp
call
outsb
add
add
xchg
cmpb
or
jns
or
mov
push
add
add
dec
cltd
adc
fildll
lret
cld
insl
nop
jnp
lcall
adc
mov
inc
pusha
sbb
mov
and
add
mov
push
xchg
es
push
mov
ret
adc
ret
mov
dec
cmp
shr
fistpl
dec
fisttps
jo
push
out
fistpl
mov
and
daa
dec
jmp
movsb
xchg
aad
cmc
push
shll
sub
mov
cmc
sub
paddq
pop
shrl
adc
aad
xor
sbb
std
dec
mov
out
arpl
es
rcll
adc
popa
inc
sbb
mov
xlat
cltd
aas
outsb
ret
stos
sub
sub
pop
jg
sti
es
xchg
push
push
xchg
scas
out
int3
imul
mov
push
push
jo
jle
inc
bound
or
into
shll
mov
fwait
xchg
inc
negb
mov
pop
jle
xchg
jnp
sub
xchg
mov
shl
popf
jge
es
stos
xchg
cmc
inc
popf
push
xchg
add
sbb
mov
rclb
sub
repz
sub
sub
inc
mov
pop
fists
fmuls
int
mov
dec
or
xchg
sbb
dec
cli
scas
lock
bound
jmp
ljmp
repz
test
inc
dec
push
sub
clc
cmpsb
adc
sub
adc
dec
pop
xchg
cmp
xor
inc
stc
ja
loop
mov
pop
push
leave
punpcklbw
mov
sub
movsb
in
ret
sbb
clc
add
xor
bound
shrl
lret
ja
fbstp
ss
aas
aaa
hlt
push
jnp
xorb
adc
jl
inc
es
add
pushf
push
cmp
mov
pop
push
cld
jl
bound
add
sbbl
dec
inc
inc
aas
je
adc
push
and
jle
stc
pop
insb
cmpsb
out
jl
fmul
sub
cmpsb
mov
xchg
je
jg
add
daa
lds
mov
fs
shrb
inc
jecxz
call
push
mov
mov
jb
pop
movsb
or
jne
push
jne
mov
cld
xchg
hlt
or
sub
adc
pop
sub
and
mov
push
bsf
jno
mov
clc
shrl
ja
cmp
out
sahf
mov
push
jno
mov
push
test
cltd
stc
xor
pop
jmp
out
mov
xlat
mov
fwait
das
inc
les
jmp
and
shll
call
lahf
mov
push
mov
dec
dec
or
and
lahf
insb
mov
mov
jge
into
fnstcw
pop
out
cli
jmp
xchg
popf
lds
popa
xchg
or
adc
adc
lds
imulb
gs
mov
ss
test
sub
dec
xor
mov
cmp
push
or
xchg
negl
mul
sbb
inc
cld
cld
xchg
das
pop
notb
addr16
xor
mov
push
mov
mov
cld
fdivs
outsb
pop
loop
inc
xchg
jb
push
cmp
sub
rorb
push
movsl
mov
popa
jge
movsb
mov
adc
sbb
pushf
inc
sub
loope
out
enter
inc
fsub
in
and
stc
mov
lret
mov
inc
mov
out
or
ds
loopne
jo
sub
sub
stos
inc
cmp
and
pop
add
outsl
lods
lret
in
les
cmpsb
addr16
daa
repz
adc
rcll
dec
stos
mov
lret
pmaxsw
pop
pop
xorb
xor
cmp
and
cmpsb
cmp
lods
inc
ficoms
push
stos
aad
imul
in
adc
pop
repnz
push
call
fcmovnu
mov
lret
jle
cmpsb
cmp
sub
test
jl
push
pop
jl
xor
pop
dec
data16
cwtl
push
je
pop
hlt
addr16
xchg
mov
fwait
bound
lahf
data16
jbe
aas
jg
or
sub
inc
sbb
add
gs
lret
inc
inc
inc
je
out
pop
jnp
jno
mov
in
push
in
loope
xor
aaa
sahf
mov
dec
lock
pop
ret
push
and
loopne
scas
mov
inc
lret
pop
clc
mov
or
sub
jno
movsl
cld
cltd
and
push
xchg
gs
xchg
jo,pn
xlat
push
dec
jbe
dec
test
lcall
lret
cld
and
adc
adc
mov
fistpl
add
jp
into
and
inc
mov
push
jno
add
xchg
jb
lcall
adc
and
subl
rcrl
cmp
pop
xchg
pop
adc
stc
xor
addr16
stc
xor
xchg
dec
pop
les
jbe
mov
stos
xchg
scas
fcmovnb
and
sti
xor
rcr
mov
inc
adc
xor
lret
pop
mov
loope
cmc
adc
inc
lods
cmp
fwait
xor
mov
and
rcrb
add
dec
movsl
add
xor
inc
test
sub
clc
inc
ret
pop
jbe
or
pop
sbb
jno
js
mov
mov
test
cltd
aam
cmp
xchg
push
in
das
jo
lret
lods
jns
sub
mov
out
inc
arpl
mov
mov
adc
insb
xchg
push
mov
pop
push
mov
testl
jl
movsl
dec
and
pusha
add
es
push
icebp
je
and
shrb
sbb
fimuls
lret
push
jb
gs
movsl
cmpsl
pusha
add
dec
add
aad
dec
xchg
or
jne
adc
repz
idiv
or
push
or
pusha
aam
int3
loopne
mov
out
mov
iret
cwtl
insl
jbe
out
xchg
pusha
mov
sbb
mov
xchg
dec
or
jg
ret
pusha
clc
cmpsl
scas
cmpsb
rclb
xchg
dec
dec
jb
xor
cmp
ret
xchg
cmpsb
mov
lods
add
fmuls
icebp
shr
aas
dec
jo
out
ficomps
inc
or
jae
cld
xchg
call
arpl
xor
jne
mov
jle
popa
pop
mov
flds
lcall
xchg
sti
xchg
enter
inc
lock
mov
jne
add
out
test
idivb
add
mov
dec
and
test
jns
push
push
fisubl
mov
mov
shrb
push
loop
pop
xor
xchg
mov
sti
sbb
push
mov
fists
add
mov
and
dec
pop
push
shll
mov
fidivrs
imul
push
fcmovu
jbe
push
jne
push
iret
add
rorl
popa
xchg
data16
insb
add
repnz
in
dec
mov
adc
icebp
mov
fnstsw
mov
jl
push
das
sub
je
xchg
sub
xchg
cmp
int
insl
fdiv
in
das
outsb
mov
hlt
out
mov
xor
arpl
js
and
ffreep
ret
popa
add
dec
xor
mull
push
lahf
xchg
daa
cmpsb
repz
pop
or
lods
decb
and
mov
pop
stos
xchg
mov
sbb
ret
lret
cmp
push
add
pushf
dec
mov
cmp
and
out
xor
xchg
mov
xor
inc
aaa
adc
xor
sub
push
jb
jle
adc
fmull
sbb
xor
sti
cmp
push
out
insb
orb
repz
pushf
push
nop
sub
add
add
cmpsb
and
cs
push
scas
inc
das
adc
adc
mov
clc
mov
mov
inc
push
call
push
inc
pop
aaa
dec
mov
mov
dec
and
rol
dec
xor
ret
test
scas
and
cli
inc
into
outsb
mov
adc
pop
cmp
jecxz
testb
add
shll
push
dec
stc
movsb
je
or
mov
jb
inc
xor
in
cmp
jge
sbb
loop
xchg
sbb
ss
out
ss
push
push
xchg
pop
dec
jl
push
cmpsb
or
out
ja
adc
lea
test
mov
add
outsb
jb
dec
pusha
or
lea
in
and
outsb
push
inc
rcll
jnp
lea
pushf
cmpsl
shrl
mov
les
scas
lret
ficoms
jmp
cmc
jne
call
push
add
or
scas
cmp
loopne
test
jb
int3
push
dec
sar
repz
daa
cmp
aam
mov
hlt
jg
cmpsl
cmc
ret
leave
mov
pop
cli
popf
cmp
push
or
movsl
dec
pop
popa
lods
xor
lods
cmp
fdivs
lea
test
cmc
pop
in
test
aas
push
in
jo
mov
inc
push
je
dec
mov
inc
sbb
cmp
rolb
sahf
fcoms
and
fcoms
push
test
out
pushf
dec
jp
insb
pop
out
insl
and
mov
outsb
and
sbb
movsl
addr16
in
cmpl
sub
lcall
mov
mov
dec
sti
inc
aas
bound
xchg
loop
stc
or
aaa
aas
cmp
sub
mov
inc
xor
fsubs
xchg
shll
adc
mov
stc
pop
ja
fs
mov
icebp
in
pop
sub
and
orl
push
mov
gs
bound
mov
clc
sub
jmp
fmul
repz
out
and
add
out
and
pop
jmp
mov
rcr
iret
xor
add
je
jecxz
jp
sub
cmpsl
push
add
enter
imul
push
push
adc
aam
out
inc
pop
push
lea
push
mov
xor
movsb
push
jle
adc
cmpsb
cmp
in
dec
les
cmp
out
ret
adc
cli
adc
lea
or
mov
std
xor
fwait
insl
stos
dec
pop
aam
fisubrl
shl
sub
imul
adc
sub
mov
adc
mov
push
cld
js
push
push
jae
stos
and
das
ret
daa
mov
fdivrl
outsb
call
and
cmp
idiv
mov
jns
jmp
dec
lea
cmp
aad
fstpl
push
movsl
mov
mov
push
outsb
sarb
in
sbbl
add
pop
pop
jmp
jne
hlt
andb
outsl
push
push
lods
mov
xor
and
adc
push
push
lds
mov
repz
aad
std
ret
lock
mov
hlt
shr
cmp
cltd
stc
cmp
scas
mov
loopne
sub
sub
jle
push
inc
aam
xor
inc
repnz
sahf
gs
outsb
adc
xchg
and
mull
dec
pop
test
test
inc
lods
cwtl
das
fistps
and
mov
ret
cmc
mov
cli
mov
jbe
add
xor
push
fcmovnb
xchg
cmpsl
sbb
insb
adc
or
mov
add
cli
jae
cmp
adc
pop
xchg
sbb
push
jae
adc
sbb
jb
sbb
mov
inc
inc
jne
cmc
inc
sbb
jge
mov
add
jbe
push
repz
pop
sahf
inc
fs
xchg
sub
sbb
mov
cmp
decl
add
into
fmull
inc
in
jmp
fs
or
jnp
insl
iret
bound
add
out
cltd
xor
addr16
mov
int
rcr
ljmp
and
call
jmp
pusha
imul
cltd
outsl
pop
adc
jne
test
mov
fisubs
outsl
cmp
adcb
ret
cwtl
in
jns
mov
xchg
cltd
es
xor
jmp
or
or
mov
test
jp
movsl
addr16
and
mov
popa
enter
adc
jl
pop
mov
and
inc
sbb
aam
fwait
ret
or
adc
aaa
jl
dec
inc
repz
jnp
cwtl
into
insl
sbb
pushf
scas
mov
repz
cs
push
inc
loope
inc
pop
es
jo
shlb
pop
jle
fucomip
pop
cmpb
mov
bswap
inc
cmpb
gs
dec
push
pop
jl
mov
les
in
imul
in
cld
dec
call
mov
icebp
ror
test
add
mov
addl
lret
push
es
pop
jne
mov
dec
push
sbb
xorl
shlb
hlt
pop
fwait
ret
ret
jnp
es
nop
cmc
pop
push
and
mov
sti
jne
mull
mov
lock
cltd
cmp
cmp
mov
icebp
fbstp
scas
inc
sub
pop
jne
notl
mov
fidivrl
jae
test
outsb
and
inc
pusha
mov
sub
lods
imul
and
or
cmp
pop
push
lods
mov
shr
stc
repnz
js
mov
push
call
icebp
xor
ds
movsl
xchg
addr16
jge
imul
lock
movsb
jecxz
sbb
cmp
cmp
lods
aas
dec
fidivrl
inc
popf
pop
popa
inc
xchg
adc
addr16
pushf
insb
and
push
cmp
hlt
fimull
fldl
rolb
cmp
inc
xchg
idiv
cmp
mov
pop
xor
loop
pop
cmp
add
mov
aaa
lret
jge
cmpsl
xchg
insl
mov
sbb
gs
in
lods
cmp
sub
or
add
xchg
mov
adc
clc
sub
jg
notl
daa
loop
filds
mov
idivb
sbb
add
mov
jle
cmp
jo
adc
xchg
hlt
sbb
jae
out
ja
hlt
int
cs
push
aam
cmp
jmp
dec
lcall
or
push
arpl
mov
jne
inc
out
or
and
iret
push
mov
xor
xor
scas
pop
mov
xlat
test
push
mov
stc
push
es
leave
xor
rcl
cld
jae
loop
xchg
daa
repz
xchg
or
xchg
sub
pop
cmp
and
dec
dec
jbe
cli
jne
and
loope
cmp
icebp
movsl
in
xchg
dec
jo
loope
ss
loopne
test
push
dec
push
int
sub
sub
lcall
sbb
cmp
outsb
sub
xchg
std
into
sub
nop
xor
cmp
aaa
mov
inc
clc
jae
pop
aam
push
or
jecxz
mov
pop
sti
dec
ss
push
pop
test
xchg
jne
out
sub
outsb
push
jb
pop
jne
inc
movsl
lods
mov
push
pusha
jbe
outsb
inc
xchg
scas
test
es
push
xor
jmp
aas
inc
mov
sahf
inc
adc
push
adc
cmp
jb
test
stos
sbb
mov
mov
mov
and
adc
inc
in
mov
cmpsb
in
out
pop
nop
sub
pusha
jne
dec
ds
cmp
mov
cld
mov
adc
dec
lahf
adc
fiaddl
adc
mov
cmc
push
dec
pop
mov
jne
sbb
aam
sarb
sbb
jl
push
inc
popa
mov
mov
shlb
add
lds
shll
repnz
outsl
cmp
call
jne
ss
into
fldt
cltd
test
and
jne
jl
cltd
cmpsl
scas
jns
push
lods
push
sbb
sbb
rolb
imul
aam
mov
or
nop
aad
or
inc
js
jne
sub
pop
adc
mov
jbe
stos
arpl
sbb
push
mov
sbb
lods
les
jnp
mov
into
int
mov
mov
sbb
idivl
or
and
push
divl
insl
ljmp
in
or
adc
mov
and
push
lret
cmpsl
repz
imul
hlt
pop
inc
ljmp
mov
dec
jmp
adcl
cs
xchg
cmp
imul
cmp
or
mov
xor
aad
push
shl
nop
add
cmp
push
cli
inc
popa
or
popa
cmpl
push
jbe
lret
pop
in
mov
fidivl
xchg
scas
scas
loope
lret
sbbb
mov
pop
loop
hlt
cmp
and
pop
imul
mov
jmp
jecxz
xchg
jl
cmc
out
jbe
add
cmc
dec
sbb
inc
mov
rorl
imull
mov
dec
mov
push
out
pop
fs
push
and
xchg
pop
sbb
mov
jmp
ss
pop
sub
cmp
jb
adc
cmp
andb
mov
xchg
push
mov
and
lds
jne
cmp
xchg
sbb
push
lock
clc
add
cld
stos
mov
ljmp
ljmp
jle
fsubl
les
not
and
loopne
das
xchg
xor
add
jg
test
mov
push
xlat
mov
sub
daa
inc
inc
dec
test
je
adc
sub
aas
lahf
xorb
daa
push
pop
stos
xchg
stos
cltd
mov
int
adc
cmp
mov
xor
sbbl
jg
mov
repnz
stos
ljmp
jb
adc
mov
xor
mov
push
xor
jns
cmp
inc
add
es
cmc
scas
dec
dec
xor
push
mov
aad
das
push
in
test
add
movsb
gs
scas
add
jns
adc
push
jo
jecxz
and
mov
js
jmp
and
mov
or
pop
lock
mov
scas
pop
std
call
outsb
fistpl
add
insb
push
insb
dec
stc
push
hlt
pop
mov
ds
incb
push
inc
push
xchg
out
ljmp
inc
push
das
mov
mov
xor
movsl
and
popa
push
push
jns
pop
xor
ljmp
push
arpl
adcl
in
jo
clc
fldt
lahf
popf
and
xchg
leave
mov
lahf
jne
sbb
stc
jbe
inc
push
out
dec
leave
xchg
and
add
jmp
lret
or
lret
xchg
fwait
mov
xor
adc
cltd
push
sbb
xor
les
daa
aas
stc
stos
xor
sub
rcrb
test
cmc
inc
cmpsl
push
xchg
ret
pop
sbb
or
jge
pop
scas
cmp
out
xchg
pop
cwtl
dec
sbb
inc
pop
inc
insl
and
adc
push
push
and
popa
in
push
aas
fisubrs
in
ljmp
pop
ljmp
mov
inc
call
or
inc
cmp
mov
rcll
out
adc
jmp
sub
dec
add
cwtl
jecxz
pop
adc
and
inc
arpl
cli
cmpsb
adc
rcrb
mov
add
xor
push
jne
xor
mov
fldt
jno
adc
jns
icebp
push
push
xorb
push
add
iret
lods
inc
add
dec
jecxz
mov
mov
sbbl
fcoml
mov
mov
and
mov
pop
and
stos
xor
mov
mov
stos
xor
lock
cmpps
nop
fdivrp
je
rolb
fiaddl
call
call
inc
lods
mov
pop
push
sub
sbb
sbb
outsb
loop
lea
adc
mov
add
test
pop
pop
sbb
aad
and
push
notl
jae
movsl
ret
inc
pop
jp
lret
insb
adc
pusha
cmp
outsl
or
xchg
pop
mov
xor
das
std
mov
bound
shlb
sub
icebp
icebp
daa
mov
push
lock
rorb
xlat
push
mov
dec
aas
mov
mov
or
divb
fidivs
jns
inc
xchg
push
and
or
pop
lret
add
arpl
mov
clc
inc
movsb
jp
adc
mov
shlb
ret
pop
jne
xchg
clc
mov
scas
mov
outsb
loope
xchg
push
and
xor
test
das
es
add
fisubl
lods
cmp
les
aam
lret
shl
insl
out
hlt
inc
xor
shrl
jo
call
mov
fwait
es
xor
fistl
scas
inc
dec
push
fldcw
pop
push
mov
add
out
xor
aas
push
cmc
xor
xchg
sbb
inc
adc
dec
ds
inc
pop
adc
das
mov
cmpsl
mov
adc
mov
mov
andb
stc
mov
enter
mov
out
stos
inc
loopne
adc
xor
push
jae
xchg
nop
add
pop
bound
xchg
add
pop
xchg
pop
dec
xlat
divl
dec
call
cmc
jle
add
lahf
push
ljmp
jb
adc
int3
sahf
jno
and
ss
inc
xor
adc
in
cmp
je
cmp
mov
push
popa
cmpsl
outsl
jns
or
adc
and
xor
cld
clc
sbb
xchg
pop
or
pop
adc
xor
pop
pop
push
scas
test
pop
icebp
enter
insl
loopne
sub
mov
mov
stc
or
inc
pop
scas
jnp
mov
stos
push
in
fnsave
fsubrp
addr16
pop
cltd
out
gs
fucomi
and
ja
js
test
and
rclb
sti
pop
and
push
stos
and
loope
fstps
sub
gs
inc
pcmpgtb
push
lahf
dec
iret
jecxz
out
fsub
sarl
cmp
push
rolb
cmp
int3
cmpsb
sbb
mov
and
xadd
mov
dec
scas
or
jg
mov
in
fwait
or
int3
push
ljmp
call
xor
jnp
sahf
cwtl
inc
add
jle
and
mov
mov
push
add
mov
cwtl
or
pop
or
adc
es
ljmp
loop
adc
loope
xor
and
frstor
mov
aaa
call
fldl
sub
adc
sub
pushf
xchg
dec
mov
sahf
xor
mov
push
or
adc
addr16
les
loope
and
fildl
repnz
mov
clc
lock
sbb
dec
arpl
adc
xlat
outsb
fs
loop
test
push
cmp
ltr
sti
adc
das
rcrb
push
jbe
pop
inc
iret
loope
sub
add
add
xchg
adc
lcall
cmpsb
cmp
cmp
repz
pop
or
and
xchg
xchg
xor
jp
negb
sbb
xchg
xor
mov
xchg
dec
les
lcall
pop
hlt
stos
lods
lods
sbb
syscall
sbb
pushf
and
cmpsl
mov
scas
and
jmp
nop
xorb
cmc
clc
jae
jnp
mov
and
popa
filds
cmp
xor
push
in
test
push
test
mov
or
sub
sub
subl
inc
pop
and
and
adc
frstor
push
fdivs
clc
dec
shrl
imull
add
test
inc
push
mov
push
data16
outsl
sahf
lret
cld
outsl
add
std
sti
push
fistl
cmp
sahf
ss
or
mov
scas
in
js
xor
lcall
outsl
jno
leave
jle
pop
mov
pop
mov
jae
iret
movsb
andl
add
popf
cmp
cmp
push
test
mov
pop
add
loopne
addb
xor
lahf
xor
inc
mov
outsb
addb
jo
shlb
imul
push
adc
jae
xchg
movsl
jo
pop
xlat
dec
sbb
xor
aad
jb
sbb
adc
push
iret
out
sbb
cmp
mov
mov
into
inc
dec
pop
hlt
cmp
or
out
cmp
out
xchg
stc
neg
add
fwait
shlb
icebp
mov
jo
les
mov
pusha
divl
dec
xchg
and
jg
aas
shlb
inc
cmp
mov
mov
add
push
mov
inc
bound
ds
sub
test
push
loope
je
or
inc
mov
je
xchg
push
outsb
mov
xor
ror
push
imul
iret
loope
sbb
adc
movsl
cmp
mov
cmp
ret
loope
xor
lahf
push
jp
iret
data16
cmp
clc
int3
pushf
ds
sar
jno
xlat
rorl
js
cmp
repnz
mov
jp
xchg
fs
rolb
out
jbe
mov
push
dec
notb
nop
rcll
mov
cmp
pop
jge
mov
inc
push
jg
int
cmp
stos
dec
cmp
aas
sub
xchg
call
int
and
jbe
fcmovnb
sub
mov
and
das
sbb
insl
fucomi
push
hlt
mov
shll
adcb
pop
popf
mov
push
subb
push
fdivrs
loope
cmp
inc
data16
sbbl
or
mov
push
jo
js
cmp
mov
sahf
jle
xorl
push
add
add
sub
stc
pop
adc
sub
subl
pop
repnz
iret
fcomi
icebp
sahf
in
test
adc
cmp
add
push
xor
mov
xor
dec
inc
out
std
mov
xor
test
adc
nop
sbb
dec
sub
sbb
aas
pop
icebp
sbb
cmp
xchg
dec
cmp
lcall
lcall
jnp
xor
mov
mov
and
gs
push
repz
sbb
sub
enter
sbb
loope
pop
mov
add
aas
jae
inc
lea
xchg
outsl
scas
xchg
xchg
xchg
pushf
jecxz
and
aaa
adc
fwait
push
mov
sti
lahf
mov
in
xor
cmpb
ss
aam
jne
inc
imul
gs
fistl
nop
inc
xor
push
aad
sbb
cld
push
inc
fnsave
leave
cmp
shl
cmpsb
int
in
test
sbb
cli
mov
sub
pop
add
inc
dec
loop
add
ljmp
xor
and
xchg
xchg
scas
add
mov
push
mov
scas
fs
mov
pop
lods
fsubrs
pop
jnp
into
sub
dec
cmp
mov
rolb
sbb
into
xor
outsb
rcr
clc
cmpsl
cmpsl
jne
dec
mov
pop
cmpsb
lock
xor
add
fucomp
push
mov
jno
adc
cmp
mov
adc
in
push
mov
jle
add
jmp
lock
xor
je
adc
loope
pusha
sbb
and
pop
cltd
cmc
mov
lods
movsl
cmp
xchg
and
sti
inc
xchg
jmp
pop
pop
pop
cmpsb
aas
imul
andl
dec
ds
adc
dec
loop
outsb
bnd
imul
inc
loopne
nop
daa
repnz
sbb
jnp
aad
fisubs
imul
push
inc
pop
jno
es
fcompl
cmpb
enter
add
or
mov
loopne
frstor
lcall
mov
cmc
arpl
dec
add
popa
pop
sti
add
inc
and
jne
pop
sbb
and
cmp
test
and
fsubs
dec
push
sub
cmp
or
leave
push
jo
notb
nop
mov
inc
mov
adc
or
mov
fidivl
sbb
rol
sub
out
gs
sub
out
jle
loopne
push
mov
sbb
rcrl
pop
daa
inc
cmpsb
fstpt
test
jae
arpl
pop
mov
jmp
xor
add
mov
mov
pop
push
push
adc
push
or
lods
mov
mov
and
xchg
ss
fmuls
fs
cli
int3
lea
mov
xor
mov
push
lds
inc
ja
lock
sbb
mov
add
lock
aaa
xlat
xchg
or
sub
mov
mov
test
mov
mov
mov
lods
shlb
dec
adc
nop
pop
in
pop
lahf
push
aam
sbb
fwait
pop
out
mov
in
sti
push
flds
push
cmp
inc
inc
repnz
lret
pop
inc
add
fsubrp
jmp
sbb
in
mov
pop
movsb
out
pop
push
or
cmp
jmp
mov
xor
push
out
test
ret
inc
mov
lea
xchg
mov
out
outsl
add
lods
mov
je
sbb
lea
sbb
sbb
lcall
mov
or
push
mov
in
mov
pcmpeqw
push
ss
xchg
movsl
lods
dec
shll
sbbb
lods
shlb
loopne
mov
lret
push
adc
push
into
shrl
lods
pop
test
add
push
std
cmc
stos
or
js
mull
adc
sbb
clc
fidivrl
pop
cmc
mov
push
pop
lret
pushf
add
decb
ret
cli
push
cmpb
inc
icebp
inc
push
daa
mov
xor
fimull
mulb
mov
jne
sbb
xchg
mov
sub
sbb
stos
les
pop
jno
xchg
adc
ret
addr16
inc
dec
mov
jp
leave
jmp
sbb
sub
sub
jne
sahf
std
xor
sub
xchg
xchg
in
xchg
sbbb
and
inc
pop
in
push
clc
ss
das
inc
mov
mov
xchg
push
jmp
sarl
push
pop
jne
push
test
vunpcklps
loop
repz
mov
shlb
pop
sbb
adc
lock
loope
cmp
cli
hlt
bound
mov
adc
das
cmpsb
enter
jo
sub
in
adc
xchg
ja
xchg
ljmp
nop
pushf
jl
push
shrl
gs
jmp
ja
sbb
int
sub
and
sub
push
loopne
jp
rol
pusha
aas
ja
dec
sub
mov
stos
sbb
sbb
std
test
repz
mov
sub
enter
hlt
flds
add
dec
dec
lcall
xchg
xchg
push
orl
jo
mov
push
fists
sub
pop
scas
cmp
in
xchg
stos
mov
xlat
xor
or
shll
sbb
push
ret
in
xchg
es
leave
in
add
dec
or
or
mov
repz
sub
addr16
ficoml
js
iret
push
hlt
popa
jle
addr16
push
jmp
xadd
inc
jb
inc
xlat
push
out
imul
jmp
outsb
sbb
jge
ret
sub
fwait
jb
adc
clc
into
pop
pop
jb
sbbl
push
std
xchg
loopne
jns
mov
sbb
push
sub
cli
test
inc
push
js
add
fisubrs
lods
lods
inc
add
je
inc
popf
mov
gs
add
test
nop
fwait
push
dec
mov
add
dec
ficompl
mov
iret
repnz
and
ret
sbb
das
icebp
and
jo
push
xchg
je
pusha
sahf
or
insl
rclb
enter
sub
add
mov
sbb
xchg
xor
inc
adc
fidivrs
mov
shr
cltd
mov
popa
fistpl
addl
pop
out
mov
aad
cmp
pop
push
fbstp
or
mov
push
clc
decb
pop
ja
int
dec
adc
lods
rcl
loopne
inc
xchg
jno
sti
in
add
jmp
lcall
jl
insb
in
pop
decb
dec
cmp
xchg
jl
fmull
inc
es
push
pop
daa
outsb
xchg
je
push
pop
je
inc
popa
and
sbb
dec
es
cltd
dec
dec
nop
push
mov
push
mov
hlt
out
test
dec
adc
lahf
ret
dec
mov
popf
insl
sub
fdivl
cltd
xchg
cs
ljmp
je
arpl
sbb
inc
jecxz
add
fidivl
jmp
mov
incb
fisttpll
cmp
adc
das
xchg
nop
mov
and
cltd
leave
out
inc
je
out
in
inc
lcall
and
mov
aas
xlat
ss
repz
pop
xchg
push
imul
arpl
lods
xlat
xor
scas
jns
adc
cmc
hlt
js
and
pop
and
insb
mov
xor
fdivrs
inc
fwait
pop
mov
lods
sahf
int3
and
mov
push
adc
cltd
xor
push
int3
fistpl
push
in
fwait
ljmp
xor
rcrb
pop
cmp
inc
fsubp
shrb
mov
shl
outsb
jge
leave
popa
pop
xchg
les
add
mov
mov
or
cmp
xor
arpl
nop
jnp
loope
movsb
into
adc
mov
aaa
fstps
sbb
or
lret
test
jge
mov
dec
stc
adc
xlat
rclb
test
mov
push
rol
loope
and
data16
or
and
or
sub
rcrb
fcmovu
and
fiadds
dec
fildll
pop
sbb
xor
push
push
fadd
int3
scas
rolb
lret
push
sbb
mov
push
sbb
or
jno
add
out
xchg
xchg
sub
ja
into
and
inc
xor
cltd
movsl
xor
in
lock
jg
pop
in
sbb
hlt
push
in
cltd
and
repnz
cwtl
xor
cmpsl
mov
pushf
cli
mov
clc
mov
leave
pop
pop
push
jne
adc
xchg
cmp
je
ds
sbb
dec
jb
jno
loopne
xchg
xor
cmpsl
dec
xchg
jnp
in
insb
cmpsl
test
add
adc
mov
xor
imul
icebp
shll
add
aam
movsb
jb
cmp
adc
testb
pop
cmp
cmpsl
aam
jbe
addr16
mov
shll
repnz
jae
lret
movsl
mov
mov
out
aam
loop
popa
test
sbb
and
jge
inc
xchg
add
xor
xor
and
or
shll
cs
or
popf
hlt
stc
push
mov
out
lahf
mov
sub
fstpl
push
mov
repz
mov
or
inc
loope
xchg
sub
dec
sbb
or
xchg
iret
pop
mov
cmp
divb
push
inc
mov
xor
or
repz
test
xchg
pop
mov
mov
mov
outsl
mov
leave
inc
mov
mov
and
fbld
dec
mov
leave
sbb
pusha
dec
jp
jl
fists
fildl
fdiv
inc
dec
roll
insb
mov
sbb
repz
mov
mov
cmp
and
push
stos
ret
inc
out
daa
lcall
sbb
xchg
xor
push
adc
lods
fstp
fmuls
pop
pop
jg
pop
mov
shrl
nop
js
pop
outsb
test
popa
mov
fwait
sub
xchg
insb
adc
stos
sahf
loope
mov
lret
mov
out
bound
into
ficompl
lret
std
lcall
jnp
imul
jno
test
in
into
es
outsl
ret
mov
adc
mov
pop
popa
mov
cmp
push
outsb
mov
pop
mov
inc
imul
shlb
cwtl
mov
add
out
and
dec
and
daa
jno
out
aaa
pusha
test
in
pop
imul
cmp
lcall
add
lock
xor
sarl
add
adc
mov
push
pop
add
btc
jge
xchg
js
addr16
movsl
fbstp
sub
in
mov
mov
dec
dec
arpl
popf
or
push
cmpl
fwait
lea
jge
and
and
pop
divb
inc
jo
fisubl
mov
ljmp
test
outsl
adc
mov
mov
cmp
fwait
or
into
aas
inc
sub
push
adc
xor
push
jae
push
out
pop
fdivs
rcr
popa
sub
aam
int
mov
lret
out
dec
ds
push
ljmp
testb
into
adc
mov
and
les
arpl
push
in
lods
push
sti
sbb
sub
ror
push
in
cmp
in
int
cmp
fwait
mov
pop
icebp
jg
jb
pop
fdivs
add
ss
out
push
clc
xor
push
jne
mov
popa
sub
pop
pop
sub
test
les
fstpl
hlt
out
orl
into
xor
jg
sub
mov
lods
bnd
stos
jg
lret
cmp
mov
aaa
sub
xchg
stc
xchg
jno
sub
fiadds
xchg
pop
dec
cmp
mov
sub
jl
ss
or
push
dec
loope
test
loop
sub
add
push
divb
es
dec
dec
fstl
xchg
add
les
jno
stos
mov
ja
jge
pop
insl
in
mov
jmp
adc
lret
add
fsubrp
jb
shr
divl
icebp
scas
mov
jl
ss
pop
jle
lret
push
frstor
adc
xor
xchg
jb
dec
xor
adc
jle
insb
add
jg
fs
icebp
stos
aaa
sahf
mov
sub
adc
push
adc
orb
rorl
loop
sbb
adc
dec
mov
jmp
dec
cwtl
enter
xor
cs
and
sub
ds
mov
mov
pop
push
js
sahf
mov
dec
rolb
sbb
push
or
cmpl
add
inc
int
mov
stos
adc
into
pop
jecxz
mov
popf
mov
xchg
sub
push
imul
js
lcall
push
push
jecxz
inc
fdivl
xchg
fsubrl
popf
popa
ds
xor
in
mov
movb
push
ret
mov
lea
je
xchg
mov
jno
sbb
pop
test
inc
jge
das
movl
iret
fcmovnu
cmpsb
daa
inc
mov
mov
lock
lds
jg
push
mov
repz
sbb
roll
or
cli
cld
repz
ficomps
insl
adc
mov
cmpsb
xor
fwait
fs
jle
div
jbe
dec
sbb
dec
insl
mov
call
and
js
jp
icebp
outsl
out
ss
inc
jno
inc
test
ja
fiadds
popf
mov
push
shlb
push
shlb
iret
push
out
dec
jmp
es
stos
and
shrb
add
jbe
nop
pop
test
rclb
sub
lock
or
push
push
shrb
outsl
mov
test
xor
xchg
stos
or
lods
jmp
movb
mov
inc
adc
arpl
xor
mov
pop
fdivl
mov
cmpsl
ds
lahf
jnp
mov
pop
cltd
or
xor
mov
xlat
leave
xchg
adc
jg
scas
push
js
loop
mov
jmp
rcrb
or
shll
xchg
les
test
cmp
sub
cmp
ss
push
mov
xor
cli
addl
inc
mov
or
and
sti
xor
sbb
loopne
or
stc
divl
mov
xor
mov
push
lret
lret
stos
push
push
stos
mov
stc
lods
daa
xor
or
cmc
jge
and
or
mov
adcl
mov
icebp
std
pop
je
pushf
test
loope
ss
out
ds
iret
pop
and
dec
fucomip
or
mov
dec
pushf
cmp
into
test
mov
sub
idivb
out
rcll
in
add
mov
jge
lock
pop
inc
cmp
mov
cli
movd
clc
sbb
adc
loop
out
jle
xchg
cltd
jle
or
pop
jnp
out
lret
mov
icebp
int
mov
mov
ds
popa
dec
loopne
aam
insl
cmpsb
les
in
mov
cmp
jg
ffreep
daa
mov
or
mov
shll
dec
pop
sbb
pop
into
ja
xor
pop
or
iret
stc
or
mov
test
rcll
adc
dec
popa
mov
sub
roll
mov
xchg
dec
rcrl
or
imul
push
lods
cmp
sub
dec
stos
add
xor
aas
in
in
movl
int
mov
notl
ss
xor
out
lcall
and
mov
loope
sbb
or
movsl
push
sub
or
pop
adc
cmp
push
push
adcb
popa
cmp
sbb
jge
push
push
cwtl
mov
adc
fidivrs
jle
jae
fnstcw
lods
nop
mov
pop
jno
cwtl
in
jecxz
cmp
out
repnz
sbb
sarb
js
pop
pop
cmp
push
dec
dec
sub
in
sbb
cli
icebp
pop
cmp
jns
pop
aaa
ret
dec
loop
pop
aad
jge
xchg
dec
mov
add
mov
push
ss
pusha
ret
out
xchg
test
adc
mov
pop
negb
inc
dec
movl
out
mov
cwtl
out
xchg
js
test
xor
dec
lds
mov
xor
or
and
xorb
mov
dec
mov
fwait
jbe
fsubrs
popa
std
std
push
das
andl
pop
push
mov
sbb
rcrl
mov
shll
push
xor
push
add
cwtl
jmp
fistpll
out
mov
repnz
push
pop
and
jne
insl
adc
mov
jle
dec
cmp
popa
lods
adc
pshufw
cwtl
ficompl
adc
mov
jne
repnz
cmpsl
mov
push
addr16
jmp
icebp
movsl
insb
lock
or
or
mov
iret
ds
inc
mov
mov
pop
mov
pop
xchg
imul
lock
push
add
push
or
shll
test
movb
jg
daa
outsl
inc
test
insl
stos
movsl
clc
and
mov
dec
sub
adc
mov
jle
shlb
mov
inc
jp
jl,pt
stos
push
pop
jne
mov
out
shr
nop
adc
xor
movsl
dec
sbb
cmp
sub
loop
pop
jl
add
nop
mov
xor
push
out
mov
repz
mov
imul
std
mov
stos
ret
js
cmp
mov
pop
insb
xchg
sub
push
xchg
xor
nop
cmc
rol
xor
xchg
jecxz
adc
data16
jns
push
add
aaa
adc
movsl
cmp
ficoml
mov
or
push
gs
or
ljmp
in
popf
cmp
mov
je
pop
ds
pushf
mov
dec
movsb
mov
in
mov
sbb
cmpsl
adc
icebp
xchg
mov
xchg
stos
fstps
jle
ret
mov
test
sub
mov
push
push
push
mov
out
ffreep
int
arpl
mov
mov
sbb
and
push
ret
push
push
repz
into
push
adc
pop
jno
pop
inc
and
push
fwait
sbb
push
movsl
mov
das
pop
mov
test
pusha
pop
in
push
ret
or
lret
fucomp
sub
mov
ds
pop
ret
lods
outsl
add
lds
rolb
fwait
jns
mov
sub
stos
add
fwait
xchg
adc
aas
sti
xchg
jno
sub
fsubl
dec
sbb
stos
mov
hlt
add
leave
lods
in
inc
and
test
int
add
adc
testb
sar
jmp
cmpsb
jl
dec
cmp
and
sarl
dec
cmpsb
jecxz
loop
mov
sbb
inc
and
sub
das
cmp
lret
hlt
fwait
jno
outsb
add
out
mov
out
or
cmp
call
pop
mov
int3
pop
loop
and
mov
ret
add
adc
in
jg
mov
inc
push
sub
jmp
imul
push
push
outsl
stos
scas
iret
mov
xlat
adc
lods
loope
dec
dec
adc
cmp
sub
pop
or
bound
add
das
outsl
lea
or
mov
imul
movsl
cmp
rorl
movsl
or
push
cli
movsb
ja
sub
scas
daa
lds
adcb
aas
gs
test
pop
inc
shrb
das
sub
insb
fdiv
dec
mov
xchg
xor
xchg
lea
jne
das
rcrb
ds
push
loope
cmc
pushf
pop
lea
inc
outsl
cwtl
push
in
pusha
fldl
pop
insb
das
pop
dec
loopne
out
push
aas
cmp
dec
mov
mov
sub
and
sub
or
adc
pop
jb
xor
fimuls
ljmp
push
and
mov
xor
ret
div
cmp
push
jo
inc
jne
xor
jmp
fildll
or
xor
arpl
cmp
dec
ljmp
clc
push
jne
xor
clc
rorb
xchg
outsl
sub
mov
out
jo
jno
sub
sub
aad
shlb
lea
stos
rcrb
xor
jno
jnp
add
inc
pop
pop
xchg
lods
mov
scas
lea
sbb
mov
dec
movsb
popa
aam
dec
mov
pop
les
and
mov
mov
fistpl
xor
adc
or
pop
repnz
fistpll
sub
int
mov
dec
cmc
pop
js
adc
adc
in
call
or
pop
inc
adcb
jg
rcrb
cmp
or
int3
xor
std
or
pop
scas
pop
aad
ror
bound
pop
mov
mov
in
lds
testb
inc
in
sub
ss
daa
std
pop
or
sub
mov
push
or
in
inc
aam
add
mov
cwtl
add
popa
cli
or
cli
sub
cmpb
mov
sbb
xchg
xorb
pmaxsw
test
xchg
push
xor
pop
in
outsl
pop
cmp
hlt
and
pop
lret
adc
in
dec
in
dec
pop
push
pushf
pop
cli
lods
fbstp
sbb
stc
pop
scas
psubsb
cmp
mov
hlt
mov
stos
sub
push
or
mov
outsb
add
jbe
xor
push
jbe
fnstenv
popf
lods
jg
mov
mov
add
sub
outsb
loope
inc
sti
inc
dec
out
mov
lcall
in
cmc
decl
cmpsl
lahf
inc
dec
or
inc
daa
push
cmp
cmp
sub
jle
push
ljmp
adc
push
es
or
adc
aam
test
out
cmpsl
mov
sub
fbld
adc
pop
inc
ljmp
mov
out
dec
add
movsb
sbb
mov
repnz
xchg
cld
xchg
ljmp
sbb
jnp,pn
jl
es
dec
pop
mov
insb
scas
pop
sub
pusha
scas
loopne
inc
jle
das
addr16
pop
insl
xor
lcall
smsw
pop
fisttpl
mov
outsb
lods
daa
outsl
test
cli
subl
sub
xor
movsb
mov
adc
je
clc
lahf
adc
rcrb
push
jg
pop
adc
stos
mov
addr16
xchg
lock
faddl
dec
xchg
jne
sbb
loopne
lock
or
les
mov
sti
mov
sbb
inc
lcall
lods
mov
mov
fdiv
aaa
mov
pxor
cs
fisttps
add
outsl
rcrb
in
push
sar
rcrl
mov
adc
fildll
outsb
jnp
lds
dec
loop
sbb
les
imul
mov
or
cltd
ja
lods
inc
mov
and
aad
lret
cmp
clc
out
sub
sbb
mov
sbb
or
xor
xor
sbb
rcrb
pop
sbb
mov
filds
js
popf
in
pop
inc
pop
cmpb
push
adc
lds
cmp
jno
sbb
fstl
xchg
jge
jl
dec
popf
sub
das
fdivs
inc
pop
add
test
xchg
and
scas
fisubrs
pop
mov
lock
xchg
fldt
adc
dec
call
sub
ja
sbb
fsubrl
pop
rorw
pusha
mov
pop
fldenv
fsubr
mov
or
outsl
adc
ss
cli
push
sub
inc
or
in
mov
inc
or
xor
jmp
inc
call
push
push
mov
js
inc
testb
fsts
jae
dec
xchg
and
shl
xchg
jg
push
or
xorl
mov
fdivl
or
call
xchg
fdivl
inc
sbb
outsb
ds
mov
jge
shll
dec
or
sbb
imul
pop
mov
push
aas
dec
inc
std
cltd
jae
loope
loopne
das
mov
jae
adc
mov
and
cli
jo
push
lcall
push
movsl
pop
xchg
or
testl
pop
test
sti
inc
jne
data16
jnp
je
fildl
cmp
sbb
sub
cmc
mov
jmp
mov
ret
pop
int3
cmp
test
mov
shl
inc
es
mov
fildll
pop
test
lret
cld
rorb
mov
xchg
arpl
icebp
mov
and
sbb
in
jle
lods
addr16
sbb
lds
jle
nop
shr
sarl
dec
add
inc
push
popf
insb
mov
lahf
ss
push
popf
jmp
lea
mov
push
test
aaa
dec
fucomip
fnsave
fpatan
popa
cmp
cltd
inc
add
xlat
adc
pop
addr16
shlb
cmp
scas
push
mov
repnz
dec
mov
sub
xchg
push
dec
pop
imul
ret
cmp
jmp
sbb
inc
pop
pusha
lahf
in
sub
mov
jle
dec
inc
pop
or
fwait
push
out
cmp
pop
ss
push
clc
insl
call
xor
fidivs
mov
cmpsb
in
data16
xchg
push
add
fstl
stc
sbb
js
outsb
loopne
inc
sbb
xchg
mov
jge
sub
pop
push
or
popa
pop
out
xchg
call
aas
push
addl
popf
add
pop
fwait
mov
mov
cmpb
adc
movsl
xchg
jns
jmp
aam
mov
sbb
into
dec
jg
popa
sub
test
xabort
jb
aad
jbe
jmp
mov
jnp
pusha
and
adc
mov
jne
xor
pop
shr
jb
mov
jle
addl
call
dec
and
adcb
je
xchg
and
mov
cld
decl
les
push
das
loope
push
xor
scas
push
ja
in
pop
ret
xchg
adc
notb
daa
ror
push
mov
jmp
outsl
xchg
in
push
push
cld
push
adc
mov
jle
scas
cmpsl
insl
jecxz
mov
inc
scas
out
mov
sbbl
inc
push
jmp
jecxz
cmp
pop
xchg
push
in
and
lret
call
lret
pop
add
mov
je
pop
sbb
push
leave
mov
fsubr
sbb
cmp
imul
jne
pop
das
push
mov
mov
lds
insb
cltd
not
ror
movsb
mov
jecxz
pusha
ja
adc
add
shl
jno
and
cmp
mov
loop
outsl
inc
bswap
int
in
mov
inc
gs
xchg
push
scas
inc
movsb
pop
cmc
sbb
inc
int
clc
movsl
popf
mov
mov
mov
lock
jb
mov
gs
inc
addr16
sub
call
mov
xorb
ds
mov
out
movsb
sbb
push
push
bound
mov
in
jo
sbb
add
loope
repnz
xor
xchg
imul
push
fisubrl
fldt
cltd
mov
jb
add
sbb
inc
in
mov
push
pop
movb
idivl
testb
addr16
aaa
shrl
push
je
cmp
xor
pop
mov
loope
jmp
xchg
sub
hlt
inc
loop
jecxz
push
es
fdivl
test
push
jns
movsl
mov
jle
and
ss
or
outsb
mov
mov
dec
mov
insb
hlt
inc
sub
jne
mov
inc
xchg
xor
into
in
int
sub
cmpsl
out
push
and
int
jecxz
sar
out
imul
cmp
xchg
movsb
outsl
dec
xor
test
popa
sbbl
aaa
push
cmp
inc
inc
pop
movsb
cmp
outsl
out
jg
ds
cmp
lea
mov
adc
or
pop
addl
inc
movsb
loopne
inc
xchg
bnd
addr16
outsl
cltd
int3
negl
dec
ds
mov
cmp
out
daa
test
shlb
xor
push
mov
xchg
and
mov
sbb
mov
cmp
ds
mov
inc
mov
jne
jmp
int3
and
iret
insb
fldenv
adc
push
and
mov
outsl
sub
test
lcall
clc
lds
ja
jno
aad
push
mov
pop
add
loop
push
push
pop
xchg
ljmp
add
aaa
jns
sahf
sub
lret
lock
pop
lock
push
roll
push
mov
lret
lret
bound
aam
sub
mov
pop
icebp
xchg
adc
jp
rorb
mov
xchg
pop
jnp
repz
dec
pop
add
aam
and
sub
jmp
ret
mov
add
add
and
les
fsubs
nop
xchg
aam
sarl
mov
imul
icebp
cli
dec
jne
sbb
shlb
imul
call
ds
jl
sub
jecxz
sbbl
mov
dec
mov
jl
xor
ljmp
fisubs
ljmpw
std
je
cmp
push
adc
pop
ds
sbbb
xchg
insl
stc
data16
xchg
fiaddl
pop
push
and
add
jp
fsubs
jo
xchg
jbe
and
in
dec
lret
cmp
inc
pop
ljmp
sub
xor
out
lret
pop
pushf
and
and
flds
push
push
cmp
mov
pop
jmp
arpl
mov
xchg
call
mov
jne
mov
dec
mov
fisttpll
pandn
adcl
dec
or
adc
sub
sub
in
dec
insb
imul
dec
in
xchg
ror
int
push
icebp
pop
xchg
and
push
imul
mov
and
dec
pop
rolb
insl
loop
ja
ss
cmp
xlat
lock
insl
add
lea
aad
stos
stos
xchg
ds
popf
shlb
mov
mov
int
in
repnz
lds
mov
jmp
ffreep
movl
ljmp
mov
ret
xlat
cmp
dec
scas
incl
sbb
out
jns
and
cmp
aas
dec
cmp
dec
xchg
mov
xchg
loope
jecxz
push
into
mov
mov
inc
fstpt
insb
sub
mov
lock
mov
bsf
imul
jl
inc
or
add
popa
clc
testb
scas
lcall
sarl
add
ret
pop
js
push
add
iret
adcl
xchg
fidivrs
inc
imul
addb
test
notb
cmpsb
xchg
addr16
adc
fcoml
push
inc
push
stos
mov
add
push
rolb
lods
insb
lcall
pop
aaa
mov
loopne
fdivs
int
add
mov
pop
adc
popf
or
mov
es
pop
inc
repnz
clc
mov
sub
insl
add
mov
bound
push
test
aaa
push
int
pop
mov
jb
mov
bndldx
push
pop
xor
add
or
fbstp
mov
jbe
push
lcall
out
push
sbb
mov
cmpsb
mov
std
mov
inc
movsl
xchg
mov
add
fstp
cwtl
icebp
mov
in
test
cmpsl
inc
add
jns
shlb
flds
testl
mov
mov
sbb
loope
mov
sbb
mov
pop
push
cmpsb
push
xchg
xor
push
sbbl
jl
clc
lods
in
lret
adc
jne
inc
cmpsl
and
rorl
mov
mov
mov
adcb
jge
cmpsl
pusha
fidivs
pop
ds
lahf
pop
inc
mov
movnti
fs
push
and
and
xor
xchg
pop
push
in
pushf
ss
mov
sbb
jge
jbe
xchg
test
mov
aam
pop
in
cmp
adc
loope
loope
std
mov
sti
sbbl
outsl
inc
pop
data16
lret
inc
xor
add
fimuls
inc
fnstcw
pusha
in
or
adc
sarb
add
xchg
outsb
lock
call
xor
mov
push
jmp
xor
jp
sahf
fs
xchg
dec
loop
lret
sti
sbb
xor
rclb
in
push
fidivrl
iret
push
clc
inc
or
mov
popf
pushf
inc
xchg
mov
sbb
push
xor
sbb
movsl
data16
scas
cmp
and
mov
push
jb
aam
push
scas
lea
jecxz
hlt
lret
fiadds
sbb
call
push
mov
in
mov
jno
pop
fadds
addr16
loope
lock
push
movsb
cld
push
jns
out
test
outsb
xchg
sbb
mov
in
jg
lret
mov
aad
sahf
inc
int3
fs
pop
jns
imul
aaa
repz
mov
lock
pop
cmpsb
in
cli
in
push
xor
xchg
fcoms
adc
push
xor
rclb
xchg
fidivs
stos
shlb
sub
push
rclb
mov
dec
arpl
jnp
into
pop
xchg
pusha
xchg
scas
cwtl
add
sar
xchg
call
repnz
stos
and
js
adc
xchg
scas
jne
jmp
and
mov
lds
aaa
mov
mov
inc
cmp
jg
iret
push
or
das
push
testb
lahf
in
movsl
call
sub
sbb
sub
mov
add
je
divb
or
inc
adc
in
loop
dec
mov
in
pop
fdivl
push
push
inc
cmp
and
cmp
add
pushf
mov
in
xor
jo
lods
movsl
cld
pop
scas
mov
in
inc
ret
daa
mov
mov
inc
add
xchg
outsl
mov
les
cmp
lahf
shr
xchg
stos
mov
addr16
add
sbb
in
mov
out
cmpsl
aam
sub
or
adc
arpl
cwtl
testl
into
popf
xor
and
ljmp
jge
cltd
and
clc
adc
scas
enter
pop
lcall
dec
lods
imul
fists
enter
dec
shll
rcrb
shl
aaa
cmpsl
mov
leave
jmp
dec
fsubs
int
push
pop
mov
pop
xchg
scas
mov
push
adc
push
push
aad
push
aas
cmp
out
pop
fdivrs
mov
notb
or
insb
sbb
adc
adc
ss
adc
cli
cmp
cmp
sub
or
jns
scas
inc
andb
xor
cmc
js
in
arpl
push
jp
cmpsl
push
enter
and
int3
int3
jo
sbb
xchg
test
testl
divl
dec
and
push
mov
clc
dec
cld
or
push
ja
inc
adc
xor
scas
jno
test
jmp
or
lahf
sub
cmp
cmp
clc
sub
mov
cmp
outsl
sbb
adc
jne
jb
test
cmp
jae
lods
ljmp
pushf
jmp
fbstp
sub
inc
sbb
cli
fs
inc
insl
fistps
dec
shld
pop
into
xchg
cld
jl
cmp
lret
and
push
mov
outsb
popf
imul
push
mov
add
and
ja
push
push
pushf
inc
xor
stc
test
lods
hlt
popf
loopne
dec
xchg
jp
jg
xor
adc
pop
pop
test
scas
call
xor
cs
outsb
adc
mov
mov
or
mov
out
ljmp
incl
cmp
push
pop
pop
cmp
push
faddl
adc
fisubl
insl
outsl
nop
mov
mov
dec
cmp
loop
dec
mov
mov
outsl
inc
enter
cld
stos
mov
cld
popf
inc
rol
sbb
leave
dec
into
dec
dec
jge
leave
push
pop
js
scas
cmpsb
cmc
lret
add
push
mov
fmull
lret
or
and
sub
mov
sbb
movsb
sub
sub
or
shll
sbb
inc
xor
js
mov
inc
mov
nop
pop
sarb
sub
mov
xchg
push
clc
cltd
push
cmpsb
dec
adc
pop
imul
sti
out
sahf
sub
stos
inc
sar
xor
push
jne
pop
cmpsl
loop
mov
jno
mov
enter
enter
jmp
xchg
cmpsb
xor
lret
or
add
fnstenv
mov
dec
add
mov
pushf
insb
push
addr16
xchg
pusha
out
xchg
jae
cltd
das
lahf
mov
rorl
std
ret
in
mov
test
dec
xlat
pop
push
sub
add
cmp
ljmp
push
in
orl
jno
pushf
sub
mov
push
movsl
add
in
loopne
outsb
sbb
inc
in
shlb
push
lcall
push
mov
jne
mov
xor
pop
in
shlb
pusha
sub
push
lea
lret
xor
ljmp
call
into
testb
pop
push
lret
add
mov
adc
xchg
repz
inc
rcll
data16
ss
dec
xchg
push
leave
insb
sbb
lock
aaa
andb
mov
popa
lahf
es
clc
stos
xor
pop
sbb
and
test
mov
xchg
mov
push
cltd
notl
shrl
mov
lods
xor
shl
cmp
pop
push
out
rol
xor
stos
gs
pop
shl
sbb
aas
outsb
or
mov
sbb
or
icebp
adc
ret
pop
hlt
mov
cmc
xor
popa
mov
jnp
lahf
adc
imul
jne
and
xlat
insb
xor
das
addr16
sti
subl
or
sbb
in
sub
jbe
ret
jno
jecxz
into
dec
popa
pop
lods
cmp
int3
jae
adc
mov
adc
mov
repz
sarb
rcll
fwait
or
and
daa
mov
add
rcrl
add
xor
pop
mov
jle
jbe
xrelease
mov
fimull
push
mov
int
xchg
sbb
test
mov
push
insl
test
or
jle
sub
sbb
inc
dec
loop
cmp
adc
cmp
inc
mov
ja
push
sti
stc
inc
sbb
inc
xchg
push
xchg
rcrb
or
jbe
dec
rcl
mov
and
and
inc
mov
dec
push
insb
sub
std
jo
ret
les
pop
mov
adc
repz
cmp
inc
jmp
mov
jmp
or
je
les
loopne
sti
and
lds
jno
add
mov
jbe
xchg
add
scas
dec
test
andb
cld
test
mov
push
push
mov
mov
test
ja
ljmp
daa
push
cmp
push
and
pop
pushf
scas
pop
addb
pushf
fldenv
mov
in
add
aaa
je
lretw
aam
in
and
cli
in
inc
push
sbb
fsubrs
push
jae
mov
inc
adc
mov
adc
outsb
mov
fcomi
adc
hlt
es
es
popf
dec
in
sbbl
les
call
mov
mov
ret
and
push
mov
cmp
ret
and
outsl
inc
repz
push
mov
jno
imul
jge
test
adcl
xchg
sub
jmp
sub
sub
fs
pop
repnz
push
or
or
mov
std
pop
aaa
or
int
adc
pop
adcb
push
inc
xor
bound
int
push
pop
subb
repnz
les
push
cwtl
dec
mov
fcompl
mov
insl
das
pop
out
mov
out
aam
adc
sub
dec
adc
test
sub
xlat
mov
leave
xor
ret
push
dec
sbb
pop
cli
mov
inc
sbbl
adc
aas
jno
imul
iret
xor
insb
fs
shrb
jb
mov
pop
andl
sahf
sub
test
out
rorb
lahf
add
jle
cmp
inc
push
insl
jne
cmp
test
fwait
xor
or
data16
or
lods
push
xor
adc
xor
or
popf
lret
and
in
xor
std
fisttpll
mov
jp
mov
push
int3
push
fidivrs
pop
and
ret
cli
shrl
ror
adc
lcall
cmp
inc
scas
jns
mov
lock
mov
jne
out
inc
cmp
xlat
xchg
pop
or
xchg
pop
and
pop
cmpsb
sbb
pop
aaa
xor
aad
rorl
add
sti
in
js
mov
dec
mov
jp
icebp
mov
mov
in
outsl
subl
ds
into
push
jmp
test
ds
in
push
out
add
sbb
inc
popa
sub
adc
mov
aam
in
or
nop
les
mov
sbb
leave
rcrl
stc
push
sub
xor
mov
outsl
inc
mov
xor
fnsave
dec
inc
les
xor
cld
dec
in
rdmsr
push
push
jns
inc
ds
das
mov
call
dec
negl
pop
mov
or
adcb
or
ljmp
sub
stos
aam
mov
das
leave
sar
pushf
stos
add
daa
mov
or
adc
aad
jne
into
sub
shll
dec
jae
or
insb
sub
arpl
adc
dec
and
or
aam
movsb
adc
aad
out
lcall
adc
iret
popa
push
add
cmp
sarb
adc
cmp
pop
inc
sbb
xchg
sahf
mov
xor
adc
inc
gs
fidivrl
fcom
lret
or
and
clc
dec
sbb
cld
push
xlat
popl
pop
add
rcll
xor
jbe
or
in
pusha
push
ja
push
into
pop
clc
lock
push
jo
dec
push
mov
ja
jg
xorl
popf
jle
cmp
sarl
mov
sti
scas
aaa
pop
push
fwait
addb
test
ss
push
sbb
dec
cmp
inc
mov
push
inc
inc
movsl
loopne
iret
jecxz
add
push
xor
xlat
or
cwtl
pop
mov
lcall
sub
or
pop
jbe
and
fistl
or
mov
xchg
lds
fimuls
in
mov
bnd
push
mov
fwait
xor
scas
mov
ja
enter
push
je
pop
out
push
enter
mov
fldl
jmp
popa
xchg
cmpsl
pop
adc
mov
dec
xchg
lret
and
enter
ret
push
inc
les
icebp
add
jl
out
xor
cmp
push
xor
mov
repnz
leave
sti
mov
cmp
ds
dec
sbb
movsb
dec
movsb
inc
jo
test
cs
leave
and
cmpsl
adc
inc
dec
pusha
jb
xchg
xchg
mov
push
cmp
lods
adc
icebp
mov
leave
andb
mov
cmp
fistpl
or
push
dec
cmp
or
fidivrs
mov
fsubrs
int
fistpl
insl
jnp
mov
inc
mov
dec
sub
ror
fldl
cltd
scas
rsqrtps
movd
je
sub
cwtl
dec
add
sti
imul
sub
cmp
mov
cmpsl
scas
in
cmpb
or
lret
clc
pshufw
inc
xor
in
aam
lcall
jmp
leave
imul
stos
mov
lods
mov
fldl
mov
jle
stos
inc
pop
mov
push
imul
ficomps
arpl
arpl
inc
in
jno
stos
push
mov
mov
dec
out
mov
insl
in
fptan
mov
jmp
rolb
pop
sbb
mov
dec
iret
sahf
cmp
lea
add
mov
rcr
jae
and
xchg
push
repz
sub
and
int
sub
fldcw
inc
pop
mov
es
js
inc
arpl
adc
jle
subl
adc
inc
fdivs
shr
jns
fiaddl
arpl
repz
test
pop
cld
add
sti
lds
push
inc
outsl
mov
xchg
xchg
pop
sub
xor
mov
rorw
mov
adc
inc
adc
inc
sti
loope
jmp
out
pop
or
mov
flds
push
mov
cmp
mov
sbb
fiaddl
leave
loope
loop
jae
es
leave
lods
rcr
stos
adc
out
les
mov
mov
jbe
out
test
dec
cmp
rcr
mov
mov
movsb
adc
cmp
dec
in
mov
pop
jp
xchg
sub
out
mov
jo
and
scas
inc
ds
inc
sbb
sbb
cmp
push
pop
popa
add
arpl
push
ss
in
xorb
dec
lds
push
cmp
push
shll
xchg
mov
pop
movsl
test
inc
int3
lret
sbbb
push
ja
and
jne
mov
xor
imul
xchg
stos
mov
std
xor
dec
aas
fmull
movsl
xor
ljmp
dec
fisttps
call
mov
or
int3
arpl
xchg
ljmp
rol
repnz
xlat
cmpsb
nop
sbb
roll
test
pop
nop
adcb
pop
fdivrs
adc
dec
outsb
in
ds
in
aas
dec
xor
cmpsw
loop
ds
add
mov
push
fisubl
or
xor
incb
clc
cmpsl
lret
ret
sub
pop
int
mov
jbe
pop
int
pop
mov
les
ljmp
push
dec
out
or
jl
mov
add
lcall
popf
pop
in
stos
ficompl
inc
fstpt
xor
je
pusha
xchg
adc
mov
and
and
and
fs
push
aaa
xchg
xchg
jno
xor
adc
xchg
sbb
sahf
clc
mov
sbbl
in
ret
mov
mov
aam
jge
inc
mov
adc
cwtl
aad
pop
jecxz
movsb
repnz
xchg
jge
scas
xchg
in
lods
std
xchg
ffreep
andl
ljmp
mov
pop
fistpl
iret
fdivrp
dec
mov
lret
lds
rcrb
mov
enter
icebp
out
mov
or
mov
push
lret
mov
and
notl
cltd
and
jb
mov
jnp
jnp
cmp
and
or
fidivs
jle
iret
pop
in
mov
dec
das
lds
outsb
push
pushf
dec
sti
sti
pop
xor
sahf
pop
add
pop
sti
xor
std
lods
inc
push
pusha
dec
enter
add
xor
push
popa
sub
out
cmp
xlat
lret
bound
cwtl
pop
sbb
dec
or
cmpsl
movsl
icebp
mov
xor
jne
jge
adc
in
lea
orb
lret
xchg
repz
call
cmp
push
push
loope
in
push
stc
or
and
out
adc
out
jg
pop
and
adc
xchg
test
mov
mov
jecxz
rcrb
neg
lds
sbb
push
insl
adc
loopne
rclb
sbb
add
mov
fnstsw
mov
dec
mov
int3
fists
popf
lcall
sbb
jmp
sti
imul
mov
pop
into
loop
repnz
es
mov
push
inc
sub
push
jns
fdivrs
push
xlat
test
cld
cltd
fidivl
mov
or
pop
dec
insl
shlb
add
adc
pop
dec
xor
lret
mov
cld
test
lods
xor
js
dec
ss
lcall
adc
jno
mov
mov
push
test
addr16
sub
add
push
addl
fs
cwtl
mov
sti
lock
sub
cmp
dec
add
jp
pushf
sbbl
xor
mov
imul
sbb
gs
sbb
ret
mov
insb
in
push
call
test
pop
mov
test
xchg
mul
cwtl
mov
push
mov
ljmp
mov
loopne
imul
push
sub
mov
or
cmp
add
fnstcw
ja
sbb
mov
add
out
pop
test
lret
mov
scas
mov
jne
jl
jb
leave
or
das
gs
inc
lods
inc
popa
int3
mov
mov
sbb
mov
and
cwtl
sbb
xchg
add
or
lcall
mov
imul
bound
cmc
sbb
out
mov
xor
in
add
into
popa
and
mov
dec
jp
xchg
daa
jne
push
inc
imul
sub
repz
push
inc
add
inc
lcall
and
cltd
popl
cmp
lahf
lret
add
int
cld
je
push
cwtl
movsl
arpl
int
fdivrs
nop
daa
fdivrl
ret
scas
and
test
clc
out
mov
fnstsw
daa
dec
push
add
add
std
and
xor
jl
lds
inc
pop
sub
out
jle
inc
mov
cmpsb
mov
lock
pop
push
ja,pn
mov
test
ja
xor
dec
xor
add
xchg
mov
call
ds
dec
out
push
in
lods
pop
sub
xchg
es
popf
cltd
out
loopne
fwait
xchg
sarb
jp
and
shll
dec
imul
daa
xchg
repnz
inc
push
inc
testb
xor
aam
enter
inc
loope
pop
notl
jbe
ficoml
or
fwait
mov
in
push
fsub
bound
jp
mov
dec
hlt
jo
iret
rclb
aam
insb
xchg
in
in
sbbl
jmp
and
mov
cmpsb
idiv
cmpsb
and
frstors
iret
adc
and
xor
xrelease
stos
jp
cli
add
and
xor
add
imul
ret
lock
cmp
adc
mov
mov
push
mov
jmp
sti
mov
stos
mov
and
pusha
cld
cmpsl
aas
push
jl
sbb
mov
cld
pop
je
stos
and
jno
shlb
xor
arpl
aam
stos
into
in
aam
stos
mov
lods
cmp
xor
lods
cmp
mov
loop
sub
jp
add
lea
stc
inc
push
sahf
inc
std
dec
pop
pop
cmpsl
sbb
cli
stos
mov
mov
fidivs
leave
fisubrs
jbe
mov
mov
sub
mov
xlat
push
sub
cmpsb
stos
push
cmp
sbb
arpl
shlb
cmc
mov
test
pop
mov
mov
pop
xor
hlt
andl
mov
movsb
jnp
or
sub
xchg
imul
adc
cmp
or
push
js
mov
and
shl
jl
in
xor
xor
and
idivb
int3
mov
pop
stc
jnp
push
dec
mov
inc
fimull
push
ja
aaa
push
jbe
xor
inc
sbb
adcl
adc
out
mov
pop
lds
push
push
mov
sahf
jns
shlb
ds
push
cmp
dec
stc
imul
pop
out
lahf
popf
bound
fdivl
push
popf
push
inc
popf
xor
das
call
fldl
push
rol
scas
test
nop
dec
mov
mov
fdivl
mov
addl
sbb
jl
cmp
fisubl
fs
and
xor
and
xchg
xor
stos
stc
into
push
pop
inc
fxch
xor
neg
test
jle
sahf
xchg
xchg
mov
mov
enter
ret
jae
mov
bound
roll
insb
cmpsl
and
cmp
sti
push
or
jmp
jns
repz
pusha
data16
push
out
mov
lret
and
or
sbbl
ret
xchg
sbb
pop
jp
das
inc
jne
push
out
mov
imul
mov
mov
movsb
popa
ljmp
mov
insb
mov
bound
das
arpl
xor
pop
leave
adc
and
pop
and
xchg
jmp
add
jnp
lcall
neg
mov
movd
lock
lahf
repz
int3
fidivs
sub
jb
mov
leave
lods
jmp
outsl
inc
je
test
mov
cmp
push
imull
sbb
mov
and
xor
cmp
shrl
aas
cmp
orb
enter
out
arpl
sbb
pop
adc
js
enter
mov
ret
fucomip
sbb
andb
movsl
fcmovnb
add
pop
in
sub
and
push
sarl
out
sti
in
sbb
notb
ja
dec
rcll
push
enter
daa
in
andl
xor
dec
cltd
and
xchg
pop
jge
sub
pop
into
sub
or
clc
xchg
lock
bound
fs
inc
hlt
push
mov
pop
ljmp
push
int
mul
sbbl
je
int
roll
jge
or
mov
mov
imul
scas
jo
pop
sub
clc
pop
inc
sub
mov
cmc
add
jns
gs
mov
scas
gs
dec
std
xchg
or
std
cmp
fldenv
out
js
cli
sbb
fistpll
cld
ljmp
mov
xchg
hlt
out
xor
push
fldcw
mov
js
popa
loope
xchg
push
cwtl
xor
repz
sar
cwtl
xchg
push
xchg
jb
and
mov
aad
dec
repz
xchg
mov
shll
out
mov
out
xchg
mov
cltd
popf
hlt
xchg
iret
cli
xchg
xor
cmp
dec
adcb
mov
jmp
sbbl
in
add
pop
jno
jge
lret
jmp
jg
scas
jo
xor
add
ja
lcall
scas
stos
orb
pop
inc
sbbb
jg
div
inc
hlt
jbe
jge
mov
inc
mov
and
push
in
mov
push
fisttpll
push
orb
xor
push
aas
aad
mov
cmpsl
inc
jle
mov
xchg
and
push
movsb
arpl
mov
or
stos
mov
popf
test
ret
xchg
or
pop
test
sbb
imul
xor
jo
negl
mov
mov
sub
fs
insb
out
frstor
mov
mov
mov
cltd
fstps
or
daa
call
in
pushl
jp
mov
call
push
add
testb
add
mov
jmp
and
push
xchg
sub
loop
popf
adc
repnz
int3
repnz
mov
xchg
add
cs
lret
test
icebp
cmp
dec
push
push
dec
pop
dec
mov
cmp
or
jle,pn
jl
les
cmp
xchg
cmp
lods
inc
jo
insb
sti
or
lods
subb
std
xchg
add
push
and
xor
popa
cs
push
roll
fcomps
scas
mov
test
pop
pop
cmp
sub
scas
imul
pushf
mov
mov
stc
jns
shlb
mov
xor
mov
in
out
test
mov
cwtl
incb
shrl
adc
cmp
pop
icebp
test
cmpsl
repz
filds
xchg
in
imul
mov
pop
aas
mov
cs
add
dec
push
xor
or
outsb
ds
mov
clc
add
xchg
stos
dec
xchg
push
hlt
cmp
addr16
dec
or
leave
xlat
sahf
aaa
stc
dec
push
and
in
adc
pop
push
adcb
push
or
mov
mov
push
jg
push
xor
in
xchg
push
ret
sub
addr16
jb
fldl2t
and
push
outsl
mov
inc
adc
jnp
add
bnd
ds
jg
add
mov
mov
pusha
jmp
daa
or
jecxz
in
out
nop
pop
cmp
cmpsl
das
scas
ljmp
mov
lret
push
pop
push
aam
pop
pop
cmpl
sub
xchg
pop
lds
cmp
inc
movsl
leave
pusha
adc
mov
jb
insl
pop
test
add
inc
arpl
jmp
pop
int3
or
stos
lcall
pop
loop
jle
std
lods
cmp
push
popf
add
mov
cmpb
cs
loope
enter
and
pop
cmpsl
aaa
in
aad
outsl
jge
call
jo
pop
and
xorl
dec
fsubs
mov
jmp
jge
lea
sbb
xchg
jge
in
repz
push
into
mov
xchg
loop
cltd
xor
or
mov
mov
insb
add
sarl
xor
cs
and
inc
test
int
push
pop
mov
add
jle
icebp
cmp
je
push
pop
loopne
out
pop
push
adc
jecxz
mov
jns
mov
jge
fcomps
jno
lods
icebp
hlt
push
and
pop
inc
mov
push
out
push
mov
cli
outsb
add
mov
fmull
mov
mov
dec
mov
dec
cmc
and
iret
gs
sti
sti
jns
subl
lea
std
mov
mov
push
adc
lods
mov
adc
repnz
fs
sbb
dec
adc
pop
outsb
jnp
fwait
divb
jbe
add
push
adc
and
mov
dec
test
cmp
xchg
dec
lock
adc
loope
inc
test
adc
sbb
xor
js
jmp
push
add
popf
dec
iret
xchg
mov
sub
sbb
sbbb
mov
ret
inc
aas
pop
xor
xorb
jno
cmp
xlat
xchg
pop
lahf
mov
add
add
ror
and
mov
sbb
out
pop
pop
daa
sub
orb
gs
mov
push
mov
aad
inc
shr
jb
fnstenv
test
xlat
es
inc
into
clc
mov
into
cmp
mov
sbb
imull
cmpb
test
lods
sbbl
or
sti
mov
outsb
call
cmp
xchg
dec
add
adc
lret
pop
mov
outsb
sub
clc
fiaddl
lahf
sub
mov
pop
out
or
sub
ss
xchg
sti
lret
in
icebp
enter
dec
and
inc
jmp
filds
inc
aas
or
dec
fistl
test
rcrb
fiadds
xor
inc
stos
pop
jp
shl
inc
outsb
cld
or
sub
std
add
out
xchg
mov
sbb
push
imul
jl
mov
pop
lcall
sbb
inc
roll
sub
mov
es
push
lods
push
pop
loop
mov
out
mov
es
xor
inc
int
cmp
out
push
jmp
cmp
xor
mov
fstpl
push
pushf
fsubl
jp
imul
or
scas
pop
inc
push
adc
into
das
mov
fstps
les
gs
cmpsb
call
jle
mov
and
insb
add
push
dec
xchg
popa
mov
out
les
mov
iret
mov
sbb
loope
lret
mov
mov
jne
xsha1
cmpsb
or
cmpsl
ja
xchg
jae
push
cmp
and
lahf
sbb
dec
out
sbb
mov
cmpsl
pop
push
repnz
sbb
cmp
add
mov
in
cmp
mov
adc
lcall
int
mov
or
pop
lret
bound
stos
cmp
cmp
xchg
pop
cli
xchg
pop
cmp
mov
cmp
inc
bound
jp
int3
incb
and
aam
add
jg
xlat
out
enter
test
add
sbb
xchg
mov
push
and
fimuls
adc
and
push
pop
and
clc
sub
or
loope
les
xor
cltd
xchg
popf
sbbl
cmpsb
jo
pop
lock
or
clc
ffreep
inc
pop
sbb
jge
js
add
ds
mov
mov
das
inc
jmp
bound
pop
out
movsb
addr16
sbb
mov
xchg
ficoml
fdivs
daa
xchg
scas
pop
out
xchg
cmp
into
xor
scas
push
xchg
addl
sub
into
popf
ss
aaa
insb
dec
mov
xor
test
inc
addr16
adc
sbb
outsl
adc
scas
inc
js
mov
outsl
lret
shll
push
push
aad
pusha
adc
mov
and
pop
sbb
aad
cmp
mov
jmp
repz
add
mov
ljmp
mov
fbld
lods
sub
jno
testb
ljmp
fcomps
push
inc
mov
ret
pop
test
mov
mov
pop
call
pop
cwtl
and
pop
adc
lcall
les
mov
pop
popa
imul
rcll
inc
xchg
mov
xor
insl
repnz
dec
xor
rorl
mov
fcmovnb
out
notb
adc
stos
inc
lods
inc
jo
cmc
ret
enter
in
fcomps
imul
ret
pop
stos
stc
mov
data16
sub
xchg
mov
sbb
jl
jl
dec
popf
inc
pushf
rorb
dec
jge
and
fcompl
loope
enter
mov
jl
or
daa
jbe
ret
addl
inc
dec
js
jge
pusha
notl
aaa
jle
je
sti
aaa
decl
fs
pop
cmp
mov
mov
sbb
rcll
or
je
cmp
inc
arpl
sti
cwtl
push
orb
lcall
inc
sbb
int
xlat
sbb
shlb
data16
in
loope
ret
jp
xchg
in
sbb
cs
or
cmp
adc
cmp
push
mov
pop
insb
ja
out
xor
inc
sbb
lock
sarl
pop
push
insl
add
inc
xlat
add
test
jp
lods
inc
sub
js
fisubrl
jge
clc
dec
shl
jno
ds
mov
xchg
and
dec
add
mov
mov
int3
insb
flds
mov
fs
xor
rcrb
push
andl
xor
jp
mov
jno
add
scas
pusha
clc
or
fcomip
iret
sub
pop
push
popf
xor
mov
gs
mov
cmpsl
xor
dec
or
sti
sahf
push
push
cmp
sbb
jecxz
movsl
lock
repnz
rep
jecxz
mov
push
mov
cmc
movsl
cmp
sub
fidivs
dec
rorl
and
lret
inc
push
push
push
or
cmp
shrl
lea
shl
into
insl
inc
or
ss
dec
lea
and
lods
cmp
jge
stc
push
inc
negl
fwait
daa
xchg
pop
call
not
rep
fists
shrb
in
adc
rorl
xlat
mov
hlt
stos
sub
data16
sbb
dec
fistl
out
iret
fmuls
push
in
shl
xchg
aam
sti
stc
rolb
pop
addr16
inc
mov
jg
imul
popf
jo
and
sar
pop
sub
loop
data16
into
jae
pop
and
or
mov
inc
test
mov
lret
movsb
fnsave
xchg
pop
or
pop
sub
xlat
cmc
cmp
scas
adc
scas
jne
pop
out
sbb
push
shll
aad
mov
in
clc
pushf
lret
xchg
pusha
xchg
sarb
in
fucom
incb
sbb
xor
push
pop
adc
pop
mov
clc
push
mov
fstpt
cmp
mov
loopne
pop
mov
data16
pop
stos
mov
or
and
mov
pop
cld
lods
and
call
repz
stos
test
es
lret
jae
pushf
outsb
in
pop
push
orb
or
mov
fnstenv
pop
mov
push
xchg
pop
insl
cmp
pop
mov
data16
xor
mov
sbb
push
push
or
jmp
fs
pop
jbe
lock
pop
rcr
adc
xchg
cmp
clc
cld
pop
xor
pop
pushf
test
push
insb
cmp
fwait
push
outsl
pop
add
mov
dec
add
es
pop
push
out
pop
xchg
inc
cmpsl
repnz
mov
popf
dec
pop
mov
mov
nop
add
pop
call
pop
xchg
loopne
mov
push
loop
lods
lds
jbe
test
cld
mov
inc
pop
mov
sbb
mov
movsl
rol
orb
add
pop
imul
cld
filds
or
data16
stc
pusha
adc
pop
sbb
ljmp
lret
sbb
bound
out
mov
mov
add
pop
mov
rcrl
add
add
xor
pushf
lret
ja
xchg
jno
xor
je
and
inc
jg
mov
xor
out
mov
repz
repz
xor
imul
fadd
push
ret
pop
pop
jle,pt
rcrb
insb
sub
dec
dec
and
fwait
jg
jle
mov
stc
sub
test
or
adc
sub
mov
mov
enter
fs
inc
and
ds
mov
adc
filds
imul
fs
in
shll
jnp
xchg
mov
lahf
ss
hlt
mov
shr
and
loopne
mov
pusha
add
sub
push
xchg
sbb
pop
jle,pt
out
xor
jp
xor
or
mov
fstps
ffree
push
jno
adc
inc
adc
ss
loope
int3
ror
inc
sub
xchg
dec
rclb
mov
adc
inc
fwait
xor
mov
mov
push
fsubl
inc
popf
insb
dec
sub
mov
pop
xchg
sub
sbb
push
sub
loopne
pop
pusha
jle
lret
outsb
pop
push
push
xchg
out
aas
sbb
xor
cmp
pop
enter
cmp
loop
adc
sbb
sub
inc
in
jg
jmp
aam
addr16
add
mov
sub
seta
in
mov
fisubrs
lret
pusha
sub
lods
push
lock
jecxz
sub
or
cs
add
mov
jae
in
add
mov
stos
adc
jle
xchg
push
mov
push
mov
adc
mov
or
add
or
add
dec
icebp
test
aam
sarl
shr
mov
pop
dec
test
pop
jb
jl
stos
jp
popf
lret
cld
add
push
sbb
dec
ficoms
andl
imul
mov
aaa
fisttpll
jp
int
dec
cmp
jns
xchg
stos
push
pop
decl
cmpsl
dec
dec
hlt
and
pop
mov
test
in
xchg
xor
lret
data16
lcall
hlt
clc
adc
cmp
and
xchg
and
push
bound
test
hlt
mov
movsb
out
mov
add
mov
icebp
inc
xor
cmp
pop
pop
testb
std
xchg
jbe
xor
aaa
xchg
sbb
in
outsl
push
lret
sbb
lcall
jmp
xor
fistpl
cs
lods
mov
rorb
sub
lret
loopne
test
in
fldenv
mov
sub
push
sbb
mov
and
mov
lods
xor
mov
mov
cmp
lcall
jb
xor
xor
call
in
popf
lods
stc
mov
or
enter
xlat
mov
inc
mov
mov
movsb
sbb
cwtl
pop
jl
mov
cmp
aam
stos
mov
mov
mov
dec
adc
xchg
pop
or
inc
and
lcall
sbb
into
orl
ret
pop
mov
sub
jo
inc
and
inc
shrl
lahf
jnp
cmp
out
jge
pop
hlt
imul
or
in
mov
cmc
out
lcall
inc
sbb
mov
xchg
sub
test
add
dec
cwtl
and
out
in
sub
into
lahf
xor
pop
adc
and
daa
mov
adc
adcb
jne
out
xchg
push
jge
jbe
lret
pop
int
nop
jmp
xor
repnz
pushf
mov
lahf
add
add
idivl
mov
fadd
popf
push
dec
cmp
bound
and
aaa
cltd
int
stos
adc
jmp
mov
xor
dec
movsb
push
mov
sbb
inc
out
mov
mov
cs
test
loop
sbb
jb
test
and
orl
jnp
fisttps
push
add
xchg
test
call
push
xchg
mov
push
or
sub
ficompl
sti
sub
outsl
outsl
xchg
movsb
inc
dec
lret
jo
inc
mov
repz
xchg
rorb
outsl
mov
dec
dec
inc
xchg
pop
gs
in
mov
or
add
sarb
lcall
cwtl
inc
xchg
xor
mov
cmp
mov
mov
aaa
leave
dec
jmp
pop
fwait
add
and
insl
push
data16
or
dec
jmp
jae
test
fistpll
xchg
movb
sub
iret
lret
inc
sbb
jae
adc
dec
sbb
popf
js
notl
mov
roll
icebp
fisttps
push
add
aad
sbb
push
mov
sbb
xchg
bound
sbb
pavgb
loope
pop
aaa
push
and
ret
fbld
pusha
push
jp
movsl
cmpsb
xor
repnz
into
into
das
adc
mov
das
adc
and
push
or
bound
test
lods
in
insb
ret
cs
adc
and
dec
aad
add
push
pop
fwait
stc
int
inc
test
adcl
add
mul
jo
fistpll
dec
dec
mov
popa
int
pop
fldenv
mov
mov
mov
shll
cs
add
hlt
and
addr16
dec
scas
cmp
push
inc
push
pop
inc
nop
jp
out
scas
ds
stc
adc
pop
lret
jbe
pop
lock
mov
add
push
adc
popf
imul
sbbl
inc
fcmovbe
push
cltd
sub
cltd
cmpsl
in
inc
aas
fwait
loop
cmp
test
cs
sbbb
lock
enter
xor
hlt
stc
and
or
mov
add
mov
stos
repnz
imul
cs
pop
daa
sti
mov
lods
xor
mov
pop
inc
out
cs
push
cmp
cmc
pop
shl
cmp
adc
aaa
int
movsl
or
movsl
mov
pop
rcl
xchg
sub
dec
lods
push
sub
mov
in
hlt
lret
push
mov
add
lret
and
ljmp
push
push
xchg
sbb
xchg
shlb
push
inc
mov
mov
sbb
test
imul
inc
add
xchg
ja
add
mov
inc
jmp
mov
popl
jae
pop
mov
sbb
mov
push
jbe
or
and
loop
inc
mov
pop
xor
sbb
sbb
mov
xchg
push
repnz
lods
jl
sbb
cmp
dec
test
into
js
lds
or
aad
mov
xchg
das
outsb
lahf
cmpsl
rolb
rorl
aad
insb
fbstp
out
cmpsl
adc
lods
xchg
bswap
sub
push
or
sbb
and
popf
cwtl
cmpl
pop
cmp
mov
pop
movsl
push
rorb
jns
dec
loopne
and
imul
push
sti
lods
mov
jmp
jle
repz
xlat
inc
loope
mov
sbb
push
jmp
cmp
push
stos
data16
cmp
bound
jg
aaa
xchg
mov
cld
rcrl
pop
call
sbb
dec
mov
das
aam
xlat
add
sbb
icebp
dec
pop
mov
pop
mov
xorl
push
xchg
std
mov
je
mov
add
pop
arpl
mov
aas
adc
jg
and
cwtl
rol
jnp
insl
out
and
shll
push
cs
inc
ljmp
cld
mov
les
aas
xor
xor
rol
imul
shl
push
jae
dec
mov
outsb
in
adc
mov
lcall
subl
test
data16
and
xchg
aaa
xor
push
xchg
jae
adc
or
dec
jge
jl
fiadds
sbb
in
xorl
xchg
pop
les
xchg
xchg
sbb
scas
ds
frstor
sbb
pusha
fists
cmpsl
shlb
or
push
or
lcall
cmpsb
adc
hlt
cltd
int3
fidivl
mov
mov
xchg
fldl
pop
push
shll
jmp
xor
js
jnp
ret
xchg
mov
xchg
cmc
inc
aad
aam
cmpsb
dec
and
fucomip
addl
xchg
fs
push
mov
add
andb
mov
adc
enter
xchg
sub
aad
dec
outsl
pop
or
iret
nop
rcrl
add
cmpb
out
dec
dec
mov
push
or
inc
out
inc
call
in
lea
nop
pop
jle
sbbb
repz
rol
mov
dec
pop
mov
adc
jg
cmpsl
aam
pop
jb
out
lds
cmp
mov
in
mov
sbb
sub
mov
push
jle
lret
pop
into
pop
lea
push
out
outsb
push
outsl
imul
clc
mulb
sbb
pop
cmp
rclb
cmp
mov
outsb
popf
adc
or
jbe
mov
add
cmp
adcl
int3
pop
pusha
lcall
mov
insl
rcr
xchg
int3
mov
cmp
dec
test
jno
pop
dec
xor
dec
roll
mov
cltd
popa
and
scas
xchg
push
dec
decl
sahf
scas
cld
ljmp
mov
shl
or
aam
inc
enter
jno
mov
daa
leave
mov
lea
mov
cs
and
sbb
push
std
movsb
push
pop
push
popa
imulb
or
roll
jg
js
mov
push
pop
hlt
mov
mov
sar
mov
xchg
sahf
lods
push
cmp
dec
xchg
pop
sbb
mov
sbb
jle
push
push
mov
jl
sbbb
xor
imul
pushf
and
ret
pop
fdivl
dec
out
or
dec
sti
lahf
push
mov
jle
and
dec
popa
inc
ja
mov
sbb
mov
jle
dec
mov
fstps
popf
cs
movsl
daa
push
cmpsl
xor
or
sahf
cli
mov
aaa
rcll
les
jbe
hlt
pop
adc
gs
ret
and
fldcw
ret
cmp
dec
push
sbb
push
cmp
mov
inc
add
imul
fwait
sub
popa
dec
mov
mov
fucomip
out
aad
add
dec
pop
les
frstor
mov
mov
add
rorb
gs
popf
addr16
xor
jmp
pop
je
or
cld
xchg
mov
xor
call
add
ljmp
and
jle
or
push
inc
andl
mov
or
ss
and
xchg
and
idiv
mov
dec
xor
out
cmp
or
adc
mov
lods
xlat
aaa
dec
mov
rcrb
ds
mov
push
aas
push
orb
xacquire
ret
pop
rorl
cmp
cmp
push
aaa
dec
fistps
dec
mov
sti
fisubrl
arpl
cli
add
xor
out
test
test
mov
cmpsb
fistl
loop
imul
subl
or
xchg
std
test
adc
sub
iret
pop
cs
je
push
or
mov
jmp
out
add
add
daa
test
inc
scas
and
cmpsl
sti
sub
jno
jo
aam
or
arpl
cmp
sbb
or
shrb
int
lret
pop
fbld
aad
iret
fldt
lret
std
ljmp
loopne
lcall
add
xor
xchg
push
call
lahf
ss
imul
inc
jge
shll
xchg
cmp
cmp
xlat
push
neg
hlt
push
pop
inc
push
sub
or
inc
sub
out
fimuls
stos
mov
pop
ja
in
dec
mov
enter
adc
jo
stc
shrb
lds
or
test
mov
inc
inc
fucom
arpl
mov
mov
push
sub
ss
push
or
xor
test
js
ljmp
mov
sbb
nop
daa
pop
adc
das
sarb
outsb
ret
adc
jle
out
jae
repnz
add
mov
push
push
insl
adcb
xorb
inc
stos
mov
jmp
pop
daa
loopne
pop
call
jp
in
cmp
push
ret
mov
jb
sbb
inc
arpl
add
sahf
inc
ds
inc
jo
fistl
xchg
pop
imul
lret
mov
stos
mov
hlt
cltd
push
adc
pop
cltd
jle
mov
sub
jo
leave
sub
fs
pop
aam
popf
mov
outsl
rcll
cmpsb
mov
dec
fidivrs
adc
mov
lds
in
sti
dec
or
scas
out
lods
popf
cmp
scas
adc
adcb
in
xchg
pop
bound
movq
movsb
fsubrs
mov
mov
scas
ja
dec
fcmovnu
jne
outsl
cmc
adc
cmpsl
test
adc
iret
xchg
shl
mov
mov
mov
add
inc
sbb
in
test
xchg
xlat
jns
jecxz
cli
push
sub
dec
push
cmc
sub
push
stos
push
mov
pop
and
js
inc
mov
inc
xor
movsl
gs
jbe
inc
scas
cbtw
push
xchg
addb
mov
call
mov
and
jge
aam
mov
mov
pop
fs
xor
loop
push
jg
sbb
xchg
inc
lods
cli
push
mov
cmp
lret
inc
jbe
sub
jecxz
mov
je
cmp
push
call
imul
popf
hlt
cmp
fcompl
adc
dec
xchg
mov
js
xor
int
mov
lea
dec
lretw
icebp
xchg
sbb
mov
xor
jae
sub
dec
push
outsl
push
dec
xor
xchg
mov
jecxz
push
sub
mov
in
sbb
out
jge
lret
insl
in
and
out
inc
mov
dec
pusha
pop
movsb
pop
add
xchg
inc
sub
into
imul
push
sarl
testl
dec
jbe
incl
xor
mov
out
outsb
test
insb
xchg
inc
jge
mov
xchg
cmp
in
pusha
dec
call
jg
cmp
push
pusha
adc
xchg
or
xchg
sbb
mov
fs
daa
leave
cmp
mov
xor
mov
xlat
xor
push
pop
cmc
xchg
mov
movsb
shll
pop
fldcw
adc
mov
cmp
pop
in
aas
sbb
pop
mov
mulb
mov
cmp
adcb
ret
test
iret
insb
lret
sbb
test
mov
push
mov
adc
loop
mov
xchg
xchg
les
mov
mov
orl
xchg
fisttpll
pop
cmp
xchg
jns
mov
pop
out
adc
js
leave
mov
jae
sbb
ret
adc
mov
jbe
xchg
push
decb
adc
jb
push
test
and
push
push
inc
sub
pop
sbb
fisubl
jno
xchg
pop
repnz
cmp
adc
loopew
fsts
rorl
inc
and
jns
dec
test
outsl
add
adc
jmp
es
fmul
push
mov
stos
js
xchg
mov
mov
rol
and
pusha
pop
mov
icebp
inc
mov
andl
jmp
data16
or
sbb
movsb
cmp
cmp
test
mov
fs
pop
mov
fwait
adc
loope
inc
scas
insl
xchg
sub
add
rorl
fsubrl
shlb
jmp
or
fmull
in
jo
jo
loop
mov
push
mov
mov
sbb
push
jo
fcmove
bound
pop
dec
mov
movsl
es
jecxz
mov
dec
dec
data16
jg
in
pop
dec
jp
cltd
pushf
mov
out
stc
inc
cld
mov
push
add
jl
adc
sti
sub
insb
aas
shrb
push
cwtl
bnd
sbb
pop
xor
loop
inc
inc
int
xor
sbb
leave
insb
mov
outsb
shrl
insb
jle
and
mov
movsl
les
sub
add
mov
enter
lahf
or
mov
fcmove
pop
popa
cs
sbb
mov
jle
xor
mov
sahf
cmp
rcrb
cmp
inc
mov
aaa
inc
int3
pusha
ret
js
mov
jl
ficomps
adc
pop
cltd
cmc
dec
mov
loop
sbb
in
dec
sub
mov
test
or
fldenv
mov
mov
shl
adcb
or
scas
xchg
mov
xchg
jl
ret
adc
jg
test
mov
xchg
rcl
xor
mov
test
sbb
jmp
xor
and
adc
mov
data16
fldenv
mov
into
xchg
lods
add
out
clc
xchg
ss
push
imul
imul
add
inc
fisubrl
adc
ficoms
scas
psubsb
insb
stos
lds
fsts
pop
sub
lahf
aad
pop
mov
adc
sbb
add
and
das
stos
scas
clc
cld
or
sub
out
fstpl
mov
test
jnp
int
dec
mov
insb
dec
dec
jo
test
lods
and
add
cmc
mov
lods
push
out
mov
mov
fs
test
xor
mov
cld
jae
rclb
ffreep
cmp
xor
icebp
adc
iret
xchg
sub
xor
cli
and
pop
gs
mov
push
lock
aad
out
cmp
sbb
int
cli
cwtl
sbb
outsb
cld
sbb
inc
stc
mov
lahf
lret
icebp
mov
out
sbb
sahf
push
fsts
arpl
jo
orl
int3
stc
aaa
popa
inc
and
fists
jmp
fsub
ds
ss
cmp
insl
jnp
inc
popa
sbb
add
mov
mov
out
inc
fmulp
sarb
pop
gs
add
dec
dec
in
cltd
pusha
mov
mov
pop
dec
inc
idivl
scas
js
mov
cmpsb
dec
cmp
jbe
test
sbb
fisubrs
mov
jge
mov
xor
fstl
mov
ret
pop
and
inc
mov
call
in
cmp
inc
negl
in
test
lret
in
mov
and
jmp
mov
lret
xor
test
pop
jg
inc
jno
add
sbb
pop
insl
dec
sbb
xlat
outsl
jmp
pop
jae
inc
aam
adcb
push
stos
repz
push
lods
shrl
insb
popf
lods
add
and
dec
and
sub
push
mov
pop
xor
adc
into
and
push
lds
jae
and
sub
dec
xchg
sub
pushf
add
jns
mulb
pop
xor
jg
add
pop
or
cmp
and
insb
mov
pop
add
dec
mov
jb
inc
lds
fsubr
incl
enter
outsb
xchg
sub
inc
in
leave
pop
repz
xor
xor
nop
mov
dec
mov
dec
movsb
cmp
mov
pop
out
cmpsl
dec
jmp
or
ret
test
pop
cmpsl
cmpsb
les
cmp
jl
xchg
push
stos
sub
mov
das
cmpsb
lahf
push
sbb
cmp
imul
add
or
push
push
lcall
jb
test
pop
lahf
jg
or
mov
adc
cld
sub
jmp
fiaddl
mov
imul
sub
js
jo
and
push
mov
push
js
test
in
xchg
dec
pop
sbb
lcall
test
test
ja
mov
scas
inc
rol
in
dec
inc
mov
sbb
iret
dec
std
xor
loope
fdivs
dec
pop
jecxz
dec
adc
xor
dec
out
in
test
insb
xchg
sub
lahf
lea
mov
inc
mov
sbb
xchg
inc
ljmp
xor
mov
inc
je
mov
or
mov
inc
pusha
sar
aas
inc
adc
gs
lret
cwtl
inc
in
xchg
push
jno
xchg
imul
test
arpl
insl
imull
pusha
inc
xchg
insl
add
sbb
cltd
jb
int3
mov
int
push
call
inc
movsb
mov
lea
in
iret
cmpsb
xor
jae
lock
pop
mov
jnp
loop
out
xor
add
bound
mov
divb
aam
shr
mov
repz
and
cmp
imul
inc
inc
jo
imul
pop
call
mov
and
ljmp
fldl
dec
insb
mov
loopne
cmc
lods
ja
int3
fisubrl
jae
add
arpl
push
je
sbb
mov
pop
xchg
fmulp
inc
xlat
jl
fsub
pusha
into
call
cmp
arpl
or
push
ljmp
rolb
aas
push
cmp
fwait
loopne
pop
popf
test
lods
sbb
les
call
shl
mov
lcall
push
push
push
mov
xor
test
cmpsl
add
jle
jbe
mov
dec
adc
mov
stos
popa
outsl
nop
xchg
inc
popf
fiaddl
lds
inc
test
pop
cmp
shl
repz
or
xor
add
lea
clc
or
mov
fnsave
add
daa
xor
mov
outsl
jne
in
xchg
mov
jbe
jnp
mov
loopne
pop
pop
lcall
and
ja
dec
jecxz
sbb
add
loope
out
cmp
push
add
xchg
fs
and
xorb
sbb
adc
outsb
ss
notb
jns
cltd
sub
pop
sub
fdivrs
dec
fcmove
pop
push
jb
loopne
lret
sahf
outsb
sarb
mov
xchg
in
jecxz
mov
std
test
cmp
push
js
ss
jg
mov
pop
repnz
pop
stos
mov
ja
andb
jnp
mov
sbb
iret
mov
lcall
dec
push
add
divl
jns
jmp
cmp
push
mov
inc
leave
orl
jg
pop
pop
sahf
xlat
jbe
add
cmp
test
mov
sbb
ret
xor
mov
fidivrl
leave
mov
mov
mov
repnz
push
inc
fisttpl
add
sbb
jecxz
lahf
in
daa
dec
push
xchg
push
cmp
aam
aam
mov
es
cmp
andb
or
les
inc
pop
or
xchg
lahf
mov
pop
lock
add
jge
inc
or
jmp
dec
cmpsb
xchg
jl
in
and
xchg
pusha
inc
mov
inc
imul
jb
inc
jbe
jbe
stc
aad
stos
pop
das
hlt
shrl
arpl
aam
cltd
jo
inc
insl
xor
out
and
lcall
in
into
add
jbe
add
pop
jo
pop
lods
dec
insl
push
pop
fisubrl
fwait
inc
fnsave
mov
packssdw
ja
stc
pop
das
inc
xchg
push
pop
cmpsl
insb
push
adc
mov
mov
xor
jp
cwtl
push
cmpsl
sub
lds
sbb
or
mov
cmp
and
inc
fidivrs
push
out
push
sbb
jns
cmp
and
dec
aam
jge
push
in
repz
addr16
and
lret
fnstcw
xchg
jmp
out
ret
push
je
and
or
aas
popf
in
mov
insb
add
fdivs
mov
or
mov
jecxz
cmp
pushf
jge,pn
bound
pop
lock
adc
lret
sub
rcll
or
arpl
hlt
cs
ret
add
lds
cld
lock
arpl
push
mov
cmp
lock
add
lcall
or
out
mov
jne
jns
jns
test
test
pushf
mov
dec
loopne
or
ljmp
jo
repnz
mov
imul
cmp
xchg
fisubrl
jl
daa
daa
int3
lahf
icebp
lret
aad
lods
enter
push
sub
pop
mov
cmp
das
cmpsl
cmp
mov
leave
lea
add
push
imul
mov
or
jg
repnz
insl
jne
and
enter
scas
movsl
add
cltd
mov
jp
xchg
mov
into
das
mov
and
jns
cmp
pop
xor
jbe
xchg
inc
in
popf
repz
cwtl
lods
movsb
sbb
dec
dec
movsl
call
push
insl
das
ret
fdivr
add
insl
sbbb
leave
push
pop
xlat
imul
and
xor
cmp
and
xorl
inc
stc
lahf
pop
loope
adc
xchg
sahf
stos
inc
sbb
or
push
mov
aas
imul
lods
push
inc
sbb
adcl
inc
enter
cmpsb
add
loope
insl
xchg
pushl
lret
mov
fs
outsl
pop
sbbl
fidivs
inc
out
mov
sahf
mov
iret
loope
pop
dec
pop
test
inc
push
cs
das
push
popf
cmpsb
aam
pop
mov
addr16
adc
mov
sbb
int
into
jle
push
cmp
adc
mov
fcoms
out
stos
sbbl
punpcklbw
sbb
fucomi
sarb
adc
test
pop
jecxz
je
pop
adc
mov
push
aad
xlat
inc
test
mov
loop
xor
jmp
xorl
icebp
stos
xor
mov
aaa
xchg
inc
jns
jne
inc
insb
int
lds
shlb
fcmovnbe
addr16
cmp
sahf
jecxz
out
cli
xor
loop
fiaddl
dec
adc
sbb
insb
inc
movw
call
mov
adc
mov
stos
push
mov
lock
adc
dec
out
imul
ret
or
cltd
mov
xchg
dec
jp
lods
dec
hlt
mov
add
xor
push
jp
xor
pop
in
fldpi
mov
jle
insb
shr
pop
and
xor
aaa
lea
into
add
in
push
or
mov
push
adc
pop
dec
jb
pop
shr
and
pushf
add
pop
testb
sbb
push
arpl
cwtl
cmpsl
out
add
mov
dec
dec
mov
or
bnd
iret
and
scas
push
movsl
fucomip
fs
inc
sub
je
fsubl
pop
pushf
or
rolb
jne
adc
push
movsb
inc
mov
testl
cld
mov
mov
mov
push
movsb
cmp
mov
dec
outsl
les
or
mov
xor
or
ljmp
rol
cltd
cltd
das
push
mov
insl
jmp
fwait
and
jbe
addr16
lahf
mov
push
fwait
pop
out
and
fcomps
lahf
in
les
sub
cmpsl
data16
fdivs
push
jmp
mov
inc
push
mov
jno
and
jae
je
sbb
mov
inc
jge
test
lock
add
add
dec
gs
aaa
fxch
sbb
jmp
aad
sbb
lret
adc
jno
xchg
push
xor
fbld
inc
mov
ficoms
shrb
inc
sahf
or
aad
adc
mov
fnstenv
mov
jp
and
dec
push
jmp
sub
xchg
or
int
inc
lahf
add
dec
sbb
in
sub
sub
adcl
aaa
mov
imul
jae
lret
mov
pop
cmpsl
lods
mov
jge
ss
mov
es
addr16
mov
lret
mov
and
pop
icebp
test
lret
icebp
popf
jp
test
negl
or
insb
mov
xchg
xor
pop
aas
mov
jp
stos
pop
add
ret
add
ja
lods
int
lods
add
lods
inc
dec
mov
lret
mov
inc
imul
cmc
nop
cmc
push
stc
rclb
pop
fucomp
or
adc
cmp
fsts
mov
ffreep
iret
hlt
xchg
shlb
mov
stos
scas
and
dec
loopne
dec
sub
lock
lcall
loope
repz
mov
int3
or
gs
loopne
xor
xchg
or
pop
mov
enter
jb
xchg
lcall
push
and
dec
scas
cmpsl
push
cld
dec
psubusw
sub
xor
cmp
lods
and
xchg
cmpsb
pusha
or
jno
jo
fs
mov
jno
lods
mov
sahf
or
nop
xchg
mov
mov
pop
fwait
arpl
gs
mov
sbb
mov
mov
xorl
push
mov
shrl
xchg
loop
inc
loopne
adc
mov
ss
xor
mov
jne
mov
mov
leave
pusha
inc
pop
stos
mov
aad
shrl
or
fnsave
add
imul
add
add
push
ljmp
mov
arpl
insb
cwtl
aaa
stc
cld
lea
out
cmp
sub
dec
mov
sub
mov
iret
pop
pusha
cwtl
loop
sbb
rclb
add
cmc
paddsb
out
ret
ss
insl
jge
xor
push
loope
rcll
cmp
sbb
stc
or
sbb
ret
inc
repz
fbstp
push
mov
ret
or
cwtl
icebp
popa
jecxz
adc
cli
and
scas
enter
nop
lret
and
pop
xor
aam
out
in
pop
decl
movsl
xor
inc
scas
dec
xor
jae
push
jmp
shl
call
data16
cmpsl
push
adc
sbb
and
arpl
enter
push
xchg
pop
mov
push
or
aas
dec
fisubs
adc
call
mov
xchg
jl
adc
mov
je
sub
inc
hlt
adc
ret
shrb
ret
jb
sub
or
fld
loopne
data16
lods
outsl
pop
dec
mov
mov
xor
pop
jb
mov
std
out
pop
lds
inc
imul
jns
std
jl
lcall
js
rcl
test
in
adc
pop
adc
cmp
js
push
cmc
lret
push
arpl
jb
in
pop
negb
cmp
jecxz
push
dec
jge
lcall
sub
or
lcall
and
jecxz
lahf
jmp
stc
das
mov
sbb
sub
jbe
bound
into
and
cs
jmp
repnz
xchg
add
jl
fistps
push
lcall
sti
mov
push
stos
add
inc
inc
lds
cmp
outsl
pop
jmp
hlt
add
push
mov
cmc
xor
lods
jg
ret
pop
sbb
mov
ret
sahf
pop
mov
jge
sbb
or
push
cli
subb
pop
gs
push
loopne
or
xlat
pop
js
xor
cltd
mov
scas
movsl
and
xlat
pop
jbe
sub
dec
popa
into
dec
adc
pop
data16
jae
cmpsb
mov
push
jbe
mov
or
sbb
int3
fildl
pusha
test
outsl
icebp
or
push
stc
sub
cmp
sub
fisttps
aaa
sti
mov
out
adc
shrl
in
jnp
or
mov
cs
xchg
stc
test
pop
sub
lcall
or
mov
adc
pop
loope
add
pop
xor
sbb
jae
cmp
push
pop
cmp
xor
jns
or
scas
mov
push
jne
test
movsl
cmp
cli
sub
mov
mov
push
call
or
cmp
adc
push
jno
pop
dec
mov
pop
in
ljmp
and
sbb
xchg
jb
cmp
ja
adc
inc
pusha
xchg
inc
adc
mov
jp
stos
lods
jg
in
loop
jno
ja
mov
cmc
les
pop
ss
push
add
cmp
inc
outsb
fimull
das
dec
add
pop
dec
and
mov
outsl
jmp
addr16
mov
mov
lret
xor
testb
inc
in
add
js
dec
iret
adc
xor
dec
enter
push
jmp
ret
shlb
int3
lcall
icebp
into
imul
out
in
sbb
imul
imul
xchg
int3
and
cmp
int3
js
cmpsb
or
lods
outsb
addb
rorl
lret
jl
pop
jb
ret
adc
xchg
call
mov
add
out
mov
int
fisttpl
mov
call
jecxz
pop
mov
mov
push
hlt
shll
enter
leave
lods
insb
lahf
daa
fwait
sti
inc
lock
je
or
and
xchg
fadd
addr16
pushf
lods
and
mov
push
push
scas
pop
jns
jl
cmp
adc
lds
cmc
scas
inc
js
push
push
dec
sbb
fidivl
nop
movsl
lock
mov
shrb
lock
pop
sbb
jge
or
xchg
adc
mov
push
ret
xlat
mov
add
inc
icebp
mul
iret
pop
cmp
test
jmp
lods
inc
mov
popf
dec
or
mov
push
outsl
lods
dec
aas
mov
mov
mov
jle
rcrl
xor
inc
dec
rcrb
ds
cwtl
pop
movhps
and
mov
pop
icebp
stc
ljmp
pop
icebp
push
out
imul
lock
jnp
ljmp
jns
xchg
fidivs
xor
and
aam
jp
js
mov
pop
cmc
xchg
pop
inc
pop
sbb
jle
ss
mov
xchg
call
mov
inc
adc
pop
or
mov
or
cs
jle
sbb
adc
mov
imul
cmp
movsb
pop
mov
add
jne
mov
cld
push
jge
filds
push
fmull
jb
es
cld
cwtl
ret
scas
bound
test
ds
lret
cmp
inc
imul
dec
js
jae
bound
fstpl
xor
outsb
sbb
or
out
pop
fcmove
test
pop
shrb
pop
insl
or
mov
stc
push
jmp
clc
popf
and
stos
pop
or
sahf
adc
or
pop
jge
xchg
cmp
xchg
jle
mov
sbb
pop
adc
pop
xor
pop
xchg
adc
imul
imul
push
lods
xchg
inc
sub
scas
xor
subb
adc
out
or
ret
mov
pop
iret
pop
cltd
insl
mov
lods
loop
mov
xchg
mov
sub
push
out
add
pop
dec
stc
adc
sti
jge
jp
fadd
mov
hlt
mov
mov
sahf
mov
push
addr16
adc
insl
dec
xor
and
xor
pop
pop
mov
adc
in
ret
stc
outsb
aad
xchg
les
cmp
int
aaa
push
outsl
out
inc
arpl
insl
cmpsb
in
and
fistl
mov
xor
cs
cmp
bound
pop
lods
xchg
out
dec
pop
add
inc
fwait
push
cmp
mov
and
aad
or
jno
jne
mov
push
stos
scas
mov
shr
add
popf
ss
sti
jbe
jle
xchg
mov
mov
jbe
ficoms
sti
lahf
movsl
mov
mov
mov
insl
adc
xchg
pop
test
aad
ja
pop
test
inc
in
out
repz
xor
rorb
rorl
mov
loopne
pop
ret
dec
in
sub
xchg
pop
inc
in
insl
int
negb
adc
xor
and
pop
mov
insb
sub
insl
imul
cmp
jbe
or
adc
rcrb
xchg
mov
push
mov
setne
adc
insb
imul
icebp
in
mov
ret
jmp
jle
aam
sbb
mov
es
mov
ds
inc
fnstsw
call
lea
xchg
cmp
fistps
or
fs
jnp
xorl
out
fnstcw
popa
repz
mov
popa
jne
iret
mov
sub
scas
iret
and
loopnew
push
adc
xor
inc
jp
add
in
xor
cmpsl
and
sbb
mov
adc
inc
roll
jno
xchg
and
dec
lock
cmpsl
mov
add
push
mov
mov
pop
inc
sub
faddl
and
lea
mov
jg
pop
cmpsl
ret
fdivrs
xor
push
outsl
loop
adc
mov
inc
pop
mov
and
or
cmp
xchg
fcomps
sahf
jge
pop
cld
lods
test
xor
stc
rorb
cmp
gs
add
xchg
fmuls
add
imul
dec
in
or
pop
imul
fwait
imul
xchg
divb
ss
fidivl
or
lock
and
mov
fsubl
cmpsb
sbb
xor
mov
es
cmp
cltd
rorb
jg
mov
fnstcw
mov
insb
or
test
movsb
adc
add
les
add
leave
shll
sbb
mov
inc
cmpsl
add
in
les
or
dec
dec
fldl
out
pop
mov
xchg
mov
sub
mov
mov
ret
mov
adc
ljmp
rorb
lret
adc
xacquire
pushl
mov
push
mov
mulb
lret
push
dec
lret
int3
xchg
mov
dec
clc
jno
push
imul
scas
ret
xchg
out
xor
lds
iret
arpl
clc
inc
xchg
xor
sahf
in
lcall
mov
dec
nop
ljmp
mov
ret
sbb
jmp
push
nop
jmp
adc
ss
push
adc
cmp
stc
test
push
repz
cltd
test
fistl
pop
dec
jae
lea
aad
clc
and
call
inc
shlb
push
mov
es
mov
or
fistps
outsl
pop
stos
xlat
push
cs
pop
clc
cltd
psadbw
xor
xor
mov
test
nop
push
inc
inc
mov
inc
in
out
lock
dec
sysexit
int3
jo
nop
ljmp
inc
fisubs
stos
jecxz
and
setp
jmp
mov
insl
int
ljmp
mov
das
sbb
push
dec
leave
and
push
push
sbb
les
out
xchg
js
rcrl
sub
mov
pop
ret
bound
outsb
cwtl
mov
fs
mov
loopne
pop
dec
cmpsl
push
push
repz
mov
es
je
jl
cs
sti
xchg
xchg
sbb
or
mov
sbb
mov
xchg
inc
cmpsl
mov
push
jge
inc
add
adc
mov
rorb
shrb
outsb
mov
mov
shll
mov
test
testl
jp
icebp
push
xor
js
andl
inc
hlt
or
imul
shrb
nop
sub
mov
mov
popa
xchg
mov
jno
stos
or
adc
repz
aad
jno
jge
enter
in
subb
mov
mov
sbb
aad
jmp
loopne
and
out
pop
mov
push
jb
mov
cmp
aas
in
inc
addr16
or
sbb
sub
xchg
test
dec
gs
testb
shrb
inc
pop
scas
fbld
inc
push
add
xor
aad
inc
and
in
mov
adc
xchg
insb
filds
clc
dec
mov
lret
outsb
mov
pushf
je
adc
and
xor
inc
add
cltd
or
rclb
jmp
sarb
gs
movsl
mov
sbb
mov
fstl
jecxz
jmp
pop
pop
sbbb
jle
add
xchg
jo
sub
cmp
add
mov
fucomip
cmpl
mov
xor
sub
sub
lahf
sub
outsb
lcall
jp
and
lret
jg
lods
shlb
xlat
jb
bound
pop
mov
enter
fs
jne
leave
inc
sbb
rorl
or
mov
movsl
cmpsl
push
cltd
lea
dec
mov
jl
push
add
xchg
pop
jmp
scas
push
add
xor
bound
cmp
jge
sbbl
pop
lds
insl
sarb
inc
stos
pop
mov
inc
cmp
clc
loopne
orb
scas
ret
inc
push
add
push
jecxz
js
das
mov
cmp
cmp
pop
xchg
push
jns
mov
jecxz
ficompl
lahf
imull
test
rorl
add
lods
dec
je
lcall
rcll
add
fcomps
movsl
dec
cltd
add
mov
cs
leave
rclb
ss
xlat
sub
cmpsb
insb
les
and
pop
gs
sahf
dec
enter
xor
addl
aas
scas
xorl
mov
and
push
cmc
pop
ret
sbb
arpl
insl
xchg
repnz
mov
rorb
push
cmp
inc
dec
push
nop
clc
mov
add
lcall
aaa
incb
sbb
or
lahf
or
call
lds
mov
cs
imul
mov
cmpsl
sub
push
pop
enter
push
daa
gs
push
stc
nop
xchg
inc
lods
pop
stc
push
dec
lods
aad
dec
imul
cmp
arpl
adc
sbb
ljmp
mov
pop
scas
pop
add
pop
es
ret
push
cmp
scas
mov
inc
add
and
js
adc
iret
pop
xchg
sub
push
stos
xor
mov
hlt
xchg
pushf
dec
insl
fnsave
stos
ss
enter
and
rcrl
adc
negl
inc
sub
add
add
int
push
add
outsl
aam
fisubrs
aaa
push
mov
mov
loopne
add
mov
jmp
jns
aam
dec
icebp
xchg
xor
add
outsl
jge
les
xchg
aad
mov
aad
cmpsl
sarb
add
mov
in
cmp
pushf
sbbl
mov
inc
cmp
hlt
ret
cli
xchg
repz
sbb
inc
mov
push
aam
mov
addr16
xor
lahf
xor
jnp
lcall
push
stc
fdivp
sbb
mov
loopne
jne
mov
imul
sbb
rol
ss
repnz
leave
adc
inc
add
insl
xchg
push
and
std
cs
jbe
incl
fnstenv
jecxz
mov
subb
mov
mov
fadd
rorb
pop
sbbb
add
int
jg
push
push
jb
or
insb
into
cmp
repz
fmull
sub
ds
push
lcall
and
adc
inc
in
js
push
leave
mov
push
popa
clc
xchg
in
aad
xchg
pop
ljmp
cmp
pop
pop
mov
lds
push
dec
movsl
push
insb
sub
xchg
jnp
js
sarb
int
jns
notl
scas
dec
jns
clc
fsubl
sti
push
push
js
push
cmpl
jns
lret
ret
xchg
jmp
out
insl
jge
xor
call
mov
inc
inc
movsl
jge
mov
orl
mov
xchg
stc
or
popf
jb
xchg
jae
mov
xchg
mov
or
adc
repz
mov
jge
movsb
dec
and
add
add
pop
aaa
fwait
jp
add
sahf
arpl
arpl
cld
test
dec
into
pop
jno
sbb
inc
xchg
xor
data16
push
je
xchg
in
movsl
xchg
mov
mov
lea
stos
cli
xchg
fsubrs
ret
sub
lods
inc
fdivp
into
int
sbb
test
pop
push
or
xlat
mov
sbbl
inc
pusha
inc
shl
lcall
aam
daa
iret
jecxz
fcomps
ror
push
pusha
xchg
nop
fmull
stc
test
cmp
mov
push
pop
or
out
push
mov
mov
add
jmp
vshufpd
mov
dec
test
pop
mov
pop
cmp
movsb
dec
loope
sbb
cmp
jns
inc
aas
adc
js
aad
dec
mov
out
in
lea
cmpsl
data16
xchg
roll
jb
into
sbb
jne
and
insb
jnp,pt
xor
test
xchg
xchg
pop
mov
out
pop
cmpsb
in
clc
cmp
sub
jno
imul
xchg
mov
repz
mov
or
adc
cmc
jo
mov
fisubrs
pop
xor
xchg
xlat
jp,pt
mov
and
cld
dec
lea
shll
sub
pop
aaa
inc
int3
sub
cmc
adc
pop
adc
mov
mov
mov
mov
mov
ret
add
sti
bound
pop
repz
inc
popa
adc
orb
push
fwait
mov
mov
xchg
arpl
pop
sahf
ret
scas
mov
sbb
repnz
inc
dec
jmp
cltd
ja
sarl
mov
sbb
mov
or
shlb
xchg
mov
test
sbbl
lret
add
inc
lret
push
pop
xorb
adc
insl
ret
icebp
jmp
adc
xchg
das
mov
jno
mov
loope
cmc
mov
add
dec
xor
das
into
gs
outsl
cmp
mov
or
cmp
mov
add
cmp
pop
jbe
pop
pop
test
mov
sbb
insl
test
adc
cmp
mov
ja
mov
mov
ljmp
or
aaa
cmp
push
out
add
xor
jl
notb
or
dec
pop
out
aas
js
xor
pop
repnz
jns
nop
pop
dec
jecxz
xor
cs
sbb
popa
jl
cmp
and
ds
in
add
mov
mov
jmp
rcr
stc
rclb
addr16
stos
ss
mov
push
jle
pop
jns
out
test
test
aad
pop
je
pop
imul
ss
mov
ss
cmpsl
std
pop
xchg
mov
push
imul
lods
jle
in
mov
pop
jo
pop
loope
aaa
push
push
imul
sub
pop
repnz
xor
sub
fmull
inc
in
lahf
imul
pop
fsubl
cmp
push
aad
mov
call
cmp
imul
ficompl
mov
and
add
mov
inc
mov
push
dec
movb
jo
pushl
dec
dec
frstor
inc
shrl
std
pop
sbb
aas
lahf
mov
ss
jno
or
test
pop
cmc
mov
ficoml
fwait
ja
and
and
jae
pop
sub
sarb
inc
enter
inc
pop
push
in
andl
incl
cltd
cmp
sub
mov
inc
jne
mov
and
cmpsl
push
popa
inc
sete
iret
mov
xor
movsb
mov
popa
arpl
cmpsl
test
cmp
jp
mov
inc
push
mov
test
test
dec
insb
in
into
push
cmpsb
incb
addr16
arpl
aaa
lahf
daa
cli
pop
xor
and
nop
movsl
inc
fstp
jne
cmpsb
call
fsubrl
mov
pop
das
pop
mov
mov
pop
and
cmp
outsl
imul
lret
jns
rcll
insb
leave
fstps
jp
pop
addl
aam
mov
pop
pop
addr16
or
push
mov
mov
outsb
rclb
mov
inc
and
sub
sbb
lret
mov
fimuls
and
into
mov
ficoms
or
jno
aad
inc
pop
jb
into
push
or
insb
fmull
mov
push
mov
xchg
add
mov
mov
and
imul
push
stc
mov
ror
inc
sbb
and
jle
push
aas
dec
repz
push
outsb
lret
pop
pop
icebp
mov
or
pop
and
cld
push
jle
mov
arpl
sub
xchg
rcr
and
mov
clc
or
scas
sahf
icebp
pop
xchg
pushf
leave
jp
cs
cwtl
dec
push
lods
mov
fnstenv
or
loope
repnz
test
hlt
inc
test
out
pop
xchg
pop
lret
lcall
mov
mov
les
arpl
aam
mov
sbb
sub
lods
pop
cmpsb
fucomp
mov
inc
lods
jle
add
in
mov
mov
sbb
inc
popf
push
mov
push
push
repz
mov
jb
sub
leave
in
jne
int
call
mov
lret
jno
add
movsb
xchg
adc
dec
dec
loop
jl
mov
movsb
les
sub
mov
fisttps
mov
xchg
sahf
lods
sbb
sub
sbb
push
cmp
xor
mov
lds
or
and
mov
das
mov
insb
iret
mov
jecxz
icebp
rcrb
imul
jbe
or
push
mov
movsb
es
xchg
ds
sbb
outsb
push
mov
popa
adc
cmc
mov
outsb
inc
add
pop
add
out
std
mov
mov
sbb
inc
jecxz
outsb
bound
lahf
or
shl
mov
sbbb
mov
pop
cmc
mov
lea
mov
std
pop
push
jl
sahf
sbb
sbb
out
lcall
adc
pop
int
andl
imul
fstpt
imul
xlat
bound
inc
mov
mov
or
mov
jnp
adc
sbb
sahf
xchg
int
ret
mov
mov
mov
arpl
xchg
or
dec
in
pop
repnz
in
xor
jne
cmp
fwait
dec
scas
mov
push
in
adc
push
and
jns
mov
mov
out
jns
mov
jmp
test
mov
cmpsl
mov
fs
mov
dec
push
mov
movsb
pop
and
add
addr16
pop
jnp
shlb
sbb
jle
xchg
dec
test
cmp
mov
mov
fsubl
shll
or
stos
push
add
mov
xchg
mov
sbb
repz
test
js
mov
clc
jg
jo
push
das
xchg
pushf
jae
sub
jnp
push
cli
lret
add
es
out
mov
call
mov
insb
add
sub
repnz
mov
or
pop
outsl
sub
ret
jne
repz
mov
mov
xor
dec
xchg
xchg
in
push
and
repz
adc
sbb
decb
div
sbb
dec
push
mov
mov
mov
adc
enter
sti
mov
enter
pushf
scas
sti
jno
icebp
sub
testb
pop
push
or
sub
push
stc
cmp
addl
psrlw
or
jge
inc
and
lahf
loope
into
cmp
sbb
mov
lcall
arpl
cmp
and
outsl
stos
ds
or
test
pop
dec
aaa
movsb
aaa
js
sti
push
sbb
loopne
inc
fstpt
or
adc
clc
stos
loop
fstpl
test
lret
lcall
aaa
and
aam
punpckhbw
pop
fstl
cmp
pop
out
imul
rclb
ret
pop
mov
cmp
fidivrl
add
xlat
ljmp
mov
shll
cmpsl
push
or
fildll
mov
cwtl
adc
sarb
mov
cltd
pop
adc
pop
int
xchg
mov
aas
xlat
loop
notb
jge
sub
inc
int3
xchg
sbb
ficomps
mov
mov
sbb
shl
pop
sbb
sub
lds
push
test
jbe
sbb
and
loope
in
mov
lods
xchg
push
mov
add
out
inc
outsl
rolb
int
test
mov
fs
mov
out
push
out
scas
push
adc
test
mov
cltd
push
and
or
imul
popf
stos
push
xchg
pop
jo
jg
lea
stos
rcrb
mov
xor
loop
mov
add
daa
mov
gs
lods
xchg
jl
test
scas
out
xchg
adc
inc
add
pop
stc
pop
xchg
xchg
sub
xchg
cmp
jmp
sub
ljmp
je
mov
in
push
push
sub
cltd
je
popa
mov
xchg
test
push
mulb
clc
imul
sbb
das
scas
mov
sub
int3
dec
dec
loope
icebp
inc
repz
and
jmp
mov
cmp
sbb
sub
out
pop
insb
and
aad
jmp
daa
dec
shrl
icebp
mov
icebp
dec
sub
push
mov
push
out
inc
fcmovne
adc
add
aam
sbb
leave
subb
insb
pop
mov
scas
push
or
aad
mov
xchg
xchg
add
repz
mov
popa
shrb
insl
mov
outsl
iret
mov
inc
cltd
fstpl
xchg
xorl
xor
jle
pop
add
jo
jae
jb
push
nop
in
dec
stc
xchg
imull
xchg
xchg
fisubs
stc
add
and
gs
sbb
cmp
adc
out
and
pushf
rcll
inc
in
mov
sub
pextrw
pmulhuw
xor
aad
push
jmp
jl
push
xchg
mov
mov
pop
xchg
xor
stos
cmp
bound
bound
mov
pop
cmp
dec
xchg
call
push
dec
inc
out
sub
sbb
cs
lret
mov
addr16
xchg
outsb
mull
pop
cmp
jmp
push
into
or
cmp
lcall
fsubr
push
fisubl
dec
and
mov
ret
jle
pop
inc
jecxz
dec
inc
ja
subb
or
pop
cmp
cmp
shll
mov
ret
pop
dec
outsl
ljmp
adc
repnz
xchg
mov
cmpsl
inc
aas
and
adcb
iret
xchg
clc
jnp
and
or
xchg
pop
push
add
inc
lret
mov
mov
lods
jbe
movsl
in
lds
cs
scas
mov
cmpsl
clc
sbb
lea
inc
add
xor
mov
popa
push
into
adc
aam
jnp
lods
js
mov
mov
jge
sbb
loopne,pn
pusha
xchg
divb
int3
fs
test
mov
les
pop
fisubs
inc
xchg
sti
pusha
fneni(8087
cmp
pusha
das
jnp
and
push
out
loope
push
cmc
jp
mov
sbb
out
bound
dec
fnsave
repz
decl
pushf
test
and
sub
shr
cmp
and
rcrb
fsubp
add
cs
cmp
out
xchg
test
dec
ffree
xlat
add
adc
pop
sub
fdivl
sub
jns
fsub
mov
stos
cmp
jg
repz
xchg
mov
mov
jl
enter
add
cmpsl
sbb
stos
mov
pop
xchg
lea
popf
negl
sub
jne
sbb
hlt
pop
inc
leave
adc
jnp
jne
mov
mov
int3
and
sti
stc
inc
repz
lret
or
data16
push
insb
xlat
mov
pusha
ss
into
mov
mov
jl
add
cld
xor
loope
cmpsl
jle
es
cmp
dec
call
cmp
repz
jp
cltd
xlat
mov
data16
sbb
rolb
dec
lret
push
dec
jae
push
data16
pop
push
sub
out
lds
xchg
push
fs
repnz
jecxz
push
stc
and
xor
gs
test
hlt
insb
sub
xchg
xor
adc
xor
arpl
push
or
cmp
jge
inc
xor
cmc
add
in
loope
cmpb
push
or
stos
adc
cmp
bswap
in
jnp
sarl
out
cmpsl
push
arpl
cmp
shrb
iret
dec
inc
mov
cmp
cld
sub
mov
movsl
jl
outsl
stos
mov
lea
or
xor
js
loop
mov
loopw,pt
lret
mov
mov
jp
xor
es
mov
leave
sub
inc
imul
push
xchg
pusha
add
or
jne
out
repz
pop
lods
js
cmp
sbb
push
inc
rorb
mov
stc
in
repnz
shrl
aam
and
std
shrl
clc
test
hlt
sub
add
jae
js
sub
and
ljmp
push
mov
mov
mov
out
xchg
adc
cs
jp
lret
scas
jmp
sub
lods
fnstcw
mov
nop
jecxz
inc
in
aad
mov
insl
jae
sbb
js
xchg
push
std
lcall
in
xchg
cmpsb
adc
into
mov
and
mov
xchg
addr16
test
insb
loope
or
mov
mov
push
ljmp
icebp
movsl
das
sub
shr
loope
xchg
push
pop
cmp
or
fbstp
ss
loopne
mov
daa
cmp
fs
cli
push
leave
adcb
dec
je
mov
sti
xchg
ds
sbb
jg
mov
in
jns
pop
test
cmp
cwtl
aas
push
loopne
jae
loopne
test
fimuls
sbb
bound
and
cwtl
divb
pusha
dec
ss
add
fldenv
cmp
cmp
mov
sbbl
das
and
notb
lcall
sub
or
sub
jnp
pop
lds
jle
mull
and
fwait
gs
pushf
movsl
mov
mov
mov
mov
popa
sarl
rcrl
adc
outsl
test
sbb
and
cmovno
call
or
jne
test
xchg
lods
jge
inc
outsl
loopne
rorl
add
hlt
ja
outsl
lock
mov
lock
xor
int
outsb
dec
std
mov
add
mov
lods
inc
out
push
les
adc
test
dec
repnz
test
roll
adc
xor
inc
sbb
xchg
in
cmp
loop
adc
push
lods
push
pusha
mov
inc
mov
push
les
mov
shll
enter
fldl
xchg
ljmp
cmp
notl
in
xchg
inc
cmpb
test
and
dec
xchg
push
xchg
push
mov
into
movsl
loopne
and
outsl
sbbl
inc
cltd
outsb
adc
inc
pop
adc
sbbl
or
sbb
hlt
inc
push
inc
icebp
push
iret
and
adcl
pop
cli
cmp
fnstsw
pop
scas
scas
add
jle
xor
repnz
cmp
jl
mov
es
adc
xor
scas
push
mov
mov
push
push
insb
add
push
xor
xor
scas
sbb
push
pop
mov
outsb
add
repz
dec
mov
cli
lret
push
movsl
cli
mov
sub
stos
out
pop
pop
dec
sbb
hlt
test
sub
das
fstpl
cmp
or
sub
stos
xor
sub
push
out
stc
gs
ds
jbe
push
lahf
call
jb
jnp
arpl
clc
hlt
loopne
mov
ret
ja
pop
lods
mov
add
mov
push
cmp
sarl
bound
js
xchg
jne
into
jp
mov
mov
je
pop
inc
and
cmp
inc
push
xor
or
xchg
pusha
mov
jecxz
in
and
push
imul
sub
nop
jmp
out
mov
ja
outsl
ds
pushf
sub
or
dec
in
lahf
cs
rorl
push
cltd
push
mov
fidivl
or
adc
push
inc
loop
lea
test
pop
nop
bound
jns
incb
imul
cmpsb
hlt
addr16
xor
sbb
jb
sbb
mov
movsb
cmp
push
fmull
lahf
and
and
and
test
nop
jo
dec
cmp
ss
rolb
mov
jne
arpl
leave
ljmp
addr16
push
xchg
dec
out
es
or
test
outsl
mov
mov
test
int
pushf
ljmp
sbb
pop
out
enter
popf
data16
cwtl
mov
in
mov
mov
repnz
clc
stos
std
aas
adc
push
fdivs
or
test
mov
das
xchg
sub
fnsave
or
cwtl
pop
dec
out
xchg
hlt
sub
pushf
adc
pop
das
xor
popa
hlt
jmp
push
stos
jge
popa
int3
mov
addr16
imul
lds
daa
dec
jecxz
jecxz
jb
leave
cmp
mov
inc
lds
popa
pop
cmpsb
push
in
and
test
jp
xchg
pop
mov
in
adc
sbb
or
mov
push
inc
into
gs
sbb
mov
imull
inc
fcoml
pushf
arpl
dec
inc
arpl
inc
test
xor
push
popf
push
push
pop
cmp
outsb
push
rcr
jae
pop
fisttpl
cwtl
loopne
or
push
ret
sub
std
jo
pop
mov
incl
leave
lock
jecxz
jmp
decb
pop
mov
mov
stos
sub
pop
push
call
mov
sbb
int3
inc
cmp
call
jg
rolb
xchg
push
push
and
mov
adc
daa
cwtl
push
aad
xchg
cs
pushf
imul
push
call
or
insb
sub
mov
incb
adc
jge
mov
pop
outsl
push
dec
repnz
mov
lea
sahf
mov
dec
stos
inc
jge
sbb
dec
dec
leave
pusha
jp
xchg
lods
sbb
jle
adc
mov
mov
sub
and
pop
mov
sbb
lods
in
mull
hlt
sub
sbb
ds
pop
repz
aas
sub
ja
loope
push
es
stos
test
mov
pop
jbe
nop
sbb
xor
cld
push
sub
cmpsb
rcrl
sub
lods
adcb
or
pusha
into
sbbl
test
orb
out
sahf
push
mov
inc
dec
add
push
cmp
orl
dec
insl
fistps
outsl
xlat
cmp
les
lea
imul
pop
outsb
push
mov
cwtl
mov
add
xor
repnz
add
sbb
sub
mov
popf
push
rorb
imul
sahf
lock
repnz
hlt
lret
mov
fmull
mov
mov
movsb
shrb
pop
dec
imul
pop
push
adc
mov
pop
repnz
mov
test
ljmp
xlat
out
jbe
pop
xor
clc
addr16
add
out
xor
mov
or
inc
jecxz
addl
push
repnz
into
lock
pop
rorb
pop
je
in
mov
mov
and
sub
pop
and
dec
outsl
jnp
mov
push
ss
xchg
sub
inc
popa
xor
inc
jbe
scas
das
fidivrl
loop
ret
cmp
mov
mov
or
xchg
dec
dec
int3
and
mov
push
xor
jnp
pop
fstps
dec
jge
inc
cwtl
aam
cwtl
or
adc
jne
insl
jecxz
arpl
pop
xchg
mov
shlb
divl
lods
jmp
cltd
adc
sub
or
adc
es
sub
or
jmp
add
add
jo
mov
push
call
sbb
jo
fwait
adc
mov
ss
fnstenv
add
pop
clc
or
js
push
outsb
aam
nop
add
dec
cmp
clc
shll
jno
in
testl
fldl
test
inc
push
xchg
sub
pop
aaa
cmp
mov
jnp
fdivs
imul
adc
and
mov
dec
sub
adc
outsl
cmpsl
test
lret
fs
sub
shrb
daa
stc
fdivs
js
cmpsb
jb
mov
add
jo
xchg
mov
pop
jns
add
cmpsl
sub
pop
jnp
and
jno
jge
add
xchg
sahf
sub
js
cltd
xor
sbb
inc
lds
or
xchg
sub
out
mov
enter
popa
pop
test
jg
lret
sbb
cmpb
lea
out
dec
and
inc
jecxz
and
out
andb
aam
lea
scas
and
ja
lea
cltd
adc
push
mov
je
and
inc
lods
dec
aam
and
lods
imul
aas
mov
lock
jl
jmp
add
jge
loop
arpl
or
adc
filds
sahf
jl
call
xlat
mov
mov
push
fldcw
outsb
pop
add
jecxz
push
cltd
xor
clc
jg
in
in
mov
divb
push
ds
lods
in
ret
fisttps
mov
xor
fistl
mov
es
adc
adc
mov
test
jno
dec
and
cltd
out
mov
jb
pop
xor
sbb
fxch
push
popa
arpl
mov
fiaddl
xchg
inc
jecxz
fsubs
or
rorb
rorl
iret
rclb
int
decl
jno
push
and
jo
sbb
fmull
mov
push
out
dec
jmp
testl
and
icebp
adc
mov
sbb
scas
mov
push
ja
pop
cltd
push
xchg
sbb
dec
gs
pop
fidivs
sbb
xchg
out
nop
mov
test
out
test
into
in
rcrb
shl
xchg
sbb
icebp
int3
out
dec
add
dec
and
inc
stos
loop
sub
nop
mov
push
mov
push
sbb
mov
clc
sahf
into
leave
sbb
orl
scas
inc
jmp
call
jmp
scas
xchg
popa
sahf
pop
data16
cmpl
xorl
and
loopne
cwtl
cmp
clc
insb
rorb
and
mov
ja
sbb
fbld
fcoms
pop
sti
push
std
scas
xor
lcall
clc
std
aad
xchg
das
addr16
jecxz
rcll
aad
lods
sbb
xor
mulb
insl
rorb
jge
je
imul
and
pop
scas
loope
dec
add
mov
in
sahf
or
fadd
xor
repnz
xor
jne
mov
jns
inc
and
mov
into
iret
push
inc
outsl
fisubrl
out
mov
int3
mov
or
test
pop
mov
testl
and
pop
sub
jne
pop
pop
dec
stos
loope
push
ficompl
popa
pop
sbb
mov
sti
xor
xor
sar
mov
sbb
icebp
sbb
rcrb
arpl
test
xchg
jb
jo
dec
xchg
jns
sbb
push
sub
push
shr
push
lods
arpl
push
fdivl
mov
pop
xchg
xor
and
mov
push
or
and
in
fxtract
pop
pop
fstpt
subb
jnp
dec
cmp
scas
std
or
inc
sub
aaa
pop
cmp
ljmp
rcrl
insb
jae
mov
shrb
cwtl
loopne
inc
xlat
cmpsl
inc
dec
loop
insb
fstpl
jno
imul
jne
cmp
adc
adc
and
test
xchg
loope
lret
int
mov
add
mov
test
inc
sub
dec
lahf
push
xor
jl
in
out
inc
lret
nop
xor
test
sbb
imul
xor
out
sbb
push
mov
or
bound
xlat
mov
stos
xchg
add
arpl
addl
clc
and
out
xchg
push
imul
sbb
rol
cmp
ds
jo
sbb
or
mov
pop
pop
mov
loope
push
fdivl
icebp
mov
aad
mov
movsl
iret
fsubrl
insl
cmp
sahf
or
jbe
push
das
addr16
stc
push
dec
xchg
call
xorl
je
fwait
mov
xchg
cmp
mov
cmp
pop
pop
jb
xchg
leave
xor
mov
bound
fcmove
pop
and
or
mov
xchg
mov
neg
out
arpl
sbbb
sarb
cmpsl
sub
cwtl
loopne
aam
ljmp
pushf
out
popa
je
aaa
into
jno
rcrb
sbb
cwtl
jle
mov
xor
adc
in
mov
mov
jae
or
push
movsl
xchg
dec
sti
stc
addr16
xorb
xchg
mov
enter
ret
out
xchg
inc
faddp
fisttps
dec
imul
ret
xchg
cmpsl
xchg
daa
mov
lcall
iret
mov
push
jecxz
or
inc
push
adcb
addr16
lcall
jne
sti
nop
repnz
xor
cmp
cli
add
sub
in
enter
or
dec
icebp
xor
pusha
cmp
mov
cmp
dec
je
fs
inc
mov
pop
pop
add
hlt
xor
cmp
xor
mov
jbe
jno
inc
mov
insb
sarl
jg
pop
inc
mov
fs
pop
or
jno
mov
push
mov
out
push
lret
mov
pusha
fsubrs
int
repnz
es
adc
pop
mov
sbb
cmp
adc
in
int
inc
cltd
mov
stos
ds
stos
inc
shll
imul
call
push
test
cmpsl
mov
scas
adc
stos
xchg
mov
ret
cmc
enter
jo
adc
repnz
int3
dec
sti
clc
adc
fisubrl
outsb
mov
mov
add
outsb
add
cli
pop
cltd
inc
adc
insb
pop
call
mov
sahf
pop
not
pop
fbld
in
addr16
es
xchg
sbb
les
cmpb
notl
cmp
or
xor
jo
outsb
sub
adc
jmp
and
jb
xchg
in
pop
out
jo
inc
adc
pusha
xor
mov
mov
test
xchg
mov
push
dec
movsl
ret
xor
or
mov
sbb
pop
xor
dec
and
movsb
xor
push
iret
pop
push
stos
es
repz
jmp
mov
rorb
sbb
mov
inc
push
or
hlt
insb
lock
mov
xor
jno
cltd
xlat
pop
lock
mov
sub
aas
cltd
clc
jae
sbb
dec
ds
bound
mov
jbe
push
test
cmp
jg
sbb
dec
jl
jo
loop
push
cmp
shrl
cmp
rorb
dec
stc
rolb
add
xchg
jmp
rcrb
jne
out
mov
mov
pop
jecxz
movsb
cld
jp
and
fdivr
in
shrb
sbb
cmp
popf
and
repnz
add
push
add
in
addr16
xchg
pusha
cld
in
push
cwtl
fildl
pop
push
std
aam
lds
mov
mov
pop
jg
add
lea
aad
mov
fcomi
or
cld
inc
outsb
jp
xlat
stos
adc
push
test
lret
inc
dec
lock
fidivl
pop
dec
pop
or
dec
and
dec
aam
jne
outsb
sarl
jecxz
jp
roll
sbb
add
lahf
movsl
cmp
adc
push
and
inc
outsb
test
mov
aam
dec
mov
aaa
push
movaps
outsl
testb
mov
call
add
out
mov
fnsave
shll
shll
mov
inc
inc
les
lahf
cld
dec
pop
movsl
lahf
mov
pop
movl
jmp
xor
xor
mov
sti
int3
jp
xorb
mov
fisttps
ret
adc
imul
mov
popf
outsl
push
iret
cmpsb
cmp
lcall
popf
out
and
shll
mov
bnd
mov
cs
inc
fcmovnbe
stos
add
mov
xchg
sub
xlat
mov
and
dec
idivb
lock
cmp
ret
rep
loopne
push
lock
sti
mov
cwtl
stos
xor
insl
cld
inc
bound
pop
into
inc
repz
jle
sbb
or
pop
scas
inc
xchg
mov
ss
das
adc
insl
loopne
mov
jae
outsl
adcl
mov
dec
jecxz
in
cmc
fistpll
js
xchg
test
inc
push
mov
push
sub
loopne
lock
fsubrs
jp
xchg
jp
and
divb
mov
in
adc
sbb
ja
push
daa
pushf
sbb
jge
mov
mov
jo
test
test
hlt
push
imul
fiaddl
sbb
gs
mov
int3
popa
rcrl
fcoml
outsb
lret
js
sbb
mov
in
jo
push
jg
dec
in
pop
xchg
and
jnp
lea
push
out
inc
pop
rcll
mov
fsubl
mov
jae
sub
pop
and
fdivr
lcall
movsl
pop
andl
push
lcall
dec
push
cs
cmpsl
and
mov
or
sbb
dec
cltd
mov
dec
sbb
pop
ja
es
sub
lods
sbbb
sub
xchg
in
sub
in
test
cmp
idivb
or
rcrb
xor
dec
jecxz
push
fwait
sahf
xor
xchg
or
lahf
std
sbbl
mov
sti
push
push
stos
std
pop
lcall
and
mov
inc
cmp
fwait
push
aam
in
test
xchg
fidivrs
inc
mov
icebp
mov
pop
lds
xchg
aad
pop
into
inc
hlt
sbb
push
push
aas
movsb
pop
jge
mov
pop
ret
jle
bound
in
rcr
in
test
pop
clc
fnsave
mov
xchg
bound
or
mov
sti
jge
push
ss
orb
roll
mov
pop
aam
cmpsl
ds
jb
insb
movsb
das
cs
mov
cs
adc
pop
das
mov
or
push
fists
hlt
call
inc
inc
mov
push
faddl
xchg
cwtl
stos
jecxz
fmull
data16
scas
loop
popf
mov
adcl
outsb
out
data16
movsl
xor
fisubl
xchg
mov
fistpl
cmpsl
popa
jne
mov
inc
out
js
mov
test
out
inc
sbb
mov
enter
insl
mov
mov
sahf
sahf
jns
mov
push
mov
mov
mov
mov
fistl
lret
cmpsb
shll
insb
mov
sub
les
cmp
pop
ja
jno
lcall
es
dec
add
xchg
cmpsl
xchg
xor
xchg
sub
mov
push
sbb
movsb
mov
xchg
mov
fnsave
push
stos
dec
ret
pushf
pop
mov
out
movsb
or
mov
test
data16
adc
fsubrp
fs
push
pop
popa
cmc
mov
pushf
addr16
aam
mov
push
wrmsr
movl
cmp
pop
test
fcmovu
push
cmp
jmp
cmpsl
push
mov
xchg
test
mov
cmp
inc
out
cmp
inc
fidivrs
leave
pop
push
mov
sub
add
mov
and
mov
and
cli
xchg
cld
dec
adc
inc
or
loope
cmp
call
lret
aam
push
stos
fcmovb
jbe
mov
adc
stos
push
call
xor
loop
call
mov
nop
aas
insl
shl
lahf
mov
aam
loop
ss
add
inc
pop
dec
iret
or
mov
or
jg
out
fsubs
call
pusha
adc
leave
inc
out
lock
jnp
sbb
mov
movsl
stc
push
jmp
inc
rclb
jp
bound
dec
fisttps
rcrl
sub
adc
inc
pop
adc
loop
scas
aaa
daa
inc
jecxz
jp
and
adcb
adcb
aaa
lea
lcall
daa
push
sbb
pop
rcrb
inc
imul
pop
xchg
es
pop
lahf
push
mov
scas
xchg
cmp
sbb
ja
lahf
cmp
fmull
dec
mov
sti
xlat
inc
mov
sbb
mov
dec
inc
mov
iret
loopne
add
adc
cmp
add
loopne
test
gs
adc
int3
and
jecxz
shlx
out
dec
dec
mov
movsb
cmp
out
mov
out
and
jl
in
jp
inc
mov
test
mov
xchg
add
vaddpd
ja
test
out
testl
xchg
cmp
enter
push
stos
sub
dec
pop
push
push
icebp
mov
mov
scas
imul
fsts
inc
lret
fistl
mov
or
mov
mov
push
ljmp
mov
fsubrs
pop
scas
dec
popa
push
js
and
xor
jp
and
xchg
sub
jb
ds
inc
fldl
es
aad
pop
and
pop
cmp
xchg
pop
pushf
stos
pop
idivb
push
mov
dec
sbb
jl
ret
dec
es
and
cs
jo
and
ret
mov
movsb
mov
push
mov
stos
add
adc
rol
cs
push
mov
mov
ret
sub
insl
sbb
pop
push
ds
insb
jmp
or
dec
pop
push
xchg
cmp
push
icebp
mov
or
scas
push
scas
pavgw
xchg
rolb
pop
mov
or
jl
jnp
xchg
jl
sbb
mov
js
cmp
sub
adc
adc
or
and
xor
cltd
and
mov
xorb
mov
out
bound
popa
dec
add
mov
mov
in
push
jmp
add
inc
fidivl
lret
mov
pmaxsw
and
xchg
xor
pusha
loopne
hlt
push
mul
fwait
or
repz
cmp
dec
in
ja
push
ficoms
xchg
lahf
out
push
lahf
rcrb
pop
enter
jnp
in
fnsave
addr16
jae
ljmp
inc
pop
push
and
jg
das
sarl
sbb
or
add
jp
popf
stos
out
add
mov
imul
dec
jns
and
int3
pop
inc
pusha
and
inc
lret
and
inc
and
movb
ret
pop
clc
xor
insl
jge
in
shl
std
mov
hlt
out
in
pop
mov
and
push
stos
int3
lahf
stos
aas
daa
add
xor
dec
in
push
mov
push
and
insb
out
mov
pop
js
pop
cli
aam
sub
mov
xor
adc
inc
std
add
pushf
cli
cli
pop
cmp
lahf
jl
dec
sub
pop
mov
dec
mov
inc
push
mov
add
ljmp
addr16
cmp
add
and
cmp
pop
pop
insb
inc
popf
dec
dec
aaa
int
lcall
and
mov
es
sti
mov
and
xor
fidivrs
arpl
xchg
xor
xor
cltd
std
pop
xor
cmp
in
cmp
or
dec
dec
push
dec
aaa
mov
dec
xor
mov
xchg
push
sub
stos
jp
clc
inc
pop
cmp
lea
stc
add
mov
xor
pusha
jb
dec
cs
icebp
lahf
jl
lahf
cmp
movsb
out
mov
sub
inc
ljmp
mov
xchg
loop
out
lahf
push
mov
cmp
sti
rolb
aam
push
jmp
call
mov
int3
adc
mov
xchg
push
cmc
jne
pcmpgtd
into
mov
cmp
jno
mov
mov
or
fildl
inc
mov
push
ljmp
out
pop
fstpt
pop
cmp
xchg
in
mov
jae
sarl
test
mov
mov
or
mov
fnsave
add
xchg
out
iret
dec
jbe
idivl
in
add
inc
push
xorb
jge
lcall
xor
pop
mov
iret
ja
hlt
out
adcb
mov
mov
cmp
xlat
push
jecxz
xorl
inc
dec
dec
lock
out
insl
push
push
fsubs
add
push
xchg
cmp
fs
loopne
jp
cmp
jp
sbb
in
and
int
xor
out
fwait
push
rcll
inc
pop
bound
subl
stc
xchg
xchg
add
push
mov
pop
aam
jb
in
popa
mov
inc
sub
or
movsl
cli
jne
out
call
out
sbb
push
aaa
ss
sbb
cmp
movsb
pop
call
cmc
xchg
mov
bnd
push
jge
jb
mov
sub
les
mov
sbb
sub
pop
xor
xchg
xchg
and
cmpb
mov
scas
call
mov
notb
add
aam
mov
lea
add
lea
stos
push
mov
ss
xchg
outsl
push
icebp
inc
cmp
icebp
sub
pop
insb
movsl
aaa
fs
dec
mov
iret
mov
adc
cmp
mov
gs
lds
mov
out
mov
cmc
out
pushf
scas
cmp
fcomip
adc
orb
sub
mov
std
in
pusha
ds
xchg
mov
loop
jbe
xor
test
rcl
or
inc
pop
ja
mov
xor
in
xchg
cmc
push
lahf
ror
jge
outsb
mov
xor
imul
popa
dec
dec
shrl
leave
sahf
cs
cmp
cwtl
std
jo
or
ja
into
fistpl
dec
repnz
cmovg
je
add
mov
jb
or
jb
jne
push
adc
inc
lcall
loop
daa
outsl
imul
jne
les
or
imul
sub
out
daa
push
stos
ja
xchg
js
cwtl
xchg
cmp
aad
repz
repz
popf
xor
mov
insl
test
dec
add
lcall
stc
in
xchg
mov
mov
jmp
into
pop
enter
jno
mulb
xchg
xchg
pop
in
push
data16
nop
xor
and
insb
sbb
pop
pop
in
adcl
xchg
mov
push
inc
imul
xor
rol
adc
loope
xchg
adc
sbb
and
and
pop
push
outsl
jnp
jp
sub
sub
mov
cmp
cmp
inc
adc
mov
call
mov
test
inc
test
jo
movsl
movsb
jmp
fwait
adc
pop
sbb
add
pop
mov
pop
in
mov
hlt
and
loope
jl
fwait
jl
jge
cmp
cmpsl
scas
ret
in
dec
aaa
std
test
mov
mov
shl
fadds
in
sub
enter
pop
scas
jno
lock
add
xchg
ja
sub
fisubl
cli
push
fsubrl
jno
mov
inc
cmpsb
sub
js
lds
pop
lea
pop
mov
adc
stc
mov
pop
mov
fisubl
push
inc
jge
push
pop
mov
mov
dec
pop
enter
jb
mov
cmpsl
sub
sub
mov
sti
aas
push
push
jo
and
les
dec
ljmp
jp
inc
mov
inc
push
movsl
dec
add
xor
arpl
inc
pop
fisttpl
cmp
push
jnp
mov
push
xor
jae
fidivrl
xchg
out
stos
sahf
lcall
jo
jb
imul
pop
lahf
sbb
aam
pushf
pop
mov
daa
mov
add
xor
ljmp
push
mov
lods
mov
adc
fildll
push
mov
jno
mov
cmpsb
lock
inc
into
rcr
or
xor
and
out
std
inc
lock
add
push
inc
push
sbb
rcrb
cli
dec
data16
ds
inc
sbb
outsl
pop
lret
nop
mov
jnp
out
lea
or
nop
jl
sbb
std
adc
mov
mov
dec
xchg
sub
adc
icebp
cmp
rcrb
or
and
sub
test
fstps
jno
mov
mov
mov
xor
rclb
fbstp
stc
ljmp
pop
stc
inc
push
pop
fwait
movsl
lds
lcall
fnstsw
sub
dec
incb
jp
or
les
jo
mov
xchg
popf
and
imul
cli
push
les
mov
inc
push
cmp
pop
mov
fsubrs
aam
adc
mov
inc
pop
ror
jno
add
fildl
lds
jmp
push
jno
push
stc
ss
sbb
and
jp
jb
inc
movsb
daa
and
std
jne
in
xor
enter
data16
lret
aaa
inc
mov
stos
mov
icebp
pop
shlb
insb
pop
mov
fucom
jp
in
adc
rorl
ljmp
inc
pop
js
mov
xchg
out
mov
pop
add
push
or
ret
mov
stos
xor
stos
gs
rcrb
jne
sti
mov
cmpsl
push
or
lods
inc
dec
xchg
sub
hlt
xor
in
and
xchg
or
adc
dec
and
push
imul
fldcw
ljmp
mov
cmp
aaa
pop
jno
cmp
bound
sub
pop
sub
xchg
lcall
xor
fstpt
add
or
or
negl
dec
push
adc
sub
mov
imul
pop
xor
aaa
aas
xchg
jge
lfs
into
push
add
xor
and
dec
out
insl
cmp
push
sbb
inc
sbb
cmpsb
js
cwtl
lods
add
push
inc
stc
lock
sbbl
movsl
jae
jne
repnz
fs
stc
test
mov
or
jl
addr16
mov
fimuls
or
push
addr16
aaa
pop
xchg
scas
and
filds
test
es
mov
inc
xchg
sub
or
or
pop
inc
and
aaa
sub
xor
add
or
imul
inc
add
sub
dec
pushf
dec
push
jecxz
mov
negl
dec
jmp
dec
in
inc
test
mov
movsb
hlt
push
aam
mov
stos
sarb
mov
repz
enter
dec
out
std
test
cmp
push
mov
xchg
in
inc
sbb
out
dec
add
xor
pop
pushf
jp
ret
je
jns
inc
and
or
sbb
ja
stos
pop
adc
mov
bound
push
data16
jge
insb
popf
loope
push
stc
aas
not
xchg
pop
pusha
int
mov
cmpsl
jns
and
repz
js
cmp
sub
scas
fdivs
sub
cmp
mov
sbb
roll
cmp
ja
fdivl
insl
insb
pushf
lahf
push
insl
lret
pop
mov
or
dec
int
fidivs
inc
dec
fidivs
mov
rol
adc
pop
js
inc
pop
mov
xlat
insl
ror
cmp
inc
lcall
dec
pop
inc
cmp
mov
dec
cmp
imul
cmp
xchg
cmp
inc
in
jae
dec
out
shl
adc
or
adc
and
xchg
rcr
xor
cmc
push
mov
mov
jg
lods
stos
dec
fsts
dec
pushf
xor
rolb
mov
cmpsb
add
sbb
cli
dec
xor
rorb
stc
mov
inc
pop
cmpsl
rcl
push
pop
aam
outsb
jns
shr
cmpsl
jne
adc
mov
jmp
sarl
add
add
in
mov
push
clc
nop
dec
xchg
jb
sub
outsb
mov
and
mov
jg
test
out
cmp
inc
imul
inc
sbb
adcl
jne
adc
daa
sub
adc
loope
daa
js
dec
mov
push
cmp
loop
imul
and
std
aas
ja
add
add
inc
xlat
ss
cmpsl
xlat
push
sbb
les
test
xlat
jp
mov
icebp
out
lret
mov
das
hlt
fcomi
mov
arpl
push
xor
adc
pop
lock
push
cmpsl
mov
aad
int
sbb
or
mov
or
aad
and
add
mov
mov
test
xchg
lcall
pop
push
push
in
arpl
jnp
xor
movsl
repnz
add
xchg
sub
xor
iret
xor
lods
mov
add
sub
imul
add
sub
or
aam
test
xchg
cmpps
outsl
jg
frstor
lea
sub
ficoml
rcl
cmp
pop
push
repnz
mov
adc
mov
add
mov
insl
sbb
int
dec
fs
aas
pusha
sbb
mov
inc
lret
std
and
outsl
dec
pop
mov
mov
lods
imul
jb
in
xchg
inc
cmp
movsb
movsb
call
and
lret
and
adc
push
mov
sub
cmp
add
cwtl
shlb
push
push
mov
adc
xor
jns
dec
pop
pop
sub
mov
xor
adc
mov
fidivrl
mov
lcall
outsb
jl
xor
sbb
sarl
pusha
mov
push
adc
dec
cmp
mulb
dec
xchg
pop
mov
lahf
aam
cmpsb
xchg
cmp
dec
xchg
push
inc
jg
pop
insl
xchg
sahf
jle
cmpb
push
sub
mov
fwait
cld
push
int3
or
cmpb
stos
push
mov
fsubrl
xor
xchg
cld
test
test
or
lods
ficoml
in
lods
or
mov
lahf
ret
pop
add
pop
dec
int
xchg
jp
imul
faddp
mov
jmp
xchg
pop
lock
add
jle
pop
test
fsubs
sbb
jae
dec
dec
add
data16
and
adc
jp
pop
pushf
push
frstor
sub
loope
negb
mov
jae
xor
sbb
rcrl
jl
lret
movsl
clc
jmp
imul
sbb
loop
ret
adc
and
mov
push
data16
xchg
sbbl
fwait
js
cmp
mov
cmpsb
les
cmp
pop
out
push
rcrl
inc
sub
push
or
push
sbb
xorl
dec
mov
loopne
jecxz
pop
push
cmp
ljmp
mov
xor
movsl
out
xchg
xchg
sub
inc
pop
into
and
xchg
push
pop
lret
shl
mov
stos
ja
in
jl
dec
sub
xchg
jns
inc
jp
in
and
lods
inc
mov
ror
stc
jg
in
jmp
or
xor
into
lcall
push
or
in
insb
les
mov
push
pop
and
cmpb
push
xchg
xor
and
loop
sub
mov
adc
clc
push
dec
pop
out
jp
pop
loope
mov
xchg
push
xchg
mov
cmpsl
scas
int3
aam
movsb
push
dec
adc
leave
data16
xor
add
mov
test
sbb
decl
push
in
out
xor
adc
mov
jae
xlat
mov
in
add
and
lods
push
xor
pop
mov
sbb
clc
jl
loope
and
inc
push
dec
fisubrl
cwtl
fdivrs
lcall
jo
sti
fadd
test
dec
pop
cmp
push
push
les
or
jmp
nop
outsl
push
in
dec
jno
inc
pop
fmuls
xchg
xlat
clc
repz
mov
jnp
inc
fucomp
mov
rcrb
or
imul
adc
pop
mov
loopne
jmp
add
insl
xorb
ljmp
cmp
xor
jo
adc
mov
sbbb
push
push
flds
jmp
ss
dec
inc
les
in
mov
in
pop
lret
xlat
xlat
or
mov
lock
addl
icebp
mov
mov
lahf
test
fabs
xchg
out
fs
jecxz
outsb
data16
movsb
imul
lods
mov
cltd
sub
cmp
sub
in
stos
jns
std
scas
mov
mov
aad
ljmp
pop
xor
or
je
fcmove
call
loope
in
dec
jb
cmp
in
fs
shr
pop
loope
test
push
mov
inc
push
lock
dec
fwait
arpl
push
gs
and
lods
sbbl
jge
and
jge
das
or
mov
fnstenv
xor
fs
inc
fdivrl
push
lods
rcll
add
and
and
xor
movsl
cmp
mov
pop
fsubrs
dec
out
mov
jns
adc
iret
lret
pop
jno
mov
ds
and
not
jge
and
jp
rcll
cs
ret
addl
pop
sbb
pop
movsl
xchg
and
stc
push
outsb
outsb
or
mov
inc
fnsave
inc
xchg
push
fwait
enter
xor
daa
outsl
adc
outsb
lds
add
jmp
dec
hlt
jg
xchg
repz
mov
mov
jno
adc
cmp
loopne
jbe
arpl
jno
rclb
daa
dec
scas
cmc
repnz
gs
in
and
inc
xchg
jno
popf
xor
sbb
xor
cltd
cmp
fnstcw
cmp
mov
rcr
mov
mov
test
sub
enter
inc
sub
or
or
inc
mov
addr16
fstpl
adc
icebp
int
push
inc
and
adc
add
cmpsb
sub
cmpb
sbb
mov
or
dec
adc
adc
jno
and
mov
pop
es
int
mov
push
pop
jno
pop
mov
testl
aad
xchg
dec
mov
scas
test
int
outsb
and
mov
dec
cmc
repz
popf
shrb
dec
push
aam
lods
mov
or
outsl
push
dec
mov
mov
lods
or
jmp
cltd
clc
xor
frstor
out
adc
je
xor
xchg
dec
sbb
push
add
sbb
push
inc
fists
mov
loopne
jnp
shl
mov
fisttps
inc
cltd
sub
rcll
jge
mov
push
insb
stc
ss
jo
sbb
outsb
rcrl
xchg
inc
adc
gs
aas
ds
js
cmp
adc
xchg
pop
inc
mov
dec
ljmp
push
in
add
add
jge
pop
cmp
dec
inc
aam
pop
dec
cwtl
test
in
ds
loope
ret
aas
loopw
fsubr
pop
out
test
sub
push
inc
cwtl
jne
dec
inc
cmp
xchg
jmp
cmp
cltd
fcompl
cmpb
or
nop
jl
mov
imul
repz
jg
pop
insl
icebp
mov
and
xchg
jbe
cli
loope
adc
pusha
inc
mov
insl
and
xchg
mov
js
or
jg
cwtl
xchg
sub
push
inc
xor
adc
scas
test
lret
inc
popf
and
push
in
mov
test
lds
jbe
sub
dec
test
adc
mov
dec
mov
in
loop
ficoms
xchg
gs
lock
aas
pop
hlt
test
stos
pop
cmp
lock
mov
jne
dec
std
cmpsb
mull
mov
inc
sbb
lcall
imul
mov
mov
xchg
movsb
aas
rcll
mov
enter
stos
cmp
mov
sbb
mov
push
stos
dec
jmp
cmp
sbb
aas
push
jp
dec
pop
xchg
popf
pop
cmpsl
mov
out
pop
repnz
cmp
dec
lcall
pushf
imul
fsubs
lcall
mov
fidivs
mov
sti
in
mov
stos
jns
rcr
push
enter
sbb
dec
icebp
nop
xor
out
imul
cli
pop
fyl2x
xchg
pusha
gs
popa
rol
dec
jae
sub
lret
push
leave
push
mov
pusha
lret
mov
mov
sub
xchg
sbb
inc
fdivl
lret
fidivs
jmp
lahf
xchg
push
or
rcrb
inc
aaa
jg
and
gs
and
fdivl
xlat
arpl
pop
cmpsl
in
std
add
pop
mov
loopne
inc
mov
push
xchg
jns
dec
and
lods
cld
adc
gs
jb
cmp
cmp
jle
repz
pop
inc
notl
sti
aaa
negb
in
pushf
inc
push
into
push
mov
mov
jb
fbld
pusha
testl
faddl
icebp
push
jecxz
lods
sub
mov
cmp
or
sbb
bound
sbb
cmp
cmc
data16
inc
ss
adc
mov
push
lcall
cli
mov
mov
fstps
sahf
xor
sti
testb
movsl
adc
sub
mov
mov
ret
testb
xor
cmp
pop
lea
ret
loope
add
inc
sub
outsb
inc
test
add
popa
repz
cmpsl
push
popf
sbb
sub
xlat
adc
push
mov
es
adc
adc
push
das
icebp
inc
pusha
iret
cmp
stos
nop
or
or
mov
cmp
orl
insl
ficompl
ret
repnz
ret
xchg
aam
add
ret
mov
or
rcrl
loop
hlt
inc
dec
movsl
jl
sub
dec
cmp
fsubp
xlat
imul
inc
jne
out
sbb
push
cmp
fsubrs
mov
add
xor
xchg
mov
lds
movsb
stc
testb
inc
jmp
inc
cld
pusha
std
insb
fs
mov
xor
sub
pop
mov
and
fidivs
outsl
push
adc
pop
mov
lret
into
lahf
cmp
xchg
push
dec
in
cmpsb
xor
call
and
int3
nop
sbb
clc
stos
inc
ljmp
dec
jecxz
add
adc
mov
xor
dec
movsl
lret
dec
jecxz
jge
das
cmp
adcl
sbb
sub
scas
imul
mov
jnp
enter
dec
fs
xchg
xor
adc
mov
popf
sub
ljmp
dec
ss
sbb
or
sub
xor
jno
sahf
jno
orb
pusha
fsubl
mov
shl
fs
cmc
and
mov
lahf
mov
shll
lcall
lcall
lea
test
stos
pop
sahf
sarl
xor
cmp
lock
sarb
cmp
rcl
popf
gs
xchg
jne
shll
adc
dec
leave
pusha
jae
push
jmp
fwait
lret
jle
in
sbb
iret
dec
add
xchg
pop
cmpsl
dec
xor
cmp
sub
sbb
fiaddl
mov
out
test
into
call
jl
jg
js
xor
testb
movsb
clc
fcomps
ret
sbb
sub
xchg
jmp
out
rolb
and
xor
push
cwtl
stos
mov
jae
dec
mov
int
jl
popf
leave
mov
pushf
lahf
lods
inc
leave
jg
sub
arpl
inc
int
mov
shlb
mov
add
fnstenv
pop
fdivs
pop
jl
cmp
dec
iret
aas
pop
dec
call
jle,pn
push
jb
lds
sbb
in
sbb
pop
jbe
mov
xor
clc
aaa
jno
mov
add
push
add
shll
xlat
lea
inc
push
call
fsts
ret
popa
cmp
scas
push
sub
fisubrl
xor
lods
vpcmpgtw
addb
jbe
movsb
cmp
cwtl
cmp
subb
aaa
xchg
dec
xor
aam
shl
sbb
sbb
pushf
and
mov
out
stc
sbb
popf
daa
imul
movsb
fmulp
lcall
fbld
mov
imul
push
push
call
popf
pop
add
or
out
cwtl
dec
out
jle
mov
mov
mov
jo
into
inc
ret
pop
sbb
or
shll
adc
jle
dec
mov
mov
mov
xchg
nop
fcoms
pop
nop
divb
fimuls
je
jbe
btc
test
jmp
jg
out
ffreep
sarb
push
aas
popa
add
jo
inc
inc
aaa
test
adc
adc
pop
mov
cmp
out
jl
or
cmp
cmp
loop
mov
sbb
imul
ja
pushf
xor
jb
cld
lret
pop
test
std
shr
out
loop
jae
xor
scas
mov
pop
subl
push
mov
out
ljmp
pop
jge
sub
pop
or
rcrb
jg
sbb
aas
pop
jae
pop
or
adc
jge
cli
cmp
xor
test
cmp
shrl
cltd
ds
psubsw
xor
loop
in
push
or
add
mov
into
or
pop
cmp
test
sub
cmp
xor
push
sbbl
jbe
enter
jbe
adc
mov
outsb
push
inc
les
inc
xlat
and
or
leave
add
mov
xchg
sti
lret
bound
push
aam
cltd
loopne
and
aaa
stos
shrb
enter
mov
decb
jo
add
test
xchg
shl
jle
inc
and
dec
push
inc
loop
push
sub
inc
inc
mov
aas
mov
dec
mov
push
hlt
mov
addl
cli
hlt
xlat
insl
stos
jle
adc
hlt
mov
les
jl
movsb
push
call
fsubrl
and
arpl
js
movsb
shll
jbe
cmpsl
decb
mov
stc
adc
push
mov
xchg
mov
inc
lcall
sub
leave
xor
cmp
rorl
add
das
inc
ljmp
lahf
rorb
push
push
pop
in
inc
dec
sar
sub
mull
push
mov
jne
mov
push
mov
push
enter
xchg
div
xchg
inc
push
clc
sub
add
xor
in
cmpsl
sbb
xor
mov
pop
and
lods
and
jg
dec
dec
dec
call
dec
push
adc
popf
aaa
mov
lcall
pushf
je
cmc
xchg
inc
mov
inc
mov
lret
inc
push
into
xor
negl
int3
jo
sub
adc
in
lods
inc
out
dec
ss
andb
sti
cli
and
adc
adc
push
mov
jge
sbb
aaa
test
dec
xchg
xchg
imul
pop
cmp
mov
rcr
cmpsb
inc
pop
or
bound
data16
xlat
adc
mov
in
xlat
pop
xor
xor
imul
lds
gs
adc
push
cmpl
pop
enter
cmp
pop
jb
xor
sub
out
imul
xor
popf
add
xor
dec
js
dec
stos
lcall
loopne
jle
mov
lea
outsl
nop
aas
call
cmp
push
and
and
pushl
negl
push
dec
lahf
cmp
ss
ja
adcb
push
insl
push
loope
popf
jg
dec
call
or
pop
pusha
xchg
pushf
daa
call
mov
call
mov
sbb
ljmp
sbb
inc
and
mov
jecxz
or
aas
mov
outsl
mov
enter
out
mov
mov
push
mov
andb
js
movsl
icebp
cs
xchg
add
repnz
adc
insb
mov
jbe
or
jne
movsb
scas
dec
mov
sarl
mov
out
imull
ljmp
fnstcw
fs
iret
push
mov
movsb
outsl
mov
std
sbb
mov
mov
jle
mov
jb
scas
cmp
imul
out
sbb
cs
adc
pushf
jo
scas
cltd
or
rorl
adc
adc
sub
out
ja
inc
scas
mov
jmp
dec
sub
sbbb
or
inc
jl
in
stos
lock
jle
enter
fstp
sub
mov
hlt
mov
pop
adc
testb
dec
mov
push
inc
cmpsl
or
xor
int3
and
lock
dec
mov
xchg
cmp
push
xlat
hlt
jmp
or
mov
scas
push
push
push
out
inc
or
inc
xchg
iret
or
push
push
es
add
lods
loopne
pop
pop
add
or
xor
add
push
into
ret
jle
fnstcw
fs
ret
lret
inc
frstor
popa
sbb
das
pop
mov
mov
mov
dec
std
inc
push
aaa
sub
inc
insb
sbb
jnp
lcall
loope
std
cltd
jnp
test
xchg
popf
je
mov
pop
push
sub
pop
or
cmp
mov
ret
cld
inc
in
xlat
jb
xlat
cwtl
pop
pop
or
xchg
jmp
or
mov
fwait
sub
int3
jns
cmp
aam
xchg
lea
and
sbb
out
inc
cmc
mov
push
scas
sahf
test
sarb
push
fdiv
dec
cmp
inc
add
cmp
push
mov
xchg
add
mov
jecxz
lret
xor
shrl
jp
loope
jne
scas
ret
xlat
push
cld
mov
in
xor
cmp
dec
pop
lahf
dec
push
pop
dec
mov
push
in
jo
sti
stos
aas
sbb
push
jmp
xlat
repz
negl
add
jno
jle
mov
add
jb
inc
pushf
push
xchg
dec
inc
xor
xchg
xchg
std
insb
pop
push
clc
lods
and
lcall
in
inc
movsb
sbb
lret
mov
dec
jae
push
jmp
add
inc
and
jb
sub
cmp
pop
xor
cmp
das
addr16
pop
pop
ret
cmp
mov
rclb
inc
pop
rcrb
cmc
fcmovnu
cmp
sub
cmpsb
xchg
fwait
imul
sub
int3
jae
imul
mov
cmpsl
orb
jnp
jnp
cmp
outsb
stos
enter
lods
xchg
popa
add
dec
cmc
add
push
in
divb
in
stos
push
or
cmp
xchg
dec
sbb
fincstp
adc
into
lea
mov
jmp
out
inc
mov
fidivl
push
sub
push
movsl
mov
gs
fwait
cmc
imul
mov
push
jne
pop
mov
lcall
leave
lret
pop
xchg
gs
lret
stc
inc
stc
sbb
popf
xor
adc
fidivl
mov
adc
sub
sbb
fwait
push
lods
mov
loop
cmp
dec
xorl
xchg
stc
repz
adc
stos
stos
xor
sti
sbb
push
ja
cmp
enter
and
shr
jge
sub
push
adc
jb
shrl
pop
repz
lahf
call
mov
lods
fisttpl
mov
lcall
cli
pop
fnstcw
aad
outsl
sahf
inc
mov
outsb
shl
mov
jl
dec
hlt
pop
dec
or
cwtl
sbb
push
out
cmp
pushf
xchg
in
adc
and
daa
rcrl
std
inc
outsb
ss
int3
rolb
int
inc
mov
fsts
enter
xchg
pushf
adc
adc
test
mov
xchg
mov
js
cli
push
sub
loop
dec
mov
ds
mov
adc
repz
cmpsl
lahf
clc
repz
pop
mov
xor
sub
mov
jg
pop
cmp
ret
xchg
sbb
in
bound
xchg
sub
fldt
mov
je
lods
and
xchg
mov
lods
mov
xchg
out
or
and
xchg
cwtl
mov
adc
out
cli
mov
add
add
ret
mov
push
mov
or
mov
add
mov
hlt
scas
sbb
lahf
xchg
mov
push
sbb
jbe
shrb
fnstsw
orl
jo
arpl
clc
adc
pop
stc
jbe
icebp
xchg
imul
dec
ficoms
lret
sarl
dec
pop
cmp
aam
mov
pop
mov
cmp
xor
jo
int3
mov
enter
jl
bound
pop
icebp
pop
iret
call
adc
stc
adc
inc
ljmp
push
inc
enter
test
or
sti
pop
out
pushf
add
lds
mov
and
and
inc
cli
xchg
mov
mov
sbb
cmp
fidivrl
outsl
fucomip
cmp
xor
cmpsl
jp
xor
and
xchg
mov
stos
and
xchg
in
lods
push
jl
fidivrl
sti
or
bswap
pop
sub
add
mov
mov
ds
jb
push
lret
jns
in
jle
std
pop
dec
cmp
xchg
pushf
xor
adc
lods
xchg
xor
cmpsb
mov
mov
adc
arpl
js
push
in
test
pop
mov
lahf
sub
pop
pop
push
mov
xchg
xor
jmp
and
dec
sub
dec
insb
mull
sbb
xor
jnp
inc
scas
cmpsb
jl
jns
aam
scas
cmpb
cli
mov
xchg
lods
push
shrb
fidivrs
rorl
enter
pop
neg
sbb
clc
jne
aaa
clc
addr16
ss
cmpsl
cmp
sbb
js
pusha
or
stos
mov
orb
cwtl
mov
pop
and
mov
insb
jb
gs
fisubrs
fiadds
mov
gs
lret
inc
inc
stos
cmpsb
loopne
jl
or
xchg
cmp
mov
add
in
icebp
dec
iret
lret
addr16
into
xorl
rcl
dec
repz
jno
xchg
aam
mov
fidivl
jno
andb
bound
ret
shr
arpl
mov
hlt
xor
cmpl
sub
mov
sbb
out
or
mov
bound
and
push
jne
out
mov
pop
out
mov
adc
inc
adc
cltd
ljmp
inc
repnz
dec
hlt
add
cmp
xchg
push
xor
xor
sub
lret
adc
xor
sahf
push
popa
xor
adc
jb
ljmp
push
push
aaa
clc
cmp
cli
orl
sbb
push
adc
aaa
stc
js
aaa
jmp
sub
daa
adc
outsb
sub
gs
pop
xchg
jecxz
inc
mov
scas
jge
les
stos
mov
mov
mov
movsl
cmp
pop
ds
arpl
les
inc
fidivl
imul
int3
or
roll
js
fs
sbb
sbb
popa
or
outsb
push
push
jl
icebp
pop
je
pop
cld
movsb
shrb
int3
xor
add
xor
loop
in
xchg
insb
and
sub
repz
lods
aam
orl
mov
xchg
mov
inc
push
cmp
mov
imul
out
cmpsb
sbb
hlt
jbe
out
sbb
andb
pop
mov
cmp
fdivrs
ficomps
inc
push
jle
ljmp
enter
jecxz
add
xor
scas
cmp
loope
jns
ret
inc
nop
xor
aaa
out
cs
repz
ss
pop
movsb
and
jns
mov
in
not
inc
add
pushf
test
sub
mov
idiv
and
cmpsb
jb
arpl
es
mov
ljmp
addr16
push
mov
cwtl
fwait
xchg
jge
arpl
sub
push
push
mov
test
pop
jle
mov
jmp
cmp
mov
sbb
iret
dec
xor
outsl
pop
sbb
jle
mov
aad
xchg
test
aaa
dec
imul
movsl
ret
pop
imulb
fnsave
movsl
in
jbe
xchg
test
push
repz
in
cmp
loop
repz
stos
mov
fisttpll
lea
mov
dec
mov
icebp
push
sub
jecxz
std
enter
mov
decl
fadd
mov
stc
nop
hlt
aas
dec
scas
jno
pop
push
lahf
aam
call
sbb
fstps
push
mov
sub
lea
in
xchg
cmp
orb
pop
test
adc
mov
xor
daa
insb
xchg
add
outsb
jns
jno
clc
xchg
sub
sbb
sahf
mov
cwtl
or
cmpsb
scas
shl
or
pop
in
inc
mov
out
icebp
mov
shl
cmc
mov
xchg
sub
add
mov
mov
xor
fmull
cmc
std
push
fidivs
popa
xor
pop
lahf
insb
xchg
int
fs
pop
insb
test
xchg
shll
add
in
adcl
pop
pop
insb
jne
out
push
lcall
pushf
loopne
push
aas
xor
cmp
inc
fiaddl
cli
into
pop
ss
cmp
mov
lret
inc
cltd
cmp
push
and
fwait
inc
loop
in
jmp
xchg
aas
push
sahf
lahf
out
outsb
sahf
in
push
out
fimull
clc
xchg
imul
lcall
bound
sarb
adc
mov
bound
or
push
push
mov
cmp
lahf
xlat
push
in
xlat
cmp
cs
test
sbb
ret
repnz
pop
pop
cmp
into
aad
fwait
daa
mov
inc
sub
jno
inc
mov
xlat
and
sahf
pop
call
push
add
push
in
cld
and
inc
ljmp
pop
faddl
stos
icebp
lods
les
xor
jge
jnp
and
mov
cmp
push
or
add
jp
enter
xchg
sbb
jmp
out
andl
jne
or
shlb
cmpps
jno
mull
pop
cmp
fidivrl
aas
mov
add
int
xchg
adc
fisubs
mov
popa
popa
xor
test
enter
in
push
sbb
inc
xor
jmp
xchg
in
pop
jno
sahf
jge
push
cmp
xchg
push
fcompl
add
outsb
stc
xchg
cltd
pop
cmc
adc
rcrl
cmc
sar
cmp
adc
mov
mov
enter
push
inc
push
jae
dec
cli
push
jp
and
stos
mov
pop
fldenv
mov
inc
rcl
cmp
sbb
hlt
push
dec
cmp
cwtl
into
enter
cld
pop
aad
jg
dec
dec
push
cmp
mov
jmp
aad
out
fdiv
movswl
pop
loope
js
movsb
and
pop
or
sub
mov
ljmp
dec
sub
faddl
aam
in
or
cmp
cmovg
mov
pushf
mov
sarb
into
out
and
xchg
pop
cmpsb
orl
lea
and
cltd
mov
mov
sti
inc
test
test
push
push
stos
pop
insb
jne
adcl
fiaddl
imul
repnz
mov
in
mov
into
and
jecxz
mov
jl
push
cwtl
xchg
jns
or
jg
test
in
daa
push
mov
sti
cmpsl
lods
jl
push
mov
cmp
or
and
xchg
fnclex
xchg
jecxz
sbb
call
and
sbb
lea
pusha
adc
hlt
inc
pop
xlat
dec
leave
je
pusha
sbb
sbb
cld
daa
shll
or
shrb
out
xchg
sti
push
loop
add
xchg
sub
sub
jbe
out
mov
cmp
xlat
int
mov
sbb
call
jl
sbb
jmp
or
aad
or
loopne
xor
cs
cmp
lret
xchg
test
lret
pop
inc
addr16
mov
jne
dec
sub
ds
int3
ja
fs
fnstcw
lret
sarl
arpl
mov
jg
aad
add
dec
cmp
jno
inc
rcrl
lea
mov
push
ljmp
xchg
dec
and
into
or
sbb
sahf
sbb
shll
shl
repz
push
or
pushf
out
sbb
mov
jae
lret
push
sbb
dec
mov
pop
in
fsubs
scas
mov
loopne
or
add
cmp
mov
test
jo
mov
push
xchg
add
bound
jge
repz
adc
sbb
loopne
insl
sub
push
lret
sbb
pop
adc
hlt
mov
cmp
jne
mov
cmpsb
rclb
inc
pop
jg
inc
and
les
popf
pusha
adc
and
push
sub
mov
outsb
loopne
or
cmp
in
daa
in
lds
sub
hlt
pop
pop
cmp
dec
mov
inc
cmp
bound
mov
dec
or
int
add
push
add
inc
fistpll
sub
das
cmp
repnz
rclb
xor
pop
mul
pusha
or
adc
fbld
rorb
push
mov
out
in
jae
pop
dec
lods
mov
adc
imul
gs
mov
jb
push
pop
adcl
xor
nop
push
add
cmp
int3
fmulp
xor
mov
sbb
int3
xor
cmp
pop
cltd
xchg
sub
sub
shrl
lods
sub
fidivrs
adc
and
xor
cwtl
addb
xor
or
movsb
fcoms
inc
and
add
cltd
das
or
mov
aad
push
popa
and
xchg
ret
cmpsl
cltd
lock
mov
jnp
ja
dec
push
xchg
inc
lea
lcall
add
inc
pop
in
popa
push
push
loope
test
pop
clc
sahf
jp
fisubs
mov
push
mov
shl
xor
sbb
mov
ds
nop
sarl
jecxz
lock
mov
ljmpw
or
lret
cmpsb
xchg
addr16
fcoml
push
int
add
pop
nop
push
orb
sahf
xor
dec
cli
loopne
sub
xor
push
mov
mov
repnz
pop
xor
idivl
scas
pop
add
push
or
mov
cld
ficomps
or
das
int
or
pop
lret
lds
xor
dec
cmp
addb
lods
mov
mov
addr16
jns
cmp
sub
insl
cmp
negl
push
pop
cli
pushf
xchg
mov
mov
mov
adc
cltd
inc
sti
push
rclb
mov
insl
or
xchg
pop
cmpsl
or
dec
xchg
lods
out
pusha
shl
or
sbb
inc
mov
dec
ljmp
sbb
pop
dec
dec
mov
pop
in
mov
fadd
pop
dec
enter
push
gs
xchg
daa
lret
pop
pop
fisubs
jne
inc
xchg
mov
in
shll
sahf
inc
mov
pushf
lods
loope
inc
mov
loopne
into
ljmp
lret
cmp
mov
scas
cmp
add
inc
xor
mov
jns
lock
jp
cmp
pop
sub
jl,pt
mov
mov
and
lret
or
pop
loop
xchg
mov
icebp
pop
aas
adc
mov
movsl
imul
insl
loopne
mov
xor
inc
mov
fnstsw
in
mov
enter
mov
pop
lret
lods
xchg
cli
insl
jmp
mov
fistps
clc
cmp
adc
lcall
jno
arpl
fs
mov
loope
push
stos
subl
mov
jo
dec
rep
dec
arpl
xor
lock
into
sub
xchg
pop
je
adc
adc
insl
cltd
scas
cmp
cs
adc
pop
lods
addl
les
mov
jno
jo
sub
out
out
pop
push
iret
and
cmp
imul
cmpsl
push
adcl
fisttps
adc
cld
cmpsb
add
sub
aaa
jno
je
push
sarl
test
jle
jp
inc
out
mov
scas
add
xchg
push
xchg
repz
mov
ds
mov
sbb
cs
xor
sub
push
ds
int
jno
stos
jmp
jbe
push
mov
lea
test
rcrl
sub
aas
rcrl
rcl
add
faddl
in
rcll
int3
and
add
xor
gs
andl
outsl
bound
fdivrs
xor
outsl
loop
lods
lret
cmp
repz
call
or
lahf
testl
push
mov
test
imul
loop
popf
lcall
std
pop
pop
aas
xor
add
inc
sarl
sbb
cmpsl
repz
mov
sbb
sbb
lock
ret
hlt
data16
xor
dec
mov
into
ds
stos
pop
push
in
add
aas
scas
in
mov
lods
rol
sub
sub
pop
pop
pop
fsubrs
lcall
sbb
push
lock
jnp
push
out
cmp
and
pusha
repz
popf
push
push
cmpsb
fs
inc
xor
jmp
imul
xor
jge
pop
movsl
push
movsb
fiadds
sub
gs
push
sbb
inc
lcall
mov
push
clc
inc
dec
sbb
lret
imul
jle
cs
lahf
stos
or
fstpl
cmpsb
push
mov
stc
and
mov
fsubr
inc
inc
int
add
fldcw
lret
push
jecxz
sbb
or
jmp
xchg
add
rclb
jo
pop
pop
mov
sbb
ljmp
cmpsb
xchg
inc
jle
hlt
outsb
add
add
daa
ja
push
jge
sub
or
in
jmp
test
adc
js
je
xchg
ja
xor
test
je
add
int
cltd
arpl
test
dec
mov
xchg
lock
jo
loope
stos
fdivrs
adc
lcall
inc
jne
aad
je
das
xor
cmp
xchg
mov
mov
lock
sarb
aam
addr16
pop
mov
out
pop
xor
rcrb
add
mov
mov
shl
pop
jbe
rcrl
push
dec
insb
xchg
sbb
fsubrs
cmp
hlt
push
push
dec
lock
les
out
pusha
leave
cmp
push
push
jg
clc
aam
outsl
add
jg
dec
inc
in
cltd
jnp,pt
dec
pop
ds
adc
sbb
add
push
insl
pop
mov
inc
and
pop
icebp
inc
in
xchg
push
fs
repnz
inc
mov
adc
gs
call
aad
push
xchg
in
adc
test
xchg
mov
imul
xchg
sbb
xchg
loop
test
mov
jb
ja
sbb
cmpsb
xchg
pop
mov
pop
pop
add
idivl
jmp
sub
mov
popf
sub
push
lods
out
fadds
fistl
xor
jnp
das
mov
lcall
push
scas
call
push
add
push
ss
andl
jmp
sbb
pusha
enter
mov
jl
jecxz
xchg
dec
idivb
andl
cmp
popa
call
push
cli
mov
jno
cli
test
dec
jle
xchg
mov
xlat
mov
and
jb
dec
sub
pop
mov
dec
push
sub
cmp
jnp
lcall
jg
pop
or
cmpsl
outsl
insl
hlt
shrl
cmc
hlt
addr16
ret
jle
and
aad
fldl
mov
lock
push
popf
int
dec
sub
xchg
push
lock
cs
std
mov
push
cmpsl
and
movsb
push
dec
mov
loope
dec
fstpt
inc
ljmp
sbb
pop
dec
out
shlb
add
xorl
pop
sub
loop
cmp
dec
lcall
jne
and
push
rolb
jno
cmc
stc
je
xchg
les
mov
push
hlt
stos
cmpsl
inc
jge
mov
pop
sbb
std
xor
shlb
stos
mov
pop
inc
push
outsb
movsl
dec
sbb
mov
imul
dec
xchg
addr16
jecxz
mov
in
add
jo
jbe
jl
and
xchg
ljmp
sub
push
sub
pop
cmp
and
adc
or
ljmp
add
clc
loope
or
sbb
mov
aam
fcmove
jg
cmpsl
shlb
xchg
insl
cmpsl
ds
mov
add
dec
popa
sbbb
inc
gs
add
xchg
jne
lcall
in
sub
jno
dec
mov
push
jecxz
ja
shl
mov
dec
cmp
mov
mov
push
pusha
mull
dec
jle
loop
scas
push
int
and
in
out
pop
fcomps
dec
scas
jno
cmc
aas
push
sbb
fs
aaa
test
sbb
cmp
into
lea
jno
out
xchg
xor
xchg
sub
enter
cmpsb
pop
push
mov
inc
call
xor
or
lcall
push
cli
cltd
test
sub
stos
xor
lds
gs
rcrb
cmp
sub
shrl
lret
xchg
and
lods
sub
pushf
lea
xor
sub
sub
dec
adc
cs
sbb
lahf
mov
mov
cld
mov
repz
leave
jp
pop
repz
cmpsl
push
sub
negb
mov
cmp
das
sahf
pop
sti
pop
and
dec
leave
int
imul
aaa
pop
pop
ret
fmull
dec
inc
cmp
pop
and
sub
jp
rcrb
add
lods
mov
mov
pop
cmp
jecxz
jae
fdiv
outsb
ficoml
jge
inc
lods
and
das
icebp
mov
out
popa
lea
mov
mov
xor
sbb
cld
mov
lea
hlt
popa
fdivl
pop
pop
lret
push
add
push
mov
or
xor
xchg
sub
jle
sub
cmp
cmpl
xor
cs
jmp
pop
xchg
idivb
lret
out
xor
rclb
push
add
pop
jge
xchg
cmp
fucomi
mov
pop
movsb
add
jne
js
mov
inc
test
popf
sbb
daa
xchg
mov
inc
sub
sbb
js
ljmp
pop
pop
aaa
inc
inc
mov
inc
xchg
int3
add
aas
push
dec
dec
nop
push
push
mov
cmpsl
mov
mov
aas
xchg
sarl
add
loop
push
mov
push
aas
mov
mov
int
jae
push
sub
gs
sbb
daa
or
fidivl
fnsave
paddq
sbb
mov
dec
pop
js
sub
sub
mov
scas
lds
cmp
pushf
fsubrs
dec
lods
add
sub
and
leave
and
cli
adc
inc
popa
xor
mov
xchg
dec
mov
mov
mov
mov
and
arpl
push
pop
sti
dec
add
cmc
cli
in
cld
mov
mov
pusha
cmpsl
ljmp
jae
stos
adc
in
enter
sbb
pushf
popa
xorl
dec
add
int
mov
mov
sbb
shll
mov
loopne
jecxz
in
cmc
or
test
lret
adc
int
push
jmp
dec
jmp
push
inc
aam
inc
mov
pop
ljmp
imull
jno
mov
xchg
pop
fcoms
add
pop
jne
lahf
popf
lods
enter
aam
outsl
jnp
popa
js
push
push
adc
jb
jne
xor
mov
shrb
pusha
cmp
mul
test
lock
pop
jae
shll
adc
cmpps
enter
pop
sub
sub
sbb
mov
insb
inc
rorb
div
mov
jo
jecxz
out
xor
aaa
in
push
mov
mov
incb
pop
sub
outsl
loop
imul
ja
push
sub
add
push
pushf
inc
fldl
xchg
subb
xchg
adc
test
push
adc
negb
mov
fisubrl
mov
inc
outsl
loop
aas
adc
xchg
ss
cli
in
ljmp
ja
cmpl
mulb
mov
jmp
arpl
mov
decl
xchg
js
fidivrs
jecxz
dec
imul
cmp
inc
call
inc
stos
ret
das
movsl
push
inc
aas
rol
jo
int
mov
sbbb
jle
outsl
jmp
inc
pusha
xor
push
nop
pop
sahf
push
and
lods
out
fwait
xor
into
inc
mov
mov
inc
inc
mov
and
cltd
xor
repz
mov
push
push
insl
mov
fbld
and
mov
push
cmp
mov
xchg
mov
mov
push
mov
sub
jne
xchg
adc
inc
hlt
pop
ret
cmp
iret
pop
aas
in
cmp
insb
sub
outsl
addr16
leave
mov
dec
xlat
sub
jno
jge
jge
or
or
imul
dec
push
mov
cmpl
movsb
fwait
add
add
adc
into
sub
and
xor
xchg
shr
sub
daa
stos
mov
sbb
jg
mov
push
and
mov
mov
or
pop
es
test
sub
pop
and
or
enter
jbe
int
dec
push
jno
push
and
or
popa
cmp
push
js
mov
push
je
outsl
dec
test
test
jns
inc
mov
mov
pop
jo
rol
addb
cmp
sahf
mov
enter
insb
mov
scas
jle
mov
mov
into
outsb
out
mov
or
test
jo
sbbl
jbe
cmc
stc
sbbl
mov
adcb
xchg
das
addr16
jmp
pop
arpl
jno
stos
aaa
into
cmp
jne
fists
add
fstp
or
add
stc
mov
jno
push
xchg
fsubrp
xlat
sbb
test
cli
insb
sarl
jns
sbb
mov
negb
sbb
into
or
cs
mov
andl
push
jmp
dec
lock
fdivl
fistpl
cmc
sbb
jmp
sbb
adc
mov
fnstenv
cmpsl
jbe
lock
sbb
cld
stos
lds
cmpsb
lock
sbb
sbb
inc
arpl
std
lret
pop
scas
jg
sub
mov
adc
repnz
adc
pop
int3
lret
push
in
jge
stos
cmp
fldl
push
out
fcoml
cld
les
add
mov
dec
or
mov
or
jecxz
sbb
add
pop
xchg
adc
jo
arpl
dec
scas
movsl
xchg
data16
notb
add
sub
xchg
pop
ljmp
push
movsl
addr16
mov
push
sub
mov
sbb
dec
rcrl
push
lret
int3
arpl
aad
aad
std
insl
add
xchg
repz
call
pop
mov
aaa
jl
mov
sbb
mov
ja
in
sub
sahf
das
sti
int3
aad
sub
cmp
fcompl
sahf
mov
popa
call
add
into
imul
shrl
and
test
aas
fcmovnu
xor
sbb
adc
mov
adcl
lock
arpl
and
xor
mov
jbe
sbb
pop
lahf
pop
mov
dec
cld
xlat
outsb
mov
aas
push
stos
cmc
dec
pop
xor
inc
je
jge
push
mov
or
rclb
fimull
inc
jb
popa
cmp
adc
xchg
jmp
cli
mov
jno
fsubs
bound
pop
adc
cmp
mov
popa
dec
cmp
movsb
mov
mov
mov
in
cltd
lret
repnz
out
adc
add
pop
pop
cwtl
out
or
inc
and
cmp
xchg
pop
xor
popf
mov
dec
in
inc
aas
mov
dec
mov
scas
push
insl
pop
cmp
mov
jmp
pop
lahf
hlt
mov
enter
jmp
into
push
std
push
mov
std
aaa
sub
mov
rorl
addr16
push
out
cmp
lret
out
push
int3
pop
aad
data16
mov
enter
xchg
and
das
cmpsl
loope
ffree
dec
pop
mov
mov
xor
inc
adc
push
mov
data16
lods
sub
adc
in
jmp
sbb
jmp
scas
inc
nop
mov
ret
jnp
fxch
data16
jmp
stos
insb
cmp
leave
cmp
push
sbb
fidivs
pop
or
fsts
xor
add
or
fsub
dec
decb
insb
sub
cmpsb
lock
dec
repz
mov
rcl
mov
sbb
lock
rep
out
popf
ja
mov
and
arpl
jae
inc
test
inc
lods
loopne
xor
or
mov
jne
mov
or
or
sbb
insl
les
or
and
cli
cmpsl
movsl
test
sbb
push
cld
push
push
fcmove
enter
mov
andb
xor
jns
inc
fstpl
es
cli
or
xor
mov
cmp
xchg
sbb
daa
adc
fucomp
sub
sbb
cld
cmp
nop
or
outsl
insb
scas
sbb
arpl
aas
fimuls
inc
test
xchg
mov
movsl
fbld
out
ja
xchg
sar
mov
jo
dec
pop
jmp
scas
mov
pop
test
cld
push
stos
fldcw
sub
add
mov
pop
push
push
negb
in
cs
add
xor
out
outsb
or
int3
dec
push
push
mov
jbe
mov
push
push
loope
into
add
in
xchg
mov
push
cwtl
mov
ss
pop
ljmp
push
in
test
mov
sbb
jo
fcomps
jle
out
pop
push
xchg
movsb
jmp
push
sbb
inc
outsl
outsb
or
dec
add
imull
mov
rcll
fsubrs
push
mov
stc
pop
mov
dec
xchg
pop
into
mov
aad
mov
cmpsl
inc
mov
pusha
jo
and
jae
sarl
aam
inc
orl
and
mov
add
lret
out
add
movsb
jbe
scas
add
xlat
sbb
inc
xchg
push
ljmp
mov
aad
sbbl
dec
fbstp
jp
test
pop
lahf
inc
pusha
bound
push
mov
test
out
pop
sbb
mov
ret
lcall
mov
les
int
cmpsb
push
push
iret
jb
add
sub
call
stos
out
sti
sbb
xor
and
int3
xchg
movsl
andl
shrb
adc
pop
inc
cli
sarb
out
xchg
insb
das
scas
dec
out
mov
insl
cmp
adc
jns
dec
mov
xchg
mov
cltd
cmpsl
pop
lret
add
adcb
pop
dec
out
in
sbb
mov
xchg
es
pop
jecxz
pop
pusha
ss
xchg
sub
mov
stos
pop
mov
mov
cli
and
ja
nop
inc
gs
ja
bnd
and
leave
xchg
sub
int
in
xchg
jno
sub
not
sub
repz
lret
ljmp
xor
sub
out
and
les
sbb
mov
mull
push
adc
shll
mov
cwtl
shlb
lahf
mov
mov
push
fdivl
push
xor
jmp
pop
mov
pop
les
ja
stc
xor
lgs
outsb
stos
aas
mov
inc
sbb
mov
mov
pop
fld
ljmp
cli
popa
enter
sub
pusha
mov
push
jne
cmc
test
mov
dec
sub
ret
pop
cmp
jne
call
sub
sahf
xor
inc
push
mov
xchg
push
rcrl
jnp
cmpsb
sbb
mov
aad
in
jp
fwait
push
add
outsl
cmp
mov
mov
dec
or
scas
aas
pop
dec
push
jo
add
outsb
nop
jnp
repnz
loop
or
pusha
ja
sub
aas
aaa
into
rcrb
ret
outsl
xchg
push
repnz
xor
int3
inc
std
pop
inc
in
je
jae
or
and
inc
pop
out
popa
insb
call
cld
xchg
in
cltd
pusha
pusha
ret
adcl
out
dec
sub
xor
loope
pcmpgtb
insb
aad
xchg
or
scas
in
sub
scas
sti
xlat
stos
inc
or
cwtl
out
shr
imul
or
lahf
push
flds
arpl
aad
mov
ffree
lcall
movsb
adcl
ret
pop
cmp
push
mov
test
and
mov
pop
imul
jp
out
pop
jg
push
mov
ficoml
mov
pop
cltd
or
mov
jmp
mov
sub
int
sbb
aad
addr16
lods
jg
push
push
xchg
xor
andl
and
cld
and
xor
nop
lret
loop
int3
xor
push
pusha
mov
ss
fs
xor
push
or
test
jecxz
push
fld
jbe
into
addr16
call
cs
mov
jg
fucomip
mov
and
and
fldcw
fstpt
cmp
or
jae
sbb
int
add
shl
sub
cld
xchg
sub
fld1
sbb
inc
js
xor
xchg
ljmp
int
push
xor
jmp
bound
fwait
xor
and
push
pop
ljmp
loopne
fstpt
repz
lret
mov
jbe
pop
cmp
cwtl
js
mov
push
push
sahf
fldt
cmpsb
xor
jnp
mov
jge
adc
lock
popa
xchg
rcrb
in
testl
popa
adc
push
lea
pop
cmp
cld
xchg
repnz
xchg
stos
inc
or
xchg
stc
cmp
sbb
mov
dec
mov
addr16
adc
and
cmp
push
aam
xorl
aaa
mov
xor
sbb
leave
nop
cwtl
mov
mov
enter
adc
sbb
xor
in
outsb
jp
jl
mov
push
xchg
sub
mov
cmp
call
sub
dec
stc
cmp
mov
sahf
xor
mov
das
stc
inc
les
mov
mov
jo
js
aad
iret
xchg
inc
inc
aad
arpl
repz
or
idivl
in
ds
clc
enter
sbb
or
cmp
je
cmp
and
pop
jne
sub
push
or
std
jg
lea
cmp
aas
popa
and
xlat
sti
stos
js
jecxz
popf
adc
cwtl
das
movsb
int3
push
xchg
sub
ret
add
mov
xor
int
sbb
testb
mov
mov
loopne
adc
and
mov
fwait
jb
inc
push
xor
insb
xor
in
lock
clc
jg
push
adcb
mov
daa
jecxz
fs
insl
add
inc
mov
pop
inc
xlat
inc
rcll
xor
loope
std
push
mov
popa
popa
cli
das
icebp
mov
dec
xchg
daa
cmp
addr16
cmp
push
inc
ljmp
jb
imulb
popa
lret
test
inc
and
insl
aam
in
and
mov
adc
sub
inc
stc
adc
mov
imul
jge
pcmpgtd
or
ds
ss
pop
push
sbb
lret
inc
lahf
mov
in
push
cltd
ret
xor
hlt
cmpsb
stos
adc
jb
push
inc
fiadds
xor
add
xor
add
mov
or
pop
cld
hlt
jle
and
ja
mov
popa
shlb
lret
dec
in
aad
pop
in
imul
das
fistpll
orl
mov
pop
push
inc
mov
movsl
jle
mov
inc
test
lret
cmp
jle
cmp
es
jl
lds
lret
inc
movsb
bnd
dec
add
xchg
test
ret
fnsave
bound
inc
xchg
mov
cltd
std
push
aam
push
dec
sti
jno
pushf
scas
mov
and
add
cwtl
fs
je
lds
pop
jb
into
in
jl
jo
xchg
pop
fcoml
fldenv
dec
js
pop
loope
xchg
adc
cmp
in
fcom
push
sub
xchg
xor
addr16
mov
adc
shll
daa
and
pop
lods
jb
sub
xchg
mov
fisubs
mov
addr16
cwtl
popf
jb
add
cld
xchg
sbb
jge
jo
lock
mov
out
jo
add
rol
repnz
inc
sbb
jecxz
sbb
data16
shlb
aaa
int
imul
or
mov
imul
xor
or
ljmp
call
outsb
stos
aaa
cmp
fs
xor
sahf
xchg
jne
mov
call
fwait
insl
xor
daa
into
imul
ret
stos
mov
cmp
ds
mov
into
inc
dec
sub
sub
inc
xor
cmp
pushf
xor
pop
mov
cmp
lods
mov
test
pushl
sbb
mov
push
jl
stc
sahf
xor
inc
dec
ror
fildl
subl
movsb
push
addr16
out
pop
loop
inc
lea
rcrb
and
fwait
mov
fwait
insl
jns
adc
sti
stos
add
or
ret
jb
lret
xchg
jbe
repnz
cld
neg
in
or
aaa
jbe
dec
sub
dec
outsl
xorb
jbe
add
int
pop
aas
dec
cld
xchg
jg
gs
outsb
sbb
adc
sbb
dec
pop
inc
scas
jne
scas
mov
pushf
mov
into
push
add
dec
or
fwait
xchg
adc
test
cmpsb
jbe
sub
push
clc
test
and
inc
shr
int
cmp
adc
imul
outsl
idivl
pop
stc
je
lods
dec
aam
loope
je
lahf
inc
dec
inc
xlat
sti
xor
rorl
daa
lret
inc
fwait
ja
or
in
cmp
imul
sub
push
dec
or
lret
lret
sub
loope
aad
sub
imull
mov
or
je
push
and
push
inc
insb
out
jp
or
adc
lcall
out
dec
pop
xor
adcl
scas
xchg
mov
jl
cmp
xchg
mov
arpl
mov
fnstenv
ss
es
dec
stc
jcxz
leave
xor
or
xchg
add
pop
out
scas
in
dec
xlat
mov
cmp
mov
lcall
xor
sbb
push
ret
decl
xor
adc
adc
enter
lods
outsl
sub
mov
sub
lahf
inc
push
adc
or
jo
or
js
je
mov
lea
andb
mov
icebp
pop
jp
cltd
ljmp
shll
xchg
jbe
js
cmp
sahf
jle
add
insl
pushf
push
jmp
push
scas
sub
addb
xchg
or
fmuls
cmp
dec
es
sub
leave
mov
mov
arpl
ds
repz
in
shll
movsb
cmp
pop
xchg
in
ret
push
pop
movsb
or
popl
inc
add
imul
mov
lods
and
adc
sub
sbb
jle
or
mov
push
add
mov
cmc
jns
jo
repnz
test
dec
jp
lods
and
jns
lret
repnz
pusha
cmp
imul
mov
aad
lods
or
lds
mov
sub
insl
mov
push
lods
jg
daa
test
mov
js
mov
loope
testl
mov
xchg
sahf
pop
pop
mov
pop
mov
les
in
scas
mov
jb
pop
mov
in
inc
inc
lret
cmp
rclb
fwait
mov
and
ret
pop
add
out
jmp
add
pop
jle
inc
fsubrs
inc
mov
sti
lahf
pop
out
in
fsubs
loop
int3
in
ret
fadds
sub
lock
xor
out
mov
imulb
mov
cmpsl
push
pop
ljmp
or
mov
fstl
sub
and
daa
jge
popa
enter
add
add
and
jmp
in
loopne
movsb
jae
inc
inc
jns
or
cmpb
aas
xor
inc
out
sub
mov
inc
fimull
jns
xor
push
jns
xor
ljmp
inc
add
push
mov
fisttps
add
out
sbb
xchg
sbb
jmp
scas
call
in
lea
ror
xor
dec
gs
dec
and
adc
mov
cmp
inc
or
sub
iret
insb
pop
cmpb
lods
les
jns
insl
shrl
gs
jae
xor
arpl
or
pop
mov
mov
push
nop
shl
sarl
scas
push
cmp
jmp
cmp
and
mov
xchg
jmp
sub
mov
xor
and
lods
popf
sbb
shlb
andl
jecxz
in
pop
movsl
lcall
stos
fsubs
pop
std
shlb
repnz
sub
test
add
jmp
cmp
mov
aam
push
xor
xchg
cmpsl
ds
push
sti
pop
inc
mov
xchg
filds
js
adc
dec
mov
divb
dec
sub
pop
sub
mov
jg
in
push
push
call
mull
push
int3
test
rorb
mov
ror
sbb
pop
cmp
mov
xchg
add
sar
les
mov
aam
xlat
add
out
lods
sahf
and
xchg
pop
imul
sbb
pushf
pop
xchg
push
push
pushf
xor
mov
out
aaa
pusha
clc
xor
fcomip
dec
push
das
test
aam
lods
cmp
push
add
xchg
addr16
adc
in
jle
push
xlat
mov
inc
push
in
sbb
andb
gs
ss
cli
mov
fxch
aaa
stos
in
flds
stos
jmp
addr16
movsb
fiadds
push
aad
stc
xchg
push
movsl
jmp
lds
pusha
sbb
imul
push
lock
sbbl
or
jp
je
or
xor
xchg
cmp
idivl
fistl
jmp
popf
lods
mov
sub
xchg
ds
push
pushf
arpl
test
leave
and
pop
jno
sbb
lock
push
pop
add
or
movsl
in
addr16
adc
add
fisubrs
mov
mov
sub
mov
and
push
insb
mov
lret
in
daa
stos
xor
aaa
gs
stos
inc
mov
mov
mov
cli
mov
jo
push
jmp
adc
jg
mov
out
pop
lret
adc
lds
test
push
push
adc
or
rcrb
sub
repz
adc
pop
lds
es
pop
jmp
jle
cmpsl
cmc
fidivrs
dec
arpl
mov
call
and
inc
add
fwait
sub
mov
adc
fldt
enter
subl
mov
inc
cwtl
sub
dec
lods
dec
aas
pop
fstl
mov
push
dec
icebp
imul
out
xchg
fsubs
pusha
xchg
loope
kmovb
cmp
cwtl
cwtl
pop
push
lret
adc
inc
in
popf
je
push
mov
xlat
test
mov
sbb
xchg
pop
dec
xchg
cmpsl
ds
sbb
leave
and
push
fucomi
daa
int
inc
pop
nop
adcb
and
pop
dec
rorb
sbb
leave
scas
popa
out
in
push
std
and
in
pusha
mov
fists
in
jne
xor
cld
inc
rcr
jno
mov
out
dec
mov
adc
adc
enter
test
mov
xchg
xchg
cmpsl
fldt
pusha
popf
fildll
sbb
fs
inc
add
loop
pop
dec
jbe
push
sub
jmp
shlb
add
add
cwtl
into
lods
popa
mov
xchg
out
push
dec
mov
mov
mov
enter
imul
mov
sbb
lds
stos
push
loope
adc
mov
movsl
js
imul
test
icebp
xor
dec
dec
sarb
jmp
inc
bound
xchg
scas
pop
cmc
std
pop
loope
ret
aam
mov
and
outsb
xchg
jne
pushf
mov
push
call
stc
and
push
mov
repnz
ljmp
jge
mov
stos
push
sahf
insl
sbb
pop
stos
mov
fadd
mov
mov
xchg
pop
outsb
mov
insb
testb
mov
call
jge
test
cmp
and
mov
daa
movd
je
stc
cmpsb
jle
imul
xor
or
cli
push
push
jo
int
mov
cmpsb
sub
cwtl
ffreep
inc
pop
stc
rclb
adc
and
jns
call
and
pop
dec
sub
jp
addr16
out
iret
mov
adc
inc
divl
xchg
sbb
xchg
and
ret
arpl
pusha
imul
lods
jnp
jo
mulb
fldpi
aaa
repz
sbb
data16
mov
adc
in
push
lea
push
sbb
ss
push
xlat
scas
ret
jne
or
pmovmskb
fwait
inc
leave
xchg
mov
je
out
pop
mov
rorl
fld
iret
lods
jmp
out
popf
cld
stos
push
lods
mov
adc
jns
mov
fsubr
ret
push
movsl
push
das
dec
out
xor
aad
insb
movsl
mull
mov
cmp
clc
add
movsb
inc
negb
enter
stos
gs
loopne
cltd
xor
cmp
xchg
movl
bound
mov
cmpb
sub
push
pop
cmpsb
int3
jo
xchg
or
pop
mov
repz
add
stc
push
call
push
fimull
sub
aas
pop
adc
dec
test
jo
cmp
push
sbb
out
cmpsl
cwtl
fdivrl
inc
scas
notb
sarl
outsl
test
cli
shlb
jb
xlat
adc
in
push
fstpl
decl
loop
mov
push
mov
mov
push
mov
shrb
pop
bnd
or
xchg
adc
inc
mov
dec
in
pushf
xor
add
jle
fistpl
mov
arpl
xchg
fldpi
leave
push
xor
inc
jmp
sub
cmp
xchg
push
mov
sbb
test
or
jl
inc
insb
jl
ja
xor
inc
pop
fwait
gs
pop
insb
sahf
imul
sbb
and
scas
cmp
cmp
cmpsl
scas
test
or
in
push
adc
subl
and
hlt
xchg
scas
adc
fmulp
fldenv
cs
pop
mov
pusha
aad
mov
leave
mov
adc
add
mov
divl
add
test
dec
dec
sub
leave
sbb
push
loop
sti
fnsave
jno
ljmp
and
cmp
jbe
sub
xlat
loopne
pop
push
addl
xor
or
xchg
and
setae
inc
arpl
fwait
xor
or
sbbb
adc
cmp
fsts
pop
and
popa
pop
outsb
xchg
or
jne
lret
stos
add
cli
test
mov
arpl
jl
xor
negl
dec
mov
sbb
or
sub
fidivs
jp
sbb
cmp
ss
add
and
xchg
xchg
mov
sbb
mov
sahf
mov
daa
push
lret
test
lds
loop
movsb
dec
fsubr
test
scas
test
ja
cmp
pextrw
mov
rclb
mov
xchg
mov
outsb
aaa
cld
or
or
mull
mov
notb
adc
int
or
dec
addr16
xchg
pushf
cmp
pop
mov
xorl
inc
xorl
jecxz
fs
dec
aaa
cli
cmc
popa
jmp
xchg
sbb
les
sbb
je
jb
jbe
gs
xchg
jge
dec
push
test
data16
rol
inc
xor
push
lret
cmp
out
pop
fs
scas
mov
inc
xor
pop
scas
sar
inc
inc
sahf
or
stos
lcall
mov
fstl
jmp
sbb
adc
xchg
nop
jle
cwtl
cmpsl
or
sbb
and
sub
aad
cwtl
idivl
lock
push
pusha
mov
clc
xor
xor
lahf
push
and
push
repnz
test
icebp
xchg
add
dec
mov
xchg
rcrl
das
aaa
fistl
int
inc
scas
inc
inc
aad
ja
ret
xchg
cltd
mov
daa
push
mov
fstps
mov
sbb
pop
cld
sbb
dec
divl
xchg
jecxz
lret
loope
xchg
aaa
dec
xor
and
cmp
jo
xchg
jl
repnz
fbld
push
in
xor
mov
mov
add
iret
push
xor
call
addl
push
mov
add
std
imul
pop
push
jl
push
scas
ja
gs
mov
mov
push
and
fistl
mov
es
xchg
aas
jb
jno
shll
xchg
mov
into
cmp
lahf
push
sbb
sub
push
in
insb
sub
sbbb
icebp
clc
inc
fidivl
or
jg
enter
cmpsl
and
mov
cmp
cmp
mov
xchg
mov
pop
insl
fisttps
and
mov
sbb
aas
adc
scas
popf
shrb
mov
push
mov
and
pop
ja
pusha
decl
iret
aam
adc
or
pop
pop
scas
jb
fnstcw
xchg
jne
and
stos
inc
lret
dec
jge
rcl
stc
fimuls
cltd
pop
inc
notl
jae
rcll
into
inc
insl
jb
shlb
xlat
scas
in
inc
dec
jb
and
sarb
pusha
fadds
cmpsl
and
cmpsb
ficomps
fdivs
fldenv
out
addr16
dec
fwait
test
xlat
roll
fadd
cwtl
fidivl
fildll
jecxz
xor
mov
jg
xchg
or
fwait
stc
lea
jnp
dec
xchg
mov
cmpsl
lods
adc
out
adc
lret
xchg
test
pop
lock
dec
xchg
push
outsl
imul
mov
arpl
jno
lods
das
lds
jmp
add
cwtl
fwait
and
inc
pop
xor
lcall
mov
jno
das
jne
insb
inc
clc
cmp
dec
inc
test
sbb
push
dec
push
imul
fdivrs
push
pusha
enter
push
inc
std
in
pop
daa
dec
fisubl
in
out
mov
lods
or
shlb
jae
or
test
in
out
in
pop
cmp
mov
jb
xor
mov
test
mov
test
sbb
lods
cmpsl
add
ret
je
add
xchg
pushf
bound
scas
and
adc
add
cmpsb
clc
aam
mov
fnstenv
mov
test
pop
imul
scas
jg
or
les
stos
push
pop
push
pop
enter
and
push
mov
lret
xlat
ja
sbb
cltd
adc
push
std
mov
leave
cmp
into
lahf
movb
lret
inc
aad
mov
in
stc
aad
cmp
lret
andb
scas
sbb
mov
xchg
sbb
fcomps
xlat
cmc
int
add
loop
int
mov
xchg
in
push
out
loope
and
mov
push
jae
loop
in
std
adc
dec
or
mov
divl
popf
lds
xchg
sub
dec
cmc
add
xchg
xchg
push
mov
sbb
movsb
shr
lea
sti
push
dec
mov
mov
jns
adc
xor
mov
ss
ljmp
mov
repz
stos
dec
shr
ret
inc
shl
imul
mov
les
inc
xor
fisubrs
jge
mov
test
dec
inc
roll
mov
add
push
mov
or
sbb
movsbl
addb
out
mov
insl
sbb
sbb
inc
xor
jmp
jle
inc
mov
fcomip
push
out
mov
out
out
push
adc
jecxz
inc
js
popa
xchg
loop
int
movsl
call
lcall
mov
pop
xchg
mov
mov
jb
in
enter
mov
xchg
push
push
pop
pop
outsb
sub
mov
cmp
lret
cli
fdiv
cmp
stos
aaa
jbe
mov
stos
mov
aaa
fsubr
push
insl
ss
stos
mov
push
ljmp
jno
pop
mov
pop
inc
xchg
aad
mov
mov
ficompl
stos
inc
into
jno
adc
lock
xor
xchg
jmp
or
mov
add
lods
ljmp
ret
arpl
push
test
mov
fidivrs
arpl
int
lcall
mov
cmp
sub
cmp
dec
jns
pop
lds
dec
shl
jl
jecxz
jbe
cmp
ret
int3
push
lahf
neg
xor
pop
inc
lods
add
add
sbb
ds
pop
jo
sub
jmp
mov
adc
cmpsl
aaa
and
sub
mov
fcmovbe
loope
dec
xlat
xor
cmc
idivb
adc
mov
jge
fnstenv
jp
jne
mov
sub
movsb
movsb
sbbb
loopne
mov
mov
sbb
cmp
ja
xchg
stc
ret
movsl
mulb
das
aam
out
sub
and
mov
cmp
xlat
stos
stc
je
dec
stc
lock
psubsb
jbe
xsha256
cmpsb
adc
loopne
testl
imul
fistl
sub
ret
int3
and
decb
fstps
inc
cmovle
jae
sarb
lahf
push
pop
outsl
mov
dec
enter
ss
leave
insb
dec
add
jle
pop
repz
fst
pop
sub
sbb
xchg
insb
add
jl
pop
cmp
insb
add
adc
mov
out
or
in
push
aaa
mov
ljmp
test
push
or
push
lea
rcrl
jb
push
movsb
cwtl
in
ret
xchg
xor
xor
hlt
push
mov
ss
sub
aas
mov
stos
rorb
push
xor
shrl
add
cli
sbb
scas
jb
pop
mov
shlb
mov
aad
add
stos
sub
popf
andl
nop
imul
jae
and
dec
xchg
orl
add
lea
and
test
mov
push
cld
lahf
mov
shr
or
or
dec
jecxz
mov
mov
jb
shrl
ja
mov
mov
push
jp
or
loope
dec
sub
xor
arpl
mov
add
test
dec
bnd
icebp
dec
add
lret
popf
ds
push
ret
cmc
pop
adc
add
cwtl
stos
inc
test
insb
rol
lods
in
aas
push
loop
fdivrs
addr16
xchg
test
push
and
sahf
sub
in
sbb
insl
sbb
pop
mov
cmp
jp
mov
int
add
and
shlb
test
addr16
or
test
and
mov
inc
fdivl
and
pop
xchg
cmc
shr
dec
inc
xchg
adc
loopne
mov
test
psubsw
jg
mov
add
push
adc
push
xor
cmc
pop
inc
or
mov
imul
adc
loop
lcall
lret
dec
inc
fnstcw
jmp
jns
push
jmp
mov
les
jp
sbb
sub
push
jae
mov
mov
scas
paddd
mov
push
fs
out
add
sub
mov
out
popa
fistl
inc
or
and
pop
xor
pop
push
mov
nop
lahf
dec
pop
add
cmpsb
les
adc
test
or
aad
and
and
movb
or
lock
icebp
out
or
aaa
into
push
aas
arpl
popf
xor
data16
ss
and
pop
btr
ficomps
int
inc
add
cmp
into
movsl
jl
insl
sub
jge
fbld
ret
fdivs
les
xchg
pop
mov
popf
outsl
mov
jle
mov
jl
ds
xor
orb
es
add
stos
test
push
in
push
divb
mov
dec
cwtl
sub
push
loopne
and
push
test
adc
jo
inc
sub
inc
xor
ja
loop
or
mov
push
inc
out
cmp
lods
jno
outsb
loope
pop
cmpsl
rcll
adc
pop
shlb
ret
jo
pop
aaa
and
push
inc
cs
mov
sahf
sub
adc
push
pusha
pop
scas
inc
jbe
mov
repz
add
aaa
mov
repz
shll
les
jmp
xorl
xchg
rclb
inc
add
adc
insb
lds
xchg
cltd
in
jp
mov
js
xchg
and
or
jl
dec
mov
adc
stc
xchg
mov
or
adc
imul
shll
sbb
addr16
out
add
scas
jl
push
mov
data16
je
repz
and
cmpsb
daa
aaa
popa
andb
cmp
adc
mov
mov
or
imul
test
inc
mov
loop
or
mov
sbb
pop
ljmp
sub
aas
inc
ljmp
mov
cmp
testl
push
lods
pop
fs
in
xor
clc
pop
sbb
rolb
mov
insb
add
in
filds
mov
jne
enter
cmpsb
fisubl
mov
pop
lcall
pop
push
or
pop
test
rorb
jl
cmp
loope
add
and
loop
shl
scas
add
rclb
addr16
sub
roll
lret
ss
lahf
add
jae
push
movsl
lcall
cmpsl
les
scas
pop
inc
stos
jne
stos
inc
popf
aad
cmpsb
fwait
and
lret
add
or
and
cmp
into
lahf
sti
fwait
lcall
mull
mov
dec
add
sahf
and
sub
das
cmp
cwtl
xor
popa
mov
xchg
movsb
hlt
mov
outsb
adc
lods
inc
xor
test
lea
sub
xchg
push
cmpsb
call
filds
push
aad
out
push
mov
push
in
push
sahf
stc
sgdtl
cmp
sbb
das
sub
iret
pop
nop
cld
push
mov
popa
in
push
ficompl
ret
jecxz
adc
pop
jae
je
inc
iret
jge
add
fimuls
lret
jno
lods
popa
inc
dec
adc
icebp
cmp
fbstp
mov
xlat
stc
adcl
mov
and
xchg
mov
xchg
sub
xchg
jp
pop
and
in
jbe
jmp
fsub
ds
sbb
push
push
xchg
scas
push
mov
sbb
stos
inc
nop
daa
xor
adc
mov
and
pop
xchg
adc
sub
dec
fdivs
mov
sahf
jb
rorl
ret
cmp
push
les
addr16
or
xor
jae
inc
fstl
xchg
fld
shlb
add
stc
mov
cmp
mov
into
dec
dec
into
nop
push
clc
cmp
icebp
arpl
fsubl
clc
aam
movsl
cmp
aaa
sub
push
mov
xor
in
and
dec
ret
test
and
out
cmp
shrl
inc
sti
xchg
mov
mov
push
jg
mov
add
repnz
inc
in
test
jle
loopne
ret
dec
xlat
mov
hlt
rcrl
test
push
lods
xor
mov
sbb
lret
shl
into
mov
pop
or
pop
out
mov
nop
jne
sbb
mov
insl
jecxz
pusha
mov
movsb
cmp
mov
faddp
push
dec
dec
in
adc
andb
inc
test
jmp
lds
lods
ss
scas
mov
add
das
scas
push
hlt
inc
jns
adc
inc
push
test
ret
lods
ljmp
and
loop
cmpsl
mov
or
mov
add
and
ret
hlt
shlb
movsl
cmp
xchg
lods
sbb
sbb
std
cmpsl
ds
in
pushf
push
pop
scas
push
cli
xchg
xor
push
aas
repnz
cmp
inc
stc
popf
lock
divb
icebp
cltd
inc
rolb
mov
mov
fidivrl
pop
mov
sub
mov
loop
movsb
fsubl
mov
jns,pt
test
loop
dec
adc
inc
mov
insl
bound
xchg
mov
or
lea
mov
inc
loop
mov
adc
mov
jecxz
scas
push
pop
rol
in
std
negl
inc
mov
insl
adc
pop
dec
loope,pt
and
push
or
cmp
mov
or
out
int3
jnp
mov
icebp
shll
mov
cmpb
mov
jp
dec
aaa
push
mov
test
xor
sub
ret
scas
fs
or
mov
lds
mov
das
adc
jae
inc
mov
out
xchg
repz
int3
lds
pop
test
mov
mov
ret
test
icebp
push
jbe
sub
push
xor
sbb
loop
jg
pop
sub
in
sbb
mov
adc
es
pushf
scas
int3
inc
mov
jns
mov
mov
lods
mov
jmp
stc
or
and
xor
mov
dec
hlt
or
sub
int
out
stos
jg
lock
es
sbb
repz
hlt
scas
mov
bound
sbb
xchg
mov
sub
and
adc
call
or
cmpsb
add
xor
sbb
pop
cltd
xor
in
push
dec
loope
imul
mov
fnstcw
mov
mov
jnp
bound
into
gs
in
jne
and
xchg
cmp
cmp
or
sub
loopne
sti
jb
mov
cmp
nop
std
sbb
mov
add
call
pusha
orb
shll
cwtl
and
pop
inc
imul
rorb
mov
sarb
cwtl
dec
add
es
add
out
stos
sbb
push
ss
jbe
jae
lds
push
stc
add
sbb
jle
cmp
sbb
xchg
cmpb
je
pop
jae
cwtl
lds
fstl
pop
mulw
push
or
ljmp
push
push
les
clc
xor
xor
cmpsl
cmpsl
mov
mov
push
mov
add
stos
mov
call
and
push
addr16
stos
cmp
adc
inc
fadds
gs
mov
xor
adc
and
movsb
repnz
repz
and
sub
jb
leave
xchg
pop
sub
repz
outsl
mov
jmp
or
jo
in
aaa
out
mov
dec
push
dec
addr16
not
aaa
sub
or
jmp
sbb
jno
adcb
sbb
lret
fwait
popf
mov
hlt
dec
pop
sar
ds
loop
or
mov
cmc
push
cmp
add
push
incb
xchg
adc
mov
and
sub
xor
dec
or
scas
es
iret
xchg
popf
dec
inc
or
cltd
into
jne
call
jg
add
cmp
fisttpl
jo
mov
aam
cld
inc
pushf
icebp
cmp
cmp
aad
in
add
mov
lret
jl
or
cmp
mov
and
arpl
xchg
dec
mov
or
jb
xchg
mov
or
lds
popfw
or
lods
lods
jmp
imulb
cmpb
or
or
sar
inc
sarl
dec
in
mov
add
imul
test
inc
xor
jecxz
xlat
mov
shrl
in
push
adc
mov
pop
sbb
cli
or
testl
ljmp
pop
adc
cs
xor
sub
push
mov
out
or
pusha
into
cmp
sbb
int3
fs
sub
test
dec
xchg
adc
es
pop
nop
inc
fadd
jl
aaa
and
cmp
dec
outsl
xor
loopne
fdivp
sbbl
cwtl
aad
mov
mov
push
cs
hlt
and
pop
push
push
mov
out
movsl
cmp
cs
add
clc
subl
rsqrtps
or
out
xchg
pop
daa
les
add
loopne
sbb
pop
and
mov
sbb
test
mov
mov
sbb
mov
push
movsl
xchg
jmp
lods
mov
loope
dec
aad
dec
or
push
lods
lahf
fbstp
add
cwtl
cmp
pop
jns
push
xchg
sbbl
pop
imul
add
jb
fcoml
lea
or
icebp
mov
adc
mov
ud0
xchg
pop
cmpsl
push
cwtl
jne
sbb
push
shlb
stc
inc
call
adcb
push
adc
mov
mov
xorl
scas
push
dec
loopne
sub
xchg
lahf
test
fs
sbb
add
push
movsb
cmpsb
sub
ss
mov
data16
jnp
mov
test
ds
stos
inc
cltd
notb
xchg
leave
inc
scas
aam
out
enter
jns
jbe
mov
mov
or
xchg
loopne
data16
inc
sbb
mov
mov
ret
faddl
and
and
sbb
movsl
or
cmpsl
bndstx
es
pop
or
lds
jnp
out
in
jmp
pop
ja
sarb
or
cmc
inc
nop
add
sub
roll
ljmp
inc
fimull
mov
aaa
push
or
sbb
lret
addr16
nop
push
push
inc
pop
mov
sbb
pop
sub
inc
loop
xchg
clc
daa
iret
leave
sub
dec
sbb
inc
loopne
out
fucomp
lods
aas
push
push
outsb
inc
xchg
aaa
xor
mov
xchg
cmpsb
leave
mov
inc
xchg
xchg
mov
lret
addr16
jno
std
faddl
dec
out
es
xor
ja
push
icebp
adc
mov
cvtpi2ps
push
in
xchg
dec
mov
sti
repz
mov
mov
fistl
xorl
sbb
rorb
mov
dec
add
out
pop
jne
mov
nop
xchg
mov
sub
int
test
mulb
xchg
pop
cs
xchg
hlt
jae
dec
jge
test
stc
sub
lret
sub
ret
lret
fdivr
dec
test
xchg
adc
adc
lds
lods
and
mov
push
repz
outsl
pop
jg
leave
test
jb
pushf
sub
mov
int
movsl
sub
push
mov
data16
pop
in
sarb
dec
dec
push
cmp
pop
cmp
pop
and
cmp
jae
xchg
adc
pop
loop
sbb
inc
dec
fists
iret
xor
outsl
pop
mov
inc
ret
mov
mov
cltd
cmp
movsl
xor
fsubs
ret
mov
lcall
and
sub
jne
sahf
out
mov
ss
cmpsl
sahf
sub
ljmp
add
pop
add
add
adc
ljmp
mov
dec
xchg
xchg
jge
mov
cltd
shll
sub
mov
in
adc
jge
pop
andb
mov
insb
sub
sbb
push
or
movsl
nop
js
fidivs
push
fiadds
inc
sub
in
fmulp
adc
push
in
jo
in
mov
call
cmp
pop
mov
mov
mov
hlt
mov
push
jo
ljmp
xchg
xor
fisubrs
lret
lret
sub
dec
jb
dec
cmp
jae
shr
push
inc
or
mov
js
ds
push
mov
popf
cmp
into
xor
shll
jg
inc
mov
or
jns
mov
out
test
pusha
sub
in
fbstp
ljmp
dec
or
push
mov
add
inc
addb
stc
into
mov
pop
ret
lahf
cwtl
rcrl
iret
push
xor
fcomp
jno
or
aas
pop
or
mov
mov
ret
lds
push
inc
mov
mov
and
sbb
and
or
push
jg
jl
cmpsl
lods
sbb
ret
sbb
cmp
int3
fcoms
pop
adcl
jns
inc
pop
fldt
xor
pop
cld
daa
data16
out
add
mov
repz
add
mov
jg
dec
lea
outsl
pushf
orb
sbb
outsb
jp
test
mov
es
mulb
shll
xchg
xor
sahf
jmp
xchg
sub
enter
popa
pop
scas
sbb
xor
pcmpgtb
sub
xchg
lods
push
pop
xchg
div
push
sub
pop
loope
lret
mov
bound
ds
outsl
mov
cs
int3
test
mov
insb
hlt
sbbb
mov
dec
or
cmp
push
std
inc
insb
cs
pop
jmp
xor
idivb
das
adcb
jp
pushf
in
in
push
rclb
xchg
mov
mov
fs
mov
pushf
in
lret
cmpsl
and
sub
push
in
daa
mov
cmp
and
and
imul
adc
mov
shll
shlb
push
jle
mov
push
mov
jle
dec
pop
in
lea
cs
shll
and
jmp
sub
pop
mov
ret
xchg
jmp
mov
mov
jbe
shll
pop
dec
xor
and
add
in
xchg
and
inc
lcall
lcall
mov
jge
test
lods
add
decl
mov
ficoms
and
push
sub
sub
xor
lcall
test
xlat
ret
leave
jge
pop
repz
inc
mov
adcb
and
shrl
xchg
sbb
add
xchg
addr16
loope
and
push
inc
ret
roll
mov
cwtl
lret
outsb
rclb
test
inc
hlt
or
ret
loope
sub
adc
out
pop
fisttps
fwait
cmpsl
cmp
out
hlt
xchg
mov
ret
or
xchg
inc
and
ret
mov
cli
mov
lcallw
in
mov
out
cmp
fdivl
xchg
pop
aaa
scas
add
push
aaa
mov
mov
push
sbb
aad
xchg
cmc
lcall
loopne
jp
pop
push
mov
mov
sbb
mov
int
das
xorb
sub
out
movsl
jp,pt
dec
les
popf
jl
cmpsb
in
push
xchg
xchg
sub
cmp
or
mov
push
or
dec
mov
out
lahf
push
loop
pop
jg
push
jg
loopne
xchg
dec
push
mov
mov
stos
xchg
push
movsl
sbb
xchg
sub
cli
mov
and
add
test
mov
cmp
inc
xchg
pop
xchg
orb
scas
xchg
stc
test
fidivrl
push
adc
mov
inc
mov
mov
aam
fildl
imul
dec
inc
xchg
stos
faddp
cmpsl
xchg
xor
jnp
cmpsl
pop
fadd
aas
ja
insl
cmpsl
cmp
dec
in
hlt
pop
cli
push
icebp
mov
adc
or
pop
enter
jge
sub
pop
data16
push
js
sbb
pop
xchg
and
imul
mov
lea
xchg
push
mov
aaa
mov
scas
call
xor
inc
std
adc
fs
and
scas
movsb
lods
jbe
mov
sti
pushl
dec
xor
mov
and
push
stc
lock
imul
arpl
xor
sub
in
cmp
lock
pop
std
lods
stos
in
das
adc
xchg
inc
sub
dec
adc
sbb
push
mov
rcrb
cmp
popf
in
push
xchg
lahf
xor
inc
or
cmpsb
fdivrs
mov
add
mov
jb
int3
popf
sub
push
cmp
mov
mov
cmp
mov
lods
jmp
clc
movsl
jp
jg
clc
pushf
cltd
or
pop
fcoms
mov
add
sub
and
mov
jo
loopne
arpl
jae
jb
sbb
mov
adc
push
pop
out
pushf
lea
pop
mov
sbb
inc
cmpsl
nop
out
ret
decl
and
insl
sahf
stc
adc
outsb
pop
out
lahf
jecxz
push
and
sbb
loop
sub
mov
xor
mov
push
pop
cli
test
sub
hlt
mov
test
leave
cmpsb
enterw
xchg
xor
mov
std
adc
inc
test
movsl
jbe
mov
dec
fs
xchg
sub
fwait
xor
std
lods
outsl
mov
int
pop
sbb
fwait
adc
sti
lahf
enter
xor
imul
mov
push
test
test
cmpsl
test
in
jecxz
das
sarb
add
sbb
in
movsb
mov
xchg
inc
divb
aad
hlt
push
push
inc
push
in
lea
xor
push
sbbl
lods
mov
jp
mov
mov
mov
les
insl
add
fldenv
mov
or
add
jmp
rol
das
fcomi
fwait
stos
jno
adc
nop
jnp
or
sarl
imul
pushf
add
fsubrs
mov
sub
fwait
mov
subb
dec
sarb
lahf
decb
mov
icebp
pop
push
insb
andb
mov
cld
shufps
add
fcmovb
mov
test
sub
mov
sbb
rol
iret
addl
imul
insb
mov
xor
iret
nop
push
bound
shl
nop
cs
jae
shll
mov
mov
ss
test
sub
push
jle
pop
cmp
icebp
ds
insl
pusha
jmp
sbb
cmp
jg
cwtl
mov
sbb
sbb
dec
cmp
inc
movsl
icebp
jmp
and
xchg
xor
sahf
add
mov
mov
sbbl
popf
jg
ret
mov
jo
test
add
sbb
out
test
aam
sahf
sub
and
xor
lea
jmp
xchg
inc
cmp
xchg
cmpsb
les
cmpsb
and
imul
into
gs
sub
cltd
dec
sub
jno
scas
ret
pop
push
adc
xchg
test
mov
or
cmp
pusha
mov
sbb
dec
shll
jecxz
ljmp
fsubl
scas
les
fidivrs
or
and
cmp
out
sbb
scas
inc
sub
inc
shl
adc
xor
lcall
ds
jp
pop
movsb
int3
rclb
aam
sub
pop
outsb
sub
mov
fldcw
int3
lds
or
lret
xchg
mov
jb
mov
pop
push
and
out
aad
cmpsb
ja
push
cmpsb
sbb
les
aad
ret
push
xchg
sub
scas
inc
pop
dec
inc
lcall
and
push
cmp
test
hlt
inc
movsl
in
add
fwait
xchg
sub
out
pop
je
or
cmp
cmp
push
push
lods
andl
cltd
mov
int
mov
pop
outsl
rol
cwtl
jp
push
test
jb
enter
sahf
cli
or
mov
push
outsb
mov
cmpsb
mov
xchg
and
adc
mov
cltd
mov
in
hlt
sbb
shrl
inc
seta
jno
sbb
rorb
jp
call
clc
xor
xchg
mov
xor
cmp
cmp
mov
shll
pushf
lods
nop
mov
sbb
jnp
lods
push
ret
outsb
cmpsb
sbb
arpl
je
add
es
dec
aam
paddb
adc
movsl
xor
dec
sahf
fstl
push
mov
rcrb
inc
lret
andl
xchg
test
pop
ljmp
roll
js
jne
mov
fdivs
sbb
sbb
xchg
cs
les
sarl
scas
shll
incl
jecxz
pop
aam
sbbl
jecxz,pt
pusha
js
mov
add
mov
aas
out
pop
mov
fnstenv
jns
shll
inc
test
xchg
js
xor
mov
pushf
jg
imul
and
add
xorb
cmp
cld
stos
lds
mov
pop
xchg
xchg
bnd
sbb
pop
push
adc
insb
sbb
mov
jb
inc
addr16
aaa
push
adc
add
xchg
shrb
mov
je
inc
pop
mov
add
movsl
aaa
mov
cli
push
cmovne
xchg
adc
js
cwtl
push
pop
sbb
es
jl
push
adc
sub
and
rclb
inc
lret
mov
mov
pusha
lcall
loope
jmp
ret
jns
jg
and
xchg
imul
in
rcrl
lds
mov
rcrl
dec
sti
sub
shrl
int
cs
jl
int3
and
push
or
push
push
lret
cltd
mov
add
repnz
rcrb
insl
aad
outsb
inc
addr16
push
cmp
out
out
add
xchg
mov
push
fcmovb
pop
sbb
jp
mov
xchg
and
fdivl
push
sahf
jbe
pusha
das
test
aas
lret
jmp
ds
push
ss
sbb
scas
sahf
mov
stos
mov
ss
sbbl
scas
cltd
sbb
icebp
dec
sti
mov
and
jecxz
clc
adc
fld
jecxz
push
push
je
and
andl
arpl
mov
inc
adc
addb
sti
mov
adc
loope
xlat
push
cs
inc
fisubl
xchg
mov
mov
mov
mov
rol
stos
push
pop
sub
out
fcmovne
scas
xor
fwait
in
pcmpeqd
popa
ljmp
mov
adc
nop
out
lds
jmp
pop
sbb
inc
enter
rcrl
popl
pop
jnp
shrb
jg
cmp
outsb
jne
mov
adc
pushf
sbb
push
mov
or
stos
lahf
mov
jle
xchg
lods
jp
shrb
fwait
ret
pop
jno
jo
aam
frstor
add
xchg
cmpsl
sbb
mov
mov
fisubl
lret
xchg
add
loop
adc
mov
das
lods
cmpsl
sub
sbb
rclb
add
adc
cwtl
out
xchg
jnp
jp
dec
and
cli
ret
dec
fistps
imul
push
fnstcw
fidivrl
sub
lret
cmp
xor
mov
pop
xlat
xrelease
add
cmp
cmp
lods
jmp
lahf
ss
leave
subb
sub
popl
stos
scas
mov
mov
pop
mov
jmp
xor
dec
fldt
dec
pop
mov
mov
leave
inc
dec
movsl
xor
rcrb
push
cmp
push
xchg
movsl
dec
xlat
cmpsb
push
fcomp
lahf
mov
jg
xor
inc
jmp
xchg
call
and
fs
mov
dec
jg
out
popf
fcomps
jne
ja
lcall
data16
push
and
mov
push
mov
outsl
fbstp
js
sbb
jmp
incb
int3
inc
push
mov
sarl
ror
jae
lret
mov
fcoml
addr16
outsl
clc
push
mov
jg
or
lcall
in
out
sti
fidivrs
aaa
or
std
stos
cmp
xchg
cs
dec
inc
push
mov
mov
and
fistpl
pop
loope
jb
xchg
mov
dec
dec
adc
cmp
sahf
xor
loop
das
xchg
cmp
hlt
adc
call
cmc
in
adc
andl
dec
int3
das
shlb
dec
sbb
mov
clc
xor
stos
sbb
adc
fs
pop
push
aas
push
fadd
add
jne
clc
dec
mov
jo
pop
imul
and
mov
rol
rcrb
test
jo
js
aad
pop
mull
pop
xlat
in
xorl
test
pop
dec
aam
xor
dec
sahf
sub
insl
add
pushl
ljmp
inc
call
xchg
call
cli
dec
xor
in
ds
inc
scas
sub
push
aas
sub
lods
daa
inc
mov
out
push
push
pop
jae
iret
inc
in
pop
push
mov
fsubrs
and
inc
int3
dec
dec
dec
cmp
xchg
pop
sub
stos
push
jl
cmp
cmpsb
fnstenv
jmp
inc
sbb
inc
inc
fidivl
lcall
hlt
into
movsb
jnp
or
adc
dec
xchg
adc
push
mov
fstp
addr16
mov
out
and
push
aaa
movsl
xor
outsl
cmp
cmp
sub
mov
pop
mov
push
inc
pop
jge
add
leave
inc
pop
bnd
in
adc
mov
push
dec
pop
xor
jns
or
mov
adc
loopew
pop
decb
and
test
push
sti
or
mov
push
repnz
scas
aaa
iret
mov
rorl
adc
mov
mov
fists
fwait
push
inc
fs
repz
or
loopne
lret
mov
inc
adc
loopne
out
and
sbb
in
imul
xor
mov
add
mov
iret
adc
mov
jecxz
mov
fmul
xor
js
stos
cmp
pop
and
or
and
in
lock
and
xor
push
ja
cwtl
aad
sub
jg
clc
mov
pop
or
push
movb
sti
hlt
fs
iret
mov
nop
ja
shlb
enter
ja
mov
pop
pop
cmp
mov
dec
inc
cmp
dec
dec
loop
aas
loop
push
iret
out
lea
mov
fwait
cs
inc
fdivrl
into
pushf
loop
scas
movsbl
inc
test
jp
push
aas
jne
stos
mov
pop
jl
xchg
push
inc
test
repz
push
clc
jns
dec
negl
jl
sbbl
jp
mov
push
fnstenv
mov
and
and
push
jo
pop
mov
xchg
pop
lock
sbb
push
jne
xor
pop
mov
dec
or
dec
aaa
das
in
fwait
adc
stos
aas
xchg
or
enter
cmp
divl
sbb
xchg
xor
inc
pop
dec
mov
dec
gs
cwtl
aas
leave
out
xchg
and
lods
addb
dec
loopne
pop
add
mov
and
push
mov
lea
add
cmp
adc
pusha
rcrb
ret
sbbb
dec
fnstsw
dec
test
sarb
push
ljmp
mov
mov
push
adc
or
negl
sub
sbb
push
rcr
or
fdivrs
xchg
sub
cli
imul
xor
rorl
cltd
into
lahf
shll
imull
pop
sarl
inc
fnstcw
mov
cwtl
aad
inc
or
gs
in
and
add
xchg
and
loop
mov
enter
sub
mov
orb
pushl
ror
pop
adc
inc
push
mov
shr
movsl
out
outsl
les
lcall
aas
dec
and
mov
inc
xchg
pop
inc
out
xor
sub
insl
rcrb
dec
xchg
pop
outsl
xor
mov
loop
jnp
fists
or
push
scas
add
aad
pusha
pop
inc
pop
repz
fstpt
nop
fbstp
inc
adc
inc
ficoml
mulb
xchg
jnp,pn
lods
sub
hlt
push
test
ja
dec
test
repnz
fildll
rorl
cmp
or
dec
adc
orl
xor
int
dec
cld
adc
js
outsb
mov
dec
mov
dec
loope
mov
call
push
xor
sti
inc
notl
loope
jle
add
test
adc
push
mov
outsl
and
add
fmuls
pop
imulb
sub
xorb
ds
inc
mov
ja
mov
hlt
call
push
push
nop
rclb
lret
sub
jmp
in
mov
cmp
cmp
mov
mov
arpl
adc
add
jmp
popa
cmpsb
hlt
adc
mov
jno
aas
insl
xchg
xchg
loope
lahf
orb
mov
and
std
jne
jnp
and
in
dec
mov
jnp
imul
xchg
adc
aad
enter
lahf
das
repz
dec
xchg
mov
dec
aad
pop
subb
lcall
mov
rcrb
je
pushl
and
mov
mov
je
dec
in
jg
lock
inc
pop
or
imul
iret
mov
and
loop
xor
lock
inc
dec
int3
dec
mov
cmp
cmp
repz
movsl
shlb
jl
repnz
cs
sbb
flds
fnstsw
xchg
sbb
int3
int
xlat
aad
jecxz
pop
dec
in
mov
jp
pop
lds
fucomip
popf
push
fnsave
fdivp
xor
push
xchg
push
xchg
inc
inc
mov
in
in
das
push
mov
cmp
push
jmp
mov
pushf
int
cmpsb
push
jae
cmp
cmp
jns
jmp
push
in
lds
aas
rorl
jecxz
and
fiaddl
ret
test
xor
ror
sbb
lods
inc
cmp
mov
xor
test
cld
adc
inc
mov
mov
ss
ljmp
sbb
dec
repz
ljmp
ret
inc
pusha
pop
test
fldcw
jg
inc
sub
sbb
inc
sbb
jge
sbb
stos
fnstsw
mov
inc
pop
out
adc
in
jns
nop
aaa
pop
xchg
cmp
add
lds
rcl
sub
mov
lret
in
sbb
imul
arpl
ret
dec
sbb
sub
cmp
loope
rorl
cmp
pop
out
push
jo
sar
mov
xchg
sti
inc
pop
and
or
cmp
push
jg
ss
sahf
xlat
mov
in
cmc
enter
jae
mov
addr16
mov
into
gs
mov
or
push
cmp
stos
mov
pop
xorb
stos
mov
or
repz
mov
jmp
stos
aas
mov
ljmp
pushf
icebp
xor
lea
ds
cmpb
dec
popa
shl
xor
gs
mov
ret
mov
adc
loopne
mov
sbb
sbb
xor
ja
out
inc
xor
cli
mov
sub
out
leave
sbb
sub
jge
das
in
scas
mov
xlat
test
add
pop
pusha
mov
push
jg
dec
loope
sbb
lds
sub
xchg
dec
dec
nop
pop
cmp
xchg
cmp
jnp
mov
in
xor
xchg
sti
cmpsb
sub
imul
hlt
loopne
pop
out
outsb
inc
and
scas
pusha
xor
ds
enter
adc
push
inc
out
pushl
test
rclb
add
or
push
pop
out
test
aaa
nop
shll
call
and
dec
add
sbb
aas
push
push
hlt
inc
cmp
test
add
out
mov
sbb
daa
sbb
arpl
outsl
daa
sub
mov
or
es
insb
mov
sub
push
test
pop
add
sbb
and
out
and
pop
mov
adcl
in
xchg
jno
lods
pop
ja
and
xchg
cmpsl
inc
stos
add
xor
lea
arpl
insl
rorb
and
es
mov
iret
mov
sbb
jl
xor
outsl
cmp
sahf
pop
inc
xchg
sbb
pop
lock
sbb
inc
cmpsl
mov
sbb
sbb
jne
insl
sub
cmpsl
or
sbb
sbb
mov
stc
mov
mov
and
enter
push
add
dec
out
out
fucomi
ret
or
adc
in
dec
pop
xlat
xchg
dec
mov
sub
enter
test
lods
jbe
loope
lcall
lds
and
push
xchg
sub
decl
adc
add
lods
mov
adc
mov
leave
inc
adc
icebp
cli
pushf
aaa
add
ljmp
push
fiaddl
push
or
iret
mov
enter
sbb
or
lock
rolb
shrb
aad
jno
sub
cmpsb
enter
test
mov
std
xchg
shr
into
and
push
in
dec
outsb
pop
or
pop
mov
mov
fbstp
in
xchg
inc
mov
and
dec
cmp
aad
enter
mov
adc
ret
adc
dec
popa
inc
rorb
mov
arpl
sbb
aaa
xchg
aaa
pop
xor
fwait
xor
dec
add
aad
shlb
je
stc
push
jmp
adc
lods
inc
and
mov
and
xchg
sbb
outsl
inc
or
pop
das
lret
jno
jle
jg
sbb
cli
xchg
enter
push
lea
std
pusha
inc
push
inc
in
mov
or
insb
dec
mov
rcll
add
pop
imul
mov
lret
sbb
cmp
lahf
sbb
inc
insl
and
push
aam
loop
add
cmp
imul
rclb
cltd
popf
xor
mov
xchg
jge
lds
or
mov
mov
in
cmp
rcrl
mov
and
fadds
lods
jg
inc
mov
cld
fs
call
mov
std
push
inc
out
pop
loop
jmp
jmp
ja
dec
jg
dec
ret
xlat
ljmp
cmp
push
movsl
or
rcrl
adc
popf
loop
inc
in
lea
dec
out
cmp
outsb
icebp
pop
loop
fistpl
in
pop
repz
mov
call
cli
std
jle
xchg
mov
push
cmpsl
out
movsl
jbe
jo
jl
sub
sub
sti
mov
mov
movb
ror
sbb
shrl
xor
jmp
rol
pop
add
mov
mov
and
mov
imul
inc
mov
lods
xor
push
cmpsl
pop
mov
and
scas
call
xor
push
repz
hlt
jge
iret
cmpsb
sbb
xor
lret
imul
mov
insb
fists
mov
and
push
cwtl
cmp
movsb
aas
sbb
lods
jmp
int
sahf
xor
or
int3
inc
shrl
ret
addr16
xchg
lahf
pop
sahf
push
dec
xor
cmp
jg
leave
mov
and
aam
mov
adc
pushf
lahf
xchg
pmullw
rclb
rcrl
sub
int3
adc
or
popf
xor
fsub
jnp
dec
or
cmp
movsl
cltd
xor
fsubp
ja
mov
push
add
call
push
into
inc
mov
ss
stc
add
rclb
shlb
mov
jmp
das
xchg
pusha
pop
repnz
jno
sbb
popf
xor
icebp
out
in
sti
xchg
aam
jmp
cmc
movsb
pop
rclb
mov
push
inc
push
mov
inc
test
fstps
movsb
xchg
sub
add
popa
je
addr16
mov
and
inc
fcoml
jbe
lahf
gs
mov
mov
mov
loop
xchg
cwtl
in
orl
inc
data16
sahf
xor
mov
fwait
call
inc
mov
test
aam
cmc
aas
push
xor
aam
push
fmuls
nop
iret
mov
fcomi
sub
jmp
pop
fistps
push
cmp
xlat
and
roll
mov
shll
es
and
gs
dec
ds
ficompl
fwait
pusha
cmp
outsl
lods
jp
push
dec
les
jg
push
push
sub
int
and
sbb
movb
jmp
dec
pop
outsb
ljmp
pop
rolb
and
dec
sbb
cmp
add
shrb
xadd
fildll
cmp
dec
aad
cmp
cld
repz
mov
cmp
add
cmpsl
test
or
sti
fcoms
and
sbb
cld
add
inc
xchg
adc
cwtl
lret
sbb
mov
push
push
es
mov
xchg
sub
xor
sbbl
jnp
sub
xor
ret
sarb
test
mov
push
mov
push
sub
ret
scas
imul
sub
loop
mov
movsb
inc
enter
mov
pop
icebp
mov
dec
out
out
xchg
loopne
nop
jmp
mov
scas
adc
loope
cmp
cwtl
repnz
sub
int3
in
sub
jge
lock
or
dec
je
push
pop
push
out
test
mov
subb
xor
jl
scas
inc
jne
push
jmp
int
cltd
xor
js
xor
out
push
popa
ljmp
jecxz
cmc
test
adc
and
cwtl
or
mov
pop
addr16
cld
sbb
int
fcoml
add
cmc
std
out
ds
and
rclb
add
jp
loopne
out
sbbl
les
cmp
cmp
sub
xor
in
jns
test
shll
fdivrs
ds
lcall
pop
dec
stos
xor
sub
lods
mov
pop
sbb
std
inc
popa
repz
pushf
mov
or
and
aam
jns
add
in
mov
mov
loop
jnp
into
mov
and
or
dec
pop
or
aaa
add
sbb
out
xchg
cwtl
cmp
sti
outsb
sarb
pop
iret
leave
sub
sub
les
jl
cltd
scas
mov
lock
lds
push
mov
xor
sbb
loope
mov
adc
movsb
repnz
outsl
les
bound
faddl
mov
adc
inc
into
mov
lret
sbb
out
pop
das
int
xlat
jbe
je
and
and
and
negb
lcall
das
testb
xor
andl
mov
mov
xor
push
ljmp
outsl
jne
imul
callw
aaa
in
mov
ficompl
pusha
aas
pop
aad
adc
in
mov
jnp
push
sbb
mov
lcall
add
popa
jno
cltd
lods
mov
cmpsl
decl
pop
push
icebp
jl
int
cmp
sub
mov
mov
adc
or
push
sbb
mov
ja
mov
lret
xor
xchg
push
cltd
dec
adc
inc
push
mov
ss
in
inc
scas
add
jecxz
outsb
lret
cmp
mov
shlb
pop
lcall
sahf
lods
shlb
divb
ljmp
insb
cmp
xchg
cmc
hlt
mov
je
sti
xor
cmp
jnp
in
pop
sti
nop
inc
subl
add
jg
sub
movsl
push
add
out
sbbl
jmp
into
sbb
xor
in
dec
cmp
sub
imul
sub
outsl
js
dec
jmp
push
mov
inc
and
scas
nop
cld
inc
or
dec
mov
ss
push
iret
mov
and
add
or
cmp
sub
pop
mov
lahf
insl
xor
roll
lret
subl
push
mov
es
jl
dec
push
call
jnp
outsl
jns
mov
ret
test
imul
mov
and
sti
in
inc
ficoml
mov
sbb
cmp
je
xchg
cmpsb
insb
ret
jle
dec
and
jg
testb
xchg
adc
mov
pop
jb
loope
daa
adc
cli
and
stos
fisttpl
jle
call
add
or
pop
rol
cmp
jmp
push
sbb
stc
and
push
push
sbb
and
hlt
cli
xor
adc
loop
or
mov
push
jl
fists
pop
lods
icebp
sbb
cld
dec
jecxz
dec
fdivrl
push
xchg
inc
test
and
orl
mov
fadd
lock
cli
movsl
sbb
mov
inc
hlt
incl
ffree
lahf
test
xchg
dec
test
dec
loope
int3
xchg
fs
and
movsl
inc
lods
es
fidivl
push
test
in
mov
push
sub
xchg
out
sti
ret
frstor
aaa
addr16
popa
xchg
jle
mov
or
pop
test
mov
jnp
adc
push
je
dec
daa
ja
lcall
fcomip
cli
jb
in
test
mov
push
add
test
mov
xchg
mov
mov
dec
hlt
loop
fimuls
mov
movsb
add
xchg
orb
mov
fdivl
push
cmp
xchg
andb
outsb
push
sbb
push
push
add
xor
repnz
pop
mov
testl
sub
sub
movsl
in
add
icebp
dec
push
pop
or
sbb
mov
outsb
mov
adc
fcoml
aad
dec
xlat
push
fwait
sti
xor
sub
aaa
push
in
push
mov
and
dec
mov
mov
mov
fistps
aas
aas
stc
insb
push
iret
xor
xor
insl
shr
fwait
add
fs
sbb
xor
and
imul
js
push
movsb
shll
sub
pop
cmp
icebp
mov
push
push
outsl
call
movsb
cs
incl
lock
pop
mov
cmp
out
in
add
lds
pop
sbb
jmp
iret
and
in
inc
popa
cmp
mov
repnz
push
sub
shlb
roll
jae
or
pop
mov
roll
jo
pop
loopne
es
sbbl
outsl
in
or
arpl
dec
pop
mov
pusha
sbb
mov
test
clc
popa
das
jge
xor
in
les
mov
out
fwait
jge
mov
insb
add
xor
xchg
or
sbb
popf
jle
shrl
mov
js
ret
jae
jnp
test
repnz
cmc
cmp
sbb
js
push
jge
pop
push
inc
fstps
scas
lock
dec
push
div
adc
sbb
mov
pusha
lods
pushf
push
or
dec
pusha
insb
push
xor
sbb
repnz
mov
dec
arpl
test
and
add
in
std
into
xor
adc
sahf
aad
jno
cmp
or
push
fucomip
js
pop
stc
fstl
mov
aas
in
mov
push
push
idiv
call
cmp
xor
cmpsb
push
inc
cmpsb
lcall
jmp
pop
loope
push
add
testl
push
xchg
push
ljmp
inc
mov
jle
sbb
push
sub
stos
add
jg
popf
and
inc
jle
cmc
xchg
push
jmp
push
test
push
mov
sbb
daa
adc
xchg
icebp
pop
dec
lods
mov
push
adcl
xor
lcall
push
ss
notl
lea
cmp
xchg
pushf
pop
cltd
push
popf
out
xor
push
leave
roll
and
mov
fistpll
jmp
and
jne
push
jno
les
sbb
add
out
jae
sti
mov
insl
faddl
sbb
and
xchg
mov
and
cmp
popf
sbb
out
mov
stos
push
sub
xlat
cli
mov
xor
in
lcall
fcmovnu
ret
jns
adc
fimull
inc
mov
xor
cmp
push
and
test
fbstp
xorl
push
mov
sarb
lea
adc
xchg
add
push
dec
xchg
cli
jg
xchg
aam
cli
inc
hlt
add
mov
pushf
sub
sbb
clc
icebp
xlat
stos
loop
push
push
mov
dec
pop
xorl
inc
aam
mov
xchg
sub
cmc
dec
pop
inc
and
push
mov
scas
sub
orb
idivb
outsb
mov
push
out
mov
in
xchg
loopne
cwtl
jle
pop
outsl
pop
sub
and
jne
test
sbb
lret
jmp
cmpl
push
cmp
sbb
test
sub
jae
jmp
adc
push
add
sbb
mov
xchg
sbb
movsl
mov
mov
pop
mov
push
add
inc
mov
push
push
lret
and
cmp
pushf
or
fld
aam
jl
lcall
or
cmp
push
xchg
repz
mov
cmp
mov
xchg
mov
pusha
mov
xlat
addr16
pop
dec
pop
mov
jle
sub
and
int
push
mov
lret
adc
sbb
ljmp
out
dec
fdivl
test
and
pop
and
adc
jo
pop
repnz
inc
loope
mov
gs
push
mov
pop
xor
sar
inc
push
mov
stc
mov
scas
bound
xchg
adc
ss
scas
daa
sub
cwtl
jb
mov
pop
and
fs
jns
add
das
mov
nop
comiss
cmc
mov
xor
fcompl
add
xor
push
je
xor
test
xchg
fidivl
je
pop
sahf
xor
imul
mov
int3
out
xlat
mov
jnp
dec
add
xchg
in
mov
sbb
out
xchg
sbb
jle
jbe
in
iret
daa
jmp
lea
pop
hlt
jnp
push
jb
je
sbb
cmc
sbb
ds
adc
ljmp
int3
inc
negl
je
pop
lret
jmp
stos
xchg
inc
fnstsw
adc
mov
jne
adc
fdivl
dec
mov
mov
lods
rolb
mov
pop
xchg
xchg
cmp
and
in
or
nop
shlb
xchg
or
daa
call
xchg
cmp
insb
jno
xor
push
sti
lock
scas
push
scas
adc
fwait
and
xchg
clc
xor
and
mov
mov
jg
mov
out
jecxz
mov
xchg
dec
sbb
cwtl
fcomps
out
mov
dec
add
jge
insl
and
pop
scas
or
xchg
std
dec
fisubl
xor
mov
rclb
sahf
aaa
xor
fstpt
xchg
or
or
mov
push
sub
xchg
sub
mov
mov
pop
xor
and
adcb
inc
push
mov
xchg
mov
lahf
shr
lea
mov
leave
mov
lret
call
mov
fiaddl
mov
inc
jge
or
jmp
rcr
dec
ss
xor
xchg
cltd
int
cli
and
ret
addr16
xlat
pop
mov
sahf
lods
mov
test
jnp
jg
fwait
mov
xor
scas
jge
stos
push
out
bound
jne
dec
aaa
jno
xchg
lahf
xor
jnp
xor
out
out
enterw
xchg
pop
movsl
mov
lock
mov
xor
and
adc
mov
mov
adc
pop
in
int3
adc
out
enter
lret
xchg
inc
pushf
ljmp
mov
mov
lock
sub
lock
shl
out
and
lret
enter
xlat
jo
outsl
ret
push
sbb
mov
fwait
lds
decb
mov
mov
movsl
lcall
cmpsb
pop
xor
jp
sbb
mov
sti
insl
mov
inc
imul
cmpsl
and
nop
mov
imulb
fstps
test
adc
in
je
add
test
leave
xchg
iret
fstpt
push
pop
imulb
shrb
cmp
cmp
iret
aad
lret
sbb
adc
and
fmull
fldpi
fstpl
in
lock
out
mov
sbb
cmp
out
mull
sub
jae
push
xchg
adc
cmp
imul
fcmovu
enter
test
rcll
xchg
test
test
lret
je
sbb
loop
mov
mov
test
cmp
out
movsl
leave
mov
push
lahf
mov
int
icebp
and
jne
inc
sbb
lock
mov
out
test
ret
pop
sub
cmp
arpl
xchg
daa
ret
rorl
das
and
sbb
inc
fldl
popf
adc
xchg
jecxz
xchg
dec
mov
es
arpl
push
addl
jl
scas
adc
cmpsb
fidivs
and
push
mov
xchg
sahf
cmpsb
daa
pop
and
pop
adc
sti
or
imul
sbb
jo
mov
add
sub
inc
jns
rcrl
xor
mov
into
mov
mov
sti
mov
sub
pop
push
sbb
adc
xor
clc
xor
xchg
sub
lea
shll
in
fmull
enter
in
or
int
lcall
idivl
push
es
xlat
outsb
int3
stos
mov
pop
lods
and
movsb
jg
mov
ds
xor
sub
push
inc
movsl
clc
jg
cmpsb
int3
push
inc
into
xlat
jge
jge
jle
sahf
pushf
addr16
rcl
and
lret
push
movsb
std
xor
cli
pmaddwd
add
fcoms
xchg
pop
js
sbbb
push
repz
stos
out
push
mov
in
adc
cs
std
add
outsb
lea
mov
popa
adc
in
aad
jb
pop
imul
cmpl
xor
adc
ss
xchg
fwait
shrl
cld
adc
icebp
sti
add
std
pop
add
in
xchg
fs
sub
mov
sbb
cmpsl
gs
pop
push
gs
xchg
pop
dec
mov
inc
les
mov
insb
iret
in
jp
sbb
mov
mov
dec
rcl
push
push
cmp
in
stos
jbe
sbb
insl
push
fucomp
outsl
push
sub
adcb
jb
inc
popa
filds
dec
xchg
sbb
hlt
lret
aaa
push
jno
sbb
xor
out
dec
out
add
movsl
dec
pop
xlat
xchg
adc
les
mov
aas
rcrb
fldt
jle
xchg
xchg
lods
iret
xchg
inc
lea
hlt
adc
mov
pop
lahf
mov
mov
push
push
sbb
cmpl
fcom
xor
mov
push
mov
jmp
aas
push
pop
fisttpll
sub
popa
jmp
rclb
xlat
rclb
shll
movb
xchg
xchg
cmp
imul
jno
ja
rcrl
sbb
and
xchg
in
push
jbe
add
and
dec
jb
repnz
arpl
xchg
call
add
stos
sub
mov
stos
ljmp
sbb
xor
mov
adc
add
inc
mov
or
nop
push
adc
push
jne
push
sahf
inc
jb
int
jecxz
jl
push
mov
sbb
xlat
outsb
sub
inc
hlt
cmpsb
aas
sub
nop
dec
es
add
pop
arpl
mov
xchg
cmp
adc
push
inc
add
add
imul
es
mov
repz
mov
push
jb
ljmp
out
test
jnp
scas
jo
fiadds
stc
ds
and
lcall
and
xchg
sahf
stos
mov
fwait
bound
jne
out
xchg
sub
loopne
clc
mov
lret
push
ss
sbb
push
inc
mov
pusha
popa
int3
in
jns
lds
mov
cmp
xor
jle
aam
dec
icebp
js
push
out
push
stc
jl
inc
pop
popa
sub
ret
inc
xchg
outsl
mov
jae
ds
in
mov
inc
mov
xchg
or
add
ljmp
movsb
popa
fcoml
int3
fsts
bound
mov
cmp
fsubrl
or
pop
dec
stos
shr
nop
cs
add
add
in
add
ja
lods
mov
pushf
mov
mov
movsl
js
lret
adc
call
jne
popf
ds
dec
dec
cmp
aad
cmp
in
lods
std
and
int3
jae
loop
lods
int
jge
push
jmp
mov
or
cwtl
das
mov
dec
fsubr
xchg
xor
fidivs
loope
or
es
jl
leave
xor
popf
fs
clc
or
push
in
iret
nop
inc
xor
jae
cltd
inc
jmp
mov
lret
dec
jmp
jecxz
xor
mov
mov
xchg
mov
inc
jg
mov
inc
cmp
addr16
stos
dec
jle
jne
outsl
dec
sub
lret
std
ss
aad
sbb
cwtl
pop
clc
les
mov
popa
mov
dec
xlat
int
push
test
cs
mov
testb
in
xor
jmp
dec
cmp
adc
lods
lret
cltd
mov
ja
pop
stos
pushl
push
repnz
xchg
sahf
in
jmp
ror
pusha
add
in
test
and
fstl
mov
or
ja
push
sub
test
mov
dec
xchg
cmp
adc
or
mov
inc
mov
pop
sub
mov
push
pop
pop
lods
gs
out
cld
addr16
pop
addr16
lcall
decl
push
jno
cli
or
test
xor
or
pushf
sub
and
sbb
xchg
dec
jno
scas
data16
jnp
push
jbe
jae
cmc
mov
adc
lret
testl
xlat
pop
rorb
pop
or
push
jnp
iret
mov
mov
xor
pop
jl
mov
movsl
std
lods
inc
test
lock
popf
push
fwait
lds
imul
test
xchg
cmc
cltd
adc
cmpsl
inc
cli
adc
adc
nop
mov
fcompl
shll
jnp
nop
sub
cld
mov
cmp
mov
pop
aaa
sub
dec
sub
mov
dec
ret
loope
fwait
xchg
test
test
cmp
clc
loope
repz
call
jle
enter
sbb
sbb
stos
mov
cli
popl
xchg
cli
fsubp
jnp
pop
push
mov
or
shll
adc
sbb
pop
mov
mov
sub
insb
aas
xchg
xchg
dec
rol
pop
add
and
int
push
shr
add
push
mov
aad
jb
xchg
cmp
iret
mov
pop
in
arpl
mov
jno
pop
add
mov
lcall
test
push
cmpsb
test
cld
dec
test
ret
jnp
mov
fdivrl
xchg
loopne
push
cli
inc
addr16
divb
cltd
push
lcall
adc
loopne
insl
repnz
sub
dec
ljmp
mov
lea
mov
adc
adc
sbbl
mov
and
ss
clc
or
pop
adc
pushf
adc
or
xchg
mov
in
xor
std
sbbl
adc
daa
iret
clc
sbb
test
push
or
mov
adc
push
push
shr
inc
cwtl
stos
jmp
out
jne
hlt
xchg
pop
ljmp
push
in
shlb
push
and
jae
mov
scas
push
ljmp
add
std
mov
mov
aam
call
dec
mov
mov
nop
jne
pop
jns
xor
fisubl
es
fcmovnbe
bound
inc
test
loop
ret
rcrb
das
dec
push
cmp
pop
ficoms
xor
pop
pop
lock
cmp
fnstenv
pop
mov
mov
sahf
mov
hlt
mov
add
mov
cmpsb
push
fwait
jae
cmp
xchg
cmpsb
adc
and
sub
xchg
lcall
push
mov
push
lea
sti
mov
shrl
adc
gs
pop
xchg
cmp
movsl
mov
xor
jecxz
stc
js
mov
jl
out
inc
mov
hlt
xor
add
pop
insl
jbe
in
cmpsl
adc
cmpsb
arpl
cs
push
stos
pop
dec
mov
scas
mov
jnp,pn
test
iret
fiaddl
and
jle
ficoms
sti
rorb
into
and
cmp
push
in
push
jno
test
add
movsl
pop
dec
and
ja
fidivrl
xchg
push
mov
outsl
push
sub
pop
outsl
stc
jle
dec
sbb
test
sub
cmp
stc
or
sbb
in
cld
sbb
sbb
fistpll
in
negl
lods
lahf
push
jb
or
push
mov
sub
jne
loop
scas
fiadds
add
mov
or
xchg
sub
stos
ds
dec
mov
cmpsb
mov
sbbl
mov
jg
sar
xchg
mov
movsb
lods
mov
cmc
jbe
pop
dec
ds
inc
in
sub
pop
lret
addr16
xchg
stc
or
mov
xchg
rcrb
ja
test
pop
std
loopne
in
xchg
cmp
jne
dec
repnz
les
sub
jne
bound
adc
inc
call
fdivs
jge
add
insl
int
mov
adc
loop
notb
inc
fnstenv
sbb
stos
in
sbb
lcall
cmp
jns
insl
aad
mov
or
shrl
xlat
mov
adc
testb
imul
ret
rcrl
pop
ljmp
push
pop
mov
cld
adc
std
inc
inc
bound
xchg
gs
pop
mov
add
mov
xchg
fcmovnu
rol
incb
pop
ja
pop
pmulhw
ds
insl
mov
rorl
adc
dec
cmp
sti
sbb
addb
roll
arpl
daa
pop
cmp
add
rdmsr
test
in
loopne
inc
lahf
fsubp
mov
shr
jge
ljmpw
repnz
ret
cwtl
outsb
pop
cmpsb
xchg
xor
pop
inc
in
test
fsubrs
mov
iret
movnti
gs
arpl
loop
dec
or
push
pop
inc
push
cltd
adcl
push
fs
sub
in
mov
fs
pop
mov
cmp
in
jge
dec
scas
push
xor
xchg
mov
jne
push
dec
faddl
xchg
movsl
mov
jge
xor
idiv
or
dec
mov
mov
iret
fistl
out
jbe
rclb
dec
cwtl
test
fwait
aam
jbe
sbb
fcomi
pop
cltd
movsl
cmp
mov
test
bswap
jge
inc
sub
dec
lret
mov
xor
dec
cmp
xor
popa
or
xchg
or
fstl
cli
lods
push
mov
in
fsubs
pop
or
jbe
sti
imul
cmp
inc
clc
mov
inc
xchg
xchg
scas
mov
dec
bnd
fbld
or
nop
mov
push
insb
sub
nop
mov
in
inc
mov
ljmp
inc
or
pop
mov
adc
and
fs
pop
movsb
sgdtl
mov
sbb
ret
imul
mov
pop
int
lcall
inc
pop
cmc
call
mov
push
jns,pt
add
push
data16
andl
and
mov
mov
push
lret
dec
mov
das
cmpsb
aam
stc
mov
xor
sbb
ret
xor
testl
sbb
xchg
jp
test
daa
pusha
movsl
icebp
cltd
int
fnstenv
daa
ljmp
push
in
sar
jne
inc
mulb
jp
jns
xor
mov
stos
ret
xchg
ds
mov
iret
jno
add
sbb
and
mov
clc
sbb
lret
xor
jg
cs
dec
cwtl
sahf
pop
mov
xor
cmpsl
jb
bound
jp
sbb
enter
xchg
cmpsb
mov
rep
ret
aam
jno
jns
stos
hlt
sahf
lods
insb
add
iret
jbe
pop
loopne
inc
gs
inc
cmc
cmp
add
dec
leave
in
pop
adc
aad
or
pop
insb
or
ja
or
repz
cmpsb
flds
pusha
push
loop
pop
mov
nop
push
xor
arpl
lret
push
inc
xlat
xchg
mov
sub
mov
push
jg
ret
loop
xor
push
test
push
add
mov
aad
iret
cmc
or
lods
xchg
call
adc
aas
push
dec
push
mov
dec
in
adc
push
jb
inc
and
gs
enter
test
mov
or
fdivs
insl
pop
sbb
lret
pushw
xchg
mov
adc
hlt
mov
push
jg
mov
pop
fimuls
das
gs
loop
adc
jno
pop
in
and
sub
rcrb
cwtl
push
out
rcl
iret
gs
movsl
lret
or
ja
loop
in
sbb
xchg
ss
pushf
jmp
dec
mov
sub
lret
stc
mov
fimull
pop
fnsave
pushf
divl
pop
test
js
cmpsl
mov
sbb
idiv
adcb
jno
inc
xor
fbstp
ss
cmp
jle
cltd
lock
fidivrl
pop
les
mov
pusha
stos
sub
int3
or
and
jne
xor
popa
sub
fs
add
ss
cmp
cwtl
jb
enter
ret
and
xor
xchg
sbb
loopne
cwtl
adc
xchg
pop
and
scas
inc
scas
lds
cmp
and
pop
std
lods
shll
xor
int
push
mov
xchg
leave
inc
scas
jle
loopne
fbstp
mov
ljmp
pop
mov
test
mov
mov
lods
mov
push
sarb
fbld
ss
xchg
cmpsl
imul
aad
jns
sbb
jnp
bound
cwtl
or
scas
mov
xor
stc
inc
push
lret
cmp
xor
sbb
sub
shrb
add
mov
jg
dec
mov
xchg
mov
pop
jnp
insl
loopne
movsl
fidivl
loop
jnp
add
push
fidivrl
and
fstpl
push
mov
mov
jbe
scas
ret
mov
pop
push
jno
push
ds
adc
dec
cmp
mov
lods
add
rcll
inc
jl
dec
mov
push
stos
outsb
xchg
mov
lock
rcrl
sub
pusha
pop
jge
test
cmp
xchg
cwtl
bound
out
mov
jecxz
and
out
lcall
incb
in
orb
xor
enter
push
dec
dec
test
rcrl
mov
push
pushf
cmp
mov
mov
cmp
fs
inc
scas
mov
inc
in
insb
sub
add
cmp
push
cmp
sub
rcr
mov
pop
xchg
and
sbb
cmp
adc
jle
xor
adc
mov
jbe
mov
andb
arpl
jne
sub
arpl
insl
in
push
and
test
jmp
incb
lods
dec
lret
aaa
dec
dec
cltd
in
aad
sub
jecxz
dec
leave
mov
imull
out
add
push
or
test
lahf
lods
inc
filds
test
fldt
cmpsl
out
add
jmp
in
jb
loope
add
ret
lret
sbb
outsb
xor
sbb
push
fnstcw
into
sti
dec
call
mov
rcrb
mov
outsb
xor
add
mov
out
mov
mov
and
stc
adc
cwtl
inc
sbb
sub
push
test
dec
jl
cmp
hlt
loope,pt
add
ja
fsubrs
xchg
pushf
adc
mov
xor
loope
pushf
and
cwtl
fstps
jl
dec
and
popa
mov
dec
cld
stos
jle
pusha
outsl
out
sub
les
xchg
mov
jo
test
adcl
push
lock
xlat
rolb
xchg
mov
mov
pushf
lock
push
pop
negb
daa
xor
mov
and
movsb
and
icebp
cmp
mov
pop
inc
mov
shlb
mov
xor
pop
pop
loope
mov
xchg
dec
pusha
pushf
rclb
mov
les
icebp
inc
sub
cwtl
stos
dec
jge
enter
dec
xchg
cmp
inc
mov
add
ss
testl
adc
into
fdivl
push
xor
add
scas
lods
test
adc
jb
xchg
mov
lods
outsb
sbb
sarb
inc
stos
movsl
mov
mov
add
xor
xor
lock
jb
add
sbb
sub
pushf
push
pop
mov
std
lods
repz
adc
addr16
cmp
and
sbb
test
out
inc
outsb
add
pop
das
push
pop
pusha
pop
scas
xor
ret
int3
inc
popa
iret
xchg
push
in
sarb
stc
dec
and
lea
push
fs
xchg
in
in
fs
and
pop
cld
lods
fs
cmp
pop
aad
fimull
lds
arpl
add
lock
sti
iret
adcl
jae
shll
dec
inc
sahf
fsubl
dec
adc
dec
add
adcl
sub
aaa
leave
in
iret
arpl
add
clc
push
push
xor
xchg
xlat
xchg
cmp
aas
clc
cmp
clc
leave
mov
mov
mov
mov
in
scas
jb
push
cmpsl
adc
sbb
mov
or
int3
sub
daa
push
mov
mov
inc
adc
xlat
sbb
fldl
add
mov
pop
das
sbb
rclb
pop
out
sub
adc
sarl
and
push
mov
addr16
jbe
repnz
or
enter
or
jp
lds
je
ret
outsl
adc
cli
dec
cmp
sub
cmp
xchg
stos
rclb
pop
out
inc
add
aaa
mov
jno
mov
mov
cltd
xor
sbb
movsb
gs
mov
rorl
pop
xor
adc
pop
pop
std
push
movsl
or
mov
mov
push
stos
xchg
loopne
mov
fmull
adc
jbe
push
xor
notl
jne
lods
into
enter
push
insl
jb
dec
shlb
xor
lock
and
push
jge
cwtl
inc
push
cltd
xor
bound
push
call
mov
mov
test
lret
sti
aaa
jge
mov
fldl
imul
and
mov
testb
or
sub
mov
stos
cmp
jle
dec
pop
rcl
jl
add
fwait
in
or
movsb
adc
ss
pop
mov
dec
out
mov
inc
jo
sbb
dec
or
jne
mov
shlb
cltd
loop
xchg
lea
lret
loop
divb
sub
dec
xchg
xor
push
scas
sbb
add
arpl
xchg
push
mov
cmpb
dec
aad
inc
popa
or
mov
popf
adc
data16
int3
adcl
imul
lret
xlat
and
add
jmp
jl
push
inc
sbb
lods
mov
sti
es
fnstcw
cmc
xchg
inc
inc
psllq
aas
pop
aas
mov
xchg
lods
pop
or
mov
es
push
sub
and
test
mov
pusha
jmp
xchg
sbb
sub
sbb
cmp
sbb
sub
in
pusha
sub
lods
mov
sub
test
aas
mov
enter
mov
add
out
fidivrl
movsb
dec
or
std
xor
pop
add
inc
ret
loopne
inc
cmp
movsb
jns
cmp
pop
inc
xchg
mov
jb
std
xchg
imul
arpl
or
fadd
mov
js
notl
sub
out
loopne
imul
jno
pop
mov
or
cs
or
out
cltd
aam
addb
and
hlt
xor
ficoml
and
xor
ret
nop
dec
dec
dec
sbb
cltd
sar
sub
mov
sbb
outsb
push
xchg
aam
pop
cld
pusha
test
loopne
aaa
and
jecxz
cmp
in
std
jp
fdivrp
inc
adc
mov
imul
jb
and
xchg
sub
jge
dec
and
cli
xchg
insb
jb
jno
sub
mov
mov
push
aaa
stos
or
sbbb
sub
jg
sbb
sti
mov
pop
mov
enter
sbb
cs
cmp
out
pop
movsl
aad
push
lds
imulb
outsb
mov
clc
jge
loopne
cmp
call
mov
dec
enter
or
lds
in
pop
cmpsl
aad
jp
adc
stc
lods
mov
aas
sub
pusha
shrb
lahf
mov
call
jge
push
out
jp
punpcklbw
pop
aaa
push
lret
and
jb
lds
jno
js
bound
aas
or
pop
sub
push
ror
mov
and
xchg
sub
ljmp
insb
and
out
mov
bound
adc
jno
lahf
cmp
push
ja
jmp
xchg
aad
leave
adc
dec
xchg
mov
mov
or
sbb
enter
popa
imul
insb
pusha
mov
insb
push
mov
call
ljmp
sbb
test
aad
ljmp
ficomps
ret
inc
mov
sbb
add
divl
cmpsl
jle
mov
jl
xchg
cmp
xor
dec
sbb
sbb
mov
aam
imul
mov
jl
push
mov
mov
leave
pop
fwait
mov
fsubp
cld
pop
push
inc
or
dec
sub
in
adc
xchg
sarb
pop
aaa
mov
je
sahf
movsl
inc
mov
xchg
lret
xor
push
lods
push
push
mov
xlat
incl
dec
fnstsw
mov
fsubl
add
cmp
sub
xor
mov
shrb
aad
add
pop
fstpt
lret
bound
aas
push
call
in
inc
lods
les
roll
ss
int
enter
sbb
outsl
xchg
js,pn
cwtl
or
imul
or
fsubs
pop
jno
popa
clc
test
mov
cs
jbe
lahf
sub
adc
inc
popf
ljmp
lret
imul
mov
pop
xchg
cmp
stos
and
pop
mov
push
aad
push
mov
or
fistl
repnz
subl
or
jecxz
jecxz
or
xor
arpl
cwtl
pop
mov
sub
xor
dec
cmp
scas
adcb
or
xor
cmpsl
mov
mov
fcmove
in
in
mov
push
and
daa
sub
dec
and
dec
call
inc
call
xchg
cmp
mov
sub
pop
loope
xchg
pop
push
shr
clc
hlt
inc
sub
fs
push
push
dec
ret
dec
out
divl
add
iret
cmpsb
out
push
jmp
xorl
sbb
jae
ss
lret
sahf
xor
mov
insl
mov
push
jmp
lcall
jle
decl
int3
sahf
and
push
push
movsl
inc
movsl
ror
cmp
sbb
jno
cmp
xchg
jecxz
popf
pop
orl
mov
nop
lods
jg
hlt
xchg
jg
shl
dec
mov
loop
mov
clc
xor
aam
cmpsb
ficoml
lods
or
mov
cli
jae
dec
in
test
dec
jecxz
shrl
mov
jp
pop
mov
rorl
popa
loope
iret
push
jge
cltd
xchg
movsb
and
in
imulb
bound
iret
in
mov
pop
arpl
ja
lcall
sbb
mov
imul
mov
jns
out
int3
out
push
out
adc
dec
ds
jno
out
add
clc
popa
imul
outsb
mov
scas
mov
test
in
inc
and
xor
imul
ja
add
in
pop
lret
push
sub
jno
mov
sbb
jmp
and
lea
test
push
out
pushf
lret
cmp
stc
mov
dec
and
push
imul
jmp
mov
in
std
push
sbb
scas
je
jp
lods
fdivrs
and
enter
rcrl
mov
mov
xchg
fs
in
mov
add
dec
lods
pushw
inc
je
bswap
insl
notl
les
sub
idivl
addr16
pop
fdivrs
stc
rcl
loop
push
dec
inc
cmp
inc
in
stos
jmp
add
pop
dec
cltd
hlt
dec
adc
insb
rcl
rolb
shr
add
ljmp
pushf
sbbl
inc
pop
sbb
arpl
and
scas
aas
repz
mov
fcmovne
test
mov
dec
inc
push
call
clc
ret
out
xchg
mov
jns
stos
xlat
cmp
cmp
sub
dec
ret
aam
js
jle
shr
popf
call
mov
push
int
insb
call
mov
jecxz
ficompl
push
mov
popa
testl
push
sub
sbb
outsl
imul
sbb
mov
or
xchg
sub
hlt
lods
nop
lock
icebp
ret
add
cmp
pop
mov
mov
mov
adc
lret
mov
fdivl
andb
cld
or
mov
and
sbb
pop
adc
gs
push
xchg
mov
lods
jbe
sub
jl
push
or
pop
out
push
mov
out
outsl
xor
sbb
outsb
hlt
jae
int
sub
pop
push
rcrb
mov
loop
fs
jb
cmpb
mov
dec
loop
xchg
shlb
addr16
popa
in
cmp
cld
test
lret
sbb
sbb
in
out
add
sti
push
nop
leave
mov
dec
andl
loope
out
add
out
or
xchg
orl
or
lea
add
jnp
xorl
sbb
js
dec
add
adc
cmpsb
sti
mov
mov
fdivrs
or
push
dec
cmpsb
mov
repnz
lds
add
jl
stos
daa
sbb
popa
js
orb
or
mov
data16
push
jl
inc
push
push
cmp
xchg
mov
jbe
mov
loop
dec
in
ret
rorb
scas
pop
pop
pop
add
subb
sub
or
bound
xchg
in
xor
xor
mov
mov
das
ret
es
xor
dec
mov
and
or
xchg
jmp
add
ss
jmp
xchg
mov
pop
and
out
cmp
jb
cmp
jns
pop
mov
mov
sub
xor
xor
xor
jmp
call
scas
ss
addl
push
and
sbb
pop
cmp
or
nop
jmp
push
jae
aad
pop
add
fucomip
in
mov
adc
or
add
lods
mov
jne
mov
adc
out
arpl
je
enter
jb
mov
bnd
ret
and
ret
jl
xor
and
jnp
test
out
setp
sub
or
push
push
notl
dec
inc
jg
mov
jno
xchg
inc
pushf
loopne
leave
mov
and
rorb
jp
push
cwtl
rcll
sub
jnp
scas
xchg
pop
sbb
mov
out
addb
push
out
scas
and
sahf
test
cld
mov
cmp
shlb
aas
mov
mov
mov
sbb
fldt
rcrb
sbb
dec
push
aaa
push
cmp
jns
repz
lods
and
xchg
loopne
push
xchg
jecxz
repnz
std
xor
pop
and
cld
inc
shr
fsubrs
scas
mov
andl
sub
push
push
xlat
push
mov
jle
pop
shll
sbb
sarl
push
xchg
mov
popf
ss
int3
rolb
xchg
popa
inc
adc
repz
jmp
add
sub
sbb
lds
xchg
insb
inc
push
test
mov
adc
loope
call
fwait
lcall
push
sbb
loop
jg
or
and
mov
sbb
jp
mov
adc
data16
pop
clc
lds
fwait
fwait
jno
test
mov
mov
dec
loop
sub
aam
push
pusha
ss
mov
dec
cmpxchg
mov
scas
cmp
fwait
stc
loopne
mov
push
xchg
aam
sbb
out
fcmovne
xchg
sub
cltd
lahf
aas
cmpsl
icebp
lock
shll
fwait
xor
pop
out
pop
cmp
inc
rorb
dec
dec
jmp
loopne
icebp
in
andb
inc
into
test
pmuludq
fsts
leave
scas
ret
push
push
std
cmpsb
sbb
mov
lret
pop
lock
nop
jmp
orb
and
inc
jae
xchg
sub
in
cwtl
push
in
and
add
cmp
stc
shl
jne
test
in
int
and
les
rcl
negl
bound
ljmp
inc
sbb
dec
inc
push
jnp
shl
mov
lods
pop
negb
add
aas
xchg
jmp
rorb
mov
jae
stos
push
cmp
jg
dec
mov
pop
mov
push
in
jo
adc
and
shrb
cmp
cmpsl
aaa
aad
xchg
aam
pushl
mov
test
mov
lods
mov
sub
rep
jle
aaa
pop
addr16
pop
ret
xchg
movsb
pop
fsubl
dec
std
mov
mov
mov
dec
xor
mov
scas
call
adc
xchg
sbb
lods
inc
jbe
pop
mov
mov
aad
jge
test
std
and
adc
ret
adc
sti
dec
lds
push
stos
adc
ret
xor
xchg
jo
xchg
lea
test
jno
fwait
lret
xor
fwait
scas
test
loope
jnp
or
jbe
shr
test
or
inc
loopne
pop
pop
out
dec
cmc
adc
add
dec
and
push
imul
and
push
push
mov
shl
test
ret
mov
in
adc
hlt
jp
xlat
xorb
push
addb
pop
fs
aam
ret
popf
dec
iret
mov
and
and
mov
xchg
mov
xchg
test
rorl
div
mov
pop
enter
repz
imull
aad
mov
ja
push
xor
nop
push
pop
push
xchg
mov
arpl
faddl
sbb
clc
test
push
jle
repz
mov
rol
jb
pop
ret
sar
push
es
pop
pop
stc
xorb
aad
stos
sbb
jl
scas
push
sbb
std
iret
fwait
and
xor
and
es
fadds
out
mov
push
aad
jl
jnp
in
mov
dec
fisttps
stos
data16
je
mov
pushf
xchg
mov
mov
int
sub
push
or
adc
cmp
pop
jecxz
es
mov
ds
cmpsb
dec
jae
cmp
mov
lahf
xor
stos
pushf
mov
push
out
fwait
pop
divb
scas
cs
mov
adc
cmp
jecxz
add
mov
fldl
lcall
inc
pop
pop
adc
sub
cmp
nop
imul
cmp
ss
in
cmp
xor
pushf
enter
lods
adc
dec
lds
add
les
jmp
jnp
mov
hlt
and
mov
ds
leave
pop
test
int3
mov
lahf
pop
push
pop
out
aad
pop
cmp
iret
gs
jmp
mov
push
sbb
lock
mov
insl
cltd
mov
cli
ljmp
jl
xor
sub
sbb
and
outsb
into
in
loop
mov
sbb
aaa
pop
jo
mov
jmp
arpl
jmp
cmp
idivl
cmp
fnstenv
pop
mov
pop
test
inc
adc
pop
mov
data16
inc
cs
lret
push
xchg
dec
mov
jge
mov
mov
fdivrs
mov
mov
push
sub
cmc
insl
jle
das
xchg
mov
test
inc
push
jle
or
sub
cli
lahf
dec
adc
ror
fwait
dec
imul
lds
call
enter
cs
scas
popf
scas
xchg
jge
cmc
aas
lret
insl
sbb
inc
stos
mov
inc
jp
cmp
andl
or
mov
sbb
hlt
xchg
xchg
cwtl
sbbl
lds
cmc
pop
movsb
icebp
int
and
dec
fs
icebp
sub
mov
movsl
in
jl
aad
fdivrl
mov
les
rcl
add
dec
inc
fs
mov
mov
dec
push
sti
ror
xlat
lcall
cmp
lods
das
mov
adc
cmp
xlat
dec
in
imul
fnstenv
aaa
push
jl
cltd
inc
out
push
dec
mov
in
fiaddl
adc
icebp
jl
mov
inc
cli
jno
dec
insl
dec
jns
testb
movsb
repz
cmp
pop
cmpsb
adc
mov
push
pusha
sub
mov
push
jnp
popl
rcr
cs
ds
jp
cmpsl
ja,pt
and
lds
xchg
aas
pop
xor
cmc
mov
sub
or
inc
test
dec
add
or
es
nop
push
add
imul
add
cmpsb
and
pop
addr16
jno
aas
andl
arpl
jne
and
add
mov
push
loope
rol
out
xor
mov
push
inc
ljmp
popa
inc
ficoml
cmp
mov
xchg
insb
insb
pop
test
jbe
js
dec
mov
xor
or
addb
lock
divb
inc
into
add
dec
dec
mov
call
inc
repz
arpl
enter
push
cmp
fcmove
cmp
mov
add
rclb
add
cmp
js
push
mov
sub
push
xor
jae
lods
in
mov
mov
das
ret
pop
test
das
add
add
gs
dec
scas
loop
enter
ret
push
jl
popa
movsb
aad
push
call
push
ds
cwtl
or
das
mov
push
dec
psubusb
outsl
cs
dec
daa
sbb
pop
ret
mov
lcall
data16
push
cmc
dec
or
inc
repz
es
push
pop
inc
lcall
mov
lahf
mov
or
mov
inc
imul
bound
mov
pop
mov
cmc
arpl
shrl
xchg
imul
stc
popf
mov
in
je
fdivl
leave
sti
cltd
stos
sub
xor
adc
jmp
cmp
ja
cmpb
mov
ja
ja
jne
arpl
fidivl
std
xor
and
aaa
frstor
sahf
lret
push
dec
ret
fldcw
pop
enter
sbb
add
cli
push
imul
iret
xor
imul
xor
fistpl
and
cmpsl
adc
add
scas
xchg
jno
and
xlat
outsl
xchg
mov
inc
daa
adc
test
cmp
pushf
fdivrs
push
cltd
dec
mov
stc
gs
push
sub
lea
push
cli
out
sbb
jno
mov
dec
jg
stos
inc
movsb
mov
fidivrs
fsubs
adc
or
lgs
insb
mov
mov
pop
mov
dec
push
movsl
stc
leave
cmpsb
mov
mov
sub
fcompl
shr
pop
fsqrt
loopne
call
ljmp
mov
cmp
jecxz
adc
push
mov
leave
loopne
sbb
or
add
xchg
pop
mov
out
and
add
lahf
pop
dec
lods
test
shrb
aam
mov
enter
sti
fwait
xor
icebp
mov
inc
inc
pop
lahf
div
cs
pop
cmp
ja
repz
sub
and
xor
mov
inc
mov
inc
dec
add
inc
subb
xlat
pop
in
cmp
pusha
add
clc
in
or
cwtl
or
loopne
jl
pop
scas
aam
js
sahf
ret
jmp
sar
mov
out
mov
and
add
lods
stc
jmp
mov
shl
adc
jmp
xchg
insl
scas
sub
dec
adc
cmpsl
ret
in
mov
test
enter
sub
cli
push
cmp
loopne
pop
lret
push
adc
pop
clc
xor
push
loop
dec
dec
faddl
lcall
out
iret
out
mov
mov
push
sub
jge
sbb
in
popa
or
xlat
outsb
xor
scas
push
jne
xor
pop
shll
jbe
inc
out
icebp
mov
mov
mov
stos
pusha
xlat
sub
sub
insb
push
aas
jecxz
mov
movsb
xor
loop
inc
arpl
and
ds
jne
lcall
mov
adc
sti
ds
fsub
enter
xlat
daa
push
jne
or
icebp
xor
leave
lods
inc
jne
mov
dec
pusha
testl
ret
stos
push
mov
rcll
fs
mov
in
rcrl
adc
popf
sbb
push
jle
jbe
and
mov
psllq
or
cmpsb
outsl
lret
dec
cmc
ja
mov
aaa
push
jnp
sbb
pusha
sbbb
cli
push
adc
push
jno
pop
dec
xchg
push
pusha
call
or
pusha
js
loop
mov
xor
sbb
lds
je
sbb
fwait
aad
and
imul
sub
insb
jg
inc
inc
fnsave
loop
fdivrs
xlat
pusha
dec
cmpsb
mov
movsl
xchg
decl
jp
in
sbbl
or
sbb
fs
mov
bound
cwtl
out
push
jecxz
pushf
xor
in
mov
addl
fwait
mul
mov
aam
pop
inc
push
sub
fnstenv
mov
jo
ss
push
sahf
into
or
or
jno
fwait
jge
insl
mov
inc
cmpsb
pop
sbb
jge
lcall
enter
cmp
xor
adc
push
sbb
cs
fadds
mov
je
outsl
cmpsb
lock
iret
shrb
pop
out
imul
insl
inc
xor
out
and
mov
into
pop
ds
movsb
pushf
nop
adc
int
sbb
mov
rcrb
mov
xchg
cmp
arpl
inc
aaa
fdivrl
imul
lods
hlt
mov
cli
xor
cmpsl
insl
aam
mov
fwait
ja
das
xchg
mov
and
push
fwait
cwtl
sbb
dec
xchg
in
arpl
mov
loope
ss
xor
jmp
sysexit
repz
popa
ds
push
dec
fsubl
mov
pusha
push
xor
in
pop
outsb
scas
xor
xchg
push
aad
sbb
pop
pop
xor
mov
mov
mov
enter
leave
int
mov
pop
ljmp
idivb
fwait
aad
mov
mov
bound
mov
loopne
scas
mov
lret
fnsave
add
testb
xchg
movsl
popf
pop
loop
sub
jo
mov
enter
mov
and
je
push
mov
or
xor
rol
jge
insb
push
push
and
and
fwait
jo
pop
lret
pop
jns
and
fisttps
mov
es
add
pop
push
call
mov
loop
xchg
std
data16
sbb
mov
xor
stc
insb
rorl
pop
sti
scas
imul
pop
inc
mov
or
mov
xor
adc
mov
and
test
ret
push
mov
cwtl
clc
mov
lock
jp
adc
inc
std
dec
dec
in
push
jg
push
in
es
es
jno
test
dec
jbe
add
movsb
or
or
fisttpll
or
lret
incb
mov
jne
bound
test
shr
jne
sarl
xor
sub
shll
sub
fildl
mov
mov
add
inc
rcrl
xor
ljmp
enter
gs
arpl
push
iret
mov
xor
lret
xlat
mov
add
push
cltd
dec
inc
mov
fs
data16
into
enter
cmp
mov
sub
pop
mov
push
lea
jle
mov
ds
pop
shrb
add
cmp
xchg
adc
fcompl
fldenv
jbe
sub
lret
mov
mov
push
loope
mov
shll
icebp
xor
bound
loopne
es
push
and
jl
leave
push
xlat
stos
fcmovb
xchg
or
mov
adcl
out
lods
xchg
add
mov
ret
xlat
push
fcmove
pop
arpl
push
sarl
xchg
adc
sahf
test
bound
mov
stos
push
adc
imul
movb
sub
sarl
std
xlat
out
or
pop
cmp
dec
cmp
jp
mov
les
daa
adc
xor
outsl
or
in
xchg
shrl
negb
sbb
das
xchg
ror
push
popa
or
jbe
test
stos
stos
push
inc
push
cmc
push
adc
inc
sti
out
or
aad
ret
es
lock
dec
lahf
mov
xchg
in
pushf
xchg
and
adc
clc
mov
cmpsl
mov
jo
jns
jbe
lcall
inc
pop
aam
sbb
cmp
mov
neg
out
sbbl
in
enter
adcl
xchg
xchg
movsb
or
lods
js
pop
pop
dec
mov
gs
into
test
mov
fistpll
negb
mov
shlb
xor
int
mov
mov
rcl
adc
int3
loop
adc
in
sti
fwait
mov
adc
xlat
lea
push
jbe
in
outsb
repnz
andl
jecxz
push
repnz
sub
mov
outsb
add
xor
out
inc
pop
rclb
jno
push
cmp
shl
nop
adc
movq
xchg
mov
mov
in
mov
aam
mov
js
xchg
adc
jge
std
mov
mov
ja
cwtl
loop
pop
push
push
mov
push
jmp
xchg
jo
xor
fistpl
xor
mov
xor
loope
mov
dec
es
cmp
rclb
xchg
pop
loopne
call
lret
icebp
test
outsl
mov
mov
cmpsl
xor
aad
sbb
cmp
sbb
xlat
mov
mov
xlat
mov
sub
inc
xchg
clc
scas
insl
jnp
mov
fldenv
xor
mov
imul
outsl
rclb
loope
adc
xor
mov
out
mov
xorb
mov
dec
fwait
das
push
and
xchg
mov
sbb
pop
pop
jb
or
or
and
leave
outsl
mov
push
fs
mov
jle
sub
je
repnz
pushf
inc
scas
xchg
sub
mov
test
andl
fmul
jnp
adc
movsl
mov
repnz
loope
xor
xor
test
aaa
sahf
add
out
rcll
push
push
jnp
rcrb
inc
jecxz
shll
adc
or
sub
out
test
push
xlat
sti
dec
mov
lahf
pop
cmp
sub
dec
rclb
cmp
push
lcall
push
xor
push
shl
movsb
jmp
loop
loop
fsts
lret
cmpsl
rcrb
rcrb
jge
std
lods
pop
sbb
sbb
inc
addb
pop
push
push
push
and
push
aam
out
mov
inc
sti
mov
testb
push
shll
adc
icebp
jb
loopne
mov
push
add
or
subb
ds
fistpll
xchg
arpl
movsl
dec
dec
mov
movsb
dec
sub
mov
add
and
das
ret
mov
arpl
jecxz
lret
xor
sub
mov
movsb
fcom
inc
lea
push
pop
scas
int3
lret
xor
mov
sub
orb
in
incl
push
aam
mov
mov
add
cmp
out
ret
xor
add
jo
xchg
daa
dec
mov
stc
mov
sub
or
inc
rcl
paddq
or
xor
sub
in
das
dec
pushf
insb
das
fcmovnbe
scas
pop
or
xchg
stos
dec
sbb
sub
mov
mov
add
inc
ret
negl
fmulp
test
repz
repnz
cmp
adc
sub
and
negb
movsb
outsb
aas
push
xlat
out
or
xor
push
js
negl
mov
and
out
pop
dec
mov
clc
or
stos
aam
xchg
adc
dec
dec
outsb
daa
int3
out
lcall
ds
scas
inc
inc
mov
lock
cmp
mov
dec
mov
sub
cli
int3
jo
pop
mov
inc
subl
or
jmp
mov
cld
outsl
jnp
scas
pop
sbb
ja
and
and
push
adc
daa
arpl
clc
aad
sahf
add
loope
push
jmp
lahf
xlat
jo
mov
pusha
pop
xchg
jl
fcmovnb
shll
xchg
pop
jle
add
xchg
fcompl
and
sbb
lds
and
shll
add
mov
mov
mov
lods
mov
dec
sub
lea
adc
pop
repnz
mov
add
jo
cmp
js
adc
inc
ret
mov
in
jo
pop
lds
std
je
out
ljmp
arpl
les
in
shlb
insb
pushf
and
sbb
inc
imulb
pop
add
add
adc
sbb
lea
cmp
lea
test
stos
mov
sub
sub
shrl
xchg
jmp
imul
jl
pop
lock
cs
repnz
movsb
cmp
add
cmp
xchg
mov
sbb
sub
pop
fs
push
int3
mov
aam
jmp
pop
movsb
add
iret
enter
jle
or
sarl
loop
cld
push
xlat
xor
stc
shlb
lret
dec
fs
int
fnsave
lods
inc
sub
lret
xor
aas
xorl
mov
adc
fcomip
outsb
cld
jnp
lods
fldl
lcall
cwtl
mov
stc
jmp
xchg
inc
cmp
stos
jne
push
ror
divb
xor
shlb
int
leave
jmp
js
dec
push
lock
or
shlb
inc
arpl
inc
ficoml
int
mov
mov
mov
add
jns
add
bound
pop
fs
shrb
movsb
push
outsl
cmpsb
mov
out
add
dec
adcl
mov
clc
shr
mov
or
mov
cs
mov
adc
insb
xor
push
jb
jg
xchg
mov
pop
outsl
jmp
inc
addr16
push
sub
test
stc
xor
jbe
add
imul
sub
cwtl
sbb
clc
dec
or
ffree
pop
cwtl
stos
cmovg
imul
and
add
mov
xor
cld
jne,pn
jnp
or
scas
inc
iret
addr16
dec
adc
dec
xor
dec
mov
jo
xor
sub
jl
lcall
aad
xlat
jnp
lds
jmp
dec
push
mov
pop
xchg
incb
dec
xor
push
push
fwait
jmp
adc
insb
jle
push
aad
jno
mov
and
lods
inc
inc
int3
push
pop
aaa
orl
cli
cmpsl
dec
sub
inc
pop
cmp
mov
cmp
inc
out
fldcw
test
mov
sti
push
jge
dec
sbb
add
outsl
mov
pushf
xor
mov
aas
pusha
xchg
cwtl
imul
mov
mov
sbb
mov
and
lods
and
push
xor
mov
mov
pop
shll
ret
xor
fisubrs
xor
xchg
adc
push
lret
cmp
mov
rcrb
lods
rolb
xlat
push
adc
fwait
or
add
dec
pop
lret
ss
jne
pop
stos
add
cmpsl
jp
push
cltd
jg
in
fidivrl
inc
lods
movsb
shrb
sub
int
lret
xor
sti
or
cmp
or
mov
jne
add
jl
fisubs
insb
mov
mov
sbb
ret
test
pop
mov
add
jns
dec
adc
shlb
hlt
out
bound
push
xchg
stos
ficoms
and
xor
xor
sbb
in
mov
outsb
mov
push
cmp
or
mov
adc
push
jmp
xor
jo
xchg
inc
faddl
mov
test
mov
push
das
fisubrl
push
icebp
pop
jae
inc
int
dec
dec
or
nop
push
sti
fildll
push
jb
scas
cld
lcall
in
clc
cltd
rclb
xor
add
mov
cwtl
jp
jmp
sbb
out
call
fwait
sbb
mov
lods
mov
and
xchg
fldl2e
shlb
lcall
jmp
jmp
insl
sbb
je
cmpsb
mov
jnp
add
adc
inc
jbe
pop
inc
es
fsub
jp
fsubrl
dec
loopne
scas
mov
loopne
rolb
nop
mov
test
add
and
mov
mov
jne
xlat
das
ret
pusha
int
andl
jns
push
cmp
mov
or
rolb
cmp
or
adc
subl
mov
fwait
jb
mov
icebp
iretw
stc
sub
mov
inc
lods
shrl
fnstenv
jp
push
std
notl
add
cmpsl
cmp
and
les
icebp
enter
loop
loop
mov
cltd
ss
enter
and
cs
out
add
js
std
andl
pop
or
xor
popl
cmp
repz
jmp
and
jo
and
shrl
fistl
jg
psllw
and
sarl
jbe
mov
or
jge
mov
test
movsl
push
sbbl
or
sbb
push
mov
xchg
xchg
arpl
sub
jb
lods
inc
xor
lret
mov
cmpl
pusha
out
sbb
pop
lods
cmp
pop
in
cltd
sub
test
fdivs
sub
pop
sahf
addb
add
inc
pop
andl
jmp
cmp
insl
jge
and
rcrb
inc
fsubrp
movsb
jne
orb
scas
jecxz
push
outsl
movsl
add
push
inc
mov
int3
sub
push
sub
insb
sti
xchg
lahf
jmp
sbb
scas
mov
cmp
ret
xchg
shrb
jge
push
pop
dec
lock
outsb
notl
lret
movsb
in
test
and
pop
insb
xchg
cmpsl
inc
push
test
mov
sub
inc
dec
or
test
cmp
mov
in
adc
imul
imul
jbe
xor
outsl
rcll
ret
sub
jb
sahf
int
int3
or
outsl
cmp
cs
and
pop
xchg
insl
mov
sti
fdivs
cmp
out
jle
loope
decb
out
sbb
int3
pop
jmp
bound
xchg
jne
add
in
in
loop
adc
push
lea
mov
lock
adc
mov
adc
fdivrs
cli
icebp
icebp
push
lock
push
loopne
roll
xchg
mov
add
xlat
inc
insl
jb
in
cltd
and
movsl
ds
add
add
mov
or
pop
clc
and
mov
sbb
jg
fucomi
adc
and
push
daa
lcall
or
sub
mov
inc
negl
cmp
sub
je
out
fwait
mov
pop
pop
mov
pop
pop
shrl
aad
jp
cmp
popa
cmc
xchg
adc
rcr
cmp
fwait
add
pop
add
mov
and
xor
pop
pop
jl
xchg
sub
aas
xchg
lods
and
mov
xor
jmp
jmp
mov
add
inc
or
mov
or
stos
sbb
and
push
push
mov
mov
mov
in
sbb
mov
ja
sarb
cwtl
std
xchg
and
sbbl
loope
push
push
push
fwait
scas
jle
sbb
nop
repnz
mov
mov
and
jnp
jno
nop
mov
adc
mov
cmp
xchg
xchg
ljmp
jno
mov
xchg
inc
scas
mov
cmp
gs
or
adc
sub
mov
fcoml
sub
xorl
stos
cmp
adc
add
imul
shll
and
into
in
xor
or
adc
andb
or
jmp
pop
xor
or
xchg
push
inc
mov
ss
dec
push
imul
xor
mulb
mov
jge
loope
xor
jns
inc
cmp
mov
ret
xchg
and
rcrl
dec
push
clc
jp
in
fildll
fists
dec
cmpsb
les
jg
les
cmpb
in
aas
movsb
call
inc
fsubrs
and
add
xorb
adc
dec
and
testl
lds
popa
jns
pop
mov
sub
add
push
aam
aaa
pop
mov
add
mov
lods
xchg
xor
daa
iret
push
outsl
arpl
xlat
mov
or
pop
icebp
add
pop
icebp
addr16
fldl
and
xor
fistps
cs
addps
jge
in
mov
mov
cmp
jae
scas
outsl
sbb
pop
sbb
dec
in
imul
sub
mov
into
movsb
idivl
mov
sti
fldl
imul
jge
push
lahf
mov
adc
mov
gs
adc
test
orl
pop
addr16
test
shrb
add
mov
push
hlt
cmp
fwait
adc
lcall
mov
jge
push
push
adc
inc
xchg
push
mov
imul
repnz
dec
shll
push
in
jecxz
sub
nop
mov
pusha
cmpsl
and
mov
mov
cmpsl
ret
jle
pop
cmp
xchg
or
xchg
add
lods
push
lahf
sub
jo
push
cmc
dec
icebp
mov
mov
pop
mov
hlt
adc
xchg
push
xor
int3
lret
test
dec
ss
in
xlat
sti
fwait
pop
stos
xchg
mov
xlat
jmp
mov
imul
sub
push
cltd
xor
pop
inc
loop
inc
and
outsl
sub
rcrb
adc
jmp
inc
cmp
add
dec
mov
test
int
sub
lret
inc
loopne
mov
out
jae
fbld
je
ret
test
lret
data16
js
insb
lds
inc
frstor
loopne
pminub
in
dec
mov
lods
xor
call
dec
into
lods
in
jbe
inc
cmp
stos
lock
or
or
pop
xor
lcall
jle
jb
scas
jnp
add
inc
xchg
aam
fsts
cli
mov
aaa
sub
jbe
cmpsb
les
ficomps
enter
dec
inc
and
inc
xor
push
scas
xchg
push
insb
test
mov
shlb
xor
out
cmc
mov
out
cmp
pop
jbe
mov
gs
add
inc
jle
out
addr16
in
popa
stos
insl
push
out
test
inc
arpl
push
clc
sub
cmc
int
mov
mov
push
mov
ret
insl
sahf
mov
mov
adc
pushf
mov
sbb
jp
scas
call
out
mov
std
sbb
popf
pop
ss
shr
ret
jmp
lock
mov
xor
push
mov
fiaddl
adc
jecxz
inc
sub
fimull
inc
cmp
mov
jmp
mov
movsl
push
cltd
leave
xchg
add
add
mov
inc
xlat
pop
subl
fld
out
mov
and
sbb
cwtl
imul
jl
and
push
stc
cwtl
es
inc
and
sti
iret
outsb
sub
push
inc
arpl
cmp
dec
sarl
cltd
cmpsl
jmp
cwtl
jae
pusha
lcall
cs
cltd
addl
mov
inc
jg
cmp
std
mov
mov
xor
arpl
arpl
hlt
outsb
into
subl
dec
repnz
inc
fidivs
daa
rorl
xchg
sbbb
inc
jl
fwait
test
and
jno
test
push
or
lret
lea
lock
test
test
out
sbbl
ja
out
stos
add
out
cmc
lcall
dec
push
cltd
aam
fisubl
mov
mov
int
push
lods
push
les
push
in
jmp
cmp
pop
mov
ds
add
push
fs
push
hlt
in
in
imul
jno
outsb
adc
mov
jne
int
jo
inc
cli
out
pop
and
mov
cmpsb
aaa
and
dec
pop
lahf
pop
stc
or
mov
dec
les
xchg
rcrb
pop
mov
cmpsb
sbb
mov
aaa
inc
and
std
cmp
xor
cmp
dec
xor
lea
mov
arpl
incl
adc
inc
scas
int
shrb
xchg
cmp
jecxz
fwait
mov
push
push
js
mov
push
mov
adc
xchg
adc
inc
addr16
mov
shlb
aam
dec
push
sbb
push
dec
cmpsb
mov
push
xor
lcall
push
outsl
adcb
mov
test
inc
fmulp
aaa
mov
out
push
mov
mov
aas
ror
push
inc
fcoml
ret
faddp
inc
or
sbb
call
imul
hlt
hlt
cmp
iret
pop
outsb
repz
mov
pop
push
lret
xchg
add
mov
adcl
inc
cli
jne
repz
shll
ljmp
jmp
cmc
fildl
sub
sbb
leave
sti
mov
and
sbb
sbb
std
pushf
aam
mov
inc
lcall
push
pop
mov
leave
fbld
fbstp
inc
mov
pop
sbb
mov
push
xchg
les
inc
daa
mov
mov
int3
mov
fs
jo
jb
popf
divb
mov
test
out
aam
or
mov
jne
jle
fisubrs
sbb
dec
rolb
in
dec
add
dec
add
out
mov
ljmp
xchg
mov
cwtl
stos
jle
pop
push
and
popf
mov
or
in
fildll
or
sub
aaa
lods
mov
jns
stos
ljmp
push
pop
xchg
cmp
je
lea
mov
inc
push
bound
pop
mov
inc
testl
mulb
loop
out
dec
inc
dec
in
pop
or
sbbb
lahf
xlat
lods
xchg
xchg
sti
stos
mov
jge
iret
mov
mov
lea
fidivs
jo
mov
xchg
push
fbstp
mov
pop
sbb
lods
idivb
push
mov
or
lods
inc
pop
test
sbb
xchg
das
mov
pop
push
mov
rcrb
mov
xor
xchg
jl
and
inc
test
es
cmp
icebp
mov
cld
outsl
adc
push
iret
cmpsb
lret
jne
mov
jno
adc
adc
orb
jmp
sub
jle
les
addl
scas
iret
adcb
push
fiadds
mov
and
fldl
lea
movswl
add
or
dec
lods
gs
inc
jae
cmp
mov
sub
int
xchg
ret
test
repnz
add
inc
mov
mov
pop
repnz
lret
adc
leave
pop
insl
push
mov
push
punpcklbw
and
mov
sbb
mov
push
sbb
inc
pop
popf
addr16
mov
add
arpl
adc
and
add
mov
xlat
mov
pop
scas
ret
jg
push
lea
mov
ja
mov
push
cmpb
inc
test
cmp
adc
jns
mov
dec
flds
lea
imul
aam
icebp
mov
fstpt
dec
mov
aam
xor
call
jae
mov
cltd
pop
testb
ret
jecxz
dec
lods
das
fwait
jne
cmp
std
lods
cmpsl
sub
daa
xchg
sbb
lahf
ja
adc
pop
jmp
or
out
mov
jl
insb
jns
fnstsw
lods
mov
sub
pop
les
pop
sahf
adc
leave
into
jge
mov
pop
cmc
jg
lret
lahf
mov
int3
mov
dec
push
inc
outsl
push
cwtl
xlat
cwtl
mov
cmp
cmp
xlat
movsb
jecxz
int3
sub
jmp
push
sbb
adc
inc
push
fnstsw
out
cmp
mov
test
xor
lret
ljmp
pop
push
outsb
fwait
inc
inc
in
inc
in
push
fsubr
xor
xor
or
cmp
jno
mov
aad
jns
insl
dec
fwait
adc
out
gs
xchg
xchg
in
mov
addr16
stos
ja
sbb
cmp
jl
movsl
jle
lcall
stos
fildll
dec
in
call
leave
mov
sub
adc
cli
pop
outsl
sub
lods
jb
inc
cltd
xor
test
cmp
sub
cmpsl
ds
inc
fsubs
inc
mov
popa
push
js
movsb
cmpsb
ret
push
mov
call
mov
popf
xor
loope
lret
dec
mov
frstor
sub
repnz
test
into
add
inc
jb
xor
lods
les
sub
jnp
xchg
add
push
std
stos
and
cmp
jae
dec
cli
loope
sbb
in
dec
addr16
xor
xchg
call
es
mov
inc
andl
imul
shl
jns
pop
scas
add
aad
jp
decl
mov
mov
daa
cmp
jo
pop
mov
adc
inc
and
addr16
jbe
nop
and
xchg
dec
movsl
je
ja
pop
mov
cwtl
xchg
push
out
adc
fsts
stos
inc
cmp
lock
push
hlt
inc
xchg
cli
xchg
ret
or
adc
sbb
repnz
and
or
ds
pop
clc
xchg
pusha
repz
loop
jno
popa
test
mov
push
mov
test
dec
lock
lahf
inc
loop
mov
mov
or
pop
rep
stos
lock
nop
mov
jno
and
into
pop
imul
mov
jbe
pop
mov
test
xchg
xchg
sub
in
out
sub
dec
mov
mov
mov
mov
mov
xchg
or
repz
imul
adc
pop
adc
push
jmp
mov
jb
stos
push
xor
push
xor
addb
ljmp
psubd
sbb
imul
fmul
and
xor
lods
push
push
pop
repz
add
cmp
push
xor
dec
sahf
mov
and
sub
movsb
xor
cmpsb
mov
mov
mov
sub
insb
out
mov
adc
lods
sub
cmp
je
jmp
mulb
jns
jae
loope
cmpsb
lret
movsb
shl
push
cld
popa
insl
fidivl
sub
pushf
add
clc
nop
xchg
movsb
sbb
mov
mov
and
sub
dec
xchg
xor
sub
mov
cmp
lods
and
mov
push
testb
mov
sbb
aas
gs
inc
mov
sbb
adc
gs
sub
pop
mov
dec
loop
aad
push
mov
cmpb
pop
lahf
dec
or
jno
mov
xchg
mov
xorb
cmp
lds
inc
mov
arpl
lds
dec
stos
dec
and
hlt
jbe
dec
pop
or
out
dec
inc
incl
jg
je
testl
xchg
loopne
inc
jmp
jo
add
in
and
mov
adc
call
add
or
cltd
clc
arpl
ja
xchg
in
push
dec
ret
pop
test
adc
add
shl
cs
jecxz
push
icebp
sbb
roll
pop
nopl
mov
lds
mov
adc
or
clc
cmp
push
push
pop
cmp
dec
cmp
pop
sarl
add
mov
inc
stos
test
jae
mov
negb
sub
inc
push
ljmp
mov
stos
sbb
mov
xchg
cmp
lcall
pop
loope
movsb
dec
mov
test
ret
lods
insl
mov
sub
xchg
ret
stos
lea
arpl
lods
jne
aad
mov
test
test
or
pop
push
pusha
lods
fildl
pop
xchg
dec
ja
test
and
movb
sbb
cld
int3
inc
bound
mov
push
add
mov
push
push
xor
jb
hlt
or
je
dec
das
add
push
jg
mov
jns
pop
ljmp
std
dec
cmpsl
xor
add
pushf
adc
ljmp
pop
xor
loop
pop
cli
pushf
gs
repz
outsb
loop
cld
push
or
cmpl
adc
xor
leave
xchg
xor
leave
notl
repnz
mov
fiaddl
hlt
mov
xchg
mov
pushl
pop
mov
mov
ljmp
add
scas
bound
js
push
scas
rorl
dec
fmull
pop
es
dec
push
jecxz
dec
jo
clc
mov
stc
cwtl
je
inc
cld
xchg
pop
jbe
fisubrl
lds
call
dec
out
fidivs
ret
mov
xchg
pop
xchg
test
lret
jg
mov
lods
xchg
sub
jge
sub
je
mov
mov
les
shrl
jmp
fadds
xchg
ss
outsb
data16
out
push
divb
xchg
mov
dec
ljmp
fwait
hlt
xlat
inc
outsb
pop
inc
notb
out
sub
and
arpl
aas
or
cmp
xor
test
lahf
or
xchg
stos
mov
sbb
out
testl
push
mov
xor
adc
sahf
jno
sub
or
lcall
popa
int3
fbstp
xor
outsl
jmp
inc
jno
stc
negl
xlat
test
sbb
std
dec
pusha
fdivrs
in
jmp
sbb
or
cmp
in
inc
add
jecxz
dec
hlt
dec
loopne
mov
mov
push
lods
ljmp
xchg
in
lea
cmpsb
jnp
mov
aaa
add
test
fcmove
and
sub
cmp
fwait
push
cmp
mov
add
cmova
cld
repz
movsb
cmp
mov
mov
into
inc
pop
lds
fsubrl
pop
push
imul
mov
addb
pop
xlat
fs
jecxz
adc
mov
fists
xchg
jmp
aam
pop
faddp
nop
dec
dec
inc
stc
mov
mov
leave
fxch
aam
fdiv
push
and
sti
int3
ret
arpl
mov
push
dec
call
add
andb
call
add
push
mov
in
xchg
in
loop
jo
in
xchg
mov
and
aad
lock
or
sti
pop
cmpsl
ret
pop
movsl
lret
sub
mov
push
fildl
bound
jle
and
dec
add
xor
ret
mov
ja
movsl
sbb
rcll
mov
and
xor
mov
inc
aam
pop
or
data16
inc
sub
hlt
jbe
lods
cs
jp
mov
cmc
xchg
push
add
xor
aaa
xchg
inc
in
inc
mov
flds
negl
inc
add
stos
jbe
mov
xabort
push
nop
pop
xchg
sbb
aas
gs
push
inc
loope
xor
out
xchg
pop
inc
add
mov
iret
pusha
loope
bound
data16
lret
xor
or
fstps
jp
fnstcw
rolb
out
push
iret
inc
push
jae
push
fwait
insb
jle
inc
push
test
jae
xchg
add
jb
cltd
lahf
push
xchg
jge
mov
in
gs
cs
pushf
inc
push
std
bound
xchg
dec
testl
icebp
dec
inc
push
js
lock
into
xchg
lds
pop
stos
cmpl
cmp
lret
addr16
call
or
sbb
xor
lock
mull
and
sub
mov
shrl
jne
iret
loope
mov
xlat
add
adc
xor
out
dec
pop
ret
mov
test
rcl
mov
xor
jo
pop
mov
cmpsl
idivl
mov
cmp
push
jle
add
ret
nop
fsubl
pushf
jge
inc
sbb
sbb
rorl
push
dec
pop
mov
dec
nop
inc
test
out
push
hlt
dec
cmp
call
dec
adc
sub
cmp
adc
pop
dec
in
adc
jno
xchg
inc
data16
mov
or
sbb
xchg
sub
std
aam
or
in
jnp
sub
pop
push
push
ja
add
xor
pusha
out
jae
pop
imul
xchg
add
fdivs
xchg
sarb
aas
cli
xchg
scas
sub
jne
sub
ja
mov
mov
inc
inc
in
inc
cwtl
stos
andb
sbb
hlt
jns
xor
pop
mov
inc
fmull
inc
jecxz
outsb
arpl
fldl
je
mov
mov
stc
push
fs
add
sub
pop
push
inc
or
cmpsl
push
daa
enter
repnz
jmp
xor
jnp
adc
rcl
xor
and
mov
jns
sbb
sub
into
fs
pop
enter
fnstenv
nop
cmp
std
mov
mov
jns
or
mov
cs
jno
dec
add
movb
or
xorl
sbb
pusha
jl
loope
aaa
loop
push
jl
push
scas
xor
sbb
cmpsl
push
enter
sbb
mov
loopne
pop
jmp
scas
and
xchg
es
jbe
cli
pop
push
xchg
push
mov
push
sub
andl
mov
or
andb
fs
loopne
je
or
cld
and
stos
mov
push
and
adc
inc
xlat
cmp
ficomps
stos
add
mov
jecxz
jle
dec
push
bound
icebp
mov
push
push
je
test
icebp
jae
and
xor
aam
mov
insl
rolb
push
out
mov
rcll
pop
mov
add
xor
fnstsw
arpl
inc
and
je
movsb
cmp
enter
ret
mov
sar
jns
rcrl
push
inc
popa
ret
inc
dec
in
pop
xor
insb
fdiv
popf
add
xchg
ljmp
stc
push
push
add
loopne
lds
add
xor
xlat
jnp
cmp
in
inc
xchg
jle
leave
sub
or
cmp
pop
jge
pop
outsl
insl
jmp
dec
shlb
lret
faddp
add
mov
repnz
loop
add
or
cmp
cs
add
movsl
mov
out
bound
and
mov
aaa
mov
inc
fadd
xchg
mov
push
xchg
loope
push
mov
mov
stos
das
xchg
dec
call
push
push
fdivrs
mov
mov
adc
leave
lds
dec
hlt
sbb
cmpsb
jge
mov
ja
les
scas
mov
xor
jmp
out
sub
in
add
xchg
lea
lret
mov
repnz
inc
pop
ds
leave
frstor
outsl
cmp
cmp
test
xchg
xchg
and
jmp
cli
pop
jns
inc
stos
aad
and
or
xchg
cmp
jmp
nop
adc
fidivs
add
movsl
mov
enter
shr
stos
fadd
sbb
ret
mov
addr16
rorl
mov
jl
mov
and
fmull
std
pop
push
push
mov
sub
andl
pop
nop
sub
mov
lock
leave
loope
roll
xchg
mov
sbb
or
arpl
cwtl
inc
add
fidivrl
ss
out
or
stc
dec
mov
orb
or
sbb
imul
mulb
popf
pop
jae
jne
test
leave
lahf
mov
repnz
xor
inc
jg
rcl
fstps
pop
mov
lret
outsl
enter
lcall
and
sub
shl
das
and
mov
mov
inc
pushf
push
out
add
loop
sub
dec
aaa
cmp
das
addr16
aaa
mov
add
in
or
cmp
dec
je
cmc
test
scas
fwait
adc
mov
loopne
mov
imull
ljmp
out
popf
or
out
dec
push
int
outsl
inc
repnz
push
sub
stos
mov
ret
jp
mulb
mov
or
dec
repnz
pop
in
repnz
clc
jae
cmp
jmp
mov
cli
push
push
mov
push
add
rcr
hlt
push
xor
bound
cmc
xchg
insl
dec
out
jge
pushf
pop
xchg
fwait
push
and
outsb
loope
and
loopne
push
push
negl
das
cmp
enter
push
popf
aam
sub
mov
movsl
xlat
pop
adc
ds
call
cwtl
in
xchg
repnz
into
pop
das
push
jmp
push
push
in
enter
mov
int3
iret
data16
push
adc
aas
pusha
out
pushf
jecxz
xchg
scas
gs
xchg
into
das
inc
xor
lds
out
fs
fmulp
mov
pop
es
jle
mov
mov
mov
movsl
loope
sbb
pusha
inc
sbb
fidivs
sub
push
scas
les
movsl
lods
outsl
test
inc
call
mov
scas
movb
inc
fnstcw
sub
sbb
popa
jge
xchg
das
jno
imul
push
sub
fscale
pop
cmpsb
or
stos
inc
negl
adc
mov
jns
call
inc
push
push
push
insb
ljmp
dec
pop
push
sub
mov
ss
leave
cmc
lcall
jne
cmp
mov
inc
arpl
push
divl
lea
fisubl
test
inc
mov
repz
pop
lret
mov
jmp
pop
subb
push
repz
ds
shrl
out
dec
fstp
or
aas
in
xor
mov
pop
push
fldenv
insl
test
stos
rorb
ja
test
jg
and
stos
cli
fmull
pminub
cmp
ss
repz
xchg
mov
hlt
lcall
pop
and
xchg
adc
cmp
inc
popf
jns
cmp
test
jle
pop
stos
sbb
xchg
push
pop
nop
push
cld
cmp
mov
dec
pop
in
insl
sub
add
mov
mov
shl
inc
lea
int3
data16
stos
mov
and
mov
insb
fstpt
iret
call
bound
pop
scas
dec
bnd
repz
or
jb
sub
cpuid
loope
push
and
fisttpll
ss
jg
stos
mov
cmc
fildl
das
push
stc
xlat
xor
orb
outsl
daa
bound
into
addl
shrl
lcall
imulb
hlt
fwait
pushf
mov
lret
aas
stos
sub
inc
fistpl
fdiv
sub
xor
mov
jp
and
push
ljmp
stos
shrl
inc
rcl
xchg
je
orb
cwtl
lret
sub
xor
clc
popl
inc
data16
ret
pop
ss
inc
out
bound
push
ss
filds
cs
cmp
push
stos
push
cs
mov
lret
pop
cmpsl
je
leave
jecxz
orb
cmp
sub
fdiv
xchg
sbbb
inc
xlat
and
pop
cmc
in
loopne
pushw
jge
and
ret
movsl
pop
and
movsl
fsubs
push
int
xchg
fidivl
pop
insl
in
push
imul
dec
pop
jmp
cltd
sbb
scas
pop
sbb
push
lods
add
lods
outsl
out
andb
insb
xchg
mov
enter
sbb
lods
and
ds
aas
xchg
xchg
cwtl
cmpsl
jmp
push
rorl
sbb
sub
lods
jecxz
dec
jge
cmp
push
in
enter
ret
add
xor
cmp
dec
xchg
call
int
jns
inc
and
ja
hlt
xchg
and
and
subb
fdivrs
shrl
sbb
mov
add
xor
pop
bound
dec
xlat
cwtl
int3
arpl
sbb
jecxz
xor
test
add
mov
adc
sub
adc
jo
push
fmulp
mov
fistl
iret
or
dec
dec
fistpl
sbb
ss
inc
loop
std
mov
stc
test
mov
add
cmpb
mov
xchg
lock
cmp
cwtl
dec
xchg
jge
adc
jne
int
adc
mov
push
and
sub
xchg
ss
jnp
jle
mov
cmc
cmp
cmp
std
jo
or
repz
or
ret
daa
dec
popf
loopne
sbb
ljmp
imul
test
lcall
insl
dec
ljmp
xlat
lcall
mov
xor
imul
inc
testb
out
push
mov
scas
ret
roll
push
arpl
jae
mov
shll
sbb
iret
mov
mov
mov
lret
cmp
adc
sbb
lods
and
pop
popa
in
gs
jbe
inc
std
xchg
sarl
pop
mov
lret
popa
lods
jne
enter
or
cmp
fidivrs
nop
jnp
rcr
inc
mov
out
lods
jmp
cltd
loop
popf
stc
xor
scas
pop
jge
mov
jge
adc
popa
push
cmp
pop
inc
pop
sub
lahf
data16
xor
sysenter
insb
adc
mov
loop
xlat
jp
iret
sbb
stc
pop
ja
push
jp
inc
pop
adc
test
dec
pop
dec
sti
xchg
mov
nop
mov
cltd
jle
mov
push
xchg
lock
int
mov
fs
fistpl
jb
pop
and
shr
pop
pushf
xchg
adc
or
jo
pushl
push
sbb
repz
test
xor
loop
fildl
xor
pop
adc
pop
inc
mov
test
call
mov
cmp
scas
loop
add
test
jmp
pop
xor
adc
imul
adc
nop
addr16
pop
xor
lods
sbb
lds
cmc
dec
das
es
pop
repz
add
imul
out
cmp
and
iret
iret
popa
xlat
aad
aas
add
shl
nop
out
cmp
mov
lods
mov
test
fnstenv
and
pop
fbstp
jge
ret
das
lods
inc
mov
cmp
sub
outsl
cmpsl
sbb
push
rorb
cmp
push
jb
xor
icebp
aas
pop
fidivl
sub
scas
mov
cmc
mov
sahf
pop
out
mov
ja
scas
jmp
xchg
jl
lret
cmpb
xchg
mov
add
mov
pop
lahf
adc
repnz
xchg
loopne
mov
pusha
mov
and
and
stos
lahf
sub
or
dec
mov
dec
jae
lock
imul
popf
inc
or
dec
mov
arpl
gs
int3
in
add
fistpll
je
movsb
je
in
into
push
mov
push
nop
cmp
push
cmpsb
add
push
aam
and
movsb
push
push
pop
paddw
jnp
das
push
mov
and
add
cmp
ss
mov
push
push
or
and
lcall
nop
jae
daa
mov
or
inc
lods
loop
nop
sbb
ret
dec
cltd
clc
scas
jle
popf
xor
out
adcl
mov
push
sbb
add
int3
ss
lds
push
xchg
repnz
cmc
sbb
mov
mov
cs
jb
fwait
xor
mov
mov
scas
call
or
dec
mov
addr16
sbb
push
cld
and
push
fmuls
insb
testl
cmp
ret
add
sbb
daa
enter
adc
mov
cwtl
jp
fisubrl
jnp
in
pusha
push
jae
mov
ror
adc
push
decl
push
mov
adcl
hlt
xchg
jb
xchg
mov
mov
mov
xor
outsb
or
jnp
inc
push
add
mov
or
fucomip
test
es
pop
adc
jnp
push
xchg
add
dec
fisubrl
jp
adc
xchg
dec
mov
pop
in
jge
sub
sub
dec
xorl
mov
aaa
and
lcall
aam
jnp
jle
out
xchg
or
dec
fistps
rcll
sub
xchg
das
into
or
inc
mov
movsl
ljmp
dec
dec
aam
push
idivb
stc
test
std
cwtl
push
jmp
imul
mov
hlt
dec
mov
rcrl
cmpsb
cmp
scas
fidivrs
jae
repz
test
and
inc
aam
mov
push
xor
lods
mov
adc
mov
scas
pop
cmc
fucomip
sbb
fwait
xchg
mov
inc
fnstsw
cmp
jbe
jnp
lods
xchg
scas
push
or
mov
cltd
rcl
call
mov
push
movsb
sbb
and
outsl
push
outsb
or
sub
clc
sub
adc
mov
sbb
fmull
popa
jo
or
add
mov
insl
rcr
repz
pop
xchg
mov
pushf
in
ljmp
mov
inc
cmc
sbb
sahf
jle
test
les
pop
dec
sbb
aad
cmc
cmp
push
dec
cmp
mov
jae
mov
js
cmpsl
insl
inc
sbb
dec
cmpsb
inc
pop
gs
dec
or
xor
xchg
pushf
xchg
sbb
clc
mov
cmp
pxor
mov
sbb
cmc
sti
addr16
outsl
xrelease
test
sbbb
push
shll
outsl
jp
pop
mov
xorl
sbb
mov
add
mov
ljmp
or
ja
cli
test
dec
mov
add
rcrl
jle
pop
enter
inc
jp
pop
or
rcll
mov
sbb
inc
in
xchg
add
inc
pop
cmp
mov
int3
jbe
jbe
js
aas
or
cltd
out
add
dec
nop
insl
add
pusha
jl
and
fdivrs
adc
out
add
mov
cmc
and
stos
xchg
cltd
and
inc
out
pop
call
mov
sar
imul
xor
mov
xchg
mov
mov
push
jge
jns
ja
aad
andb
mov
shll
in
push
or
stos
xchg
add
fidivrl
push
fisubs
dec
pop
iret
pushf
inc
cwtl
and
stos
mov
popa
sbb
add
jecxz
inc
ret
adc
fnsave
cld
sbb
jmp
loope
and
mov
push
addr16
mov
fstps
rcrb
cmpsl
shll
scas
push
js
bnd
and
fs
pop
mov
xchg
fxch
jecxz
push
adc
jb
movsl
aaa
pop
data16
stos
je
and
dec
jl
jo
mov
addb
push
xor
push
sub
repnz
push
push
adc
jmp
movsb
xchg
mov
sti
into
fsubr
decb
imul
pop
ljmp
jne
cltd
cmp
jae
and
and
mov
add
mov
xchg
pop
ror
xor
mov
jnp
mov
dec
fildl
sbb
push
dec
mov
mov
adc
lcall
or
xor
shll
add
push
imul
xchg
idivb
jp
cwtl
and
faddl
jle
mov
mov
and
rol
xor
test
mov
mov
call
enter
enter
out
cwtl
adc
inc
jnp
dec
pop
pop
push
cltd
xchg
out
inc
xor
cmp
rcrl
bound
lret
pop
add
push
hlt
aaa
or
push
testl
aaa
sti
adc
mov
roll
sbb
rol
push
add
jbe
clc
ret
pop
sub
loope
incl
mov
push
mov
ss
lds
sarl
sahf
adc
push
mov
fdivl
pop
lret
jg
popf
insb
adc
fsubrs
in
loop
sub
sub
mov
out
lods
call
or
js
js
push
test
add
fistps
jno
orb
das
jge
sub
mov
movsb
xchg
fs
inc
lret
jns
pop
and
xchg
mov
cmp
inc
and
loop
loopne
scas
sub
dec
cmc
js
cwtl
iret
fst
jp
push
mov
add
sbb
int3
aam
dec
pop
sbb
inc
bound
mov
sub
ret
scas
das
sbb
ljmp
xor
mov
add
lcall
jecxz
or
lods
add
in
mov
lahf
imul
hlt
testl
inc
xor
and
pop
cmpsb
movsb
stos
sbb
fs
fwait
das
ret
in
cmp
cmp
das
pusha
or
dec
and
idiv
mov
xor
jmp
jae
fsubrl
addr16
sarl
sub
test
xor
jg
divl
xchg
add
testl
stos
cli
cli
rcrl
and
stos
xchg
cli
xchg
mov
fstp
mov
cmp
jns
ds
adc
jne
jg
sbb
int3
fidivs
or
xchg
or
shrb
dec
pop
sub
cwtl
movsl
icebp
divl
dec
lods
and
negb
testb
mov
lahf
mov
dec
jmp
aaa
enter
cltd
mov
cwtl
shrb
dec
cld
inc
rolb
in
xchg
ss
push
cltd
fists
jp
and
pusha
lcall
jg
imulb
dec
and
add
add
jbe
sub
movsb
push
mov
loopne
jbe
inc
ja
push
or
cmp
pusha
mov
jb
in
lds
inc
push
mov
into
rolb
lret
adc
decb
fstpl
arpl
or
ret
sub
cmpsl
in
mov
fnsave
lock
xor
xchg
lret
imul
jne
jo
jp
mov
jno
mov
push
imul
cmp
xlat
enter
lds
jge
ret
shll
lcall
shrb
int
or
mov
imul
mov
lea
lcall
scas
pop
stos
imul
mov
xorb
add
idivl
pop
xchg
sub
push
in
dec
stos
fnstenv
cmp
pusha
lods
push
cwtl
das
lds
nop
mov
xor
jo
push
ds
sub
test
dec
jle
mov
sbbl
testl
ret
xor
in
daa
dec
icebp
loope
scas
jbe
hlt
mov
lahf
xchg
add
dec
inc
inc
and
jg
dec
aas
push
in
popa
adc
mov
xor
mov
repz
js
dec
lods
dec
insb
rorb
sarl
sbb
sahf
mov
arpl
mov
or
mov
cld
out
xor
pushf
outsb
out
aam
inc
mov
pop
es
inc
xchg
inc
mov
scas
das
add
mov
fucomip
bound
sbbl
or
xchg
pop
xchg
add
clc
cltd
test
cld
mov
or
xchg
mov
test
sahf
mov
movsl
and
ret
int3
sub
jmp
push
sub
rorb
push
sub
nop
aaa
or
call
sbb
stos
mov
cmp
fldt
or
adc
data16
push
xchg
pop
cli
and
xchg
jl
shlb
mov
movsl
cli
daa
repnz
cmp
or
push
jmp
je
push
sub
sbb
divl
push
sub
jge
daa
push
mov
jne
out
stos
fidivs
je
push
shl
lds
test
push
push
cmpsb
push
inc
mov
das
mov
dec
sub
cltd
jecxz
jno
mov
out
jg
roll
xchg
and
push
push
ja
push
pop
and
mov
fldenv
pop
mov
std
mov
ljmp
ror
adc
xor
xchg
and
cmpsl
xchg
shll
clc
test
mov
jbe
add
decb
scas
add
jmp
nop
fdivrs
xlat
icebp
push
add
mov
bound
sbb
addr16
stc
clc
cmpsl
xchg
and
popa
sub
cmc
ss
movsb
adc
pop
test
int
xor
enter
mov
hlt
dec
stos
mov
xchg
repnz
jbe
mov
fwait
xchg
adc
or
mov
stos
push
out
lea
movsl
inc
xchg
push
mov
push
mov
iret
mov
sti
popl
movsb
xor
ljmp
sub
inc
xlat
sbb
mov
dec
inc
ja
dec
mov
data16
rorb
adc
mov
and
sub
and
sarb
popf
int
push
mov
mov
scas
cmp
jb
ja
xchg
push
test
mov
fs
pop
addb
loop
jl
and
insb
cmp
shlb
jo
outsb
push
in
cmpsb
cmp
sahf
inc
mov
sbb
inc
xchg
jnp
rolb
or
fsubrl
fcoms
inc
stos
es
aam
insl
les
cli
mov
push
inc
pop
insb
jb
dec
cmpsb
test
mov
int3
sub
pop
repnz
js
mov
jle
aam
movsb
add
bound
dec
push
add
lea
mov
adc
ljmp
icebp
adc
mov
cmp
inc
pop
pop
sbb
xor
in
push
es
in
sub
mov
inc
out
push
sbb
out
jbe
ss
xchg
dec
ret
and
xchg
ss
cld
push
mov
outsl
lret
push
ret
outsb
lret
add
addl
rol
sub
or
into
gs
aaa
cmp
add
mov
jae
sti
jg
ljmp
fwait
push
dec
das
sbb
adc
mov
push
xor
es
sbbl
cli
int
mov
rclb
fldt
mov
cmpsb
pop
and
pop
inc
shr
xor
xlat
popa
mov
mov
fsubr
fwait
stc
aaa
dec
dec
sti
in
es
stc
loopne
mov
or
jl
mov
das
je
sbb
add
test
mov
inc
cmpsl
test
fstl
lcall
cltd
push
pop
cmpsb
inc
arpl
and
arpl
ja
push
imulb
push
pop
push
cmc
pop
pop
cmp
xchg
leavew
jns
sub
ret
or
sahf
push
mov
lds
cmpsl
jno
out
lods
pop
out
leave
sahf
xor
movsl
add
sarl
fstps
pop
js
nop
ret
dec
jg
jmp
fstpl
inc
fmull
xchg
enter
les
sub
dec
pop
xor
cmp
and
jnp
push
mov
or
push
xchg
mov
adc
lahf
or
movsl
cmpb
enter
imul
aas
cmp
sbb
cmp
cmp
mov
xchg
sub
push
and
ficompl
or
adc
and
lret
or
sbb
xchg
inc
ljmp
and
das
and
cmpsl
fdivrl
inc
imul
popf
gs
cmpsb
add
das
faddl
inc
lds
fisubrs
pop
fwait
std
pop
dec
sub
mov
inc
hlt
cmp
jmp
sbb
xchg
push
inc
lods
mov
inc
fidivrl
cltd
sub
xor
sub
mov
inc
mov
nop
gs
in
pushf
dec
movsb
push
aam
lock
dec
xor
popf
push
loopne
mov
arpl
lock
xchg
lods
inc
ret
sbb
lret
into
outsb
add
arpl
mov
imul
es
fs
mov
stc
fcoml
test
and
ss
lods
ljmp
popf
stc
sub
lock
nop
add
pop
cs
cltd
test
out
ja,pn
cmp
ret
popf
es
sub
and
inc
shlb
jmp
xchg
hlt
or
repz
aam
mov
and
movsb
jecxz
sbbl
inc
or
mov
in
pop
adc
mov
repnz
xchg
push
popf
paddw
add
incl
jae
call
xchg
ret
cmp
in
rcrl
mov
in
jl
mov
sub
lods
cmp
dec
mov
dec
sahf
xor
sbb
sti
lods
enter
jmp
test
sahf
or
nop
or
adc
xchg
sbb
test
jp
inc
push
jg
jmp
pop
sbb
das
jge
add
rol
pop
cwtl
rcrb
inc
adc
imul
push
sbb
pop
fcmovne
jnp
dec
dec
stc
cmp
lea
xchg
cmp
adc
jae
xchg
xor
mov
mov
fldl
pusha
scas
mov
sub
dec
pop
push
mov
push
movl
int3
push
or
or
test
loopne
or
aad
testl
inc
push
pusha
stc
mov
cwtl
gs
stos
andb
cs
add
lods
inc
in
mov
adc
xchg
jno
loopne
pop
cmp
cmp
and
daa
inc
lret
sahf
fdivrl
int3
inc
int3
lret
xor
rorb
sbb
ret
sbb
sub
jo
cmp
pusha
ss
mov
aad
outsb
sbb
ds
jb
out
decb
stos
sbb
aas
dec
filds
xchg
inc
lret
or
mov
mov
cmc
frstor
hlt
repnz
dec
movsb
xor
imul
decl
or
leave
shrl
inc
fadd
adc
fwait
addl
pushl
xor
cmc
mov
adc
pop
dec
xchg
inc
out
inc
cmp
and
lods
xchg
pusha
mov
stos
add
mov
rcrb
mov
cmp
repz
push
push
cltd
pop
ja
addr16
mov
add
dec
movsl
cmp
fildll
adc
hlt
lds
push
fstpl
mov
mov
nopl
ljmp
jns
adc
scas
inc
mov
pop
sub
mov
and
pop
jbe
inc
lret
mov
xchg
sub
xchg
lods
add
mov
inc
lea
mov
and
and
mov
rorb
mov
xor
mov
mov
jno
cmpsl
pop
jno
sbb
mov
adc
cwtl
push
mov
sub
xchg
dec
out
sub
and
jnp
test
push
sbb
and
mov
mov
cmp
sub
leave
mov
mov
xor
dec
inc
mov
xchg
push
int
cmpl
adc
leave
sub
mov
push
stos
in
xor
out
cmc
sub
adc
inc
push
mov
mov
pop
test
pop
lahf
fwait
push
pop
fwait
dec
adc
push
pop
cltd
xor
jns
test
xchg
or
pushl
adc
test
xchg
das
clc
inc
xor
dec
mov
in
sub
outsl
enter
movsb
and
pop
ss
scas
dec
cmp
mov
adc
xor
and
sbb
pop
jno
popf
stos
aas
mov
std
xchg
in
arpl
mov
sub
negl
cs
out
ror
jmp
fsubrl
loopne
pop
adc
xor
adc
jne
cmp
pop
mov
jns
cmp
dec
lcall
mov
adc
pop
lahf
mov
or
sti
cli
ret
clc
pop
mov
shl
mov
rcrb
notb
inc
lds
aam
mov
jno
xchg
and
sbb
sbb
inc
test
mov
xor
dec
pop
sub
add
inc
popf
inc
lock
and
pop
lret
add
mov
push
lods
xchg
xor
adc
and
movsl
mulb
scas
sub
push
push
dec
add
cmp
sub
and
mov
ljmp
clc
and
xchg
sbb
mov
mov
adc
fldenv
xchg
cli
sub
adc
popl
push
shlb
loope
loop
lds
stos
dec
pop
xchg
imul
daa
sahf
fisubs
or
cmpsb
jo
or
xor
pop
xor
add
leave
pop
mov
insb
dec
mov
jg
dec
pop
ret
pop
sbb
pop
jmp
or
lods
adc
and
paddb
inc
shrl
ror
dec
out
dec
pop
fstpl
adc
fisttpll
add
and
enter
inc
xor
cmp
sbb
push
in
cmp
out
xchg
int3
and
sub
fwait
adc
sub
add
mov
loope
cs
jmp
shll
cmpsl
shl
jg
in
adc
cmp
iret
sub
and
inc
or
push
cmpsl
testl
inc
push
mov
adc
std
jnp
xor
stos
cltd
popf
gs
pop
sbb
ja
cmp
imul
cmp
inc
adc
ret
rclb
cmp
mov
lret
shlb
mov
inc
data16
popa
mov
push
inc
pop
mov
push
add
pop
cmp
scas
cmc
int3
push
cmp
test
push
iret
cmpps
xchg
sbb
dec
jno
scas
pop
insl
hlt
fimull
sub
sti
or
gs
jno
sub
orl
inc
aaa
mov
jns
jbe
jno
and
mov
mov
test
imul
imul
incl
outsb
and
es
dec
cltd
mov
pop
xchg
push
lds
adc
test
nop
test
int
leave
jl
fdivs
mov
jecxz
imul
rorb
pop
daa
lock
push
mov
cmp
fdivl
rolb
cli
push
push
stos
into
push
out
fsubrs
or
js
push
and
inc
ss
movsl
ret
jecxz
xor
pop
and
sarl
jae
xchg
sub
lahf
repnz
or
mov
outsb
jae
xor
adc
mov
mov
out
fldcw
xor
into
pop
inc
cmpsb
loope
or
test
sbb
loope
jmp
icebp
loope
sub
cld
test
rcr
mov
bound
in
push
jbe
mov
or
cmpsl
jl
int3
out
jmp
mov
mov
dec
popa
sub
xchg
mov
dec
call
add
aaa
mov
push
leave
int3
and
rcl
xor
mov
addr16
inc
pop
mov
mov
les
pusha
das
mov
out
out
hlt
mov
mov
xor
filds
mov
jge
into
daa
jo
por
stc
cmp
aad
adc
sbb
mov
jge
sub
mov
xchg
aas
les
push
popf
hlt
add
or
repnz
dec
pop
sub
mov
in
push
mov
push
in
clc
nop
mov
sub
jbe
or
lods
jmp
gs
xorl
fsubs
sbb
out
jne
adc
inc
and
inc
fsubrl
xchg
dec
js
outsl
stos
jbe
sbb
cmp
inc
fcmovnu
jno
stos
pop
jbe
or
bnd
test
pop
and
movsb
mov
lahf
mov
dec
pop
mov
cmp
rcr
add
in
movsb
mov
pop
insb
add
movsb
ja
or
cmp
jecxz
loopne
das
dec
minps
push
xchg
insl
sahf
lahf
loope
test
adcl
lds
das
sbb
mov
lea
jle
repnz
mov
mov
fists
pop
dec
dec
cmpsb
out
insb
mov
mov
pop
int3
fidivrs
aas
jae
add
daa
xchg
inc
test
andl
or
push
stc
movl
pop
jno
and
push
sbb
cli
sub
pusha
mull
inc
add
dec
push
cmpsb
and
or
fiaddl
sbb
dec
daa
clc
jmp
mov
or
sbb
push
mov
xchg
cmp
fwait
sub
loope
fsubr
xor
dec
adc
es
call
adc
sarb
push
jne
xor
xchg
sub
movsb
leave
pusha
push
mov
fstpt
xchg
sub
mov
in
lret
mov
jb
stos
jae
xchg
xchg
test
cwtl
cmpl
add
cltd
mov
mov
pop
bound
jp
or
imul
pop
jp
bound
mov
cmp
sbbl
xlat
or
es
mov
dec
pop
bnd
aas
mov
aad
jg
ja
call
and
sub
lods
xchg
dec
hlt
inc
call
repnz
inc
pop
bound
fisubrs
ds
testb
mov
push
mov
popa
addr16
adc
inc
adc
inc
mov
pop
mov
mov
andl
pop
lahf
not
inc
daa
jo
std
cmpsb
inc
outsl
test
insl
pop
rcrb
jns
ljmp
sahf
xor
jl
aas
mov
add
pop
notl
dec
xchg
fmulp
jne
movsb
cmp
leave
adc
xchg
xchg
lock
mov
adc
mov
int3
adc
mov
add
mov
out
jno
in
cmpsb
ret
mov
or
push
and
sbb
sbb
data16
popa
add
or
and
mov
imul
xchg
aaa
pop
push
add
or
leave
in
jns
or
fsubs
into
jle
cld
sub
cltd
clc
out
mov
icebp
jo
lods
fwait
imul
add
aas
pop
adcb
push
add
mov
mov
fisttpll
ljmp
adcb
mov
xchg
xchg
jae
lock
cmc
fstpt
aad
loopne
sub
push
mov
inc
in
and
lock
lcall
out
test
mov
in
aas
jecxz
xor
int3
loop
xor
das
sub
mov
push
leave
push
out
cli
mov
jne
and
or
inc
xchg
push
xchg
mov
movsl
push
mov
adc
aad
movsb
rcll
inc
fisubrl
pop
cmp
pop
outsl
outsl
pusha
shrl
jb
jmp
fbstp
mov
and
loop
xlat
fistl
pop
int3
sub
stos
outsl
scas
mov
shlb
movsl
push
pop
xchg
aaa
sub
adc
or
fistl
adc
gs
mov
loop
jle
inc
call
icebp
xchg
or
scas
or
loop
ljmp
lds
std
xchg
sub
sbbl
pop
sti
stos
xchg
inc
or
xor
jb
push
cmp
test
sbb
adc
insl
adc
filds
sbb
mov
push
insb
dec
xchg
push
jmp
mov
enter
push
or
mov
push
aas
rcr
cmp
call
or
dec
std
or
sbb
shll
push
jmp
mov
adcl
test
bound
lret
enter
mov
xchg
test
in
aas
sti
nop
or
rcr
or
sub
or
stos
adc
sub
sbb
popf
pusha
mov
inc
adc
es
inc
pop
int3
data16
mov
outsb
inc
lock
ja
insl
rcr
out
push
arpl
shll
jle
xor
push
inc
sub
clc
sahf
xor
popf
push
jmp
div
push
rclb
rcl
pop
es
fwait
jno
arpl
imull
push
outsl
ret
cld
bound
dec
jecxz
cmp
std
inc
push
and
pop
mov
jnp
add
lcall
outsb
fistps
loope
adc
mov
popa
clc
daa
repz
cmp
ds
dec
movsl
out
jge
push
mov
or
cmp
lock
inc
fxch
mov
push
xor
jnp
pop
xchg
jmp
xor
jns
cmp
pop
dec
aad
leave
and
cmp
dec
cltd
xor
mov
cld
cmp
fdiv
cwtl
aad
push
ret
repz
fbld
repz
or
jecxz
pop
adc
mov
cs
fcoms
jbe
inc
ret
movsb
sti
or
or
and
xchg
add
push
jnp
adc
jg
aaa
mov
sbb
and
cmp
mov
sbb
sub
sarl
and
pop
add
push
mov
fs
stc
xchg
sbb
jne
lcall
in
stos
mov
pushf
push
andb
outsb
jecxz
pop
or
xor
jecxz
leave
and
mov
lahf
std
push
insl
add
adc
pop
out
loopne
mov
push
repnz
jns
xchg
xchg
jno
dec
loopne
es
push
push
cmp
shr
lds
popa
jecxz
xchg
mov
ljmp
mov
scas
and
xchg
icebp
dec
jo
aas
insb
enter
jge
jmp
cmpsl
out
mov
bound
scas
lock
push
fs
aad
sbb
cmp
mov
cmp
jg
pop
pop
ds
adc
and
pop
inc
mov
cltd
xchg
mov
jmp
mov
mov
jmp
fsubs
int3
rorl
jnp
outsb
xor
inc
subps
mov
mov
push
dec
mov
lahf
pop
jnp
fs
and
lahf
stos
mov
negl
or
push
adc
or
movsb
and
mov
mov
pop
xor
scas
inc
and
into
lret
push
stc
scas
mov
or
pop
jb
mov
sub
outsl
jmp
aas
mov
mov
xor
popf
xor
in
sub
adc
orb
ljmp
mov
fs
pop
xchg
pusha
xor
push
jmp
mov
pop
div
mov
xchg
pop
lock
inc
in
add
jg
sbb
movsl
sbb
push
fwait
cltd
js
mov
add
aaa
stc
cmp
fidivrs
inc
pop
test
sub
sbbl
clc
hlt
or
mov
mov
push
sbb
ret
mov
enter
enter
cmp
bndstx
rcrb
lods
xchg
adc
xor
insl
lock
icebp
xchg
fsubp
jnp
pop
loopne
jne
push
and
and
mov
push
adc
int
andl
inc
lea
xchg
xor
mulb
icebp
loopne
adcb
icebp
nop
add
dec
xchg
inc
or
mov
xchg
cld
cli
lret
test
lahf
idiv
dec
stos
mov
cmp
in
jmp
sbbl
sub
adc
jae
arpl
mov
inc
lret
push
incl
fucomp
dec
and
int
ret
popa
mov
cmp
pop
ret
rcl
int
mov
xor
xchg
ret
mov
lahf
stc
mov
xor
jae
lea
add
mov
lods
or
mov
ja
into
mov
in
xchg
dec
hlt
outsb
popa
dec
dec
arpl
in
out
jg
ds
fstpl
add
xchg
stos
jmp
sbb
xor
pop
gs
lret
cld
xchg
inc
mov
xchg
sti
xchg
das
insl
add
sahf
fdiv
aam
int3
jecxz
bound
fucomi
stos
shrl
ss
dec
jo
sbb
sub
pop
mov
or
cmp
dec
mov
sbb
xchg
test
mov
mov
mov
lods
insl
cli
xlat
mov
sub
sub
xlat
les
in
pop
inc
adc
xchg
cmpsb
adc
rcll
xor
popa
stc
xchg
mov
mov
test
out
movsb
mov
lock
subb
cmp
sbbb
push
addr16
sti
pushf
sub
out
push
inc
aaa
add
push
jo
stos
push
inc
xor
mov
or
inc
movsl
fisubrl
add
pop
sti
pop
cmp
ret
xor
pop
addl
cmp
fwait
clc
insl
inc
push
dec
pop
cmpsb
sbb
inc
add
mov
dec
ss
out
xor
push
jb
lahf
inc
mov
inc
or
popf
pop
dec
xchg
xor
fnstenv
lret
sbb
pop
adc
lods
inc
cmp
jno
cltd
scas
fiadds
ja
sti
test
int3
jecxz
sarl
je
push
mov
fs
mov
loopne
into
aad
rclb
cmpsb
sbb
fstpl
mov
ret
pop
jle
int3
jbe
mov
jecxz
mov
inc
sub
pusha
insl
ss
or
sarb
xchg
rorl
cmp
adc
add
popa
pop
dec
xchg
xor
js
pop
adc
add
or
add
xor
jp
or
das
inc
push
xchg
xchg
xor
xchg
and
cmp
add
sbb
in
out
pop
icebp
fisttps
xchg
sbb
and
int3
jecxz
mov
dec
pop
ret
jo
mov
inc
adc
push
add
mov
mov
cmp
jb
xor
dec
rclb
rcr
xchg
push
in
fwait
aad
inc
inc
pop
pop
xchg
cmp
mov
push
lock
inc
and
in
jns
mov
js
addr16
mov
sbb
mov
mov
lds
cmp
clc
mov
pushf
ss
mov
fcmovnbe
data16
push
mov
adc
test
fiadds
jp
movsb
jl
in
daa
faddl
pop
dec
daa
outsl
mov
xor
out
mov
into
cmc
int
jle
xchg
enter
call
in
xchg
sub
cltd
inc
out
fs
ja
out
and
push
lds
icebp
rclb
sbbl
ret
jecxz
xchg
scas
sbb
dec
fisubl
pop
stos
mov
ljmp
in
fmuls
imul
mov
in
xchg
icebp
pop
inc
gs
xor
xor
cmc
adcl
sbb
adc
sbb
push
mov
xor
inc
fdivs
test
mov
xor
cmp
lods
mov
or
leave
sub
adc
out
add
retw
jno
mov
sarb
push
mov
xchg
jp
out
inc
loope
mov
sub
push
sub
push
inc
sti
adcl
mov
xor
cmp
jmp
jno
aas
xchg
pop
push
ljmp
push
mov
test
pop
xchg
xor
lds
xchg
or
rcrl
cmp
fadd
jae
dec
inc
cmp
sub
fsts
sub
jp
enter
sti
inc
pop
inc
fwait
jmp
aaa
jmp
lcall
stos
call
fcmove
fwait
sbb
gs
adc
stc
int
stos
adc
pop
cmp
mov
repz
pop
test
shrl
mov
push
adc
add
mov
mov
pop
xchg
cltd
dec
loopne
cmpsl
cmpsl
and
aad
inc
outsb
test
adc
jmp
xchg
ss
dec
xchg
and
xchg
mov
dec
aas
pop
jp
push
pusha
rcll
retw
mov
push
dec
inc
divl
mov
push
pop
int
fimuls
pop
sbb
out
inc
dec
jecxz
xchg
aad
inc
fdivrl
sar
sub
ja
subl
xor
fidivl
in
dec
mov
repz
push
fsubrs
pusha
mov
icebp
ret
imul
pushf
sub
push
fnstenv
push
jl
or
lods
and
lods
jecxz
sub
xor
leave
xchg
add
addr16
xchg
jmp
mov
sub
xchg
lea
add
nop
add
push
and
xchg
cwtl
xchg
adc
mov
lret
cmc
rorb
push
sahf
call
addr16
mov
jae
mov
lret
cbtw
or
jnp
out
in
test
shrl
push
dec
xchg
pushf
dec
dec
into
not
outsl
push
push
jno
leave
pop
mov
loope
jmp
movb
sbb
dec
dec
xchg
and
in
push
add
fs
mov
neg
rcrb
jecxz
fisttpl
mov
jl
iret
sub
mov
xchg
les
dec
in
cmpsb
stc
add
sbb
enter
mov
loope
daa
mov
pop
add
xor
in
push
push
cltd
adc
push
movl
in
adcb
and
stos
into
daa
mov
mov
pop
xor
cwtl
jns
lret
push
jb
push
jmp
out
ljmp
xchg
cli
sub
filds
jl
xlat
and
mov
mov
sti
mov
es
mov
mov
aas
adcb
xchg
or
test
sbb
jp
aam
lcall
lea
dec
and
lods
pop
xlat
mov
dec
push
sub
fadds
sarl
out
jge
cmc
pop
mov
movsl
repz
aam
sub
mov
in
push
inc
addr16
xor
adc
jne
inc
arpl
pop
xor
lret
into
enter
outsb
cld
pop
test
push
ljmp
and
mov
aad
adc
pop
lods
pop
repz
dec
xor
xchg
push
sarb
les
inc
cmp
lods
arpl
push
mov
jo
popf
ds
xchg
jge
sbb
xor
push
and
mov
mov
dec
outsl
addl
jmp
xchg
mov
data16
adc
add
jnp
sti
sub
inc
call
sbb
outsl
and
and
push
cmp
sub
aam
iret
mov
leave
popa
jnp
in
mov
mov
adc
cmpb
iret
inc
mov
repnz
addr16
jnp
jns
pop
and
repnz
sahf
xor
push
sahf
jmp
inc
data16
lret
sbb
sbb
mov
rcll
add
das
adc
and
dec
sbb
dec
adc
push
pop
mov
push
mov
or
lahf
inc
lea
xor
sbbb
sbb
push
or
cmp
es
or
xor
jno
ds
dec
mov
cs
pop
cmpsl
mov
pop
les
fucomip
dec
xchg
gs
shl
fisttpll
xor
or
out
add
addl
mov
or
push
or
adc
popf
pop
push
mov
push
xchg
mov
les
gs
clc
out
inc
gs
or
aad
loopne
rep
cmpsb
stc
push
inc
ds
jno
or
lret
sahf
xchg
add
icebp
mov
dec
pop
icebp
data16
fsub
outsl
andl
sbb
add
in
and
add
push
int3
rorb
je
mov
movsl
inc
pop
add
jae
ret
dec
or
jg
jns
cmp
jno
dec
aas
shrl
jnp
jl
imul
cmp
repnz
lods
sub
sahf
test
or
aaa
cmp
dec
lds
sahf
cmp
clc
and
fidivrs
adc
push
add
sub
adc
inc
adc
pop
inc
and
jb
jo
xchg
sub
adc
cmp
pop
fistl
in
inc
xor
mov
inc
stos
inc
cmp
and
push
or
rcr
fs
sub
popf
pop
mov
test
jp
jg
add
aad
in
jp
pop
jo
mov
test
rcrl
test
add
scas
cwtl
std
push
das
xchg
jne
js
or
sbb
js
push
mov
xchg
in
or
movsl
adc
test
outsl
int
scas
scas
out
lods
and
sub
push
imul
jbe
fs
enter
sbb
cwtl
arpl
inc
sbb
jl
data16
add
pop
notl
leave
mov
cmc
andb
std
pop
enter
hlt
xor
and
out
and
jge
jb
push
lods
fldcw
and
xor
imul
sarb
adc
repz
scas
sub
sbb
dec
ss
mov
incb
push
pushf
jno
inc
in
jp
ljmp
test
cmp
dec
inc
mov
stc
mov
sbb
sbb
repz
jb
cmp
jecxz
fidivrs
cmp
sbb
int3
lea
dec
aad
xchg
inc
mov
cld
loop
inc
clc
flds
jg
xchg
pushf
cli
pushf
loope
mov
xor
or
ds
push
lea
outsl
mov
mov
jl
int3
arpl
push
mov
stos
cmpl
cs
mov
mov
subl
push
call
loope
and
push
movsb
push
dec
out
out
mov
loop
incb
movsl
stc
in
lods
mov
adc
aad
dec
lretw
bound
mov
sbb
xchg
adc
or
push
sbb
js
test
mov
les
sub
mov
les
pop
adc
dec
push
mov
dec
adc
mov
rclb
jecxz
out
mov
repz
rol
stos
insb
fdivl
stos
jne
fldenv
adc
xlat
adc
cli
or
or
cltd
sub
add
sahf
or
pslld
xor
icebp
push
mov
jne
and
lods
cmp
or
sbb
sub
xchg
gs
loope
es
jb
mov
fcmovu
xor
aam
fistps
and
int3
fcomi
push
out
cltd
mov
int3
lea
mov
inc
inc
xchg
sub
or
mov
in
add
lahf
push
inc
scas
pop
mov
into
pusha
repnz
push
ds
insb
jecxz
pop
or
push
add
daa
xchg
cli
roll
cwtl
push
outsl
ss
ret
jmp
fsts
xchg
popa
xor
stc
xchg
push
aaa
dec
rorb
xor
imul
or
movsb
and
and
das
or
sub
mov
dec
sbb
cmp
in
mov
dec
addl
xchg
lods
std
push
or
in
scas
push
mov
lret
sub
inc
mov
int3
insb
adc
call
jno
jnp
inc
and
test
fnstenv
mov
cmp
adc
xchg
jmp
sti
test
mov
dec
or
pop
xor
cmpl
pop
das
mov
dec
mov
push
inc
into
fisubrl
sub
aaa
aad
mov
push
hlt
dec
xchg
push
cmc
mov
leave
mov
fimull
mov
lea
dec
sbb
inc
insb
fbstp
push
cmpsl
insl
das
imul
pop
mov
add
out
dec
dec
inc
xor
xchg
mov
aas
loope
shrl
xchg
cmp
pushf
out
mov
lods
xlat
icebp
add
sub
pop
mov
pop
dec
ficompl
inc
int3
or
and
loopne
shlb
loope
adc
lcall
bnd
outsl
mov
xor
dec
push
aas
addr16
lods
sub
mov
cwtl
or
dec
sub
ljmp
fdivr
daa
inc
adc
pushf
arpl
addr16
iret
or
pop
lahf
jbe
mov
xor
gs
mov
imul
clc
xchg
outsl
xor
lret
aaa
mov
frstor
call
xor
ljmp
cld
or
xor
ljmp
mov
insb
lret
cmpsb
and
sub
ret
test
jl
nop
lods
mov
jp
out
fwait
adc
bound
out
clc
sbb
jmp
jge
push
cvtps2pd
xchg
add
in
fidivrl
rorb
jle
jne
fcomps
mov
dec
mov
adc
xor
sahf
out
lods
inc
lret
sahf
mov
into
cli
xor
dec
push
xor
cmp
sahf
subb
dec
push
pop
cs
mov
add
jg
cltd
or
sbb
scas
popa
call
and
pop
push
stos
lret
cltd
outsb
jmp
push
inc
push
dec
sbb
jae
iret
xor
mov
out
mov
xchg
std
cwtl
add
ja
jae
jns
mov
cmpsb
push
and
outsb
andb
rcl
fcmove
mov
bnd
cld
xchg
mov
ret
fistl
ret
inc
inc
dec
sarb
push
xor
cs
mov
inc
ljmp
cwtl
cmc
cmpsb
mov
in
dec
cli
test
call
test
dec
stos
cmc
into
inc
xchg
add
mov
inc
mov
xor
jb
outsl
in
inc
jmp
or
mov
jmp
or
mov
mov
aam
mov
xor
adc
pusha
dec
fwait
or
aam
orb
add
xor
push
pop
pop
loope
adc
sbb
jge
daa
or
xor
cwtl
or
cmp
and
fstpl
pop
push
das
setnp
push
xchg
and
inc
shll
sub
or
outsl
out
xchg
aad
mov
hlt
lods
push
out
adc
cmpsl
ret
out
fs
and
mov
dec
add
dec
cli
test
repnz
push
or
addr16
mov
add
test
xchg
push
dec
cli
mov
fistpll
mov
testl
lahf
lahf
xor
or
lahf
cmp
inc
pop
dec
sbb
int3
cwtl
push
dec
inc
mov
xchg
sbb
mov
jno
jmp
and
cmp
or
and
inc
pop
inc
mov
dec
aad
inc
scas
pop
and
sti
loop
sub
jb
fwait
inc
ret
dec
mov
mov
sbb
dec
and
aas
insl
lcall
lret
mov
mov
inc
gs
add
scas
or
mov
fldl
lock
push
add
cli
and
jg
mov
aad
cmp
shl
lds
psubsb
shl
testb
insb
push
ret
ret
mov
lock
or
push
je,pt
push
add
jecxz
and
mov
jae
cmp
inc
je
jbe
and
sbb
cmpl
dec
aad
push
mov
mov
push
in
lret
loopnew
ljmp
mov
and
in
cmp
shr
je
dec
xor
cli
add
push
xchg
cmp
ficompl
repz
mov
jl
imul
in
inc
inc
xchg
mov
aas
aaa
lods
mov
dec
dec
mov
ds
push
outsb
and
cmp
lea
ret
jg
mov
test
int
js
nop
mov
lret
pop
xchg
mov
inc
sbb
lahf
inc
jo
sub
test
cmp
lcall
ret
push
dec
jbe
rol
and
fists
jnp
mov
jecxz
jmp
faddl
movsb
fistpl
stos
mov
jae
icebp
jle
addr16
cli
ds
loopne
test
call
mov
or
out
sub
inc
xchg
add
lret
fmuls
cld
or
scas
mov
in
je
repnz
out
mov
and
xlat
outsb
testb
fs
push
cmp
ss
add
sub
push
and
pop
fnstenv
pop
mov
and
cld
popf
xor
mov
xchg
fnstsw
shlb
pop
fnstenv
add
popa
jle
xchg
mov
and
sbb
fidivrl
mov
loopne
xchg
int3
mov
pop
and
lret
movsl
divb
jg
inc
inc
cmc
mov
lret
sbb
cmc
in
pushf
or
es
or
in
sahf
rcrl
lret
leave
xor
cld
inc
pop
xchg
imul
into
mov
outsb
pusha
cmp
lods
lock
pop
std
xchg
push
repz
out
adc
dec
test
test
iret
mov
mov
mov
daa
ficomps
xchg
cmp
dec
insl
xor
ds
gs
scas
sub
out
scas
out
xorb
sub
lods
pop
movsb
mov
sarb
scas
mov
mov
imul
in
pop
in
cmp
fimull
andb
cltd
or
xchg
out
mov
and
pop
pop
lds
insl
ret
sub
mov
sub
add
mov
arpl
fs
push
push
mov
xchg
jb
mov
loope
jne
mov
in
mov
hlt
out
mov
mov
pusha
lods
mov
push
andb
scas
je
outsb
xor
or
adc
cmp
xchg
stos
lock
mov
aam
mov
or
mov
xlat
ret
add
mov
push
pop
xor
aam
lahf
mov
and
lock
push
inc
sahf
cmp
in
addb
mov
mov
aam
into
pop
jle
imul
leave
in
pop
addr16
outsl
and
cmp
push
out
lret
in
jge
and
arpl
popa
and
mov
enter
and
push
mov
xchg
mov
into
and
lahf
or
adc
aaa
test
xor
lds
add
cmp
addb
push
jle
in
dec
mov
dec
jl
imul
fidivs
xchg
adc
xchg
fdivrp
or
mov
pop
fdivl
rorb
lock
jo
call
mov
pop
cwtl
push
mov
add
jl
repnz
int3
inc
cmp
push
dec
pushf
inc
mov
and
sar
stos
in
fs
into
sub
lahf
rol
mov
pop
sbb
fsubrs
add
sbb
push
xchg
cmp
jae
dec
mov
sbb
inc
push
fwait
mov
xorb
cmp
cs
stos
adc
mov
aas
dec
test
inc
adc
pop
dec
fdivr
in
cmp
fs
mov
add
shll
ljmp
and
addr16
xchg
cmpsl
pop
xor
pop
icebp
ret
repz
enter
test
int3
popf
nop
lods
lret
rcrl
repz
xchg
lahf
test
dec
sub
decl
cli
out
xor
insb
xlat
mov
icebp
movsl
cmp
xchg
int
pop
xor
mov
mov
pop
stos
xor
jp
out
frstor
sbb
hlt
das
outsb
loopne
scas
add
sbb
mov
lea
cli
push
xchg
mov
imul
out
inc
lea
xchg
adc
pop
pop
mov
imul
movsb
sub
pop
cmpsb
push
cmp
into
je
cld
ror
xchg
xchg
icebp
inc
in
cs
jmp
mov
jbe
lods
loope
pop
in
mov
xor
add
lea
movsb
cli
cmp
rcl
jge
sbb
push
shrd
loop
jl
stos
fnstenv
and
adc
sti
inc
xor
sbb
addr16
xor
js
cmp
aad
inc
xor
loope
in
inc
aas
dec
and
arpl
mov
lea
mov
xchg
popa
testb
fistl
push
loope
sub
pop
mov
ja
outsl
cli
jge
jecxz
imulb
or
adc
inc
loopne
xchg
pop
or
dec
mov
jo
jno
adc
pop
jecxz
push
adc
push
xchg
push
and
frstor
jl
mov
imul
mov
cmp
dec
cli
cmpsl
sbb
mov
scas
jns
das
shll
dec
popf
mov
jnp
out
lods
adc
lock
mov
cwtl
out
dec
ljmp
call
pusha
cmp
jns
in
or
enter
lock
push
pop
add
xchg
out
gs
ret
pop
inc
enter
into
mov
xchg
sub
cmp
mov
data16
loopne
or
jo
mov
dec
mov
repnz
pop
ja
clc
dec
dec
dec
aas
xchg
and
or
fimuls
or
push
mov
sbb
scas
call
nop
dec
sahf
xor
pop
call
mov
push
xchg
add
out
inc
pop
sbb
mov
imul
jge
mov
sub
imul
mov
cmp
out
dec
or
sub
mov
aas
adc
push
sub
mov
scas
pop
andb
xor
sar
pop
inc
sarl
ds
movb
imul
jne
or
outsl
sub
xchg
ds
out
lds
sub
fwait
aaa
or
inc
inc
cwtl
ljmp
mov
pop
or
lcall
fwait
sub
pop
jno
dec
fs
sub
rcrb
xlat
repz
mov
inc
lcall
cmc
mov
dec
cmp
jl
out
add
sahf
testl
enter
mov
adc
ljmp
and
mov
mov
push
inc
xor
and
lret
test
mov
fsubrs
dec
pop
rep
cwtl
sbbb
jmp
inc
pop
std
mov
std
aas
mov
out
jo
icebp
rcrb
in
push
fs
movl
out
hlt
mov
insl
mov
xor
das
push
pop
loope
test
jmp
add
and
and
jnp
cli
jle
mov
dec
test
inc
out
cmpsl
mov
xchg
shrl
push
jp
add
test
inc
jmp
pop
loopne
sahf
and
int
or
sti
mov
stos
inc
std
inc
add
cltd
std
popf
xor
inc
mov
xchg
or
lcall
cmp
adc
sti
or
mov
lds
pop
or
xchg
xchg
jl
add
or
js
fsubrs
jnp
pop
jns
out
and
cltd
cmc
mov
adc
adc
loop
mov
es
mov
stos
sub
jbe
push
mov
cli
repz
stos
inc
cmp
jbe
or
in
jecxz
negb
cmc
mov
icebp
xor
cmp
pop
jne
sbb
loopne
or
mov
push
loop
fsubp
mov
ret
cmp
aas
sbb
pop
push
outsb
out
jl
mov
stos
lea
andl
adc
hlt
push
es
scas
pop
add
cs
ficomps
mov
mov
jne
adc
push
push
and
pop
pop
rclb
lock
aad
jne
jns
data16
cld
lcall
in
arpl
arpl
sahf
cs
jnp
loop
iret
pushf
stos
les
popf
cmp
leave
insl
xor
jge
mov
aas
shlb
fisttpl
sub
push
out
mov
cmpsl
in
std
iret
add
icebp
xor
mov
push
ror
repnz
inc
or
data16
mov
ret
mov
es
lock
fs
enter
hlt
sbb
hlt
push
sbb
ficoms
insl
lea
daa
or
pusha
ret
dec
loopne
cmpsl
dec
dec
mov
out
subl
lahf
lahf
sub
repz
scas
mov
fcomi
aam
cli
xchg
and
gs
in
xchg
dec
rcrl
jbe
add
dec
iret
shlb
dec
rcll
push
out
jne
and
mov
sahf
adc
mov
cld
xchg
mov
mov
mov
adc
jne
and
in
cmp
aas
pop
int
aad
ret
addr16
fwait
shrb
xchg
add
adc
aaa
cmp
mov
push
rol
ficompl
pop
sub
test
jbe
lock
jl
cmp
push
pop
or
xor
enter
xchg
jnp
adc
jecxz
clc
cli
pushf
cmp
add
pop
sahf
cwtl
stos
fistpll
ljmp
ja
cmp
stos
dec
dec
xchg
mov
and
loopne
imul
movsb
sti
lock
bound
inc
out
sub
push
mov
pop
or
ss
insb
out
cmc
push
ljmp
xchg
scas
lods
sub
stos
mov
data16
lret
inc
push
or
push
lea
push
mov
mov
xor
paddq
inc
sbb
jmp
mov
mov
out
mov
nop
push
sti
xchg
bound
inc
and
push
lret
addr16
mov
scas
jl
push
pop
xor
dec
inc
or
or
fcoml
lds
movsl
cmp
add
pop
mov
into
xor
sub
pop
adc
xchg
pushf
repnz
mov
dec
cld
push
repnz
mov
int3
cwtl
mov
jge
xchg
jl
mov
cmp
and
arpl
adc
pop
pop
cmp
xchg
jecxz
mov
ret
pop
mov
sub
inc
dec
out
or
mov
dec
jnp
js
fwait
pushf
lret
out
push
mov
cwtl
icebp
mov
test
add
push
cmp
pop
jns
xchg
mov
pop
cmp
mov
mov
inc
mov
mov
push
int
test
and
in
addl
dec
or
mov
adc
mov
or
movsb
push
jo
push
shll
dec
cltd
sti
mov
aad
hlt
aas
mov
fwait
sahf
inc
fdivrs
pop
pop
mov
or
cmp
inc
frstor
jbe
push
inc
fnsave
sbb
mov
dec
out
jns
outsl
xchg
jle
nop
inc
lret
add
add
dec
arpl
mov
xchg
in
pop
and
fisubs
insb
xchg
pop
xchg
inc
cs
scas
and
aas
jmp
into
jno
mov
mov
fidivrl
mov
movsb
stc
nop
xor
ret
sub
pop
sub
xor
wbinvd
add
mov
push
adc
xlat
xchg
add
ret
mov
in
out
aas
dec
les
push
repnz
imul
jmp
inc
lcall
cmc
out
mov
test
in
inc
call
mov
out
jecxz
out
fwait
xadd
inc
outsb
or
leave
movsl
aad
nop
push
or
shlb
mov
testl
cmpb
ds
imul
cmc
imul
push
imul
pop
cmp
fdivl
push
sarl
es
and
ret
arpl
jmp
push
mov
cld
stc
mov
in
dec
or
jb
mov
jns
xchg
jmp
aam
shl
mov
push
mov
add
fcomps
dec
je
mov
push
bndstx
incl
inc
ss
xchg
push
xlat
orb
jle
add
rorl
in
sub
mov
or
mov
pop
xchg
cmpsb
scas
mov
ljmp
out
pop
xor
cld
pop
jne
or
fbstp
fwait
inc
mov
or
fidivrs
push
adc
mov
pop
imul
mov
or
iret
scas
sub
sbb
es
aaa
into
xchg
inc
mov
scas
mov
xchg
jno
stc
xor
call
or
testl
and
pop
xor
mov
lahf
ss
xchg
mov
cs
adc
or
fs
adc
fs
jmp
dec
lahf
sub
mov
pop
subb
mov
ret
rcll
aam
outsl
popa
pushf
out
ljmp
ja
mov
sarl
cmp
std
or
mov
lret
xor
cmpsl
mov
inc
add
jl
cs
call
cmp
xor
roll
mov
cmp
cmp
fidivrs
mov
test
cmp
enter
test
int
call
xlat
ficompl
or
mov
push
mov
pop
adc
bound
out
imul
test
pop
cmp
fisttps
mov
jle
pop
adc
sbb
pop
mov
rclb
into
mov
lret
dec
pop
jo
jno
add
sbb
lret
and
pop
xor
je
xor
push
in
cld
sbb
aad
pop
out
sti
shll
mov
xchg
rorb
adc
loopne
or
inc
stc
ljmp
cmc
push
inc
cmp
subl
push
inc
mov
insb
add
outsl
inc
pop
ret
inc
dec
out
xchg
cmp
mov
and
repnz
push
inc
xor
fisttpll
cltd
std
je
gs
adc
or
and
lods
lock
mov
xchg
add
test
fbstp
call
jb
inc
mov
decb
aad
and
cmovl
popf
cli
sub
out
sbb
xchg
mov
dec
jb
nop
inc
in
dec
dec
shl
push
push
cs
cmp
in
add
push
cmpsl
mov
retw
or
fsts
gs
cld
lcall
in
mov
cwtl
jne
push
lock
arpl
sahf
and
std
mov
mov
jle
and
cwtl
sub
cmp
push
loop
adc
outsb
hlt
addr16
or
jne
mov
adc
lods
jmp
cmp
imul
mov
ds
rcl
jnp
dec
or
xchg
jge
or
add
nop
push
jb
sahf
adcb
shrb
inc
jb
arpl
outsl
jnp
leave
adc
push
add
xor
int3
cld
je
sub
mov
and
add
pushf
mov
ds
or
int
shll
or
mov
sti
test
aaa
pop
std
inc
add
mov
mov
lock
sub
mov
mulb
out
dec
inc
out
jmp
adc
sarl
nop
lods
xchg
icebp
or
adc
nop
or
cmp
inc
pushf
test
sub
adc
cmp
cs
mov
jne
xchg
enter
add
xchg
das
lods
std
inc
addb
inc
or
movsb
mov
xor
mov
adcl
and
sub
ret
and
sub
pop
adc
or
xchg
ret
cltd
sbb
sbb
inc
fsubrs
and
push
mov
les
adcl
ljmp
push
test
pop
ja
cli
cmp
lock
inc
in
test
ficoml
stos
or
js
ljmp
insl
dec
mov
lret
mov
mov
in
stos
cmp
jo
lods
aas
pop
push
aaa
xchg
je
dec
fnsave
sbb
scas
ret
lods
insb
leave
and
andb
std
jmp
lcall
lahf
inc
js
outsb
mov
sti
add
mov
js
mov
leave
push
mov
or
das
enter
mov
jns
mov
xchg
idivb
jle
mov
arpl
ret
cmp
dec
jle
dec
inc
jmp
dec
movsb
mov
xchg
mov
or
imul
push
dec
sbb
and
mov
stos
cmp
pop
mov
mov
cmpsb
hlt
push
les
jns
xchg
scas
jne
int
mov
shll
pop
jecxz
mov
add
cmp
icebp
inc
cmc
fmul
xchg
or
or
loop
pop
ljmp
and
popf
js
rclb
das
inc
pop
je
cmpsb
fildl
jp
daa
shll
sahf
mov
cmpb
xchg
add
or
je
hlt
jmp
inc
mov
out
xchg
dec
gs
loope
mov
ljmp
sub
cmp
push
lods
rorl
aaa
lcall
sbb
push
or
sbb
ds
jp
sbb
jnp
mov
adc
insb
push
add
in
xor
bound
push
les
es
popf
xor
dec
lods
sub
ss
idivb
add
cli
xchg
into
les
test
cltd
cs
xor
cli
insl
sub
rclb
test
dec
cs
pop
sub
daa
int3
arpl
and
cmpb
mov
mov
rcl
sub
mov
mov
mov
pop
cmpxchg
cmp
decl
pop
in
mov
sub
push
jmp
dec
push
out
popf
out
dec
adc
add
out
pop
mov
or
cltd
stos
test
in
pop
sti
mov
sub
popa
ret
dec
cmpsb
cmp
lcall
imul
pop
mov
daa
daa
pop
repz
js
jne
jp
das
xchg
mov
mov
jl
aas
adcb
loope
or
imul
and
int3
push
jmp
inc
imul
arpl
lods
or
nop
cmp
shr
ficoml
push
adc
inc
int3
mov
lods
out
enter
scas
jl
enter
loope
cltd
adc
call
sub
prefetcht0
inc
jg
xor
push
dec
out
xchg
dec
loop
fsubrs
or
icebp
les
mov
mov
in
shr
inc
test
pop
je,pt
outsl
jnp
in
clc
jl
icebp
imul
jmp
mov
movsb
inc
adc
rolb
enter
cltd
push
loope
adc
pop
push
push
lods
inc
jno
dec
jge
bound
xchg
sarb
mov
stos
hlt
push
or
sbb
jb
das
pop
addr16
sbb
push
stos
mov
inc
xor
mov
ret
pop
loopne
mov
dec
fsubl
icebp
loopne
or
out
lds
ret
add
pop
inc
push
daa
dec
enter
imul
sub
cmp
enter
and
or
out
dec
das
loopne
add
lock
and
clc
cmp
xchg
lods
mov
pop
xor
mov
add
out
pop
and
popl
xor
imul
mov
mov
jo
test
pop
xchg
ret
jns
sub
sub
aaa
mov
cltd
std
mov
mov
fcmove
pop
jnp
xchg
adc
icebp
push
mov
mov
pushf
ret
sub
arpl
pop
ljmp
mov
pop
stos
jne
mov
popf
xorb
scas
lods
mov
or
test
sbb
xchg
cltd
loopne
add
shl
out
xor
dec
mov
insb
ljmp
inc
jmp
xchg
ja
sbb
jns
push
mov
sub
push
push
xor
jne
pop
jmp
test
into
dec
push
lcall
push
lods
daa
cmpsb
jnp
add
push
sub
stos
loopne
dec
add
dec
icebp
sub
aad
out
dec
mov
add
mov
sub
mov
insb
out
pop
insl
sbb
add
leave
daa
popa
inc
fisttps
cs
push
movsl
push
ds
pop
insb
insl
clc
fsubrp
fnstenv
xor
das
ret
jno
mov
mov
shll
mov
mov
mov
popf
fabs
scas
cli
pop
fsubrs
mov
test
daa
out
aas
pusha
vdivps
pop
sarb
sbb
imul
shlb
mov
sub
outsl
mov
jp
or
and
imul
sub
sbb
add
repz
push
mov
adcl
ja
in
fildll
mov
xchg
mov
fnsave
xchg
add
fcoms
xlat
xlat
jmp
push
mov
fs
cmp
jbe
lret
mov
xchg
repnz
mov
repnz
test
xor
sub
shll
int3
push
pop
push
ss
cmp
in
mov
lret
sbb
inc
mov
std
jg
arpl
cmpsl
inc
cmpsb
inc
testb
mov
les
in
iret
sbb
mov
scas
pop
fistpl
jecxz
jbe
pop
push
hlt
dec
xor
fwait
push
lcall
xchg
add
pop
cli
inc
bound
push
pop
jb
xchg
adc
and
add
cmpsl
ds
js
inc
scas
cld
sbb
xadd
inc
and
jo
shll
les
adc
scas
pmaxub
int3
das
xor
ljmp
jno
cs
and
sbb
imul
loope
inc
and
lcall
push
add
stos
adc
pushl
pop
daa
mov
pop
imul
xchg
cmp
loope
mov
sub
xchg
addr16
mov
mov
jbe
bound
adc
hlt
int3
shlb
sbb
out
sahf
dec
fsubrs
lret
push
mov
jb
push
add
inc
sbb
ds
pop
xchg
cmc
sub
loopne
repz
cmpsb
add
movsb
nop
dec
repz
pop
and
iret
rcrb
out
ret
push
pop
push
add
push
test
sub
test
orl
pop
clc
adc
pop
add
mov
xor
sbb
mov
aad
jbe
dec
mov
jno
cmp
cmc
mov
loope
fists
mov
pop
sbbb
pop
out
arpl
push
testl
sti
xchg
adc
cmpsb
xchg
insb
pop
pop
push
ret
aas
loop
adc
sbbl
and
adc
add
push
je
jae
jmp
xor
fwait
in
sbb
nop
mov
mov
notb
lock
dec
cmp
and
fnsave
sub
add
enter
cld
dec
jno
call
adc
cld
repnz
insl
int
pop
addr16
sub
rolb
mov
int3
addr16
sbb
and
adc
sub
mov
lret
loopne
dec
mov
mov
data16
sbb
pop
out
xchg
sbb
jge
push
pop
pop
aaa
cmp
insl
jge
cli
add
mov
adc
push
and
or
movsb
testl
xor
mov
repz
adc
xchg
fsts
arpl
fisubs
dec
es
cltd
dec
aam
xchg
xchg
insl
jbe
dec
fwait
out
add
mov
mov
js
imul
add
jns
stc
pusha
sbbl
sahf
fsts
cmp
je
cmp
sbb
in
or
sar
loopne
xchg
add
loopne
shlb
mov
or
orb
pop
stc
insl
xlat
repz
pop
mov
rol
insl
inc
and
int
jl
pop
adc
test
les
scas
out
push
out
sbb
roll
fidivs
repnz
jecxz
jg
sbb
sahf
jne
mov
das
movsb
insb
cld
xchg
sahf
inc
sub
mov
mov
pop
dec
in
aam
lahf
or
insb
ret
outsb
mov
dec
fstpt
subl
jp
adc
push
in
hlt
in
out
hlt
dec
cltd
imulb
cmc
loope
pushf
and
fsubrs
inc
out
pop
enter
flds
cltd
and
cmpsl
lods
adc
and
fstpt
ja
fsubr
iret
dec
mov
test
outsb
jp
in
negb
sbb
scas
xchg
mov
mov
loopne
dec
push
loope
scas
xor
xor
mov
xchg
dec
cmp
iret
sub
push
push
cmp
cmp
inc
in
cli
fs
add
enter
xchg
inc
sub
orb
dec
fucomp
pop
sbb
mov
dec
fadds
mov
jecxz
sarb
inc
shlb
inc
das
cwtl
jbe
mov
mov
push
adc
xor
sbb
dec
xchg
and
aaa
sub
pop
pop
popf
cmp
push
ss
jecxz
pop
xor
mov
dec
outsl
jno
fdivrp
cmp
je
adc
pop
push
mov
loopne
xor
push
mov
lods
sbb
xchg
inc
ja
addr16
clc
outsb
push
arpl
or
inc
mov
adc
pop
mov
adc
lea
mov
inc
dec
xor
jo
dec
out
xor
call
imul
cli
cmp
pop
pop
enter
jle
iret
movsl
add
and
pusha
in
add
push
jmp
pop
aas
rcrl
jae
dec
jp
pusha
outsl
out
pop
out
ljmp
push
or
cmp
push
jno
jl
arpl
push
sahf
or
push
mov
and
inc
mov
hlt
push
add
mov
mov
prefetch
xchg
sbb
popa
dec
rcrb
aad
into
pop
mov
shl
movsb
pop
pop
xor
scas
call
ret
shrl
add
in
cmpsl
shrl
cmp
sub
cmp
sub
lcall
sbb
scas
andb
in
fsubl
shrl
daa
pushf
jg
cld
jne
fisubl
dec
mov
std
fs
cld
inc
cmc
test
xchg
add
not
add
inc
std
mov
inc
xor
dec
addr16
adc
sub
pushf
insl
sti
sbb
inc
push
pop
imul
jge
and
push
je
pop
inc
fisubrs
out
out
data16
or
sub
shl
push
jb
push
scas
ret
ror
int
dec
cs
mov
and
inc
les
popa
mov
push
mov
lcall
xor
out
lock
test
sbb
sub
movsb
pop
jae
push
jbe
xorb
mov
ret
loopne
inc
cmpsl
in
in
or
xor
push
sbb
ljmp
jne
rclb
jo
jb
lret
sbb
push
cmp
pop
pushf
mov
add
fstpl
aad
cmp
cs
and
cmp
adcl
mov
test
ret
not
sarl
lds
stos
lea
xchg
jge
sub
mov
in
pop
les
cmp
shll
cs
loop
subl
mov
je
cmc
adc
or
or
inc
in
jnp
jbe
movb
dec
std
xchg
jg
loop
fwait
sbb
xchg
popa
mov
bound
pushl
pop
sub
mov
cmp
fmuls
test
push
mov
cmp
pop
jbe
mov
int3
push
mov
pop
loopne
and
cli
shlb
and
jmp
dec
jne
out
das
inc
inc
pop
mov
fdivrl
in
or
outsl
push
imul
xchg
rorb
test
insl
xchg
lock
outsl
sub
push
jae
scas
outsb
lcall
lds
mov
mov
fnsave
arpl
jno
dec
dec
in
cmp
nop
xor
xchg
in
xor
adc
xlat
add
enter
sahf
jmp
inc
push
fcmovb
or
js
movsb
add
xchg
popa
je
or
add
jl
or
jnp
imul
cmp
popa
mov
cmpsl
stos
xor
push
lret
xor
mov
or
and
and
cmp
ss
push
out
inc
push
pop
push
sahf
and
iret
aas
loop
clc
insl
inc
bound
xchg
data16
pop
stos
pop
inc
cwtl
xchg
mov
inc
pop
mov
jp
pop
adc
mov
sbb
mov
sub
das
mov
enter
jae
rclb
ret
lods
jg
sub
int3
fidivs
pop
sbb
imul
mov
lahf
ss
mov
and
mov
cmp
or
and
mov
sbb
or
mov
xor
mov
loopne
dec
or
mov
sub
insb
pop
cmpxchg
fucomp
outsb
sub
inc
es
cmpsl
aad
cmp
js
js
call
icebp
pop
std
aam
and
shlb
mov
fsubp
lret
bound
insb
ljmp
inc
jmp
mov
adc
mov
xor
fwait
std
jg
fldt
mov
mull
xor
stos
or
in
push
jge
pop
lret
sbb
les
fwait
outsl
mov
mov
movsb
fstpt
or
and
rol
loopne
psrlq
cwtl
out
cmp
das
arpl
out
rolb
add
daa
or
mov
or
xor
xlat
ljmp
mov
fcmovnbe
sub
js
sbbb
in
hlt
mov
mov
cmp
aas
cltd
xchg
cltd
movl
push
scas
mov
fnsave
add
xchg
or
mov
fmull
fdivp
shrl
xor
int3
cmp
test
aam
xor
push
and
add
cmp
mov
jb
or
ret
xor
repnz
repnz
add
lret
data16
incb
jb
pop
test
pop
mov
sahf
cld
inc
mov
and
and
into
xor
les
xchg
cmp
xor
in
movsl
sub
daa
mov
cmpsl
xchg
repz
or
xchg
movsb
fildl
out
js
sub
insb
insl
mov
fmul
out
mov
test
jno
subb
xchg
add
cmp
cmpsl
mov
xor
ret
imul
imul
xchg
jg
push
xor
fs
pusha
and
scas
mov
pop
adc
out
mov
or
mov
jg
in
push
repz
push
es
data16
mov
int3
rcl
add
adc
xor
and
dec
pop
test
pop
jo
out
sub
cmpl
stos
mov
mov
rolb
add
pop
cli
xchg
mov
add
aam
mov
or
stos
xchg
in
sbbb
test
sbb
push
push
mov
xchg
sub
and
test
aas
ss
inc
ds
jbe
cmpsl
ds
punpckldq
flds
mov
mov
sub
mov
push
lret
mov
mov
ss
mov
dec
imulb
into
pop
out
negb
jns
sbb
push
fildll
xor
inc
cmovs
cld
fcmovbe
dec
or
lea
stos
sbb
in
lahf
in
mov
cmp
xchg
fsubrs
cmp
mov
shr
xchg
add
jno
xchg
jp
xchg
cwtl
test
ljmp
cmpl
xchg
fisubrl
ds
push
std
lds
xor
push
stos
sbb
add
mov
into
sbb
cmp
cltd
test
mov
pop
test
adc
mov
stos
test
lods
mov
xor
aad
cmp
sbb
xor
pop
cwtl
lea
cwtl
push
out
jmp
inc
sbb
xor
fscale
mov
push
out
jp
lcall
popa
xchg
pop
aad
push
mov
aad
push
mov
xor
jbe
push
or
ds
gs
test
cwtl
jge
ss
imul
xchg
mov
adc
jnp
cmp
inc
cmp
fstps
sti
inc
shrl
sbb
sub
mov
adc
lahf
std
mov
pop
popf
ljmp
insl
xchg
scas
sahf
cmp
pop
and
xor
jmp
cli
push
dec
mov
repnz
sarb
fcmovnbe
int
mov
sbbb
jmp
cli
or
mov
jns
mov
out
push
mov
cmpsb
push
sbbl
or
adc
or
ljmp
jle
or
out
mov
inc
sub
pop
add
shrl
jae
mov
jb
sti
imul
loopne
mov
iret
sbbb
adc
ds
mov
daa
mov
cmp
shlb
enter
add
adc
xchg
pop
pop
icebp
jle
repz
cltd
add
push
xor
or
push
jl
roll
sub
sar
jl
out
call
aad
push
pop
mov
int3
pop
add
subl
push
mov
push
mov
jg
aas
add
in
xchg
sbbl
or
ret
mov
sbb
sub
cmp
fwait
mov
add
jmp
and
sahf
ficoml
lods
jb
movsb
icebp
ficoms
sub
inc
xchg
pop
dec
fimull
pop
dec
test
xchg
jnp
mov
js
clc
lds
inc
inc
xlat
xchg
inc
cwtl
sbb
lds
cmp
rol
jge
and
dec
repz
loope
in
in
lcall
es
add
scas
inc
mov
add
outsb
mov
jecxz
and
in
je
mov
fmull
sbb
arpl
adcb
push
mov
xchg
inc
adc
push
fsubs
or
ss
dec
das
inc
sbb
jne
cmpsl
cmp
pusha
fadds
lahf
nop
popa
inc
fldl
jp
inc
or
xorb
mov
sti
pop
or
lret
ret
xchg
mov
loopne
adc
lret
rcll
mov
and
loope
pop
cpuid
pusha
aas
popa
insb
jg
and
nopl
rcll
pop
insl
xor
add
mov
inc
mov
xor
es
mov
xchg
int
imul
pop
push
xchg
jo,pt
pop
mov
push
pop
hlt
fistl
in
das
test
popa
push
mov
xor
push
cmc
int3
jmp
fstpl
int3
jl
cli
movsb
loop
push
cwtl
lcall
popf
lds
iret
add
ret
and
dec
fwait
inc
sub
cmpsb
mov
cmp
jae
pop
mov
mov
aam
add
mov
dec
sub
mov
and
mov
shl
jb
jne
stc
repz
xchg
xchg
xchg
mov
mov
cmp
sub
mov
scas
mov
inc
cltd
flds
xor
cwtl
jbe
pushf
jbe
imul
dec
das
popf
adcb
or
fwait
add
add
push
add
out
or
sub
cltd
mov
xor
imul
sbb
jb
and
loopne
adc
mov
fdivrl
ds
movsl
lahf
xchg
mov
add
insb
cltd
or
jg
mov
jl
pop
orl
in
push
cltd
in
shll
mov
cmp
and
ds
lret
jne
orl
addr16
jle
ror
stc
add
scas
dec
and
ret
dec
pusha
xor
lods
inc
addr16
cmc
clc
mov
in
fadds
or
dec
ljmp
sbb
and
cli
movsb
pop
shlb
and
fld
fimull
pop
cmpsb
add
mov
subl
filds
mov
sub
fisttpll
xchg
lock
ret
sub
aaa
fdivl
mov
lea
test
dec
jge
add
xchg
mov
and
push
ficompl
out
mov
xchg
in
sbb
dec
lcall
cmp
jmp
or
mov
mov
out
call
pop
stos
mov
push
inc
out
push
jle
mov
jns
sbb
movlps
inc
es
jns
fdivl
pop
pop
int
mov
add
sub
jb
clc
pop
jns
xlat
xchg
fs
aas
add
jb
push
adc
lea
dec
retw
rorb
and
cmp
sub
arpl
enter
sub
ss
rorb
sahf
sub
iret
std
and
es
mov
or
inc
sbbb
iret
pop
lret
push
xchg
push
dec
or
xsha256
cmpsb
adc
cmp
mov
out
push
mov
mov
cmp
test
iret
out
pop
cltd
enter
cmp
jne
pop
fsubl
or
call
mov
push
mov
mov
call
or
and
into
fucomip
sarl
pop
dec
pop
or
orl
jbe
sbb
scas
fldt
idivl
incb
das
add
mov
add
xchg
fwait
sti
pushf
leave
push
mov
stos
es
sbb
mov
data16
sbb
mov
shlb
int3
arpl
daa
ljmp
jae
lret
mov
mov
popa
mov
mov
pop
js
psrlq
or
adc
or
xor
cmp
dec
fcomip
shrb
aaa
mov
call
xor
ficomps
scas
cmp
int
fsubs
xchg
pop
or
lea
pop
idiv
btc
sbb
arpl
outsl
cltd
sbb
mov
les
adc
jae
mov
jg
mov
imul
mov
or
in
cmp
push
loop
inc
loope
mov
mov
mov
andb
pop
and
test
sub
or
shlb
mov
adc
sbb
cs
sbb
add
or
cmp
jl
cld
jno
rcll
xchg
mov
les
and
lret
stos
jmp
dec
push
addr16
ljmp
or
repnz
mov
cmpsb
pop
insl
add
les
and
mov
cmpsb
les
call
out
sbbl
or
cmp
jp
xchg
rcrb
xor
add
dec
out
xchg
test
inc
dec
fucomp
lret
lock
imull
test
int
shrl
sbb
ret
bound
adc
and
adc
sahf
adc
aaa
aaa
imul
dec
sahf
xor
mov
pop
or
out
push
xchg
pop
push
sbb
lret
jbe
js
push
mov
int3
lret
ret
mov
sbb
xor
adc
lods
cmp
push
adc
dec
aad
mov
out
lahf
and
cmp
inc
mov
ret
int
dec
out
xchg
dec
repz
stos
insl
add
xor
and
mov
mov
fsub
jle
test
mov
add
or
push
or
vpsubq
mov
mov
lds
mov
inc
xchg
sbbb
fcoms
scas
cli
and
cmp
vmread
jb
mov
or
jb
shrb
sub
jo
std
push
outsb
repz
nop
mov
shr
jnp
push
sub
not
jbe
in
popa
ss
in
xorb
stos
fidivl
dec
out
xchg
in
push
mov
jo
daa
mov
xchg
mov
ret
inc
stos
mov
adc
out
jg
lret
int
jno
mov
popa
lahf
aad
lret
mov
imul
mov
mov
insb
fsubrp
xchg
lea
sbb
push
pop
repz
mov
lods
cmp
jo
mov
pop
lahf
stc
inc
and
loope
jo
dec
rorb
ds
fdivrs
jae
pop
scas
push
inc
in
mov
in
push
cmp
les
jns
gs
out
cld
shrb
xchg
lret
xor
jns
add
push
int3
idivl
shr
mov
xor
pop
arpl
fs
inc
mov
iret
mov
or
push
cltd
pusha
enter
loope
jb
adc
xor
decb
lcall
xchg
dec
pop
daa
repnz
stos
pop
popf
and
stc
das
stc
mov
cmp
aad
xlat
cmp
mov
and
add
adc
and
xchg
push
mov
push
mov
push
andb
pushf
push
xchg
xlat
mov
push
pop
cmp
arpl
jnp
push
lea
lea
clc
jmp
lds
mov
aaa
xchg
dec
lcall
and
mov
sub
pop
and
subb
shlb
orb
jge
inc
pop
arpl
idivl
fcmovb
out
std
clc
loop
fidivrl
jmp
mov
lahf
jge
jno
cli
dec
add
dec
fsubr
xchg
or
xor
xor
cmp
ret
and
fwait
movsb
jns
xor
das
xor
or
dec
psadbw
xchg
jl
cmc
int3
fidivs
cmc
loop
neg
andl
inc
xchg
mov
rorl
add
and
movsb
inc
cwtl
mov
lds
mulb
add
bswap
and
ljmp
sbb
adc
scas
aaa
mov
or
inc
xor
add
cmp
stc
jnp
xor
ret
std
and
mov
xchg
out
f2xm1
dec
pushf
lods
sbb
aaa
inc
sbb
insb
pop
jbe
dec
clc
bound
inc
dec
cs
pop
stos
xchg
mov
out
mov
jne
sbb
ds
imul
xchg
cmp
or
sbb
imul
repnz
fadds
push
mov
test
imul
or
or
lds
inc
cmpsb
xchg
pop
pusha
jo
xor
jp,pt
sahf
gs
inc
pushf
xor
inc
rep
and
into
stos
and
push
lret
jne
cmp
insl
push
fadds
mov
loopne
jb
rol
cmp
scas
add
ljmp
gs
insl
mov
sbb
jbe
xchg
xchg
in
and
lret
testl
out
lret
pop
int3
lods
out
fistpll
xor
inc
dec
mov
fildl
outsl
and
inc
stos
inc
jnp
add
sbb
push
inc
adc
fsubrs
xor
loop
mov
mov
in
sub
decb
sbb
arpl
scas
ljmp
mov
mov
sub
int
lret
sti
fcoml
or
cmpsl
je
fmuls
mov
jl,pt
cmpsl
mov
jmp
int
in
lods
push
addr16
gs
ds
test
outsl
push
outsl
pop
jl
cmp
push
mov
mov
call
sbb
popf
lods
leave
bound
inc
hlt
mov
jbe
push
push
adc
or
push
outsl
sti
sub
icebp
jg
clc
fwait
imul
adcb
pop
add
js
jl
das
adc
mov
inc
xor
lahf
stos
add
fldenv
in
imul
mov
cmpsl
mov
test
adc
mov
push
std
sub
mov
aad
dec
jmp
stc
push
mov
xchg
sub
sub
loop
out
into
icebp
sbb
pop
fnsave
int3
icebp
or
mov
mov
fdivl
push
addr16
push
pop
and
sbb
sbb
imul
jmp
in
push
push
xor
jge
dec
scas
into
and
es
sub
and
mov
scas
out
into
data16
pop
addb
pop
in
inc
jge
mov
lods
roll
mov
pop
int3
mov
sbb
push
jnp
add
and
ljmp
sbb
in
mov
cmp
shl
xchg
iret
or
movsb
test
add
and
lods
dec
out
xor
fisubrs
cmp
sub
mov
fsubrs
pop
int3
sti
fwait
pop
xlat
inc
test
jmp
shll
push
fdivrl
stc
push
sub
shll
jl
cwtl
pop
lret
or
std
cmpsl
mov
adc
mov
insl
sub
jle
or
popa
sbb
adc
leave
or
mov
sbb
pop
aam
stos
push
sbb
dec
lea
aad
imul
or
mov
mov
test
lock
adc
xlat
aam
and
mov
push
nop
sub
adc
sbb
pushf
cli
repz
fwait
cmpsl
aad
mov
stos
leave
pop
or
lret
popf
sub
int3
sbb
jl
dec
sub
mov
into
sbb
or
cmp
scas
pop
fbld
dec
test
cld
xchg
adc
xor
xor
mov
push
mov
loope
adc
jo
cs
lds
push
sbb
es
or
inc
pusha
and
xchg
pop
out
mov
xor
jg
mov
sbb
jbe
push
and
jne
push
inc
fstpl
add
fiaddl
push
int3
cmp
jno
in
lock
cwtl
scas
sub
mov
paddq
mov
and
call
ss
sahf
jecxz
and
jge
mov
pop
cmc
fcoms
jno
inc
stc
jl
mov
dec
and
popf
adc
push
fiaddl
fldl2t
pop
mov
sub
or
push
int3
and
test
nop
cld
mov
mov
cmp
push
cmpl
insb
jae
out
movsb
lea
mov
popf
aaa
into
into
dec
mov
sti
push
xor
fcmovnb
aad
ja
cwtl
sub
lahf
mov
add
fnclex
lea
test
loopne
sbb
ss
mov
sbb
mov
and
or
cmp
adc
xchg
sub
loop
sub
mov
xor
xchg
insl
sub
out
pop
ss
aad
addr16
sahf
xor
or
sbb
ljmp
cltd
in
in
addl
ret
ss
lods
jmp
insb
js
xor
iret
mov
xor
sbb
js
sub
inc
push
mov
outsl
insb
data16
lret
pop
pop
in
add
cs
scas
stos
daa
fadds
in
int
shlb
push
dec
sbb
dec
insb
xlat
push
jecxz
dec
and
mov
and
popl
out
fstl
repz
jge
pushf
sbb
add
cmpsb
cmpsl
ds
int
dec
cli
lds
cmpsl
out
mov
lcall
cmp
movl
mov
xor
sub
xchg
inc
rorl
push
xor
mov
rcll
shlb
pop
loope
mov
stos
mov
mov
sti
andl
pop
dec
xor
mov
mov
push
and
leave
in
mov
lods
cltd
mov
push
sbb
outsb
cmpsl
stc
xor
fwait
enter
test
lods
js
ret
adc
rclb
adcl
push
push
and
mov
lock
mov
and
loop
jmp
mov
cmpsb
xchg
dec
dec
loopne
jnp
xlat
mov
cltd
mov
inc
stos
jbe
stc
jmp
adc
xchg
add
shrl
inc
xchg
jle
aam
jl
sub
xchg
adc
dec
scas
sti
cmp
nop
mov
es
in
mov
fidivrl
ja
cmpsl
push
mov
adc
mov
jge
xchg
push
xchg
xor
mov
inc
add
test
xchg
adcl
out
cltd
std
jle
fwait
xlat
lock
std
push
jle
sub
sbb
push
js
jno
xor
jb
and
fs
add
mov
mov
and
pop
orb
js
pushf
jae
xchg
aaa
push
add
xchg
lahf
and
fstpl
jne
pop
lret
mov
stos
icebp
popa
shlb
mov
pop
jp
mov
xchg
adc
fisubs
sub
aas
sbb
cmp
jae
icebp
dec
xchg
sti
lret
xor
in
test
push
je
andl
mov
sbb
popa
out
cmp
out
aaa
scas
imul
xchg
shl
add
lds
jb
rcll
imul
push
test
mulb
loope
shlb
loopne
xor
mov
pop
dec
push
jno
mov
rorl
rcrb
mov
aad
cltd
mov
adc
sub
xchg
mov
pushf
sbb
jns
cmpsl
loop
fldcw
mov
mov
sahf
push
stc
inc
dec
push
xor
leave
hlt
dec
adc
sbb
insl
inc
add
mov
fistpll
fidivrl
mov
lea
xor
push
gs
cmp
jle
adc
jno
xor
lret
mov
dec
nop
mov
adc
cli
popa
jns
mov
enter
pusha
or
jle
test
xchg
push
fidivl
les
es
or
je
iret
int
sub
and
das
add
hlt
sub
lds
add
scas
and
mov
xchg
in
popf
in
mov
pop
mov
mov
jle
imul
rolb
inc
xor
jl
adc
in
sarb
or
fwait
scas
sub
mov
jno
out
sbb
loopne
and
dec
in
sbbl
je
jns
pop
mov
dec
mov
lods
inc
mov
sarb
inc
mov
xor
pusha
in
call
sti
ds
outsl
or
lods
pop
dec
mov
dec
sbb
shl
xchg
mov
add
sub
cmp
jns
cmpsb
or
sub
mul
enter
orb
xchg
scas
into
fsubr
or
shlb
add
push
adc
mov
cs
incl
sti
outsb
mov
sbb
clc
dec
into
inc
push
mov
xchg
icebp
mov
cltd
cmp
and
loop
scas
inc
inc
pop
cmp
sub
pop
mov
out
int3
push
call
mov
repnz
ja
orb
add
cmpl
or
cmc
or
and
inc
scas
add
fidivs
cs
xchg
ret
pop
jl
and
mov
add
jl
mov
jg
lods
mov
dec
cli
mov
or
lret
xlat
sub
or
dec
fstp
movsb
orb
iret
cld
xchg
add
lahf
stos
sahf
cmp
pop
pop
and
or
xchg
sub
cmpsl
out
jle
or
push
popf
jbe
repnz
adc
fs
add
popf
mov
shrl
cmp
imul
test
lea
fisubrl
and
mov
popa
dec
test
or
pop
cmp
jae
clc
fimuls
cli
pop
inc
mov
sbb
popf
mov
rolb
int
aaa
cmp
andl
sbb
int
add
fstpt
lahf
pop
cmp
cmpsl
mov
adc
jp
and
and
push
inc
int3
jno
mov
xor
push
ret
icebp
sub
push
jmp
lcall
add
rol
pushf
mov
into
pushf
lods
mov
movsb
sbbl
lea
adc
fisttps
mov
mov
cmp
push
test
pop
jne
fwait
cmpsl
out
dec
pop
lahf
dec
sbb
ds
popf
scas
xchg
pushf
repnz
push
mov
dec
jl
ds
cmp
ret
pop
mov
or
cs
sbb
rcrl
inc
fdivl
push
fucomip
fstps
lods
mov
int3
int
cltd
push
push
clc
outsl
inc
cmpsb
into
loop
cmp
jnp
test
inc
mov
sbb
or
enter
decb
aaa
pop
cmp
push
std
into
insl
fsubrl
ret
fnstsw
cwtl
dec
movsb
inc
cmp
mov
iret
sbb
scas
int
mov
clc
sbb
sti
jg
sub
pop
fcomip
adc
ret
in
adc
or
in
cmp
sub
push
ds
ffree
dec
inc
xor
mov
insb
pop
mov
sahf
jecxz
and
pop
jmp
add
call
loopne
xchg
inc
sub
stc
mov
adc
ss
std
xchg
daa
stos
hlt
pop
jno
sahf
mov
ret
and
and
mov
insl
adc
ret
inc
or
inc
popf
loopne
mov
mov
fs
jle
pop
or
enter
stos
jns
pop
pop
lahf
out
cmp
das
mov
add
inc
xlat
shlb
xchg
repz
and
adc
mov
iret
loope
int3
arpl
mov
sahf
lret
pop
in
mov
pushf
repz
jne
das
xor
mov
xlat
ror
push
lock
adc
inc
stc
flds
popf
cmpb
pop
stos
sahf
push
xor
pop
pop
mov
or
jecxz,pt
insl
pop
scas
pop
out
jp
jnp
mov
xchg
add
lret
add
push
sbb
mov
outsb
sbb
std
xchg
adc
int3
lret
cmpsl
ja
fdivp
inc
dec
adc
jp
mov
inc
fsubs
add
sbb
and
jbe
mov
sub
dec
jecxz
in
pop
mov
xchg
jl
popf
mov
sbb
xor
push
xor
inc
cmpsb
mov
add
scas
xchg
mov
into
adc
test
int3
dec
pop
mov
push
cmp
jmp
or
sub
sti
sbbl
xor
inc
push
lods
sti
decb
iret
sahf
leave
mov
cmc
pushf
lea
mov
fcoml
mov
fcoms
push
int
stos
jno
add
mov
das
jge
mov
jp
pop
out
movsb
testb
cmpb
push
in
jl
dec
jno
loop
jl
stos
sbbb
xchg
clc
mov
gs
jl
mov
cmp
and
jle
jle
sub
fldcw
cmp
imul
xor
and
mov
jg
inc
push
adc
jae
cld
in
loope
ret
push
jg
cmp
sbb
aas
loopne
ja
ds
pop
arpl
mov
les
jp
pop
into
in
in
xor
xchg
bound
in
cmc
in
pushf
cwtl
pop
out
push
sbbl
add
cmpsl
test
jle
jns
arpl
add
movsb
push
repz
rorl
ret
mov
lret
jns
mov
movl
push
repnz
fldenv
inc
or
pushf
inc
cwtl
shrb
out
jns
cwtl
xor
pop
and
lea
popa
fisttpl
call
adc
inc
inc
dec
in
popa
lods
mov
fisttpl
movsb
add
jne
lds
or
push
and
lcall
jne
mov
xlat
fnstenv
rorl
xchg
mov
jb
ret
jmp
lret
inc
push
mov
sbb
outsb
stc
adc
xchg
inc
xor
ljmp
cmp
in
arpl
into
dec
lock
cs
xor
js
and
mov
mov
sbb
cmp
stc
nop
dec
popa
pop
shr
scas
pop
xor
cmpsl
mov
xchg
ljmp
je
loopne
das
adc
mov
iret
scas
adc
xchg
cmp
leave
fisttpll
add
hlt
mov
int3
or
rcr
mov
cmpsb
mov
and
prefetchw
outsl
jge
shll
out
in
adc
xor
inc
jmp
adc
jbe
fimull
xchg
xchg
or
cs
lahf
fmuls
call
mov
inc
adc
lds
sahf
ja
push
cmpsl
inc
xlat
pushf
sub
fidivl
in
xor
or
pop
lahf
sub
push
stos
cltd
lods
sbb
mov
fidivl
mov
lods
in
sub
or
cwtl
adc
sub
push
ss
jbe
dec
fisttps
fbstp
push
jecxz
inc
cmpsb
add
addr16
xchg
pop
inc
int
mov
aas
cmpsl
gs
lods
into
adc
push
outsl
sti
adc
push
int3
movsb
enter
jl
sub
xchg
loopne
das
cmp
sbb
sub
into
popa
cmp
sbbl
inc
ficoms
or
in
sbb
mov
mov
cmp
mull
dec
shl
js
insb
leave
outsl
popf
in
or
mov
lret
mov
out
sub
xchg
cmp
enter
outsl
insb
test
sbb
dec
xchg
not
push
sbb
repnz
dec
sub
dec
popf
mov
push
push
jo
mov
and
adc
jmp
adc
push
push
add
jle
mov
int3
arpl
inc
ljmp
cmp
mov
and
cmp
addl
push
jg
inc
xor
cld
in
arpl
testl
decb
aas
cld
xchg
add
pop
insl
and
mov
les
xchg
enter
adc
jae
mov
int3
leave
inc
pop
clc
sub
sbb
insb
fldenv
iret
or
addr16
aas
inc
cli
data16
sub
rcrb
dec
mov
push
mov
sub
add
mov
pop
jecxz
roll
std
mov
and
inc
fisttpll
dec
mov
sbb
int3
sbb
test
cmp
aad
xor
out
mov
pop
or
ret
shl
cmpsb
popf
lods
xchg
mulb
ja
cmp
mov
adc
aaa
dec
jp
mov
lret
inc
push
jp
jnp
dec
sub
or
aas
stos
mov
push
loope
inc
mov
and
nop
mov
xor
mov
xor
mov
and
std
loopne
dec
in
add
jl
int3
lcall
sub
aas
xor
cmp
roll
scas
sbb
ret
sbbl
aaa
xchg
cmpsl
aad
loop
outsb
leave
in
adc
xchg
fdivl
sub
adc
push
leave
jecxz
jnp
push
jmp
jno
out
mov
sub
push
lret
add
and
lock
loope
cmp
cmp
inc
fcoms
pop
inc
and
pop
cmp
test
adc
insl
sbb
xor
mov
or
iret
outsl
inc
jle
jo
in
sbb
or
sub
or
js
mov
lods
int3
rcrb
loope
adc
adc
gs
inc
stos
jle
popa
pop
and
orb
add
mov
insb
sub
or
stos
push
xchg
jmp
arpl
push
dec
adc
dec
lret
mov
sub
push
add
dec
das
jb
jb
test
cmp
int3
call
mov
aam
dec
sbb
dec
push
lcall
call
mov
cwtl
aam
jge
clc
dec
pop
sarb
mov
jl
mov
mov
or
mov
rcll
xchg
cmp
mov
pusha
cmpsl
outsb
adc
pop
hlt
push
repz
jae
stos
and
mov
outsl
xchg
mov
or
daa
or
mov
sbb
rcll
ja
rol
inc
cmc
aaa
jae
cmpsl
fcoml
out
cld
cmp
daa
incl
xor
scas
icebp
loope
or
jae
shrl
jle
sbb
mov
adc
mov
xchg
repz
pop
pop
testl
mov
ror
bound
push
jmp
inc
inc
insl
add
xlat
pushf
xor
mov
popa
xchg
xor
push
jmp
stc
test
push
xchg
test
test
sbb
cmp
push
inc
adc
mov
js
jg
unpckhps
ljmp
pop
imul
add
xor
jae
sbb
in
gs
cmp
in
xorl
sbb
les
xchg
dec
mov
loopne
and
xchg
xlat
imul
push
leave
pusha
xchg
mov
mov
fsubr
imul
pop
jo
test
fmuls
insl
xor
mov
lcall
popl
jmp
les
int
inc
push
and
add
jns
imulb
xchg
arpl
jo
inc
je
mov
fmul
std
or
xchg
mov
fs
mov
adc
sbb
ja
in
repnz
cmpsb
ss
or
stos
xchg
or
dec
pop
int3
iret
inc
out
scas
sub
xchg
mov
cmc
mov
scas
xchg
sbb
cmpsb
inc
and
push
sub
jle
mov
jecxz
clc
andl
sbb
dec
aas
and
mov
or
inc
jmp
inc
cmp
mov
shrb
popl
sbb
fucomi
and
dec
mov
sahf
cltd
cmpsl
cmpsl
xchg
pusha
cmp
cmp
test
cmp
push
dec
sbb
shll
sub
data16
push
loopne
mov
push
sbb
test
std
fstpl
push
add
out
mov
pushf
sub
je
mov
xchg
xchg
mov
mov
xchg
in
aam
divb
mov
fldl
out
jae
movsb
in
xchg
jne
mov
test
adc
fdivs
stos
jmp
fnstenv
lret
decb
or
and
mov
push
push
or
divl
stos
and
dec
cltd
lods
inc
xchg
pop
add
cld
insb
imul
pop
mov
cld
cwtl
mov
pop
mov
pop
push
cmc
xchg
out
mov
jo
movsl
mov
ret
sub
mov
fsubrp
cli
adc
push
call
sahf
imul
mov
xchg
sbb
add
movsl
xor
and
pushf
int3
and
jns
aas
jecxz
cmpsl
push
sbb
movsb
mov
out
icebp
mov
jle
loope
dec
and
add
int3
add
mov
fs
test
inc
cmp
sti
cltd
cmpsl
fsubl
jns
je
clc
test
fisttpll
mov
cli
xlat
push
insl
cmp
dec
jmp
insl
jge
or
jb
xchg
cmp
jae
andb
add
dec
or
call
mov
add
enter
mov
js
lret
xor
inc
fistpl
mov
lds
out
mov
push
sbb
in
popf
stc
popa
clc
ss
mov
jle
push
xchg
adc
cmpsb
in
sbb
adc
jae
cwtl
lods
add
jle
loop
cmp
aaa
rcr
addb
aas
xchg
sbb
clc
mov
sub
orl
cmp
lds
sbb
ss
xlat
push
cs
or
in
aad
cmp
or
mov
gs
and
rcrb
mov
xor
xlat
outsb
cld
pop
dec
std
sub
lds
xlat
push
aas
fisubs
test
cmp
sti
xchg
mov
ljmp
pop
push
int3
dec
ret
outsb
cmp
fimull
pop
test
hlt
sub
mov
xlat
push
jge
jae
into
jns
add
mov
pop
out
stc
inc
push
loopne
xchg
add
or
cs
insb
scas
xor
call
int
movsl
pop
inc
in
out
mov
aaa
jmp
cmp
pop
jmp
mov
repz
cli
pop
fisubrs
pop
call
jns
sub
xchg
fistps
and
outsb
dec
or
clc
mov
xchg
inc
jnp
scas
mov
push
inc
add
fcomi
adc
cli
jb
movsb
cmp
test
dec
cltd
cmp
push
stos
mov
cmpsl
jg
adc
std
inc
mov
dec
ds
dec
dec
cmpsb
ss
addl
rclb
mov
xchg
mov
sbb
lret
enter
popa
stos
mov
or
sbb
fucomi
cltd
xor
subl
js
in
cltd
sti
pop
lret
imul
jle
mov
les
add
push
fdivl
aad
xchg
mov
sub
aas
mov
cs
insl
cmp
les
bound
outsl
fildl
xchg
add
push
adc
gs
mov
inc
cwtl
pop
nop
divl
pop
add
dec
cld
pop
push
jmp
dec
sti
les
stos
divl
lock
rolb
mov
lock
mov
stos
hlt
mov
jmp
xor
fistps
out
xchg
popf
and
and
stos
mov
clc
sub
in
adc
arpl
dec
mov
mov
pushf
nop
push
into
inc
popl
mov
lea
push
fnsave
mov
scas
mov
push
sbb
lods
enter
xchg
xchg
dec
mov
sbb
pop
dec
mov
stos
inc
mov
pop
shld
add
aaa
into
push
cli
sbb
sub
mov
cwtl
stc
setp
lahf
dec
aad
xchg
jge
fisubrs
push
sub
inc
insl
add
adc
mov
mov
push
clc
sarl
mov
pusha
pop
dec
icebp
sub
das
and
or
stos
mov
push
pop
enter
add
shl
pop
repz
mov
daa
add
jns
adc
scas
nop
and
xor
inc
data16
stos
inc
sub
mov
cmp
cltd
insb
jle
pop
mov
gs
in
sti
lea
jb
push
xor
adc
push
add
sbb
mov
mov
jle
das
mov
sarb
fnstsw
xor
scas
xchg
shrb
inc
push
cmp
mov
dec
ficompl
fidivl
and
rcr
mov
add
scas
push
or
out
jbe
cmpsl
lahf
pop
mov
push
jmp
mov
bound
aaa
add
outsl
and
dec
jae
xchg
scas
sahf
mov
movsl
ret
adc
or
pop
lock
ljmp
mov
inc
mov
mov
jle
mov
mov
daa
leave
jns
xor
int3
js
pusha
adc
mov
push
roll
inc
fstpt
fwait
leave
push
jmp
fisubrs
sub
hlt
lret
fbld
je
int3
dec
cmpsl
ret
jbe
test
push
add
imul
fimull
xchg
jmp
push
sub
out
xchg
movsl
jmp
test
test
push
sbb
fdivp
mov
dec
fbstp
fbstp
mov
xchg
outsb
lods
std
xchg
and
xchg
fisubs
xchg
adc
and
dec
mov
leave
sti
andl
jle
outsb
jp
sub
rcrl
lods
inc
aam
mov
mov
mov
xor
mov
mov
cs
lahf
push
lret
pop
ds
or
sbbl
mov
cwtl
enter
add
mov
out
outsl
inc
pushf
or
fs
filds
movsb
mov
out
or
push
mov
push
aad
test
ja
sub
movsb
add
daa
out
pop
stos
in
fdivs
es
cmpsl
lcall
jno
sti
out
mov
js
mov
add
or
cltd
scas
cmp
pop
pop
sbb
test
push
test
dec
fisubs
dec
ss
into
out
adcb
loopne
mov
xor
loope
mov
std
ficompl
lret
aas
adc
cli
mov
popf
xchg
nop
pop
shl
or
mov
mov
pushf
scas
mov
scas
test
orl
outsl
xchg
jnp
in
stc
loope
add
xor
jl
call
adc
adc
mov
mov
jns
hlt
iret
fcom
jecxz
imul
test
aas
dec
adc
ss
cmp
int3
addr16
outsb
test
mov
mov
cmpsb
fwait
daa
roll
outsb
push
je
pop
push
fcoms
js
stos
ret
lret
mov
mov
add
mov
movsb
adc
jl
inc
add
outsb
dec
adc
rorl
scas
movsl
cli
pop
test
das
arpl
inc
pop
rcrl
or
daa
fbstp
lcall
ret
push
in
xor
mov
test
pop
lret
jecxz
mov
cmp
pop
stc
popa
js
sbb
scas
push
std
cltd
push
rcrb
ret
and
sbb
outsb
cs
outsl
sahf
out
popa
pusha
or
mov
mov
data16
into
xchg
mov
add
lcall
mov
scas
or
iret
es
dec
dec
lods
fidivrs
push
push
dec
add
out
jp
cmp
or
push
scas
cmp
inc
jbe
sub
cmp
mov
movsb
loope
xchg
call
xchg
ja
cmp
inc
sub
loopne
or
jp
jle
jbe
sub
xorl
jp
lret
add
dec
out
hlt
lods
inc
or
inc
mov
and
mov
jle
pop
xchg
inc
or
js
mov
not
negb
lock
aaa
rclb
sub
dec
mov
adcl
xchg
jecxz
repnz
test
mov
and
inc
add
es
fdivrs
adc
inc
idivl
loopne
push
sbb
cmp
cmp
push
jl
aaa
inc
hlt
and
adcb
mov
mov
inc
hlt
push
jmp
and
fwait
in
addr16
xchg
sarl
roll
xchg
fnstenv
jecxz
lret
lret
arpl
push
adc
xchg
in
xchg
adc
insl
sbb
jp
call
ret
pop
lods
in
push
sarl
out
jnp
pusha
nop
pop
adc
push
mov
pop
xor
mov
mov
xchg
xchg
loop
leave
mov
cs
repnz
aam
cmpsb
cmp
xchg
xchg
les
in
inc
pop
sub
mov
xchg
ja
jp
mov
cltd
push
shrb
shr
gs
sub
xchg
jae
cwtl
daa
dec
rcl
imul
test
xor
fcmovnb
mov
xorl
mov
movsl
cmp
iret
in
outsb
ret
sbb
jno
adcl
outsb
add
int
mov
divl
xchg
mov
push
mov
push
bound
add
lret
or
dec
pop
inc
rcll
cmc
lea
das
cmp
mov
arpl
lcall
push
rcrb
xchg
mov
loope
push
cs
mov
mov
mov
and
into
inc
mov
clc
mov
fnstsw
leave
scas
mov
outsb
in
popa
clc
sbb
push
testb
out
cld
xchg
roll
xchg
stos
cs
mov
movsb
xchg
sub
dec
notl
jae
push
inc
std
sbb
add
push
or
stc
int3
jp
pop
jb
xlat
xchg
dec
daa
inc
stos
cld
call
cmpsl
mov
or
xor
cmpsl
dec
xlat
pop
sub
push
fistpll
lods
sub
fdivs
inc
fisubs
xor
popa
inc
sbb
enter
xchg
fisubrs
mov
fsts
scas
std
pop
mov
xchg
or
jge
ret
pop
shrb
out
sub
push
loop
inc
movsb
push
scas
add
mov
sbb
jno
inc
jae
xchg
adcb
sbb
sahf
rcll
fcomps
scas
pop
std
or
aaa
lods
and
pusha
dec
lcall
in
test
aaa
imull
mov
or
mov
jb
add
mov
push
mov
push
dec
and
out
mov
movsb
std
enter
cld
shlb
lahf
lret
jl
clc
sub
andl
dec
jnp
les
std
or
jno
xor
xor
inc
stos
mov
fimuls
mov
jl
mov
xor
mov
fidivrl
iret
or
mov
test
int
pop
leave
fsubrs
jbe
scas
push
xchg
insl
jl
je
int
gs
push
arpl
lock
xor
cld
xchg
mov
inc
jmp
pop
movsl
ljmp
xor
sub
scas
inc
pop
add
popf
mov
rcr
cmpsb
lods
and
fcomps
fdivrl
mov
stos
pusha
and
jae
mov
xor
sbb
movl
sub
lea
shll
jne
push
popa
pop
out
dec
fidivl
call
dec
or
inc
outsb
in
daa
jmp
cmp
add
mov
xchg
and
mov
ret
xchg
jb
repz
aam
mov
clc
xor
lock
cmp
cli
jb
loope
and
repnz
mov
jne
jno
add
inc
adc
jb
pop
or
mov
insb
sub
adc
ss
jne
push
jmp
cmpb
mov
adcb
sti
mov
or
push
cmp
pop
scas
sub
dec
dec
out
iret
mov
fcmovnbe
hlt
lea
lret
mov
es
adc
sbb
into
cwtl
icebp
int
mov
imulb
inc
leave
jmp
and
rsm
js
pop
and
stos
xchg
mov
dec
in
sbb
mov
cmp
mov
movsb
mov
push
inc
jg
ss
inc
dec
xlat
stc
in
in
push
and
xchg
push
and
lret
ja
cmpsb
mov
fdiv
insb
xchg
stos
sbb
add
and
rcll
add
stc
xchg
out
cmp
add
inc
stos
lea
xor
daa
sbbl
je
cmc
adc
mov
das
xchg
push
add
insb
jp
and
movsb
sub
push
repnz
jne
push
cmpsb
js
sbb
pop
jmp
or
cmp
mov
push
inc
gs
lret
jae
mov
imul
stc
roll
movsl
or
dec
sub
pusha
decb
adc
notl
cmp
dec
cld
xchg
je
inc
pop
pop
xor
mov
jno
cs
loope
int3
jl
cmp
insb
push
fwait
mov
ficompl
ja
xor
jne
jns
pop
and
jp
icebp
xchg
jmp
mov
mov
adc
inc
inc
pop
cmp
call
adc
sahf
xchg
mov
movsb
push
rorl
fldt
push
sub
add
ljmp
pop
ss
cmpsb
or
pop
jecxz
aam
sub
or
mov
xor
lods
movsl
mov
fistpl
pop
cmp
pop
loope
or
cmc
adc
jno
test
ret
or
cmpb
movsb
lock
and
push
idivb
insl
push
jmp
jmp
push
out
sbb
mov
or
xor
je
mov
cmpsl
lahf
in
xchg
push
push
xor
test
aas
fsubs
mov
cmpsl
xor
mov
sub
sub
or
inc
fistpll
testl
mov
or
aad
dec
sbb
push
push
ret
xor
icebp
shll
outsb
add
mov
mov
jle
dec
scas
push
mov
adc
rclb
mov
popa
dec
loopne
call
leave
fcomps
test
nop
lea
ret
jl
and
sahf
sub
adc
and
cmp
mov
mov
xor
daa
xor
pop
pop
ret
jp
xchg
iret
push
aam
mov
mov
xlat
in
push
insb
aaa
sub
cwtl
xchg
fstl
and
leave
xchg
lods
stos
inc
fs
cld
xchg
gs
cwtl
pop
cmpsb
jg
xor
pop
xchg
pop
adc
and
push
pop
pop
test
add
mov
mov
ds
inc
movsb
scas
je,pt
pushf
inc
jecxz
add
insb
jle
and
mov
shr
les
add
inc
sbb
aas
shr
in
lods
inc
dec
adc
cli
frstor
xchg
jae
test
loopne
ja
xor
test
adc
sahf
scas
adc
fldl
or
add
cmp
es
rcll
mov
and
movsl
or
xlat
mov
lahf
mov
es
pop
lods
lods
js
inc
fwait
in
int3
add
fisubrs
mov
movsb
mov
in
es
inc
nop
cmpsb
scas
mov
out
and
inc
lahf
jnp
push
out
jmp
out
ljmp
andl
imul
and
dec
or
dec
push
mov
imul
aad
xchg
cmpsb
loopne
add
daa
mov
adc
insb
mov
sub
jp
stos
xchg
add
sbb
outsb
sub
out
lahf
and
aaa
test
xor
fmuls
dec
pop
lods
test
rol
push
push
subl
dec
bound
and
jo
xor
dec
pop
test
iret
inc
scas
xchg
fisubrl
outsl
sbb
xor
iret
jns
jp
outsb
out
inc
xchg
cwtl
sbb
mov
mov
dec
loopne
enter
dec
fisttps
adc
cmp
push
lea
inc
aam
fisubs
jp
fistpl
pop
dec
jae
xchg
sbb
out
mov
pop
sub
icebp
into
sub
stos
lret
repz
inc
imul
mov
cwtl
and
sti
lahf
lods
dec
stc
sbb
mov
push
shll
js
mov
dec
les
jp
std
aam
dec
jo
pop
cli
in
test
enter
inc
fdivr
js
xchg
cltd
je
inc
jns
outsl
stos
jne
aaa
sti
inc
imul
mov
test
insb
mov
fnstcw
decl
fisubrl
inc
insb
jb
out
sti
or
jbe
mov
mov
scas
nop
popa
clc
rcr
adc
push
sub
pop
pop
gs
fdivrl
rorb
outsl
call
lea
test
mov
mov
test
mov
mov
xor
jno
pop
cmc
mov
std
xchg
mov
cmp
mov
adc
mov
push
cmp
or
adc
out
sbb
movsb
out
pop
sbb
aas
dec
repnz
mov
mov
push
fidivrl
mov
push
mov
push
arpl
imul
and
addr16
pop
jg
and
mov
daa
sbbb
xchg
mov
mov
lahf
sbb
roll
cs
or
jo
addr16
xor
push
std
mov
out
push
popf
frstor
pushf
mov
mov
push
pop
nop
call
mov
pop
mov
inc
inc
in
call
or
xor
movsb
js
xchg
mov
add
and
cmp
pop
jmp
pop
dec
pop
mov
ljmp
hlt
or
daa
fsts
pop
pushf
or
or
sub
aad
mov
rclb
push
addr16
xchg
xor
jmp
push
je
cmpsl
mov
aam
sub
jge
cmp
or
mov
not
rclb
and
dec
or
jbe
outsb
mov
push
shr
xchg
pop
inc
sahf
mov
sbb
sbb
mov
push
mov
push
xchg
push
and
mov
cld
aaa
and
sub
ljmp
cld
shlb
dec
rcrb
add
jbe
insb
out
sbb
sbb
nop
lods
inc
dec
add
gs
cmp
loope
in
jnp
mov
test
movl
clc
and
repz
notl
jle
xor
and
mov
fimull
inc
xchg
cmpsl
rorl
sbb
sub
jl
andl
stos
add
call
cmpsb
aaa
rclb
in
or
pop
shrl
stos
jge
test
pop
ffreep
lret
movsl
jno
cmp
mov
shll
dec
jne
mov
mov
add
mov
push
cmp
fsub
test
jne
add
ljmp
pushf
sbb
enter
sbb
push
cld
xlat
xchg
or
test
pop
push
inc
shrl
fs
mov
push
lods
scas
ljmp
adc
stos
repnz
add
test
cmpsb
mov
fadds
test
xchg
xor
les
in
addr16
in
xchg
mov
dec
fsubrs
push
lods
rcll
testl
movsl
adc
add
mov
adc
jne
push
inc
shl
jl
and
jnp
cmp
add
cmc
cltd
lds
jmp
enter
lcall
inc
or
push
cmp
ja
pop
out
sbb
not
lods
dec
add
stos
es
cs
sbb
mov
inc
pop
imulb
push
cmc
scas
inc
daa
jb
or
lea
int3
mov
icebp
push
outsw
sbb
mov
sub
mov
ds
dec
mov
and
push
or
cld
movsb
pushf
ss
sbb
push
inc
sahf
aas
into
sbb
addb
rcrb
pop
mov
arpl
cmp
dec
lcall
mov
and
cmp
shr
fstps
mov
aad
int
in
adc
enter
sub
test
and
test
out
in
ficoml
inc
repz
outsb
loopne
stos
jbe
mov
adc
xchg
sub
popf
popf
lds
lods
inc
ror
dec
xor
lret
call
xor
je
das
inc
push
ljmp
insb
jle
push
daa
ror
push
mov
dec
push
dec
mov
pop
mov
or
or
adc
aad
mov
xlat
xchg
cmp
mov
dec
icebp
add
add
bound
mov
pop
dec
sbb
cmp
out
jecxz
lret
add
cli
mov
sti
add
mov
bound
xor
lods
add
cli
mov
out
repz
add
jp
push
fistps
sbb
sub
xor
movsl
push
jbe
cmp
and
cmp
add
hlt
push
fnsave
pop
pop
loope
mov
push
pop
imul
mov
jnp
es
pop
adc
jp
or
xlat
mov
add
mov
mov
test
imul
dec
cmpsb
cmp
push
lds
in
sub
or
inc
mov
loopne
repnz
sub
enter
jns
ret
sbb
mull
jmp
orb
pushw
or
xor
data16
out
mov
fucomp
jle
adc
out
cmpsl
daa
dec
pusha
inc
pop
hlt
jno
jns
inc
sbb
mov
aad
sbb
mov
aas
jmp
pop
fidivs
mov
lock
fistpll
add
mov
pop
stos
lods
lcall
popa
jg
mov
je
call
push
mov
sub
or
sbb
push
iret
sub
stos
jle
or
cld
jmp
sbb
subb
fwait
mov
cmp
hlt
or
lods
sbb
or
inc
das
addr16
mov
adc
jne
mov
mov
or
inc
les
sub
add
hlt
inc
jbe
out
test
cwtl
and
inc
mov
xor
arpl
add
lds
cltd
pop
scas
xchg
rcrb
mov
movsb
mov
out
xor
mov
sub
adc
in
es
fwait
jg
jl
mov
add
pushf
test
iret
cmpsb
cltd
jno
pop
mov
lods
cmp
cmpsl
test
push
mov
lds
mov
hlt
rcrb
jp
xchg
mov
lret
ja
cmp
or
mov
aas
adc
xchg
mov
pop
jne
pop
sub
and
sti
pushf
xor
cltd
aas
rclb
jb
jae
mov
push
lods
xor
addr16
push
jmp
call
jb
out
gs
and
adcb
rorl
cmp
mov
ds
fwait
data16
sbb
cmpsl
or
cmp
ds
jp
adcl
pop
sarb
mov
inc
add
xor
pop
push
test
nop
popa
dec
jecxz
dec
test
cmp
in
repnz
scas
xchg
inc
adc
out
aam
and
jne
xchg
xchg
mov
aas
dec
xor
outsl
ret
cmpsl
testb
add
enter
mov
mov
add
fsubrs
fsubrl
cwtl
lods
pop
adc
mov
lods
test
in
idivl
rcrb
mov
ror
push
out
aam
cltd
xor
int3
mov
cld
popf
sub
clc
stc
nop
sub
xchg
movsb
dec
pop
scas
jl
or
cmp
jne
loop
fstps
push
xor
pusha
cmp
inc
ficoml
or
popa
inc
lods
fistl
xor
pop
dec
das
dec
jge
cmp
imul
mov
push
movsb
mov
inc
stos
mov
push
xchg
popf
insb
and
movsl
lea
sub
fiadds
mov
idivb
hlt
sbb
mov
stos
cmpsb
test
cmp
jmp
pop
lret
cltd
push
das
lds
std
xchg
pop
mov
int
cmpsl
pop
dec
sarl
call
pop
jb
inc
jge
push
idiv
sub
cmp
enter
or
jb
lods
cmpsb
and
fmul
dec
xor
fcomps
repnz
and
lahf
cmc
or
adc
jl
mov
mov
stc
rcl
xor
and
loopne
and
sbb
popf
das
dec
pop
setns
inc
insb
jle
sbb
shrl
mov
lods
ret
push
fs
rclb
imul
or
sbb
or
arpl
popa
xor
aas
jne
pop
push
cmpb
jecxz
test
fisttpl
data16
bound
popl
add
sti
inc
cmp
cli
xchg
fs
fidivrs
rcr
cmp
aad
les
lahf
aad
mov
into
or
mov
js
cmc
mov
or
mov
fsubrs
xlat
adc
cmc
cmp
ljmp
cld
mov
sub
loope
cld
ds
sub
clc
mov
xlat
xor
or
int
pop
popa
add
xchg
cwtl
call
push
fucomi
add
pop
data16
inc
push
push
cmpb
mov
lcall
outsl
mov
mov
pop
loop
stos
idiv
subb
push
jo
lods
mov
test
sahf
jns
mov
dec
adc
ja
scas
out
mov
push
call
in
lds
cmpsl
cmp
repnz
xchg
xor
lods
addb
imul
sahf
jge
xlat
and
xchg
adc
lret
aaa
pop
lock
gs
shll
xor
xor
mov
sub
jbe
adc
out
sahf
lea
ss
iret
add
mov
sub
pop
sbb
push
pop
sub
call
xor
pop
add
add
push
outsl
mov
test
cmp
je
lods
mov
insl
repnz
or
out
jnp
aam
call
shrl
xor
xor
lods
xor
das
je
fidivs
shr
mov
mov
cld
lcall
push
das
push
lcall
sbb
fwait
mov
pop
insb
je
mov
lcall
je
outsb
add
pop
rorb
xorb
jno
jnp
adc
inc
sub
jge
cwtl
mov
lcall
pop
or
roll
inc
fxch
mov
pop
popl
dec
int
aaa
push
aas
movsb
repnz
mov
xlat
gs
or
cmp
fisubrl
dec
loope
sub
or
cld
add
lds
test
pop
out
aaa
jnp
leave
mov
and
xchg
jp
sbb
fcmovbe
pop
rclb
loop
jbe
jne
adc
std
or
push
pop
or
adc
js
das
cmp
loopne
add
mov
adc
adc
adc
fldz
and
sub
inc
mov
imul
inc
pop
outsb
stos
mov
shl
cltd
sub
jne
fwait
imul
ds
adc
repnz
cli
xchg
adc
xchg
push
addr16
adc
mov
and
add
es
daa
pop
leave
sub
repz
fwait
xchg
xor
inc
xorb
in
lods
test
jne
imul
stos
aam
subb
shrl
cmp
mov
push
std
xchg
pop
xchg
xchg
ret
in
jecxz
js
and
pop
cli
fbstp
mov
sbb
xchg
jle
ror
or
pushf
mov
enter
movsb
stc
test
mov
sub
cwtl
pop
xorl
add
xor
ret
jae
mov
push
sub
xor
lea
jmp
xchg
mov
jl
lret
mov
int
into
pop
icebp
cmc
cmp
jns
inc
mov
pop
add
js
insl
pop
loope
testb
ficoml
imul
daa
scas
pop
popf
loopne
gs
roll
orl
imul
xor
push
std
fnstenv
pop
adc
not
aas
mov
movsl
lds
xchg
sahf
push
rol
push
psrlw
dec
int
outsl
push
dec
mov
adc
push
pop
dec
cmp
fwait
xor
movsb
push
fisubl
pop
fldenv
pushf
sbbb
in
nop
mov
aam
push
lcall
or
jp
cli
pushf
in
mov
lcall
std
jns
mov
out
pop
xchg
pop
inc
jl
mov
xchg
mov
xchg
fldenv
insb
ret
lret
add
cli
add
cmp
shll
sbb
outsb
cmp
daa
movsl
add
repnz
ss
adc
test
jmp
jb
cld
lcall
fucomp
pop
cmp
das
mov
ret
inc
push
inc
ficompl
aaa
mov
imul
ljmp
aad
iret
sahf
jne
cmc
das
rclb
lds
push
movl
push
fs
jecxz
std
adc
push
push
scas
inc
mov
xor
es
pushf
bound
push
subl
jge
lret
jne
add
adc
dec
pop
ret
push
jl
push
mov
nop
mov
pop
inc
adc
bound
adc
lret
push
ds
mov
sub
xchg
ss
dec
pop
lds
int
xchg
push
push
dec
xchg
in
ss
je
and
test
shlb
pop
cmpsl
xchg
icebp
scas
add
mov
adc
rorb
adc
and
push
out
mov
inc
pop
dec
adc
movsb
pop
sub
xor
rol
fdivr
xorb
pop
repnz
pop
mov
adc
es
stos
dec
or
test
pop
cmp
adc
jno
dec
jmp
sbb
addr16
sbbl
popf
pusha
fidivrl
cld
mov
outsl
lret
cmp
push
popf
mov
dec
and
jge
cmp
movsb
pop
and
mov
xchg
loopne
add
cmp
fwait
mov
rcrb
inc
push
ja
mov
rolb
push
clc
adc
mov
sarb
fimuls
out
sbbb
xor
cmp
fstpt
jb
push
cmpsl
ret
fsub
fisubrs
jmp
outsl
mov
pusha
xor
xchg
cld
mov
and
inc
push
and
push
mov
jb
bound
dec
xor
bnd
mov
es
adc
sbb
stos
imul
or
mov
stc
fidivs
inc
cli
nop
mov
cld
xorl
mov
inc
fcmovbe
ljmp
push
ror
lret
cld
mov
rcll
stos
add
fisubrs
mov
into
jno
push
and
xlat
cs
dec
pusha
clc
mov
cmpsl
xchg
mov
xor
sarb
inc
mov
sbb
dec
int
lea
jmp
push
fwait
les
push
loope
dec
push
xchg
mov
cmp
lret
in
adc
mov
xor
icebp
sub
mov
pop
jmp
out
pop
out
shrl
popf
repz
mov
or
mov
sbbl
or
mov
cmp
adcb
lock
lods
push
mov
gs
test
jne
and
rorb
popf
lds
pop
jge
lock
mull
sbb
sub
inc
ss
jae
bound
sub
fmulp
pop
push
ljmp
rcl
cmp
aam
fwait
pop
adc
and
xlat
xor
mov
push
jbe
std
addl
cli
out
jns
das
and
xor
int3
imul
cli
mov
aad
lahf
int3
mov
cmpsl
and
js
lds
and
and
pop
add
cmpsb
adc
and
adc
dec
push
test
loop
and
ljmp
fbstp
data16
xchg
fmull
shrb
cs
movsl
cmp
xor
dec
stc
mov
maxps
mov
sub
add
xor
fldenv
mov
outsl
fsubrs
sub
xor
jecxz
pop
xchg
daa
fsts
insl
rcl
divl
repz
mov
mov
pushf
ss
jae
testb
xchg
ror
fs
and
mov
push
outsl
ja
push
repz
dec
fld
aam
jno
into
in
xchg
sub
jmp
jne
lfs
push
inc
mov
clc
xlat
not
inc
pop
push
cwtl
sub
roll
add
jno
and
sahf
repz
add
inc
dec
and
test
or
insl
jno
lods
xor
loopne
mov
outsl
test
jl
ret
insb
popl
out
test
mov
ror
push
pop
mov
mov
sub
loopne
and
lcall
mov
cmp
dec
loopne
mov
dec
iret
mov
fsubrl
or
push
icebp
mov
mov
jecxz
add
pop
sub
sbb
in
jne
add
add
sub
xchg
sbb
std
mov
imul
dec
fstpt
sub
dec
mov
ss
adc
addl
mov
jg
xchg
inc
test
sbb
and
sbb
mov
out
iret
movsl
jg
fwait
and
cmc
stc
xor
and
incb
lock
imull
push
adc
loop
outsb
iret
loopne
out
pushf
pusha
sbbl
arpl
mov
adc
pushf
xchg
testb
sub
add
inc
repz
and
jmp
arpl
aad
adc
add
lds
in
xor
cmp
mov
negb
pop
imul
cmp
cmc
and
pop
repnz
push
jbe
clc
stos
mov
mov
shll
or
dec
push
stc
pop
popa
sub
js
lretw
movups
jns
mov
mov
push
popa
mov
out
mov
or
sbb
es
dec
cmp
lods
inc
andb
cld
push
fnstsw
xchg
dec
mov
loope
leave
xchg
inc
cli
xchg
fnstsw
mov
xchg
sbb
mov
scas
fcomip
or
stos
dec
xor
loopne
pop
push
stc
and
cmp
xlat
jae
mov
movsb
inc
or
add
jbe
xchg
lods
jbe
cmp
dec
adc
cli
sbb
push
jmp
cmp
out
test
add
mov
test
xor
and
add
jle
jno
add
jg
jge
lahf
dec
inc
pop
jns
sub
pop
lods
dec
add
repz
mov
ret
jge
out
outsl
rorl
cmpsl
lds
push
cmp
out
cmpsl
vaddsd
sbb
xchg
les
and
out
mov
test
andb
jp
lret
dec
mov
jmp
subl
or
fldt
cld
mov
lcall
and
pop
cmc
inc
xlat
es
sub
shrb
bswap
and
cltd
push
in
testl
jno
add
leave
adc
test
clc
blcs
test
ja
cmpsb
pushf
add
cmpsl
push
out
test
clc
js
add
mov
out
test
cltd
clc
xchg
cwtl
add
pushf
cs
xchg
test
ljmp
loope
sbb
addr16
lret
shlb
push
rorl
mov
pop
insb
ss
fldenv
icebp
dec
adc
out
sbb
inc
sub
add
pusha
push
lods
je
fst
rorb
lods
pop
popf
push
xchg
jmp
mov
inc
inc
push
cmc
cmp
dec
fyl2xp1
mov
xlat
outsb
or
movsl
mov
movsb
cmc
adc
dec
loop
daa
pop
sahf
lods
lea
js
imulb
jecxz
mov
push
mov
jmp
inc
xchg
out
mov
mov
lods
cmp
pop
mov
sub
daa
lret
or
ljmp
stos
add
push
mov
inc
add
call
mov
imul
jno
mov
inc
xchg
mov
xchg
lcall
adc
shll
lock
repnz
movsl
cld
leave
fsubs
int3
int
call
ja
push
jmp
cwtl
sti
pop
hlt
adc
push
cs
xchg
pop
je
lods
xor
or
adc
pop
mov
pop
jl
xchg
aaa
into
fildl
dec
xchg
xchg
lock
daa
xchg
in
test
outsl
mov
daa
add
cmp
jno
pushf
bnd
push
fstl
adc
fdiv
pushf
mov
lea
fcomip
inc
sbb
cld
jbe
aas
das
ss
lods
lds
pop
insb
icebp
dec
cmp
mov
adc
int3
aas
rcr
dec
add
cmpsl
add
test
and
stos
enter
pop
jo
arpl
pop
xchg
scas
or
rclb
mov
fs
or
ss
mov
bound
repnz
pop
mov
push
add
sarl
inc
jns
sbb
lcall
sub
inc
aam
data16
es
stc
jg
cli
es
rorl
sbb
loop
ja
adcb
mov
leave
fisubl
mov
shrl
fistpl
addl
or
mov
add
loope,pt
and
dec
cld
push
mov
dec
in
push
push
push
cmc
sahf
push
lds
sbb
sbb
mov
pop
fwait
in
adc
hlt
js
ljmp
pop
adc
sahf
dec
xchg
gs
xor
ss
jo
scas
push
push
scas
add
pop
mov
sbb
add
jl
shrb
decl
mov
hlt
xchg
shll
lahf
idivl
int3
dec
gs
fwait
out
int
xsha1
cmpsb
dec
in
dec
fwait
ds
inc
jecxz
fists
mov
mov
mov
sti
adc
es
cmp
addb
imull
pushf
call
imul
gs
test
or
xchg
je
addr16
jbe
add
jnp
inc
sbb
add
sub
and
mov
into
fsubr
lock
cli
jmp
stos
or
divb
icebp
adc
cmp
push
mov
mov
lret
jecxz
outsl
push
add
mov
add
sti
les
mov
mov
sbb
imul
xchg
stc
lea
shlb
push
lcall
sub
cmp
jnp
stos
push
adc
iret
je
insb
or
test
roll
lahf
and
sahf
fadd
add
mov
jmp
inc
mov
arpl
inc
sahf
icebp
xchg
icebp
mov
or
popa
dec
daa
cmp
or
in
and
bound
mov
lcall
mov
lock
xor
in
mov
hlt
push
adc
push
dec
icebp
rcrl
and
mov
orb
movsb
mov
and
pushl
les
xor
xor
insl
out
push
xor
push
lods
pop
insb
fiadds
minps
jo
shll
roll
adc
pop
insl
inc
inc
xlat
outsl
mov
pushf
cwtl
cmovnp
xlat
mov
adcb
add
sub
dec
imul
jecxz
adc
daa
lods
add
add
dec
xchg
pop
jl
enter
pop
cmp
inc
inc
fdivrl
out
pop
int
cmc
push
dec
xchg
andb
jb
repz
in
fcomip
fwait
or
out
popa
dec
test
fcompp
lock
addb
jns
xchg
sub
fwait
mov
loopne
sub
aas
add
lock
aam
fsubr
lods
test
mov
pop
psubsb
sbb
in
dec
adc
inc
dec
mov
mov
push
es
push
jno
repz
push
sub
scas
rcrb
pushf
xor
push
pushf
shlb
dec
inc
dec
add
jl
fisttpll
mov
add
int
inc
fwait
pop
loop
sarl
dec
je
aam
movsb
cwtl
out
pop
lcall
mov
imul
cld
hlt
sti
or
mov
lods
mov
cwtl
adc
iret
jnp
cmp
adc
out
adc
push
lahf
dec
fcomps
mov
movsb
adc
sub
and
sub
lock
inc
out
sbb
xor
cs
test
jl
xor
dec
xor
add
nop
scas
or
lods
lods
cmp
push
adc
mov
mov
pop
sbb
arpl
and
mov
std
addb
dec
lds
out
sub
push
mov
mov
pop
add
aaa
inc
inc
scas
sti
sbb
adc
sbb
mov
sbb
mov
gs
and
call
push
clc
and
sahf
sub
pop
aad
cmp
xorl
push
push
int
inc
arpl
xchg
push
int
push
imul
int
jmp
std
xor
cmp
push
fucom
dec
aaa
shrl
insl
inc
adc
sbbl
push
jle
xchg
push
loopne
mov
cmp
sbb
lret
or
mov
pop
inc
cld
push
fdivrp
adc
movsb
ret
andl
aas
movsl
je
pop
mov
out
add
repz
dec
leave
adc
cmpsl
sub
rorl
decb
enter
int3
out
int3
arpl
out
sub
push
cs
js
xor
call
inc
movsl
ja
dec
fnstsw
xchg
push
lods
imul
push
jmp
stos
shrl
ret
imul
pop
sbb
lods
pop
mov
inc
shll
mov
leave
xchg
mov
jg
mov
rcll
xchg
imul
cmpsl
mov
les
hlt
mov
add
sbb
and
cltd
lock
xchg
outsl
cmp
jmp
movsl
add
or
fdivs
mov
mov
add
popf
dec
or
jmp
loopne
cmp
lods
cmc
sbb
pop
inc
pop
xor
sbb
dec
pop
push
popf
pop
xor
sub
stos
out
fsub
inc
js
push
lods
fndisi(8087
mov
aad
inc
push
lds
int3
int3
fcom
lods
sbb
and
add
xchg
push
mov
mov
sahf
mov
into
lea
out
add
mov
fisubl
je
mov
push
out
std
int3
into
movsl
stc
push
fidivl
popf
gs
add
aad
cmp
push
and
aaa
mov
sub
mov
adc
sti
shll
sbbb
pop
sbb
inc
leave
jno
int3
data16
cmc
clc
inc
mov
dec
adc
xlat
dec
notl
xor
push
rclb
push
dec
xlat
pop
fsubrp
jecxz
dec
dec
sbb
orl
fcmovnu
and
xchg
jg
cmp
inc
cwtl
adc
pop
ljmp
movsb
mov
push
sub
mov
mov
repz
inc
les
mov
mov
xchg
ds
adc
lods
adc
xor
sti
addb
repnz
outsb
mov
inc
outsb
mov
add
test
cwtl
daa
add
enter
cmp
mov
sbb
pop
lea
push
and
mov
mov
push
movsl
mov
or
subl
cmc
sbbb
cwtl
es
or
pop
xor
fdivl
push
loopne
adc
daa
ljmp
outsb
add
adc
pop
xor
mov
mov
sbb
adc
inc
outsl
ss
scas
mov
js
enter
dec
cmc
mov
fsts
cltd
lahf
dec
xor
je
cltd
cmp
mov
add
out
push
cmpsl
imul
xor
mov
mov
call
push
xchg
movsb
cmp
fldpi
leave
add
jbe
sbb
adcb
lds
bound
arpl
outsb
sub
lcall
dec
aad
testl
and
pop
dec
loop
fwait
call
ja
icebp
mov
daa
dec
dec
fistpll
and
aad
and
call
flds
in
ret
nop
cmp
dec
and
pop
jecxz
xor
mov
push
in
inc
push
in
test
sub
shl
mov
cmpsb
sub
add
mov
adc
je
jne
adcl
pop
and
aad
xor
xchg
jno
sub
out
dec
shlb
sbb
mov
clc
sub
adcb
movsb
lods
sti
lret
popa
mov
xchg
lret
or
jae
outsb
pusha
into
loop
mov
cmp
mov
push
adc
inc
int
jns
pop
push
and
inc
push
push
sbb
cmp
push
mov
movsb
shlb
mov
adc
test
or
and
dec
jge
pop
es
mov
movsl
mov
fs
lret
mov
cs
lods
in
dec
dec
mov
les
fisubrs
and
divl
mov
push
and
push
dec
jbe
lods
sub
cmpsl
pop
aam
popa
dec
mov
pop
insb
cmp
mov
jl
lods
insl
mov
out
aas
mov
gs
xchg
sbb
and
fnsave
shl
fldcw
mov
xchg
or
push
or
ficomps
pop
fimull
cli
mov
dec
pop
sub
arpl
jae
push
pop
and
inc
push
shrl
icebp
adc
and
xchg
sahf
or
mov
xchg
mov
je
fnstenv
xchg
sbb
pop
lahf
out
push
jmp
sbbb
mov
out
jmp
test
mov
push
or
jnp
push
jne
xor
xor
pop
dec
test
mov
shll
fld
test
fnstenv
rol
repz
adc
sub
repnz
iret
lcall
clc
enter
lcall
mov
loop
in
in
xor
mov
cmp
jecxz
xchg
dec
or
xlat
sbb
addl
xchg
mov
testl
mov
ret
pushf
faddl
clc
ljmp
cmp
mov
movsl
inc
stc
scas
push
sub
xlat
mov
test
mov
lods
pop
addr16
xor
xchg
push
cmp
pop
out
or
push
mov
inc
out
and
mul
stos
sbb
or
jp
mov
mov
inc
mov
xchg
mov
aad
mov
dec
mov
dec
scas
dec
push
fisubrs
in
inc
in
daa
jae
imul
push
xchg
xchg
mov
das
test
dec
ficomps
ret
mov
jne
ret
mov
movsl
pop
add
ja
push
popf
daa
dec
inc
fistpll
sahf
loope
rcr
out
dec
insb
push
inc
jmp
js
jno
in
sub
pop
lods
push
dec
out
je
xchg
cmpsl
test
clc
out
test
aas
xor
outsl
bound
mov
stc
test
and
jns
lds
mov
mov
sbb
add
insl
mov
xor
cli
enter
in
mov
je
lods
sub
inc
cs
out
inc
xchg
cld
inc
test
mov
inc
jecxz
aam
call
aad
sahf
clc
cmp
loopne
data16
and
inc
cmp
movsl
lds
inc
scas
imul
xchg
in
mov
fmulp
xlat
pop
pop
hlt
jnp
je
adc
pop
cmpb
outsl
mov
das
int3
pop
pop
xor
loop
into
lcall
in
fcmovb
into
and
adc
mov
adc
fdivrp
movsb
addl
dec
jle
hlt
push
cli
inc
dec
dec
xchg
scas
mov
loope
push
sarb
fcompl
mov
jle
pop
mov
lea
insl
push
cmp
loop
lea
fwait
mov
in
jno
dec
cmp
inc
stos
jecxz
xor
call
xor
mov
inc
pop
repz
add
jbe
pop
cmp
int
xor
pop
adc
jb
mov
push
sbb
push
bound
icebp
idivl
xchg
xor
popa
call
sub
lahf
jno
push
sbb
cmp
add
jmp
push
mov
or
cs
push
or
rolb
mov
imul
loope
mov
imul
stc
scas
mov
in
xchg
mov
and
mov
cmp
in
icebp
dec
das
negl
pop
mov
add
jnp
hlt
insl
mov
or
mov
pop
sub
mov
xchg
pop
test
aas
xor
in
inc
mov
add
and
fistps
cwtl
outsl
mov
outsb
leave
sbb
rcrb
jecxz
aaa
out
dec
fwait
inc
lods
inc
test
sbb
dec
fimull
or
lahf
and
aaa
mov
es
into
push
sti
pop
mov
dec
popa
jmp
xchg
cmp
cmpsl
xchg
cmp
push
or
test
xor
sbb
mov
sub
cltd
jle
fidivs
mov
inc
jecxz
clc
iret
outsl
sbb
push
mov
jns
out
jb
add
xorb
xor
div
pop
int3
int3
pop
insb
add
outsb
rolb
push
ja
cmc
test
or
ja
imul
xchg
ljmp
mov
fwait
xchg
inc
repz
out
xor
outsl
xchg
cs
or
js
add
sub
lcall
pop
dec
in
xor
popa
icebp
mov
add
jo
and
mov
iret
insl
mov
loopne
adc
out
mov
mov
dec
pop
popf
rorl
or
and
cld
cmp
cld
inc
insb
xorl
add
cli
iret
sbb
aas
sub
pusha
test
fisubrs
pop
xchg
scas
push
lods
sub
ret
outsb
in
sbb
test
mov
fs
popf
repz
andb
xor
cmc
or
pop
test
loope
jle
push
out
dec
mov
pop
cwtl
or
out
sub
loopne
cmp
cmp
sub
adc
cmp
ss
test
dec
mov
xor
lea
sar
mov
cs
and
mov
scas
imul
int3
push
sbbb
hlt
mov
les
jg
jle
jg
xchg
adc
sub
shl
pop
dec
fisttps
push
in
data16
hlt
fnsave
ds
hlt
fs
dec
xchg
adc
shrl
outsb
xchg
and
dec
xchg
pop
xchg
cltd
xorl
inc
fnstcw
mov
jne
mov
ds
xchg
out
or
dec
shlb
aad
sti
mov
jo
into
mov
mov
jl
int
je
lods
mov
pushf
add
test
push
add
shll
sbbl
mov
cltd
lock
cli
minps
fmull
and
adc
lock
pop
adcb
dec
es
push
dec
aaa
cwtl
shll
lret
scas
ss
mov
filds
inc
pushf
add
js
mov
rolb
inc
xchg
mov
push
jecxz
mov
out
push
adc
and
cmp
mov
sbb
or
mov
jge
adc
int
mov
mov
outsb
std
dec
clc
jae
std
mov
mov
lea
aam
andl
mov
fadd
xchg
pop
inc
popa
aad
aad
mov
dec
push
insb
fcom
xorb
push
sbb
mulb
mov
jbe
mov
xor
push
lods
mov
adc
lods
mov
jne
icebp
dec
clc
stos
push
sub
cmp
xchg
jge
out
mov
and
cmp
adc
das
outsb
fdivl
pop
outsl
cld
or
stc
gs
inc
int3
mov
rorb
jecxz
jmp
xchg
fcompl
xchg
ret
out
jns
lret
and
or
pop
push
or
mov
jmp
ret
cltd
pop
pop
mov
lret
sbb
cmp
xlat
jg
ret
pop
fistps
bound
cmp
and
sbb
add
popa
fsubrp
iret
inc
test
xor
cli
aas
fidivrl
mov
in
cmp
jns
aas
outsb
scas
sub
mov
add
fbstp
and
mov
cltd
add
subb
inc
inc
lods
jae
push
jo
sub
les
push
fldenv
pop
int
cmc
repnz
add
scas
test
push
or
cmp
xchg
add
jo
sbb
ja
aaa
jns
push
lcall
pop
xchg
and
cmpl
dec
inc
sbb
int
mov
push
pop
je
mov
lahf
jns
flds
ret
pop
mov
mov
lcall
or
sbb
lret
mov
sbb
and
popa
sub
and
iret
jnp
or
pop
and
bound
jmp
cmp
mov
subb
movsl
lds
mov
insl
add
cltd
lret
pandn
cwtl
or
arpl
scas
inc
lret
adc
push
jmp
and
push
sub
call
std
push
scas
cmp
mov
dec
out
xlat
pusha
xchg
and
stc
xor
out
xor
icebp
cld
xchg
cmpsl
adc
xchg
add
repnz
loope
xlat
sub
cmovbe
cltd
xor
je
fwait
sbbb
cmp
sub
enter
sub
es
xchg
aad
pop
inc
jg
repz
popa
test
push
xor
push
jg
loope
stc
pop
scas
sbb
mov
mov
ret
push
adc
jge
movsl
inc
imul
mov
movsb
sub
push
js
pop
push
pop
pop
nop
aas
in
lods
mov
jl
sbb
pop
test
bound
xchg
popa
xor
sbb
xchg
xor
stos
daa
mov
xchg
inc
add
leave
sbb
adc
ffreep
jle
shrb
fucomp
fists
xlat
hlt
and
lea
dec
add
jbe
xor
aaa
movsl
in
dec
pop
dec
notl
xchg
pushf
sahf
lods
rcl
mov
pop
jo
push
add
orl
pop
inc
daa
mov
ds
or
pusha
fstpt
imul
sub
cmp
dec
mov
xchg
xchg
pop
repz
cmp
mov
imul
aas
mov
push
jl
int
mov
in
mov
lcall
push
push
dec
mov
inc
loope
aaa
cmp
adcl
jnp
jecxz
xchg
jecxz
ds
in
adc
cltd
in
pop
cld
add
mov
add
jbe
scas
insb
push
sahf
lods
arpl
inc
lret
jae
out
push
xchg
xchg
stos
inc
push
call
enter
out
stc
repnz
das
add
xor
lds
cmp
dec
ficomps
pop
sub
xor
sbb
sbb
mov
aaa
stc
mov
faddl
and
adc
int3
dec
aam
jg
imul
pop
ret
adc
testb
mov
cs
adc
ja
sub
aas
jnp
mov
jnp
pop
lods
fsts
pop
adc
negb
xor
pop
dec
mov
popa
pusha
aaa
push
or
insb
call
pop
and
mov
jb
rclb
out
mov
and
and
mov
das
mov
ljmp
mov
add
call
and
push
test
or
popf
icebp
adc
icebp
cmpsl
idivb
and
outsb
test
cld
pop
test
movsl
pop
outsb
shrl
mov
push
clc
repz
and
adcb
repnz
popf
pop
fstp
pop
rorb
lds
iret
and
sahf
or
mov
xor
out
inc
mov
into
leave
rclb
lret
pop
xchg
rcrb
lods
mov
sbb
pop
mov
jg
fists
sbb
mov
adc
xor
cmpsl
dec
lret
pop
enter
in
mov
in
mov
pop
sub
mov
sub
dec
mov
cmpb
sbb
shrl
sbb
mov
xchg
addr16
cwtl
mov
dec
leave
std
rcrb
dec
cmc
adc
pop
movsb
or
xor
jp
jp
inc
sbb
popa
rol
iret
hlt
out
scas
push
ror
inc
dec
loopne
pop
xor
notb
mov
call
cmpsb
cmpsb
cmp
js
enter
jmp
nop
add
jmp
xor
mov
cltd
fadd
sahf
lcall
ds
inc
out
rcrb
fcoml
sub
pop
call
nop
iret
shrb
test
jb
or
or
or
andb
mov
adc
lahf
das
jno
movsb
aas
dec
push
fwait
aas
dec
imul
je
and
add
sbb
or
ja
shlb
jge
mov
jge
out
cmpsl
mov
xchg
and
in
shrl
dec
in
jbe
loope
pop
jnp
call
out
cmp
cmp
xlat
outsb
sbb
ds
mov
mov
fnstsw
xchg
mov
psraw
fidivl
ss
push
mov
push
lods
cs
mov
lea
xchg
gs
add
sahf
xor
push
mov
ret
pop
ret
and
scas
push
in
mov
into
xlat
outsb
rcrl
mov
push
inc
adcb
inc
push
or
inc
data16
fmull
mov
adc
movsb
repnz
push
ss
insb
lret
bound
call
mov
lock
es
negl
mov
imul
loope
shlb
add
xchg
das
fistpl
mov
mov
xor
jno
dec
mov
fs
dec
dec
lods
fcmovu
jno
sbb
cmc
and
jno
push
cld
lcall
test
xchg
inc
dec
in
mov
hlt
jl
mov
lea
cmpsl
adc
mov
rcrl
ds
mov
pop
cmp
leave
pusha
push
push
push
inc
daa
out
or
test
and
adcb
pop
jle
lcall
not
insb
sub
cltd
std
push
stc
sbb
xor
dec
jecxz
call
push
jae
inc
xlat
push
dec
loope
mov
mov
mov
sub
fdivl
in
adc
sub
lds
pusha
idivl
xchg
mov
fadd
push
push
pushf
data16
leave
cs
pusha
cli
test
sub
cmp
scas
inc
xor
inc
test
fisttpll
scas
fs
fsubr
push
out
push
icebp
ss
push
loop
inc
inc
push
jmp
popa
add
ret
cmpsb
insl
xlat
pop
lock
lods
push
movsl
dec
jg
push
out
mov
out
jecxz
outsb
add
xor
push
in
jno
mov
or
scas
fsubrs
in
shrl
jmp
or
adc
daa
insl
gs
xchg
test
pop
mov
pop
out
fsubs
xchg
stc
jbe
sub
rclb
imul
fldcw
push
popf
cli
lock
mov
dec
in
cmp
mov
add
lea
lahf
adc
and
dec
sbb
dec
jo
pushf
movsl
clc
xchg
call
mov
fstpt
adc
push
and
sbb
stos
aaa
into
hlt
shll
add
xor
push
ljmp
jno
xchg
cmpsl
xchg
sub
out
sti
add
xor
int3
arpl
pop
enter
data16
fsubrs
nop
daa
xor
and
adcb
andl
xlat
cmc
out
and
sub
and
scas
inc
jns
or
leave
xchg
adc
movsl
sbb
fnstenv
cmp
gs
popa
clc
bound
sbb
jno
rolb
gs
mov
iret
subl
jne
fadds
idivl
adc
int3
jge
fisubrs
int3
pop
mov
cmp
jo
sbbb
lcall
fwait
stc
stc
cs
inc
in
xorl
jl
sahf
push
lcall
pop
sahf
out
test
jo
call
adc
pop
sub
adc
stc
addr16
mov
daa
mov
mov
xchg
in
jmp
and
testl
es
add
lret
add
xor
pop
icebp
sub
or
xor
in
mov
and
jg
sub
cmp
and
push
sub
xchg
sub
mov
insl
sar
jb
pop
insb
add
mov
mov
xor
cltd
mov
mov
sbb
jno
xor
mov
mov
sbb
push
movsl
or
sbb
lea
mov
aas
gs
xor
test
or
je
cltd
fucom
jge
xchg
inc
imul
adc
fs
aas
bound
xchg
in
jno
xchg
dec
loope
push
sbb
xchg
in
cmp
and
jns
das
push
mov
and
pushf
xor
jmp
sahf
xor
xor
jmp
xchg
xor
pop
scas
lock
mov
jae
cmp
jle
jns
clc
adc
mov
adc
icebp
das
insb
inc
jp
xchg
stos
cmc
jl
sub
test
loop
and
pusha
mull
jl
pop
mov
adc
popf
or
inc
mov
mov
jo
imul
push
pop
ja
test
jb
loope
fsts
or
in
sbb
insb
add
jne
stc
cmpsl
and
rcll
fidivl
shlb
jbe
pop
cmpsl
and
mov
jbe
sti
cmpsb
and
push
jno
out
mov
ja
das
cmpsb
and
jmp
enter
jle
dec
scas
sub
pop
jnp
add
incb
nop
daa
popa
bound
sub
mov
mov
sbb
outsb
shrb
mov
adc
insb
testb
xor
cltd
gs
xor
ret
push
push
jmp
scas
inc
mov
xchg
sub
int3
jecxz
mov
mov
push
insl
push
ja
sahf
test
hlt
mov
jge
cld
jns
std
scas
sbb
mov
sbb
imul
dec
sarb
imul
mov
mov
stc
nop
fwait
push
push
out
rclb
cmc
push
sub
ljmp
sahf
inc
mov
movsl
jecxz
xlat
outsb
cwtl
or
mov
ljmp
test
in
test
fs
sub
das
mov
out
dec
shrl
or
dec
cmp
sbbl
imulb
and
icebp
mov
out
test
in
ret
push
or
and
xchg
sbb
shrb
push
sub
sbb
jo
jno
nop
daa
pop
mov
pop
in
addr16
xor
push
mov
out
jmp
fucomip
add
mov
xor
sbb
or
pop
mov
jns
xor
stos
inc
gs
xchg
adcl
add
in
push
jmp
cmp
mov
add
mov
push
out
add
xor
pop
fnstenv
mov
xor
fdiv
xchg
repnz
sub
sub
int
dec
mov
jg
loop
lods
cltd
inc
pop
lret
int
xchg
sti
in
mov
push
sbb
dec
arpl
scas
lds
ret
clc
in
or
push
sbb
and
scas
sbbl
leave
xor
sti
fldcw
nopl
cmp
mov
data16
mov
mov
cs
add
mov
loope
sub
pop
je
andl
sbb
stc
adc
adc
pop
sub
xor
test
lret
sti
or
mov
sbb
popa
dec
pop
and
popf
mov
add
aaa
adc
mov
mov
lods
pushf
mov
jne
out
std
inc
fisubrl
pop
loop
xor
pop
sahf
xor
into
scas
mov
rorb
sahf
std
xchg
int3
lods
xchg
loope
cltd
xor
scas
mov
fcoml
incb
mov
xor
addb
fwait
xor
push
sahf
xor
movsb
mov
xchg
jge
sub
lahf
sbbl
push
lods
xchg
inc
or
arpl
imul
push
jmp
loop
jne
lret
inc
rclb
fisttpll
adc
mov
jge
and
xchg
dec
dec
push
adc
jno
sbb
push
lock
xchg
sub
test
push
mov
jecxz
lahf
xchg
mov
or
pop
dec
push
dec
pusha
mov
mov
push
or
aaa
mov
cmp
gs
jle
mov
adc
enter
jg
lahf
xor
sub
push
or
cmc
out
call
mov
rclb
stos
aas
push
jne
and
push
call
popa
int3
push
inc
inc
stos
inc
mov
push
aas
or
xchg
cmpl
jle
dec
lds
and
cmp
jae
push
or
lds
pop
xor
scas
sub
imul
fsts
xchg
pop
pop
xchg
and
and
lcall
jbe
imul
cmp
adc
push
movsl
cmp
sbb
add
push
dec
nop
adc
dec
ljmp
adc
mov
dec
mov
fistl
adc
mov
addr16
je
outsb
imul
xchg
mov
mov
cwtl
pusha
test
mov
ret
movsl
mov
int
pxor
cmc
mov
pop
inc
test
dec
adc
popf
xchg
dec
push
ljmp
sbb
add
popa
movsl
cwtl
test
daa
sbb
jno
mov
push
pop
repz
imul
jg
inc
adc
push
push
or
xchg
mov
es
stos
jo
jae
push
inc
arpl
and
mov
insb
or
xlat
outsb
popf
andl
xchg
or
mov
sbb
adc
nop
lods
imul
test
jg
out
in
xchg
mov
clc
out
sub
das
repz
out
jns
or
mov
in
mov
adc
mov
adc
pop
test
xor
mov
repz
rcrb
int
jnp
jl
mov
testb
jg
int
mov
lret
add
enter
pop
xorb
adc
sbb
dec
dec
inc
rolb
orl
cmc
daa
dec
mov
inc
pop
lret
pop
add
jo
ja
xor
jne
pop
inc
push
int
pusha
fists
sub
pop
push
mov
or
push
jge
test
divl
jge
lcall
and
push
cmp
stos
adc
fwait
sbb
jbe
and
xorb
pop
cmc
pop
push
or
push
push
aaa
cmc
push
xor
xor
icebp
jecxz
shlb
std
xchg
push
cs
mov
cmc
xchg
test
adc
add
notb
out
mov
fucomi
and
ret
jmp
push
shrb
test
cmpl
fsubs
push
outsb
les
sub
neg
push
mov
into
gs
mov
aad
push
lret
mov
jae
outsl
mov
cmp
mov
dec
les
dec
loopne
sbb
out
mov
or
add
jb
dec
dec
lock
jns,pt
push
add
popf
mov
out
addr16
inc
mov
pop
into
cmp
jb
mov
or
cmp
lret
dec
pusha
and
sub
jp
pop
mov
sub
xchg
scas
fs
push
adc
imulb
or
push
mov
dec
mov
ljmp
cli
loopne
inc
mov
out
mov
outsb
negl
mov
insl
je
mov
xor
mov
daa
mov
mov
mov
or
cltd
xor
sahf
sub
int3
ds
outsb
mov
insl
xor
xor
jnp
adc
jg
adc
icebp
enter
xor
dec
repnz
inc
and
rcl
mov
lds
or
test
or
pushl
mov
jo
in
int3
aas
mov
mov
xchg
or
mov
leave
iret
lea
andl
jl
lock
inc
fistps
mov
stc
cmp
or
aas
or
and
cmp
lock
dec
jecxz
pop
shl
mov
pusha
mov
pop
or
movsl
jae
mulb
rcrb
mov
mov
add
or
or
inc
ficompl
mov
popf
sti
leave
sbb
sbb
mov
out
into
push
mov
fstp
and
pop
pop
aam
aad
push
mov
lds
jno
xchg
repnz
mov
xchg
push
xlat
and
outsl
sti
push
shrb
inc
test
sbb
fwait
mov
das
in
or
rorl
sarl
jl
mov
out
mov
loopne
add
sub
push
aam
ret
push
int
or
aas
aam
mov
sbb
sbb
or
scas
enter
mov
xchg
cmp
mov
cmpb
xchg
sub
test
fdivr
xor
adc
or
xchg
sahf
pop
hlt
sub
lcall
cmc
imul
and
xchg
sbb
sarl
vprotb
sbb
lods
rolb
pop
mov
loope
jge
xor
jb
xlat
insb
mov
out
mov
jecxz
ja
out
test
frstor
pushf
imul
lret
mov
out
push
stos
mov
gs
das
ret
mov
xor
pop
adc
test
nop
mov
out
test
push
loope
int
xchg
jecxz
add
inc
xlat
fildl
push
stc
rol
cmp
scas
and
hlt
mov
xor
sub
or
push
fdivl
xor
andl
push
lret
xchg
jne
lds
inc
lret
add
movsb
xchg
out
or
faddl
adc
in
imul
repz
inc
xchg
shlb
loopne
mov
les
jno
cmpsb
ret
out
push
mov
fcomps
int
aam
aam
enter
mov
int
push
mov
rcl
pop
call
repz
cmp
or
fisubrs
sbb
cmp
subl
cmp
test
or
dec
mov
sbb
push
pushf
ljmp
xlat
xchg
dec
and
bound
fldt
lret
out
pop
or
insl
mov
in
das
imul
jle
rclb
shl
stos
pop
sbb
mov
push
xor
sti
mov
jp
out
stos
mov
lcall
dec
insl
mov
in
dec
data16
into
push
jecxz
popf
fldl
int3
sbb
sub
pop
jecxz
dec
movsb
maskmovq
negl
insb
es
mov
adc
mov
xchg
jle
mov
mov
sbbl
aas
add
lods
dec
ret
negb
sub
dec
jo
or
inc
and
mov
mov
ja
push
xchg
mov
xor
xchg
add
mov
sbb
mov
dec
mov
lock
mov
clc
mov
iret
out
mov
frstor
std
loop
in
int3
cmpsl
pop
aam
sub
fadd
mov
scas
int3
sti
out
xor
xlat
sar
ret
mov
enter
ficoml
mov
ljmp
idivb
repz
je
jmp
cld
ss
xchg
sbb
enter
lods
inc
rorl
push
jle
jg
dec
lods
jbe
ret
dec
loop
sub
aas
mov
add
cmpsb
not
cmp
lret
xchg
test
xchg
ljmp
cwtl
cld
arpl
cmpsl
movsb
dec
loope
out
jo
and
mov
lods
test
add
fnstenv
mov
jmp
inc
out
sbb
es
and
idivl
inc
mov
xor
or
mov
pop
clc
xchg
pop
or
mov
in
xor
imull
mov
outsl
inc
push
jecxz
xchg
inc
mov
test
outsl
add
psrld
movsb
lock
repnz
pop
push
sbb
push
lahf
add
and
out
pusha
jge
call
xchg
mov
int
lock
mov
popa
imul
gs
mov
addr16
mov
std
imul
das
jp
mov
imul
mov
repnz
shlb
inc
mov
and
pop
ret
cmpsl
lea
hlt
popf
fcmovb
aaa
jmp
or
int3
popa
sti
sub
notb
and
mov
or
inc
pop
sub
mov
or
mov
fwait
xchg
cmpsl
sbb
mov
mov
pop
hlt
in
in
out
or
or
sub
lock
out
dec
push
mov
or
clc
subb
es
stos
push
fildl
add
xchg
add
dec
xchg
add
jmp
mov
nop
add
mov
std
mov
mov
mov
lock
test
pop
lcall
lods
insl
ss
icebp
cmp
stos
adc
fdivs
and
cmp
xchg
outsb
sarb
scas
ds
mov
stc
idiv
out
cmp
push
hlt
in
int
push
mov
fsubrs
and
stos
ljmp
clc
inc
stc
loop
mov
in
mov
les
cwtl
xor
jp
sahf
aas
movsl
decb
outsb
xchg
and
inc
fisubrs
jecxz
fadd
inc
add
jmp
fwait
cmp
sub
and
pop
xchg
xor
lds
fnstsw
out
stos
lds
movsl
inc
rclb
rclb
fimuls
stos
aaa
fldcw
out
xor
roll
and
adc
or
jge
js
jle
pop
fimull
cmpsb
mov
pop
and
movsb
arpl
and
inc
mov
push
jg
gs
jae
add
mov
sbb
mov
cmpsb
jle
pop
dec
div
dec
mov
lds
out
jae
push
mov
dec
cmpsb
imul
clc
mov
sub
lret
ret
repnz
or
pop
nop
mov
push
sahf
jle
lcall
sbb
pop
stos
push
dec
rcrl
dec
adc
fcmovb
inc
call
or
sbb
cld
mov
sti
mov
fldl
dec
icebp
mov
mov
clc
mov
out
sbb
inc
mov
out
pop
lds
adc
mov
xor
and
cmp
dec
in
dec
rorl
push
loop
xor
int
mov
cltd
fisttpll
test
sbb
pop
and
cmp
add
mov
imull
xchg
xchg
pop
daa
sbb
orb
mull
fadds
mov
sbb
insl
mov
push
fs
push
mov
sub
arpl
sbb
xor
inc
xorl
xor
lods
inc
inc
push
dec
shrb
mov
aas
sub
addl
or
and
hlt
mov
enter
mov
call
mov
xchg
cmc
fwait
mov
adcb
shll
or
push
mov
repnz
xchg
pop
loop
arpl
dec
pop
les
sahf
insb
add
leave
jp
nop
jns
pushf
xchg
push
sbb
push
je
jns
fwait
daa
leave
push
je
pop
mov
xchg
jnp
mov
icebp
fisttps
or
add
mov
pop
add
mov
dec
je
fbld
xorb
test
into
and
std
lret
cmp
and
push
fnsave
ljmp
adc
mov
mov
push
xchg
dec
mov
orl
sbb
ds
and
es
xor
push
sarl
mov
add
outsb
rcll
sbb
sub
fs
sub
lods
into
xor
mov
ljmp
or
cld
ja
dec
xor
xchg
push
sbb
shrl
jns
mov
lea
pushl
jbe
fmuls
push
fisttpll
out
pop
xor
jae
popa
mov
cmp
push
pop
push
or
enter
cli
xchg
sub
mov
ret
jns
mov
add
pop
lea
test
fidivrs
out
in
push
pushl
push
scas
adc
icebp
pop
stc
nop
pop
stos
pop
add
sbb
pop
push
fs
push
aaa
ja
and
rolb
dec
rolb
cmp
aas
aam
mov
jno
gs
xchg
adc
dec
fs
or
xchg
pop
adc
jmp
in
sbb
fnsave
cmp
stos
jbe
or
ljmp
inc
xchg
or
add
mov
jmp
pushf
std
add
xchg
call
mov
rclb
push
or
jae
lock
push
mov
mov
or
lds
sbb
dec
lods
adc
in
cli
mov
shll
adc
and
jno
jne
jnp
dec
mov
dec
xchg
push
mov
push
es
mov
ret
adc
loope
mov
push
or
xchg
sub
inc
je
icebp
cmp
stos
pop
movsl
aas
xlat
push
jg
xchg
xchg
sarl
ret
movsl
jns
and
lahf
inc
xchg
mov
loope
adc
mov
xor
xchg
jno
pusha
cmpsb
out
xor
push
mov
mov
fisubrs
data16
fidivrl
rcrl
adc
jno
fisttpll
out
push
outsb
adc
dec
push
mov
jo
leave
aaa
ds
pop
adc
in
inc
push
push
out
xchg
das
test
sbb
cmp
pop
outsl
in
xor
xor
outsl
test
das
or
in
jb
sbb
imul
es
and
adc
sbb
sahf
jb
popf
mov
ret
or
shrb
fldt
mov
lock
pusha
lods
mov
pop
sub
mov
mov
int3
inc
pop
repnz
nop
insb
loope
and
out
sub
pop
add
push
mov
lock
xchg
imul
scas
popa
dec
aad
pop
ljmp
cmp
pop
mov
dec
xchg
aam
sbb
push
lea
xchg
stos
loopne
lret
insl
cltd
out
sub
adc
in
sbb
or
sub
lock
xor
popa
mov
add
adc
cld
jae
mov
fidivl
dec
dec
rcrb
imul
sbb
rorl
inc
mov
dec
movsl
pop
cmc
inc
jg
inc
idiv
xor
dec
dec
mov
mov
daa
add
es
pop
test
cld
xor
xorl
pop
insl
cmp
ja
push
movsb
lret
mov
and
cli
jge
sub
sti
xchg
or
imull
sbb
mov
jo
mov
ficoms
xchg
and
les
xchg
xor
les
ljmp
cli
adc
adc
clc
out
cld
or
lahf
mov
addr16
sti
sub
pop
sub
psrlq
xchg
add
xchg
pop
je
into
pop
data16
xchg
pop
jge
in
jg
add
cli
jns
cmp
mov
testb
call
add
out
xchg
cld
es
push
mov
jae
scas
popf
xchg
in
xchg
scas
xchg
shrl
add
sbb
loop
movsl
cmp
scas
jbe
sbb
nop
jp
or
xchg
nop
rcrl
jp
vmovlpd
lret
js
filds
sti
fistps
xor
clc
xor
movsl
jno
adc
jecxz
loop
jg
adc
and
lods
pushf
lds
daa
sti
lmsw
in
lret
cmp
ret
jecxz
testb
dec
loopne
mov
sbb
xchg
jne
push
aas
push
sbb
mov
cltd
xor
cmc
in
aaa
call
ret
loope
cmc
xor
ret
sbb
jns
arpl
xor
xor
mov
loope
lret
inc
ret
xor
xlat
cmp
test
xlat
sbb
mov
adc
fisttpll
lea
icebp
sbb
mov
scas
inc
in
out
xor
push
cld
xor
cli
das
mov
in
repnz
lret
adc
aaa
mov
xchg
mov
adc
add
int
out
int
cmp
dec
in
lds
mov
nop
push
not
outsb
dec
dec
les
insl
dec
mov
push
cmp
and
mov
push
push
sub
dec
mov
ret
call
mov
out
sbb
sub
pusha
push
or
test
ja
add
rol
ja
xor
jecxz
inc
fimull
adc
insl
mov
aad
mov
movsb
inc
sbb
dec
fwait
inc
jge
je
test
and
xor
xchg
and
push
push
inc
enter
test
outsb
push
mov
mov
xchg
jp
cltd
push
aad
jecxz
push
jmp
or
inc
in
xlat
movsb
pop
xlat
sub
sahf
scas
lds
push
out
rorb
add
sub
add
test
push
mov
out
mov
fbstp
mov
push
cmpb
mov
xchg
cs
jo
out
bound
add
nop
cmp
incl
or
std
test
lret
mov
cli
mov
mov
mov
push
adc
pop
mov
mov
imul
xchg
pusha
jo
jmp
xor
sbb
dec
in
and
push
aam
js
hlt
sbb
push
clc
push
pop
xchg
aas
and
mov
imul
mov
sbbb
pop
xchg
lcall
xchg
mov
daa
sub
xchg
adc
fcoml
xor
test
push
add
pop
sbb
mov
aaa
xor
fists
cmp
inc
push
xor
addr16
lea
jnp
orb
cmp
loope
or
sub
dec
aad
sub
sbb
push
cmp
ljmp
cmp
rcll
jp
cmp
sub
pop
data16
and
js
dec
loopne
pop
inc
xchg
xchg
bound
in
mov
ret
in
mov
lret
pushf
nop
loopne
aas
cmc
divb
or
adc
pusha
pushf
jno
add
xchg
outsl
mov
adc
push
lods
push
jae
test
das
xor
mov
mov
cmpsb
lahf
dec
loop
or
sbb
daa
mov
hlt
xor
jmp
mov
mov
add
movsl
js
xchg
sub
int3
je
out
jmp
pop
leave
sub
sub
push
cld
out
pop
rclb
xor
stc
and
lahf
and
and
aam
jno
cmpb
je
sub
pop
popa
push
movsb
cmp
mov
sub
mov
cmp
fcoms
push
aaa
jne
xor
xor
push
cmp
push
outsl
cld
pop
pop
js
and
repnz
lret
push
pop
and
movsl
jnp
and
add
cmp
stos
jne
jae
adc
ret
rcrl
fcoml
xor
jno
or
fwait
cmp
cmpsb
xorb
mov
sub
movsb
xchg
outsb
add
jp
aas
insb
jno
pop
xchg
mov
fldcw
sbb
xchg
xchg
pop
adc
mov
jb
push
lahf
addb
ss
xchg
sti
and
out
ficomps
mov
inc
repnz
fcomps
jnp
stc
pop
fldt
mov
cmp
testb
pop
imulb
jnp
push
aas
or
shlb
xchg
cmp
sub
lahf
mov
or
push
mov
sbb
outsb
iret
scas
xchg
mov
imul
fwait
mov
test
or
and
cli
add
xchg
sbb
dec
push
les
rclb
sub
insl
add
inc
fcmovbe
xchg
aam
imul
pop
movsb
bound
and
sbb
fcoms
mov
roll
js
loope
test
fwait
jg
inc
outsl
push
ja
mov
sahf
sub
dec
and
pop
popl
fisubl
cmp
out
sbb
dec
cmpsl
mov
scas
outsl
loopne
cld
and
in
jb
adc
xchg
cltd
dec
mov
push
or
add
push
mov
gs
test
es
jg
jo
aad
fists
roll
sbb
mov
out
shll
sti
inc
fsubrl
orl
flds
push
fbstp
jmp
or
test
call
push
mov
nop
roll
sbb
fadds
stc
daa
cmpsl
leave
cmp
shr
push
rcl
mov
enter
mov
dec
lret
push
lret
ja
into
inc
fdivrs
aaa
jmp
lods
repnz
int3
adc
cs
leave
add
jp
sbb
dec
or
inc
fstps
mov
ds
adc
inc
add
xor
popf
xor
push
jnp
xchg
cltd
xor
or
jno
sti
mov
sub
dec
aad
xorb
mov
add
test
push
push
ljmp
jno
ficompl
es
dec
lods
inc
cmpl
lret
aam
cmpsl
ds
cmc
jmp
pop
pop
dec
pop
sahf
jp
jecxz
push
and
cwtl
mov
ficomps
mov
inc
popa
clc
jno
cmp
push
les
popf
xor
aad
adc
cmp
cs
mov
jo
jnp
dec
lods
fcomip
mov
iret
shrl
xor
mov
lret
cmpsb
xlat
push
call
stc
sub
pop
sbb
jl
and
insb
push
sahf
iret
stos
inc
add
mov
repnz
pusha
push
adc
jle
lds
add
jp
sbb
dec
or
cltd
cmp
pop
and
out
mov
aad
adc
inc
add
xor
xor
push
jnp
xchg
cltd
xor
or
jno
cli
mov
sub
clc
dec
aad
jg
push
lods
loope
repz
add
test
push
push
ljmp
jno
fsts
es
imul
dec
lods
inc
cmpb
nop
cmpsl
ds
andb
lds
pop
sahf
jns
jecxz
imul
inc
ficompl
aas
popa
clc
jo
cmp
push
ret
sbbl
push
aam
adc
cmp
cs
mov
jo
jp
dec
lods
fdivp
mov
into
shrl
je
lods
mov
xor
mov
insl
add
fmuls
leave
orl
hlt
lods
popa
clc
fstl
insl
add
push
mov
inc
cld
jecxz
cs
xchg
mov
in
out
jl
jb
sbb
push
in
fucom
jnp
sti
imul
xor
cltd
bound
and
popf
test
iret
lret
lret
lock
inc
push
inc
xor
jae
inc
dec
mov
loopne
jne
add
jg
xor
jae
push
xchg
xchg
movsl
jl
cmp
scas
push
add
mov
fcoml
mov
push
mov
push
jl
iret
mov
inc
jmp
dec
popf
xor
push
clc
popl
xor
ret
xor
in
cmpsl
and
movsl
jne
dec
mov
pop
cmp
ja
cmp
xchg
cmp
jmp
push
jecxz
fxch
leave
sti
xchg
adc
ja
pop
mov
lret
push
sbb
mov
adc
enter
jbe
in
stos
cli
bound
push
in
enter
pop
adc
sbb
inc
insl
stos
mov
pushf
pop
fidivs
sub
lret
int
jge
cwtl
jno
mov
loope
and
adc
scas
jecxz
mov
in
cmp
in
popa
sub
and
je
into
sbb
pusha
test
out
push
pop
and
test
imul
scas
adc
adc
push
cmpsb
orb
jecxz
sub
inc
out
cmp
mov
test
into
scas
pop
inc
cmp
movsb
cmp
loope
cmp
dec
int
ret
xor
cli
ja
push
pop
addr16
cmp
cld
xchg
fwait
cwtl
icebp
cld
inc
and
add
xor
sbb
je
dec
adcl
aas
jg
cld
test
repz
out
cmc
mov
inc
outsb
mov
in
inc
adc
push
mov
fildll
bound
xor
xorb
and
decl
andl
adc
push
push
adc
sbb
dec
jne
rcr
cmp
jae
sbb
test
sahf
pop
pop
and
out
sub
add
xchg
fmul
inc
adc
test
fisttpll
bound
ljmp
sti
insb
sbb
pop
std
dec
mov
add
sub
loop
scas
inc
out
stos
cli
push
rol
mov
and
and
sbb
out
orb
inc
sub
roll
push
push
fstpt
mov
sarb
sub
js
cmp
jne
xchg
sbb
sbbb
inc
incl
in
popa
leave
ror
xchg
dec
aad
out
loope
lods
dec
lret
test
inc
imul
inc
mov
adc
aam
sbbb
jp
pop
and
pop
push
sbb
or
lds
push
mov
push
pop
jge
xchg
outsl
clc
icebp
mov
add
xchg
jbe
jnp
cli
sbb
insb
lea
imul
movsl
stos
inc
pop
cmp
mov
sub
shll
mov
sbb
sub
push
jl
jb
std
xchg
ljmp
cmp
insl
add
xchg
adc
shrb
popf
xor
mov
add
sahf
es
lret
bound
dec
imul
push
repz
in
sbb
push
or
push
ljmp
shrl
mov
andb
inc
fidivs
shll
add
daa
mov
ljmp
je
das
imul
push
mov
pop
test
pop
rorl
fs
fdivrl
lods
add
sub
mov
mov
scas
sub
cltd
mov
jg
insl
out
test
xor
mov
nop
jl
adc
fidivrl
gs
arpl
sarl
in
add
lcall
outsl
xchg
inc
xchg
jl
dec
or
mov
jmp
clc
test
call
xor
addr16
outsl
out
jns
adc
push
add
popa
mov
addr16
clc
jns
sarl
call
xor
out
out
addr16
stc
lds
xor
sub
add
test
pop
jb
xchg
mov
nop
daa
adc
cmp
mov
cmp
inc
fstpl
push
inc
mov
push
sbb
adc
stc
and
or
xchg
cmp
sbb
xchg
push
xchg
cmp
sbb
cwtl
push
jecxz
stc
and
test
dec
fcoms
adc
inc
jg
dec
dec
sub
sbb
fildl
mov
lods
xor
mov
ja
mov
or
ret
orl
or
jle
jecxz
stos
insl
jb
cmpb
mov
mov
orl
ljmp
push
push
mull
ret
jecxz
inc
xor
or
mov
lret
std
fiaddl
xor
lahf
dec
and
scas
sahf
push
clc
and
adc
scas
stos
xor
or
inc
and
sub
mov
out
in
pop
push
jae
orl
jmp
aam
xchg
mov
mov
xor
xchg
ljmp
jnp
push
sti
xor
daa
mov
cmp
push
clc
sahf
push
std
ret
out
fiaddl
xor
mov
jno
fisubrl
jle
test
adc
iret
repz
dec
push
dec
out
jle
lahf
or
fs
out
outsl
fdivrs
cmp
cmp
jg
dec
push
je
lret
popa
in
sar
ficompl
sub
lods
mov
push
enter
jne
fildl
pop
jnp
mov
mov
xorl
push
aad
out
jmp
jbe
dec
or
outsl
dec
or
iret
mov
lret
imul
jmp
jmp
scas
hlt
pop
divl
dec
or
push
xor
jmp
orl
push
lret
test
out
int
sub
stc
jae
outsb
out
mov
lods
push
rorb
movl
mov
mov
mov
and
mov
and
inc
add
aad
stos
mov
mov
mov
mov
aam
jne
mov
daa
mov
rcll
ret
dec
or
fst
xchg
mov
and
mov
out
insl
pop
aam
rcll
and
push
aam
test
mov
mov
add
test
ficoml
rorl
aam
mov
mov
xor
adc
aad
ficoml
and
dec
iret
mov
enter
jno
mov
testl
mov
in
mov
lcall
lods
sub
popf
jecxz
stos
out
jnp
dec
mov
test
adc
movsl
mov
push
pop
scas
sub
dec
push
sbb
push
dec
inc
jmp
es
outsb
ljmp
int
rorb
aaa
mov
daa
pop
add
fnstsw
lock
mov
inc
jo
xchg
rolb
fcoml
push
push
test
test
mov
gs
pop
jl
out
addb
pop
shrl
ja
int3
test
lock
and
sub
arpl
xchg
xor
dec
push
or
test
mov
movsb
mov
and
sarl
sbb
out
xchg
or
mov
xchg
push
pop
cmp
pop
out
daa
and
stos
xlat
mov
fwait
dec
push
mov
lea
mov
jle
gs
mov
mov
cmpsb
mov
mov
test
pop
std
xor
imul
mov
mov
sbb
mov
inc
adc
stos
mov
pop
std
imul
mov
mov
movsb
mov
mov
std
adcb
std
loop
cld
out
loop
mov
mov
cmpsb
lds
pop
jno
push
incl
popa
hlt
imul
mov
mov
or
scas
add
jecxz
in
ret
mov
test
lcall
xchg
aas
push
gs
testb
adc
jno
mov
cmp
scas
push
call
fstp
jp
or
pop
out
in
add
push
add
pop
mov
jl
sub
dec
pop
jp
xchg
pop
insl
repnz
sbb
scas
test
cmpsb
call
jns
add
mov
in
add
inc
adc
pop
mov
mov
cs
sbbl
dec
vpaddusw
sbb
call
stc
into
mov
mov
jae
lods
test
sbb
cmpsb
dec
adc
jno
imul
cltd
xchg
cld
arpl
lret
das
not
jge
inc
or
inc
cmc
mov
mov
ret
inc
dec
adc
adc
sbb
clc
pop
bound
pop
iret
jae
ror
or
add
push
mov
in
xchg
cli
jno
xlat
push
cltd
inc
imul
mov
es
jmp
out
repnz
leave
pop
xchg
pop
push
popf
rolb
cltd
mov
mov
outsb
lods
les
or
push
dec
jae
xchg
inc
sahf
insb
test
fistpll
push
fnstcw
rcrb
mov
pcmpeqw
jl
pop
std
pop
cmpb
jle
stc
rolb
ja
sub
in
lock
sub
lds
repz
push
fwait
jmp
xchg
sbb
dec
sbb
leave
lcall
push
jmp
stos
or
jb
dec
pop
stos
daa
inc
xchg
push
ret
sbb
dec
inc
adc
mov
mov
or
mov
mov
adc
rorb
fildll
js
addr16
in
push
je
mov
hlt
sbb
ja
icebp
adc
cmp
shrl
sbb
add
pop
jo
sub
lock
xor
mov
les
pop
leave
rolb
jne
or
call
imulb
divl
or
lock
sbb
cmp
adcl
add
mov
call
nop
cmp
pusha
cmc
adc
add
cmovg
ret
data16
mov
sub
movsb
inc
aaa
fdivrs
mov
test
mov
jle
sarl
xor
cs
outsb
loop
int
push
clc
dec
adc
flds
xchg
xor
dec
es
xor
mov
xor
jno
es
or
sbb
ficompl
mov
shll
sbb
mov
ss
cmp
xchg
movsl
inc
cli
data16
jg
arpl
sub
jbe
test
jno
out
jl
and
push
mov
mov
xchg
xchg
pushf
inc
adc
rcl
or
lods
daa
fwait
adc
pop
gs
mov
jmp
cmc
outsl
call
aam
adc
bound
pusha
imulb
mov
add
jno
xor
stos
xchg
xchg
cmp
cmpsl
mov
xor
int3
lret
call
lret
enter
mov
arpl
push
jne
adc
loopne
xor
push
add
in
insb
dec
pop
adc
push
xchg
dec
or
mov
pop
jno
jae
xor
mov
shrb
lea
or
xor
fwait
sub
mov
movsl
repnz
mov
rcr
dec
sub
sub
xlat
jno
sbb
jno
repz
mov
out
jae
and
push
cld
inc
add
test
cwtl
gs
jmp
xchg
outsb
mov
fbstp
and
or
lods
cwtl
test
and
daa
lods
jns
jl
imul
sub
insl
aas
xor
stc
rcrb
dec
or
addr16
push
cli
pop
stos
or
nop
inc
inc
shlb
lahf
mov
rcll
dec
inc
adc
ljmp
inc
pop
clc
jae
cmp
jae
cmp
jmp
repz
xchg
fdivs
dec
add
jle
mov
movsl
addr16
pusha
add
arpl
jg
push
xor
cmpsb
xor
fistpll
adc
pop
repnz
fwait
xor
mov
sarl
es
jo
mov
ret
int3
xchg
mov
mov
or
pusha
sub
cmp
jae
mov
insb
mov
mov
pop
bound
xor
inc
jae
shl
cmp
cmc
movsl
fists
adc
or
cmpsb
sub
dec
inc
pop
inc
out
orl
xchg
xor
jns
cmc
pop
imulb
sahf
xchg
call
sbb
dec
pop
sub
sarl
push
andl
jg
dec
adc
cli
xchg
jb
cs
add
mov
sarb
out
and
jmp
xor
adc
jmp
stc
aam
jae
negl
arpl
fisttpll
and
or
aad
pop
add
add
jne
inc
cmp
xor
jle
cwtl
mov
add
add
rcll
jmp
jae
cmpsl
push
mov
mov
and
rolb
rcrl
int
xor
mov
mov
das
or
popa
inc
cmp
add
loope
lahf
inc
fcomip
imul
stos
lcall
xor
adcl
push
add
xchg
das
jle
dec
leave
fistpll
xchg
and
cld
daa
stc
pop
ds
jne
and
lods
push
mov
cmp
pop
sbb
pusha
cmpsb
xchg
pushf
xor
cli
or
les
lret
clc
adc
mov
jge
pop
add
jo
or
xlat
pop
add
add
and
out
inc
mov
aad
xchg
repz
std
pop
es
jmp
adc
repnz
pop
sahf
cmp
sbbl
xor
addr16
pusha
mov
je
dec
scas
and
cs
xor
adc
test
pop
out
pop
out
repz
sbbl
std
adc
ss
mov
xchg
dec
lds
sub
mov
cmp
mov
push
mov
test
call
inc
inc
daa
mov
lcall
addl
mov
mov
mov
push
jl
cmp
ljmp
jno
pop
mov
xchg
mov
cmp
daa
repnz
lahf
mov
std
pop
int3
mov
add
das
scas
and
jo
roll
enter
icebp
push
adc
add
push
or
sub
mov
pusha
xor
arpl
inc
mov
mov
call
into
sub
fstps
push
leave
mov
test
arpl
popf
xor
xchg
sarb
orl
add
hlt
gs
ja
mov
pop
pop
es
dec
or
div
popa
hlt
insb
jmp
shrb
fwait
cmp
arpl
outsl
push
jbe
fiaddl
cli
loope
inc
fwait
in
mov
mov
stos
push
mov
stc
mov
mov
inc
jo
leave
xchg
inc
addr16
test
sbb
adc
fisubs
sub
scas
aas
pop
testl
xchg
out
pop
std
pop
test
mov
idivb
jns
inc
push
push
add
je
jge
push
sbb
aad
sbb
fdivrs
mov
or
gs
ror
xchg
push
arpl
lret
xchg
pop
mov
mov
mov
jle
insb
inc
or
das
rorl
insb
push
add
cmp
xchg
add
mov
sbb
push
push
incl
mov
movsb
lahf
and
movsl
stos
test
pop
jg
xor
sub
cmp
sbb
mov
in
push
je
cmp
jae
jmp
test
in
mul
xchg
mov
add
mov
mov
test
inc
test
jge
insl
data16
cwtl
jae
movsb
sbb
addr16
aas
pushf
cwtl
aas
je
cmp
add
ja
mulb
mov
and
lcall
sbb
dec
push
fadds
jg
add
cmp
bound
push
mov
ret
shl
divb
enter
mov
icebp
arpl
mov
movsl
bswap
cmp
xor
icebp
and
inc
adc
jb
clc
jnp
jle
call
add
jmp
push
pop
call
ret
in
jne
ljmp
repnz
xchg
out
cmp
push
sbb
inc
mov
lods
mov
fadds
les
dec
fistl
movb
cmp
lcall
and
lods
push
push
bound
sub
sbb
pusha
imulb
mov
jbe
jle
inc
xchg
clc
pop
int
lcall
xchg
ja
imul
ret
or
and
jno
jbe
sahf
arpl
insb
inc
into
or
into
sahf
pusha
bnd
nop
pusha
sbb
lods
jge
cmpsl
adc
or
addb
ja
push
jb
add
push
movsl
daa
rolb
dec
mov
stos
sub
xchg
scas
bswap
adc
pushf
cmp
aad
push
cmp
daa
sbb
in
adc
jae
or
jnp
jnp
mov
imul
in
fiadds
into
out
and
pop
jp
mov
mov
mov
outsb
cmp
test
xor
mov
mov
or
inc
lock
gs
add
int
iret
sbb
mov
mov
inc
mov
push
std
mov
add
or
lock
hlt
arpl
fs
daa
insb
icebp
pop
inc
aas
aas
popf
lcall
mov
test
push
mov
jp
cmpsl
das
popa
stos
inc
cwtl
jg
call
jnp
sbb
or
outsl
arpl
add
cmp
pop
add
jno
insb
or
sarl
pop
sub
xchg
and
dec
adc
filds
rorb
roll
add
cltd
inc
adcb
cs
mov
mov
fcomps
adc
fstpt
lcall
add
iret
push
push
loopne
xchg
popl
or
mov
adc
ljmp
lock
mov
cmpsb
xor
aam
push
lods
std
and
mov
mov
pop
roll
movsl
xor
adc
into
mov
dec
xchg
and
fidivrl
in
lea
pop
mov
mov
inc
push
jo
jb
add
pop
adc
setb
and
pop
clc
ret
aas
scas
sub
and
mov
jae,pn
es
out
or
mov
call
cmp
mov
mov
in
push
cwtl
adc
mov
ret
xchg
scas
std
push
rcll
loope
mov
fidivrs
sub
jae
pop
inc
adc
push
inc
adc
sub
jg
pop
or
cmp
xchg
mov
lods
jnp
jle
nop
data16
addr16
mov
or
push
nop
xchg
jae
je
lret
iret
jae
xchg
inc
adc
push
push
int3
scas
inc
decb
mov
xchg
popf
xchg
ret
mov
scas
inc
or
add
jl
dec
add
ret
pop
rcll
xchg
adc
xchg
adc
repz
int3
inc
push
cld
pop
sbb
decb
in
nop
cmp
icebp
and
push
orb
hlt
pop
lock
jge
ret
call
mov
andb
sbb
lds
mov
jmp
hlt
push
mov
add
inc
push
negl
loop
in
insb
call
movsb
pop
push
iret
pop
mov
or
push
or
sbbl
mov
add
jae
in
cwtl
fwait
cmp
or
mov
cmp
mov
js
add
negb
push
clc
push
pop
add
pop
add
insl
in
orb
xchg
push
mov
cmc
aas
test
arpl
sub
fs
dec
adc
push
or
test
bnd
add
out
xchg
jo
push
add
mov
mov
push
ret
xchg
jecxz
mov
mov
mov
fsubrs
push
sarl
add
imul
pusha
adc
outsb
int
pushf
data16
pushf
outsb
jnp
mov
je
in
xchg
aaa
fdivrl
lret
push
push
jg
mov
out
arpl
popa
sbb
ret
leave
pop
sbb
pushf
cmp
pop
icebp
jle
push
psllw
jle
mov
in
jb
hlt
pop
arpl
pop
xchg
cmp
aad
mov
dec
sbb
into
pushf
push
les
push
cmc
pop
out
and
jle
clc
sbb
daa
stos
test
mov
push
add
into
xchg
cmp
jmp
std
stc
arpl
imul
iret
inc
lea
sbb
mov
dec
jg
mov
xchg
adc
jl
int
dec
push
cwtl
lock
in
repnz
xlat
test
test
push
mov
mov
add
pop
mov
jmp
xchg
call
mov
sub
push
xor
fmull
loop
ja
sti
push
push
ret
icebp
add
pop
dec
or
add
sub
xor
jbe
xorb
mov
test
xchg
inc
xchg
insb
fwait
cmp
repz
and
ror
push
testl
push
pop
ljmp
mov
mov
imul
and
lret
hlt
pop
push
push
sti
jecxz
fs
mov
cli
pop
add
ret
dec
xor
inc
imull
in
xchg
mov
dec
in
leave
je
fcomip
stc
pop
dec
add
dec
sahf
xchg
lds
in
mov
movsl
mov
fnstsw
cs
dec
sbb
mov
and
jg
push
sbb
ljmp
mov
cmc
push
push
leave
nop
movsb
xor
adc
adc
out
dec
pop
clc
lock
lret
jnp
scas
xor
xor
loope
cmp
enter
mov
push
cld
in
movsl
out
jb
scas
xor
jp
pop
add
imul
std
sub
push
jmp
push
flds
das
push
mov
test
xchg
cmp
and
inc
or
add
cltd
jmp
imul
aam
push
add
or
pusha
out
xor
lcall
cmp
and
orl
test
imul
cmp
aaa
or
jno
cmp
push
insb
repnz
mov
in
insl
sub
stos
mov
cmpsl
xor
fnsave
fistpll
xor
dec
inc
flds
mov
ret
mov
mov
in
jae
add
jl
mov
jne
hlt
jno
sbb
cmp
dec
push
repnz
test
loop
int3
hlt
xadd
add
stos
dec
dec
int
xchg
cltd
adc
jecxz
adc
cmpsl
dec
adc
jo
call
add
shll
cmp
jnp
mov
and
add
stos
daa
scas
pop
scas
sub
mov
adc
mov
inc
adc
test
ja
mov
ret
push
lea
lret
jmp
pop
scas
in
push
xchg
mov
jno
lret
lods
sub
leave
stc
sbb
or
hlt
pop
dec
lcall
xor
sub
sahf
cmp
stc
mov
rcrl
shrl
mov
jae
shll
sub
rclb
dec
fs
pop
ja
xor
popa
mov
cmp
repz
cmp
pop
xchg
inc
movsb
out
in
insl
mov
mov
dec
or
insl
sub
lea
mov
aam
pop
cmp
adc
pop
lahf
das
sarb
and
pop
add
mov
popf
call
xor
imulb
out
cmp
or
add
mov
push
jo
dec
cs
cld
movsl
fwait
push
mov
bound
push
notl
les
leave
dec
cmp
jge
sahf
lcall
into
aas
mov
ja
push
adc
mov
inc
orl
cmp
aad
aad
inc
leave
jl
jecxz
pop
dec
push
sub
repz
fcos
pop
push
jno
mov
in
mov
push
cli
push
cmc
jns
jle
lock
psubsb
leave
mov
and
fstpt
clc
push
add
jge
xor
aas
and
inc
adc
push
add
loop
test
cmp
leave
imul
push
mov
jnp
xchg
cmp
mov
loopne
hlt
pop
cmp
flds
pop
scas
fadds
and
jb
fdivs
adc
xor
and
adc
aaa
lcall
and
jecxz
push
stc
push
clc
negb
pop
faddl
dec
sbb
jle
mov
pop
inc
negl
roll
ret
xchg
mov
sbb
aad
or
lds
pop
xchg
cmp
iret
out
cmp
int
push
xlat
xchg
inc
xor
pop
mov
mov
dec
or
or
mov
shrb
das
inc
icebp
arpl
sub
push
mov
inc
rcrl
dec
or
fs
mov
addr16
jne
js
inc
jmp
inc
push
movsl
cld
or
xor
dec
adc
ret
es
and
sbb
jle,pn
or
pop
outsb
sarl
push
imul
mov
test
loop
add
jnp
iret
xchg
inc
or
ret
mov
mov
mov
std
pop
imul
imul
mov
xchg
jo
inc
adc
outsb
xchg
inc
mov
dec
or
movsl
arpl
pop
mov
mov
add
lods
mov
cwtl
cmp
mov
test
or
xchg
cmp
sub
and
lods
xor
xor
fcmovb
flds
cmp
ds
mov
loopne
mov
cltd
inc
mov
inc
pop
sbb
sti
xor
je
daa
jae
xchg
dec
sbb
dec
ret
fstps
dec
adc
dec
pop
push
sbb
dec
daa
cmpsl
lret
add
clc
push
cmp
rolb
insl
imul
movsb
xor
push
mov
mov
inc
mov
idivb
mov
add
push
movsb
out
insb
cs
ss
cmp
xchg
fnstsw
dec
push
add
sti
nop
inc
aas
sbb
leave
and
pop
push
sbb
aad
dec
cwtl
das
jl
aam
adc
mov
xor
xchg
cmp
and
mov
jp
sbb
push
xor
orl
lret
mov
or
mov
lods
mov
fldl
test
cs
push
mov
push
ds
fdivrs
sub
mov
orl
sub
cmpsl
sub
sbb
inc
mov
scas
pop
aas
sbb
push
xchg
sbb
xchg
push
jbe
test
in
dec
xchg
sub
leave
mov
and
xor
faddl
fsubrp
nop
cmp
mov
or
out
lcall
js
sbb
in
cmp
pop
add
adc
or
aad
mov
xor
arpl
ds
cmp
fwait
pop
lods
xor
test
sub
stos
sbb
es
nop
ds
xor
out
jo
int
push
sarl
scas
xor
mov
lahf
aas
jbe
dec
test
cs
adc
add
iret
dec
sbb
js
adcb
outsl
jmp
cwtl
sbb
mov
mov
and
pop
lret
in
imul
repnz
and
inc
inc
pop
add
fsub
insl
jp
adc
dec
xchg
and
mov
sbb
xchg
cmp
inc
lea
mov
xor
lcall
movsl
xor
push
cs
nop
xor
lds
cmp
xchg
loop
push
movsl
push
and
push
js
loopne
test
adc
inc
or
hlt
pop
stc
fwait
out
jno
jmp
add
xchg
lds
test
fwait
dec
and
outsb
insb
jmp
lret
sub
xchg
mov
in
int
scas
cmpsb
cmp
pop
in
jae
ja
jl
ja
mov
mov
mov
les
cmpsl
sbb
adc
xchg
test
jb
testb
popa
js
xchg
inc
jne
push
sarl
cmpsb
jl
xchg
popa
testb
mov
jne
subl
add
mov
inc
or
out
lods
jg
dec
mov
mov
push
nop
stos
les
cwtl
pop
pop
add
js
aam
ss
sbb
popa
xor
mov
jns
repz
sub
lret
mov
mov
jae
scas
adc
jb
xor
jnp
repnz
pop
dec
or
stc
sbb
add
mov
or
int
xor
add
lret
out
adc
inc
pop
inc
orb
lcall
pushf
dec
mov
cmpsb
xchg
inc
scas
data16
gs
mov
mov
mov
arpl
sbb
rorb
js
fisttpl
fs
dec
loopne
mov
ja
ror
xchg
in
push
sti
call
sti
mov
loopne
in
jne
hlt
out
jae
sarl
jnp
push
leave
or
lea
out
movsl
sub
push
cld
jp
pop
incl
xlat
xor
shrl
bound
mov
mov
mov
mov
mov
dec
pusha
mov
sbb
sub
and
int3
lahf
sarb
sbb
hlt
mov
mov
scas
mov
push
pop
add
mov
mov
fisttpll
jle
inc
or
iret
mov
es
scas
mov
ljmp
xor
pop
ss
lcall
fnstsw
out
and
jmp
or
pushf
mov
test
mov
jns
popf
pop
shlb
lea
xlat
and
outsl
adc
pushf
fstpt
pop
outsl
jmp
push
add
mov
inc
adc
shrb
hlt
test
in
add
hlt
mov
and
mov
pop
inc
jmp
js
fwait
aaa
add
negb
jb
out
push
incl
int3
push
lcall
push
sbb
shl
std
pop
cmp
sub
xor
bswap
fwait
xor
xchg
sahf
pop
mov
cmp
and
cmp
lret
sub
cmc
je
ss
stc
imul
shr
loop
inc
or
and
xchg
std
jg
ja
into
sbb
xor
mov
push
nop
in
ljmp
test
ljmp
in
push
mov
sub
dec
sysexit
dec
xchg
cmp
sub
lret
ss
pop
push
data16
test
mov
xlat
negb
std
inc
push
add
xchg
and
jnp
aaa
mov
push
jmp
xor
movsb
cmpsb
sub
mov
xor
ficoml
inc
or
mov
pop
mov
adc
sub
arpl
pop
dec
ds
xchg
jne
scas
xor
cwtl
inc
add
push
push
rcl
fxch
mov
push
pop
sti
inc
pop
push
int
lcall
iret
pop
inc
adc
inc
adc
jns
pop
pop
or
push
enter
popa
adc
mov
jnp
lods
stos
dec
xchg
mov
adc
sbb
ds
nop
inc
test
lret
fisubs
sbb
test
mov
jp
les
call
jle,pn
push
ss
fists
test
dec
jne
inc
push
dec
imul
mov
in
lea
cmpsl
cltd
xor
aas
mov
scas
or
arpl
dec
and
icebp
pushf
jns
push
in
inc
push
mov
cmp
cmp
in
pop
adc
cwtl
mov
scas
xor
sbb
sub
ja
cld
dec
mov
cli
fidivrl
xor
cmp
adc
icebp
jp
xor
fsubs
test
mov
mov
and
mov
insl
mov
mov
cmp
out
dec
push
and
pop
sbb
sahf
cmovne
jge
xor
aam
mov
xor
test
mov
sahf
in
scas
xor
cltd
outsl
sbb
movsb
inc
xchg
cmp
movsb
test
rcrb
lods
mov
shlb
mov
dec
jg
or
mov
lods
pop
add
mov
sahf
inc
adc
jmp
sub
sbb
cmp
pop
add
or
stos
fwait
iret
xchg
and
aaa
jbe
shll
jmp
movsl
sub
daa
ss
add
dec
adc
into
jns
aas
outsl
repnz
test
cmp
dec
pushf
xor
ret
pop
int3
lahf
cmpsb
cs
sbb
and
sbb
cmp
outsb
xchg
jo
or
rorl
jl
mov
loopne
sbb
add
cmc
pop
xrelease
lods
in
in
fists
notb
push
inc
adc
pop
out
rcrb
enter
cmp
rol
push
mov
push
mov
shrl
jae
xchg
dec
push
aam
cmpsl
fldl
fildl
cmpsl
test
push
mov
addb
repnz
pop
mov
ret
lock
outsl
jmp
into
lea
push
add
xchg
push
add
xor
jo
sub
fs
xchg
inc
jbe
xchg
jo
test
add
int
je
lret
imul
punpcklwd
adc
mov
movsl
data16
or
clc
pop
std
xchg
cmc
push
adcb
int3
xchg
int
mov
repnz
lahf
fidivrs
lea
les
mov
std
into
pop
jnp
xchg
adc
decl
aad
mov
push
clc
pop
lock
dec
sbb
jnp
xchg
cmp
insl
pop
add
push
jne
push
andl
insb
in
mov
idiv
outsl
repz
out
lds
mov
push
sti
mov
dec
adc
xchg
lea
lcall
fldl
cmpsl
in
push
mov
lret
jbe
or
pop
cwtl
subb
mov
in
jmp
dec
loopne
or
addr16
push
pop
and
test
aas
loop
mov
cmc
xor
ret
push
jl
xchg
ja
test
xor
ret
hlt
sti
mov
mov
dec
insl
subb
cltd
mov
pop
lock
adc
aas
inc
xor
ja
xchg
sub
leave
mov
dec
in
insb
add
shrl
cmp
icebp
mov
fsubp
pop
adc
ss
push
mov
cltd
mov
mov
clc
mov
sub
ds
dec
cmpsb
cmp
mov
les
sarb
add
loop
and
cwtl
das
pop
inc
add
stos
xchg
push
mov
int3
aam
jmp
repz
pop
icebp
insb
jae
test
lea
mov
loopne
sub
dec
xor
pushf
xchg
imul
adc
movsl
pop
fs
pop
xchg
jle
ret
scas
mov
jl
rorb
add
add
cmp
push
mov
cmpsb
scas
inc
xlat
loopne
movsb
cmp
add
xor
ret
pop
dec
push
jge
test
js
cmpsb
fwait
xor
sar
repnz
mov
mov
dec
xlat
outsb
jle
cmp
xchg
lahf
cmc
mov
mov
adc
cmp
pop
xchg
cs
xchg
dec
out
mov
dec
jecxz
insl
add
add
mov
insl
pop
repnz
stos
adc
adc
lds
xor
dec
jecxz
mov
lcall
and
sub
cmpsb
cmp
mov
les
sarl
add
loop
and
add
stos
xchg
push
mov
lret
aad
std
out
rcrl
pop
hlt
mov
pop
icebp
push
adc
mov
ficoms
out
xor
fwait
test
imul
adc
movsl
pop
arpl
pop
xchg
jl
ret
lods
mov
jge
into
dec
loope
or
add
and
movsl
lods
inc
fcomp
movsl
cmp
lcall
xor
les
push
jge
subl
lahf
movsb
fwait
xor
rolb
icebp
idivl
mov
dec
xlat
outsb
jl
cmp
mov
mov
bnd
or
cmp
xor
jae
cwtl
das
xchg
dec
out
mov
dec
loop
insl
add
add
insb
cmp
mov
stos
adc
adc
das
cs
jl
dec
dec
in
xchg
lcall
and
daa
sub
pop
dec
cmpsl
jp,pt
pop
hlt
scas
fwait
lds
jnp
add
jecxz
and
cltd
xor
add
test
pop
mov
leave
aad
sti
out
aam
sbb
pop
repnz
adc
xchg
unpckhps
inc
xor
add
adc
mov
mov
in
icebp
mov
push
stos
inc
inc
sub
cmpsb
pop
popa
enter
sub
jge
int
loop
pop
add
add
and
movsb
stos
inc
fcomp
lds
imulb
sbb
pop
dec
dec
jge
subl
aam
add
daa
adc
mov
dec
xlat
outsb
jp
ds
fwait
cmc
mov
mov
repz
adc
cmp
enter
xor
scas
mov
loope
insl
add
add
insl
xor
push
hlt
mov
test
pop
paddb
sub
dec
dec
in
test
lcall
and
sub
pop
inc
test
jns
pop
hlt
lods
lcall
in
in
pop
and
cltd
jno
mov
mov
insl
stc
in
aad
sbb
mov
pop
rep
adc
mov
fistpl
out
cs
pusha
outsb
add
mov
mov
ljmp
inc
ds
adc
xchg
jns
lds
lret
dec
jecxz
add
imul
push
and
mov
and
ret
cmpsl
ds
sti
pusha
imull
pop
dec
dec
jle
jg
in
pushf
mov
add
and
inc
fsubrs
bound
xchg
cltd
testb
in
adc
sbb
ds
outsl
pop
lcall
lods
mov
add
xor
cmc
mov
cmpsl
adc
or
das
out
popa
dec
dec
out
addb
sahf
insl
add
aam
mov
and
inc
xlat
pop
inc
test
cmc
stos
cwtl
pop
lret
adc
jmp
jl
pop
fwait
xor
add
movsb
nop
and
mul
aas
adc
testb
insb
adc
popf
xchg
mov
fstps
call
pop
arpl
xchg
jg
insb
mov
lea
shl
mov
lods
inc
cmp
adc
ja
test
call
in
add
sahf
xor
insb
add
and
and
shrl
sub
jg
jge
in
lcall
lcall
and
jbe
inc
xlat
xchg
xchg
testl
sbb
xor
insl
pop
fwait
xor
stos
mov
push
adc
xlat
outsb
xor
mov
adc
or
xor
sub
out
pusha
dec
dec
out
addl
mov
and
inc
fcoms
test
imulb
lret
cld
jmp
pushf
xor
add
mov
fsubrs
loopne
adc
testl
pushf
test
mov
xor
out
xlat
cltd
xor
adc
inc
sub
pop
xchg
jge
insb
scas
mov
and
add
lods
inc
cmp
adc
mov
cmpsb
scas
jmp
in
add
lahf
xor
insb
add
es
sahf
cmpsb
inc
fcmovnbe
mov
stc
sub
pop
inc
dec
adcb
in
cwtl
popf
sahf
xor
ljmp
mov
jne
inc
xlat
xchg
clc
cmc
loope
push
lods
sbb
jge
xor
push
fwait
xor
test
jo
adc
xlat
outsb
das
xor
mov
mov
lret
divb
enter
jg
dec
dec
out
addb
mov
insl
add
shlb
add
mov
and
test
imull
leave
jle
sti
out
jl
sbb
add
mov
ret
fnstenv
fidivrs
clc
hlt
popa
push
lods
fwait
cmpb
mov
cltd
xor
rcpps
inc
sub
or
mov
es
repz
or
test
pop
int3
arpl
scas
ljmp
add
mov
dec
push
daa
mov
pushf
movsl
inc
mov
arpl
sub
pop
inc
dec
sbbl
xchg
pushf
lahf
ss
mov
lcall
and
je
inc
xlat
lea
pop
cmc
fucomip
pop
scas
sbb
jge
xor
xor
xor
cmpsl
mov
or
sti
xlat
outsb
sub
dec
cmc
mov
mov
lret
bound
hlt
xor
and
inc
dec
out
jg
sahf
mov
insl
add
shll
and
and
ficoml
test
clc
cmpsl
xchg
pop
enter
in
jl
sbb
xor
imul
mov
hlt
fdivrl
or
cs
hlt
pop
imul
adc
rcrl
jmp
es
pop
pusha
jb
xchg
jns
insb
stos
mov
daa
in
repz
push
scas
inc
cmp
adc
mov
mov
ret
dec
in
decl
mov
dec
push
daa
mov
fwait
mov
test
cli
es
pop
inc
inc
sbbl
xchg
lcall
out
mov
mov
jb
inc
fmuls
pop
neg
out
scas
pop
add
xor
xor
xor
cmpsb
mov
or
cli
fsubrs
xor
lea
lods
inc
mov
adc
rcl
lret
bound
repz
and
jmp
out
jge
sahf
scas
xchg
outsb
add
add
mov
sbb
ds
inc
jo
popa
clc
movsl
xchg
enter
jg
clc
in
jge
sbb
fwait
push
mov
mov
repnz
or
stc
nop
inc
sub
pop
scas
cwtl
jg
adc
rcrb
jmp
and
jb
nop
js
insl
stos
mov
daa
jecxz
hlt
mov
add
inc
ss
adc
mov
enter
sbb
dec
out
std
or
inc
dec
daa
mov
lcall
inc
in
repz
and
leave
pusha
inc
inc
sbbl
xchg
cwtl
lahf
ss
pushf
out
mov
mov
jo
inc
lods
pusha
neg
in
scas
adc
aaa
xor
xor
mov
or
das
es
dec
testb
lahf
adc
rcl
lret
bound
repnz
and
jmp
out
jl
sahf
lods
xchg
outsb
add
jmp
inc
fistl
stos
inc
outsb
jae
stc
movsb
vprotw
pop
mul
out
adc
lahf
ss
xor
mov
mov
icebp
flds
or
cli
xchg
inc
sub
pop
data16
scas
mov
lcall
and
or
mov
sub
leave
hlt
mov
add
stos
dec
push
into
mov
enter
sbb
dec
out
cld
or
inc
dec
sub
cwtl
mov
stos
inc
jmp
fs
and
sbbb
pusha
out
xchg
xchg
mov
pushf
in
mov
mov
outsl
pop
inc
stos
pusha
neg
jecxz
scas
adc
jle
das
ss
push
pushf
xor
mov
jb
or
fsubrs
cs
daa
pusha
dec
testb
popf
adc
into
aam
arpl
lock
and
ljmp
jnp
lahf
lods
xchg
outsb
add
out
and
and
push
cmp
cli
mov
les
jge
sbb
fwait
imul
mov
fdivl
xlat
inc
xlat
or
sti
xchg
inc
sub
pop
sbb
lods
mov
into
call
or
cmp
mov
or
scas
xchg
sub
hlt
mov
add
stos
dec
push
iret
xchg
popf
test
test
mov
or
inc
dec
sub
jle
mov
xchg
lahf
inc
mov
inc
jmp
or
pusha
cmp
pop
out
nop
xchg
mov
pushf
loop
mov
mov
outsb
push
inc
flds
test
neg
loop
mov
sti
jle
sub
dec
pushf
xor
mov
jae
or
fsubrs
sub
testb
fwait
adc
int3
ror
fs
daa
jmp
pop
inc
push
out
jp
mov
int3
daa
mov
pop
pop
inc
fstl
stos
inc
push
fs
mov
ret
sbbb
fsubp
jge
pop
mov
fwait
bound
push
pushf
andl
mov
fnsave
inc
xlat
push
adc
xchg
inc
daa
pop
cmc
pop
sbb
stos
mov
iret
out
lcall
pop
mov
or
jb
outsb
movsb
lods
xchg
sub
testl
adc
dec
push
shlb
push
leave
fwait
cmpsb
out
test
mov
or
sub
outsl
push
inc
dec
sub
jl
lea
popf
dec
mov
inc
out
data16
and
lret
inc
test
jae
call
cmp
scas
push
popf
loopne
rclb
and
jne
push
inc
fiaddl
cmpsb
popa
clc
xlat
loopne
mov
stc
jg
sub
cmp
fs
popf
xor
test
mov
mov
or
repz
sub
mov
mov
mov
adc
gs
xor
sbb
ds
call
test
lret
sti
jecxz
and
sbb
stos
inc
push
mov
pusha
mov
fsub
jle
adc
add
push
lcall
jne
roll
add
std
xchg
inc
and
sbb
test
lret
cld
push
pop
out
aaa
sbb
jbe
mov
outsl
mov
ret
testb
pop
adc
subl
lcall
call
sub
jo
inc
dec
sub
jp
mov
int3
mov
inc
out
data16
push
or
bound
aas
test
jno
jmp
cmp
scas
pop
sahf
rclb
es
push
inc
fildl
stc
ficomps
mov
clc
adcb
xor
iret
bound
xor
mov
mov
or
repnz
sub
ja
mov
scas
cwtl
push
lods
leave
iret
into
gs
xor
sbb
in
adcl
jmp
cmpsl
jo
ror
mov
adc
inc
fimuls
inc
insl
gs
sahf
mov
popa
mov
fucomi
jg
adc
popf
pop
data16
and
mov
fidivs
rolb
add
pusha
notl
sbb
test
cmp
jecxz
pushf
xor
add
out
xor
push
jbe
mov
jo
test
testl
inc
dec
shlb
push
out
test
mov
or
es
sub
js
es
cltd
dec
mov
inc
in
data16
sbb
int3
arpl
cmp
ljmp
lods
or
adc
fidivs
push
inc
faddl
movsb
arpl
aad
sbb
sub
cmp
pusha
dec
lahf
ss
push
in
mov
mov
or
daa
xchg
sub
stc
nop
jbe
mov
lods
xchg
pop
scas
enter
jmp
in
test
push
ljmp
jno
mov
loopne
adc
dec
fisttps
lods
inc
imul
xchg
bound
fldl2t
orb
mov
sahf
pop
rcrl
and
jbe
rolb
add
xchg
cmp
pop
sbb
je
push
cmpsb
mov
shl
popf
xor
add
xor
mov
push
xchg
jno
cmpsl
xchg
sub
sar
repnz
mov
sub
pop
scas
inc
dec
shrl
xor
mov
push
ljmp
jb
cmp
pop
nop
daa
nop
xchg
dec
loopne
mov
inc
jecxz
addr16
sbb
test
mov
mov
adc
daa
mov
addr16
inc
faddl
mov
sbb
daa
cs
pop
dec
lahf
ss
push
out
mov
mov
or
out
es
sub
stc
nop
je
mov
stos
xchg
pop
scas
int3
iret
data16
out
int3
sbb
out
test
push
ljmp
jno
mov
fimuls
loopne
xor
fwait
test
bound
xlat
jmp
cmp
pop
sahf
pop
arpl
pop
xchg
jl
mov
call
or
xchg
cmp
stc
push
pop
sbb
pop
movsb
scas
cmp
ffreep
sahf
xor
xor
mov
je
movsl
xchg
sub
lock
mov
sub
sbb
jge
ss
sahf
lock
mov
jmp
icebp
push
movsl
and
jae
cmp
ret
je
xchg
sub
scas
scas
inc
loope
push
gs
push
in
orl
or
adc
sub
gs
inc
fnstsw
xchg
mov
fstps
or
sbbb
sub
rcrl
mov
out
scas
cltd
mov
or
pop
and
sub
cli
xchg
jb
mov
test
lret
cld
in
int
push
out
xchg
push
jmp
jno
movsb
mov
ret
sub
hlt
fcoml
loope
das
scas
inc
popa
push
int3
arpl
ljmp
sub
lahf
pop
popa
ret
pop
xchg
jp
mov
out
inc
pop
add
dec
pop
push
mov
jo
sbb
ret
lahf
ss
std
pop
icebp
cs
mov
jno
mov
cli
xchg
out
cmc
mov
daa
adc
mov
dec
shrb
arpl
into
xchg
fwait
lock
mov
in
out
push
movsl
pop
or
inc
sub
jno
xchg
sub
scas
mov
loopne
push
data16
xchg
xchg
or
push
sti
sub
sub
loopne
bound
fidivrs
xchg
mov
gs
rcl
sbb
pop
repnz
sub
rcrl
mov
out
lods
cwtl
mov
or
sbb
ds
xchg
jo
mov
cmpsb
xchg
sbb
stc
jecxz
into
adc
lock
push
in
data16
push
movsl
lahf
xchg
mov
ficoml
loop
sub
imul
mov
xchg
ljmp
cmp
push
pop
les
js
mov
in
inc
fdivr
add
fs
dec
push
pop
mov
outsb
sbbb
test
mov
repnz
mov
adc
fnsave
xchg
sarb
mov
and
inc
shrl
popa
cmp
xchg
cltd
icebp
mov
mov
in
in
sbb
ds
sub
lods
mov
fsubp
imul
xor
out
test
cmpsb
or
xlat
fcmovnb
pop
or
das
loope
popa
dec
dec
fistpll
xchg
mov
data16
into
aad
mov
lock
and
cmp
pop
inc
mov
lock
xchg
rclb
ja
jmp
xchg
sub
outsb
jae
dec
movsl
sbb
clc
loope
iret
adc
icebp
mov
in
fs
sahf
test
mov
xchg
sub
adc
sub
add
mov
pop
jmp
or
mov
nop
jbe
mov
jecxz
inc
add
cltd
xor
push
and
sahf
test
aad
mov
pop
repz
rclb
jp
jle
fidivs
lahf
cwtl
das
sarl
mov
and
sbb
ja
cmp
nop
cwtl
repnz
mov
out
loop
adc
ss
xchg
sub
stos
mov
fsub
push
adc
shlb
xor
out
test
movsb
or
fdivl
or
mov
cmc
aas
mov
add
lock
and
test
mov
cwtl
imul
dec
scas
sbb
cmpb
adc
dec
pop
pop
js
cli
xchg
xor
mov
popa
adc
dec
mov
pop
jle
stc
push
jmp
mov
xor
call
push
adc
dec
or
shr
sub
ds
in
popa
ret
scas
xlat
sub
dec
or
inc
test
andl
cmp
push
mov
and
out
dec
addl
out
stos
stc
inc
loopne
rcl
scas
shll
loopne
data16
push
add
dec
or
push
push
daa
cmp
loopne
xchg
jae
je
lret
dec
outsl
in
js
daa
aas
jmp
jmp
imul
push
movsb
or
mov
dec
rorl
mov
test
imul
cs
movsb
mov
repz
sbbb
jb
cmp
mov
pushf
shlb
and
shlb
icebp
sub
pusha
movsb
pop
insb
inc
int
gs
in
idivb
cmpb
clc
insb
jo
adc
jmp
cs
jle
popf
sub
frndint
sbb
divb
idivb
xor
push
rcrl
flds
dec
fwait
movsl
pop
cmp
scas
lret
in
iret
cmp
shr
push
leave
dec
mov
mov
push
out
cmp
out
stos
add
jns
sti
cmp
sub
xlat
mov
inc
sub
sbb
push
mov
inc
mov
hlt
lret
inc
inc
add
stos
add
mov
sti
adc
cmp
jmp
sysenter
rcll
js
pop
jecxz
pop
je
push
into
out
jg
push
jmp
sub
add
add
add
xor
add
add
add
add
and
add
add
add
add
sbb
add
add
add
add
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
gs
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
outsb
popa
insl
gs
push
jb
addr16
insl
pop
dec
popa
insl
and
je
jo
cmp
xor
and
cmp
popa
jae
gs
bound
fs
je
je
ds
gs
jb
jo
imul
addr16
insl
and
arpl
jo
imul
jae
jb
jo
imul
jo
outsb
fs
arpl
cmp
gs
outsb
fs
je
jae
gs
bound
cmp
jae
gs
bound
fs
je
je
and
gs
xor
and
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
addr16
addr16
cmp
popa
jae
gs
bound
fs
je
je
ds
fs
outsb
fs
je
jae
gs
bound
cmp
fs
outsb
fs
arpl
cmp
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
cmp
arpl
imul
jne
jae
gs
jb
jbe
insb
gs
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
outsb
jbe
imul
and
inc
arpl
jae
cmp
jae
and
cmp
jb
jno
gs
gs
js
arpl
imul
insb
ds
jb
jno
gs
gs
jb
jbe
insb
gs
cmp
jae
arpl
imul
jne
je
outsb
outsw
ds
popa
jae
gs
bound
add
mov
fmul
mov
fidivrl
pushf
lds
adc
out
outsl
mov
stos
gs
lea
out
jns
repnz
out
adc
push
or
in
cmpl
jl
inc
in
sbbb
outsb
xlat
xchg
in
or
or
daa
in
popa
push
arpl
sahf
imul
test
es
cld
dec
xor
jnp
mov
fisubrl
push
xchg
insb
sbb
mov
sub
and
jne
and
frstor
adc
cli
shl
cmpsb
and
fnstcw
fimull
lock
fimull
in
mov
jge
sbb
xchg
dec
mov
pop
and
mov
fmull
nop
sbb
arpl
fisttpll
push
loope
xchg
je
repz
in
cmp
test
mov
out
pop
fisubrs
or
rolb
sbb
cmp
ret
ds
insl
sarl
mov
cltd
stos
stos
shl
popf
mov
mov
in
jb
adc
mov
gs
mov
je
data16
xor
fimull
sub
inc
add
pop
xor
stos
inc
cmpb
jp
jg
and
nop
loop
addb
sti
adc
inc
adc
call
aas
sbb
mov
mov
cmp
arpl
mov
dec
in
mov
pusha
in
lret
sbb
fisubs
pop
pop
movsl
mov
fsubrl
or
push
scas
loopne
jbe
fcomps
push
mov
mov
mov
pop
pop
fists
in
dec
mov
in
fcmovnb
add
xchg
aad
jnp
xchg
cld
push
mov
lret
imul
fdivs
ljmp
out
bound
inc
mov
mov
mov
inc
stos
and
cwtl
loope
mov
ss
popa
adc
cmpsb
enter
pop
test
sbb
adc
movsb
imul
mov
xlat
fisubl
lea
mov
stc
mov
push
jecxz
push
mov
lock
inc
jl
dec
out
push
adc
shr
mov
call
and
jle
dec
add
pushf
sbb
and
nop
xor
int
out
xor
dec
pop
inc
push
inc
mov
iret
xor
xor
loop
test
jmp
xchg
popf
lods
pusha
repnz
loope
jae
fwait
inc
dec
stos
xor
sbb
stos
bound
ljmp
pop
ja
orb
mov
fdiv
int
je
data16
ljmp
pop
cmpsl
stos
ret
lahf
pop
mov
adc
in
dec
sub
cld
mov
mov
mov
sbb
xchg
dec
aas
js
push
call
loope
pop
ljmp
adc
fldl
fnstsw
cltd
movsl
inc
imul
pop
mov
jecxz
xchg
fldcw
imul
js
push
nop
cmp
sbb
or
scas
push
lods
repnz
jae
test
cmpsl
jnp
ja
mov
mov
mov
sub
dec
push
incl
pop
test
push
lods
stos
jp
jnp
jmp
and
jmp
fwait
ljmp
and
ret
sbb
mov
push
aam
jg
inc
sub
enter
outsl
sub
ss
dec
mov
call
call
dec
mov
les
inc
cmpsl
push
mov
pop
mov
shll
jnp
notl
stc
enter
or
push
lods
stos
adc
mov
aaa
out
adc
push
inc
int
xchg
aas
jnp
sti
xor
in
adc
xchg
adc
scas
xor
mov
nop
ja
pop
pop
pop
inc
jb
mov
cli
nop
jno
js
mov
dec
pop
call
xchg
inc
pop
push
shlb
xor
adc
and
add
imul
outsb
into
cmpsb
in
daa
inc
inc
xchg
jo
dec
push
pop
cmp
add
push
testb
xchg
pop
addr16
stos
dec
repz
push
dec
lods
push
or
negl
pop
pop
add
repz
dec
in
popf
cmc
sbb
cwtl
outsb
push
insb
pop
cmp
cmp
mov
sarl
fidivs
fdivl
xor
jmp
popf
idivl
fldl
cmp
imul
lds
mov
sub
in
mov
imul
lret
xchg
repnz
adc
cli
scas
enter
mov
imul
sub
icebp
jno
sbb
pop
js
adc
orl
xchg
push
lods
pop
jge
cld
loop
cltd
rclb
ja
stos
out
imul
pop
pusha
mov
loop
mov
cmpsb
movsl
sub
shlb
mov
stc
dec
rol
jnp
mov
insl
mov
jp
push
stc
mov
push
adc
clc
adc
pop
xor
push
cld
pop
js
push
jp
inc
test
push
js
lock
gs
push
clc
lret
mov
stos
ja
ljmp
and
and
jle
pushfw
mov
sbb
or
mov
xchg
push
mov
fwait
data16
push
push
out
push
push
and
push
cmp
pop
push
cwtl
cmp
mov
test
xchg
pop
jae
es
fnstcw
cmpl
sbbl
mov
jno
sub
clc
xchg
cmp
cmp
cmp
mov
mov
ret
sub
dec
cmpsb
dec
and
out
sub
loope
fsub
lods
xchg
push
in
pop
int3
out
mov
cmpsb
iret
scas
leave
add
push
mov
jo
cltd
in
fstps
addb
xchg
stc
jge
mov
or
cmc
imul
ljmp
cmp
rcrl
ljmp
sbb
add
sbb
dec
adc
and
push
fiadds
pop
push
sub
nop
pop
or
pusha
pop
aaa
cmpsl
sbb
inc
fstl
mov
mov
push
xor
inc
xchg
cmp
xchg
outsb
icebp
push
std
shrl
fsts
fwait
daa
and
add
xchg
mov
andb
das
jb
sbb
jb
sbb
jb
sbb
xor
xchg
iret
incl
jo
js
call
das
lahf
dec
psubsw
adc
push
dec
jns
fcomi
cmp
hlt
push
adcl
cmp
or
push
jmp
cmpsl
jae
inc
inc
imul
lods
sub
pop
adc
popf
pusha
nop
fiadds
in
inc
sbb
jbe
loop
inc
notl
and
arpl
loopne
adc
xchg
mov
or
or
pop
into
mov
mov
stos
inc
idivl
pop
movsb
les
dec
and
fistpll
shl
mov
jl
xlat
js
adc
movsl
or
cmp
mov
hlt
stos
shrb
jbe
sub
xor
cmpsb
test
sets
cmpsl
movsl
iret
add
mov
cli
leave
ret
enter
repz
std
js
dec
xchg
pop
adc
cltd
sbb
sbb
movsb
cmp
lods
test
mov
dec
and
imul
xcrypt-ofb
cmpsl
stos
sub
lcall
aam
mov
inc
popf
nop
lds
stos
pop
vmread
xchg
adc
in
stos
jae
dec
mov
enter
xchg
cwtl
sub
lock
dec
mov
fsubs
aaa
jae
int3
jg
jp
mov
orb
mov
outsb
xchg
add
mov
das
icebp
sub
jmp
outsl
test
outsb
push
pop
repnz
dec
icebp
mov
jae
stos
pop
ret
mov
jl
out
decb
pushf
push
enter
in
jp
xchg
in
mov
push
popf
mov
xchg
adc
inc
jno
rcr
adc
sub
cltd
xchg
lahf
lock
iret
pop
push
sti
sub
add
idivb
fs
iret
mov
fistps
int
out
les
jp
fsubl
std
jge
movsl
jo
inc
jne
pop
xor
jge
cli
les
pusha
frstor
leave
xor
