push
mov
push
movl
mov
push
call
add
mov
lea
mov
mov
cmp
jb
mov
movsbl
cmp
jne
mov
movb
mov
sub
mov
jmp
mov
mov
pop
ret
int3
int3
int3
int3
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
call
add
lea
push
call
add
push
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
mov
push
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
mov
push
push
call
add
cmpl
jne
jmp
jmp
jmp
jmp
mov
push
push
call
add
mov
push
push
call
add
movl
mov
test
je
cmpl
jne
push
call
add
jmp
push
call
add
call
lea
jmp
movl
movl
mov
mov
mov
mov
mov
mov
mov
movsbl
mov
add
mov
test
je
mov
mov
cmpb
je
cmpb
je
jmp
mov
add
mov
jmp
mov
add
mov
jmp
mov
add
mov
jmp
mov
add
add
push
mov
push
mov
push
push
call
add
xor
mov
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
push
movl
cmpl
je
mov
movsbl
mov
add
xor
sub
mov
mov
mov
add
mov
jmp
mov
pop
ret
jmp
jmp
jmp
jmp
mov
push
mov
lea
push
push
pushl
call
add
pop
ret
mov
or
xor
cmp
sete
mov
ret
int3
int3
int3
int3
int3
int3
mov
test
je
mov
add
test
je
test
jne
add
lea
lea
mov
mov
add
xor
xor
add
test
je
mov
test
je
test
je
test
je
test
je
jmp
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
lea
mov
sub
ret
cmp
jne
repz
jmp
mov
push
mov
cmpl
jne
call
pushl
call
push
call
pop
pop
pop
ret
push
push
call
lea
push
call
xor
cmp
jne
push
push
push
push
call
mov
cmp
je
mov
jmp
mov
cmpl
jne
mov
cmp
jne
cmpl
jbe
xor
cmp
setne
mov
call
test
jne
push
call
pop
call
test
jne
push
call
pop
call
mov
call
test
jns
push
call
pop
call
mov
call
mov
call
test
jns
push
call
pop
call
test
jns
push
call
pop
push
call
pop
cmp
je
push
call
pop
call
testb
je
movzwl
jmp
push
pop
push
push
push
push
call
mov
cmp
jne
push
call
call
jmp
mov
mov
mov
mov
push
push
call
pop
pop
ret
mov
mov
mov
cmpl
jne
push
call
call
movl
mov
call
ret
call
jmp
mov
ret
mov
push
push
pop
test
jne
mov
jmp
cmp
jge
mov
mov
push
push
call
pop
pop
mov
test
jne
push
push
mov
call
pop
pop
mov
test
jne
push
pop
pop
ret
xor
mov
jmp
mov
mov
add
add
cmp
jl
push
pop
xor
mov
push
mov
sar
mov
mov
and
shl
mov
cmp
je
cmp
je
test
jne
mov
add
inc
cmp
jl
pop
xor
pop
ret
call
cmpb
je
call
pushl
call
pop
ret
mov
push
mov
push
mov
mov
cmp
jb
cmp
ja
mov
sub
sar
add
push
call
orl
pop
jmp
add
push
call
pop
pop
ret
mov
push
mov
mov
cmp
jge
add
push
call
mov
orl
pop
pop
ret
mov
add
push
call
pop
ret
mov
push
mov
mov
mov
cmp
jb
cmp
ja
andl
sub
sar
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
mov
mov
cmp
jge
andl
add
push
call
pop
pop
ret
add
push
call
pop
ret
mov
push
mov
push
mov
push
call
push
call
pop
pop
test
je
call
add
cmp
jne
xor
jmp
call
add
cmp
jne
xor
inc
incl
testl
jne
push
push
lea
cmpl
mov
jne
push
call
pop
mov
test
jne
lea
push
mov
mov
pop
mov
mov
jmp
mov
mov
mov
mov
mov
orl
xor
pop
inc
pop
jmp
xor
pop
pop
ret
mov
push
mov
cmpl
je
push
mov
testl
je
push
call
andl
andl
andl
andl
pop
pop
pop
ret
mov
push
mov
mov
push
mov
movb
test
jne
call
mov
mov
mov
mov
mov
mov
cmp
je
mov
test
jne
call
mov
mov
cmp
je
mov
mov
test
jne
call
mov
mov
testb
jne
orl
movb
jmp
mov
mov
mov
mov
mov
pop
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
cmp
je
push
call
pop
andl
push
lea
push
push
call
lea
mov
lea
add
mov
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
lea
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
call
push
mov
call
lea
push
call
test
jne
test
jne
cmp
je
push
call
pop
mov
pop
xor
pop
call
leave
ret
mov
push
push
mov
push
push
call
add
push
call
push
call
pop
ret
mov
push
mov
pushl
call
test
je
pop
jmp
pushl
pushl
pushl
pushl
pushl
call
int3
xor
push
push
push
push
push
call
add
ret
mov
push
mov
mov
xor
cmp
je
inc
cmp
jb
lea
cmp
ja
push
pop
pop
ret
mov
pop
ret
add
push
pop
cmp
sbb
and
add
pop
ret
call
test
jne
mov
ret
add
ret
call
test
jne
mov
ret
add
ret
mov
push
mov
push
call
mov
push
mov
call
pop
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
push
push
call
call
lea
mov
xor
cmp
setne
test
jne
call
movl
call
or
jmp
push
call
pop
andl
push
call
mov
pushl
pushl
pushl
push
call
mov
push
push
call
add
movl
call
mov
call
ret
mov
push
call
pop
ret
mov
push
mov
pushl
pushl
pushl
push
call
add
pop
ret
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
mov
push
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
je
cmp
je
cmp
je
cmp
jne
call
xor
pop
ret
push
call
xor
ret
mov
push
mov
push
call
test
je
push
push
call
test
je
pushl
call
pop
ret
mov
push
mov
pushl
call
pop
pushl
call
int3
push
call
pop
ret
push
call
pop
ret
mov
push
call
mov
push
call
push
call
push
call
push
call
push
call
push
call
add
pop
ret
mov
push
mov
push
mov
xor
jmp
test
jne
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
cmpl
je
push
call
pop
test
je
pushl
call
pop
call
push
push
call
pop
pop
test
jne
push
push
push
call
mov
mov
pop
mov
cmp
jae
mov
test
je
call
add
cmp
jb
cmpl
pop
pop
je
push
call
pop
test
je
push
push
push
call
xor
pop
ret
push
push
call
push
call
pop
andl
xor
inc
cmp
je
mov
mov
mov
cmpl
jne
pushl
mov
call
mov
mov
test
je
pushl
call
mov
mov
mov
mov
sub
mov
cmp
jb
call
cmp
je
cmp
jb
pushl
call
mov
call
mov
call
pushl
call
mov
pushl
call
cmp
jne
cmp
je
mov
mov
mov
mov
mov
mov
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
cmpl
jae
mov
mov
test
je
call
addl
jmp
movl
call
cmpl
jne
movl
push
call
pop
pushl
call
cmpl
je
push
call
pop
ret
call
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
mov
push
mov
push
push
pushl
call
add
pop
ret
push
push
push
call
add
ret
push
push
push
call
add
ret
mov
push
mov
call
pushl
call
pop
push
call
int3
mov
push
mov
xor
mov
cmp
je
inc
cmp
jb
xor
pop
ret
mov
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
mov
push
push
call
mov
xor
pop
mov
cmp
je
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
je
cmp
je
push
push
mov
push
call
add
test
jne
push
mov
push
push
mov
call
mov
test
jne
push
push
push
call
add
test
je
xor
push
push
push
push
push
call
push
call
inc
pop
cmp
jbe
push
call
lea
mov
sub
push
sar
push
sub
push
push
call
add
test
jne
push
mov
push
push
call
add
test
jne
pushl
push
push
call
add
test
jne
push
push
push
call
add
jmp
push
push
push
push
push
jmp
push
call
mov
cmp
je
cmp
je
xor
mov
mov
cmp
je
inc
cmp
jb
push
lea
push
lea
push
mov
call
pop
push
lea
push
push
call
mov
pop
pop
xor
pop
call
leave
ret
push
call
pop
cmp
je
push
call
pop
test
jne
cmpl
jne
push
call
push
call
pop
pop
ret
mov
push
mov
push
call
mov
test
je
mov
mov
mov
push
cmp
je
add
lea
cmp
jb
add
cmp
jae
cmp
je
xor
test
je
mov
test
jne
xor
jmp
cmp
jne
andl
xor
inc
jmp
cmp
je
mov
push
mov
mov
mov
cmp
jne
push
pop
mov
andl
add
cmp
jl
mov
mov
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
jmp
cmp
jne
movl
pushl
push
call
pop
mov
jmp
andl
push
call
pop
mov
pop
or
pop
pop
pop
ret
mov
push
push
xor
cmp
jne
call
mov
test
jne
mov
mov
cmp
ja
test
je
test
je
cmp
jne
xor
test
sete
mov
movzbl
push
call
pop
test
je
inc
inc
jmp
cmp
ja
inc
mov
test
jne
pop
mov
pop
ret
cmpl
jne
call
push
mov
push
xor
test
jne
or
jmp
cmp
je
inc
push
call
pop
lea
mov
test
jne
push
inc
push
call
mov
pop
pop
mov
test
je
mov
push
jmp
push
call
cmpb
pop
lea
je
push
push
call
pop
pop
mov
test
je
push
push
push
call
add
test
jne
add
add
cmpb
jne
pushl
call
andl
andl
movl
xor
pop
pop
pop
pop
ret
pushl
call
andl
or
jmp
xor
push
push
push
push
push
call
int3
mov
push
mov
push
mov
push
xor
push
mov
mov
mov
movl
cmp
je
mov
addl
mov
mov
cmpb
jne
xor
cmp
mov
sete
inc
mov
jmp
incl
test
je
mov
mov
inc
mov
mov
movzbl
push
inc
call
pop
test
je
incl
cmpl
je
mov
mov
incl
mov
inc
mov
mov
test
je
cmpl
jne
cmp
je
cmp
jne
test
je
movb
andl
cmpb
je
mov
cmp
je
cmp
jne
inc
jmp
dec
jmp
cmpb
je
cmpl
je
mov
addl
mov
incl
xor
inc
xor
jmp
inc
inc
cmpb
je
cmpb
jne
test
jne
cmpl
je
lea
cmpb
jne
mov
jmp
xor
xor
cmp
sete
mov
shr
test
je
dec
test
je
movb
inc
incl
test
jne
mov
mov
test
je
cmpl
jne
cmp
je
cmp
je
test
je
movsbl
push
test
je
call
pop
test
je
mov
mov
incl
mov
inc
incl
mov
mov
incl
mov
jmp
call
pop
test
je
inc
incl
incl
mov
inc
jmp
test
je
movb
inc
mov
incl
mov
jmp
mov
pop
pop
test
je
andl
incl
leave
ret
mov
push
mov
sub
push
xor
push
push
cmp
jne
call
push
mov
push
push
mov
call
mov
mov
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
push
lea
call
mov
add
cmp
jae
mov
cmp
jae
mov
shl
lea
cmp
jb
push
call
mov
pop
cmp
je
mov
lea
push
add
push
push
lea
call
mov
add
dec
mov
mov
xor
jmp
or
pop
pop
pop
leave
ret
mov
push
mov
sub
push
push
call
mov
xor
cmp
jne
xor
jmp
cmp
je
add
cmp
jne
add
cmp
jne
push
mov
push
push
push
sub
push
sar
inc
push
push
push
push
mov
call
mov
cmp
je
push
call
pop
mov
cmp
je
push
push
pushl
push
pushl
push
push
push
call
test
jne
pushl
call
pop
mov
push
call
mov
jmp
push
call
xor
pop
pop
pop
leave
ret
mov
push
mov
sub
push
lea
push
call
push
push
pop
push
call
pop
pop
xor
cmp
jne
or
jmp
lea
mov
mov
cmp
jae
add
orl
movw
mov
movw
movb
mov
mov
mov
add
lea
add
cmp
jb
push
push
cmp
je
mov
cmp
je
mov
add
mov
add
mov
mov
cmp
jl
mov
cmp
jge
mov
push
push
call
pop
pop
test
je
addl
lea
mov
cmp
jae
add
orl
andl
andb
andl
movw
movw
movb
mov
add
add
lea
cmp
jb
add
cmp
jl
jmp
mov
xor
test
jle
mov
mov
cmp
je
cmp
je
mov
mov
test
je
test
jne
push
call
test
je
mov
and
mov
sar
shl
add
mov
mov
mov
mov
mov
mov
push
lea
push
call
test
je
incl
addl
inc
incl
cmp
jl
xor
mov
shl
add
mov
cmp
je
cmp
je
orb
jmp
movb
test
jne
push
pop
jmp
lea
neg
sbb
add
push
call
mov
cmp
je
test
je
push
call
test
je
and
mov
cmp
jne
orb
jmp
cmp
jne
orb
push
lea
push
call
test
je
incl
jmp
orb
movl
inc
cmp
jl
pushl
call
xor
pop
pop
pop
leave
ret
or
jmp
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
mov
push
mov
mov
push
mov
cmp
jae
mov
test
je
call
add
cmp
jb
pop
pop
ret
push
call
ret
call
ret
mov
push
pushl
call
mov
test
jne
pushl
call
mov
push
pushl
call
mov
pop
ret
mov
cmp
je
push
pushl
call
call
orl
mov
cmp
je
push
call
orl
jmp
push
push
call
push
call
mov
movl
andl
xor
inc
mov
mov
movb
movb
movl
push
call
pop
andl
pushl
call
movl
call
push
call
pop
mov
mov
mov
test
jne
mov
mov
pushl
call
pop
movl
call
call
ret
xor
inc
mov
push
call
pop
ret
push
call
pop
ret
mov
push
push
call
pushl
mov
call
call
mov
test
jne
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
jmp
push
call
pop
xor
push
call
pop
mov
pop
ret
mov
push
call
mov
test
jne
push
call
pop
mov
pop
ret
push
push
call
mov
test
je
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
test
je
push
call
pop
mov
cmp
je
push
call
pop
push
call
pop
andl
mov
test
je
push
call
test
jne
cmp
je
push
call
pop
movl
call
push
call
pop
movl
mov
test
je
push
call
pop
cmp
je
cmp
je
cmpl
jne
push
call
pop
movl
call
push
call
pop
call
ret
mov
push
call
pop
ret
mov
push
call
pop
ret
mov
push
push
call
mov
test
jne
call
xor
pop
ret
push
mov
push
push
call
push
push
mov
call
push
push
mov
call
push
push
mov
call
cmpl
mov
mov
je
cmpl
je
cmpl
je
test
jne
mov
mov
mov
movl
mov
mov
call
mov
cmp
je
pushl
push
call
test
je
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
pushl
mov
call
mov
call
test
je
mov
push
pushl
call
call
mov
cmp
je
push
push
call
mov
pop
pop
test
je
push
pushl
pushl
call
call
test
je
push
push
call
pop
pop
call
orl
mov
xor
inc
jmp
call
xor
pop
pop
ret
push
push
push
call
xor
test
setne
mov
mov
ret
mov
push
mov
sub
mov
andl
andl
push
push
mov
mov
cmp
je
test
je
not
mov
jmp
push
lea
push
call
mov
xor
call
xor
call
xor
call
xor
lea
push
call
mov
xor
xor
cmp
jne
mov
jmp
test
jne
mov
or
shl
or
mov
not
mov
pop
pop
pop
leave
ret
mov
push
mov
push
push
xor
pushl
call
mov
pop
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
push
pushl
pushl
call
mov
add
test
jne
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
push
push
xor
pushl
pushl
call
mov
pop
pop
test
jne
cmp
je
cmp
jbe
push
call
lea
cmp
jbe
or
mov
cmp
jne
mov
pop
pop
pop
ret
mov
push
mov
cmpl
je
pushl
push
pushl
call
test
jne
push
call
mov
call
push
call
pop
mov
pop
pop
ret
push
push
call
xor
mov
push
call
pop
mov
push
pop
mov
cmp
jge
mov
mov
cmp
je
mov
testb
je
push
call
pop
cmp
je
incl
cmp
jl
mov
mov
add
push
call
mov
pushl
call
pop
mov
mov
inc
jmp
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
push
push
mov
mov
mov
and
xor
cmp
jne
test
je
mov
push
mov
sub
test
jle
push
push
push
call
pop
push
call
add
cmp
jne
mov
test
jns
and
mov
jmp
orl
or
pop
mov
andl
mov
pop
mov
pop
pop
ret
mov
push
mov
push
mov
test
jne
push
call
pop
jmp
push
call
pop
test
je
or
jmp
testl
je
push
call
push
call
pop
neg
pop
sbb
jmp
xor
pop
pop
ret
push
push
call
xor
mov
mov
push
call
pop
mov
xor
mov
cmp
jge
mov
lea
cmp
je
mov
testb
je
push
push
call
pop
pop
xor
inc
mov
mov
mov
mov
test
je
cmp
jne
push
call
pop
cmp
je
incl
jmp
cmp
jne
test
je
push
call
pop
cmp
jne
or
mov
call
inc
jmp
xor
mov
mov
pushl
push
call
pop
pop
ret
movl
call
cmpl
mov
je
mov
call
ret
push
call
pop
ret
push
call
pop
ret
mov
push
push
xor
mov
cmpl
jne
lea
mov
push
pushl
add
call
test
je
inc
cmp
jl
xor
inc
pop
pop
ret
andl
xor
jmp
mov
push
mov
push
mov
push
mov
test
je
cmpl
je
push
call
push
call
andl
pop
add
cmp
jl
mov
pop
mov
test
je
cmpl
jne
push
call
add
cmp
jl
pop
pop
ret
mov
push
mov
mov
pushl
call
pop
ret
push
push
call
xor
inc
mov
xor
cmp
jne
call
push
call
push
call
pop
pop
mov
lea
cmp
je
mov
jmp
push
call
pop
mov
cmp
jne
call
movl
xor
jmp
push
call
pop
mov
cmp
jne
push
push
call
test
jne
push
call
pop
call
movl
mov
jmp
mov
jmp
push
call
pop
movl
call
mov
call
ret
push
call
pop
ret
mov
push
mov
mov
push
lea
cmpl
jne
push
call
pop
test
jne
push
call
pop
pushl
call
pop
pop
ret
mov
push
mov
mov
cmp
jne
call
movl
xor
pop
ret
test
js
cmp
jb
call
movl
call
jmp
mov
and
sar
mov
shl
movsbl
and
pop
ret
mov
push
mov
mov
test
jne
call
movl
call
or
pop
ret
mov
pop
ret
sub
je
sub
je
sub
je
dec
je
xor
ret
mov
ret
mov
ret
mov
ret
mov
ret
mov
push
push
mov
push
xor
lea
push
push
call
xor
movzwl
mov
mov
mov
mov
shl
or
lea
stos
stos
stos
mov
add
lea
sub
mov
mov
mov
inc
dec
jne
lea
mov
mov
mov
inc
dec
jne
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
push
push
lea
push
pushl
call
mov
test
je
xor
mov
inc
cmp
jb
mov
movb
test
je
lea
movzbl
movzbl
cmp
ja
sub
inc
push
lea
push
push
call
add
mov
add
test
jne
push
pushl
lea
pushl
push
push
lea
push
push
push
call
xor
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
push
pushl
lea
push
push
push
lea
push
push
pushl
push
call
add
xor
movzwl
test
je
orb
mov
jmp
test
je
orb
mov
mov
jmp
mov
inc
cmp
jb
jmp
lea
movl
xor
sub
mov
lea
add
lea
cmp
ja
orb
lea
jmp
cmp
ja
orb
lea
mov
jmp
movb
inc
cmp
jb
mov
pop
xor
pop
call
leave
ret
push
push
call
call
mov
mov
test
je
cmpl
je
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
mov
mov
cmp
je
test
je
push
call
test
jne
cmp
je
push
call
pop
mov
mov
mov
mov
push
call
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
sub
push
xor
push
lea
call
mov
cmp
jne
movl
call
cmp
je
mov
andl
jmp
cmp
jne
movl
call
jmp
cmp
jne
mov
mov
movl
jmp
cmp
je
mov
andl
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
push
call
mov
xor
mov
cmp
jne
mov
call
xor
jmp
mov
xor
cmp
je
incl
add
cmp
jb
cmp
je
cmp
je
movzwl
push
call
test
je
lea
push
push
call
test
je
push
lea
push
push
call
xor
inc
add
mov
mov
cmp
jbe
cmpb
je
lea
mov
test
je
movzbl
movzbl
jmp
push
lea
push
push
call
mov
add
imul
mov
lea
mov
jmp
mov
test
je
movzbl
movzbl
jmp
mov
mov
or
movzbl
inc
cmp
jbe
mov
add
cmpb
jne
mov
incl
add
cmpl
mov
jb
mov
mov
movl
call
push
mov
lea
lea
pop
mov
mov
add
add
dec
jne
mov
call
jmp
orb
inc
cmp
jbe
add
cmpb
jne
lea
mov
orb
inc
dec
jne
mov
call
mov
mov
jmp
mov
xor
movzwl
mov
shl
or
lea
stos
stos
stos
jmp
cmp
jne
or
mov
pop
pop
xor
pop
call
leave
ret
push
push
call
orl
call
mov
mov
call
mov
mov
call
mov
cmp
je
push
call
pop
mov
test
je
mov
mov
mov
rep
andl
push
pushl
call
pop
pop
mov
test
jne
mov
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
mov
call
testb
jne
testb
jne
push
call
pop
andl
mov
mov
mov
mov
mov
mov
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
xor
mov
cmp
jge
mov
mov
inc
jmp
pushl
call
test
jne
mov
cmp
je
push
call
pop
mov
push
call
movl
call
jmp
push
call
pop
ret
jmp
cmp
jne
cmp
je
push
call
pop
call
movl
jmp
andl
mov
call
ret
cmpl
jne
push
call
pop
movl
xor
ret
mov
push
mov
push
push
mov
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
push
push
mov
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
mov
test
je
push
call
lea
movl
cmpl
je
mov
test
je
push
call
cmpl
je
mov
test
je
push
call
add
decl
jne
mov
add
push
call
pop
pop
mov
pop
pop
ret
mov
push
mov
push
push
mov
mov
xor
push
cmp
je
cmp
je
mov
cmp
je
cmp
jne
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
pushl
call
pushl
call
pop
pop
mov
cmp
je
cmp
jne
mov
sub
push
call
mov
mov
sub
push
call
mov
sub
push
call
pushl
call
add
mov
cmp
je
cmp
jne
push
call
pushl
call
pop
pop
lea
movl
cmpl
je
mov
cmp
je
cmp
jne
push
call
pop
cmp
je
mov
cmp
je
cmp
jne
push
call
pop
add
decl
jne
push
call
pop
pop
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
test
je
push
mov
cmp
je
push
mov
call
pop
test
je
push
call
cmpl
pop
jne
cmp
je
push
call
pop
mov
pop
jmp
xor
pop
pop
ret
push
push
call
call
mov
mov
test
je
cmpl
je
call
mov
test
jne
push
call
pop
mov
call
ret
push
call
pop
andl
pushl
add
push
call
pop
pop
mov
movl
call
jmp
push
call
pop
mov
ret
mov
push
mov
push
push
mov
push
call
mov
mov
pop
test
jne
call
movl
orl
or
jmp
test
je
call
movl
jmp
push
xor
test
je
mov
test
je
mov
and
mov
mov
mov
and
or
mov
mov
mov
test
jne
call
add
cmp
je
call
add
cmp
jne
pushl
call
pop
test
jne
push
call
pop
testl
push
je
mov
mov
lea
mov
mov
sub
dec
mov
cmp
jle
push
push
pushl
call
add
mov
jmp
or
mov
or
jmp
mov
cmp
je
cmp
je
mov
and
mov
sar
shl
add
jmp
mov
testb
je
push
push
push
push
call
and
add
cmp
je
mov
mov
mov
jmp
xor
inc
push
lea
push
pushl
call
add
mov
cmp
je
orl
or
jmp
mov
and
pop
pop
pop
leave
ret
mov
push
push
xor
pushl
call
mov
add
cmp
jb
pop
pop
ret
mov
push
mov
sub
push
push
mov
xor
push
mov
cmp
jne
cmp
jbe
mov
cmp
je
mov
xor
jmp
mov
cmp
je
orl
cmp
jbe
call
push
pop
mov
call
mov
jmp
pushl
lea
call
mov
cmp
jne
mov
mov
cmp
jbe
cmp
je
cmp
jbe
push
push
push
call
add
call
movl
call
mov
cmp
je
mov
andl
pop
pop
pop
leave
ret
cmp
je
cmp
ja
call
push
pop
mov
call
cmp
je
mov
andl
jmp
mov
mov
cmp
je
movl
cmp
je
mov
andl
jmp
lea
push
push
push
push
push
lea
push
push
mov
pushl
call
cmp
je
cmp
jne
mov
cmp
je
mov
jmp
call
cmp
jne
cmp
je
cmp
jbe
push
push
push
call
add
jmp
mov
push
mov
push
pushl
pushl
pushl
pushl
call
add
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
movzwl
and
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
pushl
call
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
mov
mull
mov
mov
mull
add
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
sub
sbb
xor
sub
sbb
neg
neg
sbb
mov
mov
mov
mov
mov
pop
ret
andl
ret
int3
int3
int3
mov
mov
test
je
xor
mov
test
jne
cmp
jb
cmpl
je
jmp
push
mov
cmp
jb
neg
and
je
sub
mov
add
sub
jne
mov
shl
add
mov
shl
add
mov
and
shr
je
rep
test
je
mov
add
sub
jne
mov
pop
ret
mov
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
testb
je
cmpl
je
decl
js
mov
mov
incl
movzbl
jmp
movsbl
push
push
call
pop
pop
cmp
jne
or
ret
incl
ret
mov
push
mov
push
testb
push
mov
mov
mov
je
cmpl
jne
mov
add
jmp
andl
cmpl
jle
mov
mov
decl
mov
call
incl
cmpl
jne
cmpl
jne
mov
mov
call
cmpl
jg
cmpl
jne
mov
mov
pop
leave
ret
mov
push
mov
sub
mov
xor
mov
push
mov
push
mov
xor
push
mov
pushl
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
call
mov
test
jne
call
movl
call
cmpb
je
mov
andl
or
jmp
testb
jne
push
call
pop
mov
cmp
je
cmp
je
mov
and
mov
sar
shl
add
jmp
mov
testb
jne
cmp
je
cmp
je
mov
and
sar
shl
add
jmp
mov
testb
jne
xor
cmp
je
mov
mov
mov
mov
mov
mov
test
je
inc
mov
cmp
jl
lea
cmp
ja
movsbl
movzbl
and
jmp
xor
mov
imul
movzbl
push
shr
pop
mov
cmp
je
push
pop
cmp
ja
jmp
xor
orl
mov
mov
mov
mov
mov
mov
jmp
movsbl
sub
je
sub
je
sub
je
dec
dec
je
sub
jne
or
jmp
orl
jmp
orl
jmp
orl
jmp
orl
jmp
cmp
jne
add
mov
mov
mov
test
jns
orl
negl
jmp
mov
imul
movsbl
lea
mov
jmp
andl
jmp
cmp
jne
add
mov
mov
mov
test
jns
orl
jmp
mov
imul
movsbl
lea
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
jne
orl
jmp
cmpb
jne
inc
orl
mov
jmp
orl
jmp
orl
jmp
mov
cmp
jne
cmpb
jne
add
orl
mov
jmp
cmp
jne
cmpb
jne
add
andl
mov
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
andl
andl
lea
push
movzbl
push
call
pop
test
mov
pop
je
mov
lea
call
mov
inc
mov
test
je
mov
lea
call
jmp
movsbl
cmp
jg
je
cmp
jg
je
sub
je
dec
dec
je
dec
dec
je
dec
dec
jne
add
movl
mov
jmp
testl
jne
orl
jmp
testl
jne
orl
mov
cmp
jne
mov
add
testl
mov
mov
mov
je
test
jne
mov
mov
mov
movl
jmp
sub
je
dec
dec
je
sub
je
dec
dec
jne
mov
add
testl
mov
je
movzwl
push
push
lea
push
lea
push
call
add
test
je
movl
jmp
mov
mov
movl
lea
mov
jmp
mov
add
mov
test
je
mov
test
je
testl
movswl
mov
je
cltd
sub
sar
movl
jmp
andl
jmp
mov
mov
push
call
pop
jmp
cmp
jg
je
cmp
jl
cmp
jle
cmp
je
cmp
je
cmp
jne
testb
mov
mov
je
orl
jmp
addl
mov
mov
call
test
je
testb
je
mov
mov
jmp
mov
mov
movl
jmp
mov
orl
movl
mov
test
je
add
mov
mov
jmp
mov
orl
cmpl
lea
mov
mov
mov
jge
movl
jmp
jne
cmp
jne
movl
jmp
cmp
jle
mov
cmpl
jle
mov
add
push
call
mov
pop
mov
test
je
mov
mov
mov
jmp
movl
mov
mov
add
mov
mov
mov
lea
push
pushl
movsbl
pushl
mov
push
pushl
lea
push
push
pushl
call
call
mov
add
and
je
cmpl
jne
lea
push
push
pushl
call
call
pop
pop
cmpb
jne
test
jne
lea
push
push
pushl
call
call
pop
pop
cmpb
jne
orl
inc
mov
push
jmp
mov
mov
jmp
sub
je
dec
dec
je
sub
jne
mov
movl
testb
movl
je
mov
add
movb
mov
movl
jmp
test
jne
add
test
je
mov
test
je
movswl
jmp
movzwl
cltd
jmp
mov
test
je
cltd
jmp
xor
mov
test
je
test
jg
jl
test
jae
neg
adc
neg
orl
testl
mov
mov
jne
xor
cmpl
jge
movl
jmp
andl
mov
cmp
jle
mov
mov
or
jne
and
lea
mov
decl
test
jg
mov
or
je
mov
cltd
push
push
push
push
call
add
mov
mov
mov
cmp
jle
add
mov
dec
jmp
lea
sub
inc
testl
mov
mov
je
test
je
mov
cmpb
je
decl
mov
movb
inc
jmp
dec
cmpw
je
add
test
jne
sub
sar
jmp
test
jne
mov
mov
mov
jmp
dec
cmpb
je
inc
test
jne
sub
mov
cmpl
jne
mov
test
je
test
je
movb
jmp
test
je
movb
jmp
test
je
movb
movl
mov
sub
sub
mov
test
jne
mov
jmp
mov
lea
mov
dec
call
cmpl
je
test
jg
pushl
mov
mov
lea
push
lea
call
testb
pop
pop
je
testb
jne
mov
jmp
lea
mov
mov
dec
call
cmpl
je
test
jg
cmpl
mov
je
test
jle
mov
mov
movzwl
decl
push
push
lea
push
lea
push
add
call
add
test
jne
cmp
je
pushl
mov
mov
lea
push
lea
call
cmpl
pop
pop
jne
jmp
orl
jmp
mov
push
pushl
lea
call
pop
pop
cmpl
jl
testb
je
mov
jmp
mov
lea
mov
dec
call
cmpl
je
test
jg
cmpl
je
pushl
call
andl
pop
mov
mov
mov
test
je
mov
xor
mov
jmp
cmpl
je
cmpl
jne
cmpb
je
mov
andl
mov
mov
pop
pop
xor
pop
call
leave
ret
lea
std
dec
inc
add
dec
inc
add
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
inc
add
push
call
call
mov
test
je
andl
call
jmp
xor
inc
ret
mov
movl
call
call
ret
push
call
mov
ret
mov
push
mov
mov
mov
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
push
cmp
je
mov
imul
add
add
cmp
jb
imul
add
pop
cmp
jae
cmp
je
xor
pop
ret
pushl
call
ret
push
push
call
xor
mov
mov
mov
cmp
jg
je
mov
push
pop
sub
je
sub
je
sub
je
sub
jne
call
mov
mov
test
jne
or
jmp
mov
mov
jmp
pushl
mov
call
pop
lea
mov
jmp
mov
sub
je
sub
je
dec
je
call
movl
call
jmp
mov
mov
jmp
mov
mov
jmp
mov
mov
movl
push
call
mov
xor
cmpl
je
cmp
jne
push
call
cmp
je
push
call
pop
xor
mov
cmp
je
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
movl
cmp
jne
mov
mov
mov
add
cmp
jge
mov
imul
mov
mov
incl
jmp
call
mov
movl
call
cmp
jne
pushl
push
call
pop
jmp
mov
mov
cmpl
je
push
call
pop
ret
push
call
pop
cmp
je
cmp
je
cmp
jne
mov
mov
cmp
jne
mov
mov
xor
call
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
mov
mov
pop
ret
mov
push
mov
pushl
call
test
je
pushl
call
pop
test
je
xor
inc
pop
ret
xor
pop
ret
mov
push
mov
push
push
push
mov
push
pushl
call
pushl
mov
mov
call
mov
cmp
jb
mov
sub
lea
cmp
jb
push
call
mov
lea
pop
cmp
jae
mov
cmp
jae
mov
add
cmp
jb
push
pushl
call
pop
pop
test
jne
lea
cmp
jb
push
pushl
call
pop
pop
test
je
sar
push
lea
call
mov
pushl
mov
call
mov
add
push
call
mov
mov
jmp
xor
pop
pop
pop
leave
ret
mov
push
push
push
call
pop
pop
mov
push
call
mov
mov
test
jne
push
pop
pop
ret
andl
xor
pop
ret
push
push
call
call
andl
pushl
call
pop
mov
movl
call
mov
call
ret
call
ret
mov
push
mov
pushl
call
neg
sbb
neg
pop
dec
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
mov
mov
push
push
mov
call
andl
cmpl
mov
jne
push
call
mov
test
je
mov
push
push
call
test
je
mov
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
push
push
mov
call
push
call
mov
test
je
push
push
call
push
call
mov
mov
mov
mov
cmp
je
cmp
je
push
call
pushl
mov
call
mov
test
je
test
je
call
test
je
lea
push
push
lea
push
push
push
call
test
je
testb
jne
orl
jmp
mov
cmp
je
push
call
test
je
call
mov
test
je
mov
cmp
je
push
call
test
je
pushl
call
mov
pushl
call
test
je
pushl
pushl
pushl
pushl
call
jmp
xor
mov
pop
pop
xor
pop
call
leave
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
xor
mov
jmp
mov
cmpw
je
add
dec
jne
test
je
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
push
mov
push
push
test
jne
test
jne
cmp
jne
xor
pop
pop
pop
pop
ret
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
test
jne
xor
mov
jmp
mov
test
jne
xor
mov
jmp
mov
cmp
jne
mov
sub
movzwl
mov
add
test
je
dec
jne
jmp
mov
sub
movzwl
mov
add
test
je
dec
je
dec
jne
test
jne
xor
mov
test
jne
xor
cmp
jne
mov
push
mov
pop
jmp
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
mov
add
test
jne
sub
sar
dec
pop
ret
mov
push
mov
push
mov
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
pop
pop
pop
ret
mov
test
jne
mov
jmp
mov
sub
movzwl
mov
add
test
je
dec
jne
xor
test
jne
mov
call
push
pop
mov
mov
jmp
mov
push
mov
mov
test
js
cmp
jle
cmp
jne
mov
pop
ret
mov
mov
pop
ret
call
movl
call
or
pop
ret
mov
push
mov
sub
pushl
lea
call
movzbl
mov
mov
test
jne
cmpl
je
mov
mov
movzwl
and
jmp
xor
test
je
xor
inc
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
pushl
push
call
add
pop
ret
mov
push
mov
mov
push
push
test
je
mov
test
jne
call
push
pop
mov
call
mov
jmp
mov
test
jne
mov
jmp
mov
sub
mov
mov
inc
test
je
dec
jne
test
jne
movb
call
push
pop
mov
mov
jmp
xor
pop
pop
pop
ret
mov
push
mov
push
mov
cmp
ja
push
push
cmpl
jne
call
push
call
push
call
pop
pop
test
je
mov
jmp
xor
inc
push
push
pushl
call
mov
test
jne
push
pop
cmp
je
push
call
pop
test
jne
jmp
call
mov
call
mov
mov
pop
pop
jmp
push
call
pop
call
movl
xor
pop
pop
ret
mov
push
mov
mov
test
je
push
xor
pop
div
cmp
jae
call
movl
xor
pop
ret
imul
push
mov
test
jne
inc
xor
cmp
ja
push
push
pushl
call
test
jne
cmpl
je
push
call
pop
test
jne
mov
test
je
movl
xor
jmp
mov
test
je
movl
pop
pop
ret
mov
push
mov
cmpl
jne
pushl
call
pop
pop
ret
push
mov
test
jne
pushl
call
pop
xor
jmp
push
jmp
test
jne
inc
push
pushl
push
pushl
call
mov
test
jne
cmp
je
push
call
pop
test
je
cmp
jbe
push
call
pop
call
movl
xor
pop
pop
pop
ret
call
mov
call
push
call
pop
mov
jmp
call
mov
call
push
call
pop
mov
mov
jmp
mov
push
mov
push
mov
push
or
test
jne
call
movl
call
or
jmp
testb
je
push
call
push
mov
call
push
call
push
call
add
test
jns
or
jmp
mov
test
je
push
call
andl
pop
andl
mov
pop
pop
pop
ret
push
push
call
orl
xor
mov
test
setne
test
jne
call
movl
call
or
jmp
testb
je
andl
mov
call
ret
push
call
pop
andl
push
call
pop
mov
movl
call
jmp
mov
push
call
pop
ret
mov
push
mov
mov
call
mov
xor
mov
mov
push
mov
push
xor
mov
mov
mov
cmp
jne
xor
jmp
cmp
jne
call
mov
call
movl
call
or
jmp
mov
sar
mov
push
lea
mov
and
shl
mov
add
sar
mov
mov
cmp
je
cmp
jne
mov
not
test
jne
call
andl
call
movl
call
jmp
testb
je
push
push
push
push
call
add
push
call
pop
test
je
mov
testb
je
call
mov
xor
cmp
lea
sete
push
mov
pushl
mov
call
xor
cmp
je
cmp
je
cmp
je
call
mov
mov
xor
mov
cmp
jbe
mov
mov
test
jne
mov
mov
xor
cmp
sete
mov
mov
add
cmpl
je
mov
mov
mov
andl
push
lea
push
jmp
movsbl
push
call
pop
test
je
mov
sub
add
xor
inc
cmp
jbe
push
lea
push
push
call
add
cmp
je
inc
incl
jmp
push
push
lea
push
call
add
cmp
je
xor
push
push
push
lea
push
push
lea
push
push
pushl
inc
incl
call
mov
test
je
push
lea
push
push
lea
push
mov
mov
pushl
call
test
je
mov
mov
add
mov
cmp
jl
cmpl
je
push
lea
push
push
lea
push
mov
mov
movb
pushl
call
test
je
cmpl
jl
incl
incl
jmp
cmp
je
cmp
jne
movzwl
xor
cmp
sete
add
addl
mov
mov
cmp
je
cmp
jne
pushl
call
pop
cmp
jne
addl
cmpl
je
push
pop
push
mov
call
pop
cmp
jne
incl
incl
mov
cmp
jb
jmp
mov
mov
incl
mov
mov
mov
jmp
xor
mov
testb
je
cmpb
mov
jne
mov
cmp
jbe
mov
xor
sub
lea
cmp
jae
mov
inc
inc
mov
cmp
jne
incl
movb
inc
inc
mov
inc
inc
cmp
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
cmpb
jne
mov
cmp
jbe
andl
mov
sub
push
lea
pop
cmp
jae
movzwl
add
add
mov
cmp
jne
add
push
pop
mov
mov
add
add
add
mov
add
cmpl
jb
mov
lea
sub
push
lea
push
push
lea
push
mov
mov
pushl
call
test
je
mov
add
cmp
jl
mov
sub
cmp
jb
jmp
mov
mov
cmp
jbe
mov
andl
sub
push
lea
pop
cmp
jae
mov
movzwl
add
add
cmp
jne
push
pop
mov
add
add
add
mov
add
cmpl
jb
xor
push
push
push
lea
push
lea
sub
cltd
sub
sar
push
mov
push
push
push
call
mov
cmp
je
push
lea
push
mov
sub
push
lea
push
mov
mov
pushl
call
test
je
add
cmp
jg
jmp
call
mov
cmp
jg
mov
sub
mov
cmp
jb
jmp
push
lea
push
pushl
pushl
pushl
call
test
je
mov
andl
mov
jmp
call
mov
cmpl
jne
cmpl
je
push
pop
cmp
jne
call
movl
call
mov
jmp
pushl
call
pop
jmp
mov
mov
testb
je
mov
cmpb
jne
xor
jmp
call
movl
call
andl
or
jmp
mov
sub
pop
mov
pop
xor
pop
call
leave
ret
push
push
call
mov
cmp
jne
call
andl
call
movl
or
jmp
test
js
cmp
jb
call
andl
call
movl
call
jmp
mov
sar
lea
mov
and
shl
mov
movsbl
and
je
push
call
pop
andl
mov
testb
je
pushl
pushl
push
call
add
mov
jmp
call
movl
call
andl
orl
movl
call
mov
call
ret
mov
push
call
pop
ret
push
push
call
mov
cmp
jne
call
movl
or
jmp
test
js
cmp
jb
call
movl
call
jmp
mov
sar
lea
mov
and
shl
mov
movsbl
and
je
push
call
pop
andl
mov
testb
je
push
call
pop
push
call
test
jne
call
mov
jmp
andl
cmpl
je
call
mov
mov
call
movl
orl
movl
call
mov
call
ret
mov
push
call
pop
ret
mov
push
mov
mov
test
je
sub
cmpl
jne
push
call
pop
pop
ret
mov
push
mov
sub
mov
xor
mov
mov
push
xor
push
push
cmp
jle
mov
mov
dec
cmp
je
inc
cmp
jne
or
mov
sub
dec
cmp
jge
inc
mov
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
mov
cmp
jne
xor
jmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
mov
cmp
je
push
pushl
pushl
pushl
push
pushl
call
test
je
mov
push
push
push
pushl
pushl
pushl
call
mov
cmp
je
mov
test
je
mov
cmp
je
cmp
jg
push
pushl
push
pushl
pushl
pushl
call
jmp
mov
cmp
jle
push
xor
pop
div
cmp
jb
lea
cmp
ja
call
mov
cmp
je
movl
add
jmp
push
call
pop
cmp
je
movl
add
mov
jmp
xor
cmp
je
pushl
push
pushl
pushl
pushl
pushl
call
test
je
push
push
cmp
jne
push
push
jmp
pushl
pushl
pushl
push
push
pushl
call
mov
push
call
pop
pushl
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
push
mov
xor
mov
push
xor
push
push
mov
cmp
jne
mov
mov
mov
mov
mov
xor
cmp
push
push
pushl
setne
pushl
lea
push
pushl
call
mov
cmp
jne
xor
jmp
jle
cmp
ja
lea
cmp
ja
call
mov
cmp
je
movl
jmp
push
call
pop
cmp
je
movl
add
mov
test
je
lea
push
push
push
call
add
push
push
pushl
pushl
push
pushl
call
test
je
pushl
push
push
pushl
call
mov
push
call
mov
pop
lea
pop
pop
pop
mov
xor
call
leave
ret
mov
push
mov
sub
pushl
lea
call
pushl
lea
pushl
pushl
pushl
pushl
pushl
push
call
add
cmpb
je
mov
andl
leave
ret
mov
push
mov
push
mov
test
je
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
add
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
mov
test
je
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
mov
cmp
je
push
call
pop
pop
pop
ret
mov
push
mov
push
push
mov
push
mov
mov
mov
push
push
mov
call
or
pop
cmp
jne
call
movl
mov
mov
jmp
pushl
lea
push
pushl
push
call
mov
cmp
jne
call
test
je
push
call
pop
jmp
mov
sar
mov
and
shl
lea
andb
mov
mov
pop
pop
leave
ret
push
push
call
or
mov
mov
mov
cmp
jne
call
andl
call
movl
mov
mov
jmp
test
js
cmp
jb
call
andl
call
movl
call
jmp
mov
sar
lea
mov
and
shl
mov
movsbl
and
je
push
call
pop
andl
mov
testb
je
pushl
pushl
pushl
pushl
call
add
mov
mov
jmp
call
movl
call
andl
mov
mov
movl
call
mov
mov
call
ret
pushl
call
pop
ret
mov
push
mov
incl
push
call
pop
mov
mov
test
je
orl
movl
jmp
orl
lea
mov
movl
mov
andl
mov
pop
ret
push
call
pop
ret
pxor
push
push
mov
and
test
jne
mov
and
shr
je
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
dec
jne
test
je
mov
shr
je
jmp
lea
movdqa
lea
dec
jne
and
je
mov
xor
shr
je
mov
lea
dec
jne
and
je
mov
inc
dec
jne
pop
pop
ret
mov
neg
add
sub
xor
push
mov
and
je
mov
inc
dec
jne
shr
je
mov
lea
dec
jne
pop
jmp
push
call
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
call
test
je
push
call
pop
testb
je
push
push
push
call
add
push
call
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
mov
mov
mov
mov
add
cmp
jbe
cmp
jb
cmp
jb
cmpl
je
push
push
and
and
cmp
pop
pop
jne
jmp
test
jne
shr
and
cmp
jb
rep
jmp
mov
mov
sub
jb
and
add
jmp
jmp
nop
jmp
nop
in
inc
add
je
add
inc
add
rorl
inc
add
add
jmp
add
add
cmp
jb
rep
jmp
lea
and
mov
mov
mov
shr
mov
add
add
cmp
jb
rep
jmp
nop
and
mov
mov
add
shr
add
cmp
jb
rep
jmp
lea
mov
inc
add
inc
add
inc
add
inc
add
add
inc
in
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
shlb
fdivs
in
inc
add
je
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
lea
lea
test
jne
shr
and
cmp
jb
std
rep
cld
jmp
mov
neg
jmp
lea
mov
mov
cmp
jb
and
sub
jmp
jmp
nop
jo
inc
add
inc
add
mov
sub
shr
sub
cmp
jb
std
rep
cld
jmp
lea
mov
and
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
nop
mov
and
mov
mov
mov
mov
shr
mov
sub
sub
cmp
jb
std
rep
cld
jmp
lea
adc
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
inc
add
inc
add
inc
sbb
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
add
add
jmp
mov
insb
jbe
add
add
inc
add
leave
ret
nop
mov
mov
mov
pop
pop
leave
ret
lea
mov
mov
mov
mov
mov
pop
pop
leave
ret
nop
mov
mov
mov
mov
mov
mov
mov
pop
pop
leave
ret
mov
push
mov
cmpl
jne
call
movl
call
or
pop
ret
pushl
push
pushl
call
pop
ret
mov
push
mov
push
mov
push
push
call
pop
cmp
je
mov
cmp
jne
testb
jne
cmp
jne
testb
je
push
call
push
mov
call
pop
pop
cmp
je
push
call
pop
push
call
test
jne
call
mov
jmp
xor
push
call
mov
sar
mov
and
shl
pop
movb
test
je
push
call
pop
or
jmp
xor
pop
pop
pop
ret
push
push
call
mov
cmp
jne
call
andl
call
movl
or
jmp
test
js
cmp
jb
call
andl
call
movl
call
jmp
mov
sar
lea
mov
and
shl
mov
movsbl
and
je
push
call
pop
andl
mov
testb
je
push
call
pop
mov
jmp
call
movl
orl
movl
call
mov
call
ret
mov
push
call
pop
ret
mov
push
mov
push
mov
mov
test
je
test
je
pushl
call
andl
xor
pop
mov
mov
mov
pop
pop
ret
mov
push
mov
push
cmpl
jne
call
mov
cmp
jne
mov
leave
ret
push
lea
push
push
lea
push
push
call
test
je
mov
leave
ret
mov
push
mov
sub
push
push
mov
xor
cmp
je
cmp
je
cmp
jne
mov
cmp
je
xor
mov
xor
pop
pop
leave
ret
pushl
lea
call
mov
cmp
jne
mov
cmp
je
movzbl
mov
cmp
je
mov
andl
xor
inc
jmp
lea
push
movzbl
push
call
pop
pop
test
je
mov
mov
cmp
jle
cmp
jl
xor
cmp
setne
push
pushl
push
push
push
pushl
call
test
mov
jne
mov
cmp
jb
cmp
je
mov
cmp
je
mov
andl
jmp
call
movl
cmp
je
mov
andl
or
jmp
xor
cmp
setne
push
pushl
mov
push
push
push
pushl
call
test
jne
jmp
mov
push
mov
push
pushl
pushl
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
lea
sub
sbb
not
and
mov
and
cmp
jb
mov
pop
xchg
mov
mov
ret
sub
test
jmp
mov
push
mov
mov
push
xor
push
push
cmp
jl
cmp
jae
mov
sar
mov
and
lea
mov
shl
testb
je
cmpl
je
cmpl
jne
sub
je
dec
je
dec
jne
push
push
jmp
push
push
jmp
push
push
call
mov
orl
xor
jmp
call
movl
call
mov
or
pop
pop
pop
pop
ret
mov
push
mov
mov
cmp
jne
call
andl
call
movl
or
pop
ret
test
js
cmp
jb
call
andl
call
movl
call
jmp
mov
sar
mov
and
shl
testb
je
mov
pop
ret
push
push
call
mov
mov
sar
mov
and
shl
add
movl
xor
cmp
jne
push
call
pop
mov
cmp
jne
push
lea
push
call
test
jne
mov
incl
movl
call
cmp
je
mov
sar
and
shl
mov
lea
push
call
mov
call
ret
xor
mov
push
call
pop
ret
mov
push
mov
mov
mov
and
sar
mov
shl
lea
push
call
pop
ret
push
lea
sub
and
add
sbb
or
pop
jmp
push
lea
sub
and
add
sbb
or
pop
jmp
push
mov
and
test
jne
mov
and
shr
je
jmp
lea
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
movdqa
lea
lea
dec
jne
test
je
mov
shr
test
je
lea
movdqa
movdqa
lea
lea
dec
jne
and
je
mov
shr
je
mov
mov
lea
lea
dec
jne
mov
and
je
mov
mov
inc
inc
dec
jne
pop
pop
pop
pop
ret
mov
sub
sub
push
mov
mov
and
je
mov
mov
inc
inc
dec
jne
shr
je
mov
mov
lea
lea
dec
jne
pop
jmp
xor
push
push
push
push
push
push
push
call
mov
ret
mov
cmp
je
cmp
je
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
or
lea
add
mov
or
je
add
bt
jae
mov
add
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
jne
mov
cmp
jne
or
je
cmp
jne
or
je
shr
cmp
jne
or
je
cmp
jne
add
add
or
jne
mov
xor
ret
nop
sbb
shl
add
ret
test
je
mov
add
cmp
jne
add
or
je
test
je
mov
add
cmp
jne
or
je
cmp
jne
or
je
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
push
push
push
push
push
push
push
push
mov
lea
mov
or
je
add
bts
jmp
mov
mov
mov
or
je
add
bt
jae
lea
add
pop
leave
ret
push
mov
push
push
push
mov
or
je
mov
mov
mov
mov
mov
lea
mov
or
mov
je
or
je
add
add
cmp
jb
cmp
ja
add
cmp
jb
cmp
ja
add
cmp
jne
sub
jne
xor
cmp
je
mov
jb
neg
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
movl
movl
movl
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
movl
jmp
mov
add
mov
cmpl
jge
mov
push
push
call
add
cmpl
jne
jmp
jmp
movl
jmp
mov
add
mov
cmpl
jge
mov
push
push
call
add
movl
jmp
mov
add
mov
cmpl
jge
mov
push
push
call
add
cmpl
jne
jmp
jmp
jmp
jmp
mov
push
push
call
add
mov
push
push
call
add
movl
movl
mov
mov
mov
mov
mov
mov
mov
movsbl
mov
add
mov
test
je
mov
mov
cmpb
je
cmpb
je
jmp
mov
add
mov
jmp
mov
add
mov
jmp
mov
add
mov
jmp
mov
add
add
push
mov
push
mov
push
push
call
add
xor
mov
pop
ret
push
mov
xor
pop
ret
fs
add
lods
ret
pushf
ret
mov
add
jle
add
jb
add
push
ret
inc
ret
xor
add
pop
mov
add
test
add
lods
mov
add
out
add
cli
mov
add
push
mov
add
inc
mov
add
mov
jb
add
cmpb
add
mov
add
clc
mov
add
xor
add
inc
rolb
pop
rolb
rolb
jb
add
add
add
rolb
mov
add
enter
fadd
add
lock
inc
add
sbb
add
sub
add
roll
pop
roll
pusha
roll
insb
roll
js
add
add
add
roll
lods
roll
mov
roll
roll
out
add
clc
roll
or
add
sbb
add
xor
add
add
add
cmpb
add
add
mov
add
add
mov
add
adc
add
adc
add
inc
add
adc
add
inc
add
push
inc
add
jno
add
sbb
add
add
add
push
jge
add
add
add
jne
gs
insb
outsl
outsl
jo
gs
arpl
imul
cmp
add
add
dec
outsb
outsb
gs
insb
outsl
outsl
jo
gs
arpl
imul
cmp
add
dec
outsl
outsl
jo
gs
je
fs
cmp
add
add
dec
jne
jo
and
jae
outsl
jo
and
cmp
add
jns
arpl
jb
arpl
and
jb
popa
insl
add
add
or
jo
jb
popa
jae
and
and
ja
jb
popa
jae
and
and
je
insb
cmp
and
xor
xor
pop
pop
pop
pop
pop
add
or
outsw
jb
and
insl
cmp
and
add
inc
data16
jb
je
imul
add
add
dec
jne
gs
insb
outsl
outsl
jo
gs
arpl
imul
cmp
add
add
dec
outsb
outsb
gs
insb
outsl
outsl
jo
gs
arpl
imul
cmp
add
dec
outsl
outsl
jo
gs
je
fs
cmp
add
add
dec
jne
jo
and
jae
outsl
jo
and
cmp
add
js
add
add
inc
outsb
jns
arpl
jb
arpl
and
jb
popa
insl
add
add
or
jo
jb
popa
jae
and
and
ja
jb
popa
jae
and
and
je
insb
cmp
and
add
jne
insb
add
add
add
add
outsb
jne
insb
sub
add
add
push
add
add
adc
add
add
add
add
inc
inc
add
xor
add
add
and
push
pop
pop
or
aaa
xor
push
push
pop
add
and
or
add
add
pusha
push
add
js
js
js
or
or
add
add
or
add
or
or
pop
or
add
cmp
push
add
outsl
jb
js
je
jb
arpl
jae
add
jae
arpl
outsl
add
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
add
add
or
add
add
add
push
add
and
add
jb
outsl
add
or
add
dec
add
inc
add
add
jb
jb
outsl
add
or
add
add
add
inc
add
dec
add
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
jae
add
add
push
add
dec
add
add
outsl
add
add
add
jb
outsl
add
and
je
push
add
add
jae
jae
add
bound
insb
add
and
add
jb
imul
and
outsb
add
je
imul
and
arpl
outsl
add
add
add
outsb
add
je
imul
imul
je
imul
or
push
add
imul
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
je
and
imul
insl
add
jae
je
and
insb
add
imul
add
add
add
add
and
jb
add
jne
insb
add
add
data16
add
popa
add
add
outsb
add
and
popa
add
and
dec
add
dec
add
add
outsl
add
jo
imul
add
add
add
add
insb
add
sub
and
data16
outsb
add
je
imul
and
data16
outsl
add
and
popa
add
add
popa
add
add
add
add
outsl
add
jae
je
jb
jne
arpl
je
outsl
add
and
outsl
add
and
data16
outsl
add
and
inc
add
add
popa
add
outsb
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
arpl
popa
add
add
add
outsb
add
outsl
add
insl
add
je
imul
or
add
add
add
add
add
add
add
add
je
je
add
jo
je
and
je
outsl
add
add
outsb
add
je
imul
imul
and
je
push
add
push
add
add
outsl
add
add
add
add
outsb
add
add
outsb
add
add
add
add
add
jae
and
imul
imul
je
add
and
popa
add
add
jne
add
add
outsb
add
add
outsl
add
jb
and
popa
add
jo
insb
add
arpl
popa
add
add
outsb
add
add
add
add
add
add
add
add
add
add
push
add
add
outsl
add
add
outsb
add
je
imul
imul
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
outsb
add
je
imul
imul
and
push
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
insb
add
ja
imul
imul
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
jae
je
add
outsl
add
add
outsb
add
je
imul
imul
je
imul
or
add
add
add
add
add
add
add
add
add
jb
add
add
imul
jne
popa
add
add
jne
outsb
add
je
imul
and
arpl
popa
add
add
add
add
add
add
add
add
or
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
pop
add
outsb
add
js
imul
popa
add
add
imul
je
popa
add
insb
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
bound
insb
add
and
je
outsl
add
add
jo
add
and
arpl
outsl
add
jae
outsl
add
add
add
add
imul
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
add
jo
and
add
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsb
add
js
jo
add
je
add
add
jne
insb
add
add
add
add
add
add
add
imul
add
jb
jb
outsl
add
or
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
je
push
add
add
add
add
add
add
add
add
add
add
add
add
bound
outsl
add
je
sub
sub
and
push
add
add
add
outsb
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
add
jbe
imul
outsb
add
add
je
or
add
add
add
add
add
add
add
outsl
add
add
outsb
add
jne
add
and
jae
jo
popa
add
add
add
outsl
add
and
popa
add
add
insl
add
outsb
add
add
add
add
add
add
add
add
add
add
add
insb
add
popa
add
add
add
add
outsl
add
outsb
add
add
jne
jo
jo
outsl
add
je
and
outsb
add
je
and
insb
add
popa
add
add
add
add
add
add
stos
inc
add
add
add
add
add
stos
inc
add
add
add
stos
inc
add
add
add
add
add
stos
inc
add
add
add
test
add
cwtl
test
add
sub
add
fsubrs
add
push
add
add
cmpsl
inc
add
add
test
inc
add
add
add
inc
add
add
add
add
add
cmpsb
inc
add
add
add
inc
add
add
and
inc
add
add
or
add
mov
add
in
inc
add
add
add
mov
imul
outsl
add
outsl
add
je
and
push
add
jae
jne
popa
add
add
sub
sub
and
push
add
outsb
add
add
add
add
add
jb
popa
add
jns
add
add
or
or
add
add
add
add
add
add
jo
jb
outsl
add
jb
popa
add
and
outsb
add
insl
add
and
jne
outsb
add
outsb
add
ja
outsb
add
add
add
add
jne
outsb
add
add
add
add
jb
jb
outsl
add
and
or
or
push
add
outsl
add
jb
popa
add
cmp
and
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
or
add
add
add
add
add
or
add
nop
add
add
add
add
add
dec
add
push
add
inc
add
add
add
add
add
add
add
jae
jb
add
jae
gs
popa
insb
jne
add
jae
gs
popa
insb
jne
add
jae
insb
insb
outsl
arpl
add
add
dec
add
add
insl
add
add
jae
add
add
add
add
add
add
dec
add
dec
add
add
add
and
jns
jns
jns
jns
add
dec
add
das
add
add
add
jns
add
add
push
add
add
add
inc
add
add
add
inc
add
arpl
add
bound
add
add
add
dec
add
jbe
add
bound
add
add
add
dec
add
je
outsl
add
add
add
push
add
jo
je
add
bound
add
add
inc
add
add
jae
je
add
add
dec
add
insb
add
add
add
dec
add
outsb
add
add
add
inc
add
jb
imul
dec
add
jb
arpl
push
add
bound
jb
jne
popa
add
jns
add
add
dec
add
outsb
add
popa
add
jns
add
inc
add
arpl
add
dec
add
jbe
add
dec
add
je
add
push
add
jo
add
inc
add
add
add
jne
insb
add
add
jne
outsb
add
add
popa
add
add
inc
add
jb
add
dec
add
jb
add
inc
add
bound
add
dec
add
outsb
add
add
popa
add
add
add
jns
add
add
inc
add
imul
jns
add
add
push
add
jne
jb
jae
add
jns
add
add
push
add
add
add
add
jns
add
push
add
add
add
jns
add
dec
add
outsb
add
add
add
add
push
add
outsb
add
add
add
add
push
add
je
add
inc
add
imul
push
add
add
add
add
add
dec
add
outsb
add
add
jne
outsb
add
add
cmp
cmp
add
add
fs
dec
dec
dec
dec
and
and
jns
add
das
fs
jns
add
add
push
dec
add
inc
dec
add
inc
arpl
bound
add
add
dec
outsl
jbe
insl
bound
add
add
dec
arpl
gs
push
gs
gs
bound
add
add
addr16
je
add
insb
jns
add
add
outsb
add
add
inc
jo
imul
arpl
add
inc
bound
popa
jb
add
add
dec
popa
outsb
jne
jb
add
add
jbe
dec
arpl
gs
inc
jne
add
insb
add
outsb
add
jns
inc
jo
add
jb
inc
bound
dec
popa
outsb
add
je
jb
popa
jns
add
add
imul
jne
jae
popa
jns
add
add
outsb
gs
popa
jns
add
push
jne
jae
popa
jns
dec
outsl
outsb
fs
jns
add
outsb
fs
jns
add
je
inc
jb
add
add
add
add
outsb
add
outsb
add
add
add
addb
add
add
adc
add
test
xor
or
sub
cmp
addb
add
xor
push
push
mov
add
and
orb
pusha
push
or
pop
js
jo
jo
or
add
or
or
pop
or
add
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
je
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
je
arpl
gs
imul
gs
popa
addr16
outsl
js
add
push
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
test
test
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
sub
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
test
test
test
test
test
test
adc
adc
adc
adc
adc
adc
adc
addl
addl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
add
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
addb
xchg
lea
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
test
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
jnp
jge
jg
addl
mov
xchg
xchg
xchg
xchg
xchg
xchg
cwtl
cltd
lcall
mov
cmpsb
cmpsl
test
stos
stos
lods
lods
scas
scas
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
iret
rcl
rcl
aam
xlat
fcomp
fcmovu
loopne
loop
in
out
call
in
out
out
lock
repnz
cmc
div
clc
stc
cli
sti
cld
std
incl
add
add
push
pop
or
or
or
push
movups
adc
adc
push
pop
sbb
sbb
sbb
push
pop
and
and
and
es
sub
sub
sub
cs
xor
xor
xor
ss
cmp
cmp
cmp
ds
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pusha
popa
bound
gs
imul
jo
jb
je
jbe
js
jp
jl
jle
add
dec
add
dec
add
push
add
add
dec
add
add
inc
add
add
add
add
mov
add
add
add
mov
add
add
add
je
add
add
add
int3
mov
add
push
mov
add
add
add
es
add
cmp
add
add
add
mov
add
fs
add
lods
ret
pushf
ret
mov
add
jle
add
jb
add
push
ret
inc
ret
xor
add
pop
mov
add
test
add
lods
mov
add
out
add
cli
mov
add
push
mov
add
inc
mov
add
mov
jb
add
cmpb
add
mov
add
clc
mov
add
xor
add
inc
rolb
pop
rolb
rolb
jb
add
add
add
rolb
mov
add
enter
fadd
add
lock
inc
add
sbb
add
sub
add
roll
pop
roll
pusha
roll
insb
roll
js
add
add
add
roll
lods
roll
mov
roll
roll
out
add
clc
roll
or
add
sbb
add
xor
add
add
add
cmpb
add
add
mov
add
add
mov
add
adc
inc
push
inc
outsl
insb
outsl
jb
add
inc
dec
dec
inc
dec
inc
xor
cs
insb
add
jns
insb
inc
gs
imul
jne
jbe
add
insb
inc
gs
popa
jo
jbe
add
insb
inc
insb
jne
push
insb
inc
outsl
insb
outsl
jb
jne
jbe
cmp
insb
push
jb
outsb
jae
popa
je
data16
dec
push
inc
dec
inc
dec
xor
cs
insb
add
or
push
gs
outsb
jae
popa
insb
insb
inc
imul
gs
jne
jb
push
popa
insb
jne
push
add
or
push
jne
jb
push
popa
insb
jne
inc
add
push
add
je
imul
outsl
outsb
dec
outsb
outsw
push
add
push
push
dec
dec
dec
cs
insb
add
inc
outsl
insl
insl
popa
outsb
fs
imul
dec
gs
jo
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
arpl
inc
gs
je
jb
jne
dec
outsb
outsw
push
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
cmp
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
lret
arpl
gs
outsl
imul
add
outsb
push
gs
js
gs
imul
gs
add
push
outsb
push
gs
js
gs
imul
gs
add
dec
jae
bound
addr16
jb
jae
outsb
je
ljmp
gs
outsl
imul
add
gs
imul
outsl
arpl
jae
add
add
je
jne
jb
outsb
je
jb
arpl
jae
inc
add
je
jb
arpl
fs
jae
add
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sbb
inc
js
je
jb
arpl
jae
and
je
inc
imul
je
je
dec
popa
outsb
fs
add
adc
inc
gs
outsl
fs
gs
imul
add
adc
inc
gs
outsl
fs
gs
imul
add
popa
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
push
dec
jne
je
inc
jns
gs
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
outsl
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
repz
je
imul
roll
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
insb
jae
insb
insb
outsl
arpl
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
gs
popa
insb
jne
add
add
insb
jae
jb
gs
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jne
jb
outsb
je
push
dec
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
popa
jo
jb
popa
je
add
cmpsl
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
xchg
add
je
imul
je
add
add
je
jne
jb
outsb
je
jb
arpl
jae
add
inc
gs
jns
je
insl
push
imul
insb
gs
imul
insb
gs
iret
add
popa
jo
jb
add
jb
inc
gs
push
dec
outsb
outsw
add
inc
gs
inc
push
add
aaa
add
je
inc
dec
inc
push
add
or
dec
jae
popa
insb
imul
add
add
je
push
outsb
ja
outsb
add
add
fs
imul
add
lret
add
popa
jo
insb
insb
outsl
arpl
rolb
dec
gs
jo
gs
insb
insb
outsl
arpl
lcall
outsb
jae
insb
gs
push
add
lods
add
je
outsl
outsb
jae
insb
gs
outsl
fs
push
add
jne
push
inc
jne
data16
add
sub
popa
jo
je
imul
add
insb
je
inc
jns
gs
outsl
push
imul
imul
je
imul
push
add
data16
gs
imul
gs
add
dec
jae
jb
arpl
jae
jb
gs
je
jb
push
jb
jae
outsb
je
aam
dec
gs
jo
imul
inc
insb
outsl
jae
dec
popa
outsb
fs
add
gs
outsl
outsb
jae
insb
gs
add
push
je
dec
popa
outsb
fs
add
popl
inc
jb
popa
je
inc
imul
dec
inc
dec
xor
cs
insb
push
mov
dec
mov
cli
cmc
hlt
js
cmc
loopne
icebp
cmp
sub
cmp
insl
pusha
fisubrl
into
inc
fs
or
aad
pusha
sub
pop
sbb
pop
or
pop
adc
xor
shlb
dec
in
mov
leave
and
sbb
mov
and
xor
adc
xchg
subb
fwait
lcall
pop
cwtl
out
aad
mov
rorl
xchg
xchg
orl
decl
xchg
jo
stc
mov
out
xchg
mov
popa
shrl
jecxz
pop
pop
xlat
pop
pop
aam
addr16
dec
scas
adc
or
nop
mov
mov
xchg
mov
sub
cs
push
lods
out
lea
adc
mov
movsl
data16
fcoms
jbe
and
inc
add
mov
xchg
jg
aas
mov
xchg
call
or
loopne
in
call
imul
push
leave
addr16
arpl
pop
mov
push
ror
int
dec
mov
jl
repz
dec
pop
mov
mov
cmp
daa
nop
adc
fwait
hlt
stos
adc
stc
mov
pop
test
aad
xchg
lods
sbb
mov
sbb
clc
adc
popa
add
jl
dec
fst
roll
pop
shlb
add
jno
popf
stos
sub
sub
fs
bound
pop
pop
ljmp
xchg
mov
in
dec
lea
test
ja
jl
inc
adcl
jns
cmp
outsl
jb
xor
bound
fidivl
push
pop
gs
into
sub
push
pop
pop
aam
pusha
xor
push
lds
push
sub
dec
mov
dec
inc
test
inc
inc
xchg
inc
and
cmp
sub
das
movsb
clc
xor
and
add
es
adc
push
xchg
fistps
xchg
push
add
adc
aad
cli
cld
or
lea
push
xchg
cmp
or
add
add
mov
ds
sub
xor
das
add
and
pop
and
mov
or
or
or
or
ret
mov
xor
scas
lds
cwtl
cmp
mov
mov
ficoml
out
out
es
cmpsl
in
pop
fmulp
or
ficompl
sbb
dec
rol
cld
sub
push
ja
outsl
add
mov
xchg
or
dec
std
mov
out
inc
jns
jmp
jae
dec
in
fs
pop
iret
jle
pop
lcall
xchg
dec
dec
inc
mov
inc
inc
test
ds
xor
ss
test
sub
mov
sub
in
sub
and
pop
sbb
adc
fcoms
pop
or
or
push
add
cli
sti
incb
hlt
repz
test
icebp
in
insb
mov
rcr
ljmp
pop
mov
xlat
daa
mov
shlb
into
int
mov
scas
mov
lds
sbb
mov
mov
sub
mov
and
lods
subl
in
movsl
jnp
pushf
fwait
add
sahf
jno
cltd
xchg
or
imul
imul
jg
dec
adcb
js
inc
jg
jno
jne
ss
push
outsb
shrl
insl
dec
arpl
inc
pusha
popa
pop
lds
pop
ret
sbb
dec
push
mov
push
sub
inc
mov
dec
and
movsl
or
cmp
cmp
xor
ss
sub
jne
repnz
and
in
sub
sbb
and
push
pop
sbb
sbb
adc
fcoms
rorb
int3
add
add
cli
sti
insl
mov
rep
mov
in
data16
mov
stos
in
mov
inc
mov
xlat
and
fisubl
cltd
xlat
or
int
mov
add
lds
test
mov
jb,pn
jno
cmpsl
stos
and
mov
pop
pushf
popf
cwtl
std
popa
lahf
push
xchg
xchg
xchg
push
cwtl
push
mov
roll
xchg
addb
jne
jns
cmp
outsl
jb
xor
imul
xor
fs
shrl
addr16
pop
pop
pop
fistpl
pusha
push
push
push
mov
dec
dec
mov
dec
inc
stos
or
inc
xchg
add
aaa
cmp
xor
scas
clc
xor
sub
popa
and
and
sbb
push
cwtl
fistps
sbb
dec
adc
or
aad
roll
or
incl
dec
ret
add
sar
hlt
cmc
lock
mov
in
dec
scas
lock
jecxz
inc
cmpsl
in
fildl
or
dec
popf
int
sarl
aam
mov
aas
mov
cmc
ret
sarb
mov
in
mov
mov
jbe
jmp
stos
scas
outsl
lods
lret
cmpsl
movsb
mov
mov
mov
add
mov
push
xchg
stos
mov
mov
dec
xchg
sbbb
jne
outsl
insb
imul
outsb
xchg
push
imul
mov
pop
mov
push
dec
fistpl
push
mov
adc
inc
inc
inc
mov
dec
scas
cmp
ds
xor
stos
cld
ss
xor
sub
cmc
xor
ljmp
jecxz
cwtl
sbb
pop
fs
mov
mov
push
or
add
push
jne
add
push
outsb
clc
stc
hlt
jl
sti
adc
repnz
inc
inc
out
vcvtss2si
imul
lcall
mov
and
out
adc
xor
cmpsl
in
mov
lret
ret
sahf
xlat
push
movsb
rol
mov
mov
mov
add
in
xchg
mov
push
movsb
movsl
mov
lods
in
cmpsb
popf
push
xchg
xchg
xchg
out
icebp
nop
movsb
xlat
push
scas
jb
stc
jo
adc
and
add
and
fiadds
out
outsl
in
outsb
add
or
and
jbe
arpl
push
pusha
popa
pop
mov
mov
mov
push
push
mov
push
fdivl
loopne
push
cmp
cmp
dec
inc
jmp
cmp
push
out
xor
xor
mov
fwait
mov
pushf
lods
and
jle
jne
xor
sbb
jae
push
sub
imul
pop
in
arpl
pop
in
sbb
inc
or
cmp
outsb
enter
jg
jns
push
aaa
sub
cmp
outsl
outsb
imul
and
and
sbb
mov
ret
sbb
push
xchg
ss
rorb
or
sub
cmp
cmp
mov
sub
sbb
test
xchg
push
pop
mov
mov
xchg
in
inc
daa
adc
sbb
sarb
jno
jne
dec
test
or
negl
les
mov
mov
push
fcmovnu
aad
xlat
cmpsb
pop
inc
dec
xor
ds
inc
cmp
add
jg
xor
das
sub
sub
sbb
in
or
mov
push
sbb
subl
and
adc
mov
popf
push
or
or
or
dec
lret
add
cli
paddb
or
or
sar
cld
fdecstp
out
ret
out
repnz
jmp
in
clc
sub
movsw
sbb
xlat
xchg
lcall
lret
pop
enter
les
int3
sub
mov
xor
mov
mov
fisubl
or
mov
movsb
adc
mov
bound
xchg
xchg
nop
lea
mov
mov
inc
jg
xchg
ja
jg
jno
sbb
jb
insb
mov
jecxz
ret
fcomip
or
push
gs
pop
test
into
pop
pop
rcrl
insl
pop
and
fdivs
push
cmp
inc
inc
inc
int3
inc
je
jmp
lds
xor
ss
adcl
mov
jmp
in
xorb
sub
jecxz
test
fnstsw
xchg
adc
lea
cmp
or
or
add
xchg
pop
stc
add
adc
push
push
roll
cmc
repnz
int
ljmp
sahf
fcompl
dec
arpl
popf
inc
into
in
and
lods
cltd
mov
iret
push
ret
sahf
or
shr
cld
mov
lea
les
mov
sbb
addr16
mov
popf
stos
pop
lcall
dec
add
mov
push
mov
jle
lods
xchg
pop
dec
jp
jge
call
je
jo
cmp
push
popa
jmp
pusha
ror
xor
scas
jecxz
push
leavew
mov
dec
pusha
mov
lahf
inc
inc
ds
cmp
adc
inc
cmp
aaa
rcll
cmc
sub
fucomip
and
and
jbe
pop
and
push
gs
adc
sbb
add
lods
add
ds
mov
gs
pop
inc
in
mov
shr
ljmp
jae
mov
out
mov
add
add
add
add
sar
add
add
add
sti
push
add
add
add
adc
add
add
add
add
add
add
add
add
add
mov
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
pop
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
adc
add
push
add
add
add
add
add
add
add
add
add
or
add
insb
add
add
add
add
add
add
add
sbb
add
jb
add
or
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
cmpsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
or
add
or
add
or
add
incl
add
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
add
arpl
addr16
insl
outsb
outsl
jo
jb
je
jbe
js
jp
add
add
add
inc
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
pop
pop
pop
add
filds
add
add
movsb
add
add
jns
and
add
add
add
cmpsb
filds
add
add
add
add
add
add
add
cmp
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
add
cmp
add
inc
incb
add
add
add
mov
in
call
add
add
add
add
mov
add
add
push
ficompl
and
pop
fisubrl
xor
adc
add
xor
incb
add
add
incl
add
lock
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
mov
add
mov
add
mov
add
mov
add
inc
add
add
inc
add
add
inc
add
add
add
inc
add
inc
add
inc
add
mov
add
mov
add
mov
add
inc
add
inc
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
add
mov
add
mov
add
mov
add
mov
add
mov
add
inc
add
add
mov
add
mov
add
inc
add
inc
add
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
inc
add
inc
add
inc
add
scas
inc
add
add
inc
add
inc
add
inc
add
inc
add
scas
inc
add
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
scas
inc
add
add
add
add
add
in
add
in
add
in
add
in
add
in
add
add
add
add
add
inc
add
mov
add
inc
add
mov
inc
add
inc
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
jg
jg
jg
je
inc
add
cli
push
add
cli
push
add
cli
push
add
out
add
mov
add
mov
add
add
add
add
add
aam
inc
add
incl
add
add
add
add
incl
add
add
add
add
call
adc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
sub
add
incl
add
add
sub
add
incl
add
add
incl
add
add
incl
add
add
sub
incl
add
add
sub
incl
add
add
incl
add
add
incl
add
add
xor
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
xor
incl
add
add
incl
add
add
incl
add
add
xor
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
lcall
inc
inc
add
add
add
incl
add
add
incl
add
add
pushl
push
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
inc
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
add
incl
add
add
incl
add
add
incl
add
add
js
add
add
add
incl
add
add
incl
add
add
incl
add
.byte
fwait
jnp
add
add
add
add
or
add
addb
add
add
add
add
add
add
add
pop
add
add
add
addb
add
add
add
add
add
add
add
or
add
add
pop
and
add
stos
add
in
add
add
add
mov
daa
mov
xor
cmp
sub
mov
sub
mov
xor
test
jmp
pmaxub
rclb
pop
push
stos
inc
aaa
ret
int3
xchg
dec
jbe
mov
or
jmp
ja
cmc
mov
sti
mov
fs
repnz
cmpsl
loopne
iret
shlb
push
push
pop
push
dec
dec
xlat
mov
int
mov
sub
ret
adc
cmp
cmc
xor
scas
in
push
and
dec
sbb
sahf
repz
sub
nop
xchg
xchg
cltd
pop
fwait
push
adc
sbb
popf
xchg
adcb
rorb
ljmp
jmp
cmp
mov
and
in
scas
insb
jl
fcmovnu
dec
mov
shll
pop
jl
leave
enter
jb
into
rorl
mov
cmp
mov
xor
shrb
sub
pop
and
cwtl
jmp
rcrb
sbb
xchg
in
int3
sbb
fwait
ret
or
cltd
nop
scas
or
push
push
mov
push
add
nop
mov
jl
jle
aaa
stc
ret
jne
ja
xor
mov
xor
gs
in
lods
pop
pop
pop
int
in
push
push
push
mov
fisubrl
adc
mov
or
popf
inc
inc
inc
pop
jg
adc
ss
jge
add
xor
mov
sub
pop
fs
sahf
xchg
nop
stc
pop
sbb
xchg
xchg
mov
push
adc
mov
mov
sarb
std
cld
lds
repz
imul
das
loope
jecxz
lods
push
out
fadds
arpl
roll
pop
sbb
xlat
ss
push
bswap
int3
iret
xor
inc
or
lea
cmpsb
push
les
xor
mov
sub
nop
hlt
mov
and
jb
stos
outsl
daa
sbb
mov
jg
cltd
pop
adc
mov
or
dec
add
add
js
jp
inc
add
ljmp
shll
xchg
outsl
outsb
popa
iret
sub
xchg
fs
pop
loope
pop
pop
pop
rcrb
adcl
ja
dec
dec
mov
inc
inc
scas
or
ja
mov
icebp
mov
cmp
mov
test
lods
scas
scas
or
xlat
movsl
movsb
cmpsl
cli
pusha
push
rcrl
pop
xchg
xchg
xchg
clc
pop
sbb
mov
movl
clc
imul
aaa
icebp
pop
mov
imul
scas
jno
in
in
out
inc
test
std
loop
in
lods
pop
repz
fisttpll
fs
rcl
rorb
pop
repz
enter
push
in
into
rol
mov
mov
pop
cmp
jae,pt
mov
mov
sub
inc
and
and
sbb
sbb
adc
pop
fcompl
test
xchg
xor
push
add
lret
add
push
sarb
add
cmp
xorl
ja
push
loope
hlt
jno
arpl
sub
ja
pop
pop
mov
push
push
rcrb
addr16
push
dec
mov
shlb
dec
dec
scas
pop
leave
push
inc
inc
inc
mov
sarl
aaa
mov
mov
jle
shrl
cmpsl
mov
sub
popa
and
pop
sbb
dec
adc
dec
push
addl
std
outsl
movb
jge
jmp
jb
out
loope
dec
test
loope
inc
xchg
pop
xlat
aad
xlat
and
dec
ror
int
xor
ret
mov
cmp
lods
add
inc
xor
xor
sub
movsl
icebp
mov
das
and
ljmp
fbld
test
xchg
std
adc
repz
or
incl
add
repz
jnp
inc
add
jno
fnstcw
sti
arpl
imul
outsl
outsb
daa
jmp
stos
and
dec
pop
pop
pop
iret
and
push
ret
push
fdivrl
adc
inc
inc
inc
inc
test
lret
mov
mov
mov
lods
mov
mov
outsl
xor
push
movsb
or
lcall
xchg
xchg
ljmp
repz
adc
addl
ret
sti
push
mov
shl
hlt
negl
outsb
lret
jmp
addr16
in
scas
insb
mov
mov
roll
pop
mov
xchg
push
mov
into
sarl
dec
stos
ret
mov
cmp
aas
aas
clc
mov
xor
repz
sub
pop
and
cltd
jmp
repz
sbb
adc
sbb
or
nop
fisttpll
femms
push
mov
add
pop
outsl
inc
decb
jge
repnz
testl
cld
cmp
xor
inc
pusha
pusha
arpl
sub
cmp
and
sbb
push
xchg
sbb
adc
push
push
ret
or
mov
inc
inc
mov
mov
je
mov
sub
jp
test
sbb
lods
mov
push
cmpsb
cltd
bound
fs
lahf
sahf
add
xchg
xchg
or
push
mov
sub
dec
lret
xor
dec
aas
movsl
pusha
roll
lds
lahf
pusha
mov
outsl
xchg
ljmp
loop
stos
insl
xchg
fcomp
fildl
bound
cltd
pop
xchg
leave
cmp
iret
into
daa
xchg
pop
add
mov
mov
xor
xor
daa
sub
xchg
repz
and
and
sbb
loope
xlat
push
push
adc
push
dec
iret
xchg
or
bswap
xchg
decl
jp
jge
inc
add
outsl
jae
ljmp
scas
xor
add
popa
pusha
fldcw
jmp
data16
lret
and
hlt
pop
pop
pop
les
fldl2e
push
push
push
mov
dec
dec
mov
inc
inc
mov
mov
pop
mov
mov
jl
push
mov
test
jno
dec
scas
scas
mov
mov
and
pushf
pushf
lahf
add
xor
xchg
xchg
cwtl
pop
clts
mov
add
sub
or
outsl
les
aaa
mov
jmp
jmp
out
push
cmpsl
imul
pop
pusha
faddl
push
push
rcl
aad
sahf
pop
push
lret
lret
push
push
rol
pop
mov
lds
cmp
xor
aaa
ss
out
mov
sub
das
nop
call
and
in
lahf
cmpsb
sbb
sbb
movlps
jp
popf
cmpsb
or
or
aam
jge
add
pop
leave
mov
push
jns
inc
add
jnp
jle
aaa
stc
jecxz
je
in
out
insb
fnstenv
shrl
in
int
pop
pop
mov
push
push
sbb
int
dec
dec
mov
rol
dec
dec
inc
xchg
or
mov
jg
xor
sub
jge
and
xor
lahf
mov
and
popf
mov
fmuls
mov
mov
lds
fdiv
cld
int3
xchg
inc
mov
sub
push
cmc
hlt
insl
in
repz
in
out
out
push
les
sub
sub
jecxz
and
insb
push
rcl
and
lret
mov
sub
aam
push
into
pop
movsb
cmp
push
movl
xor
stos
pop
pop
iret
loope
sbb
push
icebp
movd
sbb
xchg
cmp
cli
insb
adc
push
mov
lret
mov
lar
les
jp
mov
dec
fs
test
out
pop
mov
xchg
sbb
loope
subb
xor
es
outsl
push
inc
mov
pop
popf
pop
iret
push
push
pusha
aad
pop
mov
les
adc
sub
inc
sahf
sarb
sbb
mov
jl
fnsave
sahf
scas
mov
mov
pop
jmp
scas
mov
test
mov
mov
cwtl
addl
outsb
mov
hlt
gs
in
pop
mov
clc
fucom
loop
stos
insl
fcomp
dec
movsb
clc
fcmovnbe
sarb
cltd
pop
out
aam
leave
adc
iret
into
sub
xor
cmp
dec
xor
xor
and
mov
push
and
jae
push
ja
lock
pusha
into
test
push
in
nop
sub
dec
fsubs
and
inc
gs
push
pop
negb
adc
lock
mov
mov
mov
jp
xchg
jb
in
test
repnz
dec
jmp
jmp
xchg
loopne
mov
rcll
push
fadd
xor
inc
add
mov
mov
sub
test
test
xor
loope
cmpsb
cltd
jmp
lahf
jbe
push
and
scas
xchg
xchg
xchg
ficoml
xchg
mov
adc
xor
xchg
dec
cld
xlat
mov
fldl
idivb
jbe
xchg
ds
inc
mov
sub
jne
rcl
fcmovnu
cs
stos
pop
sbb
lret
lret
adc
dec
or
cmp
mov
test
xorb
mov
repz
sub
jle
jne
jb
sti
lods
imul
lods
xlat
pop
sbb
outsb
test
sbb
jmp
pop
in
sbb
or
xchg
sub
push
add
add
inc
add
jl
ret
jb
je
sti
test
stc
lock
push
outsb
mov
fs
iret
insb
rcrl
pop
lds
mov
mov
inc
jecxz
aam
jg
fcom
addl
xchg
inc
lcall
mov
cmp
add
inc
std
inc
xor
xor
lods
mov
mov
loopne
sub
repz
flds
adc
adc
lea
gs
xchg
mov
add
test
outsb
cmp
es
cmpb
out
lock
insl
mov
cld
jns
fwait
addr16
push
loope
es
and
push
sbb
push
sbb
dec
sbb
sbb
cmp
ret
xor
test
mov
repz
sub
sub
and
and
sbb
push
push
push
adc
push
pop
jae
xchg
push
cltd
xchg
iret
ss
pop
push
std
cmp
jno
les
push
add
ret
movsb
mov
call
out
sbbb
mov
xlat
mov
push
movsl
push
lods
and
roll
inc
xchg
sbb
sbb
pop
inc
mov
mov
mov
mov
mov
scas
lods
mov
movsb
mov
lods
test
mov
xchg
cwtl
xchg
lcall
mov
addl
cld
sti
std
add
add
div
cmc
repz
clc
stc
imul
in
out
jmp
in
hlt
icebp
out
in
jmp
fcmovnu
fsubp
loop
aam
rcl
fcomp
fxch
lret
ror
into
rcl
rol
vshufps
int3
lret
cmp
inc
cmp
xor
cmp
aaa
cmp
cmp
das
xor
and
sub
sub
sbb
pop
pop
pop
and
adc
pop
adc
or
femms
adc
adc
push
add
add
jl
cmpb
addb
jne
ja
imul
arpl
addr16
pop
pop
pusha
arpl
push
push
pop
push
pop
pop
dec
dec
dec
dec
dec
dec
push
push
inc
inc
inc
inc
dec
dec
dec
inc
mov
rol
mov
mov
mov
mov
stos
scas
mov
mov
movsb
cmpsl
movsb
cmpsl
test
test
mov
xchg
xchg
xchg
xchg
xchg
cwtl
xchg
mov
xchg
nop
addl
mov
stc
cld
incb
add
repz
cmc
idiv
stc
clc
stc
out
in
out
out
lock
repz
in
jmp
fcmovnu
fcmovnu
loop
aad
aad
xlat
fcmovu
int3
int
iret
iret
rcl
rol
enter
leave
lret
cmp
cmp
inc
inc
inc
aas
xor
cmp
sub
sub
xor
xor
and
and
sub
sbb
pop
adc
adc
sbb
or
adc
add
or
or
or
jp
jge
jle
test
jbe
js
insl
insl
outsl
outsl
jo
jno
bound
data16
pop
pop
pop
pop
pusha
bound
push
push
push
pop
pop
push
dec
dec
push
dec
push
dec
push
dec
inc
inc
dec
inc
dec
dec
dec
dec
mov
mov
mov
mov
stos
scas
scas
scas
lods
mov
cmpsb
mov
test
pushf
lcall
xchg
xchg
xchg
xchg
lcall
xchg
xchg
xchg
xchg
addl
mov
std
add
incb
add
div
clc
idiv
cmc
clc
cli
in
jmp
out
icebp
in
repz
in
out
ljmp
fsubp
fsubp
rcl
aam
fxch
int3
ror
rcl
aam
vshufpd
int3
enter
cmp
xor
cmp
cmp
sub
xor
and
sub
sbb
sbb
sbb
push
adc
pop
sbb
or
ud2
push
push
adc
add
push
or
jge
jg
addb
je
jbe
ja
imul
arpl
imul
pop
pop
pop
arpl
push
pop
push
push
pop
pop
pop
dec
dec
dec
dec
push
dec
push
push
inc
inc
inc
inc
dec
inc
dec
dec
mov
mov
mov
mov
stos
mov
mov
mov
mov
cmpsl
test
popf
mov
xchg
xchg
xchg
lcall
mov
addb
std
std
incb
add
hlt
repz
cmc
clc
stc
sti
sti
in
ljmp
out
out
jmp
fsubp
loop
rcr
xlat
fcom
fcmovu
int3
lret
ror
rcl
vshufps
leave
int3
enter
cmp
ss
xor
cmp
cmp
sub
das
xor
xor
and
es
es
sbb
and
adc
or
or
adc
adc
add
pop
or
jl
cmpb
addl
jne
jp
insl
insb
outsl
outsl
jo
jae
bound
addr16
pop
pop
popa
pusha
bound
push
push
pop
push
pop
pop
dec
dec
dec
dec
push
push
push
push
inc
inc
inc
inc
dec
dec
dec
inc
mov
mov
mov
mov
scas
mov
mov
mov
lods
cmpsl
pushf
popf
lahf
sahf
mov
xchg
xchg
xchg
lcall
mov
test
mov
cli
std
incl
add
add
repnz
idiv
idiv
sti
ljmp
lock
out
out
jmp
loope
rcl
xlat
xlat
xlat
into
int
lret
iret
rcl
rol
leave
lret
cmp
inc
xor
cmp
sub
cs
and
es
sbb
and
sbb
sbb
sbb
sbb
or
or
push
add
push
or
or
jge
jge
cmpb
jne
ja
jns
jp
insb
insl
insb
outsl
jo
jae
bound
fs
imul
pusha
bound
push
push
pop
push
pop
pop
dec
dec
push
dec
dec
push
push
push
inc
inc
inc
inc
inc
inc
dec
inc
mov
rol
mov
mov
mov
stos
lods
stos
scas
mov
mov
movsl
movsb
movsl
stos
test
test
popf
lahf
fwait
mov
xchg
cwtl
xchg
cwtl
xchg
fwait
cltd
lea
xchg
xchg
addb
mov
cld
sti
incl
add
cmc
icebp
hlt
cmc
div
clc
cli
ljmp
icebp
jecxz
in
out
jmp
loopne
loop
loopne
rcl
aad
fcomp
fxch
lret
int
ror
rcl
leave
lret
cmp
ds
inc
xor
cmp
cmp
sub
xor
sub
daa
sub
sbb
sbb
and
adc
sbb
or
push
push
adc
add
add
or
or
jnp
cmpb
xorl
jbe
jbe
ja
imul
fs
imul
pop
pop
pop
bound
push
push
push
push
pop
pop
dec
dec
dec
dec
dec
dec
push
push
inc
inc
dec
inc
dec
inc
dec
inc
mov
mov
mov
mov
stos
lods
stos
scas
mov
mov
mov
test
fwait
fwait
mov
mov
cwtl
cwtl
fwait
cwtl
mov
nop
xchg
addl
mov
stc
std
add
add
repz
div
div
clc
imul
in
in
in
lock
lock
out
jmp
fcmovnu
loope
aad
aam
xlat
lret
int3
ror
ror
mov
lret
ds
cmp
aas
inc
aas
xor
cmp
sub
das
xor
and
sub
sbb
push
push
and
and
adc
adc
sbb
or
adc
add
or
jl
cmpb
jne
je
jp
jnp
push
insl
imul
jo
fs
pop
pop
pop
pop
popa
popa
pusha
push
push
push
push
push
pop
pop
pop
dec
dec
dec
dec
push
push
push
push
inc
inc
dec
inc
dec
inc
dec
dec
mov
rol
mov
mov
mov
mov
stos
scas
lods
mov
mov
cmpsl
test
popf
lcall
xchg
xchg
xchg
xchg
xchg
cltd
cltd
xchg
lea
xchg
xchg
xchg
mov
add
add
div
clc
hlt
stc
idiv
clc
in
in
out
out
out
lock
call
ljmp
loopne
rcl
xlat
into
lret
iret
rcl
rol
enter
cmp
cmp
aas
xor
xor
sub
cs
and
and
sbb
pop
pop
pop
and
adc
push
sbb
push
or
adc
add
add
or
jg
jle
cmpb
jbe
js
jl
insb
push
imul
jo
bound
push
pop
pusha
pop
pop
pop
arpl
push
pop
push
pop
push
pop
pop
dec
dec
dec
dec
dec
dec
push
push
inc
inc
inc
inc
inc
dec
dec
dec
mov
rol
mov
mov
mov
mov
lods
mov
mov
movsl
mov
test
pushf
pushf
mov
lahf
xchg
xchg
cwtl
xchg
lcall
mov
test
mov
std
add
incb
add
cmc
repnz
cmc
div
cli
cli
in
jmp
in
out
out
repz
in
out
jmp
loopne
loopne
rcl
rcr
xlat
fcomp
lret
int3
iret
into
rcl
mov
mov
leave
enter
cmp
inc
inc
inc
xor
cmp
cmp
cmp
sub
sub
xor
and
and
and
push
push
and
and
adc
pop
sbb
or
adc
adc
add
push
push
or
or
jle
jg
test
je
jbe
jne
js
insl
outsl
imul
jo
popa
fs
pop
pop
pop
pop
pusha
pop
fs
push
push
push
push
pop
pop
pop
pop
dec
dec
dec
dec
push
push
push
push
inc
inc
inc
inc
dec
inc
dec
dec
mov
rol
mov
mov
mov
mov
mov
movsb
mov
test
sahf
cltd
pushf
fwait
mov
xchg
xchg
xchg
cwtl
xchg
cwtl
fwait
mov
xchg
popl
xchg
std
add
add
repnz
cmc
clc
cmc
stc
imul
jmp
out
out
in
repnz
in
call
fndisi(8087
loopne
loopne
rcl
rcl
fcmovne
leave
iret
iret
ror
rcl
leave
int3
lret
cmp
inc
aas
xor
cmp
sub
xor
xor
and
sub
sbb
and
adc
push
push
sbb
or
adc
add
add
add
cmpb
cmpb
ja
jns
jns
push
jo
jo
jo
gs
pop
pop
pop
pop
bound
bound
pop
push
pop
push
pop
push
dec
dec
dec
dec
push
dec
push
push
inc
inc
inc
inc
dec
inc
dec
dec
mov
mov
mov
mov
lods
lods
lods
scas
mov
mov
movsl
movsl
cmpsb
cmpsl
cmpsb
stos
stos
fwait
pushf
sahf
lahf
sahf
lahf
mov
xchg
cltd
xchg
lcall
lea
xchg
cli
cld
sti
incl
add
cmc
hlt
div
clc
idiv
stc
out
ljmp
loop
in
jmp
fsub
fstp
fucom
loopne
rcl
xlat
int
int
iret
int
rol
ret
enter
cmp
ds
aas
xor
ss
aaa
cmp
sub
das
das
das
das
xor
and
sub
daa
sub
sbb
sbb
pop
pop
and
adc
adc
or
adc
or
or
or
jge
cmpb
addl
ja
jnp
imul
jo
jb
bound
push
pop
pop
pop
pusha
pop
bound
push
push
push
pop
push
pop
pop
dec
dec
dec
dec
dec
dec
push
push
inc
inc
dec
inc
dec
dec
dec
dec
mov
rol
mov
mov
mov
stos
scas
lods
mov
mov
cmpsb
mov
test
popf
fwait
sahf
popf
mov
xchg
xchg
xchg
xchg
xchg
cltd
cwtl
mov
nop
xchg
test
mov
add
add
repz
div
idiv
clc
cli
jmp
in
out
out
in
lock
in
ljmp
loopne
loope
aam
rcr
xlat
int3
leave
ror
ror
rcl
mov
int3
leave
cmp
inc
inc
aas
xor
xor
cmp
sub
das
xor
xor
and
and
sub
push
sbb
and
adc
sbb
or
push
or
push
add
add
pop
or
jge
jl
jg
test
jbe
jns
imul
outsb
outsl
je
fs
imul
pop
pop
pop
pusha
pusha
push
push
push
push
pop
push
pop
pop
dec
dec
push
dec
dec
dec
push
push
inc
inc
inc
inc
inc
inc
dec
dec
mov
rol
mov
mov
mov
lods
lods
stos
scas
lods
mov
cmpsb
mov
stos
cmpsl
fwait
fwait
mov
lahf
xchg
xchg
xchg
xchg
cwtl
cwtl
pushf
xchg
mov
xchg
nop
test
mov
add
add
cmc
repz
cmc
div
cli
sti
out
in
in
in
out
out
repnz
out
out
in
jmp
fstp
loope
loop
rcr
xlat
fcmovnu
lret
int
rcl
rol
rol
mov
aas
ds
inc
xor
ss
cmp
cmp
sub
das
xor
and
es
sub
sub
push
sbb
push
pop
and
adc
adc
sbb
or
movups
adc
push
add
pop
push
or
jge
jl
cmpl
ja
jns
jnp
insb
outsb
outsl
jo
je
fs
pusha
pop
popa
popa
bound
push
push
push
push
push
pop
pop
dec
dec
dec
dec
dec
dec
push
push
inc
inc
inc
inc
inc
dec
dec
dec
mov
mov
mov
mov
lods
mov
scas
scas
mov
cmpsb
movsb
cmpsl
cmpsb
test
lcall
xchg
xchg
xchg
xchg
cwtl
xchg
cltd
lcall
xchg
xchg
addb
xchg
cld
std
sti
add
add
repz
div
sti
stc
jmp
in
in
out
out
repz
out
ljmp
fucom
rcl
rcr
fcomp
fmul
lret
into
rcl
rol
ret
mov
inc
cmp
inc
inc
inc
xor
aaa
cmp
sub
sub
das
and
and
sub
sbb
and
adc
push
push
sbb
sbb
push
or
or
adc
adc
add
jg
cmpl
jbe
jbe
js
insl
insl
outsl
jno
jae
fs
imul
pop
popa
pusha
fs
push
push
push
push
pop
push
pop
pop
dec
dec
dec
dec
push
dec
push
dec
inc
inc
inc
inc
inc
inc
dec
dec
mov
mov
mov
mov
mov
scas
scas
scas
mov
movsl
movsb
cmpsb
mov
lcall
mov
cltd
xchg
cwtl
cltd
mov
xchg
nop
test
mov
sti
add
add
add
repz
hlt
idiv
idiv
imul
jmp
in
out
out
repnz
in
out
out
jmp
loopne
aam
xlat
fcomp
fcmovnu
lret
lret
int
ror
rcl
vshufps
int3
lret
cmp
aas
xor
cmp
sub
das
sub
xor
xor
daa
and
daa
sub
sbb
sbb
pop
and
and
adc
pop
push
sbb
sbb
or
or
add
push
add
jge
jle
jg
addl
insb
insl
jo
outsl
insl
jo
bound
imul
popa
pop
bound
push
push
push
pop
pop
pop
push
dec
dec
dec
dec
push
dec
push
push
inc
inc
inc
inc
dec
dec
dec
dec
mov
rol
mov
mov
mov
test
mov
mov
test
stos
popf
popf
sahf
lahf
sahf
popf
mov
xchg
xchg
xchg
pushf
lcall
nop
xchg
xchg
mov
add
add
cmc
repz
cmc
cli
cmc
cli
imul
in
in
in
lock
repz
in
call
ljmp
loop
rcl
aad
xlat
aad
xlat
into
int
int
into
rcl
lret
enter
ds
aas
inc
inc
xor
cmp
aaa
cmp
sub
xor
xor
and
daa
and
sbb
and
push
and
and
adc
sbb
push
or
or
push
add
or
jnp
jl
cmpb
jae
js
jbe
jns
push
outsl
outsl
outsb
outsl
jb
bound
imul
pop
pop
pusha
pop
bound
push
push
push
pop
pop
pop
push
dec
dec
dec
dec
push
dec
push
push
inc
inc
inc
inc
inc
dec
dec
dec
mov
mov
mov
mov
lods
mov
mov
mov
movsb
movsb
test
test
fwait
sahf
fwait
mov
xchg
xchg
xchg
lcall
mov
addl
add
add
cmc
repz
cli
stc
sti
imul
in
in
jmp
icebp
hlt
icebp
loop
out
ljmp
fucom
fucom
loopne
aam
aam
aad
fmul
lret
ror
into
into
rcl
leave
enter
cmp
inc
inc
xor
cmp
sub
sub
xor
es
es
sbb
sbb
and
and
adc
pop
sbb
or
or
push
adc
push
add
or
jl
jle
addl
jnp
insb
insb
outsb
outsb
jo
jae
arpl
imul
pop
bound
popa
push
push
push
push
push
pop
pop
push
dec
dec
dec
dec
push
push
push
push
inc
inc
inc
inc
dec
dec
dec
dec
mov
rol
mov
mov
mov
test
mov
cmpsb
mov
test
sahf
mov
xchg
cwtl
xchg
xchg
xchg
lcall
nop
xchg
xchg
addl
cld
cli
cld
incl
push
repz
cmc
cli
idiv
imul
ljmp
jecxz
out
jmp
fcmovnu
fnclex
loope
rcr
fcmovbe
int3
lret
iret
int
rol
ret
cmp
aas
inc
inc
xor
aaa
cmp
sub
das
es
sub
push
sbb
sbb
push
and
adc
pop
sbb
or
push
adc
add
or
jl
cmpb
test
jp
jns
insl
imul
jno
bound
imul
pop
pop
pop
pusha
pop
pusha
bound
push
push
pop
pop
pop
pop
dec
dec
dec
dec
push
dec
push
push
inc
inc
inc
inc
dec
inc
dec
dec
mov
rol
mov
mov
mov
mov
mov
movsb
movsb
cmpsl
mov
lcall
mov
cwtl
cltd
lcall
lea
orl
cld
add
add
cmc
cmc
cmc
hlt
div
cld
sti
jmp
in
in
icebp
out
repz
jecxz
in
ljmp
fstp
loopne
loopne
rcl
aad
fmul
lret
ror
rcl
ret
leave
leave
leave
lret
ds
cmp
cmp
cmp
cmp
sub
xor
and
sub
sbb
and
and
push
adc
adc
or
adc
add
push
push
or
jle
jle
addl
imul
insl
jno
gs
imul
pop
pop
popa
pop
pusha
pusha
push
push
push
push
push
push
pop
push
dec
dec
dec
dec
push
dec
push
push
inc
inc
inc
inc
dec
dec
dec
dec
mov
mov
mov
mov
mov
stos
scas
scas
mov
movsl
movsl
movsl
mov
popf
lcall
xchg
xchg
xchg
xchg
cltd
xchg
lcall
nop
nop
xchg
xchg
mov
cli
add
incb
repnz
div
stc
idiv
sti
jmp
in
out
out
icebp
hlt
lock
in
call
fstp
fsub
fsubp
loope
rcl
rcr
xlat
fcmovu
lret
lret
into
iret
rcl
ret
enter
int3
lret
ds
xor
cmp
cmp
cmp
sub
mov
xchg
xor
xor
and
push
jle
sub
sub
sbb
adc
ja
and
sbb
adc
dec
or
lock
add
or
xor
jns
jo
outsb
jo
jne
jo
cmc
movsl
push
cmpsl
jmp
adc
rorb
fsubs
loope
jmp
gs
sub
fs
xor
mov
inc
in
lcall
fcoms
int3
fcmovnbe
mov
lods
leave
pushf
out
stos
arpl
add
stos
dec
loopne
inc
add
stos
and
outsb
xchg
xchg
xchg
xchg
lods
pop
pop
push
xor
orb
cmp
jae
dec
adc
xor
jle
add
sub
pop
lock
mov
mov
clc
ret
dec
add
push
sbb
push
inc
out
or
push
add
pop
cmp
lds
test
cmp
ss
mov
fwait
insl
test
cmpb
pop
lahf
outsb
sub
push
nop
lahf
sahf
xor
sbb
or
sbb
mov
sahf
jae
mov
add
icebp
aam
and
add
sbb
sub
ficoms
push
fisttps
fists
adcl
xchg
movsb
jae
mov
push
addr16
addr16
test
cltd
std
mov
ds
or
or
sub
mov
lret
pop
loope
sub
mov
cli
mov
fwait
outsb
push
lea
dec
xlat
daa
adc
movsl
add
cmc
aam
repnz
xchg
push
fimull
add
jns
add
cmp
sub
sub
sbb
or
jmp
push
loope
adc
adc
or
jge
fs
pop
push
dec
push
movsb
shll
idivb
into
scas
stos
movsl
xor
imul
xchg
ja
push
fstps
lcall
dec
xchg
in
xchg
hlt
push
xchg
movl
mov
shlb
adc
inc
jno
mov
mulb
mov
pop
jg
insl
jno
fwait
cmp
or
flds
push
pusha
pop
inc
inc
testb
out
dec
mov
mov
cmp
mov
imul
inc
daa
xchg
out
xor
mov
fcomp
shll
pop
add
xchg
or
push
adc
xor
and
subl
popf
mov
adc
adc
and
push
add
test
xchg
clc
jno
xchg
cltd
sub
in
ret
and
mov
in
stc
addr16
dec
pop
inc
in
xor
cld
ljmp
sub
popa
loope
in
sarb
or
cmp
dec
nop
inc
xchg
stos
inc
cmp
mov
sahf
xchg
sub
gs
pop
sahf
dec
xor
inc
daa
push
mov
pushf
mov
pop
lahf
push
lds
and
into
insb
pop
ss
mov
xor
xchg
push
hlt
test
jnp
std
mov
pop
jge
test
push
notb
jg
push
pop
lret
stos
pusha
mov
addr16
push
aad
stc
das
adc
in
mov
scas
sbb
leave
icebp
fisttpll
jbe
lahf
mov
mov
rcr
mov
and
xchg
mov
xchg
js
gs
add
and
or
cld
insb
sbbb
or
cmp
mov
dec
pop
lock
jne
icebp
cmpsb
out
jne
inc
in
add
jo
adcb
popa
lods
loop
pop
add
inc
test
push
jno
cmovg
dec
ret
jg
jb
push
xor
inc
lods
and
dec
mov
jb
int3
iret
std
push
pop
and
lea
or
popa
in
dec
sar
mov
pop
es
out
std
sbb
jbe
jge
les
jo
and
push
cmp
in
cli
aaa
pop
pop
fbld
arpl
rol
and
lahf
cwtl
sarb
xorl
hlt
pop
fnstenv
loope
dec
pop
dec
xor
dec
inc
ss
xlat
dec
es
icebp
jno
sbb
mov
sub
sbb
out
gs
lcall
xchg
arpl
std
icebp
cwtl
push
pushl
dec
lahf
insb
mov
xchg
data16
clc
imul
inc
xchg
out
sub
cmp
or
mov
xchg
call
out
and
dec
xlat
xchg
ret
arpl
mov
adc
cmp
mov
shlb
sbb
jbe
dec
pop
cmpsb
mov
js
mov
xchg
mov
xchg
inc
and
scas
cmpsl
cmp
rorb
js
jns
add
mov
jge
adc
xor
dec
insb
mov
adc
add
in
mov
lret
in
xchg
adc
subl
popa
daa
lahf
addr16
lret
jnp
test
sti
mov
loopne
fistpl
popf
cld
sub
out
mov
pusha
clc
pop
push
push
jmp
test
dec
jnp
test
xlat
int
add
pusha
addr16
adc
mov
fstp
xor
or
xor
rcrl
sarb
push
les
hlt
push
add
insb
jne
jae
push
inc
push
xor
ficompl
mov
push
fs
sub
fisubl
push
inc
push
push
scas
push
scas
xor
xlat
xor
adc
sbb
mov
push
sub
push
inc
into
lahf
loope
sub
sbbb
dec
daa
jg
jle
ss
jno
bound
adc
jb
sbb
pop
pop
es
gs
pop
push
push
pop
hlt
lods
in
in
pop
pop
dec
into
adc
or
mov
popa
lahf
addr16
pop
mov
imul
iret
arpl
push
rcll
pop
out
loope
jmp
cmc
push
call
inc
add
dec
pop
dec
sbb
add
mov
mov
std
sub
popa
in
inc
clc
inc
push
mov
mov
or
shl
rcl
popf
cmpsl
stos
cmpsl
jnp
mov
int
xchg
sub
stos
int
adc
push
mov
xor
push
sbb
scas
icebp
fwait
pop
pop
pop
xchg
sbb
rolb
out
push
cmp
mov
jp
in
rcrb
cld
loopne
andl
sub
push
mov
or
shl
shl
adc
mov
in
loope
es
js
adc
sbb
dec
sub
xchg
push
ret
sub
xor
pop
test
xlat
jle
imul
inc
mov
pop
out
roll
fwait
sbb
xchg
mov
jb
mov
shll
leave
cwtl
movsl
mov
jae
add
xor
pop
mov
mov
arpl
lea
cmpsl
dec
adcl
cmpsb
mov
push
mov
inc
test
mov
xchg
ret
out
test
mov
mov
xlat
in
out
xchg
mov
fs
into
mov
shrb
sbbl
sti
add
mov
ja
cwtl
enter
sub
jecxz
mov
movsb
pop
sbb
setns
scas
flds
test
add
mov
daa
ret
mov
cmp
das
int
xlat
xor
and
out
sub
sbb
pop
and
adc
pop
sbb
dec
dec
and
push
ss
xor
dec
inc
ss
jnp
inc
push
inc
pop
inc
mov
ljmp
nop
add
mov
xchg
call
cmp
leave
cwtl
push
dec
addr16
popl
test
pop
sub
jne
xchg
dec
or
jne
adc
cmp
ds
ja
out
popf
lock
lea
inc
data16
ret
cli
jb
cmp
or
mov
out
test
sub
xchg
sbb
jp
mov
fwait
xchg
cmp
outsb
or
mov
scas
inc
mov
mov
gs
jno
pop
pushf
in
ret
into
insl
test
mov
lret
es
mov
mov
test
pop
push
mov
xchg
leave
mov
mov
les
cmp
loopne
hlt
or
sbb
ss
cmp
cmp
leave
sbb
sub
mov
pusha
lcall
jp
sub
mov
andb
sbb
or
das
inc
xor
lcall
loop
outsb
js
ret
inc
jge
sbb
outsl
pusha
out
sbb
pop
mov
dec
into
nop
andb
sub
stos
push
imul
test
rcll
testl
xchg
mov
outsl
clc
or
mov
pop
xchg
lret
sub
arpl
xchg
mov
or
stos
xchg
push
push
aas
mov
pop
std
or
xor
outsb
mov
addb
or
xor
adc
fs
aas
add
xchg
in
cmp
mov
xor
xor
xchg
loop
add
and
lods
andl
xchg
cli
int
dec
pusha
enter
scas
enter
xchg
cmp
lcall
popa
push
xchg
fiadds
dec
push
xor
aad
sub
jns
sub
cwtl
cmpsl
or
std
mov
adc
cmova
mov
fmull
rcr
pop
pop
imul
sub
xchg
xchg
insb
sub
ret
sub
clc
xor
dec
mov
pop
popa
xor
mov
data16
sbb
dec
lea
adc
aad
mov
lea
mov
mov
pushfw
lahf
jnp
test
or
mov
mov
icebp
cmc
sahf
sti
stc
das
bound
or
mov
push
and
push
loop
push
aaa
sarl
into
xchg
ss
incb
inc
in
sub
pop
jecxz
sub
or
subl
add
clc
cli
sbb
shr
dec
aad
adc
xorl
mov
jb
aas
push
loope
sub
ljmp
mov
push
aaa
sahf
ds
add
lods
lds
push
mov
sbb
xchg
xchg
add
adc
dec
sbb
push
loopne
push
sbb
int3
jg
pop
dec
add
sub
and
outsl
add
stos
mov
ja
mov
dec
mov
xchg
cmc
pop
outsl
loopne
inc
jbe
push
leave
pusha
aad
jo
mov
dec
icebp
sahf
mov
imul
int3
cwtl
sbb
mov
out
cld
add
xchg
push
mov
call
clc
out
inc
jmp
cmp
sub
cmp
dec
outsb
mov
pop
mov
xchg
dec
test
cmp
adc
rclb
not
movsb
add
dec
cmc
enter
sbb
inc
fldcw
dec
mov
sahf
or
lods
pop
jae
lret
and
mov
jl
inc
out
hlt
pop
fdivp
sti
sbb
jns
mov
bound
xchg
gs
test
or
imull
std
jecxz
outsb
inc
out
scas
xchg
sbb
adc
inc
insb
inc
popf
xor
mov
int3
mov
push
mov
cmpsb
sbb
in
imul
stc
fs
jmp
and
inc
sub
push
push
js
aaa
cwtl
loop
dec
dec
jg
jo
and
push
adc
cs
mov
pop
cmp
adc
rolb
or
adc
repnz
xchg
pushf
mov
std
mov
in
xchg
and
pop
sub
sbb
push
cmp
dec
sub
mov
add
repnz
mov
cli
pop
jae
push
and
pushl
cmp
in
jp
mov
int
rcr
jb
push
repz
or
pop
mov
inc
stos
int
adc
enter
popf
dec
out
std
aas
dec
xor
mov
dec
lds
icebp
sub
aas
add
pop
mov
fstpl
jns
xchg
xor
jns
push
mov
ret
cmp
cmc
jnp
xchg
int
icebp
stos
mov
mov
sub
sub
fnstcw
jae
daa
loope
outsl
xchg
jp
mov
and
jp
pop
ficomps
out
dec
iret
push
xlat
dec
mov
stos
mov
and
jge
push
das
lock
mov
sub
sbbl
popa
call
mov
out
jne
add
dec
lret
mov
push
in
adc
and
fcmovb
orb
adc
popf
cwtl
xor
cmpsb
outsb
adc
pinsrw
fldl
xor
movsb
lret
push
cwtl
jb
xor
subl
testb
jae
cmp
mov
or
pop
out
js
repnz
cmp
mulb
push
jl
xor
mov
imul
and
adc
and
add
add
mov
stos
jo
sub
push
sbb
jmp
inc
push
sub
daa
pusha
cmp
nop
xor
xchg
xchg
sub
jl
je
jge
mov
stc
inc
inc
mov
test
fildl
dec
mov
jecxz
push
into
aad
stos
jno
mov
je
stos
ljmp
or
mov
push
cli
mov
repz
adc
or
pop
push
addr16
loop
jnp
mov
out
rclb
or
cmpsb
sbb
dec
popa
xchg
in
or
dec
divb
sub
inc
popa
adc
imul
push
xlat
ret
push
xor
es
cwtl
addr16
pop
and
stc
mov
xchg
out
pop
xchg
nop
mov
xchg
xor
ss
push
xor
es
jg
pop
fwait
gs
lea
mov
lds
push
xor
sub
jmp
push
lea
pop
add
push
daa
pop
ds
ret
mov
dec
hlt
popa
cmpsb
push
add
sub
add
frstor
lods
imul
sbb
mov
cmp
mov
push
sbb
mov
and
xchg
arpl
shl
sub
fdecstp
jg
clc
loopne
adc
lcall
jno
fcoml
mov
fnsave
insb
out
sti
lock
and
add
scas
fisubl
fidivrs
inc
ljmp
mov
inc
sbb
stc
ljmp
popf
dec
cmp
xchg
rolb
jno
sbb
or
jne
mov
jno
push
lahf
dec
lret
cmp
push
outsb
cmpsb
nop
inc
lea
sub
or
jae
fsubrl
movsb
jno
xchg
dec
inc
jno
mov
xor
repnz
dec
ljmp
mov
fs
loop
adcl
push
mov
lahf
push
mov
in
int3
cmp
testb
loop
mov
loop
xchg
les
mov
outsl
incb
int
fnstenv
inc
cmp
arpl
add
inc
gs
pop
aaa
xchg
jbe
test
lock
mov
lret
leave
sbb
mov
es
repz
sub
and
shlb
or
push
mov
xor
in
jg
mov
jbe
or
dec
sub
mov
ljmp
orb
ja
imul
sub
mov
xor
loop
dec
sar
loope
ficomps
in
aaa
jmp
daa
jnp
and
mov
int3
sar
lcall
mov
rclb
adc
jno
adc
aas
cmp
inc
xchg
cmp
clc
test
vucomiss
or
mov
push
xor
test
sub
inc
lds
out
fwait
outsb
les
mov
jo
jl
adc
pop
imul
sub
jne
insl
ret
ss
push
sbb
xchg
jno
sub
pop
adc
add
fs
sbb
mov
insl
jl
fstps
rcr
push
mov
sub
ds
mov
lods
dec
shl
lock
jecxz
sbb
movsl
mov
stc
fildll
and
rorb
add
out
ds
test
and
cmp
cmp
jne
add
jne
or
sub
cmp
repnz
outsb
jmp
bound
ljmp
sub
cli
push
arpl
dec
jl
shr
outsl
adc
test
leave
aam
mov
loope
cmovne
sbb
jmp
xchg
movsl
pop
or
cmp
sub
fstpt
shll
roll
xchg
dec
mov
push
push
popf
test
aad
lods
inc
shl
cmpb
je
push
sahf
mov
push
orl
in
ja
fwait
or
adc
into
popa
pop
add
cmc
loopne
aas
push
lret
jecxz
aas
sahf
shlb
out
push
sub
mov
lret
xor
aas
sub
mov
sbb
pop
rclb
mov
pop
aam
cld
or
movsb
test
push
sbb
and
push
bound
fcoml
push
sti
fmuls
xchg
xor
sbb
outsb
push
jno
in
xor
es
jno
hlt
mov
shr
into
in
repnz
pop
icebp
lods
add
fistpll
lret
stos
pop
bound
inc
push
push
mov
xlat
enter
or
push
mov
mov
fs
in
insb
shl
mov
xor
mov
jmp
xchg
fs
das
cmp
adc
in
roll
and
std
xchg
mov
std
in
stc
mov
in
js
aas
mov
jge
mov
sbb
mov
stos
xchg
int3
fdivrs
lea
shlb
out
scas
fadds
int3
jb
sub
ss
lret
fwait
push
and
cmp
dec
call
add
pop
dec
and
aad
and
mov
and
inc
outsl
xchg
ficoml
cmp
std
jle
or
or
test
call
idiv
push
mov
add
push
out
sti
jecxz
scas
es
jb
adc
sti
push
lcall
push
push
adcb
cmp
es
dec
insl
sub
mov
inc
cwtl
inc
jmp
jno
imul
repz
xor
gs
xor
and
dec
jg
mov
push
popf
daa
ret
rorb
and
call
mov
mov
dec
clc
test
xchg
pop
clc
sub
lahf
insl
insl
jmp
out
pushf
jmp
out
lret
mov
mov
imul
inc
inc
inc
out
xchg
addr16
mov
lods
xor
mov
lret
shlb
movsb
fidivrl
fsubl
adc
popf
and
movsl
push
push
test
addr16
mov
fwait
arpl
out
sbb
xor
setge
in
lcall
and
insl
addb
and
mov
stc
hlt
pop
adc
in
push
adc
dec
jns
sub
adc
jge
les
mov
lock
mov
enter
sub
mov
dec
insb
add
inc
cmp
xor
xchg
in
lcall
es
in
mov
adc
std
lret
pushf
mov
loope
out
ljmp
ljmp
mov
adc
pushf
mov
mov
pop
in
cli
and
fsubrs
mov
xor
mov
xchg
xor
fucomp
dec
lea
mov
shll
cmpsl
mov
ficompl
and
cmpsl
scas
and
xchg
and
mov
adc
loope
pop
inc
scas
xchg
jne
sti
cmp
jle
push
sarb
or
imul
mov
imul
push
cmp
sti
pusha
leave
fstpt
es
dec
std
fmuls
in
push
adcb
fstpt
xchg
mov
sub
stos
popf
ss
fs
stos
les
insl
bound
movsl
aaa
mov
push
test
adcl
dec
adc
ljmp
cmc
dec
fmuls
mov
into
add
xchg
mov
or
mov
jge
aad
lock
jg
movsl
xor
loope
loope
pop
add
bound
dec
mov
sub
jns
repz
add
dec
vpsubusw
adc
lret
or
cmp
out
mov
mov
sub
je
sub
add
subb
mov
lods
push
mov
sbb
adc
push
iret
cmp
xchg
sbb
cmpsl
je
ja
arpl
pop
sub
enter
call
hlt
and
lcall
pop
lret
icebp
pop
add
ficoml
test
iret
pop
mov
push
jno
mov
xor
lods
or
dec
xchg
bound
mov
dec
gs
xor
sub
pop
mov
push
push
sbb
stos
in
cmpxchg
inc
pushf
sbb
outsl
rclb
mov
iret
sbbl
pop
stos
subl
jp
jns
decl
fldcw
inc
lcall
lea
mov
sub
aaa
icebp
aas
dec
adc
movsb
das
add
xor
push
mov
jecxz
insl
push
push
sbb
in
scas
pop
fmuls
dec
dec
int
xchg
dec
test
sbb
lcall
addr16
mov
xor
sahf
add
mov
xchg
cmp
clc
add
push
cmp
inc
adc
inc
shlb
ret
inc
imul
xor
aad
mov
xor
enter
jge
cmpsb
sub
xlat
xchg
icebp
inc
xchg
es
sub
cli
xor
jbe
cmp
cld
sbb
fsubr
mov
xchg
aaa
add
inc
sub
insl
xchg
je
incl
lahf
push
jecxz
imul
je
push
scas
into
inc
popw
into
inc
push
daa
popa
popa
sbb
xor
push
iret
loopne
jbe
jmp
dec
xor
cmp
stos
mov
pop
adc
pop
mov
dec
inc
sbb
stos
test
call
hlt
cs
dec
add
ss
popf
outsb
imul
mov
movsb
mov
addl
cmp
xlat
popf
jae
fdivl
or
push
inc
sub
fdivrl
sub
sti
cmp
pop
push
push
idiv
mov
jl
sub
rcll
rol
rcl
je
nop
jl
push
pop
addr16
outsb
jno
ds
rclb
xor
push
pop
aaa
daa
and
stos
jb
sub
adc
test
mov
or
rcrl
out
xor
outsl
daa
sbb
mov
lcall
sub
orb
popa
in
daa
adc
sbb
js
sub
int3
pop
cmpsl
inc
in
add
dec
leave
mov
ss
imul
jns
and
test
cmp
loopne
cmpb
lods
adc
mov
jbe
fistpl
scas
scas
xor
cmpsb
aad
pop
movsl
mov
pop
popl
mov
lods
sub
inc
fisubrl
jbe
loop
mov
idivl
xchg
arpl
xor
sub
inc
fscale
xchg
insb
cmpsl
add
fucomi
sub
mov
stc
pop
mov
int
sbb
fwait
call
xlat
adc
in
sub
arpl
sub
mov
push
and
or
sbbb
mov
pushf
push
jb
adc
idivl
push
inc
add
add
stc
mov
jecxz
or
jmp
inc
cltd
xchg
movsb
jle
jmp
pop
jno
sarb
movsl
and
sub
aam
pop
mov
pop
pop
aad
mov
aad
stc
dec
mov
push
push
xor
movsb
pushf
je
push
lcall
push
ret
test
push
pusha
dec
lret
and
sarb
popf
arpl
fists
xchg
pop
pop
cwtl
cmp
sbb
ds
jae
push
iret
ja
cli
in
js
push
or
out
and
lret
pushf
fdivrs
leave
jbe
mov
mov
lahf
psubq
mov
cmp
push
jbe
mov
ror
pop
add
enter
xor
popf
pop
cmp
sbb
ss
or
cmp
call
xor
mov
sbb
jmp
inc
or
adc
dec
divl
std
clc
orb
dec
scas
loopne
pop
pop
add
jne
and
mov
cmp
gs
pop
shlb
ja
inc
stos
xlat
test
mov
out
orps
and
and
xchg
test
scas
imul
or
jb
pop
js
cltd
lret
xor
sub
stos
outsb
lcall
or
das
lods
jno
or
fsts
add
fucomi
test
fstps
or
daa
pushf
fbstp
mov
andb
test
pusha
sbb
jnp
push
xchg
sbb
push
shll
push
js
repz
pop
sub
sti
inc
pop
mov
ss
mov
lock
push
push
loope
in
or
push
loop
mov
push
push
xchg
push
pop
jl
out
jns
rcl
sbb
rolb
mov
sub
inc
icebp
cmp
mov
sahf
mov
inc
sub
bound
cld
inc
inc
mov
dec
sbb
ret
or
addl
rcrl
mov
xorb
data16
lods
mov
loop
insl
push
xorl
sub
xchg
std
fistps
and
push
mov
iret
add
dec
movsb
filds
add
mov
faddl
shlb
lods
sub
insb
leave
fucomip
cvtpi2ps
or
add
movsb
cmpsb
mov
test
mov
leave
jae
pop
cmpsl
test
adc
and
cmp
test
sbb
and
mov
jb
add
arpl
out
pushf
add
sub
notb
jp
add
jb
cmp
pop
mov
lahf
pusha
mov
or
add
pop
or
pop
mov
inc
arpl
insb
mov
dec
jo
or
scas
dec
arpl
imul
mov
xchg
mov
xor
pop
sbb
push
stc
mov
ljmp
mov
mov
ljmp
les
stos
in
jo
test
js
pushf
cltd
mov
jno
xchg
movsb
shlb
jmp
pop
into
sbb
daa
inc
not
push
xchg
int3
adc
sbb
ja
call
in
mov
adc
xchg
out
and
adc
jecxz
or
dec
cmpsb
or
insb
or
lods
inc
scas
nop
sub
cmp
jae
pop
adc
add
sub
push
outsb
jecxz
stos
std
frstor
push
and
pop
xchg
out
cli
loopne
pop
test
out
repz
mov
cmpsl
out
or
lcall
jp
lds
pop
and
and
mov
cmp
sub
ss
xorl
das
adc
pusha
test
and
sahf
pop
jo
imull
adc
adc
sub
dec
js
js
jne
mov
push
mov
mov
into
lods
push
add
incl
stos
idivl
and
outsl
outsb
adcl
jmp
add
fwait
dec
daa
aad
pusha
jb
inc
mov
shrb
or
inc
scas
shlb
inc
loope
cmc
fidivrl
repz
dec
hlt
xlat
aas
loopne
add
cmpl
sub
mov
sbb
lahf
rorb
sbb
dec
and
adc
iret
or
lods
cmpb
and
push
inc
xchg
jnp
push
dec
xor
cwtl
fwait
stos
iret
push
cmp
movsl
and
jbe
adc
sbb
or
loop
out
or
push
sahf
ljmp
push
cwtl
sarb
push
ljmp
adc
jbe
shll
push
cmp
arpl
push
fdivrp
lahf
sub
jns,pn
fcomps
stos
jo
ficoms
clc
sub
mov
rcrl
or
push
std
sub
shr
jne
mov
jge
mov
data16
mov
xor
push
mulb
lea
fdivs
add
les
dec
or
data16
iret
push
lds
jmp
scas
mov
and
jmp
repnz
push
scas
cltd
aad
and
mov
adc
or
and
in
mov
mov
daa
hlt
sbb
ja
add
push
dec
sub
ja
or
push
jle
fs
hlt
mov
repz
pop
cmp
inc
fsubr
lock
sbb
aad
jmp
cli
pop
addl
pop
mov
push
mov
aas
mov
dec
imul
imul
mov
xor
cvtpi2ps
cmpsb
insb
cmp
dec
movsb
into
xchg
in
and
xchg
test
sub
xor
add
xchg
adc
adc
stos
mov
lods
dec
mov
adc
fwait
xchg
or
fistpll
hlt
outsb
cli
xchg
rcr
incl
push
inc
imul
or
in
jp
mov
stos
fdivl
repnz
cmp
sub
sub
mov
leave
sub
sub
loope
jne
mov
inc
mov
int
adc
lahf
sub
andb
adc
cmp
cmp
aaa
jb
std
adcl
roll
arpl
out
test
jb
mov
cmp
add
cmp
out
adc
xlat
pop
fwait
cltd
push
imul
mov
pop
pop
sub
mov
cs
stos
push
jo
stos
mov
pop
test
and
pop
pop
rcll
lret
jp
jno
jecxz
test
mull
add
test
jo
orb
orl
inc
lcall
ret
les
rcr
mov
push
ss
shlb
gs
popf
or
into
and
or
xor
pop
adc
mov
cmpsb
cmpsl
mov
lcall
xchg
insl
fstl
sub
sbb
inc
test
inc
sbb
ss
jl
or
clc
push
jmp
fs
push
clc
add
cmc
or
sti
outsl
add
dec
jbe
add
mov
pop
push
aam
enter
inc
incb
mov
test
xor
mov
pop
push
pushf
int3
lea
inc
xchg
mov
inc
push
push
add
fsubl
inc
lods
mov
adc
sti
xlat
iret
add
xor
pop
jg
pop
imul
in
push
dec
xchg
mov
inc
cmp
push
push
aas
cltd
ljmp
daa
ja
adcl
or
sbb
mov
addr16
jne
mov
insl
loop
clc
mov
lgs
pop
pop
fmulp
push
add
jae
dec
mov
dec
cltd
jge
ret
mov
xorl
outsl
push
in
push
dec
insb
inc
cli
mov
cmpsb
mov
sbb
xchg
lea
xchg
call
push
cltd
mov
and
add
movsl
xchg
mov
mov
mov
mov
inc
push
out
inc
in
cmp
push
movsl
stc
ja
xchg
ficoms
xchg
adc
pop
dec
jbe
xlat
fdivr
sub
sbb
mov
cmp
inc
shll
pop
mov
adc
mov
inc
insb
sahf
lahf
jmp
dec
data16
in
pop
in
test
pop
loope
xor
cmp
lea
nop
jle
test
ds
dec
or
mov
push
jg
insb
mov
mov
pop
adc
test
cwtl
jle
mov
rclb
sbbl
movsl
inc
inc
les
and
inc
push
into
es
mov
push
imul
test
push
inc
loop
pop
mov
inc
subl
mov
mov
push
stos
fwait
mov
adc
add
cltd
iret
push
cmp
lds
outsl
pusha
xor
pushf
lcall
sbb
cld
mov
popa
jp
out
cmc
data16
int3
push
pop
dec
ljmp
push
push
in
sub
add
sub
mov
xchg
jb
add
insl
lret
mov
dec
fmuls
push
outsb
pop
aam
rorb
popf
push
mov
mov
aad
aaa
xchg
jbe
jmp
inc
ret
test
nop
imulb
lcall
sbb
xor
inc
mov
mov
pop
jecxz
test
mov
adc
xchg
addb
shll
cld
jmp
jns
mov
jne
sub
test
push
enter
xor
sub
push
loope
test
insb
out
jno
and
out
fdivrl
inc
inc
mov
into
mov
jecxz
in
mov
scas
jg
lret
and
push
out
pushf
popf
xor
adc
ss
xchg
sbb
sub
fsubs
add
pop
mov
mov
xchg
je
xor
imul
in
pop
das
dec
imul
inc
and
add
and
nop
aam
call
inc
push
imul
jecxz
bound
xlat
dec
mov
cmp
sub
ret
cmp
adc
idivl
arpl
and
adcl
aad
xchg
dec
rorb
ljmp
test
inc
lret
test
xchg
or
mov
outsb
sub
cltd
out
test
movsb
ss
jo
jae
fwait
dec
fwait
mov
push
dec
ret
mov
push
test
pop
in
in
mov
mov
sbb
enter
xor
mov
pop
cmp
notb
adc
cmp
mov
jbe
imull
mov
out
leave
js
hlt
lds
into
test
or
sbb
add
out
imul
cli
std
test
rolb
push
jae
mov
or
and
lods
push
mov
add
stos
in
insb
xor
inc
push
outsb
or
fcoms
dec
int3
in
addb
mov
mov
retw
mov
xchg
es
fisubrl
inc
xor
cmpsb
push
pop
outsl
push
clc
std
inc
jnp
stos
mov
push
xor
mov
je
push
jmp
jge
jmp
and
xlat
jl
mov
add
out
cmpsb
push
add
test
jo
inc
jae
addr16
pop
pop
mov
mov
mov
inc
push
and
xchg
jge
add
imul
pop
dec
rorb
mov
or
sbb
mov
ja
movsl
adc
clc
ss
pop
mov
xchg
rcll
cmpsl
mov
jns
or
jp
mov
jp
loop
xchg
cld
sbb
mov
lcall
xor
das
jo
pop
add
sub
inc
popa
repnz
dec
add
rclb
dec
call
inc
dec
iret
fnstsw
xor
shll
in
lds
mov
dec
dec
scas
jno
scas
mov
aas
xor
push
orb
je
sub
add
pop
pop
cwtl
pop
inc
dec
lcall
inc
test
and
fwait
je
popf
jb
ficoml
adcb
xor
xor
ljmp
arpl
imul
sbbl
rcll
push
lret
out
enter
ret
mov
dec
sbb
and
scas
ffreep
adc
test
xorb
fs
lods
aas
push
pop
shll
sbb
and
lods
mov
lret
mov
rcrl
and
out
push
std
xlat
sbb
jae
and
aam
clc
out
push
insl
out
pop
das
push
cltd
in
rorl
bound
sahf
pop
xor
jb
pop
cmp
andl
gs
jg
xchg
movsl
fldcw
cwtl
sub
mov
add
adc
inc
xchg
sbb
sub
mov
xor
aaa
jg
sbb
xchg
jmp
push
int
ss
push
shll
push
lods
out
leave
std
pop
mov
pushf
pop
mov
std
push
test
dec
lcall
jns
jge
mov
lods
xchg
inc
mov
fmuls
mov
xchg
clc
fidivs
xchg
ret
scas
xlat
mov
lret
movsl
movsb
shlb
cmp
mov
mov
pop
cs
rcll
lret
test
sbb
mov
push
push
mov
leave
mov
cmpsl
mov
loopne
test
adc
and
cmp
jl
movb
sbb
sub
xchg
loopne
push
test
shl
outsb
sbb
andb
mov
cmpl
cmp
jno
inc
lods
je
mov
out
daa
cli
out
cmp
jno
in
ja
out
jbe
push
in
out
fdivp
mov
loope
jbe
aam
test
fildll
hlt
push
aad
xchg
enter
roll
pop
hlt
call
mov
inc
dec
adc
dec
iret
hlt
cmp
jb
je
xor
push
insb
sbbb
mov
push
das
pop
scas
add
push
mov
aam
lret
lret
xor
movsl
shlb
sub
addl
mov
mov
movsl
scas
shlb
mov
mov
mov
sub
cltd
test
xchg
or
jo
jno
sub
nop
and
test
pop
sub
cmp
ss
fcomps
fisubl
or
or
mov
out
push
fs
sbb
jmp
xor
rcl
mov
repnz
filds
xor
inc
je
jns
loopne
xchg
pop
push
insl
enter
scas
lods
dec
cmp
xchg
mov
sub
push
push
cmp
xor
xor
and
sbb
xchg
or
sbb
inc
mov
and
outsb
aam
jge
jge
push
rorl
xchg
push
sub
pop
test
insl
movsl
iret
into
lahf
les
mov
mov
imul
imul
inc
lret
xchg
ss
cmp
jno
jae
jne
ja
imul
popa
inc
imul
fstpl
push
inc
adc
inc
adc
push
or
cmp
xor
addb
add
jbe
js
jp
jl
outsb
test
sahf
jb
je
data16
push
popf
pop
pushf
pusha
bound
pop
mov
pop
xchg
dec
nop
push
xchg
push
xchg
inc
xchg
mov
test
inc
inc
sti
mov
mov
mov
and
push
icebp
icebp
repz
cmc
cld
decl
inc
out
inc
in
inc
repnz
lock
cmp
cmp
out
loope
lock
in
loope
xlat
sub
frstor
aad
call
fwait
dec
popf
pop
lahf
push
xchg
pop
xchg
dec
xchg
pop
xchg
dec
mov
lea
dec
orl
inc
jns
jnp
jge
jg
jno
jae
jne
ja
imul
and
push
dec
sti
lea
add
inc
jge
filds
jae
aad
jle
shlb
jne
ja
imul
outsl
jb
les
gs
addr16
pop
mov
push
pop
push
mov
dec
dec
dec
mov
pop
shrl
lds
sarb
and
mov
mov
mov
test
sbb
mov
pop
cmpsl
mov
popf
sbb
lods
xchg
push
xchg
scas
mov
mov
add
and
jne
push
std
cmp
icebp
jae
adc
jbe
pop
jmp
je
adc
in
out
fstps
push
or
pop
sar
aad
xlat
mov
xchg
and
or
fwait
std
adc
lahf
sub
xchg
and
or
and
icebp
jbe
in
mov
or
in
add
cmpsb
arpl
outsb
inc
pusha
cmc
jnp
jecxz
stos
xor
mov
mov
imul
mov
jmp
mov
push
jecxz
scas
fcomps
stos
push
fcmovnu
xor
dec
mov
mov
dec
lret
into
ret
stos
mov
ret
lods
int3
mov
ret
and
mov
mov
sub
sub
adc
mov
add
ficomps
imul
call
push
xlat
bswap
cmpsl
lret
adc
stos
iret
push
pop
mov
movl
cmpsb
mov
jae
adc
arpl
sbb
test
add
daa
insl
sbb
sbb
pop
fs
add
cltd
inc
push
sub
sub
pop
or
lcall
adc
je
push
jg
movsl
cmc
push
popl
andl
push
mov
inc
jg
imul
aas
dec
inc
mov
dec
xor
mov
cmp
dec
sub
insl
xor
daa
aaa
sub
inc
popf
call
mov
lds
xlat
vphadduwq
lahf
mov
push
cmp
sub
cmp
jmp
jo
jp
fs
fldl
subl
push
test
xchg
int3
fwait
out
shlb
fisubrs
mov
lcall
mov
add
mov
mov
push
test
xor
sbb
ss
add
cs
and
adc
sbb
or
adc
add
or
clc
jecxz
movsl
in
fiadds
mov
loope
mov
push
jb
pop
push
ja
out
imul
clc
push
pop
adc
lock
push
adc
inc
inc
pop
call
inc
ds
ret
cmp
gs
or
fiaddl
pop
aaa
fimuls
push
sub
push
les
stos
mov
stos
mov
jbe
test
pushf
aaa
outsb
mov
xchg
das
gs
xor
nop
daa
bound
xchg
mov
cmpsb
test
push
mov
cwtl
inc
scas
and
mov
cmp
cmp
xor
ss
sub
xchg
and
es
mov
jns
mov
jl
jle
jbe
adcl
jp
mov
ss
push
es
adcb
cmc
lret
arpl
add
jbe
repz
push
push
mov
clc
mov
arpl
out
in
shr
xor
out
sti
cwtl
int
out
mov
in
repz
sub
loop
sub
pop
cmpsb
popa
imul
add
insl
jg
mov
std
mov
mov
pop
hlt
pop
inc
jae
mov
aas
and
cmc
xor
xor
xor
fistpl
xor
pop
iret
sub
xor
ss
cmp
movsl
xor
and
iret
inc
xchg
cmp
cmp
test
mov
sub
and
mov
insl
jg
mov
je
popl
stos
sub
rolb
inc
xchg
mov
lock
mov
mov
mov
add
stc
jmp
pop
mov
negb
mov
and
orb
jle
lea
icebp
add
mov
out
mov
repnz
imul
dec
inc
loope
push
sub
std
inc
jne
out
jo
jae
faddl
data16
push
cs
leave
mov
rol
cs
sub
popa
dec
arpl
fwait
repz
xchg
aas
in
jmp
fldl
mov
js
jp
jl
ja
jno
sub
xchg
jge
orl
sub
add
andl
frstor
mov
test
lahf
scas
push
push
xchg
jbe
les
outsb
dec
loopne
bound
mov
mov
xor
test
adc
lock
jp
cmc
inc
je
data16
ja
jno
icebp
push
in
out
mov
or
pop
shl
in
fldenv
fneni(8087
shl
adc
aad
outsb
fmuls
not
pushf
icebp
sbb
or
shlb
add
jno
mov
add
jge
outsl
fidivl
jge
jne
jno
imul
mov
mov
mov
mov
test
sub
mov
pop
loop
pop
push
jmp
adc
push
adc
pop
sbb
loope
movsl
inc
add
mov
test
pop
push
insl
dec
addr16
popa
cmp
push
gs
addr16
pop
cmp
pop
cmp
push
dec
push
cmp
dec
cs
aas
dec
xor
inc
and
cmp
cmp
cmp
cmp
cwtl
mov
mov
mov
test
cltd
scas
lcall
cmpsl
cwtl
cltd
mov
mov
mov
lea
lea
and
mov
lahf
cmp
cmp
ds
xchg
xor
xor
add
xchg
sub
sub
inc
call
xchg
neg
mov
lret
mov
lret
xchg
call
jl
fmulp
jg
sarl
xor
lock
cmp
sub
out
cs
xor
and
in
inc
sub
sbb
sbb
push
inc
and
adc
adc
push
cmp
fisttpl
sub
adc
add
add
push
cs
cli
and
lret
add
jb
je
jbe
js
push
insb
outsb
mov
fs
xchg
push
xor
pusha
xor
push
mov
dec
jge
es
mov
inc
jnp
sbb
jle
pop
cmp
sbb
jl
sbb
mov
mov
mov
jecxz
test
ficomps
xchg
fcoml
mov
mov
aad
jle
rolb
jp
jl
jle
xorb
hlt
in
inc
clc
call
out
cmp
in
out
call
aad
aaa
loopne
shrb
aam
sub
int3
leave
into
sub
int3
ret
mov
mov
pop
shrb
push
fdivrl
outsb
sub
cs
fidivl
insb
xor
and
shlb
bound
rcrl
push
sbb
push
pusha
and
adc
les
push
sbb
or
ret
adc
add
mov
cli
cmp
add
jbe
js
push
insb
sub
jo
bound
push
push
pop
mov
and
push
adc
cmpsb
pop
pop
dec
cltd
dec
adc
push
adc
inc
lcall
ds
inc
or
push
mov
jp
or
jge
jmp
lcall
jno
repz
fs
negb
bound
out
pop
xchg
mov
fnstsw
call
hlt
int3
negb
iret
ljmp
or
rol
outsb
mov
pushl
pop
add
fidivrs
fs
scas
push
mov
in
mov
lods
push
scas
mov
dec
test
jecxz
mov
dec
ret
sub
sub
sbb
es
mov
sbb
push
push
push
xchg
adc
adc
xchg
or
push
pushf
adc
push
fwait
or
cli
mov
xchg
xchg
sub
je
mov
ja
jo
adc
xor
xchg
rcll
test
sub
shrb
leave
insb
or
add
add
add
lahf
repz
insl
std
pusha
pop
dec
inc
std
push
push
sbb
add
dec
int3
xor
leave
stc
inc
lret
sub
sti
xlat
stos
mov
aas
aam
add
cmc
sub
mov
lret
mov
mov
sbb
mov
in
and
mov
scas
in
mov
cmp
sub
ret
ja
sbb
lahf
ja,pn
mov
jg
bound
sub
outsb
pop
js
jo
dec
and
push
push
std
push
push
loope
pop
push
out
pop
pop
pop
test
dec
add
shlb
faddp
mov
aas
jno
sahf
stos
iret
ss
dec
shlb
stos
lds
popa
roll
cmp
pusha
js
mov
ja
mov
dec
insl
cwtl
cs
loopne
cmp
or
test
cltd
xor
insl
xor
sub
cs
and
xchg
jnp
lahf
and
jmp
push
sahf
into
jmp
adc
sbb
adc
ss
mov
inc
mov
inc
test
xor
xchg
aaa
out
jp
jae
jge
xor
jl
sub
jl
aas
jecxz
cs
shll
jp
xor
xor
push
fcoml
ds
pop
test
data16
pop
fildll
imul
lcall
cmp
inc
pop
in
inc
push
pop
mov
mov
sub
loop
aaa
mov
cli
cmp
iret
xor
sub
mov
popf
in
imul
stos
pop
sbb
test
fs
push
outsb
xchg
das
dec
sub
or
jl
cmp
jp
sarl
fidivrl
pop
sub
lods
and
mov
cld
popf
daa
fstpl
mov
ffreep
mov
ret
cwtl
cltd
jle
not
pop
dec
xor
inc
int
jne
rclb
jl
xchg
scas
and
and
sub
mov
cmp
mov
mov
or
dec
jecxz
fdivl
xchg
xor
pop
adc
mov
mov
jne
pop
or
js
cmp
or
push
addr16
mov
fucomip
mov
jmp
dec
cmp
cmp
cltd
inc
ds
sbb
ljmp
cmp
repz
daa
loope
popa
push
bound
sub
sub
inc
or
out
aas
out
sub
ljmp
cmpb
jb
mov
cltd
lret
inc
jae
inc
mov
dec
in
lret
inc
outsb
jle
jae
inc
cwtl
push
jno
mov
lret
push
popa
add
sbb
push
ss
push
push
jbe
xorb
ret
test
jmp
fsubrs
dec
cs
dec
inc
or
cmp
inc
inc
imul
push
pop
jo
pusha
insl
mov
fwait
addr16
pop
pop
pop
inc
and
mov
adc
push
and
ss
adcl
mov
xchg
dec
mov
andl
inc
sahf
fs
push
dec
pushf
dec
dec
inc
dec
sub
sbb
das
sbb
and
sbb
cmpl
rol
into
fisttpll
aad
into
mov
call
into
fmul
mov
out
ljmp
dec
inc
ds
cmp
adc
cmpsb
outsb
ljmp
xor
xor
jle
and
lods
cmp
lahf
fwait
cmp
push
imul
adcl
push
lcall
inc
inc
cmp
sbb
jo
mov
mov
movl
dec
pop
rcrb
lret
mov
jmp
js
fnop
fabs
mov
lods
leave
mov
jmp
jmp
in
repnz
inc
and
mov
jbe
mov
test
hlt
sbb
push
mov
mov
dec
out
mov
rorb
mov
mov
sub
push
imul
sbb
dec
cmp
bound
ds
mov
lds
iret
mov
mov
mov
xchg
test
xchg
mov
xchg
mov
loopne
repz
add
lret
xchg
mov
jmp
dec
gs
mov
or
inc
xor
jbe
test
xor
das
shl
push
adc
dec
push
push
notl
rolb
sbb
scas
in
or
insl
inc
fs
cld
sti
cld
outsw
xor
arpl
je
gs
pop
dec
dec
pop
outsb
pop
adc
gs
push
xlat
ret
pop
pop
aaa
xor
pop
jg
add
push
dec
adc
enter
dec
dec
add
lds
aam
mov
add
lret
mov
add
stc
cld
or
lds
jle
repz
call
cld
jg
fs
scas
out
shl
mov
rcl
into
xchg
aam
fistpll
out
adc
pop
dec
insl
cmp
push
inc
aaa
push
leave
lock
push
push
push
push
push
adc
out
arpl
inc
dec
dec
adc
movsl
aad
movsl
scas
scas
xchg
mov
fs
movsl
fwait
mov
mov
add
push
jnp
lock
jmp
push
ljmp
mov
loop
rcl
lods
insb
pushf
sub
xchg
sub
js
xchg
mov
pop
mov
cmp
lods
aas
push
inc
sbb
dec
setne
sbb
idiv
mov
jnp
jns
mov
xor
add
or
adc
lods
mov
aad
scas
inc
stos
push
xchg
jmp
mov
cli
lret
out
inc
test
cltd
cltd
scas
xchg
test
clc
push
mov
lret
iret
iret
out
ror
iret
into
ret
add
jmp
aam
loopne
fildll
enter
fists
and
xlat
mov
inc
fsubp
flds
dec
push
dec
push
in
pop
dec
add
cli
sub
xor
lock
movsb
fucom
lret
adc
ret
mov
aam
rcl
iret
mov
rcl
mov
mov
mov
aaa
mov
sti
or
pop
sbb
mov
add
repz
push
sbb
in
or
push
mov
xchg
ficoml
cld
andb
adc
cmpl
jl
repz
jge
stc
loope
mov
jmp
shrl
fsubrp
ljmp
add
mov
in
mov
jb
inc
jl
addb
popa
push
stos
ror
int
ror
stos
fldt
mov
fstp
into
mov
xlat
rcr
fcomp
fistpll
sti
das
sub
sub
pop
xor
sbb
and
cwtl
fimull
aad
repz
loope
int3
mov
push
push
loopne
fildll
inc
mov
sub
gs
or
incb
idiv
add
and
adcb
fistpll
xlat
mov
xchg
pop
push
push
dec
int3
push
pop
push
dec
dec
pop
add
shlb
and
lret
stos
mov
cltd
out
inc
inc
pop
inc
xor
pop
ds
push
mov
dec
and
sbb
inc
sbb
sbb
nop
test
fdivr
loopne
rcl
pop
cli
inc
ja
inc
inc
add
ja
test
sub
sub
add
adc
sub
psubd
xor
in
repnz
dec
leave
jmp
fldt
fnstcw
out
pop
addr16
inc
pop
gs
mov
in
int3
ret
mov
jne
mov
push
push
in
call
popf
jmp
fsubrp
or
or
xor
jno
pop
jns
subl
dec
jno
lods
xor
mov
adc
popa
shrl
lock
and
pand
adc
jmp
in
sahf
int
out
ret
daa
iret
xchg
pop
fabs
loop
out
fimuls
adc
add
sbb
jnp
pusha
dec
ja
jnp
je
pop
imul
mov
mov
mov
xor
cli
icebp
in
ljmp
fistpll
mov
pushf
mov
hlt
push
cwtl
mov
add
daa
cmp
push
aas
jp
mov
fwait
lcall
test
fisttpll
imul
outsb
and
in
and
int3
lret
cmp
and
xchg
cld
aaa
and
dec
ds
fwait
dec
cmp
dec
or
inc
inc
dec
ss
jl
std
pop
adc
stc
add
mov
aas
jne
scas
xlat
push
or
mov
mov
xchg
lods
mov
leave
leave
mov
mov
mov
test
mov
xchg
adc
pop
add
or
and
mov
adc
jae
shll
fstpt
adcl
js
jle
in
pop
popa
iret
xchg
scas
sarl
xchg
ud1
add
inc
xchg
pop
jecxz
fwait
idivb
out
cmp
repnz
cld
xchg
es
arpl
lea
cmc
sub
and
out
and
or
sub
cld
icebp
into
or
add
incb
icebp
icebp
int
mov
outsb
pop
jnp
pop
addr16
std
push
dec
push
xorb
fcomp
fisubrs
cmp
sub
push
jnp
and
and
adc
sbb
cmp
mov
outsl
popa
movsl
or
sub
xchg
push
arpl
paddb
sbb
mov
mov
outsb
stc
popa
fs
inc
das
into
mov
jle
shr
jmp
cmpsl
popf
xchg
movsl
in
or
or
cmc
or
lahf
xchg
js
imul
iret
push
movsb
in
iret
int
out
mov
ret
out
enter
lret
fst
orl
adc
loope
or
sar
incl
hlt
std
outsl
bound
jb
jno
push
js
dec
mov
dec
inc
pop
push
insb
imul
shlb
cmp
and
int
mov
les
lret
lea
xchg
or
pop
or
add
sbb
add
sbb
divb
adc
or
mov
sbb
mov
fistpll
pushf
lock
stos
mov
push
cwtl
mov
pop
cltd
movsb
pop
dec
xchg
adcb
dec
cmp
sub
lret
jb
outsb
fcoms
adc
movsl
ret
fcmovnb
lret
pop
out
mov
adc
mov
hlt
push
xchg
jmp
mov
mov
mov
ja
pop
mov
lea
pop
js
jle
sub
test
jnp
sub
das
sub
push
mov
jecxz
add
data16
in
xor
add
mov
into
pop
cld
shrb
jp
les
xlat
ljmp
ljmp
mov
sbb
push
aam
jae
and
and
sub
sub
fcompl
sbb
cmp
shlb
sub
cmp
and
sbb
sub
mov
push
xchg
xor
inc
pop
dec
cli
jns
xchg
xchg
test
iret
xchg
bound
enter
movsl
aas
push
and
out
inc
xchg
mov
push
or
mov
lret
mov
lods
mov
pusha
pop
push
pushf
dec
mov
sahf
xor
sbb
ret
cmp
adc
out
add
rcrb
add
in
add
add
mov
lret
shlb
mov
decb
clc
out
mov
adc
icebp
inc
xlat
in
pop
adc
or
sub
pop
imul
adc
xorl
icebp
ror
adc
or
loop
push
js
pop
sbb
push
pop
mov
xor
popa
mov
sub
and
cwtl
test
pop
jl
cmp
mov
nop
cli
js
mov
cmp
pop
adc
repnz
mov
sub
add
clc
xchg
pop
repz
mov
mov
insb
jp
cmpl
test
pop
bound
stos
dec
cmpsb
push
xchg
mov
mov
stos
lds
les
xor
pop
clc
fwait
xchg
mov
mov
insb
jb
jg
imul
pop
mov
push
movsl
lret
push
icebp
dec
dec
arpl
sub
or
adc
les
dec
mov
or
sbb
cs
adc
fnstenv
popf
addr16
push
bound
xchg
imul
xchg
popa
push
pop
sbb
std
mov
cmp
jecxz
fdivl
sbb
call
and
jb
push
sbb
jne
jbe
lea
adc
sub
pop
lret
mov
lea
push
or
adc
ret
ja
les
mov
dec
xor
pop
sub
cmp
add
sub
sub
orl
cmp
lahf
and
test
inc
xchg
mov
dec
pop
pop
mov
lahf
nop
jbe
mov
jno
inc
xchg
insb
jbe
fsubr
adc
std
pop
add
cli
out
out
lock
out
mov
in
out
stc
sbb
imul
inc
dec
daa
or
ljmp
sti
sbb
out
movsb
hlt
repnz
or
mov
stc
in
jecxz
sub
mov
out
shl
stos
fdivl
and
fcomp
mov
jl
cmp
adc
pop
sahf
inc
stc
dec
push
adc
sub
xchg
mov
orb
mov
and
mov
daa
xchg
or
popa
pop
adc
pop
dec
sbb
sbb
popa
rcl
stos
lret
jne
ja
jp
jp
xchg
jae
fwait
add
inc
je
xorb
push
stos
xchg
dec
pop
loopne
xchg
arpl
pop
add
inc
rolb
jbe
arpl
push
clc
mov
les
mov
stos
stos
push
jae
nop
lods
mov
sahf
popf
sahf
cmc
jmp
cld
ljmp
adc
subl
jecxz
movsb
mov
cmpsl
loopne
popa
cli
jo
pop
adc
dec
inc
inc
add
inc
cmc
bound
mov
inc
inc
cmc
push
fs
dec
repnz
out
sbb
xchg
mov
or
int
sub
testb
lock
inc
jne
data16
ss
push
adc
hlt
fwait
sub
test
and
jns
xchg
sub
aaa
pusha
pop
mov
inc
aas
cmp
mov
mov
cmpsb
mov
es
sub
jle
sbb
sbb
hlt
cld
cld
cmp
stc
sub
aas
inc
dec
dec
out
jp
jmp
loopne
in
ja
daa
sbb
lods
add
shl
dec
mov
inc
cmp
inc
idivb
popf
popf
fcomps
push
dec
inc
addr16
popf
sti
mov
cmp
aam
enter
insb
outsb
je
subl
jb
outsl
jno
pop
push
ja
jae
jae
jb
and
shll
out
adc
jb
jmp
jmp
fdiv
popa
lret
repz
mov
jno
outsb
adcl
mov
jo
ja
jo
push
adc
test
xchg
xchg
push
adc
sub
in
dec
fstp
jmp
push
into
loop
into
cmp
jle
bound
xchg
addr16
insb
loopne
out
sbb
ja
bound
movsb
inc
dec
pop
pop
xchg
pop
popa
jne
minps
jnp
xlat
jg
lock
test
in
in
dec
fistpll
lock
out
call
outsb
stos
aad
sbbl
cltd
stos
xchg
gs
imul
lahf
enter
or
dec
dec
bound
movsl
dec
push
jae
addl
jl
sbb
repz
jmp
loop
repz
loope
mov
aam
push
jno
cmp
pushf
inc
jb
bound
cmp
outsl
movsb
sub
popa
xor
fsts
dec
pop
pop
jge
ja
int
xlat
hlt
out
test
lods
fcompp
fmulp
mov
fistpll
jne
stos
mov
cmp
inc
fsubr
add
ljmp
inc
push
push
dec
mov
or
ja
mov
xor
scas
mov
mov
xchg
test
data16
int3
stos
ret
mov
mov
jecxz
ret
je
push
and
xor
xchg
push
mov
cs
or
cmp
xchg
cltd
popa
pop
xchg
jo
addb
sbb
pop
outsl
jae
xchg
xchg
rcr
mov
fwait
mov
mov
inc
ret
popa
into
mov
ja
pop
pop
pop
mov
pop
movsb
iret
inc
insl
fsubr
jb
pop
xchg
push
push
pop
mov
mov
add
lret
mov
jae
and
pop
popa
pop
movsb
xor
insl
bound
rorb
adc
or
out
pop
add
xor
xor
adc
or
adc
in
addr16
sbb
ljmp
lock
addr16
iret
arpl
cmc
push
or
in
inc
jle
out
frstor
mov
inc
insb
scas
xchg
mov
aaa
dec
xor
das
cmp
cmp
inc
xor
ljmp
repnz
out
dec
addr16
shll
fwait
icebp
jmp
pop
jl
fs
inc
bound
jae
je
test
jmp
insl
adc
adc
add
loop
dec
sub
xor
mov
and
xor
rcrb
inc
dec
adc
dec
pop
pop
mov
adc
divb
movsl
mov
test
xchg
mov
xchg
cmpb
xchg
xor
movsl
ds
dec
dec
rorl
ss
dec
mov
adc
xor
data16
dec
and
xchg
sbb
add
inc
xor
ficoms
adc
adc
ljmp
scas
addr16
pop
arpl
dec
lahf
xchg
and
mov
mov
insb
stos
jnp
icebp
shr
clc
clc
out
aas
fcompl
push
ftst
xlat
or
pushf
xor
and
adc
and
outsb
mov
jns
push
pusha
inc
arpl
and
add
insl
push
orb
stc
adc
pop
sbb
xor
idivb
shrb
adc
cmpb
test
add
inc
mov
xchg
outsb
xchg
pop
push
dec
adc
lret
sub
fdivrl
jp
mov
popf
xchg
xchg
test
pop
cmp
push
mov
mov
adc
cmp
xchg
mov
andl
xchg
aas
cmp
test
fadds
stos
lea
add
sbb
aaa
aaa
cmp
pop
sbb
loop
pop
into
or
adc
mov
or
loopne
or
and
mov
mov
cmc
out
loop
stos
and
aam
dec
dec
mov
fwait
mov
dec
jge
xorb
stos
sub
xor
mov
outsb
insl
adc
pop
mov
sbb
cmp
popf
jp
test
sub
xchg
pop
popa
sub
or
push
out
xor
mov
leave
int3
int
lret
enter
arpl
nop
xchg
pop
push
nop
insl
or
mov
jmp
in
push
icebp
cmp
cmp
out
xchg
leave
cmp
inc
jmp
mov
xor
scas
test
lahf
xor
xor
sub
repz
jnp
gs
xor
jbe
into
jbe
pop
outsb
subb
sub
inc
cmp
aas
cmp
pushf
mov
hlt
lret
into
mov
stos
out
cmpsb
mov
js
lret
js
iret
mov
fmull
xchg
mov
xorb
pop
push
ja
xorl
sub
cmp
inc
sarl
scas
sub
fcomps
mov
xchg
sub
mov
icebp
mov
cwtl
dec
dec
mov
xchg
cltd
lcall
xchg
pushf
cltd
xchg
mov
sarl
jo
dec
fdivl
outsl
xor
pop
insb
push
js
shrb
pop
jecxz
loope
enter
fdivrs
enter
cmpsb
mov
sahf
mov
movsl
rcll
mov
sbb
cmp
mov
mov
pop
arpl
pop
push
inc
das
dec
dec
pop
pop
mov
pop
cmp
stc
sbb
pop
dec
inc
adc
das
inc
xor
push
sbb
sbb
and
inc
sbb
pushf
call
daa
iret
pop
and
and
sub
imul
push
dec
push
pop
dec
dec
xor
fidivrl
sub
sbb
push
xor
mov
inc
cld
push
mov
sbb
adc
and
mov
dec
xor
cmpsl
cs
mov
imul
sub
sub
push
xchg
int3
lcall
pop
sub
test
ret
add
mov
dec
mov
mov
test
out
xchg
jbe
addl
mov
xchg
test
cmp
push
shl
rcll
inc
dec
arpl
xor
jno
add
insb
insl
xchg
xchg
mov
rcl
or
lret
push
sarl
ret
mov
mov
cld
xchg
std
jmp
fldt
repnz
les
mov
or
shl
add
or
push
repnz
outsb
push
xor
addr16
pop
xor
and
or
adc
incb
scas
push
and
fldln2
pmaxub
pop
out
ror
sub
sbb
hlt
scas
xchg
xor
jae
add
add
fstps
test
in
or
lods
mov
or
in
jge
adc
mov
and
mov
scas
add
lock
mov
mov
jecxz
mov
xchg
pop
jmp
lock
push
inc
xor
cmp
addr16
arpl
add
bnd
sti
push
ss
pop
popa
or
std
dec
sub
call
pop
stos
push
lods
insb
push
roll
push
popf
lock
ret
jge
cmpsb
into
xlat
int3
int
in
pop
stos
jo
repnz
and
dec
scas
pop
dec
inc
stos
imul
pop
pop
into
insl
je
pop
adcb
aas
or
xchg
jne
js
ja
and
cmp
lret
sarb
test
hlt
test
repz
sub
sbb
dec
ljmp
outsb
push
sub
shrl
jmp
xor
loopne
sbb
out
jb
popl
pop
outsl
imul
std
enter
stos
push
lods
stos
mov
mov
fwait
dec
ljmp
lea
dec
leave
or
xor
sub
fsubs
xor
dec
inc
int
mov
xor
push
sbb
jp
fistpll
int3
ficoms
or
fisttps
jb
call
sbb
pusha
inc
inc
pop
inc
inc
pop
pop
cmp
dec
dec
mov
mov
push
sbb
dec
rcl
dec
or
mov
adc
shrl
cmpsb
aam
in
scas
aaa
inc
adc
mov
inc
mov
xchg
popf
hlt
inc
xchg
or
ja
cmpsb
xchg
xchg
dec
stc
scas
mov
shll
sarb
mov
into
mov
adc
xor
dec
mov
push
inc
push
fstpl
or
adc
pop
adc
xor
dec
inc
hlt
sub
roll
xor
mov
jg
add
insl
bound
cwtl
xchg
imul
dec
fisubrl
jno
xchg
scas
test
ficomps
push
mov
pop
imul
sbb
push
pop
mov
ret
jnp
push
mov
cmp
mov
popa
in
insl
cltd
daa
xchg
aad
xlat
xchg
inc
test
mov
aam
cs
xchg
mov
shlb
pop
ret
dec
cmpl
jb
pop
mov
dec
lods
loope
sbb
fwait
pop
ss
fadds
mov
test
dec
out
jle
sub
popf
into
out
mov
stc
pop
and
ja
mov
daa
arpl
and
and
dec
and
ljmp
mov
dec
cmpsb
pop
pop
cltd
icebp
cwtl
bound
dec
pop
xchg
test
xor
fwait
jno
in
iret
sbb
adcl
adc
xchg
test
inc
addl
mov
inc
pop
sbb
xor
push
out
pop
dec
jnp
lea
data16
pop
jge
jmp
pop
mov
dec
das
dec
push
test
mov
outsb
dec
and
push
or
cmp
cmp
mov
mov
aam
rorb
adc
pop
lds
int
fldl
cmp
xchg
mov
pop
adc
sbbl
sahf
sahf
jnp
test
sub
mov
pop
add
sbb
and
xchg
in
loopne
into
in
adc
mov
aam
add
movsl
pavgb
lods
mov
outsl
mov
inc
insb
jecxz
decb
or
jae
xlat
cs
mov
or
pop
cmp
cmp
sahf
and
daa
push
dec
sbb
repz
xor
mov
xor
cmc
mov
fucomi
hlt
fsubrs
arpl
and
into
xchg
popa
xor
arpl
push
xor
pop
sub
sahf
rorl
cmp
inc
int
mov
shlb
cmpl
mov
jb
mov
shll
mov
mov
mov
mov
mov
mov
mov
mov
mov
scas
dec
scas
mov
scas
mov
les
repnz
out
pop
add
push
pop
push
pusha
repz
pushf
fdivrs
add
mov
js
cld
ds
mov
pop
es
aad
pusha
int3
jecxz
mov
shll
lds
popf
cltd
decb
or
outsl
insb
add
push
fimuls
mov
and
dec
push
sbb
pop
adc
nop
sub
jl
and
adc
inc
aas
sbb
inc
dec
add
xor
jmp
sahf
cmp
xor
stos
or
cli
int3
and
stos
mov
outsl
push
lahf
inc
xor
cmpsl
cmp
push
lahf
lcall
pop
insl
sub
orb
je
jg
pop
jo
ja
fdivs
ja
aas
cmp
dec
mov
adc
ja
stc
and
fisubl
hlt
testb
mov
cltd
cmpsl
pushf
xchg
xchg
fidivrl
mov
lods
mov
mov
mov
dec
mov
jp
or
cmpsb
in
rorb
lock
pushf
aam
les
cli
cmpsb
cmovnp
repz
ss
stc
subl
add
int3
out
mov
in
cs
not
xlat
in
mov
push
das
mov
xlat
or
repz
aad
cwtl
dec
sbb
cmp
js
mov
push
aaa
sub
adc
sub
cmp
fistps
sub
add
sbb
push
xchg
into
or
jl
dec
movsl
fisttpl
test
xchg
inc
xor
das
fs
std
pop
outsb
inc
mov
jne
out
stc
ja
addr16
push
cwtl
fcmovnb
jp
dec
mov
dec
sub
pop
xor
outsb
stos
or
test
cmp
aas
push
stc
jp
cwtl
loope
and
mov
xchg
dec
pop
fs
in
stc
xchg
push
add
jns
jmp
xlat
in
loop
rclb
test
mov
and
xor
push
lods
xchg
loop
pop
in
pop
cmp
push
xor
clc
inc
fnstcw
aam
enter
movsb
xchg
sbb
xchg
loope
pushf
loope
test
mov
out
rorl
mov
lods
push
or
in
call
dec
push
and
xchg
xor
in
out
cmp
insb
jge
ss
insl
addr16
dec
cltd
jg
push
mov
nop
aam
xlat
inc
arpl
cmpb
mov
push
int
xchg
inc
mov
push
xchg
lds
mov
push
movsl
icebp
jp
inc
dec
imul
cs
je
inc
lock
pop
sub
mov
icebp
push
sbb
ficoms
mov
xor
cmp
mov
mov
jno
cmp
test
dec
xchg
xor
test
dec
xor
shrl
xlat
push
xor
push
inc
adc
push
xchg
int
mov
enter
push
jb
andb
mov
jge
daa
lahf
cmp
xchg
lret
lods
and
jg
sbb
push
xor
cmp
sahf
sub
int3
in
add
sahf
rolb
insb
push
dec
subb
adc
and
mov
fistl
dec
test
mov
movsb
nopl
mov
cmp
negl
mov
cmp
shl
addb
mov
push
dec
mov
add
push
mov
push
mov
sahf
cmp
dec
sub
js
aad
mov
xor
loope
rorb
mov
xor
push
push
dec
xor
pop
pcmpgtb
subl
cmp
pushw
mov
bound
cmpsl
push
sti
push
sub
stos
hlt
or
pop
daa
aam
lea
mov
scas
push
hlt
enter
dec
push
lret
fisttps
lret
iret
jmp
int3
jb
lods
in
pop
rcrl
stos
xor
push
daa
es
push
in
sbb
and
bound
rcrb
cmp
pop
mov
sti
sub
cltd
cwtl
loopne
push
fisttpl
pusha
ja
or
pop
sub
inc
es
lcall
rcrb
iret
xchg
mov
or
mov
push
or
cmp
fdiv
test
add
dec
ret
sbb
inc
sub
idivb
fs
dec
jne
pop
outsl
sbb
xor
ds
mov
clc
xchg
icebp
add
cmc
adc
push
lret
sbb
ds
popf
jecxz
rorl
rdtsc
pop
or
pop
xchg
sarl
push
int3
push
add
fldt
sbb
sub
in
sti
add
jne
jecxz
jg
jmp
jb
pop
pop
inc
jnp
pop
fisubrl
data16
jne
out
inc
push
cmc
leave
cli
aaa
ret
jecxz
xchg
or
xchg
add
in
dec
push
and
mov
cwtl
ljmp
out
ret
or
adc
test
std
add
cld
clc
dec
bound
std
dec
in
mov
or
ja
pop
std
push
mov
sbb
push
scas
insl
xor
in
leave
dec
in
faddl
daa
loope
scas
aaa
inc
jb
sbb
jae
stos
cmp
push
xor
dec
sub
lcall
insb
jbe
inc
lea
mov
lcall
loope
enter
lret
push
sbb
and
js
jmp
pop
adc
popa
fcompp
jno
mov
pop
dec
mov
ljmp
or
push
ret
cmp
scas
out
test
sarl
mov
repz
cmp
addl
xchg
and
sub
in
aaa
insl
das
sbb
or
inc
repz
roll
fcoml
xor
push
sbb
pop
mov
add
data16
movsl
lea
cmp
inc
test
les
sbb
popa
mov
pop
rcrb
or
push
inc
hlt
sub
into
iret
or
cld
add
or
add
lea
mov
fdivrs
jns
adc
cmp
mov
fnstsw
xchg
inc
outsb
pop
pop
xor
push
push
outsb
jae
add
push
inc
rcll
daa
outsb
or
sub
jnp
pop
fisttpll
add
push
jae
sbb
xorb
js
pop
xlat
fwait
mov
mov
jl
sub
popa
loop
jne
outsb
pop
xchg
lret
insl
add
cmp
inc
dec
cltd
or
xor
test
mov
hlt
sbb
repnz
cmp
pop
scas
lods
and
leave
test
icebp
push
sbb
out
adc
and
seta
ret
test
leave
fdivr
sub
sti
loop
fwait
scas
push
lods
pusha
inc
push
pop
or
pop
lods
inc
xor
pop
lcall
lcall
jne
out
and
and
push
xchg
and
or
loope
fistpl
and
adc
cmpsl
les
rclb
call
mov
xacquire
in
mov
mov
add
sti
push
gs
mov
mov
insl
xor
jle
adc
dec
jg
outsb
push
pop
stos
nop
in
iret
pop
mov
leave
or
jp
sbb
xlat
cmp
aaa
jne
cld
lock
mov
ret
data16
fwait
mov
jecxz
mov
stos
sub
in
mov
stos
popa
lahf
stos
rorl
leave
xor
push
sbb
pop
nop
or
sub
setle
movsl
scas
add
push
imul
call
inc
or
shlb
sub
icebp
jb
call
repz
inc
cmp
test
bound
dec
add
sti
stos
movsb
sub
push
imul
out
and
push
pop
push
in
stc
dec
pop
cmp
repnz
cmp
mov
jne
mov
insb
adc
enter
mov
add
ret
pop
mov
orb
lea
adc
xor
sub
scas
into
repnz
mov
mov
inc
xorb
jg
jae
test
lods
leave
mov
pushf
cmp
xor
es
mov
mov
cmc
imul
xchg
pop
add
int
clc
add
pop
into
push
imul
cli
fiadds
int3
fbld
xor
mov
and
adc
inc
sbbl
repnz
cmp
ljmp
sbb
data16
rclb
sub
imul
out
stos
jae
push
sbb
out
xor
jmp
push
sub
aad
mov
jae
shl
jnp
popf
xchg
int3
movsb
add
lds
mov
test
push
in
test
ja,pn
rep
mov
ret
ret
test
vprotd
cmp
push
add
sahf
les
mov
lcall
les
mov
clc
jno
pop
ja
jae
pop
out
push
sarl
fldt
xchg
mov
es
gs
jae
adc
push
and
sbb
xor
inc
shl
cmp
aas
adc
cli
out
jnp
mov
cmpsb
mov
add
pop
mov
iret
push
lcall
jns
adc
and
movsl
inc
add
xchg
xchg
jne
jmp
adc
sahf
std
stc
fidivrs
cmp
bound
sub
decl
pop
es
stc
jbe
loope
push
out
push
testl
es
fwait
pop
pushf
mov
call
aam
jmp
push
js
lcall
jnp
cmp
imul
pushf
jo
stc
and
xor
jns
outsb
xor
jno
cli
add
test
inc
push
and
data16
and
rorb
or
cmp
out
xchg
jle
das
je
mov
mov
sub
xor
xchg
dec
push
aad
aaa
mov
mov
mov
mov
adc
pop
cmp
push
addr16
lods
push
sub
nop
jecxz
insl
xchg
cmp
cli
jae
pop
rol
data16
sub
mov
dec
xor
mov
and
pop
mov
cmp
out
dec
ja
mov
insb
jp
mov
fs
inc
pop
or
jp
mov
std
pop
std
xlat
jge
push
mov
loope
lea
fs
or
ljmp
push
pop
and
in
outsl
cli
in
cli
xor
cmp
ljmp
sub
std
mov
adc
bound
cmp
inc
lahf
test
cmpsl
mov
scas
cmp
add
cwtl
daa
jmp
shlb
in
pusha
inc
and
or
xchg
jmp
pop
jge
roll
add
cltd
xchg
jp
mov
sbb
pop
ja
jns
divb
aaa
xor
test
popf
pusha
mov
xchg
mov
jns
lea
push
je
es
in
lret
cmp
xchg
stc
sbb
jae
mov
lcall
enter
mov
loopne
in
daa
out
fbld
sub
test
dec
xor
scas
cmpsb
push
mov
leave
psraw
sti
scas
push
sbb
hlt
adc
or
pop
in
xchg
or
stc
pop
popf
mov
test
aaa
push
in
dec
shrl
sbb
std
sub
popa
sbb
roll
enter
ljmp
mov
imul
dec
sub
ret
ljmp
aaa
ss
rdtsc
arpl
in
xorb
outsb
pop
sbb
and
adc
fists
inc
or
push
int
repz
add
loope
inc
aaa
rcr
or
cs
push
adc
shlb
dec
inc
mov
lea
adc
pop
sahf
mov
mov
add
subl
in
push
rorl
push
lock
fcomps
add
fists
jnp
test
xor
icebp
cmp
out
mov
inc
ficoml
loope
xchg
stos
insl
mov
jbe
test
data16
rorb
leave
popf
xchg
inc
cmp
and
push
add
or
sbb
and
push
daa
push
es
in
sub
jl
jmp
dec
mov
dec
sti
cmp
call
inc
insl
shrb
imul
sbb
xor
sub
jns
ss
push
pop
xor
pop
lds
dec
xchg
ss
sub
and
aam
je
push
repz
push
and
sbb
sbb
dec
lods
cmp
sbb
jae
jne
loopne
orb
xchg
cmc
pcmpgtw
push
inc
fs
mov
nop
or
iret
inc
push
cmpsb
add
fnsave
pop
lcall
aad
adcl
gs
repz
fwait
adc
bound
push
pop
push
fsubp
stos
mov
daa
repz
ficoms
xchg
push
int
mov
mov
xchg
cmp
xchg
cmpsb
orb
ljmp
into
lock
ret
sti
xchg
push
jo
push
or
jnp
xor
cmc
mov
jmp
loopne
call
pusha
or
loopne
pop
mov
dec
xor
dec
fs
in
aas
dec
push
xchg
fiadds
dec
cmp
mov
add
mov
sti
fwait
jo
lds
daa
mov
sub
call
movsb
or
leave
cmc
cmp
xchg
adc
clc
dec
jno
dec
test
movsb
mov
pop
arpl
cmp
pop
push
push
into
popf
shll
jno
dec
or
pop
outsl
sub
out
mov
inc
jl
or
jp
add
pushf
pop
mov
xor
mov
add
rclb
pushf
xchg
loope
add
stos
pop
lret
scas
orl
mov
test
leave
push
nop
notl
pushf
insb
sbb
sbb
lret
insl
jmp
sti
call
rcrb
call
jge
mov
mov
div
xlat
sub
jo
fists
push
insl
test
xor
popf
setno
xor
nop
and
aas
jge
fcompl
sbb
mov
xchg
fdivl
test
movsb
hlt
push
sbb
adc
mov
imul
xchg
ss
orl
xchg
sub
scas
xchg
into
repz
xchg
adc
cmp
sahf
je
sbbb
outsb
pop
cwtl
xchg
add
cltd
ss
ret
inc
lods
sub
pop
icebp
lock
push
addr16
and
push
jmp
or
push
stos
addb
fwait
xor
cwtl
add
jg
inc
push
xchg
push
jnp
push
repz
or
das
inc
adc
and
out
test
mul
aad
daa
cmc
dec
adc
pop
xchg
rorb
outsb
push
cli
or
sbb
pop
jno
mov
rclb
test
pop
sub
or
inc
loope
jnp
mov
les
add
sub
test
pop
subl
sbb
mov
sbb
movsb
mov
pop
pop
pop
sub
imul
or
cmp
jnp
jp
icebp
jno
cmpsl
xchg
xchg
aad
adc
pop
out
mov
xor
push
dec
xor
les
cwtl
aad
inc
fcoms
mov
loop
dec
lock
fwait
xchg
dec
lcall
rorl
or
adc
mov
mov
jbe
je
inc
cmp
insl
mov
out
mov
pop
popf
xor
rcr
test
mov
add
pop
aaa
jle
ret
xchg
clc
add
sti
es
add
jbe
sbb
push
add
add
push
xlat
jno
clc
insl
sahf
in
das
je
sub
push
jmp
mov
pop
add
sub
repz
dec
aad
pop
ret
jmp
or
xor
dec
mov
jge
adc
fistps
dec
pop
push
push
jle
sub
cmp
adc
mov
scas
insl
std
cmp
push
cmp
fsubl
adc
xchg
pop
mov
mov
lret
das
push
mov
add
inc
mov
iret
add
leave
ret
cmp
mov
lea
jle
mov
jle
sti
lea
pop
aam
fisttps
xchg
inc
jo
hlt
cmp
push
dec
rclb
fildl
pop
into
cmpb
outsb
mov
jmp
int3
fs
es
push
mov
mov
add
shll
stos
mov
stos
push
movsl
pop
or
ror
cmpsl
ficoms
arpl
xor
jg
push
xor
sbb
add
adc
jae
hlt
mov
out
or
or
outsl
or
push
nop
mov
pusha
mov
push
movsl
popa
dec
fmull
dec
into
push
in
cmp
inc
dec
es
xchg
add
ss
insl
mov
mov
cmp
jnp
fs
jo
or
fs
movsl
pop
pop
pop
test
inc
popf
pop
dec
dec
pusha
mov
inc
mov
fmull
in
in
test
jnp
aaa
sub
xchg
mov
ss
sbb
pop
push
and
mov
testb
cmp
inc
sbbl
test
sbb
xchg
loopne
push
les
divl
ret
sti
mov
imul
lods
lcall
jecxz
mov
dec
mov
lds
rolb
int3
jle
xor
mov
jg
cs
inc
lds
cwtl
mov
or
jae
je
jnp
xor
cli
sub
aam
into
jne
cld
loope
in
dec
fdivrs
ror
inc
pop
cmp
loopne
mov
mov
or
and
int
jne
mov
incb
push
cli
xor
jne
cmp
lds
movsl
mov
lods
lods
test
pop
dec
icebp
out
cmpsl
imul
cmp
push
inc
lret
dec
and
orl
clc
out
push
jge
mov
nop
insb
icebp
inc
push
bound
in
jne
jmp
test
scas
lcall
sbbl
aam
and
loopne
out
mov
adc
cmp
loopne
mov
lock
push
int3
add
in
mov
mov
mov
and
dec
fisttpll
pop
adc
or
push
and
sbb
loopne
and
jnp
ss
shr
rcrl
mov
loope
pop
xor
in
mov
test
lea
test
mov
sbb
in
inc
mov
inc
inc
addr16
ret
mov
xchg
out
dec
pop
and
nop
movsl
push
lock
xor
cmp
cmp
iret
jge
mov
jns
mov
cld
imul
clc
in
push
movsb
xlat
mov
movl
mov
cltd
adc
jl
mov
mov
mov
shl
mov
sbb
lea
rcr
dec
cmp
push
jmp
adc
je
xor
jmp
ret
xor
daa
mov
and
int3
das
sarb
fcoms
in
pushf
rorb
mov
sti
int
xlat
xchg
ja
mov
fnstenv
mov
es
mov
add
mov
daa
and
dec
pop
add
hlt
sbb
jae
les
leave
sbb
jecxz
or
mov
fstp
push
jo
rcll
jb
push
fucom
mov
shrb
lahf
testb
inc
add
and
push
pusha
pushf
jae
adc
add
cmpsb
rcrl
xor
xchg
nop
lcall
adc
sbb
sub
xor
mov
insl
inc
lods
ljmp
jb
fidivrl
js
loop
insl
bound
mov
and
xor
and
faddl
push
nop
popf
push
pusha
int3
scas
scas
pop
sbb
mov
lea
stos
aad
loopne
push
pop
mov
inc
lret
add
stos
sub
push
stc
mov
adc
shlb
daa
cwtl
rcll
mov
adc
fs
or
pop
cmpsb
or
pop
insl
or
xor
mov
cmp
dec
cmpsb
cmp
xlat
cmp
idivl
add
inc
jmp
out
rcll
notb
je
dec
inc
inc
insl
fxch
add
push
push
mov
cmpl
jg
push
cmp
dec
into
dec
pop
rcl
xchg
mov
aaa
adcb
and
fcoml
xorl
push
jmp
int3
dec
push
std
adc
enter
cmpsb
iret
mov
lret
mov
jbe
shll
mov
subl
ret
or
rcrl
inc
cmc
mov
pop
ljmp
out
cmc
xchg
int3
fcmove
jle
mov
cmp
jle
test
cli
roll
bound
adc
xchg
mov
sub
es
repz
stos
sbb
mov
fcmovne
imul
pushf
sbb
stc
cs
notl
subl
mov
cmp
pop
or
mov
lret
fists
sbb
out
cli
out
scas
jns
xchg
push
sub
mov
mov
pop
cli
sub
ljmp
mov
xor
or
rorl
cmp
push
push
and
adc
nop
sub
arpl
dec
sub
add
inc
xor
mov
stc
stos
pop
pusha
or
popf
add
mov
les
jp
jbe
call
rolb
pop
xor
cmpsb
and
cmp
push
dec
pushf
shrl
fwait
out
fsubrl
stc
faddl
lahf
mov
mov
movsb
cmp
fwait
leave
pop
shr
jg
out
in
cltd
xchg
dec
or
sbbl
idivl
rorb
out
inc
ret
sarb
lds
shl
std
adc
outsb
stc
in
inc
mov
lret
jo
stos
sub
or
leave
dec
out
jge
clc
repz
adc
jbe
xor
pop
xor
pop
xchg
and
ret
std
adc
xor
xchg
jae
int
jp
mov
dec
fld
inc
sub
xor
mov
xchg
xchg
imul
in
loope
dec
xchg
aad
mov
pop
into
aad
mov
xchg
stos
mov
cmpsb
mov
dec
xor
or
mov
movsb
xor
push
jmp
addr16
sbb
sbb
pop
lret
mov
loopne
daa
mov
je
pop
lcall
pop
mov
mov
call
iret
xor
rcr
inc
mov
aas
cmpsb
jp
test
andl
fwait
xor
lea
pop
enter
and
xchg
jmp
mov
mov
ja
stos
sti
movsb
or
sbb
in
sti
repnz
stos
leave
sbb
cmpsl
sub
dec
in
popf
xchg
jmp
mov
out
mov
pop
pop
movsl
and
inc
rorl
jge
arpl
inc
test
inc
cmp
push
jecxz
push
int
push
push
xor
out
cld
ds
adc
inc
imul
push
mov
cmp
lods
sbb
arpl
xchg
in
sbb
sbb
pop
int
rorl
cmpsb
fisubs
mov
jnp
dec
aam
xor
scas
push
js
pushf
lcall
dec
mov
lret
outsb
rcrb
sub
cld
ficoml
adc
in
movsb
pop
jo
pop
xchg
cmp
mov
aas
push
pop
test
call
lock
jecxz
cmpsl
int3
adc
xor
fmull
inc
cld
add
fiadds
lea
cs
sbb
std
insl
cmp
sub
mov
adc
cmp
sub
inc
and
sub
xchg
lea
jbe
jecxz
sti
lret
nop
stc
inc
addr16
xchg
fs
subb
lret
jl
inc
cmp
dec
jle
jbe
sub
xor
xor
sub
cmp
test
fcompl
dec
xor
ss
mov
bound
push
pop
pushf
lods
xchg
je
das
aad
stos
mov
mov
test
fists
push
arpl
fbstp
and
fs
subl
jno
jle
mov
jp
out
int3
shr
push
leave
xchg
mov
cmp
cmpsl
xor
mov
test
add
std
clc
jmp
loop
mov
lret
rcl
cld
leave
push
jg
jbe
push
inc
push
sbb
adc
lcall
add
out
les
mov
push
imul
rol
test
push
hlt
cli
cld
sbbb
out
repnz
sbb
divb
cmp
gs
jae
mov
push
test
add
popf
sub
push
adc
pop
js
popf
popa
and
add
das
cmpsb
or
adc
or
xorb
sbb
mov
inc
out
mov
sar
lock
cwtl
ss
mov
mov
or
adc
aam
popa
xor
cltd
repz
mov
adc
in
js
les
xorb
cmp
icebp
pop
add
shlb
xlat
mov
out
sub
daa
stos
sub
fsubl
loopne
int
bound
xchg
xor
pop
mov
xchg
repz
scas
push
enter
outsl
pushf
js
mov
add
cli
shlb
pop
sbb
xlat
ss
cmp
adc
xchg
dec
push
and
repnz
rcrb
xchg
fdivs
sbb
adc
sbb
sbb
sarl
andb
leave
inc
sahf
aas
jbe
cli
mov
repnz
or
jmp
mov
and
loopne
sub
add
sub
mov
adc
or
cmpb
mov
jno
xchg
int3
xor
aaa
jae
je
insl
in
icebp
scas
push
sbb
shlb
outsb
mov
test
pop
pop
imul
fiaddl
dec
mov
cmp
ret
xchg
cmp
jno
and
add
icebp
cld
pop
xorl
xlat
repnz
sarb
adc
aam
push
or
push
fmull
test
outsb
out
adc
cmp
ret
mov
xchg
fidivs
cld
cmp
jg
es
incl
jae
or
idivb
popa
sti
cmp
xor
cwtl
sub
cmp
stos
xlat
mov
sbb
lods
data16
xchg
daa
cmp
mov
cmp
jns
pop
ret
sahf
sbb
inc
pop
push
sub
jb
insl
aas
shl
xor
dec
pushf
mov
in
inc
mov
popf
and
adc
test
das
sub
int3
cmp
fidivrl
sbb
inc
inc
outsl
jns
xchg
lock
dec
jo
cmpsb
das
loope
filds
test
in
out
movsl
mov
jg
popa
sub
out
inc
fbstp
dec
pop
rcll
inc
fsubp
fisubs
mov
nop
mov
add
retw
std
lods
mov
xchg
xor
fnstenv
jae
test
imul
mov
test
mov
pop
sub
data16
mov
mov
add
sub
test
out
add
loop
sbb
xor
cs
stos
rcr
push
out
cmpsb
data16
jecxz
lods
pop
ss
adc
leave
sbb
ret
es
pop
cli
push
add
xchg
rol
dec
adc
insb
mov
jb
mov
dec
cmp
sahf
out
cmpsl
shll
xor
insl
jae
mov
dec
ja
and
inc
imul
aas
loope
sbb
mov
dec
or
daa
add
adc
outsl
fistl
insb
dec
fnstcw
sbb
jl
sbb
arpl
ja
push
xlat
shr
inc
cltd
fcmovne
cli
adc
leave
insb
lahf
fnsave
xchg
into
and
fbld
or
xor
mov
imul
sub
aad
inc
mov
pop
or
sub
sub
sti
rcll
xor
xorl
insl
imul
into
test
es
ret
mov
popa
mov
jmp
mov
xor
inc
mov
decb
jae
insl
xor
cmp
cmpsl
aas
sbbb
push
ja
cli
mov
inc
dec
adc
inc
push
push
pop
fcoms
mov
repnz
call
js
outsl
push
icebp
repz
xchg
and
test
adc
cmp
jle
adc
sahf
add
dec
or
add
xchg
cwtl
inc
cmpsl
cmpsb
aas
mov
movsb
mov
insl
or
mov
imul
dec
loop
push
jge
mov
arpl
add
rcl
xorb
sbb
jb
jecxz
ret
or
or
push
or
mov
lahf
test
icebp
sti
leave
lods
mov
ja
jecxz
mov
popf
ret
and
xchg
add
sbb
adc
inc
push
sbb
mov
std
xchg
in
stos
int3
or
xor
out
imul
movsb
mov
xlat
jp
dec
adc
cld
jns
ljmp
repz
mov
and
aad
and
push
sbb
adc
dec
data16
pop
pop
out
aad
or
pop
mov
adc
scas
xor
jb
dec
or
mov
ror
pop
push
push
addr16
or
shlb
mov
jno
dec
mov
push
imul
jp
cmp
mov
push
pop
mov
push
sub
aad
aad
dec
inc
add
insb
jo
loope
shrl
cmp
ret
movsb
cmc
fdivrl
add
mov
data16
lcall
adc
loopne
mov
add
addr16
cwtl
fcoms
pop
mov
fdiv
pop
and
add
dec
xchg
jmp
sbb
pusha
leave
out
ss
adc
movb
push
sbb
cld
loop
clc
inc
cli
popf
sub
pop
pusha
cmp
push
adc
jnp
push
in
xchg
int
xor
cmpsb
cmp
cmp
test
mov
sub
repz
pop
sbb
adc
push
and
or
notb
fldl
sub
xor
pop
fisubl
mov
lea
fistps
mov
fcompl
push
and
fcoms
rorb
mov
pop
mov
cld
sahf
mov
data16
cmp
mov
push
test
and
pop
mov
add
jnp
shl
fstl
inc
outsl
stc
cmp
mov
mov
ljmp
out
inc
aad
aas
jns
cmc
cld
sub
push
mov
xchg
ljmp
xlat
and
imul
pop
ret
push
jmp
fs
out
sbb
push
pop
fucomip
fisubs
mov
xor
sarb
mulb
mov
int
popf
bound
mov
xor
cmp
pop
mov
cmpl
test
mov
mov
inc
aas
pop
addr16
dec
adc
ja
testl
lds
xchg
xor
mulb
mov
and
xchg
dec
je
sbb
dec
sub
outsl
dec
pusha
jne
bound
stos
add
xchg
xor
xor
and
ds
sbb
or
adc
sbb
popf
sub
daa
cmpsb
pop
or
and
or
call
and
lods
and
mov
insb
push
add
inc
aad
std
jecxz
add
jp
fbld
mov
mov
jmp
js
clc
outsb
rorb
inc
push
in
dec
jecxz
scas
loop
fsub
int3
lcall
mov
xchg
sbb
xchg
inc
and
jnp
adc
xor
push
and
jb
shr
xor
ss
mov
pusha
inc
push
lds
xchg
adc
imul
aaa
and
pop
repnz
divl
out
ficompl
lock
rcrb
popa
cmp
or
inc
fisttpl
ret
pop
out
jle
jnp
adc
push
xchg
or
jno
push
gs
pop
fwait
mov
outsl
jne
sahf
std
test
and
mov
push
or
lea
cmp
adc
sahf
pop
jg
enter
mov
test
int
idivl
popa
es
xor
je
scas
roll
adc
dec
mov
and
xor
xor
js
mov
and
jno
dec
sbb
js
lods
xchg
fdivl
dec
push
ds
std
pop
cmp
aas
pop
xchg
shl
lret
mov
sbb
add
adc
in
adc
stc
xor
pop
sbb
mov
pop
test
mov
repnz
dec
mov
inc
sub
inc
sbb
inc
insl
dec
xchg
movsb
dec
ljmp
jbe
xor
sbb
pop
cwtl
cmp
fisttps
add
leave
shlb
xlat
adc
movsl
sti
leave
test
sahf
push
orb
adc
sbb
fldcw
jle
fiadds
pop
test
testb
dec
xorb
stos
jne
movsl
paddq
sub
movsl
cli
js
xchg
xchg
mov
lods
jmp
out
mov
lods
mov
andl
call
jns
out
adc
out
add
in
mov
mov
data16
cmp
xor
aas
dec
std
and
sbb
or
outsl
cmc
int
inc
sub
addr16
int
cmp
dec
fsts
jo
inc
fldt
and
test
sub
pop
and
sbb
fldl
mov
cmp
cmp
ja
inc
sbb
adc
mov
in
inc
psubw
sub
mov
and
addr16
ja
jecxz
add
pop
mov
ret
sarl
cltd
popa
lods
mov
fdivs
xorl
bound
pop
xchg
inc
bound
aaa
test
pushf
add
jg
addr16
inc
dec
add
test
setg
in
cmp
lret
jbe
or
pop
aam
hlt
outsb
int3
mov
dec
rcrb
int3
popa
adc
mov
fldcw
inc
imul
sbb
sbbl
xchg
push
mov
and
maskmovq
idivl
es
sti
test
pop
xor
add
cmp
adc
in
div
sbb
aam
out
mov
add
adc
test
sbb
push
push
adc
repnz
dec
imul
xchg
mov
popf
movsl
insb
pop
dec
add
outsl
out
mov
pop
iret
mov
xor
push
dec
popa
cmpsl
dec
mov
cmp
shll
adc
cwtl
in
xchg
add
pop
lea
repz
sub
pop
mov
out
lods
adc
movsb
outsl
push
xchg
mov
push
mov
mov
ficomps
xchg
push
insb
mov
ret
push
pop
jmp
jp
test
xchg
into
or
adc
jo
mov
and
jecxz
ficompl
sbb
iret
mov
popf
mov
enter
arpl
dec
sarl
gs
fadd
jno
xchg
mov
das
sbb
xor
xchg
dec
pop
insl
stos
mov
repnz
jmp
adc
cmpsb
mov
sti
cmp
and
xchg
inc
jl
xlat
push
inc
sbb
cli
testb
dec
xor
movsl
cwtl
inc
rorb
dec
sub
adc
mov
and
push
mov
and
sbb
lods
mov
jne
pushf
xchg
add
cmp
shl
fldenv
scas
in
lea
dec
js
repz
and
lods
gs
mov
xchg
jp
xor
mov
pop
push
pop
outsl
push
cmp
insl
clc
sbb
dec
push
pop
inc
aad
aaa
ds
mov
movsl
mov
jg
fldcw
lahf
stc
xor
clc
ds
fdivs
adc
inc
jne
and
adc
sahf
xor
add
imul
pop
jg
hlt
or
je
push
bound
mov
loop
loopne
enter
pop
pop
mov
push
ret
sub
adc
icebp
cli
rcll
dec
leave
mov
imul
jns
cmp
lret
or
movsl
cmpsl
sbbl
sub
notl
daa
push
mov
out
repz
pusha
pusha
sbb
sub
aam
cmpsl
popf
pop
repnz
dec
push
mov
sbb
push
clc
ret
mov
aaa
inc
stos
xchg
or
stos
sub
je
fadd
insb
mov
sarl
insb
pop
out
decb
loop
pop
fcmovnbe
dec
hlt
lcall
sub
cltd
fdiv
inc
jle
pop
push
loopne
btc
or
mov
cld
mov
sbb
cli
mov
inc
stos
push
iret
sbb
stc
movsl
fwait
xchg
out
pop
pop
add
or
loope
pop
int3
add
les
cmpsl
loop
xor
or
in
fwait
inc
test
mov
ss
mov
out
sbb
push
insb
pop
fisttps
jns
sbb
lret
lret
daa
and
popa
mov
inc
sarb
and
popf
ret
je
sahf
iret
push
jle
jno
jmp
shrb
or
bound
sbb
pushf
push
push
inc
add
jnp
jle
inc
cmpsb
mov
jb
xchg
jg
das
in
ljmp
mov
movsb
jnp
add
popa
add
inc
jl
xchg
in
fbld
and
pop
mov
pop
mov
daa
repz
inc
das
call
and
xchg
popa
sbb
in
pop
push
and
repz
or
push
sahf
movsb
mov
pop
aad
and
pop
push
xchg
testl
cmc
push
mov
jbe
cmp
cmpl
test
xchg
xor
and
loop
push
xlat
loop
adc
sub
cmpl
lods
inc
adc
push
jnp
pop
aam
jl
lcall
add
jnp
jae
jge
xor
dec
mov
xchg
outsb
outsb
ss
ret
pop
mov
in
pusha
in
sub
jg
lock
es
adc
rorb
roll
jmp
adc
pop
data16
pop
jmp
adc
push
xor
js
adc
stos
pop
lods
arpl
dec
sub
inc
xlat
mov
xchg
stc
nop
ja
and
fnstsw
shrl
dec
hlt
int3
add
sub
sbb
mov
push
jmp
int
iret
and
sub
sub
push
rcrb
sbb
sahf
inc
in
ret
dec
push
in
jns
mov
lock
aad
test
lret
lahf
and
repnz
in
call
or
or
loop
lret
sbb
fadd
repnz
bound
dec
icebp
push
gs
fwait
jp
fdivrl
jae
arpl
xor
sbb
adc
sub
in
or
and
sbb
mov
add
inc
dec
and
jnp
gs
jmp
jb
or
lcall
sahf
dec
enter
lret
jno
push
jmp
push
loop
outsl
clc
lods
sbb
add
imul
jb
das
cmpsb
dec
bound
xor
icebp
or
inc
inc
outsb
addl
fldl
imul
push
mov
gs
push
xchg
jmp
aad
xlat
xlat
push
or
add
push
xorb
sbb
ja
sti
push
inc
push
pusha
int
cwtl
xchg
push
nop
dec
xchg
xlat
jae
jnp
das
push
loopne
lret
mov
lods
pop
aaa
test
xor
lods
dec
fisubs
mov
cs
je
es
add
ljmp
and
dec
dec
push
jge
imul
inc
aad
jb
stos
inc
pusha
and
dec
dec
and
sbb
add
xchg
or
inc
adc
xchg
out
mov
jns
js
adc
mov
add
rorl
xchg
iret
pop
lods
jo
mov
mov
dec
lret
push
cmp
loope
dec
inc
aaa
push
jo
jno
push
movsl
popf
movsb
out
movsb
inc
pop
mov
loopne
call
mov
xor
mov
les
scas
xchg
std
or
jno
sub
stos
inc
and
outsb
cmp
or
lahf
xchg
push
ret
push
inc
rclb
mov
aam
jne
adc
sub
daa
cmp
idiv
iret
add
data16
fistl
mov
clc
dec
je
xor
jl
mov
push
aas
jmp
pop
cmpl
inc
js
mov
push
out
mov
popa
sub
adc
and
xor
fs
push
inc
xlat
ljmp
mov
and
fistpl
jbe
xchg
imul
js
fdivs
push
shufps
sub
mov
lcall
push
pop
ljmp
fwait
mov
pop
xlat
iret
popa
addr16
outsl
jbe
sub
jp
mov
inc
in
fisttps
les
ljmp
adc
ds
pop
xchg
lret
insl
add
mov
out
cmp
and
aaa
inc
sbb
jbe
and
cmp
pop
das
mov
inc
in
mov
andl
bnd
mov
popf
pop
sub
mov
into
les
sub
testl
xor
out
add
xor
ja
lcall
or
gs
and
add
mov
cmp
adc
jno
popf
and
push
stc
adc
mov
dec
xchg
xchg
sbb
es
loopne
push
inc
dec
xchg
jns
push
pop
sbb
jae
cmpsl
inc
sbbl
push
sahf
dec
sub
adc
sahf
lea
sti
jecxz
out
mov
sub
cmp
mov
rclb
rorl
xlat
inc
mov
xlat
int
mov
aad
daa
pop
test
mov
insl
fists
sub
cld
sbb
jmp
push
movsl
add
dec
jne
mov
ja
mov
add
sarl
pusha
mov
ja
xor
hlt
mov
mov
das
int
loopne
nop
cmpsl
dec
or
jmp
push
rclb
mov
bound
int3
mov
ret
das
dec
mov
sarb
fildll
cmp
mov
cmp
cmp
jbe
inc
cmp
mov
fwait
cmc
cmp
fists
mov
cltd
pop
inc
sbb
xor
insb
mov
imul
in
movsl
xchg
iret
ljmp
inc
sub
lods
xor
bound
cmp
mov
test
add
ret
int
adc
jle
pop
rorl
jge
xchg
les
mov
add
inc
cmp
mov
mov
cmp
lods
loop
add
add
push
mov
das
adc
fwait
lea
sub
push
mov
inc
jne
fs
pusha
push
aas
insl
pop
pop
sub
in
mov
aad
and
sbb
ja
sub
inc
fisttpll
push
cmpsl
inc
sbb
imull
mov
outsb
stos
or
sub
dec
movsb
in
cmp
sbb
in
out
dec
xchg
adc
inc
xor
push
fwait
push
add
stc
cmpsb
std
mov
ja
cltd
pusha
xchg
movsl
test
mov
imul
mov
dec
pop
sbb
mov
add
cwtl
stos
mov
xlat
xchg
xchg
or
popa
push
jnp
push
int
gs
int3
push
cmpsl
or
xor
or
jnp
sbb
lret
ret
dec
ds
repnz
or
mov
or
push
xchg
push
fdivr
adc
std
cmp
inc
sarl
pop
fisttpll
mov
ret
ss
add
cmp
enter
xchg
imul
push
js
inc
jbe
dec
xchg
rorb
push
xchg
add
sbb
pop
push
pop
cmp
sbb
push
ljmp
out
mov
lods
hlt
mov
xchg
mov
mov
xchg
insl
bound
data16
dec
pop
xchg
push
jns
add
lea
mov
rolb
and
push
outsb
jno
scas
mov
xchg
aam
mov
mov
pop
mov
imul
lods
xor
and
xor
cmp
test
xor
loop
sbb
mov
test
movsl
gs
add
lret
dec
fstpl
fldl
inc
and
int
dec
inc
loope
inc
and
jnp
mov
test
adc
ret
mov
dec
test
rcr
mov
insb
fsubs
mov
jle
or
dec
adc
or
add
add
mov
out
fimuls
jnp
inc
out
and
dec
sbb
and
lahf
js
and
addr16
push
inc
fcomp
xlat
push
pop
rol
dec
test
movsl
dec
pop
fstl
fstpl
push
cmovnp
outsl
xlat
push
addr16
lahf
cmpsl
xchg
gs
repz
mov
or
and
loopne
addr16
lret
jno
push
adc
pop
pop
mov
jecxz
xlat
test
clc
and
bound
sarb
scas
cmc
xchg
mov
xchg
inc
rcl
lods
andl
out
int
pushf
xchg
xor
in
imul
das
push
xor
mov
mov
xor
ret
in
std
loop
xor
aas
fildl
enter
mov
push
mull
lahf
adc
or
sbb
xchg
clc
out
mov
push
dec
repz
or
cmp
sbb
sbb
cmpsb
push
inc
out
sbb
lahf
push
std
imul
cmp
stos
repnz
mov
ror
and
jns
mov
xor
adc
cltd
repz
pop
idivb
mov
lock
add
inc
test
mov
xor
lret
adc
repnz
out
push
xor
or
mov
idivb
add
ljmp
std
cmp
movsb
sub
pushf
lea
movsl
fwait
inc
pushf
or
test
xor
data16
shll
shll
enter
andb
popf
adc
mov
int3
cmp
js
into
daa
fistl
xor
inc
add
fbld
in
and
in
cld
push
test
jle
xchg
adc
ret
lea
sbb
or
adc
mov
xchg
pop
pop
imulb
mov
adcl
push
mull
xor
mov
or
add
lcall
pusha
or
or
loope
mov
iret
scas
add
lcall
jmp
outsl
dec
pop
cmp
dec
mov
mov
add
jne
push
psllw
jo
mov
push
xorl
ret
dec
pushf
sub
mov
jg
jbe
pop
enter
nop
mov
pop
movsl
mov
add
xchg
xchg
pushw
lret
push
jmp
cmp
mov
pushf
cmc
push
ret
mov
push
jne
mov
shrb
xor
lods
mov
test
je
jns
cwtl
icebp
jecxz
xchg
push
test
jne
out
pushf
sbbb
mov
cmc
mul
inc
push
adc
sub
enter
jmp
scas
push
jbe
ret
fs
popa
pop
cmp
xchg
xchg
push
test
lea
clc
and
or
cmp
push
cli
xor
movsb
pop
mov
jg
mov
push
mov
pop
outsb
test
in
clc
inc
roll
xchg
cmp
inc
add
gs
out
incl
jl
inc
clc
sub
dec
jl
dec
outsb
adc
pop
push
push
push
cld
jbe
pop
cmpsl
sti
dec
mull
outsb
cmpsl
ds
fwait
clc
test
outsl
lcall
cmpsb
add
sbb
dec
cmp
mov
inc
and
push
or
mov
adc
mov
movsb
lods
mov
pop
xor
mov
xchg
mov
push
out
clc
pop
dec
dec
mov
push
inc
or
and
fbld
mov
inc
xchg
pop
xor
jae
into
jno
shl
xchg
fucom
mov
mov
loop
imul
test
add
repnz
mov
lock
clc
mov
cli
pop
lahf
xchg
jmp
jnp
mov
mov
jo
arpl
ret
in
pop
adc
jne
mov
cld
pop
test
xor
je
and
jbe
jbe
rorb
daa
jnp
and
xchg
mov
arpl
arpl
and
jns
leave
jno
test
test
jno
mov
movsb
pop
jle
fcomps
sarb
mov
xchg
adc
and
in
sub
lea
pop
mov
cld
cmp
enter
cltd
js
mov
push
ss
xchg
push
bound
mov
cmp
xchg
out
jnp
push
fsubs
cmc
sbb
mov
or
adc
ret
inc
and
xchg
lret
sub
or
lods
push
inc
pop
and
mov
xor
mov
imul
lret
push
clc
cmp
jmp
fwait
scas
mov
lret
rorl
orb
icebp
push
nop
cmp
fdivl
push
push
mov
and
in
mov
sub
das
addl
popf
pop
jecxz
iret
mov
jo
aam
mov
pop
inc
cmpsl
mov
inc
mov
xor
stos
pop
fdivr
pop
scas
and
sub
aas
mov
xor
push
add
pop
cmp
mov
mov
mov
sbbb
fsubl
or
jge
mov
addr16
jno
rcrl
or
sbb
jg
pop
mov
add
xchg
fwait
imul
popa
push
in
aad
movsb
lds
clc
pop
sub
sub
shrb
cmp
sub
push
nop
and
mov
dec
rcrl
cwtl
test
xchg
add
add
in
or
outsb
dec
xor
leave
dec
popf
jmp
jle
mov
fisttps
inc
and
mov
xor
add
push
call
or
xchg
shlb
out
or
mov
lcall
lret
and
lret
lods
cmc
sub
mov
popa
divb
test
insl
or
or
jecxz
imul
sub
cmp
and
add
cmp
dec
add
aaa
xor
mov
leave
rclb
xchg
lods
xchg
idivl
push
out
outsl
xor
mov
inc
pop
test
shlb
xchg
push
inc
pop
lea
add
ds
and
fnstsw
scas
jb
lods
mov
sub
sub
pop
mov
rclb
mov
outsl
sbb
inc
jo
repnz
pop
xchg
xchg
cmp
and
xchg
incb
pop
mov
xor
push
lahf
repnz
dec
inc
xchg
xchg
or
out
push
push
add
dec
cmc
pop
inc
sbb
mov
and
mov
or
xorl
cmp
clc
inc
cmp
cmp
inc
cmp
inc
out
inc
cld
and
pop
sub
out
nop
dec
fimull
daa
out
mov
sbb
sbb
adc
lret
daa
mov
or
fnstsw
cld
sbb
loop
mov
xchg
pusha
pop
subl
movsl
ljmp
and
shr
movsl
in
xchg
cmpsb
test
sahf
xor
cmpsl
pop
sub
mov
arpl
js
movsl
mov
push
js
ficoms
sub
les
add
mov
jnp
mov
mov
stos
pop
scas
jecxz
orl
js
dec
sbb
gs
rcll
cli
lods
cmp
test
xorl
mov
add
outsl
arpl
ljmp
repz
fldl
mov
insl
leave
mov
repnz
pop
push
fcmovbe
stos
fsubrp
sub
aam
jns
sbb
mov
xchg
lods
test
mov
cmp
stos
sbb
xchg
mov
xor
adc
cmpsb
test
xchg
push
mov
in
pop
sub
add
xchg
jnp
mov
push
shlb
jbe
add
js
dec
mov
sub
cmp
lcall
aaa
mov
pop
lret
jo
mov
bound
clc
mov
adc
sbb
add
popf
insl
js
je
or
cs
fs
addl
dec
bound
sbb
or
call
dec
cmp
clc
std
orl
mov
pop
jae
shrl
shlb
mov
pop
loope
cwtl
fwait
jnp
ret
push
xchg
imul
or
out
es
test
pusha
inc
sub
pop
dec
lea
loope
je
xor
lods
out
xor
jg
lock
add
cmp
sub
or
jmp
xor
jp
push
out
xchg
in
mov
push
jp
cmc
adc
and
lock
xchg
dec
cmpsb
cmp
or
jecxz
cmp
cld
and
dec
xchg
mov
leave
enter
fisubs
jae
add
sbb
jns
xchg
aas
outsb
push
inc
or
sub
pop
xchg
inc
mov
inc
or
test
pop
cwtl
cmc
pop
data16
and
inc
mov
jb
ret
data16
xor
fwait
inc
and
mov
test
and
sahf
jl
dec
xchg
je
ss
xor
arpl
fsubrp
mov
fmulp
call
dec
mulb
icebp
in
fnsave
call
mov
mov
iret
dec
aad
or
lcall
shrl
adc
sti
sub
push
call
sbb
sub
push
sub
and
bound
clc
push
mov
xchg
data16
idiv
push
in
cmpl
xor
adc
sbb
iret
ret
movsl
push
jae
jns
idivl
insl
adc
sbb
ret
pop
push
jecxz
jecxz
in
sbb
out
cmp
insl
push
popl
ss
mov
push
movsl
out
stc
icebp
pop
sub
loope
add
mov
stc
and
sbb
and
xor
mov
dec
sbb
mov
inc
movsb
xchg
aas
les
sbb
mov
sbb
and
out
add
jbe
jecxz
pushf
mov
dec
aam
xor
push
ds
fdivs
ja
cmp
mov
lods
loopne
fcmovne
jecxz
lock
add
mov
push
je
rcll
xchg
popa
pushf
into
dec
mov
dec
and
stos
adc
add
fdivs
bound
dec
adc
dec
adc
mov
sbb
pop
pop
or
testb
sub
cltd
sbb
sub
mov
lea
cmp
push
dec
ds
mov
imull
lea
arpl
pop
adc
fdivs
jne
lahf
cmc
outsl
cmp
pop
dec
adc
mov
lods
add
sub
dec
decb
mov
fsubrl
cmp
dec
ss
add
xor
push
jno
adc
jbe
inc
ss
sub
adc
nop
mov
je
lea
mov
icebp
out
lock
cmp
dec
push
sbb
rorb
mov
pop
xlat
pushf
jle
pop
stos
insb
test
xor
leave
lcall
stos
and
lcall
insb
leave
popa
mov
xchg
and
std
adc
inc
mov
sbb
cltd
jp
ret
outsb
or
nop
xchg
mov
mov
fidivrl
and
cmc
outsl
pop
inc
sbb
imul
dec
icebp
mov
add
push
xchg
xor
push
or
sub
movsl
add
adc
nop
push
jo
jg
pop
jo
insb
mul
int
dec
fisttpl
roll
xor
inc
scas
sbb
mov
push
in
std
mov
jns
adc
inc
jge
add
mov
iret
mov
out
dec
loopne,pt
sbb
pop
jle
push
fsubrp
lret
and
inc
push
add
fisttps
cmp
inc
jbe
loopne
cmp
out
mov
mov
dec
or
pop
addl
sub
mov
and
xor
mov
test
pop
aaa
repnz
lret
repnz
call
add
or
iret
das
cld
aad
leave
jno
stc
insl
ret
add
clc
lret
push
mov
mov
inc
imul
mov
or
cmp
adc
pop
dec
inc
jl
inc
aaa
or
mov
cs
add
bts
xchg
xchg
ds
aad
adcl
adc
test
ret
pop
sbb
jns
mov
repz
xchg
out
xlat
sub
shll
insl
mov
adc
jae
mov
pop
xchg
iret
inc
cmpl
fsts
fadd
cmp
int
das
push
lods
ret
mov
ret
mov
lret
shll
imul
mov
mov
insb
mov
scas
mov
dec
in
sub
sbb
dec
sti
int3
stc
jg
loop
inc
mov
cmp
sti
inc
ljmp
sub
out
hlt
movsb
push
cmp
daa
xchg
ds
mov
mov
sbb
pop
and
xchg
in
cmp
xor
dec
cmp
mov
sar
push
push
push
xor
int3
sti
jb
mov
cmpsb
jno
adc
insl
mov
aas
dec
or
pop
jp
out
ja
push
jbe
lret
pop
mov
mov
lcall
rcrb
cltd
enter
sub
add
stos
call
pop
nop
test
pop
mov
xlat
addr16
pop
adc
xor
in
ja
punpcklbw
ficoms
mov
sub
xchg
fmul
sbb
xchg
and
shlb
ljmp
sti
mov
lock
mov
shr
divb
mov
mov
pushf
jbe
xchg
dec
cmc
xchg
orl
mov
test
push
daa
sahf
fmull
mov
jle
xchg
data16
test
lock
and
arpl
cli
lcall
xor
xchg
mov
mov
notb
cmc
jmp
clc
stos
fsubrp
dec
xchg
scas
push
and
mov
push
jecxz
jbe
xchg
pop
adc
add
cmc
cli
mov
idivb
add
pop
ljmp
mov
roll
inc
fnstsw
jb
popf
ljmp
jmp
dec
push
ret
mov
mov
test
push
dec
pusha
sbb
or
hlt
push
add
pusha
jne
out
sub
clc
inc
push
outsl
fsubs
cmpsl
push
rcrb
les
movsl
cs
mov
cmp
mov
jp
loope
fs
test
cmpsl
xor
sbb
xchg
push
cmp
sbb
or
ds
jno
les
and
je
call
pop
jl
or
pop
and
iret
dec
adc
divl
and
jg
iret
xchg
cmp
enter
inc
das
sbb
or
and
call
mov
push
dec
dec
data16
sub
loop
inc
add
loope
enter
fucom
lahf
pusha
sub
jne
xor
cmp
mov
inc
jmp
pop
xchg
pop
dec
sahf
mov
mov
mov
or
clc
jb
mov
popa
jecxz
repz
enter
int
mov
add
inc
push
out
lds
xchg
notl
push
dec
fdivrs
add
lahf
mov
shlb
fsubrl
aad
sti
sbb
repz
mov
add
icebp
aad
inc
jmp
add
in
jge
test
xchg
inc
fldt
adc
add
adc
test
and
bound
jne
adc
decb
jecxz
jns
addl
inc
xor
add
pop
add
mov
sbb
imul
lahf
icebp
xchg
adcb
jmp
inc
inc
popa
and
jb
dec
pop
scas
mov
outsb
inc
xor
push
dec
mov
outsl
push
aas
ljmp
or
mov
cmpb
push
scas
fwait
jl
pushf
fists
imul
pop
nop
mov
xchg
add
in
add
arpl
rol
xchg
pop
sub
and
mov
test
les
xchg
pop
xchg
fcmovb
nop
or
imul
test
cmp
sub
stos
fidivl
shlb
lcall
cmpsb
lds
test
mov
pop
lahf
daa
jmp
mov
mov
adc
sbbl
orl
jge
out
mov
cld
filds
dec
js
std
sub
comiss
clc
enter
popf
dec
pop
mov
hlt
jp
test
jnp
push
jae
sub
scas
pop
adc
pop
jne
fnstcw
push
or
mov
add
mov
add
add
call
ja
mov
in
sbb
mov
jmp
mov
fdivr
into
cmp
push
call
inc
mov
enter
xchg
movsl
int3
adc
push
jns
xchg
cmc
push
mull
sub
mov
add
les
push
pop
xor
movsl
pop
fsubrl
shll
jb
ja
scas
jo
sbb
ret
push
arpl
mov
mov
mov
das
adc
je
ja
in
out
pop
mov
fstpt
and
adc
std
push
in
cli
push
imul
ficoml
mov
mov
fstpt
cmpsb
mov
mov
add
cmp
and
aam
rcr
fcomi
and
cltd
jl
sarb
inc
mov
mov
pop
jns
std
ds
pushf
in
shll
inc
sub
mov
ss
out
sti
iret
push
or
inc
or
add
sti
sub
inc
push
push
fs
push
aad
ret
fdivl
lret
xchg
gs
in
and
or
xlat
dec
repnz
pop
pop
mov
mov
scas
test
mov
jb
jno
push
xchg
mov
js
into
cmp
xchg
les
push
aad
fstl
ret
sbb
pop
jne
shl
sbb
add
jmp
pop
jl
mov
sarl
ret
add
sbb
stc
test
inc
aam
cmp
out
rorl
fdivs
addb
jmp
icebp
into
ret
push
out
cli
arpl
hlt
int3
pop
add
jae
mov
aad
setne
rcr
lret
lea
dec
imul
pusha
xor
enter
sti
clc
push
xchg
testl
xor
dec
push
push
mov
out
jo
jecxz
xor
stos
xor
cmp
sbb
mov
push
push
mov
sbb
dec
jp,pn
sti
xor
aad
mov
jae
sbbl
ljmp
aaa
arpl
dec
xchg
bound
fsubs
outsl
xchg
imul
aam
sub
mov
or
mov
jmp
and
int3
popa
aam
mov
insb
pop
aam
xor
aaa
in
shrb
mov
jmp
in
popa
xchg
push
or
ja
and
scas
repnz
loop
fs
cmpsb
negb
xchg
inc
or
fwait
add
xor
adc
push
mov
inc
cmp
ret
add
repnz
cwtl
aam
and
push
ljmp
in
add
in
insb
xchg
decl
out
ja
insb
push
mov
fs
xor
xor
popf
imul
or
int
sbb
xor
xchg
icebp
cltd
out
lods
mov
in
lea
imul
push
add
cmp
repnz
xor
or
and
mov
xor
push
cmp
dec
sub
or
inc
negl
stc
rcrl
xchg
dec
mov
sbb
flds
inc
icebp
repnz
out
mov
lcall
push
xchg
jg
dec
fnsave
mov
and
stc
xor
push
ja
mov
movsl
mov
test
movsb
push
cmc
jns
cltd
fmuls
cmc
sbbb
aas
adc
iret
mov
push
sub
dec
sti
xchg
and
sbb
jb
add
inc
scas
pop
xchg
xlat
mov
jge
scas
mov
pusha
mov
sbb
ja
inc
jbe
aas
std
int3
fstpt
lock
imul
sub
dec
ss
xchg
add
fidivl
ds
mov
popf
stos
or
stos
xor
pop
adc
imul
and
mov
cvtps2pd
movsl
dec
dec
xchg
sbb
sbb
cld
das
imul
inc
mov
test
cmp
insl
add
ljmp
cld
inc
add
sub
inc
dec
mov
jge
idivb
xchg
jno
push
in
mov
lret
scas
ret
mov
cli
adc
dec
add
dec
mov
sbbb
sub
dec
mov
and
xlat
loopne
daa
xorl
xchg
and
shrb
jmp
pop
daa
jmp
add
sub
sub
jecxz
inc
jmp
cmp
stos
lret
into
ds
or
dec
pop
push
and
aaa
pop
fidivrl
adc
popf
jb
push
loop
adc
jmp
and
in
pop
adc
inc
dec
xor
js
or
jecxz
mov
mov
fidivrl
xchg
inc
arpl
in
dec
rol
aas
rol
mov
sbb
enter
xor
mov
call
jge
fs
mov
icebp
or
dec
iret
jg
pusha
mov
fldt
std
mov
lods
movsl
sahf
test
sahf
adc
shll
dec
xor
mov
insl
enter
push
ficoml
testb
lea
stos
fisubrs
sub
mov
fmull
push
jmp
repz
or
mov
push
rorl
nop
stc
loopne
or
loopne
scas
movsb
xchg
ds
in
jg
sti
pop
inc
mov
cwtl
movsb
xor
mov
sbbb
repz
jne
fisttps
arpl
scas
and
mov
mov
scas
sbb
and
push
mov
sahf
adcb
ffree
dec
pushf
adc
inc
mov
pop
add
incb
mov
imul
popa
daa
add
jle
cmp
or
and
dec
pop
cmp
into
repz
sub
int3
nop
mov
lcall
pop
rclb
and
sarl
jne
xchg
sub
pop
call
sub
push
push
dec
test
fildl
pop
mov
inc
fwait
add
mov
adc
test
or
add
mov
dec
mov
int
xchg
pop
dec
mov
mov
pop
cmp
sahf
lea
jmp
jae
ds
aaa
insl
xlat
inc
cmpsb
mull
mov
dec
sbb
mov
push
lahf
pop
enter
scas
fwait
cmc
fsubrl
aas
lret
jae
and
das
xchg
mov
movsb
subb
cmp
xchg
push
mov
sub
sub
sbbl
xchg
xor
pop
pop
test
dec
cs
jb
je
mov
loopne
aad
dec
mov
insb
or
icebp
pop
xor
mov
ret
dec
xor
mov
sbb
ja
js
cmovle
add
push
sahf
pop
outsl
dec
mov
xchg
pop
fcoml
cs
dec
jns
lret
repz
or
movsb
mov
fs
lods
pop
or
push
jle
inc
fimull
cmpsl
imul
stc
dec
xorl
sub
testl
lahf
mov
pop
ds
jno
test
mov
push
mov
cmp
xorl
mov
cld
xchg
mov
shrb
cltd
pop
sbb
sub
jl
stos
outsb
jecxz
mov
out
loop
mov
sbb
add
pop
pop
cmp
cmpsb
push
xchg
popf
das
push
js
xor
sub
fwait
mov
aas
pop
mov
lahf
mov
test
or
sarb
sbb
iret
jb
outsl
out
decl
xor
push
add
jmp
stos
jp
popf
or
and
mov
cltd
adc
cmp
xchg
jp
clc
movsb
pop
fnstsw
repnz
and
cs
xchg
and
cmp
fmull
scas
cmp
lret
mov
inc
std
push
lods
sbb
cld
pop
pop
cmp
mov
ret
movsl
fstl
std
ja
iret
jg
or
lahf
jns
xor
sub
test
stc
pop
ljmp
xor
mov
and
rcrb
push
or
jmp
jle
lods
inc
in
or
addb
movsb
aaa
dec
movsl
sbb
enter
js
out
test
test
and
stc
ljmp
push
jecxz
mov
sub
jbe
sbb
aaa
adc
push
push
flds
gs
mov
loop
push
movsb
les
fcomps
dec
sahf
xor
jg
pop
push
out
repz
fimull
stos
sub
out
mov
ret
push
mov
mov
insl
inc
xor
test
clc
in
jbe
sbb
js
mov
std
aaa
xor
cs
sub
sub
cmpsl
out
insb
scas
ja
add
jmp
pop
jnp
test
enter
mov
pop
dec
mov
push
in
ja
aad
fwait
xchg
jmp
inc
in
outsl
pop
out
push
adc
pop
add
loopne
mov
lods
xchg
pop
jge
dec
mov
inc
scas
pop
xor
fsubl
nop
and
das
out
sbb
xchg
daa
and
pusha
push
xor
push
jnp
sahf
pop
lret
rcrl
sub
mov
test
xor
sbb
adc
hlt
shll
data16
mov
jae
cmc
mov
jb
dec
add
data16
xchg
call
loope
inc
inc
fcmovne
push
and
sbb
test
cs
enter
mov
fstps
inc
aad
jo
pop
out
lfs
xchg
mov
push
sbb
stos
das
mov
add
stos
dec
jb
cmp
mov
shlb
mov
sbb
mov
int3
and
add
mov
push
add
jo
mov
js
mov
adc
pop
movsb
pop
imulb
ds
ss
xchg
push
stos
xchg
jno
ja
xlat
cmpsb
outsb
jo
dec
sbb
gs
xor
jbe
ss
mov
dec
outsl
fwait
mov
idivb
pusha
mov
pushf
ret
xlat
or
icebp
jge
sub
rcrb
xor
pushf
add
addb
fwait
cs
popf
push
add
mov
das
mov
fistps
mov
into
test
mov
test
cli
test
aam
cltd
or
dec
rolb
gs
outsb
cmc
iret
arpl
jae
fsubp
jp
mov
jp
shl
sub
pusha
sbb
daa
stos
out
lods
idivb
sub
popf
dec
cltd
insb
pop
adc
int3
nop
lods
push
out
adc
xchg
jp
push
mov
mov
gs
rcrl
sbb
xor
add
ret
pop
pop
xchg
xchg
cltd
pop
in
add
mov
mov
stos
dec
jp
nop
adc
test
push
xchg
mov
xor
or
cmp
imul
xchg
out
add
fisubrs
push
lock
mov
shlb
ret
sahf
cli
repnz
sbb
hlt
daa
arpl
xchg
popf
mov
lock
jne
cmpsl
fisubs
xchg
repnz
pop
mov
fwait
popf
adc
pop
mov
imul
movsb
mov
mov
jecxz
lret
and
in
stos
pusha
sbb
xchg
imulb
inc
mov
mov
adc
cwtl
ja
aas
sbb
add
cli
mov
add
dec
xor
pop
outsl
inc
call
jbe
jmp
or
add
fbstp
imul
lahf
aaa
dec
outsl
addr16
or
inc
jnp
cmpb
dec
sbb
addl
insl
mov
mov
or
cmp
aam
and
out
cmp
enter
mov
mov
adc
or
add
enter
lcall
mov
pusha
add
mov
jp
imul
shll
mov
mov
jno
mov
frstpm(287
imul
sub
fs
leave
popa
push
mov
fmulp
inc
dec
ljmp
xor
add
or
sahf
in
adc
ja
lret
mov
in
imul
pop
and
inc
inc
mov
mov
aad
ret
ss
push
aas
out
hlt
mov
sbb
in
lret
repz
pushf
jae
lods
aas
test
jmp
or
lret
popa
sub
pop
cmp
icebp
push
dec
lea
inc
mov
fstl
es
push
mov
pop
lea
inc
in
pop
rcrl
sahf
push
orb
or
stos
and
dec
fidivrl
cld
in
sbb
jmp
push
and
inc
add
imul
std
mov
sarl
jl
sbbb
ret
xchg
rcrl
cmp
lods
cwtl
push
xlat
loop
cmp
sub
ss
push
imul
sub
outsb
cwtl
pop
aas
movsb
addr16
add
mov
rorl
aas
rcl
cli
xchg
out
mov
cld
cmp
jb
test
iret
xchg
test
lods
pop
scas
add
jmp
or
mov
sub
xchg
jp
popa
stc
cmp
jne
out
aad
sti
insb
lock
jecxz,pt
pop
xchg
cmp
xchg
cli
loop
or
int3
push
imul
sbb
mov
cld
add
mov
cmp
push
mov
jb
push
in
addr16
dec
scas
insl
jbe
andb
and
add
push
push
mov
ss
bound
icebp
sbb
and
dec
cmp
int
adc
mov
xchg
in
icebp
cld
pop
xchg
mov
aam
and
cli
push
xchg
pop
and
jne
or
mov
arpl
pusha
scas
inc
movl
sahf
in
jns
xchg
aad
pop
push
call
shll
dec
jae
imul
lret
pop
inc
aam
outsl
popa
sahf
fwait
sub
jecxz
sti
xchg
cmpsl
xchg
push
mov
fistps
xchg
loopne,pt
mov
fbld
lds
add
or
mov
popf
or
and
add
inc
movsl
movsb
jae
and
int3
sbb
dec
dec
ss
mov
cmovbe
add
test
cmpsb
sub
dec
std
inc
movswl
sbb
cmp
iret
sub
mov
fidivl
pop
dec
mov
pop
les
out
adc
lods
jne
pop
int3
pop
cmpb
mov
cmp
pop
and
mov
lods
lret
nop
std
dec
mov
push
xor
das
cli
cmp
mov
adc
and
push
or
test
pop
loop
clc
cmpsb
mov
fdivrl
aam
scas
xchg
cmc
data16
xor
cmp
lods
into
jae
in
dec
xor
fsubr
sahf
in
out
outsb
push
xchg
add
jb
mov
shl
and
imul
push
mov
dec
add
rcr
or
aaa
lahf
mov
lahf
sti
popa
bnd
xchg
and
mov
pop
xor
mov
inc
rolb
jecxz
mov
xor
call
adc
inc
test
xchg
iret
out
and
call
jno
sti
loope
rcll
rorb
enter
jmp
stos
pop
aas
icebp
push
sbb
xchg
mov
or
fldcw
pop
xor
xchg
or
mov
popf
outsb
push
out
stc
jbe
adc
jbe
andl
insb
sbb
push
add
lea
repz
mov
adc
mov
fldenv
and
jne
mov
arpl
pushf
adc
subl
test
sbb
test
xor
aas
cmp
data16
sub
push
mov
call
hlt
cmp
and
sub
push
mov
test
xor
testb
dec
test
xor
and
enter
jns
sbb
or
ja
sahf
add
sarl
sbb
and
sub
ds
jle
adc
or
stos
idivb
xor
push
fsubs
jns
inc
int
and
popf
lods
aam
mov
mov
jg
xor
dec
fs
iret
data16
jmp
out
and
aad
jae
jp
popa
adc
js
int3
or
fldpi
or
addr16
mov
fnstsw
push
or
xchg
je
in
jns
and
jle
mov
dec
mov
and
rcll
adc
stos
mov
sub
xorb
pusha
icebp
inc
jg
shl
jp
push
sub
sahf
std
push
jb
rclb
mov
jno
mov
std
les
lea
jae
loope
mov
movsl
sbb
into
dec
xor
inc
sti
push
outsl
mov
or
rolb
sub
adcb
dec
mov
mov
push
repnz
sub
or
js
and
xchg
xor
sti
xchg
or
or
add
dec
lahf
dec
jb
inc
int
add
adc
push
or
pop
fnsave
fwait
jecxz
stos
push
cmpsb
xor
dec
sahf
and
es
pusha
pop
cmp
addb
cmp
cwtl
and
adc
jle
or
mov
sub
cmp
xor
lock
xchg
sbb
insl
xchg
js
sub
dec
rcll
sahf
mov
aaa
mov
inc
fwait
mov
or
nop
xor
jge
jg
lret
add
mov
mov
mov
mov
mov
cmp
sbb
sbb
std
push
jge
stos
sbb
or
mov
mov
pushf
cwtl
jae
adc
cmpsl
adc
add
sbb
leave
or
xor
cmp
jp
into
in
ds
cmp
imul
or
out
aas
xchg
and
aaa
daa
arpl
push
ret
hlt
pop
in
xchg
scas
cmp
xchg
mov
daa
lds
ss
pusha
insb
add
loop
stc
in
mov
loopne
dec
cmp
sub
pop
xchg
cmp
cmp
sub
pushf
fs
cld
mov
ds
xor
out
scas
adc
mov
jne
jg
movsl
out
das
xchg
out
pop
push
out
insl
cmpsb
ljmp
xchg
cmp
fimuls
dec
push
jmp
sub
les
push
jo
jb
dec
lahf
xor
xchg
ds
jae
xchg
dec
cld
cltd
les
fnstsw
sbb
ds
insb
fnop
shrb
dec
fisubl
or
mov
lods
loop
inc
fwait
mov
push
push
in
jb
or
jno
jmp
add
add
mov
xor
mov
inc
in
jno
jle
hlt
pushl
sbb
pop
cmp
in
inc
bound
pop
dec
pop
inc
inc
cltd
xor
mov
mov
and
cmp
in
inc
sbb
movsb
cmp
outsl
and
imul
lea
sub
daa
orl
repz
cld
ss
nop
sub
popf
cmp
push
mov
jp
icebp
xchg
mov
adc
adc
push
out
outsb
scas
mov
jno
bound
pusha
and
push
pop
stos
cmp
mov
lds
outsl
push
movb
adc
jnp
stos
test
ret
cmp
outsb
test
stc
mov
mov
das
test
in
mov
nop
mov
adc
fisubrl
sub
dec
stos
adc
ja
push
adc
add
xor
idiv
mov
push
adc
xor
xchg
xchg
xor
pop
lea
sbb
xor
sti
imul
lds
push
mov
into
sbb
inc
xchg
and
push
xchg
push
dec
cmp
pop
dec
jno
and
and
jne
daa
jno
hlt
sbb
and
dec
cmp
lds
ss
ss
outsl
sub
jns
cmp
shlb
sub
adc
push
stos
mov
lret
std
mov
mov
sarb
movaps
insl
lahf
mov
iret
or
xchg
mov
and
sbb
push
jg
insl
outsl
mov
push
outsb
divl
test
cmc
jbe
xlat
jbe
repz
fsub
pop
es
outsl
xor
mov
into
push
sub
xor
int3
mov
inc
adc
fs
xchg
shll
mov
adc
jle
jp
mov
sti
add
fs
push
jmp
mov
push
push
xchg
test
clc
or
int
xor
scas
ret
int
sbb
jne
add
mov
jno
inc
xor
add
mov
adc
out
imul
dec
sub
adc
add
mov
std
dec
fs
enter
xchg
hlt
pop
lds
cmpsl
repnz
insb
jmp
inc
sub
jnp
xchg
sbb
lea
jno
les
xor
setae
loopne
loope
les
lds
mov
mov
xchg
inc
fnstcw
shll
movsb
jecxz
pushf
je
nop
mov
xorb
insb
rcrb
xchg
lahf
sbb
mov
mov
test
push
ret
mov
sub
cli
sarb
sbb
gs
jge
lret
jns
or
mov
into
xor
ljmp
xchg
test
xchg
add
sub
shll
sub
mov
outsb
cwtl
cld
fildll
idivb
adc
or
inc
push
or
mov
push
push
push
std
std
movhps
decl
loopne
ret
xchg
sbb
daa
pop
and
loop
sbb
loopne
rcll
stos
jmp
sub
adc
cwtl
std
test
xorb
push
nop
xchg
std
xor
dec
ret
jmp
lret
inc
mov
sahf
in
pop
add
call
or
aas
movsb
loop
inc
sahf
mov
cmpsb
mov
gs
xchg
shrb
repz
inc
jns
fbstp
clc
sbb
add
xchg
xchg
xlat
pop
and
popf
inc
mov
push
sub
mov
mov
ljmp
stos
test
clc
adc
test
mov
repnz
jae
mov
out
inc
lret
mov
and
dec
divb
cmp
ret
fsubrs
inc
shlb
movsl
icebp
mov
cs
inc
add
mov
mov
add
dec
popa
inc
mov
mov
jbe
xor
lea
pop
xor
stos
mov
das
imul
pop
sbb
cmc
lea
or
lahf
ljmp
or
mov
aam
repz
je
adcb
int
mov
bound
pop
xor
push
sub
mov
movsb
or
ja
ljmp
jmp
xor
sub
or
xchg
arpl
mov
dec
movsb
inc
shlb
inc
ror
mov
stos
mov
scas
inc
jno
jl
inc
cmp
push
pop
sbb
xchg
mov
pushf
pop
sahf
stos
sahf
mov
leave
movsb
jnp
jne
sbb
pusha
pop
adc
cmp
jae
push
and
jne
int3
movsl
push
in
push
roll
and
push
call
cmp
and
jmp
cmp
out
sbbl
mov
mov
gs
jno
jl
movsl
add
or
ret
dec
ljmp
adc
cmp
mov
ljmp
testl
mov
jle
leave
addb
imul
mov
fisubl
mov
notb
jp
dec
sbb
add
in
and
dec
in
fidivl
aam
mov
popf
jne
jnp
fildll
mov
adc
ret
dec
int
pushl
mov
push
add
sbb
stos
jg
xor
inc
dec
or
dec
aad
cli
cmp
jmp
scas
xchg
cli
scas
loop
lahf
movsl
dec
stos
or
and
fstps
sbb
jae
mov
pop
jg
mov
push
mov
inc
into
adc
outsl
xchg
std
jp
pop
pop
and
decl
ret
push
push
add
es
and
mov
mov
sub
mov
mov
repz
ds
jo
inc
xchg
or
and
pop
adc
pop
inc
cmp
mov
mov
fistpll
test
add
xchg
pop
out
xlat
mov
pop
mov
scas
dec
loopne
jae
dec
jle
mov
push
jnp
bound
cmp
sub
mov
test
inc
inc
adc
mov
das
add
xor
movl
clc
nop
dec
test
adc
mov
aam
jbe
ljmp
stos
push
mov
cmpl
mov
lea
sub
jl
lcall
cwtl
jne
push
push
mov
pop
addl
fistl
xchg
mov
ljmp
xchg
cli
jmp
fcompp
shr
mov
xor
xlat
bnd
mov
out
hlt
mov
popf
cli
add
nop
movsl
repz
xor
mov
test
push
and
inc
call
sub
sbb
sbb
stos
outsb
test
out
stos
lcall
dec
lods
dec
dec
push
adc
ljmp
test
daa
cmp
das
pop
shlb
jp
iret
lcall
jp
int
pop
cmp
loope
sub
adcl
and
mov
xchg
add
mov
sub
jg
fstl
pop
aaa
pop
js
adc
push
rcl
mov
or
dec
push
jl
cli
test
nop
int
out
es
repnz
sbb
jp
mov
mov
adc
mov
rolb
or
cmp
test
ja
xchg
std
ds
and
pop
pop
aaa
ds
dec
add
add
lds
pop
pop
fiaddl
push
and
gs
stos
inc
pop
mov
jnp
fisttpll
popfw
stc
subb
aas
jge
inc
pop
shrb
push
hlt
cmpl
lahf
cmpsl
or
xchg
xchg
cmp
and
clc
sti
adc
out
mov
lcall
loope
jns
daa
test
mov
das
aad
mov
into
scas
test
jae
repz
inc
push
jecxz
and
enter
faddl
lahf
repz
add
rcr
jecxz
icebp
xor
test
ret
lret
shlb
sahf
mov
or
fwait
mov
mov
and
mov
mov
je
sub
aad
inc
ficoml
loop
inc
adc
or
sub
jecxz
out
test
rorl
inc
and
fdivrl
sub
jge
sahf
call
and
pop
hlt
stos
jo
mov
xchg
xor
add
pop
addl
fistps
sti
inc
xchg
pop
push
jle
loop
lock
add
imul
rcll
out
jecxz
xor
xchg
adc
dec
out
idiv
pop
mov
push
fsin
jb
adcb
push
roll
shl
lds
test
jo
imul
and
loope
sub
jnp
clc
mov
in
xchg
xchg
les
dec
test
test
mov
mov
lds
test
cltd
aas
xchg
jl
adc
fistpl
sub
sbb
jecxz
or
dec
or
jmp
in
mov
or
clc
push
testb
pop
pop
cld
out
mov
pop
xchg
inc
dec
sbb
mov
in
or
push
int3
inc
in
test
adc
ja
sarb
xor
sbb
cltd
mov
sub
notb
inc
pop
outsb
mov
xor
dec
inc
cs
mov
xchg
and
sbb
ret
testb
push
lods
and
arpl
push
pop
cltd
push
inc
mulb
push
xchg
add
xor
js
jne
js
inc
mov
xor
mov
ss
cmc
add
push
pushf
push
push
insb
mov
clc
test
lar
fs
mov
cmp
mov
mov
and
cmp
sub
ror
inc
lahf
xchg
mov
aad
mov
rclb
sub
add
and
shll
fistl
push
or
or
sahf
dec
dec
lahf
xor
xor
jb
gs
cmp
add
sub
clc
setnp
inc
pop
xchg
mulb
xor
lret
int3
fldenv
pop
dec
popa
cmc
std
aad
pop
in
inc
loop
imul
mov
inc
jle
rorl
scas
xor
cmp
and
xor
stc
or
pop
frstor
inc
inc
pop
pop
push
aad
jl
cmp
lods
adc
inc
subl
pop
rorl
lret
xchg
mov
jno
stc
xor
dec
push
sub
imul
enter
sbb
pusha
sub
inc
jp
cmp
push
xlat
sahf
mov
jg
jnp
cmp
addr16
rorb
adc
lods
jp
call
shrb
cld
fs
jmp
mov
xchg
mov
or
cltd
out
mov
push
xchg
mov
dec
out
incb
push
xor
iret
fs
daa
ss
add
sub
into
or
sysenter
divb
je
dec
mov
fisttpl
cmpsb
je
repnz
imul
pushf
outsl
rcl
decl
inc
mov
test
mov
xchg
adc
lret
push
mov
cmp
mov
push
push
cs
lods
push
pop
jne
stc
sti
inc
imul
and
gs
fs
push
sbb
push
cltd
hlt
ret
lock
xchg
outsl
lods
pop
or
in
popa
mov
mov
sahf
shll
pop
stos
outsl
xchg
push
into
pop
outsl
inc
aam
cwtl
xchg
xor
xorl
pop
rcrw
or
stos
out
xchg
xchg
clc
testb
pop
sub
es
pushf
ret
push
or
jle
cmpsl
sarl
inc
dec
fnstenv
add
or
mov
jmp
iret
fldl
mov
lcall
orl
xor
fsubl
mov
out
cmc
mov
add
lahf
aad
bound
std
into
dec
xchg
into
cmc
je
je
in
add
xchg
mov
dec
adc
and
mov
jnp
mov
lcall
movsb
je
pop
pop
pop
insl
jmp
xor
or
jge
xor
orb
lahf
dec
sub
push
mov
pop
js
mov
rclb
cmc
scas
imul
aaa
push
push
pop
jge
cmpsb
repnz
fildll
inc
dec
imul
inc
sub
sbb
add
push
mov
movsb
adc
cmpl
loopne
cli
mov
mov
fisttpl
js
ss
into
stos
or
mov
insb
repnz
mov
cltd
or
sar
dec
xor
add
xchg
dec
sub
loope
arpl
mov
mov
leave
in
pushf
call
sahf
loopne
sub
or
or
imul
ljmp
fsubrp
and
leave
xchg
cmp
pop
push
out
dec
stos
sbbb
ret
stos
mov
flds
dec
push
and
ficoml
adc
fldl
mov
mov
mov
arpl
mov
jnp
daa
incb
cmp
push
jae
add
out
add
test
in
filds
fimull
ja
in
push
lret
outsl
jbe
push
loop
testb
pop
push
mov
inc
jbe
stos
inc
push
pushl
icebp
int
fldenv
mov
push
inc
sbb
scas
in
mov
dec
test
les
dec
fmuls
xchg
ret
xchg
xchg
dec
aam
mov
push
jno
jne
lock
loopne
jge
scas
lretw
mov
jo
push
xchg
mov
mov
cwtl
call
mov
pop
ror
iret
mov
lret
test
dec
jge
mov
jo
or
mov
inc
aas
lcall
mov
cmp
stc
cmp
or
mov
stc
iret
call
pop
mov
mov
js
fisubl
jne
testl
sbb
ret
xchg
pusha
xor
jne
jo
insb
fildl
jae
imul
popa
icebp
lods
imul
inc
gs
pcmpeqd
sbb
arpl
or
inc
outsl
inc
mov
lahf
mov
sub
mov
mov
dec
mov
mov
jg
mov
lods
sbb
rcr
punpckhwd
sarl
pop
dec
outsl
out
mov
add
out
rcrb
pop
cs
mov
sbb
sub
cltd
cmpsw
ret
in
mov
xchg
les
nop
mulb
adc
pushf
inc
pop
push
mov
mov
daa
adc
cli
mov
inc
and
mov
push
jmp
mov
addr16
popf
and
mov
push
or
cmc
icebp
daa
outsb
add
sbb
arpl
cmp
and
test
pop
mov
adc
ds
pop
jae
xlat
push
out
inc
cli
lret
iret
jno
push
out
in
adc
pop
fadd
push
cmp
loope
ret
inc
push
add
aad
push
pop
xchg
mov
pop
testb
lods
add
imul
repz
test
xchg
jecxz
push
movsl
adc
xlat
data16
fdivs
adc
mov
push
xchg
les
push
sub
sbb
mov
add
in
fisttps
adc
inc
repz
ja
fwait
cmp
xor
loope
imull
rcr
leave
std
pop
or
push
mov
mov
push
cli
pop
cmpsl
mov
dec
inc
xlat
inc
xchg
push
dec
sarb
mov
pushw
pop
cmpsb
ja
jp
xor
loopne
in
leave
mov
or
loopne
cld
sbb
call
das
icebp
inc
mul
addr16
cmp
pusha
fwait
movl
ljmp
arpl
dec
adc
jo
in
shrl
aad
inc
sbb
inc
cmp
push
aad
outsl
mull
dec
xlat
daa
pop
xor
cmpsl
les
std
mov
in
xor
adc
and
jle
lods
call
lea
push
in
lods
int3
test
sahf
add
push
push
push
cmp
cmp
add
sub
movsl
lea
fsts
mov
dec
cmp
dec
sbb
fdivr
and
cmpsl
or
clc
mov
popa
cmp
inc
jp
pop
fcoml
out
fstl
lods
mov
rcl
repnz
movb
into
dec
mov
in
cmp
jns
adc
cmp
adc
mov
jmp
fdivrl
fidivs
jge
jbe
adc
inc
and
inc
adcb
pop
pop
cld
outsb
pop
fimuls
popf
sbb
scas
mov
mov
xchg
or
sub
inc
jnp
add
xchg
cld
dec
jle
xchg
mov
push
repnz
push
popa
xchg
dec
fidivrs
xor
mov
jae
test
dec
orl
sub
stos
test
sbb
adc
mov
shlb
mov
cmp
out
iret
sub
or
mov
mov
pop
jne
jo
push
sub
mov
in
mov
xor
inc
mov
mov
cmpsb
mov
loope
sbb
outsb
add
cmpb
pop
loope
adc
fmull
adc
ds
and
cmp
inc
sar
mov
inc
test
clc
insl
sub
dec
xor
xor
cmp
loopne
movsb
and
pop
shl
jl
pop
iret
mov
cmpsb
sbb
loop
jae
fwait
arpl
stos
xor
mov
xor
xbegin
sbb
rcrl
add
leave
or
jnp
outsl
push
out
sbb
ret
mov
sbb
or
dec
inc
aad
jb
cltd
inc
out
sub
lret
clc
int
stos
jae
scas
arpl
sti
lods
and
xor
mov
lret
push
jmp
mov
movl
js
jne
aas
sub
push
inc
jno
inc
imul
add
jo
call
aaa
jmp
pop
ljmp
jmp
fiadds
sub
stos
jecxz
jae
mov
dec
jg
in
into
pop
icebp
push
xchg
aas
sub
dec
sbb
sbb
mov
push
inc
jno
aad
adc
jge
sub
or
shr
inc
dec
mov
sbb
mov
or
mov
cli
pop
sti
cld
jge
jb
mov
jnp
aam
popa
test
imul
push
cmp
xchg
inc
adc
pop
testb
popa
add
cltd
movsb
dec
and
push
add
enter
xchg
in
dec
pop
js
pop
insb
xor
ret
sarb
mov
xchg
sub
adc
jo
cmp
lods
and
cmpsb
subl
xchg
out
adc
gs
or
sub
adc
add
fldt
cli
idivb
ss
sbb
inc
mov
shlb
mov
cmp
xor
leave
push
aad
cwtl
cmp
call
mov
subb
mov
clc
in
inc
mov
popa
pop
sub
stc
test
mov
add
orl
sub
out
xchg
fsubrl
aam
aam
je
add
leave
iret
sti
pop
or
icebp
cwtl
sub
xorb
data16
mov
fwait
shlb
call
mov
dec
arpl
adc
push
test
cmc
push
cmp
loope
adcl
pop
lock
movsl
std
mov
popf
and
sbb
rep
pop
and
inc
fldl
lret
mov
clc
ljmp
les
stc
idivl
movsl
sbb
sub
outsb
call
movsl
aaa
das
jnp
fstps
lea
addr16
xchg
in
rorb
inc
cmpsb
int
idivb
mov
lods
mov
cld
divb
cld
gs
sub
jbe
adc
addr16
out
pushf
outsb
add
push
xchg
pop
pop
push
lds
adc
jno
add
in
dec
std
adc
mov
mov
pop
inc
popa
dec
mov
xor
sub
inc
daa
movsl
inc
sbb
dec
fnstcw
ss
cmp
sub
ficompl
clc
out
ret
xchg
stos
jnp
dec
movsb
xchg
or
movsb
jle
mov
adc
jb
lret
adc
subb
sub
cltd
pop
push
leave
into
ficompl
xchg
xchg
xchg
xchg
popa
dec
arpl
xchg
xor
in
jno
in
adc
imul
std
mov
inc
ljmp
mov
mov
add
dec
or
rclb
test
xchg
rcrl
pop
test
pop
lds
aas
xchg
cmp
jg
add
and
push
push
cmp
fcoms
scas
les
dec
cmp
imul
xchg
xor
dec
xor
push
and
or
mov
push
dec
shrb
xor
loopne
movsl
gs
jo
mov
in
loop
adc
js
pushf
sbb
es
sbb
sub
mov
test
xchg
xchg
sbb
cmp
jecxz
or
push
aad
stos
stos
adc
jp
pop
popa
push
mov
pop
xor
push
add
inc
add
add
xchg
outsl
inc
inc
mov
stc
shlb
mov
mov
xchg
xor
pushf
xchg
xlat
jg
ja
test
xor
inc
outsb
add
pop
mov
roll
pop
lcall
xchg
mov
xchg
lahf
mov
add
mov
mov
in
pop
mov
mov
or
out
pop
cmp
mov
roll
insb
out
fdivrs
hlt
imul
and
pop
adc
and
fists
out
add
js
loop
dec
xchg
xchg
popf
jno
shll
int
pop
icebp
cmp
pusha
fisubs
add
data16
and
in
aaa
push
sbb
adc
xor
mov
fwait
sti
add
inc
push
lret
mov
sub
jp
fwait
jbe
or
scas
shll
lahf
mov
jns
fs
push
push
sub
lock
pop
xchg
inc
aas
ja
inc
into
mov
lock
daa
pusha
cmp
ret
and
sbb
lret
mov
dec
lods
mov
cmp
sti
outsb
mov
or
icebp
test
fldl
adc
bnd
pop
jns
sti
outsb
sub
fists
lea
mov
loopne
hlt
loop
ss
or
fs
mov
psllq
aas
mov
fisubrl
xor
je
sbb
repz
sbb
or
fsubp
iret
push
testb
push
add
push
cmp
into
outsl
pop
sbb
or
sub
imul
pop
jns
aaa
imul
pop
cmpsl
or
xchg
and
int3
xchg
cwtl
sub
mov
pop
test
mov
inc
ret
pop
push
icebp
test
jbe
pushf
rolb
add
cmp
jns
test
out
and
clc
sahf
jns
push
stc
push
mov
or
out
pop
and
cli
xchg
scas
cmc
scas
mov
shlb
imul
xchg
lock
lods
pop
push
push
jg
xor
pusha
xor
fwait
js
add
cwtl
popf
pop
cltd
mov
mov
dec
test
fsub
aad
adc
mov
mov
adc
test
push
adc
mov
xor
mov
in
push
fsub
sub
lock
mov
cmp
je
or
and
xor
and
sub
icebp
adc
cmp
xchg
addb
stos
mov
xchg
or
enter
movsl
adc
jecxz
xor
std
inc
or
xchg
push
or
ja
cli
mov
mov
jnp
add
sar
jecxz
jle
loopne
inc
idivb
jnp
add
xchg
out
lods
addr16
inc
xchg
pop
sub
mov
inc
add
fcomip
push
fiadds
jl
push
jl
sbb
movmskps
mov
mov
gs
movsb
mov
or
movsb
lcall
mov
in
stc
mov
popa
dec
and
bound
insb
sbb
push
mov
xlat
imul
push
jecxz
dec
push
add
jg
add
push
rcrb
arpl
in
insb
add
xor
pushf
pop
sbb
pop
sbb
icebp
addb
xor
inc
adc
sbb
push
jae
xor
call
mov
and
outsl
pop
jae
popa
mov
daa
cmc
sub
mov
ja
or
add
pop
sti
int
fldcw
cltd
jo
mov
cli
mov
cs
lcall
sbb
mov
lcall
push
arpl
dec
sbb
xchg
rclb
test
cld
mov
inc
or
sub
mov
aam
sub
pop
inc
std
aad
inc
bound
out
stc
push
inc
jae
mov
pop
stos
rolb
lods
js
add
inc
mov
dec
mov
push
mov
in
and
decb
mov
cmpsb
add
imul
in
ss
xchg
jecxz
and
test
out
xchg
sbb
mov
adc
inc
pop
mov
add
insb
jbe
shl
aas
pop
fs
lods
cmp
outsb
imul
lea
mov
cli
ja
sbb
scas
fists
lahf
gs
ss
and
pushf
imul
dec
paddw
dec
lods
add
shl
push
in
in
lods
xchg
push
xchg
jnp
xor
pop
lock
movsb
dec
andl
lcall
xor
repz
sub
loop
pushl
enter
cmp
movl
xor
js
add
rorl
xorl
js
lcall
adc
pop
xor
sbb
jae
repnz
mov
xor
imul
or
aas
mov
push
cmp
cmp
dec
and
aam
nop
mov
xchg
pop
inc
ss
mov
test
sub
xlat
pop
sub
sub
ds
lods
lret
adc
in
mov
mov
sbb
lcall
xor
insb
cmc
xchg
cwtl
hlt
jle
cmp
test
sbb
ljmp
pop
gs
scas
shll
enter
jmp
xchg
sbb
xchg
stos
sbb
sbb
push
cmp
or
flds
scas
ljmp
popf
fiaddl
mov
cli
jge
add
addr16
jnp
mov
sub
adc
inc
sbb
cmp
lods
and
into
cmpsb
lds
icebp
pusha
push
pop
mov
or
mov
add
sahf
imul
cmc
push
dec
jo
lret
adc
popf
xor
xchg
push
adc
mov
xchg
sahf
push
mov
sub
scas
rcrl
push
xor
pop
pop
xchg
jno
in
jo
out
decl
adc
shlb
popf
movsb
stos
ljmp
icebp
add
cltd
and
jne
mov
mov
sbb
jnp
imul
incb
stc
add
cmp
insl
outsl
lret
in
sbb
jne
loopne
lds
mov
lods
in
repnz
js
aas
mov
movsl
fbld
xor
lcall
pop
lret
adcl
xchg
call
xor
push
lret
cli
rol
cmp
xchg
mov
cmp
ret
and
rorb
mov
lcall
iret
inc
mov
jmp
lcall
fsubr
sbb
inc
sbb
aas
dec
or
mov
mov
jmp
add
and
mov
ljmp
cmpsb
jp
adcb
push
pop
in
mov
ret
lds
test
xor
dec
or
sbb
mov
scas
jns
std
ds
push
xor
mov
lea
push
sub
push
and
stos
jnp
insb
jae
xchg
jns
leave
push
xor
fstps
imul
out
popf
aaa
xchg
dec
push
mov
push
or
stos
in
mov
mov
fimuls
test
mov
sbb
dec
pushf
popa
lods
int
jle
scas
sbb
push
push
lods
pop
dec
cmp
mov
aam
movsl
mov
scas
mov
pushw
inc
cmpsl
loopne
mov
fwait
int3
ljmp
inc
inc
adc
xor
mov
push
cmp
jg
lahf
sbb
fnsave
push
xor
or
sbb
sbb
scas
addr16
push
xor
cld
es
repnz
lret
stos
test
jge
data16
dec
mov
jg
sub
data16
push
cltd
out
sbb
div
sub
pop
shrl
dec
shlb
dec
xchg
xor
cmp
imul
and
push
cmp
leave
arpl
dec
daa
xchg
out
out
add
push
jno
sbb
mov
bnd
add
mov
push
stc
arpl
jae
or
pusha
cli
iret
cmp
sbb
push
pop
adc
xorb
shl
daa
cltd
data16
jnp
leave
pop
pop
pushf
stos
lods
xchg
xchg
lods
arpl
or
popf
xor
inc
std
addr16
or
es
mov
jmp
scas
mov
ja
add
xchg
jecxz
nopl
mov
mov
lods
pop
xor
test
sahf
sbb
popf
fwait
push
rcrb
add
div
mov
pop
sub
enter
add
mov
enter
rcrb
out
and
shl
sub
shrb
sti
les
gs
push
push
cmovns
sarb
sub
les
pop
loope
stos
in
sbb
inc
sbb
cmp
push
pop
sub
sbb
and
sub
repnz
jp
lods
xchg
popf
cltd
shl
sbb
push
mov
mov
cmp
push
imul
and
insb
adc
mov
frstor
xchg
jbe
sub
in
pop
sbb
cld
fdivrs
bound
stos
int3
sbb
enter
or
es
and
addr16
push
or
sbb
adc
ja
movsl
out
xor
mov
out
xchg
xor
daa
or
ficomps
jb
out
xorps
clc
addr16
inc
pop
sub
mov
xlat
outsb
movsb
push
push
mov
lds
push
mov
insl
sub
sub
add
inc
and
in
out
xor
push
push
outsb
faddp
ds
addl
inc
enter
inc
repnz
cs
cmpsl
add
push
mov
inc
inc
xchg
incb
adc
and
pop
xchg
outsl
mov
mov
xchg
lea
test
mov
xor
insl
pop
sub
loope
mov
outsl
and
push
in
int
fistl
std
or
mov
sub
mov
rorl
jp
sub
les
loop
clc
mov
das
and
and
out
fldcw
and
or
sub
lahf
loopne
xchg
int
xor
sub
cs
mov
cwtl
push
arpl
push
cltd
shrb
vpcmpgtw
sub
popa
and
sbb
test
push
roll
pop
test
ss
sub
jmp
in
lock
ja
sbb
test
inc
fldl
inc
or
push
loopne
mov
xchg
and
pusha
sti
push
dec
adc
cltd
pop
cltd
push
jecxz
out
inc
or
out
aaa
jne
pop
fcomps
lods
xchg
adc
cmpsb
sbb
mov
jbe
xchg
push
pushf
cli
pop
lcall
lret
jp
mov
mov
jae
repz
sbb
pop
bnd
test
jle
je
rcrl
insb
sbb
jne
das
adc
adc
ret
test
aaa
in
sahf
inc
push
repnz
int3
jb
out
xchg
mov
cmp
and
lret
outsl
mov
lods
test
xor
lods
sbb
mov
out
xor
aam
jbe
sub
cmc
icebp
fdivrs
push
testb
jge
or
sub
add
jmp
outsl
repnz
pop
ffree
fnstcw
lea
gs
sub
mov
pop
shl
mov
retw
jge
mov
push
repnz
inc
mov
lds
iret
shrl
mov
mov
lret
or
mov
into
inc
popf
imul
flds
inc
xchg
cmc
mov
xor
xchg
out
addr16
lcall
dec
xchg
mov
jl
scas
insl
mov
mov
enter
pop
inc
inc
aam
inc
cltd
mov
add
mov
lea
sahf
lcall
xor
mov
push
scas
inc
outsl
out
cli
loopne
xor
sarb
or
insl
adcb
ljmp
sub
mov
movsl
ss
ds
sbb
les
mov
or
dec
mov
lock
sbb
int3
xor
cmp
dec
in
pop
ds
repnz
cmp
and
mov
add
fisubrl
lcall
pop
aas
into
dec
inc
and
mov
sahf
mov
and
mov
mov
or
loope
mov
push
jno
cmpsb
gs
inc
xorl
push
fwait
popf
jno
xchg
and
in
stos
sbb
popf
in
dec
mov
enter
pushf
mov
jecxz
loope
mov
sbb
dec
inc
mov
pop
push
negb
clc
lods
ffreep
push
mov
dec
loope
lods
lea
and
and
scas
xor
ffreep
shrb
shl
xchg
mov
xchg
cmp
je
cs
pop
loopne
pop
enter
dec
sbb
cmpb
call
sub
negl
mov
and
testl
push
push
sti
push
jp
js
xchg
mov
and
push
inc
cld
dec
push
jno
or
sub
jbe
and
dec
cmp
inc
sti
outsb
ja
lahf
ds
mov
scas
outsl
xchg
or
cltd
push
out
adc
jbe
mov
das
jecxz
popa
movsl
inc
das
in
xor
aas
xor
lea
out
mov
mov
xchg
cmp
push
lods
fistpll
decb
lds
into
mov
xchg
dec
xchg
cmp
xor
loop
arpl
jmp
mov
jge
cs
outsb
leave
dec
push
mov
xchg
test
pop
xchg
sub
mov
and
test
aad
int3
std
sbb
popa
clc
sub
sub
pop
insb
mov
jmp
jg
pop
mov
lahf
pop
mov
xor
test
push
mov
mov
arpl
test
ljmp
add
lea
es
imul
stc
push
cltd
cmp
cmp
shrl
adc
repnz
pusha
or
pop
ds
sarl
fdivs
std
and
inc
sub
sub
and
cmp
fists
fmuls
xchg
inc
mov
pop
push
mov
inc
fcoms
fbstp
ljmp
je
jp
and
dec
xrelease
popl
jg
jmp
sub
out
add
imul
jmp
aaa
push
fimuls
xchg
push
test
fcmovb
pop
sahf
jno
lret
mov
ja
xchg
jnp
xor
sbb
imul
mov
lock
jb
popf
loope
mov
loop
or
movsl
or
fwait
jp
shlb
out
dec
mov
cmc
sbb
jne
repnz
or
and
stos
sub
sbb
nop
mov
adc
ret
movsb
ficoms
cmp
dec
pop
idivl
jns
xchg
stos
cltd
add
sub
xor
xor
popa
outsl
xlat
jns
jge
insb
sbb
mov
sub
inc
cwtl
xor
popf
ja
sub
inc
sub
xor
stc
enter
jne
mov
and
aad
adc
and
xlat
or
dec
mov
xchg
mov
cmp
cmpsb
jns
cld
mov
je
outsl
sbb
dec
xchg
or
repnz
or
inc
or
or
xor
inc
incb
or
outsb
aas
or
inc
inc
icebp
and
in
cmp
out
add
in
ficoms
and
stos
sbb
xlat
ljmp
sbb
in
into
mov
pop
or
lret
lret
rorl
sub
xchg
add
shr
push
pop
in
xchg
mov
pop
cld
mov
push
xchg
leave
jns
fnsave
or
inc
xor
mov
sahf
push
mov
in
cmovbe
xchg
ljmp
inc
lret
ret
adc
call
pop
scas
rolb
es
pusha
adc
jns
mov
push
pop
insb
pop
xor
mov
das
repz
rcll
mov
xor
push
jno
aaa
adc
push
subl
mov
and
cld
mov
roll
and
mov
pusha
mov
into
mov
int
or
dec
xchg
pop
pushf
out
movsb
lock
and
sub
pop
rcll
sbb
das
or
lods
in
jne
mov
es
scas
scas
cmpsl
ret
mov
xchg
pop
cld
mov
xor
outsb
test
decb
gs
test
mov
out
inc
ret
out
cli
sbb
stos
mov
shlb
mov
push
pop
mov
xor
mov
in
icebp
daa
mov
popf
or
clc
mov
test
lods
mov
fs
mov
call
dec
adcb
xchg
jb
dec
es
out
stos
ljmp
mov
stc
mov
mov
dec
jecxz
or
xchg
sbb
mov
pop
cmp
mov
loop
xor
dec
mov
push
lcall
imul
leave
cmpb
addb
rcrb
mov
pop
into
push
push
dec
push
clc
cmp
cwtl
mov
lret
sbbb
scas
xchg
in
pushf
pop
sbb
mov
or
fsts
xchg
test
pop
subb
mov
inc
dec
mov
es
int3
push
aam
cmp
sbb
jp
aad
sar
mov
bound
dec
or
out
test
lods
and
pop
mov
rcll
mov
je
cs
insl
iret
inc
push
sbb
jne
push
data16
mov
push
xor
sub
aas
addb
or
fldenv
xor
scas
roll
jmp
dec
xor
mov
inc
add
adc
push
and
jl
mov
pushf
fwait
xlat
enter
sbb
mov
pop
adc
imul
mov
add
xor
cs
notb
idivb
mov
mov
mov
jle
ss
ret
dec
lods
cmpsl
mov
sar
fisubl
push
cmp
and
xchg
cli
push
mov
jmp
repnz
shrl
pop
mov
mov
push
call
jae
xchg
dec
loop
std
in
test
sub
into
mull
loop
dec
push
mov
xchg
cmp
lock
jecxz
and
mov
movsl
loope
push
mov
sub
stc
sub
hlt
popa
or
add
mov
mov
fsub
sub
push
or
gs
sbb
sbb
add
ret
xlat
mov
hlt
cmpsb
icebp
jnp
cmpsb
test
lods
xchg
in
jae
mov
pop
jnp
pop
shll
push
lds
std
mov
jl
mov
stos
dec
add
mov
xor
bound
in
xor
add
mov
in
cs
in
loope
mov
adc
sbb
xchg
lcall
and
adc
xor
hlt
ljmp
or
fdivrs
mov
cmc
cmp
xchg
dec
add
lds
shlb
push
jbe
call
daa
shlb
scas
shl
ret
pop
aam
mov
rcl
ret
scas
dec
daa
aad
jle
cmp
gs
xchg
push
push
mov
cwtl
rorb
inc
cmp
aam
insl
pop
jg
jmp
loope
push
jl
jno
add
test
inc
or
aas
cmp
mov
in
les
push
rolb
jmp
cmp
sub
mov
lds
data16
lods
arpl
sbb
sti
pop
aam
mov
push
cmp
sbb
int
pop
in
or
ret
or
inc
mov
push
cmp
push
push
lods
and
sub
mov
push
movsb
pushf
inc
jecxz
adc
jbe
stos
mov
cmp
popf
fwait
jnp
dec
fildl
out
add
pop
nop
sub
inc
mov
cmp
pop
xchg
ret
cmp
test
sti
push
pop
and
mov
inc
inc
adc
enter
add
sbb
add
pop
sti
data16
fwait
insl
xchg
push
in
sub
xchg
rcl
inc
mov
sahf
push
nop
bound
pop
icebp
loopew
pop
andl
xchg
pop
inc
je
adc
jg
mov
or
sub
dec
iret
push
cmp
mov
jecxz
adcl
push
cmp
dec
mov
popf
adcb
mov
push
pop
jge
pop
push
and
ret
les
adc
add
inc
cmpl
and
mov
cmp
mov
mov
mov
fidivrs
sahf
fwait
mov
rcrb
sbb
mov
enter
xor
aaa
and
pop
and
pop
adc
icebp
daa
mull
push
cmp
mov
inc
fnsave
add
or
in
xlat
in
inc
jae
dec
sbb
iret
push
mov
adc
testb
mov
push
mov
mov
lahf
push
jge
lret
sbb
dec
in
and
arpl
xchg
cmp
leave
adc
je
add
xchg
xchg
xorb
sbb
mov
int3
mov
adcb
pusha
dec
mov
push
jne
dec
in
push
aaa
adc
rorb
dec
enter
ror
ret
push
or
xchg
into
and
stos
movsb
mov
jb
in
jne
aam
mov
xorb
or
pop
or
push
push
pop
pushf
mov
outsb
shlb
or
jae
cmp
sahf
dec
jp
mov
xor
mov
xchg
push
das
fildl
mov
adc
mov
add
mov
and
out
and
or
daa
xchg
pushf
pop
push
sahf
add
mov
sbb
inc
movsl
dec
sub
mov
mulb
sbb
out
sti
in
sbb
dec
andb
clc
mov
decl
mov
aaa
pop
xchg
ljmp
cmp
lret
ja
dec
aas
leave
fiadds
pop
add
dec
ljmp
adc
xchg
pop
stc
repz
pmuludq
int3
mov
adc
fucomi
sbb
aad
out
rorb
fldz
jmp
mov
xorl
mov
cli
jmp
mov
lahf
xor
sub
mov
insl
cmp
add
adc
mov
into
xchg
adc
aad
scas
xchg
in
and
and
push
push
in
and
outsb
loopne
jmp
lock
insl
sahf
popa
frstor
or
ret
lcall
pop
sbb
cmp
das
jmp
es
sbb
mov
cmp
nop
mov
pop
out
add
push
dec
adc
sub
test
add
scas
aas
shrd
out
xchg
call
aam
addb
pop
push
mov
adc
push
out
test
adc
push
pop
stc
sub
jae
inc
ret
pop
imul
mov
or
mov
dec
mov
stos
rolb
and
adc
sbb
xchg
lret
cmp
and
and
out
jno
pop
fldcw
jmp
gs
adc
xchg
add
push
out
mov
rcl
test
jb
test
xor
inc
filds
xor
fnstenv
or
or
mov
lock
fsts
rolb
das
mov
ja
xlat
cmp
js
int
cmpl
cmp
sbb
xchg
add
sarb
cmpsl
inc
jl
mov
pop
sbb
pusha
add
inc
xor
sub
mov
pop
lods
nop
push
ds
out
pop
imul
std
add
mov
cmpsb
adc
outsl
cmpsb
push
in
xor
and
out
pop
pop
inc
mov
xchg
imul
sbb
mov
jns
push
push
mov
les
jb
inc
lods
enter
push
les
sbb
mov
int
iret
dec
loop
jg
push
notl
pop
enter
int
xchg
jg
test
mov
dec
cmp
jae
cltd
sbbb
mov
ror
xchg
psubsw
cmpsb
addr16
sbb
gs
hlt
pop
fwait
push
mov
mov
notl
test
mov
mov
int
dec
sbb
fmul
outsl
xlat
loopne
sbb
pop
and
dec
out
stc
xor
sub
mov
cmpb
popa
mov
fstpt
stos
adc
test
push
nop
dec
xor
jg
mov
cmpl
outsl
or
adc
push
int3
lret
push
arpl
xchg
sub
insl
ret
cs
sahf
mov
dec
mov
jno
jbe
jmp
andb
add
xlat
push
pop
pop
int3
xor
iret
mov
cmp
test
inc
lret
cli
mov
mov
mov
mov
mov
dec
movsb
push
push
sbb
mov
invd
and
shrl
into
sbbb
add
les
xchg
inc
test
jl
add
pusha
adc
aad
enter
mov
mov
or
jnp
cmp
lds
pop
inc
int3
cltd
push
sbb
lock
lret
push
xor
adc
xor
clc
in
sub
lea
and
jmp
icebp
loop
xlat
xchg
out
and
xchg
stc
repz
cmc
sti
cmc
in
inc
jecxz
or
nop
popf
mov
fistps
jle
iret
jmp
ljmp
test
lret
xchg
mov
imul
cmp
pmuludq
addl
inc
shrb
out
bound
sub
and
push
jae
jg
ret
mov
mov
xchg
in
cmc
push
jmp
scas
js
repnz
mov
mov
sub
out
jge
dec
cmp
aaa
and
adcb
das
movsl
ja
pop
lods
stos
movsb
fldenv
adc
aam
pushf
cltd
out
test
stc
cmp
dec
popw
lods
inc
testb
or
dec
xor
mov
mov
sub
mov
data16
inc
jl
sbb
mov
ja
mov
bound
daa
seta
xor
rolb
aam
sbbl
out
iret
bswap
daa
jle
call
ficoms
mov
mov
dec
and
mov
mov
xor
mov
cmpb
adcl
in
jae
imul
lcall
data16
or
sub
fmul
bound
fsubrp
inc
jmp
mov
loope
repnz
incl
pusha
test
nop
xor
popf
stos
and
daa
loopne
decb
pop
and
fstpt
xor
xchg
sbb
fisubrl
push
das
or
inc
xlat
or
push
mov
cmc
xchg
aam
push
lods
push
inc
daa
xor
sti
inc
mov
jb
out
sbb
add
mov
adc
mov
pop
pushf
outsl
loopne
inc
pop
stos
inc
scas
jle
cmp
lea
xchg
push
mov
insb
mov
and
fnstsw
gs
insb
repz
pop
cmp
sbb
pop
xor
incb
xor
push
jp
push
mov
test
jle
out
xchg
xchg
sub
inc
data16
int3
pusha
cli
fwait
movsb
dec
xor
insl
je
push
lods
pusha
mov
cwtl
inc
fisttpl
stos
fbstp
push
insl
fisubrl
inc
lods
push
fnstcw
dec
cmp
mov
xchg
inc
std
inc
sub
scas
xchg
sahf
dec
stos
dec
nop
sbb
mov
movsl
mov
pop
xchg
addb
push
ficomps
test
ss
sub
sub
push
mov
gs
int
xor
and
aaa
shlb
sahf
fsts
fwait
sbb
push
xchg
std
shlb
aam
dec
stos
lret
mov
cmc
and
pop
or
cwtl
stos
nop
cltd
lret
daa
or
inc
sbb
mov
xchg
stos
and
lods
mov
adc
cmp
dec
or
and
stos
inc
test
dec
sub
xor
or
jae
or
mov
es
mov
aas
movsb
dec
mov
movsb
sbb
xchg
xchg
pop
xor
jge
pop
and
nop
cmp
push
xor
sub
push
inc
je
and
cs
dec
dec
stos
xlat
fnstsw
sti
inc
mov
movsl
push
jge
mov
or
jnp
daa
mov
mov
gs
adc
xor
xor
lock
lahf
insb
sti
dec
sub
lock
scas
push
push
inc
mov
shll
pop
xlat
xchg
cmp
jbe
out
ret
aas
push
fcoms
push
xchg
je,pn
in
fcmovbe
mov
outsb
fldl
push
jo
and
outsl
xchg
push
xchg
test
fwait
mov
cmp
dec
loopne
push
xchg
sbb
xchg
es
cmp
jae
add
fwait
lahf
mov
std
insb
push
into
or
fldl
mov
push
xor
inc
push
dec
cmpsl
test
mov
dec
xchg
les
xchg
mov
nopl
add
ds
lcall
or
dec
inc
int
xor
inc
jecxz
cmc
push
loop
shlb
or
push
popf
ficomps
gs
cmp
xchg
jle
fs
or
push
fidivrl
movsl
inc
insb
lcall
inc
jecxz
dec
cmp
inc
jns
mov
mov
int3
sub
imulb
leave
jge
out
in
fcmovnbe
mov
out
push
lods
std
int
test
jae
insb
jnp
push
xchg
mov
mov
pop
stos
out
fldt
daa
mov
repz
fidivl
push
rolb
fwait
push
xchg
mov
xchg
loop
dec
repz
push
fcoms
and
stos
outsb
shlb
cmp
imul
notb
jg
fwait
xor
mov
xchg
mov
leave
mov
push
mov
xchg
cmp
xchg
add
je
insb
and
mov
dec
aaa
mov
mov
mov
scas
mov
aas
aad
cmp
stos
ss
mov
out
cmp
push
or
sarl
lods
or
sbbl
mov
out
xchg
pop
and
inc
test
mov
dec
psubsw
sti
ficompl
add
sbb
mov
or
in
xor
mov
dec
out
in
into
adc
imul
call
out
shrl
dec
add
movsl
pop
fwait
push
lds
lahf
mov
test
mov
mov
push
lret
sub
stos
cmpsl
dec
aad
dec
mov
in
and
add
sbb
xchg
sbb
jecxz
pop
mov
dec
xor
dec
mov
lret
aas
popf
rcrl
das
out
mov
xchg
ja
mov
rcrl
jge
outsb
sbb
aad
push
ja
xchg
sbb
pop
ss
pusha
dec
lret
dec
xchg
imul
jmp
in
mov
imulb
jmp
int3
add
inc
or
mov
aad
mov
cmp
out
mov
xlat
push
test
lahf
lods
push
xchg
je
pop
pop
or
jno
aas
cwtl
cmc
add
jg
or
mov
jge
cmp
cmc
cmp
rolb
push
sub
push
sbbb
loope
push
aas
aaa
cmp
out
in
mov
or
cmp
xchg
mov
test
mov
push
inc
inc
ljmp
xchg
daa
push
add
mov
jecxz
push
test
xlat
mov
push
inc
cmpb
fcompl
jmp
ds
mov
xchg
jmp
xchg
popl
xor
jg
pop
jo
lret
jbe
cli
mov
jg
loope
mov
and
or
bound
push
push
dec
pop
ret
stos
inc
idivl
mov
out
in
shlb
rclb
call
fdiv
clc
mov
and
sbb
inc
fsubs
daa
mov
pop
imul
jnp
xlat
jle
and
pushf
stos
push
fldcw
sub
inc
cmpsl
push
adc
or
jno
rorb
xor
sbb
xchg
adc
je
adc
jmp
push
fstl
out
xchg
pop
faddl
xchg
fcom
pop
stc
mov
test
ficomps
inc
fwait
insl
and
sbb
dec
aas
xchg
jb
jb
xor
jnp
icebp
mov
sbb
dec
das
adc
inc
jl
popa
fildll
mov
sbb
sbb
add
js
lea
out
add
out
ja
repnz
data16
xorl
inc
shr
not
push
sub
or
pop
mov
lret
movsl
jns
cltd
popa
add
std
mov
mov
out
adc
and
clc
inc
cmpsb
inc
mov
sbb
sub
stos
adc
jns
stos
jl
add
xchg
lcall
jg
mov
mov
fwait
mov
add
push
fcomps
pushf
jno
sahf
xchg
push
cmp
aam
mov
and
sbb
fs
out
push
out
add
aaa
mov
push
push
nop
adcb
adc
add
xchg
insb
jbe
pop
mov
mov
mov
insl
hlt
insb
cmp
and
push
pop
mov
into
mov
daa
nop
loope
loop
mov
out
and
push
inc
dec
sub
rcrb
dec
mov
push
mov
xchg
ret
sub
insb
pop
out
aam
test
lods
pop
cli
out
mov
jle
cmp
xchg
dec
ljmp
push
sbb
pop
push
or
mov
jmp
mov
pop
enter
xor
lds
daa
mov
mov
jbe
cmp
je
subl
mov
je
xchg
fwait
pop
xchg
push
int
add
jl
jl
jg
js
stos
rcll
xchg
ljmp
sbb
rolb
xor
lock
mov
lds
inc
push
loopne
aad
or
sub
xor
sbb
bound
test
aam
and
pop
cmp
stc
dec
repnz
mov
and
mov
and
xor
jp
lods
sbb
push
xor
test
cld
and
push
add
adc
movsb
jmp
xchg
add
or
gs
lods
xchg
hlt
xchg
bsr
jp
clc
scas
scas
push
ja
subl
mov
sbb
in
sahf
xchg
push
outsb
pop
lea
mov
cmp
nop
and
jp
cmpsl
cmp
jbe
call
leave
inc
jge
sbb
jnp
divl
subl
pop
cmc
mov
pop
movsl
jge
out
lcall
lods
test
fwait
cmp
shlb
and
ja
adc
sbb
cltd
jno
cltd
std
xor
mov
decb
adc
or
jae
add
lods
sbb
inc
push
sbb
fnstcw
pop
rcr
or
mov
stos
mov
dec
movsl
test
jbe
mov
sub
jbe
mov
jbe
ljmp
pop
cmp
xor
jb
xor
jp
hlt
sbb
dec
xor
scas
test
faddp
or
sbb
icebp
pextrw
mov
mov
loop
jnp
scas
mov
mov
repnz
scas
xor
add
mov
nop
jge
jnp
jno
pop
dec
in
cltd
jnp
mov
xchg
inc
xchg
jmp
add
mov
fnstenv
je
mov
cmp
cmc
out
and
mov
sbb
shlb
shlb
jp
xor
flds
or
inc
add
stos
int
jg
mov
cltd
xor
adc
ss
cmp
sbb
int
add
add
enter
imul
push
jp
jge
sti
dec
sbbl
incb
mov
roll
cmc
mov
stos
xchg
mov
mov
aaa
jbe
cli
call
inc
jno
jae
loope
adc
repnz
add
dec
mov
pop
jp
mov
inc
lock
mov
mov
xchg
jne
mov
cmp
jp
or
mov
rorl
out
sahf
adc
mov
dec
js
out
loopne
or
insl
ficomps
scas
pop
push
int
mov
loopne
int
popf
add
stos
ret
mov
xor
push
icebp
cmc
sub
mov
pushf
inc
sbb
sbb
sbb
adc
add
jle
enter
in
mov
in
fwait
or
sub
sub
jmp
push
adc
inc
insb
add
inc
out
pop
dec
and
inc
popa
inc
mov
pop
mov
and
mov
shrb
subl
cmp
dec
dec
rorb
push
ljmp
mov
mov
ret
out
sub
cmpsb
and
and
jge
loopne
sub
mov
mov
pop
mov
jb
jne
push
xchg
jns
dec
js
jo
pop
nop
imul
dec
test
icebp
sub
push
popa
cmp
lahf
pop
in
sbb
hlt
dec
add
or
mov
dec
movsb
loop
imulb
sarb
inc
lcall
and
mov
into
pop
dec
or
cmpsl
rcl
shl
adc
lods
aam
add
aas
imul
and
mov
or
lock
push
sbb
ret
les
bound
dec
cmpsl
adc
push
pop
pushf
lods
mov
loop
outsl
mull
mov
adc
rorl
adc
dec
orb
cmp
cmp
popf
pop
mov
pusha
pop
push
pop
pop
inc
or
dec
push
scas
sub
shll
dec
xor
mov
stos
mov
jb
xchg
pop
loop
outsb
ljmp
aaa
int
and
mov
addr16
jbe
pop
lods
xchg
leave
jns
mov
lret
lds
stc
mov
cmp
xchg
mov
push
cld
inc
scas
jle
jmp
pop
mov
test
int3
aad
shr
fstpt
jle
mov
pop
and
out
leave
adc
fists
insl
loop
pop
rolb
pslld
orb
or
mov
pop
loop
leave
jbe
js
xor
pop
push
paddusw
lret
je
jnp
xchg
pop
out
dec
jmp
adc
loope
std
sub
add
rcll
xor
fmul
dec
enter
sbb
in
mov
cltd
out
nop
lcall
and
inc
inc
cmp
movsl
fwait
push
xor
es
rorl
call
xchg
ja
sbbb
fs
jae
mov
clc
in
cmp
dec
loopne
repz
and
lahf
repz
packssdw
jl
sbb
pop
jmp
cmpsl
addr16
cmp
jnp
js
pandn
xchg
jbe
sti
jge
shlb
popa
daa
or
push
pop
incb
push
in
les
stc
lds
flds
xor
push
and
push
out
mov
roll
mov
mov
lret
dec
loop
mov
fbld
mov
and
inc
pop
adc
sbb
mov
imulb
cmpsl
test
add
daa
xchg
xor
add
sub
imul
arpl
test
int3
mov
dec
jmp
enter
fnop
stos
lret
cmp
aaa
mov
fistpl
jge
push
lods
ficoms
inc
xor
adc
push
push
adc
or
and
int3
pop
sbb
sub
mov
or
daa
popf
jnp
arpl
add
das
jns
mov
ss
push
push
sub
js
or
pop
jb
mov
or
imul
jne
bound
pop
shrl
fisubs
lea
pop
cmp
movl
les
das
jmp
insb
jmp
cwtl
mov
gs
xchg
push
mov
insl
rcl
mov
adc
push
jmp
test
jo
sub
jl
sbb
loope
adc
jae
cmp
and
aad
sub
cmp
adc
mov
and
jbe
mov
ficomps
xlat
jmp
or
insl
filds
fs
roll
mov
sub
cmc
in
out
cmp
and
adc
xor
int
test
fwait
out
sub
mov
lods
test
add
xchg
inc
mull
mov
lret
nop
in
mov
pop
pop
shrl
mov
repz
out
lret
nop
mov
fwait
scas
pop
xor
mov
push
pop
jnp
dec
inc
shrb
inc
xchg
dec
mov
aaa
jb
aad
addr16
sbb
data16
add
sti
cmpsb
flds
xor
movsb
daa
movsb
loope
movsb
cmpsb
fistps
lods
pop
pushf
inc
test
lea
int3
xchg
insb
test
sub
mov
test
add
jo
addr16
clc
mov
cmp
scas
add
mov
pop
sub
stc
mov
hlt
add
repz
clc
hlt
push
xchg
mov
popf
inc
add
fwait
mov
call
fsubs
dec
xor
test
inc
stos
and
hlt
xchg
jne
dec
push
xor
cmp
cmpsl
xchg
in
sbb
push
xor
arpl
pop
xchg
in
push
scas
mov
mov
jge
xchg
aad
mov
mov
sbb
loopne
dec
dec
push
cmp
mov
add
pop
sbb
scas
fwait
xchg
outsb
jl
and
jecxz
push
sbbb
cmpsl
call
fucomi
sbb
lahf
add
inc
shlb
rorl
jmp
cmp
pop
lods
or
mov
int3
push
pop
mov
mov
jge
adc
fdivr
push
sub
jge
adc
pop
repz
out
cmp
xor
test
sbb
test
imull
lods
bnd
mov
lret
push
and
cltd
pop
and
pop
adc
in
hlt
mov
jbe
cmpsl
cmc
sub
cmpsb
pusha
push
shll
js
sbb
xor
push
rclb
addr16
pop
daa
jmp
jmp
iret
jo
or
xchg
jno
cmpps
and
js
xor
out
enter
scas
test
pxor
and
idivl
pop
lret
adc
pop
fs
xchg
cmp
enter
bound
decl
in
stos
sub
call
and
lea
jecxz
subb
dec
nop
imul
in
mov
sbb
ret
pop
mov
cli
lock
sub
mull
ljmp
shll
and
xor
insl
imul
inc
fsts
jl
and
and
sbbb
and
data16
inc
xor
sbb
fidivs
mov
mov
mov
cmp
cld
sub
or
dec
jne
inc
cld
aaa
lcall
or
pop
sahf
repz
aaa
jp
lds
cli
aam
jbe
dec
jg
mov
test
outsl
sub
mov
cmc
jl
jnp
mov
jno
andl
les
adcb
jns
je
addr16
lcall
sub
shl
test
mov
or
jo
out
mov
in
imul
xor
out
push
pop
mov
add
sbb
jo
hlt
push
inc
sti
push
dec
pop
dec
js
add
aas
push
jmp
adc
or
pop
adc
int
repz
pop
add
mov
jge
lods
jno
jmp
enter
mov
sbb
cmp
push
lods
jae
je
mov
sbb
dec
ss
jmp
inc
and
popa
xor
sbb
and
imul
lds
sbb
fwait
or
sbb
xlat
in
mov
das
cmp
out
gs
mov
xchg
pop
sbb
inc
mov
push
imul
daa
push
and
push
jle
dec
add
mov
rcll
xchg
rcr
sub
int3
gs
or
popf
test
cmp
into
xchg
jno
std
jae
mov
shrl
insl
gs
dec
inc
adc
sti
in
and
mov
and
lret
xchg
cmp
cld
xchg
jnp
loop
idivb
sub
add
orl
xchg
jmp
and
and
xlat
cmc
mov
or
subl
mov
dec
mov
loop
cmp
cmp
dec
jns
push
repnz
xor
scas
shrl
push
sbb
dec
mov
or
ljmp
imul
mov
adc
popa
stc
ljmp
inc
ret
or
sti
mov
and
cltd
mov
testl
and
movsb
xchg
movsb
popf
notl
imul
ficoms
aam
scas
pop
or
iret
mov
dec
add
int
cmc
sbb
stos
dec
xchg
shrl
fists
and
out
lock
or
sbb
sbb
xor
mov
jns
lea
or
iret
sbb
fsub
jbe
and
scas
fs
jb
rorl
jbe
repz
lcall
push
push
and
jae
ljmp
adc
fs
push
dec
inc
arpl
mov
jle
int
clc
sub
inc
aad
movaps
hlt
or
cmp
and
js
cmp
cs
xor
lods
test
sub
in
jl
fwait
xchg
scas
jns
mull
push
or
rcr
ret
mov
mov
mov
inc
ss
push
mov
xchg
lods
fcmovbe
adc
out
sahf
into
sub
in
xor
sti
xchg
push
mov
or
leave
jmp
add
bound
xor
fdivrs
out
dec
sahf
pop
imul
jg
mov
icebp
pushf
shlb
and
lea
sbb
mov
mov
inc
aas
sbb
cltd
jne
add
outsl
sbb
xor
hlt
lcall
sub
rcr
push
or
cmp
cmp
call
mov
mov
cmp
inc
mov
mov
aaa
or
push
xchg
xchg
mov
dec
cs
xor
movsb
ret
enter
mov
cvtpi2ps
into
lahf
mov
test
inc
iret
mov
in
cmpsb
fstps
in
insl
lock
xor
fiaddl
push
sub
mov
iret
jle
ja
xacquire
push
push
mov
cmpsl
lds
xor
mov
or
adc
hlt
stos
mov
or
jmp
mov
push
into
call
pop
insl
movsl
mov
lea
call
push
dec
inc
pop
jle
mov
orl
pop
or
clc
push
lret
inc
pop
cmp
icebp
xor
mov
out
aad
out
push
shl
testb
aaa
imul
mov
push
je
test
ret
out
int3
inc
mov
enter
das
xchg
cmpsb
aaa
jne
imulb
jg
orb
jle
mov
mov
xor
aam
xchg
shrb
jmp
rclb
cld
shl
push
xchg
dec
adc
xchg
sub
int
sub
add
popf
clc
jp
lret
fcoml
mov
loop
das
negb
adc
push
mov
push
push
pop
sbb
jmp
outsb
movsb
test
dec
outsb
js
rclb
inc
push
pop
arpl
jmp
test
test
inc
out
fs
cwtl
iret
xchg
in
movsb
xor
lret
fidivl
fwait
inc
push
in
cs
frstor
ret
mov
scas
repz
scas
f2xm1
std
or
lods
or
daa
adc
testb
ss
int3
dec
adc
dec
out
push
das
ss
das
arpl
in
mov
ret
mov
inc
xchg
jle
mov
inc
testb
sbbl
xchg
or
jle
stc
mov
insl
jb
inc
adc
addr16
pop
dec
cmp
pop
mov
sub
mov
cmp
dec
jg
cmp
jl
mov
adc
sahf
or
mov
lock
sbb
push
das
and
pop
dec
das
sbb
mov
lock
jecxz
and
push
jge
push
cmp
fnstcw
sbb
adc
and
add
mov
xor
sub
or
xchg
xor
jb
bound
xchg
mov
outsb
stos
lahf
shll
ret
mov
jne
add
xchg
cmp
xchg
and
push
cmovg
mov
add
repz
add
insb
jnp
aaa
je
dec
xlat
adc
sbb
bound
jle
push
addr16
pop
adc
dec
and
stc
test
inc
andb
xchg
push
xchg
stos
push
mov
dec
in
add
dec
jns
fisttpl
scas
and
cmp
dec
mov
sbbl
dec
outsb
add
movsl
aam
adc
or
fnstsw
sahf
pop
inc
daa
cmp
jo
ret
cwtl
adc
imull
add
in
mov
out
pop
addl
outsb
and
into
cmc
pop
rclb
mov
insl
movsb
lods
mov
fstps
fsubs
fidivrs
cmp
mov
out
mul
mov
push
xchg
jle
cmp
xorl
push
sarl
in
push
out
mov
sub
inc
mov
cmp
mov
std
dec
dec
and
sbb
inc
cli
bound
lret
shl
out
jne
mov
imul
mov
repnz
pop
loop
decb
xor
ret
add
call
xor
fisubl
lret
cmp
sub
sub
or
sub
mov
sub
xlat
sbb
push
pop
lea
pop
lcall
xor
jg
mov
je
ljmp
and
addr16
lahf
jecxz
dec
test
sbbl
mov
cmp
pusha
daa
fs
pop
push
xchg
pop
pop
xor
cmc
cmp
test
or
ds
mov
xor
cmp
lods
into
fldt
fadds
mov
or
outsw
sub
sbb
scas
loope
pop
lds
xchg
je
mov
push
in
mov
ds
inc
loope
cltd
pop
or
icebp
inc
xor
cmp
pop
gs
loop
mov
ja
xlat
int3
scas
shlb
mov
int
out
cmp
xor
mov
test
aaa
pop
fdivs
popa
rolb
push
cmp
dec
das
sub
int3
inc
xchg
adc
or
loope
loopne
push
leave
push
lret
fidivl
push
cmp
mov
lea
rclb
push
je
les
sahf
mov
xchg
stos
xor
jne
in
sbb
rcll
cmp
dec
test
add
test
fwait
stos
lock
cmc
cltd
pusha
xchg
movsl
cmp
out
repnz
dec
into
mov
add
in
sahf
into
test
cmpsb
lahf
call
js
popa
add
insb
adc
roll
ljmp
es
xor
inc
mov
pop
and
fsubs
mov
pop
dec
dec
xchg
daa
lret
sub
sbb
fcomi
adc
rcr
add
insl
sub
dec
imul
ss
pop
push
xacquire
xor
xchg
push
add
sub
push
jns
xchg
push
pop
inc
mov
fisubl
lretw
jno
mov
in
in
subl
in
mov
rcrl
mov
cmpsb
std
mov
dec
js
bound
setb
jns
test
das
sub
fisttpl
dec
ret
and
xorl
rclb
inc
loopne
sub
not
mov
inc
inc
jle
mov
mov
mov
lret
std
daa
mov
repz
divl
pop
adc
cmp
xchg
nop
sbb
add
push
xchg
nop
mov
jmp
addl
and
jge
leave
sbb
int
inc
add
gs
cwtl
cmp
cmpsl
xor
pop
and
add
loope
fsubrl
and
faddl
mov
dec
mov
jp
jns
ret
adc
orb
jmp
mov
into
arpl
int
mov
stc
mov
lahf
popf
bound
or
sub
insb
inc
dec
repz
xchg
lea
out
add
loop
jecxz
pop
jne
data16
push
push
xchg
mov
jg
push
pop
fldt
dec
push
stc
inc
mov
push
push
bound
lds
sbb
cltd
iret
push
rolb
stos
in
stos
cli
cli
add
or
pxor
cmc
test
in
jae
dec
push
xchg
das
pop
les
dec
lock
outsl
imul
icebp
bound
pop
addr16
sub
jnp
or
scas
cmp
sahf
or
loopne
xchg
iret
mov
gs
movsl
and
cmp
sub
gs
rol
adc
inc
mov
std
jl
inc
ret
andl
inc
dec
push
aaa
sbb
pop
shlb
jg
xlat
mov
adc
jae
fnsave
pop
mov
add
out
loop
scas
ficomps
sub
shrb
nop
mov
cmp
ds
mov
ret
scas
add
mov
imul
pusha
mov
lods
mov
inc
dec
add
inc
insb
mov
ret
pop
or
push
scas
cltd
mov
and
out
out
mov
jno
xchg
xchg
fdivrs
addr16
out
mov
pop
lahf
rol
lret
xchg
mov
xchg
mov
pop
fiadds
test
sub
mov
pusha
jb
pop
test
icebp
repnz
arpl
insb
pushf
clc
mov
push
aam
xchg
rcr
push
and
jmp
loopne
xlat
daa
jg
mov
aam
pop
xlat
xor
xor
mov
stos
push
xchg
mov
mov
cmp
cmp
aaa
and
popf
fidivs
push
loop
pop
shlb
cmpsb
dec
cli
hlt
popf
add
sbb
xor
fisttps
pop
clc
stos
inc
xor
mov
bound
dec
scas
test
int
add
andl
dec
loop
pmaddwd
pop
movsl
loope
pop
add
daa
jecxz
cwtl
lcall
pop
scas
sub
push
sub
mov
adc
xor
jbe
jnp
inc
mov
js
test
scas
push
mov
mov
xor
mov
jnp
mov
push
cltd
mov
notl
pop
incl
shrl
addl
pop
mov
lods
test
mov
adc
cmp
xor
dec
push
pop
push
repz
mov
into
cmpsl
mov
jge
or
sahf
jmp
push
ljmp
pop
pop
xchg
movsb
jge
xor
xor
inc
xor
loope
sahf
sbbb
xlat
mov
leave
aaa
jmp
out
into
lcall
ret
inc
xchg
in
enter
sub
icebp
int
mov
mov
mov
jne
lea
daa
or
jne
js
ret
mov
add
pop
bound
jmp
dec
sub
sbb
scas
cmp
lret
mov
push
push
sub
std
or
fdivs
mov
inc
push
enter
fcmovb
mov
pushf
sbb
stos
fdivl
call
roll
cmc
cmp
cli
sbb
inc
add
in
xor
pop
fwait
test
lcall
pop
fsubl
repz
pop
xor
cli
or
loopne
dec
jb
add
dec
pop
inc
sbb
sbb
mov
dec
sub
je
faddp
sub
sbb
cmpsb
repz
imul
loop
sub
fimuls
lea
inc
sub
xor
or
or
jbe
fstpl
fs
xchg
stc
pop
mov
repnz
pop
cmp
mov
les
lahf
scas
test
mov
das
or
xlat
pop
loop
mov
sub
loopne
clc
je
repnz
and
hlt
sub
repnz
push
mov
jnp
rcrl
inc
lds
jns
inc
add
pusha
out
movb
mov
dec
ja
les
xor
dec
push
jb
gs
rcrb
mov
sbb
cli
pushf
aad
in
push
test
and
stos
sbb
or
push
or
mov
jns
lock
push
xchg
cmp
loope
ret
cmc
inc
add
mov
mov
ja
int3
cmpl
adc
ficomps
pop
jbe
or
sub
enter
leave
pop
cmp
adc
sub
sub
or
inc
repz
icebp
pop
push
mov
inc
mov
mov
pop
xchg
cmp
jne
inc
leave
push
fsubr
mov
adc
xchg
pop
iret
shlb
jmp
jns
pop
dec
push
lcall
inc
cmp
mov
and
inc
push
imul
subl
movsl
fwait
xchg
in
inc
sbb
push
push
adc
xchg
xlat
mov
mov
and
addl
ja
jge
js
mul
in
push
jg
jae
cmpl
jns
or
or
xchg
ficompl
loope
push
sbbb
jge
loope
pusha
push
pop
adc
sbb
pop
fs
xor
in
mov
sbbb
xchg
cmc
insl
outsl
icebp
cmpsl
mov
push
mov
and
or
inc
movsb
xchg
das
and
fucomip
push
mov
loopne
mov
int
adc
roll
jmp
leave
lods
adc
cwtl
test
aad
out
cli
xchg
sarl
mov
or
dec
shl
pop
shl
sub
fs
adc
loopne
out
mov
xlat
cmp
stos
arpl
mov
imul
push
push
imul
in
mov
repnz
adc
and
dec
in
push
xchg
push
jge
xchg
jl
dec
out
pop
jle
sbb
lahf
adc
fiaddl
xor
js
mov
addb
sub
out
adc
xchg
push
sbb
sti
mov
sarl
sbb
jecxz
dec
dec
sbb
stc
jge
sbb
les
sbb
xchg
xor
mov
pop
adc
inc
inc
add
and
jae
mov
mov
paddsw
imul
and
lcall
loopne
pop
imul
pop
fstps
sub
add
stos
andl
jae
fwait
sti
mov
inc
call
aaa
or
imul
add
add
adc
jecxz
and
push
jl
cmp
sub
inc
popf
fimuls
stc
add
lds
mov
loopne
xchg
cmp
push
ss
xor
inc
jl
inc
push
sub
xor
and
vdivpd
and
inc
testb
mov
push
gs
mov
mov
subb
mov
mov
in
faddl
or
cmp
jle
mov
lret
dec
mov
cmp
add
mov
push
lcall
fwait
inc
or
mov
fs
sbb
push
das
add
push
cmovnp
scas
test
lods
push
sbb
outsb
push
xchg
jnp
inc
loop
push
sti
jecxz
shll
mov
hlt
xchg
mov
stos
popf
lret
push
gs
in
test
aad
aad
push
int
rorb
cmp
repz
sbb
sub
loopne
cld
xor
jecxz
xchg
ja
or
dec
adc
sub
inc
ret
lods
or
stc
fiaddl
and
add
lods
inc
cld
xchg
and
int
fidivl
xlat
mov
int
cmp
into
iret
scas
jo
sahf
addr16
out
adc
mov
mov
xlat
jo
in
mov
jb
push
aam
sub
sarl
enter
jecxz
adc
mov
cmp
push
mov
lods
pop
pop
fwait
lret
cmpsl
sbb
pop
pop
cmp
sbb
lock
or
push
shlb
lcall
fistps
fsubrp
jg
jnp
mov
jmp
push
mov
xchg
cmp
jnp
fnsave
pop
xor
scas
inc
push
xlat
nop
add
mov
cmpsb
and
scas
lret
andl
pop
flds
mov
mov
mov
jmp
sub
inc
dec
push
movsb
inc
mov
xor
popl
xchg
data16
or
sti
sahf
test
cmc
in
xor
sti
imul
or
in
in
dec
dec
sub
cmpsb
pop
cmp
cmpsl
mov
pop
ss
sbb
int3
cmpsb
pop
cmp
imul
xor
pop
cmp
inc
aad
mov
and
mov
les
sbb
jbe
aad
ficoms
jb
rorl
or
subl
push
shrb
insl
add
movsb
aad
imul
inc
fs
dec
sbb
inc
call
daa
push
lcall
loope
pop
xlat
mov
mov
pusha
adc
loop
cmp
mov
cmp
jg
mov
incl
cltd
repnz
stos
out
sub
les
aad
mov
mov
loopne
dec
lret
mov
scas
inc
idiv
pop
gs
jo
jb
adc
push
sub
xor
push
int
out
pushf
and
and
mov
addr16
pop
andl
xchg
dec
pop
scas
pop
outsb
daa
rcll
sub
pop
out
mov
rolb
cmp
mov
mov
mov
sti
lock
mull
sbb
add
lcall
dec
add
push
fisubrs
es
push
sarl
cmp
add
jns
outsl
push
jge
push
mov
push
out
push
les
pop
adc
cmp
stc
insb
mov
in
fmuls
clc
imul
in
scas
push
jge
and
push
mov
push
xor
fs
lcall
sub
cltd
loopne
sub
movsl
outsb
and
xlat
fistps
inc
xchg
lock
nop
cmc
mov
imul
and
mov
aam
test
loope
cltd
cmp
mov
xchg
jne
push
inc
xchg
pop
mov
and
pop
mov
pop
adc
xchg
sub
cmp
lea
addb
push
lods
sbb
add
lret
add
xchg
inc
das
adc
xchg
popf
rclb
iret
sbb
jae
lock
dec
or
cmpsb
mov
mov
jmp
xchg
mov
xor
xlat
jae
fldt
push
add
mov
mov
push
xor
and
add
arpl
cs
sub
sarl
ljmp
sar
mov
and
pextrw
adc
add
mov
adc
mov
adc
mov
adc
je
add
jmp
lods
sbb
rcr
insl
repnz
or
jg
push
or
cli
xlat
int3
or
in
bnd
or
or
hlt
out
out
idiv
mov
jnp
daa
rcrb
outsl
jbe
jle
insl
mov
cmc
mov
enter
outsb
adc
int3
je
push
and
repnz
movsb
pop
sub
fisttpll
inc
and
int3
cmc
jge
pop
pop
les
je
mov
and
scas
mov
xchg
movsl
imul
cmpsb
xchg
mov
jbe
add
insb
ret
scas
and
jo
lret
imul
pop
rcll
or
out
repnz
pop
pop
cmpsb
sub
mov
mov
and
das
clc
pop
jg
jecxz
jns
push
gs
mov
adc
pop
or
in
pop
scas
inc
ss
sbb
dec
and
incb
ret
mov
clc
xor
sub
test
and
sbb
repnz
pop
cmp
mov
dec
aam
shlb
adcb
push
cli
pop
pushf
pop
enter
xchg
int
je
in
inc
dec
xchg
test
popf
and
mov
shrb
jo
jbe
and
cmp
fs
outsb
cmpsl
mov
dec
pcmpgtw
add
lret
fisttpll
adc
xor
xchg
or
mov
lret
in
in
adc
clc
ljmp
dec
and
mov
xor
push
test
jle
popa
rcrb
pop
out
adc
stos
jbe
arpl
push
or
aad
sub
mov
pop
ja
aam
inc
fs
adc
mov
aaa
lcall
and
mov
and
jge
das
sub
lods
sbb
cli
rolb
arpl
mov
and
hlt
repnz
orl
adc
fucomp
inc
jmp
lret
loop
push
rorb
jne
mov
in
shlb
mov
push
test
rcl
or
sub
and
dec
fs
pop
jnp
shll
testl
test
mov
adc
mov
pusha
mov
out
rorb
add
jbe
js
ljmp
inc
sahf
enter
cmc
push
ljmp
enter
jno
pusha
or
add
push
addr16
cltd
lods
cmp
push
stc
pop
loope
sub
jae
mov
mov
push
dec
mov
cmpsl
adc
popf
testb
mov
push
push
push
shl
xlat
and
cltd
test
and
fiaddl
mov
mov
in
fldl
ss
add
daa
sbb
sar
sub
mov
shll
sub
in
fwait
into
or
in
or
lods
ret
inc
fimull
mov
lods
and
jmp
popf
or
add
inc
mov
cmp
aaa
mov
mov
inc
test
fcoms
sarb
dec
ds
pop
push
pop
cmp
enter
cwtl
subl
imul
dec
cltd
sub
les
daa
arpl
int3
xchg
mov
and
sub
dec
bound
dec
pop
repnz
call
or
gs
xchg
push
rcrb
push
mov
mov
pop
cmpsl
repz
mov
dec
movsl
push
idivb
and
cmp
mov
orl
in
loop
xor
push
lods
sub
push
out
add
lret
les
push
adcl
xlat
inc
xchg
xchg
pop
cmp
jmp
pop
jbe
mov
pop
cmp
clc
je
mov
dec
inc
xor
test
pushw
inc
inc
inc
push
mov
cmp
jecxz
fdivp
insl
sub
das
or
andb
cmpsl
mov
dec
xlat
jbe
mov
mov
sahf
jne
repnz
imul
add
lods
or
adc
rep
cmp
mov
cmp
mov
cmpb
pop
wbinvd
test
ret
xor
test
lahf
or
test
add
aam
adc
adc
jo
sbbb
leave
jno
rcl
pushf
ficoms
out
mov
fs
fldl
push
rcrl
dec
ljmp
xchg
mov
notb
dec
test
int3
ss
sbb
cli
pop
mov
push
dec
xchg
dec
movsb
mov
and
sbbb
jl
out
in
pushf
push
xor
clc
xchg
dec
xchg
and
cli
xchg
fnstcw
repz
movsb
xor
dec
das
scas
add
push
mov
sahf
adc
cmpsl
adc
fimuls
jmp
mov
jl
clc
adc
dec
call
sahf
lret
jb
mov
jnp
mov
xchg
mov
dec
lods
test
imul
cmpl
jnp
mov
xchg
lods
cltd
ret
add
outsb
and
stos
sbb
jmp
out
mov
push
shlb
or
dec
sub
xchg
test
jl
push
iret
dec
aaa
sbb
cs
sbb
push
cmp
xchg
aam
pop
mov
lea
cmp
sahf
fstp
insb
or
out
mov
dec
lds
rcl
std
mov
mov
inc
xchg
add
aad
cmp
idivl
in
jmp
popf
and
arpl
fstpt
jmp
lahf
dec
xor
mov
jns
pop
outsl
pop
dec
fistpll
sub
mov
jg
loop
cltd
mov
pop
push
shl
sbb
daa
adc
fbld
jo
or
sub
movsl
adc
nop
mov
iret
js
fistpl
jg
adc
and
pop
lret
xchg
es
stc
nop
push
idivb
mov
mov
xchg
mov
mov
mov
mov
lods
add
jl
dec
pop
pop
or
add
adc
mov
aaa
xchg
mov
ds
lret
pop
add
movsl
add
sub
cli
sub
xlat
mov
mov
and
adc
lds
mov
xor
sbb
ds
les
or
jno
add
inc
add
and
cs
or
sbb
js
ja
dec
or
mov
mov
jge
aas
xor
shll
in
jg
and
xor
push
pop
mov
adc
inc
lahf
push
jecxz
push
jmp
push
push
cld
pop
xchg
sub
push
xor
adc
jae
push
popl
daa
sahf
jecxz
jmp
xchg
inc
push
stc
int3
mov
mov
xlat
in
pop
pop
std
adc
ljmp
mov
or
or
pop
sub
xor
xchg
faddl
cwtl
cmc
or
pushw
out
or
inc
cmp
mov
xchg
in
mov
sbb
fyl2xp1
inc
sbb
fs
push
in
stc
gs
inc
inc
stos
push
or
jae
pop
pop
cmp
jb
dec
pop
xchg
xlat
insl
out
cmp
push
arpl
into
mov
cltd
add
ja
mov
mov
ds
movsl
push
incb
xchg
add
mov
mov
scas
pop
xchg
adc
movsl
cmpb
gs
xchg
add
pop
mov
jno
push
push
xor
data16
dec
cwtl
pop
test
inc
adc
cwtl
inc
inc
add
mov
dec
lret
sub
xchg
lret
addb
aaa
loop
out
pop
add
xchg
scas
cmc
packsswb
rcll
dec
movsb
pusha
decl
pop
jp
jb
je
mov
adc
xor
cwtl
dec
dec
pusha
sti
hlt
ret
sbb
pop
push
jmp
cmp
mov
lods
xor
fucomi
mov
cmp
ret
data16
rol
dec
in
ret
mov
in
pop
ret
mov
mov
shlb
cmp
in
and
stc
jbe
arpl
push
js
inc
cld
out
call
lock
cmc
mov
mov
pop
and
and
filds
dec
mov
add
mov
push
mov
sub
repnz
mov
aas
jnp
and
dec
xchg
inc
add
pop
minps
push
fwait
sub
cmp
cmpsl
jmp
push
and
xchg
dec
mov
mov
js
sbb
mov
mov
jle
mov
xchg
mov
lahf
cmc
rolb
imul
stos
and
jns
es
test
mov
clc
dec
push
sub
dec
dec
stc
sub
cmp
ss
repz
pop
rcrb
jp
lret
ljmp
xorl
xchg
mov
pop
mov
sbb
add
imulb
outsb
out
cmp
jle
rol
shrb
pusha
xor
mov
sub
or
jmp
mov
in
dec
pop
pusha
mov
pop
ret
sti
adc
insl
push
push
cld
mov
mov
mov
hlt
stc
pop
jge
mov
push
cmp
ds
push
mov
rcl
and
loop
xor
push
arpl
sub
mov
and
mov
jno
repz
inc
fxch
rol
adc
imul
addl
push
fisubrs
xor
orb
adc
mov
mov
jle
sbb
push
gs
imul
fcmovnb
adc
lea
push
push
movsl
dec
add
inc
movntq
out
out
cmp
je
rol
pop
or
test
adc
stos
filds
lock
mov
mov
jnp
je
popa
sbb
xchg
mov
xor
cmc
subb
xor
sahf
loopne
out
or
jmp
jne
xchg
out
and
push
add
inc
cmpsl
mov
jno
fwait
outsl
into
sub
repnz
xchg
fs
repz
lods
into
jle
roll
inc
xchg
jp
mov
push
adc
pop
mul
and
shl
mov
aam
jle
dec
jg
xchg
addps
popf
jne
add
jne
in
repnz
push
xor
arpl
shlb
jle
mov
cs
popa
imul
jge
xor
maxps
add
jl
mov
inc
arpl
pop
or
movsb
sub
aaa
std
adcb
notl
cmp
mov
rcll
es
or
xchg
cltd
imul
stos
in
adc
popa
mov
not
cmpsb
mov
aaa
cmc
push
test
clc
std
es
sar
out
xchg
sub
lret
mulb
xor
nopl
clc
in
cld
leave
popa
push
adc
add
and
cmp
push
out
jp
xlat
jbe
in
mov
leave
pop
inc
push
cmp
mov
xchg
mov
add
ss
sbb
lds
xor
data16
movsl
mov
mov
fsubrs
ds
loopne
pushf
mov
jecxz
aad
and
fldl
add
jmp
lret
movntps
mov
lret
add
jb
pushf
mov
mov
imul
outsb
xlat
out
adcl
insb
cmp
stos
enter
mov
add
in
mov
lret
std
ss
sbb
lods
fisubl
mov
xchg
lods
das
stos
mov
lahf
adc
xor
ljmp
insl
lods
out
sbb
into
shr
mov
xchg
and
movsl
lret
sbb
addr16
es
popf
pop
mov
xor
add
and
xor
pop
scas
add
mov
rol
in
js
lret
add
rorl
inc
shrl
add
mov
lock
mov
mov
sbb
xor
fwait
insl
mov
push
cld
xchg
nop
inc
mov
inc
sbb
imul
dec
test
jb
popa
mov
aam
push
aaa
mov
fmuls
inc
ret
mov
mov
and
lock
jae
sbb
cmpsl
sbb
jne
adc
mov
push
lret
adc
test
jg
adc
and
std
mov
lods
mov
lock
andb
lahf
es
shlb
mov
mov
and
or
sub
mov
inc
add
push
shl
add
dec
adcl
out
push
cmp
mov
popl
outsl
jno
mov
dec
xor
fwait
push
add
push
adc
xlat
cmp
jmp
mov
push
or
mov
cmp
adc
jbe
test
xor
mov
hlt
negl
push
mov
push
cmp
mov
mov
jp
add
in
and
je
xlat
in
lods
dec
lock
push
jno
dec
call
stos
cmp
fsubs
inc
push
loopne
cltd
stc
ss
cmp
pusha
and
sti
rcrb
xchg
push
and
jmp
inc
jg
test
shr
pop
test
add
int
fstpl
mov
adc
pop
cmpsl
ret
xchg
push
fimuls
jg
and
aad
int
loope
test
add
ja
out
and
add
push
and
cmp
and
out
add
cmp
pop
push
ret
and
and
daa
adc
rorb
ds
xchg
pop
and
adc
mov
mov
aas
clc
sub
add
xor
cs
pop
dec
outsl
jecxz
scas
arpl
gs
inc
movsl
outsb
xor
cld
cmp
push
bound
push
xchg
dec
jb
jle
shlb
out
xchg
jo
cmp
stos
mov
xchg
jnp
xchg
bound
movsl
fcmovnbe
jnp
pop
insl
insl
add
xor
cs
rcrb
and
add
in
pop
cmp
out
sahf
and
jle
dec
jns
imul
fstcw
push
shll
fdivp
mov
loopne
adc
comiss
adc
test
icebp
mov
in
mov
in
popf
pushf
lods
inc
jg
mov
in
inc
aam
in
int
jae
mov
lds
aaa
repz
mov
cltd
dec
rorl
sub
stos
fnstcw
psubsw
je
cmc
enter
stos
add
fbstp
int3
lock
add
in
inc
test
and
dec
or
mov
sbb
cli
mov
je
daa
pop
in
lds
int3
mov
mov
jg
jae
xchg
jns
jb
movsb
out
test
dec
andl
imul
int
or
ret
bnd
loopne
addr16
mov
jne
cs
lods
mov
pop
outsl
lahf
pop
shll
fidivrs
test
dec
lcall
dec
xor
adc
into
int
xchg
int
sbb
std
push
add
insb
cmpsl
lret
push
incl
testl
icebp
mov
fistl
mov
cwtl
push
cwtl
repz
ss
popa
inc
cmp
imul
sti
out
data16
outsl
adc
jge
lds
nopl
div
stos
enter
dec
cmp
sub
sub
add
cmp
inc
fnstenv
dec
pop
mov
mov
mov
stc
repnz
adc
movq
arpl
ljmp
mov
push
fidivl
mov
jg
jp
rcl
outsl
andb
scas
push
fnstcw
mov
frstor
pop
les
jne
xor
jns
mov
ja
sbb
jb
xchg
xor
jp
xor
shld
and
cli
dec
sub
ret
int
sar
push
dec
mov
cmp
add
xlat
mov
enter
inc
and
dec
mov
or
dec
inc
mov
adc
mov
sub
push
xlat
mov
ss
sub
pop
or
inc
daa
sbb
lods
fsts
js
in
and
rorl
lcall
mov
xchg
jmp
shlb
xchg
mov
sbb
out
in
mov
loope
in
hlt
les
adc
stc
out
mov
mov
aad
lods
fnstenv
sub
in
mov
xchg
jp
icebp
in
push
lret
push
cmp
mov
clc
xchg
mov
rorb
es
push
adc
ret
mov
push
shlb
in
sub
sub
xor
cmp
aaa
adc
addr16
jge
les
mov
and
xchg
enter
jno
inc
mov
int3
push
xchg
into
cmpsb
jl
inc
cmpsl
jo
mov
in
fs
push
daa
repz
hlt
pop
loopne
mov
in
cmp
sbb
and
ds
add
or
cli
jae
loopne,pt
mov
dec
pushf
inc
sti
int
push
dec
stos
inc
in
les
iret
xchg
add
ds
aas
cmp
and
sub
inc
call
xor
inc
mov
outsl
out
inc
sub
dec
in
inc
add
sarb
mov
popa
jns
mov
push
jbe
jmp
cmpsb
lret
dec
popf
sbb
incl
mov
movsb
sub
lods
mov
pusha
jno
es
and
movsl
cmpsb
sbb
xchg
leave
negb
jne
push
movsl
ja
fidivl
mov
jge
movsb
movb
jae
imul
inc
cmp
jns
int3
cmp
out
ds
lret
divb
mov
das
push
fimull
out
add
fldcw
xchg
mov
fmull
test
dec
mov
rclb
adc
pop
push
or
call
jle
ds
inc
push
or
leave
rolb
and
or
sub
sti
loope
ljmp
daa
in
xor
btcl
mov
mov
arpl
dec
mov
push
jb
js
xchg
call
xor
test
jnp
enter
in
push
mov
lods
jmp
movsl
and
out
insb
push
nop
cmp
int
or
sub
dec
int3
adc
popa
enter
lds
mov
inc
clc
dec
leave
xor
and
sbb
push
sbb
lds
adc
int
xor
and
in
out
push
xchg
in
test
in
pop
dec
call
mov
shrl
pop
divl
xchg
inc
gs
sbb
addr16
mov
scas
adc
test
push
push
inc
icebp
cs
clc
scas
jecxz
sub
aas
cld
cmp
xchg
add
imul
and
push
incl
add
push
xchg
pop
icebp
xor
push
xor
and
hlt
test
mov
sbb
fcom
in
add
and
inc
jo
push
push
sub
xchg
pop
mov
test
in
cmp
xor
lcall
xchg
imul
aaa
xor
bound
xor
sub
popf
sbb
pop
out
or
shrb
cs
push
clc
inc
lea
in
pop
mov
xor
xor
mov
push
sbb
insl
sbb
mov
mov
test
popf
scas
sahf
xchg
shlb
push
sbb
dec
outsl
bound
in
sub
pop
sub
cltd
popa
inc
xchg
hlt
inc
into
cmp
insb
inc
bound
cmp
div
adc
lahf
arpl
xor
aaa
std
incl
or
mov
adc
cld
sbb
mov
pop
fidivl
push
out
and
jle
aam
lock
and
repnz
enter
clc
rcrl
into
lret
pusha
aas
mov
jns
pop
push
or
ficoml
sub
sahf
and
sbb
stos
shrb
std
roll
and
and
jmp
jbe
lock
lahf
adc
mov
xchg
fisubs
js
hlt
jb
dec
shll
outsl
insb
mov
hlt
out
sub
jl
mov
loope
push
jbe
push
gs
jge
test
outsl
std
sub
jp
movsb
xor
push
adc
adc
adc
mov
jbe
je
push
mov
lds
mov
sub
test
mov
test
pushf
mov
lea
fwait
sarl
test
imull
push
addr16
push
lahf
jo
dec
dec
xor
jo
out
xorl
ja
push
aaa
addr16
faddl
rolb
mov
arpl
sub
pop
cmp
cmp
lds
xchg
repnz
pop
mov
dec
push
pop
dec
mov
lods
mov
pop
add
add
mov
faddl
dec
leave
and
mov
jno
pop
test
mov
sbb
pushf
fnstcw
mov
mov
lds
push
test
or
dec
mov
aaa
les
mov
mov
mov
shrl
stos
fbld
fidivs
inc
repnz
cmc
bound
cwtd
adc
mov
dec
pop
jge
xchg
jo
roll
loop
inc
je
lret
xchg
mov
jb
lods
adc
inc
adc
sbb
sub
out
xor
icebp
jl
clc
sub
jmp
push
inc
add
lea
or
repz
pop
mov
icebp
mov
movsl
sub
sbb
ret
inc
cmp
leave
ror
cmp
std
mov
bound
test
loop
jnp
loope
jno
pop
push
inc
mov
cmc
adc
push
sbb
adc
mov
mov
jbe
enter
or
or
push
imul
pop
ljmp
rorl
xchg
xchg
cmpsl
std
mov
push
xchg
sub
stc
cmc
test
xchg
pop
dec
mov
cmc
in
cs
in
jl
int
sarb
mov
sub
ret
xor
imul
ret
stos
or
jecxz
test
sbb
lods
out
cmp
mov
out
ret
iret
mov
jg
cld
pop
pop
nop
add
inc
pop
aad
pop
aaa
jge
mov
int3
xor
push
sub
adc
cmpsb
lahf
push
jne
rclb
stos
add
and
xor
data16
enter
mov
sub
cltd
xor
es
mov
imul
roll
adc
movsb
mov
cmp
sub
leave
cmc
orb
data16
std
adc
insl
xchg
and
pop
jae
push
adc
lcall
adc
leave
and
aam
cmp
aas
nop
dec
sub
push
lret
insl
sbb
push
subb
jp
or
lods
gs
and
adcl
mulb
in
jl
fld
es
subb
mov
xor
add
sub
xor
cmp
mov
pusha
cmp
pushf
movsb
iret
dec
jb
jg
stc
aas
push
mov
cwtl
jecxz
or
push
pop
mov
sub
rorl
into
cmp
lahf
push
out
rorl
push
out
popa
jl
int
inc
cmp
fisubrs
cmc
out
enter
xchg
push
jg
xchg
das
xor
lret
or
mov
out
lods
std
shl
mov
sbb
iret
inc
xchg
rcrb
stc
push
fucomp
push
xlat
mov
dec
xor
stc
sbb
jno
imul
push
add
xlat
enter
aam
js
jbe
pop
nop
cmp
lods
pop
sub
pusha
notb
mov
jge
sahf
nop
insl
and
or
jmp
cmp
inc
das
pop
mov
ret
je
cli
and
jo
es
test
push
xchg
adc
int
adcb
mov
arpl
xchg
add
pop
loopne
adc
xchg
jg
fcmovnu
or
lcall
sub
xchg
add
lret
pop
insb
xlat
cmpsl
fwait
scas
out
and
pusha
mov
pusha
sahf
cmpsb
mov
mov
and
push
std
adc
push
out
data16
pop
or
mov
xchg
loope
out
fs
scas
xchg
je
aam
dec
mov
cmpsb
pop
pop
push
ljmp
lea
add
addr16
je
or
or
push
pop
inc
mov
imul
pop
fs
xor
dec
inc
cmp
xor
dec
das
cmp
sub
push
adcl
sbb
sbb
jge
lcall
loopne
adc
cmpsl
xor
sahf
mov
mov
mov
dec
dec
mov
arpl
and
inc
mov
outsl
lahf
inc
insb
les
outsb
dec
rcr
inc
mov
scas
shlb
or
loop
or
cmp
xchg
push
xchg
out
mov
test
imul
bnd
and
sub
sbb
mov
lret
jae
arpl
sub
pop
sub
mov
lret
inc
pop
in
dec
scas
add
add
xor
cli
cmc
mov
sbb
and
push
sti
out
into
lods
mov
aad
dec
xchg
flds
lock
push
push
jb
add
nop
nop
insb
fcmovb
jge
xchg
xor
cmp
mov
push
cmp
das
aam
xchg
popf
push
and
adc
packsswb
mov
roll
movsl
and
out
mov
dec
mov
std
jne
hlt
jge
inc
hlt
repnz
divl
inc
mov
push
jbe
mov
shll
rol
pop
je
push
inc
xor
push
leave
or
mov
cltd
mov
sahf
mov
push
dec
dec
sub
sbb
xchg
sub
xor
and
icebp
jge
outsl
ror
mov
adc
xchg
outsl
out
lahf
pop
mov
gs
outsl
sub
mov
loopne
mov
dec
in
mov
xor
fistps
sti
sbb
aas
xor
sbb
ss
lret
shll
push
dec
cmp
sti
push
aam
push
adc
xchg
or
leave
pop
and
fwait
sahf
in
sub
adc
cmpl
push
lcall
mov
inc
mov
mov
outsb
jno
jl
xchg
sbb
cmp
pop
add
adcb
aas
dec
cmp
repz
mov
add
rorb
lret
pop
mov
test
les
sarb
scas
outsl
inc
rol
fs
outsb
imull
gs
adc
stos
test
fcoml
dec
and
xchg
or
xchg
mov
dec
jbe
psubb
loop
loop
call
rolb
add
sarl
fldenv
lock
mov
ss
jl
mov
int3
arpl
data16
push
mov
dec
daa
mov
cmp
mov
loopne
popa
daa
add
aam
push
dec
mov
stc
fldl2t
testl
mov
lret
sbb
cmc
xor
mov
mov
shrb
sub
enter
add
push
mov
mov
lahf
adc
lret
xor
dec
or
adc
outsb
in
shr
xor
xor
jne
sub
pop
call
data16
and
or
jl
loop
adc
cld
inc
push
lahf
testl
stc
cltd
das
cltd
aam
dec
std
pop
cmp
jg
cmp
mov
cmp
imul
fcmovnbe
fwait
xor
dec
pop
push
cmpsb
das
adc
adc
mov
dec
pop
jl
jae
mov
out
loop
mov
xchg
xlat
arpl
lods
pop
jo
jb
adc
shrb
and
jl
xchg
hlt
adc
not
sti
xchg
repnz
cmp
out
and
push
pop
mov
mov
cld
int3
bound
popa
lcall
movsl
sub
pop
inc
mov
cmc
cltd
sbb
out
push
mov
in
sbb
movsl
jns
hlt
xchg
iret
push
in
call
cs
pop
adc
imull
ds
faddl
inc
inc
in
xchg
gs
jne
sbb
or
pop
orl
aad
inc
fsts
dec
dec
jl
or
jnp
loopne
xchg
in
sbb
push
adcb
jo
jno
cmp
arpl
push
dec
and
fs
sbb
dec
pop
mov
adc
es
adc
test
mov
data16
and
das
aas
in
dec
mov
xor
cmc
jge
xchg
leave
enter
shr
testb
scas
push
arpl
push
xchg
xchg
fcmovb
dec
push
fcmovb
jmp
or
sub
mov
inc
iret
sub
cld
or
cld
fstps
add
insl
fs
out
xchg
cmp
inc
loop
jb
out
ret
sti
ljmp
data16
fmull
pop
pop
shlb
mov
test
dec
iret
cli
xchg
add
pop
sbb
je
sub
xor
ljmp
inc
push
sbb
inc
jbe
mov
loopne
xchg
cmpsl
xor
out
rcr
rolb
out
xchg
addb
dec
dec
lock
hlt
pop
ljmp
or
jmp
or
popa
pop
pop
cmc
push
movsb
lcall
imul
mov
inc
pop
imul
js
push
and
and
rcrb
aaa
xlat
cmpsl
das
pop
or
mov
ret
push
mov
add
mov
imulb
daa
rorb
xchg
popa
lds
jo
lret
leave
idivb
sbb
stos
shlb
xor
add
ja
jbe
inc
dec
icebp
stc
add
push
stos
shrl
xor
pop
mov
pop
lret
sarl
stos
jl
mov
or
pop
jp
mov
lods
dec
or
add
lods
sbb
xchg
and
leave
arpl
int3
dec
and
push
add
sub
inc
or
sbb
mov
sub
mov
idivb
nop
jg
xchg
or
xor
jg
insb
ucomiss
testb
fs
shrl
call
pop
mov
push
shll
xor
in
imul
enter
fisubl
mov
pop
mov
xor
stos
leave
daa
fwait
mov
mov
cmpsb
fwait
test
std
rol
movsb
test
fldl
fs
and
sbb
mov
lcall
cmp
arpl
and
in
dec
cmp
jae
ja
mov
mov
xchg
addl
dec
out
pop
js
repnz
pop
add
pushf
lcall
cwtl
cmp
adc
mov
mov
repnz
dec
rcrb
sbbl
inc
aaa
mov
and
push
dec
and
fcoml
jb
imul
jnp
dec
push
dec
jmp
mov
ja
ss
cmp
daa
add
cmpsb
jle
inc
popf
sbbl
mov
test
shlb
dec
outsb
repz
xchg
and
movsb
push
sub
mov
outsb
push
sub
jecxz
popf
arpl
rorb
pop
clc
ret
adc
sub
add
test
ja
add
jo
pop
cmp
repnz
adc
jns
jecxz
fldcw
in
and
add
cmp
jmp
sbb
loope
loop
sbb
icebp
out
mov
pop
cmp
shll
cmp
lea
int3
ret
ss
movsl
mov
push
mov
mov
mov
jns
daa
cmp
dec
mov
cli
sub
out
mov
orl
or
mov
test
cmp
cmp
or
push
mov
out
lods
pop
fdiv
scas
ljmp
and
ss
das
sbb
movsl
dec
gs
mov
mov
lret
ss
imul
jmp
mov
movsb
mov
mov
sbb
jmp
rorb
mov
mov
mov
mov
mov
jg
sarb
add
mov
jno
into
ficoml
out
jb
or
mov
add
jl
mov
xchg
add
pop
cmc
mov
dec
inc
jmp
jp
inc
cmp
cmp
sub
inc
leave
cmp
push
or
jnp
mov
sbb
sub
subl
test
sbbl
sub
shl
xchg
mov
out
orb
clc
stc
leave
fs
shll
push
out
leave
repnz
xor
loop
je
jno
hlt
mov
cwtl
stos
xchg
add
xchg
mov
imul
call
idivl
add
stos
adc
pop
stc
pop
add
sub
or
in
sub
int3
aam
sub
aas
mov
loopne
mull
or
mov
test
adcl
adc
dec
and
xchg
add
jle
lret
or
lods
sub
pushf
ljmp
popf
mov
idivl
jo
iret
fisubs
aaa
dec
cmc
xchg
inc
rclb
fcmovnbe
mov
into
or
pop
ss
js
pop
in
int
outsl
test
cmpsl
sbb
xchg
mov
xor
sub
shlb
or
xor
jno
call
fcmovbe
jmp
xor
mov
xchg
jnp
mov
dec
or
mov
repz
xchg
xor
scas
dec
pusha
daa
stos
inc
or
ja
inc
push
mov
pushf
xchg
das
negb
and
pop
xchg
lcall
mov
add
shrl
stos
add
or
lahf
mov
and
lret
lahf
mov
hlt
xchg
mov
cltd
out
arpl
push
lcall
adc
fisttpll
push
xor
add
in
mov
or
push
inc
sbb
popf
das
add
inc
sti
mov
leave
xor
bound
or
push
inc
out
mov
jl
mov
xor
enter
fsubrl
stos
pop
pop
sub
imul
rcl
jae
mov
mov
sub
sub
fs
cmp
add
mov
pop
frstor
or
jle
imul
pop
fldenv
dec
icebp
and
add
push
nop
in
lods
xor
dec
mov
jb
flds
imul
das
nop
sub
in
dec
int
ja
adc
or
and
lock
mov
dec
inc
jg
imul
mov
mov
mov
std
xchg
cwtl
mov
cmpsl
pushf
es
sti
and
in
mov
mov
push
xlat
lahf
adc
out
into
ret
push
leave
nop
cmc
mov
daa
outsl
add
in
lods
daa
pop
add
cmp
mov
jmp
jecxz
adc
outsl
fimull
repz
sub
mov
jge
push
cltd
mov
call
mov
mov
fwait
lcall
pop
fstl
dec
push
imul
aas
jl
in
lret
xor
push
inc
stos
subl
sub
adc
mov
pop
jno
dec
sbb
cmp
outsb
adcl
and
jb
jmp
adc
pop
inc
mov
inc
repz
inc
cmp
in
jmp
repz
lret
sub
jnp
cmpsb
inc
adc
inc
pusha
lret
push
rcl
xchg
daa
xchg
test
out
notb
test
leave
test
jle
dec
jge
sbb
mov
mov
loopne
add
adc
out
jmp
pusha
fldt
dec
arpl
add
xchg
stos
sub
lock
in
mov
loopne
aad
adc
dec
and
lea
add
loopne
les
xchg
aad
adc
cmpsb
jecxz
dec
sbb
dec
push
jg
mov
out
popf
inc
clc
jl
jo
sti
shll
or
dec
push
arpl
mov
adc
out
cli
jl
filds
mov
addr16
xlat
pop
mov
mov
shll
mov
sti
test
xchg
cmpsb
pushf
xor
mov
orb
aaa
repz
xchg
pushf
mov
cltd
pop
sub
les
xchg
fisubl
lods
push
inc
xor
cmpsb
jp
jmp
xchg
js
adc
test
je
lock
mov
xchg
adc
jge
cmp
pop
cmp
pop
cmpsb
fistpll
cmp
scas
mov
outsb
xor
leave
mov
popf
stos
or
cld
push
pop
and
jnp
inc
enter
movsb
mov
loop
lret
or
pop
insl
xchg
mov
sub
sbb
adc
sbb
cmp
inc
pop
lock
sahf
mov
sub
sbb
imul
addb
in
xor
lock
jl
and
sti
dec
lcall
mov
arpl
jge
lods
cmp
dec
dec
fcoms
jecxz
loop
lret
dec
inc
aaa
adc
movsb
xor
pop
push
sbb
ss
fdivs
aas
subb
movsb
je
mov
mov
mov
std
push
je
sti
sbb
mov
push
fwait
mov
xchg
mov
jns
aam
je
cmc
ljmp
lahf
lcall
aas
cmp
inc
jb
xchg
in
and
adc
sti
push
sbb
aad
ret
pop
push
out
icebp
or
fildl
xor
fmull
push
dec
sub
pop
iret
jmp
pop
mov
push
add
mov
pop
jnp
or
add
data16
out
adc
or
xlat
dec
xchg
sbb
jle,pt
arpl
negl
xor
pop
push
insb
mov
std
je
and
cld
sbb
gs
fsubrs
dec
and
pusha
xchg
cmp
rcrb
pop
andb
das
cmp
aad
outsl
int
mov
inc
xchg
mov
push
cmpsb
rorb
jo
ficomps
imul
cmpsb
push
mov
add
lods
mov
or
sub
mov
aam
imul
bound
mov
ficompl
inc
fdiv
and
xchg
test
mov
xor
jae
jb
cmp
imul
out
lret
in
test
popa
cmp
mov
stos
mov
cmp
inc
je
dec
sbb
sub
pop
neg
addl
pop
in
cld
jmp
imul
popa
xor
push
fwait
sub
mov
pop
adc
sbb
dec
mov
clc
lea
xor
add
xor
adc
pop
in
inc
negl
icebp
mov
dec
mov
xor
arpl
push
inc
xchg
push
dec
gs
and
andl
fistpll
pop
push
negb
ljmp
jns
mov
dec
es
mov
xor
mov
adc
movsl
jge
hlt
in
xchg
mov
lret
divb
outsl
mov
std
stos
sub
mov
fnstcw
int3
and
jmp
fisttps
jne
sbbb
pop
fcmovb
scas
xchg
mov
hlt
imul
sub
iret
ss
shlb
pusha
aam
xor
inc
lods
pop
add
fdivl
outsl
xchg
imul
sub
or
inc
js
xchg
repnz
inc
adc
outsl
push
adc
inc
xlat
dec
mulb
inc
xor
push
pusha
or
push
push
movsl
imul
out
dec
xchg
rolb
idiv
push
and
incl
in
sbb
fsubrl
lods
jge
or
fcompl
int
push
popa
push
mov
xor
in
lds
movsb
mov
pop
mov
xor
sbb
cld
jb
and
xchg
push
xchg
pop
rcrb
scas
sbb
cmp
xchg
pop
and
mov
repz
dec
mov
add
jbe
xor
cmp
pushf
cli
dec
test
push
jno
xlat
lds
outsl
jg
lock
mov
into
push
add
arpl
cmp
xor
sub
jno
aas
mov
sti
cmp
dec
dec
scas
dec
insb
push
mov
sbb
movsb
mov
and
lahf
adc
xor
aaa
cmp
add
aam
daa
sbb
or
pop
imulb
mov
das
sbb
sbbb
jge
adc
hlt
ret
lret
cmp
std
pop
or
mov
fadds
mov
addb
add
jmp
orb
or
inc
sub
loopne
adc
push
jns
cwtl
dec
push
test
das
icebp
or
mov
jge
repnz
jg
push
fsts
sti
in
stos
inc
insl
adc
enter
test
cmp
xchg
cmpsl
xchg
fwait
adcb
pop
stc
jecxz
jl
dec
inc
mov
lock
je
mov
xor
jne
dec
cmpl
push
cmc
pusha
clc
lods
sbb
mov
aam
leave
adc
inc
scas
pusha
loopne
aaa
out
loopne
jg
dec
xchg
mov
inc
cwtl
mov
movsl
pushf
aam
faddl
add
out
ljmp
and
outsl
xor
sahf
dec
push
fwait
jmp
leave
adc
jmp
insb
shlb
js
xor
cmpsl
mov
lahf
cwtl
sub
fdivp
push
or
sub
cld
dec
sbb
jo
inc
je
push
loope
push
stos
add
and
or
fsubl
mov
sbb
mov
popa
or
fmul
pushf
inc
insl
jmp
pop
lds
stc
or
pop
nop
lock
pop
add
mov
mov
fisubrs
pop
jae
xchg
sub
jmp
outsl
cmp
dec
insb
idivb
loop
pusha
dec
mov
jne
mov
jnp
mov
lods
push
and
mov
cmpsl
jmp
add
fstps
jmp
xchg
test
scas
mov
and
ja
int
xchg
sub
icebp
cmp
and
insl
adc
mov
and
sti
out
shrl
pop
cmp
sub
addl
sar
in
push
xor
mov
jmp
ror
scas
mov
insb
and
inc
mov
and
dec
pop
sub
aad
mov
dec
xor
adc
loope
add
mov
pop
scas
sub
mov
inc
sub
stos
push
dec
dec
mov
sbb
lahf
mov
cmp
test
test
sbb
in
mov
repnz
sbb
sbb
das
ja
sbb
ret
es
imul
in
out
and
cmp
pop
push
hlt
sti
adc
jmp
mov
mov
lds
call
les
js
xor
or
push
jno
inc
adc
mov
jp
pop
pop
insb
scas
iret
mov
addr16
xor
or
sub
mov
mov
je
fldcw
ja
lea
pusha
jle
or
adc
nop
popl
leave
mov
adc
mov
lret
lahf
stos
in
xor
shll
xchg
sub
xor
fistl
les
push
rcrl
adc
cmp
sub
or
dec
or
clc
ret
popa
push
mov
mov
outsb
push
push
jbe
insl
mov
fistpll
js
sbb
dec
jmp
mov
dec
dec
mov
call
nop
fsubl
lret
in
je
das
lock
and
scas
jno
std
or
jecxz
mov
pop
stc
cld
mov
fldenv
jae
sarl
jbe
repz
pusha
bound
test
cmp
nop
or
xor
add
enter
scas
adc
fistpl
sbb
add
enter
push
mov
andb
lret
imul
mov
xor
xor
mov
sbb
push
pop
adc
push
test
mov
push
and
xchg
cmp
adc
clc
inc
sbb
sbb
jge
and
sub
lahf
cs
imul
popa
cwtl
sets
mov
adc
lods
dec
test
fidivrs
jne
shrl
dec
addb
es
test
pop
xchg
in
shlb
int3
cmp
sbb
repz
xor
dec
pop
incb
subl
cmpsl
dec
jmp
int3
add
ret
and
inc
cmp
sub
cltd
lea
xchg
dec
jnp
pop
sbb
mov
xchg
add
je
das
cmp
stos
negb
inc
cmp
xor
push
cmpsl
inc
call
stos
cmp
inc
mov
movsb
out
and
movsl
arpl
inc
insl
mov
stc
aas
jno
xchg
inc
or
lret
sub
adc
arpl
insl
daa
shll
cmp
stos
xchg
xchg
mov
cmp
and
mov
addr16
pop
stos
jno
movsl
es
jle
lods
push
das
fsubrs
jmp
stos
inc
bound
test
sti
and
scas
jo
rcrb
mov
xchg
lea
xchg
dec
push
add
nop
mov
nop
nop
pop
jge
test
shrl
sahf
std
leave
dec
push
out
mov
aam
ret
in
cli
pop
mov
mov
je
mov
adc
dec
andl
dec
xchg
push
push
add
ja
jae
sub
lods
pop
les
sbb
jo
inc
out
adc
clc
scas
imul
sub
jge
out
adc
gs
inc
add
push
inc
outsl
cmc
and
pop
repnz
leave
sub
dec
nop
mov
gs
mov
inc
pop
push
ja
xor
aaa
sbb
data16
aas
and
mov
jnp
aam
outsb
lahf
sbb
loop
fisubl
mov
mov
adc
outsb
jns
adc
adc
lock
mov
sub
cmp
daa
stos
sbb
push
push
mov
cmc
icebp
call
ret
mov
aas
jmp
shll
mov
inc
pminub
imul
insb
in
push
mov
mov
loop
shr
xchg
test
xchg
and
aaa
hlt
imul
xchg
scas
imul
andb
mov
dec
dec
into
pop
lds
sbb
lretw
and
push
adc
push
stos
push
adc
icebp
imul
test
in
mov
dec
fdiv
loopne
dec
push
imul
loope
gs
dec
pop
pop
leave
lods
dec
push
jmp
xchg
es
orb
cmp
inc
jo
divb
add
addl
das
mov
shll
push
nop
push
push
stos
arpl
or
arpl
sbb
mov
andb
popf
into
push
mov
test
xchg
jnp
cmpsb
push
inc
push
testb
lods
incb
fisubrs
jb
jl
sti
jns
pop
ret
mov
push
ret
inc
in
inc
shl
pop
xor
push
ja
sbb
fucom
xchg
cmp
repz
roll
jl
movsl
dec
or
insb
and
mov
rcl
mov
test
inc
mov
cmp
aas
ja
sub
bound
inc
call
mov
cmpb
mov
push
jle
pusha
xchg
stc
and
lret
sti
jb
push
loope
mov
in
jg
mov
push
mov
nop
pop
fsubrp
into
in
mov
inc
pop
fstpl
dec
jbe
push
addr16
lret
jbe
dec
jge
ret
aas
jb,pt
pusha
jecxz
xor
and
mov
sub
popa
xchg
pop
or
jo
leave
xchg
test
imul
rcrb
int3
xor
in
inc
aaa
add
xchg
mov
loopne
loope
sahf
mov
cltd
dec
push
adc
and
push
enter
fisttps
push
mov
jecxz
xchg
dec
std
mov
fldt
leave
jle
cmp
leave
mov
mov
cmp
addl
mov
xchg
ret
clc
movsb
mov
push
sti
mov
xchg
xchg
xchg
cmpsb
pop
mov
and
mov
sbb
fldcw
pop
cmpb
std
icebp
pop
aad
xor
sbbl
out
mov
lret
pop
out
pop
movsl
xor
jns
in
lret
cmp
mov
sub
xor
adc
sub
xor
adc
pop
pop
or
dec
out
dec
sbb
sub
mov
imul
add
mov
loope
push
add
sub
jp
push
pop
add
fimull
mov
mov
ss
mov
cmpsl
and
push
ret
mov
scas
test
push
cmp
movsb
fstpl
lahf
call
enter
push
pop
inc
jo
lock
mov
sub
bound
push
mov
data16
pop
add
test
lock
pop
es
aad
out
cmp
jbe
adc
mov
dec
mov
or
cmpsl
xchg
cmpsl
arpl
das
pop
ret
inc
in
push
sbb
cmp
outsl
inc
ljmp
push
xor
push
fistpl
lock
fldcw
fsubs
jle
push
mov
sbb
mov
iret
mov
decb
lods
std
stos
pushf
rorl
or
movsl
jp
hlt
out
mov
fmull
add
fwait
imul
negl
mov
xor
rcr
into
dec
xor
sbb
loopne
inc
push
in
push
ja
mov
pop
movsb
add
dec
fistps
sub
popf
jo
jp
shlb
arpl
xchg
inc
aas
sbb
dec
dec
fdiv
scas
inc
ljmp
xor
das
dec
cld
jnp
iret
sbb
sub
dec
mov
shll
fildll
xor
sbb
sbb
sahf
jg
sub
sub
dec
daa
loopne
or
dec
push
dec
push
fistps
dec
das
sub
out
xlat
jnp
repnz
xor
sub
mov
fiaddl
mov
movsl
icebp
pop
jge
rcrl
loope
or
push
push
xchg
pop
xor
xchg
outsb
cs
cmp
inc
cmc
and
jmp
shlb
xor
negl
mov
sub
fdivl
andb
push
repnz
insl
adc
pop
movsb
push
cmpsl
stos
jnp
icebp
mov
xchg
test
mov
xabort
cltd
lahf
lahf
or
fnstsw
pop
jnp
cmp
dec
mov
std
je
in
int
divb
dec
movsl
sahf
jnp
lods
push
lret
pop
in
sub
movsl
pop
mov
popa
popf
jp
shl
xor
fistps
pop
adcb
hlt
xchg
pop
xor
lods
fsts
jl
inc
aam
sbb
test
jb
shlb
in
insl
mov
sub
jp,pt
cmp
clc
insb
sbb
frstor
ljmp
adc
pop
jle
jmp
in
pop
int3
jle
pop
addb
mov
mov
mov
iret
dec
jns
mov
aad
cmpsl
and
stos
es
cmp
addr16
mov
mov
xlat
je
cmpsl
gs
xchg
popa
pushw
leave
xchg
call
sbb
xchg
out
fwait
add
xchg
dec
dec
lock
bswap
es
scas
in
xor
jbe
push
inc
inc
sti
loop
push
dec
lret
lods
push
xchg
push
mov
test
out
mov
or
jnp
insl
jo
and
stos
out
adc
add
mov
xlat
aad
call
mov
and
inc
dec
sub
jle
xor
mov
xchg
xor
sti
sbb
subl
lods
adc
leave
push
inc
cmp
imul
rcrl
and
aam
mov
and
imul
or
inc
rorl
das
push
movsb
int3
xchg
xchg
rolb
shrl
bound
push
pop
sar
cwtl
rcrb
dec
lock
enter
popf
hlt
cmp
mov
sub
push
inc
icebp
add
cli
addl
bound
adcl
in
std
popa
push
fdivs
movsb
xor
mov
push
fidivs
inc
pop
lods
push
pop
stos
imul
mov
and
sub
mov
lods
es
into
cmpsl
out
aaa
leave
testb
inc
lret
call
xchg
negl
lods
loopne
divl
movb
pop
nop
jne
aaa
ror
nop
arpl
adc
push
gs
push
xor
out
xor
lret
outsb
push
mov
dec
and
adc
cmp
mov
sbbl
frstor
pop
dec
mov
and
mov
fimuls
or
mov
mov
mov
inc
jl
fwait
xchg
mov
hlt
and
repnz
dec
subb
jno
imul
pop
pusha
xchg
adc
inc
jns
in
imul
pop
popa
inc
inc
bound
cmpb
or
xchg
aad
jp
sti
xchg
mov
jge
dec
int3
push
mov
fistpl
cmp
in
sbb
inc
ret
rorb
stos
rorb
rcrb
iret
rcll
jo
adc
movsb
xor
ret
lods
loope
insl
xor
add
mov
push
push
push
ret
add
xor
rolb
sbb
or
jmp
cmpsb
mov
or
mov
push
fcmovu
scas
into
lcall
push
div
pop
fstpt
dec
mov
mov
ljmp
mov
pop
and
mov
in
and
adcl
or
sub
leave
stc
inc
adc
xchg
scas
movsb
loope
hlt
mov
ss
insl
dec
pop
xlat
xchg
insb
mov
mov
icebp
movsb
xor
push
movsb
test
jmp
push
mov
repz
pop
fbstp
orl
mov
push
mov
cmc
idivl
pop
mov
inc
out
jmp
xlat
add
dec
ds
rol
mov
fcos
lds
clc
and
inc
insb
int
adc
paddq
rclb
mov
xor
sbb
shll
xchg
sbb
cmp
sub
call
push
push
js
sbb
add
mov
mov
add
inc
xchg
xchg
sbb
jo
pop
adc
pop
ret
imul
push
sbb
icebp
fimuls
push
mov
mov
data16
cmpsb
pop
sub
fwait
add
subb
push
xchg
and
push
push
lret
mov
dec
sbb
outsl
outsl
mov
call
rorl
out
lahf
mov
push
orb
hlt
stos
out
and
jae
mov
aam
add
xchg
roll
loop
in
lahf
or
adc
das
stos
jge
mov
movsl
faddl
or
aad
xor
cmp
add
leave
loop
popa
mov
shr
mov
mov
adcl
frstor
hlt
sbb
sbbl
mov
push
add
or
addb
in
push
cmp
sbb
in
mov
jecxz
xchg
clc
and
xchg
bound
mov
clc
push
push
mov
push
je
mov
dec
push
jb
inc
mov
sbbb
push
pusha
adc
ss
sbb
or
inc
movntps
jns
cmpsl
sub
push
dec
movsb
scas
mov
or
mov
lds
xchg
xchg
out
mov
or
fldcw
pop
insb
xlat
adc
cmp
ss
rcrb
push
filds
xor
movsb
pop
inc
xchg
mov
jb
cmpsl
stc
pop
inc
addr16
or
stc
lods
cltd
idiv
sbb
jl
jmp
imul
lea
aaa
aad
scas
mov
mov
sub
mov
pop
clc
fs
mov
or
mov
and
mov
sub
push
gs
xor
pop
xchg
xlat
mov
repnz
insb
sub
and
mov
sbbb
sbb
adc
stos
scas
lcall
push
jp
pop
sub
mov
xorl
or
and
mov
lret
and
and
xchg
nop
mov
or
and
jae
mov
push
inc
push
aam
dec
enter
mov
mov
into
aaa
in
shlb
inc
int
das
dec
int
stos
lea
bound
inc
pop
dec
push
mov
in
lods
push
sbb
push
add
pop
or
fwait
push
leave
aas
push
inc
dec
arpl
and
mov
xchg
ljmpw
fstps
scas
cmp
push
fnstsw
repz
mov
dec
pop
jae
in
out
popa
inc
add
cmp
iret
fdivr
cmp
or
sbb
sahf
or
mov
pop
inc
iret
repz
imul
mov
inc
scas
jb
fdivl
pusha
pop
int3
enter
fisttpll
xor
nop
inc
pusha
xchg
ja
mov
xor
mov
mov
insl
xchg
jp
icebp
lahf
and
pop
dec
into
jp
sbb
iret
lcall
pop
inc
or
mov
inc
sbb
mov
mov
pusha
lret
jne
loopne
sbb
cmpsb
popa
test
imul
sub
mov
jo
dec
inc
call
mov
loopne
imul
ret
mov
cmp
call
divl
les
lods
adc
add
pop
sbb
sub
dec
adc
add
sub
push
lods
test
shlb
mov
cmp
fstpl
pop
jmp
es
popa
pop
add
lcall
mov
jmp
pop
mov
and
aad
cmp
mov
popa
mov
sbb
pop
inc
or
mov
adcb
je
popa
cltd
dec
enter
bts
cmp
xor
pop
mov
mov
std
addr16
popa
push
pop
lds
mov
mov
jo
arpl
mov
daa
lea
shlb
cmpl
add
mov
add
and
cli
aam
sub
jno
popa
jmp
pop
and
je
out
je
xor
xor
mov
inc
je
xor
jecxz
in
pmulhw
in
push
call
ja
inc
adc
gs
test
fst
pop
and
inc
mov
fisttpll
repnz
inc
add
cli
sub
xchg
mov
iret
push
push
in
sahf
test
mov
add
ss
or
out
pop
mov
pop
filds
inc
push
push
fmuls
shll
xor
jne
inc
mov
push
or
cli
add
jbe
cmp
mov
push
jno
dec
imul
mov
adc
push
dec
pop
ds
cmp
xor
mov
test
xchg
cli
adc
mov
adc
push
mov
popa
in
mov
lods
hlt
and
and
enter
cld
loope
fimull
lock
cmp
xchg
out
hlt
loop
jbe
mov
test
test
jmp
push
daa
rcr
sbb
xchg
xlat
rcll
call
cltd
popf
in
nop
mov
popf
loopne
sbb
xor
pop
fnstsw
out
pop
adc
push
xlat
outsl
js
xchg
lods
add
aam
push
pop
orl
mov
sti
add
push
adc
xor
imul
popa
adc
dec
xor
cli
pushl
push
aam
cmp
std
add
cmp
mov
mov
mov
aas
add
xor
add
cmp
clc
or
pop
mov
xor
fsubrs
sbb
or
jmp
fwait
adc
aad
out
dec
mov
cmpsb
lret
stos
or
stos
mov
or
repnz
jo
inc
iret
stos
data16
jge
pop
jo
push
nop
cmpxchg
jmp
dec
in
add
inc
shll
inc
cltd
add
fstpt
or
hlt
push
idivl
in
popa
adc
rcrl
fdivrl
xchg
xchg
mov
repnz
iret
adc
es
xchg
xor
mov
mov
add
jle
pop
push
div
outsb
jbe
pop
jge
pop
lret
lahf
jecxz
jae
xchg
add
popa
nop
add
dec
stos
out
push
cmova
sub
outsb
fdivrl
mov
pop
cmp
shll
jo
dec
sti
push
xchg
jb
stos
cltd
mov
rcl
fs
dec
add
dec
mov
sbb
pop
sbb
scas
sbb
adc
add
and
inc
sub
bound
xor
dec
ret
aaa
adc
mov
cwtl
in
add
js
xchg
jmp
jl
testl
jae
sti
fs
cld
stc
ret
xlat
movsl
mov
aad
mov
mov
cmp
addr16
data16
divl
xchg
iret
cld
jne
xor
add
pop
ret
lock
out
sub
testl
xor
test
fwait
cmp
add
mov
xor
fnsave
and
fsts
or
leave
outsb
mov
ret
mov
adc
xchg
lds
scas
jl
imul
stc
popf
cmp
xchg
inc
daa
push
or
jno
push
test
das
pop
adc
xchg
jecxz
xor
sub
test
jg
jmp
mov
cmpsl
mov
negb
sbb
repnz
xchg
ficompl
jecxz
ret
mov
movsb
push
scas
mov
jl
out
es
lahf
scas
clc
jnp
std
in
ror
mov
sbb
jmp
inc
push
fnstsw
dec
lods
lea
jae
jae
jecxz
dec
mov
and
fs
cmc
aam
cmp
xor
addr16
fwait
cwtl
negl
movsb
inc
mov
mov
test
mov
add
insb
or
adc
lahf
and
pop
sarb
xlat
enter
jecxz
push
sbb
notb
fwait
cmp
inc
sub
sysret
xchg
rcrl
mov
loopne
mov
repz
movsb
sbb
das
aad
gs
repz
inc
jp
ret
adc
sub
push
lds
mov
dec
pop
testl
inc
out
sbb
faddl
fucom
outsl
mov
js
mov
inc
std
inc
mov
add
xchg
jl
arpl
xchg
lret
nopl
or
ja
cmc
test
xor
sarb
sub
ret
shlb
adc
loop
dec
push
fadds
jae
aaa
fsubs
in
leave
or
adc
or
mov
ret
sbb
cmpsb
sbb
cmp
xchg
push
lret
icebp
fldcw
cltd
fbld
addr16
cmc
dec
es
movb
ficoms
call
inc
and
xchg
repnz
movsb
cld
imul
dec
pop
xor
fnstsw
jge
into
mov
sbb
xchg
dec
ljmp
inc
fsubl
insl
jl
std
dec
cmp
adc
mov
test
mov
les
lods
cwtl
iret
outsl
adc
dec
ss
test
pop
xchg
into
std
push
push
xor
andb
xchg
mov
fsubr
pop
sub
sar
lea
lret
mov
rorl
popa
cmp
mov
mov
int3
mov
jp
jae
bound
aad
mov
popf
scas
mov
adc
pop
idiv
jb
mov
pop
or
sbb
rol
adc
fprem
xchg
imul
hlt
jns
mov
inc
into
cmp
imul
fiadds
pusha
call
cmc
test
pushf
mov
dec
fidivrl
or
pop
cmc
shrl
sbb
and
jae
sub
fwait
pop
stc
mov
mov
mov
mov
test
fldt
adc
subl
xor
in
mov
lods
xchg
inc
sbb
lahf
add
in
mov
pop
nop
scas
and
enter
test
jnp
or
push
addb
sbb
sbb
pop
mov
inc
test
fwait
push
inc
call
outsb
xor
push
xchg
add
imul
mov
inc
mov
lods
pop
cmp
addr16
xlat
in
popaw
push
inc
adc
pop
or
iret
push
mov
xor
icebp
mov
mov
js
lahf
clc
nop
scas
mov
and
pop
and
push
mov
pop
test
inc
adc
dec
out
fs
mov
lcall
sbb
dec
jmp
push
loop
ljmp
xor
xchg
fs
out
cmp
and
xchg
cltd
or
push
xchg
call
inc
negb
dec
push
xlat
push
lds
lock
lcall
into
out
fisubl
sbb
xlat
cmpb
jl
cli
adc
inc
nop
in
or
xchg
stos
jo
push
cmc
lcall
repnz
test
test
cltd
pop
sbb
cmp
adc
lods
pusha
xchg
cmpsb
mov
pop
jns
and
lods
add
fwait
lods
mov
hlt
loopne
jecxz
jmp
imul
push
xchg
loopne
ror
jle
jmp
mov
stos
sbb
pop
pop
in
ret
jnp
ja
ds
xor
sub
mov
fwait
movsb
loopne
inc
inc
loopne
sub
sbb
pusha
cmp
cmc
lods
outsb
cmp
rcl
ficoml
xor
icebp
je
test
out
dec
jl
sahf
lea
sub
adc
mov
or
pop
pop
sbb
cmp
cmp
clc
data16
sub
mov
inc
xlat
dec
pop
fldenv
dec
int
mov
lahf
sbb
mov
sub
mov
out
shr
mov
sub
sbb
clc
lods
inc
push
lock
sub
int
and
cmp
xor
jns
mov
or
push
add
or
fwait
divl
aas
and
aam
ds
lret
jbe
mov
jl,pt
dec
mov
jl
fcoml
sbb
roll
cld
lret
cmp
out
iret
fimull
cmp
les
add
movsl
dec
hlt
mov
push
insl
testl
and
stos
adc
pop
push
cli
divb
orb
loopne
test
push
movsb
xchg
mov
sub
jns
mov
addl
dec
ret
push
dec
push
adc
out
dec
clc
in
dec
xor
es
mov
lret
mov
js
sbb
cmp
push
mov
xchg
stos
xchg
lahf
xchg
and
push
mov
inc
fcomp
rorb
jmp
dec
push
jbe
in
cld
std
das
cmp
push
out
push
insl
inc
add
cmp
in
cmp
es
ss
pop
mov
out
add
xchg
mov
pusha
push
push
leave
sti
or
sbb
lahf
repz
mov
or
pop
cmpb
mov
sbb
std
aam
repz
sub
inc
xchg
push
mov
jp
mov
inc
fisubs
adc
add
nop
cmpb
loopne
jg
push
es
mov
adc
cmpsl
mov
stc
ds
sub
lods
lret
bound
fdivrl
and
in
iret
pop
pop
push
lods
jp
iret
push
and
test
mov
push
in
imul
push
or
and
dec
inc
imul
addb
ds
sbb
scas
fmull
cmp
jb
das
loop
jge
imul
xchg
jbe
mov
jns
das
gs
push
into
in
or
lret
cwtl
mov
jnp
pushf
mov
and
jg
jo
fdivl
jne
pop
scas
dec
cmpb
and
xchg
lret
test
pop
sbb
push
and
aad
jp
xor
xchg
xor
js
xchg
sub
xchg
adc
xchg
mov
testl
mov
mov
insl
inc
or
push
rcrl
mov
mov
repnz
movsl
xchg
je
mov
mov
gs
adc
fidivrs
popf
sbb
popa
popa
pop
mov
cmp
enter
loop
int3
cmp
mov
andl
inc
sub
sbb
inc
fmuls
jl
adc
fadds
inc
xchg
or
add
jb
enter
xor
add
and
shll
clc
mov
gs
mov
xor
jmp
leave
sub
cmp
lock
sbb
pop
xor
adc
flds
push
es
push
outsl
mov
push
or
sub
shll
aad
xor
mov
mov
cmpsb
push
mov
cli
jbe
int
jle
imul
js
xor
aaa
dec
sbb
mov
out
push
mov
arpl
cwtl
lahf
adc
sbbl
ljmp
adc
mov
mov
aad
push
pusha
mov
adc
and
sub
jae
je
mov
fisubs
sbb
adc
or
mov
cmp
add
icebp
xor
push
sarb
scas
dec
inc
mov
and
icebp
mov
in
dec
and
pop
mov
dec
lods
mov
or
cmpl
std
or
call
out
in
sbb
pop
mov
subb
xchg
xchg
scas
movsl
fstps
loope
fnstcw
into
and
lock
js
add
fucomip
lods
in
mov
or
adc
movsl
das
sbb
adc
sbb
scas
mov
dec
repz
jmp
xchg
cmpsl
lret
fistpl
aam
fcoms
push
lahf
dec
enter
pop
inc
lods
inc
in
cmp
fnsave
jmp
fcoms
sarl
mov
pusha
inc
icebp
and
push
push
lock
xchg
inc
repnz
sti
jno
dec
ds
ljmp
shll
xchg
push
sub
push
xor
leave
mov
cmc
cmp
outsl
push
sbb
jns
loope
xchg
out
lea
fdivl
repnz
mov
sub
jmp
pop
mov
iret
and
mov
add
mov
popf
mov
test
icebp
inc
push
insl
and
stc
ss
js,pn
adc
mov
push
int3
sub
andb
bnd
add
lock
or
xchg
gs
and
cmpsb
pop
add
push
add
lods
movsl
and
movsl
vmwrite
inc
cmp
jbe
fists
stos
out
mov
mov
ret
mov
out
jo
mov
decl
sub
cli
push
outsb
mov
sub
sub
pop
jg
in
movsl
jne
ja
mov
sub
mov
add
jbe
dec
pusha
mov
daa
mov
cmp
fnstcw
mul
bound
or
mov
gs
and
outsb
xchg
movsl
sub
inc
xchg
negl
out
add
push
push
es
pop
dec
sar
andb
sahf
mov
pop
es
xor
or
in
sti
jbe
sub
adc
push
inc
or
iret
mov
push
mov
lods
clc
int
add
dec
xor
adc
jns
jnp
cmpsb
mov
mov
mov
data16
insb
out
pop
rcll
jl
pop
or
jl
adc
or
mov
mov
sti
mov
std
out
jbe
jg
add
jmp
lret
repz
pop
in
cltd
push
and
inc
xor
lahf
cmp
loop
xchg
ljmp
addr16
lock
adc
xchg
add
sub
adc
sub
and
loop
xor
push
icebp
and
cwtl
pop
lret
fldl
outsl
fstl
or
shll
add
adc
cmc
dec
dec
xor
inc
pusha
dec
mov
inc
stos
subl
or
insl
cltd
inc
jb
xor
fisubl
pop
sahf
lds
sub
stos
movsl
fdivr
jno
xchg
lahf
cmp
pop
mov
mov
out
xchg
mov
and
imul
push
bnd
pop
pop
out
adc
fildll
repz
or
hlt
xor
jnp
hlt
fcoms
sbb
pop
ja
cmpsl
repz
sub
mov
lcall
faddp
aad
mov
mov
js
xor
dec
sbb
add
aas
fcomps
pop
rcl
sub
xchg
stos
fcoml
push
arpl
jl
arpl
sub
mov
and
push
pop
outsb
sbb
iret
cmp
ljmp
and
adc
and
rcrl
sub
ds
fwait
pop
xlat
mov
pop
adc
xchg
adc
into
lret
dec
hlt
cmp
cltd
jns
outsb
cli
pop
stos
adc
push
pop
jo
dec
pop
lea
ds
lret
dec
and
xchg
pop
push
mov
andl
out
add
out
cvtpi2ps
enter
or
push
shll
adc
out
push
jg
lock
jg
lret
push
aam
ja
in
int
inc
sarb
xchg
push
push
push
inc
adc
fistpl
cwtl
mov
adc
mov
int
mov
inc
sbb
popa
aaa
fs
or
xor
and
mov
pushf
sbb
rcrb
loope
xor
cwtl
aam
mov
rcrb
mov
mov
adc
jle
popf
scas
rcrl
mov
jo
dec
lea
mov
stos
xlat
dec
mov
dec
in
cmp
cmpsb
popl
mov
leave
inc
ss
jae
test
test
pusha
std
cmpsl
dec
push
fdivrs
adc
and
insb
cmp
add
jge
movsb
movsb
es
cmp
sbb
sbb
aaa
jno
add
and
mov
mov
neg
decl
loopne
xchg
out
push
mov
mov
popf
je
add
loopne
sbb
das
mov
test
repnz
outsb
adcl
js
xchg
loop
addb
imul
xor
cmp
out
lds
mov
mov
dec
rcrl
es
mov
cmc
mov
xor
hlt
push
pop
pop
cld
or
push
dec
and
scas
clc
and
dec
cmc
pop
jno
push
inc
loop
outsb
and
add
out
mov
popf
add
jmp
outsb
aas
and
xchg
lcall
mov
mov
ljmp
pop
or
sarb
hlt
mov
dec
fsubrp
push
mov
out
push
inc
outsl
sbb
mov
addl
scas
cltd
pop
ret
es
das
dec
fbld
leave
sbb
aad
scas
sub
out
ret
sub
mov
mov
and
jnp
jne
xlat
stos
scas
andl
lods
test
ret
stos
mov
push
dec
add
and
lods
push
gs
mov
pop
push
insl
cmp
add
aaa
std
je
xchg
scas
push
shll
inc
dec
and
scas
jne
fildll
cmp
es
xchg
frstor
rorb
je
cwtl
sub
mov
or
mov
popf
pop
jg
cli
shlb
cltd
mov
ret
or
clc
stc
mov
leave
mov
mov
pop
mov
add
inc
negl
repnz
and
outsl
mov
adc
pop
in
cmp
loop
out
xchg
lods
inc
leave
cs
outsb
int
sarl
out
push
xchg
test
ljmp
mov
jle
pop
fsubrs
fadds
pop
push
int3
mov
cmp
adc
push
lcall
and
dec
test
push
lods
jne
cwtl
gs
mov
mov
mov
cld
cwtl
xchg
mov
mov
push
and
sarb
into
pop
cmc
js
inc
pop
fildl
fiadds
arpl
mov
mov
inc
sub
push
sub
or
lock
jge
aad
test
xchg
addb
addb
ja
fcompl
push
in
mov
loop
mov
xor
and
xchg
call
leave
jae
sub
bound
fcmovb
add
arpl
push
jno
xchg
test
xchg
out
and
jae
push
ja
pusha
mov
arpl
mov
or
or
mov
leave
mov
hlt
pushf
nop
add
jle
mov
sub
cmp
and
pop
push
mov
ja
cmpsl
outsl
jns
in
jns
cmp
out
jl
adc
push
adc
nop
pushf
sub
les
leave
mov
add
sub
push
jns
test
clc
shll
aaa
mov
test
inc
sub
cmp
roll
lods
mov
shl
sub
jo
and
int
jp
in
addr16
addb
jno
out
test
lds
popa
lret
or
cmc
and
inc
rclb
pop
adc
in
in
xchg
mov
cmp
cld
repz
push
roll
or
nop
dec
jl
adc
out
les
adc
mov
sarb
add
xchg
push
push
pop
lcall
clc
jg
cli
fbld
push
mov
insl
popa
sub
xor
leave
nop
lret
stc
fldl
adc
ret
ret
pop
gs
push
mov
and
ds
aad
sub
sub
push
in
sbb
mov
sahf
scas
xor
inc
in
movsb
add
ret
orl
and
scas
int
mov
and
call
daa
popa
pop
lret
fcmovne
jnp
mov
sub
mov
sbb
push
fimull
addb
jb
enter
inc
int
dec
scas
ds
xor
sub
movsb
adc
pop
idivl
and
cli
dec
and
xlat
dec
in
pop
lock
cmc
push
daa
push
and
push
out
xor
jmp
lahf
sarl
mov
mov
mov
sub
mov
jg
mov
shlb
xchg
rolb
xchg
call
sub
test
push
xchg
jns
sbb
cmc
mov
stos
aam
inc
in
lretw
mov
andb
jno
cmp
xor
cltd
repnz
push
add
outsb
mov
push
scas
xchg
xor
or
int
push
gs
scas
fs
jo
divl
push
add
fxch
jb
bound
cld
int3
in
push
in
je
xlat
lret
imul
adc
push
pop
cwtl
jns
cmpsl
cmp
frstor
rcrb
sti
sub
or
sbbl
movq
or
pushl
stc
xorb
and
outsl
cwtl
popa
notl
icebp
popf
out
data16
and
fmull
mov
adc
pop
sub
mov
mov
pushf
jae
cmp
jae
push
mov
mov
insb
fsubs
fisubrl
dec
les
stos
outsb
inc
jl
testl
mov
inc
inc
repz
sbb
add
pop
testl
xchg
cmp
scas
sub
lods
imul
testb
cld
shl
js
in
shr
mov
clc
gs
cmp
inc
mov
call
in
inc
aad
stc
xchg
cmovg
sbb
mov
mov
lock
mov
mov
testl
jno
and
ret
fst
arpl
xlat
rorb
xor
cld
ret
mov
popa
dec
dec
in
sub
push
and
xor
inc
xchg
hlt
jg
xchg
inc
out
dec
sub
imul
and
fildl
sub
pop
xchg
dec
arpl
dec
jp
in
fxch
filds
fsts
and
pause
adc
pusha
shrl
inc
xor
sahf
popa
add
dec
jne
mov
jne
pushf
or
imul
lods
push
sbb
stc
jge,pt
mov
mov
pop
sarb
push
xor
push
stc
mov
jae
inc
cld
dec
sub
test
mov
jl
inc
loopne
and
mov
dec
jo
cmp
xchg
jae
push
enter
rcrl
out
in
dec
push
cmp
and
stos
aam
out
mov
movsl
ds
lret
xchg
cmp
lret
int
sar
mov
mov
testl
push
imul
incl
sub
sub
xchg
scas
sub
fiaddl
lods
mov
sub
sub
sbb
stos
ljmp
jle
dec
and
mov
dec
sbb
jae
add
mov
fwait
jmp
icebp
sarb
mov
out
inc
fstpt
mov
aas
mov
push
cwtl
sahf
fnstsw
aaa
xchg
mov
and
inc
inc
pop
mov
subl
enter
data16
xor
mov
inc
mov
dec
pusha
sub
fidivs
mov
cmp
lahf
cli
fs
push
mov
scas
movsl
inc
xlat
mov
mov
cmpsl
sahf
outsl
stos
sub
fbld
sub
fnstenv
jne
sti
in
jmp
mov
sub
dec
xor
adc
clc
xchg
aam
lahf
movsb
fidivs
push
fstl
and
into
jno
pop
add
dec
xor
ret
sbb
pop
leave
inc
hlt
int3
xlat
pop
cmpsl
gs
jns
push
shrb
adc
imul
jecxz
fistpl
adc
cli
pop
addr16
jbe
sahf
lcall
mov
aas
pop
xchg
or
shll
inc
loop
movsb
cmpb
and
xor
push
cmp
push
mov
in
jmp
ret
lods
push
fmull
jl
sahf
test
rdpmc
lret
mov
call
cmp
push
adc
xchg
pop
das
jns
jb
pop
and
mov
sbb
stc
lahf
push
jns
mov
movsb
aas
ljmp
mov
lods
pop
addr16
pop
mov
ds
jae
inc
std
call
or
add
mov
xor
std
mov
mov
jne
sub
stc
cmpsb
mov
daa
pop
jnp
or
arpl
addr16
rorb
xor
push
xchg
push
adc
cli
jle
cmp
push
cmpsb
or
das
imull
sub
aad
pop
outsb
or
or
xor
or
sbb
inc
pop
loop
xlat
xor
or
js
push
inc
fbstp
mov
mov
adc
xchg
lods
icebp
data16
bound
fcoml
fwait
jne
cmp
fldt
mov
mov
mov
push
push
arpl
ljmp
lds
and
mov
stos
and
clc
call
lahf
les
popa
insb
neg
inc
fisubs
das
cmpsb
pop
jo
dec
inc
or
decl
sarb
inc
dec
shll
sar
lahf
in
inc
push
pop
jno
lock
enter
test
xchg
jae
aad
jg
enter
sahf
mov
int
inc
xchg
out
inc
testl
adc
int3
js
jle
push
sbb
test
or
scas
punpckhdq
lahf
lods
or
push
bound
jecxz
xor
xor
sub
ja
cli
test
cmp
pop
mov
fwait
insl
mov
pop
adc
pop
mov
cmp
dec
or
daa
cmp
jo
push
pop
movsl
push
sysexit
push
out
aaa
jae
sbb
xchg
cld
pop
mov
fnstsw
sbb
int3
pop
repz
int
xor
lock
xchg
arpl
jns
inc
loopne
jmp
cmp
in
ss
insb
jecxz
in
test
xor
pop
loopne
fmuls
out
dec
scas
jae
pop
inc
mov
jbe
stc
mov
aad
cmc
testl
mov
cmp
sbb
add
iret
cmp
mov
mov
fcmovnbe
ret
jecxz
sub
pop
popl
mov
jmp
sbb
movsl
mov
scas
sahf
aam
mov
pushf
rcl
cmpsl
fstl
lcall
lods
jnp
pop
aad
enter
lret
adc
mov
cmpl
imul
push
mov
mov
push
push
lahf
jp
xor
or
pop
mov
mov
out
fstl
xchg
outsl
out
arpl
push
fwait
cmpsb
pop
push
in
orb
jmp
push
add
stos
inc
pop
fwait
push
push
and
push
js
cli
mov
daa
dec
arpl
scas
pop
js,pt
mov
push
je
push
mov
mov
enter
mov
fwait
and
mov
mov
repnz
cmc
test
adc
sub
mov
xchg
fldenv
sahf
mov
push
ds
lcall
nop
repnz
xorl
or
xchg
lods
pop
or
lds
jg
stc
sti
cli
enter
cmp
mov
bound
cmpsb
roll
pop
lahf
jmp
or
and
lret
cwtl
cmpsb
aam
sub
jg
jp
rcrb
enter
repz
and
or
jmp
and
ficoml
je
rcl
lret
in
pop
sbb
adc
cmp
dec
lret
mov
cwtl
mov
test
jnp
or
adc
lods
imul
jno
stos
inc
and
hlt
push
fcmovnbe
test
jecxz
jno
ljmp
jmp
mov
adc
adc
aad
aaa
push
adc
push
inc
mov
enter
stos
or
push
fstpl
lcall
mov
push
inc
mov
cmp
stc
pop
ljmp
adcl
lods
jge
xor
jg
dec
js
addr16
pop
into
test
sbbl
sbb
adc
roll
jge
cmp
call
repnz
lahf
rcrl
hlt
adc
or
pop
xor
loope
ret
mov
std
mov
jbe
dec
in
adc
inc
xlat
push
rorb
arpl
jge
push
ljmp
pop
jae
loopne
pusha
inc
pusha
outsb
testl
out
pop
push
push
test
mov
stos
jb
and
lea
push
fstps
js
popa
test
popf
pop
aaa
repz
ret
bound
fdivl
mov
mov
lea
mov
sarl
xor
mov
cli
dec
loop
daa
mov
lds
ret
stos
xor
insl
je
pop
lods
jmp
mov
call
cmp
jne
push
add
fisubrs
jge
sub
test
add
inc
xor
int3
out
pop
dec
inc
push
mov
lock
shll
inc
arpl
in
mov
push
sub
cld
lcall
repz
sub
sub
enter
aas
fisttpll
mov
xchg
sbb
icebp
mov
pop
imul
dec
push
out
xor
gs
mov
jge
push
xor
mov
icebp
pop
mov
lea
or
stos
cmp
adc
in
shrl
dec
mov
xchg
in
xchg
dec
push
ret
mov
mov
pop
pop
mov
sub
ljmp
mov
push
dec
add
arpl
pop
iret
xchg
cmc
in
inc
out
std
sbb
mov
les
push
sbbb
insb
idivb
push
popl
push
mov
mov
jecxz
xchg
ss
pushf
dec
lods
jmp
cwtl
mov
and
std
mov
hlt
jmp
ret
dec
cld
jle
fcmovne
cmpsb
shlb
xlat
push
fcomps
and
mov
inc
push
fsubs
pop
pop
cmp
mov
xorl
mov
pusha
jp
cmpsb
ja
jns
mov
mov
dec
dec
inc
xchg
inc
and
orb
and
popf
mov
xchg
lds
aaa
mov
ja
stc
jbe
mov
or
bound
jae
mov
sbb
push
nop
push
add
xchg
leave
push
imul
push
push
inc
or
push
push
cmp
sub
aaa
jmp
mov
shlb
cmpsl
or
dec
hlt
outsl
sbb
stos
inc
lods
xchg
mov
mov
movsb
test
into
mov
or
xchg
sub
pushl
or
mov
lods
out
movsb
sti
or
xchg
mov
pop
jmp
addb
jle
insb
push
push
push
rorl
popa
iret
xchg
jns
mov
add
adc
cmp
jne
jae
popa
cmp
pop
inc
dec
push
inc
inc
lahf
inc
sub
sbb
xor
dec
pop
xchg
sbb
cmp
test
xchg
inc
jnp
cmpl
lcall
inc
sub
icebp
ja,pt
pushf
es
outsb
daa
push
adc
nop
insl
stc
xchg
div
lret
loopne
fisubrs
cmp
int
mov
shlb
jge
sbb
leave
cmp
pop
sbb
mov
lret
clc
jmp
mov
es
fistpll
cltd
pushf
adc
mov
xchg
test
mov
xorl
or
add
out
in
jecxz
jae
dec
adc
cmp
imul
in
stos
mov
lcall
cli
iret
out
enter
loope
jno
outsl
sbb
sbb
push
inc
les
xchg
sarl
push
pop
xor
xchg
in
add
ja,pn
mov
mov
sbb
pop
sub
and
adc
xchg
or
js
popf
jns
ja
sti
pusha
xchg
pop
ret
sti
xchg
cmpsl
mov
cmp
fwait
push
in
xchg
js
cltd
mov
adc
adc
add
test
push
xchg
inc
out
adc
pop
dec
das
push
and
fwait
int3
cltd
ffree
xchg
add
cmpl
dec
unpcklps
adc
inc
cli
call
jecxz
sarl
lret
sarl
stos
scas
scas
pushf
jmp
rcrb
orl
in
inc
ljmp
sarl
roll
mov
mov
mov
or
test
addl
in
jmp
jmp
out
aam
adc
dec
inc
aad
aam
test
stos
inc
test
cmpsb
ret
in
loop
mov
scas
mov
ret
jno
stos
bound
aas
cmp
fwait
and
and
and
leave
dec
or
or
repnz
lock
out
mov
push
mov
cmpsl
sbb
movsb
adc
xorb
and
inc
pop
jecxz
or
or
lahf
stc
hlt
jmp
ficomps
or
loope
fs
scas
dec
lods
nop
stos
dec
sbb
push
add
dec
add
call
nop
ret
push
lock
imul
inc
ljmp
ret
mov
lods
and
movsl
mov
test
mov
leave
imul
addr16
aad
test
adc
imul
cmp
movsl
jb
std
mov
jb
sub
xchg
jne
in
outsl
jo
outsb
push
pop
pop
pop
pop
out
sti
inc
adc
inc
out
aas
adc
push
daa
jmp
mov
push
js
jbe
je
jb
pusha
leave
notl
mov
pop
dec
dec
mov
lahf
lcall
xchg
sub
outsl
add
icebp
mov
push
push
daa
sub
mov
push
mov
push
fisubrl
inc
addb
aas
ds
jg
lea
jp
adcb
mov
add
jne
jne
pusha
mov
pop
in
xchg
out
lret
iret
push
int
lret
nop
leave
dec
aaa
fidivs
adc
jo
outsb
lret
pop
hlt
pop
aas
push
rclb
inc
sub
mov
lret
sub
sub
mov
sbb
or
negb
lock
fstl
inc
mov
inc
inc
inc
cmp
sub
sub
es
and
adc
adc
push
or
pop
imull
gs
loope
cmc
leave
sbb
data16
or
loop
out
or
push
xchg
ljmp
dec
stc
arpl
jns
jnp
lret
inc
push
les
mov
dec
scas
insb
lods
fwait
mov
xchg
andl
pop
jge
xchg
pushw
xor
pusha
xchg
dec
es
dec
dec
dec
nop
mov
mov
mov
mov
lahf
xchg
popf
mov
xchg
add
jle
jl
push
push
fistl
push
orb
jecxz
jbe
lcall
outsl
pop
xchg
sbb
xchg
add
add
outsb
loopne
push
push
push
push
ds
leave
aas
int
repz
cmp
daa
in
and
push
mov
or
push
ret
repnz
sbb
cmpsl
in
mov
xlat
scas
aad
ret
mov
lods
mov
and
inc
and
jp
add
push
in
hlt
adc
ljmp
cld
lret
data16
cmc
mov
scas
lods
stc
fwait
or
loop
out
or
push
jp
js
mov
leave
fwait
inc
mov
jle
leave
pop
pop
mov
mov
ss
mov
cs
mov
sub
dec
inc
xchg
test
jb
jo
outsb
cmp
adc
push
add
pop
fwait
inc
and
sub
cmpsb
xchg
movsb
xchg
xchg
mov
mov
jg
xchg
arpl
lods
pop
dec
loop
insl
inc
addl
das
cltd
sub
int3
rcrb
jne
bound
cld
dec
push
push
push
ret
push
xlat
dec
std
dec
dec
cmp
cmp
aaa
xor
xor
cmp
mov
add
jmp
jmp
sti
xchg
push
mov
mov
mov
sbb
jnp
push
or
or
jnp
push
hlt
in
push
adc
out
fsubrl
fidivrl
cld
and
ret
shl
cmc
lods
sbb
or
loop
out
or
push
jbe
je
loop
fisttps
arpl
jns
push
lds
scas
mov
inc
stos
push
test
xchg
mov
dec
xchg
insb
nop
jg
jge
jnp
jns
addr16
arpl
pop
xchg
dec
push
dec
xor
inc
xchg
xor
xor
sub
lahf
xchg
lds
mov
jp
js
data16
addr16
gs
repnz
test
dec
dec
jecxz
outsb
xor
xor
sbb
sbb
loopne
pop
add
loopne
arpl
xchg
out
in
push
loopne
push
dec
push
dec
aam
clc
cmp
ds
repz
ds
add
add
in
das
ljmp
shll
mov
shll
sahf
lods
pushf
inc
or
add
jp
mov
out
inc
in
jnp
push
fdivs
aad
ret
repz
sub
fldl
sti
and
call
stc
push
pop
rorb
lret
or
or
sbb
sbb
fs
pop
jl
in
mov
cmp
aam
rolb
imul
inc
stos
arpl
fbstp
xchg
pop
mov
push
adc
adc
inc
push
js
pop
lock
or
das
stos
outsl
ljmp
mov
xchg
repz
lret
lret
test
and
jo
andb
out
mov
daa
dec
dec
sub
ret
push
sub
pop
cs
sahf
push
loop
lahf
mov
inc
imul
jne
xor
mov
insl
cltd
lds
bound
leave
stos
mov
shll
or
mov
mov
lcall
jmp
jne
sbb
cltd
dec
cmp
lret
push
sub
repz
stos
scas
cmp
xor
xchg
sub
scas
pop
movsb
fldl
adc
ror
outsl
fisubs
addl
dec
push
flds
mov
mov
xor
pop
leave
sub
std
sub
rorl
mov
xor
or
mov
daa
int
outsb
mov
push
pop
test
cmp
cwtl
ret
orb
push
sarb
lcall
mov
cld
jno
lahf
std
cltd
sub
cs
pop
adc
mov
out
icebp
jno
ret
jmp
mov
es
in
adcb
mov
or
mov
push
iret
xchg
xchg
aam
jo
or
icebp
les
insb
sbb
in
scas
imul
and
push
pop
jbe
inc
outsb
cmp
jge
pop
repz
xor
stos
in
add
mull
jmp
inc
insb
xor
cmp
subb
cmpsb
rcll
adc
push
cmp
push
sub
aam
jle
dec
xlat
jae
pop
mov
scas
jae
cmp
das
insl
sub
mov
pop
push
or
dec
cmp
and
repnz
pop
inc
into
xchg
cmc
pop
stos
cmp
jge
adc
cs
lea
cmp
sahf
or
mov
xchg
aad
mov
mov
test
jbe
mov
arpl
iret
dec
in
sahf
push
ret
and
test
insl
mov
or
cmpsl
jg
and
jmp
out
test
push
shl
loop
sub
mov
loope
pop
mov
andb
popf
pushf
and
or
sbb
xchg
adc
bound
sub
shll
pop
cs
xor
stc
pop
or
add
and
pusha
push
out
fstl
roll
stos
stos
lret
adc
mov
push
js
sbb
xor
adc
ja
sti
movsl
sub
inc
xor
xor
ds
mov
mov
xchg
mov
in
adc
imul
adc
ja
test
pop
lret
push
push
xchg
aas
jb
and
cs
xlat
pop
dec
pop
icebp
out
cld
push
xchg
filds
xchg
fmuls
pop
jnp
fisttpl
lods
mov
jb
jge
inc
mov
cli
mov
test
mov
shl
aam
jmp
mov
mov
rcrb
aaa
cs
fisubl
out
xorl
enter
test
stc
and
fs
sub
sbb
imul
incb
cmp
add
or
pop
out
add
adc
sub
mov
pusha
pop
lock
scas
push
or
in
push
test
add
frstor
cs
cs
xor
mov
jnp
dec
aas
sahf
aaa
ficomps
outsl
lods
nop
pop
ljmp
mov
inc
add
or
mov
and
mov
and
inc
xchg
sbb
and
loop
jp
dec
imul
repz
sub
jnp
inc
insl
and
mov
js
xchg
push
jo
pop
lds
sbb
xchg
add
ds
mov
icebp
rcl
xchg
test
cmc
in
and
hlt
pop
xchg
lahf
mov
imull
gs
scas
fwait
lods
sbb
mov
push
mov
jmp
in
stos
fwait
add
xchg
push
out
xor
mov
movl
mov
roll
or
adc
or
call
push
addr16
cmp
jnp
mov
lret
mov
ror
jns
pushl
xchg
mov
mov
inc
test
aam
movsl
inc
fisubrl
dec
vmwrite
lahf
mov
and
sbbl
or
adc
test
repnz
mov
and
lods
xchg
sub
test
sub
add
test
stc
int3
icebp
jecxz
enter
adc
ret
subl
insb
cwtl
xchg
mov
lcall
fcomps
fcoml
dec
push
enter
scas
outsl
mov
mov
xchg
push
jne
stos
fisubl
lahf
cmp
xor
sbb
test
or
loope
pop
pushf
xlat
aam
xchg
in
push
push
push
cmp
ret
pop
xchg
cld
incb
pusha
dec
sti
jnp
jecxz
std
imul
ficoms
dec
mov
andl
sub
lods
add
repnz
add
icebp
adc
mov
pop
pop
and
mov
outsb
dec
sti
rolb
jg
xor
rclb
dec
xor
jbe
jl
mov
cmpsb
pop
loopne
xchg
pop
sbb
test
sub
pop
cltd
jo
test
sub
xchg
popa
ret
dec
flds
mov
ljmp
cmp
pop
imul
mov
push
dec
ljmp
in
fcmove
mov
mov
shll
stc
loope
cli
clc
or
ds
das
int
repz
ds
rcll
mov
fdivl
dec
in
pop
sbb
add
sub
mov
in
repz
sbb
ret
add
sbb
cmp
mov
pop
jp
sbb
sub
push
inc
sahf
imul
add
test
repnz
inc
rorl
loop
out
or
push
mov
lcall
shll
dec
cmp
jns
leave
xor
mov
les
push
and
inc
inc
xor
mov
sbb
mov
xchg
xor
sub
pushf
imul
test
repnz
mov
test
testb
jns
jge
mov
pop
dec
loopne
xor
clc
aad
pusha
fidivl
mov
cmpsb
push
inc
iret
rclb
inc
mov
pop
inc
xor
mov
mov
dec
aad
scas
and
fwait
rcrb
pop
cmp
push
mov
add
nop
push
xchg
test
mov
xlat
xchg
call
dec
mov
mov
pop
xchg
stc
cmp
or
cmp
sbb
test
or
popa
adc
repz
push
or
fcoml
adc
imul
mov
ja
lds
bound
cld
sahf
jl
pop
imul
shr
shll
mov
pushf
sub
inc
sbb
sub
popf
adc
adcl
and
sti
movsl
mov
push
ret
or
adcl
add
mov
scas
ret
mov
mov
add
cmp
sub
mov
test
leave
jle
push
sbb
arpl
jns
loope
int
jae
addr16
cmp
and
add
stc
cmp
iret
lds
mov
popa
cs
leave
lea
in
mov
test
stos
sbb
or
movsb
fcmove
int3
mov
stos
cwtl
sub
stos
pusha
sbb
lods
sub
js
mov
jg
adc
dec
and
or
sub
fcomps
jge
fs
sbb
dec
divl
loop
int3
add
lret
or
pop
mov
fs
pop
loop
mov
mov
daa
sub
dec
xchg
sub
xor
and
cmp
and
pop
adc
sbb
xchg
scas
or
movsb
test
mov
scas
and
stc
dec
je
shlb
enter
into
ret
int3
xor
push
pop
xchg
mov
mov
addr16
cmpsl
scas
cmpsl
xchg
mov
dec
push
sbb
sbb
and
and
sti
mov
and
loope
ljmp
cltd
adc
stos
aad
xor
loopne
fdiv
sti
mov
iret
call
dec
fwait
pop
push
inc
in
cmp
xor
lret
out
loopne
push
push
sahf
sbb
dec
mov
jb
adc
mov
mov
and
xlat
xor
cli
sbb
ds
jnp
ret
daa
mov
arpl
xchg
push
and
cmc
mov
xchg
mov
cmp
out
shlb
jb
jl
data16
mov
imul
lret
jb
imul
push
and
call
add
or
mov
lock
aam
cli
mov
pusha
mov
int3
lahf
cwtl
outsb
fsubs
addr16
mov
daa
xchg
mov
add
mov
pop
aas
mov
daa
dec
push
or
push
mov
subb
sub
lods
pop
repnz
icebp
add
sbb
or
popa
repz
sahf
mov
mov
rcl
pop
adc
je
addb
stos
andb
jno
lret
ljmp
or
mov
xor
inc
pop
mov
hlt
and
jmp
das
out
fs
ret
push
cmpsb
icebp
add
add
pop
lret
pop
jns
inc
add
das
mov
out
mov
imul
xchg
ret
outsb
xchg
push
rol
xor
cwtl
lcall
mov
loop
adc
rcrb
aad
ss
sub
mov
gs
mov
pop
arpl
popf
lods
sbb
mov
dec
test
jne
loopne,pt
adc
pop
jg
cwtl
jne
bound
jb
es
data16
mov
iret
or
push
xor
sbb
in
inc
andb
decl
unpcklps
cld
repz
or
cwtl
aad
fiaddl
mov
cmc
btc
rolb
fsub
sbb
movsl
sbb
enter
aas
add
sbb
xor
mov
sbb
dec
push
cmc
mov
jo
clc
sbb
fists
imulb
sbb
int3
cld
sub
push
pop
addl
xchg
jae
jp
jb
dec
and
ds
arpl
adc
mull
jae
add
push
jae
push
sti
xchg
rcrb
lock
jge
xor
and
inc
jmp
lods
js
jl
dec
pop
inc
mov
xchg
stc
stc
test
ljmp
push
mov
xchg
outsb
dec
lret
imul
sbb
dec
ljmp
push
mov
jge
push
fwait
or
xor
ss
jecxz
xchg
je
add
cmp
and
xor
daa
inc
in
rcl
fstl
or
daa
pusha
cmp
add
lods
push
lret
outsl
stos
pop
cmc
jl
add
sti
add
test
jo
dec
lds
inc
mov
dec
and
std
inc
or
aam
xor
rorb
dec
mov
add
sub
dec
test
inc
bound
sbb
add
sub
cli
fmull
xor
dec
push
orl
test
mov
mov
push
adc
xor
mov
scas
pop
mov
mov
dec
lods
loope
dec
push
and
jl
push
pop
cmp
lods
cmp
adc
xchg
sbbl
push
icebp
push
stos
pop
or
mov
and
lds
dec
dec
filds
or
and
mov
aam
insw
pop
and
xor
rol
lds
xchg
pusha
in
sbb
xchg
pop
hlt
aaa
cmp
es
fwait
imull
repnz
or
xchg
push
mov
and
and
lahf
decb
add
cld
adc
push
jp
cmp
out
mov
pop
push
popa
insb
jb
adc
xor
cs
nop
xorb
mov
pop
sbb
jg
mov
mov
pop
adc
cmpsl
xchg
jp
sub
push
xor
enter
mov
push
xchg
js
pusha
in
cwtl
outsb
daa
push
sbb
push
cmp
push
mov
addb
test
jno
sbb
inc
mov
adc
dec
lods
inc
lahf
rolb
ds
scas
arpl
ss
lahf
cmpsl
lret
mov
pop
or
call
push
test
dec
dec
xchg
es
jo
dec
shlb
xchg
enter
inc
push
mov
xor
mov
int3
adc
lock
xor
fadd
xor
add
pop
mov
and
fcmovnu
cmpsl
mov
mov
imul
or
sti
mov
sbb
gs
loopne
test
es
inc
push
rcrb
and
add
push
sbb
sbb
dec
or
inc
sub
or
mov
sub
jns
cmp
mov
inc
adc
icebp
in
movsb
xchg
int3
cmp
jmp
repnz
sahf
pop
into
lea
js
pushf
jb
pop
imul
scas
pop
push
int3
pop
cmp
mov
cmp
psllq
jb
dec
inc
std
sahf
rol
or
test
mov
nop
incb
mov
mov
addb
inc
ja
mov
mov
dec
mov
dec
dec
push
scas
mov
add
jg
sbb
test
dec
mov
xchg
cmpsb
inc
jae
xchg
loopne
sub
lds
in
mov
incb
cmpsl
fcmove
mov
and
cwtl
or
mov
mov
int3
adc
clc
pop
cmp
clc
in
in
lods
and
adc
in
mov
mov
mov
sti
pusha
stc
inc
icebp
xor
in
xor
and
push
out
adc
movsb
out
aaa
mov
cmp
xchg
adc
jno
dec
ja
imul
mov
fldt
out
jo
adc
addr16
aas
loopne
and
cmp
mov
inc
imul
or
ret
inc
mov
mov
mov
push
jae
lods
jl
and
and
jecxz
shlb
lea
mov
cmpsl
dec
mov
push
pop
push
imul
repz
out
push
jae
adc
cmp
iret
mov
jg
js,pt
inc
in
daa
int3
add
into
xor
and
adc
aaa
mov
mov
leave
lods
lods
cld
lods
into
adc
out
cmpl
inc
push
mov
mov
rorb
add
fimull
add
add
scas
insl
mov
ds
rcrb
lret
lahf
pop
andl
cld
cwtl
es
mov
sub
add
lahf
js
je
mov
jbe
js
push
out
data16
cltd
inc
ss
push
lea
dec
inc
jb
sahf
add
pop
push
push
ret
loopne
adc
ret
cmp
dec
outsb
pushf
shlb
ds
cmpsb
sar
les
jo
sub
jns
enter
ljmp
divl
fdivrl
rcll
lret
movb
or
je
push
sti
scas
icebp
pop
leave
std
add
add
inc
pop
loopne
das
mov
in
fyl2x
sub
in
push
jbe
xor
adc
out
rdtsc
inc
ljmp
dec
xlat
xor
stos
and
mov
mov
shrb
dec
mov
add
das
ret
aam
outsb
fistpl
sahf
and
xchg
adc
xor
and
sbbb
adc
and
sub
nop
add
movsl
sti
daa
or
fxch
mov
jle
test
dec
mov
imul
imul
loope
mov
gs
cmpb
mov
jbe
jbe
ss
jno
pop
vpunpckhqdq
fdivl
iret
mov
in
add
leave
inc
movsb
out
fnstenv
pop
mov
jnp
push
icebp
xlat
test
ljmp
mov
hlt
sub
std
lock
les
cmp
lcall
movsb
fstps
adc
aam
push
or
mov
or
push
jne
mov
xchg
cmc
or
int3
fwait
add
xor
repz
bound
clc
adc
or
jns
mov
pushf
add
bound
cmp
and
jno
or
xor
inc
cmp
iret
jno
in
jbe
fldt
and
jmp
xor
xchg
push
pop
fstl
jnp,pt
jge
mov
jnp
dec
push
inc
and
cwtl
pushf
jmp
into
cmp
inc
xchg
inc
sahf
add
adc
cltd
or
insl
and
jns
loop
dec
xchg
fbstp
sub
addr16
mov
pop
mov
sbb
mov
push
xorl
add
addl
adc
jns
jp
test
mov
hlt
popf
popa
mov
jno
pop
popl
add
cld
pop
ljmp
jmp
ret
loopne
shr
mov
call
mov
xchg
mov
icebp
add
pop
or
cmc
in
dec
mov
jo
icebp
xchg
repz
ss
push
cmp
mov
xor
dec
sub
or
add
ss
push
and
cmc
inc
mov
adc
pop
jmp
pop
pop
xor
mov
mov
dec
xor
inc
gs
push
xor
xchg
pop
leave
add
inc
pop
sub
pushl
ss
ljmp
or
lds
movsl
lods
xchg
lds
jp
dec
inc
mov
xchg
dec
movl
cmp
dec
xchg
cmp
jnp
cltd
sub
xchg
sbb
mov
rolb
mov
out
lock
mov
out
lds
sbb
cltd
xchg
push
les
xchg
dec
adc
inc
mov
fisubrs
jne
sub
push
nop
hlt
mov
adc
out
ljmp
int
dec
mov
adc
testb
sub
push
xor
cs
cld
push
mov
adc
inc
mov
sbb
fdivrl
cmp
pop
xchg
movsl
popa
fwait
mov
jns
loop
adc
out
sbb
lret
push
jbe
pop
andb
sbbb
andb
addb
int3
cltd
xchg
gs
inc
jp
fisubl
imul
mov
fiaddl
popa
movsl
int3
rcrl
in
adc
dec
inc
jecxz
jecxz
loope
dec
mov
popf
dec
adc
fxsave
pushf
jg
pop
insb
and
je
out
hlt
xchg
pop
xlat
lock
sbb
xchg
gs
adc
pusha
inc
add
inc
xchg
dec
adc
lret
ja
stc
push
push
out
mov
mov
inc
cmp
jmp
shrb
pusha
dec
call
xchg
sub
push
adc
vpshuflw
repz
inc
mov
cmp
xchg
cmp
mov
sbb
adc
les
daa
jg
xor
inc
lds
test
daa
push
jmp
subl
lret
int3
and
icebp
cmp
into
jp
popf
lahf
popa
mov
punpcklwd
cmp
jo
imul
test
push
pop
jbe
jno
xchg
pusha
bound
fldenv
and
inc
je
out
push
xchg
xlat
js
mov
adc
rcll
sbb
popf
dec
jnp
lret
icebp
jbe
insb
cli
nop
push
and
mov
mov
aaa
test
fwait
sub
push
into
mov
xchg
cmp
adc
push
sbb
inc
xchg
cli
jno
dec
out
pop
cltd
mov
fadds
fisttpl
jl
test
lcall
test
stc
scas
jl
and
outsl
std
stc
dec
jno
or
sub
mov
mov
mov
into
clc
test
add
testb
in
sub
dec
inc
das
xor
and
sbb
pushf
jecxz
ficompl
sbb
cltd
out
xlat
popf
test
jo
push
adc
xchg
cli
fisttpll
mov
repnz
xor
je
jns
xchg
and
aas
ds
pop
stc
fidivl
into
stc
add
add
cmpsb
jo
or
jbe
xchg
das
cmpsb
xchg
xchg
ficomps
push
add
popa
sub
sub
inc
arpl
pop
pusha
sbb
aad
mov
shrl
pop
std
andb
lret
push
in
hlt
add
and
xor
sub
repz
and
inc
or
xor
insb
cltd
pop
sub
cmp
in
in
movsl
sub
lret
stc
lret
sbb
out
xor
out
jmp
ds
rep
inc
push
add
pop
icebp
and
gs
sub
test
fsub
adc
loope
popa
fisubrs
sub
in
push
xchg
cld
inc
movsl
insl
jb
dec
into
popf
lock
int3
adc
aam
movsl
clc
pop
xchg
scas
fcomps
out
lea
lock
in
and
and
cmpsb
cmp
ret
add
or
pop
and
out
inc
and
scas
sub
out
out
ficomps
sub
jo
jb
ret
xor
ret
stos
cmpsb
out
sbb
or
pop
dec
fdivr
sub
outsb
sahf
out
xor
or
ds
lods
aas
push
call
int3
std
jns
into
idivb
mov
adc
nop
aam
data16
sbb
int3
adc
inc
sbb
lds
sub
push
jl
lret
scas
pop
push
cmpsl
adc
sub
xor
data16
enter
or
jb
mov
xor
or
cmpsl
push
fcompl
adc
rcll
or
dec
leave
rorb
les
lret
xor
call
leave
push
jg
popa
push
loope
aaa
cmp
insl
sbb
lock
jmp
xor
sub
into
jno
icebp
xor
or
push
jmp
and
rep
inc
paddb
add
ss
mov
xor
push
cwtl
push
repnz
jbe
movsl
jmp
mov
sub
gs
es
loop
ret
push
ret
jo
sbb
jnp
popa
or
fs
mov
mov
in
xor
scas
pop
sbb
mov
xor
pop
sub
sti
cwtl
fisttps
mov
and
daa
out
sub
xchg
cmp
jo
and
xor
decl
in
popf
lods
mov
lret
cwtl
out
xchg
and
cmp
imul
push
xor
xchg
adc
fbld
clc
push
int3
out
loopne
add
sbb
jmp
mov
adc
dec
jbe
pop
and
cli
add
mov
add
dec
cwtl
cli
add
mov
cmp
xor
xor
or
daa
inc
mov
push
sbb
push
mov
inc
cmp
sahf
or
adcb
lret
leave
jne
pop
stos
push
xchg
add
js
bound
lods
outsb
mov
xchg
inc
scas
mov
pop
jnp
adc
rcrl
divb
fs
jnp
pop
inc
in
idiv
cmp
ret
cmpsb
psubsw
mov
adc
call
mov
clc
xchg
mov
cmp
mov
cld
rcll
lods
outsl
jp
je
je
jg
sbb
pop
cmpsb
push
jno
and
test
lret
repz
aad
pop
and
fdivl
test
xchg
cmpsl
xchg
ljmp
loope
mov
adc
push
xchg
fimull
inc
test
fwait
dec
mov
and
jmp
jne
inc
aam
mov
mov
cltd
push
jl
daa
lods
idiv
push
sbb
jmp
clc
and
cmpsl
lea
jp
jb
test
jae
xlat
sahf
shl
popf
inc
cmp
cmp
and
jg
std
inc
xchg
jl
daa
pop
xlat
lcall
mov
test
insb
imul
add
mov
jecxz
into
push
sbb
pop
int3
aaa
adc
pop
and
loop
mov
sbb
xor
xchg
aam
sub
ret
outsl
das
sbb
sub
add
stos
adc
xor
daa
jmp
sbb
inc
mov
adc
lea
test
test
orb
adc
mov
and
mov
xor
mov
int3
movsb
dec
in
pop
lock
inc
lods
out
incb
pusha
sub
cmpsb
inc
push
dec
mov
es
addb
add
push
es
test
popa
mov
xor
ss
loope
sbb
push
xor
xor
pop
mov
add
daa
dec
mov
pusha
sub
jno
lret
or
jne
test
mov
jb
data16
sub
pop
pop
fcompl
lea
jge
fwait
or
popf
xchg
outsl
test
les
je
add
in
aam
jp
stc
pop
cld
das
jg
mov
and
mov
mov
cwtl
ret
lds
pop
sub
test
xchg
and
mov
jno
push
stos
dec
inc
out
xchg
les
xchg
cmpsl
xchg
sub
xchg
test
sub
dec
add
or
gs
lods
int3
xor
cli
sub
dec
into
rcrb
repnz
jbe
add
out
mov
jne
repnz
dec
pop
push
cmp
scas
sti
mov
xchg
inc
orl
out
mov
sbb
cmp
hlt
pop
lock
xor
dec
jbe
adc
repz
adc
mov
jno
push
and
sbb
push
adc
cmp
cmp
test
lods
and
test
fld
dec
fidivrl
fisttpll
cltd
pop
push
sbb
mov
inc
pop
xchg
push
cs
push
sbb
loope
mov
vsqrtsd
cld
popf
pop
repz
cmpsb
inc
aam
cmp
syscall
cs
int
mov
aad
xchg
addb
sub
nop
xchg
in
jns
shl
test
lret
push
lods
fistps
outsb
mov
clc
xchg
dec
and
ds
jecxz
and
cs
sub
int3
sbb
or
cs
stos
adc
and
cli
outsl
loopne
push
ffreep
popf
out
stos
xchg
mov
shlb
inc
loop
sahf
gs
jns,pn
lods
outsl
mov
inc
repnz
push
inc
sub
cmp
cmp
lcall
inc
sti
data16
sub
in
mov
pop
mov
test
sbb
imul
std
aad
movsl
sub
int
add
mov
fs
cltd
out
xor
and
jae
nop
dec
pop
sbb
arpl
pop
mov
adc
mov
imul
sahf
loope
movsl
inc
xor
mov
orl
lea
pop
mov
add
mov
subb
pop
fisttpll
roll
mov
xchg
shll
dec
or
xor
pushf
mov
add
sub
ret
inc
fs
add
sub
icebp
in
out
lock
loope
and
jmp
adc
imul
adc
sbb
ja
xlat
fisttps
and
xor
je
sbb
lret
push
push
pop
stos
es
cmp
sub
dec
xchg
jmp
jb
sbb
insb
bound
sub
sub
div
push
dec
sbb
mov
adc
ds
faddl
mov
xchg
into
fisubl
mov
push
mov
out
push
sub
pop
lock
stos
xlat
fwait
push
dec
jo
sahf
mov
jle
push
inc
sub
in
shrl
mov
jg
push
lret
outsl
out
sbb
cmp
mov
into
leave
lcall
jo
in
cmp
scas
scas
lods
shrl
or
outsl
in
mov
mov
out
nop
pushf
push
sub
jle
pop
loop
add
rorl
sub
add
and
add
or
or
loop
add
fsubl
xor
fsubs
jnp
push
ss
sbb
mov
jo
bound
hlt
movsl
cwtl
pop
pop
fs
mov
mov
dec
dec
loope
cmp
sub
sahf
sub
pop
cs
or
cli
pop
jns
inc
cmp
gs
lods
xchg
dec
xchg
push
or
mov
dec
dec
int
adc
loop
cs
mov
push
rclb
mov
cwtl
mov
subb
jnp
jb
js
push
dec
or
stc
pop
adc
dec
xor
pop
push
adc
daa
mov
jnp
bound
mov
lods
mov
mov
cmc
stos
sub
push
int
mov
repnz
xchg
scas
cmp
mov
cmp
hlt
sqrtps
and
mov
dec
fimuls
cltd
ss
cmp
mov
outsb
mov
push
lcall
mov
adc
xchg
sbb
loop
jge
fcmovnbe
mov
je
xchg
sbb
test
add
add
repz
dec
pop
icebp
xor
xchg
test
cmp
stos
lret
punpckldq
bound
ja
aas
sbb
push
les
push
inc
pop
movsl
sbbb
xor
mov
bound
aaa
les
cmp
add
stc
sub
pop
cmp
aad
mov
push
cmpsb
add
add
add
lea
fs
data16
clc
adc
imul
mov
fwait
and
repz
scas
cld
inc
shlb
roll
jl
shlb
cwtl
out
shrl
fldt
test
aam
and
aad
mov
loope
dec
shll
fsubr
out
stos
cmpsb
popf
movsl
xchg
jne
int
aam
mov
js
js
mov
roll
std
cmp
aam
xchg
stos
push
fimull
pop
sahf
mov
or
repz
loopne
movsb
fcmovnbe
pop
das
xlat
cmp
fnstenv
ror
cmp
test
popf
rorl
add
out
jmp
popa
cld
ds
aas
mov
fwait
leave
xor
sub
sub
mov
and
add
inc
push
data16
add
dec
incl
cmp
jne
mov
loope
push
ret
sbb
push
lds
mov
sarb
movsl
iret
popa
popf
sbb
xor
jb,pn
push
push
and
xor
mov
into
inc
push
mov
ss
sub
lcall
mov
jnp
repz
push
inc
push
sub
xor
dec
add
adc
sub
jp
rorb
cltd
push
push
pop
mov
and
jp
push
xor
imul
xchg
xor
jecxz
jecxz
sub
cs
push
fdivp
dec
add
mov
adc
xchg
xchg
popa
mov
sbb
mov
cmc
rol
cmp
ficoms
div
rorb
mov
dec
stc
mov
push
mov
cmpsb
and
inc
dec
sbb
or
pop
rcrl
add
sbb
adc
stc
pushf
cmp
xor
and
pop
fisttpll
mov
loop
jae
jge
mov
jge
xchg
insb
fimuls
mov
rol
push
xchg
imul
xchg
bound
enter
in
in
inc
pop
adcl
pop
inc
dec
cmpl
dec
cmc
xchg
xor
mov
addr16
mov
inc
dec
outsb
lcall
or
mov
lds
lret
sti
mov
fisubrs
sbb
cmp
lds
and
iret
js
fwait
cmp
cmp
sub
cmpsb
pop
movsl
mov
jmp
fcompl
pop
add
in
fcomip
in
mov
adc
jg
adc
cmp
int
xchg
lods
cltd
sub
jecxz
fcmovu
xchg
xchg
or
xor
jo
lds
popa
mov
jnp
aaa
push
xor
xorb
fdivrl
cmp
and
in
inc
ljmp
adc
xor
cltd
or
add
mov
idivb
int3
ds
sarl
add
xchg
ret
mov
pop
ja
mov
push
jno
into
jmp
pop
mov
popf
push
xchg
inc
dec
mov
icebp
xchg
in
shr
lret
repz
cmp
outsb
xchg
and
mov
ds
mov
iret
pop
xchg
mov
mov
test
rorl
pusha
lret
jle
push
dec
or
and
adc
pop
lock
sbb
ret
cltd
hlt
out
cmp
ss
sub
into
xor
scas
repnz
lcall
jne
divl
mov
push
add
mov
inc
enter
mov
xchg
scas
loope
aas
lds
data16
pop
cmp
inc
out
sub
and
xor
fisttpl
insb
das
xor
mov
pop
mov
out
cwtl
inc
mov
adc
lods
cmpl
adc
mov
mov
xchg
jmp
ljmp
mov
or
imul
fdivs
jecxz
lahf
push
adc
adc
jo
adc
push
mov
pop
add
call
pushf
jbe
mov
mov
pop
or
sub
scas
jecxz
test
sbb
or
sub
push
popf
xor
int3
xchg
test
repnz
scas
xchg
sub
xchg
push
sub
lahf
fs
jne
jmp
filds
push
jl
or
adc
div
adc
ja
dec
mov
fbld
jae
and
dec
repnz
ljmp
inc
aaa
mov
data16
fadd
xor
pop
mov
call
aaa
arpl
out
inc
dec
add
and
mov
inc
fucomp
aam
cmc
inc
popa
in
xor
je
imul
mov
pusha
pusha
push
inc
jl
lods
ss
orb
into
fcompl
sub
test
mov
cmc
dec
ret
xchg
pop
mov
pushl
cs
or
das
test
add
popf
daa
push
es
xchg
outsl
scas
fisubs
orl
lock
mov
jae
jae
and
jbe
ficomps
rol
rolb
imul
jmp
test
add
xchg
test
shl
sti
mov
fprem1
sub
inc
lds
aaa
xchg
out
mov
aaa
xor
fstps
in
push
ljmp
jne
fistl
fsubrl
dec
mov
push
jo
jbe
add
fiaddl
sahf
sub
test
sub
push
xchg
int
out
outsl
out
daa
sbb
int3
xor
stc
sbb
in
xor
mov
fwait
out
mov
pushf
inc
aas
add
jbe
mov
fs
jbe
inc
cmp
pop
mov
out
sbb
popa
xor
cmp
test
leave
loopne
incl
jb
ror
fbstp
xor
cli
movsl
xchg
shrb
xchg
adc
pop
in
xlat
sbb
and
jnp
xchg
sbb
imul
jge
test
add
add
les
and
or
sbb
rcll
or
sbb
mulb
or
add
sub
push
gs
test
push
jb
ret
in
pop
xchg
arpl
pop
fmulp
inc
push
adc
ret
dec
inc
push
and
fwait
xlat
xor
dec
aaa
sub
hlt
or
add
mov
les
jne
subl
fildl
adc
orl
addr16
cli
dec
mov
nop
add
sbb
mov
call
cmp
imul
sub
aad
jl
lods
sbbl
jno
sahf
loopne
pop
rolb
adc
jg
inc
add
inc
push
xlat
push
or
cld
mov
xchg
popa
lcall
sahf
cmp
mov
jge
add
xor
movsb
stc
mov
sbb
pop
mov
test
pop
pusha
mov
push
int
int
add
ud0
xor
mov
js
pop
pop
outsl
mov
adc
pop
mov
or
loop
sbb
fwait
mov
adc
enter
or
pop
pop
sub
sbb
lcall
sub
cmp
fs
or
mov
mov
push
gs
sbb
dec
enter
rorl
push
mov
fisttpl
roll
mov
mov
mov
leave
jl
dec
ljmp
sub
dec
xchg
jae
pop
xor
cltd
jae
push
jle
jb
pop
jg
out
cmp
cmp
fisubl
loopnew
dec
shlb
ljmp
dec
push
fwait
cmp
mov
sub
mov
test
shrl
aam
das
scas
movsb
jle
jmp
sahf
out
andb
stos
or
xchg
ds
into
xchg
movsb
adc
xchg
ret
cmp
jb
dec
sub
stc
js
xchg
das
add
jno
fidivs
scas
adc
scas
fs
loope
popa
test
sub
adc
cs
ds
popf
fsubrl
inc
pop
lret
lcall
clc
ret
mov
xchg
sub
aaa
add
and
lods
push
sub
test
adc
sbb
sbb
ljmp
int3
cmp
ss
das
or
add
jp
addl
lahf
mov
ret
push
inc
mov
clc
jp
add
lea
pop
cltd
add
pop
push
ret
lods
pushf
dec
push
mov
push
scas
jmp
inc
mov
shll
jl
ret
loopne
jg
in
hlt
imul
and
shrb
into
mov
push
js
and
mov
xchg
dec
aaa
pop
xor
push
sub
xor
ja
lds
loope
xchg
or
adc
sahf
call
push
out
pusha
not
cmc
push
ret
sbb
xlat
cld
out
xlat
or
shll
std
add
mov
sub
push
and
pop
push
inc
fnstenv
xor
test
pop
scas
cmp
int
or
adc
jne
mov
addr16
hlt
or
movsl
inc
aad
mov
dec
jbe
cmp
test
xchg
icebp
jb
ret
dec
or
jne
mov
scas
inc
dec
rolb
jecxz
sub
jecxz
popf
movsb
mov
push
xchg
aad
ja
mov
ror
xchg
cltd
cmp
stos
mov
mov
sar
test
jp
mov
ret
push
test
inc
ja
mov
adc
das
jae
mov
insl
xor
js
push
mov
jae
bound
sti
aas
pop
int
dec
adc
movsl
pop
sbb
cmp
cs
pop
jge
shr
and
pop
in
cmc
hlt
insl
pop
jbe
pop
pusha
ret
jae
filds
mov
cli
out
cmc
fs
mov
lock
lea
adcb
add
and
mov
or
mov
adc
push
jle
inc
sbb
xor
and
jne
dec
adc
ror
adc
adc
sahf
adc
iret
mov
clc
rorb
jg
fldcw
repnz
and
push
add
fs
mov
or
pop
adcl
dec
lods
fsubl
movsb
mov
js
ljmp
pop
push
cmpb
loopne
pushf
int
rclb
sub
cli
xchg
add
and
out
scas
dec
jne
enter
insb
push
push
rcrb
test
cmp
call
jne
and
sub
cmp
out
loope
jmp
ss
jno
fcoms
fldl
cs
stos
cmp
and
call
cmp
or
add
mov
add
xor
push
mov
shlb
xor
cmp
dec
or
jo
xor
inc
in
inc
popf
out
mov
jbe
cmp
mov
or
xor
fiadds
aaa
stc
mov
jne
popa
repz
sbb
dec
cmc
out
test
push
movsb
daa
clc
movsb
or
gs
dec
xchg
ljmp
cld
or
int
jecxz
lret
and
arpl
inc
sbb
push
fcompl
rclb
cwtl
insb
in
lcall
cmpsl
xor
aad
inc
xchg
fdiv
add
subl
movsl
or
and
add
push
sbb
aam
xor
xchg
dec
in
xor
xchg
add
mov
lret
sub
or
and
sbb
daa
and
je
ud2
int
clc
hlt
xor
xchg
arpl
lcall
lods
inc
scas
mov
xchg
aas
aas
stc
test
pop
xor
jmp
rorl
inc
fldl
ljmp
dec
jle
je
pop
cmp
fcomps
pop
fnsave
xor
outsl
mov
fmuls
test
mov
daa
mov
and
and
cmp
mov
ficompl
sarl
and
imul
push
jno
pop
aaa
add
incl
cmp
mov
sub
fisttpl
jbe
jnp
push
inc
or
or
lcall
inc
jecxz
out
pop
sahf
sarb
adc
arpl
and
lods
mov
mov
daa
test
rcrl
or
adc
jne
popa
adc
jbe
dec
frstor
ds
push
mov
daa
mov
adc
sbb
or
xor
sbb
inc
and
jnp
arpl
inc
xor
int
sub
stc
add
pop
into
push
insl
insb
lahf
aad
pop
mov
or
pop
mov
pop
dec
push
jbe
enter
insl
movsl
out
adc
xchg
cmp
fstpl
mov
add
ds
pmulhw
rolb
dec
mov
jo
jmp
movsb
pop
xor
sbb
cmpsb
mov
cmpsb
nop
test
or
popa
jnp
mov
clc
pusha
outsl
xor
cli
sbb
test
out
and
push
add
cmc
mov
ljmp
dec
jg
insb
xor
stos
sahf
sbb
jmp
pop
adc
mov
es
and
ljmp
cmp
cltd
hlt
xchg
and
andl
pushf
xchg
jl
add
add
ret
lods
mov
mov
lcall
push
jmp
dec
in
je
jp
push
jge
fisubrs
repz
cltd
pop
push
pushf
in
shll
adc
and
mov
imul
sahf
rcll
add
add
repz
or
js
sub
xor
ror
test
sub
mov
pop
jbe
mov
inc
xchg
jnp
push
xor
sub
xor
ss
cmp
jmp
out
test
stc
addr16
stos
call
mov
jae
fsubrl
mov
mov
int
negb
mov
sti
shlb
sbb
or
das
and
cmp
cmp
fimuls
repnz
sub
push
pop
dec
daa
inc
push
stc
dec
clc
push
jnp
mov
mov
jnp
pop
in
shlb
enter
insl
sbb
movsl
mov
dec
gs
cltd
dec
jmp
xchg
arpl
aaa
xchg
jmp
pop
pop
jae
sbb
jo
cmp
and
cmp
xchg
fidivrl
popa
pop
xchg
cltd
aas
cmp
test
hlt
popf
dec
pop
fwait
ror
mov
add
mov
lock
int3
jo
mov
ss
and
and
fisubrl
push
jne
rcl
aad
loop
xlat
mov
mov
cmp
in
mov
sub
imul
jno
and
leave
dec
int
mov
xlat
mov
popf
sbb
imul
pop
cmp
sti
xchg
dec
arpl
xchg
xor
jno
pop
inc
fnstsw
inc
sahf
push
imul
add
xchg
add
cmp
cmp
aam
pop
ljmp
sarl
fbld
lcall
popf
jmp
push
mov
imulb
cmp
mov
mov
and
mov
hlt
scas
mov
jno
int3
cld
rclb
clc
fcomps
movsl
cld
loope
scas
and
cmpl
dec
dec
lods
push
jl
mov
fstl
inc
jmp
jb
in
imull
outsl
sub
and
xor
cmpsl
popf
jg
sub
imul
cmp
movsl
cmp
mov
inc
sbb
test
insb
mov
cmp
insl
cld
fistps
mov
fidivs
cmp
shll
lahf
mov
cmp
rcrl
nop
out
add
and
xchg
popf
daa
jo
int
xlat
pop
insl
sub
xor
pop
mov
xor
in
hlt
add
fsubs
xchg
jge
lea
mov
fldcw
movsl
loope
stos
pop
rcl
mov
jb
sbb
cmpsl
xchg
sahf
push
test
dec
add
push
push
aam
int3
inc
lea
mov
or
rcrb
lods
sub
xchg
adcl
push
mov
adc
stos
and
xchg
xor
cmpsl
mov
cmp
out
in
cmp
roll
jmp
inc
pop
movsl
test
movsb
or
out
jae
jnp
pop
lods
call
into
fcompl
adc
hlt
out
idivl
xor
nop
or
dec
vpsubw
popa
stos
push
test
dec
and
mov
popf
jo
out
repz
xchg
xchg
cs
pop
aam
xchg
mov
or
adc
dec
lret
push
mov
inc
lret
push
fdivl
repnz
faddl
mov
addr16
jne
xor
push
fsub
in
jbe
js
fsubrl
or
inc
mov
inc
mov
lock
jle
bound
imul
xchg
xor
jl
clc
xlat
stos
bound
imul
push
xchg
pop
test
mov
addb
cmp
inc
dec
mov
popa
cmp
jnp
adc
aad
aaa
ljmp
ds
cmp
xor
mov
hlt
jl
mov
mov
and
cmc
mov
lock
jecxz
cltd
push
xchg
adc
nop
dec
stc
lahf
adc
pop
adc
xchg
pop
rcll
popf
rorl
mov
ficoms
dec
jecxz
cmc
in
jmp
into
pop
mov
out
push
inc
push
mov
inc
std
dec
cmp
stc
xchg
add
sbb
outsl
sbb
bound
adc
imul
movsl
sbb
inc
daa
adc
repnz
std
lcall
es
in
sar
mov
fnstcw
enter
data16
mov
mov
addr16
fcmovbe
movsb
dec
inc
push
lods
loope
roll
push
stos
sbb
cmp
xor
notl
stos
enter
push
push
sub
lcall
adc
add
mov
and
push
xchg
xchg
in
mov
insb
mov
or
rorl
out
out
or
test
fmuls
aad
xchg
or
ret
push
push
cmpsl
sbb
cmc
pop
decb
jnp
js
lods
dec
mov
sbb
mov
enter
lods
loop
js
enter
jl
mov
cmp
hlt
int
iret
bound
mov
add
ret
cmp
icebp
ret
xchg
scas
push
ret
xor
fldl
mov
roll
pop
inc
popa
out
dec
xchg
test
mov
test
xchg
pop
pop
fidivl
mulb
jg,pn
jbe
cmp
pop
jl
push
loope
mov
jge
in
movsl
push
cmpsl
mov
inc
daa
test
fs
das
daa
xchg
mov
sahf
in
jle
jne
repz
mov
push
pop
pop
sub
and
dec
stos
xlat
mov
xchg
dec
mov
ljmp
shlb
cmp
std
cmpsb
dec
call
or
pop
fsubs
dec
lret
imul
inc
sub
in
inc
int3
push
inc
cmp
gs
in
or
sbb
mov
and
xchg
jae
std
mov
pop
adc
in
lret
sbb
push
jbe
xchg
repz
pop
push
and
rolb
stos
cmc
test
icebp
add
jmp
mov
lds
pop
push
push
pop
jge
and
in
loopne
or
adc
push
insl
sub
ds
cwtl
shr
jecxz
ficoml
lods
push
ret
mov
sbbb
mov
xchg
arpl
pop
push
push
fwait
pop
sub
sub
mov
pop
out
adc
stc
mov
fists
push
inc
mov
and
inc
add
dec
jl
insb
sbb
int3
mov
lcall
mov
mov
out
jbe
fisttpll
mov
shrl
insl
sub
jg
mov
es
push
xor
adc
into
sbb
out
popf
arpl
arpl
loop
dec
dec
in
inc
cmp
jns
lds
inc
cmp
inc
jbe
fstp
out
repz
lds
bound
jmp
cmpsl
das
sahf
fwait
xor
or
push
in
ljmp
sti
pop
cmc
lcall
test
lcall
cmp
or
add
std
lods
outsb
fnsave
jne
push
addr16
cltd
int
pop
add
ss
pop
test
mull
iret
push
fsubl
fstpt
xlat
add
ljmp
cltd
or
jle
and
dec
sub
out
xchg
xchg
sti
in
lret
ss
mov
pop
push
in
out
xorl
scas
imul
pushf
cmp
mov
jl
sub
lods
inc
mov
add
sbb
push
sub
popf
xchg
arpl
jle
add
or
lods
add
in
jne
mov
or
mov
and
mov
std
xchg
mov
push
xchg
pop
ja
mov
jne
jp
add
imul
pop
repnz
add
js
rcrb
pusha
sti
frstor
jno
arpl
pop
shl
xchg
and
push
in
fwait
repz
sarl
repz
add
sbb
dec
push
push
and
leave
inc
mov
adcb
movsl
cld
mov
pop
ja
push
outsb
xor
cmp
push
outsb
outsl
xor
push
push
inc
insl
outsb
push
xor
and
test
movsb
pusha
cmp
jnp
pop
inc
ss
jne
insb
xchg
jb
pop
or
dec
test
pop
dec
cmp
imul
outsb
pop
dec
jno
xor
pusha
sbb
frstor
aam
rcll
xor
lret
repnz
mov
ret
sbb
popf
mov
lock
scas
adc
jg
sub
inc
aas
out
sbb
or
mov
lret
jge
popa
scas
out
sbb
sahf
in
sub
call
fiadds
xchg
int
dec
into
mov
jno
mov
sub
insb
push
jge
addr16
sbb
mov
ret
aad
pslld
or
and
push
int3
jge
cmpsl
rcr
stos
subb
in
jae
cli
sub
push
sub
jg
lock
lret
jbe
push
pop
inc
xorl
inc
jecxz
inc
mov
xchg
adc
cwtl
xor
cld
push
xor
lea
fldt
dec
pop
cwtl
pop
add
mov
mov
das
mov
mov
xchg
xchg
movsb
test
push
enter
fwait
rclb
push
insb
sub
push
outsb
xchg
loope
push
push
xlat
std
movsb
arpl
mov
int3
pop
mov
jecxz
inc
mov
aam
cltd
lods
inc
out
and
stos
mov
fdivrs
add
mov
mov
test
imul
push
in
add
adc
or
rol
mov
mov
inc
add
fsubs
scas
mov
in
or
ja
cmp
cmpsb
cs
pushf
dec
fisttpll
inc
aas
cmc
push
sub
add
pop
fisttpll
nop
push
adc
mov
and
ja
inc
rorl
pusha
pop
fmull
pop
xor
add
lahf
inc
dec
dec
fimull
push
and
cmp
jnp
pusha
scas
mov
rorl
nop
pop
inc
push
mov
adc
xor
pushf
stc
nop
lods
test
mov
dec
mov
inc
sarb
mov
or
inc
mov
rorb
inc
bound
mov
or
xor
lods
leave
daa
mov
out
test
and
sbb
icebp
jne
sub
add
jmp
mov
jge
jo
repnz
xchg
mov
in
ret
jl
dec
mov
add
pop
push
inc
push
mov
mov
sbb
enter
and
fcmovne
rolb
stos
push
in
inc
jecxz
fwait
inc
in
sbb
stos
loopne
imull
push
mov
dec
js
cmp
dec
rorb
dec
xchg
ds
sub
mov
adc
stos
or
push
sub
popf
insl
push
sub
lahf
xchg
and
popf
lahf
xor
cli
cmp
pop
aad
repz
sub
sub
lods
or
pop
jge
test
insb
test
adc
pushf
mov
inc
and
sarb
outsl
rclb
ret
decb
in
aas
mov
stos
rclb
nop
ss
fwait
mov
in
jo
test
dec
pop
ret
mov
test
cmp
gs
fldenv
fs
xlat
xchg
ret
stc
mov
cmpsb
jne
cmpsl
scas
ret
add
es
pushf
cwtl
adc
popa
cld
ljmp
aas
sub
sbb
inc
adc
lods
xchg
cmp
push
dec
fidivrl
movsb
pop
bound
outsb
push
fsubrs
mov
push
out
jmp
pop
pop
and
ss
xor
xor
sbb
nop
nop
fistpll
jnp
push
fs
push
cmp
ljmp
or
mov
xor
push
bound
cmp
push
aam
jmp
jo
pusha
nop
ret
cmp
test
jne
fsubrl
repnz
mov
das
push
mov
push
je
lds
out
adc
or
sarl
pushf
sbbb
fwait
and
leave
mov
mov
lods
ret
loopne
or
xchg
int
incl
shll
push
mov
out
in
mov
add
jmp
loope
cli
jge
pop
loop
testl
mov
in
xlat
ficoml
cmp
xlat
ret
sub
in
imul
mov
and
add
jge
dec
inc
imul
hlt
dec
sbb
jp
inc
js
sub
xchg
pop
push
mov
es
loop
or
mov
dec
cmpsb
pushf
sub
push
test
fdivs
shll
add
insl
int3
dec
in
add
jmp
cmp
test
push
mov
scas
xchg
xchg
xchg
push
lret
mov
repz
into
pop
cmpb
pop
jl
int
mov
xchg
dec
push
xor
and
movsl
lds
sbb
mov
icebp
call
xchg
pushl
int3
aam
jl
movsl
clc
lds
in
xchg
rclb
xchg
mov
or
jno
push
and
repz
add
repnz
mul
mov
sub
jo
mov
xchg
inc
hlt
inc
add
call
add
mov
pop
and
ficomps
dec
pop
pusha
fisttpll
mov
cmp
mov
and
cmpb
xchg
mov
mov
lea
outsl
adc
push
sub
xchg
xor
mov
loope
cmpsb
mov
out
cmpsl
cwtl
rcrb
adc
fisubs
subb
mov
lahf
sahf
pop
mov
xchg
bound
push
mov
pop
lds
fdivrp
xor
fimuls
xorb
sub
lods
lahf
jmp
and
mov
sbb
ror
mov
lahf
or
test
or
jge
int
int
das
push
xchg
mov
xchg
or
push
movsb
add
xchg
cmc
sbb
je
inc
xor
adc
out
insb
sbb
xchg
lods
xor
lahf
mov
testb
aam
in
cmp
mov
loope
test
add
sub
fsubl
jg
fdivs
cmp
inc
stos
outsb
les
dec
xchg
cli
sbb
nop
or
pop
imul
xor
mov
or
xor
loop
inc
mov
mov
mov
mov
stos
hlt
out
insb
lret
fidivrs
imulb
or
fisubl
mov
push
inc
push
bound
inc
jg
pop
mov
pop
dec
into
sub
adc
pop
add
stos
ficompl
add
mov
and
cmc
jbe
mov
lcall
inc
dec
addb
test
mov
push
nop
sahf
fdivrs
leave
jns
mov
inc
xchg
loop
lret
ret
fsubs
add
push
or
pop
sarb
scas
std
arpl
cmc
cmpsb
push
aam
hlt
xchg
sbb
adc
mov
stos
rcl
adc
out
add
out
sub
xor
dec
inc
in
in
or
push
out
bound
pop
jmp
shrl
sub
lock
es
mov
jecxz
mov
and
push
cltd
stos
or
xchg
cmp
jnp
popa
rcll
push
push
dec
faddl
insb
add
imul
scas
cmpsb
lods
sbb
push
dec
test
aas
loope
mov
mov
jecxz
jl
ficomps
imul
sahf
lret
dec
mov
lods
pusha
mov
repz
ret
insb
mov
or
repz
leave
fwait
mov
and
hlt
int3
add
arpl
loope
fxtract
mov
int3
cmpsl
cltd
or
cmpb
hlt
pop
call
mov
sub
adc
pop
add
push
pusha
rorb
out
pop
and
ljmp
inc
inc
movsb
mov
mov
xchg
adc
push
test
std
and
or
aad
inc
or
andb
or
push
inc
push
insb
sti
data16
dec
loopne
mov
cmp
lock
inc
mov
xlat
ljmp
in
xor
xchg
cmp
mov
lcall
pop
fisubrs
dec
push
pop
add
lea
les
jecxz
mov
mov
test
sbb
hlt
aaa
adc
je
mov
xchg
mov
mov
mov
adc
xchg
out
jmp
movsb
shrl
jnp
xor
sub
lret
arpl
int
xchg
xchg
out
paddw
inc
rcl
and
adc
int
imul
or
test
push
or
fcoml
lods
rorb
icebp
push
jmp
repz
insb
fildl
cmpsb
mov
rorb
and
inc
lods
in
add
mov
pop
fwait
push
neg
repz
popf
push
inc
pop
stos
adc
adc
cmp
rorl
and
mov
dec
aad
sbb
inc
sahf
sbb
lcall
dec
lret
mov
movsl
aad
lods
inc
inc
outsl
jne
rcl
call
sar
repnz
xor
imul
mov
ljmp
scas
sarb
or
lret
insl
aas
push
fisttps
cmp
push
xchg
push
cld
into
int3
mov
or
cmp
mov
or
xchg
loop
daa
cltd
sbb
loop
and
inc
xor
cmpsb
adc
sub
shufpd
decl
cmc
out
ds
repz
adc
sub
ret
out
jmp
js
push
adc
daa
and
dec
jecxz
inc
xor
in
loopne
push
add
test
lret
mov
xlat
pop
mov
lcall
test
adc
mov
iret
out
jp
loop
jno
xchg
icebp
outsb
fdivrs
stc
xchg
push
in
imul
cs
pop
xchg
inc
pop
sarb
jmp
pop
ljmp
pop
ficoms
fsubl
in
lock
in
out
mov
mov
ret
cmp
ficompl
or
push
mov
mov
stos
cmp
adc
jl
xchg
and
push
popf
xor
test
mov
and
cltd
cmp
repnz
cmpsb
fwait
xchg
jnp
adc
adc
xchg
sbb
jp
aam
inc
mov
ja
mov
mov
repz
xor
push
stc
cmc
test
xchg
rcll
sub
push
test
fcmovnbe
movsl
cmpsl
jl
stc
jae
mov
movsl
loopne
xchg
inc
mov
adc
dec
clc
imul
adc
inc
sub
add
out
inc
cwtl
jg
pop
mov
and
and
out
jle
xchg
push
fsubs
cwtl
add
push
push
adc
fmuls
push
aas
inc
pop
mov
sbb
or
dec
jp
lcall
lcall
fidivs
loopne
mov
les
push
add
xchg
inc
xorl
push
pop
les
ret
xor
pop
push
cmp
cld
push
leave
outsb
adc
cmc
sub
cmp
xchg
push
in
or
ja
jns
xor
insb
sbb
pop
mov
lea
inc
shll
sub
clc
cwtl
cmp
xor
add
sbb
dec
insb
test
push
bound
cltd
lret
xor
cs
aas
inc
and
dec
in
pop
flds
cltd
sub
push
clc
mov
sub
lods
cs
gs
sbb
popf
jbe
test
or
ficompl
mov
dec
pop
push
jbe
mov
inc
push
sbb
test
xor
inc
sub
inc
rorl
mov
orb
add
or
nop
orb
mov
les
jbe
iret
pop
das
nop
xchg
fwait
mov
or
pop
pop
mov
xor
inc
sbb
nop
mov
mov
jle
mov
cmp
pop
sbb
ret
jmp
cmp
mov
adc
add
add
push
sbb
and
sahf
outsb
mov
mov
ljmp
xchg
mov
add
movsb
movsl
dec
cli
xor
push
inc
add
sub
cmpsb
les
push
fidivs
sub
shlb
xchg
inc
mov
mov
test
mov
std
ror
popl
jle
lcall
jb
inc
mov
mov
iret
ret
dec
fsubl
aas
xor
movsb
test
and
fimuls
ret
adcl
push
clc
cld
flds
sbb
xor
sarb
dec
out
mov
jno
stos
cli
movsb
inc
sub
leave
or
test
pop
fdivs
add
lret
ljmp
dec
mov
push
mov
pop
jb
or
test
lock
jl
sbb
pop
stos
push
pop
arpl
clc
xchg
fldt
sahf
inc
pop
dec
loop
xchg
dec
dec
subl
xor
pop
mov
stos
or
sub
hlt
cmp
in
xor
dec
inc
in
orb
gs
cmpsb
mov
mov
jle
outsl
adc
mov
jmp
jmp
add
xor
scas
xor
adc
sub
adc
pop
sahf
add
loopne
popa
mov
data16
xchg
cmc
ret
and
jbe
xchg
dec
cmp
xor
pop
pop
sbb
jl
out
cmp
lods
mov
xor
stos
and
push
fs
mov
xlat
pop
loop
ret
push
inc
pop
in
les
pop
sbb
xlat
cmp
rcr
and
xchg
jmp
outsl
mov
fs
call
shlb
in
xchg
leave
mov
dec
mov
shll
mov
subb
mov
movsl
jnp
add
cli
mov
je
xchg
push
aam
mov
cmp
jne
push
repnz
mov
add
ljmp
mov
sbb
sbb
mov
cld
jl
add
pop
xlat
enter
out
out
jae
hlt
jmp
or
cld
aam
xor
mov
lret
lcall
add
mov
push
push
and
fldenv
push
xchg
aaa
dec
pop
test
ja
mov
xchg
clc
cld
movsb
pop
xor
mov
cmpsb
jnp
or
jle
sbb
pop
stos
subb
jnp
xchg
xor
cmp
call
xchg
sbbb
push
aam
adc
outsl
cmp
pop
nop
cmpsl
ljmp
pop
push
inc
push
mov
inc
test
lss
and
fdivl
aas
adc
roll
outsb
popf
or
bound
cmp
mov
sub
pop
mov
sub
mov
fs
inc
leave
dec
xor
stc
push
andl
idiv
jge
push
jbe
into
add
fldl2e
cmpsb
sub
inc
push
push
pop
sub
xor
jl
mov
xchg
sbb
xchg
ja
repz
dec
adc
ss
shrb
sbb
mov
jl
dec
cltd
add
inc
dec
mov
call
jns
scas
fucomip
jl
int3
cs
add
mov
and
cli
gs
mov
xchg
bound
cmp
xchg
loope
popf
sbb
xlat
xor
je
movl
inc
gs
stos
test
test
ja
cs
sbb
mov
jge
adc
test
fimull
hlt
cmovno
fidivs
shll
aad
loopne
iret
inc
pop
stc
repz
mov
sub
repz
out
adc
mov
jge
xchg
xchg
dec
ja
xchg
and
cmpb
mov
decl
fwait
daa
adc
fists
sti
sub
sub
adc
push
repz
cmp
pop
iret
lock
cmpsb
adc
ja
icebp
push
mov
ret
fwait
add
mov
shll
pop
sbb
imul
mov
jl
xchg
enter
sub
push
cmpsl
mov
syscall
frstor
jg
and
push
dec
frstor
pop
jl
inc
xchg
je
pop
inc
xchg
push
inc
xchg
cwtl
pop
aad
cmp
mov
ret
add
inc
outsl
into
js
stos
testl
sbb
std
jo
push
adc
jns
mov
pop
push
push
insl
add
push
ret
mov
rorb
divl
or
out
stos
mul
std
scas
sub
dec
incb
insb
add
mov
sarl
loope
mov
sbb
stos
mov
sarl
push
and
push
mov
push
jl
fnstenv
and
xor
idiv
push
dec
hlt
mov
cmc
xor
jmp
sub
stc
mov
pop
or
adc
adc
aas
in
push
icebp
aas
push
dec
cmp
add
sbb
adc
loopne
sub
add
les
pop
sub
cwtl
shrl
sahf
jmp
clc
xor
sahf
stos
cmp
xchg
inc
out
outsl
enter
shrl
rolb
jecxz
je
mov
imul
test
test
jmp
sbb
jne
in
mov
jmp
mov
stos
sarb
mov
inc
mov
or
loop
data16
fwait
test
lcall
lahf
fisttpll
push
leave
pop
cmpsb
lret
aam
pop
sbb
cmp
sub
fwait
or
cmp
cs
sbb
loop
ss
jg
outsb
jg
xor
add
daa
in
cwtl
cmc
xor
add
fadds
pop
sbb
sbbl
insb
out
lods
dec
mov
insl
adc
sbb
ret
cmp
and
dec
nop
out
push
jge
mov
mov
inc
sbb
in
and
mov
mov
mov
inc
shll
sbb
adc
add
inc
dec
daa
lcall
lods
and
dec
fwait
cwtl
shrb
iret
testl
sub
dec
insb
dec
cltd
push
ss
sbb
xor
adc
aas
leave
add
adc
aas
add
scas
addr16
out
dec
mov
imul
mov
xlat
add
jb
lods
ja
in
leave
mov
lahf
nop
add
test
mov
fnstsw
adc
aas
stos
repz
adc
xor
inc
rorb
arpl
negb
out
iret
out
add
mov
xchg
push
push
mov
sbb
int
dec
adc
dec
test
jecxz
incb
out
mov
jbe
inc
mov
ljmp
cmp
dec
xchg
jb
jne
pop
jmp
dec
in
mov
popf
pop
jle
mov
adc
int3
inc
xchg
out
aas
sbb
into
ret
mov
rolb
cmp
sub
mov
xor
cltd
shrb
xchg
enter
scas
mov
xchg
jb
jae
cs
xchg
mov
into
jnp
dec
mov
movsl
in
and
jecxz
jmp
jmp
add
adc
repnz
mov
xchg
mov
loopne
inc
sbb
push
aaa
inc
std
and
sarl
add
out
or
mov
in
sub
mov
in
sub
jle
inc
mov
or
mov
mov
adc
mov
push
and
sbb
ljmp
es
aas
xchg
insl
lods
clc
sbb
push
dec
ror
mov
add
sbb
inc
xor
loop
jno
mov
pop
push
mov
mov
outsl
adc
dec
outsb
mov
push
inc
out
pop
ja
cwtl
test
jae
les
push
fiadds
je
mov
add
push
mov
jne
mov
cmp
fistps
orb
aaa
sub
jle
add
xchg
push
jne
push
jno
xlat
bound
and
lahf
in
or
cld
xchg
and
aam
notb
dec
sub
ds
pop
push
xor
cmp
dec
shlb
ss
mov
out
aam
aas
aad
inc
dec
int
mov
sbb
clc
out
cmp
addl
call
test
sub
mov
xor
jbe
jle
xchg
cs
call
add
fs
push
cmp
push
outsb
sub
push
pop
aaa
jmp
cmpsl
ret
xchg
pop
cmc
dec
sub
test
adc
popa
std
xlat
dec
pop
push
push
or
sti
xchg
repz
push
add
sahf
lcall
dec
sub
mov
xor
loope
add
pop
inc
push
xchg
in
je
out
mov
out
lcall
xchg
add
aas
push
or
aad
ss
cmp
popf
dec
push
or
cmp
rolb
es
movsb
xchg
cs
call
and
sbb
test
scas
gs
adc
insb
jge
sahf
repnz
xlat
mov
inc
mov
mov
cmp
nop
cwtl
hlt
inc
mov
sbb
fdivrl
add
fidivrs
push
jo
mov
std
jb
popa
inc
push
scas
push
stos
dec
scas
repz
sahf
imul
cmc
push
jne
jno
loopne
fdivr
xor
jns
cltd
mov
dec
fldenv
cmp
sub
cmp
mov
leave
cs
insb
sub
clc
shrl
mov
jo
mov
sub
sub
adc
xchg
mov
mov
test
cmp
jns
lcall
and
insl
sub
repz
shlb
lods
sub
sub
cmpsl
mov
in
sahf
pop
pusha
mov
cmp
std
sbb
add
and
inc
ret
fisttpl
ljmp
decb
fwait
mov
mov
loop
pusha
sahf
insl
push
pop
or
in
es
enter
outsb
pop
mov
aam
xor
sbb
lods
jl
push
xchg
imul
out
mov
icebp
out
outsb
cs
cmc
loop
ret
xchg
inc
jg
adc
or
loope
sub
rcl
fsincos
cwtl
xchg
pop
fstpl
shl
pop
sbb
sbb
aaa
dec
mov
sbb
cld
push
jno
push
mov
adc
mov
cld
dec
add
xchg
lcall
xor
sbb
je
cmc
outsb
arpl
pop
int
std
mov
and
pushf
enter
lret
mov
in
adc
add
int3
sub
popf
push
push
outsl
out
inc
out
sahf
dec
cmp
push
xchg
cli
mov
pop
cmp
inc
or
push
or
outsb
out
int3
dec
in
out
movsl
mov
sti
stos
mov
imul
mov
in
dec
outsl
mov
orl
int3
or
in
pushf
pop
mov
jle
mov
cmp
sbb
fadd
enter
dec
test
adc
add
unpckhps
imul
repnz
rep
ret
mov
sbb
add
and
movsl
outsb
sub
fwait
vandpd
leave
mov
xchg
pop
mov
adc
mov
aas
repz
inc
cmp
sbb
jbe
or
xchg
cltd
testb
lods
cmp
adc
mov
pop
pop
cmpsl
fsts
mov
addr16
cltd
lds
mov
daa
xchg
fwait
jg
cmpsl
inc
add
dec
dec
adc
fs
ljmp
mov
cld
arpl
push
inc
iret
nop
inc
jno
push
xor
push
lret
test
mov
movsl
shll
jb
stos
ficompl
dec
push
dec
lea
xor
sub
in
cmpsb
cs
stos
in
cmpl
mov
cltd
bt
fistpl
xor
add
push
fucomip
daa
add
insl
adc
fisubs
cli
mov
cwtl
sahf
vpsrld
or
push
daa
mov
push
sbb
ror
pop
adc
and
roll
sahf
sub
insb
test
dec
xor
inc
xchg
mov
clc
adc
or
addb
aam
xor
pop
xor
jo
aad
or
or
or
mov
das
ret
dec
xor
pop
push
dec
in
inc
orl
mov
pop
mov
rorl
jl
cmp
mov
adc
jmp
or
pop
inc
pop
sti
mov
xchg
repnz
sub
xchg
insb
adc
push
test
in
les
sti
out
out
shrb
xchg
ja
jnp
inc
cmpsl
imull
call
es
pop
adc
dec
push
xchg
cmpb
push
leave
in
push
mov
rcrl
dec
sarl
push
gs
out
push
mov
cmp
out
test
add
push
adc
lret
repz
and
xor
popf
add
js
test
dec
ret
push
scas
clc
mov
std
jle
fwait
jl
out
add
scas
mov
ss
shl
cmp
mov
pop
imulb
filds
rcrl
pop
sub
and
adc
pop
inc
fiadds
lahf
cmp
lcall
andb
ja
xor
sub
mov
and
push
aad
dec
mov
xor
mov
xchg
sub
int
jno
in
pop
xchg
dec
mov
inc
nop
outsl
jl
jae
jnp
and
jmp
cli
adc
negl
pop
mov
lcall
pop
loope
mov
or
xchg
sbb
adc
pop
jmp
aad
sub
jp
inc
cmp
addr16
or
cmp
and
sbb
add
push
loopne
add
loopne
cmp
les
push
pop
xchg
jne
outsb
inc
inc
and
jge
mov
xlat
call
lods
popa
cmp
adc
mov
dec
inc
xor
and
inc
or
and
jb
inc
inc
lcall
jle
mov
sub
xor
mov
jmp
push
xor
pop
call
test
cs
and
dec
mov
adc
dec
jne
pop
push
clc
mov
mov
jne
cmp
dec
lret
cmc
das
ret
out
or
outsl
imul
insl
cli
test
nop
loopne
in
out
mov
test
dec
mov
xchg
jo
push
cltd
xchg
mov
inc
sbb
pushf
pop
push
in
test
cmp
pop
fcmovnb
jl
xlat
out
push
scas
and
add
adc
inc
inc
pop
enter
jl
add
sub
sbb
jbe
stc
and
cmp
icebp
pop
and
dec
xor
push
push
xor
mov
cli
test
sub
adc
sbb
sub
jne
push
and
adc
sbb
inc
or
roll
and
call
movsb
sahf
jnp
dec
pop
sbb
xlat
test
pusha
test
pop
repnz
push
arpl
int
outsb
stos
notb
scas
pusha
bound
cmp
sub
cmp
shr
flds
leave
or
aad
sub
xor
mov
mov
std
aaa
mov
mov
mov
sub
mov
mov
dec
daa
sbb
pop
popf
xchg
ss
das
call
sti
aaa
pop
rcrl
and
inc
xchg
stos
or
std
dec
inc
dec
xor
cs
cmp
movsb
jle
dec
fldz
call
pop
sub
pop
enter
jmp
mov
repz
out
inc
jp
sarb
shrl
inc
rorb
cmc
xor
dec
inc
dec
loopne
dec
popa
rcrl
or
daa
sbbl
in
stos
outsb
sbb
aaa
mov
push
xor
pop
int3
inc
dec
into
or
adc
pop
clc
subb
movsb
popa
mov
cmp
or
in
scas
jecxz
lcall
cli
lret
and
mov
orl
push
pop
ret
incb
or
idivl
into
cltd
ds
jp
jnp
lods
into
int
nop
add
stc
push
shll
ljmp
push
sbbb
cwtl
mulb
lods
jle
pop
ficoml
mov
pop
push
and
icebp
sbb
xorb
fs
addr16
jle
dec
xor
dec
mov
add
adc
inc
push
out
in
inc
out
sub
ds
in
jno
adc
cmp
daa
sbb
mov
shl
push
out
popa
pop
in
adc
jl
xchg
mov
pop
mov
orl
rorl
jmp
insl
popf
sbb
and
mov
dec
xchg
dec
rep
mov
cmc
mov
setno
bound
cmc
xlat
xor
cmp
js
arpl
scas
mov
cltd
xchg
inc
hlt
mov
mov
xchg
fisubrl
dec
es
outsl
push
sti
loop
dec
pop
fs
inc
nop
push
adc
pusha
jp
ret
or
mov
adc
cmc
lret
sub
je
movsb
repnz
mov
mov
xchg
daa
fsubr
jg
adc
ss
addl
std
or
inc
mov
add
popf
aad
push
f2xm1
adc
es
in
mov
ss
xor
out
push
icebp
rolb
mov
cmp
xor
pop
adc
push
addb
loope
mov
and
inc
out
out
cld
fcompl
push
test
and
inc
or
leave
inc
push
or
inc
ljmp
aaa
test
cs
and
mov
shr
pop
cltd
lods
xchg
gs
sbb
fiaddl
xchg
jmp
inc
scas
jnp
xor
clc
lock
jb
cwtl
es
cltd
jge
pop
outsl
mov
mov
cmp
out
lcall
jne
test
xor
cmpb
test
cwtl
int3
pop
inc
lret
cmp
je
and
mov
out
xor
ljmp
loope
xchg
lcall
cmpsl
or
sbb
xor
gs
mov
sub
popa
or
xor
repnz
push
rcrl
cmp
orl
out
inc
jmp
lret
cmp
cs
xchg
fisubrl
inc
jg,pt
pop
js
in
mov
aas
cmpsl
push
adc
xchg
dec
in
xchg
xchg
and
ret
xor
call
cmpsb
push
lds
mov
push
clc
push
cmp
or
sbb
xchg
movsb
es
dec
xor
int3
and
xor
mov
daa
push
rep
xor
pop
jae
and
mov
xchg
jbe
leave
fwait
cld
fmul
fs
mov
inc
dec
mov
inc
dec
mov
test
stos
mov
dec
enter
mov
or
and
ss
insb
pop
sbb
fnsave
jns
mov
pushf
enter
pop
nop
insl
push
pushf
adc
sbb
fistpl
mov
aaa
inc
cmp
aaa
cmp
repnz
aaa
iret
xchg
jo
outsb
mov
lock
cmc
push
popf
xchg
fistpl
rorb
stc
nop
and
pop
mov
push
dec
push
aad
dec
mov
pop
mov
aas
cmp
adc
addl
in
into
mull
sbb
or
pop
inc
sub
and
out
or
or
xchg
sbb
inc
dec
dec
aas
xchg
lods
icebp
mov
pushl
leave
jb
cltd
mov
pop
ret
repnz
lret
mov
popf
cltd
mov
cmp
scas
out
imulb
add
testl
sbb
adc
sahf
jmp
xchg
push
jmp
test
enter
daa
or
mov
and
cmp
sbbb
scas
inc
pop
xor
inc
outsb
les
add
push
inc
nop
inc
cli
test
pushf
jns
xor
adc
add
ljmp
and
out
adc
and
imul
lock
dec
test
in
cmp
testl
gs
sbb
adc
subl
push
mov
bound
int3
cmp
shll
or
test
jnp
mov
cld
adc
pushf
jns
jl
jnp
mov
addr16
inc
addr16
stos
cmp
dec
or
mov
sub
mov
scas
add
push
sbb
popf
ljmp
sbb
or
jns
arpl
lret
negl
inc
or
dec
lea
mov
int
test
sub
test
mov
cmpsl
pop
jg
cmp
data16
cmpl
xlat
pop
cmp
jne
imul
mov
jns
adc
out
loope
or
pop
imul
int3
cmp
addr16
imul
ja
mov
mov
cli
lea
mov
mov
or
add
lcall
hlt
jo
mov
or
cs
push
mov
hlt
cmp
mov
les
inc
jg
cmpsl
sub
arpl
sbb
imul
and
dec
arpl
out
mov
test
cmpsl
cli
ljmp
add
outsb
jecxz
inc
dec
push
fldl
faddp
filds
mov
xchg
mov
xchg
fnstsw
xchg
stos
push
add
pop
mov
and
cmp
fdivrl
mov
jne
push
pop
mov
lods
lods
fwait
out
incl
mov
sbb
add
ds
loop
inc
in
add
sbbl
iret
add
inc
pop
push
sbb
cmp
adc
out
popa
andl
mov
xchg
cmc
and
pop
jns
dec
pushl
addl
or
subl
pop
pop
xchg
popa
aaa
fsts
xor
outsl
je
dec
imul
sbb
mov
push
movsb
popa
rorl
cmp
das
daa
jne
jnp
xor
aad
cwtl
jns
stos
inc
imul
jno
shl
jne
mov
loopne
aaa
sbb
xchg
rolb
xchg
xchg
cmp
cltd
jg
imul
mov
ret
icebp
sbb
cmc
mov
int3
sub
xor
xor
and
sbb
stc
popa
lods
dec
dec
std
ret
dec
sub
dec
pop
leave
mov
sub
subl
filds
push
orb
icebp
push
xor
pop
inc
sbb
popa
inc
stos
add
adc
imul
mov
repz
fldt
push
sbb
fdivl
pop
pop
xchg
in
fisttpl
pop
lds
decb
mov
roll
lcall
xchg
sbb
mov
mov
cltd
pop
fildll
pop
shl
outsl
in
imul
lahf
adc
push
repz
aas
and
xchg
adc
mov
enter
mov
ficoms
jl
pop
cwtl
int
in
dec
lods
aaa
mov
in
pop
sbb
or
add
repz
popf
call
fldenv
aaa
mov
in
cmp
insl
sub
cmp
dec
push
pop
rol
stos
cli
xchg
in
mov
std
lcall
jne
pop
inc
stos
xchg
mov
xchg
or
cltd
xchg
mov
aam
stos
fistps
sahf
sbb
lret
push
repz
mov
insl
lods
jb
jnp
mov
sub
nop
in
cmc
cmpsb
in
pop
inc
cmp
es
enter
addr16
adc
mov
cmp
xor
gs
fidivrl
adc
inc
jl
jp
mov
das
pop
or
jb
mov
lds
push
in
loopne
inc
js
test
or
je
xor
add
mov
mov
push
data16
mov
negl
pop
je
xchg
test
jl
xchg
pusha
jae
adc
push
push
fldt
nop
jo
popf
xor
fsts
mov
in
pop
cli
and
pusha
iret
and
fldt
mov
out
mov
pop
add
and
fistl
and
jg
push
cmpsb
jns
rcll
xor
dec
movsl
and
pusha
adc
sbb
ficomps
lcall
xlat
pop
cli
mov
add
lret
shrl
pop
pop
jg
repz
lods
or
sarb
lret
loope
fisttps
fcmove
xor
dec
mov
js
pop
aad
fs
push
push
xchg
pop
pop
cmp
adc
dec
imul
shlb
push
cmp
movsl
filds
mov
push
pop
dec
lock
lock
jecxz
xlat
mov
cli
aam
fisttpll
aam
mov
shlb
pop
jno
inc
test
mov
mov
xchg
push
scas
outsl
xchg
mov
add
in
mov
js
adc
or
mov
aaa
lock
inc
add
cmp
ret
xchg
loopne
sbb
repnz
lcall
negl
lahf
into
pop
jecxz
hlt
cwtl
adc
dec
test
and
add
int
or
scas
and
cmc
push
repnz
outsb
sub
scas
rolb
fdivs
mov
lret
and
dec
ficomps
data16
pushf
ds
mov
ret
test
sub
sub
lods
cmp
cltd
push
xor
or
cmc
mov
fsubrl
in
pop
int3
or
push
in
cmp
jge
lds
inc
lcall
icebp
dec
into
ret
scas
xchg
push
jne
push
iret
add
cmp
add
adcl
outsl
cld
ret
add
sub
lds
pop
aas
inc
rolb
int3
in
in
lds
scas
and
mov
jge
aam
jno
cwtl
sub
xor
lock
jle
push
das
jno
movsl
mov
xchg
gs
or
movsl
pop
insb
adc
and
in
push
fwait
adc
push
xor
aad
jne
mov
in
xchg
mov
jo
fsubl
mov
mov
pop
movsb
inc
int
push
scas
cmp
push
mov
jnp
push
xchg
jns
je
push
ljmp
jecxz
push
hlt
ret
dec
adcb
lcall
jns
push
mov
dec
popf
bound
mov
jno
cld
cmp
outsl
into
fcmove
or
data16
xor
inc
jb
sbb
cmpsl
stos
pop
test
iret
add
push
scas
jae
xchg
out
lahf
ljmp
jmp
jne
adc
jae
pop
int
push
loopne
mov
in
cmp
out
cmpl
xor
inc
aaa
jne
in
ss
adc
repnz
enter
icebp
in
mov
dec
push
outsl
pop
test
inc
mov
fiadds
into
mov
cwtl
mov
fwait
mov
fs
and
pop
push
sub
clc
add
out
lahf
into
push
popa
std
lahf
pop
clc
int3
shll
or
push
mov
js
fldcw
out
inc
xor
mov
sub
or
clc
lahf
sub
lea
inc
mov
sarb
cmc
mov
out
push
daa
mov
lods
sub
pop
imul
jecxz
xchg
or
mov
adc
and
data16
cmpsb
mov
sarl
sub
jge
out
sub
cmp
fsubr
test
loop
inc
dec
into
push
jnp
lret
fiaddl
scas
jnp
adc
cltd
notl
ja
xchg
push
jo
arpl
in
push
push
mov
inc
leave
cli
loopne
inc
loop
stc
push
adc
mov
jp
loop
sub
outsl
lea
out
enter
popa
es
and
aad
sub
ficoml
push
shrl
push
subl
mov
in
in
js
loop
int3
sbb
and
jo
mov
push
mulb
out
mov
hlt
in
pop
data16
xchg
repz
cmp
in
je
lahf
pop
jecxz
cmp
mov
push
ror
inc
cmpsl
mov
cmpsb
jg
adc
ret
push
into
cmpsl
mov
fmulp
pusha
or
out
sub
data16
and
pop
dec
xor
xor
inc
pop
push
dec
ja
test
iret
mov
insl
popa
inc
insl
pop
push
inc
add
in
cmpsb
cmp
bound
mov
add
fdivs
decb
add
int3
rcl
imulb
jne
lock
sub
shrl
jne
fists
mov
scas
xor
ret
ja
movsl
cs
xchg
scas
cwtl
and
xchg
sti
aam
fstp
sbb
pop
pushf
inc
and
mov
sub
and
popa
inc
jns
popf
cmp
or
or
fisubl
cli
int3
cmp
cmp
inc
lods
xchg
jbe
add
push
xchg
xchg
cld
roll
mov
add
add
in
scas
movsb
addr16
or
call
cmp
ss
cmp
mov
out
popf
rcpps
dec
or
or
push
loope
cwtl
and
ja
sbb
lea
adc
test
mov
and
outsl
ret
sbb
mov
push
xlat
jae
fsubp
inc
cmp
lock
loope
dec
push
mov
out
mov
aad
scas
mov
mov
cmp
push
dec
pop
lret
ljmp
push
rclb
hlt
cmp
sub
mov
jno
mov
les
movsb
jne
mov
movsb
stos
mov
push
mov
and
push
push
sarb
pop
out
decb
ret
inc
adc
fs
std
clc
movsb
mov
mov
sub
sub
inc
xchg
cmp
mov
or
std
iret
out
shlb
shrl
mov
xor
push
test
mov
cmpsl
sub
add
insb
int3
fs
fcmovnbe
call
cli
daa
or
jg
nop
movsb
movsb
sbb
mov
cmp
pop
xor
icebp
fadds
pop
ret
mov
cmc
push
dec
bound
xchg
ljmp
mov
add
pop
out
cld
pop
popa
add
lock
ljmp
les
filds
sti
cmp
sbb
test
xchg
push
adc
xor
mov
and
pushf
dec
loopne
xchg
ret
int3
shll
ljmp
mov
mov
or
ffreep
ret
adc
sbb
mov
andl
adcl
push
pop
pop
dec
pop
mov
push
pop
negb
xchg
xor
gs
sbb
rclb
pop
addr16
pop
mov
adc
loope
sub
jb
push
and
inc
jge
inc
xor
adc
cmp
aas
jbe
js
add
data16
fistpll
call
pop
or
inc
bound
jbe
outsb
sbb
mov
mov
xor
pushfw
jb
lret
mov
subl
xlat
jne
je
and
and
dec
stc
dec
int
push
hlt
cmp
fs
sbbb
mov
jae
test
xchg
dec
out
lret
or
push
inc
pushf
fdivl
adc
xchg
or
xor
pop
call
inc
fidivrl
repz
adc
movsb
fisttpl
ljmp
cmp
ja
outsb
jno
movsb
aas
imul
in
inc
or
je
jecxz
lret
dec
sub
mov
sub
xchg
movsl
push
bound
lds
cli
mov
pop
mov
cmpl
cli
jge
dec
jno
int3
jecxz
shlb
mov
cmp
xchg
mov
xchg
mov
ss
imul
mov
cmp
or
mov
lock
cmc
gs
push
fwait
scas
lcall
sub
cmp
dec
call
fsubrs
aas
lahf
loopne
mov
xor
cmpsb
pop
jne
adc
aas
sarb
mov
or
mov
sub
cmpsb
pop
aaa
sbb
dec
stos
movsl
inc
jo
decb
inc
in
lcall
inc
sbb
loopne
out
or
int3
xchg
imul
and
and
mov
ljmp
mov
jg
cmp
insl
jecxz
fs
push
xlat
loope
dec
imulb
bts
push
pop
cld
push
inc
dec
xchg
sbb
fsubrl
loope
mov
aaa
pop
fucompp
clc
lret
test
ficompl
rolb
and
inc
shlb
pusha
xor
loopne
xor
out
sbb
lock
aaa
xchg
adc
scas
mov
pop
mov
xor
in
pushf
inc
lock
xchg
jne
out
fcomps
jg
and
jg
outsl
inc
fsubl
add
notl
pusha
fs
shrb
lahf
push
sbb
enter
pop
xchg
jp
out
in
fdivrl
mov
xor
push
xchg
fsubrl
flds
loopne
push
add
sbb
and
mov
sbb
mov
jae
lds
or
jne
test
and
jne
stos
cld
push
xor
inc
jp
aaa
repz
imul
adc
cmpsl
inc
stos
jmp
dec
mov
enter
loop
jle
mov
lds
fwait
mov
pop
fsubr
mov
iret
sub
out
push
stc
jns
push
and
insb
rcrb
ds
in
sbb
out
fwait
inc
cmc
stc
fisubl
inc
mov
aam
mov
cmc
popa
inc
mov
fists
jno
push
rorb
imul
sahf
mov
call
xchg
dec
std
mov
mov
jge
or
into
and
stos
out
loopne
daa
jae
imul
sbb
xchg
dec
sarb
mov
scas
loop
ror
je
scas
data16
test
jecxz
imul
mov
xchg
lret
pushf
mov
pushf
pop
mov
mov
mov
mov
inc
push
in
xchg
add
jnp
pop
in
js
negl
or
imul
dec
xor
jo
test
and
pushf
sbb
lock
jae
icebp
das
cmpsb
arpl
lret
in
cmpsl
dec
dec
cmp
into
mov
mov
sub
roll
fdivr
jecxz
fs
mov
in
xor
push
xchg
push
xor
loop
add
jge
mov
mov
mov
sbb
and
cmpsb
sbb
inc
test
dec
dec
fwait
xor
sub
jo
daa
aad
jo
jmp
outsb
out
add
mov
jmp
dec
xchg
repz
adc
xor
mov
aaa
addb
xor
in
aaa
ficomps
mov
mov
xor
sub
inc
ds
nop
orl
cli
mov
pop
cli
mov
outsl
test
push
insl
outsl
push
icebp
pop
xchg
fisubrs
jnp
and
pushf
enter
jnp
sub
add
dec
ljmp
lock
add
fcmovne
xor
daa
mov
daa
xchg
mov
dec
stos
fcomip
dec
data16
pop
gs
mov
cmp
adc
mov
call
push
jge
lcall
xchg
es
jno
insb
lcall
jo
mov
xchg
lds
jo
pop
gs
and
jecxz
lds
in
mov
sbb
jne
aad
cmp
jae
sub
mov
sbb
fistpl
leave
mov
cmp
sbb
cwtl
repnz
out
add
lret
push
rcr
mov
loop
sub
xor
jmp
push
cwtl
ljmp
mov
in
xchg
decl
jae
imul
sub
decb
inc
sbb
orl
push
pop
insb
pop
jbe
es
cs
pop
adc
cmp
nop
jecxz
mov
iret
jmp
and
or
shlb
leave
xchg
inc
stos
je
rcrb
pop
cmp
ror
and
push
hlt
push
js
mov
fnstcw
lds
add
jbe
sub
cmpl
dec
arpl
cmp
xor
sbb
ret
push
mov
sub
gs
mov
xchg
loop
sub
and
arpl
mov
shrb
mov
int
lods
fcom
sbb
jle
js
je
xor
jno
sub
rolb
pop
jge
ja
xor
addr16
xor
leave
leave
daa
sbb
pop
enter
sahf
mov
lods
repz
jecxz
shlb
jmp
cmp
push
add
jp
leave
dec
push
mov
inc
mov
adc
test
xor
addl
int3
mov
sbb
sub
pop
sub
in
push
and
cmpsb
into
ret
nop
jle
movsb
leave
add
in
push
gs
data16
adc
jmp
pop
pusha
xor
aam
repz
jmp
cmp
push
xor
mov
popf
adc
mov
jne
or
adc
imul
or
xor
jg
jg
mov
jnp
adc
into
mov
sti
mov
add
test
jns
insl
loop
insl
mov
dec
out
rcr
inc
addr16
jnp
xchg
push
fsubl
inc
jl
or
lds
jbe
add
scas
int3
lock
inc
icebp
jmp
loop
shrl
cmp
sub
mov
mov
fwait
pop
xchg
mov
outsb
shll
jge
movsl
xchg
xchg
test
sub
les
cmpsb
cmpl
jmp
int
shrb
enter
pop
xorl
lret
cld
add
sbb
call
test
movsl
std
mov
push
mov
pushl
inc
daa
iret
push
jle
iret
jno
adc
pop
adc
and
aas
inc
mov
add
inc
dec
pop
data16
aad
sbb
sub
inc
roll
mov
sbb
std
jb
lcall
xchg
js
cmp
in
pop
jns
mov
jmp
ss
popa
js
dec
jmp
sbb
xchg
lahf
and
push
aad
jmp
addr16
dec
jo
leave
sub
fbld
movsb
cli
add
mov
mov
shlb
inc
lods
icebp
push
lods
lret
lcall
adc
mov
cmpsl
fisttpl
jne
nop
push
and
gs
and
aaa
inc
sahf
ret
ja
addb
jb
out
push
js
jbe
jp
fdivl
cmpsl
dec
lock
mov
nop
in
inc
jge
lock
jecxz
bound
call
test
stc
scas
sbb
push
fcomi
lods
arpl
ds
iret
daa
cmp
mov
add
adc
imul
or
pop
test
sahf
dec
xor
push
xchg
inc
sub
or
aas
or
repnz
xchg
fimuls
cmp
sub
jo
push
into
movsl
sub
shr
outsb
outsb
and
call
aas
sbbl
push
frstor
test
imul
dec
div
cmp
push
cmpsl
pop
jmp
mov
lret
xchg
scas
mov
add
sub
movsl
outsb
ficomps
cs
cmc
fldpi
imul
and
and
aam
fcmovu
push
out
push
icebp
pop
repz
in
out
jmp
pusha
fbld
insb
jecxz
aad
xlat
outsb
fcmovnu
int
int3
loop
in
idivb
add
push
ret
adc
sbb
es
xor
ds
cmp
shlb
fidivl
in
out
es
sub
push
add
or
adc
push
push
sbb
and
das
pop
sub
cmp
dec
dec
dec
push
dec
pop
dec
pop
inc
arpl
inc
ja
icebp
mov
movsbl
mov
mov
mov
mov
test
stos
xor
mov
push
cmpsb
push
cwtl
pop
imul
jae
jge
xchg
xchg
sbb
push
cltd
adc
push
xor
dec
mov
push
sbbb
xchg
imul
jg
jns
xorl
xchg
jbe
push
scas
xor
pop
insl
mov
lret
or
or
or
in
add
add
test
jge
outsl
xchg
jno
jae
jne
stos
imul
arpl
rcll
mul
adc
jl
out
repz
repz
xchg
movb
adc
aas
and
inc
aaa
inc
mov
mov
mov
fnsave
jmp
cmc
stos
ljmp
or
xchg
sbb
and
xor
inc
sub
push
lods
pop
scas
pop
mov
ja
icebp
sbb
sbb
adc
adc
or
or
add
dec
add
push
push
clc
pop
loop
xchg
outsl
xchg
jae
jge
xchg
adcl
lahf
ss
sub
xor
dec
cmpsb
dec
cwtl
push
lcall
imul
mov
mov
fsubrs
insb
mov
jp
test
xchg
mov
jp
jl
jle
xorb
hlt
test
clc
mov
xchg
in
popf
out
cmpsl
lock
out
call
int
xlat
loopne
rcr
shl
pop
push
out
inc
call
push
push
inc
add
dec
adc
push
inc
sbb
inc
sub
ss
les
shlb
stos
ljmp
mov
push
cwtl
adc
cs
sub
xor
sub
push
scas
pop
mov
insb
cmpsl
jbe
lock
sbb
or
adc
sub
cmp
pop
add
insb
mov
jp
test
mov
mov
xchg
cmp
mov
aaa
mov
sub
push
mov
outsb
cltd
push
lahf
xchg
xchg
xchg
sahf
mov
out
arpl
or
mov
ret
xchg
popf
leave
mov
ret
stos
and
daa
cmp
and
jno
jae
jne
pop
dec
arpl
pop
imul
popa
pop
arpl
pop
push
pop
pop
gs
imul
addr16
insl
push
jae
imul
loopne
sahf
adc
movsb
das
mov
int
mull
pop
push
insl
mov
bound
int
cmovbe
dec
pusha
pop
addr16
ffreep
push
mov
mov
xor
mov
pop
mov
push
inc
cmp
mov
adc
cmpsl
adc
aad
mull
test
pop
and
push
pop
out
popl
add
out
shl
push
notb
test
mov
cwtl
and
mov
mov
mov
mov
icebp
out
loopne
hlt
in
sti
filds
adc
inc
sub
xor
inc
cmp
jl
mov
not
es
pop
adc
push
dec
mov
mull
sti
lahf
outsl
mov
lret
ja
jnp
outsl
aad
xchg
stos
mov
jl
add
adc
sbb
enter
lcall
jae
cmc
xor
pop
out
xor
adc
rcrb
je
int
cmpsb
mov
and
lods
jo
pusha
stos
sbbb
dec
call
cmp
out
insl
fildl
fdivrs
mov
xor
stos
call
dec
jp
xchg
dec
lcall
inc
jno
jb
and
subb
mov
mov
or
sbb
sbb
jno
jl
repz
insb
xlat
sub
test
aam
out
mov
mov
in
aas
inc
mov
test
std
aad
sbb
dec
push
cmp
xor
xchg
test
mov
adc
sbb
lds
xchg
sub
mov
adcb
and
jle
xchg
out
in
fmulp
loopne
dec
adc
lahf
cli
and
sbbb
xchg
mov
add
out
fdivrs
sub
mov
int
or
pop
adc
adc
imul
xchg
push
cwtl
sbb
repz
adc
pop
test
mov
popa
nop
mov
mov
sbb
add
or
ror
lret
mov
dec
mov
mov
mov
movsb
cwtl
cltd
lods
mov
add
push
and
sub
aaa
sub
clc
push
inc
cmp
inc
inc
jne
jae
and
nop
lods
xchg
xchg
mov
enter
dec
cmp
loope
or
inc
cmp
mov
or
dec
mov
frstor
ret
stos
iret
lret
cli
shrl
rolb
mov
mov
insl
sbb
iret
and
add
or
xor
mov
rolb
ret
insb
test
push
hlt
outsl
mov
jmp
ret
sub
dec
push
pop
xor
inc
clc
cmp
fs
push
mov
stos
fnstenv
into
adc
pop
std
or
bound
pushf
cmp
mov
xchg
aad
sbb
pop
and
push
mov
mov
nop/reserved
inc
sub
js
mov
mov
inc
scas
and
xor
xor
call
stc
ja
fdivrs
pop
stos
mov
imul
sbb
lret
lret
push
jmp
fildl
out
xchg
cmp
adcl
movsl
stos
mov
sub
cmp
cmp
cmp
cmpl
xor
mov
in
push
and
push
xchg
ret
xor
cmp
xor
xor
ficoms
repnz
inc
call
or
inc
sbb
jl
lcall
fildll
clc
or
cmp
int3
clc
cmp
repz
xchg
adc
pop
fnstenv
inc
xchg
jge
jae
mov
neg
or
arpl
inc
adc
ret
aam
fnstsw
push
movsl
es
outsl
mov
ljmp
fiadds
hlt
loop
lock
hlt
cli
outsb
insb
js
subb
adc
xchg
rorl
xor
push
arpl
fs
imul
or
xor
inc
je
jnp
cmpb
inc
mov
cmpsb
stos
mov
mov
jecxz
les
sti
loop
xlat
icebp
jecxz
or
adc
fwait
xor
ds
dec
pusha
mov
cmpsb
cmpsb
imul
cmp
and
int3
sbb
test
xchg
ljmp
mov
test
push
rolb
push
xchg
cs
or
out
mov
fsubr
push
sub
jge
mov
or
jae
sub
sbb
ret
mov
decb
repz
mov
push
inc
jne
xor
jb
jnp
fs
fisubs
push
pop
jae
je
push
test
ret
in
jmp
cmpsb
sbb
das
and
mov
sub
scas
push
mov
movsl
test
aaa
ja
jns
imul
mov
mov
cmpb
jge
mov
pop
dec
pop
dec
pusha
dec
push
pop
xchg
shrb
adc
or
sbb
pop
adc
sbb
sbb
push
xor
cmp
lahf
mov
int
rorb
fst
cmpb
out
jl
push
mov
and
sub
inc
cmp
aaa
cs
pusha
insl
pop
mov
xchg
xchg
adcb
add
lret
add
add
jnp
pushf
push
negb
pop
xchg
ret
rcl
aam
ror
fmulp
loop
out
es
sbb
mov
sahf
rol
ret
ficoms
rolb
cmp
cmp
xchg
jle
push
lret
cmp
loope
out
adc
adc
adc
jne
dec
mov
iret
jb
pop
xor
pop
mov
inc
push
enter
and
cmp
dec
daa
pop
repz
jo
jmp
or
xorb
pop
pop
insl
pop
bound
cltd
mov
lods
inc
push
sbbl
inc
lock
push
lahf
cmpl
sub
push
dec
sbbb
mov
mov
int
pop
jge
mov
movsb
pop
push
ret
push
fcmovnb
and
xor
mov
dec
lahf
mov
ficoms
ljmp
mov
ljmp
sarb
enter
sbb
or
mov
and
dec
or
cmp
push
in
push
negb
xchg
dec
inc
xlat
jns
sbb
mov
inc
cmpsb
lods
scas
cmc
push
inc
testl
inc
leave
ljmp
xchg
call
xor
jns
mov
mov
test
decb
jecxz
xchg
sbb
push
mov
pop
cmpsl
inc
lods
fisubrs
inc
icebp
mov
mov
jmp
int
fisubl
pusha
push
lea
pop
insl
popa
or
xchg
jae
push
dec
or
cmc
gs
mov
jno
jle
cld
mov
jle
mov
nop
hlt
xchg
out
mov
pushf
cltd
inc
sahf
test
lea
mov
push
das
mov
mov
cmp
icebp
cmp
inc
in
cmpsb
push
dec
dec
dec
dec
push
dec
pop
dec
push
inc
pop
inc
pop
inc
imul
cmp
ja
insb
xor
jbe
xorl
sub
orb
xchg
mov
mov
popf
mov
sub
sub
sbb
jnp
inc
shrl
push
out
ljmp
dec
loope
push
pop
or
jl
jle
jo
jb
je
jbe
push
mov
pusha
xchg
pop
xchg
dec
dec
mov
ja
sbb
addr16
orl
xor
mov
pop
pop
movsb
pop
das
icebp
xchg
jmp
cmc
xchg
dec
lahf
pop
mov
stos
movsl
in
push
cmc
add
and
das
repnz
sub
jmp
outsl
push
iret
scas
out
pusha
or
in
stos
out
xor
inc
or
push
pop
pop
dec
fadds
jne
jo
test
popa
pushf
pusha
lods
mov
dec
mov
jg
test
mov
xchg
mov
mov
push
imull
jecxz
shl
xor
std
inc
repz
add
add
pop
test
test
in
adc
push
or
pushl
mov
sahf
and
push
xor
inc
add
inc
add
insb
mov
xchg
aam
pusha
mov
add
pop
pop
outsl
and
and
mov
mov
cmp
insl
inc
jp
add
cmp
inc
movsw
je
jns
ss
out
adc
icebp
xlat
inc
inc
mov
mov
cmp
mov
cmp
popf
cld
scas
shlb
pop
mov
loopne
out
or
loopne
cmovl
stos
lods
fcompl
mov
dec
dec
pop
fdiv
xchg
lret
imul
fmul
fmul
out
mov
mov
fiaddl
or
mov
xchg
mov
pop
cli
data16
fwait
xchg
test
movsl
jecxz
mov
sti
jo
ret
addl
aam
ljmp
stos
mov
sbb
fstl
and
jb
aaa
mov
mov
cltd
mov
mov
jmp
push
faddl
sub
or
rcrl
pop
push
pusha
mov
mov
leave
mov
fmull
aam
loopne
int3
push
popf
xor
dec
mov
out
add
out
sub
fs
adc
loopne
push
dec
pop
jbe
xor
jp
gs
fucomip
sbb
sub
insl
dec
loopne
je
ja
xchg
popl
mov
jl
daa
mov
mov
lock
into
inc
ficompl
pop
stos
and
dec
xchg
xor
dec
jnp
ss
jle
sub
jg
push
adc
push
jle
add
sbb
lret
lods
push
or
dec
sub
ja
cwtl
mov
jmp
sti
sti
mov
xchg
in
mov
mov
or
dec
arpl
push
data16
mov
in
dec
ljmp
jecxz
in
adc
mov
and
xor
inc
rorl
xor
pop
jg
add
fdivrs
xchg
adc
pop
mov
adc
inc
sbb
adc
fdivrl
shlb
movsl
loop
fstpl
sbb
nop
stc
shl
xor
inc
cltd
dec
popf
push
jno
ja
pop
cs
test
adc
xchg
or
or
xchg
insb
imul
mov
cmpb
and
scas
pop
cmp
insl
test
cmpsl
jns
out
aad
lret
je
mov
int
sub
daa
inc
xor
push
or
pop
test
nop
add
inc
or
or
pop
mov
jle
sub
inc
sbb
jbe
rorl
dec
cli
pop
sub
bound
adcl
dec
stos
and
jge
cld
xor
mov
sar
pop
out
icebp
xchg
jecxz
in
out
jmp
stos
and
lds
iret
icebp
movsb
push
in
nop
mov
imul
lds
cli
mov
xorb
sub
push
addr16
or
adc
push
and
jnp
les
mov
push
push
jl
mov
jecxz
pop
faddl
hlt
cmc
xchg
push
jns
mov
add
out
lods
or
push
lods
adc
sbb
ret
or
lret
push
xchg
sbb
dec
hlt
pop
xchg
jg
mov
cwtl
mov
ret
pop
lret
push
add
cs
push
out
push
mov
dec
sbb
in
cmpsb
pop
gs
push
xchg
jbe
mov
jp
ret
stc
popa
aas
mov
lock
into
add
sub
jg
insb
sahf
push
push
je
jle
mov
xorb
popa
leave
cmpb
test
mov
mov
xlat
in
xchg
push
adcl
inc
pop
std
call
sbb
enter
or
imul
popa
push
jnp
test
jp
or
and
ret
mov
mov
lret
aaa
shll
xlat
mov
popa
jge
sbb
punpckhbw
dec
cmp
push
push
or
jg
xchg
cmpsb
pushf
je
and
xchg
fmull
dec
jbe
pop
inc
inc
fstl
imul
pop
insl
clc
push
lret
or
es
or
aas
std
pusha
sbb
pop
repnz
xchg
stos
test
lret
icebp
pop
fiadds
std
in
fs
xor
dec
in
pop
popf
pop
jo
mov
mov
inc
ljmp
xor
add
std
mov
xchg
pop
xchg
xor
inc
test
jns
jb
fld1
push
bswap
pop
movsb
aad
inc
and
arpl
pop
popa
inc
popf
push
mov
call
jne
sub
mov
add
popa
pop
mov
int3
adc
mov
das
sbb
testl
mov
rorb
mov
repnz
xor
jge
mov
fadd
xor
je
pop
mov
jmp
xor
enter
out
in
clc
pop
hlt
mov
imul
insl
sub
and
js
mov
ds
sysenter
mov
rcll
inc
fnsave
cmc
xor
outsl
push
pop
jne
movsl
std
mov
movsl
jnp
shlb
sub
or
ja
sbbb
cmpsl
xchg
fimuls
mov
add
fdivrs
xchg
cmp
call
and
dec
pop
jmp
xorl
addb
adc
and
lcall
outsl
mov
sbb
fcmovnb
shrb
insb
ds
and
out
jb
pop
insb
insl
add
mov
pop
push
cmp
lahf
cmovge
pusha
lret
clc
lahf
fdiv
add
pop
icebp
pop
lcall
insb
shrl
inc
xchg
adc
stos
inc
addr16
movsb
and
lock
sbb
dec
ret
int
dec
pop
enter
mov
push
push
lock
std
cmp
sti
stos
mov
sub
mov
pop
scas
clc
mov
js
out
fistps
rorl
loope
popa
cmp
xchg
arpl
cwtl
iret
cmpsb
imul
mov
sahf
rcrb
lcall
sub
cmpsl
sub
jo
lcall
cwtl
repz
jbe
pop
nop
sub
push
jecxz
test
pop
mov
sbb
pop
xchg
cmp
out
addr16
repnz
xchg
sahf
adc
mov
sub
xor
cmpsb
push
lock
outsb
fldcw
loop
jecxz
pop
bound
push
stos
aad
push
adc
xor
cmpsl
push
xchg
in
and
push
mov
fs
push
mov
fsubs
fistpl
xchg
lcall
mov
sti
call
enter
dec
pop
push
push
shrb
or
mov
inc
lcall
adc
aam
sbb
and
sbb
inc
sub
and
pop
nop
into
scas
fsts
cld
lea
inc
movsl
pusha
stos
add
mov
add
and
cmp
pop
ja
fnstcw
sbb
dec
adc
gs
out
clc
sahf
push
int
jg
aas
scas
dec
pop
es
xor
xorl
mov
cmp
or
sbb
dec
pop
lock
mov
jmp
xchg
outsb
pusha
cwtl
movb
in
inc
push
pop
dec
xchg
add
mov
loop
xlat
sbb
aaa
les
lods
sbb
mov
jg
out
into
adc
add
imul
or
push
aam
inc
xor
sub
shll
xor
ja
and
aas
fdiv
inc
into
pop
inc
bound
shll
dec
mov
or
gs
addr16
pop
decb
pop
or
test
out
pop
clc
cmp
mov
cwtl
shlb
stos
add
and
xchg
aad
rcrl
stc
dec
sbb
out
sub
mov
xor
jo
mov
mov
bound
shlb
pop
jge
cltd
outsb
leave
ss
ret
insl
popa
scas
sahf
imul
into
sub
inc
push
xorb
cwtl
mov
adc
sbb
in
or
arpl
out
enter
sbb
daa
faddl
addr16
cmpsl
out
popf
dec
loopne
popf
aaa
daa
imul
cmp
nop
mov
sbb
xor
aaa
pop
mov
les
loop
cmp
dec
mov
cmp
jbe
add
lahf
dec
xchg
imul
mov
adc
jecxz
test
inc
jge
mov
mov
push
jbe
mov
out
cmp
push
fcoml
iret
scas
xor
push
addb
sbb
ficoms
mov
pop
pop
adc
mov
test
das
aas
cmp
test
jle
dec
insl
cmc
fsubr
xchg
adc
cmpsl
stos
fmulp
xor
lods
cmc
into
jno
stos
jb
mov
jb
jbe
sbb
icebp
aaa
mov
mov
or
jns
pop
sbb
mov
imul
inc
push
ret
xchg
rolb
imulb
orb
daa
ja
outsl
repz
adc
ss
xor
cltd
enter
stos
jecxz
jge
push
xor
clc
imul
int3
cld
pop
dec
les
push
sbb
and
cs
jns
inc
test
pop
subb
cmc
jg
jno
jae
inc
push
insl
adcl
cmpsl
and
fmuls
scas
test
bound
sbb
jle
fldt
jae
sbb
cmp
mov
ret
imul
fimull
adc
jg
out
bound
adc
or
aad
xor
arpl
cmpl
bnd
out
adc
mov
push
lahf
mov
mov
pop
xchg
addb
sbb
adc
iret
xchg
loop
lcall
rclb
mov
inc
xchg
js
enter
shr
xor
add
or
jge
jecxz
mov
dec
sub
pop
add
mov
cmp
outsb
fldt
pop
aas
shll
dec
in
xchg
repnz
les
aas
call
mov
adc
lds
mov
out
xchg
adc
add
xor
mov
sub
sub
aad
popa
mov
idivl
mov
sub
jle
dec
inc
fsts
repz
sbb
call
cmp
dec
or
cmpsb
mov
lret
pop
adc
xor
mov
or
or
xchg
or
cltd
jg
scas
xchg
ror
cli
lret
adc
push
adc
xchg
add
xlat
loop
mov
push
cmpsl
dec
arpl
mov
aas
jbe
aad
pop
dec
jmp
cli
lahf
filds
rcl
mov
out
sti
ljmp
and
mov
mov
sub
fidivl
lods
nop
sub
push
push
push
data16
test
fdivrp
cs
cli
in
inc
inc
add
jnp
data16
push
stc
push
cmp
sbb
cmpsb
push
mov
xchg
mov
xchg
scas
lahf
test
ret
arpl
in
neg
stc
mov
cld
aaa
fcomi
sbb
fs
js
sub
pop
mov
xchg
push
stos
int3
mov
adc
pop
xchg
sbb
push
push
mov
jns
xchg
lcall
adc
push
mov
mov
inc
xchg
lds
jp
jle
movsb
push
out
xor
fsubrl
jnp
jge
fsubl
int
pop
call
dec
mov
mov
mov
in
cmp
int
icebp
and
sub
inc
lret
pop
pusha
jl
adc
test
out
xchg
lcall
mov
rcl
jg
cmp
and
lahf
push
hlt
cmc
sahf
movsl
mov
jae
mov
add
roll
push
cmp
jo
neg
pmuludq
lret
xor
fs
xchg
cmp
ret
dec
lea
jp
pop
aas
or
pop
imul
cs
mov
fidivrl
sbb
dec
hlt
xchg
inc
sbb
mov
ss
cmp
sbb
adc
sets
mov
inc
fldl
cmpsb
pushl
repnz
sub
sub
xlat
enter
jmp
outsl
xchg
jl
pop
cmpsb
jae
call
jne
inc
fsubl
mov
and
out
xchg
mov
adc
stos
cmpsl
add
mov
adc
mov
mov
jmp
xor
xchg
xor
mov
enter
mov
mov
xchg
xchg
pushl
movsb
cmp
in
ljmp
cwtl
inc
in
and
pop
jmp
iret
push
add
fs
cmp
mov
scas
cmpsb
out
je
cmpl
sub
pushf
cmp
sub
jns
mov
xor
fsts
lods
sbb
fsts
cmpl
jb
xchg
xchg
sbb
lods
inc
movsb
add
imul
add
jecxz
mov
insb
cltd
stos
xor
gs
stos
cmpsb
mov
pop
mov
addr16
scas
push
int
out
xor
leave
mov
test
je
jne
das
arpl
icebp
mov
fiadds
mov
xchg
lahf
sbb
sub
stos
pop
les
push
pop
test
divl
les
mov
xchg
das
xor
imul
push
fimuls
bound
sbb
neg
add
repz
arpl
pop
aas
out
rclb
push
jo
ficompl
xlat
jnp
test
sbb
mov
or
in
push
ret
sub
mov
push
push
pop
sub
mov
addr16
push
adc
xor
dec
loope
inc
xor
in
cmp
pop
ret
pop
popf
mov
xor
out
jbe,pn
jbe
jno
ficompl
mov
cli
test
cmp
jbe
sub
aad
inc
loope
cmpsl
push
bound
stc
xor
mov
aas
addr16
imull
fmul
push
scas
jb
jns
adcb
ret
loope
stc
sbb
xlat
add
rcrl
xchg
adc
mov
lcall
loop
push
dec
dec
hlt
and
pop
pop
nop
lods
imul
and
mov
adc
pop
pop
addr16
lods
pop
mov
pop
xor
js
pop
adc
xor
cmp
ficoml
dec
fsubr
gs
bound
sbb
data16
lret
out
inc
xchg
gs
mov
int3
mov
aas
lahf
cmpsb
xchg
jecxz
les
mov
popf
mov
mov
data16
push
icebp
sahf
and
call
loop
adc
fwait
popf
in
je
cmp
mov
loop
push
and
jge
cmp
cmp
jl
cmp
mov
loop
sar
vcvtps2pd
shrb
or
or
into
fsubrs
loopne
arpl
call
hlt
je
xchg
rep
dec
xor
rorl
in
jmp
scas
push
cltd
ja
mov
test
mov
mov
cmp
sahf
pop
pop
jo
or
scas
daa
adc
lock
ds
movb
inc
aam
jbe
jge
fsub
in
nop
into
adc
call
xor
sarl
loopne
cmpsb
sub
je
out
xlat
lahf
add
aaa
imul
sub
or
or
out
dec
mov
lahf
pop
les
lcall
cmp
xor
mov
mov
mov
js
arpl
or
mov
cli
mov
push
dec
xchg
clc
inc
popf
mov
test
inc
js
xorl
std
push
mov
inc
fwait
scas
divb
in
adc
sbbb
add
sahf
mov
mov
dec
or
jmp
cld
lret
in
fcomps
out
sub
inc
mov
mov
nop
adc
fwait
lret
mul
xchg
insb
test
pusha
fnsave
push
into
cmpsl
pop
sahf
mov
push
or
and
dec
outsb
xchg
xor
or
sbb
cmp
stos
and
mov
sub
arpl
lret
mov
mov
daa
inc
pop
mov
fisttpl
mov
out
sahf
mov
xchg
xor
mov
adc
stos
aaa
stos
iret
insl
fistl
outsb
ret
sbb
jae
xchg
rcl
mov
popf
and
or
movsb
subb
jle
pop
in
enter
fsts
cmpsl
inc
inc
shll
add
cwtl
out
cwtl
mov
xchg
jmp
fwait
scas
add
mov
ds
enter
fiaddl
sub
sti
fadds
fadd
loope
lods
or
leave
data16
mov
sbb
mov
cmpsl
ret
test
enter
addl
sahf
test
inc
es
inc
sbb
and
mov
pusha
adc
push
test
enter
je
inc
xor
add
xchg
sbbb
ljmp
out
cmp
inc
mov
loope
lods
mov
pop
cmp
push
insl
int
rcrb
call
jno
xor
mov
mov
push
inc
lahf
add
sub
mov
and
je
addr16
insb
insl
mov
or
das
imul
pushf
mov
lret
aam
jb
insb
mov
aam
repz
cmp
add
pop
fs
push
mov
testl
pop
jp
es
fimuls
imul
xor
inc
or
mov
sub
inc
xlat
repz
aad
aad
add
mov
nop
cltd
xchg
add
popa
ficompl
mov
mov
sub
xchg
mov
repnz
mov
pusha
jg
call
fisubrl
jge
int
xchg
mov
sbb
repz
mov
dec
and
mov
sahf
or
xchg
loopne
xor
repz
cmp
lahf
xchg
cli
dec
xchg
test
mov
mov
inc
ss
ds
lret
ja
movsb
lret
mov
stos
rcrb
dec
rcrl
sub
dec
sbb
add
push
sbb
mov
out
jns
call
mov
mov
mov
orl
jae
sub
loop
or
adc
fistpl
jo
arpl
mov
push
movsl
pop
int3
xor
jle
mov
sub
jnp
mov
dec
in
pop
out
push
mov
nop
adc
out
loopne
cmpsl
notl
cmp
cmp
and
xlat
pop
xchg
fsubrs
mov
test
xchg
pop
adc
mov
in
pop
pop
jmp
push
pop
test
test
jp,pt
xlat
mov
cmp
sti
jecxz
push
loopne
insl
pop
cmpsl
loope
lods
stc
out
inc
je
pop
rcrl
sti
repnz
add
in
push
add
mov
inc
sbb
and
cld
inc
mov
mov
xchg
aad
cmpsl
leave
bound
xchg
pusha
xor
sbbb
fistpl
pusha
inc
adc
mov
sub
cwtl
push
cwtl
sub
mov
pop
mov
or
add
hlt
push
lret
aas
in
jmp
hlt
push
stos
mov
xchg
outsl
stc
and
fistpl
test
push
daa
mov
xchg
sbb
mov
out
push
lret
or
enter
icebp
adc
cmp
fisttpll
sub
inc
and
cmpsb
popa
xchg
popa
outsl
xchg
sub
lcall
lods
scas
add
cltd
mov
test
push
into
jne
xor
dec
js
std
push
jge
or
xchg
ret
push
in
rcpps
shrl
repz
and
mov
mov
negb
dec
fnstsw
pop
das
lret
or
fs
lcall
nop
out
sub
es
xchg
jp
test
mov
mov
orb
imul
stos
and
mov
jb
or
jmp
xor
add
lret
adcb
xchg
jae
push
gs
addr16
cmp
test
xor
sbbb
jae
scas
and
enter
filds
cmpsb
push
les
xor
sub
mov
sbb
push
mov
je
sub
iret
inc
in
or
rol
push
lock
adc
fs
pop
dec
xchg
mov
mov
aam
pushf
mov
sub
fimuls
daa
push
sub
jne
adc
testb
loope
bswap
add
sub
jno
pop
sub
jecxz
or
sub
and
je
insb
push
or
in
jnp
mov
std
scas
cmp
xchg
dec
insb
and
inc
pushf
adcl
jns
sub
pop
sub
fcomp
enter
sbb
and
lods
adc
hlt
and
xchg
sbb
xor
lods
sbbb
jl
pop
fnsave
adc
repnz
cld
in
mov
push
xchg
mov
inc
pop
sbbb
cld
adcl
loope
sahf
push
insb
dec
jbe
inc
push
cmp
push
cmp
inc
and
and
xchg
roll
xor
push
jle
cmc
in
imul
sub
lahf
pop
ds
add
push
xchg
mov
insl
std
into
out
xor
or
dec
mov
push
fadd
int
subb
test
jecxz
lock
div
cld
sti
pop
clc
and
cmp
inc
testl
faddp
inc
loope
xor
pop
sahf
bswap
decl
aam
jle
sbb
cmp
cmp
ret
sub
ja
divl
cmp
or
sub
sub
lods
adc
sarl
mov
sub
adc
pop
lcallw
push
adc
push
fidivrl
fsubr
ret
xlat
inc
mov
push
mov
loopne
clc
pop
jp
cmpsb
jne
pop
je
pusha
adc
test
jno
and
sub
test
add
into
test
pop
mov
push
lock
fdivl
shll
xor
mov
push
xchg
jmp
xchg
mov
test
add
or
or
out
imul
xor
sub
pop
addr16
jb
cmp
mov
push
jb
inc
outsl
mov
out
and
fs
inc
adc
jecxz
mov
adc
lcall
lock
faddl
out
jb
cwtl
inc
sub
jne
cmp
push
shll
pop
orb
push
cmpsb
pusha
aaa
and
aam
and
loopne
ret
ret
mov
mov
mov
jge
shrl
or
data16
dec
testb
and
fmul
mov
pop
xchg
shrb
aad
in
imul
mov
movzbl
dec
ja
inc
add
push
jne
inc
or
maskmovq
or
mov
jmp
cltd
icebp
xlat
and
arpl
adc
mov
lods
in
mov
inc
inc
cmc
aaa
ret
jl
lahf
adc
xchg
or
sar
cmpsb
push
push
cmp
sbb
adc
jg
push
filds
push
pop
in
or
and
mov
std
sbb
xor
in
loop
xor
cli
mov
iret
sub
popa
lret
add
shll
test
int3
repz
xchg
ret
mov
mov
xchg
nop
or
mov
test
fldt
push
insl
push
jno
pop
pushl
pusha
cmp
das
arpl
jl
fwait
popf
or
and
cmpl
xchg
cmpsw
fists
sbbl
mov
push
dec
dec
and
xchg
jl
rcrl
xor
mov
push
add
shrb
fcoms
mov
aam
xchg
shlb
add
mov
xlat
movsl
outsl
or
sti
fs
add
push
sbb
adc
mov
or
dec
mov
xor
loope
test
cmpb
lcall
jp
jmp
jmp
lock
dec
cmp
js
imul
jne
add
jp
xchg
or
or
rcll
mov
test
and
in
push
cltd
lods
xchg
clc
dec
xchg
dec
jno
adc
idivb
jno
mov
sbb
sbb
cmc
cld
fwait
cmp
daa
sub
jae
subl
das
sbb
xchg
shll
dec
pop
out
out
mov
sub
and
repnz
ret
jno
ljmp
icebp
sbb
test
aaa
jp
push
fs
icebp
sbb
sbb
adc
pop
jb
mov
lds
out
jl
xchg
in
out
mov
in
popa
mov
dec
adc
mov
mov
gs
xchg
cmp
adc
push
scas
sub
rcrl
or
add
dec
inc
dec
push
mov
test
mov
mov
loope
cmp
inc
mov
inc
xor
daa
or
push
jmp
fistl
cmp
push
out
pop
fildll
xchg
pushf
xchg
mov
inc
xlat
loopne
fs
clc
push
insl
cmp
sti
addr16
imul
sub
pushf
shl
inc
jle
pop
dec
dec
lock
xchg
outsl
cwtl
dec
test
jno
loop
popf
rcl
jnp
je
in
lcall
mov
adc
lahf
iret
jg
push
out
jecxz
jno
lcall
sub
lret
cs
xor
mov
push
dec
or
pop
js
cwtl
mov
int
or
mov
mov
aam
leave
push
insb
gs
or
xchg
sarb
int3
clc
push
jns
cmpsl
shlb
pop
pop
xor
pop
sub
xchg
pop
mov
dec
decl
and
mov
out
insl
cmc
in
xor
js
xchg
sahf
xchg
cltd
or
jecxz
sub
or
pop
xchg
sub
fs
in
ljmp
adc
push
test
es
mov
xchg
and
nop
sbb
cmp
sbb
ret
pop
xchg
push
inc
mov
test
push
ss
mov
xor
sbb
inc
xchg
mov
jnp
orl
lret
out
imul
test
into
sbb
inc
hlt
jp
jl
mov
scas
sarb
push
lock
pop
push
pop
xchg
fisubl
jl
cmpb
lods
jnp
xchg
mov
xchg
popf
imul
cltd
jmp
adc
xchg
mov
cmp
test
les
ret
mov
scas
scas
sbb
jl
or
cmc
scas
das
movsb
pop
or
ljmp
ja
and
ss
rcr
stc
cmp
roll
test
fs
sbb
or
jge
ljmp
fs
pop
mov
stc
pop
fcmove
les
sub
sbb
mov
das
dec
out
movsl
dec
ljmp
leave
cmpsb
into
bound
mov
clc
xchg
add
pop
inc
in
popf
adc
pop
jbe
fidivs
cmp
or
push
or
out
sbb
dec
rcrb
out
mov
cmpsb
repz
addl
dec
jno
push
aas
inc
scas
jle
loope
into
mov
sarl
sub
jb
lock
outsl
push
cltd
adc
pop
je
es
add
je
stos
add
cmp
jno
lcall
mov
outsl
fwait
shll
adcl
mov
and
lods
add
mov
xchg
dec
mov
push
je
jae
adc
inc
stc
leave
in
add
insb
incb
sub
icebp
gs
imul
arpl
cmpsl
jae
jle
mov
jmp
inc
decb
dec
sahf
inc
shll
insl
jg
lahf
mov
add
scas
enter
inc
xor
inc
dec
sub
mov
shll
sahf
dec
aas
xor
daa
inc
mov
pop
pop
das
pop
push
mov
cli
ljmp
xlat
insb
mov
adc
push
dec
fildll
bound
or
fisttps
jae
cmpsb
in
ficomps
mov
xchg
dec
aas
outsl
test
jns
inc
push
mov
mov
lcall
inc
dec
xor
cmp
fistl
mov
sbb
push
and
mov
sub
mov
pop
fs
mov
cmpsl
fldt
hlt
xchg
xchg
jae
fldenv
fidivl
cli
movsl
push
and
dec
xor
dec
stos
cwtl
addr16
dec
mov
mov
or
out
pop
test
movsb
pop
outsb
repz
mov
and
mov
and
shll
push
into
jmp
mov
outsl
push
or
mov
sub
jmp
es
nop
fs
popa
xchg
xchg
cld
xor
cld
arpl
push
push
xchg
xchg
pusha
call
dec
pop
push
adc
ficoml
lods
sub
mov
xor
inc
int3
gs
xchg
mov
ret
cs
test
mov
dec
mov
in
xchg
out
inc
fists
and
stos
inc
mov
sub
outsb
inc
push
sub
std
push
jp
sub
js
stc
mov
clc
negb
mov
iret
adc
movsb
sbb
ljmp
mov
jl
aad
and
mov
xchg
push
gs
rclb
fisubl
mov
cli
push
sbb
lods
pop
div
loop
inc
sbb
pop
shrb
fsubr
in
sbb
lret
cmpsl
mov
negb
push
push
call
ljmp
dec
scas
jmp
adc
cmp
cs
data16
inc
fstpt
call
testl
jmp
ss
fldl
loope
pop
mov
test
gs
xchg
movsl
cmp
sarb
jl
out
pop
sub
test
call
sbb
or
iret
dec
rcr
pop
fidivrs
lods
jne
cmp
lcall
mov
or
ret
out
inc
xor
icebp
sub
mov
cmp
pop
sti
mov
ds
das
js
mov
pop
xchg
cs
bsr
je
stos
push
inc
adc
push
jmp
fcoms
divb
jae
fstpl
push
sbb
push
arpl
sarl
sti
pop
push
push
and
lock
cmp
loop
add
loopne
fsubp
cmp
mov
adc
sub
shlb
cmp
inc
dec
sub
call
and
aaa
ret
cmp
mov
cmp
add
aam
orl
mov
jl
outsl
sbb
stos
outsb
push
mov
or
es
fmull
fwait
je
push
dec
cmp
pop
and
addr16
lret
inc
scas
in
fadds
and
lods
xchg
inc
dec
dec
push
in
scas
inc
mov
jb
jne
clc
out
xorb
jecxz
mov
in
cmpsl
repz
lods
sahf
add
lea
shlb
cltd
mov
and
cwtl
jl
dec
xchg
pop
mov
imul
cs
push
jmp
dec
hlt
ljmp
jge
fwait
jecxz
in
and
sub
fcom
out
pop
jge
fstl
jmp
inc
sbb
push
jns
dec
out
jle
test
les
adcl
xchg
mov
push
in
nop
mov
lret
push
xor
mov
dec
jae
das
mov
aaa
addr16
xor
xchg
clc
je
mov
inc
jbe
xchg
repnz
cmpl
clc
stc
out
arpl
pop
or
and
jg
data16
ljmp
cmc
sub
nop
rorl
jo
pop
xor
inc
rcll
in
dec
lret
aam
or
cmc
mull
subl
inc
rcl
out
xor
out
inc
roll
sub
adcl
sbb
xchg
sbbl
mov
repz
sbb
dec
xor
ja
mov
addr16
dec
cmp
and
inc
push
sub
test
fsub
xchg
and
push
nop
pop
adc
pushl
push
jb
es
push
test
jns
dec
mov
xchg
lock
push
mov
jmp
fldenv
mov
jnp
bound
adc
loop
pop
lret
sbb
xchg
sub
sub
and
lods
mov
mov
dec
js
insl
inc
int3
js
mov
scas
pop
roll
adc
sbb
shlb
adc
ljmp
out
iret
lahf
int3
push
mov
sub
xchg
test
jmp
jl
xorl
loopne
test
aam
cld
pop
sahf
je
in
push
ds
jmp
shrb
and
insb
cld
out
or
mov
mov
mov
push
je
jae
push
and
dec
and
push
stos
ficompl
push
out
rcl
popf
push
sbb
push
push
sub
sbb
mov
sahf
adc
aad
dec
sbb
push
sub
mov
mov
or
rcl
xor
in
push
rcrl
push
sub
jp
ja
mov
dec
adc
push
sub
pop
movsb
outsl
out
insl
out
mov
mov
test
jge
unpcklps
call
jns
xor
cs
pop
stos
dec
cltd
pop
rcrl
sub
data16
nop
mov
mov
add
and
pusha
iret
or
push
adc
lea
lods
inc
outsb
add
push
mov
subl
xchg
cmpb
dec
xor
out
mov
mov
or
fsubrs
jbe
lcall
or
dec
dec
dec
out
fcomi
test
fs
or
push
mov
jnp
inc
mov
sub
jae
sbb
cmp
adc
mov
push
inc
sbb
mov
imul
gs
mov
xorl
out
xor
cmp
sub
popf
sahf
sub
jae
pop
and
hlt
mov
lret
les
adc
mov
or
pop
mov
dec
sbb
out
push
mov
mov
repz
mov
int3
sbbb
push
mov
adc
icebp
ds
lahf
test
and
mov
adc
jge
out
adcl
std
test
subl
pop
ja
pop
mov
stos
sarb
rcrl
andb
in
dec
mov
pop
xor
mov
dec
pop
test
mov
lods
mov
mov
ss
out
pop
jl
stos
inc
inc
jle
lret
ret
pop
jae
push
ljmp
in
sbbb
daa
shrb
cmpsb
scas
dec
cmp
mov
imul
enter
iret
jbe
js
testl
test
cld
jmp
jbe
sbb
lret
fyl2xp1
cmp
mov
mov
mov
int
and
jno
inc
push
insl
cmpsl
pop
cmp
ds
xchg
fcomip
std
jmp
lahf
in
add
js
xchg
shll
pop
es
nop
mov
mov
sarb
int3
rorl
cmp
push
enter
inc
sarb
mov
mov
lret
fwait
push
mov
jp
mov
fidivrl
jge
imul
sub
mov
stos
addb
inc
adc
push
loope
ljmp
loopne
loopne
imul
in
mov
or
inc
jecxz
and
leave
lret
jne
jecxz
sahf
jb
enter
pop
pop
jmp
out
mov
adc
int3
ljmp
lea
ret
push
in
test
es
in
sub
xor
xlat
dec
sbb
sub
push
jae
je
sbb
and
cmp
fstpt
push
outsl
cmp
clc
mov
jb,pn
pop
sbb
sarl
and
pop
cmp
clc
insl
out
orl
ret
push
out
push
nop
call
icebp
scas
pop
fidivl
fwait
inc
sbb
pop
cs
stc
sub
lods
ret
adc
jo
add
cwtl
push
inc
push
outsb
lds
add
xchg
scas
inc
add
sbb
ffreep
xchg
sub
adc
daa
adc
into
and
or
jge
xor
sbb
sub
adc
sub
and
js
jne
sub
cmp
push
mov
xor
stos
xor
xor
xchg
jae
inc
dec
and
cmpb
mov
outsl
subb
mov
add
ss
push
push
rcrl
xchg
lret
int
cmpsl
popa
sub
xchg
inc
pop
jge
sbbb
cmp
lret
mov
jns
push
and
xchg
pushf
les
insb
lret
mov
push
test
insb
lcall
push
int
xor
mov
std
movsb
aaa
in
fists
push
jge
cmp
fwait
dec
imul
fldcw
cmp
mov
cmp
scas
test
lock
add
arpl
cld
leave
inc
mov
mov
cmpsb
popa
and
mov
mov
aaa
jbe
ja
fmuls
fwait
mov
movsb
fwait
scas
pop
jbe
jle
rcr
data16
mov
jge
xchg
or
push
insl
push
xchg
dec
xor
lods
xor
lods
xchg
ljmp
push
gs
andb
or
pushf
repnz
sub
idivb
push
popf
push
testl
in
lret
cmp
mov
and
sub
cmpsb
insb
sbb
mov
popa
inc
fwait
out
sarb
pop
sbb
scas
outsl
cmp
data16
stos
aam
push
adc
adc
mov
jecxz
sub
cmp
js
mov
mov
rclb
sti
sub
push
and
cltd
mov
cmpsb
sbb
mov
jp
std
cmp
int
mov
inc
jle
outsl
mov
shll
pop
addr16
xchg
sbb
cmp
out
sti
sbb
and
sbb
push
ljmp
mov
adc
jnp
xor
mov
inc
mov
mov
pop
fldcw
leave
pop
jmp
das
jne,pt
dec
mov
in
imul
insl
rcll
jne
push
dec
push
mov
das
fdivl
push
pop
dec
lahf
pop
adc
adc
xlat
ja
arpl
popa
pusha
test
int
xchg
sarb
into
and
das
add
jno
iret
push
push
mov
jo
mov
xor
fsubrl
adc
dec
mov
addb
in
jp
sub
scas
sub
cli
pop
mov
cmp
outsl
inc
add
mov
adc
shl
in
int
mov
sti
test
sub
fldenv
test
push
popf
subl
mov
pop
sbb
mov
inc
adc
jnp
dec
xor
mov
mov
mov
pusha
cmpsl
fs
cmc
movsb
cs
insb
sbb
notb
lods
cmpltps
pop
test
xchg
loopne
inc
cmp
subl
sbb
sub
call
in
xchg
in
mov
jge
add
es
push
and
cli
or
repz
cld
movsl
rcr
aam
push
xor
xchg
loopne
pop
pop
std
pop
cmp
roll
xchg
je
mov
dec
sub
pop
fs
cmpsb
jg
in
sbb
push
push
push
rcrl
je
mov
jmp
inc
jl
xchg
clc
nop
bound
sbb
jle
fnsave
out
sub
mov
pop
pop
es
jmp
es
mov
mov
push
jnp
fsts
aas
in
xchg
cli
lods
mov
insl
add
mov
jnp
enter
or
push
mov
cmc
rolb
inc
jno
dec
fs
std
cmc
push
out
add
sar
pop
notl
sbb
scas
outsb
idivl
les
jmp
inc
cmp
dec
inc
stos
xchg
mulb
dec
cmp
cmp
lock
mulps
jle
cmp
lahf
clc
lcall
xchg
das
xor
lds
in
popf
daa
xchg
in
pop
or
jl
sub
loope
ret
in
shll
sarl
xchg
jnp
cwtl
xchg
enter
inc
xchg
jns
in
je
push
popf
and
xchg
mov
sbbb
push
push
loope
movsb
mov
mov
es
lock
cmp
push
pop
push
movsl
jns
jge
push
xchg
repnz
data16
sub
add
mov
rorb
push
mov
mov
adc
dec
xor
dec
ja
data16
push
mov
pop
mov
cmp
in
fsubs
xchg
mov
push
not
or
sbb
cld
inc
cli
aad
rorb
into
pop
fcoml
mov
adc
add
inc
inc
shr
xchg
sbb
loopne
mov
aas
lcall
and
inc
outsb
pop
add
xor
adc
aas
adc
pop
add
xorb
lret
push
push
outsl
out
mov
push
fldcw
or
dec
cmp
aas
es
sub
push
inc
add
mov
jge
add
sarl
fidivrl
mov
hlt
aad
push
jg
jmp
and
push
lcall
inc
mov
and
pop
mov
not
out
cmp
lcall
pusha
lods
jge
xor
xor
xchg
mov
cmpsb
mov
sbb
adc
ja
pop
push
lret
mov
repnz
inc
ss
and
movsb
mov
gs
popa
mov
stos
inc
cltd
out
lcall
and
or
sbb
xchg
cmp
enter
push
fcmovnbe
xor
jns
mov
into
lods
movsb
jns
push
mov
xchg
inc
sahf
int3
sbb
or
call
dec
pop
scas
das
add
jb
pop
or
lret
hlt
out
test
mov
in
dec
dec
xchg
or
cmp
imul
outsl
mov
into
fucomip
add
xchg
es
iret
pop
outsl
lds
push
ljmp
hlt
ret
ret
push
dec
or
xchg
mov
popf
and
sbb
lds
jmp
mov
ja
push
test
cmc
xchg
fmul
repz
popf
pop
pop
pop
dec
test
or
mov
mov
or
xchg
dec
andps
jae
xchg
pop
ret
add
push
sbb
fidivl
movsl
mov
aaa
pop
std
cvtdq2ps
lcall
mov
stc
xchg
repz
out
clc
inc
repz
ja
xchg
ds
mov
popf
fiadds
mov
mov
in
push
sub
sbb
dec
xor
out
mov
imul
loop
fdivl
mov
mov
movsl
in
cmp
and
or
into
pop
sub
mov
sbb
xchg
mov
and
insl
mov
xchg
pop
jae
jg
jle
add
adcl
js
insb
push
pop
push
addr16
mov
call
adcb
lcall
popf
rcll
push
cld
xchg
scas
xchg
rcrl
subb
das
outsl
ljmp
scas
mov
sub
push
inc
test
fildll
mov
cli
lret
push
fnstenv
jg
push
popa
cmc
cli
jg
out
inc
jno
xchg
or
push
pop
sbb
loope
ja
xchg
imul
out
cwtl
fiaddl
xlat
std
rorl
pop
inc
or
mov
and
mov
xchg
call
mov
jmp
pop
hlt
movsl
aad
test
sub
and
lds
jmp
and
adc
add
nop
cli
or
push
mov
mov
popf
push
aaa
jnp
stos
rcll
push
xchg
in
lds
push
gs
fimull
jae
in
repz
sbb
ret
push
mov
fwait
jbe
mov
sarl
ret
stos
dec
jne
mov
jg
stos
leave
call
insb
xor
ja
push
int3
push
lock
pop
mov
sbb
sbb
jbe
cmp
stos
xchg
hlt
cmp
dec
add
adc
enter
out
stos
nop
mov
ljmp
xor
cmp
add
sbb
or
psrlw
cld
cmc
fiadds
push
icebp
xor
and
xor
push
fimuls
int
mov
test
lea
stos
in
lret
push
mov
adc
rcrb
and
inc
arpl
rorl
inc
xchg
add
fidivrs
les
mov
test
mov
add
aaa
shlb
fs
lods
mov
cli
push
jg
gs
bound
outsb
sbbl
movsb
adc
cmp
sbb
cwtl
sub
adc
mov
and
adc
das
movsl
out
adc
and
mov
jmp
inc
push
arpl
sub
cltd
test
fdivrs
cmp
nop
or
add
xlat
or
sub
sub
test
popf
mov
inc
shrb
sbb
stc
cmp
int
pop
mov
addr16
mov
pop
xchg
cltd
sbb
inc
gs
mov
jl
dec
mov
outsb
pop
jge
mov
push
repz
test
mov
mov
add
mov
inc
cmp
test
mov
test
pop
sbb
repnz
aam
dec
add
in
mov
jmp
imul
loop
jo
loope
imulb
mov
scas
mov
rcrb
or
mov
sub
or
cld
dec
arpl
je
lea
inc
in
cli
adcl
mov
cmp
test
push
sub
and
and
adc
mov
or
subl
cltd
aaa
aas
pop
mov
xlat
daa
stc
and
add
jns
dec
cmp
ds
out
and
sbb
sub
adc
enter
loopne
push
std
xchg
test
xchg
in
pop
dec
xor
sti
stc
vpsubsb
outsb
outsl
test
xor
push
imul
pop
cs
sbb
movl
cmc
roll
sub
xor
push
rcrl
das
dec
sub
fsubl
das
es
mov
mov
xor
popf
jb
mov
or
sub
sub
push
cwtl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
xor
push
je
jge
mov
mov
xor
and
xor
jae
jmp
sub
inc
xor
pop
xor
push
xor
xor
jge
mov
xchg
xor
xor
xor
xor
sbb
xor
xor
xor
xor
xor
xor
xor
push
xor
cwtl
xor
lds
sub
mov
lret
fnsave
mov
xchg
aaa
cmpsb
aaa
mov
out
aaa
add
loope
jmp
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
xor
ds
pop
cmp
js
jle
test
ljmp
ds
adc
xor
lds
sarb
aad
out
icebp
idivb
adc
sbb
xor
cmp
aas
push
jp
cmpb
aas
lret
aas
cli
aas
add
add
cmp
add
add
sbb
and
dec
xor
xor
xor
pop
xor
jge
cwtl
xor
xor
xor
xor
xor
xor
movsb
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
push
xor
das
aaa
aaa
aaa
cmp
aaa
mov
mov
aaa
dec
cmp
jo
xchg
cmp
adc
daa
cmp
js
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
imul
cmp
cmp
das
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sahf
cmp
cmc
cmp
sbb
push
ds
cmp
inc
ds
ds
ds
ds
imul
jns
jge
cmpl
mov
xchg
mov
ds
ds
sarl
fdivrs
loopne
in
in
ds
add
push
aas
das
aas
xor
aas
jge
lea
mov
mov
aas
fnstcw
in
add
add
aam
add
push
xor
xor
xor
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
lods
xor
xor
xor
xor
jne
jg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
repnz
mov
aaa
add
push
cmp
cmp
cmp
cmp
cmp
js
cmpb
cmp
cmp
cmp
pop
cmp
cmp
cmp
cmp
cmp
push
cmp
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ja
movsl
ds
aas
cmpl
add
dec
add
add
xor
xor
xor
xor
xor
xor
das
ss
ss
ss
aaa
adc
cmp
cmp
cmp
cmp
cmp
cmp
add
add
push
add
rolb
add
xor
jns
jge
xorl
lea
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
xor
sbb
push
ss
ss
ss
ss
shlb
fbstp
add
pop
aaa
or
and
jl
lahf
aaa
stos
aaa
mov
shlb
aaa
aaa
fidivs
in
out
aaa
hlt
aaa
aaa
add
push
cmp
cmp
cmp
cmp
cmp
cmp
cmpb
cmp
ret
cmp
cmp
cmp
cmpl
cmp
cmp
fstpt
pop
aas
jle
add
add
add
outsb
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
dec
ss
mov
aaa
push
cmp
outsb
cmp
cmp
cmp
sub
cmp
pusha
jb,pt
test
xchg
ds
mov
ds
adc
es
cmp
mov
cltd
aas
mov
sarb
add
add
add
add
add
xor
mov
xor
xor
pop
xor
xor
xor
xor
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
insb
xor
jmp
xor
add
add
or
or
push
ss
ss
ss
ss
cmp
inc
aaa
pop
aaa
xorl
aaa
fnsave
jge
mov
test
cmp
cmp
pop
cmp
int3
cmp
cmp
cmp
cmp
cmp
cmp
pop
cmp
adc
sbb
pop
aas
and
sub
sub
aas
cmp
aas
pop
aas
pop
aas
gs
imul
aas
jbe
jnp
cmpl
add
sbb
add
and
push
xor
sahf
xor
xor
add
mov
add
cmp
cmp
dec
xor
xor
xor
xor
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
add
add
movsb
cmp
add
add
add
js
lock
cmp
loopne
add
add
add
xor
or
adc
sbb
and
sub
xor
cmp
inc
xor
dec
xor
pop
xor
fs
jo
je
js
jl
xorb
xor
cwtl
xor
movsb
xor
mov
xor
shlb
fdivl
call
xor
cld
xor
or
or
adc
adc
sbb
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
ss
ss
ss
ss
ss
ss
ss
ss
shlb
ss
lock
and
xor
xor
cmp
cmp
inc
aaa
inc
aaa
dec
aaa
dec
aaa
push
aaa
push
aaa
pop
aaa
pop
aaa
pusha
aaa
fs
push
aaa
xorb
aaa
mov
mov
nop
aaa
xchg
aaa
cwtl
aaa
pushf
aaa
test
lods
aaa
mov
mov
mov
aaa
les
enter
shlb
add
add
adc
inc
add
add
sbb
cmp
pop
xor
test
mov
xor
xor
xor
xor
xor
jo
mov
nop
xor
lock
xor
xor
jo
nop
xor
