sbb
add
xor
int
sbb
jno
xchg
jg
es
stos
add
and
mov
push
sbb
paddusw
push
mov
mov
sub
movsl
cwtl
sarb
nop
fisttps
cmp
xor
mov
sbb
pop
xchg
sti
sahf
and
jns
mov
xchg
call
out
push
jl
mov
je
in
gs
sub
pop
aas
pop
subl
loopne
lret
mov
out
cld
jle
bound
sub
add
dec
xor
test
cmpsl
imul
fidivrl
push
ret
out
and
fdivs
call
jge
pop
sub
cmp
mov
adc
inc
inc
fdivs
adcl
lods
push
sub
lcall
mov
push
cmc
loope
out
pushf
and
imul
ficoml
inc
push
mov
xor
push
addl
incb
insl
xor
mov
mov
rcl
stos
cld
xchg
fisubrl
inc
sub
pop
fincstp
stos
adc
and
call
jae
add
add
jmp
pop
jmp
int
jg
sbb
lods
js
repz
xchg
pop
out
cmpsb
xchg
sbb
orl
stc
mov
lret
dec
jne
dec
push
arpl
xchg
mov
mov
mov
jno
imul
add
mov
rcr
mov
out
inc
iret
in
cmp
addl
cmp
push
jp
jne
stc
test
sahf
dec
pushf
in
push
cmp
push
sarb
xchg
and
shll
fs
xchg
mov
loope
xor
dec
sbb
dec
out
xchg
rorb
xor
lods
pop
mov
push
xchg
cli
add
jne
das
or
xchg
sbb
push
and
inc
lret
and
cmc
inc
repnz
fstpl
mov
fisubrl
bound
push
xor
dec
scas
add
repnz
inc
data16
ja
ror
bound
jp
sub
or
cmp
push
jecxz
fsubrl
fs
sub
jns
xchg
sbb
xchg
ret
xor
adc
cmp
dec
sti
insl
enter
es
ss
push
lods
mov
int3
cli
jecxz
sub
loopne
jmp
adc
sbb
call
push
xchg
sarl
xchg
popf
jbe
es
shll
loopne
sbb
mov
pop
cmp
out
aad
mov
jmp
adc
cmp
and
xchg
inc
cmp
push
loop
sbb
ds
movsl
add
test
xchg
mov
popa
pushf
shl
adc
add
test
jns
clc
xchg
in
push
xor
imul
daa
add
insl
sub
aaa
cwtl
ret
cli
mov
adc
push
cmpsl
cs
sub
jle
jae
insb
repz
lret
sahf
and
pop
mov
fs
mov
mov
pop
sbb
inc
jae
cld
leave
dec
ss
mov
cmp
pop
fs
aas
andl
or
out
sbb
imul
mov
sbb
mov
loope
fsubl
mov
bound
repz
mov
cmp
inc
leave
mov
imul
fmuls
out
popa
testl
add
inc
mov
addr16
into
dec
shlb
sbb
test
adc
xchg
cltd
adc
pop
sbb
jg
or
pop
mov
sub
outsl
pusha
movsl
push
xchg
mov
xchg
out
lret
int3
shll
and
dec
out
ret
adc
xor
imul
and
mov
xor
dec
and
add
dec
push
xor
xchg
mov
dec
mov
pushl
xor
push
or
jg
cmp
loope
shl
ja
lods
hlt
loopne
mov
jns
pop
rcrb
out
hlt
cld
sub
push
in
inc
or
mov
xchg
mov
and
add
je
and
lods
fwait
scas
inc
sbbb
or
cli
xor
mov
pop
cs
xlat
cmc
cmp
push
fidivrs
mov
incb
sub
sub
shll
loope
mov
push
add
sarb
out
mov
es
dec
mov
dec
jp
sub
push
pop
xchg
xchg
xor
push
stos
push
insb
mov
ja
fs
call
sbb
loop
cmpsl
lock
xor
sub
jno
add
cmp
mov
jne
lea
icebp
loopne
cmp
sbb
jmp
pop
jns
push
inc
fxch
imul
xchg
arpl
arpl
jne
das
pop
mov
push
or
adc
pop
ficoms
push
loope
outsl
dec
lahf
xlat
cmc
push
test
js
sbb
repnz
pop
mov
or
adc
push
mov
jo
loopne
ja
dec
jg
jg
rclb
inc
cmpb
mov
and
in
gs
xor
loop
mov
unpckhps
jp
mov
cmpsb
mov
loopne
xchg
add
and
cmpl
das
je
popa
mov
rol
int3
fisubrs
cwtl
cmp
jo
add
loopne
cmpsl
test
mov
or
sbb
mov
dec
cwtl
ret
xchg
and
test
or
cmp
push
subb
push
or
jge
dec
cmp
call
mov
push
xchg
xor
mov
shlb
aaa
jns
sub
rcrl
jecxz
mov
or
pop
sarb
mov
sub
jo
sub
push
cmp
cmp
adc
scas
add
out
int
jo
imul
cmpb
xchg
xor
mov
test
dec
mulb
mov
jg
bound
jecxz
cmc
aas
mov
mov
adc
cmp
mov
xorb
sbb
or
pop
ret
xchg
cmp
sahf
dec
out
fisubrl
in
adc
test
icebp
test
stc
out
pop
repnz
pop
ja
mov
aaa
adc
mov
mov
pop
test
cmovp
aad
pop
into
adc
inc
jbe
adc
cld
cmpb
dec
cmp
sub
fs
sbb
sub
outsl
loope
inc
push
stc
popa
ds
push
mov
push
push
in
xlat
clc
jne
jns
loop
pop
xor
add
dec
push
sar
std
lods
ret
in
sub
jl
inc
loop
and
pop
xorl
into
add
hlt
imul
sbb
orb
pusha
mov
xlat
pop
add
xchg
out
mov
pop
xor
xchg
loop
dec
fwait
add
jo
int3
mov
push
lods
adc
cmpb
mov
into
gs
sbb
mov
lcall
gs
jp
mov
hlt
mov
xor
mov
std
in
ret
fstpl
dec
daa
cmp
fildll
push
jp
lahf
out
and
xchg
lock
mov
stc
xchg
cmpb
dec
fisttps
dec
aaa
jg
scas
lds
and
stc
es
mov
lcall
push
jno
mov
xchg
sbb
andl
add
insb
push
xchg
data16
jge
sub
nop
mov
adc
dec
push
std
mov
jno
cltd
pop
clc
sub
or
mov
pop
rcl
addr16
ja
dec
outsl
arpl
loope
popa
pop
mov
ss
mov
xchg
mov
fnstsw
loopne
test
add
ret
pushf
test
fsts
mov
dec
push
testb
mov
inc
jle
cmp
adc
ljmp
mov
pop
outsl
xchg
addr16
adc
pop
imul
cmc
cltd
jmp
pop
dec
add
pop
aam
or
cmp
inc
rcr
pushf
jmp
scas
dec
and
ficoml
js
inc
push
mov
cltd
fiaddl
dec
pop
repnz
push
shll
scas
pop
push
iret
fsub
mov
add
cmp
imull
fsub
ljmp
hlt
mov
sbb
dec
cmp
inc
sub
idivb
add
push
cmp
push
mov
mov
adc
enter
std
lcall
xchg
imul
test
imul
leave
pop
les
test
and
pop
fs
cli
dec
inc
xor
je
inc
lds
mov
lahf
jb
fstpl
loope
lcall
sbb
sbb
ret
xchg
xor
fs
adc
loopne
or
mov
and
adc
pop
xchg
loop
mov
enter
hlt
mov
insl
xor
testl
and
mov
sti
pop
and
fwait
sbb
fdivs
ja
dec
adc
pop
movsl
xchg
or
fstps
cmpsl
sub
jmp
mov
add
or
pop
push
shll
inc
pusha
jb
push
cmp
inc
cmpsl
pop
push
cmpsl
sub
push
dec
aas
insb
mov
jne
jbe
xchg
test
and
pop
mov
adc
ret
mov
lcall
or
scas
jmp
lcall
mov
xor
dec
xorl
mov
add
int
jae
inc
push
sbb
loopne
sbb
fwait
xchg
lock
popa
popa
mov
psrlq
enter
test
cmp
pop
hlt
cwtl
gs
out
pop
sub
mov
sub
mov
icebp
inc
xlat
jne
cld
adc
imul
clc
push
mov
xor
push
jns
sub
lds
jp
xchg
outsb
sbb
sub
pop
mov
jne
xor
ret
jo
nop
push
pop
stos
adc
stc
jle
out
sub
xchg
cld
inc
jg
push
test
mov
add
xchg
xor
ret
es
sarl
lea
and
add
cmc
andb
andb
sbb
pop
lret
inc
dec
cmp
movsl
mulb
xlat
xor
jns
bsf
repz
pop
xchg
scas
es
pop
jge
xor
orb
aas
xor
cld
jge
mov
call
scas
enter
mul
pop
pop
mov
xor
dec
lods
inc
mov
mov
roll
mov
jecxz
or
andb
pop
inc
jbe
mov
push
popa
xchg
push
push
es
dec
inc
mov
xchg
inc
mov
ss
sbb
std
jb
js
and
sbb
sbb
xor
push
imull
addr16
xlat
push
adc
mov
mov
dec
lds
mov
ja
cmp
jns
adc
mov
mov
out
mov
mov
jle
cmpsl
bound
cmp
movb
aam
out
sar
repnz
fwait
arpl
arpl
inc
andl
ds
lret
shr
xchg
mov
cmp
pusha
and
cmpsl
or
mov
cmpsb
xchg
xchg
out
test
xor
sub
mov
fs
mov
fsubrp
pop
mov
iret
xor
inc
jae
adc
ret
jle
popa
pop
popa
push
mov
fidivs
sbb
xor
dec
inc
rorl
leave
sbbl
sub
mov
arpl
andl
dec
inc
cltd
add
stc
nop
push
rcrl
xchg
sar
loop
pop
pop
mov
out
or
in
jnp
pop
fwait
lods
inc
mov
fwait
push
cmc
rcrl
into
cmp
sti
call
xchg
mov
loope
mov
cmc
out
in
mov
int3
pop
mov
xchg
loop
mov
subl
push
xor
loope
lcall
frstor
inc
sbb
insl
aam
mov
jecxz
xor
ja
mov
out
cmp
incb
pop
in
add
lods
sbb
out
push
xor
cmpsb
fdivrs
jg
mov
in
lret
push
iret
cli
inc
cmp
incb
cmc
lods
inc
scas
subl
stos
mov
imul
insb
mov
and
std
repz
cmpsb
jp
sub
push
out
jmp
jge
sbb
lcall
xchg
cmp
int
sti
stos
xchg
dec
or
icebp
popa
pop
sub
ja
sbb
mov
cmc
sbb
xor
shlb
or
pushf
nop
fwait
in
test
mov
outsl
dec
xlat
xlat
xlat
push
sbb
adc
bnd
shll
pop
pop
aam
pop
ret
xchg
lret
out
rorb
xchg
dec
out
fs
or
xchg
inc
pop
lds
dec
and
inc
dec
lret
adc
shll
into
les
or
push
pushf
sub
dec
sbb
ss
dec
pop
leave
sub
adc
mov
aad
std
sub
sub
sbb
fcmovnu
int
xor
and
xor
outsb
testb
jae
rcpps
jb
es
and
push
dec
repz
mov
pusha
testl
mov
sbb
jbe
sti
mov
and
int3
shlb
inc
adc
lcall
sbb
pop
fists
ss
insl
in
out
rcrl
mov
push
push
test
adc
and
sub
testl
and
cs
aad
pop
cmp
sahf
pushf
mov
xor
and
pop
fadd
or
push
add
push
mov
scas
mov
mov
lock
movsl
or
inc
iret
inc
lahf
bnd
mov
jns
pusha
or
test
jo
mov
sbb
adcl
fidivl
add
scas
and
pop
out
adc
imul
push
push
shl
add
jno
and
sbb
insl
push
lods
movsb
imulb
ret
push
outsb
mov
dec
sahf
pop
divb
call
cmp
fidivl
inc
and
iret
shlb
scas
cmp
insb
sbb
dec
mov
jl
adc
adc
xchg
fs
cmpsb
aam
sahf
mov
mov
mov
dec
cmp
movsl
scas
xchg
push
cli
xchg
xor
daa
lds
es
mov
insl
loope
repz
popa
lahf
jnp
stos
add
xor
leave
out
xlat
xchg
sub
leave
inc
dec
stos
icebp
inc
or
jge
cmp
lret
lahf
les
sub
loop
jae
sbb
test
jbe,pt
fisttpl
je
push
jo
adc
leave
cmpsl
and
mov
inc
fisubl
mov
scas
dec
jg
pop
and
xchg
scas
adc
xorl
je
fsts
leave
popa
je
aaa
out
sti
fists
xor
and
and
adc
fcoml
test
and
mov
mov
inc
ds
sub
movb
or
pop
cmpsb
mov
arpl
adc
mov
test
jo
iret
loopne
push
xor
stos
outsl
mov
push
popf
push
fimuls
fxch
jge
mov
inc
jge
or
xor
xchg
mov
cmp
jmp
inc
in
stos
inc
jo
mov
sbb
inc
push
inc
sbb
xchg
mov
sub
leave
jae
mov
push
fnstenv
mov
cmp
ss
sbb
js
mov
cmp
pop
les
jle
sbb
and
loope
mov
repnz
jge
lcall
inc
mov
in
pop
repnz
mov
aas
js
add
mov
xchg
and
xor
mulb
scas
testb
dec
or
sub
sti
out
push
push
add
cmp
outsl
push
pop
and
cli
dec
in
or
push
or
jmp
xchg
and
pop
jno
sub
lds
cwtl
xchg
fucomip
push
xchg
pop
loop
jo
xor
jno
dec
adc
xchg
or
push
jne
jle
mov
pop
pop
push
in
mov
pop
iret
aaa
add
addl
pop
jmp
inc
jecxz
adc
xor
or
cmc
adc
into
pop
pop
iret
popa
and
push
lret
in
movsb
sub
rorb
sbb
movb
xchg
fistps
sub
cmp
insb
rclb
lret
stos
mov
mov
lret
inc
mov
cli
cld
lds
mov
jmp
jmp
aad
aaa
loopne
ror
pop
roll
popa
xchg
fadds
adc
lods
in
adc
xor
scas
add
scas
cmc
mov
fneni(8087
js
or
xor
mov
sahf
incb
add
xchg
daa
lods
shl
mov
mov
sub
mov
dec
mov
mov
cmp
iret
bound
dec
push
adc
lret
into
and
gs
fs
out
pop
cld
mov
xor
xor
and
fldl
icebp
shll
cli
cltd
sbb
adc
jle
xor
pop
cs
dec
xchg
jae
jae
scas
and
adc
or
loopne
test
cltd
push
inc
sbbl
xor
cld
fsubrl
shrb
xchg
div
xchg
cmp
inc
adc
pusha
sub
xor
jmp
ds
sarl
dec
jbe
push
out
rcll
lret
ljmp
sub
cmp
and
mov
pop
adc
add
sbbb
bsf
test
in
pop
mov
dec
xchg
or
lret
test
test
push
add
mov
sbb
push
cmpsb
loop
dec
push
mov
jl
in
cs
sbb
mov
test
mulb
sbb
clc
out
jae
aaa
mov
lods
push
or
mov
flds
lods
mov
pop
adc
leave
adc
add
jecxz
loopne
mov
or
aas
mov
xor
test
fs
lret
cld
mov
ds
adc
dec
out
push
icebp
lods
inc
repz
inc
arpl
cwtl
xor
mov
sti
dec
push
jmp
aaa
lea
push
ret
push
out
xchg
mov
mov
push
dec
inc
pop
xchg
loopne
push
in
js
popf
out
sbbb
mov
inc
popa
sbb
and
sbb
daa
call
fwait
std
sub
pushf
lcall
mov
out
aas
or
ret
push
cmp
mov
inc
jle
jo
fs
xchg
test
dec
pop
and
insl
pop
adc
mov
jge
inc
inc
mov
or
xchg
dec
test
nop
cmpsl
push
rclb
push
in
jne
lods
ss
jmp
daa
xchg
add
std
shr
add
inc
call
or
mov
in
push
add
movsb
in
add
jae
aam
fdivs
call
loop
pop
nop
sub
pop
dec
push
popf
xchg
push
mov
ret
cli
inc
jl
aam
xor
lds
std
loope
adc
cmpsl
leave
mov
dec
jb
dec
out
filds
scas
xor
inc
inc
sbb
test
lods
mov
fcmove
cmp
sbb
out
loope
leave
fwait
dec
std
das
inc
xchg
mov
popa
cmp
rcrb
stos
jl
push
hlt
insb
xchg
xchg
cmpsl
mov
aam
fs
jae
dec
mov
cmp
in
fildl
cmp
sahf
jmp
cmp
and
dec
lret
push
inc
jno
cwtl
add
add
sub
test
enter
data16
rorb
mul
mov
mov
loope
rolb
rcrb
mov
ficoms
pushw
cmp
or
sahf
jmp
lcall
mov
inc
in
dec
mov
sub
divb
test
movb
pop
mov
sbb
mov
cltd
pusha
in
cmp
ljmp
push
mov
dec
mov
call
repz
cmpsb
pusha
or
adc
js
out
push
push
stc
scas
xor
pop
xor
xor
add
sbb
pop
pop
into
gs
or
iret
scas
call
jae
push
movsb
sub
sbb
std
ret
mov
push
fdivrl
cmp
push
or
mov
out
cmp
fsubrs
jl
xchg
inc
push
mov
ror
or
mov
and
cmp
dec
in
mov
inc
mov
jl
pop
stos
loopne
stos
es
jge
pop
pop
jecxz
call
xor
arpl
pop
fwait
xchg
push
xlat
jo
push
insb
out
shlb
dec
sub
sbb
dec
cmc
xchg
xchg
int
and
scas
pop
movl
xchg
and
jg
cmp
out
iret
dec
mov
cltd
sarb
sub
dec
sub
or
jmp
aad
shlb
test
fldenv
popf
iret
stos
fimull
push
pushf
imul
mov
lock
cmp
pop
lret
mov
add
aaa
lret
push
lods
sbb
mov
push
dec
xchg
lock
jp
imul
mov
cmp
push
pop
xor
js
jne
popf
and
mov
push
into
sbbl
and
scas
scas
xchg
xchg
addr16
inc
faddp
ss
imul
mov
sbb
mov
mov
mov
jns
adc
das
stc
fdivr
mov
push
xlat
insl
pop
mov
or
push
scas
pshufw
popa
popa
push
mov
jbe
repz
xor
in
xor
adc
jmp
insb
jae
mov
lock
dec
icebp
in
xchg
dec
dec
mov
std
lods
xor
enter
mov
aas
cli
stc
lcall
xchg
data16
mov
mov
ljmp
scas
and
push
mov
aam
lds
call
call
enter
invd
lahf
sbb
dec
popf
sub
cld
mov
sbb
out
mov
cmp
lret
addr16
movsb
sbb
dec
or
leave
xchg
into
mov
lret
cmpsl
xchg
adc
push
scas
fs
cmpl
outsb
in
stos
or
insl
std
jge
push
addr16
cmp
ret
xor
inc
mov
imul
push
repnz
repnz
popf
inc
xor
xlat
sbb
or
punpckldq
mov
push
sub
insl
or
gs
fiadds
insl
sub
mov
add
movsl
in
test
lods
xorb
jmp
push
sub
out
adc
cmpsb
ja
test
shlb
and
mov
scas
inc
dec
push
push
rcl
add
pushl
add
loop
aas
push
es
xchg
adc
lahf
adc
cmovs
daa
mov
mov
mov
imul
mov
and
adcl
cmp
push
loop
pop
adc
clc
icebp
shll
aam
cmp
xchg
pop
dec
adc
mul
pop
cmp
inc
fwait
and
neg
xor
jbe
movsl
pop
push
jg
pop
mov
or
inc
mov
jnp
jg
jns
mov
sub
scas
or
ret
pop
stos
mov
adc
add
xor
mov
dec
cmp
loope
lock
cmp
dec
xlat
push
lods
ret
and
inc
adc
cmpsb
outsl
push
xor
jmp
dec
fisttps
push
lahf
or
sbb
cmp
jae
repz
add
sahf
das
shrb
mov
inc
ret
inc
xchg
js
aaa
and
sar
movsl
sbb
int
idivl
dec
sub
cltd
push
jecxz
mov
fimull
cmp
sbb
and
je
push
push
xlat
flds
xchg
mov
arpl
add
xchg
cmp
pop
out
pop
subb
popa
popa
hlt
les
cmp
push
lcall
pop
cmp
int3
pop
pop
in
push
xor
pop
out
or
idiv
repz
dec
push
xor
jno
shlb
subb
jbe
js
sbb
std
imul
sbb
pushf
daa
inc
dec
dec
adc
or
shrb
test
pusha
xlat
sub
adc
popa
enter
mov
xchg
insb
lock
sbb
lds
dec
add
gs
mov
scas
stc
jge
mov
xchg
cld
pop
arpl
add
lods
mov
xchg
aas
xor
sub
inc
outsb
xchg
mov
xlat
or
sbb
mov
iret
shll
stos
pop
frstor
roll
fildl
and
stos
dec
fwait
push
xor
and
ja
outsl
and
push
pusha
push
insb
mov
imul
inc
and
ds
repnz
and
ja
jg
scas
imul
fdivrs
sbb
pop
mov
into
xor
rcl
jb
inc
movsb
popa
sbb
dec
fstpt
mov
aad
mov
lods
lcall
mov
push
sub
adc
jecxz
mov
xchg
push
lea
js
out
or
or
mov
mov
daa
ficomps
dec
or
cmp
outsb
jmp
sbb
arpl
ljmp
js
addr16
lahf
inc
mov
mov
xchg
mov
out
aas
mov
inc
add
and
add
xor
mov
mov
in
mov
in
into
addr16
mov
hlt
dec
mov
pop
ficompl
data16
xchg
mov
enter
je
push
push
loope
into
push
movsb
inc
cmp
xorb
cltd
pop
inc
jne
push
sub
inc
cmp
scas
inc
mov
out
inc
mov
std
lds
and
cmpb
xchg
push
push
mov
push
inc
loop
and
flds
cmpsl
mov
xor
test
aas
lcall
push
jns
xor
sbb
sub
xor
mov
hlt
add
pop
fs
jne
adc
stc
jbe
jno
add
sbb
popf
and
insl
fildl
es
sub
pop
mov
je
or
push
adc
or
in
inc
jo
js
add
push
aas
in
loope
push
cmp
add
fldl
jle
lds
scas
es
stos
add
cmp
out
push
push
pop
mov
and
hlt
or
out
lods
xchg
pop
jmp
lret
xor
and
dec
idivl
xchg
add
adc
repz
sub
sti
std
pop
push
stos
mov
cmp
mov
jmp
dec
in
cmp
inc
xchg
push
fwait
outsb
xchg
xchg
inc
idiv
int
lahf
jbe
in
in
dec
icebp
jmp
xchg
adc
cmp
mov
adc
lcall
in
lods
inc
cli
or
sub
push
mov
inc
ljmp
lea
sub
in
jo
inc
adc
adc
or
aas
mov
cmpl
and
scas
sbb
cld
pushf
jne
push
push
repnz
addl
js
xor
mov
and
jp
jge
movsb
cmp
out
push
insl
enter
mov
mov
fsubrs
ret
or
add
subl
cmp
dec
test
sarl
js
pushf
or
mov
dec
rcl
iret
mov
fcmovb
jo
fnsave
cmp
loop
test
repnz
jne
repz
cli
mov
xchg
aad
iret
dec
dec
pop
ljmp
sbb
xchg
test
insl
dec
mov
cmp
psrlq
jle
add
pop
mov
cs
xchg
and
in
gs
mov
and
outsb
inc
xchg
sbb
mov
mov
out
mov
xchg
mov
or
or
sub
fadd
lcall
sub
and
lods
add
jmp
int
inc
xchg
aas
add
clc
loop
and
xchg
lods
xchg
cld
hlt
out
and
testb
and
push
and
adc
test
pop
cmc
add
add
mov
sbb
jg
lret
inc
stc
popf
inc
mov
or
fidivrl
push
cmp
pop
mov
push
dec
out
and
andl
in
sbb
and
or
aaa
movsb
inc
jae
xor
sub
cmpsb
sub
xchg
ret
sub
mov
mov
mov
nop
mov
inc
stc
pop
roll
and
sub
outsb
mov
lcall
add
pop
bound
les
aas
xchg
dec
incb
inc
add
jle
arpl
popa
xchg
pushf
scas
imul
push
scas
mov
and
cmp
and
add
jb
xor
mov
push
fiaddl
jmp
fs
rclb
jnp
insb
jmp
mov
sub
jae
push
subb
push
fs
cmp
add
or
add
stc
aam
pushf
xchg
mov
insb
adc
icebp
push
bswap
fnstcw
cli
lods
lea
adc
stos
mov
cs
push
push
lds
jl
jle
fs
push
sub
loope
push
dec
add
adc
sahf
sub
lret
pop
cmpsb
lods
and
out
cmpsl
or
sub
inc
aas
imul
loop
inc
enter
mov
in
cltd
sahf
lret
decb
adc
add
test
inc
ficoms
add
adc
movsl
lods
loope
rcll
outsl
fisubs
out
mov
repnz
int
push
mov
pop
lret
mov
lods
dec
loope
cld
fcomip
xchg
loopne
sub
orb
mov
sub
xlat
int
js
arpl
cmp
int
pop
sub
mov
or
pusha
mov
xchg
sahf
push
fucomp
addr16
test
xchg
mov
xchg
xor
fnsave
lods
jo
mov
nop
sbb
push
mov
cmpsl
dec
ret
adc
sti
repnz
int3
repnz
in
cwtl
add
xchg
dec
pushf
and
ds
xor
aad
cmp
daa
nop
orl
pop
lret
decl
std
dec
vrsqrtps
mov
xchg
ds
movsb
push
and
pop
fwait
mov
sub
adc
mov
arpl
push
iret
std
pop
xchg
idivl
jecxz
mov
out
fdivs
cmpsl
push
loop
shll
mov
add
xchg
or
mov
jnp
xlat
stc
and
ret
fldt
push
pop
push
popf
shll
lock
aam
xor
negb
xchg
sahf
add
push
std
xchg
fs
out
mov
jns
mov
cmp
and
mov
sbb
in
add
push
leave
mov
mov
inc
inc
fadd
aad
jne
mov
mov
int3
and
push
jle
out
dec
pop
imul
iret
out
sbb
mov
adc
ret
arpl
jo
xor
mov
rorb
xor
inc
sbb
jne
negb
dec
hlt
cmc
jb
cmp
or
jb
jge
mov
iret
call
sub
lcall
add
pop
mov
sbb
movsb
xchg
insl
inc
xchg
test
loop
lret
rcrl
xor
sub
push
aaa
sbb
push
xorl
enter
nop
int3
js
mov
mov
lret
or
mov
hlt
lock
pop
mov
hlt
out
out
mov
push
scas
es
add
cltd
cmp
mov
cmc
push
mov
jno
int3
xchg
cmpsl
push
dec
adc
mov
dec
addr16
nop
sbb
mov
mov
xchg
add
dec
aaa
ds
js
add
icebp
sahf
xchg
scas
pop
aaa
xor
adc
bound
jmp
data16
jnp
pop
xor
das
dec
data16
jecxz
bound
cmc
pop
incb
xor
lcall
lcall
lds
jnp
push
jns
clc
xchg
pop
mov
divl
dec
jp
add
stos
jno
inc
sti
scas
daa
cmp
push
popa
ljmp
leave
dec
pop
shll
loopne
jmp
nop
testl
fdivrs
jmp
adcb
ds
test
cmpsl
jnp
adcb
push
inc
outsl
inc
xchg
inc
ret
addr16
pop
push
sbb
or
xchg
lret
pop
jp
pusha
ret
or
fwait
loop
loope
add
jnp
ja
or
inc
outsb
mov
push
sub
xlat
dec
pop
xor
mov
mov
movsb
movl
xlat
bts
adc
roll
dec
or
jle
dec
sub
in
je
sti
mov
enter
aam
adc
mov
sub
mov
adc
and
roll
or
or
enter
daa
add
gs
fstps
loope
inc
nop
fwait
mov
ss
push
mov
mov
lret
aam
aam
jb
int
arpl
ljmp
and
sub
decb
lock
fsubl
fwait
lret
mov
addb
push
xchg
xchg
xor
push
adc
xchg
inc
cltd
jge
sub
mov
aaa
xor
lds
inc
jmp
dec
xor
aam
mov
je
add
push
jmp
push
sub
xchg
testl
sbb
sahf
sub
jl
inc
test
mov
mov
fstps
inc
mov
mov
loop
mov
test
xchg
stc
movsl
lea
add
pop
push
lea
pop
inc
push
cmp
fdivrl
jo
test
jae
mov
mov
sti
dec
or
cmp
andl
out
add
popf
adc
fsts
repnz
mov
aad
cmpsb
ss
rcrb
mov
imul
mov
mov
arpl
cmp
push
or
mov
sti
dec
xchg
mov
mov
sub
adc
fs
jnp
loopne
add
xchg
xor
scas
pop
xor
rcrb
xchg
mov
test
sub
mov
lcall
inc
adc
outsb
push
jg
xor
test
cmpl
lret
pop
lods
mov
nop
fisubrl
lcall
loopne
loope
in
popf
inc
fwait
dec
mov
shll
mov
jg
je
ret
pop
xlat
dec
or
and
add
orl
cmpsb
cwtl
in
pop
popl
xor
scas
jbe
mov
pusha
pop
push
push
cmc
jmp
push
xchg
mov
loope
fisubl
push
cmpb
mov
ja
or
out
ja
adc
addr16
stc
fdiv
xchg
pop
ljmp
loope
adc
jmp
xchg
inc
or
cmpsb
pop
repnz
jo
mov
iret
mov
out
add
in
mov
aam
outsl
mov
roll
fistl
push
xchg
xor
add
mov
mov
sbb
add
jnp
fbstp
dec
es
outsl
inc
and
outsb
dec
or
cmp
in
add
cltd
clc
sbb
fsubrl
outsl
xor
mov
lods
lret
push
xchg
stc
dec
push
lds
sub
or
ja
xchg
aam
rcll
lret
popa
js
sub
xchg
pop
pop
sub
sub
adc
pop
ret
mov
sub
mov
jl
push
mov
aad
mov
fs
xor
icebp
and
cmpsl
mov
dec
push
aaa
out
push
adc
pop
cmp
inc
xchg
cltd
jecxz
fs
jns
shlb
nop
adc
loope
int3
cld
jmp
sub
mov
in
loopne
push
mov
pop
aad
dec
and
jg
inc
sbb
jbe
xchg
in
pushl
cwtl
xor
push
cmpb
cmpsl
xchg
loopne
xlat
add
xchg
jns
les
in
xchg
cwtl
cltd
mov
cld
popf
mov
insl
jle
adc
mov
mov
movsb
rcll
dec
in
sar
sti
add
dec
inc
xchg
cmp
scas
push
xchg
push
mov
cld
sbbb
fdivrp
inc
into
xor
push
daa
mov
xchg
sub
inc
call
xchg
popf
int
xor
or
out
mov
jne
push
popf
lahf
inc
pop
adcl
xchg
je
inc
xchg
mov
jb
std
dec
xor
orl
rcl
je
xchg
sbb
push
sub
xor
push
fwait
scas
adc
lret
aas
inc
adc
je
xlat
in
inc
jae
adc
clc
test
adc
ja
inc
outsb
gs
jge
push
pop
insb
adc
imul
mov
iret
jmp
xchg
scas
negl
mov
in
shlb
insl
push
xchg
loopne
or
fpatan
lods
dec
sub
insl
jmp
fnstsw
cld
in
fcmovnu
jmp
push
addr16
and
mov
and
inc
jp
ds
lcall
adc
xor
or
shll
mov
fldenv
push
adc
mov
in
js
iretw
jb
or
iret
xor
outsb
call
dec
cld
xlat
pop
pop
push
dec
out
in
into
test
rolb
adc
pop
je
add
push
mov
insl
push
dec
ficompl
xor
mov
ds
inc
inc
mov
je
mov
mov
lret
fistpll
mov
cltd
pop
or
adc
daa
or
shll
xor
lea
in
popa
test
sub
ja
inc
inc
lock
pop
and
xchg
mov
and
xchg
jmp
insb
or
mov
push
clc
mov
jbe
pop
lahf
sub
jp
into
cmc
adc
mov
dec
fcom
das
shrd
out
jmp
ret
pop
fs
mov
cli
jg
inc
insl
push
das
pop
cmp
test
rcrb
jne
loopne
shrl
movups
or
adc
je
lcall
jnp
sbb
xchg
bnd
add
inc
scas
gs
lret
into
cmp
fwait
addr16
inc
sub
enter
fs
insb
push
cmp
insb
xchg
out
jle
clc
mov
icebp
pop
jg
movq
fisttpl
ds
push
cld
popa
and
test
mov
jl
fdivrs
inc
adc
scas
movsb
xchg
xlat
adc
inc
sti
cwtl
push
scas
push
dec
dec
mov
test
mov
mov
sbb
add
xchg
das
lea
adc
data16
mov
mov
cwtl
outsb
cmp
shrl
js
and
push
les
mov
adc
rcrb
xchg
add
scas
stc
cmc
scas
pop
mov
xchg
push
cmp
or
lret
test
xor
negb
add
xchg
mov
jp
push
int
fidivrs
fsubl
imul
loop
pop
pop
mov
imul
cmp
pop
andl
popa
cmp
mov
ljmp
sub
mov
dec
fstpt
adc
flds
repz
call
out
mov
aam
insl
adc
sub
jge
aas
xchg
mov
add
fs
jp
out
stc
shlb
mov
push
jb
cmovge
aam
inc
cltd
loop
dec
push
sbb
lods
fisttpl
adc
jle
dec
lods
jns
popf
aas
jge
aaa
gs
xchg
mov
mov
int3
cmp
gs
rcrl
xchg
lret
jns
iret
out
fdivs
rorb
push
icebp
out
arpl
jns
testb
faddl
add
imul
jbe
fdiv
adc
call
in
push
inc
mov
adc
mov
mov
cmp
push
dec
xor
mov
and
push
stos
scas
leave
sarb
scas
mov
add
sub
arpl
js
jbe
push
outsl
mov
dec
sbb
jg
outsb
push
sbb
loope
cmpl
fists
xor
sbb
xlat
fidivrl
adc
xlat
repz
ds
das
inc
xor
in
jecxz
pop
sub
cmp
cmc
dec
idiv
aaa
push
mov
xchg
mov
mov
xchg
mov
lock
and
andb
sub
pop
inc
out
sbb
jg
cs
stc
lds
push
mov
lcallw
aas
sbb
aas
pop
sbb
imul
jae
fstpl
sub
in
inc
test
add
shlb
jle
sti
mov
mov
out
inc
adc
push
mov
dec
jle
cmp
ljmp
dec
insl
and
lahf
cmpsb
mov
loope
mul
push
cld
push
jbe
dec
fisubrl
icebp
jo
mov
call
mov
fs
ret
ficoms
push
idivb
mov
sbb
mov
jo
pop
ret
loop
movsl
cmpsb
inc
push
dec
cmp
sbb
es
insl
insl
dec
lahf
mov
sub
pop
fstps
stos
mov
add
das
in
shrl
loop
jb
sbb
push
repz
and
jo
jle
inc
rcrb
push
pop
adc
mov
inc
les
xorb
shrl
adc
pop
or
mov
dec
and
imul
push
shl
jno
sbb
js
test
push
lcall
shl
stc
and
inc
mov
push
idivl
pop
cmpsb
and
repnz
cmpsl
and
xchg
and
aam
out
test
jns
mov
movsl
cmc
mov
call
jmp
out
orb
and
scas
int
jge
out
orl
adc
insb
dec
xchg
mov
and
mov
movsl
xor
mov
out
xor
dec
cmp
xor
jecxz
outsb
test
out
or
sti
call
pop
leave
inc
out
push
fcmovnu
push
sub
stc
mulps
adc
adc
pop
fistps
out
rorb
mov
xchg
aam
pop
call
dec
mov
lret
add
sti
inc
test
jno
or
fisttps
dec
leave
loop
mov
add
sbb
cmpsl
add
adc
mov
fldenv
je
mov
push
sbb
jb
fwait
loope
sbb
shrl
xchg
icebp
leave
iret
or
push
ffreep
adc
and
dec
mov
and
sbb
mov
aam
dec
in
cvtps2pi
and
sub
dec
xor
jae
pop
fdivl
xor
push
int
cmp
or
lods
repnz
lods
inc
xchg
pop
cmp
sub
jge
jmp
push
jp
subl
fdivs
mov
imul
stos
adc
cmpsl
insl
jmp
xchg
icebp
pop
cltd
les
test
cmp
add
mov
mov
aam
or
pop
jp
stos
aam
lds
notb
lahf
std
jg
mov
das
mov
dec
nop
xor
clc
jnp
leave
lods
sahf
push
jle
push
jne
dec
jp
push
inc
xchg
push
int
movsl
jle
mov
clc
sub
add
dec
stc
pop
and
pop
add
fimull
movsb
fs
and
arpl
arpl
cmp
sbb
mov
notl
shrb
xorb
mov
xor
les
mov
xchg
pop
sbb
testb
push
mov
and
mov
pop
sbb
cmpsb
sahf
lcall
and
pop
ss
mov
pop
pusha
lock
popa
xchg
push
loope
das
lock
pop
xchg
aas
cmp
lods
cmp
jne
push
out
and
cmc
mov
sbb
pop
jle
imul
pop
fisubrs
adc
cmp
sub
pop
fmull
rorb
cmp
dec
cli
sbb
xor
sub
scas
fcomp
dec
cmp
aas
ljmp
xor
mov
xchg
mov
lock
push
xor
cmpsb
mov
add
cmp
inc
add
pusha
and
test
jne
cmpsl
stos
loope
ret
dec
jns
push
pop
fsubrl
test
fsubs
xchg
sbb
subl
cmp
ret
pop
enter
aaa
ljmpw
int3
cmp
scas
jl
lock
push
sarb
clc
jecxz
das
lcall
cmc
shrl
dec
aad
push
pop
and
retw
jnp
mov
pop
fldl
dec
cmp
mov
jns
insb
xchg
sub
jl
xor
mov
fcmovu
rcr
jmp
inc
and
jge
push
xor
xchg
idiv
mov
aad
mov
insl
inc
and
push
out
inc
dec
cmc
divb
ljmp
push
xor
xchg
jbe
mov
stos
mov
push
in
stc
xor
fadds
add
js
cmp
sub
neg
push
xor
jns
int3
shlb
xchg
popa
fisttpll
ja
bound
mov
jl
or
pop
stos
cmpsl
aad
xchg
push
mov
repnz
sbbb
cld
inc
push
jp
repnz
outsl
test
repz
pop
pop
cmc
arpl
sub
iret
das
add
in
das
mov
mov
mov
fs
scas
scas
loope
rorb
cmpsl
pop
sub
nop
sbb
into
clc
test
sbb
mov
shr
or
dec
out
dec
mov
mov
in
frstor
sub
adc
xchg
movhps
nop
lea
lods
mov
test
and
aam
dec
ss
jge
add
mov
push
cmc
push
dec
movsl
lahf
cs
xlat
mov
out
mov
insb
fidivs
cmp
repz
ret
dec
lret
jmp
xchg
stos
mov
and
rcll
adc
fnstenv
pop
cli
stc
fucomi
mov
inc
test
enter
pop
test
sub
pushf
adc
les
aas
inc
adc
mov
sahf
pop
mov
fdivr
ret
cmp
dec
int3
xchg
mov
andl
adc
insl
inc
cmp
push
mov
lret
jae
rorb
lcall
xchg
cmp
je
inc
jo
pop
hlt
push
je
aaa
and
sbbb
mov
lahf
inc
add
push
movsb
dec
icebp
fstl
dec
and
jbe
push
xchg
and
imulb
xchg
jmp
push
out
and
mov
jb
cmp
aam
insl
mov
push
adc
sti
es
mov
sbb
push
jns
shl
mov
xchg
xchg
cmpsl
inc
mov
imul
mov
ds
mov
pop
cmp
sbbl
mov
cltd
mov
add
fwait
in
xor
mov
in
sbbb
aaa
stos
mov
sbb
aad
int
orb
fcoml
int3
jno
in
xor
add
scas
cltd
aam
bound
sbb
sti
push
ret
mov
dec
pop
xchg
mov
xlat
pop
test
into
test
cmp
mov
dec
inc
mov
test
adc
push
mov
fldenv
out
bound
icebp
stos
cld
jg
mov
jns
mov
pushf
cli
and
jnp
adc
xor
jnp,pn
test
stos
jbe
loope
add
cmp
jle
pop
loope
imul
jo
lods
xchg
iret
out
inc
inc
rorl
into
les
scas
push
das
stc
push
sbb
push
sub
iret
mov
aam
mov
cmpsl
cltd
fldcw
mov
call
ds
mov
sub
mov
iret
gs
or
ja
ja
xor
pushf
mov
inc
push
dec
jno
xchg
fs
pop
add
pop
out
mov
jp
dec
pushf
jnp
jb
es
into
mov
xchg
xchg
mov
test
add
aam
mov
pop
dec
mov
fimuls
xchg
nop
pop
jmp
call
fadd
xor
add
or
jge
cmp
xor
cmp
sub
insl
jbe
jae
add
jns
cs
pop
xchg
mov
aas
lea
leave
stos
sbb
hlt
cmp
sbb
sub
push
ljmp
xchg
subb
pop
or
and
sbb
das
test
shrl
xor
pop
icebp
push
aaa
scas
rcl
cmp
xchg
out
scas
mov
pop
loop
or
add
or
inc
mov
push
stos
cwtl
sub
ja
push
jno
adcl
repnz
cmpsl
and
dec
mov
enter
push
inc
bound
stc
int
pop
mov
rcrl
call
faddl
push
fdivs
add
ds
push
enter
jbe
fisttpl
test
jmp
dec
loop
push
dec
sub
inc
add
xchg
mov
repz
push
mov
xchg
std
shrb
into
cmp
mov
mov
shlb
sti
ljmp
leave
not
sbb
test
sbb
or
mov
xchg
sbb
data16
fldenv
out
jno
pop
aam
cmp
shl
shl
xchg
jne
shr
loope
mov
fsts
leave
inc
pop
sub
pop
test
pushf
ret
std
pop
mov
add
mov
aaa
repnz
xor
lods
icebp
sbb
dec
stos
jp
popa
add
fwait
iret
popa
jno
clc
or
dec
and
inc
sbb
inc
sbb
or
rolb
sti
cmpsb
jmp
dec
pop
mov
outsl
int3
dec
enter
popa
imul
ljmp
push
sub
xchg
lret
inc
pop
lcall
pushf
xchg
jns
fwait
popf
nop
sbb
and
cwtl
fs
fidivrl
fwait
cltd
jnp
or
loope
aam
jmp
movl
pop
pushf
pushf
outsb
add
jle
mov
iret
hlt
cmp
les
lods
adc
in
call
sbb
pushf
ss
ficoml
dec
sbb
jmp
dec
cmc
mov
xor
xor
cmpsb
pop
xor
pop
add
or
in
fidivs
sub
jecxz
lahf
jge
test
fisubrs
xchg
mov
fstpl
mov
bound
hlt
loope
dec
jnp
dec
sbb
cwtl
sub
jb
jge
dec
dec
sbb
jl
xor
fisubs
clc
push
xchg
pop
inc
mov
repz
inc
push
adc
loope
mov
std
in
leave
test
jo
adcl
mov
mov
and
pop
lret
pop
mov
sbb
pusha
adc
pop
ret
inc
cmpsl
sub
lahf
xor
and
pop
inc
pop
outsl
sbb
out
negl
cmp
popa
jns
mov
dec
shl
mov
xchg
out
sub
mov
adc
mov
shll
push
jo
leave
cmc
mov
sbb
mov
mov
scas
frstor
decl
test
outsl
cmp
adc
sub
in
adc
xchg
rcrl
gs
push
mov
xchg
mov
aam
sti
adc
rolb
adc
arpl
sub
pop
push
mov
mov
mov
push
int3
mov
jbe
dec
add
jne
mov
outsl
lcall
xlat
fdivr
test
push
test
fadd
add
dec
scas
mov
mov
es
jns
mov
mov
sahf
xor
movsb
xor
mov
mov
loop
decl
mov
and
fucom
frstor
inc
jg
mov
mov
or
orb
xlat
filds
sub
inc
sub
cmp
pop
cmpsb
mov
jp
jl
ss
lock
pop
imul
lods
lds
aas
cmp
inc
xor
movsl
dec
jnp
inc
popf
inc
test
mull
inc
sbbl
dec
add
or
mov
lcall
mov
inc
mov
test
jno
push
jnp
jecxz
mov
rol
lea
and
pop
orb
lods
inc
in
add
insl
stos
cmpsl
push
or
test
mov
bound
add
out
fstl
imul
in
cli
jbe
std
cmp
jo
pop
or
sub
mov
adc
fwait
mov
out
cmpsl
jno
mov
adc
iret
mov
pop
cmc
adc
mov
or
push
add
popf
jmp
nop
testb
mov
dec
pop
dec
xchg
inc
aam
fsubrl
cmpb
mov
and
fnstcw
pushl
dec
cmpsl
cmp
dec
sahf
jle
dec
cmp
dec
push
jnp
cmp
mov
pop
xor
or
ds
test
adc
and
in
cmpsb
lahf
stos
jle
rcll
pop
lcall
shlb
js
mov
mov
sub
mov
sub
mov
push
inc
iret
in
mov
inc
or
mov
mov
cli
xchg
inc
enter
movsl
js
stos
sub
idivb
lods
jno
push
mov
les
fwait
cmp
pop
or
test
and
push
pushf
in
in
int
add
pop
ja
cmp
inc
jl
xor
mov
sbb
xchg
fisubl
push
pop
jno,pn
mov
mov
push
outsb
dec
mov
adcb
xchg
xlat
into
idivb
das
dec
fisubrl
mov
mov
pop
add
xchg
pop
mov
jb
jne
jns
fwait
rcr
in
icebp
sbb
cld
cmp
idiv
xor
and
add
push
nop
neg
add
imul
add
mov
enter
push
out
push
dec
maskmovq
imull
loope
inc
or
ds
dec
sbb
or
push
sbb
mov
xor
inc
push
mov
in
mov
dec
push
pop
and
xor
pushf
jecxz
imul
push
cmpsl
shl
mov
filds
or
loop
adc
mov
aaa
aaa
xor
shll
push
loopw
mov
xchg
mov
lret
gs
enter
dec
rorb
sahf
lods
inc
pusha
rcl
movsb
out
cmp
mov
inc
or
mov
cmp
int3
jmp
rclb
scas
imul
mov
scas
addl
fidivl
mov
xchg
jg
das
push
aaa
in
outsl
sti
pop
xor
lock
stos
adc
int
xchg
mov
jbe
dec
push
pop
inc
jno
mov
push
add
mov
xorl
or
jp
aad
sarl
xor
leave
lods
sub
fucom
cltd
nop
orb
add
cltd
cmpsb
out
xlat
sub
sub
lods
dec
andb
xor
jmp
pop
in
xor
sbb
addr16
sbb
jne
cmp
push
add
inc
xchg
inc
sbb
outsb
jle
in
dec
pushf
out
add
mov
mov
lods
pop
rcrb
adc
push
pop
or
rorb
mov
xor
push
call
add
push
add
cmp
add
mov
push
fnstsw
imul
pop
sbb
or
mov
je
inc
or
nop
out
pusha
test
xchg
out
sub
sbbl
xchg
mov
addr16
add
xchg
icebp
out
addb
mull
pop
aad
lahf
or
push
mov
mov
cmp
xor
aaa
loop
js
movb
cltd
lods
mov
xor
mov
adc
ficoml
cmp
das
scas
imull
fs
mov
into
mov
aaa
add
adc
xor
mov
jno
addr16
fstpt
cmp
icebp
in
xor
repz
jle
jb
or
loop
add
lret
xchg
shrb
shrl
sbbb
cli
daa
jl
pop
pushf
ret
sbb
inc
stc
adc
jg
pop
adc
out
pop
mov
jo
loopne
jge
insb
adc
pop
or
fstpl
test
mov
das
scas
mov
add
gs
out
test
push
lock
sub
fs
scas
fnstsw
xor
popf
jne
imul
xchg
cmc
shll
sbb
jno
dec
arpl
sub
cmp
pusha
jecxz
enter
pop
sub
lock
outsl
enter
out
push
inc
dec
out
sbb
cwtl
fists
xor
cmp
cmp
cs
inc
shll
lret
js
test
pop
push
lds
or
mov
push
fimuls
pop
pop
inc
xchg
cmpsb
jg
lds
aam
xor
adc
add
jo
das
hlt
leave
shlb
mov
dec
mov
or
xchg
insl
mov
sahf
sub
stc
add
mov
mov
or
inc
or
jmp
and
fildl
enter
mov
popf
aas
loope
adc
or
adcb
dec
cwtl
js
int3
popa
inc
cmpsl
and
cltd
stos
es
push
or
jo
test
aam
stc
mov
scas
popf
or
and
inc
or
push
lods
xor
xorl
xor
xchg
cmpl
aas
jae
mov
in
repnz
insl
daa
mov
mov
add
aas
out
mov
lods
loopne
xorb
iret
and
cmp
arpl
dec
les
push
pop
xor
or
jge
arpl
pop
lods
mov
sbb
cld
or
pop
dec
inc
add
jb
inc
ret
add
imul
insl
cmpsl
lods
dec
insl
insl
push
pushf
lcall
mov
out
jo
cli
outsl
mov
or
mov
adc
push
mov
dec
stc
subb
pop
out
xor
pusha
dec
fisttps
pop
pusha
push
fisubrl
dec
test
jp
pushf
addr16
pop
fidivrs
imul
pop
les
cwtl
adc
hlt
lds
repz
push
test
mov
or
add
rcrl
mov
adcb
pushf
sahf
mov
mov
mov
or
or
ljmp
out
xchg
adc
xor
fsubrl
xlat
mov
cmp
cmp
loop
loope
inc
mov
xchg
and
sbb
push
mov
jbe
pop
adc
pop
test
or
cs
and
mov
or
sub
addl
xchg
imul
or
jg
loop
lea
aad
push
xchg
test
or
sub
pop
stos
inc
push
xor
leave
shlb
addr16
iret
gs
or
in
lret
scas
rclb
scas
es
push
push
orb
fwait
jno
adc
jnp
in
incl
out
cmp
je
ss
mov
cvttps2pi
gs
insl
lcall
gs
add
stc
test
cmc
mov
or
call
aas
sbb
sub
rcrb
sub
dec
mov
sarb
mov
es
shll
rcl
stos
mov
cmp
clc
mov
in
into
xchg
out
mov
les
push
jmp
or
add
inc
xchg
enter
les
mov
lds
xor
fs
sub
scas
aaa
inc
mov
push
popa
fstpt
jne
xor
repnz
aas
push
and
jo
ret
adc
push
dec
test
test
lret
scas
push
sub
imul
cltd
push
outsb
hlt
mov
jg
pop
xchg
imul
in
xor
imul
sti
enter
inc
scas
rolb
add
xchg
mov
out
pushf
addb
pop
clc
cvtdq2ps
sbb
mov
icebp
mov
popf
cmp
or
pop
jns
pop
mov
add
lea
and
xchg
cmp
jmp
mov
cli
out
jns
js
mov
gs
inc
icebp
arpl
enter
lret
add
leave
push
cmp
movb
mov
jbe
in
mov
shll
fsts
jge
pop
or
fidivl
pop
insl
mov
mov
repz
repnz
pop
xorb
repnz
add
jno
sub
xchg
sarb
nop
icebp
nop
xor
shl
pop
stc
and
lods
sbb
jns
inc
inc
inc
popf
sbb
je
enter
push
mov
std
mov
imul
jge
mov
addr16
mov
adc
jne
add
push
xlat
subl
insl
pop
xchg
cmc
mov
push
xlat
xchg
push
xor
dec
xchg
scas
sti
cld
jge
mov
and
xor
cmpsl
insb
cs
popf
icebp
les
push
iret
and
jg
jns
jmp
ss
sub
in
mulb
push
js
xchg
repz
jp
cmpsl
jg
outsl
dec
dec
jl
filds
pusha
testb
sub
testl
je
jnp
adc
lret
mov
mov
adc
shlb
and
filds
or
fdivrs
cmp
or
mov
push
out
jo
dec
mov
imul
mov
adc
test
adc
daa
into
movsl
fs
rol
out
jmp
pop
xor
jne
push
outsb
sub
outsl
cltd
mov
iret
inc
push
into
push
adc
pop
sub
lea
mov
push
iret
sbb
xor
mov
or
repz
movsb
popa
pop
adc
mov
xor
mov
aaa
test
leave
xor
repz
push
cmp
aaa
inc
sub
xchg
shrl
or
es
mov
xorl
sub
add
sbb
cmc
fsub
cmp
sbb
fcmovnbe
add
jae
xchg
or
xor
pop
pop
jp
aas
cmp
stc
push
adc
ret
xchg
or
stos
in
bound
push
es
ret
mov
mov
mov
movsl
roll
lods
mov
cli
or
imul
dec
cmp
or
push
outsb
clc
or
cmpsb
mov
adc
dec
or
xchg
outsl
push
sbbb
push
fstpl
push
push
mov
pushf
loope
in
ret
or
push
jecxz
outsl
mov
inc
je
ficomps
lahf
stc
jle
pop
pop
dec
popf
xchg
shl
mov
ljmp
xchg
bound
fidivs
jb
addr16
mov
cmc
mov
pop
or
lds
push
add
cltd
jmp
inc
mov
push
or
or
inc
fidivl
rol
ds
dec
test
jmp
lahf
fdivrs
fs
jp
jno
jne
into
dec
add
mov
repnz
stc
inc
cmp
adc
sbbb
xchg
rol
push
and
xchg
lea
jb
mov
mov
inc
ljmp
push
stos
inc
cmp
shl
xor
shll
filds
js
pop
insb
xchg
lods
aas
dec
xchg
cmpsb
sahf
mov
ja
cld
sub
dec
test
xor
cld
mov
xorl
test
cltd
mov
jns
jae
sub
sbb
jnp
inc
dec
inc
jno
ret
or
inc
pusha
dec
xchg
shll
pusha
lret
outsb
outsl
arpl
cmpsl
jmp
mov
sub
popf
mov
push
pop
jo
pop
mov
xchg
xorb
aaa
add
gs
sub
mov
mov
mov
ja
mov
dec
inc
or
inc
jl
sbb
or
pop
add
push
push
mov
lods
pop
iret
das
push
hlt
push
nop
scas
fsub
mov
enter
dec
sbb
xchg
xor
and
repnz
cmp
aas
sbb
fisubrs
add
daa
packssdw
out
iret
dec
popf
cwtl
push
bound
jae
xor
dec
mov
cmp
lods
inc
js
inc
cs
fistpl
and
idivl
and
and
out
call
or
fs
jge
jl
xor
pop
sbb
xor
fildll
out
sahf
dec
out
out
mov
xlat
adc
sbb
pop
add
cmp
push
call
push
ja
xchg
enter
and
sbb
repnz
dec
fdivrs
and
mov
insl
mov
mov
scas
ljmp
sbb
add
cld
loopne
jno
mov
movsl
or
jo
insb
cmp
clc
or
mov
sub
xchg
xor
mov
mov
daa
fcompl
mov
sub
push
xor
jbe
jbe
and
or
sbb
das
outsb
lods
mov
idivl
jge
imul
addl
daa
mov
mov
cmp
jae
cmp
fisttpl
push
das
lea
or
sbbl
aam
subl
sbb
mov
icebp
fimuls
mov
push
cli
pop
adc
insl
dec
sbb
xor
in
cwtl
xchg
fdiv
jae
enter
inc
lahf
xchg
cwtl
xchg
mov
in
je
sbb
adc
push
insl
lcall
xchg
sbbb
adc
jb
push
pop
mov
shlb
stc
sahf
outsl
sub
aad
jnp
jb
mov
pop
xchg
push
je
jmp
pop
mov
pop
jmp
insl
loopne
and
mov
leave
in
subb
adcb
leave
ror
fcompl
fld
mov
mov
push
out
cltd
push
or
dec
or
pushf
mov
popa
outsl
loopne
ss
push
jl
mov
push
sub
idivb
add
and
into
cld
or
push
fsub
pop
xchg
dec
loope
push
mov
xchg
xchg
cli
cmpl
sub
push
jno
jl
push
mov
iret
xor
pushf
lret
add
insl
add
pop
adc
sub
xchg
sbb
stos
stos
imul
xchg
jne
cld
into
loopne
les
push
fldt
mov
ds
jo
xchg
subps
cmp
sub
dec
pop
mov
cmp
xchg
add
clc
adc
sahf
add
ljmp
cmp
mov
mov
cmp
adc
enter
inc
divl
mov
in
xchg
daa
lcall
push
in
xchg
popa
adc
or
jl
cwtl
lock
sbb
bound
xchg
and
pop
icebp
mov
add
add
sarl
out
mov
pop
sbb
add
les
movb
test
out
pushf
or
or
and
dec
cld
in
sahf
cmpsb
lock
sahf
ja
or
push
lea
xchg
cmp
xchg
imul
fsubr
out
xor
in
outsl
push
scas
xor
hlt
inc
cmp
aas
add
mov
mov
test
or
push
mov
not
iret
inc
dec
xchg
push
data16
call
int
and
mov
je
xchg
mov
ja
enter
fimuls
es
lret
int3
mov
leave
jae,pn
xor
push
call
lahf
dec
pop
jnp
sahf
inc
std
dec
loope
iret
insl
cmpsb
insl
in
mov
sbb
mov
jb
xor
sahf
test
xchg
mov
movd
in
xor
jg
sti
mov
je
pop
es
fsubl
mov
hlt
or
or
ficomps
lahf
icebp
scas
add
movsb
out
lods
adc
repnz
leave
xchg
jbe
stos
cs
aaa
push
in
cli
jb
sti
test
sub
or
out
push
ret
call
stos
in
nop
push
int3
int3
add
in
int3
fidivs
mov
xor
mov
xor
lea
sti
mov
lcall
jne
fisubrl
jbe
cmp
data16
jg
add
sub
repz
jnp
insl
and
jge
pop
push
push
bound
test
faddl
hlt
lea
fisttps
jb
iret
int3
mov
inc
mov
mov
leave
pop
scas
inc
shlb
test
pop
stos
popa
ss
push
fldl
push
pop
cmpsb
inc
ja
xchg
test
adc
ja
xchg
dec
xor
bswap
test
inc
je
sub
in
jle
dec
adc
mov
jns
sub
fldt
push
mov
push
jne
fst
jle
in
cmpsb
xchg
jnp
adc
sbb
cmp
sbb
fs
out
cmp
mov
test
mov
sub
sbb
mov
jge
repz
mov
push
cmp
mov
pop
sub
inc
jne
inc
sub
jle
mov
lods
xchg
lret
loope
pop
sub
and
rolb
stc
or
lret
scas
fwait
mov
mov
ss
jbe
add
xor
pop
test
or
mov
cmpsl
sub
call
lods
sbb
jb
xor
cmpsb
test
stos
bound
add
cmpl
xor
push
xor
push
rorl
cmpsl
lcall
jns
mov
dec
xor
in
lgs
sbb
es
jnp
xor
and
in
inc
and
cld
cmp
jg
jb
jmp
cmp
movaps
call
fs
sbb
mov
lea
adc
movsl
fisttpl
loope
cmpb
xor
lcall
pusha
lock
fidivs
sbb
xlat
xor
push
dec
pop
nop
scas
lahf
imul
scas
sahf
inc
out
sub
test
data16
cmc
nop
and
mov
inc
enter
into
sarb
loope
xor
sbb
and
push
xchg
sbb
xchg
notb
pop
scas
mov
ret
push
or
arpl
push
xchg
mov
and
jp
imul
xchg
xchg
push
ficoms
xor
add
dec
sub
cmp
mov
sub
xchg
pop
mov
dec
xchg
lods
adc
xchg
pop
iret
shlb
dec
enter
dec
jl
adc
inc
int
iret
cmp
jb
xor
fbstp
sbb
sub
aaa
fimuls
pop
cmc
dec
bound
push
or
inc
mov
push
xchg
outsl
pop
into
add
jge
lret
xor
data16
cmp
repnz
pop
out
sbb
mov
cmp
pop
pop
dec
xor
jnp
jmp
xor
cs
mov
sub
insl
pop
push
xchg
outsl
or
dec
insb
xor
lahf
adc
or
mov
adc
scas
popf
mov
lea
popf
pop
mov
jbe
and
sub
push
daa
mov
inc
xor
cwtl
adc
lret
add
xor
stc
out
mov
scas
cli
dec
imul
rorb
mov
pop
cli
dec
inc
or
and
pop
push
jmp
mov
and
pushf
add
mov
xchg
dec
or
hlt
imul
push
sbb
mov
mov
test
sbb
sub
outsb
push
pop
pop
sti
xor
or
out
cmp
and
or
flds
pusha
cmp
pop
and
cmc
ds
out
fwait
fwait
and
add
dec
out
jbe
and
aas
mov
push
jae
mov
mov
mov
int3
cmp
jno
sbb
pop
push
adc
dec
xchg
jne
sub
fwait
shrl
inc
repnz
shll
test
and
sub
fbstp
adc
mov
mov
stos
add
mov
inc
loopne
jno
xor
or
mov
arpl
inc
jns
movsb
fisubl
das
or
cmpsb
dec
aas
mov
bnd
inc
xchg
or
pop
jmp
in
jge
cmpsb
xchg
adc
xchg
int3
mov
dec
adc
adc
fidivl
aad
das
jg
test
pop
ja
mov
gs
lds
mov
jns
mov
in
shl
mov
sbb
icebp
mov
int
add
test
adc
cmp
fcmovnbe
dec
jbe
in
shrl
adc
add
ficoml
mov
icebp
and
das
sbb
sub
sub
add
gs
xor
std
add
add
mov
in
call
gs
cs
add
addb
add
filds
das
lcall
outsb
imul
fwait
mov
mov
push
loope
les
cli
pop
pop
jnp
das
call
imul
lock
dec
aaa
and
ds
mov
push
inc
scas
push
pushf
out
mov
dec
push
fwait
pop
cmpsl
call
pushf
push
and
pop
jns
lahf
lahf
ljmp
cmpsl
addb
in
xchg
popw
push
mov
mov
movsl
pop
inc
or
xor
daa
sbb
adc
or
nop
loope
flds
int
xor
and
and
clc
mov
mov
out
adc
push
mull
in
jns
mov
popf
iret
jne
pop
clc
sbb
insl
lock
adc
and
sbbl
negb
jecxz
pop
orl
xchg
in
shlb
dec
lock
and
andl
add
sbb
pop
adcl
jne
fmuls
mov
fxch
mov
lret
mov
ffreep
sbb
enter
int3
dec
out
or
int
inc
cmp
xor
imul
push
fiaddl
xchg
std
xchg
out
mov
cwtl
push
xor
sub
dec
popa
mov
sub
insl
negl
cmp
in
inc
mov
mov
mov
scas
xchg
enter
fcoms
cmovge
movsb
sbb
into
pop
call
or
or
mov
push
and
jae
mov
sti
and
mov
je
hlt
loope
xchg
roll
xor
inc
add
pushf
hlt
xlat
dec
add
sub
fdivp
fstpt
sub
scas
cld
ja
xor
mov
xor
sbb
testb
leave
inc
and
adc
insl
fidivrs
iret
addb
xchg
mov
pop
dec
int3
mov
lods
mov
mov
sub
out
mov
add
leave
mov
ret
mov
or
jbe
pop
sub
jp
add
dec
sbb
out
bound
andb
out
jmp
xchg
roll
or
inc
mov
shl
sahf
xlat
xor
pop
jg
sub
cwtl
inc
daa
xor
leave
cmp
xor
mov
and
xchg
stc
into
cwtl
push
fwait
sti
ljmp
push
add
jmp
xor
in
outsl
mov
gs
bound
xchg
call
mov
jl
hlt
fmull
push
pop
outsl
mov
jl
arpl
mov
in
push
or
pop
iret
jg
out
mov
pop
into
insb
mov
aad
mov
out
dec
xlat
test
xor
mov
mov
add
lods
jnp
mov
add
push
pop
in
pop
inc
leave
cmp
std
imul
dec
dec
and
stc
mov
ret
ror
fldl
jnp
inc
push
push
aas
ret
dec
inc
jo
cli
popa
sbb
inc
mov
scas
bound
fcomps
es
jmp
and
loope
jns
jnp
sbb
mov
xor
lods
insb
movsl
push
fisttpl
call
push
sbb
bound
adc
mov
sub
or
test
fwait
xchg
cmp
fmuls
adc
cli
mov
mov
jmp
mov
xchg
imul
inc
fildl
push
out
bound
bswap
mov
cmp
mov
sbb
shr
sahf
mov
sbb
sahf
push
inc
sbb
call
inc
pop
pop
mov
leave
jae
scas
test
adc
xchg
jl
loop
mov
xchg
aad
adc
mov
or
mov
inc
mov
and
int3
xchg
daa
xor
sti
int3
mov
or
or
jle
int
adc
jecxz
inc
xchg
popa
sbb
push
cmp
leave
pop
pushf
insl
test
lcall
cltd
dec
fld
mov
je
inc
cmc
mov
popf
xchg
add
outsb
out
add
loope
jne,pt
sub
push
insl
nop
fdivl
rcr
inc
aaa
pop
clc
ss
lcall
stos
mov
imul
movsb
cltd
xchg
fisubl
out
js
and
sub
jne
stos
repz
call
pop
dec
xchg
js
ficoms
cltd
inc
out
dec
rcrb
xor
test
fcoml
push
out
mov
sub
test
and
lock
cmpl
lods
lahf
clc
and
ret
jne
ja
pusha
mov
sub
stos
xchg
fsubrs
pop
cwtl
mov
pop
adc
mov
push
test
sbb
dec
inc
push
stc
add
push
and
jmp
incl
popf
pop
mov
jp
jno
adc
into
push
and
mov
icebp
clc
xor
xchg
jae
xchg
stos
fstp
mov
mov
in
cmp
cld
mov
stos
jmp
nop
xchg
pop
in
iret
and
ror
xchg
xchg
pushf
int
in
inc
jmp
and
pop
sbb
das
insb
inc
push
and
fisttpl
mov
testl
aaa
rol
or
pop
inc
bound
dec
xchg
loop
mov
sahf
sahf
push
dec
mov
jmp
stc
movsb
loopne
imulb
imul
pop
scas
inc
cmp
push
mov
call
or
and
mov
aas
adc
out
insl
adc
mov
aaa
stc
icebp
outsl
loopne
fcoms
hlt
mov
imul
test
lock
xlat
aad
sub
cmp
loop
ret
out
lods
inc
pop
fbld
std
jg
lahf
sub
push
mov
pusha
inc
movsb
adc
adc
pop
push
iret
outsl
add
pop
mov
lods
test
loop
test
xor
les
jl
xor
and
cwtl
pop
ljmp
movsb
in
and
adc
jge
jmp
rolb
shll
pop
mov
mov
scas
rcll
mov
jge
sub
mov
mov
lods
mov
int3
pop
stos
jle
push
shlb
mov
aam
inc
push
pop
xor
xchg
inc
insb
xor
jbe
pop
mov
adc
arpl
jbe
or
lock
mov
inc
movsb
pop
dec
cmp
sahf
daa
jns
push
sub
ret
fcoms
rol
jb
enter
xor
adc
aaa
sbb
or
clc
jl
gs
push
pop
jb
sbb
pop
pop
xchg
adc
inc
cmpsb
mov
dec
jnp
mov
pop
sbb
icebp
cli
mov
pusha
aam
fucom
cld
in
out
sarl
cmpsb
adc
enter
sub
rol
xor
mov
ljmp
mov
test
enter
lea
inc
add
push
adc
or
fcomip
inc
nop
lods
das
psubusw
incl
sub
int
insl
sbb
xor
cmp
in
lret
in
cmp
fcmovne
push
push
sahf
fadds
arpl
sahf
mov
dec
mov
mov
xchg
sbb
sbb
cs
jmp
leave
pop
inc
mov
xor
cltd
xchg
xchg
arpl
lret
out
sahf
outsl
cmp
cs
arpl
jmp
push
movsb
inc
inc
mov
mov
or
dec
ljmp
add
movsl
push
dec
push
imul
xor
push
or
leave
pop
fidivrl
jb
aam
andnps
jmp
in
mov
out
pop
out
adc
mov
mov
lcall
jp
lds
add
adcb
test
push
movsl
pusha
adc
testl
lcall
jle
arpl
push
popf
mov
or
aad
movhps
jge
bound
movsl
push
insl
insb
sahf
in
cmp
and
bound
pop
add
push
push
movsb
inc
push
enter
daa
ds
roll
enter
subb
adc
sar
enter
js
popf
stc
push
cli
push
jmp
stc
sub
mov
leave
dec
mov
leave
loopne
xor
mov
arpl
outsb
cwtl
inc
adc
xor
adc
arpl
pushf
mov
sar
xchg
sub
sahf
mov
imul
dec
jb
mov
jb
mov
into
add
ja
mov
push
push
and
xor
jo
test
test
inc
sub
push
pop
orl
inc
xchg
inc
xor
dec
inc
xchg
xchg
xchg
clc
dec
xor
inc
aas
je
das
lcall
popa
pop
out
mov
sub
jecxz
adc
add
es
push
sbb
popa
xchg
cld
test
popa
or
xor
dec
lock
mov
flds
pop
inc
enter
mov
lret
add
push
add
shl
sbb
xchg
cmpsb
dec
out
mov
add
fwait
xchg
xchg
sub
push
inc
push
movsb
pop
mov
lret
push
and
pusha
rcll
lahf
mov
je
icebp
pushf
inc
popf
gs
pop
leave
call
leave
pushl
sbb
test
loop
cmp
add
movsl
in
jbe
addr16
or
mov
mov
mov
aaa
add
fsubr
xor
xorl
cld
mov
cli
push
inc
or
inc
jae
outsb
xchg
scas
mov
push
mov
mov
js
ja
ret
js
sarl
xor
or
jns
and
inc
imul
push
adc
lds
dec
or
ret
and
cmp
mov
xchg
sub
dec
jge
ret
mov
lock
push
jno
push
sub
push
cmc
xor
jne
jge
jne
insb
and
insl
adcb
popf
pop
dec
rolb
add
add
mov
cwtl
iret
outsb
add
ljmp
adc
mov
ret
add
gs
and
push
jg
adc
cmpsl
or
sub
jne
dec
and
cmpsl
push
xor
sub
outsl
xor
orl
dec
sub
cwtl
incl
insb
or
lea
lea
fisubl
lods
mov
sub
dec
mov
mov
mov
mov
lret
loopne
or
ret
fwait
popa
xor
pop
out
fs
std
jb
je
jmp
in
test
imul
inc
out
shrb
mov
mov
jns
notl
cmp
pop
or
jle
jne
sbb
insl
mov
xchg
in
dec
stc
jle
roll
adc
pop
add
repnz
sub
or
mov
xchg
add
popf
jge
jmp
inc
push
jns
dec
push
mov
inc
leave
testl
jge
add
xor
xor
loop
pushf
jg
aam
orl
aas
mull
out
adc
cmpsb
mov
out
mov
je
stc
loope
rep
repnz
scas
test
adc
xchg
sub
sub
pop
push
xor
mov
das
add
push
xchg
xor
inc
jno
imul
adc
mov
mov
ljmp
push
inc
dec
jne
dec
fsubl
xor
in
loope
pop
rorl
and
xor
mov
ja
xchg
pop
mov
mov
dec
shrb
daa
jmp
lret
jae
fisttpl
xchg
xchg
pop
jb
int3
lahf
out
or
inc
pop
loop
adc
add
movsb
mov
dec
inc
ljmp
lds
pop
les
popa
cltd
mov
jns
xchg
test
sbb
das
adc
or
and
shl
shll
mov
out
out
fcmovb
cmp
or
movsl
cmp
sti
hlt
mov
push
ret
dec
xor
iret
loope
sub
sub
jno
imul
sbb
pop
sbb
sub
xchg
ss
cmc
pop
inc
ror
lret
cmpl
cmpsl
push
cmc
lods
int3
setg
movsl
fstpl
or
in
cltd
cwtl
mov
inc
xchg
xlat
pop
stos
mov
xor
int3
les
loop
out
lret
and
sub
mov
shld
mov
sub
pop
cmp
jecxz
dec
mov
lea
bnd
adc
nop
push
mov
push
repz
outsl
loopne
pop
adc
cmp
pop
and
pop
popa
syscall
idivl
jle
xchg
stc
mov
gs
and
idiv
push
mov
loope
test
rorb
cmpsb
push
lret
imul
sub
inc
insl
mov
push
sub
shrb
mov
add
and
push
xchg
push
inc
cmp
cmp
mov
cmc
shrb
add
fdivs
cmp
lods
xor
fists
mov
push
and
xor
movsl
inc
pop
mov
arpl
cmpsb
sub
icebp
out
scas
sbb
push
sub
outsb
jb
mov
add
mov
insb
les
daa
ja
adc
jmp
or
mov
out
lock
mov
sahf
push
in
icebp
sti
push
adc
fsubrl
push
stos
sbb
shrl
jb
sti
pop
mov
mov
dec
lcall
cmp
push
fisttpll
lock
int3
divps
or
ret
jae
sbb
jl
sub
or
in
fisttpll
popf
cld
les
sbb
lea
insb
loopne
sbb
push
repnz
mov
movsb
daa
cwtl
inc
jae
mov
add
push
je
and
dec
lret
jno
xor
loop
test
ljmp
push
pop
std
ljmp
pusha
jb
gs
loopne
scas
out
pop
jp
es
mov
pusha
or
mov
out
inc
jl
dec
pop
pop
rolb
add
mov
mov
inc
cmc
cld
sbb
test
inc
sub
inc
shl
mov
int3
insl
mov
fldcw
in
jl
ljmp
jne
ljmp
push
or
lcall
aam
fistpl
bound
stos
mov
dec
jnp
jmp
cli
adc
cltd
jb
adc
rcl
rol
scas
sti
jne
sub
nop
loope
push
jl
pop
hlt
call
xor
or
dec
sbb
aam
xor
add
push
or
push
mov
sbb
shl
mov
push
mov
sarb
mov
ret
jle
sbb
cmp
aam
xchg
mov
jnp
insb
or
adc
pop
je
jae
dec
jno
cmpsl
aam
cmp
frstor
add
pop
imul
add
aaa
or
lahf
je
cmp
mov
jne,pt
sub
add
ds
stos
jbe
icebp
outsb
fldt
mov
pop
leave
sub
or
sahf
xor
jne
cmp
dec
lods
stos
sti
jno
pop
std
xchg
add
aaa
sub
sarl
jno
push
or
cs
clc
cmpsl
dec
push
iret
lahf
lahf
dec
and
nop
cmp
push
rolb
or
jns
pop
scas
enter
sub
movsl
daa
aam
jne
inc
inc
jne
ljmp
xchg
xor
jle
jbe
leave
out
xchg
sahf
mov
mov
jns
sub
mov
xadd
xor
lds
popf
add
push
cmp
cmc
out
xor
and
mov
out
andl
push
inc
adc
xchg
inc
xchg
dec
jg
and
insb
cmp
jl
and
pop
jecxz
pop
stc
in
out
jge
push
or
icebp
shll
push
insb
clc
dec
mov
dec
xchg
pop
lods
pop
lret
adc
imul
lsl
jnp
pop
xchg
adcw
jnp
adc
or
dec
jg
clc
xor
inc
pop
out
jmp
movsb
mov
ror
sub
dec
imul
inc
cltd
arpl
jmp
jno
or
mov
popa
fs
and
xor
dec
loopne
repnz
shll
and
inc
outsl
in
pop
sbb
in
or
xchg
les
inc
adc
fisttpl
or
lahf
pop
adc
xor
cs
mov
aam
loopne
movsl
pop
out
inc
arpl
sub
sar
fists
dec
dec
scas
jbe
lret
mov
fisubl
leave
loop
inc
adc
mov
mov
jecxz
adc
push
mov
sub
mov
dec
or
xchg
push
lods
popf
add
lods
jno
xor
inc
add
mov
nop
ficoms
fists
or
xor
mov
sti
cld
and
dec
rcrl
or
fcoms
loop
xchg
mov
and
and
sti
or
fs
fwait
or
mov
repz
std
mov
jnp
out
adc
js
pop
scas
jns
aaa
sti
shl
adc
fcomps
cltd
fdivs
pusha
in
rcl
xor
xor
sub
mov
ja
or
or
adc
mov
push
inc
mov
in
outsl
lock
lcall
movsb
cmpsb
jno
mov
lds
ret
into
cmc
insl
mov
xchg
mov
adc
not
push
sub
insl
lret
push
sahf
fdiv
push
ficoms
repz
mov
pop
mov
ljmp
dec
addr16
popa
mov
cmpsl
or
in
or
mov
cltd
jp
inc
adc
lahf
addr16
dec
jno
cmp
imul
sti
cwtl
mov
and
inc
es
xchg
sahf
inc
aaa
add
adc
sarb
mov
lods
inc
adc
pop
inc
adc
lcall
sahf
mov
adc
mov
lock
repnz
sbb
jp
sbb
movsb
test
scas
les
adc
or
sbb
add
movsl
movsl
xor
or
divl
and
mov
add
mov
add
lcall
lret
shrb
adc
mov
pop
ljmp
fsubr
xchg
xchg
xchg
mov
mov
add
fistl
mov
xor
cmp
rcrb
pop
incb
ja
fucomp
jl
mov
shl
mov
or
xchg
outsl
psubq
roll
pop
push
adc
cmp
aam
adc
xchg
dec
aas
add
cmpsb
and
and
xchg
pop
pushf
testb
push
bound
lret
or
scas
sti
lret
sub
push
icebp
loop
mov
cs
imul
imulb
imul
jg
sbb
cmp
int
sub
cwtl
daa
std
jg
mov
push
ret
push
push
clc
cmp
lahf
mov
aad
outsb
popf
pop
shlb
pop
xchg
jmp
fsubp
adc
push
sbb
pop
cld
mov
mov
jae
dec
sbb
movsb
cmp
ds
push
pushf
movsl
aam
fildl
cmp
xchg
dec
rcl
je
out
call
shlb
jl
fstpl
aaa
dec
int
stc
cwtl
mov
mov
fwait
jp
movsl
pop
sub
pop
or
dec
aas
inc
sbb
icebp
ret
jl
jae
inc
incl
aam
jb
and
mov
mov
out
loope
clc
cmp
movsl
addl
pop
push
add
xlat
test
test
and
sub
inc
int3
cli
jl
adc
es
cmp
adc
dec
xchg
ja
push
icebp
js
loopne
jp
cmc
mov
sub
inc
mov
adc
cmp
pop
fs
mov
mov
mov
push
jno
or
add
or
jb
pusha
leave
mov
sti
dec
mov
imul
mov
sub
pop
push
push
pop
mov
jle
adc
stos
or
dec
jnp
push
mov
ret
orb
jbe
jecxz
sub
cmp
mov
test
xchg
adc
dec
cltd
stc
lods
scas
or
ja
mov
inc
jae
or
ja
xadd
sub
cmp
test
out
jb
xchg
addr16
cmp
cmp
pop
lret
lret
call
mov
imulb
jb
or
scas
xor
or
push
inc
fcomi
push
push
lods
and
mov
jns
ljmp
ret
mov
negl
sub
sbb
jae
sub
insb
mov
popa
push
xor
out
cmpsl
rcl
mov
mov
mov
shll
and
fwait
mov
mov
shll
pop
xchg
inc
xor
jle
push
sub
les
cli
mov
mov
add
xchg
xor
std
ss
fbld
adc
push
ds
and
xor
aaa
xor
lcall
int3
dec
sbb
jae
les
fcomps
mov
rclb
fists
fwait
aaa
fs
add
sub
xlat
test
jae
xlat
jmp
inc
add
and
dec
mov
ret
loope,pt
push
lcall
loop
sahf
xor
daa
sub
in
repnz
cmp
leave
test
inc
aam
mov
inc
das
inc
mov
and
js
nop
aad
sbb
mov
mov
and
dec
in
icebp
jns
sub
movsl
xchg
add
adc
xchg
cld
ljmp
mov
hlt
dec
or
jp
or
pusha
es
xor
or
and
mov
jle
lret
mov
neg
jmp
pop
es
jle
xchg
cs
adc
ret
pop
hlt
cmp
pop
std
fcompl
cld
xor
cmp
sub
sbb
rclb
ret
dec
mov
pop
stos
sub
ljmp
jns
sub
cmp
fnstenv
lcall
xor
hlt
mov
jmp
sbb
mov
add
lcall
add
push
js
daa
sub
pop
push
xor
hlt
adc
push
sbb
sub
lret
xchg
mov
mov
mov
scas
js
subl
mov
pusha
add
pop
jns
inc
or
sub
mov
rol
push
mov
add
cs
das
data16
leave
lods
hlt
inc
and
test
pop
cltd
push
mov
inc
outsl
pop
dec
lahf
push
mov
sbb
cs
push
sub
mov
and
and
add
add
and
scas
push
fistps
jle
out
xchg
imul
nop
cmp
testb
out
cs
jnp
sbb
jb
xor
ds
push
inc
test
aad
out
addr16
lods
int
push
adc
leave
add
or
das
and
push
incl
test
out
fsubl
imul
push
out
jns
enter
js
sub
pop
cltd
push
dec
les
mov
cmc
add
cmc
dec
cmp
rorb
and
cld
jmp
test
icebp
sub
sbb
out
outsl
adc
fs
mov
mov
push
pop
shrl
add
out
jmp
or
jg
fidivl
xlat
out
loop
movb
in
sbb
push
lods
bound
mov
push
mulb
iret
daa
imull
iret
or
clc
mov
push
inc
sub
bound
dec
mov
scas
jns
mov
sub
push
cmpsl
dec
push
xor
sbb
out
jle
push
ficoms
pop
pop
pop
push
ljmp
pop
outsl
mov
imul
adc
mov
ret
mov
add
iret
mov
cld
jae
aam
fs
outsl
cmp
in
dec
aam
mov
cmc
xchg
mov
sub
pop
mov
popa
sbb
cld
aas
ret
add
add
dec
mov
les
jge
iret
adc
mov
pop
nop
add
sbb
inc
insb
push
ja
iret
sbb
dec
int3
push
js
jg
mov
adc
jp
dec
pop
das
pop
mov
push
fcomp
xchg
icebp
cmpsl
loopne
dec
mov
xchg
aad
push
pushf
repz
mov
push
jbe
hlt
cli
mov
mov
repz
testb
ss
ret
lods
xchg
adc
add
sbb
xchg
sti
jmp
and
call
cli
and
sbb
sbb
icebp
popa
cli
fwait
push
dec
ds
cs
add
lcall
popf
pop
sbb
insl
jge
dec
push
ret
xor
sar
cmp
sbb
aaa
mov
push
and
xchg
sub
add
cmp
inc
mov
and
mov
dec
dec
in
jl
mov
cli
mov
inc
daa
inc
daa
add
mov
andl
lock
dec
dec
inc
fs
int3
fnsave
addr16
shll
fisttps
jns
xlat
or
pop
mov
in
xchg
adc
adc
lods
scas
push
or
sub
out
cli
inc
movsl
xsavec
aas
stos
dec
test
std
and
adc
into
push
test
and
sahf
cmp
mov
rdtsc
or
mov
mov
pop
and
ret
xchg
add
sub
aas
sub
jmp
cmp
movaps
adc
and
shl
fists
cmp
sub
xchg
push
mov
rcrb
call
out
mov
adc
outsl
add
fnsave
and
scas
or
xorb
jg
cltd
adc
fdivl
mov
iret
cmp
roll
inc
hlt
cmp
stos
mov
aam
pop
mov
sub
movsl
in
jmp
jp
mov
fwait
int3
test
scas
test
inc
pop
fcmovnb
add
lahf
rorl
dec
js
adc
rolb
mov
add
adc
and
clc
cmpb
movsl
adc
jne
add
mov
out
aam
stos
stos
js
push
push
jecxz
arpl
dec
cltd
inc
jne
or
add
adc
outsl
enter
das
call
xor
movntps
xlat
and
fisubl
fnstcw
jne
pop
lahf
rorb
insb
xchg
adc
push
aas
bound
sti
and
or
xchg
xor
pop
push
cmp
lret
cmp
fs
dec
or
andb
insl
gs
iret
inc
jl
stc
cmp
cwtl
pop
mov
aam
dec
cld
stos
or
xchg
inc
enter
jns
pop
inc
aaa
inc
push
jecxz
adc
test
mov
push
sub
sub
mov
int3
popf
cwtl
je
xchg
pop
rclb
xchg
dec
pop
aam
jl
jnp
cmp
in
stc
pop
aas
mov
mov
mov
xlat
push
ljmp
or
cwtl
mov
mov
jnp
insl
dec
pusha
shll
xchg
lret
mov
jb
or
adc
sub
push
leave
lods
pop
lds
js
push
or
pusha
loope
pop
bound
pop
inc
leave
cmp
popa
mov
fmuls
sub
shll
sub
mov
mov
in
jl
jp
test
inc
arpl
outsl
or
fdivrl
push
sub
ljmp
and
in
push
push
fwait
xchg
sbb
popa
popa
icebp
je
mov
icebp
fbld
leave
mov
xchg
lds
bound
adc
push
ret
into
sbb
movsl
aam
push
hlt
add
imul
in
xchg
or
jne
sbb
jae
nop
push
aas
mov
mov
mov
in
les
mov
cmp
jne
mov
cltd
movl
fs
xor
lods
mov
out
lret
mov
repnz
fimull
sbb
pushf
pop
xor
inc
movsb
movsl
scas
lret
fs
ror
lods
or
push
dec
and
sbb
orb
inc
int
lock
lds
jb
ret
test
scas
lock
fistpl
mov
out
fs
ds
and
in
sbb
popf
mov
cwtl
cmpsl
inc
xchg
jle
mov
insb
adc
xor
jo
out
mov
imul
xor
mov
insl
add
cmc
xchg
lock
push
jmp
mov
test
loope
negl
lods
ss
shlb
jns
shlb
xchg
dec
les
rcr
repz
mov
leave
push
mov
stos
cmp
mov
shlb
stc
push
dec
pushl
cmp
or
ja
outsb
ss
ss
xor
adc
or
xchg
push
cmp
cmp
mov
push
mov
adc
cmc
out
sub
xor
arpl
xor
mov
fxch
push
sbb
cmp
cmc
push
imull
pop
or
jne
cmp
sahf
int
mov
fdivrl
fsubrs
xor
jmp
pop
sbb
inc
mov
enter
mov
pusha
movsl
adc
mov
and
out
inc
mov
cmp
sahf
sar
cmp
insb
xchg
les
push
jmp
or
push
mov
and
call
test
and
xchg
lret
sbb
mov
adc
inc
cli
fisubrs
add
and
shll
xor
test
test
sbb
lret
leave
clc
outsb
and
sub
mov
pop
movb
push
in
test
repz
jg
mov
and
cwtl
cmc
daa
jl
lahf
and
in
mov
popf
pop
xbegin
pop
adc
push
mov
sub
mov
pop
push
mov
movsl
pop
mov
mov
mov
push
xchg
xchg
aas
mov
mov
xchg
xchg
fcoml
sbb
outsl
xor
test
ss
hlt
adc
sub
lock
jb
xchg
hlt
cmp
lcall
mov
dec
call
or
mov
mov
imul
lods
dec
int3
xor
movsb
int3
sub
lret
xor
sti
dec
repnz
lret
insl
mov
addr16
stos
cld
gs
mov
scas
sub
lcall
inc
cmp
ret
mov
dec
or
shl
and
cld
testl
mov
jmp
pop
lods
ret
mov
jns
clc
push
pushf
add
dec
fisubrs
ret
hlt
dec
pushf
ret
pop
orps
mov
out
dec
test
or
jl
shll
cld
les
mov
hlt
imul
mulb
mov
add
push
sti
push
mov
out
pop
add
add
xchg
fnstsw
mov
or
add
dec
sub
lret
sbb
xor
sarb
fdiv
dec
fs
and
dec
aad
pop
hlt
pop
adc
inc
out
sbb
mov
ret
rcrl
mov
scas
mov
aam
das
outsl
nop
lds
cwtl
lods
std
add
mov
and
lret
sub
test
imull
jae
pop
popa
or
jne
fstp
fs
ret
ja
loope
mov
in
pop
adc
cmpsb
sbb
xchg
xchg
and
fpatan
daa
add
dec
gs
and
fwait
cltd
shrb
fs
in
xchg
push
in
pop
and
or
addr16
call
jp
ret
shrl
push
pop
das
or
xchg
mov
popa
mov
mov
jb
and
jp
enter
wrmsr
push
pop
sbb
pop
mov
sbb
clc
test
dec
mov
sbb
push
jbe
sbb
mov
xor
sub
sbb
add
push
mov
flds
arpl
or
outsb
scas
mov
jg
mov
xchg
fcoml
inc
sbb
negl
ret
sti
imul
out
lahf
pusha
jp
aad
mov
mov
push
lret
pop
les
xlat
xchg
punpckhwd
sahf
in
xchg
mov
aam
push
dec
mov
cs
jmp
addb
xchg
mov
cmp
popf
jns
xor
or
push
mov
inc
mov
push
aas
or
mov
dec
push
aad
imull
daa
mov
dec
mov
stos
inc
inc
mov
lcall
daa
add
imul
jle
testl
aad
mov
mov
sub
test
xchg
test
mov
ljmp
cmpxchg
fwait
hlt
arpl
pop
cmp
outsl
or
in
cli
jl
mov
setae
test
test
cmpsl
lret
add
add
sahf
mov
fidivrl
mov
repnz
leave
mov
jo
or
faddl
xor
clc
adc
mov
mov
inc
jge
pop
rcrb
pusha
in
xchg
cltd
aaa
cmp
loopne
fnstsw
mov
mov
scas
stos
sbb
cmp
or
fiaddl
inc
lods
pushf
in
xor
fnstsw
enter
pop
jne
inc
lds
scas
adcb
sbb
bound
enter
and
movsb
jnp
mov
fwait
sub
loope
das
mov
xor
pop
and
jg
pop
inc
xor
les
outsb
arpl
sub
cld
aad
cmc
sub
sti
fidivrs
out
jno
jbe
idivb
into
push
test
test
and
jmp
jl
mov
adc
xor
or
fucompp
lahf
jmp
das
inc
pusha
sbb
jle
outsl
popa
adc
mov
sub
shl
push
sbb
push
mov
mov
test
inc
aad
xor
pusha
out
repnz
pop
fdiv
mov
push
or
fs
mov
stos
mov
and
pop
mov
xlat
add
pop
adc
repnz
cmp
jp
xor
lods
out
lret
push
jg
xor
insb
addr16
popa
cmp
pop
out
add
out
pop
sub
mov
fsubrs
xchg
call
lea
add
cli
mov
jo
xchg
jp
add
mov
mov
mov
cli
xor
into
ds
adc
push
repz
lret
leave
mov
mov
inc
cwtl
mov
cmc
outsb
mov
mov
mov
ret
bound
scas
push
pop
jmp
sub
sbb
daa
cmp
mov
repz
scas
add
cmpb
icebp
push
mov
test
push
cltd
call
pop
hlt
loope
lods
imul
inc
xor
dec
aas
jl
add
je
daa
fwait
imul
fldt
ja,pn
dec
mov
or
pop
ja
mov
inc
cmp
addr16
ficompl
loopne
mov
mov
shr
pushf
inc
rcrb
or
jp
stc
xlat
stc
cli
in
pop
lret
inc
cwtl
sub
add
pop
dec
adc
mov
xor
les
inc
pop
mov
dec
nop
out
push
and
leave
loop
cmpsb
nop
je
shrb
outsl
xchg
add
dec
lahf
je
and
icebp
test
in
hlt
cmp
mov
mov
mov
in
add
mov
adc
cs
fwait
jnp
dec
aaa
mov
push
cmp
pop
data16
pop
rcr
pop
insb
xor
lahf
push
stos
testb
add
nop
inc
or
sahf
mov
inc
loopne
iret
fnstcw
mov
icebp
aam
jbe
mov
fucomi
sbb
inc
push
aas
enter
and
int3
in
dec
jge
and
inc
or
fwait
pop
les
add
or
jmp
repz
cmp
outsb
stos
out
arpl
and
xchg
ret
jne
mov
ds
clc
inc
mov
dec
jmp
jl
int3
les
addr16
repnz
aam
icebp
xor
testl
aas
mov
mov
int3
push
andb
dec
xchg
push
ret
xor
lret
jne
cmp
pop
sub
or
nop
das
in
cmp
adc
cmp
fldcw
mov
dec
dec
cmp
fdivr
out
mov
sub
sarl
in
push
xlat
les
scas
std
lds
push
or
fwait
or
cli
xorl
cld
ret
sahf
pop
dec
add
repz
addr16
stc
movsb
push
dec
mov
je
add
mov
sub
mov
inc
sti
imul
cwtl
stos
xchg
js
addr16
cmp
movsl
in
cld
out
insb
cmp
sub
or
sbb
outsl
xchg
or
jbe
cmp
fs
adc
add
jl
mov
push
sbb
mov
mov
les
orb
push
mov
sub
pop
mov
or
ror
addl
test
dec
push
dec
stc
mov
and
adc
add
int
ljmp
imul
inc
dec
cmc
lret
jb
jbe
sbb
sbb
imul
shrl
stos
loopne
in
insb
cmp
or
add
push
decl
nop
push
or
sub
and
adcb
lods
mov
mov
pushf
jecxz
sahf
xchg
dec
mov
jmp
inc
rcrl
inc
sub
lea
ret
cmp
mov
and
jno
jmp
or
loop
das
movsl
sahf
mov
idivl
cmovg
jge
stc
xchg
movsl
mov
outsl
xchg
dec
mov
fisttpl
xchg
jg
xchg
iret
add
dec
data16
jecxz
imul
fbstp
loope
mov
scas
pop
loop
call
pop
lret
out
fs
mov
or
sbb
mov
mov
mov
orb
push
mov
sti
adc
data16
and
dec
dec
lock
add
push
out
out
jo
icebp
out
pop
adc
jmp
cli
mov
test
cli
lret
push
mov
test
lods
or
adc
das
xlat
inc
mov
pop
enter
mov
mov
dec
rorb
xchg
sbb
outsl
mov
in
stos
and
leave
in
xor
hlt
mov
sbb
inc
lods
pop
mov
mov
pusha
cmp
ffreep
leave
adc
xor
andl
int
mov
cmpb
xor
popa
call
enter
pop
pop
xor
shrd
aas
ss
sbb
stos
xor
jb
or
inc
inc
lret
jmp
bound
mov
fistl
out
fs
loop
cmp
aad
shlb
xor
push
ror
pop
pop
dec
in
rorb
push
xchg
sbb
or
pop
mov
cmp
sub
jecxz
stc
inc
lods
das
iret
ja
jno
jno
fwait
pop
lds
ljmp
scas
jmp
pop
cld
mov
inc
sbb
sar
xor
ret
inc
add
add
je
outsl
mov
cmp
ror
jle
or
ss
sub
je
out
sub
xchg
and
jne
leave
inc
jg
sub
inc
call
push
adc
and
lret
inc
inc
popf
sub
xor
shr
or
adc
jg
aaa
adc
pop
imul
pop
adc
dec
cmp
cmpsl
les
push
addr16
popf
mov
loope
outsb
out
mov
aas
mov
sbb
xchg
lahf
push
xor
xor
pop
pop
cmpl
into
movsb
das
hlt
mov
sub
sbb
jge
inc
and
ljmp
lods
lret
inc
daa
stos
sub
push
mov
fsubrl
xor
xchg
mov
les
fstpl
outsl
mov
cmp
sbb
dec
scas
jae
inc
adc
xor
int3
add
movsb
pop
clc
lods
call
ljmp
jg
test
jl
push
shll
in
ret
sarb
xlat
xor
pop
inc
jp
pop
dec
or
punpcklbw
ret
enter
adcl
xlat
jb
mov
icebp
xor
ret
les
xor
sub
das
sbb
leave
orb
insb
xchg
test
call
mov
inc
jns
xor
xchg
iret
inc
cmpsl
pop
mov
sti
repz
popf
insb
pop
stc
scas
das
xchg
pop
daa
pop
js
sbb
fs
or
xor
mov
and
mov
mov
lods
xchg
cmpsb
mov
push
and
lea
mov
mov
add
add
scas
pop
cmp
push
fs
xchg
xchg
outsl
loope
insl
pop
add
popa
ffree
dec
mov
sbb
lret
cmp
lods
jb
test
rcll
jae
jb
pop
rorl
movsb
mov
cmp
dec
fmuls
lret
xor
sti
add
loop
loop
lock
mov
cmp
scas
jp
and
imul
cwtl
ds
adc
mov
sti
xchg
pop
add
stos
in
in
ja
xchg
cwtl
xor
xor
pop
int3
pop
pushf
mov
pop
adc
xchg
test
adc
push
mov
jecxz
pop
rcll
mov
mov
and
dec
dec
cmp
fwait
lea
data16
clc
ficoml
xlat
in
lret
out
in
inc
ja
sub
in
push
ret
and
ror
dec
dec
loopne
adc
call
adc
imul
aaa
inc
sbbl
xor
aam
scas
loopne
jb
sbb
dec
pop
test
out
mov
loope
dec
dec
mov
jg
aaa
push
xor
movsb
cmpsb
add
icebp
inc
loop
popa
mov
xchg
ja
ljmp
xchg
repz
fisttps
adc
sub
and
gs
je
roll
ret
jo
mov
xchg
in
repz
sub
push
mov
inc
mov
aas
push
mov
rcrl
mov
cltd
sub
imul
sar
xor
ret
cltd
xor
jnp
mov
sbb
cmp
aam
lcall
push
push
and
add
sub
shlb
and
rep
aad
in
mov
or
add
in
push
pushf
das
ret
mov
pusha
mov
or
push
and
shll
xchg
mov
adc
xor
mov
jb
addr16
rolb
shr
or
hlt
lock
es
sbb
daa
ret
cmpsb
dec
faddl
out
cld
push
jb
xchg
push
jge
dec
std
cmp
and
fcompl
jnp
xor
arpl
pop
scas
mov
push
lock
xchg
shlb
lret
shll
fwait
cmp
and
pop
lcall
packsswb
sub
sub
xor
outsb
xchg
adc
loop
cmp
adc
inc
pushf
mov
stos
xchg
in
repz
push
adc
mov
inc
push
in
scas
test
pop
data16
xchg
jp
aad
bnd
cmp
push
and
les
adc
repz
movsl
sbb
daa
push
or
xor
and
out
pop
cmpb
lds
xor
repnz
sub
stc
pop
mov
fstpt
fiadds
fisttps
add
dec
push
push
inc
in
mov
dec
hlt
int3
cmp
movsb
daa
dec
xchg
fsubrl
in
test
cmp
cli
or
out
or
push
mov
mov
pushf
repz
push
adc
sarb
sahf
dec
fidivrs
inc
lahf
sti
fnstenv
lds
or
gs
cmp
out
les
daa
movsl
push
int3
fnstsw
jno
mov
cli
movsl
loopne
sbb
test
enter
xchg
xor
push
arpl
sub
inc
fsubrl
push
test
pop
xchg
movsb
mov
xor
int
inc
mov
push
add
lods
and
arpl
xlat
inc
cmpsl
adc
push
and
fdivs
popf
sahf
or
mov
loop
insl
lods
jns
out
scas
std
repnz
loop
or
iret
call
push
dec
pop
call
dec
push
and
je
lock
add
mov
hlt
xor
dec
mov
lods
daa
jge
leave
movsb
dec
mov
mov
aas
dec
gs
mov
stos
out
das
or
or
fldcw
imul
mov
and
scas
pop
dec
mov
mov
fildl
iret
mov
sub
jae
sub
mov
rorb
pop
pop
addr16
xchg
pop
out
jle
pusha
aad
shr
test
sub
pop
xor
push
xchg
jns
or
int3
mov
loopne
cli
ret
adc
jns
xchg
xlat
jl
iret
in
sub
inc
jg
push
push
jl
or
sub
xchg
imul
js
insl
push
jecxz
xchg
shll
cmpsl
shll
sbb
xlat
test
and
out
cli
fcomip
fidivs
mov
arpl
and
cld
dec
insl
stos
fcomps
push
call
or
sti
insb
in
push
dec
gs
dec
jmp
daa
sub
sub
pop
jmp
mov
adc
pusha
dec
movsb
cmp
in
scas
stos
les
xor
adc
xchg
pop
aam
in
pop
lahf
leave
pop
dec
cmp
test
outsl
test
enter
lea
adc
loop
lds
bound
push
icebp
call
mov
sbb
push
idivl
sti
xchg
add
mov
out
fisttpll
std
sbb
test
popw
adc
cwtl
push
nop
sahf
addr16
shll
push
fildll
inc
js
xor
inc
in
pop
test
lret
aas
js
push
mov
and
aam
add
xor
fdivs
cmp
fistl
sti
insb
pop
into
stc
pop
dec
sahf
dec
cld
pop
movsl
mov
cltd
jns
jp
sub
andb
test
outsb
mov
addr16
push
jmp
push
cli
idivb
push
add
bound
and
stc
dec
dec
andb
jbe
push
movsl
movsl
ret
aaa
adc
pop
push
add
dec
es
iret
adcl
ljmp
stos
icebp
xlat
pusha
add
xchg
mov
loop
prefetcht1
cltd
test
pop
fdivp
mov
call
cmc
out
int3
cs
in
pop
loopne
jbe
cwtl
push
sbb
insl
imul
adc
jns
jmp
add
xchg
inc
adc
enter
in
sbb
mov
pop
mov
xor
iret
sub
or
inc
mov
mov
or
or
add
dec
es
xchg
rclb
test
aaa
jns
jp
push
stos
xor
inc
mov
or
sbb
insb
into
xor
movsl
clc
mov
xlat
sbb
jge
pop
jno
jne
mov
out
xor
mov
lods
lcall
rcll
push
inc
jecxz
mov
repnz
xchg
xor
sub
xorb
mov
or
insl
inc
fsubrs
mov
or
jne
jmp
sub
popa
xchg
imul
mov
or
je
xchg
shrb
xlat
mov
leave
popf
mov
xchg
jmp
insb
fsubs
test
pop
pop
cli
inc
pop
push
fdivrs
sbb
pusha
and
jns
dec
in
xchg
dec
push
push
mov
pop
es
in
inc
mov
or
call
shrl
mov
enter
pop
xchg
pop
push
mov
lahf
flds
mov
push
add
mov
dec
lcall
jne
or
jnp
pop
popa
out
aam
ret
icebp
sbb
push
xchg
pop
add
pop
adc
jl
or
pushf
aaa
sub
cltd
in
dec
sub
inc
xor
mov
mov
cltd
jo
filds
xlat
inc
loop
dec
dec
inc
loope
or
mov
subb
dec
cmp
mov
mov
xor
popf
mov
cmp
adc
faddp
mov
sbb
sub
sub
int
mov
jbe
adc
sbb
jns
xchg
cmp
push
ja
pop
xchg
inc
pop
pop
push
loop
pop
or
and
test
mov
adc
or
pop
les
cli
rol
and
xor
push
lds
jg
ret
dec
in
call
push
sub
das
cmpsb
in
cmpsb
xchg
ret
mov
ffreep
test
stos
xor
ret
shlb
sbb
ljmp
lds
and
lods
lock
in
inc
add
pop
mov
aam
sti
gs
mov
enter
cmc
ja
scas
jmp
ja
mov
mul
sub
test
jnp
lock
or
jge
mov
sbb
cld
cmp
out
jae
mov
div
sub
stos
lock
roll
mov
cmp
popf
add
xchg
int3
sbb
mov
out
or
pop
pop
xchg
aad
pop
xchg
or
pop
push
mov
repnz
lahf
push
in
add
mov
adc
mov
repz
jns
lret
mov
les
mov
xchg
jle
and
lahf
ret
into
rorl
lret
mov
cmp
sbb
aas
mov
push
dec
xchg
mov
leave
pop
sub
pop
loop
es
in
dec
cld
mov
dec
or
addr16
jae
and
mov
mov
add
jb
loopne
pop
std
subb
lcall
out
ret
xor
sbb
mov
push
incl
mov
and
aas
cmp
imul
xor
sti
and
jg
stos
adc
jmp
pop
adc
xor
mov
nop
popa
mov
push
lahf
xor
dec
idivl
or
inc
mov
shlb
jo
cltd
push
in
pop
add
dec
sub
popf
cmpsl
cmp
sbb
cmp
sub
nop
sti
pop
push
cmpsl
adc
cmp
stc
push
cmp
lock
jecxz
push
and
and
and
pop
push
popl
stc
pop
sbb
mov
push
loopne
inc
fnstenv
mov
fnstcw
push
inc
aam
xchg
cmp
pusha
imul
icebp
cwtl
jbe
mov
in
add
ljmp
fadds
fwait
pushf
adc
push
das
mov
in
js
or
imul
in
sbb
sub
mov
lods
adc
cmpsl
mov
sub
dec
push
xchg
rorl
imul
roll
xchg
push
adc
shll
int3
mov
and
dec
cmpsb
gs
jge
js
inc
and
mov
push
pop
jno
jb
out
sarb
aas
in
mov
push
aad
lahf
pop
xor
cmp
cltd
jl
mov
xlat
ss
loop
pop
pop
test
xchg
adc
stc
lods
sub
add
mov
and
push
add
sub
in
call
jns
push
adc
jle
lods
hlt
les
cmpl
add
ljmpw
lcall
leave
ret
mov
mov
sub
cltd
cmc
icebp
jae
push
push
push
mov
push
mov
bound
adc
das
xor
push
daa
gs
mov
dec
push
sub
fnstsw
jg
sub
inc
hlt
addr16
lods
sarl
cmp
mov
add
pop
xchg
adc
push
or
scas
mov
lds
gs
addr16
out
es
fwait
cmp
into
int3
add
mov
dec
or
or
mov
xor
call
daa
fildll
push
dec
sub
in
aad
adc
insl
popf
cmp
xor
les
mov
pop
ja
cmc
pop
les
mov
into
lock
or
lret
notb
out
lods
jecxz
daa
cmp
mov
pop
jae
sbb
push
stos
jmp
xchg
movsl
mov
cmp
jge
lods
lock
inc
leave
cld
mov
jmp
mov
enter
hlt
dec
iret
jbe
repnz
pushf
loopne
insl
or
ja
push
inc
cli
flds
pop
adc
dec
xlat
inc
incb
lcall
adc
adc
mov
test
fldcw
addr16
add
inc
movsb
aad
adc
mov
jno
cmp
mov
out
inc
add
pop
xor
arpl
hlt
sbb
cld
mov
adc
xchg
jecxz
scas
or
sarl
ret
fs
inc
mov
xchg
push
xchg
sub
and
scas
hlt
cltd
jbe
pop
iret
pop
mov
leave
scas
mov
or
jnp
and
add
and
add
bnd
nop
sbb
mov
call
push
fadds
add
or
shll
mov
push
sbb
and
add
or
inc
add
test
jns
aas
jl
xchg
sbb
jae
pop
cmp
mov
and
xlat
or
fistps
xchg
cmp
cli
movsb
mov
fwait
jmp
sbb
in
xlat
pop
aam
bound
cmp
jno
add
fisubrs
jecxz
insb
push
aaa
lret
fldt
fs
stos
in
rolb
cmp
rolb
push
push
and
testl
gs
dec
dec
push
pop
sbb
inc
xorb
mov
out
scas
std
das
lret
adc
lods
mov
leave
aas
or
imul
push
mov
ss
push
aam
cmp
aas
or
lret
imul
dec
sar
loopne
push
jecxz
or
popf
jl
jne
xchg
xor
imul
ds
jnp
je
xor
push
jg
push
cld
scas
jbe
jp
lret
and
push
cmp
int3
or
cwtl
repnz
and
sub
insb
leave
add
dec
sbb
lds
scas
jo
jns
sarl
subb
jno
xor
push
stc
imul
or
cmp
mov
mov
xor
mov
leave
mov
jl
mov
mov
inc
push
sbb
fxch
mov
imul
imul
push
jecxz
jp
out
xchg
rclb
xor
xchg
andb
std
jmp
xchg
lock
sub
adc
jmp
leave
cld
mov
test
mov
pop
test
mov
lods
cmp
fadds
push
cwtl
out
xor
cwtl
and
xchg
leave
ret
push
or
mov
mov
pop
mov
push
adc
mov
or
test
adc
popa
lea
mov
cmp
fidivrs
mov
pop
rcll
scas
fdivrl
dec
es
mov
imul
ja,pn
xor
and
into
push
popf
fimuls
ljmp
mov
mov
lea
jb
mov
add
sub
rorb
or
mov
mov
pop
pusha
movsb
xchg
and
hlt
in
adc
movl
mov
xor
nop
xchg
and
inc
lods
mov
jne
clc
fcompl
ds
roll
mov
pop
hlt
jo
aad
inc
inc
out
mov
es
jle
nop
lea
ret
pop
paddusw
add
push
sarl
fwait
lock
pop
push
xchg
imul
arpl
hlt
mov
push
or
pop
xor
or
sbb
addr16
push
mov
cmp
mov
jno
dec
lea
xchg
cld
mov
mov
adc
pop
cmp
hlt
aaa
or
pop
mov
pop
mov
adc
xor
jecxz
pop
adc
pop
mov
push
sbb
repz
dec
out
jo
add
push
cmpsb
add
inc
stos
or
xchg
mov
jle
mov
sbb
popa
sub
insl
push
and
or
xchg
jbe
insl
mov
adc
pushf
jge
insl
cmp
xlat
xor
sarl
and
jne
mov
and
mov
iret
jo
aaa
popa
psubsb
xchg
xor
iret
lea
cli
fsub
dec
pop
add
cltd
push
paddd
xchg
es
jo
or
xchg
mov
stos
out
xchg
adc
adc
cmp
mov
shll
add
cltd
push
arpl
aad
sbbl
jmp
iret
incl
idiv
stos
outsb
sbb
into
push
mov
mov
fisttpl
imul
dec
pop
or
repz
adc
push
pop
in
stos
adcb
pop
add
arpl
sbb
mov
icebp
cmpsl
dec
push
push
insb
mov
jbe
stc
in
pop
push
out
je
mov
int
xchg
dec
sub
or
sub
sbb
cwtl
ret
imul
or
sub
pusha
pusha
mov
adc
cmpsb
jp
jge
dec
add
sti
iret
aad
jle
cs
dec
and
js
jp
xor
imul
cli
jecxz
mov
pop
mov
sahf
cmp
mov
pop
or
dec
inc
nop
out
rorl
inc
cmp
enter
dec
adc
imul
push
mov
andl
and
repz
jne
test
lret
hlt
fsubp
mov
outsl
mov
loope
mov
mov
jns
imul
sub
pop
cmc
lods
xchg
imul
gs
popa
scas
cld
je
dec
cmp
mov
loop
pop
hlt
lea
xor
pop
ret
cltd
out
loop
sbb
lea
inc
sbb
dec
aaa
out
jmp
jle
pop
mov
jge
nop
xchg
rcll
jns
inc
testl
loopne
add
arpl
stc
in
jno
cmp
pusha
jmp
bound
pop
out
dec
mov
add
dec
insb
lods
add
pop
mov
xchg
cs
mulb
in
sbb
ret
xor
xchg
test
inc
je
jmp
inc
stc
jbe
inc
cmp
xchg
jecxz
xor
add
cmp
repnz
daa
packsswb
mov
pop
cmp
stos
in
std
adc
imul
mov
dec
pop
mov
add
loop
fisubl
std
jb
out
jl
test
jp
insb
dec
jmp
xor
xor
hlt
je
cltd
mov
cltd
mov
jne
push
nop
test
and
aas
jae
xchg
adc
add
pop
mov
scas
jns
cmc
arpl
pop
jle
cmpsb
push
movsb
push
jecxz
mov
sub
jg
cwtl
mov
enter
test
in
jmp
bound
scas
jnp
xchg
mov
daa
clc
adc
mov
mov
sbb
sbb
dec
xor
enter
jnp
push
dec
sbb
push
test
mov
pop
mov
inc
clc
js
mov
adc
cmp
stos
mov
lock
outsb
ljmp
mov
adc
xchg
lahf
pop
loope
mov
in
push
sbb
mov
or
or
or
mov
pop
pop
push
scas
inc
lods
and
pop
jge
icebp
pop
add
movsl
hlt
and
cs
adc
mov
bound
cmp
adc
jecxz
clc
fildll
or
movsb
mov
or
pushf
push
lea
mov
out
mov
xchg
pop
out
sbb
ss
outsb
dec
js
cwtl
fldl
shlb
mov
dec
shlb
xchg
insl
loope
cwtl
add
ljmp
test
shrl
pop
addr16
mov
and
or
inc
mov
push
push
cmp
lahf
push
sti
movsl
mov
or
movsl
add
mov
std
stos
daa
jb
xchg
push
imul
xchg
out
push
xchg
icebp
or
mov
scas
ljmp
js
and
scas
aam
mov
xor
insl
lret
ficoml
aad
addb
cld
mov
pop
daa
movsl
sbb
in
push
lret
jmp
cs
mov
dec
push
lahf
sbb
xorb
xchg
jae
push
mov
cmp
test
out
cmp
mov
sbb
fildll
out
adc
and
push
adc
push
jp
ret
xor
or
xchg
sub
out
in
outsl
insb
jns
sti
sbb
pop
mov
sbb
inc
adcl
lock
scas
add
cld
fdivrl
sub
jle
adc
add
mov
inc
and
mov
and
jno
loopne
in
scas
mov
ret
push
or
addb
lock
mov
shl
icebp
push
and
in
lds
fsubrp
int
mov
std
ja
mov
outsl
mov
mov
insl
ret
push
testb
dec
xchg
or
or
xor
inc
fisttpll
push
test
cmp
test
lock
dec
sub
js
cmpsl
cmp
cmc
daa
add
in
sbb
fsubp
aas
pop
lds
sbbb
pop
loop
loopne
rcrb
xor
pop
mov
inc
loopne
aad
dec
nop
push
mov
xchg
mov
ss
push
cld
and
adc
ret
push
decl
push
jae
dec
ljmp
lcall
je
ret
mov
mov
xor
bound
lock
inc
or
sbb
iret
ficoml
out
fadd
rcrb
jl
push
mov
lds
loop
xchg
lcall
push
and
lock
mov
out
icebp
mov
xchg
or
push
sub
icebp
les
out
xchg
add
push
sub
and
jo
scas
ss
or
jo
cmp
lret
mov
jl
dec
lods
sub
clc
xchg
jmp
xchg
push
jl
mov
inc
and
and
cmp
cmpl
lahf
pop
sub
jecxz
jge
mov
movsl
frstor
mov
cmp
lret
push
xchg
add
insb
pop
shrl
das
std
mov
pop
jp
push
push
push
mov
test
test
in
leave
add
cmp
sub
jo
pop
mov
xchg
mov
or
mov
sahf
dec
xor
pop
pop
pushf
pop
mov
mov
je
repz
ds
adc
dec
fmul
scas
sbb
jge
mov
int
mov
outsb
subb
add
pop
scas
fisubl
leave
fistpl
inc
loop
fldcw
arpl
stc
or
dec
lret
cmp
cld
add
adc
and
xor
sarl
sbb
negb
sub
adc
jbe
adc
push
rcrl
ja
dec
xor
insb
xor
pop
mov
push
sub
ja
stos
loop
mov
and
nop
inc
mov
insb
filds
mov
push
add
add
mov
movsb
iret
add
and
push
sbbl
call
hlt
dec
nop
fs
dec
cmc
jle
mov
insb
cwtl
fldt
das
flds
insl
aam
insb
jp
popf
mov
arpl
mov
cmp
xchg
outsl
fdivrp
cmpsl
jb
dec
mov
sti
pop
sub
xor
aaa
jg
call
insb
jp
mov
lods
out
fnstenv
add
push
clc
inc
sub
adc
inc
mov
sbb
scas
push
add
ret
cmp
add
int
lahf
mov
aaa
push
ja
sub
icebp
dec
daa
pop
rorb
hlt
shll
ds
jne
pop
sbb
lods
xchg
add
leave
mov
push
or
sub
test
scas
pop
sbb
loope
mov
andl
jns
cs
in
rol
mov
in
call
jno
mov
xor
fcmovnu
mov
xchg
xor
cmp
pop
cmp
cmp
stc
push
jns
mov
cmpl
xchg
mov
das
mov
or
movsl
sub
movsb
fsubrs
add
loopnew
jge
xor
xchg
and
mov
out
inc
xchg
in
sub
sub
adc
push
dec
leave
sahf
xchg
inc
push
sub
dec
in
cmp
jp
adc
test
lcall
aam
mov
mov
inc
ret
xchg
push
movsl
dec
push
test
xor
cs
movsb
test
out
orb
adc
add
mov
xor
jg
sub
aaa
std
rcrl
cmp
sub
push
sub
mov
lds
test
xor
hlt
adc
and
outsb
or
nopl
mov
lea
cmp
cmp
mov
shr
out
enter
dec
mov
int3
xor
out
std
mov
scas
jb
enter
jp
sbb
rcl
sbb
mov
icebp
fsub
push
nop
lcall
ljmp
jge
imul
xchg
xchg
add
fcompl
xor
shrl
pop
xchg
adc
stos
movsb
mov
mov
push
inc
push
push
xor
ficoms
insb
out
imul
outsb
adc
pop
inc
and
xchg
and
jns
sbb
dec
add
xor
ret
jno
xor
xchg
pusha
adc
inc
out
pop
jb
xchg
ss
push
xor
loopne
ret
and
push
aad
jne
movsb
out
sbb
arpl
test
addr16
cs
nop
mov
lret
jb
adc
lret
in
xchg
int3
xor
aam
js
push
push
cmpsl
test
aad
sub
ja
and
and
cld
fcomip
into
push
dec
pop
shrl
bound
cmpsl
aad
lret
mov
adc
ret
in
jg
xchg
add
dec
lods
mov
lods
mov
cmp
adc
loope
xor
addr16
pop
in
or
aam
les
js
loope
out
lret
fsubrl
cs
lock
jp
cld
mov
add
mov
enter
push
cs
je
dec
xchg
or
pop
fcompl
xor
in
dec
lahf
fildl
je
xlat
xchg
nop
jbe
or
sahf
pop
xchg
sbb
dec
scas
imul
shll
hlt
lods
les
jae
daa
and
out
mov
xlat
into
xchg
xchg
jae
jbe
icebp
stos
repz
jne
dec
add
push
pusha
fcmovnu
dec
and
imul
mov
test
movsb
sub
jmp
jns
ja
adc
sub
mov
sbb
or
gs
dec
jecxz
xorl
cmpb
leave
and
cmp
mov
hlt
daa
add
pop
mov
pop
leave
mov
popa
arpl
hlt
in
daa
adc
nop
fidivrs
jp
loopne
pop
mov
loop
push
cmp
pusha
mov
add
bound
outsb
fimuls
loop
jg
adc
jae
add
mov
hlt
push
and
xchg
jnp
or
cwtl
cmc
rcll
and
sbb
sbbl
mov
add
xchg
push
push
push
int3
fwait
pop
stc
mov
mov
out
xchg
mov
adc
jg
ja
js
xchg
and
cmp
cmp
dec
or
push
in
cmc
insb
dec
ljmp
push
jne
dec
stos
add
inc
push
mov
add
cltd
mov
xor
dec
push
fstl
jp
jnp
scas
cmpsb
xchg
xor
out
push
test
popa
or
add
pop
inc
in
int
push
mov
mov
push
cld
mov
sbb
fwait
lret
in
aaa
and
dec
adc
adc
add
out
sti
adc
and
rorl
dec
mov
sbb
or
adc
sbb
adc
jle
pop
lahf
sub
mov
fwait
pusha
cmp
leave
mov
jge
test
loopne
xchg
xlat
jns
jnp
js
mov
shrb
xchg
jp
imul
mov
in
loope
cmpsl
rcrl
cs
popf
iret
sbbb
and
out
jmp
fstpl
sbb
sahf
sti
jmp
xlat
push
arpl
sub
sub
push
ja
or
pop
rolb
mov
and
add
cmp
sbb
sbb
xor
mov
sbb
out
mov
xor
cmp
cmpsb
cld
pop
ffreep
and
movsb
hlt
std
mov
repz
fnstcw
pop
inc
iret
add
sar
mov
mov
add
pop
insl
mov
inc
loop
fstp
or
ds
sub
mov
aas
sub
add
add
movsb
and
pusha
dec
adc
cs
testl
cld
mov
jmp
test
mov
adc
bound
aam
insl
rcll
and
faddl
pop
aam
dec
fnstenv
inc
mov
test
jle
and
nop
test
out
mov
stc
mov
out
test
jnp
xchg
and
or
fwait
mov
dec
mul
enter
dec
bound
or
popf
aam
lea
test
outsl
or
ret
popf
lcall
jmp
xchg
mov
jmp
jne
imul
icebp
pop
popa
lods
mov
int
ds
in
cmp
insb
ljmp
incb
out
sbb
mov
cltd
push
mov
mov
pop
pop
iret
xchg
jp
push
mov
hlt
hlt
jb
addr16
mov
lea
fisttps
jmp
test
into
test
dec
test
jne
add
aas
loope
mov
cld
sti
shl
scas
andb
test
and
js
jno
ret
ljmp
cs
adc
ljmp
mov
stos
add
jle
and
fwait
pop
or
int
repz
lods
out
mulb
jbe
xchg
ljmp
and
cwtl
jmp
jmp
test
stos
adc
xchg
jl
ja
mov
push
inc
and
mov
stos
sub
xchg
jmp
into
add
sahf
sub
insb
mov
mov
mov
sarb
lea
add
adc
xchg
mov
lcall
sub
mov
adcl
push
mov
cmp
mov
inc
ret
sub
mov
mov
out
bound
ret
cld
maxps
fidivrl
push
adc
or
movl
mov
popa
pop
mov
xlat
adc
out
add
pushf
aad
cmpxchg
stos
jp
mov
ds
daa
push
pushf
and
sub
loope
jg
das
insl
rol
test
jne
fs
inc
clc
ss
bnd
mov
fcmovne
xor
pop
push
fnstsw
or
fidivl
add
orl
imul
xchg
adc
xor
cli
and
xchg
insl
lods
pop
and
pop
push
mov
lds
fisubs
pop
lret
xchg
jp
mov
jns
adc
xor
push
in
ja
cmpsl
mov
pop
scas
mov
xchg
out
mov
lcall
inc
mov
leave
ja
pop
mov
ret
mov
test
fsubl
adc
sub
mov
xor
ljmp
fdivrs
sub
sbbb
mov
pop
mov
or
inc
jnp
or
fdivl
int
mov
lds
aaa
nop
mov
dec
mov
or
shrb
lods
pop
data16
and
add
jns
mov
test
dec
loop
imulb
mov
mov
add
mov
in
sbb
cmp
loope
jecxz
mov
pushf
out
ja
push
fsub
add
inc
roll
mov
cwtl
pop
insb
cmp
pushf
xchg
ret
mov
mov
imul
shll
fwait
cltd
pop
or
adc
das
sbb
sbb
scas
daa
jae
popf
mov
xor
add
fisubl
js
repz
loopne
jne
int3
cmpsb
cmp
sbb
jo
xchg
mov
ret
mov
xchg
and
inc
test
pop
push
add
sbb
adc
bound
sub
push
cwtl
sbb
daa
adc
pop
repz
dec
push
xchg
mov
gs
divl
ljmp
xor
jae
jnp
sahf
lods
pop
mov
cmp
pop
sub
push
ljmp
xchg
fcmovu
icebp
jecxz
aaa
scas
add
aam
jp
fwait
mov
repz
jmp
sarb
jae
xchg
lds
cld
outsb
stos
outsb
hlt
inc
setnp
xchg
arpl
insl
xor
jb
add
inc
sub
xchg
mov
popa
push
shlb
loop
inc
xchg
aam
add
shlb
lds
in
adc
adc
xchg
aam
stos
mov
xlat
nop
mov
in
rcl
push
popf
push
pusha
xor
jne
mov
mov
mov
mov
pop
sbb
mov
repnz
xlat
pop
jecxz
hlt
inc
jmp
cmc
mov
adcl
popa
je
movsb
and
mov
inc
sbb
push
sub
hlt
arpl
jns
xchg
cmpl
cltd
jnp
or
lds
ja
lret
das
fadds
sahf
orl
mov
decb
out
aaa
das
xchg
dec
insb
pop
cmpsb
shrb
push
push
push
call
inc
jge
in
push
xchg
adcl
testb
ret
in
dec
push
aas
jns
cmp
insl
js
dec
mov
or
add
add
fidivrs
cmp
xor
mov
xchg
adc
arpl
arpl
xor
movsb
aad
rcrb
sti
mov
cmp
xorb
add
fs
sarb
js
les
add
xchg
push
dec
ret
push
jmp
rcll
aas
lea
ret
andb
hlt
pop
jmp
enter
std
add
mov
jnp
dec
and
pop
push
push
jmp
add
sub
bound
pop
lods
jns
mov
gs
inc
jmp
ret
jp
pop
sub
or
dec
into
loop
sbb
xor
cltd
outsl
and
mov
repnz
jbe
ficoml
cmp
cmp
imul
scas
iret
insl
int
iret
mov
je
lock
adc
std
pop
cltd
push
fldl
dec
and
or
fidivl
inc
jmp
inc
or
xchg
ljmp
inc
inc
pop
dec
stos
dec
fisubl
loope
leave
stos
in
cmc
fstpt
mov
sbb
and
push
je
mov
popf
into
out
pop
mov
outsl
in
and
cli
int3
movsl
adc
dec
jbe
xor
jecxz
lea
ret
xchg
and
fs
loopne
ret
jmp
ss
xchg
jbe
cmp
js
add
push
ds
dec
pop
mov
xor
leave
orb
subl
push
push
dec
stc
adc
enter
aas
popa
aad
adc
filds
cld
jb
aad
das
pop
mov
repz
sbb
cmp
mov
add
push
dec
mov
mov
add
subl
mov
scas
and
xor
sub
jae
pushf
lock
xor
js
mov
xor
iret
jno
clc
mov
adc
or
nop
inc
xchg
bound
push
jnp
dec
xor
xlat
test
pop
inc
sub
mov
push
lcall
lea
test
mov
ret
out
adc
push
movsl
sbb
jo
out
jo
or
jp
mov
adc
shll
sbb
push
add
dec
stc
outsl
hlt
push
scas
jl
adc
inc
sbb
sub
push
dec
inc
xchg
hlt
sbb
sti
cmp
sub
test
outsl
xchg
lahf
sbb
xchg
adc
cmpl
ljmp
sar
and
faddl
push
fnstenv
xchg
cmc
push
stc
xchg
hlt
fwait
add
out
pop
sub
cld
punpckhwd
rcll
in
ljmp
ret
jns
mov
sub
popa
std
test
xlat
mov
sub
adc
roll
sbb
sub
add
loop,pn
adc
pop
icebp
fists
std
pop
fldl
adc
in
pop
testb
not
xchg
push
es
dec
add
sti
movsb
aad
aad
mov
leave
mov
push
faddl
mov
jg
mov
cmp
xor
and
cltd
xchg
mov
xchg
pop
and
in
mov
jmp
popf
mov
aad
adc
inc
add
mov
jnp
sbb
xorb
nop
mov
pop
sti
bound
dec
mull
pop
or
pop
cmp
fs
rcrb
adc
sub
push
or
je
xchg
dec
stos
sbb
sub
mov
pusha
or
pop
inc
lds
pop
xor
shr
jno
jae
sbb
xlat
or
mov
mov
inc
hlt
dec
jns
cmp
mov
mov
pop
aad
out
pop
cli
add
or
adc
dec
dec
sbb
in
adc
and
adc
mov
inc
fxch
xchg
and
loopne
es
or
or
mov
repnz
mov
push
test
std
into
pop
inc
popf
adc
jg
cmpsl
or
jl
sub
loope
xchg
mov
push
lahf
movsl
mov
psubw
lods
xor
mov
xchg
notl
xchg
cmpsb
bound
loope
pop
in
stc
xor
adc
aas
jb
mov
cltd
stos
aaa
pop
outsb
mov
scas
push
sub
mov
fildl
sub
push
lock
sahf
outsl
sahf
mov
les
and
inc
xchg
ljmp
mov
push
xor
icebp
cmc
jmp
iret
negl
push
pop
mov
mov
stos
mov
xor
fwait
imul
dec
sbb
sahf
scas
mov
and
xor
test
push
and
jmp
push
cmpsl
sbb
rcr
out
inc
cld
shrb
inc
dec
jg
and
push
data16
les
ljmp
in
inc
inc
cltd
xchg
out
inc
in
fimull
data16
mov
mov
adc
mov
cli
jmp
mov
pop
std
inc
cmp
mov
jp
scas
lret
cmpxchg
ja
leave
sub
repz
repnz
dec
mov
in
mov
mov
jns
add
xchg
push
xorl
mov
movsb
clc
mov
stos
out
jne
lock
xor
xorb
popf
mov
inc
xchg
mov
push
imul
dec
popa
pushf
jge
and
insb
sbb
xchg
inc
cmp
lods
lds
andb
mov
rorl
dec
mov
add
inc
sahf
out
lods
cmp
mov
jns
mov
dec
xchg
xor
sbb
shrl
jb
jmp
mov
xchg
add
fnsave
mov
mov
mov
shrl
adc
inc
insl
sbb
out
pop
mov
xor
scas
cmpl
mov
inc
xor
jmp
mov
adc
or
add
cmp
sbb
pop
and
call
mov
push
cltd
or
in
fnstsw
sbb
sbb
outsl
xor
mov
mov
sbb
stos
lret
leave
sbb
icebp
clc
jb
inc
xchg
sbb
xor
pop
ret
sbb
or
add
lds
xor
and
test
inc
mov
imul
dec
mov
stos
mov
inc
aam
ljmp
rcrb
mov
mov
adc
rcrl
lods
leave
add
pusha
xor
cld
sahf
jle
cmpb
outsl
imul
pop
iret
xchg
into
into
pop
mov
sub
push
aaa
aam
scas
xchg
pop
cli
lock
fnstcw
shl
or
pop
jmp
push
push
stos
mov
xchg
xor
insl
jns
and
mov
lock
call
fucom
and
hlt
not
pop
loop
pop
mov
insb
cmp
clc
rcl
mov
sar
and
adcl
rcrb
sbb
enter
cmp
sub
imul
cmp
cmovbe
pop
insl
fstps
lret
adc
stos
jle
hlt
push
cmp
add
test
pop
fcmovbe
insl
add
mov
lret
cmc
inc
icebp
sbb
sti
add
movsl
sub
xchg
imull
loop
lods
cwtl
daa
fs
push
adc
cmp
in
repz
jo
or
jae
fidivrl
pop
add
adc
sub
int
cmp
jle
js
or
jmp
xchg
jl
sub
jbe
pop
xchg
xchg
subb
loop
into
xchg
dec
sbb
in
std
out
aas
movsl
lods
jecxz
movsb
ss
mov
cwtl
jmp
push
push
lods
lods
inc
push
jo,pt
xchg
pop
adc
pushf
jae
add
mov
lret
inc
popa
jg
sar
jne
fisttps
data16
jle
mov
enter
push
ja
rcrl
cmp
pop
int3
or
cmc
push
mov
ret
mov
fs
add
imull
lahf
popf
lcall
cmp
inc
sub
test
jne
dec
ficoms
cmp
test
push
shlb
int3
adcl
lods
inc
popf
sub
push
cmp
cmp
push
fs
aam
sub
outsl
bound
test
push
xor
sbb
jb
int
add
mov
sub
cmc
lret
mov
lds
lods
rcrl
bound
cmp
and
sti
or
cmp
les
mov
fst
pop
adc
sti
or
mov
inc
add
cltd
lret
push
repnz
loope
ret
leave
pop
cli
push
inc
into
iret
lds
push
mov
leave
pop
or
xor
jp
loope
adc
shl
rclb
fwait
test
or
lret
bound
xor
pop
inc
push
addr16
mov
or
xchg
fnstenv
xor
xorl
mov
int3
nop
iret
lcall
inc
and
push
in
or
jb
sbb
jle
dec
and
in
mov
call
mov
not
cli
xor
inc
jecxz
std
or
leave
xchg
mov
ss
push
jp,pt
jg
test
xlat
incb
sbb
popa
pop
aaa
icebp
or
or
sbb
adc
imul
mov
or
and
das
int
out
mov
inc
mov
mov
fdivr
cmpsb
xlat
cmc
mov
xchg
xchg
mov
mov
int3
mov
adc
push
dec
insb
mov
dec
pushf
dec
cmpl
cmpsl
arpl
nop
das
aaa
push
pcmpgtb
loop
sti
xchg
inc
in
xor
imull
push
nop
icebp
test
xchg
mov
jo
push
cltd
xor
mov
ret
mov
cmp
mov
inc
or
or
test
cld
fincstp
xor
lgs
mov
fs
or
push
loope
and
test
inc
fcomi
inc
rclb
into
daa
jl
fidivrs
mov
cltd
cld
loopne
call
or
mov
xchg
sbb
gs
mov
add
push
xchg
fstps
inc
fmul
cmp
repz
push
cmc
adc
adc
inc
mov
outsb
mov
xchg
rorb
dec
xchg
jne
mov
dec
pop
not
aaa
mov
cmpsb
aaa
ja
jns
inc
and
pop
dec
fwait
mov
adc
lea
das
movsl
cmp
jge
aaa
xchg
cmp
inc
xorb
xlat
mov
xor
mov
push
cmp
inc
ljmp
sub
stos
je
dec
pusha
adc
adc
ficompl
rolb
jle
in
lock
xchg
xchg
mov
push
adc
pop
dec
out
lock
fstpl
xor
fiaddl
inc
jl
xor
adc
pmulhw
je
sbb
test
xorb
xchg
loopne
lods
and
or
jmp
cmp
in
mov
fsts
ja,pt
dec
cmp
sbb
xchg
pop
pop
sbb
jl
aaa
repz
orb
outsb
loope
inc
dec
mov
adc
push
mov
testb
dec
out
pop
sbb
inc
dec
or
stos
push
lods
add
ja
and
jmp
jecxz
push
outsb
cmpsl
js
sti
push
xor
push
outsl
and
stc
sub
shl
in
and
cmp
fisubs
adc
je
stos
sub
addb
je
scas
xor
icebp
push
adcl
mov
jl
scas
pop
xchg
sbb
xchg
pop
sti
add
pop
and
ljmp
cltd
fmull
push
mov
fsts
int
ja
shrb
xorl
imul
mov
push
xchg
push
imul
jns
shlb
mov
and
ljmp
xchg
imul
test
xor
test
sbbb
in
leave
adc
jg
xor
jp
stos
inc
sbb
mov
adc
mov
or
pop
dec
inc
dec
sbb
adc
stos
enter
cmc
mov
xchg
lods
jbe
into
mov
loope
mov
lret
fs
push
mov
lods
das
sub
and
jae
add
bound
bound
and
adc
mov
pusha
add
mov
and
bound
mov
mov
jl
loopne
dec
jb
xchg
daa
inc
jns
mov
cmovnp
xlat
mov
mov
adc
bsf
push
stos
in
test
jle
xchg
shll
and
fcoml
imul
cli
movsl
xchg
push
jb
data16
jo
test
xchg
test
shll
fsubrs
cltd
mov
insb
xchg
ret
fcomps
call
inc
out
das
mov
mov
jp
sbb
jmp
sub
cmp
dec
rcll
cltd
movsl
repnz
pop
inc
dec
lahf
or
and
ret
shrb
pusha
mov
in
sbb
cmp
stos
aam
arpl
and
push
test
xor
cmp
add
and
sti
popa
jno
lock
sbb
gs
push
hlt
and
rorl
imul
xorb
xchg
sub
ja
xchg
lods
cmovnp
or
mov
cmp
paddw
je
aaa
and
xlat
xchg
mov
push
insb
mov
test
aam
cmp
clc
fimuls
jmp
inc
jmp
mov
stos
mov
orl
add
daa
icebp
jbe
int
push
lds
scas
adc
adc
adc
lds
and
mov
push
sbb
add
push
outsl
mov
int
pop
mov
scas
xchg
dec
jno
in
and
adc
rol
xor
test
insl
in
pushf
jmp
jle
jnp
js
je
cmp
mov
sub
dec
les
ror
lds
ffreep
adc
pop
and
pop
pop
inc
sbb
inc
cmpsb
enter
fnstenv
bnd
bound
jl
xchg
add
inc
mov
test
fcomps
in
ja
xchg
dec
sub
and
pcmpeqd
pop
dec
loop
dec
bound
mov
fdivp
push
dec
or
addr16
push
add
xchg
test
xor
clc
icebp
insb
add
push
test
pop
xor
jno
jg
or
jle
sub
outsl
push
repz
push
or
lret
lods
xor
cmpsl
pop
mov
inc
enter
mov
lock
sub
dec
jne
or
mov
rcrl
rcll
shrl
mov
sub
adc
and
pushf
popf
insl
dec
shrl
adc
pop
stos
js
jb
push
inc
je
xchg
mov
adc
and
aaa
adcb
arpl
fwait
add
sbb
cwtl
pop
hlt
jnp
mov
mov
add
mov
in
aas
xchg
sbb
imul
mov
cwtl
fimuls
add
iret
pop
jnp
repz
pop
cmp
loope
mov
int
xchg
pop
pop
xor
out
lods
leave
pop
out
gs
pop
adc
dec
push
push
shrb
mov
push
outsb
sahf
sahf
ss
jno
jg
xchg
daa
inc
adc
xor
cwtl
inc
into
movsl
jne
sbb
jg
jp
jp
jmp
inc
mov
xor
add
xchg
jbe
movsl
ds
lea
sbb
imul
pop
enter
loop
fsubl
test
jle
ror
mov
std
fdivl
test
pop
adc
and
jo
out
push
out
fidivl
mov
lods
cltd
or
ja
xlat
push
jg
std
inc
imul
fstpl
lret
pop
push
addr16
xchg
push
dec
lods
call
aad
bound
mov
mov
add
push
cmp
ds
add
jge
pop
pop
adc
lcall
and
jle
les
sub
inc
jecxz
mov
xlat
dec
and
insb
xor
jle
ja,pt
xor
inc
daa
test
cmp
and
pushf
dec
or
pavgb
sahf
or
mov
inc
mov
hlt
inc
jg
popf
push
stc
inc
jae
rcrl
mov
jnp
daa
in
or
fs
std
fdivrs
pop
inc
mov
scas
daa
decb
lods
popf
fidivrl
dec
push
insl
mov
nop
mov
lahf
xchg
arpl
fildll
sub
sti
movsb
push
dec
shr
inc
int
sbb
mov
adc
fdivp
cltd
dec
mov
mov
add
pushf
mov
leave
pop
movsl
fnstsw
aad
aas
clc
mov
dec
loopne
test
adc
or
out
xchg
ret
sub
xchg
cmp
call
ds
test
fists
in
stc
shl
mov
push
xchg
aas
test
or
clc
in
xchg
fldl
pop
das
shrl
mov
push
in
fsubrp
mov
test
mov
rcr
jmp
mov
jnp
in
push
or
sub
adc
push
pop
add
imul
aad
cmpsl
sub
jp
sbb
add
aas
stc
loopne
dec
jb
ror
lods
cmp
pop
and
popa
fnstenv
pop
ds
orl
and
pop
dec
push
xor
lcallw
push
jmp
and
into
lock
mov
inc
ljmp
and
in
pusha
into
mov
ret
dec
data16
dec
add
adc
mov
dec
mov
test
xlat
call
jg
inc
ds
xchg
cmpsb
sbb
lds
lret
fidivs
outsl
dec
out
pop
mov
stos
test
iret
es
ljmp
jae
pop
nop
or
add
mov
or
ljmp
xchg
dec
ficoml
fistl
lock
mov
fwait
sbb
jnp
daa
movsl
mov
or
je
fidivrs
into
das
js
adc
fwait
popf
xor
loopne
repnz
hlt
dec
pop
adcb
mov
xor
push
mov
or
aam
jns
jo
call
fisttps
and
adc
mov
add
mov
jb
push
and
cld
dec
rcrb
inc
test
mov
and
add
test
int3
je
enter
mov
mov
into
ss
inc
std
inc
dec
push
addr16
jecxz
in
fisttpl
ja
leave
push
dec
fwait
out
test
xor
stc
add
xor
subl
in
mov
adc
adc
dec
sbb
xor
fwait
or
adc
ds
or
sahf
add
cltd
aas
sti
mov
mov
movq
aam
cmp
in
mov
adc
test
push
loope
sarb
fs
mov
mov
cmp
ja
xchg
and
push
pop
mov
xchg
xchg
dec
js
bound
cmc
xchg
jge
lds
push
pop
mov
dec
mov
into
cs
and
in
adc
cli
pop
cmp
jmp
dec
cmpsl
mov
inc
jbe
sbbb
cmp
push
fnsave
ror
in
mov
fmul
sub
subb
pop
bound
jb
fildll
pop
adc
and
rol
jle
or
test
dec
pop
adc
repnz
shlb
mov
popf
je
ret
lret
and
stos
arpl
pushf
daa
jmp
jl
movsb
sub
pusha
lret
dec
push
je
pop
es
inc
jp
movb
xor
xlat
iret
js
dec
fs
mov
cmp
int
test
or
jge
unpcklps
imul
push
cs
insb
rcrb
das
sarb
add
test
mov
mov
mov
call
jmp
xor
mov
jg
insl
bound
and
imul
xchg
rcll
test
stos
fnsave
hlt
pop
lods
mov
xchg
in
aas
insl
and
cmp
jns
shl
popa
loope
notb
xor
fnstsw
stc
popf
mov
inc
outsb
lahf
sar
into
xor
pop
jb
sbb
ljmp
pop
jecxz
idivb
mov
sbb
jge
pop
adcb
aas
lahf
rcl
adc
inc
dec
xor
out
mov
jl
js
inc
push
mov
loop
test
pop
insb
hlt
popa
ds
push
aam
inc
dec
pop
cltd
dec
jge
push
imul
movsl
sbb
aas
js
in
mov
cmp
cld
hlt
arpl
arpl
add
lcall
es
inc
iret
sbb
dec
lea
dec
in
push
fsubrl
and
addr16
scas
fstpt
pop
dec
fxch
repnz
out
inc
mov
add
repz
adc
push
call
sbb
push
mov
jmp
cmc
lock
mov
cli
dec
mov
and
imul
xchg
adc
fisubrs
test
adc
xor
mov
iret
hlt
add
mov
push
add
xadd
aaa
pushf
in
sti
icebp
or
add
jp
sbb
sbbb
in
in
loope
jle
inc
push
inc
cmpsb
out
mov
sub
pop
movb
les
aad
int
add
movsb
movsb
mov
and
pop
jbe
mov
inc
cwtl
ret
cmp
repnz
ror
ja
inc
mov
lret
addr16
mov
inc
jne
cmpl
pusha
test
int
mov
das
out
lds
into
xor
adcl
push
mov
or
fucomp
cmpsb
pop
aad
int
pushf
hlt
xorb
es
pop
lret
and
mov
insb
xchg
pop
inc
nop
push
cltd
lea
jge
ret
jnp
or
mov
mov
aaa
adcb
inc
lret
pop
or
loop
xor
fisubl
or
scas
call
jo
xchg
xor
cld
lods
out
aad
push
mov
leave
lods
test
and
or
hlt
adc
mov
sbbl
or
cmp
jo
dec
subl
outsb
sbb
rcrb
out
push
aas
adc
inc
movntps
and
mov
test
dec
ja
push
mov
push
inc
stos
js
popa
pop
mov
imul
push
gs
xor
xchg
popf
adc
xor
mov
cwtl
dec
stc
pop
in
or
arpl
cltd
mov
mov
sub
sbb
xchg
mov
dec
mov
cltd
push
stos
mov
mov
aaa
mov
pop
clc
ret
mulb
cmpb
arpl
or
push
mov
pop
addb
and
cld
cmp
aaa
in
aaa
jmp
pop
cmp
je
or
lea
idivl
add
out
mov
pop
add
scas
jle
cmp
or
adc
daa
fwait
arpl
fistpl
scas
inc
jl
es
fiadds
ljmp
mov
add
mov
pop
ljmp
adc
add
sbb
sub
rcr
pop
xchg
addb
pop
les
cmc
mov
xchg
xchg
adc
stc
popa
mov
push
mov
inc
inc
lods
subl
sbb
imul
lret
jmp
mov
sbb
sbb
pop
les
ret
adc
fimull
cmpsl
jns
adc
mov
cs
jecxz
dec
adc
mov
lods
xchg
and
stos
sub
sub
mov
enter
lods
jle
sub
cmpb
cmp
or
sahf
std
mov
or
or
pusha
imul
cmp
cmp
call
jg
or
scas
lahf
fadds
test
outsl
mov
lahf
out
scas
pop
dec
push
cli
shlb
out
outsl
mov
sbb
and
mov
mov
mov
into
cmp
into
testb
repz
or
mov
pop
cmp
notl
jecxz
into
mov
jg
fs
push
pop
jecxz
popa
rcrl
and
cld
insl
push
test
mov
in
fildll
sub
push
jb
in
nop
inc
arpl
mov
outsl
push
push
xchg
mov
or
sti
inc
frstor
lea
lret
and
adcb
and
dec
xchg
mov
cmpsb
aad
test
fsubrl
sub
cwtl
pushl
pop
mov
lods
inc
lmsw
loope
jns
push
popf
dec
sbbl
inc
into
je
lret
aas
add
popf
es
mov
mov
pop
cmpsl
in
scas
imul
mov
xor
mov
jno
enter
mov
repz
les
pushf
adc
adc
inc
push
adc
inc
aas
adc
mov
or
fisttpll
pop
and
push
sub
mov
cld
xor
adc
mov
jno
into
pop
mov
cwtl
jecxz
aam
ficompl
ja
scas
in
xchg
push
lcall
scas
out
test
jge
ja
outsl
jmp
adc
jns
je
mov
test
popf
push
sbb
pusha
out
mov
leave
sar
jecxz
int
fdivrp
pop
outsl
or
movsl
loop
mov
or
and
fcoml
jo
sbb
lds
and
repz
es
sahf
or
inc
inc
adcb
and
pushf
out
mov
inc
mov
imull
sbb
push
mov
pop
add
or
ljmp
mov
lret
repz
ja
or
shll
push
sbb
repz
rorb
push
or
sbb
loop
jae
push
sub
mov
xor
repz
or
enter
push
add
xchg
pop
out
xor
mov
adc
cmp
pop
push
jns
xlat
jecxz
xchg
push
daa
jns
test
and
sub
sti
cmp
mov
dec
out
fsubp
mov
pop
push
icebp
adc
xchg
ljmp
ret
inc
testb
add
push
adc
mov
lcall
lea
sbb
test
shrb
outsb
jmp
lds
shlb
aam
lods
imul
dec
jmp
mov
cmc
daa
push
fnstenv
sub
xor
adc
xor
insb
roll
fsubr
fcoml
jo
push
jae
mov
inc
mov
rclb
inc
mov
jns
fisttps
dec
cmc
mov
ja
inc
int
jnp
add
xchg
lods
dec
outsl
out
shrl
add
inc
mov
mov
aam
nop
sub
mov
and
out
sub
xor
sti
xchg
xchg
iret
adc
in
jne
jae
jae
jno
xchg
cmc
insl
scas
test
dec
imul
mov
xchg
enter
sbb
sbb
scas
cmp
addr16
pop
sbbl
addl
clc
das
es
int3
ret
sbb
stos
lahf
pop
or
push
adc
sahf
add
sbb
in
daa
sub
adc
xchg
fstl
fmull
cs
hlt
ds
scas
mov
cwtl
jge
nop
sarb
jle
out
jl
mov
pusha
mov
or
stos
js
lods
imul
push
pop
insl
je
mov
arpl
nop
flds
push
mov
nop
in
pop
and
pushf
push
ss
push
ja
iret
scas
scas
leave
outsb
fbstp
xor
rol
mov
jmp
push
jnp
sahf
mov
pop
test
decl
in
call
xchg
lret
xor
cmpsb
xchg
push
lahf
loop
je
int3
pop
imul
sahf
lods
imul
stos
push
ljmp
jmp
xchg
sbb
xchg
test
sub
mov
cli
mov
inc
into
ljmp
xchg
stos
adc
and
push
xchg
imul
xchg
jnp
popl
stos
outsb
or
adc
fwait
jne
lock
into
stos
jb
pusha
les
pop
mov
add
adcl
xor
in
movb
lods
inc
adc
lret
sub
sarb
aas
mov
aad
test
cmp
imul
mov
xchg
stos
lods
add
leave
movsb
imul
jp
js
inc
adc
hlt
pop
add
jb
mov
imul
movsb
xchg
inc
popa
outsl
adc
in
inc
insl
dec
sub
mulb
add
aam
jae
add
mulb
stos
loop
and
push
pop
lods
ss
add
add
insl
pop
and
mov
pusha
fcoml
loop
fldl
mov
mov
mov
pop
or
andb
push
loop
shll
sbb
js
shll
dec
hlt
push
imul
jl
movsl
lods
lret
mov
jmp
adc
mov
mov
notl
fcoms
fwait
popa
pop
dec
fs
pusha
jl
repnz
inc
cmpsb
ret
arpl
imul
loope
daa
in
and
subl
add
int3
mov
push
mov
jmp
or
add
push
add
rorb
jg
xchg
push
ret
dec
push
add
jp
dec
cltd
push
lahf
rorl
cmpsb
sahf
push
xchg
jmp
divb
or
mov
les
xchg
mov
dec
cmp
fisttpll
orl
cltd
stos
mov
ret
out
adc
xlat
inc
fyl2x
mov
negb
xchg
shrb
push
das
clc
rcl
stos
sub
inc
pushf
mov
sbbb
push
test
and
and
jns
cmp
jbe
mov
lds
out
pop
out
insb
mov
mov
out
xchg
popf
jno
adcl
mov
enter
ss
jle
addr16
mov
lret
mov
movb
das
mov
xor
adc
xor
jge
scas
and
xchg
adc
imul
pop
push
daa
jne
push
scas
aas
shlb
pop
sub
xchg
xor
movb
or
ljmp
xor
or
dec
xchg
in
aaa
xchg
mov
and
loopne
pop
push
inc
sub
movsb
mov
mov
mov
rol
dec
stos
icebp
xor
add
dec
jecxz
aad
sub
mov
xchg
sti
add
sbb
leave
cmp
xchg
lds
mov
shlb
and
pop
xchg
mov
call
pop
bound
lods
jg
mov
push
in
into
jae
shr
push
cmc
pop
inc
xchg
pop
push
or
int
cmp
mov
cltd
mov
mov
sti
ficoms
cmp
cltd
cmp
leave
leave
jmp
cs
pop
cmp
imul
mov
mov
loopne
insb
inc
adc
jge
add
rcl
fs
lods
out
jle
and
test
xchg
movswl
int3
popa
lods
rorb
outsb
pusha
hlt
push
fst
cmp
addl
jle
mov
pushf
pop
test
cmpsb
out
insl
jnp
dec
nop
repnz
fsubrp
addr16
xchg
aad
imul
adc
mov
loopne
mov
push
lcall
and
jge
jmp
push
mov
fnstenv
push
loopne
into
sub
movsb
pop
outsl
jno
insl
fadds
shl
or
dec
mov
and
inc
repnz
jno
cli
shl
out
and
stos
insb
in
xor
sub
shlb
or
dec
mov
mov
insb
popa
cli
mov
cmp
pop
out
jmp
movsb
mov
mov
inc
clc
add
push
scas
movsb
mov
mov
mov
and
dec
daa
fidivl
and
imul
jle
inc
mov
int3
aam
mov
or
push
insb
ljmp
add
add
inc
jno
or
out
dec
pop
jle
test
shlb
aaa
in
shll
fs
repz
das
int3
subb
xchg
mov
or
push
ret
inc
lock
lret
rolb
dec
aaa
add
xor
jo
push
push
aaa
iret
adc
sub
fwait
std
mov
les
cmpsl
enter
out
pushf
sbb
lcall
mov
shrb
out
arpl
cmp
aaa
gs
sahf
sahf
push
jp
cvtdq2ps
mov
pop
sahf
pop
cmp
jbe
push
sub
les
jge
xchg
push
dec
jge
clc
clc
sbb
pushf
or
dec
sahf
push
fwait
test
mov
outsb
push
push
push
mov
sbb
pop
add
nop
mov
add
pop
fdivrs
loop
pop
rcll
adc
xorb
mov
sub
sub
xor
stos
daa
ror
pushf
push
sbb
aaa
sbb
in
repnz
xor
push
mov
jmp
sbb
nop
pop
xor
dec
ja
inc
repnz
jp
fisttpll
bound
fsubrs
lds
adc
inc
daa
insb
popa
jns
test
cmp
iret
out
cli
or
mov
movsb
enter
dec
mov
dec
testb
mov
xchg
sbb
sbb
cmp
filds
sub
pop
mov
fs
sbb
pop
jno
push
clc
fdivrs
test
das
jl
test
jo
cmp
in
lret
ljmp
fs
les
or
in
ss
aas
aad
xchg
scas
outsb
inc
iret
fdivl
in
mov
outsl
sub
cmp
stos
cmp
mov
cwtl
pusha
fstpt
adc
adc
mov
gs
cwtl
lahf
call
in
jg
iret
sbb
mov
lock
lahf
xchg
cmpsb
or
jge
push
push
dec
lahf
lcall
mov
int3
mov
mov
pop
fwait
mov
addl
sbb
push
insl
mov
int
xchg
scas
icebp
xor
andb
bound
cld
and
loop
loopne
sbb
outsb
dec
cmp
fs
fildl
adc
cmp
lahf
scas
in
dec
adc
or
pop
loopne
jne
dec
js
dec
dec
inc
jmp
adc
arpl
and
and
sahf
cmp
cmp
mov
sub
jecxz
stos
add
or
adc
xchg
fcmovne
xchg
rcrl
in
cmp
sbb
int3
and
cltd
and
mov
xchg
xlat
adc
shrl
push
cmpsl
and
push
or
jno
loop
add
cmp
mov
jno
push
loop
dec
ds
pop
jnp
out
pop
stc
faddl
adc
mov
pop
mov
jb
in
fs
hlt
mov
or
push
outsb
je
push
mov
dec
enter
xor
ror
cmp
out
add
vfmaddpd
insb
sahf
repnz
fucomip
xchg
lea
js
lock
aas
mov
neg
lea
scas
shrl
push
mov
or
cmc
in
mov
push
add
pop
call
std
mov
stos
decb
jae
push
jge
out
push
fbstp
cmp
int
jmp
stos
sbbl
jl
inc
frstor
imul
inc
aaa
insb
add
insb
add
push
mov
mov
dec
jne
sahf
pop
cmp
and
xchg
sahf
xor
dec
test
adc
subl
loope
fcompl
push
out
or
bound
test
and
xor
dec
in
rcr
or
mov
test
inc
mov
cmovg
push
fistl
inc
cmp
xchg
fmul
shlb
mov
je
aas
imul
testl
sub
pop
sti
mov
jno
loopne
jae
insb
push
add
sbb
add
out
sub
pop
mov
sub
loop
push
mov
sar
mov
ret
inc
mov
pop
repnz
lods
ds
out
push
scas
dec
cmpsb
and
dec
mov
ss
je
add
mov
jb
mov
andb
inc
adcb
push
mov
adc
les
add
test
sbb
mov
jbe
jb
mov
inc
cwtl
ljmp
inc
mov
and
popa
test
mov
adc
repz
insb
add
sub
ljmp
cmpsb
loop
insl
and
gs
cli
lret
pushf
push
daa
dec
mov
jmp
les
hlt
cmp
sbb
push
cld
rep
add
pop
cltd
xlat
stos
push
add
pop
rol
xchg
js
sbb
mov
out
sub
fiaddl
aam
mov
inc
call
fsubs
mov
mov
decl
loope
adc
fs
aaa
pop
xchg
mulb
pop
sub
mov
push
fcoml
loopne
dec
pop
or
dec
sbb
frstor
sub
sub
lret
mov
cmp
xor
cltd
mov
and
sbb
insl
cmp
cmp
shrl
and
pusha
out
add
push
xchg
cwtl
mov
xlat
mov
mov
jns
gs
ja
jae
filds
xchg
sbb
push
test
shrb
mov
call
cs
push
out
fdiv
fimuls
std
mov
nop
jns
and
cwtl
jno
inc
orl
data16
xor
out
scas
cmovbe
mov
daa
lock
fcmovnbe
jns
ljmp
xor
pop
mov
fs
in
push
sub
xor
sahf
ja
clc
cmp
fs
roll
aad
das
mov
dec
cwtl
ds
mov
pop
fistpl
sbb
out
add
hlt
adc
jp
cltd
add
repz
rorl
loope
push
xchg
jne
dec
or
pushf
dec
jnp
pop
sub
xor
lods
sahf
inc
ja
mov
in
es
test
iret
cld
scas
outsl
and
popa
sub
shl
inc
fnsave
cmp
enter
je
sub
jge
rclb
mov
mov
adc
sub
sub
shlb
or
cmpsl
mov
sti
pavgw
ds
fldcw
popf
mov
in
sar
imul
sbb
ja
or
inc
loopne
andl
movsl
cmpsl
add
icebp
sahf
lds
sub
jle
cmp
test
and
out
pushf
int3
sub
lahf
cmp
jbe
and
lods
jbe
pop
ja
adc
inc
sbb
xor
rcr
mov
lods
cmp
fmull
mov
mov
dec
jl
or
pop
xor
sub
push
jo
ja
popa
mov
lods
sar
call
adc
or
enter
pushf
es
jnp
mov
das
cmp
imul
jge
push
insb
cli
jge
mov
or
loop
adc
and
imul
add
jns
sbb
dec
and
or
lods
test
mov
xchg
sti
or
add
push
push
inc
jns
js
test
cmc
inc
ja
jae
dec
stos
ret
scas
add
add
inc
shrb
or
pop
xchg
push
or
rcll
add
xchg
xor
push
dec
jne
and
pop
mov
sbb
dec
mov
lods
clc
adc
shlb
add
cmp
adc
js
pusha
pop
leave
pop
test
jp
scas
sbb
xchg
xor
scas
xchg
lcall
mov
or
adc
cmp
or
sub
mov
repz
rcll
mov
dec
or
call
ds
pop
rcrb
fxch
test
mov
add
inc
and
repz
shlb
ja
push
je
adc
inc
add
sub
lea
push
repz
cs
jns
push
push
add
jne
add
sbb
mov
dec
or
faddp
or
aas
or
loope
jne
pop
mov
loop
jne
aam
cwtl
or
mov
jl
mov
lds
andb
mov
mov
aaa
push
clc
sahf
mov
mov
call
and
dec
stos
int3
int
sbb
adc
mov
repnz
pop
cmp
jne
clc
pusha
push
gs
in
subl
sbb
dec
xor
es
push
insb
pop
push
insl
int
xchg
jle
jbe
out
inc
aas
dec
mov
cs
push
sti
pop
push
loope
fimuls
mov
sub
and
je
sbb
xchg
ret
repz
sahf
sahf
jle
in
lahf
pop
call
or
js
gs
lret
movsl
bound
pop
push
mov
dec
push
and
fcmovnu
in
test
lock
xchg
iret
cs
jmp
icebp
jg
dec
xor
mov
mov
xchg
outsb
in
hlt
push
mov
mov
push
mov
mov
lea
push
sub
xor
ret
inc
sbb
das
and
xor
ss
cmpsl
push
mov
jp
pop
aas
pusha
mov
jg
mov
outsl
jl
nop
sbb
popf
inc
leave
iret
sahf
je
clc
test
push
xchg
mov
jns
lods
xor
adc
scas
push
cli
pop
shll
sarb
push
imul
stos
mov
loope
test
jae
or
or
inc
mull
sbb
push
xchg
dec
nop
mov
sub
xchg
xchg
bound
sarb
cmp
insb
push
adc
cmp
call
stos
sub
out
dec
mov
cmc
fistpl
gs
adc
notb
scas
or
and
fldcw
ds
imul
mov
adc
pop
imul
and
cmp
xor
test
aaa
cmpsl
add
repnz
jl
add
sbbb
sbb
inc
mov
ljmp
and
xlat
push
idivb
jne
mov
or
orb
scas
fstl
insb
xor
das
sub
sarb
sbb
fcompl
and
into
pop
xchg
cld
pop
cli
andb
cmp
rolb
mov
inc
fldenv
add
add
je
push
sub
fwait
lea
scas
rcll
insl
xchg
and
xlat
xor
orl
and
inc
pop
inc
fadds
cmp
sahf
mov
cs
and
xchg
movsb
push
test
iret
dec
mov
mov
iret
aas
clc
fs
and
push
pop
cmpsb
icebp
mov
or
mov
rclb
jb
mov
mov
out
ret
dec
fbstp
xor
pusha
pop
insb
rcll
dec
push
cli
cmp
out
popl
test
pushf
lret
cs
add
ja
outsl
lds
sbb
aad
mov
cmpsl
jae
loope
mov
lret
stc
pop
dec
aam
jg
dec
fsubl
xor
pop
popf
xchg
mov
push
lods
xor
sub
jo
fists
push
es
add
jnp
jp
stc
inc
cli
and
or
dec
outsb
adc
jb
mov
add
or
lods
and
in
xchg
outsl
out
popf
insb
xor
mov
call
xor
add
mov
mov
inc
nop
sbb
or
xor
cmpsb
jno
fs
push
cmp
das
pusha
mov
daa
adc
data16
and
pushf
repz
loopne
sub
mov
cltd
test
mov
mov
cli
fistl
cmp
jns
not
nop
jge
cmp
scas
sub
sti
ja
out
inc
addr16
xchg
popf
mov
iret
mov
mov
pop
fisttpl
push
imull
push
inc
mov
cltd
je
addr16
add
or
push
cmp
test
das
addr16
lods
mov
cmp
xchg
adc
out
incl
jb
mov
dec
das
aaa
shrl
fwait
lret
mov
aad
shrl
loope
das
in
sbb
roll
or
pop
xchg
test
sub
lret
out
pusha
and
notl
mov
sbb
mov
data16
dec
aam
nop
mov
jmp
outsl
sub
xchg
dec
sbb
rcrb
shl
cmp
cld
mov
mov
test
aad
ret
int3
jno
push
fscale
add
xchg
jl
mov
mov
dec
pop
dec
fiaddl
xchg
push
int
cmp
in
shrl
jbe
jg
aas
sbb
rcl
inc
and
out
idivb
fldln2
and
jl
repz
not
fnstenv
filds
ss
pop
in
xchg
cwtl
gs
in
mov
jecxz
xor
cs
xor
jbe
aam
xchg
mov
lret
aas
or
das
inc
push
scas
jno
push
cltd
cld
test
xchg
mov
cmpsl
cmp
xchg
dec
fucom
push
mov
mov
cmp
in
pop
repz
popf
icebp
sub
rcrl
mov
mov
repnz
sbb
data16
push
mov
pop
mov
fnsave
in
mov
xlat
orb
repz
dec
iret
in
inc
js
es
adc
mov
icebp
stos
fstpt
and
popl
insb
or
mov
mov
jl
pop
outsb
push
adc
jle
cwtl
shlb
data16
and
jecxz
outsb
xchg
lahf
xchg
imull
jg
call
jb
scas
scas
sbb
push
push
lahf
jno
add
inc
iret
test
xor
jo
aaa
inc
dec
jb
call
sti
arpl
lods
adc
mov
in
stos
scas
dec
pushf
sahf
push
add
mov
pop
cmpsb
cmpl
fnstenv
lods
push
inc
fstp
jp
sub
ret
fmull
add
scas
inc
ds
imul
imul
dec
lret
dec
fld1
sahf
lea
idivb
mov
test
dec
pop
and
incl
pushf
std
aad
lock
mov
adc
add
sub
adc
inc
sbb
jmp
arpl
pop
or
imul
fbld
bound
pop
jns
scas
adc
cmpsl
xchg
mov
push
xchg
fcoml
cmp
orb
sarl
push
scas
sti
push
dec
sbb
sub
fisttps
je
pop
loop
xchg
aas
cli
push
aam
arpl
enter
pop
loop
sahf
test
mov
add
loopne
mov
mov
and
mov
xor
cld
popa
pop
out
add
mov
xchg
push
xor
add
dec
or
lret
ljmp
divl
xor
and
push
cmp
or
sbb
adc
scas
sahf
fidivrl
jecxz
mov
sub
enter
inc
cmc
das
mov
sbb
repnz
and
mov
repz
mov
les
adc
inc
xchg
and
notl
dec
dec
adc
mov
dec
push
push
jbe
sbbb
scas
shrl
jbe
push
push
fld
aad
popa
lret
loopne
mov
mov
inc
in
loope
cmp
les
jp
lock
pop
sbb
test
sti
mov
xor
mov
mov
or
cmp
addr16
lcall
inc
int3
rcrl
pop
test
addr16
xlat
mov
outsl
xor
cld
imull
dec
add
loope
adc
pop
jle
call
or
and
push
jae
js
sub
pushf
sub
seta
mov
push
xchg
jnp
or
mov
shl
mov
cmp
cmp
push
sbb
inc
and
mov
mov
dec
inc
mov
loope
pop
jno
cli
filds
xchg
popf
dec
sahf
xchg
repz
addb
stos
jp
leave
or
in
inc
pusha
imul
repz
ficoms
nop
jge
push
jecxz
adc
es
fstpt
mov
js
inc
rcrb
negl
mov
add
cmp
adc
pop
jg
lret
xchg
sahf
fwait
jno
aad
int
mov
cmp
shll
cwtl
inc
in
andb
dec
inc
ss
jp
mov
sub
and
inc
loop
push
sbb
xor
je
lds
xchg
rcr
push
movsl
loope
dec
mov
in
addl
js
sti
into
ret
bound
dec
sbb
out
push
jo
je
cmpb
insb
cmp
cltd
mov
mov
mov
int3
notl
into
jle
jns
mov
movsb
leave
nop
stos
and
negl
je
adc
dec
insb
inc
das
mov
pop
fisttpl
xchg
fs
cld
cmp
push
xchg
sbb
ret
push
xlat
dec
roll
add
pop
pop
mov
mov
rcr
and
rcll
iret
inc
arpl
sub
das
data16
pop
or
loop
sbb
xor
mov
add
sbb
push
jge
sub
cmp
inc
ljmp
sub
fldenv
movsl
push
sbb
inc
in
sti
adc
cmp
jecxz
cltd
add
pusha
mov
enter
fadds
xchg
xchg
inc
sbb
mov
fisttpl
jb
clc
je
sti
lods
fwait
outsb
add
xchg
pop
lahf
xorb
mov
mov
or
je
lahf
adc
cmp
mov
dec
lods
mov
mov
adc
cmp
and
aam
xchg
inc
dec
es
lock
hlt
cltd
sbb
add
mov
mov
fwait
and
pusha
sbb
jmp
out
mov
insb
adc
lea
lock
push
cmp
pop
or
fstpl
daa
jne
dec
insb
push
jne
cmp
aam
imull
ret
lcall
mov
stos
mov
jge
xchg
xor
push
dec
push
jp
repz
fstpt
inc
fisubs
dec
adc
cmp
pop
cli
je
push
mov
or
xor
lret
pop
ss
push
aad
out
lods
push
call
imulb
pushf
mov
das
or
xchg
ss
fsubs
rorb
loope
aad
adc
inc
stos
xchg
xlat
push
dec
sub
jecxz
pop
push
cwtl
call
inc
push
fucomp
test
inc
mov
das
jae
xchg
push
lret
jmp
gs
out
fwait
call
icebp
dec
lods
jp
inc
data16
leave
jg
inc
pop
dec
jb
les
push
mov
call
sub
add
pop
loope
dec
push
stos
adc
mov
out
sub
xor
adc
xor
outsl
sbbl
stc
pop
mov
or
push
sarl
int
int3
in
rcrb
cmc
fstpl
sbb
repnz
pop
dec
ljmp
and
cmpb
and
inc
cmpb
mov
push
and
add
inc
movsl
xlat
stos
cld
mov
mov
mov
outsb
xchg
fisttpl
stc
iret
adc
daa
cwtl
test
ret
push
ficompl
mov
mov
xlat
cwtl
dec
ret
pop
jmp
push
faddl
sbbb
loopne
jl
lods
test
push
mov
adc
push
popf
jmp
jbe
aaa
xchg
dec
aaa
jb
and
out
mov
xor
shlb
movsb
addb
int
out
mov
test
mov
cmpsl
js
pop
cmp
imul
sub
ljmp
jb
xchg
push
int
sbb
call
mov
mov
or
repnz
dec
dec
pop
cmp
cmp
ja
sti
lahf
push
xor
inc
imul
mov
or
add
push
add
pop
fadd
xchg
lods
mov
xor
adc
jnp
mov
shlb
adc
and
jnp
jecxz
pop
add
cld
test
push
leave
mul
stos
mov
fsubr
and
fdivp
sub
pop
and
cmp
inc
lock
in
cli
and
dec
mov
in
fcmovu
and
fwait
push
ret
scas
xchg
push
mov
push
pop
or
sub
pop
pop
jle
sub
hlt
mov
aad
mov
mov
push
scas
cwtl
into
add
sub
in
shl
ret
xchg
or
jb
fsts
dec
test
sti
sbb
sub
int3
mov
jg
mov
cmpsb
cmc
and
or
sub
popf
mov
daa
push
mov
and
mov
sbb
sub
leave
jbe
test
movb
ret
xor
xlat
and
mov
outsb
in
push
popf
hlt
pop
inc
int
int
push
les
push
divb
sbb
mov
subl
adc
sub
adc
sbb
pop
jnp
inc
cmp
rorb
andb
lret
stc
xchg
pop
cmpb
pop
adc
mov
lret
std
pop
daa
mov
mov
insb
mov
aas
mov
notl
dec
jae
mov
lret
mov
or
jmp
xor
out
inc
or
addr16
mov
cmp
and
imul
xor
sysret
ret
mov
or
rclb
adc
push
xchg
rol
adc
arpl
in
xchg
jae
ja
mov
push
dec
fidivl
lahf
jmp
jge
xchg
mov
add
push
jae
cmp
ljmp
outsl
push
pop
fidivl
cld
jae
imul
xor
xlat
mov
pop
aam
mov
enter
mov
ret
bound
ja
push
mov
adc
pop
cmpl
sub
sahf
dec
inc
push
inc
push
xchg
in
xor
mov
jnp
mov
hlt
jo
fistl
cmc
dec
in
cmp
fisttps
scas
clc
cmp
mov
xor
repnz
in
xor
int
dec
out
xor
sarl
dec
js
test
scas
ret
aas
pop
jmp
mov
fadd
sti
dec
in
data16
imul
sub
fidivrs
inc
mov
std
pop
fwait
stos
push
in
inc
sub
xchg
int
lea
movsb
mov
pop
sbb
nop
or
hlt
sub
ja
adc
sbb
sbb
cli
mov
in
dec
pop
or
lahf
movsl
cmp
ss
inc
mov
mov
mov
pusha
loopne
adc
mulb
int3
mulb
sbb
aaa
fdivs
fwait
mov
sub
xchg
aaa
mov
pushf
xor
ja
push
push
inc
mov
push
decl
mov
push
leave
pmuludq
rcr
mov
jl
bound
out
bnd
les
inc
rcrl
or
jo
and
jl
inc
mov
stc
push
cs
cmpsb
mov
loop
fs
jle
xchg
xchg
mov
das
mov
cli
xor
jp
mov
mov
pop
mov
lcall
push
jecxz
out
clc
ljmp
push
test
inc
mov
ja
je
clc
sub
mov
pop
sub
add
cltd
leave
cmpsl
jns
dec
inc
mov
push
push
mov
jmp
jecxz
sbb
sub
fisubs
imul
xor
xor
and
xor
jne
inc
fwait
sbb
jne
pop
jg
inc
and
and
stc
jge
jno
std
push
cmove
fmuls
addr16
scas
mov
shlb
push
popa
sub
xor
lcall
push
push
sub
pop
pop
iret
pop
adc
std
jbe
sbbb
dec
xor
mov
or
mov
jg
and
cli
cld
pop
adc
push
mov
sbb
addr16
arpl
loope
push
or
push
mov
aad
mov
xor
pop
mov
pop
inc
cmc
movl
jbe
shlb
cltd
and
mov
add
loopne
xchg
adc
repz
shll
icebp
lea
icebp
dec
or
dec
push
jecxz
mov
stc
leave
cmpsb
arpl
fadds
int
aam
inc
sbb
adc
lcall
push
repz
inc
mov
add
cs
mov
fdivl
cmpsb
jo
mov
or
push
sub
xchg
dec
dec
xchg
mov
adc
push
inc
sahf
mov
imul
insb
sarb
xchg
push
push
ljmp
loopne
xchg
pop
fistpl
cmp
xor
xchg
or
jbe
je
inc
nop
jp
xchg
mulb
imul
fstpl
scas
adc
lret
vmptrld
xor
jl
inc
add
insb
repz
outsl
mov
sub
push
cmp
jecxz
in
xchg
ja
lea
test
aam
fnsave
stos
xchg
add
movsb
dec
mov
mov
mov
std
movsl
xchg
mov
pop
pushf
xorl
test
sub
push
out
add
fcomps
or
ja
cltd
mov
pop
mov
inc
lret
sti
mov
xor
mov
or
loopne
adc
and
dec
mov
xor
sub
cmp
dec
je
iret
adcb
nop
mov
mov
lock
scas
cmpb
aam
je
jnp
mov
xor
pop
addb
pop
and
ret
cmp
mov
sti
sbb
adc
ret
pop
inc
fwait
arpl
addb
dec
and
pop
or
out
insb
les
inc
adc
insb
out
cmp
jle
fisttpll
ret
sub
xchg
or
je
mov
push
or
xor
and
inc
mov
add
stos
mov
push
shlb
ss
ficompl
nop
pushf
xor
inc
inc
or
pop
cmc
mov
dec
dec
dec
aaa
sbb
or
jno
pop
roll
add
aam
mov
stos
dec
and
jae
aas
xor
gs
loop
icebp
mov
or
push
std
inc
aaa
mov
addr16
xor
cmp
lea
pushf
xchg
sbb
jbe
adc
hlt
mov
iret
or
loope
dec
xchg
jle
pusha
ret
adc
rclb
adc
pop
pop
ret
sbb
sub
push
ror
or
pop
jecxz
idivl
pop
adc
xor
insl
shll
jnp
daa
cmpsb
xlat
stc
pop
jb
fs
mov
mov
pop
push
xor
ret
stos
fstl
fstps
and
mov
mov
ja
pop
and
sahf
cmp
mov
cmp
jbe
push
popf
jp
xchg
sbb
pop
lock
stos
sub
test
mov
in
mov
mov
out
cmpsl
dec
je
inc
xor
mov
icebp
sarl
out
aam
out
cld
insb
inc
outsl
pop
aaa
loop
je
loop
mov
fisttps
lods
and
pop
sbb
ret
jae
int
inc
lods
push
mov
mov
pop
mov
push
push
adc
mov
jae
xchg
mov
push
stos
add
out
push
cmp
repnz
mov
lods
xchg
call
rclb
mov
fidivl
xor
fcmovne
mov
pusha
or
push
scas
xchg
fdivl
jp
cmp
cwtl
pop
std
fisubrl
push
fcomip
arpl
jmp
std
jo
std
imull
mov
movsl
push
xor
cmp
rcl
ss
push
insl
cli
add
push
dec
or
insl
pop
xorb
orl
adc
adc
adc
or
test
jge
aad
sbb
jle
cld
mov
sbb
mov
fwait
sbb
ljmp
add
aas
ljmp
fdivl
int
out
imul
imul
xor
ljmp
call
pushf
in
sahf
mov
mov
mov
adc
mov
lods
push
leave
push
lods
mov
xchg
mov
jns
stc
mov
stos
fldenv
dec
xchg
mov
aam
or
xchg
inc
jp
out
xchg
adc
fistpl
cmp
cmp
xlat
shlb
mov
sbb
ja
cld
jg
or
movsl
data16
hlt
sbb
jmp
shl
icebp
xor
stc
ret
jmp
movsb
push
mov
jae
ret
cmp
adc
mov
xchg
stos
andb
test
ja
jle
lods
dec
pop
cmp
jno
fwait
xlat
cmpsl
push
cmp
popa
adc
in
mov
lock
les
fisubl
xbegin
sbb
pop
adc
cmpb
cld
and
push
sub
push
adc
adc
jne
cltd
push
push
fisubs
xchg
lds
cmpsb
push
mov
or
pushl
fnstsw
ss
lcall
cmpsl
sub
add
add
push
imul
push
arpl
movsb
sbb
inc
out
inc
in
adc
mov
dec
lock
fstps
jmp
sbb
fildl
and
pop
xlat
test
scas
stos
and
stos
sub
mov
cmc
mov
mov
and
add
push
out
sub
scas
xor
add
push
cmp
add
subb
mov
push
mov
bound
sub
sbb
aad
imul
add
test
std
jb
addr16
loop
mov
sbb
cltd
in
pop
loopne
jp
aad
test
jl
add
js
clc
push
pop
xor
js
cs
out
lock
repz
jl
mov
out
cltd
popf
push
cwtl
call
std
jp
xor
aas
nop
jmp
inc
stc
inc
mov
out
adc
popa
push
cli
and
mov
loopne
pop
insl
push
or
mov
cmp
faddl
push
dec
test
add
jl
sbb
ret
adc
int3
pushf
out
mov
pop
js
add
aad
push
and
rolb
xchg
push
loopne
cmp
test
jae
sahf
push
lods
aaa
imul
andb
xlat
test
lret
cmp
push
repz
mov
icebp
mov
add
popf
mov
push
loope
rorl
dec
sbb
stc
mov
lahf
cltd
lahf
adcb
lock
test
inc
inc
cmp
and
daa
sbb
ja
pop
adc
mov
mov
sub
xor
jb
aas
stos
dec
out
mov
fidivl
xchg
test
movsb
clc
loop
jno
adc
stc
lahf
inc
add
mov
mov
mov
mov
dec
lea
cmp
adc
fidivs
popa
mov
in
cmp
sbb
push
mov
add
in
shl
cli
aas
inc
push
mov
insl
sbb
cltd
adc
xor
pcmpeqw
aam
aad
movsb
bound
mov
in
mov
clc
insb
test
sub
ljmp
sub
sub
inc
sbb
adc
inc
aam
pushf
xor
lret
test
std
xchg
movb
cmpsb
lods
xlat
inc
sub
adc
dec
jecxz
cmp
mov
repnz
mov
sub
mov
fstpl
idivl
repnz
mov
inc
iret
aaa
pop
fidivs
pop
cmc
bound
outsw
adc
xor
xor
add
into
mov
insb
cmp
sahf
add
inc
cmpsl
in
or
xor
sti
lret
fs
test
pop
xchg
mov
mov
or
inc
movsb
adcb
mov
and
cs
add
ja
pushf
mov
dec
insl
shr
push
lcall
jne
dec
test
or
fs
rcl
das
aad
movsl
outsb
sbb
xchg
jne
or
xchg
aaa
subl
aam
adcl
loop
mov
imul
test
pop
mov
or
cmpsl
shll
fbstp
dec
cmp
popf
or
aas
dec
fidivrl
es
mov
xlat
int3
lahf
jl
cmp
sub
sti
aad
fcmovnb
lds
push
add
fwait
data16
pop
aaa
and
push
pop
pop
adc
pop
xor
pop
outsl
mov
adc
insl
ja
lret
xchg
lret
push
xor
ret
push
pop
lcall
mov
arpl
pusha
adc
rcl
mov
mov
add
xor
xchg
fcoms
jb
push
pop
insl
sbb
int3
push
and
lods
adc
adc
sub
fists
out
movsb
sbb
xor
add
mov
jns
sarb
in
push
or
fsub
cmp
cmp
mov
fwait
or
outsl
dec
fwait
sub
lods
divl
fstl
sub
loope
mov
sbb
rorb
insl
and
mov
repz
int3
xor
addl
fcomps
ret
addr16
or
jbe
fbstp
and
fldenv
aad
addb
fldt
adc
gs
adc
testl
aad
mov
in
jnp
inc
jbe
jo
jp
in
push
xchg
std
jbe
lcall
jbe
lds
jbe
jae
push
inc
aad
fwait
sahf
xchg
adc
fiaddl
int3
outsb
pop
hlt
adc
jns
cmp
mov
sti
xchg
inc
in
pusha
xor
pop
das
jae
insb
lods
cmpsl
adc
or
into
ljmp
es
pop
rclb
insb
push
jb
mov
repnz
jmp
mov
enter
clc
arpl
mov
int3
jne
dec
sahf
fwait
iret
movsb
and
mov
std
cmpsl
test
fimuls
xchg
scas
add
xchg
nop
xor
fisttpl
jl
mov
repz
mov
or
xchg
mov
dec
xchg
pop
jmp
mov
jle
nop
xchg
jbe
jge
jg
jns
jp
inc
pop
out
push
mov
push
gs
xor
pop
jmp
int
jl
shrb
pop
sbb
sti
sbb
mov
push
and
push
sbb
sub
mov
fs
or
lods
push
mov
je
aam
aaa
scas
clc
mov
push
inc
sub
jmp
outsb
mull
shll
jmp
pop
sub
inc
leave
out
rcrl
xchg
ret
inc
outsb
andl
xchg
clc
mov
dec
pop
add
nop
mov
pop
repz
inc
cmpsb
jnp
gs
test
jbe
clc
xor
adcb
jno,pn
jbe
push
push
loopne
push
fs
clc
sub
mov
nop
int3
filds
cmp
adc
outsb
das
in
dec
jo
cmc
ret
mov
jmp
idiv
loopne
ds
imul
mov
mov
xchg
push
clc
aas
neg
jecxz
push
shrb
test
pop
and
iret
pushf
sbb
les
movsl
test
push
dec
mov
std
jle
int
pop
lahf
scas
cmp
imul
xchg
fmull
xchg
stos
dec
imul
mov
pop
jg
loopne
mov
fists
aam
scas
or
add
mov
in
ret
push
xchg
or
cmp
xorb
lahf
xlat
and
or
xor
dec
mov
xchg
mov
push
enter
stos
test
xor
xlat
sbb
test
bound
add
rorb
aad
testl
out
and
xor
push
pusha
addr16
sbb
arpl
mov
in
push
cmp
cli
xchg
cs
and
rcrb
pop
add
popa
mov
repnz
inc
pop
es
imull
push
inc
iret
cmp
jnp
enterw
gs
les
mov
aad
xchg
push
adc
lock
mov
leave
ljmp
imull
in
pop
pop
sub
fs
jne
ret
xor
pop
cmp
xor
test
cmp
mov
aam
outsb
movhps
movsb
push
mov
dec
push
stc
vpunpcklbw
dec
xchg
lods
icebp
sbb
addr16
dec
lahf
pop
stos
xchg
xchg
xchg
mov
roll
insb
push
hlt
pop
fistl
pop
mov
inc
adc
jne
inc
ljmp
jg
push
jne
mov
lcall
jecxz
rorl
push
xchg
jbe
xchg
push
fwait
pushf
imull
jge
stos
jno
jbe
ret
push
insl
mov
xchg
je
adc
fistpll
fs
push
sbb
cs
mov
xor
adc
push
or
cli
and
sub
sbb
adc
adc
iret
iret
and
lds
scas
jmp
mov
les
sbb
pop
pop
push
rcrb
popa
fcompl
xor
inc
cmp
pop
or
sub
push
inc
lret
jge
and
into
xchg
sbb
rolb
push
dec
lret
sub
mov
jl
xor
lods
xchg
popa
inc
jmp
mov
mov
fsts
or
and
add
aaa
fwait
subb
jmp
pusha
lcall
cmpsl
aaa
push
call
mov
testl
int
shrl
stc
mov
or
inc
lahf
xchg
out
inc
jne
aam
pushf
out
jb
add
rcrb
jnp
cmpsb
push
sbb
lods
xor
or
daa
push
mov
inc
inc
xor
add
pop
daa
push
dec
pop
cli
cmp
daa
sbb
pop
call
scas
and
xacquire
mov
dec
jmp
cmp
sbb
shlb
repz
fisubs
int
pop
mov
shll
ret
xor
pop
outsb
mov
pop
jge
cmpsl
inc
iret
mov
out
pop
dec
xor
cmp
lds
sub
in
les
test
adc
out
pop
sbb
mov
sub
out
test
lcall
xchg
sbb
xor
call
int3
sbb
push
popa
fsubs
movsb
fdivrs
icebp
mov
mov
notl
outsb
mov
and
lods
jo
pop
outsl
sbb
test
pushf
xchg
aam
xlat
fistpll
inc
ja
xchg
jae
popa
es
pop
pop
add
rolb
or
mov
stc
mov
mov
xor
mov
xor
push
flds
sbb
test
cmpsb
out
mov
pop
lds
adcl
divl
aad
xor
push
mov
popf
sub
xchg
icebp
and
out
lods
addr16
daa
sub
push
xor
mov
pop
add
pushf
sbb
jle
std
movsb
or
cmc
addr16
cwtl
mov
imul
cld
push
in
loope
mov
push
scas
and
push
jo
or
add
scas
dec
mov
inc
xor
mov
stos
xchg
mov
out
cmpsb
arpl
cmc
lahf
and
stos
jl
fisttpll
bound
das
orl
cld
dec
outsb
jno
orb
pop
stc
dec
xchg
int
mov
push
daa
dec
cmpsl
fwait
sbb
sub
dec
inc
mov
pop
jae
push
adc
outsl
inc
das
jnp
mov
fsts
and
cli
adc
sub
in
in
jg
push
mov
mov
jl
cli
adc
cmpsl
xchg
addb
add
or
stos
xchg
mov
mov
shl
fisttpl
add
jno
gs
rcrb
cmp
loope
add
pop
aas
jge
jge
xlat
movsl
in
shr
push
xor
xchg
jo
cmp
mov
push
fldenv
sbbl
mov
sbb
cmp
adc
xlat
or
jl
push
iret
mov
bound
and
enter
inc
les
ss
push
cmp
fwait
mov
test
in
fcmovb
jmp
dec
jb
test
push
lret
fcoml
xorb
xchg
cmp
inc
arpl
shl
fnsave
push
out
adc
les
sub
sbb
xchg
xchg
test
sub
inc
ret
pusha
jne
and
dec
das
leave
pop
jne
cmpsb
fwait
rcrl
jne
push
mov
daa
dec
sahf
movl
push
push
test
cmc
pop
lahf
jae
fs
push
out
jg
bound
jle
lret
sub
ret
xor
mov
dec
shlb
fmul
dec
pop
in
jmp
call
test
mov
push
jecxz
mov
lock
adc
loopne
leave
test
fdivs
pop
call
mov
push
imul
shll
xor
pushf
cmp
inc
fnop
xor
sub
jnp
cli
pop
push
faddl
adc
loope
aaa
dec
pop
jo
jb
jle
je
pop
inc
xor
cmp
lds
mov
ret
pop
leave
testb
lods
dec
mov
add
les
icebp
jo
cli
rcl
rclb
mov
inc
scas
lods
sbb
arpl
push
sbb
jle
jmp
add
dec
aaa
fdivrp
pop
imul
add
push
dec
push
xchg
cmp
aas
repnz
xchg
sub
sub
mov
lds
jbe
inc
or
and
pop
fld
rol
inc
pushf
shrl
ja
jmp
loop
popf
cvtpi2ps
fiaddl
pop
xchg
or
orl
cmp
jge
mov
push
push
ds
data16
aam
imul
cltd
and
test
push
jo
daa
or
push
jmp
adc
ds
lods
out
jnp
jae
push
jno
or
cmp
rorl
aas
std
and
mov
cmp
loop
out
aas
popf
divl
pop
popf
lods
inc
imul
push
mov
adc
rorl
hlt
sbb
xor
scas
aam
and
push
sbb
dec
jbe
daa
xchg
ja
add
dec
add
mov
test
das
jnp
inc
sub
adc
ja
sti
fnstcw
push
dec
dec
fsub
js
iret
sahf
pushf
ss
adc
mov
loopne
xor
fucomip
popa
dec
mov
jl
cmp
push
jp
push
icebp
push
repz
dec
lcall
cmp
pop
mov
fsubrp
cltd
cwtl
inc
add
sbb
sub
dec
xchg
or
nop
mov
cmp
ret
rcr
out
leave
cwtl
or
xor
push
popf
sbb
scas
xchg
dec
xor
flds
jbe
xchg
inc
sub
es
cmp
inc
cld
lods
jle
xor
sub
xchg
negl
movsb
or
dec
jb
cmp
mov
nop
cmpsl
leave
push
stos
aam
insb
xchg
ror
rclb
adc
adc
cmp
mov
xchg
xchg
cmp
add
inc
and
mov
lds
fisttpll
lret
or
sbb
imul
jmp
sbbb
imul
jne
xlat
xchg
push
cs
pushf
mov
mov
push
xchg
jbe
push
outsb
sub
dec
ljmp
push
loopne
sbb
adc
test
sub
mov
stos
ljmp
dec
jno
fwait
inc
aad
mov
pushf
sub
mov
mov
sbbl
scas
ja
mov
cli
arpl
es
add
mov
fisubl
in
push
cmp
into
cltd
adc
call
push
dec
push
int3
cmp
and
xor
push
scas
mov
or
mov
push
aas
sarb
aam
loope
neg
and
int
fwait
leave
jle
lods
dec
mov
ret
and
pop
xchg
sub
ja
sbb
aas
movsl
mov
in
fcompl
inc
pop
mov
pop
sbb
pop
enter
fisubrl
jmp
sub
xchg
call
fsubrs
adcl
jo
stc
sarl
dec
mov
aas
adc
leave
inc
out
mov
add
sbb
cmp
orl
cmpsb
fiaddl
xchg
mov
icebp
push
in
push
and
lret
insl
xor
push
imul
cmpsb
and
mov
mov
jno
icebp
pop
ja
lret
jg
cmc
enter
jmp
push
pusha
adcb
mov
mov
pop
mov
mov
mov
jecxz
jbe
or
mov
lret
in
push
dec
ficomps
jno
and
cs
not
push
pop
mov
bound
imulb
aad
add
mov
in
add
shll
lds
fsubs
sbb
jbe
fistps
and
xchg
push
xor
mov
push
fisubl
push
jnp
lahf
mov
adc
xor
in
inc
out
adc
and
inc
mov
push
mov
inc
icebp
hlt
mov
mov
sbb
xchg
dec
clc
and
xor
imul
enter
loope
add
and
fstpl
ds
adc
repnz
out
adc
icebp
inc
loop
pushw
pop
out
fstl
mov
add
insb
ret
pop
adc
pop
dec
je
sbbl
mov
dec
sarb
stc
push
ds
js
popa
xorl
cmp
fistpl
das
fnsave
lcall
repz
and
cld
in
sub
pop
test
cmc
xchg
and
inc
inc
sub
push
repnz
movsb
gs
push
xor
push
ret
cmp
mov
test
test
cmc
pop
lcall
sbb
lds
jp
adc
fsubs
test
pop
cli
shlw
repz
cs
mov
push
push
cmp
and
mov
inc
loope
push
and
sub
je
sub
aad
cmpsl
je
daa
and
faddl
pop
mul
imul
mov
push
mov
push
xchg
mov
mov
mov
mov
add
push
adc
outsb
inc
add
divl
jnp
mov
dec
insb
icebp
or
or
jnp
push
leave
or
fbstp
mov
cmpsb
inc
add
mov
xchg
cltd
or
push
and
jb
mov
sub
pop
mov
lcall
inc
add
rorl
or
inc
dec
pop
xchg
push
scas
mov
push
jae
xchg
in
mov
jo
xor
jge
std
inc
mov
insb
aas
jmp
mov
jns
fildll
sub
mov
nop
xor
and
pop
sub
xchg
dec
mov
repnz
jle
sarl
adc
xor
inc
pop
dec
inc
jmp
sbb
aaa
mov
jmp
outsl
aas
pop
mov
ss
fidivrs
push
in
dec
pushf
in
scas
and
cwtl
push
enter
lods
ja
popa
and
mov
push
mov
jmp
cltd
cmp
push
pop
fisttpll
enter
mov
fwait
push
testl
sbb
cmp
mov
fiaddl
arpl
jne
xor
push
fwait
sub
push
jecxz
lods
data16
outsl
dec
icebp
pop
dec
pop
nop
xor
jl
pop
sbb
in
fsubs
cmp
mov
stc
popf
pop
test
mov
outsl
sub
aaa
mov
and
push
push
jb
xor
popf
out
lea
sbb
enter
mov
and
les
mov
dec
bound
push
bound
sbb
test
lock
pop
mov
and
movsb
mov
mov
push
in
jecxz
inc
das
pop
dec
sahf
pusha
loopne
push
ficompl
and
push
jg
push
or
mov
jge
adc
jbe
and
add
lds
pushf
inc
in
jns
inc
push
jns
pop
ficompl
cmp
adcb
and
jno
fidivrl
int
jl
push
in
andb
xorb
push
xchg
repz
lret
inc
and
rcrb
stos
adc
imull
dec
cmc
xchg
js
movsb
adc
xchg
lcall
das
or
es
test
int3
nop
mov
sbb
xchg
pop
fsubrl
mov
cmp
mov
add
lret
sbb
out
or
jnp
shrl
cmp
int
lahf
pusha
mov
aad
movntq
outsb
orb
rorb
add
insl
ret
fistps
ret
add
adc
rep
hlt
cmp
or
insb
adc
cli
inc
inc
lock
insl
xor
cwtl
outsl
ret
cmp
aad
jbe
clc
jp
cmp
mov
fisubrs
cwtl
jl
aam
test
sti
pop
cmp
jns
sub
xchg
or
cmpsl
iret
lret
mov
mov
push
push
cmpsl
in
pop
dec
lods
pop
iret
bound
inc
aad
mov
jnp
cmp
lcall
fadds
sbb
jl
cltd
jl
adc
test
loopne
xchg
icebp
push
push
dec
es
out
enter
mov
shl
fdivr
push
ss
push
cmp
adcl
imul
pop
and
jb
push
push
jle
sti
loopne
mov
add
mov
lret
jl
in
sbb
mov
fwait
movsl
mov
adc
mov
test
nop
adc
imul
xchg
aam
push
les
cmpl
dec
pop
outsb
or
pop
sbb
out
mov
add
in
or
sbb
std
xor
fs
add
bound
stos
fnstsw
into
aas
push
adc
adc
or
adc
testl
fdivrs
or
push
push
rcrl
iret
loope
xlat
inc
mov
xchg
lret
jmp
into
je
stc
mov
mov
out
movsl
cwtl
fcoml
rolb
pop
xchg
xor
mov
xor
shr
scas
mov
sbb
jns
push
and
dec
fs
shl
lcall
insl
ss
mov
addl
inc
mov
inc
add
lods
pop
iret
icebp
jae
adc
push
pushf
and
out
and
notb
cmp
fimull
das
fadds
mov
out
inc
dec
hlt
data16
add
test
loopne
in
shl
cli
sbb
cmp
jge
nop
imul
outsb
mov
arpl
mov
sbb
ret
sahf
popf
pop
jb
inc
rcr
mov
dec
or
pop
sub
push
or
std
cmp
inc
data16
pop
mov
lods
jge
outsl
jmp
ror
sub
scas
popa
push
jle
mov
mov
cmp
mov
dec
mov
jg
xor
rcrl
add
int
xor
add
sbb
faddl
mov
jecxz
mov
fwait
and
adc
mov
fsubrs
push
mov
cli
shll
inc
jae
jle
in
lods
sub
and
aam
jne
xchg
xor
iret
xor
inc
xlat
fsubr
push
add
sbb
repz
xor
jb
xor
pop
outsb
cmp
or
sbb
outsl
outsb
int3
out
jno
jnp
mov
xchg
loopne
xchg
repz
les
pop
gs
lahf
out
adc
leave
xchg
aam
sbb
fwait
repnz
add
dec
pop
lods
lea
scas
int3
mov
notl
pop
vminps
lock
xchg
xchg
inc
repnz
pop
xor
add
and
and
adc
mov
stos
inc
sahf
dec
dec
mov
pop
repz
mull
xor
fdivl
out
mov
mov
or
fdivr
gs
mov
stos
mov
js
add
mov
mov
sub
xor
loopne
xchg
fbld
cmp
hlt
mov
ret
movsl
inc
inc
insb
add
lods
or
in
cld
sar
mov
xchg
mov
dec
xor
daa
pop
les
jnp
bound
leave
pusha
filds
insb
xor
dec
lcall
jmp
mov
sub
aas
incb
cmp
add
mov
out
and
sahf
rol
sbb
into
rcrb
imul
insl
fs
or
insb
dec
je
jns
xor
lods
adc
out
pop
xchg
ljmp
sbb
daa
inc
pop
jmp
cmp
or
cltd
arpl
jno
mov
popf
sbb
or
push
adc
cmp
ljmp
lock
sub
ret
sub
enter
in
dec
sub
cmp
mov
lods
in
ret
scas
lret
sbb
mov
jecxz
pop
faddl
jge
fnstsw
pop
and
int
xor
nop
xor
ss
mov
adc
sbb
shlb
lea
mov
cmp
or
lods
mov
add
dec
xor
ljmp
mov
daa
or
mov
nop
outsb
aas
lods
xor
lahf
fcoml
sti
dec
adc
jo
and
test
fwait
push
mov
popf
repnz
clc
fs
fstps
adc
dec
ret
xlat
push
aam
loop
out
and
push
push
movsl
cmp
test
call
jg,pt
cmp
jmp
cs
int3
mov
daa
xor
mov
dec
nop
xchg
loop
dec
mov
pop
inc
xlat
aam
mov
or
pop
iret
mov
inc
loope
sbb
outsl
add
jns
inc
sub
int3
out
in
fists
mov
jno
aaa
jmp
push
xchg
cmc
pusha
mov
dec
sbbl
push
mov
xlat
into
or
fstpt
add
aas
sahf
cmp
imul
xchg
in
cmp
pop
into
inc
popa
test
add
mov
mov
add
or
adc
pop
and
mov
mov
mov
fisubrs
das
fiadds
cmpsb
xchg
pop
jno
push
fldl
xchg
into
mov
leave
pop
jno
dec
lahf
cmp
stos
aas
pop
mov
mov
arpl
and
aad
push
leave
xchg
xchg
sub
inc
xor
add
push
and
adc
or
std
jg
sub
and
push
mov
or
add
scas
cmp
sbb
xor
or
loop,pn
adc
out
add
mov
pop
fs
rorb
add
stos
pop
outsl
nop
inc
cli
pop
fsub
adc
cli
and
xchg
add
inc
sbb
or
out
dec
rcl
cmpb
mov
cmp
popf
add
pop
fucomp
lods
ret
sar
xchg
std
mov
mov
jo
popf
in
sub
mov
mov
dec
inc
jg
inc
ljmp
fdivs
addr16
inc
dec
mov
lock
mov
mov
sahf
mov
or
or
jnp
int3
std
in
pusha
xchg
daa
pop
mov
faddl
ljmp
mov
jle
add
mov
inc
popa
out
test
jmp
hlt
xorb
mov
inc
loope
lock
sbb
inc
out
mov
jmp
jns
jg
mov
mov
sub
sub
ret
mov
mov
add
outsb
xor
sti
idivb
in
test
cmpsl
mov
xchg
fcoml
mov
rcrb
addr16
jno
mov
aas
shll
push
popf
outsb
mov
scas
jnp
inc
inc
ds
push
lret
ret
mov
push
adc
pop
pop
out
xchg
stc
insl
cmp
scas
mov
jl
ret
data16
test
adc
cmp
out
test
imul
fists
dec
rcll
dec
dec
sub
and
dec
ljmp
mov
decl
or
lea
adc
inc
mov
cmp
mov
fisttpl
enter
ret
stos
add
and
mov
aas
js
in
loop
inc
inc
sar
sub
cmpsl
push
je
stos
mov
mov
pop
enter
cmc
fisubrs
fcompl
and
jmp
xchg
cmpsb
aad
shrl
in
xchg
sub
pop
pop
jae
sbb
dec
lock
xor
dec
sbbb
lret
repz
enter
aad
sahf
xchg
xor
out
add
ret
inc
push
push
lock
xchg
mov
pop
xchg
ss
dec
inc
jbe
out
push
test
shll
fwait
lods
jns
push
fisubs
js
inc
or
inc
dec
mov
dec
mov
hlt
add
std
aam
mov
push
in
int
in
mov
leave
in
ja
cs
mov
lods
sbb
stos
sbb
push
mov
push
sub
fcmove
push
cmpsb
in
or
pushf
int3
fildl
and
rolb
xor
push
sub
ror
cwtl
ja
push
mov
outsb
mov
mov
jge
push
insl
inc
jns
add
ljmp
xchg
std
lds
xchg
adc
out
aad
push
mov
jno
push
and
jae
xchg
sbb
xchg
das
jp
xor
cmp
push
inc
mov
fisubs
movsl
add
lds
cmc
or
push
ds
and
push
adc
aaa
pop
mov
jb
pop
cs
sub
add
adc
or
in
mov
jg
push
mov
mov
mov
jb
dec
das
mov
sti
inc
out
ja
jle
jl
pushf
or
push
xchg
test
mov
in
out
movsl
xchg
in
ljmp
or
mov
mov
adc
and
sbb
or
mov
stc
imul
add
inc
adc
subb
jg
add
pop
and
rcrl
les
pop
pop
mov
fbld
dec
movsl
loope
sub
xchg
les
mov
add
and
xchg
ds
hlt
into
andps
xchg
fdivs
sti
dec
out
or
push
pop
ret
cmp
sub
out
and
ss
lret
outsl
ror
jnp
adcb
out
movl
cmp
mov
cmpl
jl
mov
push
dec
pop
into
test
mov
out
inc
cmpsl
mov
jge
push
testb
mov
mov
push
orb
dec
or
stc
mov
icebp
or
lret
fcomi
fsubp
fcoml
cs
or
cmp
sub
push
add
inc
stos
sahf
xchg
shlb
test
xchg
test
cli
xor
push
and
xchg
sub
pop
aad
fmuls
adc
daa
dec
xchg
repz
sub
dec
dec
call
stos
add
push
dec
jae
fimull
xchg
addr16
lock
sbb
ret
sahf
mov
faddp
mov
or
fldenv
dec
or
es
and
and
cmp
pop
pop
aad
cltd
loope
int3
xor
das
jb
jmp
mov
popa
nop
outsl
mov
ljmp
sub
call
xor
or
enter
lret
into
push
xchg
inc
inc
rorb
cli
scas
jnp
dec
push
inc
cmp
sbb
out
pop
cli
and
push
test
jae
push
cld
ljmp
out
fsubl
pop
xchg
repz
adc
cs
or
cld
mov
mov
cmpsl
daa
dec
xchg
cs
jno
insb
outsl
fistpl
ud2
jne
or
addb
pop
dec
cmp
js
loop
arpl
add
sbb
and
or
sub
cmpl
filds
cwtl
push
bound
mov
cltd
add
imul
ss
add
rorl
outsl
repnz
mov
aaa
stos
jl
mov
push
sbb
sbb
mov
addr16
pusha
mov
int3
fsubrl
mov
jbe
and
sarb
test
or
movsl
xchg
sub
loop
xchg
and
dec
es
sub
sarb
adc
or
mov
mov
ja
inc
add
pop
add
clc
jle
arpl
mov
cmpsl
cmc
and
jle
lea
jl
dec
mov
pop
push
mov
jp
pop
fimull
add
xor
and
mov
shll
adc
imul
sub
pop
imul
push
sub
or
push
lds
scas
sbb
rolb
bound
adc
cmp
push
jle
cltd
jne
rorb
mov
push
aam
shr
mov
aam
cmc
movsb
cld
lahf
or
repnz
mull
cwtl
fdiv
lcall
xor
movsb
rorb
sub
push
and
mov
fs
jns
ss
popf
popf
icebp
mov
inc
sub
add
xchg
push
icebp
adc
imul
inc
icebp
add
hlt
adc
sbbb
mov
mov
inc
je
fmull
and
mov
test
cmp
cmp
or
mov
mov
ret
sbb
xlat
or
sar
ja
stos
ss
jmp
mov
pop
aas
fstpt
or
xchg
test
mov
lahf
fmuls
stos
jecxz
or
inc
jecxz
add
adc
bound
rcrb
jmp
ja
jnp
fsubrs
int
adc
jge
mov
mov
ja
cmc
mov
std
sahf
dec
mov
shl
mov
xchg
cld
xchg
mov
test
iret
sub
mov
stc
inc
add
xchg
xchg
test
mov
in
xchg
jo
call
or
jo
in
xor
ror
xchg
aas
xchg
and
mov
test
ds
pushf
mov
lods
fstl
dec
in
sub
inc
push
inc
or
sahf
jns
icebp
clc
mov
repnz
aaa
in
rdmsr
dec
mov
jl
inc
pushf
mov
sub
out
mov
in
xlat
addr16
fmull
push
es
add
jbe,pt
clc
inc
popa
into
ret
sarb
mov
mov
ljmp
cwtl
fisubrs
fs
pop
adcl
leave
add
or
mov
jbe
int
inc
mov
mov
dec
fiadds
popf
jp
daa
inc
mov
or
or
xchg
es
sbb
sub
cmpsb
testl
loopne
repnz
pop
dec
hlt
lret
scas
mov
mov
cs
or
dec
iret
inc
dec
hlt
mov
sbb
scas
repnz
std
mov
adc
and
loopne
mov
pop
movsb
in
mov
cmpsb
fimull
xor
mov
adc
movsl
lcall
add
mov
jbe
push
pop
push
iret
loope
and
cmp
repnz
mov
jno
aam
sub
cmp
enter
mov
movsl
repz
dec
movl
jns
jno
mov
inc
mov
lcall
jle
push
inc
or
mov
inc
add
movsl
push
fsubrl
add
movl
jecxz
lods
and
sbb
icebp
dec
lret
mov
popf
imul
arpl
lret
dec
jge
xchg
mov
rcrb
inc
lret
out
mov
dec
sbb
fcmovnu
rcll
jecxz
inc
xor
or
insl
mov
sbb
or
and
clc
mov
mov
and
cmpsb
pop
outsb
xor
push
pop
outsb
mov
fsubrs
repnz
pop
sub
dec
and
jmp
stos
cmp
cmp
loopne
imul
es
sbb
jnp
inc
xor
orb
call
aas
loop
mov
dec
addr16
dec
test
std
mov
mov
pop
pop
or
sbb
je
xor
mov
push
popf
shrl
int3
push
mov
repz
pop
lret
cmp
into
les
xchg
fnstenv
cmp
out
adc
es
enter
lea
xchg
jnp
jg
fcompl
mov
and
popf
orl
or
mov
aam
into
sbb
adc
inc
xchg
xor
push
jae
fdivrs
ja
data16
pop
lret
and
or
loop
movsl
js
xchg
cli
and
in
dec
in
pop
jnp
hlt
and
mov
add
lods
xchg
cmc
xchg
add
leave
fdivr
xchg
add
adc
xchg
mov
or
push
jle
jge
push
dec
out
add
pop
sbb
cwtl
add
inc
jp
lods
fcomip
nop
or
je
in
xor
xchg
leave
test
jae
aaa
push
add
mov
adc
or
mov
test
dec
loop
cwtl
jecxz
out
mov
out
or
xchg
push
pop
cli
insl
pop
or
mov
xor
ret
in
pop
mov
xchg
scas
push
mov
add
cltd
jns
pushf
xor
test
adc
pop
push
sahf
inc
js
xchg
bndldx
sti
je
push
movsl
rcrl
testl
or
stos
xchg
fdivl
orps
js
outsl
aam
push
dec
loopne
mov
pop
inc
sub
cmpb
lods
dec
stos
subb
push
dec
adc
sbb
xor
mov
mov
mov
icebp
xor
pop
xor
mov
mov
loope
fcmovnb
cmpsl
stos
rol
pop
notb
mov
inc
jp
sbb
in
inc
lods
ljmp
in
daa
adc
adc
cmp
fiaddl
out
or
ds
pushf
cmp
cmpsl
adc
fidivrl
leave
movsb
sbb
add
push
movsl
mov
xorb
and
mov
mov
add
in
fistpll
lods
fbld
cmc
or
sbb
jbe
rorl
and
mov
lea
loope
pusha
mov
sub
outsb
jle
test
repz
dec
adc
test
sbbl
mov
rcl
out
pop
jns
xlat
push
in
and
inc
mov
push
xor
sbb
push
push
notl
jbe
mov
inc
shll
cwtl
mov
test
pop
mov
push
iret
xor
out
mov
inc
push
and
mov
popa
lds
hlt
pop
dec
imul
jnp
jns
xor
das
pop
addr16
mov
dec
mov
shlb
jnp
pop
je
sarl
add
test
lods
cmp
idivb
cmp
cmp
jge
cld
adc
xchg
cmp
icebp
sub
push
adc
int3
repnz
fistps
lock
mov
stos
test
mov
lea
repnz
inc
out
loope
xorb
push
xchg
and
pop
xchg
nop
movsb
push
int
and
sbb
push
mov
lods
cmp
jno
js
imul
cltd
rcr
mov
das
xor
jl
dec
cltd
lret
mov
xchg
and
push
popf
jg
aam
shrb
inc
adc
dec
xchg
cltd
xchg
cltd
jg
cs
mov
call
add
adc
cmp
shlb
xchg
push
aaa
pushf
jmp
stos
shl
dec
lds
xchg
nop
xchg
subl
pop
inc
cmp
xlat
mov
or
int3
test
jne
ja
je
mov
imul
mov
pop
mov
push
popa
jecxz
mov
into
mov
inc
push
xor
push
pop
shlb
push
ljmp
out
xor
fabs
movsl
jb
cltd
sar
and
sti
pushf
sbb
popa
fiaddl
inc
or
inc
or
js
xchg
mov
mov
je
sarb
lahf
mov
out
mov
stos
cmpb
ss
push
pop
fs
inc
or
leave
dec
daa
push
idiv
pusha
hlt
aas
sub
hlt
inc
es
popa
xor
cmp
dec
cmp
in
sbb
cmp
dec
pop
fdivrs
test
dec
lret
or
js
cmpsl
cmp
inc
push
inc
pusha
push
inc
mov
jg
inc
out
les
and
ljmp
lods
mov
sub
mov
andb
cmp
jns
icebp
cmp
xor
cld
fwait
mov
das
insl
mov
enter
int
std
pop
ret
mov
jns
repz
mov
or
push
push
lcall
jle
mulb
mov
add
push
pop
cwtl
movsb
repz
mov
out
call
mov
out
ds
je
ret
sub
dec
int
nop
ret
add
and
sti
dec
jmp
mov
cmp
mov
dec
dec
and
stos
arpl
fs
popf
inc
mov
push
add
out
stos
popa
repz
cmp
das
or
dec
push
xor
mov
push
data16
frstor
or
sub
dec
jecxz
mov
adc
test
adc
sub
iret
sub
cmp
out
push
xor
repnz
inc
shll
pop
test
sbb
cs
jae
push
pop
cmpsl
dec
mov
and
jne
mov
arpl
icebp
xor
jo
jb
sub
inc
jecxz
inc
shll
sbb
sbb
push
lock
pop
push
data16
sbb
pop
mov
fcom
std
icebp
pop
mov
test
insl
icebp
scas
test
dec
jne
jl
and
mov
push
mov
std
cmp
cwtl
mov
ret
xchg
mov
leave
jns
push
jle
or
outsb
and
mov
mov
inc
inc
clc
pop
mov
adc
in
jp
subb
mov
sub
mulb
nop
and
inc
fsubrl
lret
dec
dec
fs
jecxz
jb
outsl
daa
outsb
add
stos
out
lahf
punpcklwd
call
lahf
add
mov
mov
sub
lret
and
idivl
cld
sti
addb
es
mov
out
std
add
imul
and
scas
mov
cltd
ret
push
insb
cmpsb
jae
push
scas
mov
pusha
push
push
ljmp
imul
and
inc
mov
outsb
mov
xor
inc
jge
or
xor
js
outsb
dec
add
mov
jg
fdivrs
jmp
xor
push
adc
xor
ret
push
mov
aam
and
inc
test
fisttpll
jmp
sbb
clc
ds
xchg
hlt
xor
scas
repz
cmp
xlat
push
test
dec
or
xchg
xor
mov
cld
or
mov
mov
fidivrl
repnz
popa
pop
mov
dec
cli
mov
dec
inc
adc
add
lret
mov
popa
enter
daa
rcr
icebp
inc
mov
enter
lock
ficoms
and
clc
pop
xor
jbe
jne
mov
std
sub
aaa
sub
int3
mov
sbb
xor
xor
mov
mov
mov
andl
add
mov
xor
jmp
clc
jge
pop
sarl
adc
mov
shll
pop
call
movzbl
pop
xchg
jecxz
pop
or
imul
pop
ret
mov
lahf
pop
jbe
imul
pushf
and
fsubrl
fidivs
add
mov
add
pop
subl
dec
imul
and
stc
mov
mov
mov
push
and
test
inc
rcr
xor
dec
add
ljmp
inc
enter
mov
mov
xchg
fnsave
pushf
lea
imul
pop
or
pop
push
jmp
outsl
rcrb
cmp
cmpsl
sti
mov
inc
lods
shll
loopne
daa
and
xor
cmpsl
jo
insb
or
adc
mov
fimull
out
push
sub
pop
inc
cli
mov
dec
add
xlat
fnsetpm(287
es
add
mov
bound
mov
movsb
mov
pop
mov
cld
inc
cmp
mov
pop
adc
dec
mov
jge
in
into
add
pushf
js
or
in
xchg
ret
orl
push
lock
test
loope
ficoml
and
xorb
jnp
or
movsb
addl
ljmp
add
push
inc
cli
rorb
push
ds
repnz
sub
and
mov
adc
push
dec
xchg
aas
pop
stos
jno
cmp
cmp
pop
nop
xchg
cmp
dec
fs
sub
movsl
pop
mov
mov
lret
and
xchg
lcall
push
jmp
icebp
enter
and
testb
mov
dec
cmp
inc
mov
dec
lock
insb
sti
mov
cmp
addr16
jo
inc
scas
hlt
push
dec
lea
mov
cmp
in
jne
and
pop
sub
std
mov
ret
ror
icebp
xchg
sti
inc
jb
mov
shrl
pop
rdpmc
push
push
and
insb
sub
push
push
push
outsl
push
shl
decl
push
mov
popa
push
xchg
das
aam
mov
xor
cwtl
add
xchg
pop
add
sub
push
pop
xchg
mov
mov
call
cs
add
push
int3
fwait
sbb
insl
inc
inc
repz
enter
out
dec
cmp
lds
sbb
adc
jecxz
mov
dec
xor
jne
enter
leave
sub
push
ficoml
lods
pushf
andb
mov
rcrb
mov
pushf
idivb
push
sub
xchg
sub
mov
sbb
pop
movsb
cmp
ds
mov
mov
dec
inc
cmp
cmpsb
int3
int
notl
or
add
jnp
xchg
pop
sub
add
mov
jecxz
jp
pusha
in
mulb
out
std
into
sbbl
in
mov
xchg
test
or
sbb
dec
andl
into
nop
inc
movsb
adc
cltd
cmc
xchg
pop
push
daa
cmp
mov
mov
iret
pop
or
je
cmp
orl
xor
adc
int
out
push
ja
add
inc
into
mov
jle
mov
out
fistl
lods
pop
scas
fisttps
test
dec
in
mov
pop
das
pop
imul
iret
inc
test
js
pop
xor
outsb
dec
mov
xor
jb
daa
test
repnz
dec
lahf
dec
scas
mov
cmp
andl
jp
adc
push
dec
pop
push
lcall
dec
push
ljmp
ljmp
mov
jns
arpl
mov
loop
xchg
les
outsb
add
sbb
adc
or
fisubrl
mov
xor
lcall
adc
mov
xchg
hlt
popa
push
push
icebp
xchg
cs
in
movsb
cmp
cli
mov
fsubrp
imul
cmp
mov
nop
xchg
ds
pop
test
inc
or
or
add
clc
or
pop
les
or
testl
aas
bound
jnp
push
test
movsb
push
mov
outsb
inc
out
adc
jae
into
xchg
loopne
sub
sub
push
mov
cld
scas
imul
insl
or
inc
pusha
out
push
out
inc
popa
inc
push
lcall
dec
pop
jo
test
xchg
inc
add
or
pop
mov
icebp
iret
stc
fnop
push
jge
out
fimuls
push
adc
mov
lahf
add
popf
test
dec
xor
and
pop
loop
inc
pop
lcall
pop
inc
jp
and
mov
cld
mov
je
stos
or
and
into
in
sub
popa
cmp
xchg
jo
arpl
and
dec
xor
xchg
mov
mov
repz
mov
pop
push
stc
insb
jns
clc
mov
mov
icebp
stc
pop
cmpsl
adc
loopne
cmp
jno
adc
jmp
popa
and
pop
pop
sti
mov
mov
xchg
xor
out
insl
dec
dec
add
jo
pusha
mov
push
adc
loopne
inc
ljmp
bound
push
jg
aaa
loopne
cld
and
fcmovnu
dec
pop
pop
mov
stos
mov
aas
aam
cmpsb
jae
mov
mov
adc
jg
notl
jae
cmp
pop
loopne
mov
cmc
lret
mov
ja
aas
xor
je
xchg
or
xchg
call
gs
xlat
pop
xor
jno
out
push
and
je
xchg
ret
or
push
sarb
outsb
cli
in
outsb
push
fsubs
xchg
lcall
incl
cmp
mov
mov
sub
sbb
adc
jbe
sbb
mov
nopl
outsl
or
stc
dec
or
div
hlt
dec
es
leave
gs
mov
cmp
lcall
and
shlb
mov
xor
testl
lret
jecxz
cmpsb
xlat
test
adc
loope
aad
xchg
and
es
sahf
scas
js
mov
jbe
test
repz
jl
xor
jns
xchg
lods
cld
test
add
repnz
mov
ficomps
lcall
inc
lret
mov
sarb
dec
or
inc
addr16
out
pop
lods
sub
add
outsl
sbb
in
out
sub
ljmp
aas
push
sbb
dec
push
cmp
cmp
push
ficomps
ljmp
sub
mov
mov
or
mov
stos
movsb
mov
pop
jle
test
lods
add
dec
repz
sub
mov
dec
jle
add
jecxz
cmp
subl
or
lods
jp
push
lods
xchg
sbb
arpl
mov
add
push
cmp
div
jp
lcall
mov
jmp
xchg
mov
fidivrl
pop
iret
lahf
clc
dec
add
add
inc
add
inc
push
andb
imull
jno
fcoms
inc
adc
mov
fstps
lods
xor
or
mov
sub
xchg
adc
lcall
arpl
xor
sbb
gs
push
add
xchg
jb
imul
test
je
cmp
call
jno
xorl
imul
push
lcall
cmpsl
clc
sub
ja
ss
adc
cs
pop
jge,pn
cmp
shr
lcall
loop
mov
jge
jmp
scas
stos
inc
mov
xchg
mov
jcxz
pop
addr16
dec
and
mov
mov
incl
ret
scas
mov
push
out
lret
inc
inc
cld
mov
addr16
cmp
jbe
fisubl
jmp
mov
xor
imul
imul
test
pop
lods
cmpl
mov
or
repnz
xchg
sub
pop
pop
dec
inc
fimull
sub
mov
xchg
shlb
mov
movsl
mov
test
scas
sub
pushf
fwait
insl
adcb
mov
outsl
pop
jmp
xchg
outsb
mulb
iret
divb
sbb
push
cs
js
jmp
pop
dec
loop
adc
ret
aas
les
add
in
mov
xchg
sbbl
and
inc
mov
popf
loope
cmp
rcr
pop
rcrl
and
and
cld
mov
xor
cmpsb
mov
pop
jo
sbb
movsb
dec
jnp
iret
mov
jae
and
push
and
rcl
mov
jmp
mov
stos
out
fsubrp
in
sub
andl
into
add
cmc
push
xlat
mov
jne
and
test
push
mov
pop
test
nop
pop
mov
repz
cmp
adc
out
in
into
test
xchg
inc
fstpl
cld
add
sbb
lret
into
mov
aaa
lds
scas
movsb
xchg
leave
hlt
pop
iret
mov
adc
stos
push
subl
js
dec
aad
mov
xchg
js
test
es
mov
add
mov
enter
aam
and
and
addl
in
js
shlb
fbstp
ret
popf
scas
fdivrs
out
pushf
jnp
cli
lcall
clc
fisubl
scas
or
pusha
pop
and
inc
xchg
cli
add
jge
sarl
repz
aaa
in
mov
pop
dec
fnstcw
leave
cmpsb
insl
out
ljmp
ret
ljmp
rorl
lods
mov
mov
ror
mov
dec
push
lret
inc
out
in
xchg
mov
mov
xchg
sub
shlb
out
mov
and
shrl
outsl
mov
xchg
mov
xchg
jecxz
jnp
cld
push
add
jne
or
mov
mov
sub
int3
lods
sub
into
ret
hlt
mov
imul
add
ret
sbb
clc
xchg
fwait
sub
rorl
in
in
addr16
jp
add
mov
push
cmp
push
add
or
daa
mov
cld
fdivrs
aad
xor
pop
movsl
jne
popf
or
xor
pop
addr16
lcall
push
cmc
push
movsl
xor
push
add
icebp
es
sub
inc
ljmp
enter
mov
das
icebp
daa
insb
std
out
add
cmp
push
shll
sbb
push
mov
mul
cli
insb
jns
cmp
push
iret
mov
mov
jmp
outsl
in
jae
cwtl
cli
or
sbb
add
dec
outsb
mov
cmp
cli
push
dec
jge
pop
mull
jle
int3
fcomps
xchg
subb
pusha
shlb
mov
and
push
adc
xlat
or
push
mov
stos
jg
push
pop
out
loope
xor
test
lds
rclb
cmpsb
lcall
cmp
adc
mov
mov
push
push
out
cltd
push
push
jns
adc
fnop
jae
xor
lahf
lea
js
in
out
cmp
jecxz
repnz
mov
mov
rcll
cmp
arpl
xor
sbbl
add
push
imul
scas
and
push
xchg
repz
mov
mov
xlat
shrl
cmpsb
dec
jmp
lock
adc
hlt
shrl
emms
pop
push
popf
out
push
push
data16
cmpsl
and
push
ret
idivl
enter
xchg
into
dec
jo
cmpsb
ret
mov
testb
fdiv
cltd
aad
push
lahf
sti
int
jmp
ret
dec
js
call
dec
stc
mov
mov
cli
shl
outsl
mov
lahf
xchg
jno
mov
jnp
ret
add
xorb
push
lret
out
pop
inc
add
push
test
mov
and
push
adc
sub
push
int3
test
sti
ret
test
push
push
mov
sub
shl
fxch
es
inc
les
shl
pusha
popl
icebp
in
test
xchg
cli
lock
iret
das
js
aas
dec
xchg
inc
pop
aad
mov
aas
ret
sub
outsl
xchg
rdtsc
cmp
dec
mov
in
stos
push
sete
jno
mov
sbb
lods
insb
jne
fs
xchg
jne
inc
adc
push
or
pusha
inc
sbb
push
fbstp
push
lahf
cmp
dec
inc
and
or
sarb
jp
inc
insb
add
cwtl
aad
mov
pusha
xchg
inc
cmp
add
lret
ffree
jae
imul
push
scas
pop
pop
stc
ficompl
dec
xor
cli
adc
out
adc
xchg
insb
mov
mov
add
push
bswap
or
lock
rcr
repnz
shrl
imull
jae
or
jbe
clc
cmc
mov
jge
insl
popa
and
fisttpl
add
insl
cmp
clc
repnz
push
xchg
and
sahf
lcall
sbb
test
out
jl
mov
gs
lret
inc
fdiv
popa
imul
mov
and
mov
inc
rcrb
push
cmp
stos
sub
lock
out
hlt
shll
pop
sub
mov
dec
mov
nop
xor
arpl
sub
fs
sub
pop
sub
xorb
stc
sub
imul
push
or
mov
xchg
or
xchg
jne
insb
bound
sbb
popf
clc
pusha
jb
in
push
ss
rclb
push
jecxz
rorb
jp
rcrl
test
xor
shll
xchg
dec
aaa
sbbb
in
mov
movq
adc
dec
stos
inc
push
mov
mov
mov
mov
das
fnstenv
addb
cmp
aam
scas
adcb
fnstsw
icebp
cld
adc
and
xor
in
out
pop
cmp
xor
dec
xor
dec
clc
xchg
xor
cwtl
pop
in
stc
lret
inc
xor
mov
mov
cmpsb
imul
test
icebp
lock
xchg
stos
lods
fmull
movb
popa
and
loopne
dec
jne
jle
fbld
lock
repz
and
std
sahf
sbb
les
xchg
dec
dec
dec
mov
lods
inc
push
xor
dec
mov
pop
lcall
stos
cltd
dec
jg
rorb
ret
rcrb
fldcw
out
insb
sbb
or
sbb
push
inc
cmp
pushf
lret
xchg
fcmovbe
mov
mov
aad
mov
jge
fsubl
pop
mov
loope
test
int3
das
ss
mov
test
sub
and
aam
lods
outsl
and
sbb
scas
push
add
pop
xchg
pop
data16
daa
jnp
sub
mov
int3
fs
outsb
mov
xchg
stc
sub
bound
dec
lock
popa
in
ret
add
mov
loop
loopne
and
jae
push
cmp
popa
gs
mov
adc
enter
movsl
jns
ljmp
adc
lods
pop
arpl
cmp
out
xchg
xchg
jo
ja
popa
mov
aad
mov
adc
scas
mov
sub
addb
insl
sbb
jb
mov
jl
popf
adc
jl
inc
cwtl
int3
push
inc
cmpsl
rorb
imul
data16
enter
and
inc
xor
es
mov
adc
and
xchg
decb
dec
nop
nop
sub
sahf
add
pop
inc
add
adc
xchg
pop
push
lahf
dec
and
dec
ret
das
fcmovnu
push
mov
xchg
dec
roll
mov
ret
sbb
mov
mov
ret
sbb
repnz
shll
insb
popa
push
jg
sbb
pop
int3
es
push
xor
pusha
enter
rorb
mov
rcll
in
hlt
inc
dec
adc
pop
lcall
jbe
inc
mov
cmp
lcall
mov
clc
dec
mov
imul
xor
ret
pop
sti
cmp
cmpsb
cmp
pop
leave
shr
jb
dec
inc
xlat
mov
jecxz
jg
pop
pushf
std
inc
mov
addr16
popa
sub
fwait
jl
adc
sar
mov
loop
pusha
pop
mov
pushf
sti
mov
sub
jbe
rorl
adc
es
sbb
sub
sub
les
aam
loop
pop
icebp
pop
jg
adc
xor
jmp
jge
push
jo
xor
scas
fbstp
pop
mov
ficomps
mov
sar
lret
es
rclb
adc
aam
inc
mov
adc
sbb
mov
fisubl
jge
fcoml
xor
repz
lds
push
pushf
daa
leave
aam
push
and
jl
sub
aad
call
aaa
mov
cld
cmp
test
jmp
xchg
xor
mov
jo
push
data16
push
push
into
out
jnp
jbe
fldenv
xchg
rorl
mull
xorb
sbb
mov
arpl
lcall
or
add
mov
adc
call
mov
test
ljmp
sbb
les
lcall
xchg
or
imulb
push
dec
or
mov
push
ret
pop
cltd
sbbb
aad
inc
lahf
enter
cmpsl
mov
ret
enter
inc
mov
inc
push
push
fidivrl
pop
pop
push
out
mov
inc
cwtl
loope
mov
cltd
and
test
es
stc
push
jl
xorl
jmp
outsb
inc
or
cli
jo
sub
jge
mov
push
cmovl
pushf
or
shlb
fldcw
cmp
in
xchg
gs
jmp
lds
aam
push
dec
imul
adc
pop
xchg
js
outsb
pop
loop
sti
inc
pop
clc
jne
push
mov
mov
pop
jg
mov
xchg
aam
adc
sub
cmp
pusha
xor
es
out
mov
loope
scas
pusha
into
push
scas
push
testb
pop
into
icebp
sbb
jge
jb
popa
int3
push
mov
adc
mov
adc
roll
mov
addb
lds
push
enter
enter
or
ja
push
fistps
inc
xor
mov
mov
mov
shl
push
xor
enter
cmpsl
movsl
iret
mov
mov
cmp
dec
iret
sub
je
or
in
push
mov
lahf
dec
cmpsb
cmpsb
lcall
xchg
and
pop
jo
inc
jae
sub
jae
mov
aas
das
mov
pop
push
jmp
jno
icebp
cli
jg
inc
cmp
sub
sbb
mov
cmp
scas
add
xchg
jg
jnp
in
push
adc
sub
enter
enter
xchg
mov
out
sar
jmp
inc
mov
sarl
cmpsl
adc
mov
push
dec
test
xchg
mov
xor
fsubl
xor
dec
fcom
fdivs
pop
sti
push
dec
push
jae
loop
int
leave
lock
in
sbb
push
mov
dec
jl
add
push
cmp
jb
dec
insl
adc
lds
psrad
adc
fs
pushf
inc
setns
mov
lret
cmp
jno
ffreep
mov
mov
adc
clc
pop
out
call
stos
or
or
cmpxchg8b
out
sbb
idivl
xchg
inc
rcrl
mov
dec
js
or
loope
dec
ret
jne
pusha
mov
ja
lcall
shlb
icebp
mov
fwait
iret
xchg
int
cli
pop
adc
inc
testb
xchg
inc
sbb
and
adc
fsubs
ljmp
xor
insb
loopne
leave
mov
iret
popf
movsb
dec
mov
mov
or
and
add
xor
ds
cmp
mov
testl
pop
inc
inc
nop
fimull
testb
pop
cmp
sbb
xor
mov
pusha
jecxz
jg
mov
rcll
repnz
int
cmp
movsb
incw
jbe
jo
push
pop
adc
dec
mov
fdiv
jg
mov
dec
in
pop
in
push
rol
push
fst
fbstp
data16
and
push
cmp
adc
popa
repz
mov
pop
fwait
mov
jb
fmull
add
out
imul
mov
and
outsl
mov
pusha
movsb
jecxz
mov
stc
movsb
or
fidivl
push
das
shrl
push
ficomps
sub
xchg
xchg
inc
outsb
sbb
inc
shl
push
subb
sbb
add
outsl
cmp
ja
popf
cwtl
jo
rcrb
adc
pop
sbb
xchg
ret
jns
mov
sub
cmpsl
lods
aas
mov
jp
das
dec
xor
adc
or
int
xchg
push
iret
mov
sbb
std
push
xor
int3
mov
or
pop
out
and
xchg
lods
mov
in
jo
mov
frstor
fdiv
jne
mov
mov
mov
and
pusha
and
hlt
xor
filds
ja
decb
cli
jl
ljmp
inc
scas
sbb
mov
hlt
call
jnp
shll
fildl
mov
xor
jnp
out
outsb
mull
or
sti
daa
xchg
pop
push
push
repnz
clc
or
imul
inc
lret
xchg
sbb
int3
cmpsl
cltd
jg
jbe
push
insb
clc
bound
sbb
punpcklbw
in
jns
insb
adc
cmp
loop
divb
dec
dec
push
and
fcoms
xor
rclb
xchg
ds
or
push
push
xor
hlt
ds
dec
cltd
cmp
jp
jg
mov
mov
stos
mov
das
cmp
out
rcll
jne
mov
arpl
or
push
notl
lret
xor
test
jb
leave
lock
lcall
and
cmp
out
jne
xchg
sbb
ja
hlt
xor
inc
test
push
loope
lret
loopne
sti
addr16
or
and
mov
rcll
daa
leave
adc
adc
or
dec
pusha
pop
bound
leave
push
jp
dec
push
add
clc
test
ret
inc
and
inc
push
xor
stc
xor
lds
mov
aaa
mov
mov
rcrl
popf
or
test
sub
flds
sub
cld
and
mov
das
pop
ja
cmp
fadd
or
loop
sbb
es
xchg
hlt
ret
jecxz
and
or
jl
xchg
or
xor
sti
inc
jge
mov
pushf
insl
das
in
leave
mov
jbe
int3
insb
mov
sub
insb
repnz
mov
mov
mov
inc
cli
push
cld
adc
rclb
aaa
test
jge
push
lahf
or
call
mov
cmpsl
add
mov
xchg
fidivl
pop
mov
test
ja
lods
jb
mov
mov
test
movsb
dec
jl
xchg
mov
cmpsl
cmp
outsb
pop
rol
sbb
inc
les
pop
std
mov
jmp
ret
push
cmc
fsubs
mov
pop
pop
cmpsl
cld
mov
js
or
loope,pn
pop
stos
or
inc
push
adc
sbb
or
ret
jmp
repnz
push
add
push
aaa
mov
pop
push
bnd
dec
or
jl
out
xor
das
jmp
rorl
std
adc
stos
pop
mov
insl
loopne
sub
ds
lods
mov
je
lahf
dec
mov
scas
test
mov
scas
mov
outsl
aas
in
rclb
aad
dec
adc
jne
sub
lahf
aaa
mov
mov
and
pop
pop
xlat
cwtl
mov
jbe
lcall
push
sahf
xchg
movd
loop
mov
pop
aad
dec
or
rorb
xor
inc
out
mov
das
jl
call
jp
mov
adc
dec
data16
ljmp
lods
jge
das
xchg
mov
mov
mov
aas
adc
jmp
push
mov
jge
xchg
stos
movsb
jnp
sub
mov
add
shrl
adc
jg
mov
ja
jno
push
xchg
leave
arpl
cmp
and
ret
mov
lret
dec
aas
jg
sbb
cwtl
daa
push
jb
push
mov
mov
jae
push
jge
mov
jle,pt
subl
sub
imulb
nop
sarl
adc
pop
repz
movsb
xchg
jbe
aaa
adc
jle
mov
clc
jmp
js
push
sub
popa
les
sbb
add
mov
and
push
inc
inc
sbb
jno
add
mov
rclb
mov
imul
cmpsb
adc
or
popa
and
cltd
aad
cmpsl
mov
and
fs
testl
aad
insb
mov
jge
mov
pop
dec
sub
test
sub
leave
adc
mov
sbb
rorb
daa
aaa
push
cmp
jl
imul
dec
push
xchg
or
pushf
pop
push
gs
cmc
fildl
int
das
popa
stos
fnstcw
or
pop
sub
fs
xchg
sti
inc
imul
fisubrs
adc
pop
and
pop
int3
fistps
sbb
testl
mov
inc
shlb
adc
lods
insb
loopne
sub
jecxz
or
pushf
mov
mov
mov
sahf
jns
loope
cmp
mov
mov
inc
mov
push
mov
inc
adc
and
cli
jnp
pop
mov
push
xor
lret
stc
jge
xchg
xchg
sarl
out
pop
mov
xor
pop
scas
xchg
nop
xchg
gs
es
pop
rcrl
sbb
inc
pop
pop
mov
test
adc
cmp
insl
jb
outsb
mov
std
lea
push
jns
fistpl
xchg
cmp
cmp
inc
iret
and
lahf
lods
scas
sub
xor
mov
jb
adc
pop
cld
fcmovnu
add
bound
mov
addb
push
or
mov
insl
push
cli
pushf
fsubrs
lock
sarl
mov
ss
les
mov
mov
movsl
das
xchg
cmp
mov
push
outsb
jbe
cmc
test
mov
mov
mov
inc
mov
inc
imul
sbb
mov
test
aaa
insb
cmp
add
xlat
dec
and
xchg
cmp
imul
cmpsb
out
fs
pop
xchg
pop
pop
inc
scas
pop
cmc
xchg
add
push
push
test
adc
pop
or
loop
dec
push
push
out
inc
jae
movsl
std
mov
cwtl
scas
and
or
test
ret
adc
add
xchg
xor
icebp
pop
fs
xorb
push
and
lods
add
sub
mov
in
scas
add
ss
adc
scas
jmp
sub
cmpsb
sub
push
je
data16
add
and
and
cmp
lret
jle
and
out
nop
sbb
ljmp
imul
cmpsl
inc
inc
mov
shr
fnstcw
jmp
xchg
jno
pop
cmpb
insb
fsts
popf
xchg
fildl
or
mov
and
fiadds
andl
inc
push
adc
add
je
push
pusha
shlb
fwait
jo
inc
ss
cmp
and
xchg
cmp
lods
mov
pop
movsl
push
bnd
sti
pop
mov
fbstp
xchg
out
loope
mov
mov
xchg
jns
iret
push
je
stos
pop
icebp
sbb
insl
pop
aaa
xor
sbb
sti
rcrb
popa
je
nop
outsb
imul
dec
mov
out
cmc
pop
les
mov
xchg
in
imul
xchg
add
inc
or
and
aas
loop
xor
popa
push
int
leave
cmp
push
xchg
lea
cmp
out
pop
outsl
shll
jbe
push
mov
scas
adc
pop
sbb
or
xchg
dec
inc
push
pop
data16
ja
pop
xchg
lods
mov
push
inc
jbe
push
int3
repz
xor
loop
imul
jbe
dec
sub
scas
dec
add
sahf
cli
enter
pop
ja
enter
aaa
and
dec
mov
out
ljmp
mov
cltd
imul
mov
lods
lret
mov
push
jmp
stc
fcoml
inc
les
and
and
push
idivb
insl
cmp
idivb
fcomps
mov
sub
xchg
enter
pop
jl
shl
std
lods
cmc
in
sub
lret
and
loopne
imul
jne
pop
in
sbbb
pushf
push
dec
and
fwait
add
cmpsl
inc
sub
into
pop
sub
add
fnsave
aaa
push
enter
mov
cmc
sbb
int3
cmp
jmp
aad
pop
filds
push
jmp
sub
sahf
popf
or
rcl
xchg
or
mov
sub
adc
push
gs
adc
cltd
addr16
clc
mov
mov
cmp
jmp
mov
adc
dec
nop
adc
push
icebp
xor
in
jl
push
cmpsb
js
cmpsl
sahf
xchg
mov
dec
es
pop
push
dec
sub
jne
out
fcomi
sub
mov
mov
inc
inc
aas
rorb
mov
push
das
faddp
push
adc
in
pop
cmp
iret
push
je
jecxz
fsubl
pop
sbb
sahf
adc
mov
fcompl
cmpl
mov
loopne
dec
xlat
or
jmp
pop
xchg
or
cltd
or
loopne
sarl
sar
adc
sub
pop
movsl
xchg
repnz
push
inc
dec
cmp
add
enter
xchg
shrl
push
aad
jbe
xorb
testb
gs
xor
sbb
mov
scas
cld
or
popf
aaa
rol
cltd
inc
inc
fwait
cmpsb
popa
cwtl
jo
push
add
push
mov
js
cltd
scas
into
andb
fisubrs
aaa
push
add
and
sarl
mov
addr16
shr
xor
mov
xor
mov
adc
sub
call
testl
push
imul
or
ljmp
add
xchg
mov
flds
sub
adc
outsb
dec
and
mov
lcall
mov
shrb
sub
lock
das
rcrb
or
push
xlat
inc
dec
out
cmp
mov
xor
jns
dec
mov
std
ret
jbe
cwtl
fistpl
mov
mov
xor
jb
inc
mov
fidivrs
aad
xchg
push
pop
inc
and
sbb
movsb
aam
xor
rcrb
add
inc
mov
out
jbe
hlt
push
addr16
movsl
or
jp
and
popa
jae
pop
fwait
cltd
mov
iret
loopne
fcompl
insl
shrl
sub
jecxz
push
mov
jge
std
jp
xchg
mov
xchg
pusha
or
repz
cmp
lret
jno
movsl
fsts
add
cmpsl
and
push
stc
neg
test
mov
or
lcall
and
in
pop
sbb
and
sub
das
cltd
mov
outsb
mov
pop
dec
je
sub
lret
lods
inc
mov
add
or
sarb
cwtl
lret
stos
jbe
pop
mov
lea
xchg
cmp
int
xchg
jns
sahf
xchg
xchg
flds
cmp
cmp
adc
jmp
fidivrs
push
mov
cmpsb
lret
push
mov
jecxz
imul
stos
cmp
or
mov
jno
out
outsl
xor
out
std
sub
in
mov
xchg
cmp
loopne
mov
add
sahf
lock
sbbl
aas
aad
ffree
outsl
mov
adc
pop
repz
rolb
mov
out
aaa
xchg
je
lods
dec
neg
push
xor
mov
xchg
add
jnp
jae
fdivrs
mov
jne
js
xchg
sbb
repz
pop
mov
decb
iret
rorl
rol
mul
jno
out
aam
xchg
jo
fwait
jo
mov
shrb
lods
ds
cs
sbb
push
movsb
mov
sub
mov
lods
in
and
push
dec
movsb
leave
rcl
cwtl
jle
xchg
xor
roll
popf
fmuls
inc
frstor
rorl
arpl
out
hlt
into
movsl
cmpsl
insb
scas
bound
jb
movsb
push
jge
loope
aam
adc
jge
scas
mov
gs
sbb
lahf
pushf
xor
rolb
es
push
adc
test
cmp
ja
mov
mov
sbb
cmp
lret
fwait
mov
hlt
ja
sub
jg
add
jo,pn
push
cmp
ss
and
cmp
in
cltd
mov
pop
and
popf
xchg
dec
adc
out
xchg
sahf
xor
adc
sbb
cmc
cmp
and
mov
filds
xchg
enter
add
dec
and
int
sahf
int3
push
insl
mov
xchg
adc
inc
fadds
subl
xchg
stos
or
xchg
call
repnz
das
enter
push
lcall
testl
mov
push
inc
lods
out
in
das
dec
sbb
xchg
mov
or
ds
jge
hlt
cmp
xlat
inc
cli
pop
enter
pop
and
or
fdivl
cmc
push
xchg
jmp
int
lahf
xchg
gs
pop
mov
fidivrl
jecxz
add
sub
sbb
inc
adc
test
hlt
or
cwtl
jno
pushf
jne
mov
mov
xchg
mov
movsb
aas
inc
jbe
sub
addb
xor
adcl
sti
fsubs
ja
mov
fnstenv
push
lcall
jmp
pop
or
lods
scas
rorl
call
fwait
sarb
adc
sbb
adc
into
push
cmp
cmp
sbb
ss
lret
faddl
aam
pop
push
stos
imul
xlat
in
es
adc
push
mov
mov
addr16
js
xor
cld
cli
movsl
je
mov
push
cmp
sub
pop
dec
sbb
lods
outsb
call
insb
lods
stos
sar
in
lds
aam
and
mov
dec
dec
jl
push
xor
test
enter
stos
cli
adc
mov
sub
rcr
cmp
push
mov
sbb
mov
push
mov
dec
rol
repnz
cmp
pop
mov
jle
cli
mov
into
frstor
out
sti
sahf
xor
hlt
stos
pop
cmp
jp
jl
or
jno
and
repnz
mov
push
push
mov
mov
dec
pusha
push
int3
xchg
pop
add
add
cmp
xchg
insb
mov
lock
inc
push
daa
cmp
in
xor
cmpsb
jmp
mov
enter
enter
shlb
out
pmaddwd
jbe
cld
aas
push
mov
xchg
int3
ja
test
xorl
or
mov
cmc
or
in
ss
or
and
jns
fsubrs
xchg
cmc
adc
and
sbb
mov
pop
iret
cmpsl
rcrl
aad
push
sub
leave
test
les
xlat
sub
imulb
lret
xchg
pop
xchg
movsl
les
jbe
in
lret
outsb
aam
xchg
fs
cmp
rol
data16
fisttpll
mov
pop
mov
xchg
aaa
push
mul
or
insl
jbe
sub
jns
lods
and
and
aam
adc
gs
ret
mov
jge
pusha
xor
xchg
sbb
out
and
xchg
or
sub
scas
cmpsl
and
adc
jle
gs
or
xlat
ja
pop
push
xchg
pop
iret
dec
repz
adcb
mov
mov
outsb
int
pop
xor
stos
cmpsb
repz
jbe
xchg
andl
andb
cmp
popf
pusha
fisttpll
xchg
and
xor
enter
jmp
or
xchg
bound
cmp
mov
add
cmp
inc
mov
cld
push
mov
sub
cltd
les
ret
rcr
cld
jp
and
int
ja
pushl
nop
call
jmp
sti
out
mov
xor
enter
sub
cmpsb
fcmove
cltd
xor
cmp
add
iret
movsl
xor
push
and
push
mov
fistps
fdiv
out
cmp
xchg
jl
daa
sbb
pop
and
insb
leave
add
pop
into
sub
and
dec
dec
adc
icebp
jb
push
ret
and
mov
in
mov
inc
incl
push
inc
icebp
popa
sub
mov
cmp
mov
aad
je
insb
sahf
es
xlat
jecxz
mov
cmpsl
dec
dec
rorl
sbb
xchg
jmp
lahf
clc
or
mov
je
in
or
pop
jecxz
xor
cld
loope
pop
addr16
mov
mov
ret
sbb
das
sti
scas
cmp
pop
or
pop
movsb
xlat
xchg
push
mov
insb
adc
loop
aad
rcrb
stc
xchg
mov
inc
popa
xchg
push
data16
repnz
ljmp
dec
bound
pop
cld
xor
fistpl
out
inc
lret
inc
cmp
adcl
ret
hlt
mov
mov
pop
pop
jle
fimuls
adcb
xchg
je
or
arpl
adc
pop
xor
or
push
mov
gs
lcall
test
pop
out
add
cwtl
dec
std
or
sub
push
int
inc
cmp
cs
xor
outsb
iret
outsb
lea
test
push
and
dec
mov
cltd
xchg
mov
lock
test
xchg
xor
aam
fisubl
xor
ds
pop
iret
pop
rcll
shl
movsb
mov
out
add
ds
xchg
imul
cmp
test
in
xor
mov
scas
add
sbb
xor
add
loopne
lods
pusha
scas
and
pop
mov
or
test
push
in
mov
pusha
or
sbb
mov
jge
or
push
nop
or
in
xchg
dec
popa
stos
sbb
lds
inc
cs
imul
mov
adc
cwtl
scas
jae
cld
jmp
pop
sbb
mov
repz
loopne
add
cmp
fbld
inc
xor
call
dec
xchg
pop
mov
cmp
mov
xchg
and
stos
ss
gs
jg
push
mov
lahf
and
loope
xchg
and
push
arpl
jbe
jns
pusha
out
adc
cmp
pop
into
xorb
out
pop
or
stos
mov
sarl
and
mov
mov
add
test
jmp
inc
sub
sbb
out
push
cmpsb
cmp
sbb
mov
jne
fwait
mov
stos
cltd
xchg
jecxz
hlt
cmp
movsb
out
sbb
cmp
xchg
mov
icebp
hlt
mov
aas
lea
flds
jnp
pusha
cmpsl
sub
hlt
mov
ror
arpl
testb
aam
cmp
push
sub
test
outsl
cmp
rorl
dec
push
loop
ljmp
pop
add
mov
inc
or
cmp
test
dec
out
xor
inc
sbb
das
in
fcmovne
dec
or
popa
jl
popf
jp
mov
jl
cmp
pop
mull
lret
push
test
mov
mov
mov
ljmp
cmp
mov
inc
jbe
mov
sbb
ljmp
loop
shlb
pop
mov
or
push
and
push
scas
jne
sbb
shrl
xchg
aam
cld
or
je
sahf
scas
scas
in
push
inc
mov
xor
mov
pop
or
sub
stos
dec
mov
sahf
je
mov
adc
mov
xchg
inc
repz
insl
add
rclb
hlt
dec
test
xlat
imul
movsl
in
push
test
lock
test
sbbl
insb
xor
xchg
sub
aas
fsqrt
mov
mov
daa
int
rolb
mov
je
aam
repz
jbe
movsb
mov
in
repnz
dec
jns
dec
pop
psllq
popa
stos
leave
mov
ljmp
add
scas
jmp
cs
mov
sub
hlt
outsb
sarl
ficoms
dec
cmp
mov
push
sbb
andl
add
inc
icebp
je
movsb
inc
stos
sub
cmp
mov
sub
in
push
push
cmp
pop
jp
mov
jo
jp
daa
jg
xor
jecxz
es
ret
das
mov
in
jl
ret
in
gs
outsb
add
and
cmp
push
inc
mov
arpl
lea
sahf
leave
sahf
je
push
fistpll
ljmp
push
cmp
xor
shl
sub
push
das
scas
cltd
les
cmp
adc
test
jg
and
ja
inc
jo
xor
sbb
ds
adc
dec
xchg
push
or
inc
xchg
movsb
out
adc
test
ds
push
xchg
mov
jne
cmp
inc
mov
xchg
jnp
imul
pop
icebp
and
js
int
sub
push
jno
sahf
negb
push
cmp
sahf
pop
stos
or
pop
ret
mov
push
out
lret
movsb
mov
out
add
dec
cmp
add
sub
mov
insb
dec
outsl
clc
add
adc
xchg
dec
mov
xchg
popf
pop
stos
cld
and
adc
adc
leave
sbb
sub
add
and
push
push
imul
push
lock
xor
dec
and
in
ds
mov
movsb
mov
xor
fwait
push
fcmovne
pop
mov
in
mov
lret
jecxz
cmp
stc
out
mov
dec
sub
and
cmp
lcall
lcall
int3
mov
sbb
negb
int
add
stos
insl
dec
cmp
inc
xchg
outsb
stc
push
gs
repnz
outsb
cld
cltd
into
rolb
xchg
cmp
cs
je
and
mov
and
in
lods
xor
push
dec
mov
xchg
lret
daa
sub
pop
shrb
bound
lods
add
call
inc
or
and
shl
popa
pop
pop
ja
adc
stos
jge
mov
jp
fidivrl
aaa
cltd
lods
repz
jb
adc
js
shr
cli
cwtl
pop
int
outsb
push
jl
sbb
push
mov
ja
dec
loop
cmp
dec
shlb
cmp
ror
adc
dec
outsl
xlat
jns
adc
std
daa
pusha
push
ffree
xchg
dec
dec
push
pop
dec
dec
arpl
mov
push
fists
lea
pushl
jo
sub
push
or
std
lahf
mov
inc
add
mov
test
push
mov
out
out
xchg
es
shll
xor
popa
mov
sub
push
loopne
or
out
ja
push
in
fsubl
mov
mov
mov
mov
ja
repz
test
leave
mov
dec
xor
sbb
inc
jg
lock
xor
roll
or
insl
lods
and
stc
mov
aas
cmp
fwait
rcrb
ljmp
sbb
sbb
sbb
inc
push
btr
lds
jg
ljmp
out
mov
cmovne
mov
sbb
loop
jne
add
mov
mov
mov
adc
inc
scas
cmc
test
and
nop
ss
sahf
dec
lret
aas
mov
aaa
cmp
lock
es
xadd
jge
shl
ret
ret
and
and
xor
and
cmc
cmp
insb
lods
ficoml
pop
sub
pop
dec
cmpsb
or
js
mov
pop
adc
icebp
and
push
lods
xor
xchg
fildll
mov
mov
dec
andb
xlat
arpl
pop
push
mov
nop
inc
dec
fistl
vpaddsw
mov
pop
fmull
pop
imulb
pop
and
mov
lcall
int3
push
cmp
cmpsb
int
pop
cmp
sbb
cmc
mov
into
test
jnp
test
fcmovbe
lret
popa
add
test
mov
mov
test
push
inc
cmp
rcl
and
fwait
insl
sub
scas
xor
int
inc
pushf
mov
js
inc
inc
mov
xor
inc
sub
and
mov
dec
arpl
fidivl
push
cmc
mov
pop
pop
mov
add
rclb
loopne
aam
test
mov
out
jmp
imul
jl
inc
sti
cmp
sbb
in
and
dec
cmp
enter
dec
push
scas
andb
in
and
jno
into
pop
fisubrl
imul
in
js
subb
ss
les
mov
lret
add
push
inc
push
std
lods
mov
jp
jmp
adc
cmp
mov
ret
mov
aad
iret
adcl
jmp
inc
jb
mov
scas
in
cmc
in
lea
dec
adc
les
scas
mov
fistps
je
dec
das
ror
imul
push
dec
mov
out
fstps
sbb
aam
xchg
or
jnp
mov
sbb
inc
imul
ss
xchg
fwait
repz
jmp
scas
xchg
mov
sub
push
xchg
xchg
sub
stc
and
lods
out
or
pop
lcall
out
inc
testl
pusha
jge
push
fldcw
sub
dec
ljmp
add
push
sbb
pop
rclb
lcall
int3
pop
pusha
ss
fldenv
add
dec
adc
adc
mov
pop
jnp
fsts
cmp
aad
add
and
test
inc
ljmp
inc
xchg
mov
xor
jnp
addr16
xor
or
addr16
call
inc
cmp
repnz
fnstenv
mov
loopne
cmp
outsl
inc
into
sub
popf
and
mov
mov
and
dec
and
sbb
ja
mov
and
xchg
sub
mov
mov
in
sub
cs
fidivs
mov
cs
jae
mov
aas
stos
cltd
sbb
inc
cld
push
outsb
stc
adc
pop
lods
cld
inc
pop
sbb
and
inc
repz
aad
xchg
push
popf
dec
sbb
into
push
mov
push
movsb
xor
sarl
jp
insl
movsb
fdivrl
js
aas
dec
inc
xchg
add
jge
jle
push
addr16
dec
or
in
push
xchg
jo
push
hlt
sub
add
dec
push
adc
idivl
cmp
fcoml
add
out
dec
sbb
fildl
mov
stos
jge
shrb
cmpsl
dec
pop
jbe
mov
in
data16
enter
enter
ljmp
xor
movsb
jmp
testl
movsb
out
mov
outsl
mov
push
jle
mov
mov
out
pop
lret
mov
gs
dec
out
iret
sbb
dec
adc
loop
pop
imul
aam
push
notb
cwtl
or
sbb
out
mov
pop
divl
andb
mov
out
xchg
add
popf
test
sub
cmp
jmp
int
jecxz
lret
dec
pop
jmp
jnp
leave
jle
or
imul
sub
std
mov
inc
and
call
repnz
dec
sarl
push
lock
dec
mov
push
jp
andb
jl
xchg
das
sbb
xlat
cmp
scas
cli
lcall
andl
cmp
fwait
xchg
repz
mov
adc
or
jg
xchg
push
movsb
push
jae
adcb
xchg
rolb
push
outsl
dec
insb
daa
inc
outsl
push
lods
cmp
int3
cmp
mov
xlat
jp
mov
or
pop
imul
add
inc
scas
mov
jp
pop
mov
inc
je
or
xor
and
push
push
sub
add
sub
dec
inc
jle
fsubs
stc
out
sub
dec
test
test
xor
test
into
jo
cmp
aad
mov
lret
xchg
cmp
rclb
filds
imul
mov
hlt
pushf
daa
mov
out
nop
jbe
dec
xchg
or
lea
movsl
stos
adc
sahf
iret
test
decb
fnstsw
xor
sahf
mov
jp
inc
pop
fdivrl
inc
jp
iret
hlt
es
js
mov
pusha
xchg
popa
xchg
int3
fisubrs
pop
jne
xor
inc
repnz
pop
aad
decl
mov
test
add
mov
push
inc
inc
movsb
sub
add
lret
push
push
cmp
xchg
insb
popl
jbe
mov
push
sbb
mov
call
pop
shrl
mov
dec
jecxz
ljmp
mov
push
cwtl
addl
pop
iret
push
addr16
fadd
or
cmp
into
xchg
loop
lea
add
aam
push
adc
cmp
popa
or
daa
inc
and
ret
cs
inc
in
imul
movsb
ret
xchg
add
sbb
rol
jle
lahf
bound
adc
pop
or
jp
add
test
cs
stos
dec
add
mov
and
fwait
cmp
in
adc
enter
sbb
int
adcl
adc
mov
gs
sub
ret
test
adc
lea
xor
mov
jge
call
rcrl
add
mov
inc
pushf
sub
out
pusha
push
leave
mov
cld
xchg
cmp
mov
les
sbb
lock
mov
push
clc
stc
imull
call
pushf
xchg
gs
inc
gs
imul
incb
cmpsl
stos
cmp
cmp
repz
adc
inc
neg
clc
aas
push
and
add
lods
mov
fwait
in
test
inc
shlb
lret
xor
jo
in
dec
add
lock
xor
pop
iret
shrb
xlat
and
lea
scas
and
jne
jg
mov
rcrb
jbe
sbb
out
es
push
xchg
nop
in
xor
add
sub
jae
mov
leave
mov
xor
mov
cli
in
orb
int3
mov
enter
push
ret
rol
lret
mov
mov
inc
push
jp
fwait
pop
sbb
jo
insl
cmp
in
je
mov
mov
loop
lret
cs
outsl
mov
jl
daa
daa
mov
in
and
insl
aas
shl
js
dec
fistl
mov
mov
lds
sbb
rorl
cmpsb
lea
fisubrs
adc
inc
add
sarb
inc
jne
leavew
or
stos
arpl
jge
fwait
shll
mov
or
in
xor
sbb
std
cmpsb
sbb
mov
add
loop
jg
fimuls
xor
pop
gs
cmp
aas
sbb
inc
ffreep
sbb
aaa
mov
xlat
or
adc
add
jmp
sub
pop
in
shll
lds
pop
fldt
shl
mov
scas
and
addr16
push
add
movb
leave
or
std
and
push
adc
mov
sahf
adc
ret
arpl
fst
cs
rclb
pop
pop
sub
adc
fisubrs
mov
jae,pn
jno
jl
movsl
sbb
pop
lods
shrl
addl
add
stos
arpl
jnp
push
jmp
ljmp
dec
add
enter
jno
pop
mov
daa
xor
icebp
lret
xchg
sub
xor
push
aam
jmp
jno
ret
dec
stc
lcall
jno
mov
jnp
sbb
inc
dec
out
inc
dec
sub
in
rorb
addl
sub
loope
xor
xchg
jae
mov
int3
mov
mov
cld
aam
std
adc
xor
rcl
js
mov
jne
add
jno
push
dec
loop
and
rcll
mov
shr
xor
in
add
repnz
sbb
xor
cmpsb
push
inc
sub
inc
lods
jecxz
mov
add
je
add
jo
in
lea
dec
dec
cmp
inc
jge
in
fcoms
and
arpl
push
aaa
sub
push
ficompl
jns
xor
mov
push
pop
test
fs
jnp
mov
cmp
mov
or
test
fcoml
mull
jbe
int3
jae
stos
mov
popf
sbb
push
jg
int
jmp
push
js
sub
out
jle
add
mov
sub
sub
cmpsl
push
lret
test
mov
lea
mov
push
dec
fwait
sahf
shl
jae
or
les
icebp
mov
lret
out
xchg
lock
icebp
cli
adc
sti
pop
nop
in
je
cmp
in
dec
test
and
lcall
shrl
cltd
jno
mov
pushf
cmc
inc
mov
pop
sub
adc
ds
scas
xor
pop
adc
jmp
mov
fisubrl
js
int
or
arpl
aam
or
lahf
rcrl
cmp
negl
pop
mov
ret
xor
clc
xor
out
int
mov
and
aaa
daa
cmpsl
pop
ljmp
pop
cmp
sub
sub
insb
cmc
push
ror
xchg
rcr
and
test
or
mov
dec
loopne
addl
insb
sbb
in
not
fldcw
mov
iret
push
push
cwtl
add
jge
adc
mov
test
fcom
je
xchg
mov
hlt
cli
stos
push
mov
insl
add
xor
ret
lods
and
pop
stos
addr16
sti
adc
dec
orb
inc
mov
jp
mov
clc
in
ljmp
cmp
inc
cmp
add
mov
test
icebp
mov
jl
sbb
xor
adcb
lock
xchg
jo
jle
mov
mov
mov
jne
xor
lahf
push
mov
push
shl
mov
push
dec
add
or
fnstsw
lret
jo
shlb
aaa
push
jo
xor
jo
fcomps
and
jb
fisubs
dec
pop
jg
or
and
and
cmp
rcrb
push
adc
mov
mov
nop
into
inc
cmc
cmp
dec
fwait
pusha
rcll
or
xchg
pop
out
push
add
ljmp
mov
sahf
jge
je
push
push
addb
mov
bound
dec
push
jge
inc
pop
ljmp
push
sub
ret
push
jle
inc
jae
or
stos
xchg
jge
mov
jne
int
push
pop
or
addb
pusha
xchg
imul
into
sbb
cmp
jle
cmp
jge
sbb
mov
xor
fcmovb
stos
push
das
cwtl
pop
jmp
or
insl
cwtl
adc
jb
mov
enter
cmp
mov
jp
xchg
cmpsl
scas
and
mov
stos
adc
pop
popa
mov
push
test
mov
cmc
sbb
or
push
loop
jle
test
aam
push
xchg
int3
fld
jge
mov
aad
lods
enter
outsb
stc
fstpt
mov
lahf
mov
test
out
orb
int3
and
mov
push
push
mov
mov
pop
xor
jecxz
push
pop
sub
shll
imull
jb
insl
ds
sbb
xchg
lods
test
jge
hlt
mov
loope
ss
in
pop
xor
test
inc
movsl
add
mov
xlat
xchg
rolb
and
inc
dec
push
sbb
fistpl
push
xchg
xor
fwait
dec
mov
arpl
adc
bound
mov
mov
int
push
int
push
or
hlt
insl
cwtl
jecxz
lret
lds
mov
mov
sub
xchg
xchg
test
clc
lods
sub
in
mov
lds
xchg
popf
cmpl
mov
repz
loope
inc
fadds
xchg
xchg
cli
das
cmc
cmp
cs
add
inc
movsl
sub
cltd
cmpsl
fs
xchg
adc
push
sbb
shr
jb
jle
pop
or
and
pushf
jge
nop
push
outsb
mov
sbb
mov
nop
or
sbb
xchg
data16
pop
pusha
roll
popa
pusha
xor
jl
ja
xchg
lcall
ja
add
mov
rorb
xor
andb
xchg
adc
mov
push
lods
in
out
sub
mov
mov
sbb
out
and
cmpsl
inc
jne
popl
xchg
jmp
movsl
mov
iret
testb
fisubs
imul
xor
dec
repz
or
jecxz
ret
push
out
jl
out
sub
and
mov
inc
sub
mov
jge
addb
push
test
xlat
int3
fisubrs
adcl
jge
mov
jo
jb
jmp
fldt
mov
pop
jnp
jb
out
xchg
sub
dec
ret
lods
mov
aad
sbb
mov
mov
into
fmul
mov
jne
and
xchg
mov
sub
popf
ret
sbb
divl
fwait
push
out
jo
in
lds
outsl
lods
cmp
mov
or
inc
outsb
sbb
and
popa
out
jp
ret
stc
aas
cld
es
xchg
mov
mov
adc
sti
bound
imul
loop
xchg
fs
xor
adc
or
xchg
lods
das
stc
xor
xor
xchg
pop
mov
inc
push
lret
rcrb
bound
jl
nop
sub
pop
jge
mov
lahf
sub
or
inc
inc
fwait
push
ds
aas
adcb
cmpsb
and
fnstcw
shll
pop
push
loopne
adc
les
push
loope
daa
dec
inc
xchg
mov
cmp
sarl
into
dec
aad
aas
cmp
cwtl
jg
dec
sbb
adc
mov
or
sub
dec
mov
jmp
into
clc
int3
jge
cmpl
jns
shl
mov
push
int
mov
enter
arpl
pop
push
mov
mov
sahf
test
cmp
xchg
pop
jmp
xor
mov
std
mov
in
inc
pushf
jne
mov
push
daa
sub
mov
dec
lcall
mov
xchg
add
rolb
clc
push
lcall
mov
xchg
jge
mov
repz
fstpt
mov
pop
sub
xchg
jmp
pop
mov
daa
jns
sbb
xor
inc
or
lret
or
xorb
out
punpckhbw
daa
adc
test
dec
lods
cmpxchg
sbb
jle
ss
test
xor
pop
mov
cmp
sbb
fwait
jae
pushf
inc
iret
lahf
adc
sub
subb
jns
mov
sub
mov
fmull
outsb
in
add
pop
xor
cmp
push
cmp
cmpsb
xchg
daa
lods
lea
scas
adcl
call
mov
mov
cs
pop
setnp
xchg
popl
je
daa
insl
outsb
push
push
dec
and
jnp
add
sbb
jnp
cli
and
xchg
inc
jnp
jge
sbb
pop
hlt
mov
fcomps
add
test
shrl
sahf
inc
mov
sbb
mov
jbe
sahf
mov
inc
jo
mov
cmp
outsl
jl
add
push
sub
mov
movsl
dec
mov
adc
dec
outsl
inc
fadds
dec
loop
dec
shll
adc
pop
xorl
daa
pop
in
xor
and
mov
push
jl
sub
pop
lea
xor
fidivl
mov
xchg
dec
cmp
shll
mov
fcmovne
jae
enter
mov
xor
mov
loope
push
and
ss
add
dec
subl
add
jno
sub
popa
push
decl
jge
mov
mov
xor
popa
ja
push
jmp
jno
dec
pop
mov
scas
loope
fdivrs
sub
or
pop
jg
mov
outsb
xor
pop
cmc
ficompl
sub
xchg
out
or
daa
pop
punpcklwd
mov
mov
or
stos
aaa
and
add
sub
out
push
popa
mov
popf
mov
inc
dec
outsl
inc
popf
mov
out
and
xchg
dec
in
rep
mov
pop
xor
sub
aaa
pop
repz
pushf
das
loope
xchg
mov
inc
dec
mov
sbb
dec
test
inc
mov
pushf
test
shll
xor
sbb
mov
int3
es
cwtl
or
insb
and
dec
stos
lods
ja
nop
loopne
dec
push
scas
cmp
shr
addr16
jg
ja
cs
leave
fst
push
addr16
or
jnp
xor
push
popa
leave
addr16
adc
dec
repnz
and
mov
clc
push
mov
icebp
scas
xor
jbe
jns
sub
out
xchg
jns
notb
in
mov
sarl
cmp
rcrl
out
daa
pop
xor
sti
in
cltd
sbb
insl
mov
pop
scas
addl
hlt
adc
outsl
jnp
jmp
pop
rolb
cmp
mov
cmc
in
add
mov
leave
les
jg
out
push
jl
fldcw
imul
scas
xchg
gs
loope
stos
neg
popf
adc
sub
dec
pop
jl
cmp
adc
sub
jle
aaa
data16
xchg
mov
sti
lods
cs
add
cs
fcoms
in
ret
subl
arpl
mov
aad
call
inc
and
push
call
mov
mov
pause
bound
enclu
mov
movsl
mov
push
pop
sti
cmpsl
xchg
sbb
pop
push
sbb
hlt
sbbl
add
cmp
imul
push
test
lahf
stc
nop
fistpll
je
sbb
mov
stc
pop
xor
xor
test
mov
mov
inc
xchg
addr16
push
sarb
lods
out
pop
dec
jae
mov
imul
xchg
lds
in
in
push
repz
in
push
lret
daa
andl
int
inc
pop
push
jo
xor
insl
rcr
cmpl
mov
inc
xor
je
jmp
push
bound
mov
mov
sub
xlat
mov
or
pusha
test
dec
mov
test
cmp
jns
loop
xor
cwtl
sahf
inc
fisubrs
fdecstp
sbb
mov
or
ljmp
clc
stc
repnz
enter
dec
in
sahf
dec
lods
mov
and
adc
pop
pop
mov
call
lea
xchg
mov
mov
roll
mov
inc
int3
lock
mov
in
cli
aad
ljmp
push
in
or
cwtl
or
icebp
test
stc
aad
std
lods
mov
loope
popf
xor
ds
add
jne
pop
mov
jge
dec
jle
xchg
lock
fcomps
pop
mov
mov
mov
cmp
sbb
inc
stc
xchg
push
test
cmp
push
adc
mov
xlat
sbb
pop
sbb
cmpl
xlat
xor
testl
and
add
fildll
rcll
and
nop
fisttps
mov
adc
and
popf
add
adc
inc
subl
fcomps
test
mov
jecxz
inc
call
sub
roll
dec
stos
jno
dec
mov
sahf
mov
jns
int
js
mov
filds
negb
popa
xor
aas
adc
popf
sbb
dec
js
leave
pushf
repz
rol
and
adc
inc
pop
jb
inc
adc
mov
push
or
mov
and
and
lret
sbb
jmp
in
xchg
pop
ror
adc
push
rcll
mov
enter
mov
push
popa
inc
xor
notl
rcr
jecxz
inc
mov
xchg
out
mov
lods
and
xchg
jbe
push
xchg
stc
xchg
push
mov
shlb
sub
cmpsl
cmp
mov
sub
enter
sub
dec
ljmp
inc
pusha
add
inc
stc
mov
and
fsubp
pusha
jmp
push
mov
push
pop
imul
sbb
inc
loop
in
lds
sbb
pop
mov
outsl
sbbb
or
push
dec
arpl
dec
repz
rorb
jg
pop
cmpsb
enter
insl
mov
dec
out
sbb
push
dec
mov
xor
dec
ficoml
test
jne
inc
out
jae
pusha
inc
push
enter
xchg
xchg
cltd
je
and
jecxz
add
into
nop
sbb
pushf
lahf
xchg
loop
lods
mov
loope
and
mov
push
aas
jmp
xchg
outsl
push
mov
repz
and
pop
rcr
frstor
dec
loopne
in
inc
subl
roll
stos
jo
pop
lret
clc
mov
ja
adc
mov
dec
testl
ljmp
stos
jp
jg
jbe
mov
fwait
mov
in
sub
jmp
cmp
and
sbb
mov
pushf
add
xchg
mov
push
inc
ja
dec
imul
test
mov
xchg
jae
lods
xchg
out
jns
push
mov
clc
outsb
ds
das
iret
cmp
lock
xchg
or
inc
push
pop
xchg
xchg
xor
loopne
int3
xchg
insl
jae
mov
add
sub
mov
xchg
js
iret
push
push
xor
mov
lock
inc
or
scas
iret
and
xor
andl
xchg
outsl
je
mov
fs
cmp
jb
cs
lcall
pop
fisttpl
je
xorb
or
int
inc
in
test
dec
mov
dec
aas
stc
mov
mov
notb
arpl
push
add
imul
call
pop
test
or
or
sbb
xchg
dec
testb
xchg
outsl
inc
or
aas
xor
pop
out
jge
repnz
cld
iret
lods
cmp
push
inc
inc
mov
mov
mov
xchg
popfw
jne
in
pushf
aam
cmp
shll
xor
enter
xchg
jle
sub
mov
shll
lods
mul
leave
pop
cwtl
repz
jno
js
sub
mov
lods
addb
mov
mov
cwtl
test
or
lods
jb
outsl
add
rorl
je
rcrl
jae
xchg
imul
data16
push
and
and
mov
es
fcomi
sub
sbb
scas
fdivrl
std
movq
dec
inc
and
sahf
movsb
jmp
cmp
mov
pushf
push
lret
pop
shll
sub
mov
dec
jge
mov
mov
jo
scas
sub
cmc
daa
pop
sti
jmp
jle
imul
inc
jno
xor
clc
and
pop
sbb
jge
push
mov
data16
lret
sbb
lcall
mov
pop
idiv
iret
insb
aad
ja
clc
and
stc
mov
in
mov
adc
and
scas
xchg
loopne
icebp
xor
mov
inc
or
pop
test
sub
xor
mov
xlat
inc
stc
xor
dec
mov
mov
test
mov
xor
lods
in
add
movb
call
add
fbld
push
mov
lret
mov
push
adcb
inc
fisttps
rol
dec
dec
stc
adc
das
pop
push
cld
sbbb
stos
mov
inc
jo
push
sub
in
xor
cli
mov
or
jns
adcb
xchg
add
and
pop
leave
int3
test
pop
mov
push
cmp
mov
push
imulb
scas
sub
inc
ja
xor
daa
scas
add
push
adcl
jmp
in
add
xchg
ficompl
mov
gs
adc
arpl
pop
pop
fcmovnu
pop
ret
jmp
or
cwtl
jecxz
dec
dec
and
dec
repnz
sarb
decl
push
xchg
and
jo
test
sti
popa
mov
aas
and
insb
insl
into
and
subb
mov
push
mov
cmp
pop
pop
xor
cmp
mov
test
in
cmp
xchg
dec
mov
testb
jae
inc
out
add
mov
lret
jp
cld
leave
sbb
mov
loopne
mov
and
pop
js
ret
lret
pop
fldenv
mov
jge
mov
scas
push
idivl
jecxz
es
das
mov
mov
dec
mov
sub
xchg
mov
jle
dec
xor
cld
icebp
xor
or
and
aam
hlt
subb
shrl
inc
cmp
movsl
sbb
push
in
xchg
and
cmc
lods
scas
or
out
mov
aaa
sti
mov
xor
inc
adc
cmp
dec
pop
js
sbb
fcmove
mov
aaa
mov
divl
push
insb
xchg
into
sbb
xchg
push
pop
movsb
pop
mov
ret
mov
mov
mov
inc
addr16
std
mov
scas
pushl
out
dec
inc
mov
dec
inc
negl
mov
sbb
mov
shll
js
xchg
and
pop
ret
inc
mov
jecxz
insl
into
jg
add
enter
sub
jbe
aad
fucomi
or
push
push
addr16
enter
bound
pop
in
jge
loopne
sahf
les
inc
repz
addl
pop
sub
addr16
aad
mov
aas
fisubs
jne
pop
pop
xchg
pop
int3
mov
into
adc
lock
scas
sbb
dec
inc
mov
xor
xor
jp
movsl
cmp
or
pop
mov
and
cwtl
and
push
push
jmp
outsl
or
adc
icebp
int
cmp
decl
cmp
les
xor
nop
dec
cmp
push
test
add
fcomi
or
cmp
push
sbb
inc
inc
lret
or
cmp
cmp
cmpsl
xor
mov
fnstsw
adc
xchg
push
adc
and
out
xor
inc
sarb
test
dec
das
repz
add
imul
jmp
jmp
or
add
stc
mov
or
xchg
mov
xchg
dec
inc
pop
adc
xchg
scas
bound
add
fsubrp
jno
mov
sub
push
outsb
je
xchg
out
stos
ret
insb
add
inc
fiadds
scas
add
mov
mov
fiadds
inc
stc
bound
cmc
pop
jno
lea
fsubl
mov
cmc
sub
imul
mov
stos
and
insb
and
cli
dec
mov
stos
out
in
lock
jb
int
adc
jo
nop
loope
adc
movsl
pushf
jne
shr
fwait
sub
stos
rolb
mov
nop
popf
fucomip
imul
inc
add
and
setg
das
aas
movl
ss
mov
cmpsl
and
jg
adc
push
xchg
mull
nop
out
adc
and
imul
imul
lds
lret
repz
addr16
lret
enter
push
cmpsb
imull
dec
pop
dec
dec
and
sbb
mov
mov
dec
gs
aaa
inc
mov
push
out
es
enter
loope
jmp
sbb
xchg
push
test
into
rcr
orl
jmp
jmp
sbb
mov
adc
es
jmp
mov
nopl
push
mov
adc
dec
dec
outsb
mov
mov
xor
pop
and
mov
in
mov
jmp
lock
mov
dec
xor
jp
add
inc
mov
push
cmp
stos
jg
sbb
paddusb
out
rorb
inc
cltd
mov
lods
jp
and
adc
inc
adc
xor
sub
jnp
sub
adc
add
sbb
jg
lret
mov
dec
jbe
push
sub
test
mov
add
pop
lds
inc
fdivr
lds
das
clc
adc
in
ja
or
ds
sarl
hlt
out
nop
js
inc
gs
fwait
inc
mov
clc
sbb
scas
in
out
pop
cmpsl
mov
shll
out
cmpsl
repz
dec
push
lret
loope
je
mov
popa
mov
inc
mov
push
gs
xchg
mov
pop
push
sbb
mov
aad
aaa
rcr
dec
jb
pusha
cmp
in
mov
mov
adc
cmp
pop
in
loope
mov
mov
nop
add
sahf
fsts
inc
insl
sub
pop
testb
shr
andl
es
inc
dec
inc
movsl
cmp
mov
movsl
adc
cmp
icebp
sarb
adc
add
jbe
push
lahf
xchg
call
movsb
insb
icebp
and
mov
mov
jl
fwait
jne
xor
lcall
xchg
rcll
test
sub
cwtl
xchg
ret
dec
mov
ss
jno
and
mov
dec
mov
stc
addr16
rorl
ds
nop
daa
mov
cltd
popl
sbb
sbb
dec
push
inc
pop
dec
add
lea
cltd
or
int
bnd
in
lods
aaa
mov
or
inc
lahf
aas
mov
dec
dec
cmp
jbe
push
and
push
inc
xchg
jae
mov
inc
dec
loop
add
dec
je
fwait
inc
mov
outsl
add
pop
xchg
jle
inc
pop
add
shll
jge
in
dec
jecxz
insl
lret
scas
je
test
pop
mov
leave
pop
pop
std
mov
mov
or
cli
pop
cmc
xor
test
cmc
xchg
push
add
jns
adc
xor
bound
cwtl
add
scas
mov
mov
movsl
mov
dec
fadd
cltd
imul
les
sub
pop
mov
mov
jbe
cld
push
pop
into
iret
adc
arpl
inc
adc
data16
dec
push
repz
sbb
mov
adc
fisttps
mov
ss
mov
jne
das
sti
inc
adc
insb
scas
cmp
jp
pop
xor
add
pop
add
jns
in
sar
mov
insb
or
insb
test
inc
cli
dec
xchg
sub
imul
jo
and
lret
insl
arpl
fidivrl
int3
lock
jb
push
ds
sbb
or
outsb
out
insl
push
push
imul
pavgw
push
dec
pushf
pop
vpsrlw
sub
push
adc
jge
cwtl
sub
xchg
adc
cltd
adc
dec
outsb
push
xchg
fcmovnb
dec
and
push
dec
clc
out
push
push
mov
hlt
into
mov
out
stc
out
lahf
dec
dec
or
fstpl
scas
add
inc
or
add
dec
addr16
add
loope
pop
bound
and
push
pop
fdivr
mov
ret
sar
sbb
xlat
xchg
add
pusha
cltd
das
pop
add
out
push
adc
ficoml
mov
pop
test
sahf
push
test
ret
nop
mov
inc
push
cmp
and
push
and
pop
jmp
pusha
inc
cmp
mov
jle
mov
dec
ret
jp
ret
pop
jmp
aaa
insl
dec
je
stos
push
sub
out
inc
xchg
sub
enter
sarb
adc
jb
loopne
mov
dec
sbb
jmp
push
addr16
inc
fadds
push
pop
jae
cmp
dec
push
fimuls
dec
pop
mov
and
xor
cmp
inc
mov
cmp
scas
sbb
sbb
add
pop
pop
fiaddl
dec
stos
stc
bound
cld
jbe
inc
je
cmpsb
negb
and
popa
pop
fidivl
sbb
cli
fidivrs
push
lods
dec
push
clc
and
adc
jnp
mov
mov
fiaddl
jo
lahf
cwtl
daa
scas
xchg
adc
ret
stc
cmp
jle
rorb
js
ss
cmove
inc
cmp
cmp
mov
mov
lock
popa
xlat
in
fldcw
or
test
in
daa
xor
mov
sahf
ficoms
sbb
ljmp
lret
mov
into
outsl
out
sub
xor
jle
cmp
jp
movsb
call
fdivs
sbb
movsb
pop
lcall
jmp
popf
push
xchg
push
jg
cld
dec
xchg
inc
fisttpll
test
testl
lahf
mov
leave
es
mov
push
aas
adc
imul
adc
stos
add
popa
xor
cmc
inc
fists
xor
lea
ficompl
mov
jle
sub
test
push
lock
xlat
jg
mulb
sti
aas
not
adc
cwtl
sbbl
mov
cli
xchg
sub
es
out
mov
popa
dec
loope
dec
sub
hlt
cmpsb
rcll
or
shll
shl
cwtl
mov
stos
or
out
or
rol
xor
or
stos
aaa
add
mov
or
repz
cmp
xchg
mov
mov
and
push
icebp
sub
hlt
push
mov
or
adc
shll
hlt
and
jns
or
sbb
xchg
into
xchg
mov
test
clc
cmp
jne
jno
or
mov
repz
js
jecxz
inc
pop
xchg
outsl
into
shlb
jge
push
repz
or
cld
pop
jae
nop
inc
jo
pushf
mov
jecxz
inc
shll
mov
push
je
add
aaa
fildll
adc
and
popf
insb
push
out
popf
jg
mov
sbb
cwtl
lods
inc
into
icebp
cli
test
test
mov
jbe
dec
dec
lret
fistpll
cmp
test
jbe
xor
xorb
or
movsb
ret
inc
push
dec
int
mov
ss
in
inc
adcb
mov
es
xchg
or
mov
sahf
or
push
shrb
pop
aad
stc
negb
jno
lret
out
out
inc
pop
std
in
das
cmpsb
mov
shrl
in
xor
test
mov
pop
mov
dec
pop
imul
fcoms
add
add
data16
pop
nop
add
fwait
mov
imul
imul
mov
inc
sbb
sbb
lahf
xor
jmp
orl
jmp
outsb
sbb
out
cmp
cmp
icebp
jne
push
dec
or
sbb
xlat
insl
push
ret
loopne
ss
jmp
imul
fs
fisubs
es
inc
adc
das
test
pop
cli
mov
dec
stos
jne
mov
adc
lcall
dec
xor
sbb
leave
cmp
push
mov
jmp
mov
xchg
lahf
cwtl
hlt
hlt
push
sub
sub
sbb
sub
and
xor
lds
test
ret
lret
cmp
inc
in
add
jo
xor
pop
lock
ret
daa
mov
cmc
sbb
cmp
xor
push
pop
daa
ret
mov
xchg
push
std
jae
nop
out
jmp
imul
popa
dec
mov
into
aaa
sub
outsl
out
xor
and
jnp
fcompl
sub
mov
cmp
xor
jnp
int
dec
lock
jl
mov
fsubrl
add
xchg
sbb
adcb
in
xor
and
insb
xchg
lahf
add
push
xor
into
jbe
mov
inc
or
test
mov
aam
jo
mov
bnd
sahf
xlat
addr16
es
sub
insb
jbe
sbb
lds
std
jp
aam
jle
mov
scas
js
inc
movl
push
stc
or
lret
jno
stos
aaa
mov
sub
ficomps
mov
xor
or
leave
lods
pop
mov
shlb
add
push
andb
cmp
in
dec
cld
jle
sub
scas
mov
mov
fsubrs
shl
mov
dec
xchg
int3
push
and
cltd
xchg
cs
jbe
jmp
fs
xlat
sub
add
pop
and
hlt
cmp
in
or
lcall
repnz
xor
xor
adc
sbb
hlt
fstp
inc
fsub
xchg
loope
imul
lea
xchg
inc
push
std
add
sub
shr
mov
jne
jle
push
sbb
fists
das
inc
push
mov
push
push
jge
push
pop
ret
mov
mov
xchg
jo
hlt
popa
test
insb
xchg
scas
pop
adc
stc
imul
push
filds
fwait
in
movsb
aas
mov
mov
movsb
pop
mov
mov
shl
adc
fsubs
icebp
cmp
xor
addl
rcrb
test
sub
dec
ja
or
leave
xlat
out
cmpsl
cs
xor
jmp
dec
ret
adc
add
imul
xor
cmpw
fsubrs
adc
pop
cld
inc
cmp
cli
arpl
lea
jge
sbb
stc
push
pop
jge
mov
shll
inc
sbb
pop
add
cmp
sbb
cmp
cmc
adc
sub
lahf
mov
add
mov
inc
add
aam
mov
call
mov
pushl
stos
imul
xchg
jle
xor
push
and
add
cmp
ds
popf
sar
cmc
shlb
add
mov
enter
adc
cmc
lds
xor
pop
xor
mov
mov
sbb
test
adc
outsb
in
mov
repz
jno
insb
push
cmp
add
mov
pusha
lret
jl
inc
nop
adcl
addb
sti
ficoml
les
addl
dec
iret
push
add
mov
int3
adc
mov
out
les
loope,pn
les
pop
mov
pop
inc
push
pop
xlat
fsts
lods
cmp
testb
out
leave
cmp
and
gs
adc
jbe
inc
sub
sbb
andb
fucomi
scas
dec
sahf
jnp
sub
adc
mov
push
lret
inc
mov
adc
adc
cmpsl
aam
cs
or
fisubl
dec
icebp
imul
lret
adc
pop
mov
jmp
js
sahf
xchg
notb
test
imul
mov
and
sbb
cmp
pop
mov
stc
lcall
mov
pop
loop
mov
movsb
lcall
or
leave
cmpsb
popf
add
test
cmpb
aas
pop
jg
adc
in
cmp
dec
xchg
cs
imul
loope
mov
lret
adc
pop
repz
cmp
lock
sbb
stos
aad
imul
js
notb
xchg
and
test
push
sbb
sub
ret
pop
push
and
add
mov
push
int3
shr
test
std
test
fidivl
push
jae
xorl
and
leave
xor
mov
ljmp
ret
push
sub
ljmp
fsts
imul
fnstsw
adc
jle
je
jb
movsb
nop
sbb
insl
bound
jns
adc
movsl
lcall
jmp
push
dec
ds
cmp
hlt
mov
jno
push
pop
mov
in
add
push
lret
inc
jnp
enter
xchg
fcmovbe
push
scas
in
mov
mov
xchg
or
jg
add
pusha
xor
sub
and
test
data16
lods
out
sub
mov
fs
dec
mov
xor
stc
mov
inc
push
pop
xchg
push
add
sub
fwait
inc
push
repz
ret
pop
jecxz
clc
test
sub
popf
add
in
pop
xor
test
leave
test
negb
rorb
push
loop
test
loope
pop
inc
int3
sbb
pop
jbe
mov
sbb
jmp
sarl
cmc
mov
aaa
lret
jne
lods
mov
mov
stos
inc
sub
fwait
dec
adc
jge
xchg
mov
fildl
mov
in
jo
xor
xor
inc
push
jns
sbb
js
cs
mov
out
cwtl
jne
and
adc
pop
or
cmp
sub
popa
mov
scas
inc
les
pop
movsl
sbb
call
lcall
mov
fcmovu
push
stos
or
mov
jmp
push
inc
in
popa
pushf
movsb
mov
xor
pop
push
cmpsl
xchg
mov
fstenv
or
pop
push
aam
mov
scas
movsl
out
stos
pop
sub
sub
mov
int
inc
cmp
sbb
add
cs
inc
cmpsb
xor
mov
inc
lods
push
push
jg
mov
dec
ds
adc
xchg
daa
pop
adc
cmp
in
lods
cmpl
repnz
test
test
int
mov
fwait
and
ja,pn
aam
mov
add
shrb
and
arpl
aaa
loopne
xchg
idiv
iret
and
lea
test
test
sub
push
dec
xor
dec
rcll
loope
addb
adc
fnsave
xchg
je
call
out
and
xor
in
add
adc
stos
stc
enter
nop
lret
inc
fcoms
xor
and
inc
mov
popf
negb
or
stc
mov
xor
out
pop
int3
pop
dec
push
adc
into
rol
cmp
inc
jnp
std
adc
adc
cmp
pop
jle
cwtl
mov
pop
xchg
cs
ret
lds
scas
xor
xchg
cmp
xchg
in
dec
xchg
test
jp
js
cmpsb
loopne
xlat
aas
std
ljmp
in
xchg
fs
jmp
cmp
mov
shlb
inc
adc
leave
fdivrs
mov
iret
and
or
and
sbbb
mov
mov
inc
inc
mov
test
cmc
jle
xchg
pop
aas
popf
dec
pop
mov
icebp
sub
pop
test
lds
jne
add
popa
dec
dec
adc
mov
call
dec
test
out
ret
rclb
pop
cld
push
subl
aad
cmp
rol
stos
inc
mov
inc
jae
pop
jg
insl
enter
pushf
int3
jnp
aad
popl
movsl
xchg
fabs
mov
sbb
jnp
cmp
out
mov
es
and
xchg
add
add
jecxz
das
cmp
xor
push
inc
jbe
adc
pop
fs
add
leave
jne
jge
sbb
ds
inc
cmp
jo
test
sub
ret
or
push
sbb
mov
sbb
std
addr16
sub
data16
dec
and
sub
insb
out
push
and
xor
imull
cmp
into
es
sbb
mov
ds
cs
inc
popl
not
adc
and
lods
xor
dec
or
adc
je
fadds
cmp
cmpsb
scas
divb
jle
mov
sub
mov
loope
pusha
add
mov
sub
fstpl
aad
sahf
sahf
loope
loop
into
adc
mov
aaa
cld
jmp
pop
and
inc
sbb
push
add
fwait
aam
xchg
and
xor
adc
mov
pop
jp
les
jg
out
test
xchg
adc
inc
xor
insb
repnz
mov
mov
dec
jl
cmp
inc
mov
add
lods
cmp
outsb
adc
enter
sub
mov
or
dec
in
jp
adc
out
dec
sub
imul
push
lods
int
fidivs
jmp
mov
adc
mov
fisttpl
cld
lret
adcb
sbb
mov
or
sbb
cmp
jp
out
sub
sti
jae
sbb
or
dec
dec
pop
int
insb
adc
mov
jmp
clc
mov
pop
or
push
xchg
pop
pop
push
or
mov
std
gs
or
sub
js
hlt
mov
loop
xchg
inc
dec
add
sub
push
mov
lods
in
mov
xchg
lret
jb
leave
stos
aam
iret
xor
je
mov
sub
dec
test
sub
inc
in
iret
repnz
loop
jnp
sub
sub
pop
inc
mov
mov
jne
pop
out
jecxz
and
add
repz
cmp
ja
xor
inc
rorb
jno
mov
sbb
xor
jecxz
test
insl
jecxz
test
icebp
sbb
cmp
mov
roll
in
jecxz
jbe
jbe
rcl
test
mov
push
stc
in
ret
adc
imul
dec
jg
pop
sbb
lret
call
jae
add
push
shrb
mov
add
inc
mov
loopne
pop
xor
lahf
pop
inc
dec
lds
scas
stos
or
lret
mov
in
add
mov
clc
add
xchg
xchg
int3
mov
imul
jmp
shrb
push
sbb
addb
xor
mov
fdivl
sbb
leave
push
and
mov
mov
clc
lahf
adc
mov
push
xor
fldcw
mov
lcall
adc
mov
push
xor
mov
neg
xlat
loop
data16
push
movsl
je
jmp
sahf
add
xor
adc
cwtl
in
and
out
cmc
cmc
imul
loop
and
lods
adc
insb
ljmp
lcall
xchg
fisubl
xor
xchg
addl
adcl
inc
nop
and
movsb
je
or
cld
scas
jb
mov
movsb
mov
fs
cld
mov
lea
mov
pop
sbb
sub
xor
into
pop
xchg
cmp
pusha
jl
and
xor
stos
fidivrs
enter
mov
test
data16
out
xlat
cmp
out
mov
fwait
xchg
or
test
ljmp
ret
imul
mov
add
clc
idiv
mov
push
in
sub
fstpl
xchg
and
lock
push
leave
xor
push
test
sbb
push
mov
jno
xchg
xor
sub
lahf
bound
fistpll
outsl
mov
cs
xchg
inc
push
cmp
jg
aas
lods
or
loope
jl
sbb
mov
loopne
insb
repz
loope
shlb
loope
adc
js
or
mov
leave
das
sbbl
xchg
push
test
stos
cmp
mov
ret
xor
push
iret
rclb
lcall
dec
jle
mov
or
scas
push
inc
dec
or
sub
xor
stc
xchg
mov
mov
insl
scas
sbb
imul
ficoml
push
hlt
lret
pop
call
test
cmpsl
into
pop
jl
fisubs
cmpsb
ret
add
mov
pop
out
cmc
add
push
cmp
adc
fnstsw
jl
jbe
xchg
jmp
cmp
cmp
mov
mov
mov
pop
xchg
fcmovnb
in
mov
inc
xchg
pop
aad
and
ret
imul
cmp
sarb
decb
jl
pushl
int
push
jne
jecxz
nop
test
cmp
fidivs
mov
clc
sti
movsb
jno
call
imul
xchg
push
cltd
xor
sub
ret
lds
int3
mov
aas
cmp
xchg
fnstcw
jmp
jg
cmc
xchg
fwait
movsl
mov
addl
xor
rclb
cmp
daa
sub
mov
sbb
in
es
inc
adc
fisttpl
leave
pop
push
jo
jle
cmpsb
mov
cmp
xor
jae
xchg
or
push
push
xchg
mov
nop
sub
jl
jne
xchg
clc
xor
jns
popa
adc
xchg
jecxz
in
push
pop
sub
jl
imul
out
idivl
subl
and
scas
arpl
imul
xor
adcl
sbb
dec
cwtl
cmp
mov
dec
and
xchg
scas
add
cs
lret
ficomps
push
push
loope
inc
inc
adc
rcr
adc
cmpsb
sub
movsl
inc
icebp
call
and
rcr
adcb
xorb
push
sbb
mov
and
test
adc
ss
rcrb
js
jbe
out
mov
adc
and
stos
cmpsl
xchg
sbb
mov
scas
mov
fwait
xor
std
fisttps
adc
aaa
test
mov
ret
cs
rorl
test
enter
push
jb
jle
jae
xchg
mov
pop
sbb
or
lds
enter
loop
je
aas
ds
add
mov
test
or
xchg
sub
sub
pusha
fistpll
fnsave
push
idivb
sub
mov
in
ret
inc
data16
adc
dec
inc
repz
inc
mov
pop
negl
inc
jecxz
pusha
dec
cmp
decl
cld
or
mov
add
mov
fstpl
shlb
dec
jp
and
push
lcall
outsb
data16
into
in
std
testl
lea
int3
mov
hlt
adc
inc
fcoms
jnp
push
lds
movsl
pop
mov
jecxz
mov
and
movsl
orl
movsl
inc
outsl
mov
enter
into
insl
repnz
xchg
mov
fdivr
jbe
inc
nop
jmp
shll
push
test
dec
push
jle
sub
outsl
and
push
insl
insl
sub
orb
pop
or
mov
xchg
push
add
rcl
mov
xchg
sbb
xor
outsb
in
imul
mov
stos
pop
push
sbb
sub
or
mov
cmp
repnz
das
lea
out
cmp
sub
and
arpl
into
pop
mov
ljmp
insb
inc
sub
push
insb
sub
outsl
mov
icebp
es
sub
daa
or
xchg
pop
daa
push
imul
clc
daa
je
std
sbb
add
jmp
pushf
sub
pop
aad
roll
xchg
mov
sub
or
push
popa
out
push
lods
jno
jle
xor
loope
mov
lea
les
enter
cld
or
cltd
pusha
in
mov
leave
push
push
inc
std
roll
movsb
xchg
pop
push
negb
outsl
aas
pushf
pushf
mov
in
stc
add
xchg
aaa
inc
testl
cmp
push
ret
xor
pusha
push
xchg
or
fs
in
inc
sbb
mov
mov
mov
inc
fmul
shlb
xchg
xchg
movsb
sub
pop
pop
test
test
mov
ja
loope
sarl
enter
push
mov
popf
lods
dec
xchg
dec
pop
mov
add
cli
xchg
adc
sub
pusha
pop
and
cmp
inc
mov
aas
test
push
aaa
test
xor
jno
mov
outsb
aam
sahf
dec
or
icebp
mov
into
pop
aas
idivb
iret
mov
mov
roll
jae
mov
aas
cmpsl
pop
cmp
fisttpl
lods
sub
call
xchg
pop
mov
js
cmp
sub
ror
jp
dec
xor
fsubl
repz
imul
inc
push
jmp
lcall
pop
lret
xchg
fisubrs
jl
shl
fwait
add
ja
cmp
jne
mov
adc
pop
and
adc
daa
aas
xchg
mov
mov
push
add
push
cmp
ficoml
jmp
rcrb
rcr
mov
enter
fcmove
mov
addps
xor
pop
mov
adc
pusha
out
mov
in
into
insb
inc
xor
faddl
fs
fistps
les
jae
mov
enter
push
sahf
mov
ja
rcl
mov
push
sahf
mov
pop
das
jbe
loop
or
mov
push
mov
jle
clc
xor
mov
icebp
js
into
adc
stc
test
mov
mov
jecxz
idivl
mov
jle
or
repnz
pop
lret
movsl
in
mov
fdivl
push
and
lahf
jae
dec
clc
shlb
sbb
in
in
pop
pop
or
imul
mov
call
std
jle
fiaddl
or
mov
mov
add
and
push
cmp
cmpb
xchg
icebp
decl
sub
cmpsl
in
xor
jmp
jmp
orb
push
fwait
ss
sbb
push
cmp
mov
xchg
hlt
loope
pusha
sub
scas
insb
xor
push
ret
and
cs
test
int3
mov
inc
fildll
ljmp
sbb
cltd
out
hlt
jo
fcoml
or
jne
jg
aas
xor
adc
cs
xor
mov
mov
xchg
pop
xchg
xchg
cmp
pop
inc
dec
xchg
lret
dec
movsb
and
stos
ret
std
mov
push
lods
test
sar
mov
pop
call
mov
or
cmp
push
sbb
push
sub
add
pop
mov
jl
in
daa
dec
xchg
mov
mov
jl
adcb
dec
xor
pusha
aam
fsubrp
push
xchg
mov
lock
push
mov
lcall
call
enter
cld
in
ss
cltd
out
in
xor
hlt
push
mov
jg
or
cli
pop
or
aad
xchg
out
jg
xchg
and
jp
jl
mov
cmpsb
lret
lock
xor
lods
aas
insb
jbe
fistps
or
nop
mov
cmp
mov
push
in
or
jns
out
add
xchg
mov
test
loopne
loop
rcrl
scas
daa
outsb
rcll
push
adc
stc
inc
arpl
rorl
push
movsl
imulb
clc
push
incl
jle
lock
xchg
pop
in
jge
xor
js
test
jns
inc
xor
sub
jge
lds
test
fsubrl
jp
jnp
test
in
xchg
adc
idiv
cmp
int3
mov
jno
jmp
dec
data16
pop
imul
adc
cmp
je
in
jmp
leave
mov
jmp
loope
jno
daa
aaa
subb
inc
in
nop
pop
dec
sub
pop
addr16
push
xchg
add
adc
jo
iret
jbe
scas
cmp
push
clc
sub
je
aaa
jbe
mov
jnp
insb
fsubrl
and
insb
mov
ret
mov
jmp
imull
scas
mov
adcb
sbb
and
add
pop
add
xchg
add
mov
push
sub
repnz
inc
adc
cmp
sbb
add
cmp
and
mov
pusha
and
adc
cmpsl
mov
adc
xchg
das
movsb
negb
or
lods
adc
sbb
adc
scas
adc
scas
or
loopne
mov
mov
imulb
add
mov
cmp
or
fadds
aas
adc
in
mov
vrcp14ps
fwait
repnz
int3
scas
inc
mov
clc
adc
push
jns
dec
daa
es
adc
xchg
scas
pop
jae
lret
cmp
xchg
xor
in
mov
das
outsb
gs
popa
adc
es
aad
push
jmp
lcall
pop
inc
js
jg
cld
je
mov
stos
repz
dec
xchg
fstp
out
pop
mov
pop
add
shlb
loopne
and
push
jb
push
jae
or
pushf
mov
xchg
sub
sub
icebp
add
repz
mov
mov
lcall
insl
mulb
es
aam
std
dec
mov
jecxz
outsb
cmp
adc
jnp
mov
jp
in
aam
xlat
into
loopne
sub
fidivrl
jmp
mov
repz
testb
loop
lods
out
dec
mov
mov
xchg
sub
and
loopne
dec
ret
je
pusha
push
inc
rclb
subb
mov
cmp
xchg
cmp
lods
jb
negb
leave
and
fcoms
add
in
cli
lock
mov
pop
imul
jae
shrb
pusha
imul
es
iret
or
sbb
and
rclb
fs
add
cli
xchg
dec
mov
mov
jo
cwtl
in
adc
xor
shll
gs
outsl
xor
fsubr
mov
xchg
dec
loope
in
leave
aam
inc
pop
cmp
out
xor
into
inc
sbb
frstor
ss
sub
adc
in
xchg
sub
and
xchg
jno
jo
push
outsb
lds
cwtl
gs
push
jle
inc
inc
inc
ss
jle
xor
shl
inc
cmc
aad
push
data16
mov
pop
fadd
iret
adc
and
add
sbb
inc
es
int3
rcl
les
mov
xchg
repz
imull
sbb
pop
shrl
hlt
je
shlb
mov
loop
push
lds
mov
lahf
test
fistl
iret
std
stos
xor
inc
sti
mov
mov
xor
and
lods
inc
jno
sub
pop
jns
mov
out
sti
out
jle
mov
pop
push
mov
rclb
and
cmp
cmp
mov
lock
dec
nop
dec
inc
fisubrs
push
sbb
cwtl
aaa
stos
hlt
aas
movsl
jp
xor
and
or
dec
mov
dec
xchg
arpl
pop
rcrl
mov
out
stos
mov
int3
pop
shr
rcll
inc
and
mov
pushf
int
sub
add
mov
cmp
loope
cmp
xchg
shlb
adcl
cmp
stos
sub
insb
cmp
and
arpl
stos
stc
mov
xor
fs
out
lea
out
and
sbb
imul
inc
xchg
jmp
rep
ds
add
cmp
adc
in
and
lcall
push
mov
test
aas
xchg
fnstenv
xchg
jecxz
fcomi
push
inc
mov
je
out
mov
out
push
mov
inc
pop
mov
int
inc
mov
pop
addb
xchg
add
xor
jmp
fldcw
dec
js
inc
aad
or
or
insl
push
cmp
dec
call
sahf
and
daa
test
xchg
pusha
jae
or
or
mov
and
cs
les
lods
fistps
push
ret
inc
xchg
push
xchg
les
push
mov
mov
dec
outsl
and
inc
jo
dec
mov
jnp
jecxz
or
sbb
xor
jo
add
lock
xchg
mov
adc
mov
inc
fs
jbe
xor
shlb
pop
lret
decb
add
stos
push
cld
push
push
or
shll
xchg
stos
xor
sbb
mov
mov
xor
lcall
les
sbb
sub
sahf
shlw
mov
fimuls
js
gs
or
loopne
imul
outsb
cltd
mov
sbb
add
pop
cli
pop
shll
push
jb
jge
addr16
mov
aaa
or
push
jb
xlat
mov
lcall
test
test
mov
lds
push
jge
outsl
lea
or
les
pop
xchg
xchg
mov
repz
sti
dec
stos
jbe
sub
cmc
movsl
pop
push
xchg
iret
scas
pop
mov
ds
mov
push
sbbb
push
mov
filds
negb
mov
or
int
test
jnp
push
fisttpl
inc
jg
orl
add
mov
adc
pop
push
push
faddl
pop
int
push
out
out
xchg
sub
push
out
movsl
fisttps
int
cmp
add
push
xor
add
lods
push
insl
aam
adc
jno
mov
cmp
mov
cs
jbe
cld
repz
push
mov
mov
popa
jg
insl
aas
xchg
test
and
or
in
repz
fs
pop
and
push
repz
movsb
clc
and
frstor
inc
dec
jp
ljmp
rcl
dec
int3
adc
cmp
sbb
fs
fildl
push
jb
repz
dec
aad
lret
xor
sti
test
pop
outsb
fsubrs
ss
sub
pushf
int
push
testb
scas
lret
mov
jge
pop
scas
adc
loope
mov
imul
mov
fistpll
mov
lret
inc
addl
xchg
dec
shrl
sbb
xor
fcoml
imul
push
js
shr
xor
xchg
mov
sub
mov
repnz
lock
jge
mov
js
ret
mov
mov
mov
xor
popa
sbb
js
inc
cmc
sub
cmpsl
movb
std
js
mov
push
ret
popa
pushf
or
mov
cld
ret
test
popa
sbb
sub
xlat
rorb
int3
popa
stos
cmp
out
outsl
jbe
or
cltd
pop
and
fcomps
inc
push
out
jecxz
call
push
shrl
test
push
test
rcrl
mov
js
ret
mov
pop
repz
xchg
push
dec
fisubrl
adc
out
sbb
divb
es
aaa
add
ljmp
mov
sbb
push
jmp
mov
jo
adc
and
cs
pusha
lea
jns
sti
test
jle
adc
in
push
loop
and
push
jmp
in
pusha
rclb
or
jno
pop
lock
adc
or
add
insb
pop
roll
add
addl
call
scas
std
insl
mov
jl
pusha
xchg
pop
fcmovu
xchg
dec
lds
inc
addr16
cmp
adc
cmpsl
sub
jne
stos
lret
push
fistpll
addr16
out
adc
xchg
xor
jge
loopne
addr16
jns
fs
testl
inc
mov
cmovp
or
std
enter
pushf
lahf
mov
jmp
loop
sub
cmp
mov
rorl
cmp
or
arpl
inc
or
stc
cmp
scas
out
xor
push
mov
xor
xor
or
out
aaa
lahf
and
xchg
xchg
fwait
adc
fldlg2
push
and
push
gs
clc
fdivrs
sub
daa
push
nop
fnstcw
and
pop
mov
xchg
add
adc
std
arpl
xor
sbb
sahf
pop
icebp
mov
xchg
cs
mov
mov
loop
mov
mov
jl
add
lods
int
fcomp
mov
xchg
mov
inc
cmp
sti
scas
xchg
jg
loope
push
cmp
imul
mov
lock
inc
aad
ljmp
inc
inc
ret
popa
testl
fldt
xchg
mov
mov
add
xchg
add
mov
aaa
and
clc
scas
mov
mov
add
shlb
mov
test
aam
add
jp
jo
adc
push
jnp
hlt
mov
fildll
pusha
mov
imul
mov
sahf
xchg
pop
test
arpl
jl
clc
dec
jne
stc
push
arpl
cmp
popa
jbe
sbb
leave
loope
in
mov
xor
mov
or
or
popf
repz
enter
push
data16
sbb
dec
daa
mov
and
outsl
ficoms
adcl
jle
pop
xchg
xor
push
rorb
aas
in
int
xchg
cmp
fxch
gs
xchg
and
cltd
lock
mov
int3
les
jmp
jb
mov
inc
xor
mov
rorb
jnp
mov
test
cmp
xchg
xor
jne
xor
inc
mov
mov
cmp
std
loope
loopne
daa
mov
push
and
xor
aad
andl
mov
mov
in
repnz
out
aas
cwtl
sbb
xor
out
gs
loope
aad
xor
xor
xor
or
hlt
out
jle
mov
outsb
arpl
cmpsb
mov
sahf
mov
adc
jno
stc
in
out
rcl
xor
jmp
push
or
mov
jge
cld
sub
mov
dec
lods
inc
push
add
les
and
pushf
outsb
jle
xchg
xlat
mov
testl
sub
inc
cs
outsl
sbb
mov
dec
push
and
mov
cmp
icebp
insb
mov
mov
lods
sub
push
xor
mov
or
shlb
ss
into
dec
or
mov
out
pop
cmp
add
sbb
cmp
jle
out
int3
repz
pop
lret
fwait
cmp
adc
lock
mov
push
insb
mov
push
dec
stos
aaa
rorb
mov
loopne
into
mov
mov
addb
push
scas
mov
dec
add
xor
incb
sbb
dec
and
icebp
jns
andl
mov
stc
jle
int3
cmp
lods
imul
addb
int
add
pop
mov
xor
add
dec
ds
cmp
mov
not
pop
mov
mov
ret
lcall
push
mov
pop
sti
mov
and
add
mov
movq
icebp
bound
testl
xchg
jne
cli
jo
dec
imul
xchg
adc
fsub
ret
insb
lret
xor
push
lret
stos
fdivrp
mov
xchg
add
adc
adc
data16
into
jl
int
and
xor
test
or
jns
insb
loopne
add
mov
jle
fcomp
jle
xor
or
sub
jnp
jmp
arpl
nop
gs
and
daa
cmp
xchg
sub
pop
push
pop
repz
aad
ret
movsl
nop
mov
movsl
and
in
and
lret
in
fsubl
cmp
out
lret
fnstenv
add
mov
sbb
es
lcall
inc
push
test
xorb
out
mov
fs
fs
jle
dec
push
data16
xchg
inc
popa
jge
lret
and
sub
cwtl
jp
sbb
dec
sbb
pop
ds
in
adc
inc
xor
cmp
xchg
add
js
adc
das
adc
and
das
cwtl
loopne
pop
test
lret
pushl
jge
insb
cmp
pusha
sub
push
int3
jp
pop
push
or
push
xchg
popf
push
mov
lds
fists
add
xlat
push
push
push
and
jns
sub
mov
and
insb
shlb
xchg
ljmp
jbe
pop
mov
loop
xorl
dec
sub
adc
adc
mov
fcoms
mov
not
inc
push
sub
push
sbb
inc
push
out
fldenv
lret
popf
sbb
sub
dec
or
scas
add
pop
lret
push
mov
pop
mov
and
pop
mov
jo
cwtl
bound
jmp
cmc
sbbb
push
ss
lcall
loope
leave
das
sahf
adc
scas
in
mov
cld
fisubrl
aam
lea
cmp
mov
je
sbb
popa
repnz
add
sub
mov
ds
inc
in
incb
mov
dec
outsl
push
lds
xor
ss
xor
in
push
rclb
adc
sbb
sbb
repz
int3
leave
sbb
xor
fcmovbe
loop
adc
mov
mov
dec
cmp
push
scas
mov
pushf
pop
mov
xchg
mov
add
iret
adc
clc
hlt
and
add
dec
add
jl
xlat
sbb
xor
sbbb
lods
insl
pop
repz
insl
mov
lcall
aam
pushl
imul
js
cltd
enter
adc
xchg
or
sarb
push
jb
scas
shlb
xorl
mov
mov
pop
in
and
imul
ja
or
in
inc
xor
inc
cmp
pusha
mov
insb
and
and
test
loop
adcl
adc
icebp
ds
in
jmp
pop
sub
scas
inc
xchg
fs
ss
ret
sbb
add
lods
xlat
aas
pop
push
mov
subps
mov
push
push
andb
pop
test
insb
das
xchg
test
movsb
loop
pushl
adc
and
xorb
pop
dec
loopne
push
fcompl
sub
mov
popa
stos
mov
adc
add
mov
and
dec
add
jno
mov
loop
into
mov
icebp
sub
jo
push
fadd
sub
lahf
mov
lea
adc
sbb
fwait
sbb
andl
cmp
and
pop
aad
add
xorl
into
das
jecxz
fs
ds
mov
in
add
cmp
mov
jp
into
push
mov
inc
cltd
pop
repnz
aas
jl
add
cwtl
sti
jmp
pop
cs
push
add
jmp
mov
xor
xor
shlb
cmp
mov
fisubrl
cmp
andl
lret
pop
jmp
test
mov
cld
push
mov
xchg
mov
sub
cmpsl
pop
pop
aam
adc
xchg
pop
lret
scas
lea
sub
fidivrl
call
xchg
jne
loopne
imul
cmp
fisttpl
aaa
mov
stc
adc
xchg
pusha
mov
jge
sub
dec
pop
adc
cwtl
jne
mov
lahf
scas
add
jmp
xchg
mov
push
insb
imul
or
call
mov
test
adc
dec
sti
inc
data16
push
dec
xchg
imul
pop
push
xchg
sub
ficoms
sarb
dec
lea
in
shrl
xor
wbinvd
or
sub
addr16
repnz
sbbl
dec
stos
and
iret
stos
aaa
outsl
pop
jo
arpl
enter
mov
mov
ljmp
inc
jl
bound
adc
cmp
xor
lmsw
je
cltd
push
sbb
fdivrl
and
mov
fbstp
jge
jmp
ret
and
sbb
jbe
jbe
scas
mov
and
fs
imul
jno
ret
ficoml
cmp
jne
daa
jmp
sub
aaa
jmp
push
jo
insb
lcall
cs
loope
push
fsub
jbe
cld
xorb
clts
stc
fldenv
push
cmpsb
sahf
lahf
xchg
and
jns
add
jb
and
mov
les
into
loopne
imul
inc
stos
mov
xchg
sub
dec
pop
dec
push
frndint
or
sub
mov
push
adc
adc
inc
pop
icebp
and
cli
cmp
pushf
std
sti
adc
and
cli
and
xchg
or
jmp
mul
xchg
sub
xchg
dec
outsl
dec
les
fdivrs
cmpsl
sarl
aaa
sub
sub
xchg
dec
pop
dec
dec
test
mov
or
pop
pop
jmp
jecxz
in
adc
xchg
fists
cmp
pop
sub
jnp
cld
or
sahf
add
sub
ret
dec
pop
test
test
inc
jnp
incl
pop
popa
push
ret
mov
test
sti
dec
mov
sub
xchg
das
lea
bound
sbb
div
adc
gs
mov
pusha
cltd
xchg
int3
je
loop
stc
in
sub
jne
jns
int
les
dec
cwtl
pop
dec
test
lds
nop
cmpsb
mov
xor
rclb
orl
rorb
fwait
adc
mov
mov
leave
and
ja
xor
adc
aas
aaa
dec
lock
jecxz
mov
aaa
mov
inc
jle
xchg
sar
aad
dec
test
inc
jae
cmp
aam
mov
pop
sub
lahf
push
cltd
adc
adc
sub
pop
or
int3
sub
ljmp
or
stc
mov
gs
mov
call
mov
divb
sbb
mov
fsubp
fcmovu
pop
sti
mov
mov
int
mov
mov
push
cmc
lcall
push
adc
subl
iret
js
shlb
jbe
jecxz
or
mov
dec
jne
jb
shrl
fsubrs
push
popf
jnp
adc
and
pop
and
in
addr16
xchg
mov
test
push
test
cmp
jne
test
in
push
push
bound
fimull
sbb
add
lea
push
ljmp
push
pop
mov
in
cmpsb
fnop
sahf
mov
movsb
cmpsb
mov
xchg
in
xchg
mov
mov
cwtl
sub
inc
fidivrs
adc
inc
fimuls
jbe
enter
cwtl
aam
xchg
outsl
push
cmp
push
jl
or
mov
mov
jp
mov
mov
ret
push
add
out
sbb
daa
jmp
add
std
push
mov
dec
mov
lods
aaa
pop
add
pop
inc
sbb
cmpsb
mov
jl
test
divb
test
dec
addr16
in
jmp
data16
scas
xchg
into
mov
in
pop
mov
jecxz
push
inc
push
loop
sub
fmuls
ret
insl
icebp
jbe
mov
lret
popa
enter
movsl
movsb
loop
push
test
and
ret
jae
pop
movsl
std
mov
xchg
iret
repnz
jle
inc
je
mov
and
scas
and
cmp
mov
stc
addb
sbb
inc
testb
cld
movsb
mov
xor
mov
mov
fistpll
sbb
movsl
ds
sbb
pop
and
sub
adc
push
bound
popf
sub
cmc
add
daa
fucomp
inc
ljmp
stos
rclb
incl
and
xorl
shr
out
movsl
adc
add
push
push
inc
movsb
hlt
test
daa
dec
cli
push
fmull
icebp
aam
rolb
negb
dec
xor
std
iret
jl
arpl
xor
sbb
and
fwait
test
sub
adc
repz
mov
pushf
dec
fdivs
jmp
add
xchg
mov
jmp
inc
nop
inc
iret
sbb
shrl
in
cmp
fsubrs
adc
or
sub
push
or
xchg
pop
shr
loopne
idiv
adc
cltd
push
cmp
popa
push
mov
inc
sub
push
adc
pusha
and
cltd
xor
adc
cli
nop
xlat
rorl
sub
aaa
rcrb
cmp
pop
stc
out
jo
sub
jp
mov
int
sub
dec
cmp
push
pop
data16
out
pop
pusha
pop
rorl
daa
inc
flds
lcall
cmp
add
popf
inc
sti
aaa
mov
inc
push
cwtl
inc
inc
jp
imul
ret
fadd
jecxz
pusha
sbbl
rcrl
pop
mov
inc
adc
adc
push
scas
push
cmpl
mov
mov
push
repnz
mov
clc
adc
nop
pop
push
popf
adc
popl
xchg
mov
icebp
rolb
test
in
scas
jbe
sub
adc
push
inc
mov
mov
sbb
fmull
fcoms
cmp
push
lret
test
or
arpl
add
pop
add
repz
inc
ja
scas
mov
dec
ret
jns
pop
xchg
push
repz
pop
mov
fldt
ret
inc
ds
loop
data16
jg
pushf
xlat
aad
lods
ja
cmpsb
ljmp
loop
ss
scas
into
inc
pop
in
push
or
fidivrl
jecxz
push
into
mov
cltd
enter
xor
daa
xchg
out
and
and
dec
or
dec
xchg
push
mov
int3
xchg
inc
push
cld
repz
repnz
fstl
fbld
adcb
and
pop
fidivrl
pop
add
xchg
sbb
push
cmp
mov
test
add
mov
loop
mov
lock
cmp
fidivrs
into
sub
mov
xchg
lret
pop
and
pop
jmp
jae
les
int3
sub
lock
adc
sbb
push
inc
mov
outsb
call
inc
loope
add
pushf
mov
inc
mov
sbbb
adc
xchg
mov
push
imul
mov
push
daa
in
dec
mov
jne
xchg
pop
lods
pop
fldcw
jmp
aad
lahf
mov
and
mov
popa
jl
es
dec
pop
cmp
fdivrs
mov
iret
pop
jg
into
repz
mov
pop
sbb
loopne
and
xor
mov
outsb
xchg
mov
inc
out
mov
out
mov
cmp
inc
push
mov
or
or
mov
icebp
cmp
insb
call
sarb
push
pop
gs
mov
xor
outsb
adc
popa
orl
rclb
scas
sbb
push
pop
and
pop
rorb
sub
les
into
cwtl
test
adc
and
pop
cmc
cmp
mov
jp
fsub
nop
mov
inc
aam
xor
or
scas
pop
xor
and
scas
ja
loope
test
inc
push
arpl
sbb
lret
push
popf
dec
js
jp
jne
add
xor
scas
dec
cmp
mov
imul
inc
push
or
mov
gs
shll
adc
jl
mov
xchg
pop
add
sbb
mov
jge
inc
mov
loope
jmp
arpl
jno
mov
mov
js
mov
lock
or
popf
adc
in
sbb
mov
mov
insl
xchg
in
shrb
sbb
rep
cwtl
inc
xor
push
loopne
stc
jae
xor
add
mov
pop
data16
cmp
adc
data16
in
sbb
mov
lret
repz
fdivrs
shl
or
insb
add
scas
insb
adc
loop
fs
bound
cmp
pushf
push
xor
inc
std
inc
shrl
mov
pop
dec
es
outsl
testb
aam
jns
movsl
std
and
xlat
mov
dec
mov
jmp
and
xchg
xor
rcl
push
jmp
imul
mov
xor
sub
daa
rcrl
scas
jl
test
xor
cmp
mov
lock
loop
inc
popf
scas
and
mov
ja
aas
imul
leave
cld
inc
out
leave
lret
cmc
insl
out
pop
jo
or
subl
sub
pushf
in
icebp
add
inc
cmp
mov
sub
in
and
movl
mov
pop
es
push
iret
stc
sbb
xchg
mov
ret
push
sub
aad
dec
xor
mov
jecxz
stos
inc
mov
repnz
and
stos
stc
xchg
mov
cltd
decb
push
inc
sbb
in
stos
sbb
scas
mov
mov
ret
xlat
out
into
movsl
out
jnp
das
lcall
pop
sti
js
xchg
lods
or
cmp
inc
adc
mov
jge
lret
adc
push
nop
dec
fmulp
mov
test
jno
movsl
jp
jl
cmpsb
cmp
aaa
dec
xchg
xor
and
cmp
shrb
xlat
nop
stos
outsl
or
and
mov
mov
pop
in
push
xchg
pop
push
push
lret
xchg
loopne
inc
or
mov
out
repnz
or
mov
inc
daa
in
jno
sbb
dec
xor
cmp
pop
popa
jl
arpl
rcll
and
test
jmp
push
jnp
cmp
adc
push
ret
out
dec
clc
jae
inc
push
jmp
or
fcmove
imul
or
sbb
sahf
jne
sarl
jg
cmp
scas
cmp
and
loop
pop
push
pop
gs
test
adcl
inc
addr16
jo
xchg
aaa
clc
dec
pop
loop
jne
cmp
mov
or
inc
ljmp
push
in
arpl
pop
xchg
fmul
push
test
loope
adc
ret
mov
dec
in
rcrb
pop
sub
inc
lret
loop
mov
xorl
sub
jp
mov
and
and
movsb
loop
ss
pop
mov
pop
sbb
fs
sub
adc
movsb
cli
sbb
pop
mov
cmpl
imul
or
scas
imul
push
jle
push
lods
imul
out
fsub
jae
jnp
inc
loopne
sbb
jmp
adc
or
gs
push
pop
lea
repz
xlat
sub
jg
fistps
imul
rorl
push
imul
sub
ljmp
mov
lahf
out
scas
arpl
outsl
test
scas
test
daa
test
or
or
or
jno
or
add
sub
inc
sub
movsb
lods
xchg
into
or
test
out
fs
or
aas
in
ljmp
mov
xor
mov
pop
lds
lock
pop
mov
loope
mov
cmc
add
aaa
cmp
out
ljmp
pusha
add
adc
and
cltd
cmpsl
and
out
and
mov
dec
sarl
jge
pop
inc
mov
shl
mov
icebp
cmp
or
adc
mov
lcall
into
into
jb
or
into
inc
pusha
in
repz
push
cmp
daa
mov
vsqrtps
lods
dec
outsl
popa
add
xor
xor
mov
scas
xchg
test
or
cld
mov
dec
xchg
xchg
addl
out
jo
lock
mov
std
test
jecxz
test
cmp
lea
daa
or
sti
ja
rcll
lea
repz
rorl
sub
pop
add
mov
cmpsl
xchg
pop
xchg
lret
arpl
sbbl
movsb
cld
xchg
sbb
loopne
adc
push
xchg
mov
lcall
push
imul
and
ror
imul
sub
add
mov
aad
and
push
xchg
mov
addr16
pop
lret
insl
fistpl
add
stc
nop
sub
mov
push
xor
inc
xor
int
mov
dec
mov
in
outsl
roll
push
xchg
pop
push
sbb
xor
cmp
iret
scas
js
nop
inc
xor
hlt
jge
mov
scas
cmc
sbb
cmp
cmp
push
int
clc
rcr
bswap
mov
sbb
mov
push
lea
mov
push
pushf
mov
push
ds
mov
push
stos
lret
cmc
mov
mov
mov
inc
cmp
cmp
mov
dec
add
mov
sub
clc
ja
cmpsl
jnp
xor
xchg
and
ja
mov
pop
add
arpl
xlat
push
mov
mov
cld
les
mov
fsub
xor
adc
dec
enter
icebp
out
cmp
jo
pushf
add
push
mov
xor
push
nop
jmp
out
mov
lea
xchg
dec
mov
add
scas
stos
mov
out
mov
stos
jno
mov
nop
fs
xchg
xor
test
adcb
int3
mov
lea
mov
dec
xchg
cmpsl
pop
mov
mov
int3
mull
ljmp
cmp
xor
sub
je
adc
xor
or
aam
sub
loop
sbb
xchg
cmp
xor
xchg
jno
ds
jo
add
scas
gs
xchg
andl
inc
mov
jg
inc
xchg
mov
xor
aad
jl
dec
cmpsl
mov
xor
iret
or
cli
cmp
lret
mov
push
nop
jb
xchg
repnz
shrb
add
out
popf
xlat
hlt
xchg
xchg
sar
adc
aam
jg
xor
test
add
lods
popf
push
fimull
pop
pusha
pushf
inc
cld
mov
cmp
test
push
mov
adc
sub
mov
icebp
hlt
sti
fwait
mov
mov
arpl
test
mov
das
or
pop
xchg
pop
push
pop
aad
mov
dec
stos
fnstcw
jns
cmp
push
mov
pusha
lcall
popf
das
dec
mov
and
test
add
push
sub
and
repz
mov
sbb
pushf
cltd
pop
jecxz
mov
js
mov
gs
pop
les
mov
aam
movsb
adc
dec
add
das
les
jno,pt
cltd
aad
inc
mov
jns
lret
lods
hlt
push
lahf
push
mov
lret
cli
inc
popaw
addl
pusha
lods
iretw
lret
imul
inc
inc
mov
das
jnp
in
add
faddp
in
push
jns
adc
ja
shll
lret
sbb
mov
and
xor
push
xor
test
popf
push
lds
outsb
xchg
negl
dec
cmpsb
stos
dec
out
pop
inc
repz
sub
andl
push
xlat
push
and
arpl
lea
push
addr16
iret
gs
mov
std
gs
add
mov
in
or
mov
inc
inc
jae
xchg
adc
xchg
mov
rorl
pop
clc
push
test
and
sub
shr
bound
cmc
mov
popf
push
adc
arpl
or
adc
lret
sub
pop
adc
pop
pop
dec
test
xchg
cmp
iret
xchg
cmp
mov
add
mov
sub
add
dec
fcomp
pop
je
mov
hlt
cmp
mov
out
bound
outsl
mov
ljmp
mov
sub
pop
or
mov
mov
fldl
rolb
ret
fs
rcrl
fdivs
push
jns
lds
insb
inc
jecxz
nop
inc
or
rol
push
mov
inc
xchg
jmp
lock
sbb
cmp
loop
xor
mulb
inc
jb
cmp
in
sub
xor
mov
cwtl
popf
lahf
add
mov
xchg
popf
rorl
mov
jmp
dec
sahf
jo
stos
mov
enter
call
aas
inc
aaa
ret
xchg
push
pusha
xor
sub
mov
cmp
push
inc
jmp
mov
movsb
leave
jecxz
push
or
clc
lea
mov
pop
xchg
dec
mov
out
fbld
mov
rolb
dec
mov
in
je
xor
fnstenv
jb
jmp
data16
lret
repnz
push
cmp
cli
adc
ret
adc
movsb
mov
outsb
clc
mov
jo
dec
pusha
ja
ljmp
dec
data16
mov
test
dec
push
cmp
dec
aas
sbb
xor
push
cmp
bound
jp
mov
scas
leave
ret
push
inc
xchg
mov
sub
movsb
fstp
cmp
xchg
inc
mov
adc
mov
adc
arpl
or
mov
cmp
add
dec
stos
or
xor
push
movsb
movsb
and
lods
cmp
fnstenv
mov
pusha
daa
enter
aaa
or
out
es
dec
push
pop
add
shlb
xor
lea
cmp
inc
adc
movsl
bound
mov
and
sbb
lcall
mov
inc
sti
jb
dec
and
jne
mov
inc
cmpsb
mov
add
cmc
dec
lahf
pop
mov
leave
add
std
mov
clc
sbb
jge
stc
inc
ret
das
scas
out
xor
dec
aam
mov
mov
rclb
sbbb
outsb
insb
push
rolb
pop
push
jns
bswap
dec
scas
and
xchg
push
outsb
je
shrl
and
inc
loopne
sub
pop
dec
add
inc
vpsubusb
sub
insl
adc
or
leave
dec
icebp
xchg
pmulhw
adc
dec
out
adc
pop
insl
add
lods
jmp
movsb
dec
adc
or
xchg
pop
into
xchg
sti
pop
imul
test
add
cld
dec
push
mov
dec
xor
mov
jne
aam
lods
aas
les
test
mov
and
jo
push
and
and
std
xchg
adc
push
lods
cmc
mov
repz
and
in
push
testb
add
jb
xor
shll
test
test
mov
adc
ret
inc
repz
cmp
test
adc
mov
cmp
in
imul
shll
int3
inc
fldt
pop
or
dec
in
stos
fwait
sbb
dec
shrl
add
xor
add
cmp
out
out
cmc
pop
xor
outsl
xor
outsl
fistl
mov
in
shll
imul
add
fistpl
mov
cmp
insb
out
test
fisubs
repnz
bound
dec
push
jmp
mov
ret
adc
mov
popf
jae
mov
sub
or
sbb
std
repz
out
out
lods
repnz
shl
push
test
dec
push
movsl
xor
mov
pop
stos
add
lahf
adcb
adc
sti
in
cmp
inc
and
rcl
mov
addr16
sbb
sbb
xchg
pop
jno
stos
ljmp
ljmp
popa
mov
dec
outsb
mov
pop
mov
scas
pop
cltd
bound
stos
adc
pusha
xor
jle
push
aaa
into
inc
sub
inc
leave
mov
cmp
in
or
cmp
mov
and
aas
adc
inc
push
adc
subl
sub
inc
push
jo
hlt
add
nop
lods
mov
cmp
cwtl
xchg
das
add
aaa
ret
inc
fistpll
add
sub
adc
sbb
loop
add
pop
mov
and
inc
inc
pop
mov
mov
aas
sbb
pop
pop
daa
pop
scas
ret
fidivrl
test
mov
push
repnz
cmc
neg
in
out
das
jnp
pop
out
adc
cmp
push
out
fists
mov
push
adc
scas
mov
punpckldq
out
leave
mov
cmp
std
lret
int
arpl
jne
xchg
cmp
push
mov
adc
outsb
addl
aas
mov
loop
out
inc
in
add
movsb
mov
cld
jo
xor
mov
jne
adc
cmp
sub
sub
hlt
fdivrs
ret
pop
or
in
movsl
out
push
ret
es
sub
in
lret
sbb
sbbb
fisttpl
test
jmp
xor
repz
rorl
imul
outsb
imul
push
sub
jae
out
xor
pop
xor
xor
fbld
in
les
jge
cmpsl
adc
lock
cmp
ljmp
or
adc
xchg
mov
popa
add
cmc
mov
inc
pop
xchg
mov
jne
mov
dec
pop
lret
cmp
insl
push
movsl
push
int
movsl
fnstenv
mov
test
mov
repz
je
sbbl
xlat
cli
loopne
int3
xchg
xor
ja
rcr
ja
repnz
dec
inc
xchg
cmp
negb
fmul
mov
sahf
test
jnp
pushf
push
outsl
repz
adc
int3
pusha
dec
outsb
andb
cwtl
cmpsl
outsb
sbb
adc
and
test
fsub
jl
addr16
mov
push
sub
outsl
rcl
jmp
mov
clc
pop
mov
bound
jnp
cs
out
push
mov
js
outsb
xchg
sub
jne
dec
mov
lock
out
rcr
shr
push
dec
das
aaa
lahf
je
enter
cmp
inc
push
adc
popf
das
lret
daa
inc
rcll
sbb
imul
dec
not
adcl
cli
mov
aaa
lea
lods
popa
mov
lds
rolb
push
imul
into
adc
out
std
scas
pushf
lahf
enter
mov
sub
lret
sub
loopne
jmp
adcl
adc
fsubs
pop
and
adc
pop
jns
cwtl
dec
add
jmp
sbb
stc
pop
push
negb
ds
lods
cli
cmp
or
mov
ja
xchg
decb
xor
and
cmp
movsl
dec
enter
xor
sub
out
lock
lsl
sbb
subb
dec
mov
loope
stos
in
or
call
add
cmc
jne
ds
xchg
bound
iret
push
jg
and
and
push
mov
jb
mov
into
xor
cs
mov
push
xchg
shrl
in
ret
repnz
mov
and
inc
and
out
aaa
jle
addr16
and
xorb
adc
sub
insb
fwait
mov
xchg
or
dec
push
jbe
pop
ss
daa
cmp
inc
js
cmp
jp
pop
xchg
jl
out
fxch
test
inc
add
or
mov
cmc
lahf
sti
or
out
rcrl
pusha
int3
hlt
xor
inc
or
mov
pop
adc
stos
mov
mov
dec
ret
sub
sbb
scas
into
push
fdivrl
scas
cli
nop
pop
xchg
jmp
mov
int
subl
shl
mov
inc
sti
and
into
jl
push
in
sbb
sub
mov
mov
jo
aad
cmp
stos
mov
stc
jge
add
sti
dec
ja
sbb
test
aaa
xlat
rorb
sub
ss
jle
inc
scas
xchg
aas
mov
iret
add
cmp
mov
xor
mov
fs
pop
bound
fistps
xchg
sbb
pop
jno
jg
scas
ret
inc
psubq
jle
scas
mov
push
sbb
mov
scas
sarl
ja
mov
lea
iret
sti
ss
mov
or
pop
xor
sbb
iret
dec
mov
jmp
out
pusha
cmpsl
lea
mov
sbb
fisttps
ja
cmp
fisttps
mov
ds
mov
pop
jno
xlat
xchg
sub
cmp
or
or
xchg
adc
lcall
pop
ds
fldt
pop
test
test
mov
lock
and
fdivl
lea
dec
mov
xor
neg
fidivl
inc
mov
jmp
cs
sbb
mov
push
mov
dec
xchg
sbb
int3
sbb
mov
or
sti
sarl
out
out
ljmp
jge
scas
popa
repnz
mov
push
stc
mov
in
jmp
adc
push
sub
cmp
jb
adc
in
jge
out
rcr
loop
pop
dec
lea
ds
sahf
mov
dec
dec
into
lds
je
cld
and
pop
cmp
sbb
enter
lea
test
xchg
dec
pop
mov
iret
jmp
push
outsl
fcomip
jns
jno
out
push
mov
into
dec
dec
xchg
subl
iret
cmp
pop
cmpsl
fwait
lret
in
fildl
repz
loopne
sub
pop
pusha
add
aam
mov
mov
gs
lock
into
repz
add
push
ret
push
loop
xor
dec
dec
loopne
cmp
repz
nop
cli
xchg
xchg
or
out
mov
lcall
popf
imul
ljmp
jnp
dec
push
jg
rclb
loopne
cmp
push
ret
cld
sbb
add
sub
mov
sub
adcl
cmp
jo
xchg
xchg
popf
ja
stc
sub
xchg
decl
xor
or
jmp
jmp
ret
inc
loopne
nop
xor
jne
pop
insl
push
lods
mov
out
xor
jp
xchg
cwtl
outsl
pusha
and
sbb
push
push
iret
in
mov
pop
shrb
sbb
xor
or
enter
sbb
mov
mov
mov
repnz
mov
pop
push
cwtl
pop
ja
mov
ret
dec
enter
mul
dec
push
repnz
xchg
nop
daa
inc
xor
outsl
aad
sub
pop
repz
pop
lea
fisttpll
cs
ret
scas
or
lds
clc
mov
mov
push
sbb
lods
mov
xchg
arpl
fcomp
push
and
lods
out
negb
pop
ds
subb
xchg
dec
push
incl
fimuls
sbb
jmp
das
andps
mov
fidivrl
loopne
and
call
sbb
mov
xchg
mov
inc
jne
fwait
adc
les
mov
jmp
fdivrl
jae
outsb
sbbb
lret
lret
dec
lret
jecxz
and
inc
bound
inc
fistpl
sub
inc
test
mov
and
stc
fsubrl
mov
sbb
cmpsl
fisttpll
popa
dec
cs
and
mov
sbbb
xorb
leave
mov
cli
adc
je
mov
inc
icebp
cmc
adc
adc
ss
push
das
movl
or
ret
test
loope
jo
test
mov
mov
and
inc
xchg
out
pop
hlt
sub
rcrl
aas
enter
std
pop
cmpsl
xchg
inc
push
sbb
fmuls
mov
aam
mov
dec
orb
and
lret
loopne,pt
cmp
jne
test
stc
xchg
vmovdqa
dec
inc
aas
sahf
loopne
ljmp
lods
mov
sub
hlt
in
xor
into
aad
dec
adc
mov
ljmp
pop
or
lock
add
jae
push
js
int3
aad
push
cmpsb
jns
adc
jge
adc
loope
in
mov
inc
out
or
inc
jecxz
jnp
js
dec
andl
fistpll
mov
mov
sub
pop
lods
and
sbb
mov
loope
adc
lods
or
inc
stos
inc
test
lret
mov
xor
shrb
adc
aaa
aam
cmpsl
jne
stc
mov
or
sbb
das
stos
pop
dec
shll
add
jecxz
iret
iret
mov
idivl
roll
iret
and
aad
fwait
inc
aaa
lcall
in
xchg
mov
dec
jne
ret
pop
and
and
arpl
call
jae
vfnmsub231ps
dec
pop
cmp
inc
xlat
shlb
xor
add
bound
push
and
hlt
imul
int
add
sub
popf
lods
iret
jae
xchg
xor
add
sub
or
push
leave
imul
ret
data16
mov
inc
into
jae
inc
push
bound
add
fistps
ret
das
rcll
ds
clc
mov
hlt
out
xchg
xchg
test
pop
outsl
bound
popa
cmp
mov
push
adc
or
mov
int
dec
fistpll
rolb
jae
ds
ja
das
arpl
xchg
or
mov
arpl
fcoms
aas
ftst
push
mov
xor
lock
addr16
inc
lods
adc
aaa
lods
repz
xor
and
inc
in
mov
cmpsl
out
mov
pushf
mov
mov
push
cld
push
jbe
lods
sub
jl
adc
scas
sub
std
cmpsb
je
mov
divb
insl
pop
addr16
mov
scas
pop
je
pop
cli
push
cmpsb
pop
xchg
push
movsl
cmpsl
sbbl
add
xor
dec
dec
xchg
int3
in
cmpsl
fisubrl
out
sbb
pop
push
jle
call
imul
push
xor
xchg
xor
fnstcw
jmp
mov
push
sub
gs
shlb
and
xchg
dec
fsubrs
pushf
inc
in
push
mov
ret
inc
sub
mov
xchg
call
dec
mov
hlt
cmp
das
or
adc
in
inc
xchg
sub
adc
sbb
jmp
out
lcall
sahf
incl
outsl
or
test
daa
das
scas
mov
mov
mov
loopne
sub
sub
inc
sub
fldl
dec
jmp
lods
adc
std
xor
lret
insl
inc
sub
iret
imul
jbe
mov
enter
cmp
inc
xchg
and
cmp
mov
ret
sub
jb
xor
xor
rcrb
fs
jae
bound
add
jo
movsb
mov
dec
pop
cmc
lret
mov
shr
cmpsb
xor
int
push
xor
loope
xchg
aad
lock
mov
pop
iret
test
and
addr16
xor
movhps
imul
or
loop
push
mov
arpl
or
sahf
cmc
vminss
push
inc
nop
xor
pop
bound
stos
ficoml
jge
clc
icebp
leave
les
lock
jne
cmpsb
les
hlt
sub
int
jne
test
arpl
xchg
es
repnz
outsb
cltd
and
popa
test
push
push
sbb
jbe
sbb
push
dec
cs
cwtl
inc
arpl
add
daa
rcrb
and
lret
lock
fistl
push
paddusw
push
pusha
vphaddwd
mov
aad
push
insl
adc
rclb
cmp
out
les
scas
loopne
or
call
test
push
push
or
loope
lret
roll
fs
lods
in
aaa
cs
push
daa
cmp
push
xchg
inc
cltd
test
aaa
jo
sbb
sub
cmp
je
cmpsl
adc
ljmp
push
gs
jnp
xchg
and
stos
and
cmp
ljmp
daa
test
inc
sbb
push
jo
setb
xor
das
mov
loopne
fnstcw
sbb
cmp
aad
sub
lcall
in
inc
fnsave
xor
mul
sub
outsl
jmp
sbb
mov
add
enter
filds
xor
xchg
imul
movsb
sbb
cmc
lcall
test
dec
pop
leave
imul
mov
fldl
dec
outsb
inc
jl
jmp
daa
jno
dec
fstpt
popa
imul
dec
push
in
int
adc
xor
cmc
popf
rorb
aam
mov
dec
add
cld
fwait
pop
aas
mov
inc
cltd
mov
sbb
movsb
jp
mov
out
sub
clc
and
popa
mov
stos
adc
test
rorb
dec
shlb
je
push
xchg
stos
mov
xchg
jo
popl
or
sbb
std
and
repnz
push
jg
mov
add
test
sbb
mov
sbb
stc
stos
cmp
jno
testb
mov
movsb
popf
imull
dec
stos
and
or
sbb
xchg
insl
js
out
sub
cltd
or
out
fiaddl
adc
in
push
push
nop
mov
xor
je
jb
adc
shll
sub
ror
cmp
push
adc
mov
aas
cli
jp
push
jnp
xchg
jg
dec
cmp
roll
insb
mov
cmp
mov
mov
movsb
add
pop
push
inc
mov
mov
pop
mov
sub
dec
pop
femms
ret
pop
adc
push
outsb
or
mov
in
mov
or
ss
leave
mov
fsubrs
sbb
out
aaa
adc
subl
addr16
mov
cmp
xchg
test
xchg
idivb
or
pop
mov
movsl
into
xchg
xchg
jmp
xchg
dec
lcall
call
and
or
repz
sbb
add
xchg
sub
xor
and
and
xor
bound
adc
mov
xlat
mov
ss
add
jae
sbb
sbb
push
hlt
ret
cmp
pop
and
mov
pop
push
xor
in
cwtl
iret
idivl
lea
dec
xor
xor
imul
sbb
stc
scas
lods
mov
mov
js
int3
sbb
inc
cmc
xor
int
sbb
ljmp
jp
and
adc
dec
mov
lahf
add
push
fwait
cmp
xchg
pop
lret
jb
or
out
cmp
enter
clc
push
sub
fdivl
cmpsb
jle
pop
rclb
leave
lods
mov
fwait
pop
jo
lret
in
push
sub
mov
test
lds
pop
push
push
imul
mov
movsb
xchg
sbb
test
daa
lea
lret
rcrb
pop
mov
test
js
add
scas
out
xchg
xchg
xchg
or
xchg
jo
cmpsb
jmp
push
or
jg
insb
dec
into
and
push
cmp
mov
jecxz
daa
inc
push
sub
out
push
mov
dec
lods
jae
jb
pop
call
cmp
out
pop
jae
pop
add
call
mov
add
out
loopne
fcmovne
int3
pop
lcall
cmp
or
inc
scas
mov
sbb
out
sub
lret
aaa
cmc
leave
xor
aad
sub
repz
inc
adc
xchg
aam
pop
je
adc
enter
cmpb
lret
or
addr16
adc
pusha
lea
mov
inc
xor
iret
inc
and
pop
stc
adc
sub
jo
movsl
test
xchg
sbb
test
or
or
scas
mov
sbb
adc
mov
lcall
ret
cmpsb
aas
loope
sbb
cld
movsb
xchg
roll
repnz
push
cmpsl
scas
addr16
jo
sbb
push
icebp
xchg
mov
jne
xchg
je
std
sbb
lret
out
loopne
pop
adc
sbbl
imul
and
xor
push
xchg
rep
cltd
mov
sbb
mov
iret
mov
jmp
imul
adc
icebp
mov
pop
and
out
jns
loope
dec
arpl
in
push
stos
fcoms
out
sub
xor
cmpsl
outsb
or
lret
jns
fsts
mov
incl
mov
repnz
loopne
data16
ret
ds
aam
shll
cwtl
rcr
outsl
mov
lock
inc
loope
inc
dec
bound
xchg
mov
roll
lret
fistpl
ret
imul
test
or
stc
mov
jo
popf
testl
in
call
pop
popa
rcl
jmp
mov
vmulsd
lods
fcmove
push
mov
mov
pop
lret
fnstcw
sub
cmp
xchg
test
setne
out
fstps
test
pop
pusha
loope
xor
out
imul
push
dec
xchg
push
cmp
and
cmp
sahf
mov
cwtl
cmpsl
pop
ficomps
das
xchg
js
xchg
xchg
bound
cmp
sub
ds
jne
daa
push
push
insb
fs
nop
ret
aad
jbe
pop
sub
test
mov
push
pop
xchg
sahf
mov
fs
mov
enter
xchg
push
push
push
sbb
outsl
cmpsb
in
pop
movsl
and
lcall
sbb
es
orl
lretw
lds
iret
sub
stos
mov
addl
fsubp
shlb
push
mov
sub
leave
mov
adc
jl
xchg
popa
sti
std
add
cwtl
insb
or
and
stos
inc
push
addr16
rol
test
mov
in
cs
in
xor
rcl
movsb
scas
fidivrs
push
xchg
sbb
aad
out
rclb
daa
and
push
or
out
sbb
icebp
mov
pop
fstps
int
iret
jns
mov
pop
repz
mov
stc
mov
aad
loope,pn
ret
or
xchg
fwait
cld
fisttps
mov
test
or
sub
xor
lahf
mov
or
jecxz
ret
xchg
enter
sub
popa
cmc
cmp
stc
enter
push
pop
repnz
jg
push
dec
arpl
adc
adc
adc
push
mov
xchg
dec
movsb
xchg
outsl
leave
bnd
inc
and
adc
or
aas
scas
das
cld
or
sub
sub
mov
ret
push
insb
cltd
xchg
adc
and
dec
push
aad
inc
xor
cld
push
push
push
xor
mov
ret
adc
lahf
sub
push
jecxz
out
popa
cltd
xchg
hlt
dec
sub
pushw
adc
and
enter
pop
cmp
gs
mov
andb
nop
lcall
jb
test
insb
adc
push
js
das
xor
mov
insl
mov
dec
push
popf
push
cmp
mov
out
or
cli
push
adc
or
sbb
pop
sbb
scas
lcall
int
dec
sub
pushl
cmp
sahf
test
lret
bnd
testl
lods
or
cmpsl
push
rcll
std
rorl
inc
and
mov
outsl
mov
mull
and
test
mov
lcall
jge
dec
adc
xchg
int3
lods
fwait
jmp
cltd
stc
inc
and
hlt
push
dec
ret
adc
inc
ret
cwtl
jmp
push
fists
pop
cwtl
inc
cmp
fwait
jns
adc
int3
mov
aam
lods
xchg
cld
jo
mov
dec
dec
popa
ds
aad
cld
add
mov
call
pop
inc
mov
shlb
rcrl
pop
cltd
xor
mov
pop
xlat
testb
jns
and
neg
pushf
mov
mov
mov
adc
sub
jns
cmp
inc
jge
xchg
shlb
mov
cld
lcall
pop
cmp
inc
fists
dec
sarb
dec
xchg
fadds
lahf
add
das
sbb
stos
pop
and
mov
cmpsl
insb
xchg
ret
push
xchg
fistpl
in
sbb
cmp
inc
cmc
lret
mov
pop
pop
sub
cmp
fwait
xchg
pop
lock
jo
lret
add
leave
sbb
inc
subb
bound
xchg
pop
int
ret
sbb
adc
ret
xor
jae
das
subl
sbb
repnz
enter
pop
xor
push
jmp
dec
fwait
sbb
inc
jecxz
movl
dec
push
and
push
or
inc
push
or
mov
or
mov
sub
cmpsb
or
xor
pop
movsb
xor
ja
aad
popf
xor
push
popf
je
mov
mov
and
jp
pop
fwait
mov
inc
mov
jmp
xor
push
jge
push
jecxz
sbb
mov
mov
xchg
ja
out
adc
pop
jle
insl
sbb
cmp
push
or
jg
dec
sub
cld
cwtl
xchg
inc
inc
xchg
and
cmp
test
mov
xorb
js
ja
mov
cs
dec
push
cltd
orl
and
pop
movsl
cwtl
cmc
mov
add
clc
in
cmp
cmp
and
mov
or
getsec
lret
cmp
imul
loop
incb
rol
test
dec
ds
ljmp
aam
call
xor
cmp
fisubrs
gs
iret
insb
rcrb
and
adc
imulb
sbb
or
dec
mov
aaa
jbe
add
mov
es
repz
dec
xor
dec
enter
mov
cltd
lahf
sub
pop
stos
sti
icebp
cwtl
cli
and
cwtl
jmp
jge
lret
roll
ljmp
and
dec
out
aad
jnp
arpl
sub
stos
jmp
adc
add
push
adc
lock
dec
or
into
sub
and
in
and
inc
or
enter
and
jno
fcmovu
iret
repz
add
stos
push
inc
test
pop
pushf
icebp
sahf
ss
lea
pop
or
sbb
out
cs
xchg
je
jmp
loopne
add
and
push
add
out
jge
cs
push
pop
fcmovnu
lods
arpl
loop
mov
mov
or
xor
sbb
push
push
and
pushf
sub
sub
push
cwtl
adc
test
or
or
aad
adc
adc
jge
mov
push
xchg
shlb
dec
icebp
xchg
enter
push
lret
popf
push
dec
jl
jno
push
mov
jnp
stos
mov
pop
insl
out
rcl
and
ret
or
in
pop
inc
jmp
cmc
testl
jge
negl
enter
incb
and
aaa
shl
popf
cmpsl
inc
out
mov
mov
mov
addr16
dec
jmp
cwtl
ficoms
int3
mov
pop
cmp
lret
sbb
lods
pop
mov
gs
aad
div
jno
jl
mov
mov
test
xchg
loopne
push
popf
add
outsb
and
sub
xor
ret
mov
outsl
out
lcall
pop
iret
dec
sbb
xchg
push
lahf
pop
sbb
jnp
cmp
cmp
xchg
out
lahf
in
or
outsl
jo
leave
dec
cmc
lcall
mov
inc
sbb
dec
and
or
movsb
jp
loopne
pop
rcrb
jl
das
out
jne
add
xor
movsb
dec
lods
xchg
or
jecxz
rcr
scas
arpl
xchg
adc
dec
pop
xchg
or
cmp
jp
and
leave
and
jb
pop
imul
push
fdivl
cmp
and
sub
adc
xor
faddl
mov
sub
hlt
cmp
pushf
xor
out
popf
sub
aam
addr16
mov
cwtl
push
lods
mov
repz
in
xor
les
sbb
cmpsb
inc
inc
adc
mov
in
push
testb
nop
movsl
xchg
into
lods
ds
pop
cmp
push
mov
imul
lock
cmp
sub
mov
add
jnp
mov
scas
movsb
gs
stc
sahf
orl
push
adc
dec
adc
sahf
and
pop
mov
ss
lea
pop
push
aad
xor
sarb
add
inc
leave
mov
into
sahf
adc
and
cmc
faddp
jno
sbb
mov
pop
jmp
shlb
adc
sbb
outsl
in
jp
and
loop
call
mov
xor
sbb
ficoms
popf
mov
mov
outsl
xchg
inc
hlt
hlt
ljmp
mov
add
ret
cmp
gs
popf
cli
cmp
mov
and
jmp
nop
sti
std
xchg
cmp
push
cmp
cmp
inc
popf
aas
sbb
xor
cmp
jmp
in
push
test
or
jno
cwtl
rolb
daa
lahf
repnz
mov
xchg
mov
and
mov
push
and
xor
jns
fs
push
mov
stos
mov
pop
sbb
xor
xlat
dec
out
rol
aad
stos
ret
add
frstor
cwtl
sbb
popa
movsl
sahf
cmp
pxor
push
push
jb
je
cli
mov
cli
xlat
outsl
mov
dec
xchg
pop
jns
push
and
xor
mov
jp
sbb
sub
flds
sub
ds
in
sti
pop
imul
ja
outsl
int3
cmp
jle
scas
xchg
cmp
and
sbb
inc
dec
adc
push
inc
mov
popa
int3
inc
sbb
mov
sbb
or
shlb
sub
ret
or
mov
sbb
into
loope
mov
roll
mov
mov
stc
std
les
sub
mov
fisubs
ss
jae
mov
xchg
pop
mov
sbbl
cmp
mov
stc
imul
xlat
dec
adc
out
adc
lods
dec
pop
sbb
dec
aam
leave
scas
inc
fwait
push
stos
dec
fadd
jp
fiadds
cmp
xlat
lock
ror
xlat
outsb
mov
jb
jo
lcall
out
xchg
xor
xor
mov
sub
dec
dec
jne
ret
inc
jns
push
dec
addb
sbb
fldenv
es
imull
jne
push
ror
pop
pop
imul
imul
xor
scas
ja
pop
sub
out
mov
push
mov
mov
dec
pop
in
loop
stc
xchg
std
das
pop
mov
fiadds
sub
xchg
sub
mov
mov
xchg
in
popa
xchg
inc
sub
idiv
pop
adc
ficomps
andl
es
mov
xchg
pop
mov
out
aad
in
push
es
mov
cmp
pop
mov
aad
jp
mov
fimuls
pop
cld
push
or
enter
and
and
fld1
loopne
or
adc
pop
pop
fstl
cwtl
fcomps
cmpsb
in
das
mov
mov
fisubrs
cmp
xor
cs
mov
xchg
dec
clc
push
cmpsb
mov
or
icebp
je
insb
or
mov
sbbl
sbb
jbe
xor
adc
in
scas
das
fldl
mov
sub
jno
jle
addr16
fwait
iret
mov
insb
jbe
test
pop
sti
inc
xchg
lret
sbb
xchg
stos
cmp
inc
mov
push
mov
sub
test
int3
insl
out
ljmp
xchg
andl
or
rcll
xlat
and
push
sbb
popa
mov
ficoms
mov
aad
in
dec
and
mov
hlt
mov
and
xchg
repnz
mov
test
imul
sbb
lahf
mov
mov
adc
aas
dec
aaa
xor
jne
dec
call
inc
frstor
iret
ljmp
push
fcomps
push
outsl
cmp
test
andl
lahf
in
xchg
das
push
xchg
stos
shl
or
jp
jmp
fstl
out
movsb
mov
inc
movsl
cld
xor
xchg
pop
lea
ds
test
cmp
sub
ret
nop
and
xchg
aaa
test
push
sbb
adc
pop
adc
sahf
inc
les
and
call
movsl
xor
out
xor
daa
stos
icebp
adc
adc
int3
jns
inc
js
mov
inc
pop
imul
jmp
pop
outsb
push
imul
jmp
out
mov
jle
data16
push
inc
ljmp
lret
pop
or
lock
mov
and
inc
jae
scas
lret
xor
arpl
mov
adc
cltd
and
xlat
inc
dec
cmp
dec
incl
xchg
into
inc
les
add
stc
mov
dec
loop
push
xchg
sub
mov
mov
aas
add
int3
push
adc
inc
push
xchg
notb
or
push
ljmp
push
dec
mov
cmp
mov
testb
and
mov
adc
and
sub
mov
lds
popa
jle
test
jmp
imul
lret
mov
sti
std
frstor
or
das
mov
lret
push
jl
das
jp
xor
in
insl
cmp
aaa
fisttpl
andb
xor
jge
push
and
jecxz
sarb
scas
xor
psllw
enter
push
xchg
sbb
and
mov
movsl
cmovl
xchg
dec
cltd
in
inc
sti
test
push
add
sbb
pop
loope
lcall
adc
daa
pop
add
cmp
pop
shll
scas
into
push
mov
mov
dec
std
sbb
aaa
dec
xor
dec
push
fisubrl
imul
ret
jbe,pn
pop
push
jb
mov
push
add
mov
xor
cmp
dec
push
lods
pushf
pop
addl
sub
dec
subl
stos
inc
or
arpl
mov
and
ja
loopne
movsl
mov
lods
pop
push
sbb
lret
rcl
in
cmp
push
sub
aad
jns
pop
int
mov
es
rcl
jae
mov
xchg
mov
lds
jae
xchg
dec
pop
adc
shlb
stc
pop
dec
rcrb
ffreep
or
mov
push
xor
in
push
sbb
add
pop
mov
pop
iret
jo
movsl
sti
push
jecxz
int
adc
inc
xchg
xor
push
int3
sahf
insl
jg
imul
sbbb
adc
std
cld
test
jle
xchg
mov
insb
dec
sub
push
clc
mov
inc
pop
pop
jb
test
lret
and
and
sbb
pop
imul
stc
out
mov
adc
fidivl
sbb
adc
pop
lahf
pop
and
das
lcall
jne
pop
mov
add
sti
fisubrl
in
push
jp
jne
fucom
add
aas
pushf
arpl
ljmp
mov
ret
les
inc
xchg
pushf
andb
js
cli
fisttpll
pop
je
es
test
dec
sysenter
xchg
dec
mov
cmp
clc
out
sbb
mov
in
add
xchg
shrb
push
or
stos
jp
notb
push
mov
ret
push
imul
push
fsubl
jle
mov
mov
std
lock
mov
add
fidivs
mov
sahf
dec
loop
push
jge
mov
mov
sbb
pop
adc
inc
push
pop
arpl
mov
movsb
pop
and
popa
insl
mov
or
or
int3
sub
cmc
mov
adc
xchg
in
xchg
arpl
xor
out
add
clc
testl
adcl
into
out
lods
lea
jp
push
fstpt
cmp
nop
xor
sub
nop
rcll
xor
and
hlt
ret
sub
mov
fisubrs
adc
lcall
fidivrl
int
stc
inc
enter
enter
popa
xlat
push
xchg
mov
popf
mov
xor
sub
and
and
and
dec
xor
stc
sub
pop
or
jns
xchg
lret
sub
add
jle
dec
or
push
push
mov
ret
icebp
lahf
int3
fwait
jno
rcr
jae
inc
sbb
fistl
into
add
jmp
mov
leave
js
cmp
jg
xor
gs
xor
push
push
out
mov
stos
sub
sbb
in
jl
cld
rcll
out
mov
mov
ret
cs
aam
out
sti
test
fldenv
xlat
sbb
aad
cmp
hlt
stos
inc
sarl
cmp
add
xor
and
clc
pusha
repnz
ficoms
pop
mov
int
dec
sub
out
shr
sbb
pop
inc
scas
adc
stc
pushl
or
xchg
outsb
jbe
test
icebp
cwtl
cld
cwtl
or
fstp
pop
rorl
cli
mov
ljmp
and
dec
adc
sub
and
adc
iret
stos
rorl
loope
or
into
pop
pop
repz
mov
pushf
jnp
loopne
sub
mov
stos
fidivl
fistpl
push
mov
stos
xchg
inc
shrl
iret
push
push
sarl
imul
add
psrld
sub
aas
js
imul
adc
and
dec
xor
xchg
data16
xlat
aas
pop
pop
push
xchg
nop
int
fimull
push
pop
gs
push
shlb
out
adc
jmp
or
adc
push
or
pop
cld
jle
xchg
jl
jnp
outsl
or
into
ja
repz
test
ja
push
int
or
push
ret
cmp
dec
repnz
jmp
sub
ficoms
or
pop
aad
fst
iret
lods
mov
push
xchg
bswap
mov
mov
cwtl
lds
ffree
outsl
pop
sub
adc
inc
and
xor
out
imul
xchg
rcrl
adcb
out
addb
pop
nop
aaa
rorb
jge
fs
div
pop
cmp
sbb
mov
pop
leave
bound
mov
loope
mov
jecxz
xlat
pop
ds
fcomps
roll
and
or
lock
out
cmpsl
test
lds
dec
xor
jnp
pop
inc
fwait
leave
or
mov
add
dec
leave
shl
aas
notl
add
cmc
fisubs
je
push
mov
mov
insb
int3
push
cwtl
fisttpl
mov
lahf
jge
sub
sub
hlt
std
mov
rorb
xor
push
mov
add
in
fcmovnu
mov
call
fdiv
or
icebp
push
or
lahf
jl
sub
test
icebp
sub
jecxz
dec
mov
push
sbb
cld
lock
dec
pop
rorb
cmpsl
xlat
pop
dec
movl
int3
negl
das
cltd
xchg
push
mov
pop
lds
xchg
jno
and
test
out
stos
add
mov
jne
adc
ret
aad
inc
pop
jge
xor
pop
faddl
mov
rcl
jno
aad
pmullw
mov
cmp
push
daa
inc
and
nop
mov
cmp
lcall
lock
xchg
lret
mov
cmp
mov
cmp
jp
sbb
mov
outsb
and
mov
adc
ljmp
push
dec
fs
rcl
test
jns
sub
fmul
inc
shrl
es
push
xchg
pop
jns
push
negb
jg
xor
out
xor
pop
inc
inc
lahf
sarb
fwait
or
fdivl
dec
loopne
xchg
test
jbe
or
add
adc
push
adc
adc
outsl
adc
lock
lret
push
jecxz
lods
jns
movsl
shll
fisubrl
dec
inc
add
lods
in
push
enter
dec
dec
outsl
mov
mov
sbb
pop
les
outsb
dec
jmp
cmc
jb
scas
mov
sahf
sub
inc
repz
mull
into
out
mov
add
pop
sub
push
pop
dec
loope
icebp
insl
jmp
cld
sbb
mov
sbb
mov
ror
jbe
mov
pop
cmc
mov
out
sub
sahf
scas
mov
popa
in
sbbb
dec
mov
cmp
mov
mov
loope
sub
push
fwait
mov
add
push
add
sub
jmp
and
stc
push
insl
jmp
xchg
sarb
sbb
sbb
ja
fwait
lret
push
mov
sbb
mov
or
dec
pop
movsb
into
ror
cmc
or
push
mov
call
xor
and
adc
cld
sub
or
mov
adc
inc
sbb
das
or
adc
aaa
mov
xchg
jae
dec
jl
imul
jmp
cltd
stc
lret
adc
std
cmp
xor
sbb
mov
jns
jb
sub
outsl
repnz
aaa
add
push
and
ret
loop
shl
lds
fwait
jo
test
stos
in
mov
mov
mov
adc
daa
sahf
insb
pop
jle
or
ficomps
pusha
push
and
sub
lret
lods
cmp
sbb
jbe
test
incl
stc
jmp
mov
mov
pop
xor
add
cmp
out
int3
insb
or
inc
sbb
push
push
call
mov
dec
int
mov
sub
mov
ljmp
mov
sbb
sbb
push
sar
cs
mov
shl
sar
test
inc
or
es
test
fsubs
shrb
mov
dec
mov
xchg
xchg
test
cmp
fcomp
and
push
jns
pop
dec
or
lret
sbb
outsb
lahf
jnp
js
mov
dec
ljmp
scas
inc
ss
imul
loop
es
popf
daa
stos
cmpsl
test
push
xor
sahf
cmpsb
pop
mov
testl
shll
xor
adc
add
mov
add
hlt
ret
into
daa
xchg
pop
mov
sub
in
xchg
mov
pop
cmpsl
movsb
cmpsl
cmpsb
push
jle
into
add
sbb
xchg
xor
add
sub
enter
and
jno
pushf
pop
test
add
push
shlb
fnsave
inc
cmp
sahf
push
lods
jbe
lods
pop
out
mov
add
ret
fwait
movsb
movsl
cmp
mov
leave
jmp
loopne
repz
xchg
push
stos
sub
push
subb
out
dec
mov
daa
popa
fucomi
cmc
out
push
cli
and
fcompp
sub
inc
cmpb
push
or
mov
cmpsb
inc
mov
jmp
cwtl
jb
daa
pusha
inc
insb
stc
in
jb
fildll
scas
sbb
cmc
rcrb
roll
in
and
js
jo
and
inc
mov
jg
jmp
test
fistpll
xchg
or
lods
flds
cltd
ret
les
push
test
or
xor
aas
out
sbb
adc
mov
inc
sub
jb
stos
jge
loopne
mov
push
loope
pop
push
in
add
shll
daa
mov
pop
fisubl
sub
mov
or
lret
in
lods
inc
insb
mov
or
mov
jo
jle
cmp
cmp
xchg
dec
insl
mov
inc
popa
movsl
fs
cmc
mov
or
in
adc
test
xor
jp
ret
aad
pop
fidivl
ret
lret
int
fmuls
add
jbe
add
lods
rcrl
rcl
clc
mov
xchg
fwait
icebp
mov
xor
cmc
popa
lock
add
or
pop
movsl
mov
pop
mov
popa
mov
cmp
and
pop
cmp
cmp
xor
scas
xor
dec
das
sub
and
xchg
lods
push
jb
mov
push
les
dec
sti
inc
mov
xchg
inc
out
loope
sbb
add
cmpsl
sti
pop
xor
pop
mov
mov
ucomiss
daa
in
xchg
lods
aas
stos
test
icebp
loope
pop
test
rcrb
fnstsw
inc
sbbb
sbb
fdivs
and
sub
js
fs
push
or
lret
mov
in
decb
roll
scas
sti
sub
aad
das
mov
scas
clc
xor
mov
lea
add
enter
inc
mov
outsl
std
xchg
jmp
xlat
popa
dec
filds
mov
or
shl
imul
scas
add
sti
das
mov
inc
inc
pop
insb
xor
mov
cmpsl
push
fwait
mov
and
hlt
shrl
sbb
sub
xchg
les
mov
push
sarb
and
scas
add
outsb
scas
das
out
jmp
mov
mov
les
and
inc
mov
loope
movsl
jns
fdivs
rcrl
movsb
xchg
xchg
xor
cltd
xor
add
pop
xchg
enter
mov
fcmovnbe
lret
imul
enter
and
lcall
loope
data16
shlb
cmc
aaa
sbb
inc
xchg
mov
out
push
cltd
popf
jg
hlt
dec
aaa
ss
sbb
mov
mov
mov
in
mov
fcoml
pop
pop
aam
cs
loop
sbb
out
mov
mov
pop
out
rcll
lret
test
fs
add
int
sub
lock
pop
js
xchg
inc
mov
loope
mov
nop
adc
ja
pop
mov
shlb
repz
dec
adcl
or
pop
pop
movsb
jg
and
push
mov
cmp
aaa
cmp
or
fwait
pop
mov
mov
loopne
mov
jg
cwtl
adc
pop
jnp
mov
sub
repnz
inc
mov
mov
sbb
rcr
xor
dec
pusha
inc
dec
aad
lahf
pop
test
leave
or
fpatan
es
sti
test
leave
addl
fnstcw
es
pop
jge
or
sbb
lret
and
sbb
and
je
out
fnstcw
and
scas
xchg
imull
hlt
in
popa
imul
in
or
pop
bound
adc
arpl
and
or
lods
sbb
icebp
push
xor
les
inc
in
in
add
inc
pushf
call
in
mov
repnz
jno
mov
scas
inc
lock
inc
bound
shrb
addr16
ds
cmpb
inc
pop
lret
jne
dec
xor
fimull
enter
mov
cmpsb
inc
dec
popf
in
cmpsl
push
test
rolb
pop
push
lahf
jl
xor
sub
xor
fdivrl
cmp
xchg
cli
jg
sbb
mov
ds
xor
call
mov
outsl
rcrb
mov
lea
scas
add
xchg
cs
and
xchg
and
mov
je
insb
xor
int
scas
lock
stos
enter
into
insl
mov
lahf
mov
sarl
imul
pop
rcrl
les
lods
lods
cmp
or
adc
cmp
int3
sub
mov
cs
loopne
test
idivb
loope
mov
push
imul
sub
movsb
jo
mov
mov
repnz
cmc
push
insl
movsb
mov
sub
xchg
mov
fldt
ficoml
sbb
push
mov
mov
push
mov
push
lcall
hlt
and
flds
popf
and
dec
mov
xor
mov
jae
dec
ljmp
dec
add
adcb
stos
mov
lods
scas
outsl
jmp
pop
popf
dec
add
shll
lahf
ljmp
xchg
bound
inc
mov
jle
repz
call
sub
test
cmpsl
ret
jae
inc
add
mov
push
xchg
imul
pop
jg
pop
movsl
dec
cwtl
adc
call
jle
mov
push
dec
int3
jmp
mov
fcmovnu
incl
xchg
inc
lods
push
mov
dec
and
sti
mov
sbb
dec
add
lcall
fwait
mov
sbb
les
push
jl
push
xor
push
inc
imul
cmp
mov
divl
movl
or
out
or
lds
arpl
rcll
sti
stos
idivl
negl
mov
hlt
aaa
es
sub
mov
mov
sub
out
dec
push
fildl
push
xor
dec
movsl
arpl
xchg
push
xchg
pop
cmp
jne
addr16
inc
repz
aam
hlt
pop
imul
loope
mov
jbe
pop
dec
aad
fsubs
xchg
mov
ret
mov
inc
out
data16
mov
pop
inc
mov
xchg
xchg
rcll
imul
insb
pop
fs
xor
enter
inc
dec
int3
test
leave
neg
int
in
push
out
test
je
outsw
inc
je
mov
arpl
cmp
mov
insl
inc
push
sbb
aaa
neg
sub
push
cmp
lds
sbb
sbb
stos
scas
mov
arpl
imul
mov
lea
loopne
mov
or
sahf
mov
das
cmc
sub
jecxz
mov
mov
jae
or
cmp
clc
fbstp
jae
lcall
cmp
push
push
popa
loope
cmp
pop
jnp
jmp
insl
sub
scas
jg
testb
pop
stc
jo
mov
stos
add
sarb
jp
stos
les
xor
xchg
mov
lahf
int
sbb
ljmp
xlat
or
push
adc
cmpsl
cs
inc
and
lret
adc
adc
dec
inc
add
cmpsb
and
imul
out
test
pop
pop
in
mov
psubsb
dec
leave
lea
mov
mov
andb
pop
mov
xchg
insl
gs
add
add
pop
arpl
test
cmpsl
mov
imul
jmp
jo
jg
sbb
addl
and
pop
stos
or
fcomps
dec
add
adc
aad
add
sbb
movsl
div
out
dec
jg
out
ds
cmpb
push
scas
mov
or
pop
xor
pusha
mov
or
push
shlb
inc
popf
mov
daa
data16
inc
rcrl
and
lds
push
insl
cmp
fwait
loope
pop
sub
sub
out
sbb
stos
mov
and
mov
jp
lcall
dec
aad
push
cltd
ftst
mov
pop
es
pusha
jns
xor
xor
add
inc
je
rcrl
xchg
cli
lret
stos
mov
test
loop
leave
xor
or
or
push
mov
cmovb
dec
inc
pop
fdivrs
popf
sub
jb
mov
inc
test
outsb
add
xor
incl
mov
or
pop
lret
pop
mov
mov
jmp
and
rorl
or
xchg
push
pop
pop
xchg
stos
jo
push
adc
xchg
ds
pop
xchg
cmp
pop
pop
adc
movsb
cli
outsl
fs
sub
or
movsl
adc
sbb
dec
scas
pushf
mov
scas
xlat
into
cmp
mov
loop
jo
add
push
and
fdivl
fimull
cmp
fisubs
jmp
pop
sarb
push
inc
insb
sub
jae
cmp
or
ss
aad
or
add
inc
cwtl
xor
pop
sti
aam
pop
xchg
cmpsb
in
mov
jp
add
cwtl
mov
nop
data16
flds
outsb
cld
xchg
mov
or
push
icebp
or
and
cmp
das
cld
cwtl
popa
insl
cmp
pushf
push
in
enter
mov
xchg
xchg
jb
jnp
in
cmc
scas
push
xor
cmp
jne
inc
fwait
in
adc
outsl
mov
fiaddl
or
stos
aam
in
sbb
jb
mov
ret
mov
mov
out
repz
loop
or
fldt
decb
aam
xlat
lds
icebp
jle
lds
xor
dec
pop
cmpsl
leave
int3
aas
dec
pushf
pop
dec
cltd
add
or
dec
xchg
popf
push
mov
test
jge
mov
dec
aaa
xlat
mov
in
in
nop
xchg
inc
lret
imull
ret
int
add
scas
lods
loopne
test
or
push
inc
xor
sub
cmp
test
adc
lret
fcoml
rclb
jae
out
aam
pop
repz
xor
and
imul
repz
xchg
xchg
add
and
sub
rcll
dec
icebp
xchg
mov
iret
lods
out
sbb
mov
roll
sub
dec
push
das
cmp
push
and
mov
icebp
subl
cmp
mov
jmp
in
lods
pop
loope
adc
movsb
mov
adc
enter
movsb
popf
gs
push
movsb
sbb
in
fwait
stos
pop
push
inc
movsl
pop
andl
ret
fcmovnb
xchg
dec
lods
inc
pop
pop
bound
outsl
bound
aam
in
je
mov
inc
pop
out
adc
jo
mov
add
and
push
or
mov
ss
sub
rolb
icebp
or
test
and
out
cwtl
pop
repz
push
xchg
loopne
jno
or
sub
inc
and
sub
or
mov
mov
out
mov
fs
push
lods
pop
add
sbb
addl
jno
icebp
stos
add
jmp
mov
lret
xchg
test
orl
bound
repnz
mov
stos
lock
inc
jge
fnclex
andb
push
xchg
dec
mov
mov
inc
xchg
push
xchg
addr16
dec
cmpsl
sbb
scas
movsb
adc
and
and
inc
lods
test
pop
sub
mov
mov
jp
aad
mov
out
outsl
adc
push
adc
pop
nop
aas
fsubs
mov
mov
inc
shl
cmp
sbb
movsb
repnz
lret
fnstsw
mov
mov
lret
jno
xor
mov
inc
rolb
push
adc
and
add
cltd
mov
stos
mov
sub
sahf
adc
cwtl
and
addr16
sarl
aam
lcall
sub
add
inc
call
out
das
mov
icebp
mov
mov
fnstenv
push
sub
dec
pushf
adc
daa
cld
scas
cmp
mov
lret
inc
or
push
cmp
pop
mov
mov
mov
sub
mov
and
adc
pop
push
jle
sbb
daa
mov
and
jno
push
in
mov
mov
push
sahf
fdivs
or
aam
inc
push
mov
cmp
idivb
dec
aaa
pushf
or
loopne
aas
fmull
pushf
stc
jns
mov
push
xor
jns
push
sbb
xor
inc
shr
xor
xchg
xchg
or
stos
daa
or
jg
mov
jbe
ret
lret
je
cmp
mov
sub
hlt
dec
xchg
mov
andb
mov
mov
shll
leave
imul
push
popf
loope
scas
mov
mov
fisubl
mov
pop
sub
into
nop
pop
aam
jmp
mov
mov
test
rolb
loop
jns
pop
push
stos
test
popf
sub
mov
and
jb
add
loop
aad
test
adc
lds
pop
pushl
push
fcmovb
push
loope
push
dec
pushf
stc
mov
in
xlat
std
push
and
cld
xor
xchg
mov
xlat
cs
xchg
stc
jnp
lods
push
mov
stc
call
bound
lds
adc
shll
andl
adc
push
sti
push
arpl
push
cld
pop
das
inc
je
sbb
sbbl
xchg
xor
imul
mov
cmpsl
rep
inc
sub
xchg
cmp
out
add
xchg
shrl
sub
ret
cli
call
push
jae
call
cmpsl
das
add
aas
add
adc
xchg
subl
pop
movsl
popf
inc
inc
or
cmp
sahf
push
mov
jo
imul
inc
dec
mov
jmp
lods
les
test
or
mov
fxtract
sub
fdivl
fxtract
push
addr16
fdivr
mov
sub
pop
cmpsb
cmc
jno
jp
icebp
or
mov
mov
aad
mov
mov
cmp
sub
xchg
adc
sbb
cltd
cmp
and
leave
std
test
hlt
pop
stos
pop
jge
icebp
push
sbb
outsl
push
je
call
dec
add
mov
loope
xchg
pop
inc
mov
xchg
repz
test
jno
push
aam
repz
sub
pop
shrl
lock
push
ret
loop
pop
pop
cmpl
test
aaa
sti
andl
adc
add
and
adcb
cmpsl
rcll
jo
dec
and
add
push
sbb
xor
enter
sti
xor
arpl
std
and
jp
shlb
xor
sbb
push
xlat
sbb
movsl
jne
mov
hlt
xor
iret
js
hlt
add
iret
orl
and
pushf
inc
int
xchg
insb
insl
iret
jns
cwtl
sub
pop
icebp
shll
mov
jl
xchg
push
mov
pop
movsl
sbbb
mov
add
xchg
dec
lods
adc
ja
aas
out
lods
in
andl
aaa
inc
inc
popf
test
sbb
cmp
push
cld
add
outsb
add
movsl
mov
out
mov
dec
jne
out
dec
jmp
dec
jle
or
shr
jecxz
roll
lahf
lahf
fdivs
xchg
pop
call
aad
nop
imul
dec
sbb
mov
stos
add
dec
jecxz
pop
and
add
pusha
xchg
sub
cmpsl
iret
ficomps
cmpb
and
fsubl
inc
jb
test
fdiv
loopne
xor
pop
xchg
mov
cmc
movsb
dec
mov
sahf
fsts
scas
jle
pop
xchg
fcmovnb
in
xor
scas
mov
push
mov
cmp
aam
pop
sbb
xlat
sarl
mov
sub
pusha
pop
pop
adc
popf
ret
sbb
jp
xor
xchg
push
cmp
incb
sub
and
push
cmp
ljmp
test
sub
aas
les
dec
jo
push
dec
xchg
popf
lcall
mov
clc
mov
in
fwait
ljmp
pop
sbb
cmp
add
in
repnz
fwait
push
dec
in
dec
mov
cmp
adc
clc
mul
out
imul
cmp
cmp
cmp
inc
incl
cmp
sbb
mov
loop
outsb
cmp
xchg
sbb
pop
pop
jle
adc
jmp
adc
cmp
mov
cmpsl
stc
sub
es
pop
test
adcl
xchg
pop
mov
out
push
or
rcrl
xchg
scas
add
int3
mov
jae
cmp
push
mov
data16
mov
lods
pop
faddp
fsub
cld
shl
jle
push
jne
mov
pop
mov
pop
pop
fdivr
data16
inc
je
out
adc
cmpsl
insb
push
ljmp
dec
jb
mov
js
stos
scas
pmulhw
mov
dec
cmp
push
out
outsb
subb
jg
jle
jle
call
mov
dec
in
cmpsl
out
or
mov
lahf
sbb
push
cmpl
push
xchg
xor
shlb
stos
cmp
pop
add
lret
or
inc
push
das
jle
lods
je
shlb
xor
mov
jns
imul
adc
bound
add
xor
jle
cmp
out
pop
add
jg
out
loop
jge
sbb
out
leave
filds
test
int
data16
ljmp
sbb
in
mov
stc
sahf
mov
dec
insb
jns
push
out
add
mov
and
adc
pop
xor
das
push
or
mov
gs
fdivl
ror
fucom
jle
push
mov
mov
inc
xor
cmpl
shr
and
dec
mov
mov
cwtl
shlb
ljmp
pop
push
stos
in
orl
int3
pop
xor
dec
pop
push
mov
add
cmp
rcrl
and
stos
stc
ret
sti
inc
movsb
xor
jbe
scas
xchg
rcll
jl
imul
lods
inc
les
mov
add
lea
add
dec
pop
ds
cmpsl
add
test
xlat
fists
repnz
push
stos
and
adc
pop
or
mov
xchg
int
xchg
mov
push
addr16
push
push
shll
cmp
xor
ret
adc
xchg
adc
xchg
mov
fwait
pop
push
push
fists
aam
and
rol
repnz
mov
sub
icebp
push
out
sbb
dec
jle
dec
push
mov
fbld
inc
mov
movsl
inc
sub
stos
add
icebp
adc
mov
jno
inc
push
inc
pop
out
and
mov
cli
popf
rol
inc
mov
shl
sbb
decb
loope
mov
or
pop
insl
gs
push
popf
jecxz
and
daa
xchg
shrb
adc
add
stc
add
mov
and
jb
cmp
stos
add
std
and
sub
loope
iret
imul
test
push
adc
shrb
adc
imul
cli
rcrb
xchg
push
cmp
shr
pop
movsb
fwait
icebp
je
push
add
es
cmp
call
lahf
cltd
cmpsl
rorl
mov
mov
xchg
outsb
js
inc
sub
mov
xchg
ret
mov
push
fdivrl
add
sub
or
sbb
push
out
out
xor
push
aas
pop
fcmovbe
dec
insl
cmp
add
pop
mov
nop
aas
xchg
mov
orb
cmp
repnz
or
add
subl
sub
pop
fistl
inc
adc
mov
daa
jne
fs
aad
xor
das
shll
push
rcll
cltd
in
add
add
jg
mov
cmpb
imul
cmp
stos
inc
mov
aas
loop
cmp
std
loopne
pop
in
inc
add
js
xchg
or
sub
std
ss
ret
sub
ret
push
jg
xchg
cmc
mov
and
in
mov
lret
in
mov
push
xchg
or
mov
sbb
push
test
pop
pop
jmp
pop
mov
ficoms
cmp
addb
inc
test
pop
push
insl
pop
xchg
push
scas
pop
sbb
leave
or
jge
mov
jge
scas
addr16
movsl
scas
mov
add
enter
xor
jp
mov
ficoml
cmpsb
sbb
cmp
gs
mov
jl
insl
inc
dec
mov
sarl
lcall
sub
jo
mov
int3
or
or
in
lds
jmp
and
mov
xchg
popl
pop
mov
sahf
push
mov
repnz
push
cs
xlat
clc
xchg
cmp
mov
jp
rcrl
sub
lds
push
test
jno
push
pop
popa
out
fdivp
iret
xchg
mov
not
push
sub
mov
ljmp
int3
xchg
push
imul
dec
jnp
sahf
ja
ror
cmp
inc
and
mov
mov
rcll
inc
loopne
cmp
push
aad
or
icebp
adc
pop
in
pop
inc
xor
fisubrs
xor
add
cmp
adc
out
dec
or
inc
fcoms
cmpsb
push
mov
xor
pop
test
push
fstcw
jp
in
loope
and
pusha
jg
xchg
jge
jb
mov
sti
int
mov
mov
xchg
roll
pop
std
mov
mov
mov
pop
into
shrl
insb
aaa
bound
and
pop
mov
and
sub
sahf
fiadds
mov
in
xchg
cmp
xchg
aad
mov
and
int3
sarb
mov
dec
out
dec
loop
push
sbb
push
ja
ja
dec
daa
mov
sarb
mov
and
cmpsb
ret
pop
mov
push
mov
inc
outsb
addb
and
xchg
addb
mov
inc
fistpl
xor
adc
shlb
and
idiv
out
rcll
add
cmp
push
cli
and
pop
bound
pop
add
ret
out
xor
aam
minps
lods
cmc
lahf
loope
xchg
pop
fs
jge
int3
inc
mov
jecxz
in
adc
jp
dec
lcall
into
sbb
iret
mov
mov
jp
mov
fstps
aas
je
and
cmp
cmp
and
xchg
fistl
cmpsl
int3
push
mov
add
push
pop
pop
mov
xlat
fwait
imul
ffreep
sbb
adc
lret
add
fwait
je
test
push
push
inc
mov
and
inc
mov
dec
orb
push
sbbl
pop
push
subl
dec
fsubr
or
pushf
leave
mov
idiv
ljmp
scas
imul
bound
inc
loop
pop
jnp
jno
iret
jmp
pop
push
lret
add
mov
pop
in
pop
and
clc
call
xchg
xchg
mov
lods
stc
sbb
sbb
idivl
cmp
outsb
mov
ds
cmp
mov
les
adc
les
adc
and
movsb
stc
push
data16
adc
ror
or
js
mov
das
inc
shrb
add
lds
rcll
push
jp
cmp
xor
mov
dec
hlt
sbb
jle
and
pop
mov
lock
je
out
test
add
sbb
cltd
out
loope
fdivs
and
push
notl
jo
jl
test
ror
popf
and
ja,pn
pop
repnz
dec
cld
pop
cltd
mov
mov
inc
inc
adc
dec
repnz
adc
dec
or
out
push
xor
pop
ret
jnp
out
pop
popa
cmc
insl
mov
pop
andl
sub
or
insb
stos
xor
enter
sbbl
clc
dec
mov
jnp
pop
sbb
xor
dec
leave
movsb
pop
cmpsb
mov
lcall
fcomps
push
icebp
ret
pop
int
fwait
testl
daa
jle
inc
sar
sbb
sbb
jns
insl
cmc
mov
jns
fdivl
lock
mov
pop
push
mov
pushf
int
and
mov
or
dec
sub
dec
scas
insl
aas
jecxz
cmp
xor
pop
sub
sub
into
in
scas
dec
push
aam
js
add
xor
sub
daa
int3
rcr
lods
jbe
fcmovnb
fstp
jecxz
sub
mov
xchg
aas
movl
mov
jo
test
orb
jp
xchg
mov
add
xor
cmp
shr
std
inc
cld
lret
dec
sub
jmp
out
add
mov
inc
push
sub
push
test
popf
cmpsb
lock
cmp
fwait
pop
or
sub
stos
inc
adc
addl
adc
in
push
push
sub
sub
adc
movsb
pop
inc
adc
push
or
test
pop
or
sub
bound
dec
push
bound
and
push
and
iret
js
das
stc
cld
cmp
cld
mov
mov
cmp
inc
addr16
fistps
scas
jns
adc
sbb
mov
add
cmc
cmpl
cld
and
enter
clc
popa
outsb
jle
xchg
jns
jae
cwtl
dec
stc
adc
enter
je
sub
push
mov
jmp
arpl
jbe
xchg
sub
lahf
mov
lods
add
cmc
add
xchg
sti
xchg
daa
fisubrs
push
ret
outsb
scas
add
add
jecxz
mov
adc
and
lods
mov
add
jmp
cmpsl
mov
sbb
xlat
jbe
cmpsl
mul
jne
nop
mov
jg
inc
mov
push
sbb
xor
or
test
mov
pop
jl
repnz
mov
pop
jno
aam
mov
nop
cwtl
outsl
into
scas
inc
fucomip
mov
loope
ret
mov
shll
fiaddl
xchg
stc
in
or
fs
mov
mov
mov
adc
fldenv
out
hlt
mov
mov
mov
mov
aas
into
stos
fdivs
add
fwait
inc
mov
sbb
hlt
push
pop
xchg
shl
insb
jp
leave
cld
jo
lret
loop
and
sub
outsl
adc
pushf
jnp
inc
enter
decl
add
rcll
xchg
xor
inc
and
ss
adc
cs
adc
mov
cmpsb
inc
or
jo
sbbb
enter
mov
sub
fsts
mov
xchg
imul
fs
shlb
jmp
mov
add
scas
dec
outsb
int3
sbb
fs
mov
aad
mov
jne
jbe
push
add
mul
out
pop
mov
mov
push
adc
cwtl
adc
xchg
mov
push
dec
and
outsb
out
inc
and
cmova
insb
mov
jl
add
push
dec
cmp
add
test
xlat
rol
sbb
scas
pop
stos
lock
pop
cmp
lods
sbb
fsts
lea
pop
pop
lea
notb
mov
mov
sti
sahf
dec
sub
push
sbb
mov
je
sbb
roll
and
movl
fisttps
adc
or
ja
sbb
jo
gs
pop
jle
repz
add
stc
int3
daa
inc
mov
push
mov
out
dec
sub
lcall
xor
repnz
cli
xchg
xor
inc
into
call
aas
jnp
rcrb
push
mov
xor
stos
shll
lret
jo
bound
xlat
rcll
cmp
push
push
pushf
push
sub
mov
mov
test
sub
imul
adc
out
and
inc
js
push
mov
std
push
jg
mov
mov
adc
ja
icebp
out
inc
push
sbb
fs
aad
inc
les
in
mov
test
sarl
inc
test
jns
and
adc
and
cmp
fisttps
xchg
test
pop
cmpsb
pop
push
sub
add
dec
pop
loopne
mov
jmp
arpl
dec
shrl
xchg
fdivrl
fisttpll
mov
cmp
xchg
dec
paddw
into
es
sbb
mov
sti
mov
shl
stc
scas
mov
dec
push
loope
sbb
mov
popa
dec
add
pop
mov
jo
xor
xor
mov
add
push
pop
and
jbe
xor
inc
mov
stos
ret
ficompl
lods
xor
adc
add
fisubrl
adc
rcr
cmc
ds
out
adc
fadd
cmpsl
fisttps
daa
in
lds
mov
inc
clc
scas
out
push
je
lods
push
mov
insl
call
inc
repz
rcr
jns
ljmp
lgdtl
iret
dec
mov
jnp
sahf
lret
scas
fcmovnb
stc
in
cmp
xor
sarb
sub
jl
ja
nop
dec
push
lods
mov
pop
enter
test
ja
mov
repz
cli
mov
mov
icebp
test
jecxz
pop
jbe
enter
push
push
jae
pusha
push
jns
inc
cs
repnz
jl
ss
lock
jl,pt
pop
repnz
sbb
dec
fs
ret
je
imul
mov
push
dec
adc
andl
out
movsb
pop
sbb
mov
cmp
mov
std
mov
leave
cmp
adc
mulb
or
adc
loopne
cld
adc
stos
sub
or
sub
mov
or
jmp
jg
test
adc
lahf
fwait
xor
xlat
scas
mov
dec
pop
enter
lahf
lods
xor
dec
push
or
sahf
mov
test
das
inc
cmpsl
xchg
cmc
mov
inc
pushf
cld
insl
lahf
int3
jae
bound
fcompl
add
popa
sub
mov
sbb
sub
mov
or
cltd
jmp
in
mov
pushl
cwtl
jp
cmp
std
push
or
arpl
add
cmp
dec
mov
jecxz
sbb
pop
mov
add
test
xorl
pop
cmp
or
jbe
inc
cld
mov
cs
add
jg
mov
mov
mov
mov
ljmp
xor
pop
ret
out
inc
xchg
sbb
jge
pushf
jl
roll
rorb
fnstcw
xlat
leave
in
sarl
movsl
nop
popa
fisubl
sbb
sbb
dec
fs
divl
add
inc
fldcw
mov
ret
lds
sub
pop
sub
cmpb
jp
jno
lods
lds
pop
enter
loop
jnp
bnd
cwtl
je
pop
inc
ret
sbb
pop
sub
ret
imul
inc
gs
dec
in
mov
cmpsl
roll
xchg
sti
cmp
mov
xchg
cli
pusha
push
inc
scas
clc
jae
dec
xchg
jmp
mov
xchg
push
push
loope
xor
aas
aam
cld
dec
and
sbb
arpl
dec
inc
dec
mov
shrb
rorb
arpl
pop
cld
pop
js
sbb
shll
repnz
fcoml
jp
xchg
arpl
psubsb
cmp
insb
pushf
jnp
insl
mov
in
and
mov
or
scas
mov
pop
aam
push
push
jg
std
mov
ljmp
lds
pop
mov
dec
in
mov
mov
pop
les
int3
es
add
fisubrl
cwtl
fs
pop
adc
fwait
mull
and
cmp
aad
xor
push
and
or
mov
cli
inc
push
adc
pop
push
mov
fstpt
mov
xorb
pop
std
adc
cmp
mov
pop
sub
pop
xchg
das
fwait
adc
repz
jne
push
jo
jb
add
cltd
popa
lcall
rorl
mov
insl
mov
stos
mov
and
jge
lock
adcb
jbe
mov
out
mulb
jnp
mov
jae
cltd
jmp
inc
fld
sbb
clc
shl
loop
sbb
sub
mov
dec
pop
pop
push
stos
loop
push
fldenv
and
lods
xor
xor
fdivl
loop
mov
cmp
pushl
add
sbb
mov
sbb
das
scas
sti
ficoms
and
mov
mov
rolb
stos
insl
daa
cltd
and
add
nop
and
into
out
cmp
in
adc
scas
test
xchg
aad
xchg
insb
fimull
popf
jl
cmp
cmp
jg
sub
imul
in
xchg
xchg
shll
push
idivl
lds
xor
test
add
jle
dec
push
add
stos
add
stos
fsts
jb
push
dec
test
dec
fwait
push
push
add
push
and
in
rcll
loope
adc
xor
pop
jp
lods
or
jnp
xor
fmuls
add
xor
or
cmp
cmp
outsl
adc
push
imul
push
sub
mov
push
cmp
and
cmpsb
scas
xchg
add
xchg
cmpsb
fs
xor
or
pop
loopne
mov
rorl
xchg
loopne
test
adc
rolb
shrb
stos
or
pop
cmpl
pushf
jp
add
or
or
mov
xor
add
cmp
cmpsb
mov
xchg
dec
mov
xor
pop
jo,pn
cmp
jne
aam
adc
xchg
dec
ficomps
add
lock
daa
mov
xchg
xor
inc
cmp
cmpsb
jmp
jge
imul
movl
test
les
mov
popa
sbb
adc
xchg
pushf
add
outsl
call
int
adc
sar
xchg
imul
cmpl
sub
mov
mov
popf
and
add
mov
mov
and
adc
maxps
popf
outsb
xchg
mov
xor
mov
pop
lea
sarl
lock
mov
dec
or
addl
iret
in
adc
rorl
subl
lcall
push
cmp
sub
movsl
dec
jp
pop
sbb
inc
mov
inc
mov
leave
lea
push
push
popa
mov
mov
popa
dec
shll
lock
adc
call
std
sbb
pop
add
nop
push
roll
push
sub
ljmp
pushf
popa
scas
and
mov
in
mov
push
pusha
dec
mov
leave
je
xor
pop
add
sub
loopne
xor
cmp
or
jbe
insb
jl
imull
mov
mov
lret
inc
ret
xchg
adc
icebp
test
add
push
test
cltd
es
dec
mov
cmp
test
loop
aad
ret
inc
push
in
rolb
mov
mov
sarl
test
cltd
sub
cmp
or
cmc
popf
inc
lea
lods
sub
add
bnd
out
pop
ffree
push
pushf
push
adc
in
in
mov
add
xor
adc
push
jl
inc
daa
dec
jl
jl
mov
xlat
call
and
je
xor
and
cmpsl
xchg
les
cs
jge
icebp
jg
pop
es
lods
jge
in
push
fwait
pop
mov
mov
xchg
leave
shl
or
add
xchg
in
mov
call
lods
jge
fsub
push
idivb
or
mov
out
push
add
cltd
mov
ja
mov
jmp
jnp
lock
lcall
inc
frstor
ficoms
movsb
stos
dec
es
dec
mov
xchg
sub
test
add
stos
and
dec
loopne
loopne
data16
add
in
xor
iret
pop
mov
pusha
cmp
mov
push
fidivl
jge
cmp
neg
push
xchg
cmp
fstp
dec
pop
inc
mov
out
push
iret
imul
jne
lea
in
mov
xorb
leave
inc
daa
aam
jge
mov
and
icebp
enter
dec
idivl
cmpsb
stc
outsb
dec
jne
xchg
pop
mov
mov
adc
imul
sub
push
outsw
cmpsl
mov
xor
xor
cmp
repz
push
adc
push
mov
out
xchg
sti
test
and
sbb
out
push
stc
dec
nop
dec
lods
enter
mov
push
jae
inc
xor
jo
adc
mov
out
movsb
out
pushl
test
repz
inc
xchg
fisttps
adc
mov
cmovge
imul
andb
push
inc
adc
mov
pushl
or
adc
add
or
xor
xchg
jo
sahf
outsb
or
sub
push
xchg
mov
xor
dec
and
int
sbb
hlt
movsb
pop
jl
movsb
pop
inc
cmc
xchg
xor
aad
xchg
jge
pushf
shll
repnz
mov
push
scas
adc
cld
sub
cli
rcll
push
js
sti
sub
fisubs
inc
push
sub
xchg
loop
fidivrl
inc
add
mov
mov
mov
movsb
lds
jg
aam
sub
cld
cmpsb
mov
dec
adc
jne
cmc
or
sub
xchg
mov
xchg
xlat
int
insb
nop
icebp
cmp
cld
sub
inc
fiaddl
fcmovbe
out
cmpb
pop
add
rcll
stos
setne
mov
ret
add
mov
cmpsl
ficomps
stos
add
inc
not
idivl
iret
add
rorb
addr16
mov
rorb
mov
mov
dec
pop
lea
jp
hlt
sub
hlt
jp
jb
insl
mov
push
fisttps
inc
jecxz
fldl2e
movb
das
mov
sub
jne
insb
add
int3
jae
pop
addr16
adc
cmp
adc
xchg
ffreep
mov
sti
fs
arpl
jg
dec
pop
jnp
je
mov
and
push
sbb
push
std
test
loopne
js
push
lret
cltd
jl
in
popf
sub
jge
adc
fnsave
fisttpll
imul
ret
or
clc
mov
sub
insl
daa
dec
inc
sbb
mov
xchg
push
lods
mov
mov
xchg
mov
or
add
xor
push
lock
mov
jecxz
pop
adc
movsl
jge
push
ja
test
add
push
loop
pop
xchg
sbb
js
push
ret
pop
push
push
addb
xchg
inc
fisttps
mov
stos
icebp
pusha
out
xor
rol
mov
inc
mov
mov
cmp
bound
dec
and
aam
and
push
ja
sub
or
mov
push
mov
jecxz
jmp
jo
jne
idivb
pusha
sub
push
lcall
stos
add
stc
jle
xor
mov
sahf
imul
ja
xor
es
mull
daa
call
mov
mov
or
pop
pop
mov
sbb
pop
addr16
and
fs
test
add
mov
jnp
daa
dec
mov
lahf
cwtl
mov
adc
adc
mov
pop
mov
nop
addb
sti
movsl
out
in
sub
mov
jmp
ror
push
into
mov
sbb
sahf
and
dec
out
sbb
stos
rorb
test
dec
cmp
pop
enter
pop
xor
add
out
ss
mov
fwait
notb
bound
out
inc
shlb
sahf
out
ja
pop
mov
in
pop
xchg
inc
push
jmp
stc
cmpsl
xor
or
test
dec
or
pop
push
cwtl
popa
sub
fcomps
push
outsb
adc
mov
push
sbb
stos
xlat
adc
fisubrl
or
xor
ja
jbe
insl
popl
enter
test
sbbb
pushl
xchg
pop
xor
ja
mov
xchg
push
mov
pop
fcmovne
shll
aad
das
pop
out
inc
sar
jle
out
fsubrl
mov
mov
clts
jnp
xor
inc
hlt
sub
test
mov
hlt
loopne
xchg
jns
sub
sub
cmpsl
insl
adc
xor
push
jl
jns
sbbb
push
in
xchg
push
outsl
sub
and
pop
popa
jg
adc
push
hlt
bound
adc
sbb
jne
mov
lods
xor
cmpsb
lret
repz
std
scas
dec
mov
dec
inc
inc
aam
popa
popa
sbb
mov
in
pop
or
mov
adc
ret
inc
negl
jle
ficomps
out
cwtl
adc
addr16
xchg
mov
repz
repz
push
lea
loop
mov
lock
adc
out
imul
adc
scas
mov
into
adc
jp
adc
inc
push
dec
xlat
popa
pop
fnsave
xor
sub
cmp
stos
addl
jge
fstpt
mul
sbb
cmp
mov
inc
sti
subb
xchg
inc
xor
xlat
int
fucomi
testl
fwait
cwtl
loopne
jo
scas
push
pop
stos
sub
jmp
adc
pop
into
clc
clc
xchg
and
pop
mov
mov
adc
push
jae
jno
pop
inc
push
enter
test
jb
jge
das
push
pop
cwtl
jo
pop
gs
xchg
or
pop
aam
hlt
push
dec
fstpt
mov
repnz
mov
out
adc
dec
repz
xchg
xchg
cmp
xor
dec
mov
ret
lock
dec
psubw
shrb
aam
fs
mov
cmp
jl
jge
cmp
add
popf
pop
loop
js
in
cmp
cltd
lret
cltd
mov
in
cmp
pop
pop
xor
jge
out
sbb
dec
sub
sbb
in
mov
ror
pop
sub
jbe
mov
pop
mov
out
icebp
movsb
adc
pop
shll
sahf
mov
inc
xchg
mov
mov
or
xchg
movsl
mov
and
arpl
add
push
sbb
push
imulb
cmp
std
xor
pop
push
popa
lret
jecxz
daa
rcrl
pop
and
in
enter
jo
sub
orb
out
jl
lea
aaa
jecxz
adc
int
pop
sbb
xor
iret
leave
aad
cltd
pop
inc
lods
push
xor
out
test
mov
test
rcll
and
shlb
jmp
pushf
cwtl
xor
push
push
ret
and
popa
insl
leave
call
insb
add
sub
insb
dec
dec
and
out
fnstenv
sti
and
mov
insb
add
mov
pop
or
pop
push
inc
pop
into
push
aaa
lds
dec
sti
mov
data16
inc
into
mov
out
lea
daa
push
mov
mov
xor
mov
popf
adc
lahf
fadds
inc
pop
xchg
imul
in
out
mov
dec
ret
push
loopne
mov
mov
cwtl
jle
push
leave
or
cmp
inc
jmp
pop
cvtps2pi
lods
adc
adc
add
nop
jbe
push
ja
jno
xchg
hlt
inc
mov
outsl
inc
clc
sub
hlt
xchg
in
adc
mov
insl
push
cmp
adc
sub
in
sbb
inc
arpl
fwait
xchg
sbb
iret
data16
into
subb
sbb
xor
pushf
aad
repz
mov
xor
push
into
dec
dec
das
sbb
or
inc
inc
cwtl
cmp
xor
not
ficompl
and
lahf
inc
and
adc
inc
cmpl
bnd
pop
movb
jle
lret
mov
fwait
sub
dec
push
sub
mov
inc
pop
sbb
or
repnz
and
dec
pop
in
enter
insl
mov
movsb
add
in
mov
cmp
mov
cltd
and
xchg
sbb
bound
push
sbb
out
push
jl
fs
inc
call
lahf
sbbl
xchg
loopne
xor
sub
in
ja
leave
rcll
dec
sahf
sub
data16
xchg
ffreep
push
and
xor
mov
iret
pop
pop
imul
xchg
sub
loope
or
xchg
js
sbb
fstpt
pop
sbb
loopne
test
test
or
shlb
hlt
hlt
jo
int
popf
sub
mov
pop
xchg
iret
or
jg
les
mov
inc
inc
xor
dec
or
cmp
insb
ja
js
test
xchg
jmp
sbb
adc
adc
inc
inc
imul
jle
inc
sbb
fmull
adc
mov
jp
shll
divb
paddsw
pop
or
int3
enter
cwtl
mov
fcmovu
imul
aas
xchg
add
mov
lcall
sub
sbb
push
jg
test
mov
rol
push
inc
daa
adc
repnz
dec
lods
frstor
and
lea
sub
ljmp
fs
xchg
outsb
and
rclb
incl
paddb
daa
pushf
sahf
and
adc
andb
ljmp
push
adc
aas
and
pop
xchg
jmp
test
fdivr
and
js
mov
fnstenv
xchg
jge
xchg
arpl
jmp
stc
std
cmc
xor
cmp
adc
in
es
ds
add
sahf
dec
push
push
push
cmp
clc
sbb
cmp
sbb
in
jo
or
adc
xchg
decl
dec
cwtl
fistpl
inc
fcmovb
notl
jno
ss
out
je
or
and
bts
push
lods
xor
insl
push
adc
add
je
int3
or
jns
sub
sub
dec
sbb
mov
aaa
or
jae
popw
xor
add
inc
decl
xlat
gs
scas
jne
jecxz
out
fmull
add
dec
pop
fs
jae
jo
scas
mov
adc
daa
fwait
sub
xlat
inc
pusha
clc
cmp
pop
sbb
push
popl
mov
in
out
sbb
fisubs
jns
ds
sbb
sub
dec
loopne
in
xlat
fwait
les
inc
test
addb
xor
stc
je
push
jle
mov
cmc
arpl
cmp
inc
sbb
sub
ljmp
test
dec
leave
mov
fcoms
or
sbb
test
mov
jb
sub
jno
fildl
pop
in
sub
adc
and
xchg
test
xchg
call
popa
cwtl
sub
xlat
enter
mov
sub
push
add
sbb
movsb
adc
xchg
dec
lret
in
cltd
inc
pop
cmp
or
inc
xlat
push
push
popf
mov
and
add
ds
mov
jle
xor
cmp
in
xchg
fisttps
pop
das
imul
push
jae
sbb
out
add
and
fists
in
pop
or
sub
cmp
imul
add
xlat
jmp
lea
xor
mov
pushf
xchg
inc
inc
out
rcll
push
inc
cs
push
out
mov
mov
sbb
xchg
push
push
sub
loope
lahf
sbb
cmp
lods
movsb
adc
cs
sub
xor
pop
and
lret
xorb
iret
adc
or
frstor
jb
clc
jl
mov
xor
sub
xor
in
xchg
lods
add
mov
mov
jle
int
arpl
mov
fcom
pop
test
push
pusha
mov
sahf
cmp
jbe
andb
andb
xchg
push
push
dec
dec
sbb
xor
movsb
je
mov
data16
movb
stc
cmp
sbb
repnz
mov
rol
xorb
push
mov
inc
xchg
mov
arpl
xor
mov
or
sti
shll
aaa
mov
inc
xchg
out
insl
sbb
es
ss
psadbw
xchg
cmp
lds
flds
mov
stc
rorl
shlb
cmpsb
test
xor
push
loopne
jb
in
or
fstps
add
div
jnp
rorb
loope
push
push
ss
pop
xchg
int3
lods
lds
adc
jle
and
fdivrs
xchg
icebp
test
js
push
inc
inc
std
add
test
adc
and
pop
loop
mov
push
inc
or
rep
jo
cli
xchg
mov
push
aad
aad
xchg
sar
stos
in
mov
ret
roll
popa
xor
dec
sbb
dec
lahf
in
test
bound
pushf
mov
mov
dec
jo
in
adcl
std
xor
mov
xchg
add
inc
mov
pop
repz
cmp
xor
inc
out
mov
cmp
test
movsl
add
sub
in
mov
daa
scas
mov
movl
add
cltd
cltd
ret
and
iret
mov
popa
xor
enter
out
or
in
out
and
pop
mov
fwait
mov
lret
inc
aad
scas
rorb
jmp
decb
movsl
mov
pop
xchg
sbb
in
lret
or
and
enter
lret
adc
loop
add
push
jb
push
scas
xchg
xchg
rol
mov
in
notb
mov
dec
cmc
cmp
je
cmpsb
push
sarl
push
mov
push
lcall
ja
mov
js
dec
push
inc
shrb
ficoms
dec
clc
jmp
into
aam
add
cmc
pop
pop
inc
xchg
xchg
lods
in
movsb
xchg
mov
push
pusha
or
ds
mov
hlt
push
add
push
testb
dec
out
sbb
jne
inc
push
loop
mov
in
movsl
call
addr16
inc
rorb
cs
mov
ja
or
mov
mov
xchg
xchg
fs
rcll
and
xchg
dec
mov
arpl
pusha
nop
mov
add
inc
cmp
cmp
pop
cwtl
ficoml
clc
aaa
outsl
push
insb
xor
sbb
mov
inc
pop
and
stos
stos
pop
lcall
out
pop
lods
les
repz
loop
sbb
or
push
ret
xor
in
cld
in
sub
cltd
imul
int
cmpb
fnstenv
adc
aaa
fisttps
push
pop
les
fwait
sbb
push
lock
shll
test
into
inc
jmp
pop
mov
sbb
fisubl
mov
sti
aam
sbb
ret
push
shr
aas
pop
aam
cli
push
push
mov
inc
mov
lods
lds
sbb
das
mov
sbb
jb
jnp
daa
hlt
movsl
dec
xchg
pop
or
jl
mov
fisttps
lret
imul
stc
sub
mov
jp
xor
dec
or
mov
push
and
repnz
jp
and
dec
mov
out
out
mov
pop
subl
shlb
std
inc
enter
movsl
and
loopne
nop
je
mov
jl
xor
stc
push
fisubrl
sub
cwtl
stos
push
add
mov
sarl
testl
nop
cli
fwait
or
inc
lock
in
aad
shrl
push
xor
pop
jg
inc
adc
ss
xchg
rcrb
je
mov
cld
mov
xchg
jnp
adc
lods
divb
in
fucomp
push
lods
mov
jns
jecxz
dec
jp
mov
insl
and
mov
cs
leave
add
iret
mov
pop
scas
mov
jno
call
in
test
dec
imul
cmpsb
inc
test
pop
xor
aad
cmp
iret
xchg
ret
dec
popa
lcall
xchg
cmp
dec
fld1
nop
mov
or
repnz
pop
in
std
das
sub
xchg
inc
ds
ljmp
je
popl
hlt
out
jle
movsl
dec
lcall
arpl
xchg
cwtl
or
or
mov
stos
add
clc
sbb
adc
jne
gs
test
or
dec
sbb
push
jecxz
push
dec
cli
push
sub
fldpi
clc
pop
aas
add
xchg
push
dec
cmp
xchg
daa
mov
outsl
loop
sub
pop
je
cmc
dec
je
call
andb
dec
loopne
loopne
jmp
aad
hlt
mov
sbb
ss
lods
test
lds
cli
or
insl
inc
jb
stc
fwait
sbb
xor
pop
jbe
gs
push
inc
stc
decl
sbb
or
movaps
ret
and
js
and
int
pop
sahf
mov
lea
and
mov
jns
mov
mov
mov
mov
and
insb
repz
jns
and
outsl
mov
lcall
cmp
dec
push
clc
dec
mov
pop
dec
into
popa
sti
pop
pop
sub
cmp
jl
cmp
loop
cltd
sbb
call
mov
mov
scas
dec
push
add
fbld
loop
jge
mov
inc
cmc
popf
in
mov
dec
movsb
push
jnp
hlt
and
cmc
xchg
jne
test
iret
sbb
fbstp
leave
aad
cmp
rcll
lret
inc
test
xor
popf
mov
or
addr16
jp
loope
stc
or
in
gs
dec
out
nop
daa
stos
imul
cmp
sahf
scas
pop
dec
lods
jl
fisttps
and
and
xor
aad
pusha
mov
arpl
stc
orb
pop
pop
fdivs
adc
lods
jmp
inc
mov
aaa
int
loopne
jnp
mov
mov
insl
push
in
sub
pop
cmp
jg
stos
jnp
arpl
dec
adc
paddusb
adc
jg
cli
dec
lahf
fs
or
cmp
loope
iret
std
and
pop
xor
arpl
mov
or
arpl
das
dec
xlat
or
cmc
mov
adc
mov
cmp
les
jecxz
inc
inc
divb
pop
call
xchg
jnp
in
shl
mov
sub
subl
or
mov
mov
jb
aaa
filds
push
and
fucomp
pop
lds
sahf
call
mov
fwait
xchg
pop
mov
dec
lock
fnsave
mov
stos
and
dec
and
lds
push
or
lds
shll
xchg
lods
cmp
xor
sar
pusha
dec
cs
mov
lret
sbb
sub
popa
loopne
ret
push
movb
mov
lret
imul
fnstcw
dec
adc
mov
jecxz
inc
fcmove
or
mov
sti
sbb
pushf
mov
pop
push
jmp
push
mov
adc
into
iret
mov
aas
inc
ljmp
loope
test
fldenv
js
push
loope
fsts
shrl
jge
xchg
in
imul
arpl
sarb
and
lods
sbbl
stos
mov
ds
sub
cmpb
push
or
push
movsb
xchg
shll
or
push
and
xchg
inc
xchg
or
mov
and
les
dec
test
mov
mov
repnz
xchg
sbb
or
xor
push
xor
or
xchg
push
mov
pop
daa
inc
mov
sarl
aaa
xchg
rcll
mov
int
dec
nop
dec
fmull
mov
inc
jae
negb
movsb
push
jmp
push
ficompl
aaa
xor
inc
mov
orl
jl
jl
test
mov
shrb
push
stos
test
xchg
sbbl
in
std
xchg
fstpl
out
xchg
andb
hlt
stos
sub
xor
mov
xchg
push
mov
xchg
stos
shll
or
mov
pusha
out
mov
pop
sbb
mov
lods
or
xchg
call
sbb
cld
imul
mov
inc
mov
shrl
jg
cld
outsb
pop
popf
je
mov
sbb
push
add
add
subl
push
mov
xor
mov
mov
test
mov
stc
jnp
bswap
fbstp
jg
jmp
enter
fists
popa
mov
push
outsl
push
adc
sahf
icebp
adc
outsl
inc
test
mov
or
jecxz
shll
push
cmpl
or
lock
sub
lds
push
jo
xorl
pop
call
pop
mov
imul
jle
sub
sbb
clc
ficoms
jle
pop
adc
jle
test
aas
aad
dec
icebp
mov
push
lahf
jp
dec
leave
or
test
xchg
mov
cwtl
mov
iret
jmp
xchg
sub
mov
add
cmp
inc
aam
bound
cs
sbb
pop
xchg
sbb
test
sbb
mov
add
lret
xchg
mov
mov
push
test
add
xor
and
or
xchg
push
jp
inc
divb
adc
call
jno
push
sbb
loopne
aam
into
push
add
stos
cmp
sub
shr
xchg
shl
mov
dec
sbb
push
inc
repnz
in
or
jns
inc
in
insb
sub
aam
sbb
aam
arpl
lods
out
xchg
mov
mov
data16
mov
xor
mov
mul
insl
xorl
and
sarb
dec
push
scas
inc
movsb
pop
arpl
dec
dec
orl
adc
dec
fistl
xchg
sahf
fwait
mov
sub
movsl
sbb
or
iret
sub
inc
mov
fbstp
les
and
or
outsb
sub
and
mov
mov
jmp
es
and
pop
out
jbe
int3
addr16
dec
lea
jl
sahf
in
jecxz
add
jb
test
xchg
movsl
dec
ljmp
inc
sarl
fwait
pop
setl
stc
leave
test
iret
jne
pop
jo
movsb
mov
xchg
aas
icebp
repz
pop
cmpsb
jb
and
jp
inc
add
ja
mov
jge
jmp
jno
cltd
fstps
gs
pop
pop
out
lods
inc
in
or
mov
data16
lret
xchg
mov
xchg
repnz
cmp
add
leave
push
ds
xor
xor
test
subl
inc
ret
ret
jb
clc
sub
mov
pop
stos
daa
stos
or
mov
inc
gs
sbb
xchg
cmp
jl
sbb
lea
lcall
push
fisubrs
jns
jg
mov
pop
inc
testl
cs
mov
cmp
pop
mov
mov
loop
out
clc
sbb
mull
fnstenv
insb
nop
dec
xor
and
idiv
cmp
xchg
insb
out
xchg
fstl
adc
mov
cwtl
dec
jge
pop
pop
or
aas
jg
bound
out
sub
pop
ficomps
adc
cmp
aad
push
stc
adc
lds
addr16
inc
dec
sub
ret
in
xor
cmp
jmp
mov
sbb
rcrl
xor
hlt
outsl
mov
pop
mov
pinsrw
cld
enter
and
jg
aam
fiadds
push
pushf
fcmovnb
addr16
mov
call
inc
rolb
loopne
repz
aas
sub
int3
xchg
inc
xchg
lahf
pop
xlat
mov
insl
adc
std
stos
rcr
stos
stc
ficomps
fwait
popf
nop
lret
cmp
jnp
or
dec
mov
jo
insl
insl
not
jb
add
int3
pop
lret
adc
mov
lea
lcall
or
stos
pop
mov
rorb
jl
lock
mov
push
ljmp
sbb
mov
inc
mov
pop
mov
xorl
mull
jae
arpl
fistps
pop
out
das
and
xor
pop
cmp
pop
push
add
outsb
dec
movsl
es
jle
pop
jb
xchg
add
jle
pop
push
nop
lahf
orl
addb
pop
std
dec
imul
adcb
rcrb
or
xor
cs
sbb
push
lea
shlb
adc
mov
fcmovb
xchg
loopne
adc
icebp
loop
jno
xchg
sub
xchg
fdecstp
push
sub
pop
lods
sub
cmp
test
cmp
push
sahf
jp
outsb
pop
push
sbb
into
jge
fbld
repz
hlt
inc
or
test
push
outsb
xchg
sbb
les
cmpsb
mov
int3
xchg
ds
mov
insb
mov
pusha
xchg
and
xchg
dec
jnp
data16
lods
lds
inc
mov
adc
pop
icebp
ret
test
mov
xlat
outsl
in
loope
mov
jae
mov
push
or
lahf
idivb
rorl
jmp
xchg
es
xor
xor
cmp
ret
loope
adc
cmc
pop
push
cmpsb
repz
aam
pop
mov
repnz
xchg
loopne
inc
shll
or
into
pop
mov
dec
xchg
inc
sti
pop
and
shlb
push
in
or
jmp
scas
in
ljmp
pop
out
xor
cmp
stos
dec
or
jp
icebp
in
xadd
mov
in
push
hlt
mov
or
cmp
mov
lea
repz
push
call
inc
decl
jecxz
jecxz
dec
xlat
and
add
orb
int
sub
xlat
movsl
fldl
iret
ror
dec
cwtl
push
push
xor
jle
pop
sub
lock
pop
out
lods
dec
jo
sbb
xchg
stos
lahf
insl
dec
mov
cmp
add
rorb
cmp
ds
sbb
lret
sbb
pushf
jae
cli
loop
adc
push
imul
fsubrl
shl
lock
lock
lret
inc
cmp
xor
xchg
bound
push
stos
dec
loop
repz
ja
lahf
aad
iret
sub
adc
push
scas
orl
add
push
imul
bound
adc
outsb
sbb
repz
fs
push
addr16
nop
xor
lret
mov
in
mov
fwait
xor
bound
dec
test
jge
sarb
aam
mov
insb
mov
inc
out
push
outsb
loope
cwtl
fsubrl
jae
rcrl
out
mov
jne
arpl
xorb
inc
adc
add
repnz
adc
mov
out
comiss
insb
fstps
and
mov
cld
cmpsb
std
in
cvtps2pi
jno
xchg
adc
pop
cwtl
inc
xlat
addr16
xlat
iret
sub
or
and
pop
pop
mov
xlat
arpl
jno
inc
clc
mov
push
clc
call
jne
pop
mov
mov
call
jl
loop
mov
mov
pusha
mov
nop
sbb
pop
loopne
or
orl
or
out
addr16
inc
adc
test
and
mov
add
mov
push
std
pusha
fs
fisttps
or
ljmp
inc
adc
push
loop
sti
jb
jecxz
outsl
bound
push
hlt
xchg
imul
jne
lods
xchg
cmpsb
test
gs
sub
movsl
cld
sbb
inc
clc
jnp
jns
and
mov
aaa
je
jge
jge
nop
loopne
fcoms
push
cmp
xchg
jo
pusha
push
push
ja
pop
cmpsl
test
and
pop
sub
jo
mov
ret
dec
sub
mov
lret
incb
inc
mov
xor
mov
dec
lock
and
loop
inc
repnz
xor
push
mov
fimuls
sub
out
ror
or
filds
inc
out
arpl
pop
inc
pop
icebp
adc
mov
and
sbb
mov
in
inc
fcmovnu
in
xchg
push
mov
mov
push
movsb
push
xchg
cmp
les
lret
xchg
mov
mov
repz
rcl
idivb
ja
lods
add
adc
rcll
cld
xchg
push
popa
adc
in
ret
fsubrp
ds
mov
mov
loop
jle
mov
imul
loopne
pushf
push
jno
inc
ja
add
lods
aaa
mov
pop
stc
fimuls
aad
outsl
xor
cmp
in
inc
dec
inc
cli
push
pop
inc
jmp
mov
call
sbb
pop
out
ja
sbb
popa
xchg
insb
cli
sbb
mov
inc
aam
or
jl
stos
xchg
icebp
das
or
mov
xchg
scas
cmp
out
pop
jmp
stc
push
ror
mov
dec
dec
adc
orw
cmp
and
jb
or
ror
arpl
add
neg
adc
cwtl
ficomps
negl
push
xchg
scas
inc
aaa
andb
sub
cmp
mov
add
test
call
lods
mov
movsb
divb
lahf
aad
mov
mov
inc
scas
xor
cmp
pop
mov
es
lea
roll
cmp
jecxz
es
mov
das
xchg
mov
std
adc
and
or
mov
out
push
push
lahf
mov
repz
jge
and
cmpb
sti
pop
push
inc
push
in
dec
sti
or
adc
leave
lods
adc
xchg
mov
subl
inc
fisubrl
fildl
aad
leave
test
push
mov
fstl
mov
mov
pop
out
xor
mov
adc
dec
dec
stos
notl
sub
stos
insb
outsl
push
in
mov
repz
xor
and
pop
xor
sbbl
stc
cmp
sub
mov
add
addr16
mov
pop
mov
fiaddl
jmp
sahf
imul
xor
out
out
mov
pusha
int
aam
call
adc
ret
hlt
js
push
js
push
test
sub
dec
mov
in
xchg
pop
repz
mov
das
mov
nop
push
pop
mov
sub
and
inc
repz
pop
pop
jo
sub
jg
adc
add
add
movsl
ljmp
test
ljmp
lcall
stc
sub
cmp
arpl
cs
cmp
out
dec
mov
mov
and
int
xor
jne
jnp
popl
push
adc
jp
push
xor
outsl
scas
sarl
sbb
add
mov
dec
pop
cmpsl
data16
mov
cmpsb
cmp
fiaddl
sti
adc
sub
ret
xor
push
mov
xchg
xchg
push
out
filds
inc
bound
add
and
lds
mov
sarl
pop
adc
xor
es
and
pop
cmp
jle
test
lods
pop
cmpl
imul
icebp
dec
addr16
or
mov
lods
sti
jae
iret
xchg
mov
or
push
jb
xor
fsubrs
mov
in
icebp
sbb
add
enter
mov
push
inc
push
ret
mov
jp
jmp
inc
mov
es
rcrb
pushf
push
cmp
lea
xchg
mov
outsl
mov
mov
sti
xchg
and
icebp
cmp
jg
mov
les
repnz
repz
sarb
fsubr
mov
jg
jo,pt
lahf
cmp
popf
insb
inc
jg
sbb
int
pop
sub
sbb
jae
sub
xchg
jno
mov
sti
lret
dec
dec
fwait
int
fidivrs
jne
imul
mov
stos
cmpl
or
cmc
jnp
imul
dec
dec
scas
out
sahf
xor
pop
cltd
repnz
hlt
jnp
sub
pushf
mov
cli
or
jmp
int
mov
cmp
test
sbb
sbb
pop
fisttps
divb
inc
push
data16
std
mov
jg
in
addr16
inc
push
stc
jp
lds
imul
ret
mov
adc
mov
or
mov
jbe
pop
movsb
mov
icebp
xor
adc
xor
adc
stc
mov
push
push
into
push
imul
add
ret
imul
mov
mov
and
ret
out
jne
sub
inc
lahf
pusha
add
int
js
sbb
dec
jo
cmp
push
aas
pop
or
test
fiadds
pop
imul
push
sbb
or
and
into
inc
mov
push
in
pop
ja
aam
xor
jmp
repz
testb
fstpl
xor
mov
pop
fldenv
dec
and
or
jl
push
adcl
fcoml
cmp
mov
and
mov
cmp
aam
inc
into
leave
xor
mov
pop
lods
lods
out
add
and
das
int
mov
aas
push
xchg
adc
test
sub
cli
mov
jae
shll
jle
test
aaa
mov
sbb
cwtl
lahf
jnp
rclb
aad
sbb
aas
adc
xor
xchg
add
or
dec
in
rep
adcb
icebp
scas
repnz
add
mov
pop
xchg
mov
fildl
call
mulb
pushf
lods
jge
push
inc
bound
fisubrl
mov
push
pop
jle
int3
xchg
push
clc
imul
push
push
mov
mov
cmp
cmp
dec
scas
pop
imul
es
jbe
les
ds
adc
sbb
sub
sbb
mov
xchg
mov
fisttpl
push
sub
or
dec
mov
cmp
sub
cmp
aam
mov
mov
ds
dec
inc
call
jmp
cld
lcall
imul
nop
push
out
movsl
add
out
push
cld
xchg
sahf
mov
cmpl
ret
cmp
push
xchg
push
es
push
sti
sub
popa
out
push
inc
jne
data16
mov
iret
mov
lds
pop
push
sub
ds
pop
mov
dec
mov
lods
jge
lcall
test
mov
sbb
mov
sbb
push
jge
fsubl
test
or
out
pop
inc
inc
xlat
or
iret
mov
fdivrl
aaa
in
dec
and
dec
dec
xor
mov
mov
mov
in
scas
out
insb
push
fsub
cli
xlat
xor
ret
pushf
cmp
mov
fidivrs
push
movsb
in
and
adc
nop
lea
rcrb
jl
adc
sti
mov
mov
xor
sahf
enter
pop
leave
cltd
adc
push
lea
push
insb
add
mov
mov
push
loop
out
es
mov
leave
notl
jb
pop
flds
sbb
inc
and
cmpsb
das
loopne
nop
mov
push
ficoml
sahf
pop
push
dec
scas
push
push
pop
gs
cwtl
hlt
xchg
fdivrs
xchg
or
add
mov
jmp
mov
je
sub
aas
push
or
mov
mov
iret
inc
gs
fxch
sub
lea
push
sbb
ds
adc
ss
cmp
arpl
jmp
mov
shll
test
adc
scas
pop
fisttps
imul
rcl
sub
xor
lahf
je
sbb
or
push
pop
mov
imul
jge
sbb
fnsave
push
insl
pop
and
pop
movl
jecxz
in
xchg
push
lock
sahf
push
xor
das
and
popf
sub
adc
dec
or
ror
push
pop
mov
in
pop
cli
imul
pop
xor
gs
nop
xor
mov
push
stos
mov
in
ficomps
adc
sbb
icebp
jae
ljmp
xor
hlt
cwtl
sub
xchg
testb
inc
in
push
out
mov
jecxz
add
jl
mov
xchg
sti
fabs
push
outsl
les
fiadds
arpl
adc
rolb
arpl
mov
mov
shrl
in
pop
cmp
aad
sub
pop
enter
pop
mov
and
pusha
out
shlb
dec
xor
ljmp
xchg
in
cmpsb
mov
dec
mov
orl
mov
mov
pop
imul
mov
movsl
rorl
jge
inc
mov
add
sub
cmp
sarb
adc
mov
xlat
leave
repz
or
in
fisubl
xchg
ljmp
cwtl
adc
imul
in
clc
jmp
nop
popf
cmpsl
pushf
pusha
cmp
iret
or
dec
shlb
mov
cli
and
imul
xchg
push
add
sbb
das
aad
sub
pop
lods
ret
shlb
cld
mull
outsl
sahf
enter
loopne
dec
sbb
out
mov
sub
es
pop
or
aaa
adc
sbb
shrl
mov
mov
lock
sbb
popf
add
jb
xchg
stc
out
jo
inc
ret
mov
push
imul
cld
add
rorb
xor
sub
pop
movsl
jl
ja
dec
ja
fisubs
test
std
repz
jnp
ret
mov
xor
xor
shl
pushl
ss
imul
xor
je
mov
pop
add
pop
jo
mov
je
jle
push
jno
mov
insb
lods
mov
aas
xor
cmp
xor
mov
jge
sub
nop
outsl
ja
or
sub
adc
xor
sahf
int3
sub
lahf
fdivr
out
fwait
mov
ds
inc
cltd
mov
lds
sub
sahf
lds
es
xchg
or
mov
lret
cli
in
loopne
jmp
nop
mov
out
je
stc
add
scas
int3
mov
enter
fildll
dec
mov
in
mov
lea
fldl
enter
lea
mov
pop
and
test
xchg
shl
pop
test
cltd
mov
jbe
adc
inc
andl
cli
loope
cmp
pop
leave
sti
cmc
inc
push
outsl
pop
into
or
push
jp
pop
leave
or
jge
jne
xchg
push
ret
cmp
sub
std
test
shlb
ljmp
jmp
adcb
pop
pop
and
into
or
test
ja
push
mov
mov
sbb
adcb
cld
mov
mov
pop
cmp
pop
jb
sub
imul
sbb
pop
push
lds
sbb
push
mov
inc
sub
hlt
adc
sahf
xchg
cmp
adc
mov
sub
test
shlb
cmp
adc
push
adc
inc
xor
dec
inc
mov
xlat
cmpl
mov
in
ror
sahf
sub
inc
xchg
fmul
mov
and
inc
insl
in
bound
mov
outsl
and
cltd
aas
and
pop
bnd
pop
mov
imul
mov
pop
test
push
das
orb
push
imul
cwtl
mov
jl
jle
cmp
push
adc
mov
pop
mov
fisttpl
cs
fadds
mov
in
push
cmpxchg
imul
jp
sub
js
cmp
push
shrd
jmp
push
mov
sti
jo
cltd
es
cmp
and
jmp
or
jmp
jne
addr16
pop
inc
xchg
popf
adc
mov
fchs
loop
push
dec
bound
nop
xchg
fwait
jl
dec
xchg
or
adc
icebp
dec
sub
adc
inc
dec
push
mov
jg
fdivl
mov
xor
jmp
mov
jne
push
or
out
xchg
and
test
imul
rcrb
adc
dec
call
enter
lods
inc
mov
sub
cltd
xchg
in
or
insl
sbb
push
sub
in
pop
push
cmp
mov
hlt
adc
adc
pop
lret
popf
jmp
arpl
ljmp
dec
daa
dec
cli
pop
ja
add
cmpsl
int
inc
mov
mov
ret
movsl
fisubrs
test
ret
repz
cld
pusha
sub
xor
fsubr
xor
fsts
insb
add
xor
lock
add
ret
mov
xchg
loope
xor
pop
push
mov
cmp
or
int
lcall
fimuls
adc
add
popa
fstl
jbe
mov
push
mov
ljmp
add
adc
ja
pop
dec
jecxz
addr16
orb
test
std
mov
addr16
mov
add
mov
rclb
cli
fadd
inc
out
sub
cmpsb
test
loop
mov
mov
jae,pt
xchg
mov
mov
int3
mov
mov
mov
scas
out
xchg
out
int
jecxz
mov
jecxz
sub
in
add
jne
clc
sar
push
cmp
inc
push
mov
cwtl
mov
cwtl
mov
push
push
cmp
cmc
fs
and
das
inc
push
xor
xchg
cmp
sub
xor
shld
dec
push
nop
ljmp
sbb
add
jmp
ljmp
div
or
xor
lahf
lahf
mov
xorl
fs
and
sahf
ljmp
out
or
mov
xor
fcmovu
imul
fisttps
jmp
push
xlat
jns
sbb
leave
cmp
mov
push
popf
cmpsl
dec
aas
pop
pop
in
mov
out
adc
mul
cltd
pop
cltd
pop
mov
mov
test
add
test
inc
dec
mov
jbe
xchg
mov
cmp
mov
or
subl
lret
aad
popa
nop
movsb
pop
in
pop
push
ljmp
test
inc
filds
imul
loop
inc
mulb
ss
imul
jmp
push
pcmpgtb
fnstsw
fs
inc
pop
sbb
push
loop
scas
adc
cmp
in
aaa
or
fincstp
jecxz
dec
mov
aas
js
mov
out
sahf
jle
push
sub
add
sub
push
jns
or
sub
lret
fcmovb
add
inc
pop
dec
sarl
adc
loop
arpl
std
lds
mov
mov
bound
pop
lods
and
adc
and
xor
cmp
in
call
and
jmp
into
mov
dec
ds
push
xchg
adc
fucom
push
mov
jno
fsubrp
mov
pop
dec
test
into
and
push
ficomps
mov
add
hlt
bound
lods
push
push
inc
jne
xchg
mov
popf
das
loope
lods
dec
popf
mov
dec
dec
int3
dec
hlt
lret
loop
xchg
lods
cwtl
inc
or
pop
jp
dec
loope
outsl
adc
int
testb
dec
pushf
mov
xchg
pop
inc
sbb
add
push
xchg
fidivl
add
out
lods
lea
jmp
out
lds
xor
sbb
mov
inc
repnz
mov
addr16
cs
lock
les
popa
or
adcb
jg
mov
jno
hlt
xchg
mov
mov
lock
fwait
xor
into
data16
out
out
mov
out
imul
stc
jp
add
ss
nop
xchg
lods
jb
enter
insb
aas
adc
xor
bound
aaa
cli
xchg
xchg
or
jmp
ja
mov
hlt
push
or
pushw
pop
push
loop
jg
inc
fldenv
imul
scas
stos
fwait
inc
inc
push
sbb
andl
fisttps
jge
cmpsl
cmp
xchg
loopne
mov
pop
lcall
cmc
add
lcall
js
popf
xchg
pop
dec
fmuls
aad
ret
imul
sub
int3
cmp
jl
lods
loope
out
sbb
enter
icebp
icebp
enter
or
adc
mov
out
lcall
jbe
push
adc
jnp
push
test
arpl
jmp
fistps
in
fistps
mov
mov
repz
jnp
lods
pop
push
pushf
and
xor
dec
in
hlt
and
es
out
sbb
xlat
pop
push
adc
loop
sbb
or
outsl
inc
jg
push
pop
and
mov
loope
mov
lahf
out
push
pusha
out
aam
cmpsb
cli
jge
mov
inc
leave
and
fdivs
test
add
fnstenv
in
or
imul
dec
dec
popf
popf
jl
shll
int3
push
addl
fistpl
into
mov
mov
out
adc
mov
stc
or
fs
ljmp
js
inc
test
mov
mov
cmp
or
and
and
pop
cli
cmp
cmpsl
insl
sub
std
outsl
inc
adc
and
cmp
lods
jbe
jge
xchg
fbld
test
xchg
push
cmp
push
fnop
insb
adc
outsb
mov
pop
jmp
lcall
mov
push
cmp
add
cmpsl
out
sbb
sub
or
jno
dec
xchg
sub
aaa
push
sahf
pop
mov
jnp
fldt
or
inc
add
jp
mov
and
daa
push
in
hlt
jmp
addr16
das
cmp
pop
lock
mov
repz
xchg
add
inc
push
pop
popf
sbbb
or
cmc
hlt
mov
mov
lret
mov
cmp
adc
scas
xchg
push
or
add
lock
pop
scas
dec
xor
xchg
pop
push
gs
loop
int3
mov
pushf
stos
mov
adc
fmuls
lods
jle
test
cmp
clc
mov
dec
enter
xchg
dec
mov
inc
xchg
pushf
dec
push
mov
divb
mov
mov
and
daa
lret
xor
in
loopne
xor
mov
push
lret
pushf
cs
sbb
jmp
dec
mov
xor
shll
inc
rorl
push
and
mov
xchg
daa
setle
sub
inc
dec
dec
dec
push
xchg
aad
aaa
mov
in
ret
pop
mov
movsb
cmpsb
outsl
test
dec
sub
pop
shrb
xchg
ds
mov
push
dec
nop
xor
jns
mov
fcompl
mov
mov
mov
scas
xchg
enter
mov
mov
push
loopne
pop
repz
push
mov
mov
sbb
mov
aas
and
loope
inc
xlat
lret
xor
inc
insb
pop
xchg
lds
mov
je
mov
in
or
clc
sarl
fsubs
push
jl
mov
mov
mov
jns
xchg
xlat
insb
popa
add
outsb
frstor
pop
dec
addr16
enter
sbb
or
sbb
mov
ret
add
icebp
outsl
and
into
lds
idiv
pop
sbb
dec
js
test
pop
repz
and
lods
loope
pop
out
cmp
adc
testl
enter
ds
push
xor
clc
inc
in
pushf
and
jle
mov
lods
lods
xchg
jecxz
outsb
and
inc
pushf
and
adc
mov
cltd
mov
clc
fisttpl
push
in
ljmp
lahf
push
lret
gs
lcall
pop
push
adc
bound
dec
inc
jae
aad
in
adc
or
push
out
mov
aad
mov
add
lret
dec
inc
dec
mov
add
xorl
int
inc
lods
add
mov
gs
and
mov
popf
fcom
mov
in
add
pop
into
sub
inc
fwait
mov
std
imul
out
xlat
jnp
sbb
add
data16
push
sbbb
in
movsl
mov
pusha
outsb
lcall
inc
imul
int
xchg
inc
pusha
lds
jmp
movsl
cmpsl
sahf
ficoms
cmp
lods
dec
jae
mov
push
lock
mov
rorl
cltd
shrb
test
mov
or
arpl
insl
fdivs
dec
roll
mov
cmp
lahf
xor
mov
mov
fwait
adc
sarb
and
mov
das
xor
std
addl
jmp
outsl
bound
sub
lret
into
int
xchg
jp
fcmovnb
cmp
clc
cld
test
mov
outsb
daa
inc
scas
sti
in
jno
push
dec
mov
xor
stos
test
xchg
mov
cs
inc
int3
push
outsb
push
dec
sub
popf
jmp
cmp
push
fwait
scas
repnz
leave
ror
lret
push
pop
jae
cmp
xor
test
adcb
sub
inc
repnz
testl
in
in
mov
sub
iret
adc
push
add
cmp
jmp
repnz
lret
out
cmp
adc
mov
insb
pop
and
outsl
test
mov
je
dec
cmp
ficompl
popa
es
cmp
cmp
lods
xlat
or
push
cli
je
lds
dec
ror
push
sub
lahf
cmp
rclb
push
orl
loop
pushf
xchg
mov
and
cmpsb
daa
mov
sub
push
mov
adc
stc
ret
scas
or
push
aam
jg
add
xchg
sbb
inc
inc
or
push
or
jo
je
sub
jge
push
mov
or
dec
inc
add
and
imul
hlt
mov
mov
dec
stos
lea
jl
lret
lret
add
cmp
push
push
pop
xor
pop
mov
insl
pop
arpl
idivl
sbb
dec
sbb
xchg
mov
stc
jns
jno
add
int
test
mov
inc
or
mov
sub
fldcw
test
adc
sbb
sbb
ret
aam
jne
cmp
or
out
add
jne
popf
inc
es
xlat
xor
lret
mov
test
test
mov
popf
xchg
add
jne
loop
pop
test
shrb
cld
int
scas
xchg
cmp
mov
add
jne
out
ret
and
mov
out
aas
fsubp
daa
ss
push
add
notl
gs
adc
mov
jnp
jecxz
xor
adc
lret
ret
pop
addr16
dec
fisttps
aam
lcall
and
mov
test
stos
cli
pop
mov
repnz
jne
push
push
insl
incb
cs
loopne
ja
je
stc
adc
lods
mov
sub
pop
adc
dec
mov
dec
cmp
cmc
sbb
cmc
ss
lahf
mov
jg
sub
ss
dec
push
rolb
mov
js
sarb
mov
scas
les
add
sahf
int3
lret
andb
xor
clc
andl
js
div
mov
std
fmull
jle
cwtl
int
out
cmp
shl
sbb
cmp
pop
incb
adc
mov
add
sub
pop
pop
or
in
inc
or
adc
pop
and
xor
fs
mov
loope
dec
clc
pop
test
imul
jl
and
pop
cmp
inc
xchg
cmc
adc
mov
cld
mov
scas
fcomps
loopne
push
adc
lds
stos
in
addl
sbb
push
out
imul
add
ljmp
mov
or
pop
cld
test
fucomi
jp
aas
stos
out
sbb
imul
loopne
xor
jmp
lock
xchg
cmpsb
jae
push
fmuls
sbb
insb
adc
mov
or
ret
lcall
imul
xor
dec
out
test
or
add
out
int
gs
push
test
and
mul
push
jo
imul
pop
insl
das
cmp
jbe
jp
enter
and
inc
sti
or
int
xchg
mov
mov
cmp
aad
pop
push
mov
xor
and
js
test
stos
pop
xchg
popl
repnz
es
pop
call
subb
push
push
divl
loope
mov
dec
push
inc
je
icebp
lcall
js
fs
mov
jae
push
clc
imul
inc
aam
gs
xchg
std
fildll
pusha
idiv
push
jecxz
out
xchg
in
jg
popf
or
loop
xorl
jno
and
pop
sub
push
jne
rcll
mov
xchg
jle
add
xrelease
sbb
fidivrl
sub
icebp
pushf
mov
repnz
xor
add
jo
inc
inc
add
inc
mov
lods
popa
lret
jae
addr16
rcll
xor
inc
jb
sub
movsl
shrb
cmp
outsb
daa
shlb
add
ja
pop
sub
lock
not
mov
scas
or
movsb
mov
lods
lods
out
outsl
inc
pop
repz
data16
dec
add
sub
bound
ud2
sub
xor
push
in
push
iret
add
imul
nop
pop
dec
mov
iret
ja
push
adc
rcrb
mov
xchg
push
testb
ss
repnz
ret
lret
test
cld
ret
les
and
pushf
sub
dec
call
jno
sahf
xor
addl
mov
mov
cmp
pop
cmp
adc
add
add
add
inc
add
call
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
addb
add
add
add
add
mov
add
mov
add
add
add
add
add
pop
add
addb
add
addb
addb
add
or
add
add
enter
sub
add
or
add
pop
add
sub
add
add
add
orb
add
clc
add
addb
add
and
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
push
add
and
add
add
add
addb
add
or
add
add
cmp
add
jo
add
add
add
orb
add
call
add
add
add
addb
add
cmp
add
pusha
add
addb
add
or
add
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
xor
add
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
call
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
les
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
inc
add
outsl
add
popa
add
and
push
add
data16
add
jb
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
dec
add
add
add
add
je
and
dec
add
jo
jae
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
xor
add
add
fnsave
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
add
add
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
push
gs
gs
popa
insb
jne
inc
add
inc
outsb
fs
popa
jae
