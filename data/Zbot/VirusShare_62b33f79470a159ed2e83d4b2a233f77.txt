sbb
add
cmp
cmp
or
jge
sarb
add
call
loopne
push
into
mov
mov
iret
dec
out
pop
adc
stc
or
cmpsl
out
mov
call
imul
push
adc
mov
out
or
xchg
movb
fidivl
mov
and
cld
cmpsl
sub
jmp
mov
push
insb
data16
and
mov
out
xor
add
sar
xchg
lods
dec
inc
xchg
xchg
pop
pusha
add
lcall
addr16
fistl
rolb
gs
lds
std
ret
mov
add
mov
or
loop
out
mov
xchg
jmp
sub
std
in
adc
shrl
lahf
add
pop
mov
scas
mov
mov
mov
dec
cld
lcall
pop
pop
mov
cltd
cmp
push
dec
fistl
test
adcb
int3
mov
ret
and
xchg
fsubrs
int
jge
ljmp
xlat
sub
lock
jle
inc
outsl
repnz
stc
mov
xlat
push
cmpl
aad
repz
and
fcmovnu
or
popa
add
dec
cs
adc
fmul
clc
sbb
adc
sahf
jle
xor
sbb
xor
jmp
and
pop
js
das
sub
ret
rol
out
push
sub
pop
dec
loopne
mov
jb
push
jle
aad
out
movsl
loopne
and
aas
cmc
mov
popa
pushf
in
das
loop
lea
lret
mov
pop
cmc
int
pop
in
inc
xchg
dec
clc
mov
std
mov
push
mov
cmc
das
iret
inc
jbe
sahf
es
mov
xchg
push
and
cmp
cld
adc
lods
data16
aad
sub
push
mov
mov
mov
inc
add
mov
ss
out
das
mov
mov
xchg
rcrl
outsb
lods
push
in
cmp
iret
mov
lock
add
rcll
call
movsb
jle
mov
test
cmpsl
fs
fistpll
push
rcrl
movsl
jb
mov
arpl
pop
stos
mov
movsb
jge
fcomps
pop
in
mov
popa
into
or
in
shll
jns
hlt
push
jns
push
popa
pop
ja
mov
mov
in
mov
sbb
and
mov
push
fs
push
mov
dec
lret
clc
leave
pop
les
gs
rcrl
testl
sub
clc
lock
imul
fdivl
and
out
addr16
jecxz
data16
dec
aaa
push
or
push
push
jmp
fnsave
mov
fwait
aad
adc
subb
push
out
push
inc
mov
orb
insl
xchg
test
add
cmp
sbb
jmp
xchg
fldt
pop
adc
pushf
xchg
lret
sub
jno
mov
int3
push
fisubrs
notl
sahf
cmp
sarb
xchg
mov
loop
sbb
test
aas
mov
xchg
mov
xor
xchg
andb
mov
leave
adc
test
dec
ret
lahf
push
mov
sbb
cs
pop
fildll
pop
lods
mov
push
mov
add
jno
push
or
pushf
adc
lods
sub
add
js
cmp
xor
add
test
and
mov
or
jb
jg
fsubrs
shll
dec
dec
movsb
sub
daa
jle
test
nop
aaa
adc
cmpl
add
or
mov
push
repz
jge
add
and
lods
stc
mov
xchg
pop
and
das
ljmp
hlt
and
movsb
fstpt
repz
xchg
sub
loope
sub
ja
mov
ret
movsb
mov
cmp
pop
add
cmpsb
pop
scas
in
mov
jp
fcoml
test
ljmp
in
loope
or
and
add
xor
orl
cmp
shrl
lock
outsb
jbe
lods
or
aas
sbb
in
test
pop
dec
enter
and
shl
mov
iret
inc
mov
mov
fs
pushf
sti
jmp
repz
sub
jge
movsl
insl
sub
outsl
push
jno
dec
lds
mov
cli
movsl
inc
mov
mov
negl
cmp
imul
xor
mov
iret
fst
mov
mov
imul
jbe
ret
mov
cmpsl
std
push
sti
jecxz
inc
mov
out
out
fcomi
mov
fdiv
jecxz
ret
sub
xchg
in
cli
repnz
shlb
std
and
inc
jbe
pusha
outsl
icebp
repnz
ja
cmc
sahf
mov
fsubrl
hlt
pop
out
mov
aas
outsb
cwtl
imul
jl
ja
push
inc
inc
inc
jno
xlat
xor
inc
jns
ss
xor
in
sti
cmp
push
loop
pop
add
fsubs
dec
iret
ror
pop
in
iret
loopne
gs
add
mov
mov
dec
filds
ror
xor
jl
pop
fstl
idivb
add
mov
and
jl
je
push
stos
retw
notb
pop
jnp
xchg
mov
sbb
add
insl
cmp
jp
out
fists
xor
mov
jmp
sub
das
mov
in
repnz
iret
xchg
cmp
movsl
jne
pop
cmp
vcvtsi2ssl
push
push
mov
push
push
clc
call
sbb
add
mov
lcall
enter
pusha
add
and
inc
insb
loope
jb
pushf
lods
adc
mov
push
push
mov
jle
or
inc
mov
xchg
adc
dec
mov
in
mov
movsb
ss
repnz
fwait
cwtl
mov
adc
jbe
jbe
mov
mov
mov
inc
ja
inc
mov
xchg
hlt
in
popf
repnz
mov
out
mov
sbb
lahf
divb
mov
dec
popl
push
je
xchg
stos
popf
sub
fnsave
je
mov
pop
jmp
inc
xor
jp
fs
mov
jl
and
popf
pop
loop
adc
xor
dec
arpl
inc
xor
repnz
fadd
stos
stos
dec
and
stc
jo
repnz
dec
push
adc
dec
roll
cmp
inc
shll
sbb
pop
int3
cmpsl
mov
test
push
ficoms
dec
daa
loop
shrl
js
mov
dec
stos
test
mov
pop
mov
and
lcall
test
pop
les
pop
imul
mov
pop
in
inc
out
dec
cmp
lret
add
shl
adc
repz
fdivs
jne
jae
ja
cmc
pop
popf
sbb
pxor
or
or
sub
mov
xchg
bnd
jl
sub
sarl
aaa
subl
xchg
pusha
mov
xchg
imul
or
out
dec
jne
int
jge
lahf
inc
out
nop
or
and
or
add
test
jno
lods
mov
push
movsb
sub
scas
std
lock
call
shl
sub
mov
rcrb
out
mov
cs
ficomps
bound
arpl
pop
repnz
cmp
mov
ret
inc
cwtl
pop
lret
fs
pushl
aas
push
in
push
test
xchg
sub
movsl
adc
mov
jp
lock
push
sbb
loope
das
cmpsl
cwtl
jns
cld
aam
jns
lcall
mov
or
pop
fwait
imul
cmp
mov
push
jecxz
sarb
mov
movsl
inc
fimuls
xchg
scas
jb
dec
jbe
add
sahf
mov
div
push
inc
fcom
sarb
mov
adc
fisubs
sbb
rolb
lcall
sahf
mov
ja
mov
mov
test
cmp
je
push
inc
pop
scas
mov
ss
jmp
push
imul
push
fsubl
fdivs
sbb
mov
adc
add
mov
lret
test
adc
aam
ret
sbb
dec
dec
loop
jbe
jle
sarl
inc
push
cmp
or
and
cmp
std
and
insb
push
fstpt
mov
xor
mov
cwtl
inc
mov
and
out
cmp
or
ret
and
cli
sub
aas
iret
push
jmp
mov
jmp
movsl
stos
jp
addr16
mov
mov
outsb
xchg
arpl
sbb
cmp
inc
nop
mov
inc
lret
roll
lahf
cmp
fnstsw
aad
jl
xchg
ret
sbb
jbe
lcall
orb
mov
add
adcb
ja
dec
push
xor
scas
fistpll
test
push
cmp
mov
int
icebp
mov
push
lahf
ds
stc
jg
adc
out
adc
mov
clc
stc
sbb
daa
rclb
and
push
mov
mov
add
rclb
lret
jno
rolb
aaa
sub
aam
int
cmpsb
daa
mov
aas
jmp
dec
les
or
xchg
cli
iret
mov
sub
loope
dec
push
inc
and
es
mov
adc
bound
movsb
sbb
inc
out
scas
enter
xchg
xor
dec
lods
push
les
xchg
insl
in
ss
dec
adcl
fmuls
jbe,pt
mov
xor
push
xchg
jbe
add
mov
in
and
mov
std
shlb
xchg
sbb
lcall
mov
andb
mov
je
leave
lahf
pop
adc
jg
dec
sub
ret
cmp
test
push
aas
xor
subb
xchg
addl
fwait
pop
adc
add
cs
fldcw
mov
jnp
xchg
mov
mov
loop
add
push
loop
jo
jo
sbbl
pop
pop
fdiv
push
mov
cmp
addr16
and
push
jl
dec
scas
pop
mov
ds
icebp
cmp
push
mov
clc
out
ret
movsl
lds
and
stc
test
rorl
ret
outsl
cmp
stos
dec
pop
dec
push
jne
je
sub
int3
into
mov
dec
and
xchg
movb
push
push
dec
xchg
cld
mov
mov
adc
mov
repz
pusha
sbb
adc
test
testl
xor
arpl
add
iret
faddp
sahf
xlat
das
push
fcmovb
daa
iret
sahf
mov
mull
push
xchg
int
inc
or
adc
sub
dec
movl
out
lds
inc
cmp
dec
jb
cltd
pop
dec
stc
fisubrs
subb
mov
int
adc
sahf
js
popf
dec
jp
test
inc
or
ret
xlat
lods
add
das
insl
divl
jns
jp
jnp
adcl
pusha
lcall
jmp
bound
dec
mov
iret
movsb
mov
mov
stos
xor
daa
stos
mov
hlt
xor
fdivl
jo
add
leave
mov
push
call
pop
aaa
lods
mov
and
mov
jns
mov
into
dec
push
xchg
call
ja
and
ds
sub
mov
adc
sbb
push
sbb
popa
das
xchg
loop
stos
psubd
hlt
loope
inc
pop
pop
push
int
add
mov
pop
std
stos
jb
testl
push
in
and
andl
insl
inc
lds
test
push
jb
push
mov
cmpb
and
or
shll
cwtl
in
or
popf
pushf
push
pop
cltd
mov
lret
loop
or
bound
popa
ret
or
pop
imul
jae
xchg
mov
and
sub
add
xor
xor
lds
lock
mov
shlb
mov
sub
fdivrs
insl
lods
inc
ret
call
inc
sti
data16
js
push
lods
mov
mov
pop
fsts
and
gs
or
adc
loope
movsl
xchg
and
test
push
shrb
cmp
pushf
sub
xchg
or
dec
mov
jnp
adc
cmp
push
push
test
push
cli
xchg
andb
or
leave
jg
cli
rcr
and
pop
lret
xchg
dec
inc
and
aam
dec
inc
outsb
inc
add
mov
jp
divl
or
or
cwtl
dec
fmull
mov
mov
jle
mov
and
mov
inc
inc
int3
int3
fisubrl
out
cmp
jo
movsb
movsb
popa
adc
inc
in
xchg
repz
jns
sub
lcall
push
jb
sub
jmp
pushf
pusha
out
mov
or
dec
nop
mov
gs
addr16
movzbl
lret
adc
sub
leave
and
push
into
test
aaa
stos
scas
mov
or
movsl
jge
pop
loopne
xor
and
and
cld
xor
adc
ljmp
push
xor
mov
cltd
rolb
mov
lret
dec
lahf
pop
ror
lds
ret
xor
pop
sbb
jno
hlt
mov
jl
xor
scas
lret
cmp
sub
mov
rclb
dec
in
add
cmc
dec
decb
lock
jbe
leave
repnz
sub
cld
sahf
jmp
xchg
xchg
imul
ss
sub
je
inc
and
xor
cltd
and
clc
mov
aam
sub
cmpsl
cmp
inc
icebp
xor
dec
cld
inc
push
xchg
cli
jmp
adc
jb
dec
xchg
push
fldcw
sbb
mov
out
pusha
scas
push
ret
js
push
inc
pop
fwait
sub
sbbl
mov
xlat
cmpsl
shlb
mov
adc
xchg
push
test
jle
jnp
enter
scas
sub
ret
and
sbb
cmp
inc
pushw
xor
cmc
xor
push
dec
jne
call
fsubs
stos
out
mov
andb
loopne
sbb
mov
mov
xchg
icebp
ja
pop
arpl
jge
jne
outsb
jecxz
push
popf
mov
lret
dec
ja
aam
das
sarl
mov
cmp
jg
repz
mov
mov
dec
imul
mov
ror
sbbl
sahf
sub
dec
cmpsb
aam
movsl
sub
cwtl
in
sbbl
pusha
in
xchg
pop
cld
cmc
sub
push
jp
mov
lds
mov
sbb
sbb
lret
fcoms
outsl
xchg
out
fsubrl
pop
dec
dec
xchg
stos
pop
in
jb
cltd
or
pop
shlb
insb
jae
push
ljmp
jle
mov
push
iret
push
mov
std
call
gs
stos
mov
add
pop
xchg
aaa
mov
and
les
pop
int
addr16
push
ss
dec
mov
sbb
adc
or
fildll
mov
test
mov
cmp
lcall
sbb
sbb
fbld
push
inc
push
ficoml
jmp
mov
fisubrl
push
xchg
aaa
notl
addr16
aas
inc
outsb
inc
aad
call
test
pop
fiaddl
sbb
dec
pop
repz
adc
pop
and
pop
sub
mov
mov
in
pusha
arpl
jo
stos
mov
mov
movsb
add
add
sarl
cmp
repz
sahf
rolb
in
cmpsl
sbbl
xor
scas
adc
sub
repnz
cltd
jecxz
shrl
lret
in
cmpsb
mov
xor
lods
call
or
fisubrs
sbb
jl
test
or
test
sub
cmc
std
mov
stos
stos
mov
xor
scas
in
xchg
sbb
scas
daa
lock
sub
popf
push
sub
popf
cmp
std
cmp
xchg
outsb
or
mov
jp
dec
push
mov
adc
and
rcr
adc
pushf
scas
sti
push
mov
in
mov
inc
js
sbbl
rcll
int3
mov
and
aad
aaa
lahf
pop
vmlaunch
push
cmp
adc
iret
out
cmp
push
jg
mov
jno
rorl
stos
mov
jle,pn
mov
fistpll
sbb
pop
mov
pop
js
inc
aaa
jo
push
mov
mull
inc
xor
in
nop
lods
icebp
lret
cmpsl
sbb
push
pop
pop
sti
xor
outsb
cmp
mov
aam
call
andl
fildl
push
cmp
aam
inc
shrb
sbb
adc
rclb
pop
jmp
in
push
in
es
rorb
icebp
fwait
inc
mov
mov
cmc
or
sub
outsl
push
push
cmp
pop
scas
sbb
pop
jb
xor
shlb
add
popf
lret
jnp
xchg
add
xor
cmp
or
cltd
std
insb
inc
adc
or
adc
test
imul
outsb
lret
enter
cli
imul
jne
pusha
std
ss
dec
mov
cmp
sub
std
sti
lcall
pop
in
sbb
and
sti
inc
add
sbb
mov
jmp
push
mov
push
xchg
push
jb
inc
dec
lahf
adc
mov
bound
cmp
mov
outsb
jmp
jecxz
pushf
ds
jg
mov
push
cmp
pop
inc
out
xor
in
icebp
mov
hlt
jmp
ret
cwtl
pop
pop
mov
dec
icebp
arpl
xor
push
lea
hlt
cmp
and
aam
mov
add
sti
aam
idiv
xchg
inc
lds
fs
cmp
mov
dec
out
ror
mov
adc
xor
shl
cmp
out
insl
cli
lcall
mov
stos
push
xor
xchg
int
pop
pop
sub
in
outsl
popf
jecxz
jmp
clc
xor
xor
sti
xchg
fisttpl
stos
dec
pop
jo
cmp
adc
jbe,pn
jle
jb
xchg
out
shrl
cmp
jge
push
gs
inc
lods
xor
rol
rol
iret
mov
xchg
jl
add
xchg
jns
dec
xor
xor
jae
push
pop
ljmp
xor
data16
in
aam
fwait
dec
inc
add
mov
inc
xchg
xor
inc
cltd
or
xor
pop
jmp
pop
call
stos
sub
and
and
rorl
ds
int3
and
loope
sbb
fwait
add
mov
jge
jg
inc
pop
rcl
fnsave
jmp
pop
lds
ret
dec
push
sbb
in
leave
xchg
cli
loope
xor
lock
je
inc
lcall
sub
dec
negb
mov
jl
mov
cmpsl
jo
pop
rorl
cmp
cmp
mov
lods
outsl
cwtl
inc
imull
xor
mov
xchg
push
dec
sbb
add
loopne
and
adc
fcomps
jmp
sub
insl
dec
and
je
jecxz
inc
test
cld
das
xor
cmp
dec
xor
pop
mov
xchg
xor
mov
jecxz
fistl
fwait
sbbl
inc
push
pusha
sub
inc
cmpsb
stc
loope
pop
xor
jg
ja
popa
adc
pop
mov
inc
xor
movsl
sti
mov
testb
sbb
das
xor
daa
in
push
outsl
loop
sbb
pop
mov
mov
inc
mov
adc
mov
cld
inc
jb
fmull
mov
call
mov
notl
mov
push
bound
cmp
insb
jo
or
shll
call
scas
gs
xor
sub
inc
test
cwtl
xor
out
orl
out
fisubs
xor
add
or
ljmp
adc
mov
dec
cmp
roll
mov
sbb
call
sti
iret
pop
xchg
iret
mov
clc
jbe
mov
lock
mov
dec
movb
arpl
push
fidivrs
pop
pop
xchg
imul
adc
ret
sti
pop
enter
das
xchg
dec
lahf
orb
cld
ficompl
imul
rcr
mov
adc
sub
cmc
push
hlt
in
addr16
and
pop
lods
mov
popa
dec
push
push
pop
outsl
mov
sub
dec
repz
loop
push
and
dec
add
fsubrs
out
insb
sarl
mov
pop
mov
call
pop
imul
stos
mov
xor
mov
stos
mov
aaa
stc
sub
iret
icebp
or
pop
push
pushf
mov
roll
out
cmc
add
psubusw
in
sub
es
mov
nop
dec
add
fcmovu
imul
cmp
dec
xor
push
mov
jne
sahf
ret
pop
push
fwait
xor
js
stos
addb
jle
cmc
xor
out
inc
outsl
jbe
lfs
rcrl
push
popa
pop
repnz
mov
jmp
xchg
dec
jl
pop
inc
xchg
fsub
lds
sbb
mov
dec
jge
lock
dec
mov
rcll
jae
daa
cmp
cmp
scas
out
test
enter
jl
inc
dec
xor
jg
pusha
ljmp
fidivrs
shlb
inc
dec
lret
test
dec
push
js
push
rcrb
pop
jno,pt
add
fcoml
mov
ja
call
sbb
insb
adc
xor
in
push
xor
jmp
sahf
fnstcw
and
add
lods
mov
lods
in
test
pushl
pop
bound
fsts
xor
les
sbb
xor
lret
int
jae
into
in
jo
pop
fidivrl
jnp
xor
inc
jne
loopne
xchg
popa
cmp
je
jmp
repz
repz
addb
and
decb
and
sbb
jmp
or
pop
xor
lcall
mov
repnz
outsl
pop
fsubrl
arpl
sub
fwait
sbb
xchg
lahf
dec
inc
test
pop
push
test
movsb
mov
cwtl
inc
sub
imul
fnsave
jp
mov
push
and
dec
fsub
xchg
out
fimull
jbe
sbb
loop
fcomi
ljmp
xor
pop
pop
nop
pop
sub
in
pop
lret
pop
mov
add
mov
and
jl
jp
pop
adc
or
xor
or
ljmp
xlat
jae
sbb
cmp
mov
xor
nop
mov
mov
mov
lock
mov
into
cltd
mov
pop
stos
out
jecxz
in
xor
out
mov
out
or
lahf
das
or
mov
imul
imul
insb
xor
mov
jnp
cmp
ss
or
add
mov
insb
add
lahf
and
jp
inc
and
inc
mov
or
fidivrs
adc
ss
adc
jne
rorl
out
addr16
orl
pop
fimuls
pop
jecxz
adc
push
xchg
sbb
lods
sbb
lock
cmp
scas
mov
fdivrp
lcall
ljmp
fcmovb
or
jmp
lea
or
sarl
adc
xor
and
aam
aad
sbb
iret
repnz
sub
fildll
pop
rcrl
test
movsl
push
popa
addr16
push
or
loope
cmp
loope
add
mov
mov
out
add
mov
mov
leave
enter
xor
mov
sbb
loopne
xchg
call
and
repz
adc
and
ss
fwait
jo
jge
popa
lock
add
push
pop
lcall
cld
cmovo
ja
in
inc
stos
dec
add
mov
lea
xor
int
loop
mov
call
fadds
jmp
xchg
fisubrs
and
ljmp
mov
xor
addb
inc
mov
das
insb
fdivs
test
push
mov
adc
xchg
or
cmp
sbb
mov
mov
lea
adc
xchg
xchg
mov
and
and
mov
mov
test
jp
sbb
sahf
jb
rcr
fwait
mov
jo
mov
lods
dec
add
jno
push
test
push
jge
xor
mov
cmp
mov
idivb
and
xor
mov
mov
mov
je
lods
pushf
add
lods
sbb
fisubrs
xor
pop
lahf
jo
lret
adcb
add
inc
hlt
cmp
js
inc
call
or
inc
loopne
dec
loopne
ss
inc
imul
inc
xor
inc
push
test
fs
dec
dec
into
push
mov
xor
xor
jl
clc
add
fidivs
mov
std
mov
mov
jmp
dec
jecxz
mov
mov
xchg
jae
mov
mull
sbb
xchg
adc
mov
jae
std
scas
outsb
fiaddl
loopne
lret
pop
xlat
pop
ljmp
dec
jg
lcall
add
jno
xor
mov
into
cld
or
or
pop
and
rdmsr
push
jmp
aas
mov
adc
add
push
loope
aam
mov
repz
pop
ljmp
mov
call
loop
loope
xor
sub
push
sub
pop
cmp
add
pop
mov
fcmovu
aas
xorb
fwait
orb
and
negb
outsl
and
pop
sbb
jb
cmp
shrb
ja
jns
adc
jge
in
pusha
in
gs
mov
into
test
xlat
cmp
mov
sahf
xchg
or
scas
sti
call
int
push
pop
sub
mov
insl
dec
add
cwtl
sbb
dec
shll
loopne
push
jnp
cmp
or
out
aaa
sub
adc
int
cmc
stos
mov
sub
xor
xor
movb
enter
cmp
clc
push
sub
fcoml
insb
mov
ljmp
out
cmp
push
dec
ffreep
sti
pop
lcall
arpl
lds
sub
jg
loopne
mov
mov
neg
pop
into
cld
mov
lret
push
lods
repnz
inc
ret
ficoml
cmp
dec
mov
jns
sti
shrb
lock
jge
pusha
stc
inc
subl
aad
outsl
lock
cmc
inc
adc
ljmp
dec
mov
aas
or
sub
ffree
addr16
mov
out
insl
js
mov
arpl
fs
lods
movsl
out
popa
cwtl
sbb
or
fcoml
jb
js
fisubrl
mov
out
les
dec
jge
mov
dec
mov
mov
loop
stc
and
push
nop
notb
mov
push
call
sti
xchg
xorl
daa
pop
dec
aas
sub
jns
out
out
xchg
icebp
xchg
fsts
push
divl
dec
and
sbb
enter
sbb
pusha
aaa
mov
xlat
xor
add
push
loopne
push
cmp
lahf
xor
cmpl
xor
adc
jns
add
lock
mov
ds
jne
pushl
push
into
rol
ror
mov
dec
dec
jmp
push
es
ja
xchg
mov
cli
push
sahf
inc
stos
ljmp
push
mov
aas
mov
pop
jmp
sbb
lret
sbb
mov
es
mov
outsb
slwpcb
or
cwtl
pop
lret
lret
mov
pop
insb
mov
xor
in
mov
in
outsl
xchg
xchg
or
cltd
sbb
daa
mov
imul
in
out
mov
xchg
imul
gs
imul
cs
test
aaa
call
sbb
adc
inc
xchg
push
xor
bound
dec
cmp
arpl
loopne
dec
cmp
cs
pushf
test
mov
push
pop
movsb
popa
cmp
jne
push
call
mov
stos
pushf
push
imul
pop
popf
popf
in
pusha
inc
and
dec
lret
push
pushf
lds
iret
push
mov
aam
xchg
push
negb
sub
mov
pushf
outsb
int3
jmp
adc
add
mov
dec
cmpsl
adc
cltd
outsb
mov
sbb
jno
pushf
xchg
jg
pop
mov
dec
inc
leave
mov
cwtl
sub
addl
push
sbb
inc
jno
xlat
jo
shld
jmp
lods
push
sbb
aam
stos
sub
cmp
or
sub
out
js
push
and
popa
inc
notb
les
repnz
push
inc
dec
mov
adc
cmp
sbb
out
pop
jge
imul
mov
or
scas
mov
arpl
inc
and
sbbb
mov
sbbb
lahf
shl
mov
jecxz
sarb
push
loope
push
push
ror
push
mulb
dec
adc
jno
pusha
fstpt
mov
cmp
jg
in
enter
mov
jns
mov
sbb
sub
ret
punpckhdq
jp
push
mov
sahf
out
ret
dec
movsl
std
ja
pop
mulb
rcll
pop
test
movsl
popa
cmp
gs
inc
js
fwait
mov
jbe
iret
and
fstl
inc
add
and
insb
aaa
inc
lds
outsl
or
sub
into
adc
lds
and
jl
sti
mov
push
mov
xlat
xchg
lcall
push
xor
lcall
cwtl
sbb
in
out
jnp
outsb
lret
lock
push
int3
mov
cmp
bswap
mov
in
cld
pop
sarb
jg
push
sarb
mov
add
adc
jp
imul
xchg
cltd
push
jbe
add
loope
loop
int3
shl
insb
insl
mov
cmp
icebp
or
pop
xchg
add
mov
jecxz
sti
dec
iret
rorb
or
pop
mov
lods
fcmovnbe
outsl
mov
push
popa
imul
jb
fcoml
ret
dec
push
mov
xor
icebp
mov
jg
gs
mov
aas
jo
and
mov
pop
or
dec
aaa
adc
lcall
mov
push
xor
adc
add
pusha
or
cli
lret
int3
pop
gs
jecxz
pop
push
out
mov
adc
fisubs
mov
es
adc
mov
push
mov
sbb
cmp
nop
dec
movsl
xchg
testb
loop
mov
pop
andb
fnstcw
cwtl
fs
cli
mov
cltd
lret
adcl
adc
in
push
mov
mov
mov
push
fidivrs
leave
push
fsubr
es
pusha
xchg
je
pop
xchg
mov
sbb
xchg
inc
inc
xchg
stc
xor
call
aad
jp
sbb
mov
scas
stos
movsl
sti
loopne
mov
hlt
mov
pop
cli
loopne
test
jno
cmp
int
or
icebp
stos
push
or
scas
xchg
shlb
shl
xor
insb
pushf
jo
mov
fldl
sbb
jne
add
ss
jo
add
pop
add
add
mov
mov
loop
jmp
xor
xor
cmc
idivb
xor
into
push
xor
mov
jbe
das
adcl
daa
fsts
loope
pop
fs
push
icebp
andl
outsb
adc
call
push
popa
mov
lock
outsl
xor
popf
outsb
xchg
sbbb
dec
push
ss
dec
inc
dec
int
idivb
push
pop
outsb
imul
jp
pop
push
dec
sbb
inc
add
mov
mov
dec
inc
rep
mov
and
mov
mov
mov
sub
loop
xchg
xchg
stc
or
dec
cmp
mov
sub
mov
jl
xchg
std
dec
dec
adc
cltd
xchg
arpl
test
pop
ret
dec
out
imul
lods
outsl
or
push
mov
xor
pop
andb
dec
inc
adc
lock
imul
fs
int3
or
dec
ret
pop
in
cs
inc
ljmp
xchg
adc
dec
cmpsl
pushf
cmp
sub
add
mov
in
outsb
movnti
jbe
loop
in
sbb
movsl
jae
adc
add
gs
fnstsw
jmp
dec
cld
dec
lahf
adc
into
jecxz
pop
push
xor
cmp
inc
addr16
aad
movsb
jne
sbb
aam
shll
shll
ret
xchg
pop
idivb
je
test
arpl
cmp
xchg
xor
aaa
lahf
daa
out
repz
mov
mov
dec
sbbb
sbb
ja
bound
push
xchg
and
push
rorb
pushf
push
mov
adc
aaa
dec
int
add
sbb
push
mov
aaa
mov
jcxz
imul
jg
or
cmp
call
xor
xchg
add
addr16
mov
popa
rcr
jbe
xchg
cmpsl
lret
cmp
pop
cltd
ret
or
push
fadds
xchg
inc
mov
cmp
sbb
call
pop
std
and
push
jns
xor
test
mov
sbb
push
pop
xchg
or
fisttps
xchg
add
nop
mov
pop
addr16
mov
inc
cmpsl
push
xchg
mov
fistps
inc
xor
mov
in
xor
lret
mov
jecxz
bound
dec
xchg
xchg
scas
xchg
fadds
xchg
in
cmpsl
pop
add
adc
xor
xor
and
sbb
dec
push
sub
cmc
or
or
fisubrl
xor
push
roll
jo
mov
repnz
fcoml
shlb
mov
inc
push
push
xchg
add
mov
les
jns
xlat
les
addr16
mov
xchg
mov
cmp
pop
into
jo
in
xchg
xchg
stc
rorb
dec
pusha
int
xor
int
ret
jns
insb
push
push
jnp
sbb
jno
mov
shr
icebp
out
lret
or
stc
shrl
ds
pop
pop
dec
test
xchg
mov
lds
pop
cmpsl
repnz
mov
ret
aad
sahf
dec
fcmovu
mov
inc
sarb
pop
clc
pop
sahf
js
jb
hlt
inc
sub
mov
pop
lods
out
imul
mov
xor
jp
hlt
lret
sbb
sub
fwait
cmp
dec
push
push
gs
ror
icebp
adc
aad
cmp
lcall
mov
mov
cmp
push
mov
push
cmp
lahf
call
xor
fists
aad
cwtl
test
rclb
cli
fadds
cmp
sti
push
sub
fnstsw
das
cmp
fnstsw
mov
sbbb
inc
orl
and
sub
lcall
clc
inc
ljmp
xchg
push
int3
dec
or
cmp
pop
mov
pop
push
mov
ja
cld
or
push
daa
adc
jg
jo
pop
lret
out
push
push
lahf
outsl
cmpsl
insb
mov
mov
pop
fdivl
nop
ljmp
dec
aas
ficoms
in
jb
and
sti
mov
mov
mov
sbb
cmc
cmp
nop
in
push
mov
pop
scas
ja
jmp
cli
movl
push
and
cmp
xchg
leave
ret
std
stos
stc
xchg
lods
dec
lret
scas
jno
popf
nop
mov
adc
mov
hlt
ljmp
sbbl
mov
xlat
hlt
mov
js
leave
sub
xchg
jbe
adc
mov
inc
inc
push
push
lock
inc
movl
sub
fsub
pop
adc
mov
mov
jle
ret
stc
std
sub
mov
mov
mov
cmc
lods
xor
and
xchg
xchg
in
in
adc
stc
ret
pop
mov
jl
mov
xchg
hlt
ja
scas
imul
imul
pop
gs
mov
push
leave
mov
imul
add
sub
dec
mov
popa
fisubs
push
xchg
movsl
cmpsl
ja
ds
icebp
or
jmp
pushf
aas
movsl
in
cmpl
dec
mov
mov
push
fdiv
push
jae
scas
mov
jnp
jno
jl
sub
xor
dec
inc
add
pushf
cwtl
call
push
xlat
shlb
cmp
je
adc
mov
pop
in
xor
aas
rcrl
push
inc
fcmovne
shll
sbb
popf
add
jmp
or
movsb
dec
repz
popf
ljmp
jle
aam
mov
aam
lock
das
pushaw
cltd
subb
mov
lods
mov
sbb
jmp
xchg
pusha
xchg
ljmp
push
and
add
jl
sahf
cmp
fcmove
mov
xchg
or
aas
and
dec
repz
push
pop
pop
jge
testb
test
stos
xor
cwtl
adc
jns
add
enter
xor
frstor
push
jb
xor
jge
and
repz
loope
sbb
mov
mov
lods
mov
imul
inc
out
adc
popf
movsb
sub
jbe
mov
mov
mov
mov
bound
pop
imul
mov
jle
add
push
sahf
sbb
outsb
pop
out
orb
fmuls
mov
sbb
sarb
mov
lods
and
les
addr16
call
leavew
cmp
in
int3
pop
inc
xchg
loope
pop
decb
dec
cs
mov
cwtl
push
jb
push
enter
cmp
sbb
lods
push
shlb
jecxz
cltd
int3
dec
pop
shr
sub
or
push
add
fdivrl
sbb
push
pop
xchg
addb
jno
mov
hlt
enter
dec
cmc
or
and
jb
pop
pop
incl
aas
jp
or
lret
aad
push
mov
mov
iret
and
adc
nop
jb
mov
mov
outsb
mov
lock
in
in
inc
cmp
mov
sbb
mov
cmp
shlb
sub
mov
or
fdivrp
addb
pop
and
test
mov
inc
dec
mov
mov
roll
sub
push
dec
cltd
pop
xor
push
and
ficoml
and
inc
or
xchg
sbb
fsubrl
test
call
loop
inc
iret
mov
movsl
leave
fldt
xchg
sub
jb
pop
xor
orb
sub
jb
popa
das
test
mov
popa
push
test
dec
clc
mov
pusha
mov
dec
nop
enter
sar
inc
sub
adc
pop
inc
adcb
out
pop
scas
dec
pop
jp
inc
or
xorl
cmpsl
sub
and
mov
cltd
adc
test
push
sub
or
jge
jge
push
sbb
in
lea
xchg
dec
inc
imul
dec
and
test
mov
sbb
je
rcr
add
add
inc
into
adc
sbb
ret
sarb
shl
mov
push
popf
nop
iret
loope
push
pop
sbb
jmp
mov
lods
sti
fbld
pop
mov
sub
ljmp
push
imul
sbb
pushf
filds
fbstp
jnp
jb
lods
in
pop
dec
and
dec
xchg
mov
enter
int3
jge
xchg
or
daa
or
fnstsw
mov
dec
jle
cmp
xorl
or
jle
les
push
adc
sub
push
inc
and
push
out
dec
cmp
mov
ss
fxch
cmpsl
shlb
adc
push
in
dec
sbb
mov
push
je
gs
out
push
dec
cmp
jl
jae
inc
and
jb
pop
mov
xchg
js
repnz
inc
or
mov
xor
adc
test
mov
sbb
pop
and
xor
scas
mov
jle
enter
adc
push
sbb
inc
iret
sbb
cmp
out
sbb
aaa
insb
sbb
xchg
aam
jl
enter
imul
mov
mov
hlt
inc
or
jmp
push
cmp
pushf
or
xchg
filds
je
sbb
int
sbb
pop
xchg
push
in
jmp
mov
sub
pop
dec
xchg
std
out
idivl
cltd
cmp
in
pop
cltd
add
outsl
sahf
dec
test
xchg
daa
loop
pop
rcl
mov
inc
mov
inc
cld
bnd
push
arpl
mov
or
mov
aam
cmp
cmp
sahf
fldenv
scas
jb
test
pop
push
cli
pop
pushf
sahf
xor
jbe
mov
sub
lcall
xor
xor
insb
lret
in
cwtl
addr16
and
outsl
dec
into
loop
jno
xlat
insl
stos
dec
repnz
cli
add
in
ja
lcall
pop
push
nop
push
pop
ret
inc
fisubrs
sub
inc
ret
mov
cmp
xchg
add
stc
and
xor
and
cmp
fst
das
test
jb
push
cmp
mov
jne
push
mov
mov
mov
mov
lret
bound
fldt
movsb
cmp
mov
add
lret
lods
mov
xchg
testl
jmp
lea
clc
push
mov
fdivrs
inc
adc
and
mov
cmp
andl
mov
lock
in
pop
dec
jns
lahf
das
aas
inc
fdivrs
dec
movsl
jmp
and
shll
push
nop
cmp
cmp
mov
ljmp
mulb
mov
fs
jbe
insb
pusha
inc
sbb
mov
mov
rolb
sbb
dec
push
cmc
lods
pop
sbb
cli
into
in
jo
loopne
int
push
mov
lds
pushf
shll
jbe
mov
dec
std
sub
dec
cmp
jg
out
outsb
push
aad
hlt
test
push
jne
pop
mov
adc
test
sbb
cmp
sbbb
enter
or
ja
adc
xchg
addr16
mov
pop
mov
test
loope
push
cs
pop
ss
mov
in
stos
outsl
pop
int3
leave
xchg
mov
aad
pop
cmp
in
dec
dec
imul
xor
adcb
inc
lret
xchg
cwtl
dec
cs
fmull
add
in
sti
jmp
ds
jns
lahf
fisttpl
jmp
fadds
lods
push
mov
ret
add
sbb
dec
and
lcall
add
add
out
adc
les
mov
fimull
loopne
pop
ljmp
icebp
mov
stc
sub
je
aaa
xchg
inc
sar
dec
movsl
lret
sahf
add
mov
cmp
data16
inc
sbb
addr16
jmp
dec
sbb
test
mov
push
xor
pop
out
cld
out
add
jb
arpl
imulb
out
jb
add
sub
cmp
mov
lock
out
cld
in
jae
aad
shl
inc
dec
inc
push
mov
xor
mov
idivl
aaa
and
sbb
adc
sti
push
xor
jge
shlb
sub
sbb
std
sub
fcom
icebp
sub
enter
shrb
jmp
and
test
daa
sub
pop
push
hlt
cmpsl
xor
sbb
push
jo
xor
mov
push
mov
push
testb
push
push
iret
rclw
repz
inc
jns
icebp
xor
stos
cmp
shlb
stc
or
mov
lock
in
data16
jl
mov
xor
ljmp
lcall
rclb
xchg
sbb
lods
sti
jmp
loopne
inc
dec
mov
pop
push
adc
add
inc
mov
inc
flds
sbb
pop
sbb
mov
shlb
xchg
int3
adc
push
or
dec
and
inc
shr
mov
dec
mov
add
cmp
ret
mov
xchg
lret
add
mov
int
test
stc
sti
dec
rorl
je
pushf
daa
call
xchg
dec
lret
mov
push
cmp
push
into
adc
inc
pop
add
add
inc
mov
jns
pusha
mov
or
mov
jne
adc
jns
in
adc
inc
cmc
push
mov
inc
aas
rorb
es
push
xor
addr16
mov
and
stos
mov
ds
xor
lahf
mov
rorb
ljmp
js
fs
mov
gs
sub
cmp
jne
loopne
mov
cmpsb
cmp
jge
shll
test
nop
roll
or
jns
mov
adc
cs
mov
xchg
lret
mov
insl
pop
push
subl
sarl
sub
into
jne
xchg
test
shl
stos
dec
xorl
xchg
fstpl
cmpsb
les
repnz
stos
lahf
sub
in
and
mov
mov
jne
ret
jmp
nop
jp
stc
add
cmp
aaa
nop
mov
or
mov
flds
sbb
fdivrl
bound
push
cmpsl
dec
mov
inc
dec
mov
popa
xorl
or
popf
das
xchg
sbb
jg
out
testb
stos
fwait
mov
stc
and
pop
cs
div
aaa
lock
adc
and
xor
cmp
and
add
pop
dec
in
xchg
or
dec
std
loope
je
daa
push
push
andb
out
insl
jae
dec
fldenv
adc
inc
mov
pusha
adc
sbb
inc
sub
push
lret
cmp
mov
pushf
pusha
fs
mov
inc
aas
adc
add
cmp
sub
and
mov
into
aam
or
dec
gs
push
xor
cmp
jno
xchg
in
fistpll
jge
shll
pop
popa
mov
lret
test
jp
mov
cmp
push
out
scas
and
xchg
mov
mov
into
adc
jecxz
jns
pop
enterw
xchg
push
xor
test
inc
loope
sbb
xchg
mov
shrl
mov
fcmovb
mov
dec
enter
add
cmpsl
mov
shll
push
orl
cwtl
jbe
loop
scas
nop
jge
ds
xor
xchg
iret
out
mov
push
cmp
cmpsl
ret
cmp
mov
cld
fimuls
xchg
imul
loopne
cmpsb
in
in
inc
add
jns
dec
test
cltd
pop
rol
push
adc
mov
loope
xchg
cmp
jne
loop
jecxz
test
inc
ficoms
daa
movsl
push
sub
sbb
pop
xchg
push
lea
fstps
in
adc
lea
into
jns
pushf
aad
das
push
lock
dec
add
in
daa
add
mov
pop
bound
bound
mov
mov
incb
inc
sbb
and
int
push
aam
adc
enter
or
and
and
dec
and
adc
and
adc
cmp
pushf
inc
pop
stos
daa
popf
mov
xchg
adc
aas
aad
lock
xor
sahf
enter
dec
xor
mov
jl
push
repz
push
pop
dec
push
sbb
push
rorl
add
pop
or
mov
fsts
mov
rorl
ljmp
pop
sub
int
xchg
push
repnz
movsl
xchg
pop
das
xor
xchg
mov
cli
sahf
push
cmp
mov
or
pop
adc
mov
pop
stc
sar
adc
into
test
je
pop
push
lahf
adc
cmc
gs
sub
fwait
xor
sub
cmc
mov
shl
in
inc
das
add
addb
add
les
loop
daa
xor
mov
xchg
std
in
and
into
loopne
mov
mov
mov
mov
jl
outsl
inc
mov
dec
pop
xor
test
xor
lcall
cwtl
adc
push
mov
xor
mov
jge
sbb
loopne
stos
popf
and
lds
or
xchg
ds
jb
xlat
scas
mov
movsb
jbe
xchg
xchg
push
pop
mov
js
pop
iret
icebp
add
xchg
stc
pop
fisubs
pop
xchg
adc
pop
adc
jmp
das
scas
adcb
insl
cmp
dec
imul
nop
mov
mov
rorb
mov
cmpsb
xor
inc
pushf
jno
lret
mulb
xchg
es
cmpsb
dec
jle
lahf
ret
cmc
insl
add
pusha
jae
insb
repnz
adc
scas
push
insl
sbb
cmp
push
cltd
push
jmp
mov
or
pop
mov
mov
jns
fidivrs
orb
pop
cmp
in
mov
ret
pop
pop
insb
imul
mov
addr16
shl
push
in
cltd
in
add
mov
jmp
mov
arpl
test
les
cmp
imul
fdiv
mov
arpl
and
out
aaa
mov
sub
jae
and
mov
movsb
adc
sub
push
fwait
loopne
mov
inc
rorb
andb
mov
or
sub
in
insl
mov
mov
fimuls
fwait
pop
out
popa
mov
fidivl
dec
stc
subb
outsl
inc
shlb
fsubr
mov
mov
add
or
dec
and
mov
push
jl
clc
pusha
mov
pusha
add
repnz
movq
clc
and
xchg
or
jge
stos
pop
iret
pop
out
or
in
into
insb
or
mul
mov
push
movsb
mov
fists
enter
jnp
xchg
cmp
cmpsl
into
push
push
stos
lcall
sub
sti
push
lea
add
sub
shll
mov
rorb
jmp
push
lea
fldcw
cld
loopne
mov
add
ja
xchg
stos
insb
fldcw
sub
je
xor
rorl
shlb
mov
in
and
mov
or
and
movsl
bswap
clc
push
xchg
and
jl
lret
pop
imul
and
push
cmp
pop
and
outsb
int3
loop
push
or
lcall
sarl
pushf
add
push
pop
adc
mov
adc
push
mov
jno
ret
inc
inc
jmp
xor
lret
add
loop
xor
jecxz
dec
dec
gs
pop
inc
in
mov
test
inc
pop
and
icebp
imul
clc
cmp
not
je
xor
cltd
mov
loopne
add
rolb
and
add
sbb
pop
mov
xor
push
push
call
xchg
sub
pop
hlt
jecxz
and
inc
pop
mov
mov
push
dec
lods
and
scas
movsl
inc
ss
adc
jp
dec
pusha
in
push
mov
repz
nop
ret
push
ret
cmpb
pop
fidivrl
pextrw
inc
ret
mov
mov
mov
and
add
inc
mov
stos
out
xchg
pusha
hlt
add
jbe
scas
cmp
stos
and
loope
outsb
mov
movsl
mov
sub
shlb
sbb
stos
shll
dec
lods
xor
xchg
mov
sbb
pop
jns
fidivl
xchg
sbb
sbb
icebp
in
outsb
loope
dec
or
lock
xchg
dec
push
sub
sub
xor
stos
and
cmpsl
test
mov
jmp
jg
add
in
ret
scas
sbb
mov
cli
mov
mov
repnz
inc
bound
add
dec
pop
test
jno
jns
xchg
lods
lcall
pop
push
mov
fisttpll
loop
or
push
dec
in
hlt
les
aad
loopne
pop
and
adc
mov
fs
add
xor
gs
jmp
push
in
aam
push
cmp
push
push
mov
jg
int3
loopne
push
fists
mov
inc
daa
rorl
mov
rcr
test
arpl
fistpl
jecxz
aad
xor
add
xchg
pop
push
scas
in
add
xchg
sbb
xchg
dec
and
out
sti
repz
scas
xchg
xor
cmp
sbb
mov
pushf
lock
fbstp
pop
jbe
arpl
cmp
cltd
jle
push
cmc
push
pop
add
rep
or
cmpsb
enter
mov
xchg
pop
inc
fistpll
mov
cmp
or
pop
call
mov
inc
roll
adc
das
fisubs
inc
aam
in
enter
loope
nop
movl
dec
callw
sub
mov
outsb
xor
out
mov
pop
je
push
movsb
cmp
push
mov
xchg
or
sbb
test
mov
ss
fidivl
mov
rolb
in
lret
mov
jae
gs
dec
test
ljmp
gs
xchg
dec
add
mov
adc
dec
sbb
add
adc
mov
call
cmp
and
dec
jge
repz
shll
out
xchg
ljmp
ja
and
jno
xchg
pop
clc
in
rorb
mov
mov
push
jmp
dec
in
push
dec
out
or
popf
ja
mov
inc
sbb
inc
mov
fcmovnb
mov
xchg
imul
sub
leave
xchg
or
dec
push
cltd
jl
jno
lea
ret
add
sbb
push
fdivrs
and
push
out
cmp
jp
add
cs
enter
pop
cmpl
std
lods
pusha
fwait
cld
jl
mov
int
lcall
sub
dec
pushf
and
xchg
pop
fwait
push
xor
bound
test
adc
pop
test
into
ds
sahf
push
sarb
fstpt
adc
sub
or
frstor
mov
mov
imulb
das
sub
add
std
xor
stos
rcrl
xlat
jbe,pt
lret
cwtl
imul
xlat
cld
jecxz
adc
movsl
cwtl
lds
xchg
stos
pusha
pop
lret
sbb
fmuls
popa
xchg
adc
push
testl
mov
add
mov
clc
mov
mov
pop
xor
add
in
adc
daa
orl
int
jns
push
mov
negb
das
jne
mov
sti
in
call
pop
add
sbb
mov
adc
daa
bound
inc
xor
imul
mov
mov
int
ljmp
fisubl
mov
sub
push
ss
aam
je
mov
inc
fistl
pop
cltd
mov
rolb
ja
add
test
mov
adc
sbb
stos
clc
mov
sbb
dec
addl
fistpl
outsl
xchg
jbe
sbb
ds
imul
mov
test
cmp
push
jno
ret
mov
lea
jnp,pt
jbe
jmp
sti
dec
xchg
mov
push
push
into
pushf
mov
adc
int
in
xchg
idiv
jp
into
adc
movsl
jmp
push
mov
dec
pop
mov
divl
orb
sbb
aaa
js
movsb
push
push
sbb
sbb
push
popl
pop
push
jl
add
mov
rcrl
ret
stos
popa
jmp
dec
adc
xchg
jo
clc
sub
lods
fwait
pop
jmp
test
mov
xor
inc
push
sub
adc
and
xlat
aaa
pop
sub
or
jno
clc
popf
dec
adc
movlps
fiaddl
push
inc
jbe
cltd
mov
daa
pop
adc
mov
xor
subb
std
fs
xor
in
hlt
in
and
jmp
jb
int
out
cmp
cs
mov
stos
leave
push
mov
mov
fisubrl
addr16
clc
mov
inc
push
rcll
int3
mov
sub
xchg
fstpl
push
int
jae
mov
push
sbb
sub
fucomi
or
leave
jmp
insb
xchg
ret
adc
push
cmp
popf
add
mov
in
scas
mov
mov
js
push
jnp
xchg
jnp
or
notl
cwtl
push
jo
mov
dec
or
rclb
or
add
xor
sub
cmp
movsl
lds
clc
sti
cmp
lret
cld
pop
pop
int3
ja
jg
fcomps
out
scas
mov
aam
pusha
sbb
sub
cmp
jnp
mov
ss
mov
push
daa
cmpsl
repnz
aad
inc
int
jge
ret
inc
pusha
inc
adc
push
mov
call
jno
sub
or
mov
mov
ja
cmp
cmp
stc
sub
mov
jge
inc
inc
stc
nop
test
cmc
dec
jg
syscall
mov
cwtl
or
mov
mov
lods
in
loope
lret
sub
rep
inc
push
fwait
cmp
or
inc
divl
sub
in
xchg
scas
dec
pop
rcl
mov
sub
and
xchg
or
jae
adc
xchg
hlt
addps
jnp
in
cwtl
repnz
pop
fdiv
and
inc
sbb
push
ret
mov
popa
adc
xchg
loopne
push
ret
xchg
sbb
xor
les
out
push
mov
xchg
mov
cmp
les
fdivp
sbb
movups
ja
lret
pop
leave
sub
mov
orps
mov
xchg
add
or
cmp
or
adc
and
ljmp
mov
fmull
testb
js
idivb
dec
mov
out
push
hlt
xor
mov
in
inc
test
push
or
add
push
aaa
add
fidivl
jle
add
pop
push
std
jmp
loopne
cltd
in
repz
push
sahf
jl
scas
adc
aam
pop
insl
cwtl
add
sbb
jg
sbb
lcall
jl
cld
movsb
icebp
sbb
pop
pop
or
sbb
call
push
sbb
mov
mov
pop
test
inc
pushf
dec
mov
jmp
test
das
lea
mov
jbe
sub
dec
jb
mov
xlat
out
add
stos
subb
sub
jmp
cmp
out
rorb
mov
sbb
rcrl
shll
jmp
nop
dec
push
cmp
vmptrst
loop
int3
sti
mov
bound
loop
jmp
ss
dec
mov
daa
andb
int3
or
bound
jecxz
stos
mov
sti
and
pop
shlb
addr16
hlt
cmc
pop
or
ljmp
nop
mov
repnz
ljmp
int3
cmpsl
mov
xorl
pop
mov
ds
jmp
das
popa
xchg
lcall
xchg
mov
sbb
scas
ss
or
or
mov
std
cs
xor
cmc
fwait
and
repnz
rclb
xor
gs
xorb
in
lret
or
stc
jno
mov
push
dec
lods
xchg
xor
stos
movsl
sbb
push
das
mov
nop
jo
aad
xchg
cmp
mov
lods
fistpl
xchg
mov
mov
rcll
insb
and
dec
ss
xchg
outsb
inc
push
ss
inc
push
cmp
fmull
sub
lods
jge
pusha
pmaxsw
mov
or
xchg
pop
mov
mov
out
aas
and
imul
rcll
aad
push
and
rclb
pop
cmpsl
repnz
lret
or
mov
dec
das
out
jns
fucompp
fwait
cld
or
stc
add
pop
xor
sbb
sbb
jo
and
dec
or
pop
dec
dec
pop
rcrb
xchg
scas
aaa
popf
sbb
push
jns
test
or
out
out
ret
cs
imul
dec
inc
lea
sub
sub
stos
mov
jp
and
aas
adc
inc
adc
dec
shlb
lods
xchg
xchg
outsl
mov
xchg
mov
sbb
lock
mov
lock
sub
cld
or
ret
ret
inc
inc
mov
cs
aas
lds
into
cmp
dec
shlb
mov
rcl
or
xor
int3
sub
cmp
sbb
cwtl
sub
sub
mov
iret
test
jae
pop
cltd
add
lock
add
mov
js
add
push
les
fidivs
sti
fcoml
fdivrs
push
mov
aad
adc
adc
pop
pop
and
push
mov
cmp
mov
mov
mov
mov
dec
mov
push
jecxz
xchg
enter
jns
sahf
xchg
in
loop
adc
add
jnp
add
xchg
loop
add
pop
sti
adc
push
rcll
push
stc
addl
lods
jnp
pop
dec
mov
subb
pop
inc
pushf
dec
xchg
mov
xchg
pop
mov
cmp
fwait
adc
mov
pop
jbe
jne
sbb
sub
push
ret
test
add
mov
pop
andl
dec
das
push
popf
xchg
xchg
mov
divl
je
xor
mov
and
push
push
jnp
in
mov
cmpsb
jle
sub
div
add
push
out
adc
push
lcall
jle
xor
das
fildll
sub
dec
or
arpl
into
testb
xor
stc
es
xchg
push
sub
nop
mov
imul
add
add
lahf
inc
popf
mov
inc
push
sti
dec
ficoml
cmp
xor
test
jae
andb
les
sbb
loopne
cmpsl
cmc
neg
bswap
and
ljmp
jne
fdivrs
mov
rol
xor
insl
mov
xchg
dec
je
push
add
adc
bound
push
or
xor
lret
inc
insb
push
in
shrl
nop
sbb
jp
mov
testl
imul
pop
dec
pop
xor
pop
xor
mov
adc
das
ss
mov
pusha
xor
cwtl
call
jg
adc
jb
sub
rorb
rcll
jg
mov
lret
fwait
insl
clc
idivl
out
mov
clc
jo
rorb
cmpb
pop
pop
cmp
mov
shl
fisubl
lods
add
ucomiss
sbb
negl
xchg
lds
mov
repz
xor
and
test
enter
jle
out
stc
jb
ffree
lret
sub
mov
test
sbb
or
adc
cmp
ret
addr16
aaa
xor
rorl
xchg
fiaddl
popa
imul
bound
lret
dec
inc
arpl
pushf
mov
imul
cld
push
insb
out
xchg
inc
xchg
call
enter
sbb
std
insw
jb
scas
mov
sti
pop
and
inc
mov
shrb
cld
cmpsl
cmpb
mov
cwtl
adc
push
cmp
hlt
frstpm(287
jmp
lahf
scas
sbb
jmp
mov
leave
std
fcompl
nop
sbb
sar
pop
out
out
in
push
shl
in
cli
scas
add
std
ficompl
pop
icebp
push
jl
push
mov
int
ljmp
jno
dec
cmp
call
sub
popf
in
pop
xor
movsb
rorl
sub
xchg
test
flds
stos
adc
mov
inc
xchg
jecxz
std
cmpsb
cs
xchg
lret
sub
jge
ret
testb
cmp
sub
fstpt
mov
in
movsb
lcall
inc
insb
movl
mov
lcall
gs
push
out
and
xorb
jmp
repz
push
scas
outsl
or
jae
sub
shlb
stc
cwtl
mov
orb
mov
imul
repz
test
mov
es
lds
frstor
mov
into
push
xchg
lahf
jbe
fiaddl
arpl
iret
or
xchg
jge
rol
jne
ja
jb
repnz
fdivr
scas
sbb
popa
cmp
mov
leave
addr16
or
icebp
sub
insb
jno
mov
in
jo
ljmp
pop
out
mov
shrb
jne
push
mov
pushf
jp
aad
jmp
fldenv
insb
cmp
loope
and
loop
ror
push
xchg
in
mov
stos
mov
mov
push
xor
jle
movsl
ret
adc
test
fnsave
add
mov
insl
movsl
adc
jnp
es
mov
xorb
sub
sub
and
dec
ss
lret
loopne
push
arpl
shrl
push
cmp
testb
mov
cmp
mov
hlt
dec
test
leave
sbb
daa
dec
stc
mov
lock
loop
inc
push
aad
jne
push
aam
mov
out
aad
cmp
sbb
dec
out
sbb
scas
mov
outsl
mov
mov
mov
pop
pop
dec
ror
xor
adc
leave
les
inc
insb
jle
out
insb
or
xchg
es
mov
adc
std
lret
loopne
dec
pop
ret
mov
ret
mov
popa
mov
push
cmp
inc
mov
test
fmuls
out
mov
rorb
xor
jbe
test
and
sbb
lret
popf
xor
in
adc
fcmovnbe
shrb
jae
movsl
and
cwtl
hlt
mov
xchg
xchg
stos
ljmp
sbb
push
or
and
cltd
pop
jmp
adc
repnz
sbb
adc
inc
mov
test
mov
nop
loopne
out
add
cmc
adc
mov
ds
icebp
xor
mov
pop
subb
les
out
xchg
xchg
and
scas
daa
pushl
sub
call
lea
stos
shlb
data16
sbbb
push
add
xchg
sbb
lahf
pop
scas
pop
decb
sarb
fcmovnbe
cli
mov
repz
js
jp
jp
sub
or
jne
inc
sub
lods
int3
fcomip
cmpl
cmpl
inc
or
ss
sbb
stos
or
mov
addl
mov
or
cmpsl
pop
lods
rclb
adc
pop
jmp
jp
fs
push
testb
cmp
and
add
mov
jno
es
and
sbb
sbb
out
cmp
mov
loop
in
scas
fidivl
mov
sbb
cmp
xor
xor
cmp
shlb
cmp
in
lret
xchg
lds
push
popf
lret
pop
fisubrs
shlb
mov
popa
in
shrl
pop
push
mov
mov
out
in
cmp
pusha
lahf
xchg
lcall
sbb
ljmp
sbb
into
cmpb
mov
xchg
fisttpl
scas
push
or
add
enter
out
cmp
adc
addl
rorb
popf
ljmp
jne
sub
mov
shr
mov
cld
jmp
clc
pop
push
test
add
mov
or
dec
dec
jl
insb
lahf
mov
out
dec
neg
cmp
andb
mov
fidivl
xor
dec
xchg
icebp
es
dec
ret
mov
and
or
mov
daa
jp
repnz
mov
pop
rcrb
push
pop
lret
subl
push
xor
sbb
push
mov
shrl
pop
cmp
arpl
stos
fbld
stos
cmc
stos
or
xor
pop
data16
sub
fdivrs
and
and
pop
xchg
lret
xor
mov
les
sub
or
popf
lcall
push
iret
cmpsb
or
out
and
mov
mov
push
pop
in
mov
mov
dec
mov
aas
mov
mov
mov
jecxz
xchg
dec
xchg
cmp
cmp
cmpsl
in
lea
xor
out
cmp
fstl
or
xchg
cmp
stos
mov
push
sbb
jb
cwtl
jl
sbb
sub
mov
arpl
mov
pop
ret
inc
and
in
je
dec
clc
or
aam
xor
addr16
imull
cmpsl
mov
mov
cmp
cmp
fbld
roll
adc
nop
jo
jbe
addr16
jae
aas
sub
repnz
xor
iret
jbe
push
testl
filds
rclb
enter
sbb
cwtl
aaa
add
repz
div
pop
mov
movsl
sub
sarb
and
dec
scas
scas
cmc
leave
out
jbe
ja
adc
pop
rcll
jae
pavgw
and
outsl
cltd
out
inc
inc
mov
leave
stos
push
repz
cwtl
repnz
add
pop
push
lret
mov
insb
mov
add
movb
jb
pop
add
mov
cs
lods
push
adc
pusha
je
xor
cwtl
xchg
aam
mov
pop
rorb
int3
aaa
int
test
lahf
fsubl
fdiv
scas
cmpsl
enter
out
mov
push
ficoml
loopne
aad
imul
xor
xor
dec
arpl
daa
out
xchg
sub
std
inc
pop
out
imul
dec
mov
cmp
cmp
and
sub
adc
inc
push
add
repz
cmp
sub
jo
popa
xor
inc
fimuls
out
aad
push
cmpsl
lea
push
lods
mov
fwait
dec
mov
stos
pop
lcall
mov
and
test
add
outsb
dec
lahf
aaa
test
out
out
mov
mov
inc
push
xor
dec
shlb
mov
or
mov
daa
pop
dec
ret
neg
xchg
adcl
pop
push
call
add
cli
mov
cmp
test
mov
stc
popf
test
and
repz
and
in
mov
push
pushf
dec
cmp
jo
jle
jecxz
js
cmpsl
outsl
push
test
adc
daa
fnstsw
mov
xor
popf
sbb
or
sbb
insl
pop
jmp
sbb
ds
and
inc
add
imull
out
and
push
insb
mov
dec
xor
pop
mov
movsl
out
push
movsb
mov
stc
sahf
mov
mov
xor
int3
js
mov
jae
push
ja
leave
jle
int
jge
jmp
xor
mov
in
repz
mov
dec
xchg
cmpl
repnz
or
xchg
mov
mov
xchg
aam
aas
lret
pop
pusha
out
shll
mov
mov
sub
out
aas
dec
popa
jne
adc
xlat
repz
fnstsw
inc
sbb
cmp
ljmp
pushf
inc
xchg
loop
shl
lcall
push
or
push
adc
mov
inc
sub
or
cmpsb
jle
mov
lock
fidivrs
lods
scas
xchg
cmpsb
inc
pop
or
subl
mov
push
ljmp
lret
and
stc
testb
inc
gs
cld
lods
xor
add
sub
xlat
cwtl
loop
mov
aas
adc
test
add
test
ret
ret
or
xchg
pop
ret
stc
mov
movsb
pushf
add
add
fdivrl
push
ljmp
push
mov
cmc
inc
mov
loop
and
imul
push
xor
lret
jecxz
mov
imull
std
rcr
mov
sahf
jno
call
out
and
pop
icebp
stc
mov
inc
std
or
dec
push
dec
daa
inc
icebp
roll
mov
outsb
pusha
push
pop
dec
dec
jle
fiadds
xchg
lcall
mov
mov
xchg
mov
rolb
push
testb
dec
cmp
into
aaa
jge
jb
iret
iret
test
sbb
int
or
lock
mov
cmc
jmp
sarl
sbb
push
sub
adc
das
pushf
mov
lret
scas
loope
mov
dec
mov
jne
aam
push
repz
xchg
shrb
inc
movzbl
mov
jae
jbe
jno
adc
adc
jns
popf
lods
or
xor
movsbl
int3
push
jb
sub
repnz
dec
xor
or
xchg
in
out
lea
adc
out
adc
adc
dec
jnp
dec
or
adc
movsb
mov
pop
jmp
dec
fmuls
pop
mov
and
fadds
outsb
dec
aam
iret
loop
pop
pop
std
mov
bound
rol
push
cs
std
out
xchg
sbb
push
push
push
outsb
add
daa
fimull
inc
dec
inc
test
pop
push
dec
jbe
fldenv
aam
push
sbb
xchg
sbb
push
clc
test
dec
lods
pushl
ja
mov
adc
in
and
cwtl
pop
xchg
stc
inc
pusha
mov
shll
out
inc
pop
add
jnp
xchg
mov
pop
cltd
int
mov
inc
jl
cmpsl
jl
add
xchg
data16
mov
cmp
xchg
imul
shr
and
mov
xchg
popf
dec
push
lahf
or
ret
dec
out
movsl
jmp
lea
popa
cmc
adc
int3
lret
movsb
vpsubw
orl
or
out
subb
xor
data16
pop
rcr
mov
cmpsl
mov
xchg
jnp
inc
cmpsb
orb
add
cmpsl
gs
mov
xor
nop
daa
mov
adc
dec
jge
sbb
xor
xorl
out
or
inc
test
sbb
adc
mov
lods
mov
nop
sbb
xacquire
jbe
std
mov
outsl
je
mov
fstps
scas
adc
mov
push
fldcw
ss
int3
sbb
aad
xchg
xlat
sub
iret
dec
dec
lods
sti
mov
rcr
sub
aam
lock
push
mov
push
jns
fdivr
outsl
and
cmp
fsubrs
dec
fsubrl
jl
nop
sub
cmpsb
rorb
cwtl
aad
cmp
hlt
data16
and
push
in
ss
pop
repnz
sarb
enter
call
xor
out
lret
mov
jbe
cltd
push
adc
test
in
mov
pop
jecxz
sub
xchg
pslld
call
jle
push
xor
pop
in
pop
fldcw
sub
pop
cli
adc
das
lods
rcr
jg
and
lods
pop
in
xlat
inc
and
xchg
mov
xchg
scas
rol
insb
lcall
and
pop
mov
xchg
loopne
dec
and
loopne
sbb
inc
bound
add
inc
frstor
je
mov
pop
cmc
xchg
data16
mov
lcall
push
xor
sub
scas
inc
icebp
or
mov
inc
leave
gs
push
movswl
roll
ret
ljmp
sbb
fisubrs
and
pop
movsb
lds
imul
repnz
inc
xchg
xchg
add
mov
pop
add
ret
jnp
sbb
cmpsl
mov
pop
cmp
lcall
pop
jae
xor
fldl
loop
mov
mov
inc
ret
fstp
cmp
and
mov
in
daa
xor
push
movsl
pop
xchg
dec
fadds
aad
inc
add
jbe
sahf
shlb
hlt
inc
out
sub
adc
jns
xchg
into
shlb
cld
and
ja
int
popa
aam
lods
das
xor
bound
add
leave
ja
sti
inc
gs
jmp
adc
cmp
iret
mov
jae
lods
daa
mov
cltd
dec
sbb
leave
in
stos
jcxz
cmp
fld
xchg
lods
add
xchg
cld
add
insl
xor
push
ss
inc
mov
mov
scas
and
insb
in
xchg
mov
xchg
ret
xor
mov
roll
xor
push
jns
arpl
fcoms
xor
mov
jecxz
cmp
sub
xor
scas
pop
jecxz
leave
add
push
xor
dec
mov
mov
fcmovne
out
mov
and
jle
inc
xorl
ret
add
dec
xchg
push
push
push
or
cmp
jno
add
dec
sbb
out
cltd
xchg
fadds
push
mov
xchg
orl
or
jnp
lds
xchg
xor
cmp
pop
xchg
sub
xorb
jle
xchg
xchg
testl
pop
xlat
jge
sti
mul
data16
dec
xchg
fsubp
sbb
mov
pushf
jo
inc
js
jnp
shlb
imul
dec
stos
jbe
lahf
dec
outsb
and
dec
jb
and
insb
lods
dec
cmp
push
js
fistpl
mov
mov
sbb
sbb
call
iret
push
push
push
movsl
xor
arpl
pop
sub
das
fimuls
mov
adc
pop
pop
dec
push
sub
icebp
jp
aas
sbb
sbb
stos
inc
dec
and
xchg
in
xchg
das
mov
jecxz
jle
xor
add
sub
dec
cmp
and
cmpsb
rorb
push
mov
lods
cmpsb
sbbl
test
das
fidivrl
cmpsb
jnp
in
lahf
push
mov
push
sbb
stc
xchg
ficomps
outsw
hlt
lret
adc
or
pop
aas
sub
out
fcomps
inc
bound
insb
cmp
inc
int
mov
cli
pushf
xor
and
cmp
mov
arpl
movsl
loope
es
dec
add
and
push
or
clc
adc
rolb
jl
rcrl
xchg
lcall
stc
xor
jge
rcrb
and
leave
ficomps
repz
shrb
icebp
dec
dec
fstl
cmp
dec
sbb
loop
insb
out
pop
inc
cmp
or
dec
into
or
popl
pop
add
fs
in
lret
lcall
mov
push
rorb
dec
or
xchg
lods
cmp
lcall
inc
adc
sarl
add
out
popa
inc
add
xor
fcoml
inc
jecxz
inc
test
cmp
ds
and
es
xchg
fcompl
push
xor
xor
sbb
xorl
jb
lret
jmp
inc
adc
or
stos
sti
sbb
ret
shlb
orl
push
dec
or
jl
sub
es
inc
jb
or
dec
pushf
test
call
aas
pop
xchg
into
outsb
or
inc
inc
ds
adc
push
cmc
adc
mov
rclb
push
jae
addr16
call
ja,pn
popf
adc
out
imul
xchg
iret
dec
mov
cmp
lret
adc
xchg
movsl
std
leave
add
and
jge
lahf
jae
push
mov
sbb
fcmove
test
leavew
cmp
arpl
lcall
sub
and
loope
in
push
nop
pop
fildl
jbe
daa
repz
in
pop
int
jae
push
mov
jg
rsm
arpl
and
lods
or
lea
sbb
lods
fildl
or
and
sahf
enter
ret
cmp
jo
ss
rcrl
std
lcall
xchg
nop
out
jae
push
pop
lret
popa
iret
jl
xor
sub
loop
inc
dec
int3
clc
out
jle
xor
mov
es
inc
adc
test
stc
push
jb
sbb
xor
add
rorb
mov
mov
nop
dec
lret
outsb
sub
dec
mov
jl
sub
mov
and
pop
daa
push
gs
pop
sbb
adc
push
js
lret
push
jecxz
xchg
push
data16
adc
and
jp
inc
dec
sub
pop
dec
test
sbb
pusha
in
stc
icebp
xchg
lret
pusha
cld
mov
mov
movsl
loopne
sub
loope
mov
dec
ret
subl
mov
repnz
aad
jle
cmp
jae
mov
add
nop
idivl
loope
arpl
ret
scas
inc
pop
inc
add
arpl
jg
fdivrl
fs
and
mov
iret
xchg
sbb
shll
pop
add
mov
aas
mov
nop
dec
jmp
arpl
pop
cmp
jle
cmp
lods
inc
push
mov
or
pushw
lods
and
cmp
dec
push
or
and
mov
test
shll
dec
adc
ja
jb
sbb
nop
int3
sub
repz
orl
xchg
stos
mov
add
movsb
xchg
sub
mov
movsl
roll
xor
cmpsb
add
mov
fcompl
scas
testb
mov
dec
js
sbb
or
stos
push
pop
and
pop
jmp
xchg
idivl
addb
sub
pop
cmc
push
mov
int
mov
mov
shlb
fisttps
jb
cmp
jecxz
mov
icebp
movsl
cmp
cli
in
and
pop
scas
push
out
and
ljmp
xchg
aad
outsl
mov
lcall
sar
pop
jne
add
and
push
and
movsb
jns
dec
xorb
dec
call
andl
mov
pop
jne
popa
mov
call
push
inc
and
pop
sbb
xor
or
fwait
dec
out
test
inc
loope
mov
push
shlb
sbb
or
ja
cmc
inc
mov
mov
inc
mov
sahf
movd
inc
cmpsb
dec
cld
insb
xor
xchg
lcall
pop
jae
xor
repz
jg
repz
cmp
shrl
xchg
ljmp
aaa
dec
jmp
das
xchg
push
sbb
jbe
lods
out
xor
sahf
scas
and
xor
test
rcr
lret
ret
adc
mov
sbb
dec
or
sbb
sarb
jmp
and
inc
jb
cld
cs
dec
stos
xor
faddl
popl
hlt
ret
in
cmc
jmp
ss
push
mov
cmp
add
and
sbb
push
and
fisubl
xchg
cmp
mov
mov
dec
frstor
xor
mov
and
sbb
daa
jge
fs
outsl
and
js
addb
xchg
and
xchg
sbbl
das
mov
mov
dec
mov
test
mov
mov
popf
cld
mov
cmp
cld
dec
std
clc
push
cli
cmp
cmp
std
dec
fs
dec
ja
outsb
adc
xor
add
pop
addr16
mov
pop
sbb
sbb
data16
jecxz
add
cmpsl
fs
xor
not
cmpsl
add
pop
add
fmul
push
push
bound
cli
xchg
fists
in
jnp
stc
pusha
sti
loop
mov
sarb
lcall
pop
add
sti
in
push
jnp
outsb
movsb
imul
xor
mov
lret
js
cs
lock
and
sahf
in
pop
outsb
fsubrs
sub
into
sbb
shll
repz
jmp
lret
enter
push
xchg
cmp
mov
rclb
adc
and
test
pop
idivb
jbe
sub
sbb
loope
pop
ret
cli
jnp
jne
inc
jmp
xchg
cmp
subl
decl
lock
dec
stos
iret
cmp
inc
out
mov
loope
repnz
mov
outsl
in
outsl
jb
pop
mov
push
pop
enter
scas
xchg
lods
xchg
adc
shll
mov
mov
scas
sub
mov
pop
add
and
fwait
sahf
dec
mov
aaa
cmp
dec
dec
filds
push
shlb
cmp
push
lock
loope
cmp
lret
std
sub
xchg
lahf
sbb
cs
jge
cmc
push
sbb
sbb
mov
or
cmpsl
fs
cmp
push
dec
fsubr
xchg
sub
test
push
ret
mov
rolb
or
iret
mov
xor
add
pop
inc
mul
pop
cmp
jge
pop
or
sbb
inc
cmc
adc
pop
pop
loop
dec
ret
inc
add
je
sbb
scas
jnp
pop
and
jge
dec
pusha
sub
das
jnp
mov
jmp
or
stc
xchg
mov
sbb
adc
lcall
pop
imul
xor
and
cmpsb
mov
mov
push
xor
xchg
push
adc
loope
aas
out
loop
lahf
ss
lret
jge
clc
mov
xlat
jb
xchg
sub
data16
mov
lret
dec
mov
aas
pop
imul
fs
or
inc
shr
andb
mov
or
mov
jge
xorb
ja
inc
adc
and
push
push
into
je
popf
pop
or
popf
lea
mov
stc
gs
sub
and
orb
data16
adc
sub
push
into
sbb
add
leave
sub
into
aas
movsb
xchg
cli
adc
daa
xchg
ja
insl
push
sbb
jmp
aad
jmp
xor
mov
enter
pop
or
or
sbb
setle
push
push
hlt
and
shrb
int
pop
jecxz
movsb
dec
sar
dec
jge
shlb
xchg
mov
shlb
or
adc
inc
loop
in
adc
lret
pop
mov
and
cmp
jns
xchg
test
xor
cmpsl
inc
mov
mov
not
push
ret
dec
fcomi
add
sbb
push
xor
xchg
jle
fsubs
jbe
push
cmpsb
nop
fildl
stos
dec
incb
sbb
mov
ret
test
movsl
xor
testb
and
add
sbb
ret
cmp
lods
add
insl
jmp
xchg
cltd
mov
pop
jno
shr
jno
sbb
cmp
test
cmp
loop
test
inc
fmull
inc
pop
mov
mov
jmp
popl
pop
test
pusha
test
add
add
scas
ret
dec
lods
mov
mov
enter
push
aad
jno
xor
fimuls
rorl
inc
jnp
jmp
popf
xchg
inc
aas
aaa
mov
mov
pminsw
rcrl
hlt
pop
sub
loopne
stc
inc
pop
cmp
mov
popa
push
stos
ficomps
adc
pop
push
shrb
jmp
lds
aaa
and
lret
sub
jnp
dec
pop
push
dec
sarl
or
shll
mov
dec
loop
mov
mov
enter
rcr
inc
cltd
std
xchg
into
ljmp
imul
pushl
and
int
jl
fwait
std
pop
mov
lods
mov
mov
loopne
xor
fsubl
clc
push
insl
cmp
das
jmp
dec
jae
mov
push
fldt
pop
in
loopne
xchg
inc
fwait
lods
es
aas
mov
aad
arpl
jnp
aas
repz
pop
jecxz
xorl
xchg
dec
psllw
mov
add
data16
lods
sbb
mov
pop
stc
jle
pop
push
mov
mov
repnz
xor
std
shll
add
fldt
lea
push
inc
adc
dec
xor
lods
dec
and
ljmp
rclb
cmp
sub
addr16
add
push
pop
test
aaa
cmp
lret
clc
daa
stos
call
push
addr16
aad
sarl
mov
sub
ret
cmp
mov
xchg
or
inc
dec
loope
sub
xlat
mov
sbb
mov
cmp
fildl
movsl
in
mov
fistpll
loopne
in
aaa
sub
fwait
cmp
mov
push
cmp
xchg
test
sub
xor
leave
add
lret
jmp
and
ja
cmp
cmpsb
loope
cmpsl
mov
push
jbe
adc
pop
enter
pop
in
insb
loopne
mov
mov
cmp
inc
outsl
push
xchg
and
leave
sbb
std
pusha
jo
aam
out
sbb
scas
into
pop
jp
loopne
test
and
mov
repz
imul
cmc
sbb
mov
inc
jo
scas
add
fidivrl
cwtl
and
mov
pop
mov
mov
push
push
in
cmpsb
jmp
add
add
xor
les
and
scas
or
addr16
mov
jnp
sbb
xchg
fcoml
lods
roll
xchg
daa
pop
mov
loope
cmp
in
pop
movsb
mov
jp
int3
pushf
xor
cli
dec
jp
mov
mov
jne
test
lock
into
clc
inc
loopne
lcall
scas
cli
testb
mov
xor
mov
dec
ljmp
ss
repz
cmp
scas
sbb
shrl
jmp
idivl
jecxz
sub
fs
dec
std
mov
popf
jl
dec
inc
test
gs
mov
loope
mov
sbb
in
mov
imul
aad
fiadds
pop
and
js
cmp
sub
sbb
mov
xchg
subl
test
mov
pop
and
cld
cli
pushf
pop
ror
inc
cmp
sub
push
jo
mov
out
dec
xchg
insl
leave
inc
test
aaa
imul
cwtl
cmc
adc
or
xchg
jl
lods
pushf
mov
jmp
in
sub
je
inc
imulb
jp
jbe
scas
mov
mov
iret
popf
add
jmp
push
mov
mov
or
dec
xor
mov
hlt
xor
gs
bound
add
mov
push
cld
mov
adc
cli
ds
cmpsl
adc
xor
jmp
fcoml
sbb
add
imul
and
jnp
cmpsl
jne
add
subb
inc
mov
mov
xor
sub
fldl
test
cmc
mov
sbb
leave
mov
pop
test
jo
inc
sahf
mov
push
push
icebp
filds
mov
pop
mov
ficoms
fs
jbe
inc
xchg
mov
rolb
cmp
sti
out
mov
rclb
int3
int3
push
pushf
out
dec
jg
or
clc
shlb
aas
jl
adc
push
mov
stc
in
test
mov
rcll
dec
adc
xor
cmp
jecxz
inc
inc
int
xchg
adc
les
mov
jne
out
push
xchg
cmp
test
lock
les
adc
loopne
inc
fimuls
insb
sub
and
mov
xor
lds
xchg
sbb
loop
push
pop
in
inc
sub
sti
adc
mov
dec
cs
bound
cld
dec
dec
or
mov
mov
mov
push
dec
adc
push
filds
mov
push
enter
xor
mov
pop
enter
nop
mov
jno
imul
test
mov
dec
pop
rcrl
mov
xchg
cld
rorl
je
push
xchg
jne
jno
call
clc
sub
xor
dec
mov
push
or
shrb
xchg
mulb
adc
cmp
mov
sbb
negb
push
hlt
push
icebp
adc
jnp
int3
inc
inc
stos
inc
int3
loop
mov
fbstp
cli
lret
popf
push
mov
test
stc
mov
aas
mov
ljmp
sahf
ja
jmp
in
inc
mov
movsb
mov
push
repz
dec
mov
bound
mov
fistpll
std
ja
mov
sbb
xchg
jb
mov
cmpsl
dec
push
xchg
mov
invd
lcall
iret
cmp
jb
mov
mov
jge
add
dec
push
pop
xchg
lret
adcb
aad
fists
pop
push
mov
mov
in
pop
testl
sbb
xor
pop
popf
fists
sbbb
add
mov
xchg
imul
dec
xor
cltd
lahf
jnp
push
mov
mov
xor
aam
mov
addl
icebp
lds
out
xor
mov
out
sbb
sbb
jno
test
jnp
into
sub
xor
movsl
fidivrs
mov
push
movsl
sub
lock
mov
jo
mov
mov
ret
add
stc
pop
ficompl
xor
cmp
xor
repnz
and
adc
jne
fcmovne
add
push
ja
jl
ret
sti
xchg
jg
outsb
cld
cwtl
add
jns
mov
stc
cmp
out
jne
rclb
jns
icebp
pop
mov
jmp
loope
cmp
fmul
stc
loop
arpl
mov
xor
pop
dec
inc
mov
inc
xor
mov
cmpsb
aaa
jbe
out
cwtl
enter
int
in
or
or
jne
or
sbb
or
jae
sbb
sub
cmovbe
pop
inc
cmp
pop
or
stos
ss
cltd
xorb
pop
cmp
adc
add
fdivl
sbb
dec
shll
stos
rolb
pshufw
jmp
sub
dec
das
int3
je
iret
sbb
add
and
jne
imul
dec
das
push
insb
inc
orb
mov
std
lahf
fsubrl
mov
lret
push
sub
leave
scas
imull
add
sub
repnz
aas
jl
pop
outsl
aas
dec
and
adc
out
inc
popa
mov
dec
in
fwait
jo
push
mov
lret
cwtl
adc
les
xor
popf
sbb
dec
mov
popf
jle
and
pop
icebp
lds
nop
jge
jnp
push
dec
scas
gs
outsb
int3
rcll
aas
sahf
arpl
dec
xlat
les
outsb
fldln2
lods
shl
pop
mov
push
stos
loopne
pop
ret
push
lock
cwtl
cmpsl
xchg
ljmp
loop
inc
mov
es
and
jmp
pop
in
hlt
jns
jae
outsb
or
mov
and
mov
or
mov
lock
loope
or
flds
fidivs
dec
adc
aam
in
sub
and
lea
and
lock
ret
mov
out
fmul
xchg
lahf
sub
int
daa
setae
cmpsl
dec
mov
loop
movsb
and
repnz
mulb
stos
sbb
xchg
icebp
or
or
dec
cmp
into
jno
fsubrl
cmp
pop
dec
lahf
push
pop
jmp
or
in
add
out
dec
mov
mov
inc
xor
xchg
xchg
test
leave
test
fs
or
sti
mov
mov
in
and
push
into
sbb
jle
imul
xor
addr16
push
cwtl
ret
or
lcall
mov
sbb
sub
test
and
fidivl
cmp
cmpsb
pop
fdivr
lods
pushf
adc
sub
inc
jmp
adc
lcall
add
inc
bound
pop
gs
push
adc
adc
mov
pop
ret
or
push
fbld
sarl
fwait
mov
xchg
sbb
xlat
in
mov
movsl
aas
mov
jb
pop
in
mov
scas
cmc
cwtl
pop
mov
cmp
bound
fs
xchg
add
imul
insl
popa
imul
hlt
mov
inc
cmp
add
mov
flds
add
push
xor
cmp
push
mov
shll
out
rorb
pop
xor
test
mov
ljmp
pusha
xchg
mov
cld
outsl
lods
pop
jno
push
int3
and
jmp
cwtl
sbb
call
mov
or
push
jp
mov
jb
or
jnp
daa
repnz
sbb
pushf
bound
jbe
add
sbb
call
xchg
clc
fistl
leave
loopne
lahf
or
inc
fsubrs
out
inc
fisubl
lahf
mov
lcall
inc
mov
sbb
int
mov
push
sub
aas
sarl
mov
jmp
sub
adc
iret
adc
cmc
loope
mov
xor
daa
jle
movsl
pop
stos
inc
fcoms
adc
pushf
loop
mov
pop
mov
aam
les
ja
mov
orps
mov
cld
gs
push
cmp
or
in
inc
inc
sarb
jns
movsl
test
pop
clc
inc
xchg
pop
jp
adc
lret
pop
dec
into
test
or
xchg
inc
into
sahf
jne
xchg
mov
or
test
ret
negb
pop
shll
cwtl
in
mov
inc
jmp
jae
mov
lods
out
mov
jl
bound
lcall
mov
inc
add
mov
mov
adc
fidivrs
mov
mov
orl
cltd
push
iret
cmp
cmp
mov
or
es
push
mov
shlb
lods
xchg
in
dec
insl
and
icebp
jns
or
and
test
jmp
cmp
mov
insb
scas
sub
cmpsl
into
mov
sbb
sahf
xchg
out
sbb
inc
sub
mov
std
add
out
sub
int3
xor
sbbb
cmc
jle
arpl
xor
xchg
lret
push
jne
fs
push
mov
test
cld
out
out
sbb
shrl
push
stos
and
fwait
cld
hlt
fbstp
adc
sub
addr16
std
inc
mov
stos
pop
mov
sub
mov
dec
stos
jnp
inc
push
or
sub
orl
hlt
fiadds
add
lock
pusha
outsl
ret
xchg
pop
cmp
and
or
testl
ret
loop
sbb
jg
push
in
fiadds
sbb
iret
mov
add
or
inc
xchg
ss
loopne
call
push
in
sbb
cld
cmp
fnstenv
adc
or
push
imul
sub
sbb
mov
int3
xor
xor
out
mul
sub
xchg
adc
push
xor
pop
ret
or
pop
jnp
pushf
pop
inc
pop
pushf
add
mov
negl
mov
lahf
das
and
nop
jmp
mov
pop
mulb
shrb
in
cmpsb
sub
daa
pushl
call
lret
sbb
popf
imul
insb
into
xchg
adc
cmpsb
dec
mov
jns
stos
push
xchg
loope
repz
or
inc
push
cli
or
addb
movsb
paddd
out
inc
fs
add
clc
sub
popa
in
push
dec
sbb
les
shlb
fs
stos
cmp
jbe
sbb
ja
mov
jmp
mov
xchg
pop
xor
pop
ret
jmp
xor
lods
xchg
lods
push
loopne
loop
sarb
dec
mov
out
out
mov
xor
imul
shl
out
iret
bound
cltd
fidivs
push
inc
jg
shll
bound
mov
pop
mov
xor
xorl
cmp
scas
adc
push
lahf
les
mov
mov
cmp
inc
imul
test
ret
stos
inc
ss
and
xchg
jnp
popl
xor
and
scas
sub
mov
rorl
insl
cld
and
pop
pop
fsts
stc
pop
cli
sbb
push
dec
out
jmp
mov
adc
pop
push
mov
xlat
push
mov
sub
xchg
popa
inc
out
and
pusha
sub
xchg
adc
or
inc
sti
outsl
add
dec
cmp
xor
mov
cmc
lods
inc
or
scas
icebp
jmp
movsb
out
xorb
das
and
cmpsl
mov
loope
aas
adc
jg
repnz
pop
push
insl
out
jle
mov
add
cmp
les
ret
push
aaa
out
outsb
mov
mov
sub
mov
shrl
test
cmp
out
movsb
adc
add
inc
xchg
cmpsb
or
mov
inc
and
fwait
xchg
or
push
cmp
loop
add
mov
fmull
faddl
sub
jbe
pop
in
xor
insl
xor
in
movsb
dec
out
out
jns
mov
add
fimull
test
imul
leave
fidivl
mov
sbb
or
gs
mov
outsl
ja
ljmp
fsubr
lahf
xor
rolb
mov
in
ljmp
pusha
out
sbb
or
and
jne
insb
hlt
inc
test
push
clc
stc
mov
stc
das
cmp
mov
adc
jle
cmp
mov
cmpsb
mov
sbb
sbb
push
jb
out
and
add
in
in
push
jae
pop
into
cmp
std
cmpsb
sub
inc
add
inc
subb
adc
pop
jb
inc
lret
ljmp
aam
sub
shlb
movsl
dec
push
mov
repz
pop
cmp
insl
add
sarb
sarl
mov
stos
pushf
or
shll
dec
dec
les
aam
sbb
test
shl
mov
dec
mov
ror
scas
cmp
into
and
adc
sbb
dec
cmp
dec
sub
loope
and
adc
and
dec
pop
fnstcw
cli
aad
jl
imul
fmulp
cmpsl
stc
mov
je
adc
ret
ljmp
add
or
pop
cmpsb
mov
jbe
jno
pop
jl
je
xchg
xchg
xchg
sahf
das
shrl
filds
xor
lods
int
popa
enter
repnz
sbb
mov
dec
ret
call
into
cmp
bound
loopne
shr
mull
ja
sahf
hlt
aam
fiadds
xchg
mov
cmp
aam
mov
int
es
imul
sahf
pushl
gs
dec
or
xor
cmp
mov
call
sbb
mov
sub
dec
inc
mull
jb
pop
daa
cmpb
sbb
or
inc
into
sbb
push
leave
cmp
cld
cs
or
stc
pop
call
sub
inc
mov
gs
int
ds
pop
xor
movl
or
popa
cmpl
ja
push
fistpll
mov
jge
or
lea
sub
leave
aad
inc
aad
jae
notb
pop
dec
cmpb
jl
in
jle
out
iret
movsl
push
push
iret
repnz
lahf
bound
xchg
data16
js
cmpsb
push
xor
push
mov
mov
les
inc
or
int
mov
sbb
mov
fnstcw
xor
jns
mov
outsl
out
dec
inc
insb
mov
fadds
push
xchg
or
xchg
push
fsubrs
or
je
es
imulb
add
adc
lahf
mov
inc
sbb
fwait
int
out
dec
inc
mov
scas
gs
movsb
frstor
cmp
les
push
push
popf
movsl
cltd
inc
add
and
cmp
cltd
popf
pop
xchg
lret
popa
stc
loop
test
ljmp
insl
xchg
aam
lret
shrb
dec
fmuls
repz
sbb
push
sti
inc
iret
add
cwtl
fsubs
cmp
push
arpl
push
and
and
or
xchg
sbb
stos
mov
jnp
hlt
jge
les
jle
mov
lahf
loope
mov
xchg
inc
inc
jmp
cli
cmp
in
call
push
movsl
jmp
lds
sub
pop
sub
mov
xchg
cli
test
out
cs
mov
fdivl
mov
pop
loop
jo
mov
add
xorb
inc
inc
xchg
dec
sub
enter
sbb
adc
leave
and
inc
add
in
add
or
into
jno
mov
xor
lods
inc
push
mull
orl
test
add
cli
outsl
inc
cmc
push
pop
mov
mov
mov
ja
lods
and
push
cmpsl
fistl
popf
jg
fsubrp
jmp
fistl
repz
lock
lods
xor
ja
xchg
lret
insb
dec
es
mov
out
xchg
in
adc
push
out
push
lods
pushf
rcll
cmp
lods
ja
or
in
adc
test
sbbb
sti
mov
jl
ds
xor
aad
dec
inc
mov
movsl
mov
stc
int3
cltd
aas
loopne
add
mov
ret
and
and
lahf
in
xlat
rep
scas
inc
dec
push
cli
lret
lock
xchg
fldl
adcb
fistl
test
push
out
cld
sub
and
ret
mov
xchg
push
adcb
sub
sub
ss
clc
xchg
xor
mov
ret
add
addr16
shl
std
inc
push
int3
ss
or
adc
das
scas
xchg
cmp
ret
es
xchg
adc
popa
loope
inc
xor
cltd
jbe
leave
or
push
ss
pop
jo
out
mov
popa
or
or
pop
iret
call
fcompl
inc
imulb
xchg
pop
loop
jns
roll
cmpsl
sbb
inc
popf
test
lds
insl
add
gs
stc
loopne
out
mov
and
adc
popf
aas
xor
fisubl
fwait
lret
out
lcall
mull
pop
inc
adc
js
push
fisttpll
divb
aas
xor
scas
push
cld
rorb
dec
sub
ljmp
or
bound
arpl
in
sbb
or
adc
mov
push
lcall
mov
jo
fdivrl
out
mov
mov
insl
push
mov
inc
lds
sbb
sbb
xor
sub
pop
or
iret
cmp
mov
dec
dec
xchg
cmp
pushf
add
xchg
mov
xor
xor
ret
sbb
repnz
mov
jo
test
pop
xor
pop
dec
popf
outsb
cmp
lods
sbb
int
dec
jmp
popf
or
lcall
xor
dec
adc
pop
jmp
dec
mov
inc
push
sub
xchg
push
jbe
sub
int3
xchg
int
jge
or
aas
addr16
mov
stc
cmp
jmp
sbb
insb
mov
fnstcw
mov
inc
push
test
adc
sub
pop
leave
cmpb
cwtl
sbb
test
cmp
sub
popf
mov
and
sbb
mov
insb
pop
and
push
aad
stc
pusha
mov
test
xchg
popf
mov
jne
enter
das
test
mov
lret
cmp
and
ret
lods
shrl
popf
mov
mov
pop
mov
and
jo
andb
insl
push
or
jns
aam
xchg
push
sahf
or
aaa
mov
xchg
xchg
ret
jl
dec
inc
das
jmp
insb
inc
int3
adc
jne
aam
sbb
sbb
sub
cmpb
cmp
jbe
cmp
gs
xchg
mov
sbb
push
and
sbb
xchg
fsubl
or
jne
or
pop
lods
or
outsb
stos
insl
cmp
xlat
jae
popa
leave
mov
mov
hlt
jmp
int
sbb
cmp
aam
xorl
stos
ficoms
adc
adc
int
lret
jecxz
sti
fistpll
shlb
push
call
and
sarb
and
loopne
aaa
sub
dec
aas
and
out
test
fisttpll
mov
and
mov
lcall
mov
dec
push
icebp
inc
les
and
cmc
push
mov
inc
or
aad
test
lcall
in
mov
faddl
int
insl
and
adc
pop
add
dec
cmp
loopne
sbb
sarl
xorb
fsub
mov
fisubrs
pop
mov
or
rcrl
pop
or
dec
jo
rcrl
add
adc
xor
or
fidivs
lret
test
mov
push
scas
test
pop
scas
rcr
sbb
loop
dec
out
pop
sub
and
test
mov
mov
and
lds
sbb
lock
mov
jno
and
mov
or
lret
ret
jno
push
mov
sbb
hlt
pop
dec
mov
icebp
movl
insl
sbb
mov
cli
pusha
fwait
ljmp
dec
mov
xchg
lods
cmpl
dec
mov
mov
adc
xor
cli
bound
repnz
add
fldenv
cmpsl
xchg
mov
push
jb
test
daa
scas
subb
mull
fisubl
mov
or
in
xor
mov
jns
and
sub
or
inc
xor
mov
stos
xchg
dec
xchg
pop
add
sub
xchg
adc
fwait
sub
sti
or
stos
jae
sbb
sub
out
out
in
repz
loop
xchg
scas
mov
xchg
pop
sbb
adc
insl
mov
ss
and
div
in
mov
mov
cmp
jge
shlb
adc
insb
ret
repz
xchg
mov
adc
xor
xlat
movsb
rorl
or
cmp
sysexit
mov
test
gs
and
push
les
mov
jmp
jb
mov
inc
in
inc
dec
loop
scas
push
adc
mov
scas
pop
bound
cmp
clc
pop
movsb
inc
subw
sub
xchg
sarl
adc
ret
cmpsl
pop
hlt
xchg
xor
cld
sub
leave
sub
lret
lahf
sub
subb
jg
mov
das
or
sub
out
add
scas
leave
movsl
pop
push
jne
inc
es
pop
jmp
xchg
shl
mov
jno
xchg
test
aas
push
mov
adc
pusha
inc
sub
sbb
push
inc
ds
or
adc
in
push
out
leave
push
pop
std
cmc
popa
pop
jmp
fdivrs
inc
push
push
outsl
inc
push
jmp
loope
and
push
inc
inc
nop
and
mov
cmpb
arpl
es
xor
ret
or
sbb
rep
test
sbb
insb
sbb
subb
sbb
addl
adc
aad
loopne
xchg
sti
imul
xchg
push
mov
cmp
push
scas
or
aam
pushl
int3
mov
sbb
shll
xchg
sub
sbb
out
leave
xchg
jecxz
inc
hlt
out
xor
adc
test
dec
movsl
shrl
cmp
sbb
cmp
mov
imul
repz
mov
sbb
cld
fimuls
pushf
and
filds
jbe
in
pop
push
ret
mov
imulb
dec
push
enter
mov
jnp
shlb
cmp
sub
sbb
fimull
notl
in
shll
pop
pop
into
cmc
sub
jge
inc
hlt
out
andb
hlt
jae
cltd
mov
fldcw
mov
jg
fldenv
inc
in
andb
cmpb
out
cmp
les
cmp
orl
sub
orb
call
adc
loope
movsb
jbe
xchg
xor
popf
mov
cmp
push
and
inc
notl
jbe
lods
in
pop
call
cltd
ljmp
daa
jp
cli
mov
iret
out
mov
xor
outsl
inc
in
arpl
jb
inc
mov
repz
decb
ss
cwtl
insb
add
outsb
jae
clc
icebp
mov
mov
cmp
repnz
arpl
adc
add
outsl
iret
out
sarl
bound
sub
mov
stos
sbb
push
in
cltd
xchg
bnd
or
imul
or
imul
inc
xor
add
xchg
mov
aas
cmpsb
push
gs
iret
or
ficomps
adc
insb
pop
popl
popa
mov
dec
addr16
imul
mov
fcomps
loop
cltd
xor
xchg
xchg
subb
push
add
mov
jp
push
les
scas
add
jno
pop
daa
push
xchg
cmc
mov
bound
popf
pop
inc
mov
aaa
push
inc
fbstp
das
sub
hlt
mov
shll
dec
xchg
clc
jecxz
jecxz
addr16
mov
cmpsl
sub
fs
divb
adc
adcb
mov
sarb
mov
mov
sarb
lea
cltd
dec
scas
push
push
push
mov
and
jno
test
xchg
jo
pop
sbb
cwtl
jnp
mov
dec
call
xor
jns
loop
jl
mov
fcmove
mov
imul
or
sub
lcall
fs
push
ljmp
neg
stc
dec
push
add
pop
cmp
cmpsb
xchg
lds
out
dec
jle
add
out
sbbl
loopne
ret
shll
xchg
jmp
pop
cs
loope
fistpl
pop
mov
repz
push
add
std
sahf
das
sbb
xlat
mov
jbe
ret
jae
mov
dec
adc
inc
fildl
add
jl
inc
cltd
mov
push
jp
lahf
xor
addr16
ds
iret
insl
pop
data16
sub
and
or
ja
insb
scas
cmpsb
out
add
jp
mov
mov
or
aaa
mov
fdivp
lcall
in
sahf
xchg
pop
lods
aaa
pop
inc
aas
pop
jns
pop
int
xor
pop
dec
pop
push
add
enter
cmp
jp
adc
andb
inc
ljmp
mov
fisttps
icebp
vpacksswb
dec
pushf
jecxz
in
dec
movsb
icebp
movsl
sbb
test
mov
stos
add
sti
push
ret
outsl
repz
mov
push
popa
out
jbe
dec
das
sub
add
notl
pop
sub
out
es
lret
andb
dec
mov
pop
pop
test
lcall
stc
add
icebp
inc
sbb
and
or
incl
dec
in
hlt
testl
mov
nop
popf
or
loop
lcall
pop
and
cmp
not
into
mov
mov
sbb
dec
dec
cmp
out
mov
mov
fsubl
mov
es
cmp
lea
fdivp
cmc
add
lret
andb
xor
pushfw
ds
je
sahf
push
dec
push
mov
ficoml
mov
ja
or
push
dec
pop
cmp
lea
dec
add
cmc
insb
adc
adc
mov
and
or
xchg
aam
add
jnp
mov
jne
bound
push
xor
ds
filds
mov
xchg
pop
adc
lds
mov
mov
out
hlt
aaa
pop
adc
cli
loopne
push
lret
mov
jo
das
add
push
fdivr
push
arpl
push
add
stc
lods
mov
in
pop
sub
and
add
out
test
aaa
adc
fcmove
sar
sbb
fcmovnbe
and
movsl
clc
and
add
mov
add
lahf
inc
inc
sub
sub
aad
cmpsb
scas
rcr
or
inc
popa
mov
push
mov
xchg
orl
and
inc
inc
xchg
add
jp
loop
cmp
sub
fistpl
scas
jmp
ret
inc
pop
xchg
push
sub
repz
roll
in
xlat
mov
xchg
movsb
lods
out
dec
mov
pop
popa
push
jo
out
pop
and
js
add
out
into
enter
pop
loop
lret
ds
mov
lods
stc
movsl
add
cmp
repz
repnz
mov
cwtl
inc
inc
jg
arpl
loopne
mov
lock
flds
cmc
lret
mov
inc
mov
lock
fs
nop
xor
ss
jmp
xor
fsts
call
mov
loop
out
dec
negl
cmc
lcall
ljmp
das
loope
mov
mov
add
ds
pop
loope
popa
std
out
ss
pop
gs
add
xchg
jmp
mov
jnp
mov
divl
mov
lea
dec
fistl
push
out
push
icebp
xchg
jns
mov
ficomps
cli
mov
push
je
pushl
lahf
xchg
das
mov
in
pushf
cmp
sbb
pop
jne
ds
scas
mov
cld
lods
push
mov
arpl
mov
cmovns
test
in
orl
jmp
addr16
nop
cmc
cmp
andl
sbb
mov
push
std
and
je
push
jl
sti
mov
jnp
addr16
int3
sahf
mov
push
dec
xchg
aam
pop
xor
std
push
or
jo
jg
fldt
sub
ffree
test
fdivr
lods
insb
cmpsl
test
lret
test
mov
inc
and
call
mov
ds
mov
leave
lods
gs
out
and
adc
jne
xchg
pop
cmpsb
scas
test
mov
outsb
ss
or
test
outsb
sbbl
cs
aaa
dec
sub
dec
xor
inc
movsl
roll
sub
cmp
jbe
mov
ljmp
inc
fwait
popf
test
in
leave
mov
push
repz
mov
dec
jne
movsl
stos
out
xlat
dec
pushf
jecxz
inc
jmp
adc
pop
cmpsb
pusha
or
jae
fadd
iret
add
inc
test
or
cmp
mov
pop
out
dec
loop
inc
jge
jmp
push
into
pop
imul
cmp
loop
push
out
js
or
and
mov
shll
and
adc
inc
scas
clc
imulb
mov
cmpb
inc
lret
mov
push
push
sti
cmp
xorl
xchg
inc
jge
repz
enter
adc
in
rcll
inc
mov
subb
jb
xor
in
pop
xchg
dec
ljmp
cs
sahf
lcall
or
mov
mov
fsubrs
jno
xlat
mov
cmpsb
cli
cld
fimuls
mov
and
pusha
jmp
fcom
jmp
sahf
jnp
dec
arpl
xchg
push
lret
sbb
cmpsb
sahf
jl
hlt
push
fimuls
stos
xchg
lds
shr
add
push
ds
or
stos
mov
arpl
cli
outsl
icebp
int
lods
jb
call
or
test
pop
int3
jnp
les
fldenv
xchg
fstpt
int3
dec
add
fsubrl
push
test
xchg
sub
scas
ss
int3
pop
ror
leave
pop
mov
movsb
lods
mov
cltd
cmp
hlt
xchg
repz
push
mov
xchg
or
mov
mov
adc
jbe
add
mov
mov
nop
int
cmpsb
push
cmp
ljmp
jp
adc
mov
xchg
sar
jecxz
mov
cltd
fdivrs
jmp
pop
cmc
into
or
cltd
jle
notb
outsl
xchg
inc
imul
cmpsl
cmpsb
das
lods
push
adc
inc
scas
sbb
or
dec
mov
jg
ja
xorl
push
call
jnp
mov
and
imulb
mov
repz
les
xor
jge
aad
daa
lret
and
lcall
or
iret
or
push
test
sub
imul
mulb
mov
and
das
mov
xor
fst
cmp
jnp
add
in
sbb
out
out
leave
ret
add
xchg
pop
mov
fmulp
inc
push
mov
mov
dec
xchg
movsl
cmc
mov
add
dec
lret
inc
or
jns
mov
jb
and
xchg
sub
xor
scas
jle
mull
addb
stc
test
movsl
aas
loope
mov
ds
mov
jnp
imul
dec
aas
scas
movsb
aam
mov
les
xchg
js
or
xor
mov
stc
enter
out
or
pop
stos
ljmp
cmp
stc
movsb
cmp
pop
dec
cmp
sub
imul
jecxz
ret
dec
lea
dec
sub
mov
pop
xor
in
pop
or
jmp
pop
jne
testb
test
pop
lds
popa
test
das
and
mov
cmc
lods
leave
jb
mov
push
lret
pop
movsb
add
lock
imul
and
enter
int
mov
jb
inc
lds
movsb
ljmp
sbb
out
sarb
cmp
jecxz
roll
add
mov
arpl
cmpsb
in
xchg
sbb
mov
test
cmc
xor
pop
mov
loop
fmul
pushw
cmpsb
jb,pt
sbb
cli
mov
mov
incl
loope
mov
adc
cmpb
xor
jp
aas
xchg
scas
jne
rcr
jp
xlat
or
out
call
cli
pop
clc
in
inc
lock
lods
pop
cld
addr16
lock
lds
loop
lret
movsb
mov
and
and
fsubs
mov
add
out
nop
out
sub
daa
loop
jne
inc
push
icebp
adc
add
loope
hlt
subl
test
fisttpl
dec
sbb
and
mov
inc
mov
int3
pusha
andb
mov
ret
popf
lcall
pop
push
iret
mov
fisubl
xchg
pop
shll
shlb
pop
cmc
shrl
fucomp
dec
cmpl
shr
ret
pop
lret
pop
out
sub
mov
pop
and
shl
xlat
add
lahf
insl
popf
add
cmp
mulb
popa
sbb
add
lret
xchg
stc
pusha
mov
xor
out
movsb
pop
or
in
mov
and
xchg
das
sub
icebp
ss
mov
pop
aad
daa
in
inc
pusha
add
or
imul
push
cmp
cmpsb
push
inc
mov
xor
sbb
push
jno
and
push
add
fimull
mov
lods
or
fwait
fs
xchg
orl
bound
sbb
mov
orb
xchg
cli
adc
fnstsw
xchg
rol
add
mov
loope
fwait
sub
ss
jg
pop
outsl
sub
jp
mov
add
xchg
into
sub
clc
push
push
xor
add
mov
iret
sub
add
pop
out
jns
call
mov
pop
ret
pop
roll
pop
movsl
cltd
or
bound
rcll
lret
mov
jnp
outsb
loop
mov
pop
movsb
int
rclb
popa
mov
adc
movsl
fnstcw
pusha
pop
in
dec
pop
dec
or
test
mov
cltd
lret
aam
nop
int3
inc
jns
xchg
mov
popf
inc
lods
pop
das
pop
jo
loope
inc
hlt
xor
popa
loope
cld
ja
dec
jecxz
leave
sbb
mov
xlat
jle
or
popa
imul
mov
int3
add
lea
stc
adc
mov
sarl
mov
dec
push
enter
cli
pop
push
push
pop
ja
cli
leave
cmpsl
or
xor
lock
mov
jne
loope
icebp
jl
xchg
jg
imul
jbe
imulb
dec
add
adc
rclb
and
inc
and
js
je
mov
or
je
leave
dec
pop
pop
xor
add
xchg
xlat
jae
dec
aas
mov
scas
shll
pop
cli
inc
mov
sub
jp
sti
jmp
mov
cli
mov
mov
cmpsb
sahf
sub
mov
fnstsw
idivl
adc
sub
push
sbbb
jae
fs
sbb
mov
dec
push
cmpsl
jge
negl
dec
adc
adc
push
iret
shrl
fcmovnu
ret
pop
dec
mov
cs
jae
mov
sarl
mov
loopne
clc
fs
stc
lods
pop
in
fwait
xor
das
mov
xchg
test
inc
in
std
test
sub
push
xorl
add
orl
pop
mov
dec
push
call
rorb
pusha
cmp
adc
shl
enter
mov
sbb
jae
lea
scas
mov
ret
push
aad
xchg
jecxz
arpl
nop
repnz
addl
leave
rorb
pop
fnstsw
mov
aas
push
push
jne
xchg
jnp
jnp
and
pusha
lret
cld
mov
ljmp
jmp
push
and
inc
ss
movsb
add
xchg
jae
into
insl
out
bound
test
add
stos
into
fstps
scas
mov
aam
sbb
or
mov
or
push
shll
gs
xchg
daa
push
dec
sahf
inc
mov
cltd
imull
popa
int3
lods
scas
or
stos
jne
subb
sbb
aam
inc
xchg
mov
inc
imul
mov
cli
and
sub
adc
fcmovnu
add
test
push
dec
das
cmpb
push
fstps
sbb
cltd
and
lods
ret
leave
test
cmc
xchg
lods
lods
cmpb
fsubs
scas
repnz
aas
push
jnp
push
xchg
mov
or
jg
sub
cmp
pop
and
cwtl
and
push
mov
xchg
xchg
movsl
cmpsl
test
dec
add
mov
test
aaa
stos
mov
lret
fucomip
jmp
jno
jns
or
cltd
std
mov
idivl
add
mov
jle
mov
mov
adc
pushl
outsl
mov
pop
inc
cmp
push
pusha
xor
aad
mov
inc
push
rcrb
mov
adc
insl
fildll
sub
dec
pusha
rol
jmp
pushf
push
pop
in
adc
sbb
cli
push
addr16
lret
add
pop
popa
mov
add
aaa
frstor
in
lahf
xchg
and
lds
cmpsb
inc
mov
popa
adc
imul
mov
adc
lcall
pop
xchg
pop
sub
inc
cwtl
mov
mov
mov
lock
xlat
popf
icebp
push
mov
lods
sbb
or
mov
in
mov
sub
mov
pop
rolb
sub
mov
imul
out
cmpsl
in
push
mov
pop
add
dec
mov
lcallw
cmpl
flds
cmp
jle
fcomp
mov
pop
fs
inc
jo
pushf
hlt
push
clc
jb
in
jle
inc
hlt
test
dec
add
fdivl
inc
scas
imul
fs
mov
jp
movsl
adc
xchg
in
sbbw
sti
add
orl
mov
js
dec
xchg
sahf
icebp
mov
shrl
test
int3
or
mov
jge
push
cs
gs
mov
push
outsl
push
icebp
cmpb
add
outsl
push
pop
shl
mov
push
stos
lds
push
stc
mov
jne
shlb
sub
xchg
lock
fisubl
fucomp
arpl
push
in
mov
fstpl
xlat
push
pop
aam
adc
jp
mov
mov
or
mov
sti
push
jbe
loopne
dec
cld
xchg
push
mov
loopne
mov
dec
leave
jp
mov
sbb
xchg
in
aas
cmp
setle
xchg
nop
sub
cmc
xchg
push
mov
pop
outsb
add
jecxz
sub
jbe
pop
loopne
push
lods
xor
pop
aam
shr
neg
sub
push
adc
xchg
xor
fidivs
outsb
test
mov
mov
std
jecxz,pn
pop
mov
push
xor
fmull
stos
cmp
jne
xchg
push
lret
jns
xchg
xchg
cld
lock
or
ds
mov
inc
inc
rcl
and
in
add
mov
lods
cmc
cltd
and
stc
mov
jbe
aaa
add
rclb
pusha
sub
or
adc
jge
popf
xor
sub
or
mov
and
sbb
push
sub
out
and
pop
fcompl
jmp
add
call
les
inc
cmpsl
sbb
test
dec
or
push
test
scas
mov
push
cmpsb
cmp
dec
lcall
xor
add
jne
sub
mov
in
sbb
mov
fdivl
adc
adc
test
mov
mov
mov
cltd
mov
push
into
es
dec
aaa
adc
lcall
mov
rorb
icebp
fcoml
fsubp
movl
loopne
mov
cli
test
ret
mov
pop
aad
sub
in
push
cmp
gs
jbe
aas
es
jmp
mov
add
mov
jmp
inc
pop
outsb
rcl
cmc
cmp
imul
shlb
push
dec
movsl
and
inc
push
inc
cmpb
lods
movsl
lock
jo
and
je
lret
push
push
sbb
fcompl
cmpsl
mov
lods
sub
inc
loope
xchg
jmp
inc
imul
mov
xchg
push
and
push
inc
jb
outsb
popf
jb
loope
inc
cmp
jbe
clc
ja
inc
mov
xchg
test
test
cmp
enter
int
add
add
inc
js
pusha
ret
sbb
test
test
pop
insb
fnstsw
add
imul
fsubrs
vsqrtsd
dec
add
jp
jae
hlt
mov
js
fidivrl
mov
jl
xchg
cwtl
inc
pop
lods
push
sti
cmp
cltd
adc
cmp
and
mov
adc
xor
push
adcb
pop
dec
jg
push
mov
xor
icebp
pushf
das
xchg
aad
cld
iret
dec
xor
adc
add
pusha
pop
mov
push
adc
rcrl
dec
test
movsb
les
lsl
xchg
push
mov
mov
repnz
xchg
fistps
adc
xchg
xor
into
sti
ror
cld
cmpsb
cmp
insb
rcrb
mov
fistpl
mov
fldenv
lds
push
xchg
aad
push
mov
xchg
and
mov
ds
and
sbb
mov
icebp
or
mov
jl
cltd
ljmpw
lret
jae
mov
jo
sub
inc
dec
jo
ret
inc
pop
out
je
lea
xor
add
ficoms
js
icebp
cmc
pop
xlat
xchg
mov
jbe
mov
xchg
push
scas
movsb
mov
push
sub
adc
test
fstpl
xchg
mov
sub
mov
ja
or
mov
xorb
push
xchg
xor
cmp
pop
cmp
push
leave
xor
test
daa
xchg
loopne
nop
and
scas
out
jge
mov
inc
or
mull
mov
pop
cmpb
out
imul
test
fsubrp
lret
cmp
sub
lret
push
lcall
dec
cs
jmp
fimuls
shrb
fwait
pop
or
pop
mov
addl
cltd
mov
lcall
add
enter
cmp
cmp
push
xor
inc
add
pop
dec
or
jecxz
std
scas
jmp
movsl
xor
rclb
lea
out
fwait
outsl
adc
iret
push
pop
xor
scas
xor
push
decb
ret
jmp
mov
pop
xlat
pop
addr16
idivb
mov
pop
xor
sub
lcall
pop
scas
or
xchg
adc
sub
ss
lods
rcrl
xchg
cmp
cwtl
dec
xor
cmp
test
stos
popf
ljmp
push
shlb
pushf
mov
jle
mov
and
int3
adc
pushf
xchg
lods
or
cmpsl
cltd
les
mov
inc
and
sub
pop
mov
mov
iret
lea
pop
pop
int
inc
sub
mov
cmp
fnsave
js
out
lock
mov
adc
inc
fsubrl
call
dec
lods
addr16
pop
test
divb
shl
ljmp
xchg
imul
or
aaa
adc
mov
or
cs
adc
pop
mov
inc
ret
dec
push
cltd
scas
push
push
fnstcw
clc
jb
iret
loope
rorb
cli
cmp
xor
inc
pop
insb
enter
sbb
add
jns
das
mov
and
scas
out
aad
xchg
sbb
xor
add
lock
subl
xor
shlb
cmpsb
xchg
das
shl
sbb
std
mov
mov
cli
movsl
movsl
xchg
sbb
inc
lcall
jp
sbb
sub
mov
cs
push
inc
sub
loopne
sub
fs
or
je
jecxz
ret
sub
add
cmp
mov
add
pop
or
stos
mov
mov
mov
pop
sti
cli
push
shr
lret
dec
pop
push
sub
stos
mov
pushf
or
jae
push
dec
loope
xchg
ljmp
cmp
dec
pop
dec
cmp
call
inc
cmpsb
push
test
das
xor
movb
mov
and
fisttps
jb
aas
adc
mov
mov
sub
ror
flds
adc
pop
and
pop
fsubs
icebp
pushw
mov
pusha
xchg
mov
iret
xor
pop
push
push
int
adc
push
or
shll
in
pop
out
and
pop
inc
int3
adc
movsl
push
enter
shlb
hlt
in
lock
fwait
xorl
repnz
decb
aam
push
data16
jo
int
xor
je
fldl
enter
sti
out
mov
push
push
mov
dec
mov
adc
mov
imul
icebp
jns
adc
mov
and
aaa
popf
cs
fmull
adc
incl
sub
mov
pop
ret
std
add
icebp
popf
icebp
mov
pop
mov
fldt
loopne
mov
mov
inc
ret
cmpsb
pop
xchg
ret
lods
sahf
sub
sbb
cmpsl
fs
xchg
cli
dec
jl
loop
int3
sbb
mov
icebp
lret
xor
mov
mov
lahf
shll
imul
pop
cmp
mov
mov
pop
fidivrl
adc
dec
push
aaa
jns
adc
daa
outsl
out
mov
gs
mov
ss
mov
outsl
leave
into
insb
cltd
in
test
and
in
inc
int3
mov
jno
dec
test
pushf
outsl
in
fs
pop
fstpl
dec
test
loopne
idivb
mov
jmp
push
sbbb
mov
out
jno
cmp
mov
dec
es
shll
xchg
in
gs
out
sub
imul
cs
stos
jl
addr16
xchg
fistps
faddl
add
xor
inc
dec
push
inc
pop
repz
mov
xor
ljmp
inc
xlat
ja
sbb
jne
int
push
lret
cmpb
icebp
sub
mov
push
in
pop
shrl
dec
sub
mov
mov
xchg
mov
pusha
xchg
xchg
sub
mov
rcrl
inc
int
push
push
jmp
in
mov
insl
lret
pop
cmp
int
ljmp
iret
mov
addr16
in
sub
jne
les
rolb
dec
lods
xor
add
sub
lods
xor
dec
scas
xchg
jecxz
xor
push
mov
ds
daa
mov
xlat
fstpt
jnp
pop
inc
testb
mov
sbb
dec
jecxz
stc
dec
push
cs
mov
sub
popa
pop
icebp
xchg
shl
mov
and
repnz
cmc
inc
mov
hlt
outsb
loop
lcall
pop
into
and
bound
fadd
pandn
addr16
loope
pop
pop
faddl
pop
adc
and
mov
outsb
pop
dec
int
and
fbld
test
lret
mov
fcompl
sub
jne
mov
movsb
xor
sub
loope
inc
sub
lock
mov
stos
xchg
cmp
rolb
sub
xor
dec
insb
sub
jg
popf
and
aaa
scas
or
nop
or
inc
gs
mov
adc
jne
mov
loope
je
mov
xor
xchg
sahf
mov
and
jle
out
and
mov
jle
inc
xchg
jo
push
cmp
push
jg
cld
mov
fwait
rcrb
out
cwtl
mov
ja
jmp
pop
mov
cmp
add
cmp
inc
iret
enter
pop
lods
xchg
and
adc
push
sub
dec
lcall
pusha
add
mov
pop
arpl
shr
sub
call
xchg
fisubrl
ja
insb
and
add
adc
push
pop
lahf
mov
and
fdivrs
or
mov
sbb
jb
jno
push
scas
in
cmpsl
mov
lods
loop
dec
adc
into
xor
lcall
sbb
lahf
enter
sti
call
adc
movsl
mov
stos
scas
sub
daa
mov
dec
bnd
push
adc
dec
in
add
fisubs
out
sbb
dec
aas
stos
jge
loop
jp
xchg
stc
and
jl
jne
imul
out
aad
jae
and
dec
xchg
es
and
aam
arpl
test
out
pusha
inc
mov
sub
insb
inc
jns
push
dec
in
movsl
pop
xor
mov
arpl
cmp
pop
or
xor
movsl
add
xchg
int3
popf
je
jnp
mov
jge
scas
cmp
lea
out
dec
xchg
inc
and
push
mov
cltd
lret
push
sbb
out
stos
sbb
mov
iret
xor
popa
insb
bound
aas
jle
add
pop
mov
adc
dec
mov
mov
leave
mov
sbb
mov
stos
mov
fidivs
jp
xchg
mov
or
in
movsl
aaa
mov
adc
push
fs
or
leave
clc
fwait
xorb
jecxz
inc
jle
or
imul
sub
cmp
mov
insl
jg
xchg
ret
xor
testb
inc
pop
or
push
xchg
aaa
xchg
addl
mov
mov
test
mov
shrl
pop
push
mov
jbe
and
sub
adc
pushf
aas
mov
and
jl
int
aad
popa
dec
push
ret
fistpl
stc
push
pop
negb
sbb
and
gs
gs
and
dec
imul
aaa
sti
mov
jb
pop
in
pop
sub
out
add
cmp
lds
push
addb
sub
aad
jnp
notl
mov
add
rclb
lock
jb
jb
or
loopne
sbbb
inc
int
cmp
imulb
push
fstpl
and
dec
mov
add
int
and
ret
lret
les
xchg
push
negl
or
xorb
les
pushf
sbb
or
sbb
clc
stc
addr16
popa
cmp
lods
mov
or
mov
ror
cmp
jl
pop
add
repz
call
dec
xor
dec
cmp
pop
xchg
inc
add
push
pop
mov
mov
push
mov
mov
jb
add
out
mov
push
xchg
mov
gs
add
adc
insl
mov
mov
push
lcall
pop
mov
mov
jp
cld
popa
adc
push
sbb
push
fiadds
or
add
mov
push
dec
fwait
out
adc
dec
sbb
imul
mov
mov
and
push
and
out
xor
mov
in
incl
hlt
cmpsb
idivl
push
popf
sbb
dec
por
inc
adc
cmp
mov
lea
jl
push
test
push
cmc
xor
mov
stc
aas
int
shrl
inc
sti
icebp
repz
or
xor
es
push
pop
cmp
sbb
jmp
mov
push
push
notb
sub
fildl
cld
clc
pusha
fcoms
movsb
mov
mov
insl
push
adc
jo
mov
cvtps2pi
mov
ja
aam
incb
popa
and
mov
sbb
push
cli
int
pop
test
mov
cld
push
sar
push
fsubrs
ja
dec
aas
inc
addr16
dec
stos
imul
loope
xor
lret
outsb
aad
bound
adc
mov
movsb
gs
into
pushf
adc
call
push
jns
cld
movsl
inc
pusha
mov
or
adc
xor
cli
mov
jg
pop
add
mov
jne
xor
mov
daa
fadds
mov
test
std
adcb
sbb
mov
push
cmp
je
jns
dec
inc
popa
cmpsl
inc
not
lods
bound
mov
scas
lret
cmp
push
push
pop
add
popa
aam
or
imul
loopne
pop
leave
enter
sbb
bound
inc
sbb
mov
lahf
int3
mov
sub
test
push
loop
xor
jle
cmp
push
aas
ficompl
movsb
in
inc
dec
cmp
dec
jbe
cs
int
sub
pop
or
xchg
pop
shrb
std
dec
fcoms
push
fwait
jmp
push
pop
xor
push
xlat
std
jge
and
fistpll
and
cld
pop
xor
shl
push
out
sahf
inc
pop
mov
jl
xlat
and
and
nop
or
js
mov
movsb
test
in
pop
dec
stos
andb
movsb
loop
fldt
and
pop
stos
push
xchg
and
imul
lahf
or
dec
jb
sbb
jbe
jb
es
xor
push
stos
aam
fstpt
out
adc
and
mov
fstpl
jo
push
push
dec
fisttpl
inc
mov
dec
dec
repnz
and
lock
jo
xor
xor
aam
loopne
icebp
ret
dec
dec
ret
mov
push
lods
dec
mov
in
imul
xchg
lahf
aas
stos
xchg
lret
mulb
or
push
test
sbb
scas
into
jno
stc
sbb
insl
addl
mov
xchg
lahf
cltd
stc
sub
out
addb
xchg
lds
cmp
popf
fcoml
mov
push
addr16
das
insl
lret
shrb
pop
xchg
mov
mov
mov
aam
dec
aas
dec
mov
sub
xor
adc
xor
xchg
sbb
gs
setb
test
add
ficomps
outsb
xor
fbld
adc
dec
push
adc
xchg
inc
push
or
ds
in
flds
sbb
jne
aaa
add
adc
inc
cmp
xorb
sbb
stos
sbb
push
jnp
imul
xchg
cmp
mov
sahf
mov
add
sbb
jnp
mov
pop
aam
ror
sub
or
xor
adc
or
call
inc
lds
inc
xor
mov
add
mov
repz
pop
js
dec
xor
adc
jg
dec
inc
jmp
sub
xchg
mov
enter
and
aad
adc
sub
mov
xor
loope
mov
add
mov
add
stos
fildll
push
jae
subl
dec
mov
fisttpl
fisttpl
lret
int3
lods
out
add
push
add
ss
rcrl
sbb
rcrb
xchg
pop
data16
xchg
sub
sub
push
lods
ret
gs
xor
sbb
divb
shll
pop
cli
mov
loop
jne
dec
lcall
daa
adc
es
cmpsl
lret
test
cs
sub
test
les
mov
and
inc
adc
pop
jl
bound
cmc
inc
iret
pop
mov
mov
adc
daa
xor
out
push
mov
or
or
jp
dec
xchg
push
pop
test
shll
ljmp
inc
inc
ret
clc
adc
pop
mov
mov
mov
mov
or
mov
xchg
inc
lret
push
dec
mov
inc
mov
and
mov
cmp
lds
insl
addl
and
loopne
jl
cmp
outsl
inc
cmpsb
out
das
shrl
bnd
icebp
fs
lods
jo
cmpl
pop
cmp
out
adc
xchg
mov
into
inc
add
addr16
xchg
stc
xor
inc
icebp
sti
and
push
mov
add
mov
add
and
mov
inc
fisubrl
lods
xlat
lods
pushf
jl
out
or
mov
add
clc
fbld
movsl
xor
ljmp
mov
sar
incl
test
popf
and
in
mov
push
nop
mov
mov
lahf
push
dec
adc
repnz
mov
jp
dec
push
dec
mov
dec
hlt
sub
dec
inc
pop
mov
shll
sbb
mov
movsl
ret
call
test
cmpsl
cld
sbb
dec
sub
stc
mov
push
and
sub
and
add
in
push
cmp
loope
cmp
jno
sub
mov
pop
dec
xor
push
sub
sbb
inc
mov
sub
clc
fcomip
fwait
and
sbb
sbb
pop
jo
and
fbstp
cmp
mov
dec
mov
mov
int3
out
jge
jmp
sub
sahf
enter
mov
pop
jl
jns
push
cmpsb
data16
jns
scas
ss
push
data16
sub
xchg
or
dec
loopne
jns
jle
mov
pop
jp
test
inc
mov
aad
iret
or
cmpsb
mov
or
pop
movsb
popa
roll
lret
fiadds
test
mov
mov
fdivrs
hlt
out
sti
popa
and
mov
sahf
cmp
roll
sub
stos
add
gs
pop
sbb
pop
js
jmp
fadd
fwait
cwtl
test
lret
xor
int
sbb
xor
popf
shll
pop
lcall
ljmp
mov
sub
jbe
sub
cmpsb
mov
imul
sbb
jg
cmp
push
orb
xor
push
ror
mov
ret
sub
jle
dec
fdivl
inc
mov
mov
xor
lea
daa
xor
sbb
adc
jle
icebp
test
inc
jg
test
push
xchg
or
sub
je
inc
repz
popf
mov
cmpsl
inc
lret
loope
mov
jg
aas
test
stc
jmp
ret
and
sarb
cli
dec
add
icebp
add
jno
shrl
push
xorb
sbb
push
and
ljmp
out
sbb
test
nop
leave
mov
rorl
push
add
outsb
cmp
xor
fxch
mov
xchg
movsb
adc
mov
fst
sbb
push
xor
outsb
cmpsb
mov
inc
in
and
fsubrp
jge
ds
inc
imul
fldcw
shlb
fwait
and
jecxz
ret
or
das
aam
aas
and
xlat
test
out
mov
push
aaa
push
lea
movsb
push
int
loop
cmp
outsb
mov
dec
aad
lret
insb
movb
jle
adc
xchg
mov
jge
in
inc
lahf
in
ret
sbb
mov
or
jno
adc
outsb
mov
push
sti
gs
mov
inc
push
insl
filds
pop
dec
jb
push
jle
xlat
mov
pop
pop
inc
fistpll
aam
mov
push
dec
push
push
jno
arpl
xor
cmp
lcall
pop
fstps
sub
popa
inc
add
jl
and
push
ljmp
mov
insl
sub
test
inc
stc
lcall
lea
xchg
fstps
mov
adc
shll
sub
xor
bound
push
movsl
xor
push
jge
mov
cli
mov
in
mov
rcrl
cmp
cld
pop
fadd
ss
add
or
pusha
inc
rol
clc
jle
ja
adc
data16
cmp
or
mov
popf
adc
add
mov
add
xor
xor
scas
sbb
mov
cs
mov
push
cmp
xchg
xchg
jge
movsb
add
and
imulb
sub
cltd
pop
insb
icebp
push
movsl
imul
cmp
sub
jo
pop
mov
cvtdq2ps
dec
mov
add
mov
or
adc
lahf
xchg
mov
push
add
mov
fs
inc
lock
jmp
cmp
mov
cmp
xchg
mov
cmp
and
adc
into
mov
sbb
pop
lods
std
or
pop
insw
cmc
pop
aam
sbb
inc
sbb
add
mov
xchg
inc
mov
dec
xor
cmpl
adc
sbbl
sub
in
dec
cmp
dec
popa
roll
out
dec
mov
out
out
xchg
out
in
cmp
dec
test
xorl
pop
pushf
nop
movsl
bound
addr16
sbb
loope
adc
mov
xor
xor
cmp
jge
dec
adc
jle
push
xchg
mov
lea
pop
xchg
icebp
jbe
out
imul
add
and
fsubr
pop
flds
popl
jno
push
xchg
push
push
icebp
sahf
faddl
test
or
lods
adc
xor
mov
sub
xchg
jmp
out
cmp
mov
inc
jo
push
mov
xor
test
sub
shr
push
xchg
in
movsl
push
push
push
pushf
popa
push
xchg
or
jno
repz
jge
xchg
inc
lret
pusha
lds
or
clc
daa
in
aam
sbb
insb
pop
xlat
mov
dec
adc
in
push
std
dec
pushf
addb
mov
daa
les
mov
or
xchg
jbe
inc
insl
loop
popa
jns
mov
movsl
lds
ss
cmp
and
mov
inc
inc
test
jge
ljmp
outsw
cmp
add
lret
xor
xor
jbe
lock
aam
ja
xchg
adc
push
xchg
shll
and
str
xor
lods
adc
out
aaa
or
je
pushf
test
fwait
test
add
pop
test
sub
adc
mov
mov
pop
decl
fcmovnu
pop
out
ljmp
inc
adc
dec
push
in
inc
or
int3
sbb
test
push
idivb
inc
rcrl
fsubs
fnstcw
pop
aaa
xchg
lods
xchg
add
add
jg
dec
inc
in
lcall
aad
jns
lret
push
in
outsb
dec
jecxz
mov
add
xor
shll
push
cmp
test
push
mov
roll
mov
orb
in
in
jae
loop
fdivs
dec
sbb
mov
lds
enter
cmp
in
js
jbe
inc
out
gs
loopne
jmp
in
mov
imul
fwait
inc
mov
mov
dec
test
in
outsl
mov
ret
add
leave
xchg
movsb
jae
add
andl
addr16
inc
ja
add
call
pop
xor
shl
dec
add
loopne
cmc
dec
push
js
and
call
ljmp
sub
push
and
scas
lahf
or
rdpmc
add
arpl
arpl
mov
nop
loope
mov
jnp
cmc
dec
or
imull
scas
icebp
lds
inc
pushf
xchg
es
test
and
cmpsl
cmp
scas
shrl
lret
jbe
out
call
or
js
pop
mov
cltd
pusha
pop
push
cmpsl
aad
cli
test
popa
mov
sbb
inc
call
sbb
adc
fnstsw
mov
pushf
lret
sbb
shl
rorl
jecxz
leave
stos
shlb
sub
ret
stos
in
sub
jo
mov
ja
dec
mov
xor
ss
push
jb
or
mov
pop
mov
daa
jge
jl
insl
aas
dec
jecxz
inc
sub
outsl
mov
insb
ja
cmp
cmp
test
adc
mov
sub
xchg
ret
repz
sarl
lods
xchg
push
ja
repz
or
aad
and
js
leave
das
pop
jmp
ret
lret
cltd
fs
lret
out
popf
std
outsl
jns
enter
into
sub
cmp
jb
popf
lret
adc
jg
cltd
inc
int
inc
leave
jns
lcall
cmp
adc
dec
jp
xchg
or
enter
cmpsl
mov
pop
mov
xor
shll
pop
cmpsl
icebp
xchg
daa
sub
sub
cmp
inc
shl
loopne
xchg
inc
or
int3
imul
inc
mov
test
inc
adc
push
jno
sahf
ds
dec
push
jmp
push
cmp
mov
pop
xor
xor
inc
int
dec
inc
leave
mov
inc
push
insb
sbb
mov
aam
lret
stos
adc
jne
arpl
shrl
or
and
ret
mov
test
inc
les
jge
cmp
int
xor
cmpsb
out
fndisi(8087
shlb
rorb
popa
inc
lods
gs
pop
add
mov
in
es
or
xor
out
scas
scas
pop
lcall
pop
pop
loope
xchg
adc
mov
out
int3
push
push
jle
lret
xor
imul
loope
in
xlat
cmp
ja
mov
and
dec
mov
in
stos
and
push
adc
mov
jne
inc
jo
and
xchg
push
adc
cwtl
sbb
std
cmc
stc
je
pop
imul
or
jge
jp
loopne
push
repz
mov
cmp
pop
xchg
pushf
addr16
xchg
into
in
or
add
pop
xor
subb
or
push
lds
add
push
adc
mov
mov
clc
add
push
mov
xor
jge
insl
jne
enter
push
sub
mov
adc
sbbl
mov
cmp
xor
jmp
xchg
adc
push
mov
cld
test
cmp
lret
mov
aam
inc
in
push
jb
push
or
mov
mov
dec
cmovo
mov
or
and
sti
mov
cltd
jg
repnz
test
jmp
mov
mov
bound
add
aam
jle
and
clc
mov
mov
dec
psrlq
int3
iret
inc
sahf
les
push
cmp
test
and
add
cmp
imul
shrl
push
out
jnp
insb
loopne
test
xchg
repnz
jns
jno
cltd
iret
pusha
clc
and
lods
pop
lods
jb
ljmp
sbb
push
cmp
jg
jb
and
nop
pop
in
cli
flds
adcl
lea
jg
decb
mov
out
dec
loope
es
xlat
jp
sub
lret
sti
mov
std
dec
xchg
cmpsl
xchg
sbb
mov
mov
lods
or
sub
push
fimull
xchg
jne
add
aas
sarb
setae
sbb
fwait
or
shlb
cmpsl
sub
insl
daa
roll
test
adc
and
lods
arpl
xor
mov
pop
cmp
dec
pop
lea
pushf
adc
dec
popf
outsl
dec
jl
mov
aaa
push
sbb
stc
mov
pop
ficompl
cltd
cs
int
call
cli
push
mov
jns
xchg
mov
insb
rcll
xchg
mov
fcomps
adc
xor
pop
or
gs
popa
adc
ja
rolb
mov
sbb
xlat
push
sahf
sti
mulb
or
inc
pop
jno
mov
in
inc
inc
mov
xchg
mov
retw
pop
mov
sub
rorb
push
pop
sbb
fstpl
test
out
pop
nop
jae
cmp
in
lea
pushf
vpshuflw
scas
fldt
jecxz
cwtl
outsb
or
out
out
shrb
es
lock
incl
push
cmp
inc
dec
insl
out
leave
mov
pop
xlat
adc
pop
int3
cmp
mov
movsb
sarb
icebp
lods
xchg
pop
lret
movsl
jp
popa
lea
cmp
leave
dec
cmp
daa
xchg
imul
pop
fstpl
retw
mov
mov
dec
test
pop
out
movzwl
mov
lds
js
loope
iret
jne
xchg
std
shrl
cmp
cmc
xlat
imul
xchg
and
orl
push
pop
mov
pop
adcb
jbe
push
pop
sbb
mov
test
out
arpl
aad
dec
xor
adc
ja
movsb
insl
jbe
sub
vcomisd
or
add
mov
imul
mov
or
inc
divb
lock
aam
loopne
cld
xchg
std
cmp
js
or
push
pushf
repnz
dec
dec
insl
add
push
cmpsl
scas
add
mov
sti
leave
pushf
andb
rorl
fnstsw
pop
dec
into
jmp
pop
sub
aad
mov
mov
js
lcall
pop
in
xor
mov
dec
daa
mov
cli
out
fucomp
add
jnp
outsl
loopne
scas
test
add
xchg
jg
mov
lcall
adc
movsl
das
sbb
dec
ret
in
stc
les
dec
sub
dec
aad
sbb
pop
and
xchg
shlb
pop
sub
and
cmp
aam
repz
aaa
iret
mov
xor
aam
cs
stc
in
jl
adc
pop
out
fstps
sbb
dec
ljmp
mov
aaa
sti
lcall
and
mov
sub
sbb
imul
sahf
sub
orl
cmpl
into
xlat
popf
int3
sub
mov
mov
jbe
imul
jge
popf
aas
sub
je
pop
jo
sub
clc
lds
cld
mov
sub
insb
cld
jecxz
or
in
or
call
cli
fxch
or
mov
mov
pop
imul
mov
mov
shlb
cld
fadd
fistpll
sbb
daa
outsb
imul
or
xor
jns
aas
mov
aaa
aad
out
jle
jbe
sub
sbb
sbb
imul
cltd
cmc
mov
test
push
lods
jmp
xchg
lret
pop
sbb
popa
shl
jne
daa
scas
xor
test
movsb
cld
ja
imul
jp
xor
push
ret
ss
fnstenv
mov
mov
enter
pop
popf
cmpsl
lods
xlat
mov
pop
loop
imul
call
sub
xor
out
mulb
les
test
iret
mov
fdivs
mov
cmpsb
sbb
or
xchg
jb
jp
dec
shlb
or
pop
mov
mov
inc
sub
loop
mov
jge
sub
add
lret
mov
push
movsl
push
dec
mov
sbb
icebp
pop
insb
push
outsb
pop
inc
add
ficomps
push
lds
cmp
sbbb
pop
into
or
push
rolb
push
or
insb
and
jmp
imul
pop
lods
int
or
dec
mov
pop
outsl
mov
outsl
and
xchg
push
mov
adc
adc
jbe
sub
and
jmp
mov
jns
lods
mov
jecxz
mov
lods
adc
and
cmp
sbb
mov
add
lods
adc
mov
sbb
aad
cmp
lock
es
clc
lea
fcom
mov
mov
mov
mov
jb
lret
js
jp
mov
add
fadds
push
xchg
ss
out
cwtl
in
push
pop
lahf
cmpsb
pusha
cmp
andb
roll
dec
fisubrs
xchg
mov
das
push
es
mov
aam
mov
enter
testb
pop
dec
sbb
mov
movsl
inc
or
mov
xor
test
cmp
dec
fldcw
insl
rcrb
sbb
outsl
mov
mov
add
cmp
ljmp
daa
pop
cmp
into
jnp
lret
mov
mov
in
inc
sbb
jbe
adc
data16
insb
pusha
jnp
stos
push
fisubrs
lret
cmp
les
cmpsl
fcomip
mov
loopne
aam
movsb
sbb
icebp
push
call
xchg
mov
sbb
cltd
popa
push
pop
pushf
and
inc
xor
iret
pop
insl
divb
push
loope
cmp
test
adc
in
bound
add
mov
nop
push
mov
and
add
add
pop
out
mov
cmpsb
mov
mov
hlt
les
mov
xchg
repnz
stos
or
xchg
sub
push
xor
adcl
stos
push
xchg
push
outsl
loopne
pushf
adc
and
sti
jb
rcll
push
sti
fs
xor
leave
jmp
aaa
sbb
cmpsl
scas
cmp
in
mov
cltd
call
jecxz
mov
or
pop
push
out
pusha
enter
lcall
sbb
cmc
lds
or
push
xchg
test
mov
pop
xor
les
jns
icebp
ret
mov
xor
sub
mov
sub
stos
movsb
mov
popf
mov
xchg
call
jo
out
sahf
bound
in
sti
dec
adc
xor
shrb
pusha
movsl
mov
or
fsubl
mov
dec
mov
daa
fistpl
jg
scas
fwait
enter
popa
mov
int
jno
imul
cmp
mov
mov
dec
nop
mov
ds
mov
stos
dec
test
iret
push
or
fxam
in
cwtl
sarl
cmc
aaa
lods
and
mov
iret
cld
js
push
push
lods
shl
cmp
inc
fwait
adc
aad
mov
scas
adc
push
xchg
lret
and
adc
je
arpl
rorb
int
fisubrs
nop
mov
inc
push
imul
sub
stos
ret
cmp
rolb
loopne
push
popf
add
or
sbb
fst
push
pop
mov
loope
div
addr16
mov
adc
jecxz
mov
inc
pusha
dec
dec
pop
inc
jp
lahf
xor
and
mov
sub
and
cmp
popf
jmp
popa
repnz
addb
mov
es
lock
mov
cwtl
sbb
xchg
out
outsb
in
mov
shl
into
test
pop
jmp
or
jo
mov
mov
cmc
add
jg
jg
aad
xchg
xchg
push
lret
jae
cli
adc
add
and
test
push
pushf
inc
aas
jle
xor
push
cwtl
sub
nop
push
pop
push
xor
testb
stc
sbb
inc
xor
or
insb
insl
pop
jge
pop
xchg
cld
out
fadd
in
mov
frndint
aad
push
xor
sbbl
push
add
adc
mov
push
fdivrp
orl
mov
jecxz
xor
and
lods
leave
or
pop
push
cmp
pushf
cmp
sbb
adc
push
and
pop
add
xorb
xor
pushf
jle
xchg
fildll
xchg
inc
into
scas
pop
cli
adc
xchg
jle
insb
or
stos
adc
stos
and
scas
je
add
out
clc
sub
sbb
enter
ficomps
sub
xor
cmp
hlt
sbb
shrb
loopne
pushf
adc
jnp
daa
mov
or
arpl
mov
cs
and
dec
or
inc
repnz
fists
insb
ret
add
push
add
or
jle
or
dec
inc
ret
and
mov
imul
jne
stc
mov
dec
inc
in
add
into
imul
stos
cmp
inc
repnz
sub
adc
es
loope
jnp
cltd
mov
and
je
sub
insb
adcl
stc
adc
jae
mov
lock
cmp
pop
inc
cli
sbb
lods
in
rorl
sti
fcompl
les
sub
adc
mov
ss
xchg
in
iret
repnz
add
notb
dec
cmp
mov
pop
sub
fldt
mov
icebp
repz
sbb
lea
pop
popa
jnp
xor
push
bound
pop
ficompl
cld
push
mov
rolb
push
out
std
loopne
std
insb
repz
or
or
mov
rclb
adc
and
popa
pusha
inc
fwait
dec
jbe
out
mov
cmp
fildll
cs
mov
pop
xor
popf
addb
sbb
cld
jle
mov
push
pop
pop
dec
repz
mov
aam
mov
repz
movsb
insl
lods
les
stos
lock
shrl
inc
imul
xchg
popa
and
dec
in
dec
mov
and
push
pop
mov
mov
clc
cmp
mov
mov
adc
jno
cmp
std
int
jns
sub
aas
and
mov
popa
cmpsb
xchg
mov
jge
fimuls
cmpxchg
mov
iret
leave
inc
std
adc
in
push
lcall
xor
dec
xchg
mov
ds
adc
xor
imul
pop
xor
popf
jp
pop
xor
jo
int3
lret
cmp
push
push
sub
pop
out
in
push
xor
inc
bound
sbb
jge
aam
stos
lods
inc
into
test
adc
outsl
pop
scas
lds
subl
stos
xor
fcoms
xor
cmp
lret
xlat
imul
inc
icebp
dec
sub
inc
adc
xlat
cmpsl
pop
mov
cmp
in
jmp
call
mov
loopne
sarb
mov
test
inc
add
pop
cmp
adc
ss
push
sbb
fistpll
btr
cmp
aas
je
ja
mov
jge
xchg
push
outsl
fidivs
or
mov
push
aaa
iret
push
lods
addr16
dec
repnz
cmpsl
rclb
call
dec
dec
or
mov
inc
mov
daa
xchg
flds
fldl
adc
jno
cli
jmp
xor
cmp
pop
cld
pushf
cwtl
xlat
inc
sbb
dec
dec
pop
fildl
test
xchg
mov
push
mov
and
inc
pop
iret
gs
lret
movsb
mov
and
or
dec
ds
sbb
push
cli
xchg
inc
jmp
fcmove
popf
lds
andl
sbbb
icebp
dec
cmpsl
xchg
or
push
cmpsb
dec
sub
mov
push
mov
jno
add
movsl
xchg
sub
vphsubdq
mov
aaa
xchg
cld
lret
in
out
testb
popa
jnp
add
ja
lcall
adc
dec
jp
or
nop
adc
dec
movsb
fimull
sub
scas
dec
lret
sub
mov
loop
adc
mov
dec
shlb
outsl
push
push
movq
sbb
jecxz
or
sbb
and
jne
in
in
loopne
repnz
mov
jg
mov
sub
xor
push
jo
lahf
adc
out
jne
push
dec
jns
sbb
stos
inc
aas
jl
sarb
fcoml
mov
ret
cli
dec
ljmp
push
les
and
fadds
nop
and
and
orb
cmp
and
fdivrl
jo
mov
repz
cmpl
xchg
jge
mov
adc
mov
fdivs
jae
xor
fs
gs
jbe
aam
gs
add
rcrb
inc
xchg
fldl
sti
loope
jae
push
mov
mov
sub
push
into
in
mov
and
sbb
test
movsl
mov
je
dec
stos
scas
ja,pn
loopne
mov
repnz
pop
jle
push
test
ret
popa
jno
js
fwait
mov
sub
push
fscale
jp
lret
xor
in
out
fwait
scas
test
loopne
xlat
cmpsb
mov
mov
shlb
hlt
adc
in
mov
test
sbb
repz
mov
stos
es
adc
mov
or
xchg
ss
jge
cmpsb
inc
repz
leave
ret
xorb
dec
shl
and
pushf
mov
adc
rolb
iret
inc
adc
pop
or
pop
and
xchg
xor
mov
into
mov
aam
dec
add
add
loope
mov
cwtl
aas
int
cmpsl
addl
ret
or
push
loope
jmp
nop
mov
xor
outsl
orl
add
push
lahf
pop
adc
xor
incl
inc
jb
xchg
mov
fs
mov
mov
out
xchg
cmpsl
sub
push
inc
aaa
loop
ja
shr
adc
sub
xchg
test
push
cli
or
cli
sub
enter
cmpsl
inc
test
sub
sbb
jge
cmc
dec
js
inc
adc
dec
imul
push
xchg
cmp
push
mov
es
mov
sbb
inc
mov
push
cmpb
mov
insl
movsb
jnp
gs
jbe
rcl
sub
push
dec
cmp
dec
mov
and
mov
xchg
orl
pop
push
xor
push
mov
test
lock
push
and
dec
jnp
dec
push
repnz
subb
dec
cmp
hlt
and
roll
mov
outsb
add
out
gs
cs
lods
mov
and
mov
int3
scas
sti
cltd
scas
fs
std
push
mov
mov
push
insl
jecxz
mov
leave
adc
int
aad
jae
or
adc
sarl
cmp
in
cmpsl
add
repz
dec
cli
loope
cmp
sbb
add
push
add
and
inc
xchg
sub
xor
push
mov
popf
mov
mov
add
subb
insl
lahf
cld
les
jno
cmpl
aas
cmpsb
mov
mov
mov
jo
cmp
mov
cmp
dec
xor
insb
inc
cmp
dec
test
sbb
xchg
jo
cli
mov
in
ds
push
pop
add
sbb
imul
xlat
inc
ret
dec
adc
jns
push
cmp
xchg
sarb
sub
test
out
mov
pop
mov
int3
sbb
pop
add
sub
mov
sbb
push
icebp
enter
repz
sbb
dec
sahf
xchg
mov
bound
mov
shlb
in
adc
mov
ficomps
mov
stos
cwtl
into
loop
out
imul
dec
pop
sarl
in
popf
fcmovne
push
add
cli
xor
frstor
inc
or
clc
inc
out
push
mov
sub
push
push
sub
insb
clc
inc
mov
xor
mov
xor
das
mov
add
dec
int
mov
mov
cli
xchg
ja
cs
sarl
or
adc
jg
mov
inc
fnsave
addr16
test
lcall
mov
dec
push
aad
cs
pop
fcomps
push
jne
xchg
add
pop
cmpsb
das
dec
int
add
xchg
dec
call
jmp
ret
mov
push
es
idivl
adc
mov
aad
dec
inc
or
mov
jnp
fstl
and
push
lcall
xchg
cmp
lock
or
push
push
sarl
movsb
jecxz
fs
xchg
adc
mov
adc
jmp
push
mov
mov
jnp
int3
fimull
cli
push
adc
into
cmpsb
cwtl
cmpsb
mov
orl
lds
jle
or
mov
pop
pop
test
aam
cs
lea
cmc
xchg
aam
rcll
xor
stc
pop
add
lcall
xchg
mov
pop
dec
ljmp
lods
jp
push
mov
inc
xor
pushf
push
jmp
mov
repz
inc
sbb
stos
xor
sbb
mov
rcrl
mov
push
add
les
inc
imul
mov
rcrb
jp
push
stos
and
js
cmp
cltd
pop
xor
push
xchg
xchg
inc
insb
mov
mov
rolb
jmp
mov
push
adc
fwait
xchg
je
test
fsubl
push
lret
lcall
bound
xor
mov
mov
mov
fldenv
ret
adc
xor
and
adc
neg
cmp
push
sub
inc
movsb
rorb
xchg
daa
or
loop
xchg
in
add
xor
sub
pop
inc
mov
jnp
push
add
jns
jl
cmpsl
mov
imul
push
jnp
or
and
andb
fs
mov
out
mov
add
cmp
jns
in
stos
xchg
xlat
test
daa
add
sahf
fs
mov
inc
subb
xor
cmp
imul
or
shll
mov
jmp
or
push
inc
sub
and
dec
adc
leave
shl
fbld
jmp
inc
clc
sub
and
pusha
jo
push
scas
call
mov
sub
sub
push
push
lret
arpl
ja
fadds
dec
mov
mov
jecxz
int
cmp
push
subb
inc
in
movsl
jbe
int
cltd
pop
fs
mov
test
mov
outsl
or
pop
das
lahf
pop
aaa
push
add
lock
xchg
pop
loope
jcxz
ds
add
rcr
ficoml
rorl
lods
out
sbb
jno
cmpsb
mov
xor
lahf
outsl
lds
mov
int3
das
enter
fmul
push
push
sbb
aaa
mov
je
js
test
xor
push
sbb
jl
loop
ss
outsb
push
jle
jb
pop
xlat
cltd
in
shl
leave
jae
push
push
sub
jecxz
add
mov
push
inc
leave
sbb
test
and
sbb
rorb
pop
fstl
cmp
sti
inc
sub
and
sub
call
jns
cwtl
xchg
xchg
pop
ljmpw
loopne
and
dec
hlt
lcall
mov
sbb
ss
fsubrs
dec
push
jb
pop
stc
lods
jp
loop
scas
cmp
adc
repnz
mov
and
idivb
shll
lea
adc
jae
in
pushf
push
mov
mov
mov
inc
jno
lret
daa
push
add
iret
gs
jnp
outsl
sbb
sbb
iret
outsl
dec
rcll
sub
jg
loopne
sub
in
push
pop
or
cmpsb
inc
or
popa
xchg
mov
pushf
sub
in
mov
inc
in
adc
popa
mov
and
dec
push
xor
int
in
pop
insb
int3
rcrb
sub
jne
loop
shll
std
lds
push
lds
dec
lds
adc
push
andb
mov
push
ljmp
jae
sbb
enter
int
or
mov
out
cs
mov
jg
jbe
cmp
or
mov
mov
pop
cmpsb
ret
es
shl
jbe
rol
pop
dec
icebp
jge
icebp
test
sub
fsubrl
push
jns
es
and
mov
jnp
jmp
sub
in
push
lcall
lret
dec
mov
and
mov
push
push
sub
add
xchg
repz
sbb
jb
test
aad
fmull
jge
dec
pop
pop
push
xchg
repz
jne
mov
orb
out
mov
adc
loope
add
sahf
cli
mov
sub
mov
leave
out
je
das
push
aaa
aas
icebp
insb
inc
outsl
sub
imul
sub
mov
fwait
dec
push
popa
pushf
mov
sti
daa
arpl
inc
jae
jae
mov
or
add
xchg
out
cld
bnd
push
adc
jno
jnp
add
je
ss
mov
mov
jecxz
nop
cmpsl
mov
std
push
ds
leave
aad
fnstsw
push
lcall
xchg
je
fdivl
adc
icebp
ret
fstpt
or
push
fsubrl
shrl
fwait
xchg
jg
test
or
dec
dec
arpl
push
cmp
test
mov
out
mull
push
adc
inc
pop
jecxz
ja
jns
in
insb
fdivrs
push
enter
xor
add
dec
jb
push
cmp
in
cld
cltd
mov
xor
adc
sbb
mov
push
lods
push
mov
mov
lods
push
lea
loopne
mov
dec
sbb
or
aam
rcrl
outsl
push
lock
jle
cli
mov
insl
fstl
add
jae
nop
adc
sbb
test
stc
sub
std
jb
xor
sub
jp
mov
mov
jbe
xchg
and
mov
daa
xchg
dec
push
das
stc
jecxz
xchg
fwait
aas
lock
test
insb
and
sbb
scas
pop
jo
cld
loopne
push
inc
or
pop
pop
test
out
cmp
lret
add
lahf
dec
xchg
cmp
aaa
adc
clc
clc
arpl
mov
mov
or
jge
ret
test
out
ja
leave
mov
fidivrl
rcl
aas
adc
pop
cmpl
ljmp
inc
cs
mov
pop
in
pop
push
pop
inc
mov
mov
mov
cld
les
add
ss
or
inc
int3
js
mov
data16
hlt
insl
std
movsb
cmpsb
mov
ret
fcom
cli
ljmp
push
les
cmp
add
mov
jno
je
and
sbb
jne
in
movl
out
sbb
pop
mov
into
into
pusha
inc
xor
push
cs
pop
sub
jle
mov
popf
sbb
mov
dec
sti
xchg
inc
ljmp
test
push
sub
push
cmp
add
mov
push
test
stc
pop
and
mov
mov
into
or
mov
fstps
push
call
xchg
mov
cs
lods
and
aaa
mov
xor
add
fsts
xor
push
xchg
dec
mov
add
fistps
cmp
mov
xor
cmp
and
jle
dec
out
mov
inc
mov
ficomps
out
and
sbb
rorb
sub
out
and
jmp
xchg
add
repz
test
xor
lret
adc
push
fcomi
ds
fidivrl
into
cltd
xchg
cmpsb
sbb
outsb
shl
jae
or
nop
dec
jb
jl,pn
fiaddl
push
cmp
dec
push
xchg
or
sub
mov
aaa
add
or
and
jp
scas
mov
fidivs
sbb
mov
sbb
popf
jmp
enter
dec
add
stc
jle
movsl
push
dec
mov
sub
fstpl
orl
sbb
sub
fwait
movsl
scas
xor
push
add
loop
or
cs
pop
xchg
in
sub
jnp
fiadds
imul
dec
or
ret
or
loopne
stos
sub
adc
jecxz
push
sbb
dec
jo
mov
cmp
cmp
add
and
clc
inc
mov
and
das
out
push
int3
sbb
lods
fistps
jp
movsl
mov
in
xlat
and
xor
mov
shrl
push
ffreep
sti
das
push
xor
test
sbb
rorb
or
mov
lret
repz
mov
repnz
popa
fcoml
filds
or
add
test
xorb
jae
pop
mov
popf
sarl
shll
fmull
fidivs
idivl
sub
pushf
pop
pop
clc
cld
icebp
jne
mov
mov
ljmp
ja
loop
cmp
lods
or
rorb
cltd
xchg
loopne
ljmp
test
outsb
xchg
in
adc
push
xor
mov
mov
xchg
out
in
mov
cs
mov
xorl
or
mov
test
fisubrl
push
lret
int
shrb
shlb
idivl
xchg
aas
push
je
out
out
or
pop
andb
pop
dec
cmp
movsb
or
mov
sub
mov
mov
subl
test
cltd
out
clc
jb
lods
or
push
stos
enter
mov
pushf
jecxz
scas
repnz
mov
lock
pop
dec
scas
fmuls
lods
js
insl
mov
and
dec
into
cmpsl
imul
int
nop
pop
jb
mov
mov
in
mov
xchg
out
mov
push
adc
das
xor
hlt
dec
out
imull
push
inc
xor
mov
sub
xchg
nop
outsb
into
pop
insb
je
push
sub
js
stc
xchg
push
in
and
mov
push
sub
mov
cmp
shrl
imul
jl
int
fwait
rorb
clc
insl
push
push
test
sbb
mov
cmpsb
and
jl
xor
sbb
test
mov
test
mov
and
mov
sbb
mov
mov
push
sub
sets
xchg
cli
out
stc
inc
xchg
mov
stos
xchg
mov
xchg
dec
cmp
mov
push
repz
jae
xor
imul
jg
jno
xchg
pop
dec
jl
push
sbb
jmp
mov
push
loopne
arpl
push
push
les
jmp
lahf
lds
jns,pn
xchg
repnz
pop
push
pop
pop
xor
lods
mov
out
mov
add
js
cmp
orb
cli
in
jb
popa
xchg
jmp
sbb
repz
mov
pop
dec
insb
and
mov
inc
dec
fisubs
inc
je
jg
add
fcomp
fisttpll
dec
mov
pop
push
mov
scas
push
decb
ss
lahf
xchg
jb
sbbl
mov
xor
shll
scas
push
scas
sub
inc
dec
inc
sbb
pop
pop
popf
lret
jno
or
shlb
outsl
mov
stos
in
push
mov
divb
push
loopne
sub
xchg
stos
xor
push
mov
out
mov
inc
loope
cmpsl
insb
dec
adc
fs
mov
enter
xchg
inc
loopne
cmp
pop
push
xor
into
loope
mov
mov
mov
test
test
loopne
mov
leave
aad
cmpsb
adc
leave
out
movsl
shr
xor
mov
mov
xor
add
add
mov
into
adc
pop
mov
and
mov
push
rcr
shr
out
test
mov
mov
add
test
scas
scas
popa
cmpsb
das
test
in
into
nop
jns
shll
aad
pushf
lds
or
push
paddusw
adc
inc
fstl
stc
mov
mov
pop
inc
adcl
scas
mov
les
mov
fidivrl
xor
scas
leave
sub
sub
sub
ds
and
loop
xchg
pop
insl
dec
lods
mov
insl
ljmp
sti
mov
arpl
mov
pop
test
ds
dec
pop
hlt
inc
jecxz
pop
push
push
das
outsb
mov
filds
popa
ljmp
movsb
xor
cli
mov
arpl
out
xchg
sarb
bound
in
loop
into
mov
inc
xor
int3
adc
cmp
mov
sub
or
or
mov
aam
cmp
adc
sub
mov
insb
insb
pop
aaa
push
je
sahf
mov
out
decl
adc
rcrl
lahf
aam
cmp
adc
aaa
mov
xchg
hlt
scas
mov
repz
cmp
mov
aad
mov
or
xchg
xchg
outsl
push
inc
pushf
and
xchg
and
dec
xor
loope
dec
and
fldl
mov
add
mov
push
outsl
int3
sbb
or
mov
insl
movsb
inc
mov
xor
jl
dec
push
mov
sub
add
pop
into
add
xor
xchg
inc
mov
test
and
ljmp
fsubl
push
sbb
shl
inc
pop
jmp
xlat
test
pop
rol
pop
pop
pop
adc
or
aaa
xor
mov
push
and
ret
sub
xor
in
in
out
mov
pop
push
incl
or
aas
insb
and
jp
mov
mov
out
sbb
pop
int3
cmp
outsl
lea
loopne
jnp
and
mov
test
int3
and
pusha
xlat
xchg
sub
cmpsl
and
lods
fs
daa
lock
ret
out
lcall
add
and
xchg
into
or
xchg
orl
sub
lcall
jo
lea
sbb
xchg
orl
sahf
xchg
dec
imul
daa
arpl
dec
jmp
popa
sub
scas
js
aad
test
mov
lods
into
shlb
pusha
ja
js
sbb
mov
mov
decb
push
aad
fistpll
mov
in
xchg
sbb
pop
fildl
fdivl
je
pop
bound
cmpb
ret
cwtl
add
mov
fnstsw
mov
mov
aam
jo
int3
pop
clc
popf
stos
mov
jb
scas
cmp
xchg
out
fimull
and
test
xchg
cmp
push
scas
out
sti
pop
or
and
jns
add
lahf
cmp
cmp
jno
fwait
jne
cmp
dec
les
sbb
jb
test
sub
jno
mov
mov
mov
xchg
fcomp
lock
dec
arpl
testl
pop
jl
cmc
outsl
iret
mov
lea
cld
sar
or
int
adc
ret
subl
imul
movsb
push
jae
ss
stc
push
aad
and
and
jmp
pop
jae
hlt
adc
mov
dec
sub
xor
inc
xchg
js
cmp
pop
aaa
sub
push
aad
push
imul
out
stos
movhps
jns
dec
pushw
mov
sahf
jp
fmull
pop
enter
dec
cld
or
adc
add
repz
nop
pop
dec
or
jp
pusha
jle
test
pop
jno
cmp
mov
pop
sub
mov
dec
pop
adc
fsts
mov
mov
cmp
ret
or
inc
or
mov
jle
pop
adc
dec
inc
xor
inc
jl
mov
pop
mov
inc
xor
stos
sti
in
inc
jmp
test
mov
xor
cmp
pop
popf
out
push
cs
cmp
mulb
loop
stc
and
xchg
sbbl
sbb
call
xor
das
cltd
test
mov
mov
add
xchg
imul
mov
sub
mov
loope
jbe
mov
lret
cmp
adc
es
outsb
ja
mov
lds
inc
mov
std
ret
jno
roll
fs
scas
jno
pop
outsl
sub
xlat
stos
incl
test
adc
stos
fwait
testb
dec
lods
testb
xchg
pop
inc
aam
push
xchg
pop
ljmp
fildll
fists
aad
push
pop
push
out
ja
ss
stc
xchg
bound
add
xorb
inc
sbb
daa
inc
popf
icebp
and
and
imul
loopne
cmp
std
dec
inc
sbb
adc
xor
jns
sbb
jno
mov
cld
iret
int3
mov
les
rcll
fstl
or
mov
adc
xor
orb
mov
cmpsb
sbb
test
addr16
mov
js
push
clc
adc
xor
mov
ret
and
mov
pop
cmc
or
stc
mov
lock
pop
jne
adc
pop
daa
xchg
pop
ficoms
sti
subl
imul
mov
leave
xor
sbb
cmc
cmc
xchg
xor
jnp
and
insb
int3
push
jp
xorl
push
jo
cld
jb
adc
mov
add
jnp
les
mov
frstor
cmp
xor
jb
mov
xor
mov
inc
sahf
push
xor
xlat
filds
adc
nop
das
dec
pushf
ror
mov
dec
dec
rcrl
mov
adc
push
test
repnz
lods
add
xor
jae
and
repz
jbe
push
mov
fs
xchg
xor
fcomi
movsl
pop
cmp
lcall
mov
inc
jae
in
int3
lock
pop
or
aaa
dec
xchg
loop
cmp
fwait
sub
xor
xchg
nop
sbb
rcrb
clc
or
cmp
pushf
gs
push
ds
add
divl
test
push
rcr
and
sbb
jne
xchg
add
cwtl
sti
jecxz
pop
xor
insl
cld
lcall
mov
xlat
jl
loopne
out
outsb
xchg
daa
shll
lret
hlt
xor
or
lds
push
mov
mov
pop
xor
decl
jno
push
in
cmp
aaa
or
fdivr
sub
mov
mov
es
div
sti
icebp
jp
out
cmp
enter
imul
mov
int3
pop
inc
sbb
inc
orl
imul
jo
sahf
jle
push
xchg
pushf
dec
sti
inc
shll
or
mov
or
push
outsl
loope
into
data16
testl
test
stc
je
add
in
xchg
stos
inc
inc
sbb
pop
cmp
adc
xchg
inc
sbb
repnz
dec
es
adc
je
in
dec
sbb
pop
ficompl
incb
add
xlat
or
loop
je
cmp
add
enter
lret
jecxz
test
loop
add
in
addb
pop
inc
iret
mov
popf
nop
filds
pop
fadds
cmp
inc
shll
push
push
je
fisttpl
mov
pop
scas
xor
jl
jne
push
stc
sbbl
sub
rep
mov
push
dec
dec
push
sbb
leave
out
add
inc
ficoms
pushf
mov
daa
std
push
adc
nop
jl
ds
lret
mull
adc
cmp
insb
jno
mov
fildl
mov
jbe
bnd
mov
xor
xchg
out
jecxz
sub
fisttps
inc
cmpsl
ret
outsb
jmp
daa
insb
add
jns
mov
mov
or
push
mov
inc
pop
mov
pusha
testb
outsl
ret
jle
clc
sub
jnp
mov
xor
mov
testl
inc
dec
fstpl
scas
cmp
or
push
mov
test
fwait
popf
cmpsl
sahf
stos
dec
jmp
addr16
xor
insl
jae
movntq
xchg
fdecstp
out
pop
sarb
ror
cld
xor
aas
mov
loopne
push
inc
notb
inc
data16
xchg
sub
fwait
mov
test
mov
clc
adc
arpl
addb
es
aad
mov
xor
pop
pop
mov
pop
icebp
adc
cwtl
ror
insb
mov
arpl
lret
sbb
xchg
mov
pop
lock
fimuls
pop
mov
dec
scas
scas
hlt
adc
inc
nop
stos
adc
pop
fisubrs
pop
into
pop
lods
jmp
jge
jp
loop
faddl
cwtl
mov
andb
pop
or
ret
ljmp
xor
out
inc
andb
iret
cmp
stos
jbe
sbb
push
outsb
aaa
js
cmp
xorl
sbb
cltd
lds
jp
dec
loopne
inc
into
pop
clc
testb
sbb
inc
imul
fisttps
out
idiv
inc
mov
lcall
repnz
cltd
and
jge
mov
cmc
les
lds
sbb
jae
sub
js
scas
dec
pop
push
xchg
cmpl
mov
xchg
sbbl
fdivrs
jp
xchg
sub
mov
push
cmc
addr16
xchg
mov
pop
add
enter
or
leave
sbb
jp
xchg
je
out
lcall
iret
add
inc
inc
imul
stos
aam
sub
dec
leave
jge
or
imul
jmp
aaa
jno
mov
sbb
mov
xchg
xlat
mov
xor
fnstcw
out
xor
test
fisttpl
subb
adc
and
jg
jb
jbe
push
pop
popf
and
push
ss
push
dec
movsl
dec
dec
adc
repz
js
add
les
addr16
loopne
popf
addb
inc
jle
lahf
cmp
daa
mov
cmp
or
cmp
mov
mov
and
test
shll
fsubl
mov
xchg
gs
xchg
xchg
out
repz
dec
imul
aam
adcb
mov
mov
mov
jmp
shrl
test
mov
insb
out
cmp
dec
push
fstpl
in
test
aad
in
loope
sub
sub
push
ret
mov
jne
repz
and
jmp
jle
outsl
cli
imul
jp
bound
movsb
cltd
ret
in
pusha
out
adc
push
ret
pop
je
repnz
and
push
jle
lahf
sub
pusha
flds
imul
sub
sbb
mov
arpl
push
ret
mov
call
lcall
xlat
shl
addb
lea
aam
or
out
lods
dec
jo
dec
push
cli
inc
les
andb
inc
rolb
or
xor
xor
lods
inc
cmpsb
daa
mov
jb
and
cmp
jno
add
rclb
ljmp
and
dec
add
test
pop
inc
call
movsl
mov
movsb
mov
mov
or
cltd
andb
fldl
xchg
shl
pushf
cmp
mov
inc
add
or
cld
xchg
and
push
xor
movsb
les
in
aad
xor
push
pop
pop
test
test
jbe
sub
mov
adc
sub
test
push
in
push
mov
xor
adc
cmp
pop
mov
push
mov
dec
sbb
dec
sub
mov
aad
insl
cld
test
aad
or
push
dec
jbe
std
lretw
mov
jmp
mov
es
je
paddq
pop
icebp
mov
xchg
lds
insl
jae
or
pop
enter
xchg
ss
jns,pn
out
aad
test
or
aam
mov
nop
xchg
mov
movsl
cli
int
cli
in
add
and
cmp
test
xchg
push
loop
sbb
dec
les
mov
pusha
shlb
add
jbe
cmp
das
mov
cli
pop
negb
jno
mov
jo
push
jmp
jns
lcall
adc
and
mov
ljmp
mov
out
and
out
mov
divl
addr16
movsb
loopne
lcall
dec
xchg
sbb
inc
jae
gs
movsl
enter
xor
ret
cmc
das
scas
repz
lahf
fsubs
cmp
in
xchg
cltd
sub
rcll
cmp
and
and
pop
idivl
stc
aam
sub
pop
xor
orb
or
xor
mov
test
inc
cmp
add
repz
jno
fwait
add
in
jmp
mov
clc
das
shll
sub
mov
mov
inc
int3
aas
clc
mov
push
fldlg2
inc
sbb
stos
xor
sub
mov
repnz
imul
and
jg
sti
sbb
call
or
push
dec
jmp
push
clc
inc
repz
cmp
mov
cmp
movsl
hlt
add
xor
outsl
cltd
rolb
xchg
and
push
push
mov
push
lret
in
mov
pop
mov
mov
popf
sbb
clc
add
lock
cmpl
stos
sahf
add
outsb
xor
mov
mov
fbstp
push
dec
repz
out
nopl
cmp
repz
ds
loope
aas
adc
pop
adc
jb
xor
xor
xchg
jmp
push
xchg
scas
push
adc
inc
mov
jl
cmp
es
sarl
or
jns
jno
mov
add
pop
jle
push
dec
adc
dec
mov
mov
test
movq
xchg
sub
out
jmp
mov
outsb
push
mov
inc
pop
test
xchg
std
movsl
jb
mov
sub
push
mov
xor
pop
cmp
cmp
das
sbb
inc
push
jbe
xchg
movsb
sbb
jecxz
ss
mov
call
xor
mov
leave
mov
in
dec
jo
jg
inc
inc
clc
jle
cmp
sub
scas
fwait
scas
pcmpgtw
test
dec
mov
push
lods
jbe
dec
pop
pusha
imul
psrlw
call
dec
insl
gs
xor
aad
sub
outsl
leave
mov
outsb
add
test
mov
sub
lret
arpl
jo
leave
add
adc
push
lds
push
ljmp
xchg
call
out
pop
push
stos
sbb
insl
js
cmp
nop
and
insb
fs
movsb
sub
mov
dec
scas
jl
jne
mov
loope
mov
xchg
rorl
ds
adc
inc
jle
fbld
pop
ljmp
outsl
and
dec
in
dec
mov
mov
mov
sbb
pop
xchg
shll
call
fdivl
add
popa
stc
xchg
push
int3
push
pop
sbb
xchg
int
insb
cld
iret
sub
pop
mov
jecxz
mov
imul
in
std
insl
fwait
mull
mov
and
into
mov
js
fisttpll
push
fldl
pop
sbb
push
bound
mov
adc
outsb
add
sbb
out
loop
mov
cmp
ljmp
and
dec
int3
lea
sbb
xor
push
pop
xchg
inc
mov
pop
push
mov
adc
sbb
xor
lea
ss
scas
repz
les
jmp
fnsave
pop
leave
push
pop
lock
dec
fninit
pushf
mov
lahf
mov
cmpl
mull
pop
cs
ja
dec
shrl
and
sahf
lock
ja
dec
sbb
and
cmc
mov
push
enter
push
or
lds
test
mov
mov
pop
jne
pop
negl
inc
adc
packuswb
mov
ja,pn
jb
ss
pop
mov
inc
lret
adc
int3
and
adc
sub
insb
cmp
jge
in
xor
out
mov
push
pop
jae
shrl
mov
or
adc
stc
lods
sbb
mov
add
dec
movb
loope
scas
push
pop
loop
rclb
cmp
jbe
ret
push
test
idiv
sub
in
pop
into
cmpl
xor
jge
daa
fisubrl
adc
cmc
sub
lods
test
cmp
and
jle
pop
and
shrb
fcmovu
inc
stc
lds
ljmp
pop
jne
fldl2t
jb,pt
inc
ja
in
jge
pusha
inc
push
add
inc
stc
out
loop
inc
iret
push
fistpll
ret
loopne
popa
aas
mov
or
xchg
mov
insl
fs
mov
pop
or
ss
mov
mov
pop
ret
in
mov
mov
outsl
ljmp
xchg
xor
negb
ds
sahf
insl
mov
addr16
je
xorl
sbb
mov
nop
dec
xchg
mov
lock
adc
sub
sbbb
xor
sbb
add
sub
repnz
cs
scas
pop
pop
out
pop
lcall
jge
or
sahf
testb
adc
pushl
repz
sub
mov
mov
loope
ret
pusha
pop
scas
mov
jge
loope
mov
decl
mov
dec
in
ret
les
and
mov
xor
xchg
sti
test
fnstenv
mov
mov
or
mov
sbbb
mov
out
mov
xor
dec
xchg
test
fsub
test
jbe
push
dec
fldenv
popa
sbb
insl
js
movsb
scas
outsl
shl
mov
cmp
mov
loopne
or
imul
xorps
es
icebp
push
stos
xchg
jnp
in
icebp
dec
fildl
fistps
jbe
test
mov
pop
push
mov
mov
jns
movsb
mov
push
xchg
pushf
push
or
shll
xchg
popf
iret
pop
or
fimuls
or
test
or
iret
xor
xlat
mov
int3
adc
xchg
dec
lock
sbb
push
push
mov
cmp
jg
scas
in
out
lahf
and
jl
lods
ret
adc
pushf
push
scas
or
push
and
fs
enter
stos
mov
xchg
adc
jns
or
ficompl
loope
lahf
jno
sbb
mov
cmpsb
inc
cmp
dec
pop
jb
movsb
aam
movsl
sbb
inc
jns
dec
jo
in
lods
lock
xchg
fdiv
mov
in
aam
mov
xlat
mov
push
inc
cld
out
das
dec
pushf
xchg
mov
inc
mov
daa
es
mov
iret
test
adc
pop
bound
in
mov
cli
ret
jecxz
int
outsb
fcomps
mov
rol
xor
push
push
push
ja
xchg
movsb
cmp
cmpsb
mov
mov
ljmp
and
sahf
sahf
aaa
hlt
mov
out
js
lret
test
pop
mov
push
add
mov
xchg
mov
xlat
add
ljmp
fisubrs
mov
cwtl
int3
test
mov
test
push
in
bound
xchg
daa
sbb
gs
push
mov
mov
call
lds
push
sbb
shll
sub
mov
adc
xor
cmpsl
add
fisttpl
jbe
jns
jno
out
sub
inc
jne
mov
pop
add
adc
faddl
loope
pop
push
shlb
pop
in
jne
push
nop
shll
lcall
outsl
dec
adc
jle
mov
lods
clc
inc
push
ret
movsl
sbb
sbb
sub
in
xchg
inc
xor
pop
cwtl
adc
ds
ss
add
cmp
loopne
push
lds
test
add
xor
in
cmpsb
pop
mov
inc
xchg
inc
add
aaa
enter
xchg
ror
lock
stc
shl
dec
repnz
adc
call
repz
mov
adcl
adc
int
std
jecxz
mov
pop
insb
movsl
test
add
xor
out
pushf
cwtl
loop
jnp
xchg
cmovno
shlb
pop
cs
mov
sub
addr16
daa
fcompl
push
mov
adc
sbb
sub
mov
mov
inc
frstor
xlat
pop
fildl
fistpl
adc
jbe
lret
mov
add
std
aam
nop
push
or
test
in
mov
movsl
call
push
xor
fisttpl
xlat
or
cmp
mov
mov
sarl
rcr
fiadds
mov
fwait
jge
loopne
sarl
sub
popf
icebp
cltd
pop
and
loop
cmp
std
dec
and
push
js
das
outsl
aaa
loopne
negb
aam
cmp
xchg
mov
pop
mov
test
dec
addl
sub
xor
rcl
ljmp
push
mov
inc
mov
nop
ds
ss
xchg
in
mov
sahf
enter
pop
addr16
int
cmc
fsubs
loop
pop
dec
fisttpll
jecxz
xchg
test
fisubl
pop
popf
jbe
mov
push
pop
cmp
out
cmp
cmp
clc
xor
push
arpl
cwtl
mov
mov
inc
int3
and
in
xlat
pop
inc
push
lods
jnp
je
push
pop
aaa
imul
add
mov
push
mov
adc
xchg
rcrl
cmp
pop
cmpxchg
and
cmp
cld
jp
dec
inc
cwtl
jbe
incl
cld
mov
and
orl
jno
movsb
out
push
mov
dec
out
int3
leave
daa
sbb
xchg
mov
movsl
mov
pop
sbb
bound
pushf
cmp
movsb
sub
fucomi
icebp
out
sub
inc
mov
add
rorb
dec
jae
loop
es
jle
cld
jle
jnp
dec
sub
lcall
push
loopne
add
mov
mov
inc
jns
mov
pushf
gs
adc
and
inc
jb
jns
xlat
fisttpll
cwtl
add
and
adc
cld
push
pop
mov
loope
jne
dec
dec
dec
sbb
sahf
lahf
or
test
test
mov
idivb
mov
das
clc
movsb
ljmp
je
lcall
imul
and
mov
aas
insl
mov
and
sbb
dec
and
pop
or
psrlw
xchg
mov
addb
test
outsl
adc
or
rcrb
cmp
sub
stos
xchg
scas
pop
aam
stos
outsl
jecxz
xor
ficompl
ss
xchg
sbb
popa
push
sub
mov
mov
inc
cmp
xor
xor
ret
cmp
sub
adc
lahf
imul
test
in
pop
rcll
mov
pop
sbb
xchg
movsl
cmp
push
push
adcl
sub
jmp
movsl
cltd
aam
pop
negl
andps
daa
mov
push
rolb
inc
add
jno
out
push
mov
cmc
jmp
or
cld
loop
push
lret
inc
les
pop
mov
movsl
addl
repnz
adc
adc
add
cmp
in
pop
pop
data16
pop
jno
out
pop
cmp
sti
aaa
mov
sbb
mov
fmull
scas
dec
pop
sti
push
mov
push
mov
sub
mov
sbb
test
add
inc
push
cld
sub
ljmp
or
xor
aam
and
sbb
or
into
xchg
sub
test
jnp
xchg
lret
roll
lds
pusha
cltd
mov
adc
bound
das
mov
push
and
out
bound
loopne
shll
sbb
pop
daa
mov
xchg
mov
cmp
sbb
iret
icebp
cld
inc
iret
add
jmp
inc
clc
jne
rcrb
inc
jae
dec
aas
aad
mov
testl
mov
cwtl
and
pop
rcll
push
adc
jno
aaa
pop
fwait
mov
push
ss
sbb
loope
sbb
stc
jle
or
sbb
fstpl
ficoml
push
arpl
pop
pushf
mov
daa
dec
fdiv
dec
add
inc
inc
dec
movsl
sub
cmc
ss
mov
fistpll
sbb
mov
push
hlt
sub
mov
cmp
add
or
fmul
cmpsl
mov
or
xchg
lock
sbb
mov
push
xchg
add
gs
jg
jo,pt
leave
adc
pushf
out
sub
loope
nop
in
xor
pop
flds
es
cmp
jecxz
in
mov
pop
popf
inc
data16
inc
int
jecxz
mov
rcrl
icebp
imul
add
mov
mov
xor
sub
inc
fimuls
out
pop
add
sbb
lcall
cmpsl
sbbl
insl
dec
pop
loopne
sbb
popf
sbb
inc
jmp
mov
jge
sbb
dec
stc
loop
xchg
outsb
int
mov
stos
cld
push
addl
xchg
and
mov
adc
push
mov
pop
divl
push
cmp
mov
jb
cmp
out
or
test
cmp
mov
rcl
pop
cmp
xchg
adc
mov
push
dec
pop
xor
mov
push
add
lret
lahf
mov
dec
outsb
call
icebp
out
imull
or
mov
int3
push
cld
sbb
sub
ficoml
or
inc
jo
stos
les
cmp
rclb
sub
adc
pop
jmp
dec
dec
leave
popa
mov
pop
add
xor
cmc
xor
add
mov
imul
mov
mov
push
push
xlat
sub
icebp
dec
js
mov
xchg
pop
out
jmp
fisttps
sbb
test
sbb
bound
and
or
imul
ret
mov
vpacksswb
cs
jge
or
adc
jp
bound
push
sub
stc
xor
lods
inc
mov
push
pop
aam
jp
lea
out
pop
outsb
mov
mov
and
stc
lret
lahf
sub
rolb
cmc
ret
lods
subl
sub
inc
fmull
xchg
stos
cli
into
repz
lret
mov
pop
fwait
dec
xchg
push
into
fmul
pop
xchg
cmpsl
sti
out
pop
mov
shrb
or
push
or
insb
aaa
dec
jae
jmp
stos
les
imul
lods
ja
scas
adc
push
mov
icebp
or
jp
mov
jp
rolb
repnz
push
dec
icebp
loopne
daa
ja
adc
push
mov
dec
iret
sub
push
repz
sub
xor
cmpsb
push
pop
popa
test
adcl
leave
mov
pop
adc
pushw
pop
aaa
xchg
icebp
sub
or
inc
cli
fcomi
or
je
dec
test
dec
mov
sbb
rclb
jg
sub
out
es
and
cmp
cmp
inc
push
fstps
sub
xor
repz
mov
enter
push
xchg
imul
jmp
inc
xlat
fcmovnu
push
mov
xor
dec
iret
daa
ds
in
je
jmp
mov
jle
test
or
pop
dec
test
xor
jo
and
scas
das
clc
in
jne
dec
inc
mov
dec
pop
popf
stos
daa
out
mov
pop
mov
xor
xor
jo
jno
pop
pop
das
cwtl
imul
inc
cmp
loope
lcall
or
xchg
inc
aad
mov
bound
cwtl
sbb
in
and
xchg
test
popa
sbb
pop
sub
outsb
push
aam
xchg
ds
or
pop
xchg
adcl
pop
lods
hlt
xchg
leave
adc
insb
cmp
mov
or
sbb
cltd
add
popa
sbb
and
and
fninit
imul
sub
push
lods
aam
sti
jns
fimuls
jg
pop
adc
movsl
sub
sti
jle
outsb
fcomi
clc
iret
addr16
cmp
out
cli
shrb
sahf
test
dec
and
sub
lea
adc
cmc
mov
mov
dec
or
mov
xchg
out
aam
aad
repz
jbe
pop
xor
loope
add
into
movsb
mov
add
dec
sbb
test
dec
or
mov
adc
push
ret
and
lock
mov
aad
xor
mov
sbb
cmp
lcall
dec
sahf
loopne
mov
leave
push
insb
xchg
sub
mov
jge
pop
mov
out
outsl
out
leave
pop
stc
ficoml
inc
cli
jno
xor
mov
jno
iret
gs
mov
lahf
dec
bnd
xor
pushf
in
dec
xor
mov
jbe
int
sahf
orl
dec
and
loopne
adc
rorb
ret
out
rol
push
jmp
pop
adc
ss
lock
mov
mov
ss
inc
jg
popf
out
jmpw
call
jae
lods
xor
movl
jnp
xchg
mov
les
in
movsb
pop
pop
push
push
ss
mov
or
xor
pop
test
int3
scas
lret
pushf
cmp
xchg
add
addr16
sub
fs
xor
cmp
scas
inc
in
push
shll
daa
fsubl
ljmp
dec
cmp
jns
sbb
cmp
cmp
shll
add
mov
cltd
cmp
inc
xchg
jne
pop
scas
stc
ljmp
test
and
stos
int
jge
xlat
xchg
movsl
adc
mov
pop
jnp
sahf
rcr
ret
sbb
jns
adc
mov
insl
insb
testb
test
ds
iret
cwtl
adc
and
adc
inc
mov
cmp
push
leave
mov
xor
out
xchg
sbb
mov
test
jmp
ljmp
push
cmp
push
or
xchg
sub
xchg
js
xlat
fsub
xchg
adc
sarl
inc
cmp
das
das
inc
push
jbe
mov
mov
jecxz
scas
jnp
aad
jo
sub
or
fucomp
jl
iret
adc
cmp
in
add
mov
outsb
xor
xor
inc
and
jl
call
mov
cmp
nop
sarl
into
mov
lret
outsl
shl
adc
jo
add
shll
cmp
xchg
inc
dec
jns
cmc
add
cmp
ret
enter
cmpsl
xchg
add
cmp
int3
fmulp
scas
pop
loop
stos
push
repnz
adc
add
inc
out
sti
push
sbb
push
adc
nop
lods
adc
shlb
cli
mov
dec
out
data16
int3
cli
push
aam
outsl
outsl
in
pushf
push
add
in
jns
xchg
in
out
fists
jle
cmpsl
adc
insb
ficomps
or
pop
sbb
sub
nop
addr16
out
inc
int3
dec
mov
notl
sbb
mov
pop
mov
inc
lea
jle
pop
jle
imul
jbe
mov
jp
xor
movsb
xchg
cmp
movsl
or
xchg
push
add
sub
in
mov
mov
movsb
or
subb
outsl
inc
test
das
mov
pushf
mov
daa
leave
cmp
loopne
jge
call
mov
insb
and
adc
xor
es
or
outsb
inc
jecxz
sub
cmp
shll
sub
jg
and
pop
pop
xchg
test
pop
icebp
and
adc
lahf
ja
mov
add
jae
ret
or
sbb
icebp
mov
inc
sbb
adcl
cwtl
add
push
or
pop
lret
popa
nop
into
int
pop
xchg
push
dec
repnz
addr16
adc
cmp
cltd
or
int3
sub
ret
lods
lods
test
fld
cs
lods
and
insl
cmp
jp
leave
and
mov
mov
aam
sub
adc
inc
sti
mov
nop
test
lods
in
sti
push
mov
mov
add
pop
dec
cld
repnz
nop
xor
icebp
rcrb
aaa
scas
rcrl
fistpll
ss
std
lods
fistps
scas
and
popf
rsqrtps
daa
xchg
daa
loope
orb
sbb
ret
jne
and
enter
movsl
rcrl
mov
ret
cmc
ja
lcall
fwait
es
sar
cmp
add
cmc
cmp
mov
lcall
fwait
call
out
dec
pushf
lahf
jb
inc
ret
sbb
adc
outsl
and
negb
test
add
mov
call
dec
mov
sbb
aaa
iret
jecxz
int
and
jbe
aad
and
mov
das
or
mov
fst
adc
push
sar
push
ret
dec
hlt
mov
movl
sub
pop
into
rolb
insb
leave
jb
add
fisttps
mov
pop
or
insb
and
xchg
loope
mov
popa
jbe
or
xchg
and
sbb
push
mov
cmpsl
mov
movsl
fwait
dec
push
sbb
pusha
jnp
inc
pushf
addr16
addr16
xchg
jmp
je
jg
and
vandnps
adc
cs
jb
leave
sbb
subb
xchg
xchg
cmpsb
jno
jae
dec
fisttpll
incl
std
and
and
jg
xchg
and
das
cltd
jbe
jnp
cmp
inc
sahf
mov
push
inc
pop
call
nop
sarl
jge
cmp
mov
out
jp
xchg
cmp
mov
xorl
rcrl
scas
push
push
insl
jecxz
cmp
in
inc
adc
cmp
push
mov
mov
out
pop
gs
mov
jns
or
movsl
jno
repz
leave
jecxz
hlt
test
pop
cmp
xchg
outsb
push
mov
add
hlt
movsb
dec
je
push
inc
push
mov
ljmp
ds
add
lea
xorb
sahf
pop
push
pop
mov
fsub
mov
aam
leave
cmp
jo
sub
sbb
rcr
fldcw
add
pop
fidivs
add
loop
ljmp
lods
shl
nop
stc
xlat
mov
fsubp
xor
inc
hlt
ds
pop
int3
rep
jns
lret
fsubl
test
in
push
into
inc
fimull
push
or
fnstsw
dec
aas
aad
jl
xchg
pop
test
and
adc
pop
sbb
dec
push
notb
mov
iret
or
stos
aad
pop
in
xchg
fisttps
popf
mov
push
sbb
sbbb
add
pushf
out
add
inc
sub
adc
add
cmp
adc
push
sub
mov
dec
push
or
aas
nop
test
ljmp
rcrl
pop
cwtl
adc
mov
loope
es
adc
cmp
icebp
test
push
xchg
movlps
xchg
jle
ja
add
mov
add
imul
and
je
add
shll
jg
xlat
mov
dec
inc
xor
leave
inc
js
das
test
dec
test
cmp
das
xchg
repnz
fidivrl
sbb
mov
jns
popf
ds
add
xchg
add
sarb
sbb
lahf
daa
push
mov
xchg
cli
out
and
pop
xor
pop
xchg
outsb
jno
rcll
or
xorl
loopne
cmc
stos
push
stos
lock
adc
mov
add
gs
jg
loope
nop
pop
cmp
test
lret
cmpsl
daa
mov
xchg
lods
or
mov
es
cmpsl
mov
inc
gs
xlat
lahf
gs
pop
sbb
xor
loope
pushf
insb
xor
lret
mov
aas
mov
adc
arpl
sahf
jbe
emms
pop
mov
lret
jmp
andl
mov
testb
xchg
sarl
jnp
xor
jl
iret
lods
das
cmpb
popl
and
fisubs
ja
clc
pop
jnp
std
jnp
pop
adc
mov
pop
mov
sub
dec
mov
inc
or
jae
cwtl
mov
fsubl
imul
inc
or
aam
jns
imul
adc
push
cld
mov
jg
cwtl
cmpsb
mov
xacquire
sbb
jmp
mov
clc
jae
clc
popa
repz
mov
fistpll
and
push
pop
sbb
pushf
xchg
out
sahf
push
dec
icebp
or
es
into
nop
ret
and
stos
mov
cmpsl
mov
pop
xchg
and
mov
mov
lods
jmp
push
js
sbb
sub
dec
nop
lret
in
popa
xor
popf
dec
jbe
cmp
pop
sti
push
mov
add
mov
jl
shrl
addr16
mov
mov
es
or
ret
adc
cwtl
loopne
daa
loop
outsb
mov
hlt
xchg
jl
ret
addr16
push
jle
jbe
sbb
mov
dec
and
xchg
icebp
rcrl
leave
lret
pop
xchg
cmpsb
mov
mov
push
or
icebp
inc
adc
stos
out
and
movsl
int
jl
daa
mov
xor
inc
add
and
mov
cmp
aam
mov
xchg
sub
mov
push
jecxz
mov
sbb
sarb
test
movsl
fst
call
sarl
es
add
jno
loope
lret
ja
fisubs
das
lods
cld
mov
pusha
and
mov
pop
inc
pushf
cli
bound
and
scas
mov
hlt
imul
jle
sub
adc
cmp
sarl
pop
pop
mov
mov
xchg
fsubrl
aad
push
push
aaa
xor
into
daa
mov
xor
and
fdivs
andb
mov
xchg
loope
jbe
cld
out
int
insb
bound
and
xchg
enter
sub
cli
and
fcomps
out
addl
lahf
test
adc
mov
mov
push
data16
in
ljmp
dec
or
jl
cmpsb
into
icebp
push
push
fisubs
clc
sbb
aaa
popf
mov
fnstsw
out
mov
add
scas
hlt
rcll
add
iret
int3
sub
jne
pop
pop
sarl
xor
xor
mov
pop
ret
sub
xchg
lea
and
sbb
mov
ja
cld
sbb
adcl
je
fildll
and
and
loope
inc
shl
mov
sbb
push
imul
ficoms
imul
lds
roll
fs
push
cmpsb
add
sbb
push
add
lea
mov
fadds
push
cld
out
push
stc
imulb
loopne
cmp
fstl
sti
sub
mov
add
mov
pop
in
and
ja
push
shl
adc
pop
push
pushf
add
mov
add
repz
popf
scas
sub
xlat
lods
popf
leave
lds
push
mov
xchg
pop
xor
mov
icebp
aaa
cld
push
movsl
shrb
dec
rcrb
lds
std
loope
push
push
push
cmp
mov
cmpsb
fnstcw
fmuls
shll
shrl
and
lret
test
pop
mov
xchg
scas
cmp
cmpsb
test
adc
add
pop
dec
sbb
cld
mov
xor
mull
pop
or
loope
jecxz
out
cwtl
rcl
cmp
add
fcmovu
adc
cltd
cmp
popa
mov
jmp
xor
mov
mov
out
mov
sbb
xchg
imul
inc
mov
addr16
ss
enter
arpl
mov
je
lea
faddl
inc
mov
leave
cmp
sbb
sbb
in
outsl
cmp
xlat
test
xchg
dec
out
xlat
dec
jno
xor
xor
adc
push
lea
push
pop
jmpw
jb
xchg
mov
data16
inc
cwtl
stos
pop
fucomi
pop
lock
push
xor
inc
icebp
push
dec
sub
int3
xchg
je
mov
rcrl
stc
cmpsl
out
cmpsb
mov
repnz
std
push
add
mov
ficoms
push
jmp
test
into
cwtl
cs
jge
xor
and
aad
movsb
xchg
jl
adc
xchg
and
push
pop
faddl
arpl
push
mov
jo
xor
pop
jnp
ds
pop
jo
pushf
outsl
dec
sbb
pop
scas
hlt
ret
lods
cmpsl
inc
popa
cli
movl
pop
popa
inc
and
jge
xchg
mov
pop
inc
rolb
gs
std
mov
daa
lods
sub
mov
cmpsw
call
testb
xor
out
pop
aad
add
xchg
cmp
pop
sub
jne
cmpsl
adc
jae
push
call
stc
sti
fildl
sub
jne
dec
rcll
xlat
cld
pop
jns
sahf
dec
test
mov
mov
fnsave
rolb
into
movsl
in
push
loope
fisttpl
ficoms
push
xchg
fucomp
add
cwtl
inc
dec
les
xorb
push
cltd
notl
movsl
pop
jmp
and
xor
inc
jnp
arpl
sahf
shlb
imul
aas
lret
inc
mov
enter
cmpsl
in
jnp
shrl
outsb
pop
repz
dec
ret
stos
les
adc
and
mov
mov
xchg
ljmp
jecxz
mov
js
imul
jo
loopne
jp
dec
in
lock
lret
mov
sbbb
cmp
lods
or
add
test
xlat
pop
cwtl
lret
sbb
rolb
sbb
inc
sub
clc
shl
je
xor
add
lcall
dec
aaa
or
mov
jle
sar
iret
add
jge
dec
out
jmp
movsl
retw
inc
pop
scas
and
shlb
sub
jmp
arpl
lds
xor
mov
adc
cs
adc
lock
or
int3
jge
movsl
cmpsb
jge
dec
fwait
movsl
mov
test
loopne
and
mov
push
notb
rcll
mov
arpl
push
or
shll
dec
les
pop
xchg
xor
nop
or
movsl
stc
mov
pop
nop
jmp
mov
sarb
cmp
rorl
xchg
pushf
lds
hlt
pop
and
cwtl
stos
shlb
fcoms
cld
pop
lea
fidivs
imulb
mov
add
pop
jns
imul
and
shr
repnz
add
hlt
sbb
xor
jge
jecxz
mov
pop
xchg
cs
and
scas
cmp
test
das
sbb
into
cmp
mov
scas
mov
xlat
hlt
xor
out
xchg
push
xchg
movsb
sti
ret
mov
stos
add
outsl
mov
push
sbb
mov
fldenv
xchg
mov
sub
mov
pop
cmp
mov
cs
in
insl
ljmp
jbe
xchg
sbb
mov
mov
mov
sbb
ret
lea
pushl
mov
ret
jae
aad
dec
into
push
mov
cmp
xchg
mov
ss
ror
aaa
stos
test
pushf
dec
adc
pop
push
jne
cli
adc
cltd
lock
inc
push
adc
xchg
scas
dec
cmp
xorl
push
aaa
lcall
mov
pop
cmp
jl
jl
adc
arpl
aam
xchg
mov
sub
mov
push
stc
outsb
mov
ljmp
xchg
fildl
fsubrl
in
adc
lret
adc
aad
roll
add
repz
inc
js
loop
subb
xor
stc
sub
scas
out
dec
cmpsl
nop
pop
jo
add
orb
or
das
push
adc
in
push
dec
dec
xchg
mov
cmp
and
or
sbb
mov
in
lods
clc
xor
mov
je
ret
jne
push
dec
xor
sub
shrl
inc
inc
and
lods
insb
jo
test
sahf
aam
adc
testl
aam
into
idivl
fstl
mov
lret
xor
sahf
mov
dec
sti
mov
les
movsl
in
test
cmpsb
inc
scas
jmp
fcoms
push
or
sar
sub
mov
xchg
lock
fbstp
push
mov
inc
stos
dec
aaa
push
imul
js
mov
outsl
push
sbb
cmpsb
jp
outsl
sbb
test
lds
cmp
scas
arpl
shll
xchg
add
je
shrb
cmc
mov
inc
cmp
xor
xor
out
mov
mov
hlt
or
daa
dec
insl
out
ret
adc
cltd
jmp
out
inc
xor
xlat
sarb
inc
aam
and
push
sahf
scas
insl
jp
xchg
std
shll
out
mov
mov
push
stos
or
and
xchg
loope
adc
outsl
wbinvd
iret
aad
pop
xchg
mov
xor
ja
inc
les
pop
cmp
mov
je
pop
mov
xchg
std
inc
and
inc
mov
sbb
movb
in
iret
cs
icebp
push
jbe
sbb
daa
aam
sbb
cmp
bswap
into
or
out
lods
lret
std
mov
mov
fcmovnbe
jo
addr16
adc
xchg
aam
push
int3
sub
mov
or
ret
dec
push
mov
imul
cmp
fbstp
xchg
mov
push
xchg
fisttpl
add
lahf
pop
xor
mov
insb
addr16
pop
pop
xchg
insl
mov
dec
push
jo
or
dec
mov
into
mov
mov
clc
and
or
enter
pusha
subl
out
fs
jecxz
int
mov
sbb
cmpsl
sarl
pop
xchg
add
mov
lock
sbb
in
ds
lret
mov
mov
cmpl
pop
std
adcl
call
in
inc
ret
push
sarb
jle
shl
invd
xor
fstpt
out
xorb
fucomip
mov
pop
stos
repnz
cwtl
iret
mov
lods
sbb
add
pop
sarb
aas
dec
aaa
rorb
inc
push
xor
int
shl
xor
les
cmp
in
inc
push
add
in
mov
nop
mov
stos
mov
fdivrs
outsb
inc
dec
push
adcl
push
push
mov
stc
xchg
pop
rolb
jbe
jge
jb
js
xor
fcmovnbe
fdivs
or
idivl
mov
and
fsubrl
push
loop
enter
cld
or
xchg
mov
inc
jecxz
push
ret
xor
mov
outsl
repz
lods
jg
stos
mov
sub
pop
mov
cmp
pop
cmp
jg
mov
cmp
cmp
and
cmpsb
je
cmp
jmp
aaa
push
in
dec
addb
int3
out
sbb
push
sarb
insb
inc
inc
sub
fsubl
rcrl
sahf
lret
mov
sub
je
into
popf
loop
and
mov
mov
pop
pop
add
dec
lahf
outsb
lea
roll
jbe
pop
cmp
in
sbb
shll
outsb
test
pop
sahf
fidivrl
loopne
mov
scas
roll
fnstcw
push
cmpsl
adc
and
dec
and
push
ret
int
pop
testl
loop
inc
xor
mov
rclb
mov
adc
cwtl
push
lahf
add
mov
mov
xor
cmc
lcall
adcl
sub
push
add
mov
in
sub
pop
loop
and
outsl
xor
scas
ljmp
movsb
mov
xchg
int
gs
cltd
out
stos
inc
cld
fsubrl
aad
add
outsl
and
das
jg
fwait
cwtl
cld
xchg
jl
daa
cmp
pop
ds
push
or
adc
daa
xchg
push
inc
mov
cmp
cmc
jge
int3
scas
xor
movsl
jnp
sub
cli
push
mov
sub
cmp
xor
sub
cmp
pop
push
fwait
pop
pop
imul
adc
repz
inc
pusha
inc
scas
jnp
out
dec
xor
cmpsl
mov
in
push
dec
pushf
cmp
add
xorb
pop
xor
je
xor
scas
shrb
jae
or
push
imul
mov
and
icebp
push
mov
mov
mov
leave
adc
scas
and
mov
mov
insb
in
cmp
mov
fs
sub
xchg
cmp
mov
or
stos
jmp
jmp
lds
push
xchg
push
roll
pop
xchg
cmc
sbb
dec
imul
out
lret
jae
mov
lahf
add
lods
or
int3
cmp
out
les
sbb
pop
add
sub
and
cmc
mov
nop
cmpsb
lds
daa
inc
inc
xchg
dec
dec
cmp
and
ror
or
cmp
add
in
inc
jp
xchg
je
xchg
cmpsl
sbb
das
pusha
aad
add
mov
lods
lds
xorl
push
adc
push
mov
mov
and
push
loop
out
sbb
out
jae
jns
in
clc
fs
stc
cmp
mov
pop
in
icebp
pop
sbb
sub
push
imul
push
jmp
loop
mov
popf
inc
cltd
cmpsl
call
mull
mov
aaa
push
lret
jno
inc
inc
lret
lret
popf
mov
popf
mov
sub
cmove
repz
mov
jmp
ja
sarb
and
xor
cmp
andl
and
adc
enter
fwait
cld
lea
adc
shll
xlat
out
and
mov
push
inc
int3
jmp
fcoms
push
mov
bound
or
enter
jecxz
and
leave
int3
jae
and
ret
push
sarl
lock
push
cmpsb
hlt
fadds
push
cmp
sahf
push
fstps
insb
outsl
mov
sahf
outsl
sbb
xchg
jl
scas
push
jp
in
mov
lds
push
lds
jne
popf
pop
jle
and
movsb
jb
lds
pushf
jae
jmp
frstor
mov
xor
aas
add
es
jmp
and
cld
jno
dec
mov
xor
aad
rol
or
dec
inc
roll
daa
decb
jl
fs
or
jp
and
mov
sub
pop
in
or
mov
cmp
xor
stos
jns
cmpsl
inc
mov
inc
or
lea
push
sub
pop
ret
rorl
pusha
or
pop
fidivs
idiv
sbbb
test
xor
imulb
mov
mov
out
in
insl
out
xchg
fsubrs
std
movsb
sub
xchg
adc
push
cmpsb
sub
in
push
inc
int3
lret
hlt
or
cs
dec
cltd
movsl
in
divb
cmp
pushf
inc
aas
inc
cmp
sub
push
dec
fs
js
sahf
sub
adc
xor
mov
mov
or
dec
jae
cmp
mov
insb
movsb
stc
mov
sbb
adcl
repnz
sub
jne
xlat
or
fwait
mov
dec
mov
leave
pop
icebp
in
cmp
and
int3
jae
pop
mov
pop
and
sbb
les
dec
add
cli
cmp
jae
cmp
bound
dec
pop
ds
test
lcall
decl
pop
and
jne
add
sti
test
iret
push
push
enter
es
icebp
xchg
xor
xchg
mov
lret
mov
in
adc
mov
mov
jmp
loop
xor
xor
add
fwait
cmp
clc
xor
and
insb
and
testl
sbb
add
repz
xchg
in
daa
sub
aam
and
fcoml
jnp
inc
inc
xor
sbb
or
fisttpll
inc
sub
popf
aaa
sbb
cmp
enter
pop
repz
push
loope
sub
pop
aam
fcomip
ret
lret
lret
pusha
dec
out
pusha
mov
stc
xorl
mov
mov
push
in
shrb
leave
imul
jns
add
mov
repnz
mov
jne
dec
fiaddl
adc
es
test
mov
pop
das
sbb
dec
xor
imul
xchg
stos
stos
mov
push
enter
jl
dec
dec
fsubr
xor
out
xor
in
cmp
fisttpll
push
fidivrl
mov
loop
fimuls
dec
out
aaa
fsubl
repnz
mov
cltd
mov
push
scas
cli
insb
into
dec
or
mov
rolb
sbb
out
or
push
mov
test
enter
fwait
xor
adc
rorl
sahf
in
or
int
insb
or
mov
push
lret
inc
adc
mov
push
ficoml
rorb
stos
pop
pushf
mov
ds
data16
arpl
xchg
enter
repz
xchg
imulb
inc
mov
adc
cmp
xchg
hlt
cld
cld
push
subb
and
iret
movsl
sahf
push
and
xchg
and
fsubrl
jp
in
insb
fsub
data16
and
mov
push
imul
inc
mov
inc
dec
insl
testl
scas
mov
mov
js
pop
xor
sti
das
scas
pop
gs
repz
loop
test
mov
cmpsb
iret
in
loope
shrl
sbb
cwtd
arpl
push
add
mov
out
loopne
ss
pop
andl
inc
aad
addr16
adc
fisttps
push
add
cmc
sub
int3
mov
jg
add
or
fs
notb
test
and
cmpsl
and
incl
cmp
and
adc
pop
frstor
pop
push
pop
xor
data16
ret
pusha
mov
mov
pop
or
xor
sub
pop
inc
idivl
add
mov
mov
lret
add
xchg
xor
es
ds
xor
lods
fsubs
push
pop
mov
adc
jae
pop
test
enter
xor
xchg
out
mov
fstl
push
scas
gs
fidivrl
and
push
sahf
jne
and
shlb
movb
add
jecxz
xchg
push
out
push
xchg
filds
test
sti
movsb
dec
jns
xchg
outsb
cld
out
pushf
pop
aas
subl
xchg
mov
ret
mov
and
jmp
jae
push
pop
es
mov
mov
imul
mov
sbb
dec
hlt
shlb
jg
arpl
jge
xor
cld
cmp
sub
jge
mov
fisttpll
mov
fildl
fsubr
das
call
xor
fnsave
mov
orb
subl
loopne
fcomi
mov
pusha
xor
cltd
mov
pusha
and
and
movsl
mov
fistpl
inc
fidivrs
xchg
xlat
push
icebp
mov
scas
stos
ret
sbb
pushf
fwait
shll
xchg
inc
les
pop
das
jnp
or
xchg
mov
bound
daa
clc
out
mov
adc
sbb
into
lds
cmpsl
xor
mov
jo
mov
or
mov
push
mov
roll
sbb
cmp
es
add
xchg
out
loope
xor
inc
adc
dec
jbe
cld
in
jl
scas
mov
shl
inc
sub
push
movsl
dec
test
or
pop
gs
mov
sub
aaa
mov
data16
test
push
je
xor
pop
pop
adcl
xchg
dec
fstps
inc
jmp
mov
jge
out
xchg
int
data16
add
lret
cld
dec
sbb
out
adcb
xor
add
addl
fiaddl
xor
cltd
and
sbb
jg
and
inc
lcall
cmc
pop
pop
inc
insb
push
lock
fnstsw
xor
xchg
pop
xor
rcrl
cwtl
push
loopne
inc
les
dec
inc
mov
mov
daa
mov
ljmp
jbe
aam
xchg
and
divl
lahf
movsl
fldcw
fwait
pop
adc
aam
jbe
push
pop
cmp
test
push
jne
pusha
push
mov
jb
imull
cmp
sarl
test
stos
outsl
mov
inc
es
mov
dec
or
mov
leave
push
xor
imul
sbb
sub
xor
cld
cmpb
sbb
xchg
or
dec
or
gs
sbb
decb
jns
inc
repnz
adc
sar
inc
nop
adc
jg
lods
es
rolb
or
sub
iret
in
cmp
push
roll
push
dec
insb
mov
sbb
jg
rcrb
popa
mov
mov
outsl
dec
div
aad
pop
add
jne
or
sub
mov
ds
jne
enter
outsb
xor
jne
add
fmuls
or
push
jmp
push
loopne
push
mov
jp
sbb
int3
stos
pop
loope
pop
dec
in
push
sub
mov
xchg
adc
ss
pop
addb
sbb
inc
outsb
into
loope
adc
roll
clc
cmp
pop
nop
fwait
sbb
push
fsubrs
leave
or
pushf
inc
mov
xchg
mov
add
movsb
mov
adc
mov
sahf
js
daa
addb
cmp
dec
cmp
dec
xchg
pop
adc
and
daa
xor
stc
sbb
mov
das
jno
cmpl
cmp
and
cld
rcrl
jne
mov
into
xor
stc
mov
push
adc
sbb
inc
inc
mov
fadds
roll
mov
mull
loopne
jge
mov
add
clc
adc
test
mov
jmp
clc
enter
or
sti
mov
sbb
imul
imul
pop
ret
repnz
fwait
dec
fistl
cwtl
xor
xchg
mov
mov
dec
loopne
scas
jecxz
and
ljmp
mov
stos
jmp
sbb
add
sbb
popa
add
xchg
inc
in
jae
xor
rclb
xchg
daa
stos
xchg
loopne
mov
or
and
movsl
adc
xchg
add
fisubrl
scas
in
repnz
roll
sbb
dec
pop
dec
bound
je
dec
jl
pop
inc
ja
int
inc
sahf
add
addr16
push
push
push
aas
inc
pop
sub
push
adc
sub
aad
sub
rorl
jg
movsl
mov
fstpl
das
xor
or
cmp
or
mov
xchg
xchg
add
xchg
adc
push
stos
push
xchg
insb
arpl
add
cli
enter
stos
imul
xlat
jae
enter
inc
push
inc
mov
shrl
das
mov
inc
aaa
frstor
lret
mov
int3
loope
xor
outsl
aas
mov
insb
inc
lret
aas
push
push
ret
scas
scas
or
jne
subb
cmp
pop
pop
xchg
inc
inc
scas
adc
or
je
xor
call
jle
adc
or
jb
in
gs
mov
enter
sub
mov
mov
pop
mov
pop
sarb
and
sub
out
xchg
sub
aas
aad
pop
sbb
ss
loope
fldt
das
push
sub
sub
das
aad
cmp
cmp
fcomip
mov
inc
out
in
cltd
call
sti
push
or
or
arpl
imul
out
ds
and
jl
inc
cmp
inc
aam
sub
add
xlat
dec
fwait
jmp
fwait
mov
popf
inc
scas
std
shll
jbe
cmp
pop
ljmp
decb
fisubs
mov
fidivrs
and
movsb
sbb
imul
shrb
xor
flds
cmpsb
sahf
sbb
fwait
cmpb
aas
out
das
les
or
or
fcomps
and
xor
rcrb
data16
push
inc
ds
es
les
cmp
push
in
mov
aas
sbb
adc
fsubrl
push
rorb
sbbl
inc
mov
ljmp
mov
in
cs
std
add
pop
ds
insl
movsl
movsb
jbe
lahf
fwait
inc
mul
cs
sub
aas
sub
into
adcb
pop
das
mov
test
adc
cmp
add
and
mov
jb
sbb
and
mov
cmp
mov
dec
pop
dec
xor
sbb
pop
adc
sub
xchg
icebp
call
inc
cmp
fnsetpm(287
cmp
leave
sub
jae
movsl
sarb
out
test
out
test
pop
js
fdivrl
clc
imul
cmp
xlat
xchg
sub
lods
punpcklwd
mov
fists
dec
xchg
mov
pop
mov
enter
lea
ss
rcr
mov
xor
call
in
xchg
push
mov
mov
jno
pop
push
and
cmp
gs
fidivrs
cwtl
adc
fldenv
add
out
inc
adc
subb
and
imul
outsl
shll
dec
aam
mov
push
xor
outsl
mov
push
mov
sbb
mov
test
or
lock
cli
outsl
cmp
aad
test
pop
and
rorl
push
repz
data16
cmpsl
stos
cld
mov
es
cmp
sbb
xor
das
and
and
popaw
mov
leave
xchg
push
cmp
add
ss
in
push
mov
mov
inc
and
popf
std
and
pop
lret
push
add
lds
adcb
cwtl
dec
shlb
mov
das
lock
ret
addb
ljmp
lahf
xor
ret
sub
adc
mov
mov
ss
dec
pop
mov
dec
lret
mov
xchg
pop
jg
mov
js
mov
sbb
mov
push
add
fiadds
cmc
cmc
mov
mov
insb
ja
scas
inc
fsubs
test
adc
inc
ds
in
cli
sbb
mov
inc
cmp
lret
push
adc
or
fimull
jg
push
jge
mov
push
push
and
loopne
icebp
and
movsb
pop
insb
les
mov
loop
cmpl
pop
mov
mov
push
scas
dec
jnp
divb
push
addr16
dec
xchg
or
mov
data16
imulb
aad
in
testb
and
imul
test
jl
cmp
pusha
jne
mov
sub
mov
pop
sbb
nop
mov
jp
inc
pop
jnp
dec
push
xchg
jecxz
mov
jecxz
push
pusha
push
loopne
cmp
add
cmp
sbb
jmp
push
test
pop
mov
cwtl
cltd
aam
in
inc
clc
imul
shll
xor
xlat
xor
mov
jbe
mov
enter
cmpsb
sbb
jl
fdivrl
mov
ljmp
add
ret
dec
fdivrs
pop
int3
pop
pop
subb
adc
cmc
inc
subb
mov
imull
lahf
sbb
daa
ret
xchg
lcall
lds
sbb
jns
mov
pand
nop
xor
mov
cmp
rorl
sbb
int3
in
aas
sub
in
test
cmpsb
mov
icebp
shlb
xchg
adc
mov
mov
cmp
pop
sbb
adc
mov
jg
pop
test
adc
bound
mov
fcoml
dec
pop
xor
or
and
aam
fistpll
sbb
adc
push
xchg
out
addr16
sbb
add
xor
orb
test
loop
test
fstpl
add
dec
ja
adc
in
adc
das
jmp
mov
pop
stc
shl
fs
ja
test
out
nop
push
mov
outsl
xchg
and
iret
dec
push
mov
ljmp
sub
pusha
xchg
cmpsb
js
jno
xchg
jbe
jp
cmp
cmp
ficomps
add
mov
in
cwtl
out
adc
xchg
mov
adc
and
xor
lcall
cli
push
sub
test
loope
xchg
mov
fstp
mov
pmullw
andl
lds
in
xor
cltd
mov
in
dec
loope
insl
jno
movsl
push
and
movsb
inc
aaa
in
movsb
outsb
out
sub
int
test
pop
inc
pop
sbb
mov
andb
out
movsb
add
out
lods
or
movsl
xor
or
sahf
lods
test
in
outsb
push
pop
pop
sub
push
jns
out
ljmp
and
lods
dec
in
dec
aad
mov
xor
rolb
add
inc
les
inc
in
andl
sub
jecxz
jno
add
ret
mov
in
push
jp
das
sub
rcr
dec
push
enter
xchg
outsl
int
lret
shl
or
lods
icebp
push
jno
jg
das
xor
or
push
pop
sbb
mov
mov
mov
fs
cltd
int3
fisubl
hlt
sbbb
or
xchg
and
call
mov
out
lret
inc
sub
push
int
jae
lahf
scas
push
sbb
lcall
push
leave
adc
lret
xor
into
mov
fxch
aam
dec
inc
in
int
shrb
ret
cmp
scas
gs
and
hlt
insl
fsubs
push
xchg
xchg
stc
movsb
cmp
pop
push
pop
int3
sbbl
add
sbb
inc
pusha
lds
inc
mov
mov
loop
dec
fwait
test
mov
les
aaa
cltd
dec
cmc
shl
xchg
out
xchg
and
cld
inc
bound
les
setno
inc
shlb
mul
leave
cmpsb
xchg
cmp
cmp
in
pop
add
inc
mov
xchg
lods
rorl
sahf
rcrb
jnp
pop
leave
adc
shlb
dec
mov
imul
aas
xlat
or
popf
stc
aam
cmp
jbe
jmp
sbb
jl
xor
push
mov
movsl
in
test
ficoml
mov
jae
add
mov
jge
jo
sbb
loop
inc
adc
andb
cmovp
aam
or
stc
mov
loopne
repnz
ret
inc
test
pop
test
jmp
int3
fsubrs
adc
int
inc
mov
xchg
js
gs
push
or
inc
repz
add
inc
inc
xor
test
dec
xor
loop
mov
call
loopne
xchg
outsb
loop
addb
lods
add
add
aas
daa
ja
jno
xor
push
pushf
inc
daa
pop
sahf
lock
pop
ret
add
adc
cli
stos
outsb
dec
fwait
push
popa
mov
sub
adc
in
arpl
jg
mov
je
push
mov
test
insb
fwait
inc
leave
push
gs
push
lods
mov
lret
sub
sbb
cmp
pop
dec
sbb
cli
arpl
pop
and
sbb
lahf
dec
pop
mov
push
mov
shll
cmpsb
jl
fimull
adc
sti
inc
jle
adc
sub
jle
xadd
inc
sub
shl
mov
mov
and
jl
push
sub
sbb
pop
jmp
mov
dec
addr16
fstps
push
loopne
cmp
pop
mov
add
cmp
aas
pop
push
loope
add
icebp
movsl
xlat
adc
xor
fsubl
push
aaa
inc
sub
leave
fiaddl
jo
iret
adc
cmp
xchg
mov
adc
push
fcoml
mov
imul
push
loope
add
shrl
imul
xchg
aam
jb
push
pop
and
fs
xor
and
or
pushf
push
and
sub
test
jle
xchg
mov
jne
cs
sbb
repz
xchg
sbb
fwait
fwait
repnz
xlat
mov
sbb
call
jmp
fs
rorb
fimull
aaa
pop
cltd
adc
lret
pop
jbe
fcoml
fbstp
jo
roll
push
xor
mov
leave
stc
pop
or
bound
sub
dec
sbb
mov
icebp
fldenv
add
mov
cmp
mov
mov
stos
rolb
ret
iret
xchg
stc
repz
in
mov
je
pop
dec
or
mov
xor
div
jmp
cli
push
add
add
outsl
jp
sub
and
jmp
cmp
aad
or
cmovg
adc
xor
jmp
icebp
pop
pop
or
stos
add
adc
jl
mov
adc
xchg
sbb
dec
mov
js
mov
mov
push
mov
lods
jnp
mov
mov
sbb
jle
lahf
loop
push
push
sub
mov
jl
inc
leave
je
int
inc
mov
in
jp
pop
jp
push
in
jg
outsb
sub
jp
cmp
aas
repnz
pop
xor
push
cmp
shlb
sahf
negb
das
les
in
pop
cmpsl
cs
loop
repnz
nop
fcmovnu
ret
jl
cmp
add
cld
into
stos
mov
mov
xchg
jnp
and
fcoml
and
ficoml
xchg
inc
negl
les
sbb
jg
daa
test
loop
lea
test
enter
sbb
dec
scas
inc
cmp
dec
pop
sub
out
leave
repz
dec
scas
dec
sub
testb
push
ret
pop
inc
repz
adc
cmp
jns
push
popf
adc
shll
aam
fcomi
jp
jbe
in
push
sbb
testb
xor
add
jp
inc
fistps
mov
mov
push
out
push
pop
pop
ds
aad
adc
cmp
add
ss
dec
int3
xor
je
xor
in
push
sub
jo
adc
int
mov
pop
inc
push
inc
fsubr
dec
mov
cs
mov
ret
loop
mov
iret
push
andb
inc
test
ja
inc
pop
sti
test
cltd
xorps
push
fisubrl
xchg
daa
scas
in
jp
xlat
xor
jbe
in
mov
ss
push
fnstenv
addb
xor
cmc
lcall
mov
cmpb
daa
loop
stos
mov
subb
push
xchg
cmp
sar
cmp
lahf
lea
sbb
dec
cmp
call
jo
sub
nop
fstl
movsl
inc
and
pop
mov
outsl
loope
push
adc
push
imul
cmp
jle
lock
mov
mov
adc
into
or
imul
inc
aas
cmc
jp
add
inc
insb
cmp
movsl
imul
in
cltd
jge
fmull
loop
call
insb
gs
les
lcall
inc
test
mov
lret
lods
xchg
add
std
or
mov
pop
inc
sub
adc
jle
push
jnp
incb
mov
pop
mov
mov
loop
jle
or
or
pop
sub
insl
std
pusha
das
jnp
or
xchg
popa
les
mov
mov
sti
xchg
arpl
sub
in
mov
push
xchg
inc
pusha
clc
aam
dec
aam
dec
or
fidivs
inc
mov
loop
test
addb
cmp
pop
bound
xor
cld
cmp
andb
sbb
subb
push
daa
movsb
aaa
pop
jl
pop
addr16
pop
insb
dec
outsb
in
push
cld
add
int3
xor
mov
pushf
test
xor
jno
ret
loopne
xchg
cmpsl
int
xlat
mov
jae
in
outsb
mov
adc
mov
aam
fsubs
lret
and
insb
adcb
cmp
cld
push
or
ret
pop
dec
test
jl
lods
push
dec
push
lods
cmovae
jge
int3
push
mov
hlt
addb
mov
push
sbb
pop
jne
icebp
cmp
sub
jp
push
jbe
or
cmpsl
fistl
pop
stc
cld
stos
arpl
xor
nop
nop
loop
sub
xor
xor
je
jg
fwait
aas
mov
out
adc
adc
add
jl
adc
jg
out
fldl
stos
bound
jnp
cmp
add
fstl
cmp
shrl
sub
xchg
lds
out
int3
popf
setne
dec
cmp
mov
mov
pop
xchg
dec
mov
imul
push
mov
dec
dec
adc
pop
lods
sbb
push
jle
mov
jge
add
mov
rclb
sub
test
lret
lock
mov
mov
cmp
push
xchg
mov
lahf
or
mov
sub
mov
xchg
xchg
fdivrs
lods
sub
jne
mov
dec
into
sahf
push
sbb
jo
cs
rclb
cmp
iret
cwtl
cmp
xchg
xlat
testb
inc
sub
aad
daa
popf
mov
aam
gs
xchg
test
lods
call
push
stos
pop
mov
add
ret
mov
repnz
mov
mov
pop
jo
pop
xchg
and
mov
add
push
or
xor
stc
inc
in
data16
cmp
fwait
push
jmp
xor
int
push
jnp
cwtl
cwtl
scas
pop
mov
dec
fwait
nop
outsb
fsubrs
sti
scas
loope
adc
xchg
std
inc
mov
pop
push
xor
sbb
cmp
cld
cmpsb
pop
sub
imul
jae
insb
inc
in
ror
loope
and
push
xor
cmpsb
mov
pop
insl
imul
jnp
cmp
xor
lods
packuswb
and
jne
fcomps
cltd
insl
jo
jg
aam
push
cli
inc
cld
dec
cmpsl
das
in
inc
lea
mov
mov
mov
lcall
scas
dec
lods
fs
mov
lods
pop
mov
sbbl
dec
test
cltd
xor
rcrl
lods
inc
mov
lods
std
jle
pop
imul
mov
pop
push
mov
in
loopne
mov
mov
jle
push
push
inc
pop
cmc
js
test
and
jbe
xchg
test
lret
jno
stos
mov
xlat
inc
stos
inc
cwtl
xor
icebp
xor
and
ljmp
dec
mov
das
xlat
dec
int3
xchg
repz
xor
rclb
dec
push
jge
add
add
pop
orl
push
gs
in
push
inc
fs
push
dec
fidivl
mov
out
add
gs
mov
addr16
test
xchg
jle
bound
add
ljmp
mov
adc
gs
lahf
jle
movsw
cmp
roll
out
shr
flds
mov
lea
jno
enter
push
fimull
mov
inc
adcl
sbb
pop
xor
daa
int3
jmp
pop
mov
dec
jo
push
outsl
push
ret
into
inc
fisubrs
lcall
xchg
cmc
sahf
mov
jae
adc
mov
and
sub
mov
dec
jae
scas
mov
push
les
imul
sbb
and
jge
jecxz
cmp
cmp
inc
es
aad
clc
outsb
cld
xchg
neg
scas
in
fdivl
rolb
enter
stos
sbb
jne
cmp
aad
out
imul
sahf
clc
mov
inc
cld
mov
call
inc
shrb
mov
push
std
addr16
push
scas
xchg
sarb
iret
mov
jge
js
xchg
jns
dec
nop
in
dec
ret
ja
out
into
inc
outsl
jno
push
adc
movaps
cltd
adc
and
xchg
lods
jne
add
lret
and
call
int3
jbe
aam
push
out
inc
or
insl
xchg
jle
and
push
cli
mov
aam
add
mov
jge
pop
insb
push
xor
pop
das
push
add
inc
rcl
sti
mov
mov
testl
push
mov
mov
mov
cs
fcompl
ja
insb
sub
cmp
push
or
jle
insl
xchg
jb
inc
rclb
aam
int3
sbb
push
aaa
in
leave
stc
lret
cmp
fsubs
mov
mov
jge
ss
dec
mov
mov
adc
sub
les
fwait
or
dec
std
cmp
lret
arpl
push
les
ss
or
or
js
lock
mov
cmpsb
jae
sbb
sub
adcl
ljmp
pusha
pop
sbbl
xor
mov
negb
inc
xor
dec
mov
call
push
xchg
push
push
sub
adc
push
xchg
sub
jge
pop
sub
xchg
out
mov
inc
mov
push
cmp
mov
roll
xchg
sbb
arpl
add
loop
pop
cli
sbb
xor
or
bswap
sbb
cld
imul
push
lcall
lock
dec
incl
cmpsl
repz
sub
int3
add
in
push
ja
mov
dec
ljmp
sbb
mov
out
xchg
imul
mov
push
fs
xchg
sbb
lcall
pop
shrb
sub
ficomps
jg
lock
lcall
or
cmp
xlat
jg
outsb
jge
mov
aaa
nop
aaa
sbb
loopne
decl
test
sbb
or
out
adc
push
movsb
enter
mov
ret
add
cli
jbe
jmp
rcrl
pop
cmp
cmp
mov
gs
mov
lds
lret
ljmp
sub
pushf
lcall
jg
jo
inc
push
mov
lret
and
pop
mov
sub
mov
adc
sarl
push
sub
dec
xlat
mov
out
mov
or
cmp
mov
pop
add
sub
movsb
mov
call
jp
dec
adc
out
sahf
jne
out
scas
and
cltd
repz
cs
sbb
out
xchg
sub
imul
push
testb
negb
sbb
call
cmp
sbb
inc
mov
pop
arpl
xchg
inc
ret
mov
mov
push
cwtl
fdivl
scas
fcomi
sbb
in
stos
add
sbb
gs
in
adc
pusha
pop
adc
mov
stc
shr
and
cmpl
and
xorb
popf
mov
push
mov
stc
fs
pop
jmp
pop
fistpll
jmp
jmp
adc
mov
jle
mov
pusha
push
jae
lret
out
jbe
inc
test
das
ljmp
subb
add
push
daa
cld
xchg
add
imulb
sbb
xchg
insb
sub
xchg
rorb
fs
cmp
or
gs
mov
push
out
das
mov
fwait
inc
jbe
push
add
mov
fwait
pop
push
rcll
into
fcoms
push
sti
pop
xchg
addr16
or
xchg
pop
sbb
sub
cmpsl
mov
jmp
adc
les
repz
fwait
sbb
ja
xchg
cmp
ss
sbb
stc
push
dec
roll
popf
mov
sbb
js
ds
ss
xor
and
std
pop
test
sbb
ror
sub
mov
pop
push
loop
mov
clc
ret
lds
cwtl
repz
inc
out
xor
or
mov
add
lock
xor
inc
push
ret
dec
pop
test
pop
xor
mov
sbb
test
push
int3
inc
xchg
in
jb
pusha
add
xchg
or
adc
adc
aas
push
jnp
in
lock
addr16
pop
pop
pop
and
sbb
mov
push
ss
in
outsb
adc
mov
mov
aaa
mov
xchg
jnp
add
rcll
fprem
imul
lods
aas
xchg
jl
push
mov
pop
sub
mov
nop
mov
shll
addr16
push
jns
push
adc
push
add
xchg
dec
add
stos
stc
mov
xchg
jo
jge
xchg
pop
xchg
iret
cmp
stc
add
cmp
jl
push
xor
ret
dec
fdiv
test
cmpsb
ret
loopne
pop
adc
xchg
call
aas
inc
lods
popa
mov
cs
xchg
and
cs
arpl
test
sub
mov
pusha
or
adc
shrb
adc
inc
sti
adc
cmp
xchg
xor
repz
cmpsl
insl
push
loopne
int3
pcmpgtw
push
ljmp
pop
jl
nop
sub
sbb
imul
hlt
scas
jnp
test
leave
aam
cmp
inc
mov
fwait
addb
inc
cwtl
xchg
cli
insb
mov
jno
push
addb
add
push
pop
ret
pop
add
or
mov
test
pop
adc
in
mov
dec
jns
pop
int3
mov
and
xchg
xchg
cmp
mov
push
stos
jno
add
xor
pusha
dec
data16
cmp
icebp
scas
psadbw
int
jmp
mov
xor
adc
inc
jp
ret
rclb
out
xchg
loope
mov
mov
cmp
fsubl
shll
mov
mov
fldl2t
loopne
sub
push
sti
out
cmpsb
pop
les
rorb
lods
pop
mov
or
dec
call
or
aad
ret
push
scas
cli
add
adc
cld
add
xor
aam
icebp
outsb
insl
sbb
push
dec
nop
pop
push
cmpb
loope
jge
xchg
and
mov
fstpt
dec
sahf
dec
out
ljmp
cwtl
lret
popf
mov
loopne
cmp
nop
aas
pop
cmpsl
ret
add
pop
jmp
out
jl
nop
ret
adc
mov
sbb
mov
sbb
and
les
fsubl
jbe
jecxz
sub
into
mov
jmp
or
and
xor
orb
call
jnp
fidivl
inc
scas
pop
inc
sub
add
aas
pop
in
push
xchg
push
or
xlat
inc
or
sub
ljmp
stos
scas
fistl
pushf
mov
lock
xor
and
aas
sahf
adc
iret
adc
mov
lds
jmp
ror
in
mov
push
push
add
lea
pop
lock
sbb
test
jns
loopne
mov
mov
cmpsb
in
dec
ficoml
je
fidivrs
lahf
xchg
jbe
push
mov
bound
icebp
push
sub
cmp
jle
or
icebp
cmpsl
imul
jge
jae
movsb
iret
and
cwtl
daa
test
aad
jge
sti
aad
cli
cmpsb
mov
cltd
enter
add
pop
cltd
push
add
mov
mov
push
imul
push
sub
hlt
cltd
data16
jae
cli
in
pop
sahf
leave
inc
in
xchg
inc
cmp
xor
adc
jmp
push
in
cmp
test
in
orps
sbb
sub
adc
cmpsl
mov
repz
cltd
das
data16
dec
push
daa
hlt
mov
mov
aad
imul
jge
fbld
xchg
negb
or
adc
imul
repz
ljmp
gs
push
iret
cmp
or
push
xchg
repnz
add
push
out
jnp
mov
cmc
or
push
cmp
mov
sti
dec
in
out
xor
xlat
movsl
sub
sub
mov
lret
lods
xchg
xchg
int
sarl
bnd
ret
jecxz
jne
call
jns
sbb
cmp
pop
ffreep
roll
test
lret
test
sahf
pop
push
mov
mov
js
fstpl
jmp
adc
add
inc
out
hlt
inc
sbb
cmc
aaa
pushf
jno
cli
pop
jg
mov
in
or
ds
and
outsl
test
fistl
or
iret
aad
inc
mov
push
mov
in
sub
xchg
cmc
in
cld
sub
test
cs
loopne
cmc
jae
outsl
aam
lcall
shlb
add
inc
jmp
add
pushf
fistps
add
pop
mov
in
lods
js
scas
xor
xchg
loope
imulb
mov
mov
pop
inc
rolb
xchg
mov
addr16
xor
push
arpl
pusha
adcl
daa
test
rclb
mov
movsb
scas
sbb
into
mov
bound
and
testl
pop
adc
add
inc
rcl
addr16
adc
das
test
adc
sbb
pop
xchg
lods
lods
notb
flds
cli
dec
hlt
nop
mov
mov
sub
in
dec
in
les
cs
js
mov
xor
or
hlt
mov
sub
sbb
add
fwait
and
mov
movsl
cmp
fisubs
fwait
sub
mov
cmp
push
aas
daa
mov
in
xchg
xchg
xchg
cmp
sub
sub
pop
cs
cs
jge
dec
sub
rcrb
mov
or
jo
sarb
pop
or
push
aaa
lahf
jecxz
inc
xchg
inc
decb
hlt
cs
cltd
mov
inc
jb
pop
fs
and
dec
xchg
pop
jo
sub
and
mov
mov
push
sti
stc
or
add
inc
xor
pop
in
pop
jg
mov
sti
movsb
ret
jne
loop
enter
inc
aam
pop
mov
out
test
and
xchg
jg
pushf
xchg
pop
jg
xor
mov
mov
cmp
sarb
imull
cwtl
arpl
mov
add
js
and
std
lods
cmpsb
inc
sub
in
out
xchg
inc
jg
adc
add
sti
in
lret
and
xor
jmp
cli
ds
je
cmp
imul
neg
xchg
jne
and
adc
xor
rcr
ljmp
int
pop
enter
pop
test
mov
push
mov
mov
adc
ljmp
jb
scas
or
jle
push
jle
nop
pop
loopne
loop
repz
rorb
mov
fildll
pop
andb
jecxz
mov
inc
imul
dec
movsb
sbb
inc
popf
fnop
xor
repz
push
and
sub
imul
std
sbb
out
int
and
addb
test
inc
fdiv
scas
jecxz
mov
jmp
or
movsl
je
mov
dec
outsl
divl
xchg
fdivp
mov
mov
xchg
popa
clc
std
or
jno
xchg
sbb
jmp
lret
pop
sub
mov
mov
das
ror
or
dec
lret
mov
jno
jb
add
shl
xchg
sub
sub
adc
sbb
in
or
jne
pop
jbe
adc
adc
pop
ljmp
jp
lret
mov
stos
sbb
push
je
adc
daa
loop
adc
in
shlb
call
adc
mov
popa
push
dec
dec
fsubrs
mov
adc
push
add
push
xchg
xchg
arpl
jecxz
add
fcomps
sbb
insl
dec
mov
push
repnz
dec
scas
jp
int3
push
sti
push
mov
jbe
jbe
mov
lods
pop
mov
ss
mov
xor
jge
rolb
aad
das
sub
cmc
lock
pop
mov
mov
imul
adc
push
lods
pop
mov
and
sbb
xor
push
cmpsb
jecxz
filds
scas
add
sbb
jg
test
lds
jg
jg
sub
xchg
push
std
orb
xor
xchg
fcomi
and
mov
add
test
mull
mov
aam
mov
and
sub
push
xchg
nop
subl
fs
sbb
shl
aaa
lea
sub
and
decl
add
loopne
push
ficompl
mov
fbstp
cmp
inc
mov
cmp
fldt
xchg
out
popa
pop
dec
or
jg
mov
mov
pop
shl
cmc
jmp
or
push
andl
xlat
in
pop
mov
adc
test
xor
inc
sbb
inc
sbbl
testl
push
mov
pushf
es
adc
aas
jge
mov
ja
and
fsub
adc
cltd
or
in
shll
and
rorl
ja
jne
ficomps
push
mov
pop
fptan
xchg
shlb
dec
cmp
ror
push
mov
inc
pop
test
mov
lods
imul
sarl
fcompl
dec
out
cmp
mov
cmpsb
aad
jle
insl
test
add
out
fcomps
fisubs
jl
mov
pop
sbbb
jnp
adc
jmp
add
mov
imul
jae
les
imul
das
xor
mov
rcrl
xchg
sub
or
mov
inc
arpl
arpl
mov
mov
inc
stos
sub
popa
sub
pop
push
xchg
push
xor
adc
add
test
cmpsb
orb
fstps
shlb
dec
stc
push
jecxz
mov
das
enter
push
negb
add
xor
ds
iret
out
dec
addl
pop
cmp
lea
sub
cwtl
notb
adc
ds
adc
add
pop
pop
dec
lcall
in
xor
mov
addr16
lods
sti
repz
mov
stos
sahf
out
out
cwtl
stos
popf
inc
inc
aaa
jmp
aaa
adc
sub
stos
movsl
incl
fmull
adc
xchg
cli
mov
into
cmpsb
jp
dec
loop
sbb
les
jbe
rorl
mulb
adc
xor
push
add
mov
push
testb
add
mov
jle
add
into
jnp
outsb
lods
pop
pop
jb
call
pop
aam
iret
out
out
stos
add
push
mov
ret
push
cltd
xchg
lahf
imul
pop
imul
es
pushl
loop
add
lahf
shrb
add
push
lea
sbb
mov
inc
les
test
sahf
mov
out
mov
shrl
sub
push
stc
loop
je
mov
adc
stc
ljmp
pop
sbb
adc
fld
cmpsl
pushf
fsts
nop
xor
jg
sarb
push
mov
jp
rcrb
or
sti
mov
add
or
push
push
inc
test
xchg
pop
or
popf
stos
add
aas
out
test
xchg
stc
xor
fbld
or
or
test
adc
scas
cmp
sub
add
leave
inc
xchg
in
js
test
pop
adcl
lret
and
sub
ja
int3
js
push
adc
sahf
inc
enter
cmp
add
jp,pn
mov
cmp
push
hlt
test
test
in
cmp
dec
mov
and
push
sbb
push
and
in
jb
push
scas
pop
in
xchg
ret
enter
lret
daa
outsb
sub
push
jb
xor
xchg
xchg
xlat
pop
icebp
mov
icebp
jmp
call
dec
cmp
or
popf
jae
into
cli
sbbb
daa
movsb
mov
xchg
add
xchg
data16
dec
in
mov
popf
mov
xchg
sbb
insb
cmp
test
insb
push
popf
dec
jne
std
push
adc
push
out
push
push
repz
cs
sub
enterw
cmp
mov
dec
fidivs
aam
jnp
pop
mov
or
and
pop
repnz
scas
in
mov
push
cld
sarb
sbbb
cwtl
sbb
jno
jnp
push
in
adc
sbb
sbb
pop
sbb
sub
lods
push
jg
pop
xchg
lret
in
out
fistpll
mov
cmp
fldt
inc
adc
call
nop
imul
or
insl
lock
test
lret
cmpb
fcoms
push
cmp
cmp
daa
jb
dec
stos
and
mov
mov
leave
scas
mov
lock
add
fidivrs
loop
mov
test
outsb
jmp
pusha
js
fwait
jne
sub
lret
repz
jnp
insl
mov
or
jae
mov
adc
xchg
mov
adc
xor
cwtl
dec
mov
sub
xlat
jle
les
mov
or
adcl
aaa
popa
sbb
call
inc
ds
xchg
f2xm1
jb
pop
lcall
daa
je
pop
jb
bnd
das
in
fiaddl
scas
aad
cltd
mov
or
in
cli
sahf
mov
mov
lds
inc
push
cwtl
psraw
test
mov
lock
popa
inc
mov
push
jp,pt
out
faddl
inc
cmp
adc
mov
sub
cmp
movsb
insb
imul
movsb
pop
dec
and
adc
xor
mov
out
sub
scas
mov
sti
insl
call
mov
cwtl
add
negb
test
clc
push
mov
shll
cmp
jmp
inc
lods
nop
push
sti
out
jb
or
and
adc
nop
cltd
and
push
sbb
mov
sub
mov
clc
mov
xchg
xor
add
add
pushf
push
jns
movsb
push
sbb
ficomps
cmpsb
lock
inc
movsb
inc
pop
push
push
in
jbe
add
inc
pop
push
cmp
aam
int
dec
lods
pop
cld
push
inc
in
mov
in
jnp
mov
fwait
out
mov
sub
out
adc
ror
inc
xchg
mov
fucomp
mov
mov
xchg
shrd
fdivrs
adc
xchg
or
je
cltd
fnstsw
test
popf
in
push
in
adc
and
inc
or
adc
je
je
xchg
rcl
mov
or
movsb
jecxz
push
mov
icebp
pop
lds
xlat
cmp
push
pop
and
leave
icebp
xchg
dec
mov
push
fcmovnu
xchg
mov
inc
rcrl
sub
xchg
wbinvd
ret
fcmovnu
pop
jbe
out
es
xchg
repz
inc
ss
xchg
ljmp
icebp
iret
cmp
sub
xor
mov
fnstcw
cmpsb
loop
outsb
leave
cli
push
pop
push
dec
mov
dec
cli
nop
clc
or
add
addr16
cltd
fbld
inc
fisttpl
lds
test
test
mov
jb
jl
cmp
lcall
add
sarl
std
jmp
fadd
push
push
scas
mov
dec
std
pop
adc
out
inc
mov
sub
pop
gs
cmpsb
push
out
sbb
jmp
pop
ja
mov
xor
jno
cmp
lcall
mov
inc
jns
leave
jp
ret
sbb
xchg
xchg
aam
pop
pop
xor
lea
mov
sub
jae
pushf
xchg
shlb
sbb
stos
push
filds
ljmp
adc
xchg
add
rolb
add
jne
or
dec
lahf
lea
inc
add
sub
mov
jns
xor
lret
shll
popa
mov
stos
add
cmp
cs
gs
mov
gs
jo
pop
std
mov
pop
das
lds
inc
cmp
xorb
xchg
cmpb
mov
cmpsb
push
fcmovb
addr16
add
push
and
push
dec
push
xor
cwtl
mov
rol
mov
lahf
xor
pop
mov
dec
lahf
pop
inc
sti
mov
sub
loop
js
rep
xchg
das
adc
aad
fwait
sub
ja
pop
loope
out
add
out
andb
scas
flds
pop
movsb
push
jge
or
dec
or
or
pop
xchg
repnz
push
lcall
cli
js
sbb
mov
clc
arpl
stos
xor
movsb
mov
and
dec
hlt
jnp
popa
scas
pop
sub
test
imul
fsts
sarb
sbb
push
push
out
jns
inc
or
mov
int
push
pop
push
cwtl
or
sahf
pusha
sbb
and
jg
rcrl
sti
mov
jg
lock
add
inc
xchg
and
push
mov
xchg
sarb
je
sti
inc
fs
sub
push
shrl
cmpsb
mov
xchg
ja
adc
fisubl
cld
js
lret
popf
lret
add
movsb
cs
mov
mov
rcrl
subb
jp
pusha
mov
leave
sbb
mov
and
mov
sbb
aad
cltd
sbb
push
inc
in
adc
and
popa
imul
aas
cltd
push
sub
add
out
clc
pop
xchg
xchg
xchg
xchg
aam
inc
add
ss
xchg
xchg
popl
push
adc
push
orb
cld
ss
xchg
out
lods
xchg
dec
mov
dec
xchg
mov
mov
jnp
loopne
or
or
cmp
lret
sub
stc
push
aad
mov
and
or
xor
mov
fists
push
xor
lret
mov
xorl
mov
push
data16
shlb
ret
lods
mov
add
mov
aam
cld
jae
imul
adc
push
mov
into
mov
jl
push
sub
lahf
fdiv
xchg
pop
cmpsb
lods
jno
mov
pop
scas
stos
mov
rcl
pop
sbb
aam
dec
sub
in
decl
push
or
mov
repz
rcr
imul
xchg
sbb
jbe
andl
jl
push
jns
popf
ja
push
daa
mov
add
xlat
lea
xchg
and
in
mov
in
mov
jp
arpl
shll
hlt
loop
cld
ja
mov
mov
cmpsl
xchg
mov
jmp
fwait
push
or
cld
pop
pushf
cmp
jb
sub
std
push
jecxz
lds
jno
pop
xchg
int
jg
sub
sbb
sahf
ja
ret
xchg
sbbl
imulb
dec
out
fnstsw
mov
inc
std
out
inc
hlt
lcall
mov
adc
imul
sti
jg
jge
pop
notb
cli
or
mov
jmp
in
stos
cmp
mov
mov
dec
sub
xchg
fmulp
lret
arpl
ljmp
repnz
bound
in
pop
inc
inc
gs
push
loopne
xor
adc
and
cmpsl
into
jle
stos
lret
or
in
aas
xchg
fists
pop
cltd
jecxz
inc
stos
mov
jbe
fistl
mov
mov
loopne
cs
adc
movsb
mov
iret
fnsave
jae
dec
cmp
mov
inc
hlt
xor
mov
fsubs
int3
and
aas
lcall
ds
sbb
cmp
dec
pop
cmp
adc
fcoml
jns
imul
jae
in
cmp
test
lock
sbb
cmp
cmp
push
cli
add
and
lret
xor
loopne
push
or
test
rcll
mov
jbe
jbe
stos
pop
or
xor
pusha
mov
jb
arpl
or
mov
jno
push
std
and
leave
inc
stos
mov
lahf
or
pop
sbb
test
lahf
je
xor
push
or
leave
shlb
divb
add
test
xchg
mov
lret
adc
mov
pop
mov
push
insb
dec
fdivrl
cmpsb
inc
xor
dec
mov
inc
push
xlat
jnp
stos
mov
mov
fimull
xor
loope
ljmp
movsb
arpl
jmp
pop
inc
mov
daa
sub
adc
aaa
jnp
leave
imul
and
jp
cmpsl
je
pop
inc
jl
cs
and
fmul
pop
lret
xor
push
dec
sbb
fmull
and
jo
mov
xchg
cmp
imul
ss
mov
push
jne
dec
pop
insl
adc
repnz
sbb
out
popa
aaa
popf
xor
movsl
cmp
loop
push
bound
jbe
arpl
stc
lcall
sub
sbb
sbb
sahf
jo
or
push
dec
out
lds
ljmp
and
pop
dec
sahf
stos
adc
movsl
stos
sub
xlat
adc
sar
bnd
and
jg
pop
jmp
jns
cmp
popf
mov
subl
shrl
scas
daa
pop
inc
adc
insl
call
aad
int
shlb
and
inc
sbbb
rcl
pushf
xorb
bound
ds
dec
out
jp
mov
cmp
and
and
add
ret
imul
pushf
add
les
sub
mov
dec
fidivrl
pop
dec
jg
lret
jae
testb
faddl
push
dec
out
jns
and
push
lock
lock
and
inc
dec
adc
push
mov
push
inc
add
push
xor
add
jb
stos
enter
test
ds
das
lods
orl
sbb
cmpl
or
ret
sahf
out
cmpsl
jl
cld
popf
xor
loop
add
loop
loop
mov
jo
rcr
out
mov
insl
jne
and
sbb
dec
mov
and
loope
out
out
lret
popa
lds
sub
lea
pop
mov
fwait
jns
in
cltd
shrb
divl
scas
pop
gs
add
lods
insl
pop
je
cmp
outsb
or
xlat
xchg
mov
inc
push
sbb
jae
shll
push
xchg
and
imulb
jbe
jle
push
jp,pt
ret
rorl
inc
outsl
pop
cmp
rcll
loope
arpl
cwtl
cmc
fcoms
sub
cmp
pop
xor
mov
dec
pop
jb
mov
mov
push
and
mov
adc
pop
inc
js
enter
clc
xchg
sbb
cmc
dec
ja
fildll
pop
mov
loopne
and
xor
xchg
jno
decb
mov
cmpsb
jp
loopne
nop
inc
pop
sub
sub
jmp
jle
test
std
mov
movsl
mov
lods
mov
enter
pop
pop
and
mov
ret
jp
int
adc
jp
jp
xsha256
cmpsb
adc
inc
adc
rorb
adc
into
jle
cmp
cmp
mov
pop
sti
pop
in
das
xchg
mov
xchg
and
jmp
not
mov
xor
out
add
imul
jmp
pop
pop
push
sbb
inc
cs
ljmp
pop
mov
sub
mov
pop
mov
jne,pn
je
imul
std
sub
and
mov
dec
int
adcl
repz
in
sbb
xchg
adcb
rolb
cmpl
xor
div
xchg
pop
rorb
lret
inc
or
adc
fs
sub
jbe
sub
push
xchg
pop
lahf
hlt
mov
mov
dec
mov
cmp
sub
mov
hlt
leave
cltd
adc
stc
enter
das
cltd
adc
rcrl
test
ds
aaa
test
pop
fs
jb
and
xor
mov
add
insb
xor
orb
lahf
dec
aaa
test
popl
jge
cmp
subl
push
adc
fs
mov
mov
cmp
fnstenv
lock
sub
inc
loopne
fcomps
jl
and
inc
pushf
push
fcompl
cli
mov
or
mov
dec
test
push
fimull
add
and
ss
cmc
pop
jns
mov
mov
fiadds
dec
dec
rorb
jg
and
and
cmp
dec
sti
int
scas
mov
and
mov
rorl
int3
pop
xor
insl
out
fists
movsl
ret
addl
jge
jnp
dec
test
imul
imul
hlt
add
fisttpll
mov
lret
mov
xchg
leave
in
cs
adc
xlat
pop
sub
fistpl
fisttpll
sub
cmp
loopne
inc
lea
push
test
int3
orb
xchg
mov
lock
into
lods
pop
push
sti
shll
jge
jmp
inc
neg
clc
or
mov
and
pop
jns
jge
outsl
popf
cs
or
ja
fisttpll
loope
popf
push
cmp
jg
scas
popf
push
add
lods
and
cli
jmp
sub
lds
nop
daa
repnz
push
insl
and
xchg
in
mov
sbb
mov
in
xlat
rcrl
lret
pop
sbb
mov
lock
jp
or
jne
or
jl
test
int3
pop
in
and
adc
cli
stc
pop
cwtl
pop
inc
jnp
inc
xorb
mov
dec
cli
sbb
dec
cltd
das
pusha
fwait
dec
mov
aas
mov
mov
xlat
lods
dec
dec
sub
mov
fs
iret
movb
dec
in
inc
and
cmp
loopne
and
push
push
inc
add
pop
popf
ja
fildl
inc
clc
sub
out
ret
lahf
lea
mov
std
fiaddl
push
loopne
jnp
stos
into
ret
repnz
pushf
insb
ficoms
fmull
push
cld
jge
out
test
cmp
add
sarb
jl
test
sti
pop
and
ljmp
inc
xchg
es
push
daa
sahf
stc
lea
or
test
cmp
jb
test
cmp
jmp
outsl
in
bound
jae
xchg
xchg
je
mov
stos
insb
xchg
outsb
arpl
lret
inc
dec
aaa
or
jo
pop
push
mov
ljmp
mov
xorb
adc
jns
lock
jl
mov
mov
test
fsubrl
and
gs
loop
jnp
pop
mov
xchg
add
out
fidivs
xor
mov
test
push
es
out
rcrb
mov
pop
jmp
cld
dec
xlat
iret
add
and
or
mov
ffree
lret
cltd
jle
addr16
fisttps
mov
sbb
int
insb
sub
dec
mov
mov
mov
jb
pop
mov
je
and
out
cwtl
cmpsb
in
adc
jecxz
jne
pop
push
sub
imul
jo
jbe
repz
loopne
mov
push
les
js
shlb
lds
je
fsubl
das
int3
ret
mov
out
inc
jg
dec
fwait
int3
ds
es
push
pop
jl
sub
ds
int3
push
inc
test
movsl
mov
fcompl
scas
push
dec
add
add
outsl
and
xchg
out
add
fwait
cmp
inc
pushf
xchg
add
xchg
sarb
ja
pop
inc
sti
push
cmp
mov
push
outsl
das
add
sub
stos
out
dec
aad
push
adc
fisubrs
pop
xor
scas
cmp
mov
pop
dec
mov
jb
aad
and
gs
pushl
fisubs
insb
ret
lods
aaa
cmp
add
dec
mov
adc
neg
fcoml
sbb
push
pop
pop
and
and
out
inc
add
fwait
xor
cmpsb
mov
dec
fisubl
pop
adc
fbstp
lods
jge
and
add
std
iret
pop
scas
adc
or
cltd
jno
sbb
jp
jle
and
hlt
cmp
jns
sub
es
xor
fildl
cmp
jb
hlt
in
xchg
shlb
leave
sbbb
fmulp
daa
mov
push
push
pop
cltd
pop
in
add
in
aaa
rolb
outsl
ds
xorl
jg
inc
mov
lret
cmp
inc
mov
sub
jbe
in
jnp
clc
inc
test
add
and
imul
mov
mov
or
mov
fucompp
test
adc
cmp
outsl
sub
lahf
mov
and
push
and
xorl
adc
xchg
or
aaa
in
inc
xchg
xor
fadd
add
or
dec
lret
out
push
sbb
jnp
xchg
popa
mov
pusha
aaa
cmp
cmp
test
movsb
mov
loopne
inc
out
adc
nop
in
leave
xchg
rclb
jne
bound
lret
into
adc
mov
flds
cmc
call
sbb
adc
lods
insb
or
insb
test
pop
xchg
pop
test
fsubr
adc
jne
inc
in
aad
sub
xchg
jae
lahf
mov
pop
ljmp
fdivp
cwtl
xchg
shr
aam
pusha
gs
int3
dec
lods
xchg
es
adc
pop
out
mov
in
add
mov
ss
outsb
xor
lret
push
daa
cmp
sub
popa
js
int
sahf
outsl
out
ja
ret
ret
mov
ljmp
rclb
push
mov
inc
filds
mov
ss
mov
or
out
mov
sahf
outsb
dec
and
and
sbb
mov
lea
add
cmpsb
add
shl
in
mov
filds
inc
sahf
pop
out
sub
jo
pop
lcall
popf
push
xlat
mov
add
sbb
std
and
jae
mov
mov
into
jns
cltd
pop
cmp
icebp
movsb
lods
incl
jmp
push
jp
icebp
jb
arpl
mov
fists
dec
and
push
fiadds
test
mov
xchg
jmp
jnp
xchg
imul
adc
and
dec
gs
es
mov
testl
jge
and
push
pop
adc
mov
js
or
adc
in
and
pop
rclb
xchg
lahf
jp
or
sbb
ja
push
adc
stos
roll
xchg
clc
jo
cmpsb
mov
imul
repnz
loope
in
adc
mov
je
jnp
rorl
pop
xchg
jne
ret
xorl
fcmovb
rcrb
or
push
cmp
xchg
jns
mov
fnsave
jne
push
shrb
fsubp
rclb
cmp
fcomp
jae
aas
jo
inc
xchg
mov
call
cli
mov
dec
pop
xor
xchg
xor
adc
mov
lret
xlat
scas
xchg
inc
mov
lcall
pop
inc
imul
adc
sarb
sbb
fwait
jb
cli
aam
loopne
movsl
fcmove
jae
pop
stos
add
fildl
adc
fidivrs
mov
int
pop
sbb
addb
or
inc
cmp
aas
mov
adc
inc
js
popa
clc
mov
cs
imul
int3
sub
ficompl
sarl
enter
fdivrl
ljmp
jae
add
int
fsts
xchg
hlt
enter
jmp
pushf
fwait
sub
out
es
dec
push
fldcw
push
aam
xchg
mov
mov
xchg
shll
mov
into
add
and
ret
mov
orl
adc
fwait
repz
jp
repz
lea
dec
push
hlt
or
movsb
jae
add
pop
dec
addl
mov
mov
jno
sub
sbb
mov
cltd
addr16
inc
cmp
in
push
shlb
fnsave
test
clc
inc
sti
call
shll
push
ss
nop
mov
dec
jno
fwait
or
inc
adc
jnp
mov
adc
push
xchg
inc
out
nop
inc
enter
flds
lret
test
lods
and
dec
arpl
mov
ds
sbb
sbb
mov
std
lods
ret
pusha
mov
hlt
into
pusha
and
sti
adc
stc
je
and
call
and
jg
dec
ja
or
ljmp
mov
fsubp
daa
inc
and
xchg
shll
ud0
add
imul
jno
push
pop
mov
jns
loopne
imul
fs
cli
cltd
sub
pop
mov
push
push
cmp
stos
lcall
cmc
push
pop
jb
pop
xchg
xchg
orl
sub
dec
aas
in
cmp
sub
icebp
adc
stos
sahf
popa
ret
dec
jne
xor
mov
push
leave
mov
shlb
mov
dec
sub
mov
xchg
push
popf
mov
xlat
in
int
push
popf
loopne
sub
dec
outsl
mov
insb
call
sub
idivb
fsubrs
sbb
xchg
int
mov
xor
mov
mov
push
iret
bound
shl
lea
adc
inc
int3
pop
jle
jl
in
outsb
xchg
les
int3
int3
sahf
jb
js
xchg
movsl
lret
sbb
xchg
gs
dec
nop
and
jnp
xchg
sub
inc
sub
sub
adc
push
push
push
fldl2t
enter
xchg
cld
jae
and
mov
notl
ret
hlt
aam
cmpsl
rcll
inc
mov
xor
xchg
jle
sbb
inc
mov
fwait
ljmp
xor
sbb
inc
lea
sub
and
js
push
pop
rorl
lock
mulb
jmp
into
bound
sbb
push
repz
xor
or
cmpsl
out
mov
inc
out
shl
mov
int
js
and
push
in
movsl
lret
inc
mov
xor
fstpl
iret
out
mov
xchg
aam
mov
xlat
cwtl
or
jmp
mov
int3
dec
insb
xchg
mov
popf
pop
or
int
push
loopne
dec
stos
mov
outsb
lea
popf
or
outsl
mov
stc
cmp
fidivs
inc
mov
sub
imul
es
mov
test
or
mov
insb
sbb
dec
fsubl
fcmovnu
sti
mov
push
cmp
mov
xchg
inc
xchg
mov
in
jp
mov
xchg
rol
in
add
mov
cmc
and
jae
xchg
pop
or
xchg
je
in
mov
pop
xchg
test
jg
push
pop
repnz
push
mov
addr16
dec
xchg
mov
fdivs
and
xor
loop
xchg
subl
and
sbb
aad
icebp
xor
xor
orl
xchg
das
outsl
adc
mov
pusha
scas
cmp
push
dec
fs
out
push
mov
arpl
incl
push
pushf
dec
imul
push
and
xor
mov
pop
cmp
sbb
xor
mov
xlat
or
lea
push
xchg
xchg
jg
sub
scas
fldenv
push
fiaddl
inc
jns
sti
leave
jae
fnstsw
jae
fiadds
loope
jl
shlb
les
ja
dec
sbb
out
out
mov
xchg
xor
sbb
aam
pop
mov
ret
xchg
sbb
mov
std
inc
adc
cmp
test
mov
cmp
and
dec
cltd
cmp
mov
mov
das
dec
pop
mov
xchg
sbb
das
lods
mov
cmp
push
repnz
cmp
mov
jmp
bound
xlat
cmp
ret
pop
mov
dec
shll
lods
loopne
jl
mov
jnp
mov
cltd
pushf
xchg
fdivl
dec
inc
add
sub
push
out
cs
push
jnp
in
popf
sub
insl
inc
stos
adc
mov
ret
dec
push
lods
mov
mov
lods
jecxz
add
pop
lds
cmp
ljmp
sub
cwtl
test
fisttpl
mov
cmp
imul
inc
dec
jmp
sbb
xchg
cmpsb
test
pushf
call
inc
sub
mov
mov
adc
aaa
mov
xchg
dec
and
jb
sbbb
sub
sub
scas
arpl
mov
or
mov
fdiv
stos
add
movb
mov
imul
mov
and
mov
nop
push
push
and
add
dec
jg
psubsb
ja
je
xchg
inc
cmc
jge
lahf
dec
sub
xchg
subb
mov
and
ja
xlat
xchg
add
fldenv
int
sbb
test
and
js
and
arpl
daa
add
int
sbb
sub
dec
mov
sbb
or
lret
call
fldt
lret
in
or
jp
add
sahf
sbb
repz
lock
mov
out
jge
jno
shrb
mov
in
cmp
popa
mov
xchg
out
inc
mov
outsb
pop
shlb
daa
bound
mov
ss
lock
jb
dec
rcll
shl
and
push
icebp
pop
xor
ret
and
mov
and
addr16
adcl
iret
mov
ror
mov
jae
sub
add
dec
cmp
in
sbbb
pop
repz
sbb
inc
je
lods
mov
imul
je
xchg
stos
xchg
jne
sbb
xor
push
inc
adc
sbb
out
imul
in
xchg
jne
dec
cltd
sub
call
rolb
push
out
jecxz
push
jp
fldl
pop
insb
lock
lods
xchg
icebp
test
ljmp
xchg
cmpsb
popl
adc
push
push
ret
inc
test
dec
adc
add
push
dec
adc
lret
stos
dec
dec
enter
mov
call
stos
jne
dec
adc
icebp
xchg
sbb
xchg
mov
push
aas
push
mov
jbe
fdivl
mov
cwtl
push
push
or
push
mov
and
imulb
jnp
mov
lods
jg
cmc
sbb
inc
sbb
cmp
mov
rorl
call
shrb
mov
int3
incl
xchg
mov
les
jo
cwtl
lods
adc
push
cld
add
push
stos
or
jl
sahf
cmp
pusha
lods
stos
fadds
xchg
fucomip
and
jmp
aaa
and
sbb
into
sbb
clc
fdivrs
or
push
movsb
push
arpl
xlat
test
jbe
jns
cmc
std
test
inc
rcl
mov
repz
push
nop
ret
idivl
sbb
sub
cld
pop
leave
add
mov
out
cwtl
jne
lcall
call
jo
fwait
or
sub
daa
mov
xchg
aas
dec
out
ljmp
sahf
nop
add
mov
movsb
cmpb
cltd
xchg
shl
xchg
pop
test
cmp
outsl
repz
push
push
add
mov
pop
pop
pop
and
loop
mov
inc
andps
outsl
or
aas
dec
lcall
add
xor
inc
mov
icebp
mov
mov
jb
sbb
pop
pusha
int
adcl
jle
xor
arpl
mov
pop
push
mov
mov
ja
dec
outsl
stos
or
lods
mov
aas
dec
loopne
sub
imul
jns
cmc
pop
scas
repnz
cmpsl
add
cltd
cmpsl
test
jle
sbb
popa
sbb
loope
inc
loop
mov
xor
rcr
aaa
xorb
inc
out
mov
pushf
pop
adc
aad
mov
mov
cwtl
sbb
jno
and
sub
out
push
stos
jecxz
adc
sahf
push
cwtl
mov
mov
cli
push
hlt
jg
push
push
mov
mov
jle
adc
mov
pop
jge
jl
repz
jne
xor
jb
cmp
mov
movsl
cltd
xor
in
xchg
adc
or
cmp
fnstsw
test
lret
push
xor
lock
mov
inc
push
add
jmp
adc
sbb
mov
fwait
enter
mov
dec
push
roll
bound
push
mov
ffreep
sarb
jmp
shlb
jecxz
out
rclb
push
jae
sub
stos
test
add
cmpsb
adc
sahf
pop
mov
sub
dec
jns
in
push
or
jle
push
loop
mov
mov
into
repz
xor
add
xchg
push
mov
es
ret
sar
arpl
stos
sbb
push
fbld
lds
test
mov
daa
dec
into
icebp
push
add
adc
cmp
xorl
jne
sbb
leave
cmpsb
sahf
imul
lret
mov
hlt
cmp
mov
mov
imul
rcrl
xchg
fs
fsts
imul
imul
mov
lods
jne
hlt
push
sahf
iret
int3
mov
push
pop
jnp
xor
jl
std
xchg
bound
hlt
pop
arpl
add
es
stos
sub
mov
adc
movsb
rcrl
sub
push
dec
jno
pop
xlat
int3
shrb
outsb
lcall
inc
lods
push
sbbb
cmp
and
prefetcht1
xorl
xchg
add
rcrb
lea
imul
lods
test
or
jl
scas
movl
cwtl
cli
daa
add
or
es
js
jp
fnstenv
xchg
jne
mov
addr16
das
or
addr16
push
dec
mov
mov
cwtl
aaa
testb
pushf
js
sarl
mov
xor
fwait
jecxz
mov
add
cltd
cmp
int3
fidivrs
mov
push
aad
adc
loopne,pt
aas
add
rclb
push
add
loopne
jg
mov
pop
mov
in
mov
mov
inc
and
pusha
and
in
hlt
pop
jle
ja
test
sub
out
test
sbb
sbb
out
mov
sbb
repz
out
sbb
xor
push
adc
pop
stos
cld
scas
mov
aaa
push
sbb
sub
je
sub
or
mov
jb
add
fsubr
push
out
mov
test
add
int3
fistl
xchg
addr16
subb
jbe
fisubrs
jae
testb
xor
cs
mov
lret
imull
ret
jnp
les
mov
fcomps
das
lods
dec
mov
adcl
mov
or
fdivp
bound
lods
cmpsb
hlt
xor
sub
pop
xorl
cmp
mov
ret
and
jp
mov
ljmp
jo
jno
iret
pop
int3
in
outsb
push
ljmp
mov
daa
js
push
fwait
lds
push
cmc
jno
aad
push
fisttpl
or
cmp
mov
fdivl
loop
repz
jp
sub
push
sub
mov
add
sub
sbb
hlt
pop
cmpsb
fidivrs
mov
fptan
mov
or
xchg
jb
pop
test
sbb
hlt
std
stos
in
mov
fstl
jno
cmp
push
das
lods
and
fsubl
out
lea
pop
sub
bnd
mov
jl
adc
push
popf
rcll
and
push
pop
sbb
fimuls
dec
imul
jp
ja
add
xor
mov
sub
xchg
fdivr
lock
inc
clc
mov
xchg
sub
scas
stc
sbb
pusha
ret
adc
mov
add
xchg
xchg
xchg
inc
jp
mov
int
mov
lahf
data16
adc
xlat
push
fmull
mov
icebp
sub
inc
std
fcmovnbe
or
ja
ja
xchg
sub
mov
cmc
xlat
mov
gs
jmp
sub
xchg
andps
add
iret
insl
mov
xchg
popf
rol
roll
addl
loopne
xor
push
jg
xchg
sbb
ret
sub
dec
fildll
nop
gs
sahf
loop
fisttpl
jle
movsb
pop
xchg
das
ret
daa
aas
pop
sub
push
in
sbb
ret
outsl
push
pop
stc
pop
ret
mov
push
mov
popl
std
imul
xor
inc
dec
mov
cmp
pop
sbb
jle
xchg
ret
adc
aaa
mov
addb
inc
xchg
sbb
or
mov
js
cltd
rcll
cmp
xor
stos
mov
ljmp
fidivl
stos
pop
pop
cmp
sub
out
lcall
js
mov
jns
arpl
ss
mov
or
cmp
pop
test
xchg
mov
inc
and
fs
dec
xor
sub
jle
xor
inc
pop
sahf
lds
hlt
dec
and
cmpsl
lds
push
das
shll
pop
and
nop
enter
or
popl
sbb
sbb
add
sbb
push
fiaddl
pop
cmc
xlat
imul
nop
mov
adc
in
xchg
and
jmp
inc
xchg
out
mov
xor
loope
pusha
test
cmp
and
pop
xor
outsb
call
jge
xchg
or
rorb
adcb
mov
or
fwait
lcall
jmp
pop
jle
pusha
stc
fmull
or
adc
in
pushf
cld
push
fcompl
jge
arpl
mov
xchg
adc
adc
or
mov
xorb
ss
and
mov
or
subl
testl
xor
sahf
or
and
test
pop
pop
cwtl
es
mov
jo
push
and
in
stos
mov
out
add
add
and
in
int
cmpsb
add
adc
fcom
inc
data16
add
and
sub
jae
dec
hlt
lds
push
jo
fcmovnbe
sahf
mov
cs
mov
push
int3
mov
cmpsb
mov
mov
shrl
repnz
nop
and
insb
jo
push
mov
in
jecxz
enter
inc
rolb
into
pop
enter
sub
popa
test
cmp
inc
out
xor
cmc
and
out
jae
mov
mov
add
fmuls
jmp
dec
inc
lahf
and
sbb
loope
rcrl
adc
sub
pop
out
stos
or
divb
insb
inc
sub
inc
inc
push
rcr
cmpsb
aad
xchg
adc
pop
xorb
and
pop
hlt
add
adc
push
xchg
cmp
push
int
jge
pusha
fwait
in
cmp
clc
jecxz
jge
test
xchg
mov
and
cmp
mov
loop
repnz
sbb
xchg
push
xchg
mov
push
inc
xchg
or
inc
lds
push
xchg
push
stc
outsl
pop
ret
sbb
nop
cmpsl
fidivs
fs
repz
xchg
loope
mov
stos
cmp
test
and
inc
sbb
jp
lods
jp
pop
xorb
mov
add
shlb
aam
fistpll
push
lea
sbb
adc
jg
inc
loope
jecxz
and
xchg
aad
add
ss
xor
ja
mov
loopne
mov
lock
push
push
out
call
std
cmpl
push
les
pusha
push
lret
mov
movb
xor
dec
cmc
sbb
lods
xor
push
jo
shll
lahf
stos
mov
mov
mov
inc
repz
push
clc
das
or
sub
popf
inc
lods
pop
gs
mov
aas
addb
xor
dec
lods
pop
jno,pt
xchg
or
insb
dec
pop
icebp
push
pop
lds
inc
jl
addl
cmp
mov
cmpsb
xor
pop
xchg
dec
jecxz
push
in
mov
cs
pop
negb
int
shll
xchg
inc
push
imul
mov
mov
ret
jae
cmp
data16
or
mov
adc
rcr
js
sub
mov
je
lods
fisttps
jmp
ficoml
das
pop
aam
mov
push
cltd
or
xor
test
xor
jg
fs
mov
idiv
dec
aam
pop
mov
jno
fistps
outsb
sbb
ret
mov
or
outsb
mov
loop
cmp
popa
stos
fcoml
rorl
mov
push
mov
das
frstor
or
sbb
cmp
lods
adc
and
out
jno
xchg
inc
xchg
movsb
push
pop
xchg
jae
out
dec
xchg
loopne
sub
loopne
les
adc
adcl
cmpsb
mov
loopne
mov
push
fnstenv
sbb
pusha
addr16
mov
popf
mov
daa
cmp
pusha
fimull
push
or
ds
or
add
push
dec
xor
dec
xor
xor
mov
or
push
or
mov
pop
xchg
fcmovnb
stc
mov
stos
call
into
mov
decb
int3
xchg
fsub
imul
orb
sahf
jne
push
pop
and
clc
push
lods
pop
aam
stos
pop
mov
push
movnti
fstps
mov
add
inc
mov
sub
js
mov
lahf
dec
jge
leave
cmp
mov
add
fs
imul
xchg
add
iret
test
sti
push
int3
jo
add
jae
mov
jl
jmp
inc
call
jg
imul
push
bound
inc
dec
mov
fcoml
adc
movsl
dec
mov
popf
imul
mov
filds
adc
inc
cmpsb
repnz
ljmp
in
sub
adc
into
or
loop
test
cmpsb
sbb
cld
jno
insl
add
xlat
daa
mov
fnstsw
xlat
pop
cmc
mulb
cli
mov
xchg
sbb
or
js
cli
out
punpcklbw
repz
das
cmpsb
ret
xor
xchg
xor
push
pop
lret
sub
test
mov
pop
xor
pop
pop
sbbl
xor
xor
pop
fwait
call
adc
xchg
pop
dec
cld
pushf
rclb
xor
xchg
subb
das
ja
rorb
sbb
mov
add
imul
mov
jp
mov
ret
mov
pop
xchg
xlat
bound
lret
flds
test
sub
inc
clc
mov
lds
xor
sysenter
lcall
cmp
mov
cmp
fcoms
add
sbb
sbb
xor
call
popf
test
sub
mov
mov
int
aas
bound
lds
sub
xchg
xchg
sbbb
push
lods
fwait
or
mov
mov
mov
in
rol
out
mov
xor
ds
xor
lock
cwtl
adc
insb
cmp
dec
pop
pmaxub
call
pop
ja
sub
es
sbb
push
lods
push
ret
add
sub
add
mov
mov
inc
js
adc
mov
inc
adc
sahf
fistpl
sahf
popa
push
jle
xchg
jg
xor
in
faddp
push
dec
mov
pushw
push
popa
insl
es
in
inc
loop
adc
aad
pop
ret
dec
and
aas
jb
mov
inc
in
push
push
add
lds
ss
push
mov
fmull
sub
loope
jmp
sbb
pop
xchg
lock
lea
xor
mov
sbb
adc
pusha
cli
lret
sbbb
nop
or
sub
test
rcll
jle
pop
ret
sar
push
xlat
je
imul
push
insl
jns
cmp
shll
mov
push
arpl
cmc
arpl
lods
icebp
sbb
mov
cwtl
sbb
sub
fidivl
fiaddl
push
popa
pop
je
scas
pop
and
mov
xchg
shrb
stos
vxorps
cwtl
sarb
or
rolb
sub
jg
js
imul
insb
jge
loopne
pop
mov
repnz
push
or
xchg
jb
or
add
sbb
jns
rcrl
pushf
sahf
fwait
xchg
sub
push
pop
push
adc
and
push
rolb
dec
je
mov
add
movsb
cmc
lock
out
xchg
mov
into
decb
sbb
loopne
mov
push
ret
jl
and
inc
movsl
stc
bound
cmp
out
xlat
stc
daa
fimull
jo
add
daa
push
mov
xor
arpl
cmpl
inc
or
jmp
add
into
cld
sub
cwtl
push
push
pop
daa
mov
dec
mov
add
sbb
leave
jne
std
sbb
adc
mov
sub
push
adc
fbstp
sub
push
lea
iret
xchg
mov
push
push
testl
in
jmp
push
inc
call
push
fidivrl
fmull
mull
and
ret
imul
sub
add
jne
aaa
dec
fwait
cli
add
sti
mov
or
add
out
fidivl
jl
mov
cld
popf
adc
subl
es
jg
mov
fnstcw
mov
add
cltd
sbb
fidivs
mov
shll
jle
jecxz
dec
cmp
adc
les
loope
and
daa
inc
inc
mov
lods
or
nop
loopne
dec
out
mov
jnp
mov
pushf
xchg
cld
pop
pop
mov
mov
inc
cmp
movsb
jl
icebp
mov
push
and
movl
imul
pop
mov
and
fmul
push
lret
mov
loope
enter
xchg
lahf
psrld
loop
add
mov
into
lcall
loop
mov
dec
test
repz
jo
mov
and
fstpt
jbe
inc
cmpsl
xchg
xor
adc
and
adc
test
mov
pop
test
pop
scas
fistl
lds
fcomps
inc
popa
add
mov
mov
pushf
test
pop
lret
das
bound
clc
mov
mov
stos
xchg
out
nop
xor
push
movsb
mov
fimull
pop
lods
fwait
xor
mov
rcr
cmpsb
fldt
inc
mov
inc
sub
mov
in
leave
mov
xor
sti
movb
and
repz
movsb
cmp
add
and
cmpsb
enter
cmpl
adc
adc
jb
xor
push
sbbl
call
decl
sub
daa
stc
adc
repnz
mov
xor
pop
ret
and
and
subl
out
xchg
cmp
inc
scas
cmpsl
es
mov
pushf
inc
sbb
sbb
loopne
xchg
inc
js
sbb
jmp
sbbl
pusha
push
xchg
movsb
mov
out
arpl
je
stos
mov
andb
push
mov
inc
bound
add
xor
daa
xchg
xchg
or
sbb
lods
xor
push
add
mov
ja
push
hlt
stos
shrb
insl
mov
push
cmp
fdivrl
ds
push
or
pop
adc
pop
adc
adc
or
push
iret
mov
lods
call
in
pop
sub
mov
aam
lret
rorb
cmp
gs
adc
andl
sbb
mov
xchg
loop,pt
xchg
or
pushf
or
jge
or
sbb
cwtl
cltd
mov
push
stc
insb
movl
and
adc
mov
fcmovbe
dec
fwait
nop
arpl
sub
lea
fdivrs
aaa
popa
call
inc
jge
push
xchg
clc
std
xor
dec
xchg
je
xchg
sub
shrl
ss
sub
mov
es
iret
cmp
inc
mov
mov
hlt
dec
xor
scas
cmp
rorl
or
pop
push
in
sub
lret
xchg
or
in
sub
std
dec
mov
faddp
fs
dec
xchg
sbb
pop
or
adc
sbb
inc
xchg
jge
sti
xchg
das
imul
mov
in
andb
rclb
fwait
lea
lds
subl
xor
pop
inc
adc
in
xchg
out
loope
or
js
lcall
rol
cmpsb
xor
inc
or
ds
mov
sbb
daa
sub
cltd
xor
jle
mov
mov
lock
test
push
ret
aaa
and
pop
fstps
fistl
lds
icebp
cltd
mov
ja
movsb
xor
outsl
ret
jbe
sbb
hlt
out
cmp
hlt
xor
mov
lods
shlb
mov
add
ret
js
push
data16
add
dec
cwtl
or
hlt
jp
and
iret
xor
jnp
and
outsb
mov
push
jmp
aam
sub
mov
mov
pop
out
add
fdivl
push
and
sub
adc
roll
xchg
arpl
sub
add
pop
fdivrl
in
mov
adc
sbb
push
or
pop
jb
sub
mov
dec
inc
pushf
cld
test
sub
fbld
push
rorl
dec
push
xorb
fdivp
mov
cld
push
mov
outsb
fstps
cmp
test
iret
mov
jp
jecxz
data16
mov
inc
mov
pop
in
cmp
adc
cli
scas
sbbl
inc
subl
adc
mov
in
xor
inc
mov
mov
mov
dec
inc
pop
popa
cmpsb
in
push
or
insl
xchg
adc
adc
add
nop
push
out
mov
aam
fnstcw
mov
xchg
dec
push
xor
loop
fidivrl
movsb
and
push
in
mov
clc
xchg
pusha
xchg
dec
fists
fnstsw
sbb
jno
xor
add
push
sub
and
mov
xchg
mov
stc
lcall
int3
xor
fldt
sub
jne
or
insl
sbb
jge
fisttpll
scas
fsub
mov
in
mov
shl
cmpsl
adc
std
xchg
stos
mov
subb
jns
lea
jecxz
adc
call
hlt
push
sub
mov
adc
lods
push
shll
fadd
jmp
ret
nop
mov
inc
mov
aad
jmp
pop
mov
loop
pop
cli
push
adcb
ret
adc
cmp
lods
das
and
insl
mov
mov
pop
orl
daa
cmpl
sub
ret
xchg
arpl
into
push
cmp
mov
inc
jbe
mov
cs
and
mov
test
pop
imul
imul
pushf
insb
imul
call
pop
jecxz
cmpsl
push
ja
test
in
and
ret
sub
jg
stc
pandn
nop
lret
icebp
mov
push
test
insl
fiaddl
xchg
xor
pop
stos
dec
aad
mov
aas
xor
das
xchg
dec
xchg
jbe
fcmovne
popa
repnz
or
xor
xchg
int3
jb
imul
xchg
add
mov
popf
pop
mov
cwtl
cmpsb
sub
nop
mov
cmp
jg
lods
js
cmpsl
jl
add
test
and
jbe
icebp
ret
sub
cltd
insb
lret
unpcklps
and
lock
jp
call
and
adc
add
pop
inc
xchg
or
mov
pop
lods
jmp
aaa
mov
js
popa
test
jnp
mov
push
jae
xorb
mov
mov
sub
mov
xor
hlt
scas
sbb
xchg
add
or
push
inc
jmp
pushf
mov
ret
pop
into
cmc
cmpsl
sub
xchg
das
sti
jno
fistpll
out
jb
xchg
ds
xlat
xchg
popf
sahf
and
mov
push
xor
add
ret
xor
clc
push
lock
mov
mov
negl
jp
dec
push
push
fdivs
jge
inc
dec
cld
sub
fwait
pop
dec
cs
popf
and
dec
ror
outsl
inc
mov
mov
dec
or
cld
xchg
xor
ja
add
sub
pop
lret
das
lock
jmp
sbb
mov
out
push
push
mov
xchg
clc
xchg
ds
out
shrb
pop
mov
ds
jl
adc
js
test
mov
push
or
xchg
fcomps
cmp
mov
cmpsl
popf
arpl
inc
xor
cmp
jb
ja
sahf
loopne
insl
mov
outsb
adc
dec
ss
popa
dec
int3
rcr
push
or
mov
mov
imul
jb
dec
mov
mov
jl
dec
adc
lods
add
scas
out
push
adc
sahf
mov
std
mov
mov
loop
sub
fcomp
add
adc
loop
nop
and
mov
daa
repnz
xchg
add
adc
and
fisubl
popa
leave
addb
mov
popa
sub
sahf
shlb
mov
out
scas
xchg
fsubs
xlat
xchg
test
xor
mov
cmp
popa
mov
inc
pop
adcl
push
lods
jns
or
push
pop
testl
cmp
iret
dec
mov
push
jmp
add
jbe
pop
dec
scas
lahf
imul
xorb
sub
and
movsl
mov
js
rcl
out
and
fiaddl
repnz
add
loope
cmp
test
mov
mov
and
maxps
xchg
jmp
out
sbb
push
pusha
in
pop
clc
sbb
sti
stos
daa
jecxz
mov
aaa
daa
and
out
out
push
xor
mov
data16
inc
ds
add
mov
lret
push
rorl
sbb
loopne
push
shrb
adc
fists
fldt
inc
mov
jo
or
pop
sbb
aam
andb
sub
lahf
cmp
add
test
or
mov
dec
shll
xor
lret
dec
sarb
mov
daa
and
aad
xor
cmp
fcomi
jg
fldl2t
les
xchg
dec
xchg
jo
imul
inc
mov
xlat
or
cmp
lea
repz
rolb
pop
sbb
sbb
pop
popw
cmp
arpl
divl
pop
negb
cmc
pusha
je
jecxz
sbb
rcrb
inc
fidivrs
repnz
and
jle
cmc
push
jns
arpl
pusha
dec
xchg
dec
pop
lds
decl
pop
jmp
xchg
cli
jne
cs
pop
test
sub
or
sbb
pop
imul
push
push
xor
mov
enter
sbb
jne
jmp
out
aad
cmc
aad
pusha
pusha
cmp
pusha
shll
lods
call
aaa
mov
das
popf
and
leave
push
push
push
xor
sbb
int3
arpl
inc
nop
mov
pop
mov
cmp
rolb
mov
pop
inc
mov
or
or
sti
and
sbb
neg
pop
enter
outsl
shlb
sarl
sbb
dec
pop
sahf
icebp
outsb
repz
andl
fidivs
out
sub
inc
push
out
ret
call
scas
in
enter
xchg
cmpsb
push
add
int3
scas
fildl
sbb
repnz
cmp
fbld
cmpsb
pop
enter
or
test
mov
add
pop
mov
stos
fldcw
xchg
sarb
popf
rol
xor
jne
sub
dec
cmp
sbb
call
out
aam
xor
movsl
sub
sbb
fwait
pop
pop
enter
mov
inc
push
xchg
sbb
dec
loop
in
push
push
mull
xchg
ja
rorb
pop
xlat
jl
daa
xchg
mov
mov
push
cs
sbb
rol
pop
stos
mov
cmp
subl
rol
dec
roll
imul
pop
lea
and
adc
outsb
enter
loopne
fistps
cmp
xlat
loopne
push
xor
loope
jb
ret
mov
insl
addr16
xchg
push
adc
ljmp
bound
push
ret
sbb
add
xchg
jg
in
shlb
mov
push
mov
rol
push
aaa
popf
call
addr16
scas
test
push
jae
add
andb
cmp
push
mov
subl
mov
cmp
sub
addb
pusha
ljmp
fstps
xchg
sahf
aad
cmp
movsb
and
popa
rorl
pushf
aaa
test
add
sbb
popf
int3
xchg
sub
fadds
rorb
lds
enter
push
push
ret
xchg
lods
mov
cmpsb
insw
lods
dec
jo
pop
or
lea
aam
ja
aam
int3
push
cmpsb
pop
arpl
sbb
popf
out
test
popf
sub
cmp
add
sub
movsl
or
nop
and
jg
xchg
mov
sbb
pop
push
push
in
sbbb
push
inc
lods
jmp
pop
fadd
pop
mov
mov
mov
xchg
or
lods
cmp
jmp
es
cli
or
push
mov
lods
xor
stos
jmp
loopne
mov
push
jne
divb
scas
mov
adc
int
xchg
mov
or
popa
push
out
vmovddup
xchg
pop
jnp
lea
test
mov
add
xchg
sub
cmp
in
pop
sub
sbb
cmp
or
iret
out
fidivl
pop
add
ret
push
mov
xchg
mov
pop
and
xchg
adc
das
mov
xchg
pushf
adcb
lret
cmp
mov
dec
and
hlt
add
push
jge
add
sbb
and
jmp
aam
cli
sub
aam
loop
call
cs
mov
mov
sbb
jge
push
outsl
pushw
push
inc
add
sahf
xchg
mov
mov
fisubl
or
xchg
clc
aam
push
push
outsb
bound
sbb
and
call
ss
cmc
sbb
adcl
inc
jae
cmpsb
or
mov
loopne
jp
daa
mov
mov
jns
mov
xor
inc
dec
shll
inc
scas
add
jno
push
and
out
repz
or
lods
cmp
loop
repz
push
mov
pop
adc
es
cmp
loope
mov
subl
and
int3
dec
movsl
push
and
mov
mov
mov
add
dec
je
andnps
shlb
sub
mov
jp
call
mov
stos
lahf
adc
popa
inc
scas
jbe
push
push
xchg
push
xor
enter
in
cld
push
push
cmp
enter
lods
mov
xor
mov
jmp
push
mov
testb
icebp
cltd
push
gs
pop
push
mov
mov
aas
xor
imul
jle
dec
pop
mov
inc
and
lods
inc
iret
test
repnz
icebp
lods
inc
jle
adc
movsl
adc
mov
fwait
sbb
movsb
jne
pop
shr
or
jno
lods
pop
jnp
or
jnp
gs
test
jg
inc
out
jb
xchg
int
int3
hlt
fisttps
pusha
pop
xor
inc
outsl
sub
adc
xchg
sub
fnsave
es
rcll
data16
jbe
imul
mov
jne
icebp
cmp
jbe
out
rcll
jbe
gs
popl
jl
or
fcoms
jge
aam
jbe
jle
fbstp
cmc
pop
sub
xchg
adc
sbb
mov
add
lcall
into
mov
ret
cmp
xlat
mov
sarb
pop
mov
lods
movsl
xchg
fdivrl
dec
sub
mov
ja
adc
ror
sti
test
add
sub
mov
jge
loopne
and
out
mov
out
in
es
push
loopne
or
xchg
lcall
ret
mov
fucomp
mov
push
mov
and
fldl
ja
ret
lods
outsl
sub
cmpsl
inc
out
or
push
mov
and
mov
lods
cwtl
add
sbb
imul
and
fcompl
cmp
arpl
jne
xchg
push
fmuls
aam
lods
scas
push
push
lock
loopne
lea
addb
ss
in
push
push
stos
mov
jmp
ja
sti
pusha
stc
js
push
cmp
div
shrb
mov
cltd
or
pop
int
sub
push
inc
es
jno
mov
mov
int3
push
xchg
test
lahf
mov
mov
cmp
loop
int
mov
jl
pop
movsb
dec
jl
ljmp
xchg
test
inc
xor
lcall
sub
sub
rcrb
outsl
lcall
lcall
adc
call
int
test
pop
frstor
fcompl
mov
jl
cmp
test
test
mov
dec
mov
clc
ja
testb
cmpsl
xlat
pop
push
jge
sbb
mov
lods
imul
icebp
or
fisubrs
and
push
aaa
loopne,pt
mov
xor
or
jno
xchg
pop
rorl
ljmp
jns
out
adc
mov
rorl
pop
cmpsl
das
bound
cmp
lcall
sub
js
and
jo
cmp
pop
xlat
pushf
add
sub
fimuls
inc
es
dec
enter
jb
hlt
dec
jecxz
xchg
push
inc
jl
push
push
in
stos
imul
in
mov
jno
inc
idivb
mov
push
scas
jne
dec
fsubs
into
jae
dec
jl
cli
sar
push
inc
mov
add
pushf
cmp
add
test
sbbb
loop
lret
push
ds
xchg
jp
sub
cmp
rorl
jmp
popf
lods
mov
lret
bound
cmpsl
in
xchg
inc
xor
lds
dec
inc
cld
jns
add
shlb
insb
aam
in
out
mov
addr16
and
fcmovnbe
xor
and
adc
test
shll
incl
rorl
mov
and
nop
fs
adc
or
push
shlb
in
pop
cmp
scas
sub
rclb
mov
mov
jg
dec
pusha
and
bnd
pop
std
pop
jne
lahf
js
cmp
jle
popa
aad
push
mov
xchg
stc
in
lds
fcoms
call
sbb
mov
add
pop
xchg
jge
imul
inc
pop
sub
add
xor
test
mov
ja
push
rcl
aam
add
or
push
adc
imul
sbb
leave
jg
out
sub
push
inc
xlat
das
push
or
sti
xor
sbb
cld
sub
out
out
enter
in
adc
dec
inc
pop
inc
cmp
daa
es
fsubl
notl
push
cmovo
xlat
adc
pushf
out
xlat
movl
cwtl
push
xchg
out
mov
mov
inc
inc
pop
repnz
hlt
sub
popf
push
sbb
xor
fxch
lds
je
cmp
repnz
or
jp
jp
pushf
push
sub
jno
into
and
test
repnz
sub
mov
xor
lods
jmp
sbb
ficoms
mov
sbb
test
repz
loopne
inc
sbb
insb
or
sbb
push
loope
push
mov
and
scas
sbb
lock
pop
cli
inc
or
and
cltd
cld
mov
push
cmpsb
pop
and
jo
push
lock
rolb
jmp
arpl
dec
and
cs
addr16
negl
test
cltd
pop
push
add
pop
and
ret
add
jno
jno
push
std
cli
into
loop,pn
dec
pop
pusha
es
xchg
sub
outsl
ficoml
adc
xchg
addr16
arpl
fxch
mov
stc
lcall
mov
sub
sub
stos
pop
repnz
xchg
hlt
adc
adc
sar
into
jge
enter
xor
js
or
push
dec
aas
mov
add
std
jp
pop
sahf
clc
mov
cmpsb
sub
cmc
sub
pop
fstpl
addb
jnp
idivl
mov
scas
or
mov
mov
xchg
inc
cwtl
orl
add
xchg
push
or
jg
pushf
add
and
xchg
dec
cmp
lret
mov
cld
aas
mov
rolb
push
adc
adc
pop
iret
inc
and
je
pop
inc
mov
push
loop
push
scas
daa
xchg
dec
nop
popf
inc
mov
inc
scas
add
xor
dec
imul
xorb
jge
int3
pop
pusha
add
push
std
dec
mov
imul
das
xor
mov
sbb
dec
das
popf
cmp
xchg
addr16
sbb
cmp
fstpl
cld
roll
pop
mov
aad
add
sbb
data16
push
mov
out
nop
cmp
sub
ja
mov
test
div
test
lret
in
dec
cmpsb
fwait
add
pop
push
popf
sbb
xchg
daa
test
dec
dec
push
push
data16
mulb
rcr
sub
push
push
pushf
je
push
dec
aad
mov
and
aad
fimuls
or
negl
test
dec
mov
leave
shlb
sbb
fidivs
pop
movsl
rorb
push
add
or
or
push
and
xchg
mov
dec
adc
jge
mov
mov
test
data16
xchg
dec
pop
sbb
push
lods
loopne
add
cs
xor
xchg
inc
lods
xchg
ss
arpl
cltd
das
dec
in
dec
inc
fcoms
dec
dec
jg
lods
inc
dec
inc
adc
mov
jl
sub
iret
out
dec
lea
sub
inc
jne
mov
mov
pop
cmp
xchg
adcl
jp
pushf
cmpl
gs
fistps
clc
jg
jle
outsb
xor
ret
dec
loop
sbb
push
add
loop
cli
push
aam
cmpb
mov
push
test
push
mov
inc
ret
or
mov
jmp
jl
cmp
xchg
lock
push
mov
push
sub
or
testl
int
and
out
xchg
cltd
ss
loop
ret
ss
jl
jnp
out
ljmp
sbb
xor
arpl
test
jae
pop
cmp
dec
es
push
xor
xchg
mov
jb
in
scas
sub
push
pop
scas
sbb
mov
mov
mov
jl
les
int3
and
ljmp
addr16
xor
outsl
add
mov
fisubrs
jns
mov
xlat
arpl
cmpsl
mov
into
push
sti
repz
into
inc
or
sub
xchg
xor
xor
or
push
inc
sub
iret
adc
insb
xor
negl
cmp
test
out
adc
cmp
mov
lock
mov
xor
push
pushl
fnsave
push
inc
add
test
fldenv
loop
outsl
sti
or
cmp
leave
in
sbb
out
loop
mov
addr16
jbe
sub
add
loop
orb
out
sub
mov
lret
pop
imul
inc
mov
stc
iret
sarb
inc
in
outsb
mov
loop
inc
and
outsb
lock
leave
mov
sub
ljmp
fimull
mov
and
movsl
pop
lds
jle
cmp
arpl
int
int3
into
addb
adc
dec
and
adc
sub
sbb
leave
xchg
sbb
xchg
sbb
cwtl
fcomps
adc
push
xor
mov
mov
shl
outsl
cmpsl
push
pop
xlat
fcoms
outsb
mov
pop
or
mov
inc
xor
inc
sbb
sbb
aas
or
test
or
cmp
into
jno
divl
push
cld
fwait
inc
mov
aam
push
jno
test
push
add
adc
mov
mov
sub
cmp
imul
sub
cmpsl
pop
jno
movsb
xor
xchg
jo
cmp
sbb
out
lock
jecxz
inc
sub
ficomps
and
mov
loop
xchg
cmp
pop
sbb
jecxz
nop
test
les
ret
das
dec
fistps
push
std
fwait
mov
mov
sbb
and
push
sub
leave
xchg
sbb
mov
xchg
and
xlat
pop
mov
pop
sbb
sti
leave
adcb
pop
lcall
imul
test
mov
pusha
test
lods
fbstp
stos
xchg
mov
mov
hlt
jecxz
inc
loope
sbb
je
loope
lcall
cwtl
cmpsl
push
xchg
or
fbstp
pop
loopne
sarl
xchg
mov
jb
ss
gs
push
aam
mov
fisttpl
gs
je
shrl
jb
out
mov
mov
lods
cwtl
push
xlat
lods
xchg
xor
out
inc
fildl
mov
mov
pop
notl
pushf
aam
mov
jbe
xor
test
sub
push
scas
cmp
mov
in
mov
sub
add
pop
sbb
cmp
into
jge
enter
mov
xchg
mov
mov
pop
push
int3
xchg
mov
xor
insb
mov
and
xor
lahf
mov
imul
fimuls
mov
sbb
jns
sub
or
cltd
xor
mov
cmp
add
repnz
das
xchg
mov
and
mov
stos
test
xchg
movsb
mov
scas
pop
xchg
out
fs
push
testb
aam
aas
cmp
lret
nop
hlt
fists
xor
out
mov
mov
ds
mov
mov
pop
push
push
or
mov
lods
or
sub
cmpsl
lods
jns
mov
sahf
ffreep
les
mov
or
mov
outsb
cmpsb
hlt
mov
idivb
push
scas
sbb
orl
push
pop
clc
and
scas
scas
dec
mov
popa
shl
mov
fsts
je
push
cwtl
out
push
mov
inc
push
jno
jle
mov
pop
insl
cmpsl
cmpb
fsubl
lret
sub
aam
adc
push
and
insb
mov
mov
jp
rcrb
or
or
or
pop
jno
xchg
jp
add
xchg
or
call
stos
ss
pusha
lods
mov
pusha
cmp
enter
adc
cmp
add
push
popf
lret
pop
lds
fisubrl
shl
repz
pop
dec
mov
out
jbe
scas
push
mov
div
or
cli
dec
mov
inc
sarl
dec
dec
jnp
aad
jae
into
pop
ss
js
sbb
es
cmp
shrb
add
dec
inc
mov
add
fwait
xchg
cmp
mov
cmp
pop
jp
iret
mov
idivb
sarb
ficompl
pop
jae
es
cmp
push
dec
pop
out
jno
cmp
add
dec
push
xor
mov
xchg
cltd
repnz
mov
lret
cmp
and
xchg
hlt
cld
xchg
xor
push
movsb
dec
ret
lock
ret
in
dec
xchg
popa
sub
push
and
mov
insl
jl
clc
test
int
cmpl
rcll
loope
jl
insb
xor
mov
mov
cmp
outsb
icebp
push
sbb
negb
or
push
ret
pusha
lods
adc
mov
sub
stc
mov
jno
mov
or
mov
popf
sbb
mov
dec
xor
and
lods
lret
cmp
or
jbe
fsubr
inc
jmp
ljmp
sbbb
sqrtps
aam
mov
out
lcall
movsb
les
sbb
mov
shrl
push
xor
repz
fnstsw
sti
jge
repnz
pop
mov
pop
mov
call
mov
sbb
outsb
jnp
aas
lods
ja
scas
xor
lret
adc
adc
lret
loop
stos
int3
leave
mov
inc
cmp
clc
stc
push
adc
ret
fsubrs
pop
pop
popf
or
out
sbb
jmp
mov
test
pop
add
sub
mov
xor
adc
jg
adc
stos
daa
mov
mov
dec
jmp
mov
cmc
or
adc
rcr
or
jmp
dec
sub
dec
andl
cli
xor
sub
mov
insb
aaa
mov
pop
andb
dec
imul
mov
xor
rcll
push
pop
in
and
shlb
cmp
aas
es
push
or
mov
mov
out
je
shl
cmp
inc
xchg
cmp
in
inc
push
lods
jecxz
out
pop
or
xorl
jg
inc
sub
sbb
hlt
lret
and
shlb
je
jns
lcall
lret
scas
mov
dec
cld
ds
shll
inc
jne
or
loope
xchg
mov
pop
das
mov
push
jno
xor
mov
mov
and
or
xchg
mov
dec
and
out
sbb
or
push
jecxz
inc
scas
addr16
xor
add
xlat
stc
or
hlt
sahf
loopne
xchg
into
mov
and
and
loopne
mov
int
jmp
cmpl
stos
pop
jle
out
lds
xor
dec
imul
adc
insb
arpl
movsl
insb
pop
jp
jno
daa
mov
out
popa
lcall
gs
push
push
push
lea
mov
leave
or
push
loope
sub
xchg
jmp
repz
bound
pop
popf
int3
shrl
int
bound
cmpsl
ds
popa
orl
pop
fcmovu
cltd
cmp
push
cmp
mov
adc
or
mov
mov
aam
jae
and
sub
pop
xor
sbb
mov
inc
jp
xchg
stos
xor
cmp
sbb
and
xchg
jb
pop
mov
push
xchg
ret
sub
cmpb
push
or
push
mov
jbe
xchg
bound
loopne
add
dec
xchg
dec
orl
es
pushf
and
push
movsl
scas
cmpsl
movsb
and
add
movsb
push
orb
decl
test
cwtl
dec
or
mov
cmp
or
xor
adc
xchg
rcl
ljmp
mov
mov
sbbl
orps
cmp
andl
adc
int3
lods
inc
cltd
cmp
jno
mov
push
movb
inc
and
ret
sbb
jnp
mov
lahf
add
xchg
or
daa
adc
dec
jns
popa
cwtl
sbb
mov
sbb
xchg
cmc
push
or
or
push
dec
dec
xchg
pop
ja
xchg
sub
pop
mov
addr16
add
pop
push
mov
int
clc
jecxz
xor
pop
mov
sbb
insb
mov
shll
ljmp
loopne
add
push
xchg
mov
aaa
cmp
mulb
inc
sti
outsb
out
mov
or
mov
je
jne
repz
ss
sti
jmp
mov
pusha
sub
jmp
rclb
add
xchg
mov
pop
mov
cwtl
fchs
popf
cmp
in
in
adcb
das
xor
mov
pop
daa
scas
dec
sub
add
movsl
ret
cli
or
jp
int
mov
movsl
pop
mov
sub
jl
or
fsts
shll
lods
pop
orl
rcl
xor
or
add
shl
rol
push
push
pop
test
dec
pop
clc
inc
push
dec
cmp
jmp
dec
outsl
add
out
xchg
lods
loopne
lcall
out
daa
dec
cld
adc
cmc
sbb
lds
repz
jecxz
mov
scas
shl
cmp
das
inc
inc
xorl
jnp
xlat
push
sub
push
add
push
mov
or
and
adc
mov
lret
bound
icebp
mov
imul
push
lahf
lret
jle
sub
cmp
push
mov
aam
push
loopne
jle
jo
pop
imul
mov
test
mov
jnp
lods
ret
xor
sub
inc
xlat
lds
sbb
sub
punpcklwd
insb
sub
cmp
cmp
push
jl
movd
sbbb
pop
lcall
mov
repnz
jmp
and
xchg
ds
push
out
fisttpl
gs
mov
adc
add
lcall
call
or
aaa
pop
outsl
stos
loope
xor
push
lcall
imul
insl
insl
cmp
call
loop
stos
add
dec
scas
cmp
enter
lret
call
xor
or
mov
push
mov
es
flds
cmp
lods
stos
mov
adc
jecxz
inc
and
adc
jo
cwtl
pop
lcall
xor
pop
push
out
je
sub
inc
adc
into
dec
out
inc
enter
or
sub
mov
lret
sbb
push
shl
in
loopne
inc
push
mov
push
cmc
stc
sbb
mov
fisttpll
jp
popf
movl
cmpsl
jae
test
adc
and
xchg
lods
sub
cmp
mov
or
push
push
add
xor
loope
aaa
jnp
inc
and
sbb
pushf
xchg
cmp
sub
dec
fdivrp
sub
data16
lods
add
mov
repz
int3
inc
sbb
pop
jmp
pusha
scas
and
adc
xor
or
in
lahf
push
sub
mov
popa
jmp
and
addr16
pop
dec
sbb
and
test
jbe
sbb
mov
mov
sub
inc
mov
rolb
std
xchg
les
add
ficompl
sub
dec
cli
jnp
mov
push
cmp
cmp
fwait
push
push
xor
sahf
jnp
roll
lods
fcompl
leave
push
cmp
je
sarl
xorl
add
pop
mov
stos
dec
aaa
ljmp
push
std
roll
gs
inc
aad
fsubl
mov
jg
sbb
iret
dec
mov
adc
in
movsb
das
sbb
mov
call
adc
imul
and
add
mov
and
xchg
xchg
dec
jle
adc
call
push
pop
sbbl
or
ret
pusha
jnp
jnp
lret
rcrb
mov
icebp
push
jmp
sbb
sbb
cmp
pop
mov
mov
jae
cmpsl
cmp
sub
lds
or
sub
mov
xor
imul
jmp
fwait
sbb
addr16
sbb
pop
stc
jns
pop
arpl
xor
arpl
pop
fistpll
inc
not
imul
es
scas
jl
mov
int3
or
mov
mov
insl
lods
loopne
test
and
into
inc
movsl
in
sub
mov
pop
aam
jbe
shl
insb
cmpsb
mov
sub
cmp
stos
xchg
xor
jns
mov
dec
xor
pop
sub
mov
cld
inc
out
jnp
inc
ss
add
fcomps
clc
addr16
out
push
icebp
mov
adc
repz
in
and
ljmp
movsb
out
les
sub
inc
cmp
out
repnz
cs
adc
xor
sub
jb
dec
ss
adc
fs
repnz
jecxz
les
test
inc
idivl
jge
insb
lret
addr16
out
mov
sub
dec
mov
pushf
insl
sbb
pop
sub
jbe
fs
aas
test
arpl
inc
vpermil2pd
mov
ja
cmp
pop
mov
repz
mov
dec
mov
fadds
push
add
pop
fsubp
ret
push
imul
and
inc
jno
shrb
in
jg
lock
xchg
dec
push
jb
sbbb
adc
adc
mov
test
push
lret
mov
roll
jae
push
daa
lret
subl
dec
or
addl
outsb
jle
cmpsl
xor
xlat
pop
in
and
push
cltd
xor
stc
mov
pop
das
lret
jb
mov
xor
icebp
psubsw
or
call
jle
pop
and
repnz
inc
gs
ja
adc
stos
xor
mov
push
cmp
clc
sub
int3
push
jp
sub
add
lods
rorl
sub
pop
jbe
mov
ljmp
xchg
and
or
movsb
mov
rolb
ljmp
mov
roll
pop
subb
cwtl
imul
push
mov
inc
insb
fsubl
xor
repz
pop
ljmp
pop
dec
xor
scas
mov
std
push
cmp
lods
inc
in
shl
leave
add
fwait
push
insb
pop
js
int3
lods
mov
jg
cmp
sahf
sarb
or
inc
scas
das
mov
cltd
lret
fxam
push
xchg
jmp
loop
or
imul
mov
dec
xor
popa
test
repnz
jne
inc
imul
mov
xchg
jp
and
shl
lea
lods
xlat
dec
mov
mov
add
lods
mov
mov
pushl
test
or
jecxz
dec
in
icebp
hlt
sbb
ja
jl
je
mov
cli
mov
or
or
add
xor
rcr
sbb
mov
dec
dec
mov
call
dec
movsb
clc
movsb
pop
or
pop
stc
pop
inc
into
inc
ja
sub
cmp
fdivrl
cmp
es
xchg
rclb
ficompl
push
addr16
or
dec
push
mov
sub
icebp
and
cs
adc
xchg
rclb
xchg
clc
imul
inc
pop
push
test
jl
mov
pop
hlt
or
push
sub
in
mov
and
in
mov
mov
arpl
movsb
and
jecxz
loopne
push
add
icebp
inc
dec
loopne
and
mov
xlat
xchg
push
sbb
mov
pop
out
inc
sahf
pop
popf
ret
mov
mov
loope
adc
add
jmp
rcr
mov
dec
stos
mov
dec
sti
mov
mov
pop
fcomps
daa
outsb
mov
push
test
jnp
inc
push
or
bound
sub
mov
mov
add
icebp
mov
mov
pop
rorl
loope
xor
sub
ret
and
xchg
ds
xchg
cs
out
andb
lret
lahf
fimuls
cmpl
test
lret
loope
mov
into
add
sbb
fdivrs
mov
push
lret
sbb
pop
sub
pop
scas
jg
jmp
rol
fcomps
pop
movb
sbb
cmpsb
inc
icebp
cmp
jl
fwait
mov
fmul
add
jl
mov
mov
les
pop
push
mov
sbb
aam
inc
out
inc
push
daa
and
ret
inc
fwait
outsl
dec
addr16
push
and
int
and
in
mov
xchg
je
mov
addr16
dec
sbb
and
shrb
scas
arpl
push
jg
in
jp
nop
imul
jge
mov
xor
cmpsl
sbb
push
or
push
loopne
mov
leave
aam
bound
and
lahf
pop
iret
pop
fstpt
push
das
gs
stos
dec
out
hlt
push
loop
in
mov
xchg
fbstp
jle
sbb
cmp
mov
cmc
pop
fldl
mov
jmp
in
pop
mov
adc
xor
nop
fiadds
pop
cmp
dec
icebp
repnz
insl
lds
test
fucomip
mov
fst
mov
jo
push
mov
cmp
aad
mul
loope
jb
push
dec
pop
popf
inc
dec
hlt
cmp
cltd
mov
or
add
mov
jg
sbb
mov
mov
scas
imull
ds
outsl
stos
jg
negl
movsb
mov
or
cld
ljmp
in
mov
testl
xlat
dec
sahf
loop
lods
mov
and
in
adc
ljmp
inc
mov
or
inc
fsts
pop
jg
push
push
mov
mov
divb
or
lret
rolb
cmpb
daa
push
enter
sub
dec
inc
cmpsl
cmpl
jns
pop
int
int3
sahf
in
xchg
mov
mov
imul
ja
sbbb
mov
or
mov
mov
mov
rorb
pop
aaa
dec
mov
dec
mov
xchg
mov
pop
xor
mov
or
lods
or
popf
int3
and
xor
xchg
sbb
roll
insb
inc
push
test
stc
sbb
icebp
data16
adc
imul
repnz
adc
pop
xor
in
shlb
sti
in
mov
mov
lret
pop
pushf
sbb
testl
sub
insb
int
fstpl
rcr
movsb
sbb
arpl
leave
fs
ljmp
jae
jp
dec
pop
xor
fists
push
insb
rolb
clc
pop
sbb
pop
int3
jge
xor
mov
xor
mov
xor
sub
ljmp
in
hlt
cmc
and
jns
sbbl
sub
cmp
adcl
gs
jl
insl
sbb
test
mov
mov
mov
addb
sub
add
and
lret
stos
mov
xor
dec
leave
loope
jmp
xchg
and
and
mov
gs
roll
repnz
sbb
sarb
mov
pusha
mov
insl
push
das
lods
jle
das
jne
mov
scas
jmp
jns
adc
imul
or
es
push
sti
push
push
repz
enter
inc
push
jne
jg
rclb
sub
inc
adc
gs
inc
jne
xchg
fldcw
dec
aaa
or
push
jae
cld
inc
pop
add
aas
test
fbld
mov
xchg
mov
push
sbb
dec
push
push
dec
add
inc
pop
cmpsb
nop
in
adc
testb
loopne
cmc
leave
sub
mov
or
hlt
push
inc
mov
into
or
pop
maxps
lods
push
xor
fistpl
js
ljmp
mov
mov
xor
sbb
test
je
cld
add
mov
cmpb
or
xchg
sti
imul
repnz
fsubr
dec
icebp
mov
ds
repz
pop
adc
test
iret
lods
xchg
mov
hlt
movsb
ja
xchg
std
fisubl
nop
imul
xor
lods
lods
rclb
adc
inc
push
dec
cli
sub
pop
ret
mov
push
pusha
das
add
sbb
or
mov
out
mov
iret
lret
push
xchg
adc
int
ret
sbb
mov
push
fisubl
inc
das
int
out
or
movsb
cs
add
sub
fdivs
or
adc
pop
es
and
xor
mov
scas
int3
bound
pop
or
into
xor
into
cmc
bound
cld
adc
jle
imul
mov
mov
push
jecxz
fcoms
lret
addr16
xchg
ja
dec
mov
jmp
mov
fildll
sbb
cli
out
imul
imul
mov
mov
inc
testb
sub
push
cmpsb
cwtl
inc
mov
into
testl
pop
dec
mov
mov
lock
inc
insb
mov
or
movsb
cwtl
dec
out
add
ds
xchg
mov
icebp
adc
daa
push
jp
insl
adc
inc
mov
mov
sbb
mov
arpl
sbb
call
dec
loope
psllq
data16
fisttpll
filds
aam
jp
xchg
aad
mov
sbb
cld
mov
outsb
je
aad
lock
leave
test
subl
pop
dec
mov
pop
dec
push
xorb
out
jnp
mov
inc
loope
insb
cli
mov
xchg
pop
inc
inc
loop
inc
popf
test
adc
xlat
loope
add
std
hlt
rorl
pop
mov
arpl
out
stos
sub
jl
dec
xchg
sahf
sub
stos
cmc
nop
shrb
inc
lcall
icebp
int3
push
movsl
adc
sbb
and
push
mov
mov
orb
mov
dec
sbbl
push
std
dec
adc
and
mov
xchg
out
sahf
cltd
test
out
into
push
pop
jae
xchg
sbb
xor
stos
into
or
je
imul
loop
test
aaa
jbe
pop
dec
pop
mov
mov
cld
ja
scas
lret
stos
mov
cld
mov
pop
pop
adc
xor
mov
lahf
cmp
dec
pop
lods
sub
mov
dec
div
cmc
dec
lret
xchg
inc
fwait
arpl
xchg
insb
jb
dec
mov
dec
lcall
add
pminsw
sahf
mov
mov
sub
test
add
test
cltd
lea
xor
add
pushf
rclb
or
dec
dec
fs
sbbl
aam
pextrw
add
jne
xchg
repnz
fyl2xp1
sbb
dec
fnstsw
scas
push
das
jnp
adc
xchg
arpl
mov
inc
cmpsb
lret
nop
add
cmpl
ret
mov
inc
scas
in
or
inc
and
jbe
sbb
jl
enter
mov
adc
adc
xor
js
mov
arpl
lret
shrl
fs
dec
cmpsb
sti
cs
mov
lock
in
int3
push
sbb
dec
push
pushf
xchg
inc
cmp
fimull
jmp
jp
test
fdivrs
cpuid
adc
int3
dec
in
jl,pn
lahf
stos
aaa
psrlw
icebp
in
ss
xchg
mov
repz
push
repnz
push
lods
aad
andl
call
and
mov
xchg
shlb
fs
imul
lock
je
push
or
loop
lods
inc
jge
xchg
movsb
push
jle
cmpb
push
jecxz
pop
fisttpl
jge
dec
jns
repz
cmp
cmpsl
inc
ljmp
test
jg
or
stos
pop
rcl
sti
fiadds
ret
pop
sbb
sbb
out
repnz
jl
frndint
cmpsb
call
mov
push
push
push
cld
lock
sub
cltd
les
subl
dec
and
xchg
stc
sub
jecxz
inc
pusha
inc
out
outsb
frstor
push
hlt
jae
dec
mov
fisubs
xorl
lahf
std
daa
pushl
jp
hlt
inc
push
and
adc
fdivl
mov
in
rcl
test
jb
fidivs
es
dec
pop
aad
fwait
add
ss
pop
mov
out
nop
dec
cli
mov
leave
push
xchg
icebp
div
enter
adc
push
pop
leave
fldcw
push
dec
jne
ud2
outsl
fadds
sub
repnz
cs
dec
daa
jo
mov
cmp
adc
sti
out
xchg
sbb
movb
adc
inc
inc
xchg
imul
xor
xchg
cmp
lods
cmc
out
xchg
pop
sahf
pushf
jp
sti
jno
aam
sub
stos
inc
mov
pop
cwtl
popa
out
je
sbb
mov
jno
push
mov
push
rcl
push
push
shld
jns
xor
fisubl
test
pushf
lods
dec
jp
cmpsb
sub
outsb
aas
mov
fwait
add
mov
lock
ss
loop
xlat
push
rcrl
adc
into
mov
shlb
das
xlat
dec
xchg
insb
shlb
push
add
push
arpl
popf
lret
bound
mov
xchg
push
xchg
adc
cmp
cmpsb
jp
and
add
xchg
fsubrl
icebp
lods
addb
cmp
popf
pusha
lds
jp
or
xor
bound
push
repz
lock
sub
test
push
in
mov
movq
pop
jo
push
lock
inc
stc
push
lret
add
xchg
or
ja
aad
aad
cmp
jb
mov
add
mov
outsb
push
lcall
push
mov
pop
out
add
lret
lods
and
test
jae
jno
ds
adc
push
cwtl
add
leave
pop
xor
lods
pop
std
inc
call
test
repz
and
push
aam
and
fwait
out
addr16
inc
fistl
and
imul
xchg
pop
ds
mov
jecxz,pt
ret
mov
xor
dec
dec
daa
lea
jge
hlt
adc
mov
and
lret
stc
mov
repz
inc
push
andl
scas
jge
mov
je
push
mov
sbb
add
jge
repnz
mov
jle
and
mov
out
xchg
cli
inc
fimuls
jge
aad
or
cld
push
push
add
mov
lret
jl
push
andnps
inc
repnz
add
bnd
pop
mov
insb
pop
aam
xchg
pop
out
push
cmp
icebp
int
jecxz
xorb
inc
inc
inc
push
sbb
adc
or
pusha
stos
mov
push
lret
out
stc
std
mov
mov
lods
pushf
xchg
das
int3
mov
add
jno,pt
xchg
mov
xchg
cmp
sahf
outsb
aam
mov
adc
and
adc
mov
or
jb
add
adc
or
dec
push
imul
mov
sub
dec
ret
mov
inc
scas
xchg
sbbl
pop
push
add
xor
mov
repnz
jle
sbbl
pop
cmpsb
add
rep
jge
cmp
test
mov
dec
mov
sub
xor
pop
sbb
daa
imul
adc
jg
sub
movsb
test
out
jge
mov
xor
jge
orl
lods
fwait
mov
mov
insl
jmp
ficompl
into
jp
pop
or
je
jmp
pop
stc
push
popa
mov
jp
cmpsl
cmc
xchg
fcompl
sbb
mov
std
pop
test
xor
test
dec
xchg
mov
mov
ljmp
fcom
outsb
dec
mov
pop
insb
mov
sbb
cmp
cmc
dec
sub
jns
xchg
out
ret
popf
and
inc
lods
mov
aaa
lcall
cmp
fidivrl
aas
push
mov
jle
mov
inc
cld
xor
and
stos
mov
mov
sbb
ret
sub
pop
jns
test
imul
inc
cmp
mov
push
mov
mov
aam
lret
hlt
test
leave
fstpl
arpl
pop
fcomp
push
test
movsl
dec
pop
test
cmp
cld
xlat
pop
sub
sarb
mov
dec
mov
fwait
jg
aaa
adc
add
outsb
jo
je
out
aam
mov
shl
or
movsb
mov
mov
inc
mov
adc
jnp
ljmp
push
dec
sbb
mov
sbb
outsb
data16
add
imul
lods
mov
or
mov
dec
lret
fildll
daa
mov
mov
out
call
jo
js
pop
add
dec
jle
or
mov
mov
xchg
adc
stc
mov
dec
sbb
testl
in
lods
lock
jmp
push
popf
push
cld
mov
in
lea
test
dec
sti
sub
pusha
leave
xor
mov
inc
push
leave
je
sbb
cmpl
in
mov
loope
jmp
std
dec
in
mov
cmp
test
adc
add
hlt
sti
jns
and
rol
jecxz
and
cli
or
jg
dec
dec
pop
std
inc
sub
add
and
pop
aad
cmp
mov
dec
jne
addr16
add
inc
popa
scas
out
inc
jg
fwait
popa
add
jle
add
lret
adc
lret
fwait
mov
leave
sub
xor
and
or
imul
add
lea
popa
jp
out
sbb
and
mov
sub
jg
pop
jbe
ja
repz
std
js
mov
sbb
and
enter
decb
adc
mov
bound
mov
rol
daa
fwait
cmpsl
and
inc
enter
insb
mov
push
out
cmpsl
mov
sbb
pop
push
ret
push
in
popf
push
or
rclb
outsb
mov
sti
xchg
call
sbb
cmp
pusha
cmpsb
ja
dec
xchg
dec
movsb
iret
and
pop
xor
in
pop
ds
mov
call
and
sbb
mov
fistps
xchg
mov
stc
sbb
addr16
cmc
insl
in
mov
push
call
mov
or
and
loopne
and
or
cmpb
mov
out
pop
mov
fcomps
xor
sti
and
xchg
and
enter
aas
sub
popa
add
xchg
lds
mov
pop
adc
fbstp
jbe
or
xorl
fsub
push
add
cmpsl
rolb
push
and
lock
jl
xor
data16
pushf
pop
lret
xchg
ret
push
popf
add
or
in
nop
ljmp
mov
loopne
mov
xor
pop
dec
mov
add
xchg
mov
and
sub
dec
pop
enter
inc
loop
inc
aaa
pop
hlt
in
xchg
out
mov
mov
cmp
push
mov
xchg
lock
add
aad
clc
adc
jge
jnp
aad
idiv
test
push
ret
lock
iret
pop
sub
repz
cs
adc
aam
xchg
xchg
adc
adc
cltd
loopne
repz
xor
sub
lock
mov
cwtl
mov
decl
mov
dec
fld
pop
arpl
cmc
xchg
sbb
dec
cmpb
sbb
cwtl
jp
mov
jns
negl
sub
jl
lea
or
mov
cmpsl
dec
outsb
jp
mov
inc
xor
and
movsl
jge
pop
test
repz
sub
and
jae
dec
js
aad
push
out
and
push
pusha
push
insl
jb
add
in
movsb
push
scas
push
fwait
xor
iret
mov
cmp
cmpsl
ja
pop
and
push
test
jno
mov
data16
jb
push
outsl
bnd
test
ja
jo
popf
and
xor
push
fidivrl
scas
outsb
jb
dec
mov
pop
dec
popa
push
pop
loopne
arpl
jns
ret
js
les
mov
add
xlat
add
fisubs
pop
adc
enter
push
lahf
sub
pop
inc
lahf
stos
outsb
push
lea
push
mov
decb
fnstenv
stos
ja
xor
push
popf
and
aam
xor
imul
inc
or
aam
frstor
repnz
test
int
cltd
jmp
lea
imul
jl
cmp
cmpsl
arpl
inc
les
mov
adc
sbb
fnstcw
pushf
enter
sub
inc
and
xchg
cmp
arpl
movsb
mov
movsl
cmp
and
dec
rcrl
mov
push
or
ja
jecxz
xrelease
push
or
in
jno
insl
xchg
xorl
xor
xchg
in
lea
jbe
jecxz
inc
divb
scas
inc
add
js
movsb
sbb
sub
xchg
add
inc
sarb
inc
pop
movaps
fs
cmc
jno
mov
gs
or
les
call
mov
lods
cwtl
xor
mov
xlat
ja
pop
dec
aam
insl
sbb
lcall
cmpsb
rol
mov
outsl
imull
mov
roll
sub
cmp
popf
bound
packsswb
out
nop
orl
ss
sti
bound
pop
mov
lret
testb
jns
add
movsb
push
lods
mov
adc
out
sahf
lods
out
jns
jle
je
xor
test
mov
sub
into
cwtl
andb
xchg
pop
pop
fistpl
mov
in
jle
aam
pop
test
test
addr16
pusha
inc
leave
fisttpl
push
push
pop
and
cmpb
adcb
mov
inc
lahf
adc
js
mov
in
rorl
das
enter
xor
cmp
and
rcrb
pop
mov
add
mov
xor
or
push
pop
inc
into
mov
jmp
mov
or
sbbb
out
shlb
outsl
andl
shrl
std
rep
adc
adc
outsl
in
pop
inc
cmp
fistps
cwtl
push
and
cmp
imul
mov
adc
mov
add
lret
add
test
jmp
cmp
stc
sub
xchg
int
fisubs
hlt
dec
cmp
imul
push
xchg
mov
sbb
mov
jg
mov
fisttpll
ds
loope
mov
jno
jne
cmp
lret
iret
and
jns
in
and
cmpsl
add
pop
sbb
repnz
push
sub
bound
es
nop
arpl
loop
shl
in
lret
dec
in
aaa
add
push
push
mov
aas
fidivrl
dec
rorl
add
cmp
sub
testb
mov
cmp
cmp
push
add
sahf
sub
call
addr16
mov
fs
dec
std
insl
mov
sbb
xor
sub
jmp
outsl
or
movsl
and
inc
in
push
pop
movsb
rcll
mov
pop
and
in
stos
inc
mov
push
dec
out
cmc
sbb
add
cmp
in
fstl
push
adc
xor
dec
std
out
popa
sub
xor
pop
lahf
loopne
mov
and
xchg
cmp
jne
xchg
test
push
sbb
mov
out
in
add
movsb
cmpsl
leave
or
push
or
pop
push
push
pop
int3
adc
cwtl
xchg
and
testl
mov
sub
shll
inc
and
subl
cmpsl
outsb
dec
lret
in
inc
dec
out
cmpsl
imul
xchg
out
aaa
xchg
popa
aad
cmp
push
stos
xchg
jmp
push
daa
sbb
push
push
mov
inc
inc
mov
fisubrs
popa
lret
mov
sbb
movsb
dec
dec
push
ljmp
push
shll
mov
int3
scas
sub
sbb
mov
pop
into
lds
jne
and
cmp
and
xchg
cmp
es
xor
jp
nop
ja
and
mov
mov
pop
rclb
ror
mov
bound
mov
mov
fwait
push
ret
pop
mov
jl
add
sub
dec
pop
flds
add
adc
or
or
push
movsl
push
push
imul
dec
pop
mov
iret
cld
pop
sahf
jnp
jl
in
insl
sbb
jmp
jns
lock
les
mov
sbb
sub
fdivl
mov
adc
lea
lods
popa
addr16
mov
daa
rolb
pushf
out
push
negl
aaa
aam
rcrl
inc
test
je
inc
popf
addr16
push
sub
loope
pop
ret
pop
add
dec
xchg
fwait
out
jle
sahf
and
test
in
imull
movsl
popa
cmpsl
or
cmp
push
test
stos
insb
xchg
and
push
ss
cmp
mov
adc
scas
out
lcall
jl
shll
pop
nop
out
jns
adc
je
push
adc
mov
daa
into
mov
push
dec
call
fmul
cmp
xchg
call
mov
cmp
subl
out
xchg
std
inc
or
movsl
push
out
and
and
push
in
push
iret
inc
lret
push
lret
mov
jno
jle
std
hlt
jae
mov
xchg
mov
sbb
cmpsl
insl
sub
aam
shll
data16
std
mov
xlat
out
push
pop
pop
jne
and
dec
dec
jp
sbb
test
notb
pop
enter
push
push
aad
scas
add
mov
xchg
jbe
in
cmp
aam
jne
sbb
scas
mov
mov
mov
adc
lods
dec
imul
scas
pop
jae
movsbl
cli
jl
push
cmp
in
and
adc
je
mov
sti
das
add
xchg
in
xor
scas
in
inc
ffreep
mov
pop
or
scas
xchg
lret
mov
jp
repnz
or
iret
mov
jae
cmpsl
lods
sbb
xor
ljmp
jmp
mov
xchg
push
and
xor
pop
xor
out
lahf
jmp
cwtl
in
and
cmp
mov
push
mov
mov
push
xchg
sub
add
iret
pop
sub
dec
jmp
outsb
mov
mov
cli
cmp
les
pop
les
lret
mov
lret
dec
out
lods
lahf
mov
pop
movsl
loope
insl
stos
cwtl
movsl
pop
js
cwtl
icebp
mov
loopne
pop
aad
rcrl
xlat
loopne
or
pop
sub
orl
cwtl
mov
push
push
mov
lret
cmpsl
movsl
jmp
mov
lcall
jmp
jl
clc
sub
jns
push
int3
xorb
or
xor
shl
sub
push
shll
add
mov
cmpsb
stos
or
mov
cmpb
into
enter
inc
test
jno
xchg
sti
cmp
push
je
ret
adc
mov
out
bound
icebp
push
sub
xchg
xor
and
leave
ret
push
mov
shlb
xchg
clc
pop
int
mov
sbb
add
sbb
gs
lcall
clc
aam
movsl
and
nop
mov
jo
fisubrs
ficoms
push
jge
push
mov
sub
mov
inc
jae
or
sbb
xchg
inc
leave
stc
push
insb
mov
or
sbb
rep
xor
jb
xorl
test
sub
rcrl
in
leave
and
dec
ror
arpl
lods
data16
lods
cmp
movsl
adc
adc
outsb
cli
xor
ljmp
sbbb
pop
dec
mov
dec
cld
cmp
lcall
mov
daa
jl
add
es
rclb
imul
add
daa
test
push
test
fadds
xor
mov
leave
sbb
mov
mov
mov
dec
xchg
clc
or
cltd
adc
imulb
repnz
or
aas
popa
adc
repz
hlt
cmp
and
repnz
ljmp
inc
jns
dec
clc
xor
iret
test
jl
dec
mov
je
test
dec
stos
je
lea
push
pop
insl
bound
sbb
shll
repnz
push
dec
test
push
stos
enter
repz
rol
subb
pusha
cwtl
pop
mov
xorb
xchg
out
inc
or
sbb
mov
lds
pop
popf
pop
push
in
pop
push
inc
mov
adc
pusha
nop
movsb
xor
jecxz
inc
lret
cmpsl
dec
cmc
xor
inc
out
js
call
dec
lods
call
and
inc
jbe
jmp
hlt
jmp
leave
xor
and
lret
mov
push
movsl
mov
push
and
mov
push
hlt
push
push
mov
aad
cs
jno
cmpl
aam
cmp
jo
cmovb
lcall
das
enter
daa
xor
cmp
fnstsw
or
push
jge
sahf
sbb
dec
rcll
out
sub
std
dec
inc
or
fsubrs
pushl
push
iret
dec
mov
cs
outsb
fcmovnu
pop
fprem
imulb
push
cmp
std
push
jbe
push
aaa
mov
mov
mov
fsubrp
out
dec
pop
dec
cmp
stos
mov
sbb
cmp
pushf
andl
aam
inc
fbld
sbb
mov
addr16
fidivrl
mov
xchg
sub
fistpl
or
push
cmpsb
addr16
lahf
jno
push
cmc
pop
mov
xchg
xor
cwtl
mov
inc
lods
cmp
sub
inc
aad
push
outsb
stc
cmpb
jecxz
adc
xor
mov
fbld
jp
pop
in
xchg
mov
int
inc
push
cltd
xchg
nop
push
sbb
aad
rolb
mov
arpl
out
rcll
mov
notl
push
add
fsts
mov
push
sub
xchg
mov
divb
inc
cmp
enter
rcrl
pop
in
aaa
clc
inc
jp
cs
adc
or
add
pop
mov
xor
les
in
imul
div
mov
xchg
cmc
jb
cwtl
push
lods
cmp
setno
inc
mov
xorl
cmp
and
push
lret
imul
lods
inc
fcompl
pop
flds
jnp
mov
les
add
mov
cmc
dec
popa
in
dec
jg
cmp
ret
or
cmpsb
xchg
dec
mov
mov
rorb
outsb
clc
add
xor
sbb
mov
sbb
sti
mov
cmpsb
dec
adcb
mov
test
outsb
xor
sti
jb
ret
lds
pop
sbb
mov
jg
and
aad
lret
mov
in
out
mov
in
xchg
mov
popf
jne
mov
or
mov
test
jle
add
add
jo
dec
sti
mov
das
dec
or
sub
insb
fidivs
jns
dec
inc
mov
jecxz
mov
pop
mov
xchg
inc
cmpsl
adc
adc
add
ds
and
out
mov
or
push
mov
sub
psrlq
ja
aas
push
aad
dec
inc
gs
add
out
sub
lds
add
jp
pop
push
pop
leave
mov
setns
push
inc
lock
push
ficompl
call
aas
inc
adc
pop
sbb
les
imul
add
xor
xorl
imul
ficoml
nop
mov
addr16
pop
outsl
pop
ds
or
rolb
mov
adc
cld
fildll
std
jl
outsl
loopne
xlat
add
cwtl
inc
pop
push
sbb
jno
and
das
sub
or
ja
cli
or
test
xchg
sbb
inc
into
dec
add
xchg
ss
hlt
xor
mov
and
scas
ficoms
mov
bound
insl
xor
mov
pop
and
lods
inc
cld
dec
gs
push
mov
cld
lret
pop
outsb
mov
into
inc
pusha
icebp
sub
fiadds
pop
pop
mov
add
lds
fdivrp
test
inc
call
pop
into
xchg
mov
iret
push
cmp
lods
shl
dec
mov
dec
shll
dec
pop
pop
mov
rcll
std
loop
or
push
jne
nop
push
sti
scas
js
iret
sbb
int3
mov
dec
xchg
sti
mov
dec
repnz
mov
adc
inc
sarb
dec
cmp
xor
sbb
push
cmp
push
mov
gs
inc
bound
inc
out
push
cmp
push
ss
ret
das
shll
stos
test
pop
cmp
dec
aas
fsubl
testb
add
lea
ljmp
imul
es
dec
add
clc
mov
fwait
stos
pop
test
mov
jmp
lods
call
and
inc
sub
stos
dec
mov
xor
neg
stos
xor
test
sbb
lods
jbe
jmp
mov
xchg
dec
add
push
push
loopne
mov
mov
add
pop
or
xor
mov
jns
push
in
mov
mov
iret
jmp
jno
bound
jmp
jp
jl
addr16
stc
lds
mov
dec
ss
je
pop
movsl
pusha
xchg
mov
jle
adc
mov
inc
mov
icebp
popa
lret
je
scas
lods
and
xchg
dec
fmull
xlat
stos
scas
dec
jno
inc
xor
out
lret
test
shlb
cmp
push
push
push
inc
mov
jmp
out
xor
cmpsb
mov
inc
bound
cmpsb
pop
mov
repnz
imul
fcmovu
mov
xor
or
fmulp
adc
mov
ficompl
ljmp
jo
add
in
mov
movb
clc
sbb
jns
jmp
add
cmp
or
add
mov
push
addb
popf
scas
scas
sub
jbe
cmp
sub
push
pop
bnd
mov
into
mov
jno
aam
xor
push
jecxz
jo
mov
push
sub
xchg
cld
lret
fs
test
or
in
cmp
cmp
cmp
addb
pop
stc
xlat
xchg
cmp
leave
push
dec
jae,pn
dec
xor
fsubrs
xchg
outsb
cmp
jae
lahf
test
xchg
std
pop
sbb
shll
lods
mov
inc
mov
xchg
lret
aaa
std
stos
sub
sub
or
scas
fisttps
mul
xchg
jg
mov
stc
xchg
adc
cmp
inc
mov
mov
xchg
fnstsw
js
dec
push
lods
daa
pop
scas
pop
add
jp
xchg
sub
jecxz
mov
in
mov
xor
or
loopne
fs
scas
jl
mov
in
orl
cmpb
out
xchg
dec
mov
stc
push
sub
scas
js
arpl
aaa
or
or
cwtl
or
cmc
cmp
fwait
mov
jns
rclb
sbb
loopne
mov
inc
stos
fnstenv
jecxz
test
gs
test
sbb
mov
test
pop
pop
cmp
shrl
cmp
adc
sbb
mov
jmp
sub
in
adc
xor
dec
cld
lock
loope
and
xchg
fsubrl
push
lds
ds
mov
js
xchg
in
adc
in
inc
mov
rcrb
lret
std
or
and
push
lock
mov
xlat
sub
xor
adc
pop
emms
fstp
jb
fstpt
iret
imul
imul
mov
mov
lret
push
sub
dec
push
mov
loop
pop
negl
adc
fs
jge
es
outsl
xchg
xchg
xchg
shlb
in
mov
fsts
insl
jmp
and
and
das
xchg
mov
and
pusha
aaa
inc
ret
sahf
test
inc
jge
sbb
xchg
inc
jns
outsl
xor
movsl
scas
and
xor
insl
test
adc
pop
fidivl
lock
das
inc
dec
xlat
mov
cmpl
or
xor
imul
imul
stos
ret
iret
fcomp
cmp
jmp
add
das
sub
jecxz
and
mov
push
add
sti
imul
fildl
subb
and
jge
test
sahf
outsl
addr16
mov
adc
inc
fnstenv
ja
out
fs
in
or
and
cli
mov
cmp
inc
leave
mov
aam
dec
movsl
pusha
bound
mov
arpl
sub
add
cmp
push
push
aas
ret
add
sti
dec
sarb
mov
pop
inc
jge
jecxz
adc
mov
sub
subb
xor
add
add
xor
jne
daa
xorb
or
xor
mov
dec
loop
std
cmc
or
lret
ffreep
inc
inc
out
call
inc
jbe
xchg
mov
pop
cld
ret
dec
icebp
mov
mov
in
test
hlt
and
popa
sub
pop
rcrl
mov
into
sbb
add
test
sbbl
data16
and
mov
sub
jp
adc
dec
mov
push
sarb
xchg
pusha
mov
adc
call
aad
in
sub
or
inc
adc
sti
sar
lret
aaa
fldcw
stos
push
fcoml
pushf
hlt
sbb
mov
ret
xor
cmp
pop
jge
mov
andb
sbb
push
in
pop
xchg
sub
test
adc
in
daa
mov
js
inc
cmpsl
imulb
arpl
mov
sbb
mov
mov
and
in
lock
lods
out
push
push
push
cmp
mov
push
jmp
jge
xchg
movsb
scas
mov
adc
roll
add
sub
movsb
pusha
pop
ds
insb
inc
cmpsl
mov
and
enter
movb
pop
sbb
jle
add
lds
sbb
pop
push
cmp
es
xchg
jle
ficoms
dec
mov
in
sub
pop
xor
incb
adc
dec
sbb
cmc
in
and
cmp
into
stos
fisttpl
fsubrp
insl
adc
or
cmp
mov
mov
cmp
in
push
cli
fbstp
mov
pusha
dec
js
add
repnz
pop
popf
outsb
push
lock
push
imul
mov
es
mov
mov
jge
fisubrs
dec
lret
mov
pop
dec
sub
mov
push
fwait
cli
fdiv
sub
inc
mov
mov
jnp
cwtl
mov
inc
push
loope
xlat
inc
xor
dec
repz
pop
pushl
sbb
dec
insb
arpl
scas
push
dec
or
negl
lret
jnp
pop
xchg
jnp
or
xor
ljmp
inc
clc
loop
push
push
pop
cli
rcl
insl
push
jns
ljmp
aam
imul
xchg
add
inc
xchg
sub
outsb
fld
inc
and
or
cmp
jne
lods
into
call
jae
scas
loopne
push
fdivrl
sub
dec
pop
lods
ljmp
sahf
adc
push
sub
xchg
inc
decl
lds
repz
in
mov
lods
addr16
mov
xchg
into
inc
jle
mov
and
pop
lds
out
test
addr16
outsb
sbb
mov
sbb
xchg
imul
push
dec
jo
scas
jbe
stos
in
das
push
and
loopne
xchg
push
pop
push
lock
mov
sub
inc
push
scas
xor
cmc
xchg
xchg
mov
xchg
sub
cld
cmpsb
hlt
and
ret
fcompl
rorl
mov
loope
push
push
sbb
cmp
fs
test
adc
test
scas
xor
in
pop
ficoml
dec
mov
test
gs
mov
aaa
pop
pop
lods
in
sub
and
inc
inc
jg
mov
sar
pop
fcmove
mov
sub
fsin
or
popf
jae
lds
rcrb
adc
sub
lods
cmp
outsl
sub
ret
sub
insl
push
sar
in
xor
inc
mov
mov
das
dec
push
test
pushf
arpl
mov
xor
fbstp
and
outsb
jg
jns
cmc
aam
js
icebp
pop
icebp
lods
adc
test
fbstp
xor
repz
hlt
and
jb
rorb
idiv
pop
xchg
scas
jae
movsl
xor
jmp
dec
dec
popf
pop
or
jbe
incb
dec
xchg
insl
push
lods
in
push
push
push
mov
roll
add
addr16
aad
mov
stc
fwait
cs
call
xchg
add
aad
xor
pop
pushf
lock
jns
xor
jb
divb
shrl
mov
mov
push
add
les
mov
nopl
xlat
pushf
scas
xor
sbb
std
rcr
sbbl
cmp
rclb
fidivrl
push
mov
lods
fildll
orb
out
popf
push
addb
out
test
sbb
inc
xchg
addr16
std
lret
or
inc
push
cmp
jmp
pop
inc
rorl
adc
jns
mov
ja
outsb
xchg
inc
sub
and
enter
nop
mov
xchg
pushf
out
fbld
pmaddwd
jbe
in
stc
stos
js
or
icebp
shlb
xchg
push
movsb
pop
mov
inc
add
sti
xchg
push
out
jno
fmuls
faddl
cmp
mov
repnz
fldenv
sbb
je
xor
pop
cmpsb
lcall
xchg
in
xor
cmp
sub
pop
jb
inc
daa
jb
fsubrs
mov
lret
in
xchg
aaa
mov
imul
mov
cmp
pop
jge
mov
sbb
ljmp
adc
aad
js
ficoms
daa
lods
cwtl
in
jg
mov
negl
bnd
xchg
aas
push
mov
ss
xchg
fistpll
ret
fstl
mov
push
and
sti
mov
into
push
testl
mov
adc
subl
mov
mov
je
jecxz
sahf
stos
mov
sbb
out
repz
xchg
cmp
mov
xchg
lock
jns
sub
cmpsl
push
xor
jb
fsubrs
daa
push
inc
enter
pop
sub
outsl
pop
xor
adc
mov
pop
aas
mov
xor
lret
adc
push
lret
jo
iret
aad
and
add
push
sub
jns
pop
dec
mov
xchg
mov
cmp
and
dec
sub
fs
cld
outsb
cmc
sahf
js
xchg
daa
insb
subl
mov
push
sbb
insb
push
adc
fcompl
gs
fwait
sti
shll
xlat
dec
mov
das
sahf
std
push
dec
cld
mov
dec
mov
ljmp
lret
mov
inc
sahf
lcall
mov
dec
cmc
jmp
mov
jo
dec
sbb
cmp
push
mov
or
outsl
xor
mov
dec
rcll
mov
lock
negl
sbb
out
jmp
aas
sub
pmaddwd
ss
xchg
addr16
adc
leave
jns
pop
mov
popf
aam
dec
out
add
ret
add
push
xchg
xchg
cmpsl
mov
sub
aam
jge
pop
test
adc
movsb
mov
inc
or
jno
jl
daa
fnstenv
mov
jmp
stos
fcomp
jne
cwtl
mov
push
jl
pop
jg
lds
cmp
push
xchg
test
mov
cltd
sub
mov
lcall
insb
fidivs
andb
iret
aad
push
jbe
push
cld
sahf
mov
sub
addr16
nop
inc
jle
loope
dec
in
mov
sub
out
pop
movsl
pop
xchg
sbb
pop
addl
stos
pop
fildl
je
inc
push
cmc
inc
fisubl
int
xchg
lcall
mov
jbe
xor
or
xchg
push
mov
pop
adc
stos
jb
int3
pop
mov
int
xchg
fcomp
add
mulb
mov
ljmp
sbbb
rorl
ljmp
cmc
jnp
lock
pop
add
test
call
into
sti
js
stc
cmpb
daa
pop
in
mov
dec
sub
xchg
dec
iret
or
mov
jne
mov
pop
and
xchg
mov
sbb
adc
mov
mov
dec
cmp
shrb
pop
cmp
adc
jae
rorl
adc
cli
xor
push
jg
dec
jno
int3
stc
pop
pop
pop
adcb
xchg
mov
hlt
jbe
mov
cmpsl
mov
inc
cmpsb
jecxz
imul
jbe
add
sub
outsb
and
dec
adc
insl
movsl
gs
call
mov
ret
sub
jne
sbb
inc
jecxz
jg
and
repnz
in
push
mov
mov
mov
daa
fadd
mov
mov
addr16
add
iret
jns
jge
inc
inc
mov
dec
and
popa
popa
push
xchg
xor
mov
mov
scas
jecxz
jo
fstp
dec
test
or
mov
pop
xorl
or
hlt
in
mov
jae
xchg
xor
inc
insl
push
fstpl
sub
ds
imul
cmc
arpl
cmp
pop
mov
jmp
dec
dec
inc
js
pop
shll
mov
pop
stos
test
cwtl
pop
xchg
fistpll
mov
andb
pop
lret
fmull
jecxz
mov
adc
sbb
out
rol
jo
iret
shrb
xchg
int
repnz
jo
push
adc
sbb
pop
pop
test
cmpl
pushl
outsl
jecxz
divl
jge
push
cmc
pop
or
ret
in
xor
int3
push
cld
push
cmp
movsb
cmpsl
mov
dec
xchg
ds
insb
pop
adc
pop
aas
xchg
xchg
inc
cmc
push
cmp
sbb
xchg
sti
mov
mov
add
push
test
fcompl
and
sbb
in
fs
inc
sahf
jno
or
xlat
movsb
std
dec
sbb
dec
dec
mov
mov
notb
call
sahf
dec
shl
jae
gs
push
xchg
sub
push
sahf
fnstenv
adc
inc
arpl
in
cmp
cmp
ret
rcrl
mov
loope
fcom
out
jmp
cld
insb
imul
loopne
mov
arpl
and
imul
nop
add
outsl
mov
inc
fsub
inc
arpl
push
xchg
push
cld
jmp
mov
iret
xor
and
dec
fsubl
subl
aas
mov
shll
cltd
icebp
xchg
iret
lds
adc
mov
add
sub
stc
movsl
scas
call
loop
test
outsl
dec
mov
jo
sarb
sbb
xor
sahf
push
addr16
sub
out
pop
in
dec
insl
cwtl
mov
mov
aad
xor
loopne
stos
lret
push
fsubs
push
fidivl
lds
sti
aam
adc
jbe
pop
call
cmpsl
mov
std
inc
iret
cmp
popa
in
je
jge
inc
xchg
mov
jne
sub
andb
add
xor
push
imul
pop
and
push
pusha
sbb
pop
out
ret
cwtl
or
out
imul
sbb
mov
out
cwtl
pop
mov
test
dec
push
xchg
or
in
xchg
push
loope
insb
dec
rolb
dec
nop
cmc
push
popa
pop
out
or
fsubr
xchg
add
mov
jbe
inc
xchg
push
jns
pop
push
fwait
pop
lods
in
imul
scas
sbb
fildl
out
jo
rorb
mov
popa
enter
jns
test
jge
inc
pop
pinsrw
cmpsb
and
jbe
jbe
sbb
lret
movb
in
rorb
or
aaa
fisubrl
cwtl
inc
pop
test
cmp
and
rcl
inc
movsb
sarb
scas
sbb
sbb
pop
shlb
pop
inc
inc
aaa
or
sub
sub
and
scas
pusha
jp
inc
lahf
sub
out
stos
jns
pop
addr16
dec
scas
sarb
cmpsb
ret
xchg
xor
jp
mov
xchg
xor
test
xor
push
xchg
stos
aad
dec
mov
mov
xchg
jmp
insb
lods
xchg
daa
jae
rcrb
in
out
popf
add
sbb
or
cmc
jl
inc
imul
inc
cmpsl
inc
aas
nop
and
pop
xchg
ret
pop
mov
mov
imul
lret
xchg
mov
sbb
push
movsl
stos
pop
in
rol
nop
std
das
sbb
xor
xchg
mov
faddp
mov
dec
mov
xor
loope
test
inc
mov
roll
frstpm(287
cmp
repz
lahf
test
icebp
pop
pop
sbb
sub
xor
ffree
or
cmp
push
dec
test
jmp
mov
jle
xor
hlt
cmp
mov
inc
mov
js
js
int3
mov
xor
enter
sbb
call
mov
subb
push
cmp
aaa
cmpsb
js
andb
inc
sub
dec
jbe
push
cld
sti
mov
hlt
sbb
cmp
andb
loop
lcall
lret
mov
inc
adc
rorb
cwtl
inc
xchg
aad
lock
dec
fdivrs
mov
cltd
test
or
icebp
xchg
push
mov
sub
popf
inc
or
dec
cmp
adc
mov
in
out
adc
js
aas
inc
jl
lock
jns
xchg
jno
dec
xchg
or
out
mov
out
popa
les
sbb
leave
adc
ret
ror
std
add
mov
loop
xchg
dec
inc
sub
dec
push
scas
hlt
sbb
pop
jp
test
loope
ss
sub
or
dec
loopne
test
push
jne
pop
orl
mov
lods
push
out
mov
adc
out
inc
inc
cmc
pop
adc
popf
sbb
add
loop
push
fisttpll
insb
cmp
sbb
mov
xchg
mov
pop
daa
jae
push
or
rcr
test
outsb
stos
rcll
adc
xor
jecxz
push
aas
adc
pop
lret
lcall
daa
jmp
add
pusha
scas
jge
mov
mov
test
xor
fs
jge
fadd
pop
and
cwtl
lock
pop
ret
and
loope
mov
mov
das
jno
js
inc
cmp
imul
aam
insb
mov
sahf
sub
adc
shr
push
dec
inc
pop
imul
push
xor
popf
imul
jmp
cli
test
pop
lahf
mov
and
iret
popa
aam
pmaddwd
inc
pop
rorl
insb
mov
mov
jnp
test
and
jnp
test
fldcw
jb
imul
mov
sbb
inc
adc
shl
repnz
mov
jbe
pusha
push
cmpsl
mov
xor
push
test
and
mov
mov
ss
stos
cmpsl
pop
xchg
fnstcw
dec
imul
adc
xor
or
cmp
pop
data16
enter
clc
and
push
push
fs
dec
mov
dec
cmp
and
sbb
stc
push
push
movaps
mov
xchg
inc
inc
and
xchg
out
mov
cmp
loope
push
mov
mov
push
push
loopne
jle
mov
shr
lret
pushl
int3
xchg
test
cmp
jecxz
add
cmpsb
mov
xor
push
imul
push
nop
das
outsl
inc
stc
rorl
testb
dec
stos
add
sub
and
adc
push
pop
stos
xor
xor
sahf
pop
dec
in
aam
stos
cmp
orl
cmp
jl
push
lcall
inc
leave
cmc
cli
div
sarl
mov
cmpsb
push
into
push
pop
or
mov
cmpl
xor
call
push
xchg
popf
out
icebp
sbb
mov
sub
in
and
fwait
inc
or
push
cli
push
push
push
lds
jp
adc
adc
pop
or
push
clc
and
arpl
pop
cli
pop
lret
outsl
imul
sub
pop
xchg
movsb
push
int
fisttps
inc
xchg
jb
mov
imulb
xlat
in
rcr
sbb
call
sbb
inc
pop
int
dec
or
mov
loopne
scas
mov
lahf
adc
cmp
adc
sbb
cmp
mov
repz
mov
out
shl
ficoms
dec
lock
shlb
mov
imul
andb
inc
or
icebp
pop
sar
xchg
inc
pop
in
add
aad
jns
sbb
cs
std
jp
call
addr16
mov
inc
xor
sub
or
adc
ffreep
fisubl
ss
ja
or
sbb
sarb
push
jo
dec
ret
pop
loopnew
mov
cltd
or
push
subl
add
ret
testb
popf
int3
mov
movsl
ja
lds
clc
mov
pushf
xchg
add
xor
pop
dec
pop
sub
aas
cmp
and
filds
insb
test
test
hlt
pop
lea
int3
mov
or
test
xchg
test
mov
stos
xchg
mov
sbb
js
adc
push
rorl
dec
dec
cmpb
push
stc
add
lds
cmp
xor
jns
jl
push
pop
mov
repz
push
out
pop
nop
imul
or
dec
pop
or
enter
sub
mov
outsl
adc
xchg
dec
repz
jne
push
mov
push
test
mov
add
in
push
std
js
out
inc
ja
jecxz
sub
jmp
jo
adc
xor
je
adc
jne
test
jg
das
jo
adc
push
shll
or
std
inc
pop
jnp
push
mov
addr16
jp
mov
bound
dec
pop
sbb
mov
in
mov
jne
ss
or
movzwl
aas
clc
stc
fists
movsl
loop
and
rol
pop
push
fxch
ss
incb
pop
cltd
jecxz
ljmp
divl
sub
xor
mov
loop
test
dec
pop
xchg
aas
adc
std
mov
jge
inc
lock
cltd
sahf
movsb
and
pop
andb
gs
and
ret
jb
adc
lds
lea
nop
insb
jno
jp
imul
sub
fcoml
xchg
mov
cmp
cmpl
in
sbb
pop
in
push
adc
mov
andl
mov
dec
inc
pop
dec
bound
jmp
inc
push
sub
jecxz
nop
adc
pop
fwait
mov
movsl
mov
pop
rclb
xchg
or
sbb
push
inc
cmpsl
mov
dec
dec
stos
cmp
mov
lods
mov
popw
and
mov
cmp
mov
add
jno
sub
mov
xchg
adcb
or
add
loope
lea
xchg
hlt
pop
aam
ret
sahf
iret
inc
rcl
mov
rorb
adc
aam
xor
repnz
or
xor
sbb
sub
and
mov
imul
mov
xor
scas
add
scas
imulb
sbb
or
pop
push
pop
addr16
sub
dec
cmpl
push
stc
and
lods
push
jl
sti
adc
jbe
mov
mov
in
and
inc
xchg
inc
ret
movsl
lds
imull
movntps
inc
jp
mov
lods
ja
push
xchg
jnp
test
cmp
into
add
std
jns
in
imul
inc
or
cs
inc
out
std
outsb
mov
ja
dec
jno
xchg
lods
int3
push
test
pusha
and
dec
jnp
or
das
pop
jle
fistl
loope
xor
negl
shrb
push
push
mov
jo
jbe
mov
mov
or
or
cmp
nop
jnp
and
in
adc
jmp
out
sub
dec
insl
loopne
lods
mov
xlat
dec
sub
adc
rcrb
dec
jecxz
mov
fs
ss
sbb
mov
jecxz
addb
aas
jle
enter
xchg
adc
jle
sub
insb
mov
cmpsb
sarb
cld
lds
push
fstps
shlb
pop
outsb
in
ss
and
mov
dec
inc
mov
pop
sbb
pop
push
or
cmc
stos
dec
mov
cmp
mov
rcr
dec
rcrb
enter
pop
outsb
mov
mov
hlt
imul
rorl
sbb
in
push
lret
incb
outsl
popf
mov
test
mov
xor
xor
lcall
fldl
outsl
iret
sub
cltd
and
nop
xchg
jl
ret
xorl
mov
xchg
push
fdiv
push
and
mov
addr16
shl
xor
cmp
das
jae
std
xor
cmp
scas
divb
out
pusha
add
add
pop
movsb
and
push
iret
fwait
xchg
fs
xchg
sti
xchg
popf
test
inc
js
mov
xor
mov
rcl
pushf
movsb
loop
and
jg
in
jge,pn
rorb
and
mov
and
rolb
mov
idivb
into
jns
cmpsl
adc
aas
sti
cmp
clc
arpl
into
pop
sbb
mov
rorb
insl
xchg
je
cmpsl
sarb
mov
mov
bound
dec
cmpsl
xor
xchg
leave
aad
jno
imul
push
and
mov
add
int3
jge
jl
mov
rorb
push
push
dec
fcmovbe
push
mov
xorl
fidivrs
lods
enter
push
mov
mov
shrl
sub
fdivs
cmp
inc
int
xchg
dec
lods
push
int3
jo
dec
movsl
push
cld
adc
leave
lret
addr16
filds
sub
mov
and
pop
jg
out
cld
into
lock
loope
mov
jg
les
mov
call
mov
xlat
pop
pop
scas
jo
sub
jae
leave
add
out
push
sbb
jmp
pusha
outsb
cmp
jmp
mov
sbb
fcomps
cmp
or
mov
mov
jg
imull
or
inc
inc
pop
fs
lods
jecxz
shrl
push
mov
jbe
fisttps
and
addr16
jl
jnp
shrl
gs
or
push
xor
xlat
test
cmp
aaa
pop
cmp
jnp
mov
dec
xor
addl
lods
sahf
jo
lret
cmpsl
push
inc
ss
cli
jno
outsb
push
xchg
sub
adc
iret
xor
adc
mov
stc
hlt
int3
es
xor
xlat
lods
ret
or
inc
shl
sbb
sub
addb
push
daa
aad
popa
dec
lock
jecxz
fisttps
dec
addl
fbstp
out
mov
loope
repnz
inc
xchg
iret
sbb
daa
adcl
ret
gs
mov
bound
ret
roll
js
mov
lahf
add
dec
aas
sbbb
dec
loopne
fs
jle
sub
pop
cltd
orb
pop
mov
add
inc
inc
dec
ds
mov
jl
dec
xchg
ja
lods
dec
aam
aad
aad
dec
out
adc
adc
adc
lahf
mov
orl
pushf
or
inc
pop
cld
fildll
repnz
and
push
movsb
scas
cli
cltd
mov
clc
test
jecxz
adc
mov
pop
popf
repz
scas
scas
pushf
xchg
lret
sahf
rclb
mov
push
or
pop
sub
lea
scas
fistpl
icebp
movsb
mov
in
rol
xor
push
aam
or
xor
mul
sbb
nop
inc
fbld
jp
push
ss
pop
cmp
cli
push
sti
adc
and
daa
dec
sbb
jg
sub
push
push
out
mov
jo
inc
clc
cltd
faddl
out
fsubrl
mov
xchg
out
mov
aad
adc
lcall
jle
hlt
mov
lahf
lcall
jmp
mov
loope
div
dec
in
scas
sub
sbb
stos
shlb
lcall
fdivrs
jecxz
mov
inc
mov
in
xor
mov
ds
out
loope
shlb
enter
xor
in
js
mov
sbb
stos
or
inc
add
ss
repnz
addr16
js
mov
lea
adc
into
call
aas
fs
mul
cmp
lock
js
fdivrs
push
or
dec
jno
and
in
pop
lcall
ja
push
popf
repnz
push
add
gs
testb
iret
mov
stos
cmc
jb
lods
mov
adc
mov
cmpsl
lods
xor
or
add
push
jno
push
jge
ds
push
add
lods
dec
int
and
mov
xchg
aad
pop
shr
jecxz
adc
inc
adc
mov
rcll
inc
leave
xlat
mov
adc
pusha
mov
pop
jb
sbb
out
push
std
mov
int
js
fstpt
xchg
jno
leave
cli
dec
scas
test
cwtl
loopne
lret
push
mov
outsl
xor
cs
and
and
out
push
xor
fisubrl
stc
jae
push
adc
push
and
pop
cmpsb
mov
jns
push
adc
jg
fcmovnu
pop
add
aas
add
sbb
xor
outsb
xor
xor
dec
mov
mov
jns
in
insl
outsb
jg
shl
adcb
mov
icebp
and
sbb
lods
pop
ds
iret
sub
je
iret
adc
sbb
iret
fdivl
int3
ret
inc
and
loope
mov
sbb
or
cld
stos
stos
cmpsl
ret
iret
sub
repnz
sbb
inc
sbb
mov
push
mov
imul
in
mov
mov
loope
je
or
xchg
cld
xor
inc
xchg
ss
in
outsb
dec
out
mov
data16
mov
jge
shr
and
xlat
out
adc
xchg
mov
sbb
push
adc
xchg
dec
mov
je
aas
sbb
gs
rclb
mov
aad
stos
mov
mov
scas
xchg
sub
sub
jp
lds
pop
leave
or
xor
js
into
mov
cmp
cmp
clc
jp
cmp
and
aad
les
xlat
shll
adc
inc
jo
sahf
or
iret
ret
int
push
lods
ret
test
fsts
idivl
pop
shrb
ja
fcmovbe
popa
mov
nop
lcall
int
shll
sbb
mov
dec
inc
jp
mov
jbe
push
movsb
mov
lods
insl
fs
adc
aas
out
sbb
jmp
or
adc
dec
inc
and
sub
push
push
cmpb
hlt
jmp
dec
ds
jecxz
pop
push
arpl
or
mov
das
shlb
sub
add
dec
outsb
inc
loope
cmp
pop
adc
sbb
push
or
mov
cmp
pop
dec
ja
push
mov
ss
dec
jl
xchg
jno
out
xchg
add
xchg
inc
pop
or
in
xchg
fxch
rcll
pop
inc
push
clc
mov
pusha
outsb
aas
or
push
imul
xlat
dec
mov
add
xchg
out
sbb
mov
xor
adc
shr
xchg
fstpt
push
mov
cmp
movsl
cmp
repz
mov
mov
and
jo
in
adc
xor
inc
pushf
mov
js
test
imul
fs
inc
fldcw
pop
mov
adc
and
test
adc
mov
aad
sub
push
dec
popf
into
push
loop
cld
int
idiv
mov
or
mov
dec
sub
mov
enter
or
xchg
adc
xchg
pop
in
add
subl
mov
shl
and
adc
aad
notb
mov
lret
cmp
push
mov
jmp
outsb
cmc
jp
push
insl
in
jno
mov
shr
popf
or
pop
adc
mov
outsl
aad
mov
adc
mov
es
dec
imul
iret
sub
pop
out
sub
jne
in
arpl
sbb
sbb
mov
and
or
in
dec
adc
xor
daa
adc
mov
adc
push
pop
int
pop
add
push
fwait
pop
in
insb
cmp
and
je
mov
and
dec
pop
push
push
pop
sub
mov
cmp
cs
pop
mov
lock
shlb
idivb
aas
mov
or
test
pop
scas
mov
push
add
mov
xlat
xchg
dec
dec
xchg
dec
clc
jbe
int3
cmc
pop
les
xor
outsl
ljmp
call
adc
pop
fwait
pushf
mov
sub
clc
sti
jb
xchg
or
lea
insl
mov
pushf
js
push
pop
nop
daa
mov
bound
popf
jecxz
sub
cmp
mov
aad
jno
pop
js
push
stos
fmulp
data16
mov
addl
divl
push
into
cwtl
fcoms
mov
xchg
or
aas
mov
mov
dec
stc
subb
test
lods
cmpsl
es
sar
xchg
dec
les
and
fldenv
je
pop
test
jmp
add
imul
ja
lahf
inc
mov
in
lods
cli
jne
fmulp
jne
pop
test
stos
leave
lahf
add
add
mov
pop
jno
mov
clc
scas
xchg
nop
mov
push
cwtl
fwait
xchg
scas
dec
or
pop
jle
popf
add
dec
daa
sub
aaa
fists
scas
test
or
jae
in
cmp
insl
mov
stc
loopne
ds
pop
inc
or
dec
dec
test
cmp
imulb
mov
dec
imul
mov
ss
pop
aam
lods
outsl
in
cmp
jg
cmp
jb
lret
es
lods
in
add
imul
mov
xchg
adc
mov
test
and
out
pop
bound
test
fldcw
cmp
dec
inc
rcr
and
int3
xorb
push
cmp
arpl
cmp
add
insl
stc
outsb
push
sti
adc
js
jae
sub
pop
and
mov
loop
idivb
pusha
pop
inc
int
or
and
mov
or
sarl
mov
leave
rorb
out
inc
mov
mov
movsb
jae
xchg
mov
and
roll
int
arpl
push
pop
cltd
js
push
xchg
xchg
sub
iret
sub
pop
mov
es
mov
jns
movsb
mov
mov
dec
mov
mov
loop
aaa
je
jnp
mulb
jbe
pop
shll
mov
xor
aam
rcrb
sub
call
sub
mov
ss
jmp
lahf
jecxz
jle
inc
xchg
mov
and
mulb
mov
jp
ret
scas
mov
xor
cmp
inc
sbb
mov
sub
lds
mov
mov
adc
out
jmp
xchg
icebp
out
jnp
xor
pop
movsl
mov
cltd
xchg
xor
loop
jge
xchg
jmp
dec
loopne
xchg
aam
fcompl
push
pop
ja
mov
out
popf
cmp
mov
push
push
scas
jae
xor
add
popf
popf
or
jmp
sbb
fdivrs
icebp
jecxz
push
popf
xor
push
stos
mov
xor
mov
or
add
popf
pop
sbb
fs
loop
addr16
es
dec
jg
mov
or
mov
mov
sub
in
sti
dec
mov
mov
mov
xbegin
xor
dec
orb
pop
pushf
sbb
add
fwait
lret
fmull
ret
sub
mov
ljmp
xorl
cmp
int
test
and
push
aad
arpl
dec
pop
sub
lahf
lahf
test
cmpsl
or
cmp
mov
sbb
incb
cmp
repz
sti
loopne
movsl
xchg
mov
fdivrs
sarl
cmp
or
push
ds
stc
cmp
and
gs
jle
and
enter
sahf
sub
stos
stos
call
and
xlat
fcomip
mov
mov
cmp
fldl
cmc
lea
fisubl
add
ljmp
lgs
rorb
mov
nop
test
sbbb
mov
sub
call
pop
mov
in
sbb
or
xor
xchg
and
sbbl
pop
inc
sbb
xchg
mov
mov
mov
fcom
jge
inc
lcall
fsts
and
push
dec
pop
sub
xchg
scas
sbb
adc
test
adc
adc
ljmp
gs
cwtl
xor
dec
xchg
dec
mov
dec
shlb
jg
jmp
mov
or
push
stos
jp
sub
out
js
mov
mov
xchg
push
jnp
jne
clc
dec
shlb
or
lret
sarb
jbe
dec
mov
mov
or
mov
cli
xchg
ret
jg
stc
pop
xor
xchg
pop
lret
ss
cmpsb
add
addr16
push
aaa
pusha
mov
jl
std
dec
ss
aam
cmpsl
dec
jbe
test
mov
cmpsb
imul
xor
sbb
in
push
ret
or
ja
test
leave
adc
xor
push
dec
js
mov
push
mov
and
mov
ret
xchg
jno
shll
xchg
rclb
xor
mov
stos
and
push
adc
out
std
aam
jae
es
movl
gs
xor
cs
pop
xlat
sahf
outsl
xor
jmp
and
mov
sbb
adc
mov
fidivrl
jl
stc
dec
movsb
xor
xchg
push
inc
lea
sbb
aam
inc
pop
fdivrl
insb
in
inc
mov
cmp
mov
and
call
cwtl
mov
mov
inc
mov
cmp
loop
fidivs
adc
jge
loop
and
dec
push
pop
add
aaa
fsubrl
lret
repz
jp
pop
das
mov
stc
and
mov
mov
dec
out
jmp
or
movsb
sbb
ds
imul
or
mov
nop
jl
aam
sbb
or
lret
jge
insl
sub
mov
insb
jb
push
mov
aaa
scas
je
or
loop
cmp
add
in
std
pop
or
popf
cmpl
ret
sarl
rol
movsl
mov
imull
or
sbb
scas
mov
push
hlt
jl
sbb
or
mov
xor
lods
stos
dec
jno
sarl
xlat
or
fsubrp
daa
clc
xchg
dec
mov
hlt
jmp
test
lock
es
fildll
mov
fimull
cmc
shrl
stos
jmp
push
roll
push
adcl
jne
xor
or
mov
mov
cld
cli
xor
scas
movsl
fnstenv
outsb
enter
stc
movsb
dec
dec
mov
enter
pusha
pop
xor
cmp
mov
adc
iret
divl
std
mov
jae
and
inc
add
lods
fbld
lods
dec
pop
add
enter
sub
xor
xchg
xor
fnstenv
cmc
test
mov
mov
and
cs
fs
or
int3
or
imul
mov
mov
or
xor
pop
pop
outsl
or
sub
popa
ss
lahf
push
fisubrl
mov
add
scas
pop
inc
lret
jo
and
movb
jp
and
pushf
mov
mov
test
fildl
call
lret
frstor
sub
cmp
mov
push
repz
jmp
dec
mov
inc
stos
cmp
push
add
sub
hlt
push
hlt
sbb
bound
out
stc
xchg
xchg
jmp
xor
lahf
test
jb
push
inc
pop
push
push
cmp
arpl
pop
jbe
cltd
inc
or
fisttpl
push
push
inc
decl
push
pop
and
ffreep
push
ret
xchg
int
stos
lea
mov
fisttpl
lcall
int3
push
push
xchg
outsl
push
popf
bound
dec
jge
sbb
aam
clc
mov
and
loope
enter
loope
dec
pop
jbe
lock
or
xor
sti
and
push
loopne
repnz
call
in
mov
push
pop
sub
adc
inc
stos
xlat
jge
and
ds
rcrl
icebp
pop
dec
lcall
ret
xchg
dec
pop
clc
das
sahf
je
xor
add
mov
in
stc
jp
jmp
mov
shrb
inc
test
jmp
or
mov
xchg
push
xor
roll
subb
sub
rorb
mov
xor
xchg
xchg
cld
fidivl
shlb
xchg
xchg
test
aaa
frstor
test
push
add
insl
jle
ss
lods
enter
sbb
stos
mov
mov
push
pop
sub
or
xor
repnz
cs
sub
inc
aaa
cli
jmp
shrb
mov
pushf
fldcw
cmpsl
mov
sarb
jbe
lcall
mov
xchg
lret
lods
loopne
popa
inc
ret
fs
fdiv
pop
or
movsl
in
fdivp
test
daa
and
mov
push
dec
mov
xor
cld
call
cltd
mov
push
cmp
mov
pop
mov
jo
dec
cwtl
inc
inc
loope
lahf
cld
aas
add
inc
cmp
stos
cmp
xchg
dec
js
xor
bound
lret
jle
movsl
test
fcompl
jnp
or
pop
ret
stos
rorb
dec
push
enter
dec
xchg
mov
sub
mov
movsl
std
fsubl
pop
in
dec
sub
pop
cltd
sbb
cltd
notb
or
and
sub
stos
xor
nop
add
ja
pop
push
mov
xchg
adc
mov
pop
add
add
cli
pop
cmpb
jnp
add
stos
xlat
test
pop
into
addl
inc
cmp
mov
ret
or
lods
jno
rcrl
int3
jmp
xchg
iret
mov
icebp
in
mov
aas
or
cmpsb
adc
scas
jno
in
xchg
jnp
push
les
mov
jp
jmp
push
cwtl
xorb
mov
sbb
add
jae
es
mov
ret
movsb
dec
dec
lahf
retw
gs
jle
push
lcall
arpl
add
add
cmp
push
int
cmpxchg
jle
or
movsb
mov
push
dec
add
inc
outsb
push
add
mov
lcall
call
sti
mov
aam
sbb
ficoml
cli
mov
xchg
cmp
cwtl
dec
dec
clc
aad
movsb
clc
xor
or
mov
sub
test
scas
add
lods
add
pushf
iret
cvtdq2ps
add
mov
loope
bound
scas
xor
xor
iret
ds
cmc
neg
push
and
mov
mov
les
and
adc
and
out
test
push
mov
jae
jnp
stc
inc
or
in
inc
lret
inc
push
sbb
fsubrl
add
mov
push
das
dec
mov
ret
scas
fwait
xlat
out
inc
jp
call
inc
iret
stos
es
jecxz
ljmp
dec
pop
test
nop
outsb
and
jnp
inc
ret
mov
pop
scas
fldenv
jp
scas
ds
and
jo
xchg
into
dec
jmp
das
dec
inc
sub
les
clc
fdivs
adc
scas
iret
rcll
mov
mov
mov
fldl
sti
and
enter
std
rorl
scas
sbb
mov
jno
and
cmc
mov
xchg
cmpl
sbb
xchg
das
cmp
adc
cmc
push
mov
stc
sbb
add
repz
adc
dec
lods
enter
push
fisubrl
jns
push
xchg
ja
in
out
sub
int
fiaddl
adc
dec
push
mov
add
out
sti
loopne
inc
fwait
aas
aad
adc
sarb
fdivrl
call
xchg
addr16
fsts
add
xor
push
xor
or
mov
fldenv
push
xchg
fisubrl
sub
xchg
and
mulb
shl
and
fisubrs
xchg
sbb
mov
jnp
dec
xchg
pop
orl
fcomi
push
std
mov
xchg
mov
mov
popa
and
push
inc
aad
add
insl
js
push
push
adc
pop
jmp
jns
xchg
xchg
cmc
xor
mov
outsb
dec
push
lock
cld
into
orl
mov
mov
sub
icebp
imul
dec
sbb
inc
insl
outsl
push
cli
mov
out
int
push
fidivl
insb
scas
bound
out
adc
aaa
xlat
insl
icebp
scas
stc
push
add
inc
jge
pop
das
jns
mov
orb
and
push
stos
jle
mov
xchg
mov
jnp
adc
sub
popa
or
jge
jne,pn
es
mov
push
inc
iret
nop
or
fdivrl
adc
lcall
ret
add
inc
lahf
dec
rep
pop
xlat
test
inc
lcall
and
shrl
daa
jg
cs
jo
cmp
sub
dec
jns
xchg
add
out
fs
out
and
jno
pusha
out
cmp
mov
in
faddp
enter
adc
repnz
lahf
xchg
xor
imul
cmp
xchg
pop
out
push
mov
adc
lods
mov
push
popa
outsl
and
subl
push
sbb
mov
mov
ret
imul
popa
mov
repnz
shlb
jae
sub
push
daa
stc
fnstcw
mov
push
sbb
icebp
jbe
xlat
jle
rorl
ljmp
xlat
aad
mov
data16
pop
cmpl
aad
sbb
dec
jb
mov
shll
popf
mov
ret
push
lcall
lret
and
icebp
fwait
aas
rcl
test
inc
xchg
mov
and
int
addr16
dec
inc
outsb
add
ret
hlt
pop
lods
dec
mov
lods
or
ljmp
and
cs
dec
lods
stc
scas
js
add
pushf
and
jae
push
add
lcall
push
pop
sub
and
call
repz
mov
aaa
sbb
lea
xor
mov
ljmp
mov
xchg
in
hlt
stos
pusha
aad
mov
aam
lock
pop
mov
xchg
xor
jge
lds
jmp
adcl
in
adc
pop
jmp
xchg
pushf
pop
in
lret
dec
addl
or
fyl2xp1
js
icebp
push
cmp
js
jno
dec
in
jl
xor
fists
pop
shlb
mov
xchg
jmp
bound
cmc
cmp
pop
cs
aam
shrl
in
stc
cld
sbb
mov
mov
aam
mov
jo
mov
xorb
test
clc
dec
inc
dec
push
stos
mov
popa
jo
mov
push
pop
ficoml
pop
mov
std
xor
aam
icebp
fwait
xor
in
cmpsb
cmp
clc
cmp
aaa
and
mov
icebp
sarl
data16
sahf
cli
aam
xchg
hlt
leave
jae
test
gs
xchg
loope
mov
rcr
dec
adc
xchg
lret
mov
lahf
loopne
push
in
and
enter
pop
icebp
or
repz
jae
shlb
por
add
jns
or
add
inc
ret
adc
push
mov
mov
out
dec
mul
cmp
mov
push
jb
clc
lret
into
test
setnp
aam
rolb
sti
ret
xchg
clc
es
lret
sbb
mov
sub
dec
mov
adc
dec
mov
cs
or
pop
xchg
pop
dec
stos
lahf
mov
cvtps2pd
add
in
ljmp
cmp
cli
daa
mov
fwait
pop
sbb
aaa
movsl
mov
repz
ds
mov
push
adc
jecxz
push
push
dec
add
cmp
mov
mov
cmpsl
xchg
sbb
jo
iret
pop
add
push
add
sub
mov
inc
sbb
inc
and
paddsb
sti
pop
fists
mov
mov
jp
arpl
sbb
ret
es
jmp
movsb
mov
pop
xchg
out
cmp
inc
xchg
or
inc
nop
mov
xchg
add
adc
aas
enter
xchg
sbb
scas
adc
fcomps
ljmp
test
fmull
cs
mov
jnp
pop
cmp
addr16
pop
sti
shlb
test
shll
pop
jecxz
xchg
ds
mov
sbb
mov
or
pandn
jg
shrb
cwtl
inc
mov
test
ss
add
adc
jl
jbe
mov
insb
pop
les
lods
cs
fsubl
test
ja
lret
loope
jecxz
mov
addr16
out
jnp
mov
xor
xchg
sub
call
loop
mov
clc
movq
mov
cli
mov
std
inc
or
pusha
call
mov
loopne
push
mov
xor
into
jl
andl
int
jae
addr16
data16
or
fs
inc
sub
notb
mov
stc
lock
lods
pop
sub
rolb
cmp
pop
sub
inc
in
out
xor
jl
icebp
shll
sub
adc
repz
or
mov
jbe
sbb
ret
adc
sahf
ss
in
inc
ljmp
fcompl
mov
rcrb
sub
dec
and
dec
ss
or
sub
pop
xor
pop
pop
cmp
cmc
add
xor
inc
cli
add
rorl
into
out
ds
sub
mov
lods
out
sub
add
out
push
inc
ss
shll
testl
fisubrs
loope
dec
stos
sbb
mov
mov
xchg
aas
pushf
aam
adc
hlt
inc
inc
jmp
push
loopne
jno
repnz
and
xlat
test
ja
add
popf
jb
jg
adc
mov
fisubrl
cmpsl
or
sub
adc
xchg
cltd
or
mov
sbb
fstpl
mov
mov
movsl
sub
test
add
add
addr16
cmp
outsb
pop
push
dec
jae
fsubs
sub
push
sbb
nop
ret
mov
dec
iret
inc
mov
mov
movsb
fbld
in
mov
adc
dec
popf
dec
lcall
push
fxch
push
out
xchg
mov
fisttpl
mov
cmp
add
xchg
pop
inc
js
je
adc
enter
fldt
mov
cmpsl
lea
popa
push
lock
ljmp
jno
pop
popa
mov
rcrl
xor
inc
mov
jl
pop
insl
lea
bound
adc
jcxz
jno
fyl2xp1
inc
sbb
addr16
xor
pop
aad
sbb
dec
js
push
aad
or
icebp
or
cwtl
sbb
and
mov
pop
or
cmpsl
aam
push
jl
shlb
or
xor
inc
jmp
jmp
sarl
std
cs
incb
push
fnsave
push
push
cs
mov
jne
push
sahf
in
push
cwtl
dec
pop
ss
adcb
leave
iret
xchg
sbb
addr16
inc
outsb
cmp
clc
aad
cmc
cmp
icebp
mov
xor
movsl
rcrb
pop
inc
push
jno
xchg
xor
std
pop
add
sub
sbb
mov
incl
fnstsw
adc
hlt
lods
mov
loope
outsl
dec
dec
lahf
mov
add
cmp
mov
push
sbb
loop
inc
imul
leave
std
mov
jo
adc
testl
mov
cmp
loope
out
out
jp
je
int
pop
imul
icebp
jle
adc
wrmsr
pusha
lret
daa
jecxz
lods
dec
stos
pushl
xor
in
ds
mul
mov
daa
or
cmp
adc
out
cmpsl
das
cmpsl
in
test
inc
or
rorl
insb
stos
push
mov
jae
mov
fnstcw
mov
ret
add
or
pop
cli
pop
loopne
sahf
fists
xor
cmpsb
outsl
ret
dec
add
pop
push
icebp
sbb
sub
and
loop
mov
jns
dec
cmp
jnp
xor
lcall
loopne
pop
call
adc
fcoml
cwtl
fs
adc
popa
push
inc
or
icebp
inc
pop
xorl
mov
shrb
rorl
mov
jge
and
faddl
dec
es
add
and
mov
adc
sahf
and
or
dec
cs
cmp
jnp
cmp
mov
in
in
inc
ret
test
sti
dec
ljmp
mov
add
sub
or
inc
scas
pop
mov
aad
lret
faddp
mov
leave
xor
mov
pushl
std
cld
lret
sbb
lcall
daa
dec
int
repz
cmp
popf
sub
jne
mov
cmp
clc
aas
mov
mov
push
mov
loope
mov
and
inc
mov
out
mov
js
repnz
out
jp
clc
je
out
pop
sahf
daa
test
shlb
or
xchg
rcrb
and
cmp
jns
pop
rolb
rcrl
sub
xlat
dec
loop
lods
test
jb
and
int
aam
jae
in
fstps
out
shrb
xor
mov
jbe
adc
push
mov
hlt
or
cmp
fucomp
mov
pop
and
shll
shlb
ret
out
inc
movsb
loop
jns
inc
ljmp
int
pop
lcall
jge
orl
push
pop
pop
jns
cmp
pop
enter
lahf
out
adc
xchg
push
push
hlt
outsb
stos
enter
adc
fdivrp
dec
mov
or
int
arpl
inc
xor
mov
ja
ja
push
mov
fldenv
or
pop
clc
pop
jb
lret
jne
cmp
add
fsubp
aas
inc
sbb
or
lret
clc
mov
rclb
int3
mov
jmp
mov
cmp
inc
fbld
aas
bound
sub
jge
cmp
pop
mov
or
and
xor
mov
mull
cmpsl
aaa
sub
push
cli
adc
xorb
mov
or
in
loopne
das
pushf
jo
mov
mov
xchg
int
mov
cwtl
leave
sub
mov
sbb
mov
stos
into
or
subl
inc
cmpsb
xchg
ja
test
icebp
out
aad
jge
cmp
and
sub
sub
mov
das
jecxz
je
xor
imul
popa
jl
or
scas
mov
scas
test
cltd
mov
pushl
xchg
and
jbe
test
cmp
xor
lock
inc
out
ljmp
xchg
jg
scas
test
pushf
mov
js
mov
dec
cli
rorl
mov
jmp
repnz
outsl
sub
adcl
insb
or
inc
inc
movsl
pop
bound
or
pop
sarl
aas
push
cltd
fs
push
dec
sbb
cmp
push
dec
mov
insb
iret
mov
pop
filds
inc
call
xlat
mov
mov
cwtl
cmp
mov
mov
cmp
adc
fidivrl
or
leave
ds
xchg
sub
out
loop
lret
sub
scas
push
xchg
adc
loope
cld
fidivs
popf
dec
xor
pop
ret
xchg
xor
jo
nop
mov
and
jle
sbbb
xlat
popf
sbb
fcomip
es
cmp
push
adc
lds
jno
cwtl
cld
or
inc
jns
movsb
insb
inc
rolb
fldenv
push
divl
daa
iret
or
push
push
xor
mov
mov
out
jmp
cmpsb
mov
xlat
loopne
and
out
push
mov
pop
add
xor
int3
sub
ror
insl
adc
mov
out
stos
inc
fcmovb
push
sbb
inc
adc
loopne
shr
or
in
add
inc
xchg
mov
aas
jmp
jb
mov
clc
add
ja
mov
mov
and
cwtl
xchg
xor
xor
insb
loope
dec
mov
sbb
jg
jp
idivb
jnp
pusha
dec
mov
imulb
mov
xchg
pop
xchg
mov
insl
clc
or
or
mov
jns
outsb
dec
add
cmc
mov
mov
mov
add
dec
jbe
imul
push
jge
inc
jo
bound
jmp
in
pop
insl
xor
mov
jp
push
push
shrb
sbb
ljmp
lods
popa
iret
xlat
insl
inc
ror
mov
dec
pop
pop
sub
push
pop
push
add
adc
xchg
dec
dec
aam
popa
incb
sub
je
imul
andb
sahf
lds
das
adc
leave
rclb
xchg
xor
mov
sub
pop
aam
jge
or
mov
cld
cmovb
imul
popf
pusha
movsl
lea
jp
or
aam
jno
sub
inc
cmp
outsl
push
mov
popa
pop
and
inc
jle
mov
lcall
jno
divl
js
cwtl
xchg
or
pusha
adc
mov
repnz
jmp
sbb
das
or
and
adc
push
data16
in
stos
js
mov
data16
xor
pop
push
xlat
sub
and
out
outsl
outsb
mov
ficomps
shll
pop
xorb
lea
pop
sar
cmp
rcll
xchg
mov
cmp
jg
outsb
into
push
lock
ljmp
je
mov
orb
pop
xchg
mov
add
fsubrl
movsb
mov
push
cmp
dec
rcll
jecxz
dec
dec
push
hlt
int
adc
xor
es
jg
mov
dec
daa
daa
lret
aad
jo
inc
outsl
out
mov
insb
xor
xchg
xchg
mov
dec
push
ja
pop
dec
mov
dec
fcmovbe
addb
inc
stc
sub
popf
mov
xchg
and
push
push
stos
pop
inc
int3
xchg
inc
test
leave
or
hlt
dec
jp
sti
or
xor
xor
les
or
mov
adc
adc
mov
add
notb
sbb
rorb
mov
lahf
cli
in
adc
neg
lock
jmp
nop
adc
fbstp
cmp
stos
subb
xchg
or
int3
out
xor
ja
fistps
sbb
movsl
mov
push
in
sub
pusha
or
je
mov
cmp
adc
call
outsl
in
mov
aas
movsl
sbb
adc
inc
mov
jno
jecxz
out
jae
out
mov
push
adc
or
lcall
pop
sub
mov
lea
mov
loope
jmp
int
xchg
xchg
mov
and
cli
ret
movsb
dec
xor
xchg
imul
inc
scas
fidivs
arpl
jno
jbe
cwtl
ficomps
mov
sub
divb
popf
xor
adc
and
js
pop
sbb
daa
adc
dec
inc
hlt
xchg
cmp
out
xor
out
jno
stos
mov
in
xchg
mov
xor
cmp
rorl
icebp
ret
mov
aad
mov
mov
jns
pop
icebp
jno
out
push
rcrb
cltd
ret
mov
loope
popa
mov
test
andl
cmp
lahf
mov
les
xor
pop
fisubrl
bound
jb
lahf
lahf
xchg
and
outsl
push
cmp
push
lcall
push
cmp
inc
testl
mov
cmp
pop
xlat
mov
mov
sub
in
insl
in
adc
xor
and
xor
add
in
fpatan
out
in
data16
adc
add
xor
testl
mov
sub
aas
mov
shlb
mov
xor
dec
xlat
xor
mov
pop
negl
pop
cmpsl
stc
jne
stos
pop
stos
lods
and
push
andl
sub
movsl
loope
test
jnp
ds
push
into
and
sbb
lcall
sbb
ret
daa
std
lret
fcomps
rolb
xor
sub
jb
aaa
out
ljmp
ret
mov
lea
jne
mov
lcall
xchg
test
xchg
je
adc
fimuls
push
cmp
insl
cmpsb
jl
fidivrl
pushl
outsb
gs
cmp
adc
inc
leave
pop
jbe
inc
push
sbb
jge
and
hlt
movsl
adc
ja
xor
out
stc
xor
pop
fldt
pop
in
and
fcoml
jmp
inc
cmc
dec
and
pop
adc
pop
loope
notb
fsubp
sbb
xorb
and
imul
push
inc
adc
xor
jbe
cmc
cmp
in
push
jbe
pop
ret
sbb
std
mov
lcall
xchg
ljmp
mov
fnstcw
lahf
nop
aas
dec
lea
sti
cmp
pop
repz
lods
mov
push
js
fisubrl
push
mov
and
es
xor
lcall
jmp
je
lret
xchg
cs
enter
mov
out
xchg
mov
outsb
cltd
enter
test
xchg
popl
mov
mov
daa
pop
cld
int3
js
arpl
test
test
mov
test
jmp
leave
inc
mov
fcmovb
test
out
push
mov
bound
ljmp
rorb
push
cmp
movsb
stos
js
xchg
adc
push
sahf
mov
arpl
push
xor
pop
popa
mov
mov
pop
stc
xchg
call
ss
and
imul
insl
out
push
scas
or
cltd
pop
bound
and
imul
mov
test
adc
xchg
mov
jp
inc
jge
jns
jmp
mov
ficompl
pop
sub
xchg
xchg
xchg
xchg
leave
xchg
movsl
test
sbb
movb
shrl
fwait
sbb
int
jno
outsb
pop
jne
scas
aad
orb
xchg
sarl
or
xchg
into
mov
in
mov
mov
xor
sub
ficoml
mov
shll
add
and
aaa
sar
push
mov
or
adc
and
xchg
push
stos
pop
out
cmpsb
out
mov
loope
clc
lret
mov
frstor
pop
push
mov
jmp
jno
jg
or
push
movsb
cmpsb
sahf
xchg
sahf
cmp
push
cmc
sbb
dec
lea
into
mov
dec
shl
sbb
in
xor
in
aaa
rolb
dec
sarb
fldcw
inc
imul
xor
sub
ds
xchg
cmp
dec
sub
and
inc
call
in
adc
into
jns
xor
mov
adc
mov
pusha
test
inc
jne
aam
push
clc
repz
cmp
in
mov
fdivrl
ljmp
rclb
ljmp
jo
shlb
dec
cmpsl
or
clc
rorb
aas
mov
cmp
cli
int3
add
mov
jecxz
mov
push
push
pop
and
jbe
mov
sbb
push
xchg
das
stos
pop
cmp
leave
idiv
shll
push
mov
in
mov
lea
outsl
int
jmp
ss
ljmp
push
push
aaa
insl
ror
jno
cmpsl
and
insl
lret
sahf
xchg
leave
cmpsb
clc
movzwl
xor
rclb
out
loop
push
popf
inc
add
mov
adc
jno,pn
mov
inc
test
push
out
dec
pop
pop
mov
mov
in
push
xor
cli
sub
and
adc
out
aad
jg
jl
incb
call
adc
xchg
addr16
and
mov
fmul
imul
sbb
cwtl
mov
inc
adc
mov
dec
push
subl
js
add
stc
lock
xor
outsb
dec
push
push
or
jae
repnz
scas
and
xor
sub
aas
insb
scas
xor
ljmp
jo
inc
fucomp
inc
mov
dec
data16
mov
fcomp
shl
cld
mov
sbb
xor
ss
push
outsb
jb
fimull
stc
cmp
push
xor
insl
cmp
stc
cmpsl
push
push
fnop
lea
and
outsb
xor
out
dec
and
inc
popf
fsts
mov
xor
push
jcxz
xor
pop
cld
neg
lea
push
out
sub
xchg
pop
sub
sbb
cmpb
dec
not
mov
movsb
add
push
adc
jne
sub
sahf
pop
leave
js
or
sub
pop
xor
lahf
xchg
mov
or
push
mov
lcall
in
jp
cli
and
sub
mov
stos
loopne
nop
out
or
sub
xor
pop
inc
mov
cmp
xchg
add
add
in
outsl
andl
lea
int
ret
fidivrs
mov
in
sbb
xor
inc
inc
sbb
sbbl
adc
push
push
sbbb
hlt
add
sbb
xor
mov
movsb
call
pushf
dec
mul
push
lea
cmp
icebp
mov
or
add
stos
xor
ss
fucomip
fucomip
ret
lcall
jle
push
out
mov
ljmp
mov
call
stos
mov
cwtl
aaa
add
mov
ljmp
push
movsb
pusha
call
adc
sbbl
xor
and
shlb
into
es
cmp
xchg
jnp
popa
push
and
mov
mov
js
clc
adc
fxch
adc
outsl
jecxz
dec
lret
aas
loop
ror
sti
int3
out
outsb
mov
xor
dec
loope
or
and
cwtl
pushf
fwait
sti
sti
dec
dec
sub
or
inc
add
cmp
push
xchg
mov
or
in
cmp
sbb
mov
lods
daa
mov
jle
test
xchg
testb
sub
hlt
cltd
pop
bound
fcompl
dec
faddl
out
flds
pop
scas
lret
loope
push
shl
dec
in
sbb
xchg
inc
push
jl
cmp
rcrl
cli
sbb
sub
xlat
adc
fbstp
add
lock
cmp
and
push
scas
inc
nop
push
scas
pop
jl
mov
mov
jl
cmp
or
movsb
lods
das
adcb
fwait
in
adc
mov
daa
add
insb
add
xor
shll
or
stos
loopne
sub
xchg
sti
jl
xor
pop
in
movsb
popf
push
scas
adc
sbb
cs
fldt
sub
pop
popa
lcall
jg
outsb
lret
push
or
inc
cmp
les
push
sub
cmp
jmp
pop
cmp
popa
and
inc
lret
out
cwtl
jl
mov
xchg
in
adc
sub
jg
xchg
sbb
push
ljmp
fidivl
aas
inc
test
rcl
lret
rcl
inc
or
mov
outsb
pop
jle
mov
cmp
xlat
insb
repnz
testb
xchg
and
pop
cmpsl
dec
in
and
rcll
cwtl
mov
sti
mov
fnstsw
imul
lds
sub
add
mov
mov
push
dec
push
inc
in
dec
adc
xchg
pop
pop
fdivp
in
mov
stc
sbb
or
mov
lahf
mov
pop
ret
xchg
enter
clc
mov
imul
dec
mov
xchg
jae
lret
pop
pushf
cmp
and
mov
cwtl
inc
inc
fsts
call
mov
sbb
dec
push
int
pop
inc
fdivs
movsb
ret
mov
xor
fisttps
data16
mov
xor
mov
test
xlat
sbb
insl
xor
push
cmp
fiaddl
cmp
pusha
pop
ror
sbb
add
pop
cmp
in
sti
xor
mov
js
sub
cmpsl
inc
mov
xchg
cmp
pop
inc
xor
dec
retw
adc
fsubrs
enter
lahf
inc
mov
xchg
and
adc
mov
push
push
clc
push
push
iret
pop
dec
cltd
or
fdivrs
dec
jecxz
jl
in
xor
out
sub
out
movsl
lds
mov
cmc
jle
lods
mov
lret
mov
fnsave
int3
enter
mov
xchg
adc
sub
mov
xlat
and
into
psubq
xor
flds
xchg
out
add
movsl
and
icebp
mov
out
clc
mov
push
cs
inc
mov
into
push
sub
aaa
aam
add
test
inc
sahf
jbe
aaa
imulb
add
movl
aam
push
sub
mov
orl
cltd
lods
xlat
fcmovbe
ja
insb
sahf
inc
mov
jnp
outsb
inc
xor
lds
push
das
shll
mov
jb
addr16
adc
push
push
dec
lock
xor
sbb
mov
jo
or
xor
ret
mov
mov
mov
sbb
loopne
mov
cmpsl
les
loopne
xchg
adc
push
or
mov
fwait
mov
shr
adc
dec
les
sbb
xor
dec
sbbl
ds
mov
sbb
aam
outsb
push
xor
in
fisubl
lahf
addl
sti
bound
sbb
add
aas
subb
mov
adc
insb
xor
jne
pop
rcr
lea
lcall
stos
mov
or
dec
popf
mov
mov
sbb
dec
out
pop
imul
pop
shlb
cmp
lahf
in
sbb
ljmp
push
sub
xchg
jnp
pushf
call
or
out
enter
int
mov
out
inc
cld
pop
pop
sub
push
lds
lcall
shlb
fstps
push
clc
mov
adc
insl
jne
push
xchg
dec
xchg
mov
hlt
add
std
fcoml
mov
pop
cwtl
xchg
call
fxch
subb
inc
and
shrb
idivb
and
pop
aas
roll
adc
jecxz
cmp
xor
mov
xor
jnp
and
fcoms
cmp
cmpl
and
int3
in
mov
in
lret
pop
sbb
add
pop
aas
pushf
outsl
add
ja
dec
mov
pop
mov
fs
inc
push
popa
adc
in
adc
shll
cmp
ss
adc
call
cmp
sbb
mov
inc
popa
pusha
ljmp
mov
jp
loope
xchg
jge
xor
cmpsl
add
cmc
push
pop
push
in
fwait
inc
out
inc
mov
aam
out
and
mov
adc
dec
xorl
aaa
xchg
or
adc
sub
shlb
mov
jne
jnp
dec
sub
icebp
add
sahf
cld
dec
dec
rorl
pushf
std
inc
loopne
fldl
nopl
shll
cmpsb
fs
fsts
sbbb
push
and
stc
pusha
pushl
sbb
cli
mov
movsl
add
inc
fstl
mov
add
mov
rol
jne
jg
mov
pushf
pop
pop
repnz
jl
decb
xchg
and
mov
shll
sub
popa
idivb
push
mov
lock
xor
subb
movsb
mov
out
outsl
lock
imul
repz
push
xchg
lret
mov
pop
adc
xchg
nop
repnz
cmp
pop
loope
jecxz
in
lock
sub
call
push
inc
ret
add
mov
xor
fdivrs
mov
cmpsl
test
fistpll
sbb
pop
jg,pn
jo
lea
icebp
pop
popf
stos
pop
xor
and
pop
or
jns
rorl
fsubrs
repz
sub
jo
lret
mov
test
mov
xchg
jae
jp
lock
mov
push
call
cmp
xor
pop
fisubrs
fisubrs
jmp
hlt
sbb
adc
mov
enter
push
lock
loope
mov
xchg
ficoml
jno
ficompl
in
call
and
out
push
cmpsb
sbb
adc
cli
xlat
scas
and
xchg
xchg
adc
mov
inc
push
xor
aad
push
hlt
ja
lock
clc
xorl
insb
out
fcoml
outsb
sbb
fistpl
mov
mov
loope
push
and
test
gs
fiaddl
inc
mov
arpl
and
xchg
int
sahf
jnp
jbe
sbb
repnz
jo
inc
xlat
es
pop
jg
adc
mov
call
inc
cmc
mov
sbb
nop
pop
adc
dec
mov
inc
popa
pusha
stos
imul
pop
mov
repz
out
pop
pop
or
fildl
test
repz
rclb
scas
fwait
movsb
xor
or
call
inc
mov
xor
cmp
es
ss
jmp
sub
lret
adc
stos
out
js
xchg
lds
and
and
std
xchg
mov
aad
sbb
push
mov
push
in
movsl
jle
mov
jno
jb
mov
mov
outsb
sub
add
mov
mov
lahf
jmp
lret
sti
sub
cmpsb
or
sbb
pop
test
mov
pop
jno
pop
sub
test
enter
jae
add
stc
add
jecxz
daa
pop
addr16
mov
popa
data16
sbb
dec
lret
adc
dec
fcmovb
add
cmp
dec
pop
mov
maxps
push
test
jns
shll
jg
bound
mov
mov
add
test
fiaddl
dec
pop
add
mov
dec
mov
mov
loope
xchg
mov
movsl
cld
lret
outsb
fwait
sahf
mov
popf
in
fucom
cmp
mov
stos
mov
jbe
outsb
into
pop
aas
sbb
fmul
int
ljmp
cmp
dec
and
add
adc
add
loop
fs
ret
mov
data16
sub
mov
cmp
adcb
lods
adc
mov
movsl
aad
jmp
je
xchg
dec
data16
andl
mov
mov
inc
cs
popa
outsl
leave
scas
and
push
stos
out
xchg
icebp
fxam
andl
mov
stc
loop
xor
lea
test
out
in
mov
or
stos
push
adc
xchg
outsb
sub
dec
lcall
adcb
shl
jl
aam
outsb
ljmp
subb
and
shl
fsub
cmp
inc
push
adc
repnz
pop
jge
cmp
mov
imul
sub
dec
inc
ljmp
dec
iret
call
adc
adc
dec
gs
add
iret
pop
push
jecxz
aaa
push
sbb
pop
jbe
jecxz
or
adc
out
mov
or
cmp
in
das
and
or
scas
xchg
jge
pop
enter
fwait
and
adcb
mov
adcb
dec
cmpsl
and
int
push
and
add
rcl
iret
pusha
aam
imulb
cmp
add
int
mov
hlt
jg
movsb
mov
and
jbe
mulb
cmpsb
push
and
mov
sarb
or
scas
fcomps
mov
xor
call
sub
notl
xlat
add
and
std
movl
or
cs
inc
xorb
push
cmc
inc
xor
les
xchg
pop
push
pop
or
cmc
mov
icebp
repz
pop
sahf
add
adc
outsb
mov
dec
or
rorb
sub
lods
sbb
sbbl
call
addr16
and
lret
or
mov
xor
mov
je
push
daa
ret
incl
push
cmp
pop
imul
std
sarl
test
sub
rcll
mov
pop
jge
dec
nop
pop
shr
pop
pop
lock
dec
lds
int3
xchg
cmp
mov
mov
insl
aam
or
mov
lahf
addr16
xchg
adc
adc
into
fs
out
and
cld
stos
add
out
mov
mov
les
dec
pop
xor
push
adcb
and
jecxz
lret
push
pop
subl
int
cmp
fwait
cmp
insb
and
fsubl
scas
mov
and
rcrl
flds
adc
xor
js
out
sub
lods
sbb
gs
mov
lcall
inc
and
inc
outsb
mov
push
das
ljmp
inc
adc
sbb
push
add
push
adc
inc
push
mov
sub
dec
adc
or
mov
test
cmc
dec
mov
push
mov
lods
add
fidivs
mov
aam
cmp
and
fadds
sub
inc
mov
jae
movsb
sub
je
das
mov
inc
fidivs
mov
cmpsl
cmovo
and
cmp
inc
jmp
pop
repnz
insl
dec
lods
stos
int
push
pop
and
aaa
fcoml
and
xchg
inc
adc
ds
pop
push
sub
cmp
inc
popa
push
sub
in
insl
mov
int
imul
inc
insl
pop
and
push
clc
in
push
or
ja
cmp
add
cltd
add
add
into
mov
not
mov
push
sub
mov
pop
dec
fwait
push
adc
pop
push
dec
xor
les
add
lret
das
cwtl
notb
xor
xchg
je
mov
and
inc
pusha
inc
fcomip
xchg
sbb
dec
fisubl
push
xor
lret
ret
insb
dec
insl
mov
icebp
enter
loopne
ret
hlt
loopne
mov
and
aad
push
cwtl
xchg
pop
aam
nop
and
dec
adc
shll
push
dec
mov
ljmp
mov
dec
int
sbb
cld
inc
inc
inc
add
push
test
push
lock
jb
das
pop
mov
repnz
into
divl
es
jp
and
sub
lret
adc
scas
adc
enter
test
pop
in
jecxz,pn
jge
out
fcomi
pop
int
adc
nop
jns
push
fisttpll
aad
ret
int
lcall
fisubl
ret
cmp
std
addr16
adc
jle
sbb
dec
xchg
and
pop
adc
jnp
aam
shrl
hlt
and
mov
or
outsb
ljmp
xchg
sbb
aad
xor
push
ss
js
ja
dec
xchg
hlt
in
dec
cld
aaa
imul
repz
cli
lds
pop
fsubl
icebp
lds
gs
lea
inc
int
xchg
cmpsl
jg
push
call
xchg
mov
mov
das
cmp
push
add
std
cmpsb
sub
nop
test
mov
cs
add
jp
push
jae
inc
mov
ret
in
sub
cli
add
mov
mov
push
jmp
mov
shlb
jno,pt
je
or
xlat
fwait
dec
sub
jae
rclb
cs
loop
lcall
test
mov
dec
jae
lock
pusha
sbb
leave
daa
rorb
or
out
push
and
hlt
in
cwtl
adc
fsubrs
or
mov
dec
clc
ss
fcoml
fmull
or
in
cmpsl
clc
xchg
dec
mov
ss
add
or
scas
lds
fildll
in
or
nop
dec
inc
inc
jns
aam
fucompp
fcoms
insl
jae
and
fildll
xor
mov
push
mov
stos
add
push
ss
mov
je
test
jae
xchg
mov
lods
nop
test
cmp
rcl
out
ljmp
xchg
in
ljmp
push
fcomp
lds
xchg
stos
inc
mov
call
xor
ja
nop
jle
fdivrp
scas
stc
mov
jno
mov
cmpsb
mov
xchg
sbb
jecxz
pop
cmpsl
pop
sbb
mov
adc
push
insb
ret
inc
mov
and
icebp
add
push
stc
aam
sub
push
adc
cmp
ds
cmp
push
mov
mov
sub
mov
insl
mov
outsl
mov
mov
and
pusha
leave
aam
and
in
std
test
cs
scas
mov
jle
dec
in
bound
mov
rcl
clc
push
in
aaa
push
int
enter
scas
cltd
aas
movsl
fwait
inc
or
jle
mov
push
inc
cwtl
jbe
mov
ficoml
xor
cmpb
adc
data16
mov
add
icebp
xchg
mov
or
mov
lret
dec
xchg
dec
or
cs
sub
mov
mov
enter
mov
mov
push
push
fs
das
push
mov
ja
mov
cmp
aam
dec
cvtps2pi
dec
ds
adc
cmp
lds
jb
mov
addl
jecxz
ffreep
push
in
cmp
rclb
mov
ficoms
fldl
aad
cmp
jg
mov
orb
ds
aas
icebp
push
leave
and
xchg
mov
xlat
cltd
jae
push
lret
cwtl
insb
fstps
imul
xchg
xchg
pop
or
shlb
cmp
not
in
cltd
and
mov
cmpsl
testl
cli
mov
jo
inc
dec
cltd
xchg
sbb
adc
xchg
test
dec
movsl
mov
dec
dec
js
dec
adc
lret
mov
lea
pop
dec
sub
jp
or
cmp
hlt
inc
es
ljmp
lahf
fs
std
xchg
push
insl
mov
xchg
outsl
push
out
scas
loope
aam
pop
clc
test
imull
push
mov
mov
rorl
icebp
xchg
in
ret
sti
clc
ret
lret
leave
insb
andb
mov
adc
cmp
mov
inc
or
inc
push
out
adc
add
pop
pop
mov
imul
and
push
inc
fucomip
and
repz
sbb
cmp
xor
insl
mov
and
out
ja
pop
jecxz
mov
inc
or
add
inc
daa
adc
out
or
sti
pop
dec
adc
mov
cmp
and
scas
lods
push
pop
gs
daa
daa
mov
or
mov
or
les
mov
lret
aad
mov
mov
and
leave
xor
and
sbb
lcall
xor
ds
inc
cmp
into
repnz
iret
push
jae
imulb
adc
cli
inc
std
fistps
cwtl
mov
test
mov
sahf
lods
repz
stos
rcr
jns
sbb
add
repz
leave
xchg
js
lock
not
icebp
jb
jnp
imul
push
xchg
int3
jae
lea
jae
mov
push
xchg
bound
rorb
push
add
adc
xchg
push
mov
cs
insl
ret
sub
js
icebp
repz
cmp
out
or
inc
stos
mov
push
add
lahf
mov
sbb
push
jbe
xchg
hlt
and
add
dec
xchg
fisttps
inc
xor
andb
stc
sarl
mov
xor
and
sahf
push
in
push
xchg
loopne
xchg
test
cltd
arpl
jb
lahf
hlt
popf
icebp
lock
pop
xor
daa
int3
cs
test
mulb
rcrl
cmp
jle
sbb
outsb
test
ss
cmp
jne
fdivrl
sub
fadds
inc
insl
fbstp
je
pop
ss
xchg
and
add
stc
fldcw
ljmp
mov
fisttps
pushf
fistps
push
ljmp
cmpsl
push
rorl
mov
out
sub
or
iret
mov
sbb
dec
xchg
les
dec
xchg
sahf
push
loopne
mov
jle
inc
jbe
mov
dec
push
cmpl
dec
add
rolb
push
bound
dec
fwait
jne
cmc
dec
cmp
jns
or
aas
test
loop
adc
xchg
and
dec
xchg
movsb
out
sbb
sub
or
inc
enter
mov
pop
insb
cmpsb
sarl
std
or
sub
test
xor
or
jle
shll
pop
xchg
enter
mov
xchg
pushf
add
adc
or
pop
jg
xchg
jle
pop
sbb
subb
pop
add
pop
sti
test
or
lret
outsb
xchg
inc
ret
xchg
lock
leave
and
xchg
shr
sbb
cmp
orl
cmp
ja
daa
xchg
dec
call
sbb
out
subb
add
xchg
lret
ljmp
inc
xlat
xor
push
mov
push
repnz
bnd
outsb
push
mov
pop
mov
stos
test
aaa
test
push
pop
adcl
xchg
mov
sub
push
cmp
nop
loop
mov
popf
cmp
jecxz
dec
sbb
scas
outsl
xchg
push
dec
cmp
pop
sahf
mov
sbb
faddl
or
stos
cmp
ret
fsubrl
adc
in
imul
les
imul
jge
rcrb
jle
addr16
push
adc
sarb
icebp
lods
xor
imul
mov
xchg
gs
push
loopne
clc
in
push
jmp
sub
insb
sbb
sahf
mov
clc
adc
scas
push
ja
jb
sbb
sub
sbb
jecxz
xorl
mov
and
bound
mov
cmpsl
std
sbb
enter
stos
shl
mov
fwait
pop
pop
outsl
test
arpl
sub
push
mov
in
fidivs
push
and
popf
arpl
xorl
int3
fwait
or
jmp
imul
jmp
decl
loop
inc
inc
mov
in
clc
test
xchg
ret
mov
dec
insl
mov
xchg
pmaddwd
sub
mov
pop
mov
into
mov
sbb
mov
xchg
loop
cs
imul
mov
jb
mov
pop
xchg
cmc
mov
je
mov
lcall
cmp
andl
xor
xchg
stos
rcl
pop
mov
cmp
fsubrl
outsl
pop
adc
out
dec
pushf
push
mov
inc
mov
out
and
ret
int
icebp
out
sahf
mov
jmp
in
dec
subl
out
test
jo
pop
inc
dec
insb
mov
rcl
loopne
aam
shll
rcl
add
popf
adc
movsb
and
sub
repnz
rcr
xor
leave
idivl
inc
jb
imul
jmp
mov
imul
bswap
or
mov
ss
mov
cmp
testb
stos
mov
inc
or
dec
ja
sbb
cmp
push
out
loop
dec
jmp
xorb
mov
dec
cli
or
cmovg
cwtl
lret
pop
jne
sub
mov
ljmp
sti
inc
mov
mov
pop
aas
out
stc
bound
rorb
dec
pop
adc
add
cld
dec
xor
insl
or
lds
cmpb
cmp
faddl
mov
pop
insb
in
pop
jle
movsb
xchg
insl
mov
hlt
shlb
inc
cmc
hlt
jns
mov
push
cld
mov
out
sub
in
add
sub
sbb
jecxz
xchg
mov
aam
add
andl
sbb
lods
es
ss
cmpsb
cmpsl
mov
adc
add
shlb
rcrb
iret
lods
stos
add
idiv
push
pop
fdivr
std
xor
mul
hlt
and
pop
dec
stos
lds
xchg
push
xor
jp
mov
aad
js
jne
dec
jne
stos
jnp
cli
xchg
lret
push
mov
sub
pop
pushf
push
xlat
jnp
arpl
mov
gs
jae
push
push
enter
pop
or
out
lods
pop
mov
sbb
aad
add
cmp
push
cs
outsl
test
sbb
sub
rcrb
ja
nop
aam
xchg
xchg
mov
sbb
fst
lock
and
sahf
or
or
repnz
pop
stos
leave
mov
xor
rolb
mov
push
dec
inc
movsl
fxch
clc
or
mov
fadds
jp
popl
daa
icebp
test
and
dec
lcall
into
xchg
mov
out
pop
std
sub
mov
xor
adc
mov
enter
lds
hlt
stc
sub
add
mov
cmp
loop
cltd
enter
and
sti
sub
mov
xchg
and
flds
sub
mov
add
pop
cmp
jmp
dec
xor
stc
fldl
mov
push
push
dec
and
sbb
push
and
clc
pop
jecxz
dec
mov
fcmovne
pop
cmp
fstps
jo
pop
mov
ficoml
nop
inc
movsb
add
stos
call
outsl
daa
sub
jecxz
rcrl
and
dec
xchg
rcll
mov
push
xorl
movsb
lock
in
sub
fcmovu
aam
ret
push
cld
dec
dec
hlt
dec
push
hlt
fnstenv
inc
xor
popa
push
movsl
xchg
jl
adc
hlt
adc
jmp
sbb
jge
jmp
loope
mov
and
test
mov
mov
push
xchg
push
cmpsb
adc
jp
into
scas
inc
xchg
sbb
cmc
outsl
push
cmp
sbb
call
stc
andl
xchg
test
push
divl
xchg
mov
push
adc
fisttps
sub
xor
lock
xchg
sahf
cmp
push
movsl
fiaddl
or
cmp
test
outsb
popl
add
das
sub
fcompl
dec
push
push
jae
shll
xor
lds
cmp
das
cmc
push
xor
lret
xchg
lret
pop
mov
rolb
stc
push
test
add
rcl
das
test
or
adc
pop
add
in
mov
pop
mov
mov
dec
mov
insb
movsb
push
jecxz
add
inc
enter
popa
pop
pop
mov
lcall
mov
adc
cltd
jmp
repz
xchg
pushfw
rcrl
push
lods
sub
repnz
int3
outsb
insw
fcomps
imul
in
sbb
xchg
inc
xchg
notl
out
dec
mov
adc
xlat
ficoms
jp
pop
or
in
xor
fsubs
ss
mov
mov
jecxz
out
sub
test
lcall
gs
imul
andb
push
xor
ret
ficoml
orb
xchg
jge
xor
add
push
pxor
or
leave
pushw
cli
loopne
inc
mulb
cs
xchg
das
js
call
mov
outsb
or
test
push
xchg
cmc
inc
hlt
and
jne,pt
xchg
std
cwtl
and
loop
popf
ret
ljmp
sbb
mov
sbb
xor
jns
data16
and
jb
int
sbb
push
mov
push
je
or
jno
out
push
aas
mov
adc
fs
push
dec
jne
leave
or
jnp
dec
cmp
dec
shlb
das
mov
in
dec
imul
cwtl
sub
add
aad
jge
cmp
sahf
and
pop
pop
rclb
js
or
iret
xchg
fstl
es
sub
scas
test
jne
rol
ret
xchg
into
or
fabs
ss
cmp
sub
cld
hlt
daa
dec
ss
mov
mov
cmp
xchg
mov
pop
cmp
mov
sub
adc
ret
popf
inc
imul
or
mov
js
inc
frstor
int3
cltd
mov
jmp
and
cmpsb
or
loop
ds
mov
push
push
jle,pt
push
cmp
jb
es
ljmp
lock
ja
lods
adc
add
ss
scas
dec
fisubs
addb
mov
lahf
loop
out
jle
lds
ss
push
or
xacquire
pop
inc
xchg
mov
aas
adc
divb
sbb
test
cltd
enter
jns
pop
and
nop
mov
rcrl
add
call
xchg
fs
aaa
loope
mov
xchg
aad
dec
cmp
pop
jb
jb
sbb
lds
dec
aam
push
and
sbb
mov
xlat
fs
dec
pop
or
inc
adc
sub
xchg
les
aas
mov
sub
or
cwtl
mov
leave
xchg
jb
lret
or
out
sub
jp
jl
jmp
cmp
sub
das
mov
rcr
pop
fildll
iret
ljmp
call
das
jmp
xor
inc
sub
fildll
xchg
mov
mov
xlat
jnp
aad
data16
daa
sbb
insb
daa
and
cmp
push
jg
xchg
addb
push
mov
lods
aam
out
pop
xchg
jb
scas
mov
pop
jae
iret
and
inc
mov
mov
lds
push
jbe
lods
mov
and
lret
sub
fsts
pop
testl
bnd
insb
imul
jno
xchg
shll
sub
jmp
loope
rorl
ds
rorb
cmp
loop
mov
popa
or
add
mov
stos
iret
into
je
mov
jmp
adc
cmp
rcrl
scas
add
pop
pop
loope
jmp
jmp
adc
ficoml
mov
xor
cmp
test
mov
inc
add
sbb
scas
out
out
lea
cmpsl
sub
mov
jge
sub
rclb
sub
repnz
and
push
repz
cmp
out
xor
jns
testl
push
lds
rclb
lcall
push
fidivl
mov
idivl
or
pop
push
cmpsb
push
adc
push
sti
dec
inc
jl
scas
cmpsb
or
stos
add
and
idivl
push
out
sub
fdivp
and
fisttpll
shlb
incb
push
fisubrl
lea
daa
gs
bound
cli
js
cmp
xchg
sarl
or
faddl
xor
lahf
ret
and
pop
jns
imul
outsb
mov
fiadds
shlb
and
jl
call
rolb
repz
pop
paddw
shll
lds
aam
mov
or
icebp
pop
ret
mov
icebp
or
sbb
cwtl
jge
scas
pop
sbb
adcb
cmp
mov
mov
sbb
pop
sub
mov
add
jae
or
mov
rorb
rclb
xor
stos
shr
bound
repnz
sbb
mov
ds
test
addr16
sbb
out
enter
sarb
add
inc
jno
add
xchg
andb
fdiv
cmp
hlt
mov
push
xchg
in
push
ljmp
ds
adc
xchg
repnz
ljmp
cmovle
mov
dec
mov
cmpsl
cmp
dec
jecxz
xchg
jo
adc
test
aam
shrl
ret
aaa
add
mov
in
fcoms
stc
pop
repz
pop
jle
cli
jle
mov
xchg
lods
stc
mulb
mov
out
bound
cwtl
push
sub
or
aas
push
lds
daa
pop
jnp
mov
dec
aas
xchg
pop
dec
int3
in
jae
xlat
repnz
outsb
insl
jne
aam
dec
mov
adcl
ljmp
xchg
movsb
dec
pop
fisttps
jns
push
gs
mov
dec
pop
push
and
xacquire
cmovo
sbb
xor
fdivl
or
mov
adc
mov
cltd
mov
sub
push
daa
mov
sbb
jne
jae
cmpsl
inc
loop
mov
repnz
ret
push
dec
repnz
and
shlb
loopne
push
pop
test
mov
and
sbb
aas
jno
or
mov
test
jbe
mov
out
push
jo
mov
lds
in
adc
and
out
mov
inc
mov
lock
lahf
inc
jge
outsl
int3
cld
popa
pop
inc
mov
andb
jle
mov
or
mov
mov
movsb
iret
inc
and
stos
out
inc
or
pop
hlt
mov
xor
jg
mov
addr16
jmp
jg
inc
xchg
or
into
cmpsl
cs
or
sub
jbe
dec
xor
add
pop
fidivl
sbbb
negl
and
and
add
pop
es
rorl
mov
dec
cmp
ss
incb
sbb
outsb
xor
jp
mov
rol
test
push
aaa
lahf
cmp
inc
aas
sub
data16
or
es
lods
in
pusha
jecxz
add
je
adc
repnz
jecxz
add
add
lret
in
mov
adc
add
lods
test
xlat
into
push
pop
sub
mov
insb
add
jb
jecxz
inc
mov
lea
jl
aad
ret
cmp
fisubrs
xor
inc
sbb
xor
out
in
mov
movsl
subl
xor
cmc
psraw
pop
fcmovbe
icebp
outsb
mov
movsb
js
jge
inc
and
and
pop
and
in
aas
and
and
sub
outsb
cmpl
jmp
subb
das
insb
adc
or
pop
int3
std
jge
fdivrl
mov
jg
and
bound
sti
pop
inc
push
lods
mov
sub
fadds
inc
mov
xlat
xor
push
andb
xchg
loop
mov
fldenv
aam
pop
nop
cmp
imul
mov
mov
mov
scas
adc
out
cmp
test
lret
pop
cmpsl
jbe
pushf
xchg
xchg
insb
mov
xchg
jecxz
cmp
pop
lds
push
mov
fbstp
sar
push
jbe
fdiv
subl
push
sarl
ljmp
movsb
sub
xchg
jecxz
adc
imulb
ja
xchg
sub
in
sub
and
sbb
mov
popl
in
cwtl
loope
scas
push
les
push
sti
arpl
fs
ss
nop
mov
push
xchg
xchg
jecxz
idivb
add
incb
push
bound
jns
loop
cmp
cmp
xchg
xchg
inc
jecxz
push
clc
bound
sub
inc
enter
pop
jno
push
xor
outsb
mov
pop
fiaddl
notl
stos
fcompl
fstl
cwtl
mov
ss
lds
movsb
aas
xor
out
and
leave
mov
lahf
pop
or
or
out
or
push
shll
in
pop
dec
repnz
dec
or
mov
push
cmp
xor
into
es
mov
mov
push
push
jne
movsb
sub
sbbl
xor
jbe
cmp
xor
fwait
cmp
mov
or
daa
cmc
push
in
cmp
cld
stc
bound
sti
adc
mov
lea
adc
aas
std
das
pop
imul
jge
cltd
xchg
in
adc
mov
repz
mov
mov
mov
cmc
daa
nop
movsb
dec
cmp
loope
lds
stc
imul
ss
pop
adc
cmp
addr16
and
cmp
lock
loop
arpl
lock
lahf
pop
push
test
mov
gs
popa
sti
subb
mov
sbb
mov
bound
nop
or
loope
cmp
cltd
jmp
imul
inc
push
sahf
fwait
scas
nop
daa
nop
adc
div
and
mov
mov
dec
stos
lods
and
loopne
ret
add
call
sbb
and
in
mov
xlat
or
call
pushf
adc
add
daa
sub
cmp
test
aas
cmp
mov
adcb
push
rcrl
adc
aam
push
xchg
xchg
mov
xchg
xorb
mov
push
loope
cmp
ret
daa
or
dec
lods
mov
mov
fimuls
or
jecxz
js
and
mov
sub
add
clc
xlat
xchg
jp
mov
out
shlb
cmp
add
xchg
cwtl
mov
popa
test
or
dec
xor
mov
je
in
in
and
push
cmc
xor
pop
je
mov
into
lret
xor
popa
js
fldt
in
pop
out
mov
or
out
pop
or
aam
cs
addl
inc
ror
movl
rcrl
sub
sub
and
ds
jb
fnstenv
jo
inc
mov
int
jg
dec
cmc
in
int
test
cmp
mov
out
sbb
sbb
mov
int
mov
lods
add
push
mov
add
test
lahf
xchg
imulb
iret
mov
int
cwtl
sbb
aas
dec
bswap
movsb
mov
popf
dec
shlb
ficomps
pop
add
stos
ss
pop
add
or
test
adc
adc
mov
mov
inc
push
loopne
mov
xchg
testl
adc
into
cltd
and
es
mov
push
adc
mov
dec
in
mov
dec
cwtl
or
sti
xor
mov
sub
mov
fwait
imul
push
gs
mov
enter
fldenv
in
sbb
mov
cmc
jo
addl
push
arpl
lret
mov
inc
test
cmp
out
mov
mov
ss
xor
add
add
pop
std
or
out
adc
mov
sub
mov
jmp
stos
test
cmpsb
cmc
push
bound
test
dec
hlt
jno
dec
aad
inc
push
dec
mov
ret
sub
loope
loopne
and
jns
out
sbb
mov
lcall
xchg
push
test
ret
testl
repz
mov
inc
cmpsl
and
nop
stos
pushf
push
in
adc
in
lahf
cmc
sbb
out
xlat
pop
pop
sbb
pop
jns
jmp
xlat
mov
fisubs
push
pushf
stos
aaa
or
mov
shr
cmp
or
xchg
xor
loop
aad
fiaddl
mov
ljmp
daa
ror
add
jg
mov
aam
and
loop
xor
fidivrl
jl
jg
pop
push
pop
sub
mov
fcmovbe
mov
dec
and
mov
push
adc
daa
rorl
fwait
sbb
shrl
push
jnp
ret
mov
div
out
dec
pop
cmp
out
or
ds
mov
imul
pop
fnstcw
push
rol
icebp
xor
push
cmc
cmp
faddl
add
enter
dec
out
mov
ljmp
pop
in
xor
bound
add
inc
pushf
or
pop
push
adc
mov
push
insl
add
pop
pop
dec
mov
insb
or
in
mov
dec
push
add
mov
or
dec
xor
adc
add
cmpsb
sub
jne
mov
dec
stc
jmp
jmp
pushf
push
int
or
gs
xor
outsb
and
lea
mov
sbb
scas
adc
sub
insl
mov
dec
mov
setle
mov
fcmovu
jmp
orb
add
adc
adc
adc
adc
push
pushf
test
inc
insb
fs
ficompl
call
ss
in
loopne
push
mov
pop
aad
enter
mov
test
dec
cmp
inc
mov
pop
bound
cli
scas
sbb
aaa
and
mov
jo
cld
out
xor
mov
orl
add
je
mov
popf
or
cmp
dec
int3
mov
mov
call
adc
cmp
xor
fdivl
popf
xlat
xchg
mov
mov
imul
mov
sub
andb
cmp
clc
pop
nop
negb
je
inc
in
mov
mov
stos
jae
test
pop
orl
cmp
mov
ljmp
sub
mov
xchg
adc
push
pop
xchg
jno
cli
jl
ret
lods
add
shrl
or
push
pop
enter
mov
dec
push
pop
sti
in
aad
inc
mov
push
movsl
rcl
push
mov
mov
adc
add
jnp
jecxz
nop
movsl
mov
push
add
repz
inc
jecxz
xorb
xchg
add
ret
data16
xchg
dec
sub
int3
push
inc
xor
adc
cwtl
add
add
mov
std
sub
ljmp
push
lret
call
add
mov
imul
fsubr
adc
mov
repz
dec
add
sub
fmull
jae
pop
dec
cmp
dec
or
shlb
sbbb
jne
imulb
por
dec
sub
mov
pop
inc
leave
dec
popf
mov
push
dec
test
xchg
rclb
sarl
fidivl
cmpsl
sbb
popf
sbb
dec
cmp
xor
loopne
sahf
or
dec
inc
lds
mov
rolb
jp
mov
iret
sub
xchg
movsl
lret
push
xchg
mov
imul
xor
divb
sub
mov
sbb
and
outsl
and
in
jle
inc
mov
fldcw
std
cltd
and
adc
push
pop
jge
mov
movsb
pushf
inc
cmp
mov
dec
in
push
gs
cmp
push
imul
pop
push
inc
fnsave
sbb
call
outsl
js
or
cmp
inc
pop
repnz
testb
into
es
ficompl
pop
add
test
idivl
insl
pop
enter
and
in
push
fwait
add
mov
sti
js
faddl
imul
xchg
adc
xchg
je
insl
insb
aam
rcr
inc
mov
popa
jge
cltd
sti
iret
pusha
clc
faddp
jae
mov
push
add
into
dec
pop
stos
pop
test
jecxz
pop
hlt
cmc
dec
mov
xchg
cli
inc
cmpb
mov
mov
ja
push
cmc
cmp
ja
sarl
push
sub
out
sub
mov
mov
jl
ficomps
push
out
mov
xchg
inc
stos
inc
xchg
call
enter
adc
testb
stc
cli
or
sub
push
adc
arpl
out
shll
mov
push
dec
loopne
jbe
aam
aad
jb
stos
sub
roll
lods
nop
dec
dec
sbb
arpl
mov
bound
cli
pop
bound
adc
dec
cmpsb
enter
inc
fwait
or
cmp
iret
pop
pop
fdivp
pop
in
inc
subl
jns
enter
outsb
enter
xchg
push
fnstcw
mov
ljmp
subb
stc
out
out
push
jl
inc
fsubs
aam
ja
outsb
aam
dec
lret
pop
frstor
les
sbb
jo
fisttpll
pop
out
and
test
daa
into
fcomp
loopne
xchg
cli
push
inc
jecxz
popf
push
xor
pop
mov
lret
stos
sti
or
std
outsl
sub
and
inc
cmpsb
jmp
pushf
xor
pop
movsl
fucom
fcomi
and
or
fcoms
enter
sbb
or
cmp
fisubrs
mov
in
inc
popf
lds
cmp
cmp
fbld
jecxz
inc
xor
aas
jmp
sbb
mov
lahf
imul
mov
test
popa
pop
out
leave
push
adc
push
and
rclb
ret
rcr
sub
loop
std
pushf
dec
std
cwtl
cbtw
dec
ss
insl
ud2
add
mov
cmp
mov
add
cmp
clc
es
testb
xchg
out
pop
cs
jb
mov
repnz
mov
xor
cmc
or
dec
jg
push
leave
mov
sbb
daa
out
outsb
pusha
dec
cmpxchg
pusha
aaa
mov
sbb
test
mov
shl
loopne
mov
pop
mov
add
pushl
add
jecxz
xor
adc
addl
dec
mov
in
idivl
bound
jbe
xchg
lods
js
movsl
sub
push
jp
jmp
lahf
add
mov
shrl
jnp
lret
je
out
shll
outsb
iret
pushf
fmulp
ss
daa
lock
push
fwait
xchg
in
add
fdivp
scas
or
adc
mov
add
out
loope
scas
mov
add
lods
push
jp
xchg
push
dec
or
sbbb
mov
rcrb
pop
pop
popa
sub
aas
inc
loop
dec
aaa
fisttpll
and
out
cld
mov
pop
pop
and
inc
xchg
ljmp
popa
out
add
je
dec
mov
xchg
pop
outsl
xor
es
repz
cltd
add
scas
rclb
inc
mov
mov
sti
mov
sub
adc
xchg
lods
xchg
mov
inc
gs
dec
mov
pop
ja
pop
xchg
mov
jg
scas
adc
fwait
ret
rcrb
mov
mov
mov
imul
pop
or
mov
test
bound
cli
add
add
sbb
xor
lret
scas
xchg
lods
pusha
je
push
cmpsl
ret
std
addl
push
sbb
jl
out
insb
mov
cmp
inc
cmpsb
mov
cmp
pop
mov
sub
jle
pop
mov
or
icebp
xchg
sub
addl
mov
cld
pop
mov
push
shll
mov
add
mov
pop
iretw
rcrl
sub
cli
xor
xor
nop
dec
xor
mov
nop
mov
test
int3
push
hlt
xchg
je
aam
out
bound
inc
bound
push
inc
adc
fidivrl
hlt
mov
das
dec
mov
push
popf
in
popf
fisttps
sub
shll
out
xchg
pop
and
cmpsb
inc
jne
push
hlt
push
les
mov
xor
sub
jle
dec
sbb
ss
adc
into
lods
lods
pusha
lahf
xor
add
mov
rolb
sbb
lock
loopne
xchg
call
pop
enter
xchg
push
in
outsb
popa
int3
mov
outsl
push
call
fisubs
mov
out
dec
fildll
xor
mov
mov
pop
rep
jns
sbbl
xchg
shl
push
cmpsl
into
sbbb
push
xchg
mov
and
hlt
adc
je
jp
sarb
insl
or
daa
dec
mov
inc
sub
aam
mov
repnz
dec
or
lret
xchg
addr16
test
sti
lea
dec
mov
cli
out
and
push
xchg
popa
out
mov
andl
mov
int
les
and
xchg
enter
pop
or
or
pop
rep
mov
add
cmp
mov
aaa
xlat
ret
stos
xor
inc
pop
bound
xchg
addb
shrb
mov
xchg
imul
dec
adc
push
mov
cmp
sub
xchg
jb
jl
mov
insb
les
xchg
lcall
loopne
inc
mov
sbb
mov
movsb
xchg
test
and
cmpsl
and
movsb
shrl
dec
cmpsb
xchg
arpl
or
repz
pop
insb
rclb
ss
pop
ret
notl
sub
mov
jb
mov
test
dec
adc
in
dec
mov
les
xchg
sbb
mov
dec
movsb
inc
sbb
cmp
lds
lds
test
jmp
lret
addb
mov
ja
add
pop
mov
jg
std
andl
data16
mov
mov
jno
or
and
out
lcall
jo
mov
fistl
sub
and
mov
in
mov
out
and
scas
sbb
push
inc
adc
in
scas
cs
push
inc
add
data16
in
jle
dec
and
xlat
leave
arpl
inc
fcomi
adc
fldcw
mov
shll
popa
stc
and
mov
mov
dec
sub
cwtl
dec
sbb
add
fcomps
mov
mov
sub
mov
sbb
mov
or
rcrl
mov
int
xchg
xchg
dec
out
rcl
loopew
xchg
fld
cmp
adc
mov
push
jl
jmp
pop
pusha
daa
gs
lahf
xlat
push
call
xor
jl
pushf
push
ret
sub
or
xchg
cmpl
test
mov
jle
hlt
xlat
add
in
cmpsb
mov
fbld
shrl
int3
ret
jnp
sub
or
jge
daa
cmpb
gs
in
movsb
cmp
das
push
jbe
jecxz
mov
inc
gs
sahf
insl
shll
icebp
pop
dec
inc
mov
call
and
add
fistps
sbb
jns
stc
xor
mov
scas
mov
stc
shrl
repz
fwait
xchg
dec
xor
fucomp
mov
pushf
imul
shll
sub
mov
insl
sti
rolb
jmp
jnp
xchg
push
mov
xor
add
popa
push
push
clc
out
add
ja
inc
push
adc
push
stos
mov
pop
ja
std
xchg
xchg
adc
lea
push
out
popf
mov
dec
inc
jp
push
cld
pushw
filds
xor
movsl
or
xchg
ds
cli
sub
push
lcall
jmp
nop
divl
scas
scas
sub
mov
test
sbb
jmp
mov
xchg
insl
lea
imul
call
xchg
mov
push
xchg
pop
sahf
jecxz
inc
lea
sbb
repnz
or
mov
sbb
cmp
or
in
push
loop
mov
fsub
gs
aam
sbb
mov
mov
stos
popa
mov
push
lcall
sub
jno
jle
xchg
shll
push
mov
adc
xor
imul
pop
aad
repnz
jnp
xchg
push
sbb
ret
xor
mov
lds
fwait
inc
mov
add
jne
popf
aas
mov
or
int3
and
inc
sbb
loopne
xor
or
in
xor
dec
out
cmp
loope
jb
cli
in
sbb
ret
loopne
ljmp
in
mov
movsl
data16
cld
xchg
imul
dec
in
dec
insl
ja
dec
nop
and
cwtl
pop
aaa
push
sub
pop
xchg
repz
pushf
dec
ja
cli
and
xchg
daa
cmc
push
push
sbb
xor
aad
xchg
lret
mov
sahf
pop
rcr
xchg
aam
ss
xchg
pushf
push
sbb
dec
lods
sub
push
stos
jns
sar
sbbb
jnp
mov
in
sub
scas
inc
xor
repnz
fcomps
enter
loope
mov
rcrl
pop
lahf
mov
sub
sbb
push
les
cmpsl
wbinvd
std
das
cmp
cmp
test
in
xchg
fwait
in
mov
lock
cs
push
inc
push
adc
mov
xchg
mov
mov
xor
add
insl
fisubl
jns
jmp
cltd
das
push
inc
xor
pop
sbb
mov
cmp
mov
xchg
icebp
jle
sbb
jl
mov
push
mov
mov
push
cmp
or
aaa
and
push
jmp
and
pusha
ret
push
ficoml
mov
mov
scas
and
imul
and
mov
and
xor
xor
and
test
lock
sti
ror
jo
push
pop
fisubs
jae
mov
test
outsb
pop
cltd
and
test
jne
push
cmp
and
or
or
mov
adc
pop
xor
aaa
xchg
sbb
jbe
push
sti
js
sub
out
add
ss
sub
xor
enter
push
aas
popf
rcll
jl
mov
ffreep
jg
mov
lahf
lcall
mov
jmp
xchg
push
sbb
loope
xchg
in
sub
cmpsb
scas
jns
clc
aas
popl
xor
lods
and
dec
mov
cli
rolb
int
jno
adc
shll
repz
pop
outsb
push
lret
mov
xor
cld
push
test
jmp
sarl
movsl
ret
lret
push
test
sub
shr
xor
lret
inc
hlt
addr16
push
popf
dec
imul
repz
cmp
sub
cmp
sub
loopne
mov
dec
loope
add
xor
and
sahf
cmp
and
push
pop
mov
cmp
jbe
scas
sbb
lcall
out
fiaddl
sub
cltd
mov
fsubrp
in
inc
and
inc
cmpsl
hlt
pop
push
add
bound
pushf
xchg
mov
decl
andl
inc
or
and
data16
mov
sarl
mov
adc
xorl
lea
mov
xchg
movsb
jp
out
mov
loope
mov
leave
loope
or
test
addr16
bnd
cmp
dec
enter
mov
icebp
les
add
pushf
sbb
daa
or
sub
jp
fidivs
scas
pusha
les
fimuls
dec
in
jge
cmpsl
or
bound
ret
test
lcall
and
cmp
stc
data16
ds
xor
pop
sub
roll
loopne
sub
cltd
push
push
mov
repz
repz
cs
repnz
xchg
or
inc
sbb
test
mov
loope
inc
pop
cmp
ret
sbb
cmp
repnz
mov
arpl
add
sbb
xchg
cmp
or
jne
ja
sub
pop
or
push
mov
ret
jnp
imul
cli
ret
cli
jecxz
xor
dec
lods
mov
add
test
lahf
aad
cmpsb
push
dec
sub
xchg
xchg
ss
push
xor
loopne
mov
adc
fs
aas
inc
loope
jmp
jb
mov
js
mov
les
mov
dec
clc
xchg
cmp
daa
mov
mov
ss
inc
mov
cltd
out
or
xchg
mov
rcrl
add
inc
in
mov
icebp
cmp
fldt
sub
jbe
mov
inc
repz
lcall
mov
out
call
pop
xchg
ljmp
test
sbb
ja
push
mov
push
push
addb
repnz
xlat
pop
xchg
and
aam
icebp
cmp
repz
or
sub
push
mov
cs
sti
cmp
jmp
sub
dec
jmp
mov
push
icebp
xchg
stos
divl
push
cs
mov
inc
rol
sti
xor
stc
jge
and
xchg
pop
push
int3
and
es
icebp
dec
xorl
pushf
adc
pop
movsl
mov
data16
icebp
in
jae
cmp
out
xor
pop
or
ja
fs
addr16
sub
out
je
mov
sub
add
pop
imul
pop
cmp
adc
clc
js
adc
fistl
jb
loopne
or
push
out
inc
mov
repz
cltd
pop
shll
movsb
push
push
cmp
das
mov
sbb
push
jmp
movsb
and
xchg
push
pop
jmp
jbe
lahf
xor
mov
mov
or
popa
movsb
pop
mov
mov
jge
mov
push
xlat
je
mov
xchg
je
jbe
inc
jp
cmpsb
outsb
lret
mov
rorb
mov
push
inc
enter
xchg
adc
push
and
pop
push
repz
and
adc
sub
ja
inc
dec
lea
aas
mov
clc
ja
add
fdivrl
loop
sbb
xor
das
gs
in
mov
mov
or
lcall
test
arpl
decl
mov
les
std
xor
push
jno
fdivs
gs
insl
jmp
nop
lret
adc
in
mov
push
mov
pop
cmpsb
xor
cwtl
or
lahf
adc
mov
and
or
push
mov
popa
add
xchg
sub
mov
rcrb
xor
loop
fdivr
idivl
mov
xchg
scas
mov
subb
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
orl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
mov
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
nop
xor
inc
nop
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
nop
nop
nop
nop
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
jo
add
adc
add
push
add
addb
add
add
add
dec
add
addb
add
or
add
add
nop
addl
add
add
add
add
cwtl
add
orb
add
rolb
addb
add
add
add
or
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
sub
add
add
add
or
add
add
push
add
add
add
add
add
add
add
or
add
loope
add
add
add
lods
add
clc
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
xor
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
pop
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
popa
add
jno
jne
add
je
and
push
add
bound
insb
add
jae
push
add
and
push
add
inc
add
and
dec
add
arpl
add
add
add
adc
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jb
popa
add
and
push
add
jo
add
add
imul
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
popa
add
add
add
popa
add
insl
add
add
add
add
outsl
add
arpl
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
in
add
jecxz
add
jecxz
add
in
add
in
add
add
cmp
add
dec
in
add
add
push
in
add
add
add
add
mov
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
jbe
jo
xor
cs
insb
add
gs
xor
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
jb
gs
imul
outsl
jbe
push
jb
jo
