lcall
cmp
fmuls
jge
xchg
and
add
pop
pop
leave
ret
pop
pop
ret
add
and
leave
ret
adcb
out
out
ret
or
and
cmp
fildl
and
adc
add
inc
add
pop
nop
pop
nop
pop
add
adc
and
in
ljmp
pop
adcb
adc
mov
popf
mov
cmp
add
and
pop
addb
push
adc
insl
lret
sbb
adc
and
sti
outsb
popa
dec
push
adc
addb
int3
int3
add
xchg
lods
inc
push
and
and
adc
fldcw
dec
sbb
push
leave
inc
cmp
dec
lock
xor
mov
add
scas
aam
cmp
inc
and
adc
add
rorl
jo
mov
fimuls
ret
add
in
push
jno
inc
add
adc
ss
push
add
pop
add
andl
push
add
jno
dec
pusha
out
pop
add
insb
mov
push
adc
insl
insb
adc
cmpsb
push
xor
dec
mov
inc
inc
imul
add
mov
andb
and
xor
dec
mov
add
add
dec
jg
push
and
adc
and
sbb
and
inc
mov
inc
adc
inc
inc
inc
and
inc
pop
and
hlt
jbe
fucomip
lods
add
insb
es
and
adc
subb
nop
and
inc
and
inc
mov
imul
inc
and
shrb
inc
inc
push
add
mov
ret
add
inc
dec
inc
in
fistpll
inc
inc
and
subb
inc
and
and
add
jbe
mov
dec
add
push
fisubl
pop
dec
mov
inc
inc
xor
sahf
lods
insl
enter
add
orb
adc
int3
outsb
out
add
inc
mov
out
push
add
imul
pusha
adc
cmp
shll
push
lods
dec
adc
push
clc
pop
inc
inc
push
dec
and
add
add
add
adc
push
lcall
pusha
and
dec
mov
sub
sbb
and
mov
fldcw
adcb
adc
sub
sub
enter
pop
and
int3
pushf
sbb
push
dec
jl
in
add
cmpsb
push
mov
pop
and
jb
test
add
in
and
addb
add
add
inc
into
or
inc
and
sub
or
or
and
mov
cmp
popa
jo
test
push
xor
pop
inc
add
pushf
sub
fiadds
xor
andb
inc
repnz
and
mov
mov
dec
in
lcall
add
adc
bound
in
arpl
push
pusha
and
xchg
xor
scas
xor
cmp
mov
sbb
inc
push
sub
or
and
out
dec
jo
cmp
fcompl
data16
mov
jo
imul
loopne
and
xchg
sbb
cmp
pop
int
cmovle
cmp
nop
lcall
sub
xchg
loopne
scas
ficomps
cmp
pop
sub
rcll
dec
pop
add
xchg
mov
ficoms
jmp
adc
pop
push
andl
mov
add
pop
pop
cwtl
loope
jo
add
sbb
loopne
pop
cvtpi2ps
add
sbb
fsts
add
and
xor
stos
xor
shlb
adc
and
xchg
mov
and
jl
stos
pop
aaa
push
lock
xchg
mov
add
cs
dec
testb
inc
mov
and
cltd
sbb
xchg
push
mov
je
test
push
push
in
andl
mov
shll
mov
push
hlt
xchg
mov
pop
cwtl
pusha
mov
or
lcall
or
and
or
lock
mov
mov
pop
dec
jle
pop
paddsw
loopne
jp
outsb
mov
sbb
xor
adc
sbb
cmp
or
cwtl
lret
xor
add
stos
stos
je,pn
xor
dec
inc
fmuls
js
jl
mov
add
add
test
cwtl
mov
or
xchg
xchg
ss
enter
mov
adc
dec
cmpb
mov
adc
and
les
pop
mov
mov
test
test
xchg
pop
cpuid
mov
or
dec
inc
cmp
and
xchg
sub
mov
push
ss
add
sub
scas
or
fs
push
push
inc
push
add
push
enter
add
and
out
xchg
flds
loop
and
add
pushf
pop
and
and
add
pop
cmp
cmpsb
lret
test
pop
cmp
mov
jp
adc
mov
ret
add
inc
mov
cs
fcmovb
lods
sahf
and
xchg
inc
fs
add
mov
sbb
inc
int3
push
andb
cmp
dec
test
les
sub
push
mov
sub
popa
idivb
mov
pushw
mov
and
je
xor
pusha
cmpsb
roll
cmpsb
addb
or
dec
inc
dec
xor
fnstenv
adc
and
mov
addl
dec
adc
int3
loop
rorl
fsub
xchg
sbb
jp
sbbb
and
stc
adcb
push
scas
repnz
and
loop
inc
sbb
adc
aam
mov
jp
ret
mov
ret
push
adc
add
data16
sbb
add
mov
lds
adcl
xchg
pop
jl
in
mov
mov
sbb
xchg
dec
repnz
xchg
sub
jbe
and
fidivs
lods
cmp
adc
nop
es
inc
xor
xor
add
inc
push
imulb
jb
adc
cld
aam
add
push
mov
xchg
mov
sbb
flds
sub
sbb
add
mov
xor
adcb
sub
and
jbe
push
in
fsub
lods
out
push
out
subb
xor
inc
dec
or
pusha
outsl
jp
sbb
shr
dec
pop
push
adc
push
cwtl
jo
and
sub
or
jo
pushf
push
push
push
addb
mov
mulb
lds
in
xor
pop
mov
add
pushw
data16
pushf
aam
push
fimull
mov
inc
jbe
xor
cwtl
or
dec
out
cwtl
rol
inc
adc
cwtl
inc
push
add
push
mov
jp
ljmp
rclb
mov
xor
js
pusha
lock
xor
dec
or
jbe
and
inc
test
push
adc
daa
mov
or
aam
cmp
pusha
adc
jb
and
xor
add
loope
cmp
or
ss
add
fs
xor
sbb
push
pop
cmpsl
mov
test
dec
ret
sbb
or
mov
sbb
shlb
int
or
lock
adc
js
add
sub
inc
xchg
out
jne
imul
lret
add
dec
pusha
addl
add
xchg
nop
sbb
fs
adc
loopne
sbb
adc
and
nop
xor
ret
push
les
test
out
inc
pop
pop
and
leave
mov
push
pop
pusha
push
add
fmuls
add
sbb
push
inc
push
cmp
inc
cmp
pop
sbb
data16
push
mov
cld
jbe
push
das
and
shlb
inc
push
loopne
xchg
test
loop
and
sbb
rcl
adc
sub
cmp
loopne
jo
addr16
xor
adc
inc
xor
mov
cs
cmp
add
add
adc
sub
sahf
and
cmp
bound
add
imul
xchg
adc
xor
fcmovb
or
lods
add
cmpb
xchg
sbb
dec
out
xchg
add
add
pop
cmp
fcoml
ljmp
cltd
adc
fcoms
dec
mov
jnp
push
mov
cli
shlb
dec
scas
push
xchg
test
and
add
or
cltd
rorl
pop
enter
popf
scas
push
xchg
call
or
mov
or
dec
add
sbb
jle
roll
ljmp
add
movl
in
hlt
fmull
inc
cmp
mov
mov
inc
jle
mov
xor
sub
cmp
push
movsb
fsub
xor
cs
inc
les
dec
adc
inc
mov
das
repz
mov
inc
mov
add
inc
adc
dec
movsb
shlb
add
push
cmp
mov
sbb
inc
call
sbb
add
nop
cmp
shlb
pushf
inc
and
fiaddl
cmp
lret
dec
lock
push
subb
sbb
jl
lock
or
cwtl
and
adc
sbb
enter
xchg
dec
mov
ljmp
mov
adc
cld
and
movsb
aam
lcall
adc
dec
add
cmpb
inc
adc
es
sbbl
insb
sbb
rcll
jl
jl
loop
add
cmp
addb
or
mov
pusha
or
mov
xor
pop
jae
jl
cli
cmpsb
rorb
shl
cmp
pop
lret
cltd
sbb
lcall
xchg
bound
popa
sbb
sbb
lods
push
xacquire
mov
data16
rorl
inc
xchg
es
ror
inc
movsb
pusha
mov
es
pusha
je
add
stos
lock
and
mov
movsb
cmp
js
jle
adc
hlt
inc
mov
push
sub
push
push
cmp
out
xchg
inc
add
mov
sarb
inc
and
xchg
inc
xor
fs
dec
jo
cli
js
mov
xor
or
in
cld
inc
ljmp
add
cmp
dec
sbb
rcrb
and
pushf
in
add
js
and
cmpsb
xchg
call
movsb
shlb
jae
sbb
pop
sub
sbb
sub
pop
nop
mov
or
push
ljmp
dec
faddl
adc
addl
mov
adc
scas
test
add
adc
sbb
sbb
add
fs
dec
cmp
pushf
rcrb
jo
fxch
insb
push
push
dec
pushf
mov
jp
in
adc
aam
test
jo
popa
movsb
int3
push
jmp
mov
add
movl
mov
incl
mov
sbb
mov
add
sti
adc
add
mov
add
and
push
jnp
xor
fwait
dec
jbe
repz
sbb
sti
in
sub
pop
mov
and
adc
out
inc
add
bound
ret
adc
mov
xchg
sub
in
push
mov
jp
inc
add
dec
mov
in
neg
mov
cld
dec
ret
add
dec
mov
pop
cmp
or
into
mov
dec
enter
add
xchg
inc
and
push
xchg
add
cld
fcompp
and
add
push
lahf
loopne
shlb
inc
add
fimuls
push
mov
jo
adc
mov
or
roll
add
loope
add
mov
xlat
popa
insl
cmpl
loopne
or
popf
frstor
out
cmp
mov
adc
ret
push
lock
hlt
sbbb
push
dec
adc
mov
out
xor
hlt
pop
in
or
and
ss
and
push
hlt
adc
flds
loopne
call
adc
mov
inc
inc
and
jbe
pop
faddl
and
adc
jae
xor
cli
jns
and
fistpll
dec
sub
xchg
or
pop
jl
adc
or
mov
cmpl
rcrl
in
mov
mov
shl
or
xchg
xor
cmpsb
std
pop
mov
lea
push
or
fwait
div
sti
hlt
push
push
push
rcll
pop
outsb
jne
mov
push
addb
mov
adc
inc
mov
sub
add
push
cld
outsb
jbe
ss
and
mov
or
fisubs
fcoms
or
pop
shll
bound
sarl
roll
testb
outsl
adc
in
jb
xchg
rcrb
dec
push
sti
xchg
mov
and
sbb
les
test
pusha
sti
in
and
stos
div
movb
pop
sub
add
adc
xor
das
into
insb
fdivs
les
shlb
push
mov
jmp
and
inc
dec
ja
sbb
andb
mov
mov
jne
and
testb
rorb
cmp
mov
cwtl
popf
pop
test
sbb
bound
push
ss
call
cmp
or
leave
adc
adc
shl
pop
cmc
adc
pop
mov
jle
inc
xchg
add
sbb
mov
sbb
aaa
push
mov
sbb
mov
dec
sub
cli
test
or
pop
cmp
pop
push
mov
iret
rolb
sbb
out
add
or
bound
iret
xchg
xchg
cmp
popl
sbb
sbb
loope
jl
add
or
pop
lods
add
add
enter
popa
clc
mov
cmc
fcomi
inc
pop
or
repz
mov
and
aaa
pusha
and
lods
sbb
jge
xchg
xor
icebp
pop
lret
or
or
jo
jo
out
mov
inc
add
outsl
jmp
cmp
add
xchg
movsl
and
lds
add
add
fwait
or
enter
test
push
pop
pop
dec
sbb
stos
cltd
jl
adc
negb
mov
jne
sub
add
int3
xor
and
sti
in
cmp
mov
dec
pop
fdiv
arpl
fcomps
and
mov
jg
xor
sbb
icebp
loopne
inc
xchg
notl
jmp
outsb
ja
mov
sbb
popa
ficomps
add
and
pop
xor
adc
jg
mov
test
sbb
loop
mov
add
pop
repnz
ret
push
jae
mov
test
loopne
loopne,pt
add
sub
mov
loopne
sub
mov
std
lcall
sbb
push
js
push
cmpsl
mov
iret
lods
std
sub
and
push
adc
out
mov
add
xor
inc
insl
divb
scas
cwtl
call
enter
pop
inc
xor
sbb
pop
xor
fisubl
ret
outsl
pop
clc
xorb
rorb
shl
jp
adc
out
push
cs
loopne
aas
test
lret
mov
add
stos
mov
sub
mov
loop
lock
sbb
fiaddl
and
ret
lods
stos
jle
rclb
push
xchg
dec
inc
insb
ljmp
xor
jl
adc
enter
add
add
or
ret
jbe
push
xchg
dec
call
in
add
dec
sbb
pop
sbb
dec
sti
lock
mov
jg
daa
fistpl
aam
or
test
jecxz
and
mov
fsts
lock
fldl
xor
sbb
pop
sub
sti
jp
cmp
cmp
cmp
and
sbb
pop
sub
adc
in
add
rclb
add
push
lea
push
push
pop
lcall
inc
pop
sbbl
dec
sbb
inc
xchg
scas
leave
inc
pushf
dec
push
ret
add
mov
mov
or
and
es
lock
test
ljmp
dec
sbb
xor
mov
xor
push
divb
movsl
ja
nop
mov
cmc
ret
dec
jg
leave
ret
shl
pusha
push
setg
sub
sbb
bts
fists
hlt
fistl
jb
inc
shl
ret
or
adc
test
les
cmp
pusha
cmp
cmp
roll
popf
jnp
jo
xlat
not
adc
cmc
add
shr
test
pop
sti
pop
cmp
or
fisubs
movsl
cmp
call
xchg
enter
jno,pt
and
sbb
test
mov
add
add
mov
loopne
insl
fs
je
stos
lcall
fcompl
inc
out
xchg
popa
loop
call
sbb
and
scas
clc
mov
aam
push
cmpsl
pop
mov
fistl
testl
insb
adc
sub
push
nop
jecxz
aas
jge
or
pop
push
int
jl
ret
pop
cld
enter
inc
sub
push
dec
add
das
dec
mov
xor
mov
xor
adc
or
add
scas
into
add
sbb
sub
subl
cmp
adc
fisubs
inc
das
push
jge
and
popa
ret
and
lcall
outsl
xchg
jmp
repz
loop
out
sub
adc
enter
pop
adcb
dec
call
inc
ffree
push
jmp
mov
fistps
out
or
bound
sbb
dec
pop
cmp
mov
nop
sub
sbb
mov
mov
sbb
or
jbe
add
adc
enter
xchg
or
mov
xor
je
iret
test
jle
movsl
cltd
and
clc
or
out
mov
test
cs
adc
les
inc
fsub
aas
loop
popa
cmp
out
pop
add
dec
inc
roll
push
addb
fwait
clc
mov
sub
incb
aam
inc
call
mov
push
add
xor
fdivs
adc
jb
jbe
addl
es
mov
inc
xlat
add
add
test
xchg
pop
and
fisttps
insb
mov
adc
adc
or
outsl
xor
and
sti
mov
lods
adc
loopne
mulb
cmpsl
dec
jo
jmp
cmp
mov
mov
sti
dec
test
cs
icebp
jne
ss
nop
aaa
push
inc
sahf
push
cmp
clc
xchg
pop
fdivrl
leave
dec
nop
mov
fsts
mov
mov
push
mov
adcl
mov
inc
jp
pop
mov
mov
xchg
fcompl
fisubl
cmc
jge
add
sbb
jecxz
lret
rorl
addl
insb
push
fwait
push
ret
inc
add
sbb
ffreep
sbb
mov
ficompl
pop
mov
jne
sub
push
enter
inc
mov
testb
mov
mov
test
les
ret
pop
sbb
xor
int
mov
std
mov
mov
adc
and
call
mov
cmc
jnp
sbb
and
outsb
push
in
adc
ret
jle
call
mov
push
jb
imul
dec
pop
jmp
and
push
es
push
add
jo
je
ds
mov
xor
arpl
push
repnz
push
loopne
jp
adc
add
hlt
aaa
out
js
jbe
fsubs
cmp
fidivl
sbb
mov
aaa
scas
cmp
mov
out
popl
dec
mov
dec
sbb
inc
pushl
push
loopne
icebp
je
stc
insb
int3
cli
push
jbe
call
dec
add
pop
dec
xor
adc
rolb
cltd
sbb
pop
sub
lods
pop
cmp
shlb
cli
mulb
ret
movsl
cmp
inc
inc
mov
aaa
dec
rcl
or
push
sbb
iret
add
je
ret
pop
cmp
rcrl
icebp
fnstsw
in
jne
decb
fdivp
loop
mov
xor
inc
add
mov
mov
jl
daa
cmpsb
or
loope
mov
imul
je
add
push
pusha
sub
xor
rcrl
adc
cmp
add
cwtl
jl
scas
pop
mov
sti
int
add
rcrl
mov
and
imul
out
dec
sbb
mov
mov
xchg
sbb
testl
and
sbb
bound
or
and
mov
or
pusha
cmpsl
jg
push
outsb
dec
fimuls
push
adc
add
mov
shll
mov
test
or
lods
cmpsb
sbb
filds
sbb
cmc
cmp
inc
sub
push
dec
fdivs
or
mov
hlt
cli
pushf
filds
jns
sarb
mov
xchg
pusha
add
xlat
mov
dec
pop
ds
fildl
clc
add
mov
adc
pusha
mov
pop
loop
out
dec
push
lds
add
fstpt
add
add
dec
fists
xchg
mov
es
test
sub
cs
jne
jle
cmc
negl
add
sbb
lds
push
mov
mov
or
fsubrs
into
inc
push
movsb
sub
loope
cmpsl
mov
mov
mov
inc
xlat
or
sbb
xor
or
loop
ja
adc
adc
std
cmp
ret
lods
push
pop
jmp
xchg
outsl
mov
mov
add
xor
aam
jmp
push
mov
jnp
adc
jecxz
loop
or
ret
fadds
xor
jb
push
test
and
jge
pop
cld
dec
test
call
push
push
mov
js
lret
fcoms
je
hlt
push
or
out
cmp
jb
pushf
cltd
xor
add
sub
fbld
pop
pop
aad
addl
stc
js
or
scas
ret
pause
pop
idivl
aas
add
jmp
xchg
jbe
xchg
fstpl
inc
jae
movsb
pop
xor
stos
mov
clc
pop
inc
inc
pop
adc
xchg
add
nop
mov
mov
inc
aad
das
ret
mov
dec
or
and
icebp
mov
or
pop
imul
xchg
loopne
jns
cmpsl
imul
jg
sbb
or
mov
mov
jecxz
rolb
inc
sub
sbb
rolb
xchg
adc
lods
cld
add
pop
ja
cmp
push
rclb
adc
fldl2t
mov
pop
cmp
jne
fwait
push
das
sbb
jmp
add
das
and
push
sbb
xor
adc
or
jmp
mov
sub
loopne
aaa
ret
aaa
jb
mov
lds
getsec
ss
add
mov
mov
add
adc
dec
sbb
or
rorb
xor
lock
dec
cmp
or
dec
and
xor
mov
shl
sub
test
lcall
mov
ss
addr16
insb
sbb
jecxz
dec
xchg
xlat
cli
adc
mull
add
js
sub
sbb
and
aas
adc
loopne
sbb
rcr
lock
ss
sbb
lret
cltd
sarb
and
push
xchg
loop
aad
add
jbe
cs
ret
fsubr
pop
adc
stos
xor
call
les
sub
pusha
jo
inc
sbb
jno
sbb
or
jne
rcl
jg
dec
fadds
xor
jmp
or
testl
sbb
lret
test
in
cwtl
xchg
je
jp
mov
sub
jbe
repnz
lds
jo
jo
mov
and
testb
pop
sub
mov
test
jg
push
jecxz
add
shlb
in
jne
sub
mov
icebp
push
pop
jmp
dec
frstor
lret
sbb
popa
mov
repz
mov
pop
and
mov
jg
push
xlat
rcrl
jmp
ds
test
inc
xor
push
xor
adc
mov
or
lods
fdivrs
aad
cmp
test
mov
les
or
jno
push
imul
aas
sarb
aad
cmp
nop
loopne
cmp
test
jno
shlb
mov
sub
sub
xchg
push
cmp
clc
in
xor
lock
add
gs
and
cmp
push
cmp
out
add
inc
jg
out
or
add
mov
popa
fistpl
xor
addb
xlat
cmp
jne
lahf
mov
popa
adc
xor
shll
cmp
add
push
adc
movsb
test
add
add
sarl
inc
mov
jp
sbb
mov
fiaddl
in
in
jp
add
int
fcom
push
sbb
fisttps
and
aaa
loope
pop
jge
mov
rol
add
test
and
mov
xor
pop
xchg
shll
mov
push
add
jbe
mov
or
pusha
and
and
push
loopne
pop
inc
dec
cs
outsb
jg
leave
and
pop
sbb
add
fimull
or
push
stc
in
lea
adc
call
rolb
jne
aas
push
mov
add
popf
jmp
outsl
xchg
jmp
popa
mov
push
mov
xor
cmp
inc
cmp
xchg
adc
inc
or
lret
loopne
popa
rcrl
fs
into
pop
shl
and
sbb
movsb
sbb
and
xchg
or
sarl
je
rorb
out
mov
shr
jb
movsb
outsb
xchg
adc
pop
push
adc
add
mov
pop
flds
jmp
leave
ficomps
mov
xlat
dec
dec
push
into
cwtl
jno
outsb
pop
inc
adc
movsb
adc
test
je
adc
ret
dec
leave
dec
mov
jbe
add
addr16
mov
pop
cmp
addr16
jle
adc
sarl
rcll
bound
jp
fisttpl
addb
adc
test
ss
sub
jge
test
lods
aas
sbb
cli
fists
test
call
cmp
mov
dec
aam
or
fidivl
pushf
jmp
aam
jo
pop
bsr
xor
mov
inc
jg
icebp
mov
xor
sub
in
mov
or
mov
jmp
rol
and
inc
adc
adc
and
sbbl
pop
clc
add
inc
mov
fsubs
repz
aas
fisttpl
push
add
dec
test
add
gs
xor
repz
push
xor
jmp
aam
push
incl
sub
push
xchg
clc
lock
js
in
sbb
leave
and
pop
inc
cwtl
or
and
add
shll
pop
sahf
or
dec
popf
enter
push
jne
test
dec
mov
add
inc
or
testb
ds
jne
rcll
mov
cmp
ja
mov
adc
and
push
pusha
cmpsl
stos
loopne
cmp
in
mov
pusha
shr
scas
enter
popa
fs
js
jbe
cmp
loop
cld
or
int3
or
push
pop
fs
sub
outsl
daa
pop
cmpsl
cs
add
ficoms
or
cs
mov
cmp
sub
repnz
fstl
jmp
xacquire
mov
jne
ret
bound
cmp
xor
add
add
xchg
mov
outsl
stos
pop
aas
cmp
ja
in
jge
sbb
pop
cli
adc
les
std
lods
sahf
jle
jmp
jb
push
adc
lock
loop
stos
scas
loope
pop
jbe
rcrl
inc
movl
xchg
or
xor
or
jo
inc
lea
and
lods
and
push
dec
adcl
jbe
out
mov
in
inc
add
repz
or
loope
push
mov
clc
sub
shrl
rolb
in
xor
stos
pop
sub
mov
popf
xor
cmp
fmuls
cli
cli
cwtl
push
add
add
roll
wbinvd
mov
loope
jnp
fwait
xor
fdivrl
cmp
repz
ljmp
mov
lret
or
mov
dec
mov
je
mov
rclb
icebp
cmp
lahf
rcll
push
mov
jo
and
into
or
or
addr16
pop
mov
pop
rcll
and
mov
test
and
fidivl
dec
clc
addr16
rclb
add
cs
int3
sbb
adc
jp
pop
adc
inc
xchg
lock
jne
and
int
aad
xchg
xchg
lahf
mov
push
push
std
inc
popa
push
jbe
dec
dec
push
and
sub
add
pop
insb
push
xor
mov
pop
stos
sub
loopne
mov
test
mov
mov
not
mov
roll
or
push
pop
cmp
pop
and
mov
hlt
icebp
sbb
xchg
clc
cmp
pop
lret
clc
and
jnp
push
sub
adc
jmp
xor
inc
testl
push
dec
jp
pop
leave
inc
push
aam
push
hlt
sub
push
or
mov
or
fildll
fidivrl
enter
push
int3
add
jl
pop
adc
lret
jo
inc
jbe
pop
das
push
test
adc
cld
test
push
call
cmp
jbe
shr
lea
and
pop
test
mov
fsubr
loopne
popf
sbb
and
sub
add
out
dec
add
dec
add
scas
ret
or
test
jbe
out
and
rcrl
add
sub
adc
ret
ret
ret
and
add
cmpsl
xor
cmp
mov
iret
fsubs
fimull
pop
clc
sbb
dec
pextrw
cmpsl
dec
js
dec
out
xor
ret
sbbl
aam
add
hlt
mov
rorl
mov
cli
fiadds
loopne
and
and
dec
cmp
insb
insl
pusha
cmp
js
jl
shll
fsubrs
lods
cltd
cmpb
shrb
xchg
sbb
jbe
icebp
lods
test
jmp
icebp
and
mov
mov
out
cmp
sbb
push
cmp
lock
inc
fistpl
adc
popa
push
aas
and
das
aaa
add
ret
out
mov
adc
adc
mov
jmp
sub
inc
aad
or
sub
sub
sbb
rcl
jp
and
mov
jecxz
repnz
xor
pushf
je
mov
loop
testb
adc
mov
rcl
movsb
sbbl
hlt
sub
and
add
in
mov
adc
fmuls
lock
jo
pop
and
outsb
xor
sbb
test
adc
clc
addl
cmp
ja
jns
xor
jne
jbe
xor
mov
test
add
subl
and
cmp
in
cmp
jecxz
sub
xor
mov
inc
cmp
sub
or
sub
and
sbb
fwait
loopne
pop
test
les
aas
mov
mov
adc
dec
mov
or
fstpl
add
add
and
push
dec
rcll
xchg
adc
mov
ficoms
mov
in
cmp
ss
push
clc
push
bound
jne
cmp
pushf
xor
jg
jmp
push
cmp
cmp
sbb
adc
and
adc
cmp
je
sbb
fadds
jb
and
push
add
fiadds
js
je
mov
outsb
jl
push
out
xchg
add
shll
rcrb
or
jo
cmp
iret
cli
aad
sub
and
sub
loopne
sub
or
inc
out
add
cmp
fmuls
enter
dec
mov
pop
test
mov
andb
in
sub
cmp
and
fidivl
or
cmpb
add
inc
pusha
aaa
movl
add
add
lret
xor
jp
ret
test
pop
ror
es
bound
add
and
push
data16
and
cmp
adc
je
cmpsl
xchg
loopne
push
adc
or
cmp
jle
popa
add
roll
ss
sbb
push
sub
pop
xor
loope
imul
xchg
clc
mov
xor
adc
mov
or
in
or
dec
mov
mov
fsubrl
repnz
rclb
cmp
adc
push
test
jne
sahf
pusha
push
xchg
lock
pusha
xchg
jmp
sti
and
or
xchg
mov
loope
aad
lock
int
std
inc
test
pop
out
lods
push
cs
mov
out
bsf
jmp
loop
jb
fistpll
xorb
pusha
dec
fdivrl
ret
nop
push
inc
push
scas
sbb
sub
lock
adc
cld
sbb
js
jmp
mov
mov
jne
pop
and
push
fdiv
test
adc
cld
pop
jbe
add
sbb
call
pop
test
xchg
mov
loope
repnz
adc
sbb
inc
pop
xchg
add
sub
xchg
movsl
and
adcl
sub
mov
add
push
xor
xor
mov
jle
mov
jge
or
loop
test
addb
mov
xorb
mov
lock
repz
mov
mov
rolb
pop
popa
jp
or
pop
push
cwtl
xchg
ret
sbb
rorb
outsb
test
call
pop
cmp
addr16
std
fwait
packsswb
mov
add
hlt
and
push
adc
daa
pusha
es
mov
add
mov
sbb
mov
xchg
inc
lds
jmp
inc
or
pop
call
adc
push
data16
pop
andl
xchg
mov
mov
test
inc
add
fwait
les
pop
jnp
ss
or
adc
call
aaa
cli
mov
or
shll
imul
mov
repnz
jmp
arpl
int3
push
or
repz
adc
pop
loopne
dec
js
int
loopne
test
pop
pop
dec
push
xchg
inc
xlat
subl
nop
jecxz
and
ja
test
rep
fstpl
cmc
jo
rorb
add
sub
xorb
dec
shlb
test
sti
sub
sbb
mov
pop
test
jns
loop
jle
std
and
cmpxchg
nop
pop
push
insb
sbb
adcl
fnstcw
jle
loopne
sarb
dec
test
ret
sahf
fadds
push
out
insb
out
or
stos
jno
lock
orl
or
push
test
lock
shlb
call
sbb
mov
addb
lock
mov
mov
push
mov
imul
add
sub
cmc
mov
dec
and
push
sub
jg
sbb
mov
pop
dec
or
cs
add
outsb
mov
ja
test
pushl
ds
pop
mov
mov
loopne
shr
lret
cli
add
rolb
popa
insb
shl
aad
pop
pop
add
fsubrl
lods
jp
insb
push
call
push
fldl
cmpsb
xchg
icebp
setl
cmp
or
jge
cmpsl
and
push
pop
sbb
jg
out
sarb
dec
dec
pop
rcll
mov
cld
pop
or
mov
add
add
jecxz
icebp
int3
xorl
push
fnstenv
xor
or
cmpsl
imul
sbbb
bound
stos
lret
cmp
jnp
nop
inc
cmp
inc
mov
xchg
xchg
mov
fwait
adc
xchg
repz
mov
add
int
xor
add
sub
es
pop
stc
add
xchg
pop
xchg
cmp
loope
pop
out
push
sahf
or
or
add
xor
shl
and
mov
negl
sbb
pop
push
lods
cltd
daa
loope
fcmovb
jecxz
add
ret
or
int3
movsb
xchg
sub
pop
push
cs
mov
add
push
out
adc
and
sub
cwtl
dec
pushf
repz
mov
test
lods
repz
or
pop
decl
test
inc
xchg
cmp
xchg
icebp
imul
and
xchg
push
cmp
cmp
lds
mov
dec
std
test
sbb
dec
add
jmp
rolb
mov
aad
lock
int
inc
dec
lods
xlat
mov
nop
cli
sahf
push
pushf
add
js
mov
lock
in
sbb
js
fsubrs
pop
adc
rorl
sbb
sbb
dec
frstor
xor
and
inc
test
shl
in
fs
jl
dec
sub
nopl
jg
into
insl
test
cmp
add
leave
and
insb
or
push
adc
or
lea
adc
or
mov
bound
mov
pusha
mov
insl
push
mov
jp
repnz
ljmp
fsub
in
jae
push
fistl
push
shr
dec
adc
in
adc
or
add
in
jle
subb
stos
fstps
iret
adc
or
js
and
stos
cmp
in
push
adc
xor
and
xchg
stc
cltd
push
lock
add
es
and
xlat
add
add
insl
sbb
stos
sub
jo
xchg
or
pop
mov
pop
iret
lcall
lahf
cmp
fcompl
outsl
add
in
addr16
jb
adc
dec
mov
dec
jae
jo
inc
stc
sar
int
dec
adc
cli
mov
cmp
loop
xchg
and
lea
sub
jns
rcl
inc
push
ret
enter
mov
pop
sub
pop
sar
popa
pop
xchg
jecxz
xchg
mov
lret
lock
xchg
jle
xlat
jne
sbb
aam
sti
aaa
in
adc
xchg
arpl
sbb
xchg
mov
shrb
clc
scas
in
mov
and
rol
ljmp
inc
into
and
or
lods
push
dec
xor
pusha
mov
lret
rorb
sti
mov
xor
aam
cmp
pop
shl
pop
out
add
loope
shrb
mov
sbb
adc
in
insl
cwtl
aaa
out
aam
mov
insl
jp
or
in
in
dec
sbb
push
sbb
fisubl
mov
push
or
jle
pop
movsl
xor
cmp
test
sub
or
scas
adc
adc
in
in
or
mov
nop
dec
sbb
testb
lds
out
cmp
scas
aam
movsb
adc
or
mov
cmp
sbb
pop
pop
das
or
xlat
mov
dec
add
jl
pop
push
ljmp
andb
into
clc
mov
cmp
xor
dec
mov
repz
or
dec
push
lret
out
loopne
add
add
int3
sub
repnz
fnop
mov
sbb
ss
enter
aaa
and
out
push
test
ss
hlt
daa
xchg
jne
ret
loopne
aaa
fs
imul
insl
cltd
adc
jnp
dec
scas
cmp
inc
mov
adc
xchg
lods
cli
ficoml
xchg
add
mov
sbb
popl
cmpsl
or
lcall
or
mov
repnz
sbb
or
add
sbb
orb
cmp
xor
das
sbb
push
pusha
cmp
and
add
cmpsb
mov
mov
je
movsb
jmp
mulb
roll
insl
test
push
adc
es
and
enter
mov
fwait
test
loopne
test
mov
mov
add
rol
daa
imul
hlt
adc
addl
insl
mov
fstpt
mov
mov
cmp
cmpsl
inc
test
add
ret
xor
dec
cmp
jno
popa
bound
mov
dec
data16
mov
mov
ds
js
sahf
inc
add
lock
gs
cmp
pop
sbb
adc
cmc
and
cmp
fsubrl
fmull
sub
nop
add
popa
dec
arpl
rcrl
mov
mov
cmc
push
or
jg
jecxz
rcll
loopne
mov
mov
add
xchg
shll
decb
xor
and
xor
adc
mov
testb
mov
ror
sbb
aas
mov
xchg
loop
popa
xchg
andl
in
lock
push
dec
add
mov
mov
pop
test
aam
mov
mov
add
mov
adc
int
or
sbb
lods
mov
enter
inc
out
pusha
add
push
add
std
mov
jo
call
mov
fbld
rcll
icebp
pop
cwtl
push
pop
dec
mov
lret
js
ret
and
sbb
out
test
pop
sahf
iret
jmp
cmp
adc
cmovg
cmp
adc
jp
loopne
adc
pop
mov
jg
test
sub
push
nop
mov
arpl
repz
push
adc
es
mov
imul
sarl
adc
jno
adc
inc
adc
rcr
sub
out
mov
add
adc
xchg
cmp
fcoml
shll
push
inc
sub
psubb
ror
sbb
jg
inc
push
pop
dec
push
inc
push
inc
dec
cmp
repnz
das
or
push
iret
push
mov
repnz
rorl
js
aam
mov
add
inc
js
imul
test
push
and
in
std
add
add
mov
in
dec
and
imul
in
popf
leave
pop
shr
addb
cld
or
insl
ja
es
outsl
cmp
mov
call
out
cmp
aad
xor
orb
test
pop
pop
sbb
mov
insl
cmp
sbbb
out
xor
stos
lods
jno
jns
cli
bound
daa
cld
cmp
dec
push
sub
scas
dec
jp
cs
mov
xor
fwait
xchg
sahf
mov
xor
sbb
push
ljmp
sub
jecxz
add
sarb
aam
push
or
jle
add
jmp
dec
or
call
ds
inc
dec
ljmp
movsb
das
rolb
fwait
divb
jmp
pop
xor
call
mov
rolb
mov
xor
outsl
int
inc
or
mov
outsl
sar
or
inc
cmp
int3
pop
das
or
adc
inc
pop
and
fdivrs
add
pop
cmp
jb
push
jl
cld
mov
fcmovbe
in
fildl
sub
add
test
sbb
in
add
fldcw
add
jecxz
add
in
add
jge
mov
mov
xor
les
ficomps
inc
loope
stos
sub
dec
inc
pusha
jbe
mov
movsb
jecxz
push
jmp
loope
imul
out
pop
or
sbb
push
jmp
add
pop
add
cmp
cmc
add
jno
mov
lret
fdivl
js
in
or
mov
jbe
loop
out
adc
fmuls
dec
int3
dec
sbb
shrl
subl
in
stos
mov
xor
lods
in
cmpsl
mov
lret
jb
out
repz
aaa
jp
fldt
loope
loop
push
clc
xlat
push
add
add
adc
and
mov
add
jo
cmc
pop
xor
fiadds
int3
push
xchg
push
cmp
out
int3
adc
and
jbe
add
or
jne
data16
inc
pushf
scas
aad
dec
or
sub
loop
xchg
nop
bound
and
adc
ss
xlat
insb
les
lahf
inc
inc
scas
ret
add
pusha
jmp
add
je
and
mov
shlb
fdivrl
sub
xchg
inc
sub
mov
nop
into
popf
cmp
aad
mov
inc
or
loopne
mov
popl
add
adc
and
xchg
stos
in
add
pushf
push
in
cltd
pop
push
sbb
adc
cmp
call
dec
sahf
inc
rcl
and
sar
xor
mov
mov
sub
sar
lea
push
cwtl
adc
scas
xor
push
mov
std
cmp
push
sti
xorl
mov
mov
clc
out
add
les
sbb
ljmp
sti
pop
loop
lock
sub
adc
cmp
lret
add
rorl
adcb
xlat
rcrb
dec
dec
sub
movsl
add
fsubs
add
mov
test
lret
leave
fsub
pop
pusha
call
sub
push
fucomp
push
test
jae
das
mov
mov
in
add
movsl
sarb
lods
orb
push
pushf
push
test
test
inc
and
negl
xchg
insl
cmpsl
mov
push
lret
jge
aad
pop
mov
push
xor
mov
mov
xor
repz
mov
mov
out
not
lahf
jo
js
aas
fwait
jecxz
or
xor
jle
jmp
pop
dec
add
jmp
scas
jbe
in
adc
xor
add
ror
les
jne
push
cmp
xchg
push
repnz
xor
dec
lds
mov
push
or
push
jmp
sub
incl
and
sub
mov
aas
andb
lcall
jmp
sub
pop
push
rcrb
arpl
dec
cmp
sub
xor
and
jne
mov
jne
sub
jbe
sub
arpl
dec
lret
pop
sarb
cmc
jne
jmp
add
pop
iret
hlt
daa
mov
and
daa
dec
inc
stc
dec
cmpsl
xchg
sahf
xchg
adc
rcr
xor
ret
aam
pop
fnstcw
pop
lea
mov
add
xor
pop
movsl
dec
leave
std
pop
pop
sbb
mov
jp
lret
push
je
sbb
stos
sbb
jno
add
pop
int3
cmpsl
hlt
ret
pop
jbe
fscale
mov
sub
pop
xor
adc
and
inc
push
icebp
mov
js
sar
inc
add
call
pop
pop
dec
pop
cmp
cmp
mov
sub
inc
inc
mov
adc
je
and
pop
adcl
rclb
and
cld
sub
sbb
sub
mov
or
fisubrs
js
push
into
or
lock
pop
sbb
inc
sbb
int
stos
test
lahf
fcoms
shrb
sub
stos
rorl
mov
jl
cli
jmp
push
loopne
xchg
add
add
ss
mov
xchg
outsb
hlt
not
push
dec
stc
xchg
add
jbe
pop
std
fadd
int3
xor
adc
xchg
ffreep
ja
insb
call
daa
sub
faddp
mov
push
mov
adc
or
sub
inc
es
ljmp
pop
adc
call
cmpsl
mov
dec
pop
cwtl
push
js
dec
fldenv
push
fcmovbe
out
lds
ror
pushf
mov
es
push
shl
push
dec
icebp
sbb
das
xor
inc
loopne
dec
imul
dec
mov
mov
cli
pop
mov
shl
xchg
adc
xor
mov
flds
rol
jbe
add
popf
dec
mov
cmp
clc
mov
inc
test
lahf
mov
adc
xor
sub
fisttpl
pop
or
sub
pop
lock
adc
aas
mov
jp
pop
inc
cmc
pop
rcl
je
xor
stc
mov
mov
daa
std
xor
mov
or
sbb
fldl
shll
add
fcomi
or
pop
sbb
sbb
xor
pop
fcoml
int
dec
jmp
inc
xor
sub
jp
or
xor
cmpl
addr16
cwtl
pop
imul
or
inc
cmp
add
xor
mov
adc
imul
jmp
call
push
test
in
subb
icebp
or
cmpsl
push
add
enter
sar
test
mov
mov
xchg
hlt
add
sub
hlt
daa
movsl
scas
nop
cwtl
pop
js
and
dec
inc
sar
mov
mov
add
and
add
loopne
sub
or
dec
mov
ljmp
sbb
ret
lods
jge
mov
mov
imul
dec
mov
lods
or
rcrl
leave
loope
fsubrs
lds
rcrl
adc
int
add
pop
je
push
insl
divl
pop
iret
jmp
test
shlb
and
and
push
or
jecxz
add
ror
mov
int3
sbb
int3
xchg
sahf
movsb
inc
shll
clc
add
sbb
test
mov
mov
es
cli
jo
xchg
roll
push
mov
xor
arpl
cmc
js
cs
jns
mov
push
jge
sub
mov
cmpsl
mull
addb
mov
enter
add
fsts
das
inc
cli
enter
jl
jb
cmc
add
xchg
roll
dec
in
and
or
sbb
icebp
repnz
pushf
icebp
imul
imul
sub
jmp
add
aam
lock
rorb
sub
add
or
lea
jbe
vpsubq
pop
jne
je
jae
sbb
inc
fsubs
cmp
xor
sub
cmc
sub
pop
push
into
xchg
pushf
add
add
cs
pop
add
add
add
jbe
push
ljmp
fidivrs
popf
cmpb
push
mov
pusha
sti
push
movl
sub
push
fnstenv
or
repz
aas
adc
jle
pop
sbb
mov
out
lock
or
sub
mov
jp
and
push
jmp
lods
cmp
ret
xchg
jbe
mov
push
popl
mov
pushw
test
push
or
daa
inc
gs
cmp
jge
imul
jnp
ljmp
push
pop
and
insl
clc
xchg
shlb
mov
xorb
sub
dec
lock
or
bound
adc
push
pop
ljmp
fisttpll
in
leave
loop
ret
int3
xor
dec
sbb
ret
loop
mov
jge
mov
sarl
rolb
ss
pop
cmp
sarb
and
test
aam
inc
insb
xchg
add
and
test
out
inc
sub
jge
lret
in
loope
xor
rorl
adc
add
or
inc
loopne
push
aaa
sbb
xchg
xchg
xor
xor
repz
adc
pop
filds
xchg
sbb
cmp
loopne
jecxz
adc
cmp
inc
xchg
sub
inc
ret
xor
or
push
fisubs
inc
add
idiv
add
xor
mov
or
jno
mov
addb
adcb
in
mov
and
rolb
addl
pushf
out
rclb
mov
jmp
inc
jl
js
or
or
add
loopne
xchg
outsl
or
inc
inc
add
popa
adc
cmpsb
inc
sbb
xor
cmp
or
test
sub
dec
xor
pop
loopne
inc
cltd
rcr
add
adc
mov
jne
loopne
insb
loopne
xchg
sbb
test
jne
adc
in
cwtl
enter
cmp
fisttpl
negl
xorb
imul
mov
popf
mov
enter
out
push
push
shr
test
in
pop
cmp
jle
mov
loope
ficoms
adc
mov
cmpxchg
sub
test
cmc
rcrb
adc
andl
js
out
xchg
jo
ror
xor
xor
mov
out
in
adc
jmp
mov
dec
inc
mov
dec
fdivr
lods
mov
imul
call
loope
xlat
shrb
icebp
loope
xor
test
outsl
pop
or
jmp
jbe
adc
mov
pop
out
pop
jecxz
dec
mov
or
dec
mov
cltd
pop
push
pusha
enter
lea
xor
cmp
jmp
loope
aad
or
jbe
fcmovne
fildl
fdivp
das
lods
test
mov
fsubl
jo
into
clc
shrb
cmpsb
push
shl
in
mov
push
enter
jae
dec
loop
push
das
jle
or
andb
in
and
mov
jmp
cmpl
jbe
pop
insb
xchg
lock
repz
inc
addb
jns
ret
cli
sub
pop
fildl
or
jecxz
repnz
adc
jl
add
test
pop
enter
pop
cmpsb
pop
jmp
jnp
xchg
push
je
jnp
inc
mov
jbe
push
arpl
stc
sbb
lret
cli
lret
or
push
mov
int
dec
leave
fistps
mov
loope
push
call
sar
xorb
adc
add
sbb
lret
inc
sbb
or
outsl
sub
and
mov
xlat
outsl
cmp
inc
inc
ss
pusha
xor
and
cltd
xchg
ror
sar
bound
xchg
xor
add
aaa
xor
push
add
ja
sbb
mov
lods
sub
cs
xchg
cmp
or
js
or
shrb
jge
pop
sti
adc
into
pop
or
inc
dec
mov
les
inc
fcomp
mov
sti
push
incl
xchg
jge
popf
movsl
mov
xor
sahf
hlt
add
lods
fcom
js
pop
mov
push
loope
or
jecxz
xabort
and
jl
mov
or
jns
test
test
add
add
inc
add
cmpl
mov
roll
inc
test
mov
xchg
mov
sub
daa
lock
stos
push
push
jp
fucomp
loopne
leave
inc
jb
fnstenv
clc
and
add
add
cmp
rcrb
imul
fistps
int3
les
add
jp
adc
mov
shrb
and
cmp
cmpsb
add
rclb
fistps
and
repnz
push
sub
and
and
repnz
lods
push
out
xor
sub
test
jl
out
push
movsl
pop
cmp
orl
rol
lock
adc
fildll
in
inc
mov
mov
mov
adc
jnp
adc
sbb
scas
clc
add
shlb
mov
push
add
or
mov
ja
lea
iret
scas
xchg
scas
xor
and
ss
mov
add
aas
jb
mov
sub
in
cmp
pushl
icebp
push
add
push
dec
ret
rolb
js
int3
xor
add
lahf
les
jmp
repz
nopl
aaa
fldpi
xchg
pusha
fcomps
add
out
les
adc
pop
pop
rolb
inc
rorl
das
and
add
push
mov
and
xorb
push
jno
mov
mov
inc
sbb
sbb
gs
out
adc
setnp
shrb
inc
fistps
popl
ret
push
add
and
lock
add
shr
repz
inc
mov
add
shl
arpl
or
ret
or
xor
push
or
and
or
or
loope
mov
xor
mov
imul
xchg
cmp
sbb
stos
scas
rcrb
aaa
roll
push
push
push
add
or
push
mov
and
cltd
xchg
xchg
add
add
add
repz
pop
push
sbb
addr16
xor
rcrb
aam
push
xchg
rcll
cmp
jge,pn
xor
pop
fsubr
pop
add
and
ret
sub
and
add
jp
or
and
cli
test
mov
add
sbb
scas
jp
std
lock
clc
xchg
jg
enter
cmp
lea
loopne
xchg
call
sbb
inc
hlt
and
mov
test
mov
mov
fimuls
nop
sbb
xchg
cld
out
lods
xchg
sbb
jge
out
pop
mov
roll
sbb
sbb
add
dec
movsl
andl
mov
adc
jae
inc
shll
ret
daa
fildl
cld
daa
mov
add
add
fmul
pop
dec
and
leave
add
and
add
jns
jne
or
hlt
pop
das
ss
mov
test
dec
push
dec
movsb
fimuls
shrb
lods
jne
cmp
mov
dec
xor
cmp
in
adc
addl
and
add
andl
ret
inc
mov
rol
lods
popa
sub
ret
dec
or
and
add
cmp
test
sbbl
xor
push
test
enter
gs
push
or
jo
ss
sbb
jno
icebp
adc
test
xchg
jo
and
pushf
cmpsl
pop
lahf
int
sbb
dec
sbb
push
lea
cmp
rolb
loope
sub
adc
ljmp
or
jg
xor
mov
hlt
jge
mov
rcrb
lahf
repz
insl
pop
cmc
gs
aaa
xchg
push
js
push
out
popl
movb
loope
test
arpl
sub
cwtl
sub
stos
test
sub
nop
cltd
outsb
and
xlat
inc
push
adcl
leave
imul
dec
out
es
xchg
add
hlt
icebp
pop
test
lods
jb
dec
and
push
or
es
and
cmp
and
pop
cld
rcr
jbe
mov
movsb
or
inc
jg
xchg
sbb
and
adc
das
ret
jne
adcl
mov
leave
aaa
nop
fwait
sbb
pop
and
dec
mov
int3
jmp
jo
push
movsb
movl
scas
mov
xchg
push
clc
je
hlt
nop
pop
les
into
call
push
jg
push
fwait
cmpsb
sti
cmp
push
in
jle
popa
rcrb
inc
sub
sbb
jnp
shl
aad
popa
push
int
js
add
push
faddl
ljmp
jl
inc
push
js
sar
xor
call
lds
and
cmp
jnp
sub
loope
and
rcll
outsb
or
add
subl
fistpl
fmuls
or
push
add
sub
in
inc
xor
xchg
inc
add
loop
lea
push
hlt
mov
mov
add
add
push
out
lock
jl
push
push
fldcw
push
mov
js
push
call
xchg
daa
mov
xchg
data16
mov
add
jg
ffreep
gs
sub
out
cmp
shl
call
rolb
adc
xor
jg
loope
pusha
or
adc
fwait
in
and
mov
or
call
lods
in
mov
hlt
mov
dec
mov
cmp
out
xchg
fcom
pop
jp
incb
mov
cwtl
in
adc
outsb
out
sbb
in
mov
push
mov
out
addl
and
or
fldt
ljmp
push
sahf
push
out
adc
icebp
cld
aaa
std
or
test
jno
sub
add
mov
sbb
insb
jmp
loopne
push
cmp
loope
cwtl
adc
push
add
or
adc
sub
insb
dec
ljmp
pusha
arpl
push
xchg
ds
xlat
mov
andb
ja
scas
sar
stos
pop
fadds
sbb
add
inc
or
cmp
ss
sub
outsl
or
in
sarb
pop
xchg
sbb
or
add
loopne
decl
add
and
roll
loopne
loope
ficoms
pop
jno
jns
mov
fstpl
dec
in
sub
inc
sub
and
push
xchg
adc
sub
in
pop
inc
mov
aas
and
adc
movl
push
dec
gs
lods
fldenv
fcmovnb
or
lret
lock
push
pusha
adc
or
int3
lret
dec
call
imul
cmpl
nop
popa
dec
mov
sahf
jp
inc
and
dec
cld
xchg
in
ret
add
or
add
sahf
jno
push
or
shlb
pop
cmp
test
inc
sub
sub
inc
push
fdivrl
rolb
pop
cmc
std
mov
out
mov
xchg
adc
and
mov
adc
mov
sub
add
int
adc
cmpsl
jle
test
push
jns
mov
call
je
inc
dec
loop
cmp
mov
cmpsb
push
sarb
mov
jo
movsb
ss
or
imull
je
mov
and
mov
enter
adc
add
or
loopne
lahf
iret
test
xor
pop
add
rcl
incl
enter
scas
dec
jae
mov
cmp
jp
lahf
inc
test
adc
cwtl
pusha
and
lahf
jmp
sbb
movl
add
and
sbb
jg
subb
pop
dec
into
cmpsb
jnp
xor
test
inc
test
in
mov
loopne
jnp
mov
cwtl
fisubl
orb
lret
ljmp
sti
rcl
lret
aas
mov
shrb
jmp
push
adc
hlt
test
jae
subb
mov
adc
dec
and
mov
negl
fmull
xor
sub
movb
stos
jbe
data16
inc
shlb
aaa
dec
cmpsb
outsb
fnstcw
mov
rcrl
push
push
call
dec
sub
sar
ja
cld
call
fcomps
xor
sti
shll
push
ds
jae
pop
stos
add
loope
lods
sub
sub
fisubrl
add
int
pop
imul
rolb
out
dec
loope
hlt
addb
stc
movsl
dec
pcmpeqd
out
roll
rorb
lea
add
push
or
or
xchg
adc
cmp
jae
fisubs
add
icebp
leave
mov
cltd
pop
popa
addr16
xchg
lret
sub
mov
call
pop
jo
xor
in
rcll
data16
sub
xchg
mov
mov
aaa
push
loope,pn
pop
and
sub
outsb
loope
xor
repz
add
mov
xchg
andb
ljmp
mov
call
and
negb
xorl
pop
testl
cmp
add
mov
pop
outsb
pop
ljmp
mov
add
mov
or
xchg
xchg
test
mov
inc
add
jns
aam
call
add
dec
xor
and
mov
out
pop
or
add
pop
js
jl
rcl
mov
sbb
jp,pn
test
jecxz
push
sub
dec
push
inc
mov
add
movsl
rcr
cs
ds
add
or
out
dec
not
xchg
and
jne
push
jl
add
sub
mov
out
lret
push
sbb
loopne
cmp
or
aas
fcoml
xor
sbb
inc
call
or
add
filds
or
sbb
mov
jg
jmp
das
adc
adc
mov
pusha
sbb
inc
xchg
lahf
sbb
scas
push
adc
decb
xlat
lahf
test
fmul
cmp
push
jne
xor
ret
inc
psllw
add
sbb
inc
mov
dec
orb
icebp
loope
inc
mov
ficompl
sar
xchg
ret
mov
mov
rcrb
or
sub
aad
jl
add
loopne
mov
test
int
jnp
mov
jecxz
sub
test
std
inc
or
sbb
fsubrs
jmp
sbb
and
mov
xchg
mov
pop
loopne
subb
cmp
ss
jl
inc
jae
in
adc
xchg
loop
push
or
and
icebp
jp
std
clc
les
in
xchg
movb
aas
fisubs
out
pop
sbb
sub
and
xor
mov
mov
cmpsl
xchg
enter
adc
rcr
pop
push
std
test
and
mov
sbb
or
lret
xor
les
sti
push
fimull
xor
sbb
mov
push
mov
add
shlb
pusha
add
xchg
mov
inc
inc
pop
iret
add
cld
xor
out
mov
nop
out
add
jb
adc
out
test
mov
inc
popl
addl
loope
leave
enter
stos
pop
scas
jne
ret
inc
subb
push
mov
in
add
movsl
in
mov
pop
or
inc
pop
les
or
push
jbe
jecxz
lret
rclb
pop
out
mov
outsb
out
jle
rorb
pop
out
sbb
ret
add
inc
lret
add
or
outsl
leave
rep
mov
cmp
imul
test
and
loop
xchg
jmp
cmp
mov
leave
and
sbb
sub
in
jge
sbb
cltd
cmc
out
orb
pop
cmpb
addb
xorb
repz
sbb
pop
push
and
add
sbb
sti
push
imul
sub
xor
fists
jmp
lsl
xorb
cltd
mov
js
icebp
repnz
jle
aaa
sbb
pop
fisubs
jo
insl
xchg
or
jo
sbb
and
icebp
adc
popa
inc
shrl
stc
jb
add
cwtl
add
push
mov
add
xchg
mov
jb
cmc
ret
and
or
add
add
fcoms
sub
jno
loop
stos
sub
sub
and
out
xchg
push
inc
push
mov
xorb
rorb
add
sub
jecxz
mov
dec
push
jae
pop
cmp
xchg
lods
shlb
mov
fsts
test
cmp
mov
daa
popf
adc
mov
flds
ret
or
dec
test
in
xchg
sbb
adc
adc
fimull
and
into
imul
nop
adc
jle
repnz
outsl
dec
mov
sbb
aam
nop
rcr
adc
cmpsb
aaa
sub
dec
ds
inc
sbb
ljmp
arpl
lock
push
jo
cmp
mov
cli
rcl
repnz
push
pusha
enter
dec
lea
std
dec
xor
xchg
mov
mov
cmc
jg
mov
les
ja
mov
pop
lds
aas
and
js
and
dec
test
lahf
push
dec
sub
adc
into
cld
or
pop
mov
add
mov
jl
lods
ficoms
pop
aad
inc
mov
test
rcrb
dec
jmp
xor
pop
sub
jl
adc
cli
popa
xchg
sbb
fdivs
and
jge
mov
orb
mov
in
push
jecxz
hlt
lea
adc
cld
lcall
xchg
or
sbb
cmp
push
pop
sbb
xor
popa
loopne
mov
xor
cli
add
imul
adc
iret
xor
lock
rolb
sbb
inc
jbe
or
mov
add
sbb
scas
lods
or
js
test
jl
sub
push
pavgw
adc
dec
add
xchg
add
dec
adc
adc
sub
jno
lock
fdivp
sub
movsl
ret
add
fmuls
inc
sbb
insl
ds
adc
ret
jb
mov
mov
add
pushf
outsl
shrb
call
pusha
inc
lods
ljmp
dec
add
data16
and
fisubrl
xor
jnp
push
dec
cmp
imul
fimull
inc
inc
adc
push
sub
mov
mov
sbb
aam
or
mov
daa
xchg
add
testl
shlb
les
jno
nop
jns
je
jg
inc
pop
dec
outsl
testl
mov
int
movsl
das
and
pop
fdivrs
fldcw
push
les
inc
data16
shll
mov
in
sbb
fs
adc
mov
into
iret
or
sbb
movsl
inc
cld
push
cmp
xlat
add
in
xor
mov
pop
cld
ret
jmp
or
inc
and
sbb
popf
loop
add
clc
push
jl
js
and
mov
jle
lret
test
inc
lea
leave
aaa
or
push
out
rcl
and
jecxz
adc
add
jae
add
jmp
and
cmp
inc
insl
lds
cmp
lea
inc
sbb
stc
shrl
testl
mov
xor
pop
addb
mov
cmp
clc
mov
sbb
add
mov
dec
hlt
ret
test
jecxz
popa
jp
aad
xor
xchg
sub
movsl
aas
jp
inc
xor
mov
je
or
mov
dec
andl
hlt
pop
dec
add
cmpsb
xor
movsb
pop
or
shll
add
std
aad
mov
popa
sub
adc
lret
cmp
or
and
sbb
test
dec
inc
call
out
mov
in
ret
and
add
dec
inc
popa
fldl
xchg
push
ret
push
adc
dec
mov
lock
add
push
adc
push
movsb
in
jns
jnp
out
fldlg2
sbb
fidivl
andl
add
clc
call
cld
cmpsl
add
rcll
or
sub
lods
jo
shr
loopne
push
ss
cmpl
adc
cmpsb
sub
lret
lods
mov
lock
push
sbb
add
pop
jnp
push
cs
or
cltd
shl
add
in
pop
das
add
dec
sub
adc
aam
test
jb
mov
pop
movsl
mov
cltd
xacquire
cmp
inc
fcomp
push
clc
sbb
inc
jb
mov
lods
jae
mov
popa
mov
xor
xchg
lea
loop
push
scas
push
repnz
jle
mov
aas
cmp
or
mov
test
popf
jmp
iret
xor
push
nop
push
aas
xchg
nopl
ja
xor
dec
mov
cmp
adc
jg
test
nop
in
xchg
scas
stos
incb
jmp
xorl
pop
jbe
cli
push
adc
sbb
dec
in
pop
ret
add
and
fwait
insb
bound
mov
cmp
stos
xchg
sub
jae
ljmp
and
ror
and
fistl
stos
fwait
fs
pop
xchg
mov
loop
idivb
js
nop
pop
pop
lds
ffreep
pop
je
lock
push
loopne
push
xor
jg
jne
sbb
add
pop
aas
rcl
imul
inc
decb
jb
and
or
push
ljmp
adc
mov
cmp
jge
pop
stos
in
insb
stc
add
in
sub
mov
adc
mov
sbb
aad
dec
loopne
les
stc
movsb
pop
pop
cmpsl
dec
mov
lret
es
xchg
jb
lock
jb
jo
inc
sbb
pusha
xor
push
test
adc
rclb
test
scas
popf
addb
scas
push
pop
mov
mov
jo
scas
push
ret
cmc
pop
pop
or
inc
sub
and
dec
mov
shll
sbb
pop
mov
adc
mov
dec
jmp
leave
cmp
int
fimull
inc
dec
arpl
gs
jmp
cli
mov
mov
mov
push
dec
jmp
ljmp
cmp
out
jl,pn
cmp
js
inc
push
test
dec
repnz
fsts
stc
mov
mov
or
jge
or
movsl
imul
sbb
jg
dec
pop
ret
push
insl
cmp
sub
push
mov
mov
push
and
dec
adc
test
add
scas
inc
sub
and
jmp
out
sbb
mov
sbb
pop
jb
add
out
clc
cmpb
jg
addb
adc
stos
mov
ljmp
rclb
lds
push
push
and
xchg
sbb
add
push
int
sti
pop
mov
test
sbb
and
mov
jl
rcrl
inc
mov
in
in
in
clc
push
inc
loopne
jg
push
fadds
pop
or
add
lahf
mov
add
add
test
jne
xchg
and
sbb
movsb
or
dec
movl
notb
ficompl
pop
mov
xor
xlat
and
jbe
fdivrs
jp
ja
rorl
test
test
or
es
jmp
sahf
cmpsb
and
testb
cmp
inc
add
and
sbb
sub
add
or
xor
sub
insb
ret
push
adc
es
das
out
add
enter
xchg
push
cmp
push
outsl
insb
jne
orb
orb
jno
enter
dec
xchg
fwait
stos
mov
imul
mov
ret
mov
jecxz
dec
push
ds
push
jl
addl
iret
push
lock
ret
adc
dec
popa
in
notb
out
xchg
add
inc
ficoml
hlt
mov
cmp
loope
pop
iret
dec
sbb
or
fadds
dec
jle
jns
sbb
aas
loop
xchg
subb
xchg
jg
mov
daa
pop
clc
dec
in
push
push
xchg
cli
lcall
jbe
and
mov
xor
lcall
psubusb
push
les
hlt
sbb
xlat
sub
iret
mov
shlb
inc
lea
call
xor
add
fadds
out
mov
lock
mov
push
pop
stos
mov
aaa
jne
test
lods
or
dec
out
xor
pop
sbb
insl
pop
dec
inc
jl
and
rcl
and
inc
das
push
push
insb
std
push
push
or
mov
and
std
jne
pop
or
dec
clc
mov
frstor
mov
pushf
hlt
fdivrl
pusha
add
rorl
cmpsl
add
mov
push
subb
mov
adc
loop
pop
sbb
pop
mov
cli
loope
push
cwtl
inc
mov
mov
adc
adc
pop
bound
aaa
xor
fisubrl
xor
out
jne
cmpsl
push
mov
add
neg
mov
out
rclb
shlb
dec
call
sub
adc
sbb
push
pop
dec
lea
mov
in
and
sub
mov
aam
push
rcrb
push
cmpsb
pushf
mov
dec
jne
fs
cmp
loope
inc
repnz
xor
imul
dec
mov
jns
adc
ret
pop
ss
cmpsb
jg
cmp
outsl
jae
push
shl
popa
sbb
mov
adc
gs
inc
jge
mov
and
mov
or
popf
fstps
inc
mov
and
or
push
cmpsb
push
xchg
push
pop
push
pop
rcrb
call
adc
sarl
pop
push
mov
cld
cmc
inc
fwait
outsb
mov
ret
pop
add
dec
pop
jl
add
fucomp
xorb
pusha
ret
adcl
ret
sub
push
scas
and
and
mov
cmp
add
or
gs
or
dec
pusha
popa
sub
repz
add
enter
orb
fbld
pop
cmp
jmp
mov
mov
or
cmp
scas
call
jns
inc
sbb
jl,pt
dec
jb
lret
loope
pop
negb
push
js
mov
jp
sbb
vpunpckhbw
jecxz
loop
cmp
pop
clc
jge
adc
iret
push
jmp
cmp
push
jnp
jnp
inc
movsl
je
sbb
leave
nop
pusha
adc
dec
les
add
inc
push
adc
pop
in
repz
pop
outsl
sbb
mov
sahf
sub
movl
sub
pop
push
psrad
outsb
lock
xor
xchg
loopne
mov
fimuls
sub
add
test
jbe
lea
hlt
sbb
shrd
jg
xchg
push
sbb
dec
and
adc
loopne
jo
adcl
fisubs
scas
mov
mov
push
dec
andl
mov
add
outsl
mov
jmp
pop
cmp
cmc
jbe
mov
add
sbb
jmp
test
sub
mov
jle
mov
mov
mov
adc
pop
les
add
fninit
or
inc
inc
popa
data16
add
shll
xchg
inc
leave
sub
bound
and
sbb
xchg
pushf
lods
or
mov
aas
and
fildl
mov
cmp
or
mov
mov
mov
call
or
ja,pn
lcall
push
xchg
cmp
inc
dec
pop
stc
push
mov
and
das
sbb
mov
or
add
in
adc
mov
stos
mov
push
xchg
test
fldt
repz
pop
pop
mov
push
aad
fmull
push
xor
adc
out
adc
xor
jb
addr16
add
xor
pop
pusha
roll
or
scas
mov
in
pop
movsb
adc
adc
xchg
or
rorb
clc
fiaddl
sbb
inc
mov
imul
frstor
rcrl
mov
adc
add
movl
das
dec
int3
dec
cmp
insl
shrb
clc
fcom
add
mulb
or
add
adc
adc
mov
dec
add
push
ror
adc
xchg
shlb
xchg
xor
add
loope
dec
sbb
mov
push
ja
sar
cmp
les
inc
xchg
jge
fisubrl
mov
cmp
outsl
sarb
nop
mov
aad
dec
mov
or
loop
pusha
sub
sub
pop
dec
adc
mov
xor
sub
test
sub
mov
or
mov
aam
cmpsb
adc
push
mov
mov
loop
or
idivb
cs
sub
outsb
cmpsl
les
andl
test
adc
sub
rorb
icebp
int3
sub
lods
push
adc
clc
xchg
or
xchg
jl
les
aas
jo
mov
fcoml
push
add
inc
fdivp
es
and
push
mov
jne
add
insb
daa
sub
dec
sbb
add
loopne
and
bound
sub
push
aad
xor
pop
or
cs
pushf
les
sub
cld
lahf
dec
loopne
xor
ds
cld
sahf
mov
jbe
dec
rcrl
sbb
pop
xor
vcomiss
jl
mov
clc
orl
add
xchg
test
push
fs
mov
fcomp
push
rorb
push
mov
ss
insl
lret
push
mov
push
andb
add
adc
notl
sub
inc
addb
sbb
loopne
add
icebp
dec
ds
adc
and
jo
mov
shr
xor
xor
icebp
jp
xchg
nop
sbb
push
jl
or
loopne
movsb
stc
pop
xchg
loope
xchg
adc
mov
enter
into
aam
sbb
xor
jb
enter
pop
ret
xor
lcall
hlt
xchg
or
inc
insl
js
sbb
rcrb
sub
mov
mov
push
test
lea
insb
xchg
arpl
add
sbb
inc
dec
pop
call
aaa
jb
mov
iret
xchg
push
ss
sub
add
les
fisubrs
jmp
aam
jnp
test
sarl
sbb
push
dec
rcr
rcrb
subl
cmp
add
pop
out
enter
cmovle
sarb
adc
aaa
xchg
outsl
movsb
dec
stos
loopne
push
enter
or
loope
push
repnz
pop
sahf
jnp
jb
lock
cmp
sahf
inc
push
daa
popf
mov
dec
push
and
dec
cmc
js
int
movsl
scas
cmc
fs
sub
in
adc
mov
pusha
insb
cmp
imul
add
rolb
sbb
sbb
sbb
and
dec
xor
mov
rcr
sub
mov
jmp
mov
inc
std
xchg
sub
clc
jae
shlb
lcall
adc
jmp
sbb
int3
lock
pop
scas
int3
mov
mov
sbb
add
fsubl
ss
dec
push
sub
jne
add
pop
jge
in
dec
pop
push
ret
data16
clc
and
pop
movsb
into
vcmppd
pop
leave
push
loopne
sti
daa
out
pop
test
adc
push
pusha
pushl
or
adc
js
xor
xorb
sbb
rolb
dec
add
sub
fadds
aaa
je
aad
call
dec
lea
sbbb
shlb
sahf
and
sub
stos
inc
pop
cmp
in
mov
jo
push
jae
nop
push
xchg
or
xchg
add
clc
jne
sbb
xor
dec
or
cltd
lock
outsl
ret
jbe
cmp
addb
sbb
adc
sbb
rcll
mov
cmp
cmp
lret
cmp
inc
jae
js
sub
inc
add
jbe
popa
test
pop
adcb
push
andb
inc
push
pop
loope
inc
adc
jo
mov
rolb
out
jb
dec
aam
push
or
or
outsl
test
inc
iret
jb
sbb
push
test
sbb
cmp
test
fcoml
ds
dec
fbld
test
fdivs
sbb
ret
inc
xor
add
rcrl
xchg
sbb
aaa
dec
sbb
addb
rol
inc
rcrl
or
cmc
je
and
vaddpd
gs
ret
jno
push
add
xor
jge
inc
fwait
pop
imul
dec
loop
jae
in
int
mov
and
movb
hlt
cmp
in
aam
fsts
mull
xlat
inc
fwait
and
mov
dec
cmp
sbb
adc
adc
sub
or
xlat
outsl
or
cmp
or
or
sarb
mov
or
jae
xchg
js
cmpsl
xor
mov
out
dec
lock
scas
mov
add
in
cmp
outsl
ja
scas
xor
adc
push
add
mov
xor
sub
fcomi
pop
add
std
dec
pushf
mov
fstps
adc
mov
or
push
jo
jne
mov
pop
leave
and
ret
xchg
aam
fwait
dec
sbb
or
out
scas
pop
inc
lods
inc
jge
rcrl
dec
pop
popa
inc
aam
add
mov
hlt
arpl
pop
dec
aam
lret
inc
or
jmp
flds
and
sbb
int
loopne
inc
jl
test
cmp
enter
lea
in
jne
fdivr
dec
ja
jnp
rorl
fidivl
sub
and
push
lea
cmp
out
ljmp
je
adc
sbb
leave
popa
mov
xor
xchg
movsl
scas
or
test
cltd
enter
jge
jg
cmp
mov
mov
adc
sbb
sub
aas
lahf
test
add
ds
sub
add
jns
sub
scas
mov
xor
push
mov
iret
into
push
aaa
mov
ret
scas
push
sbb
cmp
mov
inc
subb
jno
ds
adc
jge
pusha
outsb
les
shrb
mov
dec
mov
in
add
dec
lock
lret
pop
mov
call
fdivrl
and
enter
add
and
xor
sub
inc
into
sbb
push
call
jg
and
out
xor
mov
and
add
test
push
and
xchg
fisttpl
out
or
insb
in
mov
in
push
jne
xor
inc
jmp
or
ret
scas
sbb
xor
cmp
pop
pop
mov
sbb
les
sbb
call
xor
mov
cmp
jo
sbb
xchg
pop
mov
xor
rcl
mov
aad
ds
loope
xchg
into
adc
mov
loopne
bound
adc
sub
in
add
xorb
inc
mov
jmp
mov
js
sbb
cmp
divl
xchg
imul
faddl
lcall
or
in
and
mov
loop
into
dec
int
jbe
add
sub
push
addb
shr
add
mov
pop
daa
jecxz
cmp
lock
rol
adc
ljmp
or
test
cmp
fadds
inc
dec
add
imul
out
or
aam
push
cld
push
rcrb
jmp
mov
sbb
pusha
pusha
shrb
xor
bound
jns
mov
dec
das
js,pn
mov
dec
sbb
loopne
fs
sub
and
add
movsl
ja
xchg
mov
decl
push
push
popa
les
and
mov
fs
mov
xorl
inc
push
and
xor
es
je
imul
sbb
mov
jge
pop
adc
ds
fs
call
sbb
adc
mov
add
fidivrl
popa
jo
leave
pusha
in
add
mov
repnz
movsl
add
jo
or
lock
fadds
loope
or
int3
xchg
aad
ror
push
sbb
cld
jecxz
and
xchg
ss
add
loop
xchg
inc
rorb
iret
jmp
in
addr16
loop
push
jae
push
mov
mov
mov
fsubr
push
and
sbb
out
push
adc
pop
leave
push
cltd
rcrb
call
popf
cld
cmp
pop
mull
xor
repz
or
and
inc
mov
mov
outsb
mov
push
rorl
icebp
mov
cmp
or
rcrb
loop
insl
pop
hlt
add
rcrb
orl
mov
or
inc
inc
fwait
or
adc
fcoms
add
andb
ss
inc
xlat
adc
xchg
adc
adc
or
mov
and
cld
std
jns
inc
pushf
bound
xchg
dec
into
shll
adc
std
pusha
and
cmp
or
daa
push
xor
mov
and
jp
aas
xchg
mov
pushf
out
ljmp
push
loope
jle
add
inc
cmc
sti
fsubrp
das
add
les
push
fprem1
dec
and
nop
add
pop
xor
mov
pop
and
test
adc
xor
adc
jns
adc
ror
xchg
pusha
xor
jns
ljmp
cmpsb
push
sub
and
add
or
shl
cmp
or
shrb
xlat
and
mov
dec
ret
sub
or
test
outsl
nop
sahf
loopne
push
mov
jmp
sbb
inc
jbe
sub
outsb
loopne
rcll
mov
lds
sahf
sarb
and
push
addb
or
xor
pop
add
aas
rcrl
push
and
das
sbb
adc
jns
loope
into
clc
imul
pop
stos
dec
mov
sub
lock
jp
inc
scas
test
incl
mov
add
cltd
xor
in
movsb
addr16
jo
mov
es
adc
jns
movsl
lea
cmp
imul
insb
or
xchg
test
lock
stos
leave
rorb
jp
xchg
inc
mov
pop
sbb
loopne
test
xchg
sahf
aaa
sahf
fisubrl
ror
push
push
add
in
inc
jo
repz
jge
mov
nop
ret
loop
cli
cmp
test
int3
adc
daa
ret
cmpsb
pop
push
paddw
lret
jp
push
popf
pop
add
clc
xchg
mov
cmp
cwtl
or
pop
lods
inc
add
orl
inc
sbb
clc
add
dec
pusha
cmpl
mov
orb
mov
mov
movsl
adc
push
add
mov
movsl
add
dec
inc
rorl
ja
shlb
in
mov
push
sub
sub
push
mov
dec
add
jne
add
cli
popa
xchg
inc
lock
dec
and
sub
inc
js
mov
rorl
sbb
push
and
mov
out
cli
cmp
lock
faddl
clc
aad
sbb
xor
pop
add
mov
rclb
sbb
pop
jmp
push
sbb
cld
push
lea
mov
adc
dec
sub
push
ds
cmp
and
mov
mov
lds
adc
fsts
orb
jae
test
hlt
inc
popl
jmp
aaa
mov
pop
insb
aad
pop
sbb
push
cld
sarl
je
aam
mov
roll
shll
je
fldt
and
pop
popa
inc
mov
xorl
lcall
repz
movsb
repz
mov
fnsave
add
mov
lock
inc
add
hlt
dec
mov
or
fdivrs
ds
push
jb
rcrb
sbb
pop
inc
hlt
mov
sbb
push
mov
xchg
add
jmp
outsl
xchg
stos
xor
shrb
dec
ss
jmp
ffree
adc
js
or
call
push
sub
jge
and
shr
roll
pop
scas
dec
adc
sub
push
pop
jmp
add
adc
dec
jbe
scas
sub
cwtl
out
sahf
sub
cmp
lea
mov
out
mov
and
jne
test
lds
lock
in
mov
push
call
fisubs
jcxz
pop
ret
lock
fiadds
int
cmp
sub
mov
mov
lahf
push
jb
cmpsb
xor
sbb
xor
int
inc
push
cld
nop
add
and
xchg
ds
aas
cmp
daa
sbb
add
cmp
cld
js
addl
test
push
dec
shl
addr16
sbb
clc
pop
pop
inc
and
inc
and
mov
sbb
sub
sub
and
ja
rol
mov
dec
or
add
xchg
jecxz
adc
cmp
or
in
js
add
out
fists
movsl
cmpsl
aaa
mov
jle
add
dec
mov
jmp
cmc
movsl
shll
fiadds
andb
rcl
out
cmp
lret
cld
scas
rorb
repnz
mov
dec
pop
imul
or
loop
hlt
push
mov
mov
sub
xchg
jg
icebp
mov
out
push
filds
ljmp
push
cmc
sbb
call
adc
inc
adc
bound
lret
cmp
testb
in
jle
push
call
push
and
mov
loop
or
add
pusha
aas
es
mov
cld
and
lock
ficoml
mov
mov
loopne
popl
xor
call
xlat
cmp
out
in
out
push
in
enter
hlt
cmp
imul
mov
pusha
add
hlt
and
lock
cmp
cmp
icebp
or
adc
push
jl
cwtl
sub
mov
xchg
pushf
add
js
cmc
add
mov
pop
mov
push
mov
insl
out
out
and
enter
push
xor
lock
mov
mov
jmp
shl
test
in
pop
out
push
stos
mov
fstl
or
inc
adc
adc
arpl
push
add
fs
popa
xor
jmp
pop
pop
mov
inc
enter
imul
adc
lret
lock
pop
pop
and
dec
xor
test
cld
lds
jb
and
call
not
fisttps
aam
jp
movsb
pop
push
ficoms
add
dec
cmpsl
test
sbbl
stos
mov
mov
cmp
and
xor
movsb
cli
fnstcw
inc
in
ret
loopne
lods
jge
rorb
add
pop
sub
mov
popa
insl
push
xchg
sbb
jg
fisubl
enter
into
cs
or
or
sarb
lock
addl
mov
cmpsl
cmpsl
mov
fcomp
test
inc
and
jno
mov
loopne
clc
cltd
lds
test
add
js
cmp
ret
sbb
sub
add
add
or
cs
mov
add
and
dec
dec
pop
add
and
cmpsl
add
xchg
cs
loope
sbb
push
not
jg
sbb
or
add
inc
idivl
in
mov
lods
xor
cltd
fiaddl
nop
and
mov
dec
test
and
pushf
fistps
aad
fdivr
push
cs
arpl
into
add
jmp
add
ljmp
jbe
mov
test
arpl
add
or
test
mov
inc
mov
cmpsl
icebp
add
push
les
sahf
inc
mov
call
and
shll
mov
xor
add
pusha
loopne
dec
inc
movsl
popf
shlb
lret
mov
inc
jne
in
sbb
sbb
mov
rcrb
test
mov
cmc
xchg
cli
imul
and
push
pop
icebp
fsubr
scas
jnp
cmp
imul
test
sbb
lahf
inc
out
nop
bound
mov
dec
mov
cmp
mov
adc
test
aas
subl
std
cmp
inc
mov
into
sbb
mov
adc
loopne
mov
mov
push
push
fsubrs
adc
jg
xchg
fwait
mov
adcb
jp
lods
stos
cwtl
mov
sub
das
and
sbb
xchg
rorb
mov
icebp
mov
pop
icebp
in
inc
pop
push
mov
stos
xor
lret
xor
jle
push
sbb
out
mov
sub
xchg
adc
inc
popa
jle
cmpsl
arpl
inc
stos
addr16
sub
and
scas
xor
or
inc
decl
cld
jmp
lock
test
sbb
imul
sbb
inc
sti
aaa
push
push
add
mov
mov
test
mov
dec
and
or
jge
xor
jmp
push
inc
pusha
jnp
lcall
add
push
jne
mov
push
rcrl
ret
call
push
or
call
xor
or
call
lock
rorl
sub
mov
mov
fcomps
push
xor
dec
xorb
xchg
mov
and
jmp
push
cli
fadds
cltd
das
or
repz
add
add
cld
mov
out
and
sub
push
jmp
add
fmull
dec
add
loopne
or
jo
mov
pushf
sbb
lods
fldt
clc
mov
pop
or
or
jg
cld
test
pop
sub
cmp
sahf
daa
xor
adc
mov
daa
mov
inc
dec
iret
mov
adc
xchg
aad
xchg
jbe
mov
or
js
ljmp
sub
bound
add
mov
inc
or
sbb
dec
pop
shlb
aas
loope
addb
icebp
push
insb
add
adc
or
clc
lock
in
sub
aam
pop
mov
rorb
xchg
aaa
ds
xchg
shlb
lock
rep
inc
call
or
add
cmp
dec
sbb
ljmp
and
imul
mov
jg
notl
xor
cwtl
pop
test
pop
add
sbb
inc
add
mov
ds
dec
lahf
mov
sbb
lret
dec
lea
push
jo
adc
clc
and
sbb
dec
addb
add
lea
push
push
sub
imul
jno
fsubrl
mov
or
ret
int3
pop
push
shlb
jge
mov
or
cmpsl
addr16
xor
xorl
aam
jne
xor
xchg
or
or
test
aam
and
adcl
mov
push
pop
mov
mov
rcrb
notb
push
shl
clc
jae
popa
rolb
or
in
sub
jo
jne
pop
or
clc
pop
fsubs
outsl
adc
and
pop
mov
push
inc
or
add
jo
mov
sub
jo
imul
ficoms
pusha
lods
hlt
xor
cmpsb
inc
addl
lea
aas
in
scas
push
es
inc
leave
mov
add
testl
inc
add
fidivs
lret
add
outsl
movsb
aas
xchg
lret
sub
push
loopne
and
jbe
inc
jo
pop
lock
and
js
mov
hlt
insb
pop
xorb
add
add
cld
mov
sbbb
in
jmp
outsl
leave
sub
leave
ds
inc
hlt
punpckhwd
aaa
mov
dec
lea
hlt
add
or
daa
push
ret
add
jae
adc
sub
test
stos
cmp
mov
add
adc
or
vmread
mov
dec
pusha
add
gs
and
cmpsb
and
or
pusha
and
push
jno
xor
xor
incb
xor
hlt
adc
or
push
push
fdivrp
xchg
sub
pop
lock
int3
adcb
or
jno,pn
divb
inc
es
in
rorb
lods
fnstcw
andb
test
cltd
push
das
pop
frstor
mov
jne
nop
push
stos
out
fadd
ret
in
or
sti
mov
ret
push
jbe
push
add
in
push
call
mov
push
movsl
adc
cmp
enter
push
or
movsl
pop
add
popa
push
add
in
jns
cwtl
mov
jo
adc
inc
inc
sub
xor
popa
pop
cli
and
push
jge
add
jg
sub
sbb
sbb
out
and
loope
mov
pusha
dec
pop
mov
sarl
sbb
nop
inc
sbb
dec
and
shrb
or
div
add
mov
adc
clc
push
push
sbb
inc
add
and
out
mov
fadds
call
push
mov
dec
nop
jbe
or
jne
add
jne
cs
ljmp
xchg
ficoms
jecxz
daa
lret
test
cmp
inc
sub
mov
jnp
test
xchg
jbe
add
mov
loopne
xchg
bound
and
add
dec
call
mov
pop
scas
or
pop
pop
dec
cmpl
or
add
dec
mov
jne
dec
pushf
adc
push
push
daa
adc
outsl
add
cmp
mov
jmp
pop
pop
pop
inc
mov
nop
xchg
jbe
add
daa
jmp
loopne
subb
outsb
popl
call
shll
movsl
lret
sbb
sub
jbe
mov
xor
pop
ja
pop
into
jo
xor
and
mov
div
and
dec
mov
xor
sbb
dec
inc
mov
pop
call
push
das
xlat
cmc
inc
add
jnp
mov
push
fimuls
shl
in
pusha
xchg
xor
into
push
and
xchg
dec
rolb
inc
std
lcall
lret
jnp
shll
das
add
jmp
int3
pop
mov
out
mov
jl
pop
inc
add
lds
lret
sub
shlb
adc
and
pop
add
xchg
hlt
mov
out
pop
mov
xchg
jnp
fldenv
jl
lds
add
test
pop
out
cltd
decb
mov
xchg
scas
ret
js
ja
cmpsb
rorl
dec
addr16
cli
incb
jle
fs
xor
jbe
pop
jmp
xor
mov
adc
dec
fxtract
cmp
adcl
das
push
ret
cmp
aas
out
out
add
sbbb
cld
dec
dec
shll
insb
push
daa
push
mov
dec
xor
sub
popf
jp
cmp
mov
or
lock
or
or
sub
insl
inc
loop
sahf
sbb
arpl
inc
hlt
sub
mov
push
sbb
cmc
or
cmp
imul
xorb
push
in
push
push
inc
xchg
hlt
add
push
outsl
xlat
dec
cmp
pop
jge
sahf
xor
add
incl
rorb
jmp
addb
sub
dec
addb
or
jmp
jnp
mov
and
sbb
lods
adc
adc
mov
add
jmp
sbb
lods
aas
outsb
add
inc
nop
or
or
cmova
mov
xchg
mov
mov
cmp
or
lretw
sub
cmp
aas
pusha
addl
fs
sub
loopne
sbb
mov
dec
dec
loopne
scas
sub
enter
adc
jne
imul
pushf
insb
cmp
das
rorb
icebp
andl
mov
or
lahf
or
icebp
xlat
xchg
fucomip
mov
xor
int3
xchg
ret
inc
add
fst
jne
sbb
push
leave
lcall
mov
jnp
enter
mov
iret
mov
add
sbb
mov
pop
mov
andl
shll
lret
sbb
add
mov
jg
repnz
xchg
push
shlb
addr16
mov
dec
mov
mov
mov
xorb
mov
pop
movsl
and
push
xchg
mov
daa
outsb
ficoml
xor
mov
ljmp
lods
popa
ret
and
clc
xchg
adc
scas
roll
fcompl
clc
movsb
push
lahf
fwait
push
ljmp
push
lahf
pop
push
xor
jns
dec
or
sbb
or
inc
mov
call
push
in
daa
bound
add
push
adc
xorl
call
clc
bts
xchg
dec
xor
xor
into
push
push
jne
out
and
testb
pop
or
stos
xchg
fwait
lods
test
add
push
and
outsb
lea
inc
xchg
adc
imul
xchg
insb
pop
test
cmpsl
push
aaa
call
dec
aas
movsl
push
out
fld1
cmp
ret
mov
mov
xor
pop
push
adc
ds
nop
js
rcl
lret
adc
sub
sbb
lods
dec
jge
cmp
inc
in
mov
jmp
inc
lea
mov
xadd
push
xor
pop
test
or
rclb
lock
mull
inc
ret
push
or
mov
pop
and
cmpsb
xchg
lock
jp
mov
das
dec
xor
xor
push
mov
mov
xchg
xor
jp
int
nop
pusha
fcompl
mov
popf
mov
sbb
loop
adc
outsl
inc
sbb
or
or
jp
xchg
sbb
fistpll
sub
scas
mov
rolb
negl
push
rorb
sbb
in
xchg
loopne
jo
dec
loope
mov
xlat
pop
jle
out
inc
pop
add
sbb
push
push
call
cmp
into
inc
rcr
jmp
and
add
jne
push
pop
rol
cmpl
nop
gs
adc
test
cmp
test
or
sbbl
loopne
jno
call
adc
shrl
xchg
mov
test
arpl
jae,pt
cmp
or
jle
repnz
popf
sub
clc
pop
mov
and
pop
dec
test
cmp
orb
sub
movsl
pop
sbb
sub
pop
lcall
jbe
pop
test
test
aas
sub
aaa
cbtw
repnz
scas
add
or
or
sbb
sub
cmp
mov
sbb
lret
ret
pop
clc
xchg
push
jo
das
jb
xlat
add
jnp
ret
pusha
ja
outsb
mov
add
mov
fdivrs
sub
pushf
mov
lock
cmpb
jl
test
mov
sbb
js
fs
push
sub
xchg
push
in
or
mov
inc
lds
and
jne
dec
loope
lock
test
leave
pop
lds
and
out
mov
jns
scas
add
sbb
or
mov
pusha
push
lahf
pushf
add
rorb
out
push
out
sub
xchg
jl
and
icebp
jo
cld
dec
std
xor
sbb
fimuls
adcb
test
xor
lods
dec
or
leave
pop
jmp
dec
hlt
repz
loope
adc
sti
adc
dec
push
xor
cs
cmp
lds
lea
idivl
jp
mov
dec
ja
inc
xchg
push
push
pop
fcomi
add
push
rorb
insb
dec
jns
cld
add
insb
icebp
adc
xchg
test
mov
sub
rcrb
sub
add
repnz
jb
adc
int3
rol
outsl
and
sbb
add
fistpll
or
add
add
inc
xor
add
dec
pop
lret
nop
or
xor
popa
orl
or
push
fisubrl
sbb
popl
cs
loop
call
or
sub
cltd
push
mov
xchg
js
mov
xor
cmp
mov
addr16
stos
mov
xchg
lea
mov
push
push
push
stc
push
ss
sub
scas
mov
add
xchg
cli
ja
divb
mov
loopne
clc
xchg
mov
test
xchg
fnstcw
mov
jbe
int3
ret
mov
mov
aad
shrl
dec
mov
push
bound
out
ss
popa
mov
inc
nop
loopne
cmp
hlt
icebp
push
inc
jmp
adc
shr
ljmp
stc
xchg
mov
fstps
push
and
mov
mov
lds
sbb
ret
cli
mov
inc
into
jg
dec
into
repz
incb
sub
stos
test
pop
outsl
push
and
add
push
or
insl
daa
sbb
leave
inc
test
test
and
lods
add
mov
lods
scas
sub
sub
cmp
data16
mov
fbld
jmp
or
add
and
out
insb
and
push
mov
mov
hlt
scas
adc
test
aaa
jle
mov
cmp
dec
cmp
out
nop
insl
and
sti
popa
lcall
xchg
xorb
fwait
or
loope
jecxz
sbb
and
mov
or
sub
ret
sar
repz
out
pop
and
mov
and
pop
cmp
and
lods
sar
pop
add
cltd
dec
dec
shl
sahf
push
mov
out
mov
or
jl
sbb
add
sub
mov
mov
enter
or
rorb
dec
pavgb
loope
shrb
sbb
popa
fisubrs
outsl
push
and
and
faddp
dec
pop
lret
dec
add
mov
pop
int
add
scas
nop
add
cmc
jp
aas
add
sbb
and
clc
adc
jmp
and
push
and
add
pop
inc
adc
dec
jne
sbb
jae
xor
filds
pop
cld
jmp
std
cmp
jae
xor
jmp
xor
cs
sbb
or
pop
out
mov
and
loop
sub
sar
add
in
jp
add
adc
fistps
pusha
or
dec
sub
adc
loop
dec
pop
cmpsl
pop
out
fdivp
push
loopne
stos
lock
and
js
mov
les
xchg
stc
in
mov
daa
shl
mov
and
jmp
lahf
clc
add
les
cwtl
mov
stos
adc
aas
xchg
divb
les
adc
test
inc
repnz
jbe
or
fsubl
test
stos
int3
repnz
push
dec
pop
lods
cs
lods
and
xchg
xor
adc
loope
add
int3
or
mov
lds
mov
dec
xchg
dec
dec
or
mov
dec
lock
jne
ss
add
jnp
out
jle,pt
push
js
pop
cwtl
or
inc
cwtl
incl
mov
jp
shrl
es
sub
push
adc
les
mov
pop
fidivrs
jns
pusha
mov
int
fisubrs
nop
add
subl
add
popa
test
xor
push
ss
add
jg
or
push
mov
test
pop
test
addl
adc
fwait
mov
aad
mov
sub
sub
dec
lock
fidivrl
sub
mov
sub
loopne
outsb
dec
and
fdivr
fldcw
xchg
jle
xchg
repz
lock
jle
test
sarb
jg
or
sbb
sub
aas
mov
sti
into
movsb
cmp
inc
fdivrl
ss
pusha
stos
push
fsubs
mov
pusha
popf
inc
negl
arpl
xchg
cwtl
add
mov
xorb
or
pop
mov
or
mov
sub
outsl
cld
sub
xor
pop
xchg
push
fdivrs
jecxz
mov
test
pop
sahf
call
push
xchg
pop
imul
jg
lods
seta
movsl
sbb
cmpsl
xor
xchg
lock
inc
popf
fidivl
pop
mov
xor
test
sahf
test
flds
aaa
out
sub
jae
push
cmpsl
jo
lahf
mov
lret
cmp
lods
rol
lods
lret
adc
and
dec
pop
jp
insl
mov
pop
mov
ja
adc
imul
inc
in
ljmp
xor
sub
add
bound
ret
xor
fcoms
addr16
and
mov
flds
out
jp
inc
add
xor
icebp
movsl
xchg
and
stos
mov
and
add
jne
add
inc
jle
push
popa
xor
sbb
scas
bound
xorb
popa
mov
push
or
leave
xor
enter
fsubrl
pop
clc
stos
mov
enter
mov
mov
rcrb
rcrb
jg
xchg
push
jae
cmp
daa
rcr
pop
add
dec
add
test
sbbl
arpl
push
in
xor
lret
clc
sbb
stc
add
adc
ljmp
or
dec
adc
adc
xchg
jmp
dec
les
cmp
xor
mov
push
into
mov
into
js
xor
mov
repnz
movsl
int3
int3
mov
into
dec
mov
xor
enter
and
sti
sbb
xor
arpl
or
inc
mov
les
pop
popa
inc
arpl
pop
fsubrl
sti
add
add
inc
ljmp
or
movsb
popf
dec
scas
sbb
mov
idivb
insl
and
fidivrs
stos
or
fcomps
call
lds
sub
mov
xchg
dec
popf
xchg
jmp
into
mov
imul
pusha
je
fnsave
int3
sbb
arpl
loop
mov
pop
and
ret
add
xor
cmp
cld
es
cli
mov
mov
fimuls
xor
cltd
and
add
mov
add
ja
clc
inc
test
subl
lods
sahf
lock
orl
mov
mov
adc
jne
fmuls
add
push
and
push
and
inc
pusha
inc
push
cmpsl
cmp
imul
int3
outsb
insb
pop
sub
aaa
add
outsb
mov
and
mov
or
icebp
mov
xchg
les
cmp
jo
inc
les
dec
push
jmp
adc
cmovnp
stos
adc
adc
mov
fwait
adc
shl
daa
adc
jp
cmp
filds
fnstcw
gs
fadd
adc
ror
or
add
decb
loopne
in
and
call
xor
sub
jl
pop
clc
mov
push
loope
loopne
push
fwait
pop
xor
add
push
add
adcl
xor
jo
xor
jmp
or
leave
fsubr
dec
xchg
mov
arpl
mov
sbb
xchg
sub
shlb
out
insb
stc
in
add
fmuls
jmp
lock
xchg
mov
push
in
add
loopne
cmpsb
add
jg
xor
add
loope
pop
outsl
inc
inc
dec
dec
test
sub
divb
dec
xchg
cld
shlb
dec
bound
add
ss
adc
adc
sbb
shrl
outsb
xor
arpl
fdivrs
loop
adc
mov
jmp
lret
mov
int3
aad
jnp
andb
adc
bound
mov
add
dec
add
fdivp
inc
or
cltd
popa
das
mov
lock
cmp
in
mov
insb
inc
sbb
add
xor
aas
push
testb
mov
push
lahf
push
dec
sbb
inc
sbb
xor
xchg
loop
lcall
insl
imul
dec
and
pop
mov
popf
addr16
orl
push
repz
add
inc
outsl
aaa
lds
inc
push
cli
ret
sub
daa
xor
xchg
aam
add
popf
data16
adc
popa
in
mov
dec
mov
test
ss
and
pop
or
pop
adcb
mov
inc
mov
pop
sbb
jp
pop
lock
and
pop
add
pop
jmp
add
addb
lods
xor
mov
les
aad
or
sbb
adc
xor
or
and
add
cmp
mov
scas
insl
js
ljmp
cmp
and
adc
je
lcall
in
push
add
push
mov
mov
mov
cwtl
add
int
fmuls
loope
lahf
cmp
lods
je
pushf
fmuls
loop
add
dec
add
cld
add
and
movsb
outsl
pop
mov
or
and
jmp
out
ret
and
fisubrs
pop
cli
and
sbb
icebp
mov
out
ljmp
sbb
xchg
subl
push
hlt
xor
mov
xor
jp
dec
xor
es
shrl
add
ss
mov
or
jge
pop
xchg
sub
lock
rcl
mov
add
cmc
mull
fsubrl
dec
jmp
push
sub
adc
adc
loopne
imul
add
xchg
std
pop
mov
gs
jne
cmp
std
mov
jo
ficoml
push
sub
pop
cmp
pop
ret
iret
bound
fdivs
ffree
ret
push
clc
cmpsb
pop
pop
inc
ljmp
and
movsb
idivb
and
mov
xchg
and
subb
and
cmp
js
pop
adc
lret
dec
cld
imul
inc
add
bound
mov
mov
sub
add
jno
ss
fcmove
sub
inc
addl
fisubl
jp
icebp
test
mov
iret
xchg
mov
arpl
mov
movsl
adc
jae
push
mov
sub
mov
push
dec
add
xchg
gs
pop
shlb
repz
add
popf
daa
inc
or
pop
ret
lds
jno
mov
vmovdqu
jo
test
fdivs
pop
daa
inc
je
les
pop
ret
add
in
out
ret
or
xchg
shlb
mov
mov
mov
mov
or
sbb
jo
jmp
rcll
jno
dec
in
push
push
call
int3
dec
inc
xchg
add
imul
sub
fcoml
stos
mov
xor
ret
pop
and
clc
add
test
out
mov
pop
cltd
lcall
mov
add
or
cmp
push
ss
add
shrb
pop
jge
into
adc
sub
dec
loop
add
es
ret
cmp
sbb
daa
sub
int
push
add
repz
cmp
pushf
ja
ds
pop
loop
loop
or
mov
jbe
inc
jl
ss
mov
lahf
seta
xchg
cmp
jb
outsb
cmp
xor
mov
push
xlat
sub
jmp
shrb
mov
cmc
std
arpl
mov
aad
push
sbb
dec
js
lock
mov
push
and
and
xchg
xor
sbb
sub
out
addl
add
cwtl
pop
mov
lcall
push
inc
jmp
nop
sub
push
mov
outsl
mov
add
mov
out
add
sbb
mov
xorb
xlat
loopne
add
lods
sarb
pop
and
imul
int
xchg
push
test
shlb
js
test
pusha
cmp
lods
push
or
push
test
adc
bound
cltd
add
push
test
adc
xor
inc
sarb
cmpsb
daa
or
add
loopne
xor
cmp
mov
adc
mov
fsubrs
sbb
ret
xchg
aam
pop
ret
pop
xor
aam
or
dec
xchg
dec
faddl
insb
push
sub
add
push
inc
nop
sbb
in
mov
loopne
mov
and
jmp
and
push
lock
xchg
insb
dec
xor
pusha
mov
sub
xor
adc
adc
fnstenv
ret
push
sub
bound
pavgb
or
orl
stc
xchg
mov
push
jmp
lock
xchg
nop
popa
aaa
cmp
or
dec
sbb
test
out
inc
out
mov
push
adc
and
insl
push
xor
mov
out
jb
adc
dec
push
sbb
shll
shrb
inc
and
mov
xchg
je
mov
jb
mov
cwtl
je
enter
add
jle
stc
push
sbb
add
inc
popa
xchg
sti
mov
int3
push
mov
push
xor
scas
stos
or
jne
incl
adc
test
stos
xor
stos
sbb
jg
rorb
enter
cmp
add
dec
and
mov
je
jg
adc
in
clc
inc
nop
and
inc
inc
inc
sti
pusha
jno
scas
dec
jnp
mov
outsl
icebp
inc
jae
mov
mov
pop
inc
push
outsl
cli
jmp
call
rolb
xor
mov
dec
fisubrl
pop
jmp
pushaw
sub
pop
push
call
xor
std
push
outsb
and
es
fs
pusha
or
popf
fwait
pop
jo
dec
jns
lds
mov
inc
push
dec
mov
out
leave
xor
iret
rorl
inc
loopne
lods
xor
xchg
insl
xor
movsl
outsb
pop
aaa
shrb
pop
push
and
mov
es
jge
or
mov
inc
notb
addr16
add
dec
ret
inc
xor
loopne
xor
push
or
shl
sarl
push
mov
dec
jae
mov
aas
loope
and
addr16
mov
push
loop
cmc
cli
add
daa
and
cmp
roll
sub
add
hlt
test
test
jge
inc
icebp
add
fsubl
cwtl
daa
rcrl
mov
jno
mov
addr16
adc
orb
mov
mov
sahf
dec
xchg
push
sahf
push
ds
loope
or
xchg
xchg
dec
out
repnz
inc
add
es
or
mov
es
je
loop
cmp
sub
scas
push
push
mov
popa
pop
orb
repz
dec
data16
or
pop
dec
cwtl
in
dec
add
adc
shl
ja
cmp
jecxz
mov
xor
sub
jne
sbb
jmp
pop
or
pop
cmp
dec
sbb
adc
cmp
daa
or
test
mov
adc
add
xor
xchg
fadds
jnp
cli
jo
das
sbb
aam
cltd
adc
sub
xor
mov
mov
loope
call
outsl
dec
loope
out
dec
mov
imul
cmp
stc
fiadds
les
mov
test
clc
rolb
push
add
inc
outsl
push
inc
jl
xchg
jge
inc
imul
iret
sub
addr16
sbb
sub
scas
in
and
push
sarb
test
imul
xbegin
mov
add
popf
sub
add
data16
and
ret
lods
enter
clc
ja
in
ss
adc
adcb
push
pusha
aad
mov
push
outsl
mov
or
cld
inc
add
repz
rcr
pop
test
push
and
push
fwait
arpl
dec
lods
rcrb
rcr
hlt
fs
popa
mov
add
jmp
mov
and
ja
and
loop
dec
sub
xlat
cmp
fsubs
outsb
popf
popa
push
loope
jge
xchg
pop
imull
call
cmpsb
sarb
insl
fwait
clc
jmp
sub
sub
andb
fmul
stc
addr16
popa
pusha
lods
int
rcll
push
int
add
sub
pop
sub
push
jmp
outsl
sbb
mov
xchg
sbb
push
rcrb
lods
bound
rcr
mov
sahf
lret
popa
jnp
mov
stc
cmpl
movsb
dec
int
cmp
repz
outsb
mov
push
clc
ss
inc
in
xchg
mov
mov
mov
shl
and
mov
adc
popa
and
fucomp
push
popa
sub
push
loope
and
test
andb
xor
inc
in
andb
mov
and
aas
xchg
jo
scas
sti
xor
xor
and
pop
xchg
outsl
dec
mov
mov
aaa
cmpsb
enter
test
dec
out
addb
jecxz
mov
das
fcomps
add
sub
sbb
xchg
pop
les
push
dec
mov
sub
add
enter
shlb
inc
leave
fdivrs
xchg
mov
jb
incb
adc
dec
or
inc
daa
or
out
pusha
sbb
enter
cmp
sbb
sbbl
adc
lret
test
add
lret
pop
dec
xor
mov
jbe
clc
test
ja
pop
rclb
dec
outsl
lret
pusha
nop
orl
es
hlt
sahf
sub
and
cmc
enter
mov
xorl
inc
repz
push
or
sub
add
sarb
addl
or
cs
push
inc
loope
lock
pop
gs
les
jl
psrlw
inc
dec
mov
xchg
add
xor
inc
sub
das
mov
inc
jae
loop
loopne
push
sbb
fcomps
pop
ret
and
xchg
sbb
dec
sbb
lods
cli
jge
xor
cltd
stos
add
xchg
rolb
lahf
jmp
mov
push
stos
cmc
sbb
lcall
jns
aas
arpl
dec
shlb
in
aam
add
shll
ret
insb
jb
and
mov
sub
adc
add
or
inc
xor
imul
push
mov
in
dec
lock
ror
push
and
in
jecxz
add
les
dec
lods
adc
sahf
decl
xor
fcom
push
sbb
jecxz
pop
push
testb
pop
mov
add
add
mov
push
loope
pop
dec
roll
adc
lea
jmp
push
icebp
cltd
outsl
pusha
ja
pop
or
mov
pop
in
popa
cli
test
and
dec
adc
xchg
mov
cwtl
xor
or
pop
dec
push
inc
mov
loopne
cwtl
inc
das
adc
shrl
xor
dec
jmp
fiadds
ret
mov
pop
scas
add
mov
pop
dec
adc
xchg
popa
push
mov
mov
icebp
jge
adc
insb
sub
dec
fldt
add
jmp
mov
or
std
pop
test
sub
mov
push
or
add
lods
add
mov
clc
sbbb
jecxz
xchg
xchg
pushfw
push
imul
sub
xor
jmp
sbb
es
sbb
incl
sub
cld
imul
sub
outsb
stos
pop
fiadds
daa
lret
push
scas
push
xchg
sub
stc
into
imulb
mov
lock
dec
rcl
inc
push
mov
mov
push
inc
fisttps
dec
cmpsl
rorb
fstpt
add
sub
mov
lcall
add
adc
push
int3
lret
fsubs
movsl
and
mov
mov
dec
and
mov
add
shrb
lret
out
cltd
js
insb
dec
or
pop
add
mov
mov
ds
cmp
add
divb
out
bound
adc
add
or
into
inc
push
mov
aaa
js
mov
pop
cmp
inc
and
lock
xor
sbb
pop
or
jmp
addb
push
xlat
pop
pop
lock
push
int3
dec
cs
or
add
clc
cmp
pop
fwait
jge
adc
test
fucompp
jnp
adc
rol
mov
and
fisttpl
jecxz
sbb
lods
sub
push
cmpsb
mov
inc
xor
sub
xor
mov
scas
ret
xchg
sbb
aam
add
adcb
sub
mov
inc
xlat
dec
jnp
orb
add
push
orb
dec
jp
rolb
leave
shl
add
adc
sbb
ljmp
inc
in
icebp
movsb
bound
sub
push
mov
aam
les
add
jp
loopne
pop
ficoml
add
add
pop
mov
push
jl
iret
push
loopne
out
inc
sub
loopne
insl
or
rolb
mov
daa
or
fisubs
xchg
fsubp
inc
ret
call
ja
jmp
mov
sarb
loop
lret
push
dec
mov
and
pop
xchg
dec
popf
js
test
push
es
ret
ja
push
inc
pop
push
push
or
cmp
daa
push
notl
jge
and
xor
lock
leave
test
imul
pusha
cmp
sbb
or
add
push
clc
es
dec
sbb
fidivs
cs
inc
mov
arpl
in
and
adc
add
pop
rcrb
inc
or
add
xor
jmp
dec
mov
mov
shlb
add
and
xchg
inc
bound
cmp
and
mov
or
cmp
adc
add
jp
pop
push
or
arpl
imul
sbb
inc
fcoms
add
dec
jg
xchg
push
shrb
adc
outsl
push
inc
outsb
or
pushf
and
pop
into
mov
repz
mov
add
add
jp
lock
andb
int
or
mov
aas
notl
clc
lds
in
popf
xor
add
insb
cmpsb
jne
adc
jnp
mov
or
testl
jae
sbbl
out
or
outsb
mov
or
sub
push
aam
mov
pop
movsl
xchg
sbb
lret
pushf
mov
loopne
mov
add
imul
movsw
call
faddl
ljmp
push
adc
enter
ja
adc
pushf
aam
jne
sub
and
add
jbe
es
ljmp
xchg
push
imul
jg
shlb
in
out
es
mov
data16
xchg
jae
or
xor
xchg
jo
in
fmull
sahf
cmpsb
movups
inc
dec
mov
cmp
fsts
sbb
int
cmp
xchg
xor
mov
dec
fisubrs
sbb
push
jbe
arpl
lods
stos
pop
ret
call
aas
aad
sub
sub
cmp
sbb
xor
or
insb
or
test
cs
mov
jg
repz
add
mov
mov
mov
loopne
mov
adc
push
ds
adc
faddp
and
inc
repz
adc
roll
xchg
xchg
aas
std
into
add
icebp
mov
and
dec
sbb
inc
adc
push
mov
lds
js
mov
xor
test
push
bnd
incb
rcrl
movsl
mov
adc
xorb
arpl
aaa
imul
jg
mov
xchg
sub
mov
js
iret
sbb
xor
int
add
and
addr16
xor
daa
sub
or
push
outsb
or
sub
inc
and
ret
popf
in
loop
test
int3
popa
mov
imulb
xchg
mulb
inc
cmp
jmp
cmp
sub
or
mov
int
daa
outsl
xchg
stos
jp
jmp
cltd
loope
vpsubsw
and
and
xchg
out
or
or
xor
sub
andl
inc
pop
fxch
dec
and
mov
and
sub
cmp
jmp
mov
mov
inc
repz
popa
repz
inc
loop
dec
imull
mov
icebp
add
leave
sbb
sub
or
pop
hlt
cltd
sbb
sbb
xchg
loope
sti
imul
mov
add
pop
rol
dec
jo
out
cltd
fsub
fldenv
jg
icebp
add
pusha
xor
orb
mov
scas
push
sbb
push
pop
mov
sub
mov
pop
adc
ja
pushf
lcall
nop
xor
mov
or
les
lahf
mov
into
sub
das
xor
or
jge
or
mov
outsb
int3
mov
ror
adc
inc
sbb
add
xchg
sbbb
pop
pop
xor
push
cmpsb
push
sbb
pop
push
mov
repz
dec
cmp
push
or
xchg
add
and
shlb
out
shld
pop
aaa
fadds
push
pop
fildll
or
push
xchg
inc
sub
rcl
mov
pusha
leave
rolb
and
es
pop
fdivrs
cmp
test
test
adc
movsl
sbb
loope
imul
outsb
shrl
sbb
pop
cmp
adc
xor
cmpsl
adc
mov
or
dec
and
adc
nop
xchg
aas
dec
pop
clc
test
push
jbe
sbb
sbb
inc
mov
lock
sub
mov
jo
inc
dec
imul
test
or
pop
adc
inc
in
cmpsl
subl
jecxz
icebp
fisttps
xchg
orl
mov
push
rolb
mov
adc
out
nop
pop
rclb
aas
loop
pusha
rorl
or
inc
or
popf
push
adc
or
and
sbb
and
pusha
sti
push
aad
lds
push
mov
xchg
rcrb
mov
and
xchg
test
dec
and
sub
push
adc
pop
or
dec
arpl
push
test
mov
addb
sub
cmpsb
mov
cld
adc
mov
shrl
xchg
pop
add
pop
adc
mov
lods
inc
inc
and
or
jge
arpl
cmp
and
ret
mov
pop
rclb
add
rorb
cmc
pop
repz
out
icebp
ret
dec
mov
or
sti
adc
inc
push
int3
jae
daa
fisubrs
loope
imul
sbb
imul
adc
lret
adc
cmp
push
xor
pop
pop
xor
sarb
cmp
iret
inc
loopne
adc
bound
or
pop
adc
fisubl
adc
sbb
test
add
insb
icebp
sbb
add
adc
mov
es
mov
jo
mov
xchg
sub
adc
inc
and
dec
jno
sbb
cmp
mov
jbe
insl
mov
mov
aad
jmp
sbbl
shlb
mov
push
enter
test
inc
add
add
dec
and
sbb
add
aaa
cs
xor
test
repnz
data16
sbb
xchg
repnz
dec
ss
test
jg
mov
push
mov
jne
sbb
imul
prefetchwt1
or
roll
xor
dec
mov
add
inc
fistpl
push
adc
add
test
mov
mov
add
bound
decb
test
je
xor
iret
ffree
jg
add
cmp
cld
cmpl
push
add
push
jne
jmp
out
add
add
mov
out
dec
sub
pop
movsb
adc
xchg
sub
cltd
xchg
imul
and
pop
enter
sub
xchg
orb
sbb
jecxz
add
add
sbb
push
fbld
push
jmp
test
jae
imul
and
rorb
xor
push
or
pop
testl
push
xorb
cmc
pop
loop
xor
dec
clc
pop
fimuls
add
out
mov
pop
int3
mov
test
dec
jecxz
add
add
xchg
pop
call
lods
xchg
testl
addb
xor
outsl
inc
sbb
adc
adc
dec
mov
cmpb
lock
xor
jecxz
imul
xchg
mov
fidivl
out
adc
jno
cmc
cmp
mov
add
fmuls
adc
mov
pop
xor
xchg
pusha
daa
xor
test
mov
adc
cmp
insb
cmp
pop
push
pop
mov
dec
cmp
sbb
cld
sub
jns
sar
jp
fwait
jo
fadds
push
andl
jb
or
add
sub
cmp
push
pop
inc
sub
clc
add
mov
mov
xchg
nop
xchg
mov
mov
inc
flds
mov
call
add
or
sub
cmpsl
nop
loopne
xchg
cld
ljmp
movl
or
rcrb
or
subl
mull
out
xchg
aas
in
pop
dec
dec
ja
xor
lds
aaa
test
ss
or
and
push
dec
inc
xor
push
pop
rclb
and
push
cmp
loop
mov
push
adc
pop
hlt
dec
adc
imul
and
jecxz
test
adc
fsts
nop
mov
xchg
hlt
push
jp
pop
sub
and
sbb
out
add
mov
pop
insb
and
and
shll
sahf
sbb
jbe
lods
outsb
pop
mov
pop
test
jmp
sbb
mov
xor
arpl
cmp
sbb
adc
imul
loop
clc
push
add
scas
add
cmp
push
ja
sbb
xlat
fcompl
mov
jo
pop
push
sbb
cmp
mov
xchg
pop
dec
testl
add
hlt
aad
jg
mov
loop
sbb
das
adc
sub
sti
mov
jb
jmp
inc
and
addb
lds
adc
sbb
and
lcall
es
cmpsl
imul
inc
pop
lods
mov
push
xor
ja
inc
adc
orb
cmp
sub
mov
cmp
push
daa
pop
hlt
aaa
mov
dec
push
push
sbb
pop
lock
cltd
lcall
outsl
and
xchg
and
addl
jp
loope
push
cltd
fmuls
dec
mov
push
push
cmp
mov
cld
lahf
mov
fiaddl
mov
mov
dec
lods
movsb
adc
fcoml
rorb
aam
sarb
lods
in
and
xchg
dec
sbb
das
pop
push
adc
inc
jge
xchg
shl
repz
push
mov
pop
pop
dec
imul
mov
push
sti
and
pop
sbb
sbb
clc
pop
sub
xchg
add
jecxz
js
icebp
notb
inc
add
mov
and
insb
xchg
lcall
mov
sbb
negb
fwait
fwait
sub
in
and
push
scas
addl
ljmp
and
dec
mov
push
outsl
bound
loop
repnz
mov
dec
clc
ret
lods
mov
int
sub
fnstcw
leave
and
mov
mov
xlat
sbb
pushf
or
xchg
xchg
pop
insl
outsb
or
lret
push
adc
rcll
out
fistl
add
test
jo
adc
add
sarl
mov
mov
inc
loope
testl
add
adc
push
mov
dec
inc
and
dec
or
cmp
pavgb
lods
or
jl
sub
pop
lret
sbb
adc
xchg
ljmp
rcll
add
jno
mov
rcl
clc
push
xchg
mov
ret
mov
popa
xchg
xor
xchg
xchg
adc
push
nop
or
or
call
jecxz
and
or
pop
cld
pushf
rorl
sub
push
push
sbb
or
stc
fxch
in
add
inc
push
cmpsl
push
adc
adc
out
scas
add
add
sub
je
or
dec
pushl
sbbl
sub
mov
mov
neg
dec
jmp
clc
mov
addb
outsl
mov
dec
incb
xchg
mov
push
shl
or
jmp
mov
jmp
adc
xor
dec
mov
push
in
mov
pop
addb
jp
cmp
rorl
xchg
imul
pusha
aaa
adc
or
add
or
stos
not
fld
scas
clc
adc
or
and
les
mov
jmp
pusha
mov
cmp
pop
dec
or
repz
stos
mov
xchg
xlat
repnz
sbb
xor
xor
les
fsubr
or
inc
roll
pop
cmp
clc
jmp
dec
and
add
ljmp
or
xor
xlat
mov
add
lock
test
cs
mov
sbb
or
inc
sbb
pop
cmp
adc
out
sub
aam
incl
pshufw
xchg
rorl
lret
fwait
jno
sbb
mov
pusha
pop
ja
ljmp
in
dec
add
addl
push
add
pusha
cli
jae
push
jmp
inc
jo
add
pop
add
lret
pop
xchg
outsl
arpl
push
lock
hlt
mov
cmp
push
adc
imul
mov
addr16
lret
int
jl
sub
or
icebp
sarb
test
dec
sbb
xor
xor
dec
add
insl
sub
and
mov
xchg
adc
mov
shr
xchg
stos
pushf
xor
lock
shll
mov
das
inc
imul
xor
push
rol
aad
push
or
inc
dec
jecxz
clc
jecxz
aam
xchg
loope
ljmp
mov
sbb
push
js
add
adc
pop
cld
filds
rolb
push
popa
pop
movsb
xor
mov
mov
xor
cmpl
aas
pop
add
jno
mov
mov
clc
jae
call
add
dec
lds
fcmove
in
insb
pop
jno
push
cmpsl
cmp
xor
cmp
pop
stc
gs
mov
and
push
sbb
pop
dec
xchg
add
dec
pop
cs
sbb
sbb
sbbb
loopne
xchg
inc
sbb
test
push
mov
jb
push
mov
xchg
cli
lods
sbb
and
push
outsb
jbe
xor
cmp
or
dec
outsl
cmp
pusha
sub
mov
int
adc
add
sub
push
pushaw
stc
mov
sbb
sbbl
addr16
mov
mov
jmp
xchg
add
push
jecxz
sbb
push
clc
out
insb
sub
adc
or
out
mov
jl
add
je
jnp
nop
xor
xchg
test
idivb
xchg
mov
ret
add
shlb
shrb
sub
clc
out
pop
lea
cld
inc
add
add
mov
imul
mov
pop
in
jbe
sub
sbb
fdiv
push
and
push
xor
decl
sub
in
inc
mov
popa
loope
loop
mov
adc
ficoms
lods
and
sbb
pop
sub
pop
xchg
sbb
xchg
pop
stos
xor
and
cli
inc
shlb
xchg
sub
sti
test
jbe
dec
sbb
loopne
dec
sarb
hlt
pop
add
dec
and
mov
xor
xor
popf
jg
aad
lods
push
int3
xor
test
xor
inc
lods
inc
ret
inc
popa
dec
arpl
or
lret
xchg
pop
push
or
inc
test
imul
or
and
call
mov
stc
and
jbe
stos
xlat
pop
enter
and
add
inc
and
and
mov
mov
in
sbb
jge
mov
clc
jecxz
cmc
and
ds
jno
pusha
pop
int3
or
cmpsl
adc
les
inc
mov
xchg
clc
pop
mov
xchg
add
or
call
je
pop
sub
add
adc
adc
sub
loopne
or
push
mov
cld
in
xchg
popa
or
in
dec
nop
mov
add
ret
fldcw
xor
push
in
shlb
sbb
mov
inc
xchg
push
lock
sub
cmp
pop
add
add
js
cld
add
adc
jge
mov
pop
test
xor
cmpb
jns
addr16
loopne
dec
cmp
pop
les
sbb
push
adc
and
or
nop
ss
jge
repnz
push
punpcklbw
add
shrb
mov
sbb
mov
or
rorl
lret
push
mov
lea
test
arpl
pop
cmp
mov
movsl
into
outsb
jmp
mov
cmp
cli
outsb
std
lcall
inc
push
xor
push
je
mov
and
out
insb
sub
jmp
push
lcall
and
andl
and
xchg
add
push
shr
and
movb
pusha
addps
stos
ficoml
rolb
and
ss
in
mov
inc
aam
cltd
addb
lcall
inc
repnz
js
dec
mov
or
push
pop
mov
daa
mov
mov
push
sub
mov
or
js
iret
add
rorb
jne
pushf
mov
and
lret
mov
xchg
addr16
sbb
sbb
mov
rorl
js
int3
rclb
dec
addr16
movsb
in
in
adc
push
mov
push
loope
enter
dec
lahf
adc
adc
insb
lcall
add
add
xor
rorb
mov
pop
sbb
insb
or
xchg
and
out
push
stos
dec
in
and
iret
cld
lds
cltd
pop
popf
xchg
push
inc
mov
add
xor
pop
adc
push
sub
sub
std
add
and
mov
loope
leave
xor
filds
enter
test
fwait
je
sub
mov
jae
andl
add
ljmp
and
pop
in
or
int
xchg
xor
outsl
xchg
or
es
cli
and
or
sbb
push
insl
add
addr16
es
test
mov
inc
imul
sbb
add
mov
movsl
cs
sub
cmp
test
add
mov
loope
shlb
cs
mov
mov
popa
xor
pop
mov
inc
dec
pop
pop
lods
mov
inc
push
into
call
jecxz
and
pop
push
jp
sbbl
es
lret
pop
out
and
xchg
add
or
push
push
outsl
jbe
inc
add
divl
imul
cmpsb
push
push
lret
mov
and
rolb
loope
or
push
les
fs
pop
jo
add
adc
je
sub
fsubrs
jecxz
fiadds
call
xor
adcb
push
cmpb
mov
je
cli
jecxz
loope
lahf
inc
cmp
ja
lods
lods
jp
cmpsl
mov
fisttpl
jmp
jb
rcr
dec
inc
icebp
jmp
pop
inc
sub
jae
sbb
inc
cli
adc
add
lret
add
push
push
ja
add
xchg
xchg
aaa
sbb
and
or
inc
adcl
dec
ficompl
aas
outsl
or
xchg
mov
dec
mov
xchg
mov
ret
add
jnp
sbb
cmpsb
mov
sub
jno
add
popa
and
fwait
test
cmp
hlt
or
mov
clc
push
jno
lods
cmc
dec
pop
adc
pop
stos
sbb
pop
mov
jns
and
add
xchg
xchg
es
aad
in
pusha
sub
cli
adc
mov
or
push
pop
jmp
pop
neg
dec
sub
xor
xchg
aam
arpl
inc
fdiv
repz
sahf
adc
mov
insl
in
sbb
adc
inc
in
loopne
push
pop
aaa
xchg
ficompl
sub
lods
dec
popf
aam
inc
mov
adc
and
jecxz
and
xor
add
push
and
stos
mov
jo
inc
mov
shlb
and
mov
scas
mov
dec
xor
adc
mov
or
test
cltd
dec
xorl
xchg
cmp
imul
stos
loopne
push
fimull
hlt
loop
aam
xor
jle
add
dec
ret
pop
add
js
and
mov
or
pop
jmp
or
lea
insb
cld
mov
test
test
rcr
push
mov
and
test
sub
scas
mov
cld
pop
adc
sbb
push
mov
add
shrl
adc
ljmp
mov
mov
inc
das
pop
and
clc
mov
jecxz
imul
subl
mov
cs
test
movsb
dec
mov
fstpl
loopne
ret
out
push
inc
int3
fwait
loope
repz
inc
inc
leave
sbb
filds
push
dec
sub
cmp
mov
in
pusha
movsb
addl
inc
sub
sbb
aas
fsubl
inc
cmc
imul
mov
xorl
pop
imul
pop
das
xor
test
push
push
push
lcall
xlat
ljmp
mov
xor
mov
adc
test
lret
clc
add
fwait
xor
push
push
outsb
jae
cld
add
mov
dec
bound
jg
fdivr
sub
fsubrs
rorb
outsb
fcoms
and
inc
loope
dec
push
rclb
push
adc
in
cwtl
loopne
inc
psadbw
insl
loop
jp
icebp
push
push
add
loopne
sbb
add
mov
dec
sbb
rolb
push
inc
pop
gs
xchg
lods
mov
cmp
lea
mov
fucomp
insb
pushf
push
lock
testb
js
inc
stos
lret
pop
adc
test
mov
shrl
dec
inc
aas
leave
add
out
xchg
sbb
add
in
xchg
push
jo
and
insb
cmp
std
xchg
iret
mov
push
mov
dec
repnz
faddl
ret
sub
or
imul
and
pop
aad
adc
cs
addb
add
xor
and
xor
xchg
push
xor
out
loopne
add
cmc
push
xchg
aaa
cld
nop
mov
xor
xorl
stos
mov
rorb
and
cmpl
dec
jne
ss
pop
lret
push
negl
sahf
rcrb
dec
je
push
and
jecxz
xlat
push
sbb
int3
mov
add
adc
dec
ss
xchg
or
adc
or
dec
xor
int
ret
lahf
mov
test
sub
mov
inc
sbb
jne
pop
sbb
inc
inc
negb
mov
mov
inc
xchg
adc
pop
mov
cmpb
in
push
insb
pop
jno
daa
and
cli
aas
cmp
popl
jmp
fdivrs
aaa
movsb
sub
pop
or
je
push
adc
fsubrp
mov
cmpsb
shrd
pusha
add
test
arpl
mov
sub
inc
push
jmp
in
roll
gs
mov
repz
push
push
outsl
pop
loop
rorl
popf
mov
mov
push
or
xchg
add
loopne
xacquire
addr16
mov
inc
es
and
cmp
pop
push
mov
mov
mov
loope
stos
xchg
adc
je
into
push
les
push
add
mov
imul
mov
and
or
mov
lods
movsl
lods
jle
mov
fdivs
push
mov
vcvtsd2si
lret
je
fistpl
fcmovbe
shrl
or
sbb
xor
int
dec
push
push
adc
jne
and
pop
rcr
loope
jns
adc
add
mov
add
jne
inc
and
or
add
lods
push
stc
cmp
loopne
aad
jno
and
dec
cltd
sub
rcrl
addr16
imul
movsb
mov
xor
iret
mov
cld
or
fildll
adc
mov
or
inc
inc
outsb
sub
pop
or
mov
adcl
xor
fistpl
in
aaa
fcoml
mov
rcrb
xor
pop
adc
sbb
xor
sbbb
sub
orb
adcl
dec
ret
test
inc
xor
inc
pop
out
outsb
test
fildl
stos
inc
push
in
je
jge
mov
jmp
ja
jg
push
jl
adc
add
dec
dec
jmp
fsubrl
pop
or
dec
repz
hlt
dec
xor
xchg
scas
adcb
popf
xchg
dec
rcrl
lods
mov
pop
cmp
pushf
lock
push
insl
jnp
repz
les
pusha
xchg
je
add
push
repnz
inc
test
test
dec
jg
arpl
xchg
jno
fmuls
cmp
jno
add
add
adc
push
xchg
les
xor
mov
cmp
ljmp
add
mov
mov
insb
and
std
loope
cli
add
mov
roll
add
ljmp
aad
jno
add
mov
jno
bound
jne
pop
adcb
mov
gs
mov
jle
out
xor
aad
sbb
inc
or
in
jns
and
stc
cltd
or
sub
jns
xchg
js
fbld
sub
inc
push
sbb
call
add
xor
xchg
loope
pop
call
pop
decb
gs
pop
pusha
jmp
cld
pop
xor
les
pop
adc
push
sbb
xor
inc
pop
int
sarl
push
sbb
psllw
pop
subl
jmp
fst
cmp
xor
je
sbb
sbb
or
mov
cmpb
cmp
add
dec
or
les
cli
test
rolb
je
aaa
nop
shlb
pushf
add
jmp
lock
pop
fcoml
inc
or
cli
mov
jo
fadd
fsts
test
sub
int3
jg
mov
and
and
inc
xchg
or
xor
sbb
cmp
dec
add
sbb
sbb
fdivl
pop
fnsave
pop
and
sti
aas
test
std
fs
adc
add
int
icebp
mov
lods
or
and
adc
ja
sarb
cwtl
out
arpl
incl
mov
xchg
push
movb
jo
cmp
outsb
in
not
movaps
push
call
pushf
pop
lret
adc
scas
mov
pusha
insl
sub
and
cmp
call
rorb
sbb
add
sbb
fsubrs
sub
add
pushf
push
jecxz
outsl
jecxz
dec
xchg
fcoml
xchg
mov
xchg
stos
dec
clc
mov
insl
mov
pop
insl
inc
jmp
fisubrs
adc
daa
dec
mov
mov
fs
test
adc
cwtl
insb
daa
inc
inc
out
add
and
lea
push
pop
sbb
pushl
add
iret
push
cmp
cli
jle
lock
sbb
xor
pop
sbb
sbb
mov
in
and
xchg
add
outsl
int
dec
fwait
in
add
repz
pop
sub
inc
xchg
pusha
inc
sbb
mulb
loope
xchg
icebp
or
cmpsb
mov
cwtl
sub
cmpxchg
and
dec
fdivrp
sbb
call
leave
mov
hlt
sub
out
add
outsl
fdivs
cmp
mov
sub
and
add
clc
test
fs
xchg
mov
test
inc
shlb
push
jo
pop
fmuls
lock
addl
inc
stos
or
pop
jbe
xlat
jno
inc
dec
xchg
mov
mov
xor
or
add
cmpsb
mov
pop
xchg
hlt
sbb
aam
movsl
push
insb
and
adc
adc
imul
cmp
sbb
outsl
fidivrs
es
shll
fmuls
shll
inc
ret
adc
or
adc
inc
add
and
imul
or
call
push
jle
add
xor
add
sbb
inc
das
pushl
loopne
loopne
add
push
jecxz
mov
call
or
adc
std
roll
mov
lods
dec
push
jno
inc
loopne
jns
sub
icebp
out
mov
test
add
adc
pop
rorl
jnp
pop
and
xlat
rclb
sub
xchg
push
xor
xor
xchg
jnp
add
mov
aas
cmpsb
jns
loopne
xorl
leave
ret
fimull
pop
jge
jecxz
or
rorb
xor
lods
or
lret
loope
sub
xchg
add
inc
ja
ljmp
xchg
rorb
out
rol
fisttpll
and
pop
sub
scas
sbb
cmp
in
xor
sahf
hlt
js
adc
mov
fwait
cli
movsl
xor
movsb
repz
cmp
mov
lods
add
jo
and
adc
call
push
dec
inc
sub
leave
arpl
andb
add
xchg
das
adc
sbb
mov
arpl
xor
adc
cmp
dec
and
leave
inc
into
cld
imul
shrl
add
mov
mov
mov
push
jecxz
outsl
inc
push
in
mov
sbb
mov
loope
sbb
cs
in
xor
mov
dec
js
sub
mov
sub
push
inc
in
xchg
ret
push
mov
scas
outsl
mov
fdivl
loop
inc
jae
jne
sbb
arpl
push
add
and
or
sbb
mov
out
adc
int
lock
std
and
xchg
shl
jmp
jl
dec
enter
mov
mov
pop
iret
add
and
cmp
push
or
jae
aam
or
mov
cld
arpl
mov
testl
pop
or
push
push
roll
out
sbb
bound
fimull
jp
roll
jne
rclb
mov
or
out
movsb
icebp
filds
imul
xor
loop
add
rclb
sar
pop
out
roll
or
cmpsl
jo
fmuls
cmpsb
clc
les
clc
dec
inc
sbb
popa
lock
and
adc
ja
cwtl
fdivrl
mov
les
xor
out
rclb
dec
mov
jne
imul
push
shlb
ror
mov
xor
adc
lea
xchg
mov
xor
aad
loop
jmp
adc
daa
enter
inc
bound
mov
pop
dec
pop
paddsb
push
sbb
enter
or
and
nop
icebp
cmc
test
les
shrl
inc
xlat
popf
jne
xchg
cs
fistl
mov
pusha
and
in
test
fsubl
sub
insl
mov
pop
adc
ret
add
push
call
adc
imul
ret
and
stos
add
add
out
dec
shll
fwait
push
add
popa
cmp
pop
fdivs
aaa
sub
pushl
test
test
out
aas
cld
push
jb
ljmp
jp
imul
push
fidivrs
das
movsb
hlt
sub
pop
sbb
push
mov
stc
pop
adc
inc
fsubs
daa
jl
out
out
xchg
out
jmp
add
pusha
dec
jl
test
nop
sahf
jle
xlat
xor
loope
cmp
rorl
push
loop
jmp
jmp
leave
xor
test
adc
mov
push
mov
daa
xor
mov
bound
mov
cmpb
and
int3
ja
xchg
stos
add
sbb
jne
in
fdivrl
xor
mov
lock
test
insb
scas
leave
fmuls
stos
or
je
pop
lret
push
sti
push
add
dec
sbb
stc
sbb
cmp
mov
jbe
push
stc
lahf
and
sbb
pop
cmp
inc
hlt
xchg
insl
xor
cli
stos
mov
xchg
push
adc
adc
cmp
dec
add
mov
mov
cmp
lea
sbb
in
repz
cmpsl
add
and
jmp
pop
dec
sub
jecxz
sub
daa
jecxz
ret
dec
cli
es
or
or
push
xor
sbb
push
adc
imul
xchg
sbb
in
and
dec
and
add
fs
sub
call
push
adc
or
andb
mov
pop
inc
loop
mov
sub
and
pop
es
push
jp
jl
mov
ljmp
lods
subb
addr16
repz
mov
pusha
adc
add
pusha
dec
sbb
ret
scas
daa
int3
leave
outsl
adc
rcrl
mov
nop
cmpsb
icebp
movsb
test
jo
sub
hlt
pop
pop
ljmp
fs
in
sti
loopne
fmuls
pop
adc
and
xor
xchg
out
lds
fidivrs
inc
ficomps
or
pop
add
sub
sqrtps
lock
imull
orb
lock
dec
pop
jl
jne
adc
nop
mov
call
and
dec
inc
mov
sbb
insl
lcall
mov
cmp
inc
adc
or
aam
ja
xorl
jno
jo
mov
xorl
adc
in
bound
mov
lods
xchg
lret
push
inc
sub
test
enter
cli
int
mov
xchg
or
dec
push
mov
sbbl
xor
icebp
out
int3
inc
add
int3
inc
xor
je
inc
or
outsb
and
aaa
mov
shrb
pop
popf
adc
test
push
imul
aam
imul
xchg
pop
dec
icebp
push
gs
mov
adcb
divl
pop
pop
aaa
shl
pop
pop
loop
pop
cltd
orl
xorl
loope
inc
int
fcmove
enter
insl
mov
lea
jl
add
gs
addl
push
inc
lea
xor
and
inc
loope
mov
js
cld
push
inc
enter
jmp
mov
sbb
into
jecxz
aam
push
pop
mov
mov
push
ficoml
cld
es
jecxz
xor
jmp
cmp
dec
into
mov
popa
adc
and
adc
outsl
mov
sbb
add
adc
inc
rorl
xor
mov
xor
pop
or
mov
pop
out
sbb
js
mov
es
adc
xor
mov
mov
and
xchg
jno
adc
sub
enter
sbb
sbb
call
or
jecxz
pop
add
mov
push
mov
jp
mov
and
popl
and
fmull
mov
adc
jle
test
cld
cmp
mov
aad
dec
dec
das
or
mov
push
sub
add
jge
xchg
jae
push
cmp
stos
lcall
add
aad
cld
or
add
or
inc
andb
sbb
mov
or
aam
loope
mov
bound
add
inc
sbb
sub
dec
push
stos
or
aad
lret
xchg
mov
mov
sub
out
rcr
xor
dec
push
imul
stos
add
stos
dec
push
lret
inc
loope
inc
and
shlb
jnp
fstp
and
scas
fwait
xchg
sbb
mov
rorl
popa
xor
and
cmp
in
add
jbe
stc
movsl
dec
cld
testl
cmp
out
push
xorl
ffree
mov
xchg
sub
lods
das
sbb
aad
or
xor
adc
sbb
push
adc
aad
mov
dec
cmp
push
test
rorb
add
addr16
or
mov
imul
les
cvttps2pi
sbb
add
sbb
gs
dec
or
xchg
mov
das
cmp
xor
sbb
add
fwait
add
and
sahf
sbb
inc
cmp
aad
mov
rolb
movsb
add
out
insb
cmp
andb
ret
hlt
mov
fldt
mov
xorb
lock
add
jg
lds
rorb
clc
pop
dec
pop
push
jecxz
sbbl
pop
push
or
xchg
inc
cmpsl
or
ficoms
sbb
mov
rol
js
fld1
fwait
lock
sbb
pop
outsb
test
daa
or
iret
push
mov
xor
mov
cmp
orb
int3
iret
lcall
or
dec
adc
shlb
addb
mov
fistl
add
imul
mov
lea
sbb
or
xlat
jecxz
adc
add
jg
adc
push
and
fidivs
add
stos
sbb
loopne
sar
popa
pop
sub
lret
dec
leave
adc
in
push
loop
nop
jecxz
test
decb
push
cmp
push
inc
dec
mov
fstpt
adc
jb
mov
or
rorb
add
or
inc
pop
rorl
aad
cmpsl
lods
or
and
xchg
stc
sbb
push
call
mov
sbb
lds
jo
ret
iret
mov
inc
insl
or
push
pop
xchg
addb
mov
jmp
cli
dec
cwtl
ret
inc
mov
push
ja
dec
neg
sub
inc
xor
lcall
mov
mov
mov
repnz
imul
imul
pushl
add
pushf
rorb
or
xchg
cmc
decb
dec
dec
xor
loope
add
add
sbb
mov
jno
add
inc
mov
call
xor
enter
add
orl
inc
dec
popf
mov
int
dec
sub
dec
xchg
sarb
mov
mov
popa
lret
add
mov
xor
xchg
dec
cmpl
rclb
push
push
mov
lahf
mov
into
rcr
loopne
sub
mov
adc
ds
or
or
sbb
icebp
or
insb
inc
lret
xor
imul
mov
pop
gs
push
sbb
lret
lcall
lret
xchg
loop
ss
cltd
jmp
jmp
or
test
jecxz
ss
lret
or
cld
inc
dec
pop
dec
sbb
mov
mov
inc
sbb
mov
daa
or
inc
or
test
inc
loop
jnp
pop
ljmp
add
mov
xor
xchg
inc
adc
jl
and
lret
js
ljmp
mov
push
xor
xchg
cmp
lods
ret
lahf
mov
roll
fdivl
dec
xor
add
sbb
rolb
lea
sbbb
xlat
pop
clc
push
loopne
push
xchg
push
xlat
inc
sbb
icebp
fcoml
aaa
xor
push
jo
lahf
jno
adc
dec
and
out
pop
lret
sub
mov
sub
adc
loop
adc
fists
adc
jns
xchg
sub
and
xchg
dec
pop
push
lock
inc
movsb
and
cmp
sub
sub
fistpl
push
int
sbb
push
sub
jecxz
scas
and
enter
fisubrl
xchg
cmpsl
dec
mov
out
and
in
inc
js
pop
mov
lods
adc
adc
jg
das
leave
pusha
mov
in
out
out
lock
cs
inc
fists
shlb
lods
or
movsl
xchg
scas
xchg
inc
inc
sbb
ss
lret
add
inc
jmp
enter
out
enter
hlt
repz
sbb
add
xchg
push
icebp
and
rcrb
scas
incl
loopne
dec
shlb
jmp
mov
int3
adc
push
and
jp
push
sub
stos
fwait
test
sbb
testl
rorl
jnp
scas
xchg
mov
movsl
sub
loopne
shl
push
call
sbb
jmp
or
inc
cmp
sbb
or
xchg
insl
mov
movsb
add
in
lock
push
add
or
repz
imul
or
popa
mov
dec
xor
shrb
scas
aam
bound
cmc
adc
es
inc
std
hlt
pshufw
scas
mov
pop
shlb
dec
mov
pop
call
xor
mov
xchg
sahf
imul
pop
outsl
add
add
scas
std
in
pusha
rcrb
push
xor
rorl
test
or
add
bound
add
xor
add
cmp
rolb
inc
mov
cmp
imul
fs
shrl
cmpsl
sub
adc
add
mov
imul
sub
dec
popa
imul
lret
ljmp
nop
sahf
push
pop
fiadds
enter
ret
mov
addb
push
orl
jmp
lcall
dec
stos
sbb
aad
add
push
jns
mov
cltd
cmpsl
jle
test
inc
stos
cmp
xchg
mov
outsb
sub
sbb
jl
inc
clc
addr16
inc
aam
xor
leave
push
add
mov
pushl
and
subb
mov
ljmp
aaa
sbb
lods
repz
or
sbb
leave
dec
sbb
mov
add
adcb
scas
fimuls
adc
test
lods
sub
push
mov
lea
cli
push
pop
cld
aas
add
and
sbb
and
add
in
std
pop
mov
jg
fbld
xor
pop
sbb
and
add
js
or
and
add
jl
incl
test
test
add
add
mov
insb
inc
mov
sbb
pushl
add
popa
add
sub
icebp
xchg
add
add
vmload
inc
ljmp
lock
mov
add
xchg
sub
rcrl
lods
stc
decl
push
adc
cmc
cmp
add
mov
mov
or
mov
xor
push
mov
lret
idivl
insb
outsl
lcall
jg
sahf
adcl
jg
nop
pusha
std
xorb
add
or
mov
sti
in
add
std
std
ljmp
rorb
bound
je
mov
or
sbb
std
or
rolb
mov
insb
or
out
mov
adc
loopne
js
and
xor
repnz
and
nop
adc
or
inc
ss
test
and
adc
xchg
mov
ret
insl
gs
dec
sbb
rorl
jecxz
fst
or
cs
into
mov
and
rcrb
add
push
mov
jle
addl
pop
mov
jnp
js
add
popa
and
aaa
incl
divb
ja
cmp
and
or
add
aas
mov
clc
negl
testl
mov
push
dec
mov
pop
in
sub
outsl
sbb
fildl
push
ret
pusha
pushf
adcb
sbb
stos
inc
bound
lahf
loopne
dec
or
add
mov
das
clc
add
mov
mov
sub
cltd
cli
les
push
mov
mov
add
pop
sahf
icebp
adc
mov
push
inc
xor
sub
outsb
jmp
sbb
dec
hlt
jmp
subl
jg
ret
test
lcall
add
sub
add
repz
pop
add
pop
push
daa
out
je
pop
aam
mov
js
leave
xchg
inc
adc
arpl
insb
jno
sbb
push
push
push
add
cmp
popa
sub
add
inc
cmp
decl
lcall
scas
jp
adc
test
cs
or
adc
outsb
jnp
insb
jg
mov
mov
push
jo
scas
aam
mov
int
sti
call
inc
push
pop
es
mov
idivl
fs
daa
push
test
fcom
fistps
mov
lret
xor
or
add
fwait
insb
fisttps
fiaddl
rorl
or
clc
decl
add
es
fsubrs
ds
lock
jno
ss
and
cs
mov
bound
lods
cmp
and
add
or
inc
and
mov
aam
dec
call
aad
clc
stos
ljmp
mov
inc
dec
ffree
xor
add
inc
add
fwait
add
aaa
mov
xor
jbe
dec
push
xor
jecxz
push
pop
pop
js
leave
add
jmp
ret
mov
insl
hlt
fwait
jecxz
cmp
adc
scas
inc
sahf
mov
outsl
fidivs
sti
ljmp
add
lods
push
decl
push
sbb
xchg
in
pop
cmp
cwtl
lret
mov
repnz
into
or
cli
pop
and
je
test
ss
lcall
imulb
jl
mov
cmpl
adc
lcall
jl
xor
add
fistl
cmpb
pushf
adc
scas
ss
mov
call
mov
push
push
rolb
mov
mov
shlb
adc
cli
mov
mov
dec
xor
mov
xchg
mov
mov
mov
fadds
push
push
aad
fwait
bound
dec
ficoms
cmp
cmp
mov
pop
adc
sahf
movsb
icebp
fwait
push
lcall
lods
int3
xchg
sbb
nop
sub
cmp
lock
mov
xor
mov
add
jb
sub
fldt
add
cmpsb
lret
rorb
pop
push
cmc
icebp
or
je
adc
mov
mov
in
add
dec
jmp
inc
adc
inc
pop
sbb
dec
add
ret
mov
cmp
std
std
mov
xchg
shll
add
dec
pop
push
leave
dec
and
add
cld
mov
cmc
jle
xchg
mov
ds
push
test
jno
mov
ja
gs
gs
cmpb
mov
push
mov
mov
xchg
rol
je
push
inc
add
sub
in
clc
inc
outsb
lods
shr
sub
out
movsl
or
arpl
sbb
push
inc
cmp
add
andl
mov
inc
stos
jns
and
cwtl
jle
aas
ljmp
addr16
jmp
cs
mov
sahf
adc
je
push
xor
xchg
into
in
je
cmp
clc
jl
mov
xchg
ja
push
pop
data16
mov
and
add
addb
ljmp
xchg
adcl
or
pop
dec
mov
mov
push
pop
out
sub
test
mov
mov
sbb
loop
or
je
ss
sub
jno
or
cmp
rcll
sahf
or
adc
mov
loop
pusha
lret
dec
stos
add
pusha
clc
jg
fs
lods
and
or
xor
xor
imul
xchg
or
cld
pushl
aad
enter
push
fs
dec
mov
push
in
idiv
call
popa
xchg
inc
fs
int3
lcall
xor
jbe
adc
arpl
or
leave
repnz
cld
cmpsb
cmp
add
inc
inc
fmulp
ljmp
and
out
adc
dec
add
inc
pop
xchg
outsl
pop
shl
sbbb
jg
adc
sub
daa
cli
stc
pop
repz
sahf
pop
mov
and
data16
test
stos
xor
pop
mov
fwait
sbb
test
pop
jle
adc
fadds
outsb
ja
or
jl
sub
in
dec
pusha
add
iret
add
ret
push
push
idiv
dec
cs
nop
pop
jo
and
adc
push
inc
or
add
shl
mov
mov
mov
cli
les
aaa
adc
add
ret
fstpt
nop
mov
mov
pop
sbb
pop
and
or
pop
push
xchg
sbb
add
xchg
jnp
jle
roll
in
lods
std
lret
mov
add
stc
loop
jae
ss
add
movsb
fadds
clc
xor
xchg
xchg
clc
xchg
aaa
das
and
sbb
sbb
add
mov
cmp
clc
clc
lret
mov
jecxz
outsl
dec
xor
mov
cmp
inc
jge
xor
int3
mov
inc
in
mov
cli
test
in
loopne
dec
dec
add
mov
lea
popa
loope
shl
pusha
add
jb
fld1
inc
add
daa
jl
xchg
cmp
xchg
into
fs
fsubs
dec
add
ja
inc
int
pop
stc
xor
aaa
dec
sti
cmp
inc
xor
arpl
sub
call
notb
and
push
mov
fcos
fisttps
add
scas
pop
add
sbb
add
pop
or
xlat
icebp
es
sub
test
mov
dec
hlt
loop
dec
movsb
add
orl
sbb
std
cltd
xchg
cmp
stc
mov
pushf
sbb
outsb
mov
lock
clc
push
clc
subl
jge
xor
and
jp
sub
push
sahf
pop
xchg
mov
inc
sub
and
ja
std
xor
and
inc
fildll
mov
sub
stos
mov
stc
ficoms
pop
push
inc
adc
or
and
inc
jp
cs
xor
jg
mov
jle
out
or
push
movb
sub
or
add
ffree
mov
jp
adc
mov
pushf
push
cmp
push
nop
mov
js
cs
adc
pushf
jbe
push
bound
stos
daa
mov
xchg
out
sub
or
and
xchg
subb
xor
int3
into
xchg
jecxz
mov
out
div
das
cmp
adc
adc
sbb
out
rolb
loope
in
mov
test
aas
cmp
sar
or
and
sar
mov
and
pop
xchg
and
das
xchg
sbb
arpl
mov
xchg
inc
dec
sub
lahf
shlb
mov
adc
outsl
sbb
hlt
in
jg
movsl
ds
std
jae
add
jg
jbe
lock
stos
mov
les
fidivrl
lock
inc
or
adc
cld
loope
insb
roll
jge
fldl
and
ljmp
lds
cmp
push
in
std
call
pop
jl
pop
cmp
and
std
add
call
jg
mov
mov
dec
push
stos
mov
adc
sbb
out
das
mov
into
test
jno
scas
push
sbb
cld
fbstp
lret
jp
out
repz
dec
pop
imul
outsl
push
dec
insb
push
add
xor
dec
jmp
jo
pop
push
xchg
rclb
push
cmp
imul
jg
dec
and
add
dec
popf
cmpsb
into
imul
fs
pmulhuw
sti
and
add
jg
push
cmpsl
add
in
xor
xor
loopne
lcall
pop
orb
hlt
sub
int
push
sub
xchg
and
and
push
call
shr
outsl
sub
inc
mov
dec
push
js
adc
pop
fnstenv
js
or
movhps
inc
sub
scas
xchg
dec
xor
call
fildll
add
cmpsb
ret
cmpb
jge
test
adc
jle
push
inc
push
mov
mov
js
and
fwait
pop
and
and
adc
movsw
adc
pop
xchg
push
mov
fisttps
add
add
ljmp
jp
pop
mov
push
nop
inc
lahf
sbb
ret
daa
incl
sbb
add
jl
lods
and
mov
ficomps
xor
les
ljmp
adc
mov
int3
or
push
mov
add
int3
dec
xlat
icebp
jle
lret
push
popf
inc
les
test
jno
dec
lods
xchg
repz
test
or
add
add
mov
sub
cmpsl
out
sub
jle
push
dec
push
mov
outsl
xchg
push
addb
add
pop
testb
mov
shl
mov
and
and
pop
jno
pop
cli
dec
icebp
jle
enter
mov
sti
std
or
push
cmp
push
dec
xlat
in
shll
jnp
mov
and
subb
push
loope
mov
fisttpl
pop
mov
hlt
add
or
outsl
and
push
push
incl
faddl
push
cmp
xor
mov
bound
xor
jno
insb
addb
and
pop
mov
rolb
sti
adc
cltd
test
jno
pop
je
fwait
add
popf
add
ret
and
inc
or
add
xchg
vcvtdq2ps
dec
and
mov
sbb
js
inc
daa
into
cmp
inc
jnp
out
call
push
lret
test
mov
or
xorb
sub
lahf
jle
pop
add
xchg
xchg
ret
cmp
fisttpl
or
aas
pop
inc
or
std
inc
inc
popf
mov
aaa
enter
and
ret
cmp
stos
out
mov
add
mov
idivb
mov
arpl
arpl
mov
repnz
jno
push
std
call
xchg
xchg
int
addb
cld
mov
call
stos
std
xchg
clc
mov
inc
pop
or
ds
xor
cli
addr16
dec
cmp
sub
push
cmpb
outsl
rcrl
test
addb
inc
movsb
sub
and
sbb
sbb
andb
add
and
psubusb
xchg
cld
cmp
mov
fwait
adc
lcall
mov
iret
mov
jmp
nop
jg
sub
ret
inc
leave
xor
mov
enter
test
aas
pusha
mov
repz
and
fsubrl
js
sti
pop
pop
push
sbb
inc
in
iret
mov
add
sbb
sbb
add
mov
add
mov
lahf
loop
dec
dec
scas
inc
aaa
sub
test
add
push
jno
outsl
cwtl
mov
mov
fucomp
scas
cmp
pop
cli
fisubrs
loope
push
test
push
mov
add
cmp
push
cmp
mov
xchg
outsl
dec
pop
or
addb
sbb
clc
in
push
push
movsb
cmc
dec
js
xchg
in
xchg
shlb
mov
cmp
icebp
sub
mov
xchg
sbb
sbb
cmc
pop
mov
adc
movl
cmp
arpl
sub
decl
xchg
dec
test
push
pop
sub
hlt
add
rcr
aaa
lahf
and
add
stos
bound
xor
in
sbb
cmp
jno
aad
pushl
out
cmp
xor
pusha
and
out
jae
mov
rorb
movswl
incl
mov
cld
add
js
sbb
adc
rcll
ljmp
mov
jp
jmp
sarl
stos
jl
cmp
icebp
jecxz
xchg
pop
dec
cmpsb
push
xchg
call
or
inc
mov
xchg
pop
or
push
sbb
outsl
nop
ret
sbb
or
dec
cmp
pop
aam
dec
sbb
loopne
dec
test
add
gs
ljmp
fistl
jo
and
dec
inc
push
mov
sar
imul
xchg
mov
popf
adc
ja
mov
test
mov
incl
dec
addr16
adc
loop
or
mov
mov
rcrb
add
pusha
mov
adc
jo
enter
je
in
inc
cld
and
mov
mov
outsl
aaa
sbb
push
add
adc
push
fsubl
sub
fisubrs
ss
pop
repz
or
push
ret
push
mov
xchg
add
inc
jle
shl
xchg
jmp
push
negl
in
cmp
cmp
jmp
das
mov
or
cmp
pop
cmp
in
or
and
inc
jnp
clc
jns
cmp
mov
sar
sbb
xchg
sub
stc
lods
cmp
push
pusha
or
scas
mov
push
dec
data16
sub
in
mov
into
bound
or
add
push
outsl
pop
add
fidivl
pop
xor
in
call
jmp
xchg
pop
xchg
add
popa
lmsw
int3
in
fdivrs
jno
icebp
outsl
ds
idiv
xor
mov
lcall
jle
push
sbb
jl
sub
icebp
adc
cli
dec
ds
jmp
push
adc
push
clc
test
sub
xor
lods
mov
xchg
imul
ret
pand
push
into
sub
sbb
iret
inc
cs
fiaddl
sub
inc
es
or
roll
sbb
loope
or
dec
leave
in
int3
adc
lds
ret
rolb
pop
adcb
icebp
lds
hlt
adc
jae
mov
and
test
pushf
jnp
jbe
lret
xor
pop
ret
fcom
es
add
mov
mov
sbbl
adc
out
inc
pop
mov
lock
mov
loop
add
jp
std
es
pop
pop
sub
addr16
mov
jecxz
mov
xorb
shll
movsb
jb
cli
jbe
scas
mov
and
movsb
andb
xlat
shlb
in
cmc
je
cmpsl
sub
jmp
sbb
cli
aaa
push
push
mov
inc
outsl
loop
jle
lock
or
lcall
sbb
int3
mov
and
sbb
pop
ret
out
scas
mov
int
cmp
xlat
sbb
into
jno
cmp
or
sti
cmp
cld
adc
insb
push
aam
sbb
sub
push
sbb
jnp
stos
es
fistpl
scas
les
pop
cld
push
vpsrad
imull
ror
test
dec
popa
sub
or
adc
std
outsb
adcl
adc
addl
test
push
jge
mov
add
scas
les
pop
jle
xchg
int3
add
jl
int3
mov
ds
dec
rdtsc
dec
cmpsl
cltd
dec
inc
inc
cmc
das
mov
fwait
sbb
pop
add
psrlw
pop
xor
jo
test
and
in
xchg
cmpb
jno
sub
or
add
icebp
sub
sbb
aam
outsl
fisubl
sarl
jo
popa
cmp
jecxz
cmpb
pop
adc
je
mov
mov
fs
cwtl
rcrl
leave
cmp
mov
out
jp
out
mov
mov
xor
icebp
mov
cmp
in
xor
fisubs
xor
cmpsb
lods
mov
mov
mov
sbb
jno
or
sub
bound
xor
pop
enter
or
das
in
inc
cli
push
xchg
mov
pop
cmpsb
jno
clc
jnp
sub
insb
addr16
out
mov
inc
clc
adc
and
and
mov
clc
jmp
call
xchg
push
and
loope
loope
sbb
movsl
jno
in
fildl
in
sbb
lret
aas
bound
sbb
add
loop
out
add
loopne
cld
jmp
and
jb
push
cmp
jmp
mov
inc
jp
out
out
out
pop
sbb
mov
das
sub
je
in
daa
pop
adc
call
or
mov
xlat
adc
xchg
or
inc
ficompl
pop
pushf
mov
cmp
jg
add
das
adc
mov
mov
scas
mov
sbb
push
inc
mov
and
aad
add
push
inc
test
adc
dec
in
adc
dec
into
jl
popf
je
movsb
mov
adc
mov
jbe
cwtl
add
mov
or
and
mov
push
iret
cld
add
es
enter
jg
mov
xchg
mov
cmpsb
sbb
enter
sub
rorl
movsl
sub
push
or
lds
pusha
add
xchg
push
fsub
in
add
data16
xor
testw
and
jg
mov
fwait
shr
pop
divb
ljmp
icebp
dec
outsl
pop
jno
das
or
jnp
add
or
int3
dec
xchg
push
incl
cmp
in
push
xchg
fsubl
jb
in
fldl
aad
jbe
xchg
xchg
lahf
xor
push
jecxz
cwtl
jmp
mov
nop
das
jns
pop
inc
das
sub
ret
mov
fimuls
push
js
mov
fisttps
sbb
lock
xchg
or
or
adc
icebp
add
loop
xor
ja,pn
mov
xchg
sub
aas
mov
sbb
add
mov
or
push
lock
bound
mov
sub
push
mov
pop
cmp
jg
hlt
mov
int
jge
nop
jmp
ds
xor
clc
pusha
test
and
cmp
out
cwtl
ds
je
mov
js
orb
inc
sar
cmp
lcall
decl
js
jbe
ljmp
sbb
stos
mov
xchg
mov
pushl
xor
jb
xchg
leave
cli
jmp
sbb
fs
call
stos
push
loope
ja
sbb
int3
iret
mov
mov
mov
cmp
lahf
cmc
mov
test
xor
sub
sub
test
pop
adc
outsl
icebp
jbe
dec
mov
push
xor
adc
pop
les
lret
sub
mov
dec
lods
loope
inc
mov
pop
idivl
cli
add
push
fistpll
mov
fwait
ret
or
xchg
jmp
clc
or
inc
xchg
rorl
dec
test
insb
mov
xchg
rorb
dec
lret
or
adc
add
or
dec
mov
lea
mov
mov
clc
les
jmp
dec
test
xchg
cmp
mov
repnz
shrl
mov
dec
push
aas
daa
out
push
fs
dec
pop
and
xchg
push
add
cli
testl
and
add
dec
mov
bound
sbb
inc
cltd
addr16
sbb
push
add
sbb
gs
dec
add
mov
sub
xchg
je
sub
sbb
fidivl
ret
inc
mov
call
or
aad
push
test
add
jmp
int3
mov
cli
pop
enter
nop
xor
inc
push
rcl
stos
dec
push
dec
push
cld
and
mov
mov
inc
xchg
dec
adc
or
mov
pop
lods
lret
dec
pop
je
add
test
or
pop
sbb
pop
sbb
call
dec
and
mov
pop
add
jo
sub
aam
stc
add
add
test
inc
ret
and
cmp
and
mov
orl
lcall
mov
les
fmull
adc
icebp
sub
or
into
es
nop
push
and
xchg
sarb
adc
adcl
insb
mov
fwait
hlt
int
hlt
mov
inc
lods
xorb
mov
inc
push
dec
xchg
push
cld
data16
jmp
aad
call
daa
mov
jno
dec
adc
or
push
in
repnz
pop
cmc
in
clc
lock
les
cwtl
in
sub
popa
je
rcl
stos
mov
jle
ljmp
push
xchg
popf
test
xchg
sbb
add
repnz
pop
inc
cmp
and
dec
aam
lods
and
mov
add
and
mov
inc
inc
jl
lret
fists
loop
daa
loopne
sarl
lcall
push
stos
cmp
decl
add
js
je
jge
cmpsl
cmc
xchg
dec
hlt
mov
pusha
ja
add
cmp
lret
xchg
ret
lds
pop
clc
push
popa
dec
addr16
es
out
inc
ret
pop
push
loop
fcoms
push
stc
or
inc
cli
add
and
mov
clc
sbb
xor
and
xor
ss
add
mov
hlt
sub
sbb
div
push
add
cs
adc
xchg
adc
mov
cmp
add
sbb
and
mov
jo
stos
sbb
xor
scas
sub
in
dec
js
dec
pushf
ss
xchg
aad
sub
adc
sahf
fiaddl
mov
mov
mov
xor
aad
jne
in
sub
js
sbb
pushf
test
cmp
add
enter
lahf
cmp
outsl
aam
loop
scas
jmp
add
pop
jne
jp
loopne
xchg
push
adc
adc
decb
pop
js
gs
pop
stos
mov
and
add
mov
mov
sbbb
dec
xor
sbb
push
dec
mov
clc
aaa
fnstsw
arpl
jo
xchg
loopne
adcb
addb
loop
pop
incb
out
inc
xor
pop
cmpb
lock
xchg
dec
call
xchg
mov
add
cmc
test
loope
add
test
jmp
inc
push
cmp
push
outsb
inc
je
dec
xchg
jecxz
xor
pop
cli
aaa
std
xor
cmp
pop
cmpsl
jbe
inc
pop
jbe
or
stos
inc
jg
stos
and
adc
ja
mov
imul
pusha
aad
lcall
fdivrs
xchg
adcl
add
jnp
mov
sbb
divb
push
std
test
sbb
xchg
stos
lods
jb
adc
and
add
std
mov
call
in
mov
testb
mov
lock
adc
cld
jmp
xor
ds
bound
push
sbb
add
adc
lods
jo
ja
outsb
xor
sbb
add
push
outsb
cwtl
lock
call
cld
lret
mov
imul
cltd
ret
push
mov
or
out
mov
and
mov
jns
cld
push
pop
jl
insb
push
or
mov
adc
cltd
nop
and
cmp
lock
lret
add
pop
push
push
and
pop
cld
push
mov
cs
or
sbb
adc
add
loopne
sub
insb
pop
cld
push
cmp
andl
mov
cmc
mov
cmp
flds
sbb
imul
or
xor
mov
ljmp
or
jo
mov
inc
add
out
mov
scas
mov
fsubrs
add
ja
outsb
adc
push
js
out
je
dec
sub
mov
mov
push
cmc
xchg
data16
movsb
pushl
int
test
dec
adc
dec
jl
mov
mov
icebp
aaa
std
mov
je
leave
lcall
rolb
push
sub
aam
pop
mov
nop
xor
xchg
ret
pop
icebp
jg
into
xchg
int
mov
rorl
jns
sub
adc
sbb
hlt
outsl
mov
adc
stc
arpl
or
loop
adc
inc
push
push
xor
mov
and
addb
and
sbb
movsb
or
xor
or
mov
es
jge
int3
add
test
dec
incl
pusha
jge
xchg
xchg
imul
mov
pop
add
cmp
shlb
pop
decl
cmp
xchg
sbb
xchg
rcr
arpl
jg
sub
mov
dec
xchg
fwait
or
sbbb
pop
jl
mov
inc
and
and
mov
mov
sub
mov
in
aas
adc
push
add
roll
or
std
and
mov
xor
cmp
inc
and
or
test
or
sbbl
cmpb
or
jb
insl
xchg
sti
ljmp
pop
fwait
push
or
sahf
es
addl
push
lods
inc
repz
roll
pop
int3
inc
mov
mov
dec
cld
push
cmp
cmp
aaa
insb
pop
loopne
mov
sarl
sbb
clc
push
xor
push
jno
sbb
adc
mov
jl
cmpsl
loopne
sub
mov
psubusb
sub
sub
mov
cli
clc
inc
cwtl
jl
and
push
ds
xor
insb
xchg
push
scas
cmp
ljmp
jmp
jb
les
sbb
repnz
psrad
out
jbe
mov
sbb
add
cld
or
shl
xor
outsl
fidivs
sub
push
adc
aaa
jg
or
int3
frstor
pop
push
lahf
aad
clc
mov
lock
mov
scas
mov
dec
mov
cmpsl
jo
push
mov
mov
lds
mov
rcrl
lock
adc
lcall
loopne
rorl
loopne
int
adc
je
jp
xchg
xlat
adcl
fcomip
dec
bound
cli
fisubrl
cmp
mov
js
into
mov
push
push
jo
fildll
mov
mov
test
fidivrs
mov
jecxz
jae
outsl
mov
loopne
lcall
call
add
call
push
push
repnz
or
jg
test
ficoms
adc
mov
inc
xchg
subl
out
arpl
fiadds
mov
ffree
add
lahf
cmp
cmp
push
pop
aad
sahf
fisubs
lock
ret
xchg
mov
adc
outsb
fbstp
sbb
push
ret
mov
hlt
sbb
mov
or
push
xchg
add
xor
mov
mov
mov
sbb
xchg
sbb
fbstp
mov
pop
dec
jecxz
push
add
scas
clc
fucomip
aaa
test
in
lds
adc
or
mov
fmul
cmp
push
and
je
mov
push
outsb
push
jae
cmpsb
pop
mov
adc
xorb
jg
fisubrs
pop
lcall
cli
pusha
mov
sbb
aam
add
and
push
mov
and
add
mov
lock
lahf
sbbb
sub
dec
sub
mov
pop
sbb
das
shrb
xor
jecxz
negl
or
add
push
add
data16
outsb
mulb
mov
lods
sbb
js
jp
add
adc
push
mov
iret
outsb
or
fs
sub
mov
movd
push
pop
stos
push
add
stos
mov
sbb
das
push
std
pop
out
shrb
mov
jge
add
mov
lock
cli
push
cmpsb
or
sub
or
pop
shl
bound
pop
sub
decl
in
aam
testl
add
stos
mov
scas
mov
inc
inc
mov
push
jg
sahf
xor
ljmp
inc
call
fcmovnb
in
shlb
xchg
add
jg
or
xor
out
in
add
and
sub
call
cmp
dec
inc
sbb
aaa
mov
cmp
adc
push
push
loopne
mov
mov
or
add
sbb
xor
inc
jl
jl
pop
mov
sahf
in
ss
dec
xchg
push
js
lods
and
push
jg
cmp
or
or
adc
lock
sbb
rcrl
jl
pusha
fs
cli
daa
xchg
pushf
adc
xchg
leave
mov
cli
sbb
xchg
addb
sub
adc
in
stos
sub
sub
mov
ret
inc
sub
sbb
ficoms
push
jbe
dec
mov
rcrl
and
sub
add
addb
or
push
pop
xchg
mov
rcll
scas
push
sbb
repnz
or
adc
test
bound
ficomps
scas
cli
jbe
dec
jl
stos
ljmp
inc
mov
mov
inc
jns
in
add
pop
aas
pusha
lods
jle
xchg
shrb
or
inc
sti
mov
pop
mov
sbb
test
loopne
loopne
push
std
pusha
xchg
jg
lock
jbe
jle
leave
cmp
out
add
add
jmp
adc
mov
or
lock
mov
js
push
lods
mov
mov
lahf
mov
pop
cs
adc
xor
adc
cwtl
push
pop
or
sub
imul
xchg
mov
xor
inc
mov
xor
loopne
rorb
outsl
enter
xchg
jmp
idiv
call
pop
add
jbe
jl
dec
push
push
pop
mulb
sub
and
and
pop
lock
mov
call
int3
mov
test
push
pop
lcall
fsubrs
inc
dec
mov
pop
out
push
call
push
pop
pop
mov
loop
mov
cmp
cs
inc
pop
jle
sbb
mov
xchg
pusha
rcl
dec
test
mov
cmpsb
aaa
sbb
loop
aas
sbb
aas
stos
stos
cmpsb
ss
add
ret
es
adc
rclb
mov
leave
cmp
mov
jg
dec
sub
mov
inc
adc
hlt
or
mov
jp
ds
out
testb
scas
xchg
sahf
push
add
xor
pop
inc
test
cli
addl
int3
addb
inc
dec
xchg
inc
add
cli
ljmp
repnz
aam
int3
mov
hlt
mov
jb
sbb
xorl
or
icebp
xlat
jp
mov
fs
hlt
les
outsl
lods
call
pushf
or
mov
mov
out
mov
fldl
popa
push
aas
lea
or
hlt
cmpl
sbb
mov
mov
lea
xchg
iret
add
aad
cmp
or
lahf
jo
add
cld
jg
fadd
add
dec
dec
imul
ljmp
ljmp
cs
stc
ja
cmpsb
add
mov
notl
lahf
sbb
cwtl
data16
aaa
add
insl
int
xchg
popl
sahf
es
add
lods
cltd
mov
test
mov
pop
test
ds
xlat
pushl
jae
cli
ror
add
push
fsubr
inc
adc
cwtl
inc
shrl
jle
aas
fisubs
fs
mov
push
fs
sub
push
pop
fwait
ds
cmp
cmpsb
call
dec
adc
mov
pushf
or
mov
push
sti
push
flds
sbb
int3
jecxz
inc
sbb
pop
cld
cmp
add
jmp
repnz
xchg
adc
shlb
add
add
popa
push
inc
arpl
fstpl
xchg
dec
out
xchg
bound
sub
jnp
ljmp
fcoml
mov
jle
jno
mov
push
inc
cmp
lcall
iret
sub
add
mov
add
mov
mov
lock
fnstsw
push
fdiv
imul
pop
movl
add
je
push
push
pop
icebp
insl
shll
icebp
pop
js
push
push
push
in
push
jno
mov
ds
jl
pop
sbb
ljmp
daa
aas
js
mov
cmp
icebp
adc
jbe
ljmp
shrw
adc
add
loope
cs
fmuls
push
in
jb
xchg
sti
hlt
aam
xor
mov
mov
notb
scas
xor
int3
movb
shl
test
lock
add
addl
shll
mov
lds
sbb
fld
mov
inc
and
ljmp
shl
cld
lcall
in
leave
rcl
mov
jbe
dec
adc
push
xchg
aas
mov
decl
mov
sbb
in
mov
pusha
in
push
xor
ljmp
add
shll
pop
jp
mov
and
lods
xchg
push
dec
mov
cmc
push
add
incb
mov
data16
das
pop
movsb
jo
fldenv
dec
les
nop
ss
mov
fcompl
out
xor
stos
out
mov
jne
sbb
ljmp
and
pop
xor
data16
dec
jmp
jmp
jg
jmp
dec
ret
sahf
sbb
or
pop
mov
cmpsb
or
push
sbb
push
xchg
call
or
fistpl
mov
call
in
dec
cs
loope
aas
int3
jno
js
sbb
or
sbb
push
out
movb
and
mov
mov
pop
inc
mov
int3
xor
pop
and
push
mov
ss
out
orl
mov
add
je
jne
xchg
fcom
mov
jns
push
mov
add
call
mov
insb
sahf
incl
or
jo
imul
dec
or
flds
sbb
adc
pop
lods
mov
lcall
or
daa
loop
push
mov
xchg
mov
popa
fldenv
dec
mov
pop
ja
and
cmc
aaa
jo
call
in
sti
jle
sahf
mov
pop
jge
nop
sar
xchg
pop
and
cmp
nop
lcall
out
mov
rolb
sbb
out
or
push
out
mov
sub
imul
or
mov
jo
cmpb
in
sbb
jecxz
in
mov
pushl
or
and
dec
popa
hlt
scas
in
ss
cmp
roll
imulb
push
sbb
ret
ret
lock
ret
sub
adc
dec
loopne
cmp
cmp
inc
cmp
adc
test
dec
add
orl
xor
pop
or
add
fwait
mov
leave
loope
jp
xor
mov
int3
inc
scas
mov
and
sub
pop
test
aam
pusha
sahf
pop
hlt
or
mov
sarl
jno
add
stc
sbb
and
mov
or
pop
jns
xor
dec
decl
xchg
mov
sbb
test
mov
out
jbe
lcall
mov
bound
loopne
je
in
fnstenv
fs
mov
adc
add
adc
gs
rolb
dec
xchg
cmp
push
lcall
and
mov
rolb
clc
jmp
add
sub
data16
out
mov
movsl
push
push
jecxz
ja
out
loope
fsubr
sti
inc
ret
sub
sbb
scas
aad
shlb
loopne
ds
out
in
lds
adc
addl
mov
cmp
cmp
pop
add
push
jp
out
xchg
mov
or
scas
pop
sub
iret
stos
push
jp
outsb
inc
sub
jnp
pop
lock
pop
pop
pushf
add
loope
lods
test
or
pop
mov
or
xchg
inc
shlb
sbb
lea
fmulp
out
add
shlb
xchg
bound
ret
adc
clc
pop
jl,pt
mov
or
test
call
push
inc
adc
popa
fisubrl
repz
mov
push
push
out
push
scas
enter
push
cmpsl
stc
mov
idivb
in
add
cmc
mov
loop
mov
mov
push
mov
hlt
jp
std
push
adc
inc
adc
xor
and
scas
xor
sub
inc
mov
inc
mov
add
lcall
dec
js
lret
or
mov
in
mov
or
ljmp
or
arpl
push
jecxz
pop
xchg
cli
xchg
mov
xor
add
jge
idiv
lds
mov
nop
dec
mov
or
dec
xchg
lcall
test
aas
inc
pop
push
cld
mov
lcall
mov
push
sub
push
pop
jge
mov
inc
insb
mov
std
jnp
xor
ror
out
andb
adc
ret
mov
pop
scas
bound
enter
mov
fwait
std
int
and
add
idivl
or
mov
test
inc
or
or
cmp
mov
push
or
test
enter
mov
movsb
xchg
pop
inc
jbe
push
sbb
jae
jecxz
fdivs
xchg
shlb
cli
loopne
add
mov
mov
push
subl
rol
and
jae
bound
jecxz
add
mov
pop
scas
sub
ljmp
adc
lret
mov
cwtl
and
add
cmpsb
dec
ret
cmp
call
and
push
addb
mov
pop
jge
xchg
push
inc
xor
shlb
pop
das
fildl
scas
sbb
inc
int3
push
mov
inc
push
std
ljmp
leave
push
adc
lds
push
js
call
mov
add
mov
jns
and
rcrb
pop
xor
sbb
mov
mov
clc
loopne
mov
cmpsb
out
push
loop
mov
hlt
outsb
cmp
aas
add
cmp
mov
nop
mov
cwtl
test
sbb
imul
int
mov
cwtl
sbb
xor
jnp
xor
adc
jns
outsl
mov
pop
nop
cltd
dec
sbb
pop
pop
mov
orb
nop
mov
sbb
shr
or
shlb
inc
dec
lea
xor
ja
lods
add
mov
mov
sbb
ficomps
add
mov
pop
push
add
pop
inc
test
ret
push
int
insb
mov
scas
push
sbb
test
xchg
adc
pop
dec
les
pusha
mov
sub
jg
push
xlat
int
sub
int3
mov
lcall
cmp
inc
xor
std
add
mov
xor
sub
addl
out
jno
pop
dec
jecxz
or
adcl
adcl
into
inc
jno
rcl
pop
cmc
rol
repnz
insl
or
insb
adc
sarb
mov
or
ja
add
adc
cmp
pushl
lock
in
test
fucomi
push
mov
out
push
and
add
pop
add
add
dec
cmp
sub
xlat
ja
add
lock
notrack
pop
adc
jle
loope
movsb
xor
adc
cs
and
or
cmp
jl
nopl
test
mov
out
les
fs
jno
add
outsb
dec
sbb
jmp
xchg
add
dec
jb
inc
push
inc
mov
mov
push
mov
lods
scas
inc
jle
add
sbb
out
loop
ret
les
jg
leave
pop
cmp
pushf
rep
hlt
add
leave
jmp
adc
jmp
sbb
stos
stos
push
loopne
adc
push
mov
cmp
add
or
scas
loopne
dec
mov
sub
hlt
decl
lahf
data16
test
push
mov
adc
lock
fdivrl
cmpsl
dec
ret
dec
inc
popa
call
add
dec
out
and
fwait
adc
incl
mov
pop
xchg
cs
mov
loop
xor
ss
add
call
and
inc
call
add
push
and
sub
pop
icebp
or
jl
ljmp
shll
fs
adc
fs
decb
push
js
daa
xchg
decl
push
les
jno
jecxz
push
add
xor
sbb
dec
add
test
and
hlt
movb
inc
adc
cmp
in
hlt
dec
lock
dec
xchg
loopne
das
test
fdivl
adc
and
in
adc
lcall
in
sbb
je
call
test
pop
pop
fwait
mov
xor
pop
mov
cmc
pop
test
orb
mov
out
leave
jno
mov
sub
or
fdivs
dec
or
divl
xchg
movsb
mov
das
adc
push
std
mov
sbb
mov
in
lcall
mov
jge
ret
rclb
ss
repnz
cld
sbb
in
xchg
push
and
jmp
leave
push
data16
addb
xor
mov
lret
fucomip
shrl
bound
mov
sbb
or
inc
xchg
pop
push
inc
cwtl
push
movsb
adc
shrb
fcos
es
sbb
cli
ja
and
pop
or
dec
jle
popf
inc
push
jno
loopne
mov
es
fadds
add
adc
dec
movsl
ret
inc
int
mov
stos
repnz
xor
out
int3
sar
dec
adc
add
dec
outsb
repz
pop
loope
inc
mov
sub
fimuls
aam
jmp
or
mov
xor
add
ret
or
add
jl
mov
test
scas
push
aad
ret
lcall
inc
push
mov
mov
int3
sbb
add
scas
jo
rorl
cs
jae
stos
jmp
sarb
test
clc
jge
vmwrite
cmp
add
cmp
jle
xchg
ret
js
loope
sbb
lock
and
lcall
mov
jecxz
aam
shl
adc
cli
sub
jnp
hlt
mov
ficoml
adc
adc
fistps
push
push
add
sbb
xchg
xchg
jnp
push
mov
gs
orb
les
int
xor
cmp
or
repz
js
arpl
adc
push
in
in
and
scas
cmp
adc
addr16
es
mov
sarb
push
les
xchg
das
ror
dec
pop
dec
and
jp
push
pop
aaa
out
cld
mov
xor
lcall
mov
and
pop
or
sarb
das
ret
dec
stc
mov
push
insl
ljmp
inc
xchg
outsl
cli
xor
jnp
rcrb
xor
cmpsb
fstpt
loopne
fwait
add
mov
push
les
test
ret
or
ss
shr
xchg
icebp
sub
decl
jle
push
xor
mov
sbb
adc
add
mov
leave
xor
or
addl
and
pop
add
loopne
ret
xlat
hlt
daa
nop
adc
pop
shll
push
test
or
cli
enter
xor
mov
mov
inc
lret
push
mov
lods
inc
ljmp
enter
mov
cli
push
xchg
push
mov
call
jp
andb
xchg
fiadds
and
fildll
xor
lods
cmpsl
icebp
je
stos
add
insl
add
adcb
mov
sarl
push
jg
loopne
and
mov
dec
inc
cld
loopne
push
aas
and
in
sub
cmp
fstpt
inc
scas
jbe
xchg
ja
or
iret
push
adc
dec
iret
push
fcompl
push
pop
popa
and
incb
lcall
pushl
or
popa
dec
dec
fistl
mov
dec
cs
je
outsl
add
aas
dec
add
std
shlb
sub
mov
adc
or
xlat
movsl
mov
mov
insb
ja
call
push
jl
popa
fwait
xchg
push
ja
xor
and
fldl
pop
add
xchg
jno
sbb
xchg
and
ja
or
pop
mov
inc
mov
lcall
movsb
pusha
ret
in
or
scas
fdivs
cwtl
shlb
push
in
and
mov
sbb
fs
cmc
and
shll
jb
mov
cmp
clc
lea
inc
mov
outsl
incb
outsl
fldl
daa
and
in
jns
and
or
pop
repz
aam
outsl
cld
dec
clc
mov
es
inc
jle
in
pop
xorl
push
out
scas
es
pop
sub
arpl
mov
iret
fs
cmp
jo
push
and
sahf
rolb
dec
lea
jmp
fdivrl
outsb
push
sbbl
sarl
mov
jle
add
divb
push
mov
icebp
jmp
pop
xor
lea
insl
decl
or
mov
push
pusha
add
and
inc
inc
popf
jmp
clc
dec
loope
loopne
lret
sub
in
hlt
test
lcall
push
insb
mov
pop
roll
imul
sub
popa
jo
xchg
incl
mov
mov
out
incl
and
xlat
mov
loopne
mov
mov
dec
mov
adc
mov
jg
incb
fmuls
cmpsb
cmp
test
push
push
or
inc
cmp
mov
jle
hlt
add
int
pop
icebp
mov
jle
mov
imul
push
aam
inc
adc
and
or
pop
scas
push
mov
movsl
push
push
jb
and
xlat
jns
popa
scas
decl
outsl
mov
cmp
lret
add
incl
xchg
jnp
into
mov
push
jp
adc
push
in
push
in
mov
andl
frstor
mov
lock
jmp
pop
pop
and
xor
ds
aam
or
or
pop
stos
js
int
decl
lock
jno
jne
mov
inc
add
enter
mov
cmp
cld
mov
sbb
ret
inc
loope
adc
mov
in
dec
xor
mov
adcb
sbb
or
pop
cld
and
adc
dec
cwtl
ss
clc
inc
lock
mov
sldt
xchg
push
sub
sahf
dec
jmp
mov
xchg
lods
cmc
add
in
aaa
sbb
pop
inc
ljmp
adc
sub
daa
sbb
adc
mov
cli
sub
adc
insl
dec
sbb
jae
sbbl
push
push
mov
cli
lea
aam
ljmp
lds
and
or
cwtl
xchg
les
rcr
shlb
ss
out
imul
jmp
ss
lret
xchg
cld
lea
push
mov
add
scas
gs
repnz
andl
mov
mov
fidivs
fisttpl
shr
mov
mov
push
scas
mov
sub
decl
mov
arpl
add
sbb
or
jg
movsl
movsb
lret
xchg
lds
jo
add
enter
mov
cmp
and
mov
pop
repnz
imul
add
mov
jp
push
inc
xor
sarl
add
sbb
pop
stos
jle
add
mov
push
jae
ss
lret
outsl
xchg
xchg
sbb
lcall
push
push
cmp
add
dec
cmpsb
rclb
testb
and
push
jmp
lcall
fcmovb
add
fcompl
loopne
jo
repnz
test
push
mov
test
negb
icebp
fnstenv
stos
lahf
add
pop
cmc
loopne
decl
or
inc
adc
xchg
stos
xchg
pop
mov
rdpmc
sti
call
mov
loopne
adc
dec
add
add
jb
call
dec
cmpsb
inc
cld
pop
lock
adc
ret
add
loopne
outsl
clc
fildll
fnstenv
mov
sahf
xchg
inc
ret
jg
add
add
dec
inc
aas
jge
push
fsubrl
lock
lahf
push
cld
dec
outsl
xor
insl
ret
std
or
test
push
mov
inc
test
or
xor
outsl
in
lret
xchg
pop
std
mov
mov
push
push
outsl
cmp
sub
daa
imul
testl
iret
xlat
inc
mov
push
loop
int
push
roll
push
mov
mov
nop
lock
jg
shrl
jg,pt
mov
insb
ret
inc
jo
sbb
insb
pop
roll
sbb
cmp
testb
call
or
icebp
push
repnz
jno
jp
mov
pop
shl
jg
cld
lock
or
mov
int
mov
mov
mov
ja
mov
imul
daa
cmp
and
jae
lcall
xchg
in
loop
mov
jl
sub
mov
xor
adc
cmpsb
icebp
xchg
sub
cli
fimuls
pop
xor
aad
sbb
sbb
lret
cmp
loopne
aaa
sub
add
xchg
shll
shrl
fiaddl
xor
or
dec
pop
popa
cmc
sub
inc
cmpsb
pop
clc
pop
cmp
aam
mov
sub
mov
enter
push
out
and
cmp
mov
jge
xchg
fisubrl
sbb
in
test
fs
std
incl
push
adc
sbb
xor
sub
jp
jl
push
sarl
outsb
mov
sbb
mov
shl
inc
cli
cmpsb
ljmp
es
std
lret
xchg
mov
mov
sub
add
in
or
lock
mov
fucom
je
push
fs
mov
sbb
push
pop
cmc
hlt
shll
add
lcall
mov
icebp
cmpsl
inc
dec
add
and
shll
and
clc
sbb
clc
mov
std
nop
jecxz
add
js
inc
sub
call
sub
add
xchg
cs
lock
call
in
test
mov
xorl
sub
jbe
xchg
or
mov
inc
test
movsb
xchg
and
lahf
cld
cmp
and
rclb
call
xchg
dec
xchg
inc
fdivrs
adc
or
xor
add
xchg
push
sbbl
bound
gs
mov
ljmp
lock
fistpll
sub
mov
out
movsl
sar
aaa
xor
cmp
push
orb
es
pop
lods
sarb
ret
pop
push
das
clc
in
in
ljmp
mov
mov
xchg
fldl2e
adc
sbb
adc
sbb
adc
fucomp
iret
out
lock
and
or
data16
popf
sbb
shrb
jne
jae
jno
pushl
lock
sahf
arpl
jecxz
sub
push
into
push
rclb
cs
add
mov
mov
cltd
xchg
push
sti
dec
or
xor
and
clc
jge
call
jle
mov
pop
sbb
pop
les
mov
xor
aam
sbb
mov
pop
push
cmp
repnz
push
adc
and
sub
pop
xchg
repnz
inc
mov
loop
outsl
adc
dec
movsl
mov
mov
fadds
jp
loop
cld
and
pop
icebp
adc
xor
jmp
leave
jmp
jg
ret
jl
mov
add
jg
sbb
lods
add
icebp
sbb
jo
rcrl
dec
inc
ljmp
in
push
add
push
pop
adc
dec
jb
push
loop
loop
arpl
push
push
bound
inc
fistl
push
sub
popa
loope
sbb
mov
jo
push
sbb
jns
loope
imul
xor
mov
or
divl
insb
out
or
jbe
xchg
xchg
sub
xor
push
fdivrl
mov
fnstsw
jnp
cld
das
xor
or
add
sbb
aaa
fsubl
mov
cmp
in
mov
call
add
pushf
jb
data16
loop
insl
data16
inc
sbb
mov
int
dec
adc
test
iret
les
fcoms
adc
mov
cld
pop
and
imul
fldl
push
mov
dec
cltd
jg
cmc
and
into
or
add
add
cmp
das
inc
jb
sbb
ret
adc
outsb
xor
out
jnp
pop
nop
and
add
mov
sbb
mov
pusha
xchg
in
iret
jle
pop
add
add
adc
xor
pop
inc
int3
shlb
inc
sub
ficomps
stos
xchg
mov
push
dec
rcll
ds
xchg
mov
dec
ss
aas
cmp
cmp
inc
incb
jle
xchg
dec
data16
add
inc
gs
cld
pop
lock
sbb
add
dec
jnp
repnz
mov
xchg
repz
shr
dec
lds
clc
sub
xchg
push
cld
cmp
xor
rorb
push
cmp
jbe
dec
ret
inc
ret
sbb
loop
mov
nop
inc
mov
mov
repz
shlb
mov
jnp
ret
mov
mov
sub
pop
hlt
mov
push
mov
or
movsb
pop
sbb
lahf
pop
inc
pop
icebp
cmpb
fidivrs
adc
test
add
aam
ret
out
fcomip
dec
ret
inc
lods
push
adc
dec
adc
push
mov
sub
add
mov
test
sahf
add
jecxz
in
push
inc
ret
outsb
pop
bnd
pop
arpl
incl
jmp
add
popf
mov
gs
jmp
mov
mov
sub
cwtl
ret
in
mov
or
call
add
mov
pop
xor
push
inc
icebp
mov
fdivr
mov
je
pop
add
and
fsubs
push
cli
xchg
push
adc
inc
mov
stc
pop
and
imulb
movsb
fwait
ljmp
je
shlb
and
cli
push
mov
mov
push
sub
popa
mov
cmp
mov
add
push
in
loop
stos
add
daa
mov
jmp
loopne
mov
fisttpl
icebp
adc
inc
jl
add
xchg
in
or
pop
and
and
lret
cld
out
leave
in
cmpsl
dec
push
lds
xor
test
or
cmp
mov
mov
jle
incb
jo
shlb
mov
and
iret
add
dec
jmp
pop
shrl
insb
or
sahf
and
xor
sarb
outsb
dec
ds
adc
notl
lcall
add
iret
xor
notl
sub
icebp
in
ja
mov
mov
dec
iret
iret
push
jns
xchg
subl
inc
xor
adc
nop
pop
pop
pop
xor
leave
add
push
outsl
clc
clc
xor
ds
or
cmp
inc
sbb
mov
dec
add
data16
lock
sub
cmc
decl
insb
push
jle
dec
and
and
jp
inc
subb
bound
pop
mov
imul
add
sbb
adcb
sahf
pop
pop
pop
cs
sub
cmp
ret
push
xor
cmc
gs
jb
add
es
out
test
std
xor
xchg
mov
mov
sbb
cmp
or
and
pop
mov
aad
leave
out
dec
jo
and
sbb
xor
js
ljmp
mov
cld
mov
jne
into
bound
push
mov
loope
andb
mov
push
xchg
xchg
incl
push
xor
inc
mov
adc
cmp
dec
push
cmp
inc
loope
pop
jns
or
inc
mov
nop
icebp
hlt
jge
lods
cmp
orl
fcoml
xchg
fstl
pop
sbb
or
dec
pusha
cmpsb
aaa
jecxz
jbe
cmp
cld
push
xor
mov
out
xchg
push
mov
mov
mov
es
ret
ljmp
cmp
xchg
test
inc
scas
xchg
and
into
pushf
aad
ss
push
and
xlat
dec
data16
pop
lods
ja
mov
bound
and
mov
call
mov
cwtl
stc
ds
xchg
je
pop
stos
or
mov
iret
cli
nop
and
pusha
add
mov
adc
out
inc
imul
mov
push
in
add
cmp
ljmp
lcall
jle
shll
add
adc
cmp
dec
std
stos
dec
mov
pop
lahf
xchg
es
sub
xchg
mov
cs
mov
adc
fsubs
stc
cs
fdivl
adc
pop
cmp
xlat
pop
stos
in
add
lret
das
out
mov
dec
dec
or
pop
out
and
ss
loope
ljmp
in
jb
mov
xchg
in
in
jmp
cli
lcall
loopne
pop
stc
insb
shlb
out
add
xchg
lock
outsl
and
inc
dec
mov
cli
xor
mov
add
lcall
jl
in
lods
gs
xchg
lods
scas
jbe
push
cmc
ror
or
jecxz
mov
in
mov
std
test
lret
mov
mov
add
fdivrs
inc
ljmp
inc
or
jecxz
sbb
xor
bound
lcall
inc
into
inc
test
pop
push
mov
mov
inc
pop
push
xchg
bound
inc
sarb
and
ja
mov
clc
push
cmp
push
inc
inc
pop
aam
fwait
aam
jp
xor
push
mov
shll
mov
xor
push
sub
mov
xchg
cld
add
and
fisubs
insb
js
int
pop
les
jno
xlat
pop
push
pop
sub
jb
push
cmp
fwait
mov
addb
in
pop
jno
xor
xlat
sbb
sub
fldt
icebp
aam
hlt
add
dec
lock
lock
sti
je
jecxz
mov
sbb
pop
lea
dec
cwtl
fiaddl
addr16
xchg
pushf
or
push
xlat
mov
xor
jge
loop
les
xchg
push
and
xlat
out
lock
cli
mov
cmp
fisttps
pusha
push
jg
sti
mov
call
cmp
sbb
adc
sahf
in
loopne
outsb
mov
push
add
or
cmp
adc
pop
clc
push
pop
fadds
jo
lods
test
cmp
les
outsb
pop
insb
push
ret
call
test
test
clc
outsl
out
mov
cmpl
rorb
cwtl
ja
test
loope
ja
xor
mov
add
cmp
sahf
jle
aam
decl
rolb
pop
fdivs
mov
xchg
ret
mov
mov
mov
xchg
push
mov
popf
pop
lcall
jne
cli
cmpsb
xchg
push
cmpl
sbb
adc
cmpl
int3
mov
dec
fs
xchg
shrb
mov
aam
or
xor
mov
mov
out
jle
testl
sarb
aad
push
mov
jb,pn
ja
mov
jns
dec
sub
adc
movsb
add
or
inc
in
or
or
and
and
add
call
mov
fldcw
xchg
adc
js
dec
push
inc
std
mov
xchg
je
inc
enter
xchg
incb
shll
sub
lret
add
pop
jecxz
add
clc
adc
adc
cmp
xchg
cmp
push
lcall
add
les
lods
and
lods
hlt
mov
mov
and
add
fs
clc
cmp
cld
mov
mov
addl
or
or
imul
mov
sbb
push
cmpsb
mov
xchg
xor
fdiv
pushl
fyl2x
or
in
loop
add
xor
ret
scas
ret
inc
enter
add
or
data16
and
daa
add
mov
ljmp
adc
js
fisubl
test
js
and
and
dec
icebp
fisubs
sbb
dec
adc
rolb
push
mov
in
lods
dec
rol
sub
adc
cwtl
rcl
mov
lds
and
lock
push
ds
out
sbb
sbb
mov
cmpb
cmp
add
mov
push
inc
ljmp
mulb
ss
sar
sub
inc
inc
shl
int
xchg
outsl
push
cmp
sbb
pop
jl
jl
push
push
lock
pop
pusha
pop
pop
mov
rorl
ret
sbb
outsb
xor
add
mov
std
mov
movsb
pop
dec
repz
jbe
dec
jp
jl
ds
mov
je
iret
cltd
xlat
xor
and
test
mov
xor
push
mov
push
pop
icebp
xchg
rclb
pop
push
jle
pop
push
rol
out
sub
add
mov
or
push
gs
scas
xchg
mov
in
add
mov
pushf
jecxz
adc
push
and
mov
add
mov
or
dec
es
adc
test
fisubrl
push
push
mov
xchg
repz
and
call
stos
mov
cmp
mov
push
adc
aaa
mov
sbb
push
cli
push
leave
pop
fiadds
jecxz
mov
mov
cli
pop
mov
mov
inc
sbb
nop
hlt
inc
pop
xor
decb
pushf
icebp
xor
addl
push
pushf
movsl
out
add
inc
sub
add
xchg
inc
mov
out
jl
push
mov
decl
cmp
xor
out
add
mov
pop
hlt
cmp
cmp
mov
adc
mov
sbb
and
or
into
dec
aas
bnd
jb
aas
push
imulb
sarl
std
add
dec
aam
or
mov
adc
cmpl
cli
nop
push
rcll
gs
xchg
mov
insb
std
fs
out
sub
jle
push
ret
int
cmp
in
jg
adc
and
pusha
stos
mov
or
pop
mov
mov
mov
nop
jle
jno
cmp
lods
cmc
push
ss
loope
pop
test
or
idiv
jg
add
cmpsb
mov
push
inc
int
or
xchg
js
add
lods
shll
rcrb
movl
sbb
ljmp
negb
mov
decl
incb
aaa
push
add
cmp
dec
inc
loop
aad
cmpsl
aam
xor
add
push
mov
cmp
or
inc
bound
dec
inc
jne
adc
mov
adc
push
jno
xchg
add
jl
adc
and
pop
sbb
cli
icebp
pop
scas
add
sub
sbb
jl
adc
mov
loope
std
sub
or
add
stos
mov
cmp
push
out
cmpsl
mov
adc
je
push
dec
mov
jle
add
mov
xor
pop
mov
ret
and
dec
fsts
jl
in
inc
je
jbe
sub
loop
inc
jle,pt
and
mov
inc
mov
mov
cmpsb
and
mov
movsl
daa
dec
mov
push
jb
movsb
sahf
jle
xor
or
pop
jl
fstl
leave
pop
xlat
cmpsb
pop
addr16
dec
push
add
pop
pop
imul
popa
jl
das
push
push
fiadds
push
dec
sub
dec
dec
shrl
pusha
pop
mov
sbb
cmp
and
fnstenv
cmp
daa
call
sub
and
cld
sbb
into
push
cli
stc
mov
xor
jl
dec
ds
inc
sbb
sbb
ljmp
xor
fbld
sbb
sub
fdivs
test
pop
push
mov
jb
cli
jne
dec
xor
rcrl
adc
aam
mov
addr16
data16
and
add
in
pushf
jle
popf
hlt
mov
out
mov
mov
loop,pn
pop
sbb
das
add
nop
dec
mov
in
mov
push
insb
push
dec
add
shrl
fwait
test
inc
mov
mov
inc
push
inc
ss
rcr
std
pusha
cmpl
mov
or
addr16
sub
ds
test
xchg
cli
inc
cld
sbb
stos
sbb
lods
outsl
in
ljmp
add
js
les
sub
lahf
pop
mov
add
ss
xlat
loop
mov
into
inc
bound
loop
or
cmp
or
push
sbb
mov
aaa
pop
mov
mov
xor
or
clc
pop
movb
pop
jl
loopne
pop
push
pushf
and
iret
cltd
clc
lret
cmp
test
cmc
bound
inc
in
pop
test
ds
cli
loopne
int3
in
pop
ret
call
push
cmp
inc
jge
lock
sub
pop
cltd
cmp
push
pop
ss
xchg
sub
jns
pop
jmp
sbb
xchg
add
fisttps
std
or
or
jecxz
das
xchg
lcall
mov
jns
shlb
push
lret
xchg
add
std
imul
mov
sbb
daa
insb
sub
test
fs
add
andb
adc
jecxz
cmpsb
sbb
push
call
and
mov
ljmp
sub
jmp
mov
icebp
sub
es
mull
mov
cmp
push
lds
shl
jbe
lahf
cmpsb
inc
in
xor
jle
push
mov
js
adc
lahf
subb
bound
repz
adc
in
mov
push
push
cli
sbb
fisttps
or
xor
cmc
lock
in
rcll
lock
jmp
pop
ret
sub
leave
addr16
mov
adc
inc
cmp
push
imul
pusha
push
dec
mov
test
push
es
add
loop,pn
xorb
xchg
xor
push
mov
lock
mov
mov
test
stos
cltd
or
jbe
add
popf
mov
inc
call
pop
aam
data16
pop
pop
cmpb
sbb
loope
or
pop
add
lods
mov
xor
mov
outsl
or
jecxz
std
scas
aas
imul
and
add
xchg
dec
bound
rcll
cmpsb
loope
jo
bound
and
push
mov
mov
cli
repz
dec
test
adc
rolb
jnp
mov
add
fs
movsb
bound
das
cmp
shr
fmull
add
mov
movb
xor
stos
jge
pop
mov
std
jg
or
add
push
xchg
pop
bound
push
lret
add
pop
or
leave
jmp
je
dec
dec
jno
aaa
jp
jge
cld
xor
movsb
out
inc
push
mov
popf
or
es
cltd
ljmp
nop
cmp
movsb
mov
fisubl
sarl
movl
inc
in
mov
xchg
sti
in
adc
adc
aas
jbe
mov
xchg
xor
int3
pop
xor
push
std
pop
lods
aaa
mov
in
add
lock
js
push
enter
cpuid
pushf
data16
sub
out
push
pop
aad
leave
iret
mov
pop
jl
push
xor
and
insl
cmp
xchg
movsb
movsb
pop
cmpsl
xor
movsl
dec
pop
orb
into
lods
scas
push
mov
xchg
and
mov
push
push
adc
pop
jecxz
jae
clc
add
adc
outsl
pop
xchg
ret
or
sub
push
les
and
mov
dec
sbb
pop
loop
xlat
mov
pop
cwtl
inc
xchg
loop
pop
cld
or
sbb
add
decb
fsub
fwait
push
out
sbb
dec
xor
xchg
int3
inc
sbb
fimull
inc
jnp
pop
out
or
ret
sub
dec
lods
xchg
fdivs
andb
push
adc
cmp
lcall
fstps
jmp
into
pusha
jae
movsb
fldl
or
xor
adc
jle
shrb
mov
outsl
mov
lock
jb
mov
push
loopne
fsubl
loop
xor
loopne
aas
call
xchg
sub
test
clc
add
loope
sbb
aaa
sub
ror
push
add
aas
mov
cmp
aas
cli
fisttps
cltd
xchg
rcrb
dec
and
xor
cltd
or
push
sbb
jle
rorl
in
mov
lret
jecxz
icebp
fildll
stos
add
subb
mov
std
add
mov
scas
mov
xor
int3
fiaddl
sub
dec
cld
push
fstp
mov
test
ret
xchg
push
jl
hlt
lret
call
adc
sbb
mov
addb
add
xchg
push
clc
push
loopne
cld
fidivl
fsubl
sbb
in
xor
add
aam
ss
jb
jmp
push
pop
xchg
enter
cltd
sbbb
push
lock
scas
push
decl
aam
and
mov
clc
shll
cli
push
addl
rcll
xchg
test
or
cmp
insb
pushf
pop
sub
pop
mov
xchg
psllw
sub
xchg
orb
popf
movsb
mov
and
movsb
mov
ds
imul
lods
mov
pop
std
cli
outsl
shlb
repz
and
xorb
or
mov
out
xchg
dec
addr16
jle
pop
int
push
lcall
scas
ja
stos
ljmp
jl
jge
push
sbb
rcl
push
cmp
pop
push
and
mov
or
sub
les
mov
pop
and
inc
pop
mov
push
and
or
mov
sahf
or
mov
sub
cmpsl
pop
pop
dec
sbb
gs
stc
pop
sar
stos
outsl
fisubrs
sbb
cmc
cli
mov
add
std
div
mov
sub
sarb
mov
dec
add
sbb
subb
jo
cmp
add
and
sbb
in
push
je
inc
push
cmp
inc
hlt
push
lahf
in
push
cld
or
mov
adc
stos
test
xor
loopne
mov
cmp
outsb
sub
cmp
sbb
fbld
mov
stos
inc
and
les
xor
cmp
icebp
fstpt
inc
jae
insb
test
jecxz
adc
xor
enter
cmc
ret
lods
add
push
and
cwtl
jbe
push
adc
jmp
xor
jg
int3
push
insb
add
outsb
sub
adc
sbb
pop
std
lds
cld
push
cmp
fsubrp
xor
and
push
xor
or
cli
das
clc
push
pushf
adc
notb
inc
lret
rcrl
mov
shlb
sahf
mov
cmp
js
fwait
mov
fwait
pop
lcall
mov
inc
loop
xor
sbb
movsb
mov
ss
pop
hlt
pop
aam
inc
fwait
or
adc
adc
std
out
or
dec
xor
adc
pop
enter
sbb
add
dec
push
ljmp
sub
filds
mov
sti
adc
xchg
movsb
mov
cld
cs
adc
and
mov
nop
loopne
add
or
std
or
mov
ljmp
inc
fisttps
cli
adc
dec
out
inc
ret
push
cmpl
mov
add
and
add
imul
jl
inc
xchg
incb
or
jge
fnstenv
popf
mov
mov
test
incl
fcompl
sbb
dec
je
sbb
push
xor
xor
adc
jns
mov
hlt
jl
lock
xchg
ret
inc
dec
sbb
pusha
push
setbe
jg
cltd
push
lds
xchg
ret
nop
clc
mov
lods
scas
icebp
or
leave
dec
and
or
rolb
loop
dec
das
inc
pop
adc
add
in
inc
addr16
std
or
in
pop
push
mov
or
aad
and
aaa
stos
sub
adc
stos
test
out
sbb
add
push
mov
mov
cld
xchg
ret
and
loopne
andl
inc
adc
sbb
test
das
pop
roll
mov
movsl
iret
or
pop
das
push
ljmp
es
lret
add
out
pushf
push
imul
and
xor
lcall
enter
push
pop
or
dec
or
pusha
sti
js
jl
pop
mov
mov
and
sbb
sub
imul
testb
jbe
push
pop
pop
push
add
jg
or
pop
pop
in
cld
or
lock
push
mov
mov
jle
jb
insb
cmp
cmp
sbb
hlt
or
pop
hlt
inc
mov
ljmp
or
ret
xchg
push
push
or
pop
loope
dec
pop
inc
dec
cmp
fwait
add
cli
outsl
push
into
iret
sti
int3
mov
int
mov
fisubl
scas
or
push
pop
mov
call
add
test
mov
sarl
lea
faddl
sbb
and
push
push
adc
loopne
imul
cs
push
scas
inc
inc
xchg
jno
cmc
in
loop
push
out
ljmp
cmc
jnp
je
pusha
dec
out
fisubrs
insb
pop
dec
add
mov
call
cli
dec
dec
cmc
pop
mov
aad
bound
xor
shrb
jle
push
pop
mov
xchg
or
test
adc
stos
mov
loope
pop
test
pusha
xlat
jmp
iret
fwait
pop
mov
fadds
sub
rcrb
jb
mov
adcb
jecxz
lcall
xchg
push
push
or
rorb
mov
adc
aam
roll
ds
push
jl
es
test
or
inc
lret
cmpsb
mov
imulb
cmp
fidivrl
insb
adc
xor
ret
dec
push
fadd
xor
inc
adc
dec
addr16
mov
dec
push
insb
push
and
cmp
add
jmp
dec
aas
ss
add
lcall
push
sbb
sbb
cmp
aad
test
cmp
add
movb
sti
movsb
sub
mov
xor
je
sub
lret
repz
inc
jg
dec
push
bound
jns
and
push
cmpl
cli
orb
cmpb
mov
rcrb
imul
cmp
dec
mov
xor
leave
addr16
repnz
mov
add
pop
movq
xchg
sbb
inc
es
lock
hlt
mov
dec
push
jns
mov
mov
sub
lods
movsl
mov
mov
pop
cmp
inc
loopne
sbb
cmc
push
in
xchg
push
push
inc
aaa
lds
les
mov
bnd
outsb
test
mov
cli
fs
and
push
sbbb
in
pop
xchg
rcrb
cld
loope
cwtl
and
sarb
idivb
adc
jg
call
xlat
pop
fcmove
in
ret
or
fsubrs
push
adc
or
mov
cli
stc
cmp
jmp
sub
jle
lock
fdivp
jb
lock
or
add
and
jns
mov
mov
mov
sbb
pushw
repnz
scas
add
jge
sbb
jne
ret
cmp
adc
scas
inc
adc
in
addb
push
les
jg
pop
mov
and
addl
jbe
inc
xor
inc
mov
mov
pushl
push
das
mov
pop
ljmp
imul
outsb
sub
nop
test
rcrl
movsb
lock
cld
add
add
and
cld
ljmp
xor
cmp
pop
cmp
add
push
sti
dec
movsb
dec
inc
and
jns
pop
inc
test
adc
nop
insb
outsb
xchg
pop
sbb
mov
mov
movsb
mov
into
fsincos
mov
rcrb
cmp
dec
xlat
push
sub
cmp
popl
stos
lods
nop
inc
lds
add
push
inc
sbb
lcall
fcmovnu
cmc
or
popf
into
mov
sub
or
fistl
mov
adc
dec
or
aam
dec
dec
shlb
repz
cs
push
xchg
cltd
outsb
ja
add
dec
bound
mov
mov
inc
mov
loopne
fbld
stc
or
mov
hlt
shr
mov
dec
jmp
xlat
repnz
cld
outsl
mov
inc
jmp
add
pop
mov
cmp
les
fdivs
dec
fisttps
push
dec
cs
xor
and
add
push
jo
std
or
std
sbb
mov
pop
shll
cmpb
out
rorb
lods
pop
loopne
mov
cld
aad
addb
mov
or
jle
aam
add
or
add
xor
data16
adc
mov
adc
xchg
hlt
or
imul
adc
movsl
mov
fs
ljmp
cld
fistpll
loop
xor
xchg
jl
call
scas
js
cmp
bound
call
out
rorl
and
loop
sub
popa
nop
push
fwait
mov
mov
stos
sti
xchg
cmp
ror
push
es
pop
loop
test
jo
loopne
jne
fmuls
xor
xlat
xor
jg
sub
into
add
adc
xor
lcall
daa
loope
shlb
imul
shrb
repnz
cld
lcall
sub
pop
ret
ds
rcll
push
inc
mov
cli
cwtl
fs
in
incl
lock
sub
jp
push
inc
mov
sbb
mov
xor
mov
ss
mov
dec
cmp
arpl
mov
and
fldl
add
mov
arpl
clc
loopne
rolb
aaa
fsts
add
mov
iret
adc
ret
push
sbb
pop
adc
icebp
ret
hlt
ds
mov
xor
loopne
stos
fbstp
pop
int
xchg
cmp
jo
add
sbb
jo
jno
mov
jmp
mov
jecxz
pushf
sub
and
xor
push
mov
or
or
mov
inc
lret
subb
push
mov
rol
mov
mov
dec
lcall
cltd
scas
fnstenv
bound
insb
testl
dec
stos
pushw
mov
mov
dec
nop
lods
jne
adcl
icebp
and
mov
mov
pop
adc
popf
jle
cmpsl
inc
adc
decb
ja
adc
call
cmpl
jne
adc
xor
pop
mov
sub
mov
add
mov
xor
mov
idiv
push
cld
jg
mov
sti
add
inc
jmp
mov
adc
add
cli
inc
fmulp
sbb
jbe
lcall
mov
cmp
shrl
addb
mov
pop
sub
lret
rolb
movsb
push
xchg
inc
pop
push
xor
into
stos
scas
jg
mov
insb
test
mov
hlt
mov
int3
xorl
cli
rorl
mov
pop
xor
rolb
cs
inc
cmp
lods
or
cmp
stos
cs
and
ljmp
xchg
adc
movsl
sbb
fwait
jl
rorb
lea
inc
pop
hlt
cmp
sahf
pop
jo
push
aas
scas
rcrb
xor
add
add
aas
addb
mov
call
push
mov
out
imul
xchg
sahf
filds
pusha
pop
cmp
inc
insb
mov
jl
sbb
and
jl
and
popf
and
addb
test
es
push
push
lods
imul
xor
sub
jp
push
push
xchg
clc
jg
pop
sbb
stos
enter
jne
es
jne
icebp
push
inc
xorl
jmp
mov
sub
mov
xchg
scas
add
adc
aad
add
fs
jb
cli
lock
mov
clc
sub
jno
addr16
mov
std
xor
dec
ret
jbe
push
pusha
mov
mov
or
mov
jl
mov
mov
xchg
add
cmpb
pop
cmp
mov
inc
sub
insl
in
inc
ja
lea
loopne
sarb
je
xchg
dec
stos
decl
iret
out
daa
arpl
mov
add
fsubl
xor
pop
pop
dec
and
clc
push
cwtl
fcomip
outsl
ret
jl
icebp
fs
xchg
jge
js
insb
add
sahf
lock
and
and
mov
push
iret
adc
sbb
out
push
mov
stos
or
sub
out
pusha
xchg
jle
data16
jbe
ret
pop
jp
shrb
mov
adc
or
in
pop
icebp
mov
mov
and
pop
out
ret
mov
jne
or
in
rorb
mov
pop
fdivl
cli
mov
iret
add
cltd
inc
mov
pusha
aam
roll
cli
push
cld
jg
sbb
and
adc
xor
in
fcoms
mov
inc
push
xor
push
cli
fs
mov
inc
add
lret
mov
stos
adc
push
xchg
mov
lock
xchg
js
jo
call
and
cwtl
bound
std
lahf
lock
sbb
in
lock
scas
adc
jo
xor
pop
cmp
push
inc
adc
into
or
ret
adc
push
mov
flds
mov
pop
xchg
lods
or
add
or
rcr
out
enter
int3
loopne
xorl
test
das
cmp
pop
push
mov
fwait
hlt
lods
subb
loopne
sub
js
dec
dec
inc
or
mov
xor
xor
cwtl
jge
adc
in
loopne
push
mov
inc
pop
adc
les
inc
movsb
cs
mov
aad
aas
fisubs
push
inc
fimuls
pop
xor
movsl
out
add
inc
lock
aaa
add
rorb
mov
lahf
add
mov
or
add
decl
sbb
fnstenv
repnz
xor
addr16
push
cs
shl
lods
sbb
mov
pop
mov
clc
mov
cmc
out
add
in
and
lret
xchg
add
xor
les
scas
shll
push
jno
and
lods
xchg
mov
xor
test
movsl
inc
movsb
iret
orb
lea
call
fcmovu
push
add
push
mov
adc
pop
add
test
add
shl
lds
cmpsl
xor
and
xchg
enter
dec
mov
clc
add
add
jbe
cli
mov
mov
pop
rorb
push
repz
mov
mov
negb
in
lahf
dec
and
xor
pushf
addl
hlt
dec
add
jle
and
out
xchg
adc
lcall
push
int
xor
js
mov
push
or
add
fisttpl
push
xchg
decb
mov
add
or
dec
cwtl
sub
cmc
lcall
xchg
sub
pop
es
fisubrl
in
mov
mov
inc
ret
inc
mov
sbb
stos
test
nop
test
mov
pop
js
std
cmp
sbbb
insb
ret
in
hlt
lret
cmpsb
sahf
dec
mov
cwtl
add
mov
js
test
jle
subb
loope
jbe
and
xor
dec
push
jnp
mov
xor
test
xchg
insb
xlat
mov
out
fiadds
sbbb
inc
lods
pop
xchg
xor
pop
ja
stc
adc
dec
mov
mov
test
dec
inc
aam
mov
nop
adc
pop
in
dec
scas
push
inc
add
fisubs
nop
test
pop
and
stos
cmpsb
lds
mov
lock
sub
jmp
jge
dec
cli
add
and
add
and
pop
xor
in
js
pop
push
mov
out
xchg
xor
aam
cmp
ficoml
cmp
pop
mov
call
and
clc
sbb
push
add
jo
mov
and
mov
jb
jmp
fiaddl
mov
inc
out
mov
inc
scas
lods
aas
push
pop
testl
imul
enter
lock
sbb
aam
or
add
fists
inc
xchg
mov
or
fwait
pop
mov
mov
or
push
imul
sarb
jo
push
pop
adc
pop
jl
stc
jle
add
xchg
pushf
pop
mov
mov
das
shr
enter
mull
cld
pop
sbb
mov
fadds
mov
or
mov
cmp
pop
push
clc
fildll
sub
sahf
std
sbb
sete
xor
mov
sub
adc
aad
ljmp
hlt
inc
jmp
dec
pushf
fdivs
data16
jp
clc
jb
sbb
ror
adc
dec
stos
int
hlt
pusha
rcll
shrl
ljmp
lock
lods
mov
lahf
ljmp
jns
xchg
mov
pop
mov
shrb
add
dec
cwtl
jp
in
sub
add
push
mov
test
mov
mov
pop
xchg
jp
aas
rcrb
adc
sbb
mov
fidivrl
bound
inc
scas
and
and
popa
adc
mov
in
inc
insl
js
push
adc
inc
mov
push
mov
sub
dec
inc
xchg
jecxz
cwtl
mov
aad
add
push
outsb
xor
out
mov
les
mov
dec
cmc
mov
daa
push
mov
xchg
or
mov
mov
pop
lock
push
mov
mov
cld
mov
add
jecxz
icebp
outsb
js
mov
repz
cld
movsb
mov
mov
mov
xor
mov
dec
pop
out
adc
push
sbb
xchg
out
jl,pt
stos
xchg
mov
mov
push
jns
xchg
lea
inc
fdivrp
jge
dec
ret
dec
lahf
xor
inc
mov
xor
pop
scas
dec
lahf
mov
push
fidivl
jmp
or
fsubrs
push
xchg
pop
push
sub
xchg
dec
and
shll
icebp
pop
pop
ret
test
aam
and
or
pop
jo
sbb
imul
pop
psrad
jmp
pop
mov
mov
sub
scas
xchg
xchg
mov
cwtl
jmp
push
jb
or
adc
jg
add
movsb
sub
loop
sbb
push
repnz
lea
sbb
cmp
add
inc
jecxz
jmp
dec
ljmp
push
mov
roll
fnstenv
jae
popa
adc
out
push
lock
loop
mov
jl
bound
ss
add
aaa
and
and
xchg
ljmp
inc
dec
cmpsb
mov
sub
cmpsl
aas
xchg
rorl
scas
mov
cmpsb
aas
clc
in
mov
js
or
outsl
xor
fbstp
lret
incl
andb
pop
outsb
mov
push
push
push
add
sbbb
adc
push
xor
and
mov
popf
adc
mov
xchg
out
icebp
and
sub
data16
push
or
movsb
cmp
adc
push
nop
test
adc
cltd
xchg
xor
push
test
fmuls
dec
lea
mov
dec
xor
mov
jecxz
cld
ret
orl
daa
dec
push
jo
pusha
test
mov
sub
and
mov
das
add
and
fsts
out
bound
popf
rclb
dec
hlt
sahf
jbe
xchg
pop
adc
lods
push
mov
mov
lock
lcall
fldt
push
ret
or
xchg
inc
fwait
mov
jg
out
xor
xchg
cmp
mov
xor
jp
or
and
xor
sub
aas
ja
push
fnsave
fcomps
xor
pushf
mov
sbb
sbb
mov
cwtl
and
cmc
cli
jg
loopne
popa
inc
loop
jo
stc
add
lea
sahf
icebp
adc
aad
push
push
and
aas
jp
stos
push
mov
jae
push
cli
fs
jg
mov
ret
jecxz
iret
insb
dec
inc
pop
aad
loope
jne
mov
sahf
dec
ss
sub
es
fimuls
test
add
inc
or
cmpsl
or
fs
popa
sbb
loope
sti
xor
and
mov
xor
mov
jmp
sub
mov
push
pop
inc
mov
sbb
outsb
cld
stos
cmp
mov
push
pop
and
cmp
lcall
outsb
push
mov
mov
loopne
insb
cs
jle
daa
pusha
sbb
loop
out
xor
jg
mov
xor
mov
adc
xchg
sub
push
mov
add
sar
xchg
subl
rcrl
es
push
js
pop
ss
dec
cmp
mov
xchg
insb
scas
fcomp
aas
sub
xchg
mov
push
push
xor
gs
xbegin
pop
shlb
fadds
mov
and
stos
mov
test
fnstcw
into
fdivrs
push
aam
push
mov
sbb
push
xchg
ja
aaa
cmp
xor
and
cwtl
push
cmp
pop
xchg
adc
roll
cs
lahf
sub
add
loopne
dec
pop
xor
mov
enter
loopne
push
idiv
mov
ljmp
cmc
cltd
out
bound
imul
mov
or
nop
loope
xor
inc
ljmp
xor
jp
addb
adcb
xchg
pop
xchg
pop
stc
out
or
inc
or
xor
mov
mov
cli
lret
mov
push
ja
cmc
fwait
push
or
dec
int3
sbb
out
enter
push
jle,pt
jecxz
inc
mov
inc
jno
icebp
xchg
ss
fistps
aas
loope
sbb
dec
iret
or
mov
mov
test
inc
cs
mov
cmp
daa
push
push
int3
xchg
jae
push
push
fistpll
incb
out
or
das
mov
sahf
lock
sbb
int
leave
jo
dec
add
cmp
mov
and
mov
mov
ud2
mov
push
mov
xchg
mov
call
loopne
lahf
jle
aam
jbe
mov
mov
outsb
int3
arpl
jo
loope
xor
dec
sub
into
ficompl
jmp
cmc
outsb
xor
dec
aad
pop
lods
or
incl
rcrb
jmp
repnz
das
push
inc
sbb
add
push
or
dec
and
jg
mov
data16
push
cld
and
call
mov
adc
jg
sbb
movzwl
or
sbb
fisubrs
mov
mov
pop
sub
xchg
inc
or
loope
lret
pop
inc
stc
or
test
outsl
mov
shlb
pop
scas
pushf
cmpsb
add
addr16
pop
test
push
mov
iret
cmp
mov
push
add
or
inc
adc
sbbl
pushl
frstor
mov
add
and
loope
sub
or
xor
mov
cli
incl
jno
adcb
cmpxchg
into
loopne
imul
stos
or
decb
pop
or
jle
dec
insl
xor
cs
xchg
inc
adc
adc
call
stc
lcall
sti
mov
add
push
gs
dec
mov
in
sub
sub
jg
push
lods
pop
gs
jno
mov
and
xor
decl
lods
inc
inc
adc
les
das
test
ds
mov
mov
imul
clc
add
in
xchg
mov
mov
push
or
lods
or
pop
test
decl
outsb
cwtl
jp
mov
testl
push
pop
jo
je
push
adc
sarb
out
push
add
es
lahf
and
push
mov
stos
mov
xlat
jp
inc
movsb
ja
xlat
testl
in
mov
pop
pop
repz
pop
dec
mov
xlat
mov
ret
and
jecxz
roll
js
decl
repnz
push
mov
cld
fisubrs
push
js
out
or
mov
or
dec
dec
cmp
out
in
mov
aad
xor
lret
sahf
jp
fisttps
lods
pop
rcrb
lds
push
js
or
pop
jb
add
mov
cli
push
cld
mov
adc
shl
jns
ret
rcrl
xchg
sbb
dec
movsl
out
cwtl
out
and
and
jb
les
rcrb
inc
xchg
push
adc
xchg
cs
lret
imul
adc
mov
xchg
dec
add
into
mov
addr16
sbb
mov
out
jae
sarl
and
push
scas
dec
push
incb
rclb
fsubrs
fcmovnb
or
lea
sbb
xchg
stc
or
insb
pop
insb
push
xchg
mov
or
dec
add
lds
and
daa
enter
and
hlt
cs
or
add
and
jg
int3
movsb
adc
or
jbe
pop
hlt
or
dec
xor
ds
cmpsb
xchg
pusha
fwait
mov
pop
jecxz
fwait
cs
mov
xor
in
mov
aad
or
xor
icebp
outsb
jl
push
mov
scas
js
pop
movsb
dec
push
clc
push
or
mov
bndldx
inc
mov
dec
push
call
into
ret
dec
mov
insb
icebp
das
sarb
inc
int
cmpsb
xchg
pop
jmp
pop
add
jmp
test
frstor
dec
mov
aaa
mov
fidivs
mov
inc
lock
stos
idivl
cmpb
clc
pusha
push
test
push
sub
fiaddl
inc
icebp
add
pop
jp
rol
test
or
xlat
pop
mov
in
push
add
adc
fdivrl
sbb
mov
test
jmp
lret
sbb
cli
mov
icebp
loope
andb
push
jmp
mov
and
stos
inc
lcall
jae
sub
cmp
scas
call
andb
sub
aaa
or
clc
mov
popa
mov
je
add
mov
je
jbe
repz
xchg
mov
mov
dec
int3
jbe
or
or
adc
pop
insb
add
sbb
and
mov
loope
sub
test
aam
jecxz
jmp
mov
mov
pop
mov
add
add
xor
adc
sbb
mov
stc
xor
adc
xorl
adc
cli
mov
stos
pop
enter
cli
cli
sub
sbb
or
xor
out
fisubrl
xor
mov
mov
push
xchg
hlt
rcrb
daa
test
aas
clc
add
loop
mov
movsb
jg
xchg
adc
or
testl
jbe
jno
aas
sarb
popa
add
imul
rclb
inc
cmp
les
dec
mov
push
loopne
mov
inc
adc
mov
push
adc
xor
inc
lds
inc
lock
adc
adc
xchg
loopne
add
mov
jg
and
mov
jb
adc
add
cld
ljmp
lcall
arpl
pushf
loopne
cld
aaa
push
ss
cmpsl
shrl
jmp
add
nop
sahf
test
sbb
cli
jmp
jbe
lock
xor
or
fsubrs
clc
ljmp
in
movsb
add
ss
add
fs
xchg
xchg
lret
outsl
inc
add
sub
fs
repnz
test
xor
pop
add
dec
add
fbstp
or
add
jle
movsb
add
lahf
pushl
xchg
xor
xorb
push
sti
hlt
jl
mov
test
into
loope
loope
pushl
mov
gs
enter
and
pop
sub
cli
mov
dec
ret
movsb
ret
and
aaa
add
loopne
mov
dec
ljmp
mov
or
or
or
and
pop
in
adc
sbb
jle
push
lds
mov
ljmp
push
clc
sahf
movsb
out
mov
sbb
out
push
pop
and
jp
pop
test
fisttps
das
jo
add
jmp
adc
mov
cs
cld
cwtl
stc
scas
sub
das
mov
gs
lahf
dec
add
hlt
pop
test
fs
dec
cmp
repz
add
stc
rorl
add
dec
cli
out
faddl
add
jne
push
or
sub
dec
iret
mov
fwait
pop
mov
and
lret
push
dec
pop
jbe
xchg
inc
outsb
xchg
mov
aaa
jecxz
xor
faddl
add
xlat
add
jne
mov
int
repnz
test
cmp
sbb
cmpsb
stc
int3
sbb
mov
xchg
dec
xchg
lock
out
cmp
gs
pop
add
or
decl
pop
push
mov
iret
pusha
pusha
xchg
lods
pop
dec
mov
pop
xchg
aad
pop
push
xchg
pop
xor
pop
aam
mov
cmp
mov
push
pop
mov
and
js
pop
dec
push
xor
pop
aaa
add
xchg
sbb
cmpsb
rcrb
mov
lret
movsl
shlb
icebp
push
mov
mov
js
sbb
xchg
out
in
and
jbe
inc
loopnew
jmp
stc
fistpll
stos
dec
dec
andb
dec
jle
ds
movsb
arpl
bound
fisttps
add
lret
fwait
add
and
xor
add
je
or
cli
int3
out
popa
push
and
clc
inc
ffreep
shll
inc
or
dec
lret
ret
add
aad
cmp
dec
jge
xchg
inc
jle
cld
xchg
sub
jp
test
flds
and
push
xchg
inc
iret
int3
lds
xchg
pusha
adc
loope
xchg
mov
jmp
xorb
dec
or
and
rorl
push
shlb
add
hlt
mov
jne
icebp
nop
xchg
cmp
out
inc
pmullw
adc
dec
outsl
cmp
mov
es
jo
or
adc
pop
push
add
xchg
js
or
fdivl
das
inc
aas
xabort
into
xchg
cli
and
xor
cmpsl
mov
mov
or
stc
pop
icebp
pop
inc
leave
or
mov
add
push
mov
xorl
mov
sub
aas
ss
shl
push
lret
jecxz
leave
mov
in
jno
inc
add
rclb
xor
mov
bound
out
and
lcall
leave
pop
mov
mov
xchg
ret
cmpb
dec
push
divb
inc
and
pushl
rcll
scas
xchg
lret
sbb
pushf
addl
add
bound
decl
js
outsb
dec
add
enter
cmpsb
push
loope
insb
sarb
outsb
mov
sbb
outsb
xchg
pop
loop
sti
clc
adc
sbb
jo
sbb
lock
inc
pop
and
xchg
cmp
pop
std
aaa
sbb
sub
push
xor
cld
mov
push
and
pop
into
or
sub
adc
notl
pop
scas
test
adc
cmp
and
loope
sbb
icebp
aad
sub
add
faddp
mov
outsb
loopne
popf
cli
jp
mov
xchg
inc
fcmovb
negb
and
pop
dec
mov
shlb
scas
std
ja
push
ss
pop
xchg
cmc
add
sti
push
decl
pop
xchg
data16
clc
adc
push
jle
icebp
or
js
enter
sub
flds
or
cs
push
ret
pop
test
mov
add
repnz
stos
xchg
sbb
mov
subb
xor
push
lods
and
mov
xchg
jle
add
pop
lock
aam
or
xchg
mov
mov
jp
clc
and
into
or
push
mov
filds
loopne
cmc
ffree
xchg
repz
and
ret
jo
test
pop
mov
pop
xchg
push
aam
lcall
xchg
test
pushf
mov
sub
cmpsb
cmovle
scas
ljmp
sub
add
das
push
jo
cmp
dec
faddl
xor
push
aam
cmp
sbb
add
xchg
sbb
push
bound
adc
push
es
int3
addl
enter
enter
adc
push
push
mov
xlat
lea
jb
fwait
mov
mov
jne
mov
clc
out
mov
test
mov
frstor
mov
pop
jo
push
xor
jae
cld
scas
fcmovnbe
into
mov
xor
adc
xorb
test
adc
or
pop
fisubrs
in
daa
xorb
dec
std
push
jne
lods
addb
adc
fcmovb
aaa
xor
sbb
dec
pushf
push
movsb
rorl
cwtl
inc
out
lock
cltd
js
push
and
or
incb
movl
hlt
mov
sbb
popf
mov
mov
or
mov
inc
cli
xchg
shrl
js
and
sub
mov
stos
cld
dec
fs
arpl
jmp
xchg
cwtl
mov
dec
push
mov
push
or
bnd
inc
jo
mov
pop
and
sub
clc
and
xchg
cmp
aaa
ficomps
xor
add
mov
and
mov
gs
inc
add
and
push
sahf
lds
inc
test
pop
outsb
pop
push
jl
subl
jno
pushf
adc
or
mov
xor
aas
inc
cmpsl
stos
sarb
inc
dec
out
mov
and
addr16
scas
inc
call
sub
xor
push
xchg
dec
movsb
mov
add
mov
or
sbb
xor
mov
orps
shl
sbb
ljmp
into
cmp
dec
movsl
stos
fisubl
inc
push
loop
mov
xchg
and
or
lock
lock
mov
loopne
ja
lahf
repnz
xor
sbb
xchg
sub
push
fstpt
push
sahf
loope
in
icebp
cmpsl
aas
loop
movsb
pop
sbb
jns
orl
data16
daa
jmp
mov
pop
add
aas
mov
in
or
out
jmp
clc
and
jmp
je
mov
sub
test
xor
push
test
mov
add
mov
add
js
fwait
push
dec
or
out
and
or
or
out
out
std
mov
xor
cmp
aas
das
jmp
push
mov
push
aam
xchg
xchg
sbb
mov
popa
mov
cli
call
push
decb
test
mov
mov
fcoms
mov
incb
add
push
je
pop
and
roll
cmp
ss
pop
mov
inc
push
cs
adc
xchg
cmp
inc
lahf
mov
adc
jno
and
pop
insl
lea
adc
inc
loop
pusha
roll
dec
mov
push
xor
mov
pop
jb
or
add
push
cmpsb
mov
inc
cmp
push
jge
cmp
add
inc
std
outsl
mov
mov
inc
jo
adc
aas
cwtl
out
ljmp
xor
test
inc
adcb
push
cwtl
sub
das
rclb
imul
or
adc
loopne
jbe
add
cld
loope
cmp
rorb
add
or
and
call
sub
insl
je
xor
js
adc
es
mov
add
cwtl
pusha
push
inc
ucomiss
pop
pop
xor
fcoms
js
push
dec
ret
jl
pop
aas
popa
rolb
mov
xor
insl
jg
subl
call
mov
outsb
les
lock
xchg
das
jecxz
xchg
jecxz,pn
lcall
shll
fdivs
mov
jl
push
leave
jbe
shl
lock
out
or
loopne
mov
xor
add
popf
faddl
and
xor
mov
mov
push
cld
jecxz
std
jb
call
imul
jecxz
call
or
add
pop
sub
jmp
mov
std
pop
shrb
or
ja
mov
dec
jle
lock
movsl
imul
add
sub
rdmsr
inc
and
scas
and
mov
out
ret
cmp
sbb
and
xchg
imul
test
lock
mov
mov
loop
andb
adc
add
mov
push
adc
shrb
icebp
in
hlt
adc
jb
add
push
sbb
pop
call
xchg
aad
ljmp
ss
mov
pop
cld
push
insl
mov
adc
daa
xchg
repz
aam
or
test
fwait
shrb
mov
pop
lret
push
jbe
cmpl
cmc
mov
cmc
and
dec
or
rorl
mov
mov
insl
mov
mov
mov
loopne
inc
mov
pop
add
ljmp
mov
sub
and
pop
adc
inc
xchg
mov
sbb
arpl
lahf
je
add
push
push
cld
dec
loop
lahf
and
nop
scas
fisttpll
mov
js
mov
punpckhbw
pop
outsb
call
lds
pop
js
pusha
add
mov
push
popf
cmp
fwait
mov
jae
testl
call
ljmp
mov
push
pop
cld
add
out
mov
add
pop
nop
jg
adc
cwtl
adc
or
mov
mov
or
push
mov
in
and
pop
cmp
aas
jns
outsl
les
add
mov
in
mov
xor
mov
ret
aas
int3
fistps
mov
mov
cmp
divl
cmp
icebp
subb
sub
and
mov
xor
sti
xor
xchg
push
jge
scas
rcrb
jle
test
inc
adc
dec
add
mov
lock
int
sbb
mov
pop
jg
test
push
adc
sahf
lcall
adc
inc
ljmp
push
and
call
fcomip
fbstp
cmp
arpl
inc
sbb
or
mov
mov
scas
rorb
sub
xor
inc
cmp
push
aam
jg
icebp
inc
or
adc
xchg
cmp
push
or
push
and
mov
pushf
and
sbb
lcall
int
cmp
xchg
inc
scas
daa
inc
push
dec
test
call
sub
adc
pop
sub
mov
xor
pop
pusha
or
or
xor
adc
mov
popa
fs
out
sahf
xor
data16
addb
xor
dec
shr
pop
sub
out
mov
pop
pushf
imul
stos
mov
lods
add
rorb
push
loope
mov
dec
jl
mov
adc
jae
and
bts
mov
push
or
sub
xlat
jbe
mov
xchg
pop
add
fcoml
idivb
hlt
out
sbb
adc
inc
inc
and
int3
addr16
fstpl
loope
add
dec
jp
pop
mov
dec
sti
mov
stos
lahf
cwtl
mov
cmp
rorl
enter
jmp
dec
xchg
cmp
adc
sbb
and
fwait
push
add
jle
mov
or
mov
fwait
data16
popf
movsb
xchg
subb
cld
push
stc
incl
mov
cld
outsl
cwtl
mov
cmp
sub
rclw
shl
incl
mov
mov
orb
pop
movsb
loope
aam
dec
lock
xchg
inc
cld
mov
clc
pop
cld
nop
xchg
xlat
repz
outsb
je
mov
mov
inc
sbbb
roll
outsl
test
decl
push
jbe
mov
cmc
pop
sbb
adc
cmp
and
fdivs
adc
mov
sbb
push
inc
inc
sub
mov
mov
sbb
dec
inc
flds
jno
push
or
inc
mov
in
push
or
mov
hlt
cwtl
dec
mov
orl
add
and
mov
push
call
or
pop
mov
subb
xchg
push
mov
fistpll
jp
inc
adc
add
add
test
iret
sbb
and
in
jb
mov
add
sub
and
and
mov
jne
mov
mov
add
cltd
rol
xchg
adc
test
addr16
push
in
adc
add
xchg
in
outsl
add
inc
stos
jecxz
ja
neg
into
xor
addb
int3
arpl
pop
bound
pop
dec
pop
mov
push
aas
mov
std
jo
inc
scas
sbb
in
roll
dec
push
add
pop
push
push
test
fcompl
xor
push
ja
fstp
movsl
cli
sub
sahf
and
orb
sub
data16
adc
push
mov
and
pushl
pop
or
jmp
nop
add
testb
movsb
decb
into
or
push
in
and
shlb
lods
or
xlat
jbe
jl
mov
push
loopne
cmp
decl
pop
jg
pop
push
out
clc
test
shr
push
inc
sbb
nop
push
inc
call
fbstp
cmp
pop
mov
and
insb
test
arpl
cltd
data16
sub
cltd
and
loop
cmpsb
je
sarb
adc
bound
jecxz
dec
enter
cmp
mov
mov
add
pop
pop
in
dec
push
negb
adc
gs
sub
pop
jge
movsb
jb
sbb
loopne
sbb
ss
adc
out
sub
sub
dec
je
pop
fs
sub
add
cld
xorb
mov
jg,pn
pop
test
xor
inc
or
ret
cs
adc
inc
push
xor
sbb
cli
add
xchg
mov
mov
test
push
sub
sub
pop
fildl
rcrl
in
mov
mov
cmp
pop
and
aam
cwtl
jbe
xor
mov
repnz
cmp
dec
fsubrs
adc
inc
adc
insb
jns
xor
cltd
and
in
pop
cmc
add
fdiv
push
xor
shll
pop
cmc
mov
jbe
sub
das
in
incl
cwtl
jae
jle
stc
clc
xchg
mov
xor
out
lds
loopne
icebp
insl
sbb
xor
and
mov
pop
adc
add
pop
in
add
les
add
out
ret
les
repz
cli
mov
lock
loope
into
sbb
imul
clc
mov
sbb
out
arpl
xor
or
inc
dec
sbb
mov
lahf
lods
into
fsubrl
aas
sbb
rolb
or
mov
inc
dec
sbb
rcrb
xchg
mov
jb
cmp
xchg
xchg
sbb
push
pop
movb
aad
push
or
sbb
inc
or
sbb
jns
fld
aaa
cld
mov
mov
shrb
out
rcrl
add
pusha
fbstp
mov
popa
push
ljmp
sbb
and
mov
pop
rol
rclb
jo
pop
xchg
shrb
lock
test
jne
fidivs
xchg
add
rolb
cmp
lcall
push
pop
dec
enter
xchg
cmpb
sbb
je
in
rclb
popa
xchg
fldt
popf
xchg
sbb
xchg
cmpsl
je
push
or
ret
ss
jmp
mov
lret
or
ud0
pop
fisttps
out
push
jecxz
test
aaa
adc
push
loop
cmpb
sbb
mov
and
add
inc
ljmp
jecxz
ret
imul
rcrl
clc
in
inc
test
dec
pushf
inc
fwait
jge
mov
mov
mov
hlt
xor
sbb
sbb
dec
clc
mov
add
repz
xchg
cmpl
jo
push
mov
add
incl
dec
xchg
daa
js
lods
mov
push
or
xchg
mov
in
sbbb
and
lock
mov
or
or
in
out
sub
loopne
lock
popa
jb
sub
je
push
aas
inc
data16
and
jg
cmp
push
add
gs
subb
inc
xor
lea
add
add
in
fwait
push
adc
ja
mov
sbb
xor
inc
call
mov
icebp
aaa
add
bound
outsb
lods
cli
call
jmp
xchg
outsb
sbb
xor
inc
test
add
xchg
jae
mov
sub
inc
xchg
cs
loop
or
pop
cmc
mov
xor
or
jmp
sarb
repz
fsubrp
add
call
xchg
add
rorb
dec
jo
out
outsl
stos
mov
push
cmpsb
movsb
dec
sbb
mov
pushf
add
push
cmp
jne
int3
fs
clc
flds
stos
sub
imulb
sbb
jbe
cmp
cld
inc
fildl
adc
jno
lods
push
dec
sahf
jne
out
sub
xchg
orl
pop
pop
lds
ror
outsl
daa
sbb
xorb
inc
cmc
adc
adc
ret
pop
add
out
loope
aas
xor
adc
loope
pop
or
rclb
add
daa
cmpb
sub
pushf
pop
fcom
sbb
stos
mov
mov
cli
xchg
rcl
and
insb
and
orps
bound
adc
mov
loope
data16
adc
xchg
sbb
lret
add
sbb
cmc
sarl
insb
and
mov
xchg
loop
sub
and
adc
lods
fldenv
pop
insb
sti
and
fiaddl
xchg
shll
jo
pop
push
sub
xor
xor
xchg
push
sub
and
push
inc
fisttps
xor
or
push
xor
divl
pop
scas
or
shll
pop
repnz
inc
jo
pusha
push
mov
es
push
filds
in
or
mov
and
mov
mov
addb
stc
in
sbb
dec
or
inc
ficomps
dec
xchg
inc
and
cltd
pop
pop
pop
mov
fsubr
or
or
lods
in
mov
and
jl
pop
out
inc
mov
lret
jno
cmpsb
mov
sbb
clc
pop
lock
pop
mov
mov
movsb
inc
add
fistps
jmp
lock
aaa
cli
add
je
es
xor
mov
pop
cmpsb
dec
in
cmpsl
adc
sbb
stos
inc
mov
movsl
jecxz
scas
int
in
loopne
stos
dec
dec
or
jmp
add
mov
jne
dec
xor
stc
cmpb
hlt
into
in
xorb
dec
fstpt
lods
ja
pop
shl
jnp
mov
addl
pop
dec
fsubrl
or
cmp
stos
xlat
xor
popf
push
and
mov
dec
sub
sbb
int3
addr16
outsl
cmp
out
les
adc
adc
and
rcll
aas
aam
mov
mov
clc
mov
mov
cli
js
call
lahf
orl
ret
sbbl
hlt
pop
in
adc
or
pop
mov
dec
add
aaa
std
cmpsb
rcrb
lods
jo
imul
mov
hlt
cs
push
hlt
clc
fsubrs
add
push
int3
mov
clc
movsb
lds
and
repnz
into
fmull
repnz
std
call
jle
jle
mov
std
decb
inc
or
cmpsl
hlt
lods
adc
xchg
fisubrs
mov
or
loopne
ss
aad
mov
jle
adcl
fdiv
pop
add
jmp
and
add
mov
push
psraw
fsub
add
push
int
cld
add
jmp
inc
push
fmull
jmp
jmp
push
repz
cmp
test
sbb
xor
out
dec
adc
or
iret
js
add
push
sbb
push
test
nop
sbb
jmp
add
push
inc
inc
jo
jge
adc
fdivp
aad
pop
mov
lcall
jmp
shlb
ja
sbb
jle
pop
cltd
addb
cmc
rol
in
sbb
xor
cmp
sub
and
cmpb
movb
lods
cmc
fcomip
dec
dec
or
ret
rcll
mov
lods
stos
push
jne
push
mov
clc
cmp
adcb
cmp
mov
lret
repz
jne
pop
addr16
stos
jle
push
pop
hlt
or
lcall
outsb
fs
outsl
mov
xchg
rclb
xchg
push
adc
jns
and
andb
dec
jmp
ret
mov
or
push
in
aas
jp
jp
outsl
sbb
or
ds
incb
sbb
inc
add
mov
mov
js
lods
mov
mov
repz
cmpsl
aas
lock
jp
xchg
cli
jl
rcrb
out
or
in
jbe
scas
sahf
sub
mov
mov
cmpsb
in
pop
aas
xlat
pop
sahf
add
popa
and
pop
in
and
loop
cmc
pop
andb
lds
out
pop
enter
sub
insl
int
das
lcall
pop
repnz
outsb
dec
inc
mov
jp
or
jge
and
test
pop
pop
xchg
loopne
dec
mov
add
pop
push
jno
insb
push
adc
and
push
adc
mov
aaa
outsl
in
xchg
add
cmp
push
scas
and
jle
rcrb
daa
getsec
ds
sbbb
pop
repnz
outsl
add
jl
in
clc
mov
call
negl
ficompl
pop
dec
cmp
loopne
mov
mov
nop
sbb
in
adc
les
sub
xchg
lock
mov
adc
xor
loop
pushf
inc
sarl
add
add
add
aaa
jge
cld
jp
mov
jbe
fldenv
sbb
pop
insl
aam
cmp
sar
iret
aas
mov
cmc
push
sbb
fisubs
les
les
dec
xor
nop
mov
es
sbb
imul
inc
adc
sti
lock
icebp
je
cli
mov
mov
fldenv
or
je
jno
incl
mov
inc
popa
test
xchg
shll
shrb
test
mov
and
out
mov
mov
arpl
movl
mov
dec
jg
das
inc
jg
add
xchg
adc
xor
add
mov
gs
mov
and
stos
dec
cli
inc
and
push
pop
rclb
test
sahf
mov
test
push
mov
into
gs
icebp
xchg
stc
sub
xchg
pop
sub
mov
aaa
std
sbb
mov
notl
and
sti
and
xchg
shr
mov
dec
or
pop
call
push
xor
and
or
cli
and
push
ss
mov
lahf
stos
jg
mov
movsl
mov
fxch
dec
jne
ret
push
mov
fsubrs
jmp
fdivl
adc
adc
inc
aaa
dec
xor
dec
push
jmp
test
incl
xor
jb
push
mov
into
jmp
stos
aas
inc
fwait
ret
rcrl
mov
out
mov
pop
jo
icebp
mov
mov
mov
test
sub
dec
fcom
clc
mov
sbb
adc
mov
push
clc
lret
cli
pop
inc
cld
fs
imul
int
imul
lock
mov
adc
push
ja
mov
or
imul
in
mov
jmp
push
mov
jno
jp
call
xor
or
adc
cmp
or
jg
loopne
inc
bound
bnd
mov
sbb
inc
shll
incb
xor
ret
repnz
sahf
xor
add
or
mov
xor
jbe
xor
xchg
add
pop
lock
jl
mov
add
mov
in
or
mov
mov
xor
cs
fbstp
jecxz
xor
pop
push
inc
icebp
cmp
ja
outsl
clc
mov
and
add
pop
mov
popf
test
cld
or
ds
popf
mov
fisubl
or
in
sbb
add
in
in
leave
test
cli
sbb
call
push
insb
stc
inc
pusha
shll
aaa
xor
dec
mov
movsl
mov
sbb
inc
add
fstl
sub
push
ret
mov
nop
jecxz
add
push
mov
popf
cwtl
shll
sbb
or
xor
pushl
sbb
or
jae
leave
out
and
movsb
shll
push
xchg
mov
push
aam
mov
outsb
and
jg
pop
aaa
sub
mov
into
xchg
ss
adc
mov
out
cmp
mov
fidivs
mov
fistpl
std
mov
mov
pop
jbe
dec
inc
sub
mov
jae
sub
cwtl
cmc
aaa
cld
ja
hlt
outsl
lcall
rcrl
dec
mov
or
mov
mov
mov
jmp
mov
sub
cmp
mov
aas
xor
push
popa
dec
add
push
imul
aaa
pop
jae
mov
mov
stos
fidivs
sar
xor
dec
sbb
dec
add
xchg
insl
test
push
push
jge
adc
dec
push
mov
mov
fisubs
push
mov
loop
jmp
jl
fcompl
cli
dec
pop
dec
inc
mov
xor
cwtl
out
sbb
cltd
mov
dec
rclb
pop
sti
cmc
enter
pop
mov
jle
sub
mov
pop
push
decl
das
push
popf
push
mov
les
or
and
push
dec
xchg
push
outsb
aam
mov
fldt
aas
push
stos
add
mov
out
lea
add
or
mov
icebp
cmp
dec
loope
mov
adc
add
dec
pop
stc
insb
xor
adc
inc
jg
pop
int3
fbld
sub
call
sbb
and
push
inc
dec
xlat
mov
and
push
cs
out
pop
xchg
adc
test
add
and
adc
pop
push
xor
loopne
shrl
mov
add
out
stc
popf
addr16
es
les
adc
sbb
or
inc
rclb
or
data16
negb
inc
mov
int3
jo
jmp
sbb
fwait
and
adc
out
mov
or
addr16
pop
test
push
inc
sub
cld
adc
adc
or
push
pop
pop
sub
sub
jb
jb
loope
jg
dec
stos
jae
fwait
add
xchg
sbbb
int
mov
mov
sarb
jb
pop
int
jl
ret
dec
nop
cmp
jno
dec
lods
jo
lock
js
test
add
xor
mov
scas
in
inc
out
jg
dec
cmp
lret
inc
dec
pop
and
jl
adc
in
fmull
dec
dec
js
sbb
pop
lock
xchg
loope
call
add
call
xchg
mov
push
or
push
mov
test
inc
xchg
jnp
mov
cmpsb
sahf
dec
mov
push
mov
lret
out
pop
movl
gs
dec
fcmovb
lret
les
xorb
addl
sbb
mov
push
cltd
lds
jbe
insb
mov
or
dec
cmp
outsl
js
add
mov
xor
and
pop
scas
ds
and
stos
dec
mov
xchg
std
sbbb
loopne
mov
int3
mov
adc
dec
je
inc
or
mov
and
jmp
mov
pusha
cmpb
cmp
add
aam
cld
cmpsb
aad
cs
jp
and
inc
push
xor
xchg
stc
push
sti
pop
mov
pop
cwtl
mov
jbe
add
test
cmp
ret
jg
pushf
imul
fstp
mov
mov
push
insl
clc
dec
xchg
or
sbb
push
pusha
lds
in
lods
pop
xor
repz
mov
stc
jb
lds
test
cld
push
fmulp
jmp
add
add
mov
pop
push
jno
ja
add
mov
inc
shrl
test
mov
push
inc
out
mov
pop
lret
xchg
ja
pop
and
push
xchg
sbb
cmc
push
dec
out
xchg
push
pop
adc
fsubl
add
xchg
mov
mov
or
scas
xchg
or
add
cmp
and
pcmpgtd
dec
sbb
jg
cmp
inc
push
enter
fsub
fsubrs
mov
pop
lea
and
jb
add
iret
dec
push
and
daa
cwtl
xchg
inc
mov
add
insb
icebp
add
leave
scas
sbb
in
sbb
pop
icebp
aaa
inc
mov
lods
xchg
pop
push
dec
insb
leave
fs
sub
ss
in
xchg
lcall
test
mov
cmpb
push
add
and
cmp
jne
scas
mov
lahf
cmp
add
add
stc
push
or
sub
xor
dec
mov
adcb
ss
ltr
popf
add
inc
int
ss
add
mov
mov
add
sub
out
sbb
xor
xchg
add
xorl
loop
jg
movsb
sbb
or
dec
mov
and
test
mov
hlt
loopne
mov
xchg
push
push
dec
cmp
inc
pusha
jp
les
pop
out
insl
xlat
jnp
pop
sbb
cld
outsb
test
cmpsl
das
pop
aam
rcrb
add
hlt
in
and
std
push
test
daa
cli
mov
mov
bsf
out
xchg
inc
push
out
js
shl
decl
and
jb
cli
and
inc
or
or
and
aad
shlb
data16
sub
add
jp
xchg
mov
inc
imul
stos
sahf
dec
pushf
jle
xlat
dec
loopne
mov
movsb
dec
jne
xchg
jb
mov
push
mov
daa
stc
stc
xchg
pop
sub
test
jb
out
test
mov
push
pop
or
adc
rcl
mov
pusha
mov
mov
pop
mov
int3
cld
fisttpl
mov
pop
mov
cmp
and
dec
add
push
ret
cmpsl
sub
andb
and
mov
mov
push
in
push
shlb
rol
jecxz
dec
fucomi
movsb
lcall
jmp
mov
jg
scas
rcr
mov
mov
fsts
shll
sbb
and
or
xor
push
mov
das
aam
rcr
adc
mov
cli
push
inc
shr
xchg
sub
sbb
push
ficomps
orb
inc
or
loopnew
sarb
repnz
cmp
jmp
cmp
lret
fisubl
jl
adc
arpl
fs
jecxz
xor
mov
iret
jl
rorb
orl
decb
hlt
iret
pop
jb
xchg
and
aam
repnz
ljmp
and
ret
pop
insb
jmp
lods
lahf
cli
cmpsl
das
jo
adc
push
xchg
popa
add
nop
mov
pop
loopne,pn
and
out
or
add
lock
ret
fs
mov
or
mov
dec
movsl
mov
lods
cmpsb
jne
lret
inc
movsb
or
mov
mov
stos
mov
add
jmp
cs
inc
loop
mov
fs
std
sti
push
lock
cmp
or
movsl
push
and
jecxz
fsubr
push
hlt
cmp
mov
pop
cmp
mov
outsb
and
pop
sub
or
rcl
addr16
mov
inc
rolb
scas
adc
mov
pop
pmuludq
mov
movsb
les
pusha
into
xor
xor
call
dec
shrb
lea
rorl
les
add
ja
sub
mov
inc
clc
das
outsb
dec
outsl
mov
lret
adc
sub
mov
push
pusha
lods
sbb
sbb
sbb
in
add
clc
jmp
mov
mov
jle
jo
pop
add
sub
push
jle
cmp
subb
or
jae
ljmp
out
sub
icebp
sub
or
sub
xor
call
into
cmp
and
ds
ret
sbb
push
mov
or
sbb
sub
mov
push
add
jb
sub
push
dec
insl
outsb
inc
aaa
push
cmp
sub
mov
iret
and
dec
push
ret
ss
ds
fsubrs
pusha
ret
scas
mov
or
push
lret
out
xchg
jle
sahf
fadd
add
xchg
mov
mov
lock
sub
inc
cmp
loopne
push
nop
jmp
mov
push
inc
js
pop
cmp
sbb
cld
jp
decl
inc
pusha
pop
movsl
lcall
inc
mov
adc
std
adc
and
negl
ret
mov
ds
ja
std
rcll
and
adc
ljmp
jo
lahf
les
ret
je
movb
jge
jmp
gs
mov
mov
leave
xchg
dec
mov
clc
fwait
cmc
push
cmp
xor
lcall
jg
and
adc
add
int3
add
scas
sub
pop
pop
adc
mov
imul
bound
call
fwait
mov
jle
pop
loopne
sub
mov
test
lods
js
aad
test
jge
lret
pop
xchg
lock
cmp
js
insl
sarb
pop
imulb
int3
cwtl
mov
inc
rcll
fisubl
push
jle
cs
test
and
inc
cmp
mov
cmc
pop
inc
scas
mov
jne
sarb
xchg
je
outsl
cli
pusha
inc
or
mov
ret
push
idiv
jnp
jmp
and
jecxz
mov
je
adc
push
test
and
mov
mov
or
cwtl
fldenv
jo
das
mov
or
push
sbb
mov
jecxz
incl
inc
pop
jle
xor
jbe
or
adc
decl
and
jle
aas
cmp
fildll
inc
fidivrs
mov
xor
lods
ljmp
jmp
lock
xchg
dec
fs
clc
rcrl
add
xor
xchg
adc
sub
movsb
out
mov
dec
lods
mov
stos
inc
push
add
dec
cmc
aad
cli
inc
daa
outsb
test
lret
xor
add
cld
movsb
mov
mov
inc
xchg
dec
pop
adc
jmp
mov
aaa
jge
lods
mov
xchg
pushf
stc
push
fwait
xchg
inc
jo
fistps
fsubrl
or
popf
aam
mov
jne
and
aaa
mov
jmp
xor
add
xchg
cmpsb
fcomps
aam
mov
mov
les
lcall
xchg
ret
add
cli
pop
add
xor
mov
cwtl
dec
shrb
add
dec
call
outsl
dec
xor
xor
jno
inc
fdivr
pop
imul
xor
push
std
add
or
xchg
add
loope
or
jg
fistpll
push
mov
roll
fisubrs
pusha
fdivrl
adc
sahf
xchg
add
das
mov
and
jno
inc
int3
sbb
mov
or
xchg
bnd
adc
pop
jae
clc
dec
jl
lods
push
lcall
mov
clc
std
push
push
int
add
adc
mov
mov
inc
xlat
adcb
call
adc
push
aaa
push
adc
call
or
push
and
jecxz
leave
mov
and
cli
outsl
and
jb
stos
imul
pop
test
jns
inc
test
out
jo
or
leave
inc
sbb
mov
jbe
clc
mov
repnz
push
sbb
repnz
add
xchg
add
pop
and
mov
push
test
cli
loop
add
loop
xchg
stc
incb
or
filds
sub
lods
cmpsb
mov
mov
loopne
xchg
inc
xorb
ljmp
pop
inc
mov
pop
xchg
jnp
or
sahf
push
jl
loopne
add
push
test
js
add
mov
loop
icebp
or
and
mov
mov
hlt
jno
lock
or
loope
daa
xor
or
je
aad
addr16
jae
xchg
jo
sahf
dec
enter
mov
ja
push
ds
out
sub
dec
gs
ret
mov
cwtl
daa
mov
pop
mov
jg
mov
jbe
pop
sbb
xchg
sbb
push
enter
insb
jp
fcmovbe
push
andl
mov
in
pop
add
add
dec
pop
xchg
sub
xor
cltd
or
divps
pushf
out
ja,pt
clc
pushl
xor
sar
cld
xchg
rorl
mov
std
fimull
stos
push
add
xor
movsb
scas
mov
adc
adc
sbb
ret
mov
decl
xor
mov
insb
sbbl
jnp
fldt
std
dec
xor
dec
nop
add
aad
divb
stos
adc
pop
cmp
repnz
inc
jle
mov
cld
sbb
enter
and
jg
adc
push
insb
dec
dec
adc
or
sbb
dec
js
stos
std
sbb
adc
rorb
adc
jbe
aaa
inc
add
lods
add
std
mov
inc
ss
sahf
ljmp
pop
dec
mov
inc
out
xor
insl
stos
xor
and
dec
fstl
pushf
repnz
scas
push
lret
pop
cmovno
mov
test
rcr
xchg
clc
scas
mov
jbe
push
add
popf
lret
xor
rcr
mov
push
shll
mov
cmp
sti
sub
outsl
dec
fs
daa
adc
cmp
pushf
pop
loopne
rcrb
mov
movsb
mov
push
je
rolb
lcall
outsb
pop
icebp
inc
jp
mov
fs
jne
lods
sub
add
push
xchg
loope
cmp
jo
call
imul
sub
and
sub
roll
int
jg
mov
add
mov
add
jle
out
ljmp
sub
push
imul
pushl
faddp
scas
dec
push
xchg
rol
aad
push
push
sbb
adc
ljmp
pushf
xchg
xchg
out
cmc
outsl
fiaddl
in
inc
in
mov
jmp
add
pop
mov
jno
adc
mov
outsb
xor
aas
mov
adc
sbb
ja
xor
push
sahf
dec
xchg
jle
cmp
and
icebp
lock
mov
hlt
jb
adc
cli
lods
lods
sub
in
add
fsubrs
pop
add
shll
insl
fmuls
add
jo
add
cmp
adc
nop
loop
adc
dec
or
dec
loope
or
adc
add
mov
jmp
cmp
push
mov
inc
pop
loope
jae
xor
jg
fcom
inc
ljmp
int
push
popf
loopne
inc
out
fiadds
add
mov
jmp
ss
scas
mov
pushf
xchg
dec
xor
jmp
scas
sahf
sbb
mov
jno
xchg
ret
and
sub
cmpsl
aad
pusha
push
push
sub
imul
fimuls
std
mov
loopne
scas
cmpsb
popf
sbb
jne
or
iret
jmp
push
test
adc
or
cwtl
cmp
pop
pop
and
pop
test
lahf
jbe
mov
ret
sub
ja
mov
ljmp
stc
jo,pn
mov
negb
cli
pop
lock
sbb
xor
mov
cmp
cld
das
rcrb
ret
and
lahf
and
push
push
cmp
test
or
test
cli
sbb
adc
sub
adc
loopne
aas
cli
sbb
cld
push
dec
scas
push
cli
ret
mov
push
mov
push
out
in
fisubrl
push
daa
jo
xor
adc
insl
ljmp
adc
call
data16
fiadds
outsb
cli
push
movb
in
mov
or
es
jb
adc
enter
clc
out
gs
add
and
rcr
sbbb
test
mov
loop
mov
sbb
incl
lret
sub
outsb
xchg
in
hlt
cli
mov
in
jg
stos
mov
or
dec
rorb
inc
xchg
lea
xor
xchg
jecxz
xor
fs
xor
mov
mov
jge
nop
adc
insb
mov
mov
sub
hlt
sbb
mov
inc
lock
sbb
bound
mov
rcrb
xchg
int3
stc
ja
movsb
push
add
push
adc
and
clc
mov
dec
or
fld
clc
adc
leave
xor
addr16
jg
jecxz
sub
test
sub
sahf
push
repnz
add
inc
mov
push
sub
int3
sub
push
pop
loope
inc
sub
inc
jmp
out
loop
jo
cwtl
js
ja
or
bound
movsb
add
mov
lock
addr16
inc
inc
scas
push
js
pop
movsb
or
inc
pop
adc
add
push
rcl
orb
das
cmp
lcall
shr
stc
mov
sub
add
bound
push
push
clc
or
fisubl
lods
dec
fimull
incl
fiaddl
xchg
ss
push
pop
aad
test
call
adc
decb
inc
push
loop
push
inc
pop
adc
call
stc
loopne
mov
aam
xchg
jmp
mov
fmul
addr16
and
mov
mov
cmc
adc
mov
sbb
dec
or
sti
decl
and
cmp
lcall
adc
mov
push
inc
or
or
call
pusha
jo
and
andb
push
imul
sub
xor
icebp
aam
fchs
inc
lcall
cmpsl
mov
add
adc
or
xchg
add
je
push
cmc
sub
iret
xchg
outsl
or
mov
in
aaa
cltd
test
loopne
add
push
ficoms
mov
xchg
stc
and
dec
push
fldl
lea
lahf
push
xchg
and
cmp
dec
push
in
popa
cld
mov
add
icebp
stos
sbb
dec
push
jo
rorb
xor
push
cli
jnp
push
mov
jno
inc
aaa
add
fdivrp
mov
sarl
idivl
stc
es
add
popa
lret
adc
pusha
mov
jmp
push
lock
pushf
adcl
xchg
xchg
dec
xchg
or
dec
xchg
mov
in
andl
sti
xchg
xchg
push
xchg
das
mov
iret
dec
popa
ret
jle
sbb
jmp
xchg
add
push
inc
push
adc
add
inc
call
jo
fs
lods
xor
rorl
xchg
cltd
fmull
lds
call
icebp
cmp
pop
ja
rorl
jnp
inc
jb
pop
arpl
xchg
or
lret
dec
jno
mov
lds
dec
pop
mov
adc
pushf
adc
inc
mov
ljmp
or
mov
int
sarl
incl
repz
xor
pop
cmp
or
push
mov
in
negb
cli
mov
ljmp
sub
rcr
dec
cli
xor
ficoml
fwait
inc
sbb
test
loop
dec
mov
adcb
sbb
outsl
push
and
mov
xchg
ljmp
ja
mov
jb
adc
fdiv
pop
mov
push
add
clc
pop
push
or
or
mov
push
loop
out
into
lret
jne
fsubl
addl
cmp
and
test
pop
pusha
push
inc
mov
adcl
das
add
jg
mov
add
icebp
hlt
lret
push
xor
pop
mov
push
aam
inc
movsb
push
jp
sbb
sub
push
or
sbb
roll
xlat
decl
or
out
stos
sub
pcmpgtb
push
hlt
or
aaa
jns
push
fs
rorl
insl
ljmp
int3
pop
cmpsb
out
insb
jbe
fcomps
xor
outsb
or
scas
rolb
outsl
cli
les
popa
pop
cmc
ret
test
clc
pushl
push
xorl
mov
lea
jl
mov
cmp
pop
test
dec
dec
inc
xchg
mov
or
add
ljmp
das
js
leave
fadd
pop
push
push
add
decb
rol
adc
pusha
pop
loope
sbb
mov
ss
fildll
cld
data16
fstl
test
loope
jae
dec
decl
ljmp
mov
out
push
mov
das
xchg
add
test
mov
cmc
subl
cmp
add
push
pop
mov
ja
cmp
loopne
pop
incl
xchg
mov
data16
add
ret
addl
nop
js
add
daa
loope
andl
jg
fcoml
or
mov
mov
and
mov
cmc
pushf
orb
cmp
mov
mov
test
adc
loopne
das
mov
push
shl
or
push
mov
pop
cli
lods
add
mov
or
ret
sbb
sub
lods
fidivs
add
mov
or
push
insb
and
add
sbb
and
or
mov
xchg
xor
xorb
fmul
push
movsl
pusha
scas
cli
aas
ret
test
cmpsl
add
aad
add
mov
popf
mov
scas
pop
andb
dec
aaa
and
repnz
icebp
cltd
dec
jmp
sub
clc
lcall
dec
je
mov
repnz
xchg
lret
sbb
mov
add
jbe
test
xor
add
add
insb
jbe
subl
ret
clc
repz
xorl
add
adc
sub
mov
or
jg
mov
gs
mov
inc
jmp
lock
add
int3
cld
push
xor
mov
adc
mov
into
arpl
stos
mov
adc
loop
icebp
inc
push
pop
mov
ljmp
cwtl
rcr
ficoms
inc
icebp
es
pusha
jae
adc
sub
mov
test
adc
sub
or
push
adc
test
sbb
into
jle
pop
fcomps
scas
xor
cld
cs
push
or
das
ret
fldenv
xchg
cmp
aad
inc
inc
mov
loop
xchg
pop
faddp
filds
mov
and
mov
mov
adc
xlat
pop
adc
cli
xor
mov
rclb
jns
test
mov
adc
ret
pop
mov
int3
or
sbb
adc
cmp
pop
shlb
lock
cmp
hlt
in
lock
push
mov
test
addl
xchg
pop
xchg
int3
jge
cli
sbb
cmpb
mov
test
or
xor
lahf
xchg
rcr
push
aam
mov
push
cmp
cmp
data16
ja
out
cmp
addr16
scas
cmp
stc
pusha
rcll
lret
jl
adc
das
clc
jo
sarb
fadds
cld
adc
cs
scas
pop
sub
cmp
ja
inc
xchg
push
ss
enter
push
push
test
div
js
inc
loop
push
daa
popa
sbb
ror
out
dec
xrelease
xchg
cmp
mov
jo
pop
mov
stc
push
lock
push
sub
enter
loopne
shrb
push
jb
pop
add
xchg
mov
icebp
call
sub
sub
or
notb
lcall
and
or
mov
sarb
testb
cmp
dec
lcall
cmp
movb
stos
repz
and
add
andb
and
popf
add
dec
jecxz
mov
pushf
cltd
cmp
xchg
mov
decb
es
and
int
sub
inc
repz
cmp
adc
call
sbb
xor
adc
orb
pop
outsb
movsb
hlt
pop
jmp
jne
icebp
or
mov
mov
out
push
or
push
movsb
clc
icebp
push
rorb
and
xchg
mov
mov
jbe
shlb
mov
cld
ja
push
adc
adc
cmp
pop
push
mov
mov
mov
shlb
loopne
hlt
mov
cmp
jge
jb
xor
ljmp
xchg
mov
mov
jno
inc
mov
adc
add
incb
inc
inc
and
dec
repnz
xor
dec
or
mov
mov
test
fidivl
mov
ja
push
nop
popa
aas
mov
push
sbb
or
pop
sub
jl
and
dec
cmp
nopl
fnstenv
test
pop
jle
test
lcall
mov
mov
testl
mov
test
nop
cmp
cmpsb
inc
fsubl
inc
stos
test
lods
movsb
adc
mov
inc
and
outsl
push
or
inc
and
cld
cmp
mov
rolb
imul
roll
xchg
je
pop
call
stos
jg
lods
idivl
push
sub
add
pop
xor
add
mov
add
scas
xchg
jae
decl
into
inc
mov
mov
fyl2x
and
ja
push
jl
arpl
xor
adc
stos
push
adc
loopne
fs
mov
mov
push
and
xchg
adcb
cmp
sub
ret
imul
mov
pushf
adc
cmpb
add
lret
bound
or
push
cmp
or
pop
jo
dec
pusha
cld
pop
xchg
roll
ljmp
xchg
sub
shrb
nop
inc
mov
and
pop
adc
aas
mov
inc
sbb
jmp
and
mov
push
push
fmull
mov
adc
loope
adc
push
insl
addl
aaa
sti
in
inc
mov
and
rcll
dec
ljmp
test
sub
push
pushf
mov
arpl
loopne
fcmovnb
mov
call
mov
and
mov
outsl
cli
add
adc
repz
jb
rcr
sbb
xor
dec
into
faddl
ss
cli
scas
xor
push
pop
cmpsl
xchg
add
cli
pop
add
fiadds
cwtl
cmpb
scas
add
xor
insb
push
mov
pop
jne
xchg
test
mov
scas
mov
jns
or
cwtl
push
ret
fisttpl
lock
mov
mov
outsl
jge
adc
les
cmp
movsb
xchg
mov
mov
imul
lock
clc
test
clc
pop
repz
cli
div
pop
add
or
add
ficompl
subb
mov
and
cmp
cmp
xor
mov
clc
lret
pusha
popa
mov
mov
fisubs
dec
adc
push
mov
dec
add
jecxz
xor
or
decl
repnz
mov
imul
mov
pop
outsb
pop
js
cs
inc
and
fisttpll
inc
fdivrs
inc
xor
mov
hlt
add
xchg
cmp
cli
cld
pop
sbb
outsl
mov
iret
mov
inc
nop
repnz
adc
mov
xchg
in
sbb
cmc
xor
xor
cmp
push
pop
pop
sbb
and
cmp
icebp
xchg
mov
sbb
aas
sub
push
xchg
mov
dec
stos
leave
jl
cmpb
cli
cmp
stos
popa
inc
pop
mov
movsb
aad
icebp
je
sbb
or
pop
popf
popa
pop
nop
cmp
cli
jb
cli
pop
jge
test
and
inc
or
dec
dec
lea
xchg
push
mov
addr16
pop
cld
adc
mov
outsl
mov
fistpl
push
popa
add
aam
jb
jge
scas
subb
mov
jnp
jg
dec
sbb
xchg
adc
imul
adc
adc
add
inc
cmp
jno
xchg
mov
js
push
and
fiadds
jp
jne
pop
adc
fildll
or
jmp
push
add
cld
jg
scas
mov
adc
push
mov
mov
scas
inc
sub
inc
test
mov
push
push
mov
fdivrl
push
imul
movsb
xchg
dec
adc
mov
sub
stos
in
mov
cmpsb
scas
adc
sti
iret
dec
push
fwait
mov
xchg
ror
icebp
pop
pop
or
fiadds
or
data16
call
add
addr16
xchg
std
xchg
out
ljmp
loope
je
push
mov
adc
mov
inc
adc
pop
ljmp
mov
xchg
sub
inc
dec
sbb
xorb
roll
jmp
push
xchg
es
mov
sub
ret
xchg
adc
or
jge
push
aaa
jg
mov
test
test
and
shlb
stc
inc
es
ljmp
ljmp
icebp
out
inc
js
sbb
xor
inc
ret
sbb
push
enter
sub
mov
xor
adc
or
or
ret
mov
aaa
jle
or
inc
push
ljmp
loope
xchg
xchg
cmpb
movb
mov
in
xor
test
inc
adc
je
andl
mov
ret
idiv
movaps
adc
push
dec
outsl
push
cmpxchg
cmp
and
add
aaa
sbb
lods
and
mov
sub
call
push
insl
sub
lock
inc
pop
scas
xchg
xchg
ret
push
push
and
aam
outsl
jg
xchg
add
clc
icebp
sub
imul
es
inc
inc
sbb
or
jae
or
xchg
mov
out
dec
mov
and
inc
sti
lret
adc
rcrb
add
jbe
add
fs
dec
roll
lret
cmp
mov
mov
lahf
ja
jecxz
pop
movsb
push
fsubr
and
xchg
adc
push
incb
and
dec
repz
mov
test
lahf
adcl
lds
sub
and
cmp
push
or
out
cmp
adc
inc
pop
mov
fmull
test
sti
push
xor
sub
enter
pop
insb
mov
mov
mov
mov
jp
add
inc
mov
iret
inc
popf
xor
and
dec
or
cmp
fstps
add
sub
sub
inc
inc
popl
xchg
fwait
neg
mov
xorb
std
inc
push
and
loope
sbb
push
ret
xor
sub
ja
ret
call
ffree
lods
mov
jne
mov
lock
sub
outsb
jnp
add
repnz
cmp
mov
jae
inc
fdivr
push
leave
pop
adc
inc
loop
lahf
shlb
dec
into
mov
xchg
outsl
dec
cmp
or
sub
mov
popf
repz
sbb
sbb
in
rorw
icebp
popa
or
push
loopne
or
call
pop
push
push
mov
or
outsl
cs
jle
and
cs
add
das
mov
sub
fistps
clc
pop
nop
bound
js
add
in
leave
ds
fisubrs
adc
push
jo
mov
rol
pop
push
inc
xchg
cmp
cld
pop
or
leave
mov
inc
jg
test
das
shlb
ss
mov
pop
mov
jo
sti
add
shll
xlat
mov
mov
fwait
mov
xor
insl
in
in
je
jmp
pop
aaa
add
and
loop
shlb
js
scas
mov
je
icebp
inc
xchg
jno
xchg
push
rolb
data16
repnz
clc
or
mov
out
xor
cs
dec
ljmp
inc
cmp
sub
inc
push
inc
cltd
test
pop
and
popf
push
jns
dec
push
mov
int3
bound
jecxz
inc
pop
xchg
in
or
jno
iret
or
add
lods
xchg
clc
jb
sbb
sbb
jecxz
mov
and
cld
add
mov
shlb
or
adc
fs
xor
repz
aam
sbb
loope
sub
push
or
les
stos
arpl
std
lods
push
xchg
sub
mov
data16
sti
sub
dec
mov
xor
dec
dec
outsl
sub
mov
ss
dec
cmp
mov
pop
inc
mov
xchg
test
jns
adc
lods
push
cld
ja
add
mov
jb
sub
mov
faddp
mov
adc
lock
in
add
call
or
aas
mov
push
mov
and
ljmp
and
xlat
xorb
jp,pn
mov
dec
stos
dec
jg
pop
jge
movsb
jo
inc
hlt
sbb
mov
mov
imul
cltd
cs
fucomi
pushl
or
dec
pop
sbb
shlb
in
wbinvd
rolb
pop
int3
xchg
ljmp
xor
pop
sub
adc
hlt
rolb
call
mov
and
call
in
sbb
int3
stc
mov
rcrb
inc
loope
scas
sbb
jbe
push
insb
adc
adcb
lret
movb
xchg
jo
dec
add
jge
adc
fisubl
test
mov
inc
xchg
pop
pop
adc
int3
adc
fnsave
or
fildll
push
negb
add
enter
scas
call
sti
xchg
call
mov
pushl
xor
and
mov
loop
js
mov
pop
hlt
push
add
shr
pop
stos
scas
add
jo
add
shl
lds
popf
and
je
mov
pop
inc
adc
sbb
dec
mov
pop
faddp
pop
cmp
cmp
orb
loope
and
dec
testb
or
das
cli
sbbl
or
shlb
pop
jmp
cmp
fwait
mov
pop
out
mov
dec
sbb
mov
or
call
jbe
and
aad
jbe
movswl
pusha
adc
add
in
aaa
pusha
iret
cs
jl
popa
mov
je
sar
shl
and
int
adc
jo
or
push
adc
add
inc
ss
cmp
outsl
jp
or
cmp
pop
pop
loopne
sbb
mov
xchg
scas
std
push
or
std
inc
xchg
mov
fistpll
imul
cld
pop
sub
adc
rcll
dec
jb
data16
mov
sub
loopne
inc
push
jl
adc
pop
insb
call
ds
jg
sbb
push
notb
loop
jno
movsb
push
xor
lock
incl
out
mov
cmc
int3
xor
xchg
add
mov
arpl
and
adc
sub
dec
mov
sbb
pop
and
adc
cli
loop
pop
lea
pushf
out
xor
inc
mov
test
add
rorb
dec
cmp
lcall
popa
pusha
mov
or
arpl
mov
inc
punpckhbw
insl
sbb
inc
xchg
js
les
aad
popa
mov
mov
js
imul
pop
add
fcmove
xor
pusha
pavgb
sub
outsl
mov
push
mov
adc
enter
loopne
sbb
mov
scas
test
js
imul
loope
loop
pop
jmp
pushf
mov
cmp
add
push
fisubrl
ret
xchg
sub
pop
gs
push
pop
movsb
push
adc
add
or
mov
dec
mov
sub
mov
test
jo
jnp
sbb
xchg
xlat
inc
cmp
ss
fistps
lock
add
js
cmc
pop
loope
sbb
daa
les
push
scas
insb
call
mov
test
xchg
data16
xor
cs
sbb
mov
icebp
out
jo
hlt
outsl
inc
aad
aad
sub
loopne
mov
push
test
movsb
pusha
out
outsb
add
test
xchg
into
idivl
and
adc
adc
subb
data16
dec
jg
adc
call
push
punpckhwd
dec
into
dec
out
pusha
aaa
mov
enter
pop
mov
aam
scas
or
movsl
out
jo
cld
daa
push
aaa
cmpsb
sbb
pop
push
je
mov
push
clc
xor
repz
outsl
add
ljmp
imul
in
jmp
xor
cmp
mov
adc
nop
xchg
rorb
rclb
andb
test
xor
mov
shlb
fsubrs
nop
outsb
push
mov
rolb
je
xor
adc
xchg
out
push
jle
js
insb
mov
sub
pop
inc
sub
ds
xor
movsb
or
jg
popf
jle
jae
add
popf
inc
sar
push
push
insb
bound
mov
outsb
xor
pusha
shll
push
add
out
dec
mov
sbb
jmp
add
sub
clc
sti
mov
mov
or
outsb
shll
jle
mov
and
aad
xor
adc
or
aas
cmpsl
push
pushf
add
stos
mov
imul
cmp
inc
push
mov
and
mov
sub
fildll
jbe
repz
mov
fwait
pop
mov
adc
es
push
add
shll
ja
roll
mov
insb
aam
iret
jp
add
nop
into
decl
xor
sub
cmc
test
ret
add
inc
aad
fmull
cmpb
cmc
sbb
mov
insl
mov
cmp
repnz
lahf
mov
mov
out
leave
pop
jl
mov
shll
test
mov
mov
lea
and
mov
lock
inc
lret
jae
push
ds
or
mov
or
pop
mov
jno
fdiv
and
test
mov
xchg
xchg
xchg
adc
dec
add
jb
sub
jle
xlat
pop
add
xor
sub
aas
std
pop
dec
mov
out
xchg
cmp
test
out
inc
insb
mov
push
cmpsb
push
cmp
fdivl
std
xlat
push
clc
out
out
sub
test
add
cmp
mov
dec
pop
and
icebp
jbe
xchg
cs
push
adcl
xchg
xchg
add
lods
xchg
mov
adcl
push
pop
addb
jo
imul
cmp
dec
and
lcall
and
outsb
nop
loopne
scas
xlat
out
push
adc
cmc
insl
cmp
movsl
pop
or
mov
cli
out
test
adc
fsubrp
add
mov
pop
loopne
incb
insl
hlt
sahf
js
or
cmp
test
pop
leave
push
insl
jp
fisubrl
jle
pop
pop
jno
fsubs
or
cmp
fnstsw
ds
mov
xor
arpl
sbb
push
scas
clc
jo
add
xor
push
test
cmpsb
push
ret
in
sub
pop
mov
add
jg
xchg
or
adc
call
xchg
cmp
jno
mov
icebp
push
xchg
pop
icebp
fwait
fwait
pop
sub
and
ljmp
xchg
xchg
mov
adc
ja
xor
test
nop
or
repnz
mov
stc
sub
push
pop
push
orb
hlt
andb
mov
sarb
ret
dec
inc
add
cmp
ficoms
mov
and
or
dec
add
sbb
cmpsl
and
pop
scas
sar
lock
pusha
mov
es
lds
aad
clc
in
outsl
adc
or
pop
jne
insb
cmp
xchg
incb
lods
mov
es
xchg
ss
arpl
sarb
fistpll
mov
dec
lcall
sub
and
or
out
ja
outsl
xor
lret
xchg
ficoml
pop
lock
sub
rorb
popa
jl
and
inc
cld
pushf
fidivrs
ds
mov
jo
cld
ljmp
push
addr16
mov
into
adc
push
and
add
jl
insb
or
jl
adc
pop
std
xor
and
lods
dec
adc
decl
lock
jl
lods
dec
push
int
adc
push
jl
aad
leave
push
push
icebp
and
xor
push
mov
mov
push
adc
out
inc
mov
sub
and
and
or
pushf
in
jp
loopne
or
sbb
arpl
jmp
into
inc
pop
fisubrs
ficoms
jg
add
or
xchg
add
rcll
mov
incb
into
sub
popf
nop
sar
mov
push
std
cs
mov
iret
sub
or
adcb
xchg
cwtl
push
cld
mov
in
mov
shrl
dec
cld
jbe
inc
clc
and
sub
lcall
clc
mov
xchg
jg
int
inc
xchg
jnp
mov
dec
aam
jl
mov
clc
imul
fwait
jne
jl
je
mov
dec
lahf
pusha
ds
adc
rclb
shlb
mov
out
or
mov
xchg
lds
je
sub
add
xor
adc
lcall
jb
pushl
add
push
lods
mov
jl
cmp
push
rcrb
ret
call
adc
rolb
in
test
add
cmp
sti
and
xor
data16
pop
es
call
cmp
inc
lods
cltd
mov
fimuls
push
je
and
filds
adc
mov
push
add
or
push
adc
aam
out
fiaddl
mov
lds
jno
pop
push
cmp
add
clc
sar
inc
fidivs
data16
das
sub
xor
pop
fisttpl
adc
popa
jmp
mov
mov
lods
sub
xchg
int3
mov
add
inc
add
aaa
xor
outsb
mov
cli
es
rol
dec
jmp
out
jne
cmp
testb
mov
scas
test
sbb
movsb
cmp
aam
mov
fdivrl
adc
dec
sub
daa
sbb
dec
scas
fdivrs
jmp
loope
push
push
xchg
dec
sub
mov
mov
mov
ret
or
mov
sub
loopw
xchg
subb
push
inc
and
cmpsb
adc
jle
in
testb
sub
and
inc
jl
outsl
pop
dec
out
arpl
inc
nop
dec
add
out
push
mov
js
mul
lret
mov
test
sbb
int3
loop
outsb
lock
mov
jmp
pop
testb
popa
es
and
mov
rcl
mov
ret
push
into
pop
xchg
push
xor
out
pop
mov
leave
decl
pop
jo
notl
inc
test
cmp
push
adc
lds
pop
or
in
adc
popa
xor
mov
cmp
in
adc
sub
adc
shlb
mov
push
fs
xchg
test
jne
adc
sbb
popf
stos
in
pop
movsb
add
call
mov
push
xorb
sbb
clc
add
sbb
les
push
lds
lock
sbb
xchg
dec
mov
ljmp
mov
ss
xor
das
lods
nop
mov
add
and
and
incl
or
push
mov
ss
sti
loop
dec
loope
in
das
int3
std
jns
rorl
sarb
xchg
mov
push
scas
idivb
cmp
cmp
sti
push
jp
movsl
and
pop
add
push
or
adc
pusha
cld
dec
adc
xchg
enter
add
je
testb
fimuls
filds
movb
push
inc
outsl
adc
arpl
mov
lods
nop
mov
into
push
stos
addr16
jl
fs
mov
dec
lds
xor
and
and
mov
dec
mov
cmp
xchg
fs
mov
mov
aaa
inc
pop
stos
inc
cmpsb
pcmpeqd
push
adc
fdivrl
ss
jo
or
imul
les
mov
clc
incl
push
xor
xchg
hlt
loopne
and
ficoml
sahf
out
mov
xchg
adc
and
test
loop
in
dec
dec
loopne
xchg
dec
cmpl
ret
push
ss
popf
enter
std
adc
sbb
ja
gs
jae
call
adc
mov
mov
pop
xchg
roll
jmp
fprem1
aaa
cmp
or
dec
and
xchg
xchg
nop
test
std
pushl
aas
inc
insb
js
inc
sub
cmp
lock
mov
pop
aam
incl
inc
dec
test
enter
pop
xor
outsl
lock
in
and
aad
push
cmp
mov
ljmp
sub
pop
cmp
roll
sub
jo
jl
and
scas
or
rclb
cmp
sub
arpl
dec
ja
ljmp
push
push
jbe
and
das
push
rorb
push
jle
pop
test
mov
mov
adc
in
cmc
data16
push
sarl
sbb
call
es
pop
xchg
add
mov
mov
cmp
sahf
outsb
movl
into
inc
or
xchg
and
push
ret
add
and
jp
lds
or
shlb
or
push
icebp
test
mov
sub
mov
fwait
xchg
push
lea
push
mov
orb
and
mov
xor
pop
mov
lcall
mov
mov
inc
mov
xchg
cmp
jbe
cmc
call
pop
cmp
bound
cmp
enter
mov
shlb
aas
out
pop
jle
inc
shll
mov
dec
sub
incl
js
lret
test
mov
in
ss
mov
adc
xor
sbb
xor
in
adc
insl
ds
xor
sub
add
clc
pop
xchg
mov
cs
xor
jae
rolw
iret
xchg
adc
jo
hlt
gs
xchg
loop
std
pusha
lods
pop
cmp
pop
fwait
jg
cmp
es
mulb
insb
push
xchg
int3
add
inc
mov
mov
cmc
lret
push
adc
push
xor
sub
sbb
mov
pop
push
sbb
push
dec
lahf
cmp
push
lret
cmpsb
mov
lds
pop
dec
inc
mov
pusha
mov
stos
repnz
pop
in
decl
or
repz
xlat
cmp
ds
out
xchg
js
pop
sahf
or
mov
jmp
and
inc
xor
xchg
test
lret
inc
sub
les
jo
into
or
aad
or
rorl
test
cmp
outsl
decl
lcall
lahf
jns
inc
cmova
mov
decl
xlat
pop
push
fdivrl
addr16
mov
jl
cwtl
pop
sbb
mov
fxtract
in
test
nop
bound
add
into
mov
sub
push
icebp
repz
cli
incl
pop
and
mov
test
sbbl
or
les
push
iret
inc
xor
mov
xchg
adc
jle
xchg
pop
mov
data16
dec
sbbb
or
dec
adc
call
xor
sbb
test
lock
clc
xlat
clc
xchg
jb
dec
cmpsb
pop
mov
sbb
clc
in
test
inc
xchg
mov
lret
inc
repnz
or
lods
pop
xchg
adc
orb
jae
pop
in
mov
add
rcl
stos
outsb
subb
dec
loope
divb
inc
jmp
fdivrs
mull
out
nop
scas
xor
aas
adc
jb
push
loopne
das
sti
fistps
push
mov
jbe
subl
popl
add
es
xchg
test
inc
cmpsl
push
add
cs
or
addr16
clc
push
fisubrs
add
sub
flds
mov
xor
inc
push
fldenv
and
outsl
stos
movsl
xor
sub
scas
stos
movsl
push
bound
decl
out
mov
test
stos
dec
into
cmp
pop
inc
bound
pop
sar
push
test
dec
clc
subb
xor
adc
inc
movsb
mov
jbe
mov
movsb
and
pop
cmp
push
orb
fildll
pop
in
cmp
decb
or
out
mov
cmpsb
add
stos
out
test
fimull
xlat
sub
xchg
adc
pop
cmc
mov
xchg
xchg
aaa
test
cs
test
lcall
jbe
push
outsb
fisubrs
enter
add
adcl
sbb
repnz
std
ljmp
or
imul
insb
jae
int
sub
hlt
insb
add
ljmp
xchg
xor
shlb
jmp
mov
lcall
nop
ljmp
push
pop
into
xchg
xchg
push
and
push
or
adc
cld
sub
dec
mov
call
pop
cld
fwait
std
stc
and
loop
mov
aam
cmp
fidivrs
push
out
test
push
rclb
jp
lds
xchg
ss
aam
stos
mov
rolb
js
or
pop
or
icebp
insb
inc
xchg
jmp
jmp
cwtl
arpl
in
jecxz
jp
cli
adc
push
scas
ret
das
jne
mov
out
jl
mov
data16
add
or
incl
clc
mov
sbb
and
nop
cmpsb
xor
mov
inc
ret
jo
stos
mov
xchg
sub
sub
dec
mov
mov
xchg
movsb
push
jb
push
mov
add
lret
push
mov
add
dec
or
es
mov
dec
aam
call
pop
loopne
and
push
adc
cmp
pop
xchg
jge
jmp
inc
adc
test
mov
xchg
outsb
sbb
cwtl
loop
loop
pop
inc
xor
and
aas
sbb
fists
filds
mov
or
adc
nop
icebp
in
xchg
and
filds
push
aad
das
lcall
jge
loope
mov
push
pop
jl
and
cltd
in
mov
mov
sti
movsl
cmp
outsb
test
aaa
je
pop
mov
call
repnz
cltd
into
mov
sub
mov
cmc
pop
loope
test
mov
fmuls
push
mov
inc
mov
js
idivb
pop
xor
add
cmp
pop
add
mov
loope
add
ret
icebp
fs
pop
ljmp
mov
loopne
sahf
pop
fbstp
jmp
jnp
in
cmpsb
inc
nop
ss
mov
mov
sbb
dec
stos
lret
push
int3
incl
jecxz
inc
xor
xchg
bound
and
cmovb
add
xchg
mov
sbb
addb
into
mov
add
inc
xchg
aaa
stos
cltd
and
pop
cltd
and
inc
jo
push
mov
cmp
or
push
sbb
test
ja
mov
inc
adc
push
lock
out
scas
or
push
mov
mov
adc
sub
jo
rcll
orb
mov
fnstenv
adc
push
sahf
sub
sbb
lcall
sbb
add
sub
mov
mov
scas
mov
mov
pop
sub
std
sub
mov
pop
sahf
lret
mov
jmp
icebp
inc
test
or
fsubs
cld
insl
fsubrs
cli
repnz
sbb
js
jg
adc
mov
outsl
mov
stc
pop
clc
test
pop
test
or
fnstsw
lock
sub
mov
aam
data16
mov
call
addb
push
push
aaa
adc
clc
out
pop
add
sbb
cld
fbstp
testb
jmp
mov
dec
mov
dec
in
mov
xor
aaa
jbe
sbb
lcall
xor
nop
aas
add
xlat
aas
push
ja
pop
jae
sbb
dec
xor
add
cltd
xchg
popa
adc
jl
jbe
cmp
jle
inc
decb
inc
or
push
sbb
inc
es
or
test
sub
xchg
jmp
cwtl
cmp
hlt
add
inc
insb
dec
cmpl
xchg
and
cmc
push
mov
xorl
scas
ljmp
add
jecxz
repnz
jns
mov
dec
push
mov
jp
jmp
mov
pushf
test
int3
leave
out
in
loopne
sbb
cmpsb
daa
push
inc
push
cmpsl
add
mov
rcll
lods
xchg
dec
or
sbb
decb
xor
xlat
punpckhbw
outsb
mov
in
dec
sub
push
xor
xchg
pushf
mov
ljmp
dec
push
cmp
push
je
stc
arpl
mov
lods
xchg
mov
xchg
fidivrs
push
jnp
loope
mov
mov
mov
push
test
pop
int3
mov
int3
jo
mov
or
ss
xlat
adc
xchg
sbb
das
add
cmp
rorb
out
or
adc
adc
or
lret
orb
and
add
in
pop
mov
enter
xchg
cmpsb
into
mov
adcb
sub
sbb
rcrb
add
mov
and
mov
pop
incl
ds
out
scas
mov
cmpsb
dec
add
cli
aaa
sub
or
fadds
add
hlt
jle
daa
inc
push
pop
xchg
or
add
nop
dec
imulb
mov
lds
jmp
mov
xchg
ret
mov
nop
fldenv
push
xchg
push
shlb
outsb
sub
sbb
jle
and
adc
jbe
jmp
mov
js
out
sti
mov
shlb
int
mov
inc
mov
into
test
cli
hlt
mov
sar
pushl
testl
and
xchg
sub
add
xchg
lock
and
pop
sub
xchg
call
adc
dec
loop
fistpl
push
xchg
xchg
mov
xor
inc
pusha
cli
pushl
and
pusha
or
cmc
fsubp
ret
pop
or
mov
jg
lcall
aaa
mov
ljmp
sub
in
push
test
stos
scas
dec
adc
stos
push
mov
dec
test
add
or
adc
sarl
cwtl
and
rorl
xchg
mov
adc
cmc
stos
mov
mov
loop
addb
mov
bnd
and
xchg
lahf
fidivrs
mov
mov
sbb
fnstsw
sbb
mov
pop
push
jg
jbe
cltd
jnp
sbb
dec
xor
and
stos
call
or
xorl
out
roll
xor
jns
js
mov
mov
push
jle,pn
ljmp
bound
xor
or
push
icebp
movswl
cmp
mov
add
dec
cmp
loopne
stos
jp
and
push
push
push
ss
dec
add
add
pop
cmpsb
ret
push
mov
pusha
push
aam
filds
popf
jecxz
leave
pop
inc
mov
push
in
loopne
cmp
loop
jl
lret
jecxz
fbstp
insl
push
sti
clc
call
lods
sbb
mov
mov
add
and
out
cmpsb
inc
mov
cwtl
and
push
divl
test
icebp
push
dec
sub
adcl
mov
xchg
ret
inc
jo
notb
sar
dec
ret
push
scas
inc
mov
inc
out
fists
mov
ss
add
les
inc
dec
jmp
sub
fiaddl
pop
push
dec
mov
inc
std
pushl
mov
dec
mov
cmp
enter
das
cwtl
in
movsb
packsswb
xchg
add
add
or
dec
jmp
clc
cmp
fwait
jne
jae
iret
movsb
jno
xor
fwait
nop
das
push
jl
lcall
test
pop
stos
add
sbb
push
aas
mov
xchg
sbb
cwtl
push
and
imul
sti
adc
lret
sub
cmpsb
std
cmp
add
iretw
cmpsb
stos
push
outsl
sbb
test
and
sbb
inc
out
xor
or
xor
jg
xchg
pusha
dec
push
jmp
pop
push
sbb
fs
orb
inc
jb
popa
mov
adc
cmpsl
mov
sbb
push
sbb
and
test
fsubrs
cmp
inc
inc
cmc
rcrl
inc
sub
mov
shrl
stos
ds
in
mov
lods
jl
movsl
push
adc
into
pushf
cmp
fcmovnu
dec
and
jo
or
ds
or
dec
das
push
imul
rorl
popa
int3
cmp
outsl
mov
imul
movb
mov
test
incl
addl
sgdtl
imul
sub
fcomp
and
imul
cmp
clc
adc
inc
xlat
xchg
xchg
pop
pushf
or
scas
inc
mov
jo
les
cmp
push
ljmp
and
loop
rol
dec
xchg
lahf
lods
add
imul
mov
mov
mov
inc
imul
push
cmpb
sub
inc
push
dec
movsb
cmp
jo
xchg
jle
insb
loope
xchg
cld
enter
js
sub
test
dec
mov
cmp
pop
scas
pop
dec
cld
or
and
cmc
decl
lock
xor
push
xchg
cmpsl
out
or
lcall
pop
insl
mov
pop
sahf
jg
inc
lahf
inc
frstor
adc
and
mov
lret
dec
cwtl
inc
loopne
add
pop
hlt
xlat
call
fidivs
fimull
idiv
fdivl
add
test
aas
and
lods
mov
mov
sbb
mov
cmp
fcomip
sahf
mov
into
xchg
pusha
cmpsl
sbb
enter
in
stos
into
push
enter
mov
adc
mov
adc
in
cmp
cmc
or
rol
jo
sub
push
imulb
inc
mov
sahf
aad
push
popa
sbb
mov
out
sarb
jge
mov
adc
imul
jb
les
add
cmp
pop
icebp
jg
jnp
xchg
mov
ds
stc
xor
pop
and
stos
mov
adc
xchg
in
outsl
mov
pop
das
xchg
fbstp
xchg
cmpsb
loop
push
xor
test
nop
jmp
sbb
mov
or
jno
xchg
addb
outsb
ret
or
js
xchg
mov
lock
add
mov
jge
fs
decb
lcall
shlb
outsl
scas
js
add
or
and
add
nop
lret
xchg
lock
mov
mov
daa
lods
lods
dec
lret
mov
xor
cltd
arpl
fimuls
ret
xchg
fidivrs
inc
dec
push
xor
or
push
sar
push
inc
fs
outsl
into
xor
enter
sbb
mov
xchg
mov
mov
mov
mov
jnp
push
addb
test
cmp
negl
lock
dec
out
leave
pop
push
jge
add
data16
outsl
pop
pop
push
pop
es
iret
jne
mov
pushf
nop
outsl
imull
sahf
dec
pop
je
mov
test
cmp
or
dec
add
add
pop
loope
dec
test
call
add
push
loop
sbb
jae
sub
ss
add
dec
push
lret
and
inc
push
outsb
pop
loop
adc
sbb
jge
aaa
mov
mov
shrl
jb
dec
xor
jb
pop
or
xor
out
jo
ss
add
decb
in
movsb
in
push
rorb
call
add
lods
push
aaa
mov
push
push
into
push
push
adc
pop
stos
sarb
loop
data16
loope
ljmp
inc
adc
sbb
adc
mov
xchg
imul
push
mov
mov
adc
push
add
scas
fiaddl
jp
jnp
enter
rol
mov
ja
mov
sub
xchg
inc
sbb
fsubl
roll
cmpl
inc
pusha
loop
adc
pop
jne
inc
xchg
jnp
gs
fisttpl
mov
jae
cmpsl
popa
xor
das
fimuls
inc
jge
sbb
pop
sahf
mov
sbb
xor
ljmp
outsb
or
sub
mov
push
popf
push
pusha
outsl
jle
test
mov
lea
or
mov
jg
mov
ds
mov
fdivr
pop
icebp
jo
test
cltd
push
es
mov
test
push
fnstsw
out
es
inc
insb
or
jo
or
fisubl
pusha
and
cmc
mov
xchg
or
fiadds
cmc
adc
add
xchg
scas
sbb
jo
push
imul
inc
jns
test
hlt
js
out
jl
movsl
bound
and
lea
pop
fsub
call
mov
sti
add
mov
cmp
pop
jo
add
jne
push
and
sbb
lret
mov
mov
xorl
sub
adc
cmp
shll
sbb
popf
jo
ffree
push
or
mov
jmp
cwtl
push
mov
sbb
or
lcall
mov
pushl
mov
mov
mov
repnz
inc
out
and
js
push
xchg
sub
and
cmp
push
push
inc
repz
pop
xchg
mov
cmc
hlt
cmp
incl
ficoms
dec
lret
xchg
out
shl
pop
and
lods
enter
cmp
sbb
jecxz
fsubp
fs
and
add
xor
push
cmp
rorl
xchg
mov
jmp
loope
int
test
addl
test
jmp
and
pop
mov
leave
cs
stos
jg
hlt
vrcpss
mov
dec
and
lcall
xchg
insb
fsubrl
xor
inc
lock
xchg
push
adc
dec
cltd
mov
js
pop
fbld
mov
xchg
mov
xor
jns
mov
mov
popa
inc
cmp
pop
imul
pusha
pop
push
add
xchg
fildl
pushf
xor
vmovss
adc
pop
sbb
out
fbld
add
add
pop
pop
lahf
xor
cmp
add
sbb
mov
push
sbb
shlb
xor
enter
fsub
sub
loope
fucomp
cmp
fcoms
int3
mov
mov
jno
jmp
popf
test
pushf
xchg
sbb
xchg
or
inc
sub
pop
adcb
inc
out
lods
fisttpl
rol
loopne
insb
jg
pusha
push
mov
inc
das
mov
dec
mov
sub
pushl
inc
dec
insb
lahf
lods
sbbb
rclb
cmpsb
sbb
sbb
in
loopne
mov
cmpsb
mov
jecxz
bound
jnp
daa
je
lods
in
pusha
dec
sbb
xchg
hlt
dec
xchg
mov
dec
shlb
mov
cmp
mulb
dec
outsb
add
mov
push
loopne
lret
push
or
sbb
je
or
pop
add
inc
push
adc
aad
ljmp
out
shll
cwtl
nop
shlb
nop
cli
mov
jp
js
dec
pop
jle
xchg
push
jns
bound
rol
adc
test
pop
faddl
test
push
dec
popf
scas
and
jo
push
and
decl
lret
jmp
inc
ret
out
xor
sub
arpl
push
cwtl
or
pop
push
inc
add
inc
sub
push
repnz
xchg
loope
lock
push
fdivrs
jmp
and
es
lds
pop
cmp
cmp
mov
fcomip
mov
mov
mov
cli
adc
in
inc
mov
jecxz
rclb
inc
leave
gs
adc
cmp
data16
outsb
outsb
sbb
ja
decl
inc
pop
cwtl
daa
fwait
sbb
lods
mov
inc
add
pop
lods
inc
iret
or
lret
push
lock
push
mov
dec
inc
sub
push
dec
sub
adc
ret
sub
mov
cmp
mull
mov
loope
hlt
inc
out
andb
je
movsl
adc
std
in
inc
dec
push
ds
push
call
in
in
out
ljmp
loopne
cld
hlt
jae
adc
outsl
std
xchg
sti
inc
repz
inc
push
or
dec
push
stos
pop
sub
push
mov
add
and
push
mov
push
inc
jg
outsl
sub
andl
and
mov
pusha
rorb
mov
loop
mov
mov
pop
mov
imul
push
and
add
mov
add
fbld
pop
inc
dec
test
sub
daa
cld
ljmp
es
mov
jno
mov
or
mov
scas
gs
xor
pop
loop
adc
daa
or
enter
insl
dec
jmp
icebp
in
mov
loopne
add
inc
arpl
roll
movsb
iret
aam
and
fiadds
icebp
or
mov
iret
mov
inc
pop
pop
rorb
inc
loope
lahf
cmp
adc
xchg
pusha
stos
in
int3
jl
xchg
push
add
js
popf
mov
lcall
cmp
cs
vcvttps2dq
pop
or
outsl
adc
loopne
cld
repz
mov
and
lock
sbb
inc
scas
repnz
xor
or
clc
or
and
lock
ja
inc
cmpsl
or
sbb
sbb
mov
out
data16
and
mov
xchg
jl
test
into
dec
cwtl
push
jg
or
cmp
and
cmp
data16
fbstp
fisubrl
and
shll
pop
sub
push
hlt
jg
lods
aas
insb
pop
mov
std
scas
dec
ret
mov
mov
ror
inc
call
pop
jno
mov
fisubs
push
loop
xchg
push
cmpsl
add
or
clc
push
add
mov
mov
movsl
lahf
xchg
leave
push
repnz
cmp
stos
je
adc
test
xchg
lods
mov
pop
cmp
pop
sbb
or
lcall
ss
push
xor
mov
jae
sub
jle
mov
lods
mov
or
ficompl
or
mov
push
sbb
es
jg
mov
cli
fiadds
ficoms
lahf
movsb
pusha
push
addr16
mov
js
aaa
cld
incl
cld
out
mov
xchg
mov
inc
repnz
dec
jg
or
subb
test
xchg
or
pop
pusha
xchg
sub
dec
scas
add
push
xchg
jmp
inc
das
mov
jmp
push
mov
push
insb
inc
ds
hlt
mov
stos
int
sub
es
iret
jo
mov
scas
push
orl
and
fsubs
cmp
cmp
les
into
test
inc
or
mov
jp
pop
jl
push
adc
inc
adc
cmp
das
adc
imul
or
pusha
and
jmp
les
or
inc
inc
push
xor
adc
and
cld
pop
jo
add
inc
mov
loopne
lret
push
sbb
in
clc
sbb
sbbb
or
xor
jns
jg
ds
xchg
mov
dec
xor
clc
and
add
add
xchg
subl
jno
movsb
mov
hlt
cmp
push
je
jno
mov
xor
sti
mov
call
stos
faddl
mov
and
out
icebp
jg
mov
nop
jb
cmpb
sti
iret
mov
clc
sbb
mov
push
cmpsb
jg
push
xchg
fcompl
pop
popl
orl
push
push
popa
mov
pushl
or
lahf
mov
mov
xor
push
dec
dec
mov
ret
xor
popl
fists
cmp
test
mov
and
je
xchg
sbb
xchg
push
ss
pop
ljmp
test
adc
mov
insl
mov
inc
movsl
add
test
mov
daa
sbb
out
dec
adc
fbstp
and
or
cld
mov
pop
push
inc
xor
push
ss
imul
inc
outsl
and
dec
and
add
jo
adc
xchg
push
sar
mov
lret
adc
or
fimuls
inc
push
xor
xor
lret
or
icebp
pop
shrb
bound
mulb
adc
outsb
mov
repz
push
sbb
jl
inc
pushf
sbb
sbb
xchg
mov
adc
mov
adc
lcall
aas
je
mov
das
xchg
or
in
jbe
mov
mov
lock
inc
sbb
mov
nop
cmpsb
mov
pushf
adc
inc
xchg
mov
std
push
mov
cmp
adc
in
fidivs
addr16
arpl
adc
mov
jmp
call
pop
xor
hlt
enter
xchg
js
jo
dec
sti
pop
xchg
pop
mov
pop
icebp
add
fsubs
add
aad
cli
popf
cmc
xchg
js
test
cli
test
shrb
fstps
lock
sub
mov
pop
cmc
in
sbb
add
push
mov
add
test
loop
jo
pusha
inc
ljmp
mov
fs
stc
and
mov
dec
xorb
gs
add
pop
lea
xchg
dec
or
push
lds
nop
xchg
pusha
aaa
add
aad
cmp
test
arpl
loop
mov
and
pop
push
imul
xor
mov
sbbb
test
push
pop
decl
pop
mov
mov
hlt
testl
pop
int3
lds
jle
lret
cmpsl
jo
and
adc
add
int
movsl
sarb
popf
pop
es
outsl
push
xor
jge
outsb
lock
or
pusha
roll
cmp
xchg
xchg
sub
mov
jp
roll
sarb
dec
stc
xor
lahf
lea
jne
cli
jecxz
dec
cs
out
test
sahf
cli
test
incl
inc
xchg
and
dec
inc
sbb
and
test
jmp
lahf
sbb
or
sbb
and
mov
pop
or
je
and
outsb
adc
test
jle
xchg
stos
push
mov
mov
add
and
add
in
pop
les
loop
xchg
lock
scas
scas
outsb
jl
cld
fcomip
rolb
push
jmp
jecxz
ret
adc
lahf
xchg
mov
pop
inc
mov
test
cmpsb
mov
and
cld
movq
ret
xchg
enter
add
mov
incb
mov
lods
add
lods
fldl
pop
jg
dec
insb
push
mov
push
dec
push
xchg
loopne
add
scas
add
popf
fst
cmp
mov
adc
rcrl
subb
insb
sarb
inc
imul
test
mov
jo
sub
inc
js
xor
push
jns
aam
add
outsl
add
xchg
xlat
scas
sbb
push
xchg
jg
rcr
addb
add
mov
rcrb
aaa
std
pop
fimull
jb
je
or
push
js
scas
lock
mov
push
imulb
lods
call
bnd
dec
es
mov
sub
jne
mov
xorl
mov
out
shl
pop
cwtl
sbb
pop
sahf
inc
cmp
popf
mov
scas
adc
pop
lock
and
xor
sti
sbb
lahf
daa
add
rcrb
xchg
ds
mov
mov
inc
loop
or
in
inc
pop
lock
rcll
mov
mov
add
rcrl
or
fdivl
inc
pusha
pop
imull
adc
cmp
es
dec
ljmp
sbb
adc
adc
movsb
sar
push
mov
movsl
sbb
inc
sbb
push
std
das
hlt
sbbb
and
test
imul
aaa
push
sbb
add
pop
xor
mov
mov
mov
je
filds
loopne
lret
jmp
sbb
mov
ret
xchg
xchg
cmpsb
lock
sbbl
add
sahf
push
imul
lcall
mov
clc
lahf
sub
add
jp,pn
rorb
aas
sbb
pop
adc
dec
incl
push
loop
incb
mov
fadd
push
shll
scas
mov
jb
or
jmp
dec
loope
jmp
cmpb
jb
dec
xchg
in
pop
push
cmc
add
test
mov
adc
xor
pop
adc
mov
ret
and
shl
adc
pop
inc
push
lds
and
addr16
lcall
gs
fsubp
jae
add
fcomip
push
push
sbb
adc
int3
push
call
pop
add
mov
mov
or
aaa
repz
xchg
nop
repz
loop
mov
cmp
and
sbb
out
orl
shrl
fwait
mov
fstps
dec
shrl
fs
fsubrl
mov
inc
loope
mov
lcall
add
enter
fildll
lea
jno
mov
pushf
lods
loopne
adc
cmp
sti
mov
pushf
pop
repnz
push
push
movsb
xchg
pop
out
bound
or
in
clc
add
scas
adc
aaa
shlb
mov
adc
sbb
and
rcll
bound
js
inc
push
and
insl
pop
xor
pop
andb
orl
ljmp
aas
inc
xchg
cmp
xlat
or
fldl
pop
add
hlt
mov
in
lock
mov
cs
mov
add
add
test
push
xor
inc
ss
clc
rcr
jmp
mov
outsl
pop
add
rol
sahf
sahf
cli
jle
fcomip
inc
or
nop
arpl
mov
dec
xor
shrl
cmpsb
push
addr16
int
jecxz
incl
je
dec
test
xchg
arpl
adc
pop
subl
out
add
fildll
loope
mov
sub
add
pop
ja
sbb
sub
test
sub
or
adc
fwait
incl
call
mov
xlat
jnp
icebp
clc
mov
or
sub
scas
pusha
mov
lods
inc
mov
push
in
in
insb
fsubrs
cld
mov
add
loopne
pop
shrb
call
push
mov
aad
aas
arpl
dec
jns
adc
addr16
mov
adc
lret
mov
les
ds
jg
sub
add
je
or
loope
adc
lahf
add
scas
jl
fstl
inc
inc
and
mov
test
and
add
add
mov
stc
add
inc
out
jne
ja
jp
jne
mov
xorl
fisubs
mov
sbbl
ss
cmp
enter
sbb
mov
and
push
jle
inc
jne
sti
or
movsb
cmp
fidivs
in
dec
inc
ret
pushf
iret
leave
aaa
cmp
fwait
jmp
mov
sbb
sub
pushf
inc
mov
shlb
jbe
push
xor
inc
jb
outsl
pushl
adc
mov
jb
mov
aam
inc
cmpsb
and
mov
fcoml
pop
enter
mov
push
sbb
repnz
pop
push
and
out
ficompl
or
adc
mov
sahf
mov
out
pop
rorl
push
ja
push
test
outsl
jno
iret
fidivl
movsl
shlb
or
cli
xchg
shrb
loope
push
sbb
push
test
nop
int3
not
jg
sbb
ljmp
dec
or
adc
mov
cmp
dec
mov
pop
adcb
mov
add
pusha
insb
scas
scas
test
ja
add
rclb
ljmp
jo
data16
fiadds
repz
mov
mov
idivb
pop
jmp
ss
add
or
push
sbb
push
mov
test
jge
loope
rolb
cmp
loopne
jmp
sub
out
pop
sub
jp
mov
repnz
pop
push
lcall
mulb
mov
lahf
sarb
mov
xor
add
adc
push
sbb
jle
lcall
mov
daa
push
mov
adc
add
pop
mov
add
call
sub
xchg
jo
testl
push
lret
mov
sbb
cmpsb
cli
jg
cmp
push
movsb
shlb
movsl
jl
cmp
cmpsb
aam
popf
ret
xchg
jno
jecxz
jne
shlb
sbb
jle
test
test
dec
jmp
xor
in
add
aad
cli
push
pop
xor
cwtl
cs
out
hlt
outsl
sub
mov
hlt
movb
sti
sbb
inc
adc
add
loopne
jno
out
sbb
cmp
jle
adc
dec
daa
xchg
lcall
mov
pop
mov
lcall
adc
fsubs
cmc
adc
sbb
mov
int3
sahf
jg
clc
xor
sub
pop
ret
xchg
sub
in
pop
sarb
sub
inc
loopne
mov
push
sub
pop
sbb
pop
pop
xchg
addl
jecxz
popa
xor
popf
jo
loope
inc
jle
or
movsb
testb
mov
xlat
loopne
pop
dec
movsl
mov
scas
adc
out
jmp
outsl
jle
mov
add
push
push
or
pushf
add
out
pop
xchg
test
xor
and
cmp
negb
inc
iret
clc
mov
push
add
sbbb
push
inc
sub
lods
xchg
stc
xor
and
sbb
mov
and
pusha
jnp
xchg
push
push
fs
fmuls
inc
adc
jnp
jae
inc
repnz
push
dec
xchg
shl
aaa
jg
dec
dec
stos
jl
lods
push
es
lret
dec
xlat
mov
cld
gs
fildll
into
fcoml
xor
movsl
ljmp
mov
adc
enter
int3
pop
bound
lods
fdivs
and
xorb
sar
fsubp
jb
cmp
mov
lret
or
inc
mov
sahf
test
dec
mov
sbb
mov
jne
xor
std
mov
cwtl
adc
mov
lcall
les
hlt
roll
mov
and
popa
loop
movsb
enter
ljmp
sbb
mov
aam
lret
test
lock
aam
mov
jg
jg
cli
in
into
add
movsb
test
jo
imul
dec
add
stos
fbld
stos
xchg
pushf
sbb
dec
or
inc
mov
jecxz
loopne
ljmp
inc
int
cmpsl
xor
pusha
cmp
sub
mov
rorl
into
push
ss
mov
dec
mov
sbb
jle
pop
stos
xor
push
adc
and
fistl
push
iret
jg
lret
pusha
fistpll
stc
sbb
rorb
inc
ja
cmc
and
shrl
jp
add
daa
inc
scas
mov
out
dec
mov
movsb
rclb
mov
push
stos
cmp
movsl
movsl
scas
test
repnz
movsl
pop
add
sar
sbb
adc
les
sub
cmp
testb
jge
add
add
aas
jle
mov
push
ljmp
icebp
aad
test
out
and
jle
ficoms
or
push
cmp
scas
filds
arpl
pushf
enter
mov
cld
adc
sar
mov
inc
lret
pusha
shlw
std
outsb
jl
pop
or
add
ret
xchg
pop
enter
push
or
cwtl
mov
ss
lcall
cmp
fmuls
jge
xchg
and
add
pop
pop
leave
ret
pop
pop
ret
add
and
leave
ret
adcb
out
out
ret
or
and
cmp
fildl
and
adc
add
inc
add
pop
nop
pop
nop
pop
add
adc
and
in
ljmp
pop
adcb
adc
mov
popf
mov
cmp
add
and
pop
addb
push
adc
insl
lret
sbb
adc
and
sti
outsb
popa
dec
push
adc
addb
int3
int3
add
xchg
lods
inc
push
and
and
adc
fldcw
dec
sbb
push
leave
inc
cmp
dec
lock
xor
mov
add
scas
aam
cmp
inc
and
adc
add
rorl
jo
mov
fimuls
ret
add
in
push
jno
inc
add
adc
ss
push
add
pop
add
andl
push
add
jno
dec
pusha
out
pop
add
insb
mov
push
adc
insl
insb
adc
cmpsb
push
xor
dec
mov
inc
inc
imul
add
mov
andb
and
xor
dec
mov
add
add
dec
jg
push
and
adc
and
sbb
and
inc
mov
inc
adc
inc
inc
inc
and
inc
pop
and
hlt
jbe
fucomip
lods
add
insb
es
and
adc
subb
nop
and
inc
and
inc
mov
imul
inc
and
shrb
inc
inc
push
add
mov
ret
add
inc
dec
inc
in
fistpll
inc
inc
and
subb
inc
and
and
add
jbe
mov
dec
add
push
fisubl
pop
dec
mov
inc
inc
xor
sahf
lods
insl
enter
add
orb
adc
int3
outsb
out
add
inc
mov
out
push
add
imul
pusha
adc
cmp
shll
push
lods
dec
adc
push
clc
pop
inc
inc
push
dec
and
add
add
add
adc
push
lcall
pusha
and
dec
mov
sub
sbb
and
mov
fldcw
adcb
adc
sub
sub
enter
pop
and
int3
pushf
sbb
push
dec
jl
in
add
cmpsb
push
mov
pop
and
jb
test
add
in
and
addb
add
add
inc
into
or
inc
and
sub
or
or
and
mov
cmp
popa
jo
test
push
xor
pop
inc
add
pushf
sub
fiadds
xor
andb
inc
repnz
and
mov
mov
dec
in
lcall
add
adc
bound
in
arpl
push
pusha
and
xchg
xor
scas
xor
cmp
mov
sbb
inc
push
sub
or
and
out
dec
jo
cmp
fcompl
data16
mov
jo
imul
loopne
and
xchg
sbb
cmp
pop
int
cmovle
cmp
nop
lcall
sub
xchg
loopne
scas
ficomps
cmp
pop
sub
rcll
dec
pop
add
xchg
mov
ficoms
jmp
adc
pop
push
andl
mov
add
pop
pop
cwtl
loope
jo
add
sbb
loopne
pop
cvtpi2ps
add
sbb
fsts
add
and
xor
stos
xor
shlb
adc
and
xchg
mov
and
jl
stos
pop
aaa
push
lock
xchg
mov
add
cs
dec
testb
inc
mov
and
cltd
sbb
xchg
push
mov
je
test
push
push
in
andl
mov
shll
mov
push
hlt
xchg
mov
pop
cwtl
pusha
mov
or
lcall
or
and
or
lock
mov
mov
pop
dec
jle
pop
paddsw
loopne
jp
outsb
mov
sbb
xor
adc
sbb
cmp
or
cwtl
lret
xor
add
stos
stos
je,pn
xor
dec
inc
fmuls
js
jl
mov
add
add
test
cwtl
mov
or
xchg
xchg
ss
enter
mov
adc
dec
cmpb
mov
adc
and
les
pop
mov
mov
test
test
xchg
pop
cpuid
mov
or
dec
inc
cmp
and
xchg
sub
mov
push
ss
add
sub
scas
or
fs
push
push
inc
push
add
push
enter
add
and
out
xchg
flds
loop
and
add
pushf
pop
and
and
add
pop
cmp
cmpsb
lret
test
pop
cmp
mov
jp
adc
mov
ret
add
inc
mov
cs
fcmovb
lods
sahf
and
xchg
inc
fs
add
mov
sbb
inc
int3
push
andb
cmp
dec
test
les
sub
push
mov
sub
popa
idivb
mov
pushw
mov
and
je
xor
pusha
cmpsb
roll
cmpsb
addb
or
dec
inc
dec
xor
fnstenv
adc
and
mov
addl
dec
adc
int3
loop
rorl
fsub
xchg
sbb
jp
sbbb
and
stc
adcb
push
scas
repnz
and
loop
inc
sbb
adc
aam
mov
jp
ret
mov
ret
push
adc
add
data16
sbb
add
mov
lds
adcl
xchg
pop
jl
in
mov
mov
sbb
xchg
dec
repnz
xchg
sub
jbe
and
fidivs
lods
cmp
adc
nop
es
inc
xor
xor
add
inc
push
imulb
jb
adc
cld
aam
add
push
mov
xchg
mov
sbb
flds
sub
sbb
add
mov
xor
adcb
sub
and
jbe
push
in
fsub
lods
out
push
out
subb
xor
inc
dec
or
pusha
outsl
jp
sbb
shr
dec
pop
push
adc
push
cwtl
jo
and
sub
or
jo
pushf
push
push
push
addb
mov
mulb
lds
in
xor
pop
mov
add
pushw
data16
pushf
aam
push
fimull
mov
inc
jbe
xor
cwtl
or
dec
out
cwtl
rol
inc
adc
cwtl
inc
push
add
push
mov
jp
ljmp
rclb
mov
xor
js
pusha
lock
xor
dec
or
jbe
and
inc
test
push
adc
daa
mov
or
aam
cmp
pusha
adc
jb
and
xor
add
loope
cmp
or
ss
add
fs
xor
sbb
push
pop
cmpsl
mov
test
dec
ret
sbb
or
mov
sbb
shlb
int
or
lock
adc
js
add
sub
inc
xchg
out
jne
imul
lret
add
dec
pusha
addl
add
xchg
nop
sbb
fs
adc
loopne
sbb
adc
and
nop
xor
ret
push
les
test
out
inc
pop
pop
and
leave
mov
push
pop
pusha
push
add
fmuls
add
sbb
push
inc
push
cmp
inc
cmp
pop
sbb
data16
push
mov
cld
jbe
push
das
and
shlb
inc
push
loopne
xchg
test
loop
and
sbb
rcl
adc
sub
cmp
loopne
jo
addr16
xor
adc
inc
xor
mov
cs
cmp
add
add
adc
sub
sahf
and
cmp
bound
add
imul
xchg
adc
xor
fcmovb
or
lods
add
cmpb
xchg
sbb
dec
out
xchg
add
add
pop
cmp
fcoml
ljmp
cltd
adc
fcoms
dec
mov
jnp
push
mov
cli
shlb
dec
scas
push
xchg
test
and
add
or
cltd
rorl
pop
enter
popf
scas
push
xchg
call
or
mov
or
dec
add
sbb
jle
roll
ljmp
add
movl
in
hlt
fmull
inc
cmp
mov
mov
inc
jle
mov
xor
sub
cmp
push
movsb
fsub
xor
cs
inc
les
dec
adc
inc
mov
das
repz
mov
inc
mov
add
inc
adc
dec
movsb
shlb
add
push
cmp
mov
sbb
inc
call
sbb
add
nop
cmp
shlb
pushf
inc
and
fiaddl
cmp
lret
dec
lock
push
subb
sbb
jl
lock
or
cwtl
and
adc
sbb
enter
xchg
dec
mov
ljmp
mov
adc
cld
and
movsb
aam
lcall
adc
dec
add
cmpb
inc
adc
es
sbbl
insb
sbb
rcll
jl
jl
loop
add
cmp
addb
or
mov
pusha
or
mov
xor
pop
jae
jl
cli
cmpsb
rorb
shl
cmp
pop
lret
cltd
sbb
lcall
xchg
bound
popa
sbb
sbb
lods
push
xacquire
mov
data16
rorl
inc
xchg
es
ror
inc
movsb
pusha
mov
es
pusha
je
add
stos
lock
and
mov
movsb
cmp
js
jle
adc
hlt
inc
mov
push
sub
push
push
cmp
out
xchg
inc
add
mov
sarb
inc
and
xchg
inc
xor
fs
dec
jo
cli
js
mov
xor
or
in
cld
inc
ljmp
add
cmp
dec
sbb
rcrb
and
pushf
in
add
js
and
cmpsb
xchg
call
movsb
shlb
jae
sbb
pop
sub
sbb
sub
pop
nop
mov
or
push
ljmp
dec
faddl
adc
addl
mov
adc
scas
test
add
adc
sbb
sbb
add
fs
dec
cmp
pushf
rcrb
jo
fxch
insb
push
push
dec
pushf
mov
jp
in
adc
aam
test
jo
popa
movsb
int3
push
jmp
mov
add
movl
mov
incl
mov
sbb
mov
add
sti
adc
add
mov
add
and
push
jnp
xor
fwait
dec
jbe
repz
sbb
sti
in
sub
pop
mov
and
adc
out
inc
add
bound
ret
adc
mov
xchg
sub
in
push
mov
jp
inc
add
dec
mov
in
neg
mov
cld
dec
ret
add
dec
mov
pop
cmp
or
into
mov
dec
enter
add
xchg
inc
and
push
xchg
add
cld
fcompp
and
add
push
lahf
loopne
shlb
inc
add
fimuls
push
mov
jo
adc
mov
or
roll
add
loope
add
mov
xlat
popa
insl
cmpl
loopne
or
popf
frstor
out
cmp
mov
adc
ret
push
lock
hlt
sbbb
push
dec
adc
mov
out
xor
hlt
pop
in
or
and
ss
and
push
hlt
adc
flds
loopne
call
adc
mov
inc
inc
and
jbe
pop
faddl
and
adc
jae
xor
cli
jns
and
fistpll
dec
sub
xchg
or
pop
jl
adc
or
mov
cmpl
rcrl
in
mov
mov
shl
or
xchg
xor
cmpsb
std
pop
mov
lea
push
or
fwait
div
sti
hlt
push
push
push
rcll
pop
outsb
jne
mov
push
addb
mov
adc
inc
mov
sub
add
push
cld
outsb
jbe
ss
and
mov
or
fisubs
fcoms
or
pop
shll
bound
sarl
roll
testb
outsl
adc
in
jb
xchg
rcrb
dec
push
sti
xchg
mov
and
sbb
les
test
pusha
sti
in
and
stos
div
movb
pop
sub
add
adc
xor
das
into
insb
fdivs
les
shlb
push
mov
jmp
and
inc
dec
ja
sbb
andb
mov
mov
jne
and
testb
rorb
cmp
mov
cwtl
popf
pop
test
sbb
bound
push
ss
call
cmp
or
leave
adc
adc
shl
pop
cmc
adc
pop
mov
jle
inc
xchg
add
sbb
mov
sbb
aaa
push
mov
sbb
mov
dec
sub
cli
test
or
pop
cmp
pop
push
mov
iret
rolb
sbb
out
add
or
bound
iret
xchg
xchg
cmp
popl
sbb
sbb
loope
jl
add
or
pop
lods
add
add
enter
popa
clc
mov
cmc
fcomi
inc
pop
or
repz
mov
and
aaa
pusha
and
lods
sbb
jge
xchg
xor
icebp
pop
lret
or
or
jo
jo
out
mov
inc
add
outsl
jmp
cmp
add
xchg
movsl
and
lds
add
add
fwait
or
enter
test
push
pop
pop
dec
sbb
stos
cltd
jl
adc
negb
mov
jne
sub
add
int3
xor
and
sti
in
cmp
mov
dec
pop
fdiv
arpl
fcomps
and
mov
jg
xor
sbb
icebp
loopne
inc
xchg
notl
jmp
outsb
ja
mov
sbb
popa
ficomps
add
and
pop
xor
adc
jg
mov
test
sbb
loop
mov
add
pop
repnz
ret
push
jae
mov
test
loopne
loopne,pt
add
sub
mov
loopne
sub
mov
std
lcall
sbb
push
js
push
cmpsl
mov
iret
lods
std
sub
and
push
adc
out
mov
add
xor
inc
insl
divb
scas
cwtl
call
enter
pop
inc
xor
sbb
pop
xor
fisubl
ret
outsl
pop
clc
xorb
rorb
shl
jp
adc
out
push
cs
loopne
aas
test
lret
mov
add
stos
mov
sub
mov
loop
lock
sbb
fiaddl
and
ret
lods
stos
jle
rclb
push
xchg
dec
inc
insb
ljmp
xor
jl
adc
enter
add
add
or
ret
jbe
push
xchg
dec
call
in
add
dec
sbb
pop
sbb
dec
sti
lock
mov
jg
daa
fistpl
aam
or
test
jecxz
and
mov
fsts
lock
fldl
xor
sbb
pop
sub
sti
jp
cmp
cmp
cmp
and
sbb
pop
sub
adc
in
add
rclb
add
push
lea
push
push
pop
lcall
inc
pop
sbbl
dec
sbb
inc
xchg
scas
leave
inc
pushf
dec
push
ret
add
mov
mov
or
and
es
lock
test
ljmp
dec
sbb
xor
mov
xor
push
divb
movsl
ja
nop
mov
cmc
ret
dec
jg
leave
ret
shl
pusha
push
setg
sub
sbb
bts
fists
hlt
fistl
jb
inc
shl
ret
or
adc
test
les
cmp
pusha
cmp
cmp
roll
popf
jnp
jo
xlat
not
adc
cmc
add
shr
test
pop
sti
pop
cmp
or
fisubs
movsl
cmp
call
xchg
enter
jno,pt
and
sbb
test
mov
add
add
mov
loopne
insl
fs
je
stos
lcall
fcompl
inc
out
xchg
popa
loop
call
sbb
and
scas
clc
mov
aam
push
cmpsl
pop
mov
fistl
testl
insb
adc
sub
push
nop
jecxz
aas
jge
or
pop
push
int
jl
ret
pop
cld
enter
inc
sub
push
dec
add
das
dec
mov
xor
mov
xor
adc
or
add
scas
into
add
sbb
sub
subl
cmp
adc
fisubs
inc
das
push
jge
and
popa
ret
and
lcall
outsl
xchg
jmp
repz
loop
out
sub
adc
enter
pop
adcb
dec
call
inc
ffree
push
jmp
mov
fistps
out
or
bound
sbb
dec
pop
cmp
mov
nop
sub
sbb
mov
mov
sbb
or
jbe
add
adc
enter
xchg
or
mov
xor
je
iret
test
jle
movsl
cltd
and
clc
or
out
mov
test
cs
adc
les
inc
fsub
aas
loop
popa
cmp
out
pop
add
dec
inc
roll
push
addb
fwait
clc
mov
sub
incb
aam
inc
call
mov
push
add
xor
fdivs
adc
jb
jbe
addl
es
mov
inc
xlat
add
add
test
xchg
pop
and
fisttps
insb
mov
adc
adc
or
outsl
xor
and
sti
mov
lods
adc
loopne
mulb
cmpsl
dec
jo
jmp
cmp
mov
mov
sti
dec
test
cs
icebp
jne
ss
nop
aaa
push
inc
sahf
push
cmp
clc
xchg
pop
fdivrl
leave
dec
nop
mov
fsts
mov
mov
push
mov
adcl
mov
inc
jp
pop
mov
mov
xchg
fcompl
fisubl
cmc
jge
add
sbb
jecxz
lret
rorl
addl
insb
push
fwait
push
ret
inc
add
sbb
ffreep
sbb
mov
ficompl
pop
mov
jne
sub
push
enter
inc
mov
testb
mov
mov
test
les
ret
pop
sbb
xor
int
mov
std
mov
mov
adc
and
call
mov
cmc
jnp
sbb
and
outsb
push
in
adc
ret
jle
call
mov
push
jb
imul
dec
pop
jmp
and
push
es
push
add
jo
je
ds
mov
xor
arpl
push
repnz
push
loopne
jp
adc
add
hlt
aaa
out
js
jbe
fsubs
cmp
fidivl
sbb
mov
aaa
scas
cmp
mov
out
popl
dec
mov
dec
sbb
inc
pushl
push
loopne
icebp
je
stc
insb
int3
cli
push
jbe
call
dec
add
pop
dec
xor
adc
rolb
cltd
sbb
pop
sub
lods
pop
cmp
shlb
cli
mulb
ret
movsl
cmp
inc
inc
mov
aaa
dec
rcl
or
push
sbb
iret
add
je
ret
pop
cmp
rcrl
icebp
fnstsw
in
jne
decb
fdivp
loop
mov
xor
inc
add
mov
mov
jl
daa
cmpsb
or
loope
mov
imul
je
add
push
pusha
sub
xor
rcrl
adc
cmp
add
cwtl
jl
scas
pop
mov
sti
int
add
rcrl
mov
and
imul
out
dec
sbb
mov
mov
xchg
sbb
testl
and
sbb
bound
or
and
mov
or
pusha
cmpsl
jg
push
outsb
dec
fimuls
push
adc
add
mov
shll
mov
test
or
lods
cmpsb
sbb
filds
sbb
cmc
cmp
inc
sub
push
dec
fdivs
or
mov
hlt
cli
pushf
filds
jns
sarb
mov
xchg
pusha
add
xlat
mov
dec
pop
ds
fildl
clc
add
mov
adc
pusha
mov
pop
loop
out
dec
push
lds
add
fstpt
add
add
dec
fists
xchg
mov
es
test
sub
cs
jne
jle
cmc
negl
add
sbb
lds
push
mov
mov
or
fsubrs
into
inc
push
movsb
sub
loope
cmpsl
mov
mov
mov
inc
xlat
or
sbb
xor
or
loop
ja
adc
adc
std
cmp
ret
lods
push
pop
jmp
xchg
outsl
mov
mov
add
xor
aam
jmp
push
mov
jnp
adc
jecxz
loop
or
ret
fadds
xor
jb
push
test
and
jge
pop
cld
dec
test
call
push
push
mov
js
lret
fcoms
je
hlt
push
or
out
cmp
jb
pushf
cltd
xor
add
sub
fbld
pop
pop
aad
addl
stc
js
or
scas
ret
pause
pop
idivl
aas
add
jmp
xchg
jbe
xchg
fstpl
inc
jae
movsb
pop
xor
stos
mov
clc
pop
inc
inc
pop
adc
xchg
add
nop
mov
mov
inc
aad
das
ret
mov
dec
or
and
icebp
mov
or
pop
imul
xchg
loopne
jns
cmpsl
imul
jg
sbb
or
mov
mov
jecxz
rolb
inc
sub
sbb
rolb
xchg
adc
lods
cld
add
pop
ja
cmp
push
rclb
adc
fldl2t
mov
pop
cmp
jne
fwait
push
das
sbb
jmp
add
das
and
push
sbb
xor
adc
or
jmp
mov
sub
loopne
aaa
ret
aaa
jb
mov
lds
getsec
ss
add
mov
mov
add
adc
dec
sbb
or
rorb
xor
lock
dec
cmp
or
dec
and
xor
mov
shl
sub
test
lcall
mov
ss
addr16
insb
sbb
jecxz
dec
xchg
xlat
cli
adc
mull
add
js
sub
sbb
and
aas
adc
loopne
sbb
rcr
lock
ss
sbb
lret
cltd
sarb
and
push
xchg
loop
aad
add
jbe
cs
ret
fsubr
pop
adc
stos
xor
call
les
sub
pusha
jo
inc
sbb
jno
sbb
or
jne
rcl
jg
dec
fadds
xor
jmp
or
testl
sbb
lret
test
in
cwtl
xchg
je
jp
mov
sub
jbe
repnz
lds
jo
jo
mov
and
testb
pop
sub
mov
test
jg
push
jecxz
add
shlb
in
jne
sub
mov
icebp
push
pop
jmp
dec
frstor
lret
sbb
popa
mov
repz
mov
pop
and
mov
jg
push
xlat
rcrl
jmp
ds
test
inc
xor
push
xor
adc
mov
or
lods
fdivrs
aad
cmp
test
mov
les
or
jno
push
imul
aas
sarb
aad
cmp
nop
loopne
cmp
test
jno
shlb
mov
sub
sub
xchg
push
cmp
clc
in
xor
lock
add
gs
and
cmp
push
cmp
out
add
inc
jg
out
or
add
mov
popa
fistpl
xor
addb
xlat
cmp
jne
lahf
mov
popa
adc
xor
shll
cmp
add
push
adc
movsb
test
add
add
sarl
inc
mov
jp
sbb
mov
fiaddl
in
in
jp
add
int
fcom
push
sbb
fisttps
and
aaa
loope
pop
jge
mov
rol
add
test
and
mov
xor
pop
xchg
shll
mov
push
add
jbe
mov
or
pusha
and
and
push
loopne
pop
inc
dec
cs
outsb
jg
leave
and
pop
sbb
add
fimull
or
push
stc
in
lea
adc
call
rolb
jne
aas
push
mov
add
popf
jmp
outsl
xchg
jmp
popa
mov
push
mov
xor
cmp
inc
cmp
xchg
adc
inc
or
lret
loopne
popa
rcrl
fs
into
pop
shl
and
sbb
movsb
sbb
and
xchg
or
sarl
je
rorb
out
mov
shr
jb
movsb
outsb
xchg
adc
pop
push
adc
add
mov
pop
flds
jmp
leave
ficomps
mov
xlat
dec
dec
push
into
cwtl
jno
outsb
pop
inc
adc
movsb
adc
test
je
adc
ret
dec
leave
dec
mov
jbe
add
addr16
mov
pop
cmp
addr16
jle
adc
sarl
rcll
bound
jp
fisttpl
addb
adc
test
ss
sub
jge
test
lods
aas
sbb
cli
fists
test
call
cmp
mov
dec
aam
or
fidivl
pushf
jmp
aam
jo
pop
bsr
xor
mov
inc
jg
icebp
mov
xor
sub
in
mov
or
mov
jmp
rol
and
inc
adc
adc
and
sbbl
pop
clc
add
inc
mov
fsubs
repz
aas
fisttpl
push
add
dec
test
add
gs
xor
repz
push
xor
jmp
aam
push
incl
sub
push
xchg
clc
lock
js
in
sbb
leave
and
pop
inc
cwtl
or
and
add
shll
pop
sahf
or
dec
popf
enter
push
jne
test
dec
mov
add
inc
or
testb
ds
jne
rcll
mov
cmp
ja
mov
adc
and
push
pusha
cmpsl
stos
loopne
cmp
in
mov
pusha
shr
scas
enter
popa
fs
js
jbe
cmp
loop
cld
or
int3
or
push
pop
fs
sub
outsl
daa
pop
cmpsl
cs
add
ficoms
or
cs
mov
cmp
sub
repnz
fstl
jmp
xacquire
mov
jne
ret
bound
cmp
xor
add
add
xchg
mov
outsl
stos
pop
aas
cmp
ja
in
jge
sbb
pop
cli
adc
les
std
lods
sahf
jle
jmp
jb
push
adc
lock
loop
stos
scas
loope
pop
jbe
rcrl
inc
movl
xchg
or
xor
or
jo
inc
lea
and
lods
and
push
dec
adcl
jbe
out
mov
in
inc
add
repz
or
loope
push
mov
clc
sub
shrl
rolb
in
xor
stos
pop
sub
mov
popf
xor
cmp
fmuls
cli
cli
cwtl
push
add
add
roll
wbinvd
mov
loope
jnp
fwait
xor
fdivrl
cmp
repz
ljmp
mov
lret
or
mov
dec
mov
je
mov
rclb
icebp
cmp
lahf
rcll
push
mov
jo
and
into
or
or
addr16
pop
mov
pop
rcll
and
mov
test
and
fidivl
dec
clc
addr16
rclb
add
cs
int3
sbb
adc
jp
pop
adc
inc
xchg
lock
jne
and
int
aad
xchg
xchg
lahf
mov
push
push
std
inc
popa
push
jbe
dec
dec
push
and
sub
add
pop
insb
push
xor
mov
pop
stos
sub
loopne
mov
test
mov
mov
not
mov
roll
or
push
pop
cmp
pop
and
mov
hlt
icebp
sbb
xchg
clc
cmp
pop
lret
clc
and
jnp
push
sub
adc
jmp
xor
inc
testl
push
dec
jp
pop
leave
inc
push
aam
push
hlt
sub
push
or
mov
or
fildll
fidivrl
enter
push
int3
add
jl
pop
adc
lret
jo
inc
jbe
pop
das
push
test
adc
cld
test
push
call
cmp
jbe
shr
lea
and
pop
test
mov
fsubr
loopne
popf
sbb
and
sub
add
out
dec
add
dec
add
scas
ret
or
test
jbe
out
and
rcrl
add
sub
adc
ret
ret
ret
and
add
cmpsl
xor
cmp
mov
iret
fsubs
fimull
pop
clc
sbb
dec
pextrw
cmpsl
dec
js
dec
out
xor
ret
sbbl
aam
add
hlt
mov
rorl
mov
cli
fiadds
loopne
and
and
dec
cmp
insb
insl
pusha
cmp
js
jl
shll
fsubrs
lods
cltd
cmpb
shrb
xchg
sbb
jbe
icebp
lods
test
jmp
icebp
and
mov
mov
out
cmp
sbb
push
cmp
lock
inc
fistpl
adc
popa
push
aas
and
das
aaa
add
ret
out
mov
adc
adc
mov
jmp
sub
inc
aad
or
sub
sub
sbb
rcl
jp
and
mov
jecxz
repnz
xor
pushf
je
mov
loop
testb
adc
mov
rcl
movsb
sbbl
hlt
sub
and
add
in
mov
adc
fmuls
lock
jo
pop
and
outsb
xor
sbb
test
adc
clc
addl
cmp
ja
jns
xor
jne
jbe
xor
mov
test
add
subl
and
cmp
in
cmp
jecxz
sub
xor
mov
inc
cmp
sub
or
sub
and
sbb
fwait
loopne
pop
test
les
aas
mov
mov
adc
dec
mov
or
fstpl
add
add
and
push
dec
rcll
xchg
adc
mov
ficoms
mov
in
cmp
ss
push
clc
push
bound
jne
cmp
pushf
xor
jg
jmp
push
cmp
cmp
sbb
adc
and
adc
cmp
je
sbb
fadds
jb
and
push
add
fiadds
js
je
mov
outsb
jl
push
out
xchg
add
shll
rcrb
or
jo
cmp
iret
cli
aad
sub
and
sub
loopne
sub
or
inc
out
add
cmp
fmuls
enter
dec
mov
pop
test
mov
andb
in
sub
cmp
and
fidivl
or
cmpb
add
inc
pusha
aaa
movl
add
add
lret
xor
jp
ret
test
pop
ror
es
bound
add
and
push
data16
and
cmp
adc
je
cmpsl
xchg
loopne
push
adc
or
cmp
jle
popa
add
roll
ss
sbb
push
sub
pop
xor
loope
imul
xchg
clc
mov
xor
adc
mov
or
in
or
dec
mov
mov
fsubrl
repnz
rclb
cmp
adc
push
test
jne
sahf
pusha
push
xchg
lock
pusha
xchg
jmp
sti
and
or
xchg
mov
loope
aad
lock
int
std
inc
test
pop
out
lods
push
cs
mov
out
bsf
jmp
loop
jb
fistpll
xorb
pusha
dec
fdivrl
ret
nop
push
inc
push
scas
sbb
sub
lock
adc
cld
sbb
js
jmp
mov
mov
jne
pop
and
push
fdiv
test
adc
cld
pop
jbe
add
sbb
call
pop
test
xchg
mov
loope
repnz
adc
sbb
inc
pop
xchg
add
sub
xchg
movsl
and
adcl
sub
mov
add
push
xor
xor
mov
jle
mov
jge
or
loop
test
addb
mov
xorb
mov
lock
repz
mov
mov
rolb
pop
popa
jp
or
pop
push
cwtl
xchg
ret
sbb
rorb
outsb
test
call
pop
cmp
addr16
std
fwait
packsswb
mov
add
hlt
and
push
adc
daa
pusha
es
mov
add
mov
sbb
mov
xchg
inc
lds
jmp
inc
or
pop
call
adc
push
data16
pop
andl
xchg
mov
mov
test
inc
add
fwait
les
pop
jnp
ss
or
adc
call
aaa
cli
mov
or
shll
imul
mov
repnz
jmp
arpl
int3
push
or
repz
adc
pop
loopne
dec
js
int
loopne
test
pop
pop
dec
push
xchg
inc
xlat
subl
nop
jecxz
and
ja
test
rep
fstpl
cmc
jo
rorb
add
sub
xorb
dec
shlb
test
sti
sub
sbb
mov
pop
test
jns
loop
jle
std
and
cmpxchg
nop
pop
push
insb
sbb
adcl
fnstcw
jle
loopne
sarb
dec
test
ret
sahf
fadds
push
out
insb
out
or
stos
jno
lock
orl
or
push
test
lock
shlb
call
sbb
mov
addb
lock
mov
mov
push
mov
imul
add
sub
cmc
mov
dec
and
push
sub
jg
sbb
mov
pop
dec
or
cs
add
outsb
mov
ja
test
pushl
ds
pop
mov
mov
loopne
shr
lret
cli
add
rolb
popa
insb
shl
aad
pop
pop
add
fsubrl
lods
jp
insb
push
call
push
fldl
cmpsb
xchg
icebp
setl
cmp
or
jge
cmpsl
and
push
pop
sbb
jg
out
sarb
dec
dec
pop
rcll
mov
cld
pop
or
mov
add
add
jecxz
icebp
int3
xorl
push
fnstenv
xor
or
cmpsl
imul
sbbb
bound
stos
lret
cmp
jnp
nop
inc
cmp
inc
mov
xchg
xchg
mov
fwait
adc
xchg
repz
mov
add
int
xor
add
sub
es
pop
stc
add
xchg
pop
xchg
cmp
loope
pop
out
push
sahf
or
or
add
xor
shl
and
mov
negl
sbb
pop
push
lods
cltd
daa
loope
fcmovb
jecxz
add
ret
or
int3
movsb
xchg
sub
pop
push
cs
mov
add
push
out
adc
and
sub
cwtl
dec
pushf
repz
mov
test
lods
repz
or
pop
decl
test
inc
xchg
cmp
xchg
icebp
imul
and
xchg
push
cmp
cmp
lds
mov
dec
std
test
sbb
dec
add
jmp
rolb
mov
aad
lock
int
inc
dec
lods
xlat
mov
nop
cli
sahf
push
pushf
add
js
mov
lock
in
sbb
js
fsubrs
pop
adc
rorl
sbb
sbb
dec
frstor
xor
and
inc
test
shl
in
fs
jl
dec
sub
nopl
jg
into
insl
test
cmp
add
leave
and
insb
or
push
adc
or
lea
adc
or
mov
bound
mov
pusha
mov
insl
push
mov
jp
repnz
ljmp
fsub
in
jae
push
fistl
push
shr
dec
adc
in
adc
or
add
in
jle
subb
stos
fstps
iret
adc
or
js
and
stos
cmp
in
push
adc
xor
and
xchg
stc
cltd
push
lock
add
es
and
xlat
add
add
insl
sbb
stos
sub
jo
xchg
or
pop
mov
pop
iret
lcall
lahf
cmp
fcompl
outsl
add
in
addr16
jb
adc
dec
mov
dec
jae
jo
inc
stc
sar
int
dec
adc
cli
mov
cmp
loop
xchg
and
lea
sub
jns
rcl
inc
push
ret
enter
mov
pop
sub
pop
sar
popa
pop
xchg
jecxz
xchg
mov
lret
lock
xchg
jle
xlat
jne
sbb
aam
sti
aaa
in
adc
xchg
arpl
sbb
xchg
mov
shrb
clc
scas
in
mov
and
rol
ljmp
inc
into
and
or
lods
push
dec
xor
pusha
mov
lret
rorb
sti
mov
xor
aam
cmp
pop
shl
pop
out
add
loope
shrb
mov
sbb
adc
in
insl
cwtl
aaa
out
aam
mov
insl
jp
or
in
in
dec
sbb
push
sbb
fisubl
mov
push
or
jle
pop
movsl
xor
cmp
test
sub
or
scas
adc
adc
in
in
or
mov
nop
dec
sbb
testb
lds
out
cmp
scas
aam
movsb
adc
or
mov
cmp
sbb
pop
pop
das
or
xlat
mov
dec
add
jl
pop
push
ljmp
andb
into
clc
mov
cmp
xor
dec
mov
repz
or
dec
push
lret
out
loopne
add
add
int3
sub
repnz
fnop
mov
sbb
ss
enter
aaa
and
out
push
test
ss
hlt
daa
xchg
jne
ret
loopne
aaa
fs
imul
insl
cltd
adc
jnp
dec
scas
cmp
inc
mov
adc
xchg
lods
cli
ficoml
xchg
add
mov
sbb
popl
cmpsl
or
lcall
or
mov
repnz
sbb
or
add
sbb
orb
cmp
xor
das
sbb
push
pusha
cmp
and
add
cmpsb
mov
mov
je
movsb
jmp
mulb
roll
insl
test
push
adc
es
and
enter
mov
fwait
test
loopne
test
mov
mov
add
rol
daa
imul
hlt
adc
addl
insl
mov
fstpt
mov
mov
cmp
cmpsl
inc
test
add
ret
xor
dec
cmp
jno
popa
bound
mov
dec
data16
mov
mov
ds
js
sahf
inc
add
lock
gs
cmp
pop
sbb
adc
cmc
and
cmp
fsubrl
fmull
sub
nop
add
popa
dec
arpl
rcrl
mov
mov
cmc
push
or
jg
jecxz
rcll
loopne
mov
mov
add
xchg
shll
decb
xor
and
xor
adc
mov
testb
mov
ror
sbb
aas
mov
xchg
loop
popa
xchg
andl
in
lock
push
dec
add
mov
mov
pop
test
aam
mov
mov
add
mov
adc
int
or
sbb
lods
mov
enter
inc
out
pusha
add
push
add
std
mov
jo
call
mov
fbld
rcll
icebp
pop
cwtl
push
pop
dec
mov
lret
js
ret
and
sbb
out
test
pop
sahf
iret
jmp
cmp
adc
cmovg
cmp
adc
jp
loopne
adc
pop
mov
jg
test
sub
push
nop
mov
arpl
repz
push
adc
es
mov
imul
sarl
adc
jno
adc
inc
adc
rcr
sub
out
mov
add
adc
xchg
cmp
fcoml
shll
push
inc
sub
psubb
ror
sbb
jg
inc
push
pop
dec
push
inc
push
inc
dec
cmp
repnz
das
or
push
iret
push
mov
repnz
rorl
js
aam
mov
add
inc
js
imul
test
push
and
in
std
add
add
mov
in
dec
and
imul
in
popf
leave
pop
shr
addb
cld
or
insl
ja
es
outsl
cmp
mov
call
out
cmp
aad
xor
orb
test
pop
pop
sbb
mov
insl
cmp
sbbb
out
xor
stos
lods
jno
jns
cli
bound
daa
cld
cmp
dec
push
sub
scas
dec
jp
cs
mov
xor
fwait
xchg
sahf
mov
xor
sbb
push
ljmp
sub
jecxz
add
sarb
aam
push
or
jle
add
jmp
dec
or
call
ds
inc
dec
ljmp
movsb
das
rolb
fwait
divb
jmp
pop
xor
call
mov
rolb
mov
xor
outsl
int
inc
or
mov
outsl
sar
or
inc
cmp
int3
pop
das
or
adc
inc
pop
and
fdivrs
add
pop
cmp
jb
push
jl
cld
mov
fcmovbe
in
fildl
sub
add
test
sbb
in
add
fldcw
add
jecxz
add
in
add
jge
mov
mov
xor
les
ficomps
inc
loope
stos
sub
dec
inc
pusha
jbe
mov
movsb
jecxz
push
jmp
loope
imul
out
pop
or
sbb
push
jmp
add
pop
add
cmp
cmc
add
jno
mov
lret
fdivl
js
in
or
mov
jbe
loop
out
adc
fmuls
dec
int3
dec
sbb
shrl
subl
in
stos
mov
xor
lods
in
cmpsl
mov
lret
jb
out
repz
aaa
jp
fldt
loope
loop
push
clc
xlat
push
add
add
adc
and
mov
add
jo
cmc
pop
xor
fiadds
int3
push
xchg
push
cmp
out
int3
adc
and
jbe
add
or
jne
data16
inc
pushf
scas
aad
dec
or
sub
loop
xchg
nop
bound
and
adc
ss
xlat
insb
les
lahf
inc
inc
scas
ret
add
pusha
jmp
add
je
and
mov
shlb
fdivrl
sub
xchg
inc
sub
mov
nop
into
popf
cmp
aad
mov
inc
or
loopne
mov
popl
add
adc
and
xchg
stos
in
add
pushf
push
in
cltd
pop
push
sbb
adc
cmp
call
dec
sahf
inc
rcl
and
sar
xor
mov
mov
sub
sar
lea
push
cwtl
adc
scas
xor
push
mov
std
cmp
push
sti
xorl
mov
mov
clc
out
add
les
sbb
ljmp
sti
pop
loop
lock
sub
adc
cmp
lret
add
rorl
adcb
xlat
rcrb
dec
dec
sub
movsl
add
fsubs
add
mov
test
lret
leave
fsub
pop
pusha
call
sub
push
fucomp
push
test
jae
das
mov
mov
in
add
movsl
sarb
lods
orb
push
pushf
push
test
test
inc
and
negl
xchg
insl
cmpsl
mov
push
lret
jge
aad
pop
mov
push
xor
mov
mov
xor
repz
mov
mov
out
not
lahf
jo
js
aas
fwait
jecxz
or
xor
jle
jmp
pop
dec
add
jmp
scas
jbe
in
adc
xor
add
ror
les
jne
push
cmp
xchg
push
repnz
xor
dec
lds
mov
push
or
push
jmp
sub
incl
and
sub
mov
aas
andb
lcall
jmp
sub
pop
push
rcrb
arpl
dec
cmp
sub
xor
and
jne
mov
jne
sub
jbe
sub
arpl
dec
lret
pop
sarb
cmc
jne
jmp
add
pop
iret
hlt
daa
mov
and
daa
dec
inc
stc
dec
cmpsl
xchg
sahf
xchg
adc
rcr
xor
ret
aam
pop
fnstcw
pop
lea
mov
add
xor
pop
movsl
dec
leave
std
pop
pop
sbb
mov
jp
lret
push
je
sbb
stos
sbb
jno
add
pop
int3
cmpsl
hlt
ret
pop
jbe
fscale
mov
sub
pop
xor
adc
and
inc
push
icebp
mov
js
sar
inc
add
call
pop
pop
dec
pop
cmp
cmp
mov
sub
inc
inc
mov
adc
je
and
pop
adcl
rclb
and
cld
sub
sbb
sub
mov
or
fisubrs
js
push
into
or
lock
pop
sbb
inc
sbb
int
stos
test
lahf
fcoms
shrb
sub
stos
rorl
mov
jl
cli
jmp
push
loopne
xchg
add
add
ss
mov
xchg
outsb
hlt
not
push
dec
stc
xchg
add
jbe
pop
std
fadd
int3
xor
adc
xchg
ffreep
ja
insb
call
daa
sub
faddp
mov
push
mov
adc
or
sub
inc
es
ljmp
pop
adc
call
cmpsl
mov
dec
pop
cwtl
push
js
dec
fldenv
push
fcmovbe
out
lds
ror
pushf
mov
es
push
shl
push
dec
icebp
sbb
das
xor
inc
loopne
dec
imul
dec
mov
mov
cli
pop
mov
shl
xchg
adc
xor
mov
flds
rol
jbe
add
popf
dec
mov
cmp
clc
mov
inc
test
lahf
mov
adc
xor
sub
fisttpl
pop
or
sub
pop
lock
adc
aas
mov
jp
pop
inc
cmc
pop
rcl
je
xor
stc
mov
mov
daa
std
xor
mov
or
sbb
fldl
shll
add
fcomi
or
pop
sbb
sbb
xor
pop
fcoml
int
dec
jmp
inc
xor
sub
jp
or
xor
cmpl
addr16
cwtl
pop
imul
or
inc
cmp
add
xor
mov
adc
imul
jmp
call
push
test
in
subb
icebp
or
cmpsl
push
add
enter
sar
test
mov
mov
xchg
hlt
add
sub
hlt
daa
movsl
scas
nop
cwtl
pop
js
and
dec
inc
sar
mov
mov
add
and
add
loopne
sub
or
dec
mov
ljmp
sbb
ret
lods
jge
mov
mov
imul
dec
mov
lods
or
rcrl
leave
loope
fsubrs
lds
rcrl
adc
int
add
pop
je
push
insl
divl
pop
iret
jmp
test
shlb
and
and
push
or
jecxz
add
ror
mov
int3
sbb
int3
xchg
sahf
movsb
inc
shll
clc
add
sbb
test
mov
mov
es
cli
jo
xchg
roll
push
mov
xor
arpl
cmc
js
cs
jns
mov
push
jge
sub
mov
cmpsl
mull
addb
mov
enter
add
fsts
das
inc
cli
enter
jl
jb
cmc
add
xchg
roll
dec
in
and
or
sbb
icebp
repnz
pushf
icebp
imul
imul
sub
jmp
add
aam
lock
rorb
sub
add
or
lea
jbe
vpsubq
pop
jne
je
jae
sbb
inc
fsubs
cmp
xor
sub
cmc
sub
pop
push
into
xchg
pushf
add
add
cs
pop
add
add
add
jbe
push
ljmp
fidivrs
popf
cmpb
push
mov
pusha
sti
push
movl
sub
push
fnstenv
or
repz
aas
adc
jle
pop
sbb
mov
out
lock
or
sub
mov
jp
and
push
jmp
lods
cmp
ret
xchg
jbe
mov
push
popl
mov
pushw
test
push
or
daa
inc
gs
cmp
jge
imul
jnp
ljmp
push
pop
and
insl
clc
xchg
shlb
mov
xorb
sub
dec
lock
or
bound
adc
push
pop
ljmp
fisttpll
in
leave
loop
ret
int3
xor
dec
sbb
ret
loop
mov
jge
mov
sarl
rolb
ss
pop
cmp
sarb
and
test
aam
inc
insb
xchg
add
and
test
out
inc
sub
jge
lret
in
loope
xor
rorl
adc
add
or
inc
loopne
push
aaa
sbb
xchg
xchg
xor
xor
repz
adc
pop
filds
xchg
sbb
cmp
loopne
jecxz
adc
cmp
inc
xchg
sub
inc
ret
xor
or
push
fisubs
inc
add
idiv
add
xor
mov
or
jno
mov
addb
adcb
in
mov
and
rolb
addl
pushf
out
rclb
mov
jmp
inc
jl
js
or
or
add
loopne
xchg
outsl
or
inc
inc
add
popa
adc
cmpsb
inc
sbb
xor
cmp
or
test
sub
dec
xor
pop
loopne
inc
cltd
rcr
add
adc
mov
jne
loopne
insb
loopne
xchg
sbb
test
jne
adc
in
cwtl
enter
cmp
fisttpl
negl
xorb
imul
mov
popf
mov
enter
out
push
push
shr
test
in
pop
cmp
jle
mov
loope
ficoms
adc
mov
cmpxchg
sub
test
cmc
rcrb
adc
andl
js
out
xchg
jo
ror
xor
xor
mov
out
in
adc
jmp
mov
dec
inc
mov
dec
fdivr
lods
mov
imul
call
loope
xlat
shrb
icebp
loope
xor
test
outsl
pop
or
jmp
jbe
adc
mov
pop
out
pop
jecxz
dec
mov
or
dec
mov
cltd
pop
push
pusha
enter
lea
xor
cmp
jmp
loope
aad
or
jbe
fcmovne
fildl
fdivp
das
lods
test
mov
fsubl
jo
into
clc
shrb
cmpsb
push
shl
in
mov
push
enter
jae
dec
loop
push
das
jle
or
andb
in
and
mov
jmp
cmpl
jbe
pop
insb
xchg
lock
repz
inc
addb
jns
ret
cli
sub
pop
fildl
or
jecxz
repnz
adc
jl
add
test
pop
enter
pop
cmpsb
pop
jmp
jnp
xchg
push
je
jnp
inc
mov
jbe
push
arpl
stc
sbb
lret
cli
lret
or
push
mov
int
dec
leave
fistps
mov
loope
push
call
sar
xorb
adc
add
sbb
lret
inc
sbb
or
outsl
sub
and
mov
xlat
outsl
cmp
inc
inc
ss
pusha
xor
and
cltd
xchg
ror
sar
bound
xchg
xor
add
aaa
xor
push
add
ja
sbb
mov
lods
sub
cs
xchg
cmp
or
js
or
shrb
jge
pop
sti
adc
into
pop
or
inc
dec
mov
les
inc
fcomp
mov
sti
push
incl
xchg
jge
popf
movsl
mov
xor
sahf
hlt
add
lods
fcom
js
pop
mov
push
loope
or
jecxz
xabort
and
jl
mov
or
jns
test
test
add
add
inc
add
cmpl
mov
roll
inc
test
mov
xchg
mov
sub
daa
lock
stos
push
push
jp
fucomp
loopne
leave
inc
jb
fnstenv
clc
and
add
add
cmp
rcrb
imul
fistps
int3
les
add
jp
adc
mov
shrb
and
cmp
cmpsb
add
rclb
fistps
and
repnz
push
sub
and
and
repnz
lods
push
out
xor
sub
test
jl
out
push
movsl
pop
cmp
orl
rol
lock
adc
fildll
in
inc
mov
mov
mov
adc
jnp
adc
sbb
scas
clc
add
shlb
mov
push
add
or
mov
ja
lea
iret
scas
xchg
scas
xor
and
ss
mov
add
aas
jb
mov
sub
in
cmp
pushl
icebp
push
add
push
dec
ret
rolb
js
int3
xor
add
lahf
les
jmp
repz
nopl
aaa
fldpi
xchg
pusha
fcomps
add
out
les
adc
pop
pop
rolb
inc
rorl
das
and
add
push
mov
and
xorb
push
jno
mov
mov
inc
sbb
sbb
gs
out
adc
setnp
shrb
inc
fistps
popl
ret
push
add
and
lock
add
shr
repz
inc
mov
add
shl
arpl
or
ret
or
xor
push
or
and
or
or
loope
mov
xor
mov
imul
xchg
cmp
sbb
stos
scas
rcrb
aaa
roll
push
push
push
add
or
push
mov
and
cltd
xchg
xchg
add
add
add
repz
pop
push
sbb
addr16
xor
rcrb
aam
push
xchg
rcll
cmp
jge,pn
xor
pop
fsubr
pop
add
and
ret
sub
and
add
jp
or
and
cli
test
mov
add
sbb
scas
jp
std
lock
clc
xchg
jg
enter
cmp
lea
loopne
xchg
call
sbb
inc
hlt
and
mov
test
mov
mov
fimuls
nop
sbb
xchg
cld
out
lods
xchg
sbb
jge
out
pop
mov
roll
sbb
sbb
add
dec
movsl
andl
mov
adc
jae
inc
shll
ret
daa
fildl
cld
daa
mov
add
add
fmul
pop
dec
and
leave
add
and
add
jns
jne
or
hlt
pop
das
ss
mov
test
dec
push
dec
movsb
fimuls
shrb
lods
jne
cmp
mov
dec
xor
cmp
in
adc
addl
and
add
andl
ret
inc
mov
rol
lods
popa
sub
ret
dec
or
and
add
cmp
test
sbbl
xor
push
test
enter
gs
push
or
jo
ss
sbb
jno
icebp
adc
test
xchg
jo
and
pushf
cmpsl
pop
lahf
int
sbb
dec
sbb
push
lea
cmp
rolb
loope
sub
adc
ljmp
or
jg
xor
mov
hlt
jge
mov
rcrb
lahf
repz
insl
pop
cmc
gs
aaa
xchg
push
js
push
out
popl
movb
loope
test
arpl
sub
cwtl
sub
stos
test
sub
nop
cltd
outsb
and
xlat
inc
push
adcl
leave
imul
dec
out
es
xchg
add
hlt
icebp
pop
test
lods
jb
dec
and
push
or
es
and
cmp
and
pop
cld
rcr
jbe
mov
movsb
or
inc
jg
xchg
sbb
and
adc
das
ret
jne
adcl
mov
leave
aaa
nop
fwait
sbb
pop
and
dec
mov
int3
jmp
jo
push
movsb
movl
scas
mov
xchg
push
clc
je
hlt
nop
pop
les
into
call
push
jg
push
fwait
cmpsb
sti
cmp
push
in
jle
popa
rcrb
inc
sub
sbb
jnp
shl
aad
popa
push
int
js
add
push
faddl
ljmp
jl
inc
push
js
sar
xor
call
lds
and
cmp
jnp
sub
loope
and
rcll
outsb
or
add
subl
fistpl
fmuls
or
push
add
sub
in
inc
xor
xchg
inc
add
loop
lea
push
hlt
mov
mov
add
add
push
out
lock
jl
push
push
fldcw
push
mov
js
push
call
xchg
daa
mov
xchg
data16
mov
add
jg
ffreep
gs
sub
out
cmp
shl
call
rolb
adc
xor
jg
loope
pusha
or
adc
fwait
in
and
mov
or
call
lods
in
mov
hlt
mov
dec
mov
cmp
out
xchg
fcom
pop
jp
incb
mov
cwtl
in
adc
outsb
out
sbb
in
mov
push
mov
out
addl
and
or
fldt
ljmp
push
sahf
push
out
adc
icebp
cld
aaa
std
or
test
jno
sub
add
mov
sbb
insb
jmp
loopne
push
cmp
loope
cwtl
adc
push
add
or
adc
sub
insb
dec
ljmp
pusha
arpl
push
xchg
ds
xlat
mov
andb
ja
scas
sar
stos
pop
fadds
sbb
add
inc
or
cmp
ss
sub
outsl
or
in
sarb
pop
xchg
sbb
or
add
loopne
decl
add
and
roll
loopne
loope
ficoms
pop
jno
jns
mov
fstpl
dec
in
sub
inc
sub
and
push
xchg
adc
sub
in
pop
inc
mov
aas
and
adc
movl
push
dec
gs
lods
fldenv
fcmovnb
or
lret
lock
push
pusha
adc
or
int3
lret
dec
call
imul
cmpl
nop
popa
dec
mov
sahf
jp
inc
and
dec
cld
xchg
in
ret
add
or
add
sahf
jno
push
or
shlb
pop
cmp
test
inc
sub
sub
inc
push
fdivrl
rolb
pop
cmc
std
mov
out
mov
xchg
adc
and
mov
adc
mov
sub
add
int
adc
cmpsl
jle
test
push
jns
mov
call
je
inc
dec
loop
cmp
mov
cmpsb
push
sarb
mov
jo
movsb
ss
or
imull
je
mov
and
mov
enter
adc
add
or
loopne
lahf
iret
test
xor
pop
add
rcl
incl
enter
scas
dec
jae
mov
cmp
jp
lahf
inc
test
adc
cwtl
pusha
and
lahf
jmp
sbb
movl
add
and
sbb
jg
subb
pop
dec
into
cmpsb
jnp
xor
test
inc
test
in
mov
loopne
jnp
mov
cwtl
fisubl
orb
lret
ljmp
sti
rcl
lret
aas
mov
shrb
jmp
push
adc
hlt
test
jae
subb
mov
adc
dec
and
mov
negl
fmull
xor
sub
movb
stos
jbe
data16
inc
shlb
aaa
dec
cmpsb
outsb
fnstcw
mov
rcrl
push
push
call
dec
sub
sar
ja
cld
call
fcomps
xor
sti
shll
push
ds
jae
pop
stos
add
loope
lods
sub
sub
fisubrl
add
int
pop
imul
rolb
out
dec
loope
hlt
addb
stc
movsl
dec
pcmpeqd
out
roll
rorb
lea
add
push
or
or
xchg
adc
cmp
jae
fisubs
add
icebp
leave
mov
cltd
pop
popa
addr16
xchg
lret
sub
mov
call
pop
jo
xor
in
rcll
data16
sub
xchg
mov
mov
aaa
push
loope,pn
pop
and
sub
outsb
loope
xor
repz
add
mov
xchg
andb
ljmp
mov
call
and
negb
xorl
pop
testl
cmp
add
mov
pop
outsb
pop
ljmp
mov
add
mov
or
xchg
xchg
test
mov
inc
add
jns
aam
call
add
dec
xor
and
mov
out
pop
or
add
pop
js
jl
rcl
mov
sbb
jp,pn
test
jecxz
push
sub
dec
push
inc
mov
add
movsl
rcr
cs
ds
add
or
out
dec
not
xchg
and
jne
push
jl
add
sub
mov
out
lret
push
sbb
loopne
cmp
or
aas
fcoml
xor
sbb
inc
call
or
add
filds
or
sbb
mov
jg
jmp
das
adc
adc
mov
pusha
sbb
inc
xchg
lahf
sbb
scas
push
adc
decb
xlat
lahf
test
fmul
cmp
push
jne
xor
ret
inc
psllw
add
sbb
inc
mov
dec
orb
icebp
loope
inc
mov
ficompl
sar
xchg
ret
mov
mov
rcrb
or
sub
aad
jl
add
loopne
mov
test
int
jnp
mov
jecxz
sub
test
std
inc
or
sbb
fsubrs
jmp
sbb
and
mov
xchg
mov
pop
loopne
subb
cmp
ss
jl
inc
jae
in
adc
xchg
loop
push
or
and
icebp
jp
std
clc
les
in
xchg
movb
aas
fisubs
out
pop
sbb
sub
and
xor
mov
mov
cmpsl
xchg
enter
adc
rcr
pop
push
std
test
and
mov
sbb
or
lret
xor
les
sti
push
fimull
xor
sbb
mov
push
mov
add
shlb
pusha
add
xchg
mov
inc
inc
pop
iret
add
cld
xor
out
mov
nop
out
add
jb
adc
out
test
mov
inc
popl
addl
loope
leave
enter
stos
pop
scas
jne
ret
inc
subb
push
mov
in
add
movsl
in
mov
pop
or
inc
pop
les
or
push
jbe
jecxz
lret
rclb
pop
out
mov
outsb
out
jle
rorb
pop
out
sbb
ret
add
inc
lret
add
or
outsl
leave
rep
mov
cmp
imul
test
and
loop
xchg
jmp
cmp
mov
leave
and
sbb
sub
in
jge
sbb
cltd
cmc
out
orb
pop
cmpb
addb
xorb
repz
sbb
pop
push
and
add
sbb
sti
push
imul
sub
xor
fists
jmp
lsl
xorb
cltd
mov
js
icebp
repnz
jle
aaa
sbb
pop
fisubs
jo
insl
xchg
or
jo
sbb
and
icebp
adc
popa
inc
shrl
stc
jb
add
cwtl
add
push
mov
add
xchg
mov
jb
cmc
ret
and
or
add
add
fcoms
sub
jno
loop
stos
sub
sub
and
out
xchg
push
inc
push
mov
xorb
rorb
add
sub
jecxz
mov
dec
push
jae
pop
cmp
xchg
lods
shlb
mov
fsts
test
cmp
mov
daa
popf
adc
mov
flds
ret
or
dec
test
in
xchg
sbb
adc
adc
fimull
and
into
imul
nop
adc
jle
repnz
outsl
dec
mov
sbb
aam
nop
rcr
adc
cmpsb
aaa
sub
dec
ds
inc
sbb
ljmp
arpl
lock
push
jo
cmp
mov
cli
rcl
repnz
push
pusha
enter
dec
lea
std
dec
xor
xchg
mov
mov
cmc
jg
mov
les
ja
mov
pop
lds
aas
and
js
and
dec
test
lahf
push
dec
sub
adc
into
cld
or
pop
mov
add
mov
jl
lods
ficoms
pop
aad
inc
mov
test
rcrb
dec
jmp
xor
pop
sub
jl
adc
cli
popa
xchg
sbb
fdivs
and
jge
mov
orb
mov
in
push
jecxz
hlt
lea
adc
cld
lcall
xchg
or
sbb
cmp
push
pop
sbb
xor
popa
loopne
mov
xor
cli
add
imul
adc
iret
xor
lock
rolb
sbb
inc
jbe
or
mov
add
sbb
scas
lods
or
js
test
jl
sub
push
pavgw
adc
dec
add
xchg
add
dec
adc
adc
sub
jno
lock
fdivp
sub
movsl
ret
add
fmuls
inc
sbb
insl
ds
adc
ret
jb
mov
mov
add
pushf
outsl
shrb
call
pusha
inc
lods
ljmp
dec
add
data16
and
fisubrl
xor
jnp
push
dec
cmp
imul
fimull
inc
inc
adc
push
sub
mov
mov
sbb
aam
or
mov
daa
xchg
add
testl
shlb
les
jno
nop
jns
je
jg
inc
pop
dec
outsl
testl
mov
int
movsl
das
and
pop
fdivrs
fldcw
push
les
inc
data16
shll
mov
in
sbb
fs
adc
mov
into
iret
or
sbb
movsl
inc
cld
push
cmp
xlat
add
in
xor
mov
pop
cld
ret
jmp
or
inc
and
sbb
popf
loop
add
clc
push
jl
js
and
mov
jle
lret
test
inc
lea
leave
aaa
or
push
out
rcl
and
jecxz
adc
add
jae
add
jmp
and
cmp
inc
insl
lds
cmp
lea
inc
sbb
stc
shrl
testl
mov
xor
pop
addb
mov
cmp
clc
mov
sbb
add
mov
dec
hlt
ret
test
jecxz
popa
jp
aad
xor
xchg
sub
movsl
aas
jp
inc
xor
mov
je
or
mov
dec
andl
hlt
pop
dec
add
cmpsb
xor
movsb
pop
or
shll
add
std
aad
mov
popa
sub
adc
lret
cmp
or
and
sbb
test
dec
inc
call
out
mov
in
ret
and
add
dec
inc
popa
fldl
xchg
push
ret
push
adc
dec
mov
lock
add
push
adc
push
movsb
in
jns
jnp
out
fldlg2
sbb
fidivl
andl
add
clc
call
cld
cmpsl
add
rcll
or
sub
lods
jo
shr
loopne
push
ss
cmpl
adc
cmpsb
sub
lret
lods
mov
lock
push
sbb
add
pop
jnp
push
cs
or
cltd
shl
add
in
pop
das
add
dec
sub
adc
aam
test
jb
mov
pop
movsl
mov
cltd
xacquire
cmp
inc
fcomp
push
clc
sbb
inc
jb
mov
lods
jae
mov
popa
mov
xor
xchg
lea
loop
push
scas
push
repnz
jle
mov
aas
cmp
or
mov
test
popf
jmp
iret
xor
push
nop
push
aas
xchg
nopl
ja
xor
dec
mov
cmp
adc
jg
test
nop
in
xchg
scas
stos
incb
jmp
xorl
pop
jbe
cli
push
adc
sbb
dec
in
pop
ret
add
and
fwait
insb
bound
mov
cmp
stos
xchg
sub
jae
ljmp
and
ror
and
fistl
stos
fwait
fs
pop
xchg
mov
loop
idivb
js
nop
pop
pop
lds
ffreep
pop
je
lock
push
loopne
push
xor
jg
jne
sbb
add
pop
aas
rcl
imul
inc
decb
jb
and
or
push
ljmp
adc
mov
cmp
jge
pop
stos
in
insb
stc
add
in
sub
mov
adc
mov
sbb
aad
dec
loopne
les
stc
movsb
pop
pop
cmpsl
dec
mov
lret
es
xchg
jb
lock
jb
jo
inc
sbb
pusha
xor
push
test
adc
rclb
test
scas
popf
addb
scas
push
pop
mov
mov
jo
scas
push
ret
cmc
pop
pop
or
inc
sub
and
dec
mov
shll
sbb
pop
mov
adc
mov
dec
jmp
leave
cmp
int
fimull
inc
dec
arpl
gs
jmp
cli
mov
mov
mov
push
dec
jmp
ljmp
cmp
out
jl,pn
cmp
js
inc
push
test
dec
repnz
fsts
stc
mov
mov
or
jge
or
movsl
imul
sbb
jg
dec
pop
ret
push
insl
cmp
sub
push
mov
mov
push
and
dec
adc
test
add
scas
inc
sub
and
jmp
out
sbb
mov
sbb
pop
jb
add
out
clc
cmpb
jg
addb
adc
stos
mov
ljmp
rclb
lds
push
push
and
xchg
sbb
add
push
int
sti
pop
mov
test
sbb
and
mov
jl
rcrl
inc
mov
in
in
in
clc
push
inc
loopne
jg
push
fadds
pop
or
add
lahf
mov
add
add
test
jne
xchg
and
sbb
movsb
or
dec
movl
notb
ficompl
pop
mov
xor
xlat
and
jbe
fdivrs
jp
ja
rorl
test
test
or
es
jmp
sahf
cmpsb
and
testb
cmp
inc
add
and
sbb
sub
add
or
xor
sub
insb
ret
push
adc
es
das
out
add
enter
xchg
push
cmp
push
outsl
insb
jne
orb
orb
jno
enter
dec
xchg
fwait
stos
mov
imul
mov
ret
mov
jecxz
dec
push
ds
push
jl
addl
iret
push
lock
ret
adc
dec
popa
in
notb
out
xchg
add
inc
ficoml
hlt
mov
cmp
loope
pop
iret
dec
sbb
or
fadds
dec
jle
jns
sbb
aas
loop
xchg
subb
xchg
jg
mov
daa
pop
clc
dec
in
push
push
xchg
cli
lcall
jbe
and
mov
xor
lcall
psubusb
push
les
hlt
sbb
xlat
sub
iret
mov
shlb
inc
lea
call
xor
add
fadds
out
mov
lock
mov
push
pop
stos
mov
aaa
jne
test
lods
or
dec
out
xor
pop
sbb
insl
pop
dec
inc
jl
and
rcl
and
inc
das
push
push
insb
std
push
push
or
mov
and
std
jne
pop
or
dec
clc
mov
frstor
mov
pushf
hlt
fdivrl
pusha
add
rorl
cmpsl
add
mov
push
subb
mov
adc
loop
pop
sbb
pop
mov
cli
loope
push
cwtl
inc
mov
mov
adc
adc
pop
bound
aaa
xor
fisubrl
xor
out
jne
cmpsl
push
mov
add
neg
mov
out
rclb
shlb
dec
call
sub
adc
sbb
push
pop
dec
lea
mov
in
and
sub
mov
aam
push
rcrb
push
cmpsb
pushf
mov
dec
jne
fs
cmp
loope
inc
repnz
xor
imul
dec
mov
jns
adc
ret
pop
ss
cmpsb
jg
cmp
outsl
jae
push
shl
popa
sbb
mov
adc
gs
inc
jge
mov
and
mov
or
popf
fstps
inc
mov
and
or
push
cmpsb
push
xchg
push
pop
push
pop
rcrb
call
adc
sarl
pop
push
mov
cld
cmc
inc
fwait
outsb
mov
ret
pop
add
dec
pop
jl
add
fucomp
xorb
pusha
ret
adcl
ret
sub
push
scas
and
and
mov
cmp
add
or
gs
or
dec
pusha
popa
sub
repz
add
enter
orb
fbld
pop
cmp
jmp
mov
mov
or
cmp
scas
call
jns
inc
sbb
jl,pt
dec
jb
lret
loope
pop
negb
push
js
mov
jp
sbb
vpunpckhbw
jecxz
loop
cmp
pop
clc
jge
adc
iret
push
jmp
cmp
push
jnp
jnp
inc
movsl
je
sbb
leave
nop
pusha
adc
dec
les
add
inc
push
adc
pop
in
repz
pop
outsl
sbb
mov
sahf
sub
movl
sub
pop
push
psrad
outsb
lock
xor
xchg
loopne
mov
fimuls
sub
add
test
jbe
lea
hlt
sbb
shrd
jg
xchg
push
sbb
dec
and
adc
loopne
jo
adcl
fisubs
scas
mov
mov
push
dec
andl
mov
add
outsl
mov
jmp
pop
cmp
cmc
jbe
mov
add
sbb
jmp
test
sub
mov
jle
mov
mov
mov
adc
pop
les
add
fninit
or
inc
inc
popa
data16
add
shll
xchg
inc
leave
sub
bound
and
sbb
xchg
pushf
lods
or
mov
aas
and
fildl
mov
cmp
or
mov
mov
mov
call
or
ja,pn
lcall
push
xchg
cmp
inc
dec
pop
stc
push
mov
and
das
sbb
mov
or
add
in
adc
mov
stos
mov
push
xchg
test
fldt
repz
pop
pop
mov
push
aad
fmull
push
xor
adc
out
adc
xor
jb
addr16
add
xor
pop
pusha
roll
or
scas
mov
in
pop
movsb
adc
adc
xchg
or
rorb
clc
fiaddl
sbb
inc
mov
imul
frstor
rcrl
mov
adc
add
movl
das
dec
int3
dec
cmp
insl
shrb
clc
fcom
add
mulb
or
add
adc
adc
mov
dec
add
push
ror
adc
xchg
shlb
xchg
xor
add
loope
dec
sbb
mov
push
ja
sar
cmp
les
inc
xchg
jge
fisubrl
mov
cmp
outsl
sarb
nop
mov
aad
dec
mov
or
loop
pusha
sub
sub
pop
dec
adc
mov
xor
sub
test
sub
mov
or
mov
aam
cmpsb
adc
push
mov
mov
loop
or
idivb
cs
sub
outsb
cmpsl
les
andl
test
adc
sub
rorb
icebp
int3
sub
lods
push
adc
clc
xchg
or
xchg
jl
les
aas
jo
mov
fcoml
push
add
inc
fdivp
es
and
push
mov
jne
add
insb
daa
sub
dec
sbb
add
loopne
and
bound
sub
push
aad
xor
pop
or
cs
pushf
les
sub
cld
lahf
dec
loopne
xor
ds
cld
sahf
mov
jbe
dec
rcrl
sbb
pop
xor
vcomiss
jl
mov
clc
orl
add
xchg
test
push
fs
mov
fcomp
push
rorb
push
mov
ss
insl
lret
push
mov
push
andb
add
adc
notl
sub
inc
addb
sbb
loopne
add
icebp
dec
ds
adc
and
jo
mov
shr
xor
xor
icebp
jp
xchg
nop
sbb
push
jl
or
loopne
movsb
stc
pop
xchg
loope
xchg
adc
mov
enter
into
aam
sbb
xor
jb
enter
pop
ret
xor
lcall
hlt
xchg
or
inc
insl
js
sbb
rcrb
sub
mov
mov
push
test
lea
insb
xchg
arpl
add
sbb
inc
dec
pop
call
aaa
jb
mov
iret
xchg
push
ss
sub
add
les
fisubrs
jmp
aam
jnp
test
sarl
sbb
push
dec
rcr
rcrb
subl
cmp
add
pop
out
enter
cmovle
sarb
adc
aaa
xchg
outsl
movsb
dec
stos
loopne
push
enter
or
loope
push
repnz
pop
sahf
jnp
jb
lock
cmp
sahf
inc
push
daa
popf
mov
dec
push
and
dec
cmc
js
int
movsl
scas
cmc
fs
sub
in
adc
mov
pusha
insb
cmp
imul
add
rolb
sbb
sbb
sbb
and
dec
xor
mov
rcr
sub
mov
jmp
mov
inc
std
xchg
sub
clc
jae
shlb
lcall
adc
jmp
sbb
int3
lock
pop
scas
int3
mov
mov
sbb
add
fsubl
ss
dec
push
sub
jne
add
pop
jge
in
dec
pop
push
ret
data16
clc
and
pop
movsb
into
vcmppd
pop
leave
push
loopne
sti
daa
out
pop
test
adc
push
pusha
pushl
or
adc
js
xor
xorb
sbb
rolb
dec
add
sub
fadds
aaa
je
aad
call
dec
lea
sbbb
shlb
sahf
and
sub
stos
inc
pop
cmp
in
mov
jo
push
jae
nop
push
xchg
or
xchg
add
clc
jne
sbb
xor
dec
or
cltd
lock
outsl
ret
jbe
cmp
addb
sbb
adc
sbb
rcll
mov
cmp
cmp
lret
cmp
inc
jae
js
sub
inc
add
jbe
popa
test
pop
adcb
push
andb
inc
push
pop
loope
inc
adc
jo
mov
rolb
out
jb
dec
aam
push
or
or
outsl
test
inc
iret
jb
sbb
push
test
sbb
cmp
test
fcoml
ds
dec
fbld
test
fdivs
sbb
ret
inc
xor
add
rcrl
xchg
sbb
aaa
dec
sbb
addb
rol
inc
rcrl
or
cmc
je
and
vaddpd
gs
ret
jno
push
add
xor
jge
inc
fwait
pop
imul
dec
loop
jae
in
int
mov
and
movb
hlt
cmp
in
aam
fsts
mull
xlat
inc
fwait
and
mov
dec
cmp
sbb
adc
adc
sub
or
xlat
outsl
or
cmp
or
or
sarb
mov
or
jae
xchg
js
cmpsl
xor
mov
out
dec
lock
scas
mov
add
in
cmp
outsl
ja
scas
xor
adc
push
add
mov
xor
sub
fcomi
pop
add
std
dec
pushf
mov
fstps
adc
mov
or
push
jo
jne
mov
pop
leave
and
ret
xchg
aam
fwait
dec
sbb
or
out
scas
pop
inc
lods
inc
jge
rcrl
dec
pop
popa
inc
aam
add
mov
hlt
arpl
pop
dec
aam
lret
inc
or
jmp
flds
and
sbb
int
loopne
inc
jl
test
cmp
enter
lea
in
jne
fdivr
dec
ja
jnp
rorl
fidivl
sub
and
push
lea
cmp
out
ljmp
je
adc
sbb
leave
popa
mov
xor
xchg
movsl
scas
or
test
cltd
enter
jge
jg
cmp
mov
mov
adc
sbb
sub
aas
lahf
test
add
ds
sub
add
jns
sub
scas
mov
xor
push
mov
iret
into
push
aaa
mov
ret
scas
push
sbb
cmp
mov
inc
subb
jno
ds
adc
jge
pusha
outsb
les
shrb
mov
dec
mov
in
add
dec
lock
lret
pop
mov
call
fdivrl
and
enter
add
and
xor
sub
inc
into
sbb
push
call
jg
and
out
xor
mov
and
add
test
push
and
xchg
fisttpl
out
or
insb
in
mov
in
push
jne
xor
inc
jmp
or
ret
scas
sbb
xor
cmp
pop
pop
mov
sbb
les
sbb
call
xor
mov
cmp
jo
sbb
xchg
pop
mov
xor
rcl
mov
aad
ds
loope
xchg
into
adc
mov
loopne
bound
adc
sub
in
add
xorb
inc
mov
jmp
mov
js
sbb
cmp
divl
xchg
imul
faddl
lcall
or
in
and
mov
loop
into
dec
int
jbe
add
sub
push
addb
shr
add
mov
pop
daa
jecxz
cmp
lock
rol
adc
ljmp
or
test
cmp
fadds
inc
dec
add
imul
out
or
aam
push
cld
push
rcrb
jmp
mov
sbb
pusha
pusha
shrb
xor
bound
jns
mov
dec
das
js,pn
mov
dec
sbb
loopne
fs
sub
and
add
movsl
ja
xchg
mov
decl
push
push
popa
les
and
mov
fs
mov
xorl
inc
push
and
xor
es
je
imul
sbb
mov
jge
pop
adc
ds
fs
call
sbb
adc
mov
add
fidivrl
popa
jo
leave
pusha
in
add
mov
repnz
movsl
add
jo
or
lock
fadds
loope
or
int3
xchg
aad
ror
push
sbb
cld
jecxz
and
xchg
ss
add
loop
xchg
inc
rorb
iret
jmp
in
addr16
loop
push
jae
push
mov
mov
mov
fsubr
push
and
sbb
out
push
adc
pop
leave
push
cltd
rcrb
call
popf
cld
cmp
pop
mull
xor
repz
or
and
inc
mov
mov
outsb
mov
push
rorl
icebp
mov
cmp
or
rcrb
loop
insl
pop
hlt
add
rcrb
orl
mov
or
inc
inc
fwait
or
adc
fcoms
add
andb
ss
inc
xlat
adc
xchg
adc
adc
or
mov
and
cld
std
jns
inc
pushf
bound
xchg
dec
into
shll
adc
std
pusha
and
cmp
or
daa
push
xor
mov
and
jp
aas
xchg
mov
pushf
out
ljmp
push
loope
jle
add
inc
cmc
sti
fsubrp
das
add
les
push
fprem1
dec
and
nop
add
pop
xor
mov
pop
and
test
adc
xor
adc
jns
adc
ror
xchg
pusha
xor
jns
ljmp
cmpsb
push
sub
and
add
or
shl
cmp
or
shrb
xlat
and
mov
dec
ret
sub
or
test
outsl
nop
sahf
loopne
push
mov
jmp
sbb
inc
jbe
sub
outsb
loopne
rcll
mov
lds
sahf
sarb
and
push
addb
or
xor
pop
add
aas
rcrl
push
and
das
sbb
adc
jns
loope
into
clc
imul
pop
stos
dec
mov
sub
lock
jp
inc
scas
test
incl
mov
add
cltd
xor
in
movsb
addr16
jo
mov
es
adc
jns
movsl
lea
cmp
imul
insb
or
xchg
test
lock
stos
leave
rorb
jp
xchg
inc
mov
pop
sbb
loopne
test
xchg
sahf
aaa
sahf
fisubrl
ror
push
push
add
in
inc
jo
repz
jge
mov
nop
ret
loop
cli
cmp
test
int3
adc
daa
ret
cmpsb
pop
push
paddw
lret
jp
push
popf
pop
add
clc
xchg
mov
cmp
cwtl
or
pop
lods
inc
add
orl
inc
sbb
clc
add
dec
pusha
cmpl
mov
orb
mov
mov
movsl
adc
push
add
mov
movsl
add
dec
inc
rorl
ja
shlb
in
mov
push
sub
sub
push
mov
dec
add
jne
add
cli
popa
xchg
inc
lock
dec
and
sub
inc
js
mov
rorl
sbb
push
and
mov
out
cli
cmp
lock
faddl
clc
aad
sbb
xor
pop
add
mov
rclb
sbb
pop
jmp
push
sbb
cld
push
lea
mov
adc
dec
sub
push
ds
cmp
and
mov
mov
lds
adc
fsts
orb
jae
test
hlt
inc
popl
jmp
aaa
mov
pop
insb
aad
pop
sbb
push
cld
sarl
je
aam
mov
roll
shll
je
fldt
and
pop
popa
inc
mov
xorl
lcall
repz
movsb
repz
mov
fnsave
add
mov
lock
inc
add
hlt
dec
mov
or
fdivrs
ds
push
jb
rcrb
sbb
pop
inc
hlt
mov
sbb
push
mov
xchg
add
jmp
outsl
xchg
stos
xor
shrb
dec
ss
jmp
ffree
adc
js
or
call
push
sub
jge
and
shr
roll
pop
scas
dec
adc
sub
push
pop
jmp
add
adc
dec
jbe
scas
sub
cwtl
out
sahf
sub
cmp
lea
mov
out
mov
and
jne
test
lds
lock
in
mov
push
call
fisubs
jcxz
pop
ret
lock
fiadds
int
cmp
sub
mov
mov
lahf
push
jb
cmpsb
xor
sbb
xor
int
inc
push
cld
nop
add
and
xchg
ds
aas
cmp
daa
sbb
add
cmp
cld
js
addl
test
push
dec
shl
addr16
sbb
clc
pop
pop
inc
and
inc
and
mov
sbb
sub
sub
and
ja
rol
mov
dec
or
add
xchg
jecxz
adc
cmp
or
in
js
add
out
fists
movsl
cmpsl
aaa
mov
jle
add
dec
mov
jmp
cmc
movsl
shll
fiadds
andb
rcl
out
cmp
lret
cld
scas
rorb
repnz
mov
dec
pop
imul
or
loop
hlt
push
mov
mov
sub
xchg
jg
icebp
mov
out
push
filds
ljmp
push
cmc
sbb
call
adc
inc
adc
bound
lret
cmp
testb
in
jle
push
call
push
and
mov
loop
or
add
pusha
aas
es
mov
cld
and
lock
ficoml
mov
mov
loopne
popl
xor
call
xlat
cmp
out
in
out
push
in
enter
hlt
cmp
imul
mov
pusha
add
hlt
and
lock
cmp
cmp
icebp
or
adc
push
jl
cwtl
sub
mov
xchg
pushf
add
js
cmc
add
mov
pop
mov
push
mov
insl
out
out
and
enter
push
xor
lock
mov
mov
jmp
shl
test
in
pop
out
push
stos
mov
fstl
or
inc
adc
adc
arpl
push
add
fs
popa
xor
jmp
pop
pop
mov
inc
enter
imul
adc
lret
lock
pop
pop
and
dec
xor
test
cld
lds
jb
and
call
not
fisttps
aam
jp
movsb
pop
push
ficoms
add
dec
cmpsl
test
sbbl
stos
mov
mov
cmp
and
xor
movsb
cli
fnstcw
inc
in
ret
loopne
lods
jge
rorb
add
pop
sub
mov
popa
insl
push
xchg
sbb
jg
fisubl
enter
into
cs
or
or
sarb
lock
addl
mov
cmpsl
cmpsl
mov
fcomp
test
inc
and
jno
mov
loopne
clc
cltd
lds
test
add
js
cmp
ret
sbb
sub
add
add
or
cs
mov
add
and
dec
dec
pop
add
and
cmpsl
add
xchg
cs
loope
sbb
push
not
jg
sbb
or
add
inc
idivl
in
mov
lods
xor
cltd
fiaddl
nop
and
mov
dec
test
and
pushf
fistps
aad
fdivr
push
cs
arpl
into
add
jmp
add
ljmp
jbe
mov
test
arpl
add
or
test
mov
inc
mov
cmpsl
icebp
add
push
les
sahf
inc
mov
call
and
shll
mov
xor
add
pusha
loopne
dec
inc
movsl
popf
shlb
lret
mov
inc
jne
in
sbb
sbb
mov
rcrb
test
mov
cmc
xchg
cli
imul
and
push
pop
icebp
fsubr
scas
jnp
cmp
imul
test
sbb
lahf
inc
out
nop
bound
mov
dec
mov
cmp
mov
adc
test
aas
subl
std
cmp
inc
mov
into
sbb
mov
adc
loopne
mov
mov
push
push
fsubrs
adc
jg
xchg
fwait
mov
adcb
jp
lods
stos
cwtl
mov
sub
das
and
sbb
xchg
rorb
mov
icebp
mov
pop
icebp
in
inc
pop
push
mov
stos
xor
lret
xor
jle
push
sbb
out
mov
sub
xchg
adc
inc
popa
jle
cmpsl
arpl
inc
stos
addr16
sub
and
scas
xor
or
inc
decl
cld
jmp
lock
test
sbb
imul
sbb
inc
sti
aaa
push
push
add
mov
mov
test
mov
dec
and
or
jge
xor
jmp
push
inc
pusha
jnp
lcall
add
push
jne
mov
push
rcrl
ret
call
push
or
call
xor
or
call
lock
rorl
sub
mov
mov
fcomps
push
xor
dec
xorb
xchg
mov
and
jmp
push
cli
fadds
cltd
das
or
repz
add
add
cld
mov
out
and
sub
push
jmp
add
fmull
dec
add
loopne
or
jo
mov
pushf
sbb
lods
fldt
clc
mov
pop
or
or
jg
cld
test
pop
sub
cmp
sahf
daa
xor
adc
mov
daa
mov
inc
dec
iret
mov
adc
xchg
aad
xchg
jbe
mov
or
js
ljmp
sub
bound
add
mov
inc
or
sbb
dec
pop
shlb
aas
loope
addb
icebp
push
insb
add
adc
or
clc
lock
in
sub
aam
pop
mov
rorb
xchg
aaa
ds
xchg
shlb
lock
rep
inc
call
or
add
cmp
dec
sbb
ljmp
and
imul
mov
jg
notl
xor
cwtl
pop
test
pop
add
sbb
inc
add
mov
ds
dec
lahf
mov
sbb
lret
dec
lea
push
jo
adc
clc
and
sbb
dec
addb
add
lea
push
push
sub
imul
jno
fsubrl
mov
or
ret
int3
pop
push
shlb
jge
mov
or
cmpsl
addr16
xor
xorl
aam
jne
xor
xchg
or
or
test
aam
and
adcl
mov
push
pop
mov
mov
rcrb
notb
push
shl
clc
jae
popa
rolb
or
in
sub
jo
jne
pop
or
clc
pop
fsubs
outsl
adc
and
pop
mov
push
inc
or
add
jo
mov
sub
jo
imul
ficoms
pusha
lods
hlt
xor
cmpsb
inc
addl
lea
aas
in
scas
push
es
inc
leave
mov
add
testl
inc
add
fidivs
lret
add
outsl
movsb
aas
xchg
lret
sub
push
loopne
and
jbe
inc
jo
pop
lock
and
js
mov
hlt
insb
pop
xorb
add
add
cld
mov
sbbb
in
jmp
outsl
leave
sub
leave
ds
inc
hlt
punpckhwd
aaa
mov
dec
lea
hlt
add
or
daa
push
ret
add
jae
adc
sub
test
stos
cmp
mov
add
adc
or
vmread
mov
dec
pusha
add
gs
and
cmpsb
and
or
pusha
and
push
jno
xor
xor
incb
xor
hlt
adc
or
push
push
fdivrp
xchg
sub
pop
lock
int3
adcb
or
jno,pn
divb
inc
es
in
rorb
lods
fnstcw
andb
test
cltd
push
das
pop
frstor
mov
jne
nop
push
stos
out
fadd
ret
in
or
sti
mov
ret
push
jbe
push
add
in
push
call
mov
push
movsl
adc
cmp
enter
push
or
movsl
pop
add
popa
push
add
in
jns
cwtl
mov
jo
adc
inc
inc
sub
xor
popa
pop
cli
and
push
jge
add
jg
sub
sbb
sbb
out
and
loope
mov
pusha
dec
pop
mov
sarl
sbb
nop
inc
sbb
dec
and
shrb
or
div
add
mov
adc
clc
push
push
sbb
inc
add
and
out
mov
fadds
call
push
mov
dec
nop
jbe
or
jne
add
jne
cs
ljmp
xchg
ficoms
jecxz
daa
lret
test
cmp
inc
sub
mov
jnp
test
xchg
jbe
add
mov
loopne
xchg
bound
and
add
dec
call
mov
pop
scas
or
pop
pop
dec
cmpl
or
add
dec
mov
jne
dec
pushf
adc
push
push
daa
adc
outsl
add
cmp
mov
jmp
pop
pop
pop
inc
mov
nop
xchg
jbe
add
daa
jmp
loopne
subb
outsb
popl
call
shll
movsl
lret
sbb
sub
jbe
mov
xor
pop
ja
pop
into
jo
xor
and
mov
div
and
dec
mov
xor
sbb
dec
inc
mov
pop
call
push
das
xlat
cmc
inc
add
jnp
mov
push
fimuls
shl
in
pusha
xchg
xor
into
push
and
xchg
dec
rolb
inc
std
lcall
lret
jnp
shll
das
add
jmp
int3
pop
mov
out
mov
jl
pop
inc
add
lds
lret
sub
shlb
adc
and
pop
add
xchg
hlt
mov
out
pop
mov
xchg
jnp
fldenv
jl
lds
add
test
pop
out
cltd
decb
mov
xchg
scas
ret
js
ja
cmpsb
rorl
dec
addr16
cli
incb
jle
fs
xor
jbe
pop
jmp
xor
mov
adc
dec
fxtract
cmp
adcl
das
push
ret
cmp
aas
out
out
add
sbbb
cld
dec
dec
shll
insb
push
daa
push
mov
dec
xor
sub
popf
jp
cmp
mov
or
lock
or
or
sub
insl
inc
loop
sahf
sbb
arpl
inc
hlt
sub
mov
push
sbb
cmc
or
cmp
imul
xorb
push
in
push
push
inc
xchg
hlt
add
push
outsl
xlat
dec
cmp
pop
jge
sahf
xor
add
incl
rorb
jmp
addb
sub
dec
addb
or
jmp
jnp
mov
and
sbb
lods
adc
adc
mov
add
jmp
sbb
lods
aas
outsb
add
inc
nop
or
or
cmova
mov
xchg
mov
mov
cmp
or
lretw
sub
cmp
aas
pusha
addl
fs
sub
loopne
sbb
mov
dec
dec
loopne
scas
sub
enter
adc
jne
imul
pushf
insb
cmp
das
rorb
icebp
andl
mov
or
lahf
or
icebp
xlat
xchg
fucomip
mov
xor
int3
xchg
ret
inc
add
fst
jne
sbb
push
leave
lcall
mov
jnp
enter
mov
iret
mov
add
sbb
mov
pop
mov
andl
shll
lret
sbb
add
mov
jg
repnz
xchg
push
shlb
addr16
mov
dec
mov
mov
mov
xorb
mov
pop
movsl
and
push
xchg
mov
daa
outsb
ficoml
xor
mov
ljmp
lods
popa
ret
and
clc
xchg
adc
scas
roll
fcompl
clc
movsb
push
lahf
fwait
push
ljmp
push
lahf
pop
push
xor
jns
dec
or
sbb
or
inc
mov
call
push
in
daa
bound
add
push
adc
xorl
call
clc
bts
xchg
dec
xor
xor
into
push
push
jne
out
and
testb
pop
or
stos
xchg
fwait
lods
test
add
push
and
outsb
lea
inc
xchg
adc
imul
xchg
insb
pop
test
cmpsl
push
aaa
call
dec
aas
movsl
push
out
fld1
cmp
ret
mov
mov
xor
pop
push
adc
ds
nop
js
rcl
lret
adc
sub
sbb
lods
dec
jge
cmp
inc
in
mov
jmp
inc
lea
mov
xadd
push
xor
pop
test
or
rclb
lock
mull
inc
ret
push
or
mov
pop
and
cmpsb
xchg
lock
jp
mov
das
dec
xor
xor
push
mov
mov
xchg
xor
jp
int
nop
pusha
fcompl
mov
popf
mov
sbb
loop
adc
outsl
inc
sbb
or
or
jp
xchg
sbb
fistpll
sub
scas
mov
rolb
negl
push
rorb
sbb
in
xchg
loopne
jo
dec
loope
mov
xlat
pop
jle
out
inc
pop
add
sbb
push
push
call
cmp
into
inc
rcr
jmp
and
add
jne
push
pop
rol
cmpl
nop
gs
adc
test
cmp
test
or
sbbl
loopne
jno
call
adc
shrl
xchg
mov
test
arpl
jae,pt
cmp
or
jle
repnz
popf
sub
clc
pop
mov
and
pop
dec
test
cmp
orb
sub
movsl
pop
sbb
sub
pop
lcall
jbe
pop
test
test
aas
sub
aaa
cbtw
repnz
scas
add
or
or
sbb
sub
cmp
mov
sbb
lret
ret
pop
clc
xchg
push
jo
das
jb
xlat
add
jnp
ret
pusha
ja
outsb
mov
add
mov
fdivrs
sub
pushf
mov
lock
cmpb
jl
test
mov
sbb
js
fs
push
sub
xchg
push
in
or
mov
inc
lds
and
jne
dec
loope
lock
test
leave
pop
lds
and
out
mov
jns
scas
add
sbb
or
mov
pusha
push
lahf
pushf
add
rorb
out
push
out
sub
xchg
jl
and
icebp
jo
cld
dec
std
xor
sbb
fimuls
adcb
test
xor
lods
dec
or
leave
pop
jmp
dec
hlt
repz
loope
adc
sti
adc
dec
push
xor
cs
cmp
lds
lea
idivl
jp
mov
dec
ja
inc
xchg
push
push
pop
fcomi
add
push
rorb
insb
dec
jns
cld
add
insb
icebp
adc
xchg
test
mov
sub
rcrb
sub
add
repnz
jb
adc
int3
rol
outsl
and
sbb
add
fistpll
or
add
add
inc
xor
add
dec
pop
lret
nop
or
xor
popa
orl
or
push
fisubrl
sbb
popl
cs
loop
call
or
sub
cltd
push
mov
xchg
js
mov
xor
cmp
mov
addr16
stos
mov
xchg
lea
mov
push
push
push
stc
push
ss
sub
scas
mov
add
xchg
cli
ja
divb
mov
loopne
clc
xchg
mov
test
xchg
fnstcw
mov
jbe
int3
ret
mov
mov
aad
shrl
dec
mov
push
bound
out
ss
popa
mov
inc
nop
loopne
cmp
hlt
icebp
push
inc
jmp
adc
shr
ljmp
stc
xchg
mov
fstps
push
and
mov
mov
lds
sbb
ret
cli
mov
inc
into
jg
dec
into
repz
incb
sub
stos
test
pop
outsl
push
and
add
push
or
insl
daa
sbb
leave
inc
test
test
and
lods
add
mov
lods
scas
sub
sub
cmp
data16
mov
fbld
jmp
or
add
and
out
insb
and
push
mov
mov
hlt
scas
adc
test
aaa
jle
mov
cmp
dec
cmp
out
nop
insl
and
sti
popa
lcall
xchg
xorb
fwait
or
loope
jecxz
sbb
and
mov
or
sub
ret
sar
repz
out
pop
and
mov
and
pop
cmp
and
lods
sar
pop
add
cltd
dec
dec
shl
sahf
push
mov
out
mov
or
jl
sbb
add
sub
mov
mov
enter
or
rorb
dec
pavgb
loope
shrb
sbb
popa
fisubrs
outsl
push
and
and
faddp
dec
pop
lret
dec
add
mov
pop
int
add
scas
nop
add
cmc
jp
aas
add
sbb
and
clc
adc
jmp
and
push
and
add
pop
inc
adc
dec
jne
sbb
jae
xor
filds
pop
cld
jmp
std
cmp
jae
xor
jmp
xor
cs
sbb
or
pop
out
mov
and
loop
sub
sar
add
in
jp
add
adc
fistps
pusha
or
dec
sub
adc
loop
dec
pop
cmpsl
pop
out
fdivp
push
loopne
stos
lock
and
js
mov
les
xchg
stc
in
mov
daa
shl
mov
and
jmp
lahf
clc
add
les
cwtl
mov
stos
adc
aas
xchg
divb
les
adc
test
inc
repnz
jbe
or
fsubl
test
stos
int3
repnz
push
dec
pop
lods
cs
lods
and
xchg
xor
adc
loope
add
int3
or
mov
lds
mov
dec
xchg
dec
dec
or
mov
dec
lock
jne
ss
add
jnp
out
jle,pt
push
js
pop
cwtl
or
inc
cwtl
incl
mov
jp
shrl
es
sub
push
adc
les
mov
pop
fidivrs
jns
pusha
mov
int
fisubrs
nop
add
subl
add
popa
test
xor
push
ss
add
jg
or
push
mov
test
pop
test
addl
adc
fwait
mov
aad
mov
sub
sub
dec
lock
fidivrl
sub
mov
sub
loopne
outsb
dec
and
fdivr
fldcw
xchg
jle
xchg
repz
lock
jle
test
sarb
jg
or
sbb
sub
aas
mov
sti
into
movsb
cmp
inc
fdivrl
ss
pusha
stos
push
fsubs
mov
pusha
popf
inc
negl
arpl
xchg
cwtl
add
mov
xorb
or
pop
mov
or
mov
sub
outsl
cld
sub
xor
pop
xchg
push
fdivrs
jecxz
mov
test
pop
sahf
call
push
xchg
pop
imul
jg
lods
seta
movsl
sbb
cmpsl
xor
xchg
lock
inc
popf
fidivl
pop
mov
xor
test
sahf
test
flds
aaa
out
sub
jae
push
cmpsl
jo
lahf
mov
lret
cmp
lods
rol
lods
lret
adc
and
dec
pop
jp
insl
mov
pop
mov
ja
adc
imul
inc
in
ljmp
xor
sub
add
bound
ret
xor
fcoms
addr16
and
mov
flds
out
jp
inc
add
xor
icebp
movsl
xchg
and
stos
mov
and
add
jne
add
inc
jle
push
popa
xor
sbb
scas
bound
xorb
popa
mov
push
or
leave
xor
enter
fsubrl
pop
clc
stos
mov
enter
mov
mov
rcrb
rcrb
jg
xchg
push
jae
cmp
daa
rcr
pop
add
dec
add
test
sbbl
arpl
push
in
xor
lret
clc
sbb
stc
add
adc
ljmp
or
dec
adc
adc
xchg
jmp
dec
les
cmp
xor
mov
push
into
mov
into
js
xor
mov
repnz
movsl
int3
int3
mov
into
dec
mov
xor
enter
and
sti
sbb
xor
arpl
or
inc
mov
les
pop
popa
inc
arpl
pop
fsubrl
sti
add
add
inc
ljmp
or
movsb
popf
dec
scas
sbb
mov
idivb
insl
and
fidivrs
stos
or
fcomps
call
lds
sub
mov
xchg
dec
popf
xchg
jmp
into
mov
imul
pusha
je
fnsave
int3
sbb
arpl
loop
mov
pop
and
ret
add
xor
cmp
cld
es
cli
mov
mov
fimuls
xor
cltd
and
add
mov
add
ja
clc
inc
test
subl
lods
sahf
lock
orl
mov
mov
adc
jne
fmuls
add
push
and
push
and
inc
pusha
inc
push
cmpsl
cmp
imul
int3
outsb
insb
pop
sub
aaa
add
outsb
mov
and
mov
or
icebp
mov
xchg
les
cmp
jo
inc
les
dec
push
jmp
adc
cmovnp
stos
adc
adc
mov
fwait
adc
shl
daa
adc
jp
cmp
filds
fnstcw
gs
fadd
adc
ror
or
add
decb
loopne
in
and
call
xor
sub
jl
pop
clc
mov
push
loope
loopne
push
fwait
pop
xor
add
push
add
adcl
xor
jo
xor
jmp
or
leave
fsubr
dec
xchg
mov
arpl
mov
sbb
xchg
sub
shlb
out
insb
stc
in
add
fmuls
jmp
lock
xchg
mov
push
in
add
loopne
cmpsb
add
jg
xor
add
loope
pop
outsl
inc
inc
dec
dec
test
sub
divb
dec
xchg
cld
shlb
dec
bound
add
ss
adc
adc
sbb
shrl
outsb
xor
arpl
fdivrs
loop
adc
mov
jmp
lret
mov
int3
aad
jnp
andb
adc
bound
mov
add
dec
add
fdivp
inc
or
cltd
popa
das
mov
lock
cmp
in
mov
insb
inc
sbb
add
xor
aas
push
testb
mov
push
lahf
push
dec
sbb
inc
sbb
xor
xchg
loop
lcall
insl
imul
dec
and
pop
mov
popf
addr16
orl
push
repz
add
inc
outsl
aaa
lds
inc
push
cli
ret
sub
daa
xor
xchg
aam
add
popf
data16
adc
popa
in
mov
dec
mov
test
ss
and
pop
or
pop
adcb
mov
inc
mov
pop
sbb
jp
pop
lock
and
pop
add
pop
jmp
add
addb
lods
xor
mov
les
aad
or
sbb
adc
xor
or
and
add
cmp
mov
scas
insl
js
ljmp
cmp
and
adc
je
lcall
in
push
add
push
mov
mov
mov
cwtl
add
int
fmuls
loope
lahf
cmp
lods
je
pushf
fmuls
loop
add
dec
add
cld
add
and
movsb
outsl
pop
mov
or
and
jmp
out
ret
and
fisubrs
pop
cli
and
sbb
icebp
mov
out
ljmp
sbb
xchg
subl
push
hlt
xor
mov
xor
jp
dec
xor
es
shrl
add
ss
mov
or
jge
pop
xchg
sub
lock
rcl
mov
add
cmc
mull
fsubrl
dec
jmp
push
sub
adc
adc
loopne
imul
add
xchg
std
pop
mov
gs
jne
cmp
std
mov
jo
ficoml
push
sub
pop
cmp
pop
ret
iret
bound
fdivs
ffree
ret
push
clc
cmpsb
pop
pop
inc
ljmp
and
movsb
idivb
and
mov
xchg
and
subb
and
cmp
js
pop
adc
lret
dec
cld
imul
inc
add
bound
mov
mov
sub
add
jno
ss
fcmove
sub
inc
addl
fisubl
jp
icebp
test
mov
iret
xchg
mov
arpl
mov
movsl
adc
jae
push
mov
sub
mov
push
dec
add
xchg
gs
pop
shlb
repz
add
popf
daa
inc
or
pop
ret
lds
jno
mov
vmovdqu
jo
test
fdivs
pop
daa
inc
je
les
pop
ret
add
in
out
ret
or
xchg
shlb
mov
mov
mov
mov
or
sbb
jo
jmp
rcll
jno
dec
in
push
push
call
int3
dec
inc
xchg
add
imul
sub
fcoml
stos
mov
xor
ret
pop
and
clc
add
test
out
mov
pop
cltd
lcall
mov
add
or
cmp
push
ss
add
shrb
pop
jge
into
adc
sub
dec
loop
add
es
ret
cmp
sbb
daa
sub
int
push
add
repz
cmp
pushf
ja
ds
pop
loop
loop
or
mov
jbe
inc
jl
ss
mov
lahf
seta
xchg
cmp
jb
outsb
cmp
xor
mov
push
xlat
sub
jmp
shrb
mov
cmc
std
arpl
mov
aad
push
sbb
dec
js
lock
mov
push
and
and
xchg
xor
sbb
sub
out
addl
add
cwtl
pop
mov
lcall
push
inc
jmp
nop
sub
push
mov
outsl
mov
add
mov
out
add
sbb
mov
xorb
xlat
loopne
add
lods
sarb
pop
and
imul
int
xchg
push
test
shlb
js
test
pusha
cmp
lods
push
or
push
test
adc
bound
cltd
add
push
test
adc
xor
inc
sarb
cmpsb
daa
or
add
loopne
xor
cmp
mov
adc
mov
fsubrs
sbb
ret
xchg
aam
pop
ret
pop
xor
aam
or
dec
xchg
dec
faddl
insb
push
sub
add
push
inc
nop
sbb
in
mov
loopne
mov
and
jmp
and
push
lock
xchg
insb
dec
xor
pusha
mov
sub
xor
adc
adc
fnstenv
ret
push
sub
bound
pavgb
or
orl
stc
xchg
mov
push
jmp
lock
xchg
nop
popa
aaa
cmp
or
dec
sbb
test
out
inc
out
mov
push
adc
and
insl
push
xor
mov
out
jb
adc
dec
push
sbb
shll
shrb
inc
and
mov
xchg
je
mov
jb
mov
cwtl
je
enter
add
jle
stc
push
sbb
add
inc
popa
xchg
sti
mov
int3
push
mov
push
xor
scas
stos
or
jne
incl
adc
test
stos
xor
stos
sbb
jg
rorb
enter
cmp
add
dec
and
mov
je
jg
adc
in
clc
inc
nop
and
inc
inc
inc
sti
pusha
jno
scas
dec
jnp
mov
outsl
icebp
inc
jae
mov
mov
pop
inc
push
outsl
cli
jmp
call
rolb
xor
mov
dec
fisubrl
pop
jmp
pushaw
sub
pop
push
call
xor
std
push
outsb
and
es
fs
pusha
or
popf
fwait
pop
jo
dec
jns
lds
mov
inc
push
dec
mov
out
leave
xor
iret
rorl
inc
loopne
lods
xor
xchg
insl
xor
movsl
outsb
pop
aaa
shrb
pop
push
and
mov
es
jge
or
mov
inc
notb
addr16
add
dec
ret
inc
xor
loopne
xor
push
or
shl
sarl
push
mov
dec
jae
mov
aas
loope
and
addr16
mov
push
loop
cmc
cli
add
daa
and
cmp
roll
sub
add
hlt
test
test
jge
inc
icebp
add
fsubl
cwtl
daa
rcrl
mov
jno
mov
addr16
adc
orb
mov
mov
sahf
dec
xchg
push
sahf
push
ds
loope
or
xchg
xchg
dec
out
repnz
inc
add
es
or
mov
es
je
loop
cmp
sub
scas
push
push
mov
popa
pop
orb
repz
dec
data16
or
pop
dec
cwtl
in
dec
add
adc
shl
ja
cmp
jecxz
mov
xor
sub
jne
sbb
jmp
pop
or
pop
cmp
dec
sbb
adc
cmp
daa
or
test
mov
adc
add
xor
xchg
fadds
jnp
cli
jo
das
sbb
aam
cltd
adc
sub
xor
mov
mov
loope
call
outsl
dec
loope
out
dec
mov
imul
cmp
stc
fiadds
les
mov
test
clc
rolb
push
add
inc
outsl
push
inc
jl
xchg
jge
inc
imul
iret
sub
addr16
sbb
sub
scas
in
and
push
sarb
test
imul
xbegin
mov
add
popf
sub
add
data16
and
ret
lods
enter
clc
ja
in
ss
adc
adcb
push
pusha
aad
mov
push
outsl
mov
or
cld
inc
add
repz
rcr
pop
test
push
and
push
fwait
arpl
dec
lods
rcrb
rcr
hlt
fs
popa
mov
add
jmp
mov
and
ja
and
loop
dec
sub
xlat
cmp
fsubs
outsb
popf
popa
push
loope
jge
xchg
pop
imull
call
cmpsb
sarb
insl
fwait
clc
jmp
sub
sub
andb
fmul
stc
addr16
popa
pusha
lods
int
rcll
push
int
add
sub
pop
sub
push
jmp
outsl
sbb
mov
xchg
sbb
push
rcrb
lods
bound
rcr
mov
sahf
lret
popa
jnp
mov
stc
cmpl
movsb
dec
int
cmp
repz
outsb
mov
push
clc
ss
inc
in
xchg
mov
mov
mov
shl
and
mov
adc
popa
and
fucomp
push
popa
sub
push
loope
and
test
andb
xor
inc
in
andb
mov
and
aas
xchg
jo
scas
sti
xor
xor
and
pop
xchg
outsl
dec
mov
mov
aaa
cmpsb
enter
test
dec
out
addb
jecxz
mov
das
fcomps
add
sub
sbb
xchg
pop
les
push
dec
mov
sub
add
enter
shlb
inc
leave
fdivrs
xchg
mov
jb
incb
adc
dec
or
inc
daa
or
out
pusha
sbb
enter
cmp
sbb
sbbl
adc
lret
test
add
lret
pop
dec
xor
mov
jbe
clc
test
ja
pop
rclb
dec
outsl
lret
pusha
nop
orl
es
hlt
sahf
sub
and
cmc
enter
mov
xorl
inc
repz
push
or
sub
add
sarb
addl
or
cs
push
inc
loope
lock
pop
gs
les
jl
psrlw
inc
dec
mov
xchg
add
xor
inc
sub
das
mov
inc
jae
loop
loopne
push
sbb
fcomps
pop
ret
and
xchg
sbb
dec
sbb
lods
cli
jge
xor
cltd
stos
add
xchg
rolb
lahf
jmp
mov
push
stos
cmc
sbb
lcall
jns
aas
arpl
dec
shlb
in
aam
add
shll
ret
insb
jb
and
mov
sub
adc
add
or
inc
xor
imul
push
mov
in
dec
lock
ror
push
and
in
jecxz
add
les
dec
lods
adc
sahf
decl
xor
fcom
push
sbb
jecxz
pop
push
testb
pop
mov
add
add
mov
push
loope
pop
dec
roll
adc
lea
jmp
push
icebp
cltd
outsl
pusha
ja
pop
or
mov
pop
in
popa
cli
test
and
dec
adc
xchg
mov
cwtl
xor
or
pop
dec
push
inc
mov
loopne
cwtl
inc
das
adc
shrl
xor
dec
jmp
fiadds
ret
mov
pop
scas
add
mov
pop
dec
adc
xchg
popa
push
mov
mov
icebp
jge
adc
insb
sub
dec
fldt
add
jmp
mov
or
std
pop
test
sub
mov
push
or
add
lods
add
mov
clc
sbbb
jecxz
xchg
xchg
pushfw
push
imul
sub
xor
jmp
sbb
es
sbb
incl
sub
cld
imul
sub
outsb
stos
pop
fiadds
daa
lret
push
scas
push
xchg
sub
stc
into
imulb
mov
lock
dec
rcl
inc
push
mov
mov
push
inc
fisttps
dec
cmpsl
rorb
fstpt
add
sub
mov
lcall
add
adc
push
int3
lret
fsubs
movsl
and
mov
mov
dec
and
mov
add
shrb
lret
out
cltd
js
insb
dec
or
pop
add
mov
mov
ds
cmp
add
divb
out
bound
adc
add
or
into
inc
push
mov
aaa
js
mov
pop
cmp
inc
and
lock
xor
sbb
pop
or
jmp
addb
push
xlat
pop
pop
lock
push
int3
dec
cs
or
add
clc
cmp
pop
fwait
jge
adc
test
fucompp
jnp
adc
rol
mov
and
fisttpl
jecxz
sbb
lods
sub
push
cmpsb
mov
inc
xor
sub
xor
mov
scas
ret
xchg
sbb
aam
add
adcb
sub
mov
inc
xlat
dec
jnp
orb
add
push
orb
dec
jp
rolb
leave
shl
add
adc
sbb
ljmp
inc
in
icebp
movsb
bound
sub
push
mov
aam
les
add
jp
loopne
pop
ficoml
add
add
pop
mov
push
jl
iret
push
loopne
out
inc
sub
loopne
insl
or
rolb
mov
daa
or
fisubs
xchg
fsubp
inc
ret
call
ja
jmp
mov
sarb
loop
lret
push
dec
mov
and
pop
xchg
dec
popf
js
test
push
es
ret
ja
push
inc
pop
push
push
or
cmp
daa
push
notl
jge
and
xor
lock
leave
test
imul
pusha
cmp
sbb
or
add
push
clc
es
dec
sbb
fidivs
cs
inc
mov
arpl
in
and
adc
add
pop
rcrb
inc
or
add
xor
jmp
dec
mov
mov
shlb
add
and
xchg
inc
bound
cmp
and
mov
or
cmp
adc
add
jp
pop
push
or
arpl
imul
sbb
inc
fcoms
add
dec
jg
xchg
push
shrb
adc
outsl
push
inc
outsb
or
pushf
and
pop
into
mov
repz
mov
add
add
jp
lock
andb
int
or
mov
aas
notl
clc
lds
in
popf
xor
add
insb
cmpsb
jne
adc
jnp
mov
or
testl
jae
sbbl
out
or
outsb
mov
or
sub
push
aam
mov
pop
movsl
xchg
sbb
lret
pushf
mov
loopne
mov
add
imul
movsw
call
faddl
ljmp
push
adc
enter
ja
adc
pushf
aam
jne
sub
and
add
jbe
es
ljmp
xchg
push
imul
jg
shlb
in
out
es
mov
data16
xchg
jae
or
xor
xchg
jo
in
fmull
sahf
cmpsb
movups
inc
dec
mov
cmp
fsts
sbb
int
cmp
xchg
xor
mov
dec
fisubrs
sbb
push
jbe
arpl
lods
stos
pop
ret
call
aas
aad
sub
sub
cmp
sbb
xor
or
insb
or
test
cs
mov
jg
repz
add
mov
mov
mov
loopne
mov
adc
push
ds
adc
faddp
and
inc
repz
adc
roll
xchg
xchg
aas
std
into
add
icebp
mov
and
dec
sbb
inc
adc
push
mov
lds
js
mov
xor
test
push
bnd
incb
rcrl
movsl
mov
adc
xorb
arpl
aaa
imul
jg
mov
xchg
sub
mov
js
iret
sbb
xor
int
add
and
addr16
xor
daa
sub
or
push
outsb
or
sub
inc
and
ret
popf
in
loop
test
int3
popa
mov
imulb
xchg
mulb
inc
cmp
jmp
cmp
sub
or
mov
int
daa
outsl
xchg
stos
jp
jmp
cltd
loope
vpsubsw
and
and
xchg
out
or
or
xor
sub
andl
inc
pop
fxch
dec
and
mov
and
sub
cmp
jmp
mov
mov
inc
repz
popa
repz
inc
loop
dec
imull
mov
icebp
add
leave
sbb
sub
or
pop
hlt
cltd
sbb
sbb
xchg
loope
sti
imul
mov
add
pop
rol
dec
jo
out
cltd
fsub
fldenv
jg
icebp
add
pusha
xor
orb
mov
scas
push
sbb
push
pop
mov
sub
mov
pop
adc
ja
pushf
lcall
nop
xor
mov
or
les
lahf
mov
into
sub
das
xor
or
jge
or
mov
outsb
int3
mov
ror
adc
inc
sbb
add
xchg
sbbb
pop
pop
xor
push
cmpsb
push
sbb
pop
push
mov
repz
dec
cmp
push
or
xchg
add
and
shlb
out
shld
pop
aaa
fadds
push
pop
fildll
or
push
xchg
inc
sub
rcl
mov
pusha
leave
rolb
and
es
pop
fdivrs
cmp
test
test
adc
movsl
sbb
loope
imul
outsb
shrl
sbb
pop
cmp
adc
xor
cmpsl
adc
mov
or
dec
and
adc
nop
xchg
aas
dec
pop
clc
test
push
jbe
sbb
sbb
inc
mov
lock
sub
mov
jo
inc
dec
imul
test
or
pop
adc
inc
in
cmpsl
subl
jecxz
icebp
fisttps
xchg
orl
mov
push
rolb
mov
adc
out
nop
pop
rclb
aas
loop
pusha
rorl
or
inc
or
popf
push
adc
or
and
sbb
and
pusha
sti
push
aad
lds
push
mov
xchg
rcrb
mov
and
xchg
test
dec
and
sub
push
adc
pop
or
dec
arpl
push
test
mov
addb
sub
cmpsb
mov
cld
adc
mov
shrl
xchg
pop
add
pop
adc
mov
lods
inc
inc
and
or
jge
arpl
cmp
and
ret
mov
pop
rclb
add
rorb
cmc
pop
repz
out
icebp
ret
dec
mov
or
sti
adc
inc
push
int3
jae
daa
fisubrs
loope
imul
sbb
imul
adc
lret
adc
cmp
push
xor
pop
pop
xor
sarb
cmp
iret
inc
loopne
adc
bound
or
pop
adc
fisubl
adc
sbb
test
add
insb
icebp
sbb
add
adc
mov
es
mov
jo
mov
xchg
sub
adc
inc
and
dec
jno
sbb
cmp
mov
jbe
insl
mov
mov
aad
jmp
sbbl
shlb
mov
push
enter
test
inc
add
add
dec
and
sbb
add
aaa
cs
xor
test
repnz
data16
sbb
xchg
repnz
dec
ss
test
jg
mov
push
mov
jne
sbb
imul
prefetchwt1
or
roll
xor
dec
mov
add
inc
fistpl
push
adc
add
test
mov
mov
add
bound
decb
test
je
xor
iret
ffree
jg
add
cmp
cld
cmpl
push
add
push
jne
jmp
out
add
add
mov
out
dec
sub
pop
movsb
adc
xchg
sub
cltd
xchg
imul
and
pop
enter
sub
xchg
orb
sbb
jecxz
add
add
sbb
push
fbld
push
jmp
test
jae
imul
and
rorb
xor
push
or
pop
testl
push
xorb
cmc
pop
loop
xor
dec
clc
pop
fimuls
add
out
mov
pop
int3
mov
test
dec
jecxz
add
add
xchg
pop
call
lods
xchg
testl
addb
xor
outsl
inc
sbb
adc
adc
dec
mov
cmpb
lock
xor
jecxz
imul
xchg
mov
fidivl
out
adc
jno
cmc
cmp
mov
add
fmuls
adc
mov
pop
xor
xchg
pusha
daa
xor
test
mov
adc
cmp
insb
cmp
pop
push
pop
mov
dec
cmp
sbb
cld
sub
jns
sar
jp
fwait
jo
fadds
push
andl
jb
or
add
sub
cmp
push
pop
inc
sub
clc
add
mov
mov
xchg
nop
xchg
mov
mov
inc
flds
mov
call
add
or
sub
cmpsl
nop
loopne
xchg
cld
ljmp
movl
or
rcrb
or
subl
mull
out
xchg
aas
in
pop
dec
dec
ja
xor
lds
aaa
test
ss
or
and
push
dec
inc
xor
push
pop
rclb
and
push
cmp
loop
mov
push
adc
pop
hlt
dec
adc
imul
and
jecxz
test
adc
fsts
nop
mov
xchg
hlt
push
jp
pop
sub
and
sbb
out
add
mov
pop
insb
and
and
shll
sahf
sbb
jbe
lods
outsb
pop
mov
pop
test
jmp
sbb
mov
xor
arpl
cmp
sbb
adc
imul
loop
clc
push
add
scas
add
cmp
push
ja
sbb
xlat
fcompl
mov
jo
pop
push
sbb
cmp
mov
xchg
pop
dec
testl
add
hlt
aad
jg
mov
loop
sbb
das
adc
sub
sti
mov
jb
jmp
inc
and
addb
lds
adc
sbb
and
lcall
es
cmpsl
imul
inc
pop
lods
mov
push
xor
ja
inc
adc
orb
cmp
sub
mov
cmp
push
daa
pop
hlt
aaa
mov
dec
push
push
sbb
pop
lock
cltd
lcall
outsl
and
xchg
and
addl
jp
loope
push
cltd
fmuls
dec
mov
push
push
cmp
mov
cld
lahf
mov
fiaddl
mov
mov
dec
lods
movsb
adc
fcoml
rorb
aam
sarb
lods
in
and
xchg
dec
sbb
das
pop
push
adc
inc
jge
xchg
shl
repz
push
mov
pop
pop
dec
imul
mov
push
sti
and
pop
sbb
sbb
clc
pop
sub
xchg
add
jecxz
js
icebp
notb
inc
add
mov
and
insb
xchg
lcall
mov
sbb
negb
fwait
fwait
sub
in
and
push
scas
addl
ljmp
and
dec
mov
push
outsl
bound
loop
repnz
mov
dec
clc
ret
lods
mov
int
sub
fnstcw
leave
and
mov
mov
xlat
sbb
pushf
or
xchg
xchg
pop
insl
outsb
or
lret
push
adc
rcll
out
fistl
add
test
jo
adc
add
sarl
mov
mov
inc
loope
testl
add
adc
push
mov
dec
inc
and
dec
or
cmp
pavgb
lods
or
jl
sub
pop
lret
sbb
adc
xchg
ljmp
rcll
add
jno
mov
rcl
clc
push
xchg
mov
ret
mov
popa
xchg
xor
xchg
xchg
adc
push
nop
or
or
call
jecxz
and
or
pop
cld
pushf
rorl
sub
push
push
sbb
or
stc
fxch
in
add
inc
push
cmpsl
push
adc
adc
out
scas
add
add
sub
je
or
dec
pushl
sbbl
sub
mov
mov
neg
dec
jmp
clc
mov
addb
outsl
mov
dec
incb
xchg
mov
push
shl
or
jmp
mov
jmp
adc
xor
dec
mov
push
in
mov
pop
addb
jp
cmp
rorl
xchg
imul
pusha
aaa
adc
or
add
or
stos
not
fld
scas
clc
adc
or
and
les
mov
jmp
pusha
mov
cmp
pop
dec
or
repz
stos
mov
xchg
xlat
repnz
sbb
xor
xor
les
fsubr
or
inc
roll
pop
cmp
clc
jmp
dec
and
add
ljmp
or
xor
xlat
mov
add
lock
test
cs
mov
sbb
or
inc
sbb
pop
cmp
adc
out
sub
aam
incl
pshufw
xchg
rorl
lret
fwait
jno
sbb
mov
pusha
pop
ja
ljmp
in
dec
add
addl
push
add
pusha
cli
jae
push
jmp
inc
jo
add
pop
add
lret
pop
xchg
outsl
arpl
push
lock
hlt
mov
cmp
push
adc
imul
mov
addr16
lret
int
jl
sub
or
icebp
sarb
test
dec
sbb
xor
xor
dec
add
insl
sub
and
mov
xchg
adc
mov
shr
xchg
stos
pushf
xor
lock
shll
mov
das
inc
imul
xor
push
rol
aad
push
or
inc
dec
jecxz
clc
jecxz
aam
xchg
loope
ljmp
mov
sbb
push
js
add
adc
pop
cld
filds
rolb
push
popa
pop
movsb
xor
mov
mov
xor
cmpl
aas
pop
add
jno
mov
mov
clc
jae
call
add
dec
lds
fcmove
in
insb
pop
jno
push
cmpsl
cmp
xor
cmp
pop
stc
gs
mov
and
push
sbb
pop
dec
xchg
add
dec
pop
cs
sbb
sbb
sbbb
loopne
xchg
inc
sbb
test
push
mov
jb
push
mov
xchg
cli
lods
sbb
and
push
outsb
jbe
xor
cmp
or
dec
outsl
cmp
pusha
sub
mov
int
adc
add
sub
push
pushaw
stc
mov
sbb
sbbl
addr16
mov
mov
jmp
xchg
add
push
jecxz
sbb
push
clc
out
insb
sub
adc
or
out
mov
jl
add
je
jnp
nop
xor
xchg
test
idivb
xchg
mov
ret
add
shlb
shrb
sub
clc
out
pop
lea
cld
inc
add
add
mov
imul
mov
pop
in
jbe
sub
sbb
fdiv
push
and
push
xor
decl
sub
in
inc
mov
popa
loope
loop
mov
adc
ficoms
lods
and
sbb
pop
sub
pop
xchg
sbb
xchg
pop
stos
xor
and
cli
inc
shlb
xchg
sub
sti
test
jbe
dec
sbb
loopne
dec
sarb
hlt
pop
add
dec
and
mov
xor
xor
popf
jg
aad
lods
push
int3
xor
test
xor
inc
lods
inc
ret
inc
popa
dec
arpl
or
lret
xchg
pop
push
or
inc
test
imul
or
and
call
mov
stc
and
jbe
stos
xlat
pop
enter
and
add
inc
and
and
mov
mov
in
sbb
jge
mov
clc
jecxz
cmc
and
ds
jno
pusha
pop
int3
or
cmpsl
adc
les
inc
mov
xchg
clc
pop
mov
xchg
add
or
call
je
pop
sub
add
adc
adc
sub
loopne
or
push
mov
cld
in
xchg
popa
or
in
dec
nop
mov
add
ret
fldcw
xor
push
in
shlb
sbb
mov
inc
xchg
push
lock
sub
cmp
pop
add
add
js
cld
add
adc
jge
mov
pop
test
xor
cmpb
jns
addr16
loopne
dec
cmp
pop
les
sbb
push
adc
and
or
nop
ss
jge
repnz
push
punpcklbw
add
shrb
mov
sbb
mov
or
rorl
lret
push
mov
lea
test
arpl
pop
cmp
mov
movsl
into
outsb
jmp
mov
cmp
cli
outsb
std
lcall
inc
push
xor
push
je
mov
and
out
insb
sub
jmp
push
lcall
and
andl
and
xchg
add
push
shr
and
movb
pusha
addps
stos
ficoml
rolb
and
ss
in
mov
inc
aam
cltd
addb
lcall
inc
repnz
js
dec
mov
or
push
pop
mov
daa
mov
mov
push
sub
mov
or
js
iret
add
rorb
jne
pushf
mov
and
lret
mov
xchg
addr16
sbb
sbb
mov
rorl
js
int3
rclb
dec
addr16
movsb
in
in
adc
push
mov
push
loope
enter
dec
lahf
adc
adc
insb
lcall
add
add
xor
rorb
mov
pop
sbb
insb
or
xchg
and
out
push
stos
dec
in
and
iret
cld
lds
cltd
pop
popf
xchg
push
inc
mov
add
xor
pop
adc
push
sub
sub
std
add
and
mov
loope
leave
xor
filds
enter
test
fwait
je
sub
mov
jae
andl
add
ljmp
and
pop
in
or
int
xchg
xor
outsl
xchg
or
es
cli
and
or
sbb
push
insl
add
addr16
es
test
mov
inc
imul
sbb
add
mov
movsl
cs
sub
cmp
test
add
mov
loope
shlb
cs
mov
mov
popa
xor
pop
mov
inc
dec
pop
pop
lods
mov
inc
push
into
call
jecxz
and
pop
push
jp
sbbl
es
lret
pop
out
and
xchg
add
or
push
push
outsl
jbe
inc
add
divl
imul
cmpsb
push
push
lret
mov
and
rolb
loope
or
push
les
fs
pop
jo
add
adc
je
sub
fsubrs
jecxz
fiadds
call
xor
adcb
push
cmpb
mov
je
cli
jecxz
loope
lahf
inc
cmp
ja
lods
lods
jp
cmpsl
mov
fisttpl
jmp
jb
rcr
dec
inc
icebp
jmp
pop
inc
sub
jae
sbb
inc
cli
adc
add
lret
add
push
push
ja
add
xchg
xchg
aaa
sbb
and
or
inc
adcl
dec
ficompl
aas
outsl
or
xchg
mov
dec
mov
xchg
mov
ret
add
jnp
sbb
cmpsb
mov
sub
jno
add
popa
and
fwait
test
cmp
hlt
or
mov
clc
push
jno
lods
cmc
dec
pop
adc
pop
stos
sbb
pop
mov
jns
and
add
xchg
xchg
es
aad
in
pusha
sub
cli
adc
mov
or
push
pop
jmp
pop
neg
dec
sub
xor
xchg
aam
arpl
inc
fdiv
repz
sahf
adc
mov
insl
in
sbb
adc
inc
in
loopne
push
pop
aaa
xchg
ficompl
sub
lods
dec
popf
aam
inc
mov
adc
and
jecxz
and
xor
add
push
and
stos
mov
jo
inc
mov
shlb
and
mov
scas
mov
dec
xor
adc
mov
or
test
cltd
dec
xorl
xchg
cmp
imul
stos
loopne
push
fimull
hlt
loop
aam
xor
jle
add
dec
ret
pop
add
js
and
mov
or
pop
jmp
or
lea
insb
cld
mov
test
test
rcr
push
mov
and
test
sub
scas
mov
cld
pop
adc
sbb
push
mov
add
shrl
adc
ljmp
mov
mov
inc
das
pop
and
clc
mov
jecxz
imul
subl
mov
cs
test
movsb
dec
mov
fstpl
loopne
ret
out
push
inc
int3
fwait
loope
repz
inc
inc
leave
sbb
filds
push
dec
sub
cmp
mov
in
pusha
movsb
addl
inc
sub
sbb
aas
fsubl
inc
cmc
imul
mov
xorl
pop
imul
pop
das
xor
test
push
push
push
lcall
xlat
ljmp
mov
xor
mov
adc
test
lret
clc
add
fwait
xor
push
push
outsb
jae
cld
add
mov
dec
bound
jg
fdivr
sub
fsubrs
rorb
outsb
fcoms
and
inc
loope
dec
push
rclb
push
adc
in
cwtl
loopne
inc
psadbw
insl
loop
jp
icebp
push
push
add
loopne
sbb
add
mov
dec
sbb
rolb
push
inc
pop
gs
xchg
lods
mov
cmp
lea
mov
fucomp
insb
pushf
push
lock
testb
js
inc
stos
lret
pop
adc
test
mov
shrl
dec
inc
aas
leave
add
out
xchg
sbb
add
in
xchg
push
jo
and
insb
cmp
std
xchg
iret
mov
push
mov
dec
repnz
faddl
ret
sub
or
imul
and
pop
aad
adc
cs
addb
add
xor
and
xor
xchg
push
xor
out
loopne
add
cmc
push
xchg
aaa
cld
nop
mov
xor
xorl
stos
mov
rorb
and
cmpl
dec
jne
ss
pop
lret
push
negl
sahf
rcrb
dec
je
push
and
jecxz
xlat
push
sbb
int3
mov
add
adc
dec
ss
xchg
or
adc
or
dec
xor
int
ret
lahf
mov
test
sub
mov
inc
sbb
jne
pop
sbb
inc
inc
negb
mov
mov
inc
xchg
adc
pop
mov
cmpb
in
push
insb
pop
jno
daa
and
cli
aas
cmp
popl
jmp
fdivrs
aaa
movsb
sub
pop
or
je
push
adc
fsubrp
mov
cmpsb
shrd
pusha
add
test
arpl
mov
sub
inc
push
jmp
in
roll
gs
mov
repz
push
push
outsl
pop
loop
rorl
popf
mov
mov
push
or
xchg
add
loopne
xacquire
addr16
mov
inc
es
and
cmp
pop
push
mov
mov
mov
loope
stos
xchg
adc
je
into
push
les
push
add
mov
imul
mov
and
or
mov
lods
movsl
lods
jle
mov
fdivs
push
mov
vcvtsd2si
lret
je
fistpl
fcmovbe
shrl
or
sbb
xor
int
dec
push
push
adc
jne
and
pop
rcr
loope
jns
adc
add
mov
add
jne
inc
and
or
add
lods
push
stc
cmp
loopne
aad
jno
and
dec
cltd
sub
rcrl
addr16
imul
movsb
mov
xor
iret
mov
cld
or
fildll
adc
mov
or
inc
inc
outsb
sub
pop
or
mov
adcl
xor
fistpl
in
aaa
fcoml
mov
rcrb
xor
pop
adc
sbb
xor
sbbb
sub
orb
adcl
dec
ret
test
inc
xor
inc
pop
out
outsb
test
fildl
stos
inc
push
in
je
jge
mov
jmp
ja
jg
push
jl
adc
add
dec
dec
jmp
fsubrl
pop
or
dec
repz
hlt
dec
xor
xchg
scas
adcb
popf
xchg
dec
rcrl
lods
mov
pop
cmp
pushf
lock
push
insl
jnp
repz
les
pusha
xchg
je
add
push
repnz
inc
test
test
dec
jg
arpl
xchg
jno
fmuls
cmp
jno
add
add
adc
push
xchg
les
xor
mov
cmp
ljmp
add
mov
mov
insb
and
std
loope
cli
add
mov
roll
add
ljmp
aad
jno
add
mov
jno
bound
jne
pop
adcb
mov
gs
mov
jle
out
xor
aad
sbb
inc
or
in
jns
and
stc
cltd
or
sub
jns
xchg
js
fbld
sub
inc
push
sbb
call
add
xor
xchg
loope
pop
call
pop
decb
gs
pop
pusha
jmp
cld
pop
xor
les
pop
adc
push
sbb
xor
inc
pop
int
sarl
push
sbb
psllw
pop
subl
jmp
fst
cmp
xor
je
sbb
sbb
or
mov
cmpb
cmp
add
dec
or
les
cli
test
rolb
je
aaa
nop
shlb
pushf
add
jmp
lock
pop
fcoml
inc
or
cli
mov
jo
fadd
fsts
test
sub
int3
jg
mov
and
and
inc
xchg
or
xor
sbb
cmp
dec
add
sbb
sbb
fdivl
pop
fnsave
pop
and
sti
aas
test
std
fs
adc
add
int
icebp
mov
lods
or
and
adc
ja
sarb
cwtl
out
arpl
incl
mov
xchg
push
movb
jo
cmp
outsb
in
not
movaps
push
call
pushf
pop
lret
adc
scas
mov
pusha
insl
sub
and
cmp
call
rorb
sbb
add
sbb
fsubrs
sub
add
pushf
push
jecxz
outsl
jecxz
dec
xchg
fcoml
xchg
mov
xchg
stos
dec
clc
mov
insl
mov
pop
insl
inc
jmp
fisubrs
adc
daa
dec
mov
mov
fs
test
adc
cwtl
insb
daa
inc
inc
out
add
and
lea
push
pop
sbb
pushl
add
iret
push
cmp
cli
jle
lock
sbb
xor
pop
sbb
sbb
mov
in
and
xchg
add
outsl
int
dec
fwait
in
add
repz
pop
sub
inc
xchg
pusha
inc
sbb
mulb
loope
xchg
icebp
or
cmpsb
mov
cwtl
sub
cmpxchg
and
dec
fdivrp
sbb
call
leave
mov
hlt
sub
out
add
outsl
fdivs
cmp
mov
sub
and
add
clc
test
fs
xchg
mov
test
inc
shlb
push
jo
pop
fmuls
lock
addl
inc
stos
or
pop
jbe
xlat
jno
inc
dec
xchg
mov
mov
xor
or
add
cmpsb
mov
pop
xchg
hlt
sbb
aam
movsl
push
insb
and
adc
adc
imul
cmp
sbb
outsl
fidivrs
es
shll
fmuls
shll
inc
ret
adc
or
adc
inc
add
and
imul
or
call
push
jle
add
xor
add
sbb
inc
das
pushl
loopne
loopne
add
push
jecxz
mov
call
or
adc
std
roll
mov
lods
dec
push
jno
inc
loopne
jns
sub
icebp
out
mov
test
add
adc
pop
rorl
jnp
pop
and
xlat
rclb
sub
xchg
push
xor
xor
xchg
jnp
add
mov
aas
cmpsb
jns
loopne
xorl
leave
ret
fimull
pop
jge
jecxz
or
rorb
xor
lods
or
lret
loope
sub
xchg
add
inc
ja
ljmp
xchg
rorb
out
rol
fisttpll
and
pop
sub
scas
sbb
cmp
in
xor
sahf
hlt
js
adc
mov
fwait
cli
movsl
xor
movsb
repz
cmp
mov
lods
add
jo
and
adc
call
push
dec
inc
sub
leave
arpl
andb
add
xchg
das
adc
sbb
mov
arpl
xor
adc
cmp
dec
and
leave
inc
into
cld
imul
shrl
add
mov
mov
mov
push
jecxz
outsl
inc
push
in
mov
sbb
mov
loope
sbb
cs
in
xor
mov
dec
js
sub
mov
sub
push
inc
in
xchg
ret
push
mov
scas
outsl
mov
fdivl
loop
inc
jae
jne
sbb
arpl
push
add
and
or
sbb
mov
out
adc
int
lock
std
and
xchg
shl
jmp
jl
dec
enter
mov
mov
pop
iret
add
and
cmp
push
or
jae
aam
or
mov
cld
arpl
mov
testl
pop
or
push
push
roll
out
sbb
bound
fimull
jp
roll
jne
rclb
mov
or
out
movsb
icebp
filds
imul
xor
loop
add
rclb
sar
pop
out
roll
or
cmpsl
jo
fmuls
cmpsb
clc
les
clc
dec
inc
sbb
popa
lock
and
adc
ja
cwtl
fdivrl
mov
les
xor
out
rclb
dec
mov
jne
imul
push
shlb
ror
mov
xor
adc
lea
xchg
mov
xor
aad
loop
jmp
adc
daa
enter
inc
bound
mov
pop
dec
pop
paddsb
push
sbb
enter
or
and
nop
icebp
cmc
test
les
shrl
inc
xlat
popf
jne
xchg
cs
fistl
mov
pusha
and
in
test
fsubl
sub
insl
mov
pop
adc
ret
add
push
call
adc
imul
ret
and
stos
add
add
out
dec
shll
fwait
push
add
popa
cmp
pop
fdivs
aaa
sub
pushl
test
test
out
aas
cld
push
jb
ljmp
jp
imul
push
fidivrs
das
movsb
hlt
sub
pop
sbb
push
mov
stc
pop
adc
inc
fsubs
daa
jl
out
out
xchg
out
jmp
add
pusha
dec
jl
test
nop
sahf
jle
xlat
xor
loope
cmp
rorl
push
loop
jmp
jmp
leave
xor
test
adc
mov
push
mov
daa
xor
mov
bound
mov
cmpb
and
int3
ja
xchg
stos
add
sbb
jne
in
fdivrl
xor
mov
lock
test
insb
scas
leave
fmuls
stos
or
je
pop
lret
push
sti
push
add
dec
sbb
stc
sbb
cmp
mov
jbe
push
stc
lahf
and
sbb
pop
cmp
inc
hlt
xchg
insl
xor
cli
stos
mov
xchg
push
adc
adc
cmp
dec
add
mov
mov
cmp
lea
sbb
in
repz
cmpsl
add
and
jmp
pop
dec
sub
jecxz
sub
daa
jecxz
ret
dec
cli
es
or
or
push
xor
sbb
push
adc
imul
xchg
sbb
in
and
dec
and
add
fs
sub
call
push
adc
or
andb
mov
pop
inc
loop
mov
sub
and
pop
es
push
jp
jl
mov
ljmp
lods
subb
addr16
repz
mov
pusha
adc
add
pusha
dec
sbb
ret
scas
daa
int3
leave
outsl
adc
rcrl
mov
nop
cmpsb
icebp
movsb
test
jo
sub
hlt
pop
pop
ljmp
fs
in
sti
loopne
fmuls
pop
adc
and
xor
xchg
out
lds
fidivrs
inc
ficomps
or
pop
add
sub
sqrtps
lock
imull
orb
lock
dec
pop
jl
jne
adc
nop
mov
call
and
dec
inc
mov
sbb
insl
lcall
mov
cmp
inc
adc
or
aam
ja
xorl
jno
jo
mov
xorl
adc
in
bound
mov
lods
xchg
lret
push
inc
sub
test
enter
cli
int
mov
xchg
or
dec
push
mov
sbbl
xor
icebp
out
int3
inc
add
int3
inc
xor
je
inc
or
outsb
and
aaa
mov
shrb
pop
popf
adc
test
push
imul
aam
imul
xchg
pop
dec
icebp
push
gs
mov
adcb
divl
pop
pop
aaa
shl
pop
pop
loop
pop
cltd
orl
xorl
loope
inc
int
fcmove
enter
insl
mov
lea
jl
add
gs
addl
push
inc
lea
xor
and
inc
loope
mov
js
cld
push
inc
enter
jmp
mov
sbb
into
jecxz
aam
push
pop
mov
mov
push
ficoml
cld
es
jecxz
xor
jmp
cmp
dec
into
mov
popa
adc
and
adc
outsl
mov
sbb
add
adc
inc
rorl
xor
mov
xor
pop
or
mov
pop
out
sbb
js
mov
es
adc
xor
mov
mov
and
xchg
jno
adc
sub
enter
sbb
sbb
call
or
jecxz
pop
add
mov
push
mov
jp
mov
and
popl
and
fmull
mov
adc
jle
test
cld
cmp
mov
aad
dec
dec
das
or
mov
push
sub
add
jge
xchg
jae
push
cmp
stos
lcall
add
aad
cld
or
add
or
inc
andb
sbb
mov
or
aam
loope
mov
bound
add
inc
sbb
sub
dec
push
stos
or
aad
lret
xchg
mov
mov
sub
out
rcr
xor
dec
push
imul
stos
add
stos
dec
push
lret
inc
loope
inc
and
shlb
jnp
fstp
and
scas
fwait
xchg
sbb
mov
rorl
popa
xor
and
cmp
in
add
jbe
stc
movsl
dec
cld
testl
cmp
out
push
xorl
ffree
mov
xchg
sub
lods
das
sbb
aad
or
xor
adc
sbb
push
adc
aad
mov
dec
cmp
push
test
rorb
add
addr16
or
mov
imul
les
cvttps2pi
sbb
add
sbb
gs
dec
or
xchg
mov
das
cmp
xor
sbb
add
fwait
add
and
sahf
sbb
inc
cmp
aad
mov
rolb
movsb
add
out
insb
cmp
andb
ret
hlt
mov
fldt
mov
xorb
lock
add
jg
lds
rorb
clc
pop
dec
pop
push
jecxz
sbbl
pop
push
or
xchg
inc
cmpsl
or
ficoms
sbb
mov
rol
js
fld1
fwait
lock
sbb
pop
outsb
test
daa
or
iret
push
mov
xor
mov
cmp
orb
int3
iret
lcall
or
dec
adc
shlb
addb
mov
fistl
add
imul
mov
lea
sbb
or
xlat
jecxz
adc
add
jg
adc
push
and
fidivs
add
stos
sbb
loopne
sar
popa
pop
sub
lret
dec
leave
adc
in
push
loop
nop
jecxz
test
decb
push
cmp
push
inc
dec
mov
fstpt
adc
jb
mov
or
rorb
add
or
inc
pop
rorl
aad
cmpsl
lods
or
and
xchg
stc
sbb
push
call
mov
sbb
lds
jo
ret
iret
mov
inc
insl
or
push
pop
xchg
addb
mov
jmp
cli
dec
cwtl
ret
inc
mov
push
ja
dec
neg
sub
inc
xor
lcall
mov
mov
mov
repnz
imul
imul
pushl
add
pushf
rorb
or
xchg
cmc
decb
dec
dec
xor
loope
add
add
sbb
mov
jno
add
inc
mov
call
xor
enter
add
orl
inc
dec
popf
mov
int
dec
sub
dec
xchg
sarb
mov
mov
popa
lret
add
mov
xor
xchg
dec
cmpl
rclb
push
push
mov
lahf
mov
into
rcr
loopne
sub
mov
adc
ds
or
or
sbb
icebp
or
insb
inc
lret
xor
imul
mov
pop
gs
push
sbb
lret
lcall
lret
xchg
loop
ss
cltd
jmp
jmp
or
test
jecxz
ss
lret
or
cld
inc
dec
pop
dec
sbb
mov
mov
inc
sbb
mov
daa
or
inc
or
test
inc
loop
jnp
pop
ljmp
add
mov
xor
xchg
inc
adc
jl
and
lret
js
ljmp
mov
push
xor
xchg
cmp
lods
ret
lahf
mov
roll
fdivl
dec
xor
add
sbb
rolb
lea
sbbb
xlat
pop
clc
push
loopne
push
xchg
push
xlat
inc
sbb
icebp
fcoml
aaa
xor
push
jo
lahf
jno
adc
dec
and
out
pop
lret
sub
mov
sub
adc
loop
adc
fists
adc
jns
xchg
sub
and
xchg
dec
pop
push
lock
inc
movsb
and
cmp
sub
sub
fistpl
push
int
sbb
push
sub
jecxz
scas
and
enter
fisubrl
xchg
cmpsl
dec
mov
out
and
in
inc
js
pop
mov
lods
adc
adc
jg
das
leave
pusha
mov
in
out
out
lock
cs
inc
fists
shlb
lods
or
movsl
xchg
scas
xchg
inc
inc
sbb
ss
lret
add
inc
jmp
enter
out
enter
hlt
repz
sbb
add
xchg
push
icebp
and
rcrb
scas
incl
loopne
dec
shlb
jmp
mov
int3
adc
push
and
jp
push
sub
stos
fwait
test
sbb
testl
rorl
jnp
scas
xchg
mov
movsl
sub
loopne
shl
push
call
sbb
jmp
or
inc
cmp
sbb
or
xchg
insl
mov
movsb
add
in
lock
push
add
or
repz
imul
or
popa
mov
dec
xor
shrb
scas
aam
bound
cmc
adc
es
inc
std
hlt
pshufw
scas
mov
pop
shlb
dec
mov
pop
call
xor
mov
xchg
sahf
imul
pop
outsl
add
add
scas
std
in
pusha
rcrb
push
xor
rorl
test
or
add
bound
add
xor
add
cmp
rolb
inc
mov
cmp
imul
fs
shrl
cmpsl
sub
adc
add
mov
imul
sub
dec
popa
imul
lret
ljmp
nop
sahf
push
pop
fiadds
enter
ret
mov
addb
push
orl
jmp
lcall
dec
stos
sbb
aad
add
push
jns
mov
cltd
cmpsl
jle
test
inc
stos
cmp
xchg
mov
outsb
sub
sbb
jl
inc
clc
addr16
inc
aam
xor
leave
push
add
mov
pushl
and
subb
mov
ljmp
aaa
sbb
lods
repz
or
sbb
leave
dec
sbb
mov
add
adcb
scas
fimuls
adc
test
lods
sub
push
mov
lea
cli
push
pop
cld
aas
add
and
sbb
and
add
in
std
pop
mov
jg
fbld
xor
pop
sbb
and
add
js
or
and
add
jl
incl
test
test
add
add
mov
insb
inc
mov
sbb
pushl
add
popa
add
sub
icebp
xchg
add
add
vmload
inc
ljmp
lock
mov
add
xchg
sub
rcrl
lods
stc
decl
push
adc
cmc
cmp
add
mov
mov
or
mov
xor
push
mov
lret
idivl
insb
outsl
lcall
jg
sahf
adcl
jg
nop
pusha
std
xorb
add
or
mov
sti
in
add
std
std
ljmp
rorb
bound
je
mov
or
sbb
std
or
rolb
mov
insb
or
out
mov
adc
loopne
js
and
xor
repnz
and
nop
adc
or
inc
ss
test
and
adc
xchg
mov
ret
insl
gs
dec
sbb
rorl
jecxz
fst
or
cs
into
mov
and
rcrb
add
push
mov
jle
addl
pop
mov
jnp
js
add
popa
and
aaa
incl
divb
ja
cmp
and
or
add
aas
mov
clc
negl
testl
mov
push
dec
mov
pop
in
sub
outsl
sbb
fildl
push
ret
pusha
pushf
adcb
sbb
stos
inc
bound
lahf
loopne
dec
or
add
mov
das
clc
add
mov
mov
sub
cltd
cli
les
push
mov
mov
add
pop
sahf
icebp
adc
mov
push
inc
xor
sub
outsb
jmp
sbb
dec
hlt
jmp
subl
jg
ret
test
lcall
add
sub
add
repz
pop
add
pop
push
daa
out
je
pop
aam
mov
js
leave
xchg
inc
adc
arpl
insb
jno
sbb
push
push
push
add
cmp
popa
sub
add
inc
cmp
decl
lcall
scas
jp
adc
test
cs
or
adc
outsb
jnp
insb
jg
mov
mov
push
jo
scas
aam
mov
int
sti
call
inc
push
pop
es
mov
idivl
fs
daa
push
test
fcom
fistps
mov
lret
xor
or
add
fwait
insb
fisttps
fiaddl
rorl
or
clc
decl
add
es
fsubrs
ds
lock
jno
ss
and
cs
mov
bound
lods
cmp
and
add
or
inc
and
mov
aam
dec
call
aad
clc
stos
ljmp
mov
inc
dec
ffree
xor
add
inc
add
fwait
add
aaa
mov
xor
jbe
dec
push
xor
jecxz
push
pop
pop
js
leave
add
jmp
ret
mov
insl
hlt
fwait
jecxz
cmp
adc
scas
inc
sahf
mov
outsl
fidivs
sti
ljmp
add
lods
push
decl
push
sbb
xchg
in
pop
cmp
cwtl
lret
mov
repnz
into
or
cli
pop
and
je
test
ss
lcall
imulb
jl
mov
cmpl
adc
lcall
jl
xor
add
fistl
cmpb
pushf
adc
scas
ss
mov
call
mov
push
push
rolb
mov
mov
shlb
adc
cli
mov
mov
dec
xor
mov
xchg
mov
mov
mov
fadds
push
push
aad
fwait
bound
dec
ficoms
cmp
cmp
mov
pop
adc
sahf
movsb
icebp
fwait
push
lcall
lods
int3
xchg
sbb
nop
sub
cmp
lock
mov
xor
mov
add
jb
sub
fldt
add
cmpsb
lret
rorb
pop
push
cmc
icebp
or
je
adc
mov
mov
in
add
dec
jmp
inc
adc
inc
pop
sbb
dec
add
ret
mov
cmp
std
std
mov
xchg
shll
add
dec
pop
push
leave
dec
and
add
cld
mov
cmc
jle
xchg
mov
ds
push
test
jno
mov
ja
gs
gs
cmpb
mov
push
mov
mov
xchg
rol
je
push
inc
add
sub
in
clc
inc
outsb
lods
shr
sub
out
movsl
or
arpl
sbb
push
inc
cmp
add
andl
mov
inc
stos
jns
and
cwtl
jle
aas
ljmp
addr16
jmp
cs
mov
sahf
adc
je
push
xor
xchg
into
in
je
cmp
clc
jl
mov
xchg
ja
push
pop
data16
mov
and
add
addb
ljmp
xchg
adcl
or
pop
dec
mov
mov
push
pop
out
sub
test
mov
mov
sbb
loop
or
je
ss
sub
jno
or
cmp
rcll
sahf
or
adc
mov
loop
pusha
lret
dec
stos
add
pusha
clc
jg
fs
lods
and
or
xor
xor
imul
xchg
or
cld
pushl
aad
enter
push
fs
dec
mov
push
in
idiv
call
popa
xchg
inc
fs
int3
lcall
xor
jbe
adc
arpl
or
leave
repnz
cld
cmpsb
cmp
add
inc
inc
fmulp
ljmp
and
out
adc
dec
add
inc
pop
xchg
outsl
pop
shl
sbbb
jg
adc
sub
daa
cli
stc
pop
repz
sahf
pop
mov
and
data16
test
stos
xor
pop
mov
fwait
sbb
test
pop
jle
adc
fadds
outsb
ja
or
jl
sub
in
dec
pusha
add
iret
add
ret
push
push
idiv
dec
cs
nop
pop
jo
and
adc
push
inc
or
add
shl
mov
mov
mov
cli
les
aaa
adc
add
ret
fstpt
nop
mov
mov
pop
sbb
pop
and
or
pop
push
xchg
sbb
add
xchg
jnp
jle
roll
in
lods
std
lret
mov
add
stc
loop
jae
ss
add
movsb
fadds
clc
xor
xchg
xchg
clc
xchg
aaa
das
and
sbb
sbb
add
mov
cmp
clc
clc
lret
mov
jecxz
outsl
dec
xor
mov
cmp
inc
jge
xor
int3
mov
inc
in
mov
cli
test
in
loopne
dec
dec
add
mov
lea
popa
loope
shl
pusha
add
jb
fld1
inc
add
daa
jl
xchg
cmp
xchg
into
fs
fsubs
dec
add
ja
inc
int
pop
stc
xor
aaa
dec
sti
cmp
inc
xor
arpl
sub
call
notb
and
push
mov
fcos
fisttps
add
scas
pop
add
sbb
add
pop
or
xlat
icebp
es
sub
test
mov
dec
hlt
loop
dec
movsb
add
orl
sbb
std
cltd
xchg
cmp
stc
mov
pushf
sbb
outsb
mov
lock
clc
push
clc
subl
jge
xor
and
jp
sub
push
sahf
pop
xchg
mov
inc
sub
and
ja
std
xor
and
inc
fildll
mov
sub
stos
mov
stc
ficoms
pop
push
inc
adc
or
and
inc
jp
cs
xor
jg
mov
jle
out
or
push
movb
sub
or
add
ffree
mov
jp
adc
mov
pushf
push
cmp
push
nop
mov
js
cs
adc
pushf
jbe
push
bound
stos
daa
mov
xchg
out
sub
or
and
xchg
subb
xor
int3
into
xchg
jecxz
mov
out
div
das
cmp
adc
adc
sbb
out
rolb
loope
in
mov
test
aas
cmp
sar
or
and
sar
mov
and
pop
xchg
and
das
xchg
sbb
arpl
mov
xchg
inc
dec
sub
lahf
shlb
mov
adc
outsl
sbb
hlt
in
jg
movsl
ds
std
jae
add
jg
jbe
lock
stos
mov
les
fidivrl
lock
inc
or
adc
cld
loope
insb
roll
jge
fldl
and
ljmp
lds
cmp
push
in
std
call
pop
jl
pop
cmp
and
std
add
call
jg
mov
mov
dec
push
stos
mov
adc
sbb
out
das
mov
into
test
jno
scas
push
sbb
cld
fbstp
lret
jp
out
repz
dec
pop
imul
outsl
push
dec
insb
push
add
xor
dec
jmp
jo
pop
push
xchg
rclb
push
cmp
imul
jg
dec
and
add
dec
popf
cmpsb
into
imul
fs
pmulhuw
sti
and
add
jg
push
cmpsl
add
in
xor
xor
loopne
lcall
pop
orb
hlt
sub
int
push
sub
xchg
and
and
push
call
shr
outsl
sub
inc
mov
dec
push
js
adc
pop
fnstenv
js
or
movhps
inc
sub
scas
xchg
dec
xor
call
fildll
add
cmpsb
ret
cmpb
jge
test
adc
jle
push
inc
push
mov
mov
js
and
fwait
pop
and
and
adc
movsw
adc
pop
xchg
push
mov
fisttps
add
add
ljmp
jp
pop
mov
push
nop
inc
lahf
sbb
ret
daa
incl
sbb
add
jl
lods
and
mov
ficomps
xor
les
ljmp
adc
mov
int3
or
push
mov
add
int3
dec
xlat
icebp
jle
lret
push
popf
inc
les
test
jno
dec
lods
xchg
repz
test
or
add
add
mov
sub
cmpsl
out
sub
jle
push
dec
push
mov
outsl
xchg
push
addb
add
pop
testb
mov
shl
mov
and
and
pop
jno
pop
cli
dec
icebp
jle
enter
mov
sti
std
or
push
cmp
push
dec
xlat
in
shll
jnp
mov
and
subb
push
loope
mov
fisttpl
pop
mov
hlt
add
or
outsl
and
push
push
incl
faddl
push
cmp
xor
mov
bound
xor
jno
insb
addb
and
pop
mov
rolb
sti
adc
cltd
test
jno
pop
je
fwait
add
popf
add
ret
and
inc
or
add
xchg
vcvtdq2ps
dec
and
mov
sbb
js
inc
daa
into
cmp
inc
jnp
out
call
push
lret
test
mov
or
xorb
sub
lahf
jle
pop
add
xchg
xchg
ret
cmp
fisttpl
or
aas
pop
inc
or
std
inc
inc
popf
mov
aaa
enter
and
ret
cmp
stos
out
mov
add
mov
idivb
mov
arpl
arpl
mov
repnz
jno
push
std
call
xchg
xchg
int
addb
cld
mov
call
stos
std
xchg
clc
mov
inc
pop
or
ds
xor
cli
addr16
dec
cmp
sub
push
cmpb
outsl
rcrl
test
addb
inc
movsb
sub
and
sbb
sbb
andb
add
and
psubusb
xchg
cld
cmp
mov
fwait
adc
lcall
mov
iret
mov
jmp
nop
jg
sub
ret
inc
leave
xor
mov
enter
test
aas
pusha
mov
repz
and
fsubrl
js
sti
pop
pop
push
sbb
inc
in
iret
mov
add
sbb
sbb
add
mov
add
mov
lahf
loop
dec
dec
scas
inc
aaa
sub
test
add
push
jno
outsl
cwtl
mov
mov
fucomp
scas
cmp
pop
cli
fisubrs
loope
push
test
push
mov
add
cmp
push
cmp
mov
xchg
outsl
dec
pop
or
addb
sbb
clc
in
push
push
movsb
cmc
dec
js
xchg
in
xchg
shlb
mov
cmp
icebp
sub
mov
xchg
sbb
sbb
cmc
pop
mov
adc
movl
cmp
arpl
sub
decl
xchg
dec
test
push
pop
sub
hlt
add
rcr
aaa
lahf
and
add
stos
bound
xor
in
sbb
cmp
jno
aad
pushl
out
cmp
xor
pusha
and
out
jae
mov
rorb
movswl
incl
mov
cld
add
js
sbb
adc
rcll
ljmp
mov
jp
jmp
sarl
stos
jl
cmp
icebp
jecxz
xchg
pop
dec
cmpsb
push
xchg
call
or
inc
mov
xchg
pop
or
push
sbb
outsl
nop
ret
sbb
or
dec
cmp
pop
aam
dec
sbb
loopne
dec
test
add
gs
ljmp
fistl
jo
and
dec
inc
push
mov
sar
imul
xchg
mov
popf
adc
ja
mov
test
mov
incl
dec
addr16
adc
loop
or
mov
mov
rcrb
add
pusha
mov
adc
jo
enter
je
in
inc
cld
and
mov
mov
outsl
aaa
sbb
push
add
adc
push
fsubl
sub
fisubrs
ss
pop
repz
or
push
ret
push
mov
xchg
add
inc
jle
shl
xchg
jmp
push
negl
in
cmp
cmp
jmp
das
mov
or
cmp
pop
cmp
in
or
and
inc
jnp
clc
jns
cmp
mov
sar
sbb
xchg
sub
stc
lods
cmp
push
pusha
or
scas
mov
push
dec
data16
sub
in
mov
into
bound
or
add
push
outsl
pop
add
fidivl
pop
xor
in
call
jmp
xchg
pop
xchg
add
popa
lmsw
int3
in
fdivrs
jno
icebp
outsl
ds
idiv
xor
mov
lcall
jle
push
sbb
jl
sub
icebp
adc
cli
dec
ds
jmp
push
adc
push
clc
test
sub
xor
lods
mov
xchg
imul
ret
pand
push
into
sub
sbb
iret
inc
cs
fiaddl
sub
inc
es
or
roll
sbb
loope
or
dec
leave
in
int3
adc
lds
ret
rolb
pop
adcb
icebp
lds
hlt
adc
jae
mov
and
test
pushf
jnp
jbe
lret
xor
pop
ret
fcom
es
add
mov
mov
sbbl
adc
out
inc
pop
mov
lock
mov
loop
add
jp
std
es
pop
pop
sub
addr16
mov
jecxz
mov
xorb
shll
movsb
jb
cli
jbe
scas
mov
and
movsb
andb
xlat
shlb
in
cmc
je
cmpsl
sub
jmp
sbb
cli
aaa
push
push
mov
inc
outsl
loop
jle
lock
or
lcall
sbb
int3
mov
and
sbb
pop
ret
out
scas
mov
int
cmp
xlat
sbb
into
jno
cmp
or
sti
cmp
cld
adc
insb
push
aam
sbb
sub
push
sbb
jnp
stos
es
fistpl
scas
les
pop
cld
push
vpsrad
imull
ror
test
dec
popa
sub
or
adc
std
outsb
adcl
adc
addl
test
push
jge
mov
add
scas
les
pop
jle
xchg
int3
add
jl
int3
mov
ds
dec
rdtsc
dec
cmpsl
cltd
dec
inc
inc
cmc
das
mov
fwait
sbb
pop
add
psrlw
pop
xor
jo
test
and
in
xchg
cmpb
jno
sub
or
add
icebp
sub
sbb
aam
outsl
fisubl
sarl
jo
popa
cmp
jecxz
cmpb
pop
adc
je
mov
mov
fs
cwtl
rcrl
leave
cmp
mov
out
jp
out
mov
mov
xor
icebp
mov
cmp
in
xor
fisubs
xor
cmpsb
lods
mov
mov
mov
sbb
jno
or
sub
bound
xor
pop
enter
or
das
in
inc
cli
push
xchg
mov
pop
cmpsb
jno
clc
jnp
sub
insb
addr16
out
mov
inc
clc
adc
and
and
mov
clc
jmp
call
xchg
push
and
loope
loope
sbb
movsl
jno
in
fildl
in
sbb
lret
aas
bound
sbb
add
loop
out
add
loopne
cld
jmp
and
jb
push
cmp
jmp
mov
inc
jp
out
out
out
pop
sbb
mov
das
sub
je
in
daa
pop
adc
call
or
mov
xlat
adc
xchg
or
inc
ficompl
pop
pushf
mov
cmp
jg
add
das
adc
mov
mov
scas
mov
sbb
push
inc
mov
and
aad
add
push
inc
test
adc
dec
in
adc
dec
into
jl
popf
je
movsb
mov
adc
mov
jbe
cwtl
add
mov
or
and
mov
push
iret
cld
add
es
enter
jg
mov
xchg
mov
cmpsb
sbb
enter
sub
rorl
movsl
sub
push
or
lds
pusha
add
xchg
push
fsub
in
add
data16
xor
testw
and
jg
mov
fwait
shr
pop
divb
ljmp
icebp
dec
outsl
pop
jno
das
or
jnp
add
or
int3
dec
xchg
push
incl
cmp
in
push
xchg
fsubl
jb
in
fldl
aad
jbe
xchg
xchg
lahf
xor
push
jecxz
cwtl
jmp
mov
nop
das
jns
pop
inc
das
sub
ret
mov
fimuls
push
js
mov
fisttps
sbb
lock
xchg
or
or
adc
icebp
add
loop
xor
ja,pn
mov
xchg
sub
aas
mov
sbb
add
mov
or
push
lock
bound
mov
sub
push
mov
pop
cmp
jg
hlt
mov
int
jge
nop
jmp
ds
xor
clc
pusha
test
and
cmp
out
cwtl
ds
je
mov
js
orb
inc
sar
cmp
lcall
decl
js
jbe
ljmp
sbb
stos
mov
xchg
mov
pushl
xor
jb
xchg
leave
cli
jmp
sbb
fs
call
stos
push
loope
ja
sbb
int3
iret
mov
mov
mov
cmp
lahf
cmc
mov
test
xor
sub
sub
test
pop
adc
outsl
icebp
jbe
dec
mov
push
xor
adc
pop
les
lret
sub
mov
dec
lods
loope
inc
mov
pop
idivl
cli
add
push
fistpll
mov
fwait
ret
or
xchg
jmp
clc
or
inc
xchg
rorl
dec
test
insb
mov
xchg
rorb
dec
lret
or
adc
add
or
dec
mov
lea
mov
mov
clc
les
jmp
dec
test
xchg
cmp
mov
repnz
shrl
mov
dec
push
aas
daa
out
push
fs
dec
pop
and
xchg
push
add
cli
testl
and
add
dec
mov
bound
sbb
inc
cltd
addr16
sbb
push
add
sbb
gs
dec
add
mov
sub
xchg
je
sub
sbb
fidivl
ret
inc
mov
call
or
aad
push
test
add
jmp
int3
mov
cli
pop
enter
nop
xor
inc
push
rcl
stos
dec
push
dec
push
cld
and
mov
mov
inc
xchg
dec
adc
or
mov
pop
lods
lret
dec
pop
je
add
test
or
pop
sbb
pop
sbb
call
dec
and
mov
pop
add
jo
sub
aam
stc
add
add
test
inc
ret
and
cmp
and
mov
orl
lcall
mov
les
fmull
adc
icebp
sub
or
into
es
nop
push
and
xchg
sarb
adc
adcl
insb
mov
fwait
hlt
int
hlt
mov
inc
lods
xorb
mov
inc
push
dec
xchg
push
cld
data16
jmp
aad
call
daa
mov
jno
dec
adc
or
push
in
repnz
pop
cmc
in
clc
lock
les
cwtl
in
sub
popa
je
rcl
stos
mov
jle
ljmp
push
xchg
popf
test
xchg
sbb
add
repnz
pop
inc
cmp
and
dec
aam
lods
and
mov
add
and
mov
inc
inc
jl
lret
fists
loop
daa
loopne
sarl
lcall
push
stos
cmp
decl
add
js
je
jge
cmpsl
cmc
xchg
dec
hlt
mov
pusha
ja
add
cmp
lret
xchg
ret
lds
pop
clc
push
popa
dec
addr16
es
out
inc
ret
pop
push
loop
fcoms
push
stc
or
inc
cli
add
and
mov
clc
sbb
xor
and
xor
ss
add
mov
hlt
sub
sbb
div
push
add
cs
adc
xchg
adc
mov
cmp
add
sbb
and
mov
jo
stos
sbb
xor
scas
sub
in
dec
js
dec
pushf
ss
xchg
aad
sub
adc
sahf
fiaddl
mov
mov
mov
xor
aad
jne
in
sub
js
sbb
pushf
test
cmp
add
enter
lahf
cmp
outsl
aam
loop
scas
jmp
add
pop
jne
jp
loopne
xchg
push
adc
adc
decb
pop
js
gs
pop
stos
mov
and
add
mov
mov
sbbb
dec
xor
sbb
push
dec
mov
clc
aaa
fnstsw
arpl
jo
xchg
loopne
adcb
addb
loop
pop
incb
out
inc
xor
pop
cmpb
lock
xchg
dec
call
xchg
mov
add
cmc
test
loope
add
test
jmp
inc
push
cmp
push
outsb
inc
je
dec
xchg
jecxz
xor
pop
cli
aaa
std
xor
cmp
pop
cmpsl
jbe
inc
pop
jbe
or
stos
inc
jg
stos
and
adc
ja
mov
imul
pusha
aad
lcall
fdivrs
xchg
adcl
add
jnp
mov
sbb
divb
push
std
test
sbb
xchg
stos
lods
jb
adc
and
add
std
mov
call
in
mov
testb
mov
lock
adc
cld
jmp
xor
ds
bound
push
sbb
add
adc
lods
jo
ja
outsb
xor
sbb
add
push
outsb
cwtl
lock
call
cld
lret
mov
imul
cltd
ret
push
mov
or
out
mov
and
mov
jns
cld
push
pop
jl
insb
push
or
mov
adc
cltd
nop
and
cmp
lock
lret
add
pop
push
push
and
pop
cld
push
mov
cs
or
sbb
adc
add
loopne
sub
insb
pop
cld
push
cmp
andl
mov
cmc
mov
cmp
flds
sbb
imul
or
xor
mov
ljmp
or
jo
mov
inc
add
out
mov
scas
mov
fsubrs
add
ja
outsb
adc
push
js
out
je
dec
sub
mov
mov
push
cmc
xchg
data16
movsb
pushl
int
test
dec
adc
dec
jl
mov
mov
icebp
aaa
std
mov
je
leave
lcall
rolb
push
sub
aam
pop
mov
nop
xor
xchg
ret
pop
icebp
jg
into
xchg
int
mov
rorl
jns
sub
adc
sbb
hlt
outsl
mov
adc
stc
arpl
or
loop
adc
inc
push
push
xor
mov
and
addb
and
sbb
movsb
or
xor
or
mov
es
jge
int3
add
test
dec
incl
pusha
jge
xchg
xchg
imul
mov
pop
add
cmp
shlb
pop
decl
cmp
xchg
sbb
xchg
rcr
arpl
jg
sub
mov
dec
xchg
fwait
or
sbbb
pop
jl
mov
inc
and
and
mov
mov
sub
mov
in
aas
adc
push
add
roll
or
std
and
mov
xor
cmp
inc
and
or
test
or
sbbl
cmpb
or
jb
insl
xchg
sti
ljmp
pop
fwait
push
or
sahf
es
addl
push
lods
inc
repz
roll
pop
int3
inc
mov
mov
dec
cld
push
cmp
cmp
aaa
insb
pop
loopne
mov
sarl
sbb
clc
push
xor
push
jno
sbb
adc
mov
jl
cmpsl
loopne
sub
mov
psubusb
sub
sub
mov
cli
clc
inc
cwtl
jl
and
push
ds
xor
insb
xchg
push
scas
cmp
ljmp
jmp
jb
les
sbb
repnz
psrad
out
jbe
mov
sbb
add
cld
or
shl
xor
outsl
fidivs
sub
push
adc
aaa
jg
or
int3
frstor
pop
push
lahf
aad
clc
mov
lock
mov
scas
mov
dec
mov
cmpsl
jo
push
mov
mov
lds
mov
rcrl
lock
adc
lcall
loopne
rorl
loopne
int
adc
je
jp
xchg
xlat
adcl
fcomip
dec
bound
cli
fisubrl
cmp
mov
js
into
mov
push
push
jo
fildll
mov
mov
test
fidivrs
mov
jecxz
jae
outsl
mov
loopne
lcall
call
add
call
push
push
repnz
or
jg
test
ficoms
adc
mov
inc
xchg
subl
out
arpl
fiadds
mov
ffree
add
lahf
cmp
cmp
push
pop
aad
sahf
fisubs
lock
ret
xchg
mov
adc
outsb
fbstp
sbb
push
ret
mov
hlt
sbb
mov
or
push
xchg
add
xor
mov
mov
mov
sbb
xchg
sbb
fbstp
mov
pop
dec
jecxz
push
add
scas
clc
fucomip
aaa
test
in
lds
adc
or
mov
fmul
cmp
push
and
je
mov
push
outsb
push
jae
cmpsb
pop
mov
adc
xorb
jg
fisubrs
pop
lcall
cli
pusha
mov
sbb
aam
add
and
push
mov
and
add
mov
lock
lahf
sbbb
sub
dec
sub
mov
pop
sbb
das
shrb
xor
jecxz
negl
or
add
push
add
data16
outsb
mulb
mov
lods
sbb
js
jp
add
adc
push
mov
iret
outsb
or
fs
sub
mov
movd
push
pop
stos
push
add
stos
mov
sbb
das
push
std
pop
out
shrb
mov
jge
add
mov
lock
cli
push
cmpsb
or
sub
or
pop
shl
bound
pop
sub
decl
in
aam
testl
add
stos
mov
scas
mov
inc
inc
mov
push
jg
sahf
xor
ljmp
inc
call
fcmovnb
in
shlb
xchg
add
jg
or
xor
out
in
add
and
sub
call
cmp
dec
inc
sbb
aaa
mov
cmp
adc
push
push
loopne
mov
mov
or
add
sbb
xor
inc
jl
jl
pop
mov
sahf
in
ss
dec
xchg
push
js
lods
and
push
jg
cmp
or
or
adc
lock
sbb
rcrl
jl
pusha
fs
cli
daa
xchg
pushf
adc
xchg
leave
mov
cli
sbb
xchg
addb
sub
adc
in
stos
sub
sub
mov
ret
inc
sub
sbb
ficoms
push
jbe
dec
mov
rcrl
and
sub
add
addb
or
push
pop
xchg
mov
rcll
scas
push
sbb
repnz
or
adc
test
bound
ficomps
scas
cli
jbe
dec
jl
stos
ljmp
inc
mov
mov
inc
jns
in
add
pop
aas
pusha
lods
jle
xchg
shrb
or
inc
sti
mov
pop
mov
sbb
test
loopne
loopne
push
std
pusha
xchg
jg
lock
jbe
jle
leave
cmp
out
add
add
jmp
adc
mov
or
lock
mov
js
push
lods
mov
mov
lahf
mov
pop
cs
adc
xor
adc
cwtl
push
pop
or
sub
imul
xchg
mov
xor
inc
mov
xor
loopne
rorb
outsl
enter
xchg
jmp
idiv
call
pop
add
jbe
jl
dec
push
push
pop
mulb
sub
and
and
pop
lock
mov
call
int3
mov
test
push
pop
lcall
fsubrs
inc
dec
mov
pop
out
push
call
push
pop
pop
mov
loop
mov
cmp
cs
inc
pop
jle
sbb
mov
xchg
pusha
rcl
dec
test
mov
cmpsb
aaa
sbb
loop
aas
sbb
aas
stos
stos
cmpsb
ss
add
ret
es
adc
rclb
mov
leave
cmp
mov
jg
dec
sub
mov
inc
adc
hlt
or
mov
jp
ds
out
testb
scas
xchg
sahf
push
add
xor
pop
inc
test
cli
addl
int3
addb
inc
dec
xchg
inc
add
cli
ljmp
repnz
aam
int3
mov
hlt
mov
jb
sbb
xorl
or
icebp
xlat
jp
mov
fs
hlt
les
outsl
lods
call
pushf
or
mov
mov
out
mov
fldl
popa
push
aas
lea
or
hlt
cmpl
sbb
mov
mov
lea
xchg
iret
add
aad
cmp
or
lahf
jo
add
cld
jg
fadd
add
dec
dec
imul
ljmp
ljmp
cs
stc
ja
cmpsb
add
mov
notl
lahf
sbb
cwtl
data16
aaa
add
insl
int
xchg
popl
sahf
es
add
lods
cltd
mov
test
mov
pop
test
ds
xlat
pushl
jae
cli
ror
add
push
fsubr
inc
adc
cwtl
inc
shrl
jle
aas
fisubs
fs
mov
push
fs
sub
push
pop
fwait
ds
cmp
cmpsb
call
dec
adc
mov
pushf
or
mov
push
sti
push
flds
sbb
int3
jecxz
inc
sbb
pop
cld
cmp
add
jmp
repnz
xchg
adc
shlb
add
add
popa
push
inc
arpl
fstpl
xchg
dec
out
xchg
bound
sub
jnp
ljmp
fcoml
mov
jle
jno
mov
push
inc
cmp
lcall
iret
sub
add
mov
add
mov
mov
lock
fnstsw
push
fdiv
imul
pop
movl
add
je
push
push
pop
icebp
insl
shll
icebp
pop
js
push
push
push
in
push
jno
mov
ds
jl
pop
sbb
ljmp
daa
aas
js
mov
cmp
icebp
adc
jbe
ljmp
shrw
adc
add
loope
cs
fmuls
push
in
jb
xchg
sti
hlt
aam
xor
mov
mov
notb
scas
xor
int3
movb
shl
test
lock
add
addl
shll
mov
lds
sbb
fld
mov
inc
and
ljmp
shl
cld
lcall
in
leave
rcl
mov
jbe
dec
adc
push
xchg
aas
mov
decl
mov
sbb
in
mov
pusha
in
push
xor
ljmp
add
shll
pop
jp
mov
and
lods
xchg
push
dec
mov
cmc
push
add
incb
mov
data16
das
pop
movsb
jo
fldenv
dec
les
nop
ss
mov
fcompl
out
xor
stos
out
mov
jne
sbb
ljmp
and
pop
xor
data16
dec
jmp
jmp
jg
jmp
dec
ret
sahf
sbb
or
pop
mov
cmpsb
or
push
sbb
push
xchg
call
or
fistpl
mov
call
in
dec
cs
loope
aas
int3
jno
js
sbb
or
sbb
push
out
movb
and
mov
mov
pop
inc
mov
int3
xor
pop
and
push
mov
ss
out
orl
mov
add
je
jne
xchg
fcom
mov
jns
push
mov
add
call
mov
insb
sahf
incl
or
jo
imul
dec
or
flds
sbb
adc
pop
lods
mov
lcall
or
daa
loop
push
mov
xchg
mov
popa
fldenv
dec
mov
pop
ja
and
cmc
aaa
jo
call
in
sti
jle
sahf
mov
pop
jge
nop
sar
xchg
pop
and
cmp
nop
lcall
out
mov
rolb
sbb
out
or
push
out
mov
sub
imul
or
mov
jo
cmpb
in
sbb
jecxz
in
mov
pushl
or
and
dec
popa
hlt
scas
in
ss
cmp
roll
imulb
push
sbb
ret
ret
lock
ret
sub
adc
dec
loopne
cmp
cmp
inc
cmp
adc
test
dec
add
orl
xor
pop
or
add
fwait
mov
leave
loope
jp
xor
mov
int3
inc
scas
mov
and
sub
pop
test
aam
pusha
sahf
pop
hlt
or
mov
sarl
jno
add
stc
sbb
and
mov
or
pop
jns
xor
dec
decl
xchg
mov
sbb
test
mov
out
jbe
lcall
mov
bound
loopne
je
in
fnstenv
fs
mov
adc
add
adc
gs
rolb
dec
xchg
cmp
push
lcall
and
mov
rolb
clc
jmp
add
sub
data16
out
mov
movsl
push
push
jecxz
ja
out
loope
fsubr
sti
inc
ret
sub
sbb
scas
aad
shlb
loopne
ds
out
in
lds
adc
addl
mov
cmp
cmp
pop
add
push
jp
out
xchg
mov
or
scas
pop
sub
iret
stos
push
jp
outsb
inc
sub
jnp
pop
lock
pop
pop
pushf
add
loope
lods
test
or
pop
mov
or
xchg
inc
shlb
sbb
lea
fmulp
out
add
shlb
xchg
bound
ret
adc
clc
pop
jl,pt
mov
or
test
call
push
inc
adc
popa
fisubrl
repz
mov
push
push
out
push
scas
enter
push
cmpsl
stc
mov
idivb
in
add
cmc
mov
loop
mov
mov
push
mov
hlt
jp
std
push
adc
inc
adc
xor
and
scas
xor
sub
inc
mov
inc
mov
add
lcall
dec
js
lret
or
mov
in
mov
or
ljmp
or
arpl
push
jecxz
pop
xchg
cli
xchg
mov
xor
add
jge
idiv
lds
mov
nop
dec
mov
or
dec
xchg
lcall
test
aas
inc
pop
push
cld
mov
lcall
mov
push
sub
push
pop
jge
mov
inc
insb
mov
std
jnp
xor
ror
out
andb
adc
ret
mov
pop
scas
bound
enter
mov
fwait
std
int
and
add
idivl
or
mov
test
inc
or
or
cmp
mov
push
or
test
enter
mov
movsb
xchg
pop
inc
jbe
push
sbb
jae
jecxz
fdivs
xchg
shlb
cli
loopne
add
mov
mov
push
subl
rol
and
jae
bound
jecxz
add
mov
pop
scas
sub
ljmp
adc
lret
mov
cwtl
and
add
cmpsb
dec
ret
cmp
call
and
push
addb
mov
pop
jge
xchg
push
inc
xor
shlb
pop
das
fildl
scas
sbb
inc
int3
push
mov
inc
push
std
ljmp
leave
push
adc
lds
push
js
call
mov
add
mov
jns
and
rcrb
pop
xor
sbb
mov
mov
clc
loopne
mov
cmpsb
out
push
loop
mov
hlt
outsb
cmp
aas
add
cmp
mov
nop
mov
cwtl
test
sbb
imul
int
mov
cwtl
sbb
xor
jnp
xor
adc
jns
outsl
mov
pop
nop
cltd
dec
sbb
pop
pop
mov
orb
nop
mov
sbb
shr
or
shlb
inc
dec
lea
xor
ja
lods
add
mov
mov
sbb
ficomps
add
mov
pop
push
add
pop
inc
test
ret
push
int
insb
mov
scas
push
sbb
test
xchg
adc
pop
dec
les
pusha
mov
sub
jg
push
xlat
int
sub
int3
mov
lcall
cmp
inc
xor
std
add
mov
xor
sub
addl
out
jno
pop
dec
jecxz
or
adcl
adcl
into
inc
jno
rcl
pop
cmc
rol
repnz
insl
or
insb
adc
sarb
mov
or
ja
add
adc
cmp
pushl
lock
in
test
fucomi
push
mov
out
push
and
add
pop
add
add
dec
cmp
sub
xlat
ja
add
lock
notrack
pop
adc
jle
loope
movsb
xor
adc
cs
and
or
cmp
jl
nopl
test
mov
out
les
fs
jno
add
outsb
dec
sbb
jmp
xchg
add
dec
jb
inc
push
inc
mov
mov
push
mov
lods
scas
inc
jle
add
sbb
out
loop
ret
les
jg
leave
pop
cmp
pushf
rep
hlt
add
leave
jmp
adc
jmp
sbb
stos
stos
push
loopne
adc
push
mov
cmp
add
or
scas
loopne
dec
mov
sub
hlt
decl
lahf
data16
test
push
mov
adc
lock
fdivrl
cmpsl
dec
ret
dec
inc
popa
call
add
dec
out
and
fwait
adc
incl
mov
pop
xchg
cs
mov
loop
xor
ss
add
call
and
inc
call
add
push
and
sub
pop
icebp
or
jl
ljmp
shll
fs
adc
fs
decb
push
js
daa
xchg
decl
push
les
jno
jecxz
push
add
xor
sbb
dec
add
test
and
hlt
movb
inc
adc
cmp
in
hlt
dec
lock
dec
xchg
loopne
das
test
fdivl
adc
and
in
adc
lcall
in
sbb
je
call
test
pop
pop
fwait
mov
xor
pop
mov
cmc
pop
test
orb
mov
out
leave
jno
mov
sub
or
fdivs
dec
or
divl
xchg
movsb
mov
das
adc
push
std
mov
sbb
mov
in
lcall
mov
jge
ret
rclb
ss
repnz
cld
sbb
in
xchg
push
and
jmp
leave
push
data16
addb
xor
mov
lret
fucomip
shrl
bound
mov
sbb
or
inc
xchg
pop
push
inc
cwtl
push
movsb
adc
shrb
fcos
es
sbb
cli
ja
and
pop
or
dec
jle
popf
inc
push
jno
loopne
mov
es
fadds
add
adc
dec
movsl
ret
inc
int
mov
stos
repnz
xor
out
int3
sar
dec
adc
add
dec
outsb
repz
pop
loope
inc
mov
sub
fimuls
aam
jmp
or
mov
xor
add
ret
or
add
jl
mov
test
scas
push
aad
ret
lcall
inc
push
mov
mov
int3
sbb
add
scas
jo
rorl
cs
jae
stos
jmp
sarb
test
clc
jge
vmwrite
cmp
add
cmp
jle
xchg
ret
js
loope
sbb
lock
and
lcall
mov
jecxz
aam
shl
adc
cli
sub
jnp
hlt
mov
ficoml
adc
adc
fistps
push
push
add
sbb
xchg
xchg
jnp
push
mov
gs
orb
les
int
xor
cmp
or
repz
js
arpl
adc
push
in
in
and
scas
cmp
adc
addr16
es
mov
sarb
push
les
xchg
das
ror
dec
pop
dec
and
jp
push
pop
aaa
out
cld
mov
xor
lcall
mov
and
pop
or
sarb
das
ret
dec
stc
mov
push
insl
ljmp
inc
xchg
outsl
cli
xor
jnp
rcrb
xor
cmpsb
fstpt
loopne
fwait
add
mov
push
les
test
ret
or
ss
shr
xchg
icebp
sub
decl
jle
push
xor
mov
sbb
adc
add
mov
leave
xor
or
addl
and
pop
add
loopne
ret
xlat
hlt
daa
nop
adc
pop
shll
push
test
or
cli
enter
xor
mov
mov
inc
lret
push
mov
lods
inc
ljmp
enter
mov
cli
push
xchg
push
mov
call
jp
andb
xchg
fiadds
and
fildll
xor
lods
cmpsl
icebp
je
stos
add
insl
add
adcb
mov
sarl
push
jg
loopne
and
mov
dec
inc
cld
loopne
push
aas
and
in
sub
cmp
fstpt
inc
scas
jbe
xchg
ja
or
iret
push
adc
dec
iret
push
fcompl
push
pop
popa
and
incb
lcall
pushl
or
popa
dec
dec
fistl
mov
dec
cs
je
outsl
add
aas
dec
add
std
shlb
sub
mov
adc
or
xlat
movsl
mov
mov
insb
ja
call
push
jl
popa
fwait
xchg
push
ja
xor
and
fldl
pop
add
xchg
jno
sbb
xchg
and
ja
or
pop
mov
inc
mov
lcall
movsb
pusha
ret
in
or
scas
fdivs
cwtl
shlb
push
in
and
mov
sbb
fs
cmc
and
shll
jb
mov
cmp
clc
lea
inc
mov
outsl
incb
outsl
fldl
daa
and
in
jns
and
or
pop
repz
aam
outsl
cld
dec
clc
mov
es
inc
jle
in
pop
xorl
push
out
scas
es
pop
sub
arpl
mov
iret
fs
cmp
jo
push
and
sahf
rolb
dec
lea
jmp
fdivrl
outsb
push
sbbl
sarl
mov
jle
add
divb
push
mov
icebp
jmp
pop
xor
lea
insl
decl
or
mov
push
pusha
add
and
inc
inc
popf
jmp
clc
dec
loope
loopne
lret
sub
in
hlt
test
lcall
push
insb
mov
pop
roll
imul
sub
popa
jo
xchg
incl
mov
mov
out
incl
and
xlat
mov
loopne
mov
mov
dec
mov
adc
mov
jg
incb
fmuls
cmpsb
cmp
test
push
push
or
inc
cmp
mov
jle
hlt
add
int
pop
icebp
mov
jle
mov
imul
push
aam
inc
adc
and
or
pop
scas
push
mov
movsl
push
push
jb
and
xlat
jns
popa
scas
decl
outsl
mov
cmp
lret
add
incl
xchg
jnp
into
mov
push
jp
adc
push
in
push
in
mov
andl
frstor
mov
lock
jmp
pop
pop
and
xor
ds
aam
or
or
pop
stos
js
int
decl
lock
jno
jne
mov
inc
add
enter
mov
cmp
cld
mov
sbb
ret
inc
loope
adc
mov
in
dec
xor
mov
adcb
sbb
or
pop
cld
and
adc
dec
cwtl
ss
clc
inc
lock
mov
sldt
xchg
push
sub
sahf
dec
jmp
mov
xchg
lods
cmc
add
in
aaa
sbb
pop
inc
ljmp
adc
sub
daa
sbb
adc
mov
cli
sub
adc
insl
dec
sbb
jae
sbbl
push
push
mov
cli
lea
aam
ljmp
lds
and
or
cwtl
xchg
les
rcr
shlb
ss
out
imul
jmp
ss
lret
xchg
cld
lea
push
mov
add
scas
gs
repnz
andl
mov
mov
fidivs
fisttpl
shr
mov
mov
push
scas
mov
sub
decl
mov
arpl
add
sbb
or
jg
movsl
movsb
lret
xchg
lds
jo
add
enter
mov
cmp
and
mov
pop
repnz
imul
add
mov
jp
push
inc
xor
sarl
add
sbb
pop
stos
jle
add
mov
push
jae
ss
lret
outsl
xchg
xchg
sbb
lcall
push
push
cmp
add
dec
cmpsb
rclb
testb
and
push
jmp
lcall
fcmovb
add
fcompl
loopne
jo
repnz
test
push
mov
test
negb
icebp
fnstenv
stos
lahf
add
pop
cmc
loopne
decl
or
inc
adc
xchg
stos
xchg
pop
mov
rdpmc
sti
call
mov
loopne
adc
dec
add
add
jb
call
dec
cmpsb
inc
cld
pop
lock
adc
ret
add
loopne
outsl
clc
fildll
fnstenv
mov
sahf
xchg
inc
ret
jg
add
add
dec
inc
aas
jge
push
fsubrl
lock
lahf
push
cld
dec
outsl
xor
insl
ret
std
or
test
push
mov
inc
test
or
xor
outsl
in
lret
xchg
pop
std
mov
mov
push
push
outsl
cmp
sub
daa
imul
testl
iret
xlat
inc
mov
push
loop
int
push
roll
push
mov
mov
nop
lock
jg
shrl
jg,pt
mov
insb
ret
inc
jo
sbb
insb
pop
roll
sbb
cmp
testb
call
or
icebp
push
repnz
jno
jp
mov
pop
shl
jg
cld
lock
or
mov
int
mov
mov
mov
ja
mov
imul
daa
cmp
and
jae
lcall
xchg
in
loop
mov
jl
sub
mov
xor
adc
cmpsb
icebp
xchg
sub
cli
fimuls
pop
xor
aad
sbb
sbb
lret
cmp
loopne
aaa
sub
add
xchg
shll
shrl
fiaddl
xor
or
dec
pop
popa
cmc
sub
inc
cmpsb
pop
clc
pop
cmp
aam
mov
sub
mov
enter
push
out
and
cmp
mov
jge
xchg
fisubrl
sbb
in
test
fs
std
incl
push
adc
sbb
xor
sub
jp
jl
push
sarl
outsb
mov
sbb
mov
shl
inc
cli
cmpsb
ljmp
es
std
lret
xchg
mov
mov
sub
add
in
or
lock
mov
fucom
je
push
fs
mov
sbb
push
pop
cmc
hlt
shll
add
lcall
mov
icebp
cmpsl
inc
dec
add
and
shll
and
clc
sbb
clc
mov
std
nop
jecxz
add
js
inc
sub
call
sub
add
xchg
cs
lock
call
in
test
mov
xorl
sub
jbe
xchg
or
mov
inc
test
movsb
xchg
and
lahf
cld
cmp
and
rclb
call
xchg
dec
xchg
inc
fdivrs
adc
or
xor
add
xchg
push
sbbl
bound
gs
mov
ljmp
lock
fistpll
sub
mov
out
movsl
sar
aaa
xor
cmp
push
orb
es
pop
lods
sarb
ret
pop
push
das
clc
in
in
ljmp
mov
mov
xchg
fldl2e
adc
sbb
adc
sbb
adc
fucomp
iret
out
lock
and
or
data16
popf
sbb
shrb
jne
jae
jno
pushl
lock
sahf
arpl
jecxz
sub
push
into
push
rclb
cs
add
mov
mov
cltd
xchg
push
sti
dec
or
xor
and
clc
jge
call
jle
mov
pop
sbb
pop
les
mov
xor
aam
sbb
mov
pop
push
cmp
repnz
push
adc
and
sub
pop
xchg
repnz
inc
mov
loop
outsl
adc
dec
movsl
mov
mov
fadds
jp
loop
cld
and
pop
icebp
adc
xor
jmp
leave
jmp
jg
ret
jl
mov
add
jg
sbb
lods
add
icebp
sbb
jo
rcrl
dec
inc
ljmp
in
push
add
push
pop
adc
dec
jb
push
loop
loop
arpl
push
push
bound
inc
fistl
push
sub
popa
loope
sbb
mov
jo
push
sbb
jns
loope
imul
xor
mov
or
divl
insb
out
or
jbe
xchg
xchg
sub
xor
push
fdivrl
mov
fnstsw
jnp
cld
das
xor
or
add
sbb
aaa
fsubl
mov
cmp
in
mov
call
add
pushf
jb
data16
loop
insl
data16
inc
sbb
mov
int
dec
adc
test
iret
les
fcoms
adc
mov
cld
pop
and
imul
fldl
push
mov
dec
cltd
jg
cmc
and
into
or
add
add
cmp
das
inc
jb
sbb
ret
adc
outsb
xor
out
jnp
pop
nop
and
add
mov
sbb
mov
pusha
xchg
in
iret
jle
pop
add
add
adc
xor
pop
inc
int3
shlb
inc
sub
ficomps
stos
xchg
mov
push
dec
rcll
ds
xchg
mov
dec
ss
aas
cmp
cmp
inc
incb
jle
xchg
dec
data16
add
inc
gs
cld
pop
lock
sbb
add
dec
jnp
repnz
mov
xchg
repz
shr
dec
lds
clc
sub
xchg
push
cld
cmp
xor
rorb
push
cmp
jbe
dec
ret
inc
ret
sbb
loop
mov
nop
inc
mov
mov
repz
shlb
mov
jnp
ret
mov
mov
sub
pop
hlt
mov
push
mov
or
movsb
pop
sbb
lahf
pop
inc
pop
icebp
cmpb
fidivrs
adc
test
add
aam
ret
out
fcomip
dec
ret
inc
lods
push
adc
dec
adc
push
mov
sub
add
mov
test
sahf
add
jecxz
in
push
inc
ret
outsb
pop
bnd
pop
arpl
incl
jmp
add
popf
mov
gs
jmp
mov
mov
sub
cwtl
ret
in
mov
or
call
add
mov
pop
xor
push
inc
icebp
mov
fdivr
mov
je
pop
add
and
fsubs
push
cli
xchg
push
adc
inc
mov
stc
pop
and
imulb
movsb
fwait
ljmp
je
shlb
and
cli
push
mov
mov
push
sub
popa
mov
cmp
mov
add
push
in
loop
stos
add
daa
mov
jmp
loopne
mov
fisttpl
icebp
adc
inc
jl
add
xchg
in
or
pop
and
and
lret
cld
out
leave
in
cmpsl
dec
push
lds
xor
test
or
cmp
mov
mov
jle
incb
jo
shlb
mov
and
iret
add
dec
jmp
pop
shrl
insb
or
sahf
and
xor
sarb
outsb
dec
ds
adc
notl
lcall
add
iret
xor
notl
sub
icebp
in
ja
mov
mov
dec
iret
iret
push
jns
xchg
subl
inc
xor
adc
nop
pop
pop
pop
xor
leave
add
push
outsl
clc
clc
xor
ds
or
cmp
inc
sbb
mov
dec
add
data16
lock
sub
cmc
decl
insb
push
jle
dec
and
and
jp
inc
subb
bound
pop
mov
imul
add
sbb
adcb
sahf
pop
pop
pop
cs
sub
cmp
ret
push
xor
cmc
gs
jb
add
es
out
test
std
xor
xchg
mov
mov
sbb
cmp
or
and
pop
mov
aad
leave
out
dec
jo
and
sbb
xor
js
ljmp
mov
cld
mov
jne
into
bound
push
mov
loope
andb
mov
push
xchg
xchg
incl
push
xor
inc
mov
adc
cmp
dec
push
cmp
inc
loope
pop
jns
or
inc
mov
nop
icebp
hlt
jge
lods
cmp
orl
fcoml
xchg
fstl
pop
sbb
or
dec
pusha
cmpsb
aaa
jecxz
jbe
cmp
cld
push
xor
mov
out
xchg
push
mov
mov
mov
es
ret
ljmp
cmp
xchg
test
inc
scas
xchg
and
into
pushf
aad
ss
push
and
xlat
dec
data16
pop
lods
ja
mov
bound
and
mov
call
mov
cwtl
stc
ds
xchg
je
pop
stos
or
mov
iret
cli
nop
and
pusha
add
mov
adc
out
inc
imul
mov
push
in
add
cmp
ljmp
lcall
jle
shll
add
adc
cmp
dec
std
stos
dec
mov
pop
lahf
xchg
es
sub
xchg
mov
cs
mov
adc
fsubs
stc
cs
fdivl
adc
pop
cmp
xlat
pop
stos
in
add
lret
das
out
mov
dec
dec
or
pop
out
and
ss
loope
ljmp
in
jb
mov
xchg
in
in
jmp
cli
lcall
loopne
pop
stc
insb
shlb
out
add
xchg
lock
outsl
and
inc
dec
mov
cli
xor
mov
add
lcall
jl
in
lods
gs
xchg
lods
scas
jbe
push
cmc
ror
or
jecxz
mov
in
mov
std
test
lret
mov
mov
add
fdivrs
inc
ljmp
inc
or
jecxz
sbb
xor
bound
lcall
inc
into
inc
test
pop
push
mov
mov
inc
pop
push
xchg
bound
inc
sarb
and
ja
mov
clc
push
cmp
push
inc
inc
pop
aam
fwait
aam
jp
xor
push
mov
shll
mov
xor
push
sub
mov
xchg
cld
add
and
fisubs
insb
js
int
pop
les
jno
xlat
pop
push
pop
sub
jb
push
cmp
fwait
mov
addb
in
pop
jno
xor
xlat
sbb
sub
fldt
icebp
aam
hlt
add
dec
lock
lock
sti
je
jecxz
mov
sbb
pop
lea
dec
cwtl
fiaddl
addr16
xchg
pushf
or
push
xlat
mov
xor
jge
loop
les
xchg
push
and
xlat
out
lock
cli
mov
cmp
fisttps
pusha
push
jg
sti
mov
call
cmp
sbb
adc
sahf
in
loopne
outsb
mov
push
add
or
cmp
adc
pop
clc
push
pop
fadds
jo
lods
test
cmp
les
outsb
pop
insb
push
ret
call
test
test
clc
outsl
out
mov
cmpl
rorb
cwtl
ja
test
loope
ja
xor
mov
add
cmp
sahf
jle
aam
decl
rolb
pop
fdivs
mov
xchg
ret
mov
mov
mov
xchg
push
mov
popf
pop
lcall
jne
cli
cmpsb
xchg
push
cmpl
sbb
adc
cmpl
int3
mov
dec
fs
xchg
shrb
mov
aam
or
xor
mov
mov
out
jle
testl
sarb
aad
push
mov
jb,pn
ja
mov
jns
dec
sub
adc
movsb
add
or
inc
in
or
or
and
and
add
call
mov
fldcw
xchg
adc
js
dec
push
inc
std
mov
xchg
je
inc
enter
xchg
incb
shll
sub
lret
add
pop
jecxz
add
clc
adc
adc
cmp
xchg
cmp
push
lcall
add
les
lods
and
lods
hlt
mov
mov
and
add
fs
clc
cmp
cld
mov
mov
addl
or
or
imul
mov
sbb
push
cmpsb
mov
xchg
xor
fdiv
pushl
fyl2x
or
in
loop
add
xor
ret
scas
ret
inc
enter
add
or
data16
and
daa
add
mov
ljmp
adc
js
fisubl
test
js
and
and
dec
icebp
fisubs
sbb
dec
adc
rolb
push
mov
in
lods
dec
rol
sub
adc
cwtl
rcl
mov
lds
and
lock
push
ds
out
sbb
sbb
mov
cmpb
cmp
add
mov
push
inc
ljmp
mulb
ss
sar
sub
inc
inc
shl
int
xchg
outsl
push
cmp
sbb
pop
jl
jl
push
push
lock
pop
pusha
pop
pop
mov
rorl
ret
sbb
outsb
xor
add
mov
std
mov
movsb
pop
dec
repz
jbe
dec
jp
jl
ds
mov
je
iret
cltd
xlat
xor
and
test
mov
xor
push
mov
push
pop
icebp
xchg
rclb
pop
push
jle
pop
push
rol
out
sub
add
mov
or
push
gs
scas
xchg
mov
in
add
mov
pushf
jecxz
adc
push
and
mov
add
mov
or
dec
es
adc
test
fisubrl
push
push
mov
xchg
repz
and
call
stos
mov
cmp
mov
push
adc
aaa
mov
sbb
push
cli
push
leave
pop
fiadds
jecxz
mov
mov
cli
pop
mov
mov
inc
sbb
nop
hlt
inc
pop
xor
decb
pushf
icebp
xor
addl
push
pushf
movsl
out
add
inc
sub
add
xchg
inc
mov
out
jl
push
mov
decl
cmp
xor
out
add
mov
pop
hlt
cmp
cmp
mov
adc
mov
sbb
and
or
into
dec
aas
bnd
jb
aas
push
imulb
sarl
std
add
dec
aam
or
mov
adc
cmpl
cli
nop
push
rcll
gs
xchg
mov
insb
std
fs
out
sub
jle
push
ret
int
cmp
in
jg
adc
and
pusha
stos
mov
or
pop
mov
mov
mov
nop
jle
jno
cmp
lods
cmc
push
ss
loope
pop
test
or
idiv
jg
add
cmpsb
mov
push
inc
int
or
xchg
js
add
lods
shll
rcrb
movl
sbb
ljmp
negb
mov
decl
incb
aaa
push
add
cmp
dec
inc
loop
aad
cmpsl
aam
xor
add
push
mov
cmp
or
inc
bound
dec
inc
jne
adc
mov
adc
push
jno
xchg
add
jl
adc
and
pop
sbb
cli
icebp
pop
scas
add
sub
sbb
jl
adc
mov
loope
std
sub
or
add
stos
mov
cmp
push
out
cmpsl
mov
adc
je
push
dec
mov
jle
add
mov
xor
pop
mov
ret
and
dec
fsts
jl
in
inc
je
jbe
sub
loop
inc
jle,pt
and
mov
inc
mov
mov
cmpsb
and
mov
movsl
daa
dec
mov
push
jb
movsb
sahf
jle
xor
or
pop
jl
fstl
leave
pop
xlat
cmpsb
pop
addr16
dec
push
add
pop
pop
imul
popa
jl
das
push
push
fiadds
push
dec
sub
dec
dec
shrl
pusha
pop
mov
sbb
cmp
and
fnstenv
cmp
daa
call
sub
and
cld
sbb
into
push
cli
stc
mov
xor
jl
dec
ds
inc
sbb
sbb
ljmp
xor
fbld
sbb
sub
fdivs
test
pop
push
mov
jb
cli
jne
dec
xor
rcrl
adc
aam
mov
addr16
data16
and
add
in
pushf
jle
popf
hlt
mov
out
mov
mov
loop,pn
pop
sbb
das
add
nop
dec
mov
in
mov
push
insb
push
dec
add
shrl
fwait
test
inc
mov
mov
inc
push
inc
ss
rcr
std
pusha
cmpl
mov
or
addr16
sub
ds
test
xchg
cli
inc
cld
sbb
stos
sbb
lods
outsl
in
ljmp
add
js
les
sub
lahf
pop
mov
add
ss
xlat
loop
mov
into
inc
bound
loop
or
cmp
or
push
sbb
mov
aaa
pop
mov
mov
xor
or
clc
pop
movb
pop
jl
loopne
pop
push
pushf
and
iret
cltd
clc
lret
cmp
test
cmc
bound
inc
in
pop
test
ds
cli
loopne
int3
in
pop
ret
call
push
cmp
inc
jge
lock
sub
pop
cltd
cmp
push
pop
ss
xchg
sub
jns
pop
jmp
sbb
xchg
add
fisttps
std
or
or
jecxz
das
xchg
lcall
mov
jns
shlb
push
lret
xchg
add
std
imul
mov
sbb
daa
insb
sub
test
fs
add
andb
adc
jecxz
cmpsb
sbb
push
call
and
mov
ljmp
sub
jmp
mov
icebp
sub
es
mull
mov
cmp
push
lds
shl
jbe
lahf
cmpsb
inc
in
xor
jle
push
mov
js
adc
lahf
subb
bound
repz
adc
in
mov
push
push
cli
sbb
fisttps
or
xor
cmc
lock
in
rcll
lock
jmp
pop
ret
sub
leave
addr16
mov
adc
inc
cmp
push
imul
pusha
push
dec
mov
test
push
es
add
loop,pn
xorb
xchg
xor
push
mov
lock
mov
mov
test
stos
cltd
or
jbe
add
popf
mov
inc
call
pop
aam
data16
pop
pop
cmpb
sbb
loope
or
pop
add
lods
mov
xor
mov
outsl
or
jecxz
std
scas
aas
imul
and
add
xchg
dec
bound
rcll
cmpsb
loope
jo
bound
and
push
mov
mov
cli
repz
dec
test
adc
rolb
jnp
mov
add
fs
movsb
bound
das
cmp
shr
fmull
add
mov
movb
xor
stos
jge
pop
mov
std
jg
or
add
push
xchg
pop
bound
push
lret
add
pop
or
leave
jmp
je
dec
dec
jno
aaa
jp
jge
cld
xor
movsb
out
inc
push
mov
popf
or
es
cltd
ljmp
nop
cmp
movsb
mov
fisubl
sarl
movl
inc
in
mov
xchg
sti
in
adc
adc
aas
jbe
mov
xchg
xor
int3
pop
xor
push
std
pop
lods
aaa
mov
in
add
lock
js
push
enter
cpuid
pushf
data16
sub
out
push
pop
aad
leave
iret
mov
pop
jl
push
xor
and
insl
cmp
xchg
movsb
movsb
pop
cmpsl
xor
movsl
dec
pop
orb
into
lods
scas
push
mov
xchg
and
mov
push
push
adc
pop
jecxz
jae
clc
add
adc
outsl
pop
xchg
ret
or
sub
push
les
and
mov
dec
sbb
pop
loop
xlat
mov
pop
cwtl
inc
xchg
loop
pop
cld
or
sbb
add
decb
fsub
fwait
push
out
sbb
dec
xor
xchg
int3
inc
sbb
fimull
inc
jnp
pop
out
or
ret
sub
dec
lods
xchg
fdivs
andb
push
adc
cmp
lcall
fstps
jmp
into
pusha
jae
movsb
fldl
or
xor
adc
jle
shrb
mov
outsl
mov
lock
jb
mov
push
loopne
fsubl
loop
xor
loopne
aas
call
xchg
sub
test
clc
add
loope
sbb
aaa
sub
ror
push
add
aas
mov
cmp
aas
cli
fisttps
cltd
xchg
rcrb
dec
and
xor
cltd
or
push
sbb
jle
rorl
in
mov
lret
jecxz
icebp
fildll
stos
add
subb
mov
std
add
mov
scas
mov
xor
int3
fiaddl
sub
dec
cld
push
fstp
mov
test
ret
xchg
push
jl
hlt
lret
call
adc
sbb
mov
addb
add
xchg
push
clc
push
loopne
cld
fidivl
fsubl
sbb
in
xor
add
aam
ss
jb
jmp
push
pop
xchg
enter
cltd
sbbb
push
lock
scas
push
decl
aam
and
mov
clc
shll
cli
push
addl
rcll
xchg
test
or
cmp
insb
pushf
pop
sub
pop
mov
xchg
psllw
sub
xchg
orb
popf
movsb
mov
and
movsb
mov
ds
imul
lods
mov
pop
std
cli
outsl
shlb
repz
and
xorb
or
mov
out
xchg
dec
addr16
jle
pop
int
push
lcall
scas
ja
stos
ljmp
jl
jge
push
sbb
rcl
push
cmp
pop
push
and
mov
or
sub
les
mov
pop
and
inc
pop
mov
push
and
or
mov
sahf
or
mov
sub
cmpsl
pop
pop
dec
sbb
gs
stc
pop
sar
stos
outsl
fisubrs
sbb
cmc
cli
mov
add
std
div
mov
sub
sarb
mov
dec
add
sbb
subb
jo
cmp
add
and
sbb
in
push
je
inc
push
cmp
inc
hlt
push
lahf
in
push
cld
or
mov
adc
stos
test
xor
loopne
mov
cmp
outsb
sub
cmp
sbb
fbld
mov
stos
inc
and
les
xor
cmp
icebp
fstpt
inc
jae
insb
test
jecxz
adc
xor
enter
cmc
ret
lods
add
push
and
cwtl
jbe
push
adc
jmp
xor
jg
int3
push
insb
add
outsb
sub
adc
sbb
pop
std
lds
cld
push
cmp
fsubrp
xor
and
push
xor
or
cli
das
clc
push
pushf
adc
notb
inc
lret
rcrl
mov
shlb
sahf
mov
cmp
js
fwait
mov
fwait
pop
lcall
mov
inc
loop
xor
sbb
movsb
mov
ss
pop
hlt
pop
aam
inc
fwait
or
adc
adc
std
out
or
dec
xor
adc
pop
enter
sbb
add
dec
push
ljmp
sub
filds
mov
sti
adc
xchg
movsb
mov
cld
cs
adc
and
mov
nop
loopne
add
or
std
or
mov
ljmp
inc
fisttps
cli
adc
dec
out
inc
ret
push
cmpl
mov
add
and
add
imul
jl
inc
xchg
incb
or
jge
fnstenv
popf
mov
mov
test
incl
fcompl
sbb
dec
je
sbb
push
xor
xor
adc
jns
mov
hlt
jl
lock
xchg
ret
inc
dec
sbb
pusha
push
setbe
jg
cltd
push
lds
xchg
ret
nop
clc
mov
lods
scas
icebp
or
leave
dec
and
or
rolb
loop
dec
das
inc
pop
adc
add
in
inc
addr16
std
or
in
pop
push
mov
or
aad
and
aaa
stos
sub
adc
stos
test
out
sbb
add
push
mov
mov
cld
xchg
ret
and
loopne
andl
inc
adc
sbb
test
das
pop
roll
mov
movsl
iret
or
pop
das
push
ljmp
es
lret
add
out
pushf
push
imul
and
xor
lcall
enter
push
pop
or
dec
or
pusha
sti
js
jl
pop
mov
mov
and
sbb
sub
imul
testb
jbe
push
pop
pop
push
add
jg
or
pop
pop
in
cld
or
lock
push
mov
mov
jle
jb
insb
cmp
cmp
sbb
hlt
or
pop
hlt
inc
mov
ljmp
or
ret
xchg
push
push
or
pop
loope
dec
pop
inc
dec
cmp
fwait
add
cli
outsl
push
into
iret
sti
int3
mov
int
mov
fisubl
scas
or
push
pop
mov
call
add
test
mov
sarl
lea
faddl
sbb
and
push
push
adc
loopne
imul
cs
push
scas
inc
inc
xchg
jno
cmc
in
loop
push
out
ljmp
cmc
jnp
je
pusha
dec
out
fisubrs
insb
pop
dec
add
mov
call
cli
dec
dec
cmc
pop
mov
aad
bound
xor
shrb
jle
push
pop
mov
xchg
or
test
adc
stos
mov
loope
pop
test
pusha
xlat
jmp
iret
fwait
pop
mov
fadds
sub
rcrb
jb
mov
adcb
jecxz
lcall
xchg
push
push
or
rorb
mov
adc
aam
roll
ds
push
jl
es
test
or
inc
lret
cmpsb
mov
imulb
cmp
fidivrl
insb
adc
xor
ret
dec
push
fadd
xor
inc
adc
dec
addr16
mov
dec
push
insb
push
and
cmp
add
jmp
dec
aas
ss
add
lcall
push
sbb
sbb
cmp
aad
test
cmp
add
movb
sti
movsb
sub
mov
xor
je
sub
lret
repz
inc
jg
dec
push
bound
jns
and
push
cmpl
cli
orb
cmpb
mov
rcrb
imul
cmp
dec
mov
xor
leave
addr16
repnz
mov
add
pop
movq
xchg
sbb
inc
es
lock
hlt
mov
dec
push
jns
mov
mov
sub
lods
movsl
mov
mov
pop
cmp
inc
loopne
sbb
cmc
push
in
xchg
push
push
inc
aaa
lds
les
mov
bnd
outsb
test
mov
cli
fs
and
push
sbbb
in
pop
xchg
rcrb
cld
loope
cwtl
and
sarb
idivb
adc
jg
call
xlat
pop
fcmove
in
ret
or
fsubrs
push
adc
or
mov
cli
stc
cmp
jmp
sub
jle
lock
fdivp
jb
lock
or
add
and
jns
mov
mov
mov
sbb
pushw
repnz
scas
add
jge
sbb
jne
ret
cmp
adc
scas
inc
adc
in
addb
push
les
jg
pop
mov
and
addl
jbe
inc
xor
inc
mov
mov
pushl
push
das
mov
pop
ljmp
imul
outsb
sub
nop
test
rcrl
movsb
lock
cld
add
add
and
cld
ljmp
xor
cmp
pop
cmp
add
push
sti
dec
movsb
dec
inc
and
jns
pop
inc
test
adc
nop
insb
outsb
xchg
pop
sbb
mov
mov
movsb
mov
into
fsincos
mov
rcrb
cmp
dec
xlat
push
sub
cmp
popl
stos
lods
nop
inc
lds
add
push
inc
sbb
lcall
fcmovnu
cmc
or
popf
into
mov
sub
or
fistl
mov
adc
dec
or
aam
dec
dec
shlb
repz
cs
push
xchg
cltd
outsb
ja
add
dec
bound
mov
mov
inc
mov
loopne
fbld
stc
or
mov
hlt
shr
mov
dec
jmp
xlat
repnz
cld
outsl
mov
inc
jmp
add
pop
mov
cmp
les
fdivs
dec
fisttps
push
dec
cs
xor
and
add
push
jo
std
or
std
sbb
mov
pop
shll
cmpb
out
rorb
lods
pop
loopne
mov
cld
aad
addb
mov
or
jle
aam
add
or
add
xor
data16
adc
mov
adc
xchg
hlt
or
imul
adc
movsl
mov
fs
ljmp
cld
fistpll
loop
xor
xchg
jl
call
scas
js
cmp
bound
call
out
rorl
and
loop
sub
popa
nop
push
fwait
mov
mov
stos
sti
xchg
cmp
ror
push
es
pop
loop
test
jo
loopne
jne
fmuls
xor
xlat
xor
jg
sub
into
add
adc
xor
lcall
daa
loope
shlb
imul
shrb
repnz
cld
lcall
sub
pop
ret
ds
rcll
push
inc
mov
cli
cwtl
fs
in
incl
lock
sub
jp
push
inc
mov
sbb
mov
xor
mov
ss
mov
dec
cmp
arpl
mov
and
fldl
add
mov
arpl
clc
loopne
rolb
aaa
fsts
add
mov
iret
adc
ret
push
sbb
pop
adc
icebp
ret
hlt
ds
mov
xor
loopne
stos
fbstp
pop
int
xchg
cmp
jo
add
sbb
jo
jno
mov
jmp
mov
jecxz
pushf
sub
and
xor
push
mov
or
or
mov
inc
lret
subb
push
mov
rol
mov
mov
dec
lcall
cltd
scas
fnstenv
bound
insb
testl
dec
stos
pushw
mov
mov
dec
nop
lods
jne
adcl
icebp
and
mov
mov
pop
adc
popf
jle
cmpsl
inc
adc
decb
ja
adc
call
cmpl
jne
adc
xor
pop
mov
sub
mov
add
mov
xor
mov
idiv
push
cld
jg
mov
sti
add
inc
jmp
mov
adc
add
cli
inc
fmulp
sbb
jbe
lcall
mov
cmp
shrl
addb
mov
pop
sub
lret
rolb
movsb
push
xchg
inc
pop
push
xor
into
stos
scas
jg
mov
insb
test
mov
hlt
mov
int3
xorl
cli
rorl
mov
pop
xor
rolb
cs
inc
cmp
lods
or
cmp
stos
cs
and
ljmp
xchg
adc
movsl
sbb
fwait
jl
rorb
lea
inc
pop
hlt
cmp
sahf
pop
jo
push
aas
scas
rcrb
xor
add
add
aas
addb
mov
call
push
mov
out
imul
xchg
sahf
filds
pusha
pop
cmp
inc
insb
mov
jl
sbb
and
jl
and
popf
and
addb
test
es
push
push
lods
imul
xor
sub
jp
push
push
xchg
clc
jg
pop
sbb
stos
enter
jne
es
jne
icebp
push
inc
xorl
jmp
mov
sub
mov
xchg
scas
add
adc
aad
add
fs
jb
cli
lock
mov
clc
sub
jno
addr16
mov
std
xor
dec
ret
jbe
push
pusha
mov
mov
or
mov
jl
mov
mov
xchg
add
cmpb
pop
cmp
mov
inc
sub
insl
in
inc
ja
lea
loopne
sarb
je
xchg
dec
stos
decl
iret
out
daa
arpl
mov
add
fsubl
xor
pop
pop
dec
and
clc
push
cwtl
fcomip
outsl
ret
jl
icebp
fs
xchg
jge
js
insb
add
sahf
lock
and
and
mov
push
iret
adc
sbb
out
push
mov
stos
or
sub
out
pusha
xchg
jle
data16
jbe
ret
pop
jp
shrb
mov
adc
or
in
pop
icebp
mov
mov
and
pop
out
ret
mov
jne
or
in
rorb
mov
pop
fdivl
cli
mov
iret
add
cltd
inc
mov
pusha
aam
roll
cli
push
cld
jg
sbb
and
adc
xor
in
fcoms
mov
inc
push
xor
push
cli
fs
mov
inc
add
lret
mov
stos
adc
push
xchg
mov
lock
xchg
js
jo
call
and
cwtl
bound
std
lahf
lock
sbb
in
lock
scas
adc
jo
xor
pop
cmp
push
inc
adc
into
or
ret
adc
push
mov
flds
mov
pop
xchg
lods
or
add
or
rcr
out
enter
int3
loopne
xorl
test
das
cmp
pop
push
mov
fwait
hlt
lods
subb
loopne
sub
js
dec
dec
inc
or
mov
xor
xor
cwtl
jge
adc
in
loopne
push
mov
inc
pop
adc
les
inc
movsb
cs
mov
aad
aas
fisubs
push
inc
fimuls
pop
xor
movsl
out
add
inc
lock
aaa
add
rorb
mov
lahf
add
mov
or
add
decl
sbb
fnstenv
repnz
xor
addr16
push
cs
shl
lods
sbb
mov
pop
mov
clc
mov
cmc
out
add
in
and
lret
xchg
add
xor
les
scas
shll
push
jno
and
lods
xchg
mov
xor
test
movsl
inc
movsb
iret
orb
lea
call
fcmovu
push
add
push
mov
adc
pop
add
test
add
shl
lds
cmpsl
xor
and
xchg
enter
dec
mov
clc
add
add
jbe
cli
mov
mov
pop
rorb
push
repz
mov
mov
negb
in
lahf
dec
and
xor
pushf
addl
hlt
dec
add
jle
and
out
xchg
adc
lcall
push
int
xor
js
mov
push
or
add
fisttpl
push
xchg
decb
mov
add
or
dec
cwtl
sub
cmc
lcall
xchg
sub
pop
es
fisubrl
in
mov
mov
inc
ret
inc
mov
sbb
stos
test
nop
test
mov
pop
js
std
cmp
sbbb
insb
ret
in
hlt
lret
cmpsb
sahf
dec
mov
cwtl
add
mov
js
test
jle
subb
loope
jbe
and
xor
dec
push
jnp
mov
xor
test
xchg
insb
xlat
mov
out
fiadds
sbbb
inc
lods
pop
xchg
xor
pop
ja
stc
adc
dec
mov
mov
test
dec
inc
aam
mov
nop
adc
pop
in
dec
scas
push
inc
add
fisubs
nop
test
pop
and
stos
cmpsb
lds
mov
lock
sub
jmp
jge
dec
cli
add
and
add
and
pop
xor
in
js
pop
push
mov
out
xchg
xor
aam
cmp
ficoml
cmp
pop
mov
call
and
clc
sbb
push
add
jo
mov
and
mov
jb
jmp
fiaddl
mov
inc
out
mov
inc
scas
lods
aas
push
pop
testl
imul
enter
lock
sbb
aam
or
add
fists
inc
xchg
mov
or
fwait
pop
mov
mov
or
push
imul
sarb
jo
push
pop
adc
pop
jl
stc
jle
add
xchg
pushf
pop
mov
mov
das
shr
enter
mull
cld
pop
sbb
mov
fadds
mov
or
mov
cmp
pop
push
clc
fildll
sub
sahf
std
sbb
sete
xor
mov
sub
adc
aad
ljmp
hlt
inc
jmp
dec
pushf
fdivs
data16
jp
clc
jb
sbb
ror
adc
dec
stos
int
hlt
pusha
rcll
shrl
ljmp
lock
lods
mov
lahf
ljmp
jns
xchg
mov
pop
mov
shrb
add
dec
cwtl
jp
in
sub
add
push
mov
test
mov
mov
pop
xchg
jp
aas
rcrb
adc
sbb
mov
fidivrl
bound
inc
scas
and
and
popa
adc
mov
in
inc
insl
js
push
adc
inc
mov
push
mov
sub
dec
inc
xchg
jecxz
cwtl
mov
aad
add
push
outsb
xor
out
mov
les
mov
dec
cmc
mov
daa
push
mov
xchg
or
mov
mov
pop
lock
push
mov
mov
cld
mov
add
jecxz
icebp
outsb
js
mov
repz
cld
movsb
mov
mov
mov
xor
mov
dec
pop
out
adc
push
sbb
xchg
out
jl,pt
stos
xchg
mov
mov
push
jns
xchg
lea
inc
fdivrp
jge
dec
ret
dec
lahf
xor
inc
mov
xor
pop
scas
dec
lahf
mov
push
fidivl
jmp
or
fsubrs
push
xchg
pop
push
sub
xchg
dec
and
shll
icebp
pop
pop
ret
test
aam
and
or
pop
jo
sbb
imul
pop
psrad
jmp
pop
mov
mov
sub
scas
xchg
xchg
mov
cwtl
jmp
push
jb
or
adc
jg
add
movsb
sub
loop
sbb
push
repnz
lea
sbb
cmp
add
inc
jecxz
jmp
dec
ljmp
push
mov
roll
fnstenv
jae
popa
adc
out
push
lock
loop
mov
jl
bound
ss
add
aaa
and
and
xchg
ljmp
inc
dec
cmpsb
mov
sub
cmpsl
aas
xchg
rorl
scas
mov
cmpsb
aas
clc
in
mov
js
or
outsl
xor
fbstp
lret
incl
andb
pop
outsb
mov
push
push
push
add
sbbb
adc
push
xor
and
mov
popf
adc
mov
xchg
out
icebp
and
sub
data16
push
or
movsb
cmp
adc
push
nop
test
adc
cltd
xchg
xor
push
test
fmuls
dec
lea
mov
dec
xor
mov
jecxz
cld
ret
orl
daa
dec
push
jo
pusha
test
mov
sub
and
mov
das
add
and
fsts
out
bound
popf
rclb
dec
hlt
sahf
jbe
xchg
pop
adc
lods
push
mov
mov
lock
lcall
fldt
push
ret
or
xchg
inc
fwait
mov
jg
out
xor
xchg
cmp
mov
xor
jp
or
and
xor
sub
aas
ja
push
fnsave
fcomps
xor
pushf
mov
sbb
sbb
mov
cwtl
and
cmc
cli
jg
loopne
popa
inc
loop
jo
stc
add
lea
sahf
icebp
adc
aad
push
push
and
aas
jp
stos
push
mov
jae
push
cli
fs
jg
mov
ret
jecxz
iret
insb
dec
inc
pop
aad
loope
jne
mov
sahf
dec
ss
sub
es
fimuls
test
add
inc
or
cmpsl
or
fs
popa
sbb
loope
sti
xor
and
mov
xor
mov
jmp
sub
mov
push
pop
inc
mov
sbb
outsb
cld
stos
cmp
mov
push
pop
and
cmp
lcall
outsb
push
mov
mov
loopne
insb
cs
jle
daa
pusha
sbb
loop
out
xor
jg
mov
xor
mov
adc
xchg
sub
push
mov
add
sar
xchg
subl
rcrl
es
push
js
pop
ss
dec
cmp
mov
xchg
insb
scas
fcomp
aas
sub
xchg
mov
push
push
xor
gs
xbegin
pop
shlb
fadds
mov
and
stos
mov
test
fnstcw
into
fdivrs
push
aam
push
mov
sbb
push
xchg
ja
aaa
cmp
xor
and
cwtl
push
cmp
pop
xchg
adc
roll
cs
lahf
sub
add
loopne
dec
pop
xor
mov
enter
loopne
push
idiv
mov
ljmp
cmc
cltd
out
bound
imul
mov
or
nop
loope
xor
inc
ljmp
xor
jp
addb
adcb
xchg
pop
xchg
pop
stc
out
or
inc
or
xor
mov
mov
cli
lret
mov
push
ja
cmc
fwait
push
or
dec
int3
sbb
out
enter
push
jle,pt
jecxz
inc
mov
inc
jno
icebp
xchg
ss
fistps
aas
loope
sbb
dec
iret
or
mov
mov
test
inc
cs
mov
cmp
daa
push
push
int3
xchg
jae
push
push
fistpll
incb
out
or
das
mov
sahf
lock
sbb
int
leave
jo
dec
add
cmp
mov
and
mov
mov
ud2
mov
push
mov
xchg
mov
call
loopne
lahf
jle
aam
jbe
mov
mov
outsb
int3
arpl
jo
loope
xor
dec
sub
into
ficompl
jmp
cmc
outsb
xor
dec
aad
pop
lods
or
incl
rcrb
jmp
repnz
das
push
inc
sbb
add
push
or
dec
and
jg
mov
data16
push
cld
and
call
mov
adc
jg
sbb
movzwl
or
sbb
fisubrs
mov
mov
pop
sub
xchg
inc
or
loope
lret
pop
inc
stc
or
test
outsl
mov
shlb
pop
scas
pushf
cmpsb
add
addr16
pop
test
push
mov
iret
cmp
mov
push
add
or
inc
adc
sbbl
pushl
frstor
mov
add
and
loope
sub
or
xor
mov
cli
incl
jno
adcb
cmpxchg
into
loopne
imul
stos
or
decb
pop
or
jle
dec
insl
xor
cs
xchg
inc
adc
adc
call
stc
lcall
sti
mov
add
push
gs
dec
mov
in
sub
sub
jg
push
lods
pop
gs
jno
mov
and
xor
decl
lods
inc
inc
adc
les
das
test
ds
mov
mov
imul
clc
add
in
xchg
mov
mov
push
or
lods
or
pop
test
decl
outsb
cwtl
jp
mov
testl
push
pop
jo
je
push
adc
sarb
out
push
add
es
lahf
and
push
mov
stos
mov
xlat
jp
inc
movsb
ja
xlat
testl
in
mov
pop
pop
repz
pop
dec
mov
xlat
mov
ret
and
jecxz
roll
js
decl
repnz
push
mov
cld
fisubrs
push
js
out
or
mov
or
dec
dec
cmp
out
in
mov
aad
xor
lret
sahf
jp
fisttps
lods
pop
rcrb
lds
push
js
or
pop
jb
add
mov
cli
push
cld
mov
adc
shl
jns
ret
rcrl
xchg
sbb
dec
movsl
out
cwtl
out
and
and
jb
les
rcrb
inc
xchg
push
adc
xchg
cs
lret
imul
adc
mov
xchg
dec
add
into
mov
addr16
sbb
mov
out
jae
sarl
and
push
scas
dec
push
incb
rclb
fsubrs
fcmovnb
or
lea
sbb
xchg
stc
or
insb
pop
insb
push
xchg
mov
or
dec
add
lds
and
daa
enter
and
hlt
cs
or
add
and
jg
int3
movsb
adc
or
jbe
pop
hlt
or
dec
xor
ds
cmpsb
xchg
pusha
fwait
mov
pop
jecxz
fwait
cs
mov
xor
in
mov
aad
or
xor
icebp
outsb
jl
push
mov
scas
js
pop
movsb
dec
push
clc
push
or
mov
bndldx
inc
mov
dec
push
call
into
ret
dec
mov
insb
icebp
das
sarb
inc
int
cmpsb
xchg
pop
jmp
pop
add
jmp
test
frstor
dec
mov
aaa
mov
fidivs
mov
inc
lock
stos
idivl
cmpb
clc
pusha
push
test
push
sub
fiaddl
inc
icebp
add
pop
jp
rol
test
or
xlat
pop
mov
in
push
add
adc
fdivrl
sbb
mov
test
jmp
lret
sbb
cli
mov
icebp
loope
andb
push
jmp
mov
and
stos
inc
lcall
jae
sub
cmp
scas
call
andb
sub
aaa
or
clc
mov
popa
mov
je
add
mov
je
jbe
repz
xchg
mov
mov
dec
int3
jbe
or
or
adc
pop
insb
add
sbb
and
mov
loope
sub
test
aam
jecxz
jmp
mov
mov
pop
mov
add
add
xor
adc
sbb
mov
stc
xor
adc
xorl
adc
cli
mov
stos
pop
enter
cli
cli
sub
sbb
or
xor
out
fisubrl
xor
mov
mov
push
xchg
hlt
rcrb
daa
test
aas
clc
add
loop
mov
movsb
jg
xchg
adc
or
testl
jbe
jno
aas
sarb
popa
add
imul
rclb
inc
cmp
les
dec
mov
push
loopne
mov
inc
adc
mov
push
adc
xor
inc
lds
inc
lock
adc
adc
xchg
loopne
add
mov
jg
and
mov
jb
adc
add
cld
ljmp
lcall
arpl
pushf
loopne
cld
aaa
push
ss
cmpsl
shrl
jmp
add
nop
sahf
test
sbb
cli
jmp
jbe
lock
xor
or
fsubrs
clc
ljmp
in
movsb
add
ss
add
fs
xchg
xchg
lret
outsl
inc
add
sub
fs
repnz
test
xor
pop
add
dec
add
fbstp
or
add
jle
movsb
add
lahf
pushl
xchg
xor
xorb
push
sti
hlt
jl
mov
test
into
loope
loope
pushl
mov
gs
enter
and
pop
sub
cli
mov
dec
ret
movsb
ret
and
aaa
add
loopne
mov
dec
ljmp
mov
or
or
or
and
pop
in
adc
sbb
jle
push
lds
mov
ljmp
push
clc
sahf
movsb
out
mov
sbb
out
push
pop
and
jp
pop
test
fisttps
das
jo
add
jmp
adc
mov
cs
cld
cwtl
stc
scas
sub
das
mov
gs
lahf
dec
add
hlt
pop
test
fs
dec
cmp
repz
add
stc
rorl
add
dec
cli
out
faddl
add
jne
push
or
sub
dec
iret
mov
fwait
pop
mov
and
lret
push
dec
pop
jbe
xchg
inc
outsb
xchg
mov
aaa
jecxz
xor
faddl
add
xlat
add
jne
mov
int
repnz
test
cmp
sbb
cmpsb
stc
int3
sbb
mov
xchg
dec
xchg
lock
out
cmp
gs
pop
add
or
decl
pop
push
mov
iret
pusha
pusha
xchg
lods
pop
dec
mov
pop
xchg
aad
pop
push
xchg
pop
xor
pop
aam
mov
cmp
mov
push
pop
mov
and
js
pop
dec
push
xor
pop
aaa
add
xchg
sbb
cmpsb
rcrb
mov
lret
movsl
shlb
icebp
push
mov
mov
js
sbb
xchg
out
in
and
jbe
inc
loopnew
jmp
stc
fistpll
stos
dec
dec
andb
dec
jle
ds
movsb
arpl
bound
fisttps
add
lret
fwait
add
and
xor
add
je
or
cli
int3
out
popa
push
and
clc
inc
ffreep
shll
inc
or
dec
lret
ret
add
aad
cmp
dec
jge
xchg
inc
jle
cld
xchg
sub
jp
test
flds
and
push
xchg
inc
iret
int3
lds
xchg
pusha
adc
loope
xchg
mov
jmp
xorb
dec
or
and
rorl
push
shlb
add
hlt
mov
jne
icebp
nop
xchg
cmp
out
inc
pmullw
adc
dec
outsl
cmp
mov
es
jo
or
adc
pop
push
add
xchg
js
or
fdivl
das
inc
aas
xabort
into
xchg
cli
and
xor
cmpsl
mov
mov
or
stc
pop
icebp
pop
inc
leave
or
mov
add
push
mov
xorl
mov
sub
aas
ss
shl
push
lret
jecxz
leave
mov
in
jno
inc
add
rclb
xor
mov
bound
out
and
lcall
leave
pop
mov
mov
xchg
ret
cmpb
dec
push
divb
inc
and
pushl
rcll
scas
xchg
lret
sbb
pushf
addl
add
bound
decl
js
outsb
dec
add
enter
cmpsb
push
loope
insb
sarb
outsb
mov
sbb
outsb
xchg
pop
loop
sti
clc
adc
sbb
jo
sbb
lock
inc
pop
and
xchg
cmp
pop
std
aaa
sbb
sub
push
xor
cld
mov
push
and
pop
into
or
sub
adc
notl
pop
scas
test
adc
cmp
and
loope
sbb
icebp
aad
sub
add
faddp
mov
outsb
loopne
popf
cli
jp
mov
xchg
inc
fcmovb
negb
and
pop
dec
mov
shlb
scas
std
ja
push
ss
pop
xchg
cmc
add
sti
push
decl
pop
xchg
data16
clc
adc
push
jle
icebp
or
js
enter
sub
flds
or
cs
push
ret
pop
test
mov
add
repnz
stos
xchg
sbb
mov
subb
xor
push
lods
and
mov
xchg
jle
add
pop
lock
aam
or
xchg
mov
mov
jp
clc
and
into
or
push
mov
filds
loopne
cmc
ffree
xchg
repz
and
ret
jo
test
pop
mov
pop
xchg
push
aam
lcall
xchg
test
pushf
mov
sub
cmpsb
cmovle
scas
ljmp
sub
add
das
push
jo
cmp
dec
faddl
xor
push
aam
cmp
sbb
add
xchg
sbb
push
bound
adc
push
es
int3
addl
enter
enter
adc
push
push
mov
xlat
lea
jb
fwait
mov
mov
jne
mov
clc
out
mov
test
mov
frstor
mov
pop
jo
push
xor
jae
cld
scas
fcmovnbe
into
mov
xor
adc
xorb
test
adc
or
pop
fisubrs
in
daa
xorb
dec
std
push
jne
lods
addb
adc
fcmovb
aaa
xor
sbb
dec
pushf
push
movsb
rorl
cwtl
inc
out
lock
cltd
js
push
and
or
incb
movl
hlt
mov
sbb
popf
mov
mov
or
mov
inc
cli
xchg
shrl
js
and
sub
mov
stos
cld
dec
fs
arpl
jmp
xchg
cwtl
mov
dec
push
mov
push
or
bnd
inc
jo
mov
pop
and
sub
clc
and
xchg
cmp
aaa
ficomps
xor
add
mov
and
mov
gs
inc
add
and
push
sahf
lds
inc
test
pop
outsb
pop
push
jl
subl
jno
pushf
adc
or
mov
xor
aas
inc
cmpsl
stos
sarb
inc
dec
out
mov
and
addr16
scas
inc
call
sub
xor
push
xchg
dec
movsb
mov
add
mov
or
sbb
xor
mov
orps
shl
sbb
ljmp
into
cmp
dec
movsl
stos
fisubl
inc
push
loop
mov
xchg
and
or
lock
lock
mov
loopne
ja
lahf
repnz
xor
sbb
xchg
sub
push
fstpt
push
sahf
loope
in
icebp
cmpsl
aas
loop
movsb
pop
sbb
jns
orl
data16
daa
jmp
mov
pop
add
aas
mov
in
or
out
jmp
clc
and
jmp
je
mov
sub
test
xor
push
test
mov
add
mov
add
js
fwait
push
dec
or
out
and
or
or
out
out
std
mov
xor
cmp
aas
das
jmp
push
mov
push
aam
xchg
xchg
sbb
mov
popa
mov
cli
call
push
decb
test
mov
mov
fcoms
mov
incb
add
push
je
pop
and
roll
cmp
ss
pop
mov
inc
push
cs
adc
xchg
cmp
inc
lahf
mov
adc
jno
and
pop
insl
lea
adc
inc
loop
pusha
roll
dec
mov
push
xor
mov
pop
jb
or
add
push
cmpsb
mov
inc
cmp
push
jge
cmp
add
inc
std
outsl
mov
mov
inc
jo
adc
aas
cwtl
out
ljmp
xor
test
inc
adcb
push
cwtl
sub
das
rclb
imul
or
adc
loopne
jbe
add
cld
loope
cmp
rorb
add
or
and
call
sub
insl
je
xor
js
adc
es
mov
add
cwtl
pusha
push
inc
ucomiss
pop
pop
xor
fcoms
js
push
dec
ret
jl
pop
aas
popa
rolb
mov
xor
insl
jg
subl
call
mov
outsb
les
lock
xchg
das
jecxz
xchg
jecxz,pn
lcall
shll
fdivs
mov
jl
push
leave
jbe
shl
lock
out
or
loopne
mov
xor
add
popf
faddl
and
xor
mov
mov
push
cld
jecxz
std
jb
call
imul
jecxz
call
or
add
pop
sub
jmp
mov
std
pop
shrb
or
ja
mov
dec
jle
lock
movsl
imul
add
sub
rdmsr
inc
and
scas
and
mov
out
ret
cmp
sbb
and
xchg
imul
test
lock
mov
mov
loop
andb
adc
add
mov
push
adc
shrb
icebp
in
hlt
adc
jb
add
push
sbb
pop
call
xchg
aad
ljmp
ss
mov
pop
cld
push
insl
mov
adc
daa
xchg
repz
aam
or
test
fwait
shrb
mov
pop
lret
push
jbe
cmpl
cmc
mov
cmc
and
dec
or
rorl
mov
mov
insl
mov
mov
mov
loopne
inc
mov
pop
add
ljmp
mov
sub
and
pop
adc
inc
xchg
mov
sbb
arpl
lahf
je
add
push
push
cld
dec
loop
lahf
and
nop
scas
fisttpll
mov
js
mov
punpckhbw
pop
outsb
call
lds
pop
js
pusha
add
mov
push
popf
cmp
fwait
mov
jae
testl
call
ljmp
mov
push
pop
cld
add
out
mov
add
pop
nop
jg
adc
cwtl
adc
or
mov
mov
or
push
mov
in
and
pop
cmp
aas
jns
outsl
les
add
mov
in
mov
xor
mov
ret
aas
int3
fistps
mov
mov
cmp
divl
cmp
icebp
subb
sub
and
mov
xor
sti
xor
xchg
push
jge
scas
rcrb
jle
test
inc
adc
dec
add
mov
lock
int
sbb
mov
pop
jg
test
push
adc
sahf
lcall
adc
inc
ljmp
push
and
call
fcomip
fbstp
cmp
arpl
inc
sbb
or
mov
mov
scas
rorb
sub
xor
inc
cmp
push
aam
jg
icebp
inc
or
adc
xchg
cmp
push
or
push
and
mov
pushf
and
sbb
lcall
int
cmp
xchg
inc
scas
daa
inc
push
dec
test
call
sub
adc
pop
sub
mov
xor
pop
pusha
or
or
xor
adc
mov
popa
fs
out
sahf
xor
data16
addb
xor
dec
shr
pop
sub
out
mov
pop
pushf
imul
stos
mov
lods
add
rorb
push
loope
mov
dec
jl
mov
adc
jae
and
bts
mov
push
or
sub
xlat
jbe
mov
xchg
pop
add
fcoml
idivb
hlt
out
sbb
adc
inc
inc
and
int3
addr16
fstpl
loope
add
dec
jp
pop
mov
dec
sti
mov
stos
lahf
cwtl
mov
cmp
rorl
enter
jmp
dec
xchg
cmp
adc
sbb
and
fwait
push
add
jle
mov
or
mov
fwait
data16
popf
movsb
xchg
subb
cld
push
stc
incl
mov
cld
outsl
cwtl
mov
cmp
sub
rclw
shl
incl
mov
mov
orb
pop
movsb
loope
aam
dec
lock
xchg
inc
cld
mov
clc
pop
cld
nop
xchg
xlat
repz
outsb
je
mov
mov
inc
sbbb
roll
outsl
test
decl
push
jbe
mov
cmc
pop
sbb
adc
cmp
and
fdivs
adc
mov
sbb
push
inc
inc
sub
mov
mov
sbb
dec
inc
flds
jno
push
or
inc
mov
in
push
or
mov
hlt
cwtl
dec
mov
orl
add
and
mov
push
call
or
pop
mov
subb
xchg
push
mov
fistpll
jp
inc
adc
add
add
test
iret
sbb
and
in
jb
mov
add
sub
and
and
mov
jne
mov
mov
add
cltd
rol
xchg
adc
test
addr16
push
in
adc
add
xchg
in
outsl
add
inc
stos
jecxz
ja
neg
into
xor
addb
int3
arpl
pop
bound
pop
dec
pop
mov
push
aas
mov
std
jo
inc
scas
sbb
in
roll
dec
push
add
pop
push
push
test
fcompl
xor
push
ja
fstp
movsl
cli
sub
sahf
and
orb
sub
data16
adc
push
mov
and
pushl
pop
or
jmp
nop
add
testb
movsb
decb
into
or
push
in
and
shlb
lods
or
xlat
jbe
jl
mov
push
loopne
cmp
decl
pop
jg
pop
push
out
clc
test
shr
push
inc
sbb
nop
push
inc
call
fbstp
cmp
pop
mov
and
insb
test
arpl
cltd
data16
sub
cltd
and
loop
cmpsb
je
sarb
adc
bound
jecxz
dec
enter
cmp
mov
mov
add
pop
pop
in
dec
push
negb
adc
gs
sub
pop
jge
movsb
jb
sbb
loopne
sbb
ss
adc
out
sub
sub
dec
je
pop
fs
sub
add
cld
xorb
mov
jg,pn
pop
test
xor
inc
or
ret
cs
adc
inc
push
xor
sbb
cli
add
xchg
mov
mov
test
push
sub
sub
pop
fildl
rcrl
in
mov
mov
cmp
pop
and
aam
cwtl
jbe
xor
mov
repnz
cmp
dec
fsubrs
adc
inc
adc
insb
jns
xor
cltd
and
in
pop
cmc
add
fdiv
push
xor
shll
pop
cmc
mov
jbe
sub
das
in
incl
cwtl
jae
jle
stc
clc
xchg
mov
xor
out
lds
loopne
icebp
insl
sbb
xor
and
mov
pop
adc
add
pop
in
add
les
add
out
ret
les
repz
cli
mov
lock
loope
into
sbb
imul
clc
mov
sbb
out
arpl
xor
or
inc
dec
sbb
mov
lahf
lods
into
fsubrl
aas
sbb
rolb
or
mov
inc
dec
sbb
rcrb
xchg
mov
jb
cmp
xchg
xchg
sbb
push
pop
movb
aad
push
or
sbb
inc
or
sbb
jns
fld
aaa
cld
mov
mov
shrb
out
rcrl
add
pusha
fbstp
mov
popa
push
ljmp
sbb
and
mov
pop
rol
rclb
jo
pop
xchg
shrb
lock
test
jne
fidivs
xchg
add
rolb
cmp
lcall
push
pop
dec
enter
xchg
cmpb
sbb
je
in
rclb
popa
xchg
fldt
popf
xchg
sbb
xchg
cmpsl
je
push
or
ret
ss
jmp
mov
lret
or
ud0
pop
fisttps
out
push
jecxz
test
aaa
adc
push
loop
cmpb
sbb
mov
and
add
inc
ljmp
jecxz
ret
imul
rcrl
clc
in
inc
test
dec
pushf
inc
fwait
jge
mov
mov
mov
hlt
xor
sbb
sbb
dec
clc
mov
add
repz
xchg
cmpl
jo
push
mov
add
incl
dec
xchg
daa
js
lods
mov
push
or
xchg
mov
in
sbbb
and
lock
mov
or
or
in
out
sub
loopne
lock
popa
jb
sub
je
push
aas
inc
data16
and
jg
cmp
push
add
gs
subb
inc
xor
lea
add
add
in
fwait
push
adc
ja
mov
sbb
xor
inc
call
mov
icebp
aaa
add
bound
outsb
lods
cli
call
jmp
xchg
outsb
sbb
xor
inc
test
add
xchg
jae
mov
sub
inc
xchg
cs
loop
or
pop
cmc
mov
xor
or
jmp
sarb
repz
fsubrp
add
call
xchg
add
rorb
dec
jo
out
outsl
stos
mov
push
cmpsb
movsb
dec
sbb
mov
pushf
add
push
cmp
jne
int3
fs
clc
flds
stos
sub
imulb
sbb
jbe
cmp
cld
inc
fildl
adc
jno
lods
push
dec
sahf
jne
out
sub
xchg
orl
pop
pop
lds
ror
outsl
daa
sbb
xorb
inc
cmc
adc
adc
ret
pop
add
out
loope
aas
xor
adc
loope
pop
or
rclb
add
daa
cmpb
sub
pushf
pop
fcom
sbb
stos
mov
mov
cli
xchg
rcl
and
insb
and
orps
bound
adc
mov
loope
data16
adc
xchg
sbb
lret
add
sbb
cmc
sarl
insb
and
mov
xchg
loop
sub
and
adc
lods
fldenv
pop
insb
sti
and
fiaddl
xchg
shll
jo
pop
push
sub
xor
xor
xchg
push
sub
and
push
inc
fisttps
xor
or
push
xor
divl
pop
scas
or
shll
pop
repnz
inc
jo
pusha
push
mov
es
push
filds
in
or
mov
and
mov
mov
addb
stc
in
sbb
dec
or
inc
ficomps
dec
xchg
inc
and
cltd
pop
pop
pop
mov
fsubr
or
or
lods
in
mov
and
jl
pop
out
inc
mov
lret
jno
cmpsb
mov
sbb
clc
pop
lock
pop
mov
mov
movsb
inc
add
fistps
jmp
lock
aaa
cli
add
je
es
xor
mov
pop
cmpsb
dec
in
cmpsl
adc
sbb
stos
inc
mov
movsl
jecxz
scas
int
in
loopne
stos
dec
dec
or
jmp
add
mov
jne
dec
xor
stc
cmpb
hlt
into
in
xorb
dec
fstpt
lods
ja
pop
shl
jnp
mov
addl
pop
dec
fsubrl
or
cmp
stos
xlat
xor
popf
push
and
mov
dec
sub
sbb
int3
addr16
outsl
cmp
out
les
adc
adc
and
rcll
aas
aam
mov
mov
clc
mov
mov
cli
js
call
lahf
orl
ret
sbbl
hlt
pop
in
adc
or
pop
mov
dec
add
aaa
std
cmpsb
rcrb
lods
jo
imul
mov
hlt
cs
push
hlt
clc
fsubrs
add
push
int3
mov
clc
movsb
lds
and
repnz
into
fmull
repnz
std
call
jle
jle
mov
std
decb
inc
or
cmpsl
hlt
lods
adc
xchg
fisubrs
mov
or
loopne
ss
aad
mov
jle
adcl
fdiv
pop
add
jmp
and
add
mov
push
psraw
fsub
add
push
int
cld
add
jmp
inc
push
fmull
jmp
jmp
push
repz
cmp
test
sbb
xor
out
dec
adc
or
iret
js
add
push
sbb
push
test
nop
sbb
jmp
add
push
inc
inc
jo
jge
adc
fdivp
aad
pop
mov
lcall
jmp
shlb
ja
sbb
jle
pop
cltd
addb
cmc
rol
in
sbb
xor
cmp
sub
and
cmpb
movb
lods
cmc
fcomip
dec
dec
or
ret
rcll
mov
lods
stos
push
jne
push
mov
clc
cmp
adcb
cmp
mov
lret
repz
jne
pop
addr16
stos
jle
push
pop
hlt
or
lcall
outsb
fs
outsl
mov
xchg
rclb
xchg
push
adc
jns
and
andb
dec
jmp
ret
mov
or
push
in
aas
jp
jp
outsl
sbb
or
ds
incb
sbb
inc
add
mov
mov
js
lods
mov
mov
repz
cmpsl
aas
lock
jp
xchg
cli
jl
rcrb
out
or
in
jbe
scas
sahf
sub
mov
mov
cmpsb
in
pop
aas
xlat
pop
sahf
add
popa
and
pop
in
and
loop
cmc
pop
andb
lds
out
pop
enter
sub
insl
int
das
lcall
pop
repnz
outsb
dec
inc
mov
jp
or
jge
and
test
pop
pop
xchg
loopne
dec
mov
add
pop
push
jno
insb
push
adc
and
push
adc
mov
aaa
outsl
in
xchg
add
cmp
push
scas
and
jle
rcrb
daa
getsec
ds
sbbb
pop
repnz
outsl
add
jl
in
clc
mov
call
negl
ficompl
pop
dec
cmp
loopne
mov
mov
nop
sbb
in
adc
les
sub
xchg
lock
mov
adc
xor
loop
pushf
inc
sarl
add
add
add
aaa
jge
cld
jp
mov
jbe
fldenv
sbb
pop
insl
aam
cmp
sar
iret
aas
mov
cmc
push
sbb
fisubs
les
les
dec
xor
nop
mov
es
sbb
imul
inc
adc
sti
lock
icebp
je
cli
mov
mov
fldenv
or
je
jno
incl
mov
inc
popa
test
xchg
shll
shrb
test
mov
and
out
mov
mov
arpl
movl
mov
dec
jg
das
inc
jg
add
xchg
adc
xor
add
mov
gs
mov
and
stos
dec
cli
inc
and
push
pop
rclb
test
sahf
mov
test
push
mov
into
gs
icebp
xchg
stc
sub
xchg
pop
sub
mov
aaa
std
sbb
mov
notl
and
sti
and
xchg
shr
mov
dec
or
pop
call
push
xor
and
or
cli
and
push
ss
mov
lahf
stos
jg
mov
movsl
mov
fxch
dec
jne
ret
push
mov
fsubrs
jmp
fdivl
adc
adc
inc
aaa
dec
xor
dec
push
jmp
test
incl
xor
jb
push
mov
into
jmp
stos
aas
inc
fwait
ret
rcrl
mov
out
mov
pop
jo
icebp
mov
mov
mov
test
sub
dec
fcom
clc
mov
sbb
adc
mov
push
clc
lret
cli
pop
inc
cld
fs
imul
int
imul
lock
mov
adc
push
ja
mov
or
imul
in
mov
jmp
push
mov
jno
jp
call
xor
or
adc
cmp
or
jg
loopne
inc
bound
bnd
mov
sbb
inc
shll
incb
xor
ret
repnz
sahf
xor
add
or
mov
xor
jbe
xor
xchg
add
pop
lock
jl
mov
add
mov
in
or
mov
mov
xor
cs
fbstp
jecxz
xor
pop
push
inc
icebp
cmp
ja
outsl
clc
mov
and
add
pop
mov
popf
test
cld
or
ds
popf
mov
fisubl
or
in
sbb
add
in
in
leave
test
cli
sbb
call
push
insb
stc
inc
pusha
shll
aaa
xor
dec
mov
movsl
mov
sbb
inc
add
fstl
sub
push
ret
mov
nop
jecxz
add
push
mov
popf
cwtl
shll
sbb
or
xor
pushl
sbb
or
jae
leave
out
and
movsb
shll
push
xchg
mov
push
aam
mov
outsb
and
jg
pop
aaa
sub
mov
into
xchg
ss
adc
mov
out
cmp
mov
fidivs
mov
fistpl
std
mov
mov
pop
jbe
dec
inc
sub
mov
jae
sub
cwtl
cmc
aaa
cld
ja
hlt
outsl
lcall
rcrl
dec
mov
or
mov
mov
mov
jmp
mov
sub
cmp
mov
aas
xor
push
popa
dec
add
push
imul
aaa
pop
jae
mov
mov
stos
fidivs
sar
xor
dec
sbb
dec
add
xchg
insl
test
push
push
jge
adc
dec
push
mov
mov
fisubs
push
mov
loop
jmp
jl
fcompl
cli
dec
pop
dec
inc
mov
xor
cwtl
out
sbb
cltd
mov
dec
rclb
pop
sti
cmc
enter
pop
mov
jle
sub
mov
pop
push
decl
das
push
popf
push
mov
les
or
and
push
dec
xchg
push
outsb
aam
mov
fldt
aas
push
stos
add
mov
out
lea
add
or
mov
icebp
cmp
dec
loope
mov
adc
add
dec
pop
stc
insb
xor
adc
inc
jg
pop
int3
fbld
sub
call
sbb
and
push
inc
dec
xlat
mov
and
push
cs
out
pop
xchg
adc
test
add
and
adc
pop
push
xor
loopne
shrl
mov
add
out
stc
popf
addr16
es
les
adc
sbb
or
inc
rclb
or
data16
negb
inc
mov
int3
jo
jmp
sbb
fwait
and
adc
out
mov
or
addr16
pop
test
push
inc
sub
cld
adc
adc
or
push
pop
pop
sub
sub
jb
jb
loope
jg
dec
stos
jae
fwait
add
xchg
sbbb
int
mov
mov
sarb
jb
pop
int
jl
ret
dec
nop
cmp
jno
dec
lods
jo
lock
js
test
add
xor
mov
scas
in
inc
out
jg
dec
cmp
lret
inc
dec
pop
and
jl
adc
in
fmull
dec
dec
js
sbb
pop
lock
xchg
loope
call
add
call
xchg
mov
push
or
push
mov
test
inc
xchg
jnp
mov
cmpsb
sahf
dec
mov
push
mov
lret
out
pop
movl
gs
dec
fcmovb
lret
les
xorb
addl
sbb
mov
push
cltd
lds
jbe
insb
mov
or
dec
cmp
outsl
js
add
mov
xor
and
pop
scas
ds
and
stos
dec
mov
xchg
std
sbbb
loopne
mov
int3
mov
adc
dec
je
inc
or
mov
and
jmp
mov
pusha
cmpb
cmp
add
aam
cld
cmpsb
aad
cs
jp
and
inc
push
xor
xchg
stc
push
sti
pop
mov
pop
cwtl
mov
jbe
add
test
cmp
ret
jg
pushf
imul
fstp
mov
mov
push
insl
clc
dec
xchg
or
sbb
push
pusha
lds
in
lods
pop
xor
repz
mov
stc
jb
lds
test
cld
push
fmulp
jmp
add
add
mov
pop
push
jno
ja
add
mov
inc
shrl
test
mov
push
inc
out
mov
pop
lret
xchg
ja
pop
and
push
xchg
sbb
cmc
push
dec
out
xchg
push
pop
adc
fsubl
add
xchg
mov
mov
or
scas
xchg
or
add
cmp
and
pcmpgtd
dec
sbb
jg
cmp
inc
push
enter
fsub
fsubrs
mov
pop
lea
and
jb
add
iret
dec
push
and
daa
cwtl
xchg
inc
mov
add
insb
icebp
add
leave
scas
sbb
in
sbb
pop
icebp
aaa
inc
mov
lods
xchg
pop
push
dec
insb
leave
fs
sub
ss
in
xchg
lcall
test
mov
cmpb
push
add
and
cmp
jne
scas
mov
lahf
cmp
add
add
stc
push
or
sub
xor
dec
mov
adcb
ss
ltr
popf
add
inc
int
ss
add
mov
mov
add
sub
out
sbb
xor
xchg
add
xorl
loop
jg
movsb
sbb
or
dec
mov
and
test
mov
hlt
loopne
mov
xchg
push
push
dec
cmp
inc
pusha
jp
les
pop
out
insl
xlat
jnp
pop
sbb
cld
outsb
test
cmpsl
das
pop
aam
rcrb
add
hlt
in
and
std
push
test
daa
cli
mov
mov
bsf
out
xchg
inc
push
out
js
shl
decl
and
jb
cli
and
inc
or
or
and
aad
shlb
data16
sub
add
jp
xchg
mov
inc
imul
stos
sahf
dec
pushf
jle
xlat
dec
loopne
mov
movsb
dec
jne
xchg
jb
mov
push
mov
daa
stc
stc
xchg
pop
sub
test
jb
out
test
mov
push
pop
or
adc
rcl
mov
pusha
mov
mov
pop
mov
int3
cld
fisttpl
mov
pop
mov
cmp
and
dec
add
push
ret
cmpsl
sub
andb
and
mov
mov
push
in
push
shlb
rol
jecxz
dec
fucomi
movsb
lcall
jmp
mov
jg
scas
rcr
mov
mov
fsts
shll
sbb
and
or
xor
push
mov
das
aam
rcr
adc
mov
cli
push
inc
shr
xchg
sub
sbb
push
ficomps
orb
inc
or
loopnew
sarb
repnz
cmp
jmp
cmp
lret
fisubl
jl
adc
arpl
fs
jecxz
xor
mov
iret
jl
rorb
orl
decb
hlt
iret
pop
jb
xchg
and
aam
repnz
ljmp
and
ret
pop
insb
jmp
lods
lahf
cli
cmpsl
das
jo
adc
push
xchg
popa
add
nop
mov
pop
loopne,pn
and
out
or
add
lock
ret
fs
mov
or
mov
dec
movsl
mov
lods
cmpsb
jne
lret
inc
movsb
or
mov
mov
stos
mov
add
jmp
cs
inc
loop
mov
fs
std
sti
push
lock
cmp
or
movsl
push
and
jecxz
fsubr
push
hlt
cmp
mov
pop
cmp
mov
outsb
and
pop
sub
or
rcl
addr16
mov
inc
rolb
scas
adc
mov
pop
pmuludq
mov
movsb
les
pusha
into
xor
xor
call
dec
shrb
lea
rorl
les
add
ja
sub
mov
inc
clc
das
outsb
dec
outsl
mov
lret
adc
sub
mov
push
pusha
lods
sbb
sbb
sbb
in
add
clc
jmp
mov
mov
jle
jo
pop
add
sub
push
jle
cmp
subb
or
jae
ljmp
out
sub
icebp
sub
or
sub
xor
call
into
cmp
and
ds
ret
sbb
push
mov
or
sbb
sub
mov
push
add
jb
sub
push
dec
insl
outsb
inc
aaa
push
cmp
sub
mov
iret
and
dec
push
ret
ss
ds
fsubrs
pusha
ret
scas
mov
or
push
lret
out
xchg
jle
sahf
fadd
add
xchg
mov
mov
lock
sub
inc
cmp
loopne
push
nop
jmp
mov
push
inc
js
pop
cmp
sbb
cld
jp
decl
inc
pusha
pop
movsl
lcall
inc
mov
adc
std
adc
and
negl
ret
mov
ds
ja
std
rcll
and
adc
ljmp
jo
lahf
les
ret
je
movb
jge
jmp
gs
mov
mov
leave
xchg
dec
mov
clc
fwait
cmc
push
cmp
xor
lcall
jg
and
adc
add
int3
add
scas
sub
pop
pop
adc
mov
imul
bound
call
fwait
mov
jle
pop
loopne
sub
mov
test
lods
js
aad
test
jge
lret
pop
xchg
lock
cmp
js
insl
sarb
pop
imulb
int3
cwtl
mov
inc
rcll
fisubl
push
jle
cs
test
and
inc
cmp
mov
cmc
pop
inc
scas
mov
jne
sarb
xchg
je
outsl
cli
pusha
inc
or
mov
ret
push
idiv
jnp
jmp
and
jecxz
mov
je
adc
push
test
and
mov
mov
or
cwtl
fldenv
jo
das
mov
or
push
sbb
mov
jecxz
incl
inc
pop
jle
xor
jbe
or
adc
decl
and
jle
aas
cmp
fildll
inc
fidivrs
mov
xor
lods
ljmp
jmp
lock
xchg
dec
fs
clc
rcrl
add
xor
xchg
adc
sub
movsb
out
mov
dec
lods
mov
stos
inc
push
add
dec
cmc
aad
cli
inc
daa
outsb
test
lret
xor
add
cld
movsb
mov
mov
inc
xchg
dec
pop
adc
jmp
mov
aaa
jge
lods
mov
xchg
pushf
stc
push
fwait
xchg
inc
jo
fistps
fsubrl
or
popf
aam
mov
jne
and
aaa
mov
jmp
xor
add
xchg
cmpsb
fcomps
aam
mov
mov
les
lcall
xchg
ret
add
cli
pop
add
xor
mov
cwtl
dec
shrb
add
dec
call
outsl
dec
xor
xor
jno
inc
fdivr
pop
imul
xor
push
std
add
or
xchg
add
loope
or
jg
fistpll
push
mov
roll
fisubrs
pusha
fdivrl
adc
sahf
xchg
add
das
mov
and
jno
inc
int3
sbb
mov
or
xchg
bnd
adc
pop
jae
clc
dec
jl
lods
push
lcall
mov
clc
std
push
push
int
add
adc
mov
mov
inc
xlat
adcb
call
adc
push
aaa
push
adc
call
or
push
and
jecxz
leave
mov
and
cli
outsl
and
jb
stos
imul
pop
test
jns
inc
test
out
jo
or
leave
inc
sbb
mov
jbe
clc
mov
repnz
push
sbb
repnz
add
xchg
add
pop
and
mov
push
test
cli
loop
add
loop
xchg
stc
incb
or
filds
sub
lods
cmpsb
mov
mov
loopne
xchg
inc
xorb
ljmp
pop
inc
mov
pop
xchg
jnp
or
sahf
push
jl
loopne
add
push
test
js
add
mov
loop
icebp
or
and
mov
mov
hlt
jno
lock
or
loope
daa
xor
or
je
aad
addr16
jae
xchg
jo
sahf
dec
enter
mov
ja
push
ds
out
sub
dec
gs
ret
mov
cwtl
daa
mov
pop
mov
jg
mov
jbe
pop
sbb
xchg
sbb
push
enter
insb
jp
fcmovbe
push
andl
mov
in
pop
add
add
dec
pop
xchg
sub
xor
cltd
or
divps
pushf
out
ja,pt
clc
pushl
xor
sar
cld
xchg
rorl
mov
std
fimull
stos
push
add
xor
movsb
scas
mov
adc
adc
sbb
ret
mov
decl
xor
mov
insb
sbbl
jnp
fldt
std
dec
xor
dec
nop
add
aad
divb
stos
adc
pop
cmp
repnz
inc
jle
mov
cld
sbb
enter
and
jg
adc
push
insb
dec
dec
adc
or
sbb
dec
js
stos
std
sbb
adc
rorb
adc
jbe
aaa
inc
add
lods
add
std
mov
inc
ss
sahf
ljmp
pop
dec
mov
inc
out
xor
insl
stos
xor
and
dec
fstl
pushf
repnz
scas
push
lret
pop
cmovno
mov
test
rcr
xchg
clc
scas
mov
jbe
push
add
popf
lret
xor
rcr
mov
push
shll
mov
cmp
sti
sub
outsl
dec
fs
daa
adc
cmp
pushf
pop
loopne
rcrb
mov
movsb
mov
push
je
rolb
lcall
outsb
pop
icebp
inc
jp
mov
fs
jne
lods
sub
add
push
xchg
loope
cmp
jo
call
imul
sub
and
sub
roll
int
jg
mov
add
mov
add
jle
out
ljmp
sub
push
imul
pushl
faddp
scas
dec
push
xchg
rol
aad
push
push
sbb
adc
ljmp
pushf
xchg
xchg
out
cmc
outsl
fiaddl
in
inc
in
mov
jmp
add
pop
mov
jno
adc
mov
outsb
xor
aas
mov
adc
sbb
ja
xor
push
sahf
dec
xchg
jle
cmp
and
icebp
lock
mov
hlt
jb
adc
cli
lods
lods
sub
in
add
fsubrs
pop
add
shll
insl
fmuls
add
jo
add
cmp
adc
nop
loop
adc
dec
or
dec
loope
or
adc
add
mov
jmp
cmp
push
mov
inc
pop
loope
jae
xor
jg
fcom
inc
ljmp
int
push
popf
loopne
inc
out
fiadds
add
mov
jmp
ss
scas
mov
pushf
xchg
dec
xor
jmp
scas
sahf
sbb
mov
jno
xchg
ret
and
sub
cmpsl
aad
pusha
push
push
sub
imul
fimuls
std
mov
loopne
scas
cmpsb
popf
sbb
jne
or
iret
jmp
push
test
adc
or
cwtl
cmp
pop
pop
and
pop
test
lahf
jbe
mov
ret
sub
ja
mov
ljmp
stc
jo,pn
mov
negb
cli
pop
lock
sbb
xor
mov
cmp
cld
das
rcrb
ret
and
lahf
and
push
push
cmp
test
or
test
cli
sbb
adc
sub
adc
loopne
aas
cli
sbb
cld
push
dec
scas
push
cli
ret
mov
push
mov
push
out
in
fisubrl
push
daa
jo
xor
adc
insl
ljmp
adc
call
data16
fiadds
outsb
cli
push
movb
in
mov
or
es
jb
adc
enter
clc
out
gs
add
and
rcr
sbbb
test
mov
loop
mov
sbb
incl
lret
sub
outsb
xchg
in
hlt
cli
mov
in
jg
stos
mov
or
dec
rorb
inc
xchg
lea
xor
xchg
jecxz
xor
fs
xor
mov
mov
jge
nop
adc
insb
mov
mov
sub
hlt
sbb
mov
inc
lock
sbb
bound
mov
rcrb
xchg
int3
stc
ja
movsb
push
add
push
adc
and
clc
mov
dec
or
fld
clc
adc
leave
xor
addr16
jg
jecxz
sub
test
sub
sahf
push
repnz
add
inc
mov
push
sub
int3
sub
push
pop
loope
inc
sub
inc
jmp
out
loop
jo
cwtl
js
ja
or
bound
movsb
add
mov
lock
addr16
inc
inc
scas
push
js
pop
movsb
or
inc
pop
adc
add
push
rcl
orb
das
cmp
lcall
shr
stc
mov
sub
add
bound
push
push
clc
or
fisubl
lods
dec
fimull
incl
fiaddl
xchg
ss
push
pop
aad
test
call
adc
decb
inc
push
loop
push
inc
pop
adc
call
stc
loopne
mov
aam
xchg
jmp
mov
fmul
addr16
and
mov
mov
cmc
adc
mov
sbb
dec
or
sti
decl
and
cmp
lcall
adc
mov
push
inc
or
or
call
pusha
jo
and
andb
push
imul
sub
xor
icebp
aam
fchs
inc
lcall
cmpsl
mov
add
adc
or
xchg
add
je
push
cmc
sub
iret
xchg
outsl
or
mov
in
aaa
cltd
test
loopne
add
push
ficoms
mov
xchg
stc
and
dec
push
fldl
lea
lahf
push
xchg
and
cmp
dec
push
in
popa
cld
mov
add
icebp
stos
sbb
dec
push
jo
rorb
xor
push
cli
jnp
push
mov
jno
inc
aaa
add
fdivrp
mov
sarl
idivl
stc
es
add
popa
lret
adc
pusha
mov
jmp
push
lock
pushf
adcl
xchg
xchg
dec
xchg
or
dec
xchg
mov
in
andl
sti
xchg
xchg
push
xchg
das
mov
iret
dec
popa
ret
jle
sbb
jmp
xchg
add
push
inc
push
adc
add
inc
call
jo
fs
lods
xor
rorl
xchg
cltd
fmull
lds
call
icebp
cmp
pop
ja
rorl
jnp
inc
jb
pop
arpl
xchg
or
lret
dec
jno
mov
lds
dec
pop
mov
adc
pushf
adc
inc
mov
ljmp
or
mov
int
sarl
incl
repz
xor
pop
cmp
or
push
mov
in
negb
cli
mov
ljmp
sub
rcr
dec
cli
xor
ficoml
fwait
inc
sbb
test
loop
dec
mov
adcb
sbb
outsl
push
and
mov
xchg
ljmp
ja
mov
jb
adc
fdiv
pop
mov
push
add
clc
pop
push
or
or
mov
push
loop
out
into
lret
jne
fsubl
addl
cmp
and
test
pop
pusha
push
inc
mov
adcl
das
add
jg
mov
add
icebp
hlt
lret
push
xor
pop
mov
push
aam
inc
movsb
push
jp
sbb
sub
push
or
sbb
roll
xlat
decl
or
out
stos
sub
pcmpgtb
push
hlt
or
aaa
jns
push
fs
rorl
insl
ljmp
int3
pop
cmpsb
out
insb
jbe
fcomps
xor
outsb
or
scas
rolb
outsl
cli
les
popa
pop
cmc
ret
test
clc
pushl
push
xorl
mov
lea
jl
mov
cmp
pop
test
dec
dec
inc
xchg
mov
or
add
ljmp
das
js
leave
fadd
pop
push
push
add
decb
rol
adc
pusha
pop
loope
sbb
mov
ss
fildll
cld
data16
fstl
test
loope
jae
dec
decl
ljmp
mov
out
push
mov
das
xchg
add
test
mov
cmc
subl
cmp
add
push
pop
mov
ja
cmp
loopne
pop
incl
xchg
mov
data16
add
ret
addl
nop
js
add
daa
loope
andl
jg
fcoml
or
mov
mov
and
mov
cmc
pushf
orb
cmp
mov
mov
test
adc
loopne
das
mov
push
shl
or
push
mov
pop
cli
lods
add
mov
or
ret
sbb
sub
lods
fidivs
add
mov
or
push
insb
and
add
sbb
and
or
mov
xchg
xor
xorb
fmul
push
movsl
pusha
scas
cli
aas
ret
test
cmpsl
add
aad
add
mov
popf
mov
scas
pop
andb
dec
aaa
and
repnz
icebp
cltd
dec
jmp
sub
clc
lcall
dec
je
mov
repnz
xchg
lret
sbb
mov
add
jbe
test
xor
add
add
insb
jbe
subl
ret
clc
repz
xorl
add
adc
sub
mov
or
jg
mov
gs
mov
inc
jmp
lock
add
int3
cld
push
xor
mov
adc
mov
into
arpl
stos
mov
adc
loop
icebp
inc
push
pop
mov
ljmp
cwtl
rcr
ficoms
inc
icebp
es
pusha
jae
adc
sub
mov
test
adc
sub
or
push
adc
test
sbb
into
jle
pop
fcomps
scas
xor
cld
cs
push
or
das
ret
fldenv
xchg
cmp
aad
inc
inc
mov
loop
xchg
pop
faddp
filds
mov
and
mov
mov
adc
xlat
pop
adc
cli
xor
mov
rclb
jns
test
mov
adc
ret
pop
mov
int3
or
sbb
adc
cmp
pop
shlb
lock
cmp
hlt
in
lock
push
mov
test
addl
xchg
pop
xchg
int3
jge
cli
sbb
cmpb
mov
test
or
xor
lahf
xchg
rcr
push
aam
mov
push
cmp
cmp
data16
ja
out
cmp
addr16
scas
cmp
stc
pusha
rcll
lret
jl
adc
das
clc
jo
sarb
fadds
cld
adc
cs
scas
pop
sub
cmp
ja
inc
xchg
push
ss
enter
push
push
test
div
js
inc
loop
push
daa
popa
sbb
ror
out
dec
xrelease
xchg
cmp
mov
jo
pop
mov
stc
push
lock
push
sub
enter
loopne
shrb
push
jb
pop
add
xchg
mov
icebp
call
sub
sub
or
notb
lcall
and
or
mov
sarb
testb
cmp
dec
lcall
cmp
movb
stos
repz
and
add
andb
and
popf
add
dec
jecxz
mov
pushf
cltd
cmp
xchg
mov
decb
es
and
int
sub
inc
repz
cmp
adc
call
sbb
xor
adc
orb
pop
outsb
movsb
hlt
pop
jmp
jne
icebp
or
mov
mov
out
push
or
push
movsb
clc
icebp
push
rorb
and
xchg
mov
mov
jbe
shlb
mov
cld
ja
push
adc
adc
cmp
pop
push
mov
mov
mov
shlb
loopne
hlt
mov
cmp
jge
jb
xor
ljmp
xchg
mov
mov
jno
inc
mov
adc
add
incb
inc
inc
and
dec
repnz
xor
dec
or
mov
mov
test
fidivl
mov
ja
push
nop
popa
aas
mov
push
sbb
or
pop
sub
jl
and
dec
cmp
nopl
fnstenv
test
pop
jle
test
lcall
mov
mov
testl
mov
test
nop
cmp
cmpsb
inc
fsubl
inc
stos
test
lods
movsb
adc
mov
inc
and
outsl
push
or
inc
and
cld
cmp
mov
rolb
imul
roll
xchg
je
pop
call
stos
jg
lods
idivl
push
sub
add
pop
xor
add
mov
add
scas
xchg
jae
decl
into
inc
mov
mov
fyl2x
and
ja
push
jl
arpl
xor
adc
stos
push
adc
loopne
fs
mov
mov
push
and
xchg
adcb
cmp
sub
ret
imul
mov
pushf
adc
cmpb
add
lret
bound
or
push
cmp
or
pop
jo
dec
pusha
cld
pop
xchg
roll
ljmp
xchg
sub
shrb
nop
inc
mov
and
pop
adc
aas
mov
inc
sbb
jmp
and
mov
push
push
fmull
mov
adc
loope
adc
push
insl
addl
aaa
sti
in
inc
mov
and
rcll
dec
ljmp
test
sub
push
pushf
mov
arpl
loopne
fcmovnb
mov
call
mov
and
mov
outsl
cli
add
adc
repz
jb
rcr
sbb
xor
dec
into
faddl
ss
cli
scas
xor
push
pop
cmpsl
xchg
add
cli
pop
add
fiadds
cwtl
cmpb
scas
add
xor
insb
push
mov
pop
jne
xchg
test
mov
scas
mov
jns
or
cwtl
push
ret
fisttpl
lock
mov
mov
outsl
jge
adc
les
cmp
movsb
xchg
mov
mov
imul
lock
clc
test
clc
pop
repz
cli
div
pop
add
or
add
ficompl
subb
mov
and
cmp
cmp
xor
mov
clc
lret
pusha
popa
mov
mov
fisubs
dec
adc
push
mov
dec
add
jecxz
xor
or
decl
repnz
mov
imul
mov
pop
outsb
pop
js
cs
inc
and
fisttpll
inc
fdivrs
inc
xor
mov
hlt
add
xchg
cmp
cli
cld
pop
sbb
outsl
mov
iret
mov
inc
nop
repnz
adc
mov
xchg
in
sbb
cmc
xor
xor
cmp
push
pop
pop
sbb
and
cmp
icebp
xchg
mov
sbb
aas
sub
push
xchg
mov
dec
stos
leave
jl
cmpb
cli
cmp
stos
popa
inc
pop
mov
movsb
aad
icebp
je
sbb
or
pop
popf
popa
pop
nop
cmp
cli
jb
cli
pop
jge
test
and
inc
or
dec
dec
lea
xchg
push
mov
addr16
pop
cld
adc
mov
outsl
mov
fistpl
push
popa
add
aam
jb
jge
scas
subb
mov
jnp
jg
dec
sbb
xchg
adc
imul
adc
adc
add
inc
cmp
jno
xchg
mov
js
push
and
fiadds
jp
jne
pop
adc
fildll
or
jmp
push
add
cld
jg
scas
mov
adc
push
mov
mov
scas
inc
sub
inc
test
mov
push
push
mov
fdivrl
push
imul
movsb
xchg
dec
adc
mov
sub
stos
in
mov
cmpsb
scas
adc
sti
iret
dec
push
fwait
mov
xchg
ror
icebp
pop
pop
or
fiadds
or
data16
call
add
addr16
xchg
std
xchg
out
ljmp
loope
je
push
mov
adc
mov
inc
adc
pop
ljmp
mov
xchg
sub
inc
dec
sbb
xorb
roll
jmp
push
xchg
es
mov
sub
ret
xchg
adc
or
jge
push
aaa
jg
mov
test
test
and
shlb
stc
inc
es
ljmp
ljmp
icebp
out
inc
js
sbb
xor
inc
ret
sbb
push
enter
sub
mov
xor
adc
or
or
ret
mov
aaa
jle
or
inc
push
ljmp
loope
xchg
xchg
cmpb
movb
mov
in
xor
test
inc
adc
je
andl
mov
ret
idiv
movaps
adc
push
dec
outsl
push
cmpxchg
cmp
and
add
aaa
sbb
lods
and
mov
sub
call
push
insl
sub
lock
inc
pop
scas
xchg
xchg
ret
push
push
and
aam
outsl
jg
xchg
add
clc
icebp
sub
imul
es
inc
inc
sbb
or
jae
or
xchg
mov
out
dec
mov
and
inc
sti
lret
adc
rcrb
add
jbe
add
fs
dec
roll
lret
cmp
mov
mov
lahf
ja
jecxz
pop
movsb
push
fsubr
and
xchg
adc
push
incb
and
dec
repz
mov
test
lahf
adcl
lds
sub
and
cmp
push
or
out
cmp
adc
inc
pop
mov
fmull
test
sti
push
xor
sub
enter
pop
insb
mov
mov
mov
mov
jp
add
inc
mov
iret
inc
popf
xor
and
dec
or
cmp
fstps
add
sub
sub
inc
inc
popl
xchg
fwait
neg
mov
xorb
std
inc
push
and
loope
sbb
push
ret
xor
sub
ja
ret
call
ffree
lods
mov
jne
mov
lock
sub
outsb
jnp
add
repnz
cmp
mov
jae
inc
fdivr
push
leave
pop
adc
inc
loop
lahf
shlb
dec
into
mov
xchg
outsl
dec
cmp
or
sub
mov
popf
repz
sbb
sbb
in
rorw
icebp
popa
or
push
loopne
or
call
pop
push
push
mov
or
outsl
cs
jle
and
cs
add
das
mov
sub
fistps
clc
pop
nop
bound
js
add
in
leave
ds
fisubrs
adc
push
jo
mov
rol
pop
push
inc
xchg
cmp
cld
pop
or
leave
mov
inc
jg
test
das
shlb
ss
mov
pop
mov
jo
sti
add
shll
xlat
mov
mov
fwait
mov
xor
insl
in
in
je
jmp
pop
aaa
add
and
loop
shlb
js
scas
mov
je
icebp
inc
xchg
jno
xchg
push
rolb
data16
repnz
clc
or
mov
out
xor
cs
dec
ljmp
inc
cmp
sub
inc
push
inc
cltd
test
pop
and
popf
push
jns
dec
push
mov
int3
bound
jecxz
inc
pop
xchg
in
or
jno
iret
or
add
lods
xchg
clc
jb
sbb
sbb
jecxz
mov
and
cld
add
mov
shlb
or
adc
fs
xor
repz
aam
sbb
loope
sub
push
or
les
stos
arpl
std
lods
push
xchg
sub
mov
data16
sti
sub
dec
mov
xor
dec
dec
outsl
sub
mov
ss
dec
cmp
mov
pop
inc
mov
xchg
test
jns
adc
lods
push
cld
ja
add
mov
jb
sub
mov
faddp
mov
adc
lock
in
add
call
or
aas
mov
push
mov
and
ljmp
and
xlat
xorb
jp,pn
mov
dec
stos
dec
jg
pop
jge
movsb
jo
inc
hlt
sbb
mov
mov
imul
cltd
cs
fucomi
pushl
or
dec
pop
sbb
shlb
in
wbinvd
rolb
pop
int3
xchg
ljmp
xor
pop
sub
adc
hlt
rolb
call
mov
and
call
in
sbb
int3
stc
mov
rcrb
inc
loope
scas
sbb
jbe
push
insb
adc
adcb
lret
movb
xchg
jo
dec
add
jge
adc
fisubl
test
mov
inc
xchg
pop
pop
adc
int3
adc
fnsave
or
fildll
push
negb
add
enter
scas
call
sti
xchg
call
mov
pushl
xor
and
mov
loop
js
mov
pop
hlt
push
add
shr
pop
stos
scas
add
jo
add
shl
lds
popf
and
je
mov
pop
inc
adc
sbb
dec
mov
pop
faddp
pop
cmp
cmp
orb
loope
and
dec
testb
or
das
cli
sbbl
or
shlb
pop
jmp
cmp
fwait
mov
pop
out
mov
dec
sbb
mov
or
call
jbe
and
aad
jbe
movswl
pusha
adc
add
in
aaa
pusha
iret
cs
jl
popa
mov
je
sar
shl
and
int
adc
jo
or
push
adc
add
inc
ss
cmp
outsl
jp
or
cmp
pop
pop
loopne
sbb
mov
xchg
scas
std
push
or
std
inc
xchg
mov
fistpll
imul
cld
pop
sub
adc
rcll
dec
jb
data16
mov
sub
loopne
inc
push
jl
adc
pop
insb
call
ds
jg
sbb
push
notb
loop
jno
movsb
push
xor
lock
incl
out
mov
cmc
int3
xor
xchg
add
mov
arpl
and
adc
sub
dec
mov
sbb
pop
and
adc
cli
loop
pop
lea
pushf
out
xor
inc
mov
test
add
rorb
dec
cmp
lcall
popa
pusha
mov
or
arpl
mov
inc
punpckhbw
insl
sbb
inc
xchg
js
les
aad
popa
mov
mov
js
imul
pop
add
fcmove
xor
pusha
pavgb
sub
outsl
mov
push
mov
adc
enter
loopne
sbb
mov
scas
test
js
imul
loope
loop
pop
jmp
pushf
mov
cmp
add
push
fisubrl
ret
xchg
sub
pop
gs
push
pop
movsb
push
adc
add
or
mov
dec
mov
sub
mov
test
jo
jnp
sbb
xchg
xlat
inc
cmp
ss
fistps
lock
add
js
cmc
pop
loope
sbb
daa
les
push
scas
insb
call
mov
test
xchg
data16
xor
cs
sbb
mov
icebp
out
jo
hlt
outsl
inc
aad
aad
sub
loopne
mov
push
test
movsb
pusha
out
outsb
add
test
xchg
into
idivl
and
adc
adc
subb
data16
dec
jg
adc
call
push
punpckhwd
dec
into
dec
out
pusha
aaa
mov
enter
pop
mov
aam
scas
or
movsl
out
jo
cld
daa
push
aaa
cmpsb
sbb
pop
push
je
mov
push
clc
xor
repz
outsl
add
ljmp
imul
in
jmp
xor
cmp
mov
adc
nop
xchg
rorb
rclb
andb
test
xor
mov
shlb
fsubrs
nop
outsb
push
mov
rolb
je
xor
adc
xchg
out
push
jle
js
insb
mov
sub
pop
inc
sub
ds
xor
movsb
or
jg
popf
jle
jae
add
popf
inc
sar
push
push
insb
bound
mov
outsb
xor
pusha
shll
push
add
out
dec
mov
sbb
jmp
add
sub
clc
sti
mov
mov
or
outsb
shll
jle
mov
and
aad
xor
adc
or
aas
cmpsl
push
pushf
add
stos
mov
imul
cmp
inc
push
mov
and
mov
sub
fildll
jbe
repz
mov
fwait
pop
mov
adc
es
push
add
shll
ja
roll
mov
insb
aam
iret
jp
add
nop
into
decl
xor
sub
cmc
test
ret
add
inc
aad
fmull
cmpb
cmc
sbb
mov
insl
mov
cmp
repnz
lahf
mov
mov
out
leave
pop
jl
mov
shll
test
mov
mov
lea
and
mov
lock
inc
lret
jae
push
ds
or
mov
or
pop
mov
jno
fdiv
and
test
mov
xchg
xchg
xchg
adc
dec
add
jb
sub
jle
xlat
pop
add
xor
sub
aas
std
pop
dec
mov
out
xchg
cmp
test
out
inc
insb
mov
push
cmpsb
push
cmp
fdivl
std
xlat
push
clc
out
out
sub
test
add
cmp
mov
dec
pop
and
icebp
jbe
xchg
cs
push
adcl
xchg
xchg
add
lods
xchg
mov
adcl
push
pop
addb
jo
imul
cmp
dec
and
lcall
and
outsb
nop
loopne
scas
xlat
out
push
adc
cmc
insl
cmp
movsl
pop
or
mov
cli
out
test
adc
fsubrp
add
mov
pop
loopne
incb
insl
hlt
sahf
js
or
cmp
test
pop
leave
push
insl
jp
fisubrl
jle
pop
pop
jno
fsubs
or
cmp
fnstsw
ds
mov
xor
arpl
sbb
push
scas
clc
jo
add
xor
push
test
cmpsb
push
ret
in
sub
pop
mov
add
jg
xchg
or
adc
call
xchg
cmp
jno
mov
icebp
push
xchg
pop
icebp
fwait
fwait
pop
sub
and
ljmp
xchg
xchg
mov
adc
ja
xor
test
nop
or
repnz
mov
stc
sub
push
pop
push
orb
hlt
andb
mov
sarb
ret
dec
inc
add
cmp
ficoms
mov
and
or
dec
add
sbb
cmpsl
and
pop
scas
sar
lock
pusha
mov
es
lds
aad
clc
in
outsl
adc
or
pop
jne
insb
cmp
xchg
incb
lods
mov
es
xchg
ss
arpl
sarb
fistpll
mov
dec
lcall
sub
and
or
out
ja
outsl
xor
lret
xchg
ficoml
pop
lock
sub
rorb
popa
jl
and
inc
cld
pushf
fidivrs
ds
mov
jo
cld
ljmp
push
addr16
mov
into
adc
push
and
add
jl
insb
or
jl
adc
pop
std
xor
and
lods
dec
adc
decl
lock
jl
lods
dec
push
int
adc
push
jl
aad
leave
push
push
icebp
and
xor
push
mov
mov
push
adc
out
inc
mov
sub
and
and
or
pushf
in
jp
loopne
or
sbb
arpl
jmp
into
inc
pop
fisubrs
ficoms
jg
add
or
xchg
add
rcll
mov
incb
into
sub
popf
nop
sar
mov
push
std
cs
mov
iret
sub
or
adcb
xchg
cwtl
push
cld
mov
in
mov
shrl
dec
cld
jbe
inc
clc
and
sub
lcall
clc
mov
xchg
jg
int
inc
xchg
jnp
mov
dec
aam
jl
mov
clc
imul
fwait
jne
jl
je
mov
dec
lahf
pusha
ds
adc
rclb
shlb
mov
out
or
mov
xchg
lds
je
sub
add
xor
adc
lcall
jb
pushl
add
push
lods
mov
jl
cmp
push
rcrb
ret
call
adc
rolb
in
test
add
cmp
sti
and
xor
data16
pop
es
call
cmp
inc
lods
cltd
mov
fimuls
push
je
and
filds
adc
mov
push
add
or
push
adc
aam
out
fiaddl
mov
lds
jno
pop
push
cmp
add
clc
sar
inc
fidivs
data16
das
sub
xor
pop
fisttpl
adc
popa
jmp
mov
mov
lods
sub
xchg
int3
mov
add
inc
add
aaa
xor
outsb
mov
cli
es
rol
dec
jmp
out
jne
cmp
testb
mov
scas
test
sbb
movsb
cmp
aam
mov
fdivrl
adc
dec
sub
daa
sbb
dec
scas
fdivrs
jmp
loope
push
push
xchg
dec
sub
mov
mov
mov
ret
or
mov
sub
loopw
xchg
subb
push
inc
and
cmpsb
adc
jle
in
testb
sub
and
inc
jl
outsl
pop
dec
out
arpl
inc
nop
dec
add
out
push
mov
js
mul
lret
mov
test
sbb
int3
loop
outsb
lock
mov
jmp
pop
testb
popa
es
and
mov
rcl
mov
ret
push
into
pop
xchg
push
xor
out
pop
mov
leave
decl
pop
jo
notl
inc
test
cmp
push
adc
lds
pop
or
in
adc
popa
xor
mov
cmp
in
adc
sub
adc
shlb
mov
push
fs
xchg
test
jne
adc
sbb
popf
stos
in
pop
movsb
add
call
mov
push
xorb
sbb
clc
add
sbb
les
push
lds
lock
sbb
xchg
dec
mov
ljmp
mov
ss
xor
das
lods
nop
mov
add
and
and
incl
or
push
mov
ss
sti
loop
dec
loope
in
das
int3
std
jns
rorl
sarb
xchg
mov
push
scas
idivb
cmp
cmp
sti
push
jp
movsl
and
pop
add
push
or
adc
pusha
cld
dec
adc
xchg
enter
add
je
testb
fimuls
filds
movb
push
inc
outsl
adc
arpl
mov
lods
nop
mov
into
push
stos
addr16
jl
fs
mov
dec
lds
xor
and
and
mov
dec
mov
cmp
xchg
fs
mov
mov
aaa
inc
pop
stos
inc
cmpsb
pcmpeqd
push
adc
fdivrl
ss
jo
or
imul
les
mov
clc
incl
push
xor
xchg
hlt
loopne
and
ficoml
sahf
out
mov
xchg
adc
and
test
loop
in
dec
dec
loopne
xchg
dec
cmpl
ret
push
ss
popf
enter
std
adc
sbb
ja
gs
jae
call
adc
mov
mov
pop
xchg
roll
jmp
fprem1
aaa
cmp
or
dec
and
xchg
xchg
nop
test
std
pushl
aas
inc
insb
js
inc
sub
cmp
lock
mov
pop
aam
incl
inc
dec
test
enter
pop
xor
outsl
lock
in
and
aad
push
cmp
mov
ljmp
sub
pop
cmp
roll
sub
jo
jl
and
scas
or
rclb
cmp
sub
arpl
dec
ja
ljmp
push
push
jbe
and
das
push
rorb
push
jle
pop
test
mov
mov
adc
in
cmc
data16
push
sarl
sbb
call
es
pop
xchg
add
mov
mov
cmp
sahf
outsb
movl
into
inc
or
xchg
and
push
ret
add
and
jp
lds
or
shlb
or
push
icebp
test
mov
sub
mov
fwait
xchg
push
lea
push
mov
orb
and
mov
xor
pop
mov
lcall
mov
mov
inc
mov
xchg
cmp
jbe
cmc
call
pop
cmp
bound
cmp
enter
mov
shlb
aas
out
pop
jle
inc
shll
mov
dec
sub
incl
js
lret
test
mov
in
ss
mov
adc
xor
sbb
xor
in
adc
insl
ds
xor
sub
add
clc
pop
xchg
mov
cs
xor
jae
rolw
iret
xchg
adc
jo
hlt
gs
xchg
loop
std
pusha
lods
pop
cmp
pop
fwait
jg
cmp
es
mulb
insb
push
xchg
int3
add
inc
mov
mov
cmc
lret
push
adc
push
xor
sub
sbb
mov
pop
push
sbb
push
dec
lahf
cmp
push
lret
cmpsb
mov
lds
pop
dec
inc
mov
pusha
mov
stos
repnz
pop
in
decl
or
repz
xlat
cmp
ds
out
xchg
js
pop
sahf
or
mov
jmp
and
inc
xor
xchg
test
lret
inc
sub
les
jo
into
or
aad
or
rorl
test
cmp
outsl
decl
lcall
lahf
jns
inc
cmova
mov
decl
xlat
pop
push
fdivrl
addr16
mov
jl
cwtl
pop
sbb
mov
fxtract
in
test
nop
bound
add
into
mov
sub
push
icebp
repz
cli
incl
pop
and
mov
test
sbbl
or
les
push
iret
inc
xor
mov
xchg
adc
jle
xchg
pop
mov
data16
dec
sbbb
or
dec
adc
call
xor
sbb
test
lock
clc
xlat
clc
xchg
jb
dec
cmpsb
pop
mov
sbb
clc
in
test
inc
xchg
mov
lret
inc
repnz
or
lods
pop
xchg
adc
orb
jae
pop
in
mov
add
rcl
stos
outsb
subb
dec
loope
divb
inc
jmp
fdivrs
mull
out
nop
scas
xor
aas
adc
jb
push
loopne
das
sti
fistps
push
mov
jbe
subl
popl
add
es
xchg
test
inc
cmpsl
push
add
cs
or
addr16
clc
push
fisubrs
add
sub
flds
mov
xor
inc
push
fldenv
and
outsl
stos
movsl
xor
sub
scas
stos
movsl
push
bound
decl
out
mov
test
stos
dec
into
cmp
pop
inc
bound
pop
sar
push
test
dec
clc
subb
xor
adc
inc
movsb
mov
jbe
mov
movsb
and
pop
cmp
push
orb
fildll
pop
in
cmp
decb
or
out
mov
cmpsb
add
stos
out
test
fimull
xlat
sub
xchg
adc
pop
cmc
mov
xchg
xchg
aaa
test
cs
test
lcall
jbe
push
outsb
fisubrs
enter
add
adcl
sbb
repnz
std
ljmp
or
imul
insb
jae
int
sub
hlt
insb
add
ljmp
xchg
xor
shlb
jmp
mov
lcall
nop
ljmp
push
pop
into
xchg
xchg
push
and
push
or
adc
cld
sub
dec
mov
call
pop
cld
fwait
std
stc
and
loop
mov
aam
cmp
fidivrs
push
out
test
push
rclb
jp
lds
xchg
ss
aam
stos
mov
rolb
js
or
pop
or
icebp
insb
inc
xchg
jmp
jmp
cwtl
arpl
in
jecxz
jp
cli
adc
push
scas
ret
das
jne
mov
out
jl
mov
data16
add
or
incl
clc
mov
sbb
and
nop
cmpsb
xor
mov
inc
ret
jo
stos
mov
xchg
sub
sub
dec
mov
mov
xchg
movsb
push
jb
push
mov
add
lret
push
mov
add
dec
or
es
mov
dec
aam
call
pop
loopne
and
push
adc
cmp
pop
xchg
jge
jmp
inc
adc
test
mov
xchg
outsb
sbb
cwtl
loop
loop
pop
inc
xor
and
aas
sbb
fists
filds
mov
or
adc
nop
icebp
in
xchg
and
filds
push
aad
das
lcall
jge
loope
mov
push
pop
jl
and
cltd
in
mov
mov
sti
movsl
cmp
outsb
test
aaa
je
pop
mov
call
repnz
cltd
into
mov
sub
mov
cmc
pop
loope
test
mov
fmuls
push
mov
inc
mov
js
idivb
pop
xor
add
cmp
pop
add
mov
loope
add
ret
icebp
fs
pop
ljmp
mov
loopne
sahf
pop
fbstp
jmp
jnp
in
cmpsb
inc
nop
ss
mov
mov
sbb
dec
stos
lret
push
int3
incl
jecxz
inc
xor
xchg
bound
and
cmovb
add
xchg
mov
sbb
addb
into
mov
add
inc
xchg
aaa
stos
cltd
and
pop
cltd
and
inc
jo
push
mov
cmp
or
push
sbb
test
ja
mov
inc
adc
push
lock
out
scas
or
push
mov
mov
adc
sub
jo
rcll
orb
mov
fnstenv
adc
push
sahf
sub
sbb
lcall
sbb
add
sub
mov
mov
scas
mov
mov
pop
sub
std
sub
mov
pop
sahf
lret
mov
jmp
icebp
inc
test
or
fsubs
cld
insl
fsubrs
cli
repnz
sbb
js
jg
adc
mov
outsl
mov
stc
pop
clc
test
pop
test
or
fnstsw
lock
sub
mov
aam
data16
mov
call
addb
push
push
aaa
adc
clc
out
pop
add
sbb
cld
fbstp
testb
jmp
mov
dec
mov
dec
in
mov
xor
aaa
jbe
sbb
lcall
xor
nop
aas
add
xlat
aas
push
ja
pop
jae
sbb
dec
xor
add
cltd
xchg
popa
adc
jl
jbe
cmp
jle
inc
decb
inc
or
push
sbb
inc
es
or
test
sub
xchg
jmp
cwtl
cmp
hlt
add
inc
insb
dec
cmpl
xchg
and
cmc
push
mov
xorl
scas
ljmp
add
jecxz
repnz
jns
mov
dec
push
mov
jp
jmp
mov
pushf
test
int3
leave
out
in
loopne
sbb
cmpsb
daa
push
inc
push
cmpsl
add
mov
rcll
lods
xchg
dec
or
sbb
decb
xor
xlat
punpckhbw
outsb
mov
in
dec
sub
push
xor
xchg
pushf
mov
ljmp
dec
push
cmp
push
je
stc
arpl
mov
lods
xchg
mov
xchg
fidivrs
push
jnp
loope
mov
mov
mov
push
test
pop
int3
mov
int3
jo
mov
or
ss
xlat
adc
xchg
sbb
das
add
cmp
rorb
out
or
adc
adc
or
lret
orb
and
add
in
pop
mov
enter
xchg
cmpsb
into
mov
adcb
sub
sbb
rcrb
add
mov
and
mov
pop
incl
ds
out
scas
mov
cmpsb
dec
add
cli
aaa
sub
or
fadds
add
hlt
jle
daa
inc
push
pop
xchg
or
add
nop
dec
imulb
mov
lds
jmp
mov
xchg
ret
mov
nop
fldenv
push
xchg
push
shlb
outsb
sub
sbb
jle
and
adc
jbe
jmp
mov
js
out
sti
mov
shlb
int
mov
inc
mov
into
test
cli
hlt
mov
sar
pushl
testl
and
xchg
sub
add
xchg
lock
and
pop
sub
xchg
call
adc
dec
loop
fistpl
push
xchg
xchg
mov
xor
inc
pusha
cli
pushl
and
pusha
or
cmc
fsubp
ret
pop
or
mov
jg
lcall
aaa
mov
ljmp
sub
in
push
test
stos
scas
dec
adc
stos
push
mov
dec
test
add
or
adc
sarl
cwtl
and
rorl
xchg
mov
adc
cmc
stos
mov
mov
loop
addb
mov
bnd
and
xchg
lahf
fidivrs
mov
mov
sbb
fnstsw
sbb
mov
pop
push
jg
jbe
cltd
jnp
sbb
dec
xor
and
stos
call
or
xorl
out
roll
xor
jns
js
mov
mov
push
jle,pn
ljmp
bound
xor
or
push
icebp
movswl
cmp
mov
add
dec
cmp
loopne
stos
jp
and
push
push
push
ss
dec
add
add
pop
cmpsb
ret
push
mov
pusha
push
aam
filds
popf
jecxz
leave
pop
inc
mov
push
in
loopne
cmp
loop
jl
lret
jecxz
fbstp
insl
push
sti
clc
call
lods
sbb
mov
mov
add
and
out
cmpsb
inc
mov
cwtl
and
push
divl
test
icebp
push
dec
sub
adcl
mov
xchg
ret
inc
jo
notb
sar
dec
ret
push
scas
inc
mov
inc
out
fists
mov
ss
add
les
inc
dec
jmp
sub
fiaddl
pop
push
dec
mov
inc
std
pushl
mov
dec
mov
cmp
enter
das
cwtl
in
movsb
packsswb
xchg
add
add
or
dec
jmp
clc
cmp
fwait
jne
jae
iret
movsb
jno
xor
fwait
nop
das
push
jl
lcall
test
pop
stos
add
sbb
push
aas
mov
xchg
sbb
cwtl
push
and
imul
sti
adc
lret
sub
cmpsb
std
cmp
add
iretw
cmpsb
stos
push
outsl
sbb
test
and
sbb
inc
out
xor
or
xor
jg
xchg
pusha
dec
push
jmp
pop
push
sbb
fs
orb
inc
jb
popa
mov
adc
cmpsl
mov
sbb
push
sbb
and
test
fsubrs
cmp
inc
inc
cmc
rcrl
inc
sub
mov
shrl
stos
ds
in
mov
lods
jl
movsl
push
adc
into
pushf
cmp
fcmovnu
dec
and
jo
or
ds
or
dec
das
push
imul
rorl
popa
int3
cmp
outsl
mov
imul
movb
mov
test
incl
addl
sgdtl
imul
sub
fcomp
and
imul
cmp
clc
adc
inc
xlat
xchg
xchg
pop
pushf
or
scas
inc
mov
jo
les
cmp
push
ljmp
and
loop
rol
dec
xchg
lahf
lods
add
imul
mov
mov
mov
inc
imul
push
cmpb
sub
inc
push
dec
movsb
cmp
jo
xchg
jle
insb
loope
xchg
cld
enter
js
sub
test
dec
mov
cmp
pop
scas
pop
dec
cld
or
and
cmc
decl
lock
xor
push
xchg
cmpsl
out
or
lcall
pop
insl
mov
pop
sahf
jg
inc
lahf
inc
frstor
adc
and
mov
lret
dec
cwtl
inc
loopne
add
pop
hlt
xlat
call
fidivs
fimull
idiv
fdivl
add
test
aas
and
lods
mov
mov
sbb
mov
cmp
fcomip
sahf
mov
into
xchg
pusha
cmpsl
sbb
enter
in
stos
into
push
enter
mov
adc
mov
adc
in
cmp
cmc
or
rol
jo
sub
push
imulb
inc
mov
sahf
aad
push
popa
sbb
mov
out
sarb
jge
mov
adc
imul
jb
les
add
cmp
pop
icebp
jg
jnp
xchg
mov
ds
stc
xor
pop
and
stos
mov
adc
xchg
in
outsl
mov
pop
das
xchg
fbstp
xchg
cmpsb
loop
push
xor
test
nop
jmp
sbb
mov
or
jno
xchg
addb
outsb
ret
or
js
xchg
mov
lock
add
mov
jge
fs
decb
lcall
shlb
outsl
scas
js
add
or
and
add
nop
lret
xchg
lock
mov
mov
daa
lods
lods
dec
lret
mov
xor
cltd
arpl
fimuls
ret
xchg
fidivrs
inc
dec
push
xor
or
push
sar
push
inc
fs
outsl
into
xor
enter
sbb
mov
xchg
mov
mov
mov
mov
jnp
push
addb
test
cmp
negl
lock
dec
out
leave
pop
push
jge
add
data16
outsl
pop
pop
push
pop
es
iret
jne
mov
pushf
nop
outsl
imull
sahf
dec
pop
je
mov
test
cmp
or
dec
add
add
pop
loope
dec
test
call
add
push
loop
sbb
jae
sub
ss
add
dec
push
lret
and
inc
push
outsb
pop
loop
adc
sbb
jge
aaa
mov
mov
shrl
jb
dec
xor
jb
pop
or
xor
out
jo
ss
add
decb
in
movsb
in
push
rorb
call
add
lods
push
aaa
mov
push
push
into
push
push
adc
pop
stos
sarb
loop
data16
loope
ljmp
inc
adc
sbb
adc
mov
xchg
imul
push
mov
mov
adc
push
add
scas
fiaddl
jp
jnp
enter
rol
mov
ja
mov
sub
xchg
inc
sbb
fsubl
roll
cmpl
inc
pusha
loop
adc
pop
jne
inc
xchg
jnp
gs
fisttpl
mov
jae
cmpsl
popa
xor
das
fimuls
inc
jge
sbb
pop
sahf
mov
sbb
xor
ljmp
outsb
or
sub
mov
push
popf
push
pusha
outsl
jle
test
mov
lea
or
mov
jg
mov
ds
mov
fdivr
pop
icebp
jo
test
cltd
push
es
mov
test
push
fnstsw
out
es
inc
insb
or
jo
or
fisubl
pusha
and
cmc
mov
xchg
or
fiadds
cmc
adc
add
xchg
scas
sbb
jo
push
imul
inc
jns
test
hlt
js
out
jl
movsl
bound
and
lea
pop
fsub
call
mov
sti
add
mov
cmp
pop
jo
add
jne
push
and
sbb
lret
mov
mov
xorl
sub
adc
cmp
shll
sbb
popf
jo
ffree
push
or
mov
jmp
cwtl
push
mov
sbb
or
lcall
mov
pushl
mov
mov
mov
repnz
inc
out
and
js
push
xchg
sub
and
cmp
push
push
inc
repz
pop
xchg
mov
cmc
hlt
cmp
incl
ficoms
dec
lret
xchg
out
shl
pop
and
lods
enter
cmp
sbb
jecxz
fsubp
fs
and
add
xor
push
cmp
rorl
xchg
mov
jmp
loope
int
test
addl
test
jmp
and
pop
mov
leave
cs
stos
jg
hlt
vrcpss
mov
dec
and
lcall
xchg
insb
fsubrl
xor
inc
lock
xchg
push
adc
dec
cltd
mov
js
pop
fbld
mov
xchg
mov
xor
jns
mov
mov
popa
inc
cmp
pop
imul
pusha
pop
push
add
xchg
fildl
pushf
xor
vmovss
adc
pop
sbb
out
fbld
add
add
pop
pop
lahf
xor
cmp
add
sbb
mov
push
sbb
shlb
xor
enter
fsub
sub
loope
fucomp
cmp
fcoms
int3
mov
mov
jno
jmp
popf
test
pushf
xchg
sbb
xchg
or
inc
sub
pop
adcb
inc
out
lods
fisttpl
rol
loopne
insb
jg
pusha
push
mov
inc
das
mov
dec
mov
sub
pushl
inc
dec
insb
lahf
lods
sbbb
rclb
cmpsb
sbb
sbb
in
loopne
mov
cmpsb
mov
jecxz
bound
jnp
daa
je
lods
in
pusha
dec
sbb
xchg
hlt
dec
xchg
mov
dec
shlb
mov
cmp
mulb
dec
outsb
add
mov
push
loopne
lret
push
or
sbb
je
or
pop
add
inc
push
adc
aad
ljmp
out
shll
cwtl
nop
shlb
nop
cli
mov
jp
js
dec
pop
jle
xchg
push
jns
bound
rol
adc
test
pop
faddl
test
push
dec
popf
scas
and
jo
push
and
decl
lret
jmp
inc
ret
out
xor
sub
arpl
push
cwtl
or
pop
push
inc
add
inc
sub
push
repnz
xchg
loope
lock
push
fdivrs
jmp
and
es
lds
pop
cmp
cmp
mov
fcomip
mov
mov
mov
cli
adc
in
inc
mov
jecxz
rclb
inc
leave
gs
adc
cmp
data16
outsb
outsb
sbb
ja
decl
inc
pop
cwtl
daa
fwait
sbb
lods
mov
inc
add
pop
lods
inc
iret
or
lret
push
lock
push
mov
dec
inc
sub
push
dec
sub
adc
ret
sub
mov
cmp
mull
mov
loope
hlt
inc
out
andb
je
movsl
adc
std
in
inc
dec
push
ds
push
call
in
in
out
ljmp
loopne
cld
hlt
jae
adc
outsl
std
xchg
sti
inc
repz
inc
push
or
dec
push
stos
pop
sub
push
mov
add
and
push
mov
push
inc
jg
outsl
sub
andl
and
mov
pusha
rorb
mov
loop
mov
mov
pop
mov
imul
push
and
add
mov
add
fbld
pop
inc
dec
test
sub
daa
cld
ljmp
es
mov
jno
mov
or
mov
scas
gs
xor
pop
loop
adc
daa
or
enter
insl
dec
jmp
icebp
in
mov
loopne
add
inc
arpl
roll
movsb
iret
aam
and
fiadds
icebp
or
mov
iret
mov
inc
pop
pop
rorb
inc
loope
lahf
cmp
adc
xchg
pusha
stos
in
int3
jl
xchg
push
add
js
popf
mov
lcall
cmp
cs
vcvttps2dq
pop
or
outsl
adc
loopne
cld
repz
mov
and
lock
sbb
inc
scas
repnz
xor
or
clc
or
and
lock
ja
inc
cmpsl
or
sbb
sbb
mov
out
data16
and
mov
xchg
jl
test
into
dec
cwtl
push
jg
or
cmp
and
cmp
data16
fbstp
fisubrl
and
shll
pop
sub
push
hlt
jg
lods
aas
insb
pop
mov
std
scas
dec
ret
mov
mov
ror
inc
call
pop
jno
mov
fisubs
push
loop
xchg
push
cmpsl
add
or
clc
push
add
mov
mov
movsl
lahf
xchg
leave
push
repnz
cmp
stos
je
adc
test
xchg
lods
mov
pop
cmp
pop
sbb
or
lcall
ss
push
xor
mov
jae
sub
jle
mov
lods
mov
or
ficompl
or
mov
push
sbb
es
jg
mov
cli
fiadds
ficoms
lahf
movsb
pusha
push
addr16
mov
js
aaa
cld
incl
cld
out
mov
xchg
mov
inc
repnz
dec
jg
or
subb
test
xchg
or
pop
pusha
xchg
sub
dec
scas
add
push
xchg
jmp
inc
das
mov
jmp
push
mov
push
insb
inc
ds
hlt
mov
stos
int
sub
es
iret
jo
mov
scas
push
orl
and
fsubs
cmp
cmp
les
into
test
inc
or
mov
jp
pop
jl
push
adc
inc
adc
cmp
das
adc
imul
or
pusha
and
jmp
les
or
inc
inc
push
xor
adc
and
cld
pop
jo
add
inc
mov
loopne
lret
push
sbb
in
clc
sbb
sbbb
or
xor
jns
jg
ds
xchg
mov
dec
xor
clc
and
add
add
xchg
subl
jno
movsb
mov
hlt
cmp
push
je
jno
mov
xor
sti
mov
call
stos
faddl
mov
and
out
icebp
jg
mov
nop
jb
cmpb
sti
iret
mov
clc
sbb
mov
push
cmpsb
jg
push
xchg
fcompl
pop
popl
orl
push
push
popa
mov
pushl
or
lahf
mov
mov
xor
push
dec
dec
mov
ret
xor
popl
fists
cmp
test
mov
and
je
xchg
sbb
xchg
push
ss
pop
ljmp
test
adc
mov
insl
mov
inc
movsl
add
test
mov
daa
sbb
out
dec
adc
fbstp
and
or
cld
mov
pop
push
inc
xor
push
ss
imul
inc
outsl
and
dec
and
add
jo
adc
xchg
push
sar
mov
lret
adc
or
fimuls
inc
push
xor
xor
lret
or
icebp
pop
shrb
bound
mulb
adc
outsb
mov
repz
push
sbb
jl
inc
pushf
sbb
sbb
xchg
mov
adc
mov
adc
lcall
aas
je
mov
das
xchg
or
in
jbe
mov
mov
lock
inc
sbb
mov
nop
cmpsb
mov
pushf
adc
inc
xchg
mov
std
push
mov
cmp
adc
in
fidivs
addr16
arpl
adc
mov
jmp
call
pop
xor
hlt
enter
xchg
js
jo
dec
sti
pop
xchg
pop
mov
pop
icebp
add
fsubs
add
aad
cli
popf
cmc
xchg
js
test
cli
test
shrb
fstps
lock
sub
mov
pop
cmc
in
sbb
add
push
mov
add
test
loop
jo
pusha
inc
ljmp
mov
fs
stc
and
mov
dec
xorb
gs
add
pop
lea
xchg
dec
or
push
lds
nop
xchg
pusha
aaa
add
aad
cmp
test
arpl
loop
mov
and
pop
push
imul
xor
mov
sbbb
test
push
pop
decl
pop
mov
mov
hlt
testl
pop
int3
lds
jle
lret
cmpsl
jo
and
adc
add
int
movsl
sarb
popf
pop
es
outsl
push
xor
jge
outsb
lock
or
pusha
roll
cmp
xchg
xchg
sub
mov
jp
roll
sarb
dec
stc
xor
lahf
lea
jne
cli
jecxz
dec
cs
out
test
sahf
cli
test
incl
inc
xchg
and
dec
inc
sbb
and
test
jmp
lahf
sbb
or
sbb
and
mov
pop
or
je
and
outsb
adc
test
jle
xchg
stos
push
mov
mov
add
and
add
in
pop
les
loop
xchg
lock
scas
scas
outsb
jl
cld
fcomip
rolb
push
jmp
jecxz
ret
adc
lahf
xchg
mov
pop
inc
mov
test
cmpsb
mov
and
cld
movq
ret
xchg
enter
add
mov
incb
mov
lods
add
lods
fldl
pop
jg
dec
insb
push
mov
push
dec
push
xchg
loopne
add
scas
add
popf
fst
cmp
mov
adc
rcrl
subb
insb
sarb
inc
imul
test
mov
jo
sub
inc
js
xor
push
jns
aam
add
outsl
add
xchg
xlat
scas
sbb
push
xchg
jg
rcr
addb
add
mov
rcrb
aaa
std
pop
fimull
jb
je
or
push
js
scas
lock
mov
push
imulb
lods
call
bnd
dec
es
mov
sub
jne
mov
xorl
mov
out
shl
pop
cwtl
sbb
pop
sahf
inc
cmp
popf
mov
scas
adc
pop
lock
and
xor
sti
sbb
lahf
daa
add
rcrb
xchg
ds
mov
mov
inc
loop
or
in
inc
pop
lock
rcll
mov
mov
add
rcrl
or
fdivl
inc
pusha
pop
imull
adc
cmp
es
dec
ljmp
sbb
adc
adc
movsb
sar
push
mov
movsl
sbb
inc
sbb
push
std
das
hlt
sbbb
and
test
imul
aaa
push
sbb
add
pop
xor
mov
mov
mov
je
filds
loopne
lret
jmp
sbb
mov
ret
xchg
xchg
cmpsb
lock
sbbl
add
sahf
push
imul
lcall
mov
clc
lahf
sub
add
jp,pn
rorb
aas
sbb
pop
adc
dec
incl
push
loop
incb
mov
fadd
push
shll
scas
mov
jb
or
jmp
dec
loope
jmp
cmpb
jb
dec
xchg
in
pop
push
cmc
add
test
mov
adc
xor
pop
adc
mov
ret
and
shl
adc
pop
inc
push
lds
and
addr16
lcall
gs
fsubp
jae
add
fcomip
push
push
sbb
adc
int3
push
call
pop
add
mov
mov
or
aaa
repz
xchg
nop
repz
loop
mov
cmp
and
sbb
out
orl
shrl
fwait
mov
fstps
dec
shrl
fs
fsubrl
mov
inc
loope
mov
lcall
add
enter
fildll
lea
jno
mov
pushf
lods
loopne
adc
cmp
sti
mov
pushf
pop
repnz
push
push
movsb
xchg
pop
out
bound
or
in
clc
add
scas
adc
aaa
shlb
mov
adc
sbb
and
rcll
bound
js
inc
push
and
insl
pop
xor
pop
andb
orl
ljmp
aas
inc
xchg
cmp
xlat
or
fldl
pop
add
hlt
mov
in
lock
mov
cs
mov
add
add
test
push
xor
inc
ss
clc
rcr
jmp
mov
outsl
pop
add
rol
sahf
sahf
cli
jle
fcomip
inc
or
nop
arpl
mov
dec
xor
shrl
cmpsb
push
addr16
int
jecxz
incl
je
dec
test
xchg
arpl
adc
pop
subl
out
add
fildll
loope
mov
sub
add
pop
ja
sbb
sub
test
sub
or
adc
fwait
incl
call
mov
xlat
jnp
icebp
clc
mov
or
sub
scas
pusha
mov
lods
inc
mov
push
in
in
insb
fsubrs
cld
mov
add
loopne
pop
shrb
call
push
mov
aad
aas
arpl
dec
jns
adc
addr16
mov
adc
lret
mov
les
ds
jg
sub
add
je
or
loope
adc
lahf
add
scas
jl
fstl
inc
inc
and
mov
test
and
add
add
mov
stc
add
inc
out
jne
ja
jp
jne
mov
xorl
fisubs
mov
sbbl
ss
cmp
enter
sbb
mov
and
push
jle
inc
jne
sti
or
movsb
cmp
fidivs
in
dec
inc
ret
pushf
iret
leave
aaa
cmp
fwait
jmp
mov
sbb
sub
pushf
inc
mov
shlb
jbe
push
xor
inc
jb
outsl
pushl
adc
mov
jb
mov
aam
inc
cmpsb
and
mov
fcoml
pop
enter
mov
push
sbb
repnz
pop
push
and
out
ficompl
or
adc
mov
sahf
mov
out
pop
rorl
push
ja
push
test
outsl
jno
iret
fidivl
movsl
shlb
or
cli
xchg
shrb
loope
push
sbb
push
test
nop
int3
not
jg
sbb
ljmp
dec
or
adc
mov
cmp
dec
mov
pop
adcb
mov
add
pusha
insb
scas
scas
test
ja
add
rclb
ljmp
jo
data16
fiadds
repz
mov
mov
idivb
pop
jmp
ss
add
or
push
sbb
push
mov
test
jge
loope
rolb
cmp
loopne
jmp
sub
out
pop
sub
jp
mov
repnz
pop
push
lcall
mulb
mov
lahf
sarb
mov
xor
add
adc
push
sbb
jle
lcall
mov
daa
push
mov
adc
add
pop
mov
add
call
sub
xchg
jo
testl
push
lret
mov
sbb
cmpsb
cli
jg
cmp
push
movsb
shlb
movsl
jl
cmp
cmpsb
aam
popf
ret
xchg
jno
jecxz
jne
shlb
sbb
jle
test
test
dec
jmp
xor
in
add
aad
cli
push
pop
xor
cwtl
cs
out
hlt
outsl
sub
mov
hlt
movb
sti
sbb
inc
adc
add
loopne
jno
out
sbb
cmp
jle
adc
dec
daa
xchg
lcall
mov
pop
mov
lcall
adc
fsubs
cmc
adc
sbb
mov
int3
sahf
jg
clc
xor
sub
pop
ret
xchg
sub
in
pop
sarb
sub
inc
loopne
mov
push
sub
pop
sbb
pop
pop
xchg
addl
jecxz
popa
xor
popf
jo
loope
inc
jle
or
movsb
testb
mov
xlat
loopne
pop
dec
movsl
mov
scas
adc
out
jmp
outsl
jle
mov
add
push
push
or
pushf
add
out
pop
xchg
test
xor
and
cmp
negb
inc
iret
clc
mov
push
add
sbbb
push
inc
sub
lods
xchg
stc
xor
and
sbb
mov
and
pusha
jnp
xchg
push
push
fs
fmuls
inc
adc
jnp
jae
inc
repnz
push
dec
xchg
shl
aaa
jg
dec
dec
stos
jl
lods
push
es
lret
dec
xlat
mov
cld
gs
fildll
into
fcoml
xor
movsl
ljmp
mov
adc
enter
int3
pop
bound
lods
fdivs
and
xorb
sar
fsubp
jb
cmp
mov
lret
or
inc
mov
sahf
test
dec
mov
sbb
mov
jne
xor
std
mov
cwtl
adc
mov
lcall
les
hlt
roll
mov
and
popa
loop
movsb
enter
ljmp
sbb
mov
aam
lret
test
lock
aam
mov
jg
jg
cli
in
into
add
movsb
test
jo
imul
dec
add
stos
fbld
stos
xchg
pushf
sbb
dec
or
inc
mov
jecxz
loopne
ljmp
inc
int
cmpsl
xor
pusha
cmp
sub
mov
rorl
into
push
ss
mov
dec
mov
sbb
jle
pop
stos
xor
push
adc
and
fistl
push
iret
jg
lret
pusha
fistpll
stc
sbb
rorb
inc
ja
cmc
and
shrl
jp
add
daa
inc
scas
mov
out
dec
mov
movsb
rclb
mov
push
stos
cmp
movsl
movsl
scas
test
repnz
movsl
pop
add
sar
sbb
adc
les
sub
cmp
testb
jge
add
add
aas
jle
mov
push
ljmp
icebp
aad
test
out
and
jle
ficoms
or
push
cmp
scas
filds
arpl
pushf
enter
mov
cld
adc
sar
mov
inc
lret
pusha
shlw
std
outsb
jl
pop
or
add
ret
xchg
pop
enter
push
or
cwtl
mov
ss
out
aaa
dec
clc
inc
xchg
mov
xchg
inc
mov
and
mov
popa
mov
aad
aam
pop
ret
push
shrl
je
insb
cmp
pop
push
jbe
jo
jp
fisubrl
push
andb
mov
out
ror
sbb
jne
in
fs
outsb
push
adc
ds
push
mov
cmpsb
out
in
notb
test
jp
jge
jl
sbb
inc
cmp
add
fiadds
cmp
sbb
movsb
ds
cmpsl
nop
cmc
shll
mov
mov
or
jno
fs
addr16
mov
mov
sub
sub
push
fcomp
fisttps
push
std
and
inc
sbb
clc
pop
inc
mov
aam
js
add
insl
add
jo
mov
inc
lds
sub
out
int3
adc
xor
push
or
dec
sbb
mov
ret
xchg
divl
call
mov
dec
jb
cli
outsl
ret
push
scas
leave
cmp
add
inc
sbb
add
outsb
cwtl
and
xor
in
aaa
push
mov
or
sbb
out
test
enter
xlat
andl
loop
sbb
mov
je
sbb
packsswb
mov
jg
add
and
xor
and
mov
call
rcrl
mov
call
jg
fstl
movsl
jecxz
mov
xor
loope
fbstp
pop
fildl
xchg
push
mov
pop
sbb
inc
test
adc
mov
std
adc
sub
sub
clc
mov
inc
fs
push
and
xor
scas
jecxz
stos
mov
sub
mov
mov
pop
sub
out
cld
pop
ss
adc
subl
clc
mov
cs
aad
je
loop
in
lcall
rcr
outsb
cltd
lret
inc
jae
les
or
ficoml
inc
pusha
xchg
sbb
in
dec
aaa
mov
pusha
inc
add
xrelease
jmp
and
cmc
outsl
push
rolb
xchg
sbb
test
add
push
or
ljmp
add
mov
pop
adc
or
adc
leave
out
pop
cmc
iret
xor
inc
test
test
imul
lret
test
lock
dec
cld
das
fadds
ficomps
aas
addb
sub
or
loop
pop
or
pop
clc
lcall
or
add
andb
into
mov
addr16
inc
ds
out
lret
mov
dec
mov
jbe
arpl
mov
lods
fbld
sbb
add
adc
cmp
fistps
lret
ljmp
and
inc
jnp
fnstcw
or
ret
aam
dec
and
cmp
mov
cmc
mov
or
mov
or
pop
mov
ficoml
push
hlt
test
jnp
xchg
sub
xchg
fldl
es
rcr
cltd
and
ror
pop
pusha
xchg
mov
jecxz
bound
mov
push
sub
fs
dec
adc
xchg
rcrb
lods
add
jp
sub
rorb
fisubrs
jmp
pop
jle
stc
xchg
xchg
test
or
pop
cli
lcall
sahf
mov
adc
shll
xor
inc
cmpl
outsb
popa
sbb
int
jg
dec
fs
and
fs
ret
cmpsb
push
adc
mov
add
loope
add
loopne
lcall
sub
add
or
loopne
incl
test
test
nop
test
xor
mov
sub
int3
adc
icebp
lock
cmp
add
outsl
jo
insl
xor
pop
sbb
cld
lcall
cmp
clc
and
jns
mov
mov
xchg
or
mov
inc
add
jge
test
inc
in
leave
or
inc
pop
push
fistl
xchg
push
ljmp
rcl
es
call
sub
mov
loop
push
xor
or
dec
mov
and
mov
icebp
ret
adc
or
pop
aam
and
outsl
cld
jb
es
in
subl
clc
pop
jge
mov
icebp
enter
rorl
decl
add
aaa
add
or
jo
jns
or
mov
test
mov
push
push
mov
jns
jb
out
fildll
mov
ja
mov
mov
xchg
add
enter
xor
mov
loop
lods
enter
lods
stos
mov
jg
mov
inc
lds
pop
jl
adc
das
nop
sahf
fimull
xorb
cmp
outsl
jl
push
cltd
lock
mov
xlat
push
cmc
ljmp
aam
cld
pop
pop
add
inc
jmp
scas
test
lret
mov
lret
repz
mov
push
cmp
std
aas
sbb
cmp
cmp
push
ret
add
and
jbe
xchg
mov
pop
aam
fsub
mov
jge
outsl
push
push
pop
cld
negb
xchg
into
sarb
or
mov
mov
shll
ds
xor
outsl
outsl
pop
cmp
push
sub
mov
popf
loopne
and
xchg
mov
lcall
inc
fisubs
add
push
cmp
rcl
enter
jbe
mov
ja
negb
outsb
clc
and
push
into
adc
and
xor
outsl
aam
les
loopne
mov
push
mov
mov
pop
mov
pop
ds
pop
cmp
fwait
jle
roll
popa
jmp
push
js
xor
test
cmp
jbe
sbb
add
mov
adcl
icebp
mov
es
int
add
aam
sbb
lods
add
pop
nop
arpl
cmp
sub
cmpsl
mov
push
dec
movsb
int
ljmp
and
jbe
sub
adc
sbbl
adc
sub
lcall
adc
push
movsl
cmpsb
pop
mov
loop
adc
rorl
je
adc
nop
pusha
xchg
or
js
lock
xchg
jnp
cld
fidivrs
repz
xor
add
or
xor
aam
fisubrs
mov
xor
call
or
test
ds
inc
push
insl
sub
pop
sbb
std
arpl
daa
jno
mov
pop
add
sbbb
cmp
ret
cmp
cmp
call
jg
sub
jnp
xchg
pushf
adc
iret
imul
std
mov
jg
mov
loopne
push
popa
add
ret
test
push
mov
push
push
ret
push
das
popa
add
or
outsl
mov
insb
call
mov
jbe
cli
lret
pop
mov
in
push
divb
cmp
sbb
inc
lock
je
inc
shr
in
sub
stc
sub
cmpsb
fidivl
mov
cmp
sbb
push
mov
pop
lock
test
aam
in
lret
jbe
lods
daa
jno
sbb
xor
icebp
mov
int
sub
inc
pop
xor
sbb
and
add
cmc
stos
or
leave
xor
or
loop
mov
mov
push
sti
imull
iret
std
addl
leave
cs
and
test
mov
lret
xchg
add
enter
andl
sub
cld
sub
neg
lret
fstl
lea
in
cli
incl
mov
inc
push
imul
cmp
in
jne
fnsave
sub
in
inc
cmpsl
sub
outsl
lock
push
andb
push
jl
stos
mov
loop
pusha
out
and
gs
xor
enter
xor
lcall
jmp
rorb
lahf
in
mov
jne
ljmp
mov
inc
fstpt
fildll
mov
cmpsb
mov
add
loop
mov
pop
xor
jne
push
fucom
mov
mov
mov
outsb
sub
hlt
outsl
ficoml
scas
inc
push
je
cmp
mov
fidivs
mov
and
and
js
lea
sub
into
fldl
pop
adcb
sub
lods
push
mov
mov
pop
mov
aam
mov
jle
outsl
clc
test
repz
mov
lock
bound
bound
loopne
jbe
xor
or
or
dec
and
add
mov
js
and
jae
inc
dec
pop
push
inc
dec
push
fdivl
lcall
push
inc
add
xchg
shll
or
ret
xor
pop
push
lods
les
push
push
loop
mov
ljmp
sub
clc
fwait
mov
iret
xor
lock
in
in
sarl
mov
xchg
out
push
adc
hlt
nop
cwtl
lods
shlb
insl
adcl
in
rorb
mov
push
aas
add
mov
push
cwtl
sub
aam
fwait
jle
hlt
stos
mov
jp
dec
and
std
pop
sbb
cmc
mov
or
je
fisubs
push
xchg
mov
jo
cmp
and
and
jmp
cltd
jle
inc
mov
scas
leave
icebp
fdivs
int3
and
cmp
cli
addb
stc
out
ljmp
scas
seto
mov
xchg
cli
lahf
in
pop
test
scas
sbb
cmp
adc
rclb
mov
xchg
mov
ljmp
adc
pop
pop
lods
xchg
or
mov
mov
sti
add
les
popf
loopne
jl
jmp
push
daa
roll
rcrl
ficoms
test
xchg
mov
adc
incl
xor
insl
sbb
fisttps
jno
xlat
jb
sbb
pop
mov
pop
fwait
sbb
decl
ja
arpl
test
pusha
sub
adc
imul
inc
cmp
mov
mov
sbb
int3
jb
xchg
add
mov
xchg
enter
icebp
outsl
push
fwait
ss
jl
movsb
dec
cmp
test
iret
inc
push
jl
call
xor
test
repz
push
ret
push
xchg
mov
lock
test
shr
cltd
sub
push
lcall
movb
ret
cmp
jle
mov
jg
cs
mov
push
lea
orb
in
jns
imul
dec
push
xor
xchg
cmp
mov
sbb
mov
and
pusha
push
xchg
mov
add
mov
test
pop
fdivrs
bound
lods
bound
mov
aam
pop
sahf
push
in
mov
fbld
dec
add
fcoms
push
cmp
xor
xchg
fcomip
ljmp
push
adc
lcall
mov
data16
or
adc
loope
into
test
in
shll
pushf
adcb
addr16
aad
mov
cmp
in
and
sti
jecxz
cwtl
or
scas
icebp
pop
popa
sahf
popa
dec
std
jle
and
jg
arpl
pop
mov
inc
sbb
out
adc
jns
testb
mov
dec
and
dec
xor
das
push
inc
or
out
scas
cli
push
and
cltd
insb
aas
fisubl
icebp
pop
hlt
inc
cmp
mov
push
jo
dec
push
pop
add
loopne
and
xchg
cmp
sahf
repz
movsl
bound
adc
outsl
les
sbb
add
pop
adc
shl
pushl
lcall
push
rolb
mov
mov
and
loop
add
das
scas
enter
sub
and
out
sub
pop
incl
rclb
lcall
mov
aaa
sbbb
inc
sbb
js
mov
imul
push
lea
dec
or
mov
cmovp
mov
mov
imulb
cmc
mov
jg
xchg
subl
cmc
jbe
adc
lds
stos
add
ret
sahf
loopne
or
sbb
scas
push
daa
or
adc
add
mov
in
add
scas
call
pop
movsl
fcmovnbe
test
loopne
mov
sbb
mov
jg
cwtl
int3
jl
pop
push
out
add
dec
pop
mov
add
push
lock
cmp
scas
push
add
or
push
out
xor
jp
in
ss
xorb
dec
ret
or
repnz
std
ret
rclb
mov
adc
add
adc
and
insl
xchg
mov
ljmp
lea
fisubrl
inc
dec
call
test
shrl
icebp
and
sub
call
std
push
fiaddl
xchg
jge
add
ljmp
jge
lods
test
cmpl
bound
fistl
adc
pop
inc
sar
mov
mov
movb
repz
bound
fcoml
fidivs
pusha
es
incb
mov
push
bound
or
imul
out
xor
xchg
mov
jecxz
in
aaa
add
xor
jb
mov
js
add
push
inc
fwait
movsb
aas
sbb
mov
jecxz
mov
mov
mov
loop
jmp
mov
call
nop
sub
jle
loope
adc
xor
test
cmp
push
pushf
lods
pop
push
pop
adc
stos
mov
add
pop
or
pop
xchg
xchg
inc
lock
add
jl
imul
fistl
jno
fs
inc
lret
push
icebp
in
adc
in
jae
fwait
mov
vpermd
xor
push
cmp
push
sub
nop
scas
add
mov
incl
repz
cmpsl
jno
in
mov
stos
jmp
cmp
mov
stos
add
xchg
jecxz
mov
adc
add
xor
movsl
jp
setg
enter
xchg
jb
pushf
push
rolb
imul
bound
sub
mov
hlt
mov
and
jg
ret
lcall
cli
pop
sbb
dec
jmp
mov
loop
dec
sub
jg
push
xor
repz
dec
paddw
add
xor
and
pop
jl
popf
add
jl
or
fdiv
imul
fdivl
inc
push
jle
insb
mov
xchg
sbb
outsb
les
pop
xchg
push
pop
xchg
in
mov
cmp
divb
pop
scas
push
push
cmp
xor
cld
es
add
test
stos
mov
push
mov
jb
sub
in
pop
push
xor
mov
daa
fiadds
cwtl
dec
sub
aam
out
repz
jecxz
dec
cld
xchg
xchg
push
push
xor
inc
addl
shr
rcrb
push
fbstp
lods
xor
cmpsb
dec
clc
lea
rcrb
mov
je
test
aas
call
mov
add
jp
and
mov
push
nop
inc
cmc
scas
addr16
or
std
loop
or
sti
push
adc
inc
and
rcl
scas
jg
push
pop
add
sbb
xchg
cmp
mov
nop
addr16
orl
or
test
hlt
lock
test
icebp
call
or
mov
mov
push
lret
call
fwait
shll
bound
mov
inc
test
fwait
push
cs
xor
add
or
adc
addr16
clc
fwait
pusha
inc
and
cs
test
out
mov
add
icebp
or
adc
ds
add
int3
mov
in
enter
push
push
lahf
inc
push
jne
daa
jl
lds
leave
inc
push
clc
inc
fadd
pop
pop
and
cmp
xor
mov
test
jmp
or
dec
mov
cli
mov
and
xchg
test
xlat
inc
clc
outsb
insb
nop
daa
pop
sbb
or
je
insl
push
int3
mov
jae
dec
cmp
xchg
stc
cli
mov
mov
push
inc
lahf
or
mov
sarl
cmp
xlat
xchg
and
ljmp
sub
and
pop
adc
mov
cli
cmp
sbb
stos
aad
cmp
mov
jle
mov
or
jecxz
arpl
movsb
lret
mov
sbb
frstor
add
insl
cmp
pop
outsb
add
pop
inc
inc
sbb
inc
sub
fwait
mov
in
dec
fimull
xchg
call
test
scas
xor
mov
xchg
or
or
call
jp
cmpsb
jae
call
adc
bound
adc
iret
pop
cmp
outsb
cli
mov
data16
sub
stc
sub
jnp
pop
in
lret
out
push
popa
popf
clc
lds
adc
xchg
clc
push
push
cmp
xchg
outsb
mov
in
add
cmp
or
pusha
inc
and
xlat
adc
or
lock
mov
add
or
jg
cmpsl
sub
not
mov
call
jo
pop
pop
out
daa
sub
and
in
cmp
lock
mov
adc
cmp
and
add
mov
clc
dec
cli
jg
push
sbb
sub
insb
mov
pop
lock
ret
mov
dec
outsb
ret
stos
push
jno
dec
loope
pop
xor
inc
xor
outsl
movsb
mov
sub
or
dec
shlb
mov
scas
ret
adcl
lahf
ss
adc
cmc
push
pop
push
sub
pop
and
cmpsb
pop
loopne
rcrl
jbe
les
push
je
icebp
and
fwait
stos
cs
xchg
ret
pop
sbb
or
fnstenv
cld
mov
push
in
pop
lds
jae
push
rcll
loope
adc
js
xlat
pop
addb
xchg
rcll
add
leave
scas
cwtl
push
test
fidivs
push
mov
aas
adc
sub
xchg
lods
ljmp
adc
bound
movsl
bound
adc
sub
lods
pop
cmp
pop
lock
inc
push
add
or
xchg
add
mov
ss
cmpsl
mov
inc
mov
inc
testl
aad
movsb
in
aam
jbe
sub
popf
cmp
outsb
adc
notl
add
xor
jmp
lcall
sub
pop
jmp
fsub
inc
mov
jbe
pop
push
jl
inc
ret
add
jp
mov
cmp
dec
and
mov
subl
out
repnz
and
inc
pop
loopne
fwait
mov
jb
pop
popa
inc
dec
lds
fmull
mov
jecxz
and
adc
push
push
jp
adc
rol
fwait
sbbl
dec
adc
loopne
jg
fisttps
mov
es
scas
hlt
push
push
loopne
fistpl
pop
lea
nop
adc
lock
cmp
pop
fcmovbe
dec
ljmp
cmp
mov
and
adc
or
push
push
cmp
out
adc
xchg
cli
fiaddl
add
inc
fists
rorl
mov
jbe
lcall
sub
daa
inc
insb
mov
mov
push
sahf
negb
mov
lret
daa
les
jne
mov
jmp
sbb
rolb
xchg
lcall
je
and
sbb
mov
mov
jnp
jns
fisubl
repz
and
aaa
sbb
add
mov
push
mov
in
pop
lcall
dec
js
je
and
sbb
hlt
imul
sub
push
inc
mov
push
jae
loop
test
mov
icebp
cwtl
cli
mov
mov
cli
imul
push
or
lock
jg
mov
mov
mov
in
das
cmp
adc
dec
and
adcl
stc
fisttpl
test
add
shl
pop
cmpl
fnstcw
call
mov
call
pop
stc
loop
cmpsl
push
sahf
or
enter
sbb
jge
jnp
ret
ljmp
xchg
add
fldcw
inc
incl
adc
and
mov
add
loop
mov
lods
xorl
and
mov
xchg
test
lret
xor
fcoml
les
lods
jb
jg
sbb
and
xor
or
lret
adc
adc
test
xor
pop
add
subb
inc
negl
push
dec
mov
inc
ljmp
nop
mov
inc
testl
ss
xor
cmp
test
lods
scas
out
dec
popa
andb
add
mov
data16
push
cld
inc
nop
rcrl
dec
push
xchg
nop
call
mov
stc
mov
cmpsl
push
clc
neg
daa
sbb
and
xchg
mov
icebp
int3
inc
or
outsl
add
imul
adc
cmpsl
xchg
xor
in
lods
std
push
je
ja
pop
scas
pusha
jl
shlb
int
pop
mov
jle
rcr
incb
push
cwtl
call
jmp
and
iret
je
fisttpl
dec
and
cmp
xor
push
scas
outsb
pop
push
adc
sar
adc
dec
xor
add
dec
je
mov
ret
jge
in
call
cmp
add
rolb
mov
cli
sbbl
cmp
cmpsb
aam
nop
loope
fiadds
add
sub
adc
shlb
or
and
xchg
sbb
xlat
dec
jp
lret
xchg
dec
and
sbb
push
pop
jo
xlat
jmp
push
lahf
and
or
or
dec
sbb
xlat
mov
inc
and
dec
int3
int
mov
test
mov
aam
adc
test
ds
je
adc
push
je
sahf
cmpsl
push
sbb
cltd
cwtl
adc
jno
add
cmp
rorb
mov
sahf
test
cmp
xchg
pop
and
inc
push
jle
add
daa
mov
mov
ret
cs
mov
mov
push
shrl
fisttpl
add
rcrb
xlat
adc
insb
mov
push
les
or
mov
pop
pop
je
bnd
and
xchg
push
push
jb
ja
outsl
adc
fs
sub
bound
push
sub
lcall
mov
dec
fdivrs
jne
xor
frstor
rorb
pop
pop
call
jmp
fadd
sub
or
lds
hlt
mov
into
xchg
push
dec
data16
cli
pop
or
aad
push
mov
hlt
mov
rol
jge
push
mov
jg
clc
call
sahf
and
fdivrp
shrl
or
cmpsb
nop
xor
push
cmpsl
adc
call
push
sbbl
rorl
lahf
jp
pop
mul
es
fcomip
inc
mov
andl
test
mov
xchg
jmp
clc
dec
pusha
ss
movsl
add
cmpsb
lock
mov
jo
or
loop
or
lcall
push
into
jbe
popf
or
pushf
push
and
pop
fdivs
push
or
xchg
out
or
aam
mov
and
stc
cmp
ret
jg
sbb
dec
int3
nop
ja
adc
push
aaa
add
sbb
aaa
cmp
js
mov
push
insb
outsb
push
sub
fwait
mov
cmp
mov
jg
pop
test
out
fidivrl
les
nop
lock
test
fistpll
repnz
jo
mov
or
outsl
nop
lock
jns
outsl
adc
jge
lcall
in
sub
fwait
rclb
movsb
inc
push
add
fs
test
ljmp
jl
mov
stos
mov
dec
fnstcw
push
add
or
sbb
mov
xchg
sub
lods
and
push
xchg
cmp
xchg
ljmp
mov
mov
or
jg
fidivl
dec
mov
sub
inc
or
or
lds
sub
les
xlat
inc
std
mov
cmc
add
rclb
jno
mov
lods
mov
dec
adc
and
jecxz
xchg
adc
insl
add
add
mov
iret
out
dec
adc
adc
dec
sub
mov
jo
pop
mov
and
jmp
dec
aam
das
inc
adc
shlb
xchg
mov
adc
mov
fimull
stc
adc
shlb
pusha
test
cmpl
pop
pop
scas
pop
adc
call
pop
ds
cld
or
test
in
or
loop
add
xor
loop
push
jns
pop
mov
dec
and
out
xor
insb
push
adc
ljmp
mov
clc
stos
hlt
cmp
scas
pushl
adc
bound
out
sub
xchg
scas
adc
sbb
sub
clc
xchg
mov
pop
bound
aaa
inc
jg
push
add
xor
bound
sub
mov
mov
aam
inc
loopne
cmpsb
mov
sub
push
pop
lea
call
jecxz
cld
je
xchg
mov
adc
push
xchg
mov
xchg
push
lods
jb
mov
mov
add
fwait
shr
jg
xchg
jbe
mov
hlt
inc
pop
int3
iret
mov
sbb
adc
cli
pushl
cld
mov
arpl
and
stos
sub
sbb
jb
jl
sbb
jge
stos
mov
xchg
push
jl
fistpll
dec
and
and
dec
push
jne
mov
adc
fcoms
bound
cli
and
dec
jg
jg,pt
or
and
adc
jecxz
inc
jl
lahf
out
pop
push
movsl
and
add
faddl
fwait
pop
adcb
paddusb
cmp
loop
add
or
push
push
add
jnp
mov
pop
xchg
mov
enter
ljmp
sarb
je
sarb
xor
arpl
sbb
jecxz
ret
add
mov
xor
push
in
dec
js
jmp
fbld
dec
jne
xchg
adcb
jg
test
cwtl
outsb
pop
into
cmc
das
clc
adc
mov
inc
add
dec
daa
loopne
dec
pop
sbb
xchg
inc
adc
jne
sbb
xor
inc
movsbl
pop
adc
aad
je
pusha
sbb
mov
ljmp
inc
shll
into
dec
out
adc
in
leave
inc
fbld
mov
clc
dec
pop
add
shlb
out
fdivs
mov
ljmp
add
sub
dec
mov
cmp
pop
sub
cmpsb
mov
dec
in
imul
mov
inc
and
cld
add
dec
pop
mov
scas
sub
xor
mov
mov
mov
mov
std
push
or
mov
sbbl
add
mov
inc
orb
mov
push
and
lds
mov
pop
scas
add
xor
lds
pop
pusha
pop
sbb
es
pop
or
inc
cmpsl
popf
aas
jg
push
cmpsb
cmp
hlt
fldt
mov
add
sahf
loopne
push
cltd
sub
pusha
dec
pop
cs
push
aam
push
mov
mov
and
pusha
fs
ret
cli
sbb
or
jp
mov
add
nop
stos
jmp
into
push
lds
shl
cli
mov
pop
test
xchg
xor
xchg
cmp
pop
scas
mov
jl
in
jo
cmpsl
into
pop
pop
sbb
std
pop
and
mov
pop
fld
xchg
mov
inc
adc
xchg
icebp
inc
jecxz
dec
je
cmpsl
scas
cmp
pop
sbb
push
sbb
faddl
or
js
icebp
push
insb
and
adc
xor
add
pop
adc
std
lock
jb
shlb
dec
inc
add
cwtl
sahf
add
push
jecxz
std
jg
btr
add
mov
dec
add
pop
repz
jns
scas
inc
inc
fs
jmp
mov
leave
cmp
push
dec
addr16
push
inc
inc
push
push
sub
pop
repnz
adc
xlat
add
adc
push
ret
push
xor
add
pushf
inc
int
adc
add
fdivrs
cmp
inc
mov
clc
and
and
out
push
mov
lods
push
out
pushf
push
mov
jmp
mov
lret
and
pushf
aam
xor
cld
rolb
int
sbb
inc
out
outsb
or
iret
ljmp
or
orb
mov
mov
or
les
ret
xor
fiaddl
sbb
adc
xor
push
shrb
or
jp
dec
push
shlb
mov
pop
movsb
paddusb
mov
xchg
lahf
shlb
into
imul
jmp
xor
or
orl
xchg
daa
scas
lret
pop
add
mov
mov
out
std
insb
loopne
arpl
adc
mov
aad
dec
aam
test
loopne
aam
outsb
aad
or
pop
cmp
push
rcrb
fstpt
scas
adc
and
mov
xchg
xchg
sub
dec
adc
jno
add
or
sbb
inc
shr
out
cmp
xor
mov
lds
js
sbb
idivb
cmpsb
add
adc
xor
ja
mov
adc
clc
pop
push
ret
mov
ja
fucom
mov
mov
jne
sub
xorb
fpatan
fucomip
fs
xor
mov
or
fistpll
gs
mov
daa
and
les
fldt
std
fs
into
ljmp
pop
aam
imul
lret
scas
fdivrl
or
xchg
dec
adc
cmp
dec
imul
inc
jl
lahf
sub
pop
test
inc
sub
sbb
in
dec
inc
sbb
aad
ja
and
xchg
mov
cwtl
in
outsb
sbb
inc
xchg
cmp
jecxz
ret
add
test
pushf
sbb
cli
cltd
pushf
je
dec
lret
push
aas
cmpsb
mov
mov
fisubrs
cmp
and
out
test
mov
or
mov
push
insl
lret
inc
sub
push
or
pop
outsb
pop
pusha
les
inc
mov
push
in
call
sbb
aaa
add
bound
fcomi
das
xchg
push
and
inc
jge
sbb
xor
push
hlt
cmpsl
fs
andw
sbb
dec
jb
xor
fstl
out
and
pop
out
mov
cwtl
mov
or
pop
mov
popa
lahf
mov
xchg
and
pushf
iret
xor
clc
add
cmp
mov
dec
dec
sahf
push
imul
sub
jne
jg
fisubrl
add
pop
jp
pop
andb
jecxz
cmp
mov
adc
repz
arpl
lcall
fcompl
jge
lahf
mov
push
scas
andb
fucomp
pop
addr16
and
sbb
push
xor
mov
or
add
icebp
jno
push
mov
inc
pop
and
jle
popf
ljmp
sbb
inc
add
cld
pop
mov
push
das
cld
dec
add
mov
lret
sbb
and
dec
fidivrs
add
insb
add
sub
push
mov
cli
filds
je
fmulp
leave
or
xchg
add
xchg
fildl
pushf
pop
lock
out
and
movsl
push
mov
mov
icebp
or
xchg
pop
adc
fisubs
dec
cmp
ss
mov
jbe
jnp
cli
fildll
out
out
negb
adc
mov
int3
out
inc
add
stos
push
sub
lahf
arpl
test
outsb
mov
incl
aad
cmp
pushf
fisubrl
inc
jg
ss
add
adc
out
stos
xor
cmp
test
lahf
ret
cltd
out
sub
pop
push
lcall
inc
and
cmp
lods
inc
ret
or
and
add
mov
dec
loop
or
add
add
pop
subb
jae
lcall
loop
jo
cld
stos
pushf
jnp
data16
adc
mov
cmp
aam
inc
sbb
add
and
shrb
ljmp
lahf
cmp
jnp
add
push
fcoml
scas
test
incl
add
fisttpll
mov
mov
scas
adc
subps
inc
dec
ret
inc
sbb
call
and
dec
std
fsincos
dec
pushf
add
hlt
jae
xchg
inc
and
je
mov
xor
mov
inc
les
dec
sbb
inc
sub
ret
inc
inc
xor
std
stos
dec
cmp
pusha
les
bnd
push
dec
add
xchg
push
add
enter
stos
in
inc
mov
jl
pop
rorb
add
mov
in
mov
outsb
and
sbb
cmp
xchg
loop
mov
and
xchg
in
scas
mov
mov
inc
scas
and
add
loope
icebp
outsb
sbb
loop
push
mov
aad
sub
and
std
and
adc
ss
or
dec
loope
xchg
decl
pop
mov
fcmovbe
dec
loop
lds
dec
scas
in
les
pop
xor
test
jg
ja
mov
cs
outsb
xchg
pop
adc
push
jg
dec
loop
out
sbb
cmp
adc
sub
push
xchg
push
insl
mov
pusha
mov
filds
mov
push
mov
lods
testl
and
iret
add
lods
pop
adc
dec
jge
xchg
es
aad
call
fwait
fs
fwait
or
add
adc
bound
inc
lahf
and
push
cmp
je
loopne
enter
les
lcall
into
or
adc
ret
ss
add
mov
aaa
clc
add
stos
cli
or
ds
pop
pusha
fucom
in
ret
rclb
add
xor
pop
jbe
add
loop
sbb
mov
rcrb
mov
movsb
into
shrb
lea
mov
add
test
hlt
mov
jno
bound
push
push
sbb
shlb
jecxz
nop
loope
and
loop
mov
fidivs
nop
add
cmp
test
ss
rcll
xchg
ret
adc
jb,pt
pop
lock
mov
sarb
pop
cli
call
inc
inc
pop
outsb
dec
push
mov
test
divl
lret
and
jle
dec
dec
cmp
jl
aam
push
sub
mov
fbstp
punpcklwd
test
inc
jmp
out
or
and
ret
xchg
sbb
sub
repnz
pop
daa
sub
ret
push
dec
int3
push
mov
jp
jmp
and
sbb
fs
sbb
cmpsl
aas
push
mov
mov
jnp
adc
mov
and
std
mov
add
cltd
jne
cmp
fidivrs
mov
sbb
out
add
jbe
aam
inc
outsl
in
pop
sub
mov
mov
push
mov
lea
mov
sub
arpl
sub
push
mov
sbb
add
jb
fdiv
inc
insl
xchg
xchg
sub
ret
push
xor
nop
aam
add
decl
stc
pushf
or
and
jl
lret
mov
aam
and
outsl
or
xchg
les
out
popa
cmpsb
or
mov
shlb
insb
incb
cmpsb
pusha
insb
dec
sbb
cwtl
int3
insl
dec
push
mov
jg
mov
out
stos
jo
xor
subb
ret
mov
dec
shrb
mov
push
lock
sbb
enter
sub
lds
clc
dec
pop
inc
aas
sbbl
popa
cmpl
mov
out
jns
pushl
xchg
pop
mov
jl
ficoms
les
ljmp
add
cwtl
ds
fisubs
push
mov
scas
test
insb
sbb
adc
push
jmp
dec
int3
fildl
lcall
add
adc
mov
or
loope
fistpl
pop
loope
addb
gs
dec
nop
outsb
fdiv
fwait
xchg
sbb
pop
int3
or
incl
enter
xchg
js
and
test
and
or
pop
das
stos
jg
inc
fs
hlt
pop
shlb
testb
pusha
lods
jb
fwait
incl
scas
or
js
dec
sbb
add
scas
call
or
mov
add
test
sbb
imul
jmp
jns
data16
lret
jmp
lods
push
and
popa
flds
push
xor
inc
pop
subb
xor
cmp
mov
lea
lds
mull
mov
pop
push
cmp
xor
inc
into
mov
pop
mov
mov
out
mov
iret
das
scas
stos
jbe
adc
pushf
sbbb
add
jl
stos
mov
xor
pop
xor
xor
cs
push
in
adc
lds
into
and
adc
pop
nop
lods
rcrb
jg
je
lods
dec
mov
mov
sarb
push
pop
fists
call
in
adc
mov
imul
outsl
cltd
add
test
adc
mov
push
stos
iret
data16
mov
adc
out
sbb
adc
sub
call
or
jbe
pusha
xor
outsl
call
sahf
dec
mov
push
jecxz
cld
cld
xor
pop
jmp
dec
or
xchg
mov
pop
inc
xchg
cmp
add
subl
std
pop
jg
jb
jl
fstl
fidivs
fs
arpl
or
sub
lods
call
pop
cmp
cld
inc
xchg
lods
shrb
repnz
adc
sub
movl
lret
mov
xor
mov
inc
jbe
inc
adc
mov
or
jle
jl
mull
out
and
daa
cmp
cmovl
jg
pop
repz
sbb
or
mov
ds
adc
add
and
jg
fists
xor
andb
lahf
cmp
int
push
outsl
dec
pop
mov
mov
pop
leave
add
test
xchg
push
cld
ljmp
pop
in
call
pop
mov
shll
push
loope
das
pop
add
and
push
push
movsb
or
pop
dec
aad
cmp
and
ljmp
push
adcb
fisttps
pop
mov
jecxz
jg
loopne
test
jmp
std
add
and
lock
movsb
push
add
es
mov
mov
adc
dec
sub
dec
xchg
add
xor
add
mov
repz
insb
mov
mov
add
leave
fdivrl
sbb
je
push
out
loope
mov
or
leave
icebp
loop
inc
jge
es
cmp
rorb
mov
lret
outsl
out
push
add
xor
in
popf
push
lods
dec
ds
inc
cli
cmp
ss
cld
out
push
push
adc
ret
jbe
fisttpl
push
inc
pop
cmp
and
push
mov
jecxz
in
loope
jp
mov
fwait
js
ss
andl
fbstp
dec
les
push
dec
rol
pop
pop
ljmp
fs
enter
fcompl
mov
adcb
cmp
push
fbstp
ficompl
or
mov
rolb
jecxz
or
js
mov
popa
and
pop
push
jns
fsubrl
aam
repnz
pusha
fstl
inc
cs
mov
loopne
ret
rcrb
cwtl
jl
mov
mov
push
pop
test
xor
xchg
enter
test
pop
mov
movsb
and
inc
cmp
inc
ret
cmp
jl
rorl
xchg
adc
nop
cmp
lock
insb
loope
xor
sub
sub
mov
jp
mov
stc
sahf
jns
rcll
sarl
ficoml
mov
insl
out
popa
arpl
sub
pop
lret
mov
xor
cmp
fldt
fwait
ret
insb
loop
enter
orl
in
addl
loopne
les
ljmp
mov
cmc
xchg
mov
or
cmp
sub
stos
dec
hlt
mov
jo
test
xor
mov
repnz
jbe
inc
mov
push
dec
aaa
insb
xchg
jo
mov
scas
and
mov
add
cmp
or
imul
sbb
push
pop
add
fistps
xor
xchg
mov
and
movsb
push
fcoms
pop
xor
and
sub
mov
mov
inc
daa
mov
sub
lret
xlat
xor
mov
xor
movsb
mov
fidivl
cs
sub
or
outsb
fimuls
mov
out
pop
mov
mov
xlat
push
sbb
xor
stos
dec
jge
mov
and
inc
ljmp
into
mov
inc
lods
loop
out
nop
outsb
aas
jp
rclb
ficoml
cs
not
pushl
add
outsb
lock
loopne
add
mov
pop
sub
js
fs
push
inc
popa
ja
pop
lret
and
mov
call
and
xlat
and
or
cmp
lock
pushl
adc
jo
dec
ror
cmpsl
lcall
jno
inc
ret
adc
test
stos
incl
lcall
nop
sti
repnz
cmp
loope
xchg
cmp
push
clc
add
cli
scas
push
outsl
or
inc
xor
xor
mov
rcll
mov
cmpsb
mov
add
incl
fildll
cwtl
ds
test
fisubrl
rorl
lds
movsb
add
inc
push
dec
cmp
inc
push
test
sarb
or
outsb
push
js
fsubp
xor
mov
shrb
enter
mov
dec
and
sbb
int3
mov
lock
inc
addb
sbb
and
pushf
jge
mov
jle
dec
adc
xor
fldt
movsb
loope
inc
mov
or
das
sub
push
sbb
daa
pop
pop
pop
sahf
cmp
testb
lods
push
add
movsb
js
stos
pop
and
inc
sbb
adc
cmp
inc
cmp
je
mov
ss
out
outsl
call
shl
dec
rorl
push
inc
jg
scas
shlb
std
in
xchg
rorb
xor
adc
fwait
in
adc
lea
mov
and
scas
pop
xorl
mov
loopne
sbb
imul
add
hlt
push
adc
fstpl
dec
sbb
jnp
ret
pop
xor
jb
sahf
movsb
stos
pushf
xlat
adcb
loopne
push
cmpb
popa
mov
push
ret
jecxz
pusha
int3
popa
cli
cmp
rcr
sbb
in
pop
or
pop
sbbb
sub
std
popf
sbb
dec
xchg
and
lcall
jne
dec
sbbb
aad
xlat
jmp
xchg
mov
xchg
mov
decl
sub
xorb
xchg
sahf
es
fs
push
clc
leave
pop
adc
or
and
lods
push
lret
int
dec
sbb
dec
test
loop
out
stos
xchg
or
cmpsb
mov
sbb
and
insb
jbe
std
scas
out
pop
or
fs
push
in
sub
mov
mov
decl
pusha
cltd
mov
adc
sub
jg
push
mov
sub
add
fwait
cmpsl
gs
fimull
outsb
les
scas
mov
sti
fistl
in
je
ljmp
jp
incl
sbb
push
pop
push
in
aaa
cld
or
xorl
mov
and
shll
xchg
add
mov
add
sbb
jo
xor
enter
outsb
mov
inc
jo
fnstenv
shl
sub
fwait
in
aad
test
or
sub
dec
outsl
push
in
nop
jo
inc
lret
cld
es
rorb
xchg
mov
xchg
jle
push
xchg
rorb
ds
rolb
icebp
daa
shlb
test
dec
pop
cmp
je
or
mov
ljmp
ds
out
stos
loop
mov
pushf
inc
mov
or
addr16
test
sub
push
addr16
sbb
inc
pop
addb
xchg
lahf
push
mov
lock
push
call
mov
je
lock
cwtl
adc
jb
dec
mulb
scas
push
test
mov
insb
mov
sub
mov
or
sub
stc
and
mov
andl
lahf
sub
faddp
mov
movsl
xor
mov
repz
jbe
lds
lea
or
lea
lods
pushf
xor
cmp
shl
jg
and
pop
jl
lret
std
mov
adc
add
jle
lcall
icebp
push
int
repnz
lret
jg
es
frstor
jns
jge
sub
ret
mov
xor
shlb
add
movsb
xchg
fsubl
dec
jg
insl
lock
subl
adcl
js
rcrb
cld
test
mov
scas
pop
xchg
adc
bound
and
xor
and
pop
push
lock
ret
xchg
call
js
loope
das
shr
icebp
pushl
dec
pusha
add
imul
adc
fadds
pushf
adc
xor
mov
lcall
imul
or
push
pop
mov
adc
jge
jno
out
cli
mov
and
and
test
jg
mov
cwtl
call
or
lahf
addl
sub
loopne
nop
enter
scas
push
pop
push
icebp
or
cmp
out
mov
inc
sbb
and
ret
pusha
ret
call
or
movnti
adc
jg
cltd
cmp
xchg
enter
jno
xchg
mov
ficomps
mov
and
lcall
jmp
or
dec
inc
add
xor
mov
ljmp
in
cmp
mov
mov
outsb
add
scas
push
jb
nop
adc
xchg
sbb
sub
and
out
sbb
rolb
adc
shl
pop
das
pushf
int3
mov
or
fidivl
mov
or
mov
pop
xor
das
movsb
je
js
mov
and
mov
mov
inc
pop
or
dec
adc
lock
rol
jno
aaa
bound
cs
pushl
add
inc
mov
xchg
push
mov
sbb
jmp
lock
jb
subl
mov
push
in
push
and
mov
mov
scas
or
clc
mov
add
add
mov
jl
cli
sbb
outsb
in
fs
lcall
sub
cmp
dec
xchg
ds
inc
push
push
xor
add
das
mov
mov
add
in
imulb
push
push
adc
add
popf
cs
dec
inc
adc
fbstp
xchg
repz
mov
sub
add
push
dec
jl
je
std
pop
mov
xchg
push
insl
lret
addr16
test
clc
inc
ds
mov
mov
stos
or
test
jmp
aad
push
jo
hlt
mov
cmc
out
mov
and
dec
mov
xor
ficoml
rolb
and
dec
insb
inc
xchg
sub
sub
daa
mov
or
adc
sub
cmp
dec
push
mov
call
hlt
and
loop
es
xchg
arpl
add
cmp
mov
xor
repnz
and
out
scas
inc
ret
add
push
inc
mov
xor
and
add
lods
stos
dec
movsb
mov
imul
inc
and
cmp
inc
into
movsb
xor
js
push
mov
mov
in
outsl
or
outsb
xor
stos
mov
cmpsb
fwait
std
testl
push
push
out
dec
je
inc
outsb
adc
xor
cmp
sbb
aad
nop
or
ret
adc
fwait
mov
clc
ljmp
mov
pop
mov
les
das
and
jg
jbe
in
mov
ret
bound
or
sarb
shrl
leave
leave
inc
sbb
cmpsl
test
dec
cltd
inc
inc
pushl
lock
ja
push
pop
fsubs
pop
insl
lcall
fdivr
les
movsb
outsl
mov
movsb
sub
sbb
push
inc
sahf
imulb
mov
loope
jg
jo
and
dec
sub
pop
jae
sub
push
and
loop
fmuls
mov
loope
je
jp
arpl
aad
cmp
test
jge
adc
mov
inc
lods
push
sub
aas
test
jle
sub
jb
je
adc
ret
push
insl
xor
js
in
imul
and
in
mov
sbb
gs
push
jmp
mov
dec
loope
into
hlt
ficomps
adc
aad
mov
and
push
idiv
push
shlb
cmpsb
shl
into
mov
pop
mov
mov
xor
mov
ljmp
sbb
sub
and
push
cmpsb
movsl
sbb
inc
xchg
sub
cmpl
popa
mov
add
idivl
repnz
mov
adc
fiaddl
mov
mov
dec
insb
shl
aas
dec
mov
test
pop
adc
jecxz
push
fildll
mov
mov
cmp
lahf
decl
mov
stos
mov
lods
push
daa
cmp
mov
adcb
mov
es
mov
daa
lcall
inc
inc
push
or
xlat
orl
adc
bound
pop
xchg
jmp
movsb
mov
push
jg
call
jle
adc
lock
test
or
or
ds
xor
adc
pop
repz
inc
push
jbe
add
sub
pop
pop
hlt
pushl
fldl
or
mov
add
ja
lock
mov
iret
out
mov
push
cwtl
incb
es
mov
loop
mov
fs
adc
jmp
in
out
ja
mov
dec
leave
jle
cli
ss
adc
lock
and
outsl
jl
and
mov
int
rcl
mov
enter
cmp
cmpsb
xor
das
sub
inc
fldl2e
sar
inc
bound
psrld
mov
in
cmpsl
jmp
dec
in
ds
clc
fmuls
or
je
mov
popa
ljmp
test
loopne
pop
cmp
sbb
mov
mov
ret
push
jmp
outsb
inc
inc
es
adc
sahf
xor
jp
clc
idivb
jle
mov
mov
push
in
push
scas
xchg
rclb
adc
xor
push
shll
cmp
inc
jp
push
xor
imul
aad
in
enter
mov
mov
cmp
imul
pusha
mov
scas
mov
cmp
out
dec
xlat
shl
add
es
lds
sbb
xor
jecxz
lds
cld
cltd
inc
cwtl
in
mov
fcomps
mov
pushf
xchg
clc
adc
xchg
mov
icebp
inc
push
sbb
jo
xor
inc
shrl
nop
or
fwait
adc
bound
pop
pop
data16
in
jns
clc
mov
adc
loope
pop
sbb
push
mov
or
test
imul
adc
incl
or
sbb
cmp
cmp
ss
sbb
xor
sub
not
bound
ret
pop
popa
mov
cmp
mov
mov
enter
outsl
add
test
les
sar
pusha
mov
mov
xor
push
sbb
cs
xchg
jb
cmp
je
loopne
add
fcom
sbb
in
fists
cmp
arpl
fs
out
or
push
pop
test
inc
test
xchg
mov
aas
inc
adc
add
mov
add
pop
aad
les
inc
leave
xchg
push
mov
fwait
into
jl
cmp
push
loop
repz
mov
pop
bound
lahf
les
mov
les
sbb
mov
or
adc
mov
pop
inc
popa
mov
sbb
fs
and
push
pushf
icebp
pop
inc
push
dec
imul
shl
and
adc
mov
std
cmpsl
sbb
movsl
jmp
adc
push
sbb
ljmp
dec
cmpsb
xor
lock
sarb
data16
adc
cmp
cmp
clc
add
sub
rolb
dec
mov
mov
lods
sub
clc
imul
inc
xlat
dec
lcall
shl
inc
xchg
jo
pop
jns
add
push
jmp
mov
fcmovbe
aam
inc
aad
inc
and
sar
mov
and
adc
mov
mov
nop
shrb
roll
mov
mov
cmpsb
jo
in
sub
insl
leave
push
mov
je
repz
pop
mov
push
enter
inc
dec
loope
mov
test
es
push
mov
or
stos
pop
lea
mov
cld
adc
and
add
jg
mov
sub
sbb
sbb
xor
sbb
xor
add
out
rcrb
push
lahf
sbb
sbb
xchg
dec
pusha
lds
mov
pop
mov
mov
out
icebp
fnstcw
sub
jne
mov
mov
or
jle
ljmp
std
shll
lock
dec
cmp
add
les
cmpsl
hlt
add
fwait
shlb
pop
or
xlat
inc
aas
or
mov
scas
add
call
mov
lret
lahf
adc
nopl
mov
imul
inc
addl
jno
cmc
add
mov
imul
dec
std
call
jp
call
movsb
lods
pop
adc
push
cmp
pop
fs
fs
lcall
or
inc
int
add
clc
jne
mov
xchg
xor
fisttpl
nop
lea
leave
popf
stos
cwtl
mov
push
incb
dec
call
adc
test
push
pop
mov
inc
jg
pop
stc
int3
stc
aaa
fstl
adc
call
decl
lahf
icebp
lret
fnstcw
lret
add
je
cmp
icebp
xchg
aas
scas
xor
test
call
mov
adc
pop
xchg
sub
xor
outsb
cmp
push
es
push
and
jb
loop
pushl
addr16
rcl
jmp
pop
xchg
lds
stc
repnz
jmp
ljmp
or
push
repnz
ret
cmpsb
jbe
or
jo
int3
sbb
lcall
test
push
ss
cli
stos
ds
test
call
sub
mov
test
mov
lods
stc
out
aaa
jmp
or
pop
int
int
jo
or
movb
icebp
xchg
lea
jmp
orl
push
test
push
gs
orb
push
test
push
jmp
movsl
push
push
insb
jns
jb
xchg
xor
cld
hlt
mov
test
sub
push
push
adc
xor
pop
pop
aas
lods
push
and
int3
jns
stc
jno
mov
lahf
jl
fsubr
or
push
sub
jg
jmp
push
stos
mov
orb
rol
xor
and
out
ror
loopne
ljmp
inc
cs
jbe
fdivs
jae
fldenv
decl
insl
adc
dec
scas
mov
mov
popf
cmpsb
movsb
fs
ljmp
in
pop
out
out
lock
sbb
pop
movsb
mov
insb
or
add
jg
mov
inc
mov
inc
adc
mov
lods
adc
mov
jl
out
icebp
cmp
data16
std
mov
decl
mov
and
ja
push
ljmp
daa
push
mov
cld
jb
xor
in
icebp
out
aam
dec
mov
lcall
inc
pusha
or
xchg
adc
add
and
stos
sahf
mov
push
mov
push
mov
rcrl
test
cltd
pop
mov
icebp
jmp
imul
cmpsb
xor
inc
js
adc
in
lods
mov
cmp
lcall
loopne
xor
imul
outsb
andb
sbb
mov
repz
lcall
call
add
inc
clc
jg
xchg
fisubs
scas
dec
ficoms
outsl
jg
incl
in
or
inc
sub
dec
dec
pop
out
xchg
out
ja
call
sti
in
push
cmp
jnp
stos
mov
stc
arpl
add
insb
cs
iret
mov
mov
ret
ds
fnstcw
jnp
int
xchg
pop
into
in
jbe
xchg
ss
cmc
mov
iret
and
call
mov
jae
lahf
add
repnz
pop
arpl
pop
sbb
jge
jb,pn
pushl
cmp
sub
add
roll
jo
adc
push
aas
scas
xor
or
cmp
add
pushl
mov
pop
adc
clc
and
push
mov
xor
mov
mov
or
push
xor
push
cmc
mov
mov
iret
sub
inc
xchg
lret
ds
jmp
pop
icebp
xchg
fcmovbe
iret
pop
mov
pushl
pop
dec
stos
ficoms
adc
je
mov
fistl
test
stos
pushf
pop
imul
test
aas
push
cmpsl
fistl
std
pushl
push
pop
jg
lock
dec
data16
lcall
push
inc
add
and
jns
mov
orb
xchg
jmp
stos
mulb
ja
cmp
or
cwtl
incl
pusha
negl
lods
mov
sbb
and
and
lcall
icebp
movsl
xchg
mov
testb
add
xlat
fildl
clc
decl
sbb
push
or
xchg
out
sub
xchg
loopne
and
sub
fsubr
push
clc
or
fiaddl
fistps
and
fcmovnbe
out
sub
xchg
cmp
outsl
xchg
push
lea
cmp
decl
jmp
mul
fldenv
xchg
cli
inc
inc
in
push
aad
push
or
dec
adc
jnp
xor
jecxz
push
je
sub
icebp
cmc
cmp
incl
sbb
cmpl
mov
pop
outsb
hlt
stos
frstor
xor
cmp
cld
ret
int3
cwtl
aas
or
adc
or
adcb
decl
fdivl
shr
cs
lds
das
adc
or
or
pop
dec
mov
and
lcall
dec
mov
pop
xchg
or
push
mov
mov
aam
push
lret
insl
xchg
out
pop
mov
pushl
cltd
cmc
jae
xchg
dec
mov
jo
movl
mov
repz
mov
jno
jae
ror
adc
in
arpl
sbb
call
adc
daa
pop
sub
in
mov
fs
cmpb
mov
shlb
outsb
es
lods
xlat
fiadds
dec
adc
cs
call
sti
inc
cli
outsb
inc
enter
scas
inc
adc
stc
ljmp
sbb
xor
arpl
call
jns
das
mov
js
imul
lret
mov
cld
ljmp
pop
xchg
xchg
xor
insb
jo
ljmp
xor
mov
test
push
mov
dec
rorb
subl
inc
add
xchg
push
sarb
rol
mov
sub
into
cmpsl
and
into
and
inc
pushl
xor
rcrb
js
aad
into
push
or
outsb
dec
leave
sbb
das
shll
pusha
in
cmp
dec
nop
lds
adc
inc
cmc
repnz
scas
into
or
inc
pop
fdivr
or
sahf
lock
push
repnz
xchg
sub
lcall
mov
ret
cmpsb
sahf
inc
push
aad
js
dec
nop
in
lock
jo
nop
sbb
cmp
mov
mov
sbb
xlat
inc
popf
pusha
xorl
out
mov
inc
push
mov
das
ljmp
sar
mov
dec
fidivrl
nop
loopne
jns
int3
mov
sbb
call
mov
push
in
xor
adc
dec
xor
cmp
pop
push
pop
clc
fsubl
jmp
cmp
repnz
rcr
int
inc
js
adc
ja
mov
fcmovnbe
fwait
mov
repz
stos
leave
in
pop
imul
bound
xchg
loop
pop
jbe
sub
or
lcall
push
outsb
test
sbb
jae
test
fs
jmp
test
mov
cmp
fisubs
shl
enter
cmp
sub
call
dec
cli
sub
jo
les
mov
je
mul
fldt
fsubrs
out
mov
and
mov
mov
mov
negb
idiv
leave
adc
xchg
inc
repz
int3
inc
mov
sub
mov
lock
out
mov
ds
dec
inc
mov
mov
adc
mov
push
jmp
inc
into
outsl
lods
dec
add
fisttps
mov
jmp
mov
mov
dec
jns
xor
jmp
or
ljmp
repz
xorl
inc
mov
pusha
daa
add
pushl
inc
stos
push
pop
pop
bound
insl
xchg
je
inc
into
das
cmpsl
sbb
sti
mov
movsl
fbld
ljmp
sub
mov
push
sub
xchg
loope
mov
clc
ja
mov
movsl
rorl
ljmp
aam
cs
jecxz
push
jmp
or
mov
lock
cmpsb
arpl
pop
cmp
mov
and
mov
cmpl
push
or
lea
and
shl
call
cli
adc
adc
cltd
ljmp
hlt
adc
push
jae
or
filds
adc
scas
mov
pusha
inc
in
or
jg
jg
ret
sbb
gs
ret
adc
cmpsl
jnp
into
fdivl
xchg
cltd
inc
pushl
fwait
xor
or
mov
dec
pop
lds
daa
movsb
mov
and
je
jg
pushl
fldt
out
fldcw
imul
mov
ds
dec
insl
pusha
or
call
and
js
sbb
push
adc
push
out
mov
mov
dec
mov
mov
incl
sbb
xor
add
sub
add
pop
cwtl
addb
testb
decl
add
xor
jge
pushf
jns
orl
push
int3
sub
and
iret
adc
iret
pushf
mov
xchg
stos
push
call
mov
ljmp
pop
mov
out
in
mov
and
mov
inc
xor
scas
pop
ljmp
add
adc
cmp
inc
sbb
or
mov
fstpt
mov
adc
sbb
lods
push
sbb
pop
setg
and
fisttpll
fstpl
push
sarl
pushl
std
jg
lcall
add
std
ljmp
mov
or
mov
decb
in
add
xchg
loopne
movsl
cli
xor
adc
cs
outsl
pusha
mov
out
scas
and
enter
testl
ljmp
ljmp
stos
mov
imull
incl
sub
xlat
fcmovnb
gs
call
push
xor
imul
mov
xchg
loope
lret
aam
cmp
cmp
jp
fwait
xor
sub
and
mov
adc
aas
call
sub
pop
mov
subb
add
xchg
bound
popa
jecxz
mov
lods
xor
test
data16
lcall
scas
mov
shll
insl
mov
clc
imul
mov
pop
sbb
mov
or
loopne
pop
push
mov
adc
call
ja
mov
jns
fadd
scas
jno
hlt
mov
out
mov
dec
outsl
sub
lcall
test
xchg
sbb
cmp
loopne
shrb
test
loopw
jmp
test
cmpsl
mov
jo
out
xchg
cmpsl
shll
and
sub
mov
clc
cmp
or
mov
or
ss
icebp
pop
incb
roll
outsb
sahf
push
sub
inc
adc
xchg
es
adc
push
jecxz
xchg
cs
mov
and
rorb
out
xchg
fbstp
cmp
push
dec
sub
mov
or
jmp
aam
mov
mov
cmpsl
and
enter
popa
int
outsl
pop
cmc
enter
into
mov
dec
mov
rcrl
cmp
test
push
in
dec
push
dec
lret
mov
sahf
loop
pop
push
pop
jg
sbb
sbb
mov
dec
stos
pop
jbe
push
push
mov
jbe
movsb
movsb
iret
mov
pushl
xor
pop
iret
and
imul
inc
addps
daa
mov
sbb
aam
jbe
decl
push
and
mov
stos
mov
jns
data16
cli
sbb
pop
mov
sub
cld
sbb
shr
pop
in
inc
cmpsb
cmpsl
push
lods
sbbb
pop
andl
add
fcmove
fldenv
push
inc
xor
shl
xlat
popa
inc
ret
inc
sbb
int3
push
sub
sbb
inc
sbb
lret
xor
push
dec
gs
outsl
pop
inc
inc
mov
out
std
mov
mov
push
loop
or
aam
mov
jg
imul
adc
pusha
mov
push
or
xchg
insl
xchg
or
call
add
lods
fsubr
mov
int3
inc
pop
andl
dec
cmp
std
jmp
out
adc
push
pop
pop
xor
mov
scas
dec
fdivr
call
add
xor
xor
sub
lods
movl
test
sbb
mov
ret
icebp
add
rorl
cmp
and
adc
imul
jnp
add
mov
jl
jno
dec
out
mov
push
jne
lods
push
xchg
adc
iret
fldt
sahf
inc
mov
popf
push
mov
inc
push
jge
dec
popa
jo
test
test
pushl
clc
movsb
mov
mov
repnz
sbb
lds
out
jnp
mov
xchg
lret
pushl
inc
pop
xchg
das
aam
pop
add
jge
mov
xchg
jmp
vpunpcklqdq
dec
jg
js
add
aaa
jp
inc
and
std
or
xchg
ror
inc
and
pop
test
or
jmp
repz
jmp
mov
fs
sbb
mov
fimull
xchg
jne
ret
daa
mov
jb
call
pushf
shll
cmp
add
xor
push
je
sub
sub
subl
sar
ljmp
push
sub
int3
fsubrp
mov
mov
add
dec
cmc
mov
jg
cmp
jno
mov
arpl
in
in
shrb
xor
pop
or
jne
idiv
jmp
or
out
enter
cmp
movsl
dec
cmp
imul
push
jne,pn
into
dec
cwtl
cmp
fbld
mov
cmp
or
dec
adc
pop
jge
icebp
out
adc
dec
mov
pop
cmpb
sarb
pop
fsubrs
nop
dec
xlat
sub
sti
loope
fcomps
and
fcomip
pushl
jp
mov
leave
mov
push
pushf
jg
xor
ljmp
lahf
add
xchg
jp
les
inc
adc
jnp
int
jle
ljmp
dec
and
xor
je
sti
mov
mov
push
dec
dec
cmp
xchg
and
ljmp
mov
jo
ret
cmpsb
inc
lcall
test
fstpt
shrb
fldt
fldl
xchg
sub
dec
xor
fsub
pop
loopne
inc
cmpsb
and
push
call
push
movsb
mov
cld
popa
mov
fisubl
les
incl
into
xor
cmp
xchg
sbb
icebp
jmp
adc
xchg
cltd
aaa
adc
cmp
mov
out
inc
inc
dec
fwait
pop
adc
int
pop
loopne
push
pop
das
repnz
aaa
out
dec
xlat
out
or
cmp
ds
fwait
mov
mov
out
dec
pushl
js
ds
aad
mov
faddl
pop
jmp
loope
cmp
xlat
movsb
xor
cmp
call
pop
jo
scas
ss
lock
inc
dec
sbb
inc
jg
pop
pop
mov
pop
jg
pop
push
lcall
pop
cli
xchg
inc
in
ja
push
mov
sahf
inc
arpl
lods
inc
sbb
stc
and
cmp
js
sbb
lods
inc
jl
pusha
mov
xor
shll
pop
mov
decl
push
add
pusha
xchg
mov
and
js
testl
decl
outsl
cltd
stos
shrl
push
loopne
xchg
pop
push
push
xor
cmc
call
or
pop
cmp
lods
push
loopne
imulb
cltd
pusha
leave
inc
sub
aas
jl
out
call
outsb
js
dec
xchg
scas
cli
call
add
daa
adc
and
lcall
cmp
cmpsb
mov
add
iret
jno
xor
mov
sbb
sub
incl
push
lret
sti
jg
adc
movsl
lods
out
jbe
add
stos
out
in
sub
pop
cmp
or
push
add
pushf
lret
cmp
jbe
jg
cmp
inc
shlb
xchg
stc
arpl
xchg
hlt
fimull
sbb
adc
in
stc
shrb
fsub
inc
lea
add
jmp
cli
scas
lcall
inc
mov
iret
cmp
mov
outsl
push
rcl
cmc
mov
pushf
mov
sub
mov
ret
xor
add
in
arpl
pop
into
fstl
out
adcb
jne,pt
out
fcomps
dec
rclb
ss
sub
cli
push
xor
xchg
adc
scas
subb
ljmp
mov
lea
aad
pop
add
fs
cs
jg
push
cmc
jne
in
in
add
ja
enter
sarb
into
xchg
enter
insb
xor
xor
mov
ja
jle
inc
xchg
push
cmp
in
or
fcomi
sub
mov
xor
and
push
out
inc
and
jg
fisttpll
popa
add
daa
nop
fchs
mov
or
es
ja
inc
jg
movsl
int
ljmp
in
or
mov
mov
aaa
and
ljmp
int3
xchg
cmc
repnz
cltd
mov
or
cli
mov
out
cmpsl
pop
icebp
mov
push
lock
int
sarb
cmp
add
lcall
sbb
daa
sub
icebp
test
out
fcomps
mov
jmp
adc
inc
das
sub
pop
push
xlat
cmp
imul
push
das
mov
inc
lret
push
push
push
stos
adc
cmpsb
pop
sub
jle
imul
jae
jae
ficoml
into
dec
imul
jp
repz
fsubl
mov
stos
xchg
lcall
test
xlat
dec
movsb
insb
cwtl
mov
cmp
fs
scas
mov
mov
stos
stos
scas
sbb
and
sub
fdiv
push
jnp
ljmp
xlat
inc
xchg
xor
popf
or
fiadds
jge
sti
je
mov
push
push
xchg
fs
jb
ss
jp
dec
mov
inc
call
jne
sbb
cs
mov
jns
mov
jmp
inc
std
mov
xchg
mov
mov
fimuls
aas
lods
and
push
les
fsubrl
jmp
test
sbb
sbb
sub
ss
jne
subb
jno
outsb
push
repz
lcall
mov
es
dec
out
or
sub
push
repnz
lock
repnz
incl
xor
adc
mov
xchg
jb
repz
shrb
xchg
leave
roll
jge
movsb
and
icebp
lcall
xchg
xor
push
xchg
sysexit
pop
fs
xchg
roll
subl
pushf
add
inc
ficoml
mov
xor
movsl
xchg
xchg
imul
or
es
pop
lods
add
std
sahf
mov
adc
push
popf
ror
xchg
or
xchg
imul
mov
inc
mov
xor
pushl
and
cmp
sub
push
pop
mov
pop
negb
adcb
decl
and
pop
dec
dec
dec
jae
pusha
lds
inc
and
jmp
xor
xchg
push
xchg
cmpsl
rclb
mov
lods
adc
cld
pusha
sahf
inc
sub
cmpsb
frstor
add
icebp
add
xchg
fisttps
push
scas
mov
cmpl
call
cmp
xchg
xlat
xor
push
sahf
pop
sbb
jbe
pop
sub
jne
scas
xchg
aam
push
add
inc
mov
cwtl
xchg
outsb
out
pop
push
xor
jge
adc
xchg
mov
int3
adc
cmp
dec
fsubl
adc
cmc
movsb
cmp
test
sahf
dec
mov
orb
loopne
notl
mov
mov
cltd
sti
dec
lret
xchg
cld
ljmp
dec
int3
xor
sbb
xchg
sub
scas
sub
sbb
repz
add
lcall
jns
mov
lods
dec
sbb
pop
rorl
mov
fistpl
call
jg
cmp
pop
int3
mov
pop
adc
jb
cli
adc
stos
mov
daa
incl
fcmovb
xor
dec
imul
adc
leave
mov
repz
jecxz
sti
pop
mov
or
lock
test
add
sar
pop
add
inc
ds
fsts
outsl
or
push
inc
push
lahf
hlt
flds
jg
out
lret
xchg
fisubs
sub
add
jae
pop
push
testb
mov
js
xchg
idiv
decl
fistps
out
jne
inc
decb
mov
mov
pop
pusha
sti
mov
inc
lods
call
sbbb
and
inc
ss
xor
pop
jb
call
xchg
hlt
sti
jns
add
ficomps
push
iret
xor
and
mull
push
xor
jmp
sbb
incb
push
mov
lahf
icebp
push
aaa
jecxz
pop
aam
int3
ljmp
pop
adc
lcall
adc
adc
lods
inc
clc
sbb
out
xchg
lods
sbb
das
in
into
sar
call
movsl
xor
aam
not
shll
push
xor
cmp
add
das
adc
mov
loop
ret
js
cmp
xor
popa
decl
lock
xchg
ja
out
mov
outsl
testl
pushl
stos
dec
ss
orb
test
dec
sbb
adc
or
iret
or
lcall
jae
inc
sbb
adc
pop
je
mov
mov
push
xchg
jnp
enter
mov
std
pop
jnp
xor
ret
jge
jmp
pushf
movsb
mov
xchg
xchg
xchg
inc
sub
lods
sahf
mov
jg
out
test
imul
mov
fs
hlt
dec
ret
lods
mov
int3
icebp
xor
adc
into
cmp
cvttps2pi
mov
fstpt
mov
imul
or
ljmp
call
sbb
pop
push
xadd
lcall
xchg
sti
xor
sub
enter
mov
call
popf
loope
in
nop
stc
gs
nop
lds
and
dec
rclb
push
push
xchg
xor
add
test
scas
cmp
add
in
push
sub
aam
mov
push
adc
jae
int
mov
dec
jnp
lret
dec
add
sub
mov
arpl
add
cli
decl
sahf
add
cli
shll
loopne
das
add
inc
in
mov
mov
aaa
cmp
ljmp
dec
sbb
or
nop
pop
pop
mov
xor
push
out
dec
out
das
or
push
cmpsl
push
movsl
out
nop
shlb
push
jo
call
sbb
mov
fmul
push
jno
cmpsl
loop
xchg
lcall
test
stos
insl
dec
pop
mov
xchg
push
add
sbb
jg
mov
or
pushl
adc
mov
inc
pop
mov
cmp
pop
cld
incl
sbb
imul
pop
pop
es
fistps
cmpsl
jae
and
sar
ja
scas
lret
adc
out
mov
out
bound
pushl
xlat
pop
fisttpl
stc
iret
subb
sbb
cs
jg
fucomi
idiv
sbb
imul
xchg
inc
addr16
cwtl
ja
insb
ja
movsl
lods
pop
jecxz
aam
xchg
call
lahf
scas
pop
sti
xchg
ds
inc
cmc
push
cmp
pop
in
push
lods
js
pop
sbb
jp
icebp
jmp
jp
fcom
jno
cmp
xchg
jns
jnp
loop
or
inc
mov
fwait
lret
mov
incl
cmp
in
xchg
les
and
xchg
xchg
pushf
scas
ret
dec
fwait
adc
and
and
sub
decl
ljmp
jb
lods
negl
and
xlat
dec
call
xor
fnsave
scas
xor
mov
dec
sbbb
aaa
mov
decl
cmpsb
aaa
mov
gs
sahf
or
jbe
xor
dec
fnstsw
les
leave
xchg
mov
out
cmp
insb
inc
lods
movsb
bound
xchg
push
jp
xor
and
pop
sti
imul
jns
loope
ljmp
or
mov
xchg
or
adc
or
and
mov
mov
imul
dec
sti
outsl
loopne
adc
loop
inc
dec
rcrl
dec
cmp
mov
nop
test
mov
and
xchg
cmp
stos
push
mov
cmp
jg
hlt
and
push
arpl
lret
dec
xchg
sahf
std
push
shll
cs
mov
or
or
cmpb
aam
sub
sbb
pop
sbb
repz
pushl
ret
das
test
add
dec
jg
mov
push
leave
sub
mov
in
mov
mov
daa
cld
lods
movsl
add
orb
incl
pushf
mov
loop
mov
movb
xchg
add
je
jle
hlt
sar
lcall
push
xchg
adc
mov
fldcw
xor
xor
das
test
dec
ret
dec
inc
js
aas
mov
add
loope
sbb
sahf
inc
push
movsl
jecxz
fbstp
aas
dec
dec
int3
pop
push
data16
sahf
js
mov
cmp
add
lcall
sbb
outsl
push
lock
add
punpckhdq
dec
jb
xchg
add
xchg
sub
faddl
ss
fisubl
lock
dec
loop
push
dec
dec
mov
insl
mov
fdivrp
fcomip
push
fmul
jb
mov
adc
add
movsb
dec
mov
push
sbb
or
mov
cmovp
pop
icebp
jbe
mov
mov
filds
mov
sbb
jp
and
mov
into
push
push
cmp
aam
xchg
pusha
adc
jecxz
xor
inc
sub
nop
cmp
mov
std
sbb
mov
clc
in
jb
xorb
into
mov
sahf
insl
scas
mov
in
jmp
pop
notl
dec
cmp
lcall
add
lret
fcompl
xchg
add
mov
or
cmpsb
cli
pop
sub
dec
cmp
inc
xchg
sub
push
push
push
pop
aaa
fcmovnbe
shrb
out
iret
lret
sbb
in
push
sar
ljmp
shrl
mov
gs
incl
pop
mov
daa
inc
push
xchg
sub
xor
jmp
and
push
mov
push
dec
mov
mov
cli
leave
push
out
xlat
out
xchg
pusha
xor
ja
jle
xrelease
pop
aam
mov
xchg
fstpl
lea
add
push
dec
add
std
xchg
adc
fcomip
lds
jns
inc
cli
xchg
leave
xor
les
cmp
lahf
mov
sahf
sub
lret
push
es
mov
ficompl
mov
imul
push
ljmp
call
scas
sbb
mov
popf
dec
dec
adcb
outsl
mov
sbb
add
gs
arpl
in
xor
mov
aaa
push
cli
cs
test
inc
mov
and
xor
xchg
rcrb
loope
incl
inc
shll
jle
mov
add
and
sti
nop
and
jg
mov
fstl
fmuls
xchg
xchg
mov
cmp
mov
sysret
ret
cli
in
jmp
xchg
loopne
dec
sub
cltd
mov
addr16
push
xchg
cs
es
faddp
mov
xchg
jno
sbb
fsubs
fistpll
fildll
loope
jle
lock
leave
cs
and
mov
xor
lcall
mov
fnsave
mov
daa
mov
scas
test
inc
push
sbb
cltd
pop
push
outsl
sub
jg
outsb
inc
xlat
cmp
inc
cmpsb
adc
hlt
mov
lahf
adc
jo
pushl
add
jo
lahf
in
jne
jl
mov
ljmp
xchg
jmp
std
cmovne
jmp
out
fsubs
mov
sahf
push
sbb
xchg
sub
or
nop
ljmp
mov
es
push
push
imul
and
aas
sti
add
daa
mov
jg
mov
cs
test
hlt
mov
insb
mov
dec
jp
mov
fidivs
jmp
popf
adc
add
or
jmp
mov
mov
in
xor
sar
jmp
cwtl
cmp
mov
and
les
xor
lahf
loop
jl
lcall
jg
dec
jae
neg
xor
ret
clc
in
mov
add
or
decl
in
lret
and
or
repz
imul
in
popf
hlt
or
pushl
cld
pop
insl
mov
dec
test
push
jns
mov
cwtl
fwait
stos
ljmp
inc
enter
andb
test
xor
mov
insb
lcall
aaa
std
mov
push
inc
aad
ja
xchg
das
shll
insl
into
cld
sub
decl
mov
loopne
addb
push
mov
inc
xor
hlt
fbld
pushl
je
leave
add
and
stc
outsl
cld
imul
scas
leave
xchg
fcomip
fisttps
push
loope
les
cmc
ljmp
test
jmp
jmp
bound
repnz
push
adc
mov
jne
in
mov
push
cli
loope
data16
ljmp
mov
pusha
mov
mov
pop
das
sbb
jecxz
or
add
push
push
inc
lds
add
or
insl
xor
sub
cli
rorl
mov
cmp
aad
sbb
xchg
lret
pop
mov
cli
cli
xor
sub
jno
push
ss
call
inc
lahf
fistps
push
cli
rcr
adc
shlb
jns
daa
std
xor
mov
int
popf
adc
mov
movsb
mov
inc
xor
in
rorb
inc
inc
dec
cmp
jg
stc
scas
xor
inc
hlt
mov
jmp
pushf
scas
adc
decl
jg
out
mov
cmp
fldenv
repnz
dec
sbb
mov
sti
ret
pop
jns
jmp
cli
addr16
adc
xchg
lods
outsb
xor
sbb
fwait
imul
in
push
outsb
and
sti
and
aas
cmp
dec
dec
clc
sub
sbb
cwtl
dec
aam
mov
dec
mov
sbb
out
mov
fcomi
xor
das
pop
push
pop
shll
sbbb
scas
test
xor
add
insb
repz
cs
xor
gs
call
stos
fwait
aad
dec
icebp
ret
shll
cmpl
pop
aas
push
pop
ja
pop
rorl
call
or
loopne
or
inc
je
repnz
movsb
addr16
push
sbb
mov
aaa
push
mov
call
psrld
adc
adcl
fdivl
mov
jno
and
pushl
jo
je
testl
movsw
cmpsb
fnstsw
xor
js
adc
dec
call
mov
pop
jp
es
add
or
jb
ljmp
loopne
adc
lcall
adc
clc
xlat
outsl
pop
sbb
pop
mov
repz
test
mov
mov
lret
out
sahf
jbe
mov
mov
call
cld
jmp
push
into
cld
fiaddl
rcll
fmul
popf
rolb
xchg
dec
imul
bound
aad
jge
pop
sbb
or
sub
cmp
push
dec
sbb
lcall
xchg
aad
cli
clc
pop
fbld
call
xor
loop
and
mov
sbb
mov
mov
lods
int
adc
xchg
notb
pop
mov
or
lcall
inc
sbb
nop
imul
je
dec
xchg
call
mov
adc
pusha
aas
inc
stc
jle
outsl
or
sbb
fs
scas
stos
push
sub
mov
jge
mov
lcall
js
inc
std
lahf
lods
pop
imul
push
pop
adc
gs
cmp
divb
int
dec
mov
cwtl
ljmp
aaa
divl
aas
cmp
scas
cmp
xchg
movsb
jmp
inc
mov
mov
decl
xchg
xor
sub
or
les
add
jg
shrb
jb
pop
test
stos
jecxz
xor
pushl
or
push
xor
out
xor
icebp
mov
clc
cmp
icebp
fdivl
ss
cs
sbb
mov
std
mov
mov
pushf
sahf
sub
inc
in
out
sub
xor
mov
in
bound
dec
mov
sub
fbld
lcall
sbb
ret
xchg
adc
imul
xor
adc
mov
nop
jbe
xor
bound
dec
das
and
mov
fsubs
mov
push
imul
pop
hlt
cwtl
xchg
dec
fbstp
int
cmc
testb
xchg
ljmp
and
test
je
push
fs
mov
pop
mov
add
ss
lds
stc
ljmp
std
mov
pop
movsb
xchg
mov
mov
cmpsb
jle
add
push
adc
out
cltd
adcl
shlb
and
ret
fs
imul
ljmp
xchg
adc
xchg
mov
repnz
pop
sbb
in
shrb
lcall
or
lods
mov
scas
sub
push
or
add
lods
xor
shll
call
jg
mov
sbb
int
push
push
int3
xchg
cltd
fdivr
clc
jecxz
xchg
xchg
mov
ljmp
rorb
inc
inc
push
aaa
adc
popf
popf
mov
jns
xor
push
pop
or
stc
push
shr
inc
ljmp
xor
aad
xor
xchg
decl
xchg
ja
shll
lret
mov
xchg
cwtl
sbb
fcomip
add
add
xlat
jecxz
lds
mov
je
fwait
inc
adc
push
lcall
dec
enter
std
ljmp
sbb
mov
push
lcall
cmp
bswap
daa
inc
pop
push
and
les
out
xchg
mov
ficoml
cmpsb
scas
aas
imul
out
fwait
xor
outsb
xchg
xor
dec
pushl
sbb
or
push
jbe
rclb
mov
jnp
jne
add
int3
test
jmp
push
shll
jmp
ljmp
adc
out
jp
test
xchg
sbb
ljmp
jae
test
inc
sub
fsubrl
dec
mov
mov
pop
test
cmp
mov
xor
andb
out
mov
sub
dec
and
mov
dec
idivb
push
loop
jg
pushf
fs
and
or
subb
cmc
push
dec
js
cmpsb
mov
gs
push
fsub
repnz
cmp
sbb
push
out
dec
dec
xchg
mov
xchg
mov
das
andl
and
mov
cmp
sub
outsb
dec
sbb
adc
or
stc
lock
lds
ljmp
mov
shr
inc
stos
call
xor
gs
out
push
push
incl
das
dec
call
xchg
sar
jne
gs
mov
cs
call
pop
cmp
mov
xchg
mov
dec
cwtl
mov
jbe
scas
lret
pushl
das
test
dec
stos
xchg
test
imul
call
mov
xchg
sbb
jno
mov
pusha
and
sti
subl
pop
push
jae
mov
sbb
jae
inc
xor
jbe
pusha
loopne
test
movb
decl
xor
and
inc
sbbl
sti
push
mov
mov
cmp
and
bound
sti
call
and
lahf
adcb
scas
sahf
sbb
jp
ret
mov
int
and
fisttps
sub
std
lds
sbbb
gs
push
pcmpeqw
cli
and
add
cli
push
cmp
pop
xor
cmp
dec
cmpl
adc
cmp
ror
orl
jle
jmp
add
jle
add
mov
call
sub
ds
fcomps
cmp
rcrl
jmp
outsb
jp
push
pop
pop
idivb
imul
pushf
mov
fimull
inc
roll
cs
inc
and
cmp
pop
push
test
push
rcll
loop
xchg
ljmp
pop
mov
mov
int3
inc
js
ret
cmp
and
outsb
pop
inc
ljmp
mov
cmpsl
fstl
aas
jl
sub
jmp
dec
scas
and
and
mov
adc
mov
les
jp
scas
jg
and
jne
mov
in
fbld
mov
lret
rcrl
inc
jge
sbb
mov
iret
jns
insb
repz
add
mov
add
pusha
jne
shlb
jmp
pop
rorb
cmp
pop
arpl
push
inc
push
pusha
fbld
daa
test
sbb
pop
out
or
ljmp
xchg
fs
aaa
and
insb
xor
call
xchg
push
mov
inc
sti
inc
sbb
sub
and
or
and
push
in
add
inc
mov
bound
les
ljmp
sub
push
sub
inc
js
pop
sti
repnz
vpsubw
adcb
jecxz
jo
in
int3
shll
clc
ljmp
clc
call
pop
sub
sbb
pop
xchg
sahf
xchg
jae
pop
xchg
rol
mov
dec
rclb
inc
cmpsb
xlat
mov
xlat
inc
imul
call
mov
push
jl
call
ret
loope
das
aam
lret
cld
cli
mov
and
aaa
jbe
xor
lcall
mov
pop
iret
pop
or
std
leave
cld
ljmp
push
pop
call
repz
decl
es
or
out
insb
jp
repz
ljmp
cmova
or
jp
subl
and
jae
or
mov
and
push
jp
adcb
mov
and
jl
mov
xor
jbe
xor
mov
jmp
dec
push
stos
cmpsb
add
test
mov
aas
cmp
mov
incl
ljmp
int
fnstenv
sbb
aaa
std
call
xchg
xchg
sub
xor
fidivrs
mov
sub
pushl
or
pushf
xor
mov
mov
outsl
add
aam
in
lret
mov
cmpsb
imul
dec
jmp
in
loop
mov
sbb
jmp
sub
call
mov
sbb
jae
xor
int
hlt
add
lretw
and
hlt
call
pop
cltd
or
outsb
pop
outsb
pop
je
les
add
shrl
mov
jb
std
and
cld
xchg
mov
lahf
cmp
fnstcw
ljmp
pushl
sub
sub
pop
scas
xor
mov
mov
dec
dec
push
out
stos
sbb
jmp
mov
ljmp
jnp
jge
jno
or
js
push
nop
stos
mov
jnp
jp
jbe
sub
daa
sbb
mov
incb
inc
jg
arpl
dec
xor
lcall
mov
popa
je
pushf
stc
insb
ds
les
adc
pop
cltd
push
cltd
loope
ljmp
rolb
sub
dec
pop
cmc
stos
lret
sti
movsb
and
lcall
jmp
push
sub
sub
mov
popf
lret
jle
and
push
mov
arpl
incl
mov
cwtl
adc
and
sbbl
xor
incl
loope
sub
arpl
mov
popf
jo
cmp
or
push
sahf
xor
in
ds
iret
loop
ret
pop
lock
aaa
testl
orl
lret
decl
call
leave
push
adc
sub
aas
stos
stos
out
jbe
cmpsb
mov
dec
push
aam
sub
jae
cmp
mov
repnz
add
mov
fwait
jne
mov
inc
popa
loope
mov
or
and
jbe
or
outsl
movsb
movsl
add
sbb
cli
push
jne
jns
mov
and
idivb
test
push
jge
outsl
in
test
daa
push
iret
push
push
sar
aaa
cld
jmp
aad
das
push
idivb
push
push
xor
loopne
outsl
jmp
pop
push
lahf
mov
push
add
lret
dec
scas
sbbb
insb
insl
aas
pop
inc
jb
inc
adc
loope
mov
cs
mov
xor
scas
daa
dec
stos
pop
jl
and
cld
je
jbe
add
push
faddl
xor
stos
popf
enter
mov
mov
call
adc
mov
fdivrl
mov
jbe
pop
inc
xor
fimuls
sbb
sub
decl
xchg
ss
lret
rcrl
imul
jae
nop
xchg
dec
pop
mov
sub
sbb
shlb
sti
push
loope
fcomps
push
push
sbb
cmp
fisttps
jl
push
jne
repnz
sbb
push
repz
xor
sub
das
rorb
sbb
fs
sbb
lods
shlb
test
jg
outsb
gs
bound
inc
xor
and
hlt
jo
mov
jbe
pop
jle
lcall
xor
push
jae
js
ljmp
rorl
scas
mov
mov
mov
in
xchg
push
leave
push
fidivs
jno
or
mov
cld
aad
jo
addr16
sbb
and
imul
ret
cmp
in
jge
pusha
pop
loope
push
decl
dec
xchg
into
push
sbb
and
loop
inc
enter
mov
cmovnp
xchg
cmp
decl
jb
into
loope
dec
arpl
jmp
xchg
and
ret
push
inc
adc
call
cmp
hlt
dec
jg
and
xlat
mov
aam
pop
sub
mov
push
sbb
movsl
mov
or
iret
adc
cli
inc
outsl
lcall
gs
scas
mov
xchg
aam
mov
ret
mov
xchg
aam
and
sti
das
clc
cmp
in
cmp
mov
addr16
stc
jmp
pop
and
jb
mov
sub
inc
imul
xor
cli
sti
add
jmp
orb
inc
fs
jecxz
pop
cwtl
imul
fdivrp
adc
mov
adcb
clc
imul
xchg
in
fistps
ret
test
mov
std
mov
ljmp
add
popa
insb
lods
cmp
enter
ljmp
hlt
pop
and
in
lea
and
stc
inc
stos
subb
sub
cmp
pushl
mov
pop
dec
push
in
fisubl
push
push
movsl
inc
sarl
push
lret
cmc
push
add
sar
lcall
aas
iret
sub
inc
dec
mov
mov
lret
sbb
dec
frstor
jnp
jnp
dec
pop
pushl
popa
pop
mov
adc
push
mov
popa
adc
pop
popa
xchg
inc
dec
pop
minps
jmp
js
mov
push
divb
ds
hlt
rolb
jecxz
shrb
outsb
pop
leave
xlat
inc
lods
sbb
xor
mov
adc
sub
jmp
es
pop
fstl
mov
pop
mov
jg
pushl
and
rcll
outsl
cmp
pushl
mov
pop
sub
out
shl
push
pop
or
lods
jne
icebp
and
popf
lcall
test
jns
mov
out
sbb
jns
imul
in
in
std
jmp
pushf
clc
rorb
jecxz
bound
cwtl
mov
mov
rcr
mov
adc
loope
xor
add
sbb
pushl
mov
cwtl
ljmp
push
pop
test
bound
jns
or
ljmp
loop
scas
mov
xchg
add
xor
stc
arpl
mov
xchg
jmp
popa
gs
fcmove
inc
sbb
aas
test
push
inc
mov
in
bound
outsl
cmpsl
xor
inc
cs
push
popa
aas
pop
loop
out
sub
push
shrb
inc
out
or
cltd
rorl
mov
shrb
jmp
jo
push
xor
popf
jb
or
inc
in
push
push
roll
sbb
pop
js
mov
push
cwtl
ds
aam
and
jl
xchg
mov
xlat
and
mov
mov
jg
xchg
aaa
outsb
ljmp
leave
xor
shrb
stos
mov
or
mov
mov
jecxz
aaa
push
pop
shrl
mov
mov
enter
aad
fmuls
test
push
dec
inc
pop
inc
aaa
cli
popf
jmp
pop
inc
push
push
das
cli
pushf
scas
fistpl
call
movsl
das
int3
dec
cmp
mov
ret
sub
mov
dec
sbb
xchg
sbb
mov
add
dec
lock
and
lcall
cwtl
sti
xchg
in
sbb
sub
daa
inc
jg
lock
cmp
out
mov
sbb
inc
ret
jo
push
lock
sub
mov
gs
inc
fcom
mov
rorl
mov
mov
cmc
mull
inc
xor
decl
push
sbb
and
pop
aas
lcall
mov
lods
incl
push
js
movsb
lret
scas
rcrb
clc
jbe
mov
mov
jne
loopne
sub
push
mov
or
clc
mov
sbb
js
es
push
push
je
xor
cs
cmp
adc
push
cmp
sarb
repz
add
paddusb
xchg
fisttps
lcall
or
pop
sbb
cmpsl
cmp
movb
sub
cmp
lcall
xchg
movsb
cmp
ss
pop
xchg
stos
jp
fildll
xor
sbb
mov
mov
dec
aas
mov
clc
mov
sub
shrb
fcompl
and
mov
bound
cld
mov
test
shlb
cmpsl
push
lret
sub
imul
pushl
push
ss
sub
repnz
jnp
mov
cmp
xor
pop
cmp
fwait
int3
xor
dec
mov
ds
in
lods
mov
mov
rcr
mov
inc
in
popf
in
and
stos
dec
sbb
call
scas
scas
jp
mov
pop
mov
repnz
int
decl
movsl
sarb
mov
mov
pextrw
cmovno
and
and
gs
incl
imul
adc
mov
xor
mov
sbbb
jnp
mov
xchg
jnp
mov
inc
cwtl
push
or
sub
arpl
out
mov
mov
lcall
mov
js
leave
push
inc
jp
bound
fcoms
out
stc
std
and
jmp
pop
xor
into
lcall
lcall
mov
mov
xchg
orb
pushl
cld
pop
ret
push
jge
sbb
xlat
or
cmp
addb
dec
xor
inc
popf
into
das
loope
cmpsl
movsb
push
shlb
sarb
nop
out
daa
int
sub
xchg
call
add
fwait
add
xchg
test
and
ficomps
imul
mov
push
pop
stos
hlt
jae
mov
data16
xor
std
hlt
cmp
fs
cmp
jnp
fbstp
mov
movsl
and
loope
scas
mov
aaa
mov
lret
call
mov
lea
dec
push
enter
pop
aas
enter
lods
pop
sub
lods
stos
adc
fists
sub
or
jne
test
mov
out
add
xchg
jae
push
push
fbld
jne
pop
dec
call
imul
lahf
orl
cmp
ret
or
daa
vfrczps
sub
xchg
adc
ror
cmp
or
decl
inc
pop
inc
nop
jmp
out
sub
fstpt
pop
pop
sub
mov
xor
cmp
bound
mov
aaa
jae
lcall
sub
sbb
inc
add
call
sarb
js
jmp
cmovo
aas
xchg
add
insb
shrb
pop
push
push
mov
movsb
insl
leave
mov
lcall
adc
repz
xor
cwtl
in
mov
stc
ja
cmp
rcr
cmp
fwait
cwtl
mov
or
pop
mov
pop
sbb
push
mov
aam
or
or
dec
jnp
test
push
scas
push
test
dec
sbb
pushl
mov
xor
sub
shl
add
pop
xlat
lea
push
cwtl
xor
jmp
xchg
aam
xchg
in
lahf
cmpsl
mov
cld
dec
js
push
into
sub
jl
lods
push
nop
repnz
roll
ja
lcall
sbb
bound
xchg
rclb
stos
push
fcomi
fnstsw
or
mov
decl
shll
push
mov
xlat
stos
lret
jecxz
xchg
push
cmpsb
out
das
xorl
pushl
stos
inc
mov
lods
inc
icebp
hlt
sahf
mov
jne
ds
incl
outsb
test
mov
in
jne
inc
add
daa
dec
pop
push
mov
push
lods
or
or
outsb
mov
test
xor
pushl
je
push
mov
and
jo
lea
xlat
dec
ja
cmp
cmp
pop
add
mov
shll
mov
xchg
push
fs
jbe
push
ds
lods
pop
or
push
lock
cltd
and
mov
rolb
jbe
and
jecxz
xchg
incl
fiaddl
cli
jle
add
lahf
add
xor
add
dec
sub
call
cmp
lds
mov
push
stos
incl
leave
inc
inc
fidivrs
and
sbb
push
in
mov
xor
mov
add
xor
orb
fs
add
insl
adc
cld
sub
cs
jg
cmc
mov
sbb
mov
adc
jb
or
mov
jle
xor
sbb
push
cwtl
clc
jg
inc
ljmp
dec
sub
xchg
and
ret
fstps
mov
int3
add
push
scas
jno
lods
sbb
hlt
in
call
adc
shlb
pop
jbe
add
sbbb
ss
jae
mov
hlt
inc
mov
sahf
aam
mov
test
cmp
mov
push
add
test
add
sti
popa
dec
mov
call
mov
aad
rorl
add
mov
ds
test
adcb
inc
push
cmp
or
out
nop
loope,pt
mov
cmp
push
lahf
test
scas
and
inc
add
incl
adc
das
out
clc
sub
adc
xor
int3
shrb
dec
outsb
mov
cmp
push
xchg
scas
movsb
push
inc
hlt
pop
scas
ret
add
push
ja
incb
adc
jb
lcall
add
scas
mov
add
sbb
push
fcomp
sbb
dec
xlat
xor
inc
push
loopne
outsl
lcall
fstpl
xor
clc
pop
repnz
fucomi
inc
int3
outsb
clc
inc
sbb
or
jmp
pushf
xorl
add
cmc
dec
call
sub
fs
invd
and
call
xor
sti
fistpll
ds
inc
cli
adc
cli
icebp
xchg
and
or
or
sar
fistps
sub
imul
loopne
adc
mov
inc
jg
mov
mov
ss
mov
mov
sub
adc
xchg
ds
int3
out
jl
xchg
in
mov
and
xchg
jbe
pop
mov
mov
and
xor
ret
decl
sub
loopne
add
pop
jl
insl
cmp
push
popf
mov
add
add
leave
testb
lock
or
mov
loop
mov
pop
stc
call
mov
mov
bound
pusha
jbe
jle
mov
jg
dec
add
scas
movb
lea
jno
adc
clc
xchg
pushl
push
fstpt
push
push
ror
mov
xchg
push
dec
inc
iret
jb
loop
push
mov
cmp
mov
out
pop
je
pop
mov
add
push
mov
fnstenv
lea
jecxz
fs
and
popa
outsb
xchg
les
and
mov
and
jg
outsl
mov
sbb
call
push
add
jmp
nop
pop
int3
loope
cmp
pop
inc
push
pop
dec
das
sbb
andb
mov
cmpsl
sbb
les
jg
outsb
xchg
movsl
cwtl
xchg
into
mov
mov
add
mov
test
pop
cld
cmpsb
pop
sub
pop
popf
push
sub
aam
rcl
jg
in
aam
mov
lahf
xor
inc
inc
dec
les
shlb
sub
das
sub
inc
loopne
cwtl
lcall
out
mov
jp
lret
xor
sbb
pop
pop
outsl
shl
aam
shl
mov
xchg
jbe
call
cli
pop
cmp
or
icebp
lret
bound
lock
nop
rolb
sbb
or
pop
or
fisubl
push
and
out
mov
nop
dec
pop
loop
xor
sbb
repz
xchg
push
es
inc
frstor
pop
js
push
sub
xchg
mov
and
and
movsl
xor
or
enter
lcall
cli
cmpsl
jb
test
lret
jmp
in
stc
mov
dec
push
add
dec
pop
clc
xor
incb
adc
adc
and
sbb
push
jp
std
iret
mov
pop
lods
or
fxch
stos
test
fwait
cmp
inc
adc
cld
push
arpl
push
popa
mov
push
and
je
addb
cmpsb
pop
jp
xchg
ljmp
flds
nop
ficoms
fwait
jge
mov
orl
xchg
inc
stos
mov
mov
lods
sub
push
sbb
aas
imul
in
dec
sub
mov
or
inc
or
rcll
shlb
jg
fs
jg
or
pop
mov
xchg
push
add
inc
mov
sbb
das
rcrb
in
popa
iret
fcoml
sbb
js
jmp
shl
hlt
push
lret
jnp
inc
mov
in
je
ret
jecxz
clc
mov
pop
and
cmp
push
sub
mov
pop
push
mov
jge
fs
lcall
push
sarl
inc
ret
push
xchg
xchg
jmp
pop
mov
pushf
mov
lcall
add
mov
jg
add
test
inc
push
pop
push
mov
enter
repz
cmpsb
adc
sbbl
cmc
or
mov
je
and
xor
xlat
jl
das
ss
call
nop
cmp
mov
inc
outsb
jnp
aas
rol
mov
add
xor
testl
adc
pop
cli
mov
fcmovnb
dec
je
clc
mov
sub
dec
negl
scas
pusha
hlt
ret
mov
outsl
jb
nop
jo
xor
mov
mov
and
xchg
xor
or
jle
adc
stos
push
mov
xchg
dec
inc
stos
std
xchg
sub
divb
or
ss
lret
faddl
cwtl
inc
adc
xor
push
xchg
mov
or
loope
rcll
mov
dec
mov
pop
push
sbb
stos
inc
cmp
cmp
jl
pop
and
jge
shrl
idivl
loop
mov
cs
mov
adc
fst
cld
and
mov
sti
dec
clc
pop
jne
inc
in
into
js
push
cmc
push
pusha
lock
loopne
and
scas
fisubs
inc
dec
push
adc
xchg
jne
cmpsb
rorl
xor
inc
xor
imul
dec
pop
je
jo
ljmp
clc
ljmp
in
popf
imul
cmp
andb
lret
or
sbb
cltd
xor
jecxz
jg
jnp
arpl
test
clc
inc
loope
mul
inc
dec
aas
gs
aam
ja
stc
and
scas
ss
mov
lock
pop
xchg
dec
push
xorb
fdivrl
mov
mov
xchg
cmp
fcom
mov
js
push
aas
add
xor
sahf
fiaddl
incb
imul
cmp
push
adc
aam
fisubrl
push
ficoml
fsubr
popa
push
das
clc
loop
ficomps
je
sar
fistpl
push
sbb
cmp
out
popl
hlt
lods
dec
add
add
decl
sbb
and
popl
mov
mov
mov
fs
ljmp
into
xor
aas
ret
sbb
lods
inc
mov
loopne
aas
jp
jl
and
jne
fistps
xchg
test
mov
insb
sub
or
jle
lcall
push
and
std
mov
pusha
xchg
add
sub
icebp
sti
ret
fdiv
dec
jno
add
mov
dec
mov
int
push
jbe
push
ret
mov
pop
jb
rorb
mov
imul
xchg
xchg
sar
push
leave
sbb
ret
mov
jmp
ret
repnz
arpl
cmp
sar
rclb
por
adc
fwait
add
filds
pop
ret
sub
dec
xor
push
movsb
lds
xchg
addr16
repz
pop
in
cmp
push
add
pop
sbb
outsb
mov
imul
add
imul
cmc
inc
pop
jb
ds
andb
mov
pop
inc
incl
insl
and
shlb
dec
mov
xor
xor
stos
mov
and
dec
test
aad
stos
lret
aad
and
push
ret
dec
pop
fucomi
push
jnp
ljmp
imul
add
rorb
popa
imul
sahf
sub
jle
aaa
push
or
mov
jg
test
movsb
cli
outsl
sub
and
sarl
add
ret
sbb
aaa
mov
mov
sbb
fwait
stos
inc
aam
adc
cltd
jne
jb
adc
pop
mov
mov
fisttps
xchg
and
xchg
push
scas
mov
mov
sbb
gs
add
cmp
push
cmpsl
mov
call
and
pop
or
inc
adc
adc
sub
fs
inc
andl
push
push
jecxz
jl
xor
in
dec
ljmp
ret
inc
mov
add
jae
xchg
push
sub
std
stos
rcrb
inc
sbb
mov
jmp
aad
ss
add
cmpl
and
jmp
xor
and
mov
mov
aas
into
jle
sbb
sbb
out
pushf
add
or
std
add
sbb
mov
jno
ss
lock
add
jmp
jo
repz
mov
xlat
inc
cli
mov
push
aaa
pop
stos
in
or
aaa
and
fdivrs
adc
sub
push
stc
lods
jl
xchg
sbbb
loope
lret
fdivrp
icebp
jo
lods
mov
test
into
lcall
daa
sbb
pop
or
outsb
cmc
jp
adc
dec
mov
push
cld
fstpt
and
mov
ror
popf
push
pusha
sbbl
pop
scas
inc
xchg
ficoms
pop
call
daa
repnz
das
mov
cwtl
pop
dec
out
xlat
ljmp
dec
mov
sub
orb
add
je
pop
fisubs
in
popa
and
sbb
jl
outsb
das
clc
add
push
dec
mov
jl
jbe
mov
adcb
fimuls
call
nop
jle
jnp
and
rolb
pop
and
cmp
pushf
cmp
sahf
mov
pop
mov
or
push
sbb
adc
sub
or
xchg
mov
and
inc
or
mov
push
fisttps
xor
mov
loope
sub
into
das
jnp
imul
push
test
mov
fadds
mov
je
cmp
mov
push
test
loopne
adc
mov
fdivrl
fcomip
mov
push
sub
sti
mov
mov
sti
pop
push
xchg
es
adc
xor
in
mov
pop
cmp
cmp
mov
jo
decl
mov
frstor
mov
stc
jb
cmp
and
pop
movsl
rcll
and
stos
mov
sub
je
test
lods
sub
aas
add
add
cs
cmpb
inc
outsb
cmp
mov
dec
aas
pop
out
cmpsb
dec
jo
pushl
xchg
sbb
rcr
xchg
cwtl
or
sub
pusha
fucom
push
xor
cli
push
test
inc
push
add
nop
test
mov
pusha
or
sahf
mov
mov
mov
pop
stos
cmp
nop
sub
aas
les
mov
orb
jno
aaa
push
arpl
scas
or
or
pop
mov
jne
adc
aam
add
add
or
or
clc
mov
daa
cwtl
mov
stos
jle
inc
add
xlat
add
mov
test
adc
lcall
test
adcb
and
push
repz
lods
mov
sub
gs
and
xor
xchg
dec
cmpsb
xchg
mov
mov
cmp
adc
adc
xor
jb
lret
mov
jle
lods
leave
popa
mov
mov
mov
dec
outsb
xor
loop,pt
mov
aam
xlat
mov
sub
add
popf
inc
cmpsl
test
pusha
daa
and
or
imul
mov
sub
inc
or
add
jns
and
sub
push
xchg
popa
dec
rolb
adc
add
xor
pop
ret
mov
add
sbb
cmp
dec
mov
decl
push
inc
cmpb
mov
repz
push
push
movsb
frstor
push
ret
pop
cld
ds
gs
cmp
pop
dec
push
or
aad
mov
sbb
loope
inc
roll
outsb
cs
clc
pushl
push
or
and
add
movsb
and
xor
hlt
jg
and
inc
cwtl
and
lods
popf
pop
dec
mov
mov
pop
inc
xchg
out
add
sbb
xor
mov
scas
clc
mov
push
fwait
mov
and
movsb
sbb
decb
dec
cmp
pusha
or
mov
push
ss
and
pushf
imul
mov
add
mov
jl
ljmp
sbb
sti
mov
xor
sbbb
lcall
and
rcrb
push
adc
movsb
addr16
out
nop
ret
call
bound
roll
sub
call
cmpsl
mov
pushf
fiadds
dec
mov
dec
jae
loopne
xor
fwait
mov
dec
test
dec
std
and
jg
adc
pop
test
cmpb
lods
dec
sub
pop
adc
dec
push
repnz
add
mov
inc
dec
dec
scas
jo
mov
clc
in
cltd
lods
cmp
sbb
clc
mov
add
popl
or
ja
xor
or
add
add
jne
call
fcoml
test
xor
jle
mov
pop
call
adc
insb
and
imulb
or
or
dec
mov
inc
es
push
data16
pusha
dec
in
mov
loopne
dec
add
out
scas
lcall
les
lods
xor
call
aaa
sbb
mov
dec
sahf
in
incb
scas
enter
es
inc
stos
inc
add
lea
xchg
out
movsb
stos
fs
int3
pop
and
sahf
dec
clc
call
jbe
push
jecxz
jmp
or
xor
shl
cld
jmp
sbb
aad
cs
xchg
subl
push
mov
cltd
jno
and
lret
inc
roll
lock
dec
adc
mov
mov
add
jnp
int3
pop
mov
mov
and
rcl
lods
mov
inc
negl
xchg
or
xchg
jl
shrl
lock
and
adc
loop
aad
xorb
movsl
cli
pop
jo
push
adc
sti
dec
cmc
mov
cli
scas
std
dec
sbb
pop
push
lea
rorb
fcos
aaa
pop
add
adc
xorb
cs
incb
outsl
inc
xchg
dec
movsb
and
sbb
mov
sub
out
fldt
je
lock
mov
cmc
mov
fsubrl
add
aas
jb
ss
xor
leave
loopne
ljmp
incb
or
mov
mov
pop
iret
push
push
pop
dec
sub
pop
rcll
loopne
data16
lock
cmp
call
pop
jmp
mov
pop
scas
inc
add
push
js
fsubs
scas
loop
out
lret
xor
and
mov
andl
xor
and
lds
cwtl
lcall
inc
les
cwtl
add
jp
mov
ljmp
jns
jmp
add
xchg
jb
lea
cmp
cmpsl
stc
std
add
leave
and
sbb
nop
xchg
aam
jmp
jo
mov
adc
aas
xorb
mov
xor
inc
fidivrl
ss
aad
repz
cmpb
pop
and
and
std
xchg
daa
mov
adc
and
jge
pop
adc
push
xor
decl
std
ljmp
in
xlat
cmc
rorb
inc
ret
pushf
out
mov
stos
add
mov
add
mov
add
inc
shl
call
lret
fisubl
dec
sarb
test
out
jg
mov
mov
pop
mov
cmp
xlat
dec
adc
rcrl
add
and
loopne
or
pop
mov
mov
mov
add
sub
adc
loop,pn
add
bound
movsb
shlb
es
sahf
mov
fiaddl
dec
out
push
mov
xchg
insb
pop
hlt
subl
jae
das
jae
scas
inc
sbb
mov
lock
jle,pn
sub
ljmp
mov
mov
outsl
sbb
rclb
outsl
mov
enter
pop
inc
insb
int
jp
mov
mov
add
ret
cmp
fwait
cmp
mov
test
jle
adc
pop
pop
enter
dec
pushf
mov
testl
loopne
sub
jo
push
lahf
push
fwait
or
imul
jge
clc
jg
push
add
adc
cmp
sub
outsb
fdivl
shll
mov
mov
stos
iret
mov
pop
ja
outsb
mov
ds
mov
add
cmp
jbe
int
in
movl
mov
push
lahf
lods
pop
std
mov
std
insl
add
mov
clc
xchg
pushf
jno
pushl
testl
adc
subb
data16
pop
jl
movsb
add
mov
movsb
mov
jg
inc
nop
inc
out
push
push
call
inc
mov
cmpsb
push
mov
scas
cmp
fistpll
scas
push
test
int3
xchg
lock
sub
sbb
sbb
and
dec
stos
pop
sbb
pop
test
icebp
jge
outsb
scas
mov
mov
mov
mov
inc
out
rcr
leave
ljmp
cltd
incb
lods
xchg
jp
je
mov
movb
ss
insb
cmp
outsb
cmpsb
call
mov
jmp
cld
iret
add
movsl
call
cmp
decl
and
xor
incl
or
repz
add
push
shr
and
inc
sahf
sub
dec
cmp
push
inc
test
push
dec
xchg
scas
mov
int
lods
out
mov
loope
cmp
outsb
imul
out
xor
push
xor
jns
gs
pop
or
repnz
rcr
stos
or
xor
test
rorl
andb
mov
bound
clc
pop
rcll
ret
pop
call
clc
mov
mov
sti
cli
and
fists
mov
mov
pop
inc
inc
mov
sti
push
das
stos
lods
dec
scas
dec
mov
and
pop
shr
lock
fisubrl
xchg
fldenv
jg
insb
loope
mov
ret
out
fiaddl
xor
cwtl
dec
dec
fsubs
xchg
aam
mov
sbb
lock
out
jne
in
ja
and
and
push
stos
inc
bound
sbb
pop
hlt
out
fs
mov
orl
lret
adc
outsl
test
mov
dec
push
std
adc
pop
inc
dec
sub
pop
pushl
ficomps
imul
dec
pop
cld
cli
adc
fsub
outsb
fmulp
cltd
fisubrs
lds
lret
cmp
mov
cmp
inc
xorb
xor
dec
movsb
push
dec
cmp
pushf
jmp
mov
dec
add
jp
or
pop
mov
inc
jle
dec
mov
js
sar
stos
jle
add
and
sbb
fbld
add
add
sti
jmp
int
cltd
sbb
into
pusha
sbb
fldt
xorl
stc
xchg
or
mov
outsb
adc
fiaddl
mov
xor
pop
mov
cmpsb
dec
pusha
add
dec
pop
add
jbe
sbb
enter
pop
out
orl
jg
cmp
nop
mov
mov
repnz
insl
pop
pop
lahf
sub
outsl
fwait
cwtl
ljmp
popf
imul
mov
push
mov
dec
outsl
ror
jno
lahf
stos
mov
iret
outsl
or
jp
shlb
dec
cmp
neg
inc
ficomps
sub
push
rcl
add
cwtl
repnz
push
outsl
paddusw
jne
pushf
sbb
fists
xor
rcrl
es
xor
incl
punpcklbw
daa
insb
aas
sub
fs
jecxz
fadds
daa
rolb
sub
outsl
mov
je
xor
mov
xchg
xlat
aaa
int3
xor
adc
dec
mov
adc
mov
mov
incb
mov
and
inc
lods
orb
aaa
mov
mov
push
lcall
loopne
je
inc
xor
dec
std
adc
lcall
cwtl
mov
push
jo
cwtl
pusha
enter
inc
or
push
xlat
clc
lcall
les
xor
mov
sub
xor
xchg
ss
mov
mov
mov
dec
push
roll
call
mov
mov
xchg
adc
pop
jg
lea
leave
or
es
push
leave
cmp
bnd
push
scas
push
lea
scas
or
mov
stos
stc
mov
frstor
xchg
and
int3
lods
fs
add
dec
pop
add
mov
je
mov
add
add
outsb
pop
int
shufps
pushl
movsb
daa
mov
push
xchg
adc
dec
pslld
or
mov
test
stc
das
stos
icebp
je
loop
data16
stos
inc
xchg
push
sarl
gs
mov
repnz
adc
sbb
push
add
add
test
lea
addr16
adc
loopne
inc
cmpsb
orb
jae
mov
mov
adc
mov
int3
repnz
shll
call
mov
cmpb
and
push
cli
push
jmp
push
push
loopne
push
xchg
out
je
cmp
mov
sbb
ss
jp
sbb
test
adcb
mov
pop
icebp
ljmp
pop
les
test
mov
out
fs
nop
mov
gs
test
test
push
aam
push
cwtl
roll
dec
ja
aad
and
mov
leave
and
push
and
and
cmp
jge
pop
push
jbe
jmp
pop
inc
cmp
adc
sbb
lahf
push
push
xor
mov
and
sub
jb
arpl
stos
push
ss
xor
std
jne
cmpsb
xchg
push
cld
cmpsb
jnp
sub
in
ljmp
and
fchs
rolb
mov
jmp
inc
xchg
xorb
adc
xchg
bound
push
push
jecxz
inc
repz
frstor
dec
xchg
std
ds
and
icebp
pushf
xor
int3
test
fidivl
mov
sbb
ss
push
xchg
sahf
decl
dec
sbb
adc
and
jne
mov
cli
cltd
adc
push
push
cs
pop
push
lret
push
push
pop
decl
addb
ja
mov
cmc
shll
dec
cli
hlt
inc
push
fs
mov
cmp
mov
dec
xor
daa
cld
xchg
stos
iret
cmpsb
bound
adc
sbbb
sbb
lods
bound
mov
or
xchg
jecxz
cmpsl
jle
push
ret
loopne
int
insl
xor
inc
sti
add
push
push
stos
xchg
sbb
xlat
push
lret
outsb
push
jns
jl
cmp
cmpsl
push
pushf
sbb
and
and
outsb
idivb
adc
insb
cs
scas
push
push
loope
adc
loopne,pt
in
loopne
rorl
mov
jg
fisubrl
xchg
and
addr16
fwait
sahf
xor
xchg
popf
jmp
xlat
sub
xchg
fdivl
addr16
mov
insb
dec
repz
outsb
push
out
cmp
fsubs
movsbl
orl
pop
sub
cmp
xor
test
call
push
jo
loop
mov
add
jg
cmp
inc
pop
dec
add
cltd
sarl
and
inc
or
dec
inc
lcall
mov
adc
fwait
dec
mov
rorb
in
pushf
mov
add
lods
inc
aam
sub
or
jle
cltd
adc
mov
incl
sub
push
out
xchg
xchg
xchg
mov
lahf
or
mov
jmp
jbe
int3
icebp
cs
in
mov
inc
lds
jg
dec
add
and
je
sbb
incl
mov
xchg
jne
or
mov
push
xchg
stos
stc
fimuls
sbb
push
mov
je
movsb
cwtl
xchg
inc
lds
lcall
add
mov
jle
add
jo
xorl
cmp
hlt
mov
adc
or
repz
dec
test
fbstp
jmp
or
push
cmpsl
or
jo
call
push
pop
rorb
int3
filds
push
or
and
pop
test
add
dec
std
inc
std
scas
scas
push
xchg
sbb
add
mov
fwait
push
xchg
lret
push
ljmp
inc
jne
clc
mov
add
mov
iret
hlt
nop
xlat
dec
hlt
adc
xor
aaa
sbb
inc
jae
call
cmp
je
arpl
pop
lock
out
and
dec
loopne
and
adc
and
or
xchg
cltd
shll
mov
jg
sub
add
clc
lcall
iret
cmp
addr16
dec
pop
js
or
loop
aam
orb
push
xor
int3
das
mov
mov
call
mov
rol
test
mov
in
gs
sub
jge
sbb
pop
mov
sar
cld
push
mov
stos
in
add
pop
ljmp
mov
daa
pop
lret
sahf
adc
fadds
cmp
push
pusha
mov
hlt
inc
add
fsubrs
jmp
and
xor
int3
add
xor
pop
or
mov
test
push
adc
inc
pop
lock
jecxz
add
ljmp
xor
adc
add
ret
daa
sbb
mov
dec
pop
aad
mulb
lcall
es
popa
dec
pop
rorb
adc
outsl
add
xorl
add
push
push
mov
sub
les
test
jecxz
inc
test
and
dec
movsb
jmp
adcl
pop
sub
aaa
movsb
cmpsb
sub
in
cmpsl
rcrl
cmp
jecxz
sarb
cmp
or
dec
movsb
cltd
les
inc
add
xchg
inc
scas
pop
sub
jne
or
pop
loop
push
rol
es
jb
outsb
fdivs
insb
adc
sbb
jb
push
push
clc
or
clc
stos
ret
inc
or
adcb
fdivs
mov
inc
xchg
insl
or
sti
aas
sub
or
adc
or
out
lods
bound
jno
movsb
ja
mov
sub
rorb
pop
in
xor
insb
jl
scas
pop
aam
xor
adc
les
mov
lahf
test
add
call
dec
add
xchg
out
stos
call
xchg
fldl
inc
pop
inc
sub
push
fldenv
movl
dec
xor
cli
lock
adc
fmuls
adc
nop
cmc
pop
add
lock
add
shrb
test
dec
sbb
in
mov
pop
or
cld
cmp
outsl
dec
push
mov
mov
scas
add
das
inc
jne
add
imull
add
xchg
jge
loopne
xor
add
inc
sarb
mov
rclb
xchg
test
push
jg
idivl
jmp
adc
inc
xor
adc
cmpsl
pop
cmpsb
fdivr
add
mov
je
negb
das
pop
inc
enter
or
cmp
or
movsb
xchg
ljmp
mov
sbbl
or
pop
popf
dec
ds
out
sbb
mov
mov
leave
push
jae
gs
incb
sub
or
in
lods
dec
sbb
add
jmp
push
xchg
adc
xor
mov
xchg
add
and
clc
inc
cli
test
cmp
xchg
fldenv
or
sbb
add
sbb
sub
mov
in
cwtl
mov
std
cmpsl
js
ljmp
clc
loopne
js
xchg
dec
inc
rolb
dec
lcall
adc
mov
cmp
pop
popa
sbbb
xchg
jo
pop
pop
ja
sbb
adc
add
dec
add
addr16
adc
push
inc
js
inc
push
mov
std
out
dec
loope
dec
aam
aas
popa
mov
pop
push
push
sub
jns
stos
push
jl
mov
sub
leave
icebp
inc
stos
sub
cmp
aad
cmp
jo
iret
or
scas
jb
test
adc
into
sahf
xor
clc
movsl
jmp
out
ljmp
scas
adc
dec
test
mov
add
ljmp
mov
leave
insl
and
add
int3
popa
sbb
je
test
pavgb
pop
inc
call
jle
int3
imul
and
pop
pop
jb
shl
mov
xor
jo
inc
icebp
sar
ret
inc
enter
pop
pop
sub
cmc
test
out
add
jge
outsl
imul
jecxz
pop
sti
std
and
loop
pushl
mov
dec
add
insl
mov
xchg
cmp
sub
sbb
in
loop
stos
sub
enter
icebp
fdivrl
mov
hlt
mov
jbe
fwait
lods
sbb
ficoms
sar
jbe
pop
stos
js
or
test
mov
insl
and
push
or
je
decb
test
add
or
cmc
and
and
adc
clc
scas
xlat
push
sbb
test
sub
sub
cmp
insb
sar
xor
mov
nop
xor
stos
mov
push
fcomip
or
stc
div
and
push
int
ret
xor
mov
push
mov
ret
fisttps
test
lret
sbb
fs
addl
mov
andb
add
add
lea
push
bnd
ljmp
dec
aaa
pop
sbb
gs
and
add
jbe
fsubl
push
pop
adc
mov
sub
sbb
inc
lods
or
mov
dec
mov
xor
jne
mov
jg
test
sar
mov
dec
pop
std
daa
jg
xor
sbb
ret
lods
xor
rcrb
call
jo
sub
push
sub
adc
xor
and
adc
adc
add
add
dec
adc
mov
je
test
sbb
xor
or
pop
in
scas
clc
xor
inc
pop
pusha
adc
fcomip
jg
iret
in
or
pop
add
add
fs
add
sbb
inc
dec
cli
std
ret
sub
cwtl
dec
stos
mov
data16
or
mov
push
sub
fcmovnbe
mov
mov
xchg
shlb
mov
mov
outsb
mov
mov
jl
pop
cmc
mov
mov
rcrl
movsl
cwtl
pop
jg
inc
and
push
popf
mov
int3
jmp
sbb
inc
lock
lods
mov
loopne
testb
fldenv
fucomip
mov
sbb
inc
or
mov
mov
mov
loope
sub
cs
repz
movsb
addb
incl
je
call
lret
mov
or
lods
sub
insl
rorl
mov
add
jle
fildl
cld
insb
add
enter
and
cmp
stc
std
add
lret
push
incl
add
pop
add
mov
inc
in
out
lock
pop
dec
fs
addb
inc
fisttpl
loope
cs
mov
ljmp
rcrl
cmpsb
stos
xor
and
hlt
and
and
adc
sub
add
sub
xor
jo
xlat
pop
sub
fs
push
pop
sub
xor
loop
out
or
fwait
pop
cmp
inc
scas
lock
cld
mov
push
sbb
mov
decl
mov
or
sbb
mov
sar
adc
push
or
and
inc
mov
sbb
adc
sbb
pop
jns
lret
ret
outsl
sub
pop
imull
mov
xchg
sarb
scas
add
movsb
sub
incl
popf
mov
fs
cmp
mov
outsb
rclb
sahf
adc
pop
jp
push
adc
mov
push
mov
pop
test
lods
jbe
push
xor
dec
dec
addb
movsb
xchg
fstpl
dec
stos
sbb
outsl
scas
xchg
sub
add
test
hlt
cmp
sbb
shr
push
add
arpl
pop
mov
add
lods
sub
mov
lods
call
and
sbb
scas
jb
push
mov
ret
negb
push
xchg
cmp
jp
ljmp
push
sbb
loopne
sbb
mov
mov
inc
push
scas
dec
and
test
xor
push
add
jg
jmp
cmp
or
and
add
mov
push
sbb
adc
mov
ja
cld
hlt
mov
icebp
mov
push
bound
lock
jge
test
or
test
clc
sbbb
add
sub
adcl
xor
and
nop
mov
add
pusha
xor
enter
sbb
mov
adcl
call
cmp
mov
loope
mov
orb
ror
in
faddp
orb
inc
push
lcall
mov
push
cmp
std
sub
sar
mov
lock
mov
loopne
movsl
add
je
pop
clc
xchg
or
add
test
es
xor
lods
xor
pop
xor
mov
les
bound
mov
mov
inc
inc
iret
ss
add
clc
pop
sbb
dec
cmp
aaa
arpl
mov
movsl
ljmp
es
adc
add
push
data16
or
sysret
push
enter
inc
xchg
sub
jno
mov
pushf
lock
ss
jg
inc
push
das
mov
mov
imul
lods
leave
je
loopne
sbb
cltd
imul
dec
clc
aas
and
push
push
cwtl
clc
dec
ds
ljmp
sbbl
stc
out
mov
andl
or
or
push
clc
call
sub
stos
stos
mov
not
dec
in
ljmp
jae
shrl
ss
lret
sbb
mov
ret
mov
xor
dec
fdivrl
icebp
or
mov
or
in
mov
loope
sub
shrb
jb
xchg
imul
fs
xchg
adc
add
mov
mov
push
mov
call
inc
cli
lcall
les
inc
inc
ret
aam
and
adc
out
push
pusha
jo
push
jmp
pop
sahf
inc
es
xchg
xchg
mov
notb
jmp
mov
cmp
cmp
cli
mov
aad
pop
mov
push
push
dec
inc
or
testb
sbb
fildll
and
mov
jns
loope
cwtl
and
cmp
incl
repnz
xchg
lahf
aad
aam
sub
shrb
and
or
xorb
lock
notl
lock
jle
or
stos
mov
or
jbe
es
adc
loop
inc
mov
push
fcoms
scas
pop
jae
gs
jle
mov
dec
jne
push
sahf
cmp
repz
aas
scas
test
or
fwait
push
add
xor
xor
or
jnp
movsl
shll
add
and
into
int3
jp
sbb
je
adc
lcall
insb
xor
popf
and
pusha
sbb
add
mov
mov
adcl
cmpsl
push
out
data16
outsl
clc
mov
rcr
sahf
xchg
inc
sti
xor
movsb
jg
and
lock
outsl
inc
jle
push
jb
mov
cli
fisttps
cmpsb
test
push
push
mov
enter
mov
add
push
cltd
and
cli
pop
pop
or
cld
or
mov
sub
mov
xchg
mov
and
xchg
pop
mov
clc
add
add
xchg
repz
sbb
pop
or
push
inc
ljmp
mov
sub
adc
adc
sub
jg
mov
ljmp
nop
cmc
mov
dec
add
fwait
xor
data16
mov
in
xchg
add
lds
add
cmpsl
decl
cli
lods
clc
mov
outsb
sub
xor
ss
mov
mov
adc
add
repnz
and
mov
outsb
out
daa
mov
cmp
data16
xor
lods
fucomi
arpl
enter
in
inc
ret
push
sbb
and
or
pop
rol
nop
sarb
loop
repz
imul
ret
mov
dec
adc
sbb
ja
fcoml
cmp
inc
mov
dec
mov
mov
insb
aad
in
adcb
xor
test
add
clc
pop
or
dec
inc
xchg
faddl
cmp
out
add
push
cld
enter
fcom
push
test
push
jb
add
jg
popf
or
and
test
jo
sub
fistps
aad
mov
mov
movsl
dec
jo
in
mov
sbb
adc
inc
mov
insb
push
jecxz
popf
adc
add
dec
cmpl
orl
or
rep
inc
mov
mov
aad
xor
pop
pushf
incb
add
jmp
dec
dec
sbb
push
popf
data16
aas
fs
mov
iret
sub
je
inc
test
dec
lock
stos
push
jo
fisttpll
fdivr
add
jecxz
std
jge
fildll
imull
pop
pop
pop
push
test
push
pop
cmp
repnz
gs
mov
dec
cltd
xchg
push
pushf
add
mov
fistpll
cltd
dec
add
inc
filds
pop
mov
iret
sub
push
outsb
mov
inc
or
test
loop
sbb
stc
loop
shlb
cld
push
inc
imul
push
jle
dec
mov
shll
mov
jbe
mov
filds
mov
in
cmp
pushf
pop
cmp
fidivrs
xchg
lods
and
rclb
in
add
add
imul
aaa
mov
mov
ret
push
push
mov
inc
cmp
push
out
dec
add
push
js
daa
test
stos
sub
lock
push
push
sbb
lock
fstl
into
ret
push
push
std
int3
addr16
das
lds
push
fidivl
lret
arpl
dec
and
mov
sarl
leave
fmulp
push
icebp
test
mov
push
adc
in
es
add
imul
pushf
lods
xchg
movb
inc
or
pop
gs
pop
test
push
push
push
adc
jp
adc
inc
notb
push
shlb
loope
ss
pop
mov
clc
pop
or
imul
shll
lods
aad
bound
mov
in
mov
inc
inc
out
fimuls
cld
mov
add
jae
or
sbb
pcmpgtb
cwtl
and
inc
add
out
inc
sbb
aaa
incl
ror
sti
fsubs
in
stos
inc
roll
addr16
rcr
pop
cmc
aas
insb
jb
cmp
sbb
jbe
xchg
fiaddl
das
jp
mov
add
pop
fs
or
data16
ret
bound
shl
ss
cmp
add
and
icebp
mov
xchg
dec
gs
sbb
rorl
adcb
inc
mov
std
out
sub
or
jns
rorl
sbb
and
jle
rorl
scas
fiaddl
xchg
loop
pop
sub
mov
mov
out
popl
scas
pop
jecxz
mov
xchg
push
sbb
pusha
sub
mov
call
adc
fmul
enter
mov
mov
mov
push
xchg
sbb
mov
aam
push
rcrb
mov
push
mov
fcom
ret
xchg
push
movsb
inc
cli
xchg
cmp
sbb
inc
mov
fwait
push
mov
loop
call
lock
mov
mov
cmc
and
xor
xlat
pop
daa
mov
stos
inc
repnz
dec
incl
ljmp
je
sbb
and
and
lds
je
jle
out
sub
mov
jb
push
rorl
je
scas
push
xlat
stos
jne
xchg
paddb
inc
mov
add
ljmp
sub
hlt
stc
mov
add
or
fdivrp
std
or
push
and
test
scas
rcrl
dec
stos
sbb
push
and
sar
mov
inc
cmp
imul
and
dec
mov
ret
rolb
push
std
mov
loopne
fiadds
movsl
fistl
add
or
dec
and
pop
ret
imul
adc
or
jecxz
cltd
sub
in
pushf
or
jge
in
jg
in
adc
setg
pop
or
insl
inc
cld
stc
push
xor
pop
mov
outsl
scas
push
push
sub
hlt
inc
adcb
lcall
cli
add
vpshrdvq
repnz
mov
mov
sbb
mov
and
in
lods
add
add
lock
stos
std
scas
cli
or
adc
add
stc
or
loopne
cmp
sarl
das
popa
repz
call
or
sbb
adc
and
inc
inc
add
std
mov
cld
jno
cs
shlb
call
fildl
inc
or
lock
lahf
mov
pop
lahf
call
sar
iret
mov
repnz
push
inc
loop
dec
sbb
xorl
rcrb
pop
add
addb
lods
push
lds
xchg
mov
mov
dec
in
or
lock
cltd
call
insl
mov
pop
stos
inc
ljmp
jl
je
dec
insb
fwait
sub
inc
dec
sub
dec
loope
shl
pop
mov
jp
into
in
clc
mov
pop
cwtl
imul
or
and
pop
cs
aam
enter
insb
xchg
xchg
loopne
xchg
outsl
mov
lods
cltd
and
fs
push
fst
push
dec
jbe
out
jle,pt
int3
loopne
dec
ljmp
and
jo
loop
stos
aaa
xor
cwtl
sub
pushf
aas
xchg
test
cld
stos
data16
in
call
fists
insb
pop
add
js
dec
mov
mov
incl
mov
adc
mov
jge
xchg
xor
mov
inc
nop
sahf
or
ds
mov
cld
fisubs
or
adc
adc
sbb
mov
loopne
xor
inc
mov
mov
inc
iret
imul
push
mov
sbb
pop
sbb
decl
add
xor
repz
lods
sub
mov
roll
add
dec
rolb
popf
and
out
cmp
adc
rol
aam
dec
add
cmc
test
pop
icebp
pop
fidivl
push
mov
ss
fisubl
inc
lcall
push
pop
mov
in
sti
inc
xor
dec
inc
adc
or
repz
mov
lret
lds
cltd
add
pop
mov
mov
push
cmp
mov
sahf
lds
shr
adc
popf
xor
aam
jg
int
mov
out
mov
pop
outsb
clc
es
dec
sbb
movsl
xor
cmpl
loopne
mov
ret
lea
adcl
add
decb
push
jl
out
mov
mov
push
fadds
ds
in
aam
pushf
sbb
sub
dec
cmc
incl
push
loop
aam
imul
fnstsw
xchg
lret
cmp
dec
push
lods
mov
or
cmpsl
jbe
mov
icebp
add
add
mov
mov
les
cwtl
inc
js
inc
pop
lock
xor
inc
rolb
insb
cld
sbb
push
lods
enter
dec
les
push
pop
lahf
inc
adc
orl
xchg
xor
test
push
movsb
mov
add
jl
roll
dec
sub
mov
push
cs
loopne
pop
sbb
xchg
cmp
or
mov
mov
add
push
cld
add
pop
ret
cmp
pop
sbb
pop
ficompl
inc
pop
xchg
inc
mov
nop
bound
inc
aam
inc
mov
or
cmp
dec
aas
jns
loopne
add
jle
sarl
mov
das
mov
dec
push
push
cld
add
adc
or
cmc
add
sub
or
sbb
pusha
mov
pop
cmp
int3
loope
mov
cs
sbb
push
mov
mov
sbb
lods
mov
or
pop
inc
sbb
aad
mov
fcmovu
stos
jl
push
mov
je
cmp
and
adc
rcll
mov
les
test
and
inc
iret
push
cmp
sbb
xor
inc
and
incl
das
and
nop
call
adc
add
int
add
pusha
sbb
call
rcrl
outsb
iret
aas
cmp
xor
mov
cmc
imul
dec
jge
fstp
mov
sbb
xor
xor
pop
push
or
in
push
ja
sbb
test
shlb
dec
mov
out
pop
mov
test
sub
push
inc
mov
dec
jl
fsubrl
lret
pop
insl
in
xor
les
test
inc
jns
push
cli
decl
push
pushf
orl
add
jns
or
ljmp
adc
mov
and
cmp
repnz
clc
pop
xor
sub
mov
jl
mov
push
or
and
imul
loope
dec
xor
cld
add
xor
ja
mov
xor
push
xchg
jmp
out
and
or
xchg
xchg
negb
sbb
lock
xor
mov
or
jg
jae
jp
pushf
xchg
inc
mov
dec
sub
bsf
push
or
pop
cmp
mulb
fwait
dec
std
adc
sub
cmpsl
sahf
mov
or
and
push
rcl
xor
pop
sahf
idiv
js
mov
sub
or
in
add
mov
add
push
add
decl
stos
outsb
sbb
sbb
out
mov
xor
into
add
push
jl
jo
push
ss
xchg
cmpps
jle
enter
fs
and
insb
adc
mov
aam
pop
call
out
mov
fcomip
or
xor
xor
bound
lods
adc
adc
imul
loop
push
stos
pop
popf
pushf
sbb
in
addr16
push
pminsw
cli
and
fcompl
or
clc
xchg
add
lcall
jecxz
sbb
test
fistpll
mov
es
mov
push
arpl
pop
clc
xlat
sbb
cld
jae
sahf
aad
int
aas
int3
das
test
movsl
xor
in
les
pop
sbb
jo
add
inc
jns
add
mov
clc
scas
add
pop
mov
mov
dec
nop
add
mov
outsl
test
aas
lret
push
and
lods
dec
shll
fisubrs
sbb
mov
pop
inc
cld
shl
xchg
cmp
dec
in
nop
cs
mov
xor
pusha
incb
xchg
mov
mov
pop
addb
cmp
sub
pop
in
dec
mov
inc
pushf
rclb
xor
mov
dec
lea
clc
mov
dec
cmp
xchg
jne
fwait
inc
sbb
xchg
insb
inc
out
div
and
cmp
mov
cli
fisttps
or
xchg
in
add
sbb
jmp
inc
fistl
xor
mov
aad
or
sub
xor
mov
dec
lock
test
jno
sbb
ljmp
or
fistpll
cmc
push
lcall
xchg
or
inc
jg
mov
and
add
xor
or
dec
mov
lock
out
xor
jo
sub
outsl
push
shl
dec
jo
into
cmp
mov
out
outsl
fists
lcall
mov
sub
adc
push
jno
adc
rorl
mov
pop
cmpl
inc
out
cmpsb
mov
inc
and
fstps
jl
xor
iret
xor
fwait
add
call
out
adc
cmp
stc
ret
adc
aaa
cli
mov
addr16
inc
sbbl
add
adc
dec
adc
add
inc
jl
xchg
jo
aaa
inc
inc
push
inc
sub
fbstp
adc
es
push
dec
inc
daa
decb
subb
or
adc
or
sbb
pusha
sbb
nop
add
cwtl
or
clc
add
sub
mov
jp
scas
in
jne
push
mov
push
pop
push
cld
pop
ficomps
mov
cltd
add
xchg
movsl
decl
js
inc
jp
mov
mov
std
std
lods
jg
mov
lock
sbb
sub
add
lock
aad
stos
add
mov
or
push
add
pop
add
out
data16
out
mov
ss
outsb
adc
movsl
ret
mov
and
push
mov
ja
stc
xchg
mov
fs
mov
mov
std
jb
loopne
inc
dec
lods
outsl
cld
inc
cltd
shrb
xor
jle
hlt
xor
pop
mov
dec
pop
cmc
mov
sbb
iret
les
test
inc
ret
mov
popf
mov
or
icebp
cltd
dec
test
dec
sub
jne
loop
add
loope
lock
xchg
adc
bound
xchg
or
aaa
rcrb
add
fidivrl
lock
jne
nop
lret
sub
testb
out
pop
dec
sbb
add
rorb
adc
ljmp
mov
sbb
push
xchg
movsb
ret
adc
sub
dec
cli
int3
nop
xor
jp
inc
sbb
xor
xchg
dec
jnp,pt
sbb
and
lods
roll
xor
and
pop
add
jp
push
and
scas
inc
lcall
jns
fs
dec
clc
pop
dec
push
arpl
add
movsl
adc
into
in
mov
cltd
loop
inc
movsl
jmp
mov
push
sbb
pusha
das
cltd
push
movsl
cmp
arpl
mov
jnp
push
pop
push
adc
cmp
adc
push
clc
xchg
loop
push
pop
fdivrl
mov
mov
jge
push
in
insb
xchg
outsl
sets
lods
cli
xlat
addr16
pop
js
dec
aaa
cld
sbbb
jnp
stc
icebp
test
inc
aad
mov
mov
dec
mov
ret
sti
and
cmp
jl
iret
add
mov
sub
rol
pop
and
sub
imul
cwtl
xor
test
out
jo
orb
mov
push
or
popa
mov
xor
add
int3
rcrb
dec
enter
adc
ljmp
inc
add
and
inc
inc
xor
cmpl
es
sbb
jge
lods
test
decl
mov
mov
inc
sub
adc
scas
jecxz
or
test
test
js
sbb
or
test
inc
mov
call
jmp
dec
push
jae
xor
xchg
ss
stos
stos
mov
ret
adc
sub
fadds
inc
mov
jmp
push
jecxz
add
push
repz
push
and
xchg
jle
xchg
adc
or
aaa
mov
shll
sahf
jle
jnp
fimull
inc
dec
adcl
imul
xchg
inc
or
outsb
adc
jl
mov
and
pop
dec
mov
xlat
adc
call
call
cmc
repz
jp
lds
xchg
mov
jg
cli
and
cmp
xchg
mov
jg
sbb
int
mov
pop
loopne
push
fwait
or
cmpsb
and
out
adc
ret
add
js
test
aam
jg
inc
sub
or
push
inc
sub
mov
adc
fistpll
int3
cmp
ret
push
sub
into
enter
jne
movsb
in
ret
add
push
pop
fs
mov
out
add
sub
mov
dec
sbb
adc
daa
push
add
mov
jg
push
mov
pop
adc
loope
in
pop
std
push
mov
lcall
hlt
cs
mov
pushl
stos
cmp
xor
ret
idivl
and
xor
inc
aad
dec
jp
loopne
outsb
sarb
arpl
loope
movsb
mov
test
fsubs
xchg
jbe
das
idivl
push
add
mov
sahf
test
or
push
lret
jne
pop
repnz
mov
xor
push
mov
xchg
push
dec
test
jl
mov
rolb
loopne
jg
addl
sbb
and
aaa
std
xlat
ljmp
pop
and
cmp
std
jg
pop
jbe
test
rolb
mov
in
sbb
sub
into
mov
call
outsl
in
adc
dec
mov
movsb
sub
push
test
adc
daa
loopne
and
shlb
ja
clc
jo
pop
push
pop
nop
inc
movsb
mov
mov
dec
cmp
es
mov
push
add
jb
push
or
bound
push
mov
dec
fistl
out
push
push
sub
push
mov
push
into
pop
test
scas
jp
testb
lret
or
dec
pusha
and
cld
call
movsl
stos
fs
adcl
xchg
cmp
pop
int
push
enter
pop
sub
push
shrl
pop
addr16
pop
xchg
and
adc
mov
pop
adc
or
push
inc
cmp
clc
stos
mov
dec
xchg
pop
pop
cmp
pop
shr
add
mov
cli
cli
adc
pop
push
sub
pop
jl
ljmp
lcall
jg
pop
sub
cmc
dec
mov
pop
lods
cmc
push
clc
fldt
and
das
sbb
xchg
aam
adcl
stc
pop
xchg
sbb
pop
stc
ljmp
cmc
xchg
imul
test
adc
mov
push
mov
lods
sbb
mov
mov
fdivs
movsl
nop
std
decb
sarb
movsb
insb
inc
mov
enter
adc
push
add
mov
fbld
adc
int3
and
decl
call
adc
loopne
sbb
cltd
cwtl
js
xchg
cmp
scas
outsl
sub
inc
outsb
jp
and
addl
cs
sbb
pop
decl
pop
test
and
sbb
dec
outsb
or
or
scas
sbb
mov
sbb
sbb
ret
xlat
sbb
cltd
push
dec
mov
mov
jns
mov
jo
pop
xchg
or
scas
mov
mov
aad
fisubl
cli
xchg
sub
cmp
or
sbb
xor
pop
cmp
gs
xchg
js
movsl
ret
mov
out
mov
sub
jmp
push
pop
dec
xchg
mov
outsb
adc
push
outsb
pop
shrb
out
js
lret
rolb
jo,pt
lock
mov
mov
hlt
or
mov
imulb
test
add
dec
sbb
cmc
and
cmp
insb
fistl
sbb
iret
loop
pop
clc
cwtl
movsl
jno
jae
das
xchg
repz
inc
cmp
int3
or
push
std
mov
push
shll
ss
sub
inc
outsb
jnp
mov
icebp
mov
clc
mov
mov
jl
jl
movsb
jg
fisubrs
in
mov
fisubl
add
cmp
inc
mov
popa
rcl
out
sub
mov
adc
out
fcoms
inc
pop
adc
pop
mov
mov
dec
xor
mov
movsb
scas
ror
push
faddp
mov
out
xchg
mov
mov
mov
roll
ljmp
cmp
cmp
jmp
or
mov
into
xchg
inc
mov
std
incl
daa
int3
xchg
fsubr
push
outsb
xchg
insl
sbbb
icebp
jno
outsl
push
shl
mov
and
fists
dec
mov
or
negb
clc
xchg
pop
mov
outsl
xor
inc
xor
fidivs
dec
adc
adc
mov
fcoms
add
inc
dec
cwtl
jecxz
decl
insl
inc
fisttpll
xchg
push
inc
dec
and
add
cmp
adc
lods
faddl
rcl
scas
ss
xlat
shrb
imul
xor
dec
repz
push
repz
clc
or
or
mov
and
and
dec
push
push
mov
icebp
cmp
stos
in
imul
stos
or
pop
inc
ret
push
adc
fsubl
lret
pop
inc
fidivrs
jle
inc
and
xchg
aam
pusha
adc
shl
aas
sbb
or
insb
mov
jmp
fildl
cmp
mov
mov
loop
je
leave
loop
pop
xchg
divps
add
jl
ret
jno
push
push
das
sbb
push
fdivl
cmpsb
cltd
shrl
adc
xchg
push
add
sbb
dec
push
adc
sub
add
cmp
jg
leave
decl
adc
cmpsl
lahf
out
inc
sbb
ret
or
loop
add
sbb
cmp
aam
cli
or
mov
icebp
negl
scas
out
inc
lods
data16
dec
mov
jp
sbbl
out
sub
mov
dec
mov
icebp
and
dec
cld
lahf
mov
std
dec
ficompl
mov
sbb
and
mov
rcrl
aas
cmpb
stos
xor
adc
mov
js
lret
sbb
inc
hlt
inc
xchg
movsl
shl
call
xchg
xchg
sbbb
inc
sbb
swapgs
imul
loopne
mov
pushf
xor
notb
pop
jl
mov
les
test
lret
adc
or
incb
gs
cmpsl
movsb
or
inc
test
lods
mov
xor
fildl
sbb
ror
xchg
les
ss
pop
and
into
xor
les
xchg
mov
aas
pop
xchg
xchg
das
cli
mov
lock
jns
add
pop
daa
dec
mov
loopne
inc
out
rcr
push
sub
std
sub
adc
insb
xchg
mov
sbbb
mov
sbb
push
subl
sub
push
enter
add
sbb
out
xchg
mov
stos
inc
cltd
or
push
clc
push
fildll
icebp
icebp
pop
fildll
shl
mov
int3
push
pusha
sti
outsl
mov
adc
pop
sbb
cmpb
sbb
jmp
inc
es
lds
push
call
bound
addr16
xchg
push
mov
incl
sbb
lods
fmuls
xchg
cmpsl
cmp
jno
or
jl
dec
cltd
mov
jg
dec
icebp
stc
add
jb
adc
test
in
loope
and
jb
pop
sub
mov
jb
clc
stos
fistpl
or
nop
cmp
adc
adc
lcall
inc
push
roll
push
hlt
pop
mov
outsb
and
xchg
enter
ja
mov
or
fldt
loope
orl
cld
enter
ret
xor
loop
adc
push
or
lea
cld
lret
adc
xor
push
inc
stos
pop
std
mov
pop
mov
pop
push
cs
lcall
ja
test
push
leave
in
in
xchg
push
cli
sub
jg
scas
xchg
das
push
fildll
and
rol
in
hlt
jp
sbb
test
lds
cmp
push
cmp
outsl
jp
mov
xor
ret
cwtl
cmp
xor
cmp
out
pop
loop
ds
bound
call
rol
jl
sub
sbb
and
mov
inc
adcb
push
incl
or
jl
adc
push
in
sbb
mov
cmpsb
pop
jno
and
inc
adc
pop
insb
xor
adc
test
ds
pop
ret
jl
push
ljmp
pop
push
adc
lcall
andl
mov
jbe
andb
ret
and
adc
inc
xorb
mov
test
mov
sbb
or
jmp
push
jo
bound
roll
dec
sbb
scas
sbb
std
push
fs
mov
insl
push
or
aas
and
mov
cmp
insl
test
mov
clc
cmp
mov
js
lods
clc
decl
mov
jmp
xchg
xchg
enter
and
rcr
mov
loop
lret
lds
insl
pop
fcoms
push
pusha
sti
adc
mov
js
ss
mov
enter
xchg
jae
pusha
les
int3
adc
push
lret
sub
mov
xor
repz
dec
inc
sbb
xor
andb
add
adc
inc
add
mov
pop
cmp
clc
aad
punpckhbw
mul
inc
out
ficomps
das
mov
pushf
stos
adcb
add
mov
jb
lcall
mov
mov
xchg
push
mov
iret
or
inc
fisttpll
push
mov
cmp
enter
mov
push
scas
in
sub
popf
sbb
movsb
mov
out
loopne
cmp
aas
cld
aaa
fcomps
je
ss
sarl
aam
push
fcos
repz
lret
xchg
hlt
pushf
add
iret
dec
add
test
mov
data16
lods
clc
mov
mov
pop
sbb
sbb
pusha
push
inc
jg
loop
sub
test
sbbb
sub
jge
push
mov
loopne
mov
push
ret
rclb
dec
adc
test
mov
sbbb
add
xchg
pop
into
aaa
xor
adc
xchg
add
in
loope
sbb
or
lea
push
mov
inc
das
mov
lds
insl
xchg
cmp
cli
inc
dec
add
adc
add
xchg
leave
xchg
adc
clc
add
lods
mov
add
xchg
cmp
xor
scas
dec
rolb
xorb
imul
in
inc
sbb
inc
notb
insb
scas
mov
int
stos
sar
and
pmulhw
data16
pop
inc
test
call
pusha
and
int3
clc
lds
add
stos
insl
hlt
xor
mov
pop
add
repnz
test
loope
add
mov
sarb
jae
test
jle
push
add
sbb
mov
push
mov
movsb
push
out
test
rcll
sbb
inc
mov
jo
arpl
pop
adc
fdivl
pusha
or
aad
mov
std
fwait
incb
sbb
decb
inc
bound
test
mov
xor
popa
ret
push
mov
sbbl
xchg
mov
outsl
in
xor
jns
inc
jo
loopne
or
pop
fcom
sti
jle
test
out
push
jno
add
negb
cwtl
faddl
inc
mov
add
sub
fdiv
addl
or
mov
mov
mov
int3
adc
and
js
nop
pop
nop
sub
mov
mov
mov
orl
xor
adc
dec
and
fsubl
jae
ljmp
std
mov
lock
lret
pop
mov
int3
inc
jae
imul
lret
xor
aam
ret
pushf
gs
mov
test
push
cld
decl
shrl
mov
mov
jne
mov
xor
xor
mov
mov
mov
mov
pop
rclb
call
cltd
jmp
fs
mov
cmc
pop
jns
std
hlt
lret
sub
add
ljmp
sbb
pop
lock
jbe
cmp
adc
mov
mov
xchg
std
and
nop
into
nop
test
mov
add
mov
bound
pop
mov
scas
loop
sahf
ljmp
test
subl
dec
ret
fs
xchg
dec
sub
call
and
mov
fisubrl
adc
outsb
mov
shll
cld
lahf
mov
xor
std
test
add
xchg
adc
sub
xchg
orb
mov
ret
mov
bound
testb
mov
or
inc
sbb
xor
neg
cld
xor
mov
add
mov
into
fs
pop
inc
repnz
std
sbb
push
push
mov
mov
test
movsb
mov
mov
cmp
dec
and
sbb
loopne
inc
adc
mov
sarb
push
and
push
inc
and
adc
push
adc
xor
dec
and
sbb
in
push
sbb
xor
mov
test
subl
in
xchg
sub
fcmovnb
xor
fldl
jmp
lea
sub
push
loop
inc
sbb
clc
mov
xor
dec
out
push
inc
xchg
and
sub
or
add
or
push
sbb
ss
jae
lret
test
outsl
lock
ljmp
xchg
cmp
fisttpll
and
in
pop
or
out
adc
call
outsb
sub
adc
mov
jmp
pop
in
lcall
pop
stos
lods
lock
add
sarb
repnz
fidivrl
loop
mov
sti
jno
pushf
pop
mov
mov
pop
sub
push
mov
push
cli
add
or
cmpsb
pop
push
mull
or
jno
xchg
fcomps
js
sbb
push
nop
movsl
or
pop
ret
in
pop
insl
jb
push
or
pop
mov
test
and
popa
and
pop
dec
es
test
mov
xor
jmp
je
js
imul
jg
call
outsl
add
insb
incl
aaa
int
dec
xor
jne
clc
inc
mov
js
add
ds
movsl
lcall
mov
xchg
push
lcall
sbb
loop
cltd
lcall
add
mov
sbb
imul
and
sahf
ret
push
xor
mov
sub
cmp
mov
mov
push
iret
mov
loop
fsubrs
inc
sub
jbe
jg
jp
lahf
pop
add
pop
imul
decb
test
mov
or
inc
add
mov
xlat
pop
push
lea
js
cmp
ljmp
cmp
orl
cld
stos
insb
sub
sbb
hlt
fmulp
fiaddl
das
push
mov
bound
ja
and
adc
sub
xor
cmp
or
subl
mov
imul
nop
cmp
inc
jns
vpsraw
xor
roll
xchg
inc
jl
les
adc
adc
daa
mov
in
out
pop
hlt
and
std
mov
jo
out
outsl
ret
dec
push
lds
clc
aam
jg
xor
jo
jno
jmp
push
pop
pop
fidivs
push
rcrl
adc
or
push
mov
jg
je
add
inc
movsb
iret
and
inc
cmp
test
push
ret
das
pop
xchg
and
movsl
mov
pop
incl
jg
inc
out
and
mov
xchg
mov
ret
jo
lock
jle
shll
and
xchg
and
lods
rorl
lret
in
xchg
cld
cmp
and
faddl
pop
dec
daa
cmp
xor
cmpsl
shrb
inc
push
jae
or
test
loopne
andb
mov
add
hlt
test
aaa
orb
push
sbb
dec
cli
mov
sahf
xchg
xor
les
ss
test
loope
jge
mov
jecxz
or
and
jb
and
scas
adc
mov
adc
nop
pop
jbe
xchg
lods
pop
pop
xor
inc
int3
pop
and
popf
loopne
mov
jmp
ljmp
cmpl
pop
bound
dec
xor
loop
fwait
outsb
cwtl
and
test
stos
outsl
jl
icebp
pop
xor
aam
arpl
data16
scas
inc
and
xchg
inc
push
sbb
inc
jbe
in
xchg
adc
lock
jmp
or
mov
mov
popf
add
sarl
lock
fsub
mov
mov
xchg
outsl
mov
psrad
cld
jg
jle
pop
jae
xchg
mov
dec
add
loopne
aaa
add
lahf
jle
xor
fldt
lcall
mov
inc
mov
call
adc
or
loop
sti
xchg
lods
pop
stos
stc
aas
push
loope
xchg
cs
lods
push
insb
xchg
mov
filds
pop
push
inc
aad
mov
fwait
cmp
scas
addb
arpl
sbb
xor
cmc
gs
pop
icebp
rcrl
inc
sub
mov
xor
test
cmp
lahf
test
push
sub
pushf
ja
fwait
ds
mov
fwait
lods
or
cwtl
xor
cltd
int3
in
lea
xchg
pusha
fsubs
push
jo
pop
std
cmpsl
mov
adc
inc
lods
push
push
sub
inc
xor
mov
xor
push
lods
xor
fcoml
pop
test
xchg
jb
jbe
add
movsl
test
loop
cmc
pop
pusha
add
mov
mov
add
ss
push
ret
and
push
es
add
loop
adc
inc
xlat
jbe
dec
sub
sub
xchg
mov
psllq
mov
sub
mov
inc
push
and
and
int3
pop
xchg
push
mov
mov
add
mov
movsl
outsl
inc
mov
cld
dec
rcr
pop
sub
mulb
mov
or
movsb
inc
mov
inc
mov
cwtl
push
inc
mov
shlb
lahf
rorb
lods
loop
rolb
cld
or
or
mov
es
jbe
cmp
sbb
add
pushl
rcrb
cltd
iret
add
xchg
sub
cmp
and
xchg
push
rorb
les
mov
pop
mov
shll
stos
sub
xorb
xchg
xor
push
push
in
jbe
jbe
loopne
mov
jo
rcrb
fwait
mov
test
sub
push
dec
push
mov
adc
cld
lcall
add
test
fldl
mov
push
scas
lock
insb
pop
push
mov
jb
add
cmpsb
popf
clc
jo
adc
push
mov
lock
subl
les
insl
js
scas
bound
xor
jp
loope
push
mov
mov
xchg
test
dec
pop
fwait
mov
fldt
pop
add
cwtl
adc
data16
adc
dec
xchg
fldenv
decl
loope
and
shrb
dec
add
sub
sahf
sbb
adc
pop
cmp
lods
test
jmp
mov
jbe
insl
cmp
adcb
fstpt
xchg
adc
inc
push
pop
ret
mov
insb
stc
dec
mov
add
jg
inc
and
cmpb
pusha
dec
add
sbb
mov
push
push
aaa
jecxz
sub
js
dec
call
sbb
cmp
andb
push
jnp
cld
mov
sbb
shlb
imul
push
pushl
xchg
testb
dec
cld
add
or
nop
repnz
loopne
and
lods
xchg
pop
sbb
roll
cli
mov
or
push
or
popf
adc
cmpsb
jb
stos
jecxz
in
loopne
xor
or
xor
mov
loope
pusha
inc
cltd
add
fsts
js
ja
insl
clc
daa
or
adc
xchg
shrl
cmpsb
sbb
mov
call
jecxz
inc
push
push
insl
inc
xor
xchg
mov
adc
shll
xchg
in
and
sbb
sbb
adc
xlat
je
pop
outsb
pusha
jl
shlb
shrl
adc
adc
ja
cli
sbb
jns
jo
jns
xchg
jo
cmpsb
mov
in
xchg
or
aam
xchg
outsb
sti
lods
mov
cli
inc
mov
or
mov
lahf
lods
out
mov
lds
lock
pushf
or
aam
jb
sti
outsl
in
mov
cmc
loope
push
loope
xchg
jae
lds
dec
or
stos
movsb
jns
rep
add
lods
push
popa
xlat
int3
dec
js
mov
jl
pop
mov
cli
int3
roll
nop
push
mov
lods
fdivr
mov
filds
pusha
decb
enter
jnp
mov
xchg
stos
scas
clc
in
dec
inc
add
out
add
push
enter
mov
clc
jg,pt
pushl
add
push
fcomps
dec
xor
call
pop
jmp
pop
fs
leave
enter
and
stos
mov
stc
mov
inc
adc
fistpll
mov
push
enter
inc
aam
xchg
mov
and
jmp
hlt
push
push
add
push
dec
mov
and
push
mov
inc
mov
xchg
sub
push
lea
decl
mov
jbe
jae
jecxz
jp
and
cmpsb
cmpl
ret
daa
pop
cwtl
inc
sbb
mov
ljmp
pop
and
ret
jmp
stos
mov
fimull
cmpl
rcrb
inc
add
pop
and
xchg
jl
sub
xor
fldt
mov
call
lods
ret
pop
mov
ss
iret
leave
or
sbb
xorl
call
lea
push
rcrl
mov
jmp
and
pushf
ds
stc
lea
push
mov
je
je
lock
adc
test
add
call
jg
jle
push
ds
xor
and
xor
pop
lock
dec
iret
jbe
mov
clc
iret
dec
mov
stc
mov
add
ljmp
out
and
rcll
lret
pop
cli
jg
mov
mov
sub
and
int3
iret
rol
js
ret
jo
pop
sbb
or
push
icebp
bound
loop
bound
pop
mov
push
pushf
mov
mov
shll
stos
push
ds
inc
mov
mov
jbe
cmp
and
xlat
xchg
js
pop
lods
idivb
mov
fisubl
dec
and
dec
dec
cwtl
clc
lock
pop
test
pusha
pop
pop
into
lods
and
shll
adc
sahf
xchg
adc
bound
filds
jmp
mov
pop
loope
xor
cmp
scas
jp
pop
in
roll
cmpsl
test
xchg
adc
movsb
jb
ljmp
into
std
cld
add
aaa
mov
mov
loop
fists
mov
sub
testl
cmp
ret
test
mov
psubsw
in
cmp
xor
leave
adc
lret
hlt
outsl
add
mov
mov
mov
mov
pushl
shll
mov
icebp
mov
test
jmp
rcrb
xor
pop
jl
hlt
loop
pop
addr16
adc
xchg
adc
push
push
jbe
mov
pop
cmp
adc
or
mov
mov
add
testl
jl
adc
push
sub
nop
arpl
xchg
jb
adc
rclb
mov
mov
inc
int3
jns
lret
pusha
dec
lds
xchg
mov
mov
or
inc
hlt
xchg
and
push
out
mov
xorl
xchg
movsb
or
pop
xor
in
fisttpll
xchg
xchg
enter
dec
rcrb
incl
add
sbb
fs
add
add
dec
cmp
call
cwtl
cmp
push
out
or
ja
push
dec
pop
outsb
push
add
je
in
add
outsl
push
in
ljmp
je
int
test
stc
or
mov
add
clc
or
out
adc
les
lahf
fs
xchg
inc
int
test
fwait
inc
cli
pcmpgtw
inc
inc
push
mov
adc
sub
sub
or
fs
decl
or
mov
jmp
into
xchg
js
mov
sti
fidivrl
ja
lock
sub
aaa
mov
push
pop
sarb
cli
pop
xchg
incb
in
ljmp
dec
add
das
and
pop
mov
icebp
loop
pop
ret
aam
xchg
mov
ljmp
push
ret
cmp
call
or
sbb
adc
and
add
push
ret
or
or
std
and
jl
sbbb
cs
xchg
mov
mov
rclb
push
jmp
mov
aam
xor
pop
mov
push
add
idivl
movsb
sub
imul
sbb
mov
mov
sahf
xorl
xchg
jmp
shlb
ljmp
pop
pop
or
pop
adc
push
dec
cmp
push
xchg
mov
ljmp
orb
xchg
out
push
adc
and
leave
decl
mov
mov
cmp
pop
push
sub
and
clc
jl
ret
mov
sahf
lret
or
adc
aas
movsb
ret
adc
push
mov
and
sbb
hlt
dec
jmp
or
or
insl
xchg
xor
sbb
test
jmp
push
add
std
mov
mov
pop
mov
scas
cmp
add
out
sarb
sub
movsl
cmp
jmp
push
jo
stos
add
into
xchg
fidivrs
mov
dec
dec
jmp
ret
push
and
inc
das
inc
pop
rclb
negl
or
dec
mov
cld
bt
mov
rcl
inc
sub
scas
adc
cs
push
fcomps
lock
mov
lock
or
loopne
xchg
ljmp
mov
mov
fwait
cltd
movsl
jno
in
jbe
in
xchg
xor
pop
xor
xchg
popa
fsubs
adc
jmp
adc
sti
add
test
cmp
rcr
inc
pop
xor
mov
push
xchg
fsubl
cmp
shlb
sub
jle
dec
sbb
fcmovne
ja
insl
jbe
cli
mov
mov
sbb
or
add
lret
or
ljmp
lods
call
dec
and
pushf
lahf
test
enter
jmp
adc
adc
sub
int
lock
pop
xchg
insl
mov
cld
pop
add
jo
jp
and
stos
sahf
push
mov
scas
loop
mov
jp
inc
std
test
cwtl
imul
lock
test
cmp
cmp
int3
fcoms
call
loop
fnstsw
fdivr
mov
pop
ss
adc
push
js
cli
aad
hlt
sub
into
loopne
sar
out
fmull
push
shl
dec
mov
jns
ds
ljmp
add
jg
rcrb
mov
dec
rclb
adc
les
mov
repz
add
mov
push
inc
stos
outsl
or
bound
scas
inc
sub
dec
mov
pushf
mov
jno
nop
jl
lret
cmove
sti
pop
sbb
icebp
std
cs
cmp
add
in
xchg
inc
js
sahf
dec
mov
inc
or
js
scas
jg
or
push
andl
insb
sub
insl
jp,pt
jb
loop
bound
loope
mov
xorl
rcrb
mov
and
push
mov
ss
and
jne
add
sub
nop
call
arpl
cli
xor
insl
dec
mov
xchg
stos
pop
xor
dec
test
cwtl
clc
jo
out
in
sub
push
sub
adc
push
sbb
shlb
loope
cmp
xor
mov
push
andb
push
jle
cwtl
and
sbb
cmpsb
aam
or
add
or
fidivl
in
xor
enter
sbb
xchg
lods
test
mov
out
movsb
jg
pusha
cmp
xchg
repnz
pop
mov
jp
pusha
shll
nop
pop
add
hlt
add
shrl
dec
fstl
mov
insl
inc
dec
sub
xlat
mov
mov
lret
cmp
les
xchg
jle
cmp
enter
das
mov
xchg
pop
pusha
fsubp
es
pop
jmp
aam
int
pop
add
fdiv
jb
pop
xlat
call
xor
loop
add
mov
xor
ds
push
stos
add
lahf
xchg
push
push
hlt
je
jb
and
pop
std
decl
cltd
ljmp
call
mov
cld
aad
xchg
mov
adc
adc
clc
pop
bound
sbb
dec
dec
mov
mov
jmp
sub
jb
fisttps
lods
adc
add
jge
add
cmp
loope
pop
fdivrp
jg
push
fsts
sbb
xchg
mov
test
inc
sar
pop
push
mov
mov
xor
push
add
mov
outsb
xchg
mov
cld
cld
outsl
jp
fcmovu
pop
aaa
out
pop
and
inc
stos
dec
sub
ficomps
in
cld
jg
jge
out
lea
adc
fs
sbb
jae
adc
int3
shl
xor
pop
stos
xorb
icebp
dec
and
subb
mov
xlat
dec
je
aad
ss
and
aaa
sub
sbb
addr16
ret
sub
ja
hlt
mov
push
ljmp
aad
jp
sbbb
bound
push
mov
and
mov
inc
cmpsb
pop
fisttpl
pop
mov
sbb
subb
adc
sub
mov
les
jb
clc
or
aaa
in
adc
inc
dec
lret
pop
movsb
sub
mov
loop
push
insb
pop
cmpsl
mov
push
fstpt
xchg
jo
repnz
scas
loope
cmpsb
lock
and
pop
inc
mov
pop
inc
and
cmpsb
jle
out
mov
stc
int3
cs
in
outsl
loop
or
sub
pusha
mov
int
pop
inc
pop
mov
inc
cmp
add
out
jnp
jg
movsb
add
sub
pusha
out
mov
add
inc
ficomps
push
jle
pushf
push
inc
mov
clc
repnz
scas
clc
outsl
or
mov
rcl
test
popa
mov
cli
push
int3
enter
mov
cmp
fcoml
enter
adc
loop
aas
cmc
lcall
les
std
fwait
dec
aad
lea
xor
mov
call
nop
lret
sub
add
lcall
push
cld
or
sub
insb
or
stos
lods
jo
mov
add
in
sbb
out
xchg
cmp
addr16
es
fcoms
and
sbbb
mov
inc
cmc
aas
lea
in
add
dec
icebp
mov
cwtl
jmp
call
frstor
adc
sahf
stos
push
out
lahf
dec
sbb
add
adc
sti
xchg
test
ret
and
popa
clc
mov
mov
enter
pop
stos
xchg
push
push
xchg
sahf
popa
push
aaa
mov
xchg
leave
jno
xchg
loop
aaa
sub
cmpsb
lods
sbb
sub
je
mov
push
cwtl
notl
jg
or
push
aam
imul
adc
ljmp
arpl
mov
push
call
sub
and
mov
push
sbb
sub
shrb
jp
pop
mov
adc
push
add
notb
push
shlb
aas
out
bound
mov
scas
into
mov
mov
cld
mov
sub
adc
pop
data16
mov
pop
push
push
cmp
inc
jno
in
or
ljmp
xor
faddl
popf
movsb
sub
jne
push
or
push
call
aad
in
outsb
cwtl
push
lsl
or
push
cmpsl
fsub
xor
mov
dec
jmp
mov
cmp
add
shrb
jl
in
rcrb
adc
sub
jmp
add
fidivrl
sub
test
inc
and
lods
mov
jb
push
jmp
mov
sbb
mov
sbbb
fs
rolb
push
push
call
in
fcomps
popf
cmpsb
xor
in
loopne
sub
fisubl
in
mov
and
ss
test
out
adc
sbb
mov
sbb
pop
inc
mov
clc
jg
inc
lea
xor
inc
imul
rolb
popa
mov
ja
xchg
jns
or
ja
nop
xor
dec
xchg
jno
lahf
std
xchg
sbb
enter
aad
les
xchg
pop
out
mulb
jp
dec
add
sub
sub
bound
faddl
mov
add
cmp
test
fimuls
or
push
fiadds
sub
adc
sti
add
push
and
cmc
cmc
in
cmp
test
lcall
inc
test
push
sub
mov
enter
cmp
lcall
xlat
mov
lret
sub
sbb
frstor
add
mov
pop
lock
cwtl
mov
aas
lret
add
cmc
push
cld
sbb
push
sbbl
cmpsl
std
cmc
push
dec
sti
decl
test
out
xlat
adc
mov
push
es
mov
adc
lock
mov
in
adc
add
or
loopne
jo
xchg
lock
add
mov
and
std
pop
roll
les
in
jle
loopne
mov
je
jecxz
ss
iret
push
mov
xchg
arpl
pushl
and
daa
in
inc
arpl
fdivr
ror
cmp
lock
aam
push
and
jbe
les
xlat
cmp
xor
insb
mov
jge
enter
adc
xor
lods
jp
aaa
or
mov
andl
in
inc
sub
outsl
sub
sub
inc
mov
xor
cmpsb
ljmp
dec
fcmovb
adcb
mov
arpl
aam
push
xor
or
mov
sbb
pop
push
push
or
xchg
insb
or
lock
mov
pop
icebp
movsb
inc
call
xor
adc
aad
mov
popf
xor
and
loopne
mov
push
inc
push
cli
cmpsb
fmuls
pop
stos
data16
mov
test
mov
cmove
popf
mov
les
lcall
in
scas
inc
out
ss
in
sti
adc
mov
mov
in
mov
xor
mov
cmc
lods
jge
and
adc
stos
sbb
andl
xchg
addr16
outsb
dec
pop
outsl
mov
scas
adc
mov
dec
orb
jecxz
stos
mov
push
dec
push
pop
shlb
mov
ja
hlt
and
in
push
clc
incl
mov
xor
subl
pop
mov
pop
xor
loop
adc
jl
pusha
pop
ljmp
cmp
cld
mov
dec
push
mov
pop
and
ljmp
cmpsb
fs
andb
mov
mov
push
mov
dec
xor
push
cld
sbb
outsl
aam
push
movsl
data16
and
in
xchg
addr16
sbb
rorb
outsb
jae
addr16
and
mov
lods
push
mov
lret
scas
and
rclb
cli
nop
jge
in
lcall
cmpsl
test
in
cmp
xchg
push
push
pop
dec
jmp
insb
push
pop
push
lea
fdivl
shrb
jmp
stos
insb
cmc
or
pop
mov
rorl
inc
ljmp
xor
xor
mov
pop
mov
cmpsb
xor
call
add
repz
fisubrs
add
xor
movsb
adc
movsb
pusha
test
dec
cmpsl
fwait
add
jg
sub
jle
lds
sbb
mov
fs
icebp
jo
fisubl
inc
stos
jb
fnstcw
mov
or
inc
adc
ds
icebp
shll
or
push
test
mov
stc
xchg
mov
pop
jbe
pop
add
jg
mov
add
dec
xchg
add
xchg
or
mov
pop
scas
and
pop
jge
dec
sbb
pop
add
mov
packssdw
mov
aad
push
bound
mov
or
mov
inc
jl
dec
andl
fwait
and
or
fldz
sahf
sbb
mov
jecxz
mov
fs
mov
and
dec
and
adc
js
inc
ljmp
ds
jle
int3
inc
push
cmp
cmp
add
aam
adc
xchg
adc
sub
mov
pop
xor
scas
pop
test
cmp
push
mov
int3
xor
std
cmp
std
movsl
cmp
lods
jae
xchg
clts
jbe,pt
js
push
call
inc
pop
mov
dec
cltd
ja
movsl
xchg
add
mov
test
jns
sbb
dec
ror
add
mov
and
jg
hlt
adc
adc
jnp
call
mov
iret
mov
sub
ss
jb
push
xor
stos
or
das
or
pop
in
sahf
inc
or
add
sub
imul
jl
rolb
sbb
fstpl
call
rolb
loope
xchg
setnp
add
mov
icebp
inc
clc
xor
and
pusha
stos
frstor
or
add
inc
push
xchg
loopne
outsb
mov
insb
negl
sbb
out
pop
icebp
push
cmp
filds
add
pop
adc
and
xchg
add
clc
inc
inc
rorb
add
fidivrl
out
mov
mov
and
roll
push
cmpl
and
clc
call
adcb
into
inc
outsl
rcrb
fadds
inc
or
or
xchg
stos
adc
dec
aad
cmpsb
dec
test
std
aam
imul
stos
outsb
push
xor
xor
xchg
frstor
out
leave
push
inc
pop
ja
push
es
mov
loopne
xchg
dec
test
and
fildl
jns
fcom
add
push
add
test
jmp
mov
add
lret
insb
aas
addb
pop
jne
test
shlb
add
sub
int3
faddp
mov
add
ret
pusha
push
mov
fiaddl
cmp
pop
and
inc
sbb
bound
or
mov
xchg
std
iret
add
or
or
pop
mov
insb
rcrb
push
pop
iret
scas
nop
sub
dec
sbb
loopne
adc
cmp
cld
add
stos
sbb
mov
xlat
dec
push
aaa
adc
into
insb
inc
xor
cld
sub
inc
xor
js
pop
cmc
or
push
mov
and
data16
outsb
int3
test
and
jg
add
into
push
cwtl
fildl
inc
push
dec
adc
shl
fwait
add
push
hlt
fmuls
mov
out
mov
sub
sub
shlb
adc
mov
loope
cld
and
mov
or
rclb
je
sbb
push
cmp
stc
mov
sbb
sub
dec
call
dec
push
or
push
pop
test
test
inc
and
lea
daa
and
mov
jge
xchg
insb
add
push
mov
and
sub
fdivrs
adc
jnp
adc
not
push
push
es
data16
cmp
ret
imul
gs
data16
dec
sbb
adc
aam
dec
cld
cmp
add
daa
push
push
dec
add
lea
adc
cmc
int3
outsb
negb
jbe
test
pop
sub
sbb
fsubp
push
fldl
loopne
ljmp
sbb
jno
decl
adc
xor
loopne
cwtl
inc
push
je
and
sub
shll
sub
cld
sahf
gs
xor
mov
loopne
sub
scas
and
leave
xor
outsb
aad
sbb
fisttpll
dec
push
fs
outsb
pop
lea
pop
icebp
bswap
inc
sbb
push
lcall
mov
sbb
pop
mov
lods
dec
inc
inc
pop
inc
outsl
fistl
rcrb
add
and
lds
pop
sub
and
pop
repz
lea
pushl
jl
mov
les
into
lcall
mov
icebp
inc
inc
pushf
or
xor
pop
sbbl
popa
mov
mov
sub
sbb
cmpsl
ror
sub
dec
loope
fcompl
orb
rclb
cs
inc
iret
adc
enter
or
adc
xchg
cltd
int3
std
cs
out
call
loopne
lds
aad
jb
or
or
leave
jb
loopne
mov
pop
imul
or
inc
add
and
lock
xor
xchg
mov
mov
pop
jecxz
dec
mov
cmpsb
in
dec
icebp
pop
or
mov
sbb
adc
je
fsubl
xchg
push
adc
pop
mov
push
int3
cwtl
insl
pop
dec
fimull
xor
jp
loopne
lret
shlb
pop
ds
lcall
fmuls
cs
pop
dec
inc
push
lods
inc
mov
mov
cwtl
les
inc
addl
or
fs
mov
outsb
cmp
mov
out
mov
sbb
sar
sbb
xor
cmpsb
pushf
add
cld
fsubrs
push
inc
dec
fldenv
cli
mov
dec
or
sahf
sbb
jmp
push
xchg
jmp
push
call
jno
xchg
sbb
out
aam
test
icebp
ljmp
jecxz
jle
test
mov
ljmp
fdiv
outsb
test
mov
dec
pop
xlat
incl
outsl
cwtl
pop
xchg
sbb
push
mov
and
rclb
adc
xor
test
outsl
inc
test
in
loop
cltd
repnz
jnp
add
fbstp
into
xchg
adc
add
bswap
adc
push
add
cltd
pop
js
or
xor
push
mov
xchg
push
cmpsl
add
cld
mov
inc
repnz
push
lock
icebp
pushl
sbb
push
xchg
or
rclb
notb
fidivrl
xchg
and
icebp
adc
xor
push
ss
or
ss
mov
cld
movsl
das
mov
push
jnp
aas
testb
pop
adc
mov
shl
push
movsb
sub
test
mov
add
test
pop
std
add
mov
pop
push
lret
sbb
mov
inc
push
dec
dec
fimuls
or
push
sub
jmp
inc
push
fs
push
xor
loop
and
push
lock
js
call
aas
adcb
mov
inc
add
std
outsl
xchg
sbb
out
mov
sbb
out
lock
xchg
jecxz
cmp
test
mov
aam
mov
sahf
test
pop
mov
pop
sbb
add
add
in
jo
mov
out
mov
inc
jp
jecxz
stos
fiaddl
push
inc
stos
js
mov
lods
cltd
lods
adc
lods
pop
xorb
pop
dec
imul
aas
arpl
lock
rorb
add
pop
daa
cmp
push
mov
aas
or
mov
dec
cmp
mov
pop
call
test
mov
sbb
movsb
fwait
or
inc
push
cmpsb
push
outsl
clc
scas
dec
bound
addb
sbb
cmp
push
in
pop
mov
add
push
sub
jbe
adc
mov
into
mov
cmp
je
push
push
inc
mov
jo
mov
addb
scas
xchg
movsb
pop
inc
push
ret
lret
lock
xchg
mov
mov
je
xor
bound
pop
hlt
mov
insb
mov
repz
jp
pop
push
clc
jbe
mov
loopne
mov
subl
pushl
sbb
jae
out
lds
jno
mov
xlat
lret
dec
aam
push
mov
lds
fnsetpm(287
mov
cmpsb
add
mov
rol
orb
and
fstl
loope
mov
pusha
adcl
jae
mov
push
ja
and
push
inc
shrb
add
pop
pop
int3
lock
cwtl
mov
adc
or
add
push
adc
sub
jg
jg
push
fmull
les
sbb
add
js
and
loop,pn
nopl
adcb
adc
clc
adc
divb
dec
push
gs
andl
call
mov
in
push
mov
xor
adc
cwtl
test
aas
cmp
jbe
xchg
rorb
lods
subl
les
repnz
sub
in
mov
mov
sub
xor
xchg
push
pushf
sahf
push
and
dec
insl
movsb
push
lret
inc
xor
rcrl
ss
ds
jmp
loope
adc
daa
mov
adc
mov
in
ja
mov
mov
test
ja
pop
js
lock
ljmp
clc
fildl
mov
sarl
aad
rcl
out
mov
testl
je
xchg
les
adc
xor
insb
jecxz
sub
add
insb
js
lcall
sbb
ss
dec
mov
aaa
cmp
sti
icebp
in
sar
fcomp
adc
xor
dec
ss
push
in
addr16
mov
cltd
scas
js
stos
xchg
fwait
call
shlb
outsb
jne
push
test
inc
mov
sbb
stos
sbb
mov
std
inc
mov
lods
mov
sub
out
adc
mov
or
pop
jne
in
loop
xchg
add
into
sbb
arpl
iret
mov
cmpl
sbb
dec
xchg
ret
scas
dec
and
cmp
xor
int3
sbb
mov
mov
data16
cmp
jns
sub
xor
test
inc
decl
mov
aaa
lcall
bound
mov
scas
or
sub
insl
in
push
test
inc
mov
jmp
mov
mov
push
xor
insl
and
stc
leave
in
push
insb
arpl
or
cwtl
xor
push
loop
add
subb
inc
f2xm1
xor
adc
dec
push
ljmp
mov
addb
pop
mov
clc
aaa
daa
pop
mov
adcb
les
sbb
movsb
jne
ja
orl
cli
push
dec
push
test
icebp
imul
ljmp
lcall
ss
push
mov
outsb
xor
jae
or
adc
push
ds
shrl
popa
pop
movsl
mov
mov
dec
sarl
xchg
je
push
gs
dec
les
test
inc
mov
or
data16
add
xorb
out
push
nop
inc
sub
leave
and
outsb
or
sahf
mov
add
std
xchg
stos
xchg
push
cmp
xor
xor
das
dec
test
jle
push
adc
or
xchg
inc
or
mov
fsubrl
aam
std
xchg
outsl
mov
add
inc
jmp
decl
push
push
ljmp
adc
cmp
fwait
mov
push
stos
jle
loopne
ljmp
lea
or
add
lea
std
stos
sub
pop
sub
mov
cmp
cwtl
outsb
je
sti
insl
stc
add
or
sarb
fisttpl
icebp
adc
pop
hlt
push
jmp
into
adc
insb
push
push
ret
je
lret
stos
dec
add
sbb
out
lock
dec
les
jne
sbb
cs
lock
xor
sub
cmpsb
push
inc
inc
das
jecxz
es
sarl
sbb
adc
cli
loopne
mov
sub
shlb
sub
insl
imul
repnz
xchg
les
pop
jmp
test
ret
aaa
and
and
bound
test
push
std
jne
add
add
mov
cwtl
xchg
xor
incl
add
insb
aad
jl
cmp
xor
mov
mov
add
add
cmpsl
mov
pop
mov
repnz
jb
xchg
ljmp
mov
xchg
jl
lods
jg
or
jge
sub
mov
or
pop
adc
sbb
idiv
adc
xchg
fs
outsb
push
mov
dec
sub
push
mov
rorl
cwtl
fwait
push
xchg
loope
or
outsb
push
pop
out
hlt
in
jp
mov
fstps
les
out
jle
sti
lods
add
ja
cld
pop
bound
xchg
xchg
xor
sub
mov
cmp
arpl
fildl
xor
inc
cmpsb
pop
rclb
roll
fs
not
inc
xchg
mov
out
jns
mov
xchg
out
cmpsb
pusha
pop
sub
or
or
out
test
fdivrl
enter
mov
into
bound
add
and
inc
mov
ljmp
mul
enter
loopne
cld
pop
shlb
cmp
mov
pushf
mov
adc
sbb
pushf
jmp
frstor
inc
out
fstpl
or
out
add
mov
xchg
imul
dec
lahf
sbb
aaa
mov
jmp
adc
fstpt
xlat
jmp
das
or
mov
cmpsl
pop
cmc
std
decl
push
sub
add
insb
jne
ja
pushf
test
es
xchg
and
and
rcrb
pushl
mull
and
loop
fisttps
cmpsl
add
xchg
cld
adc
jb
ret
push
push
movsb
scas
outsl
sarb
das
cmp
inc
inc
pop
fnstsw
cld
mov
push
add
xor
add
stos
in
rorl
cmp
jp
mov
inc
dec
or
aaa
rol
repz
into
test
cmp
and
mov
mov
loop
and
lea
sbb
jbe
aas
and
mov
popa
call
mov
pop
or
push
jl
mov
or
rcrl
mov
ds
or
stos
mov
add
xchg
inc
adc
mov
add
cmp
add
repz
or
test
inc
cmpsl
fcmovbe
or
jecxz
xchg
and
dec
insl
dec
push
dec
int3
mov
decb
cmp
orb
inc
inc
mov
dec
dec
adc
rcll
and
or
test
mov
pop
add
xchg
jecxz
and
mov
popf
popa
repnz
loop
dec
data16
out
push
xor
dec
and
int3
cmp
push
shlb
mov
jl
mov
sbb
sub
fdivp
out
mov
rorb
xor
sbb
dec
jge
xchg
jo
or
rclb
orl
add
mov
popa
mov
add
sti
ljmp
lds
mov
jo
inc
cmp
arpl
fildl
mov
stos
mov
ja
dec
jo
cmpsb
or
mov
outsl
dec
jb
pop
push
fldenv
sbb
icebp
push
ds
leave
loopne
aad
xchg
pop
out
xchg
mov
jge
or
aaa
or
cmp
pop
push
incl
and
les
adc
inc
xor
mov
push
adc
sbb
adc
dec
lcall
inc
mov
xchg
push
xchg
outsl
inc
inc
fcomp
mov
fiaddl
pop
or
imul
xor
cmp
repz
inc
mov
xchg
and
rorl
xchg
in
push
add
adc
decl
jle
in
imul
mov
pop
sbb
insl
mov
mov
and
xor
test
push
pop
je
push
xor
je
jle
sarb
jo
jo
cld
test
inc
xor
and
stos
leave
sbb
stos
adcb
jmp
gs
xchg
lock
stos
loope
sub
sbb
cmp
shlb
push
out
call
jbe
jne
dec
push
jno
push
cli
dec
sub
subb
add
call
rcr
hlt
or
ss
mov
scas
sbb
dec
scas
sbb
out
lcall
fsubl
jmp
mov
pop
inc
push
cvtpi2ps
shl
mov
loope
xchg
stos
stos
push
adc
mov
popf
add
cmp
roll
mov
inc
fnstcw
fcomi
outsb
loopne
in
pop
adc
outsb
inc
dec
rclb
jmp
dec
adcl
rcl
sbb
rep
test
loope
addr16
in
sub
cli
inc
jg
xchg
and
subb
ljmp
fsubrs
xor
adc
pop
or
lock
popa
xchg
and
sbbb
lret
cmc
inc
stc
add
scas
leave
inc
push
xchg
mov
push
cmp
add
mov
rcr
add
pop
sbb
xchg
and
test
loope
dec
inc
loopne
call
jecxz
ds
fimuls
addr16
xchg
stos
js
and
cmpsl
ss
jl
xor
aad
dec
xchg
inc
xor
test
inc
pop
xor
push
test
fsubr
jle
cmc
paddusb
sbb
push
mov
inc
xor
adcb
jne
mov
bound
stos
dec
aaa
mov
shl
cwtl
push
mov
stc
fsubs
cmc
std
pop
mov
pusha
incl
add
push
jle
or
inc
stos
add
mov
outsb
stc
lock
arpl
jmp
inc
or
ret
mov
aad
mov
xor
mov
and
and
ret
xlat
sub
outsl
adcb
adc
cmp
adc
lret
fwait
scas
jo
cmp
ss
jno
aad
push
add
js
inc
sub
call
sub
mov
cmpsl
fidivrs
sub
push
popa
pop
test
rcr
cld
jb
insb
jns
sub
jg
push
lods
push
scas
fs
cmpsb
decb
cli
cmp
xchg
or
push
insb
rol
add
push
or
jg
jo
pushf
or
rorb
cltd
adc
xor
out
sar
cli
inc
ret
cmp
femms
push
clc
mov
bound
incl
outsb
enter
sbb
jmp
push
stos
fs
add
imul
jbe
scas
cmc
outsl
aaa
push
push
sbb
sub
je
into
xor
leave
adc
sbb
push
inc
mov
cmp
and
or
fdivrp
ss
incl
pop
xor
lods
add
nop
lods
xchg
xor
xchg
and
div
xor
clc
das
or
push
adc
fmuls
aaa
test
fistpl
and
sub
insl
data16
pop
icebp
inc
scas
sbb
mov
fiaddl
xor
call
add
pop
fistl
popl
mov
cs
or
sbbb
repnz
jp
xchg
cli
sbb
lea
push
cld
shrb
aas
dec
rcll
mov
imull
shrb
sbb
loop
xchg
cld
and
pusha
rcll
test
xor
popf
nop
sub
cltd
dec
or
jg
push
dec
mov
xorl
jl
rol
or
cltd
and
inc
xor
xchg
repnz
sahf
dec
decb
push
or
jnp
loopne
add
sbb
dec
rclb
adc
inc
or
int3
adc
sbb
adc
mov
pop
cltd
test
mov
test
xchg
ret
mov
mov
mov
loop
push
push
mov
push
push
push
cmc
ljmp
jbe
leave
es
xchg
dec
clc
adc
adc
fstl
xchg
xor
es
lods
std
aam
loopne
or
lds
and
inc
sub
xor
clc
movsb
jo
mov
sahf
int
in
pop
popa
push
xlat
outsb
sbb
dec
cli
dec
std
mov
addl
mov
int
pop
cwtl
pop
sbb
push
or
xor
movsb
std
jb
out
add
add
in
or
dec
loopne
shll
imul
loopne
cmpsl
pushf
adc
loope
cs
shlb
imul
push
add
xchg
loopne
data16
or
in
out
fwait
fs
subl
push
and
xor
call
xor
add
cmovbe
movsl
aam
js
test
sbb
mov
fcoms
rcrb
std
int3
jl
xchg
sub
sub
mov
push
mov
adcl
push
dec
out
xor
mov
subl
sub
enter
dec
add
and
push
push
ss
mov
pop
test
adc
insl
xchg
lods
dec
mov
sbb
or
test
add
jg
mov
insl
xor
aaa
std
mov
add
notb
cltd
xchg
jp
aad
mov
add
test
push
push
push
push
adc
insb
sub
aas
push
push
gs
push
jbe
mov
mov
push
pusha
fwait
mov
es
iret
iret
push
loop
mov
push
cwtl
popf
xor
pop
pusha
push
adc
mov
push
ret
inc
fildll
lahf
cwtl
loope
adc
xor
loope
jg
fldl
sbb
enter
mov
xchg
push
inc
sub
cmpsb
inc
cmp
aam
jle
sbb
push
js
xchg
mov
sbb
ja
mov
fsubrp
int3
ret
mov
negb
jle
mov
cmpl
fbld
cltd
sub
add
sub
sub
ljmp
pusha
add
vpshufd
xlat
mov
mov
clc
int
notl
add
sbb
add
sbb
pusha
sub
ja
rol
xchg
inc
and
in
push
mov
loop
cwtl
dec
mov
xchg
sbb
mov
jge
lahf
and
adc
aam
and
or
addl
fiadds
out
mov
adc
or
sbb
jmp
fnstcw
pop
mov
std
cmpsl
cmp
jo
rcr
mov
mov
daa
rcll
test
adc
add
bound
push
adc
cli
repz
popf
shlb
lret
xor
adc
repnz
shlb
xor
pop
sbbb
daa
adc
cmp
in
xorb
es
movb
in
xor
mov
imul
mov
in
pop
iret
ds
je
or
jno
das
xor
sbb
push
or
je
orb
fisttps
fdivs
lcall
adc
adc
fwait
sub
bound
jl
jg
mov
xchg
sbb
pop
cmp
enter
push
outsl
cmpb
dec
jg
dec
adc
jle
loop
cmpsb
sub
xchg
push
push
mov
sub
rcrl
sub
ljmp
sbb
mov
je
dec
testb
cld
sub
pop
dec
test
daa
jne
in
mov
loopne
outsb
loopne
movsl
or
call
fbld
push
dec
fisubrl
test
rolb
in
and
push
les
mov
lea
add
xchg
inc
lea
xchg
out
pop
hlt
sbb
mov
movb
nop
cli
hlt
js
ret
jg
loopne
mov
popf
int3
stos
enter
and
mov
iret
cld
sarb
and
sbb
movsb
dec
aad
insb
jl
fcmovbe
inc
je
imul
mov
lret
hlt
cli
stos
pop
push
cmp
jmp
or
incb
add
popa
lock
lret
repnz
ja
sub
int3
push
jmp
jecxz
aas
ficoml
lcall
test
test
jge
dec
ds
das
xchg
jp
and
decl
fcompl
orl
test
push
xchg
xor
adc
push
mov
pop
mov
xrelease
push
cli
sbb
sub
stos
mov
push
sbb
push
jbe
test
pop
notb
jne
sub
and
js
fdiv
push
inc
cli
mov
lods
mov
pop
cmc
mov
sarb
jge
pusha
cmp
xor
or
lcall
push
into
mov
dec
mov
mov
cmp
mov
add
mov
push
xor
mov
mov
jmp
push
cli
adc
outsb
pop
ja
push
or
xor
jecxz
dec
pop
push
cli
inc
xor
push
push
mov
into
and
push
mov
fiaddl
dec
mov
xchg
out
adc
or
sbb
jecxz
mov
xor
mov
out
pop
sarl
inc
cs
cld
ret
pop
negl
fwait
push
popa
adc
insb
xchg
daa
lods
loop
loopne
inc
sbb
sbb
jl
in
je
push
mov
movsl
aam
ret
xchg
push
mov
subb
lea
inc
jecxz
mov
add
out
outsl
mov
mov
sub
outsl
add
les
lods
test
mov
ja
cli
call
cmp
in
mov
dec
ret
mov
stc
pop
push
cmp
incl
inc
add
jb
push
sbb
xor
clc
dec
cmp
lds
adc
fsubs
push
add
xchg
inc
inc
rcr
bound
sbbb
icebp
inc
test
stos
das
loope
sbb
cwtl
int
js
imul
cs
js
icebp
dec
mov
add
sti
mov
add
sbb
mov
jo
out
sbb
ficomps
orb
jmp
lcall
mov
adc
xor
imulb
dec
jmp
pop
push
and
xchg
or
sub
or
xor
cmc
push
add
or
lret
mov
sub
mov
sub
add
addb
imul
inc
fsub
mov
pop
cltd
inc
cltd
cli
mov
clc
adc
jmp
jmp
mov
pop
push
mov
loopne
fwait
push
jmp
insb
jp
inc
lcall
cmp
mov
jbe
push
xchg
inc
call
and
mov
inc
ljmp
adc
test
mov
loopne
mov
loopne
or
push
insb
loop
jge
mov
add
inc
in
xchg
out
mov
in
shlb
adc
mov
icebp
or
insl
dec
and
and
sbb
cmp
mov
sti
mov
dec
jp
push
add
add
add
xor
mov
xchg
xchg
and
xchg
aad
rclb
and
loope
lahf
leave
and
push
mov
push
andb
or
or
loopne
lods
shrl
notl
aas
jg
notl
sbb
mov
pop
insl
or
xor
orl
repz
push
or
fisubrs
pop
js
dec
jge
rcrb
jmp
xchg
popl
stc
and
call
xor
iret
js
mull
mov
lea
test
jbe
cs
or
mov
orl
mov
js
imul
or
movsl
mov
and
and
cmp
je
mov
sbb
dec
nop
imul
mov
push
cs
clc
or
add
popa
scas
movsl
cmp
fldl
lea
ljmp
push
lods
es
pusha
xchg
sbb
inc
mov
pushl
mov
loopne
lea
add
adc
pushl
lcall
in
ss
repz
add
jg
jb
cmc
lock
gs
fmull
aaa
fcmovnb
pop
clc
dec
push
pop
inc
inc
aam
xor
cld
mov
cmp
popa
add
out
sub
push
inc
mov
jnp
lds
ror
and
jg
mov
lea
les
add
cmpsb
sub
rolb
and
mov
mov
add
ss
call
shlb
or
std
mov
mov
loopne
negb
xchg
cmp
push
outsl
negb
hlt
sub
sbb
and
jb
jne
push
cld
xchg
int3
sub
sub
inc
leave
outsb
cli
outsl
pop
cli
mov
add
mov
in
xchg
dec
je
xchg
ficomps
pop
aaa
mov
and
push
aad
gs
pop
cld
decl
popf
pop
inc
xchg
out
cmp
push
cmp
pusha
js
jnp
xchg
push
ja
jbe
mov
fcoml
or
cmpsb
mov
xchg
mov
popa
push
add
sub
stos
bound
push
insb
jmp
add
cwtl
sbb
cli
or
ds
testl
loop
mov
test
je
mov
push
lods
push
jno
cwtl
pop
mov
add
rclb
repnz
xor
sbb
xchg
add
cmp
and
cld
xchg
les
ret
nop
insb
sti
adc
insb
dec
pop
xchg
je
inc
test
push
call
sbb
mov
xlat
push
adc
repnz
pop
leave
das
xchg
mov
push
jns
and
sbb
aaa
push
dec
out
fiadds
imulb
ss
mov
push
adc
sbb
orl
mov
mov
push
jmp
mov
mov
xchg
push
ret
fs
jo
mov
out
push
mov
sub
das
sbb
push
jne
xor
pop
sub
sarl
mov
aad
dec
add
push
dec
pop
in
cmpsb
std
outsl
and
mov
aam
ret
and
mov
sbb
xorl
shr
sub
push
or
sub
or
pop
test
and
mov
sbb
sub
dec
push
fs
cmp
push
cmc
jg
add
outsb
nop
or
push
sub
cld
aaa
movsb
fcomip
xchg
dec
adc
inc
adc
jg
push
or
insb
rcr
inc
and
and
test
add
jl
in
mov
ss
les
jns
xor
xorb
mov
and
xchg
mov
mov
add
shlb
or
mov
jg
std
add
xchg
mov
sbb
adc
loopne
mov
and
movsb
gs
pusha
add
add
jbe
fs
or
add
rcrl
mov
push
sbb
mov
shl
adc
gs
cwtl
out
jle
je
shlb
shrl
sbb
pop
lcall
je
jg
ljmp
pop
push
testb
dec
push
xorb
mov
sbb
rcll
xchg
pop
and
sbbb
inc
incb
je
orb
xorb
push
cmpsb
pop
movl
sbb
int3
inc
inc
and
sbb
jmp
xor
popa
mov
pop
push
nop
xchg
and
aaa
push
incb
js
mov
int
push
xor
jl
jle
pop
adc
add
cmc
cli
cwtl
fisttpl
jns
mov
pop
ds
fidivrs
adc
jecxz
mov
test
push
out
mov
dec
jb
mov
les
push
mov
rclb
xor
orl
scas
mov
aam
fnsetpm(287
cmp
pop
cld
sub
jle
lahf
jo
push
std
aad
in
xchg
ljmp
xor
scas
xchg
inc
mov
add
pop
sbb
mov
les
mov
mov
inc
call
daa
sarb
inc
loopne
test
or
dec
lods
xchg
out
push
push
jl
fadds
push
pop
or
and
dec
fstl
bound
pop
ds
inc
loope
inc
dec
cmp
xchg
add
dec
shll
addb
repz
push
mov
inc
mov
mov
call
push
sub
push
pop
arpl
pop
imul
xchg
jle
mov
pop
sub
ss
ljmp
pop
jl
cmp
ret
mov
lcall
mov
mov
subb
movsl
test
std
push
lea
push
pop
or
rorb
add
push
les
and
aad
fidivl
mov
lret
fisubrl
addl
mov
aaa
add
mov
jo
and
nop
lock
jmp
push
out
mov
shl
mov
cli
add
jmp
mov
push
shrl
jl
mov
repnz
dec
rcl
and
jae
dec
andl
cmc
in
jbe
daa
cmpsb
xchg
dec
out
cld
add
xchg
push
sahf
push
or
data16
mov
ret
jecxz
dec
inc
fbld
sar
cmp
rorb
push
aaa
scas
xchg
pop
shl
ud2
fcomi
daa
je
cmpsb
push
popa
add
push
incl
mov
sarb
incb
sub
imulb
cmp
xchg
sub
adc
and
sbb
push
leave
mov
cld
mov
mov
daa
lods
icebp
lcall
jo
clc
add
and
mov
push
inc
fs
cmp
cmc
and
mov
jl
in
not
xor
dec
pop
cmp
js
rol
movsb
sbb
sahf
sub
sub
mov
rcl
scas
repnz
sbb
insl
shlb
mov
pop
ss
int3
ja
xor
gs
sbb
adc
jno
pop
jp
scas
std
clc
outsl
and
xchg
push
mov
add
std
sub
loope
jno
push
notb
or
mov
test
lods
cmc
inc
std
mov
mov
push
jne
ds
into
imul
call
xor
cmpsl
adc
or
pop
repz
adc
cmpsb
add
or
js
ss
ljmp
push
repnz
adc
daa
imul
pop
dec
movsl
add
clc
loope
inc
xchg
xlat
dec
addb
xor
inc
stos
pop
dec
mov
leave
push
cmp
cli
shrl
push
iret
call
sbb
les
inc
mov
sbb
push
add
add
mov
and
and
mov
mov
cmp
lcall
loopne
xor
mov
add
out
fimuls
arpl
loop
sbb
pop
es
mov
mov
stc
cmc
and
mov
test
mov
mov
call
pop
adcb
dec
jno
icebp
out
mov
pop
arpl
push
mov
nop
in
clc
dec
jns
in
jecxz
test
sahf
insb
xchg
int
mov
or
mov
stc
push
mov
mov
mov
pushf
adc
decl
push
jecxz
sub
icebp
mov
dec
dec
mov
xor
aad
fmull
idiv
in
mov
and
sahf
enter
or
push
inc
adc
test
mov
pusha
lret
jecxz
fs
xor
hlt
xchg
pop
mov
out
fidivrs
sub
fisttps
repnz
shlb
inc
pop
ljmp
pop
cmpsb
testb
adc
add
divb
mov
mov
jp
out
aas
cmp
xchg
test
mov
mov
imulb
xchg
mov
xchg
mov
jp
icebp
jno
lret
inc
ret
jb
fiaddl
cli
lcall
add
cltd
adc
mov
fcomip
dec
rcl
repz
icebp
ljmp
and
sbb
lock
fisubl
jne
sub
pop
push
inc
clc
or
stc
mov
mov
xchg
push
nop
sbb
je
and
sub
adc
mov
sub
leave
lcall
in
sub
or
push
dec
xor
mov
sub
or
xor
movsb
adc
adc
stc
push
out
mov
aad
mov
into
shlb
add
add
mov
ficoml
mov
add
cmp
mov
push
mov
jbe
les
pop
xlat
jecxz
fsubrl
xchg
cmp
add
push
repnz
dec
or
fwait
sub
xchg
movsb
cmp
adc
mov
std
xchg
mov
cmpsb
hlt
add
or
cmp
cs
ja
or
outsb
cmp
or
inc
shrb
scas
orb
in
sarb
subb
std
mov
push
and
mov
mov
fsubrl
sub
push
lds
push
call
pusha
xor
popa
or
mov
jmp
popf
in
xchg
fs
mov
jo
sub
addb
push
or
int
adc
or
jbe
pop
add
icebp
stc
imul
fwait
add
mov
lcall
add
jae
inc
xchg
mov
push
mov
fs
and
or
jle
jge
das
push
jo
sbb
fcompl
movsb
out
icebp
xor
mov
insb
or
jp
and
xchg
xchg
arpl
sub
scas
dec
sub
stos
lcall
push
mov
mov
pop
imul
xor
add
or
lock
add
xor
or
xchg
xor
cmc
clc
push
adc
push
sti
pusha
sti
and
leave
mov
cmc
jg
sbb
cmp
mov
mov
jmp
mov
xchg
jge
mov
cli
and
xchg
fucomp
sarb
jmp
cmpb
sbb
fildl
repz
mov
adc
lahf
add
add
mov
mov
stc
push
xor
and
and
adc
lret
inc
out
mov
jg
mov
enter
xor
fldl
mov
xor
inc
add
loop
sub
cmp
push
push
jl
fucomi
push
fimuls
fisubrl
lock
mov
cmp
ljmp
sarl
mov
adc
testb
fsubs
sbb
clc
xchg
add
arpl
inc
ret
sub
mov
cmp
push
fs
adc
insb
aam
mov
bound
mov
rcl
data16
adc
adc
fildl
or
insl
cmp
nop
mov
cwtl
sahf
pop
aas
add
inc
add
cwtl
ds
clc
decl
adc
test
push
sbb
inc
dec
pop
repnz
cmpsb
das
inc
shlb
pop
push
dec
js
dec
sbb
ret
data16
inc
rorl
dec
pop
mov
add
or
fistpll
pop
or
xchg
jbe
jg
mov
cmp
sbb
and
addr16
loop
je
mov
and
xchg
pop
and
clc
loop
inc
or
out
ret
mov
insl
addr16
cmp
and
push
mov
loope
in
mov
pop
jbe
in
aaa
mov
add
and
gs
and
jbe
and
adc
xchg
push
dec
jo
nop
mov
push
xor
cmc
dec
ljmp
mov
xchg
push
push
mov
mov
dec
pop
adc
push
dec
add
sti
out
arpl
or
aaa
inc
mov
pop
and
push
sbb
test
dec
sub
call
ja
cmp
cmp
lds
test
jno
mov
push
orl
loop
adc
sbb
je
loopne
mov
add
push
add
sub
or
cmp
cld
push
sub
cmp
mov
call
add
scas
push
add
cs
outsb
and
cmp
pop
xchg
and
decl
hlt
mov
ret
bound
push
clc
in
fdiv
movsl
xchg
push
mov
outsb
ficomps
mov
lods
xchg
push
adc
push
icebp
and
imul
mov
andl
movsb
xor
inc
stos
push
pop
jb
lcall
dec
dec
into
sbb
pop
push
jb
nop
push
in
add
cmp
movsb
out
test
inc
ret
or
mov
movsl
xchg
mov
call
mov
sbb
xchg
jbe
mov
add
sbb
inc
mov
xchg
sbb
and
icebp
scas
mov
mov
cltd
outsb
pop
pusha
stos
stc
mov
jg
test
jns
and
jo
push
aad
or
mov
fs
imul
add
sub
aad
xor
outsl
ss
test
sub
adc
and
cmp
lret
hlt
int
or
decl
clc
punpckhbw
push
std
jo
popf
and
pop
lea
test
idiv
cmp
call
pop
test
dec
mov
xchg
stc
pop
mov
pop
fsubrl
sahf
cmp
xchg
and
dec
inc
xor
jmp
or
ds
push
jb
dec
and
and
leave
or
inc
adc
jbe
fbld
adc
pop
fidivrl
mov
in
mov
sbb
push
inc
out
scas
cli
mov
fldt
mov
mov
xchg
jb
mov
mov
and
loopne
add
dec
push
jbe,pt
test
mov
sahf
rcrl
adc
roll
in
sub
jmp
lcall
ret
dec
scas
add
mov
mov
inc
mov
adc
mov
in
pop
int
fcoms
xchg
nop
out
nop
sub
jbe
jb
jle
mov
les
in
into
dec
mov
in
adc
lock
popf
sbb
cmpsb
pop
int
xor
fsubr
sub
xchg
out
push
sbb
and
dec
movsl
cmp
ja
jns
arpl
pushf
cmp
dec
xor
push
fadds
je
mov
or
jb
lods
adc
stos
inc
mov
push
lock
adc
mov
out
frstor
movsb
loope
cs
pop
insb
sub
adc
roll
or
add
mov
mov
sub
lea
loopne
divl
inc
push
hlt
add
add
mov
scas
dec
mov
mov
inc
lock
sbbl
rcll
jge
incl
push
mov
mov
push
fmuls
rdpmc
sbb
mov
scas
ficoms
icebp
je
and
incb
jg
sti
cs
xchg
jle
mov
mov
sub
pop
add
xor
cmp
call
mov
push
sub
cmpsb
fcoms
mov
xchg
adc
xor
test
fs
shr
dec
mov
or
jecxz
inc
pop
mov
or
mov
cmp
sahf
and
jne
out
cld
xor
rcl
push
fistpll
push
pop
or
and
xchg
and
or
cmpsb
jb
pop
out
mov
pop
movsb
or
push
xchg
leave
call
push
jle
ljmp
rorb
data16
ljmp
mov
nop
rcll
loopne
sub
mov
clc
scas
xlat
lcall
mov
pop
add
inc
fs
stos
cld
outsl
out
enter
mov
xor
sbb
std
mov
movsb
mov
mov
sbb
sub
aaa
adc
pop
dec
xchg
push
test
xchg
scas
sarb
clc
es
sbb
adc
cs
jb
out
xchg
scas
ret
orb
sbb
or
xor
and
imul
addl
mov
ljmp
repnz
sub
push
push
mov
lods
loopne
insl
mov
jecxz
into
das
outsb
jmp
push
test
ja
dec
iret
adc
out
inc
iret
cmp
cli
addl
in
inc
pop
rolb
cld
rclb
aaa
jle
adc
pop
sub
or
mov
xchg
inc
js
and
lock
inc
mov
sbb
xor
add
fisubrl
jmp
insb
inc
call
enter
and
inc
pushf
daa
jae
push
cltd
and
out
adc
rolb
xchg
adc
shld
movsl
dec
or
cmpsl
fwait
sbb
push
push
inc
outsb
in
scas
xor
scas
jmp
sub
mov
inc
dec
or
lret
push
into
ljmp
je
push
push
nop
push
bound
fmull
jg
gs
push
insb
mov
cs
mov
pop
loop
std
lret
dec
enter
push
push
mov
add
hlt
addr16
outsl
pop
xchg
add
xorb
xor
popa
xor
pop
or
cs
dec
test
fsts
aaa
std
sti
loope
movsb
sbb
fwait
xor
in
cmp
jl
cs
ljmp
xor
das
mov
dec
pop
push
pop
inc
add
mov
incl
imul
or
movsb
sub
jg
adc
rcr
pop
pop
test
and
add
addl
mov
sbb
pop
sar
jnp
pop
pop
dec
dec
fucomip
bound
fwait
and
cwtl
sub
jb
mov
outsb
cld
idivb
push
jle,pt
dec
xor
inc
sub
aaa
lock
adc
mov
push
lods
test
push
lcall
ds
clc
xorb
jns
iret
and
inc
sub
inc
cmp
stos
jbe
in
sahf
lock
lock
push
add
xorl
cs
jns
pop
test
or
in
lahf
icebp
push
mov
xor
jo
add
dec
inc
test
lret
clc
inc
inc
lea
pop
jnp
incl
pop
std
not
jecxz
adc
decb
mov
jae
inc
or
jne
fildll
cmp
dec
add
popa
push
mov
movsl
mov
mov
add
jno
mov
rcr
popa
mov
push
loop
mov
mov
mov
es
push
sub
or
les
jb
aaa
dec
ja
sub
push
mov
push
mov
sbb
push
push
dec
pop
dec
es
push
aaa
mov
or
in
mov
scas
rclb
nop
jle
sub
outsb
out
clc
or
add
mov
or
lea
adc
jbe
and
jo
xchg
xchg
mov
call
inc
sub
das
pushf
pop
cmc
mov
into
ret
push
mov
loopne
scas
mov
pop
ret
and
mov
rcr
cld
mov
adc
cli
ljmp
stos
xor
ret
out
inc
daa
movsl
mov
hlt
test
jmp
push
icebp
inc
ret
mov
push
sub
and
fiaddl
into
ds
adc
jbe
jbe
push
cwtl
cli
stos
popa
lret
sub
mov
in
lcall
lock
and
inc
ljmp
and
popf
or
rcll
mov
cli
cmp
cli
jae
sub
leave
add
ret
inc
rcrl
test
mov
scas
leave
mov
sub
call
aam
insb
xor
mov
adc
mov
xor
xor
and
jecxz
inc
cmpsb
xchg
sub
js
and
pop
mov
data16
imul
imul
pop
push
or
repz
ret
adc
lock
pop
cmc
decl
jo
imulb
add
into
int3
dec
jle
ja
cmp
fnsave
cmp
inc
inc
call
cmp
lcall
adc
loop
and
mov
test
inc
inc
inc
xor
inc
mov
xchg
in
and
jp
xchg
add
test
arpl
mov
imul
mov
push
add
jmp
adc
loopne
push
inc
sub
add
xchg
loop
lcall
push
bound
jmp
loope
or
jnp
pop
mov
push
jl
sub
mov
add
jmp
inc
ss
test
cli
rcl
lods
xchg
rcr
jp
stc
rclb
mov
jge
js
ret
aas
dec
scas
decl
sahf
fwait
icebp
mov
dec
fadds
icebp
mov
arpl
mov
pushf
fwait
aas
rclb
jle
adc
dec
xchg
outsb
std
mov
pop
fwait
cmp
mov
rcr
pop
mov
or
pop
std
int3
inc
ficomps
jnp
xor
jge
scas
clc
adc
lahf
inc
mov
cmp
and
adc
inc
pop
xchg
sbb
pop
cld
pusha
dec
dec
mov
dec
xor
push
lock
js
repz
mov
mov
xchg
adc
mov
inc
ljmp
fwait
dec
rorb
pop
adc
sub
push
loopne
cmp
mov
imul
or
cld
mov
pop
enter
mov
mov
in
in
dec
test
cmpb
clc
aaa
mov
lret
jo
xchg
dec
cmpsb
jle
shll
pushf
sub
sahf
enter
ljmp
rolb
lock
lock
mov
adc
adc
xor
jmp
ficoms
cs
pusha
in
lcall
iret
int3
fsub
call
add
les
roll
fadds
mov
je
sbb
lock
mov
clc
out
dec
inc
pop
pop
gs
jecxz
and
in
mov
lods
push
push
out
lahf
outsb
inc
aad
nop
pop
popf
mov
jge
leave
outsb
in
pop
inc
loope
js
xor
scas
loopnew
mov
dec
adc
cmp
mov
ljmp
inc
sbb
fcmovb
dec
ss
and
mov
cmp
inc
dec
sbb
mov
outsl
pop
sbbb
adc
mov
fcomps
enter
sar
scas
gs
in
xor
cmpsl
xchg
js
add
push
lea
and
pop
mov
jl
cltd
test
or
inc
call
jecxz
sub
bound
sbb
push
lret
shr
xchg
les
fndisi(8087
dec
sub
sbb
pop
repz
call
ret
je
fwait
sub
mov
in
pop
push
jecxz
fchs
inc
outsl
fdivs
ret
pusha
and
leave
xor
fimuls
rorb
shl
mov
push
push
imul
or
add
push
popf
adc
jge
loopne
pushl
fidivrs
pop
sbb
je
fwait
roll
pop
push
push
clc
mov
cmc
pop
sbbb
movsl
ret
inc
push
lahf
mov
jmp
addr16
mov
jmp
lret
cmp
sub
clc
sbb
in
dec
insl
or
stos
cmp
push
or
es
mov
push
out
cs
cmp
idiv
dec
jp
test
mov
jnp
sub
add
pop
dec
sub
cmpsb
sub
sub
jnp
xchg
mov
and
jmp
aam
out
ljmp
add
fisubrs
mov
dec
clc
jle,pn
stos
adc
js
add
push
adc
cmpsb
sub
mov
push
iret
jo
mov
mov
adc
adc
fwait
icebp
fucomp
pop
jecxz
inc
and
mov
cmp
stc
jo
jno
jns
push
push
out
je
fistps
or
leave
cmp
roll
leave
add
fadd
add
or
pop
bound
mov
adc
das
cmp
hlt
cmp
incl
jnp
fisubl
in
nop
mov
ret
call
pandn
aam
repz
sbb
add
or
xchg
or
jb
xor
out
pop
cld
movsl
and
pop
sub
cwtl
out
mov
or
int3
aas
dec
aam
lret
add
mov
fsubs
in
or
sahf
test
jle
pushw
and
mov
push
or
mov
push
mov
shlb
xor
pop
fldenv
popf
xchg
repnz
div
mov
and
orb
test
outsb
inc
and
pop
inc
jb
mov
loope
mov
jge
ja
inc
rolb
cltd
mov
in
imul
hlt
mov
insb
ds
sub
lret
adc
dec
xchg
jbe
inc
fwait
sub
or
std
decl
mov
clc
push
setnp
or
test
scas
dec
xchg
pop
stc
ret
adc
xor
jmp
bound
jl
jmp
push
adc
or
dec
lahf
inc
nop
mov
js
call
cmp
dec
mov
and
call
mov
inc
inc
rcll
add
rcrl
pusha
std
push
mov
in
push
nop
dec
xor
inc
and
mov
and
or
pop
adc
ret
xchg
xchg
ffreep
add
add
mov
out
or
pop
jmp
push
fldcw
in
and
adc
test
rol
xchg
int3
add
mov
add
hlt
mov
lds
mov
mov
icebp
js
push
cld
loopne
xlat
mov
pop
or
shlb
das
out
add
lods
push
call
pop
fwait
sti
dec
jo
movsb
push
mov
xchg
xor
cld
mov
mov
call
adc
mov
push
jg
inc
mov
add
sbb
roll
xchg
enter
out
clc
cmpsl
jne
pop
cs
xchg
pop
mov
scas
adc
out
andl
pop
pop
lock
dec
es
xor
les
xchg
jmp
and
stc
filds
lock
movb
lahf
in
je
dec
inc
mov
add
scas
pop
pushf
xor
cli
test
pop
idivl
dec
movntq
out
orb
adcb
cli
jb
outsb
mov
jno
jg
jns
lods
inc
jmp
inc
sbb
add
mov
xchg
sbb
jle
in
mov
mov
push
mov
mov
jl
loopne
in
je
add
call
out
mov
jbe
jecxz
dec
lahf
mov
and
inc
scas
popf
std
adcb
daa
sub
cmpsb
push
je
cmc
or
add
or
jo
mov
dec
jge
std
pop
sbb
test
lock
and
dec
setg
out
das
movsl
cld
daa
jp
out
xchg
inc
push
sbbl
lock
fbstp
pop
push
xor
xchg
test
push
test
sarb
pop
xor
xchg
inc
sub
mov
aas
jl
sub
leave
sbb
loope
xor
mov
cmc
mov
ljmp
fnstenv
dec
pcmpeqd
cmp
scas
icebp
mov
aad
test
mov
pop
popa
mov
push
inc
inc
cwtl
in
test
pop
mov
add
sbb
inc
jg
xor
push
push
loop
jp
pusha
testb
xor
shlb
jo
mov
or
pushf
in
icebp
mov
cmp
idivb
movups
pusha
shrl
pushf
mov
inc
lock
imul
movsl
cmp
or
sbb
xor
notl
lock
mov
shl
data16
mov
pop
cwtl
inc
fwait
add
test
test
jo
mov
or
or
cs
nop
jl
enter
pop
bound
add
hlt
mov
inc
add
or
pop
jle
mov
call
or
inc
add
out
push
std
outsl
cli
movsb
inc
in
popa
or
iret
dec
das
xor
adc
push
jg
sbb
out
shrb
sbb
stos
mov
mov
lods
mov
pop
movsb
or
subb
shlb
adc
out
inc
cmp
aam
and
xchg
add
inc
call
arpl
movsb
lahf
int3
or
test
in
test
cmpl
add
or
repnz
lock
and
pop
gs
fs
imul
add
mov
and
movsb
pop
shlb
jb
mov
push
sahf
icebp
pop
cmpsb
inc
rsqrtps
ds
notb
sub
add
xor
sbb
ret
ds
inc
pushf
inc
adc
mov
push
inc
stc
xchg
filds
and
fsubp
sub
jnp
sub
lock
inc
call
imul
cmpb
stos
sub
adc
test
nop
add
data16
lahf
sbb
mov
push
push
movsb
mov
dec
add
es
push
ss
mov
cmp
aam
xor
lock
lds
clc
pop
mov
aam
leave
sahf
stc
and
cmp
fidivrs
fisubrl
clc
inc
cmpsl
mov
mov
xchg
enter
and
aad
pop
jle
push
scas
adc
call
out
add
aas
rolb
sti
mov
orb
push
cmpsb
mov
add
and
dec
push
fstps
addw
sub
mov
add
fwait
sbb
stos
ss
mov
pop
dec
mov
cltd
sub
test
aas
inc
inc
pushf
sub
hlt
mov
or
add
mov
ret
test
mov
inc
dec
inc
rorl
jg
lock
push
sub
pop
loopne
pusha
sahf
xchg
sti
jg
mov
cmpsb
push
cmp
inc
adc
nop
in
inc
pop
sarb
sub
push
push
ret
cltd
cmpb
outsb
or
jbe
adc
mov
xchg
mov
cmpsl
pop
arpl
outsb
push
lcall
pop
cld
xor
adc
sub
ja
xchg
cmp
mov
push
inc
test
fstpt
dec
arpl
ret
add
push
dec
jbe
inc
adc
stc
stc
inc
call
mov
lock
cmp
ret
xor
push
add
aas
mov
scas
push
mov
pusha
cwtl
lcall
adc
subl
lahf
adc
inc
flds
icebp
loope
clc
push
popa
add
cmpb
push
test
or
mov
add
and
loopne
and
addr16
ljmp
shlb
sub
xchg
inc
les
out
sub
push
cmp
mov
lcall
sbb
sub
pop
fidivrs
and
in
push
movsb
inc
std
icebp
push
or
rol
adc
addb
loope
add
loopne
mov
adc
cs
ss
pop
xchg
inc
je
mov
mov
call
pusha
inc
xchg
and
inc
dec
jg
xadd
ret
mov
add
in
add
xor
les
sbb
push
test
mov
fs
cmp
sbb
pop
or
add
push
in
xchg
icebp
pop
push
push
and
adc
shlb
push
jp,pt
sbb
movsb
jb
aam
stos
cltd
aaa
mov
cli
push
mov
xor
cmp
mov
cli
dec
jb
clc
hlt
test
les
cmp
enter
inc
mov
sub
ret
or
cmp
imul
or
xor
xor
adc
outsl
imul
adcb
je
fidivs
pop
out
jecxz
dec
sbb
mov
ret
sub
sbb
jp
call
push
popl
ret
push
movlps
sbb
fwait
dec
icebp
and
inc
shrl
adc
xchg
fcoms
mov
insb
mov
testb
orb
aaa
shlb
inc
or
decl
push
subb
or
fwait
lahf
icebp
xor
dec
les
clc
ret
fcompl
push
aad
dec
loope
subb
ficompl
loop
cmp
jmp
fdivrl
pop
das
cmp
clc
dec
je
jge
sbb
cmp
loope
push
mov
pop
mov
popa
dec
mov
repz
and
lods
and
push
add
adc
lcall
mov
dec
push
cmpl
mov
in
cmpsb
popf
add
mov
sub
lret
push
push
add
movsl
loope
sbb
rorl
outsl
inc
es
bound
scas
test
adc
pop
into
rorb
repz
loop
mov
pop
pop
inc
mov
loope
bound
mov
ja
mov
and
insb
dec
jp
inc
and
das
inc
lcall
inc
sub
rcl
lds
clc
xchg
push
push
sub
je
push
js
aad
subb
add
fsubrl
dec
mov
inc
iret
cmp
out
cltd
fcmovbe
pop
aam
xchg
cmp
mov
pop
rorb
mov
dec
inc
clc
add
loope
adc
dec
mov
mov
mov
stos
addl
xor
cmc
mov
push
mov
mov
shlb
popa
xchg
mov
or
push
jg
xchg
int3
xlat
lds
mov
lods
hlt
sbb
push
outsw
mov
mov
loopne
adc
lds
sub
aad
sub
aad
repnz
push
add
push
lds
sbb
repnz
mov
out
sarl
or
sbb
xchg
pop
pop
rcl
hlt
or
xor
adc
push
clc
or
mov
push
clc
in
outsl
hlt
mov
clc
lds
add
push
or
push
pop
arpl
push
xchg
test
sbb
in
test
popa
in
xchg
pushf
xor
jae
adc
mov
push
and
xchg
lcall
imul
dec
insl
pop
mov
daa
adc
dec
jmp
push
mov
outsl
cmp
sar
mov
xchg
pop
sbb
cld
popa
aam
out
sub
mov
mov
data16
adc
or
data16
push
imul
push
fwait
add
aad
pop
mov
mov
mov
sub
or
mov
leave
in
shl
test
mov
fstl
pusha
je
xor
and
imul
arpl
stos
js
push
fmulp
and
inc
mov
cmpsb
inc
push
shlb
fmull
or
and
xchg
jmp
dec
ljmp
mov
outsb
clc
mov
or
mov
push
roll
call
and
adc
xorb
push
mov
ja
xchg
push
stos
inc
mov
jl
inc
add
mov
mov
adc
sub
shlb
jl
sub
mov
fadds
movsb
push
test
dec
adc
dec
xor
mov
pop
sub
dec
add
inc
pop
add
and
add
shlb
adc
add
imul
sbb
cmpsl
and
add
out
fsubr
push
loope
and
fadds
push
scas
add
add
sbb
nop
fidivrs
addr16
fiadds
add
cmp
inc
jl
loopne
pop
or
push
hlt
aaa
mov
jnp
stc
fsubs
inc
mov
clc
sbb
dec
insb
lds
shrb
lahf
cmpsb
sahf
mov
xchg
add
ret
andb
sub
or
jmp
movl
sub
cmpb
icebp
dec
inc
inc
sbb
scas
mov
cmp
fists
or
movsb
push
pop
push
ficompl
add
add
inc
cmp
fcomps
xchg
and
cmpb
jp
je
xchg
icebp
enter
in
adc
mov
nop
in
add
stos
enter
inc
inc
das
adc
xor
sbb
push
mov
aas
cmp
jg
pop
adc
fldenv
call
cmp
cmova
in
sub
cmp
repz
rorl
jecxz
dec
int3
loop
scas
pop
xor
push
push
imul
dec
xchg
mov
or
hlt
arpl
adc
call
adc
notl
or
xor
pop
sbb
dec
movsb
push
jg
hlt
ret
mov
movsb
mov
movsl
inc
mov
imul
and
repnz
test
out
push
sbb
cmc
ja
sub
adc
inc
xchg
lcall
ljmp
ljmp
dec
mov
dec
mov
incl
mov
and
mov
iret
pusha
mov
jecxz
mov
sbb
aaa
decb
pusha
xchg
sbb
sbb
ret
and
mov
in
jg
cwtd
aam
or
and
test
rolb
pshufw
push
lcall
jle
add
or
sahf
adc
rcll
lods
and
scas
call
call
mov
cs
push
ret
cwtl
notl
rcrl
stos
adcb
mov
rcrb
xor
xchg
cmpsb
cmp
sbb
bound
cmove
push
in
lea
and
inc
jmp
mov
mov
pop
sub
pop
outsl
adcl
mov
push
ret
enter
push
mov
lods
push
bound
inc
pop
adc
fildll
mov
mov
sub
jl
jg
add
imul
dec
push
lds
in
sbb
push
sbb
push
and
push
pop
decl
sub
push
add
sbb
cwtl
cmc
push
xor
dec
xor
lret
cmpsb
xor
and
stos
add
or
movsb
imul
inc
in
push
push
fwait
and
insb
xchg
les
stc
test
es
es
fistps
xor
cmc
pushl
pop
or
ds
jne
mov
imul
sahf
std
jb
mov
dec
adc
lret
or
inc
cmp
ja
cmp
push
xchg
mov
das
test
cmp
sti
ss
fiadds
fldl2e
movb
dec
lock
daa
adc
jnp
pop
pop
or
sbb
sub
mov
xlat
add
push
js
inc
faddl
cs
in
stc
xchg
mov
pop
test
or
or
adc
sub
out
std
push
dec
jp
sbb
shlb
xor
dec
lret
mov
add
cmpsb
mov
aaa
aam
xor
stos
push
loope
or
jp
jmp
mov
cwtl
bound
mov
mov
pcmpgtd
sub
xchg
pop
xlat
int
fcmovnb
mov
int3
repnz
es
sub
cmp
sbb
xchg
movsb
faddp
in
call
test
mov
jp
or
pop
sub
sub
jne
xchg
shlb
arpl
loopne
js
pop
adc
pop
pop
loop
popf
add
push
subb
or
mov
les
bound
mov
sbb
jmp
add
lods
add
shlb
sub
and
add
aam
or
rorl
call
mov
outsb
outsb
test
fistpll
mov
mov
mov
jnp
daa
mov
xor
mov
inc
push
dec
test
cli
mov
push
cmc
clc
and
ljmp
in
sbb
daa
das
pop
insl
cmp
clc
jns
dec
in
lahf
push
sahf
shrl
push
cmp
dec
rolb
ud0
pop
cld
or
nop
push
daa
test
pop
mulb
in
sub
xchg
jl
jmp
or
jp
sarl
and
sub
inc
por
or
sti
int
idivl
lods
inc
les
inc
sbb
movlps
or
push
sbb
sub
sbb
mov
xchg
push
and
ljmp
jae
ds
push
popa
ret
test
mov
sub
push
fwait
jns
movsb
rcrl
xor
outsb
clc
jne
adc
shll
push
test
pop
mov
add
xor
ljmp
sbb
mov
fisttps
stos
loope
mov
addr16
or
hlt
dec
inc
mov
push
or
add
in
mov
jb
cltd
xchg
mov
mov
clc
dec
dec
push
dec
or
dec
es
loopne
mov
pop
add
xchg
daa
mov
popf
xchg
push
dec
push
and
jle
push
outsb
lret
int3
or
jnp
lret
cmp
pop
jno
stos
pop
stos
sti
rolb
pusha
xor
lds
inc
rorb
cmc
sarl
paddb
add
jecxz
mov
sarl
inc
cld
dec
or
call
mov
xchg
int
out
add
jo
fisubrs
add
jg
out
pop
fnsave
and
pusha
jl
imul
gs
clc
cmp
or
fsubl
pop
xchg
loopne
ljmp
sbbb
insl
out
mov
push
mov
jnp
dec
nop
ss
xlat
pushl
push
dec
sbb
ret
mov
mov
ja
push
push
aas
lods
inc
pusha
cmp
mov
fbld
sbb
cmp
repz
jge
sub
mov
lds
ss
cmp
lock
mov
fidivrl
pop
xchg
int3
jg
inc
pusha
cmp
add
jo
mov
imul
fists
xor
mov
lahf
int3
sub
lods
and
or
add
pusha
fnclex
dec
jl
shl
repz
adc
enter
push
push
lahf
ds
shll
adc
push
sbb
xor
popa
dec
aaa
fdiv
mov
fs
and
enter
and
and
cld
lods
xchg
pop
out
fmuls
push
inc
adc
sbb
fisubs
dec
push
xchg
in
xchg
push
dec
jl
pusha
xor
mov
ds
in
test
lcall
inc
xchg
jl
std
daa
int
pop
sarl
std
inc
inc
pop
gs
sarb
adcb
jl
mov
lock
mov
lods
xor
jmp
and
arpl
sub
sub
movsl
xorb
mov
scas
scas
cmp
shlb
and
call
mov
cs
sbb
xchg
xchg
cmp
xchg
sbb
and
call
jns
adc
inc
xchg
sbb
clc
and
mov
in
arpl
pop
scas
lds
jmp
int3
cmp
mov
cli
out
sti
sti
adcb
or
sub
test
mov
or
fdivrs
arpl
rcl
dec
lret
gs
sbb
lcall
push
adc
mov
add
jg
into
das
fdivp
mov
cmp
jge
inc
adc
fisttpll
xor
ret
lods
xchg
les
decl
mov
pop
sub
push
pop
test
das
cltd
hlt
and
pop
js
push
fs
xor
push
mov
inc
dec
addb
inc
in
add
andb
adc
adc
in
and
xchg
add
and
orb
push
pop
and
fs
mov
int3
sbb
fwait
xor
jp
nop
pop
or
add
inc
out
data16
inc
outsb
add
adc
and
dec
dec
and
xchg
jg
scas
nop
push
push
mov
idiv
adc
pusha
dec
dec
xchg
adc
ss
sub
scas
and
and
fsubr
lods
and
in
mov
and
pop
orl
dec
ss
enter
orb
out
ret
test
sbb
mov
jb
fmuls
shlb
add
inc
dec
and
cmp
inc
cmp
adc
xor
mov
test
push
data16
in
and
nop
rcr
cltd
flds
jl
and
sahf
push
nop
sub
xchg
push
mov
xorl
shl
xchg
inc
adc
push
xchg
and
cs
into
inc
inc
adc
mov
xor
and
jo
dec
xor
loopne
mov
ret
or
mov
add
ljmp
mov
scas
dec
xchg
rolb
lcall
and
dec
jle
es
mov
inc
xchg
jl
and
mov
sti
add
add
inc
in
addb
int3
add
adc
or
jbe
add
dec
call
xor
mov
and
pop
sbbl
notb
push
or
into
stos
inc
adc
cmpsb
xor
xchg
add
mov
push
adc
inc
divps
and
cmpsb
and
push
add
and
ficomps
sub
push
jl
sub
int3
int3
pusha
adc
fs
pusha
hlt
adcl
xchg
cld
es
pop
adcb
sub
add
pushf
or
int3
xchg
push
lcall
in
and
data16
inc
fs
or
lods
or
rorb
mulb
and
pusha
data16
adc
pop
sub
mov
inc
pop
mov
xor
and
adcb
sub
es
test
push
sbb
xor
adc
xor
mov
mov
call
les
sbb
ret
pusha
push
adcl
and
adc
adc
scas
add
xchg
mov
xor
push
ljmp
bound
call
fchs
cltd
nop
mov
out
fxch
lcall
bound
sbb
es
clc
hlt
dec
inc
outsb
popa
mov
and
jbe
add
inc
and
fsub
dec
mov
dec
xor
sahf
cltd
lea
bound
inc
insb
xor
rorl
jle
push
adc
jnp
insb
ret
inc
dec
push
test
push
leave
and
mov
and
cmp
add
mov
cmp
or
sbb
sbb
push
xorb
push
addr16
or
or
push
cmpsb
xor
stos
fsubl
pusha
shrb
adc
sub
imul
mov
xor
mov
mov
shlb
or
cli
pop
test
in
mov
xchg
and
push
shr
jmp
add
adc
je
sbb
and
xchg
sub
int3
and
ljmp
popf
sbb
adc
xchg
and
int
sbb
adc
mov
data16
sub
or
jae
xor
sub
popa
add
cmpsl
and
cmp
and
push
cmpsb
mov
pop
ret
push
mov
ljmp
pop
jae
mov
cwtl
pop
aad
push
and
lcall
push
bound
ret
sbb
and
pop
mov
mov
and
and
mov
pusha
add
mov
adc
or
bnd
jbe
xchg
nop
sete
adc
add
push
xchg
insb
lock
mov
xchg
add
inc
rcrl
out
and
push
or
out
pop
cmp
mov
inc
adc
push
and
sub
movsl
cmp
xor
mov
add
add
jbe
ret
sarb
int3
push
int
movsb
nop
int3
je,pn
add
sbb
rcll
add
sub
mov
add
popa
das
mov
mov
nop
add
decb
int
push
dec
test
fs
insl
js
mov
and
dec
repnz
mov
fs
jae
add
adc
jo
add
out
cs
push
xchg
push
movsb
sbbl
mov
out
mov
push
mov
data16
sub
rorl
nop
and
jnp
cmp
int3
ret
xchg
adc
cs
sbb
subb
and
sahf
jle
inc
mov
dec
mov
inc
mov
push
shl
cmp
insb
gs
mov
into
icebp
push
push
xor
mov
outsb
rorb
mov
mov
mov
mov
push
in
and
sbb
push
add
add
cmc
pop
sbb
stos
mov
sub
jb
mov
sub
and
pop
jl
vpcomq
mov
fld1
pusha
pop
jo
dec
fcoml
faddl
mov
pushf
push
and
cld
call
inc
adc
adc
int3
xorl
inc
jno
addb
cmp
insb
dec
cwtl
nop
rclb
mov
pop
scas
and
inc
cmp
test
js
test
add
pop
xchg
or
inc
aam
stos
inc
test
push
mov
inc
add
lods
ds
mov
aaa
push
shlb
mov
and
adc
shlb
orb
cs
xor
sub
push
mov
cli
shlb
inc
pusha
or
inc
sbb
adc
mov
movsb
subb
and
int3
icebp
jno
rcr
adc
inc
loopne
in
jno
add
mov
mov
ds
or
adc
pop
or
adc
ret
adc
pop
shlb
sbb
je
lods
fisubrs
and
add
push
xor
ficomps
test
pop
or
mov
mov
push
jnp
lret
mov
js
jno
mov
fcomps
push
and
cltd
mov
adc
lock
roll
lock
ret
and
adc
xchg
subb
or
jp
or
pop
cwtl
rcl
or
or
outsb
push
andb
pop
mov
and
inc
mov
lods
jbe
or
movsb
cld
ljmp
pop
jb
mov
les
out
and
adc
xchg
push
push
andl
or
test
invlpg
rcll
mov
lcall
sbb
loop
or
lock
lret
push
mov
ret
push
mov
adc
sub
add
xor
fmuls
or
sbb
adc
add
ror
xchg
lcall
and
or
pushf
cmp
ret
lret
push
push
in
aam
es
lock
cld
mov
cmp
push
call
mov
data16
xor
adc
push
inc
push
movsl
and
xor
adc
inc
adc
inc
adc
inc
enter
and
jo
xor
out
and
cwtl
imul
pop
push
popa
lods
fdiv
xor
outsb
inc
push
sahf
sub
add
sahf
and
inc
xchg
pushf
aam
inc
lcall
out
or
aaa
or
dec
push
loopne
mov
hlt
add
cwtl
or
bound
pusha
inc
pusha
and
movsl
and
inc
xchg
lods
pop
and
add
mov
dec
test
xchg
fnsave
cli
inc
nop
xor
push
push
rcll
in
mov
or
lcall
dec
and
xor
je
or
xor
add
or
sub
sbb
pusha
inc
and
test
and
xchg
mov
dec
jle
xchg
shlb
mov
sub
mov
and
pop
test
xorb
out
xor
ret
push
xchg
dec
je
push
sub
and
shlb
inc
nop
mov
sbbl
movsb
or
add
inc
mov
inc
cmpsb
push
xlat
mov
add
or
mov
loope
cwtl
push
repnz
mov
inc
inc
cmpsb
es
and
cli
js
sub
popa
push
mov
add
cmp
xchg
push
add
push
mov
xchg
jb
and
in
mov
or
dec
loop
or
mov
and
pop
adc
dec
xor
test
adc
add
add
aaa
les
push
inc
in
xor
adc
mov
xchg
push
jo
out
jb
mov
push
adc
xchg
add
rclb
inc
data16
lock
dec
addr16
movsb
ljmpw
or
and
lcall
push
outsb
inc
sbb
jo
rolb
dec
or
sbb
mov
sbb
roll
and
adcl
fdivs
or
and
add
repz
xchg
js
and
adcl
test
lcall
pusha
add
nop
rorl
fcoml
insb
js
data16
or
adc
and
pop
mov
sbbl
mov
cltd
ss
fsub
and
adc
add
and
fstps
xchg
mov
mov
fs
nop
scas
out
jecxz
xor
stos
and
bound
popa
adc
cwtl
add
xor
adc
fmuls
movl
lods
push
mov
fs
adc
adc
cltd
mov
or
and
dec
int
dec
adc
push
fld1
xchg
sub
jnp
and
cmp
add
cmpsl
inc
jl
sub
mov
push
sbb
dec
and
shrb
sbb
loop
rclb
dec
pop
sbb
xor
insb
and
push
arpl
jmp
mov
xchg
dec
stos
pusha
mov
and
xor
pop
out
movsl
dec
and
mov
dec
and
mov
icebp
push
sbb
addr16
fisubrl
push
nop
jae
test
or
mov
test
dec
adc
adc
leave
dec
fiadds
mov
pop
stos
lcall
sub
or
cmp
pop
add
inc
cs
sbb
jbe
out
orl
mov
pop
xlat
add
bound
sub
into
push
mov
cmp
inc
adc
adc
add
push
outsb
sbb
xchg
sbb
sub
hlt
xchg
jb
or
lods
movsb
rol
ds
fs
insb
int3
hlt
add
push
push
cwtl
inc
not
xchg
inc
inc
mov
inc
or
cmp
xchg
js,pt
sahf
pop
xor
xor
inc
ret
outsl
cmp
call
mov
or
pop
pop
jbe
int3
orb
nop
dec
mov
lock
pop
nop
sbb
neg
push
in
push
lea
fadd
adc
int3
sub
div
lods
push
into
scas
inc
pushf
dec
and
sahf
lret
mov
clc
and
aam
nop
mov
inc
and
sarb
cs
xchg
add
cmpsb
les
mov
andb
and
adc
sub
pop
dec
mov
cmc
adc
push
sub
add
inc
xlat
mov
out
jp
out
ljmp
push
repnz
outsb
into
push
bound
loopne
xor
dec
out
mov
mov
add
push
scas
movsb
addl
pop
push
dec
or
loopne
jl
data16
add
loope
mov
xchg
int3
mov
adc
js
inc
jge
int3
out
in
loopne
adcl
shrb
lock
rorb
pop
sbb
cmp
and
lret
xor
scas
mov
movsb
aad
ljmp
pop
mov
les
rorb
clc
pop
addl
jo
insb
and
test
dec
test
cld
shr
shl
cmp
fmuls
xor
sub
data16
and
mov
add
dec
mov
dec
movsl
sbbb
push
xor
add
sub
and
lock
or
xor
imul
adc
cmp
cld
pop
cmpsb
sbb
cld
adc
nop
inc
outsl
pusha
add
stos
and
push
jnp
dec
mov
or
cmp
shlb
and
adc
hlt
and
push
loopne
xchg
fld
mov
jo
outsb
or
xchg
pop
rcrl
and
mov
movsb
sub
push
into
cmp
and
mov
cmp
pop
adc
js
test
and
sbbl
cltd
es
dec
adc
negb
mov
mov
mov
xor
pop
call
int3
mov
add
jo
sub
xor
fs
mov
push
push
xchg
or
add
or
daa
add
sbb
pop
sub
push
and
insl
fistpll
push
es
add
or
and
daa
cmp
out
out
push
sub
sub
add
push
cs
add
das
pushl
or
aaa
dec
add
cmp
add
cmp
adc
mov
inc
pop
dec
imul
outsl
add
dec
insb
add
aaa
dec
je
adc
inc
push
jg
dec
add
into
dec
fldt
adc
ss
mov
pop
sbb
jg
std
pop
mov
and
jbe
xchg
addr16
add
data16
add
pushf
add
addr16
ret
fsubrs
imul
movsb
push
insl
sbb
sti
jg
add
jb
add
je
ss
push
jbe
push
dec
js
add
add
cmpb
push
mov
mov
es
cmpsb
mov
add
into
jbe
lret
push
mov
add
mov
add
nop
push
sub
add
movsl
ljmp
mov
mov
add
add
mov
icebp
mov
add
leave
dec
mov
shlb
shll
xchg
dec
in
push
in
fldt
mov
push
fadd
leave
push
fmulp
insb
sub
test
loope
loop
iret
jnp
shl
loopne
push
rcll
shll
rcl
jmp
out
out
pop
aam
out
mov
aad
pop
pop
xlat
repz
jns
push
out
call
addr16
fsub
jecxz
bnd
repz
hlt
sub
repz
in
repz
cld
cld
and
add
sub
pusha
data16
jns
imul
mov
ror
mov
pop
push
push
and
push
push
pop
imulb
mov
jne
push
pop
push
push
pop
mov
test
pop
pop
pop
pop
xorl
mov
rcr
pop
push
pop
pop
imul
in
add
push
outsb
pusha
pop
pop
aaa
clc
or
arpl
push
and
pop
mov
out
mov
popa
mov
dec
adc
pop
jp
iret
add
add
into
cld
push
sbb
adc
push
cmpb
dec
sbb
out
adc
in
push
adc
push
popa
xchg
mov
and
popa
jne
xchg
sub
jmp
jp
insb
leave
shll
popa
mov
pusha
rclb
pusha
xchg
and
pop
addl
lahf
pusha
outsl
popa
pop
jl
addb
pop
or
jnp
adcb
scas
movsb
jns
dec
add
add
jmp
cmp
add
jp
jge
adc
mov
dec
cmp
pop
dec
adc
movsb
mov
or
pusha
ret
and
repnz
outsl
outsl
jbe
repnz
mov
adc
je
jae
out
loopne
popa
popa
mov
push
adc
mov
bound
cmp
mov
pusha
orb
sbb
jge
mov
js
out
adc
jnp
les
rcrb
add
js
xchg
mov
pop
xor
pop
popa
push
jb
jae
mov
subl
xor
out
aas
rcrl
imul
ret
dec
neg
outsb
xor
pop
bound
jno
mov
cmp
aas
pop
adc
test
add
arpl
add
outsb
pusha
push
jne
pop
jge
jne
lret
int3
inc
sub
pusha
bound
outsb
push
or
sahf
sub
call
xchg
mov
sbb
push
sbb
inc
mov
push
adc
adc
das
xor
add
int
push
add
fwait
das
nop
mov
xor
inc
inc
addb
test
add
or
rolb
loopne
loopne
cltd
or
es
xchg
push
add
pop
fistpll
push
jbe
mov
mov
sti
fucomip
mov
xor
fildll
repz
ja
xchg
pop
pop
push
mov
imul
xor
push
mov
push
ds
or
scas
sbb
das
push
aas
mov
push
mov
jns
addr16
push
push
cld
bound
push
lds
mov
push
xchg
ja
js
adc
adc
xor
xor
call
mov
dec
mov
push
inc
mov
jmp
mov
sti
add
or
adc
or
mov
nop
mov
or
jmp
or
add
sub
icebp
mov
cmp
nop
mov
add
outsb
leave
xor
xchg
add
pop
or
filds
push
mov
adc
out
imul
out
add
add
pop
jb
mov
ja
stos
push
add
out
outsb
adc
xor
add
mov
xor
add
cmpsl
cs
push
add
stos
xor
outsl
cs
adc
mov
lods
int3
adc
push
mov
add
pop
sbb
adc
or
mov
mov
ja
mov
mulb
jb
jo
xor
out
imul
add
out
and
push
pushf
nop
and
dec
push
pop
or
sahf
dec
arpl
jae
scas
clc
fwait
dec
je
pop
dec
dec
add
push
add
fnstsw
add
addr16
insb
jae
adc
adc
mov
lods
jbe
es
push
jnp
je
sub
andl
test
xchg
push
lcall
sub
xchg
cmpsb
shlb
dec
movsl
test
mov
stc
xor
testb
push
roll
dec
or
mov
add
lret
fs
ljmp
and
add
movsb
add
scas
scas
add
mov
add
mov
incb
add
aad
jecxz
add
int
add
mov
mov
stos
mov
push
mov
mov
mov
aam
xchg
push
ret
add
jmp
push
rcr
aam
flds
fsubp
fimuls
push
jecxz
sahf
in
in
repz
repz
push
mov
add
push
xor
add
push
push
in
push
decb
sub
push
push
pop
add
cmp
fldt
pusha
inc
dec
dec
dec
push
fstl
in
aam
or
add
inc
pop
push
dec
aas
xor
in
pusha
inc
bound
pop
sbb
mov
and
xor
push
sbb
cld
dec
sbb
sbb
and
xor
xor
mov
pop
pop
sbb
sbb
pop
pop
push
outsb
orb
es
dec
pop
sbb
xor
std
shll
inc
pop
fcmovu
sbb
popa
outsl
mov
ficompl
pop
shll
sub
pop
pusha
popa
pop
popa
cmp
inc
popa
subb
add
pop
stos
mov
add
pop
push
pop
sub
sub
xor
mov
rcrb
fucomi
in
jae
sub
add
push
dec
pop
rolb
adcl
loop
ret
inc
jno
daa
fs
xlat
sub
pop
pop
and
pop
rcrl
shlb
ret
pusha
and
xchg
xor
arpl
rorb
in
insl
xor
and
dec
jge
mulb
arpl
in
push
add
inc
inc
pop
push
popa
mov
bound
and
inc
inc
aas
adc
push
pop
lahf
frstor
jnp
or
les
arpl
pop
dec
push
dec
pop
pusha
ret
sbb
fs
pop
push
fisubrl
add
les
insl
mov
ds
pop
push
pop
dec
pop
popa
pop
popa
jno
or
fistpl
dec
adc
mov
push
or
sbb
sbb
sbb
sbb
or
sbb
push
shrb
inc
pop
push
pop
pusha
lea
pop
and
sbb
sbb
dec
pop
pusha
add
cmp
cmp
xor
or
add
jg
add
push
adc
cmp
adc
or
out
pop
or
jnp
add
and
stc
popa
dec
test
or
dec
outsl
insl
jb
pop
add
aaa
insl
or
add
insl
aam
sbb
ret
fmull
aad
or
filds
push
not
fildll
jb
repz
fucomp
or
icebp
nop
xchg
inc
fbstp
jl
jl
scas
inc
int3
aas
inc
pop
hlt
int3
inc
xor
in
call
jbe
push
adc
xor
mov
fstpl
push
add
fwait
sbb
sbb
cmp
pop
sbb
mov
jae
das
pop
das
add
mul
cmp
push
or
or
and
shlb
or
incl
pusha
das
ja
jg
insb
dec
jmp
pop
jo
pop
or
dec
mov
out
xor
mov
dec
mov
scas
mov
out
movnti
pop
pop
aas
add
enter
in
mov
iret
iret
iret
stos
add
fnstenv
sti
xchg
mov
add
or
out
into
sahf
and
dec
add
xor
sub
out
mov
sub
pusha
sub
xchg
jae
mov
and
xor
sub
xor
jbe
andb
mov
stos
stos
add
scas
cltd
fisttps
pop
mov
mov
idivl
sub
or
sub
fiadds
xor
out
aad
pop
lock
jge
mov
or
loope
loopne
out
pusha
stos
sbb
insb
shrl
inc
dec
add
lds
push
cld
sbbl
mov
fistps
ret
jg
flds
xchg
cmc
add
sar
add
add
fcmovu
out
cmpsb
out
ds
lcall
inc
add
lcall
fstl
add
sub
into
icebp
push
inc
push
mov
lock
jle
and
push
cmp
lcall
ret
scas
mov
pop
mov
pop
xor
xor
xor
mov
mov
aaa
js
popf
fstl
pop
ja
sub
ja
pop
xor
in
insl
pop
xor
fldl
fcoms
and
pop
inc
arpl
jg
ss
shrb
out
dec
or
push
insl
mov
nop
push
push
push
inc
push
push
outsl
jg
jae
dec
aaa
fwait
jae
js
jnp
int3
imul
pop
js
mov
mov
adc
jb
aaa
jge
cmp
sub
data16
sub
aaa
fucomi
xor
bound
dec
add
push
add
pop
add
pop
add
cltd
int
add
add
insb
pop
int
pop
sub
scas
pop
add
int
imul
lock
nop
adc
add
fucom
or
push
fwait
incl
mov
xchg
add
insl
xorb
cwtl
hlt
mov
mov
insb
cmpsb
adc
mov
push
xchg
cwtl
cwtl
add
add
sbb
mov
cmp
cmp
mov
arpl
mov
call
or
mov
adc
test
lcall
add
mov
loopne
or
adc
sub
xchg
add
xor
inc
mov
xchg
push
aaa
push
or
mov
insl
dec
aaa
fwait
adc
push
or
cmp
add
cmp
mov
sbb
push
inc
push
insl
pop
repz
inc
popf
add
inc
lcall
sbb
mov
stc
mov
push
mov
sub
sub
dec
nop
es
push
xor
cs
dec
sub
sub
jle
outsb
mov
push
lahf
inc
push
sahf
add
pop
movsb
jbe
mov
jbe
push
dec
push
das
push
mov
push
movsl
push
cld
outsl
fildl
push
xor
xor
cmpsb
add
pop
movsl
add
pop
pop
push
std
fdivl
and
bound
int
push
cmp
test
cmp
out
push
add
sub
dec
insb
loopne
bound
imul
push
jae
pop
jge
inc
push
add
dec
inc
insb
push
jg
in
inc
outsb
mov
push
push
imul
inc
outsl
mov
cmp
fwait
mov
push
jae
add
mov
repz
repz
push
js
add
mov
add
push
insb
decb
roll
jns
jl
push
jge
add
pop
jle
shl
ret
add
pop
mov
outsb
mov
or
pop
add
orl
jne
ss
lret
push
addr16
cmp
jg
mov
add
lret
mov
push
mov
imul
insl
lea
xchg
into
pushfw
push
jge
iret
mov
outsb
mov
add
push
je
rcrl
xlat
add
clc
jg
cltd
es
aad
add
faddl
jg
fucomp
cmp
xor
push
fneni(8087
nop
loopne
outsb
ss
in
scas
addb
xchg
xchg
add
imul
lods
mov
mov
stos
mov
push
mov
push
cmpsb
stos
push
mov
push
mov
jp
inc
cmp
dec
lock
into
cmpsb
test
push
mov
insl
shll
sahf
mov
xchg
mov
lcall
lahf
mov
subb
int
mov
mov
es
mov
into
ret
loope
ljmp
mov
mov
add
push
jmp
loopne
cld
outsl
cs
add
shr
rclb
mov
divb
xlat
repnz
add
rolb
fadds
lds
inc
rcl
xchg
fdivs
fsubrs
add
call
ljmp
arpl
jl
xchg
ljmp
idiv
movsl
lcall
bound
pop
pop
outsl
mov
aas
test
call
fcmovbe
mov
popf
xorb
push
jns
cltd
test
mov
aaa
shl
in
fnstcw
pusha
pop
push
inc
pushl
push
mov
lds
sub
repnz
stc
out
fnstcw
imul
jns
sbb
sbb
xor
ljmp
jg
dec
aas
cmp
movb
out
xor
push
enter
pop
push
dec
ds
repz
cmp
jmp
add
xchg
xchg
inc
or
ljmp
repnz
inc
aas
inc
cmpb
mov
out
sub
push
sbb
repnz
cld
out
sub
out
xchg
inc
aaa
fdivr
aas
jns
jle
into
faddl
cld
out
cmp
jle
sti
out
lfs
mov
pusha
in
cmc
sbb
movsl
rdtsc
or
lahf
lea
icebp
sbb
sub
int
out
push
jo
call
dec
inc
addb
sbb
dec
and
jnp
pop
adcl
fwait
jmp
out
out
shl
aad
stos
xchg
subl
aas
ja
fwait
lods
mov
fst
mov
cwtl
mov
call
push
dec
jg
mov
repz
mov
jb
pop
sbb
pop
int
ds
push
dec
add
push
dec
dec
dec
dec
inc
inc
cmp
inc
inc
pop
adc
push
in
sarb
lret
not
lret
pop
adc
adc
push
lods
cmp
adc
add
adc
push
pop
mov
adc
and
insl
jg
div
aam
rol
pop
xor
pop
mov
dec
outsl
xchg
and
mov
cld
pop
neg
ss
out
add
adc
ret
in
mov
pop
and
cld
add
les
adc
negb
lods
mov
and
std
idiv
std
or
pusha
movlps
ret
and
and
std
pop
idiv
add
lret
cld
pusha
add
cs
shlb
sbb
pop
rolb
pusha
notl
rcrl
add
imul
filds
pop
lahf
pop
add
adc
pop
pop
lret
cld
outsw
mov
mov
sarb
add
jbe
scas
rcrb
adc
sbb
push
push
pop
or
mov
loop
sbb
inc
mov
jl
repz
sbb
xor
fwait
lods
sbb
cmp
jne
js
jp
outsl
jge
add
dec
push
dec
add
pusha
inc
inc
data16
insb
push
addb
xchg
inc
insb
ss
int
dec
xchg
dec
xchg
dec
int
mov
cltd
dec
pushf
push
sahf
push
mov
ss
push
cmpsb
push
test
stos
pop
lods
pop
fwait
int
mov
pop
mov
mov
mov
fldcw
bound
gs
int
leave
push
aam
loopne
jl
or
jp
inc
push
cmpsl
xor
sub
jl
fnstcw
fnstcw
xchg
ss
int
xchg
mov
lea
lea
nop
pop
data16
insb
xchg
pop
xchg
pop
xchg
pop
pushf
or
stc
mov
push
stos
lods
mov
fldcw
cmpsl
mov
scas
mov
mov
into
lea
or
int
sub
or
scas
ss
rcl
push
or
fcmovne
fnstenv
fwait
in
or
gs
addr16
push
int
mov
imul
shrb
outsb
xlat
jo
mov
add
jecxz
jb
out
je
out
inc
cmpsb
fisttps
incb
push
call
in
aam
div
out
add
adc
cld
sub
cmc
jmp
add
in
fdivr
bnd
lcall
hlt
push
testl
inc
and
mov
ret
push
test
les
out
mov
mov
dec
cmc
test
xchg
xchg
outsb
xchg
cmp
int
push
sahf
clc
cmpsb
cli
lods
sti
mov
mov
insb
push
ss
rcr
fcmovnb
faddp
sub
mov
jecxz,pn
out
push
out
es
xlat
jmp
cs
outsb
cld
stc
repz
mov
lock
add
repnz
add
cmc
add
add
neg
loope
cli
cli
jecxz
cld
inc
sahf
into
mov
movb
decl
stc
cmp
or
push
sub
sub
es
xor
sbb
sbb
fidivrs
pop
push
into
adc
jns
jp
xchg
incb
jne
pop
add
add
sub
jae
mov
adc
sub
fmul
pop
sub
add
pop
maxps
lea
xor
and
and
push
lea
jl
sub
add
add
pop
fstps
pop
dec
pop
dec
xor
addl
rcr
pop
pop
aad
add
mov
push
sbb
and
pop
push
inc
bound
pop
pop
aas
jg
adc
and
out
pop
mov
lock
push
aas
aad
xor
dec
lcall
aas
and
and
stos
in
add
out
nop
or
jns
pop
dec
cmp
add
or
pop
ds
das
push
das
dec
add
icebp
jg
add
add
push
mov
aad
int3
dec
sub
in
adc
add
jae
add
pop
jnp
iret
mov
arpl
lea
add
fnstcw
pop
push
mov
mov
pop
and
sbb
and
ss
pusha
lcall
int
mov
dec
push
shl
mov
pop
push
dec
jae
jne
sbb
xchg
mov
leave
mov
sbb
pop
jb
or
mov
daa
fadds
sub
sbb
outsl
push
testb
push
ja
inc
pop
sub
jle
mov
outsl
data16
pop
inc
pop
pop
fdivs
jo
and
gs
inc
inc
pop
data16
pusha
jae
pop
sub
jg
ja
cmpsl
subb
outsl
mov
test
pop
sbb
inc
aas
outsl
jnp
jle
or
mov
or
inc
aas
incl
fldl
mov
popf
ja
pop
cmp
pop
jg
and
insl
xchg
ja
cmp
push
add
popf
ja
cmp
pop
insl
stc
inc
xor
xchg
xchg
xchg
cwtl
lcall
sbb
mov
xchg
xchg
cltd
add
std
lcall
cltd
xchg
xchg
xchg
mov
jg
mov
addb
jo
insl
insb
imul
or
pop
push
inc
pop
cmp
pop
push
jnp
push
arpl
pop
push
inc
aaa
add
sti
cld
lret
push
push
aas
add
ljmp
mov
mov
pop
dec
cmp
xor
pusha
add
pop
pop
pop
dec
xor
mov
add
lahf
adc
ljmp
cld
adc
add
dec
add
cmp
dec
jg
inc
push
inc
inc
add
push
add
push
add
push
add
mov
fnstcw
add
mov
push
mov
es
mov
cs
mov
int
ljmp
movsb
mov
add
flds
pop
mov
fiadds
inc
mov
mov
push
dec
dec
rorb
loop
pop
out
sub
cld
push
shl
push
ret
pop
pop
les
int
ret
jl
icebp
push
dec
repnz
repz
hlt
insl
fldt
cmc
pop
mulb
data16
outsl
fwait
in
stc
cld
add
es
cld
add
enter
leave
jmp
outsb
lret
jb
jl
jbe
push
jo
push
jo
push
jae
mov
lret
ja
jne
jns
jle,pt
repz
int
imul
int3
jp
jl
jge
jg
shll
fwait
into
jg
popa
testl
jl
int
stc
outsb
cli
jno
sti
ja
xchg
mov
add
js
add
insb
dec
add
cmpb
sbb
pushf
addb
test
mov
xchg
sub
add
movb
mov
std
add
push
mov
xchg
add
xchg
fwait
add
pushf
mov
sub
movb
mov
fnstenv
iret
push
sar
test
push
test
push
xchg
fwait
int
mov
rorl
rorl
mov
xchg
rcrb
rolb
xchg
int
insl
mov
push
xchg
xlat
xchg
push
xchg
xlat
push
xchg
fcoms
flds
pushf
shll
cltd
fcomps
cltd
ficompl
std
out
imul
lcall
mov
repz
cltd
sahf
mov
repz
cltd
incl
fisubs
cmpsl
fcoml
cmpsb
mov
lods
filds
scas
mov
ss
in
repz
mov
cs
mov
mov
insb
mov
mov
loop
fmulp
movb
lds
xlat
int
add
aam
stc
xor
aad
ret
call
int3
ret
out
jns
or
into
fcmovbe
aam
push
cld
cmp
out
filds
lret
repnz
iret
jnp
in
in
push
es
push
idiv
repnz
shrb
cmc
clc
add
out
cli
add
xor
mov
add
xchg
inc
enter
jno
add
add
in
mov
in
ret
lret
pop
add
add
sbb
popa
stc
jmp
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
stos
lods
lods
mov
mov
cwtl
popa
pop
add
sbb
out
or
xor
xor
aaa
cmp
cmp
jne
orb
pop
xchg
pop
inc
dec
dec
dec
jbe
js
jl
xorb
mov
cwtl
cltd
popf
popf
xchg
mov
jp
inc
fwait
add
lahf
mov
test
pop
sti
mov
mov
fwait
inc
inc
dec
dec
dec
pop
and
decl
jns
jge
addl
cmpb
xchg
mov
decl
xchg
sbb
mov
stos
pop
inc
popa
test
sbb
pop
imul
fwait
cmp
xchg
cld
mov
andl
lret
lret
lret
outsb
imul
inc
mov
fdivrs
popa
jg
mov
pop
mov
fistpll
aas
cmp
movsl
xchg
leave
lret
insl
testl
test
in
mov
lcall
push
insb
outsb
or
popa
in
std
cld
dec
jns
cmpb
add
data16
or
stc
lahf
pop
xor
cmp
sahf
jle
xchg
sbb
fs
add
arpl
jae
mov
mov
scas
pop
arpl
pop
xor
popa
fcom
mov
pop
popa
pusha
pusha
push
cmp
test
xor
addr16
xor
js
jle
fwait
jbe
mov
pop
mov
pusha
add
pop
das
xchg
mov
leave
pop
xor
popa
xor
daa
xchg
mov
in
daa
jbe
add
dec
daa
xchg
pop
add
add
adc
pop
call
add
mov
lret
inc
fwait
dec
es
pop
pop
push
pusha
loopne
inc
pop
ret
fwait
inc
and
or
add
inc
and
mov
pop
add
xor
cmp
inc
and
pop
add
xchg
dec
add
mov
push
push
pfrcp
xchg
cli
adc
adc
adc
pusha
mov
pop
jg
jg
shrl
cs
dec
dec
push
push
push
push
adc
push
pop
aas
sub
pop
ret
add
dec
xchg
pop
add
xchg
mov
outsl
add
or
test
adc
add
and
sahf
jae
add
add
imul
clc
sub
fistl
push
jne
pop
push
loopne
syscall
sub
inc
les
iret
xor
inc
inc
push
dec
inc
les
psrlw
or
xchg
mov
das
outsl
inc
inc
sub
add
mov
inc
inc
loopne
add
cld
in
lcall
out
add
mov
inc
and
lahf
popl
pop
in
arpl
sbb
add
mov
pop
scas
std
push
and
inc
inc
fs
test
mov
rorl
mov
sub
adc
enter
pop
dec
bound
cmp
dec
and
add
mov
or
pop
add
insb
adc
pop
add
and
ss
scas
jp
inc
push
push
js
xor
sbb
loope
fildl
inc
es
dec
push
cmp
jl
jle
dec
int3
js
sbb
add
push
add
inc
add
cs
push
push
add
cmp
push
imul
add
dec
pop
jbe
pop
add
push
pop
add
dec
mov
pop
cmpsl
lock
cmpsl
fs
push
jb
add
gs
dec
bound
push
sbb
push
js
mov
pop
jb
ss
popa
jnp,pt
fdivr
mov
data16
sbb
add
arpl
imul
jns
sub
jge
push
insb
arpl
pop
jne
push
sti
push
xchg
pop
add
push
das
push
mov
sbb
xchg
cmp
add
push
mov
ss
xor
xchg
push
add
or
add
cs
mov
adc
sub
pop
outsb
out
pop
fstl
clc
imul
js
add
pop
and
cmp
in
sbb
insb
push
xchg
push
or
outsl
enter
mov
push
lea
add
inc
xchg
incl
into
xchg
xchg
xchg
pop
fiadds
add
xchg
pop
setnp
mov
mov
mov
jecxz
inc
mov
sbb
xchg
add
scas
mov
mov
stos
std
pop
xchg
add
insl
xchg
jb
jne
or
jecxz
mov
jge
inc
insl
stos
add
mov
inc
les
jo
roll
jle
push
mov
push
xchg
mov
or
add
fildll
movsl
lods
andb
adc
sti
idivb
or
mov
adc
xchg
add
fistl
add
nop
stos
add
mov
add
movsl
mov
add
inc
pushf
push
push
lods
mov
add
outsl
xchg
push
inc
lods
sahf
and
cwtl
fistpll
push
pushf
push
inc
mov
add
fistl
scas
lods
add
mov
movsl
mov
mov
lret
roll
mov
scas
lods
lds
mov
add
mov
fistl
aaa
push
roll
mov
add
sarb
iret
add
push
add
insb
mov
mov
pop
rcr
adc
or
int3
cmpsb
in
sti
fbstp
lret
rcl
jbe
flds
jge
fbld
aad
arpl
ret
pop
fmull
aam
push
shl
add
pusha
test
mov
add
mov
fstpt
push
mov
mov
insb
pop
lock
add
out
popf
leave
data16
test
push
out
stos
lret
mov
mov
or
sti
rorl
ficoml
shll
into
iret
fsts
fildl
sbb
jecxz
aad
cmp
sub
cld
out
outsb
in
mov
dec
cld
xchg
stos
aam
mov
in
push
int3
xorb
cmpsb
mov
xlat
mov
fbld
aam
fisubrs
shll
add
add
fildl
loope
push
mov
in
cmpsb
out
dec
out
test
out
es
cli
jbe
data16
loop
ret
icebp
call
hlt
in
in
stos
inc
push
outsl
gs
dec
sbb
sub
aaa
bound
mov
orb
push
push
add
pop
ljmp
loop
pop
jno
mov
sti
mov
mov
cmpsl
in
pop
pop
sbb
push
push
and
adc
mov
fneni(8087
fbld
fnstsw
lret
jl
sub
sbb
and
cld
jg
jl
fwait
lret
fcmovu
fcomip
loope
lret
lcall
int3
push
lock
mov
pop
das
mov
mov
je
icebp
out
jmp
sub
fnstsw
jg
jnp
jg
mov
mov
divb
or
call
pop
imul
mov
movsl
mov
or
hlt
sti
mov
ret
mov
std
addr16
pusha
pop
mov
cld
out
or
ret
lahf
xchg
lcall
lret
repz
mul
jbe
mov
pop
sti
imull
shll
rcrl
hlt
fdivrl
cld
lahf
or
movsb
or
icebp
neg
or
xorl
ljmp
stc
div
cld
cmc
loop
dec
xchg
movsb
mov
or
or
or
pop
or
jg
cmp
cmp
hlt
sar
in
aas
adc
movsb
lock
incl
dec
dec
adc
or
sbb
outsb
ret
mov
inc
cmp
decl
dec
add
jle
dec
dec
inc
inc
dec
add
adc
daa
cmp
test
repnz
call
mov
addr16
push
push
popa
popa
push
push
dec
sbb
sbb
es
mov
pop
xchg
imul
dec
cmp
pop
pop
pop
xchg
xchg
jg
mov
push
push
sbb
add
aaa
sub
add
and
xchg
test
inc
mov
lock
cmp
mov
push
or
out
sub
or
or
icebp
xchg
repnz
or
add
push
stc
sbb
dec
and
xchg
pop
or
mov
or
shll
and
test
pop
movsl
mov
or
lahf
cmpsl
aas
aam
call
mov
aad
cmpsb
dec
mov
or
scas
pop
xchg
xchg
mov
in
xchg
or
out
mov
and
fmulp
ret
pop
aas
pop
add
pop
jnp
int
xlat
mov
ds
sahf
cwtl
push
fneni(8087
loope
int
jg
xor
out
mov
js
push
sti
idivl
and
xor
loope
popa
std
or
jmp
fsubl
add
sti
ret
sti
mov
test
mov
mov
mov
iret
fildl
xor
cmp
pushf
das
ja
cmpsl
add
mov
add
pop
arpl
xor
dec
xor
mov
idivl
pop
adc
adc
jg
popf
adc
sbb
or
or
sbb
and
adc
test
add
sbb
add
push
cmp
es
pop
cs
or
in
jg
cmc
push
add
sub
cmp
cs
cmp
ss
mov
fwait
sub
cs
or
add
push
inc
ds
inc
outsb
arpl
add
jg
outsl
clc
cmp
sbb
push
push
cmp
inc
add
push
push
aas
pop
add
dec
jo
incl
xor
add
dec
inc
add
dec
add
inc
add
pop
dec
add
pop
mov
push
push
add
bound
pop
pop
add
movsb
out
jo
dec
push
pop
adc
movsb
pop
fs
jo
imul
inc
pusha
xchg
pop
jbe
add
js
std
mov
bnd
imul
es
inc
add
sahf
jl
dec
add
add
cld
outsl
int
push
imul
je
addb
fwait
jg
mov
bound
bound
jp
imul
mov
js
imul
push
jo
jne
jle
jge
jne
neg
mov
add
ja
ja
test
xchg
cmpl
jg
add
lcall
jl
mov
jge
xchg
add
stc
pop
jo
push
xchg
xchg
lea
cltd
insl
imul
jle
nop
xchg
push
xchg
xchg
push
mov
mov
jle
mov
mov
add
popf
cwtl
movsl
lods
xchg
addb
mov
mov
jle
mov
mov
lcall
push
and
pop
roll
mov
ret
incl
add
mov
add
into
add
jmp
aaa
les
add
cmc
add
in
cmc
cli
add
mov
cli
xchg
cmpsb
lahf
push
test
mov
cmpsl
scas
add
lods
sahf
cmpsb
lods
mov
lods
mov
rcr
mov
push
xlat
in
fnstenv
cmpsb
cli
outsl
fistps
mov
mov
add
push
sti
fldt
test
mov
mov
mov
mov
mov
clc
dec
mov
mov
push
mov
dec
xchg
cmp
mov
or
ret
enter
leave
lds
leave
into
adc
ret
push
mov
push
clc
insl
sarl
ret
fadds
rcl
out
loope
cmpsb
in
add
or
lds
ss
ret
mov
mov
fcmove
shrb
std
outsl
fnop
rolb
rcr
rolb
jmp
fisubl
fcmovu
push
loop
fldcw
loop
fsubrp
fisubs
icebp
out
ss
loop
repz
jmp
pusha
sti
fcmovu
ficoms
in
dec
fsub
cs
in
data16
fistpll
ss
add
out
in
out
push
stc
pop
mov
mov
outsb
cli
jle
shl
es
clc
fucom
in
cmpsb
push
sti
fdivr
testb
cli
add
aam
push
iret
jnp
stc
push
loopne
idiv
loopne,pt
call
cmp
div
push
repnz
pop
cs
sahf
out
jbe
push
decl
cli
cli
mov
call
push
push
push
pop
push
sub
cmp
mov
add
aam
and
int
outsb
mov
jg
shrb
jle
mov
test
dec
mov
and
adc
fidivs
shrb
scas
add
rol
shrl
lcall
add
jmp
scas
nop
ret
ret
lds
ret
push
dec
icebp
dec
adc
mov
fcomp
fstp
div
hlt
je
outsb
fbld
sub
fstp
add
icebp
hlt
push
xchg
not
sub
pop
add
hlt
into
ljmp
aad
mov
pop
lds
fimull
int3
push
in
insb
sti
into
int3
iret
fcomp
mov
mov
jmp
ret
sbb
js
jae
jo
or
jae
push
je
fnstsw
je
and
jb
insl
jmp
jae
jo
pop
pop
pop
pop
pop
pop
pop
or
pop
pop
sub
repz
mov
xor
jnp
add
jle
mov
fwait
cmpsb
adc
movsl
movsl
pop
std
inc
scas
jp
jp
mov
mov
int3
enter
sti
lods
add
adc
jle
jns
push
mov
xchg
xchg
mov
mov
int
repnz
cld
add
incb
in
mov
sbb
add
hlt
stc
repnz
lods
push
out
out
mov
mull
ja
imul
cltd
lods
cmp
insl
add
int
lret
stos
pop
adc
jae
dec
add
call
dec
push
dec
dec
dec
xchg
jp
push
jmp
ss
ss
add
push
sbb
sbb
adc
push
sbb
sub
sub
sub
sub
xor
inc
inc
dec
dec
mov
imul
gs
insl
jb
addr16
imul
lods
jbe
jbe
jne
jnp
je
jbe
xchg
jg
movsl
xchg
xchg
jnp
sti
mov
cmp
pop
pop
pop
push
add
pop
jb
imul
clc
pushl
xor
cmp
pusha
arpl
in
or
cld
sti
sti
cmp
shlb
sbb
mov
and
mov
dec
loopne
mov
in
repnz
out
sarl
ds
pusha
push
mov
mov
jnp
jge
push
insb
and
jbe
enter
inc
push
ss
call
test
inc
dec
or
and
out
ss
sub
sub
sbb
push
xor
dec
repz
pop
pop
fs
push
insl
xor
cmpsl
sub
xchg
add
adc
mov
push
addr16
jp
loopne
ss
call
xchg
adc
jbe
scas
test
adc
lods
mov
mov
mov
mov
lock
mov
cs
int
ror
push
mov
sar
cmp
and
and
mov
mov
shl
out
div
repz
jmp
or
and
and
imul
sbb
repnz
imul
ljmp
and
nop
xchg
cltd
in
icebp
mov
mov
mov
stc
mov
add
roll
inc
inc
inc
sub
and
fcomip
sbb
xor
xor
dec
inc
xor
sub
sbb
sbb
inc
addl
jno
je
repnz
sbb
push
aaa
push
push
add
fdivr
shl
adc
insl
outsb
gs
or
adc
xchg
xchg
movsb
cli
cmpsb
lods
jl
lods
mov
mov
cmpsl
lods
lods
cmpsl
cmpsl
cmpsb
xchg
nop
pusha
cmp
and
cmp
cmp
fwait
mov
out
test
lret
jmp
out
imul
jmp
repnz
or
sub
and
clc
repnz
imul
cmp
in
out
arpl
out
add
or
add
lret
mov
push
outsl
aaa
dec
imul
movsb
and
lret
data16
sbb
dec
sbb
icebp
jl
push
pop
pop
sub
pop
add
adc
ss
push
loopne
dec
xor
dec
dec
pop
push
push
push
jo
je
dec
sbb
insl
dec
jno
loopne
jge
inc
push
push
pop
fs
jo
not
addr16
fs
dec
dec
cmp
xor
ljmp
and
insb
xor
mov
xchg
jne
xor
cltd
xchg
outsl
clc
out
adc
cmp
xchg
lcall
mov
fcmovu
in
divb
lock
mov
add
idivb
or
ja
in
inc
or
adc
repz
out
ljmp
xlat
add
or
fidivrl
pop
movsl
mov
push
push
sub
jo
inc
lret
stos
ret
or
inc
clc
or
push
push
and
and
popa
adc
xor
sbb
or
or
in
mov
add
sbb
jmp
jle
loopne
or
push
or
and
mov
fs
jb
call
jle
xchg
movsl
movsl
stos
sbb
ftst
and
cmp
mov
imul
outsl
js
pop
addl
mov
out
cmc
push
cmp
push
or
clc
clc
int3
jmp
sti
std
and
xchg
inc
and
jo
outsl
push
in
out
xlat
enter
mov
mov
sti
imul
movsl
popf
mov
mov
fmull
mov
lods
push
clc
aas
pop
pop
lcall
add
adc
mov
or
adc
push
or
clc
and
sub
or
outsl
out
jecxz
or
cmp
add
push
push
dec
dec
ss
aaa
dec
dec
dec
test
inc
pop
pop
add
inc
jb
mov
jo
jb
outsl
cmp
jb
fnstcw
gs
push
popa
outsb
adc
fsubp
clc
fs
xchg
jg
adc
lods
scas
lods
das
clc
aas
fadds
scas
mov
cmpsl
xchg
push
xor
daa
cmp
mov
xchg
dec
icebp
xchg
fdiv
adc
xchg
push
neg
stc
clc
and
sbb
in
lock
in
lock
mov
int3
ucomiss
ljmp
pop
or
std
movsb
and
pop
and
arpl
mov
lods
add
dec
jl
pop
fsubrl
es
add
fbld
or
inc
sub
test
imul
and
cmp
add
push
cs
int
das
cmp
adc
add
sub
or
and
cs
lcall
pop
inc
pop
stc
jg
rcll
pop
and
push
dec
xor
addr16
mov
mov
sub
sbb
dec
dec
jp
xchg
jbe
push
aaa
es
push
mov
mov
xchg
sub
loop
lock
les
jecxz
in
xor
cmpsl
sub
cmp
cli
ret
test
dec
call
sbb
adc
jecxz
shrb
mov
cmpsb
xchg
jb
das
sbb
jbe
mov
incl
mov
mov
stos
movsl
pop
fidivrs
pop
dec
idivb
clc
inc
dec
inc
inc
inc
sub
adc
or
rol
inc
dec
dec
xor
in
aas
out
sbb
popa
cld
aad
into
sub
cmp
incl
ss
mov
cmpb
jne
cmc
pop
mov
adc
and
outsb
dec
xor
dec
shl
jnp
add
pop
gs
cmp
add
dec
cs
adc
pusha
mov
mov
inc
mov
mov
xchg
push
jg
adc
or
xchg
lret
fstp
jecxz
push
jecxz
or
mov
out
add
inc
inc
sbb
repnz
push
out
add
pop
fdivrs
dec
out
int
ljmp
scas
mov
aaa
in
cmp
addr16
jae
push
adc
rcrb
das
sbb
daa
pop
jno
repnz
inc
mov
inc
xchg
xchg
push
inc
xor
sarl
sbb
cmp
ss
loop
dec
inc
sub
in
xchg
inc
les
outsl
mov
push
orl
aad
icebp
push
xor
cli
dec
dec
dec
dec
pop
popa
test
or
pop
dec
hlt
sbb
and
add
mov
je
outsb
pop
mov
add
push
pop
mov
loope
jbe
push
pop
adc
jmp
xchg
subb
fsubs
cmp
enter
fbstp
push
enter
fcmovu
xor
fucomp
out
fucomi
int3
dec
sbb
fcmovne
rcl
fldz
and
dec
dec
mov
and
int
xor
iret
dec
into
movsl
cmp
push
scas
mov
jl
shl
sub
stos
or
insb
ret
dec
cmpsl
xor
sbb
and
inc
sub
mov
xor
xor
xor
inc
pop
repz
sbb
addl
add
sub
xor
and
dec
push
scas
or
xor
and
ds
xchg
jmp
inc
push
adc
and
outsb
fdivs
inc
pop
aaa
or
or
add
or
push
push
dec
dec
push
mov
cmp
aaa
mov
xchg
jnp
outsl
push
xor
pop
cld
das
orb
xchg
xchg
cmpsb
cltd
push
int
or
loopne
leave
les
leave
out
repz
cld
rcl
add
lret
leave
add
int
fstps
scas
filds
lret
es
int
xchg
fsubl
sbb
pushf
scas
cmpsl
stos
cli
movsl
in
and
push
push
xchg
push
iret
jae
pop
inc
inc
add
mov
sbb
bound
add
sbb
xor
mov
daa
xor
push
or
mov
push
cld
sbb
push
or
mov
fiaddl
loop
mov
dec
ja
push
push
or
add
adc
fiadds
dec
xor
ljmp
push
push
adc
pop
dec
xor
xor
push
cld
popa
pop
push
gs
je
jg
jnp
push
nop
addr16
call
cmp
jbe
pusha
push
bound
xchg
xchg
xchg
mov
or
and
repz
testl
cwtl
xchg
cwtl
add
lret
sbb
test
sbb
sar
mov
loopne
push
les
pop
outsl
mov
insb
fmuls
sbb
adc
aaa
push
mov
inc
inc
add
or
lcall
inc
adc
add
push
cmp
or
stc
push
mov
pop
push
add
in
shlb
adc
push
mov
sbb
adc
in
xchg
dec
pop
cmp
push
xor
adc
add
adc
xchg
and
xor
cmp
ss
insb
dec
gs
pop
push
xor
and
xor
dec
pop
sbb
je
push
sub
xchg
outsb
xchg
ja
xor
cs
les
out
decl
mov
ds
aam
fstp
lret
cwtl
imul
cmp
sbb
aaa
mov
add
mov
andl
psubq
sbb
fimull
mov
and
ret
addl
je
dec
fbld
cld
jle
insl
xor
das
push
pop
inc
imul
xor
inc
inc
inc
adc
xlat
bound
push
adc
and
mov
xchg
add
add
or
mov
inc
adc
and
add
inc
into
and
in
mov
push
in
xchg
pop
out
dec
dec
sub
andl
push
sbb
lock
pop
ja
or
pop
cli
push
dec
and
or
push
jae
and
push
idivb
cmp
adc
scas
pop
xchg
imul
and
push
xor
mov
ret
lret
pop
mov
mov
push
sbb
and
add
cmp
ja
ja
andl
push
scas
int3
aam
insl
xchg
and
movsl
pop
jbe
scas
lock
cli
mov
or
gs
jecxz
jge
push
push
inc
add
sbb
and
inc
sub
cmp
or
or
daa
add
xor
pop
or
push
mov
int
and
jbe
dec
inc
inc
sub
in
pushf
xchg
inc
pop
push
add
out
cmp
call
sub
add
inc
pop
cwtl
addb
inc
or
pop
xor
xchg
cmp
aaa
ds
push
xor
mov
pushf
and
imul
pop
loopne
in
cmp
and
jg
or
lret
fadds
int3
mov
cmp
cmpl
push
push
push
sbbb
in
ds
stos
inc
cld
xor
xchg
lods
add
mov
nop
fsubl
outsl
stos
scas
stos
lods
stos
lods
stos
test
or
pop
movsb
mov
jns
comiss
mov
or
add
inc
xor
jge
pop
cmp
sbb
seto
fldenv
inc
popf
andb
dec
cmp
decl
push
push
sub
or
call
pop
adc
mov
sbb
jl
pop
push
sub
mov
mov
dec
inc
xor
fsubl
push
push
and
pop
push
add
sbb
lcall
sbb
popf
mov
and
add
or
cmpl
inc
test
lcall
lea
mov
stos
stos
adc
sbb
cld
sbb
mov
int3
or
and
stos
mov
sbb
scas
imul
ja
testb
and
movsl
push
scas
cmp
mov
or
or
mov
jae
push
pop
jle
cmp
sbb
xchg
aas
cld
add
sub
pop
push
sbb
or
mov
ljmp
pop
sub
sbbl
push
sub
inc
xchg
decl
sahf
cmc
mov
sub
sbb
push
cld
aaa
lods
shlb
sbb
addl
xor
mov
dec
pop
clc
adc
adc
adc
add
jno
push
xor
aas
in
jo
mov
and
xor
jae
cmp
mov
les
xchg
scas
xchg
ja
test
mov
call
push
xor
lea
es
outsl
pushl
scas
outsl
xor
pushf
movsb
and
scas
pop
push
xchg
test
push
mov
push
add
adc
sbb
jo
xor
push
ret
mov
xor
sbb
adc
adc
fstpt
mov
and
mov
add
adc
ds
lahf
or
adc
push
adc
inc
inc
inc
add
outsl
xchg
or
cmp
ds
popa
inc
sub
lahf
in
sub
je
sub
fnstsw
sbb
lcall
xor
cli
cmpsb
out
pop
pop
adc
jg
push
je
insb
pop
and
xorb
insl
jge
sar
mov
jg
pop
aas
mov
xor
pop
push
push
xor
push
imul
or
mov
mov
out
std
shrl
or
and
sbb
jnp
test
lcall
jno
hlt
and
pop
add
jge
aas
insb
daa
or
adc
or
adc
mov
mov
mov
pusha
popf
adcl
jg
cmp
and
lcall
inc
sub
mov
add
jg
aas
and
push
adc
push
inc
xor
or
jle
lcall
push
xor
inc
pop
lock
xor
insb
pop
dec
sub
cmp
xchg
and
test
aam
cmp
jnp
aas
shr
jmp
or
pop
lcall
daa
xor
imul
pushf
mov
lods
fmul
fmulp
fmul
decb
test
ret
mov
or
ds
test
xor
jecxz
jg
and
sub
mov
insb
inc
das
outsb
jp
push
sbb
or
or
and
jo
push
leave
rolb
mov
out
sub
test
adc
push
mov
scas
mov
ds
popf
test
push
test
inc
add
std
cmp
cmp
dec
pop
add
popa
push
cli
cmp
mov
xor
je
pop
ljmp
mov
pop
jno
js
js
dec
sbb
lea
lahf
mov
push
xor
and
mov
pop
jg
lock
or
test
popa
aas
mov
mov
or
xor
cmp
cld
pushl
ds
cmp
lods
jne
loopne
push
fdivrs
add
out
jbe
xor
movsl
imul
clc
ret
stc
popa
mov
jge
inc
add
jl
push
sub
ljmp
cmp
and
sbb
or
push
or
mov
loopne
sbb
xor
adcl
pushf
cs
and
xchg
pop
inc
fsubrs
inc
pop
sbb
cmp
sbb
or
inc
pop
xchg
nop
add
cli
jmp
popf
jmp
push
aaa
xor
dec
lock
push
push
push
push
pop
xor
and
lcall
pop
scas
ret
jo
fldl
ret
xchg
mov
cmp
test
cmp
popf
ljmp
aas
aaa
cltd
repnz
xchg
cmp
movsl
push
sahf
jmp
cmp
and
ret
mov
xor
jl
scas
adc
popa
lock
js
dec
jno
inc
inc
inc
sub
loope
and
sbb
cmp
mov
sub
adc
xchg
mov
sbb
lock
xor
cs
lock
cmp
pop
push
xor
and
mov
and
mov
pop
pop
dec
cs
loopne
xor
cmc
call
or
push
and
push
xor
je
xor
jnp
push
add
lock
decl
fimuls
lcall
mov
arpl
mov
lock
call
jnp
adc
lret
push
mov
and
lock
xchg
scas
adc
push
movsl
movsl
mov
iret
pop
cld
fcomip
adc
sbb
push
inc
inc
inc
inc
inc
pop
pop
scas
jb
ret
pop
push
mov
pop
rclb
xor
adc
xchg
lcall
lcall
imul
xor
sub
mov
mov
push
ss
out
cli
loopne
push
mov
pop
gs
dec
sub
call
jmp
shrb
insl
push
sbb
mov
test
shl
rorb
push
mov
push
scas
mov
data16
fwait
fs
pop
insb
stos
xchg
jo
decl
cmp
cmp
test
pushf
fucomi
xchg
nop
push
fdivr
push
pop
ja
repnz
sbb
cwtl
pop
mov
test
arpl
lret
add
adc
lods
lret
mov
dec
stos
mov
insb
lock
orb
push
jl
sbb
adc
fwait
and
scas
inc
inc
sub
and
and
mov
dec
fnsave
add
xor
je
call
inc
cs
adc
daa
mov
push
push
push
inc
aaa
mov
lea
jp
mov
push
gs
dec
cmp
cs
fs
jle
jb
aas
mov
mov
inc
test
and
mov
scas
add
int3
lret
daa
sub
mov
xor
jg
adc
or
stc
mov
xchg
xchg
fprem
std
stc
mov
neg
rcrl
sbb
out
popf
or
aam
int
test
cld
lock
mov
adc
lea
adc
pop
cmp
xchg
push
push
test
inc
inc
movsb
ret
shrb
sbb
orl
movsb
and
popf
mov
stos
outsb
jp
add
sub
pop
decb
mulb
mov
cmp
push
dec
add
xchg
xor
push
addb
test
and
jo
push
aaa
push
lea
inc
shl
mov
insl
dec
and
cli
fwait
push
mov
cld
ja
mov
aas
pop
outsl
lods
or
mov
xor
fmul
pop
adc
in
in
stos
lret
fstp
fildl
mov
push
out
xchg
cmpsb
fnstenv
std
push
sti
pop
out
popa
xchg
fisttpl
xor
movsb
lcall
mov
int3
cwtl
enter
lret
push
xor
inc
mov
leave
push
ret
stos
stos
adc
xchg
push
mov
inc
push
sub
or
inc
and
sbb
pop
mov
push
xor
mov
mov
and
dec
push
test
jne
lcall
dec
dec
dec
sub
in
xchg
and
setae
movsb
adc
push
jmp
or
and
push
xor
test
jg
jb
aas
push
push
adc
push
js
hlt
shl
call
add
mov
leave
enter
rcr
aam
orb
and
mov
lock
fnstsw
popf
in
shlb
jg
add
add
std
pop
and
rcrl
imul
pushf
sahf
jmp
mov
xor
es
or
push
lods
or
sbb
ficomps
pop
jno
xor
add
call
mov
mov
mov
pop
add
push
sub
addl
xchg
fbstp
dec
push
push
push
xor
cmc
mov
xor
dec
xor
sbb
pop
adc
mov
cmp
and
and
or
add
pop
xchg
push
dec
jg
outsl
push
cmp
lock
xor
cld
dec
popa
push
xchg
cli
popf
rol
leave
fcom
fcom
rcl
arpl
lcall
mov
cmc
xchg
out
lock
mov
jmp
mov
or
call
lods
mov
testb
loop
daa
in
shll
nop
cwtl
cmpb
lret
mov
call
push
push
mov
aam
add
adc
xchg
std
lret
jo
pop
jge
push
sbb
sub
cmp
adc
push
js
aas
sbb
dec
add
sbb
add
in
sub
pushl
xor
cmp
add
adc
cwtd
adc
ljmp
xor
fwait
loop
sahf
mov
dec
das
xchg
je
xchg
or
loopne
shrb
pop
push
aaa
das
jbe
pushf
xchg
push
jp
xchg
jnp
push
push
xor
mov
loopne
loop
out
cmc
fistl
sub
in
test
bound
ror
mov
adc
jecxz
xchg
fucomi
out
mov
xchg
imul
stc
sarb
cmpsb
int
adc
add
repnz
cs
movsb
fwait
daa
or
repz
mov
mov
push
int
push
data16
mov
mov
nop
add
mov
mov
movsl
push
dec
or
dec
pop
sub
xor
jle
outsb
rorb
sub
push
push
dec
sub
loop
lahf
popf
clc
mov
sbb
push
xor
or
push
push
pop
sbb
pop
xor
adc
pop
pop
sub
pop
push
push
push
ss
push
loopne
mov
mov
cmpb
and
sbb
aaa
cmpl
aas
jl
jbe
or
xchg
addr16
and
popf
xchg
add
out
dec
xchg
xchg
push
lcall
or
xchg
xlat
fiaddl
sarl
mov
fcmovnu
mov
imul
xchg
icebp
decb
adc
idivl
pop
lret
movsb
or
mov
ljmp
mov
or
cltd
mov
lret
sub
dec
cmpsl
sarb
mov
xor
mov
push
fisubrs
scas
fmuls
mov
test
lock
and
sbb
das
pushf
fidivs
or
sbb
and
xchg
add
scas
cmc
cmp
and
push
repnz
insl
xor
jo
or
add
pop
popa
stos
jg
mov
dec
push
dec
pop
dec
xor
mov
outsl
add
sahf
mov
je
push
dec
and
jmp
outsl
mov
daa
lea
jne
mov
lock
pusha
cmpsb
xchg
pusha
aas
mov
xor
adc
outsb
xchg
mov
xlat
fstp
sbb
loope
insb
out
out
mov
mov
jl
clc
stos
clc
popf
out
stc
enter
adc
or
cmp
movsb
mov
push
add
loopne
popf
and
cwtl
sbb
sbb
lret
adc
cwtl
adc
faddl
enter
add
clc
das
adc
jae
mov
adc
pop
or
sbb
inc
mov
pop
ret
fs
out
mov
out
push
add
push
pop
add
rolb
shrb
fwait
xor
mov
lret
call
or
es
popa
add
pushl
fists
je
pop
pusha
xor
ja
jne
popa
das
sbb
xlat
pop
lock
push
lods
sbb
mov
cltd
outsl
cmp
and
or
rolb
pop
jecxz
loop
out
lock
cmpsb
cwtl
push
jmp
jbe
cld
cwtl
imul
loopne
fstpl
wrmsr
aas
cmp
hlt
repnz
fstp
in
xor
push
and
push
cwtl
push
cmp
rcl
xlat
rcl
xor
mov
subl
jg
test
dec
push
push
pop
fcomps
test
pop
stc
mov
scas
adcb
cmpl
mov
push
dec
ss
mov
xor
js
xor
pop
add
shll
jo
add
push
xchg
rorb
sahf
popa
push
aaa
test
lock
outsl
push
xor
ljmp
sub
pushf
aas
addr16
loopne
cmp
addr16
stos
push
or
cmp
push
das
xchg
lea
push
mov
loop
sahf
or
sub
sub
pusha
push
add
xor
and
lcall
mov
icebp
fadds
jmp
lods
xchg
ds
orl
ss
in
out
adc
mov
xchg
lea
add
sahf
rcr
sarb
sarb
jno
cmp
mov
and
imul
add
rcrl
push
add
sbb
xor
push
ret
push
sub
adc
mov
pop
xchg
loope
sbb
cmp
pop
shlb
gs
popa
adc
rolb
push
ret
xchg
add
inc
lock
outsb
or
jg
mov
data16
ja
xchg
add
xchg
jbe
push
xchg
ja
outsb
cmpsb
jecxz
xchg
popa
push
aaa
xor
das
and
pop
and
push
roll
cltd
xor
cmp
adcb
mov
shrb
sbb
or
add
in
jmp
mov
shr
mov
mov
hlt
out
fwait
push
cmp
push
cmp
cmp
push
push
inc
fwait
push
xor
add
and
push
adc
and
imulb
lock
notb
enter
lret
cmpsb
fstpl
ss
dec
repnz
mov
ret
add
and
or
push
fs
mov
es
dec
fs
inc
push
test
outsb
dec
xor
or
jb
xchg
push
adc
ja
add
jg
scas
mov
jbe
dec
and
and
mov
in
mov
add
sub
cmp
sbb
mov
fcmovnb
push
cltd
jbe
add
out
sub
in
cmc
lock
shlb
push
cmp
popf
in
mov
xchg
push
movsb
pop
dec
hlt
aam
xchg
test
movsl
test
loope
or
ds
mov
loope
loope
adc
rol
mov
mov
adc
je
incl
sahf
push
sub
mov
call
and
sub
es
pushf
call
dec
adc
test
lret
xchg
mov
or
mov
loopne
dec
lret
cmp
adc
jb
jb
outsl
je
or
xor
sbb
xchg
ja
and
xchg
cmpsb
xchg
lret
aaa
pop
mov
mov
in
and
jg
aaa
rorb
pop
nop
xchg
cltd
or
daa
lahf
in
lcall
xor
or
or
adc
out
test
cmc
ljmp
loop
push
xchg
push
cmp
mov
paddw
lcall
out
loop
jmp
lret
lret
mov
and
ret
fcomps
or
shl
add
inc
xchg
es
adc
rcrb
mov
mov
inc
jno
imul
xor
adc
lcall
xor
xor
adc
and
xchg
shll
adc
xchg
cmp
mov
or
dec
adc
call
sti
sbb
adc
mov
imul
add
xchg
in
pusha
mov
xchg
push
add
sbb
xor
push
andb
popf
loop
push
pop
sar
es
arpl
data16
mov
xor
and
cmp
in
out
sbb
in
cmc
push
shll
add
arpl
xor
mov
mov
inc
jl
adc
jmp
pop
cmp
push
jl
dec
inc
movsb
fwait
out
or
jno
mov
add
lods
imul
adc
push
xor
pop
cli
push
lods
cmp
adc
and
sbb
adc
cld
pop
fistpll
xor
pop
adc
mov
lock
dec
or
gs
pop
adc
mov
mov
jne
or
push
xchg
adc
or
xchg
or
movsb
add
cmpsb
or
xchg
lock
mov
pop
xor
nop
arpl
mov
lock
in
mov
adc
adc
shlb
or
sub
adc
pop
and
decl
fcmovne
cwtl
pusha
fwait
loop
cmc
adc
stc
std
adc
dec
sbb
aaa
es
mov
cmpsb
movsb
push
push
or
orb
daa
xchg
shl
stos
mov
adc
rolb
mov
adc
imul
pop
sbb
jg
sbb
add
xchg
clc
incl
mov
and
mov
mov
adcb
mov
call
xor
outsb
push
shll
xchg
push
or
or
dec
xchg
or
sbb
add
xchg
cmpsl
movsb
loop
mov
pushl
frstor
adc
mov
xor
mov
xchg
lock
mov
mov
jo
popl
jmp
push
outsl
ret
adc
cld
nop
aas
hlt
test
cmpsl
sbb
stc
repnz
out
fxch
mov
xchg
adc
mov
mov
stc
lock
hlt
cwtl
rcr
in
loop
rcll
loopne
fdivp
cmpsb
adcl
mov
hlt
stos
pop
jg
andl
sub
out
sbb
inc
mov
mov
xor
daa
call
andb
cmpsl
or
cmp
push
and
dec
mov
lahf
pushf
fwait
outsb
sbb
or
adc
add
fistpll
cmpsb
movsb
or
mov
mov
push
mov
je
mov
push
nop
nop
out
sahf
test
pushf
mov
int
les
syscall
mov
ljmp
adc
lock
in
aaa
mov
into
popf
cld
sbb
or
xor
loope
repnz
movsb
imul
sahf
xor
movsl
mov
jp
aaa
adc
loope
daa
mov
xor
repnz
pop
data16
mov
popa
dec
aaa
dec
aaa
ss
aaa
xor
add
pop
data16
sbb
add
fnstsw
andl
outsb
sub
add
or
shl
push
pusha
popa
sbb
add
hlt
jp
and
pcmpgtw
push
and
xchg
push
adc
mov
mov
push
xchg
xchg
nop
pop
mov
jne
arpl
xchg
and
mov
mov
sub
je
jnp
xchg
in
in
out
push
and
jg
in
sahf
test
repz
incb
std
lock
pushf
mov
test
repnz
clc
cs
push
cltd
mov
xor
cld
inc
movsb
mov
cmc
sbb
push
and
sbb
aad
rolb
cli
cltd
setae
jne
aaa
bound
xor
pop
data16
test
lcall
adc
lcall
data16
sbb
imul
mov
outsl
jne
sub
ret
or
sbb
add
xchg
add
adc
loope
je
mov
adc
mov
cwtl
jecxz
sub
sbb
or
push
mov
or
icebp
lock
push
or
jb
cli
sbb
out
inc
imul
mov
push
push
cld
or
xlat
aas
or
fs
rcr
cwtl
fildl
lret
sbb
ljmp
fldl2e
loop
lods
fidivl
cld
into
mov
bndstx
mov
add
lcall
cmp
cli
push
or
ljmp
adc
addr16
pop
fdivrs
jb
jb
outsl
xchg
add
push
in
push
or
add
jbe
jle
cmp
xchg
push
or
xchg
pop
xchg
mov
dec
xchg
mov
sbb
jo
mov
mov
pushf
cmpsb
xor
mov
out
mov
nop
jmp
in
pusha
or
lock
ds
dec
push
push
pusha
shl
testb
fcomps
and
dec
addr16
sub
and
fwait
or
data16
mov
rcll
mov
js,pt
push
hlt
mov
shrl
push
icebp
push
data16
popa
icebp
push
push
out
imul
pop
test
inc
outsb
insl
or
outsl
outsl
sbb
jmp
clc
add
xchg
pop
cmp
jo
adc
adc
jnp
jbe
or
mov
loope
push
push
pop
or
add
fcomps
loope
add
pop
pushf
push
push
xchg
or
lds
es
fxch
mov
arpl
out
notb
add
div
adc
xchg
add
out
cmp
xor
cmc
or
jmp
dec
in
xor
adc
or
xor
cmp
fadds
cli
pop
sbb
icebp
stos
mov
mov
or
add
lods
movsl
cwtl
jo
push
and
push
stos
add
stos
les
stos
mov
mov
xorb
add
sub
mov
test
mov
mov
inc
mov
push
inc
xor
clc
xchg
sbb
cs
bound
in
cmc
out
neg
test
insb
dec
incl
sti
std
or
out
int3
add
sti
push
outsb
push
push
xor
in
insl
add
cld
and
sbb
and
lcall
sbb
sub
xor
xor
xor
or
rdpmc
xor
int
jle
add
aaa
dec
ss
dec
or
dec
dec
dec
aaa
mov
dec
dec
pop
dec
push
dec
push
add
add
mov
xor
ds
push
push
push
add
xchg
add
sbb
pusha
pusha
test
in
fsts
cmp
or
pusha
add
arpl
add
add
popf
jnp
imul
imul
das
mov
add
adc
popf
push
enter
or
bound
jg
add
xor
pop
into
adc
adc
in
cmp
ss
or
adc
push
sbb
in
push
push
push
push
adc
push
add
in
xchg
add
add
pop
mov
jnp
sbb
and
and
sub
and
add
add
xor
mov
mov
xor
xor
ds
int3
dec
add
push
add
dec
or
jnp
lahf
gs
add
mov
push
aas
pop
push
into
ds
jbe
sbb
aad
fmuls
or
cltd
imul
faddl
push
jge
icebp
or
repnz
lret
clc
add
dec
or
adc
stos
pusha
pop
fstps
pop
nop
add
add
test
add
test
add
outsl
push
mov
mov
mov
xor
stc
mov
add
fwait
int
inc
pop
jge
xchg
mov
mov
sarl
jge
idivl
add
pop
idiv
xor
inc
pop
out
and
cli
test
and
jg
pop
add
inc
or
xor
adc
repnz
sub
cmovo
scas
and
adc
inc
push
add
xorb
clc
pop
add
pop
jle
add
enter
loop
jo
push
adc
mov
push
imul
inc
cld
or
mov
daa
ret
and
cwtl
jb
daa
mov
xchg
xchg
cs
decl
loop
push
push
cmpsb
cmpsb
xchg
add
cmpsl
xchg
test
lods
lods
xchg
std
lods
loopne
aaa
lods
lods
cwtl
add
push
mov
fwait
add
xorb
mov
lahf
pop
sub
mov
mov
in
mov
pop
out
movsl
add
fisttps
loop
mov
add
lds
mov
notb
or
adc
mov
add
add
cmpb
xor
sub
adc
dec
xchg
add
add
and
adc
xor
xchg
ds
outsb
sub
cmpsb
dec
add
inc
ljmp
dec
dec
dec
dec
mov
orb
cmp
sbb
inc
inc
pop
mov
cmp
sbb
or
inc
add
or
or
fmul
out
mov
add
or
or
sbb
pop
idivl
or
or
sub
adc
or
dec
insl
xor
dec
mov
adc
add
mov
adc
and
imul
mov
add
push
das
push
push
stc
repnz
in
add
aas
ds
scas
cld
movhps
aas
aas
adc
add
sbb
fmull
adc
sbb
pop
add
and
sbb
or
sbb
sbb
pop
push
das
mov
pop
sbb
cmp
add
fists
loope
aas
push
sahf
or
pusha
pop
decl
dec
dec
push
push
sbb
sub
adc
pop
sbb
fnsave
sub
xor
xor
sub
and
add
shlb
inc
mov
jmp
add
adc
push
or
stos
add
mov
adcb
xor
sbb
daa
add
sub
das
add
cmp
xor
cmp
sub
mov
add
add
add
cmp
push
shll
dec
push
ss
outsb
inc
pop
add
jg
test
xchg
es
push
add
dec
pop
add
push
pop
add
push
fldcw
insl
into
push
insl
ss
jbe
and
scas
push
insb
add
push
jle
jg
add
dec
add
inc
add
inc
add
push
add
push
push
push
mov
add
pop
add
pop
pusha
pop
add
inc
add
dec
add
sbb
cld
addr16
add
push
mov
add
popa
push
popa
cltd
sub
mov
push
addr16
mov
or
push
dec
add
fidivs
imul
jge
addl
push
subl
lea
add
adc
add
cmpsl
popf
fwait
stos
movsl
scas
test
imul
mov
into
les
fildl
jbe
rolb
into
xlat
mov
pop
in
add
and
mov
mov
cli
jg
sbb
cwtl
cwtl
addb
xchg
xchg
add
adc
mov
lods
lods
cltd
add
mov
dec
mov
test
add
insl
xchg
test
xchg
lods
mov
fwait
lods
xchg
lods
mov
fwait
idivl
mov
mov
push
mov
ss
sahf
mov
dec
pop
mov
scas
aaa
mov
out
add
sarl
mov
es
lret
int
mov
lcall
lds
fcmovnu
or
into
xchg
rorb
lds
lret
rcr
insb
fucomi
add
aad
iret
aad
iret
fcmovnbe
fimull
mov
fldl
mov
mov
fadds
mov
fcoml
fiadds
mov
insl
pushl
mov
filds
mov
cmpsl
loope
lods
insl
loope
in
fsubp
mov
ljmp
jnp
loop
fabs
push
in
fimull
mov
fldl
cld
jbe
out
mov
mov
out
fucomi
add
fcmovnbe
loope
mov
mov
pop
mov
out
data16
sti
out
cli
pop
out
data16
insb
aaa
mov
in
hlt
add
mov
stc
fnstenv
mov
clc
push
jmp
add
in
std
add
push
mov
and
insl
shll
shlb
fsubp
frstor
jecxz
ret
mov
imul
push
in
out
out
lret
mov
insl
dec
jmp
call
add
jmp
add
jmp
mov
into
in
ss
jmp
lret
int
mov
mov
shr
lds
push
in
stc
in
push
sarb
out
decb
push
in
int
in
outsl
push
push
int3
out
shr
testl
icebp
icebp
ds
iret
fcoml
hlt
sti
push
rcll
cmc
repz
fnstenv
hlt
int
lret
data16
xor
int
enter
stc
ds
cmpsl
cltd
out
aam
cli
add
rcl
push
hlt
jecxz
fistpll
fptan
push
inc
in
in
in
divb
or
sub
sbb
add
xor
sar
outsb
push
xor
sub
jo
mov
push
ffreep
les
or
or
jg
pop
sub
mov
sub
pop
andl
cli
pop
jge
cmpsb
stos
dec
or
pop
cmp
shlb
scas
std
add
mov
fsub
jmp
or
pop
clc
and
cmp
ds
xlat
fisubs
orl
fcomps
mov
pop
add
jle
in
xlat
pop
mov
sbb
inc
dec
dec
rolb
sbb
addr16
inc
sbb
inc
jns
fistps
dec
inc
inc
sbb
add
mov
sub
iret
loope
popa
add
movlps
lods
pop
es
push
sub
clts
add
pop
add
bound
pop
push
adc
sub
and
add
xchg
jp
dec
sbb
pop
jg
and
pop
dec
push
sbb
out
mov
or
fistpll
jmp
clc
nop
shl
lock
adc
sub
cmp
and
lds
cmp
in
aad
enter
sbb
jle
aad
cld
ficoml
cmp
insb
fwait
mul
mov
add
or
pop
xchg
repnz
adc
sub
sub
adc
fs
insl
sahf
fdivp
out
lahf
fadds
sbb
pop
inc
or
bound
inc
inc
push
inc
inc
push
sti
aas
mov
lods
int3
popf
sbb
push
inc
bound
test
inc
popa
fs
fcmovu
int3
sbb
imul
sub
sub
out
jmp
arpl
cld
idiv
fidivrs
int
jle
jp
in
sti
shl
idiv
pop
push
les
add
scas
jmp
sbb
fs
hlt
cmc
fdivr
fistps
je
je
jl
aad
cmp
int
insb
xchg
lret
xor
or
or
jg
dec
add
mov
fsubr
out
xlat
sbb
fwait
lahf
ret
or
push
jno
add
push
mov
mov
lret
pushf
lcall
jb
std
testl
pop
mov
pusha
fdiv
loopne
iret
fisubs
cmp
and
fwait
jmp
ljmp
fucomi
jmp
repnz
aad
push
push
dec
dec
sbbb
inc
mov
mov
mov
shl
loope
enter
pop
pop
xor
push
mov
fsub
jmp
icebp
hlt
xor
mov
stos
jnp
mov
out
ret
loopne
lock
mov
out
out
xor
mov
in
mov
add
lock
or
mov
in
out
loope
repnz
jecxz
shlb
repz
mov
pop
mov
ljmp
cmp
repnz
xor
pop
add
je
js
cmp
sub
mov
mov
pusha
adc
aas
inc
jno
push
dec
inc
inc
and
push
dec
and
push
add
inc
mov
aam
nop
enter
or
add
bound
shlb
mov
mov
mov
enter
mov
adcl
sbb
and
mov
andl
xor
dec
add
pusha
and
jp
mov
sar
enter
xorl
call
mov
jo
and
mov
ret
movsb
xchg
or
and
ljmp
adc
dec
orl
and
or
jb
add
cmc
fiadds
xor
and
rolb
or
adc
and
sbb
aaa
sbb
je
subl
outsl
jl
inc
add
xor
nop
xchg
repnz
mov
or
mov
push
mov
mov
xor
mov
adc
push
add
push
adc
push
nop
inc
sbb
and
addb
inc
jmp
inc
mov
or
push
mov
fimuls
push
lock
adc
adc
enter
add
out
and
dec
and
or
sbb
adc
sbb
mov
rcrb
or
or
leave
push
mov
or
add
adc
inc
xor
add
sub
or
pop
pusha
sub
enter
mov
outsb
lock
xor
add
or
add
xor
sbb
xor
or
enter
adc
imul
adc
push
dec
ss
mov
test
pushf
jp
add
or
push
or
inc
and
and
andb
rolb
sahf
inc
ss
dec
mov
or
and
and
add
adc
adc
xchg
bound
pop
mov
jle
or
lods
mov
pop
add
adc
pusha
clc
es
loopne
or
addb
and
dec
or
rolb
and
or
xor
adc
or
jo
and
orb
cmp
fcmovbe
out
test
adc
inc
insb
mov
jbe
inc
or
dec
add
inc
jl
push
xchg
ret
pushf
sub
or
mov
rolb
pushf
pop
mov
sub
mov
add
mulb
and
add
sub
andb
adc
add
or
or
ss
inc
inc
push
mov
or
lods
mov
sub
adc
sbb
ljmp
dec
nop
mov
sbb
cmp
scas
test
nop
inc
adc
push
or
or
or
mov
sub
adc
adcl
and
les
or
mov
add
push
test
sarb
add
movsb
imul
lret
outsl
outsb
mov
push
jnp
add
jns
jae
repz
fcomi
es
ds
push
jne
push
std
ss
in
stc
jg
repnz
jno
lcall
pop
mov
shll
push
sti
push
incl
sti
fcmovu
jnp
idivb
jbe
jns
jp,pn
push
push
jae
fsubrp
fcompl
cmc
incb
jns
es
testl
icebp
mov
pop
divl
jbe
jne
push
ja
icebp
divb
data16
jbe
fistl
repz
jp
std
adc
push
outsb
idivl
pop
cli
jnp
xchg
cmp
fdivp
xlat
jbe
std
xor
sarb
insb
out
mov
into
pop
idivb
xlat
push
mov
cmp
mov
jne
ss
cmpsb
rcr
jnp
out
jp,pn
xchg
sahf
repnz
push
jnp,pn
sahf
out
sub
neg
call
push
cmc
cli
ja
mov
jge
repz
ja
push
xchg
insb
bndstx
push
decb
fists
ja
mov
ja
fidivl
negb
sub
mov
jne,pn
jo
ja
outsb
cmpsb
jbe
cs
cmpsb
out
loopne
loope
pop
cmc
divl
push
ss
xchg
sub
push
es
inc
cs
fdivp
ds
test
ficomps
cmp
stc
jbe
dec
jno
pop
pushf
lods
lds
push
idiv
sti
jae,pn
jge
sub
jbe
pop
out
dec
std
jg
out
shl
pop
sahf
cmpsb
jg
push
into
icebp
push
cmp
jbe
xchg
outsb
neg
idivb
sti
push
jnp
pop
cmc
jbe
mov
ds
imulb
jg
repz
mov
xchg
jbe
push
scas
or
jbe
pop
dec
fucomip
insb
js
es
jne
cmc
icebp
mov
out
jge
jp
push
jle
insl
stc
lock
mov
cmc
pop
push
sti
popf
jns
jo
mov
inc
stc
jp
incl
jnp
pop
es
jns
out
stc
data16
adc
es
insb
cmp
cmpsb
std
sti
push
cmpsl
into
dec
nop
jecxz
add
xchg
fistpll
fbstp
inc
xchg
ficomps
jle
push
ds
fbld
xchg
out
in
cmp
out
jle
fisubrs
icebp
jns
rcrb
pop
out
ss
push
cs
fcomps
repz
xchg
ss
loopne
jp
push
ds
ja
jnp
jmp
xchg
es
out
jnp
testl
idivl
cld
mov
sti
inc
jle
sti
mov
mov
sarb
push
pop
sti
xchg
mov
ss
das
mov
pop
lahf
push
out
push
div
push
jg
icebp
pop
idivb
pushl
sahf
popf
movsb
or
cwtl
aas
mov
std
mov
mov
mov
ficoms
test
mov
pop
mov
jmp
out
jnp
push
mov
mov
cmp
mov
cmpsl
inc
cli
mov
cmpsb
and
and
push
mov
aaa
mov
fdivrp
out
in
push
xchg
inc
add
insb
or
mov
pop
adc
jg
and
rcr
xchg
adc
dec
push
sbb
fsub
xor
xlat
out
sbb
pop
ljmp
call
cli
mov
pop
sbb
xorb
movsb
out
fnstcw
jecxz
mov
or
incl
pop
lock
int3
mov
repz
cmovle
data16
call
jno
lret
subl
ljmp
inc
pop
xchg
out
and
loope
es
xchg
in
and
sar
incl
repnz
push
cmp
xor
mov
or
push
xor
decl
cmpsl
cs
dec
inc
jge
notb
jmp
xchg
addr16
mov
jne
ljmp
push
sbb
mov
scas
mov
test
jb
mov
push
loope
leave
dec
sub
lcall
inc
lods
sbb
aaa
hlt
fldcw
lcall
aad
mov
ljmp
fsubl
pop
cmp
cmp
popf
repz
aas
addr16
std
call
fidivs
xchg
cmpb
mov
mov
lcall
insb
lock
cs
data16
adc
add
dec
scas
mov
aaa
jne
xchg
fistps
loope
loope
push
mov
pop
inc
sbb
jmp
popa
sub
sub
xor
cmp
imull
dec
mov
mov
inc
rorl
mov
xor
xchg
or
ss
icebp
jl
mov
lret
jecxz
sarl
pop
fldt
out
in
daa
pop
push
je
adc
inc
cmp
out
adc
jbe
jo
lcall
pop
inc
repz
addr16
and
ss
dec
ret
pop
rcr
lcall
shrd
sbb
push
inc
mov
test
mov
lcall
movsl
sahf
lock
add
lret
test
dec
mov
shlb
mov
pop
lock
lcall
inc
jo
sarb
xchg
bound
lahf
fsubrs
mov
cld
lcall
nop
rorb
mov
imul
and
jnp
stc
insl
inc
dec
call
mov
lret
or
mov
mov
fisttpl
mov
test
cmp
sub
xchg
neg
xor
pushl
mov
icebp
sub
inc
ds
jecxz
sub
xchg
mov
xor
mov
test
imul
jmp
xchg
gs
fisttps
sub
mov
int3
arpl
mov
orb
cmpsb
imul
push
mov
jge
dec
lret
movsb
repnz
sbbb
xor
mov
iret
lahf
sahf
hlt
in
pop
js
push
inc
pop
mov
stos
mov
cmp
sub
test
and
jg
ljmp
push
xchg
jae
js,pn
test
rorb
lcall
stos
cli
ljmp
add
pop
mov
or
jbe
dec
jp
xor
ljmp
adc
fcmove
inc
cmc
dec
xchg
and
loop
fwait
xchg
add
cli
test
data16
nop
adc
pcmpeqd
xor
into
xor
jne
add
push
sar
pushl
adc
repnz
popf
stc
and
stos
cmp
xchg
and
jl
xchg
sub
push
int3
and
jg
jne
xchg
xchg
inc
jl
jg
repz
bswap
fisubrs
imul
sbb
dec
cli
leave
in
push
pop
lahf
add
push
cwtl
inc
or
stos
jno
loope
xor
mov
mov
xchg
add
in
cmpsb
loop
or
pushl
sub
inc
xchg
and
or
pushf
ja
xchg
std
xor
rolb
les
pushl
std
rcll
cmpsl
mov
loopne
mov
repz
xchg
mov
mov
mov
clc
insl
aam
loopne
jbe
aam
dec
loope
ljmp
fdiv
test
ljmp
lds
negb
sbb
mov
outsb
sti
push
call
cmp
and
or
orl
sbb
mov
fiaddl
cmpb
addl
ljmp
loope
pop
sti
mov
hlt
ret
push
clc
inc
int3
stos
inc
mov
sahf
cmp
mov
pusha
das
ficompl
jae
clc
jmp
in
in
mov
push
aaa
daa
cmc
icebp
ljmp
arpl
pop
mov
sub
in
mov
sbb
leave
ret
or
incl
fs
mov
sub
and
negb
inc
pop
jb
sbb
fcoml
leave
sbb
push
pop
and
out
test
jns
imul
cmp
dec
sbb
arpl
loop
mov
test
lods
pop
jl
mov
icebp
jmp
and
pop
inc
or
outsb
push
add
inc
repnz
in
in
inc
lds
test
mov
mov
hlt
inc
jg
int3
mov
push
aaa
dec
outsl
and
sub
repnz
xchg
lcall
lcall
pop
mov
or
hlt
cmp
push
sub
mov
mov
fistl
pusha
push
movsb
sar
adc
loope
popa
fsts
dec
mov
mov
test
pop
loopne
sub
mov
fwait
mov
stc
pop
push
inc
dec
jne
decl
sbb
std
dec
push
lock
xor
jns
add
adc
outsb
mov
dec
jg
mov
cmp
push
add
push
aas
sub
incl
jecxz
dec
pusha
filds
stos
push
cli
inc
ljmp
out
cmpsb
xor
mov
loope
fdivl
and
and
cmpsb
gs
outsl
cmp
pushl
call
aad
addb
pushf
cmp
out
add
lcall
pop
mov
sbbb
out
xchg
push
sbb
cmp
loope
cltd
repz
push
arpl
pushl
add
dec
xor
dec
aam
jle
insl
sub
mov
lock
sbb
js
int3
mov
and
push
clc
push
out
adc
jle
sub
pop
xchg
push
rorb
fsubrs
in
inc
call
pop
repnz
cltd
lock
loopne
aad
sub
inc
lret
popl
sub
cmpsb
les
push
fsubrl
nop
and
add
mov
push
pop
adc
and
dec
add
push
and
adc
cmp
push
and
cwtl
mov
xor
or
inc
inc
inc
mov
sub
add
pop
jp
jge
cltd
cmp
and
enter
and
and
push
xchg
ss
jo
iret
les
or
fdivl
cmpsb
push
and
mov
sbb
pop
xor
dec
mov
xchg
movsb
je
test
ret
xorl
ljmp
int3
sub
movsb
or
xorl
or
add
dec
sub
pop
ss
xor
clc
bound
cld
les
jle
adc
mov
and
pop
add
inc
pop
and
mov
outsb
or
bound
mov
loopne
fimull
cltd
jge
dec
sbb
xchg
flds
add
jo
cmpb
decb
lcall
pusha
xor
jle
rcrl
push
rcr
cmpsb
adc
in
pusha
data16
push
ds
lret
shlb
sbb
loopne
sbb
jle
fadds
add
xchg
xchg
sub
flds
insb
aam
cli
fldenv
jle
dec
dec
test
adc
inc
mov
test
mov
and
xchg
mov
clc
and
mov
andb
push
and
sub
cltd
cltd
mov
lods
and
mov
adc
data16
clc
adc
inc
dec
jmp
fsub
cltd
out
bound
repnz
and
lcall
mov
dec
data16
adc
dec
xor
fs
out
or
mov
mov
lods
add
andl
aaa
test
or
loopne
sbb
fisubl
into
and
mov
ss
mov
cmp
jle
mov
add
jge
mov
add
jb
cmp
adc
mov
test
sub
inc
pop
mov
pop
mov
xchg
inc
sahf
mov
rolb
and
cwtl
add
push
in
push
or
mov
or
sub
in
jno
add
push
and
adc
cmp
xorb
or
cwtl
inc
pusha
in
pusha
and
add
adc
mov
inc
mov
imul
pop
push
sbb
nop
push
push
add
dec
fidivrl
int3
dec
popa
test
je
adc
pop
mov
cwtl
jl
and
mov
xchg
inc
jo
or
push
fisubs
ret
dec
inc
fsubl
sub
int3
xor
pop
mov
push
inc
fs
and
mov
into
xchg
push
cmpsb
js
pusha
imul
xor
data16
dec
xchg
dec
cltd
test
data16
and
push
mov
ret
dec
js
lods
inc
mov
inc
sbb
fildl
inc
and
sarb
cwtl
in
pop
aam
pop
inc
ds
pusha
and
sub
jp
movsb
and
and
out
sub
imul
push
xchg
adc
insb
lock
add
jbe
rcl
popf
lods
adc
cwtl
dec
or
push
jo
cmp
in
inc
les
data16
push
sbb
cli
je
jle
int3
or
hlt
lods
sbb
add
xchg
or
sub
xchg
aam
mov
cwtl
leave
push
ja
cmp
inc
rorb
int
mov
cmp
in
xor
mov
mov
push
add
sub
adc
or
clc
test
sbb
push
je
fwait
xor
jae
nop
xchg
and
nop
jo
and
fstpt
jo
inc
popa
outsl
push
dec
clc
outsb
arpl
inc
fmuls
popa
imul
mov
jne
push
gs
gs
xor
gs
outsl
fs
gs
inc
or
and
imul
inc
sti
ss
xor
outsb
and
gs
jbe
mov
sbb
je
cltd
pop
dec
popa
neg
mov
je
jb
out
outsb
outsw
dec
push
movsl
lret
fiadds
outsl
jb
sub
and
insb
pop
and
jo
js
inc
pusha
push
rcr
adc
xor
push
popa
imul
outsb
mov
fidivs
inc
jae
inc
lahf
imul
dec
scas
popa
insb
push
imul
scas
outsb
push
je
dec
push
loop
outsl
insl
insl
mov
mov
inc
fdivl
ljmp
fs
push
pusha
push
add
or
cmp
xor
notl
cld
sbb
cmpb
inc
pusha
popa
dec
mov
outsl
popa
fs
pusha
or
jnp
gs
imul
mov
push
push
or
cmpsl
pop
inc
orb
xor
jo
pop
jo
inc
push
inc
fs
push
inc
addl
andl
mov
jne
inc
and
insl
sub
addr16
jp
ljmp
mov
push
add
xor
and
pusha
jmp
outsl
loopne
bswap
cli
sti
lcall
daa
int
add
and
pop
and
mov
push
pop
add
inc
sbb
insb
sbb
sbb
iret
dec
adc
adc
addb
mov
fmuls
repnz
call
add
jb
sbb
add
mov
add
push
jb
notl
dec
iret
data16
inc
inc
cs
xor
inc
lcall
fs
lahf
out
dec
dec
jmp
add
push
rcll
rolb
jo
andb
add
xor
stos
mulb
in
loopne
test
jno
and
jae
dec
pop
dec
leave
cmpsl
pusha
es
mov
je
inc
mov
dec
pop
jns
dec
add
lods
add
sbb
aas
aaa
xchg
subl
xchg
and
add
add
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
xor
add
add
sbbb
add
inc
add
sbbb
add
addb
add
adc
cld
add
add
add
cmp
add
or
add
xor
add
pop
add
cmp
add
addb
xor
add
test
add
rolb
add
clc
add
xor
add
and
add
dec
add
xor
add
jo
add
cwtl
add
xor
add
rolb
sub
add
call
add
add
add
sub
add
cmp
add
pusha
add
sub
add
mov
add
mov
add
fadds
add
add
add
or
add
add
add
hlt
add
call
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
mov
add
or
add
add
mov
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
call
add
add
add
add
add
add
sbb
add
or
add
add
or
add
call
add
add
add
add
xor
call
add
add
add
add
cmp
add
or
add
add
add
add
call
add
add
add
add
add
add
add
mov
add
or
add
add
add
addb
add
add
add
or
add
add
test
add
rolb
add
or
add
add
js
add
push
add
add
add
add
mov
add
or
add
add
add
add
call
add
add
add
add
add
add
add
call
add
add
add
add
add
addb
add
or
add
add
add
and
add
add
add
add
add
add
pop
add
addb
add
or
add
add
add
add
push
add
add
add
add
add
add
add
add
add
add
faddl
or
add
cmp
add
enter
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sub
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
add
add
add
xor
xor
xor
cmp
xor
xor
inc
add
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
dec
add
add
insl
add
dec
add
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
inc
add
outsb
add
add
imul
jae
and
inc
add
jb
je
add
add
sub
add
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
jne
outsb
add
and
push
add
bound
jae
and
inc
add
data16
jb
add
pusha
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
dec
add
ja
and
push
add
outsl
add
and
push
add
outsb
add
and
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
inc
add
je
jae
jns
add
js
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
inc
add
insb
add
add
push
add
and
inc
add
imul
add
sub
add
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
sub
add
add
add
add
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
add
push
dec
inc
dec
xor
cs
dec
dec
add
insl
arpl
xor
fs
insb
add
insl
fs
xor
cs
insb
add
popa
addr16
insb
insb
add
jb
imul
add
outsb
je
jne
je
fs
insb
add
dec
outsl
popa
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
insl
inc
insb
addr16
js
outsb
fs
jb
outsl
jb
add
popa
addr16
outsb
insb
outsl
popa
add
add
jb
jne
jb
push
popa
insb
jne
push
add
inc
jb
jo
inc
inc
push
inc
fs
imul
jb
inc
outsl
outsb
je
js
