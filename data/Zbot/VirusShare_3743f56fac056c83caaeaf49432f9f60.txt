stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
pop
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
mov
pop
ret
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
shlb
pop
add
call
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
out
inc
and
push
pop
sub
mov
mov
shl
xor
sub
mov
mov
movl
mov
sub
je
sub
lea
mov
sub
je
mov
sub
ja
push
pop
je
popf
push
pushl
decl
ret
arpl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
pushl
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
push
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
add
push
pop
sub
push
push
lea
push
lea
push
addl
lea
push
lea
push
pushl
decl
mov
add
call
add
lea
sub
sub
mov
pop
mov
mov
lea
mov
push
mov
xorl
pop
sub
or
xor
add
cmp
je
add
mov
push
push
push
pop
push
pop
stos
shr
stos
shr
stos
shr
stos
pop
pop
subl
neg
clc
sbb
pushl
lea
lea
pop
repz
jmp
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
call
add
pop
mov
pop
ret
add
in
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
push
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
pushl
pushl
call
add
pop
mov
pop
ret
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
push
push
call
add
pop
mov
pop
ret
add
in
sub
push
push
push
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
push
push
push
call
add
pop
mov
pop
ret
push
mov
sub
push
push
push
pushl
call
add
pop
mov
pop
ret
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
push
mov
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
pushl
push
pushl
call
add
pop
mov
pop
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
mov
pop
ret
inc
and
add
and
add
add
and
add
mov
and
add
and
add
add
mov
and
add
and
add
and
add
add
fsubs
add
clc
and
add
and
add
add
cld
and
add
and
add
add
add
and
add
and
add
add
lret
add
and
add
add
jb
add
add
add
and
add
add
add
and
add
and
add
add
push
and
add
add
add
add
add
add
adc
add
cmp
add
add
add
push
add
add
add
add
and
add
add
mov
add
add
add
add
add
nop
and
add
add
add
add
jle
add
movsb
and
add
add
and
add
add
and
add
mov
and
add
and
add
add
mov
and
add
and
add
and
add
add
fsubs
add
clc
and
add
and
add
add
cld
and
add
and
add
add
add
and
add
and
add
add
lret
add
and
add
add
jb
add
add
add
and
add
add
add
and
add
and
add
add
push
and
add
add
add
add
add
add
aad
inc
imul
add
gs
popa
jae
inc
jb
outsl
jb
add
add
outsl
bound
dec
outsl
arpl
add
add
imul
outsb
je
outsl
insb
add
add
gs
outsl
jbe
inc
imul
jns
add
call
inc
imul
bound
gs
add
repnz
imul
jb
je
arpl
add
push
add
outsl
jae
dec
popa
outsb
fs
add
inc
gs
je
imul
inc
add
movsl
add
je
gs
imul
cmp
push
jb
jbe
je
push
jb
imul
inc
add
je
inc
jbe
outsb
je
add
aas
add
je
jb
jbe
je
push
jb
imul
je
outsl
outsb
inc
add
add
je
jne
jb
outsb
je
jb
arpl
jae
and
gs
outsl
insl
insl
inc
jb
popa
imul
dec
add
popa
insb
inc
insb
popa
addr16
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
roll
dec
gs
jo
jb
add
xchg
add
je
jne
jb
outsb
je
push
add
call
inc
imul
bound
gs
add
addl
jb
popa
je
inc
imul
jns
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
das
push
inc
insb
outsl
jae
inc
gs
je
jo
add
push
gs
outsl
arpl
add
into
pop
dec
outsl
popa
fs
jne
jae
jb
add
imul
jae
popa
addr16
add
movl
outsl
insl
gs
sbb
ja
jo
imul
pop
dec
jae
imul
pop
or
jae
dec
gs
popa
addr16
add
jae
push
gs
jne
jae
jb
outsl
jae
add
push
imul
js
push
add
mov
inc
imul
dec
gs
popa
addr16
add
jnp
inc
gs
imul
outsb
addr16
add
xchg
push
push
gs
jae
addr16
add
push
push
inc
push
xor
cs
insb
add
add
inc
fs
jae
inc
jns
popa
insl
gs
add
add
je
gs
imul
inc
gs
popa
insl
gs
jns
jns
gs
add
sbb
addr16
gs
jns
popa
insl
add
dec
push
push
push
dec
inc
dec
cs
insb
add
dec
jae
popa
je
push
push
inc
add
push
dec
push
push
dec
cs
insb
add
loop
movsb
jge
movsl
or
dec
jo
pusha
mov
les
sarl
pop
dec
call
cmp
mov
mov
xor
outsl
push
sarl
out
addr16
stc
loop
mov
add
lcall
inc
insb
test
pushf
push
test
xor
enter
scas
cli
push
xchg
sub
adc
mov
add
daa
xchg
int3
mov
mov
gs
push
mov
sbb
mov
lods
daa
pop
addl
jle
call
lret
fdivl
mov
and
jp
dec
ret
jl
in
addr16
test
pop
mov
mov
out
xlat
in
pushf
bound
js
push
cld
pop
andl
pop
aas
pop
jb
add
cltd
pop
repnz
aad
or
jmp
xor
dec
dec
loopne
movsb
aaa
jl
cmp
insb
in
js
pop
movsl
adc
leave
mov
pop
fimull
xor
sub
sbb
push
ret
jno
out
mov
jne
lods
test
fdivrp
cwtl
mov
push
push
xor
in
fcompl
xchg
imul
adc
inc
ret
mov
mov
pop
mov
jle
mov
fisubrl
enter
idivb
push
and
hlt
shr
jmp
popa
ror
ret
icebp
cli
add
fdivrs
and
jb
or
dec
push
jle
and
mov
add
sahf
or
mov
arpl
insb
mov
mov
lods
xor
sti
pushf
mov
add
fnsave
and
mov
push
mov
repz
dec
pop
bound
jg
sub
mov
dec
sub
lea
or
add
add
add
add
xor
add
add
add
jo
add
jo
add
add
add
add
add
mov
add
mov
add
add
add
add
add
add
add
addb
add
hlt
add
add
add
addb
add
or
add
add
add
or
add
adc
add
or
add
and
add
or
add
add
add
add
add
add
add
add
push
popa
add
test
add
clc
xchg
add
add
add
add
add
or
add
mov
add
sub
add
xor
add
sub
add
xor
add
pusha
add
add
add
add
add
add
add
add
push
sub
sub
xchg
xchg
xchg
add
scas
scas
scas
xor
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
stos
mov
mov
fwait
pop
xchg
xchg
xchg
or
jg
jnp
jl
lods
stos
lods
add
test
push
mov
mov
mov
lret
into
int3
into
rcl
in
rcl
shl
rcl
shl
int3
int
hlt
mov
leave
out
in
mov
mov
lods
stos
lods
lea
lcall
add
add
add
add
add
add
add
add
add
add
add
add
mov
sahf
add
mov
jae
mov
leave
lret
not
rcl
cld
fcomp
std
xlat
fcom
xlat
xlat
fdivr
dec
iret
sar
int3
int3
int3
aam
aam
rcl
sar
ret
ret
mov
mov
scas
iret
mov
mov
and
add
push
add
add
add
add
add
add
add
add
stos
stos
lods
add
scas
scas
sbb
mov
jnp
mov
sar
leave
leave
lret
rcl
aad
aam
fcom
xlat
fcom
xlat
call
aad
int3
into
into
dec
int3
into
call
aam
into
int3
int3
inc
mov
mov
ljmp
cmpsl
cmpsb
ljmp
pop
or
or
add
aaa
add
add
add
pop
add
add
add
add
add
add
push
pop
push
add
inc
add
push
add
push
or
inc
or
sbb
push
add
add
add
or
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
enter
int3
int
rcl
sar
xlat
xlat
fdivr
xlat
fdivr
aam
dec
int3
int
lret
lret
lret
int
inc
inc
sarl
mov
mov
cmpsl
cmpsl
test
mov
fwait
fwait
jmp
and
and
add
inc
add
add
add
add
add
and
add
push
add
add
add
add
pop
pop
pop
add
bound
imul
bound
pop
fs
sbb
push
movntps
ss
cmp
cmp
adc
add
add
add
add
arpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
enter
rcl
iret
call
aam
aam
call
ror
inc
enter
ret
ret
mov
mov
ljmp
mov
popf
xchg
xchg
xchg
lcall
test
pop
add
add
add
cmp
add
das
add
add
add
add
add
adc
add
or
add
push
add
outsl
xor
jl
jg
jg
jno
jno
bound
mov
cmp
inc
mov
jo
outsl
nop
popa
bound
inc
inc
inc
xor
add
add
add
add
mov
mov
inc
mov
mov
mov
mov
mov
mov
mov
dec
enter
lret
lret
lret
leave
inc
leave
inc
ret
mov
mov
ljmp
movsl
mov
call
xchg
xchg
xchg
xchg
lcall
lahf
cmp
or
add
add
add
add
add
add
add
add
add
add
add
jo
outsb
add
pop
or
pusha
xchg
mov
xchg
xchg
xchg
incb
jl
idivb
jl
outsb
jo
out
addr16
jne
jae
jge
jle
jns
js
arpl
inc
inc
inc
cmp
sbb
sbb
movups
lods
lods
stos
test
mov
sti
mov
mov
mov
mov
mov
mov
mov
mov
cmpsl
cmpsb
cmpsb
lcall
nop
xchg
incl
test
xchg
xchg
xchg
lahf
sahf
lahf
sti
mov
cwtl
cwtl
mov
js
js
xor
das
das
add
add
add
add
add
add
add
add
add
add
mov
push
push
test
sahf
in
mov
incl
mov
std
xchg
jge
jb
jno
je
je
jge
jge
addb
xchg
addr16
cmp
ss
jg
cmp
movsl
movsl
movsb
shrb
lods
stos
sti
stos
lods
lods
lods
stos
lods
test
test
std
fwait
fwait
fwait
xchg
xchg
xchg
decl
jge
jp
jns
jl
jnp
mov
cwtl
mov
mov
sti
mov
mov
mov
mov
mov
lods
lods
stos
xchg
sbb
or
add
add
add
add
add
add
push
pop
adc
movsb
cmpsb
out
scas
mov
xchg
xchg
xchg
incl
xchg
mov
std
xchg
xchg
xchg
stc
xchg
xchg
xchg
in
mov
enter
int
mov
mov
pop
push
push
or
inc
inc
dec
imul
xchg
leave
cltd
fistps
cltd
stc
xchg
std
mov
mov
mov
mov
mov
lcall
scas
scas
mov
mov
mov
mov
mov
std
mov
mov
movsl
mov
jp
scas
test
add
pop
adc
lods
call
fwait
xchg
cltd
incl
test
decb
xchg
xchg
sahf
sahf
sahf
std
movsb
movsb
movsb
stc
mov
xchg
xchg
in
nop
in
xchg
push
jne
or
add
inc
sub
es
dec
dec
dec
data16
jb
mov
xchg
rclb
xchg
std
mov
xchg
call
sahf
mov
ljmp
scas
pushl
lahf
mov
mov
xchg
mov
mov
ljmp
mov
add
pop
pop
adc
scas
mov
les
fwait
decl
mov
call
nop
nop
xchg
xchg
xchg
pushf
popf
sahf
mov
test
movsb
notl
jp
movsl
push
push
push
outsl
dec
dec
dec
pushaw
bound
jb
je
jp
jg
orl
int
xchg
xchg
in
nop
xchg
testl
mov
jmp
mov
mov
pop
mov
mov
aaa
jg
mov
ja
mov
movsb
mov
mov
mov
mov
movsb
movsb
add
mov
add
pop
adc
mov
ljmp
pushf
decl
nop
call
xchg
xchg
call
cwtl
cwtl
cltd
lcall
lahf
lahf
mov
std
mov
lcall
mov
xchg
aad
cltd
lcall
xchg
cmc
mov
nop
cld
xchg
adcl
mov
push
jle
lods
inc
jge
mov
jp
mov
jb
mov
insl
ljmp
adc
stos
or
or
mov
jg
mov
mov
lods
pushf
movsb
mov
movsl
add
mov
add
pop
adc
mov
ljmp
lahf
call
xchg
xchg
lcall
pushf
popf
lcall
popf
popf
lcall
xchg
xchg
decl
xchg
xchg
call
xchg
lcall
fwait
lahf
stc
sahf
xchg
popf
cld
pushf
mov
xchg
push
xchg
pop
jle
cwtl
dec
js
lcall
sahf
push
addr16
mov
adc
jmp
adc
lods
pcmpgtd
lods
pcmpgtw
lods
adc
mov
push
mov
imul
adc
mov
lcall
lods
scas
lods
scas
mov
movsl
movsb
add
add
add
add
add
pop
pop
adc
mov
les
sahf
call
sahf
lcall
movsl
movsb
jmp
mov
xchg
decl
mov
decl
jbe
lcall
xchg
dec
jns
xchg
cmp
imul
sbb
pop
decl
push
pop
call
add
lahf
push
pop
ljmp
sbb
mov
outsb
pushl
outsb
mov
and
mov
pop
jbe
sarb
inc
xchg
lods
mov
scas
scas
mov
sahf
mov
movsb
add
pop
pop
adc
lods
mov
mov
cwtl
pushf
lcall
mov
cmpsl
jmp
stos
test
test
cmpsl
lcall
mov
mov
mov
decl
sub
mov
decl
or
incl
add
mov
push
decl
push
call
add
lahf
add
or
pushl
sub
mov
sub
mov
sub
lds
jle
cs
leave
inc
mov
lea
cld
scas
mov
lret
mov
add
add
add
add
add
push
push
adc
test
ljmp
popf
jmp
test
stos
ljmp
mov
scas
scas
scas
jmp
mov
mov
push
incl
pop
push
incl
add
test
push
incl
push
decl
add
xchg
add
fwait
add
sahf
add
movsl
add
lods
adc
mov
ss
cmp
dec
cmp
call
cmp
call
cmp
xchg
dec
mov
std
mov
mov
movsl
movsb
mov
add
mov
add
add
add
mov
dec
dec
adc
mov
mov
lahf
cltd
sahf
jmp
scas
scas
pushl
mov
pushl
mov
ljmp
mov
mov
arpl
mov
push
decl
push
push
decl
or
test
decl
add
add
xchg
add
pushf
add
mov
add
lods
add
pushl
cmp
dec
inc
call
inc
mov
rolb
call
dec
xchg
call
dec
xchg
fimull
fmull
ficoml
call
test
std
mov
mov
movsb
movsl
movsl
arpl
mov
add
add
add
fwait
xchg
lcall
jns
jl
lahf
mov
jmp
test
mov
mov
mov
mov
mov
mov
mov
mov
scas
mov
movsl
mov
decl
sbb
pop
popa
decl
adc
pop
push
decl
add
xchg
add
sahf
add
mov
add
stos
add
mov
arpl
shll
call
push
cwtl
call
push
lcall
push
popf
jmp
push
popf
jmp
push
pushf
jmp
pop
lahf
jmp
pop
mov
fadds
mov
cmpsl
jne
sahf
sahf
or
xchg
xchg
xchg
add
inc
adc
ja
sahf
fwait
sahf
jmp
mov
lods
lods
pushl
mov
mov
mov
mov
ljmp
inc
jbe
nop
pop
arpl
xchg
and
xchg
and
call
sbb
nop
or
xchg
add
xchg
add
lcall
jmp
add
mov
data16
mov
xor
fisubs
fbld
in
cmpsl
jmp
data16
jmp
gs
jmp
push
mov
int3
mov
mov
mov
sahf
lahf
add
inc
inc
adc
jp
xchg
cltd
call
mov
lods
scas
pushl
mov
mov
mov
mov
ljmp
push
jle
xchg
sub
lcall
call
push
call
add
fwait
add
mov
add
lods
add
mov
pushw
adc
roll
fsubrl
jmp
jo
jmp
outsl
lods
jmp
jno
call
je
jmp
scas
in
jne
out
jbe
out
jb
jmp
mov
mov
cmpsb
cmpsl
lcall
lahf
add
jle
cmp
adc
outsb
js
mov
pushf
pushf
lcall
mov
mov
mov
mov
mov
movsl
scas
lcall
xor
mov
cmp
xor
lcall
call
add
add
add
mov
pushl
add
leave
sbb
fistl
jmp
jbe
ljmp
in
xorb
icebp
cmpl
hlt
test
push
cmpb
aam
inc
mov
test
daa
sahf
sahf
sahf
add
add
add
pop
add
ss
pop
pusha
pop
jne
jle
out
xchg
xchg
xchg
xchg
pushl
mov
mov
inc
rol
ret
ret
rol
pushl
outsb
mov
fwait
cmp
inc
jle
movsb
inc
jle
mov
sbb
xchg
add
sahf
add
movsl
add
stos
add
lods
add
add
mov
add
shll
cmp
mov
jmp
mov
push
sar
nop
sar
xchg
ret
xchg
ret
push
xchg
push
xchg
push
ret
in
mov
fidivl
ret
clc
lods
stos
stos
mov
popf
popf
xor
popf
pushf
add
add
add
inc
aas
add
xor
push
inc
dec
inc
jb
pop
dec
in
push
decl
mov
mov
mov
sar
ret
ret
inc
mov
jle
lcall
dec
jg
lods
dec
test
movsb
xor
punpcklbw
lcall
ljmp
add
mov
mov
add
enter
fdivs
jmp
jns
in
xchg
push
fwait
push
lcall
cmc
fwait
lret
fwait
leave
clc
sahf
int3
cli
sahf
int3
cli
sahf
int3
cld
lcall
fidivrs
cli
mov
mov
sahf
lahf
sahf
aas
xchg
xchg
nop
add
add
add
xor
outsb
dec
dec
dec
jecxz
pusha
popa
call
mov
mov
mov
sar
ret
inc
inc
mov
mov
ljmp
push
xchg
movsb
sub
lcall
jmp
add
mov
mov
add
movl
je
filds
out
mov
push
movsb
int3
push
cmpsb
int
stc
cmpsl
int
cld
test
iret
sti
cmpsl
sar
stos
sar
cld
test
sar
cmc
popf
mov
dec
lret
mov
mov
sahf
lahf
mov
add
fwait
fwait
add
add
add
xor
sub
inc
inc
inc
bound
push
xlat
jne
jo
mov
mov
ret
mov
ret
ret
ret
ret
mov
mov
pushl
push
xchg
scas
push
mov
lods
dec
test
lahf
sbb
pushf
add
jmp
add
mov
mov
add
int3
add
fadds
jb
ficoms
jge
in
pop
cmpsl
push
popf
lret
lods
sar
cld
mov
cli
mov
sti
mov
std
mov
cld
mov
mov
std
mov
std
mov
cld
mov
push
movsl
mov
call
enter
mov
ficompl
xchg
xchg
or
add
add
xor
push
add
dec
dec
ss
outsl
mov
fcom
jmp
xlat
xlat
not
rcl
std
lret
dec
lret
lret
dec
leave
leave
inc
leave
mov
scas
jmp
push
mov
lods
jle,pt
mov
add
stos
add
mov
mov
add
rolb
outsb
call
add
loopne
jne
jmp
jae
cld
lods
aam
cld
mov
cld
mov
fdivr
std
mov
mov
fdivr
std
rcr
std
mov
lret
jmp
mov
call
leave
int3
mov
mov
xchg
or
add
add
xor
add
add
pop
or
mov
pop
call
out
test
in
leave
fucom
fsub
fcmovu
fdivr
std
int
into
mov
push
ljmp
sub
mov
add
mov
popa
mov
add
lret
add
add
faddl
ja
in
js
in
das
xchg
push
mov
cli
mov
loope
inc
loope
std
loop
std
fdivrp
std
loopne
dec
dec
fdivrp
dec
fdivrp
dec
std
lret
cli
mov
enter
sar
mov
mov
xchg
adc
add
add
std
incl
std
std
incb
std
incb
repnz
or
out
jmp
in
out
out
sub
out
out
dec
call
jmp
call
aad
fcmovnu
jmp
mov
xchg
test
js
movsl
adc
jmp
add
mov
arpl
mov
add
int
insl
call
add
loopne
js
jmp
inc
fwait
cld
mov
in
dec
loop
std
int3
in
dec
jecxz
dec
jecxz
std
int3
jecxz
dec
loopne
call
in
shl
std
shl
std
shl
cld
in
mov
inc
ret
ret
cmpsl
cmpsl
mov
cwtl
cwtl
add
add
add
std
incl
std
incl
idiv
testl
icebp
repz
push
in
repnz
out
lock
cmp
in
in
pop
fsubp
loop
mov
xchg
sti
sahf
es
pop
pop
jmp
pop
pushl
add
movl
jo
flds
jne
in
jnp
jmp
jle
cmc
pop
stos
cld
mov
cld
iret
out
cld
shl
std
shr
std
shl
shl
std
aam
fsubr
fsubr
std
fldl2t
fldl2e
fld1
shl
push
ret
in
lret
leave
leave
repz
test
xchg
xchg
xchg
and
cwtl
cwtl
add
std
cld
add
std
testl
hlt
div
or
aam
xor
jae
negb
add
cmpsl
add
scas
add
mov
add
lret
add
roll
jno
fildl
jbe
out
jns
in
sbb
clc
jbe
cld
loopne
cld
fldl2e
std
fucomi
std
fldpi
fucomi
std
fsubr
fucomi
fucomp
fucomip
jmp
in
std
fucomip
shl
push
aad
out
fdivr
rcl
iret
clc
stos
lods
stos
lods
xchg
xchg
xchg
outsb
outsb
outsb
add
add
mov
loope
add
mov
xchg
repnz
and
sahf
add
add
mov
arpl
mov
add
int
insl
call
add
filds
je
jmp
sub
cld
aam
fdivp
fucomp
fldpi
fucomi
fsubr
cld
in
std
aam
cli
shl
cld
shl
clc
int
push
lret
test
out
mov
fcos
xlat
fdivr
mov
mov
fwait
cltd
cltd
cmp
cltd
add
xlat
add
leave
adc
scas
mov
jmp
add
mov
fs
mov
add
roll
outsb
call
add
loopne
jns
ljmp
cld
xchg
sti
enter
lret
loop
cld
stc
rcl
idivl
push
mov
sar
in
mov
int
jmp
ret
jmp
call
fsubp
in
mov
mov
xchg
add
add
add
into
int3
add
rol
mov
cmpsb
loopne
xor
jmp
add
mov
data16
mov
add
int3
or
rorl
je
ficoml
js
loope
cmp
inc
xchg
ljmp
jmp
scas
enter
cld
fbstp
neg
mov
leave
ljmp
into
rcl
shl
aad
out
loop
jmp
jmp
popf
ljmp
push
stos
lods
lods
adc
test
cmpsb
add
ret
roll
ret
mov
popf
stos
aam
dec
cmp
cmpsl
sbb
jb
mov
js
mov
inc
xchg
ret
push
mov
leave
fs
test
mov
out
mov
mov
lret
ret
int3
rcl
int3
mov
int
mov
xlat
rcl
jg
jb
loopne
gs
in
out
call
xor
cmc
div
and
icebp
repnz
or
mov
int3
add
add
add
sarl
mov
xchg
stos
je
ljmp
mov
sarb
stos
mov
ret
cmpsl
mov
enter
lret
jp
int3
shlb
iret
rcll
rcl
dec
aam
xlat
inc
rcl
xor
fcmovnu
daa
fcomp
ficompl
fcmovu
ficoms
fsub
loope
loope
jecxz
out
jmp
in
icebp
in
add
cld
testl
incb
incb
mov
mov
mov
mov
stos
mov
mov
mov
mov
mov
ret
mov
rol
xor
into
leave
daa
int3
ror
and
rcrl
iret
rclb
rcl
rorb
aam
aam
rcr
add
fstp
add
add
jecxz
add
in
jmp
lret
fcom
add
incb
mov
mov
add
ret
ret
sub
ret
les
mov
mov
push
rol
or
enter
enter
into
leave
add
aam
add
add
xlat
add
fcom
add
aad
add
fsub
add
flds
loopne
loop
fiadds
in
call
add
std
incl
incl
clc
add
incl
add
jmp
add
sldt
inc
add
add
add
inc
add
add
add
jo
add
add
add
add
add
add
add
add
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
sldt
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
pop
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
loopne
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
add
add
clc
add
jg
add
cld
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
and
add
add
adcb
add
mov
and
mov
sarb
ret
mov
les
mov
mov
ja
stos
test
test
xchg
xchg
pop
add
add
add
add
add
add
mov
scas
adc
mov
enter
iret
jmp
rcl
cmc
rcl
aam
ror
into
cli
lret
int3
lret
stc
int3
int3
lret
hlt
mov
mov
iret
lods
lods
stos
fwait
xchg
xchg
xchg
dec
cmp
add
sbb
add
adc
add
push
add
add
addl
push
add
add
add
add
add
add
add
add
add
mov
inc
mov
rol
enter
ror
iret
aad
call
aad
call
ror
dec
iret
int
lret
inc
sarb
stos
lods
stos
icebp
cwtl
xchg
xchg
mov
or
or
add
add
add
add
add
add
add
add
add
add
je
je
je
je
gs
dec
dec
dec
cmp
sub
sub
aaa
aaa
xor
dec
sub
inc
adc
sub
push
add
add
mov
mov
mov
mov
mov
mov
ret
dec
lret
int3
call
rcl
call
rcl
dec
lret
mov
sar
mov
ljmp
popf
lahf
xchg
cwtl
xchg
jmp
outsl
jo
adc
add
xor
add
add
add
add
cmpl
test
jnp
push
push
pop
pop
pop
movsb
push
push
push
stos
imul
push
pop
pop
cmp
aaa
cmp
jno
jno
scas
scas
scas
pop
mov
mov
mov
mov
sar
mov
mov
ljmp
pushf
fwait
call
xchg
fwait
lcall
dec
dec
dec
dec
adc
adc
add
add
add
add
add
pop
fwait
lcall
popf
cwtl
cwtl
fcoml
addb
jnp
jnp
js
jp
jnp
jnp
jp
jp
jb
jb
push
push
push
cmp
je
popf
pushf
sahf
mov
lods
scas
rep
scas
scas
sti
scas
scas
scas
std
cmpsl
test
std
pushf
sahf
popf
call
test
call
mov
scas
jmp
scas
scas
leave
movsl
movsl
cmpsb
cltd
jae
jb
adc
adc
add
add
add
add
insl
outsl
insl
pop
lods
mov
sahf
incl
mov
sti
xchg
xchg
xchg
lock
nop
nop
fimuls
mov
jp
pop
and
inc
inc
dec
jo
outsl
orl
cltd
lcall
mov
call
lahf
ljmp
scas
std
mov
mov
stc
mov
mov
movsl
mov
jg
pusha
pop
popa
or
lods
mov
movsl
sahf
movsb
decl
lea
call
sahf
mov
negl
cmpb
push
push
jo
pop
push
outsl
insl
outsb
outsl
xchg
subb
xchg
lock
mov
lcall
fwait
pushl
outsl
xchg
mov
dec
mov
mov
mov
out
scas
lods
insl
stos
test
add
add
add
popa
pusha
popa
or
mov
in
mov
nop
call
xchg
xchg
call
cwtl
cltd
lcall
cli
xchg
xchg
xchg
jmp
xchg
mov
jecxz
orb
xchg
insb
test
xchg
pop
jg
popf
dec
jp
movsl
inc
js
lods
aaa
jbe
mov
jb
scas
push
outsb
pushl
sbb
mov
mov
scas
mov
mov
add
add
add
add
pop
or
mov
in
movsb
cmpsl
call
sahf
popf
jmp
mov
xchg
decl
addl
xchg
jno
cld
cwtl
popa
test
xchg
dec
jp
cmp
xchg
daa
push
lcall
or
push
pushl
sbb
mov
and
mov
stos
mov
lods
lods
scas
xchg
sahf
lahf
sahf
adc
add
add
pusha
pusha
popa
or
lods
mov
test
mov
cmpsl
ljmp
test
lcall
cmp
mov
arpl
mov
pop
decl
or
mov
pop
call
add
test
arpl
mov
jae
mov
sub
jge
xor
dec
pop
xchg
inc
stos
mov
mov
scas
movsb
test
add
add
add
add
pop
or
cmpsb
test
ljmp
mov
pushl
mov
jmp
inc
jb
mov
pop
decl
or
xchg
decl
add
xchg
add
lahf
add
movsl
add
mov
insl
inc
ss
inc
mov
into
inc
mov
rolb
call
inc
xchg
fmuls
call
bound
stc
mov
mov
movsb
mov
std
add
add
add
popa
or
popf
mov
ljmp
mov
pushl
mov
ljmp
jl
pop
call
pop
pop
decl
add
xchg
add
sahf
add
test
pop
ljmp
and
rorb
fstps
ficompl
fistps
loop
mov
fildll
int
mov
ret
movsl
xor
add
add
dec
pop
jl
jp
fwait
xchg
cltd
jecxz
sahf
mov
pushl
mov
mov
jmp
sub
imul
and
call
add
popf
add
cmpsb
add
scas
add
mov
imul
jmp
outsb
stos
jmp
outsl
stos
jmp
jo
out
jb
jmp
jp
call
cmpsl
mov
shll
cmpb
add
add
dec
pop
outsb
outsl
push
mov
xchg
ljmp
mov
mov
mov
je
lcall
cmp
sahf
sub
call
add
mov
add
mov
gs
or
xlat
dec
xchg
jmp
jp
jmp
mov
out
test
push
xchg
push
xchg
mov
cmpsl
test
fwait
fwait
cltd
add
sub
sub
push
push
dec
pop
pushw
loopne
mov
mov
mov
ret
mov
popf
jmp
inc
jg
mov
push
pop
jmp
add
mov
arpl
mov
push
jne
loopne
mov
push
xchg
push
cltd
push
cwtl
enter
enter
lret
push
xchg
jmp
stos
inc
mov
stos
popa
mov
add
add
xor
add
pop
pop
pop
fisttpl
mov
mov
ret
ret
ret
inc
ret
pushl
push
mov
lods
dec
cmp
pop
push
sahf
add
ljmp
add
mov
add
and
push
mov
sar
stc
test
cli
stos
sar
cld
stos
sar
std
lods
sar
stc
cmpsl
int3
jmp
mov
dec
rol
stos
test
pushf
or
add
add
push
dec
dec
aaa
jae
jae
stos
stos
stos
ror
int3
int
lret
into
int
lret
sti
lret
std
enter
mov
mov
stos
pusha
mov
lods
inc
jg
mov
add
mov
gs
add
into
add
fiaddl
xchg
push
xchg
sti
mov
mov
fcos
cld
mov
mov
sar
jmp
ret
mov
lods
mov
add
add
add
add
or
aad
dec
jecxz
fsubp
loope
fadd
fcmovnu
fcomp
out
shlb
test
push
popa
ljmp
add
enter
add
or
dec
mov
sti
ret
loope
std
dec
loopne
dec
loopne
dec
fdivrp
std
leave
loopne
cld
out
mov
leave
divb
pushf
sbb
add
add
std
add
incl
jmp
or
out
in
sbb
jmp
xor
loop
in
lds
mov
mov
add
pushl
add
into
add
fildl
jbe
call
insb
mov
std
fdivrp
sti
shl
shl
std
shl
call
out
std
out
std
fsubr
cld
shl
push
fcos
fcmovne
sar
mov
mov
add
incb
std
incl
cld
std
pop
aad
aam
mov
pop
xchg
lahf
or
pop
pushl
add
rolb
jno
loopne
ja
out
and
cld
shl
std
fldl2t
cld
xlat
call
xlat
out
sti
aam
push
xlat
aad
mov
sahf
lahf
das
add
add
int3
int
or
bound
ljmp
add
enter
roll
jb
loope
jns
out
das
nop
stc
fwait
stc
int3
loop
clc
lret
test
aad
repz
lock
sar
in
aam
in
aad
jmp
aam
in
fsubr
mov
stos
das
std
std
incl
aad
aad
mov
jb
push
gs
mov
insl
inc
sbb
int
jnp
cs
fists
clc
loop
mov
out
in
lret
jmp
fidivrs
lret
sarl
in
fcompl
out
out
jns
rcl
dec
mov
add
add
mov
inc
mov
mov
ljmp
xchg
fidivrl
jg
rol
stos
mov
mov
les
rol
int
ror
int
aam
rorb
cmp
loopne
das
in
fsubl
in
icebp
adc
in
jmp
fcmovnu
faddl
std
incl
std
incl
mov
mov
outsb
mov
lods
jns
mov
mov
mov
mov
xor
enter
aam
aam
sarb
or
loopne
or
int
add
std
std
add
incl
lcall
pextrw
or
int
int
stos
stos
stos
add
incb
add
add
push
add
push
add
shl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
aas
incl
ljmp
add
add
add
add
add
add
add
add
add
add
add
cltd
lcall
ret
enter
enter
enter
rol
mov
scas
scas
insb
stos
lods
stos
xor
or
add
push
add
add
add
add
add
add
add
add
add
add
lods
lods
stos
add
mov
jmp
aam
rcl
sar
iret
iret
int
stc
mov
test
jg
sbb
pop
add
add
add
add
add
add
add
add
jae
jb
push
inc
inc
das
cs
daa
inc
inc
inc
and
add
add
mov
mov
cmpl
dec
int
call
aam
dec
int
inc
enter
mov
scas
lcall
mov
push
add
add
add
add
je
jne
xchg
adc
jo
ret
arpl
outsb
outsl
insl
jb
popa
pusha
cmp
pop
sbb
mov
in
mov
mov
mov
lods
lods
lcall
xchg
xchg
lcall
cltd
cwtl
lds
jb
daa
es
pop
add
add
jae
jb
pushf
xchg
pushf
mov
test
mov
xchg
test
test
imul
mov
into
mov
mov
xchg
decb
lcall
cmpsl
lods
cld
mov
mov
mov
mov
xchg
xchg
xchg
aas
sub
sub
add
add
jg
jg
stos
movsb
test
test
test
mov
mov
xchg
xchg
xchg
cld
popf
sahf
sahf
cmc
cltd
cltd
lcall
push
push
imul
jge
lea
xchg
notl
mov
mov
cltd
mov
jno
mov
mov
stos
lods
lods
push
lods
lods
lods
add
add
add
cmpsl
scas
test
xchg
xchg
xchg
call
lcall
cwtl
cltd
lcall
mov
loope
jbe
out
xchg
bound
std
pushf
inc
ja
cmpsl
ss
scas
sub
mov
jo
mov
insl
pushl
popf
lods
lock
mov
imul
int3
add
xchg
pop
scas
cmpsb
lods
test
sahf
popf
sahf
jmp
movsb
movsb
call
jge
mov
xchg
inc
jae
lea
imul
sbb
pop
lcall
or
mov
outsl
pushl
and
inc
daa
jp
lds
inc
fwait
mov
mov
mov
stos
test
add
xorb
mov
mov
cmpsb
ljmp
scas
mov
lahf
xchg
decl
or
xchg
decl
add
mov
adc
shll
call
inc
mov
aad
call
dec
xchg
dec
cwtl
mov
mov
mov
movsb
movsl
mov
add
imul
cmpsb
mov
scas
pushl
mov
movsb
call
sbb
pop
decl
add
mov
add
mov
push
xchg
fistpl
fistps
jmp
popa
mov
call
pushf
mov
mov
mov
cmpsl
cmpsb
test
add
add
arpl
adc
pushf
fwait
pushf
cld
mov
mov
mov
mov
mov
popf
dec
jge
pushf
xor
cltd
and
xchg
pop
pop
lcall
add
mov
xor
jmp
outsb
stos
jmp
ja
jmp
mov
out
jle
out
jle
ficompl
mov
mov
add
add
adc
imul
mov
mov
mov
rol
mov
arpl
lcall
add
ljmp
add
or
fisttpl
out
mov
hlt
xchg
cwtl
leave
clc
xchg
jmp
movsl
inc
mov
movsl
sub
inc
aas
inc
adc
push
xchg
mov
mov
inc
inc
mov
cwtl
ljmp
sbb
movsb
add
mov
gs
add
aam
ja
in
insb
lods
clc
test
stc
stos
iret
sti
scas
sar
std
scas
sar
lods
sar
in
mov
inc
mov
movsl
ds
std
add
xor
jo
scas
mov
mov
aad
mov
aam
fnop
aam
out
leave
leave
lret
cli
mov
mov
jmp
add
add
aad
jae
out
test
testl
std
ret
inc
cld
ret
lock
ret
in
cmpsl
cmpsl
dec
jg
addb
add
add
in
in
or
jmp
out
outsb
fcmovu
fisubl
movsl
outsl
ljmp
add
lret
faddl
jbe
lock
cld
iret
in
shl
std
shl
aam
std
shl
push
fcos
aam
into
in
scas
scas
scas
popa
addl
add
std
std
incl
incb
int3
lret
shrl
sahf
sbb
stos
add
mov
add
loop
jns
cmc
push
cmpsl
std
loopne
cld
aad
cld
aad
std
aam
std
aad
cli
shl
push
leave
fdivr
fcmovne
shl
mov
mov
xchg
xchg
xchg
pop
ret
adc
mov
add
imul
push
jne
ficomps
jg
in
insb
stos
cld
out
mov
shl
ljmp
jmp
in
aam
jmp
fcmovnu
scas
ret
ret
les
fwait
fwait
add
rol
or
popf
lods
xchg
dec
and
ret
int3
lret
ja
mov
mov
lret
int3
outsl
fxch
into
pop
dec
in
loopne
call
in
in
sbb
rol
add
mov
cmp
mov
scas
push
mov
mov
ret
mov
les
ret
sbb
bswap
into
into
or
aad
std
incl
cmpb
std
incl
stos
std
std
add
mov
incl
std
incl
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
pop
incl
incl
incl
incl
incl
std
adc
xchg
sub
arpl
dec
mov
rcl
repz
rclb
icebp
mov
fidivs
push
cld
xchg
scas
mov
sbb
and
iret
push
pop
push
xchg
jae
cmc
movsb
mov
pop
in
jl
testl
lds
mov
jp
mov
add
inc
push
pop
mov
gs
xchg
mov
xor
call
or
cmp
adc
outsl
push
mov
lea
in
mov
push
add
jno
lret
xchg
icebp
mov
test
xsha256
cmpsb
push
std
push
popf
cmp
mov
mov
fsubrl
push
hlt
pusha
mull
inc
jle
js
movsl
cmp
cltd
pushf
xor
ret
pop
or
mov
js
inc
fsubrs
jge
xchg
scas
xchg
testb
out
stos
sbb
cmp
push
cmp
leave
push
pop
lock
mov
mov
bndstx
and
add
pop
test
ds
and
outsl
and
push
nop
inc
fcmove
jae
out
mov
sbb
dec
lods
jg
fists
mov
es
fldcw
mov
test
jmp
adc
aas
pushf
xor
push
lods
js
mov
lret
into
gs
xchg
out
push
out
mov
outsb
add
cmp
pop
mov
nop
pop
mov
push
mov
lahf
fnstsw
mov
int3
std
push
push
lds
stc
nop
shlb
dec
jecxz
adc
iret
inc
subb
fs
in
xchg
aad
pop
pop
mov
or
sub
sub
les
pop
mov
pop
dec
loope
mov
es
push
inc
xor
push
push
jmp
inc
movsb
cmp
jb
xchg
ret
notl
ja
dec
scas
insl
pusha
mov
ja
andl
push
clc
lahf
xchg
sub
sbb
mov
and
sti
xchg
mov
les
in
xor
mov
or
sub
jae
pop
sub
mov
dec
ffreep
or
mov
jecxz
std
adc
aaa
mov
add
mov
xor
xchg
sub
jbe
mov
mov
adc
in
inc
add
arpl
fsubr
orl
sub
lahf
pop
sti
jmp
sub
dec
or
add
stc
push
repz
fsubl
arpl
jbe
sahf
xor
leave
sbb
ss
cmp
stc
nop
hlt
nop
adc
stc
nop
adc
ss
scas
addr16
xor
or
ficoml
or
sub
mov
inc
in
es
into
gs
lods
inc
add
in
orl
mov
stos
ljmp
mov
std
push
inc
fldl
mov
inc
ret
stc
hlt
dec
mov
sbb
mov
ss
push
out
inc
cli
xchg
jae
fdivl
xchg
sbb
xchg
out
int
mov
scas
out
push
jmp
or
into
cmp
push
in
mov
nop
daa
shrd
fbstp
scas
inc
bound
xchg
sub
or
mov
mov
test
ljmp
sub
lahf
pop
cli
in
subl
mov
jle
inc
lahf
sub
push
icebp
inc
frstor
jae
sbb
lahf
ss
xchg
sbbb
sbb
aaa
sbb
jae
cmp
xchg
repnz
jae
adc
mov
loope
xchg
adc
into
xchg
xor
scas
push
mov
cmp
pop
inc
fimull
xchg
xor
sarl
mov
sub
rol
jns
pop
add
pop
xchg
insl
add
ret
hlt
mov
pop
jecxz
mov
push
jmp
xchg
shrl
ret
repz
repz
nop
sarl
xchg
das
js
pop
popl
lcall
jne
popf
cs
in
pop
mov
jbe
lds
int
push
pop
icebp
pop
mov
xchg
fbstp
and
push
call
scas
rcr
je
iret
in
std
sub
xor
int
push
jns
xor
iret
dec
in
ret
jecxz
cmc
sbb
push
inc
insb
push
lods
cltd
gs
xchg
mov
sbbb
adc
lret
rcrl
ja
cwtl
popa
fbstp
mov
std
xchg
in
ds
outsb
inc
mov
jne
cmc
mov
test
mov
and
stos
pop
push
daa
mov
add
je
dec
pop
push
in
mov
adc
lret
and
lods
inc
mov
jne
or
jo
dec
pop
shrl
cwtl
rcrl
mov
dec
dec
xor
test
sbb
or
jge
and
fisubl
es
dec
sub
jge
jns
rep
scas
inc
xchg
cs
dec
iret
data16
xchg
sub
lods
sub
scas
inc
push
mov
pop
scas
popa
cmp
push
rcrl
push
out
hlt
cmp
popf
xor
mov
cltd
xor
cmp
add
lds
clc
inc
mov
je
pop
mov
fwait
xor
dec
movsl
cmp
sbb
dec
stos
dec
in
fsubrl
push
inc
fiadds
and
adc
add
add
add
and
xchg
sub
sbb
sub
sti
test
sub
cmpsb
scas
rep
cmp
jns
mov
sub
out
cld
mov
fsubrl
jg
push
scas
or
mov
mov
leave
pusha
add
notb
mov
fs
outsb
jno
lahf
push
es
popl
cwtl
mov
outsb
dec
out
sbb
jl
fucomp
jg
push
out
xchg
xchg
sti
xchg
leave
jecxz
data16
jbe
add
xor
hlt
mov
pop
stc
nop
mov
push
cmp
iret
sbb
xchg
or
jne
sbb
mov
add
scas
push
call
xchg
icebp
pop
and
xor
into
in
jne
and
je
out
pop
sahf
sbb
adc
inc
and
mov
enter
push
ljmp
jp
xor
or
pushf
xor
push
aam
addb
push
xor
cld
sub
xor
xchg
mov
ss
dec
or
inc
fwait
aaa
into
shlb
add
icebp
push
in
es
xchg
sub
push
inc
xchg
scas
mov
fdiv
xchg
out
bound
mov
cltd
in
repnz
mov
loop
add
lahf
outsl
cmp
mov
loop
pop
fistpll
fsubrs
mov
push
jecxz
insl
and
mov
xor
in
popa
clc
and
popf
jnp
jecxz
cs
xchg
fdiv
shrl
inc
insl
jb
xor
sub
repz
icebp
jns
and
or
imul
jnp
aad
and
pop
cs
adc
es
sub
testl
dec
das
jl
fdivl
cmpsb
inc
xchg
sahf
xor
test
daa
mov
cmp
enter
lea
iret
adcl
out
pop
call
adcl
rcrb
scas
lea
cltd
jnp
add
gs
out
mov
and
sbb
jns
aaa
into
mov
fistpll
rorb
fsubrs
xor
dec
js
mov
fidivl
shrl
rolb
or
push
fidivs
ja
stos
movsb
jbe
rol
dec
mul
cmpsb
mov
dec
xor
lahf
gs
or
ret
xchg
lods
hlt
fnstenv
dec
dec
sub
xchg
xchg
cs
fisubrl
lds
bswap
gs
pop
testl
fcmovbe
les
std
inc
sub
jno
dec
stos
inc
addl
lock
or
adc
sub
mov
jge
ds
sahf
fsubr
iret
lret
sub
std
lock
and
fsubr
push
inc
push
and
mov
les
push
push
adc
testl
les
inc
ficoml
add
cmc
mov
data16
lea
scas
inc
loopne
inc
fmuls
push
xor
aaa
das
pop
negb
gs
sub
push
in
pop
out
aam
and
push
pop
push
xchg
stos
rorb
mov
cmpsl
sbb
dec
push
jns
nop
lods
iret
mov
je
push
push
lret
sti
leave
stc
nop
sti
sbb
jle
xor
lock
les
sbb
repnz
inc
lock
sub
cli
jl
insl
testl
xor
jle
or
mov
sti
push
sbb
mov
or
test
or
xchg
inc
mov
gs
movsl
jbe
mov
jbe
shrb
mov
stc
js
mov
dec
bound
add
repz
or
ds
and
jmp
xor
and
add
pop
xor
xchg
jne
leave
repz
mov
negb
mov
sbb
xchg
mov
gs
lahf
test
push
and
xchg
ret
int
cmpsl
mov
std
repnz
cltd
aam
js
xor
dec
cmp
fsubr
cmc
jbe
and
shll
lds
cld
push
mov
or
test
imul
scas
add
pushf
insb
dec
pop
mov
in
cmp
loop
xor
mov
jae
movsl
in
fstl
jg
dec
lahf
adc
push
mov
into
adcl
xchg
or
inc
je
sti
jle
lock
xor
jle
call
lahf
insl
adc
xor
imul
arpl
insl
inc
adc
loop
mov
mov
push
xchg
loope
ficoms
lea
in
sbb
rcl
push
mov
jbe
push
addr16
iret
sub
fisttpl
mov
mov
cmpsb
sbb
sub
int
cmp
popa
dec
sti
sar
jns
pop
movsl
int
push
jmp
push
inc
stos
and
stos
xor
xchg
dec
icebp
movsl
loope
mov
jbe
push
jne
loopne
lcall
sbb
or
nop
ds
sbb
mov
pop
push
test
pop
lods
cmpsl
push
mov
mov
or
cmp
stos
call
cmp
icebp
inc
sbb
jae
fnstcw
add
jb
push
popf
and
push
cmpsb
std
outsl
push
jne
lods
xchg
add
lcall
pop
jecxz
mov
adc
movsb
pop
popf
xor
push
arpl
xor
mov
xchg
rcrl
add
fidivrs
incl
mov
xchg
lcall
aas
cmp
scas
push
adc
jge
jmp
xor
repnz
adcl
cmp
in
data16
idiv
jb
pop
enter
and
xchg
fisubrl
cs
fwait
and
xor
push
dec
cmc
push
scas
loopne
mov
cmpsb
gs
or
xor
jno
ss
in
xlat
cli
data16
dec
jns
addb
mov
sbb
pop
xor
inc
fldcw
mov
sti
leave
int
add
adc
xor
adc
mov
rol
mov
call
jo
mov
push
out
or
xchg
add
push
mov
or
enter
inc
jmp
movsb
cmp
push
scas
or
mov
jo
sbbb
and
in
lods
inc
and
insl
add
dec
fidivs
ret
in
cld
xchg
ret
or
sbb
lods
cmp
iret
dec
xchg
push
in
xchg
rolb
jno
je
mov
and
sub
xor
and
push
call
out
mov
sbb
or
test
mov
mov
push
out
sar
lret
bound
sbb
inc
sub
adc
data16
push
std
pop
sahf
jnp,pt
sbb
fisubl
lret
mov
xor
popa
clc
stos
pop
shrl
ret
jg
cmp
pop
mov
outsb
lcall
mov
dec
loope
push
call
call
testl
imul
pop
lea
and
jp
pop
hlt
les
add
fdivrp
xchg
and
mov
sahf
dec
sbb
jae
test
roll
xchg
pop
mov
pop
out
pop
xlat
aad
mov
jbe
cwtl
loopne
mov
lahf
les
mov
aad
sub
jb
dec
dec
loop
jge
nop
xchg
ja
add
xchg
fiadds
ss
mull
jmp
arpl
or
nop
daa
aas
add
xchg
jns
mov
xor
sar
addl
or
gs
mov
lods
lea
int3
mov
stc
cmc
in
outsb
pop
pop
inc
fcomps
add
js
pop
divb
and
enter
std
loope
xor
push
dec
in
adc
add
fsubrs
fisttpll
lea
aad
stos
cld
xlat
outsb
in
push
xor
cmpsb
or
cltd
mov
int
mov
dec
outsl
push
mov
ret
cmp
dec
loope
fldcw
call
add
jle
dec
add
popf
inc
bound
mov
mov
leave
sub
in
inc
dec
loop
cmpsl
jnp
clc
xchg
imul
in
mov
inc
push
mov
cmp
cmp
pop
mov
int3
loop
pop
push
and
inc
pop
xor
lahf
outsb
push
mov
mov
cmp
in
jle
push
push
pop
repnz
das
pushf
xor
jb
adc
xchg
sarl
pop
test
shrl
inc
and
jne
add
pop
cmpsl
pop
mov
inc
push
jmp
jmp
aam
fiadds
repnz
push
mov
adc
idivl
das
xchg
int
jae
mov
ljmp
jge
lahf
sbb
mov
adc
jp
xor
mov
repz
fisttpll
and
jnp
fimull
add
cltd
xor
fidivl
ds
jbe
jl
js
pop
popf
addb
je
shlb
xchg
adc
hlt
xor
lds
pop
or
repnz
sub
jle
jns
pop
cwtl
dec
loopne
jbe
cs
out
push
mov
call
adc
jnp
push
movsb
cmp
add
add
stos
push
sub
ja
jge
leave
fsubrl
mov
stc
enter
and
adcb
dec
cmp
js
sahf
xor
or
jbe
pop
ror
popa
mov
shr
jg
mov
mov
fcoml
cmpsl
sbb
adc
push
inc
xlat
add
cmc
mov
push
sub
jl
cltd
inc
mov
xor
pop
cmpsb
cmp
daa
mov
pop
loope
pop
add
jecxz
fwait
sub
mov
mov
pop
mov
lret
pop
ds
cmp
jb
pop
repz
fdivrs
leave
outsb
js
ret
das
adc
testb
add
ja
movb
mov
xchg
mov
fs
add
sbb
add
cs
aas
xchg
nop
daa
gs
pop
out
mov
jbe
adc
arpl
xchg
mov
mov
ret
scas
sub
or
add
out
test
popa
clc
sub
mov
push
shrl
sbb
dec
fildll
lods
inc
xor
pop
lret
pop
test
outsb
mov
scas
jle
mov
and
aam
mov
stc
mov
repnz
fsubrs
out
and
cmpsl
aaa
pop
mov
mov
lods
inc
mov
fxch
bound
push
data16
nop
or
mov
mov
fsubs
fldcw
ret
dec
ss
push
insb
insb
add
jl
xchg
sbbl
mov
cmp
cmp
pop
daa
xchg
pop
repnz
inc
out
jns
das
outsl
repz
dec
mov
popf
sbb
mov
mov
aas
test
enter
dec
in
ss
inc
or
add
mov
int3
and
pop
xlat
inc
xlat
add
outsb
push
sub
popa
jg
mov
jl
sti
cmp
mov
adc
xor
cmp
push
lret
ret
ftst
xlat
outsb
add
imul
sub
mov
mov
dec
jnp
stos
bound
lds
dec
out
dec
out
adc
imul
lds
call
jno
sbb
add
icebp
sub
enter
stc
loope
loope
adc
incl
lds
xchg
mov
aam
cwtl
sti
fdivl
mov
xchg
in
sbb
aaa
add
jnp
adc
in
lods
xor
inc
push
cltd
xor
push
in
push
mov
dec
ds
add
data16
cwtl
adc
xorb
rcrb
es
dec
ds
fildl
push
out
xlat
push
stc
xchg
icebp
test
mov
mov
xor
inc
aas
mov
jbe
fcmovu
jno
in
test
daa
clc
jo
or
int3
lcall
sti
xor
repz
push
in
insl
sbb
cmp
jno
scas
cmp
es
scas
inc
xchg
int3
arpl
sahf
in
cmp
ljmp
sbb
dec
outsl
ss
popa
push
out
xchg
pmulhuw
push
stos
ret
jge
inc
push
loopne
xchg
test
arpl
fsubr
xor
pop
or
mov
daa
mov
cmp
inc
fcoml
popa
push
cli
inc
push
xchg
scas
cmp
mov
ret
pop
sbb
cmp
push
pop
lret
cmp
test
cmpsb
or
js
shl
lock
sub
dec
fildll
les
xchg
mov
test
jo
test
cltd
mov
cmp
fdivs
pop
sub
into
gs
fbstp
sahf
clc
pop
push
std
xchg
lcall
mov
lock
icebp
cmp
or
fs
andb
out
pop
stos
sbbb
jb
or
jnp
aaa
mov
fisubrl
dec
clc
fmul
arpl
adc
mov
movsb
adc
arpl
mov
ljmp
sbb
mov
test
mov
jae
inc
fsubl
iret
arpl
add
lret
bound
xchg
aam
lahf
ss
sbb
pop
jbe
mov
dec
arpl
or
es
fidivrl
sbbl
je
and
mov
mov
add
or
jo
sub
in
inc
nop
mov
fisubrl
adc
add
mov
fistl
test
fisubrs
pop
repz
sti
xchg
cs
addr16
xor
dec
adc
adc
mov
xchg
push
mov
test
cmp
cmp
jmp
push
in
fsubrl
xor
sbb
xchg
sub
ds
imulb
test
mov
mov
xor
add
jle
xor
testl
shrb
pop
pop
pop
and
mov
ds
or
mov
sti
cmp
lret
add
mov
dec
scas
sub
mov
push
iret
dec
jmp
jcxz
add
ds
cmp
pop
arpl
gs
lea
rcll
int3
xchg
mov
fistpl
mov
xchg
sbb
dec
les
dec
inc
test
cmp
sarb
sub
jnp
scas
movsb
or
xchg
popa
or
dec
aas
pop
and
or
aad
mov
pop
mov
inc
gs
addl
dec
mov
pusha
or
mov
sub
jbe
dec
imul
loopne
mov
jle
mov
inc
xor
aad
push
sub
adc
shlb
sbb
icebp
fisubs
aad
sti
testl
aaa
insb
mov
paddq
xchg
fcmovne
jmp
push
bound
xchg
mov
or
fs
pushf
je
arpl
push
mov
aad
sbb
test
mov
jl
dec
out
dec
push
mov
dec
inc
idivb
test
xorl
dec
stos
push
cs
inc
push
inc
xchg
sti
mov
sahf
aad
cmp
hlt
cmpsb
dec
xor
push
sub
loop
in
dec
test
and
fdivrl
out
outsl
push
mov
adc
lret
cmp
xchg
movsl
js
dec
jl
add
push
mov
mov
push
cmc
sahf
mov
stos
stc
fwait
xor
ficoml
mov
sub
test
sbb
addr16
jmp
bound
sub
stos
mov
repz
jl
out
or
nop
mov
push
xor
xor
ret
pusha
jecxz
out
not
int3
movb
rclb
xchg
pusha
mov
and
cmp
adc
add
cmp
lock
pushf
add
test
divb
push
sarb
shrl
inc
mov
ljmp
mov
repz
aaa
out
jg
mov
ret
pop
xchg
add
jnp
mov
stos
or
push
xor
mov
ja
mov
mov
shl
loop
lcall
xor
xchg
in
lods
mov
and
je
adc
test
insl
enter
pop
jle
negb
aam
dec
mov
and
xchg
mov
jp
mov
clc
xor
sbb
stos
mov
stc
ljmp
aad
ss
and
jns
jns
test
imull
clc
sub
xor
aaa
cli
pop
bound
popf
sbb
adc
bound
ljmp
outsb
test
sub
mov
pop
stc
jmp
cmp
idiv
adc
js
test
aaa
call
jmp
fld
out
mov
add
mov
cmc
sbb
aad
mov
xor
pop
jecxz
adc
mov
sarb
mov
mov
mov
pop
ss
in
jge
movsb
fdivrl
mov
adc
xor
into
cmpsl
aad
movsl
jns
cmp
shlb
push
mov
cwtl
push
stos
mov
push
inc
xchg
out
ljmp
sti
stc
cmp
loop
aam
cs
mov
in
out
mov
pop
xor
mov
jmp
sub
cmp
inc
add
ljmp
mull
xchg
jno
sbb
addr16
imul
cs
xchg
iret
imul
mov
or
out
fidivl
imul
ljmp
outsb
xchg
push
fs
les
fisubrl
stos
std
jl
push
dec
imul
xchg
pop
mov
dec
iret
or
fs
movsl
lret
sub
int3
scas
or
cmp
lea
data16
jbe
cmp
jnp
cmp
cwtl
fsts
mov
sub
sti
push
mov
out
pop
out
arpl
shll
dec
sub
mov
cmpsb
mov
leave
xor
sarb
aas
bound
aas
imul
cmpsb
data16
and
lds
push
mov
mov
push
mov
imul
cmpsb
or
ss
cmp
pop
jno
loopne
jns
dec
dec
push
push
and
mov
cmp
sub
adc
mov
shlb
sbb
xchg
std
inc
xor
dec
or
jecxz
and
jge
stos
test
mov
jmp
and
ret
or
sbb
mov
sub
xchg
or
ftst
xor
mov
lahf
cmp
xchg
les
push
ljmp
fmull
scas
dec
icebp
xchg
adc
mov
into
add
push
loop
jns
in
add
in
dec
aad
xor
loope
in
sarb
or
in
xchg
and
add
mov
jnp
push
lret
push
mov
xchg
push
sub
xor
push
or
divb
xchg
decl
jg
sub
gs
xor
lret
and
adc
je
push
aad
insb
lods
jo
mov
mov
test
mov
xchg
inc
mov
jl
cmp
and
cmp
mov
sub
cwtl
mov
sub
enter
mov
sub
pop
cld
bound
pop
sbb
fwait
adc
shll
inc
sbb
push
jnp
lds
out
je
ret
sbb
lcall
int3
andb
cmp
test
push
add
add
cmc
cs
dec
inc
fwait
sbb
mov
mov
sbb
xor
mov
sub
test
push
fs
and
pop
jno
insb
test
test
adc
aad
into
jns
adc
inc
jmp
test
and
inc
cmpsb
push
mov
pop
push
arpl
mov
mov
hlt
stos
pop
push
inc
add
shl
adc
jbe
mov
or
mov
add
mov
shrb
mov
xchg
jne
dec
jg
push
and
rorl
sub
data16
fsubs
mov
jne
outsb
mov
movaps
add
jbe
pop
or
mov
aaa
pop
cmpsb
sub
lods
jns
inc
xor
rol
mov
ret
sbb
mov
dec
pop
std
pop
jle
loope
push
imul
test
and
mov
pop
mov
cmp
dec
mov
jle
dec
and
dec
or
repz
andl
dec
sahf
aas
out
fstpt
inc
inc
movsl
jle
sub
jecxz
ret
fmuls
mov
jg
xor
inc
push
push
mov
push
ds
pop
cmp
inc
dec
mov
fbstp
sub
jnp
iret
add
sub
je
mov
andb
inc
push
lock
dec
fisubrs
pop
adc
repnz
daa
ret
dec
rsm
and
cmp
fidivl
lret
inc
call
out
mov
mov
shlb
pop
fwait
and
rcrl
sbb
es
push
mov
sub
bound
out
aaa
cmpsb
shr
jae
xchg
and
pop
sbb
mulb
add
out
jno
out
test
insl
call
adc
and
icebp
inc
pop
dec
push
rorb
in
cmp
push
jmp
sarb
sbb
mov
fisubl
fnsave
push
xor
mov
add
jg
adc
test
and
cmp
jne
les
fisubs
aam
xor
adc
jp
adc
call
fidivrs
insb
xchg
test
sbb
movsb
mov
sub
push
pop
rolb
mov
and
xorb
mov
mov
movsb
jae
into
stos
push
pop
push
sbb
sbb
jnp
pushl
mov
in
pop
into
fsubrs
pop
int
stos
push
rorl
pop
popa
cltd
stos
lahf
adc
out
xchg
dec
loop
and
jmp
mov
fcoms
enter
jp
dec
mov
fisttps
daa
add
out
cmp
hlt
push
mov
inc
dec
lahf
jbe
fbstp
push
pop
lock
or
pusha
xchg
insl
mov
push
or
test
sti
inc
sbb
out
test
jmp
pop
jae
rol
out
push
xor
cmp
sub
outsl
lret
inc
lock
xor
lret
mov
push
sahf
pop
lods
pop
jns
push
push
jb
dec
pop
insl
es
dec
inc
or
testl
les
cmp
loope
dec
cmp
mov
loop
mov
dec
stc
test
outsb
fwait
std
scas
sub
popf
rcl
jp,pn
lods
pop
push
xchg
jbe
mov
aaa
sub
sub
insb
jg
sahf
mov
in
cmpsl
jecxz,pt
jmp
push
aaa
das
fiadds
or
jne
add
adc
pop
sbb
sbb
push
jnp
push
ja
sub
test
mov
int3
test
cltd
in
nop
fdivp
or
mov
mov
add
pop
or
mov
lret
pusha
frstor
inc
lods
cmp
pop
imul
lcall
je
pop
dec
and
mov
adc
lods
xchg
sub
clc
cmp
sub
test
repz
sbb
lods
aam
add
or
sti
lods
aad
pop
fucom
sub
rcr
mov
mov
cmp
sbb
into
out
aad
rcrl
movsl
clc
cld
nop
mov
clc
outsb
and
mov
xchg
rcrb
mov
je
cs
cmpsb
mov
cld
stos
dec
in
add
mov
sbb
dec
es
aad
xchg
jmp
imul
lods
fstl
xchg
xchg
rcrb
lods
fwait
sub
stos
popf
jb
out
xor
inc
xchg
sbb
inc
adcb
rcrb
push
xchg
jns
pop
mov
push
sbb
mov
mov
cmp
mov
rorl
ja
cmp
mov
pop
adcb
mov
xchg
nop
cmp
pop
cmp
jns
ret
aam
push
mov
mov
xchg
add
add
sbb
clc
jae
or
jecxz
negb
inc
and
and
rcll
mov
ss
mov
lock
xchg
shlb
or
int
jb
dec
ss
mov
cmp
lods
aam
add
xor
pop
jns
inc
push
push
xchg
mov
ss
lods
in
lret
test
shr
xor
rol
mov
mov
lahf
mov
jl
xor
cmp
mov
mov
lcall
fstl
mov
arpl
pop
fwait
dec
xor
in
hlt
in
inc
gs
rcrl
lds
xchg
push
jl
xchg
fucompp
lcall
add
or
and
dec
and
fistl
loope
js
sbbl
cltd
rcrb
pop
xor
fadds
inc
pop
cmp
dec
imul
or
cwtl
push
mov
mov
sbb
subl
pop
fbstp
sbb
call
mov
xor
mov
mov
mov
sub
xlat
mov
loopne
push
flds
inc
xchg
dec
test
xchg
or
adc
push
icebp
inc
das
jnp
int3
pop
ljmp
popl
aad
lods
popf
push
fdivrp
inc
decb
inc
or
jae
sub
fs
xor
outsb
js
xor
push
lcall
or
scas
lock
mov
scas
push
push
das
pusha
push
andb
xchg
cmpl
ja
sub
das
sbb
sbbb
and
in
xchg
insb
cmpsb
mov
pop
add
xor
test
lahf
stos
inc
rcll
sub
push
xchg
int
mov
jne
cmp
ds
ljmp
push
lahf
push
out
icebp
inc
jbe
mov
pusha
ljmp
pop
movsb
adc
jbe
mov
movsb
pop
mov
push
fsubrl
ss
mov
dec
leave
movsl
int3
leave
shll
mov
jns
ret
daa
loop
cmp
imul
fcmovnu
clc
int3
jp
outsb
push
sub
stos
xor
lods
mov
xor
add
jg
cmpsb
push
mov
push
std
mov
mov
xchg
dec
faddl
in
pusha
aad
call
pop
shlb
shr
les
jmp
and
jnp
cmp
popf
lods
push
jle
add
stos
pop
jmp
cwtl
mov
sbb
adc
cmp
xchg
pop
popa
and
sbb
push
addr16
enter
ret
lcall
fstpt
inc
add
lds
mov
lock
cmpsb
adc
xchg
cmp
pop
aad
inc
in
xchg
jnp
call
inc
loope
cmp
aad
lahf
ret
insb
jnp
sahf
mov
ret
xor
push
jne
cmp
dec
or
or
adc
imul
jbe
pop
rcll
sub
outsl
dec
mov
mov
mov
outsl
and
mov
push
lahf
int
push
add
cmc
inc
jbe
stc
xchg
sub
cmpsl
mov
dec
int3
jg
jno
adc
jnp
lcall
mov
and
jl
sbb
jae
test
inc
sbb
mov
idivb
jo
fiaddl
add
push
xlat
orb
lods
in
in
mov
xchg
pop
adc
mov
sahf
fistl
test
xor
sbb
and
and
int
cmp
cmp
scas
sbbl
add
addr16
mov
mov
xor
mov
in
inc
not
lahf
and
outsl
push
xchg
inc
es
cmpsl
mov
imul
xor
int3
das
jns
sbb
lods
mov
arpl
or
sub
js
push
mov
or
out
pop
cli
inc
add
or
push
cwtl
mov
scas
push
pop
popl
push
jmp
mov
jl
rcll
vandpd
lds
mov
mov
adc
mov
and
sti
sbb
movsl
loopne
cmpsl
sbb
sub
jl
sahf
dec
adc
dec
icebp
roll
adc
sti
cmp
pushf
mov
push
test
and
inc
sub
vxorpd
jmp
imul
pop
insl
cwtl
repnz
mov
adc
ds
arpl
dec
nop
fldl
popa
popf
loope
xor
imul
cmp
aaa
fnstenv
call
addr16
jmp
or
cmp
jge
and
push
sub
pop
push
nop
inc
stos
pop
xor
dec
xchg
mov
adc
sub
mov
and
cmpsb
sahf
inc
movsb
xchg
jnp
mov
ret
mov
push
pop
cmp
test
xchg
xchg
or
mov
adc
lcall
or
out
jp
pop
and
sub
mov
mov
fdivl
sti
xlat
sub
data16
and
xor
movsb
sbb
out
iret
cwtl
adc
pop
mov
mov
mov
sub
xor
mov
test
adc
testl
add
addr16
xchg
sub
pop
mov
nop
shll
and
pop
sahf
pop
fadds
les
inc
je
fs
rclb
neg
call
int3
fwait
insl
or
xchg
push
imul
outsb
test
daa
pop
imull
jbe
inc
loopne
loop
mov
mov
xlat
paddq
xchg
test
xor
in
lahf
sub
jb
push
xchg
xchg
cmp
lcall
mov
fstpt
mov
cmp
inc
dec
pop
popa
xorl
aas
mov
das
jl
dec
push
push
mov
out
jp
jnp
push
inc
and
movsb
bound
sbb
sub
jae
nop
shrb
js
lret
sbb
in
ret
sbb
jne
lods
pop
xchg
loope
wbinvd
dec
mov
outsl
mov
frstor
mov
fstpt
inc
dec
movzwl
in
dec
adc
mov
or
mov
shlb
sub
mov
lods
mov
inc
movsl
into
dec
inc
jle
pop
sbb
push
sbb
jp
insl
mov
cmc
cwtl
test
mov
lret
out
fstpt
jmp
add
std
pop
outsl
and
jnp
mov
adc
xor
ret
add
push
add
mov
pop
mov
aam
stc
insb
adcl
fs
mov
cmp
cmp
sahf
jb
push
hlt
mov
xor
in
test
inc
cmp
shr
fstpl
dec
sbb
fistpl
sub
add
repnz
test
xchg
mov
orb
pop
fbld
add
mov
or
jnp
rep
lret
out
and
mov
pusha
call
repz
jbe
dec
mov
cmp
fnstsw
xor
add
and
pop
jo
cld
dec
cmp
push
push
push
mov
adc
sbb
loop
out
add
divl
es
xchg
rcrb
add
jge
and
adcl
fstpt
push
mov
or
push
or
enter
push
scas
cmp
cmp
movsl
inc
dec
sub
lcall
push
loop
add
ror
fldcw
in
testb
jecxz
dec
cmp
fisttps
repz
dec
xor
mov
movsb
adc
push
jno
cvttps2pi
xorl
sub
arpl
mov
jge
xor
aad
sub
mov
xchg
push
movsl
lcall
stc
je
orb
fs
xor
movsb
cmc
jnp
push
jae
movsl
mov
jo
or
mov
sub
mov
clc
movsl
jmp
mov
ret
xchg
pop
ss
icebp
pop
pushf
dec
movsl
test
adc
or
adcb
stc
push
and
mov
or
std
insl
les
or
dec
jne
ret
and
mov
push
shr
iret
hlt
xchg
add
hlt
test
je
sbbb
xchg
insb
mov
dec
imul
ret
aam
pushf
xchg
scas
adc
sahf
aaa
cmp
push
shll
or
lock
int3
adc
pop
lcall
sbb
push
mov
xlat
and
sub
stos
jecxz
scas
sbb
addr16
je
clc
mov
pop
lret
addl
jns
jno
jae
shll
jne
mov
cld
sahf
jecxz
subl
ja
add
fistps
fsubrs
mov
xchg
sbb
or
dec
stos
lock
sub
nop
sub
xor
sbb
xor
call
xchg
adc
in
dec
dec
jp
xchg
mov
mov
cltd
imul
adc
stos
dec
or
mov
sub
test
jle
es
mov
xor
fidivrl
cmp
push
imul
cltd
mov
scas
outsl
mov
cltd
sbb
stc
cmp
sub
add
mov
add
in
dec
insb
dec
and
outsb
insb
fldenv
pop
das
adc
dec
jo
pop
and
lret
mov
pop
fs
push
sbb
dec
cmp
jae
ljmp
jle
inc
push
push
aas
test
insb
rol
mov
aas
rep
inc
pop
adc
rolb
add
mov
scas
popf
push
or
int
or
gs
pop
cltd
mov
cmp
sub
xor
push
inc
pop
nop
clc
jnp
in
jne
jb
mov
mov
in
test
jmp
sar
and
fwait
jne
fwait
fwait
mov
js
jns
stos
fsubrs
ljmp
test
lods
notl
and
xor
push
pop
aaa
xchg
xchg
hlt
rolb
insl
add
call
daa
jecxz
inc
dec
and
jge
xor
fs
cmc
test
jmp
mov
sub
cmp
sub
sub
or
cmc
mov
pushf
negl
cmc
out
call
mov
cmp
test
out
daa
add
xor
lods
ret
mov
stos
add
iret
push
sbb
imul
pop
popa
lret
jns
cmpl
pop
adc
sub
loope
or
test
pusha
ljmp
push
cmpb
outsl
xchg
dec
and
xchg
pop
add
mov
leave
setbe
fsubs
cld
jecxz
out
outsl
inc
inc
test
xchg
scas
or
mov
repz
adc
jae
fldln2
mov
dec
addr16
jmp
push
mov
mov
fdivrl
push
loop
filds
mov
fs
pop
test
xor
lea
frstor
mov
inc
popa
cli
cld
icebp
or
lahf
push
div
sub
sarl
sub
repnz
pop
jnp
sbb
es
lret
push
add
mov
cs
xlat
lahf
xchg
xor
sub
cmp
mov
imul
icebp
test
and
jecxz
imulb
mov
xorl
arpl
xor
flds
enter
subb
daa
cmpsb
mov
es
ja
mov
test
inc
push
inc
cmp
xor
shll
cli
lock
dec
push
lock
adc
shrd
insl
aas
test
dec
pop
inc
push
cmpb
dec
add
mov
xchg
xorb
push
imul
stos
loop
push
and
rcrl
xlat
in
dec
jbe
ljmp
punpckhbw
xchg
adc
mov
loope
icebp
ds
lcall
and
pop
mov
cmp
and
push
adc
fbld
fwait
imul
ficoml
xor
fwait
jo
adcl
adc
xchg
insb
lods
adc
in
push
pop
jle
cmp
sti
cmc
in
push
arpl
cmp
ja
hlt
push
lock
adc
adc
xchg
xchg
cmp
subl
out
mov
and
dec
cmp
mov
fcoml
mov
pop
arpl
jle
mov
lods
ror
cmp
adc
and
or
jle
repz
fdivrl
adcb
jmp
in
int3
cs
into
adc
push
push
xor
cmpsb
stos
cmpsl
push
mov
and
dec
cli
fs
mov
jbe
cmpsb
jno
add
sarl
mov
push
div
subb
scas
mov
inc
cwtl
lea
inc
dec
je
xor
mov
mov
into
dec
icebp
lret
lock
mov
add
or
orb
pop
fisubrl
mov
push
fucomi
call
or
sbb
mov
ja
push
lods
or
popf
mov
jno
call
mov
cmp
shll
mov
inc
mov
fptan
fisubl
mov
dec
inc
js
sbb
cs
cmpsl
jnp
imul
sahf
repz
fnstenv
out
shll
test
and
inc
lcall
xchg
push
loope
shlb
sub
sarl
mov
mov
jle
nop
aam
cwtl
clc
leave
ss
mov
jle
cmp
inc
shl
inc
push
jmp
cltd
jmp
vpsllq
push
mov
test
bound
push
aam
sti
adc
icebp
pusha
insb
add
and
lods
mov
inc
cmp
push
push
lods
adc
scas
sub
iretw
pop
inc
lahf
xor
add
pop
pusha
clc
clc
fs
jge
lds
inc
and
mov
jp
or
add
pop
faddl
fadds
push
mov
sub
lea
stos
icebp
cltd
sbb
mov
or
cltd
loopne
mov
rcr
test
shlb
mov
insl
inc
dec
jle
inc
cmpsl
push
push
sub
and
mov
inc
es
rcr
sub
jne
sub
jmp
dec
xchg
fsubr
mov
hlt
lcall
cld
mov
punpckhdq
imul
lods
sub
adc
leave
fdivl
pop
ds
scas
roll
pop
push
bound
inc
insb
into
lret
jecxz
shrb
and
jbe
and
cwtl
jb
call
inc
into
scas
add
lcall
test
push
mov
xor
push
fistps
hlt
daa
movd
in
test
jp
mov
addr16
imul
xlat
out
movsl
arpl
xchg
or
sbb
icebp
dec
and
xchg
in
adc
sbb
xlat
dec
push
jecxz
fsubrl
mov
lret
cmpsb
out
cmpb
in
jno
sbb
lcall
ss
scas
nop
in
call
jecxz
loop
xor
mov
lcall
mov
or
movsl
inc
mov
inc
js
cmp
and
jno
add
call
fildl
div
jle
addb
xchg
xorl
and
syscall
add
imul
ss
dec
iret
sbb
divl
mov
xchg
insl
stos
hlt
sbb
pop
dec
andl
mov
popa
ljmp
jo
and
fdivrs
add
jb
sub
cmp
sti
popa
cltd
xchg
and
mov
cmpsb
lahf
int
add
jle
jmp
out
xchg
xchg
scas
mov
inc
adcb
lock
jl
mov
cmp
js
cwtl
fs
inc
jb
cli
xchg
push
outsl
aam
in
jp
shll
sbb
test
xor
decl
filds
cmp
cmp
test
mov
out
or
outsb
stc
out
sbb
inc
jg
add
push
out
sarl
loopne
clc
bound
inc
sub
out
sbb
iret
pop
push
adc
sub
mov
lods
cmp
cli
mov
std
movsb
insb
xchg
xchg
or
add
psubw
dec
mov
inc
add
or
test
lahf
bound
js
mov
xchg
push
jp
inc
js
push
push
and
jne
out
jmp
pop
mov
pusha
jb
and
cmp
mov
cmpl
jmp
xchg
mov
mov
pop
or
dec
lahf
push
cmp
xchg
jecxz
mov
adc
aad
or
xchg
out
push
fdivrl
mov
pop
sub
xor
pop
pushf
dec
push
or
insl
fcomps
cmp
leave
out
sbb
adc
pop
out
sub
xor
mov
push
out
mov
pop
dec
ds
add
stos
loopne
adc
pop
inc
xor
and
inc
pusha
lea
add
hlt
aam
mov
cmpsb
lea
add
data16
jno
stos
push
mov
imul
sub
pop
das
enter
stos
in
mov
adc
es
popf
pushf
dec
jl
aaa
mov
sar
aaa
sub
lods
mov
adc
lahf
dec
clc
cs
mov
push
dec
ret
js
enter
cmc
push
sbb
inc
and
push
cmpsb
pop
clc
xchg
dec
fsubr
jecxz
jmp
icebp
pop
push
out
push
jb
or
call
insl
push
xchg
pop
or
je
insb
daa
cmp
mov
and
adc
in
pop
mov
inc
lock
xor
inc
lds
sti
aas
movsl
jle
aad
lods
inc
imulb
popa
loope
lret
bound
jmp
or
pop
sahf
xchg
pop
sahf
and
es
sub
clc
jge
pop
notb
lahf
sbbl
push
mov
das
mov
fbstp
js
xor
insb
fs
add
mov
mov
ret
ret
pop
lock
dec
loopne
es
pusha
mov
jns
mov
frstor
dec
xchg
xor
pop
bound
jbe
pop
lock
xchg
or
mov
pop
lods
daa
mov
lods
incl
xor
push
out
call
sti
andb
or
test
aad
xchg
sub
mov
stc
dec
mov
bound
ja
insl
repnz
rorl
repnz
pop
scas
jb
xor
inc
xchg
sub
les
jecxz
in
jmp
mov
jb
imul
nop
daa
mov
addr16
int3
arpl
out
xchg
sub
mov
or
lahf
pop
stos
sub
fsubrl
es
jnp,pn
fldt
pusha
idiv
mov
js
push
hlt
mov
and
into
hlt
mov
cltd
cmpsb
cmp
inc
in
scas
sbb
ds
mov
test
mov
ss
aam
in
push
js
lea
loopne
pop
scas
cli
xchg
fdivrs
test
and
mov
incb
adc
adc
enter
xchg
jmp
dec
loop
xor
popa
outsb
psubb
mov
addl
jp
pop
add
cmp
xchg
add
es
fstps
es
mov
ficoml
add
cmp
pop
add
cmp
or
leave
cli
xchg
repz
pop
scas
loopne
pop
mov
add
push
cwtl
pop
or
jecxz
rclb
test
add
sarb
pop
mov
mov
test
cmp
fcomip
mov
test
push
enter
cli
xchg
xchg
cmpsb
cmp
xor
jnp
cmp
pop
inc
fiaddl
test
push
shl
enter
push
ljmp
mov
aas
fcomps
enter
jnp
pop
inc
in
jg
sbb
ficompl
add
and
pop
addb
jp
lea
fwait
loop
xchg
es
and
shlb
xchg
jnp
cmp
lret
pushf
jmp
in
dec
in
call
xor
jo
addr16
insb
xchg
imul
mov
lock
fldenv
mov
popa
and
add
rcrl
xchg
sub
push
adc
repz
jae
pop
lods
outsb
std
xchg
cwtl
into
movsb
cmp
mov
cmpsb
cmp
cmp
pop
xchg
sub
test
pop
repz
es
dec
sbb
fcomps
sub
and
jbe
push
inc
adc
jge
inc
fisubrs
or
xchg
mov
push
out
aad
lcall
mov
mov
fxam
jl
xor
jmp
pop
pop
and
test
pop
movsb
leave
inc
xlat
icebp
push
jmp
adc
dec
and
pop
insb
testl
loop
xchg
cs
xchg
and
adc
cmpsl
push
cmp
add
pop
mov
mov
jb
sti
lods
cmpsl
test
loopne
aaa
into
clc
add
cmp
lea
gs
sub
faddp
or
sub
sbb
dec
fbstp
mov
sahf
xchg
dec
loop
sarb
adc
ss
ljmp
mov
sub
jmp
xchg
adc
lahf
ss
xor
adc
xchg
pop
pop
mov
fldcw
mov
aaa
and
pop
push
mov
outsl
cmpsb
mov
hlt
in
scas
inc
add
cmp
aaa
and
lahf
pop
push
pushf
xor
mov
xor
decb
jo
dec
push
pop
icebp
lea
xchg
lods
popf
xor
mov
pop
in
clc
stos
inc
and
sbb
jnp
jg
sbbl
jecxz
xor
add
cmp
mov
imul
mov
inc
xlat
dec
loope
add
xor
pop
mov
test
scas
movsl
dec
iret
pop
hlt
idiv
pop
scas
sub
inc
fiaddl
call
xor
mov
dec
fists
ss
into
jo
stc
mov
popf
xor
jmp
ds
mov
xor
sub
mov
xor
fsubr
test
adc
aaa
xchg
jo
xchg
sub
mov
inc
ficoms
push
jmp
jno
popf
xor
xchg
pop
xchg
sti
xchg
fwait
and
jns
adc
test
xchg
and
mov
inc
fstl
aam
and
shrl
xchg
xchg
sub
je
dec
movsl
call
mov
dec
ja
cwtl
das
inc
cwtl
hlt
mov
shrb
repnz
in
adc
inc
xchg
sub
lret
popa
push
jmp
in
or
out
inc
fisubrl
insl
add
nop
inc
xlat
leave
bound
cltd
ljmp
lock
test
jbe
mov
inc
xchg
cmpsb
cmp
xchg
in
dec
adc
aam
push
mov
jg
push
sbb
or
and
and
stos
inc
jge
jns
fs
lcall
xchg
sub
cs
dec
enter
mov
cld
mov
enter
clc
xor
fwait
push
pop
mov
mov
ds
rcll
adc
xor
mov
cmpl
push
idivb
pushl
daa
push
andl
dec
movsl
inc
ja
mov
fistpl
loop
sub
add
mov
aaa
xor
insb
xchg
inc
in
andl
sbb
sbb
cmp
sub
mov
test
pushf
sub
and
push
je
dec
stos
jge
fwait
movsb
int
cli
lret
sbb
notb
das
mov
pushf
addr16
movsl
out
mov
fsubr
add
aam
add
outsl
popa
push
xchg
push
insb
stc
nop
mov
jle
jecxz
sahf
daa
xor
pop
scas
aaa
xchg
test
icebp
xchg
aad
iret
push
sub
and
and
fbld
dec
push
cmc
je
out
ja
pushf
andl
adc
cmp
test
pop
cmpsl
mov
fisubrl
aam
cli
or
pop
adc
sub
outsb
inc
imul
mov
leave
outsl
push
add
mov
cs
jecxz
xorl
mov
in
jmp
in
aas
pop
outsl
or
inc
push
mov
lret
mov
mov
sbb
jb
and
mov
push
je
test
mov
rcr
or
mov
add
aas
mov
jp
outsb
lods
inc
movsb
mov
loop
testl
adc
xchg
test
sub
add
loop
fisubrs
inc
movsl
push
lea
jns
shll
xchg
int3
sbb
movsl
dec
push
push
das
leave
jge
fstps
sbbl
mov
ret
add
jno
xor
sbb
arpl
lret
scas
add
pushl
cmp
fisubrs
mov
mov
jge
sub
jne
mov
decl
cmp
push
mov
dec
adc
push
mov
dec
cmc
test
adc
cli
inc
adc
push
mov
xchg
aam
lods
push
mov
fxch
jne
push
daa
leave
jb
call
or
lcall
shr
sub
mov
dec
icebp
push
mov
or
and
pop
gs
mov
and
adc
les
sub
push
fs
data16
pop
popf
scas
rolb
mov
xlat
or
dec
pop
cmp
xchg
ja
enter
sub
cmpsb
pop
sbb
jmp
test
testl
aaa
aam
pop
jecxz
push
sub
mov
push
aad
jnp
xor
std
addl
rcrb
xchg
sub
cmp
fisubrs
mov
cld
mov
mov
loopne
sbb
jno
andb
push
movsl
cmc
xchg
into
inc
fxch
pusha
or
ficomps
mov
sbb
adc
rcrl
mov
popa
ret
and
mov
out
addr16
cmpsb
pop
mov
cmp
and
pop
mov
les
lods
sbbl
insb
and
xor
mov
testb
push
fsubs
adc
popf
xor
dec
cli
xchg
jle
les
lahf
and
rcrb
mov
sub
and
js
jne
scas
inc
xor
push
dec
in
jmp
imul
cmp
insl
stc
mov
sub
cmpsl
ds
inc
pop
lods
lds
int3
arpl
jecxz
and
add
dec
xor
mov
dec
daa
mov
mov
inc
fld
rcrb
or
push
out
sbb
adcb
cmp
mov
les
mov
mov
adc
jecxz
jae
mov
sbb
adc
cld
lea
stos
inc
aas
out
pop
repz
jo
push
push
jb
call
cs
fld
pop
cld
lea
mov
sbb
sub
adc
ss
repz
lcall
cmpsl
mov
xchg
hlt
mov
and
inc
mov
xchg
xorb
add
lea
fstps
scas
inc
dec
cld
test
push
mov
rcr
test
or
xchg
iret
mov
adc
fbstp
cli
inc
ficomps
ja
adcb
sbb
sbb
hlt
sub
adc
xchg
sub
pop
mulb
mov
xchg
xorl
loopne
popf
xor
add
lea
xor
dec
add
adc
ss
or
das
lods
fmul
inc
out
jmp
pop
ret
das
add
arpl
loope
jnp
shll
fwait
xor
pushf
jmp
push
cmpb
out
jo
fdiv
push
adc
ret
hlt
cld
adc
cmc
mov
push
iret
cmp
cmp
xchg
lcall
clc
in
cmpsb
xor
mov
lahf
lret
out
js
jb
mov
in
mov
fiadds
sub
jp
inc
xlat
pop
fwait
jle
or
mov
in
test
dec
into
jmp
jge
jp
cmp
int3
pop
sbb
fisttps
cmp
fs
jmp
jge
xchg
in
add
add
and
lahf
adc
and
shrl
xchg
mov
fstps
xchg
int3
sub
das
pop
in
fbstp
jae
in
movsb
inc
fidivl
lds
scas
iret
sbb
andb
inc
xlat
fwait
inc
sub
je
mov
popa
leave
setp
inc
ljmp
xchg
cmp
pop
outsb
mov
cmp
mov
mov
insb
push
and
divb
mov
aad
push
cwtl
ficoml
enter
adc
dec
xchg
rol
xchg
push
lods
and
jp
sub
bts
ficompl
loopne
imul
aas
call
sub
loopne
cld
push
xorl
mov
pop
repz
mov
dec
cli
loope
adc
mov
inc
push
imul
add
stc
xlat
inc
mov
ret
push
aad
out
fdivrl
push
pop
fidivs
popf
je
dec
sbb
lret
int
fwait
push
xorb
push
icebp
rcll
aaa
orb
jns
enter
loope
mov
bound
shl
mov
sbb
mov
out
inc
loop
cltd
je
adc
push
xchg
cld
jle
add
mov
insb
pop
sbb
sarb
cmpl
arpl
scas
mov
jne
cmpsl
pop
xchg
test
xchg
out
lcall
dec
pop
popf
shll
mov
popf
xchg
mov
mov
xor
dec
sub
pop
cltd
loopne
cmp
mov
mul
adc
pop
test
clc
cmp
mov
pushf
dec
mov
psrad
adc
jns
mov
hlt
outsb
mov
test
pop
cld
shlb
jno
das
bound
divl
stos
inc
push
lahf
testl
sub
call
out
dec
clc
cmp
out
ret
sahf
mov
mov
pop
scas
push
inc
fildl
mov
mov
push
out
filds
paddb
out
daa
loopne
pop
out
lea
jb
push
movsl
in
dec
xlat
int
cmpsl
std
push
loope
mov
testb
mov
fsubrs
inc
xor
xor
pop
lock
inc
pop
lock
insb
mov
int3
pop
lock
dec
pushf
xor
pop
insl
dec
push
mov
inc
arpl
xchg
jae
jo
rcl
repz
or
lret
or
lods
xchg
dec
jno
cmp
inc
mov
xor
push
in
dec
xor
mov
aad
lret
lds
or
push
jb
inc
sbb
aad
mov
repnz
das
sub
lahf
add
or
pop
xor
nop
adc
inc
xchg
lock
mov
adc
add
fnsave
in
ss
icebp
mov
mov
push
arpl
xor
cmp
push
push
push
aad
sbbl
or
dec
cmp
cmp
adc
add
jae
mov
adc
cmp
xor
adc
fidivrl
xchg
insb
dec
push
inc
mov
pop
xchg
jmp
leave
bound
inc
fisubrl
fsubrl
iret
fdivs
pop
jae
jle
push
sub
hlt
xorb
mov
dec
loope
insb
movntq
mov
pop
push
test
mov
lods
movsb
int3
fbstp
into
mov
add
push
in
pop
xor
test
ret
cmc
pop
pop
repnz
sbb
inc
fdivr
gs
xchg
lcall
scas
out
shlb
out
insb
add
sbb
data16
arpl
dec
mov
mov
mov
mov
xchg
sub
mov
lret
cmp
adc
pop
pop
sahf
dec
push
jb
xchg
adc
xlat
out
or
dec
aas
in
or
xchg
jl
xchg
scas
repz
ror
arpl
or
push
jnp
xor
test
sub
aad
fidivs
mov
jb
sub
repnz
inc
adc
movl
and
pop
aaa
imul
aas
repnz
jecxz
sbb
xchg
sub
pop
lods
inc
push
out
leave
sbb
insb
fs
cmpsl
cmp
jecxz
scas
jmp
mov
dec
gs
jno
lea
mov
aad
mov
or
jae
xor
xor
xor
mov
rcl
insb
add
cwtl
das
pop
jb,pn
popa
fwait
int3
arpl
adc
es
mov
or
in
push
testb
in
aam
ffreep
xchg
sub
push
mov
xchg
pop
xor
dec
ret
fidivl
addr16
cwtl
test
push
sbb
repz
push
push
scas
inc
sub
inc
popf
loopne
adc
adc
or
in
cmpl
jnp
sub
pop
icebp
mov
lea
cmpl
lea
and
xchg
clc
repz
jl
lea
mov
stos
and
aaa
repz
pop
and
jae
test
popa
clc
mov
push
popf
jmp
add
jecxz
imul
test
loop
or
sbb
test
cwtl
and
or
pop
push
in
pop
daa
mov
cli
dec
stc
nop
lock
nop
jecxz
add
aaa
call
incl
cmp
xlat
outsb
in
js
jns
cli
imul
stc
adc
jmp
std
lods
inc
out
imul
ljmp
add
dec
and
cmp
inc
fdiv
pop
shrl
sbb
jp
jnp
sbb
test
xchg
outsl
adc
repnz
mov
pop
dec
push
pop
testb
stc
lcall
pushf
out
pushf
xor
adc
aad
inc
fistpl
mov
jp
lret
mov
rcrb
mov
and
and
pusha
notl
aam
jne
pop
add
mov
pop
repz
mov
outsl
insb
sti
inc
fldt
jo
ljmp
aad
gs
test
push
and
pop
inc
mov
arpl
inc
fcoml
pop
sub
stc
jne
rclb
add
sbb
in
cmp
and
add
iret
push
rcrl
test
sbb
adc
fs
sub
pop
mov
pop
shll
cli
sbb
test
fwait
push
andb
jmp
inc
fisttpl
and
stos
inc
nop
addb
mov
out
mov
pop
pop
sti
xchg
mov
mov
iret
into
lds
test
sub
pop
ret
daa
mov
mov
lret
std
sub
mov
inc
js
or
jns
xchg
outsl
add
mov
pusha
pop
lds
push
popf
push
cmpsb
cli
fadds
add
and
cmp
rorl
cmp
test
jns
jecxz
and
notb
sbb
pop
or
push
mov
out
les
cmp
cli
jp
xlat
outsb
sbb
pusha
sub
push
lock
sub
jle
imul
lret
out
cmp
dec
loop
cmp
pop
lods
ds
xorl
lods
pop
lcall
push
in
ret
adc
ds
bound
cmp
cmp
mov
push
mov
adc
inc
lods
inc
jb
dec
out
pushf
dec
loop
xlat
pop
enter
sbb
cmpsb
jle
mov
fs
fwait
insl
mov
shlb
arpl
lret
bound
xor
es
dec
adcb
jmp
jle
lods
xor
loop
scas
jnp
and
ja
xchg
in
mov
pop
fdivs
aaa
sub
or
jge
lret
rolb
add
xor
jno
fmuls
push
loop
lret
popf
xor
and
adcl
cld
das
orb
mov
movsl
pusha
notl
pop
mov
add
fimull
mov
jae
lods
inc
pop
adcl
je
sbb
iret
and
ficoml
lds
cwtl
das
mov
stc
xchg
leave
stc
mov
mov
mov
cli
mov
mov
jecxz
in
pop
icebp
inc
push
test
xchg
mov
out
mov
pop
loop
mov
fimuls
cli
ds
add
mov
xchg
xlat
mov
inc
fdivl
pusha
test
pop
jmp
cmp
mov
scas
dec
sbb
ja
mov
mov
rclb
rcrb
testb
inc
sub
pop
lock
pushf
mov
push
jmp
or
insl
pop
mov
xchg
lea
mov
fnsave
test
sub
or
mov
pop
scas
lods
sub
mov
add
xor
lods
inc
push
push
imul
test
leave
jmp
cmp
inc
les
outsl
sub
pushf
popf
fidivl
mov
clc
xchg
es
add
inc
push
mov
pop
mov
lea
mov
in
sbb
rcrl
or
loopne
adcl
xchg
jecxz
inc
adc
aaa
into
imul
cmpl
mov
and
sub
je
inc
fnsave
aam
sti
add
dec
sbbb
xor
cmp
xchg
ret
push
sbb
xchg
cs
pop
fsubrs
cmp
imul
adc
vmread
lret
testl
movsl
dec
push
ds
mov
scas
adc
mov
push
jno
std
mov
leave
add
adc
ds
in
add
mov
leave
xlat
outsb
sti
adc
faddl
lds
mov
pop
lcall
mul
sub
loopne,pt
pop
rcrl
mov
aam
test
pushf
sar
push
das
repnz
js
inc
fimuls
lret
dec
in
in
mov
push
mov
pop
mov
das
mov
mov
mov
dec
out
pop
lds
call
pop
adc
push
cmpsl
and
pop
xchg
iret
sbb
sbb
scas
inc
pop
pop
add
fildll
ret
cmc
add
adc
ret
push
add
pop
mov
push
jecxz
inc
faddl
or
idivb
pop
adc
enter
rorb
std
xchg
jl
push
ljmp
hlt
mov
js
loop
xchg
sub
loope
inc
shr
xor
pop
adc
lea
shll
mov
mov
pop
scas
loope
clc
or
or
pop
pop
scas
mov
sub
sub
mov
lods
fwait
adc
and
xchg
lahf
movups
jmp
add
xor
movsb
pop
pop
xor
mov
mov
movsb
aam
xlat
lcall
xor
mov
mov
or
dec
aam
es
xor
or
mov
sub
mov
xchg
sub
movl
inc
mov
into
mov
rcll
jl
loop
aaa
adc
pop
xchg
aaa
into
outsl
mov
shlb
pop
call
add
sub
ds
jns
cs
aas
sbb
hlt
fistpll
rcrb
enter
out
aad
pop
imulb
ret
clc
cmc
call
nop
daa
dec
jmp
mov
addr16
mov
loopne
rclb
aaa
into
test
pop
out
aas
mov
lahf
sub
xchg
movsb
mov
jle
fidivl
and
hlt
pop
mov
mov
jge
jns
push
out
mov
pop
cli
out
xor
adcb
nop
add
fdivs
jmp
repnz
and
cmp
leave
dec
inc
fidivrs
jmp
sbb
adc
adc
push
test
fwait
push
filds
adc
push
cmp
outsb
insb
push
jo
mov
rolb
sahf
add
xlat
popa
sub
rcll
aaa
into
test
aaa
into
add
xor
movsl
cmp
aad
lret
lds
fs
cmc
xor
in
pop
mov
adc
cmp
push
shrl
rol
fidivs
test
sbb
jge
clc
pop
xor
dec
adc
mov
fwait
sub
mov
leave
pop
icebp
cli
mov
inc
sti
pop
bnd
cltd
xor
int3
ds
lret
push
ljmp
and
les
push
jmp
xor
and
jge
push
jmp
cwtl
fs
mov
aam
imul
push
popa
clc
aas
daa
es
js
dec
jecxz
xchg
pop
hlt
mov
and
add
loope
sub
lock
push
mov
lret
loop
loop
or
dec
es
nop
ds
loope
mov
and
push
sub
ret
pop
movsl
inc
pop
hlt
jbe
arpl
jbe
cli
xchg
shlb
xchg
data16
popf
xor
ja
xor
cmp
ja
ds
lahf
fdivl
lcall
sub
outsl
push
inc
inc
sbb
js
or
xor
sbb
xor
fsubrs
nop
pushf
xor
int3
imul
jmp
rcrb
mov
fdivl
cs
mov
movsb
cmp
push
jmp
mov
push
pop
dec
xor
in
imul
sti
xchg
or
nop
daa
lods
and
int
cmp
scas
std
int
out
enter
and
xchg
adc
adc
or
mov
and
push
cmpsb
push
out
sbb
sub
adcb
mov
repnz
inc
fstp
sbb
ret
dec
out
enter
lret
bound
mov
push
popf
sub
or
dec
pop
mov
dec
arpl
sahf
or
pop
dec
pop
lods
and
pushf
xchg
sbbl
dec
stos
lods
inc
fnstsw
xchg
insb
cmc
dec
loop
lahf
mov
addl
mov
frstor
sub
daa
pop
call
andl
jle
xchg
testb
daa
cmpsl
inc
fcoml
push
lods
inc
andb
mov
stos
stos
inc
sbb
jbe,pn
mov
shrl
rol
sub
iret
add
ja
lret
bound
ja
pop
push
imul
mov
mov
lods
inc
or
xchg
dec
loop
cmpl
scas
imull
call
jmp
rcr
adc
inc
inc
psllw
mov
leave
in
test
sbb
mov
inc
fdivl
int
insl
sub
sahf
sbb
nop
mov
mov
int3
add
add
sbb
lea
mov
leave
mov
xchg
sub
jo
shll
adcl
subl
lahf
loope
int3
arpl
scas
imul
add
push
mov
inc
push
lods
inc
mov
push
xchg
mov
dec
in
cld
in
xchg
cs
mov
cmp
and
or
aam
dec
out
xchg
in
fisubl
cmp
imul
sbbl
sub
fsubrl
push
loope
dec
loope
in
in
jg
test
fimull
mov
push
mov
lret
das
pop
mov
rorl
cmpsb
ret
daa
inc
fcomps
clc
in
out
movsl
out
jne
int
sbb
sbb
mov
daa
mov
mov
sarb
mov
push
in
and
icebp
mov
daa
mov
sub
lret
scas
xor
loopne
clc
jge
xlat
cs
xor
repz
test
repz
ret
add
out
xchg
sub
ja
sbb
test
leave
out
mov
mov
mov
mov
mov
into
gs
xlat
outsb
cmp
imul
lahf
lcall
mov
movsl
mov
incb
stos
add
xor
xchg
cs
dec
xor
jle
adc
lret
ja
loope
inc
adc
movsb
cmp
sbbl
dec
fnsave
out
mov
push
movsl
fisttps
outsl
inc
cmp
push
and
mov
aad
clc
or
and
push
mov
add
mov
lds
imul
inc
fstl
pop
scas
ss
js
dec
fnstenv
movb
cmp
and
lods
outsb
lds
adc
loope
enter
add
fbld
mov
mov
mov
xchg
sbb
jg
adc
xchg
and
sub
outsw
mov
pop
cmpb
or
sub
shl
imul
aas
mov
out
stos
test
iret
inc
or
jg
mov
mov
mov
jg
std
xchg
mov
sbb
pop
sarl
das
filds
ds
inc
dec
ds
jno
pop
jmp
adc
ds
or
lock
adc
les
xor
adc
inc
push
mov
test
mov
mov
cli
xor
movl
add
add
out
test
push
pop
jns
clc
icebp
leave
imul
iret
xchg
divb
das
pop
sub
sbb
sub
testb
pop
fstpt
jo
clc
mov
xchg
mov
cwtl
scas
int3
mov
lahf
mov
popf
stc
jle
ljmp
ret
stc
repnz
sub
push
and
xor
inc
pop
fmuls
dec
inc
add
pop
pop
add
cld
push
outsb
jp
lea
loop
push
jae
jnp
dec
push
enter
cmp
pop
xor
push
or
xchg
ret
adc
dec
mov
push
lcall
in
mov
mov
mov
cwtl
sbb
int3
mov
push
mov
mov
inc
add
xor
flds
insl
xchg
or
test
jl
loop
icebp
jmp
cmc
aam
scas
jge
push
and
popa
insl
xchg
popf
les
pop
dec
pop
jp
push
xor
cmc
push
shrl
lds
ljmp
sbb
push
stos
mov
push
jmp
and
mov
dec
sbb
cmp
ss
sbb
push
pop
out
mov
mov
or
mov
xchg
sub
lods
fnsave
mov
addl
shlb
push
outsl
push
test
mov
and
dec
mov
inc
sub
leave
popa
in
cli
xchg
and
jmp
scas
je
pop
sahf
mov
and
jmp
incl
xor
jb
div
stos
inc
and
xchg
sub
leave
pusha
jne
mov
sahf
xchg
out
enter
icebp
jmp
out
xchg
and
or
cs
clc
lcall
adc
pop
jne
stos
je
xchg
adc
ficoml
xor
inc
sti
scas
inc
sub
dec
int
loop
lahf
mull
jns
es
adc
js
int3
lods
inc
call
int3
arpl
sbb
jae
test
adc
fistl
xor
inc
cld
scas
inc
arpl
xchg
dec
int3
movl
fidivs
adc
push
ljmp
jno
js
mov
stos
test
adc
sti
pushf
mov
and
sarl
test
out
rol
pop
clc
icebp
testb
inc
adc
je
add
mov
push
out
adc
inc
cmp
imul
or
jl
pop
ret
inc
icebp
adc
or
mov
adc
and
or
and
cld
test
shll
push
xor
ss
mov
test
shll
stc
fildl
jb
sub
push
push
pop
insb
add
mov
and
mov
inc
xor
push
pop
mov
loop
bound
add
cs
push
mov
push
and
pop
mov
pop
icebp
stos
hlt
pop
hlt
and
inc
jnp
js
xchg
cs
cltd
cltd
xor
jae
dec
movsl
in
mov
push
shrl
aas
aad
jno
repnz
mov
insl
adc
push
shrb
icebp
aaa
das
push
mov
mov
inc
stos
mov
mov
lods
outsl
lds
cmc
popf
fdivl
data16
mov
and
nop
sbb
outsl
int
addr16
cmpsl
ret
int
js
sbb
clc
sbb
or
fwait
mov
dec
stos
sub
inc
cmc
popf
jae
icebp
lret
adcb
mov
loope
inc
into
jnp,pn
movsb
xchg
cmp
and
inc
fldl
inc
mov
aad
jno
fst
and
jp
mov
sbb
call
aas
jge
cmp
scas
sub
add
in
cmc
inc
cld
mov
pop
mov
sbb
pop
sbb
dec
jge
cli
lods
insb
popa
negl
sarb
and
xor
push
mov
rcr
divl
popl
repnz
adc
cwtl
adc
ljmp
in
aas
add
xor
jae
scas
push
insl
add
mov
nop
sub
icebp
test
es
dec
mov
enter
aam
add
lea
or
test
sub
jo
xor
add
mov
pop
in
sub
dec
in
dec
fcomip
mov
or
cmpl
push
mov
dec
jae
jae
mov
rolb
movsb
shr
pop
mov
outsb
aaa
pushl
sbb
loop
fnsave
dec
add
lcall
out
xor
imul
rcrb
jecxz
sub
subb
mov
shll
sbb
mov
outsl
cmp
sahf
sub
xor
push
stos
popa
jl
and
and
mov
sub
outsb
inc
test
add
xor
hlt
mov
xchg
mov
lea
cld
pushf
xchg
ret
or
in
adcb
outsb
xchg
mov
inc
dec
in
sub
xchg
loope
enter
fnsave
sub
sbb
jg
out
pushf
cmpsl
ret
imull
mov
data16
test
dec
mov
cmpsl
or
pop
fiaddl
push
ror
xor
lock
mov
in
dec
hlt
movsb
dec
push
dec
cmpsl
xor
fnstcw
add
sti
stos
fs
sbb
and
xor
into
jae
stc
inc
add
ja
and
cmpsb
stc
or
mov
lcall
addr16
jbe
shrb
or
pop
jge
sti
sub
test
bound
inc
dec
sbb
lret
movsl
push
mov
inc
cmp
out
lahf
push
ja
iret
xchg
in
aas
out
loop
pusha
inc
aad
orl
pop
mov
adc
shrl
xchg
adc
mov
xchg
pop
pop
mov
add
sbb
pop
rorl
pop
adc
test
imul
jmp
mov
sbb
cld
mov
dec
dec
sbb
aaa
cltd
mov
stos
in
test
inc
or
mov
xchg
mov
std
pusha
aad
cmp
push
loop
pop
sbb
and
lea
fadds
out
shll
fbstp
std
imul
aaa
sub
stc
pop
cmp
clc
xor
pop
or
dec
xlat
ja
pushf
js
or
andl
fs
fisttps
mov
push
push
xchg
inc
mov
pushf
subb
test
mov
mov
adc
push
imul
shll
xor
loope
xchg
pop
sub
push
rolb
cmpsb
or
arpl
jl
mov
jnp
aam
gs
pop
dec
cmpsb
aaa
fidivl
js
data16
adc
sub
fs
or
cltd
icebp
fwait
sti
pop
adc
fwait
cmp
mov
fadds
out
fsubr
xor
sub
mov
inc
test
fcoml
xchg
addl
addr16
sbb
or
push
pop
pop
lcall
jg
rcl
les
xchg
por
lret
xchg
inc
inc
mull
push
fwait
adc
mov
mov
mov
sbb
push
aaa
insb
ds
lret
ljmp
dec
fxch
xchg
inc
icebp
push
stos
sub
lods
test
xchg
xor
nop
ds
push
adc
dec
dec
call
and
or
loop
pop
sti
cltd
add
leave
push
lds
and
pop
adc
jl
rclb
sarb
fs
ljmp
lret
cwtl
mov
push
movsb
sbb
sub
mov
jnp
dec
shl
mov
xchg
test
test
jmp
aad
rcrb
outsw
sub
sbb
xchg
and
ss
jb
push
push
iret
insl
stos
and
mov
sahf
das
pop
cmp
jmp
sbb
adcb
jb
insl
lods
add
sbb
push
inc
and
into
leave
popa
loope
push
adc
popa
push
lock
movsb
stc
mov
mov
mov
or
insl
add
test
mov
out
testb
cwtl
cmp
pop
cwtl
cmp
loope
repz
incb
adc
stc
pop
fisttpl
fisubs
aas
and
push
jle
out
xor
sahf
lock
mov
push
mov
test
call
add
test
mov
xchg
inc
pusha
add
xor
sub
adc
add
and
push
or
aas
xchg
mov
mov
inc
fcomps
call
subl
jns
decl
dec
adc
pop
outsb
cmc
jl
fldl
mulb
mov
lods
icebp
pop
jae
dec
add
push
int
push
adc
daa
xchg
mov
xchg
pop
add
jo
iret
popf
jmp
inc
stc
int
fisubl
ljmp
cltd
or
out
fldl
xchg
push
inc
clc
stos
ljmp
mov
jge
mov
xor
sahf
and
sahf
iret
adc
xor
push
cmp
dec
aaa
jmp
sbbb
mov
mov
cmp
js
xchg
lds
dec
jae
clc
jmp
add
out
jne
inc
jle
inc
pop
push
cmc
mov
mov
fisubrl
adc
inc
fldcw
or
jle
orb
mov
lcall
in
mov
mov
add
xchg
cwtl
in
gs
pop
enter
cmpsb
xor
or
daa
sub
scas
jg
into
mov
adc
or
jns
jmp
xchg
out
xchg
insl
adc
lds
sbb
pop
pop
inc
ja
sbb
inc
push
inc
mov
xor
cmp
jnp
jp
mov
pop
inc
mov
xor
ja
push
imul
dec
sahf
mov
dec
loop
mov
jbe
add
leave
js
aad
rcrb
movsl
dec
repz
mov
xchg
sbb
lret
bound
ljmp
inc
dec
mov
mov
inc
rcll
pop
jecxz
rorb
jle
mov
pop
lods
lods
sbb
push
loop
and
outsl
jmp
pop
sahf
add
loop
xor
cmpl
xor
xor
out
or
ss
aad
loope
cmc
insl
add
pusha
xor
outsb
sub
pushf
scas
cs
fistpll
dec
in
adc
add
jnp
xchg
sahf
xor
out
mov
mov
insl
pop
aas
mov
pop
hlt
fsubp
push
int3
adc
jl
cmp
scas
call
rcrl
dec
sbb
js
dec
lds
pop
jl
pop
dec
push
fmuls
inc
mov
dec
jg
fwait
xor
mov
movsl
pop
mov
clc
mov
mov
jecxz
cwtl
das
jmp
es
lods
inc
fcmovnu
pop
aad
xchg
stc
das
mov
mov
push
adcb
push
adc
aad
xor
mov
mov
in
dec
fidivl
std
insb
add
popf
clc
iret
push
mov
xor
lods
and
lret
jae
pop
sub
in
jl
jo
sbb
mov
and
ds
loope
popa
adc
call
adc
mov
nop
test
js
mov
cmp
mov
in
inc
dec
pop
rcr
inc
push
pop
dec
shr
ret
ss
outsb
cmp
jo
sub
xchg
jp
xlat
mov
push
orb
cmp
mov
mulb
xorb
sahf
sahf
clc
xchg
fs
ror
mov
mov
rcrb
fistpl
fildll
int3
mov
mull
sbb
xchg
decl
imul
push
sbb
das
mov
cmpsl
adcb
pop
inc
mov
loope
xchg
mul
jp
mov
add
cmp
pop
mov
pop
cmp
mov
cmp
icebp
loope
pop
bnd
jns
xor
jns
ret
push
xchg
cs
xchg
cs
test
mov
imul
shrl
dec
icebp
mov
mov
cmc
sub
les
dec
loop
lcall
pop
mov
cmp
cmp
les
pop
stos
inc
mov
jecxz
dec
scas
leave
pusha
insl
pushf
xor
cmpsl
ds
orb
imul
js
cmp
out
test
cmp
xchg
stos
mov
psubsw
cld
xchg
mov
fildll
xor
pushf
xor
sbb
lret
sub
jbe
xchg
sub
cwtl
pop
or
imul
sub
clc
into
mov
lahf
ss
push
insl
inc
aaa
dec
in
call
and
jge
popf
xor
mov
std
scas
xchg
fistpl
pop
out
jg
xor
mov
and
dec
sti
xchg
jp
int3
arpl
push
arpl
inc
or
ss
aas
or
pushf
insb
mov
out
iret
incw
mov
mov
movsb
and
sub
jle
mov
cltd
dec
pop
dec
loopne
in
loopne
sbb
mov
xchg
sub
rcll
adc
xchg
inc
js
jge
pop
scas
sbb
dec
inc
test
cmp
mov
fmuls
ds
outsb
mov
pusha
test
repnz
xchg
mov
pop
popa
clc
nop
cmpsb
adc
lret
test
mov
lret
adcb
rcrl
hlt
fiadds
iret
xchg
es
loope
rclb
jp
je
dec
in
xchg
dec
filds
or
mov
rol
pop
clc
mov
jge
fisttpll
cmp
pop
pop
testb
pop
jo
inc
bound
pop
sahf
push
xorl
hlt
repz
mov
push
lods
inc
mov
testl
int3
cmp
enter
ficoml
xor
fisttps
add
jecxz
mov
dec
add
movsb
jne
sub
mov
out
sub
mov
mov
lret
mov
pop
mov
xchg
sub
and
or
pop
lock
je
in
fdecstp
std
xchg
mov
mov
push
es
sbb
and
scas
or
push
out
call
sub
aam
sbb
out
pop
icebp
ret
or
jp
add
test
inc
mov
lahf
and
scas
popa
sar
mov
jmp
dec
rol
pop
andb
out
xchg
int3
call
in
mov
out
xchg
mov
jge
outsb
xor
xchg
cmpsb
or
xor
mov
mov
jg
in
push
lods
ficomps
stc
nop
icebp
outsl
fdivl
adc
movsl
js
pop
setge
cmp
mov
jmp
and
stc
nop
mov
fiadds
iret
xchg
pop
repnz
lock
adc
add
lret
xchg
jns
cmp
push
dec
daa
fnstenv
jecxz
mov
mov
push
jmp
mov
mov
push
pop
jbe
xorl
fs
jae
test
xor
mov
int3
arpl
stos
shrl
mov
sbbb
jg
xlat
lods
shr
add
fidivl
in
push
xor
jmp
or
popf
jnp
icebp
mov
popf
hlt
mov
scas
jecxz
xor
mov
ret
mov
mov
dec
aam
mov
loope
addl
lods
cmp
fnstenv
jb
int
or
sub
jnp
jg
adc
cmp
dec
xor
insl
movsl
call
jp
mov
fiaddl
lret
xchg
adc
aam
imul
or
adc
leave
orl
sti
adc
adc
pop
push
adc
mov
flds
lret
xorl
es
lock
mov
adc
mov
pop
push
movsl
mov
mov
xor
in
test
stc
sbb
and
mov
push
xor
xchg
jne
loope
mov
ret
jae
fidivs
xchg
shrl
cmpsl
in
sbb
fbstp
jno
loope
mov
cmp
cmp
adc
iret
pushw
bound
in
jne
and
shrl
mov
cld
popf
sbb
pop
lea
pop
data16
aad
and
pop
divb
xlat
mov
das
inc
lods
cs
add
mov
push
shrb
lea
mov
outsb
pop
adcb
add
outsb
push
mov
mov
cmp
xor
push
lcall
imul
pop
scas
jl
data16
inc
data16
lahf
lock
xor
xchg
push
and
cwtl
xchg
stc
mov
adc
mov
clc
cmp
push
call
lods
insl
mov
cwtl
xorb
arpl
cmp
test
mov
pop
xlat
xor
add
rclb
aas
ror
icebp
mov
fistpll
shlb
lret
bound
das
loop
xchg
je
cmp
sub
cli
xchg
or
testl
das
imul
xchg
push
cmp
inc
and
pop
pop
bound
push
jmp
push
sbb
outsb
stos
pushf
xor
mov
jo
jo
adcl
lods
call
adc
inc
xor
aaa
inc
bound
cltd
xchg
shrl
es
das
pop
jp
jecxz
in
inc
fstpl
add
ficompl
and
lahf
mov
adc
push
inc
scas
inc
ss
gs
pop
rclb
xor
sub
pop
shl
sub
fidivl
fcmovnbe
insl
repnz
into
sbb
sbb
stos
dec
mov
sub
lret
sbb
sub
shrb
xchg
loop
int3
arpl
data16
je
call
pop
in
test
sub
lcall
xor
mov
sbb
dec
xor
inc
push
xchg
jl
add
cmp
sub
cmpsl
pop
xchg
insl
clc
out
inc
fstl
sbb
rorb
push
out
fs
nop
mov
les
sarl
iret
ret
dec
push
in
xor
cmpsb
push
out
imull
mov
es
das
pop
fwait
enter
adc
mov
roll
jle
stos
shll
jecxz
out
pushf
xlat
cmp
sub
add
out
pop
or
stos
jl
push
in
popf
stos
inc
setnp
jge
jno
sub
mov
lock
mov
enter
xor
ret
cld
and
mov
push
jmp
jge
sahf
xor
xor
scas
inc
movsl
enter
dec
in
mov
or
dec
or
fsubl
in
cmpl
xchg
sti
adc
popf
inc
sbb
mov
add
pop
je
push
and
pop
xchg
gs
loop
cmpsl
sub
mov
in
push
sbb
stos
lcall
into
jns
pop
stos
out
adcb
int3
cld
xchg
ljmp
mov
xor
xchg
xchg
jnp
push
mov
pop
xchg
dec
adc
or
testb
inc
nop
bound
scas
data16
adc
fnstenv
cmp
mov
xchg
xlat
outsb
add
imul
and
scas
mov
sbbb
dec
mov
push
cmc
icebp
mov
je
inc
push
out
pop
repnz
mov
mov
jno
pop
dec
or
dec
or
pop
add
xchg
sub
sbbl
xchg
sub
cmpsb
xchg
add
sub
dec
and
test
pop
mov
sub
xor
mov
stos
inc
fadd
pop
or
addr16
xlat
add
mov
push
lods
pop
rclb
test
lods
and
int
pop
pop
scas
dec
and
xchg
cld
fidivs
and
adcl
or
fcoml
xchg
inc
cmp
cwtl
lods
cmpsl
xchg
sub
pop
push
in
dec
scas
adcb
cld
pushf
xor
or
mov
aaa
xlat
push
out
dec
mov
repz
dec
lret
push
fldenv
lods
gs
jge
xchg
and
xchg
sub
inc
push
jmp
xchg
mov
dec
ja
popf
xor
cld
repz
ret
int
fsubr
sbbl
std
es
fwait
adc
lods
inc
mov
fadd
pop
push
stos
pop
icebp
fldt
testl
cmp
dec
icebp
adc
adc
addr16
in
arpl
mov
mov
sbb
mov
xchg
jbe
rcrb
pop
test
mov
inc
adc
mov
push
sbb
roll
stos
mov
sub
ret
and
or
jns
cltd
adc
lret
sbb
out
repz
das
push
push
stos
mov
sarb
insl
lods
mov
in
add
int3
je
mov
test
push
dec
jecxz
int3
lcall
push
ss
testl
add
mov
outsb
dec
add
xchg
es
lret
shll
mov
and
into
xor
xchg
dec
mov
ja
pop
test
pop
in
ret
iret
faddl
in
mov
hlt
push
mov
mov
and
andl
or
mov
and
inc
sbb
sti
test
cmp
add
jmp
sbb
fstp
push
out
aad
inc
loop
mov
pop
clc
mov
mov
scas
cli
xchg
cwtl
inc
xlat
in
and
push
test
dec
loop
cmp
mov
pop
test
montmul
cmpsb
inc
and
jb
push
mov
sbb
jae
lcall
xchg
dec
pop
mov
dec
loop
jle
xchg
mov
mov
pushf
loopne
xchg
ja
mov
movsl
cld
out
pop
sbb
sub
outsl
dec
rolb
les
sbb
lea
stc
aad
imul
notl
scas
aam
int
outsb
cmc
jno
daa
nop
shlb
loope
push
rcrb
xchg
dec
or
jns
add
xor
icebp
mov
jmp
aas
outsl
jno
mov
ret
mov
sbb
out
push
rclb
jnp
loope
pop
ror
push
fsub
pop
call
or
bound
popf
xor
divl
push
xchg
das
push
scas
inc
sti
mov
lcall
inc
mov
ret
stos
inc
xlat
mov
mov
sti
xor
arpl
pop
sahf
pop
sahf
int
sbb
enter
push
imul
mov
fidivrs
rcr
shlb
add
popf
and
lods
push
mov
pop
sahf
inc
mov
ss
xchg
rcrl
fcoms
jl
outsl
jno
and
adcb
lret
mov
mov
fwait
xor
adc
pop
scas
cmp
sbbl
imul
jmp
sbb
adc
mov
popf
inc
fisttpl
test
adc
stos
inc
xchg
fwait
xor
cmpsl
mov
ss
daa
icebp
mov
mov
cmpsb
and
cmp
shlb
fwait
mov
inc
fldcw
leave
insl
int3
arpl
inc
xlat
push
adc
adc
inc
fnsave
lcall
and
leave
pusha
lds
lret
push
fwait
xor
adcb
scas
xor
pop
jns
stos
imul
mov
pop
inc
mov
sub
push
cli
inc
fsubr
call
outsb
add
mov
shll
pop
repz
pop
rolb
ret
shll
add
and
pusha
mov
push
popf
mov
xchg
lea
cmpsb
or
xchg
adc
imul
mov
lahf
vpcmpeqb
fsubrs
movsl
sahf
adc
and
into
fwait
iretw
mov
out
in
test
ret
dec
mov
mov
and
jecxz
addb
je,pn
jb
and
cld
mov
pop
mov
mov
sub
pop
mov
add
stc
pop
popa
clc
dec
inc
cmp
rcrl
shrb
pop
push
out
push
jb
xor
fnsave
sub
int
mov
je
xchg
lahf
testb
std
sar
xchg
lds
jmp
mov
fbld
pop
add
shrb
dec
in
mov
push
mov
in
jge
mov
js
ret
mov
notb
fdivl
mov
push
xchg
arpl
imull
cmp
shrl
shr
jg
and
sub
mov
fbstp
fdivs
mov
loopne
jl
mov
add
mov
shrl
out
or
pop
xchg
adc
xchg
mov
pop
or
add
pop
adc
mov
cmpb
fdivrs
mov
mov
xchg
cmpsl
ds
jmp
test
out
jle
rorl
add
jge
and
daa
push
arpl
lahf
dec
movsb
cmp
es
stos
or
stos
int3
mov
xlat
lret
xor
fsubrs
add
enter
cmp
rcr
jae
jns
faddl
lcall
fs
cmp
sub
outsb
pop
lahf
outsb
cmp
sub
dec
inc
xlat
push
dec
mov
pop
inc
or
mov
sahf
xor
loop
into
gs
add
insl
arpl
dec
test
popa
adc
sub
shl
fsts
fdivl
dec
fidivs
icebp
cli
xchg
mov
mov
and
test
inc
shrl
add
mov
mov
jmp
pushf
stos
pop
jae
pop
int3
adcb
jle
test
add
xor
mov
push
pop
pop
out
mov
ret
adc
cwtl
adc
stos
inc
mov
xchg
and
mov
inc
sbb
sub
sti
cmp
pop
and
mov
mov
mov
loopne
mov
dec
out
in
outsl
sub
mov
shrl
stos
pop
scas
fistl
insl
add
cld
cmp
cmp
and
inc
mov
sbb
aaa
js
or
sub
test
push
or
sub
dec
mov
pop
or
inc
mov
mov
dec
lods
mov
pop
adc
rcrl
pop
inc
mov
add
dec
mov
in
test
sbb
push
push
xchg
fnstenv
pop
add
mov
test
xchg
gs
testl
mov
inc
jns
cmp
or
popa
mov
mov
inc
inc
mov
inc
fstps
xor
dec
in
xchg
mov
rorl
scas
inc
imul
adc
fcomps
mov
mov
pop
rcrl
pusha
negl
int3
es
jp
pop
enter
push
insb
lods
aas
out
xor
pop
bound
fldt
fisubl
sbbb
loopne
lea
adc
and
and
xor
movsb
mov
enter
insl
sub
out
lods
ret
add
iret
popw
add
mov
out
and
cld
jnp
pop
repnz
shr
add
lock
mov
or
adc
push
int
mov
inc
adc
mov
fdivl
sub
popf
mov
loope
and
inc
mov
shrb
lret
and
popl
mov
mov
inc
loop
es
jno
lock
out
es
jp
lods
imul
sarb
test
lahf
or
mov
ja
or
out
test
aas
jbe
addr16
xchg
cmp
enter
pop
ljmp
imul
outsb
mov
ret
fwait
out
cmp
popf
xor
pop
lcall
lods
lods
inc
filds
fdivl
dec
pop
cmp
popa
clc
mov
aam
mov
fbstp
ja
xchg
push
scas
repnz
loop
lcall
pop
mov
sub
cmp
fildl
sahf
or
lock
subl
imul
mov
mov
pop
cmpsb
jbe
sbb
clc
pusha
cmp
loopne
push
push
ljmp
sub
pushf
cmp
push
test
inc
pop
xor
inc
xor
cmp
pop
into
ret
xor
cld
xchg
adc
cwtl
inc
mov
add
and
push
or
add
fisubrl
out
outsb
dec
jp
cltd
jno
push
jb
xor
lea
push
xlat
xor
dec
sbb
or
mov
adc
aas
inc
aas
das
std
pushf
sub
pop
out
test
sub
xchg
test
or
mov
push
daa
insl
mov
pop
xchg
outsl
and
in
test
add
test
fs
or
jns
mov
mov
mov
cmp
lea
mov
jl
jbe
sub
mov
inc
push
push
lret
js
pop
sub
pop
jle
mov
pop
dec
bound
insl
das
dec
jnp
inc
ret
jbe
sbbb
xor
out
and
cwtl
push
lods
or
negb
aas
pop
movsb
add
stc
push
loop
insl
mov
int3
dec
jge
cmp
icebp
rorl
sbb
mov
js
shlb
cmc
ret
aam
stos
out
mov
mov
loopne
dec
loop
orl
cmc
lahf
sahf
xchg
sub
sbb
push
movsb
inc
movsb
add
inc
adcw
mov
add
jp
xchg
clc
cmp
outsb
mov
dec
sbb
mov
dec
cmc
mov
push
push
int
fdivrl
cmc
out
in
or
mov
pop
or
adc
call
push
xor
jnp
insl
push
dec
loop
xchg
imulb
addps
and
push
jl
lret
mov
dec
and
outsb
imul
mov
ret
add
mov
ret
lret
bound
imul
sahf
pop
cld
sub
pushf
dec
jae
and
push
push
jnp
inc
push
lahf
xchg
popa
cmpsb
pop
pop
jo
cmp
imul
mov
mov
mov
mov
clc
sbb
pop
in
loopne
jp
ret
jp
adc
and
in
jns
ljmp
push
fwait
push
cmpsl
ret
in
call
mov
ds
hlt
jnp
out
adc
sbb
inc
inc
pop
aad
sub
mov
fcomps
leave
icebp
sub
fsubs
inc
jle
xchg
insb
mov
dec
jmp
or
jae
lods
jecxz
fisubrs
push
jmp
mov
or
adcl
push
pusha
scas
inc
fwait
mov
pop
inc
leave
mov
push
cmc
push
jno
mov
fbstp
cli
sbb
in
jo
lods
mov
sbb
stos
pop
and
bound
mov
inc
ss
xchg
je
mov
adc
aam
xor
outsl
movsl
data16
xor
xchg
ds
jo
cltd
xor
cmpsl
addr16
inc
mov
cmp
pop
or
jne
push
cmpsl
ss
sub
stos
inc
xlat
xchg
int
sub
mov
iret
dec
shrl
lock
inc
and
xor
jns
jge
dec
outsb
xor
mov
jp
jp
push
fwait
pushf
xor
scas
sbbb
adc
je
and
or
push
call
daa
pop
std
xchg
dec
pop
stc
push
ja
xor
in
pusha
bound
scas
lods
and
ret
std
mov
lock
xchg
jb
roll
jae
inc
movsl
add
movsb
jl
testl
lods
pop
mov
jecxz
adc
mov
jne
mov
test
les
sbb
ret
xor
xchg
sub
inc
sti
ret
sbb
loopw
mov
xor
fisubrs
cmpsl
jbe
xchg
es
sub
roll
into
cmc
xor
lock
cmc
mov
fld
mov
sbb
dec
inc
adc
gs
xor
sbb
inc
fisubs
add
jne
and
jns
jg
push
lcall
push
cmp
mov
cmpsb
fwait
inc
test
push
xor
mov
mov
sar
lcall
lahf
lock
cli
jb
sub
cmpsl
subb
gs
mov
adc
loop
sbb
fcompl
insl
mov
jecxz
shrl
add
and
movsb
xchg
xorb
xchg
mov
rorl
push
cmp
pop
cmc
sbb
mov
btrl
xchg
iret
dec
sub
push
adc
arpl
sbb
mov
xor
sbb
mov
mov
lods
popa
xchg
das
jbe
mov
cmp
and
xchg
mov
add
ljmp
aaa
sub
push
jmp
aam
int3
push
clc
cmp
mov
dec
stos
xor
xor
data16
inc
movsb
lods
and
loop
mov
test
pop
add
and
xchg
push
popa
sub
lcall
mov
pop
jge
addl
xor
fsts
mov
pop
shrb
jne
cld
pop
push
lea
mov
pop
push
sub
mov
mov
and
lock
je
cmp
and
push
add
sub
jl
cmp
out
test
pop
or
flds
mov
mov
lods
daa
outsl
mov
dec
cmpsb
enter
mov
dec
cmp
jle
getsec
shl
adc
inc
bound
adc
mov
xchg
pushf
insb
sub
lds
in
testl
ja
ja
jle
mov
pop
arpl
push
pop
inc
inc
pop
daa
xor
inc
in
sub
or
jl
iret
test
in
data16
rcrb
xchg
fcmovb
xchg
add
inc
mov
je
mov
jl
push
jne
call
fists
iret
jg
adc
pop
mov
out
mov
jl
adc
ret
fnstcw
popa
sbb
ror
jne
inc
sbb
push
int
faddp
incb
adc
daa
cmp
ljmp
mov
push
pop
pop
int
xchg
sub
pop
ss
jl
mov
pop
xchg
push
hlt
add
xchg
test
push
fstps
loop
out
fcoml
xor
test
add
stc
cwtl
add
jmp
cmpsb
sbb
push
outsl
movsl
sbb
lret
jns
mov
iret
cmp
outsb
shl
and
jns
xchg
in
jb
orb
push
dec
xchg
sub
pop
jne
mov
pop
in
pop
push
inc
repnz
popa
dec
in
jb
add
mov
sahf
or
mov
test
enter
xchg
leave
lods
fistpl
stos
daa
push
inc
mov
cmp
insb
xlat
sub
movsb
test
js
sbb
fs
fmull
adcb
mov
lods
sbb
push
pop
sub
jb
xchg
mov
pusha
cmp
mov
pusha
dec
fiaddl
mov
adc
or
sti
cmp
xor
cmc
jle
inc
frstor
vpcmpeqb
jne
mov
icebp
data16
mov
add
xchg
mov
dec
jecxz
xor
test
fwait
push
hlt
aad
jne
add
and
out
aas
mov
push
in
xchg
jno
sbb
xor
vpandn
xchg
xchg
jae
insb
pop
iret
or
in
jl
jns
lret
stos
push
push
cmpsl
xchg
cmp
lcall
pop
movsb
mov
into
gs
jl
pop
in
frstor
sub
fldt
add
mov
cmp
rcr
jecxz
in
test
mov
cmp
inc
scas
push
cmpsb
ljmp
incl
cld
sub
pop
jo
mov
push
xor
push
sarl
cs
xor
sarl
cmp
pop
out
or
test
push
and
pop
sahf
and
lea
in
fmuls
add
sbbl
daa
mov
das
push
in
inc
xchg
mov
lock
addb
mov
sub
pop
fsub
sti
sahf
jo
sub
gs
pop
xchg
das
jb
movsl
in
mov
adc
add
push
inc
inc
fidivl
xchg
repnz
xchg
add
jns
repnz
pop
dec
fsts
pop
in
push
xchg
xor
lock
subb
push
pop
adc
movsl
inc
jp
lret
cmp
loop
sbbl
mov
repnz
pusha
mov
popf
loop
mov
inc
xchg
mov
mov
lods
cmp
sbb
pop
scas
cmp
sbbl
xchg
lods
inc
cmp
subl
data16
jo
or
or
pop
adc
lret
leave
fidivrl
les
add
out
ss
jmp
mov
aas
mov
iret
pop
sbb
mov
mov
sbb
das
mov
push
jo
and
xor
test
je
sub
insb
sbb
inc
dec
lea
xor
xchg
addr16
aas
aad
out
jno
das
xor
pusha
push
xchg
jno
lcall
jecxz
dec
jmp
dec
repz
pushf
testb
aas
cmpsb
mov
movsl
popa
clc
aad
sti
and
popf
outsb
fs
shll
push
adc
cmp
and
idivb
jne
cli
mov
dec
ljmp
jp
gs
in
sub
sub
push
or
stos
out
jle
sub
mov
lea
les
add
cltd
xor
inc
fs
xor
mov
fisttpl
repz
stc
sarb
aaa
mov
imul
and
sub
ds
insb
jo
jmp
push
les
cld
xchg
adc
or
ret
hlt
out
mov
pop
mov
jl
jne
mov
lods
xor
xchg
mov
loopne
adc
push
popf
and
dec
pop
cmp
test
lret
xor
jo
jns
inc
cwtl
test
jno
pop
push
lds
in
cmpsl
add
out
ror
pop
add
sub
insl
xchg
out
add
dec
pop
mov
in
jge
cmp
shlb
les
imul
sub
subps
mov
and
and
imul
jmp
fdivs
aam
ret
negb
xor
stos
lahf
cmp
aam
xor
jae
fbld
pop
pop
lods
adc
and
inc
dec
xchg
inc
in
add
push
fdivrs
mov
cwtl
pushf
and
sub
sub
das
add
ljmp
jb
dec
movsb
aam
mov
iret
les
in
ret
inc
or
test
cli
and
aaa
or
push
mov
adc
test
insl
fwait
xor
popa
xor
test
xor
inc
arpl
adc
in
pop
inc
jg
jle
adc
pop
pop
mov
bound
sub
fdiv
jae
stos
sahf
test
push
cmpsb
push
xorb
sahf
mov
xor
jns
add
pop
in
out
jne
ss
or
call
and
cmp
je
or
cmpsb
out
enter
jl,pt
ret
clc
cmc
push
add
mov
xorl
aas
push
je
test
in
xchg
inc
aad
lds
cmp
mov
popf
xchg
and
fs
and
sti
adc
inc
and
adc
rcrb
or
dec
aam
cmp
and
fucomp
icebp
push
out
and
gs
xor
add
mov
clc
jo,pn
inc
jge
xor
sbb
fldt
add
mov
add
and
arpl
pop
inc
cmc
lea
fcompl
adc
ja
lcall
push
lret
lods
jb
xor
ss
outsb
adc
push
and
xor
pop
or
cmp
pop
jo
sub
in
sbb
test
daa
in
test
dec
jge
je
add
mov
mov
ret
xchg
bsf
divl
scas
imul
rclb
or
jo
sahf
and
insl
push
jl
out
bound
in
movl
mov
cmp
add
xor
loopne
add
cmp
sbb
lds
xchg
push
xchg
mov
lcall
mov
idivb
icebp
insl
jno
inc
cmpsl
dec
roll
jns
cmp
lods
cmp
xor
negl
inc
jne
mov
stos
xor
rcrl
push
mov
push
outsb
sahf
es
push
adc
iret
cmc
bound
xchg
jns
dec
adc
pop
push
fsubl
and
jae
xchg
adc
data16
mov
jbe
xor
in
imul
xchg
push
sub
pop
comiss
repnz
movsl
or
mov
ficoms
cli
or
stc
adc
xchg
sbb
cmp
fisubrl
sarb
scas
hlt
cmp
in
rcrb
pop
inc
rcrl
inc
push
aas
fistps
adc
adc
inc
or
push
sub
lea
mov
rep
lea
xor
inc
cmp
jne
xchg
pop
pop
dec
dec
in
cmp
push
fwait
dec
adc
outsb
fisttpll
cmc
inc
loope
push
fwait
jbe
xchg
pop
rorb
push
lods
xor
outsl
pop
or
stc
insb
push
popf
popf
sbb
into
cwtl
push
dec
mov
test
xchg
inc
leave
ja
mov
or
in
sub
xor
and
lret
jp
stc
movsl
jns
adcl
movsb
mov
inc
jmp
push
imul
add
ss
or
xor
ficompl
cmpsl
or
jb
inc
aas
je
sbb
dec
fstps
push
xor
dec
ss
adc
aas
adc
add
mov
call
mov
stos
adc
int
adc
xchg
clc
pop
jmp
dec
repz
into
gs
rcll
pop
add
mov
hlt
jmp
jmp
jp
in
add
es
cld
jns
mov
and
scas
inc
push
lock
fiadds
lcall
dec
fildll
push
add
fsubrs
decl
jl
dec
scas
int3
push
loopne
xlat
shlb
daa
fbstp
xchg
sub
cmc
fbld
rcll
push
js
cld
push
push
inc
loope
jns
mov
fs
pop
push
mov
insb
into
sub
jae
out
mov
leave
jmp
divb
xor
push
pusha
inc
cmc
imul
out
pusha
xor
cmpsl
stos
cs
and
cmp
mov
loopne
shl
inc
mov
mov
xorl
idivb
ja
into
pop
stos
lret
sub
inc
push
gs
mov
sub
mov
adc
xor
push
leave
shrb
mov
aas
lret
cld
pusha
sbb
jo
fsubs
push
or
xor
xorb
mov
push
jecxz
inc
pop
loopne
mov
xorb
pop
loop
testl
xchg
fists
pop
inc
std
cltd
mov
in
sbb
outsb
fidivrl
sub
jmp
inc
mov
mov
cmp
movlhps
sub
jle
sub
xor
lret
loop
jb
fsubs
fwait
mov
and
pop
outsl
mov
jge
repnz
pop
pusha
inc
aas
test
lret
adc
xchg
and
add
xor
movl
add
mov
pusha
add
pop
inc
stc
leave
in
ret
cmp
dec
loope
mov
mov
mov
cwtl
dec
ljmp
mov
and
daa
mov
bound
ret
loop
dec
inc
inc
in
aam
and
rclb
pop
cmpb
mov
xchg
call
lods
add
dec
add
pop
out
rclb
add
mov
push
xor
ret
mov
sbb
jnp
std
xchg
inc
cmp
cmp
imul
jle
mov
addr16
jno
inc
sub
loopne
push
dec
jns
leave
int
cmpb
and
mov
loop
pusha
xor
int3
push
hlt
aad
and
mov
push
jo
push
test
and
adc
inc
xor
adc
cld
pop
jle
stc
dec
insb
inc
mov
or
sub
enter
push
jl
xor
gs
rolb
sub
repz
xchg
test
adc
and
mov
add
mov
xor
incl
push
mov
adc
adc
lock
and
cmpsl
outsl
roll
mov
adc
loopne
mov
aad
xor
pop
cltd
rcrl
jae
mov
push
push
cmp
mov
cltd
mov
lods
aas
shll
mov
or
mov
pop
adc
imul
mov
in
xor
xchg
ret
inc
adc
mov
ljmp
aas
rcll
mov
and
lea
add
es
pmulhw
push
out
push
xchg
ja
mov
ret
ret
push
sahf
subl
or
shlb
addl
dec
jmp
test
mov
mov
iret
aad
lods
jle
mov
mov
aam
mov
repnz
adc
out
jle
lea
push
popf
negb
dec
aam
fstpt
mov
outsb
sbb
add
add
push
adc
cmpsl
nop
aam
and
xor
xchg
jno
ss
pusha
sbb
mov
cmp
xchg
push
push
xor
test
adc
xchg
mov
cmc
movsl
test
repz
lods
inc
or
cmp
xchg
sub
jg
fdivs
add
xchg
stos
and
jecxz
insb
rcrl
clc
dec
xchg
mov
pop
inc
iret
test
jo
xor
fidivl
fiaddl
aad
leave
shlb
mov
xchg
dec
jg
sbb
lret
cltd
cltd
pop
cld
aam
jnp
mov
js
ljmp
or
mov
pop
out
cmc
test
fdivl
push
pop
das
xchg
iret
call
leave
popf
sbb
int3
sbb
mov
sbb
and
mov
xlat
not
mov
push
jnp
js
xchg
lods
mov
sbb
sbb
lods
test
lret
loopne
and
mov
sub
pop
scas
mov
add
xor
sahf
cmpsb
xchg
inc
mov
push
sbbb
jbe
and
stos
data16
stc
ja
test
cwtl
dec
iret
sbb
test
mov
push
cmp
mov
xchg
jno
and
out
xchg
pop
loop
cmp
push
movsl
dec
pop
add
lcall
loope
cmp
das
push
imul
andl
paddq
sub
jle
lock
stos
push
popf
shll
cmp
repz
test
adc
sub
mov
outsl
sar
add
pop
imul
inc
pop
arpl
insb
cltd
xor
jecxz
icebp
sti
jo
cs
xchg
push
and
push
divl
pop
idivb
and
icebp
xchg
icebp
or
addr16
pop
jbe
test
dec
nop
xor
dec
jl
jbe
cmpsb
sarl
loopne
aad
das
sti
vpaddsb
in
or
jbe
push
sub
push
xor
push
aaa
mov
loope
push
pop
movsl
lock
pop
and
xchg
ja
push
ja
stos
dec
call
test
push
lds
outsl
add
es
pop
jl
xor
or
daa
adc
xor
sti
popa
cltd
mov
addr16
sub
fmull
and
scas
inc
inc
or
adc
xor
jp
pop
push
nop
jns
shrl
cmpb
adc
or
ffreep
mov
enter
and
fcomps
inc
loop
cmp
sbb
psllq
adc
ds
add
mov
xor
int
dec
fildl
mov
repz
push
jnp
or
push
pop
iret
mov
jmp
imul
pop
iret
add
inc
xor
dec
iret
ret
push
ss
or
rcrl
out
ret
outsl
jmp
nop
dec
flds
pop
mov
mov
jmp
aaa
mov
fldcw
pop
insb
inc
add
pop
test
fdivl
adc
scas
xchg
cs
int3
aad
out
test
stos
mov
fisubrl
jne
mov
test
or
sti
ss
pop
sub
subl
push
mov
push
repz
fsubl
adc
rcrb
mov
jo
sahf
fmull
or
stos
and
popf
ficompl
push
call
xchg
push
aas
dec
jnp
call
dec
xor
imul
lds
add
sti
or
ret
sub
sbb
jnp
das
mov
imul
pop
clc
les
mov
fistpl
inc
pop
xor
popa
jns
push
mov
sbb
jmp
and
cmp
movsl
dec
pop
or
mov
mov
lods
lahf
xor
sbb
lea
sti
mov
jmp
pop
test
jbe
data16
inc
aad
jbe
ss
and
hlt
sbb
xlat
adc
out
xor
in
inc
jge
loop
outsl
add
sub
mov
push
xor
aaa
rclb
cld
or
js
adcl
mov
clc
xor
cwtl
int3
iret
xchg
addr16
or
addl
fstpt
adc
sub
xchg
sbb
xor
rcrl
mov
and
sti
cmp
loop
adc
sarl
add
mov
mov
fcompl
ja
pop
jo
lods
sbb
imul
add
jg
dec
cmp
fwait
dec
add
packsswb
and
mov
sarl
inc
xor
pop
cmp
and
and
xchg
sbb
test
sbb
and
jnp
or
jae
sub
mov
add
inc
xor
jg
into
cmp
loop
lcall
xchg
mov
and
aam
repz
lret
pop
enter
out
xchg
adc
or
jns
dec
ret
pop
imul
inc
xor
xchg
lea
out
int
cmc
mov
sub
lret
shl
les
fidivrl
pop
test
call
mov
mov
fmuls
shlb
cmpsb
push
insl
pop
icebp
cmp
cltd
lcall
mov
jb
mov
scas
jmp
or
adc
mov
repz
cs
hlt
mov
outsb
in
movsl
inc
mov
imul
enter
mov
and
push
cmpsl
and
std
aad
mov
sub
les
lds
test
shl
pop
enter
aaa
fs
cmp
pop
ret
cmp
xor
adc
mov
test
pusha
stos
outsb
sbb
inc
mov
inc
xor
test
lret
icebp
cmp
subb
mul
dec
pop
and
mov
pop
out
fdivl
pop
rolb
sub
cmpsb
gs
clc
xchg
outsl
dec
jne
mov
es
fs
dec
xchg
mov
arpl
repnz
cmc
pop
shrb
cmpb
addr16
sbb
pop
js
stos
sar
jge
inc
and
stc
ror
jecxz
rclb
stc
or
arpl
stos
push
and
xor
jg
gs
test
adc
mov
out
dec
pop
push
push
inc
jl
subb
lea
lcall
cmp
inc
je
add
insb
outsb
cltd
fidivs
add
faddl
jae
dec
cmp
lods
jge
pop
push
cltd
dec
daa
cmp
mov
enter
push
in
adc
out
faddp
loope
fisttps
mov
inc
lods
sub
mov
lock
or
cmp
jg
int3
mov
lret
into
bound
mov
loopne
ja
inc
movsl
push
jmp
ror
push
adc
cli
push
mov
clc
aaa
js
pusha
jl
test
jno
mov
jle
stc
mov
jl
fldenv
mov
xchg
xchg
inc
xlat
call
or
cmp
hlt
hlt
jle
mov
fldcw
test
mov
xor
je
jmp
out
aad
loopne
jecxz
stos
adc
fdivp
sbb
mov
inc
sub
xlat
out
mov
shlb
rcll
sbb
and
cmp
add
mov
mov
push
in
fs
mov
gs
xor
rorl
orl
or
mov
xchg
testl
dec
scas
cmp
jne
pop
ss
cmp
cmc
mov
in
push
pop
sub
ret
fldl
dec
test
inc
repnz
clc
lds
jb
push
push
andb
mov
rorl
leave
xor
dec
adc
xor
cmp
test
jl
cmp
jg
rep
inc
movsb
or
push
mov
enter
leave
jb
aad
pop
sti
sar
adc
inc
and
or
mov
inc
fisubl
int3
jg
add
shlb
repz
dec
jmp
shlb
cli
mov
andb
xchg
xchg
mov
cltd
popf
xor
push
ret
inc
movsb
jg
incb
pop
fsubrp
in
les
aaa
adc
cmp
popf
mov
dec
adc
ss
dec
push
mov
mov
mov
mov
adc
jae
cs
adc
xor
push
in
xor
adc
iret
adc
daa
mov
ljmp
pop
loope
test
adc
xlat
bnd
and
xchg
idivb
push
decb
lret
cmpsb
mov
mov
aam
ret
xchg
push
fcompl
xor
cmp
inc
out
mov
or
shlb
and
add
jns
or
orb
jge
sub
int3
jge
sbb
or
dec
adc
push
and
mov
mulb
xchg
mov
repz
dec
add
cmp
mov
inc
and
mov
adc
sbb
mov
test
mov
jae
add
pusha
jns
cli
xchg
incb
shl
sbb
pop
xor
pop
scas
sbb
shl
jns
call
mov
push
push
outsb
push
cs
lret
xor
lcall
push
cmc
jmp
popf
xor
cmp
daa
lcall
aad
pop
pop
push
test
or
aaa
pop
stc
lret
mov
jmp
testb
lds
cld
dec
jecxz
mov
pop
jae
xor
movsb
gs
pop
repnz
movsl
pop
xor
mov
mov
xor
and
frstor
sub
xor
add
cmpsb
sbb
push
pop
lods
xchg
xor
xchg
movsl
inc
roll
push
fstl
lcall
or
daa
test
fcmove
mov
scas
and
imul
fsubr
stc
dec
loop
mov
sub
popa
and
cmp
inc
insl
test
cmp
loop
xor
addr16
in
shrb
je
bound
nop
icebp
mov
dec
in
icebp
out
sbb
fnsave
cmp
popf
push
jp
mov
and
cltd
inc
ds
pop
push
adc
in
xor
push
adc
aaa
mov
in
in
cmp
push
pop
and
lret
test
test
repnz
mov
pop
cmpsb
sub
out
jbe
shll
add
jle
xchg
xchg
xchg
pop
cmp
sbb
insl
pop
in
or
jo
les
mov
xlat
mov
int
pop
mov
pop
add
mov
cmpl
jle
pop
mov
jmp
dec
xor
jg
lret
cmpsl
dec
cmpsl
cld
adc
jmp
jle
outsb
mov
mov
iret
shll
jl
add
lahf
cs
add
adc
je
or
sarl
out
push
addl
stc
push
add
mov
push
jbe
and
ss
inc
pop
pusha
cmp
xchg
fimull
ss
sti
mov
scas
out
into
sbb
cld
xchg
mov
into
call
or
int
mov
push
fistl
cmp
cmc
out
lds
enter
and
jl
sbb
mov
stos
out
pop
repz
jp
test
dec
loopne
pop
pushf
fwait
repz
fs
adc
adc
mov
je
cmp
jno
pop
aaa
pop
fdivs
dec
or
cli
xor
std
xchg
lret
rorb
dec
lea
int
and
cmpsl
bound
rcr
or
into
pop
outsl
into
adc
bound
jecxz
aaa
push
adc
and
push
fdivrs
or
fcomps
outsl
and
sbbb
add
dec
ror
ret
decb
and
mov
pop
or
cmp
pop
xchg
sub
jb
insb
cltd
pop
jmp
dec
cli
add
insb
out
popf
and
or
inc
mov
test
fnstenv
aam
leave
pop
mov
mov
dec
mov
xchg
aas
lret
ret
xor
aaa
push
sbbb
xor
rclb
in
test
push
lahf
pop
lock
out
xor
fidivs
push
jne
outsb
pop
in
mov
scas
mov
lret
push
in
cld
push
mov
ss
xsha1
cmpsb
dec
ret
call
dec
inc
stos
jp
inc
add
fs
cs
lret
outsl
add
int3
or
sub
cmp
or
in
xor
scas
cmp
imul
cmp
cmp
push
in
pop
jp
test
ljmp
add
push
adc
sub
pop
cltd
inc
push
gs
imulb
nop
jge
es
and
sbb
pusha
leave
rclb
xchg
sub
frstor
mov
scas
adc
fs
xchg
cwtl
xor
in
jo
adc
mov
inc
mov
add
sbb
enter
or
cmp
ficoms
jbe
sahf
shlb
fldz
cwtl
pusha
or
divl
sti
int3
pop
insl
cmp
sub
cmp
mov
sahf
test
aam
sbbl
ficomps
ret
addr16
fimuls
jle
sbb
pop
push
nop
shlb
enter
cmp
je
dec
scas
leave
xchg
and
mov
xchg
lods
pop
cmpsb
das
fadds
jmp
lds
adc
jmp
mov
addl
mov
add
daa
cmp
sub
push
aaa
adc
xor
adc
cmp
pusha
jl
sub
pusha
lods
test
cmp
mov
pushf
cli
loop
test
popf
out
fchs
fisubl
mov
bound
loope
xchg
dec
in
dec
aad
out
pop
dec
test
ja
mov
mov
mov
jle
push
and
popf
cli
or
pop
test
sbb
xor
jecxz
push
pop
fbstp
cs
pop
dec
or
inc
mov
add
cmp
mov
pop
jb
push
mov
cmp
xchg
cwtl
add
movl
aaa
xor
out
inc
xchg
inc
push
leave
dec
sahf
jne
dec
sbb
fcompl
jecxz
mov
jmp
cmp
mov
je
out
ret
xor
inc
movl
dec
pop
add
cmp
in
ds
lods
mov
cmp
add
ficoml
adc
mov
leave
xchg
lods
sub
outsb
jno
loopne
push
fidivl
xorb
xchg
cmp
mov
ficomps
push
lret
jae
bnd
insb
aam
sahf
adc
jge
or
pop
call
fdivrl
repz
push
lcall
and
fnsave
dec
fsubr
es
fidivs
xchg
in
rcrl
pop
popa
or
sbb
iret
not
mov
jnp
ret
pop
inc
fmuls
dec
add
dec
fsubrs
adc
jno
jbe
mov
sbb
lds
das
in
mov
dec
pop
les
sub
out
ret
in
cld
pop
mov
jne
add
lret
mov
test
xchg
popf
sub
std
loope
enter
loop
cs
xor
jmp
or
out
xchg
mov
imul
loop
and
rcrl
lds
cli
xchg
mov
xchg
mov
adc
js
or
sub
aam
xchg
sub
inc
int
jbe
in
aas
lahf
pop
jns
loop
inc
jl
inc
pop
dec
in
iret
fsub
add
mov
rorl
fnstenv
push
ljmp
inc
lahf
testl
test
in
aam
mov
sub
add
in
or
cwtl
push
fsubs
into
inc
scas
outsl
mov
imul
jmp
push
xor
das
xabort
loope
push
jmp
jns
xchg
inc
cltd
mov
repz
dec
mov
mov
nop
lods
fsubrl
push
mov
add
mov
pop
sub
mov
inc
daa
inc
jg
mov
repnz
sub
dec
loope
nop
jmp
add
inc
pop
mov
push
aad
mov
cmpsb
sub
mov
mov
xor
fwait
jecxz
jle
mov
loopne
mov
mull
in
jb
inc
aam
mov
popa
cmpsl
aad
inc
mov
call
test
mov
push
mov
or
xchg
sbb
pushf
ss
lods
out
or
lods
insb
add
mov
jae
jne
jno
inc
fnstcw
cmp
dec
jecxz
pop
ds
lahf
popl
pop
outsb
cmc
cli
fldl2t
out
aas
daa
mov
movsl
movsl
cmp
jo
arpl
sbb
mov
pop
fwait
inc
mov
xor
xchg
adc
sub
movsb
xor
andl
shrl
add
inc
pusha
fidivrs
or
add
and
cmc
and
inc
xlat
int3
fidivs
mov
iret
jno
movsb
cmp
or
mov
negb
push
movsl
dec
mov
data16
loope
mov
fwait
push
or
cmp
daa
cmp
pop
mov
cmp
mov
inc
and
push
mov
sahf
sbb
lea
lock
dec
pop
jge
fptan
insl
iret
in
add
sti
nop
insl
bound
lahf
mov
sbb
or
xor
sbb
push
ds
push
clc
repz
pop
jno
sti
jp
sub
lds
sti
sti
repz
call
sbb
sbb
pop
scas
mov
ret
add
leave
inc
int
pop
ljmp
js
dec
and
lcall
cli
imul
add
mov
rcl
xchg
lods
mov
arpl
sbb
fwait
add
pop
push
cmc
or
out
ds
dec
in
insl
test
scas
repnz
repnz
dec
or
mov
js
dec
movsb
push
cltd
test
inc
xchg
pop
sahf
enter
ja
lcall
lret
add
rcrb
int
jle
in
scas
dec
or
cltd
cltd
push
setb
xor
mov
cli
clc
push
mov
mov
xchg
fists
outsl
rol
jecxz
insl
lock
ss
mov
jmp
push
dec
lods
sub
or
add
shrl
iret
xchg
pop
pop
jb
icebp
fidivl
and
test
cmp
imul
adc
aad
xchg
shr
test
mov
sbb
adc
or
stc
inc
mov
fldenv
mov
test
enter
popf
das
mov
mov
mov
sbb
and
in
jns
dec
add
inc
add
fildl
mov
add
xor
push
lods
push
int3
clc
cmp
mov
std
or
fdivl
roll
cmp
push
push
add
divb
push
sti
es
mov
mov
cvtpi2ps
add
sub
iret
loope
dec
mull
sahf
lods
pop
and
pop
loopne
xor
daa
add
jnp
int
ja
sbb
sbb
push
shlb
in
sub
mov
xor
imul
dec
adc
jo
xor
out
jmp
or
mov
loopne
test
mov
int
pop
push
pusha
test
lret
sti
push
mov
les
mov
and
and
push
push
fbstp
icebp
adc
in
std
xchg
push
xchg
jns
int3
aas
sbb
pushf
into
mov
cli
cmp
jg
and
pop
jp
cmp
nop
movsl
aad
push
pop
sbb
imul
pop
data16
sub
pop
pop
leave
test
daa
call
cs
sbb
adc
sub
out
inc
pop
pop
push
pop
pusha
daa
loopne
test
or
or
xchg
jle
popf
test
push
mov
jmp
jbe
and
nop
movsb
dec
cmp
loop
pop
cmpsb
and
aas
pop
aas
push
pusha
push
outsl
mov
lcall
xor
xchg
testl
xor
mov
sub
and
data16
xchg
stc
mov
mov
lret
je
test
cld
and
ja
in
pusha
mov
sbb
cs
das
mov
or
mov
pop
mov
xor
test
cmp
outsb
nop
sub
mov
mov
inc
out
and
sub
test
pop
add
flds
add
out
in
int3
mov
mov
les
inc
xlat
inc
bound
cmp
xor
jns
adcb
das
sbbl
add
int3
xor
lock
mov
pushf
dec
add
push
xor
pop
scas
mov
addr16
or
sub
incl
out
inc
or
call
dec
push
call
and
arpl
pop
clc
or
mov
out
dec
arpl
imul
jl
mov
mov
mov
and
jne
inc
sahf
mov
jne
or
imul
pop
or
and
push
adc
aam
mov
adc
adcb
sub
popf
pop
push
std
mov
jle
cmp
push
xchg
jns
das
stos
sbb
dec
icebp
cmp
mov
popa
mov
sbb
stc
test
cmp
std
aaa
sarb
inc
roll
cmp
int
lods
push
inc
sbb
push
add
test
js
jecxz
and
push
xchg
mov
jbe
data16
lds
cmp
stc
lods
or
daa
jo
insb
jg
int3
sub
std
jns
cmpsb
lcall
aas
repnz
mov
add
mov
fisttpl
rorb
fsubs
sbb
sub
sub
aas
push
xor
mov
or
add
stos
cli
divl
jo
mov
cmp
and
mov
mov
mov
lret
ljmp
push
lret
loopw
adc
mov
aad
imul
cmpsb
sbb
mov
add
std
sub
pop
sbb
pusha
jecxz
cmp
fimull
icebp
inc
dec
inc
ficompl
xchg
sbb
les
cmp
and
outsl
sub
mov
addb
mov
or
jmp
xchg
jmp
dec
sub
js
jno
jl
arpl
xchg
adc
mov
jae
mov
pop
mov
add
mov
push
xchg
xor
out
adc
aam
jmp
daa
lcall
sub
das
repz
and
loope
fcompl
pop
dec
pusha
mov
sub
inc
sbb
adc
xor
out
and
outsb
cmpsb
loopne
jmp
dec
jmp
inc
fdivr
xor
int
xchg
mov
scas
inc
mov
mov
ret
add
adc
sbb
shrb
cld
xchg
sub
pop
jl
ds
and
pop
xor
jecxz
mov
cmp
call
dec
push
pop
fwait
test
out
dec
push
mov
xor
fs
stc
fstpt
adcb
stc
je
mov
mov
je
cmp
dec
icebp
imul
dec
dec
pop
pop
mov
jmp
jns
outsl
mov
push
sub
add
popf
lods
dec
adc
inc
xchg
inc
ja
insl
fdivrl
push
push
out
loope
fcomi
cmp
xchg
push
adc
out
and
dec
xchg
jl
pop
call
sub
in
test
data16
dec
or
js
aaa
sets
xchg
xor
or
mov
sbb
pop
daa
xchg
out
mov
loop
mov
dec
mov
faddp
ja
inc
ret
jle
ret
faddl
fucomi
out
push
sub
cmp
add
hlt
mov
push
ja
jno
mov
fnstenv
lds
into
lcall
and
jnp
je
dec
loopne
rcr
iret
inc
addl
add
daa
fisubrl
xchg
push
lret
cmp
adc
mov
jae
mov
or
push
pop
inc
mov
or
fwait
sub
xchg
sub
pop
into
jne
or
xor
pop
lods
inc
int3
lret
and
movsl
ret
push
push
daa
push
aam
aaa
int
xchg
mov
or
dec
mov
inc
stos
adc
stc
cmpsl
ret
sub
out
mov
mov
aas
push
cmp
cmp
stc
rolb
rcrb
je
add
inc
loop
cmp
and
or
stos
int
out
filds
xchg
lahf
cmc
push
xchg
push
mov
sub
cmpsl
ret
sti
inc
push
jg
ja
aaa
push
pushf
stc
scas
cmpsl
ret
xchg
push
push
cmc
test
lods
fcmovb
mov
cli
cmp
and
dec
push
test
sub
inc
aad
xlat
jle
jge
push
mov
jnp
xchg
pop
mov
or
xor
push
mov
mov
fmul
outsb
les
lock
lcall
mov
mov
jne
xchg
cmpsl
mov
and
clc
adc
jbe
jp
jnp
mov
push
mov
mov
adc
scas
xchg
adc
and
outsb
mov
mov
jb
push
push
push
push
sahf
lods
inc
in
test
call
dec
xor
out
mov
xlat
outsb
sbb
shld
push
cli
and
lcall
jle
bound
sbb
mov
push
lods
push
fcomip
lret
in
aaa
jbe
int3
jo
add
or
push
neg
dec
fmuls
hlt
xchg
stos
dec
loopne
cmc
loopne
and
dec
dec
push
add
loop
xor
mov
test
fidivrs
dec
or
dec
test
inc
pop
dec
in
push
pop
pusha
das
pop
jp
pop
mulb
mov
fwait
jl
adc
dec
mov
mov
adc
ja
pop
pop
sti
and
sub
sbb
jo
push
lcall
into
shlb
xchg
push
sti
outsb
jle
dec
mov
cs
add
fdivs
push
or
xchg
clc
mov
mov
fidivrl
cld
xchg
and
dec
loop
mov
sti
out
repnz
xchg
pop
cmp
pop
mov
pop
pop
dec
out
cmc
xorl
pop
mov
cmp
aad
test
mov
push
rcrl
or
jl
xchg
scas
mov
addb
fistl
sti
aam
mov
and
and
test
insl
aam
jbe
mov
icebp
xchg
jae
enter
or
aam
std
add
inc
imul
fstpt
adc
and
ja
cmp
xchg
pushf
sbb
test
dec
in
inc
sbb
xchg
js
xor
mov
or
xchg
xchg
enter
jge
lds
add
iret
mov
sahf
mov
daa
into
in
fnstenv
or
jno
pushf
stc
jo
sahf
std
xchg
shrb
mov
mov
enter
add
or
push
jmp
jge
repz
cmpsl
jne
jb
and
ret
stos
xchg
stos
jmp
std
into
cmp
mov
mov
sub
fisubs
test
fs
mov
arpl
inc
inc
inc
into
jno
into
daa
iret
loop
stos
lcall
pop
xchg
push
mov
pop
mov
fisubs
xchg
xchg
fsubl
cmc
loop
xchg
insb
push
scas
and
mulb
repz
in
jns
dec
inc
sub
lret
pusha
fidivrl
lea
inc
xchg
fstpt
inc
call
xchg
out
xor
pop
subb
add
jae
pop
sub
arpl
dec
loopne
cmpb
movsl
movsb
ret
aad
es
icebp
enter
cmp
loopne
mov
fcomps
adc
xchg
mov
mov
mov
jle
dec
xchg
mov
cs
xorl
nop
push
pop
and
cmp
hlt
andb
dec
imul
es
add
iret
and
inc
test
loope
sbb
into
iret
inc
sub
cwtl
aad
xchg
jle
mov
aaa
cmp
and
inc
iret
data16
sbb
aad
adc
jp
dec
xlat
jmp
pop
mov
repnz
sbb
sub
loop
xchg
xchg
pop
sbb
xchg
mov
imul
xor
ja
notl
lds
data16
lea
adc
and
inc
icebp
mov
je
daa
icebp
xchg
test
mov
ret
lea
xlat
sub
xor
ljmp
fs
pushf
mov
aaa
sbb
and
pop
stos
xor
mov
xor
lcall
in
sbb
push
add
dec
shll
stc
out
aam
jnp
js
mov
and
jae
into
inc
or
add
lret
xor
xchg
add
push
mov
or
dec
jge
out
inc
cmp
out
xchg
mov
data16
xlat
subl
mov
mov
int
sbb
mov
orl
nop
adc
inc
and
cmp
jl
int3
lret
mov
loop
test
scas
out
outsl
pop
jo
xchg
xor
push
fs
shrl
push
leave
loope
leave
push
xor
sti
pop
push
push
js
popf
incb
stc
mov
in
add
jg
repnz
jge
and
mov
inc
int
jae
and
ret
mov
test
jno
sbb
xchg
push
add
mov
mov
outsl
loop
jo
xor
insb
push
int
inc
fmul
mov
in
outsl
pop
mulb
dec
jge
jg
dec
fs
loope
scas
adc
aaa
mov
cmpsl
inc
jne
jmp
sbb
pop
jo
cli
test
scas
mov
dec
in
cmp
jo
jo
adc
push
mov
push
icebp
mov
lods
inc
sbb
mov
loop
pusha
out
add
shll
pop
sbb
scas
inc
fsubrs
lods
mov
inc
jmp
int3
or
inc
push
add
adc
mov
pop
sub
push
inc
cmp
fmul
xchg
divb
lock
xor
movsl
push
repz
movnti
adc
jmp
rclb
add
popa
jmp
into
add
mov
and
and
push
es
push
inc
cs
pop
in
jle
add
daa
xchg
mov
add
in
dec
insl
iret
jns
mov
xchg
insb
insb
repz
xor
jnp
jmp
movsb
sbb
out
adc
sbb
jle
popa
or
xchg
pop
shl
mov
cmp
dec
aaa
out
xchg
insb
shrl
test
mov
add
add
imul
pop
pusha
or
lds
or
into
fidivl
hlt
scas
aaa
popa
sub
jne
hlt
repz
pop
fsubr
cmp
hlt
in
inc
xor
xrelease
inc
mov
popf
shrb
jno
dec
add
jecxz
xor
scas
xorl
push
or
xchg
enter
imul
popa
push
adc
mov
xchg
sti
push
sahf
xchg
mov
pop
popa
imul
fwait
push
add
mov
loopne
adc
cmp
pop
cmc
out
and
mov
decb
fisubrs
ucomiss
or
sbb
mov
pusha
js
hlt
push
pop
sti
sub
scas
out
pusha
pusha
mov
push
jns
mov
push
ret
push
stos
dec
mov
daa
dec
sub
dec
lds
jge
rcrb
pop
call
cmp
xchg
xchg
push
rcrb
dec
push
scas
mov
negb
adc
mov
fstp
clc
dec
mov
inc
test
push
fsubl
xor
das
jo
outsb
mov
insb
sub
adc
and
icebp
mov
inc
out
hlt
sbb
push
inc
xor
push
sbb
test
pop
xorb
mov
clc
out
cmpsb
mov
jge
jp
push
pop
leave
or
and
mov
imul
pop
push
sub
cmp
scas
mov
pop
jl
fdivs
leave
leave
movsl
sub
and
dec
mov
loop
push
fwait
aad
pop
push
xor
and
loopne
fmulp
or
fs
sbb
push
fsubrl
in
sahf
cli
rcr
repz
jmp
mov
push
mov
or
jno
push
clc
ja
pop
ja
mov
xchg
xor
mov
sbb
jae
insb
notb
bound
imul
enter
xlat
subl
fstl
movsl
and
push
rol
jne
notl
sbb
lret
mov
daa
pop
jmp
nop
or
aam
and
ja
fcomps
aam
sbb
xor
mov
cmpsl
lods
cs
in
dec
xor
dec
fsts
fdivp
insb
sti
jle
jb
lahf
sbb
je
cmp
jmp
addr16
lock
dec
adcl
mov
sahf
dec
loop
ja
dec
je
lods
loope
or
in
scas
add
loopne
rcll
sbb
lock
jl
cli
loope
popa
add
ret
loop
ljmp
outsb
fmuls
loop
push
or
stc
adc
test
daa
xlat
adc
sub
mov
sub
cld
and
push
pop
sbb
fidivl
jo
sbb
clc
es
sub
hlt
lock
xor
dec
jo
mov
hlt
test
cmc
xor
pop
icebp
push
add
dec
dec
lods
sahf
adc
or
popf
inc
fsubr
mov
mov
xchg
mov
xchg
inc
scas
sbb
mov
dec
cmp
jle
ss
rcrb
call
popa
sbb
sahf
daa
dec
in
inc
push
into
inc
insb
inc
imul
fwait
xchg
sahf
sbb
es
mov
addr16
fistl
mov
cmpsl
ljmp
test
xchg
xor
cmp
mov
mov
cmp
dec
inc
sub
in
sbb
sub
pop
aam
int
mov
rep
cmp
add
push
mov
inc
or
shrb
les
loop
jae
add
es
fs
inc
loopne
das
or
add
gs
dec
adc
mov
je
outsb
cmpsb
adc
repz
add
sub
out
or
testb
mov
idiv
xchg
and
inc
sbb
js
in
out
test
aad
or
ljmp
rorl
inc
jp
adc
cmpsb
inc
fistl
sarb
rcrl
pop
inc
xchg
in
mov
push
xlat
iret
imul
xchg
pusha
aam
push
lock
dec
and
jecxz
sub
pop
notb
pop
push
imul
pop
sbb
jle
outsb
out
and
outsb
std
mov
mov
inc
lea
faddl
int
imul
push
cmpsl
pop
scas
call
mov
clc
cmpsl
pop
adcb
je
mov
fidivs
repnz
and
iret
lret
sub
pop
sbb
mov
mov
andb
out
les
lods
and
inc
inc
loopne
xor
sub
push
jae
loopne
out
xchg
sbb
sbb
leave
mov
push
sti
inc
pusha
sub
mov
pop
icebp
or
or
mov
test
push
lods
test
and
push
je
inc
xchg
cld
mov
ds
mov
es
insb
jle
fbstp
insl
movsl
sbb
in
cs
adc
push
das
adc
cli
into
inc
sub
call
ds
lret
dec
neg
mov
lea
adc
push
sub
mov
sbb
and
xor
mov
adc
jecxz
fmull
daa
ljmp
stc
addr16
inc
pop
xor
sahf
gs
aaa
dec
cmp
call
xchg
gs
mov
mov
xchg
mov
pushf
add
jo
push
jo
dec
repnz
xchg
push
scas
ljmp
mov
ret
hlt
xchg
int
adc
mov
push
aaa
mov
insb
cmp
popf
fld1
jg
push
rorb
pop
mov
ss
pop
dec
or
in
mov
je
mov
mov
jnp
sar
inc
iret
data16
jbe
insl
daa
in
test
popf
mov
xlat
adc
and
inc
jp
ja
push
fwait
pusha
je
fisubl
inc
and
mov
and
xchg
mov
adc
cmp
and
mov
push
lds
pop
arpl
dec
jbe
dec
or
xchg
xchg
adc
pop
stos
xorl
adc
pop
repnz
addr16
hlt
add
adc
mov
addr16
pop
and
bound
and
or
lock
aam
pop
adc
data16
mov
xor
sbb
and
or
cmc
lahf
mov
cli
lret
adc
or
mov
jmp
and
adc
call
adc
mov
push
pop
mov
pop
aas
push
enter
and
sub
insl
mov
mov
push
adcl
loopne
pop
ss
loopne
add
jecxz,pn
in
add
dec
ds
mov
aam
dec
adcb
and
adc
lret
mov
lret
jnp
push
mov
loop
cmc
cmp
push
jbe
pop
mov
fistps
fsub
add
push
inc
test
lahf
add
icebp
xor
lret
fucomi
ja
popa
clc
inc
lods
push
mov
int
push
jp
ds
rclb
loope
xor
ret
ss
pop
push
jmp
mov
inc
jmp
enter
fidivrl
lods
push
inc
fisubs
icebp
dec
push
fmull
jl
sbb
ficoml
daa
cmp
rclb
nop
subb
cmp
xchg
add
sub
sub
pop
rorl
cwtl
cmp
inc
out
push
outsb
mov
out
push
or
mov
mov
idivl
fldt
mov
pusha
sahf
lahf
aaa
rcrl
scas
lret
jae
cmp
out
and
add
mov
addr16
enter
shl
int3
and
sub
in
nop
xchg
and
dec
jle
insb
sub
push
lods
mov
push
xor
rorb
mov
incb
out
xor
sbb
pop
std
lret
popf
cmc
cmc
and
icebp
jns
daa
rclb
push
bound
movsl
xchg
stos
ljmp
or
sarb
xchg
add
add
or
pop
cmpsb
inc
push
arpl
shrl
cmpsb
fwait
repnz
fistl
loopne
lahf
js
cmp
mov
xorl
popa
xor
sbb
push
ds
dec
sbbb
ret
scas
in
sbb
clc
lret
test
lcall
pop
mov
cmpsb
movsb
mov
test
lds
nop
jl
mov
addl
repnz
fs
lods
push
movsb
cmc
mov
mov
mov
scas
mov
andb
enter
repz
jp
lods
adc
test
into
sarb
stos
rcr
mov
cwtl
data16
inc
push
adc
cltd
mov
add
push
fcomi
push
mov
push
xorl
das
ja
ucomiss
jmp
inc
stos
cmp
cmc
lds
int3
or
inc
xor
test
fs
addr16
hlt
sbb
std
shrl
mov
je
push
sub
and
sub
sbb
mov
test
sub
jno
fimuls
xorb
mov
push
sbb
xor
imul
mov
mov
jecxz
in
cltd
jp
adc
fldcw
mov
jno
lock
stos
adc
or
add
mov
mov
mov
xor
ror
sbb
imul
ljmp
add
icebp
mov
fs
add
or
rolb
jl
ret
dec
xor
int3
dec
pop
pop
lahf
jae
nop
rcrl
xchg
pop
scas
push
cmpsl
sti
push
ljmp
movsb
mov
dec
test
aad
cli
pushf
inc
ja
daa
test
loope
pusha
lods
and
scas
ret
loope
loope
sub
ljmp
out
shrb
pop
sbb
lret
cltd
or
hlt
gs
pop
int
jno
or
sbb
dec
mov
or
mov
in
aas
cltd
sbb
add
pop
iret
sbb
popa
stos
insl
scas
test
and
xchg
mov
push
movsb
inc
mov
vpminub
lret
cmc
sub
out
cld
stos
cmc
lea
push
mov
popa
jle
mov
into
sub
and
add
xor
jbe
fsubl
es
mov
scas
sbb
aas
ljmp
mov
sub
nop
xchg
adc
inc
sahf
stos
jp
sub
int3
xchg
pop
in
out
sub
dec
jmp
cmc
sbb
sahf
dec
push
fidivl
sbb
into
fs
ja
loop
jl
icebp
es
add
mov
dec
add
add
pusha
pop
or
mov
xchg
cmp
or
cs
jns
inc
jl
add
inc
mov
imul
cmp
repnz
iret
pop
dec
cs
pop
push
aas
or
lcall
icebp
pop
cs
adc
xchg
lret
or
xor
ljmp
cltd
xor
lret
adc
das
cmp
pop
push
inc
inc
mov
ds
call
pop
lods
outsl
rcll
or
lock
loope
imul
sub
sbb
mov
mov
mov
nop
sub
cmpl
inc
add
pop
push
pop
sub
out
cmp
fucom
cltd
imul
sti
iret
loopne
cltd
mov
sarl
stos
and
sarb
xchg
ret
push
out
es
dec
add
ret
push
inc
pop
aas
push
sub
sub
dec
cli
jbe
jne
xchg
roll
pop
add
sbb
gs
add
mov
push
jmp
fdivrl
sbb
cld
ret
xor
lret
pop
xor
jp
cmpb
sbb
cmp
sub
es
cltd
test
pusha
decl
push
adc
push
dec
cmp
lcall
pop
mov
fucom
sub
add
push
fnsave
or
cltd
sub
jne
mov
test
arpl
sub
mov
lods
fsubl
popa
xor
bound
into
loop
and
push
pop
bnd
bound
xchg
push
mov
pop
imul
icebp
mov
cmc
or
mov
mov
popa
outsb
sub
lahf
inc
mov
cmpb
fs
cmc
shrl
jne
lretw
pop
addr16
push
add
fcomps
insl
pop
fstpt
aad
dec
movl
rcrl
test
push
sbb
lahf
jo
shrb
fcmovbe
insb
sub
popf
aam
mov
es
data16
imul
adc
in
and
xor
fildll
ja
add
shl
cltd
mov
push
addr16
mov
pop
mov
pop
pop
mov
sbb
add
outsl
jg
fldenv
mov
rol
test
das
popf
ret
out
xor
outsb
cltd
jle
stos
sahf
mov
xor
xor
add
filds
xchg
push
ljmp
and
dec
mov
jge
lea
mov
scas
daa
pop
cmp
sbb
or
test
in
push
scas
xor
stos
test
push
bound
out
adc
mov
xchg
or
pop
jbe
or
pop
jne
add
add
addl
roll
jge
pop
lcall
sbb
insb
pop
into
les
or
mov
enter
adc
and
es
mov
out
inc
or
int
dec
leave
fwait
test
mov
and
xor
push
cs
sti
sub
push
push
mov
into
push
mov
sbb
aad
add
test
jp
repz
test
adc
arpl
test
repz
pop
push
rcr
ret
or
jg
adc
and
lock
insl
mov
pcmpeqd
mov
sbbb
cltd
bound
divb
dec
dec
push
popf
popa
cmp
imul
and
and
mov
adcb
push
xchg
cmp
pop
mov
xor
std
xchg
dec
jne
out
aas
mov
aaa
popf
test
mov
int
mov
idiv
xchg
sbb
or
out
adc
and
and
fisttpll
inc
addb
call
or
lret
shlb
loop
popf
dec
in
xchg
addr16
ret
add
xchg
and
es
dec
jecxz
sub
loopne
icebp
mov
mov
in
xor
lahf
sub
xor
fsubrs
adc
push
sbb
xor
js
stos
inc
inc
sub
jnp
inc
xchg
sub
je
mov
jb
lods
xchg
insb
mov
sbb
mov
lcall
add
in
or
scas
xchg
mov
cmp
pushf
or
nop
mov
out
xchg
mov
xchg
int3
outsl
dec
fstps
filds
outsb
xor
lea
rol
cmp
lods
subl
pop
repnz
jns,pt
cs
mov
add
jl
pop
loope
mov
mov
mov
ficoml
dec
repnz
push
pop
jo
push
xor
fdivs
pop
push
sahf
dec
pop
mov
jno
cmpsl
add
pop
xchg
outsl
imull
ror
sub
mov
daa
or
fstpt
jb
ds
xchg
fwait
xor
iret
add
aas
cmp
das
ret
loope
inc
mov
push
pop
cwtl
push
movsl
leave
jp
adc
sub
enter
jno
fimuls
fcmovnbe
adc
xchg
cs
insl
xchg
cmc
pop
add
das
push
and
not
ljmp
bound
fwait
add
mov
std
addl
dec
fdivs
fdivs
shr
fnsave
or
xchg
xor
mov
xchg
rorl
pusha
dec
fdivl
mov
fwait
lea
inc
sbb
stos
adc
fsubs
pop
mov
xchg
mov
pusha
push
inc
call
pop
aam
add
sbbb
popf
add
pop
fs
xor
sub
sub
or
push
daa
mov
cmc
cli
or
out
mov
or
and
test
dec
pop
lret
insl
icebp
or
sar
gs
movsb
dec
dec
in
and
insb
xchg
add
aam
pop
mov
cmp
dec
mov
loop
push
push
clc
jns
or
sbb
test
pop
jb
mov
xchg
cmpxchg
inc
sti
scas
push
mov
sbb
push
inc
pushf
jae
nop
cmp
and
push
imul
incb
jae
lods
xor
dec
cltd
scas
lods
dec
imull
dec
call
adc
xlat
xchg
rcrl
xor
push
imul
popf
jg
mov
lea
mov
fildl
pop
loopne
jle
stc
push
popa
movsl
mov
add
cld
scas
repnz
sbb
adc
call
aad
andl
cwtl
or
pop
cmp
mul
add
sub
enter
sub
stos
xor
scas
xchg
ds
push
jo
xor
push
clc
push
or
pushf
jno
cmp
add
inc
inc
in
dec
dec
cmpsb
cmpsl
mov
adc
dec
mov
jge
xchg
jnp
pushf
insl
das
cmpsb
mov
mov
clc
xchg
dec
popf
xor
icebp
in
mov
mov
test
adc
lds
test
jns
dec
lahf
mov
mov
sbb
addr16
imul
adc
sbb
fimull
iret
xchg
movsb
mov
addr16
es
das
inc
gs
sub
repnz
mov
popf
xor
imul
dec
scas
test
cmp
outsl
dec
push
cli
pop
in
sti
add
sbb
and
aaa
imul
addl
sub
pop
mov
mov
pop
fxch
push
fs
and
pop
lods
inc
fwait
sti
repnz
push
xlat
daa
and
fs
mov
jl
jb
js
xchg
into
popa
sbb
lret
loope
and
dec
push
cmpb
inc
lds
mov
push
push
push
jg
in
popf
ljmp
mov
jg
aad
sub
inc
flds
add
dec
lret
jnp
arpl
push
dec
inc
sbb
into
or
sbb
ds
outsl
or
aaa
aas
sbb
imul
jb
sub
mov
sbb
int
insl
aas
fstpt
nop
imul
sub
push
add
adc
int
das
js
push
sub
es
stc
inc
les
insb
push
xchg
daa
mov
mov
or
jg
push
jge
xchg
aam
scas
push
ds
leave
adc
ds
in
pop
mov
aam
xchg
push
inc
lods
rolb
xchg
ss
leave
insl
cli
add
xchg
adc
shll
insb
jg
in
cwtl
icebp
and
mov
jmp
push
rorl
dec
mov
xlat
xor
imul
in
sahf
imul
jnp
xchg
nop
sub
and
popa
push
jbe
mov
cs
notl
fisubs
or
cs
movsb
add
lds
imul
mov
test
mov
mov
sub
jnp
cmp
sarb
mov
flds
into
test
xchg
in
pop
cmc
shl
decl
push
pop
data16
xor
leave
test
or
mov
mov
fidivrs
mov
inc
stos
mov
xor
imul
js
mov
sub
jg
cmp
add
xchg
lods
sbb
hlt
inc
out
cmpsb
jg
xchg
adc
data16
xor
shrl
scas
dec
and
adcb
repz
pop
sti
jb
xchg
sub
xchg
mov
cmp
lahf
cmpsl
aas
mov
push
cli
pop
push
je
int3
fbstp
lret
stc
enter
nop
ffree
leave
sarl
dec
rol
jmp
cltd
mov
ret
jge
aam
jp
incb
inc
and
in
into
xor
aas
xlat
imul
aad
lock
cmpsl
or
sub
out
inc
push
fs
sbb
sbb
mov
xor
mov
sub
stc
in
mov
jo
inc
and
clc
lock
sarl
outsb
mov
mov
pop
ss
jle
je
rcrb
pushf
outsl
push
test
rclb
sbb
adcb
adc
and
dec
in
fs
jg
leave
inc
ljmp
sbb
mov
fidivs
imul
inc
cmpsl
mov
lret
push
push
inc
fistl
cmp
xor
xchg
std
ret
cmp
or
data16
ss
mov
mov
sbb
mov
mov
loope
cmp
maxps
lods
ss
popf
in
popf
into
xor
dec
arpl
xor
dec
inc
sbb
add
sub
xor
nop
cmc
mov
sbb
mov
mov
push
add
xlat
outsb
jge
mov
mov
mov
and
fidivs
jno
in
ljmp
ret
inc
or
dec
inc
mov
call
mov
inc
aas
ja
add
inc
dec
lret
mov
sub
xchg
cmp
jae
jmp
icebp
lret
popa
je
push
scas
adc
adc
pushf
in
fimull
stc
push
insl
popa
sti
dec
cmp
testb
fs
ss
pusha
mov
xchg
testb
add
dec
sarb
sbb
cmp
jmp
sahf
clc
sbb
bound
out
es
adc
lods
inc
add
das
push
movsl
rcrl
jle
mov
test
lahf
fstl
mov
push
xchg
pop
enter
shlb
ds
loope
xlat
loop
mov
cld
movsb
pusha
or
cmp
sub
sbb
aam
sub
jp
movsl
xor
mov
in
mov
insl
mov
insl
in
leave
into
test
mul
push
je
pop
cmpsb
jno
jbe
add
stc
xor
aaa
dec
andl
sbb
sbb
push
nop
pop
roll
push
in
icebp
leave
cli
adc
outsb
adc
decb
cmp
les
in
mov
lret
adc
inc
add
nop
out
push
mov
rcrl
mov
sub
nop
mov
sub
insb
xchg
pop
jp
daa
pop
pop
sbb
inc
jl
ja
push
aad
aad
test
lock
pop
mov
in
and
push
mov
loope
repz
lret
sub
pop
shr
push
adc
dec
bound
fwait
cmpsl
and
js
test
lock
rclb
or
mov
cmpsl
cmp
pop
pop
repnz
in
dec
jns
xor
mov
cwtl
lods
aaa
loop
mov
jl
in
push
push
mov
leave
ja
enter
adc
aad
fbstp
jae
or
pushf
scas
inc
sub
andl
xchg
scas
aam
push
add
xchg
fs
loop
mov
ret
js
and
icebp
lahf
loopne
sbb
cmp
lea
xchg
mov
ja
test
jecxz
outsb
std
cmp
or
rclb
adc
jb
and
mov
loopne
xchg
call
push
pop
mov
fiadds
es
push
sub
cmc
lods
jbe
push
mov
pop
repnz
inc
sarb
scas
or
jge
pop
iret
cmp
pop
rcrb
insl
sub
ret
js
mov
mov
push
and
push
xor
push
push
mov
testl
lahf
testl
push
out
jmp
push
rorb
mov
dec
push
mov
sub
into
movsb
arpl
push
fisttps
pop
lcall
decb
xchg
dec
scas
insb
add
sti
pop
and
sahf
or
stos
mov
add
orl
movsb
push
sub
mov
je
pop
mov
inc
sbb
mov
sub
inc
or
out
xchg
sub
cmp
jno
in
fwait
and
movsb
xchg
mov
add
mov
and
addb
jp
cmp
orl
jo
addr16
adc
stos
sbb
stos
mov
decb
dec
cmc
test
sbb
fists
sbb
orl
or
ss
push
sub
mov
insb
xor
movsb
les
inc
in
insl
ja
lahf
sbb
xchg
pop
mov
lret
jp
out
pop
inc
icebp
cmp
cmp
xor
jne
dec
leave
dec
cmpb
cltd
mov
stos
xor
dec
adc
fwait
in
rcll
or
sahf
int3
cld
push
mov
ljmp
call
imul
sbb
in
adc
mov
inc
cmp
scas
lds
aas
fstpl
adc
pop
push
int
pop
cmc
imul
add
push
xchg
outsb
jp
adc
mov
add
arpl
inc
jno
jb
cmpsb
in
ja
in
in
movsb
sbb
out
cmpsb
add
mov
std
repz
loope
xchg
enter
sahf
mov
inc
sub
xchg
push
push
outsl
jmp
popf
add
mov
push
xor
mov
push
mov
cwtl
inc
add
jb
outsl
loop
shl
inc
pop
ja
lret
rclb
jo
repnz
mov
ja
sbb
std
push
imul
in
cld
or
pop
mov
pop
mov
jb
cli
jecxz
cmp
cli
fildll
dec
enter
out
dec
mov
and
xchg
xor
ret
jle
out
dec
push
inc
and
xor
xor
in
jecxz
fadds
xchg
fistpl
in
pop
out
pop
mov
jbe
mov
sahf
lods
xor
adcl
lea
push
std
cmp
xor
mov
divl
sbb
adc
add
push
cwtl
cmp
int3
mov
ret
aas
dec
out
ss
ljmp
sbb
or
xchg
daa
inc
jb
lods
arpl
or
dec
mov
jg
jmp
sub
movsb
jecxz
cmp
push
push
loope
shr
subb
pop
mov
mov
xchg
pusha
stos
dec
aas
xchg
adc
pop
inc
pop
pop
jne
in
nop
adc
adc
aaa
cmp
jmp
xchg
mov
rorl
or
call
test
clc
xor
sub
push
andb
addr16
cmp
pop
add
and
dec
lods
mov
cmp
rorb
push
insb
inc
mov
jne
add
dec
test
js
jbe
outsl
popf
ds
pop
jge
mov
pop
aam
shll
jne
dec
aas
dec
pop
pop
mov
adc
jns
cmp
in
and
jl
xchg
test
cmp
xchg
jno
rolb
cmpsl
pop
imul
push
mov
dec
jmp
shrl
mov
jbe
and
test
std
test
pop
inc
popa
mov
cmpsb
lods
daa
mov
scas
push
rol
pop
stos
xor
jne
int
call
loop
push
subb
jle
sub
jno
jl
xchg
xchg
cmpsb
lods
xchg
mov
or
mov
mov
inc
adc
jbe
sbb
xchg
fbld
mov
jae
sub
mov
mov
dec
mov
sti
cmp
stos
jg
inc
data16
fldl
movsl
push
rcrl
mov
jge
sub
adc
adc
and
shll
movsl
fadds
repnz
sar
addb
or
fs
sub
stos
js
cs
push
pop
int
or
mov
push
cmp
fbld
mov
loope
ljmp
push
mov
push
leave
and
in
jne
pop
inc
pushf
mov
test
or
mov
and
js
mov
inc
sarb
push
adcl
push
add
bound
aad
jle
push
movsb
cmova
mov
mov
repnz
push
out
stos
adc
mov
mov
adc
and
roll
jecxz
xchg
sbb
sbb
lds
sahf
dec
hlt
sarb
xchg
inc
mov
sbbl
sub
xor
add
sar
jae
and
pop
aad
iret
xor
sbb
mov
mov
aad
mov
in
mov
jmp
pop
sbb
xor
adc
cmp
fdivl
pop
in
lods
sbb
lea
xor
jbe
les
aaa
push
std
inc
ficoml
xchg
push
adc
jae
dec
in
xchg
sub
jmp
clc
sbb
aas
sbb
mov
mov
js,pt
cmp
std
push
jns
mov
push
adc
and
mov
test
push
dec
and
int
jl
imul
cmpsb
arpl
mov
ljmp
in
xlat
and
iret
or
xchg
sti
adc
shll
pop
mov
mov
jne
orb
sub
or
daa
iretw
cmp
sbb
push
push
les
daa
sbb
or
fnsave
fistpll
push
xchg
mov
cmp
mov
xorl
mov
fisttpl
leave
es
xchg
ss
es
imul
in
xor
les
jge
mov
sbb
iret
cmp
dec
xchg
imul
dec
and
enter
pop
ret
sub
in
out
push
mov
xor
push
add
mov
loopne
pop
popf
jae
inc
movsb
xor
xlat
sub
ss
mov
outsb
mov
sbb
inc
xchg
movsb
mov
int
outsl
bt
jns
jnp
loop
cs
in
cwtl
jns
stc
daa
jmp
sub
inc
leave
cmp
xlat
pop
add
ret
icebp
lods
into
in
cmpsb
lret
push
clc
and
bound
out
insb
or
aas
imul
insl
lret
aad
mov
into
int3
inc
push
enter
dec
pop
xor
pop
inc
and
stc
popf
inc
mov
ret
xor
je
jbe
xor
adc
push
jbe
add
hlt
sbb
add
jnp
mov
in
out
cmpsl
xor
aaa
fldenv
pop
cmp
push
xlat
dec
loopne
dec
inc
int
jbe
or
mulb
scas
xor
lret
ds
mov
call
inc
fmulp
xchg
mov
jnp
inc
fistps
sbb
or
dec
mov
and
sbb
int3
in
int3
mov
mov
lock
xor
pop
or
and
dec
dec
sub
adc
bound
jmp
cmc
mov
pop
mov
or
sbb
mov
pop
repnz
mov
jns
cmp
adc
xor
mov
dec
loope
mov
jns
ss
sbb
cmc
mov
test
inc
dec
int3
xchg
jle
push
mov
int
dec
mov
mov
addr16
test
dec
add
jo
cmp
cwtl
pop
cmp
imul
cmc
lahf
dec
pop
dec
push
bound
sub
fidivrs
pushf
jg
lahf
cmp
sti
andl
pop
cmc
inc
push
fnsave
ljmp
and
push
repz
repnz
xchg
or
rcrl
sbb
imul
jo
out
push
int3
mov
ja
in
and
mov
add
mov
sbb
jle
out
loopne
adc
xchg
in
ss
cmp
add
lcall
inc
add
pop
mov
or
lods
inc
xor
das
lock
push
leave
pusha
mov
loope
arpl
mov
mov
std
lahf
test
iret
jb
adc
pop
fists
mov
or
insb
andb
aad
mov
gs
repnz
mov
fsubs
add
insl
fs
mov
dec
add
fldt
xor
fisubrl
cmp
sbb
or
fdivp
subb
repz
adc
jmp
dec
mov
adc
add
mov
fmulp
pop
add
cmp
dec
out
movsl
inc
mov
loop
int3
rolb
loope
shr
fwait
cs
pusha
pop
loopne
in
insb
mov
movsl
push
pop
sub
aaa
or
pop
mov
inc
rcl
outsb
add
out
ret
adc
pop
push
xchg
push
sbb
bound
in
pushf
adc
shll
jl
cmp
xchg
call
lds
sbb
inc
sub
andl
xor
je
ja
jb
push
pop
push
in
and
shlb
lea
idivl
push
les
cmp
shlb
rcr
iret
test
fbstp
movsl
xchg
or
pop
mov
push
cmp
stc
add
dec
cli
cltd
std
mov
jl
inc
into
adc
lret
jnp
bound
jecxz
lock
das
shll
mov
cwtl
xchg
xchg
cmpsb
add
gs
push
in
addl
nop
ljmp
lock
stos
ja
fnstsw
leave
mov
mov
test
add
mov
xchg
bound
mov
mov
je
stc
add
fwait
xlat
sub
ret
jecxz
and
sub
sbb
scas
fnsave
pop
cmp
leave
or
mov
jmp
mov
outsl
jp
push
in
or
xor
mov
push
inc
aad
fbld
loop
push
xchg
cmp
lods
ljmp
or
lds
sub
addb
xor
push
cmp
pop
dec
loopne
sahf
ret
sbbb
nop
sub
sbb
lret
push
mov
xchg
loopne
mov
rolb
fs
push
rcr
out
pop
adc
insb
xchg
std
xchg
sub
dec
xor
les
lret
sti
mov
push
mov
stc
jo
aaa
jno
fmulp
sub
pop
in
xchg
jne
jne
xor
push
aas
adc
movsb
mov
xor
fcom
addr16
adc
and
add
shll
clc
nop
aas
test
scas
or
xchg
andb
cmp
add
call
or
hlt
sub
popf
es
pusha
xchg
inc
pop
pmaxsw
add
ret
jns
insb
mov
jle
scas
arpl
aas
outsb
cmp
and
xorl
sbb
test
insl
and
outsl
jmp
wrmsr
mov
cli
jecxz
mov
xchg
jno
xchg
pop
fisubs
jb
mov
cmp
ja
sbb
push
out
pop
sbb
add
std
push
and
lods
mov
imul
or
mov
dec
mov
push
std
cmp
and
pop
lcall
ja
hlt
pop
je
and
aad
cmpl
mov
pop
push
sti
cmp
adc
test
fmul
adc
cmp
xchg
inc
inc
test
pop
fsubrs
jbe
jbe
jb
pop
cltd
in
lods
xchg
push
sti
rcll
and
dec
pop
xor
shrl
insb
mov
ss
push
add
xor
pop
repz
pop
inc
push
std
scas
sub
popf
and
mov
sub
gs
addr16
add
xchg
mov
inc
push
jle
push
fcoms
sbb
mov
push
int3
sbb
test
or
mov
pop
cmp
inc
push
xor
xchg
bound
xlat
push
cmc
in
lds
push
mov
pop
cs
shlb
scas
fsubl
cmp
lcall
aaa
fwait
sub
mov
leave
or
imul
push
cs
cmc
adc
mov
jle
cmp
pop
addb
addr16
add
es
jg
pop
push
sti
sbb
aas
sub
and
inc
scas
add
repz
fdivl
or
adc
lea
andb
sti
nop
sarb
scas
div
push
dec
sahf
addb
jecxz
iret
cmp
jmp
mov
and
fnstenv
mov
js
add
or
std
add
adc
out
bound
roll
jge
sbb
movsb
jecxz
cmp
imul
sub
sub
cmc
cmpsl
mov
dec
jne
sbb
inc
aaa
into
jno
sti
pop
sub
jl
mov
fnstsw
ljmp
jno
js
js
pop
mov
movsl
cmp
enter
pop
out
out
push
call
xchg
inc
dec
sbb
xlat
mov
dec
testl
pop
mov
scas
xor
jl
jge
cmpl
or
push
scas
jb
std
cld
xchg
loope
xchg
loop
sub
shrb
push
inc
jg
int
addr16
rorl
and
stc
arpl
fsubr
cmp
lock
jae
das
mov
adc
dec
mov
dec
sbb
xor
or
xor
xor
addr16
sub
lret
das
push
xor
imul
xor
sub
clc
mov
negl
and
aad
xor
push
pop
imul
mov
lds
push
mov
mov
imul
mov
pop
or
nop
xchg
daa
cmp
jbe
xchg
pusha
imul
mov
mul
jp
dec
out
sahf
mov
stc
pop
jmp
add
not
icebp
dec
xchg
pop
jnp
lea
mov
repz
xchg
cld
outsl
add
mov
cmp
sarb
scas
inc
push
push
sti
lods
push
sub
fs
mov
in
cmpl
or
pop
repz
cld
stos
bound
es
scas
jb
add
xchg
xchg
decb
lahf
mov
mov
movsl
addl
pop
aaa
imul
sbb
loope
jl
loope
mov
mov
ja
nop
in
das
mov
mov
aam
jae
xchg
adc
xorb
cld
push
js
sbb
pop
sbb
cli
sbb
leave
outsl
dec
push
adc
bound
cmp
or
and
pop
sub
mov
add
dec
in
ja
dec
jne
push
sbb
orl
fs
imul
ret
cld
imul
lret
mov
je
mov
mov
adc
aam
pop
and
stc
sbb
adc
pop
add
fidivrl
adc
arpl
pushfw
es
xchg
lods
or
sbb
xor
push
orl
jnp
jle
cwtl
out
push
push
add
dec
mov
pop
loop
mov
sub
dec
inc
ljmp
loop
into
dec
dec
fstpt
sbbb
cmpb
outsl
sub
add
sub
daa
lret
jae
adc
loop
loopne
lea
and
scas
and
adc
inc
enter
lahf
mulb
xlat
or
les
je
mov
sub
mov
jno
scas
into
or
rcrl
cld
cmpsl
add
enter
mov
jl
out
es
sub
and
sub
arpl
into
sbb
xlat
sbb
xchg
sub
mov
mov
insb
and
pop
imul
fbstp
out
fs
out
test
cmp
lds
dec
dec
in
bound
xor
hlt
mov
shl
push
lret
push
ret
xchg
xchg
orb
hlt
rcl
fwait
add
dec
fwait
xor
movsl
jg
inc
js
dec
in
cs
cmp
push
cmpsb
daa
dec
sub
std
dec
insl
jmp
out
test
hlt
or
jno
icebp
inc
popf
out
add
jb
out
adc
fscale
nop
push
jmp
push
mov
dec
and
pop
or
cli
mov
enter
adc
and
or
lret
or
sub
out
cmpsl
lds
mov
std
mov
aad
dec
pop
mov
popa
aaa
sti
xchg
rcrb
lea
jl
push
arpl
mov
xor
lcall
enter
leave
mov
cltd
adc
inc
scas
inc
test
daa
fcomip
arpl
sbbb
cs
pop
adc
xor
cmp
clc
inc
lcall
jmp
sbb
or
out
cmpsl
adc
push
jle
outsl
into
push
lods
mov
jno
push
aam
in
les
mov
pop
cmp
fdivs
cltd
js
aad
xchg
sbbb
mov
movl
lcall
dec
int
inc
push
jnp
cmp
add
adc
fdivs
lea
int3
sti
adc
js
or
les
dec
adc
mov
sbbl
mov
mov
pop
rcr
xor
loop
mov
cwtl
movsl
icebp
and
iret
ss
add
icebp
xor
push
cmpsb
add
mov
movsb
cmp
push
out
out
mov
mov
and
aaa
sbb
push
jecxz
jns
adc
loope
enter
fcmovbe
cs
not
jae
lahf
mov
rcrl
jle
test
out
movsl
outsb
sub
lahf
jmp
xor
cmc
mov
stos
into
into
loop
cld
push
xor
shrl
ret
in
lea
push
xor
dec
sbb
lock
aaa
inc
or
inc
pop
scas
in
nop
adc
in
ret
xchg
dec
jbe
scas
inc
adc
repz
into
fidivl
mov
int3
aad
mov
jecxz
int3
mov
ljmp
pop
arpl
sub
or
mov
mov
aas
shlb
jne
popf
in
nop
xchg
push
adc
jae
mov
add
mov
out
aaa
hlt
fwait
cmp
adc
cwtl
call
pushf
push
stos
pop
clc
mov
inc
sub
pushfw
iret
aas
cmpsl
mov
fsubs
int3
mov
push
xchg
cmp
scas
xor
js
sbb
pop
xchg
xor
jb
cltd
pop
mov
arpl
enter
add
in
sti
test
jnp
test
cmpb
or
mov
outsb
jo
xchg
sub
rcr
dec
scas
mov
push
insb
pop
negb
arpl
push
repnz
insb
fldt
iret
call
pop
jb
sbb
inc
or
fdivr
repnz
and
dec
adc
cmp
cmp
pop
inc
and
jp
mov
test
pop
xchg
xchg
xorl
pop
and
fimuls
xor
push
repnz
mov
xlat
xchg
add
pop
and
lds
mov
mov
sub
shll
jo
or
scas
xor
add
push
push
jns
data16
pusha
inc
shrl
push
jmp
xor
dec
int
jae
mov
or
push
xchg
out
pop
call
jne
inc
stos
pop
insl
push
push
pandn
test
cmp
fbld
repz
and
xchg
inc
push
sub
repz
and
mov
out
mov
ja
sbb
lret
sbb
cltd
xlat
movsl
cmp
jge
mov
cmpsb
cmp
stos
aaa
into
fsubrl
loope
cmp
cmp
adc
sar
notb
xlat
pop
pop
jbe
dec
push
int
cmpsb
cmp
push
jmp
pop
sub
aam
add
jmp
push
jns
imulb
add
push
lock
loopne
daa
aam
push
fsub
and
stos
cmp
je
psllw
and
cmp
inc
xlat
hlt
in
addr16
push
sub
jb
mov
aam
cmp
mov
je
jae
pop
repz
sti
pop
stc
jp
scas
cmc
mov
daa
into
mov
jl
mov
pop
test
lock
lods
push
addl
jge
push
setbe
mov
mov
pop
jg
dec
out
data16
in
rcrb
pop
pop
in
ja
mov
clc
iret
rorl
push
adc
pop
aaa
testb
or
pop
fucomip
ret
mov
xlat
mov
inc
fmull
or
fldt
arpl
fisttpl
dec
push
std
int
and
stos
gs
add
iret
fs
xlat
iret
fistl
loop
mov
ljmp
pop
jne
cmp
pop
push
ljmp
dec
stos
sbb
sbb
jns
in
jmp
frstor
dec
ret
repz
and
fadd
sbb
mov
ljmp
jno
les
or
jp
pop
add
mov
cmc
das
fs
ss
sahf
xchg
cmp
lahf
fidivrs
mov
jne
stc
lret
mov
jmp
daa
sub
lret
outsb
movsb
lcall
addr16
and
roll
cmp
sbb
push
or
sbb
test
fldl
adcb
js
dec
jae
add
cltd
cmp
dec
loop
jo
std
push
jecxz
sub
subb
mov
push
lods
xchg
stos
inc
lcall
int
lahf
dec
mov
push
and
xor
cwtl
in
iret
mov
movsb
jns
outsb
mov
dec
mov
pop
leave
sub
sbb
xchg
cmp
int
ja
imull
xchg
int
dec
pop
pop
mov
xor
stos
push
pop
inc
cltd
jl
adc
pop
or
pop
aaa
sbb
dec
lahf
inc
movsb
das
aam
je
scas
xor
test
test
cmpsb
test
shrb
popf
mov
jo
lods
repz
and
cmp
stos
movsl
test
sbb
sahf
cli
push
icebp
in
xor
cmp
and
sbb
out
mov
mov
je
pop
movsl
fdivl
mov
add
inc
movsl
sbb
out
add
or
fnstsw
xchg
fwait
pop
mov
cmpb
mov
pop
or
das
mov
in
push
xorb
xor
push
gs
loop
insb
out
mov
inc
push
test
or
pop
mov
mov
aam
aam
fidivl
les
mov
ss
decb
mov
mov
sub
ds
pop
push
mov
jne
stos
push
lds
pusha
sbb
arpl
mov
fnop
repnz
out
daa
sub
popa
cmp
and
sub
inc
add
xor
pop
mov
sti
mov
in
mov
rclb
cwtl
imul
jmp
xor
in
jge
lock
out
fisttpll
nopl
in
sub
push
mov
adc
xchg
daa
ljmp
jbe
sti
aas
lret
bound
mov
push
cmp
and
aam
out
mov
aaa
fwait
jge
mov
adc
fidivrl
nop
or
xor
fsubs
mov
clc
jo
cmp
pop
or
rcrb
outsl
daa
mov
ret
fldenv
sub
fists
and
push
mov
int3
movsl
rcl
cmp
pop
pop
dec
mov
adcb
mov
sbb
cmpsl
sub
outsl
add
das
inc
pop
push
jae
data16
jecxz
into
xbegin
aam
pop
push
sub
in
rorb
lcall
mov
std
mov
lcall
push
mov
xchg
test
mov
and
aad
int
cli
mov
out
repnz
and
rclb
scas
jbe
ss
in
mov
add
sbb
inc
jb
jne
mov
cld
push
push
add
sti
int3
xor
jae
sub
and
outsb
inc
rolb
jae
adc
lahf
test
daa
pop
out
cltd
sahf
jne
popa
mulb
xor
dec
repnz
sub
inc
cs
sbb
lret
frstor
mov
push
pop
fistps
mov
cli
push
fdivs
loop
xlat
ret
pop
clc
add
sub
inc
fisubrl
cmpxchg
lret
in
dec
xchg
les
enter
arpl
rcr
lds
fisttpl
mov
gs
lcall
int
xchg
cmpsl
mov
sbb
mov
idivb
sti
dec
push
jnp
jp
icebp
or
cmpsb
adc
mov
clc
inc
fs
jge
inc
push
outsl
cwtl
dec
ja
xchg
ffree
pushf
or
fs
add
es
push
outsb
xchg
in
lahf
es
fs
das
pop
push
xchg
jmp
les
iret
push
inc
nop
test
add
mov
cmpsb
filds
push
jp
fdivs
xchg
jecxz
mov
adc
mov
xor
ss
sbb
loope
cltd
gs
out
mov
mov
ret
ror
mov
inc
pusha
push
insl
mov
inc
mov
lret
inc
and
stos
jne
sti
xor
xor
rcrl
add
and
jbe
das
sarl
fisttpll
push
adc
jbe
fdiv
call
or
adc
add
pop
shrb
or
or
cmp
aad
jb
nop
xchg
daa
lahf
and
lret
pop
out
mov
popf
icebp
movsl
sub
mov
nop
pop
push
insb
fnstcw
pop
and
inc
aas
sarb
add
or
clc
lods
ret
sbb
dec
sub
cwtl
pop
cmp
add
jno
xchg
dec
ja
lahf
xlat
sbb
aam
lds
addb
push
test
sbb
repnz
sar
fwait
or
sub
movsb
and
cwtl
or
sbb
inc
test
decb
mov
cmp
push
aas
jp
mov
fcomps
int
inc
ret
adc
fstpt
aas
sbb
sbbl
loopne
out
cmc
sbb
pop
movsb
pop
xor
mov
push
test
inc
orb
movups
and
jb
ljmp
mov
cmp
jne
cmpsl
subb
cwtl
sub
shll
lret
lds
push
aaa
cmp
sub
push
popf
sbb
push
lock
add
mov
inc
ret
inc
lret
cmp
int3
cs
and
jl
pop
scas
mov
xor
jge
cli
inc
outsl
push
jo
movsb
push
inc
and
add
xor
and
stos
or
fdivr
pop
fcoml
lahf
arpl
es
jge
and
ja
insb
lahf
xor
cmp
mov
jno
pop
pshufw
mov
call
pop
pop
xor
mov
pop
pop
push
aad
fildl
or
scas
arpl
push
sbb
inc
sub
incl
jmp
jo
adc
lahf
sbb
push
sbb
movsl
mov
lea
push
adc
ljmp
subb
movsl
lds
lds
outsb
int
dec
push
pop
push
pop
test
inc
pop
cwtl
pop
loopne
ret
js
pop
dec
ficomps
mov
leave
int3
ror
and
cld
push
jne
add
dec
adc
jl
cs
sbb
mov
imul
mov
insb
push
pop
adc
mov
cmp
addr16
or
pop
mov
fidivrl
sub
jb
xchg
movsb
pop
xchg
pop
aas
jl
jmp
and
adc
fcomps
push
inc
pop
xchg
cmp
cmc
jno
jle
or
push
mov
addr16
sub
idivl
add
aaa
mov
stc
dec
sbb
fidivrs
ret
add
or
cltd
mov
mov
rcll
and
sbb
push
jge
addl
inc
xchg
lods
or
fnstcw
jg
xor
ret
int3
arpl
pop
and
cltd
outsb
popa
add
in
fstps
adc
cmp
sub
sti
scas
and
xchg
dec
scas
test
aas
adcl
xor
popl
mov
scas
outsl
daa
xor
push
sbb
and
retw
in
nop
jmp
in
pushf
pop
dec
push
in
jg
ja
movsb
aad
std
push
enter
btcl
dec
pop
fwait
cli
lods
inc
sub
es
push
or
cmpsb
adc
sarl
cltd
inc
xor
cli
or
ret
in
add
jg
jno
mov
pop
or
mov
xor
sbb
push
push
sbb
pop
push
sbb
pop
aaa
pcmpgtd
imul
cmp
notb
cltd
dec
fdivs
cmp
in
aaa
jg
lahf
mov
movsl
push
inc
daa
xor
out
pushf
xor
test
jge
fidivs
popf
idivl
test
or
stos
xor
xor
inc
xchg
fcmovb
and
adc
mov
jo
push
test
pop
scas
inc
incb
call
xchg
mov
sbb
jbe
add
or
insl
out
push
sub
jb
cmc
pop
sbb
xchg
js
dec
mov
mov
fsubrl
popa
clc
sahf
sbb
push
add
and
jb
sub
xchg
mov
in
and
lcall
xorl
xchg
jge
pop
fmul
cltd
test
sub
pusha
fisttpll
jb
mov
ds
pop
outsl
daa
cmp
fidivrs
cmp
aaa
into
decl
xchg
or
cmp
pusha
dec
rsm
in
sbb
pop
mov
mov
jne
xchg
mov
pop
out
mov
jecxz
sub
dec
fidivrs
test
sub
stc
or
mov
inc
fwait
or
js
stos
clc
pop
rorb
nop
insl
icebp
in
mov
fisubrs
jnp
mov
addl
pop
in
mov
arpl
imul
xchg
ret
test
or
xchg
arpl
pushf
ja
out
cmp
popa
in
test
jmp
xsha256
cmpsb
aam
mov
int3
cmc
sub
outsl
adc
mov
xchg
ret
int
fmull
xlat
push
fsubrs
ljmp
loop
adc
fcos
add
movsl
out
xor
xchg
inc
push
ss
xchg
test
inc
xchg
out
xchg
mov
mov
xchg
lret
in
xchg
dec
cld
les
sub
lahf
pop
repz
outsl
sub
sub
cld
cmpsb
xchg
rorl
mov
pusha
sub
loop
or
out
and
lods
add
int
push
aad
inc
ret
or
fwait
sti
jge
push
test
sbb
mov
mov
loopne
xor
rorb
or
mov
mov
lods
jo
inc
mov
clc
pop
call
push
bound
roll
pop
or
movsl
lea
jecxz
sarb
imulb
push
popf
pop
or
cmp
jl
rcrb
dec
cli
cltd
repz
mov
jl
js
test
mov
lahf
sub
fisttpll
mov
mov
andb
sbb
cmp
cmp
sbb
es
stos
sbb
fadd
stos
es
outsb
sub
mov
aad
push
roll
pop
lock
rol
loop
mov
daa
stc
pushf
dec
mov
pop
ficoms
fs
cmpsl
sbb
ficomps
mov
push
orl
xchg
sub
jmp
out
xchg
sub
loop
lahf
push
add
lea
mov
stos
sbb
sbb
outsl
cmpsb
push
mov
ja
cmpl
mov
jno
scas
addr16
stos
jle
xchg
loope
aaa
adc
ds
cmpsl
dec
push
push
or
ljmp
addl
scas
dec
aaa
cwtl
push
lret
movsb
pop
mov
nop
xchg
ret
popa
ret
pop
pusha
je
push
out
loop
jae
repnz
inc
int3
jg
adc
mov
sub
xchg
and
je
aas
xor
outsl
dec
jle
dec
add
jo
gs
out
jo
pop
fst
and
test
cmpl
pop
and
jo
inc
and
lea
push
xchg
mov
pop
pop
insb
push
or
mov
sbb
jmp
lret
pop
gs
out
mov
jo
orb
ss
aad
cltd
call
iret
and
loope
dec
mov
leave
sub
out
jo
pushf
or
dec
insl
push
xlat
outsb
outsb
jl
insl
push
jns
setnp
cmpl
sbb
jl
or
mov
test
decb
sbb
inc
popa
leave
ret
cli
ret
push
mov
rol
pushf
test
scas
inc
adc
push
movsl
jae
mov
inc
sbb
mov
pop
mov
mov
addl
es
xchg
adc
lods
inc
imul
aaa
stos
lea
mov
test
inc
lods
movsl
jmp
pop
mov
das
sbb
cmp
iret
pop
mov
xchg
xor
xchg
fcoms
push
cwtl
and
ret
sbb
pop
fdivp
cmpb
mov
movsb
lds
add
add
mov
mov
loopne
push
push
lahf
mov
dec
cltd
aam
lret
out
lret
fldcw
mov
mov
dec
jo
xchg
add
adc
sbb
cs
mov
cmp
aam
sub
push
add
scas
dec
cs
pop
jno
lods
jp
mov
push
mov
push
xor
fsubrp
inc
loopne
xchg
and
xchg
mov
xchg
mov
ret
orb
dec
pop
es
mov
push
decl
pop
pop
lock
decb
jns
fsubrp
in
or
push
sub
pop
scas
sub
mov
mov
aam
mov
test
shrb
call
mov
shl
dec
dec
aam
fwait
or
push
jne
jle
jb
mov
stc
inc
pushf
pop
dec
out
int
sarb
fisubrl
push
jecxz
mov
sbb
pushf
shrb
std
cmp
inc
mov
enter
cmp
aaa
aas
sbb
mov
arpl
repnz
dec
out
cmpsl
outsb
shl
daa
icebp
je
int
mov
ss
xor
out
or
mov
fcomi
mov
test
lock
scas
shll
gs
cltd
stos
sub
outsb
sub
pop
adc
push
push
or
adc
call
scas
ja
or
insb
dec
inc
mov
repz
xor
cmpsl
cmp
adc
mov
call
pop
xchg
pop
sbb
dec
xor
and
push
push
inc
loopne
xor
add
mov
stos
loopne
aam
mov
cwtl
das
inc
dec
mov
cmp
lea
testl
xor
jb
popf
test
mov
and
scas
shrl
jmp
or
or
mov
push
clc
mov
fiadds
and
xor
add
xchg
fwait
sub
repz
and
add
test
scas
adc
mov
dec
add
jp
popa
xor
and
into
pop
inc
sbb
fs
xchg
cmc
sub
sub
cmp
or
adc
test
test
aam
and
push
cmp
mov
fbstp
dec
mov
mov
mov
mov
and
mov
imul
mov
cmp
lock
add
jnp
fcoml
lods
les
jno
ss
push
repnz
lock
les
xchg
dec
sub
inc
lods
fdivrl
push
lods
imul
xchg
xor
je
sbb
fisubs
je
fcoms
jmp
adc
addr16
icebp
insb
add
mov
or
push
mov
aaa
inc
sub
test
test
mov
outsb
or
fsubrl
mov
xor
adc
inc
mov
mov
mov
or
das
rcl
push
push
jbe
xchg
movsl
pusha
sbb
xchg
adc
lret
pusha
mov
cmpsb
mov
push
xor
sub
hlt
sub
cmp
dec
in
dec
fcomi
jno
out
push
xchg
pop
dec
daa
mov
cmpsl
popl
jp
inc
fwait
xor
idiv
dec
scas
cld
mov
xchg
push
mov
dec
pop
subl
enter
xor
sahf
lds
enter
popf
or
mov
int3
pop
das
bound
or
sti
and
adc
lods
xor
fisubrs
iret
inc
jle
outsb
mov
ret
mov
push
or
es
aaa
jns
pminsw
pop
icebp
in
and
nop
sbb
ja
fnstsw
sbb
push
flds
pop
lock
pop
xor
shll
rcrl
es
out
hlt
cli
iret
loope
push
dec
in
dec
imul
fdiv
push
sahf
out
sarb
movsb
mov
in
dec
sbb
pop
sahf
add
push
xchg
mov
sbb
xchg
test
pop
mov
xchg
addr16
xlat
leave
mov
out
mov
adc
rorl
xchg
sahf
mov
bnd
cmp
sbb
outsl
jnp
enter
lcall
dec
push
add
shl
js
test
stos
jbe
frstor
mov
jecxz
lods
xchg
addr16
ss
bound
adc
pop
adc
cmp
xchg
leave
addr16
adc
push
dec
fsts
not
mov
test
jecxz
sub
fstl
es
test
push
push
aad
dec
mov
mov
inc
sub
mov
fcmovne
imul
jle
or
in
arpl
stos
push
dec
add
or
pop
cmpsb
xor
sbb
mov
xchg
dec
cli
idivb
lret
cmc
adc
out
fsubs
aas
sbb
lcall
and
loope
mul
scas
and
out
mov
jle
dec
mov
jbe
push
sub
and
enter
cmp
call
or
sbb
sub
mov
or
ret
mov
cmp
scas
xchg
add
add
pushw
lcall
ljmp
inc
push
addb
imul
lock
ds
dec
push
lret
sti
aas
iret
js
repnz
mov
xor
sbb
sbb
push
xor
fwait
mov
dec
push
sub
sbb
xchg
sub
sbb
dec
repz
shlb
mov
push
int3
call
mov
pop
vcvtsi2sdl
jbe
lret
stos
jg
xchg
mov
icebp
fdivp
shrl
repnz
dec
cmc
inc
or
xlat
sub
xchg
sub
or
in
les
cld
lret
and
outsl
inc
pop
insb
push
es
stc
or
lea
mov
mov
adc
cmp
fstpl
in
test
pusha
cmp
and
aad
rcll
outsb
sub
imul
imul
mull
xchg
pusha
add
sub
and
inc
fnsave
hlt
lods
jmp
rcrb
or
cmp
loope
das
nop
and
loop
addr16
push
sub
and
int3
jae
loopne
mov
sbb
aaa
into
adc
ss
dec
ss
cs
dec
ljmp
push
xlat
stc
lea
leave
adc
sub
shll
mov
imul
rorl
stc
cvtdq2ps
jnp
adc
jg
sbb
lds
xchg
mov
dec
pusha
inc
push
adc
and
xchg
mov
addr16
xor
mov
mov
movsl
adc
jne
xchg
jle
adc
jb
mov
xchg
mov
mov
adc
outsl
testl
aas
rorb
aad
adc
push
jae
pop
jmp
dec
jns
mov
dec
or
jge
sbb
mov
and
mov
fmull
xchg
jp
ljmp
xor
sub
inc
fnsave
xor
mov
es
cli
jbe
xor
xor
orps
leave
fisubrs
insl
movsb
popa
cmp
stos
xchg
lods
and
cs
push
mov
inc
fnstsw
cli
movsw
in
mov
mov
jecxz
mov
insl
push
and
push
or
add
lods
and
ret
cwtl
mov
dec
and
jmp
leave
and
andl
cltd
mov
pop
loope
xor
sbb
mov
pop
adc
loop
mov
pop
add
in
repz
les
jl
jg
mov
imul
mov
ret
into
or
push
arpl
adc
or
jns
mov
in
jbe
ror
add
lods
xchg
cs
hlt
dec
lods
adc
faddl
push
repnz
sti
mov
or
sbb
add
xchg
in
xor
imull
jg
push
pop
sarl
lret
vpxor
fs
fwait
les
add
fisubrl
jnp
xchg
hlt
loopw
pop
push
mov
push
push
into
cmp
mov
test
cli
andb
or
inc
pop
xor
dec
dec
or
loop
outsl
mov
sub
mov
fisubs
adc
fimuls
mov
sarb
insl
fldenv
ja
mov
xlat
push
xchg
xlat
add
enter
dec
cs
and
pop
mov
int
test
sub
jo
or
insl
jnp
data16
lcall
icebp
out
rorb
shrl
jge
iret
adc
std
xchg
scas
adc
mov
popf
cli
sub
fbstp
pop
dec
jns
adc
das
out
neg
pop
into
sub
adc
sub
insb
popa
loopne
je
xchg
gs
xor
fucomp
sub
mov
ret
mov
rolb
jne
inc
mov
inc
adc
xlat
shll
divb
in
into
lods
add
inc
outsb
sub
in
jecxz
or
sub
add
loope
push
push
in
mov
cmp
fs
mov
stc
push
std
cli
xchg
push
inc
call
rcll
ret
lret
enter
inc
or
jae
lcall
enter
inc
fsub
adc
inc
std
outsb
shrl
insb
and
pop
fidivs
scas
lods
adcb
in
push
dec
pop
sub
inc
pop
inc
dec
xchg
add
sbb
fwait
jbe
jo
incb
movsl
dec
xchg
sub
cmpsb
sbb
iret
cmc
popf
push
pop
fwait
sti
inc
mov
mov
mov
inc
scas
cwtl
pusha
push
daa
adc
stc
mov
mov
or
aad
push
jns
lock
mov
pop
ss
lcall
sub
and
pop
or
jge
and
xchg
cmp
cmc
sbb
fidivl
aas
mov
clc
std
xchg
cs
or
jecxz
sbbl
aam
je
sbb
aas
add
stos
inc
cld
mov
lret
shlb
sbb
fs
push
dec
dec
stos
push
not
popa
or
movsb
sbbw
push
arpl
jb
or
call
rcl
xchg
ret
pop
dec
push
pop
out
jp
pop
jnp
fcoms
popa
stos
cmp
int
in
mov
push
mov
add
jbe
lahf
dec
jbe
popa
test
and
cli
rolb
adc
xchg
arpl
adc
daa
push
push
je
cmpsb
orl
lret
bound
ds
jbe
jo
push
and
lret
inc
ja
popf
sub
dec
inc
sti
aas
fadds
lahf
lret
lds
cmpsb
push
nop
aam
outsb
jne
dec
testb
push
pusha
mull
xchg
lea
add
lods
fnsave
sub
fisttpll
xlat
call
cmp
outsb
xor
cmp
fwait
xchg
xor
dec
stos
and
pop
jecxz
xor
or
mov
testb
test
int3
jns
or
cltd
js
push
pop
add
push
cli
lcall
cld
pop
jmp
pop
inc
adcb
xor
aas
sub
pop
cmc
pop
stos
mov
aaa
push
pop
push
test
in
add
mov
arpl
mov
push
das
pop
or
popa
addr16
std
push
or
fisubrs
sbb
fwait
mov
mov
add
push
vpmulhw
cmp
outsb
cmpsb
lock
mov
paddd
pushf
shrb
mov
aaa
jae
dec
mov
jmp
pop
cwtl
popf
popf
lods
popf
nop
pushf
mov
mov
mov
in
sub
dec
cmp
es
sbbl
mov
dec
test
push
dec
in
jbe
lock
sahf
mov
loopne
cmp
filds
out
in
sub
test
hlt
aad
inc
repnz
mov
clc
stos
cwtl
std
pop
call
push
sahf
cli
pop
mov
mov
cld
sub
cmpsb
popf
dec
and
insl
mov
ret
dec
je
cmp
xchg
adc
iret
push
mov
push
dec
test
sub
test
inc
or
fcoml
lock
mov
cmpsl
sub
ljmp
and
mov
sbb
mov
xchg
fwait
cmp
and
sbb
or
sbb
lcall
in
jmp
dec
aad
sbb
rolb
sbb
stos
xchg
xchg
sub
sub
push
repnz
xor
mov
sbb
mov
fsubrs
sbb
das
movsl
jmp
adc
xorl
or
adc
inc
sbb
jo
ss
mov
jmp
rcrb
inc
cmp
cmp
sub
push
pop
aam
lods
nop
scas
stos
jbe
ss
imul
adc
sub
pop
pop
push
inc
nop
dec
pop
movb
inc
hlt
addr16
push
fs
xchg
pop
sbb
sub
add
sbbl
dec
push
dec
dec
icebp
lcall
mov
mov
pop
lods
popf
inc
daa
sarl
shlb
insb
imul
sbb
and
rol
jmp
je
adc
aad
rcr
jmp
push
pop
xor
pop
dec
mov
mov
push
push
or
jle
jae
shl
daa
clc
push
push
dec
pop
addr16
xchg
mov
cmp
jg
xchg
aaa
sub
pushaw
stc
xor
in
scas
cltd
loop
or
divl
pop
inc
sbb
add
inc
fcomps
jecxz
ljmp
sbb
fsubl
cmpsb
or
pop
outsl
ret
mov
flds
arpl
arpl
lods
scas
inc
pushf
mov
mov
nopl
inc
or
cmpsl
add
xchg
adc
cld
xor
aas
std
dec
stc
or
xor
and
in
xchg
sub
push
insl
int
mov
testb
push
fmull
jmp
es
cmp
fldl
inc
into
cli
push
int
jno
fstenv
cld
cwtl
mov
enter
std
decb
movsb
hlt
push
cmp
dec
adc
stc
into
sbb
push
das
stc
jo
jae
ficomps
test
insb
les
cwtl
stos
dec
shll
push
out
test
in
aaa
push
push
push
pop
cmp
mov
divl
and
xchg
pop
pop
mov
aaa
jle
mov
cs
jl
fwait
out
lock
in
pop
cld
inc
mov
cli
push
in
frstor
mov
and
xor
leave
jecxz
das
push
lcall
js
popa
xchg
pop
mov
les
sub
push
sub
or
sbb
int3
jo
nop
pop
add
cmpsb
xor
push
repnz
insb
int3
lret
mov
scas
es
fwait
inc
enter
mov
movsl
mov
dec
push
fs
in
mov
popf
jbe
shlb
cmpsb
xchg
lret
jb
pop
mov
jae
push
fisttpl
stos
xor
or
pusha
add
fwait
adc
icebp
pop
jg
mov
outsl
mov
movsl
cmp
sub
mov
into
outsl
add
outsb
jp
mov
mov
xor
and
sub
lret
aas
mov
mov
sbbl
adc
xchg
pop
insb
js
xor
push
xchg
add
bound
or
xchg
push
mov
cs
xor
add
cli
add
frstor
pushf
pop
dec
cmp
hlt
add
movsb
jmp
and
out
mov
push
mov
mov
push
fidivl
in
scas
ret
sbb
fadds
cmp
rolb
or
or
and
pop
cmp
push
lods
fsubrl
jbe
shll
fcomip
adc
jno
addb
or
xchg
inc
jle
sbb
push
jge
mov
aaa
loope
inc
divl
ret
pushw
mov
jno
or
push
push
or
xchg
mov
xchg
loopne
negb
repz
mov
adc
ds
dec
aad
addr16
cmp
xchg
or
sbb
dec
cmp
daa
jp
pop
adcl
adc
and
and
lcall
popa
adc
push
push
ljmp
jno
jmp
adc
pushf
push
or
out
jmp
lcall
add
jmp
data16
fwait
cmpsl
mov
and
sub
mov
das
push
mov
push
dec
dec
cmp
out
dec
mov
cmp
div
xchg
shrb
sub
pop
int
and
pop
mov
jae
and
adc
inc
jl
adc
mov
xchg
sub
outsl
or
dec
sbb
ja
push
icebp
jns
mov
addr16
xchg
and
fbstp
lret
or
cmp
sbb
sahf
bound
mov
or
insb
jle
dec
insl
ror
jno
std
xchg
loope
clc
adc
jmp
test
jbe
insb
pop
cmpsl
xor
mov
mov
ljmp
ret
push
fdivl
gs
addr16
sbb
xchg
sub
and
movsl
test
imul
jmp
cmc
scas
out
imul
bound
mov
push
sbb
xchg
push
cmc
aad
push
ret
xchg
push
sti
jno
mov
and
inc
sbbl
sbb
xor
mov
insl
push
mov
mov
iret
movsb
aam
jbe
and
dec
je
dec
or
mov
pop
mov
sub
and
ret
insl
sbb
mov
cmpsb
mov
cli
bound
push
xor
or
jmp
mov
inc
fstl
pushf
xor
sarb
xchg
cmp
mov
or
xchg
mov
xor
div
xchg
mov
ljmp
testb
or
dec
daa
pop
sbb
xor
inc
pop
lret
push
fistpl
cmc
aad
rclb
ret
filds
and
aad
pop
addr16
out
adcl
aam
cmc
push
xchg
loop
pop
mov
adc
sahf
addr16
int3
iret
inc
shll
into
adc
gs
hlt
test
mov
mov
pop
pop
cld
xor
out
addr16
stos
test
test
cs
pop
sub
mov
dec
insl
sbb
xor
mov
int3
pop
xor
fimull
sbb
pop
lock
sbbb
rcrl
jo
std
mov
arpl
movsl
xchg
jbe
test
rcll
push
pusha
pushf
mov
in
xchg
cmp
lret
inc
add
mov
and
add
push
add
scas
gs
mov
int
jno
push
in
push
dec
insb
sub
mov
repnz
scas
cmp
insb
push
xor
hlt
xchg
js
dec
xchg
pop
dec
lahf
jnp
aad
mov
xlat
scas
pop
or
jno
inc
jae
ja
jp
fidivrl
pop
fistps
into
push
add
jl
lret
aas
xor
imul
in
jge
fwait
ss
add
mov
daa
mov
xchg
sbb
adc
add
mov
cmp
pop
testl
push
pop
xchg
inc
idivl
cmp
pop
xchg
cmp
mov
xor
popf
and
dec
fisttps
test
adc
mov
dec
cmp
cld
dec
jae
sbb
mov
pop
hlt
loopne
xor
add
fdiv
push
or
scas
jno
pop
repz
std
lret
ja
jecxz
add
inc
fcoml
pop
popa
lcall
mov
jbe
fldl
pop
cmc
je
xor
or
pusha
imul
aam
push
mov
and
stos
lods
aas
dec
pusha
dec
fists
adc
shlb
imul
mov
sub
dec
sub
mov
pop
fwait
fs
aam
cmp
dec
loopne
pop
mov
inc
movsb
pop
jae
sub
in
pop
mov
arpl
xchg
xorl
adc
pop
insb
push
aas
lds
outsl
push
lcall
outsl
mov
adc
xor
fdivl
or
xor
jns
dec
loop
repz
js
jecxz
and
dec
push
fucom
or
and
jne
push
call
fdivrs
jge
push
push
rol
aaa
and
pop
aaa
xchg
add
fisubrl
xchg
xchg
sub
fcompl
mov
mov
mov
xor
ret
int3
arpl
rcrl
stc
push
jmp
leave
or
int3
arpl
push
stos
inc
adc
inc
adc
mov
push
call
mov
imul
lret
call
push
mov
sbb
mov
mov
mov
iret
pop
add
push
lds
push
repz
fists
and
fsubl
aaa
pop
hlt
addr16
loop
sbb
lods
imulb
daa
sbb
pop
xchg
lock
hlt
adc
push
pop
cmp
leave
cmp
test
mov
cmc
cmp
nop
mov
in
test
xchg
out
in
sbb
test
mov
mov
lock
fldl
fsubs
lahf
jecxz
data16
cltd
xor
jecxz
enter
sub
dec
pop
lock
in
lds
daa
inc
jmp
cld
push
fwait
xor
imul
sbb
jp
push
cmp
mov
iret
mov
pop
outsb
and
pop
cmp
mov
in
mov
out
mov
jmp
xchg
and
or
cmpl
lods
es
ret
sub
mov
popf
fdivrl
mov
scas
das
add
hlt
lret
jno
data16
and
popa
and
aad
sti
push
mov
lret
roll
pop
cmp
mov
pop
jl
xlat
and
cmp
pushf
loop
repnz
in
roll
nop
jmp
and
fimull
or
ds
jo
xor
sbb
and
fdivs
dec
or
shl
scas
mov
das
pushf
xor
xor
aaa
push
sbb
movsb
add
push
sub
dec
mov
loopne
jo
clc
mov
cmp
lea
mov
mov
adc
pop
daa
arpl
int
movsb
push
ss
popa
push
cmp
inc
popf
cli
sarb
mov
sahf
rcr
pop
inc
pusha
pop
iret
shrb
push
mov
cmpb
cs
jnp
xor
cltd
sbb
cmp
add
mov
adc
xor
mov
sub
clc
mov
fildll
mov
pop
sbbb
jg
outsb
cmp
and
or
in
movsb
data16
ficoms
int3
mov
sahf
clc
push
dec
push
pop
ss
adc
fs
and
xchg
xchg
test
ret
popf
mov
jg
jne
add
sbb
xor
test
mov
cmpb
inc
or
pop
imul
push
nop
mov
mov
push
adc
add
fisttps
sbb
cmp
cmp
pop
out
sbb
fnstenv
dec
fmull
jle
cli
inc
dec
aam
pop
cltd
mov
cmc
repz
call
pop
cmp
add
sub
out
mov
mov
or
and
fcmovu
repz
cli
pop
loope
sti
std
push
pop
es
bound
fwait
mov
ss
inc
mov
cmp
stos
lret
arpl
cmp
xor
call
arpl
inc
pop
and
outsb
sbb
cmpsl
mov
iret
jno
lret
mov
xor
xor
inc
lea
test
iret
pop
enter
out
add
inc
jp
popa
clc
xchg
sbb
and
stos
adc
cmp
lret
dec
push
jb
dec
add
movsb
sbb
cs
sbb
push
lret
adcl
and
push
pop
pop
push
or
push
sub
jg
rorl
pushf
push
inc
into
insb
push
inc
insb
jecxz
adc
in
mov
popa
stos
test
fstpt
dec
fistps
cmc
xor
xor
dec
xor
js
sub
add
add
inc
push
scas
call
dec
add
les
jge
imul
cmc
xchg
jo
jb
or
mov
xchg
push
testl
inc
std
mov
or
mov
mov
je
dec
dec
xlat
and
sbb
mov
xchg
frstor
mov
cli
lcall
jb
loopne
sub
sub
jne
insl
add
mov
imul
and
pushf
mov
and
inc
ja
adcl
mov
add
loopne
frstor
insl
sub
std
popf
inc
add
data16
jmp
into
jl
pop
sbb
xorb
xchg
fildl
lock
cltd
cld
mov
mov
js
loop
push
sbb
sub
scas
lea
pop
in
add
data16
movsl
int3
jge
and
and
inc
aas
xor
xchg
sbb
cli
leave
dec
mov
sbb
inc
push
cmp
jmp
enter
xor
add
pop
insl
lea
hlt
push
push
je
mov
lret
add
aad
dec
js
mov
pop
inc
xchg
fwait
icebp
icebp
mov
stos
and
sub
rolb
faddl
push
push
xor
inc
fistpl
aas
bound
stos
insb
pop
fcmovbe
push
popa
aad
shll
xchg
into
jno
mov
mov
xlat
outsb
push
cmp
sub
cmc
lods
movsl
jecxz
sbb
xor
xor
mov
cmpl
push
popf
xchg
mov
sub
ds
sbb
cmc
sub
aas
pop
pushf
dec
mov
aam
push
sbb
and
ret
je
addr16
xchg
add
jne
xor
les
popa
cli
inc
jmp
sbbl
lcall
mov
lcall
sbb
xor
pop
add
sub
jns
in
sub
pushf
aas
nop
sbb
in
push
mov
add
subb
lea
dec
test
loope
iret
mov
push
lret
cmp
int
jae
push
xlat
outsb
xor
clc
add
push
rcrb
mov
call
or
insl
xchg
insl
adc
pop
fst
imul
xorl
addr16
cmp
push
lock
inc
or
fbstp
dec
movsb
dec
aad
je
jecxz
cmp
push
stos
mov
mov
mov
loopne
inc
negb
jne
dec
pop
int
dec
imul
sbb
or
adc
cmp
imul
or
and
push
int
test
sub
sbbb
adc
outsb
jge
xchg
cmp
mov
in
and
lahf
and
mov
mov
push
push
mov
mov
mov
sbb
test
push
pop
iret
aaa
jae
jp
mov
scas
sti
xchg
loopne
mov
ds
mov
in
pop
imul
imull
xchg
jo
jnp
int3
jae
insl
cmovae
aas
cmpsl
mov
out
xor
cmp
lods
ret
sub
mov
ja
lcall
mov
mov
shll
negb
adc
fdivrs
fldcw
cmp
xor
push
test
out
faddl
fsubrs
and
lods
lds
xchg
imul
sub
aaa
xlat
add
add
and
loope
js
lret
mov
mov
fldenv
lahf
cmpsb
bound
inc
stos
pusha
test
sub
fnstenv
add
subb
and
stos
xor
jecxz
ljmp
dec
inc
jb
or
hlt
pop
mov
out
dec
adc
adc
arpl
cltd
cli
rolb
jl
cmp
xlat
sub
and
and
cmp
dec
dec
cmp
pushf
adc
and
xor
lock
adc
outsl
and
movsb
mov
out
jae
ljmp
xchg
subl
adc
movsb
pop
ljmp
lock
and
mull
push
cli
xchg
cmp
dec
aam
lahf
push
mov
pop
ss
xchg
push
enter
and
imul
rcr
add
cmpsb
jb
mov
adc
fcompl
in
pop
mov
jae
incl
frstor
sbb
xor
xlat
mov
pop
dec
cmp
iret
mov
mov
les
shrl
pop
mov
xchg
test
ret
in
sarl
pop
sub
inc
or
mov
push
insl
sbb
jp
js
daa
fsts
divb
mov
jbe
mov
sub
mov
scas
xor
add
push
jbe
cmp
mov
mov
push
cmp
fmull
stos
mov
cmpsb
jbe
mov
push
pushf
jno
adc
push
dec
test
jl
ret
daa
leave
insl
out
add
sbb
addb
add
xchg
push
pop
mov
ljmp
out
in
lret
icebp
mov
fidivrs
sub
pop
mov
nop
jo
xor
mov
pusha
mov
movsb
scas
ds
xor
rolb
push
rorl
cltd
or
fs
lea
sarb
xor
arpl
imul
cmp
pop
jae
ds
jo
fidivs
test
xor
pushf
popa
or
mov
pop
mov
mov
jbe
lock
js
enter
sbb
xor
int
cwtl
pop
cli
enter
fidivs
dec
cmp
sbb
imul
xchg
test
orb
fwait
mov
push
sub
sub
mov
mov
xchg
dec
iret
sbb
ss
dec
xlat
cmp
mov
adc
mov
enter
mov
adc
mov
fiaddl
cmpsb
cli
push
or
sti
fidivs
cwtl
inc
add
arpl
or
movsb
dec
mov
ret
xchg
sub
push
dec
mov
lds
adc
cmp
mov
mov
push
mov
adc
pop
xlat
lea
mov
push
pop
push
lea
mov
lcall
add
scas
shll
jge
js
cmpsl
pop
popf
xor
clc
cmc
fisubs
gs
jg
jo
test
loopne
popf
pop
push
scas
mov
and
sbb
cmp
in
mov
loopne
cmpsb
pop
loop
jne
js
dec
sub
pmaxub
arpl
and
imul
sub
mov
ret
or
inc
or
int
dec
and
cmpsb
lock
add
xor
sahf
xchg
pop
adcb
outsl
cmp
add
popa
in
xchg
mov
sbbb
movsl
and
push
mov
pop
jecxz
test
ds
dec
decl
add
outsl
stos
fwait
sub
loop
jmp
and
testl
pop
jl
and
fwait
pop
mov
adc
inc
mov
mov
and
jp
ja
cltd
fdivr
mov
xor
adc
jne
cmp
pop
ljmp
adcb
cmpsb
push
in
mov
and
xchg
cmpsl
add
sahf
jle
test
neg
loope
adc
in
dec
arpl
ds
or
sarb
shll
lds
mov
insl
adc
pop
xlat
fsubr
pop
roll
outsl
das
movsl
cmp
popf
das
or
mov
dec
adc
push
add
inc
gs
cmp
pop
cmp
lds
mov
sbb
xor
cmp
insl
adc
or
xor
bound
dec
xor
mov
into
and
add
adc
pop
popf
adc
mov
addb
loopne
xlat
mov
and
mov
mov
sub
out
dec
dec
inc
test
popf
fmull
cmpl
jecxz
stos
imul
dec
mov
xchg
sub
cmpsl
repz
dec
jle
fucomp
mov
mov
xlat
and
xlat
xor
sbb
push
jmp
pop
pop
aam
lods
pushf
inc
add
sahf
lods
cmc
imul
in
inc
lret
inc
ds
clc
pusha
int
adc
mov
push
and
rorl
icebp
lods
sbb
cmp
push
in
mov
lret
fldl2t
mov
sub
adc
jecxz
or
push
sub
dec
sahf
mov
pushl
mov
cltd
mov
lret
pushf
gs
push
rol
cs
adc
sbb
lret
je
int
xor
inc
scas
push
jge
jbe
mov
pop
fcos
scas
and
loope
std
test
leave
pusha
pop
jae
pop
movsb
gs
sub
inc
repz
xchg
add
imul
xchg
mov
outsb
lock
adc
es
xor
loope
out
imul
mov
sub
mov
adcb
mov
in
xchg
ret
mov
nop
ficomps
scas
cmpsl
mov
popa
pusha
pop
cwtl
and
les
jg
pop
push
mov
add
sub
sbb
outsb
jnp
sub
sarb
icebp
inc
dec
jbe
loopne
jns
sti
ds
in
sbb
lret
insb
add
enter
mov
pop
imul
lcall
aas
and
jle
mov
cwtl
nopl
lahf
ffree
imul
outsl
jl
clc
pop
movsb
xor
mov
xor
mov
in
xor
lock
popa
popa
push
imul
cmpsb
test
faddl
in
push
cmp
dec
test
je
cmc
mov
pop
xchg
xor
push
in
sahf
out
sarl
adc
lahf
mov
lods
push
es
push
pop
inc
add
adc
into
xor
popl
jns
pop
divl
dec
loope
add
pop
loope
hlt
push
push
mov
sub
mov
push
test
arpl
cld
or
insb
adc
push
xchg
shll
xchg
insb
in
ds
adc
mov
add
scas
lock
jmp
inc
fwait
mov
cmp
lock
pushw
loopne
call
sbb
cmp
stc
cmpb
dec
pop
mov
push
das
js
dec
gs
pop
rorb
push
mov
sub
mov
dec
pusha
in
xor
jns
and
and
lock
insb
out
out
adc
fsubrp
arpl
xor
xchg
fs
bound
dec
in
insl
cmp
jo
outsl
les
push
xchg
stos
imul
repnz
push
xlat
shll
pusha
mov
add
data16
xchg
adc
iret
shll
scas
insl
mov
and
jno
pusha
pop
imul
push
mov
xor
bound
cwtl
jmp
insl
sub
cld
jne
or
in
sbb
leave
enter
std
jns
aam
push
inc
dec
loopne
cmp
imulb
cmp
or
pop
sbb
in
or
lock
adc
jl
mov
add
adc
js
loop
sub
push
cld
cmp
popa
idivb
xchg
pushf
lock
xchg
cmp
stc
imul
mov
push
fdivs
clc
notl
out
mov
fwait
push
jo
mov
ss
frstor
cld
data16
icebp
lds
dec
inc
loope
repnz
xor
pop
lahf
xchg
push
test
bnd
loop
and
movsl
outsl
push
shr
cmpsb
cmp
test
fldenv
xor
addr16
pop
pop
cmp
cmp
aas
pop
lahf
aad
repnz
pop
adc
mov
mov
push
xchg
cmp
leave
xor
insb
es
adc
lcall
std
scas
and
decb
outsb
sbbl
ret
adc
aaa
or
xor
or
stos
pop
repnz
daa
clc
inc
jns
jbe
jnp
js
and
arpl
das
jnp
repz
xor
lods
xchg
mov
lret
cs
lret
cwtl
cld
jmp
mov
std
cmpps
imul
pop
out
inc
pop
lcall
xor
cmp
jno
mov
jbe
adc
xchg
and
sbb
andl
mov
insb
push
push
sub
lea
or
dec
jne
dec
ret
int
in
mov
add
and
add
or
cltd
jne
sub
stos
xchg
test
scas
bound
std
lock
mov
cs
faddl
mov
stc
cmp
push
jmp
je
inc
jge
sbb
or
pop
push
and
sti
pop
out
xor
sarl
pusha
fidivs
add
mov
out
es
stos
cli
pop
adc
xchg
mov
sbbl
xchg
lcall
jbe
insb
xchg
rol
lahf
mov
add
or
lcall
cmpsb
in
scas
xor
outsl
addr16
icebp
mov
xor
pushf
push
sub
push
jge
pop
and
xor
mov
pop
outsb
popf
ret
cmp
imul
out
jno
shlb
or
insl
aam
lahf
fisubrl
adcl
push
dec
jmp
mov
mov
dec
icebp
adc
pop
xchg
mov
dec
xor
outsl
xchg
jle
jnp
andl
dec
sub
cmp
lea
mov
fstpl
ds
and
inc
cld
sbb
pop
mov
loopne
add
sbb
sub
jle
pop
lock
jo
dec
imul
js
cmpb
cmp
cwtl
scas
push
push
lret
js
jno
xchg
in
dec
push
push
cmp
addr16
loopne
inc
sbb
ja
cmp
nop
fwait
inc
aaa
pop
icebp
js
push
cs
and
dec
mov
outsl
pusha
enter
test
out
popf
addl
adc
cld
dec
ficomps
stos
in
xchg
cmp
in
jmp
shrb
in
test
adc
sub
xor
ja
das
mov
test
lret
mov
and
enter
gs
int3
sbb
sarb
outsb
sbb
lods
cmp
xor
mov
mov
pusha
dec
ret
pop
xchg
in
scas
pop
cmp
xor
fadds
jns
std
rolb
notl
cmp
lcall
sbb
mov
sbb
and
jp
xchg
sahf
cmpsl
add
imul
mov
cmp
jp
sti
pop
and
mov
mov
fstl
dec
dec
sbb
popf
xor
and
mov
enter
fdivrs
jge
add
pop
movsb
or
mov
push
jecxz
add
mov
jmp
iret
xchg
mov
sbb
gs
jle
ret
push
mov
xor
popa
or
xor
pop
jns
xor
bound
fucom
push
insl
sbb
push
repnz
mov
xor
add
insb
pop
sbb
ret
sbb
adc
lea
pop
scas
push
jle
fisubs
hlt
test
loop
mulb
mov
stc
insb
gs
sbb
sbb
mov
dec
jecxz
xor
ds
mov
adc
ja
je
jmp
jmp
ss
add
xchg
push
sub
aam
xchg
jb
xlat
mov
push
jnp
mov
mov
jmp
inc
add
cmpsb
mov
adc
stc
inc
jne
cmp
push
sbb
adc
push
add
mov
scas
push
dec
pop
pop
mov
out
aaa
sti
xor
cwtl
pop
xchg
mov
sbb
sbb
data16
jnp
pop
pushf
cltd
aas
cmp
fstl
add
insb
mov
sub
xor
es
sub
lret
xor
aaa
adcl
inc
and
out
jo
lds
es
pop
daa
push
push
popa
cmc
mov
jecxz
push
pushf
sti
fwait
scas
inc
fldcw
jae
not
xor
mov
xchg
das
mov
jmp
mov
int
jne
push
cmc
bound
and
jecxz
mov
mov
test
int
add
movsb
fidivrs
pop
js
cmp
fnsave
lcall
push
xchg
ja
stc
call
push
jb
lea
lahf
pop
enter
dec
xor
or
dec
pop
cmpsl
scas
dec
inc
test
data16
idivl
call
mov
mov
push
and
js
sub
inc
push
add
jmp
ret
and
pop
and
scas
xchg
push
outsl
jb
stc
clc
lahf
neg
daa
pusha
mov
dec
imul
out
les
ret
les
and
inc
outsb
jne
mov
in
mov
lea
shrb
dec
pop
bnd
test
dec
jns
jp
lds
out
push
mov
fmull
aad
insb
add
fbld
xchg
mov
sarl
sub
rolb
icebp
sbb
xor
adc
leave
int3
jg
xor
es
cs
sub
add
fwait
scas
adc
jp
out
jecxz
aaa
in
cltd
pusha
xchg
loop
addl
loop
jnp
jp
xor
stos
lds
adc
aaa
outsl
xor
mov
fimuls
cld
repnz
pop
and
ds
pop
lcall
pop
fnstcw
mov
xor
enter
aas
push
mov
testl
lret
in
ss
in
xchg
outsl
daa
inc
fldl
mov
out
jne
inc
std
or
ficoms
popf
mov
dec
fcomp
dec
out
incb
lods
or
insl
pop
cmpsl
andl
lods
data16
gs
fxch
sub
insl
adc
nop
mov
jae
adc
cmp
sbb
xchg
adc
xor
mov
movsl
pop
jmp
add
ret
or
xchg
scas
movsb
jp
sbb
nop
pop
sub
pop
jno
data16
jge
ja
adc
inc
js
addr16
andl
mov
clc
nop
addr16
fnstenv
mov
scas
mov
or
ret
adc
push
sti
ss
xlat
mov
xorps
sbb
int3
filds
cmp
sti
dec
xchg
cmpsb
sbb
push
mov
mov
enter
xchg
jge
in
dec
loop
nop
xchg
mov
rol
jo
sbbl
cltd
fsubs
inc
gs
inc
and
out
js
lods
inc
stc
adc
int
lret
mov
push
sbb
dec
je
sub
dec
dec
mov
push
sahf
imul
push
xlat
jmp
push
sbb
mov
cld
mov
ret
pop
test
test
jno
jp
enter
add
and
jb
fists
test
cmc
mov
xor
test
fnstcw
or
outsb
push
mov
lods
mov
pop
adc
je
jp
jb
push
les
dec
mov
jne
lds
sub
xor
sti
mov
xor
loopne
cmp
in
pop
push
add
inc
push
mov
nop
xchg
fistpl
test
push
mov
enter
out
mov
lea
movsl
mov
add
aaa
fsubr
stc
lret
sbb
int3
xorb
mov
ret
mov
sarb
shrl
jle
outsb
out
xchg
push
clc
fdivp
btc
fistpll
mov
mov
lock
pusha
rcrl
aad
sub
lock
out
xor
test
mov
lock
mov
fstpt
test
mov
int
inc
fs
pop
movsl
jmp
fbld
mov
not
pop
add
iret
stos
xor
add
cltd
test
ds
add
xchg
jns
pop
jne
lret
int3
push
out
fwait
aam
lret
test
fs
fs
pushf
mov
xor
or
inc
mov
xchg
arpl
add
push
mov
mov
into
xor
or
xchg
imul
dec
cmpsl
mov
stos
sbb
ss
in
shrb
xchg
decl
cld
pop
in
push
or
std
pop
cmp
lods
cs
pop
mov
fldl
popa
jns
pop
xchg
cs
push
or
test
out
flds
and
test
decl
das
mov
icebp
imul
aaa
addl
inc
add
sub
insl
mov
cmp
insl
leave
je
dec
pop
hlt
outsl
fdivrl
pushf
cmpsl
ds
jecxz
test
loopne
ja
or
dec
mov
push
or
lods
adc
jns
adc
push
dec
pop
jg
inc
dec
adc
mov
int3
int
inc
aas
push
in
fwait
int
inc
mov
icebp
xor
scas
push
sbbl
add
sbbb
adc
outsl
dec
pushf
pop
inc
es
add
xlat
pop
jle
and
and
js
clc
lock
cli
rclb
inc
mov
push
rcl
enter
fstl
addr16
pusha
jp
mov
fisttpl
and
stc
push
or
pop
sub
cltd
shll
mov
gs
add
sub
fimuls
pushf
popa
pop
jbe
inc
shl
xor
stos
cmpsl
ds
loop
in
loop
fnstcw
ret
and
addr16
aaa
pop
xchg
sub
fldl
aas
inc
outsb
mov
imul
xchg
push
test
shl
test
mov
sbb
shlb
call
xor
jae
shrl
int3
ret
add
rolb
mov
xor
mov
jp
orb
jbe
or
test
sub
inc
cli
mov
push
jno
inc
xor
in
rorb
add
scas
fmull
fdiv
and
push
mov
add
sbbl
mov
push
outsl
add
xorb
inc
int
aam
cmpsb
ret
je
xor
imul
mov
dec
pop
jl
fs
mov
adcb
sbb
andl
inc
mov
jl
add
das
or
je
cmc
lcall
push
jp
and
incb
sub
pop
lcall
inc
jo
xor
jle
pusha
mov
push
xchg
sbb
xchg
mov
adc
jmp
and
inc
sarl
adc
or
insl
xchg
pop
insl
inc
push
pop
fidivrs
lea
mov
jmp
and
mov
pop
test
dec
xor
test
push
ds
pop
lods
cmpsl
mov
lods
in
sbb
stos
inc
ret
iret
repnz
imul
in
aad
xor
fwait
scas
adc
sub
insl
inc
cmc
xor
in
push
movsl
xchg
or
mov
sbb
out
or
or
lea
insl
aaa
cmp
pop
int
add
es
add
nop
jl
orl
jmp
xchg
popf
mov
lcall
out
xchg
fstps
test
mull
imul
jle
xorl
js
pusha
sub
and
jne
idivb
cmc
outsl
sbb
popf
int3
dec
ret
pop
push
sbb
mov
dec
subb
rorb
into
pop
or
jno
call
adcb
fldt
pop
mov
push
add
push
movsb
aaa
leave
out
bound
push
icebp
xchg
mov
add
sub
xor
jae
push
loope
mov
sahf
nop
daa
adc
xchg
dec
aam
lods
dec
or
outsb
fldt
xor
sbb
jns
mov
or
sti
movsl
mov
jae
adc
shlb
je
lods
cmpsl
aad
xchg
adc
sub
add
mov
pusha
sti
ret
jg
addr16
enter
das
out
popa
popf
lea
and
push
test
push
mov
filds
dec
test
pushf
addr16
mov
lret
ret
jp
xor
stos
dec
stc
in
sbb
pop
fcmovnu
mov
xor
into
lock
xchg
icebp
jno
test
stos
ja
mull
mov
lods
jns
jbe
mov
mov
mov
popa
lds
cs
jg
out
cmp
jb
jge
sbb
mov
adcb
pop
rorb
repz
xchg
ficompl
or
cmp
mov
rcl
dec
sbb
lods
out
adc
outsl
inc
mov
sbbl
adc
or
xor
mov
push
or
sub
mov
icebp
dec
mov
mov
lds
enter
adc
and
push
dec
popf
mov
sbb
mov
xor
lcall
sbb
cltd
and
dec
cmp
scas
call
jno
xchg
inc
sub
fcomp
and
mov
movsl
push
data16
or
test
fbstp
push
aad
adc
bnd
push
stos
shll
xorl
ss
adcl
ss
jnp
jne
mov
dec
cmp
mov
mov
mov
pop
mov
dec
dec
fcomps
adc
xchg
fists
xchg
adc
mov
cmp
out
bound
dec
repnz
cmp
inc
popf
out
mov
out
cmp
jns
xchg
icebp
movsl
jmp
cmc
push
cmp
ret
xchg
xor
jbe
jae
pop
mov
push
cwtl
push
xchg
pop
jne
cltd
int3
fs
jecxz
lret
push
es
and
or
in
or
packsswb
fwait
test
ret
adc
pop
mov
xchg
das
fdiv
cld
sbb
mov
xchg
and
push
xchg
pushf
leave
mov
in
adc
push
xchg
push
sub
ss
jecxz
jnp
outsl
xor
add
mov
shrb
std
out
cmp
push
mov
mov
insl
call
or
and
popa
jg
dec
xchg
sub
push
mov
lods
ret
sbb
pop
int
sbb
xor
inc
pop
addr16
imul
xor
int
inc
loope
push
lret
or
add
inc
imul
inc
in
nop
lock
cmp
test
adc
cmp
fnstenv
lahf
sub
push
lods
popf
push
into
jns
int
mov
inc
popf
dec
push
and
incb
shrb
test
sbb
jbe
pop
scas
loope
mov
je
lcall
cwtl
cmc
add
scas
jmp
mov
push
mov
sub
dec
push
cmpb
sti
sub
jle
divb
into
popa
into
xor
decl
cltd
in
mov
xchg
push
mov
cmpps
nop
mov
or
dec
mov
in
and
or
push
sub
arpl
push
scas
inc
or
mov
das
dec
pop
push
roll
insb
mov
xor
xchg
or
or
xchg
lret
jns
push
imul
sub
jle
into
fwait
cli
jmp
cld
adc
lods
sahf
push
repnz
jns
mov
jl
inc
stos
dec
lea
mov
and
rcll
enter
push
fnsave
jo
jl
pushf
mov
and
scas
mov
ja
xchg
dec
sahf
cmpsw
data16
je
jmp
pop
mov
mov
push
enter
outsb
lahf
loop
adc
adc
test
xor
fldt
inc
adc
adcb
and
bound
xchg
xor
jne
jp
add
mov
and
inc
mov
cmp
leave
mov
adc
jbe
or
push
and
outsb
push
mov
xor
cwtl
pop
cmc
leave
rorb
cmpsl
pushl
lds
divl
push
push
push
loopne
xor
lret
aaa
lret
divb
pop
mov
xchg
mov
lock
sbb
fsubrl
xchg
outsb
cs
fbstp
mov
pop
pop
cmc
jnp
fucom
pushf
jl
mov
test
test
mov
jg
mov
in
lods
repnz
aas
ror
inc
pop
xchg
jmp
ret
mov
shl
ret
sbb
int3
idivl
xchg
cmpsb
in
lods
mov
mov
pusha
out
sbbb
clc
mov
sub
shrl
out
inc
push
int3
shlb
jmp
loope
cmpsb
push
add
inc
jmp
sbb
sub
mov
push
and
adc
push
adc
dec
fs
repnz
sub
aaa
std
cltd
xchg
xor
mov
packsswb
and
arpl
mov
ljmp
pop
xchg
or
pop
xor
pop
push
cmp
es
test
mov
test
xor
cs
or
xchg
insl
or
xor
nop
xchg
add
inc
cltd
push
inc
xchg
loop
filds
push
call
adc
xor
xor
inc
aad
xor
and
in
pop
out
enter
xchg
repnz
cmp
xchg
or
inc
xlat
or
xor
jns
push
jmp
or
xor
mov
mov
sti
ja
iret
pop
sti
dec
ror
pop
enter
inc
adc
leave
sub
ja
pushf
push
mov
ret
stos
adc
in
mov
lock
mov
fildll
addr16
cltd
mov
add
and
inc
mov
adc
aam
and
pop
inc
orb
mov
mov
xor
out
mov
fwait
adc
pop
xorb
mov
adc
andl
inc
push
stos
mov
mov
sub
leave
ja
adcl
inc
es
subb
mov
pop
and
fildll
test
das
ljmp
iret
dec
xchg
xor
and
mov
movsb
outsb
lock
mull
push
aaa
iret
test
cmp
adc
fs
ljmp
in
shrl
ds
jle
mov
pop
jl
inc
dec
ss
push
inc
cmpsb
mov
or
clc
jge
xlat
je
fiadds
std
jno
shll
xchg
pop
out
push
jbe
decb
leave
dec
int3
int
repnz
or
mov
leave
adc
stos
aas
movsl
aaa
jge
xchg
adc
adc
xchg
lds
imul
nop
push
jno
out
jno
lret
in
bound
inc
mov
enter
or
xchg
inc
mov
push
mull
or
or
lods
fwait
dec
lock
sbb
sbb
mov
inc
sahf
sbb
cmp
sbb
test
add
jecxz
lods
popa
or
xchg
stos
addr16
xor
rol
and
jnp
out
or
adc
cmc
aad
scas
sbbb
ror
lahf
cld
int3
push
or
cmpsl
mov
mov
mov
mov
push
add
subb
pushf
stos
xor
std
movsb
dec
xor
dec
loopne
inc
cmp
cmp
push
cmp
or
or
aaa
fistpll
xchg
repz
add
aaa
stc
xchg
xchg
stc
pop
movsl
fisttpll
scas
mov
in
leave
pusha
sbb
cmpsl
jb
cmp
push
in
fstpl
ljmp
mov
push
popf
lods
inc
or
fbld
jl
enter
rorb
jmp
xor
push
and
push
adc
push
add
inc
add
add
mov
cmp
push
cltd
adc
ss
mov
nopl
xor
in
jmp
fisttps
int3
pop
mov
les
lods
pop
lods
outsb
dec
enter
int3
movsl
or
mov
inc
dec
das
jge
sbb
adc
jl
mov
adc
ret
inc
ss
rcrl
mov
mov
xchg
insb
xchg
add
jl
sub
pop
fucompp
cltd
sub
push
fadds
jmp
movsb
jo
scas
cltd
rclb
cmpl
ret
jae
in
lds
aam
xchg
stos
cmpsb
dec
adc
fwait
xor
test
pushf
fistpll
jae
adc
int3
xlat
inc
mov
mov
mov
lods
sahf
lds
enter
sub
out
out
popa
jp
mov
in
push
in
fcmovnu
inc
push
push
jns
xor
arpl
push
nopl
fbld
push
daa
insl
andb
push
mov
aad
shrl
ljmp
test
pop
bound
sbb
pop
cmp
push
xchg
mov
out
std
inc
fwait
sbb
lret
fisttps
mov
cwtl
clc
pop
test
sub
test
pushf
icebp
sti
fwait
mov
push
stos
add
adc
mov
sub
add
xlat
mov
xor
push
leave
pop
das
cmp
ror
test
bound
out
and
ja
idiv
mov
js
mov
lea
ret
xchg
sbb
mov
xor
je
mov
add
sti
ret
add
cmp
shrl
fwait
and
xchg
mov
mov
in
sahf
orb
lods
pop
add
xchg
dec
sbb
sbb
jp
xchg
pusha
adc
mov
fwait
jle
inc
outsl
divl
loope
cli
add
call
jns
imul
lcall
sbb
daa
ret
and
pop
rclb
ljmp
and
add
shll
lcall
cltd
and
jno
xchg
stos
mov
das
icebp
out
sti
mov
sub
dec
push
jbe
ror
lods
sub
scas
fmull
stc
mov
mov
push
cs
iret
push
out
pushf
push
xchg
fnstcw
fcomps
std
cmpsb
ret
repz
cmp
fiaddl
mov
les
mov
lods
cmp
sbb
cmp
shl
add
out
adcb
pusha
outsb
addr16
pushf
outsb
xor
pop
sbb
fisttpll
outsb
inc
fistl
out
mov
mov
push
hlt
stos
and
negl
rcl
mov
mov
fcmovnb
push
out
lods
inc
inc
pop
in
std
jecxz
xchg
and
inc
inc
fistpll
ss
sub
mov
rcl
pop
addr16
std
xorb
outsb
cwtl
mov
movsl
rol
ljmp
les
mov
push
imul
add
sahf
push
test
aam
int
out
lahf
sbb
inc
mov
test
jnp
movsl
mov
insb
out
dec
aam
clc
adc
pop
scas
cld
xchg
xchg
xchg
xlat
mov
inc
popa
add
mov
xchg
mov
push
push
pop
test
shlb
loopne
jb
aad
sub
adc
addl
mov
jecxz
xchg
push
and
jle
arpl
inc
push
int
xlat
dec
adc
jno
cmpsb
rcr
sbb
inc
sub
mov
mov
cmp
incl
inc
adc
add
pop
jae
jmp
push
mov
cmpsb
inc
movsb
and
divb
xor
mov
sub
dec
mov
clc
cli
mov
and
fimuls
pop
repnz
mov
gs
movsb
out
add
scas
dec
rcrl
rolb
mov
mov
rolb
add
xchg
hlt
test
dec
das
mov
dec
jo
popa
xchg
lods
xchg
mov
cmc
jbe
cs
add
std
cwtl
scas
push
popa
testl
fidivrs
test
adc
into
ds
fdivl
mov
lahf
ss
xchg
push
push
int
inc
inc
test
inc
test
mov
stos
mov
sbb
xlat
mov
jne
push
scas
xchg
daa
mov
aaa
nop
ret
pop
inc
dec
loope
jge
aas
sahf
ss
in
mov
sarb
pop
aam
mov
and
fdivrs
push
xor
pop
testb
stc
test
iret
ljmp
outsl
xchg
adc
loope
xor
js
in
popa
cmc
adc
outsl
or
and
mov
gs
and
mov
or
cmp
inc
push
cld
cmpsl
lret
cmpsl
push
in
fsubr
inc
stos
ljmp
adc
pop
jae
xchg
or
and
or
jecxz
sub
dec
xchg
insb
mov
int
jne
pop
inc
stos
cmp
dec
popa
push
push
mov
out
pop
cmp
rorb
inc
xorb
sbb
or
inc
mov
jle
mov
xchg
jmp
testl
cmpsl
push
or
das
insb
mov
lahf
outsb
rorb
and
lahf
sub
push
cli
and
test
mov
adc
das
stos
push
dec
or
mov
dec
mov
or
inc
movsl
shrb
test
ja
xor
mov
xlat
dec
mov
adc
bound
mov
movsl
jne
daa
mov
push
ljmp
jno
cs
in
lds
loop
ja
mov
scas
nop
sbb
imul
cli
fwait
jg
jns
xor
fwait
movzbl
in
jne
push
stos
out
lea
adc
jnp
lods
xor
js
ret
push
pop
popl
jge
mov
icebp
fnstcw
jo
mov
push
repnz
in
imul
movsl
sub
enter
cmp
jae
or
subl
cmp
ret
sub
mov
popa
mov
mov
add
push
popf
push
sbb
mov
xlat
outsb
mov
push
cmc
jmp
decb
jno
xchg
sti
icebp
mov
dec
adc
adc
imulb
bound
inc
out
clc
jae
sub
jmp
int
pop
sti
rorb
push
jmp
test
jb
xchg
data16
mov
aas
jl
aas
mov
movsb
stos
xchg
pushf
adc
pop
mov
dec
loopne
iret
dec
ja,pn
repnz
dec
adc
loope
mov
imul
jmp
sub
jp
jle
inc
pop
movsl
js
jle
mov
xchg
mov
and
fdivrl
lds
jae
or
mov
mov
adc
stos
in
icebp
cwtl
imul
hlt
adc
pushf
jg
mov
dec
hlt
fisubl
mov
clc
movsl
cmp
mov
xchg
adc
jmp
imul
and
jae
fsubr
aam
ret
stos
xchg
or
sub
sar
js
sub
pop
je
ds
in
inc
decl
jmp
push
inc
cltd
xor
or
loopne
pop
dec
bound
mov
jno
xor
jo
mov
subb
scas
xchg
fs
push
jge
adc
lods
dec
andb
pop
mov
loopne
push
sub
mov
subb
pushf
xor
mov
mov
and
inc
mov
test
dec
sub
cmpsl
orb
xchg
andl
inc
dec
mov
sbb
lcall
mov
cld
outsb
popf
frstor
and
cmpsl
rclb
xchg
lcall
and
int3
lret
cmpsl
add
aam
lds
ret
repnz
cmpsb
adc
push
fstp
ret
clc
pop
je
in
enter
push
sbb
aam
adc
jns
repz
repz
les
loop
cmpsb
mov
test
fs
add
nop
jnp
clc
mov
or
lods
cmp
movsb
sbb
test
mov
clc
adc
or
lock
push
xchg
mov
mov
insl
lock
xchg
mov
fstps
xor
lods
gs
fwait
mov
int3
mov
mov
jnp
and
sti
xchg
das
ja
pop
jmp
sbb
jecxz
lods
pusha
icebp
push
jle
inc
adc
jg
leave
leave
mov
pop
cwtl
test
mov
shlb
adc
popf
mov
mov
aaa
cwtl
sbb
dec
xor
addr16
push
mov
adc
xchg
push
cmp
lret
mov
cli
jae
cmp
sti
and
sub
mov
in
outsb
stc
inc
out
add
dec
cmp
lock
lcall
jnp
or
inc
mov
divl
jnp
aas
lods
aad
lods
decb
cmp
lods
fisubrl
push
fsubs
xor
mov
and
insl
push
xor
push
bnd
int3
push
imul
je
mov
out
cld
push
and
iret
xchg
mov
mov
data16
fsubl
mov
adc
jo
or
cmp
push
mov
jl
xchg
lret
cld
mov
out
ret
push
pop
and
loopne
sbb
in
or
pop
nop
andb
pop
je
shlb
sub
cmp
jbe
jne
jae
call
or
push
rcrl
into
jb
nop
loop
movsl
int3
je
pop
movsb
xor
mov
pusha
and
ljmp
inc
arpl
push
outsb
adc
hlt
insl
out
mov
xchg
inc
outsl
sub
cmp
pop
jo
daa
and
popa
add
or
mov
push
filds
mov
pop
adc
mov
ss
pop
sub
push
insb
notb
fs
pop
aad
push
in
jne
sbb
inc
dec
mov
xchg
fildl
mov
jns
out
xchg
sub
push
test
dec
je
cld
pop
outsb
nop
mov
sub
ss
push
clc
fimuls
sub
repnz
push
xlat
cmc
push
insl
cmp
jbe
dec
and
jp
scas
orb
dec
pop
dec
inc
sub
lods
iret
inc
mov
add
leave
iret
jne
int3
gs
test
push
les
jnp
inc
sub
out
jns
std
adc
cmp
cmp
push
jp
aad
mov
fwait
sub
mov
loope
sbb
leave
int
mov
pop
imul
inc
movsl
cmp
test
sbb
xlat
lds
arpl
cmp
andl
push
jb
mov
dec
inc
xchg
cmc
sbb
std
pusha
mov
cmpsb
push
xor
enter
orb
lret
bound
imul
adc
in
lahf
push
shrl
jle
sub
fsincos
add
movsl
aaa
int3
insb
orl
jns
sbb
sbb
insb
cmp
cmp
out
cmp
sbb
push
push
xor
ja
pusha
out
cmp
cmp
sub
adcb
pop
cmpsb
sar
cmp
mov
sub
jns
std
lahf
inc
xlat
outsb
jne
sub
shlb
sti
or
sub
inc
bound
dec
out
mov
in
rclb
cmp
addr16
test
xor
sbbb
sbb
daa
ss
xchg
addr16
pushf
mov
adc
xchg
pop
hlt
push
push
xchg
mov
jecxz
cmp
idiv
aas
aam
xchg
icebp
add
adc
or
bound
negl
jae
rcrb
jle
inc
mov
xchg
push
pop
pop
int3
arpl
jo
stc
sbb
mov
adc
aam
fsubl
js
add
icebp
pop
xchg
fbld
mov
sahf
sub
pop
ret
fnstenv
outsl
movsl
xchg
and
je
shll
adc
div
lods
in
cwtl
mov
push
mov
fsubrs
nop
mov
imul
das
and
jne
es
jb
pop
jnp
push
sti
fmull
aam
and
sbb
jnp
sti
movsl
and
lcall
loopne
sbbb
xchg
push
mov
push
mov
add
std
test
in
xor
ret
inc
xchg
call
pop
test
lods
mov
out
inc
ljmp
testl
imul
pop
lcall
xor
add
cmpsl
ret
pop
or
and
imul
xchg
in
lret
pop
scas
jb
movd
lods
insb
enter
mov
out
int3
in
test
sbb
incl
in
inc
mov
cmp
xchg
push
fdivp
icebp
push
in
loop
dec
pop
cmp
inc
jns
mov
les
in
shll
mov
ja
jb
lods
ss
adc
dec
shrl
aas
loopne
shrl
jg
call
or
out
sub
pop
push
or
xor
add
out
cmp
test
xor
popa
sub
out
pop
mov
push
imul
or
out
pop
jo
jo
inc
dec
mov
ss
sbb
mov
mov
cs
sub
daa
dec
popa
call
ss
adc
lods
jne
dec
mov
scas
sahf
cmp
or
pop
lahf
and
sub
xchg
ror
popa
orb
cmp
mov
jno
fldl
imul
jns
fwait
and
cmp
mov
mov
pop
dec
cmp
lret
add
sbb
cmc
pusha
jl
jle
into
mov
dec
es
jecxz
xchg
pusha
push
inc
fiadds
add
pop
pop
jle
jp
cmp
imul
push
mov
aaa
mov
pop
sub
push
out
shl
dec
mov
dec
pop
movsl
pop
mov
mov
in
jo
inc
ljmp
xor
sbb
xlat
mov
rcrl
in
and
repnz
sub
and
push
out
dec
jbe
xchg
aad
adc
aaa
sbb
insb
sahf
out
inc
mov
fidivs
das
arpl
push
lret
push
sbb
adc
pop
push
push
xor
pop
cli
mov
sub
adc
mov
xchg
lds
mov
push
test
fiadds
lods
inc
pop
shll
aas
add
ffree
and
movsl
mov
pop
aas
mov
repnz
call
cmp
and
or
sbb
test
sahf
lcall
inc
pop
cld
xchg
daa
push
and
outsl
aad
scas
xchg
lds
mov
mov
insl
cmp
mov
jae
sbb
push
mov
fsubrl
sub
cmp
repz
mov
jge
test
dec
fidivs
punpckhdq
jns
adcb
aam
xor
les
loop
cmp
sarb
sbb
idivb
lods
popf
inc
adc
stc
cli
pop
das
mov
mov
cmp
sub
inc
insb
fisubl
sti
mov
testl
mov
ja
mov
and
sahf
lahf
test
fdivl
sub
shrb
rorl
mov
sbbl
ret
dec
push
fistps
push
xor
push
pop
sahf
push
js
enter
xor
jae
pop
xchg
inc
xchg
int3
xchg
out
shll
movsl
scas
xor
push
mov
jb
push
in
and
mov
xchg
shlb
stos
dec
or
dec
push
push
sbb
loop
roll
pop
xlat
push
cmp
pop
mov
in
aad
sarb
mov
ret
push
add
cmpsb
cmp
xor
lds
mov
mov
add
inc
lea
jno
and
adc
fcoms
xchg
gs
repz
push
sbb
mov
add
in
and
rclb
xchg
cmp
push
inc
mov
push
test
call
xchg
sti
cmp
data16
movsb
pop
xor
jbe
std
loop
insb
out
ret
call
ror
lea
lcall
pushf
rolb
rcrl
loope
leave
push
cmp
and
test
jg
sbb
inc
and
mov
int3
push
ror
and
aad
arpl
mov
pop
sbb
mov
fs
and
jge
sub
pusha
fcmovnu
nop
fldenv
or
and
aas
push
pop
pop
push
sbb
ret
cmp
sbb
cli
xlat
rorb
nop
sub
mov
cltd
loope
pop
mov
icebp
adc
mov
or
repz
push
adc
mov
pop
ja
mov
pop
cmpsb
outsl
cmc
inc
pop
insb
shll
lods
mov
push
inc
inc
lea
jg
dec
cmp
dec
and
fdivl
lret
pop
ret
cs
lcall
cwtl
jae
mov
dec
xor
cmc
int3
decl
cmp
popf
dec
add
push
ret
ret
jecxz
sbb
mov
daa
adc
ret
xchg
add
outsb
sub
dec
mov
mov
push
rcr
cmp
mov
cmpsl
clc
pusha
cltd
sbb
xor
int
imul
pushf
jo
int
aam
out
add
push
ja
mov
inc
mov
mov
dec
fistpll
xchg
test
das
repnz
orb
push
faddl
sub
leave
add
daa
mov
push
mov
cld
xchg
jmp
les
cmp
ret
or
dec
dec
shll
cld
xor
sbb
sbb
stos
insl
dec
push
mov
repz
mov
sub
xlat
ret
add
xchg
cmpsl
repnz
sub
scas
testb
push
out
sub
push
push
xchg
or
pop
and
pop
push
adc
fmull
fadds
je
shlb
jg
dec
lods
mov
jecxz
xor
call
enter
mov
test
mov
push
bound
scas
sub
push
cwtl
cmp
xlat
push
in
lea
ret
lock
icebp
int3
jns
or
xchg
insl
mov
insb
mul
jne
add
pop
icebp
ret
push
mov
add
repz
xchg
inc
mov
push
lcall
mov
xor
jo
test
lea
jl
subb
popl
pop
sbb
nop
fsubrp
lea
sub
push
jno
push
mov
in
mov
fs
xlat
mov
add
cmp
push
movsl
int
fwait
push
xor
fsub
cmp
clc
mov
pop
test
mov
imul
shll
sbb
dec
inc
adc
inc
lret
pushf
mov
pop
loop
jnp
aam
in
cmp
mov
repz
jns
jnp
pop
insb
addl
push
or
data16
push
xor
jbe
push
mov
sub
lea
fs
and
jns
es
sub
inc
cld
outsl
dec
scas
mov
popa
sarl
hlt
into
aad
fstpl
sub
shl
sti
lret
add
inc
push
inc
dec
or
mov
std
push
mov
inc
jg
test
test
inc
in
adc
jae
popa
movsl
mov
or
jl
test
nop
push
and
dec
mov
fnstcw
pop
test
pop
sub
pushf
arpl
xchg
in
test
lahf
or
or
lret
movsl
xchg
mov
pop
mov
adc
idivl
jle
lds
add
fmulp
sbb
jns
cmp
loopne
leave
pop
add
mov
mov
movsl
lea
fstps
mov
dec
hlt
lret
add
cmpl
in
dec
aas
repz
arpl
shl
xchg
insl
lret
adc
inc
cmp
cmp
pop
ds
jb
lcall
mov
xor
jne
inc
pusha
inc
inc
sbbl
adc
enter
add
pop
testb
and
stc
popa
filds
and
fcomps
and
sti
pop
and
xor
aaa
aam
mov
mov
xchg
pop
adc
gs
outsl
dec
pop
lods
pop
je
addr16
stos
inc
or
movsb
mov
sbb
aas
cmpsb
or
or
stc
hlt
aam
shrb
sbb
fcmovne
addr16
js
daa
sahf
mov
or
clc
or
sarl
push
push
push
sub
mov
int
jb
mov
dec
and
jmp
sbbl
stc
pop
or
or
add
popa
mov
sub
mov
mov
cmpb
dec
push
xor
adc
loopne
mov
lret
push
xchg
jae
mov
inc
imull
imul
stc
popf
mov
pop
jmp
test
shl
sahf
sbb
adcl
int3
and
int3
mov
les
sbb
bound
adc
or
cmc
mov
lret
cmp
into
pop
cmpsb
xchg
cmp
xchg
sub
addr16
mov
mov
push
cmp
rcll
cmpsb
stos
cmp
xor
add
movsb
test
pop
mov
cmp
mov
les
inc
fsubrl
sbb
lea
add
test
jmp
aam
scas
ss
out
jbe
ljmp
rolb
jecxz
sbb
shrb
or
ss
shrb
pop
clc
pushf
lods
push
xchg
imul
jno
pop
cs
adcl
push
dec
pop
sbbl
mov
mov
inc
into
aaa
cmp
mov
push
ljmp
testl
mov
fldenv
pop
sbb
inc
insb
jp
std
jmp
mov
cmp
mov
cmp
mov
inc
clc
iret
pop
mov
lcall
inc
gs
push
ljmp
dec
mov
lcall
add
mov
xorl
dec
mov
and
adcl
inc
xchg
inc
call
push
or
pop
rcr
or
ja
add
sbb
imul
xor
pop
mov
xchg
jle
sbb
cltd
insl
push
movsb
cmpsl
cmpsl
lret
mov
xchg
inc
lock
int3
loop
jp
in
or
mov
fwait
test
cmpsb
pop
push
xchg
xchg
mov
mov
popf
psubsb
aam
cmp
or
jb
pop
push
leave
loopne
sti
bound
mov
xor
jecxz
aad
mov
fldcw
mov
xor
insl
jge
imul
cs
insl
mov
std
xchg
clc
aam
decl
pusha
push
test
adc
sub
fnstenv
neg
cmpb
rcr
cmp
leave
fisubrl
test
bound
adc
je
add
fdivrl
mov
jno
xchg
das
and
outsb
sbb
cld
adc
and
jb
ds
dec
aad
ror
arpl
push
add
jp
test
or
les
enter
xor
or
dec
jp
and
fnsaves
inc
mov
lock
loopne
ret
add
scas
in
jg
in
lds
aad
jb
jmp
sub
cwtl
fs
push
mov
dec
cmp
pop
mov
jo
in
mov
mov
movsb
pop
mov
sub
mov
mov
mov
loopne
push
ja
sub
rolb
lds
popf
scas
sbb
test
sbb
inc
int3
xlat
sub
or
into
mov
mov
cs
setp
lret
pop
imul
jg
or
stc
adc
or
xor
push
and
call
mov
mov
les
mov
or
aad
xchg
arpl
adc
and
xchg
hlt
sahf
stc
inc
mov
dec
jecxz
insb
pushf
mov
mov
clc
cmp
fistpll
cltd
cmp
sbb
pop
mov
ja
shrl
sbb
push
dec
mov
roll
arpl
or
dec
push
inc
fcmovnb
popa
pop
lcall
or
mov
cwtl
jge
fists
neg
outsl
sub
jbe
shrb
fwait
mov
or
shll
push
lret
sti
push
mov
frstor
popf
mov
or
stos
jbe
test
inc
adc
mov
leave
popa
pop
mov
sbb
mov
rcll
cli
dec
loope
scas
xlat
pop
sbbb
pop
outsb
add
js
xchg
aaa
mov
adc
mov
jae
or
subps
js
pop
scas
and
dec
push
popf
icebp
scas
mov
ss
pop
xor
loope
lret
sbb
stos
cwtl
xor
mov
mov
in
cwtl
stos
sub
repz
jecxz
imul
push
test
inc
je
push
sbb
push
fdivl
nop
loope,pn
movsl
out
lock
pop
aaa
cmp
in
cld
or
mov
mov
push
cmp
int
icebp
arpl
or
adc
iret
push
pop
jno
and
popa
xchg
sub
mov
outsl
jno
jbe
int
sbb
mov
push
dec
cmp
fistpll
mov
xor
xor
push
sub
mov
push
cmc
jnp
or
fidivs
mov
cld
lcall
push
test
in
and
sub
leave
andb
andl
cltd
sarb
mov
cltd
push
nop
sub
daa
and
arpl
xor
jmp
sbb
cmc
adc
fidivs
pushf
cmp
cld
cmp
push
pop
or
jmp
dec
cmpsb
cld
mov
enter
xor
mov
jp
daa
scas
dec
xlat
outsb
jl
subl
nop
rorb
push
cmp
sbb
es
js
mov
out
dec
fmul
cmpsl
cmpsb
dec
in
scas
mov
push
xchg
mov
movsb
adc
dec
sbb
jl
pushf
mov
cmpsl
daa
stc
lds
pop
push
xor
jg
mov
bound
test
into
jmp
cmc
int3
lret
std
and
inc
add
xlat
fimuls
mov
test
sti
and
inc
push
xchg
and
pushw
mov
ss
popf
sahf
mov
je
inc
in
jno
std
push
in
mov
push
neg
inc
sub
shll
ljmp
mov
clc
sub
das
lds
mov
imul
lcall
inc
adc
xor
daa
push
push
xchg
leave
xor
xor
mov
push
lods
rcrb
xor
test
inc
lret
stos
insb
lds
pop
push
inc
iret
icebp
js
out
sub
sbb
sub
inc
add
mov
in
jg
scas
xchg
sub
int
xor
fsubrl
cld
sar
jno
sub
ret
pop
sub
cmpsb
dec
sub
mov
dec
xchg
add
push
icebp
das
imul
pushf
push
pop
loopne
mov
lahf
xchg
bsr
xor
xchg
cli
iret
push
add
lods
cld
call
xor
sahf
inc
jae
mov
xchg
rcrb
inc
cmp
push
lods
push
adc
popf
lods
cwtl
shl
out
adc
xor
fidivrl
and
adc
outsl
inc
jp
lds
jbe
out
push
pop
push
mov
repz
push
jp
aad
xchg
dec
or
scas
mov
push
xor
call
nop
daa
test
dec
jmp
adcb
push
sahf
mov
movsb
mov
jp
hlt
mov
inc
aad
add
out
frstor
popa
out
incl
inc
loopne
stc
dec
or
dec
js
jo
jmp
jb
or
lcall
cmp
xchg
jnp
xchg
sub
mov
fwait
ss
inc
fstpt
dec
repnz
in
mov
push
ret
std
int3
pop
pop
cmp
mov
out
out
movsl
xor
sub
cmp
addr16
xchg
lret
mov
test
out
sahf
mov
and
add
push
jae
sahf
sub
test
sub
adc
nop
xchg
pusha
testl
or
pop
jne
mov
xor
subb
lcall
push
js
shrl
jb
mov
fistl
ret
xchg
outsl
pusha
fcmovnbe
lahf
arpl
and
call
call
and
cli
cltd
shl
es
test
mov
cmp
les
mov
pop
sti
insb
sbb
xor
daa
cmp
cmp
sub
mov
cld
mov
xchg
imul
mov
scas
push
xor
xchg
out
sbb
jb
data16
fldcw
iret
and
test
dec
mov
jge
inc
inc
push
loopne
lret
out
sti
jbe
arpl
arpl
shl
and
or
inc
ljmp
ljmp
jl
divb
pop
nop
jl
fwait
xor
mov
adc
js
imul
xorl
popa
out
jne
cmp
int3
jae
js
repz
cmpl
mov
dec
xor
sti
inc
and
adc
das
int3
je
shrb
xchg
mov
jnp
or
insb
imul
cmp
cmp
stos
stc
xchg
jb
sub
popa
cmp
cmp
rcrb
pop
verw
mov
movsb
mov
out
inc
xchg
adc
int3
lret
nop
jp
xchg
shlb
addl
sar
push
loop
inc
out
inc
outsl
jnp
and
out
addr16
xchg
aas
movsl
jmp
jne
movsl
cs
stc
test
pop
or
jmp
dec
jno
push
push
cmp
mov
or
loopne
stc
aad
mov
cmpsb
push
ret
pusha
lret
addr16
outsb
add
adc
or
fildl
jns
push
shrb
pop
mov
jle,pt
pop
daa
pop
xchg
add
cltd
cmp
jae
test
out
sbb
dec
js
leave
lea
adc
push
imul
and
mov
inc
addr16
hlt
push
jmp
aad
push
add
or
sub
sti
cwtl
xor
inc
lock
cmp
dec
into
into
mov
pusha
xor
notl
pop
add
cmovl
bnd
jg
loop
mov
pushf
push
xor
xlat
popf
push
mov
mov
xor
das
add
insl
ss
andb
xchg
xchg
sti
fiaddl
sub
js
in
jl
xchg
add
jno
adc
js
pop
mov
ss
push
xor
lods
dec
fchs
cmpb
jno
aaa
xchg
dec
scas
mov
sbb
adc
cmp
push
sbb
clc
testl
or
xchg
sub
pop
fcom
adc
pusha
ljmp
mov
cmpsb
push
cmpsb
cltd
sub
ret
xchg
idivw
or
inc
out
mov
xor
jmp
sti
pop
stc
popf
mov
inc
cld
shlb
fs
imul
inc
and
sub
and
lods
add
lret
and
pop
push
and
mov
cwtl
jg
outsb
lea
or
outsl
sahf
sarb
ds
dec
test
aad
inc
push
shr
ss
xor
xor
lods
jbe
pop
repz
ja
js
sti
out
je
add
cmpsb
dec
inc
push
stos
das
mov
pop
mov
or
icebp
mov
mov
pop
mov
jne
lods
in
or
mov
lahf
add
shlb
rol
push
xor
fiadds
mov
mov
cmpsl
or
cld
pop
mov
cli
in
sbb
xor
dec
add
xchg
cmpsl
scas
out
mull
notl
mov
adc
mov
push
xchg
mov
je
pop
push
insb
js
push
xchg
jae
add
dec
inc
jns
xor
test
fadd
loop
push
iret
dec
adc
clc
push
sbbb
dec
in
sbb
mov
mov
and
push
push
into
cmpsl
mov
push
mov
dec
das
scas
dec
jp
sbb
addr16
push
pop
stos
pop
mov
rclb
das
add
and
or
sarl
leave
jle
inc
xchg
jns
dec
bound
xor
fistpll
outsl
lret
xor
pop
das
aaa
ljmp
fiadds
lret
xchg
push
push
testb
push
enter
shlw
scas
jb
faddl
stc
daa
push
imul
cld
inc
popf
sbb
and
mov
ja
sub
sbb
test
dec
push
js
movsb
pop
and
cmp
sbb
lock
adc
jb
jnp
pop
outsl
daa
call
cwtl
dec
pop
shll
insb
jns
mov
popa
cs
jp
test
loopne
xchg
jae
int
into
mov
fstpl
sbb
mov
push
shll
jo
and
shl
lods
daa
jecxz
add
xchg
lods
xchg
push
mov
sub
and
mov
push
lcall
jmp
out
cmp
pop
ja
movsl
push
or
stos
lock
lods
fistpll
adc
dec
sbb
loope
into
cmp
push
sub
pop
clc
cmpsl
jns
out
mov
pop
in
jnp
dec
loopne
pusha
adc
add
ljmp
inc
jle
pop
insb
push
repz
sti
lahf
dec
sarl
sub
in
aam
out
xchg
mov
rcrb
jae
add
sub
and
cmp
add
mov
sbb
cmp
je
pop
mov
fsubrs
inc
data16
push
stc
lret
xor
jno
mov
lea
sub
or
mov
mov
push
loopne
cmp
or
mov
leave
jae
or
push
adc
nop
inc
ss
jno
andb
sbb
daa
mov
mov
xorl
xchg
sbb
adc
xchg
add
xchg
or
inc
cld
sub
in
jnp
pop
pushf
mov
xor
test
push
mov
sub
inc
jp
and
jne
xchg
lea
pusha
movsb
idivl
int
dec
out
jle
aad
and
les
icebp
sbb
pop
lahf
mov
sahf
movsb
subl
lret
pop
sub
jge
dec
mov
je
xor
sub
mov
call
mov
insl
jl
cmc
push
or
push
or
into
adc
int
mov
push
sub
mov
cld
xchg
fwait
je
loop
adc
mov
movsb
jecxz
push
jne
imul
sub
jp
mov
fidivl
or
dec
mov
dec
dec
sub
nop
int3
out
shr
jle
push
repnz
sar
or
cmp
pop
mov
mov
jb
xchg
adc
ret
or
push
lret
push
loop
dec
push
data16
jmp
movsl
sbb
ds
xor
inc
ret
xor
inc
popl
into
pop
push
testl
inc
xor
inc
icebp
xor
enter
test
lods
pop
mov
xchg
adc
fnsave
aam
pop
in
test
mov
mov
iret
pop
lcall
mov
push
push
push
pop
pop
les
je
lods
in
mov
ds
addr16
inc
imul
dec
pop
xor
popf
add
cmp
adc
movsb
jecxz
xor
fs
adc
cmc
es
leave
jb
jecxz
cmpsb
push
xor
mov
cmp
xlat
cmp
ret
jle
pusha
push
outsb
sub
mov
sub
xor
stc
nop
addr16
sub
cmp
xlat
movsl
dec
nop
dec
mov
out
or
lds
call
xor
rcr
test
push
jmp
sub
shl
jp
ret
push
mov
xchg
ja
aam
imul
hlt
mov
sahf
stos
cmp
push
ja
pop
xor
push
adc
test
incb
lods
arpl
mov
cmp
lods
leave
repnz
ljmp
fdivr
sub
add
pop
sub
mov
dec
iret
xchg
push
sub
test
dec
jae
xorl
arpl
outsb
mov
ret
pop
in
das
iret
loope
sbb
outsl
pusha
xchg
sub
mov
mov
cltd
sub
inc
lock
sarb
enter
mov
popa
shrb
or
cltd
cmp
pop
inc
adc
cltd
test
mov
adc
jne
cmp
lcall
mov
pop
out
adc
lea
js
in
ljmp
leave
hlt
fwait
outsl
jns
stc
or
aad
xchg
in
repnz
or
cmp
enter
add
xchg
jl
fwait
mov
imul
ret
mov
add
or
js
add
mov
pop
jo
push
sub
push
inc
or
sub
imul
jb
fmull
push
data16
fstl
cs
mov
cmc
adc
mov
jge
bound
stc
stos
in
mov
daa
outsl
stos
push
shlb
test
ficomps
mov
adc
or
leave
adc
pop
out
xor
jmp
jecxz
icebp
jmp
sub
mov
xchg
push
pop
fcmovbe
test
fstl
scas
nop
lea
lea
or
xchg
ljmp
loopne
mov
repz
fidivl
xor
mov
jae
stos
inc
inc
popf
imul
or
mov
cmc
aad
aad
or
jns
iret
push
pop
sbb
lret
mov
cmp
pop
xor
lahf
xchg
pushf
das
sbb
mov
pushfw
aam
xchg
mov
in
sub
test
mov
stos
add
pushf
add
dec
jmp
jg
scas
loope
scas
loop
fidivl
fcompl
sbb
inc
push
lds
jl
call
in
scas
pop
xor
in
pop
jp
out
push
gs
ficomps
xor
fcoml
dec
fisubs
dec
xchg
fdivrl
push
pop
mov
popf
xchg
in
dec
add
push
rcrl
adc
es
rclb
fwait
lret
cmp
jnp
popf
pop
push
fistps
repnz
sub
sahf
xchg
push
xchg
insl
pop
pushf
dec
es
cmp
aam
data16
cmc
ret
xor
stc
mov
iret
hlt
mov
nop
adc
cmp
imul
mov
mov
push
ret
mov
mov
lds
mov
jnp
jne
adc
add
pop
adc
dec
add
or
fisttpl
scas
mov
sbb
xor
jbe
xchg
push
mov
pop
es
push
pop
sub
cmp
sub
pop
in
rcr
loopne
cmpsb
arpl
dec
xchg
and
and
cmp
sub
push
inc
lods
push
mov
cmpsl
out
imul
scas
xor
bound
jnp
fsubr
mov
clc
mov
mov
mov
lock
mov
add
arpl
xchg
sbb
enter
pop
mov
and
aam
aas
or
aad
sub
add
mov
inc
mov
xchg
insl
rcll
mov
xchg
stc
nop
ret
dec
fsubrl
out
aam
enter
lcall
in
cmp
cmpsb
cmpsl
mov
out
hlt
mov
mov
jle
aaa
imul
mov
gs
into
dec
dec
fucomp
and
rolb
cmp
icebp
xor
fs
or
mov
or
in
stc
push
sub
mov
mov
cmp
out
repnz
inc
cwtd
das
cmp
dec
lcall
sbb
sbb
push
call
sbb
xchg
arpl
gs
pop
out
aad
mov
pop
repnz
add
insb
push
push
fstpt
mov
inc
scas
das
ss
nop
or
sbb
and
mov
imul
and
mov
ficoms
mov
cld
sub
sub
dec
lods
fisubl
cmpb
mov
hlt
xchg
sub
inc
mov
pop
insb
in
jno
cmp
out
vshufps
pop
out
nop
insb
add
mov
hlt
cmpsl
aaa
fxch
rcr
enter
or
loope
xchg
es
fcomip
mov
adc
push
mov
sbb
cmpsl
jo
fnstenv
lahf
ss
ljmp
add
push
stos
sbb
test
clc
xor
sub
js
inc
xor
test
fxch
add
pop
fcomps
cmpsb
icebp
push
test
adc
shlb
pop
adc
mov
das
loopne
push
loop
or
sbb
dec
dec
inc
shlb
in
cmp
inc
popf
shrb
outsl
lea
notb
mov
enter
nop
adc
adc
jecxz
push
mov
mov
cmpsb
out
and
push
mov
roll
orb
push
mov
push
sbb
loopne
gs
sbb
out
sbb
stos
sbb
push
aam
sti
ret
dec
roll
es
in
sar
xchg
in
pop
xlat
pop
xlat
or
aas
cwtl
out
loopne
popf
lahf
imul
decb
imul
shlb
aaa
std
adc
adc
cli
adc
movsl
cmp
inc
test
frstor
sbb
jne
repnz
and
push
xor
jne
lea
jns
dec
adcb
mov
mov
add
jo
sbb
in
pop
jg
out
push
in
fisubrs
ss
pop
and
repz
je
in
or
outsb
pushf
pop
icebp
push
sbb
sub
and
aad
leave
aad
add
or
imul
insb
inc
inc
test
mov
push
sub
cmp
scas
fildl
ljmp
test
pop
cmpsl
mov
imul
js
cwtl
mov
and
inc
add
xor
pop
push
cmp
dec
or
call
xchg
shlb
or
ja
pop
dec
fimull
insl
cmp
cld
insb
sub
add
in
dec
pop
fldt
shlb
std
xchg
push
icebp
mov
xor
rcrl
inc
mov
divl
movsb
pop
test
in
pop
mov
loopne
and
data16
and
sti
mov
roll
pop
inc
pop
pop
repz
bound
cmp
or
or
mov
lret
or
push
ret
jg
pop
addr16
lret
push
int3
mov
push
movsb
outsb
int3
cmpsb
lahf
lds
shld
inc
or
jae
jae
call
or
push
mov
xchg
test
push
xorl
cmpsl
mov
sub
shl
xor
in
ds
sbb
rorl
fisubs
nop
push
push
xchg
cmp
call
enter
mov
push
insb
mov
add
popf
add
and
mov
fistl
or
adc
mov
add
outsl
push
mov
dec
and
push
inc
push
sbb
mov
push
xchg
push
mov
jae
int
push
incl
in
sar
ljmp
mov
cli
adc
jg
and
xchg
pusha
dec
mov
dec
fildll
sub
sarl
mov
or
movups
test
negb
mov
inc
lret
adc
out
add
pop
sbb
out
mov
jge
sub
push
call
data16
mov
add
aad
fbstp
ja
pushf
scas
jb
jno
and
stos
dec
cs
aad
fcompl
jb
cli
test
dec
pushf
inc
fldcw
mov
cmp
pusha
loopne
mov
fidivs
push
mov
push
das
mov
xchg
xchg
inc
fadd
mov
lods
out
adc
pop
fidivs
mov
mov
xlat
gs
mov
loopne
pop
add
pop
repnz
cmp
repz
dec
test
aad
cmpsl
mov
mov
cwtl
xor
mov
cld
pop
iret
adc
in
test
inc
xchg
sbb
push
call
fstpl
pop
dec
sub
pusha
sahf
xor
or
mov
pop
pop
enter
loope
arpl
call
movntps
pop
xor
xchg
bound
fldcw
rorb
das
mov
rcl
mov
leave
int
jne
fildll
int3
test
mov
push
out
insb
xchg
sbb
mov
mov
insb
lret
fadd
sub
in
hlt
addr16
movsb
add
lods
pop
dec
es
jae
andb
fldenv
jne
test
cld
or
cmpsb
adc
bnd
mov
mov
xchg
inc
mov
jns
and
mov
inc
push
jmp
mov
test
les
daa
iret
or
out
into
and
add
iret
mov
and
mov
leave
mov
pop
mov
bound
sbb
ds
add
aaa
int
pop
pop
mov
or
mov
sbb
sbb
js
shrb
jbe
loope
cmp
jnp
sti
add
daa
mov
loope
xor
arpl
outsl
push
int
ljmp
fimull
adc
cmp
test
clc
cmpsl
movsl
adc
aad
ret
mov
popf
sub
adc
sub
rclb
into
mov
adc
sbb
xchg
add
xor
gs
inc
push
inc
or
int3
arpl
rorl
js
hlt
rcll
test
fidivl
ret
int3
dec
gs
jnp
xchg
lock
loopne
or
fidivs
ja
ds
lods
jmp
fistpl
xchg
subl
bound
adc
fildll
loopne
sti
sti
mov
loope
ret
adc
ss
mov
mov
xor
pop
fidivs
shr
cld
repnz
test
std
sbb
nop
xchg
add
dec
loope
les
pop
repnz
mov
ss
pop
std
xchg
mov
or
testl
and
dec
add
push
stos
test
lea
push
imul
mov
fdivs
and
push
xor
dec
pop
out
in
jg
jmp
daa
sbb
arpl
jo
fstpl
jle
imul
sub
xor
bound
rol
fisttpl
ja
inc
cld
dec
fildll
inc
bound
mov
add
es
notb
pop
shlb
xchg
inc
loopne
mov
add
xorl
fucomi
aas
or
cltd
std
cltd
add
ss
cli
in
ss
lock
mov
xor
add
mov
mov
and
data16
cmpl
pusha
add
sub
and
int
fbstp
stos
divl
push
jecxz
push
push
xchg
call
scas
cli
push
icebp
mov
push
cmp
sbb
test
loop
mov
dec
cmp
jle
inc
adc
cwtl
pop
iret
sarw
pop
pop
out
in
test
push
mov
add
sub
sbb
popf
mov
mov
in
inc
fdivrl
pop
fmul
mov
movsl
cltd
std
mov
das
sub
push
andl
scas
mov
adc
dec
xlat
sbb
clc
outsb
les
or
mov
fdivp
shlb
mov
outsl
jbe
push
jmp
ret
in
idivl
jbe
rcrb
das
mov
cmp
cltd
stc
mov
mov
xorl
sub
push
inc
sti
daa
mov
inc
pop
inc
lret
bound
xor
or
jmp
xor
mov
pop
lret
dec
sbb
js
and
mov
adcb
add
stos
arpl
gs
or
lahf
push
jg
ud2
popa
mov
inc
daa
add
xchg
outsb
cli
xchg
pushf
js
inc
jbe,pt
sbb
pop
ja
inc
imul
fimuls
jp
ficomps
jge
lods
jmp
out
push
lock
xchg
rcll
sbb
andl
popa
jae
jno
out
mov
dec
jo
les
jae
stos
inc
fisubl
das
addr16
push
gs
outsb
mov
lcall
shll
cmp
faddl
mov
sub
out
cmp
cwtl
jae
dec
fisttpl
daa
cli
jmp
push
data16
std
imul
and
sbb
jg
cmp
pop
data16
aaa
arpl
or
or
lea
mov
mov
sub
push
xor
mov
into
pop
shll
nop
dec
pop
shl
out
hlt
dec
shr
jg
push
clc
test
mov
popa
sub
pop
ret
jmp
jno
pop
mov
cmp
sub
or
cmp
mov
lcall
test
jmp
or
xchg
sti
mov
xlat
jb
mov
push
adc
in
add
lcall
dec
in
out
ds
jmp
test
push
mov
push
inc
jg
pop
lahf
sbb
dec
mov
cwtl
adc
push
jae
aam
sahf
or
repz
jne
jg
xchg
sbb
pop
mov
jmp
scas
dec
mov
rcl
cmp
cmc
sbbl
int3
dec
movsb
in
add
lret
jne
cmpsb
gs
inc
jp
pop
lods
jo
jnp
dec
push
cld
shrl
adc
xor
out
inc
fwait
xchg
lea
dec
lea
aam
mov
inc
ja
ret
jbe
sbb
hlt
pop
mov
lea
sbb
jbe
fnstenv
dec
adc
add
mov
test
add
clc
sarl
in
xor
mov
fimull
fiadds
pop
jecxz
cmp
in
popa
sub
flds
dec
out
dec
xchg
inc
inc
cmp
jle
sarb
fdiv
mov
jle
daa
sub
test
jp
in
pop
js
xchg
xorb
imul
test
into
popw
ret
div
in
dec
and
mov
lods
hlt
jge
xchg
and
hlt
lahf
lock
jge
add
mov
ret
mov
cltd
int3
outsb
rclb
in
sbb
push
lods
rcrl
addb
mov
movsb
xchg
popa
push
push
sahf
lea
and
sbb
in
das
xchg
in
fwait
mov
test
cmp
add
ja
and
lret
mov
cmp
jl
hlt
sarl
dec
mov
cmc
inc
and
cmc
mov
jno
xor
loopne
cmp
inc
push
sub
push
frstor
and
push
adc
fs
mov
lret
pop
mov
sbb
enter
imul
pop
pop
mov
cld
es
xlat
icebp
testl
jp
repz
jo
das
jle
xchg
xor
cmpsl
mov
xor
sbb
cmp
push
xchg
repz
repnz
or
lds
mov
push
movsl
mov
repnz
mov
imul
pop
mov
inc
or
mull
cmp
mov
sub
add
jl
insl
sub
cmpsl
xlat
pop
cld
or
mov
push
leave
sbb
popa
cmp
and
cmp
jp
xchg
mov
inc
les
xor
sbb
cltd
pop
and
scas
addr16
or
clc
sub
aas
dec
popf
push
xor
pop
or
inc
pop
fstpl
xchg
fadds
mov
pop
mov
inc
pop
mov
pop
cmc
inc
cld
loop
pusha
pop
sub
rolb
es
and
or
sub
nop
mov
push
adc
scas
lods
nop
xor
into
xor
fs
sbb
nop
cld
sbb
cmp
cmpsb
adc
mov
and
jbe
adc
push
or
stc
jbe
cmp
ljmp
sub
adc
xor
sbb
gs
repz
or
xchg
adc
and
jge
outsl
sub
inc
pop
ret
cmp
divl
test
pop
xor
movsl
roll
fdivs
xchg
xlat
pop
test
dec
jg
sub
mov
in
mov
jno
sar
in
add
loop
and
shrb
pop
out
mov
jns
mov
adc
mov
je
imul
inc
lock
mov
xor
movsl
jno
mov
and
sub
or
je
pop
jns
loope
outsb
out
test
mov
fidivs
test
mov
xor
ret
cld
xchg
cmc
mov
and
mov
dec
xor
dec
hlt
call
inc
or
mov
mov
loop
adc
mov
out
cmpsb
sbb
xor
out
loopne
push
adc
add
adc
movsb
xchg
and
mov
loop
js
push
jbe
cltd
add
arpl
xlat
lret
add
mov
inc
fiadds
dec
cs
xchg
aad
pop
mov
cmpsb
cmp
mov
push
cmp
repnz
and
aaa
mov
fdivrl
sbbb
sub
test
or
jp
jno
mov
mov
ljmp
sub
mov
bswap
sub
sub
subb
ficompl
sub
ret
fdivrp
lods
stc
cmc
cmp
jmp
push
push
push
xlat
mov
fstpl
mov
inc
mov
cld
call
rcrb
decl
out
stc
je
adc
xlat
mov
lods
mov
xchg
xor
mov
hlt
ds
imul
pop
rcrl
add
jbe
loop
aas
aad
lock
cli
popa
int3
pop
repz
sub
jp
std
mov
stos
insb
enter
xor
mov
xlat
test
xchg
out
cmc
cmpsl
cmp
nop
pop
into
mov
mov
pop
test
gs
cmpsl
out
fdivs
jg
imul
mov
inc
dec
daa
mov
clc
sbb
fisttpll
inc
mov
add
or
insl
and
ja
stc
cmp
or
stc
jns
mov
aam
sbb
lods
or
out
sub
fstpt
dec
jo
xor
mov
push
pop
aaa
stos
xor
icebp
mulb
adc
adc
sub
fwait
xor
cmpsl
lahf
or
aas
sbb
mov
fidivrl
in
xchg
jnp,pn
pusha
sbbl
cltd
ror
jg
js
xor
push
inc
test
call
sbbl
mov
aaa
sbb
cmc
mov
jo
cwtl
fldl
xor
mov
scas
xchg
mov
adc
sub
iret
sar
in
adcb
andl
call
fldt
ja
movsb
xor
dec
scas
push
sub
fdivrl
mov
cmpb
push
mov
nop
fsubrl
ror
in
mov
jle
in
in
pop
add
push
es
xchg
mov
push
sbb
xorl
shlb
loopne
dec
fld
inc
sub
mov
int3
lds
sar
lret
and
hlt
ficompl
fs
cmpsl
in
cmc
push
pop
testb
adc
fwait
iret
or
sub
sbb
push
test
shll
fcomps
pop
mov
lret
mov
mov
adc
pushf
shlb
mov
lds
mov
lret
mov
cltd
jns
xchg
sub
xchg
xchg
jo
inc
cli
push
cld
addr16
xchg
fstps
sbb
popl
aam
fs
loop
adc
dec
fistpll
rol
jmp
es
popa
fwait
mov
cld
push
cmp
add
or
pop
cmp
icebp
sbb
add
js
xor
test
xchg
aad
int3
lahf
mov
dec
pop
inc
cmp
icebp
sbb
xor
mov
mov
ret
mov
fwait
int3
pushf
xor
pop
sub
ds
stc
dec
and
inc
pusha
cli
xchg
cmpsb
movsl
shl
and
dec
mov
cmp
push
dec
aad
sbb
pop
ret
cmpsb
lock
in
mov
push
popa
inc
test
dec
adc
sahf
add
and
or
aad
adc
movsl
mov
jg
adc
cmp
lret
lods
sbb
ret
cmp
std
fsubl
cmp
ds
sbb
fisttpl
outsb
orb
mov
repz
add
inc
mov
cwtl
mov
sbb
jle
jp
shrl
inc
fwait
hlt
xchg
daa
mov
dec
frstor
subl
scas
cld
jecxz
mov
outsb
jp
push
jmp
inc
xlat
cltd
test
lret
pop
jno
jecxz
clc
and
inc
push
jbe
jnp
inc
inc
xchg
inc
jo
sub
mov
pop
push
pop
insb
pop
mov
fiadds
cmpsb
dec
add
inc
cwtl
pushf
jnp
lea
dec
fcoms
xor
jl
jae
sbb
fisttps
or
mov
js
ja
rorl
sub
loope
adc
mov
loop
mov
xchg
iret
or
ret
sub
sub
dec
xor
sub
loop
mov
adc
mov
lock
pop
push
in
pop
aam
testl
pop
mov
cmp
testb
imul
es
inc
xor
jbe
test
mov
fdivl
fstl
mov
hlt
and
jno
add
dec
dec
sub
mov
or
dec
loop
das
outsl
cmc
insl
lock
and
sub
sbb
aas
icebp
shr
adc
mov
mov
in
cmpsb
cmp
push
dec
cmp
xchg
pop
jae
pop
cmp
insl
test
ret
jmp
inc
add
ja
ja
jns
sbb
cltd
dec
mov
arpl
leave
sub
jmp
mov
into
movsl
cli
pop
ds
inc
out
dec
imul
and
test
add
push
out
ret
jae
fsubrs
sbb
sbb
pop
mov
fisubs
ja
jl
cmc
fstl
stc
pop
inc
push
push
push
cmp
pop
sub
mov
cli
dec
mulb
out
mov
jge
adc
pop
push
push
mov
js
enter
adc
fst
jae
cmp
sub
and
in
cli
adc
sbbb
and
hlt
mov
test
movsb
and
enter
add
inc
xchg
das
push
jae
lret
repnz
jb
fdivrl
addl
lock
mov
adc
push
in
ret
ds
stos
xor
push
mov
jnp
pop
add
sub
shld
int
xorl
fcomi
push
shll
sbb
test
mov
push
sti
addr16
cmp
out
mov
in
or
push
mov
inc
add
mov
insb
cld
xchg
push
mov
push
cwtl
loope
jne
insl
repz
push
popf
stos
cli
dec
ret
aad
jl
adc
xchg
cmp
repnz
xchg
push
nop
mov
dec
test
stc
sub
rorl
mov
mov
pop
mov
or
js
add
test
imul
ljmp
in
mov
xor
leave
lahf
xchg
pop
adc
and
pusha
ds
jnp
adc
lcall
test
ja
movsl
in
es
mov
push
hlt
test
cmp
icebp
push
fadds
xor
push
and
fwait
or
cld
cli
inc
es
movsb
movsb
inc
xor
loop
cmpsl
sub
mov
scas
sbb
fisttps
stc
shrb
cmc
cmp
fsubrl
dec
rclb
add
lcall
std
clc
popf
inc
fisttps
fistpll
int3
movsl
push
jecxz
fbstp
or
jno
stos
push
daa
ret
add
mov
and
das
addr16
mov
gs
jecxz
in
pop
outsl
aad
mov
or
outsb
iret
mov
and
inc
cmpsl
enter
dec
das
inc
popa
scas
scas
pushf
sbb
dec
mov
sub
filds
push
xorb
loopne
jmp
lods
cmp
cmpsb
jns
dec
push
int
jnp
jno
sub
mov
pop
cmp
shlb
pop
add
aas
and
push
mov
js
les
jae
push
aas
dec
mov
jle
or
in
inc
push
lret
or
iretw
inc
shlb
push
mov
pop
inc
jmp
dec
xchg
pushf
inc
out
repnz
rclb
and
adc
out
jo
mov
ja
jno
mov
push
mov
push
out
jmp
fstpl
test
and
inc
mov
inc
push
dec
in
jbe
sub
rolb
add
mov
lods
push
ljmp
icebp
insb
inc
aas
jg
lods
in
add
xchg
lock
ja
das
mov
test
xchg
fwait
xor
or
inc
in
dec
gs
in
and
jae
cmp
xlat
mov
das
addr16
ss
imul
sbb
pusha
sbb
mov
mov
mov
or
stos
mov
sbb
popa
pop
ja
mov
xchg
sub
cmp
inc
mov
push
repz
rep
jnp
out
pop
and
stc
jne
sbb
or
mov
push
jo
jge
xchg
cltd
rcrl
jae
adc
push
fidivrs
ds
push
mov
add
jp
daa
pop
push
ljmp
jno
mov
mov
cmp
mov
push
insb
sahf
cwtl
or
sub
subb
hlt
std
push
mov
sub
rorl
arpl
cwtl
outsb
lret
subb
and
stos
inc
call
adc
xor
call
std
push
pop
mov
mov
mov
sub
fs
stc
je
dec
ret
xchg
or
call
test
dec
bound
stc
fcoml
or
or
js
mov
cli
adc
push
add
xchg
in
inc
sub
xor
mov
les
mov
mov
sub
jp
stos
mov
sub
cmp
dec
pop
andb
pop
cs
mov
mov
dec
mov
jecxz
inc
int
add
sbb
mov
dec
aaa
sbb
xchg
aaa
cmp
xchg
mov
cltd
lcall
sbb
ret
popf
cmpl
dec
mov
pop
xor
ret
loopne
mov
imul
fimull
or
data16
in
mov
jb
push
pop
adc
xchg
dec
inc
jle
mov
xchg
loopne
lcall
and
jecxz
pushf
adc
shrl
jp
sahf
shr
sbbl
dec
lret
jnp
je
sbb
dec
dec
lods
clc
sbb
jo
xchg
xlat
sub
cli
mov
call
mov
fnstcw
dec
ss
js
push
shr
mov
mov
arpl
xchg
repz
or
ds
adc
add
jg
mov
fs
int3
lea
xor
arpl
sub
push
fisubrl
shlb
xor
push
rcrl
out
sub
xor
inc
adc
test
push
lods
mov
lahf
lcall
loop
sahf
cmp
dec
es
out
add
jno
mov
push
inc
push
mov
jle
lds
mov
fistpl
loope
xor
repz
add
lret
addr16
mov
inc
xchg
shl
push
cmp
or
sub
or
fucomp
pop
ljmp
insl
adc
and
loope
jmp
loopne
dec
cmp
cwtl
mov
pop
sarl
xor
bound
dec
scas
push
xor
and
dec
jbe
fsubs
dec
pop
sti
pop
pushf
xor
jnp
fldt
pop
mov
mov
add
xchg
mov
int3
fdivs
or
jo
cltd
adc
sar
xchg
add
and
push
gs
mov
fwait
xlat
inc
fmull
jl
loope
imul
xchg
mov
xchg
ja
stos
xor
push
jl
push
mov
add
lods
rcrb
rcr
inc
nop
sbb
mov
bound
inc
leave
jno
testb
xor
sahf
mov
adc
test
repnz
adc
leave
loope
dec
mov
push
mov
push
and
cli
or
xor
popf
adcl
movsl
ret
jp
popa
mov
xchg
jg
mov
cmp
mov
dec
and
pop
sub
add
adc
or
jbe
adc
and
adc
stc
push
mov
popf
jl
test
iret
lahf
cmpsl
push
cmpb
scas
mov
lods
mov
cmpsl
jbe
fidivrs
mov
test
and
sub
lds
sub
imul
je
cmp
fwait
jbe
sbb
mov
imul
xchg
cmovl
xor
aad
nop
jp
dec
xlat
js
dec
outsl
adc
lods
lea
sti
inc
mov
and
adc
imul
mov
lahf
lret
mov
icebp
ja
int
pushf
sahf
sub
fiadds
imul
ljmp
push
mov
test
cmpsb
dec
sbb
inc
cmp
lds
mov
sbb
loopne
inc
add
sub
mov
xchg
int3
xchg
push
sbb
cmp
push
iret
loope
jle
stc
ret
mov
or
in
jp
scas
sbb
ret
xor
dec
fidivrl
lods
sbb
ljmp
sub
jecxz
shl
pop
mov
dec
pop
mov
pushf
daa
dec
iret
adc
pop
adc
mov
sahf
sbb
mov
xor
enter
pop
rcll
data16
shlb
dec
add
sbb
mov
sahf
sahf
xchg
ljmp
pop
mov
mov
imul
inc
cmp
in
jo
push
and
out
test
test
xchg
dec
js
divl
jg
xor
pop
and
pop
cmpsl
cmp
or
mov
jnp
call
dec
inc
xlat
jns
and
cwtl
mov
int
ret
push
or
push
insb
or
imul
out
pusha
push
push
in
mov
xchg
push
mov
or
lret
mov
scas
pushf
mov
xor
cwtl
mov
add
xor
jne
sub
and
fbld
mov
rcrb
mov
fs
fcoms
daa
lea
stos
adc
sbb
pop
stc
xor
inc
inc
jle
jns
add
icebp
daa
scas
mov
clc
or
fdivs
xchg
dec
testl
or
push
lods
lea
in
mov
test
inc
pop
in
in
mov
fcoml
mov
jg
orb
insb
imul
dec
test
sub
femms
dec
in
jmp
fiadds
imulb
stos
and
repnz
movsl
cmp
rcrb
and
roll
push
dec
fildl
rol
pop
fcomps
cli
push
jecxz
cmp
jle
popa
clc
icebp
xorl
mov
jg
outsb
clc
test
or
jns
dec
cmp
xlat
xor
or
xor
fistps
mov
divb
int
inc
xlat
dec
ljmp
dec
xchg
ss
push
mov
xor
push
cmpsl
add
cs
aam
jecxz
dec
pusha
fadds
add
push
jecxz
jle
bnd
dec
shrl
xchg
insl
and
inc
mov
in
mov
fbstp
test
fs
popa
orb
and
fs
sbb
shlb
arpl
or
inc
inc
filds
stos
fsubrl
xlat
jge
dec
cmp
movsb
pop
aaa
mov
push
test
movsl
cmp
cmpsl
inc
and
mov
jmp
inc
imul
into
xor
xchg
pop
or
adcb
fbstp
mov
mov
adc
cmp
pop
jle
popa
fdivl
sub
lret
ficomps
push
mov
imul
mov
and
loopne
cmpb
nop
sbb
jle
xor
mov
mov
sbb
push
ss
push
inc
imul
inc
std
lods
push
loop
test
dec
cmc
repnz
cmp
fadd
in
sub
shlb
lock
call
neg
adc
jp
inc
in
jo
sti
dec
dec
fldt
mov
out
lock
ss
cwtl
pop
cmpsb
adc
int
mov
lret
scas
aaa
or
aad
loop
xor
add
sbb
xchg
add
add
std
push
mov
or
cld
adc
movsl
arpl
aad
or
and
test
jecxz
add
stos
inc
shrl
xor
dec
jcxz
xchg
enter
mov
les
adc
aaa
pop
or
mov
cmp
stos
test
aad
dec
and
mov
call
test
icebp
mov
adc
lods
imul
sub
divl
lcall
loope
sbb
popa
aas
jle
arpl
repnz
insl
or
jnp
sub
fcmovnu
lods
adc
lcall
sbb
shr
lock
xor
xor
push
inc
pop
sbb
mov
mov
andl
and
and
jae
pop
jb
scas
mov
pop
aas
test
jns
ret
pop
mov
scas
jb
sub
xor
fstpt
jge,pn
jo
test
push
lods
push
inc
sub
mov
bnd
jbe
push
popf
mov
sub
ja
cmpsl
stos
es
pop
or
jl
inc
pusha
dec
in
call
insb
mov
push
mov
fsubrs
sub
cmpb
jo
test
test
and
fisubrs
or
add
dec
rol
dec
pop
lock
andb
fpatan
movsl
xchg
inc
out
test
xor
gs
xchg
nop
cwtl
xor
lock
sbb
aad
xchg
pusha
mov
popa
daa
or
insl
scas
sub
pushf
cli
int3
mov
push
lods
cmpsb
movsb
test
test
jne
cltd
call
loope
inc
lds
fsubs
pop
pusha
cmp
cmpsb
sub
xchg
mov
adc
popa
xor
ret
movb
and
pop
sbb
pop
sbb
mov
cmp
mov
lock
pushf
mov
shrl
lods
int
xor
xor
daa
pop
out
mov
pop
cmp
nop
imul
test
add
popl
adc
movsb
adc
loope
inc
pop
scas
inc
mov
fcmovne
leave
pop
cwtl
sub
mov
mov
adc
test
sbb
and
mov
adcl
sub
ja
test
mov
jge
fldpi
pop
popf
dec
pop
jmp
xchg
sub
dec
add
gs
mov
fistps
or
xor
imul
jo
clc
mov
cmpl
fucomip
movsb
cmp
pop
aas
pusha
mov
lds
pop
or
icebp
jno
aam
push
mov
ficompl
mov
jbe
xlat
iret
or
sub
nop
jle
add
adc
leave
cmpsb
mov
adc
and
and
or
fdivrs
cmp
dec
fninit
lcall
call
stos
xor
in
pop
loop
ss
and
mov
mov
or
frstor
out
lahf
loope
in
mov
out
jnp
fstpl
arpl
int3
shll
dec
test
leave
rol
push
push
ret
mov
mov
cmp
pop
cmp
dec
cs
push
cld
jecxz
dec
cmp
insb
insb
int3
adcb
or
xchg
scas
sahf
gs
mov
or
push
incl
adc
xchg
cltd
jae
add
push
cmpb
fimull
mov
pop
mov
popf
ret
sbb
cmp
mov
fildl
pop
xchg
mov
mov
lock
inc
push
pop
xchg
sti
xchg
add
pop
adc
and
dec
sbb
dec
mov
imul
adc
popf
inc
aaa
push
out
pop
cld
outsl
int
outsl
push
cmp
mov
call
and
xorl
mov
lcall
call
pop
test
cltd
jnp
jmp
inc
jae
pop
bound
dec
jmp
or
aam
pop
push
fwait
jecxz
jmp
stos
test
push
pop
inc
fnstenv
addb
adc
das
cli
jmp
pop
jecxz
fsubl
fdivr
xchg
sub
push
mov
xchg
subl
cs
ret
xchg
loopne
stos
inc
adc
sbb
or
sti
imulb
adc
adc
pop
es
insb
xchg
jae
scas
std
cmp
enter
leave
call
mov
mov
ja
imulb
mulps
lret
stc
movsb
inc
pop
inc
pop
mov
dec
lods
out
popa
stos
and
or
ret
daa
lret
lea
adc
xchg
push
mov
xor
sbbb
adc
aaa
jl
getsec
mov
hlt
test
mov
xor
xchg
add
jmp
call
out
imul
adc
sbb
repnz
daa
lea
xchg
cwtl
push
or
aad
adc
adc
sub
or
push
or
xlat
push
mov
xchg
lds
mulb
pop
cmp
or
adc
int3
xorb
pop
lds
push
add
adc
pop
pop
fs
das
je
mov
sbb
movsl
mov
and
mov
xchg
cli
push
xchg
rcl
je
in
xchg
mov
jae
jbe
cmp
sbb
sbb
lret
pop
int3
mov
add
fimuls
insl
xor
push
dec
pop
or
jo
sbb
out
ds
pop
out
lods
test
xchg
test
shrb
cmp
or
push
dec
inc
out
sahf
push
mov
mov
jne
icebp
sub
daa
jmp
aaa
in
arpl
xor
jbe
out
add
lods
inc
aaa
das
repnz
repnz
mov
mov
adc
xor
xchg
aas
adc
mov
test
pop
adc
loop
mov
movsl
cmp
push
fsubrs
hlt
jb,pt
inc
push
js
jnp
jmp
mov
fldl
mov
push
add
or
add
mov
dec
roll
or
push
xchg
and
shl
pop
test
arpl
pop
in
addl
ljmp
fldl
push
fwait
cmpsl
aaa
loope
push
aas
xlat
rcrb
or
mov
addr16
mov
cmpsb
mov
jb
outsl
push
push
mov
cwtl
mov
mov
adc
cld
ja
xor
inc
fwait
xor
stc
std
mov
xchg
lods
sti
push
ja
xor
mov
into
inc
inc
sahf
pusha
inc
fmul
jo
js
jns
push
mov
ss
jge
aad
push
pop
jne
pop
mov
jbe
or
add
sbb
gs
add
sahf
sub
sahf
sub
pop
inc
mov
pop
dec
push
lahf
int
cltd
rcll
mov
mov
mov
in
cmp
cmpsb
les
mov
bound
sub
dec
sbb
jp
clc
cmp
lds
cmpsb
xor
sub
stos
cmp
add
fiaddl
stos
hlt
mov
and
incb
inc
inc
push
push
call
add
lcall
dec
and
mov
sub
jge
sbb
sub
out
inc
out
mov
pop
cmp
pop
or
cmp
lcallw
fisubrl
and
xchg
mov
lods
mov
sbb
subl
bound
mov
ret
pop
mov
pushf
pusha
jl
cmp
cmpb
gs
dec
daa
cmp
cmc
ja
test
sbb
mov
xor
jno
ficoms
push
insl
sub
into
movsb
mov
push
inc
push
lret
cmp
sti
vmwrite
push
daa
stc
fs
sbb
sub
inc
imul
mov
out
sub
sbb
cmp
dec
mov
mov
mov
js
leave
mov
mov
js
xor
ja
dec
push
pushf
jmp
adc
loope
sbb
jae
mov
mov
mov
dec
inc
adc
jmp
cmp
jge
ja
inc
popa
enter
leave
stos
ja
adc
jno
call
jb
das
push
stc
icebp
cmp
iret
out
rcrl
scas
ret
pop
cmp
aad
daa
pusha
push
push
jb
inc
push
or
mulb
push
cltd
cmp
rcrb
mov
fisttpll
lcall
dec
cmp
iret
int3
xor
mov
inc
inc
jb
data16
scas
inc
pop
or
mov
aam
shll
jo
sbb
stos
push
dec
add
inc
sub
mulb
subb
cmp
sub
gs
ret
out
std
add
pop
cmp
dec
inc
sti
or
mov
and
push
ss
push
add
scas
inc
shrl
es
cmpsl
aas
clc
ret
popf
mov
cmpsb
push
jp
push
cmp
imul
inc
and
imul
xlat
pusha
mov
adc
or
xor
out
xchg
and
test
shrb
roll
mov
pop
in
jg
mov
out
pop
add
cmp
pop
mov
and
pop
jbe
sub
dec
cwtl
outsl
pop
sub
xchg
ds
xchg
push
in
xchg
dec
dec
inc
pop
inc
testl
jbe
jge
das
or
jp
repz
xchg
cli
or
ljmp
cmp
jno
lock
lahf
mov
inc
lcall
pusha
loopne
dec
dec
cli
sub
adc
es
jns
mov
shrb
aaa
mov
fcompl
mov
sti
rorl
mov
jbe
jns,pn
pop
ret
add
clc
xor
fldpi
and
out
stos
sub
lds
mov
outsb
push
int
call
int3
adcb
push
out
cmp
cmp
push
loope
test
xchg
inc
int3
xchg
loopne
stos
jge
fcom
dec
sbbl
push
ret
jmp
push
or
ret
mov
rorb
and
dec
cmpsb
jnp
rcrb
cmp
cmc
push
mov
loope
inc
cmp
aad
inc
fs
loope
jl
sub
popa
data16
add
popa
gs
adc
frstor
lods
adc
int3
ror
ds
cmp
mov
inc
add
sub
imul
sbb
out
xchg
out
sub
js
ret
data16
xchg
fisttpll
lahf
in
dec
mov
or
and
lcall
lret
mov
enter
call
xchg
or
xchg
fdiv
pop
das
mov
fdivrl
fwait
and
pop
inc
fs
dec
cmc
mov
adcl
cs
repz
inc
aas
ljmp
arpl
jle
stos
ljmp
or
pushf
xor
jge
and
pop
sbb
mov
into
pop
mov
test
leave
mov
hlt
lods
xor
ljmp
test
cmpsl
push
test
sbb
fstp
fwait
cmpsl
mov
and
ss
into
lcall
or
test
xchg
popl
xchg
dec
mov
xchg
xchg
or
pop
ret
iret
dec
out
sbb
sbb
push
rolb
imul
ficompl
or
adc
clc
push
jbe
js
outsb
mov
fs
daa
sub
dec
out
nop
push
add
jb
lods
sub
cmp
outsb
imulb
push
pop
out
inc
mov
and
xor
fbstp
xchg
pop
inc
jo
movsb
xor
ja
in
shrb
data16
lods
lret
fwait
or
cmp
push
mov
pop
addl
fstpl
adc
push
add
add
add
loope
push
xor
cwtl
mov
stc
sub
fbld
hlt
jp
aas
jbe
cwtl
sub
cmp
aas
jo
movsb
xor
jnp
inc
xlat
stos
gs
sub
lds
push
adc
inc
cmpsl
call
testl
pop
cmc
lods
xor
sub
cmp
mov
mov
jp
xor
inc
fnsave
mov
dec
into
mov
adc
cmp
cmpsb
ljmp
pushf
mov
or
in
cwtl
sti
ljmp
aad
cmp
aas
jo
add
sti
push
cmp
mov
fistps
fstpt
negb
divb
cmpsb
in
mov
popa
mov
insb
fnstenv
ljmp
test
cmp
bndstx
cmc
and
push
inc
xorl
cmp
nop
rolb
enter
mov
adc
inc
fcomps
jmp
mov
inc
sbbl
sub
lahf
fidivrs
loopne
inc
or
dec
popl
jge
hlt
movsl
subl
xor
into
pop
inc
jge
outsl
rcll
mov
int3
popf
loopne
push
jo
cmp
pop
insb
add
jg
or
or
pop
test
es
push
sbb
mov
mov
fimuls
shrb
test
push
jnp
inc
filds
lret
inc
lret
insl
sbb
aaa
fwait
xor
mov
das
rorb
scas
sarb
add
js
mov
mov
jne
mov
jnp
test
mov
test
dec
in
mov
cmp
fcmovne
cmp
mov
mov
mov
jecxz
fistpll
cmp
lea
iret
clc
xchg
daa
jnp
pop
loope
loope
popw
pop
test
sub
repnz
mov
adc
dec
es
dec
mov
mov
adc
jmp
cmc
dec
in
addl
inc
jns
arpl
push
rcl
and
shll
mov
pop
mov
mov
fdivrl
dec
push
push
test
loopne
adc
xchg
cltd
sbbl
add
adc
jae
mov
outsb
sahf
inc
fwait
inc
jp
jb
or
sti
xor
or
sub
cltd
sarl
ret
aad
sub
imul
sarb
pop
arpl
adc
daa
stos
pop
jno
shll
repnz
addr16
push
cltd
dec
ja
cltd
inc
adc
sbb
into
sub
pop
lahf
mov
rcrb
pop
pushf
jmp
ljmp
dec
int
stos
arpl
sbbb
or
mov
imul
flds
in
testb
push
or
cmp
iret
mov
mov
sub
fcmovbe
sub
in
imul
pushf
into
or
mov
imul
lcall
unpcklps
ret
cmp
adc
jl
les
les
jo
pop
imul
pop
fnstenv
mov
jb
imul
lret
addr16
loop
inc
mov
repnz
sti
inc
fdiv
lahf
repz
xor
jns
test
fistpll
stc
mov
out
clc
jnp
sarb
pop
mov
jmp
mov
pop
xor
and
adc
arpl
sbb
lock
dec
popf
lods
jge
enter
adcl
mov
mov
push
test
sbb
or
dec
xchg
mov
pop
mov
cmc
push
out
jl
jbe
push
outsl
fidivrs
jo
cmpsb
sti
cmc
mov
in
and
cli
push
and
dec
mov
arpl
jmp
insl
sti
and
and
arpl
xor
fcompl
inc
fs
arpl
dec
test
clc
mov
fwait
das
lret
mov
dec
pop
xchg
daa
mov
and
ret
or
or
pop
or
dec
push
or
outsl
cmp
scas
enter
sbb
je
add
jmp
mov
push
inc
add
mov
lret
jp
repz
nop
addr16
arpl
xchg
das
cmp
lods
into
jbe
bound
cmp
mov
or
pop
ret
popa
clc
hlt
jg
in
adc
sub
cltd
lret
add
adc
sub
jbe
lahf
scas
test
cmp
adc
jae
sbb
add
out
jecxz
shl
mov
mov
mov
notl
iret
xor
fistl
stos
or
mov
cmpsb
dec
fsub
fiadds
loope
add
stos
stos
inc
insl
cmc
aas
dec
fcmovbe
pusha
shrb
neg
call
decl
or
adc
inc
xchg
js
pmaxsw
lret
sub
dec
les
mov
lret
jl
push
in
aad
enter
xor
in
and
fstps
add
mov
lods
inc
pushf
push
lret
pop
push
insl
push
inc
xchg
popa
outsl
pushf
fs
sub
push
mov
ja
adc
pop
mov
ret
addr16
shll
stos
adcl
cmp
mov
cmp
pop
loop
leave
pop
pop
pop
ds
mov
dec
dec
lea
call
ljmp
hlt
fdivrs
call
cmp
pop
push
aaa
leave
sbb
jbe
sbb
arpl
imul
or
xor
je
pop
dec
shr
gs
mov
stos
bound
pop
iret
inc
mov
lods
pop
repnz
scas
shr
inc
or
mov
jno
xor
push
jb
inc
sti
call
and
dec
fnsave
pop
push
pop
mul
push
xor
stos
rorl
shl
jle
push
or
loopne
test
and
xchg
xchg
cmp
push
bound
bound
inc
pop
mov
add
push
loopne
push
out
pop
movsb
inc
or
jne
fildll
fsubl
sub
cmp
pusha
push
enter
add
sbb
iret
stos
sub
lea
add
push
jmp
mov
imul
lret
rorb
test
xchg
daa
mov
xor
lock
dec
cmpsl
cltd
out
in
aam
repnz
mov
dec
lods
mov
ss
jae
test
fsub
insb
mov
scas
lea
in
sbb
mov
lret
cs
sarl
cli
mov
xchg
fdivl
push
or
inc
bound
ret
int3
mov
push
cmc
sbb
push
pop
xchg
in
jno
stos
icebp
mov
mov
lods
inc
loopne
fistps
lds
mulb
mov
pushf
jno
sub
lret
jle
sbb
xlat
dec
call
sbb
adc
fstpt
push
repz
jg
pop
clc
add
push
mov
sbb
xor
xor
jg
and
ljmp
outsb
in
push
mov
int
push
fs
js
mov
and
das
addr16
xchg
and
lahf
mov
push
mov
lahf
cmp
adc
xor
test
or
jnp
cli
push
stos
xor
mov
in
push
inc
push
cltd
and
push
mov
pop
xchg
scas
adc
xor
xchg
sub
sbb
add
loop
adc
add
jecxz
loop
sbb
pusha
push
mov
or
daa
sbb
mov
mov
clc
nop
mov
sbb
out
jmp
jnp
xor
adc
lret
or
fwait
mov
push
insl
sbb
cmp
cmp
mov
repz
cmpsb
or
aad
jg
iret
subb
cmp
dec
push
pop
imulb
pop
cmp
roll
sti
orb
in
dec
pop
mov
cwtl
mov
out
or
imul
xchg
xor
and
test
adc
mov
movsl
sbb
gs
sbb
add
aad
xor
sub
fbstp
xchg
inc
lret
cld
stos
stc
xor
faddp
mov
lock
std
test
add
ret
sub
imul
push
and
hlt
movsb
daa
lcall
ljmp
xor
clc
pop
jmp
sub
popa
adc
push
add
dec
call
dec
fs
mov
sub
jmp
adc
sub
dec
jne
jne
lcall
dec
in
aaa
lcall
stc
test
shl
repz
movsb
lahf
lds
hlt
movsb
daa
mov
mov
mov
fmul
xor
ja
inc
leave
adc
testb
jae
sbb
into
ds
and
adc
mov
pushl
mov
orb
add
dec
in
arpl
cmc
ds
ss
xor
jbe
sti
and
test
mov
xor
dec
mov
fwait
mov
mov
mov
insl
stc
ret
xchg
imul
fnstcw
data16
xor
sbb
and
fcmovne
loopne
pop
hlt
push
pop
dec
mov
xor
jg
insl
stc
mov
insb
inc
xchg
ret
inc
pop
sbb
int
lcall
sbb
loope
xadd
aad
daa
add
loope
out
aam
popa
mov
mov
fsubl
dec
pop
and
mov
cwtl
mov
jno
xor
push
xchg
mov
sti
push
into
add
jne
fcom
pop
ds
pop
jp
xor
pop
jno
mov
rcl
jbe
and
xchg
xchg
int3
int3
cmp
shrb
sub
xchg
je
cli
push
sahf
pop
or
das
jg
leave
or
adc
add
int3
sub
dec
push
cs
xlat
sbb
jno
sub
add
jl
mov
or
bound
inc
mov
and
or
jne
lahf
mov
std
dec
cwtl
mov
push
ljmp
jno
xor
push
cli
es
fucomp
mov
int3
or
jg
lahf
or
xor
fildll
inc
add
push
fwait
cmpsb
sbb
pushf
imul
arpl
mov
rcr
pop
adc
jle
push
out
xlat
sbb
mov
loop
mov
testb
cmp
cltd
cmpsl
xor
or
push
xor
and
xor
movsl
pusha
mov
imul
xor
dec
pop
dec
rcrl
fsts
movsl
lds
aas
pop
fxam
addb
lea
xor
cld
inc
bound
inc
jg
or
adc
adc
test
scas
sbb
pop
scas
subb
jmp
in
inc
iret
cmc
mov
dec
outsl
enter
push
push
and
in
add
push
enter
daa
out
add
xchg
xor
dec
movsl
push
push
xlat
insl
lock
filds
or
pop
sub
fcmovu
jecxz
inc
in
ja
cmpsl
jbe
popf
xor
jge
scas
mov
sbb
mov
notl
movsb
outsb
inc
les
xor
pop
out
mov
pop
sbb
dec
test
rcrb
cld
xchg
and
dec
arpl
dec
cmp
clc
xlat
repz
aas
lret
mov
pop
sbb
push
lret
cmp
xchg
jle
in
mov
dec
mov
cli
test
jmp
into
mov
add
push
lcall
filds
popl
push
ficoms
lods
push
lret
xchg
movsb
xor
inc
pop
sub
push
xor
cwtl
ret
enter
dec
out
cwtl
lret
out
lock
mov
add
cmp
je
dec
into
sti
scas
ret
fwait
mov
inc
mov
adc
pop
cmc
movsb
xchg
imul
pop
dec
incb
subb
aad
dec
out
fwait
into
push
lea
outsb
loope
daa
mov
popf
xor
xchg
shll
mov
or
mov
jle
imul
xor
and
pop
jbe
mov
lds
pop
dec
sub
add
fdivs
movsb
or
testb
daa
push
repz
repnz
or
sub
hlt
ds
add
jecxz
iret
adc
loopne
inc
insb
xchg
gs
pop
sub
filds
lods
push
inc
cmpsb
cmc
and
xor
mov
outsb
and
scas
mov
shll
xorb
sbb
aad
scas
mov
sahf
js
ret
pop
dec
loope
in
sbbb
jmp
mov
incl
xchg
mov
push
popa
and
push
aaa
cli
lahf
outsl
mov
dec
repnz
sub
mov
subb
cltd
mov
into
fidivl
xor
sub
cmp
cmpsb
jle
enter
call
dec
dec
repnz
lods
inc
aaa
mov
lret
and
in
mov
addl
aad
pop
mov
dec
scas
mov
inc
data16
subb
mov
push
sbb
sbb
cmp
and
push
inc
std
in
mov
jno
sub
dec
stc
sub
cmpsl
fcmovbe
idivb
clc
shrb
or
mov
pop
leave
fisttpl
sarl
cld
dec
push
lods
inc
push
cs
repnz
mov
pop
rclb
or
arpl
sti
mov
dec
add
jp
seto
mov
cmpsb
jmp
adc
or
ds
mov
add
cltd
outsl
push
int
push
or
cmp
adc
push
sbb
fwait
sbb
lods
adc
push
mov
outsl
mov
or
push
scas
mov
lods
push
int3
push
insl
add
cli
shr
daa
movsl
push
je
es
cmp
decl
pop
insl
insb
dec
or
subb
into
ficoml
dec
xchg
lods
mov
fbstp
pop
vmwrite
fbld
lods
loop
jg
add
ljmp
xchg
inc
jmp
push
xchg
js
leave
mov
test
xor
out
pop
sbb
jb
and
fwait
push
jmp
out
xchg
add
iret
fstl
mov
mov
cmp
lret
hlt
xchg
test
pop
dec
data16
jae
pop
cmp
fidivs
in
xchg
jl
imul
and
cld
jae
loop
lods
xchg
mov
pusha
ss
push
add
xor
push
xlat
jmp
jp
xchg
or
insb
pop
xlat
push
jp
jg
dec
mov
adcl
sbb
or
dec
jecxz
rcr
and
sahf
das
inc
xchg
xchg
mov
fcoml
mov
push
fsubr
fcoml
xchg
push
pop
insl
sub
fwait
orb
sub
sti
cltd
pop
sub
stos
cmc
push
in
adc
fisubl
movsb
and
sbb
push
movsb
into
add
xor
and
fldl
cmpsb
push
pop
fndisi(8087
ficoms
out
jae
mov
mov
add
push
inc
or
inc
dec
mov
dec
xchg
ljmp
dec
jb
push
dec
push
shl
in
fisubs
mov
push
sbb
pop
xor
push
xor
call
mov
dec
inc
add
push
push
cmp
jbe
shl
xor
addr16
loop
jne
add
cmp
sbbl
mov
mov
push
sbbl
mov
xor
pop
mov
or
jmp
xchg
jmp
mov
mov
popa
push
add
and
mov
hlt
xlat
sub
out
in
sbb
xor
in
inc
mov
sarl
loopne
ret
inc
jle
xor
das
push
icebp
xlat
cs
xchg
pop
dec
push
scas
mov
out
adc
leave
sti
mov
pop
por
imul
mov
push
js
adc
adc
je
push
and
xor
aaa
sbb
cmp
les
mov
adc
mov
movsb
pop
cld
push
aas
xchg
test
and
sbb
xor
outsl
mov
add
jmp
out
ss
addr16
cmp
imul
and
dec
ficompl
add
jmp
or
ja
mov
fwait
stos
mov
jno
cmp
mov
sbb
fildl
xchg
push
lds
ss
mov
fimuls
lcall
and
dec
push
in
out
jo
je
pop
mov
movsl
inc
repz
cmp
push
add
pop
arpl
mov
fadds
in
inc
inc
jmp
hlt
imul
cmp
push
mov
and
scas
sbb
ror
mov
jecxz
sbb
das
fildll
aam
lods
cmp
icebp
dec
sbb
sbb
scas
inc
cmp
scas
stos
repz
jno
jmp
mov
orl
shll
imul
sbb
aaa
cmpsl
lea
inc
lea
cs
adc
into
enter
fisttpll
scas
aaa
repnz
mov
mov
cmp
stos
std
int
cwtl
cmpsl
vpcmpgtw
push
or
push
add
xchg
add
addb
in
or
pusha
mov
pushf
loopne
into
divb
xchg
pusha
jnp
mov
mov
repz
inc
lret
mov
lret
push
test
test
jns
sti
sti
adc
mov
adc
lret
add
scas
xor
nopl
jnp
inc
jp
jae
out
mov
iret
das
sbbl
cmpsl
ret
and
add
inc
pop
sahf
js
dec
inc
mov
lods
aas
add
dec
test
mov
mov
xchg
in
mov
jbe
push
xor
bound
dec
cmp
adc
aad
jb
leave
out
roll
call
bound
inc
aam
ds
lret
jb
add
lods
sub
xchg
sbb
xchg
imul
outsb
popf
xchg
lock
aas
shlb
or
inc
es
xlat
xor
pop
jecxz
push
sub
and
fs
int
das
ret
bound
stc
das
cmp
and
lahf
jno
sbb
push
subb
xchg
pop
sbb
jb
xor
idivb
inc
mov
fldcw
test
mov
adc
data16
test
mov
rolb
add
cmp
or
das
mov
test
mov
mov
lret
ret
cmp
adc
cwtl
mov
sbb
xchg
mov
mov
sar
les
dec
or
xor
sbb
mov
fildll
mov
inc
pusha
jmp
cmp
shll
add
mov
std
outsl
fwait
ss
xchg
test
stc
mov
mov
fistps
fisubrs
mov
sbb
mov
pop
dec
cli
jmp
mov
andl
jp
push
loopne
mov
lcall
daa
loop
sub
xor
mov
aad
jns
xchg
push
lea
int3
inc
adc
seto
clc
jnp
dec
pushf
icebp
fadds
cmp
pop
insl
icebp
enter
outsl
sub
mov
jne
popf
mov
popf
sti
aaa
nop
lahf
mov
or
arpl
push
aaa
sbb
inc
fisubrl
mov
mov
sub
out
imul
sbb
ss
pop
fimuls
in
sbb
cmp
xor
adc
mov
push
and
mov
je
jbe
pop
movsb
test
loope
jl
mov
jns
cmp
lahf
sub
push
inc
push
int3
sti
test
mov
out
adcl
xor
daa
xlat
aam
outsb
inc
lds
xchg
cmp
iret
jecxz
xor
dec
rcll
push
inc
jns
out
pop
fsubrl
push
cmc
bound
sub
or
add
cmp
jno
or
mov
into
mov
fnstsw
inc
fidivl
std
dec
inc
pop
xchg
repz
std
xchg
stc
sbb
mov
sahf
mov
xchg
and
mov
ljmp
add
push
and
clc
daa
shrb
ret
mov
js
xchg
mov
sub
frstor
scas
out
adc
cmp
sarb
xchg
xchg
adc
push
add
test
pop
out
aaa
loope
sbb
fs
xchg
adc
frstor
push
or
notb
mov
outsb
or
adc
test
mov
lea
jge
popf
sub
dec
adc
in
or
xlat
mov
xchg
repz
jl
jno
cli
pop
mov
insb
add
xlat
xor
mov
fwait
neg
cmp
stc
ret
dec
in
movsb
or
subb
les
xor
and
sub
xchg
pop
push
clc
mov
cmp
pop
mov
or
cli
pusha
les
xchg
mov
or
test
xor
shr
je
clc
aaa
or
pop
test
push
ljmp
mov
jo
ret
and
adc
insb
out
aam
push
sahf
cmp
xor
fsubrs
fwait
sub
aas
pop
loope
and
sub
jmp
pop
sub
call
sub
cmp
push
and
rcl
add
icebp
jle,pn
push
dec
cltd
lds
jg
aas
mov
into
enter
xchg
inc
and
jmp
stos
fisttpll
xor
xchg
mov
inc
call
add
ror
sub
or
ret
nop
mov
stc
push
call
push
mov
jno
addb
mov
ret
and
fmuls
add
scas
addl
popa
out
aad
or
jo
ja
jp
and
popa
enter
hlt
hlt
lret
mov
clc
movsl
fwait
shll
add
test
and
mov
inc
addr16
pop
push
das
and
test
sub
in
mov
push
xchg
jae
pop
fwait
loopne
int
push
out
test
js
add
loope
fstl
mov
mov
add
scas
and
mov
bound
jbe
int3
jns
filds
sbb
sti
imul
scas
cmp
ss
sub
test
out
shl
mov
jno
xchg
xchg
cmc
dec
mov
jb
movsb
out
popa
test
mov
pop
add
jl
pushf
inc
frstor
push
addr16
jne
enter
ja
lods
mov
pusha
push
js
jo
inc
fld1
jle
loop
rol
xor
xlat
jecxz
and
xchg
dec
adc
outsb
pop
aam
lret
jo
fucom
xchg
sarl
sbb
xchg
push
ss
sbb
add
jmp
mov
shrl
rcrl
cli
pusha
adc
push
dec
dec
test
push
mov
jecxz
mov
test
dec
movsb
jp
lcall
loop
sbb
push
out
mov
and
mov
sub
pop
pop
ss
mov
push
mov
iret
sbb
adc
leave
fs
nop
xor
dec
div
dec
fidivrs
push
shlb
and
push
cli
lods
cmp
mov
ljmp
mov
or
cmpb
mov
mov
in
test
or
nop
push
outsl
insb
xchg
sub
fwait
mov
addr16
std
fisttpl
test
out
test
mov
mov
or
mov
sub
and
outsl
adc
leave
nop
stos
divb
popf
andb
daa
mov
mov
les
pop
test
loopne
cmp
movsb
mov
negb
test
insb
enter
shlb
mov
push
jnp
insb
push
mov
mov
insb
icebp
dec
mov
sarb
cmp
inc
out
mov
ljmp
notl
cltd
lret
jne
push
imul
in
or
inc
pop
jl
imul
lea
mov
cli
pop
bound
into
add
add
daa
push
dec
jmp
std
bound
rcrl
xchg
push
push
nop
mov
clc
or
and
sub
ss
jno
pop
repz
mov
out
adc
inc
mov
sub
inc
mov
lcall
iret
jbe
icebp
cmpsl
lock
xlat
es
rol
dec
lcall
inc
cmp
mulb
add
fildll
pop
stos
xor
arpl
inc
cltd
pop
xor
mov
mov
stos
and
xchg
test
lret
mov
jno
mov
test
pop
jl
mov
loopne
les
sahf
and
nop
outsl
fsubrs
aad
test
notb
add
add
sbb
pop
push
add
dec
inc
push
lret
aaa
iret
scas
adc
loop
adc
add
xchg
mov
scas
fldenv
popa
cli
mov
jae
leave
in
dec
cmp
and
lea
and
and
loope
test
or
adc
cmp
das
cli
repnz
dec
mov
dec
loopne
inc
push
les
xor
jp
fisttpl
out
imul
loop
push
aad
adc
imul
pop
mov
sub
mov
in
loope
and
xchg
insb
sbb
popa
inc
sub
pop
dec
cmp
negb
iret
and
lret
dec
inc
add
and
cmpsb
mov
inc
push
fidivrl
leave
int3
stos
js
popa
aas
jne
int
mov
inc
ret
push
clc
jmp
cwtl
add
lcall
iret
inc
popa
add
test
sub
iret
cmp
out
ljmp
push
popa
pop
jo
cmp
fmul
and
xlat
push
in
mov
repnz
jl
shufps
or
cmpb
stos
test
jl
cmpsb
jp
sbb
cld
push
popa
xor
cmp
push
bound
inc
adcb
fnsave
jg
test
pushf
ja
popa
pop
out
cmp
adc
sub
mov
adcb
fldl
in
add
inc
add
inc
mov
scas
inc
mov
mov
int3
push
fmull
mov
rclb
jae
add
sbb
push
fsubs
movsb
mov
xchg
test
mov
aas
cli
mov
fldt
scas
and
mov
jne
sbb
xor
imul
pop
sub
cmpb
les
mov
or
in
stos
ret
pop
xchg
insb
jle
inc
loope
push
hlt
jg
ss
testl
add
xchg
std
dec
xchg
xor
mov
xchg
mov
or
fmulp
adc
jmp
and
insl
mov
dec
mov
xchg
enter
sub
pop
in
pop
int3
cmp
gs
jmp
or
sbb
mov
or
popa
test
or
adc
dec
cs
repz
dec
pop
xor
sbb
aaa
jb
cmp
add
cld
adc
ljmp
mov
mov
out
dec
or
push
xlat
jbe
fstpt
fdivl
or
and
push
mov
or
sub
insl
pop
cwtl
arpl
add
jb
das
adc
inc
jno
int3
ficomps
push
jb
mov
leave
push
xor
pushf
mov
cmp
cltd
xor
sub
out
pusha
inc
push
movsl
mov
test
hlt
cmpsb
in
mov
cwtl
in
ret
dec
dec
ljmp
mov
lcall
test
pusha
int
mov
fists
mov
mov
adc
mov
sub
push
xchg
xor
pop
stos
shrb
sti
repnz
xor
jmp
test
dec
fldenv
and
lock
testl
push
fdivl
es
sub
sub
xchg
jle
out
jae
mov
add
js
mov
stos
fbstp
xor
shlb
rcrl
imul
mov
call
in
gs
idivl
mov
aam
movsl
dec
aad
in
addr16
icebp
push
enter
inc
mov
xchg
push
inc
ret
xchg
hlt
imul
dec
hlt
xchg
jbe
add
aaa
and
scas
ljmp
mov
sbb
sbb
idivb
call
ret
xor
mov
sub
aaa
pop
scas
dec
ds
push
je
mov
out
loopne
aas
xchg
xor
sbbb
sbb
mov
lock
add
fistpll
bound
fwait
push
pop
adc
aaa
inc
push
aad
jns
mov
rcl
pop
lods
lds
xor
dec
stos
mov
and
scas
dec
cld
xchg
xchg
mov
sbb
sub
mov
cmp
iret
add
xlat
xor
pop
jae
mov
rcrl
push
fs
std
repnz
testb
jb
pop
orl
mov
cmp
dec
and
cmpsb
cmp
inc
or
pop
cwtl
xchg
cli
xchg
les
sbb
mov
pop
lock
in
sbb
icebp
ja
jo
mov
ljmp
xchg
cmp
leave
sub
jo
adc
std
xchg
inc
push
in
cmpb
push
je
or
or
jge
pop
scas
mov
lea
aaa
adc
jae
add
inc
fld
pop
xchg
jae
loop
mov
ja
sbb
aad
mov
fadds
nop
inc
xchg
and
cmc
in
add
xor
sbb
adc
stc
mov
out
jp
sti
jb
push
in
icebp
mov
mov
jae
xchg
or
sbb
lods
inc
mov
cmc
jecxz
pop
fistl
mov
pop
cmp
mov
rcll
jmp
movsb
mov
bound
lods
scas
sub
cmpsb
test
arpl
icebp
inc
fsub
sbb
and
repnz
popf
arpl
loop
orl
lret
sub
adc
scas
push
jns
cmp
movsl
or
lock
dec
mov
dec
jno
iret
sub
ja
dec
xor
add
mov
cmpsl
push
andb
sbb
dec
mov
xor
rorb
inc
inc
mov
ss
lret
mov
inc
push
stos
aad
dec
outsl
cltd
gs
nop
jp
scas
outsl
hlt
addr16
inc
or
inc
addr16
repnz
aas
mov
sub
jne
xor
push
cmc
lret
ss
in
jle
lock
lods
mov
jle
jnp
stc
sub
inc
lods
pop
hlt
cltd
loope
mov
incl
adc
inc
cld
sub
push
test
aaa
sub
jl
int3
dec
mov
cmpb
mov
movsl
addl
mov
adc
mov
movsb
or
inc
lret
pop
inc
pop
jmp
xchg
jbe
call
cmp
cmp
inc
rcr
xchg
idivl
jle
loopne
cmc
add
mov
sbb
ds
xchg
pop
xor
cmpsb
mov
xor
lds
push
xlat
jle
or
das
and
jp
cmp
lds
jmp
insl
cld
sub
gs
pop
jo
jnp
jne
cltd
test
notb
idivb
push
rcl
loope
mov
mov
mov
mov
bound
cmp
out
or
cli
or
nop
lret
pop
and
jg
adc
aad
sbb
mov
xor
jo
mov
clc
mov
clc
adc
adc
push
insl
and
test
xchg
movaps
cmp
or
and
mov
jmp
loopne
inc
fmul
and
outsb
push
mov
mov
cmc
mov
push
cltd
xor
mov
out
jge
and
adc
push
and
push
dec
mov
jle
add
add
insb
dec
shrb
pop
dec
pop
pushf
xor
addl
push
jns
cmpb
and
jae
out
pop
fs
xchg
aad
test
aas
addb
insb
out
lahf
pop
repz
mov
dec
arpl
sbb
imul
inc
fyl2x
push
in
loopne
sub
pop
jle
inc
ljmp
add
cmp
xlat
jbe
add
cmpsl
ds
pop
aas
sti
xor
rcll
out
sahf
aam
jne
std
inc
std
adc
cwtl
xchg
adc
push
jmp
pop
repz
scas
rcll
cmp
dec
flds
cltd
lods
inc
and
jb
xor
xor
lahf
std
push
rcl
cli
jb
cmp
xchg
pop
imul
js
jg
push
sub
push
lret
test
rol
and
aaa
pop
jns
dec
aad
xchg
mov
jno
cmpsl
sbb
test
xchg
sub
xlat
dec
jg
jp
arpl
pop
dec
xchg
xchg
sbb
xchg
sub
sub
jns
cmp
pop
xchg
jbe
cmp
sub
ds
add
arpl
rolb
and
mov
loop
movsl
mov
add
push
xor
scas
adc
sbb
rorl
rcl
dec
out
scas
stc
sbb
ss
and
ret
push
dec
mov
scas
jmp
sub
jg
mov
vandps
shrb
sub
fsubrl
lock
gs
xor
cwtl
cmp
adc
bound
ret
fs
and
pushf
popf
sub
lahf
xor
pop
cmpsb
movsb
fsubrl
sub
mov
ret
dec
mov
cli
pop
mov
pop
or
lcall
fcmove
testb
cmp
mov
in
das
pop
mov
xchg
mov
xchg
adc
out
jae
stos
rorl
xchg
mov
mov
bound
sbb
cmp
push
orb
test
xchg
or
frstor
outsb
icebp
or
into
xor
jl
mov
and
packsswb
pop
cmp
mov
mov
sub
lods
popa
daa
mov
cmp
inc
scas
stos
xchg
mov
and
inc
jmp
pop
cwtl
mov
push
test
inc
enter
dec
fldl
xor
lock
imul
adc
sbb
dec
mov
xchg
push
sbb
lods
mov
sti
stos
imull
popf
jmp
int3
out
insl
sahf
inc
sbb
inc
in
lds
and
xchg
lahf
lods
les
sti
jbe
outsb
mov
sbb
pop
add
cmp
jno
fldenv
daa
xchg
test
mov
mov
and
fwait
sti
sub
cmp
bound
mov
pop
fstps
rcr
enter
stos
xchg
lret
xchg
lcall
in
jns
sarl
mov
ficompl
imul
add
mov
lcall
jbe
pop
dec
decl
ret
cli
out
pop
scas
xorb
pop
sahf
push
inc
test
lea
iret
and
add
test
in
cmp
popa
or
sub
aam
loopne
movsl
adc
pushf
das
jne
mov
shlb
shr
addb
xchg
dec
fs
dec
decl
std
bound
call
cmp
pop
add
popf
scas
dec
sbb
idivb
pop
xchg
jl
xor
push
bound
inc
leave
lods
mov
int3
gs
outsl
insb
in
jns
loope
xor
add
inc
adc
fmuls
jg
push
insl
jg
lods
fadd
test
in
mov
xor
ja
test
out
popa
nop
inc
test
repnz
sbb
jnp
addr16
jle
int3
push
es
mov
imul
sub
push
sbb
mov
mov
test
pop
jg
repz
stos
nop
xchg
add
xor
negl
dec
pop
imul
fimuls
sub
jbe
mov
cmpsb
push
mov
adc
es
in
frstor
iret
adc
loope
xor
dec
add
pusha
jp
adc
push
and
push
stos
es
sub
int
pushf
ljmp
xchg
rcrl
mov
push
insl
pop
pop
ljmp
imul
cld
add
xor
ds
popa
sub
jg
cs
sub
fldl
sarl
aaa
jg
out
inc
pop
popf
inc
ljmp
pop
jl
outsb
sub
or
into
push
mov
and
cmpsl
jle
cmp
sub
pushf
int
stos
mov
xor
insb
push
push
fsts
add
xchg
mov
andb
fistps
insl
sub
and
cmp
xchg
or
test
je
mov
push
imul
cli
das
fistps
mov
arpl
aam
out
xor
loopne
jno
insl
dec
aam
sbb
and
inc
dec
iret
jmp
sbb
aas
adc
sbb
mov
push
inc
xor
popa
test
jg
shlb
mov
fnsave
cltd
aam
push
fwait
popf
je
sbb
sbb
push
dec
mov
inc
into
stos
pop
movsb
jae
dec
popa
xrstor
rcrl
adc
popf
gs
movsl
xchg
inc
andb
mov
xlat
jb
or
xchg
and
lods
inc
inc
sub
bound
outsb
outsb
add
data16
xchg
or
scas
sbb
sub
repnz
jno
cli
xchg
adc
outsl
push
xchg
rorb
clc
je
subb
add
or
adc
cs
cmp
inc
int
xor
pop
adc
mov
jo
fwait
data16
jno
jmp
pop
in
ret
pushf
mov
xchg
sahf
mov
jecxz
sbb
push
mov
cmp
adc
xor
jae
fs
in
lods
rorl
es
xor
aaa
bound
inc
sub
roll
mov
rcrb
fs
out
push
xor
push
outsl
bound
ret
adc
sub
pop
dec
adc
xor
test
and
in
dec
jnp
or
movsl
in
pushf
mov
call
or
dec
cmc
outsb
dec
add
mov
xchg
adc
fistps
or
cltd
std
pop
and
imul
fisubrs
push
pop
adc
imul
cmpsb
imul
out
aam
or
push
or
mov
or
in
mov
adc
sbb
out
hlt
mov
xchg
sub
jl
xchg
lret
and
sbb
mov
cmc
repz
inc
add
call
movsl
mov
mov
and
aam
mov
lea
test
or
movsl
inc
and
dec
in
fucomi
scas
mov
push
fsubr
mov
out
add
cmp
sub
xchg
add
cli
arpl
stos
dec
or
popa
popa
and
sbb
and
inc
andl
cmp
adcl
mov
xchg
xchg
inc
lea
jge
jmp
lock
rolb
pop
push
stos
pop
pop
loope
xchg
mov
add
sub
pop
dec
sub
cmp
mov
std
push
imul
dec
jecxz
stc
and
sti
data16
xchg
mov
or
or
xchg
fstpt
or
insb
mov
pop
cltd
xchg
xchg
jmp
jb
popw
jae
cmp
pushf
push
stc
nop
ja
push
lock
fcomps
lcall
and
xorb
and
cmp
psraw
add
or
es
mov
out
mov
sub
fnstenv
vpunpckldq
pop
xchg
ficoms
mov
leave
int
adc
sbb
xor
xor
adc
aad
ljmp
sbb
jne
mov
ljmp
mov
leave
loope
shrb
pop
pop
mov
cli
dec
and
and
pushf
aad
decl
std
adc
sub
inc
lcall
inc
mov
dec
lods
or
test
movsb
out
ret
jecxz
xor
mov
popa
pop
scas
mov
jbe
js
and
lock
push
jbe
in
add
outsb
sub
leave
sbb
xorb
sbb
ljmp
ja
ret
xorl
or
mov
cmp
cmp
cmpsb
push
push
push
mov
mov
mov
pop
push
jno
mov
ror
fs
out
and
inc
fnstcw
add
pop
xor
pusha
push
add
xchg
mov
and
pop
adc
add
jecxz
movsb
mov
push
cwtl
loopne
push
pusha
mov
stos
cmpps
mov
loopne
bound
int
jle
dec
mov
jmp
es
sbb
enter
sbb
js
shrl
outsl
xchg
fmuls
aad
and
scas
rorl
loope
cmp
out
mov
fwait
dec
imul
std
sbb
shrl
fisttpl
stos
inc
jnp
gs
loope
cmpsb
pop
cmpl
mov
scas
jno
stos
pop
sbb
add
cmp
mov
mov
fisttps
test
outsl
push
in
adc
xor
aad
adc
divb
in
mov
jb
ret
jp
cli
mov
ret
or
lock
or
cmp
or
push
fsubrp
aas
inc
or
nop
cmp
test
popa
push
inc
enter
test
inc
inc
andl
inc
adc
lret
imul
sbb
in
mov
xchg
sbb
dec
sbb
das
jg
mov
stos
insb
add
fnsave
cs
imul
sbb
pop
aad
cmc
push
pop
sahf
add
cltd
adc
scas
data16
and
lret
mov
ds
sarb
sub
cmc
mov
pop
loop
xchg
add
pop
repz
or
out
test
inc
cmpsb
stos
je
pop
mov
mov
cmp
jle
cmp
add
sbb
add
mov
inc
loop
les
cmpsl
addr16
hlt
push
push
insb
mov
insb
in
dec
test
push
mov
or
jge
mov
adc
out
cmp
and
mov
xor
xor
rclb
mul
jl
push
mov
cmc
aad
aad
add
in
cs
and
div
sbb
jl
push
sti
mov
xchg
ja
sub
insl
cmpsb
mov
test
add
pop
adc
lret
inc
es
add
pushf
movsb
addr16
imul
dec
imul
lahf
adc
faddl
scas
dec
xchg
rclb
pop
xor
push
fbld
addb
mov
push
jne
add
jb
dec
movsb
inc
inc
fs
adc
push
aad
lea
movl
jge
mov
movsl
neg
loopne
adc
add
push
push
js
push
es
es
hlt
xchg
jb
dec
adc
jo
aam
shlb
scas
xchg
mov
inc
add
push
insb
sbb
shlb
xchg
cmp
int3
jp
or
mov
ds
les
pop
jnp
pop
sbb
sbb
ss
daa
mov
pop
mov
enter
jge
xchg
cmp
pop
pushf
test
push
pop
dec
xchg
mov
dec
fildll
sub
stc
adc
cmp
jbe
frstor
rolb
mov
cmpsl
psrlq
or
or
push
movsl
into
pop
ror
or
shl
jmp
test
sub
lods
mov
mov
sbb
xor
es
cwtl
and
sub
mov
xchg
mov
sbb
push
or
in
dec
push
mov
pop
sub
into
sbbl
cs
insb
xor
xchg
push
imul
adc
xchg
ljmp
andb
sbbl
xor
push
push
mov
dec
cmpsb
ret
mov
cmpsl
lret
cmp
xor
xchg
ja
clc
push
lret
fnstcw
fidivl
mov
jae
cmovg
loopne
and
push
sub
mov
pop
in
call
mov
push
add
sub
lahf
rorl
ret
sbb
pop
ds
lods
mov
mov
cmpsb
pop
repnz
jl
mov
std
addr16
divl
cli
shl
sbb
sbb
sub
out
add
adc
mov
xor
inc
mov
ret
cmp
mov
js
sub
cmp
pushl
es
aas
push
xor
out
cmp
cmp
xchg
and
into
imul
inc
movsl
call
or
and
mov
hlt
addr16
inc
cli
outsb
into
mov
mull
jno
je
shll
in
clc
test
aad
mov
push
and
and
pop
popa
pop
sub
sub
or
ja
push
mov
jns
in
jnp
dec
pop
xchg
movsl
in
imul
aam
ss
test
mov
iret
inc
lock
lods
xor
jmp
sbbl
adc
aad
or
aad
mov
dec
mov
dec
shrb
push
sub
jmp
mov
hlt
sub
xchg
and
in
in
lock
sahf
bound
shll
sbb
loope
iret
subb
jl
mov
add
dec
jne
scas
push
adc
adc
dec
push
outsb
inc
fcomps
jge
jae
jecxz
xor
jmp
lds
loope
adc
mov
fdivrl
es
ja
dec
mov
popa
fcoml
mov
clc
jo
int3
popf
sub
lods
lds
movb
adc
or
fisubrs
sub
add
pop
sahf
push
xor
jno
movsb
les
mov
scas
ja
mov
mov
mov
lcall
mov
scas
out
inc
fcompl
fwait
icebp
sub
sbb
stos
mov
xchg
ja
enter
mov
stos
mov
jmp
rcrl
xor
test
add
pop
pop
jns
mov
scas
stos
test
and
or
scas
push
inc
fdiv
daa
leave
aas
in
push
xlat
dec
cmp
mov
cwtl
jp
int3
push
popa
mov
mov
andb
int3
psadbw
xor
push
fdivp
xchg
mov
adc
add
call
push
push
jmp
movsl
dec
jo
aad
sub
fldenv
inc
add
or
dec
sahf
lcall
das
cmp
sub
mov
inc
inc
test
cmpsb
xor
int
and
stos
dec
lods
mov
xor
push
mov
aam
adc
mov
and
fbstp
cmp
inc
pop
out
popa
sahf
cs
das
pushf
mov
call
mov
mov
cld
sbb
call
mov
jnp
leave
push
int
sub
mov
pop
insb
inc
arpl
inc
push
mov
push
frstor
lods
stc
leave
xchg
lods
cli
fidivrl
int
sbb
fwait
and
inc
pop
insb
lock
cmpsl
lds
mov
ficompl
in
rcrb
xchg
leave
xor
ret
pop
movnti
ss
pop
clc
adc
or
fldenv
cmc
mov
arpl
push
and
mov
pusha
neg
cmc
sbb
pusha
scas
cmp
loope
shlb
mov
fcomi
cmpsb
movsb
xor
stc
mov
bound
mov
stos
std
fstpt
sbbb
leave
test
sub
mov
or
ficompl
mov
inc
int3
mov
push
mov
cmp
xchg
add
lret
sahf
sub
outsl
and
stos
das
movups
xlat
or
mov
popa
inc
test
sbb
out
mov
scas
scas
and
iret
and
insb
popf
pop
inc
xor
inc
imul
xor
test
sbb
fwait
movsb
test
and
divb
shlb
jecxz
sbb
inc
into
push
int3
jbe
cld
inc
and
push
mov
add
flds
adc
adc
test
insl
repnz
jo
inc
cli
shl
sub
add
push
inc
or
sub
mov
std
xor
push
js
cwtl
popa
push
adc
jg
and
cmp
jb
jae
leave
mov
and
sub
xor
or
jmp
add
test
int
mov
push
shrb
testl
inc
daa
icebp
data16
or
jp
shl
push
push
scas
pop
cmp
push
sub
dec
mov
loopne
in
loopne
push
call
mov
stc
pop
xchg
mov
test
gs
cmp
aad
jmp
adc
imul
ja
push
cmpsb
pop
mov
icebp
lea
jl
mov
cs
mov
add
mov
pop
cmpsb
sbb
dec
lret
jns
insb
loopne
lahf
jb
push
mov
dec
mov
cmp
sub
pop
insl
ss
pusha
in
xchg
mov
sbb
pop
cmp
and
push
test
add
iret
jbe
addb
out
iret
popf
ret
lock
push
and
adc
inc
xlat
and
jge
push
subb
mov
fadd
pop
xor
sub
in
mov
test
xlat
or
insb
clc
test
mov
sub
sbb
sub
xchg
xor
adc
call
aam
sahf
clc
shlb
adc
xor
and
and
sub
dec
pop
hlt
jb
inc
test
inc
jnp
xchg
es
xchg
pop
mov
cmpsb
out
movsb
or
int3
or
cmp
push
call
mov
outsl
sti
mov
add
enter
mov
ret
hlt
xchg
fsubrs
push
adc
xchg
xor
pusha
nop
inc
popf
dec
inc
cli
dec
cli
cmp
popf
fcomip
iret
test
ljmp
pusha
or
push
int3
xchg
sub
push
cltd
pop
xchg
xchg
sub
adc
pop
notb
test
arpl
xor
mov
movsl
data16
xlat
dec
repz
int3
ss
insl
jle
jl
ja
mov
mov
mov
iret
idivl
or
or
pop
in
js
sub
pop
cwtl
mov
cli
shrl
call
add
adc
ror
insl
push
push
rolb
and
out
test
leave
xchg
lods
cmp
aaa
lods
jecxz
test
cmp
mov
stos
jns
inc
xlat
cmp
in
pop
cmc
sbb
sti
jle
sub
jp
fs
das
bnd
ds
loopne
adc
push
jns
inc
ret
push
ljmp
out
popa
sbb
addb
push
or
push
ret
jl
jl
push
loopne
scas
fisubl
das
or
adc
sub
int3
xchg
imul
aam
fiadds
add
cwtl
movsb
imul
jns
test
ror
jnp
mov
or
cmp
lock
scas
nop
jno
repnz
pop
xor
outsl
mov
pop
shlb
stos
or
aam
lret
in
subl
jl
or
push
sbb
addr16
pop
repz
dec
jg
lahf
out
mov
mov
adc
xchg
jle
lret
inc
cmpsl
adc
cwtl
pop
push
test
push
unpckhps
stos
fidivl
xor
inc
sti
loopne
xchg
adc
sub
lea
inc
mov
and
inc
cmpsb
jmp
mov
adc
pusha
testl
dec
sete
test
xlat
std
pop
cmp
sub
loope
mov
xchg
movsl
cmp
and
ret
arpl
fnsave
outsb
loope
or
shr
mov
loopne
sahf
adc
loop
clc
sbb
jge
sub
test
lret
or
sub
xchg
sub
ret
mov
mov
sub
imul
mov
jno
ret
inc
or
pushl
dec
dec
or
xchg
jae
loopne
add
sub
aaa
mov
mov
shl
jae
shll
sbb
mov
add
rorl
and
mov
test
jmp
or
movsl
fisubs
sub
push
xor
ss
outsl
inc
inc
imul
pop
mov
rcrb
mov
push
mov
mov
or
inc
add
mov
xor
inc
fsubrs
pop
pop
rcr
aad
mov
call
mov
repnz
xchg
test
out
lock
pop
aad
lret
mov
cld
inc
sbb
cmp
cmpsl
inc
mov
jg
inc
sub
dec
xor
cmp
mov
adc
mov
xchg
adc
adc
push
mov
ss
jmp
or
aaa
sub
icebp
adc
push
lcall
mov
iret
jg
enter
xor
adc
or
pop
cli
jae
push
imul
subb
repz
daa
shlb
push
inc
sbb
xchg
shrl
testb
jb
outsl
add
pop
insb
out
adc
leave
int3
outsb
mov
test
sbb
scas
repnz
pop
ficoms
mov
adc
mov
aaa
popf
in
and
out
aaa
loopne
pusha
enter
inc
mov
ljmp
sbb
in
add
nop
add
cbtw
push
rcrb
lcall
pop
mov
adc
xchg
iret
mov
fcmovnbe
orl
sub
mov
pop
sahf
lods
mov
js
jmp
pop
leave
sub
dec
mov
cwtl
mov
aaa
in
jge
stos
lcall
cmp
add
sbb
lahf
mov
add
flds
stc
push
js
sahf
cmc
sub
xor
popf
pop
sub
xchg
insb
mov
push
inc
sbb
ljmp
xor
mov
daa
mov
push
data16
xchg
add
cmpsl
std
pop
dec
sub
in
mov
pop
dec
add
and
pop
aad
jnp
shll
jns
das
cs
imul
pop
dec
punpckldq
cmp
dec
xlat
sbbb
xor
add
aam
je
scas
loope
rcrb
xchg
adc
mov
push
aam
divl
iret
mov
js
pop
pop
int
mov
xor
fadds
pusha
out
cmc
adc
repz
dec
fildl
adc
std
aam
cs
xchg
jge
int3
xchg
mov
jle
stos
xchg
sti
outsl
push
sub
jp
push
nop
mov
pop
dec
fbstp
leave
int
inc
call
insb
pop
movl
xor
mov
sub
je
sub
dec
mov
dec
inc
xchg
sub
ss
mov
stc
sub
in
loopne
mov
movsb
in
cmp
adc
cmp
ja
push
inc
in
xchg
bound
mov
and
daa
dec
mov
addr16
sub
cmp
inc
jecxz
ljmp
mov
cmp
push
aaa
es
in
das
daa
mov
sub
inc
pop
pop
sub
mov
pop
inc
pop
mov
jbe
mov
push
inc
pop
cltd
bound
pop
iret
adc
xor
fbld
adcl
mov
adc
xchg
notl
push
lretw
cld
xchg
dec
aad
popl
or
dec
fisttps
fmul
pop
call
scas
mov
sahf
repnz
out
aad
sbb
pop
jge
mov
cmp
mov
outsb
mov
aam
push
add
fdivs
aam
clc
add
out
or
insb
mov
jge
imul
mov
mov
mov
aaa
mov
jecxz
adc
lds
popa
stos
insl
orb
jg
xlat
cwtl
jno
jl
mov
fists
clc
aad
in
inc
in
push
in
sbb
mov
call
mov
cmp
jge
add
mov
adc
sbbl
cmp
pop
xchg
push
sbb
decl
dec
in
out
mov
cmpl
jle
loop
outsl
shr
mov
int
dec
jo
add
sarb
lret
or
xchg
xor
cmp
cmp
push
shll
mov
ljmp
jo
fdivl
popl
cmc
sarl
push
mov
int3
arpl
and
xchg
sbb
push
xor
lods
ret
or
shr
and
imul
sub
pop
adc
lret
fidivs
adc
test
lcall
jl
mov
pop
dec
jge
cltd
sahf
and
ret
xchg
mov
dec
lea
test
call
lahf
mov
pop
fisubl
gs
test
test
pop
and
jle
rcr
ret
mov
push
push
push
lods
ja
mov
loop
sub
lods
fldcw
sahf
dec
rclb
fiadds
test
fisttps
outsl
ret
shrb
xchg
xchg
in
push
sub
cmp
das
test
push
rorl
jmp
inc
pop
inc
lock
fisttpll
sub
add
sbb
lret
jnp
roll
stos
pop
cmpsl
inc
adc
stos
ret
repz
mov
cmpsb
and
in
and
and
test
addr16
xchg
dec
jbe
fucomi
mov
data16
outsl
movsl
repnz
adc
sub
jg
cmp
scas
movsb
mov
jno
jmp
dec
and
or
mov
scas
mov
pop
outsb
jmp
shll
ret
lock
movsl
sub
mov
roll
stos
mov
lahf
ss
fldln2
test
lods
sub
inc
lret
pop
and
pop
shlb
push
imul
push
aas
nop
ss
loopne
push
imul
stc
push
or
xlat
cmc
inc
negl
dec
pop
daa
in
mov
pop
adc
addr16
dec
sbb
pop
imul
pusha
les
test
into
pop
imul
mov
mov
nop
je
in
fwait
mov
icebp
cmp
add
add
push
or
lcall
xor
adc
xor
jp
mov
add
cmpsb
xchg
dec
adc
fstpt
rolb
clc
and
mov
lock
pop
cmc
mov
mov
je
subl
popl
pop
int
inc
mov
das
push
int3
jo
add
adc
adc
xchg
dec
add
xor
aas
mov
mov
les
movsb
xchg
pop
xor
mov
xchg
sub
enter
add
mov
int3
push
lret
sbb
sti
and
ret
and
jbe
repnz
sub
sub
out
pushl
js
lods
xchg
jbe
jmp
or
andl
pop
inc
xchg
push
push
cltd
sti
or
ds
sub
aas
jle
sub
dec
imul
mov
adc
ret
xchg
jb
mov
rorb
inc
or
adc
dec
xor
in
nop
push
dec
pop
bound
loop
outsb
leave
testl
rcll
pusha
fcmovne
mov
jbe
add
jl
push
lock
aas
repnz
cmp
scas
push
or
cltd
lods
js
add
test
int
testb
shrb
fstpt
imul
addr16
push
int3
dec
aad
cltd
or
pop
cli
loopne
ss
sbbl
shlb
bound
mov
sbb
push
je
pop
aam
sub
adc
loop
ds
test
fnstenv
pop
sahf
push
inc
repz
fxch
xor
int
jne
aas
push
je
add
fs
mov
out
lret
addb
icebp
pop
sbb
push
xchg
repnz
test
lods
mov
repz
leave
ja
stc
xor
and
sbb
les
mov
mulb
popf
xchg
iret
push
cmpl
sbb
gs
dec
iret
dec
jns
repnz
ss
dec
adc
cmp
push
ret
pop
je
lds
loope
fwait
push
subb
push
dec
adc
rcr
jne
notl
sub
mov
sub
insb
sti
popf
and
movsb
pop
add
mov
cmp
jecxz
movsl
push
and
dec
mov
adc
or
mov
mov
sub
cmp
lods
imul
pop
inc
jg
jae
insl
jnp
inc
sbb
push
shlb
test
cmp
outsb
movsw
ret
xchg
stc
js
push
xchg
adc
pop
mov
add
or
test
fsubrl
sbb
ret
add
out
cltd
pop
movsb
dec
repnz
and
cmp
cli
push
lods
jl
mov
jle
cmp
pop
xchg
dec
mov
lods
orl
mov
sahf
aaa
hlt
pop
lcall
lods
cli
loope
sub
adc
sub
loope
jmp
mov
dec
mov
mov
stos
sbb
push
ds
sbb
and
je
jbe
or
call
test
cmpsl
roll
jle
pop
inc
out
xchg
je
pop
es
movsl
xchg
sub
push
mov
inc
dec
cwtl
cmp
mov
push
mov
xor
mov
gs
mov
lds
mov
std
mov
in
aaa
ret
mov
dec
and
jle
dec
jo
or
in
cmpsl
push
in
leave
dec
cld
in
punpcklbw
movsl
test
popf
out
jnp
cli
lods
iret
psrld
aam
cmp
fdivrs
jbe
es
mov
xorb
sub
sbb
push
xchg
adc
add
scas
xchg
es
mov
mov
jmp
gs
mov
movd
rcrl
push
xchg
stc
js
jo
loopne
sbb
mov
dec
pinsrw
dec
push
xor
dec
aad
sub
add
push
or
xor
lods
js
pusha
jp
mov
addr16
lds
pusha
or
stos
sti
icebp
inc
aam
cli
adc
pop
aaa
and
leave
test
rclb
ret
mov
pusha
orb
loop
push
enter
or
sub
aas
push
sub
stos
jmp
clc
mov
popf
xor
bsr
cwtl
popf
push
push
lds
mov
jmp
lock
mov
pop
push
fisttps
xchg
outsl
mull
pop
ds
xchg
cli
test
bound
pop
inc
push
sub
inc
dec
xchg
push
lcall
arpl
dec
shrb
jge
out
fdivrl
push
mov
sbb
adc
xchg
inc
mov
jb
stc
popf
movsb
mov
jmp
andb
inc
fcomip
cwtl
test
aas
mov
leave
adc
xor
push
pushf
cli
test
mov
mov
push
xlat
and
add
cmp
insb
sbb
pop
or
adc
xchg
in
xor
pop
xchg
xor
jb
movsb
push
and
gs
inc
in
jp
mov
shrl
xor
sub
pop
in
xor
dec
fstpt
fidivrl
dec
out
aad
es
nop
call
pop
lock
push
stos
pop
in
push
inc
cwtl
inc
cmp
mov
cli
imul
pop
pop
insl
paddq
mov
jae
mov
popf
add
test
add
popa
cmp
mov
mov
mov
fs
loopew
push
int3
arpl
mov
mov
pop
xchg
ja
lret
jmp
push
xchg
imul
mov
aam
adc
lcall
gs
dec
pop
cwtl
scas
adc
push
lods
lahf
neg
pusha
addr16
sbb
ss
xor
rcrl
in
stos
cmp
cs
pop
xor
outsl
dec
add
dec
nop
push
loopne
cmp
mov
lock
and
cmp
push
inc
int
jae
shlb
mov
xor
imul
or
cli
stos
sbb
iret
xor
push
pusha
inc
or
int3
lret
push
add
andb
inc
in
push
xchg
cld
pop
lcall
insw
pushf
add
cmp
test
mov
or
inc
popa
sbb
subb
xchg
cmp
jg
lock
mov
cwtl
mov
cmp
test
sbb
xchg
pop
call
pop
jl
lods
mov
inc
in
iret
xchg
scas
inc
xor
in
xchg
inc
pop
push
lahf
jno
sbbl
and
lods
test
sbb
xchg
dec
arpl
add
add
or
clc
pop
movsl
push
xchg
pop
lahf
cmp
add
test
jns
in
scas
push
inc
loop
fidivl
daa
jge
inc
mov
or
cli
or
mov
mov
lock
sahf
stos
or
sbb
xor
sub
ja
icebp
mov
and
test
mov
xor
adc
mov
jp
and
push
push
ljmp
cli
imul
xor
xchg
xchg
and
ja
in
adc
sbb
or
pop
cmc
jnp
sub
iret
std
cwtl
push
push
add
iret
data16
call
sahf
stos
outsb
mov
push
popf
out
ret
pop
or
pusha
dec
sbb
loopne
inc
push
jmp
cmc
adc
loopne
add
cltd
xchg
je
adc
pop
sbb
add
push
mov
inc
lea
inc
imul
addr16
xchg
ljmp
pop
and
aas
mov
xlat
outsl
shrl
test
scas
sub
out
rcrb
or
fmuls
fidivrl
idivb
xchg
add
pusha
mov
dec
jae
ja
mov
les
lods
inc
push
push
mov
xchg
pop
addr16
xor
loopne
mov
fwait
into
fwait
pop
sbb
sbb
enter
leave
pusha
cmpsl
sub
inc
divl
inc
sub
imul
sub
outsl
cmpsl
fs
jge
scas
ljmp
push
mov
sbb
outsl
add
loope
es
je
imul
dec
ja
xor
xor
xor
mov
or
cmpsl
mov
or
incl
int3
mov
outsb
xor
mov
add
cmp
jle
je
pop
lds
adc
stos
inc
repnz
fucom
and
mov
dec
xor
lock
cmp
jne
cltd
fcoml
aas
mov
je
pushf
scas
ja
ficomps
xchg
rcrl
jp
test
gs
mov
incb
xor
cwtl
xor
jp
push
pushf
xor
pop
mov
lahf
xor
sbb
popa
pop
lret
mov
jo
xchg
or
stos
jl
imul
jne
xlat
xor
lds
sahf
mov
fdivl
and
pop
imul
sti
mov
xchg
inc
ss
cld
out
jge
es
lahf
push
ds
movsl
inc
push
sub
into
pop
jp
sbb
sbb
or
stos
sahf
jmp
sarb
aad
scas
jbe
ja
nop
push
adc
or
leave
ss
mov
adcb
cmp
pop
dec
cmp
incb
sub
cmp
sbbb
jge
in
daa
lahf
sbb
cltd
data16
test
dec
cmc
xlat
jmp
outsl
cmp
mov
pop
shlb
jl
cmp
push
dec
popa
inc
add
push
push
push
scas
jns
dec
imul
js
dec
dec
add
mov
push
cli
test
inc
movsl
mov
mov
insb
pushf
push
jo
hlt
ficompl
mov
inc
sti
clc
and
and
mov
shrb
cli
pop
in
scas
sbb
and
pop
jmp
adc
in
stos
cvtps2pi
pop
add
jge
and
and
mov
lods
mov
or
cmp
or
rcrb
mov
in
les
insl
and
lahf
cmp
jg
pushf
imul
popa
scas
mov
sub
cmc
sbb
cmp
cmp
movsl
inc
xor
xchg
xchg
push
leave
pusha
xorl
sbb
jmp
mov
mov
cmp
mov
sub
and
aas
sbb
mov
sbb
cld
push
insb
push
cmp
mov
mov
push
jbe
mov
jnp
or
fmul
andl
add
outsl
jb
decl
or
cltd
fcoml
dec
loopne
jne
addl
jle
cmp
xchg
and
add
mov
imul
mov
xchg
adc
mov
mov
or
cmp
lock
cmp
out
xor
aam
flds
mov
daa
pop
sbb
movsl
mov
xchg
push
cs
pop
adc
test
leave
aaa
and
sarb
out
mov
lahf
icebp
adc
xor
inc
xor
sbb
xor
pop
iret
jo
lds
adc
xor
les
loop
repz
pop
imul
loopne
outsb
out
nop
mov
shrb
xchg
pop
mov
add
and
jnp
push
pushf
aas
push
mov
les
lahf
adc
sub
inc
pushf
dec
dec
shr
cmp
mov
mov
cmpsb
mov
lock
jl
es
in
hlt
fbstp
jae
push
stos
int3
gs
rcrb
imul
adc
add
sbb
sarl
test
inc
and
bound
daa
jmp
aas
fildll
loope
mov
cmpsl
mov
sbb
enter
mov
inc
sbb
mov
cmp
mov
xchg
imul
mov
not
mov
popl
fs
in
iret
mov
sub
es
sub
enter
jno
jbe
imul
mov
mov
mov
aaa
push
adc
push
sahf
orb
or
and
xchg
mov
scas
mov
jae
test
fisttpll
fwait
clc
xchg
xorb
cli
adc
loopne
pop
outsb
push
add
ja
xor
jp
inc
sbb
les
ds
inc
rorb
stc
sbb
lret
loop
sti
stc
inc
sub
out
xor
arpl
sbb
inc
mov
vpsadbw
mov
mov
mov
jge
and
jp
mov
or
mov
std
xchg
pop
out
outsb
lea
das
sub
lret
xchg
pop
push
insb
inc
sti
dec
lcall
aad
iret
movsl
clc
sbb
test
add
stos
xchg
cmp
testb
mov
fldl
dec
out
jno
in
dec
pop
cwtl
mov
sbb
repnz
loope
inc
sahf
mov
mov
outsb
fs
adc
popf
cltd
test
mov
lds
adcl
mov
pop
mov
cbtw
mov
xchg
and
cwtl
mov
mov
or
les
mov
mov
inc
stc
andb
push
idivb
ds
inc
bound
lock
pop
repz
arpl
jp
pop
or
lea
aam
push
inc
out
stc
mov
sahf
test
or
mov
aam
jae
gs
jnp
or
frstor
clc
or
add
jl
in
adc
sahf
arpl
leave
cmp
daa
inc
sub
push
inc
aad
dec
popf
cltd
cmpsb
inc
pop
jecxz
call
bound
or
mov
icebp
and
or
inc
add
mov
xchg
pop
cmp
andl
gs
scas
cmp
xlat
scas
push
paddw
aaa
int3
xor
testb
cmp
orl
jbe
xor
xlat
push
inc
ret
lock
lea
out
rol
je
xchg
imul
push
push
xlat
shlb
mov
xchg
ljmp
push
mov
xlat
fsubrp
adc
jecxz
mov
and
ja
test
sbb
enter
mov
daa
xchg
cmp
ficomps
mov
loopne
xlat
sbb
in
pop
mov
and
repz
stos
cmp
or
test
in
cli
leave
push
popf
out
aas
js
xor
cld
lcall
in
xchg
lret
lcall
rcll
jb
or
test
loopne
sub
leave
mov
or
in
lret
mov
mov
pop
mov
stc
or
aad
popa
dec
jae
mov
scas
and
dec
mov
cmp
add
pop
mov
fwait
inc
mov
fdiv
ljmp
mov
imul
jl
sbb
jg
pusha
repz
test
and
or
mov
dec
push
popf
jg
adc
test
test
mov
inc
aas
and
ljmp
dec
xchg
fsubrl
outsb
lds
adc
data16
fwait
xchg
pusha
test
mov
ret
std
test
xchg
repz
mov
sub
mov
ret
or
sub
dec
inc
cmp
cmpsl
data16
outsl
mov
stos
ja
out
cld
xor
xor
xor
push
jb
xchg
bndstx
clc
in
mov
insb
rolb
lcall
cs
loope
mov
mov
xor
testl
lcall
aas
ja
and
test
jae
rorl
je
adc
dec
pop
cs
inc
push
hlt
sahf
mov
adc
ss
add
mov
pop
es
mov
aaa
bound
adc
dec
out
bound
xor
faddl
lahf
xor
imul
pushf
or
into
imul
xor
in
sbb
out
rcrl
pop
test
fisttpl
in
bound
mov
inc
imul
jb
jmp
orl
sbb
xor
mov
outsl
ret
hlt
cmp
sahf
dec
xor
push
test
adc
cmpsb
cmp
push
fisttpl
ror
jns
imul
call
in
fistpl
adc
sub
push
into
xchg
pop
or
sub
loope
pop
push
lods
push
cmpb
sbb
jl
jmp
sbb
mov
stc
dec
jae
dec
icebp
dec
cmp
add
fcomps
or
scas
dec
add
lods
mov
jno,pn
push
out
data16
lds
mov
or
imul
xor
ret
outsl
fimuls
sub
sub
addr16
jne
adc
jo
scas
inc
xor
lods
data16
xlat
xchg
dec
pop
mov
mov
aas
push
cmp
imul
sub
xchg
pop
xor
cmp
out
mov
out
lock
dec
pop
and
lcall
arpl
int
cmp
adc
mov
lahf
ds
ret
jmp
or
cs
outsb
jp
popl
mov
or
jl
mov
sbb
cmp
push
ja
jmp
mov
imul
add
loop
aam
xchg
xchg
pop
cmp
jle
and
jne
jl
mov
add
adc
mov
pop
dec
insb
js
or
pusha
pop
out
mov
enter
xchg
loopne
pop
fisttpl
loope
pop
and
mov
jae
test
enter
jmp
inc
jns
jb
pusha
push
add
push
sbb
jg
ret
cmp
xchg
pop
scas
ss
arpl
fs
pop
inc
push
imul
mov
fidivrl
iret
lret
inc
xor
gs
sub
clc
scas
inc
ljmp
mov
mov
inc
lods
mov
pop
jns
daa
sub
pop
loopne
mov
mov
sti
mov
cld
test
adc
loop
push
sbb
out
push
dec
sub
in
loop
cmpsl
shrl
enter
mov
int3
jnp
hlt
mov
lret
mov
dec
mov
fst
popf
mov
decl
xor
lods
aam
fistpll
addr16
xchg
mov
xlat
enter
arpl
pop
adc
aam
or
movsb
xchg
inc
inc
lret
and
sub
adc
sbb
mov
loope
inc
cld
push
in
pop
add
addr16
les
mov
jns
add
xlat
fwait
push
js
clc
push
xchg
or
imul
popa
repnz
add
sub
in
sbb
dec
clc
fsubrs
gs
sbb
stos
dec
int3
xchg
arpl
push
in
xor
push
jl
mov
xchg
arpl
test
pop
dec
mov
jle
pop
mov
daa
cmp
push
push
je
js
fs
and
inc
stc
xchg
lahf
or
aad
add
jp
jecxz
cli
test
hlt
inc
mull
push
or
or
and
aam
or
jae
lods
insl
aam
mov
xchg
or
inc
fstpl
mov
add
xor
aam
push
fcomps
dec
sbb
fldz
loopne
and
cwtl
das
xchg
and
mov
aam
and
adc
addr16
xchg
add
sub
pop
mov
inc
call
jbe
pop
mov
xlat
test
aad
mov
lcall
pop
mov
ljmp
mov
cwtl
test
xchg
pop
mov
push
insl
mov
sahf
pop
inc
lods
cmpsb
fistl
lcall
popa
mov
addr16
rcrb
xor
cmc
fwait
and
or
loopne
sti
sbb
fnstenvs
lods
ret
stos
daa
dec
stos
loopne
popl
mov
push
jge
loope
lret
and
add
in
mov
aaa
insl
js
jmp
add
sbb
push
push
add
or
mov
test
mov
outsl
jmp
imul
scas
push
hlt
fmull
adc
ret
pop
or
outsl
jnp,pt
imul
xor
adc
xlat
imul
das
adc
ret
es
jae
jb
dec
add
lahf
lret
ja
movsl
sbb
shr
out
imul
xchg
es
fsubr
xchg
push
sbb
shlb
stos
lods
xchg
dec
lods
cwtl
inc
xor
sub
aaa
loopne
dec
aad
jge
daa
insb
loop
repz
lds
hlt
xchg
xor
add
adc
mov
rdpmc
or
mov
mov
clc
adcl
push
mov
dec
fildll
pop
xlat
cmp
dec
pop
mov
mov
dec
pop
pop
test
cwtl
jle
xor
mov
mov
popa
fcompl
xchg
dec
push
enter
div
mov
aad
sbb
mov
mov
sbb
push
add
jne
clc
bound
dec
shrl
inc
dec
pop
inc
pop
mov
dec
andl
sub
mov
call
mov
sub
jno
das
jnp
daa
stos
and
inc
arpl
fisttps
sarb
mov
sbb
jne
xor
out
sbb
mov
iret
jae
mov
mull
add
repnz
pop
xchg
mov
icebp
push
lret
cmp
js
loop
inc
loop
mov
mov
out
test
push
leave
jg
stos
inc
lds
leave
pusha
es
add
pop
jb
add
cmp
stos
imul
pop
jo
mov
aaa
lret
xchg
dec
xor
flds
stos
push
jbe
mov
inc
test
mov
loope
or
mov
adc
xchg
mov
xchg
sub
xchg
lret
int3
mov
push
jae
dec
sbb
lcall
dec
pusha
add
fdivs
lret
xor
hlt
hlt
std
add
jo
lods
xor
and
popl
sti
push
cs
and
lods
fsubrl
stos
daa
cli
pop
and
inc
mov
adc
shr
test
cmp
movb
lods
and
xor
and
mov
mov
mov
andl
jne
in
es
sub
stos
mov
push
adc
push
inc
push
out
xchg
adc
cmp
cmp
fs
ffreep
test
loope
and
add
inc
iret
in
xor
mov
jmp
push
loope
add
or
cmc
js
in
iret
pop
int
lret
push
and
adc
out
add
xchg
dec
out
stos
stos
inc
pop
mov
sbb
push
test
je
inc
or
jno
adc
pop
stc
sub
mov
mov
dec
negl
sbb
dec
dec
ss
cmc
imul
and
cmp
jl
xor
pop
addr16
mov
dec
mov
scas
mov
fs
xchg
and
or
js
lods
inc
mov
loop
test
imul
cld
pop
mov
sbb
mov
loopne
dec
jle
jmp
loope
shlb
mov
test
enter
push
cmc
dec
arpl
gs
jl
xor
popf
jmp
sub
dec
dec
setp
shll
shll
out
std
lds
cmc
push
mov
jmp
xor
inc
xchg
mov
rcrl
push
pop
or
mov
mov
sbb
mov
jge
pop
xor
inc
adc
popa
push
pop
inc
pushf
test
push
popf
insb
fs
xor
scas
stos
inc
push
pop
jge
jge
cmc
xor
es
sti
jbe
leave
sahf
jne
and
outsl
add
lcall
or
loop
xchg
ds
fsubrl
dec
arpl
test
mov
add
out
xor
sbb
adc
shll
aaa
sbb
repnz
jg
sbb
push
inc
icebp
sbbb
imul
rolb
rolb
pop
fstl
inc
push
nop
xorb
xor
inc
cwtl
jmp
push
pop
mov
xor
jge
sahf
mov
fwait
scas
adc
movsl
jl
pop
mov
add
or
fbld
scas
jle
loopne
push
push
pushf
xor
das
les
imul
adc
lar
aas
lret
rcl
cmp
or
mov
and
inc
testl
or
push
popa
mov
das
push
pop
rcr
xchg
and
and
je
rclb
jns
repnz
push
jo
ja
leave
dec
lods
jo
or
cmp
add
xchg
das
insb
cmc
sbb
fwait
cmp
cmpb
and
lock
scas
out
add
rclb
push
or
cwtl
add
clc
nop
mov
jecxz,pn
nop
cmp
cmp
pop
iret
inc
pusha
rcrl
out
cmpsl
dec
sbb
jle
cwtl
clc
and
cmp
scas
call
push
mov
mov
mov
je
xchg
sub
cmp
pop
ds
sbb
enter
xchg
pop
dec
jecxz
fbstp
ret
mov
adc
data16
mov
cmp
inc
mov
test
or
pop
xor
cmp
fisttpl
sbb
mov
jae
inc
int
xchg
mov
xor
outsl
sbb
std
inc
lret
add
loopne
fwait
push
jne
jbe
aam
xlat
es
inc
mov
dec
in
imul
addr16
outsb
pop
xor
in
repnz
fsubrl
shl
mov
arpl
and
and
call
int3
cld
inc
sbb
popa
add
xor
cmp
leave
cmpsb
xlat
dec
mov
mov
mov
pop
mov
or
push
or
popa
ds
adc
xchg
shll
adc
xor
outsl
cmp
xor
mov
push
out
pusha
nop
imul
xchg
mov
lds
fdivl
ja
xchg
xchg
lods
icebp
decb
xchg
jnp
adc
xchg
jp
std
mov
mov
xchg
cltd
push
test
mov
and
jne
add
ss
cs
dec
xchg
test
push
icebp
popw
dec
add
js
in
xchg
sahf
and
loope
jecxz
pop
fld
lods
ret
insl
test
and
shll
mov
jmp
add
xor
jae
push
daa
mov
add
mov
add
rol
adc
out
aam
or
arpl
leave
xchg
arpl
inc
scas
lods
subl
lret
inc
push
pop
dec
js
hlt
push
inc
data16
mov
pop
outsb
mov
mov
or
jae
out
outsb
test
push
dec
setle
sahf
shrb
jo
xchg
insl
in
cld
push
out
clc
mov
jbe
push
or
shrl
shlb
daa
hlt
icebp
mov
les
jns
adc
lret
jg
jno
cmp
dec
lds
andl
push
mov
dec
inc
aas
insb
pop
cmp
jmp
mov
popa
mov
fsubrs
lods
inc
xchg
mov
xor
dec
jno
or
xchg
leave
sub
add
sbb
fbld
sub
mov
lock
dec
sub
inc
cmp
les
push
lods
sub
xchg
stos
ret
xor
cmc
or
movsl
jp
mov
cltd
xor
and
xor
or
mov
jnp
imul
les
push
imul
rclb
push
movsl
pusha
mov
xor
or
sub
sbb
inc
jecxz
push
adc
ss
pop
rcr
bnd
mov
pop
shlb
push
inc
and
pop
out
das
enter
icebp
ss
data16
pop
insb
sti
xchg
pop
sub
sub
scas
in
and
lret
lret
lock
repnz
stos
inc
xchg
fucomp
outsb
add
xor
je
popa
fidivrl
xlat
shlb
sbb
mov
mov
stos
movsb
sub
mov
xchg
xor
mov
adc
pop
mov
adc
and
les
adc
jne
lock
ds
movsl
scas
xchg
mov
cmp
fistps
mov
mov
insl
jge
ljmp
pop
sbb
or
pusha
cmp
adc
repnz
mov
jno
add
sbb
and
xchg
sub
ret
inc
dec
in
clc
xor
xorl
ret
adc
ret
add
jg
ds
xchg
push
iret
decb
xor
pop
cmp
dec
fldcw
push
cs
fnsave
adc
sbb
das
dec
pop
sub
pop
mov
pop
repnz
scas
mov
add
xor
sbb
push
and
pusha
andl
int3
lahf
xor
and
cli
adc
mov
xchg
clc
mov
add
push
ss
sub
lret
xor
or
cmp
popf
cld
mov
out
fs
xchg
les
daa
mov
pop
mov
cltd
sbb
add
sub
js
bound
mov
jbe
scas
push
pop
or
mov
sbb
arpl
xchg
lods
sbb
jbe
loopne
mov
cmp
xchg
leave
adcb
pop
fwait
pop
add
jmp
rcr
mov
push
in
daa
adc
or
sbb
pop
fisubs
pop
dec
mov
cmp
cmp
into
test
add
jmp
xlat
pop
sbb
fistpll
fwait
or
enter
mov
inc
push
mov
sbb
pop
or
cmc
and
les
out
pop
stos
mov
idivb
lea
cmp
jge
sbb
lret
enter
cltd
std
sbb
mov
int3
cli
add
loopne
lock
aad
mov
ds
pop
outsb
inc
jge
or
lret
and
or
lret
es
xorl
rcl
xchg
shl
iret
jno
pop
lret
xchg
fxam
mov
popf
movsb
out
and
lds
and
push
mov
les
mov
sbb
xor
fcoms
into
movsl
dec
stc
mov
add
jne
sbb
es
cli
xchg
mov
in
jmp
scas
sbb
mov
pusha
cmp
inc
xchg
les
lahf
aam
or
out
out
inc
mov
jge
jb
cltd
mov
xor
and
mov
jbe
xor
outsl
xchg
test
mov
inc
mov
jns
insl
insb
decl
xorl
sub
mov
ljmp
inc
or
pop
xlat
mov
cld
sti
mov
mov
adc
sub
sub
cmc
xchg
jg
enter
in
add
aaa
gs
and
ja
add
repnz
out
or
mov
push
movsb
repz
push
ret
lods
lods
dec
pop
mov
cmp
jbe
ficomps
push
xlat
and
pop
insb
mov
sbb
jne
mov
scas
aas
lods
shl
mov
outsl
adc
xor
cmpsb
repz
test
data16
jecxz
mov
xchg
mov
xchg
inc
or
jp
mov
mov
mov
mov
ljmp
inc
int3
outsl
daa
mov
or
out
and
call
lock
negl
sub
or
in
xchg
mov
lret
adcb
scas
rorb
ja
mov
mov
lods
inc
ljmp
mov
aam
fnstsw
stc
or
aaa
js
cwtl
xor
push
mov
jge
test
mov
sbb
sub
fwait
fs
cmc
inc
mov
add
sbb
in
mov
lea
lea
in
and
lea
lret
mov
hlt
out
push
cmp
sbb
adc
lods
lahf
xor
test
push
or
mov
inc
aam
push
push
fwait
mov
pop
out
int
aam
mov
js
mov
jnp,pt
add
push
push
push
fisubrs
cmp
adc
ss
cmpsl
adc
mov
xchg
daa
fists
lods
or
pop
mov
sbb
sbb
cli
or
mov
fidivs
repz
pop
lods
call
call
leave
sbb
cld
lea
mov
stos
push
shll
jo
inc
dec
cmp
scas
ljmp
pslld
inc
xchg
bound
sbb
or
daa
adc
push
les
out
pop
cmp
xchg
mov
or
add
adcb
roll
mov
push
jb
xchg
pop
dec
enter
lcall
pop
js
les
xchg
lahf
mov
cmpsb
lds
jp
dec
cmp
sbb
jnp
xor
fdivr
jge
add
scas
clc
loope
inc
fwait
addl
outsb
sbb
xor
stos
xor
imul
das
or
insl
push
lcall
cwtl
xor
adcb
xchg
mov
mov
cltd
push
out
and
in
icebp
outsb
or
cmp
mov
and
call
fnsave
xchg
int3
and
pop
pop
push
or
jne
inc
cmpsl
loope
rolb
incb
jg
addr16
mov
shrb
adc
lret
xchg
popa
inc
push
ret
cmc
inc
inc
orb
add
and
xor
jo
xor
push
aaa
std
cltd
out
das
rol
xchg
andb
mov
add
mov
xor
fstl
cltd
jp
xchg
push
nop
gs
cmp
scas
add
test
dec
add
push
inc
sahf
sub
inc
mov
movl
out
add
pop
stos
icebp
mov
cmpsb
lret
movsl
cmp
jmp
iret
scas
icebp
mov
lret
clc
iret
push
push
out
mov
cmpsb
fdivrl
xchg
or
or
out
test
push
outsl
daa
and
mov
jns
sub
mov
jb
icebp
imul
in
xchg
mov
addr16
out
xlat
xchg
in
jge
mov
insl
adc
mov
jb
sub
test
test
mov
mov
sahf
push
push
pop
mov
lahf
test
lods
inc
jmp
fisubl
daa
addr16
pop
cmpsl
push
sub
rorb
jp
aaa
dec
std
mov
movl
fwait
mov
flds
pop
out
repnz
adc
xchg
lods
test
stos
daa
inc
cs
mov
leave
jns
xor
inc
dec
sbb
mov
pop
dec
pop
leave
cli
lret
setl
nop
mov
fcmovnu
fsubl
push
iret
add
jne
fwait
scas
add
pop
adc
scas
mov
xlat
sbbb
mov
xchg
cmc
clc
adc
test
sti
jo
cld
pop
mov
mov
and
outsl
jnp
es
imul
dec
movsb
adc
pusha
mov
fstl
js
mov
add
mov
xor
cs
test
xlat
dec
out
mov
xchg
xor
insb
xor
call
and
mov
sbb
xlat
mov
or
ret
pop
ret
rol
adc
dec
pop
aaa
pop
xor
aaa
int
jae
test
push
arpl
mov
out
leave
push
outsl
push
xor
sbb
es
adc
adc
jns
enter
add
lcall
lcall
mov
or
push
movsl
or
stc
add
mov
jno
mov
outsl
cmp
imul
cmp
movsb
push
sub
dec
and
lret
adc
sbbl
aad
bound
adc
pop
cmp
sbb
insl
jl
pop
fbld
test
mov
outsb
subl
insl
jo
adc
enter
mov
stos
adc
imul
fcomip
aaa
cld
cwtl
or
lret
inc
add
out
js
mov
inc
gs
cli
jge
xor
insb
mov
loopne
pop
lret
push
lret
je
in
mov
imul
fwait
or
sti
shrl
jne
shlb
mov
adc
test
and
movsb
jb
and
test
jg
repnz
sub
mov
fdivl
or
jg
insl
stc
fbld
test
sbb
mov
push
mov
mov
adc
inc
arpl
aaa
pop
ss
dec
in
loope
hlt
cmp
xchg
xor
stos
cmp
xor
inc
add
jo
imul
int3
insl
mov
insl
rorb
addb
repz
cmpsl
dec
lret
inc
inc
cmp
lock
push
sub
inc
in
xchg
das
pusha
cmp
and
mov
jmp
add
pop
jbe
lds
xchg
lret
insl
ficomps
and
sahf
add
dec
insb
push
insb
sub
add
lods
push
sbb
call
inc
cmp
lock
add
es
es
subb
or
bound
fcoms
cmp
jmp
push
cmp
inc
data16
clc
gs
in
add
mov
leave
fs
or
adc
not
mov
push
or
mov
movsb
jge
mov
pop
cmp
xchg
popa
xchg
pop
push
mov
xor
lods
dec
xlat
lock
pushf
lods
clc
shlb
int
mov
out
or
in
sahf
scas
aaa
vpshaw
xchg
xchg
mov
dec
and
int3
dec
popa
cmp
popl
test
daa
fimull
inc
dec
mov
aam
xor
sub
lds
les
pop
shl
pop
ret
add
insl
cmp
mov
push
adc
popf
aaa
jbe
xor
pushf
ja
dec
xor
fbld
xchg
pop
sbb
lds
mov
test
lret
lock
push
push
jmp
or
addr16
push
jge
mov
push
dec
cmp
push
xchg
iret
out
cmpsl
lret
and
je
ds
jg
pop
stos
inc
pop
scas
and
jge
adc
dec
cltd
push
inc
repz
and
jmp
adc
xorl
add
out
or
sti
mov
lahf
mov
add
sub
mov
fisttpl
loop
xor
ret
gs
ret
mov
push
or
and
xchg
addr16
mov
cmp
in
shrl
inc
ret
insb
sub
jle
dec
mov
insl
jne
cmp
daa
and
sub
push
outsb
push
out
gs
lock
ret
inc
dec
cmp
mov
ja
repnz
add
stc
mov
mov
dec
out
mov
cmp
lcall
arpl
mov
pop
xchg
xchg
cmp
ds
mov
loope
jb
mov
sbb
push
jnp
xchg
adc
roll
icebp
adc
movsb
dec
jl
add
mov
lock
aas
movups
adc
outsl
loop
neg
add
pushf
cmpsl
dec
cs
sbb
int3
mov
dec
add
adc
les
lcall
and
cmp
into
xchg
mov
dec
jmp
popf
fnsave
push
imul
xor
int3
push
pop
xchg
jle
test
cmp
cmp
lcall
and
lret
mov
or
push
mov
dec
inc
fldenv
les
mov
outsl
ret
xchg
sub
xchg
vsqrtsd
ss
push
push
xchg
inc
dec
sti
test
loop
aam
xchg
adc
jno
in
lret
mov
xchg
pop
stc
jmp
mov
sub
fsub
call
ret
cmp
and
jb
and
inc
dec
data16
in
pop
add
ret
jbe
adc
pop
fwait
cwtl
xlat
lcall
cwtl
mov
mov
sarb
repnz
xor
sub
xchg
inc
arpl
hlt
jge
mov
push
add
repz
push
sbb
pop
dec
clc
dec
es
cmp
pop
stos
or
sbb
jo
mov
jg
js
jbe
je
pop
daa
inc
jecxz
out
outsb
push
jmp
mov
lods
mov
enter
fbstp
mov
std
inc
lock
inc
icebp
xor
push
in
notb
cmpsl
fcmovnb
je
lret
out
fbstp
cltd
cmc
dec
and
mov
sub
push
inc
pusha
inc
stos
and
subb
mov
add
jle
push
daa
push
pop
or
or
sub
loop
jg
add
imul
out
aam
dec
rcll
jg
test
xor
stos
add
icebp
mov
push
repz
outsb
pushf
sbb
and
inc
test
cmp
xchg
dec
aas
sbb
jne
repz
decl
lret
popa
jecxz
es
sbbl
lods
add
sbb
adc
and
lock
imul
mov
xlat
repz
or
push
push
sub
or
jecxz
cmp
lods
push
push
adc
sub
lret
dec
pop
xor
sbb
xchg
stc
into
xor
or
addr16
gs
outsb
dec
xchg
jle
in
hlt
dec
aaa
aaa
lea
mov
sahf
addr16
or
call
mov
mov
rcr
pop
xchg
xchg
lods
push
hlt
into
insl
loopne
adcl
push
jne
xchg
mov
insl
bound
add
mov
adc
xchg
shrl
in
shl
ffree
jge
mov
cmpsb
hlt
stos
mov
mov
sbb
iret
insl
dec
dec
mov
push
leave
jg
xlat
outsb
sub
sub
jno
and
xor
cmp
scas
mov
cmp
stos
lock
mov
insb
hlt
push
adc
fidivrl
lahf
xor
mov
dec
jmp
cmp
lret
cld
lds
addr16
das
cmp
iret
decb
cmp
shl
repz
push
outsl
popf
stc
int
jg
push
das
push
sub
leave
lods
mov
jne
jb
fistl
loope
jno
fmulp
pop
mov
xchg
gs
mov
lcall
pop
xchg
incb
lods
dec
cwtl
insb
ror
jp
rcll
or
xlat
jecxz
or
lret
inc
or
cli
insb
test
hlt
push
inc
in
xchg
inc
jnp
jb
or
data16
mov
mov
idivl
insl
popl
jo
mov
adc
push
mov
mov
push
out
aas
push
jno
notl
xchg
jl
jg
push
mov
dec
out
and
cmp
xchg
inc
pop
repnz
scas
push
xchg
push
push
adc
push
test
call
bnd
and
pop
mov
lret
inc
sbb
pop
adc
lret
mov
stos
shl
loop
cmp
fnstenv
or
outsb
jnp,pn
cmp
jno
xlat
jae
inc
or
sbb
mov
dec
push
test
je
dec
das
test
or
repnz
xorb
dec
inc
mov
fdivs
pop
ja
jns
insb
cmp
movsl
push
cmp
sub
mov
or
jl
add
add
loop
es
fimuls
pop
shll
cmp
in
scas
inc
push
xchg
sbbb
jp
mov
fisubs
test
call
cmpsb
bnd
das
enter
adc
in
mov
lea
or
js
js
mov
insl
cltd
mov
lahf
mov
inc
inc
fnstenv
pop
notb
into
lods
cmp
fwait
cltd
jl
push
xor
shl
sub
pop
add
js
adc
test
movsb
cmp
inc
or
push
bound
xchg
mov
push
mov
xor
js
dec
mov
addl
push
aas
sub
jge
inc
popa
xor
mov
cmp
aaa
jo
pusha
in
jne
shlb
mov
mov
mov
iret
push
out
sbbb
lret
jmp
add
int3
movsl
gs
pop
adc
xor
js
lahf
dec
imul
and
repnz
xchg
push
cmp
jle
push
mov
xchg
dec
or
outsl
jecxz
loopne
mov
addr16
sub
adc
dec
ds
aad
push
not
sti
cs
xorb
cmp
and
mov
fwait
mov
push
imul
icebp
jbe
leave
sbb
leave
mov
aaa
lock
imul
mov
xchg
dec
inc
mov
jp
jbe
jp
stos
cmpsb
cmp
add
adc
adc
mov
popf
pop
fdivrs
add
sub
push
in
push
lret
bound
inc
xchg
pop
cmp
or
lock
lods
bound
sub
dec
mov
pop
mov
add
fadds
push
stos
jbe
sub
fnstcw
and
rorl
xor
ds
xlat
sub
adc
sbb
inc
xchg
cmp
mov
cmp
cs
movb
jg
idivb
in
movsb
insb
jl
jge
xchg
dec
mov
clc
jae
pop
icebp
insb
dec
inc
imulb
loop
sbb
leave
mov
cs
in
push
decl
mov
adc
or
cmp
into
movsl
sbb
out
lock
bound
mull
cld
lock
stos
lcall
in
arpl
pop
int
and
stc
fildll
xsave
push
test
mov
scas
and
cltd
or
fstpl
push
ja
out
stos
hlt
nop
addl
cmpsl
sbb
nop
mov
push
pop
fdivrl
in
jecxz
mov
imul
push
mov
ficomps
enter
mov
into
mov
dec
in
jnp
jno
data16
lods
fwait
or
insl
jb
cmpsl
inc
iret
xchg
hlt
shrl
xlat
outsb
lods
cli
jl
insl
loopne
cmpsl
ss
inc
push
adc
cmp
pop
xor
pop
loopne
mov
fmull
shlb
push
js
out
movb
js
in
ljmp
andl
mov
insb
sub
xor
inc
xlat
movsl
jno
mov
pop
ret
mov
xchg
or
sti
sbbl
and
loop
ret
and
stos
fcmovbe
orl
sbb
inc
rcrl
scas
das
add
sarl
subb
xchg
pop
add
mov
cmp
bound
es
dec
ret
cli
adc
pop
push
add
pop
lods
or
js
test
adc
ljmp
add
xlat
pop
clc
in
sbb
fcoml
cli
call
pop
js
mov
push
cmpb
stos
andb
mov
push
icebp
jmp
adc
xlat
pop
xlat
repz
adc
mov
mov
popf
test
mov
inc
cmpb
dec
adc
push
je
dec
divb
js
or
cmp
cmp
mov
lcall
inc
sub
adc
sbb
int3
fstl
aas
or
mov
mov
or
aaa
mov
sub
jns
or
adc
repz
adc
and
movzbl
jns
jecxz
arpl
push
cmpl
mov
add
or
cld
data16
jmp
jmp
ret
jo
or
jno
jnp
sbb
mov
shlb
dec
xor
jo
rcrb
sbb
dec
inc
sub
scas
ljmp
pop
inc
xor
jns
roll
pop
or
sbb
fidivl
popf
dec
cmp
test
sbb
icebp
scas
inc
xchg
xchg
sbb
loop
push
or
and
and
jbe
or
push
or
nop
mov
mov
sarl
mov
ret
or
sbb
out
xchg
push
or
add
cwtl
xor
lods
mov
cli
imul
adc
and
adc
adcb
mov
sub
gs
sahf
ljmp
adc
jae
ljmp
sub
mov
sbb
or
add
mov
add
pushf
lcall
jle
roll
test
add
stc
pop
popa
pop
dec
xchg
mov
in
push
outsl
mov
cmp
push
adc
mov
mov
cmp
add
push
aaa
xchg
lahf
inc
std
fidivrl
scas
cmpsl
adc
sbb
pop
dec
and
xor
push
xor
jp
or
or
and
hlt
mov
gs
mov
xorb
dec
mov
mov
push
dec
cmp
cmpsl
sbb
mov
jp
adc
or
fbstp
add
jmp
push
cmp
dec
add
mov
mov
sbb
mov
cmpsl
sbb
mov
movsl
das
fsubs
mov
push
mov
leave
ljmp
fsincos
psubusw
outsl
mov
daa
in
cmp
fdiv
xor
je
xchg
pop
or
sti
in
out
push
dec
pusha
mov
ret
lret
dec
mov
sahf
ja
push
imul
fcomi
xchg
mov
aaa
sub
test
in
arpl
pop
or
test
inc
sub
dec
mov
cmc
mov
dec
jge
cmp
aad
in
je
rcrb
xchg
inc
aas
mov
jecxz
xor
add
es
and
inc
sub
jge
mov
das
adc
pushf
cmp
sub
fs
insb
mov
push
or
xchg
jg
mov
repnz
adc
pop
mov
dec
cltd
cltd
cwtl
out
in
push
sub
adc
js
xchg
bnd
cmp
jno
jnp
xchg
in
inc
pushf
mov
jmp
or
enter
push
ljmp
xchg
lods
inc
push
mov
pop
lcall
in
cs
push
cltd
xor
and
dec
mov
mov
out
clc
pop
mov
lea
insb
and
into
ficomps
repz
lahf
loope
inc
dec
adc
jae
test
add
ds
mov
mov
stos
cmp
xchg
addr16
movsb
mov
xchg
cltd
add
cwtl
mov
xchg
sub
shlb
fucomp
ss
ss
jl
or
xor
dec
dec
cmp
iret
lcallw
in
in
test
repz
cmp
push
out
or
jl
daa
fs
xchg
dec
sarb
push
xor
int3
fwait
pop
xchg
adc
hlt
push
icebp
idivl
or
cmpsl
cmp
mov
push
push
cltd
lcall
xchg
pushf
aaa
enter
jnp
icebp
and
stos
mov
fstpt
icebp
and
adc
sub
loopne
and
mov
xchg
pop
push
loopne
popf
fwait
add
cld
mov
dec
cld
cmp
subl
mov
mov
flds
cltd
mov
popf
mov
xlat
and
mov
push
loopne
pop
popl
inc
push
push
and
adc
cmp
fs
add
pop
jg
cmp
std
loop
or
sub
fbstp
xor
add
mov
loope
and
push
mov
xlat
jecxz
fcompl
inc
out
mov
cmp
push
add
dec
ss
inc
pop
xchg
inc
inc
cs
cmp
inc
stos
inc
pop
or
stos
adc
mov
leave
xchg
fsts
add
sub
sahf
pop
mov
test
aad
xor
dec
loope
inc
movsl
jecxz
dec
cmp
in
xor
clc
ds
push
sbb
cmp
mov
cmpsb
incl
cmp
rorb
das
cmp
cmp
sbb
ja
jno
add
sbb
sbb
sbb
dec
scas
movsb
cmp
mov
pusha
xchg
inc
ret
fucomp
mov
cmp
int3
lret
mov
push
ljmp
outsl
sbb
add
subps
and
mov
rorb
out
xor
fbld
push
enter
jae
shrb
mov
push
or
sarb
push
fnstenv
xchg
xlat
xchg
pop
adc
and
adc
ficompl
sbb
sti
js
mov
jl
push
fistpl
lcall
pop
scas
and
les
ficompl
test
dec
cwtl
pop
movsb
in
outsl
movsb
add
mov
stos
test
sbb
int3
iret
and
ror
imul
pop
xchg
push
fistl
add
mov
adcl
xchg
push
fiadds
fdivl
pop
cmp
stc
lds
xor
or
pop
cltd
ljmp
out
shlb
shlb
jno
cmp
xchg
inc
fadd
pop
dec
add
ret
popf
xor
or
stos
mov
int3
arpl
cmpsl
ljmp
cmpsl
mov
fsub
fidivl
and
iret
mov
je
cltd
inc
pop
inc
cwtl
mov
mov
aas
dec
pop
mov
or
jb
push
and
movsl
movsl
scas
stc
add
cmp
xor
xor
jbe
inc
mov
fdivs
or
sbb
adc
cmpsl
cmp
scas
mov
add
shrb
loope
dec
push
out
mov
jne
adc
xchg
aad
xchg
pop
jmp
cmc
clts
and
adc
loope
fnsave
clc
repnz
sbb
pop
rol
adc
xchg
loop
stos
movb
lea
xchg
lds
pop
dec
cmp
movsb
jae
aad
mov
mov
push
test
adc
mov
mov
push
mov
cmpsl
out
add
mov
push
orb
aad
loop
adc
cltd
mov
jmp
fldt
inc
or
sub
inc
sub
mov
mov
aaa
inc
inc
sbb
pop
sbbl
ret
fisttpl
sub
pop
cwtl
dec
push
mov
mov
cmp
and
rcr
fldenv
stos
sub
dec
test
xchg
mov
fnstenv
cmp
pop
jbe
addr16
in
decb
jle
out
push
sbb
mov
inc
xlat
dec
add
popa
mov
push
jb
arpl
adc
std
and
push
mov
mov
cmpsl
add
xchg
mov
adc
push
icebp
xchg
hlt
mulb
notl
add
xchg
xor
mov
add
mov
ret
hlt
in
ret
aas
lret
rcr
scas
cmp
pop
notb
insb
dec
stos
je
mov
dec
flds
mov
xchg
lods
mov
or
and
sbb
jne
fnsave
xchg
outsl
sbb
jnp
push
sbb
cmp
jle
aaa
lcall
mov
ret
sbb
lock
dec
out
std
sbb
xorb
stos
or
fcomi
fucomi
popl
inc
inc
cmpsb
mov
inc
sbb
push
shrl
sahf
repnz
cs
dec
cmp
add
stos
inc
lds
push
rcr
inc
icebp
jle
outsl
ja
popa
xlat
call
or
push
stos
aas
mov
stos
pop
call
jns
jmp
mov
mov
pop
or
mov
or
ss
add
and
push
and
shll
cmpsb
aam
popa
xchg
test
test
add
cmpsb
inc
insl
adc
mov
adc
add
loopne
cmpsl
test
jmp
hlt
mov
mov
pop
fidivrl
test
lds
xchg
pop
inc
stos
pop
insb
rclb
lods
dec
pop
mov
data16
xchg
mov
scas
imul
and
popf
pusha
or
mov
inc
in
jo
push
adc
dec
lcall
out
je
sbb
lea
mul
add
or
and
jg
jge
sarl
pushf
pop
or
push
out
sbb
inc
data16
pop
inc
mov
inc
inc
adc
mov
jno
sub
mov
stc
js
js
les
mov
push
es
jnp
ficomps
xor
jb
lea
mov
pushf
ret
pmaddwd
rolb
stos
inc
test
lldt
xchg
lods
push
lock
mov
jle
push
mov
iret
data16
push
out
in
in
test
movsl
or
or
in
inc
adc
xor
push
rorb
lods
lods
jmp
jo
popf
ret
fwait
inc
into
lods
push
call
push
divl
sub
pop
ds
scas
jae
jg
push
sti
in
out
add
sbb
iret
fs
dec
mov
popa
aaa
aaa
inc
dec
push
je
adc
test
sbb
loopne
adc
out
fs
mov
mov
fcmovbe
pusha
mov
scas
push
mov
inc
sbbl
sahf
mov
or
push
addr16
mov
sti
sbb
aad
sbb
dec
mov
shlb
jne
leave
in
adc
push
jne
dec
lods
daa
movsb
pop
xchg
sub
sub
adc
pop
cmpsb
xor
js
loope
push
pop
bound
sub
or
or
cs
cmc
in
xor
mov
in
mov
pop
or
mov
and
int
mov
cltd
notb
sti
gs
xchg
loopne
mov
mov
aad
mov
or
in
emms
outsb
loopne
xchg
cwtl
xchg
sub
in
imul
xor
ljmp
lds
and
lea
cmc
sub
stos
inc
push
andl
arpl
test
ljmp
les
push
call
rcr
outsl
addl
xchg
add
je
push
add
repnz
sub
mov
fistpll
mov
in
test
mov
fists
push
or
arpl
call
es
xchg
xor
cmp
push
or
dec
loop
cmpsl
pop
and
movsb
lret
gs
cld
movsl
cmp
lcall
inc
cli
test
fcompl
cmpsl
loope
pop
cmp
dec
fnsave
add
ret
stos
arpl
mov
aam
inc
pop
cltd
lret
fcompl
roll
lahf
jb
mov
rcl
rcrl
daa
rolb
scas
mov
mov
cmp
mov
fbstp
nop
push
sbb
dec
cmc
xor
mov
jle
cld
xlat
jmp
mov
and
adc
testl
lods
jbe
pop
icebp
iret
fsubrs
js
and
lret
adcl
or
clc
and
add
sbb
stc
or
mov
cld
xchg
push
xchg
jne
into
jbe
ja
mov
and
das
add
push
dec
add
xor
fdivr
mov
into
or
ljmp
jo
aaa
pop
in
push
inc
loope
insb
push
and
inc
notb
xchg
pop
inc
mov
mov
aas
sbb
sbbl
jae
pop
imul
lods
xor
pushl
lcall
data16
dec
test
mov
push
aad
and
xor
ret
fists
lret
jnp
fstl
cmc
fisttpl
fs
mov
pop
pop
aam
dec
mov
aaa
pop
icebp
rcl
insb
mov
jb
scas
aad
cmp
cmp
mov
stos
push
mov
dec
add
adc
cmc
dec
push
dec
js
movsb
dec
repz
testb
mov
mov
jbe
dec
fsubrs
das
jns
fsubl
testb
ficoms
adc
and
call
fdivl
cltd
es
pop
loope
ret
sbb
movsb
mov
andl
pop
fimull
adc
out
in
mov
sahf
mov
adc
xor
pop
adcb
iret
pusha
lock
jo
ret
jp
xor
imul
push
ret
mov
stc
out
sbb
inc
dec
sub
push
sbb
or
mov
and
mov
fs
js
cmp
rorb
add
pop
lret
int3
adc
outsl
ret
aam
dec
push
outsb
sub
js
cmpl
pop
dec
xchg
ds
mov
sbb
jl
cmc
subl
fildll
cwtl
push
mov
sbb
xor
in
mov
out
shll
adc
lcall
cmp
inc
sbb
mov
and
mov
cmp
or
mov
xchg
leave
cwtl
ss
jl
stc
xor
adc
sti
pop
sti
mov
sbb
sar
jg
lock
lods
or
ret
xadd
mov
outsl
xchg
pop
roll
mov
imul
ret
cmp
in
outsb
dec
or
insl
inc
mov
xor
mov
decl
lods
shlb
call
or
or
jae
sub
rolb
push
out
shll
cld
outsl
sti
and
iret
mov
push
fisubs
pop
rorl
dec
fstps
in
sub
inc
mov
push
push
outsl
inc
std
jl
push
jne
lret
xor
jmp
ja
cmp
add
sahf
inc
push
filds
in
int
xor
dec
inc
mov
ret
fidivrl
pop
mov
bound
xor
xor
mov
aaa
iret
fildll
leave
xchg
xor
jnp
mov
test
aad
xor
adc
cmp
mov
icebp
push
mov
lret
call
test
sarb
clc
lods
test
rcrb
sti
jb
mov
adc
ror
mov
das
je
loope
inc
scas
inc
jne
insb
jle
in
sub
dec
mov
mov
ja
call
std
mov
pop
aad
js
xchg
dec
cmp
hlt
inc
iret
popf
jmp
mov
outsl
adc
dec
add
sbb
or
movsb
ss
enter
test
adc
nop
daa
jbe
lods
mov
pop
mov
mov
cmp
mov
mov
pop
xchg
cmp
sbb
fstps
outsb
sub
inc
and
jge
fwait
xor
jecxz
shl
inc
xchg
sbb
fiadds
mov
pop
out
test
adc
or
jbe
dec
dec
mov
sub
hlt
xlat
movsb
xorl
les
rol
sbb
ja
scas
xor
sbb
shr
test
into
mov
es
imul
xor
or
or
das
addr16
dec
std
push
mov
sbb
inc
or
test
fstpt
push
movsb
enter
outsb
add
mov
jae
jmp
cmp
ficoms
inc
adc
arpl
call
or
mov
dec
test
jnp
pop
rcl
pop
adc
stos
jbe
aaa
and
inc
lods
and
cmp
mov
mov
bound
dec
jp
insb
sub
dec
rep
cmp
imul
test
das
mov
dec
rep
adc
neg
scas
lea
mov
jb
jl
into
notb
inc
jmp
dec
inc
pop
xor
nop
xor
jae
nop
inc
xlat
rcl
cltd
pop
xor
inc
xchg
push
add
or
cmp
data16
sub
adc
subl
in
out
push
fwait
and
inc
fdiv
jno
imul
mov
mov
shlb
call
dec
add
mov
iret
sub
xchg
hlt
mov
pop
les
fbstp
imul
sbb
xchg
mov
jecxz
fisubs
leave
sbb
pop
jmp
add
es
cltd
xor
pop
scas
enter
fdivr
xor
add
ret
pop
scas
xlat
out
mov
roll
mov
cmp
aaa
cs
xor
push
mov
mov
xchg
inc
xor
mov
call
xor
in
xchg
in
pusha
sbb
dec
rclb
sub
add
ja
repz
or
mov
fcomps
test
shrl
js
xchg
daa
adc
xchg
xor
jecxz
inc
sahf
out
pop
mov
cmc
shll
adc
inc
fs
dec
scas
pop
adc
dec
fs
xor
cmp
imul
pop
cltd
and
mov
add
fldt
cmpsb
dec
cmpsb
pusha
push
xchg
lahf
sub
lahf
lods
shrb
push
jo
andl
aam
ret
push
addr16
cld
mov
lods
pop
dec
pusha
cmpsl
loopne
flds
mov
ljmp
pop
jne
xor
ret
xchg
sahf
mov
add
inc
ss
mov
or
movsb
lock
ret
daa
pop
xchg
inc
sbb
pusha
jl
cmp
clc
insl
jo
cmpsb
sub
cli
sbb
or
mov
xlat
push
hlt
or
inc
mov
leave
push
push
in
out
mov
add
push
pop
lods
addr16
mov
cmp
fcoml
fimuls
mov
or
xor
movsl
lds
jmp
cmp
or
lcall
xlat
mov
mov
jp
ret
outsl
mov
cwtl
out
lds
cmp
mov
xor
fidivl
add
das
clc
adc
adc
roll
or
mov
jb
and
roll
jecxz
xchg
mov
sarb
dec
rcr
repz
mov
subl
inc
xchg
xor
jb
rcl
mov
pop
inc
icebp
dec
xchg
icebp
cmc
mov
mov
jns
bound
push
dec
or
fistl
rcrb
xchg
push
mov
sbb
fucomp
stos
inc
mov
xchg
push
ror
cmc
or
cmpsb
clc
mov
iret
adc
jle
imull
lds
mov
test
mov
mov
push
lahf
push
divb
test
vpunpckhwd
sub
ljmp
aaa
jo
call
movsb
xchg
mov
xchg
ret
and
mov
test
mov
outsb
outsb
mov
popa
insb
mov
push
in
les
fdivl
adc
inc
mov
push
xchg
enter
mov
ds
mov
inc
lds
in
test
bound
jo
andl
mull
daa
pushf
sub
and
push
push
subl
pop
cltd
jmp
mov
push
out
outsl
jne
jge
nop
jne
mov
adc
mov
sbb
push
sbb
push
outsl
out
pop
cld
push
stos
jmp
shll
leave
pop
in
cli
push
pop
xor
mov
js
fcompl
pushf
push
dec
fldl
int3
ss
ucomiss
mov
dec
inc
push
out
sahf
or
mov
in
pushf
pushf
or
push
jle
dec
mov
insl
rolb
sbb
aaa
sbb
in
xchg
pushf
jo
test
stc
test
sub
mov
jg
inc
push
add
inc
mov
cld
push
adc
les
movb
pop
std
scas
subl
pushf
cs
aaa
fiaddl
xchg
jns
cmp
ficoml
aad
sub
dec
fcmovnbe
mov
pop
mov
pusha
cli
cmp
scas
or
or
adc
nop
loopne
cmp
xor
mov
shll
sub
dec
iret
mov
repz
and
add
mov
lret
ret
dec
mov
and
repnz
pop
jge
cmp
mov
mov
ds
in
stc
je
add
call
mov
push
or
sarl
xor
xchg
sub
int3
jb
xor
nop
ss
rcrl
inc
lds
and
pop
add
xor
add
dec
pop
mulb
inc
jge
notb
cwtl
das
aad
xor
and
addr16
inc
xor
xchg
mov
add
push
xchg
jge
push
mov
dec
out
inc
rcrb
aad
mov
cmp
sub
push
insl
push
ljmp
xchg
add
mov
mov
push
fwait
xchg
loop
movsb
mov
ds
xchg
dec
cmp
jle
loopne
or
jae,pn
imul
inc
pop
push
lret
mov
cli
push
cmp
mov
sbb
and
mov
jl
ja
stc
xchg
mov
aam
mov
fisubs
xor
and
repnz
insb
add
ret
mov
mov
in
fidivrl
push
cmp
dec
xor
push
ficompl
xchg
fs
cmp
imul
xchg
inc
mov
ret
and
push
icebp
test
ficomps
pop
aam
nop
mov
in
xor
inc
sub
inc
dec
in
xchg
stos
mov
sub
cmc
addr16
cmp
inc
cmp
xrelease
xlat
test
repnz
cs
stc
nop
sahf
pusha
int3
outsl
jbe
mov
pusha
adc
nop
sub
loopne
and
notl
pop
push
mov
add
inc
xchg
mov
push
adc
iret
inc
cld
movsl
mov
gs
xchg
push
push
xlat
mov
dec
push
idivl
jne
or
movsl
adc
jno
mov
test
shrb
aaa
push
loope
xor
stc
ret
pop
das
je
adc
dec
add
jge
mov
sub
dec
push
ret
add
mov
jl
sti
push
sub
mov
mov
ja
xor
imul
js
jns
xlat
inc
xchg
int3
test
fsubrl
enter
lret
sub
and
cmp
xchg
xor
push
sub
popf
data16
sbbl
aaa
mov
ljmp
adc
xor
jno
push
mov
push
lret
add
fnstenv
icebp
ljmp
test
cmpsl
dec
xor
fstl
ficoml
clc
mov
pop
mov
aam
dec
push
popf
jne
inc
sbbb
adc
js
ret
pop
cmp
mov
imul
out
dec
popa
sub
dec
pushf
scas
jno
imul
jo
je
add
int3
ret
xor
stc
push
aam
mov
mov
sbbl
xchg
data16
cwtl
mov
push
push
or
lahf
test
xlat
pop
push
jp
sbb
ds
add
mov
mov
arpl
test
cltd
stos
fldcw
jae
inc
add
andl
cmp
int3
jb
add
bnd
adc
or
mov
push
jnp
out
adc
jb
mov
or
xchg
outsb
push
add
cld
pop
test
mov
and
sbb
adc
sbb
dec
out
pop
cmp
dec
mov
aam
mov
mov
movsb
xchg
mov
leave
sbb
sbb
shlb
gs
and
cmp
ret
ret
clc
stc
push
push
lods
lds
sub
mov
es
rclb
jge
dec
inc
fidivrs
pop
gs
aaa
cmp
mov
mov
push
push
jno
fmul
cmp
sbb
mov
and
and
xor
inc
add
mov
or
popf
aad
cld
dec
clc
mov
mov
sbbl
bswap
or
pop
push
test
movsb
ss
push
mov
xchg
add
mov
cwtl
sbb
adc
sbb
scas
ss
fdivr
cmp
pop
cwtl
push
dec
stos
sub
jg
xor
in
push
movsl
lahf
mov
jl
sti
mov
fsubrs
insl
call
cmc
sbb
or
nop
push
sbb
dec
xor
jnp
lahf
ret
in
testb
scas
mov
pop
mov
push
les
xor
aad
lcall
push
bound
xchg
aas
xchg
add
aaa
pop
scas
movsl
dec
test
popa
xchg
sbb
adc
sbb
cmp
pop
ja
popa
mov
xchg
xor
adc
mov
jp
scas
loope
andb
js
mov
fldcw
outsl
jmp
repz
rep
cmp
imul
in
hlt
lret
adc
lods
movsb
pop
adc
jb
daa
sbb
push
vpsubq
or
out
adc
jle
push
or
sub
stc
cmp
push
out
mov
fidivs
mov
pop
xlat
iret
add
mov
lea
movsl
mov
add
pop
cmp
fistpll
mov
sub
mov
adc
mov
insb
cltd
cmp
gs
xchg
xor
add
mov
mov
jmp
test
les
mov
sahf
or
sub
sar
sub
pop
lods
mov
push
or
mov
inc
fcomps
test
mov
in
push
repz
cs
mov
in
pop
jo
test
push
xor
pop
and
cld
inc
push
xor
cwtl
cwtl
ficoms
mov
or
js
loopne
jg
daa
mov
popf
idiv
push
scas
test
popl
xor
mov
sub
in
xchg
push
je
inc
es
hlt
adc
imul
xor
inc
xchg
or
stos
inc
mov
sub
pop
xchg
outsl
sbbl
out
jge
cmp
arpl
xor
imul
icebp
pop
mov
push
jo
inc
in
mov
push
push
daa
add
lods
inc
lods
push
repz
sbb
lret
cmp
lret
pushf
jp
push
pop
flds
test
push
push
and
mov
xchg
pop
jp
mov
pop
lods
in
iret
das
cmp
or
negl
or
mov
aas
jne
pop
rcll
shl
insb
sub
nop
inc
cmpsl
add
rcr
mov
lret
dec
mov
call
js
push
sbb
insl
iret
leave
dec
loop
imul
sbb
dec
xchg
push
sub
insl
push
je
push
out
scas
mov
push
lock
cld
jl
pop
and
cmpsb
ds
test
mov
sbb
clc
ret
loop
inc
adc
mov
fs
or
daa
shll
popa
js
push
pop
ret
xor
lret
xchg
shlb
mov
dec
inc
sbb
testb
scas
adc
cmc
xchg
and
xor
movsb
nop
sub
daa
pop
sub
dec
scas
mov
ret
iret
mov
xor
popf
mov
int3
push
adc
scas
js
shll
cmpsl
ds
add
addr16
xor
jns
loope
mov
nop
mov
call
mov
nop
ss
mov
mov
pop
inc
inc
nop
push
inc
repz
sbb
ljmp
jns
addr16
repz
loopne
cs
or
adc
pop
xchg
cs
jmp
js
loope
fmuls
cmpsl
ds
adcl
add
adc
push
lahf
test
inc
rolb
adc
ss
pushf
lea
pop
je
in
xor
fnsave
mov
lods
lea
and
mov
pop
xor
cmp
push
jecxz
xchg
push
pop
jle
add
outsb
cli
cwtl
xor
scas
inc
push
call
cmp
push
push
mov
stos
jmp
and
xlat
sti
fwait
xor
sahf
stc
hlt
and
cli
sbb
fcoml
andb
in
int3
fnsave
push
ljmp
call
loope
stos
cs
and
jle
pop
push
ja
cmp
mov
out
mov
repz
push
rcll
jae
jns
inc
cmp
dec
into
test
outsl
push
popf
pusha
insb
cli
jne
rcll
sub
fwait
add
jmp
test
adc
jmp
js
mov
push
scas
xchg
mov
pop
and
xchg
decb
cli
mov
mov
into
adc
adc
icebp
xlat
dec
pop
es
aad
pop
hlt
les
sub
insb
mov
xchg
mov
ja
gs
scas
sbb
ds
hlt
jbe
stc
sahf
sub
and
fstpt
movsb
stos
pop
pop
iret
push
add
jae
inc
andl
xor
fbstp
rorl
push
pusha
daa
inc
fcoml
clc
inc
enter
or
pop
imulb
lret
std
popa
fcomps
in
out
cmpsl
mov
fbstp
push
and
es
xchg
and
cmpsl
cmp
mov
xchg
mov
repnz
call
and
sbb
sbb
cwtl
adc
dec
pop
dec
lods
sbb
add
xchg
and
testw
add
icebp
test
sbb
pop
outsl
jecxz
adcb
es
mov
jno
lret
xchg
stos
inc
dec
push
inc
push
scas
dec
iret
gs
stos
insb
push
push
data16
inc
je
aaa
push
cmp
pop
mov
loope
xchg
aam
cmpsl
icebp
inc
mov
mov
js
int3
lret
cmp
mov
xor
or
inc
les
mov
xor
sbb
mul
fdivs
adc
add
dec
xchg
jecxz
add
and
mov
pop
push
add
fs
and
ret
ss
andl
mov
cmp
mov
sub
inc
mov
cmp
push
add
fdivrl
test
push
or
movsl
sub
cli
add
int3
arpl
gs
fldl2e
orl
loopne
test
pop
insl
sub
jmp
rclb
hlt
push
pusha
shrl
sarb
aam
adc
push
jecxz
pushf
lcall
xor
add
daa
dec
test
pop
adc
out
xchg
in
test
in
or
mov
ja
sub
sbb
xchg
xchg
cmp
ret
jns
out
jbe
adc
std
mov
lods
movb
lret
mov
test
mov
adcb
testl
mov
das
dec
aam
std
add
rorb
pop
es
inc
push
faddl
cld
jmp
mov
pop
repnz
push
loopne
dec
lea
aaa
fwait
arpl
rcll
xchg
xchg
loop
add
and
aam
aaa
leave
popa
mov
mov
fisubrl
xchg
mov
cmpl
xchg
xor
cmp
pop
and
mulb
test
cltd
out
jl
push
in
je
mov
loope
cld
adc
out
xchg
or
out
fcompl
addr16
sbb
lock
mov
js
divl
std
xchg
outsb
jp
push
daa
mov
mov
or
cmpsb
dec
pop
mov
lret
cld
push
sub
mov
hlt
mov
mov
cmpsl
in
pop
mov
mov
gs
in
sub
arpl
xchg
xor
push
rclb
repnz
push
jge
aaa
adc
mov
bound
mov
pop
xchg
cmovl
les
in
dec
jmp
cli
mulb
je
out
popa
ret
xor
or
dec
mov
jl
pop
jo
popf
iret
data16
xchg
cs
mov
push
and
dec
stc
decb
ret
push
pop
xor
aaa
imul
fstl
sub
sub
dec
mov
dec
loop
dec
test
inc
dec
adc
sub
mov
jne
mulb
cmp
adcb
mov
mov
push
dec
push
mull
lea
push
movsb
arpl
push
pop
push
fdiv
nop
test
fimull
in
fadds
bound
insb
mov
mov
cmp
jp
jb
data16
clc
pop
mov
mov
shrb
pusha
ficompl
mov
push
mov
sub
dec
dec
push
sti
and
xor
xchg
push
jne
pop
or
push
adc
and
mov
dec
jne
loopne
add
mov
xchg
mov
rcrb
pop
imul
mov
dec
nop
push
call
mov
cmc
test
outsb
mov
mov
push
cmc
mov
or
sarb
popa
mov
gs
out
orb
add
loopne
cmp
add
xorb
push
roll
or
cmpsb
sti
xor
or
cmovbe
lret
int
test
cmp
mov
ficoml
out
sti
dec
in
das
cmpsb
mov
sbb
int3
arpl
ds
jnp
and
or
mov
lret
mov
rol
outsl
cwtl
out
adc
mov
cmp
and
out
xor
ret
push
inc
scas
dec
movsb
push
xchg
inc
faddp
les
xor
dec
data16
ljmp
mov
incl
jg
adc
inc
pushf
enter
add
pop
or
cmp
fstpt
test
xchg
ficoml
pop
ficompl
ret
repz
bound
test
mov
pop
cltd
sbb
aad
cmp
ja
mov
cmpsb
jmp
cmp
repnz
pusha
jecxz
stc
or
lods
add
adc
push
loope
sahf
aaa
jecxz
dec
scas
aad
mov
ficoml
iret
inc
mov
push
adc
mov
and
lds
ret
push
xchg
dec
jmp
dec
sbb
adc
adcl
popf
pop
dec
adc
jge
mov
push
ljmp
jno
out
xor
mov
or
xor
sub
test
lret
and
repz
add
in
adc
dec
inc
push
aad
push
mov
pmullw
fdivs
test
movsb
js
fs
popf
repz
fwait
xchg
xchg
dec
rdmsr
out
add
lods
adc
fstl
movsb
mov
dec
xor
mov
push
fsubp
inc
xchg
fldl
jbe
add
ljmp
pop
fdivp
push
cmc
jge
daa
scas
mov
shll
xchg
ret
mov
dec
ret
pop
jge
adc
repnz
shll
push
in
aam
je
mov
jae
out
test
add
jl
scas
and
dec
loop
js
scas
in
imul
mov
xchg
cmp
sti
dec
dec
ss
pop
icebp
mull
jns
sbb
xchg
pop
push
dec
enter
sub
aaa
mov
xchg
sub
ljmp
js
or
adc
xor
scas
mov
std
mov
cs
or
repz
data16
stos
jmp
ret
push
test
xchg
out
mov
fidivrs
out
fists
sti
jecxz
mov
ret
xor
add
xchg
adc
js
inc
mov
test
icebp
pop
add
xchg
mov
push
inc
rolb
jnp
bound
lods
and
mov
xor
xchg
jmp
mov
jns
pop
push
lock
mov
jns
cmp
mov
push
add
leave
int
repnz
adc
dec
pop
add
nop
xor
xchg
jg
rcr
insb
inc
and
popl
jo
adc
imul
pushw
xchg
jne
or
cs
gs
push
mov
pop
jmp
mov
lea
ror
cmpsb
cmpsl
cmc
rep
or
pop
or
sub
mov
add
xlat
movsl
jle
aaa
daa
push
pop
aaa
idivb
add
xchg
dec
inc
xchg
mov
ret
dec
aas
sti
pop
decl
testl
gs
and
xchg
test
ret
mov
cli
xchg
fidivl
sbb
iret
mul
pop
jne
ja
adcl
sub
icebp
inc
sub
mov
fnsave
push
orl
int3
out
flds
or
sub
push
pop
and
jno
aad
stc
out
dec
aam
ljmp
cmpsl
rorl
inc
add
out
repnz
sub
inc
mov
xchg
test
fidivl
pop
push
cmp
nop
loope
sub
inc
negb
jnp
in
test
out
adc
fsubrp
adc
sub
mov
sub
rcl
fwait
add
lea
adc
push
inc
mov
fsts
dec
xor
shrb
pop
rcrl
in
in
push
lea
int
and
jp
add
and
imul
test
dec
adc
sahf
lods
mov
mov
lea
mov
lock
push
lret
cmpsl
cmp
enter
rcll
xchg
xlat
pop
mov
inc
shlb
push
imul
popa
sbb
int3
sahf
sbb
loop
mov
test
cld
inc
add
pop
pop
adc
lahf
stos
xor
hlt
pop
test
fidivs
push
stos
xchg
rorb
lcall
mov
rolb
and
icebp
data16
and
mov
inc
in
and
sti
push
insb
push
dec
sbb
mov
jno
and
jmp
push
pop
shlb
xchg
sbbb
adc
add
mov
mov
pop
insl
mov
or
xor
iret
cld
pop
lcall
sbb
gs
fisubs
ja
data16
movsl
inc
sub
lea
in
les
lods
jg
lret
mov
sahf
mov
xor
jns
test
fwait
xor
inc
faddl
fs
in
stos
jmp
cmp
jg
repz
sahf
push
xor
pushw
cmp
rolw
mov
add
mov
iret
mov
inc
and
dec
cmp
call
fsubl
dec
aaa
mov
or
push
push
addr16
rcl
mov
mov
and
xchg
ljmp
lds
repnz
sar
fcmovnb
addr16
repz
aaa
push
sbb
push
divb
mov
sub
mov
xchg
scas
push
jmp
fsubrl
cltd
dec
imul
test
outsl
lds
push
aam
dec
sub
test
enter
adc
mov
cmp
fwait
sti
mov
or
sub
aam
stos
and
sbb
add
inc
mov
movsb
jns
and
sti
sub
add
mov
adc
ret
loopne
repnz
movsb
cmp
dec
repnz
arpl
mov
fdivs
push
loop
mov
push
dec
or
cmpsl
dec
dec
mov
pop
jmp
and
push
fdivrl
jle
in
adc
je
sti
xchg
aad
or
leave
mov
jge
xchg
mov
push
lock
pop
jae
shrb
dec
outsb
inc
fwait
adc
int3
lret
lods
xorb
addb
aaa
mov
arpl
adc
fmul
pop
or
dec
xor
jg
imul
jbe
adc
mov
imul
add
xor
fwait
jo
push
mov
dec
fdiv
sbb
pop
test
sub
push
jns
xor
pop
mov
stos
or
out
and
punpckhbw
addr16
xor
cwtl
jle
repz
pop
hlt
clc
push
shrb
dec
aas
jnp
push
xor
lods
jle
adc
push
scas
xor
call
xchg
fs
sub
lret
loop
or
nop
nop
imul
stos
call
shrb
adc
sub
mov
adc
rolb
jo
negb
jo
imul
push
test
jl
xor
cmp
nop
imul
xor
mov
jl
sub
adc
mov
mov
sub
adc
dec
adc
mov
sub
lret
push
cmpsl
pop
mov
das
add
popa
xor
test
mov
inc
xchg
push
outsb
out
mov
icebp
dec
or
jl
sub
in
mov
or
adc
add
shlb
or
decl
insl
adc
lret
add
xor
rorb
jmp
xor
or
mov
nop
lcall
movsl
int
pushf
inc
outsl
test
fcmovne
inc
cli
movsw
pop
jo
pop
mov
ja
xorb
movsb
shll
and
fs
sub
stos
add
and
and
xchg
pop
in
call
in
enter
or
mov
insl
stos
push
sub
mov
filds
sub
sub
mov
push
loopne
xchg
repz
or
je
jnp
ja
sub
push
lods
sbb
push
test
pop
xor
scas
outsl
das
add
out
insl
hlt
add
gs
loope
dec
testb
sub
xchg
lods
test
or
int
je
mov
bound
into
dec
movsl
adc
sub
insl
pop
mov
dec
dec
adc
aam
add
and
mov
mov
cmpsl
jl
dec
adc
cwtl
add
aad
test
mulb
out
mov
cmp
push
sarl
popa
pop
jbe
frstor
outsl
and
ret
xchg
ret
pop
cmc
jbe
xchg
jbe
loope
jae
sbb
and
mov
iret
stos
adc
and
lods
mov
mov
mov
iret
mov
jmp
lods
jo
mov
pop
mov
xchg
inc
push
test
mov
fisttps
inc
mov
fidivrs
popa
xchg
push
pop
shrb
enter
mov
fcompl
in
cmp
jb
xchg
popf
xor
pop
fstl
mov
cmp
add
cltd
js
add
das
push
pop
aas
mov
stc
mov
out
in
cmp
xchg
and
mov
daa
in
test
xchg
subl
mov
dec
fwait
adc
int
inc
cld
or
test
xor
sub
enter
ljmp
jae
call
leave
mov
aas
push
aad
inc
pop
enter
es
add
and
loope
add
pop
aaa
push
jmp
sub
xor
shl
dec
in
jnp
jge
sub
add
inc
dec
das
push
mov
ret
sahf
xor
fisubs
push
cltd
stos
jle
pushf
mov
xchg
insb
andb
sbb
into
mov
mov
jbe
jae
mov
and
and
mov
pop
jle
jns
pushf
je
ljmp
imul
sarb
fsubrs
adc
pop
cmc
pop
ss
outsl
add
nop
add
das
test
and
lret
pop
push
int3
jg
notl
sub
cld
pop
scas
inc
stc
stc
cmp
cmp
mov
ror
pusha
add
icebp
jb
jo
pop
lock
jbe
jb
mov
bound
push
inc
adc
stos
sub
or
dec
or
outsl
mov
add
es
xor
dec
fistps
repnz
push
sbb
test
dec
iret
pusha
movsl
xchg
adc
pop
cltd
sub
or
mov
movsl
rcll
ljmp
mov
and
dec
pop
sub
call
neg
sbb
dec
sbb
pop
mov
cmp
out
mov
dec
out
mov
call
scas
pushf
and
int
sbbb
adc
mov
fs
push
movsl
mov
lret
sti
jp
mov
enter
fs
and
test
dec
cmpsl
mov
mov
fcmovnbe
rorl
jo
or
mov
cmp
sub
xlat
push
fldl
pop
and
pushl
mov
inc
cmp
mov
push
push
popf
lods
sbb
mov
pop
sub
jle
jp
xchg
nop
jl
xor
popf
outsl
adc
mov
pop
jbe
sub
push
inc
sarb
loop
je
cmp
sbb
push
insl
idivl
leave
jae
adc
push
inc
nop
addr16
loop
mov
outsb
inc
sbb
test
pop
mov
nop
sbb
outsb
or
inc
pop
and
sbb
push
cmp
push
clc
dec
fildll
push
jb
ret
lret
data16
cld
in
and
cwtl
mov
ret
shlb
mov
fmull
loop
dec
mov
sarl
adc
js
daa
test
fwait
xor
leave
in
inc
sti
and
in
pop
or
xchg
xchg
xor
movsl
sbbb
dec
push
cmp
cmpsl
pop
mov
aaa
cli
lcall
pop
add
xchg
out
ret
test
xchg
fmuls
xchg
out
into
jne
shll
stos
push
rol
loope
mov
push
fsub
add
cltd
cli
xchg
clc
mov
popf
mov
int
add
insl
or
daa
dec
push
jge
mov
mov
aad
and
lahf
pusha
or
jl
es
lea
jo
imul
gs
xchg
sahf
nop
daa
dec
mov
scas
je
mulb
insb
mov
xor
cmpsb
mov
push
aas
inc
fs
mov
mov
not
int
sbb
jge
mov
mov
sahf
mov
and
lock
cmp
push
cmpb
lea
bsf
mov
dec
jnp
jmp
insl
push
fnstsw
xlat
hlt
push
lret
or
rorb
rcl
lock
or
lods
in
cmpsb
rcll
dec
in
cmp
das
fcomi
xchg
cmp
pop
lock
in
sahf
push
rcrl
int3
jg
fsubrl
and
mov
adcl
icebp
and
sub
leave
push
dec
inc
fdivrl
mov
jle
dec
mov
mov
lret
into
hlt
lock
sub
inc
pop
jns
push
fwait
andb
call
sub
inc
fwait
pop
cwtl
adc
mov
loop
jno
stc
pop
push
xchg
mov
in
call
and
or
xchg
in
push
neg
jbe
je
dec
xor
mov
fidivs
dec
pop
dec
push
xor
pop
mov
cmp
insl
jbe
iret
xor
add
pop
jo
or
push
pop
movsl
cmp
lret
sub
dec
pushf
das
test
fildl
bound
bnd
ds
sub
dec
ret
sub
pusha
fadd
inc
xchg
icebp
lret
and
mov
movsb
sbb
pop
xor
fldt
mov
or
dec
divb
cmc
leave
sbb
adc
add
push
cmpsl
xor
xor
sub
and
rorl
out
sub
dec
push
in
jg
push
add
and
inc
push
jo
dec
ss
scas
repz
lahf
xchg
pop
sbb
cmpsl
sti
xchg
push
cmp
lock
sbb
inc
js
scas
imul
jecxz
dec
push
lds
mov
push
push
insl
ljmp
sub
sbb
or
push
out
mov
cmp
int
icebp
xchg
xchg
sub
fnstcw
dec
sub
mov
pop
cmc
mov
addr16
mov
push
add
insb
test
int
stc
jl
xchg
sub
mov
jl
jae
lahf
nop
mov
or
jne
sub
cmp
scas
lret
bound
leave
jmp
sub
outsl
jns
push
dec
cmpsl
setno
mov
adc
hlt
pop
push
loope,pt
stc
xor
pop
add
push
leave
shrb
sub
repnz
imul
aas
cld
test
sub
sarl
pop
imul
and
dec
lret
push
icebp
aas
fidivl
pushf
aam
sbb
push
mov
pop
in
pop
mov
mov
mov
test
fsubrl
ficomps
int
shr
add
test
sub
int
lret
add
inc
jg
xchg
test
cmp
in
loope
fbstp
or
inc
lret
add
sub
cli
jnp
imul
aas
or
xchg
pop
adcb
mov
fsubr
orl
push
or
dec
inc
xor
push
pusha
das
sub
push
cmpsb
or
out
lods
pop
cld
in
ljmp
mov
pop
mov
mov
push
sbb
inc
icebp
mov
fidivs
adc
sbb
cmpl
pusha
inc
out
mov
jmp
dec
pop
jne,pn
jo
mov
pop
sub
ljmp
inc
pop
in
mov
push
push
jno
push
shll
jae
adc
fdivl
cld
pop
ret
rcl
stc
mov
fsts
lods
or
push
or
xor
je
fistps
repnz
push
jp
cmp
add
dec
or
loope
jns
jg
outsb
mov
dec
push
pop
int3
ficoms
aad
jb
test
addb
cmpsl
adcb
inc
ror
cmp
enter
pop
mov
shl
xor
gs
add
cltd
fisubl
mov
dec
sub
imul
icebp
outsl
push
and
leave
and
jmp
leave
into
inc
inc
jg
leave
adc
adc
and
test
js
jo
jnp
xchg
popf
or
and
sbb
push
pop
into
stc
popf
cmp
jns
sub
stos
and
repnz
imull
loopne
mov
xchg
mov
sbb
bound
jbe
or
xor
mov
add
mov
loope
insl
cld
sbb
cmpsl
cli
jo
mov
je
adc
lods
and
std
popa
je
test
aaa
notl
arpl
loop
jmp
dec
and
mov
js
test
ja
in
test
push
xchg
fidivl
sbb
mov
inc
loope
xchg
push
aas
push
jne
and
rcrl
xchg
cmp
lret
push
lret
mov
out
aad
sub
mov
fistpl
or
xchg
mov
mov
out
jne
xchg
xchg
adc
inc
or
outsb
addl
mov
push
push
rol
fsubrl
mov
test
mov
xchg
insl
and
push
shrb
or
dec
xchg
dec
inc
or
push
mov
dec
popf
push
cmp
pop
and
jecxz
mov
hlt
mov
ret
icebp
mov
add
cmpsl
es
xor
xchg
xor
xchg
inc
jmp
jl
out
xchg
fistl
add
xor
in
pop
pop
bound
mov
test
fs
add
sbb
in
cs
or
xchg
es
lock
and
fimull
dec
stos
mov
inc
inc
scas
lock
outsl
xor
lods
sub
stc
inc
xor
jno
or
push
sub
pop
movsl
stc
add
scas
mov
loope
sub
adc
cmp
cmc
add
lea
and
jmp
add
jge
mov
sub
add
xchg
mov
and
push
sahf
stos
test
sbb
push
std
mov
jno
xchg
xor
leave
and
mov
mov
xchg
je
dec
loopne
imul
adc
mov
daa
xchg
add
je
cmp
dec
xor
inc
int
in
add
stos
mov
or
outsl
gs
divl
fdivl
or
out
mov
cld
shll
ret
or
loop
add
or
in
pop
shl
push
daa
test
mov
push
inc
jmp
dec
mov
shll
cwtl
das
xchg
mov
add
int
pop
and
cmp
daa
mov
push
or
jmp
sub
mov
or
mov
mov
lcall
dec
lret
dec
shlb
les
or
dec
sub
inc
pop
jns,pn
popf
div
mov
fstpl
aas
mov
adc
or
jae
mov
xor
push
dec
int
mov
fildl
xor
sub
mov
out
xor
in
sbb
jbe
and
pop
outsb
add
out
repnz
dec
and
cld
dec
imul
mov
push
and
lds
lret
mov
push
insl
negb
aas
das
adc
divl
imul
jmp
sarb
in
notb
mov
jne
add
and
lea
mov
xchg
sarl
std
and
in
xchg
hlt
cmp
data16
call
xor
lock
mov
sbb
pop
test
out
or
sbb
out
or
hlt
inc
into
jnp
out
jecxz
push
incb
adc
stos
jecxz
fdivrl
push
cmpsl
jns
jbe
cmp
sub
test
pop
leave
fdivrs
imul
stc
leave
pop
jo
xchg
push
dec
inc
rcrb
mov
bound
add
jge
xchg
mov
insl
lret
rolb
aaa
daa
arpl
xor
mov
cmp
mov
jno
lret
imull
fidivrl
inc
cmpsb
mov
fmul
dec
iret
inc
std
add
xor
out
test
push
std
andb
lock
cmc
scas
jg
loopne
cltd
or
popf
xor
mov
ds
loope
adc
cmpsb
cmp
imul
aaa
jbe
lahf
repnz
xchg
mov
les
inc
mov
cmp
jg
cltd
out
test
sti
daa
imulb
lret
test
cmp
addr16
pop
call
fsts
push
dec
jne
mov
rorb
mov
outsl
lahf
add
in
add
inc
ss
dec
int
mov
mov
sbb
sbb
pop
mov
call
add
in
pop
out
scas
jb
sbb
push
arpl
add
lods
fsubrs
loopne
jne
xchg
imul
add
sub
adc
repnz
fnsave
xor
mov
jle
lahf
fldl
pop
imul
fsubrl
cs
lret
out
jb
jbe
fwait
arpl
cmp
into
lock
mov
mov
adc
gs
mov
push
xor
cmp
mov
mov
mov
xor
fildl
sbbl
mov
sbb
je
cmp
popa
outsl
ss
icebp
jmp
and
jo
ds
mov
push
jo
pushf
xor
add
enter
xchg
sbb
sarb
xchg
dec
cmp
arpl
outsb
jmp
or
jmp
sbb
mov
xchg
fdivrp
xor
sbb
mov
aad
push
or
jne
mov
pushl
aam
in
mov
push
testb
loopne
push
inc
xsavec
test
shr
cmp
mov
xor
sub
inc
int
sahf
or
add
mov
or
cmc
mov
pop
data16
push
or
sbb
push
jns
ret
loop
or
add
mov
nop
imul
fildl
push
shr
and
repz
stos
cmp
leave
ds
pusha
andb
incb
or
bound
sub
dec
xchg
sub
inc
std
nop
adc
pop
mov
in
add
push
ss
icebp
xor
ss
lds
in
test
aam
add
mov
pop
add
js
out
fstl
cmp
and
push
jnp
push
fadds
das
fildl
fdivl
xchg
lret
insb
xchg
hlt
mov
adc
call
in
jb
sbb
ja
mov
fs
adc
and
test
pusha
sbb
xchg
pop
lds
mov
popa
pop
dec
mov
andb
scas
jo
cmc
enter
mov
add
cmc
iret
sub
push
cmp
cmp
sbb
sbb
dec
xor
jg
or
mov
test
std
dec
xor
cli
cmc
fiaddl
sbb
int
ja
jo
int3
dec
sbb
cmp
or
mov
out
and
and
bound
push
lds
cmpsl
add
adc
sub
iret
mov
out
out
sub
orl
mov
dec
pop
out
ja
pop
mov
repz
fimuls
faddp
xchg
mov
push
out
rcrb
loop
or
xchg
jno
adc
lock
lahf
or
sbbb
outsl
dec
fisttpll
push
testl
dec
test
sbb
test
ss
test
ds
fs
dec
jnp
dec
mov
sbb
test
aas
into
ud0
inc
scas
testl
sbb
dec
xor
cmp
mov
cmpsl
cs
push
inc
jo
xchg
sub
and
call
xchg
rorl
outsl
jecxz
int
sahf
ret
imull
pop
and
loope
push
pop
ds
icebp
scas
test
lret
jns
pop
mov
adc
jl
pop
jl
int3
fstenv
push
inc
fwait
push
fnstsw
int3
adc
fs
int3
imul
mov
testl
pop
xchg
push
or
jge
es
add
ljmp
sub
into
in
popa
in
pop
push
dec
fldpi
mov
xchg
jbe
or
xor
sub
test
daa
fimull
inc
repz
aam
into
movsl
inc
xor
push
or
aas
jge
jo
add
push
testl
push
xor
cmc
or
stos
and
push
pop
cmp
andl
or
insl
mov
hlt
and
dec
orl
scas
popa
push
movsl
iret
xchg
dec
sti
sub
lock
and
ret
arpl
cmpsl
ds
sbb
lds
inc
push
shll
mov
dec
jecxz
cmp
adc
mov
hlt
pop
jmp
jbe
jp
sahf
lods
mov
mov
push
inc
mov
jge
es
adc
out
movsl
adc
shl
int3
and
xchg
dec
pop
lret
sti
jl
sbb
dec
sbb
jge
sti
ss
cmp
lods
xchg
mov
shl
shr
std
sbb
or
inc
loopne
jg
fnstcw
xchg
cs
sbbb
hlt
jns
sbb
scas
pop
push
add
cmp
arpl
and
xor
adc
xchg
iret
shlb
lods
xchg
mov
into
mov
mov
test
leave
daa
fisttpl
gs
in
mov
lds
mov
mov
push
mov
cli
adc
popf
cmpsl
in
push
inc
cmp
inc
leave
hlt
inc
add
push
xchg
xchg
mov
lcall
jbe
rclb
les
bnd
or
cs
loope
fcom
test
xchg
add
cmpsb
adc
xchg
xchg
mov
gs
push
cwtl
xchg
stc
nop
out
push
addl
subl
push
cmp
outsl
sbb
add
xchg
rorb
sahf
mov
sarb
sub
mov
push
pop
inc
xlat
scas
cmpsb
jge
decl
imul
mov
xchg
scas
mov
mov
testb
sbb
test
jno
xorl
stos
mov
pop
notb
inc
gs
inc
inc
xor
mov
pop
loop
popf
cmp
pushf
and
outsb
enter
xor
pushf
dec
in
imul
adc
sbb
cs
pop
inc
cld
add
setl
cmc
or
adc
imul
cwtl
jo
mov
ret
push
aaa
pop
arpl
test
push
rol
xor
cmpsb
in
dec
repz
add
cs
cli
and
aaa
popa
push
xchg
pusha
xchg
mov
inc
nop
repnz
ret
das
adc
and
and
pop
xchg
ss
add
mov
cmpsl
rolb
nop
adc
mov
fisttpl
and
js
sub
cmp
inc
pop
jnp
ret
subl
inc
ror
sbb
and
or
ror
dec
lea
leave
pusha
pop
adc
lds
xchg
out
test
push
repnz
inc
jecxz
jno
hlt
sub
sbb
pusha
push
sub
mov
inc
ret
lods
cmp
mov
lds
fnstenv
lea
push
push
pushf
mov
pop
bound
mov
loop
mov
mov
into
xchg
in
outsb
and
aam
lea
rclb
sub
int
mov
cmp
loop
mov
mov
loopne
mov
add
inc
rcr
and
cmp
out
fld
xor
int
fcomps
add
outsl
inc
lock
scas
mov
pusha
jl
sbb
outsb
jns
jbe
mov
test
aad
leave
add
push
jb
pop
add
mov
out
pop
push
popf
in
and
mov
mov
add
inc
add
insl
into
sbb
mov
mov
inc
test
inc
arpl
xor
sti
xlat
js
cld
xchg
xchg
cltd
scas
fcmovne
movsl
xor
gs
lcall
or
inc
or
stos
popa
mov
gs
mov
mov
outsl
push
push
pushf
sub
jmp
mov
adc
sub
cltd
xor
or
xor
dec
test
push
pop
mov
in
out
inc
pop
lret
push
aas
push
push
cmp
mull
rcrb
addl
mov
mov
and
adc
fwait
pop
mov
cs
pop
push
mov
aas
inc
xchg
decl
mov
fnstenv
pop
sub
xor
cli
or
repz
aaa
iret
ss
nop
jle
sub
jecxz
fs
push
nop
loop
shlb
testb
adc
in
jg
aaa
icebp
test
in
cmp
mov
repnz
push
add
push
mov
jl
cli
push
jae
or
xchg
xchg
add
mov
in
das
or
aad
icebp
mov
dec
aaa
daa
or
inc
xor
outsb
pop
jb
jl
jg
or
add
cwtl
jge
sarb
sbbb
daa
sbb
add
mov
mov
dec
and
ret
pusha
xchg
dec
daa
adc
daa
jl
movsl
pop
xor
push
out
xchg
icebp
ret
arpl
mov
mov
inc
push
push
jg
rol
xchg
movsb
out
inc
add
mov
fdivrl
stos
inc
decl
mov
sub
cmp
mov
pusha
cwtl
stos
cltd
xchg
shlb
add
cs
int3
xor
in
adc
jae
test
xchg
scas
jmp
nop
insb
dec
sbb
aaa
jle
and
xor
lea
movsl
pop
xchg
ja
inc
jge
mov
sti
mov
in
pop
aam
inc
mov
mov
cmp
xor
in
pop
cmp
out
das
fwait
push
stc
xchg
dec
stos
jmp
sub
out
pop
aam
adc
xlat
outsb
xor
sbb
mov
cmc
dec
data16
jb
ss
out
inc
insl
mov
lahf
lds
xchg
stc
dec
cmc
push
sbb
fs
cld
rol
xor
jne
add
jnp
dec
dec
ffreep
add
sbb
and
testb
test
sub
dec
fnstenv
mov
jecxz
mov
enter
xchg
sbb
imul
cmp
mov
enter
sarb
mov
lahf
je
mov
js
int
mov
lods
psrld
popf
pop
scas
mov
pop
ss
mov
nop
pop
and
add
and
nop
cmpsl
dec
xchg
loop
stc
mov
cmpsb
out
sahf
push
jl
sub
dec
xor
arpl
lods
mov
push
fisubl
fldenv
cs
imul
inc
fld
arpl
movl
out
push
gs
rep
or
dec
pop
add
pushf
push
inc
mov
and
jne
cmp
out
sbb
mov
outsl
mov
xchg
dec
arpl
and
in
push
push
push
out
test
cmpsb
or
mov
jle
das
jne
inc
add
lret
xor
aad
push
fsubrl
sub
nop
pop
lret
cmp
add
mov
and
ret
je
pop
push
pusha
clc
addr16
mov
ss
sbb
pop
mov
je
jns
or
mov
cmpsb
xor
adc
push
mov
sbb
aam
movsb
mov
lcall
sbb
dec
das
ret
stos
and
in
popa
fsubr
mov
outsb
adc
inc
pop
cmp
cmp
lods
and
xchg
out
test
aas
or
in
cvttps2pi
sbb
jg
cmp
lret
js
sub
mov
xor
push
sub
cltd
negb
in
cmp
inc
pop
mov
or
sub
pop
sub
add
int3
loopne
xchg
iret
inc
push
add
jg
xchg
jb,pt
addb
lcall
jecxz
ror
push
das
out
xchg
cmp
icebp
sahf
xor
sbb
cli
xchg
aaa
push
jmp
neg
sbb
jmp
rcrl
cltd
push
stc
rorl
gs
leave
mov
sbbb
rorl
cli
loope
inc
popa
cmpsl
ret
iret
fdiv
adc
or
mov
in
int
jp
insb
cli
or
pop
mov
out
dec
in
cmp
scas
mov
mov
repnz
jl
adc
cwtl
ljmp
ret
loop
or
xchg
negb
push
hlt
xchg
push
jmp
jl
dec
loopne
adc
out
and
or
stos
iret
mov
dec
bound
and
sbb
lret
test
loop
mov
sbb
cli
pushf
xor
fwait
mov
adc
shrl
ret
icebp
imul
sub
addl
mov
push
jae
pop
adc
bound
lret
inc
adc
mov
scas
xchg
aad
lret
jle
fs
loope
adc
inc
in
imulb
shrl
mov
mov
ss
popa
xorl
push
jmp
sbb
and
pusha
aam
add
jmp
mov
cli
cs
xchg
pop
sbbb
pop
mov
jmp
sbb
mov
iret
orl
mov
and
aam
fcmovnbe
lods
outsl
push
test
cmp
adc
jl
shlb
dec
mov
dec
loope
testl
call
push
mov
push
mov
push
sbb
repnz
les
jne
in
in
mov
xchg
cli
subb
push
sub
sub
mov
fcomps
les
repz
imul
decl
fs
dec
push
xchg
pushf
inc
out
aad
scas
push
pushf
cli
jne
jae
mov
xor
arpl
mov
ret
mov
popf
mov
mov
pop
pop
adc
mov
lea
out
je
dec
cmpsb
iret
les
jno
jne
inc
xchg
pop
rcrl
push
stos
lock
dec
cmp
mov
je
mov
fdivl
lods
xlat
imul
xchg
mov
mov
lea
xchg
add
cmp
repz
into
pop
out
cli
or
dec
movsb
js
cmp
add
adcb
aam
sbb
popf
ret
outsb
scas
mov
push
pop
in
add
scas
loope
cld
nop
pop
inc
jl
ret
lret
fs
mov
add
mov
lea
and
stos
call
or
hlt
pop
mov
mov
adc
bound
fnstsw
or
jno
dec
shrb
addl
or
push
xor
cmp
enter
fimuls
and
or
or
cmp
mov
es
mov
pusha
test
sbb
cmp
xchg
rclb
mov
ror
mov
sti
repz
adc
icebp
mov
inc
push
xchg
insl
sub
ret
jae
pop
jae
xchg
xor
leave
and
mov
xchg
xchg
enter
fistpl
bound
loope
ret
ret
jmp
adc
push
int3
pop
mov
sarb
xchg
inc
or
cmp
into
cmp
movsl
cltd
jmp
push
sub
fimull
push
adc
mov
int
jge
mov
add
lret
cs
push
mov
cmp
add
int
push
es
mov
imul
pop
xchg
imull
mov
sub
out
xchg
pop
mov
aas
sbb
cmp
adc
cwtl
sub
dec
push
mov
jge
cmp
or
add
mov
andl
fs
mov
sub
ds
aam
popf
or
adc
cmpsb
cmpsb
sub
pop
dec
push
outsl
dec
mov
sti
jp
pushf
outsl
andl
popf
shlb
aas
movl
inc
cmpl
or
sub
js
imull
ja
dec
sub
call
cld
pop
mov
fwait
sti
stos
inc
sub
in
pop
rcrl
dec
outsl
xchg
stos
inc
les
xor
mov
pop
xor
mov
jmp
lods
pop
cmpsl
xorl
enter
adc
mov
ljmp
roll
sahf
addl
dec
add
in
fs
fnsave
xor
in
clc
ja
fwait
xor
je
add
mov
cmp
lock
lahf
push
sbb
or
test
fs
lock
movb
fsubl
daa
add
xor
arpl
icebp
mov
leave
jp
mov
je
jno
dec
sti
or
mov
insl
fdivl
push
cmp
cmp
push
dec
add
xor
and
lret
stos
xor
movsl
scas
ficomps
sbb
mov
add
nop
js
sbb
push
rcr
jbe
adc
imul
imul
mov
push
cmpsb
push
or
std
shlb
rcrb
daa
mov
and
popa
pop
into
xchg
sub
iret
hlt
jecxz
insb
adc
xorl
imul
icebp
fcompl
pop
pushf
xor
pop
jg
push
fidivrl
vfnmsub231ps
das
in
sub
or
addr16
push
inc
and
adcb
int
outsl
jmp
jbe
cmc
aam
cs
mov
insb
loop
scas
inc
cmp
outsl
jnp
pop
int3
mov
mov
icebp
movsl
fwait
insl
enter
pop
mov
paddusw
jns
or
dec
repnz
and
decl
int
cmp
addr16
jecxz
xchg
leave
shr
cli
mov
mov
or
cmpsl
mov
mov
or
lds
pop
cmp
les
xchg
add
gs
jae
or
push
inc
and
lret
test
lahf
in
or
rcll
and
fnstsw
ja
pusha
and
repnz
fsubl
ja
movsl
mov
test
cmp
mov
scas
mov
add
cmc
xor
xchg
adc
jns
insl
jnp
xor
scas
call
and
rsm
or
pop
jbe
push
sbb
jge
lock
add
xchg
xchg
push
aam
jecxz
dec
cwtl
mov
shll
push
scas
out
stos
pop
inc
xchg
sub
das
movsb
sub
out
rolb
dec
push
pop
jae
push
dec
aam
pusha
mov
aaa
or
mov
cmp
pop
fiadds
adc
fdivp
cmp
xor
and
fnstenv
pop
loop
adc
lret
in
ds
sahf
mov
aaa
lret
cmpsb
imul
fdiv
xor
cmpsb
addr16
sub
xchg
push
or
icebp
mov
stc
pop
cli
push
je
jne
jne
mov
push
test
xor
das
int
add
pop
shr
mov
outsb
pop
ret
push
ret
pop
ret
mov
push
jl
in
data16
mov
xchg
add
or
dec
sub
mov
and
jmp
mov
cmp
mov
xor
push
fiaddl
popa
pop
out
iret
in
mov
and
push
mov
popf
pop
jae
dec
mov
in
testb
mov
adc
inc
sbb
aaa
xor
push
das
ss
into
notl
sti
jns
push
lods
adc
jb
repnz
mov
cmc
dec
outsb
cmp
in
pop
insb
cmc
mov
jg
imul
into
in
aaa
jns
shrb
inc
mov
dec
dec
cmpsb
loopne
jbe
iret
push
and
lret
les
pop
loop
cli
bound
adc
repz
arpl
lcall
inc
out
lods
push
xchg
push
inc
dec
sub
mov
int
sbb
pop
xchg
test
bound
mov
jp
or
lods
into
outsl
or
mov
aam
mov
or
aam
xor
mov
mov
cmp
add
inc
mov
fildll
pop
push
sub
insl
adc
stos
daa
cmp
ud0
ja
mov
ja
ss
clc
imul
xor
mov
sbb
cmpsb
dec
jg
inc
mov
sub
movsl
and
mov
nop
mov
ret
dec
nop
imul
ljmp
call
pop
xchg
sub
jae
jae
jmp
add
dec
loope
dec
cmc
push
insb
adc
xor
mov
movsb
cs
lret
mov
or
fsubs
mov
incb
push
ret
repz
pop
hlt
or
ds
dec
ja
cmpsl
inc
pop
loopne
fdivs
dec
push
cmp
sub
pop
insb
sti
jle
lock
pop
addl
outsl
int3
out
dec
or
dec
in
xor
jecxz
add
xor
ja
je
call
inc
and
sub
mov
mov
bound
sti
xor
sub
out
xchg
std
leave
test
push
sub
shrb
movsb
mov
ror
cmp
lods
gs
jae
fbld
pop
loopne,pt
push
mov
push
cmpsb
movlps
adc
ss
jne
shrb
je
and
fcompl
fwait
pop
cs
imulb
les
divl
push
jne
fisubrl
lret
cmp
pop
inc
test
js
pop
mov
into
add
sbb
nop
adc
sbb
and
jbe
pop
pop
sub
add
or
repz
add
xor
filds
cwtl
add
add
pop
or
insb
loopne
cld
icebp
add
xor
test
xchg
xchg
dec
pop
and
inc
jbe
cwtl
push
stc
push
mov
mov
fidivs
ja
jg
jne
sbb
mov
pop
xor
mov
int
insb
popf
jne
sarl
shl
inc
push
jl
mov
lcall
xor
stos
mov
mov
pop
or
lods
xchg
add
js
rcrb
sub
rclb
sbb
sti
std
scas
lds
fwait
test
and
fs
dec
xchg
mov
mov
xlat
mov
cld
jge
or
cmp
xchg
jle
mov
jne
pusha
stos
mov
xchg
add
xor
adc
dec
imul
test
xor
cmpsl
xor
add
addr16
jb
les
ljmp
xchg
loopne
or
cmpsb
jns
fdivrs
push
cwtl
add
lcall
in
pop
aad
xor
push
out
add
test
dec
pop
push
cmp
jne
inc
xchg
sub
and
jb
mov
addl
ja
inc
stc
sbb
cmp
sti
push
push
outsl
push
mov
outsb
stc
popf
sbb
cmp
sbb
jo
dec
js
test
adc
lcall
sahf
sbb
mov
pusha
scas
js
addb
mov
enter
int3
add
sbb
dec
push
cmp
dec
ds
xlat
mov
xor
or
lea
mov
hlt
mov
xchg
mov
mov
int
adc
out
inc
xor
shll
test
fstps
rcl
cmp
cmp
sbb
mov
loope
add
sub
or
inc
stos
push
push
addr16
scas
cmp
mov
cmc
mov
fsubs
andl
into
cmp
decl
xchg
aas
xchg
push
pop
sahf
adc
pop
leave
mov
add
ljmp
aaa
adc
inc
cmpsl
pop
js
sar
xchg
movsl
icebp
sbb
cltd
mov
mov
add
aaa
fwait
lods
jmp
adcb
orl
or
mov
mov
sti
adc
movl
xlat
xchg
cltd
std
popf
dec
pop
aaa
sbb
dec
sahf
cmc
imul
cwtl
int3
mov
out
lea
test
movsl
dec
add
dec
scas
leave
mov
xlat
stos
scas
cmc
sub
or
pop
push
into
push
cltd
xor
std
in
xchg
ss
sti
xchg
mov
cmp
adc
fstps
mov
test
cmpsb
cmpl
adc
push
xchg
jl
sub
ficomps
pop
xor
repz
push
lret
xor
sbb
inc
fiadds
movsl
xchg
xor
xchg
stos
mov
test
xchg
test
adc
mov
sahf
shr
out
inc
xchg
pusha
jno
shr
push
xchg
mov
add
lods
inc
gs
in
adc
mov
mov
out
cltd
pop
insb
add
and
imul
add
or
adc
sahf
ja
fwait
and
sub
gs
ret
lret
adc
into
xor
and
jg
fstl
stc
das
inc
in
lea
rorb
pop
or
or
daa
mov
pop
loope
loope
popa
icebp
shrb
lahf
lcall
arpl
mov
lds
and
sub
pop
stc
and
dec
add
imul
jmp
shl
aaa
push
pusha
mov
push
mov
leave
aaa
into
push
xlat
cmpsl
push
pop
shr
testl
cmp
sbb
mov
mov
lret
roll
in
stc
nop
je
dec
test
and
in
mov
cmc
cmp
sbb
aad
add
leave
dec
addr16
push
mov
mov
xchg
mov
sbb
rcrl
data16
cmp
mov
dec
ret
movsl
sub
cli
xchg
add
imul
shrb
orb
adc
js
fwait
sti
fs
ret
and
movsb
inc
push
dec
fnstsw
bound
lock
jge
mov
xchg
sub
in
mov
ret
and
inc
inc
pop
adc
sbb
jae
sbb
add
fldenvs
addr16
xchg
out
in
popa
mov
fdivrl
jb
mov
cmpsb
lock
sub
jo
pusha
fdiv
mov
test
daa
out
lret
mov
scas
int
subl
push
xchg
mov
les
sub
push
xchg
mov
mov
jp
test
shrl
jno
add
mov
xchg
movsb
and
sub
or
outsl
push
call
fs
pop
xchg
cs
push
jge
or
cmp
fldenv
hlt
stos
aaa
fiaddl
rorb
inc
mov
stos
mov
fdiv
jno
pop
fidivs
cmp
push
shll
shrb
cmpsb
dec
nop
js
bound
lcall
cmpsl
or
cmp
jo
loopne
rsqrtps
sti
cmp
add
dec
shll
dec
push
pushf
dec
mov
push
cmp
lea
or
cltd
arpl
in
inc
cmpsl
sbb
jp
dec
inc
aas
shrl
stos
cmpsl
adc
mov
je
sbb
pop
mov
aad
lret
imul
loope
nop
cmp
sub
mov
xor
add
add
jne
inc
push
adc
dec
dec
fsubrs
sub
repz
jl
jo
ficomps
into
imul
ror
pop
adc
adc
sbbb
in
aas
sbb
xor
mov
dec
mov
int
xor
and
inc
xlat
fiaddl
dec
arpl
mov
xchg
cmp
pop
add
sub
jl
in
adcl
cmp
iret
movsl
icebp
pop
jnp
cmp
xchg
insb
mov
jp
stc
repz
sbb
jle
in
xor
add
or
test
decb
shlb
push
add
or
mov
adc
ss
push
in
fsts
aaa
mov
imul
clc
pop
sub
aad
adcb
dec
ds
jb
dec
std
mov
das
adc
cltd
int
add
push
insb
add
pop
icebp
mov
jb
stos
pusha
js
mov
ret
ret
sub
xor
push
imul
xchg
push
xchg
cmp
and
xlat
mov
xchg
mov
fistps
jge
mov
xchg
sub
sbb
shrl
fs
subb
lahf
jecxz
clc
push
aad
sub
cld
scas
xchg
sub
dec
pop
ret
pop
adc
jecxz
mov
mov
add
cmp
push
and
push
jp,pt
scas
cld
xchg
mov
xorb
xor
fnstenv
sarb
fsubrs
sub
add
pusha
cmp
fidivrs
flds
incl
repz
and
sub
jmp
cmpsl
jmp
mov
sahf
mov
adc
or
mov
sub
in
xchg
cltd
mov
cli
dec
ret
rorl
shlb
inc
sbb
jecxz
jns
pop
sbb
lods
ret
add
outsb
cmp
or
mov
pop
mov
push
and
repz
popf
sbb
int
sub
test
push
repz
dec
and
aam
clc
dec
fnsave
jmp
cli
loope
push
and
inc
cwtl
fmull
cli
fisttpl
ret
es
sub
fsubrl
cld
inc
adc
jp
out
and
pop
add
outsb
sbbb
lret
hlt
xchg
push
dec
hlt
dec
mov
push
leave
pop
fcoml
bound
jae
ret
mov
loop
cmp
cmp
push
rcrl
cmpsl
ret
adc
nop
xchg
push
mov
sbb
test
pop
xchg
sbb
sbb
sbb
dec
pop
icebp
enter
mov
inc
faddl
cmpsb
arpl
mov
jl
call
add
arpl
les
pop
es
pop
add
xchg
cmp
pop
xchg
ficomps
idivb
rclb
mov
xchg
aas
test
lods
inc
add
sub
xchg
sbbl
or
in
push
pop
gs
dec
mulb
xchg
aaa
pop
shlb
inc
jmp
sub
push
mov
aaa
shrb
in
add
xchg
add
int
hlt
mov
jb
push
and
sub
inc
pop
adc
nop
mov
notl
xor
mov
out
nop
cs
pop
mov
adc
jg
movsb
sub
cmpsl
add
cwtl
pop
fistps
aas
jle
jg
fdivrl
adcl
pop
add
shll
jp
ja
dec
mov
jp
xor
lcall
stc
adc
incl
inc
insb
push
jne
inc
push
push
xchg
fucomp
enter
cmovb
jmp
into
xchg
std
es
adc
lock
lds
mov
fyl2x
and
in
push
fnstenv
nop
aas
add
cmpsl
xchg
sub
jecxz,pn
add
cmp
pusha
lahf
sti
mul
jge
jecxz
mov
or
fisttpl
cmp
pop
rcr
jo
cmpsb
mov
addl
mov
push
mov
sahf
addr16
xchg
mov
add
push
es
outsb
cmp
jae
adc
dec
push
lret
or
std
cmp
mov
stos
pop
cmp
push
jns
push
gs
xchg
mov
int
inc
out
pop
fnstcw
enter
jp
sub
aam
and
jmp
and
inc
mov
insl
mov
sti
fwait
addr16
xchg
call
and
xchg
fcomps
mov
mov
ret
sub
cmp
dec
dec
faddl
rol
push
inc
jle
nop
jl
sbb
jle
xchg
enter
mulps
popf
lret
jb
mov
mov
cmpb
outsb
iret
dec
fwait
xor
sub
jg
fsubl
addr16
xchg
fildll
in
mov
imul
leave
fucomip
cli
stos
test
jp
xor
dec
mov
js
cmpsb
mov
sbb
sahf
test
xor
fyl2x
mov
xchg
pop
cmp
fwait
sti
xchg
int
es
mov
sbb
pop
fsubrs
xchg
sbbb
aaa
jbe
addr16
jo
push
cmp
sahf
jb
dec
xchg
sti
push
or
shlb
insl
xchg
mov
int3
mov
nop
insl
mov
cmpsl
cmp
in
iret
jecxz
sbb
dec
xor
arpl
sbb
call
mov
cmpsb
in
push
out
shr
pop
cld
movsl
lahf
stos
shrl
in
rorl
dec
fistps
in
es
mov
outsb
loop
leave
and
add
push
cmpsl
push
ljmp
or
out
stos
sub
mov
mov
fsubrp
mov
push
cltd
lret
fsts
jnp
push
cltd
dec
cmpb
pop
pop
cli
nop
je
push
out
test
cmc
pop
pop
testl
or
add
pop
adc
mov
jbe
push
push
pop
cli
jns
inc
leave
bnd
mov
pushf
mov
test
into
dec
std
test
adcl
push
int
cltd
add
outsb
into
cwtl
insl
cld
sbb
divl
push
xchg
mov
out
mov
es
daa
outsl
add
insb
shufps
inc
data16
scas
mov
inc
ficoms
daa
or
sub
or
gs
cmp
mov
xchg
mov
pop
add
divb
sub
jae
push
cli
push
orl
addr16
daa
push
inc
pop
lods
pop
imul
fdivl
jge
mov
jmp
into
push
dec
jmp
xchg
jmp
add
xchg
adc
and
leave
shrb
lods
jmp
lcall
cld
sub
mov
sbb
xchg
jge
push
adc
cmp
lods
lock
je
leave
pusha
inc
pop
insb
jb
xchg
pop
mov
push
xchg
test
jl
enter
test
push
push
jmp
and
pop
adc
lods
cmpsb
mov
mov
or
mov
jg
mov
xchg
rol
je
or
push
jp
xchg
mov
movsl
js
fisubrl
fcomps
ja
cmp
xchg
inc
mov
mov
mov
pop
xor
lret
cmp
and
mov
dec
mov
movsb
cltd
packuswb
repz
cmpsb
fs
fwait
cs
jbe
xor
into
daa
and
in
cmp
pop
xor
jmp
into
gs
lea
jb
mov
sub
jno
sbb
dec
mov
dec
pop
pop
fsts
pop
inc
pushf
insb
arpl
sbb
lret
icebp
jns
sbb
jl
test
hlt
mov
mov
test
xchg
fwait
pop
lds
cmpsb
loope
mov
ret
xchg
movsl
or
aam
iret
pop
mov
add
push
in
xchg
mov
mov
lods
fmul
ret
outsl
pop
fadd
push
roll
fwait
ss
out
data16
cmp
xor
dec
pop
mov
fwait
pop
out
or
outsb
pop
add
xchg
insb
ret
sbb
sahf
insl
add
outsb
or
imul
adc
xchg
xor
das
pop
xchg
xchg
lret
nop
daa
roll
push
mull
xor
push
repnz
sbb
lret
nop
sbb
popa
pop
ja
dec
sub
jns
jmp
mov
cli
daa
movsl
popaw
mov
add
stos
out
pop
jne
test
sub
popf
adc
mov
in
pop
jp
mov
jl
xor
repnz
aas
add
fbld
xchg
cmpsl
mov
xchg
add
cwtl
dec
push
iret
and
push
mov
test
sbbb
mov
push
mov
cmp
fdiv
push
mov
loopne
nop
inc
stos
leave
pop
repnz
fldenv
and
mov
test
inc
stc
pop
cmpb
arpl
or
xor
jp
inc
xchg
loopne
hlt
fs
int3
sbb
add
shrb
enter
shll
inc
mov
cli
push
xchg
or
add
sarb
stc
pop
jo
adc
adcl
sbb
aaa
cld
xor
xor
push
cwtl
adc
pushf
cli
push
shll
call
dec
mov
cmp
push
mov
inc
jno
mov
pop
xorb
jg
test
outsl
in
or
adc
dec
fs
in
jns
inc
ficoms
jbe
nop
push
jae
add
loope
mov
imul
sbb
stos
imul
fs
cmp
xchg
lea
mov
xlat
pop
imul
jg
mov
aas
push
pop
jbe
mull
or
sub
sti
movsb
sub
out
xor
xchg
push
shll
add
add
push
lcall
jo
push
hlt
loopne
pusha
adc
add
adc
cwtl
inc
rolb
lods
sbb
leave
jo
lcall
jno
imul
lea
stos
cmp
push
scas
out
dec
inc
mov
xlat
lahf
push
hlt
test
js
aad
test
sub
popf
movswl
push
push
shrb
and
dec
push
dec
out
pop
lds
pop
movsb
mov
xchg
adc
mov
xchg
daa
sbb
xchg
fdivl
adc
test
sbb
sub
test
add
popa
in
dec
sbb
movsb
js
xor
adc
outsl
fbld
push
mov
or
push
fs
mov
xchg
sbb
mov
loop
mov
pushf
scas
jge
mov
xchg
int3
fwait
bound
cltd
cli
push
cmp
mov
notb
xor
stos
xor
pop
lret
cmp
adc
clc
enter
sbb
sbb
rcrl
xchg
sub
jne
mov
mov
movsl
xchg
push
in
or
sbb
aas
mov
add
es
pop
mov
jg
jns
push
mov
add
push
test
sti
leave
inc
pop
addr16
movsl
out
push
lahf
cltd
mov
andb
movsl
sbb
push
inc
arpl
mov
cmp
les
icebp
into
pop
out
loop
call
call
mov
sub
lahf
in
std
rol
jecxz
or
xor
dec
cmp
mov
pop
jbe
mov
insb
add
mov
stos
mov
mov
pop
or
mov
lods
sbb
adc
mov
sub
sub
into
jecxz
sub
scas
xchg
sub
and
mov
sbb
adc
je
neg
lret
sti
inc
mov
push
or
lock
cld
fnstsw
ss
push
ja
test
jmp
daa
mov
dec
mov
mov
leave
repnz
lods
lods
and
push
push
adc
aaa
shrb
mov
fsubl
or
push
inc
hlt
pop
jle
xlat
adc
subl
sbb
icebp
inc
data16
adc
es
subb
loope
das
movb
push
inc
dec
sbb
pop
rol
push
sub
divl
pop
movsl
stos
out
cld
fadd
adc
popa
jp
dec
jo
inc
fistpl
loop
inc
cmp
out
xchg
and
sub
and
mov
arpl
adc
push
sahf
adc
dec
add
cmp
inc
xchg
push
shl
pop
and
loope
pushf
add
push
fsubrs
sbb
mov
int3
mov
orl
sub
ja
mov
jne
outsb
push
adc
shll
daa
inc
out
repnz
push
rcrl
push
adc
adc
cli
enter
mov
cmp
inc
dec
shr
add
subl
bound
mov
jno
mov
les
roll
lret
cld
arpl
lcall
sbb
pop
in
push
icebp
add
fsubs
sbb
adc
push
nop
sub
out
sbb
imul
arpl
xchg
fidivs
mov
cmp
int3
jns
aaa
push
lds
sub
jbe
inc
testl
out
mov
mov
enter
repz
loope
add
movsl
cmp
push
mov
pop
sbb
ljmp
pushf
cli
pop
shlb
jg
inc
es
or
loope
push
insl
jbe
jo
inc
jae
cmpl
stos
inc
pop
and
add
xor
jb
add
leave
int
pop
lret
fnstsw
inc
int3
sub
push
outsl
sbb
int3
enter
dec
lcall
and
dec
adc
imul
jge
jecxz
iret
xchg
jno
inc
mov
dec
popf
pop
jo
push
pop
xchg
bound
fcmove
scas
aaa
out
pop
loop
icebp
mov
jmp
cmpsl
inc
adc
int
jp
mov
jo
or
sbb
out
popf
add
push
push
and
push
pop
addr16
pusha
sub
add
xchg
imul
loopw
fstl
mov
inc
in
pusha
arpl
rorl
jno
sub
lods
dec
es
lods
push
mov
loopne
es
adc
inc
dec
fwait
push
pop
lock
sti
jle
mov
les
cmp
add
nop
push
arpl
sbb
testl
dec
adc
movsl
push
leave
xchg
cmc
xchg
dec
pop
ret
inc
into
push
in
mov
ss
jo
cmpsb
sahf
aaa
xchg
jge
imul
push
fnstsw
sub
xor
std
push
push
jmp
cmp
pushw
jb
push
mov
std
mov
xor
fidivs
or
in
sub
and
and
mov
enter
mov
sbb
xor
mov
or
jmp
roll
cmp
sbb
push
dec
dec
xor
shll
cs
cmp
pop
push
and
sahf
lods
add
mov
int
xor
add
test
rol
outsl
jmp
ret
ret
ljmp
xor
and
fisttps
sti
jns
and
adc
int3
fidivrs
fwait
pop
jbe
cwtl
icebp
sub
out
sti
mov
pop
xchg
data16
sub
push
fsubrl
in
sbb
mov
dec
xchg
add
mov
divl
push
jmp
xchg
push
cmp
cld
mov
outsb
cmpsl
lcall
inc
jns
shll
arpl
rcrb
push
mov
enter
mov
icebp
pop
lahf
imul
jns
inc
push
push
dec
lea
lret
in
and
negl
mov
jp
fstl
pop
aam
aas
xchg
inc
aaa
hlt
inc
loop
movsl
push
inc
lcall
and
dec
and
push
cltd
jg
call
jae
mov
popa
sbb
push
jg
jno
add
movb
in
lret
out
sbb
inc
scas
mov
in
jl
mov
xchg
jl
pop
icebp
sub
fisubl
and
xchg
loopne
cld
or
popf
xor
mov
stc
mov
xchg
lea
call
repz
outsl
sahf
aam
roll
fldenv
cmp
std
ss
lods
arpl
mov
les
add
inc
pop
dec
popa
dec
es
sbb
sbb
mov
push
push
cmp
shlb
mov
jns
out
daa
decb
repnz
nop
in
inc
stos
in
out
or
test
test
sbb
lods
mov
pop
jbe
sbb
test
xor
mov
fs
inc
push
test
mov
mov
ljmp
and
daa
shlb
adcl
jmp
in
mov
mov
pop
shlb
repz
push
rclb
cmp
pop
cmpsb
cmc
out
mov
adc
push
out
jl
push
cmp
mov
push
insl
xlat
iret
pop
lret
pop
fnstsw
shr
int
iret
jns
cmp
ds
scas
pop
pop
dec
or
ja
aaa
push
jmp
out
pushf
xor
popf
sub
daa
cwtl
stos
fxch
dec
cmpsl
out
call
dec
icebp
js
cmp
sub
and
dec
fidivs
jb
in
out
push
repz
push
popf
mov
pop
lea
xor
std
or
dec
cmpsl
insb
int3
call
pop
stos
push
jno
leave
mov
dec
out
repz
cmpsl
mov
xor
orb
dec
repz
push
aam
jmp
pop
ss
les
adcb
sbb
xor
daa
mov
insb
mov
push
mov
jae
out
sti
iret
mov
mov
xor
in
push
jns
fs
xor
sarl
pop
pop
dec
cmpb
test
mov
or
sar
wbinvd
cmp
inc
data16
ja
jne
adc
push
popf
arpl
imul
insl
mov
and
push
outsb
shlb
cmpsb
imul
mov
xor
xchg
ret
or
mov
aam
testb
ljmp
sbb
xor
pop
rcrb
jae
enter
sbb
adc
addr16
xor
stc
fiadds
dec
repnz
push
pusha
push
loopne
aas
pop
aaa
xchg
jno
mov
xor
lods
and
inc
xor
inc
fldcw
adc
call
rorb
sub
xchg
ds
loop
cs
aaa
lea
cmp
sahf
dec
adc
push
mov
and
icebp
mov
stos
les
das
inc
mov
dec
popa
cwtl
flds
lcall
xrelease
mov
cmpsl
mov
fldt
lds
movsl
xor
roll
dec
push
mov
mov
shl
jb
xlat
fmull
sar
out
pop
aaa
aas
mov
jle
xchg
mov
out
push
hlt
adc
rcrb
push
jb
inc
push
and
push
adc
aaa
sahf
sbbl
xchg
inc
pop
inc
and
dec
int3
sub
jb
int3
mov
pop
insl
jmp
arpl
push
add
xor
clc
cwtl
cld
lods
ret
mov
mov
ret
mov
and
aad
addl
push
or
dec
pusha
int
jb
out
fistpl
inc
inc
push
cld
pop
scas
sub
btr
inc
mov
test
lret
jecxz
std
xor
jle
int3
fs
and
sbb
sbb
popa
stc
int
pop
mov
sti
cmp
dec
mov
xor
sbb
imul
ret
fwait
andl
mov
fldt
xor
mov
jnp
cs
imul
push
inc
iret
sbb
into
jns
mov
or
or
sbb
repz
pop
jb
xchg
aam
cmp
dec
std
sbb
insb
addr16
push
dec
or
jg
sbb
mov
mov
test
push
add
inc
sbbl
pop
hlt
mov
mov
int3
sub
dec
fistpl
xchg
pop
std
xlat
test
jl
push
leave
push
das
jo
ljmp
arpl
jmp
fidivrs
and
or
xorb
jg
mov
mov
je
pop
mov
fdivrs
insb
xchg
xor
arpl
sbb
or
or
sub
jae
adc
push
xor
sbb
xor
mov
lods
sub
pop
lret
out
jge
les
push
pop
stos
mov
mov
repz
inc
adcb
jae
jb
inc
int
xchg
daa
popa
mov
mov
fildl
btr
fldl
push
mov
pop
inc
popa
xchg
repz
ror
lea
imul
imul
ljmp
push
xchg
sbb
sub
scas
out
inc
and
andl
cmpsl
test
lock
loop
push
dec
js,pt
cmp
aaa
test
pop
inc
scas
outsl
add
jbe
pop
mov
xchg
enter
in
lods
jnp
stos
pop
lcall
adc
push
sub
xor
mov
cmp
xor
cmc
ret
in
fmul
arpl
and
xchg
sbb
test
mov
cmp
push
pop
bswap
jecxz
cs
ret
shll
or
loopne
or
inc
int
scas
ss
dec
fsubr
mov
cmpsl
mov
inc
popa
adc
arpl
push
push
movsl
imul
push
cmp
loope
in
sbb
dec
pop
shlb
dec
repnz
mov
mov
adc
xchg
mov
fs
jne
inc
imul
and
xchg
cmp
movsl
insb
pop
repz
in
inc
jb
fiaddl
inc
jle
mov
push
jb
jl
xchg
iret
pop
dec
hlt
push
add
aad
lods
dec
xor
jl
fldl
xchg
jge
lret
sub
out
mov
data16
push
mov
mov
and
aad
mov
mov
fwait
xchg
lds
in
rol
leave
rcrl
repz
cmp
xor
shlb
mov
pop
adc
lea
test
into
mov
aaa
aam
push
jmp
aaa
xrelease
icebp
cmp
jb
mov
mov
inc
lods
rcll
sti
rol
dec
lods
inc
jbe
fs
adc
push
sub
push
mov
outsb
push
xor
aas
jae
mov
pop
mov
jo
or
stc
and
fbld
dec
cmp
and
hlt
add
mov
loop
shl
sti
adc
xchg
sub
loop
out
out
mov
into
mov
add
xlat
outsb
pop
mov
cmc
push
mov
movsb
out
pop
arpl
ret
add
out
out
fimuls
sub
jo
dec
data16
in
or
adc
and
adc
fwait
xor
hlt
cmp
cmp
fidivrl
rcll
pop
or
aaa
jns
push
out
xchg
or
sbb
pop
lret
jne
xchg
mov
ja
ss
adc
mov
enter
in
sbbl
sub
sbb
test
sub
xchg
test
pop
js
in
dec
pop
test
sahf
xor
pop
jle
dec
mov
mov
or
ja
les
pop
mov
jp
mov
in
pop
daa
add
mov
ja
repz
div
mov
lret
stos
cmp
adc
push
mov
push
mov
cltd
dec
xchg
jo
dec
or
xchg
in
iret
mov
adc
or
gs
mov
inc
pop
dec
push
cmp
subl
sbb
jmp
shrl
or
mov
imulb
inc
dec
aas
cmp
fsubs
mov
std
cmp
imul
call
aas
push
inc
sbb
das
sbb
sub
jmp
pop
movsl
adc
mov
adc
mov
scas
jmp
leave
add
or
loope
push
push
jb
movsl
push
or
pop
or
mov
cmc
push
cmp
loopne
pop
xchg
aaa
xchg
push
outsb
or
cli
icebp
mov
test
sbb
adc
inc
lock
sub
es
sbb
inc
pop
lds
je
mov
test
scas
cwtl
xchg
out
or
stos
mov
add
fwait
test
xchg
add
pop
rolb
adc
enter
jl
ljmp
pop
adc
add
ja
stos
jbe
adc
mov
jmp
mov
push
pop
cwtl
pop
in
dec
xor
lcall
jns
mov
mov
in
pop
stos
add
lahf
bound
leave
int
jge
push
sbb
lcall
jnp
sbb
adc
scas
and
int
aas
push
mov
mov
cwtl
aam
dec
movsb
stos
sbb
pop
ret
xlat
xchg
mov
in
add
icebp
mov
mov
outsb
jp
dec
inc
stos
mov
add
gs
lret
push
jb
movsl
shr
push
or
and
push
out
popf
bound
dec
cmp
insb
mov
jb
cltd
lret
pop
sbb
aam
call
fstpl
or
insb
push
ret
rolb
xorb
xchg
mov
in
mov
cwtl
jne
fmuls
lea
push
mov
mov
subb
inc
lods
mov
ret
jbe
loop
mov
rorl
loop
lcall
cmc
and
data16
pop
inc
pop
aaa
repz
std
mov
dec
insl
adc
xchg
cmp
xchg
mov
sub
sbb
dec
and
sub
jnp
adc
dec
pushf
lds
xchg
mov
pcmpeqw
roll
add
jnp
mov
jo
cli
sbb
shlb
sbb
clc
dec
int3
out
lods
data16
push
xchg
xor
jecxz
xor
mov
fidivrs
rcrl
add
inc
lea
aad
push
clc
adc
mov
test
lret
push
lods
jle
js
and
jmp
loop
cli
cmpsb
fldcw
pop
aad
dec
push
xorb
jb
int3
push
inc
xchg
pop
repnz
mov
fsubl
out
sti
inc
leave
xchg
jo
insl
xor
rcrl
nop
int
sub
push
fisttpll
in
sbb
in
cmpl
mov
orl
int3
fists
insw
dec
out
jp
outsb
loope
push
jmp
xchg
push
or
in
test
adc
pop
jg
pop
sub
test
mov
and
xor
ss
lcall
outsb
jg
mov
jge
pop
into
das
cli
lahf
push
mov
data16
xchg
and
clc
add
das
push
or
jp
jl
fadds
add
inc
mov
cli
arpl
cmpsl
xchg
test
xor
push
insl
mov
mov
fwait
push
scas
popl
push
mov
and
adc
sbb
jo
negb
xor
mov
mov
arpl
in
or
cmp
xchg
xchg
dec
lods
push
aaa
dec
test
out
les
adc
inc
test
popa
clc
cmc
pusha
mov
add
mov
pop
push
mov
xor
push
out
xchg
and
imul
jmp
and
sbb
push
or
test
std
dec
call
cs
std
lea
or
xchg
stos
and
adc
or
mov
jae
pop
in
inc
dec
fwait
lret
das
fidivrl
into
lods
cmp
xlat
jbe
aad
testl
mov
cltd
stos
inc
stc
es
movsb
stc
int3
out
popa
imul
hlt
mov
push
in
add
imul
fcmovne
ret
xchg
jns
rcrl
push
jno
and
ficompl
scas
xlat
push
mov
repz
or
xchg
dec
mov
movsb
push
leave
adc
fildll
insb
cmovns
mov
addr16
cltd
adc
sbb
out
mul
cmp
in
call
xor
imul
dec
rolb
nop
dec
mov
jns
jle
fidivl
mov
lods
loope
jmp
movsl
call
iret
imul
xor
dec
bound
pop
push
and
fwait
ret
rcll
sti
in
dec
cmp
xchg
and
cmpsb
std
mov
pop
dec
filds
sbb
and
inc
jmp
loop
mov
ret
jne
mov
out
into
in
clc
adc
sub
loop
scas
icebp
pop
fildll
and
ror
test
pop
adc
test
std
push
sub
fbld
jns
ja
push
jmp
xchg
xor
xchg
xor
mov
ret
or
insb
ds
daa
or
pop
hlt
push
cmp
outsb
sub
enter
push
mov
ds
and
xchg
xchg
fwait
push
xchg
adc
icebp
adc
push
js
cmpb
movsb
jno
mov
push
loop
mull
mov
ret
or
mov
lahf
and
mov
jbe
aam
fbstp
mov
pop
outsl
mov
xor
sub
sub
push
mov
lcall
or
pop
cmpxchg
sbb
fdiv
pop
mov
push
imul
xchg
add
adc
sbb
data16
jl
insb
push
in
aaa
push
mov
fisttpll
dec
add
ret
mov
pushf
xchg
sbb
in
fsts
scas
scas
cltd
mov
shl
jne
push
and
dec
sarb
mov
mov
loope
movsb
add
into
loop
loopne
loop
call
gs
add
push
push
stc
fsubrl
pop
sahf
fmull
jo
enter
stos
test
fnstsw
pop
insl
mov
movsl
mov
xor
test
std
lret
ljmp
lcall
and
stos
xchg
xor
rcl
cld
sub
rcrb
inc
arpl
loope
push
mov
jg
add
sub
pop
and
shlb
cmp
sub
add
add
movlhps
push
jmp
nop
rorl
dec
mov
and
insb
mov
cli
mov
xchg
les
xor
ret
out
dec
cmp
lea
push
test
lret
adc
shlb
mov
jae
inc
pusha
mov
sub
mov
rcll
out
test
int
jmp
or
mov
pop
outsb
rorl
cmpsl
ds
flds
andl
fsubs
pop
lock
pop
insb
call
ja
movsb
jle
movsb
scas
lds
sub
adc
mov
push
pop
cmpsl
mov
mov
xchg
cltd
mov
loope
xor
push
outsb
insl
dec
loop
je
or
sbb
sbb
vpmaddwd
loope
push
mov
mov
mov
std
in
test
out
fldl
shlb
pop
xor
xchg
lahf
inc
fstl
or
in
jecxz
jb
movsl
call
cmc
adc
sahf
ljmp
add
inc
popa
cli
or
xor
repz
cmp
dec
push
adc
mov
xchg
pop
ss
jnp
ja
dec
in
xchg
repz
cmc
sub
dec
mov
xlat
adc
mov
jg
add
arpl
cmpsl
loopne
inc
inc
mov
lods
leave
pop
lcall
or
push
xchg
xchg
mov
pop
inc
and
or
lret
sbbl
addr16
flds
dec
repz
add
aaa
add
pcmpgtd
jns
arpl
jne
shlb
mov
lea
xor
shrl
push
or
sbb
xor
xchg
mov
xchg
adc
lods
inc
mov
ja
aam
sahf
push
mov
fdiv
push
or
fldcw
mov
xchg
popa
mov
xchg
mov
outsl
mov
pop
cmpsb
testl
cltd
cmc
jl
push
out
cmpsb
and
sti
iret
pop
add
arpl
inc
stos
inc
hlt
pop
inc
mov
sub
cwtl
lea
mov
xchg
sub
pop
and
jo
mov
cwtl
push
mov
iret
mov
sub
lret
aas
xchg
mov
ret
fbld
lock
or
out
imul
xchg
in
adc
push
or
adc
pop
push
or
js
jno
mov
and
push
out
sbb
movsb
sub
in
pop
cmp
pop
dec
or
cmpsl
out
push
sub
or
cmc
jmp
gs
mov
xchg
hlt
mov
mov
push
movsb
cmpb
cmpsl
adc
shll
popf
inc
lcall
push
push
adc
in
out
std
sbb
imul
ret
fnsave
pop
adc
xchg
mov
xchg
sub
sbb
sub
push
inc
jb
roll
rcll
aas
sahf
stos
popf
sub
les
xor
inc
cmpb
mov
dec
sahf
push
sub
pop
mov
or
test
sbb
int3
xor
xor
adc
inc
movb
xchg
mov
jge
mov
lret
jae
ds
jmp
sahf
xor
jp
mov
dec
js
xsha256
cmpsb
xchg
jge
daa
sub
xor
mov
insl
popa
mov
lcall
pop
push
sti
or
push
jmp
cld
cli
jne
and
mov
push
inc
inc
push
js
push
rcl
adc
pop
push
hlt
jl
push
dec
mov
cli
dec
das
jno
xchg
in
mov
xor
sub
and
aam
inc
fisubl
xchg
movsb
cmp
je
gs
in
aas
mov
jbe
inc
xchg
push
sbb
mov
fiaddl
movsl
jl
pop
cmp
jb
mov
andb
dec
sti
push
repnz
or
gs
js
xchg
cmpsb
add
lea
bound
adc
sbb
loopne
inc
pop
rcl
jnp
dec
mov
mov
pop
dec
loop
cs
mov
bound
mov
sbbl
call
xor
aas
xor
movsl
dec
out
fcomps
inc
add
sti
orl
fcomps
push
adc
es
lret
fsubr
jo
xchg
fs
into
or
sub
sub
int3
sbb
mov
sub
mov
xor
ljmp
fcmovne
mov
pop
loope
mov
in
fbld
out
js
movsb
idivl
adc
test
call
cmpsl
mov
rcr
inc
add
jns
inc
dec
adc
inc
lock
push
daa
es
loop
lahf
out
mov
daa
mov
lahf
out
mov
cmp
sub
out
sub
or
inc
imul
in
pop
xchg
rcll
sub
aas
in
push
mov
xchg
push
shlb
push
xor
pusha
out
cwtl
push
aad
jbe
push
bswap
cmpb
dec
popa
pop
cmp
repnz
pop
cwtl
pop
cli
sbb
push
push
jae
jge
sub
push
push
std
sub
test
clc
lods
sbb
icebp
push
arpl
cmpsb
test
lret
jns
jbe
dec
mov
xchg
aam
stos
cmpb
mov
and
adc
sub
jns
dec
enter
xchg
jmp
mov
jns
xchg
mov
fisubrl
lock
imul
xor
cltd
push
lock
imul
fcmove
sbb
mov
sbb
mov
mov
add
add
or
stos
pop
jne
mov
cmp
roll
mov
jp
cmc
mov
imul
insb
popl
sbb
shlb
mov
aad
mov
imul
sub
cmp
movsl
or
mov
cmp
jnp
dec
dec
xor
xchg
inc
inc
outsb
clc
int3
out
enter
mov
sub
adc
xlat
enter
test
fldt
popa
jecxz
ja
stos
cwtl
mov
in
decl
cltd
data16
in
cmp
pushf
lods
rorl
ret
pop
cli
cld
sarl
or
gs
adc
adc
call
popa
and
cmp
push
push
mov
sbb
roll
pop
shrb
js
jne
out
add
and
repnz
push
pop
cs
gs
lar
cmp
xor
popf
or
dec
arpl
outsl
sbbb
jmp
mov
pusha
push
not
in
rorl
jge
push
scas
imul
lods
stc
push
pop
shrb
aaa
adc
test
fs
inc
fs
test
push
adc
test
push
mov
and
sub
mov
push
shrl
sub
xor
sub
mov
leave
mov
loop
scas
push
mov
leave
jg
jno
add
outsb
xor
cld
test
scas
inc
cltd
pop
or
add
lock
mov
mov
fstpl
mov
mov
shl
mov
xchg
dec
add
mov
loopne
or
xorl
fwait
inc
sbb
dec
and
lret
mov
mov
cltd
stc
xchg
iret
roll
pop
adc
ret
cwtl
cmp
aam
add
xor
push
jecxz
cwtl
jmp
xchg
xchg
jg
jmp
sub
shr
daa
out
addr16
cltd
cmp
and
sbb
outsb
bound
mov
push
out
test
ja
xor
jb
push
movsb
mov
adc
or
idiv
or
in
sbbb
sub
push
push
pmovmskb
xor
sbbb
push
inc
out
push
sbb
repz
jbe
add
mov
xchg
das
cmpsb
arpl
jl
push
and
xor
jb
mov
jbe
insb
sbb
sbb
mov
lret
sbb
sarb
addr16
pusha
sub
and
js
pop
xor
aaa
and
sub
gs
mov
sbb
lahf
ljmp
or
sbb
int3
arpl
mov
push
jno
or
incb
dec
outsl
loop
xchg
cwtl
stos
clc
pop
sub
in
ret
out
sbb
push
add
dec
inc
xchg
in
mov
pop
das
or
and
mov
add
xchg
jb
sbb
decb
iret
fwait
adc
xchg
jge
jnp
cmp
inc
jno
imul
cmc
js
mov
repnz
pop
outsb
jp
in
sbb
int3
xchg
gs
push
or
jne
pushf
xor
jb
fsubrs
mov
vxorpd
popf
hlt
xchg
cmpsl
pop
enter
aad
jno
fucomp
data16
mov
and
mov
jp
data16
sub
leave
mov
adc
push
pusha
in
std
xchg
and
cli
push
addl
loop
jecxz
xlat
mov
outsl
clc
jge
shrl
fcmove
test
push
or
outsl
cmpsl
test
pop
shld
ret
xor
xor
pop
push
adc
sbb
push
jae
cmp
ud2
pop
adc
test
add
scas
daa
add
cmc
dec
arpl
pop
ljmp
sti
mov
adc
jo
pop
jae
push
pop
push
scas
pop
int3
ret
mov
mov
leave
iret
out
mov
insl
mov
add
lret
ljmp
push
leave
fwait
jecxz
movsb
daa
popa
sbbl
push
mov
and
xchg
cmp
lods
xchg
and
movsl
scas
dec
loope
inc
mov
stos
push
mov
xchg
cmp
popa
xor
mov
jg
mov
icebp
push
out
mov
xchg
pop
jo
arpl
add
iret
fsts
adc
fs
xchg
dec
fcompl
in
dec
inc
xlat
add
shrb
mov
loope
cmp
adc
xchg
pop
mov
dec
loop
aas
inc
fdivrl
loope
leave
loop
arpl
xchg
and
jo
mov
xchg
popf
test
ss
jne
cwtl
push
movsl
cmp
ficoms
jle
outsb
adc
into
xchg
xchg
insb
dec
push
inc
sbb
mov
fs
scas
lcall
divb
dec
and
mov
mulb
sub
movsb
notl
in
dec
pop
js
es
gs
sbbl
mov
lahf
mov
out
stc
inc
js
xor
jbe
add
inc
gs
int
in
sbb
aas
push
cmc
sti
out
xchg
jb
cmpsl
scas
mov
sbb
int
cli
jno
stc
pop
orb
test
loop
sub
data16
sti
push
sub
cmp
inc
inc
hlt
dec
add
mov
or
adc
fistpll
push
in
lds
stos
sub
je
jo
sub
jl
xchg
fimull
in
add
push
jmp
xchg
jecxz
sub
call
cmp
test
push
push
scas
in
mov
and
or
mov
aad
hlt
push
add
enter
movsl
decl
dec
mov
push
pop
or
sbb
sub
pop
xchg
jb
das
mov
pop
fldcw
mov
fisttpl
testl
test
pop
dec
cmp
movsl
mov
sub
xchg
cltd
idivl
pop
aas
jne
stos
and
xchg
mov
mov
enter
sub
push
cmp
icebp
cs
call
shrb
in
xchg
add
es
dec
fcmovne
cmp
mov
push
imul
mov
pop
pop
mov
hlt
push
into
and
or
sti
lock
in
lret
data16
js
and
arpl
jle
jb
divl
dec
loopne
xor
jno
aas
addr16
jo
jge
mov
stc
jnp
mov
and
adc
dec
push
jge
pop
out
fnstcw
gs
ret
enter
xchg
inc
xchg
enter
dec
popa
mov
fucomip
dec
sub
mov
stc
mov
sti
shl
scas
scas
in
push
add
ljmp
push
pushf
subb
sub
pop
jmp
gs
daa
dec
jmp
or
insl
int
push
mov
inc
dec
and
jmp
mov
xor
jmp
es
lret
adc
lods
je
mov
shl
dec
push
cli
adc
push
dec
xor
fcompl
inc
push
and
inc
cltd
xor
imul
out
rcrb
in
push
outsb
loope
xchg
mov
fnstcw
and
sub
xor
push
cltd
imul
mov
movsl
or
scas
cmp
fisttps
popa
sti
popf
subl
and
mov
data16
adc
or
call
mov
jb
int
pop
sbb
fs
jbe
sub
jb
adcb
sarl
icebp
pushf
push
mov
aad
jl
push
jno
pop
je
fwait
pop
pop
aas
cmpsb
cmp
cmp
daa
pop
or
xor
xchg
sub
sbb
ss
repnz
lods
clc
cltd
and
or
inc
xorl
test
insb
or
cmp
mov
dec
sub
or
mov
push
mov
sbb
sahf
xlat
daa
adc
and
jmp
mov
ret
testb
movsl
mov
mov
and
xlat
nop
inc
xchg
and
mov
jno
sub
test
mov
ja
stos
shll
mov
jno
lret
adc
fidivl
xor
sbb
xchg
mov
ljmp
aam
icebp
rorl
imulb
psraw
pusha
nop
xchg
addb
andb
mov
test
stos
jge
or
mov
sbb
lea
cmp
sub
dec
sub
dec
jge
aaa
or
hlt
push
jo
fwait
test
das
pop
jbe
jmp
push
xchg
imul
shr
xchg
jae
xchg
popa
out
je
int
xor
mov
aas
ret
sbbl
sbb
je
cwtl
ret
insb
inc
pop
out
mov
jae
in
inc
mov
in
xchg
loope
movsl
enter
loopne
sub
loope
adc
inc
cmpsl
mov
out
ja
fisttps
out
enter
lahf
arpl
lods
push
je
and
pushf
imul
call
aad
fldl
adc
dec
lcall
mov
xor
je
pop
test
inc
fbld
rolb
jae
es
fwait
add
leave
or
and
jne
jno
jno
pop
negb
xchg
inc
lds
dec
testb
cld
sub
psrld
xchg
mov
sbb
cmp
scas
inc
jecxz
out
dec
cmp
mov
dec
je,pn
cltd
pop
repnz
adc
fisubrl
xchg
cmp
pop
scas
je
dec
daa
nop
fs
repz
pop
xor
add
lahf
xorl
mov
adc
xchg
mov
jne
jmp
mov
and
into
jno
push
mov
into
push
out
cmc
aas
outsb
insl
test
ja
mov
jnp
in
cmp
pusha
fildll
xchg
insb
mov
pop
fcomp
flds
sbb
mov
roll
sub
sub
push
jno
add
sub
aaa
mov
mov
cmp
jecxz
ficompl
mov
and
mov
mov
mov
lret
sub
testl
lcall
stc
and
fs
pop
lcall
sub
push
add
popf
in
pusha
xchg
outsb
icebp
cs
jb
cmpsb
sbb
jge
andl
xchg
inc
xor
mov
das
pop
or
mov
jb
mov
les
sbb
jne
mov
and
jle
xchg
mov
jle
jb
sbb
push
dec
stos
inc
js
cwtl
pushw
dec
cltd
sbb
mov
lea
jmp
and
inc
sub
lds
sbb
mov
add
add
test
imul
adc
pop
lret
movl
dec
into
fists
sbb
lea
mov
imul
lods
push
aas
notl
adc
or
push
dec
add
dec
out
add
inc
insl
in
sahf
pop
xor
in
or
je
adc
add
add
cmp
jge
movsl
aaa
cmpsl
ret
xchg
adc
jne
mov
sbb
loop
sbbl
adc
repnz
mov
imul
loopne
pop
and
lea
or
fdiv
aad
dec
outsl
lock
mov
push
ret
push
sbb
fcoms
jae
test
std
repnz
scas
xchg
lods
xchg
cmp
andb
aam
test
sti
jl
lock
setg
ss
test
xchg
add
outsl
in
jno
pop
sub
jb
cmp
cmpsb
mov
mov
popa
rcll
pusha
loop
sahf
negb
movsb
push
scas
or
sbb
ds
cmpsb
repnz
dec
and
xor
sub
cmpsl
push
dec
cmp
xchg
xchg
xorl
inc
fiadds
rclb
roll
dec
rorb
loopne
jecxz
inc
adc
ljmp
mov
pusha
sbb
push
adc
shl
or
push
sbbb
push
dec
add
loop
mov
loope
hlt
aam
jne
push
scas
sub
or
das
push
dec
jmp
mov
xor
sbb
sti
dec
push
jg
cmp
sub
stos
push
lods
push
into
cmp
mov
lods
pushf
mov
inc
cmpsb
jp
js
mov
xlat
dec
mov
stc
pop
leave
rolb
aas
ret
movsb
aas
stc
push
inc
push
xlat
add
sbb
push
dec
add
cld
xchg
pusha
mov
push
in
negl
je
cltd
lock
or
lret
int
das
repz
cmp
or
xchg
std
mov
rcr
sub
stos
add
xor
dec
jo
jmp
xor
lds
xchg
and
loop
ret
mov
call
jb
ja
notl
xchg
pop
xchg
rorb
fwait
enter
lcall
or
roll
xor
cwtl
aas
mov
aaa
or
sub
fadds
lahf
fdivl
scas
scas
popf
repz
xlat
dec
sar
xlat
jle
inc
sbb
ret
daa
cmpsb
push
test
or
leave
cmp
add
push
imul
xor
sbb
mov
push
xor
push
mov
orb
bound
std
mov
lea
xchg
push
test
mov
pop
imul
inc
mov
dec
or
repz
orl
les
fwait
cmc
dec
inc
jne
xchg
es
xor
or
loope
or
hlt
mov
addr16
test
cli
cmp
add
xchg
push
mov
scas
aas
dec
xchg
loopne
pop
enter
lret
jmp
shr
xorb
je
cmpsl
sbb
pop
xchg
js
push
into
rcrw
add
test
jg
cmp
cmp
cmp
cmc
jp
push
jmp
and
push
popa
testl
ljmp
in
push
jmp
add
dec
sub
insb
pop
jp
cwtl
jno
jl
adc
sub
sub
mov
daa
repz
jnp
outsl
stos
pusha
inc
es
jmp
rcrb
mov
repnz
or
fdivs
xor
jmp
fsubrp
cmp
or
jne
dec
scas
or
out
test
push
cmp
jo
push
mov
xlat
jg
test
push
sbb
loopne
ret
pop
cmp
ret
andb
in
repnz
or
je
je
mov
icebp
xchg
inc
testl
rclb
inc
push
clc
addr16
fs
xchg
xor
mov
loopne
lods
and
xor
mov
or
pop
or
push
ljmp
xor
sarb
mov
xor
sub
push
in
aad
push
cmp
int3
xchg
add
lds
sub
or
push
pop
incl
std
mov
sbb
loopne
dec
mov
push
mov
sub
nop
dec
ljmp
stos
icebp
movsb
hlt
or
cmpsb
mov
lret
jmp
test
in
fldenv
in
out
push
push
sub
dec
fnstenv
sbb
jge
sub
push
and
jno
sbb
lods
dec
sub
mov
data16
testl
mov
fstp
and
push
addr16
sub
insb
fwait
sub
mov
iret
or
mov
clc
mov
test
xor
notb
inc
leave
inc
xor
movsl
mov
cmpsb
icebp
push
xchg
in
adc
pop
xor
outsb
outsb
mov
orl
notl
mov
movsl
out
xlat
outsb
call
cmp
jo
setbe
arpl
lods
ja
repnz
jne
mov
add
leave
stos
jmp
sbb
stc
or
pushf
dec
je
ficompl
and
out
adc
push
add
push
xor
pop
out
lea
cwtl
jb
adc
cmpsl
xchg
lahf
sbb
push
jb
xor
filds
out
mov
insl
dec
fdivl
in
adc
xor
gs
mov
sub
xchg
xor
or
pop
mov
scas
xorb
and
inc
sub
mov
aas
pop
cmp
and
push
ljmp
xchg
jne
sub
ja
pop
fwait
push
jae
test
stos
stos
das
cmp
xlat
pop
cmc
loop
test
xchg
cmp
loopne
lock
mov
int3
lea
insb
daa
push
xchg
popa
fmulp
lods
add
loop
adc
cmpsb
lea
ljmp
xchg
dec
mov
mov
sarl
mov
pop
in
cmp
sub
mov
dec
leave
sub
push
imul
add
les
mov
and
ja
cltd
fdiv
cltd
cmp
in
imul
jb
addr16
fs
hlt
add
push
cmpsb
fisttpll
je
cwtl
mov
add
and
adc
lcall
in
mov
add
jl
stos
mov
or
jo
xchg
add
mov
andb
mov
aas
xchg
xchg
push
cs
jp
jge
pop
pop
hlt
stc
pop
and
ss
test
imul
out
xor
into
adc
les
shrb
mov
xchg
mov
fwait
xor
testb
cmp
add
lock
pusha
cmp
and
cmp
jecxz
mov
adc
hlt
push
aad
cltd
and
sub
int3
push
dec
push
int
es
push
xor
ljmp
pop
sbb
stc
sahf
lret
inc
mov
mov
insb
pop
mov
std
sbb
and
push
inc
mov
push
imul
xchg
xorb
or
out
andb
or
add
fidivl
insl
add
in
test
call
arpl
rolb
fimull
out
sbb
int3
out
push
sti
pop
fcomip
fidivs
test
pop
adc
push
inc
mov
inc
and
push
push
cmc
mov
pop
mov
inc
push
sub
fildll
xchg
pop
in
shrl
pop
pushf
pop
xor
fbld
sub
repz
xor
mov
fbstp
in
push
sub
inc
fdivrl
push
mov
pop
cwtl
cmp
arpl
and
sub
push
push
dec
inc
imul
aas
sbb
movsb
cmp
xorl
mov
add
jecxz
shrb
fwait
adc
inc
cmp
mov
out
daa
int
pop
jmp
inc
in
push
and
mov
aas
xor
jo
push
test
or
mov
lods
xor
in
std
push
shrb
pop
push
out
adc
in
adc
gs
loop
lock
jl
jbe
or
frstor
pop
and
cmp
push
out
adc
lods
ret
dec
mov
rcrb
dec
outsb
xchg
dec
add
jp
jo
js
pop
add
loop
xchg
enter
push
jmp
and
inc
cmp
pop
xor
lods
sti
xor
mov
mov
pop
adc
in
adc
mov
push
cltd
ds
int
inc
movsl
test
jle
loop
add
add
sub
or
int3
out
jne
xchg
cmp
jl
pop
cmp
das
fdiv
sbb
ss
inc
test
push
repz
xchg
mov
sti
cmc
and
push
adc
lds
adc
dec
mov
pop
adc
jle
mov
leave
stos
outsl
cmp
faddl
addr16
push
add
mov
sti
jnp
inc
jo
push
xlat
in
inc
pop
aaa
add
mov
in
mov
pushf
aam
ja
mov
and
dec
imul
dec
mov
jge
mov
cmpsl
in
push
or
adc
les
lahf
ficoms
icebp
fiaddl
pop
mov
mov
jmp
lock
sbb
sbb
xor
push
push
cmp
loop
fldlg2
or
idivl
loopne
lods
mov
test
int3
pusha
addr16
int3
xor
xor
add
mov
cld
cmp
sbb
xor
scas
clc
xchg
mov
movsl
jb
xlat
mov
int3
scas
sub
push
mov
sbb
int3
jbe
mov
or
stos
es
sti
andb
test
iret
nop
jnp
ds
dec
gs
sub
or
popa
into
lret
addr16
sub
enter
cmp
std
fwait
aaa
or
fwait
mov
imul
xor
dec
dec
paddsw
cmp
lock
push
jno
mulb
or
stos
ds
subb
mov
filds
mov
stos
rol
pop
call
pop
sarb
dec
gs
mov
sub
cmpb
pop
lcall
popa
notl
test
lret
inc
cmc
cmp
mov
jo
adc
xchg
cltd
dec
cmp
fidivl
imul
fldt
loopne
mov
leave
adc
add
dec
icebp
outsb
jle
outsb
jl
push
lcall
loope
or
jle
push
mov
sbb
push
xor
mov
cwtl
in
jns
in
push
inc
adc
ss
jno
and
addr16
mov
push
test
mov
loope
sub
aas
int
mov
xlat
dec
adcl
jp
int
inc
adc
lds
jecxz
out
xchg
pop
push
scas
dec
dec
test
sub
js
les
into
inc
ficomps
pushf
jno
xchg
gs
sbb
je
jl
mov
or
push
mov
add
lcall
cwtl
insl
mov
push
mov
push
fs
push
pushf
push
fsubr
lods
into
mov
stos
jge
cmpsl
out
sub
inc
and
add
xor
dec
mov
popf
stc
dec
mov
jns
pop
je
cmp
add
sub
fstpt
xchg
lret
cmp
pop
dec
or
mov
dec
sahf
mov
jo
jns
lock
mov
aaa
nop
jbe
test
xlat
fimuls
or
cmp
rcrl
pop
in
push
pushf
pop
mov
xchg
mov
pop
or
xchg
aaa
pop
int
aad
imul
loop
mov
inc
test
pop
add
or
push
ds
fwait
inc
adc
repz
xor
push
std
mov
in
xor
je
pop
inc
or
out
roll
adc
aaa
fiaddl
jo
inc
sub
ds
movsb
call
sbb
mov
gs
and
cmpsb
inc
fiaddl
xlat
mov
jae
decb
mov
lea
add
xchg
orb
pop
xor
stos
and
test
dec
adc
fs
dec
addr16
mulb
mov
sbb
pusha
xchg
xor
xor
xchg
sub
icebp
sbb
jne
loop
sahf
and
jg
add
jg
and
push
xor
mov
xchg
pop
in
orb
sub
stc
add
loopne
jecxz
add
loope
inc
test
cmp
and
test
sti
ret
int
cmp
pop
sub
dec
dec
inc
rcll
cmpsb
xchg
push
mov
mov
rorb
cmp
mov
mov
mov
dec
loop
xchg
push
pushf
pop
icebp
sbb
cmp
mov
ret
pop
jbe
mov
mov
pop
stos
inc
sbb
movsl
jns
stos
jbe
lcall
and
int3
sub
mov
xchg
sarl
cmc
mov
cmp
cmp
xor
aad
rcll
and
lret
lret
jg
pop
mov
popf
gs
dec
aaa
push
insl
add
dec
cmp
sbb
cli
cmp
cs
xchg
pop
gs
fadds
int3
scas
jne
data16
xor
mov
cmp
push
add
mov
shl
and
aam
jle
frstpm(287
xchg
xchg
sub
arpl
cmpsl
mov
push
jns
ss
adc
rcl
add
sub
out
xor
repnz
and
pushf
ret
push
xchg
jecxz
std
fwait
mov
mov
call
nopl
int3
pop
cwtl
pop
pop
push
mov
fidivs
sbb
and
iret
sarb
sub
cli
add
pop
test
adc
loop
das
clc
cmc
mov
dec
adc
mov
mov
xor
stos
imul
dec
test
mov
sti
or
lock
sar
jne
clc
mov
lods
aas
push
pop
clc
push
inc
loope
stos
sbbl
shlb
mov
pop
add
cmp
rcrl
mulb
iret
fiaddl
test
aaa
je
pop
sahf
scas
xchg
dec
push
add
inc
enter
add
dec
push
push
lods
fisubrs
jg
loopne
movntq
xchg
xor
push
mov
sub
jne
rcr
xchg
in
nop
popf
inc
adc
jecxz
out
add
add
dec
adc
push
in
and
pop
xor
cmp
test
pop
lahf
sbb
push
jle
je
jb
mov
inc
aam
shll
es
sbb
fcoml
or
ja
pop
mov
js
mov
fbstp
gs
cmp
mov
negl
cwtl
sbb
mov
sbb
in
rcrb
mov
xchg
inc
xlat
pop
rcrl
fidivl
mov
mov
xchg
mov
add
cmpsl
jle
and
xchg
xchg
mov
xchg
mov
enter
icebp
addr16
add
in
xor
xchg
mov
sbb
lfs
movsl
stos
xor
dec
inc
flds
xchg
fnstenv
mov
in
ljmp
pop
dec
popf
xchg
push
cli
aas
xchg
adc
ljmp
pop
inc
adc
xchg
mov
mov
jge
mov
fldt
push
stos
lea
or
jl
stos
push
jbe
pusha
idivl
xchg
xchg
cs
and
lods
std
inc
orl
fisttpll
push
mov
aam
inc
xchg
add
leave
sub
and
ret
pop
int3
add
shlb
scas
pop
out
loopne
sbb
jle
scas
sbbl
jl
adc
and
sub
incl
or
mov
sahf
ret
and
fdivrl
jp
mov
cmp
pop
scas
and
aas
push
push
jp
adc
dec
jns
std
inc
mov
mov
push
fcomi
js
aam
sbb
loopne
pusha
daa
leave
rorb
cmp
jo
sbb
add
xchg
subl
aas
sbb
jo
loope
pop
dec
icebp
pop
or
in
je
xor
movsl
in
scas
or
add
test
rorl
adc
dec
cmp
fdivrs
pop
inc
pop
jns
add
xor
aaa
sahf
xchg
adc
jnp
push
mov
dec
in
test
subl
mov
mov
loope
pop
mov
mov
fsts
ret
lods
repz
or
xchg
cmp
js
jbe
sbb
clc
js
rcr
jnp
push
jl
xchg
movsl
inc
icebp
cwtl
mov
cmpsl
lods
jmp
out
aas
pop
mov
or
insl
mov
xchg
and
arpl
roll
test
scas
dec
shlb
add
cmpsb
sub
pusha
mov
gs
pop
rolb
aad
dec
fnsave
push
cs
clc
pop
xor
mov
jle
stos
test
test
mov
movsl
lods
mov
cmpl
or
fs
call
sub
test
push
sbb
es
in
shll
cmpsl
xor
lds
xor
sbb
mov
mov
dec
inc
sarb
push
daa
jge
iret
add
out
loopne
scas
jp
add
push
test
mov
fimuls
insb
jp
inc
loop
xorb
ret
inc
int3
push
in
xchg
or
push
rorb
repz
dec
insl
scas
inc
lahf
outsl
lcall
pop
shlb
inc
cltd
push
xor
mov
icebp
rcl
inc
inc
xchg
jns
mov
xlat
orl
dec
cmp
repnz
mov
ret
fs
xor
bnd
js
test
fucom
adcl
mov
mov
push
adc
sarb
inc
loop
or
pop
sub
dec
lods
xchg
mov
mov
icebp
mov
push
mov
push
jns
arpl
inc
sub
arpl
imul
dec
daa
adc
test
lret
mov
add
test
mov
pushf
in
inc
mov
hlt
mov
lret
xchg
adc
or
movsb
cmp
cmp
cwtl
push
in
fldln2
inc
inc
cwtl
lods
jae
xchg
repnz
dec
inc
cltd
hlt
ret
pop
add
mov
stos
jnp
mov
mov
push
or
jecxz
int
outsb
pop
mov
repnz
mov
js
jg
call
inc
frstor
adc
fcmovne
imul
and
jp
inc
ret
xor
cwtl
push
aam
cmpsl
lea
movsl
add
mov
jle
dec
sub
pusha
les
adc
test
nop
add
pop
jg
test
orl
and
mov
push
or
inc
jno
cmc
pop
xchg
mov
push
loopne
dec
test
xchg
xor
icebp
movsl
outsl
adc
sbb
mov
xor
push
cmp
adc
fwait
int3
sub
dec
jecxz
outsb
rcrb
jmp
jo
in
mov
dec
mulb
push
in
jge
jb
scas
xchg
decl
test
xchg
mov
inc
fwait
and
or
fidivl
fs
and
out
inc
xlat
bound
pop
sarb
aam
cs
clc
popl
inc
mov
or
jl
sub
sbb
pusha
sti
xchg
xchg
add
push
aaa
jmp
imul
cmpb
push
adc
pop
mov
repnz
jnp
loopne
xor
push
dec
out
fsts
sub
aaa
mov
pop
pop
pop
mov
mov
xor
mov
pusha
dec
ret
ret
mulb
outsl
pop
mov
pop
shlb
frstor
cmpsl
jp
je
loop
sahf
add
xchg
push
test
pop
jbe
and
cmp
insb
call
cmp
jp
clc
aas
pop
fcompl
push
into
es
add
test
sarl
lret
jnp
loop
pop
icebp
jg
and
dec
mov
sub
jbe
push
sub
xchg
sahf
nop
icebp
xchg
mov
push
and
push
push
cmp
inc
mov
repnz
fdivs
sub
inc
pop
out
ja
out
push
fwait
mov
lret
testb
inc
mov
sbb
addb
xchg
mov
xchg
jmp
add
sub
jbe
hlt
sub
ja
cmpsb
mov
xorb
out
leave
adc
xor
mov
xor
or
mov
xchg
dec
mov
or
xor
shll
sub
repz
and
add
sbb
dec
test
pop
adc
push
sub
xchg
cmp
pusha
movsb
inc
jbe
popf
mov
xlat
dec
in
fs
cmp
scas
gs
jmp
or
jo
jno
gs
sbb
outsl
dec
out
ret
push
lahf
ret
jle
leave
sbb
fistpll
aad
out
push
xchg
xor
cli
movb
jne
mov
imulb
jo
lcall
and
xor
push
jb
sub
roll
shlb
stos
jmp
lock
mov
sub
inc
stos
ljmp
stc
insl
stc
sbb
pushf
dec
out
outsl
mov
cltd
cmpsw
xor
test
icebp
mov
push
fwait
cmp
int3
lret
and
jge
fnstenv
jae
fistps
and
adc
inc
jl
lods
inc
stos
lea
lahf
into
mov
jno
lock
out
clc
or
mov
inc
or
mov
and
mulb
jge
repz
push
xor
xor
out
pop
sbb
loopne
push
mov
js
and
jmp
mov
imul
sar
cmp
push
lcall
and
jae
pop
adc
or
cmp
ja
fists
insl
sbb
adc
dec
jno
cmp
jle
sahf
add
sub
hlt
mov
jecxz
dec
iret
and
fldenv
pusha
ss
cld
repnz
push
sahf
inc
mov
imul
loop
fildl
subb
push
inc
cmc
inc
ja
aas
cltd
dec
movsb
adc
sub
fsubl
cmp
cld
lods
inc
cs
dec
cmp
push
popa
xchg
dec
cmp
data16
inc
cwtl
mov
cmp
test
and
lods
dec
lock
aaa
into
pop
repnz
mov
adcl
or
cmp
stos
and
test
dec
pop
mov
push
bound
call
and
jmp
push
int
or
lahf
and
pop
push
sbb
adc
inc
mov
je
mov
loopne
inc
adc
lret
xor
sbb
inc
gs
jo
test
out
mov
sub
lret
dec
std
rorl
jle
hlt
les
mov
adc
mov
and
ror
mov
inc
mov
cwtl
and
xor
arpl
stos
jl
bound
add
jg
cld
mov
sub
and
fnstcw
push
popa
daa
js
das
mov
push
add
inc
lahf
or
mov
in
adc
out
mov
push
xor
cmp
ja
call
loop
dec
scas
out
lock
jbe
mov
fnstenv
dec
add
dec
xor
sbb
and
push
push
aam
sub
pop
cmc
aad
out
sub
loop
mov
pop
pop
xor
jns
mov
xchg
test
sbb
mov
mov
xchg
repz
jbe,pn
push
cltd
pop
fucomip
mov
mov
lods
pop
fsts
or
lret
dec
xchg
or
out
jbe
cld
cmpsl
or
cmpsw
hlt
ret
and
in
outsl
mov
push
pop
pop
sub
lcall
hlt
mov
rol
and
mov
mov
leave
push
and
xor
pop
std
sbb
sbb
push
xchg
ljmp
es
xor
jne
ficoms
mov
xor
xchg
std
dec
sub
lds
mov
outsb
mov
xchg
mov
pop
dec
shll
aas
lahf
push
xor
sub
mov
int
cs
data16
push
pop
mov
jae
adc
es
mov
jmp
in
cmpsl
cs
fbstp
stos
ss
in
inc
in
and
inc
loope
repz
hlt
subl
mov
test
je
pop
push
fwait
push
clc
xchg
cmp
jg
test
imul
leave
pop
fadds
in
sub
or
iret
adc
mov
pop
stos
cmp
je
shl
jecxz
testl
ljmp
outsb
push
iret
fmuls
nop
sahf
xor
add
xlat
adcl
inc
gs
mov
out
xor
sti
scas
cwtl
incb
out
cld
ja
gs
lret
call
push
sub
inc
sub
xchg
push
test
push
fnstenv
movsb
lods
lret
jne
mov
popa
pop
or
lea
xor
cli
jl
mov
mov
fs
sti
lret
inc
stos
push
notb
loopne
mov
stc
arpl
je
pop
cmc
adcb
mov
ret
in
jecxz
sbb
sub
mov
inc
incl
repnz
xor
jno
lds
lahf
inc
pop
jge
ror
je
sahf
aam
ljmp
imul
dec
inc
xor
cmpsb
out
iret
cwtl
xchg
pop
pusha
idivl
clc
mov
pop
jg
push
pop
xchg
inc
jmp
out
mov
fsubl
cmpsl
inc
lods
mov
in
gs
push
cmpsb
xor
fdivl
rcll
out
adc
pop
fcompl
inc
fwait
dec
pusha
ljmp
sub
mov
test
imul
mov
int
sahf
loopne
call
mov
dec
jecxz
jno
push
mov
ljmp
xor
fisubrl
adc
add
lds
mov
loop
lret
cld
into
push
jmp
out
addr16
inc
mov
xchg
aam
push
aas
or
push
or
cs
cltd
cmp
jp
out
jmp
mov
js
push
lahf
ljmp
push
mov
push
jae
pop
jmp
fsubl
mov
cmp
and
dec
push
std
mov
jl
pop
in
mov
inc
lcall
clc
test
fdivr
outsb
das
cli
sti
xor
mov
mov
mov
lret
std
jb
cld
sub
dec
dec
jl
pushf
scas
and
out
lcall
mov
out
mov
popa
cmpl
push
xchg
call
cmp
mov
outsl
xchg
loopne
in
adc
sbb
arpl
inc
icebp
pop
xor
inc
sbb
xor
lret
jns
enter
push
insl
xchg
es
stc
das
add
dec
jl
mov
iret
fdivp
jmp
and
inc
push
mov
lock
or
pusha
cli
xchg
sbb
mov
cmp
nop
and
inc
lret
les
sub
aam
xor
xchg
jnp,pn
cltd
mov
xlat
lods
pushf
sbb
enter
scas
clc
adcb
jmp
es
fdivrs
les
pusha
notl
imul
scas
mov
pop
push
mov
das
inc
push
mov
adc
dec
shrb
mov
and
ss
mov
mov
mov
mov
sub
cltd
push
fsubrp
xorb
out
mov
xchg
ljmp
leave
movsl
inc
push
fadds
ficoml
loopne
movsl
adc
inc
data16
pop
mov
cld
xlat
outsb
enter
push
rol
repnz
movsl
cs
test
pop
sub
mov
inc
ret
push
loop
mov
les
rolb
repz
cltd
sbb
and
jo
je
insl
js
pop
jmp
js
mov
inc
fstpt
dec
xor
fwait
cmp
leave
mov
sbb
or
adc
mov
add
cmpsb
negl
xchg
loopne
jl
cmp
arpl
aas
roll
xor
push
insl
gs
mov
or
in
xlat
sub
push
jge
sub
outsl
jnp
xor
mov
loope
bound
mov
inc
ljmp
pop
mov
pop
sbb
jbe
sbb
in
dec
bound
sub
shlb
sbb
jns
pop
pop
into
pop
mov
aad
push
setne
add
jae
dec
out
add
scas
dec
or
adc
out
jae
or
insl
inc
mov
and
test
push
int
insl
ljmp
jge
xchg
pop
enter
sub
aad
xchg
xchg
cmp
es
xlat
aad
mov
sub
sahf
es
das
ljmp
push
or
bound
dec
imul
callw
stc
arpl
in
inc
push
pushf
mov
pop
fdivrs
hlt
push
add
sbb
push
xor
jbe
push
fimuls
push
inc
mov
pop
lods
mov
fmuls
cmp
clc
imul
cmp
and
decb
imulb
inc
test
xchg
jle
pop
lea
shl
mov
out
movsb
pop
mov
ds
fbstp
pop
push
inc
ds
push
call
test
cmp
mov
dec
or
sbb
ffreep
mov
sbb
jns
iret
push
mov
inc
xchg
mov
or
or
inc
xor
and
push
out
sub
fs
mov
jae
cmpsl
mov
gs
inc
add
mov
movsl
lcall
sbbl
push
push
push
sbb
mov
or
inc
adc
mov
pop
cmp
fsts
test
mov
pushf
sbb
pushf
push
jmp
into
pop
pop
into
or
shlb
jmp
cmc
fimull
lods
mov
add
pop
jae
fs
xchg
mov
mov
xlat
mov
mov
dec
fcmovu
lds
jl
mov
sub
push
add
pop
dec
or
cmp
sub
add
in
sti
popa
fisubrs
dec
gs
mov
popa
leave
xchg
xchg
fcmovnbe
sbb
inc
jns
in
leave
scas
mov
test
lods
sbb
es
jbe
and
xchg
daa
mov
out
lea
and
jno
aam
jo
outsb
xchg
aam
mov
dec
scas
push
ljmp
test
ret
sub
pop
pop
xor
add
jae
inc
movsl
ret
xor
sbb
sbb
lea
shlb
push
gs
dec
ret
js
pushw
jmp
mov
pop
gs
jp
sti
xor
in
jb
pop
adc
and
lods
xor
xchg
inc
pop
and
fs
fstps
cwtl
loope
leave
cmp
mov
add
test
inc
dec
dec
pop
fnstsw
dec
sub
popf
outsl
icebp
mov
inc
loopne
push
jmp
mov
repz
movsb
out
popa
call
cltd
jecxz
add
dec
sbb
data16
in
dec
xorb
jge
sahf
cmp
pop
or
sarl
pop
dec
dec
outsb
cmp
popf
pop
shlb
scas
inc
dec
andb
push
jno
outsb
xor
stc
inc
fwait
mov
dec
push
lock
adc
cltd
sbbl
pushf
fldl
shlb
and
stos
imulb
in
inc
pop
movsl
xchg
int3
in
aad
push
mov
sub
lds
or
in
pop
in
xor
pop
mov
or
sub
sbb
or
inc
mov
hlt
mov
add
pushf
lods
xlat
imul
je
cmp
sbb
test
mov
sub
push
loop
int
pop
or
mov
cmpsb
pushf
add
xchg
jae
popa
cmp
mov
ja
mov
add
inc
jno
inc
jmp
xor
ds
loopne
loop
adc
test
or
xchg
out
ss
je
cmpsb
mov
imul
sub
roll
repz
nop
leave
xor
push
clc
push
sub
mov
jnp
add
test
inc
adc
push
adc
ficoml
inc
pusha
cmc
xorl
mov
mov
sbb
and
xchg
das
mov
fstpl
mov
cli
lods
add
adc
push
inc
mov
test
adc
out
pop
inc
mov
mov
and
push
jo
xchg
cs
inc
xchg
push
add
jbe
or
fcomi
sub
or
mov
pop
jnp
out
pop
inc
push
push
std
arpl
xchg
xchg
mov
sahf
sbb
mov
scas
jns
jecxz
mov
pop
mov
int
xchg
sub
test
mov
pop
or
fdivs
mov
or
adc
push
rorl
lcall
lret
sub
bound
out
popf
ljmp
mov
jnp
aaa
inc
cmp
dec
out
int3
insl
inc
cmp
sahf
mov
inc
ss
xchg
ss
xchg
push
dec
add
ljmp
mov
or
repz
adc
pop
mov
mov
dec
or
ds
jbe
negl
push
pop
test
das
in
adc
mov
mov
mov
push
and
and
push
lea
lods
cli
jmp
das
cmc
mov
mov
pop
adc
loopne
cmc
add
mov
mov
scas
cmc
scas
mov
gs
mov
loope
xlat
lahf
popf
mov
dec
vpmullw
or
dec
cwtl
mov
mov
cmp
das
cli
aam
in
iret
icebp
jne
cmpsl
shlb
adc
movsl
stos
arpl
jns
mov
hlt
mov
rclb
or
ja
test
dec
fptan
add
leavew
push
inc
push
mov
xor
into
ds
adc
pop
insb
sub
scas
pusha
push
cmc
gs
out
sbb
imul
dec
gs
mov
adc
ss
mov
push
or
cmp
out
div
mov
scas
sbb
mov
jg
sbb
cmp
mov
jbe
cmp
dec
inc
scas
mov
jae
jge
lods
incl
dec
test
out
push
test
jmp
out
mov
xlat
xchg
pop
pop
push
jecxz
cmp
and
rcrb
push
ss
pop
scas
fdivrl
mov
imul
pop
bound
lret
imul
stos
mov
inc
sub
in
adcb
push
or
out
xchg
pop
ja
mov
cltd
add
jne
outsl
fwait
cld
stc
mov
mov
push
iret
ret
jb
insb
lock
dec
aas
popa
mov
sarl
xor
add
push
jmp
and
in
mov
jb
push
leave
ja
xchg
cmp
cmpb
sbb
scas
cltd
stos
loopne
xchg
adc
out
add
stos
loopew
imul
pop
pop
jno
pop
sub
sbb
sbb
push
pop
loopne
ja
gs
mov
gs
inc
dec
movsl
out
cli
je
out
sbb
out
lret
repz
jp
repz
sub
and
inc
enter
in
mov
stos
pop
fcoml
push
xchg
ja
push
xor
sub
jns
jb
cli
mov
dec
nop
pusha
jb
testl
int3
cmpsb
mov
arpl
aaa
mov
rolb
push
and
mov
shrb
xchg
cld
test
inc
insl
xor
adc
flds
xor
outsl
repnz
mov
and
cmp
jecxz
inc
sbb
push
outsb
aam
pop
xchg
xchg
std
fistl
push
loope
xchg
cltd
and
cmp
in
mov
inc
and
cwtl
or
or
lds
enter
enter
xor
dec
iret
stc
jo
xor
xchg
mov
sbb
out
iret
jae
sbb
outsb
das
mov
nop
stos
arpl
xor
cmc
cmpb
pop
test
fsubr
aaa
or
fnstenv
in
push
dec
pop
inc
dec
xchg
sub
push
or
lret
shl
sub
or
rclb
adc
xor
mov
fistpll
int
aaa
fsubl
jnp
iret
jecxz
das
pusha
mull
mov
xchg
pop
dec
mov
ret
push
add
mov
aas
sbb
outsb
sbb
pop
in
mov
mov
mov
dec
mov
xchg
adc
add
bound
pop
daa
and
scas
gs
inc
imul
push
xor
outsl
mov
jbe
repnz
cs
inc
or
stc
mov
jnp
divl
mov
js
cmp
pop
mov
or
out
cmp
mov
lods
fnstcw
cmp
mov
pop
bound
mulb
test
mov
add
dec
xchg
mov
std
mov
and
adc
icebp
sub
pop
xchg
mov
repnz
mov
mov
loopne
xchg
out
sub
push
cmp
scas
repnz
sbb
pushf
fnstcw
fsubrs
enter
mov
pushf
jmp
inc
push
ds
pop
cmc
push
dec
sbb
cmpl
mulb
dec
dec
int3
adc
inc
mov
sub
push
jb
clc
mov
mov
jg
sub
inc
pop
xor
imul
out
or
pop
lds
xor
nop
pop
icebp
addb
daa
xor
ja
stos
jns
jmp
jmp
cld
mov
test
pop
xchg
fimull
xor
mov
popa
mov
stos
sbb
int3
outsb
test
xchg
ret
std
sbbl
lcall
jne
int
jle
push
and
sub
insb
pop
ja
and
enter
rcrb
pop
lds
sahf
divl
push
sti
les
jle
jo
cmpsl
out
push
inc
ss
mov
outsl
push
call
lcall
and
cld
je
fidivrl
push
mov
xorb
into
pop
in
inc
cli
and
mov
nop
leave
or
xchg
sub
inc
inc
fildl
loop
scas
call
push
stos
xchg
test
inc
mov
rorl
inc
pop
add
or
xor
xchg
xor
fdivrs
or
fs
xor
mov
test
sbbl
add
jne
add
lret
sub
and
ljmp
inc
jecxz
jle
mov
mov
jge
inc
mov
mov
adc
push
jnp
xor
nop
mov
jno
jp
stos
outsl
incb
mov
push
iret
scas
mov
inc
dec
xchg
push
lret
sti
insb
scas
nop
sub
mov
iret
jge
jmp
rcrl
iret
jle
repz
lock
loopne
fbld
std
push
loope
sub
push
test
and
shlb
mov
insb
jle
lret
ficoml
loopne
icebp
dec
aam
sbb
xor
push
mov
sarl
add
stos
or
inc
enter
pushf
into
xchg
outsl
mov
shrb
lds
and
adc
nop
push
or
sbb
in
pop
in
lret
out
lods
in
xor
push
mov
enter
push
jmp
or
xrelease
sub
inc
popa
call
ficoml
push
push
stc
nop
dec
mov
mov
mov
sahf
xchg
test
jecxz
pop
es
jp
stos
loop
lahf
xchg
test
inc
cmc
push
jbe
insl
mov
call
cmp
jge
rcrb
mov
inc
pop
add
mov
adc
mov
jno
jecxz
data16
inc
outsl
push
mov
sbb
jmp
insl
ds
fsubrl
fstl
call
inc
fcmove
stos
cmc
xchg
mov
clc
fwait
push
cmpsb
mov
lea
cli
lret
scas
sub
jmp
popa
jns
fwait
lds
push
aas
loope
out
xor
mov
pop
loope
pop
and
divb
adc
je
shlb
insl
push
add
lahf
adc
inc
or
mov
fisttps
mov
sbb
incb
cli
test
dec
icebp
xor
cmp
outsl
bnd
xchg
rcrb
frstor
mov
or
fsubr
pop
jmp
xor
hlt
and
inc
push
loopne
call
xchg
lcall
add
push
popf
jo
mov
out
std
fcmovnb
jo
jns
sbb
inc
dec
push
call
inc
arpl
cmp
insb
pop
movsl
lods
daa
pop
repnz
insb
and
push
dec
inc
or
aas
fdivrs
push
and
pop
cmp
lahf
nop
test
int3
sub
ja
inc
sub
bound
fwait
sbbl
cmp
cmp
hlt
dec
shrb
inc
mov
scas
inc
cmc
cmc
push
add
repnz
sarl
outsb
ljmp
iret
lret
aam
std
repz
jge
fcompl
push
imul
fnsave
shll
pop
sbb
lods
ficomps
repnz
mul
or
pop
sub
or
jp
jmp
mov
fsubr
enter
or
inc
insb
mov
mov
mov
add
lods
sbb
fwait
dec
shr
jge
dec
pop
repnz
jns
sahf
pop
pop
pop
push
das
xchg
movsb
jbe
adc
mov
xchg
ljmp
push
inc
aam
mov
jmp
mov
push
push
mov
pop
mov
loope
jns
fsubr
adc
pop
bound
pop
mov
out
lret
imul
jecxz
dec
adc
push
mov
xchg
jmp
daa
cli
popf
fcoml
jbe
mov
pop
imul
out
stos
cmp
push
sbb
xor
inc
sbb
dec
sbb
int3
jo
dec
jecxz
sarb
insl
mov
movsl
loop
mov
mov
scas
push
call
or
int3
mov
fnstenv
jb
stos
mov
fistpl
or
jns
push
xchg
add
jbe
outsl
mov
pushf
jb
into
pop
or
push
loop
sub
insb
cli
enter
xchg
lods
clc
imul
scas
into
xchg
int
imulb
gs
int3
and
dec
pop
adc
xchg
sbb
lods
cli
xchg
mov
cmp
lcall
cs
lcall
jle
xchg
out
cld
rorl
mov
push
push
adc
repnz
sbb
mov
add
aas
es
arpl
and
mov
jg
ret
mov
sub
or
sub
pop
or
adc
pop
icebp
stc
push
pop
dec
mov
fs
inc
test
cmp
pop
cmp
or
fdivl
jne
test
insb
jg
lds
jmp
push
and
xchg
sti
pop
jb
cmp
nop
stos
stc
lret
negl
sbb
popf
mov
fidivl
lods
and
outsb
mov
negl
xchg
adc
or
ljmp
or
jns
fwait
xchg
les
xchg
cmpsb
xor
pop
repz
push
imul
and
mov
dec
or
adc
pop
jl
inc
pushf
mov
mov
cmp
mov
mov
jns
popa
adc
sbb
dec
scas
inc
stc
cmp
or
lret
test
xor
fidivrs
rorl
cmpsl
lods
xorl
lret
pusha
outsl
mov
xchg
adc
fnstenv
divl
or
and
lahf
cmp
mov
inc
into
movsb
cwtl
arpl
test
pop
loope
outsb
fsts
cmp
incb
sbb
mov
arpl
xor
jge
or
xchg
popf
icebp
mov
cmp
imul
xor
mov
movsb
jbe
sbb
in
mov
jo
stc
sub
clc
mov
inc
fs
dec
inc
repnz
xor
out
aas
push
mov
sbb
arpl
in
lods
mov
insb
jle
outsb
xlat
add
outsl
xor
aam
out
dec
push
mov
cld
xchg
push
aas
out
notb
cltd
push
mov
lods
in
mov
mov
jg
add
scas
out
cmpsb
loop
xchg
out
enter
xchg
cld
add
cmp
jecxz
out
dec
test
ja
test
pop
mov
push
mov
sub
jg
fisubrl
mov
or
cmpsl
pop
mov
cwtl
imul
or
and
pop
jp
xchg
icebp
xchg
mov
xlat
test
ja
jbe
das
insl
or
bound
or
je
stc
nop
jae
movsl
test
pop
ss
jae
sub
ret
ljmp
mov
sub
mov
in
testb
push
push
shll
xchg
mov
jp
outsb
push
in
add
push
lcall
imul
xchg
jl
sbb
cwtl
mov
into
jae
add
daa
mov
push
sahf
enter
out
popf
xor
dec
push
mov
dec
mov
add
push
test
clc
mov
test
fidivrs
jno
or
xchg
nop
adc
stos
mov
and
sub
addb
cmp
pop
push
shrb
adc
inc
ret
repz
out
movsl
mov
inc
add
sbb
pop
lds
icebp
insb
pop
or
cmp
cmc
push
pop
je
int
sti
vmwrite
inc
aas
cmpsl
loopne
sbb
inc
add
inc
sbb
sub
and
adc
pop
sbb
lcall
cmp
bound
or
call
stos
mov
shrb
fcomps
jecxz
inc
jo
mov
test
and
jne
insl
andl
fsubrl
imul
inc
scas
mov
ds
sbb
xor
cltd
mov
je
push
adc
mov
dec
frstor
pop
jo
adc
out
push
xchg
dec
dec
test
cwtl
sbb
outsl
mov
jno
leave
stos
mov
cmp
pop
jb
inc
mov
test
sub
arpl
adc
push
and
dec
push
pushf
leave
into
jecxz
leave
idivb
add
dec
add
inc
mov
test
dec
cmpsl
cli
subps
sub
xor
inc
dec
repnz
inc
pushf
xor
pop
xor
in
fcoms
icebp
xor
orb
adc
push
push
ss
push
lods
outsb
fldt
inc
lods
fdivrl
push
pop
lret
cmp
lahf
push
push
add
sbb
int
js
sub
dec
push
sbb
in
cmpsl
lods
add
sbb
mov
xchg
mov
xlat
repz
ds
rorl
mov
and
lea
and
mov
int
sub
cmpsl
cmp
and
adc
mov
lret
rcr
mov
push
sub
das
or
aad
rcr
shufps
rcll
setns
inc
imul
pop
aaa
push
mov
popf
jo
shrb
cli
pop
scas
les
lret
pop
cmp
xchg
mov
add
dec
pop
cli
add
sti
ljmp
mov
xchg
jbe
scas
cmpsb
sbbl
sub
xchg
cwtl
xchg
mov
xlat
cmc
cmc
mov
inc
pop
das
inc
aad
je
jbe
jb
fdivl
or
xchg
js
aaa
push
push
cltd
sbb
dec
jge
in
outsl
scas
ficomps
mov
lds
into
pop
mov
loop
nop
jl
add
or
aam
nop
shrb
or
and
jle
iret
int3
pop
adc
fsubrs
xchg
mov
dec
adc
push
jecxz
roll
inc
sub
fstpl
mov
adc
addr16
mov
in
loop
xchg
xor
sahf
test
dec
adc
test
push
mov
mov
sbb
std
xchg
gs
sbb
sub
ror
add
mov
cwtl
mov
ljmp
dec
inc
loope
jg
xor
repz
push
and
jl
push
jg
sbb
es
movsl
cmp
testl
jb
rol
jnp
xor
popf
jne
adc
jg
jecxz
test
add
shlb
fwait
test
xor
mov
cltd
arpl
fiaddl
mov
inc
mov
imul
lods
xor
pop
out
pop
add
xor
and
sbb
and
das
push
ds
xor
mov
jg
xor
mov
push
clc
imul
ss
inc
fidivrl
jo
fcompl
or
xor
aam
jmp
sbb
loopne
adc
clc
inc
ja
out
insb
out
andb
pop
arpl
cmp
addb
dec
push
pushf
scas
mov
test
add
adc
mov
mov
stc
mov
dec
icebp
adc
ljmp
stc
test
adc
and
xor
jmp
pop
mov
hlt
mov
sub
decl
cwtl
pop
loop
movsl
cmc
mov
inc
cld
push
divb
sub
jb
xor
in
jp
xchg
scas
sub
push
jo
loope
fstl
std
sbb
or
cmpsb
ret
lahf
cli
jne
dec
pusha
iret
fmull
fadds
and
push
cs
arpl
fmuls
lea
sub
lods
sti
lahf
push
shll
lock
jns
mov
jle
dec
test
sub
lods
mov
pusha
std
pop
mov
and
mov
dec
sbbb
jl
mov
mov
sub
les
popa
bound
add
inc
addl
jb
mov
cmp
mov
push
insb
int3
pop
loopne
xor
arpl
popl
daa
and
in
push
jno
adc
or
lret
data16
fadds
cs
sbb
mov
mov
fsubrp
push
dec
lret
jl
sti
push
lcall
jp
xorl
hlt
mov
stos
mov
addr16
sbb
add
pop
push
mov
jae
ja
pop
mov
dec
lock
push
jno
add
idiv
lahf
mov
xchg
jge
cmpb
cmp
sahf
mov
pop
rclb
xchg
add
jmp
mov
mov
outsb
daa
lret
jg
cltd
mov
pop
imul
and
scas
inc
push
andb
add
scas
mov
xorb
fs
adc
or
clc
ja
fcom
sbb
pop
push
sbb
loopne
stc
out
or
adc
sbb
push
lahf
mov
ret
repnz
out
ljmp
mov
xor
jb
and
loopne
ret
std
sub
jecxz
xor
leave
and
add
cmp
sub
dec
cmp
sbb
sarb
int
icebp
jb
pop
jno
mov
roll
movl
lret
mov
xchg
jbe
rclb
dec
dec
push
xchg
cld
in
and
push
sbb
adc
and
divl
inc
xchg
out
repz
pop
mov
or
jle
lea
cmp
add
call
sbb
jae
sub
inc
inc
mov
stos
in
in
mov
and
mov
fbstp
in
sarl
loope
add
xor
and
fxch
push
add
xor
push
daa
cmpsb
adc
insl
jle
mov
testb
mov
pop
cmc
vmwrite
push
popf
and
jecxz
sti
lds
sub
mov
xchg
dec
push
rcrl
outsl
sbb
and
cmp
jb
addr16
leave
inc
pop
out
jae
stos
rcrl
mov
mov
add
sbb
repz
dec
outsb
adc
xorb
jb
mov
pop
cwtl
xor
stos
mov
imul
jle
mov
call
sahf
adc
pop
in
sahf
rcll
mov
jne
and
leave
pusha
push
scas
lcall
jl
lret
mov
cli
dec
push
call
add
outsl
pop
cmp
cmp
pop
push
nop
test
pop
aas
mov
jl
sub
add
xor
mov
aad
sub
push
push
jg
lret
xchg
stos
sbb
xor
lahf
dec
pushf
jmp
addr16
jo
dec
nop
xor
mov
rolb
inc
jne
cld
jnp
lods
lcall
repz
xchg
and
jno
mov
cmp
xor
mov
mov
cmpsl
test
xchg
scas
jns
lea
sbb
pop
mov
repz
adc
cmp
xor
push
icebp
cmp
cmpsb
sub
xchg
jg
mul
setle
cwtl
out
add
pop
es
push
sub
stc
push
lods
sub
push
inc
icebp
enter
das
aas
push
add
mov
lahf
pop
lds
cmp
ds
sbb
or
cmp
add
lds
sbb
test
nop
or
mov
loop
dec
jnp
adcl
mov
adc
push
add
push
sub
jecxz
loopne
movsl
stc
mov
andb
mov
or
jmp
insl
jnp
lds
or
loop
out
popa
sub
mov
clc
and
fwait
inc
push
dec
xor
hlt
inc
pop
leave
pop
arpl
jns
cs
enter
sub
and
sbb
fiaddl
or
movsb
cmp
and
jno
push
mov
mov
dec
mov
mov
out
loope
cs
and
jbe
adc
mov
into
push
jmp
pop
mov
jle
jecxz
pop
mov
dec
fisubl
das
jmp
rcrb
sahf
mov
sub
mov
add
jb
mulb
jb
pop
repnz
push
test
pop
imul
jecxz
push
jnp
hlt
mov
popf
xor
ljmp
push
call
cld
add
sbb
jbe
jnp
inc
push
xchg
cmpsl
mov
dec
int
cs
dec
test
shrb
popa
pop
xor
dec
outsl
lea
mov
stos
push
lcall
das
mov
xor
fcoms
and
pop
cmp
lods
sub
mov
mov
sbb
testb
cld
and
xor
data16
jl
or
insb
cmp
pop
add
inc
movsb
js
sbb
xchg
xchg
into
adc
lahf
insb
cmc
sbb
cmp
shl
jle
adc
or
and
dec
cmp
rol
mov
jns
pop
jg
sbb
cmpsb
mov
sbb
add
jmp
cwtl
imul
pushf
xor
sahf
bound
and
test
adc
bound
adc
push
sub
lret
je
fwait
mov
push
and
rcr
popa
inc
pop
lahf
shlb
dec
jns
xchg
and
or
leave
pop
push
jne
data16
das
cld
inc
mov
add
dec
fwait
push
jno
xlat
lods
fistpl
inc
fsubrl
inc
push
push
fdivrs
mov
push
lock
jge
sub
sub
fstps
push
adcb
sahf
add
enter
fstps
icebp
in
push
sub
insl
or
or
and
in
std
inc
lcall
loope
sub
fstpt
iret
mov
outsb
mov
lret
xor
adc
jns
xchg
jmp
pushf
adc
dec
shll
imul
lcall
clc
mov
jg
loope
rcrb
mov
adc
gs
dec
movsl
cmpsl
mov
sub
fiadds
or
jle
stc
mov
ljmp
lahf
stc
cmp
xchg
rcrl
repz
hlt
pop
cmp
out
and
hlt
aam
adc
push
cmp
outsb
pop
lahf
and
xchg
jle
sub
arpl
sub
ret
jle
hlt
push
inc
mov
rcrb
lahf
imul
and
mov
xlat
mov
clc
sbb
sbb
mov
xor
jae
out
leave
out
ficoms
pop
push
cwtl
das
inc
lahf
sbb
push
push
push
xchg
dec
nop
push
jecxz
xchg
cmp
pop
add
aam
add
xchg
adc
cmpsb
dec
pop
fpatan
xlat
shl
popl
test
push
stos
xchg
xor
pop
shl
scas
sbb
call
ficomps
hlt
mov
inc
clc
cmp
addr16
ss
cwtl
in
test
insl
in
pushf
into
mov
add
xchg
adc
push
xchg
cs
adc
aaa
ret
fidivl
fdivrs
popa
sti
push
sub
sarb
addr16
add
es
fldcw
js
mov
jecxz
add
add
inc
jle
sti
sbb
pop
mov
jecxz
inc
lret
int3
push
inc
cvtpi2ps
xor
nop
testl
rcrl
and
dec
mov
push
lret
mov
mov
cmp
int3
mov
or
mov
jno
pop
sub
shlb
sti
addl
lahf
jbe
pop
data16
mov
adc
pushl
movl
and
dec
cli
lcall
push
cmp
rorb
mov
sbbb
pop
cmp
mov
mov
rcrb
sar
add
mov
icebp
icebp
mov
stos
xchg
mov
or
pop
repnz
std
add
inc
fs
sub
mov
cmpsl
jl
add
cmp
test
cmpsl
add
cs
xlat
inc
mov
mov
pop
xor
cmp
jne
adc
rcrb
push
inc
mov
es
je
push
insl
into
mov
stos
mov
call
or
aaa
ds
inc
sbb
mov
scas
sarb
idivb
lcall
icebp
push
jmp
mov
mov
dec
jl
jo
test
jb
shll
nop
sub
rol
outsl
cli
shlb
cmp
jl
gs
lcall
fisubl
out
push
xor
fsubrs
dec
pop
mov
ds
in
jns,pt
mov
pusha
fwait
inc
aaa
lret
out
jmp
enter
mov
call
shlb
mov
mov
xchg
and
int3
nop
cmp
stos
outsl
or
xchg
mov
push
add
sub
hlt
dec
sub
mov
and
sbb
dec
jp
pop
lret
arpl
mov
divl
xor
dec
jg
iret
xchg
pop
mov
inc
notb
or
or
jb
inc
jae
push
je
dec
push
mov
shlb
pushf
mov
loopne
stos
out
sub
sahf
jbe
stos
sub
inc
enter
sub
xor
xchg
sbb
in
call
fidivs
mov
lods
faddl
mov
inc
std
lret
data16
cwtl
in
inc
xlat
push
push
xchg
mov
add
orl
int
add
xchg
mov
mov
arpl
xchg
divb
add
fidivl
or
cwtl
sub
js
inc
mov
jg
jp
mov
push
or
and
bound
stos
and
cmp
gs
adcl
testl
lahf
imul
pop
xchg
outsb
sbb
mov
repnz
enter
pop
out
test
cmp
ror
or
cmp
call
and
cld
inc
xchg
out
jmp
popa
push
int3
mov
xchg
add
dec
xor
push
test
dec
ja
mov
das
addr16
into
iret
loop
pop
push
lea
ficoms
push
ljmp
push
loopne
dec
mov
jnp
mov
in
push
push
out
inc
pop
mov
cmpsl
cltd
pop
inc
lret
push
pop
ds
arpl
rolb
shlb
test
xor
jge
xchg
or
adc
inc
data16
sbb
mov
add
pop
sub
sbb
cmp
ljmp
lods
sbb
movsl
add
lods
outsb
js
sbb
push
rcrl
adc
jo
bound
pushf
pop
push
test
pop
rcll
mov
mov
mov
shll
fs
push
dec
ds
ds
jmp
popf
pop
dec
cli
test
mov
std
in
bound
jle
and
out
xorb
lea
mov
testb
jecxz
nop
jne
adc
or
fidivrl
add
push
loopne
xchg
mov
mov
jmp
daa
je
mov
pop
xor
and
jg
ljmp
call
loopne
into
xchg
adc
repnz
inc
xor
repz
mov
cmpb
cmp
inc
in
rcrl
mov
push
inc
fistl
repz
rorb
leave
mov
dec
addr16
pop
xlat
xor
xchg
mov
push
sub
int
dec
inc
lret
mov
push
xor
shll
dec
xorl
outsb
dec
hlt
pop
sub
adc
jecxz
jp
sbb
push
bound
icebp
cmp
pusha
xlat
inc
mov
popf
xchg
hlt
daa
sbb
inc
int3
cmp
scas
push
jg
sub
loop
lcall
enter
or
sbb
adc
jbe
xchg
push
inc
adc
mov
aas
ror
lcall
insb
add
arpl
ss
jl
pop
arpl
cwtl
nop
cmp
outsb
outsb
jae
pop
push
pusha
rolb
loope
pop
push
cwtl
jge
jnp
add
stc
mov
add
sub
ret
dec
sbb
jnp
adc
icebp
mov
imul
mull
xchg
xchg
jns
je
jnp
addr16
out
aad
fcmove
xchg
sbb
and
xor
mov
jne
jg
leave
xchg
mov
stc
fwait
outsl
jg
jecxz
insb
mov
lods
mov
testb
adc
mov
inc
cmp
dec
jo
push
push
sbb
sbb
dec
cmp
lahf
jbe
dec
mov
cltd
mov
push
mov
lds
xchg
mov
xchg
stos
adc
push
sub
add
xchg
pop
ss
jno
mov
pop
mov
mov
rolb
imul
sbb
mov
push
adc
fwait
xor
xor
push
stc
and
dec
loop
iret
jge
jge
imul
adc
mov
cmp
cmp
xor
inc
inc
enter
dec
and
sbb
test
and
jl
fnstenv
adc
cmp
jp
lret
jo
sbb
out
pop
xor
pop
inc
fdivrl
in
sbb
xlat
leave
xchg
xor
xchg
nop
inc
mov
jp
xchg
jns
les
jns
pop
stos
lcall
sub
pusha
add
stos
jne
push
scas
inc
xor
dec
xchg
and
jo
test
cmp
pushf
mov
pop
shlb
pop
in
js
xor
or
nop
movsb
sub
imul
cmp
pop
sbbl
nop
in
shll
fidivs
aaa
and
mov
jp
addl
inc
and
into
or
or
push
outsb
inc
or
insb
or
pop
fnstenv
or
xlat
adc
dec
adc
and
repz
push
mov
enter
scas
js
out
mov
loopne
imul
xchg
jno
jo
dec
arpl
imulb
andl
push
sbb
nop
sbb
mov
xlat
rep
mov
inc
push
sub
inc
pop
aad
or
hlt
push
add
sub
cmp
or
pop
std
jl
xchg
mov
clc
adc
inc
or
mov
repz
pusha
or
jmp
or
mov
pop
xor
test
pop
outsl
cmp
inc
xorw
enter
or
push
es
adc
push
sub
test
sbbl
jmp
mov
cltd
adc
xor
mov
enter
pop
dec
sbb
imul
or
sub
icebp
mov
daa
jbe
stc
xchg
sbb
shlb
pop
dec
aaa
dec
dec
test
lcall
jo
pop
sbb
sbb
scas
dec
insb
sub
xchg
cmp
or
mov
mov
xor
in
mov
arpl
rcll
stc
jno
stos
sti
stc
popf
xor
or
loope
out
pop
sub
mov
mov
mov
outsb
or
jmp
mov
mov
cmp
xchg
adc
jbe
aaa
mov
xchg
enter
loop
jp
sub
adc
dec
mov
bound
cmpsl
rcll
adc
pop
lcall
jmp
sbb
inc
xor
in
in
cmp
testl
and
add
pop
xor
clc
mov
sbb
arpl
cmp
ljmp
mov
xor
push
inc
fistpl
push
hlt
inc
leave
pusha
or
out
arpl
rol
ds
insl
jg
and
bound
xchg
aas
jo
jl
push
out
mov
loop
pop
and
jne
fwait
in
jb
jmp
cmp
rorb
shrb
sub
outsb
mov
sub
ret
movsb
ds
testb
and
push
jp
jno
inc
adc
mov
cmp
call
out
fsubrp
adc
lods
xchg
fwait
push
daa
jo
xchg
dec
sub
push
jp
mov
fcmovne
or
stc
popf
cmp
shrl
mov
sub
out
sub
pop
sahf
mov
rorl
outsb
xlat
jne
add
push
and
lret
push
outsb
mov
test
iret
add
je
sub
mov
in
das
push
pushf
jbe
inc
rorl
push
insl
jo
dec
cmovo
or
jbe
out
or
mov
cmp
xchg
sbb
dec
mull
xchg
cs
loope
mov
rorb
cmp
dec
out
or
scas
jno
cmp
imul
mov
repz
pop
adc
or
jp
fisttps
mov
inc
adc
fidivrs
sbb
pop
dec
sbb
adc
jp
or
mov
sahf
enter
mov
in
jl
jecxz
and
sub
sbb
les
cli
fwait
arpl
pop
cltd
pop
mov
movsl
cmc
mov
imul
insb
sti
lcall
and
xor
xchg
jle
jmp
pop
fistps
stos
push
ljmp
sahf
and
dec
fistl
xor
and
and
pop
movsl
jnp
lods
lds
cli
xchg
daa
pop
jecxz
sbb
hlt
push
loope
sbb
addl
fnclex
mov
add
jg
xor
adc
test
push
push
mov
test
mov
mov
iret
lock
adc
loop
inc
mov
in
adc
test
cmpsl
imul
scas
push
inc
subb
repz
fwait
dec
mov
mov
loopne
mov
or
push
inc
jle
mov
mov
sbb
repz
dec
xchg
cmp
mov
add
imul
and
pop
shlb
push
shrl
repnz
sub
add
sbb
popa
movsl
cmp
pop
mov
mov
sbb
pop
push
loopne
test
or
ljmp
mov
int
cld
push
popf
scas
mov
mov
out
sub
hlt
inc
es
test
pusha
pop
imul
xor
pop
jl
mov
setne
and
mov
push
std
dec
dec
cmpsb
imul
mov
aaa
insl
sbb
cmp
ffree
sbb
and
pop
mov
das
in
std
xchg
ret
in
and
pop
frstor
ds
add
test
jne
fldt
scas
shrl
jbe,pn
pop
xor
fwait
movsb
mov
subl
test
ret
repz
loopne
cmp
mov
inc
push
cwtl
sub
push
arpl
cmp
mov
fbld
add
icebp
mov
repz
les
insl
mov
lahf
sub
xor
mov
pop
mov
push
movsb
mov
mov
repz
cmp
addr16
and
aam
push
cli
cld
lcall
out
sub
jo
mov
cmp
or
mov
mov
inc
repnz
xor
imul
sbb
ret
pop
cmc
xchg
outsb
ret
cmp
xchg
push
adc
and
sub
push
ret
inc
push
push
inc
or
push
fwait
sahf
testb
xor
adc
push
jnp
out
add
jbe
test
xchg
ss
cli
adc
inc
jno
xchg
adcl
sti
mov
jp
mov
cli
sbb
mov
fidivs
jae
mov
outsb
call
mov
addb
xor
cmp
clc
into
sub
xchg
mov
bound
and
push
jb
test
outsl
adc
cmpsb
arpl
dec
dec
jl
push
xchg
push
movsb
cmp
movsb
inc
ds
gs
cwtl
mov
mov
cmpsb
negl
jne
inc
dec
je
mov
ds
pop
sub
inc
push
pop
test
xor
sbb
add
pop
adc
out
jmp
mov
mov
mov
lcall
mov
xor
mov
mov
push
xchg
pop
mov
push
scas
inc
jbe
shrl
mov
jae
insl
add
test
pop
sbb
aad
inc
sbb
mov
rorb
sub
shr
jp
add
decb
mov
dec
jmp
inc
mov
push
or
ljmp
pop
gs
dec
cwtl
dec
inc
mov
mov
pop
lcall
push
cltd
and
addb
push
ja
movsl
or
fsubs
mov
push
pop
cmp
pushf
pop
insl
hlt
dec
mov
mov
xor
xor
mov
ret
and
jns
xor
adc
lcall
into
mov
arpl
cmp
lret
dec
jmp
outsb
shll
insb
fists
inc
xorb
out
jo
fdivs
adc
stc
jge
adc
sbb
mov
mov
pop
mov
mov
rcr
aad
and
lock
inc
pop
ret
sar
push
push
lock
inc
push
sti
lret
bound
jbe
in
int3
jmp
test
mov
stc
mov
xor
cmp
xchg
repz
es
and
pop
sub
rcrb
dec
bound
adc
dec
dec
and
cwtl
pushf
mov
lret
fdivl
out
pop
outsl
xchg
ljmp
inc
subb
incb
clc
aas
call
inc
cwtl
bnd
js
clc
push
cwtl
out
rolb
stc
ret
jl
sbbl
push
mov
icebp
xchg
dec
mov
cli
push
btc
faddl
sbb
call
lods
gs
mov
arpl
fs
int3
mov
sub
dec
sbb
stos
mov
dec
adc
mov
jge
out
stos
cwtl
fnsave
inc
fmulp
push
push
loope
in
pusha
cld
leave
pusha
inc
add
popa
jle
fwait
xor
push
mov
cmpsl
xor
push
mov
jo
loopne
rcrl
outsl
test
test
mov
push
sbb
push
inc
cmp
lds
call
dec
and
pop
inc
mov
pop
je
xor
jg
add
out
xor
sub
jp
clc
inc
std
in
stc
mov
jne
aaa
mov
and
pop
sub
pop
sahf
mov
jmp
int3
push
jle
daa
inc
dec
jmp
test
adc
ja
mov
add
hlt
std
inc
or
pushf
or
inc
in
idivl
ja
dec
test
fisttpll
xchg
test
and
pop
mov
mul
pop
shrl
hlt
jno
gs
and
adc
add
dec
out
lret
movzbl
stos
cmp
cmpsb
adc
lret
cld
out
cwtl
and
dec
cld
sub
lods
jp
pop
and
xlat
cltd
jo
inc
push
fwait
xchg
out
push
push
popf
sub
jle
pop
and
rcrl
lods
sbb
movsb
inc
mov
mov
int
sbbb
in
mov
lea
sbbb
pop
push
push
lods
and
jo
stc
adc
push
ds
pop
push
push
shlb
dec
into
jo
test
pop
lds
xchg
push
mov
add
sub
mov
imul
leave
cmpsb
cltd
js
jns
repz
mov
jo
mov
jp
mov
mov
inc
imul
imul
jbe
inc
hlt
xchg
adc
or
ja
aam
push
popf
sub
sub
hlt
fwait
mov
mov
movsl
xchg
xlat
xor
in
push
in
inc
outsb
jnp
subl
mov
daa
lcall
inc
pushf
or
stc
movsb
lret
lds
mov
out
dec
pop
pop
dec
or
lcall
lcall
aam
movsb
xor
in
jnp
inc
lret
mov
jne
aam
aam
subl
push
xchg
outsb
test
pop
je
xchg
es
push
testb
fwait
push
addr16
in
cwtl
jne
xor
inc
ds
sub
clc
adc
or
testb
xchg
call
cmp
xchg
pop
ja
inc
imulb
clc
js
xor
mov
sub
inc
push
fimuls
pop
sar
int
and
repnz
sbb
scas
jo
incb
cmpsl
or
inc
adc
cmp
or
jle
push
daa
sbb
dec
jge
pop
xor
xchg
push
fdivp
enter
or
sub
push
sub
fs
or
inc
out
mov
js
ud1
shrb
aam
lahf
or
mov
daa
mov
les
xchg
out
xchg
jecxz
pop
loop,pt
and
jb
dec
pop
or
xor
and
push
inc
aaa
dec
mov
mov
rorb
xchg
pop
rol
negb
shr
dec
stos
movsl
repz
outsl
sub
test
es
dec
mov
mov
jne
inc
shlb
jo
hlt
xchg
mov
mov
push
sbb
push
cltd
push
pop
aad
arpl
add
lcall
inc
data16
pop
jne
jle
mov
das
push
sbb
cwtl
lahf
jns
in
add
jg
in
jnp
test
movsb
pop
outsb
lea
xor
xchg
xchg
jle
mov
xchg
pusha
mov
jge
mov
adc
shrb
or
cmp
daa
movsb
repnz
les
shrl
jecxz
lcall
adc
lods
out
mov
lahf
loop
cmpl
outsl
fistl
cs
mov
test
outsl
push
inc
aaa
enter
test
int
jmp
jle
imul
xchg
mov
test
mov
movsb
nop
xor
nop
fildll
inc
jns
cmp
hlt
mov
xchg
lea
and
cmp
cli
xchg
stos
inc
shlb
and
cmpsl
frstor
scas
sub
dec
sub
cmc
rcl
cmpsl
mov
sbb
pop
mov
sti
sahf
call
cmp
cs
adc
lods
fisttpl
das
addr16
jae
sub
xchg
addr16
sti
dec
cli
fstpt
xor
mov
mov
fs
fsts
arpl
ret
pop
xchg
mov
fidivrl
insl
pop
sbb
sbb
mov
std
pop
insb
inc
or
js
xlat
out
mov
pusha
notl
cmp
test
stos
dec
push
sarl
add
mov
and
lahf
jne
and
jmp
addr16
cmp
sub
mov
cmp
pop
cwtl
mov
and
popf
insl
aas
or
test
ss
scas
add
test
mov
aaa
bound
insb
sub
jno
test
mov
add
mov
lods
loop
pop
movsb
inc
mov
je
dec
and
into
jl
add
dec
fbstp
xchg
jg
xchg
xor
insl
push
insb
js
ss
inc
popa
push
nop
int3
xchg
popa
fcomps
cmp
loope
loop
pop
out
int3
jo
pavgw
int
mov
sbb
aas
es
bound
lods
scas
icebp
xor
xchg
mov
pop
dec
xchg
xchg
mov
cmp
xchg
add
jo
in
xchg
movsl
xchg
mov
or
nop
lds
dec
fldt
testb
xor
in
aas
cmc
pop
bound
lock
mov
mov
pop
lods
sbb
and
das
mov
mov
popf
stc
mov
cmp
and
and
stc
imul
cwtl
sbb
ss
test
mov
stos
int3
enter
idivl
pushf
testb
jp
xchg
sbb
pop
and
jb
mov
stc
dec
imul
mov
push
ret
mov
sub
add
out
and
push
ret
fsts
cmp
dec
mov
or
cmp
cmp
ds
dec
sbb
jge
stos
jecxz
dec
ficoms
xor
push
mov
aas
decl
mov
rcrl
or
lret
cmc
inc
inc
and
jge
jmp
fdivl
arpl
jmp
xchg
jmp
flds
aaa
jne
stc
and
loopne
cwtl
and
sbb
inc
insl
lahf
jb
inc
rolb
or
and
add
xor
dec
out
mov
scas
adc
rcrb
dec
dec
mov
jo
in
in
loopne
je
or
jb
sub
push
pop
add
adc
into
jg
pop
rep
mov
cmp
jnp
mov
jmp
inc
rolb
lahf
sub
push
movsl
call
mov
cmp
mov
loopne
out
iret
mov
pop
daa
mov
mov
xlat
mov
cmp
clc
xchg
sub
adc
and
fucom
bound
cmpsb
fdivl
pop
les
and
adc
mulb
mov
mov
into
pop
hlt
fs
mov
pop
jl
sti
push
push
imul
imul
icebp
jle
or
mov
push
movsb
addr16
xor
push
fdivs
out
iret
repnz
pushl
cmp
sti
mov
sub
mov
fmul
das
fidivrl
push
mov
xor
dec
loop
je
dec
icebp
push
and
adc
test
gs
les
aas
test
pop
lock
test
bound
adc
pop
lods
mov
nop
mov
imul
xor
push
out
mov
fdivrs
inc
cwtl
lods
cmc
in
repnz
and
jmp
jmp
dec
mov
imul
mov
psubsw
and
push
mov
inc
imul
lret
pop
xchg
lods
cmp
ficomps
loope
lods
add
push
imul
les
lods
dec
cmp
adc
roll
arpl
mov
push
pop
aam
movsb
mov
insl
stos
push
test
cmp
scas
xchg
ficoml
icebp
lods
jecxz
or
jle
dec
and
int3
and
sub
lret
fs
cli
shufps
ret
lret
dec
xlat
push
inc
mov
mov
out
fsubs
addr16
bound
addr16
outsb
add
mov
xlat
push
aas
pop
or
xchg
add
xchg
out
and
mov
jns
outsb
mov
fs
xchg
mov
xchg
sti
jb
cmp
scas
mov
mov
shr
jle
test
or
daa
sahf
adc
addb
leave
fists
enter
adc
xchg
lds
int
sub
push
push
xchg
shlb
cmc
fdiv
inc
push
inc
dec
xchg
adc
ja
push
fldcw
out
sub
adc
adc
lods
adcl
or
mov
in
or
testb
fcompl
lcall
in
scas
and
aam
daa
dec
sub
in
mov
push
adc
cmp
mov
into
push
popf
mov
xchg
mov
mov
mov
dec
add
lret
xchg
sbb
mov
fs
popf
sub
je
inc
iret
xchg
sub
lock
into
mov
iret
daa
mov
call
popf
andb
mov
cli
xorb
mov
iret
xor
cmp
add
mov
pop
shrb
xchg
jmp
cmp
mov
xchg
ret
add
out
sbb
inc
or
repnz
fstpt
testb
jnp
mov
dec
pop
call
cwtl
iret
test
mov
js
jge
mov
cmpsb
push
mov
iret
or
dec
mov
rol
xor
rcrb
pop
movsl
inc
test
and
mov
insb
loop
jns
add
rcl
out
out
xchg
cld
nop
out
iret
daa
fwait
sub
fdivrs
test
dec
movsl
mov
dec
sub
xchg
dec
imul
sbb
sahf
xor
dec
aas
shll
in
scas
adcb
mov
popf
fisubrs
jl
jo
jg
jbe
fistpl
cmp
cli
dec
scas
and
fs
lock
lock
xor
xchg
jge
addr16
je
jg
jb
repnz
mov
sbb
andb
fwait
xchg
dec
pop
lahf
lea
scas
and
in
ss
pop
mov
xor
out
push
push
sub
mov
inc
push
cmpsb
std
aas
icebp
sbb
lcall
stos
xchg
adc
jl
lret
movsb
adc
pop
loop
cmp
xor
fistl
sub
sbb
shrl
mov
lret
sub
sarl
push
mov
hlt
inc
incb
mov
in
or
sti
or
mov
in
mov
xchg
push
test
aam
js
out
out
xchg
ja
inc
out
and
out
push
sahf
shlb
cmp
gs
sub
xchg
or
dec
xchg
adc
add
mov
xor
outsb
mov
mov
fidivs
and
in
stos
arpl
fcomps
or
subl
nop
imul
and
ljmp
mov
xor
test
dec
push
dec
lock
in
sub
int
adc
in
stos
and
iret
fmull
insl
push
xor
clc
pop
push
adc
dec
jg
hlt
and
pop
pop
aad
lods
push
test
ffree
sbb
add
and
add
cmp
push
loope
lods
fdivp
out
roll
shrb
loopne
icebp
cmp
out
pop
cmp
push
bsf
mov
mov
adc
or
mov
adc
call
sub
xchg
shlb
push
and
lahf
push
xor
push
std
lds
lock
lds
push
movsl
jne
or
sahf
pop
test
andl
daa
mov
cld
cltd
test
xchg
dec
push
outsl
sbb
leave
pushf
mov
enter
add
ljmp
jno
mov
adc
mov
push
cmp
pop
in
and
xchg
leave
cmp
push
stc
ljmp
neg
push
adc
andl
add
xor
ljmp
push
sub
add
and
test
into
movsb
lds
push
inc
mov
lret
insb
scas
dec
xor
cmpsb
mov
jo
jo
inc
sub
cli
xor
imul
sti
pop
and
pusha
inc
jg
pop
mov
dec
and
xorl
adc
push
pop
outsl
jnp
lret
jmp
mov
sbb
xchg
and
adc
in
inc
or
dec
fldcw
cmp
lea
bound
jecxz
cmp
jno
clc
sahf
mov
mov
dec
and
adc
push
incb
cmpsb
jge
gs
aas
xchg
cmpsl
and
xchg
jecxz
pop
pop
lahf
test
add
call
pop
mov
xchg
stc
jno
fdivl
movsl
jecxz
dec
fdivrl
test
rcl
mov
dec
cmp
pop
cmp
mov
fbstp
fmull
aaa
mov
ja
xor
bound
repz
mov
adc
movsb
xor
xor
push
loopne
fwait
xor
test
inc
xlat
repnz
xchg
mov
jo
sbb
inc
sti
lcall
cwtl
mov
fdivl
test
shrb
adc
jge
sub
xchg
into
xchg
add
into
mov
pop
ljmp
insb
cmpsl
jmp
push
or
lahf
and
pop
add
push
loop
dec
adc
xchg
dec
lock
test
or
pop
stc
xor
jno
cmp
sub
jo
ret
out
cwtl
ja
mov
add
int
jecxz
enter
or
fstps
pop
sub
cmpsl
test
insl
sub
aad
mov
pop
out
stc
pop
add
mov
xor
and
pop
pop
pushf
xor
stos
push
test
mov
pop
cmp
jne
mov
cmpsb
dec
leave
inc
fs
jbe
sub
pop
sbb
jns
push
daa
sbb
les
out
sti
cmpsb
stc
or
psrlq
aaa
lods
pop
push
push
ror
lea
movsb
push
xor
push
add
rcrl
cmp
daa
std
fbstp
repz
leave
fmull
jnp
cmpsb
pop
add
mov
dec
mov
or
inc
xor
out
jo
inc
stos
ljmp
dec
sub
mov
pop
insl
adc
mov
or
adc
dec
bound
fcomps
push
inc
pop
loopne
mov
hlt
push
ss
sbb
out
push
rcrb
mov
repnz
mov
bound
push
stc
dec
in
fbstp
int
and
xchg
cwtl
inc
mov
xor
mov
shrl
es
gs
into
mov
test
inc
adc
lock
dec
and
in
xchg
inc
dec
out
test
xchg
clc
out
xchg
xlat
sub
and
je
shll
ds
mov
sub
testb
push
fcoms
lret
cmp
rclb
mov
pop
mov
imul
adc
mov
daa
push
xchg
push
mov
inc
lahf
push
call
mov
fs
pop
mov
pop
repz
iret
data16
cmp
insb
movsb
rcrl
cmpsb
cmp
ja
leave
pusha
out
mov
adc
aad
ds
inc
lock
loop
add
sti
scas
inc
jmp
push
call
scas
out
das
fnstsw
inc
insl
dec
inc
fdivrl
mov
sub
xchg
and
clc
jo
sbb
mov
test
xchg
aam
cltd
add
out
sub
mov
xchg
fs
fldenv
fimuls
jb
cmp
andb
rcll
lods
subps
mov
adc
xor
push
add
int
inc
xchg
dec
mov
xor
loopne
push
nop
scas
sub
adcb
test
icebp
and
mov
cmpsb
inc
cli
jne
gs
push
outsb
lea
ss
jg
pop
add
pop
xor
pop
jns,pt
subb
call
divl
mov
shr
cmp
bound
and
shr
xchg
js
fs
jp
in
fcoms
rcl
lea
dec
in
jnp
in
out
fiaddl
fsubr
gs
mov
cwtl
scas
mov
lods
dec
outsb
stos
fdivrl
mov
pop
scas
jmp
mov
sbb
test
and
push
subl
add
lret
call
xor
and
xchg
adc
sbb
sub
or
cmp
jle
test
push
dec
es
jge
xor
adc
adc
clc
xor
pop
jecxz
adc
pop
shl
out
mov
ss
sbb
js
into
sub
scas
jge
xchg
lock
mov
xchg
or
iret
mov
xor
nop
cmpsl
xchg
in
ret
js
dec
lds
jnp
popa
push
fwait
mov
jo
adc
ljmp
popf
lods
pmaxsw
bound
out
xchg
rdpkru
mov
inc
sahf
mov
sbb
lahf
lods
imul
aas
mov
pop
insb
pop
cld
insb
js
jno
sbb
pop
dec
fsub
add
lds
mov
add
into
fnstsw
adc
loope
xor
mov
push
mov
sti
push
das
scas
mov
hlt
int3
scas
adc
fmull
mov
sbb
add
mov
nop
adc
pop
mov
js
clc
xchg
movsl
inc
arpl
out
mov
pop
outsl
mov
repz
addr16
daa
testl
jb
push
cmp
test
push
inc
mov
negl
dec
aad
xchg
or
mov
pop
sub
pop
pop
ret
inc
loop
std
lahf
idiv
test
xbegin
pop
jnp
cmp
jno
stc
outsl
mov
pop
outsl
adc
jge
mov
cmp
dec
cmc
jmp
or
aas
xor
in
mov
into
mov
or
push
xor
push
dec
pop
mov
xorb
adc
es
mov
inc
dec
and
jl
pop
sahf
dec
mov
aad
push
pop
addr16
mov
dec
test
repz
imul
mull
sbb
jbe
ret
inc
lret
xchg
adc
or
cltd
orl
dec
outsb
dec
or
aam
stos
mov
in
inc
inc
push
cs
pop
sti
mov
mov
sub
pop
aaa
loope
test
jecxz
test
lea
scas
cwtl
incb
arpl
adcb
cmp
add
int
push
mov
loope
pop
jno
addr16
fcomip
ljmp
pop
cmp
dec
mov
jno
sub
mov
inc
xlat
jbe
stos
push
or
xorl
aad
adc
sub
int3
in
pop
jbe
imul
and
cltd
out
ss
or
pusha
repnz
sarb
out
loop
dec
xchg
in
or
imul
fmull
jb
adc
popa
jp
lods
add
and
mov
jae
lods
pop
dec
and
jg
jp
fldenv
inc
out
xor
xchg
sbb
fsubl
mov
insb
imul
jmp
mov
stc
or
shrl
dec
add
outsb
out
jne
fstl
xor
je
jg
cmp
iret
stos
jl
mov
or
cmp
dec
mov
addl
enter
ret
xchg
loopne
jae
mov
xchg
fs
test
icebp
aas
in
inc
pop
xacquire
pop
ret
jns
fcomps
insb
sbb
jns
mov
dec
fucomip
jg
pop
rclb
rorb
xchg
push
adc
inc
xchg
fmull
jmp
shll
fisttpl
add
ljmp
sbb
sbb
mov
mov
jb
dec
mov
pop
fisubs
sub
mov
in
outsl
sbb
sbb
mov
out
inc
jnp
cmp
add
out
push
or
jbe
xor
sub
and
xchg
pop
in
lds
mov
idivb
std
xor
decb
add
cmp
test
mov
push
sbb
push
xor
insl
out
push
or
mov
in
outsb
mov
bound
pop
xchg
dec
imul
ds
jmp
insl
add
or
ret
fstpt
push
xchg
jae
and
jb
jecxz
mov
and
push
sub
aaa
stos
xchg
jns
and
sub
push
push
cmpsl
ds
es
mov
push
jno
aas
out
mov
cmpsl
aad
mov
movsb
xor
inc
shl
jno
mov
push
mov
fwait
pop
cltd
mulb
cmp
icebp
iret
sbb
cs
enter
andl
mov
xor
push
std
mov
jmp
data16
adc
push
in
push
lods
xchg
pop
scas
ds
aas
das
mov
xor
dec
bound
sti
push
mov
mov
pop
jmp
jecxz
xchg
test
xor
cmp
out
imul
decb
pop
jmp
movsb
xor
fnstenv
rep
cli
insl
add
test
jae
and
ljmp
and
fisttpll
data16
lods
stos
in
bswap
xor
jb
mov
movsb
mov
push
inc
aaa
aas
ljmp
lcall
and
loopne
movsl
pop
lock
push
popf
lahf
test
inc
mov
add
or
rcll
mov
mov
xlat
mov
sub
das
or
mov
dec
mov
jge
hlt
popf
jae
or
decb
iret
icebp
xor
jb
pop
push
pushf
mov
dec
adc
push
js
addl
pop
mov
adc
imul
mov
sub
sbbl
push
jge
inc
pop
out
pop
sub
insl
mov
inc
lods
pop
add
sahf
inc
js
push
xchg
push
in
cmpsl
pop
xor
sub
adcb
mov
jmp
ds
stos
dec
es
in
xchg
jmp
mov
inc
fldenv
cwtl
jl
add
pusha
cmpsl
lahf
xor
or
rcl
test
andb
mov
ss
xor
inc
imul
pop
icebp
xchg
movsb
inc
idivl
jecxz
xor
add
xor
mov
lea
insl
out
rclb
int3
imul
jae
outsb
imul
leave
pusha
or
jb
cltd
cwtl
ja
lret
iret
into
scas
mov
into
mov
fsubrp
xor
rcrl
inc
mov
mov
imul
and
fisttpll
push
fcmovnu
pop
imul
sysexit
popa
outsb
pop
adcl
imul
push
cli
rolb
and
mov
repz
iret
and
and
mov
arpl
mov
cmpsb
js
mov
dec
and
popf
jmp
into
test
mov
pop
add
mov
xor
inc
and
add
icebp
xor
pop
insb
or
xchg
jge
scas
ret
push
sub
jb
cwtl
mov
dec
mov
inc
pop
frstor
sub
mov
xor
test
inc
mov
sbb
leave
dec
mov
leave
loope
sub
adc
mov
or
loop
mov
xorb
and
mov
out
fsubl
xchg
es
xor
js
xor
insb
test
add
into
cmp
in
rcr
stc
nop
out
cwtl
das
lret
sub
mov
push
push
ljmp
jno
xchg
movsb
inc
es
sbb
sub
call
and
das
rorl
jbe
push
xchg
cmp
push
add
cmp
jno,pn
dec
movsb
pop
lcall
dec
add
pop
or
std
push
sub
pop
fimull
or
mov
sahf
mov
ss
mov
mov
push
shlb
cmpsb
aam
testb
popf
neg
in
addr16
sahf
cmp
xchg
mov
or
jg
adc
daa
sbb
fwait
scas
push
jbe
loop
adc
aas
sbb
mov
jmp
cmc
cmp
mov
loopne
divl
add
test
push
mov
mov
push
ds
ret
push
push
mov
decb
xchg
add
or
pop
jns
xchg
pop
pusha
mov
movsl
mov
cmpsl
cmp
aam
sbb
mov
js
xor
aaa
jg
out
push
int3
dec
test
pop
mov
in
cmp
mov
push
loope
cmpsl
rcr
jg
flds
xchg
test
js
outsb
cmp
fdivrs
outsb
mov
lret
and
cmp
xor
insl
adc
popf
iret
xchg
adc
in
and
dec
stc
jae
and
dec
xor
shl
sub
addb
pop
lea
mov
test
stos
inc
int
int3
popa
repnz
enter
imul
ja
daa
mov
jns
rcrl
das
xchg
push
lcall
imul
add
daa
sbb
insb
roll
repnz
cmpsb
lods
push
lcall
mov
shl
stos
inc
int
push
test
out
leave
pop
pusha
cmc
aas
shlb
cmp
xor
stos
xor
enter
xchg
andl
fidivrs
add
jg
dec
sbbl
sti
adcb
stos
inc
insl
aad
repnz
mov
in
shrb
mov
mov
inc
cmp
ss
sbb
and
in
xchg
pop
in
stos
jbe
sub
jp
fcompl
orb
dec
jnp
xor
jmp
jnp
aaa
jne
cli
in
movsl
cld
stos
push
iret
push
xchg
int3
inc
dec
filds
int3
and
or
mov
mov
pop
mov
mov
jnp
out
nop
ret
hlt
mov
xor
call
je
push
xchg
insl
lods
or
fimuls
push
nop
lret
addr16
mov
sbb
ss
stos
es
xchg
mov
ret
int3
repz
xor
insb
sub
ss
imul
mov
lret
jmp
and
jns
jp
fnstenv
inc
fcoml
pop
dec
and
push
mov
faddl
mov
mov
je
xchg
stos
xor
js
mov
clc
out
sbbb
adc
repz
je
lret
dec
push
jb
xchg
xor
movsl
mov
pop
push
scas
mov
cmp
leave
jae
adc
movsb
xchg
xchg
cmpsb
mov
mov
aaa
mov
sub
pop
lcall
push
addr16
cmp
fisttpl
sbbl
dec
push
mov
pop
pop
adcl
sbb
xchg
push
fimull
jl
adc
or
add
cmpsl
pop
filds
mov
rcr
outsl
fnstcw
in
mov
push
test
cs
jecxz
test
ja
sti
out
lahf
xchg
mov
mov
adc
adc
mov
dec
adc
add
mov
rorb
push
adc
les
or
xor
mov
dec
insb
xchg
add
xlat
or
sub
or
mov
loop
pop
jmp
mov
pop
add
dec
mov
lods
cmc
push
cmpsb
test
lret
cld
xor
adc
or
incb
fnstenv
repz
stos
push
mull
push
mov
in
cmpb
sub
sub
aas
dec
xor
loope
repz
loop
ficoml
mov
mov
data16
cwtl
jno
nop
xchg
jno
xor
cmp
sub
jo
adc
scas
cli
push
int3
mov
inc
push
pop
push
data16
mov
test
hlt
inc
out
add
and
pop
xor
sub
mov
addr16
popf
pop
or
inc
jno
test
out
xor
and
jns
jno
lock
shr
inc
int
pop
pop
jle
sti
rcll
mov
adc
adc
dec
dec
add
dec
mov
out
call
popl
xchg
loopne
loopne
cli
shl
out
movsb
pop
test
cld
inc
mov
inc
sbb
inc
fcomi
mov
cs
push
scas
adc
sub
mov
popa
dec
sbbl
mov
and
ficompl
loopne
sub
jmp
add
cltd
and
mov
je
inc
adc
enter
xor
cs
mov
sbb
mov
shrb
xchg
scas
mov
jnp
icebp
push
testb
nop
fs
push
sub
aas
push
xor
push
or
and
fwait
push
test
sti
push
pushf
sub
icebp
aaa
sbb
sahf
jb
outsl
call
mov
std
pop
shr
cmp
jecxz
adc
or
dec
daa
imul
enter
imul
pop
mov
sbb
fiadds
lea
mov
loopne
cmp
push
push
xchg
push
push
inc
fisubl
mov
insb
xchg
out
fnsave
mov
cmpsb
jge
mov
inc
pusha
jnp
mov
sub
jle
push
fcoms
dec
fists
xchg
and
lock
mov
inc
inc
cmp
mov
aaa
adc
or
test
mov
sbb
or
loopne
data16
pushf
mov
hlt
cmp
dec
nop
pop
repnz
and
loopne
xchg
mov
xchg
jg
pop
jmp
loopne
leave
inc
loop
inc
out
addl
mov
dec
in
mov
sub
jns
fistpl
xchg
pop
pop
aas
fnstsw
repz
into
movsl
cmp
mov
xor
dec
xchg
xor
push
cli
add
adc
mov
jmp
xchg
push
xchg
scas
testb
sbb
test
xchg
imul
pop
mov
mov
bound
adc
xchg
jge
gs
mov
add
and
popa
sub
mov
js
in
mov
loopne
into
inc
es
xchg
jmp
js
mov
ja
and
mov
mov
sarb
aas
add
out
mov
dec
cmc
fidivl
dec
dec
mov
popa
add
jl
gs
pop
popf
dec
xchg
lret
dec
sbbl
xchg
sub
fnstcw
lea
in
xor
or
sbb
cmpsl
es
jge
stos
inc
push
cmp
jb
mov
add
mov
mov
insb
sub
nop
stos
ds
ret
mov
movsb
gs
aas
mov
and
and
out
icebp
xchg
cmp
and
xchg
jmp
mov
sbb
push
call
outsb
lret
out
adc
ret
sbb
ficoms
cmp
sti
xchg
inc
rolb
xor
add
sbb
pushf
loopne
stc
je
jae
sbb
cmp
icebp
out
push
push
aad
and
into
mov
sbb
notl
addl
bnd
and
rcrl
mov
jle
sub
leave
mov
mov
adc
inc
pop
enter
scas
add
mov
inc
push
xor
push
xlat
jmp
mov
mov
out
mov
pop
adc
jge
dec
mov
mov
jno
push
imul
aad
dec
xchg
cmp
andb
lds
mov
mov
aam
sarl
xorb
je
sub
cmp
push
mov
mov
aad
pop
pop
pop
push
xor
sti
stos
inc
in
jle
mov
pop
push
sbbb
cld
iret
fistpl
rorl
movsb
pop
mov
out
dec
xlat
xor
aam
mov
xchg
clc
dec
pop
insl
dec
rorb
std
mov
jae
push
addr16
mov
and
push
das
out
mov
sub
dec
imul
mov
repz
and
mov
mov
aaa
xchg
loop
fbld
sub
and
dec
sbbb
cmpsb
stos
mov
test
push
mov
dec
fadds
and
push
out
call
jecxz
xchg
bound
jnp
sbb
sub
mov
inc
jle
cmp
xchg
push
pop
popf
icebp
jle
or
mov
or
mov
fdivs
sbb
insl
insl
das
and
mov
xchg
in
sub
stc
nop
jmp
mov
xor
notl
xchg
xchg
push
sahf
mov
test
sbb
jb
test
pop
pop
pop
sbbl
mov
sbb
mov
int3
mov
add
testb
jbe
fnstcw
popf
push
leave
mov
jb
pop
jb
xlat
mov
add
sub
mov
test
sub
in
and
xor
and
xchg
or
fs
lret
stc
je
testl
pusha
sti
push
jae
andb
mov
jge
popa
add
test
mov
pop
insl
and
outsl
jns
inc
shlb
ret
sub
inc
ja
stos
pop
dec
icebp
or
data16
adc
or
xchg
pop
fs
nop
and
popa
xor
rcll
insw
pop
inc
pop
lea
or
xchg
into
mov
rorb
aad
adc
or
sub
addl
repnz
mov
js
xlat
es
adc
loop
pop
out
add
arpl
mov
mov
xlat
sbb
push
sbb
mov
outsb
rcr
pop
push
lods
add
and
adc
or
or
cli
dec
jae
or
mov
ret
outsl
lahf
mov
nop
xchg
xor
pushf
xchg
add
pushf
xchg
fistpll
or
dec
fwait
cmpsl
and
faddp
mov
and
es
sub
jg
and
sub
pop
out
mov
lret
dec
and
sbb
test
cmpsb
xchg
sub
imul
cmp
mov
push
stos
jmp
pop
mov
cwtl
icebp
dec
ljmp
mov
and
loope
in
mov
cs
es
sbb
out
test
dec
mov
test
dec
xor
dec
pop
sbb
lods
mov
xor
lock
adc
pop
icebp
jno
cmpsl
scas
repz
xchg
jns
ss
lcall
cmp
and
push
mov
std
cmp
mov
ds
call
inc
and
adcl
enter
jp
mov
fnstcw
mov
add
pop
dec
sub
movsl
inc
and
mov
les
aam
pop
jge
mov
mov
cmp
dec
popa
xor
xor
gs
add
in
inc
or
fdivs
mov
xchg
xchg
add
add
mov
out
cmp
push
inc
ss
fs
ss
jg
es
mov
push
mov
mov
and
insl
les
dec
lods
sub
jg
xor
xchg
push
mov
jne
lods
mov
out
fnstenv
mov
scas
sub
jmp
lret
cmpsl
xor
jmp
daa
out
sbb
or
insl
in
inc
dec
ljmp
adc
add
call
adc
adc
cld
int
mov
outsl
jecxz
nop
lcall
cmp
jle
xchg
sbb
sub
rcrl
cmp
hlt
cltd
or
adc
jmp
pop
fbld
sub
jns
push
ret
hlt
orb
lret
pop
cs
rol
icebp
dec
lahf
jbe
adc
pop
dec
std
xchg
sbb
subl
xor
lret
inc
mov
jo
jb
push
xchg
mov
or
dec
incl
faddl
jns
cltd
jae
cli
fs
mov
enter
dec
cmp
insb
sbb
push
jno
pop
dec
flds
cs
pop
push
push
nop
mov
dec
or
lods
pop
add
inc
ljmp
pushf
and
dec
loop
xchg
fldcw
mov
inc
vpunpckhbw
dec
sbb
xor
jmp
enter
outsb
mov
jno
mov
xor
shll
inc
in
jmp
xor
in
ds
jge
fisubs
fidivrs
or
adc
push
inc
pop
popf
and
or
notb
cmp
mov
adc
aam
or
sbb
push
repnz
mov
add
leave
pop
fsubrs
fimuls
push
into
mov
int
ds
popf
stc
mov
insb
jnp
xchg
pop
rcrl
push
inc
push
cwtl
jge
pop
lret
repz
iret
sub
pop
sub
test
xor
inc
lahf
addl
out
push
inc
inc
jg
pause
shlb
ss
or
mov
sub
negl
jle
push
das
rorl
mov
sti
push
sub
mov
sbb
mov
scas
call
out
mov
jo
jns
pushf
ret
mov
dec
jnp
pusha
inc
lods
mov
into
fimuls
jmp
dec
insl
push
shrb
dec
xor
xor
repnz
call
dec
test
bound
insl
push
sahf
shlb
or
testb
aad
cli
insl
xchg
ja
mov
cltd
fwait
xor
xlat
cltd
pop
mov
jge
jle
fisttps
mov
pop
into
movsl
or
sub
pop
and
jne
add
outsl
and
xchg
xor
lods
or
xchg
mov
and
cmp
or
and
leave
push
sbbb
fidivs
push
adc
je
push
push
clc
xor
call
sbb
in
sahf
pop
or
xchg
cmpsl
idivl
pop
movsb
andl
fs
dec
hlt
mov
and
stos
cmp
xchg
add
xchg
ss
pushf
call
cmc
cmc
jmp
outsl
out
jnp
or
cmpsl
into
pop
stos
int3
lret
pop
ficoms
in
xor
gs
fidivrl
pop
lret
scas
inc
xor
push
jo
aad
cmp
mov
inc
or
out
gs
test
xlat
bound
in
dec
adc
pop
cltd
mov
leave
rclb
iret
test
lret
add
sbb
or
jp
stos
mov
stos
insl
mov
into
xor
add
push
inc
push
and
mov
icebp
subl
mov
cs
cmpsl
jle
loop
lcall
sbb
jecxz
js
jl
xchg
xor
mov
jl
icebp
sahf
lret
ffreep
push
dec
aam
hlt
sub
packsswb
inc
mov
les
lret
mov
adc
jecxz
aaa
sbb
cwtl
jecxz
loope
js
mov
in
dec
ret
push
cmp
jne
loope
lret
xchg
xchg
loop
sub
dec
fldln2
inc
fldt
cmp
adc
negl
xchg
mov
test
popf
and
lret
pop
lret
pop
dec
sub
fsubrl
dec
mov
loop
xor
ds
stos
push
pusha
stc
xchg
cmp
inc
ficoms
andb
movsb
add
imul
enter
xchg
pop
aaa
xor
jmp
test
sahf
xchg
in
sbb
mov
jecxz
add
or
xchg
mov
fisubrl
or
mov
rorl
cli
and
adc
pop
pop
popa
ror
dec
sub
mov
mov
pop
mov
or
and
movsl
mov
or
sub
xor
cmpsl
lea
sub
adc
jbe
sub
mov
stos
push
mov
int3
arpl
fsubrl
push
push
dec
xchg
mov
pop
lods
dec
lahf
mov
push
lods
pop
pop
sbb
ret
loop
or
sti
cmpsb
imul
pop
stc
dec
mov
cmp
fdivr
fisttpl
outsb
inc
fstpl
fimull
mov
icebp
pushf
and
mov
mov
insb
mov
lret
les
shll
xchg
imul
lock
push
popa
stos
idivl
mov
jo
sbbb
addl
sub
cli
call
pop
loope
rolb
aas
xchg
and
push
mov
sbb
or
insb
dec
pushf
adc
lock
fldenv
pop
int
aaa
sbb
lcall
cmpsb
and
and
loopne
push
jbe
loop
arpl
mov
pop
sub
rcrl
sub
in
push
out
fucom
adc
or
insl
mov
ret
hlt
js
aad
dec
sahf
mov
mov
jbe
subb
test
movb
andb
inc
fidivrl
icebp
or
and
add
incb
neg
fwait
or
sbb
out
cmp
cmp
add
mov
sbb
jge
fisubrs
mov
arpl
sahf
daa
enter
xor
sti
aad
jl
push
fidivs
sub
ja
xor
push
std
inc
test
sub
hlt
sahf
xor
inc
inc
cmp
bound
aaa
adc
fs
cmpsl
aam
mov
in
pop
icebp
aam
lret
fistpll
int3
rcl
mov
fsubs
sbb
jp
pusha
in
inc
out
imul
sub
add
jne
in
cmpsb
push
pushf
scas
andb
or
fimull
adc
jl
cmp
dec
lock
imul
adc
popa
and
or
in
mov
scas
push
int3
rcrb
push
movsb
xchg
das
jae
loop
push
push
dec
fmuls
push
les
leave
adc
fisttpl
dec
mov
inc
mov
sbb
cmp
shr
cmc
insb
add
call
lock
push
mov
repz
jmp
fcomip
ret
ss
insb
fdivrs
fs
loopne
pop
das
sub
add
fidivrl
push
lea
frstor
adc
test
fs
dec
dec
push
stc
fstp
into
pop
aad
xor
or
shlb
insb
jo
mov
jp
inc
scas
inc
pop
inc
xchg
mov
ret
sbb
test
sbb
push
dec
mov
push
mov
cmpsb
mov
jmp
add
fstpt
mov
cwtl
mov
loope
xchg
adcb
push
fisubl
xlat
lods
pusha
hlt
daa
push
sbb
sti
pushf
and
cli
out
out
ficompl
outsb
lds
add
lods
idivb
es
fsubrs
sub
mov
and
lcall
test
paddsw
mov
jbe
ror
inc
aam
je
rcrl
mov
pusha
and
push
push
in
fsubs
xchg
stc
adcl
test
xor
pop
sub
ds
rcrl
hlt
jnp
push
or
mov
loop
or
mov
xchg
ss
sub
sbb
clc
pop
pusha
or
cmp
push
test
add
ret
aaa
xor
mov
fldl2t
imul
out
addl
rorl
pusha
imul
iret
push
movsb
gs
gs
add
ljmp
push
mov
int
dec
bnd
sub
sbb
inc
loope
clc
gs
imul
sbb
je
or
shlb
jle
sahf
stos
vunpcklps
int
stos
dec
and
cmp
shrl
sub
inc
jb
imul
pop
icebp
sbb
sub
mov
movsb
inc
xchg
loop
aam
je
pop
clc
fnstenv
mov
jne
xor
outsl
mov
adc
sbbb
lahf
pushf
cs
sub
pop
or
fsubrp
mov
stos
xchg
rol
imul
pusha
jge
add
or
sub
jne
mov
movsb
imul
cmp
lea
cmp
sub
xor
and
pushf
iret
dec
pushf
mov
notb
fidivs
jb
int3
lret
mov
test
jb
out
mov
adc
je
stos
mov
and
les
dec
push
mov
cmpsl
mov
out
decl
ret
mov
insl
add
outsl
adc
std
test
push
cmp
pop
adc
xchg
scas
and
shl
std
loope
cmp
cmp
jnp
and
mov
scas
or
iret
and
dec
rcr
mov
test
jno
ljmp
mov
fisubs
repnz
sub
ss
test
aas
jmp
leave
dec
jecxz
aas
ret
dec
aad
fcmovne
into
inc
movsb
fs
jmp
xorb
cmpsl
enter
out
ljmp
das
test
mov
sbb
lds
lods
dec
jo
add
lret
cmp
shl
rorl
pop
rcll
jne
mov
fidivs
rorl
and
mov
or
dec
incl
and
or
mov
dec
mov
dec
in
mov
pop
ljmp
and
and
sahf
and
pop
lock
enter
nop
std
cmp
test
xor
cmp
lea
jecxz
cmp
popf
arpl
sbb
or
fwait
sub
bound
inc
sub
test
xchg
xor
pop
cmpb
adc
ss
loope
dec
or
jb
push
dec
scas
mov
inc
stc
inc
xchg
jge
xchg
scas
xchg
push
test
lods
jno
subb
icebp
mov
add
xchg
xor
jl
pop
call
mov
fwait
andb
andb
fstps
fistpl
add
enter
shld
cmp
clc
push
mov
jle
push
insl
mov
ficompl
ret
jnp
cli
icebp
pusha
pop
mov
cmp
jle
and
dec
flds
lcall
xchg
jno
adc
call
lcall
cwtl
stos
aam
sbb
scas
js
frstor
sbb
or
mov
ret
stos
jne
fsub
mov
rorb
fdivrs
dec
jno
xchg
mov
fmull
cs
mov
ret
push
not
ret
pop
arpl
mov
mov
push
cmp
aas
mov
sbb
push
fstpt
dec
mov
je
into
enter
dec
f2xm1
enter
shlb
ja
mov
mov
cli
or
jb
call
dec
stos
out
ret
dec
test
cmp
add
push
jns
cmp
xchg
push
jl
punpcklbw
addl
xchg
leave
aam
out
mov
out
lcall
xlat
arpl
cmp
aam
leave
push
jp
ljmp
jl
in
push
test
xchg
cli
inc
fldcw
shlb
enter
mov
and
xor
or
popa
dec
jb
fsubs
xlat
and
js
lea
mov
in
pop
movsb
leave
stos
inc
sar
mov
xlat
cwtl
push
jno
adc
out
into
pop
mov
add
push
mov
jae
push
or
sbb
sub
dec
shrl
mov
repnz
notb
movswl
dec
movsl
js
xchg
and
in
xchg
rep
xor
adc
fcompl
push
xor
shll
add
std
leave
stos
clc
leave
lret
cltd
sbb
push
or
cmp
mov
in
mov
pop
pop
loop
insb
in
push
sbb
xor
pop
push
push
mov
aaa
data16
cwtl
push
out
push
jnp
and
das
addr16
fs
mov
xor
mov
fisubl
rcr
stc
mov
aaa
lods
xchg
negl
fidivs
pop
mov
cmpsb
mov
mov
movsl
stos
clc
cmpsl
sub
cwtl
and
dec
and
or
mov
cld
out
inc
insb
shl
popf
addr16
shr
pop
inc
pop
lcall
dec
cmp
jecxz
icebp
push
mov
gs
xor
lock
push
mov
int3
inc
icebp
mov
pop
out
push
mov
sahf
add
out
mov
xor
push
scas
popa
daa
add
mov
les
daa
outsl
test
in
jmp
test
inc
mov
rorl
mov
mov
addr16
pushf
out
js
mov
test
sahf
or
inc
and
mov
fists
jae
je
add
push
xchg
push
sub
jp
pop
inc
pop
sub
jmp
es
pop
cmp
xor
inc
or
fsubrs
pop
sarl
jle
outsb
jne
gs
mov
jnp
sub
pop
jmp
push
dec
nop
sub
imul
inc
jmp
dec
cmp
push
inc
push
dec
hlt
enter
shlb
sbb
outsb
ja
jns
add
cmpsl
xchg
xchg
sub
cwtl
pop
repnz
cli
push
dec
pop
ss
push
cmc
negl
dec
pop
mov
rol
adcl
adc
adc
cmc
dec
fiadds
jno
inc
cltd
daa
fidivrl
loop
pop
stos
mov
into
jno
sub
push
lahf
shll
pop
fldcw
pop
loop
dec
fnstenv
nop
pop
adc
add
mov
call
or
mov
ss
mov
lcall
repz
xor
fisubrs
rcr
nop
gs
sbb
enter
and
push
mov
daa
push
out
lcall
inc
cwtl
pop
mov
adc
push
or
push
mov
xchg
jecxz
pushf
imul
pop
lock
fbstp
int
dec
out
out
lahf
test
bound
mov
xchg
je
out
push
and
cmpsl
iret
dec
push
jb
fcmovnbe
cmp
push
clc
lret
lahf
negb
cmp
adc
int
rol
rcrb
lods
pop
jle
mov
in
loope
mov
in
leave
sahf
jge
adcl
sbb
adc
xor
sbb
dec
fs
mov
in
ficomps
xor
sti
pop
jae
lods
cmp
loope
xchg
jecxz
sbb
addr16
and
pop
sbbl
rep
or
add
xor
dec
push
ret
adc
inc
jo
pushw
insl
mov
imul
lret
popa
clc
add
shll
mov
nop
push
fbstp
mov
repnz
imul
insb
pop
inc
ficoml
mov
add
lods
mov
and
iret
pop
cmp
pop
mov
nop
sub
cltd
mov
adc
sub
std
fsubr
sub
jb
sub
xchg
xchg
inc
xor
push
inc
movsl
ljmp
sbb
and
cmc
inc
shrb
stos
add
out
mov
or
adc
lahf
faddl
test
insb
std
es
add
movsb
shrb
push
and
test
bound
or
mov
cld
insl
leave
scas
inc
sti
mov
test
lea
hlt
jns
cwtl
jae
or
filds
adc
movsl
cmp
sub
fcompp
ret
pop
in
xlat
outsb
sub
cmc
pop
stc
lahf
shl
test
repz
in
or
jae
adc
scas
jg
adc
mov
inc
popf
popa
testl
nop
push
pop
dec
shr
shlb
out
nop
pop
scas
ror
in
xor
mov
dec
mov
adcl
mov
add
pop
pushf
fidivrs
and
and
jno
cmpsl
or
fimull
lods
and
addr16
pop
mov
push
jo
test
xchg
jp
aas
push
scas
cmp
cmp
push
mov
subb
lcall
cltd
std
cs
dec
pop
repnz
subb
and
jne
xchg
in
pushl
sub
dec
pop
push
jo
fisttpll
imul
movsl
aas
mov
cli
std
jl
pop
push
int3
push
xor
mov
ljmp
adc
and
xor
xor
stos
vpunpckhbw
dec
push
data16
ret
jno
sub
adc
movsl
mov
sti
in
mov
or
xchg
cld
into
xor
push
ja
jnp
inc
inc
pop
mov
xlat
imul
popf
clc
popa
clc
popf
dec
gs
hlt
mov
jns
aad
lds
add
cmpsb
mov
xor
and
cmp
push
dec
inc
sbb
in
aaa
pop
outsl
push
cmp
add
adc
dec
xchg
mov
cmp
jo
loopne
cwtl
lods
push
add
jns
add
les
loopne
and
inc
loop
inc
fs
pop
insb
int
push
mov
fcompl
sub
insl
mov
dec
and
test
mov
sub
or
movsl
dec
pop
xlat
test
rcr
fs
adc
xchg
mov
fucomp
in
outsb
add
iret
dec
adc
pop
sbb
add
add
lods
ficompl
add
cmpsl
lea
mov
ss
insl
or
insl
call
pop
jo
dec
add
push
push
xor
popf
pushf
xchg
or
jae
pop
rcl
test
jg
fldenv
ss
mov
xor
ljmp
mov
mov
xchg
leave
out
loopne
push
jp
cmp
inc
lds
std
scas
mov
aam
or
inc
mov
jns
aam
ss
sub
repnz
inc
xchg
xor
inc
insb
mov
insl
aad
enter
lcall
ret
or
push
daa
jmp
mov
lods
xchg
mov
cmp
inc
int3
jp
dec
mov
lcall
mov
xor
mov
xor
push
jg
adc
inc
push
mov
dec
sti
mov
aaa
dec
in
loope
mov
sub
cwtl
stos
xchg
in
mov
push
and
mov
aam
add
jo
cld
in
mov
into
sbb
mov
lret
pop
mov
or
insl
add
cltd
mov
add
addr16
adc
in
sbb
cld
push
push
jle
fdivs
push
push
and
fidivrl
testb
push
jmp
stos
fwait
add
xchg
sbb
cmp
mov
pop
push
xchg
xchg
test
fwait
cmpsl
jg
and
hlt
sbb
arpl
jb
xor
in
sbb
or
inc
xlat
rcl
loope
loope
cmc
adc
loope
xor
out
gs
in
ja
inc
jmp
add
or
push
in
adc
xor
add
jmp
hlt
in
push
out
ljmp
repnz
sub
arpl
movsl
xchg
rcll
add
or
pop
pop
inc
xchg
loope
mov
mov
rep
push
cmp
or
inc
push
lock
jge
cltd
xor
sub
dec
and
int
add
fwait
cld
sarb
cmp
mov
lods
mov
clc
in
subl
jno
aam
lahf
icebp
pop
dec
ret
rep
jecxz
pop
cmp
sbb
es
dec
or
or
data16
add
pop
push
sbb
iret
pop
ret
jb
mov
mov
sbb
xchg
pop
jecxz
xor
imul
xor
xor
mov
ret
push
fnstcw
xchg
popa
rolb
int
push
dec
aad
out
push
pop
xchg
xor
out
sub
jb
test
cmp
push
jmp
or
pop
cld
jmp
fisubl
jmp
mov
cmp
aaa
loop
outsb
push
pop
ja
lds
xchg
mov
add
inc
roll
subl
jb
cmp
add
scas
pop
aas
push
pop
cmp
stos
ja
mov
mov
ret
outsb
movsb
sbb
xchg
mov
insb
dec
fwait
sbb
es
and
sub
ret
jne
lcall
push
cli
or
shll
test
cld
sbb
jmp
and
into
fsubr
sahf
add
testl
add
outsl
pushf
push
pop
push
xor
sub
scas
cld
ds
out
call
cli
movsb
out
popf
scas
test
mov
pop
nop
hlt
dec
dec
jnp
les
sub
push
mov
xchg
jecxz
lcall
insb
xchg
ficoms
int3
aas
mov
mov
outsb
cmp
mov
in
add
xor
fmul
insb
xor
test
mov
imul
and
and
mov
addr16
lcall
mov
jns
dec
jg
inc
les
clc
aad
or
mov
or
movl
cltd
xchg
fucomi
xchg
push
inc
out
mov
inc
adc
rclb
daa
mov
in
addr16
mov
lret
pop
push
cmp
pop
add
mov
dec
pop
sub
clc
sbb
adc
cmp
adc
mov
pop
in
arpl
and
mov
pop
and
adc
mov
andl
xor
data16
stos
sbb
jbe
inc
popl
lock
and
les
mov
int3
xchg
out
lahf
in
add
test
out
daa
lret
repnz
in
ja
or
push
xchg
push
jecxz
arpl
and
into
jl
mov
push
inc
inc
pop
mov
and
rorb
les
fcoml
test
mov
mov
lds
popa
mov
sub
mov
in
mov
sbb
push
mov
sti
mov
imul
in
test
xchg
push
add
cmpsl
ljmp
ja
shrl
adc
push
loope
les
mov
hlt
inc
push
push
addl
mov
pop
pop
aas
iret
mov
and
sbb
adc
outsl
push
jb
bound
fstps
call
jns
lret
les
ficompl
mov
jns
push
inc
fldenv
push
cltd
add
xorb
sbbl
pop
fistpll
or
cmpl
mov
gs
mov
add
xor
jle
push
mov
std
mov
inc
cmp
sub
lret
push
mov
icebp
movsl
or
mov
imul
jmp
fildll
gs
out
stos
inc
and
inc
and
mov
xchg
mov
insl
or
sbb
mov
sti
mov
mov
sub
enter
add
mov
ret
outsl
fadds
cltd
stos
insb
mov
cmp
and
adc
sahf
enter
repz
jb
fistpl
sbb
dec
jecxz
dec
sbb
dec
dec
dec
pop
xor
adc
imul
orb
stos
mov
mov
ja
sbb
xor
push
xchg
dec
dec
shl
lock
fwait
fs
daa
push
loopne
jle
insb
push
imul
cmc
andb
lahf
pop
sbb
ja
imul
pop
jae
into
out
add
inc
out
cmp
cmc
sub
pushl
out
addl
rorb
xchg
outsl
xchg
mov
loopne
jae
cmc
shl
dec
aad
in
shrl
aas
mov
insl
ja
lods
adc
and
xchg
repnz
mov
cmc
js
mov
ja
jbe
movsb
dec
and
xchg
icebp
inc
inc
cmpsl
add
ja
add
or
test
mov
les
xabort
aad
outsb
and
lret
or
mov
fidivrs
hlt
pushf
push
inc
xchg
mov
mov
mov
or
fsubs
lret
or
dec
or
insb
shll
xchg
adc
mov
fcmovbe
out
imul
xor
mov
and
inc
cld
in
fnsave
fcomp
iret
pop
fisttps
jbe
cmp
add
mov
stc
sub
movsb
dec
es
pop
inc
jne
push
mov
xor
sub
mov
pop
jae
cmc
pushf
fisubl
test
aas
mov
fdivrl
mov
stos
pop
push
insb
cli
jnp
dec
ficoms
mov
lret
or
loope
sbb
popa
pop
lods
inc
jo
mov
shlb
aas
xor
int3
adc
jmp
in
adc
pop
jp
push
or
xchg
in
mov
in
mov
repz
xchg
mov
daa
pop
sub
scas
pusha
jg
test
add
hlt
bound
ret
scas
push
xlat
add
loope
fwait
sti
sti
and
mov
dec
xchg
and
mov
ror
jg
and
pop
and
lahf
fdivl
xor
in
idiv
xchg
push
adc
imulb
shll
hlt
pusha
sbb
xor
stos
cmp
push
outsl
out
jmp
push
fstl
in
xchg
mov
in
sahf
and
or
repnz
and
adc
sub
cmc
push
jno
inc
push
and
push
jmp
lret
xchg
and
pusha
xor
push
sub
incb
push
xchg
movsl
mov
pop
lret
aaa
dec
jecxz
ljmp
cltd
sbb
test
nop
mov
int3
notb
stc
fucomi
fldl
xor
inc
fidivl
or
inc
cmp
out
popf
xor
rcl
gs
mov
pop
mov
ds
mov
mov
lock
xor
jne
flds
xchg
test
test
jno
jbe
stos
test
fldt
outsb
push
jno
sub
imul
mov
pop
cltd
movsl
sbb
dec
into
loop
int
sbb
inc
inc
dec
inc
xlat
loopne
mulb
pop
pop
sahf
mov
push
fstl
loopne
adc
lods
imul
sub
xor
out
in
push
and
aam
mov
int3
xor
nop
mov
inc
adc
inc
sbb
pop
xchg
sub
fcomps
push
mov
mov
out
test
and
and
insb
notb
lods
lea
pop
aam
xor
cmp
dec
out
cli
or
xchg
sbb
in
adcl
ret
gs
mov
ss
cli
mov
xor
test
inc
lds
cmp
pop
aaa
stos
mov
les
sahf
or
inc
data16
std
and
scas
and
xor
leave
mov
adc
cld
loope
add
sbb
mov
cmpsb
lods
fidivs
in
in
test
add
push
mov
adc
adcl
lret
mov
sub
jecxz
mov
mov
pop
dec
xchg
nop
dec
jl
cmp
mov
fadd
scas
jnp
inc
xor
mov
push
mov
xor
lcall
push
xor
test
pop
into
das
push
cltd
loop
mov
les
std
clc
mov
movsl
sbb
sub
push
popf
clc
push
add
adc
popf
push
pop
clc
jne
sub
pop
jge
aad
mov
out
pop
push
fwait
pop
into
testl
jbe
std
or
imul
out
pushf
or
mov
and
cld
adc
gs
mov
sub
mov
adc
and
xlat
mov
ljmp
out
mov
stc
popa
sub
cltd
ret
push
repz
arpl
dec
fwait
arpl
std
popa
inc
fstps
pop
ljmp
pop
jns
pop
or
popf
xor
and
scas
push
fs
jbe
cmp
push
aaa
jge
lahf
stos
testb
scas
sub
push
nop
sti
leave
cmp
dec
ja
xchg
mov
dec
push
pop
aaa
inc
ret
fs
dec
scas
call
mov
movsb
repz
mov
inc
fptan
sub
add
inc
loop
xchg
pop
scas
out
frstor
js
lods
mov
xorb
and
int
push
test
jge
mov
add
mov
xor
cmp
inc
mov
icebp
hlt
push
call
mov
jbe
xor
sbb
stc
fbstp
movsl
xchg
std
outsl
inc
add
push
mov
dec
inc
jmp
daa
ret
mov
scas
adc
shlb
lret
cmp
cmpsb
mov
cmp
addl
mov
in
fdiv
sti
shrl
in
jne
imul
stos
insb
jle
or
orb
cmp
pop
cld
pop
shrl
ret
ret
and
pop
sbb
incb
aam
repz
lods
mov
fwait
int
in
faddl
sbb
mov
popf
in
fs
inc
out
mov
ljmp
sub
jge
pop
dec
sub
cmp
dec
mov
out
inc
sub
xor
call
inc
add
call
arpl
in
aad
sbb
jae
jg
jo
pop
sub
dec
mov
sbb
or
cmpsb
lock
js
aaa
xchg
lods
pop
cltd
stc
nop
lret
rclb
sbb
mov
xchg
pop
sub
int3
and
lahf
xchg
sbb
mov
push
jp
jge
pushf
and
imul
push
les
xor
xor
sub
ss
and
pop
xor
ret
dec
dec
lret
lods
mov
sbb
rcrb
imul
inc
dec
cmp
push
inc
mov
sbb
mov
inc
std
cmp
mov
xchg
bound
inc
sbb
cld
and
mov
push
and
test
xchg
data16
jmp
and
lods
stc
lea
outsb
pusha
push
sub
subl
add
ret
cmpsb
sbb
adc
xchg
out
clc
dec
cli
pushf
push
sub
jo
mov
les
mov
clc
mov
adc
arpl
mov
mov
lods
outsl
out
and
out
mov
or
mov
scas
jb
test
ljmp
subb
clc
inc
ds
mov
loope
jge
repnz
cli
pop
inc
nop
cmp
lret
stc
lret
dec
movsb
xor
fs
imul
in
movsb
push
aaa
dec
jmp
out
sbb
xchg
addr16
sbb
or
adcb
mov
jno
inc
stos
jnp
sub
rol
in
ds
pop
xor
test
imull
push
insl
inc
repz
cld
lcall
mov
push
out
or
jge
cmp
fwait
xor
add
mov
fisubs
pcmpeqd
cli
mov
adc
mov
addr16
sub
mov
mov
loopne
adcl
in
dec
leave
mov
mov
rorb
in
sbb
lea
sbb
push
lret
or
fucomip
cmp
lcall
jae
dec
outsb
inc
ja
xchg
imul
out
scas
adc
sbb
test
jno
adc
imulb
cmp
and
fisttps
xor
dec
incl
loope
push
jp
add
out
xor
add
sbbb
jmp
or
sbb
cmp
scas
push
mov
xorl
sbb
xchg
pop
sbbb
xchg
xchg
testb
and
mov
sbb
pop
outsb
shll
cmpsb
mov
pusha
ss
jbe
lods
pop
xor
iret
mov
pop
xlat
mov
rcl
loope
jno
jns
mov
push
imull
faddl
divb
flds
sbb
jg
mov
xorl
aad
jbe
mov
push
test
sbb
out
cmp
jno
pushf
pop
xchg
out
xor
ret
dec
pushf
pop
cmp
sub
clc
in
cmp
in
std
jmp
loope
stc
and
pusha
loope
push
xchg
lret
movsl
cmp
out
mov
ret
push
out
out
inc
sub
adc
popa
dec
pop
scas
mov
mov
pop
fs
insb
adc
jno
xor
inc
or
test
shrb
and
jo
cmpsb
test
sub
xlat
iret
pop
aad
aas
lret
in
ss
push
push
out
arpl
ljmp
jle
shlb
pushf
lods
xchg
pushf
lret
mov
push
imul
adc
ret
lds
dec
repz
shll
stos
xchg
das
pushf
inc
mov
push
test
fnstenv
pop
and
int3
and
jb
fwait
xor
xchg
inc
clc
or
mov
cmp
or
adc
rolb
jne
mov
jp
out
jge
loopne
dec
fwait
imul
xor
aas
add
xchg
inc
cmp
lea
jno
rcll
insl
loopne
xchg
mov
out
lock
xchg
mov
test
xlat
popl
mov
adc
ljmp
adc
mov
filds
shr
popf
dec
fwait
call
mov
jns
mov
loope
jns
jge
adc
scas
push
sbb
fistpl
push
mov
ljmp
pop
xlat
sbb
int3
int3
push
inc
flds
clc
adc
adc
jb
icebp
daa
outsl
pop
cmp
dec
or
loop
addr16
aas
loope
add
sub
inc
insl
add
sbb
push
stos
cs
push
adc
stc
in
jo
jne
inc
stc
or
push
test
dec
adcb
test
xchg
adc
ja
bound
leave
int
push
cltd
sti
and
push
adc
in
pop
or
iret
mov
lock
jae
fcomp
testb
jne
add
icebp
sbb
lahf
mov
jmp
es
xor
cmp
push
inc
pop
xchg
aaa
pop
sahf
push
ss
xchg
xchg
daa
lock
lea
hlt
inc
inc
xlat
sbb
js
fs
add
shrb
lds
adc
mov
jmp
push
aam
cmp
xchg
and
out
dec
in
mov
lea
mov
lods
fimuls
addl
fsubrl
aas
push
fwait
gs
bound
push
cmc
pop
mov
xlat
xchg
cmp
and
data16
mov
jae
adc
lds
das
mov
ss
cmp
inc
fcmovb
les
push
fwait
enter
arpl
ds
test
lods
xchg
arpl
daa
cmp
xor
fisttpl
gs
and
or
js
mov
jge
lret
test
pushf
sbb
movsb
stos
mov
or
dec
pop
jae
lret
mov
stos
in
sahf
lea
enter
mov
fcoml
push
xor
gs
popf
mov
bound
aaa
movsl
jmp
sarl
popa
xchg
mov
pop
xor
inc
push
dec
add
dec
adc
lock
dec
mov
xlat
mov
test
cwtl
and
and
ret
adc
cmc
inc
or
int3
insb
fildl
adc
pop
inc
inc
fbstp
mov
fs
pushf
push
and
test
aad
fbstp
lahf
inc
mov
push
xchg
xchg
loope
add
mov
loopne
stc
dec
add
nop
xor
std
xlat
mull
ret
outsb
mov
mov
popa
xchg
mov
mov
andb
cs
sahf
adcb
sbbl
dec
nop
sub
nop
jno
test
pop
int3
pop
xor
inc
push
xor
lods
sub
cli
add
push
iret
cmpl
leave
xchg
sahf
xchg
xor
jns
les
mov
out
sub
fdivr
enter
sti
pop
sub
and
xchg
fucomp
loop
mov
sub
addb
xchg
xor
push
outsb
dec
pop
cmpsl
mov
loopne
add
test
xor
mov
ds
insb
lahf
sbb
decb
cmp
jmp
popf
or
xchg
push
arpl
out
add
fstpl
and
mov
mov
scas
sbb
out
jno
sbb
inc
jne
fsts
out
ret
adc
incl
sub
rcrl
jo
out
push
and
cmp
lods
mov
push
std
xchg
test
sub
insb
cmpsb
lods
les
sub
jno
popa
rcrb
ret
jo
jnp
xchg
cwtl
in
pusha
push
push
jns
dec
hlt
das
int3
adc
orb
push
cwtl
call
repz
mov
pop
mov
and
add
or
cs
push
cmp
mov
fwait
sub
pop
negb
cld
or
jmp
fidivl
mov
mov
cmpsl
out
into
arpl
dec
xchg
inc
loopne
rorl
sbb
xchg
nop
dec
sub
mov
xor
loopne
inc
aad
insb
ret
in
cltd
and
imul
movsb
mov
mov
fldenv
mov
cmp
int
cmpsb
push
rcl
fnstsw
outsb
inc
inc
enterw
hlt
sub
and
repnz
scas
subl
cmc
rorl
adc
stos
mov
cmpsb
nop
and
out
mov
sub
popf
out
xor
fldt
and
shll
xor
fstl
test
sbb
pop
push
stos
sub
imul
mov
insl
aaa
daa
mov
inc
lods
or
xchg
jmp
jno
jb
or
in
xor
xor
or
dec
js
cmp
sbb
jae
or
push
jo
mov
or
or
out
pop
lret
ds
inc
cli
cmp
sub
xchg
or
stc
into
mov
popa
outsl
and
sbb
daa
ja
and
xor
in
fs
push
inc
imul
pop
push
jo
dec
xchg
pop
cs
andb
mov
scas
fdivl
pop
ljmp
cltd
jl
dec
mov
sahf
and
testb
imul
scas
mov
test
ljmp
sbb
dec
test
movsl
popf
cmpsl
notb
and
or
adc
cmp
mov
scas
mov
or
jnp
xor
cmp
fsts
mov
mov
ljmp
xor
lods
cld
out
sub
push
xchg
in
cld
incl
mov
fadds
mov
mulb
mov
sub
jmp
aad
shrb
inc
mov
inc
rolb
enter
aaa
fnstsw
or
sub
xchg
sub
jo
adc
fdivs
outsb
sub
js
mov
jecxz
xorl
test
or
sub
cs
cmpsb
lret
mov
jl
sbb
rcll
adc
adc
xchg
xlat
repz
lahf
stc
test
lret
lea
pop
mov
xor
xchg
hlt
mov
xchg
rcrb
add
int
cmp
aam
jbe
out
adc
inc
mov
and
push
pop
sti
and
ss
dec
pop
push
idivl
ret
jecxz
add
pmaxsw
dec
dec
xchg
daa
mov
dec
or
adc
add
nop
mov
jmp
shll
shrb
mov
cmp
xchg
sub
xchg
add
dec
pop
ret
sti
mov
aas
push
push
mov
cld
lcall
dec
fs
aas
inc
inc
out
int
and
fdivrp
dec
xor
add
pop
testb
addr16
rol
outsl
out
add
cmp
sub
xchg
sub
xor
push
mov
fisubrl
das
sahf
jl
in
pushf
sti
or
aad
xor
testb
push
stos
push
faddl
mov
movsl
out
jg
leave
mov
pop
int3
jg
scas
sub
sub
adc
push
and
inc
jne
pop
ret
xbegin
dec
and
dec
add
scas
repnz
sbb
cltd
push
push
dec
add
jle
lret
xor
sahf
jne
roll
shll
xor
addr16
callw
sbb
push
dec
pop
in
pushf
xor
into
push
in
xor
pushf
cli
push
cmp
bound
dec
mov
cmp
adc
inc
push
jg
push
pop
outsl
sbb
sarl
mov
inc
stc
xchg
test
insb
divl
lods
sub
cs
cmp
push
inc
in
xchg
mov
test
add
jo
push
scas
pusha
mov
pop
cwtl
mov
outsb
push
adc
pop
mov
rorb
in
xchg
sub
jp
mov
arpl
sbb
push
lods
stc
or
cli
xor
jmp
int3
jae
rolb
movsl
jne
and
xchg
outsl
jns
in
ret
sub
ret
and
lret
incb
daa
cmp
pop
icebp
add
gs
stos
js
test
int3
inc
notb
repz
cwtl
cli
decl
xor
lahf
notl
cmpsl
sbb
cmp
cmpsb
jns
jl
dec
mov
mov
cmp
aaa
imul
sti
jne
or
jge
mov
cs
test
inc
push
je
sub
jo
push
pop
inc
xchg
sub
sbb
mov
mov
ret
push
sbb
dec
adc
bnd
mov
pushf
stc
into
pop
or
adc
and
cmpsb
jg
fs
ja
inc
and
divl
psllq
mov
mov
sub
ljmp
out
add
arpl
aam
fsubr
inc
adc
sbb
aam
rcrb
test
adc
loop
xchg
sub
iret
pop
jmp
or
sbbb
inc
push
out
adcb
push
mov
es
push
sub
mov
insb
sub
dec
mov
out
adc
mov
es
mov
je
out
mov
cmpps
xchg
mov
loope
cmp
std
adc
test
or
iret
enter
or
lret
jb
jge
movsb
cltd
mov
add
lods
leave
je
dec
mov
iret
mov
push
cmp
dec
xchg
fistpl
shl
pushf
add
sbb
mov
xchg
adc
clc
jp
adc
je
push
push
je
cmp
in
js
pop
mov
cmp
mov
fbld
mov
insl
dec
dec
adcb
adc
es
pop
mov
jle
ret
lods
inc
or
sub
cli
xchg
mov
sbb
cltd
inc
popf
ljmp
movsb
cmpsl
mov
fistps
sbb
or
outsl
in
mov
outsl
pushf
in
fwait
popa
xlat
scas
push
jecxz
mov
and
adc
add
fisubs
call
in
aam
pop
sahf
inc
out
sti
shrl
jge
ficompl
xchg
pop
cs
pop
mov
cmp
in
and
push
add
xchg
push
popf
popa
out
data16
dec
add
dec
shrl
aaa
push
loop
mov
fnstenv
test
std
cltd
adc
or
in
les
add
icebp
push
int
or
dec
or
dec
aad
ret
es
loop,pt
pop
cmp
mov
jae
jle
clc
fidivrl
adcb
cmp
jecxz
cmp
push
pop
mov
xor
push
jo
cmp
fnstsw
push
mov
insl
push
add
mov
fnstcw
lods
outsl
test
xchg
in
sarb
adc
push
jge
sub
nop
pop
gs
ljmp
sbb
loope
test
in
inc
pushf
outsl
mov
jecxz
movsb
lods
cmp
insb
into
sub
scas
mov
pop
out
cmpsb
lock
test
sarl
add
shlb
sub
fwait
pop
cli
xchg
aam
push
push
mov
jecxz
pop
mov
mov
rorl
mov
rclb
xchg
sar
lret
cs
xor
jns
sbb
or
imul
cmp
push
dec
movsl
mov
adc
scas
push
cmp
notl
iret
adc
sub
add
mull
adc
out
adc
pop
jns
push
stos
cltd
xchg
jne
adc
test
fdiv
mov
out
mov
cmpsl
aam
sub
inc
mov
sub
in
or
mov
in
into
jge
mov
inc
fcoms
rep
mov
scas
les
enter
repz
aad
mov
inc
lds
add
clc
inc
aad
loope
jmp
sbb
sub
xor
pop
les
out
xchg
outsl
xchg
es
loope
shrb
add
xlat
pop
xchg
imul
sub
jmp
rcll
negb
bound
negl
sbb
aad
jbe
sub
rolb
cwtl
pop
cwtl
ljmp
pushf
inc
add
mov
iret
in
mov
push
outsb
xor
movsl
jo
popa
repz
pusha
xor
fcoml
popa
data16
lret
mov
adc
jp
xor
ljmp
scas
lea
jnp
xchg
and
aaa
mov
mov
lahf
scas
inc
sarl
aad
sub
insl
aaa
xchg
or
xor
pop
scas
jge
push
aas
pop
lods
jb
sub
add
jge,pt
dec
inc
subl
lods
fdivl
xchg
lahf
mov
cli
add
fsubs
inc
pop
xor
cmpsb
repz
sub
jle
cs
jle
xor
push
pushl
scas
scas
pop
xchg
jno
sbb
pop
cmp
sub
jo
inc
testb
pushf
cmp
lcall
push
or
mov
aad
push
jecxz
pop
testl
jl
add
fistpll
ss
int
jns
inc
inc
pop
test
lea
push
hlt
jg
dec
call
cmp
sahf
push
and
aam
lock
mov
out
ret
outsb
xor
decl
push
mov
sbb
pop
rclb
imul
inc
das
adc
sbb
test
and
jb
mov
mov
nop
sbb
sbb
aad
dec
call
dec
rcrb
cmpsl
jge
or
inc
into
xchg
xchg
in
jno
mov
mov
or
mov
add
jne
in
stos
data16
hlt
mov
fsubl
mov
test
sub
push
sbb
fcomip
fadds
add
inc
fisttpl
loopne
scas
adc
iret
xchg
stos
xor
xor
sbb
call
insb
add
icebp
je
jo
mov
adc
cwtl
fwait
adc
cli
notb
xchg
jae
dec
inc
jmp
enter
iret
pop
fstpt
push
mov
mov
dec
and
cwtl
insl
sub
xor
js
xchg
xor
sahf
push
mov
adc
fstpl
inc
xlat
out
adc
inc
fst
rcll
add
aad
ret
inc
rol
mov
scas
call
dec
stc
and
mov
out
ret
roll
or
idiv
in
push
sub
cld
inc
xchg
jecxz
xchg
or
sahf
das
and
sti
push
loopne
roll
sahf
aam
push
outsb
mov
mov
push
nop
sbb
ds
and
ds
in
inc
fnstenv
shll
test
mov
enter
mov
or
divl
sarb
adc
sub
adcb
popf
xchg
sbb
jp
out
pop
mov
pop
out
aad
inc
roll
iret
xor
js
pushf
jg
pop
repnz
outsl
jno
push
stos
rclb
js
insb
jl
test
sahf
pop
cmp
aad
sti
sbb
ret
jg
mov
push
mov
hlt
mov
mov
iret
inc
shlb
jns
or
cmpsl
jns
mov
sbb
push
mov
jecxz
push
mov
in
xchg
push
pop
lods
cmpsl
rcrl
rcll
in
test
push
lcall
push
add
rcr
add
dec
adc
clc
mov
pop
jle
fnstsw
mov
fcoms
jle
pushf
mov
or
jnp
popa
jbe
data16
les
push
fwait
lret
lret
std
and
lahf
mov
jne
std
mov
push
pop
dec
sub
push
mov
je
jne
sub
sbb
rcll
ss
sub
in
gs
cmp
popa
test
push
test
repnz
xchg
or
je
hlt
jge
cmc
into
mov
xchg
fxch
arpl
cmp
sbb
dec
cmp
je
inc
push
dec
jmp
push
into
les
cmc
mov
or
cltd
xchg
negl
aaa
clc
jl
inc
pop
insb
mov
imul
and
cmp
je
mov
bound
shll
dec
cwtl
pop
mov
push
mov
mov
ret
cwtl
stc
jns
sbb
sbb
and
mov
sti
and
sub
mov
call
mov
js
lea
mov
pop
mov
xchg
adc
mov
cld
cmpsb
aaa
jge
push
leave
mov
test
fadds
jl
push
cwtl
out
push
and
addr16
jge
sub
xchg
or
mov
jp
enter
jne
sub
dec
lods
fwait
push
pop
push
xchg
jb
mov
int
test
push
xor
pushf
scas
adc
jns
jae
cwtl
insl
adc
fdivl
push
fcompl
xor
mov
xchg
lods
mov
add
andl
call
dec
lods
jle
cltd
scas
int
xor
cld
push
out
sti
xorb
cwtl
mov
out
adc
pushf
dec
sti
mov
push
xchg
stc
push
inc
inc
mov
and
in
xlat
sub
fdivr
xchg
cmpl
mov
mov
test
xlat
adc
cld
dec
aad
ret
nop
mov
test
js
lcall
std
push
les
fdivs
imul
add
and
cmpsb
movsl
push
mov
dec
shll
sbb
daa
push
mov
xchg
loopne
ret
adc
or
test
es
cwtl
and
bound
ja
cmpsl
movsl
inc
arpl
lcall
cli
mov
push
hlt
xlat
andl
clc
ljmp
cltd
mov
movsl
cld
ss
scas
push
pushl
xor
mov
sbb
and
stc
xchg
nop
xor
scas
out
fistpl
fisttpll
push
pop
xor
mov
mov
shll
leave
sub
pushw
mov
je
lahf
cmpsl
ds
rcrb
sbb
jo,pt
xor
add
rolb
popa
loope
outsb
mov
loopne
dec
and
shr
cld
bound
sbb
ljmp
sbb
xchg
cs
jmp
dec
dec
pop
lret
insb
ret
cmpsb
dec
sbb
mov
loope
add
lock
pop
movsl
dec
pop
fimuls
aaa
popa
jae
mov
xchg
dec
fwait
scas
out
push
xor
lds
negb
in
add
push
rcll
pop
add
pop
js
adc
fistpl
arpl
pop
pop
adc
or
or
pop
lods
lret
inc
loope
int3
push
mov
insb
in
sbb
push
jg
jne
inc
mov
lret
shlw
xlat
insl
jne
sahf
hlt
push
xchg
ret
dec
dec
mov
enter
scas
mov
sbb
xorl
addr16
insb
cli
add
iret
lahf
div
test
or
mov
push
dec
dec
inc
mov
int3
xlat
dec
movsb
bnd
int3
mov
jmp
lea
aam
push
rcrl
mov
inc
jecxz
sbb
call
xorb
mov
fsubl
or
je
xchg
dec
push
jno
add
jle
inc
xchg
fstpl
push
xchg
pop
push
sub
sahf
aad
or
dec
pop
cmpsb
sub
sub
daa
mov
sahf
int3
xor
jp
sbb
add
mov
int
lods
nop
testb
pop
and
mov
xor
dec
stos
in
pop
dec
push
shll
or
sbb
outsb
jne
push
add
fisubs
pop
push
jmp
mov
cld
test
fmuls
add
out
pop
sahf
pop
and
inc
xor
rorb
mov
into
mov
mov
mov
je
mov
out
lcall
pop
popl
xchg
divl
scas
cmp
adcl
negl
neg
clc
sahf
xor
fld1
mov
inc
add
ja
sub
and
xor
cmp
cmp
lods
jecxz
aad
mov
lods
or
pop
imul
jge
jmp
push
sbb
push
neg
jb
jl
push
icebp
andb
add
jno
push
movsb
mov
loopne
fld
loopne
mov
adc
aas
push
and
daa
mov
inc
pop
add
lcall
jae
scas
es
xchg
mov
sbb
jnp
ss
mov
jge
ficoml
mov
call
cmp
repz
decl
adc
out
dec
std
cs
pop
jbe
mov
mov
or
xchg
scas
roll
sub
and
popa
iret
sub
cli
pushf
mov
scas
ret
ljmp
je
pop
and
in
jne
jns
ret
mov
ss
sbb
ljmp
imul
int3
cmp
mov
mov
aam
clc
sub
imul
gs
popf
mov
mov
add
and
jmp
mov
popa
jp
cmpb
adc
cmp
jno
movsl
xchg
add
push
cli
ficoml
mov
mov
adc
int
stc
popf
icebp
add
lcall
add
sarb
adcl
dec
loop
enter
or
hlt
xor
addr16
sub
loopne
aas
out
test
pop
jno
and
push
sbb
lods
jmp
inc
push
adcb
fwait
add
inc
sub
lock
jae
std
lods
mov
sub
sbb
jnp
xor
mov
data16
into
mov
adc
outsl
orl
decb
sti
push
stos
rcr
in
pavgb
mov
rol
pop
fwait
arpl
mov
in
add
lahf
and
repnz
imul
pop
inc
nop
adc
pop
mov
push
mov
inc
fisttpl
lcall
xor
in
popa
xor
je
push
mov
jne
adc
and
pop
cli
dec
sti
imul
incl
mov
test
add
or
jge
daa
mov
xor
xchg
push
lret
inc
lret
jmp
in
xor
test
mov
loope
mov
push
std
jae
adc
dec
jae
pop
xchg
pop
sbb
jp
mov
adcb
subl
adc
fs
mov
mov
sub
xchg
jle
pop
insl
aas
lahf
and
mov
and
add
scas
sub
shl
inc
sbb
or
imul
push
sbb
mov
xchg
adc
call
cmpsl
bound
sbb
iret
cmp
push
stos
jmp
jecxz
pushf
or
mov
jmp
dec
sub
nop
push
xor
mov
pop
cmp
fnstenv
inc
pop
ret
push
sub
mov
inc
lret
inc
lods
pop
ss
cli
xor
or
push
xchg
adc
stos
cmp
inc
ret
pop
sub
test
inc
out
sub
mov
andl
shrb
dec
sbb
jl
jo
cs
fstpt
or
arpl
and
push
jne
sarb
daa
inc
or
jb
mov
inc
or
mov
idivl
lret
outsl
bt
mov
mov
dec
ret
int3
dec
jae
call
or
js
and
in
inc
in
cli
iret
xor
sarb
add
data16
pop
xor
dec
cli
xchg
mov
aad
int3
and
cmp
cwtl
outsl
jp
bound
xchg
cli
arpl
flds
stc
dec
mov
mov
mov
mov
inc
ficoml
scas
xor
mov
cmp
out
sub
aas
pop
mov
in
jmp
inc
aam
int
mov
xor
cmp
into
push
insb
or
pop
jnp
adc
stos
es
test
sbb
cli
clc
iret
cli
in
mov
loop
pop
lods
push
dec
test
daa
xor
adc
sbb
cmp
mov
lods
xor
stc
xlat
push
jo
cli
or
mov
sub
jb
fnstcw
push
cmp
mov
testb
mov
push
xor
call
xor
mov
xor
fisubl
mov
fst
stc
in
test
call
mov
xchg
pusha
or
sub
xchg
fwait
stos
lahf
stos
lahf
lcall
add
mov
adc
cmp
mov
insb
push
jecxz
pop
adc
xchg
popa
shrl
imul
mov
cmp
inc
cld
push
dec
popa
xor
bound
cltd
push
adc
sbb
push
mov
das
add
ret
scas
jb
orb
inc
add
hlt
push
mov
jnp
cmpsb
imul
sbb
ds
xor
mov
nop
daa
xor
sub
inc
or
movsb
lret
jge
cmpb
divb
repnz
subl
sbb
xchg
lods
and
jl
cltd
push
mov
sub
scas
mov
or
in
ja
cmpsb
push
mov
mov
fs
in
test
sub
popf
lret
in
aas
jne
jmp
lods
xor
popf
dec
jl
jbe
or
lods
pop
inc
je
ret
mov
cmc
aad
xchg
movl
mov
sub
mov
ds
dec
xlat
daa
clc
les
xor
test
jbe
cld
adc
cmp
test
je
adc
nop
dec
shrb
cmp
imull
sbb
pop
fldenv
lret
scas
pop
lods
notl
lods
or
out
xchg
jecxz
clc
repz
cmp
or
xchg
mov
popf
sub
pop
or
insb
pushf
sub
xchg
arpl
xchg
out
mov
notb
xchg
fiaddl
push
aad
dec
xchg
jecxz
mov
or
aaa
jo
imul
push
xor
scas
push
scas
push
sub
fistpll
jno
sub
data16
lea
ja
xchg
xor
stc
in
jbe
rclb
test
mov
jge
cs
fsubrl
cmp
adc
mov
pusha
mov
mov
out
dec
sbb
add
adc
cmc
dec
fs
push
vmwrite
pusha
mov
imul
add
push
jmp
pop
shr
mov
leave
data16
insl
repnz
in
inc
scas
push
in
test
stos
or
push
sub
mov
scas
cmp
ss
inc
frstor
mov
cmpsl
mov
loope
rclb
adc
aad
pop
into
shl
cmpsb
cmp
mov
adc
fucomp
aaa
enter
pop
xor
movsb
cs
scas
ss
xor
jmp
xor
clc
pop
popf
jo
mov
jg
sub
addl
xchg
addr16
pop
ja
js
lahf
mov
cmp
jecxz
fs
into
and
or
sub
dec
mov
fsubr
mov
das
rorb
fwait
scas
sbb
dec
cmp
in
fwait
add
mov
addb
sub
aad
jmp
testb
pop
decl
and
shll
out
fnstenv
xchg
rcl
xorl
out
popa
or
enter
mov
jge
out
add
pop
lock
mov
cmp
fisubs
jo
xor
sbb
outsb
imul
pushf
nop
jb
lods
cmp
mov
mov
sbb
push
inc
or
clc
clc
cs
push
sbb
cli
pushf
fidivrs
scas
inc
movsb
sahf
xor
and
leave
xor
push
data16
xchg
repnz
mov
std
mov
sub
cmp
mov
pop
mov
lret
cmc
push
mov
sbb
minss
cmp
clc
out
aam
adc
add
in
xor
jge
jo
or
lock
fs
sbb
jbe
mov
jb
clc
xchg
ret
scas
jnp
push
mov
mov
divb
iret
push
and
test
in
mov
sti
icebp
mov
sbb
sub
or
mov
or
inc
out
mov
xlat
push
test
jle
mov
xchg
dec
dec
pop
popa
lock
push
cmp
imul
insl
mov
or
sbb
and
sarb
cmp
push
sbb
dec
cmpsb
push
cmp
in
test
js
push
and
pop
outsb
std
xor
dec
pop
dec
jl
es
or
rcrb
cmp
int3
jno
mov
out
int
xor
dec
mov
sub
lret
popf
push
les
in
cmp
int3
mov
mov
mov
in
xchg
test
adc
inc
pop
mov
and
ret
fimull
pop
loopne
sub
jmp
push
in
pop
sub
sub
or
jmp
or
hlt
mov
lock
sub
loope
repz
std
fs
add
mov
push
ret
cmp
ja
jo
ret
sbbb
mov
pop
xchg
or
dec
mov
andl
or
ret
pop
xor
aam
inc
call
test
mov
mov
fidivl
mov
jl
adc
ret
push
cwtl
loop
inc
arpl
inc
xlat
incb
pop
inc
jbe
push
ss
dec
fucomp
loope
lahf
repnz
out
loop
lods
inc
push
stos
push
rcll
push
cmp
inc
mov
jns
jle
loope
or
ret
mov
xor
arpl
jp
ret
fdivs
inc
add
aam
stos
sbbl
lds
loope
mov
jbe
sbb
or
pop
mov
pushf
mov
mov
inc
mov
loopne
jmp
decl
int3
and
pop
scas
dec
or
mov
mov
shrl
cmp
fstps
stos
aam
pop
jb
dec
jge
mov
pop
inc
push
std
add
mov
xor
adc
scas
ljmp
call
xchg
out
xor
xor
sub
int
dec
push
fldl
push
das
sub
hlt
lds
mov
and
addr16
gs
mov
push
mov
push
push
movsb
in
ficompl
sbb
ja
dec
inc
push
jecxz
sub
or
cmpsl
xor
scas
jno
aad
pop
fildl
ret
cmc
mov
xchg
lds
pop
sarl
or
push
dec
movsl
cmpsb
out
mov
mov
jno
xchg
jns
adc
hlt
inc
pop
pusha
sub
test
sbb
cmpxchg
and
outsl
inc
push
inc
scas
loop
mov
pop
aad
loop
fsqrt
jb
xor
mov
cmp
inc
add
shrl
enter
adc
lretw
lods
nop
shlb
pop
in
pushf
xchg
mov
out
out
or
xchg
nop
and
enter
ret
cwtl
sti
xchg
xor
test
push
mov
lcall
aam
lock
add
cmp
add
adc
test
bound
mov
inc
push
cltd
fnstenv
add
sub
xor
push
mov
cmp
sub
pusha
js
xor
test
test
adc
jle
xchg
imul
push
imul
dec
aad
mov
and
and
insb
cmp
mov
ror
mov
popa
mov
dec
cmp
push
pop
cmc
lcall
loope
das
into
mov
adc
pop
das
test
inc
sti
mov
pop
sub
int
pop
repz
sbb
jmp
dec
add
add
mov
sahf
in
repz
xor
dec
push
xchg
cmp
lahf
mov
mov
sub
pop
cmp
rol
mov
les
xchg
fists
pushf
mov
fiaddl
addb
cmp
cmp
ret
mov
adc
push
add
mov
movsl
hlt
sub
jg
in
cmp
sub
lea
bound
popa
mov
cmp
inc
stos
xchg
out
jg
pop
movsl
add
lea
icebp
loope
pushf
xor
add
movsb
xor
test
test
xor
push
add
into
jle
cmc
data16
fs
notl
gs
and
scas
fnstenv
out
shl
ss
iret
loop
jne
sub
push
and
xchg
xchg
jl,pt
push
addb
mov
pop
scas
jge
rcrl
dec
int
fucomip
mov
shll
mov
cmc
ret
test
mov
cmc
jg
xchg
imul
in
jne
or
mov
fmul
test
mov
arpl
or
mov
dec
in
mov
mov
jb
lret
jle
lret
leave
repnz
leave
shrl
jle
shll
mov
ret
popf
add
jbe
stos
lea
xor
cltd
xor
pop
insl
xchg
mov
xor
mov
mov
xlat
cs
jno
std
xchg
data16
cmp
jmp
xor
jb
pop
jl
pop
subb
adc
ret
xchg
mov
push
push
pop
push
push
cli
sub
inc
data16
jb
cmc
pop
jo
add
adc
pusha
ss
gs
mov
mov
subl
fcompl
xor
nop
pop
jg
dec
lock
or
mov
pop
cmp
in
fistpll
ljmp
jb
in
jns
gs
push
push
mov
das
daa
sub
add
dec
in
out
xchg
push
push
add
jge
pop
pop
insb
mov
jge
jl
mov
icebp
sbb
ds
mov
adc
mov
je
push
cmp
leave
push
pop
inc
dec
popa
jle
mov
push
cmp
jne
jb
xchg
sahf
add
sbb
mov
mov
and
fcmovnbe
push
int
nop
test
mov
daa
dec
cwtl
rolb
cwtl
dec
dec
ds
jmp
icebp
or
cmp
xor
add
sub
std
bound
sbb
stc
ret
adcl
sti
sbb
mov
jmp
push
lahf
pushf
and
iret
gs
andl
dec
ja
leave
dec
pushf
xchg
dec
enter
xor
out
cli
sbb
inc
jg
push
pop
imul
adc
cltd
pop
dec
insb
sub
mov
pop
stos
rorb
pop
iret
xlat
arpl
aam
int
adc
jbe
sahf
int3
sbb
mov
cmp
ja
mov
jb
and
mov
lods
test
mov
cmp
aad
decb
int3
ss
xchg
push
aad
cmp
cwtl
mov
pop
add
push
mov
or
je
mov
adc
lods
jg
cli
push
add
jle
and
in
into
enter
mov
xor
cltd
ljmp
xchg
or
incb
xor
jmp
dec
cli
pushf
out
stos
inc
mov
addl
xchg
sub
hlt
push
inc
daa
imul
jmp
fsubr
ds
push
test
pop
gs
add
mov
jne
and
xchg
inc
sub
fcmovnu
hlt
xchg
dec
jg
divb
push
nop
sub
test
inc
dec
movsl
out
pop
aaa
sbb
mov
mov
rcl
xchg
add
pop
xchg
adc
push
clc
xchg
xchg
mov
dec
mov
insl
mov
mov
mov
fiadds
jnp
mov
xlat
movsl
das
mov
pusha
push
les
sub
inc
mov
shll
push
aam
mov
mov
cmp
or
test
mov
fisubrs
or
xor
out
into
cltd
testl
mul
push
fsubl
xor
std
pop
xor
cwtl
xor
cmpsl
xchg
clc
add
push
jbe
fldl2t
or
jb
mov
sbb
cmp
imul
rorb
fs
jb
lods
xor
popa
mov
adcb
loopne
adc
mov
pop
scas
icebp
cmp
lods
cli
pushf
gs
ljmp
into
xor
add
ss
arpl
sbb
mov
dec
repz
movsb
inc
cmpsl
mov
scas
test
dec
push
pop
and
add
xchg
xor
popf
mov
pusha
aad
sbb
mov
loopne
fs
stos
int3
imul
lret
jno
mov
push
test
imul
mov
sbb
push
push
and
mov
mov
mov
pop
dec
sbb
test
clc
mov
adc
test
sub
repnz
mov
icebp
add
lds
rcrl
and
cmp
in
inc
jp
lea
out
leave
js
jno
rol
dec
mov
dec
inc
setp
cmc
out
repz
sar
ret
and
xchg
adc
bnd
jp
sub
scas
fwait
repnz
aam
cmp
and
int3
fneni(8087
mov
or
sub
jno
imul
push
imul
mov
or
pop
call
mov
mov
inc
and
arpl
packuswb
cld
dec
out
cs
push
int
fisttpll
aaa
add
test
test
inc
mov
jecxz
stc
cmp
test
xchg
mov
pop
jp
or
mov
outsl
mov
out
ret
xchg
xchg
dec
dec
adc
ret
fisttps
mov
insb
rcl
add
pop
xor
cmp
adc
stos
inc
adcb
fucomip
mov
and
neg
or
push
sub
jl
into
mull
in
mov
icebp
aam
movl
pop
sbb
lock
lcall
xor
adc
xlat
outsb
sbb
pop
jmp
sbb
mulb
scas
cmc
xorl
gs
inc
fsubrl
sbb
push
cs
dec
test
shlb
aam
push
lret
adc
shll
rcr
sub
out
mov
clc
aas
inc
imul
rcrl
pop
jle
pushf
stc
outsl
ds
jge
lahf
das
sbb
add
push
inc
xchg
pop
outsb
and
cs
arpl
sahf
xchg
adc
mov
aas
fs
into
roll
mov
mov
in
xor
or
pusha
inc
loope
and
bound
jbe
mov
and
gs
sbb
aaa
mov
in
fdivrp
pushf
pop
or
mov
xchg
add
mov
movl
jge
lahf
xor
dec
jnp
and
dec
jp
shrl
ss
ja
fidivs
outsb
jo
out
cld
out
xor
insl
mov
in
call
dec
pop
sbb
mov
jns
lcall
mov
popa
cmpsl
js
xchg
add
hlt
jae
mov
nop
cmp
outsl
jne
adc
mov
test
jle
pusha
daa
pop
lret
mov
arpl
lods
enter
daa
aas
in
dec
add
inc
xor
mov
xchg
lods
stc
mov
push
out
nop
popf
into
sub
xor
add
aam
cli
xorb
sbb
jl
fstpt
aas
dec
jb
push
dec
ja
push
cs
xchg
or
mov
out
rol
jmp
mov
mov
pop
andl
sahf
sbb
mov
jge
call
inc
xlat
sub
sub
test
ret
das
cmp
push
int
adc
lds
sbb
insl
int
pop
lds
add
sub
mov
clc
and
sub
testb
jle
fbstp
jp
add
stos
ja
mov
push
loope
and
mov
pop
nop
mov
in
or
fisubrs
stos
sub
mov
movsl
inc
cmc
and
sub
mov
incb
dec
iret
pop
repz
jne,pt
lods
jle
insb
mov
cmpl
push
sbb
lcall
pop
dec
cs
mov
enter
jnp
imull
jle
sbb
adc
jmp
scas
mov
ds
pushf
call
enter
jne
add
sbb
mov
jge
into
mov
dec
push
sbb
in
fcos
add
and
fisubrs
adc
subl
inc
mov
add
je
or
adc
out
in
insl
xchg
stos
mov
xchg
mov
dec
sbb
pop
mov
pop
repz
nop
jle
bound
or
jg
push
popa
pop
in
inc
loop
shrl
jno
iret
mov
xor
sti
out
in
loope
push
adc
or
dec
mov
popa
adc
ss
sub
xor
xor
imul
mov
jb
out
push
mov
sub
insl
scas
idiv
rol
ja
mov
pop
pushf
push
shlb
pop
dec
sbb
push
xor
clc
cwtl
dec
sahf
inc
adc
xor
mov
stos
in
sbbl
adc
jo
cld
and
lret
mov
test
and
pop
lea
ljmp
add
cmc
sub
call
inc
mov
shlb
lahf
out
mov
inc
mov
gs
pop
inc
jge
cmpsl
mov
imul
pushf
add
cmpsb
cmpsb
xchg
scas
mov
sub
mov
aad
push
in
inc
adc
jnp
cmc
js
cmp
adc
pop
je
frstor
popl
mov
iret
inc
shrl
mov
imul
cmpsl
cmp
ds
cmp
subl
inc
jl
jp
jne
sbb
pop
sbb
in
cmpsl
mov
fwait
mov
lock
cmp
sbb
mov
and
clc
adc
fs
jo
push
sbb
push
dec
push
mov
add
lods
subl
sub
sbb
out
insb
jp
jl
dec
dec
push
aas
mov
xchg
push
push
sbb
repnz
les
dec
mov
in
cmp
pop
in
aam
inc
ficomps
cmpsl
out
mov
push
and
add
mov
mov
pop
sbb
fcoml
enter
lcall
ret
shlb
jne
bound
mov
mov
and
aam
sbb
out
push
and
mov
push
adc
pop
pusha
aam
pop
mov
dec
out
daa
arpl
push
mov
out
call
pop
int3
outsl
daa
xchg
push
lods
sbbl
aaa
and
aaa
clc
sahf
negl
push
into
xchg
call
inc
add
mov
mov
sbb
aas
jp
sbb
and
add
jno
jp
or
inc
mov
mov
fmuls
and
lods
testl
sub
sahf
stos
xor
into
xchg
out
js
arpl
push
sbb
in
subb
mov
ss
mov
sub
data16
enter
sbb
jae
imul
xor
cmpsb
inc
sub
pop
push
adc
dec
out
icebp
xchg
mov
and
inc
fstpl
xchg
sti
pop
fldl
sbb
mov
mov
stc
add
cmp
and
les
int
jo
jns
mov
add
test
mov
aam
dec
notl
cmp
aad
push
repz
dec
loope
xchg
loopne
inc
and
pop
les
andb
mov
adc
loopne
js
ret
scas
mov
lds
mov
roll
dec
push
imul
jecxz
xchg
je
test
out
inc
pop
cmpsb
xchg
in
pop
testb
and
push
fwait
inc
loope
cltd
out
push
xchg
and
push
test
clc
daa
mov
pop
sbb
fildll
push
cmp
xor
mov
mov
ret
and
mov
shl
mul
scas
andb
cmc
and
sub
push
cmp
pop
sub
int
loop
add
rorb
mov
push
inc
fcmove
imul
daa
pushf
cmpsb
jg
pusha
ds
xchg
inc
notb
dec
mov
test
fimull
pop
mov
push
movsb
jg
mov
mov
and
adc
push
aam
xchg
inc
mov
lds
cld
push
cltd
fmull
xchg
enter
idivb
ficompl
out
out
pop
fiadds
out
test
jg
xor
lods
aam
aas
insb
jno
int3
pop
push
into
int
mov
dec
in
jae
popf
xchg
sub
mov
cmc
xor
in
outsb
push
jo
and
xchg
pop
out
mov
jmp
movsb
int3
xor
or
pop
mov
push
add
popf
jp
test
cltd
mulb
and
cmp
in
lods
loope
popa
xchg
push
jnp
scas
mov
sbb
xlat
push
push
inc
movsl
imull
adc
mov
outsb
push
cmp
dec
push
sbb
iret
cld
ds
and
adc
mov
fs
lods
pop
pop
mov
bound
dec
sbb
lret
mov
out
cmpsl
mov
enter
pop
fwait
mov
es
sub
loopne
mov
imul
bound
test
out
pop
mov
shl
repz
sbb
add
lods
stos
pop
filds
mov
shlb
mov
outsl
adc
push
lcall
call
out
stc
mov
loopne
fstl
push
cmp
int
pop
out
out
xor
fildl
lret
pop
pop
out
mov
jmp
dec
and
mov
jp
mov
repz
mov
push
xchg
xor
cmpsl
or
testb
lods
aas
les
inc
dec
icebp
push
ds
das
cmp
cmp
std
xchg
test
jno
cmpl
mov
data16
add
into
xor
iret
loope
xchg
lods
cmp
out
daa
mov
rorb
add
push
fwait
dec
xchg
ss
inc
jecxz
xchg
dec
xor
xlat
pop
push
dec
in
test
ret
popa
out
add
fsubs
test
xchg
ss
adcl
inc
pop
aas
adc
int
pop
and
xchg
mov
mov
jae
cwtl
or
mov
jnp
hlt
or
jbe
cwtl
sub
lcall
sub
bnd
aas
and
add
popf
push
out
sbb
stc
fdiv
hlt
mov
adc
cmpsl
mov
popa
and
xchg
loopne
cltd
push
push
scas
imul
repnz
or
nop
xor
pop
pop
lock
cmp
pop
xchg
insb
das
add
imul
mov
and
xchg
ss
mov
jmp
jp
clc
jmp
ja
cmc
mov
sub
lock
stos
xchg
je
mov
xchg
inc
mov
in
jp
adc
mov
add
cltd
aas
std
cmpsl
adcl
scas
fisubrl
ljmp
add
push
iret
mov
lea
loop
lcall
sub
in
add
lahf
sbb
stos
jmp
sub
lods
lods
fwait
sti
cmpl
les
xchg
into
out
sub
xor
daa
inc
fucomp
or
inc
sbb
leave
jmp
ss
fcmove
ljmp
scas
dec
xchg
rol
jle
cmp
cli
push
mov
mov
pop
mov
shrl
repz
dec
dec
inc
loop
lcall
icebp
lods
in
add
fdivl
push
mov
mov
sahf
cmp
adc
rorb
call
inc
or
test
add
sub
add
arpl
stos
ror
push
inc
push
push
inc
dec
mov
fs
jp
sub
pop
push
inc
fwait
adc
cmp
popa
mulb
xchg
xor
lcall
sbb
rorb
sub
repnz
cmp
mulb
push
faddl
roll
inc
pop
jae
sbb
push
insb
jl
adc
jno
loopne
and
inc
scas
call
call
mov
dec
or
rclb
repz
mov
andb
stos
inc
push
cmc
xchg
add
negl
push
push
pop
cmp
jl
mov
mov
in
mov
mov
leave
xor
push
lret
lret
arpl
mov
jge
or
mov
or
imul
xchg
movsl
push
lds
mov
jns
and
aas
dec
mov
adc
bound
iret
or
dec
or
adc
in
cmp
and
outsb
sub
shrb
sub
or
cmp
dec
mov
cmp
fsubrs
into
push
mov
pop
clc
fbld
test
fs
jns
adc
pushf
push
mov
dec
enter
xor
decl
sbb
iret
fstpt
sar
xchg
push
test
rcll
divps
inc
fldcw
xchg
cmpsl
test
sbb
sub
loop
insl
sub
mov
xor
scas
insl
dec
loop
pop
adc
aam
sbb
jno
adc
xchg
cli
cmpb
lds
into
mov
rcr
leave
cmpl
outsb
filds
sub
adc
fidivl
xor
cmpsb
lcall
mov
ret
cltd
test
mov
aas
sub
mov
aam
jmp
mov
adc
inc
in
jo
dec
outsl
ljmp
stc
mov
or
shrb
cmpb
fsubp
les
rolb
ds
ficompl
xor
xor
push
sub
notl
mov
pop
fdivp
lea
xor
sub
mov
nop
mov
dec
daa
push
mov
out
out
pushf
or
jge
jge
ret
mov
inc
adc
cmpsb
adc
icebp
or
stc
popa
mov
mov
push
jp
pop
ljmp
adc
lea
mov
loop
loope
lods
mov
das
sbb
xchg
aad
in
imul
test
rcl
out
mov
js
in
addr16
push
mov
dec
test
cmpb
jmp
dec
shlb
dec
inc
fcoml
out
sub
decb
outsl
ret
sbb
fwait
xor
mov
pop
dec
lcall
lcall
std
mov
stos
ror
outsl
stos
rolb
movsl
lahf
sbb
inc
jbe
insb
fs
push
rol
and
xchg
or
and
ja
or
mov
pop
out
push
push
dec
xchg
sub
sbb
gs
dec
lods
inc
fldcw
cltd
sbb
mov
lret
adc
xor
fidivs
xor
or
cld
xchg
and
je
inc
sbb
mov
cmc
test
and
fdivl
push
cmpsl
lds
int
mov
push
repz
adc
pop
xchg
lds
sub
loope
jecxz
sbb
jmp
cmp
loopne
sub
sbbb
jp
incl
divb
lods
loope
cltd
xor
add
xorl
push
mov
fcmovnbe
loop
cs
mov
dec
inc
jo
jbe
pop
negb
pop
push
sbb
insl
out
pusha
dec
inc
es
push
inc
fistl
mov
loope
mov
inc
pusha
sbb
lret
das
cwtl
jns
jmp
xor
or
push
cli
shrb
mov
shrl
out
insb
bound
popf
mov
jle
fiaddl
xlat
inc
mov
bound
cmp
xor
adc
aad
add
arpl
lods
outsl
add
adc
repz
hlt
and
rol
push
xchg
movsb
repnz
es
push
cmp
movsl
xchg
dec
ss
das
sbb
dec
pop
xor
push
addr16
arpl
int
mov
lcall
pop
in
test
push
mov
mov
xor
mov
les
test
inc
xchg
sub
sub
ret
mov
jmp
imul
shlb
insb
fnstenv
rclb
out
mov
stc
xchg
jo,pn
adc
dec
ret
movl
mov
insl
jmp
aad
shrl
iret
data16
outsl
xchg
mov
xor
stc
int3
dec
pop
xchg
add
scas
xchg
pop
sbb
jbe
je
lcall
bound
insl
sbb
jbe
cmp
dec
into
lahf
repz
test
or
popf
dec
fisubrl
lock
call
dec
push
shlb
push
mov
in
test
jnp
test
or
dec
jns
mov
jns
mov
mov
adc
divb
arpl
adc
add
mov
in
out
or
sahf
adc
add
push
xor
or
fcoms
xor
pop
mov
popf
jae
jnp
daa
sbb
arpl
push
cwtl
mov
lret
or
push
push
push
sbb
adc
xor
and
roll
adc
fsubr
imul
pop
mov
daa
sbbb
loopne
xor
sbb
sbb
sub
cmp
imul
mov
jle
mov
sbb
pop
ret
hlt
cmp
inc
cwtl
loope
test
jbe
sub
call
mov
add
pushf
add
lret
sahf
sbb
mov
jo
pop
mov
mov
mov
xchg
adc
push
inc
fiadds
pop
ret
in
repnz
jbe
jl
push
mov
xchg
lret
leave
enter
sub
push
popl
mov
dec
push
jne
movb
lret
idivb
sbb
sbb
leave
shrb
adc
mov
jle
les
cmp
rcl
aam
adc
adc
xor
pop
lahf
or
bound
ds
push
test
add
jge
scas
xchg
fdivr
add
sub
pop
cs
dec
imull
dec
xor
inc
sahf
mov
xchg
mov
jl
rcrb
sti
inc
es
out
push
in
adc
out
mov
xchg
pop
outsl
pop
push
test
sub
fldl
jae
fistpll
rol
inc
mov
push
movsl
lds
mov
lcall
js
cwtl
lds
pop
mov
addl
pop
sub
push
pop
sub
mov
push
sbb
pop
mov
add
jl
fsts
sbb
cld
les
mov
popf
movsl
cmp
clc
fwait
mov
mov
fsubl
cli
dec
adc
cmpsb
inc
insl
insl
add
inc
sub
loop
xchg
cmp
sahf
jle
xor
ss
dec
out
mov
insb
mov
negb
test
sbb
das
mov
in
jge
js
dec
inc
pop
nop
test
cmp
sbb
lds
in
sub
sub
mov
mov
lret
sub
sub
push
leave
mov
out
mov
pop
jle
mov
leave
in
add
inc
repz
dec
notl
imul
sbbb
mov
clc
ds
mov
push
pop
push
xor
test
mov
mov
mov
loop
mov
pop
inc
fldcw
xor
jne
jmp
and
mov
push
push
add
cmp
repnz
dec
repz
cmp
sbb
adc
in
pushf
daa
dec
popl
jb
sbb
pop
rorl
xlat
xchg
je
iret
xor
xchg
jae
push
push
es
lahf
pop
dec
push
aam
int3
mov
ljmp
stos
pop
xor
pushf
mov
int
mov
cmpsl
jbe
movsb
mov
filds
and
subl
insl
arpl
mov
lea
int3
mov
ret
in
stos
outsb
jb
inc
pop
mov
out
jecxz
or
or
pushf
jno
or
add
loopne
inc
push
pop
sbb
inc
cli
rclb
push
xor
ljmp
aam
ror
xor
mov
dec
aad
aas
xchg
xor
and
adc
mov
mov
xchg
inc
insl
cld
mov
loop
pop
add
dec
mov
or
xchg
add
daa
jle
imul
mov
das
cs
jmp
je
xlat
or
mov
fbstp
scas
iret
and
outsl
push
pop
lods
in
add
mov
leave
je
nop
insl
int3
aam
aad
imul
push
mov
loopne
jb
xor
sub
lret
shll
cmpsb
jmp
lods
imul
inc
lds
nop
enter
rcl
jg
pop
imulb
or
cmpsb
mov
xchg
hlt
rorl
dec
pop
mov
cmpsb
sub
inc
std
repnz
fcomps
and
popa
mov
retw
pop
pop
jae
in
test
and
nop
mov
mov
cmp
repnz
and
dec
jae
dec
push
out
ds
xchg
sub
leave
out
lock
mov
xor
seta
ja
sub
mov
repz
fs
xchg
out
push
cltd
leave
ret
dec
shll
aad
push
pop
rol
mov
loope
jl
push
xor
dec
out
pop
inc
dec
xchg
add
xchg
add
adc
sti
imul
cwtl
addl
lcall
fimull
xor
insl
rcl
xchg
inc
lods
cmc
pusha
or
sbb
xor
cmpb
or
test
mov
cmp
push
out
fs
xchg
mov
sub
pop
popa
jl
test
dec
inc
stos
in
xor
std
divb
out
js
ds
mov
in
in
sbb
sbb
stos
sbb
dec
test
lret
or
dec
test
pushf
jb
adc
lcall
adc
dec
mov
jmp
out
or
inc
mov
imul
int
shrb
sub
incl
mov
stos
xor
jne
test
int
imul
jns
cmp
cmp
js
std
xor
jge
inc
inc
push
inc
pushf
cvtpi2ps
xorb
fsubr
jl
sbb
fcoms
fwait
ss
xor
adc
cmp
aam
sbb
jno
imul
add
xchg
xor
data16
add
mov
fisubrl
fidivrl
jp
ss
data16
sbbb
xchg
lret
push
mov
cmp
das
xchg
das
sbb
lahf
jecxz
ret
dec
inc
cmp
dec
jbe
and
jne
mov
in
popa
fxam
jl
xorb
in
mov
adc
aam
push
int3
arpl
bound
movsl
push
xchg
adc
test
mov
pop
jo
cmpsb
mov
push
out
sub
mov
out
cmp
inc
and
aam
dec
incl
lods
pop
aaa
into
and
outsl
jge
push
mov
sbb
mov
cltd
xchg
dec
ffreep
mov
dec
jge
repnz
inc
pop
mov
adc
or
xor
add
fsubr
cmp
lock
xchg
addr16
or
lock
pop
js
push
jecxz
rcr
xchg
cmpsb
push
rcll
xchg
xchg
sub
loope
push
adc
mov
ret
and
pop
and
mov
xchg
sbb
push
mov
cmp
int
and
nop
stos
add
shll
xor
movsl
mov
jg
js
imul
push
jge
sub
push
nop
nop
mov
call
or
dec
adc
mov
push
xor
test
xor
cmp
and
and
jno
popf
xchg
cmc
sub
out
bound
inc
xchg
adc
xchg
stos
in
jg
and
call
aad
loop
dec
out
push
jns
fwait
dec
hlt
pop
jp
loopne
xor
fists
mov
imul
imul
sbb
lods
cmp
inc
push
out
cmpsl
cmp
or
les
clc
mov
lods
mov
aas
mov
popf
out
mov
dec
movsb
cmp
fidivrl
mov
pop
cmp
scas
call
add
and
lods
pop
mov
pop
out
cmpsl
mov
jbe
jae
std
xchg
and
push
int
popa
test
les
sub
fadds
imul
cmc
dec
cmp
fbstp
xchg
shll
addr16
es
cmpsl
push
xchg
mov
leave
lods
mov
push
aam
mov
mov
addr16
mov
cmp
mov
test
popa
xcrypt-cfb
cmpsl
cmpsb
cmp
adc
js
xchg
jmp
adc
xchg
push
and
inc
jmp
jae
lea
sbb
pop
cmpsb
inc
icebp
aas
mov
add
lea
mov
xchg
aas
inc
dec
mov
pop
loopne
jae
arpl
mov
or
add
ret
nop
push
jno
leave
mov
pop
dec
pop
xchg
jmp
fs
les
loope
pop
sbb
xor
jbe
jae
mov
hlt
rcr
add
and
pop
dec
movsb
mov
pop
call
xchg
popf
lods
aad
scas
hlt
jnp
xor
call
jp
xor
shr
jno
mov
movsl
mov
shll
insb
mov
xchg
mov
insb
jl
add
in
ss
inc
or
or
leave
jbe
cmpsl
cs
ss
inc
es
ret
push
mov
mov
out
push
dec
sub
insb
daa
mov
xchg
inc
jo
jmp
mov
and
push
lods
inc
push
push
and
inc
pop
push
roll
xor
pop
mov
in
std
call
pop
das
mov
cwtl
cmp
negb
stc
add
movsb
pop
fidivs
rorl
mov
cmp
or
cmpsb
rorb
popf
clc
mov
popf
xor
popa
mov
or
stc
sub
pop
sbb
jne
mul
lods
frndint
xchg
or
imul
daa
mov
pop
ss
lods
ljmp
sub
cmpsb
jb
mov
inc
lods
xor
ss
les
or
push
mov
popf
mov
movsb
popf
pop
adc
adc
pop
add
ds
xchg
out
add
ljmp
fs
enter
pop
jae
cmp
clc
insl
ficoml
or
pop
loop
jg
pop
and
add
test
or
xlat
push
sub
inc
and
or
pop
or
push
gs
xchg
out
pop
lret
rcr
mov
push
es
and
inc
dec
test
xor
mov
mov
jbe
cmpsl
ret
les
pushf
xor
and
imul
jae
or
pop
jl
nop
incb
adc
xor
lea
add
jle
out
leave
pushf
push
iret
or
xor
fisttps
imul
shlb
or
pop
jp
stos
loopne
mov
sbb
out
std
mov
decb
cmp
adc
add
cmc
xor
fdivrs
push
das
pusha
xorb
repz
arpl
xchg
int
sbb
repnz
sub
inc
nop
test
xor
movsl
movsl
jbe
mov
xchg
or
std
sbb
ds
sub
mov
xchg
pop
cmpsl
das
inc
xlat
pop
cmp
rcrl
je
push
inc
fistpll
mov
mov
mov
out
in
cmp
ficomps
jmp
dec
mov
stc
push
sub
notl
add
jle
sbb
movsb
xor
push
jecxz
insl
xor
nop
daa
jo
dec
lret
rclb
aam
sbb
fstl
pop
repnz
add
jns
push
dec
fnsave
repnz
inc
leave
dec
lcall
roll
ret
push
ret
pop
dec
in
or
jmp
xor
mov
dec
jb
add
push
popf
inc
cltd
test
imul
mov
lret
jo
sbb
lods
fistpl
outsb
lahf
or
sbb
mov
aas
jmp
mov
lds
insb
add
or
mov
iret
in
or
mov
scas
aam
mov
cmp
lahf
lahf
sbb
or
rcrb
insb
dec
cmp
std
jbe
adc
icebp
fmull
out
jbe
add
jecxz
arpl
xchg
cmc
adc
shlb
and
sub
nop
mov
or
rclb
gs
test
jbe
out
aaa
inc
inc
leave
sbb
lock
push
mov
stc
xchg
pop
cmpsb
ja
jmp
mov
mov
pop
daa
mov
pop
lock
pushf
xorb
xchg
cmp
cltd
cmc
cmp
cmp
out
jg
cs
sti
mov
inc
popf
lods
out
insl
iret
mov
aam
arpl
mov
pop
scas
xor
cmpsb
xchg
andb
stc
pop
fiadds
add
add
mov
add
push
and
add
or
loop
clc
lock
xor
jecxz
dec
push
mov
sarb
fs
push
dec
hlt
and
stc
popf
xor
jnp
scas
fiadds
testb
mov
int3
xor
dec
fbstp
repz
ja
xchg
cwtl
in
lret
movsl
or
lea
pop
xchg
inc
into
dec
loope
dec
push
shl
push
jge
mov
cmp
fsubp
sub
fbstp
psadbw
enter
call
push
imul
hlt
stc
pop
ss
cmp
das
mov
mov
ljmp
mov
notl
add
stos
jmp
cwtl
lcall
lea
in
aaa
fdivrl
lret
xchg
andb
xchg
mov
mov
out
std
xchg
sub
mov
sbbl
add
popa
int
andb
and
add
xchg
adc
les
sub
in
push
sbb
ss
mov
out
hlt
lcall
cmc
mov
inc
and
clc
push
cli
mov
pop
adc
nop
add
mov
lcall
scas
jl
or
adc
xlat
and
xchg
daa
push
pop
int3
shrl
jg
jo
call
mov
mov
cwtl
test
and
sub
loopne
pushf
je
sub
and
sbb
push
pop
or
cmp
inc
cmp
jecxz
fsubl
scas
out
rcrl
insl
lahf
pop
push
and
adc
mov
lret
pop
cmpsb
insl
add
add
or
fstl
mov
testb
pop
popf
jp
ss
cli
pusha
xchg
jns
sbb
xor
shl
jp
jmp
dec
das
mov
fbstp
test
inc
push
sbb
add
out
cmp
js
push
outsl
rorb
xor
add
jmp
pop
ret
cmp
sti
popa
insl
lret
xchg
or
out
aas
pop
dec
pop
xchg
pop
mov
adc
ljmp
sbb
cli
or
lock
cmpsb
sub
inc
pop
movb
mov
out
sahf
mov
adc
les
stos
jbe
loope
popa
mov
out
push
cli
lods
jmp
aaa
iret
mov
lock
add
pusha
mov
ljmp
mov
movntq
out
bound
mov
sbb
cmp
addr16
adc
es
test
movsb
fidivl
mov
cli
xor
movsl
gs
mov
into
call
lret
leave
addr16
mov
jno
bound
push
call
rcl
outsl
push
or
ret
loope
lea
xchg
das
loop
pushf
xor
sub
or
mov
add
repnz
mov
iret
sub
enter
in
cmpsl
stos
sub
sub
sub
pop
adc
mov
adc
dec
xchg
pop
pop
jbe
aad
pop
xchg
shl
jbe
push
test
lret
inc
push
aas
mov
sbb
cmp
cltd
lods
jecxz
push
mov
out
orb
sbb
subl
testb
sbb
add
cmp
sbbl
adc
shl
int3
dec
ljmp
cmpsb
xor
notl
inc
lcall
sbb
add
inc
push
test
inc
jecxz
lret
in
fistps
sub
jbe
jno
ljmp
lods
cmpl
ret
dec
mov
jge
imul
push
xchg
popf
mov
shll
testl
in
cmp
inc
jb
or
inc
fucomi
mov
nop
daa
mov
fsubrl
mov
aad
sub
cmp
adc
les
mov
clc
jle
scas
es
inc
fadds
mov
sbb
mov
sub
adc
jo
jno
dec
aam
mov
xchg
sahf
cmpsl
int3
xor
ds
and
pop
loope
daa
outsl
mov
inc
pop
dec
imull
test
in
dec
subb
sbb
int3
pushf
and
loopne
dec
punpckhdq
rcll
dec
pop
test
call
imul
icebp
das
mov
ja
jb
mov
bound
fstl
cmp
dec
cli
or
lret
add
loope
inc
call
call
jle
and
jbe
in
test
jl
daa
jo
xchg
dec
ldmxcsr
pop
fwait
inc
cwtl
inc
inc
cltd
mov
jmp
aam
loopne
stos
xor
jae
push
mov
pop
sub
xchg
mov
cwtl
mov
dec
outsb
jl
fcmovnu
push
mov
out
lods
inc
and
cmp
pop
cli
inc
mov
icebp
data16
mov
sbb
sbb
insl
sti
mov
mov
mov
je
cli
movsl
push
out
imul
repnz
roll
aam
ljmp
xor
and
pop
js
das
xor
push
mov
or
mov
push
test
ret
js
sub
pop
mov
cltd
xor
lods
andl
add
test
mov
dec
cmpsb
fs
xlat
imul
ja
ss
and
jae
xor
add
jnp
pop
cltd
popf
ja
pop
jne
sub
nop
insl
cmp
arpl
rorb
cmc
mov
xor
inc
pusha
bound
lahf
mov
loope
mov
icebp
or
xor
inc
dec
insl
sub
sahf
movl
cmp
push
movsl
cmp
lret
bound
add
add
sarl
adc
inc
lods
outsb
int3
into
pop
adc
mov
push
ret
lcall
jle
inc
fidivrs
fsubl
add
sub
pop
cmc
cmc
test
cmpl
dec
rcrb
loope
dec
adc
aaa
scas
and
das
xchg
cmpsl
aaa
mov
arpl
push
and
xchg
xor
in
stc
push
imul
popa
jg
sbb
push
cmc
mov
arpl
xchg
testl
loop
push
cltd
inc
mov
mov
cltd
das
popa
fucom
cmp
and
dec
popw
leave
fnstenv
shll
add
lds
lds
xchg
dec
pop
mov
push
fimuls
scas
pop
mov
ss
sbb
jmp
mov
das
sbb
cmp
repnz
and
test
inc
fdivrs
fcoml
cli
mov
les
inc
fcompl
inc
in
lret
bound
xor
lods
xchg
mov
mov
scas
lds
test
outsb
scas
out
and
aas
imul
push
dec
adc
call
hlt
daa
pop
js
aaa
dec
rcrl
shrl
lcall
add
xor
mov
push
out
mov
pop
cmc
sbb
dec
xchg
fisubl
loope
mov
jb
ret
and
stos
push
pop
repnz
ds
sbbb
jne
out
clc
cmp
adc
push
xlat
jbe
mov
call
add
sbb
lds
jg
pop
push
jecxz
or
cmp
push
std
loopne
testl
mov
shrb
pop
push
notl
or
shlb
push
iret
add
sarb
and
pop
lret
lods
inc
or
mov
dec
mov
add
in
nop
jb
push
jne
pop
mov
push
pop
xor
xor
pusha
ds
inc
cli
cmc
negl
cmp
mov
mov
cmp
cld
push
jb
cmp
fwait
xchg
inc
lods
pushf
xor
lock
flds
les
xor
ss
add
insl
hlt
popl
ja
cmp
and
pop
scas
out
sub
add
or
mov
cmp
jne
sub
int3
aad
inc
nop
xor
xchg
or
push
mov
clc
jl
pop
movsb
lcall
sti
push
mov
dec
xchg
inc
test
arpl
loopne
sub
rorl
dec
and
dec
bndstx
mov
call
jne
and
cmp
xchg
push
stc
add
rolb
adc
movsl
pop
mov
inc
popf
fadds
out
xlat
fldt
cs
xchg
mov
xchg
scas
adc
clc
adc
lahf
and
sbb
xchg
inc
sub
pop
jo
push
mov
dec
or
jae
dec
popf
pop
mov
repnz
mov
stc
jle
aas
popf
in
pop
aad
pusha
in
bound
pop
negb
mov
mov
and
or
cli
fwait
and
rolb
jno
iret
sbb
ja
clc
jnp
sbb
js
mov
add
hlt
mov
icebp
or
test
sub
call
xor
mov
idivl
es
pop
fs
movsl
mov
sub
sar
xor
insl
scas
xchg
dec
push
testl
jle
inc
sbb
and
push
jb
cld
push
sbb
adc
fstpl
cmpsl
or
push
loop
fsubrl
mov
cli
rclb
xchg
mov
out
sbb
adcb
or
jno
mov
andb
add
insb
scas
mov
jnp
enter
push
sub
daa
lret
out
cld
jno
add
cmp
adcl
fs
xchg
out
out
fisttps
jge
add
adcl
pusha
jne
sarl
push
xor
push
mov
ja
xchg
push
mov
stos
enter
adc
mov
out
lock
mov
push
shll
cmc
lock
mov
and
gs
in
jle
ret
mov
pop
movb
jg
jnp
push
or
xor
add
inc
in
cld
mov
mov
mov
xchg
or
mov
dec
dec
fpatan
lods
xor
cli
scas
inc
iret
mov
sub
lock
mov
scas
ret
xchg
adc
repz
fildl
jmp
cmc
xchg
and
jns
test
test
in
in
icebp
pop
imul
sbb
jl,pt
stc
nop
aaa
sahf
push
mov
pop
pop
xor
push
repnz
push
mov
fcom
imul
int
mov
xor
out
sahf
cmp
xor
add
mov
pop
rol
adc
ret
mov
add
addr16
and
adc
jle
pushf
cltd
mov
push
out
rcrb
mov
jl
mov
outsb
sub
ss
dec
daa
xlat
es
push
and
stos
aam
jae
insl
shll
or
jle
negl
pop
mov
pop
insb
in
jl
jb
stos
inc
xor
mov
and
mov
and
outsb
lods
cmp
insl
sub
adc
add
fidivrl
xchg
testl
xchg
mov
adc
mov
push
sub
mov
mov
outsl
mov
out
fnstenv
xchg
aaa
aam
aad
xlat
push
dec
ret
pop
mov
lret
sti
lret
mov
out
ret
xor
jecxz
jmp
out
mov
ret
insb
mov
adc
pop
sahf
sub
data16
xor
cmp
out
stos
test
cwtl
insl
test
into
fsubl
dec
and
cwtl
lcall
das
cmp
or
aaa
arpl
lds
pop
mov
mov
inc
in
test
inc
test
add
je
nop
roll
pop
sar
xor
mov
jg
adc
ss
adc
fnsave
sahf
pop
mov
jg
mov
push
insb
in
lods
test
shl
mov
movsb
xchg
dec
in
rolb
outsb
fpatan
xchg
vpextrw
lds
and
dec
aad
jbe
xorb
mov
push
das
movsl
mov
jae
inc
pushf
out
mov
clc
test
leave
lds
push
out
stos
xchg
mov
jge
sbb
bound
popf
sub
fnstenv
xor
cmp
jns
nop
out
xchg
and
pop
lcall
movsl
ja
dec
imul
js
inc
mov
lea
divl
or
jns
push
pop
adc
cmp
fxtract
xchg
leave
fwait
scas
inc
stos
and
mov
and
inc
testb
mov
testl
out
sahf
call
das
loope
cli
mov
sub
inc
pushf
mov
and
sub
mov
loopne
inc
out
es
push
xlat
adc
in
push
clc
lret
into
call
js
in
inc
push
mov
push
lods
inc
cmp
dec
jb
cmp
lret
dec
shlb
cmp
xor
fndisi(8087
mov
push
leave
vcmpsd
dec
movnti
hlt
cs
push
sbb
mov
push
call
mov
sbb
repz
add
sbb
stos
inc
mov
jne
in
xchg
dec
in
add
in
repz
fimull
fsubr
icebp
int
iret
lods
inc
sti
xor
sbb
int
pop
sbbb
into
jb
addr16
int3
and
mov
mov
pop
bndstx
or
gs
icebp
mov
faddl
lahf
std
jecxz
xchg
iret
cltd
pop
fildl
sbb
fldl
xchg
call
addr16
aaa
push
call
inc
repnz
mov
bound
sbb
push
arpl
ret
mov
pop
jo
mov
or
or
in
loopne
pop
add
inc
fisubrl
popa
std
and
add
sti
push
cmp
pop
hlt
mov
out
ds
lahf
cmp
pop
les
inc
mov
xor
mov
jg
jecxz
xchg
push
push
ret
mov
shrl
enter
adc
pop
out
adc
sub
pop
loopne
cmp
jmp
stos
mov
mov
push
mov
add
scas
sbb
sbb
cmp
inc
outsb
pushf
out
leave
and
mov
jb
not
hlt
daa
push
jmp
cmp
inc
push
stos
xor
inc
icebp
inc
or
je
fdivrl
ret
imul
cmp
mov
in
mov
mov
cmp
dec
roll
enter
jne
sub
loope
int3
dec
mov
sar
dec
mov
push
dec
gs
dec
ss
add
hlt
xlat
xlat
mov
mov
mov
shll
mov
xor
mov
in
imul
mov
add
lea
aam
sbb
arpl
pop
jne
test
mov
xchg
mov
int
dec
push
lret
mov
imul
sub
mov
cli
and
rorl
sub
ss
pop
pop
and
fsubrl
inc
dec
jbe
dec
mov
push
push
sahf
adc
gs
inc
xlat
pop
or
in
hlt
xor
je
fwait
xor
cmp
xchg
pop
ljmp
mov
dec
inc
loop
mov
shrl
iret
shlb
sbb
or
push
cmc
add
mov
in
inc
and
fadds
clc
shll
arpl
sbb
cmp
sbb
out
lea
xchg
out
call
stos
shll
icebp
cmpsb
mov
data16
xchg
pop
inc
arpl
cmp
mov
cmpsb
or
mov
hlt
jecxz
sub
stc
popa
sbb
adc
push
inc
sbb
ja
mov
mov
out
mov
and
call
mov
insl
xor
push
mov
push
xor
outsl
adc
cmp
pop
pop
cmovae
out
pushf
iret
xchg
or
sbb
dec
imulb
xor
mov
jle
pop
insb
pop
out
fbld
cltd
sbb
fsubr
dec
rorl
and
cmp
mov
mov
inc
jle
int
push
sub
mov
lds
scas
iret
clc
and
mov
sub
sub
mov
js
pusha
in
lds
mov
xchg
jbe
sub
rclb
pop
mov
sbb
lahf
pop
adc
dec
pop
add
dec
mov
cli
in
ds
pop
push
mov
test
add
cmp
cmpsb
push
jge
dec
dec
shrb
inc
mov
jns
dec
stos
cmc
lcall
mov
sub
xchg
cli
int
bound
andl
and
test
loop
cmovp
sub
movl
fbstp
in
jns
jl
insb
dec
pop
icebp
jl
loope
cmp
lock
xor
in
add
icebp
mov
mov
iret
cmp
add
decb
jmp
dec
sub
out
xchg
das
mov
pusha
lock
lods
push
ret
sbb
lods
sbb
add
pop
inc
ficompl
int3
mov
or
negb
dec
push
cmp
icebp
and
add
or
mov
loop
shrl
push
sahf
and
xor
mov
jbe
clc
cs
adc
mov
or
cmp
push
push
lret
call
in
movsl
or
mov
aam
lret
mov
mov
inc
mov
cmpsb
ds
push
test
cmpsl
test
jge
or
mov
mov
addr16
stos
mov
push
into
mov
xor
cmp
loopne
ret
xchg
in
insl
in
add
mov
test
sarl
les
pop
mov
jg
pop
mov
and
mov
out
test
in
enter
adc
pop
lret
std
dec
push
in
jge
pop
in
mov
je
iret
mov
mov
lock
popa
xchg
sub
cmp
dec
incl
in
add
mov
dec
pop
icebp
lret
notl
das
movb
adc
rol
loopne
ret
sub
and
in
pushf
mov
jae
hlt
js
in
test
loope
inc
fldt
or
dec
leave
sbb
push
mov
mov
movsl
inc
pop
scas
pop
mov
loopne
lds
repz
cmp
jns
pop
repz
jo
fmuls
and
in
ds
pop
mov
shrb
adc
fmuls
cmpb
subl
cmp
fwait
xor
mov
xchg
add
jae
gs
test
mov
mov
out
int
test
jns
pop
aam
mov
push
ret
push
adc
pop
cmp
lahf
push
inc
scas
in
test
pop
loope
jle
hlt
addr16
push
add
inc
cmp
mov
pop
ret
cmp
xor
stos
jae
fnstsw
cs
xchg
sub
roll
mov
fildll
pop
xchg
add
cmp
fbstp
or
mov
pusha
xchg
adc
xchg
je
cld
movsl
cmpsb
rcrb
sahf
xor
add
inc
cmpl
ljmp
iret
inc
in
vphaddubw
out
jnp
out
xor
pop
push
jae
dec
jecxz
jge
lods
jbe
movsb
fcomps
xchg
das
mov
mull
sbb
test
ljmp
fiaddl
sar
adc
in
test
mov
fidivs
stc
jl
inc
mov
test
mov
ret
pusha
and
dec
push
popf
cmpl
cwtl
cmp
ds
adc
testb
adc
ret
fmulp
mov
add
pop
lods
xor
fdivs
pop
sub
add
or
sar
iret
test
and
test
jmp
push
inc
jo
cld
mov
scas
mov
push
sbb
test
test
inc
mov
xchg
pop
and
out
jno
or
sarb
adc
push
negb
fnclex
pop
mov
jno
cmp
lahf
inc
in
mov
dec
jg
fisubl
enter
dec
bound
js
mov
outsb
lahf
sub
cmp
mov
popf
dec
cmp
loope
sbb
inc
add
jg
push
sahf
int
cmpsl
ds
stos
lock
insl
ret
popa
jbe
jge
stos
mov
das
pop
push
and
xchg
clc
aas
repz
pop
cmp
sti
sbb
push
ljmp
lods
or
inc
ds
sub
cmpb
popa
push
xor
nop
pusha
cmpsl
cmp
rcll
dec
lahf
mov
inc
arpl
xchg
mov
arpl
sbb
dec
or
jl
int
sub
xchg
or
pusha
pop
dec
lods
bound
ljmp
push
loope
xchg
jge
scas
sbb
dec
dec
shrb
sub
fldenv
aas
or
popa
cmp
call
popf
shrl
loopne
pop
sbb
icebp
popf
pop
cmp
jns
insb
popa
jl
lea
xchg
mov
sbb
and
adc
xor
or
cwtl
lods
fs
and
pop
add
movb
cmp
fwait
push
je
add
jle
jg
jbe
repz
push
imul
insb
rolb
push
pop
jbe
ret
sub
push
fwait
inc
addb
cli
mov
sub
roll
shrl
loop
cmp
sarb
inc
stos
dec
push
cwtl
das
je
lret
and
sbb
mov
insb
shl
add
scas
xchg
scas
xchg
inc
shll
and
xchg
sub
mov
mov
test
mov
add
pop
cld
test
ds
mov
lds
arpl
aam
sub
lds
push
jb
pop
test
stos
push
imul
inc
ret
sbb
mov
mov
cwtl
pop
scas
adc
int
stos
jbe
jbe
pop
gs
push
cli
inc
call
iret
pop
pop
push
repnz
push
jno
lea
push
popa
mov
test
pop
adc
dec
and
xchg
popa
insl
add
mov
push
jl
adc
mov
mov
mov
ret
aaa
cmpsl
push
popf
fcomps
and
jb
lods
push
in
mov
mov
insl
push
imul
bnd
sub
aam
in
push
lods
lock
add
push
push
cmc
or
mov
ret
out
sub
hlt
xchg
dec
fcomps
cmp
cli
jae
out
aaa
mov
push
clts
aaa
pop
jne
loop
mov
mov
imul
adc
dec
dec
loopne
lea
enter
cmpsb
test
xlat
jae
xor
jbe
inc
enter
and
ljmp
jno
push
and
cmp
lcall
adc
xchg
inc
dec
xor
mov
loopne
loope
repnz
push
and
push
out
enter
call
xchg
xchg
mov
lds
out
adc
jmp
insl
cmp
and
pop
jp
fsts
cli
mov
cmp
cmp
add
decl
push
aad
or
mov
fidivrs
mov
mov
adc
mov
inc
xor
js
aaa
mov
push
inc
push
xchg
add
dec
icebp
cld
addr16
dec
loope
mov
mov
popl
push
pushf
js
mov
mov
push
adc
aam
dec
enter
cltd
mov
push
push
and
jle
inc
mov
shrl
int3
sbb
mov
bound
mov
fwait
daa
scas
or
and
sub
lret
dec
inc
pop
je
pop
in
push
cld
add
repz
inc
ljmp
xchg
jecxz
pushf
pop
push
mov
mov
ficomps
imul
ljmp
bound
sahf
xchg
cmp
mov
add
and
das
cld
pop
adc
mov
pop
pop
pop
jge
stc
jp
jp
movsl
push
lods
xor
push
xor
popf
push
andb
push
jecxz
mov
push
mov
sub
sbb
scas
xor
xor
dec
xor
push
push
in
push
je
insb
stos
xor
nop
gs
inc
flds
sarl
inc
pop
stos
ja
pop
rorl
movsb
lods
je
loope
lret
bound
xchg
sub
enter
xlat
insb
dec
fists
cmp
pop
xor
aaa
inc
fisubrs
mov
and
and
icebp
push
adc
xchg
ret
mov
sbb
sub
or
iret
sub
inc
push
lock
and
push
scas
mov
ljmp
mov
jge
mov
adc
jae
jle
push
push
shlb
lea
jbe
xor
jmp
pop
sbb
mov
fidivrs
jbe
or
dec
enter
lahf
jmp
shll
out
sti
and
in
inc
pop
test
jbe
cmp
sub
pop
repz
sbb
stos
dec
jmp
data16
into
cmp
and
test
jmp
and
mov
sub
lret
enter
push
xlat
shll
cwtl
xlat
mov
pinsrw
call
lods
mov
mov
sub
in
pop
jns
bound
jbe
dec
leave
jo
inc
out
testb
mov
xor
pop
pop
inc
into
mov
or
cmc
mov
clc
mov
lods
jae
shlb
stos
jmp
push
imul
jl
mov
movsb
lea
push
sbb
shlb
mov
pop
mulb
scas
jae
mov
fdivr
loope
pop
cmpsl
dec
add
cs
cwtl
loop
mov
or
cmpsb
out
aam
xchg
mov
jae
cli
sub
out
pushf
cmpsl
cmp
push
or
xor
xor
sahf
cmp
adc
ds
lret
sbb
and
pop
dec
inc
jno
cwtl
push
icebp
shlb
sub
cmpsl
jno
jae
icebp
sahf
xchg
cmp
rorb
cmc
mov
jo
pop
sbb
sub
sarl
adc
aas
mov
sub
inc
cmp
dec
mov
push
xor
mov
sub
mov
test
and
lods
cmc
xchg
daa
and
cmp
pop
rorl
and
add
cmp
mov
cs
inc
jmp
dec
outsb
push
mov
movsl
repz
pop
adc
out
pop
jne
sub
cmp
push
jo
mov
mov
lahf
addr16
js
out
sub
mov
add
ss
out
test
add
cld
aam
push
in
dec
xor
push
mov
dec
sub
hlt
xchg
sbb
mov
fistl
out
mov
data16
jp
pop
addr16
pushf
push
cmpps
mov
cmp
mov
cltd
inc
ror
iret
sbb
adc
dec
inc
fidivrl
cltd
xor
and
jg
sahf
movb
ret
push
xchg
rcrb
shrb
jp
scas
bt
in
sbb
clc
add
sub
out
xchg
push
mov
inc
mul
mov
xor
out
popl
clc
adc
xchg
adc
lock
dec
mov
and
scas
shrl
pop
call
ja
mov
dec
pop
pop
xor
int3
cmp
inc
fldl
arpl
xchg
mov
pop
xchg
aad
js
inc
or
sub
aam
jle
jns
cmpsl
dec
outsb
push
divb
sbb
test
movsb
repnz
fst
mov
loop
icebp
aam
cmpsb
lds
test
test
or
fstpl
mov
cltd
adc
xor
das
inc
sbb
lret
out
es
femms
int3
bound
lock
add
clc
decl
movsb
push
je
lds
push
cmpsl
sar
int
jmp
dec
lret
outsl
jp
inc
inc
nop
mov
es
jmp
dec
dec
dec
push
adc
clc
cmpsl
enter
or
mov
stos
aas
jmp
lret
and
cmpsb
shr
mov
push
and
mov
pop
dec
mov
mov
jmp
inc
pop
pop
into
mov
adc
sub
xor
and
movsb
das
mov
scas
in
dec
loopne
or
addr16
add
xchg
data16
adc
cmp
inc
js
lock
push
mov
mov
arpl
enter
xor
jg
jmp
pop
addr16
aad
clc
ds
and
inc
clc
xchg
pop
shrl
add
in
out
dec
xchg
gs
mov
mov
gs
adc
xor
cltd
xor
hlt
mov
sub
cmpsb
sbbb
stc
mov
int
mov
jle
adc
push
push
into
jle
jns
loop
pop
push
or
and
sbbb
dec
shr
subb
dec
fdivr
rorl
dec
ficomps
je
fnstcw
test
stc
in
jl
fists
adc
out
std
pushf
jecxz
mov
sahf
pushf
xor
push
es
push
mov
xchg
or
xchg
shrb
dec
ds
ret
inc
sub
ja
loopne
popf
jne
fisubl
push
jno
mov
addr16
push
inc
pusha
lret
mov
add
lcall
out
adc
sbb
xchg
insl
pop
mov
jne
jno
or
adc
insb
test
adc
push
mov
mov
ss
sbb
and
pop
flds
pop
jns
in
mov
ss
leave
sarl
push
and
cs
pop
loope
or
int3
out
pop
lea
lods
adc
inc
into
jne
mov
xor
mov
stos
sub
es
pop
mov
xchg
push
fisubrs
mov
cmpsb
jmp
mov
push
xlat
dec
xlat
insb
ret
pop
sahf
lods
jl
addb
push
daa
mov
call
lock
add
or
pop
push
lock
mov
push
addr16
sbb
data16
pop
inc
shrl
xchg
mov
mov
test
lret
or
clc
xchg
inc
fisttpl
adc
pop
jg
test
sub
js
and
jle
imul
sub
mov
xchg
mov
jb
rorb
adc
add
stc
pop
mov
mov
repnz
mov
push
vpsubusw
mov
jo
push
in
movsl
xchg
pop
in
adc
int3
mov
outsb
jns
clc
rorl
stc
xchg
sub
adc
mov
cwtl
imul
addps
xor
dec
add
cmpsl
mov
lea
mov
push
and
data16
lret
pop
xchg
dec
jno
adc
ljmp
fcompl
stc
nop
push
sbb
pop
lret
outsl
adc
mov
mov
mov
xchg
lret
out
dec
jmp
mov
aaa
sub
mov
xchg
xchg
subl
jnp
mov
mov
jecxz
mov
lahf
jmp
aaa
and
push
shrb
mov
cmp
icebp
and
sub
out
nop
add
outsl
mov
or
mov
or
sbb
daa
sbb
pop
std
inc
mov
jbe
js
mov
cli
mov
rcrl
pop
push
and
movsb
out
push
dec
in
push
mov
mov
popa
pop
out
ds
orb
shrb
mov
sub
adc
add
imul
lcall
and
or
mov
icebp
test
test
stos
xchg
xlat
cwtl
pop
das
in
shl
add
sbb
lcall
daa
loope
fnstenv
in
stos
cmp
dec
mov
xor
xlat
xchg
ljmp
and
and
adc
dec
loop
test
pop
inc
pop
arpl
jl
je
mov
xchg
xchg
and
ffreep
pop
xchg
pop
add
dec
xor
jae
pop
or
xorb
or
sub
xlat
daa
or
test
clc
fwait
sub
dec
and
jns
jbe
xor
mov
xchg
out
out
cmp
ja
addr16
adc
shrb
test
sub
jmp
lock
push
jbe
mov
push
and
stos
mov
fmul
loopne
add
or
xchg
in
in
shrb
fisubrs
mul
xchg
add
xor
jne
ficompl
xor
inc
mov
inc
push
mov
shlb
cmp
pop
jge
mov
or
bound
mov
mov
aam
ret
xchg
icebp
sbb
and
test
jae
movsb
addr16
mov
mov
jg
adc
lahf
pop
popf
sarb
data16
repnz
test
ret
dec
mov
repz
cli
scas
in
sbbl
xor
jbe
popa
das
mov
adc
outsb
mov
cld
xchg
sbb
and
and
ss
xor
push
jae
xchg
fwait
cmpsl
outsb
stc
dec
push
push
imul
sub
pop
popa
mov
mov
int3
insl
cld
in
icebp
fadds
pop
adc
or
test
push
mov
fbld
movsb
add
xchg
and
outsl
out
sub
out
inc
mov
mov
mov
mov
push
pop
int
jo
or
inc
int
inc
repz
mov
adc
stos
repz
repnz
lret
mov
jb
dec
push
stos
clc
push
mov
push
inc
outsl
push
cmp
outsl
cmp
mov
or
je
adc
xchg
test
sub
rclb
and
ljmp
bound
jp
jb
outsl
movsb
in
mov
in
inc
push
and
pop
pop
divl
test
stos
cmp
push
mov
mov
arpl
notb
jb
lret
jnp
lret
aam
int
int3
adc
sbb
cld
mov
mov
fnsave
cmpps
mull
cmp
push
adc
shlb
into
and
fadd
xor
aad
inc
and
xor
in
add
sub
jg
sbbl
add
enter
pusha
add
lds
push
call
add
fistps
mov
les
xchg
inc
pusha
cwtl
sahf
sar
notl
mov
sub
mulb
cltd
imul
and
cmpsl
fnsave
in
pop
mov
xor
mov
or
fstp
out
push
sbb
dec
jp
int3
or
aam
ljmp
inc
mov
inc
xchg
clc
fidivrs
jl
mov
test
push
inc
and
mov
push
cmpsl
xor
pushf
mov
int
shll
or
push
lock
loope
inc
xchg
ja
shrb
dec
mov
mov
ret
mull
insl
add
fs
and
mov
out
imul
shlb
jns
inc
pop
jnp
push
xor
xchg
sub
and
push
roll
out
add
je
xor
inc
fisubrs
cmpl
lock
test
xchg
dec
cmpsl
stc
pop
add
fldcw
push
out
mov
push
push
inc
ficoml
jmp
imul
xor
xchg
dec
pop
mov
dec
clc
stos
inc
in
icebp
mov
in
sub
or
pusha
notl
mov
sbb
and
mov
aad
cwtl
das
lret
imul
push
jcxz
add
sbb
hlt
pop
xor
pop
hlt
xchg
sub
test
push
iret
inc
pop
in
test
aad
jns
mov
jnp
inc
fidivs
out
hlt
ljmp
popa
and
xchg
dec
in
cmp
iret
test
push
stos
inc
dec
push
cmp
int3
movsl
adc
fwait
and
sbb
xor
fldt
pop
xor
aas
mov
in
cmc
cld
dec
mov
push
or
push
dec
adc
or
aas
repnz
add
inc
mov
push
loopne
movsl
cmp
cmp
jl
jle
xor
dec
add
cmp
jno
bound
fsubrs
sub
jge
pushf
out
sar
into
dec
pop
mov
in
and
lahf
push
sbb
xlat
cwtl
pop
mov
jle
push
in
xchg
or
sbb
cmp
cmp
loope
mov
cmp
sub
test
xchg
cwtl
jnp
test
lret
add
sahf
cmc
outsl
inc
icebp
imul
ljmp
call
sti
sbb
xchg
shrl
mov
xlat
cmp
mov
sbbl
xchg
or
in
xor
xor
xor
cmc
mov
outsb
cmp
mov
jl
pop
jb
adc
negl
sub
out
mov
push
cmpsl
inc
push
mov
push
cmc
and
imul
or
dec
or
insl
sub
and
cmp
idiv
vxorpd
mov
int
sti
into
push
and
add
sub
push
push
sub
xchg
jae
pop
or
lods
cmp
add
repz
ret
adc
test
sub
test
shll
iret
fwait
dec
pop
mov
popf
or
push
mov
shl
jnp
in
adc
ja
int
mov
rclb
push
inc
cld
mov
es
push
dec
jecxz
pop
jne
enter
fidivs
mov
fldenv
stos
lea
cmp
std
scas
inc
das
sub
pop
pop
cmp
addb
xchg
jbe
aad
cmp
push
stos
inc
sub
es
cltd
shll
jecxz
jp
mov
in
cmp
fbld
sub
jecxz
mov
lret
in
jmp
mov
pop
mov
push
out
out
inc
sbb
std
or
add
mov
cmp
mov
fists
mov
lods
das
sbb
insb
xchg
and
fisubs
add
mov
sub
xchg
sub
outsl
dec
mov
lahf
lock
inc
aas
adc
clc
push
xor
mov
xchg
cmp
mov
es
mov
insl
xlat
sbb
and
insl
cmp
jbe
or
nop
jg
repz
enter
cmp
daa
out
xchg
cmp
mov
pop
pop
inc
mov
je
into
add
cmpb
pop
fisubs
in
push
outsl
cmp
leave
in
sbb
call
sub
rorb
cmp
jno
std
fwait
aas
das
clc
push
mov
inc
std
push
popf
scas
call
cmpsb
or
fildl
test
inc
add
mov
lods
push
push
insb
sbb
xchg
push
push
out
aaa
mov
shlb
add
outsb
push
sub
adc
dec
jae
push
nop
or
loopne
add
push
pop
mov
xlat
push
pop
pop
xor
loopne
mov
xor
filds
into
faddl
mov
lret
stos
cmp
test
adc
scas
jg
mov
mov
hlt
dec
adc
add
push
mov
cmpsb
scas
fs
sbb
sbb
je
mov
jne
hlt
int3
imul
push
adc
mov
out
xchg
and
push
jge
ret
add
out
and
test
mov
adc
call
push
add
mov
lds
mov
daa
push
push
test
popa
mov
pop
inc
addl
mov
dec
popa
fwait
outsl
insl
int
int3
arpl
jne
leave
cs
pop
insb
sub
lret
mov
sahf
mov
push
jg
xchg
pop
mov
mov
mov
mov
popa
nop
mov
push
les
js
pop
popl
testb
mov
ret
cld
enter
insl
dec
fistl
call
je
call
or
fsts
cmp
insb
mov
dec
frndint
jg
adc
cwtl
test
stos
cmpsb
les
pop
int3
out
stc
and
cmpsl
loope
add
adc
xor
sahf
in
mov
es
push
adc
xchg
add
mov
xor
dec
popa
push
loope
or
enter
clc
fucomip
lock
mov
dec
cld
out
sahf
call
loope
cmp
mov
xor
repz
repz
movsl
or
inc
push
les
popa
push
in
test
das
insw
in
jp
pop
adc
mov
xor
pop
into
add
mov
cli
lods
jno
pop
repz
stos
sub
dec
push
add
lret
cmpsb
les
lret
push
sbb
or
pop
add
jmp
cs
and
out
xchg
hlt
adc
mov
pop
notb
inc
push
and
dec
adc
xchg
in
les
mov
cmpsl
adc
lds
aas
ret
fnstenv
or
push
hlt
xlat
addr16
jne
or
loopne
fucomip
clc
push
mov
and
stos
je
sub
push
dec
in
dec
add
xor
and
stos
sbb
jno
jnp
pop
enter
jo
dec
xor
jle
cmpsb
jp
fwait
sub
int
test
in
jno
test
sti
cmc
pusha
in
add
xchg
push
repz
movb
sti
mov
push
call
mov
out
sub
loopne
loope
xrelease
test
xchg
lds
adc
arpl
dec
dec
aaa
jnp
fldt
lock
dec
mov
push
shl
adcb
pushf
xchg
fcoml
push
add
stos
xchg
inc
adc
ss
les
popa
clc
dec
in
fstpl
lds
cltd
xor
je
or
jo
sub
cmc
dec
jnp
jo
push
call
cwtl
shrl
fimuls
andb
inc
sub
rcrb
in
xor
leave
pop
mov
sbb
mov
out
rcrl
in
xchg
loope
and
int
in
push
mov
dec
aam
gs
jnp
dec
out
icebp
stos
xchg
add
dec
jg
leave
das
push
mov
out
sbb
cmp
pop
sub
ss
push
dec
ljmp
insb
or
mov
mov
repz
push
lds
push
mov
rolb
pop
pusha
stc
push
or
pusha
pop
fidivrs
clc
dec
into
pusha
xor
je
pushf
rclb
add
icebp
mov
xor
push
cmpsl
jo
adc
inc
fnstenv
outsb
and
fwait
je
mov
mov
push
xor
mov
jg
ds
cltd
test
into
adc
add
cli
mov
gs
sbb
stos
mov
ljmp
shlb
xchg
lods
mov
inc
ficoms
test
jno
adc
test
aad
push
cld
xor
cmc
in
mov
nop
pusha
testl
lods
mov
push
mov
notb
and
cld
jge
xor
jge
pop
mov
cmpsb
cld
movsl
jmp
mov
mov
push
mov
xor
jns
jmp
or
fwait
es
lahf
mov
gs
xchg
insb
out
pop
aas
ret
ds
dec
jo
in
inc
sbb
shll
adc
and
mov
dec
xchg
lods
inc
xor
outsb
push
push
lret
pop
aad
insb
mov
or
insl
lret
dec
push
adc
ja
inc
fucomip
sahf
mov
cmp
insb
push
into
pop
sbb
push
ficomps
and
jne
int
mov
ss
dec
repz
fistps
call
movsb
in
or
sbb
ret
mov
iret
pop
mov
push
arpl
divps
inc
and
xor
fdivr
xchg
and
push
adc
inc
data16
movsb
sub
xchg
int
mov
mov
mov
pop
add
cli
xchg
pop
dec
xor
out
std
pop
sub
and
dec
mov
addb
cmp
mov
or
mov
pop
fwait
sub
push
ss
push
inc
sarb
jmp
cmp
fisttpll
jno
repz
xor
lret
cld
mov
loopne
sub
push
repz
rolb
mov
insl
cld
pusha
xchg
dec
lds
pop
push
lcall
adc
xor
out
mov
call
mov
aas
insl
popa
test
sbb
out
lcall
les
or
por
xor
dec
xchg
fidivrs
adc
sbb
js
decb
xlat
icebp
enter
outsb
jecxz
mov
push
adc
mov
test
dec
pop
cmp
insb
add
insl
iret
neg
scas
mov
dec
mov
push
out
je
mov
movsl
les
mov
push
xchg
cmpsl
vrcpps
push
addr16
cmp
push
push
or
fistpll
fistl
sbbl
outsb
popa
mov
adc
mov
and
pop
xchg
add
movsl
stos
cmp
add
or
sbb
mov
inc
push
sub
fucomi
dec
les
push
xor
scas
fs
cli
call
add
mov
inc
pop
fld
dec
loop
xchg
inc
scas
imul
xchg
lea
xchg
sbb
mov
ret
insb
adc
sub
xor
loop
cwtl
add
rol
stc
addr16
loop
enter
lahf
or
fildll
test
inc
fxch
insl
add
xchg
sub
mov
out
inc
xchg
out
dec
and
aaa
pop
shrl
scas
push
or
loope
dec
sub
shrl
fisubs
mov
xchg
fwait
inc
xlat
lret
adc
xchg
pop
cmp
xchg
and
pushf
adc
dec
and
out
and
mov
shl
and
ds
add
or
stc
pop
jb
mov
push
pusha
outsl
test
add
les
and
adc
mov
mov
mov
fwait
and
sub
inc
fcoms
add
in
mov
mulb
stos
push
or
lret
push
adc
pusha
shl
xlat
sbb
xchg
roll
subb
sub
aas
mov
pop
das
or
test
bound
lods
mov
xlat
call
cmp
xor
and
add
xchg
or
je
mov
jno
aam
fucomi
sub
xor
pop
shrl
fidivs
push
pop
addsd
dec
movsl
push
jecxz
mov
pop
dec
push
push
and
fiaddl
and
bnd
push
push
fstps
dec
icebp
inc
out
push
outsl
lret
add
jmp
mov
inc
or
test
inc
fwait
xor
les
cmp
add
pop
xor
inc
add
jno
shrl
subl
outsb
pop
mov
subl
nop
adc
pop
imul
push
nop
data16
shll
xlat
lock
cmp
jbe
outsb
sbb
and
mov
mov
push
std
andb
push
test
add
xchg
push
push
mov
test
pop
int3
mov
imul
xchg
fistpll
add
dec
fcmove
pop
sti
icebp
adc
dec
dec
ret
adc
loope
dec
jns
into
mov
add
flds
movsl
rep
jecxz
mov
les
jle
xchg
jo
mov
clc
or
xchg
cmp
inc
enter
xchg
insl
pop
or
adc
pop
pop
stos
inc
cmp
enter
mov
int3
aam
aam
push
pop
rcrl
xchg
mov
aaa
cmc
aaa
call
adc
call
mov
mov
add
mov
mov
add
in
std
cmp
aaa
dec
xor
and
addr16
sahf
cwtl
mov
loopne
das
scas
push
mov
fs
cmp
clc
mov
jle
add
push
mov
loopne
push
push
pop
jno
das
add
pop
fnstcw
jo
push
xchg
mov
es
pop
dec
fldt
inc
pop
andb
pusha
mov
xchg
push
in
push
fimull
jo
aaa
pusha
out
xor
xorb
xchg
in
stos
cmp
es
mov
dec
fbstp
sub
cmpsb
adc
xchg
fcoml
sub
sbb
test
test
jg
popa
clc
fmull
cmpb
push
sub
pop
arpl
cmp
shl
push
mov
xor
addb
popa
dec
lahf
sub
add
pop
xchg
rcr
aad
adc
cmp
mov
and
iret
aad
test
lret
fcompl
jno
mov
push
inc
addl
cmp
pop
cmp
inc
mov
jae
adc
sbb
repz
jnp
cmp
and
in
inc
pop
cld
push
push
cmpl
clc
jae
sub
adc
cmpsb
xchg
dec
lds
aas
or
mov
clc
and
dec
and
inc
xor
lcall
out
inc
insl
xchg
mov
gs
pop
addr16
add
insb
in
shlb
hlt
jne
mov
cmp
push
inc
data16
jbe
fstl
sbb
dec
inc
mov
push
jnp
scas
mov
sahf
scas
add
mov
mov
push
xchg
adc
fidivrs
je
ljmp
mov
jge
inc
movsb
hlt
push
icebp
mov
fdivrl
inc
and
out
mov
fidivl
sbb
jno
xchg
xchg
add
into
int3
arpl
fisubl
mov
jne
cwtl
jmp
add
cmp
clc
inc
call
ds
push
cs
out
call
ret
les
rolb
loop
bound
ret
mov
enter
mov
insb
dec
mov
ds
xor
mov
cmp
dec
xchg
into
out
fwait
test
mov
xchg
int
lcall
dec
scas
js
lcall
fidivrs
aaa
mov
sub
add
and
sbb
inc
je
lods
out
pop
sbb
mov
je
mov
andl
dec
or
test
adc
inc
popf
outsl
inc
pop
and
inc
fwait
xor
das
mov
test
lea
iret
cmpsb
or
pop
rclb
push
cmpb
and
or
mov
lret
test
jne
mov
pop
subb
rcr
mov
lds
adc
out
cli
cmp
ja
sahf
jne
cwtl
dec
xlat
idivb
call
cli
sbb
ret
movsl
dec
ds
dec
xchg
xchg
mov
data16
or
out
mov
sub
lds
mov
mov
cmp
sbb
ror
cmpsb
rcrl
enter
xor
addr16
adc
fdivrs
xor
outsl
std
loopne
pop
add
push
pop
sbb
ja
sub
mov
add
mov
push
fisttpll
pop
pop
imul
popf
subb
popf
bound
xchg
inc
xor
ret
xor
scas
adc
cmc
repnz
jp
call
sbb
or
in
int3
pop
pop
mov
dec
inc
lods
je
fisubs
push
std
aas
test
enter
dec
imul
loopne
std
push
out
stos
imul
incb
or
xchg
mov
push
xchg
in
es
cmp
sbb
test
fsubl
fisubl
jbe
jge
ljmp
aaa
stos
mov
xor
subb
out
mov
shll
mov
adc
loop
mov
clc
les
push
jg
int3
arpl
jo
imul
xchg
jg
pop
xchg
fcmovbe
push
stos
inc
nop
mov
push
fdivs
fcomps
dec
fimuls
jnp
jne
adc
mov
inc
fstpt
fsubrs
out
jg
sub
imul
sbb
mov
pop
cmc
inc
lds
cmp
das
add
or
cmpsb
out
dec
mov
xchg
fs
aaa
ret
adc
fimull
push
jmp
xorl
sub
pop
adcl
shrb
push
stc
repz
fs
arpl
lea
sahf
mov
pushl
jo
xchg
les
fsubs
pop
dec
xor
mov
mov
mov
insl
repz
adc
into
mov
testb
leave
mov
jl
push
mov
sub
fldl2t
xchg
andb
dec
add
movsl
dec
mov
sub
sbb
frstor
fbld
jl
shl
fstpl
push
dec
dec
and
ret
js
je
inc
mov
xchg
clc
stos
rclb
mov
jne
jmp
test
repz
jmp
stc
addr16
push
sbb
xchg
dec
sub
sub
aad
mov
fcmovne
mov
mov
test
repnz
repnz
jns
adc
and
sbb
dec
movsb
negl
popa
pop
shrb
or
add
sbb
cs
cmc
data16
rorb
mov
cmp
inc
mov
in
into
or
shlb
jo
or
sti
mov
arpl
sbb
mov
aam
mov
mov
mov
cmp
jae
fstl
addr16
rdpmc
and
xchg
jg
test
or
and
cmp
jo
push
and
inc
xchg
scas
push
lods
pushf
xor
adc
sahf
out
xor
es
outsb
mov
shlb
incl
int3
sti
or
bound
pop
repz
xchg
mov
lods
test
fiadds
jno
std
ds
mov
aaa
add
mov
popa
inc
into
testb
out
xor
jo
xor
insl
add
add
jmp
or
mov
pop
jl
daa
xchg
mov
pop
repnz
into
insl
imul
loopnew
movsl
add
imul
pop
mov
pop
adc
jb
or
out
sbb
lds
sbb
push
pushf
aaa
cmpsl
adc
movsl
jns
mov
sbb
add
js
fwait
jb
lcall
call
adcl
dec
pop
sub
lcall
fsubs
sub
jb
cli
push
sub
daa
test
leave
adc
scas
mov
out
mov
cli
fisttps
mov
sti
xchg
add
cmp
push
push
fdivl
pop
push
jne
out
xchg
test
subl
fisubl
arpl
xchg
inc
push
ss
xchg
and
fldenv
cmp
je
out
pop
out
fsts
mov
push
or
insb
lock
stos
xchg
cwtl
shrl
add
pop
xor
ds
inc
lahf
cs
adcl
movsb
sub
int3
pop
push
jns
mov
je
lcall
push
stos
adcb
cli
mov
adc
push
jmp
xor
xchg
jno
lcall
cltd
jo
clc
cmp
inc
lret
push
fcmovbe
sub
sub
and
push
inc
inc
out
cld
sbb
dec
fstpl
out
jno
cmp
sbbl
mov
stos
cmp
into
cwtl
pop
or
mov
jns
cli
imul
incb
pop
adc
das
outsl
ds
in
dec
stos
cmp
addr16
sbb
repz
imul
jbe
xchg
push
pop
shr
mov
pop
cmc
insl
ja
push
test
fs
inc
or
in
inc
sbb
popf
fsubrl
jle
jbe
adc
cmp
je
stos
loop
dec
xlat
pushf
lods
insl
or
insl
out
xor
pop
cld
lcall
adcl
iret
lcall
push
stos
sbb
sub
outsl
cs
inc
mov
push
inc
call
mov
outsl
add
mov
push
hlt
pop
repnz
sbb
orps
enter
xchg
sub
dec
and
gs
sub
pop
rep
inc
data16
dec
jp
lret
test
rcl
jl
dec
xor
cmpsb
mov
fildll
mov
out
inc
fisttpl
jo
jg
bound
cs
and
aas
lock
or
add
pop
inc
xor
xchg
mov
lds
and
insl
call
push
mov
clc
pop
sub
cld
or
repnz
jg
jmp
mov
push
push
test
or
in
fwait
imul
test
xchg
adc
or
cmpsb
out
fwait
xor
enter
movl
adc
or
das
shrb
iret
pop
outsb
js
add
stos
mov
cs
test
mov
fidivs
les
rorl
int
lds
dec
cmp
jbe
outsb
ret
pop
lods
pop
jg
adc
js
cmp
popa
adc
xchg
lods
xchg
loop
dec
ficompl
adc
hlt
mov
or
jb
xor
xchg
or
insl
sub
hlt
aaa
hlt
aad
inc
in
cmp
fwait
sahf
xor
push
movsb
mov
lcall
in
push
pop
xor
bound
into
enter
jle
xchg
cmp
pop
mov
push
ret
pop
mov
jno
pop
out
ljmp
jb
adc
add
flds
xchg
cltd
hlt
mov
lods
jmp
dec
sbb
dec
out
ljmp
xor
movsb
out
push
jmp
aas
scas
dec
aam
roll
out
out
pop
dec
test
pop
sub
jp
loopne
test
cli
fsts
decl
pop
ja
mov
mov
mov
xchg
scas
add
sbb
mov
aas
mov
jbe
mov
imul
xchg
mov
dec
pop
add
fnsave
ret
jb
dec
in
cs
lea
insb
xchg
pop
subb
xchg
pop
pop
mov
sahf
jne
fimuls
addb
cmpl
xchg
sbb
in
jl
dec
mov
push
imul
jb
sbb
jp
roll
in
dec
cmp
cld
or
cmpsl
xlat
inc
gs
pop
rol
mov
sbb
pop
rclb
loopne
pop
xchg
frstor
mov
jo
lock
lret
sub
cld
sub
stos
or
es
shll
fnstsw
repnz
dec
scas
push
adc
add
xchg
sub
ret
aad
mov
les
adc
xor
fucomip
test
ret
stc
xchg
jne
insl
repnz
xchg
jecxz
adcl
or
mov
dec
mov
popf
call
test
mov
pop
xor
loopne
cltd
push
out
lods
clc
push
mov
xor
movsb
stos
xor
jbe
add
test
movsb
mov
pop
or
fldenv
sbbl
sarl
icebp
add
push
lds
subl
imulb
push
scas
and
jo
decl
mov
inc
mov
clc
xchg
inc
mov
out
add
daa
and
mov
fldt
test
dec
cmc
inc
mov
stos
jmp
jl
mov
push
fcoml
inc
aas
pop
divl
arpl
mov
cmp
hlt
gs
pop
mov
jns
popf
sbb
gs
inc
test
aas
in
in
sti
adc
and
insb
je
or
les
shr
pushf
xor
xchg
mov
pop
cmpsl
xor
lds
nop
adc
mov
std
push
xchg
jb
pusha
aam
xchg
push
js
add
jge
push
pop
ljmp
addr16
push
mov
sbb
dec
and
jp
mov
lds
cmp
test
mov
add
sub
inc
push
add
or
loop
xor
loope
push
aas
sub
cltd
sub
inc
std
push
mov
xchg
or
cmpsl
movsl
mov
jb
push
pushf
dec
aam
mov
das
push
jge
das
dec
cmp
test
mov
sub
adc
out
xchg
mov
sbb
pop
push
jnp
dec
jne
call
sbb
jmp
push
in
icebp
sbb
jle
cmpsl
cmp
mov
rolb
adc
mov
xchg
iret
scas
addl
mov
jmp
or
and
dec
pop
xchg
or
fwait
adc
addr16
movntq
or
mov
cs
dec
js
std
dec
cmpsb
mov
pop
xorl
jmp
movsb
cmpsb
cmp
jle
les
mov
fstl
adc
jg
jo
insl
pop
icebp
pop
pop
clc
addr16
mov
repz
adc
xorb
nop
pop
push
pop
ds
dec
fnstenv
cmp
xchg
pusha
test
mov
sbb
ja
sub
outsl
push
dec
rcrl
adc
xor
and
or
mov
jns
jnp
push
in
and
ja
cmp
scas
mov
pop
jg
jge
mov
bound
sahf
clc
aaa
lahf
arpl
inc
faddl
sub
push
jae
pop
sub
mov
jnp
lret
jb
ljmp
mov
fs
cltd
pop
fbld
xchg
inc
in
pop
ret
jae
je
and
mov
inc
shlb
sub
pusha
xor
movsb
mov
scas
in
pop
scas
fucomip
call
ljmp
arpl
mov
or
outsl
cmp
sbbl
push
pop
imul
sbb
jle
xchg
cmp
lahf
pushf
pop
out
ret
rclb
jo
mov
or
das
push
jmp
mov
jo
popf
fbstp
lcall
xchg
or
rorb
aam
jmp
xor
or
aaa
inc
hlt
push
xchg
and
in
mov
fcmovu
je
mov
mov
imul
jg
daa
cmp
add
ret
int
push
hlt
rolb
arpl
sub
addr16
fdivrs
shll
jle
repnz
les
jmp
xor
rol
aam
mov
push
sbbl
mov
sahf
pop
inc
fxch
gs
gs
add
daa
iret
xor
orl
push
out
dec
xlat
dec
in
outsb
jno
or
dec
mov
rorl
outsl
lea
mov
ror
gs
imul
int3
mov
rorb
fistl
pop
lahf
aas
aam
in
pop
sbb
sbb
mov
mov
aad
movsl
pop
inc
data16
jg
nop
imul
pushf
mov
lret
xor
add
cmp
push
lds
cmc
and
and
in
popf
fucom
push
icebp
addr16
mov
mov
rol
lds
pop
push
push
jo
jbe
or
ljmp
sar
xchg
sub
fsubrs
sar
scas
mov
xchg
sub
aad
ficoml
pop
mov
pop
sub
add
sub
test
cmc
loope
jne
jmp
xor
shrb
test
roll
aas
jo
xchg
sub
xchg
mov
add
sub
add
subl
inc
push
sti
out
jg
adc
pop
sub
addl
sub
push
daa
mov
mov
jns
ljmp
mov
jnp
cmp
pop
pop
data16
push
sahf
mov
jle
clc
lock
pop
mov
in
sbb
sbb
mov
pop
aaa
and
dec
dec
inc
mov
add
sub
cmp
mov
sbb
testb
dec
or
scas
and
enter
out
mov
xor
incl
lea
dec
test
dec
out
aam
test
mov
or
cmp
mov
cmc
aaa
dec
or
repz
aad
adc
add
or
out
sub
sbb
aaa
mov
enter
lods
mov
xchg
icebp
push
or
mov
jne
jbe
xor
inc
pusha
inc
dec
pusha
sbbb
int3
pop
ss
xor
ret
jge
in
cwtl
loope
fsubl
scas
inc
push
push
add
push
jge
ret
mov
push
push
xor
imul
loopne
stc
cmc
xchg
shlb
lcall
icebp
test
sbb
lret
insb
adc
popf
or
mov
inc
je
jle
cmpl
mov
aam
cli
xchg
mov
out
js
pop
sbb
lods
jecxz
test
or
test
inc
pop
fcoml
lret
mov
imulb
cli
jns
roll
rcll
pusha
jno
jge
or
push
imul
repz
and
sub
push
clc
ret
push
jmp
mov
enter
push
je
pushf
shl
lds
lss
fnstsw
test
int
mov
mov
cmp
daa
inc
out
pusha
aad
lcall
pop
fisubl
popl
sbb
sbb
cmp
add
mov
shll
test
and
xchg
nop
push
adc
cmp
mov
dec
test
jnp
dec
in
sbb
add
xor
pop
stos
enter
int3
in
sbb
xchg
push
outsb
mov
mov
rcl
repz
adc
inc
adc
dec
out
gs
cmpsb
xchg
mov
loopne
in
movmskps
inc
hlt
and
sti
loopne
sub
push
out
hlt
and
lahf
ss
cld
loopne
adc
or
cmpsl
movsl
xor
jne
and
push
imul
lds
popf
sub
pop
fstps
add
das
dec
sub
in
mov
inc
cmp
popa
fwait
aaa
out
or
cmpsl
dec
jmp
sub
out
fidivrs
je
negl
push
subb
ljmp
jno
xor
loop
jl
xchg
xchg
ret
dec
sbb
adc
sub
cmp
test
pop
outsl
push
cmp
std
inc
xchg
rorl
mov
or
inc
cmp
jo
test
outsb
lcall
cld
adc
stc
lret
int
sbb
ror
jecxz
imul
adc
xchg
sub
scas
and
or
mov
sub
lds
push
pop
mov
in
sub
andl
cmp
or
in
pop
insl
inc
add
sub
loope
pop
sbb
adcl
clc
pusha
subb
or
int
pop
repz
divl
pop
cmc
icebp
cwtl
jle
repz
jae
test
sarl
adc
in
mov
clc
and
mov
ljmp
in
loope
mov
add
cmp
arpl
imul
repnz
mov
push
out
add
out
aas
in
outsb
shrl
dec
stos
inc
stos
mov
int
movsl
repz
mov
inc
pop
shll
xor
scas
pop
cld
popf
push
loop
adc
lcall
in
xor
mov
adc
repnz
sti
sbbb
push
in
inc
mov
je
inc
ret
divl
xor
inc
inc
es
or
movsb
imul
xchg
push
repz
xor
int3
mov
fbstp
daa
sub
sub
push
mov
enter
fcmove
fldcw
dec
cltd
or
and
xchg
push
xor
sbb
cmpsb
loopne
pop
sbb
std
mov
sub
xchg
ss
adc
pop
push
lret
or
in
movsb
mov
push
int
mov
sub
arpl
lea
mov
scas
ja
pop
jae
sbb
loop
ror
ss
repnz
mov
pushl
xor
mov
jmp
aas
out
adc
pop
cmp
inc
out
outsb
mov
leave
fnstcw
sub
and
pop
mov
dec
cmp
jae
pop
outsl
dec
push
lods
inc
xchg
jg
test
bound
push
pop
movsl
loopne
push
notb
pop
dec
ret
xor
pop
jns
cmpl
mov
clc
aam
xchg
sub
imul
push
sbb
addr16
hlt
inc
ret
push
add
jge
push
rcll
xorl
mov
iret
dec
jmp
cli
cmc
lea
daa
lcall
or
xor
decl
mov
popf
dec
add
lds
int
popf
popf
sbb
sahf
mov
mov
cmp
popa
andb
iret
jne
add
cmpsl
ret
in
mov
daa
xor
cmpl
mov
out
mov
dec
sarb
imul
jns
push
inc
pop
cmpsl
xchg
xchg
fimull
jbe
jb
imul
mov
nop
pop
pop
lea
jle
mov
xchg
mov
mov
movsb
inc
lcall
xor
data16
outsb
out
lock
lret
pop
xlat
mov
aad
iret
xchg
jbe
fildl
or
sbb
mov
xchg
lods
jl
fidivs
clc
add
jns
mov
adc
or
pop
xchg
fwait
shl
mov
cli
fbstp
aas
enter
push
rcr
ficoml
pop
cmpsb
sbb
xchg
lcall
mov
out
jge
ret
jns
out
jp
cmp
pop
xchg
inc
and
jbe
xchg
stos
pop
adc
testb
inc
add
cld
cmp
sar
push
data16
cmp
ss
push
mov
fisttps
loopne
mov
sub
or
scas
sahf
xor
jno
aam
inc
push
cmc
testl
int
lock
out
add
cld
inc
out
cwtl
ror
outsl
testb
dec
xchg
dec
imul
out
out
out
xor
jmp
sbbb
into
enter
outsl
daa
xchg
test
lcall
or
rclb
or
xor
mov
lods
add
ljmp
pushf
mov
nop
push
jmp
cld
movsl
inc
and
add
jo
outsl
sbb
test
clc
xor
xor
std
int3
inc
jmp
lock
mov
call
decl
rolb
push
jno
xchg
inc
lret
push
mov
sbb
pushf
xor
add
es
xchg
sbb
leave
sbb
cmp
mov
ret
pop
push
gs
xchg
lea
iret
jo
daa
or
mov
xchg
popa
dec
movb
cld
cmpsb
push
shlb
adc
pop
adc
push
ret
aam
mov
addr16
lahf
test
lret
xchg
jl
sbb
sarb
repnz
mov
test
lret
jae
out
or
cmpb
out
adc
mov
nop
lock
dec
cltd
stos
rorl
scas
ret
lahf
fcomi
scas
push
in
movsb
push
or
icebp
adc
push
popa
loope
lds
push
xchg
mov
pop
popf
repnz
inc
ljmp
dec
hlt
pop
or
lock
jle
insl
push
jnp
cmpsl
push
xchg
sub
mov
mov
icebp
roll
add
jns
in
scas
sbb
xor
nop
xor
jne
in
jb
int
aad
push
stos
inc
sahf
add
je
mov
mov
or
push
mov
adc
inc
jmp
js
out
fwait
popf
inc
xchg
cld
jmp
sbb
mov
adc
dec
stos
scas
pop
cs
mov
imul
fwait
lock
or
xchg
mov
dec
push
hlt
xchg
je
dec
mov
cmp
lea
dec
jns
je
loop
call
mov
xor
ds
adc
mov
shrb
shlb
in
aaa
xchg
adc
mov
sbb
out
xchg
jp
sti
movsb
les
aas
jmp
pop
sub
iret
clc
xchg
in
stc
add
dec
loope
sahf
pop
xchg
fstpt
mov
lods
xchg
jmp
cmp
mov
lret
repnz
mov
push
sbb
popa
int
inc
mov
and
arpl
inc
aaa
sti
mov
and
dec
jno
fisubl
push
int3
push
subb
scas
or
xchg
add
fs
pop
cmpb
pop
jecxz
movsl
pop
popf
dec
mov
call
lret
pop
lcall
cli
dec
sub
fcompl
add
mov
pop
add
or
dec
filds
das
icebp
nop
mulb
data16
aaa
jae
lret
movsb
pop
test
inc
push
xor
test
jp
inc
xchg
je
mov
sahf
popa
lcall
cmp
out
aam
arpl
mov
inc
in
cmpsl
ss
sbb
fistl
dec
pop
fs
dec
sbb
or
push
sbb
inc
sub
sub
xor
lret
or
out
clc
mov
add
or
mov
or
jmp
imul
mov
xchg
sarl
adc
jmp
cwtl
das
dec
std
cmp
test
dec
cs
inc
xchg
sbb
cmp
insl
stc
mov
push
out
push
and
mov
scas
and
fstps
ror
xor
dec
clc
iret
loope
out
mov
sub
pop
push
arpl
insb
jg
insb
mov
push
in
movsb
push
in
push
mov
ret
cmc
push
lods
inc
lea
push
in
loope
sub
int3
mov
imulb
pusha
mov
ss
incl
adc
jae
incb
xchg
shr
ja
hlt
iret
sbb
roll
ret
je
sti
mov
sub
push
add
push
mov
sarb
aad
imul
repz
imul
je
jno
xor
inc
jne
mov
cld
aad
inc
cmp
cmc
jecxz
cmp
bnd
jp
or
test
xor
add
or
rcrb
add
std
pop
repz
push
mov
xchg
and
test
in
mov
test
or
lds
insl
mov
jbe
shll
sbb
jbe
lret
mov
lock
dec
stos
mov
adc
in
dec
mov
cmp
sbb
enter
xchg
mov
adc
imul
dec
push
add
jno
jae
sbb
sub
and
jle
rcll
push
mov
xchg
call
xor
bndstx
bound
push
popa
in
xchg
das
bound
insb
pop
xchg
ret
xchg
rclb
or
cmp
jbe
push
test
stc
or
js
addr16
mov
mov
sbb
mov
add
rol
jmp
dec
lret
icebp
jae
cli
sub
outsl
movb
in
pushf
jg
jo
scas
cmp
lds
imul
fwait
psraw
aad
mov
pop
sarb
rcr
inc
fisttpl
es
or
stc
lods
xchg
pop
add
rcrl
data16
xchg
cs
out
push
xor
rol
sub
aad
in
repnz
push
cmpsl
jecxz
repz
loopne
arpl
shlb
rol
or
sbb
cmpsl
daa
fmuls
cs
jns
pop
aaa
daa
fcmovnbe
push
mov
inc
iret
xchg
xor
popa
bound
mov
dec
dec
cmp
das
jg
lcall
inc
mov
mov
xchg
or
or
adc
xor
adc
push
jne
xchg
dec
push
rcll
jge
pusha
cs
push
stc
popf
dec
pusha
sbb
rcl
jmp
push
pop
and
pop
sub
testl
xor
add
jge
xor
test
es
mov
xchg
mov
mov
inc
mov
push
insb
in
push
fstps
sbb
into
cltd
push
cmp
fucomp
mov
mov
lahf
add
sub
popa
mov
aaa
and
stc
nop
jmp
mov
mov
imul
imul
les
and
fildl
mov
repnz
cmp
leave
lock
movsb
push
insb
in
insb
mov
test
sub
cmpsl
movsb
cmpsb
dec
pusha
loopne
clc
sub
cmp
cmp
lret
adc
repz
test
movsl
lds
cld
cmpsl
add
in
inc
iret
push
xor
in
inc
fnstenv
leave
lret
push
pop
lahf
mov
inc
pop
std
pop
pushf
mov
test
sub
std
sub
ljmp
leave
icebp
lea
jne
das
mov
push
mov
mov
cmp
gs
outsb
rorl
xchg
insl
xor
mov
movb
mov
je
or
sti
fwait
shl
movsl
xchg
daa
aaa
lahf
adc
popf
push
inc
push
dec
shll
in
inc
pop
out
fs
into
push
dec
daa
mov
rorl
negb
sub
pop
inc
push
outsb
insb
outsl
int
mov
push
outsl
mov
push
jo
push
outsl
mov
jecxz
push
or
movsb
sarl
loopne
push
arpl
loopne
dec
adc
cmc
push
aas
movsl
inc
sub
push
dec
pop
push
enter
cld
sbb
pop
movsl
sub
jle
sahf
popf
jge
mov
pop
call
scas
inc
ljmp
push
cmpsb
mov
adc
or
movsb
aas
cmpsl
ljmp
add
adcl
fsubp
out
sti
sub
subb
xor
fisttpl
push
mov
cmc
jno
icebp
adc
mov
adc
cmpsl
mov
out
test
loop
ss
xor
scas
push
loope
and
lret
testl
in
ror
shlb
inc
and
test
aaa
pop
mov
je
arpl
adc
js
jl
ficompl
mov
sbb
leave
int
mov
scas
mov
cmp
inc
add
jns
lods
sub
jno
pop
movsb
add
mov
nop
inc
cmc
push
push
dec
pop
xlat
sarl
js
inc
push
pop
push
pop
stos
ljmp
and
sub
cltd
jge
dec
push
jae
or
cmpsl
not
mov
add
inc
mov
push
add
aaa
mov
inc
mov
xlat
add
mov
repnz
cwtd
sub
xchg
dec
enter
lret
inc
fcoml
mov
mov
data16
or
mov
push
jp
mov
in
jecxz
push
cli
int
cltd
add
addr16
cwtl
arpl
sbb
movsb
andl
sbbb
les
add
xchg
jae
mov
repnz
xchg
pop
nop
adcl
cmp
imul
adc
cmp
sarb
enter
or
mov
dec
mov
dec
and
sbb
rorl
test
mov
mov
loop
sub
stc
ret
into
rolb
push
cmpsl
xchg
jae
mov
jecxz
push
push
rolb
pop
mov
lret
outsl
and
dec
pop
push
jns
dec
adc
and
mov
sarl
popf
lods
insl
push
stos
mov
pop
sub
rcl
jg
data16
jle
addr16
xchg
rcrl
fdivrl
jne
int3
ss
xchg
in
stos
cltd
mov
mov
push
movsl
cwtl
das
out
shl
adc
mov
pop
loop
scas
add
shll
int
dec
push
mov
daa
jae
xchg
mov
loope
test
cmc
inc
mov
rol
sub
arpl
dec
rcll
sbb
inc
hlt
shrl
rorl
push
sti
mov
sbb
jge
int3
and
jbe
mov
jns
fdivs
pop
adc
testl
jmp
movsl
in
mov
das
dec
push
or
aad
adc
mov
mov
in
jb
sahf
imulb
add
jmp
lret
rorw
insb
and
arpl
lock
or
sbb
push
jmp
xchg
mov
push
addl
rorl
stos
mov
sbb
sahf
inc
mov
mov
pushf
pop
test
cmpsl
jnp
pushf
rorl
cmp
ljmp
push
pop
into
inc
arpl
push
ss
je
cmpsb
and
loope,pn
dec
lock
int3
jp
sti
cmpsl
stos
mov
loope
lods
xchg
lock
les
cmp
add
in
push
pop
inc
pushf
mov
inc
or
leave
xchg
insl
or
hlt
daa
cmpl
lods
xor
or
mov
push
adc
cwtl
xchg
jnp
arpl
mov
mov
fstpl
stc
or
adcl
push
decl
cmpsb
sub
jo
mov
pop
xor
je
stos
test
scas
das
pop
fsubs
imul
in
jle
pop
and
and
jp
xchg
cmp
xor
out
jge
cmp
sbb
mov
lahf
mov
lcall
xor
or
cmp
xchg
clc
in
lea
pop
mov
insl
or
or
sub
pop
dec
scas
dec
push
xchg
decl
cmp
adc
mov
mov
jo
add
clc
sarb
add
test
inc
mov
dec
cmp
jl
inc
sbb
pop
sub
call
mov
mov
mov
ret
lods
mov
adc
inc
jns
xchg
push
cmp
xchg
dec
dec
loope
addl
out
aad
push
ds
xor
mov
mov
xchg
idivl
outsl
sub
clc
outsb
push
adc
out
adc
imul
lock
jo
mov
sahf
leave
psubusb
insl
cld
push
sbb
cli
xchg
loope
sub
xor
shrl
xlat
push
sbb
mov
cmp
into
insl
inc
pop
pop
jo
and
mov
pop
mov
fsubl
xchg
xor
nopl
sbb
stos
pop
add
jnp
rcl
mov
shlb
ret
mov
out
leave
add
arpl
mov
add
jo
aam
mov
xor
pop
mov
iret
repnz
lret
int3
jg
xor
sbb
add
test
fwait
inc
fcmove
inc
notl
rorb
cli
icebp
fst
int
sbb
jb
in
sbb
daa
inc
ficoms
mov
cld
fsub
pop
enter
cmpb
out
jo
add
out
push
jmp
mov
xor
xchg
push
lock
rorl
call
test
adc
ret
loope
outsl
test
scas
cmp
or
sarl
mov
aas
addr16
xchg
rorl
mov
mov
dec
xor
outsb
jo
negl
aaa
adc
mov
mov
fnstcw
mov
lret
les
xor
in
jbe
pop
adc
loopne
outsl
popf
nop
xchg
out
scas
shlb
pop
clc
sub
out
cmp
call
rclb
pop
shll
adc
mov
mov
in
or
cmpsl
mov
xor
mov
sbb
mov
ficoms
dec
jns
or
cmp
or
mov
call
shll
popf
enter
iret
pusha
or
lahf
inc
cld
fsubl
mov
mov
cmp
dec
jl
lods
mov
push
cmp
sub
inc
movsl
pop
mov
lock
scas
adc
lahf
xor
inc
call
mov
mov
filds
int3
mov
lcall
repz
fcoms
mov
push
fsubrs
lret
push
and
imul
jg
add
ficomps
mov
cli
or
shlb
or
lret
nop
daa
rclb
cmpsb
rcll
jae
mov
icebp
pop
sub
inc
aaa
mov
mov
pop
imul
sub
mov
out
sub
fistpl
enter
gs
lods
cmp
pop
mov
fnstsw
ja
mov
mov
cli
cltd
enter
sti
fwait
push
aaa
in
push
popf
cs
ret
jae
jecxz
fcom
or
addb
lret
leave
xor
jle
or
iret
lcall
push
mov
por
loopne
push
pop
pop
inc
dec
push
jge
mov
movsb
movsb
mov
pop
jbe
cmp
movsl
xchg
nop
call
ja
add
or
les
decl
cmp
xlat
daa
inc
cmc
test
dec
bswap
ja
add
daa
jne
mov
jbe
xchg
mov
ja
int3
pop
and
ss
jne
add
xchg
gs
nop
jae
shlb
sti
mov
mov
mov
cmc
xchg
cmc
push
adc
pop
mov
je
pop
mov
scas
ret
sti
push
pusha
mov
mov
sbb
loopne
hlt
mov
xchg
icebp
movb
out
cmpsb
mov
sub
jl
jp
scas
push
lods
lahf
out
inc
nop
loop
andb
push
repz
adc
cmpsb
jl,pt
dec
or
leave
enter
mov
xlat
adc
adc
and
mov
ja
lret
ret
sbb
adc
xor
mov
mov
cwtl
clc
xchg
into
fs
lcall
dec
cld
and
xchg
sbb
jbe
lods
or
lahf
into
mov
fdiv
mov
aas
ficoml
in
or
js
jle
les
xchg
enter
enter
inc
push
jae
scas
add
stc
cs
jle
pop
ror
or
addl
inc
inc
filds
test
mov
mov
cmp
mov
jp
xlat
mov
sbbb
outsb
dec
mov
insb
adc
push
mov
push
repnz
fldenv
popl
or
or
and
xchg
push
pop
mov
insl
cmp
ret
fnsave
pushf
and
lret
out
mov
cmp
int
test
hlt
dec
push
movsl
mov
xchg
xchg
pop
mov
jp
loopne
and
loop
mov
mov
aas
stos
sbbl
pop
ja
stc
stos
neg
pop
sub
xorb
iret
xor
lock
jge
cwtl
cmp
adc
fistpll
adc
pop
fisubl
push
or
scas
pop
push
andb
jmp
int3
arpl
out
cltd
mov
cmpl
pop
mov
ret
mov
and
inc
scas
insl
and
subl
xchg
stos
or
inc
mov
pop
inc
bound
fisttpll
fs
ret
jp
cmc
sbb
out
int
repnz
inc
pop
inc
and
mov
cwtl
hlt
repz
mov
add
push
jb
mov
xchg
mov
sahf
xor
xchg
frstor
add
loope
and
icebp
shl
lods
or
xchg
cli
mov
xchg
and
sub
pusha
loopne
push
lahf
push
ljmp
shrl
fdivrs
cmp
dec
mov
inc
and
popf
or
pop
outsl
loop
das
xchg
pop
sbb
addr16
cmp
loop
sub
pusha
mov
jno
lods
sub
push
cmpsl
or
sub
enter
divl
icebp
xchg
add
sub
clc
sub
dec
imul
test
insl
rol
testl
push
xor
out
test
fnstsw
mov
cld
xchg
pop
or
cmp
jl
in
mov
mov
mov
fmul
bound
inc
aaa
pop
in
push
and
sbbl
or
xchg
fnsave
sub
movsl
and
pop
outsl
lods
pushf
xor
adc
inc
inc
mov
das
rcrl
testb
ja
nop
push
adc
cmp
push
jmp
mov
jns
gs
xchg
adc
xor
cld
lods
pop
sahf
push
test
mov
and
cs
lea
mov
push
pop
inc
push
adc
outsb
add
sbb
je,pt
repz
pop
fmull
sbb
adc
adc
mov
cs
pop
mov
pop
add
leave
pusha
sbb
loope
or
mov
scas
and
push
mov
inc
ss
out
call
montmul
cmpsb
push
imul
imul
jecxz
fwait
shlb
adcl
add
xchg
jae
sbb
jle
lods
shrb
mov
pop
notb
sbb
adc
outsb
lret
bound
stos
mov
ficompl
add
mov
and
testb
dec
in
popw
push
add
insl
xchg
mov
jmp
into
and
mov
or
or
lret
bound
cmp
mov
sub
dec
sub
jle
hlt
mov
sahf
out
rcr
aas
adc
add
and
pop
cmc
inc
push
pop
icebp
or
lret
add
jmp
jl
lods
inc
xchg
mov
mov
out
inc
fdivl
or
xchg
cmp
fidivl
gs
and
inc
sbbl
jmp
js
xchg
fwait
inc
xlat
dec
loop
and
pop
cmpsb
dec
shrl
clc
data16
sub
out
xchg
cli
xchg
jle
movsl
cmp
mov
jnp
in
pop
pop
pop
add
addr16
popa
clc
jae
popa
clc
ficoms
push
sub
pusha
test
xchg
inc
mov
pop
call
or
leave
cmp
cmc
sub
es
xor
das
dec
dec
loope
dec
fs
jge
mov
mov
loopne
cmp
xor
fidivs
inc
cmp
jae
jo
xlat
xchg
pop
lock
and
adc
lods
inc
push
mov
bound
fsubr
adcb
jecxz
sbb
mov
add
adc
cld
xchg
and
cmp
repz
sbb
hlt
test
sub
jbe
cmp
sub
adc
dec
fbstp
or
clc
inc
in
push
movsl
and
inc
fmull
std
sbb
das
push
dec
jecxz
cmc
ds
ficomps
sub
pop
test
cmc
sbb
push
inc
pop
cs
loopne
inc
cmc
mov
sub
lcall
push
sti
xchg
inc
hlt
xchg
sub
or
push
fidivl
repnz
adc
mov
das
ss
arpl
mov
mov
stc
int3
es
and
inc
mov
jae
mov
lods
xchg
cmpsb
cmp
cli
jecxz
iret
sbb
sub
lahf
adc
mov
fstpl
scas
push
sbb
lret
pop
outsl
cmpsb
cmp
decb
insl
pusha
outsb
push
popf
sahf
mov
mov
mov
cmpsl
mov
outsb
es
jmp
cmp
test
pop
sarb
jmp
push
or
mov
fidivl
cmp
xorl
ds
cmp
imul
jg
push
lods
hlt
lods
pop
out
loopne
rclb
insl
push
mov
pop
out
push
cmp
aas
jno
jbe
mulb
mov
pop
dec
add
jle
mov
add
iret
inc
dec
xor
jns
jnp
add
push
movsl
inc
dec
shlb
xlat
add
jecxz
and
data16
mov
jecxz
adcb
add
std
mov
das
in
push
popa
xor
popa
mov
loopne
in
cmp
fwait
imul
cld
xchg
insb
cmp
mov
lock
sbb
push
scas
inc
add
test
cmp
mov
add
je
dec
aaa
insl
sarw
dec
cmc
adc
pop
inc
sub
pop
xlat
mov
push
shlb
movl
pop
repnz
xlat
data16
add
push
mov
inc
pop
sbb
push
cwtl
das
pop
sbb
mov
pop
fnstenv
fisttpl
or
cltd
xor
cmp
dec
push
cld
xchg
dec
loopne
xchg
push
sbb
ss
popa
push
call
xor
cmp
adcb
in
cmc
mov
icebp
push
movsl
and
xchg
sub
cmc
pop
out
daa
cmc
shrl
stc
inc
xlat
sub
mov
sub
outsb
add
xor
xchg
sub
add
cltd
xor
add
repz
ja
test
sbb
or
pop
scas
rcr
testl
xor
cmp
jg,pn
add
loop
out
arpl
add
arpl
iret
ret
repnz
int
jae
xlat
outsb
jo
outsl
push
out
mov
pop
inc
or
aas
gs
mov
jmp
or
jl
push
lds
inc
ficoml
arpl
cmpsl
jg
cli
adc
cli
es
xchg
imul
test
xchg
jo
cli
cld
xchg
sub
mov
and
incb
daa
xor
push
xchg
in
mov
and
sahf
cs
cltd
xor
aas
sar
mov
xchg
cmc
in
sub
sub
es
cltd
cld
testl
and
cli
lahf
mov
das
test
inc
and
xchg
mov
enter
xchg
pop
pop
hlt
nop
inc
push
movsl
jb
dec
loopne
scas
inc
pop
jae
xchg
inc
sbb
jecxz
scas
inc
fidivrl
xlat
outsb
push
test
jns
mov
and
xor
xchg
fs
ds
mov
xor
aad
ret
pop
insl
dec
push
in
jg
leave
pusha
call
xor
fs
lds
sub
out
scas
add
insl
inc
shlb
mov
push
lret
fldpi
orb
repnz
xor
mov
ja
arpl
mov
fidivs
shll
lret
mov
add
cmp
imul
push
movsl
mov
mov
std
or
testb
js
sub
lret
les
rorb
jmp
push
jne
mov
enter
dec
loop
sbb
sub
jnp
inc
jo
fsubl
lds
shl
mov
dec
out
push
dec
pop
inc
imul
cwtl
shrb
mov
sbbl
adc
jo
inc
ficoms
mov
mov
mov
test
cmp
aad
pop
add
lea
xchg
test
incb
pop
xor
xor
push
call
adcl
movsb
popf
xor
movsb
data16
shl
leave
pusha
and
inc
jno
jns
xchg
sub
lret
xchg
or
shl
push
es
cmp
xor
addr16
fwait
xor
test
push
sbb
pop
stos
pop
lock
lcall
fwait
mov
mov
xorl
je
in
push
xchg
sub
popf
dec
in
xorb
push
fdivl
aam
xchg
int3
stos
add
lret
dec
iret
fildl
xor
pcmpgtw
outsl
inc
xor
jae
stos
test
xor
fs
jo
push
test
cmc
adc
pusha
mov
sub
data16
mov
out
aaa
adc
fs
add
in
negb
test
hlt
push
repz
sti
es
cmc
jb
stc
leave
pusha
out
mov
in
test
stc
outsl
mov
xchg
insb
xchg
and
bound
cmp
dec
vcvtpd2ps
cmp
aam
cmp
sbb
add
push
ror
pop
pop
mov
leave
sub
out
push
dec
mov
mov
mov
gs
ja
and
out
cmp
mov
jl
adc
outsb
add
cmp
cltd
negl
push
and
imul
jmp
inc
xchg
push
adc
test
fimuls
sub
dec
and
mov
out
popa
add
sti
xchg
pop
cwtl
das
pop
adc
jmp
jnp
mov
mov
pop
add
jno
inc
lds
pop
adc
out
sbb
pop
push
popf
ret
movsb
test
mov
mov
fisttpl
call
lret
mov
cld
sbb
jecxz
or
cld
sbb
loop
and
fcmovnu
xor
outsb
sarb
lods
in
adc
je
xchg
aam
divb
sti
xor
ret
inc
lret
popa
sbb
mov
sbb
subb
xchg
sub
outsb
sahf
stc
xor
jns
jae
or
imul
aaa
xor
mov
dec
add
rcrb
jne
notl
mov
sbb
mov
cld
inc
hlt
add
mov
lret
loope
mov
add
out
sbbb
push
stc
push
or
pop
pop
jne
divl
pusha
mov
adc
mov
fwait
jbe
lcall
push
jbe
pushw
dec
outsl
test
adc
ds
fwait
jns
mov
mov
lock
sbbl
or
cld
mov
gs
int3
xchg
push
test
lret
jmp
ss
sarb
repz
rol
fnstsw
push
push
mov
je
sbb
and
xchg
push
int
out
xor
int3
call
das
loope
add
mov
cs
orl
xor
jp
xor
jl
mov
sub
int3
aaa
aad
jbe
cmp
or
aas
jmp
xchg
xchg
xchg
mov
imul
fildll
lcall
pop
hlt
aas
shlb
fcmovb
pusha
mov
mov
jno
pusha
mul
inc
mov
insb
jg
mov
pusha
cmp
popf
xchg
in
adc
outsl
popf
mov
jb
ret
out
mov
rorb
rcrl
repnz
ljmp
and
adc
add
pop
icebp
in
and
out
cltd
addr16
inc
or
scas
add
imull
or
lock
xchg
inc
push
mov
xchg
cmp
push
repz
push
lea
mov
rorl
inc
mov
cld
cmp
lret
mov
in
dec
aad
lock
loopne
and
cwtl
inc
cmc
sbb
and
les
xor
fadds
jp
or
inc
xchg
add
push
ja
mov
movsb
cwtl
loopne
sbb
xchg
aad
neg
xchg
mov
mov
gs
fsubs
inc
mov
adc
lods
std
loope
in
mov
adc
rorb
ljmp
and
push
jo
adc
mov
pop
out
and
xchg
mov
inc
mov
fwait
pop
sbb
jge
jo
lods
xor
nop
mov
jae
fwait
dec
les
rolb
adc
ss
fs
dec
inc
shl
cmpsb
pop
jno
cmp
pop
ss
cmp
jp
pop
pop
cmp
add
and
dec
in
and
nop
xor
and
int3
arpl
cmp
sub
js
iret
inc
mov
cmp
xchg
jecxz
push
push
stc
cmpsl
outsb
cmpsb
sbb
pop
hlt
mov
fcmovne
inc
call
mov
repnz
repz
mov
scas
jmp
fbld
leave
push
sub
outsl
shlb
and
add
cmp
mov
out
push
test
mov
clc
xor
inc
sub
pop
inc
sbb
pop
adc
pop
sti
xchg
testb
adc
fsubrs
in
inc
mov
insl
filds
mov
lock
jns
iret
lock
stc
call
int3
adc
ror
mov
fadd
cs
xchg
xchg
mov
ss
mov
jecxz
fistpll
ss
into
xchg
cmpl
inc
add
adc
lods
dec
out
insl
add
mov
loop
scas
jp
xlat
cmp
popf
dec
and
inc
fucomi
inc
sarl
imul
call
or
scas
out
lcall
cld
pop
shl
iret
dec
in
pop
pop
rcll
pop
sub
mov
stos
lahf
xor
sub
mov
adc
jmp
clc
sub
dec
scas
push
sti
push
lods
cld
lods
inc
lret
loop
aas
jmp
lret
shrl
aad
sub
rcl
out
push
lds
or
and
rolb
in
fstl
and
les
add
sbb
call
or
scas
mov
sub
inc
sbb
and
jg
jl
pop
aaa
lea
inc
jl
ss
xor
xchg
dec
pop
insl
fadds
sub
push
inc
mov
outsb
aas
lcall
push
jle
fwait
mov
cmc
decl
lock
xchg
mov
lods
inc
dec
lcall
inc
insb
cmp
ss
adc
insb
cltd
fwait
cmp
cli
mov
sbb
icebp
jo
subb
out
cmpsl
pop
jnp
jo
es
inc
insb
outsl
lcall
xchg
aas
push
inc
mov
xor
orb
push
ja
aaa
mov
cmpsl
sbb
xlat
cmp
sub
shlb
filds
add
in
test
cmc
daa
shl
xlat
adc
int
mov
cmc
mov
fbld
cwtl
xchg
mov
out
jle
mov
in
push
mov
jno
pop
stos
int
in
push
dec
push
jmp
imul
inc
mov
stos
gs
push
movsb
mov
nop
ja
add
mov
sarl
rorb
mov
mov
imul
lock
inc
cmp
jns
push
pusha
clc
inc
mov
sub
dec
mov
aas
loopne
sahf
out
loopne,pn
test
roll
je
mov
and
xchg
dec
add
ja
push
mov
pop
jns
test
and
mov
xor
mov
data16
arpl
cmova
out
pop
xchg
sbb
lods
jmp
fistpll
loop
stos
std
fidivrl
sbb
or
push
scas
mov
inc
loop
lock
add
pop
lcall
xor
sti
fnstenv
jecxz
pop
leave
mov
jb
lcall
popa
xchg
daa
pop
idivl
cmp
jle
leave
pusha
fistl
fdivl
push
mov
adc
test
call
pop
hlt
adcl
mov
cmp
and
jbe
ret
addr16
inc
scas
adcb
pop
adc
xchg
push
add
gs
and
xchg
sbb
cwtl
addr16
clc
xchg
push
dec
sub
pop
nop
dec
iret
and
lock
outsb
and
cmp
mov
push
nop
fnsave
sub
or
sbb
mov
adc
hlt
sub
mov
dec
or
add
and
sbb
call
mov
je
pop
popf
cmc
push
sub
aad
popa
mov
mull
jle
jp
jo
adc
cmpsb
pop
jge
add
pop
xor
mov
call
insb
fiadds
xor
int
cmp
jle
sbb
rcll
gs
cmpsl
shlb
lret
test
leave
jecxz
push
xlat
sbb
lcall
mov
fwait
xchg
mov
lock
jmp
mov
shrb
sub
jp
test
rcll
adc
mov
les
xor
les
pop
enter
pushf
test
lods
pusha
pop
xor
out
es
in
sub
gs
popf
pop
fnstenv
popa
sbb
sub
ljmp
add
sub
outsb
add
stos
jecxz
dec
mov
or
mov
pop
xchg
xchg
dec
mov
or
cmp
pushf
xchg
mov
in
gs
fwait
dec
sub
pusha
pushf
outsb
adc
addr16
and
sub
mov
cmpsb
popa
ss
aaa
in
or
jmp
dec
into
jbe
aad
test
inc
in
cwtl
jae
mov
popf
subb
and
mov
stc
adc
and
xor
push
push
and
or
xor
adcb
adc
xchg
lahf
inc
adc
frstor
push
dec
xor
mov
and
fildl
sub
xchg
xlat
cmc
push
mov
adc
mov
ret
adc
fstpt
xor
fsts
std
es
cld
xor
ret
stc
nop
cmc
mov
inc
rorb
push
fs
adc
mov
stos
inc
jmp
popf
jecxz
fisubrs
sbb
insl
rcrb
gs
sub
cmp
cltd
mov
pop
jo
jne
es
enter
mov
and
sbb
xorb
sbb
xchg
dec
imul
or
pop
ret
dec
test
add
inc
push
mov
xchg
inc
add
stc
push
push
mov
adc
cwtl
mov
lret
sub
addr16
fbstp
lea
mov
les
movsl
cmp
insl
addl
lods
jp
into
push
bound
push
jno
adc
xchg
and
jae
ljmp
add
ss
jo
pop
inc
stc
or
mov
sti
cld
xor
xor
sub
lret
xor
push
in
sub
push
rorb
xchg
sub
push
lret
pop
or
or
popl
push
fisttpl
mov
movlps
pusha
pusha
call
enter
xor
or
mov
mov
test
ret
and
ds
popf
sti
and
mov
out
bnd
ds
mov
testb
dec
mov
scas
jecxz
xlat
dec
sahf
add
mov
imulb
out
in
ja
jne
inc
cmpsl
xchg
xor
xor
pop
lods
xor
sub
lret
mov
sbb
out
mov
inc
test
pop
xor
jnp
push
mov
mov
sti
push
or
out
cmp
adc
add
test
fwait
cmp
xchg
sub
fs
addr16
jecxz
int
ja
push
cmpsl
pop
and
cltd
xor
lea
cwtl
test
pop
xchg
sub
xchg
pop
jb
pushl
je
loopne
outsb
inc
jo
xor
je
cmpsl
imul
pop
enter
dec
ret
cmp
shlb
sub
push
mov
jl
mov
fimuls
fistl
sahf
xchg
mov
dec
shl
cld
jb
cs
loope
push
pop
stos
push
je
add
inc
dec
into
push
daa
testl
adc
mov
and
push
xor
mov
imul
lods
movsb
pop
sti
xchg
in
stos
fildll
pop
iret
lret
inc
sti
ret
inc
fcmovu
mov
mov
pop
inc
mull
pop
push
mov
sub
and
mov
cwtl
lock
movsl
in
movsl
je
mov
jmp
jmp
lret
andl
mov
xchg
sub
notl
jp
ret
mov
out
or
inc
cltd
and
lods
push
pushf
adc
lods
or
inc
fyl2xp1
cmpsb
data16
fnstenv
popa
jecxz
xchg
mov
mov
addb
push
psllq
sbb
icebp
xchg
repz
add
test
push
add
popf
rcrb
aad
movsl
bound
sbb
scas
flds
jno
lahf
int3
push
xchg
out
adc
fnstsw
in
bound
push
pushf
loopne
fs
out
and
cmpsl
movsb
inc
movl
xchg
xor
push
loop
ds
dec
shrb
dec
and
loopne
sbb
or
jns
jge
xchg
dec
shld
mov
stos
push
mov
cs
dec
aam
jns
test
out
sub
js
inc
arpl
mov
xor
push
push
shr
dec
cmp
push
or
mov
xor
push
mov
adc
pop
repz
fwait
jb
add
lods
addl
mov
fwait
adc
ret
sbb
fisubrl
cmc
pop
call
inc
add
sub
mov
dec
dec
outsl
mov
xor
pop
mov
in
mov
repnz
mov
insb
mov
jge
fwait
cmp
jp
bound
jne
ja
mov
call
ficompl
mov
out
rcrb
sbb
movsl
push
xor
test
roll
loop
iret
add
sti
hlt
dec
ret
gs
adc
or
sbb
fwait
adc
ljmp
pop
cmp
icebp
sub
and
out
nop
decb
dec
lcall
push
shll
or
cmp
mov
fbld
add
sarb
fnstenv
and
lret
inc
xor
cwtl
test
sub
fsubrs
in
cmp
enter
push
mull
mov
sahf
sbb
pop
add
cmc
xor
jmp
hlt
sbb
test
aas
dec
and
add
outsl
stc
and
shlb
adc
fidivl
fs
sbb
mov
cmc
dec
mov
mov
sbb
loope
and
mov
frstor
and
or
dec
mov
push
movsbl
dec
sahf
in
add
js
leave
pop
mov
lock
mov
insl
fwait
leave
out
xor
out
jl
pop
inc
lds
or
mov
repz
lods
fidivrl
test
push
dec
lds
cmc
adc
sbb
mov
xchg
nop
pop
and
mov
dec
xchg
scas
mov
lcall
stos
int
adc
or
add
in
imul
and
out
xchg
js
enter
or
leave
xchg
pop
mov
mov
cs
stos
xor
sbb
jl
out
sbb
push
mov
adc
mov
in
push
rol
lcall
sbb
adc
movsb
cmp
jb
cmp
out
pop
jl,pn
xchg
inc
arpl
cmp
inc
and
push
ja
cld
inc
xchg
dec
jne
leave
inc
divb
xchg
mov
jne
jb
mov
std
pop
sbb
pop
cld
jae
rorb
jnp
push
shlb
cmp
mov
add
adc
adc
sub
enter
mov
js
lods
loope
or
pushf
xor
test
push
or
or
pop
pop
fmul
and
imul
in
pushl
lret
insb
loopne
pushl
fsubrs
mov
xor
mov
jns
cwtl
loop
lret
jl
jmp
pop
mov
mov
jae
popf
mov
lds
andb
xor
sub
jbe
in
fdivs
enter
jbe
aas
adc
lods
mov
repz
sbb
jmp
or
xor
stc
jnp
testl
and
imul
lea
test
aad
and
cmp
mov
decl
adc
xchg
push
int
sar
sub
jbe
out
dec
shl
jl
push
scas
inc
add
repz
popa
lods
pop
movsb
mov
cli
pop
dec
jecxz
fidivl
pop
decl
xor
aam
mov
lods
lds
loopne
pop
and
cmc
daa
bound
mov
inc
ljmp
xchg
fnstenv
and
push
jae
dec
imul
inc
pop
xchg
mov
adc
addr16
inc
roll
ljmp
pop
stc
pop
mov
iret
sub
fldenv
pop
or
mov
out
inc
mov
popa
mov
lret
xchg
pop
out
fsubr
sbb
loopne
int3
sbb
rolb
call
lret
enter
sbb
or
adcb
push
shlb
pop
cmc
mov
repnz
test
stc
cs
repz
xor
sub
stc
inc
repz
mov
rcrb
or
in
jle
sub
xchg
xchg
sub
dec
in
fs
movsl
fs
inc
mov
pop
sbbl
movsl
inc
dec
mov
stos
jne
rorb
leave
pusha
and
add
sarb
pop
dec
enter
fimull
push
stos
pop
gs
sub
scas
xchg
xchg
ja
jb
hlt
pop
sarl
sbb
enter
cmpsb
jmp
leave
cmp
xchg
divl
dec
mov
inc
mov
imul
push
aad
adc
mov
orb
imul
add
xchg
mov
sbb
mov
sub
sbbl
pop
inc
ljmp
inc
jmp
xor
inc
xchg
xchg
push
faddl
lret
hlt
cmp
pop
sub
sbbb
dec
fwait
push
or
fwait
sbb
xchg
sbb
inc
lds
call
sub
xchg
repnz
in
pop
sbb
lcall
ss
leave
push
adc
scas
stc
and
stos
jmp
gs
xlat
dec
das
jbe
sub
inc
push
iret
and
xchg
call
inc
xchg
pop
arpl
mov
pusha
jg
mov
repnz
dec
pop
mov
je
inc
xor
push
leave
jge
mov
cli
sti
pusha
pop
lret
dec
out
push
sub
fnstenv
and
rorb
fstps
or
lds
adc
les
pop
cmp
and
dec
mov
ret
ret
jmp
mov
mov
pusha
cmpsl
cwtl
stos
cmp
scas
xchg
push
mov
out
mov
cmp
pop
xchg
les
and
test
push
in
insb
leave
mov
nop
pop
out
lcall
xchg
and
jb
shlb
movsl
cmp
and
cltd
or
stos
sbb
push
mov
jo
pop
repz
fs
push
sub
sbbb
out
mov
adc
jns
pop
dec
in
call
mov
mov
sub
cmpsb
pop
inc
jns
punpckhdq
pop
dec
mov
pop
cld
pop
mov
push
add
subl
loopne
stos
gs
cmc
sbb
aaa
sahf
xchg
dec
lahf
sbb
push
mov
ss
xchg
daa
ja
cmp
mov
cli
ja
mov
cltd
pusha
push
mov
lret
adc
pop
mov
pop
jecxz
dec
fimull
lock
rorb
mov
aad
daa
push
sbbb
jmp
inc
hlt
mov
shlb
push
clc
inc
mov
pop
hlt
scas
and
incb
pop
and
movsl
filds
stc
fsubp
and
fdivrs
adc
and
inc
inc
inc
mov
inc
xchg
push
mov
mov
shlb
push
or
push
dec
or
adc
xor
jnp
pop
clc
xor
addl
sbb
dec
imul
ss
aas
xchg
jns
push
xor
push
mov
dec
mov
xor
jge
xchg
inc
outsb
repnz
vcvtsi2ss
pop
popf
xor
or
jnp
or
dec
add
xchg
fbstp
call
adc
mov
out
xor
sub
pop
lods
cwtl
push
nop
mov
mov
xchg
sbb
sahf
jg
cmp
jl,pn
xchg
mov
adc
ljmp
adc
sbb
pushf
rol
push
adc
enter
mov
std
repz
out
sbb
std
and
ljmp
into
in
iret
std
jmp
xor
mov
or
nop
ja
mov
outsl
and
jno
xchg
dec
jecxz
and
xor
push
mov
fs
mov
repnz
xlat
and
mov
inc
into
inc
pop
fisubs
pop
insb
mov
jle
daa
mov
jge
mov
cmp
mov
rclb
movsb
jae
hlt
mov
push
shlb
jge
pushw
lock
fstpl
ret
bound
dec
loope
hlt
mov
incl
dec
rcrl
xchg
int
movsb
cmp
iret
ret
inc
sbb
push
xchg
cmp
lds
xchg
cmpsl
out
out
pop
leave
sbb
cli
cmp
push
cmp
dec
mov
lock
fidivs
push
repnz
data16
xchg
sub
mov
mov
cwtl
xlat
or
in
stos
mov
fmull
pusha
idivl
inc
pop
xor
push
push
cwtl
mov
or
lds
shrl
xchg
pusha
mov
jle
adc
pushf
sbb
and
in
nop
aas
sbb
sub
mov
cmp
enter
mov
mov
fmull
sti
dec
sub
sbb
gs
pop
and
inc
fisubrl
lret
loope
gs
mov
or
or
data16
push
sub
pop
mov
ret
loop
cmc
jno
and
pop
add
stc
mov
cmc
jmp
or
cmp
out
lods
rcr
repz
lds
cli
push
dec
in
sub
outsb
fsubrs
aaa
mov
push
jne
imul
push
aaa
into
test
into
test
push
lods
lock
push
xor
xor
fists
xor
movsb
mov
lods
mov
add
mov
test
mov
inc
fwait
cmp
adc
cwtl
int
mov
dec
jl
xchg
stos
sbbb
inc
xchg
mov
daa
aas
fcoms
fcomps
jl
jp
inc
out
mov
inc
cmp
enter
xor
add
sub
jmp
push
jecxz
or
cmp
out
jp
mov
cmp
cmp
aad
cmp
test
lods
mov
mov
iret
fcmovbe
adc
pushf
push
push
inc
push
mov
fnstcw
inc
bound
xlat
lods
cmp
xor
clc
mov
dec
loopne
les
mov
sbb
int3
push
pop
idivb
add
cmp
pop
mov
mov
dec
pop
aas
sbb
pop
and
xor
test
mov
out
cltd
call
sub
cmp
and
shr
xor
adc
mov
imul
lds
mov
xor
lret
cmp
outsb
jnp
int3
ret
mov
and
pop
dec
in
roll
das
inc
lret
mov
dec
sbb
push
fimuls
xchg
cmp
fdivrl
xchg
mov
loopne
xchg
xor
jg
xor
sub
cld
test
mov
lea
sahf
jne
mov
push
push
mov
daa
dec
mov
ret
sbb
cli
pop
lods
cmc
stc
mov
scas
jmp
call
loope
add
mov
pop
add
pop
out
add
cmp
push
mov
nop
adc
xor
test
pop
in
inc
lods
push
fwait
cmp
xchg
sbb
out
dec
mov
mov
clc
lods
lcall
pushf
enter
sub
lods
pop
mov
jno
dec
pop
imul
jle
ss
jae
fistpll
loope
xor
pop
dec
int
add
mov
stc
mov
sbb
or
push
mov
stos
leave
loopne
mov
mov
mov
or
or
in
add
jp
stos
jmp
and
sbb
ficoml
aad
jg
adc
orps
push
add
dec
imul
ss
mull
xchg
sub
mov
mov
jle
ret
pop
popf
cltd
in
test
aas
push
popf
mov
fwait
xor
push
jl
inc
cltd
inc
fmuls
out
sbb
jp
sbb
insb
das
push
pop
mov
sarb
ret
dec
xchg
arpl
rclb
add
inc
dec
in
mov
push
lret
rorb
lds
lods
inc
pop
inc
push
icebp
mov
into
gs
std
xchg
les
sub
pop
xchg
int
inc
xchg
sub
cmpsl
mov
sbb
push
pop
mov
stc
inc
push
in
aaa
test
push
sbb
sub
ds
inc
dec
loopne
test
xchg
cs
cmp
jne
shlb
rcll
fdivs
or
out
stc
adc
pop
add
ds
fcomi
arpl
lods
addb
sahf
cmp
inc
jge
shll
mov
out
rcll
or
or
pop
iret
add
je
pop
mov
repz
mov
xchg
push
inc
ja
int
leave
lea
iret
add
les
insl
pop
adc
add
fsubrs
pop
into
dec
or
jbe
adc
cmp
arpl
int3
sub
negb
add
pop
loope
addb
je
outsl
fwait
or
js
xchg
cmp
iret
push
clc
hlt
pop
scas
xor
sti
sub
je
fcoms
adc
pop
lret
ja
daa
lods
inc
addr16
pop
std
xchg
nop
cmp
cmc
push
mov
xor
int3
dec
adc
mov
loope
push
call
push
jo
mov
xchg
push
dec
adc
xchg
jnp
sbb
inc
push
push
clc
xchg
call
icebp
pop
nop
cmp
jge
lods
xor
mov
scas
sbb
jecxz
lea
repnz
dec
in
cmp
loop
lods
xor
sarl
loop
sbb
push
nop
adc
jno
les
cmp
cmp
xor
fnclex
dec
adc
adc
sarl
mov
sub
mov
xor
pop
call
orb
push
cli
shlb
jmp
fldt
xor
movsl
push
ljmp
mov
push
sti
shlb
pop
lods
adc
adc
jae
push
jmp
xor
sub
push
mov
out
fsubrl
xor
xor
loope
dec
adc
push
mov
flds
mov
test
data16
leave
xchg
stos
je
negb
mov
flds
mov
xchg
loopne
ss
arpl
sub
pop
cmp
jo
nop
mov
sbb
clc
div
pusha
aad
mov
xchg
lods
mov
data16
in
jg
loopne
mov
iret
imul
pop
fcomps
test
add
pusha
bound
and
mov
rclb
pusha
xor
mov
test
repz
pop
and
in
icebp
cmp
jl
stos
sub
enterw
jge
adc
dec
scas
sub
sarb
mov
inc
scas
sub
dec
or
adc
scas
sub
xchg
push
ds
adc
scas
sub
lea
jg
xor
push
sub
insl
leave
imul
mov
lahf
cmp
rorl
or
imul
sahf
cmp
mov
out
dec
imul
adc
xchg
inc
lret
mov
and
movsb
dec
aad
mov
and
addl
inc
loopne
mov
pop
mov
pop
inc
dec
or
call
mov
addl
pop
insb
push
sbb
cmpsl
push
into
mov
jno
shrb
mov
push
add
mov
aam
cmp
jae
shr
push
add
mov
scas
cmp
push
add
es
cmp
ljmp
jae
pop
jecxz
aaa
sub
mov
ds
cmpsb
das
cmpsl
data16
mov
cli
pop
add
jmp
std
or
push
in
adc
fnsave
lahf
cmp
push
add
lret
mov
pop
jl
je
pusha
fs
mov
fidivrs
cwtl
mov
movsl
dec
or
and
pop
pop
sti
or
loopne
dec
or
fnstsw
cwtl
cmp
push
add
lret
mov
jbe
rcrl
mov
xchg
sub
mov
cmp
push
mov
jge
mov
add
push
mov
mov
test
lcall
fcoml
cmpb
imul
mov
push
es
mov
stc
fcomp
jnp
out
fidivl
imul
cs
cmp
pushf
cmp
xchg
scas
sub
push
sahf
cmp
cmp
fucomi
imul
lcall
rol
sub
cmp
mov
jnp
cmp
insl
jmp
pop
jns
xor
lret
imull
movsb
call
enter
jmp
and
and
jg
jmp
jo
sbb
icebp
dec
inc
pop
and
ss
adc
fldl
add
pusha
inc
hlt
outsb
negb
xchg
sti
popa
icebp
dec
pop
jmp
mov
pop
add
sar
jle
data16
adc
inc
shll
popa
xlat
jge
cmp
sub
cmp
push
ret
push
jae
nop
inc
outsb
rep
ret
jp
sarb
mov
imul
pop
jne
pop
or
jae
pop
jae
enter
int
xchg
cmp
push
cli
bound
mov
bound
lods
fnsave
ret
repz
push
mov
movsbl
fs
mov
js
aam
loop
sbb
push
out
int
pop
add
inc
or
aaa
xchg
int
fiaddl
jnp
mov
dec
popf
test
lret
enter
scas
sbb
negl
enter
ja
clc
or
push
leave
mov
mov
aaa
fwait
adc
popf
sub
pop
add
mov
xchg
nop
sbb
sub
mov
mov
cmc
or
pop
or
push
popl
mov
xchg
jo
pop
inc
les
mov
mov
imul
mov
sbb
or
ffreep
mov
into
test
mov
mov
int
loopne
and
mov
cmc
cmpsl
loop
and
shlb
mov
mov
lcall
out
setl
pop
xchg
scas
sub
inc
lcall
cs
shrl
mov
mov
cmc
pop
xchg
sbb
dec
scas
sub
mov
cmp
or
enter
xchg
testl
mov
push
pop
xor
hlt
sub
lods
lock
add
pop
add
push
into
cmpsl
xor
push
les
mov
dec
or
iret
push
mov
inc
test
subl
push
shr
sbb
xchg
cmp
fs
sbb
inc
jp
arpl
jae
jle
lahf
das
rcrl
mov
aam
mov
test
fs
sar
add
or
add
jmp
mull
jecxz
add
lcall
ret
inc
adc
repnz
adc
sub
cmpsb
cmp
cmc
mov
enter
push
dec
adc
call
push
cmp
gs
sub
in
setne
xor
aam
xor
pop
push
and
jnp
je
pop
addb
outsb
pop
xlat
mov
inc
cmp
jae
out
xchg
xchg
adc
enter
fwait
push
ret
shl
or
pop
loop
stc
push
outsl
cld
fidivrl
ja
sbb
cmovl
sbb
inc
clc
pop
negl
jnp
sbb
lahf
gs
in
xchg
pusha
inc
fcoms
ret
icebp
adc
test
mov
lods
ss
xor
jge
out
pushf
inc
jns
mov
and
stos
xor
xor
xchg
and
fiadds
xchg
mov
add
nop
aam
mov
mov
xchg
adc
pop
hlt
push
xor
mov
sub
lds
lret
popf
inc
sbb
outsl
mov
ljmp
mov
test
aam
xchg
test
les
addl
push
test
ljmp
stc
test
lea
shlb
stos
sbb
mov
enter
das
pop
add
enter
ficomps
push
cld
nop
or
lret
test
ds
fwait
rcrl
les
xor
xchg
xorb
in
jle
sbb
push
pop
or
scas
sub
mov
xor
jbe
mov
jo
and
sahf
bswap
xchg
testl
rorl
aaa
movsb
js
cmp
loope
fistpll
sti
lret
xchg
iret
xchg
jbe
xchg
outsb
fdivl
mov
jbe
insl
int3
xchg
aaa
sbb
push
add
pop
js
lods
pop
xorl
dec
mov
js
pop
mov
cmpsl
jns
repnz
imul
fucomip
push
jmp
add
add
push
rolb
arpl
mov
nop
xor
mov
leave
jb
sahf
jg
je
xchg
jmp
loope
adc
sub
pop
add
leave
jb
xchg
in
popf
inc
push
ret
sbb
stos
cmp
sub
add
iret
nop
xchg
fbstp
inc
pop
jns
sbb
jo
lahf
mov
mov
mov
jmp
popf
inc
repnz
movsb
xor
out
adc
cmp
pop
push
ja
pop
mov
lcall
jp
lock
jg
in
lcall
push
push
push
hlt
and
and
jge
xor
pop
lock
addr16
stc
pop
ret
push
mov
or
push
sub
jle
mov
out
je
add
push
std
adcb
adc
fldl
mov
mov
fnsave
xchg
inc
or
mov
mov
sub
dec
mov
push
push
xchg
rcr
jge
sarl
es
out
insb
xchg
cmp
fnstsw
mov
mov
mov
and
bound
cmp
add
test
clc
pop
test
mov
xor
das
xchg
inc
stc
aas
push
cmc
call
imul
and
pop
mov
enter
push
mull
mov
sub
dec
adc
push
xor
cmpsb
test
lds
adc
lcall
jb
mov
push
sbb
fiadds
adc
orb
jp
adc
push
std
cmp
out
pop
sub
cli
and
fsts
dec
pop
mov
jg
and
arpl
ds
movsb
sub
test
phaddw
push
pop
cld
xchg
push
cmc
pop
movsl
rcrb
mov
inc
data16
aaa
mov
mov
lcall
push
stc
insl
ror
ljmp
pop
shrl
dec
adc
dec
repz
cmp
iret
out
les
add
push
cmp
xchg
adc
mov
xlat
dec
adcb
lret
mov
sbbb
in
out
sub
cld
xchg
push
out
pop
out
and
scas
ss
push
shrb
popf
movsb
add
lods
or
lahf
ds
adc
jle
xchg
fwait
add
ficoml
mov
lret
mov
pop
clc
nop
and
lcall
mov
repz
mov
inc
push
rcl
and
rolb
xchg
mov
dec
ds
cmc
pop
push
and
into
add
pop
mov
dec
lds
push
push
sbb
pop
je
roll
inc
ja
pop
sahf
cltd
jno,pt
add
sbb
inc
out
push
clc
icebp
iret
xchg
call
aas
xchg
ljmp
in
daa
faddp
pop
adc
or
fldl
sub
hlt
cmp
js
out
mov
xchg
mov
pusha
lods
pushf
inc
loope
addl
loop
jae
imul
data16
ret
mov
jno
mov
ljmp
dec
dec
mov
iret
popl
fcompl
mov
int
sahf
pusha
xchg
mov
pop
mov
mov
js
fisttpl
movsl
mov
push
mov
jbe
xchg
inc
insl
out
out
cltd
mov
cmpsl
negb
mov
jecxz
cmp
fidivrs
cmc
dec
push
out
insb
mov
and
dec
sub
cmc
repz
lock
add
test
jg
pand
loope
adc
std
pop
mov
shlb
fists
outsb
repnz
fisubrs
and
test
lret
pop
mov
add
push
mov
addr16
sti
pop
pushl
cltd
sub
xor
xchg
inc
daa
je
sbb
rorb
inc
rorl
loope
dec
xorl
rclb
aam
iret
dec
int3
mov
mov
std
jecxz
ret
pop
mov
mov
jg
roll
xchg
sahf
xor
push
xchg
jecxz
in
mov
insb
or
mov
cmp
iret
out
mov
mov
push
cld
dec
mov
lods
xor
adc
mov
pop
push
jle
clc
sub
lock
cmp
sub
mov
aad
gs
daa
mov
xchg
dec
push
add
mov
xchg
adc
call
ret
cmc
xor
jne
push
addr16
push
jne
out
pop
les
add
pop
call
mov
push
mov
xchg
cmp
int
add
or
les
aad
subb
mov
xchg
in
addr16
out
mov
jge
push
scas
movsb
xor
mov
or
or
into
popf
pop
aaa
popf
xor
and
lcall
dec
jecxz
and
push
and
or
orl
insl
lock
and
push
inc
sarl
test
mov
cmpsl
das
push
mov
gs
cmp
mov
jb
lea
push
xchg
sahf
sub
leave
fcomi
pop
mov
xchg
insl
pop
flds
sbb
xchg
inc
xchg
mov
cmc
push
rcll
or
out
push
push
out
test
rolb
cmp
and
cld
stc
push
sbbb
mov
adc
dec
add
mov
mov
pop
cvtpi2ps
sbb
in
push
xor
movsl
daa
pushf
and
xor
arpl
in
or
ds
stc
inc
sub
add
adc
in
je
cltd
cmp
fnstcw
xchg
fnstcw
sub
push
add
pop
cld
inc
pop
push
ret
sub
xor
js
xor
mov
cmpsb
movsl
xor
dec
icebp
gs
add
lods
and
or
inc
jno
lret
mov
mov
cli
insb
fildl
jle
sti
pusha
out
jo
aad
std
in
dec
call
repnz
pop
inc
xor
xor
fs
jg
pop
sbb
xchg
inc
dec
dec
pop
lds
xchg
test
xchg
add
pop
jbe
out
mov
mov
xor
jne
xchg
movsl
jge
push
scas
mov
push
sbb
pop
add
negb
outsb
test
sbb
mov
stos
lret
xchg
fimuls
pusha
in
xor
cmpsl
push
and
inc
or
jl
jno
push
stos
xor
push
aas
mov
mov
adc
push
add
orl
inc
adc
es
jle
clc
push
lods
sub
xchg
loop
cmp
and
xor
push
or
mov
ds
fnsave
and
cwtl
das
push
sbb
fdivl
movsb
daa
test
aad
int
mov
repnz
or
daa
cmpsl
popa
mov
pop
jmp
sti
pop
cmp
enter
jl
jg
fnstcw
rolb
popf
cmp
xchg
xchg
inc
gs
scas
push
jp
xlat
mov
shll
dec
adcl
loop
or
ss
das
in
jne
cmp
aad
dec
mov
and
lcall
jle
mov
mov
mov
test
push
lds
sarb
rolb
repnz
sbb
adc
fmull
xchg
dec
or
mov
mov
adcl
cmpsb
movsl
cmp
jecxz
pop
adc
ret
pop
mov
lods
fwait
inc
je
sub
xor
sbb
mov
aas
mov
inc
mov
xchg
aaa
fwait
jae
and
lret
inc
or
cmp
or
test
adc
nop
sub
lahf
in
and
dec
cld
mov
jnp
or
rclb
int
lret
dec
jg
sbb
fwait
cmp
inc
test
mov
mov
push
push
pop
jo
adc
jg
imul
sub
lock
mov
mov
sub
insb
dec
adc
pop
fidivrs
ds
mov
scas
test
adcl
out
outsl
jne
cs
arpl
mov
lcall
mov
mov
or
xor
xchg
push
sbb
push
shrb
call
test
mov
sbb
imul
pop
lahf
push
fldl
add
lret
addr16
xchg
push
dec
push
sub
negb
mov
imul
mov
xlat
jns
test
insl
lea
jae
inc
fucomi
insb
jmp
js
inc
hlt
mov
cs
or
xchg
jmp
jo
xchg
adcb
int
or
cmp
pop
hlt
pop
pop
mov
xchg
pop
xchg
cmp
lea
test
xchg
cmp
xor
and
push
mov
mov
pop
cmpsb
bound
mov
mov
push
add
andb
imulb
test
aam
hlt
fs
or
mov
and
mov
stos
adc
js
mov
dec
xchg
adc
fidivs
aad
pushf
test
mov
or
aad
pop
lds
pop
pushl
cmpsl
out
jne
xorb
xchg
push
jne
xchg
ds
test
dec
adc
repz
mov
addl
mov
push
inc
push
cmc
icebp
mov
insb
push
lods
xor
mov
mov
mov
xchg
cmp
sub
gs
cmp
pop
lock
mov
adc
jae
fisttps
mov
dec
add
sub
movsl
mov
and
mov
xor
popf
or
gs
xchg
in
sub
lret
inc
add
lods
inc
xor
jbe
in
jo
xor
iret
push
mov
xlat
push
and
mov
lods
das
push
movsl
addr16
xor
and
mov
imul
dec
jle
push
xor
pop
add
lods
ja
mov
adcb
adc
or
loop
push
push
add
add
cmc
inc
push
add
pop
int
mov
mov
popf
or
mov
addr16
lcall
cltd
mov
out
addr16
test
jecxz
mull
jnp
popa
push
pop
cli
jbe
gs
hlt
push
test
in
mov
jl
xchg
push
lds
lcall
sub
fsts
xchg
and
mov
divl
fidivrl
out
loopne
jp
mov
in
mov
cmp
fiaddl
daa
xchg
dec
adc
xor
inc
jge
pop
sbb
lcall
and
pop
mov
push
sarl
mov
dec
fisttps
scas
dec
adc
add
cmp
in
mov
cmp
insb
fbstp
adc
dec
setne
add
mov
les
es
lret
push
pushf
test
imul
fnstenv
popa
xor
inc
xor
ja
sub
lods
repnz
sbb
popf
in
mov
mov
jmp
notl
ds
xor
cwtl
sarl
xchg
ja
add
arpl
sarl
lods
xor
mov
jae
faddl
int3
out
popf
inc
adc
sub
imull
sub
dec
mov
xor
orb
roll
idiv
xchg
sti
arpl
fildll
cmpsb
jp
jmp
cli
outsb
add
inc
out
sbb
lcall
jbe
repz
adc
or
push
aam
add
movsl
xor
xchg
roll
mov
mov
pop
ds
jl
dec
daa
mov
clc
xchg
lea
dec
or
sub
int3
imul
xchg
push
fstpt
into
jmp
popa
es
add
imul
mov
lea
inc
inc
jb
pop
xchg
mov
jle
outsl
dec
push
pop
psubq
mov
shrb
mov
imul
addr16
adc
ds
out
jo
sub
cmpsb
data16
dec
or
cmp
push
lahf
ret
mov
xchg
pop
in
insb
in
inc
xchg
test
dec
or
push
lret
lods
xchg
inc
inc
jae
inc
pushf
sahf
inc
push
sti
shr
xchg
call
dec
pop
outsl
jg
sub
mov
mov
les
mov
jle
and
sub
call
mov
stos
test
sahf
dec
lods
clc
fs
lds
adc
inc
or
inc
fldt
mov
lea
xchg
xchg
das
dec
pop
cmpsb
iret
pop
cli
add
sbbl
xor
sub
pop
adc
jp
in
xor
flds
mov
insl
mov
mov
sbb
jno
out
or
jns
dec
repnz
ret
fwait
leave
adc
roll
lock
ds
pusha
jmp
sub
nop
pushf
add
xchg
pop
add
aam
lcall
mov
dec
fidivrl
adc
lea
push
cld
or
mov
pop
cmpl
movb
dec
pop
add
rol
mov
stos
sub
push
add
in
repz
pop
pop
mul
into
lcall
dec
mov
and
adc
sub
popa
int3
movsb
cwtl
cmp
enter
out
cmp
call
cld
pop
xchg
xor
push
scas
and
popf
jb
aam
mov
rcll
xchg
push
pop
sub
xor
dec
adc
stos
sub
popf
pop
orb
iret
xchg
pushf
lods
data16
lods
shlb
cmp
push
push
sub
test
push
sbb
dec
inc
or
aad
lds
cli
adc
or
cmc
add
stc
cmp
sub
outsl
push
mov
cmp
iret
daa
mov
adc
rorb
dec
xchg
xchg
cwtl
pop
stc
es
mov
pop
cmp
popa
jnp
fsubrs
sbb
orb
xchg
xchg
lahf
aas
jmp
call
xchg
mov
cmc
sbb
xlat
sub
and
mov
int
xchg
push
ds
and
mov
sub
out
cmp
or
mov
orb
fldl
sub
sub
outsl
std
pop
sbb
in
xchg
inc
repz
cmpsl
xchg
inc
cmpsl
iret
adcb
cmc
adc
inc
jnp
pop
cli
in
gs
in
aad
es
mov
xor
and
mov
jns
cmp
cmp
mov
ret
fmul
xchg
loop
inc
push
pop
icebp
add
stc
mov
mov
hlt
clc
arpl
pop
add
addr16
sti
add
test
es
xor
in
ret
xchg
rclb
arpl
adcl
stc
push
dec
jae
inc
add
pop
bswap
movhps
pushf
dec
xor
adc
in
inc
dec
in
xchg
lcall
sbb
mov
cld
adcl
push
add
mov
adc
or
push
mov
pop
pop
movsb
shlb
mov
adcb
xor
int3
nop
test
pop
out
jae
ja
ljmp
mov
ds
pop
js
xor
lods
sub
iret
enter
fdivrl
add
add
cmpsl
xchg
inc
fdivrl
cltd
fidivrs
xchg
mov
or
sti
pop
icebp
push
hlt
popa
insb
lock
pop
jae
repz
test
mov
rcrb
mov
or
js
inc
push
lods
push
fdivrp
shl
sub
add
shlb
xor
mov
mov
fdiv
int
addr16
in
in
or
xchg
repz
sub
ljmp
push
or
ret
sbbl
repnz
arpl
sbbl
dec
xchg
cmp
inc
scas
xor
dec
orl
push
stc
sub
ret
mov
xlat
lahf
inc
mov
inc
or
mov
std
xchg
enter
ret
mov
fs
nop
inc
sbb
jp
mov
adcb
lret
dec
sub
lret
scas
cli
pop
and
sub
pop
inc
adc
xor
xchg
out
sbb
jecxz
mov
js
pop
mov
jmp
call
mulb
mov
mov
fbstp
xor
gs
push
jmp
aaa
les
lahf
lcall
das
outsl
cmp
sub
fnsave
mov
mov
and
xor
mov
lods
mov
outsb
roll
ret
fiadds
cltd
cmp
fstsw
xor
lods
sub
jle
or
sarb
mov
jl
aas
mov
jo
inc
adc
imul
js
fnstcw
fs
adc
adcb
fwait
aaa
adc
or
dec
movsb
sbb
mov
sub
cmp
xor
int3
sub
adcb
mov
pop
or
mov
es
stos
mov
jns
in
and
pop
stc
leave
inc
adc
push
dec
push
or
lods
cltd
cmp
movsb
xor
ds
cmpsb
pop
ret
mov
sbb
int
mov
fisubl
mov
lcall
in
ja
out
clc
pop
lds
xchg
inc
cmp
fidivrl
sub
je
jbe
outsl
js
fistpll
loopw
xchg
push
dec
jp
fcoml
mov
test
or
lahf
inc
sub
push
cmc
aas
jmp
data16
fmull
into
lea
xchg
movsl
test
mov
jae
mov
jge
std
stos
sub
mov
movsb
xchg
in
leave
pop
lret
int3
dec
test
sbb
sahf
lahf
mov
pop
aaa
sahf
push
leave
shrb
pop
testl
in
push
imul
mov
pop
jp
ret
rolb
lds
xchg
jl
in
push
arpl
std
mov
insb
ljmp
adcl
xor
movsl
arpl
fdivrs
std
hlt
pop
mov
lods
push
stc
out
icebp
push
repnz
scas
in
push
popf
rolb
cltd
int
sahf
scas
leave
jmp
ss
sub
aam
pop
inc
pop
dec
jmp
sarl
cli
fildl
sbb
mov
stc
test
mov
inc
or
and
mov
jecxz
movaps
filds
femms
enter
or
jae
or
xor
loopne
sub
jno
inc
or
inc
pop
adcl
jg
int3
lods
xchg
adc
pushf
cmp
aas
sahf
in
jmp
and
jl
xchg
cmp
pop
movsb
adc
mov
mov
test
xchg
mov
std
dec
insl
push
add
xor
or
imul
test
lods
sub
jns
test
dec
adc
aaa
in
jno
pop
jns
and
pop
jb
inc
adcl
test
leave
mulb
repz
jne
push
add
cmpsb
fwait
cmp
stos
mov
pop
jge
movsl
cmp
sahf
negb
into
sarl
xor
jns
cmpsb
lods
xor
insb
cmc
mull
pop
adc
sub
inc
fidivrl
mov
mov
in
add
push
jg
sub
cmp
push
out
cmc
push
dec
repz
pop
sbb
dec
mov
clc
pop
out
in
test
adc
stos
inc
inc
jne
test
mov
call
sub
and
mov
sysenter
aad
lret
in
adcl
insb
out
jp
mov
lret
xchg
int3
and
pop
and
int3
xchg
pop
or
shlb
mov
jl
cwtl
or
and
mov
cmp
rcrl
jne
out
xchg
adc
ja
lea
inc
or
pusha
fs
jl
je
mov
mov
scas
dec
adc
int3
fadds
adc
mov
and
loope
lcall
notb
daa
test
subb
xchg
sub
scas
loop
out
xchg
cmc
stc
gs
in
xor
ds
repz
imul
imul
inc
icebp
gs
out
test
insl
in
sbbl
pop
cmc
clc
sbb
dec
sbb
imul
sti
mov
push
mov
scas
aas
mov
jg
mov
imul
dec
adc
in
push
or
pop
insl
jmp
jnp
mov
repz
cwtl
lds
shlb
out
mov
sbb
fdivs
cs
stos
push
mov
pop
mov
jae
test
sarb
addr16
sbb
fwait
adc
ljmp
add
clc
fcmovnbe
push
lods
sub
jle
xor
cmp
fs
test
nop
popa
loopne
leave
xchg
jl
loopne
int
test
xlat
cwtl
cmp
mov
mov
xor
dec
pop
test
loopne
inc
adc
int3
mov
inc
push
cltd
cmp
sahf
adcl
gs
pusha
pop
arpl
jnp
xchg
enter
mov
mov
mov
out
xor
jne
xchg
into
xchg
stos
and
cmc
ss
in
push
jae
fstl
xchg
push
xor
loope
cmp
pusha
shrb
pop
repz
xor
lea
jp
roll
xchg
cmp
inc
aaa
mov
popf
mov
rorb
ljmp
xchg
dec
add
lahf
enter
into
nop
cmp
pushf
xor
clc
xor
dec
imul
dec
xchg
rolb
xchg
xchg
lock
int
sub
dec
push
movsl
jns
pop
xor
or
and
dec
test
mov
mov
scas
xor
cmpsb
mov
mov
scas
sub
gs
inc
aas
movsl
call
cli
filds
inc
xor
scas
add
mov
nop
cmp
lcall
es
push
in
xor
mov
sub
out
and
xor
lret
xor
and
fbld
mov
shl
adc
ss
movsl
adc
and
xchg
cmp
divb
iret
and
lcall
loop
or
js
xor
call
mov
sbb
mov
loope
outsb
hlt
pop
repz
les
aaa
fwait
pop
cmp
loop
cmpsb
sub
repnz
lret
fwait
mov
fiadds
shrl
or
mov
pop
fwait
scas
js
jg
push
aam
insl
lea
cmpb
dec
aad
je
jo
fisubs
ret
repz
mov
adc
sbb
aaa
into
addr16
pop
push
in
push
mov
je
mov
les
xchg
xchg
pop
mov
dec
mov
mov
push
pushfw
add
in
test
push
pop
out
mov
or
inc
test
sub
xchg
cld
xchg
sub
mov
dec
mov
addl
shlb
pop
test
cmc
out
test
lods
mov
mov
xor
loopne
test
dec
fistps
ds
outsl
cli
sbb
sub
cmp
jge
mov
out
shlb
rclb
jbe
and
xchg
sub
cld
xchg
adc
sbb
sbb
ds
test
push
in
pop
xchg
or
ret
sub
in
rcll
dec
fbld
mov
add
into
gs
fildl
test
mov
mov
mov
sub
dec
aam
jne
outsb
inc
ficomps
shlb
jp
mov
adc
std
mov
out
dec
mov
jne
mov
ret
xchg
sub
pop
std
xchg
nop
push
mov
dec
mov
mov
imul
shll
out
test
push
pop
out
xchg
or
or
xchg
cli
xchg
sub
dec
loopne
dec
mov
jg
push
rcrb
sbb
and
inc
or
ja
ret
cltd
sub
lret
ja
jmp
fistps
xchg
fdivrs
sbb
sub
cmp
jl
mov
out
iret
rclb
jbe
and
xchg
sub
cld
xchg
seta
mov
ljmp
mov
out
test
push
in
push
xchg
or
ret
or
sub
adc
xchg
sub
into
mov
add
into
gs
fiaddl
cmpsl
sub
or
mov
sub
dec
rcr
jne
insl
inc
ficomps
mov
sbb
inc
lret
cmp
cld
mov
out
dec
mov
push
jmp
or
jbe
ret
hlt
pop
std
xchg
adc
sbb
lcall
test
push
pop
out
test
or
or
xchg
stc
xchg
sub
mov
loopne
dec
mov
jle
push
rcll
sbb
and
movsb
cmp
inc
or
jbe
ret
cwtl
sub
leave
push
loopne
sub
fistps
movsl
xchg
xlat
cmp
std
insl
clc
sbb
sub
cmp
jnp
mov
out
into
xor
jbe
and
xchg
sub
xchg
push
xchg
mov
enter
pusha
jmp
cmp
mov
out
test
push
in
add
es
pop
loop
rcll
xchg
sub
mov
incl
iret
push
fadds
cmpsb
sub
mov
mov
sub
dec
rcr
jne
insb
dec
fistps
mov
sbb
inc
leave
cmp
cli
arpl
out
dec
mov
pop
call
or
ja
rclb
mov
mov
inc
scas
sbb
loopne
shlb
add
shlb
mov
pop
lock
push
xlat
pop
sub
clc
xchg
sub
mov
loopne
dec
mov
jge
push
push
xchg
out
xchg
test
or
pop
cs
sub
enter
sub
xchg
aad
addr16
insb
negb
daa
mov
sarl
mov
out
int3
xor
pop
in
jbe
pop
mov
jbe
inc
xchg
sub
std
xchg
or
sbb
sbb
out
test
out
add
or
mov
loopne
rcll
xchg
sub
int3
mov
incb
addr16
test
or
test
or
idivl
scas
sbb
ret
fidivs
imul
and
xchg
push
mov
sbb
inc
cmp
clc
bound
dec
mov
pop
out
jne
popf
or
js
mov
call
inc
scas
sbb
addr16
add
xor
pop
icebp
orl
movsb
cmp
ret
xchg
sub
loopne
mov
jl
push
imul
lock
cmpsl
movsb
cmp
inc
push
movsl
je
ret
xchg
sub
dec
loopne
jg
dec
loope
mov
push
mov
lea
shll
movsb
cmp
cltd
pop
out
lret
pop
gs
or
mov
xchg
or
mov
les
shlb
cmpb
mov
out
test
pop
out
add
or
vmread
popa
lret
mov
std
andb
push
shrl
aam
sbb
jb
xchg
or
push
lods
pop
sub
dec
int
jne
imul
push
mov
sbb
aas
lds
shl
pusha
movsl
cmp
pop
pop
out
dec
mov
pop
in
jbe
fwait
push
loop
cmp
xchg
mov
mov
inc
stos
push
mov
push
cs
xchg
dec
pop
icebp
orb
movsl
cmp
sub
mov
xchg
sub
filds
dec
jns
imul
int3
push
xchg
test
lock
cmpsl
movsl
cmp
inc
push
movsl
jno
ret
pop
sub
sub
les
js
in
loope
mov
push
mov
mov
shlb
movsb
cmp
cltd
pop
lock
pop
jmp
push
sbb
ds
sub
xlat
xchg
or
sbb
pop
in
push
scas
cmp
xchg
pop
out
add
or
pcmpeqw
popa
enter
andb
sbb
push
push
outsl
out
xchg
ret
repz
pop
lods
adc
ret
inc
int
jbe
dec
loope
and
xchg
push
mov
sbb
movsb
or
shl
pop
movsl
cmp
pop
pop
lock
mov
pop
loop
ja
fwait
add
jns
mov
add
inc
test
mov
imul
pop
icebp
jge
cmp
sub
sub
filds
jbe
push
xor
mov
test
lock
cmpsb
cmp
outsb
cli
les
nop
sub
rorl
jg
dec
loope
mov
push
mov
xchg
shll
movsb
cmp
pop
icebp
leave
sub
js
sbb
loopne
mov
xchg
sub
push
xchg
mov
ret
daa
sbb
pop
in
imul
aaa
lock
pop
out
std
mov
movsl
mov
fsubrl
or
cs
loope
lds
pushl
rolb
xchg
mov
ret
adc
ja
arpl
xchg
push
call
out
sbb
pop
cmp
cmp
hlt
pop
cmpsb
cmp
inc
scas
les
addr16
cltd
add
jp
mov
add
aas
cmpsb
pop
mov
pusha
shrl
clc
cmp
mov
dec
pop
bnd
adc
into
pop
lds
lods
dec
jecxz
inc
mov
je
push
xor
mov
sub
mov
movsl
cmpsb
cmp
insl
clc
les
sub
jns
loope
loop
lahf
add
gs
push
mov
xchg
shll
cmp
xchg
pop
icebp
sub
js
sbb
xchg
sub
push
mov
shll
mov
loop
imul
lock
pop
lock
mov
movsl
mov
fisubrl
or
sub
pop
lds
scas
sbb
push
rolb
mov
mov
ret
adc
lds
loopne
sti
arpl
sbb
xchg
dec
mov
add
outsl
sbb
and
sarl
repnz
cmpsl
lea
pop
icebp
inc
scas
lds
js
xchg
add
jnp
mov
add
cmp
pop
shrl
clc
ds
mov
mov
dec
pop
repz
adc
into
push
lds
stos
dec
jecxz
inc
mov
je
push
cs
aam
enter
sub
cmpsb
cmp
insl
test
sub
loop
jnp
dec
jecxz
popf
add
gs
push
mov
xchg
shll
cmpsb
cmp
lds
js
sbb
xchg
sub
add
es
mov
loopne
imul
xor
xchg
pop
icebp
cld
xchg
movsl
mov
jns
dec
fsubrs
or
mov
les
ljmp
into
xchg
popf
and
out
je
pop
cmpsb
adc
movb
ja
bound
xchg
sbb
xchg
dec
mov
add
insl
sbb
and
mov
test
mov
pop
icebp
inc
lods
pop
fbld
setne
in
xor
add
cmp
shrl
idivl
sub
pop
hlt
jp
adc
int
lds
test
jecxz
inc
mov
jae
push
sub
aad
dec
mov
jg
repz
mov
adc
mov
mov
loopne
in
fwait
add
fs
push
mov
xchg
shll
cmpsl
or
lds
js
push
and
mov
xchg
sub
add
mov
mov
imul
xor
xchg
pop
repnz
test
movsl
mov
jp
dec
sub
pop
jo
das
mov
ret
mov
cmc
jp
ljmp
int3
xchg
fwait
pop
movsl
cmp
mov
ret
pop
movsb
push
xor
aas
mull
in
sbb
xchg
dec
mov
add
push
mov
add
cmp
in
pop
test
repnz
stos
pop
frstor
adc
mov
cs
add
cmp
aam
mov
aas
es
repnz
inc
pop
hlt
js
adc
lret
push
das
movb
in
aas
mov
jno
imul
xchg
aad
lds
and
repz
lahf
cmpsl
sarl
adc
and
das
mov
fimuls
setns
cwtl
lret
add
pop
mov
test
aam
xlat
cmpsl
or
lds
jns
adc
jecxz
mov
xchg
roll
cwtl
add
pop
mov
push
jbe
aam
das
icebp
mov
pop
repnz
orb
mov
jp
dec
aam
les
es
loop
shll
stos
adc
insb
inc
lret
xchg
std
repz
cmp
jmp
les
or
cmp
pop
dec
in
pop
add
loop
pop
mov
add
aam
push
test
repz
jp
xchg
cld
in
cs
das
in
add
cmp
aad
mov
aas
and
repz
inc
pop
hlt
jbe
adc
leave
push
xor
sub
xor
mov
outsl
imull
xchg
aad
ret
dec
mov
jl
repz
sahf
test
shlb
adc
and
in
jbe
dec
in
cwtl
add
pusha
ljmp
mov
ds
aad
ds
pop
repz
pop
pop
loope
adc
jl
jp
xor
das
iretw
add
mov
fcmovnbe
imul
repnz
pop
repnz
lds
cwtl
das
sahf
and
mov
icebp
ja
add
lret
cld
repz
mov
lds
xor
cmp
jecxz
cmc
pop
dec
in
push
add
loopne
and
xor
test
hlt
cmp
pop
jnp
nop
cli
in
sub
cltd
xor
dec
add
aaa
lahf
and
mov
aas
and
hlt
je
adc
enter
sub
xor
movsb
dec
in
cmp
dec
outsb
imulb
nop
aad
ret
and
repz
adc
and
in
jne
dec
in
xchg
add
pop
jmp
mov
mov
ds
aam
ds
mov
daa
lds
jp
adc
jp
xor
cwtl
incl
and
or
aad
sub
mov
pop
repz
cmpsl
mov
jnp
dec
shrl
lds
imul
push
mov
push
cmpsl
adc
insl
inc
enter
fs
mov
mov
test
mov
shl
repz
dec
out
adc
cltd
inc
lods
insl
add
data16
xor
stos
inc
test
pop
hlt
cmp
jnp
mov
out
sub
add
jge
mov
mov
mov
inc
xlat
and
pop
cmc
jae
adc
dec
xor
sub
xor
mov
mov
add
insl
roll
jns
hlt
mov
test
int
adc
and
in
jae
dec
in
xchg
add
pop
out
mov
orb
push
test
add
es
pop
pop
fidivrs
adc
jnp
xor
cltd
incb
mov
or
mov
les
cmc
jge
cmpsl
scas
push
jl
dec
iret
lds
push
xor
mov
add
mov
clc
arpl
mov
mov
stos
out
lds
xor
cmp
push
out
adc
cltd
inc
lods
outsb
add
xchg
decl
call
or
cmp
jnp
clc
out
sub
add
jl
mov
mov
xchg
inc
xlat
and
pop
cmc
jb
adc
dec
xor
jg
lcall
cmp
add
inc
mov
js
hlt
mov
lcall
gs
pop
pop
xchg
mov
or
add
and
mov
ds
shrb
repz
fnstsw
vmwrite
jnp
xor
cltd
std
xorl
dec
aam
or
mov
ret
pop
hlt
hlt
jl
cmpsl
lods
adc
cs
lcall
mov
imul
push
xlat
outsb
inc
lds
mov
mov
stos
in
pop
popf
push
xor
aaa
mov
push
out
adc
lcall
and
das
mov
out
stos
inc
orb
cmc
cmp
jl
mov
out
sub
add
jp
mov
mov
xchg
inc
xlat
push
test
mov
aas
pop
cmc
jo
adc
les
enter
xor
mov
mov
add
mov
insl
mov
fcomip
mov
cltd
test
test
push
test
mov
in
jno
dec
in
xchg
add
pop
in
mov
scas
aaa
aas
push
mov
mov
fdivrl
push
ja
jnp
das
cltd
xor
add
mov
and
pop
outsl
aas
mov
rcrl
jnp
test
adc
int
lcallw
in
mov
insb
add
les
mov
mov
stos
jecxz
pop
pushf
add
leave
xor
push
push
out
adc
inc
test
add
xchg
sti
mov
sub
dec
stos
inc
addb
idivb
mov
jge
mov
out
lods
fwait
xor
inc
add
js
mov
mov
test
inc
xlat
sbb
testb
cli
adc
sub
xor
jge
lcall
ss
add
mov
mov
cwtl
stos
inc
lret
test
sbb
ds
jo
dec
in
xchg
add
ret
daa
insb
add
and
lods
ss
xlat
addr16
test
add
pop
push
fstpt
jne
jnp
cs
cmpl
insl
push
insl
aas
sahf
daa
hlt
mov
pop
hlt
lock
test
inc
int3
xor
std
fs
mov
dec
jmp
or
outsb
cmp
mov
cmc
pop
cmc
mov
mov
stos
loope
enter
xor
xor
out
syscall
pushf
inc
cmpsb
outsb
add
xchg
stc
mov
sub
inc
jle
pusha
divl
lahf
enter
jle
mov
out
and
pushf
xor
inc
add
jbe
mov
mov
test
inc
xlat
sbb
pop
cmc
insl
stc
adc
sub
xor
jl
lcall
xor
outsb
add
mov
fdiv
mov
xchg
stos
inc
leave
das
adc
sbb
xor
mov
out
outsl
aam
in
xchg
add
ret
add
and
lods
xor
test
incl
pop
push
fnstcw
je
jl
sub
xor
add
mov
and
add
inc
aaa
popf
xchg
pop
xchg
mov
outsl
dec
inc
fwait
mov
enter
push
and
cmp
dec
jl
sub
lds
jl
pop
pop
mov
mov
jne
jecxz
dec
mov
mov
sahf
mov
repnz
cs
or
mov
leave
ss
pop
pop
jbe
xor
inc
jmp
cld
add
or
xor
mov
push
negb
jecxz
xor
repnz
inc
adc
iret
xchg
push
jnp
out
xor
dec
lret
mov
js
jecxz
in
cwtl
pusha
mov
data16
sbb
aam
insb
in
jg
shl
or
xor
cs
loope
and
inc
inc
data16
popf
jg
jno
enter
add
pop
fldcw
mov
lea
and
fnstsw
sub
lcall
mov
mov
nop
inc
mov
pop
adc
inc
cmp
inc
add
daa
sti
lea
fisttps
fidivrs
js
cmp
clc
sbb
ds
lods
or
cmp
cmp
sub
aad
pusha
in
loop
jne
mov
or
add
or
ljmp
test
das
hlt
test
sbb
icebp
pop
sbb
test
dec
mov
popf
leave
add
rcll
jae
test
adc
ret
sahf
push
cld
mov
faddl
or
rcll
adc
insl
iret
aad
stos
mov
cmp
jne
xor
sbb
imul
andb
loope
aad
rorl
mov
repz
jnp
or
movsb
scas
ss
cld
dec
dec
or
es
or
mov
push
int3
mov
dec
add
loopne
pop
mov
pusha
in
and
add
stc
sbb
adc
fs
mov
add
xor
add
add
and
test
add
add
and
add
add
and
test
add
add
sbb
add
add
and
mov
add
add
xchg
fisubs
add
les
shll
jle
jmp
xor
jp
fldcw
loope
push
orb
mov
loope
rcll
adc
aad
adc
outsl
xchg
rorb
insl
inc
insl
xchg
mov
inc
imul
cmp
sbb
or
cmpsb
mov
jnp
loopne
stos
xchg
jns
int3
cmpsl
pop
mov
psubb
push
cmp
or
cld
cmp
dec
ljmp
or
push
adc
addr16
sti
push
ss
andb
sbb
outsl
xor
aam
loopne
push
insb
xchg
push
test
xchg
insb
push
dec
or
loope
enter
jp
cmpb
jge
adc
cmp
mov
ljmp
je
or
mov
push
in
dec
sub
mov
sub
or
xor
lock
cli
inc
loope
pop
into
mov
add
push
sbb
dec
iret
mov
or
mov
stc
outsb
outsl
iret
xor
test
push
adc
add
mov
pop
pop
inc
inc
xor
stc
psadbw
lret
mov
divb
pusha
nop
lret
sub
jns
cmp
into
and
repz
clc
and
pop
mov
es
push
gs
sub
out
sahf
aaa
scas
pop
lds
dec
dec
add
lcall
jmp
dec
int3
pop
popa
push
outsb
push
mov
test
cmpsl
mov
test
scas
xor
pop
cmp
loope
xchg
test
cmc
lods
adc
add
xor
mov
mov
fbstp
mov
push
cmpsl
xor
and
pop
scas
enter
xchg
add
and
sub
insl
clc
add
ds
hlt
lcall
inc
pop
jp
imull
out
jl
adc
fstpt
jno
daa
push
out
leave
mov
sub
inc
into
cltd
mov
mov
shll
xlat
mov
stos
dec
in
dec
xchg
insl
push
aaa
add
lret
stc
xchg
int3
iret
mov
cwtl
dec
xchg
mov
xor
ret
mov
lret
hlt
or
aaa
out
mov
ss
lret
cmp
std
les
lret
ja
jmp
cltd
push
fldenv
out
adc
add
lds
lea
insl
sbb
std
jp
jmp
or
cmpsb
lock
stos
pop
lods
xchg
jo
notl
adc
stos
lea
jae
insb
shll
pop
incl
adc
in
out
mov
loopne
pop
and
push
icebp
xor
xor
aad
imulb
shrb
mov
ljmp
test
add
cmp
in
sbb
loop
push
mov
jmp
cmpsl
in
mov
call
nop
jno
mov
mov
dec
mov
dec
mov
mov
cmp
shll
aaa
orb
fbld
pop
les
inc
mov
mov
mov
sti
into
xor
std
icebp
jbe
xchg
cmp
je
cmp
fnstenv
adc
out
fidivs
test
cs
scas
mov
sub
mov
ljmp
daa
mov
cmp
daa
mov
push
cmpsl
xor
mov
movsl
cld
mov
ja
pop
mov
pop
mov
cli
out
cli
lock
mov
das
add
aam
das
pop
pusha
fcoms
sahf
bound
cmp
xchg
cli
and
fldl
dec
mov
cmp
mov
stos
xchg
dec
cmp
push
jo
jmp
cmp
pop
lods
lods
das
je
aad
rcrl
sub
daa
mov
xor
cmpsl
std
jl
add
mov
cmpb
mov
outsl
js
adc
test
pop
in
inc
ret
and
mov
sub
cmpsl
pop
icebp
int3
daa
lea
xor
cmp
inc
add
mov
mov
mov
jp
sub
xlat
cmpsl
xor
sahf
pop
mov
add
icebp
test
inc
push
js
adc
jo
jno
pop
or
iret
mov
push
mov
xlat
dec
scas
push
mov
lods
repz
inc
std
and
add
or
dec
sub
sbb
rorb
mov
pop
bound
cli
repz
xchg
add
cwtl
into
clc
jg
insb
sarb
sub
xor
dec
push
inc
mov
push
push
inc
repnz
pop
arpl
adc
psrld
xor
jns
mov
pop
insb
xchg
mov
out
shlb
jno
and
fdivl
lods
add
adc
iret
mov
jbe
mov
fst
in
lahf
daa
cmpsb
mov
pop
dec
fs
sub
mov
pusha
pop
and
sub
push
std
pop
xchg
sub
scas
lods
add
jno
gs
out
jne
arpl
xor
add
xchg
add
mov
mov
cmpsl
add
add
fs
mov
sti
lock
cmpsl
pop
fmulp
jns
test
testl
sub
inc
cld
insl
pop
movsl
bound
scas
xor
pop
mov
mov
push
mov
cli
int3
lods
mov
out
aam
lret
cli
jno
push
je
mov
xchg
fiadds
inc
or
mov
sub
sarl
pop
notb
pop
inc
sbb
lea
in
mov
sbb
xchg
mov
sub
inc
add
in
lahf
sbb
incl
cmp
enter
std
mov
lods
xchg
aad
les
inc
sti
pop
mov
mov
dec
push
or
mov
idivl
ret
lret
and
fnstcw
mov
out
out
rol
dec
es
sbb
dec
cmp
and
xor
xchg
mov
mov
push
fwait
inc
dec
popa
adc
out
sahf
push
inc
popa
addr16
ficomps
mov
pop
mov
jnp
negb
mov
mov
dec
cltd
jno
adc
mov
ljmp
int3
dec
call
movsb
sahf
pop
ljmp
jbe
push
mov
daa
fildll
xor
imul
stc
add
fcomp
cwtl
mov
push
std
and
into
cmpsl
lods
outsb
fnstcw
dec
int
cltd
xchg
xchg
addr16
pop
loope
xlat
sarb
jns
jge
popfw
outsb
ret
dec
add
dec
add
lahf
dec
add
mov
mov
lret
lods
add
lods
lret
stos
sub
push
cmpsl
ja
mov
repnz
inc
roll
xchg
fs
out
lock
xchg
insl
dec
out
mov
sbb
je
jp
mov
and
