decl
cmp
jmp
dec
repz
mov
scas
imul
out
roll
decl
inc
mov
push
xchg
ss
or
ret
out
aam
lods
fsts
or
sub
lcall
inc
in
lcall
test
daa
addl
sbb
cmp
incl
cmp
adc
flds
daa
mov
xchg
add
pop
je
in
pushl
std
outsb
mov
push
stos
fs
mov
mov
sarl
sbb
out
push
sbb
ret
mov
sti
decl
push
lods
fisttps
mov
jne
cmpsb
xchg
test
mov
jmp
sbb
push
leave
mov
insb
jno
mov
cmp
cmc
mov
stos
push
loopne
dec
adc
push
sbbl
inc
mov
xchg
xchg
icebp
adc
mov
and
or
call
test
cltd
add
pushf
fisubl
mov
out
mov
dec
pop
inc
push
aad
iret
orl
lcall
repnz
sbb
sarl
jecxz
out
cmp
icebp
mov
in
adc
jae
mov
jmp
cltd
sub
push
cmpl
lods
sub
xor
stos
mov
mov
ss
dec
pop
in
adc
mov
fistpll
in
rcrl
sub
cmp
pop
xchg
xchg
hlt
popf
scas
push
decl
sbb
shrl
sub
data16
scas
lret
ret
scas
pushf
rcl
xor
xor
dec
ja
call
pop
lcall
pop
adc
in
lods
push
js
inc
sub
and
sub
test
decl
jp
xor
loop
clc
dec
cmp
out
mov
bound
lcall
ret
arpl
movsb
je
mov
pop
in
push
jns
dec
pop
adc
xchg
in
rcll
sub
lret
pop
nop
add
lcall
sub
loopne
les
pushl
pop
aaa
stos
xor
and
pushf
sbb
xor
jmp
icebp
insl
outsb
aam
xchg
push
out
mov
mov
add
sahf
mov
pop
addr16
ljmp
fimuls
cmpsb
es
and
adc
adc
test
icebp
dec
cli
inc
test
fistps
and
in
int3
bound
push
into
loop
into
mov
inc
mov
mul
sar
pushl
in
ret
add
enter
dec
pop
sbb
xchg
or
or
fsubrl
ja
cmp
lcall
outsl
pop
pop
ds
out
pusha
cld
rcr
dec
add
sbb
mov
pushf
das
dec
lcall
iret
inc
inc
inc
sti
dec
mov
sub
cmpps
test
mov
xor
adc
repnz
ljmp
dec
test
cmpb
shlb
test
add
jmp
popf
or
repz
adcb
addl
sbb
cmp
pop
pop
sbb
jae
popa
pushl
or
rcll
loopne
sub
adc
outsl
insb
xor
push
cmp
cmp
incl
ret
inc
dec
adc
movsb
out
push
jmp
sbb
sub
lcall
std
or
push
decl
sbb
and
pop
jo
rorl
add
and
pushf
jmp
pop
cmp
rol
xchg
test
xlat
mov
xchg
scas
iret
test
incl
enter
dec
in
subb
pusha
jp
cmp
pop
xchg
mov
pcmpgtd
call
push
jmp
jle
lds
roll
xchg
mov
sub
dec
outsb
nop
bound
cs
mov
out
cld
xchg
mov
pop
clc
sub
jmp
addb
test
sti
in
cld
mov
or
call
sbb
jbe
jbe
adc
jg
xchg
aam
int
mov
das
clc
push
cld
adc
outsb
mov
push
rorb
mov
into
fxch
jg
and
cli
add
xor
mov
mov
pop
and
in
cmp
adc
call
add
in
dec
out
cmp
mov
fcomip
mov
scas
fimuls
lret
pushl
cmp
jg
or
cli
dec
outsb
mov
movsl
fsubrp
and
das
hlt
jns
jmp
xor
popa
mov
inc
push
cmp
push
sbb
sub
mov
int
call
mov
iret
mov
xchg
mov
adc
cmpsl
sub
push
int3
ret
push
xor
idiv
lcall
bound
pushf
sub
insl
adc
xor
sti
loope
clc
pop
dec
xor
enter
cld
cmp
cmp
mov
xchg
in
test
lods
in
xchg
movsl
test
cmp
mov
bound
xlat
mov
adc
dec
ljmp
jnp
sbb
pop
xor
fbstp
mull
std
fnstsw
inc
dec
es
lcall
dec
int3
imul
push
push
loopne
add
or
push
sbb
fcomip
dec
imul
jb
imul
mov
pushf
xor
pusha
popa
inc
cmp
jmp
and
iret
scas
loopne
ret
inc
int3
push
adc
lods
push
adc
adc
test
incl
cltd
pop
xchg
jb
cwtl
jmp
push
push
or
out
cli
sahf
dec
cmp
and
cmp
pop
or
int
push
mov
mov
pushl
popf
mov
insl
xor
cmpsl
fwait
jecxz
sti
fs
sub
ret
jnp
cld
in
lock
stos
cmp
std
inc
das
pop
sub
mov
push
daa
and
sbb
mov
lcall
xchg
and
adc
popa
cmc
cld
lcall
jo
xor
jns
mov
sahf
lret
mov
into
clc
in
daa
cmc
xor
gs
lcall
fs
cld
lcall
inc
and
nop
and
inc
mov
in
jg
xchg
push
xchg
dec
adc
rcrb
mov
sbbb
ret
mov
mov
or
sub
lock
jmp
mov
iret
push
repz
outsl
ljmp
wbinvd
sbb
push
jne
mov
cmpsb
aaa
aad
lahf
push
xchg
xorl
repz
ljmp
xorl
addl
push
shlb
mov
push
outsl
sbb
pop
xor
sbb
and
and
xchg
cs
or
test
jmp
mov
nop
xor
incb
shlb
xchg
orl
jbe
push
cmp
add
push
movsl
sbb
adc
imul
adc
xchg
pop
cmpb
int3
dec
xchg
fidivs
cmp
orl
xchg
imul
lcall
xchg
sbbb
lock
cld
ljmp
mov
add
daa
jg
ficoms
scas
inc
jecxz
out
mov
bound
add
lcall
test
lods
sub
push
mov
ffree
push
popf
cmpl
sub
daa
pop
incl
sahf
cmp
sub
out
ret
xor
push
cmp
push
std
jmp
repnz
cmp
cmp
xchg
nop
xlat
imulb
jp
inc
es
and
mov
mov
cmp
andb
enter
add
call
repnz
mov
arpl
or
gs
sbb
daa
dec
inc
jo
movsl
ljmp
lods
pop
test
cmp
adc
aaa
loop
jnp
mov
call
xchg
lcall
je
and
int
lds
loope
dec
aaa
loope
call
leave
fnsave
xor
mov
mov
mov
mov
cmp
or
sub
incl
or
mov
xor
jns
jbe
cltd
aaa
cmp
push
dec
out
vsqrtsd
mov
sbb
lea
push
dec
in
push
pop
mov
inc
or
gs
test
push
dec
cmp
jle
or
nop
or
insl
dec
lcall
inc
jmp
cmp
loopne
mov
inc
sub
in
nop
pop
cmp
xchg
pop
dec
loope
xor
scas
clc
sbb
mov
enter
je
dec
inc
dec
pop
sub
push
sti
scas
sar
push
dec
int
es
test
xor
and
push
push
xchg
add
push
jecxz
add
mov
pop
push
dec
add
sub
repnz
incl
pop
fcoms
cmp
std
nop
push
cmp
xor
mov
adc
notb
stc
aas
ljmp
mov
scas
movsb
mov
inc
rclb
cmc
lds
ds
out
int3
ljmp
dec
in
push
fadds
dec
sbb
adc
icebp
sbb
jp
mov
mov
xor
sub
mov
mov
and
add
mov
cmp
add
sbb
add
mov
pop
sbb
xchg
mov
dec
sub
mov
pop
mov
dec
mov
mov
push
add
dec
and
adc
lods
mov
push
ljmp
imul
ljmp
sub
mov
out
push
dec
dec
mov
cmp
sub
jne
test
je
mov
add
push
dec
add
mov
pop
cmc
dec
fistpll
das
dec
rcrb
testl
add
mov
or
jne
addr16
pop
xor
mov
inc
xorb
push
aaa
ret
push
imul
sbb
jno
shrb
orb
push
adc
ja
mov
popa
gs
adc
call
push
push
inc
xor
sub
add
lds
fwait
xchg
mov
xor
or
mov
fmul
dec
add
shlb
adc
roll
stos
xchg
inc
mov
sub
and
shlb
in
xchg
popa
jne
mov
xchg
mov
mov
xor
add
add
or
adc
push
sarl
adc
add
add
decl
cmp
dec
scas
push
jnp
mov
jmp
call
loope
pop
inc
out
adc
xchg
pushf
mov
pop
jle
or
mov
decl
lea
shll
adc
mov
movsb
cltd
mov
repnz
mov
add
shrb
ljmp
cli
xor
cmp
mov
divb
bound
add
lcall
in
fnsave
dec
ss
addb
popa
jno
lret
mov
push
jo
sar
jmp
scas
loopne
adc
leave
movsl
mov
mov
ret
nop
add
mov
inc
incl
sahf
sbb
adc
and
ret
mov
call
nop
jmp
lcall
jp
out
add
in
mov
sti
and
inc
out
cmovge
lcall
flds
ret
push
push
or
sahf
adc
cmc
cs
pop
add
nop
mov
adc
jg
xor
call
add
push
ret
dec
and
push
push
inc
push
clc
decl
stc
jmp
arpl
jo
js
lcall
lahf
popf
push
popa
push
push
sti
sub
adc
sub
mov
add
and
mov
or
dec
cmpsb
inc
push
loop
adc
add
xor
andb
add
and
pusha
inc
fwait
orb
and
add
incl
add
daa
mov
in
cmp
add
sbb
cmpsl
shlb
push
jns
jns
fsubr
cld
adc
jns
out
push
mov
test
ret
call
cmpsl
stc
push
or
and
inc
push
out
sahf
out
js
pushf
lods
fucom
jns
rcl
lock
out
and
pop
push
js
cwtl
test
int3
mov
jbe
mov
out
sahf
cmp
push
out
mov
repz
out
or
repz
dec
pop
insb
jl
pushf
cmp
repz
mov
mov
mov
push
cmp
repz
js
cwtl
lods
repz
repz
jbe
cmp
repz
push
pusha
repz
repz
xchg
movsb
mov
repz
aam
hlt
add
sahf
out
sahf
adc
xor
push
fs
out
je
xchg
movsb
mov
enter
or
sbb
inc
push
pusha
jo
iret
repz
xchg
movsb
mov
imul
cld
or
and
jns
out
inc
push
fs
out
sahf
test
out
out
jbe
cmpsl
test
xor
push
push
sahf
out
lods
rcl
lock
repz
iret
repz
push
fs
cwtl
test
iret
repz
enter
iret
repz
xor
pop
push
js
cwtl
lods
shrb
repz
lock
sbb
jns
out
cmp
pusha
je
out
sahf
test
int
jns
cld
or
sbb
repz
repz
pop
jo
iret
repz
xchg
movsb
mov
cmpsl
stc
cmp
or
and
inc
jns
out
push
fs
cwtl
cmp
jae
test
mov
lods
lods
lods
iret
repz
rep
scas
push
sub
dec
cmp
repz
jo
nop
mov
mov
shl
lock
sahf
out
scas
adc
xor
sahf
out
sahf
push
push
scas
scas
jns
out
scas
scas
scas
scas
scas
sahf
out
out
push
xor
jns
out
js
cwtl
test
sarl
int3
loopne
or
iret
sub
dec
pop
push
cmp
pushf
lods
mov
repz
cld
or
out
push
sub
iret
repz
dec
pop
jo
repz
pause
mov
imul
mov
sub
push
pusha
jo
nop
jge
out
movsb
mov
sahf
out
out
mov
push
sub
dec
jns
out
pusha
insb
js
lcall
fsub
cld
iret
repz
or
insb
jns
or
scas
lcall
sahf
out
shl
out
cld
iret
repz
or
push
cmp
repz
insb
jp
xchg
fwait
add
rep
mov
pop
fimull
iret
repz
repnz
or
cmp
repz
lcall
repz
adc
jns
out
mov
xor
ljmp
cmp
repz
xchg
stos
ret
repz
repz
push
adc
cmp
dec
add
adc
mov
push
dec
sar
call
pop
aam
fistps
repnz
xchg
jle
sub
cmp
pop
mov
jl
insl
jae
ljmp
sub
rcrb
je,pn
cmp
jle
push
or
shlb
lods
mov
je
sub
popf
lock
jg
cmp
inc
mov
ret
mov
jecxz
sub
sbb
ds
outsl
xchg
jmp
cwtl
test
add
and
incl
stos
subl
inc
sub
pop
mov
mov
lea
test
stos
fwait
sub
ror
in
rclb
out
int
mov
dec
scas
dec
and
pop
mov
sbb
call
insb
fmuls
xor
inc
pop
push
ja
aam
pop
mov
stc
out
das
sbb
daa
add
incl
je
xor
shll
adc
mov
sbb
pushf
pop
and
fldt
mov
clc
pop
out
mov
outsb
inc
cmpl
sub
out
into
leave
pop
iret
aaa
ljmp
xor
enter
aaa
add
cmpsl
jl
push
or
gs
mov
jmp
jo
push
xchg
in
imul
and
and
and
ljmp
sbb
int
jle
cli
rclb
dec
mov
jmp
and
mulb
aad
std
dec
test
repnz
jae
imul
enter
push
outsb
sub
mov
or
push
add
pop
fcmove
iret
push
loope
xchg
das
jno
cmp
cwtl
fmul
and
xchg
xchg
adc
push
test
mov
mov
cmc
lahf
sti
ja
push
inc
adc
pop
ret
fwait
je
mov
push
fistpll
xchg
test
sahf
push
dec
shl
xchg
dec
test
cmp
lcall
dec
inc
mov
loop
jl
ret
jmp
cmpsl
mov
push
or
lcall
mov
dec
mov
and
lock
enter
rol
jge
int
pushf
out
ljmp
adc
stc
sbb
xor
or
sbbl
int3
jnp
cld
nop
adc
mul
or
dec
jae
loopne
mov
fldcw
mov
dec
mov
adc
dec
push
jbe
and
inc
xchg
mov
imul
mov
iret
push
sbb
adc
enter
adc
push
adc
call
adc
and
cmp
dec
mov
push
incl
fs
sahf
les
cmpsl
dec
cmp
aaa
pop
mov
fisubl
push
add
cmp
scas
dec
aaa
xor
xchg
push
repnz
scas
mov
insb
jg
cs
mov
jnp
outsb
shll
jecxz
sub
pop
xor
dec
pop
jmp
loop
out
jmp
mov
sahf
cmpsb
jle
into
mov
pop
mov
jecxz
and
int
dec
xor
roll
je
push
xchg
add
loop,pt
push
jbe
mov
imul
sbbl
or
stc
call
sbb
lahf
sbb
add
xor
sub
das
jns
xchg
inc
sti
fcomi
or
scas
out
rcrb
add
xor
sbb
xchg
xor
sub
cmpsb
xor
ret
sbbb
data16
imul
outsb
add
xchg
add
dec
popa
xor
stos
ud0
or
cmpsl
cmp
ja
and
xchg
out
stc
xor
push
lea
lcall
xor
cmp
out
xchg
and
daa
jle
sbb
addr16
hlt
pop
out
mov
xor
mov
sub
fwait
out
cmp
insb
arpl
out
mov
jl
pushl
popl
xor
add
or
fs
cld
fidivs
test
scas
pop
mov
stos
sub
add
lcall
mov
sub
scas
fcmovu
fisubrl
pop
mov
dec
or
or
subl
mov
mov
cmp
subb
cmp
sti
lahf
nopl
mov
push
enter
cmp
or
shll
xchg
jno
sbb
cmp
push
adc
ss
lock
cmp
mov
int3
ss
call
inc
push
imul
sbb
cmp
ljmp
shl
call
or
xchg
loopne
push
enter
inc
sbb
or
fsubrs
or
aaa
mov
les
xchg
sti
cmpsl
mov
and
fwait
xchg
push
sahf
addr16
andb
test
outsb
iret
ret
stc
ja
and
sub
xchg
xchg
pop
scas
faddl
jae
not
outsb
popf
xor
mov
std
or
sbb
cltd
or
mov
jmp
push
xchg
mov
ret
mov
cmp
int
outsb
cmpsl
mov
jo
push
call
push
jb
pushl
es
jne
jbe,pt
dec
ja
lahf
xchg
js
mov
pop
shrb
sub
xchg
sbb
push
jecxz
xor
loop
mov
add
mov
cli
andl
outsb
ficomps
or
test
test
clc
insl
xchg
int
mov
loope
fsubrs
jne
mov
jg
ret
jl
pop
adc
pop
push
adc
jecxz
insl
pop
mov
es
push
loopne
rolb
mov
push
mov
out
pop
and
mov
pop
sti
fcom
outsb
dec
push
push
aad
cmc
jmp
push
data16
outsb
xchg
pop
pushl
jmp
mov
mov
mov
pop
push
outsb
outsl
sar
xchg
rclb
mov
adc
pop
in
ds
data16
push
push
out
lods
push
fiaddl
in
in
movsb
pop
pusha
test
add
loopne
or
rcrb
push
int3
jg
sti
call
mov
loop
loopne
jns
and
push
inc
jle,pn
push
cs
aad
call
pop
xor
aaa
int3
std
mov
mov
dec
push
loop
mov
repz
pop
hlt
inc
call
int
xor
pushf
sbb
out
shll
imul
lcall
xor
outsl
repz
lcall
sbb
and
in
mov
rcll
xchg
daa
pop
shrb
pushl
xor
insb
sub
test
mov
es
pop
loop
addr16
add
sbb
out
cmpsb
shrl
outsl
dec
in
xchg
loopne
sbb
rcrb
sub
push
bound
arpl
bndstx
addr16
xor
gs
push
pop
and
lock
inc
inc
jo
cmpsb
dec
adcb
test
popa
rcrl
or
shl
test
sarl
stc
jle
sub
in
lods
loop
lcall
sub
into
dec
loop
mov
sbb
fsubrl
jg
outsb
and
adc
xchg
sub
push
loop
or
mov
xchg
push
inc
add
data16
mov
or
or
movsl
mov
cld
test
in
xchg
push
insl
adc
cld
pushl
adc
push
lcall
popa
push
shrl
push
jbe
fdivrl
bound
jae
dec
fdivrs
push
pop
addr16
push
jecxz
mov
xchg
mov
mov
sti
and
out
push
out
push
pushf
call
cmp
cs
test
loop
ljmp
roll
sbb
cld
call
adc
rcl
and
cmp
xchg
das
add
dec
das
push
std
pop
xor
mov
xor
xchg
xchg
xor
fldt
ljmp
or
iret
cmp
dec
jmp
and
inc
and
sub
cld
or
outsl
fildll
add
test
push
ds
jne
push
inc
test
loop
mov
mov
pushl
test
jmp
test
in
mov
and
nop
cmpsb
shlb
push
outsb
jae
outsb
ret
test
mov
and
sbb
jmp
jg
ljmp
xchg
and
outsb
fidivrl
jge
jne
jb
cli
mov
add
push
fisubrl
into
adc
sbb
test
int
fists
inc
outsl
inc
imul
cmpsb
scas
jo
inc
xchg
jae
aaa
arpl
dec
inc
push
bound
jno
je
incl
je
popa
ja
imul
bound
xor
insb
push
push
jo
in
call
push
dec
jne
jns
pop
inc
inc
cmp
dec
push
inc
imul
insb
jbe
jp
popa
std
pushl
xchg
xor
popa
imul
arpl
jne
decl
sahf
gs
inc
jb
imul
addr16
xor
push
push
push
aaa
jp
dec
push
cld
jp
je
jbe
pop
push
fs
inc
push
dec
jo
push
aaa
insb
pop
imul
jns
sar
pushl
xor
imul
xor
fs
xor
bound
xor
lcall
inc
js
xor
cmp
inc
push
push
js
gs
push
inc
push
push
outsl
xor
incl
push
push
dec
push
push
push
push
pop
bound
dec
dec
imul
push
bound
je
inc
xor
jb
push
push
dec
dec
insb
dec
xor
jl
in
dec
push
ja
push
bound
outsb
inc
jne
inc
js
inc
ja
arpl
ret
add
dec
inc
push
push
dec
xor
data16
jno
mov
push
xor
imul
pop
inc
bound
push
aaa
gs
rcrl
insb
dec
inc
xor
inc
dec
jbe
inc
push
dec
jle
lock
jg
xor
push
aaa
ja
push
inc
xor
cmp
xor
inc
add
loop
push
ret
sbbb
addb
sub
pushf
dec
shll
sub
xor
push
shlb
mov
inc
push
fcom
mov
imul
lock
int3
enter
xlat
loopne
lock
stc
pop
mov
adc
enter
and
fcoml
shrl
push
cmp
sarb
jns
iret
test
mov
filds
cmp
movsl
int3
add
inc
mov
mov
fcomi
and
sub
outsb
sbb
jbe
push
or
push
mov
fwait
int
jnp
push
and
adc
adc
sahf
xor
sbb
in
frndint
sbb
sbb
jbe
dec
lahf
xor
in
jnp
adc
push
lods
aad
rorb
mov
cwtl
xor
loop
loopne
inc
sbbb
std
jbe
xchg
dec
dec
mov
push
mov
jge
imul
xchg
push
xchg
adc
les
or
push
std
adc
jp
daa
out
ja
dec
fdivl
dec
push
popf
inc
faddl
ds
ja
js
rolb
fadd
shl
sti
jbe
adc
sbb
adc
pop
sub
in
cld
aas
lds
inc
das
fsub
push
inc
push
sbb
adc
add
dec
js
aaa
xor
xchg
xor
cs
ret
aam
xchg
jbe
pop
push
cmp
pusha
xchg
loop
xlat
inc
aas
inc
add
jnp
xbegin
jbe
pop
addr16
lock
outsl
outsb
push
cmp
es
and
inc
adc
es
jb
fnstenv
adc
xor
cmp
aas
add
data16
pop
pop
scas
leave
les
push
push
push
mov
jge
pop
push
jo
out
icebp
sarl
add
mov
insb
ss
nop
mov
sar
data16
jmp
lds
jns
test
psubq
pop
sti
fidivl
data16
das
jge
insb
les
out
or
iret
lock
out
dec
or
into
loope
ja
push
jae
lods
fdivrs
out
pop
inc
icebp
dec
push
scas
ds
out
dec
aad
mov
lds
in
mov
rolb
mov
mov
gs
gs
xor
cs
insb
pop
inc
sbb
gs
jb
mov
imul
arpl
outsl
outsb
cs
gs
jbe
mov
mov
add
pop
jb
dec
outsb
and
imul
push
imul
gs
fldt
dec
or
pop
xor
in
lods
loopne
xor
inc
outsl
jne
pop
push
jne
jnp
mov
jns
push
outsw
jb
popa
outsb
arpl
sbb
push
mov
fildll
jae
sbb
jb
cmp
push
fs
fs
push
mov
mov
call
das
adc
fcmovnu
pop
mov
jmp
loop
popa
into
push
cld
jb
outsl
dec
jne
mov
jns
sub
mov
das
int3
sub
sub
movsb
mov
pop
testb
sti
arpl
sbb
jb
push
and
lock
js
push
dec
cmc
gs
and
and
popa
divb
rolb
cmp
fs
jae
imul
hlt
gs
mov
imul
inc
imul
mov
arpl
mov
and
push
andl
outsl
insl
add
outsb
imul
outsb
sbb
fs
jb
scas
cmp
and
jae
mov
sub
push
idiv
push
push
out
in
shrl
fs
cmp
xor
jle
addr16
ss
push
outsl
xchg
and
pop
dec
data16
push
je
xorb
in
mov
cmp
popa
imul
xor
adc
pop
inc
in
mov
jns
inc
shrb
and
jne
rcl
adc
push
gs
pop
jb
outsb
sbbl
outsb
addr16
mov
popa
addr16
outsl
mov
dec
gs
pusha
jnp
je
inc
jbe
jo
jae
mov
push
add
es
mov
outsb
mov
add
icebp
mov
adc
je
push
jns
sbb
insb
mulb
pop
aas
and
push
lret
sub
lret
push
leave
in
loopne
or
or
inc
pusha
jno
cmpsb
out
mov
stos
cmpsl
pop
inc
sub
push
push
lcall
ss
push
dec
bound
repz
push
jo
cmpsb
sub
jbe
cwtl
pop
sbb
scas
mov
jbe
xlat
jbe
fldl2e
mov
fnstenv
jne
roll
adc
fstps
lret
and
and
rolb
arpl
xchg
add
mov
add
mov
insb
cwtl
loopne
lods
popl
insb
push
mov
jne
sbb
adc
roll
imul
ja
daa
inc
rclb
sub
insl
mov
imull
daa
push
push
xorb
notl
inc
sbb
ret
adc
cmpsl
ljmp
in
inc
xor
inc
mov
xchg
das
les
inc
jo
mov
pop
xor
adc
sbb
dec
nop
mov
add
sti
push
jecxz
sbb
mov
pusha
push
hlt
es
out
imul
inc
xor
addr16
push
sub
data16
fistl
in
jmp
dec
push
xor
inc
imul
sbb
insb
js
stos
rcrb
inc
xchg
movsl
jecxz
int3
icebp
pusha
jno
idivl
ret
or
imul
xorl
aaa
fdivrs
ss
ret
gs
js
jo
jmp
lock
pushf
movsl
movsl
shl
outsl
pop
inc
inc
imul
cmpsl
push
xchg
adc
mov
add
pushf
mov
xchg
jb
jae
ja
cld
roll
push
in
loopne
dec
addr16
push
in
mov
pop
sbb
rolb
inc
add
and
push
push
subl
push
adc
enter
sub
mov
push
push
push
and
push
mov
add
add
nop
inc
add
inc
push
add
add
add
add
subl
inc
add
fs
pop
dec
mov
or
mov
sub
add
add
jmp
sub
push
subl
push
add
adc
les
andb
subl
orb
adc
adc
nop
inc
add
add
nop
pop
jns
inc
and
sub
sub
test
push
add
subl
inc
add
fs
add
nop
push
inc
gs
ljmp
and
nop
push
add
add
xorl
and
adc
fs
inc
and
or
mov
sub
add
add
ss
mov
call
lods
mov
inc
add
adc
adc
nop
inc
inc
add
or
daa
or
add
and
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
add
adcl
adc
add
nop
push
add
inc
inc
add
add
add
and
inc
adc
nop
push
add
add
addl
orb
adc
adc
nop
push
add
add
addl
orb
push
add
nop
inc
add
adc
push
cmpb
incl
xor
pop
pop
xor
xor
inc
mov
add
add
fnstenv
pop
out
add
add
add
add
add
mov
mov
addb
fisttpl
add
addl
incb
pop
push
add
jg
fcmovnu
cmp
sbbl
sub
sbb
cwtl
add
orl
roll
adcl
test
mov
and
jnp
cwtl
mov
scas
push
xchg
lcall
shll
js
sbbb
imul
cmp
sub
pusha
rcll
pushl
or
and
ds
add
roll
add
fcomi
outsl
ds
gs
rclb
shrb
and
loop
out
dec
or
push
incl
jg
pop
les
call
add
stc
and
insl
das
push
mov
outsl
push
push
pop
add
sbb
cmp
repz
ds
imul
add
fcmovne
shll
push
aad
ret
stos
xchg
test
mov
imul
push
insl
jg
mov
int3
fld
or
loope
pavgb
stos
xor
xor
sbb
gs
popl
mov
mul
ja
lods
stc
jecxz
pop
push
fucomip
push
addr16
push
fiadds
aad
pusha
add
mov
inc
lds
sbb
pop
pop
loopne
lcall
popa
or
into
add
test
arpl
int
addr16
push
sub
sbb
mov
fcmovne
add
dec
test
out
cltd
xchg
pop
push
out
cmp
cs
sti
fnstenv
dec
shrl
xchg
insl
pop
movsl
pusha
or
int3
paddsw
sub
add
mov
or
cmp
shrl
arpl
jbe
clc
mov
movsb
adc
rolb
test
rcll
scas
popf
bound
in
in
pusha
add
dec
xadd
fnstenv
lods
js
cmc
add
adc
cs
ret
insl
mov
fwait
adc
leave
in
dec
sbb
cmp
cmp
dec
push
jge
xchg
in
outsb
test
mov
sub
sbb
loopne
pop
lret
or
aaa
insl
stos
push
pop
xchg
roll
out
mov
out
add
add
icebp
pop
mov
sbbl
js
adcl
imul
icebp
or
aas
dec
inc
xor
loopne
loope
clc
pop
hlt
ret
arpl
mov
je
add
sbbb
aaa
mov
pusha
mov
inc
add
mov
rcrb
fidivrl
in
sarl
sbb
cmc
movsl
jecxz
fimuls
loopne
sbb
cmp
push
mov
fcmovu
xor
or
add
inc
xlat
pusha
xor
mov
sub
lods
pop
idivl
mov
push
cs
rol
stos
cmpsb
xchg
or
xchg
and
insb
fsubr
cmp
addb
dec
std
xlat
jmp
mov
add
lret
push
mov
mov
add
iret
mov
or
or
add
fadds
dec
stc
shll
dec
mov
xchg
cmp
out
in
mov
sbb
movsl
sbb
sub
fnstsw
and
shl
mov
sarl
sbb
loopne
outsl
out
xor
dec
andl
lahf
mul
jmp
stos
pop
cmp
repz
roll
aad
add
sar
xor
sub
mov
popf
out
mov
ja
iret
pop
fsubl
lcall
stc
lock
push
mov
pop
xor
pop
push
jae
aas
js
mov
sbb
iret
pop
lock
sbb
xor
faddp
rclb
mov
dec
lods
stos
add
mov
nop
test
lock
mov
add
ljmp
adc
mov
or
in
add
jmp
xor
cld
cmpsb
jns
mov
cld
push
in
sar
out
aaa
xor
in
fwait
jo
insl
jnp
sub
addb
call
xor
sub
jno
pop
push
sbb
lock
push
outsl
sub
inc
xor
imul
jge
test
mov
pop
mov
jle
xor
add
dec
jnp
add
dec
push
add
mov
ds
push
add
popl
cmc
scas
push
lcall
hlt
rcll
jbe
jb
xchg
and
push
lods
dec
add
dec
inc
jno
mov
xorb
inc
add
inc
lock
push
enter
ljmp
jns
push
adc
sub
pop
cmp
ljmp
or
dec
pop
ja
das
adc
testl
add
xor
decl
imul
fiaddl
sbb
sbb
cmp
or
mov
lahf
jbe
add
jle
mov
jmp
outsb
fadds
cmp
aam
outsb
jbe
xchg
jo
cld
inc
jg
and
in
je
lea
jo
mov
gs
sti
pushl
mov
xchg
je
insl
lcall
outsb
jg,pn
cmp
xor
lock
addb
icebp
ljmp
push
xchg
inc
mov
jp
add
addb
jg
or
sub
add
scas
push
adc
fisubs
xchg
jmp
push
push
mov
and
adc
push
xor
jg
xchg
push
jo
xor
jo
bound
mov
popa
inc
and
add
or
add
or
adc
inc
add
add
test
pop
popa
aas
out
repnz
add
gs
dec
add
in
add
mov
std
or
xchg
add
jbe
insb
add
testb
add
ja
icebp
or
push
lock
shlb
xor
imul
inc
jp
pusha
add
inc
aas
dec
shll
sub
je
imul
stos
and
add
or
mov
lods
insl
lcall
push
push
es
jbe
fidivs
loopne
add
and
dec
pop
adcl
bound
pop
dec
or
lock
es
or
add
pop
or
lods
std
jb
xor
mov
lock
mov
pop
cmp
mov
incb
add
mov
jns
or
add
add
jno
add
fistpll
add
add
les
xor
sti
add
xor
xor
add
and
incl
inc
add
cld
add
xor
sbb
add
push
add
add
push
add
xlat
lock
pop
xor
and
and
mov
mov
cs
ljmp
aaa
add
cmp
fcomip
outsl
clc
mov
loop
addr16
imul
jno
jae
decl
xchg
mov
pop
pop
lahf
incl
testb
jge
incl
cld
pop
aas
mov
fimuls
add
or
aas
sbb
xor
mov
sti
add
xor
rorb
or
push
add
add
mov
add
ja
ds
lock
push
idivb
cmp
jns
mov
pop
xchg
mov
sbb
out
sub
loopne
sub
mov
and
cld
adc
mov
and
sbb
xor
dec
inc
in
and
fcomip
pop
nop
inc
sahf
mov
rcrb
lock
dec
jp
stos
cmp
icebp
mov
cld
lret
xchg
stos
gs
imul
in
jns
jmp
mov
xor
add
mov
push
int
pop
repz
std
mov
in
nop
pop
sbb
dec
ss
mov
lods
stos
jg
in
scas
mov
or
out
lods
mov
adc
repz
inc
mov
add
lret
or
push
cmpsb
into
add
sbb
pop
jecxz
pop
jl
mov
fld
pop
and
pop
nop
mov
ja
sbb
rolb
mov
dec
pop
lret
jno
cltd
sti
repz
fcomip
xchg
test
mov
inc
pop
int
mov
sbb
int
lds
mov
push
lahf
adc
es
mov
neg
out
mov
mov
lock
adc
std
sub
inc
shlb
std
xchg
or
arpl
cld
mov
mov
sbb
sub
mov
cltd
cmp
loopne
mov
adc
add
push
adc
sbb
addb
fstpt
addl
adc
imul
or
insl
stos
jp
add
inc
sub
sbb
push
push
mov
pop
imul
xchg
adc
rolb
shr
aaa
fistpll
add
add
add
aaa
push
push
cmp
adc
add
repz
outsb
add
les
push
inc
imul
adc
ret
mov
add
push
xor
shrl
in
lods
ficoms
inc
or
push
mov
lret
pop
inc
push
cmp
add
add
mov
imul
add
sbb
mov
rorb
outsl
lcall
dec
rclb
int
call
rorb
clc
dec
xor
pusha
testl
sub
pop
and
faddl
add
add
add
and
pushf
imul
cltd
and
enter
add
mov
lods
add
shrb
mov
add
inc
dec
shlb
push
mov
mov
add
mov
aas
pop
adc
pop
mov
add
or
cs
data16
pop
outsl
cmp
fucom
insl
cwtl
pop
mov
dec
mov
lahf
pop
jmp
mov
je
add
sbb
in
int
iret
inc
sbb
sarb
add
fistpl
sahf
xchg
sets
pop
adc
fwait
dec
repz
or
pop
aaa
add
inc
fcmovnb
fisubs
int
dec
lea
pushf
cmp
lahf
add
adcl
mov
push
dec
inc
push
imul
das
sbb
add
push
test
sbb
add
in
loopne
and
push
outsb
stos
mov
push
shl
or
sub
fs
pop
fldt
push
adc
add
dec
pop
fmulp
outsb
pop
out
cmp
or
add
ret
loopne
loop
outsl
xlat
push
pop
jbe
loopne
lods
iret
add
mov
mov
mov
lock
add
lods
shlb
sub
or
pusha
and
rorl
mov
xlat
mov
loopne
out
nop
sbb
and
sbb
scas
xor
push
push
into
mov
imul
jle
push
lods
add
loopne
and
jo
loopne
out
fwait
idiv
lcall
add
fneni(8087
sbb
add
in
cmp
dec
xchg
test
cmp
loopne
outsb
popa
push
mov
scas
xor
push
js
popa
inc
mov
or
inc
and
loopne
out
rcr
push
pop
ret
dec
mov
adc
pop
jae
cmp
add
outsb
add
dec
rcrl
loopne
or
jp
cmovp
stos
mov
dec
hlt
rcrl
loopne
or
push
push
out
cmpsl
jge
loopne
stos
pop
xchg
ror
loopne
stos
push
sbb
pop
loopne
xor
or
testb
loopne
cmpsl
or
loopne
stos
mov
lcall
xor
loopne
stos
lret
adc
lock
adc
cmp
push
jmp
jp
pop
stos
repz
shll
call
add
dec
fiaddl
add
insb
dec
add
ret
inc
out
mov
sbb
push
push
shll
addr16
loopne
jae
in
loopne
push
or
pop
fwait
sbb
mov
pop
sub
sbb
cmp
adc
xchg
inc
add
mov
mov
push
push
jo
fcompl
jmp
jo
loop
or
rcr
ret
cmpsb
mov
pop
dec
push
aam
jge
mov
and
dec
and
sub
js
adc
or
cmp
loopne
sbb
fmul
and
dec
cmpsb
insl
xlat
xchg
sbb
mov
sub
addr16
cwtl
mov
jb
dec
lods
loope
fsub
pop
testb
in
fmuls
ficompl
jb
ret
int3
mov
int
or
mov
fdivl
jo
mov
out
loopne
clc
jne
aas
or
adc
out
loope
mov
cmp
int
jg
out
and
or
cld
jo
mov
jo
lods
push
roll
or
or
jo
addb
add
inc
pop
push
mov
out
ret
xor
lock
jo
jnp
aad
jb
ja
push
push
lock
or
aaa
jg
fcmovb
xor
mov
lock
mul
int
rcrl
adc
out
lock
cmpsl
push
mov
lock
mov
mov
jnp
mov
dec
cmp
jo
inc
sbb
lock
cmp
mov
lock
jg
xor
jno
sbb
stos
and
mov
dec
jo
stos
mov
jecxz
sarl
inc
loopne
pop
inc
inc
shlb
push
movsb
add
fildl
das
or
push
nop
inc
imul
mov
inc
lock
jo
mov
jns
jbe
mov
push
pop
lahf
mov
mov
sti
sbbb
arpl
inc
inc
push
adc
xchg
xor
loop
ljmp
push
dec
cmc
inc
xchg
add
adc
push
inc
stos
jecxz
lcall
repz
pusha
push
mov
repz
inc
add
jbe
and
aas
push
push
dec
cmpsb
shl
sbb
outsl
push
pop
mov
sbb
add
sbb
lock
mov
and
xchg
cmpsb
test
jl
and
mov
loope
insl
add
jno
test
xchg
lock
out
fists
jo
xchg
cmc
idivb
jno
cwtl
adc
cmpsl
push
sahf
cmpsb
incb
repz
std
adc
mov
jno
sbb
xor
mov
xor
mov
jns
rol
roll
stos
or
cmp
adc
add
pop
int3
pop
add
shrb
pop
add
and
add
pop
add
fldt
add
add
jge
push
add
dec
add
jg
add
add
dec
add
add
add
movl
outsl
popa
add
pop
add
inc
add
add
bound
jle
pop
mov
fistps
jl
add
push
add
add
add
adc
adc
aaa
rclb
es
xor
sbb
in
fistpll
add
ss
add
fadds
daa
add
add
ljmp
cmp
pushf
and
bound
nop
or
add
add
sbb
add
add
add
sbb
mov
add
movb
add
nop
or
adc
outsl
mov
xor
push
add
add
mov
lcall
push
add
sarb
dec
add
jp
pop
xor
add
cmp
or
jg
mov
sbb
and
daa
adc
and
insb
adc
mov
add
mov
add
enter
popa
add
add
add
xchg
add
fbstp
sbb
cmp
mov
adc
and
push
add
dec
fnstenv
loope
push
add
sub
cmp
pop
add
mov
fwait
test
push
fiadds
addr16
iret
out
or
cmp
add
add
add
sub
add
add
push
push
and
mov
dec
aam
mov
jbe
adc
adc
sub
add
or
push
add
cld
lcall
add
add
addl
negb
cld
int
sbb
xor
xor
adc
sti
xor
repnz
int
pop
add
xor
mov
push
add
push
add
xor
sar
add
push
add
xor
out
ret
xor
cld
in
fwait
int3
fists
dec
add
xor
movsb
pop
cmpsb
xor
test
dec
cld
int
cld
add
xor
stos
dec
add
xor
scas
inc
add
xor
mov
cld
int
inc
add
xor
mov
add
xor
mov
aas
int3
int
mov
cmp
xor
add
in
cmp
cmp
adc
add
xor
add
ss
xor
add
xor
shlb
xor
xor
xor
int
cld
add
xor
add
cs
xor
loop
sub
aaa
jg
fildll
add
xor
add
shrb
add
xor
add
es
repz
jg
xor
in
xor
add
and
xor
add
mov
inc
jae
add
add
sbb
inc
add
and
aaa
jg
push
cmp
and
cmp
push
cmp
jg
add
sub
add
sub
sub
push
repz
xor
xor
adc
aaa
jg
add
xor
xor
add
ss
aaa
sub
adc
add
cmp
aaa
jg
add
inc
sbb
add
push
sbb
aaa
sbb
inc
pop
add
dec
adc
jg
push
adc
dec
adc
dec
adc
rcll
dec
adc
add
adc
push
push
add
pop
push
nop
pop
push
and
push
stos
pop
push
push
adc
push
into
pop
push
push
adc
repnz
push
pop
adc
push
push
push
push
pop
adc
cmp
imul
add
pop
adc
and
pop
inc
dec
movsb
add
add
dec
push
add
incb
fmuls
adc
pop
adc
or
or
inc
push
or
push
or
inc
push
or
mov
adc
add
movups
push
jo
gs
cmp
adc
cwtl
popa
inc
cmp
cmp
callw
mov
sub
xchg
sbbl
adc
in
cwtl
mov
xor
adc
or
call
xor
mov
jp
push
dec
adc
xchg
sub
inc
sub
push
test
add
and
or
pop
sub
adc
es
fadds
dec
adc
push
dec
adc
and
dec
adc
push
mov
adc
ds
data16
js
sbb
adc
adc
sbb
adc
push
dec
sbb
sub
adc
cmpsb
pop
mov
add
sub
adc
adc
push
sub
lds
bound
pcmpeqb
loopne
lods
lret
mov
or
adc
push
mov
or
and
or
adc
andl
sub
add
push
xor
adc
xor
pop
out
incl
xchg
pop
pop
mov
add
add
mov
stos
add
mov
mov
push
pop
mov
pop
popl
push
pop
test
adc
out
pop
lods
dec
pop
lods
add
aas
dec
pop
scas
jle
scas
nop
pop
mov
add
nop
add
int3
add
int
pop
lret
addb
in
cli
pushl
add
pop
xchg
add
xchg
cmp
sar
xchg
add
pop
xchg
add
pop
xchg
insb
pop
xchg
pop
pop
cwtl
mov
xor
pop
fwait
add
pop
pushf
add
pop
popf
add
pop
sahf
add
pop
lahf
scas
pop
sbbb
mov
sub
add
pop
movsb
xor
movsl
xchg
pop
cmpsb
ljmp
rolb
cmpsl
add
pop
test
es
test
add
pop
mov
sbb
mov
sbb
sub
incl
mov
sbb
mov
sbb
mov
pop
mov
incl
mov
add
mov
adc
mov
add
incl
mov
add
pop
roll
pop
ret
add
ret
pop
les
or
lds
or
movb
pushl
cld
pop
movl
pop
leave
add
mov
pop
or
pop
or
and
lcall
and
pop
or
and
push
or
and
cmpsb
and
and
popf
and
call
sahf
and
mov
and
lods
and
and
pusha
and
and
sub
jg
aas
or
or
and
shlb
aaa
or
or
xor
aam
xor
call
and
or
sub
sbb
and
or
and
or
and
or
and
or
pop
icebp
in
sub
adc
and
or
push
xchg
and
fcmovnu
push
and
or
pop
or
and
sbb
or
sbb
mov
or
and
sbb
push
or
and
or
and
adc
and
call
adc
mov
and
xchg
and
or
mov
mov
or
xor
or
jle
jg
or
and
add
pop
fisubl
pop
or
pop
pushl
push
and
or
push
or
push
or
and
and
or
ljmp
or
mov
push
and
push
and
and
push
and
push
decl
pop
and
pop
and
pop
and
and
and
sub
inc
or
call
mov
sub
cmp
pop
and
or
or
cmp
pop
and
or
ljmp
xor
shll
or
and
das
or
and
or
and
ljmp
or
and
or
and
or
and
push
daa
and
lods
and
cmp
and
and
iret
sbb
scas
and
or
or
and
sbb
and
or
mov
ljmp
and
adc
adc
arpl
adc
adc
mov
pinsrw
push
and
or
or
pop
daa
in
outsl
es
inc
adc
or
or
es
ss
mov
cmp
add
sbb
add
call
or
or
cmp
mov
mov
nop
and
or
xor
or
and
or
or
and
or
rorb
push
or
mov
ljmp
pop
and
or
add
sbb
or
add
sbb
call
add
pop
or
add
adc
or
add
adc
fiadds
loopne
push
or
add
or
jecxz
or
insb
pop
pop
mov
or
add
out
pop
or
push
imul
fucomi
add
or
add
pop
or
shrl
je
out
push
pop
jo
push
or
sti
or
sub
push
or
push
push
or
filds
push
or
adc
dec
or
adc
dec
or
adc
dec
or
decl
push
push
dec
or
sbb
inc
or
sbb
inc
or
sbb
inc
or
incl
push
push
inc
or
and
ds
and
cmp
inc
cmp
adc
cmp
es
cmp
push
ss
decl
sub
xor
sub
push
xor
xor
cs
decl
xor
sub
xor
push
sub
cmp
mov
or
push
and
push
pop
or
incl
sbb
or
inc
push
sbb
inc
push
sbb
dec
push
push
or
dec
push
adc
or
dec
push
adc
push
call
fbstp
or
push
pop
or
mov
or
push
push
or
xor
addb
xor
xor
xor
aaa
xor
xor
xor
xor
mov
jp
xor
xor
xor
insl
or
cmp
fiaddl
ljmp
roll
xor
inc
xor
inc
xor
dec
xor
xor
xor
mov
roll
dec
xor
sub
stos
dec
xor
xor
lds
push
repnz
xor
insb
fdivs
push
xor
pop
xor
pop
xor
xchg
push
pop
xor
xor
xchg
inc
pop
pusha
push
xchg
pop
xor
pusha
xor
xor
arpl
mov
adc
test
adc
lds
xor
adc
scas
adc
adc
adc
mov
xchg
mov
mov
adc
push
lods
pop
ret
shlb
repnz
sbb
mov
jbe
fdivs
mov
rclb
mov
add
xchg
insl
xor
jno
push
js
push
jg
rolb
push
push
test
xchg
add
push
jmp
xor
adc
adc
ljmp
adc
adc
inc
fldcw
call
js
pop
and
mov
mov
data16
movsb
and
and
and
and
xchg
and
add
xor
testl
cmp
div
repz
ds
repz
in
add
add
out
scas
fldt
sahf
out
lods
fsubrs
sahf
stos
fisubrs
jns
jns
pushf
sahf
push
rcrl
aam
rclb
sahf
and
jg
fbstp
iret
jnp
rep
push
insl
push
mov
repz
imul
imul
repz
fsubs
arpl
gs
repz
push
fisubs
sahf
out
fisubs
shlb
push
xchg
jns
out
push
xchg
push
xchg
push
repz
out
push
xchg
push
nop
add
lahf
dec
push
sahf
dec
popf
jns
out
dec
pushf
dec
fwait
dec
out
sahf
out
dec
cltd
dec
cwtl
and
sahf
inc
xchg
inc
xchg
inc
out
out
in
in
aas
ds
repz
mov
mov
repz
xrelease
xchg
xchg
repz
aaa
test
test
cmp
xorb
xor
cmp
repz
xor
repz
das
jge
jl
jnp
iret
repz
jp
jns
repz
repz
pop
sbb
iret
sbb
sbb
sahf
out
sahf
pop
adc
dec
repz
mov
pop
pop
idivl
mul
pop
pushl
push
inc
mov
ds
cmp
insl
jle
cmp
mov
and
push
cmp
fcomip
lcall
das
xor
movsb
add
push
lahf
pop
jle
fs
imul
ljmp
xlat
push
and
outsb
jp
pop
add
or
std
nop
inc
std
daa
mov
in
inc
stos
decl
iret
adc
scas
aaa
imul
mov
cmp
bound
cmpsl
ficoms
incl
in
mov
ret
and
sub
mov
or
cmp
cmp
and
and
sub
orb
mov
aas
popw
sbb
mov
test
dec
and
adc
mov
push
out
jns
sub
adc
cmpsb
add
leave
sub
loopne
call
add
add
outsl
mov
stc
mov
sbb
subb
pop
mov
adc
or
pop
outsl
dec
data16
outsb
dec
xorb
lcall
ss
and
xchg
mov
mov
push
mov
mov
mov
xlat
pop
loopne
sbb
mov
mov
cmp
mov
bound
into
jg
xor
xor
push
xor
xor
xor
cs
mov
pushl
test
lret
sahf
aas
sti
rorl
adc
mov
push
gs
inc
jge
push
xchg
movsl
jg
xor
mov
sub
mov
jl
sbb
mov
insb
pushl
mov
jl
jnp
mov
imul
xor
lods
push
push
push
fisubrs
imul
lcall
jbe
enter
xor
xor
xor
xor
xor
xor
xor
xor
xor
lcall
imull
scas
dec
sarb
or
outsl
and
push
int3
pop
or
int3
xor
xor
fdivl
xor
xor
xor
xor
xor
jne
rolb
in
pop
insb
jno
fs
div
ret
ljmp
pop
jb
movsl
inc
mov
mov
pop
xor
mov
jo
dec
pushl
ljmp
mov
ds
fldt
dec
pop
pop
adc
lret
ss
mov
ss
lcall
ss
inc
rcrb
jl
in
sahf
sub
sarl
vmovaps
shl
push
jmp
scas
cli
pushl
cld
xor
ja
mov
xor
push
arpl
out
adc
cmp
fidivrl
push
cmp
cmp
cmp
cmp
cmp
cmp
rorl
mov
call
imul
pop
repz
cltd
lret
jo
dec
cmp
aas
aas
sarl
lcall
aas
in
lcall
pusha
push
mov
pusha
mov
and
jp
cmpsl
cmp
mov
xor
mov
xor
mov
xor
pop
xor
mov
cwtd
clc
jae
xor
push
call
popa
imul
pushl
and
lahf
xor
pushl
xchg
inc
push
sub
cmpsl
or
or
dec
aaa
cld
inc
out
jge
ss
out
pop
shll
mov
mov
lcall
mov
mov
inc
adc
ret
mov
fwait
push
sub
mov
pushl
inc
aaa
shlb
cmp
outsb
cmp
xorb
cmc
insb
push
sbb
clc
fistpll
cld
incl
adc
sbb
cmp
cmp
cmp
cmp
xor
lcall
lds
ret
and
icebp
cli
add
add
sti
push
cmp
cmp
lcall
cmp
fidivrl
inc
push
cmp
jge
cs
loop
inc
jb
pushl
lods
pop
and
loope,pt
test
jb
xchg
ds
ds
ds
call
jle
and
sub
lret
push
mov
add
js
nop
data16
call
xor
mov
pop
xor
xor
xor
xor
aas
inc
cmp
push
sub
cmpsb
pushl
ljmp
mov
jge
add
cmp
enter
icebp
cmp
cmp
jl
cltd
andl
push
sahf
es
mov
std
pushw
sbb
arpl
cmp
call
cmp
cmp
cmp
cmp
out
pop
jle
repz
lahf
les
jmp
fldcw
sahf
out
pop
adc
fdivrs
sub
sahf
cmp
call
out
aaa
push
or
sub
sbb
js
sbb
bound
and
shll
insl
cli
pop
je
lahf
xor
xor
xor
scas
adc
inc
clc
or
push
mov
cmpsl
adc
push
pxor
adc
jmp
push
pop
out
sbb
or
lock
push
pop
cmp
sub
sub
clc
mov
cmp
cmp
cmp
push
roll
sti
cmp
pop
mov
aas
lcall
jg
addl
pushl
mov
outsl
xchg
xchg
xchg
imul
fwait
arpl
mov
cmpsl
call
stos
stos
push
lods
scas
scas
dec
mov
mov
mov
mov
mov
mov
ret
cmp
mov
pushl
leave
lret
int
iret
das
rcl
shrl
aad
xlat
daa
fstp
fistps
loope
jecxz
in
out
call
jmp
out
out
psllw
repz
div
pop
stc
cli
sti
add
incl
add
add
jmp
add
add
inc
inc
inc
add
dec
or
decl
add
push
push
push
add
adc
or
xor
adc
xor
sbb
sbb
sbb
or
add
add
xor
xor
and
xor
sub
sub
sub
or
add
xor
and
out
inc
loop
sbb
incl
andl
in
adc
add
sbb
mov
sbb
pop
xchg
pop
incl
test
add
addb
incl
scas
js
pop
sbbl
pusha
add
add
mov
rclb
rorl
addb
sbb
ret
add
or
into
add
sbb
add
in
adc
jg
fildl
bswap
sbb
aas
loop
mov
rcr
sbb
dec
out
add
dec
rolb
add
popa
add
neg
icebp
popf
rolb
imul
fwait
insb
insb
sub
gs
je
incl
add
fs
imul
add
or
std
ljmp
ret
or
add
je
jb
jns
adc
add
orl
lret
push
pop
cld
in
xlat
inc
xchg
cld
mov
cmpsl
rolb
rclb
outsb
push
pushf
je
mov
push
and
shlb
cs
xor
aaa
lock
push
roll
add
dec
cmpsl
lock
jae
jb
lret
add
add
outsb
jg
rorb
or
or
add
das
fsubs
cwtl
data16
lds
mov
pop
sahf
inc
fbstp
push
loop
insl
ret
sub
loopne
cld
orb
fiaddl
jo
push
ficompl
rorl
rolb
xchg
add
pop
ret
add
xchg
lret
inc
pushl
add
sub
add
add
aad
xchg
in
ficoml
test
inc
jno,pn
xor
in
sub
and
loopne
je
push
pop
add
outsb
adc
pop
and
paddsb
mov
fists
mov
push
int3
or
pop
mov
push
add
add
pusha
push
gs
mov
jmp
mov
pusha
and
insb
inc
jl
pusha
xor
cwtl
add
cmpb
sbb
je
jo
das
das
ja
jo
bound
pushf
sbb
shr
das
loope
call
insb
lcall
gs
push
out
inc
jbe
lock
stos
loopne
mov
mov
setae
popa
or
or
sub
outsl
adc
jecxz
jg
jl
and
iret
xor
cs
xor
xchg
mov
mov
push
add
subb
mov
lret
insb
mov
push
pop
lock
dec
xchg
xorl
mov
mov
mov
jnp
mov
xchg
mov
pop
sub
out
sbb
pop
jecxz
add
inc
ljmp
call
test
pop
addl
lods
sub
repnz
xor
adc
push
mov
cs
notl
std
jmp
sti
xor
call
add
sub
add
in
call
lods
lods
inc
hlt
popa
adc
and
enter
sub
icebp
sbb
cmp
and
xor
cmp
pop
mov
cmp
cmp
sub
sbb
sub
add
jmp
dec
sub
sbb
sbb
pop
shlb
in
std
push
out
fisubrl
and
jmp
ljmp
in
scas
shrb
pop
movsb
xor
inc
mov
movsl
add
popa
or
es
push
jg
testb
add
mov
out
mov
lods
push
mul
jb
jo
mov
mov
dec
stos
mov
sub
out
clc
or
adc
ds
sub
cmpsl
fdivl
pushf
movsb
fdivrs
sbb
mov
mov
jo
jg
icebp
cltd
cmpsl
mov
jbe
div
sbb
in
lds
jmp
jns
add
insb
test
inc
fmuls
cmpsl
dec
and
jo
pop
and
push
mov
outsl
jae
jo
arpl
or
addl
sub
rcr
adc
jg
loop
rcr
add
sti
movsb
push
in
mov
or
push
cld
jecxz
clc
add
mov
je
add
gs
adc
ja
ret
fwait
insl
cwtl
jo
popa
xorb
jle
pushf
gs
arpl
loope
into
and
js
cli
pop
mov
add
mov
test
test
scas
jg
scas
adc
add
mov
andl
std
call
inc
mov
cltd
xchg
mov
xor
pop
out
dec
adc
and
popl
push
jno
add
push
out
xor
push
pop
outsl
cld
inc
in
sbb
inc
add
stc
add
shrb
mov
jbe
and
jne
notb
xorl
sarb
test
nop
jg
inc
mov
dec
sbb
dec
or
add
or
mov
dec
jmp
fcomip
mov
nop
pop
pop
pop
cmpsl
inc
pop
mov
or
stc
or
mov
push
xor
inc
or
sub
scas
adc
sbb
push
test
scas
inc
movsl
or
insl
cmpl
push
ret
or
sbb
sbb
pop
out
push
jmp
adc
sbb
push
inc
or
mov
ljmp
add
inc
jp
movsl
add
push
out
add
inc
mov
dec
mov
mov
divl
mov
cwtl
cmp
or
jle
or
pop
add
clc
dec
push
mov
dec
add
jecxz
mov
sbb
sbb
mov
push
icebp
add
push
shrb
insb
sub
jg
cld
pop
imul
or
inc
std
jmp
mull
mov
jmp
sbb
hlt
mov
add
popf
and
xlat
int3
filds
ffreep
add
add
dec
stos
cli
push
dec
mov
mov
notb
dec
pop
mov
xor
cld
lock
in
icebp
add
in
dec
es
mov
cmpsl
pop
dec
pop
mov
dec
mov
inc
dec
mov
orb
jmp
dec
push
mov
pop
pop
mov
or
cmc
fistpl
xchg
sbb
loop
add
testb
jbe
fwait
icebp
lcall
sbbb
mov
scas
adcl
fbld
inc
xchg
xchg
mov
inc
xchg
cmpsb
add
pop
mov
pop
cli
xchg
inc
dec
dec
mov
cmpsb
jae
mov
push
add
ljmp
mov
pop
add
aas
rol
adc
add
ss
loopne
and
aam
lcall
push
scas
mov
mov
mov
mov
mov
lcall
mov
pop
ret
push
push
mov
xchg
push
push
inc
mov
popa
ret
dec
shr
ljmp
out
lock
sbb
add
loopne
in
adc
test
add
push
pop
decl
or
popa
mov
jae
xchg
or
fucomi
insb
bound
xchg
pop
mov
test
lods
pop
adc
pushl
add
mov
lahf
jno
fwait
mov
test
xor
xchg
mov
xchg
mov
mov
add
xlat
stos
jmp
pop
add
call
andb
mov
mov
das
cli
ljmp
ret
rol
aad
add
and
jecxz
xor
roll
xor
dec
les
add
js
imul
add
out
lds
sar
hlt
or
sbb
jecxz
aad
subb
xchg
or
mov
jae
mov
push
sub
jno
pusha
mov
add
int3
loope
or
idiv
outsl
clc
out
cmc
add
and
and
add
adc
lret
mov
lock
dec
dec
scas
cmpsb
pop
xchg
data16
xchg
xor
add
inc
or
cmp
jne
sbb
push
or
adc
ljmp
sub
or
jae
sahf
mov
xchg
mov
and
sbb
push
clc
xor
and
mov
sbb
jmp
cltd
mov
jno
mov
pop
movsb
fcomip
cmpsb
pushl
mov
sbb
jmp
mov
xchg
decb
mov
lahf
addb
adc
lsl
btr
sbb
sbb
pop
out
push
es
out
mov
mov
je
addr16
adcl
data16
xor
xchg
xor
mov
push
add
addr16
pop
cmpsl
push
test
mov
outsl
push
push
cmpsl
inc
pop
andb
and
jno
mov
adc
xchg
xchg
or
mov
jb
or
pusha
jle
lcall
pop
inc
push
mov
inc
jb
test
aas
jo
pop
inc
push
arpl
ljmp
push
mov
xor
jb
and
dec
mov
add
rolb
fldenv
jg
outsl
clc
lret
and
loop
in
fs
add
in
jmp
mov
or
or
push
and
ljmp
xchg
data16
xorb
mov
dec
dec
dec
mov
dec
dec
add
pop
loopne
out
xor
shll
mov
push
push
push
es
das
cmp
push
shrb
ss
loop
dec
lods
pop
jo
movb
push
or
fidivs
add
lock
mov
add
sbb
icebp
add
add
decl
and
imul
and
cld
incl
popf
add
xchg
js
mov
cld
dec
stos
call
fnsave
test
dec
cbtw
inc
mov
mov
in
clc
cmp
cmpl
lcall
pop
mov
pop
dec
decl
stc
clc
push
mov
xor
xor
idiv
mov
rclb
cmpsb
pop
inc
inc
mov
ja
lahf
add
xchg
stos
lods
mov
stos
mov
scas
dec
mov
add
mov
mov
fwait
dec
mov
mov
stos
xchg
lea
mov
inc
test
or
pusha
inc
ds
jmp
add
or
mov
mov
mov
and
sub
ja
mov
sub
test
repz
pop
or
dec
pop
clc
adc
inc
mov
repz
cld
call
repnz
xor
js
pusha
mov
fldl
and
mov
push
hlt
xor
stc
sahf
adc
push
push
mov
adc
in
cli
adc
fadd
sarb
aam
xor
fmuls
fcmovu
xor
pop
add
or
xchg
je
insl
mov
idivb
add
or
roll
mov
subb
pushf
fidivs
cld
push
mov
decl
cld
cld
repnz
ja
jle
ljmp
add
or
data16
mov
add
ja
jns
jp
add
xor
sbb
roll
lods
mov
add
sbb
out
adc
mov
pop
aaa
and
popf
popa
adcb
aas
les
sub
adc
or
or
adc
psrad
pop
cmp
sbbb
loop
loopne
jecxz
add
cwtl
cltd
sbbl
test
pop
stos
outsl
stos
clc
mov
jmp
repnz
mov
cmc
pop
mov
incb
cltd
test
out
pop
or
loopne
and
ret
sbb
adc
inc
decl
lock
ror
les
push
mov
cmpsb
pop
add
inc
xor
pop
jg
inc
mov
add
mov
fdivp
je
mov
dec
mov
add
jb
out
lcall
scas
push
test
and
adc
mov
lcall
mov
inc
push
add
scas
adc
ltr
incl
jae
xchg
dec
lret
jns
jl
jae
add
and
aaa
pop
cmc
ljmp
sub
push
xor
push
adc
fs
cli
out
call
xor
push
add
scas
xchg
shr
add
jmp
pop
push
cmp
or
push
ljmp
jmp
es
push
mov
aam
loope
xchg
lods
inc
mov
add
sub
adc
fst
inc
ret
imul
mov
scas
xor
out
loop
sub
rol
in
dec
test
dec
jg
fisubrs
lret
add
out
movl
testb
sbb
cmp
mulb
sbb
adc
add
adc
outsl
clc
lcall
cli
sub
sub
jecxz
mul
sub
mov
jg
mov
pushl
dec
jecxz
out
fwait
les
jg
or
mov
jge
scas
lods
or
rolb
shll
rcr
outsb
mov
scas
push
push
aaa
adc
cmpsb
pop
sbb
ljmp
insb
and
call
dec
std
jg
mov
int
add
cmc
clc
add
lret
aam
pop
shlb
loop
add
mov
dec
inc
cmpsl
inc
pop
jno
or
mov
inc
dec
inc
add
xor
ret
cmp
clc
sub
jo,pn
cltd
push
mov
sarb
and
xchg
cwtl
jecxz
dec
dec
inc
std
lcall
push
push
add
incl
js
jmp
xor
clc
imul
add
jecxz
jbe
pushf
in
shll
les
movsb
rcrl
sbb
inc
add
into
or
clc
enter
jg
loopne
fldl
loope
mov
sbb
rol
data16
cmp
jbe
ss
push
fwait
decl
das
xor
aaa
sbb
push
shrb
and
ret
add
clc
decl
xor
aas
fnstsw
and
mov
ja
aaa
lds
ds
shll
das
sar
pop
or
dec
lea
dec
mov
lcall
inc
mov
pushf
pop
push
push
mov
xchg
pop
adc
pusha
pop
push
mov
out
les
and
mov
adc
aaa
orl
cmp
ljmp
mov
mov
scas
dec
adc
stos
mov
mov
lahf
inc
mov
mov
outsb
add
pop
addb
xchg
jnp
xorl
nop
add
leave
lcall
loopne
in
jmp
add
cmc
daa
and
cmp
mov
adc
mov
dec
pop
and
mov
insl
jb
pop
add
fildl
pop
inc
pop
movsb
pop
inc
jne
jl
inc
inc
pop
orb
pop
or
adcb
push
push
sbbl
jmp
jle
cwtl
subb
xor
lret
ss
pop
test
add
pop
push
push
scas
pop
xchg
push
dec
push
cmp
mov
mov
add
xor
loope
sti
jmp
inc
mov
mov
clc
or
lea
jb
sbbb
ja
stos
sahf
xchg
xorl
imul
std
int3
sbb
lret
arpl
aaa
cltd
lret
jmp
mov
jnp
data16
inc
lcall
popa
subl
addl
cltd
bound
stos
lea
icebp
mov
stos
insb
xchg
pushf
xchg
jle
test
loop
cli
stos
sahf
mov
mov
stos
dec
cmpsb
mov
pushl
mov
lods
mov
mov
mov
mov
mov
rcll
inc
dec
dec
push
fistps
inc
inc
mov
inc
push
add
adc
mov
enter
sbbb
ljmp
mov
mov
pushf
sahf
push
xor
cmp
fsubrs
push
pop
push
mov
dec
pop
xchg
jge
add
mov
pop
arpl
add
fcomip
pop
cld
lahf
pop
push
dec
mov
push
popf
js
jl
push
jle
ljmp
loope
in
mov
sub
lcall
dec
push
jmp
jg
ljmp
into
daa
pusha
hlt
sub
daa
rol
ljmp
push
std
jmp
jmp
cld
mov
pushf
dec
dec
pop
test
mov
pop
add
cmpsl
dec
pop
pop
stos
incb
pop
push
or
mov
push
inc
jle
cmp
cmp
pop
lock
cmp
out
arpl
push
jnp
push
sti
add
jbe
jne
or
sbb
or
unpcklps
loopne
call
adc
push
pop
push
cmpsb
adc
cwtd
rclb
xchg
nop
xchg
call
inc
xorl
fadds
xchg
pusha
sahf
cltd
lcall
xchg
xchg
sahf
jns
scas
add
dec
test
mov
loope
add
push
repnz
movsl
jo
mov
mov
push
mov
mov
les
ret
std
add
and
into
les
add
decl
aam
fcompp
fisubl
into
xor
or
scas
add
call
jg
scas
xor
in
mov
sbb
sti
out
mov
mov
adc
inc
icebp
push
cmp
decl
add
mov
dec
or
adc
push
sbb
or
inc
pop
hlt
fbld
and
xor
cmp
add
cmp
fdivr
scas
jg
cmp
cld
xor
daa
ret
sub
dec
inc
inc
icebp
add
add
inc
pop
dec
loop
cmp
cmp
popa
and
sahf
data16
std
sub
cmpsb
xchg
nop
jnp
test
test
jg
xchg
xchg
call
mov
jp
cmpb
jp
xchg
xorb
add
jmp
dec
cltd
jle
mov
aam
push
subl
decl
ret
fs
movsl
push
test
mov
pop
mov
add
mov
stos
and
repz
call
pushf
push
stos
stos
negb
lods
fstl
add
loope
jle
je
mov
push
dec
pop
dec
ret
ljmp
loop
xchg
fwait
insb
adc
sub
test
insl
fs
ljmp
add
sbb
test
and
jg
stos
mov
mov
mov
cltd
pusha
fcomi
decl
dec
dec
pop
add
pop
cmc
div
je
roll
mov
outsb
arpl
jp
add
mov
push
std
out
sbb
or
loopne
inc
jg
cmpsb
jl
mov
jbe
in
cwtl
test
ljmp
mov
xchg
arpl
mov
push
pop
push
cwtl
ja
jae
ficoml
dec
add
pushf
incl
xchg
mov
inc
add
mov
cs
fisttps
sbb
inc
loope
inc
scas
ljmp
ror
popa
add
mov
scas
mov
lcall
loopne
jge
mov
pop
loopne
mov
imul
cmp
add
aas
es
dec
idiv
jmp
cmp
loope
cli
sub
xor
sub
sub
sub
xor
jnp
mov
xorb
push
inc
dec
mov
std
imul
dec
inc
add
scas
pusha
or
les
jne
test
dec
out
add
xchg
add
aaa
and
les
mov
lock
cmp
jnp
add
or
xor
add
jmp
imul
add
int3
iret
add
and
les
mov
movl
jnp
leave
cmp
aas
lret
gs
sub
cld
andb
lods
das
xor
inc
inc
push
loopne
pushl
push
dec
repnz
or
cli
bnd
adc
call
out
loop
mov
jmp
lods
sbb
mov
dec
dec
dec
ret
clc
imul
jl
adcb
mov
xor
js
push
outsl
arpl
cmp
mov
push
ljmp
test
pop
inc
push
notb
pop
adc
sbb
addl
pusha
xchg
xchg
subl
mov
imul
nop
xchg
jb
mov
or
arpl
adc
jae
sarl
call
fwait
xchg
int
mov
mov
mov
in
ja
popf
fisubrl
sbb
aam
or
and
outsl
loopne
xchg
insb
lock
sbb
pushl
or
frstor
cmp
mov
or
fcom
iret
xor
push
std
mov
add
out
sbb
sti
jg
enter
add
adc
in
inc
or
nop
sbb
sbb
pop
loopne
dec
int3
pop
sbb
add
ss
subb
lods
fimull
loope
lcall
xor
ffreep
inc
xor
or
stos
call
xor
xchg
pop
or
cmpsb
cmpb
in
cs
push
test
dec
pusha
ljmp
js
mov
test
mov
ljmp
inc
push
pop
pop
push
scas
pop
outsl
pop
sbb
sbb
mov
pop
and
sbb
pop
loop
jmp
sbb
clts
out
sbb
jmp
jle
mov
dec
inc
hlt
push
out
clc
inc
dec
scas
stos
mov
add
nop
mov
or
fcmovu
pop
std
lods
popa
je
pusha
js
enter
add
imul
incl
mov
inc
inc
inc
mov
adc
stos
lcall
mov
mov
or
mov
adc
loopne
dec
pop
jg
xchg
scas
inc
cmp
push
ja
mov
add
cwtl
gs
outsl
xchg
jo
inc
cmpsl
add
push
mov
mov
dec
loope
push
mov
mov
out
enter
mov
scas
mov
cwtl
lcall
xchg
cwtl
jbe
pushl
call
jnp
sbb
or
mov
xchg
dec
in
dec
add
dec
push
scas
push
push
ss
push
push
pop
cmpsb
pop
cld
mov
gs
push
insb
insl
outsb
nop
jo
add
je
jbe
js
add
or
or
pusha
and
das
xor
xchg
push
mov
je
inc
loopne
js
js
outsb
and
add
add
and
mov
inc
add
or
mov
or
fldt
das
or
add
push
pop
pop
pop
mov
arpl
addr16
imul
test
or
sub
add
and
movsl
push
gs
mov
in
adc
loopne
push
scas
and
inc
js
mov
mov
and
dec
mov
outsl
cli
es
add
js
jo
mov
inc
and
xchg
adc
insb
js
adc
lock
insb
inc
mov
clc
push
outsb
add
add
lock
jae
pop
fdivl
aaa
test
aam
insb
cmpb
hlt
jbe
or
add
mov
add
xchg
mov
loopne
bound
insb
mov
push
shrb
gs
push
jo
add
mov
jg
mov
popa
fs
bound
jb
jb
inc
mov
mov
inc
jb
popa
je
stos
push
filds
fs
hlt
xor
pop
lock
pop
lcall
mov
dec
xchg
outsw
jb
jmp
push
sbb
push
jb
arpl
lods
je
push
subb
or
jp
fwait
push
je
lea
jl
scas
pop
mov
dec
nop
rolb
xor
out
lcall
xor
outsb
fwait
insb
cli
adc
fs
cmpb
mov
or
pushl
decb
ret
js
ret
xchg
cmp
mov
inc
inc
xchg
ss
jg
inc
push
adc
mov
push
bound
jg
push
and
push
inc
dec
mov
mov
add
inc
mov
mov
or
push
xor
dec
inc
inc
outsl
push
dec
push
dec
stos
xchg
lods
inc
push
lods
or
dec
dec
dec
aas
cld
ja
mov
push
xchg
scas
inc
push
or
mov
adc
clc
mov
dec
push
inc
mov
inc
dec
mov
lock
inc
dec
icebp
add
sarl
jno
add
and
sub
dec
xchg
add
inc
xor
dec
inc
stos
in
inc
pushf
outsl
outsb
outsb
lcall
pop
out
arpl
sub
ja
outsb
arpl
mov
bnd
outsb
je
and
mov
lock
cmp
shlb
outsb
arpl
inc
in
nop
imul
mov
push
ds
add
jo
popa
insb
imul
insb
outsl
jae
xor
mov
bound
mov
mov
and
adc
xor
pop
hlt
sbb
jo
mov
sahf
gs
mov
add
mov
aad
sub
push
pushf
jno
or
and
inc
hlt
add
cs
bound
jl
push
insb
xchg
outsb
push
jae
into
inc
addr16
push
inc
xchg
jae
call
xor
add
xor
dec
shlb
aaa
hlt
fcoml
sbb
jno
xchg
imul
ss
xor
mov
int
rclb
rcrb
addb
mov
and
jle
xchg
xor
push
ret
cmc
fildl
jb
mov
adc
enter
push
mov
mov
xor
sub
xor
mov
push
fcomps
mov
icebp
scas
in
stos
test
jo
xor
in
jne
mov
outsb
repnz
sub
insl
popa
jo
out
add
inc
dec
push
mov
decl
mov
mov
gs
pop
xor
icebp
add
xor
repnz
mov
fsubrl
out
jo
lods
imul
add
gs
addr16
jg
fists
adc
mov
sub
mov
add
loop
mov
pop
dec
jp
mov
pushf
imul
add
inc
xchg
sub
add
push
cwtl
cmp
insb
mov
push
push
lea
add
aas
mov
xor
inc
mov
inc
sub
addr16
jle
dec
std
pop
dec
decl
add
dec
fcomps
and
inc
std
jnp
lcall
jbe
push
mov
or
cmp
test
jns
inc
jge
mov
push
scas
sbbl
add
xchg
push
xchg
push
cli
jg
or
xchg
rcll
test
lock
dec
lock
mov
mov
lea
push
aas
xchg
sub
dec
mov
push
outsl
mov
xor
dec
xor
frstor
and
xor
add
call
aaa
cld
das
es
jb
xor
inc
outsb
mov
adcb
add
inc
insb
or
mov
gs
jnp
inc
xchg
jbe
inc
add
je
in
add
lds
ljmp
and
data16
imul
and
fbstp
divb
or
int3
or
and
add
fsubs
jb
mov
and
and
xor
cmpsb
fidivl
pop
mov
pushf
pushl
push
sbb
xchg
inc
repnz
add
dec
pop
jge
add
mov
call
lret
push
push
fildl
dec
call
lock
pop
or
icebp
cs
adc
ljmp
hlt
in
inc
nop
ja
push
mov
enter
ljmp
add
fwait
call
pop
and
aaa
shrb
sar
lock
cmp
mov
add
movsb
push
call
aas
pop
ret
push
nop
and
jg
in
jle
test
add
add
add
pop
stc
dec
outsl
push
std
mov
jp
jne
push
mov
push
sub
fstpl
fcmovnb
incl
add
call
dec
pop
sti
mov
jbe
and
cmp
scas
iret
std
ds
leave
call
test
jp
mov
push
call
cmp
adc
scas
jmp
je
jo
addb
pop
fmull
mov
jmp
shlb
and
mov
add
mov
push
pop
push
clc
dec
enter
dec
fists
mov
cmp
inc
inc
add
out
stos
movsb
cmp
cld
lea
std
repnz
jo
add
aas
mov
mov
fistps
sbb
push
add
outsb
je
add
mov
pop
call
ljmp
filds
test
cmp
ljmp
pop
mov
push
ds
add
pushf
add
int
pcmpeqw
call
xchg
sbb
test
pop
nop
pop
push
mov
mov
rolb
push
inc
cmp
or
add
ss
and
and
push
sub
in
jb
mov
loopne
jmp
mov
xor
lock
pop
mov
faddl
push
add
fbld
lock
nop
lcall
cwtl
scas
push
mov
add
out
inc
dec
or
jne
das
rorl
xor
stos
add
or
mov
push
inc
jg
divb
xor
inc
in
mov
ret
dec
add
imull
push
lea
push
sbbb
ljmp
and
mov
adc
mov
repz
push
mov
sbb
lret
scas
jl
je
mul
outsl
incl
cmpl
je
and
add
jg
mul
cltd
mov
jmp
mov
jmp
mov
ret
inc
cmpb
mov
adc
add
je
cmp
jbe
pop
sar
fildl
push
or
and
test
je
loop
test
mov
add
push
adc
pop
fbld
rcrb
push
enter
ret
fildll
push
sbbl
push
push
call
fnsave
pop
rorb
test
mov
insl
orb
xor
shlb
pop
pop
ret
clc
add
mov
pop
shl
adc
ret
stos
addr16
aas
mov
fcoml
rcrb
jl
sbb
inc
or
leave
push
loop
inc
bound
and
add
mov
sub
adc
xchg
add
dec
xor
test
jb
cld
mov
push
add
push
rorb
mov
sbb
lock
ret
xchg
mov
cld
jo
out
rolb
mov
mov
jg
adc
mov
inc
inc
add
ss
adc
adcl
add
aaa
push
loopne
adc
xor
adc
bound
mov
push
shll
in
pop
lock
sarb
mov
add
aas
outsl
dec
loop
add
sbb
mov
hlt
rolb
das
push
sarl
rolb
add
dec
mov
mov
scas
decb
jbe
add
cmp
adc
mov
inc
icebp
out
ds
fs
pop
leave
add
inc
enter
push
in
pop
je
push
fsubrs
shll
push
mull
frstpm(287
fildl
ret
or
movsb
push
ret
sub
push
fcoml
push
outsl
aaa
cld
add
je
int3
add
xchg
add
sbbb
and
xchg
je
push
xor
fidivl
std
add
mov
push
in
adc
cmp
hlt
push
loopne
mov
pusha
mov
mov
add
mov
mov
outsl
sbbb
test
sub
push
jne
and
and
inc
jl
incl
repz
cmp
or
cmp
add
je
mov
jmp
mov
inc
sub
lods
add
pop
incl
xor
pop
push
dec
sub
loopne
pop
pusha
jge
cmp
jmp
jecxz
popa
inc
loope
clc
mov
pop
loopne
in
sbb
inc
pop
push
mov
rolb
or
sbb
daa
loop
pushl
roll
adc
pop
push
test
pusha
adc
pop
pop
shlb
pusha
andb
test
and
add
pusha
add
xlat
call
sbb
and
loope
loopne
push
add
add
xchg
jmp
push
inc
pop
out
sbb
xchg
xor
fwait
push
ds
push
lret
inc
pusha
daa
dec
cmp
jl
and
xor
jle
in
scas
xchg
push
jbe
mov
inc
or
ljmp
movsl
pop
push
or
in
loopne
adcl
jecxz
dec
loope
sbb
xorl
jmp
in
mov
adc
or
inc
jmp
add
repz
ds
dec
xor
push
je
cmp
jg
je
add
xor
rolb
adc
ljmp
xchg
add
push
xchg
add
int
mov
pop
jmp
sub
sub
or
inc
orb
cwtl
sub
cmp
mov
loopne
and
push
and
push
push
popa
push
ljmp
push
icebp
mov
addl
outsb
mov
pop
push
push
rorl
movsb
pusha
pusha
add
addl
xor
adc
loopne
loopne
pop
xchg
jbe
dec
aam
push
push
pusha
mov
jl
je
in
cmpsb
mov
add
mov
pop
call
inc
mov
shl
jp
call
sahf
or
test
ds
mov
mov
add
stos
jne
add
loope
push
push
les
call
jmp
pusha
pushl
std
mov
and
or
call
xchg
add
ja
movb
push
or
mov
loopne
jl
call
and
pusha
inc
add
adc
push
jb
movsb
test
push
inc
pusha
jo
outsl
cli
pop
loope
pusha
dec
or
in
or
lea
das
shl
mov
mov
mov
int3
call
mov
adc
or
sbb
mov
inc
loop
push
lock
andb
repz
push
loopne
sbb
push
pusha
test
in
das
fisubl
mov
cli
push
call
cmpsl
fildl
pop
add
mov
test
je
add
mov
mov
test
adcl
adc
shr
or
or
clc
idiv
mov
loop
je
and
mov
inc
and
les
or
in
or
pushl
movsb
cmpb
pop
outsl
mov
rolb
mov
int3
ret
sahf
push
add
mov
mov
fidivrl
adc
or
aad
in
pop
jle
mov
jmp
mov
push
popa
add
sarb
jl
cmc
popa
add
dec
pusha
add
cmp
divl
jbe
adc
data16
out
ret
lea
jno
call
mov
ja
jno
add
les
icebp
pop
notb
push
push
mov
xor
sbb
push
inc
mov
cmp
mov
push
je
jge
aas
std
push
hlt
add
data16
ja
inc
sub
incb
pop
adc
mov
call
jbe
add
aaa
cld
mov
mov
push
bnd
mov
cmc
or
mov
adcb
pop
cld
push
mov
or
incb
clc
jl
adc
test
arpl
cs
shrb
ja
sbb
imul
clc
scas
push
fdivs
jne
mov
push
pop
or
sub
add
les
jmp
std
mov
es
mov
inc
xor
mov
repnz
jmp
int3
jne
push
call
cmpl
xor
scas
cli
out
or
xor
cmp
add
test
adcl
and
std
lock
cmp
sbbb
lcall
and
add
xor
scas
decl
xor
incl
test
push
adc
icebp
inc
cmp
xor
mov
shl
pop
cmp
ret
and
mov
pushl
add
add
cmp
cmp
in
sub
lock
inc
lock
pop
jno
or
mov
jne
jmp
inc
jo
lock
add
std
sbb
ret
push
enter
jno
lret
adc
dec
add
ret
test
call
jnp
inc
sbb
or
cld
jno
push
push
xor
xor
pop
shl
push
xorb
or
adc
lea
add
call
pop
das
jo
ja
add
inc
jo
push
push
mov
sub
or
adcb
push
add
dec
dec
mov
insb
mov
int3
leave
inc
push
mov
fisttpl
and
push
jb
xor
push
loop
outsl
pop
je
sbbb
enter
daa
push
call
mov
push
fwait
mov
shlb
or
and
arpl
push
xchg
or
inc
fdivr
in
outsl
scas
xor
inc
sti
push
mov
xor
les
jbe
inc
cmpsb
incl
lock
adc
or
push
push
pop
ljmp
add
mov
dec
in
dec
push
pop
sbb
sarb
mov
sub
lahf
mov
jecxz
jmp
xor
mov
cmp
jge
add
mov
call
stc
adc
cmp
sbb
inc
into
xor
pop
cmpsb
push
add
fwait
mov
mov
test
jmp
mov
call
pop
pusha
cmp
enter
jb
ss
call
lcall
mov
or
or
fs
mov
push
add
add
push
or
adc
and
or
cmp
xor
int3
adc
pop
pop
je
faddp
dec
jb
call
pop
lcall
push
incl
xor
xor
lea
jno
lods
mov
call
add
mov
inc
or
mov
lea
clc
xor
stos
push
lock
cld
sar
add
mov
jo
jne
adc
adc
and
push
cmp
fcomip
mov
inc
lar
mov
jne
add
adc
int3
add
mov
addl
add
xor
mov
ljmp
in
addr16
mov
push
push
mov
call
jne
hlt
jbe
mov
sub
xchg
scas
push
inc
iret
jmp
xor
inc
mov
icebp
sbb
xor
sub
test
add
add
mov
lock
out
pop
xor
in
add
add
add
cmpl
push
rorl
dec
jne
mov
lock
out
enter
stc
add
sbb
dec
add
ret
add
jne
xchg
adc
nop
ss
or
jae
mov
int
ret
mov
ret
rolb
dec
dec
je
addl
mov
orl
fldt
inc
mov
xor
adc
nop
cli
pushl
addb
jns
pop
pop
jp
data16
andl
outsl
lret
and
cs
xor
fdivrl
ret
jo
xor
add
add
fiadds
cmp
pop
mov
jp
je
xchg
sub
andl
push
dec
cmc
subb
addb
je
call
mov
shr
jb
addb
cmp
jne
mov
aam
je
mov
cmpsl
icebp
ja
adc
adc
pop
cmp
cld
add
aaa
jge
js
icebp
scas
add
ss
pop
jmp
mov
mov
lock
add
inc
jmp
je
lcall
mov
cwtl
cmp
jbe
mov
jmp
xor
add
inc
jmp
jno
shr
xor
xchg
pshufw
cmp
lea
loope
push
dec
add
aad
mov
scas
mov
jb
dec
test
add
sarl
or
sahf
jno
adc
push
jne
les
jg
add
jo
mov
push
push
push
add
or
jg
enter
adc
aas
jmp
or
or
testl
mov
xchg
pop
je
or
mov
jb
je
pop
icebp
xor
sbb
mov
in
cmpsb
push
or
push
mov
adc
add
fstpt
call
mov
ss
mov
or
jp
mov
mov
adc
cwtl
or
cmp
add
jo
ret
push
xlat
fwait
or
push
je
and
or
test
clc
les
jmp
inc
mov
cmp
test
sub
or
xchg
cmc
push
jb
jmp
push
imul
decl
in
sub
repnz
mov
and
sub
inc
jecxz
outsb
inc
je
lahf
clc
pushl
incl
je
imul
add
xor
push
mov
aam
mov
push
fistpll
jbe
loopne
mov
xor
adc
pop
sbb
lcall
sub
pop
pop
pop
xor
lock
xor
jmp
jge
add
xor
cmp
ja
add
inc
mov
push
xor
adc
jbe
call
clc
adc
lods
jbe
cwtl
test
or
scas
jp
mov
inc
mov
enter
lea
mov
mov
jmp
mov
je
jp
jne
lods
call
outsb
xor
push
imull
mov
mov
lock
adc
jae
in
call
fadd
cmovb
pop
adc
dec
mov
clc
call
xchg
xor
test
lock
insl
push
sahf
fimuls
addl
data16
cli
je
jl
outsb
inc
mov
jl
xchg
cmp
push
push
add
mov
test
push
scas
jl
int
xchg
sbb
jmp
push
paddd
sbb
dec
aad
test
fistpl
fisttps
mov
sbb
imul
fsubs
repnz
fisubl
mov
imul
icebp
mov
jge
test
out
call
jne
insl
push
rorl
push
pop
push
pop
pop
pusha
add
stos
mov
adc
inc
lret
xorb
jmp
sar
cli
andb
mov
sub
fistpll
push
mov
orl
lret
andl
push
int3
sarb
rclb
jp
loop
add
jnp
sbb
cmp
shr
push
repz
sbb
call
or
mov
lock
and
pop
in
pop
adc
lods
lret
push
push
sahf
sbb
cli
push
push
incl
sbb
add
rclb
orl
cmc
mov
enter
cmp
fcoml
stc
mov
pushl
cld
cmp
push
leave
insb
add
inc
or
pop
push
add
add
pushl
inc
and
in
add
and
push
cli
jmp
push
xchg
add
mov
orb
sub
or
or
push
rclb
rorb
pop
pop
ret
cmp
out
or
std
int
ljmp
mov
pop
add
push
decl
add
cmp
jp
je
adc
test
stos
in
mov
shlb
pop
ret
call
clc
inc
adc
insb
mov
mov
sbb
push
mov
pop
lock
lea
leave
lock
ljmp
nop
roll
xchg
js
push
cmc
mov
sarl
ljmp
push
inc
in
push
push
mov
push
jl
or
sbbb
jmp
jbe
je
data16
std
xchg
je
push
fimull
adc
int3
sar
adc
lea
push
sub
pop
add
incl
push
sbb
mov
mov
push
mov
call
aas
jle
mov
pop
add
mov
add
shll
or
outsb
out
test
push
loop
pusha
mov
data16
faddl
std
shlb
lods
sbb
xor
push
mov
je
call
inc
add
push
sbbl
int3
jo
push
pushw
xchg
jne
inc
pop
js
cmp
mov
insb
jne
push
into
aam
shlb
pop
inc
sahf
mov
test
jle
pop
lods
push
push
add
fildl
push
test
movsl
lcall
or
mov
in
je
loopne
fildl
xchg
loopne
in
mov
aam
mov
jne
out
test
pusha
sbb
mov
mov
dec
sub
nop
jbe
jo
or
rolb
inc
sbbb
hlt
pop
sarb
sbb
adc
cmpsl
call
dec
mov
inc
inc
hlt
pop
add
adc
cli
add
inc
inc
mov
mov
dec
insb
sahf
mov
pop
cli
dec
imul
push
pop
jb
add
call
loop
and
pusha
jle
push
out
lods
pop
js
pop
mov
and
and
mov
aaa
mov
pop
sbb
insb
bound
insb
inc
push
test
add
incl
push
call
add
add
mov
mov
mov
jp
lds
aas
mov
cmc
in
inc
pusha
testl
or
sub
mov
and
inc
and
inc
xor
ss
hlt
test
cmp
inc
call
inc
lock
cmp
pop
fstpl
cmp
xor
pop
jl
sbb
add
divb
rclb
jp
jne
mov
adc
sbb
stc
add
ss
push
fadds
add
adc
dec
add
out
or
or
and
mov
mov
sub
jbe
lock
or
cmp
push
add
loope
jl
add
test
loopne
int
or
add
or
xchg
decl
add
je
add
cld
add
push
fbstp
call
adc
pop
or
bound
inc
and
lods
dec
cmp
lea
push
jmp
mov
jb
pop
jl
mov
mov
imul
fiaddl
xchg
jmp
inc
and
cmp
add
insb
into
out
inc
or
pop
addl
sub
je
frstor
int3
push
sbb
mov
push
rorb
mov
fdivr
jmp
or
mov
dec
repnz
cmp
mov
cs
mov
pusha
insl
ret
mov
push
loopne
orl
lea
jbe
clc
pop
je
pop
mov
call
fs
or
notb
add
mov
add
call
fbld
dec
or
ss
scas
jl
pusha
mov
mov
mov
jb
xorb
or
xor
adc
enter
or
lock
or
shlb
mov
add
aam
or
pop
push
xadd
fistpl
int
sub
pop
adc
loopne
add
inc
and
adc
xor
loopne
xchg
dec
lea
mov
test
mov
or
fidivs
fistl
jb
add
mov
ljmp
aam
push
adc
add
mov
mov
lea
loopne
mov
add
dec
mov
and
in
inc
sbb
es
fs
fistl
push
add
pusha
add
hlt
cmp
or
pop
andb
sbb
loopne
nop
out
mov
and
scas
testb
mov
sbb
mov
mov
decb
add
sbb
popa
xchg
je
pop
add
repz
in
inc
cli
cmc
lods
push
push
pop
cld
push
and
push
call
std
ja
cmpsb
fcomps
push
cmovne
cmp
loopne
outsl
fdivs
jge
mov
syscall
add
stos
mov
add
hlt
mov
add
lret
out
les
adc
call
outsb
cmpsb
jg
push
sub
xchg
add
scas
or
mov
lods
mov
push
cld
scas
outsl
mov
mov
jbe
hlt
test
stos
bound
mov
outsb
aaa
cmp
pop
push
xor
hlt
jmp
movb
bound
jmp
add
add
aam
in
inc
adc
xchg
or
adc
push
push
sbb
decl
adc
pop
push
movsl
out
int3
aam
loopne
fs
out
sbb
ljmp
jne
fs
cmp
cmp
repnz
jno
push
std
cmp
jmp
mov
cmpsb
scas
fistpll
incl
adc
gs
jo
dec
hlt
pop
mov
jge
andb
pop
xor
scas
cli
mov
mov
pop
and
cmp
in
mov
jl
and
adc
outsl
hlt
adc
sbb
push
push
mov
ja
test
mov
add
clc
rolb
sub
jg
pop
std
pushl
or
ss
cmp
lock
jo
in
jle
add
je
stos
outsl
fists
mov
je
adc
mov
jmp
xchg
test
std
sbb
sbb
mov
add
push
inc
add
inc
icebp
gs
lock
dec
lock
fwait
movsl
xor
or
enter
mov
mov
mov
es
lock
add
add
push
test
xchg
jo
inc
cli
fwait
ds
mov
nop
jo
and
lock
decb
call
mov
loopne
inc
sahf
je
push
inc
aad
jecxz
scas
call
pop
sub
out
mov
fcomip
sbb
push
adc
fisttpl
cmp
pop
pusha
ljmp
notb
daa
mov
sarb
and
idivb
sbbb
sti
je
add
pop
mov
xchg
add
pop
push
add
movsl
stos
test
or
lods
and
mov
xor
les
inc
je
movb
mov
jecxz
add
add
xor
sbb
stos
mov
adc
movl
jge,pn
push
mov
cmpb
in
mov
pushl
push
testb
sbb
in
lock
xor
and
sbb
inc
rolb
and
pop
decl
sbb
outsb
inc
insb
iret
mov
jo
xor
jbe
inc
add
mov
or
mov
jb
cmc
jg
hlt
add
and
adcb
sbb
cmp
cmovb
cmpl
fbld
add
push
jno
call
andl
sub
sbb
mov
aam
jns
mov
cmp
stos
mov
mov
xor
dec
pop
jo
xorb
outsl
das
andb
add
pop
repnz
add
push
push
andl
in
sarl
ljmp
ss
push
push
test
inc
gs
xchg
movl
sbb
jo
jp
xor
ret
push
pop
je
inc
loopne
sti
add
sbb
adc
jmp
or
inc
lcall
dec
repz
sbb
push
and
adc
shrb
fucomip
xchg
xor
push
cmp
jbe
xchg
sub
push
jb
cmc
fcomi
out
shlb
push
jmp
test
lock
mov
xorb
inc
push
adc
inc
cmp
mov
dec
cmp
cmpsb
jl
rolb
mov
adc
cmp
jbe
std
mov
jo
and
sti
jne
mov
movsl
sbb
jle
jae
mov
mov
lea
jle
ljmp
add
cwtl
push
mov
sbb
push
sbb
incl
test
je
adcw
mov
loop
push
pop
add
mov
ret
fildl
xchg
shlb
cmp
lcall
cld
cmp
icebp
add
xor
mov
out
jmp
jg
lock
or
and
aaa
insl
clc
add
sub
scas
add
decl
lret
lock
pop
roll
pusha
sbbb
cs
cmpb
scas
or
push
sbb
inc
and
cli
stos
mov
adc
push
dec
xor
mov
mov
lea
mov
cli
pushl
scas
push
insl
mov
pop
push
and
xor
imul
addb
push
das
inc
psllw
sbb
mov
hlt
call
xor
jmp
std
cld
add
loopne
fisttps
mov
push
add
jl
add
dec
fstpt
imulb
push
out
jns
dec
inc
jo
inc
jb
push
in
fwait
in
add
leave
inc
lea
sub
xchg
popa
inc
push
icebp
mov
jb
movsb
repz
jo
pusha
fisttpll
mov
mov
fs
divps
mov
stos
fistpll
add
sub
push
mov
loopne
scas
mov
jo
in
test
ljmp
cmp
ljmp
pushl
add
cmpsb
out
add
mov
push
lock
jno
push
popa
ja
mov
jo
aam
cmp
testb
push
pop
push
icebp
test
cmp
inc
and
rcrb
xor
mov
mov
call
jo
jno
dec
push
lods
lcall
mov
das
mov
lcall
add
repnz
dec
and
jbe
dec
push
adc
pop
adc
mov
mov
jmp
cld
mov
sbb
lock
outsb
test
out
adc
inc
mov
inc
adc
mov
mov
mov
push
add
add
test
inc
fwait
dec
mov
push
jo
push
jle
test
jo
push
in
aam
neg
add
push
call
dec
and
mov
imul
test
pop
imul
stc
sbb
xor
stos
das
test
repz
mov
adc
pop
fnstenv
xor
or
mov
sti
xor
icebp
js
add
arpl
incb
xor
cmp
out
jo,pn
pop
pop
or
je
add
or
or
test
push
cmp
adc
and
lcall
and
xor
xor
add
scas
lock
push
xchg
mov
pop
fisubl
aaa
add
adc
insl
mov
xor
add
add
xchg
je
sar
mov
mov
mov
pop
lcall
insb
push
xor
add
or
inc
sbb
mov
push
test
movsb
sub
add
in
lahf
jne
mov
mov
int3
call
cld
add
shl
pushf
jne
push
add
arpl
mov
ss
mov
or
test
les
lcall
lock
push
xchg
mov
and
mov
sbb
dec
addb
cli
mov
mov
jo
mov
pusha
jno
pop
mov
pop
imul
xor
sbb
fisttpl
jmp
xor
sbb
ljmp
pop
rorb
add
jl
clc
inc
dec
sub
sbb
imulb
mov
xor
mov
and
mov
subb
dec
pusha
or
sub
xchg
inc
xor
cmp
or
add
mov
cmp
out
je
mov
outsl
jg
sbb
push
fdivrp
shr
or
mov
push
fstpl
xchg
test
and
or
sub
sti
shlb
jecxz
clc
xor
jo
and
mov
out
jle
js
adc
in
jmp
xorb
test
mov
call
inc
xor
push
xchg
pop
lods
mov
clc
sub
call
mov
cli
cmp
ret
out
add
sub
jg
lock
cmp
enter
inc
adc
add
adc
xchg
adc
mov
pop
ja
adc
dec
testl
incb
add
jne
repz
fimull
or
cmpl
test
je
test
call
sbb
or
push
test
adc
mov
outsl
test
pop
add
adc
frstor
jns
imull
aam
sbb
jge
pusha
call
jg
ss
ljmp
pop
push
pop
inc
push
inc
test
pop
gs
subb
push
add
sbb
add
into
insl
jg
aas
push
addl
jl
add
addb
fisttpl
ss
fisttpl
mov
pop
mov
fisttps
sub
inc
testb
shrb
aam
dec
call
push
add
mov
jne
cmpl
sti
jne
repnz
mov
adc
cmp
fs
jle
ljmp
add
stc
dec
aas
inc
fimull
lahf
sbb
cmp
xor
or
je
shrb
lods
in
add
pop
push
outsl
cmpsb
out
xor
into
pushl
leave
or
mov
insl
rclb
stos
xorb
sar
sub
push
rclb
jbe
test
xor
and
movsl
fisubs
rolb
xor
ret
jbe
sbb
add
scas
dec
fadd
inc
clc
dec
mov
add
sarb
or
xor
mov
mov
lds
xor
ret
ret
int3
mov
enter
lock
test
or
dec
add
call
pusha
push
shll
push
cmp
add
or
mov
rorl
repz
pop
and
aaa
shrl
or
jmp
mov
mov
and
xchg
or
shlb
add
jg
faddl
roll
add
fidivl
dec
mov
inc
imul
xadd
into
out
cmp
out
push
int3
scas
mov
mov
cld
aaa
add
push
mov
test
repz
mov
and
add
mov
scas
sarb
stos
push
cmpsb
repz
mov
sub
mov
push
mov
push
insb
popf
cli
inc
jl
jb
mov
das
add
rorb
mov
add
jmp
dec
scas
push
mov
xor
cs
loopne
jae
cmp
ja
or
sub
dec
loope
out
aas
or
mov
imul
pusha
jae
push
push
test
dec
loopne
call
aad
scas
push
or
mov
xor
mov
push
pop
mov
dec
mov
lea
sti
fsubrs
mov
pusha
ss
in
jl
or
mov
loopne
mov
call
mov
push
lea
sar
sahf
inc
dec
fbld
rorb
add
pusha
inc
jl
mov
in
pop
jb
loopne
pop
inc
adc
movb
movl
cld
loope
sbb
loopne
mov
js
sbb
mov
das
fisubs
pop
hlt
lods
mov
or
inc
loopne
xchg
mov
lea
das
push
adc
in
mov
test
fdivr
jmp
fildl
int3
jb
clc
mov
call
mov
pusha
jb
andb
add
push
push
pop
into
test
popa
fwait
ror
pusha
xchg
add
inc
and
jo
popf
or
jne
or
pusha
pop
push
scas
jne
mov
push
or
add
push
sub
test
pusha
or
or
inc
xlat
cld
je
mov
sub
push
pusha
cmp
mov
lcall
mov
inc
clc
call
mov
pusha
sub
sub
mov
fmuls
or
les
fs
les
inc
mov
cmp
int
loopne
in
jl
inc
movsb
outsb
sbb
inc
cmpsb
cld
pop
fcoms
dec
outsl
xor
ds
test
mov
call
pop
loopne
add
outsl
adc
je
lea
cs
mov
mov
ss
mov
push
or
cmp
pop
add
add
shll
or
loop
or
pop
or
mov
popl
rclb
sbbb
shr
adc
lods
push
push
subb
test
sti
loopne
mov
pop
pop
adc
das
js
loop
inc
int3
cs
pop
push
inc
ud2
mov
sti
and
sti
ja
lea
addl
lea
rclb
aaa
push
mov
and
jp
je
adc
mov
dec
pop
push
push
push
sub
and
xor
mov
leave
cmp
loopne
iret
jne
or
andb
mov
adc
add
loopne
jg
loope
or
jp
add
es
testl
jo
cmpb
adc
andb
repz
pop
negl
sarb
pusha
mov
pusha
aam
adc
add
or
ja
jns
in
push
and
bound
inc
mov
inc
hlt
jmp
push
add
popf
pusha
sub
pop
lea
loopne
decb
pop
loopne
rcrb
pop
leave
popa
sbb
pop
pop
push
inc
ffreep
add
test
sbb
call
test
and
jmp
test
loopne
into
pusha
ja
xor
mov
cmp
xchg
push
fdivr
jg
add
pop
and
push
lea
fistpll
add
arpl
add
inc
and
mov
cltd
shl
cltd
or
mov
mov
mov
pop
lret
je
jecxz
push
lods
add
adc
insl
mov
mov
xor
data16
push
or
nop
in
or
rorb
mov
mov
pop
idiv
add
add
insb
mov
das
rcrb
xor
sub
lock
xor
clc
add
dec
pop
mov
adc
sbb
push
mov
push
repz
inc
decl
push
fildll
cmp
inc
leave
xor
in
mov
das
mov
pop
jecxz
inc
jle
pop
sub
decl
pop
lock
cmp
mov
push
mov
mov
jle
inc
cmp
push
aas
or
xchg
cld
inc
add
or
cmpb
jg
push
call
push
adc
ret
xor
inc
movl
or
dec
ret
cmpsb
testb
pop
mov
pop
adc
jb
repz
test
jo
or
or
out
add
jae
jecxz
dec
jecxz
lret
pop
popa
jg
jne
cs
jmp
pop
lea
mov
cld
decl
fsubrs
add
movzbl
xchg
add
adc
mov
imul
or
mov
aas
sub
mov
scas
aas
repnz
push
or
xor
push
fcmovnu
pushl
nop
lock
lea
sub
xchg
repnz
push
sbb
adc
cli
aaa
cld
add
insb
and
inc
lock
lea
sbb
fcoms
dec
fs
ret
sub
add
push
test
add
pop
sbb
shrl
fs
inc
push
push
ljmp
adc
test
mov
jo
cs
dec
in
out
mov
call
out
or
add
int3
cmp
and
inc
inc
mov
mov
mov
or
push
push
push
je
cli
sbb
cli
xchg
jp
and
xor
ret
scas
push
jl
and
xchg
add
pop
fsubs
call
pop
add
mov
shlb
mov
sub
or
mov
and
add
add
call
and
lcall
sbb
push
lea
fidivs
xor
outsl
pop
test
cmp
or
icebp
fbstp
jp
pop
div
jne
jbe
cmp
adc
jbe
je
jl
test
call
mov
jmp
dec
jne
jno
xor
fwait
jle
jecxz
scas
lock
rol
lock
shr
adc
xor
imul
repnz
dec
push
sbb
call
inc
aam
mov
jo
shl
pop
cmp
mov
in
sub
and
mov
inc
repnz
mov
add
pop
test
imul
adc
push
fcoms
xor
add
xchg
mov
cmpb
cmp
ret
je
js
mov
aam
call
sbb
cs
push
je
add
sbb
xor
inc
pop
mov
jo
adc
and
mov
push
sqrtps
mov
adc
dec
lea
add
mov
or
int3
test
mov
call
xchg
xor
pop
dec
cmp
pop
mov
clc
cmp
xor
in
sub
push
push
cwtl
mov
jns
push
out
cld
cmp
pop
decl
loope
aam
int3
idivb
jne
or
and
call
pushl
push
call
jne
insb
cwtl
mov
call
xor
jmp
and
pop
add
mov
or
inc
addb
jmp
push
pop
fidivl
inc
call
shlb
jno
add
add
xchg
mov
and
and
add
adc
aaa
push
push
inc
fiadds
adc
jge
cld
jge
cwtl
pushl
mov
cmp
into
daa
mov
push
lea
mov
or
mov
xor
dec
xor
inc
clc
je
mov
ljmp
adc
orb
in
and
jp
mov
jo
cmpl
inc
jb
jb
inc
fsubr
rorl
cli
inc
fildll
jmp
or
fdivr
push
push
hlt
xchg
add
cmpl
sub
jne
stos
fiadds
xorb
orb
lock
cld
lods
call
loope
mov
lock
push
lock
je
call
sub
jg
pop
push
xor
mov
xor
call
xor
sar
mov
mov
icebp
add
clc
add
pop
jo
mov
js
inc
inc
mov
js
jmp
push
lods
sub
xchg
cmp
mov
cmp
jb
inc
mov
xor
mov
sbb
and
or
sbb
push
jbe
pop
add
je
call
or
mov
jmp
and
mov
clc
mov
add
pop
es
subl
shlb
jl
les
cmp
mov
dec
xor
outsb
and
xor
and
add
fs
insb
mov
fsubp
mov
pop
adc
out
pop
je
mov
lock
ret
mov
sub
or
jo
inc
ror
mov
cmp
call
or
and
mov
js
icebp
loop
je
jne
mov
incl
sbb
jns
push
loopne
or
hlt
xchg
lock
gs
aam
push
sbb
adc
xor
jl
rol
cmp
inc
push
jae
push
adc
jno
mov
add
test
cmp
mov
push
mov
push
stos
std
icebp
add
xor
mov
mov
mov
dec
add
mov
mov
xchg
cmpb
ljmp
add
out
jo
test
in
hlt
adcb
add
sub
sub
setg
mov
jne
adc
je
cmp
cmpsl
mov
mov
pusha
lock
call
lock
jnp
sbb
test
mov
call
jb
mov
push
push
mov
call
dec
test
push
jo
xor
or
and
push
pop
pusha
add
andb
push
push
fcoml
lock
mov
pop
push
jl
lock
xorb
je
or
xor
repnz
pushl
or
adc
andl
adcl
or
lock
jbe
and
sbb
adc
negb
push
add
sbb
sub
mov
mov
mov
js
je
inc
out
mov
push
xor
lcall
ljmp
js
js
xor
call
lock
aas
xchg
call
jbe
movsl
sbb
jg
add
pop
repz
test
sbb
incb
sti
jp
sbbb
adc
mov
jl
adc
or
jge
xchg
and
cmp
in
mov
xor
clc
sbb
jl
jmp
dec
pop
subb
add
and
pop
jae
mov
out
leave
mov
jmp
loope
cld
jl
xor
hlt
sbb
std
call
movsb
pushl
push
stos
push
pop
pop
nop
cli
test
fwait
sub
xor
cli
mov
mov
inc
pop
mov
jl
mov
pop
mov
mov
insb
inc
repnz
in
mov
or
std
sbb
and
push
push
lods
mov
out
adc
outsb
xchg
mov
push
push
sbb
jp
xor
mov
psllw
mov
addb
pop
xchg
jle
subl
clc
in
and
dec
loopne
mov
mov
push
call
adc
enter
fsubl
inc
fsubl
aad
adcb
or
xchg
xor
lcall
enter
cmp
andl
and
or
add
cmp
lock
sahf
jp
adc
adc
xchg
push
call
addl
add
repz
aad
mov
mov
dec
mulb
mov
test
or
cmp
test
dec
lahf
cmp
bound
rcll
test
mov
jle
ds
add
dec
sahf
dec
add
scas
mov
andl
mov
pop
or
subl
inc
or
test
xor
adc
cs
in
adc
push
into
fmulp
mov
mov
fucom
sub
push
cs
fimuls
adc
cmp
adc
or
push
add
les
pop
je
inc
mov
mov
mov
jl
fiaddl
or
pop
cli
cmp
mov
inc
or
int3
call
clc
mov
testl
mov
sub
cld
lock
inc
mov
xchg
scas
pop
or
jne
and
das
xor
rclb
or
mov
shl
aaa
add
int
jmp
jg
mov
xchg
xor
pop
cmp
dec
cld
stos
fiadds
out
and
call
xorb
cmpsb
mov
testl
int3
dec
pop
sbb
push
mov
sub
xchg
and
lock
loopne
mov
jo
xchg
std
mov
xor
mov
in
mov
xchg
xchg
pop
or
outsb
cltd
in
shrl
test
sbb
in
pop
push
out
flds
testb
outsb
add
or
enter
data16
popa
add
mov
add
mov
pop
scas
mov
mov
jl
sar
fstl
jge
add
addl
mov
clc
fdivrs
js
daa
dec
add
xlat
mov
scas
sahf
mov
test
test
adc
jb
out
div
dec
out
add
out
aaa
je
cmp
stc
pop
push
filds
or
in
aas
jge
jne
lea
aaa
jmp
ret
jbe
jb
jl
pop
call
lea
out
cmpsl
paddd
jbe
adc
or
sbb
jge
sbb
and
aad
or
jb
inc
xor
mov
jecxz
push
in
adcb
call
jb
orl
fbstp
lods
add
pop
mov
lea
scas
jmp
mov
jl
mov
mov
jge
mov
push
lea
push
xchg
jo
mov
test
orb
push
mov
mov
ljmp
sbb
mov
jl
pop
out
aaa
or
icebp
test
cld
dec
sarb
aaa
sahf
jmp
cmp
sub
and
jbe
daa
push
hlt
sahf
jle
fwait
scas
subl
mov
ljmp
mov
mov
mov
loopne
leave
sahf
dec
out
fadds
call
mov
adc
shll
testb
jne
sub
scas
xor
push
jae
adc
lea
inc
jb
cli
ss
dec
pop
or
idiv
punpckhdq
mov
jmp
push
cmp
push
inc
push
in
xor
sub
scas
aas
inc
shll
enter
jne
cmp
jmp
inc
ret
jne
jb
mov
loopne
lret
or
mov
and
lea
call
gs
mov
imul
add
mov
ss
jb
lods
dec
pop
xchg
out
add
dec
aam
sub
pop
add
jl
clc
add
push
push
mov
add
mov
mov
pop
imul
xor
cmp
add
fmull
ja
mov
mov
push
decl
add
jo
cmpsb
or
out
int3
call
fstpt
cs
mull
pop
clc
cmp
push
adc
fbstp
sbb
sbb
testb
sub
fidivrs
cs
push
inc
push
sub
test
gs
mov
daa
fmul
cmp
add
int3
mov
loopne
mov
jle
xor
mov
sbb
out
mov
add
pop
mov
mov
and
xorl
inc
scas
das
push
or
xor
push
fucomp
daa
jle
in
push
lods
or
rol
repz
sbb
cmp
call
adc
or
pop
div
inc
mov
das
push
es
add
push
outsb
fcomi
sub
jecxz
add
loopne
mov
pusha
cld
mov
cmp
and
mulb
or
call
jl
adc
xlat
xor
cmp
mov
push
cmpsb
mov
or
fs
int3
pop
mov
outsb
adc
cmp
inc
add
and
push
loopne
cld
inc
mov
xchg
push
or
cmp
add
mov
pop
pop
add
push
ss
cmp
shr
push
je
inc
or
mov
push
cmp
and
mov
daa
lea
jl
sbb
cmp
push
add
je
scas
test
jecxz
push
es
lods
jg
xor
push
push
mov
pop
mov
cmpb
inc
cmp
fiaddl
ljmp
ds
neg
mov
push
cli
loopne
cwtl
ret
cmp
es
push
fmuls
push
cwtl
add
or
push
pop
adc
push
and
mov
clc
adc
mov
cmp
xlat
mov
push
call
test
xchg
lock
hlt
jmp
xchg
fsubl
pop
hlt
pop
or
pop
lcall
xor
push
imul
or
clc
scas
inc
lock
or
sbb
mov
push
sbbb
adc
rcr
das
lea
je
xchg
add
gs
add
mov
xor
mov
cmp
pop
mov
xchg
adc
sbb
sbb
xchg
cmp
aaa
dec
emms
xor
mov
adc
or
jae
push
clc
add
pushl
outsb
push
pop
ss
add
jns
aad
negb
add
or
in
jae
push
jecxz
push
rclb
mov
shrl
jne
test
pop
in
lea
pop
xchg
movsl
into
push
in
cmpsb
mov
lods
mov
mov
mov
call
jnp
test
jmp
push
cwtl
or
decb
and
clc
dec
pop
dec
ljmp
jmp
push
fcom
sub
inc
lea
into
testb
pop
sub
shr
pop
lods
data16
call
push
jbe
push
loop
push
jo
mov
or
mov
mov
push
mov
dec
clc
cmp
push
cmp
ljmp
je
cmp
je
xor
jmp
mov
jmp
mov
jmp
mov
jmp
mov
inc
je
outsb
push
jbe
push
mov
jnp
into
mov
call
movsbl
call
sub
dec
fimuls
add
mov
dec
test
add
add
into
pop
popl
into
pop
test
jno
pushf
and
call
notb
push
les
je
or
jae
call
jmp
and
add
shrl
lea
stos
pop
pop
in
es
push
mov
mov
call
xchg
fmuls
cmp
jle
ljmp
inc
in
clc
out
mov
int3
leave
mov
cmp
pop
imul
cmp
mov
inc
iret
daa
adc
sbb
mov
clc
xor
sbb
cmp
mov
ljmp
out
adc
dec
cmp
mov
push
ret
or
or
mov
lcall
push
sahf
jbe
xchg
insl
inc
xor
push
int3
test
dec
cmp
nop
loop
adc
idiv
pop
test
vmwrite
pop
outsl
push
push
stos
adc
shlb
fdiv
dec
shll
mov
add
or
fcomps
mov
ror
pop
pop
cmp
cmp
add
or
call
les
cmpsb
or
add
mov
pop
inc
out
dec
pop
mov
jl
rcrl
sub
cmpsl
div
pusha
xchg
loope
mov
jnp,pn
pusha
pop
popa
pop
lret
mov
imulb
dec
icebp
inc
dec
jg
sbb
xchg
int3
daa
adc
or
fisubrs
ss
out
push
test
adc
xchg
mov
adc
mov
jmp
or
cmp
fldt
loopne
pop
add
addb
bound
std
scas
cli
pop
jl
or
es
movb
xchg
cmp
jne
std
and
shrl
mov
and
fisttps
mov
mov
shlb
xchg
adc
testl
adc
push
popf
rorb
idivb
mov
add
pop
adc
mov
mov
hlt
inc
mov
mov
push
xchg
sub
adc
jno
push
inc
test
je
cmpw
jae
pushl
pop
push
adc
dec
adc
cmp
jmp
jg
inc
or
mov
xchg
call
lods
hlt
shlb
push
ds
std
jne
add
push
push
vphaddwq
vmovhps
jne
push
lea
cmpsb
mov
xchg
lea
lea
mov
idivb
sub
inc
inc
cmove
jmp
add
jne
xchg
xchg
xchg
push
push
push
push
clc
mov
leave
mov
push
testb
adc
or
jg
mov
push
pop
sub
cld
sub
lock
sbb
or
aaa
sub
call
dec
scas
pop
fmulp
into
push
call
and
add
adc
into
jne
aad
add
out
cmpl
lods
call
outsb
loopne
add
add
xor
mov
lods
cmp
movsb
mov
and
nop
outsb
mov
sbb
add
push
lock
mov
outsb
mov
orb
cmpsl
pop
add
xchg
sbb
mov
cli
jmp
jg
and
aaa
jbe
testb
sub
push
fsubrp
fisubrl
ja
cld
mov
mov
clc
dec
jae
js
adc
xorl
aad
fisttps
add
je
pop
sti
sub
add
sub
pop
sub
fldt
mov
int
mov
test
or
mov
push
pop
jb
inc
sahf
fbld
and
cmpsb
enter
add
lock
hlt
mov
mov
jb
add
lahf
jecxz
insb
or
imul
add
sub
nop
jne
outsb
add
ds
cltd
loopne
sbb
ds
jbe
sahf
daa
jmp
call
fidivrl
pop
xlat
cmp
outsl
in
xchg
sub
cmp
out
lea
mov
enter
pop
rorl
xor
or
mov
repnz
push
ds
jg
push
je
pop
mov
bnd
je
cmp
lea
cmp
ja
data16
adc
add
pop
lock
sub
inc
cmp
aas
push
jmp
jae
dec
push
mov
sub
jl
fnsave
hlt
test
push
add
insb
jae
dec
mov
push
sub
sahf
add
enter
mov
add
add
divl
test
push
mov
test
hlt
popa
or
fwait
outsb
lock
mov
fiadds
clc
xchg
push
cmp
cltd
insl
mov
xchg
movsb
add
pop
sub
jne
imul
testb
add
cmp
test
js
fdiv
mov
ja
add
add
adc
dec
mov
enter
add
cltd
sbb
jbe
cld
enter
push
mov
shlb
pop
add
mov
add
add
je
test
push
pop
push
out
add
push
cld
rorl
div
push
jae
mov
mov
and
jbe
adc
jmp
add
mov
mov
jg
jo
jle
mov
xor
loopnew
insb
cmp
mov
dec
fcompl
mov
mov
call
ret
sbb
cld
add
fcmovnu
pusha
jl
add
loop
cmp
cmpb
pop
or
call
mov
mov
cwtl
andb
xor
orb
jg
mov
inc
sbb
xchg
subb
cld
jge
xor
lock
fdivp
ja
je
inc
push
push
mov
inc
iret
out
xorl
push
roll
pushl
fcoml
push
sub
xorl
add
mov
das
mov
pop
cld
addl
cmp
or
idiv
or
mov
dec
andb
dec
add
rcll
jnp
in
add
mov
mull
sbb
addl
call
leave
fimuls
orb
jns
mov
cli
cmp
sbb
mov
jb
push
adc
aam
add
in
jne
add
mov
popa
movsb
das
decb
lahf
test
incl
inc
in
pop
call
push
test
cmpl
sub
mov
add
adc
pop
imul
push
pushl
push
mov
scas
call
loope
push
jge
jmp
call
repnz
sub
mov
fsubs
cld
push
cmpb
js
adc
mov
jbe
orb
add
add
xchg
or
add
out
inc
in
add
push
push
mov
icebp
or
dec
ret
call
pop
adc
and
sub
mov
call
adc
jmp
fisttps
pop
cmp
mov
mov
test
xlat
jmp
je
mov
test
add
mov
mov
aaa
rcrl
mov
mov
ffreep
cmp
cmp
mov
add
or
scas
call
adc
mov
mov
shlb
add
mov
add
daa
add
mov
xchg
jo
or
cld
mov
inc
call
orb
push
hlt
sbb
in
pop
mull
mov
add
das
mov
movsl
jbe
sbb
sahf
and
add
mov
adc
xor
lods
push
fimuls
xor
add
jbe
and
or
movb
pop
ret
fiaddl
outsb
or
add
push
xor
push
ret
test
pop
sbbb
fidivl
xor
lock
add
sbb
into
mov
rcrb
cwtl
mov
pop
std
in
or
cmp
mov
test
jo
jb
and
addb
pop
add
add
add
test
pop
fnclex
outsb
mov
movsbl
or
push
push
xchg
add
mov
and
cli
and
hlt
int
faddp
pop
and
sbb
sub
fistl
addb
cmp
pusha
xchg
dec
pusha
mov
addr16
push
inc
pusha
add
inc
nop
sbb
or
sub
xchg
mov
add
fwait
je
cmpb
push
loopne
add
out
ret
leave
cmp
test
add
aam
test
sahf
mov
test
inc
mov
repnz
mov
inc
adc
ret
sub
pusha
jg
lock
pop
call
xchg
xor
pusha
ds
mov
or
adc
fwait
mov
xchg
dec
cmpsl
call
popf
rorb
add
jo
add
dec
insb
xor
bound
out
mov
push
cs
pop
movb
in
loopne
mov
sub
mov
or
and
lds
rorl
loope
loop
jo
ret
xor
inc
jl
cmovp
outsl
je
mov
mov
nop
std
call
or
cmpsb
lock
out
push
mov
cmp
outsb
ret
scas
push
popa
or
push
jp
jle
popl
sub
hlt
jo
xor
loopne
dec
pusha
pop
pusha
addr16
or
or
pusha
or
push
push
push
pusha
xor
jge
jbe
pop
adc
pop
lock
or
jg
mov
loopne
loopne
sbb
xor
loopne
pusha
push
sbb
push
add
mov
std
and
subb
gs
sbb
pop
fsubl
popa
aas
out
movsl
incl
dec
fdivrl
or
cli
sub
or
add
sub
mov
jbe
lea
pop
divb
adc
outsl
push
sbb
pop
push
push
filds
mov
test
and
sarl
loopne
and
push
pop
loopne
jp
adc
add
xor
cmp
sub
mov
sbb
xchg
loopne
add
dec
mov
add
jmp
and
inc
clc
jb
jl
jbe
pusha
xchg
push
fisttps
popa
sub
inc
or
push
test
pop
loopne
clc
sti
jne
add
movsb
push
push
mov
int3
adc
idiv
xchg
xorb
adc
mov
inc
add
mov
test
push
cmpsb
mov
in
mov
or
test
sub
sbb
shlb
dec
add
outsl
jg
mov
mov
cmp
lea
add
inc
lock
inc
into
pop
jae
in
mov
inc
pusha
add
out
jne
dec
imul
or
mov
aam
dec
jg
les
lret
clc
addl
sub
in
les
cmp
mov
dec
push
or
sbb
je
sub
push
xchg
rolb
std
push
add
ret
je
gs
and
outsb
mov
popa
enter
adc
or
lods
fldt
pop
push
frstor
cs
pop
cld
test
push
push
test
filds
push
or
push
popa
jno
mov
insl
fldt
cli
sub
jno
add
lods
pusha
dec
ljmp
mov
cli
xor
or
icebp
jns
rcl
repnz
adc
cmp
push
inc
fsubrl
lods
bound
loope
cmpsb
inc
xor
fdivr
add
pop
xor
mov
jo
notb
or
add
push
je
movsb
mov
fcomip
or
xor
jge
test
add
jo
jg
jbe
shlb
mov
lock
jb
mov
std
add
mov
movl
aam
add
icebp
jg
add
sbb
and
or
vmwrite
cmp
mov
pusha
inc
sti
inc
mov
sarb
clc
sbb
mov
jbe
je
xor
repz
clc
lea
pusha
vsqrtss
mov
jb
cmp
sub
mov
add
add
adc
xor
dec
xor
pop
xor
push
aam
xor
mov
pop
pop
jecxz
push
sub
sar
xchg
nop
add
adc
pop
cmp
xor
jne
incl
aaa
mov
int3
lods
push
sbb
in
jne
pop
push
add
scas
push
add
inc
js
add
add
inc
ficoml
andb
xor
lea
fnstenvs
push
pop
mov
loopne
mov
pop
je
push
pop
incl
inc
in
mov
xchg
incl
pushl
dec
jb
sti
add
push
call
stos
xchg
add
adc
decb
insb
outsl
jo
call
mov
push
and
and
clc
jne
hlt
call
or
lcall
or
push
push
sti
xchg
pop
and
sbb
nop
mov
jne
cmpsb
xchg
lock
test
xor
pop
inc
add
cmc
lea
clc
jmp
orb
cli
inc
xor
dec
and
clc
mov
stos
inc
das
dec
and
cmp
nop
xchg
push
or
dec
add
sbb
fbld
adc
mov
or
int3
mov
call
jecxz
lock
jg
sub
cmpb
test
or
push
leave
jmp
lea
cmpsb
mov
jnp
cmp
jne
in
cli
imul
mov
adc
cli
cmp
mov
jp
icebp
pop
dec
mov
shrb
je
xor
dec
or
leave
or
daa
inc
icebp
testb
jg
mov
cmpb
jl
incl
lds
push
push
lret
add
jb
in
clc
adcl
mov
fdivp
mov
cmovs
push
adc
mov
mov
je
call
mov
out
data16
ss
xchg
add
decl
lcall
jbe
mov
mov
dec
add
sarl
or
mov
sbb
add
xor
addb
out
vcvtps2pd
rorb
dec
add
mov
cld
mov
scas
clc
insl
mov
out
imul
sub
jo
push
sbb
jne
subb
pop
aas
fs
cmpb
add
rolb
lods
lea
cld
in
add
add
ror
adc
insb
add
mov
sbb
mov
add
mov
mov
stos
adc
pop
fistl
call
xor
add
pop
sub
add
pop
pop
scas
mov
call
or
mov
add
xor
mov
add
push
sub
add
mov
out
jmp
lret
adc
insb
call
lock
lods
test
jo
push
xchg
pop
pop
loopne
jg
aaa
call
or
addl
add
lea
pop
jmp
and
orb
push
outsl
cmp
popf
xchg
xchg
rdpmc
fcmovnb
mov
mov
fldt
mov
call
mov
mov
push
lods
add
xor
jne
js
jl
jnp
mov
icebp
adc
ds
in
jp
lock
popf
push
pop
test
dec
push
push
pop
mov
jg
or
or
mov
mov
mov
jbe
and
sbb
mov
fldcw
xor
adc
push
sbb
dec
and
sbb
xor
and
dec
sub
sub
xchg
addb
pusha
cmpsl
adc
mov
mov
mov
pop
xor
test
mov
cld
xor
arpl
sub
lcall
and
dec
xchg
inc
pop
inc
sbb
inc
and
dec
in
fisttps
dec
repnz
jb
dec
stos
sub
hlt
push
push
icebp
add
pop
sub
clc
incl
xor
cld
lock
xchg
adc
stos
mov
jnp
sbb
mov
call
test
pop
mov
add
repz
jl
sub
or
rclb
mov
push
xchg
jecxz
fisttps
inc
adc
dec
cmp
cmp
add
movaps
mov
dec
or
bound
jo
pop
mov
and
add
add
ja
pop
loopne
push
mov
lock
mov
dec
adc
xor
cmpsb
push
cmp
loopne
popa
push
and
fdivrp
inc
cmp
popf
sbbb
adc
xor
shr
ja
add
fdivrs
pshufw
je
push
sub
jg
push
pusha
pop
push
shl
and
push
push
fs
sub
and
adc
call
in
mov
jg
cmp
mov
add
add
sub
pop
int
adc
test
icebp
add
lock
add
sarb
push
jp
mov
daa
mov
ljmp
mov
lock
call
add
and
adc
dec
adc
mov
lcall
and
mov
movb
add
inc
adc
add
shlb
mov
xor
sbb
push
cltd
addl
mov
stos
cltd
push
adc
sar
xor
int3
adc
pusha
imul
and
jbe
push
mov
cmpsb
ljmp
mov
add
mov
sti
call
shlb
push
aam
xor
pusha
or
scas
icebp
ss
mov
je
aas
lods
aaa
add
add
or
push
add
add
lea
jecxz
loopne
pushl
xchg
ds
call
divl
push
test
pop
add
cld
xor
in
add
hlt
lea
cmpsl
mov
xlat
repnz
andl
testb
mov
out
add
hlt
mov
push
jp
jo
fmull
jle
test
dec
xor
cwtl
xor
jmp
inc
mov
jb
dec
sbb
mov
fdivrl
shlb
orb
std
push
inc
adc
cld
xor
decl
xor
xor
adc
add
shrb
xorl
addr16
fwait
ds
loopne
mov
dec
cmp
or
inc
movsb
xchg
push
jb
dec
test
fs
mov
nop
jmp
add
loop
push
inc
inc
push
arpl
jmp
ja
push
push
mov
pop
ret
jmp
add
push
inc
clc
cmp
add
add
push
je
inc
cmpb
inc
adc
dec
push
sbb
xchg
sub
call
dec
into
and
add
adc
fwait
or
push
dec
ja
add
call
movsl
cmp
add
push
xchg
jp
push
push
arpl
push
pop
xor
inc
pop
mov
inc
jmp
fwait
or
push
pushf
push
mov
dec
out
add
aas
ficomps
add
fsubrs
xorb
pop
push
or
cmp
adc
int
jo
push
sbb
pop
dec
push
pop
int
fs
sbb
mov
add
test
jne
dec
dec
cwtl
orl
sbb
and
push
das
cmp
push
mov
ret
sbb
cli
add
or
ljmp
mov
je
testl
xlat
outsl
xchg
jmp
rcrb
mov
insb
andb
jmp
adc
inc
mov
rcll
orb
ja
sbb
lea
fiadds
xchg
push
xchg
nop
sbb
leave
mov
repz
sub
popa
adc
iret
mov
ret
loopne
push
dec
lock
je
std
push
ljmp
and
gs
cmp
andb
int
icebp
cmp
bound
xorb
arpl
mov
nop
cmp
add
lods
adc
fisttpl
sbb
iret
push
andl
jb
add
mov
sbb
mov
call
shll
in
cmp
paddsb
add
or
inc
call
dec
dec
or
repnz
inc
outsl
rclb
mov
push
lds
mov
inc
push
cmp
mov
pusha
cld
int
jne
call
imul
lock
mov
jp
je
jb
ss
lods
pop
sbb
rol
into
sub
ss
mov
sbb
or
les
jne
or
inc
std
cmp
je
adc
icebp
add
cmp
shrl
add
mov
test
pop
mov
and
adc
adc
add
rcl
cwtl
adc
add
shl
add
adc
dec
clc
aaa
dec
mov
xadd
mov
jmp
sub
aaa
lods
call
fcoms
arpl
mov
jp
or
pushf
fcoms
addb
jbe
dec
push
xor
outsb
or
adc
enter
adc
add
xor
cmpsb
mov
pop
push
push
lea
add
dec
adc
inc
rolb
mov
add
shl
add
test
xor
lcall
int3
add
pusha
roll
lock
inc
adc
mov
sub
lcall
add
dec
jecxz
fwait
sub
xchg
or
add
add
mov
call
test
leave
mov
jg
sub
pusha
lahf
ljmp
push
dec
jg
and
call
sbb
mov
add
call
inc
je
rclb
iret
jge
test
rclb
test
or
push
aaa
pusha
divps
int3
mov
adc
aam
cmp
fwait
pop
je
lea
mov
jo
mov
add
cmp
sub
loopne
aas
or
adc
pusha
or
jb
clc
inc
add
cltd
aam
sar
pop
imul
cwtl
xlat
jae
add
jo
jmp
loopne
mov
into
sbb
mov
xchg
pop
decl
insl
aas
lods
add
out
cmp
and
xchg
shlb
loopne
rorb
lcall
push
sbb
aas
cmp
nop
mov
lretw
push
jb
mov
or
cmp
into
call
sti
out
das
ljmp
loopne
je
and
rcrl
or
add
inc
or
adc
sub
inc
out
xorb
out
xor
pop
jo
or
loope,pt
data16
push
jo
hlt
enter
mov
fucomip
cmp
xchg
lea
pusha
jb
or
xchg
xchg
lea
inc
sti
lea
enter
adc
fcomps
mov
mov
xor
mov
sub
into
inc
nop
ss
outsl
jbe
dec
shlb
mov
testb
or
cld
loopne
or
sarb
push
jle
icebp
jg
mov
testl
or
push
cld
push
enter
pusha
add
xorb
mov
les
mov
cmp
jb
xorl
ret
mov
push
add
lea
push
mov
and
std
jg
call
rolb
loopne
mov
add
or
mov
hlt
jmp
mov
lock
loopne
add
mov
xchg
leave
sbb
add
shl
mov
inc
int3
pop
ret
add
dec
ret
mov
ss
add
inc
divb
sub
xor
std
sbb
push
call
adc
or
ljmp
mov
jle
mov
cmc
sbb
scas
and
pop
and
mov
pop
pusha
jle
mov
adc
inc
aam
mov
pop
inc
fdivl
shrb
outsl
cmpsb
cmpl
or
mov
scas
cli
jne
inc
pop
leave
iret
lea
aaa
int3
add
outsl
xchg
out
insl
in
inc
sar
imul
add
aam
std
pop
pop
mov
mov
cld
fisubrs
pop
cmp
and
rclb
sbb
jb
or
add
mov
mov
movb
mov
testb
add
out
mov
std
popf
xor
and
mov
push
add
or
je
mov
sub
pop
sub
inc
out
call
or
imul
cs
loope
mov
call
sub
test
xchg
push
test
aaa
mov
ret
dec
cli
test
loope
add
cmp
pushl
int3
in
pushl
mov
das
call
ja
call
and
call
lret
bound
mov
inc
lds
ss
or
push
fcomps
outsb
mov
add
outsb
lock
mov
mov
nop
je
je
loope
ret
hlt
ljmp
adc
imul
or
mov
js
jne
js
je
test
and
ljmp
mov
and
cmp
in
push
mov
imul
pop
call
fidivrl
inc
pop
movsb
ret
push
dec
sub
add
lods
push
xchg
xor
add
xor
add
fwait
sti
jg
loopne
jb
scas
push
loopne
mov
adc
dec
lds
ss
pusha
pop
add
jp
sub
mov
jb
fs
neg
jg
data16
je
lea
nop
xor
xor
stc
xor
loopne,pt
jne
call
test
lock
test
leave
fs
ljmp
add
adc
mov
enter
mov
mov
pop
sbbl
unpcklps
push
jl
or
call
inc
stos
enter
jo
pop
popa
test
fsubr
jle
cli
sbbb
aad
lock
jo
into
jb
inc
mov
je
add
push
sub
xchg
addl
add
std
pushl
add
std
jo
xor
push
xchg
sbb
dec
inc
iret
xor
push
pop
cs
loopne
incl
data16
dec
insb
jo
je
data16
cmp
mov
pop
pop
sarb
icebp
lea
aas
add
iret
mov
and
loopne
mov
stos
shlb
in
inc
insb
es
cmpsb
insl
mov
je
sbb
sub
or
lods
ljmp
jo
test
rclb
xor
jb
and
mov
mov
sbb
push
aam
incl
mov
add
pop
add
and
xchg
jae
jmp
push
mov
inc
xorb
push
push
push
pop
nop
mov
mov
dec
adc
xor
adc
push
incw
mov
pop
int
call
push
je
les
cmp
inc
pop
push
mov
push
mov
test
lock
xor
jge
sub
aaa
lcall
test
mov
add
jo
xchg
jl
or
clc
push
test
mov
ljmp
add
fwait
dec
stos
pop
mov
push
push
and
add
add
loope
and
jne
xchg
cld
xor
call
add
das
clc
add
xor
add
inc
incl
or
cltd
mov
ljmp
jmp
ljmp
aas
mov
xor
inc
xor
cmp
jle
cmp
cmpsl
mov
in
js
inc
in
mov
lea
scas
call
imul
xlat
mov
xchg
ret
mov
jnp
ja
jle
add
mov
fcoms
ja
mov
mov
je
push
lea
int3
addb
lock
push
hlt
add
and
jmp
daa
shl
lahf
ret
call
and
xor
adc
fildl
xchg
call
int3
pop
flds
cli
pop
lock
add
cmp
mov
push
jbe
mov
xor
aam
cmp
jp
int3
mov
lock
mov
test
jmp
fmull
out
ja
lock
mov
pop
jbe
lods
inc
xor
call
cmp
ret
lret
adc
push
mov
nop
xor
mov
jno
nop
push
in
lods
lret
xor
push
sub
dec
push
addl
inc
sub
inc
push
xor
inc
cmp
loopne
push
add
add
sbbb
sbb
pop
mov
pop
cmp
add
inc
sub
push
ja
adc
incl
mov
adc
in
xchg
and
in
fwait
mov
lret
sub
aad
mov
loopne
jge
loopne
incb
adcb
mov
xor
clc
mov
xor
mov
roll
test
jo
in
inc
roll
cs
xchg
jo
mov
enter
sahf
scas
cmpsb
jo
jl
jo
jo
pushf
pop
xchg
das
add
test
mov
fyl2x
add
inc
int3
stos
inc
bound
lock
test
lods
std
mov
xor
add
ret
add
mov
scas
add
icebp
lcall
data16
test
xchg
imul
inc
out
test
mov
inc
add
mov
or
clc
mov
sbb
ret
or
scas
mov
scas
fsubl
in
outsb
sub
mov
rcr
stos
ljmp
scas
stos
in
test
test
add
mov
pop
inc
ret
or
jo
je
call
push
mov
inc
adcb
mov
mov
dec
out
sbb
pop
ss
xor
push
mov
xchg
call
fsubrl
jb
call
jne
xchg
sub
jbe
or
int3
jnp
cltd
lea
outsl
sub
and
cli
call
inc
testl
fs
or
lock
pusha
movsl
jle
dec
loope
add
push
pop
pop
je
jbe
lret
lds
incb
push
mov
xor
mov
test
inc
test
data16
add
fwait
cmp
or
dec
or
pop
je
pop
pop
push
and
push
push
cmp
jl
enter
pop
pop
fbld
and
xchg
and
mov
and
adc
mov
push
call
jp
jae
bound
mov
cmp
repz
sti
jo
mov
inc
loop
in
outsb
push
push
icebp
imul
setbe
push
sub
fwait
xor
movsb
in
shlb
dec
mov
test
dec
dec
fbstp
jno
lcall
mov
inc
xchg
mov
fbstp
addl
ja
mov
mov
or
inc
sub
xor
lock
inc
push
xor
inc
out
push
add
jno
fdiv
das
xchg
lock
sub
jbe
int3
inc
xor
std
add
xor
push
out
lock
aas
adc
arpl
les
xor
test
add
mov
nop
inc
sti
jmp
and
xor
fistl
incl
adc
cmp
je
sbb
int3
ret
mov
shl
stos
push
fs
sarb
lods
repnz
fnstcw
mov
cmpsb
xor
outsb
or
movl
add
push
clc
das
push
mov
jo
adc
adc
cld
mov
pop
repnz
cwtl
add
fcoms
aam
or
lock
incl
cwtl
cmp
lea
adc
or
push
call
fisubrs
leave
sub
sub
pusha
push
sub
inc
adc
or
add
push
test
dec
pop
shrb
or
push
mov
adc
jo
jno
or
pop
adc
iret
or
int
movsb
sub
and
jno
pop
and
pop
fidivl
adcl
andl
jnp
mov
shlb
std
sbb
cmpsb
xor
lock
mov
jae
movsb
and
daa
les
inc
push
inc
lret
lcall
test
add
les
adc
or
xor
insb
push
mov
cmp
call
dec
pop
je
mov
sahf
lods
push
mov
or
or
outsb
mov
jp
xorb
or
mov
shr
mov
ret
sub
popf
movsb
mov
push
add
jo
dec
lock
push
push
add
fsubr
adc
ret
movsb
ret
sahf
xchg
push
cmp
outsl
pop
icebp
cmp
andl
jo
dec
inc
pop
add
xchg
ja
cmp
ret
js
dec
js
mov
push
cmpb
pop
movsb
js
or
jmp
push
and
jl
adc
pop
mov
mov
inc
add
lea
ss
sub
jo
cmp
or
sub
add
subb
xchg
aam
sbb
lea
xorl
add
ljmp
sub
xchg
mov
adcl
mov
xchg
push
push
aam
pop
loope
dec
cwtl
cmpb
sub
add
inc
and
push
fwait
and
scas
lcall
in
push
and
nop
out
test
push
movsb
xor
leave
cmp
or
fucomi
outsb
ret
aad
mov
jl
sub
mov
mov
push
adc
xor
aam
push
test
or
bound
or
push
push
fists
fcompl
movsb
outsb
cmp
repz
ja
scas
add
int3
mov
stc
outsl
fnstsw
test
jbe
call
and
and
inc
push
fwait
push
xor
jb
or
inc
jno
push
orb
cmp
and
sti
add
call
insl
push
je
jb
pusha
mov
je
pusha
scas
mov
aaa
add
lock
sub
xor
ret
mov
jo
pushf
ss
adc
mov
add
jmp
dec
push
inc
push
jecxz
mov
ret
push
sarb
pop
push
and
mov
add
call
pop
mov
mov
into
mov
and
cmp
sbb
push
rcrb
and
add
mov
lea
mov
aaa
add
add
add
rclb
and
add
scas
push
andl
test
roll
jno
dec
call
les
fists
call
je
sarb
add
rolb
pop
mov
push
adc
sbb
pushl
in
pop
out
addl
shlb
cmpb
jne
les
lcall
sub
je
iret
add
jl
push
clc
sarb
rorb
push
ja
push
pop
enter
cmp
dec
out
call
adc
push
jb
aam
xchg
jae
jg
adc
add
xchg
ret
rorb
aam
push
stos
add
insl
xor
cmp
scas
sbb
push
push
xchg
sbb
outsb
mov
push
or
insb
and
test
adc
rol
in
pop
icebp
outsl
pop
and
jne
call
jo
dec
xchg
mov
loopne
xchg
mov
insl
clc
call
dec
cmp
aas
mov
fs
roll
add
add
xchg
outsl
pop
orb
cld
mov
clc
outsl
add
add
or
inc
repz
test
mov
clc
jmp
orb
fstpt
test
test
fistpll
or
push
fdivl
inc
cld
push
test
push
repz
out
popf
dec
pop
xchg
add
cld
pusha
hlt
inc
ljmp
pop
or
fwait
push
ud0
jmp
or
loopne
mov
pop
sarl
mov
int3
xor
inc
sbb
or
orb
fadds
dec
push
scas
lea
scas
pop
scas
mov
inc
out
or
dec
or
pop
inc
sub
push
add
or
popa
add
lret
das
jo
call
mov
inc
clc
testl
pusha
cmp
ret
inc
add
loopne
jecxz
clc
dec
push
js
cmpl
call
daa
hlt
fldl
or
loope
in
xor
test
push
mov
js
adc
xor
jp
push
mov
jl,pt
cs
push
mov
pop
or
sarl
adc
push
or
outsl
mov
sbb
pop
punpcklbw
je
rorb
fcomp
je
cs
xchg
cmp
pusha
xor
fs
call
sbb
imul
lcall
mov
shll
dec
loopne
jl
mov
fwait
js
jmp
fneni(8087
add
push
dec
mov
add
add
call
ror
jg
mov
push
push
push
je
jno
mov
jb
decb
sbb
jne
push
lea
push
pop
add
in
inc
inc
aaa
and
aaa
or
inc
cwtl
je
add
ss
decl
adc
idiv
subl
pop
pop
loopne
mov
inc
cmpl
and
lock
and
push
push
and
push
cmp
call
mov
xchg
enter
adc
jg
adc
inc
sbb
push
inc
enter
cmp
mov
or
jg
loopne
inc
sti
mov
andb
or
cmpsb
int
loop
mov
jmp
push
adc
adc
cmp
addb
mov
pusha
push
repnz
cs
shrb
jg
out
mov
loopne
sbb
pop
dec
stc
popa
es
push
add
xchg
mov
cmp
dec
push
lods
call
call
mov
clc
loop
aad
xchg
sbb
jo
add
js
push
push
js
loop
xorb
call
in
loope
fsub
lahf
pop
in
call
pop
lock
test
jbe
push
rolb
testb
je
pusha
jno
std
cld
popa
adc
add
inc
movsl
ja
add
cwtl
test
cli
hlt
fwait
xor
mov
pop
out
xor
push
pushl
ret
pusha
inc
sub
call
dec
and
mov
bound
add
mov
jl,pn
andb
mov
out
lcall
std
inc
pushf
push
scas
call
push
popa
sbb
call
jne
popa
pop
mov
sbb
js
mov
pop
xchg
add
outsl
mov
add
loopne
test
rolb
andb
jbe
push
push
add
decl
sbb
pusha
mov
shlb
sbb
leave
aaa
cld
incl
into
call
xchg
pusha
sbb
fldenv
mov
fs
jbe
push
loopne
lea
rolb
sahf
pop
cltd
and
jge
mov
or
jp
ss
cwtl
sub
in
mov
stos
mov
pop
add
push
and
cld
jnp
add
pop
imul
sbb
or
mov
dec
iret
mov
clc
incl
jb
sbbb
je
call
pop
jno
mov
add
mov
lock
mov
mov
test
fistpll
jno
xchg
inc
mov
sbb
adc
clc
add
or
xor
dec
sbb
jns
mov
nop
test
ja
add
arpl
rcrl
jne
dec
add
clc
subl
loopne
mov
mov
sub
hlt
jo
mov
lret
and
insl
js
icebp
in
cmp
jge
mov
jg
mov
inc
hlt
add
xchg
push
int
jbe
cmp
and
sub
dec
inc
and
mov
lock
call
xchg
es
fs
jg
dec
xchg
das
call
jne
cmp
sahf
gs
popa
push
xchg
mov
adc
mov
adc
cmpsb
or
xchg
dec
dec
add
js
jbe
sar
std
sub
movb
or
jo
jbe
js
adc
mov
add
adc
packssdw
sub
in
xor
mov
adc
es
jmp
sbb
xchg
mov
xchg
jae
mov
cmp
cmp
push
cmp
adc
mov
sbb
nop
es
dec
sbb
mov
sahf
and
xor
mov
je
push
stos
push
shlb
mov
mov
and
add
movsb
sub
xor
push
push
lock
sahf
push
mov
jno
mov
push
inc
pop
stos
mov
mov
leave
jmp
xor
mov
mov
fdivr
adc
cmpsb
pop
jmp
stc
cmp
cmp
sbb
fs
mov
push
call
adc
pop
cwtl
mov
pushl
cmpsl
pusha
decl
xor
inc
jecxz
add
xchg
inc
shlb
jle
push
icebp
scas
and
push
cmp
adc
incl
sub
fdivrs
add
adc
xchg
add
fwait
mov
cmp
add
mov
outsl
sbb
or
test
or
or
stc
or
clc
mov
inc
jb
pop
pop
je
pop
ret
xor
mov
daa
stos
xchg
and
push
cmp
adc
xor
dec
es
dec
add
icebp
inc
jge
mov
push
mov
je
push
xor
cmp
repz
mov
push
jo
pop
loope
clc
push
adc
ljmp
divb
xor
pop
jbe
pop
pop
jbe
fistl
xor
lock
mov
sub
mov
mov
jno
iret
aam
popa
jo
mov
in
lock
add
mov
add
or
xor
add
xchg
cmpsb
adc
pop
mov
xlat
adc
adcl
cmp
sub
cmp
and
jo
mov
adc
adc
rcrb
sub
mov
adc
jnp
or
xor
jmp
adc
push
pop
mov
fsubrp
cmp
jmp
mov
add
adc
xchg
mov
popl
jge
add
lods
push
pushf
ficoml
jo
ja
adcl
cld
js
aas
add
cmpsb
jl
in
loop
or
dec
xchg
mov
clc
call
xor
pop
dec
mov
or
lret
mov
xor
dec
push
add
jg
jo
mov
or
add
mov
mov
loopne
or
cld
add
iret
jbe
push
inc
fisubrl
dec
test
or
mov
out
push
xor
xor
jo
xchg
jmp
cmp
jo
dec
call
lret
inc
jg
jo
inc
repz
rcrb
push
adc
pop
inc
fists
jns
pushf
loopne
mov
pop
dec
incb
in
dec
ret
mov
push
or
sub
xor
call
mov
decl
loopne
fistpl
pop
call
movl
inc
add
mov
fimull
pop
cmpsl
call
inc
jo
sub
push
call
imul
add
lock
jl
mov
mov
jl
ljmp
stos
sbb
sub
or
jl
dec
rol
sub
scas
adc
add
jno
mov
add
mov
mov
fcoml
sbb
xchg
sti
repz
xor
pushf
out
push
inc
jl
dec
and
clc
adc
mov
pop
repz
sbb
out
sub
pop
cmp
call
cli
and
clc
or
or
pop
mov
andl
mov
pop
and
cld
xor
sbb
jg
loopne
std
xor
sahf
jo
add
jg
cld
jl
mov
in
mov
mov
mov
jmp
imul
stos
sub
jle
call
xor
sub
cmp
or
inc
testb
lret
sti
pop
xchg
out
pusha
xchg
imul
jb
hlt
jg
enter
jg
loop
ss
pop
mov
out
scas
adc
xor
cli
notb
mov
inc
cmp
clc
inc
xor
or
jns
cmp
push
pop
add
clc
push
inc
data16
sbbl
int3
in
sub
ss
test
je
in
push
sub
push
mov
pop
jmp
sub
incl
int3
imul
adc
test
in
imul
lock
mov
jne
fwait
jmp
xorl
test
add
adc
fidivs
pop
ret
xor
call
negl
idivb
stc
mov
ljmp
mov
pop
and
mov
push
shl
xor
push
add
add
ja
mov
call
push
push
pop
sbb
and
clc
and
cld
adc
fnsave
je
into
dec
or
das
adc
xor
test
inc
ficomps
jo
push
xchg
inc
aaa
andl
push
mov
lcall
dec
pop
ret
or
rorl
push
xchg
pusha
mov
mov
adc
adc
insl
mov
mov
jnp
imul
jae
pushf
je
call
push
pop
add
test
push
inc
bound
mov
adc
popf
jb
pop
mov
fcomps
sbb
scas
je
and
fdivs
or
push
inc
out
xor
rolb
imul
inc
jmp
or
mov
sub
pop
mov
mov
add
pop
stos
mov
and
jp
pusha
mov
mov
dec
jmp
sbb
fistpll
jne
push
out
push
pop
ja
or
mov
ljmp
out
mov
decl
out
mov
inc
lock
dec
adc
jle
hlt
fildl
cld
push
andb
mov
xchg
add
mov
xchg
mov
push
dec
add
cltd
jbe
test
icebp
ljmp
mov
ljmp
jo
decb
arpl
xchg
inc
icebp
pop
ror
add
add
cwtl
lock
clc
cmpsb
insb
cmp
xchg
inc
jmp
movsb
sti
push
je
mov
call
mov
inc
stos
mov
fstp
cmp
ret
cmovns
cmp
scas
cld
inc
pop
ljmp
ljmp
enter
or
pushf
add
rclb
cmp
jne
into
hlt
sub
mov
adc
mov
adc
jo
and
adc
bound
inc
sbb
mov
aam
test
cld
cmpb
rorl
ja
mov
xchg
hlt
in
adc
mov
dec
add
les
outsb
cmpsb
rorb
inc
pop
add
incl
pop
movsb
mov
mov
add
sub
nop
pop
jo
rorb
dec
in
lret
hlt
das
clc
cld
pop
adc
lods
adc
or
dec
mov
arpl
push
mov
or
inc
xor
loop
jge
aas
push
dec
sub
lock
nop
shll
mov
rclb
pop
cmpsb
repnz
jg
push
repnz
jecxz
xchg
or
add
adcb
dec
or
and
pop
cmpsb
cmp
cmp
and
pop
imulb
dec
jmp
call
push
loop
daa
testb
cmpb
push
pusha
lea
jp
shll
movsl
mov
aaa
or
mov
mov
testl
add
mov
mov
mov
mov
je
mov
les
fcoms
test
hlt
add
cmp
add
fistps
mov
xorl
or
addr16
stos
or
pop
out
push
sbb
sub
sar
call
or
pusha
testl
pop
loopne
jbe
sbb
aad
jmp
ret
xchg
dec
outsb
jns
inc
rol
push
int3
aas
icebp
jp
jne
push
mov
pop
push
adc
mov
mov
mov
lahf
scas
loopne
push
stos
sbb
push
jne
out
fsubrs
sbb
ds
je
shl
inc
dec
or
jl
push
and
shlb
enter
clc
daa
ret
fbstp
std
rorb
push
mov
icebp
ljmp
lods
xor
jbe
or
pop
and
mull
mov
incl
lret
rcrb
sub
std
sub
and
pusha
pop
xchg
subl
adc
adc
mov
jmp
or
inc
sub
pusha
cmp
int3
jp
loopne
or
bound
loope
mov
push
mov
lea
add
jp
gs
add
andb
push
lock
int3
jnp
popa
inc
add
add
loope
add
lahf
loopne
xchg
mov
cmp
aam
or
jo
pusha
cmp
pop
push
das
aad
xchg
push
stos
call
lea
loopne
xor
js
add
jecxz
jo
cmp
loopne
loope
mov
in
jbe
sbb
jmp
jl
or
inc
pusha
add
flds
popa
push
out
push
push
cmp
in
js
bound
add
ja
or
pusha
sbb
pop
dec
ljmp
xor
popa
xchg
call
dec
mov
and
daa
ljmp
loopne
mov
mov
insl
cli
decl
fsubs
jo
jns
or
add
jp
ljmp
mov
pop
popa
add
and
mov
jp
inc
cmpb
sbb
pop
adc
in
fs
jle
xor
fsubs
and
scas
dec
popa
das
fcomp
subl
jg
repnz
pusha
adc
cld
pop
mov
add
mov
push
loope
loopne
imul
pop
jbe
lods
cmpb
stos
or
sbb
adc
mov
xchg
test
adc
addb
arpl
push
inc
mov
pusha
mov
cld
or
hlt
inc
dec
xorb
cli
enter
inc
cmp
jle
push
pop
fs
pop
add
or
adc
dec
sub
adc
pusha
and
subb
add
dec
clc
mov
pop
in
sub
mov
mov
pop
cmp
hlt
gs
fsubrs
add
mov
rcll
xchg
jmp
in
add
lea
push
scas
push
mov
push
fs
in
sub
cmc
fisttpl
xchg
ror
testb
jb
popa
jb
data16
inc
pop
fdiv
add
dec
lock
sbb
pop
call
and
loope
mov
add
add
loopne
xor
shlb
jmp
addl
outsb
add
xorb
ss
inc
lcall
adc
mov
lock
mov
sbb
push
lock
push
pop
add
std
cmpl
push
shrl
push
in
pushl
aaa
mov
push
shl
outsl
or
pusha
add
loopne
std
or
cmp
faddl
jg
popa
xchg
loopne
lods
loopne
int3
mov
jge
fimuls
xchg
aas
dec
and
movsb
or
ret
cmp
cmp
lock
and
mov
dec
jecxz
out
movsb
sub
pop
inc
pusha
adc
and
pop
or
add
cwtl
addl
das
call
out
adc
cld
es
xchg
push
lret
loopne
ljmp
mov
add
mov
loop
repz
icebp
adc
dec
mov
cmp
std
jo
add
add
push
roll
push
or
loope
inc
mov
mov
jne
mov
lret
jo
inc
adc
data16
outsl
pushl
or
jne
jo
lea
scas
lea
scas
call
xchg
sub
add
add
push
pop
add
stos
mov
sti
jmp
lock
cld
xor
mov
repnz
sbb
xor
push
loopne
enter
nop
mov
xchg
cmp
xorl
lea
outsb
and
aaa
inc
outsl
push
cmp
sbb
push
add
movsb
incl
jmp
mov
mov
and
mov
lcall
push
fdivp
decl
dec
je
idiv
jmp
mov
mov
stos
das
js
aam
pusha
dec
jmp
push
add
xor
movsb
adc
loop
sub
or
jo
mov
add
mov
and
rcrb
ds
push
lock
push
inc
or
inc
js
lock
clc
cmc
dec
aam
call
mov
push
pop
inc
jo
scas
shlb
mov
aam
push
mov
je
push
or
loopne
enter
lods
push
xor
testb
add
jge
jg
aam
je
or
insb
jno
adc
cs
pop
inc
sbb
incl
mov
add
jmp
je
call
mov
jo
repnz
jmp
test
inc
dec
icebp
fcoms
or
xor
fcomps
or
pop
sub
lock
pop
inc
data16
jo
jne
imul
mov
daa
call
dec
insb
hlt
mov
mov
mov
lahf
xor
loopne
scas
push
mov
mov
or
push
icebp
add
jne
sbb
jno
rorb
in
lahf
jl
ret
stos
je
jb
testb
nop
xchg
push
bound
in
mov
add
or
push
adc
xor
ret
cmp
fdivs
or
sub
sbb
sbb
out
out
or
jo
out
push
or
push
lcall
mov
cmc
push
or
shl
loopne
call
in
idiv
aaa
jmp
xor
call
or
push
push
jb
outsl
js
cmc
push
je
sti
and
sbb
xor
jo
add
push
cmpsb
lock
je
mov
sbb
repz
pop
sti
mov
pusha
jne
jmp
fbstp
mov
xor
mov
adc
ret
roll
loope,pt
add
out
and
or
loop
dec
or
cmp
mov
mov
push
push
fstpt
sti
scas
pop
call
js
xchg
jne
mov
jnp
int3
and
dec
add
or
pop
adc
jmp
repnz
adc
jb
sarl
rolb
jne
pop
mov
sub
mov
por
addl
shlb
les
repz
mov
mov
pop
repnz
jg
out
cld
mov
inc
mov
aas
repz
cmp
je
jo
movsl
mov
jne
loopne
fdivrp
pop
push
rclb
pop
jb
test
movsb
in
aam
mov
jl
das
movsb
jmp
call
mov
lcall
in
push
movsl
push
mov
fidivs
jb
or
jne
les
inc
mov
lock
adc
mov
pop
or
pop
popf
fimull
insb
xor
jbe
adc
mull
push
mov
cltd
xor
sbb
test
std
push
push
test
not
ret
adc
cmpsb
mov
call
and
pop
mov
inc
pushf
outsb
xor
je
cmp
rol
aas
aam
adc
xor
sti
xor
sbb
inc
shrb
aam
xlat
xor
mov
pop
cmp
add
stc
xor
pop
jo
pusha
inc
out
inc
xchg
pop
pop
pop
jo
push
test
dec
leave
and
mov
mov
xor
push
and
lock
jb
rorl
jo
nop
add
pushf
inc
jg
pop
mov
cld
incl
notl
lock
xchg
aas
jmp
jo
sub
cld
mov
add
mov
adc
lock
push
test
cltd
call
sbb
ja
cwtl
mov
pop
lea
add
jmp
mov
xor
rol
ret
out
das
mov
stos
stos
push
shlb
push
clc
push
adc
inc
push
xor
clc
mov
enter
sbbb
mov
shll
fbld
addb
lock
cltd
dec
mov
pop
mov
inc
xor
add
or
push
decl
dec
lret
popa
xchg
inc
cli
ret
ja
adc
in
mov
into
push
jmp
shrb
cmp
or
sbb
aad
dec
push
ret
movzbl
add
test
inc
push
xchg
sub
lods
add
xor
add
js
ss
decl
imulb
outsb
add
dec
add
sub
int3
shlb
fisubrs
mov
stos
outsb
xlat
cs
lcall
sbb
outsl
insl
xor
xor
stos
or
lea
jno
jp
push
out
test
shr
push
or
add
je
inc
fildl
jmp
jae
jno
mov
ljmp
test
cmpsl
mov
pop
xorb
loop
push
or
push
add
sbb
stos
push
les
inc
fsubs
hlt
insb
cmp
or
cld
sub
inc
jmp
jb
push
pop
pop
mov
sub
inc
pop
je
adc
jl
xor
imul
mov
or
adc
fwait
jb
adc
or
sbb
adc
notb
call
jbe
mov
jo
xchg
dec
jg
call
sub
sarl
add
divb
mov
mov
add
dec
jle
mov
add
aam
mov
mov
add
sbb
jne
test
jg
rolb
sbb
inc
add
or
fisubrl
fbstp
cmp
add
jmp
xor
in
fsubrp
xor
or
aas
and
je
jmp
and
inc
testl
insb
fldcw
lcall
scas
je
dec
jo
and
jle
jbe
int3
lcall
shlb
mov
and
cld
cmp
ja
loopne
jg
jmp
xor
dec
dec
push
add
add
push
dec
std
sub
sarl
je
cmpb
hlt
jmp
xchg
xor
jmp
add
adc
xor
insb
adc
rcl
push
movsb
dec
insb
nop
pushf
jo
jb
outsl
stos
jg
xchg
sub
inc
mov
je
repnz
cli
lods
mov
enter
shll
pop
mov
test
stc
or
es
sbb
mov
insl
sbb
pop
shlb
nop
les
out
cltd
sub
cs
xchg
inc
mov
adc
js
cwtl
mov
rcrb
inc
mov
fcomi
fists
xor
movl
dec
or
dec
sbb
lcallw
pop
adc
add
push
fs
pop
jl
hlt
inc
test
jae
adc
mov
add
pop
jmp
fildl
push
test
mov
mov
stos
or
stos
inc
pusha
ljmp
lret
dec
clc
mov
nop
add
sub
faddp
pop
sbb
or
int
mov
adc
adc
imul
lcall
add
sarb
out
jge
test
inc
fistpll
adc
push
lods
xchg
dec
xor
popa
sahf
dec
sub
xchg
add
adcl
filds
push
orb
and
push
push
adc
push
add
ret
je
add
shlb
xor
mov
addb
test
addb
lock
jbe
mov
sub
aam
fcmovnu
adc
push
orb
icebp
and
mov
and
lret
mov
add
mov
xchg
push
or
cmp
lock
sahf
xchg
or
mov
push
scas
cmpb
andb
daa
mov
pusha
push
add
inc
and
adc
std
mov
rclb
pop
cmpsb
fsubs
push
cmp
push
add
cld
dec
add
mov
cmpb
add
mov
jl
adc
dec
rorb
add
or
movsb
ljmp
mov
jne
jg
push
invd
jp
add
jb
pop
sub
arpl
test
ret
gs
mov
sbb
xlat
inc
out
mov
and
or
movsb
fstl
dec
push
imul
lret
jnp
inc
data16
sub
add
rcll
cmp
mov
shlb
inc
add
push
shlb
hlt
and
lock
or
mov
fsubs
jle
dec
loope
pop
movsb
or
add
loope
inc
lret
clc
xchg
add
out
ds
insb
js
fbstp
in
shlb
adc
xor
daa
add
xchg
call
pusha
or
add
addl
negb
xor
cmp
daa
sbb
add
mov
loop
add
ret
sub
sbb
mov
hlt
mov
mov
jmp
loopne
decb
aas
ret
add
dec
call
add
adc
je
xchg
ror
inc
sti
data16
aas
inc
and
call
xorl
mov
inc
mov
jmp
dec
pop
dec
jmp
push
and
sub
ret
test
inc
cmp
mov
cwtl
loopne
fcoml
push
je
or
sbb
adc
mov
dec
mov
stos
adc
sarb
mov
adc
shlb
leave
inc
shlb
pop
mov
imul
int3
leave
cmp
lock
mov
dec
sti
nop
test
loop
cmp
mov
mov
pop
loopne
dec
add
pushl
or
add
mov
shl
adc
or
push
call
inc
jle
push
xor
loop
incb
add
and
mov
cltd
hlt
add
adcb
push
inc
and
movsl
cmc
mov
cmp
mov
sbb
mov
je
call
pusha
mov
jmp
add
cmp
jo
or
aam
mov
or
loopne
jnp
insl
aaa
cmpsb
in
mov
mov
je
jg
sbb
gs
push
add
adc
jmp
mov
fwait
and
test
pusha
std
incl
fsubr
pop
lret
fs
add
loopne
ret
loope
test
stos
cmp
xor
jg
sbb
or
insl
adc
jmp
jmp
inc
loopne
fs
mov
add
pusha
push
adc
in
ljmp
js
cmp
and
jmp
cmp
xchg
jb
mov
pop
js
or
cmpl
jo
lcall
xchg
mov
or
popl
lcall
mov
inc
inc
mov
lea
add
jbe
je
adc
lea
adc
inc
mov
scas
ds
mov
andb
or
push
mov
aad
roll
add
jle
xchg
sbb
jg
push
pop
sar
faddl
lds
cld
outsl
sub
pusha
jns
lea
jp
add
xchg
aaa
pop
int
dec
testb
pop
dec
clc
popl
cmpb
add
loopne
movl
mov
jge
xor
test
ds
cli
ljmp
cltd
in
mov
push
mov
mov
rcrl
mov
xor
xchg
add
sub
adc
xchg
jg
mov
and
pop
mov
pusha
cltd
loopne
cmp
pop
punpckhdq
ja
data16
lea
out
and
in
mov
pusha
xor
and
add
pusha
xchg
out
and
addb
test
cmc
aas
push
je
mov
add
add
jl
push
mov
sbb
adc
ljmp
xchg
push
xchg
loopne
repnz
int
inc
call
mov
clc
loop
inc
inc
mov
sub
je
lret
popa
dec
jg
loopne
adc
adc
lret
inc
daa
icebp
and
outsl
xchg
lret
repz
loope
inc
and
pop
pop
dec
loopne
push
sbb
or
call
push
and
cli
ja
cld
and
or
adc
fs
testl
nop
pop
jno
jbe
icebp
add
sub
mulb
dec
popa
aas
lcall
lret
push
push
cmp
je
pusha
or
mov
enter
mov
add
outsl
aaa
cli
adc
adc
je
jno
dec
sbb
add
or
rorb
or
stc
pop
ret
ss
pop
cmp
cs
xchg
movsl
xor
testb
and
stc
pop
dec
movsb
xor
mov
push
popf
lcall
mov
fwait
cmp
icebp
dec
enter
push
add
icebp
and
les
jl
or
mov
dec
add
call
repz
mov
movsb
nop
jbe
mov
jno
ret
aam
aaa
mov
mov
push
in
aaa
lds
xor
xor
sbb
test
es
mov
dec
ljmp
lods
push
jno
adc
adc
add
in
push
cmp
sti
push
je
movsb
push
or
mov
lods
xchg
mov
loop
fdivrp
out
clc
call
mov
pop
xor
gs
incb
mov
jo
mulb
lock
sub
xorb
sbb
dec
or
mov
cmpb
xchg
lock
add
push
and
cmpl
push
aad
cmp
cmp
in
pop
sbb
add
fnstenv
jmp
or
out
sub
in
cmp
sub
jns
dec
xor
and
add
sbbb
test
icebp
xchg
ss
push
out
shlb
outsl
cli
in
sbb
enter
add
pop
xor
lds
mov
imul
sub
mov
inc
cmp
inc
sub
jmp
lock
les
jmp
outsb
mov
or
aad
cmp
pop
mov
jmp
testb
sbb
mov
fnstenv
push
sbb
je
mov
hlt
and
hlt
cmc
add
push
insl
add
sub
and
mov
hlt
cmp
mov
xchg
mov
jg
ds
rol
mov
xchg
jl
addb
add
mov
inc
jle
mov
lock
mov
jle
sbb
pop
pop
and
faddp
jae
mov
fildll
popa
sub
xor
or
sub
mov
xchg
add
jne
rcrl
mov
mov
je
jne
add
mov
je
inc
add
push
fldt
jmp
adc
pop
inc
popa
or
cld
push
sbb
pop
lock
sub
ret
mov
jb
and
or
jecxz
mov
sarl
jne
int3
rorb
adc
dec
inc
mov
rcl
aaa
cli
ja
mov
mov
sub
loopne
push
outsl
jo
xchg
xchg
lcall
leave
inc
and
jmp
adc
leave
push
mov
inc
add
rorb
inc
and
out
inc
test
fwait
or
roll
ss
push
into
xchg
or
clc
add
lcall
mov
ret
dec
lock
adc
push
add
add
call
pop
loopne
cli
inc
addb
or
sarb
repnz
inc
clc
push
ljmp
cmp
setne
inc
je
mov
test
repz
stos
adc
test
xor
add
filds
sarl
inc
sbb
fs
inc
lock
jmp
jmp
cmc
or
repz
adc
cld
adc
pop
jnp
icebp
mov
inc
les
sbb
jl
shlb
or
ss
inc
jbe
pop
xor
add
int
mov
pop
jmp
std
fbld
or
sti
xor
sbb
adc
push
je
adc
sbb
lock
decl
testl
hlt
add
adc
and
push
lcall
dec
repnz
pop
adc
jmp
outsl
sub
mov
jmp
mov
sbb
jl
or
mov
push
sbb
pushl
andb
pusha
and
daa
shrb
xchg
add
in
dec
mov
xchg
inc
pusha
pcmpgtb
mov
aad
icebp
fdivl
adc
aas
cmp
ss
xor
inc
push
lds
jo
sbb
add
mov
and
cmp
inc
ja,pt
mov
andl
or
cmp
pop
sahf
scas
mov
insb
nop
fists
lods
cmp
ljmp
subb
outsl
push
ret
xorb
and
cmc
adc
or
mov
jnp
jo
pop
and
mov
insl
mov
bound
xor
mov
rol
shl
rolb
add
xor
or
sub
sbb
and
mov
mov
xor
sub
xor
fucomi
jno
add
repz
repz
add
xor
add
xchg
or
lods
enter
mov
loop
xor
pop
push
call
xor
mov
add
mov
lock
pop
call
insb
dec
jo
jb
adc
xchg
popf
ret
add
subb
mov
test
insb
out
scas
pop
test
jo
mov
data16
lods
mov
xchg
adc
add
jns
icebp
add
mov
mov
xor
ret
std
jae
shl
ret
adc
jo
adc
or
ss
cwtl
scas
add
rcll
push
dec
jne
inc
shlb
push
dec
roll
ljmp
hlt
ret
inc
or
dec
jbe
ret
dec
ja
mov
jg
mov
jno
stos
rorl
int
jg
xor
mov
ret
cmp
jne
subb
or
and
push
cld
add
add
mov
loop
pop
and
loope
mov
inc
adcb
lods
sbb
mov
xor
jo
xor
mov
les
pop
xor
inc
jbe
adc
cmp
push
or
scas
fisttps
lret
pop
push
out
mov
jnp
jo
add
data16
cld
fadds
jle
mov
cmp
sbb
add
add
sbb
push
xor
out
add
and
jmp
jne,pt
mov
add
lcall
test
mov
jbe
pushl
jmp
add
lds
add
mov
cmp
inc
andb
jo
xor
lock
lods
mov
mov
push
sub
idivb
or
mov
mov
pop
adc
jg
add
call
or
cmp
or
add
dec
push
hlt
jmp
add
sub
jbe
sub
push
std
push
jmp
lret
or
lock
or
mov
xor
add
mov
aad
insb
roll
cld
mov
clc
insl
test
mov
adc
cmpb
adc
add
orb
lret
jl
movsb
inc
stos
sbb
in
ret
cltd
fmuls
sbb
adc
xor
or
hlt
push
xchg
and
add
xchg
clc
sub
mov
adc
add
mov
or
jbe
add
xchg
xor
cmp
scas
mov
inc
sub
insb
xor
dec
popf
push
sbb
add
add
into
loop
add
pop
jmp
xor
or
jb
xor
push
orl
push
and
inc
adcl
jb
adc
pop
add
dec
test
xchg
push
or
lds
lock
cmc
or
int3
adc
das
clc
mov
fadds
lea
jl
add
ja
es
pop
cmpb
adc
adcl
push
inc
negb
inc
stos
ret
in
inc
xor
test
dec
xor
orb
loope
push
mov
orb
jmp
push
inc
cmp
xor
adc
sub
inc
dec
and
incb
mov
imul
rorb
mov
pop
add
in
jge
cwtl
adc
rclb
in
lock
add
mov
fwait
loop
jl
lods
sbb
adc
pop
divl
mov
filds
mov
rclb
jge
fwait
sub
dec
cmp
clc
adc
gs
rcrb
loop
pop
xlat
js
popa
imul
pop
mov
imul
mov
insl
imul
add
xchg
rorl
data16
stc
jl
int
jbe
sub
stc
mov
inc
mov
ret
xor
add
fisttps
shll
in
sbb
jp
or
fcom
adc
jge
add
add
rolb
inc
insb
outsb
popa
pop
je
sub
test
jl
jbe
push
xchg
inc
mov
jbe
cmpsl
cli
dec
pop
hlt
mov
sbb
dec
pop
mov
rclb
xchg
jge
das
jo
xchg
test
rcll
or
lock
xchg
sbb
outsb
push
lock
aaa
or
test
icebp
adc
xchg
lcall
jp
lahf
rorb
add
inc
out
mov
gs
je
shrb
repz
pop
pusha
cld
std
cmp
or
lock
jmp
lret
cmpsb
push
inc
inc
cmp
cld
adc
lcall
movsl
rol
ficomps
rorb
mov
lock
test
or
bound
int3
jp
cld
fcompl
sarb
fcmovb
cwtl
cmp
lock
adc
fbld
jbe
shrb
jmp
shrl
mov
push
les
movl
mov
jb
adc
sbbl
popa
adcb
loopne
subb
push
clc
jp
jbe
dec
leave
adcb
cmpsb
push
loopne
jg
xor
call
mov
or
inc
mov
or
adc
pop
fbld
lret
sub
loop
cmp
xor
jecxz
ret
pop
xorb
push
mul
and
cmp
in
adc
jle
popa
jnp
addr16
cltd
xor
mov
mov
or
sbb
pop
or
or
cmpb
jl
mov
mov
pushl
ja
aaa
mov
adc
mull
lock
pop
test
into
loopne
mov
inc
rorb
loopne
and
fildl
nop
orb
addl
hlt
les
ljmp
mov
cld
mov
jmp
lock
loopne
nop
ss
ret
test
and
lret
sbb
test
jecxz
push
cmc
jmp
or
or
and
xor
mov
loopne
loopne
or
adc
imul
xchg
jne
clc
imul
and
sti
xchg
dec
jp
xor
idivl
das
nop
sub
or
aaa
mov
rcrl
popa
insl
jecxz
push
mov
lahf
push
std
loope
lret
pop
add
cmpsb
mov
aas
popa
pusha
cltd
pop
imul
push
pusha
mov
hlt
sub
xchg
fs
int3
in
dec
sub
fwait
add
imul
dec
loop
mov
mov
push
push
or
adc
cmc
subb
sbbl
fs
or
outsl
dec
mov
fucomp
fwait
mov
mov
or
pusha
add
or
add
mov
pushl
jl
and
vmread
adc
and
adc
cld
adc
add
dec
cmp
push
pusha
int3
dec
in
ljmp
ss
dec
jo
add
nop
jbe
dec
scas
mov
lea
cmp
or
inc
xor
sbb
sub
xor
dec
loope
outsb
ljmp
fcomi
andb
lds
mov
iret
lods
add
mov
cs
mov
push
xchg
add
sarb
and
and
inc
jmp
inc
pusha
bound
mov
pusha
adc
inc
addl
mov
dec
add
jle
and
cli
bound
xchg
repz
jle
pusha
or
arpl
ljmp
mov
nop
or
inc
jmp
cmp
popa
aas
pop
cwtl
cmpl
mov
ret
add
inc
fsts
mov
loop
adc
ffreep
sbb
sbb
add
or
pop
mov
fisttps
loopne
std
or
add
mov
cli
fbstp
hlt
add
sub
or
insb
jmp
add
fcmovnu
jle
sarb
testb
adcl
xchg
jo
mov
mov
push
aaa
fucompp
arpl
jae
add
and
ljmp
mov
inc
cmpsb
jle
or
add
inc
cmp
xor
ret
mov
icebp
inc
ret
cld
fbstp
jo
aaa
inc
add
or
out
jg
pop
hlt
inc
and
je
or
mov
jmp
push
push
fcomi
mov
and
push
ja
shlb
mov
mov
or
dec
xchg
push
popa
dec
push
mov
jo
xor
stos
mov
jl
aaa
jg
add
data16
mov
adc
push
mov
push
icebp
mov
lock
jle
adc
outsb
jle
jg
mov
jl
sub
add
add
add
ds
test
jg
pop
jnp
lock
incl
jle
mov
xor
xchg
in
push
jno
xchg
or
or
mov
dec
inc
bswap
xchg
fsubl
add
std
stos
mov
js
xchg
cmp
jae
test
jle
jne
sub
sbb
pop
add
fdivrp
push
jecxz
add
add
push
jno
loop
sbb
fcoms
mov
ljmp
inc
mov
cmp
inc
cmp
mov
out
fdiv
xor
xor
scas
jl
not
sub
mov
aam
cmp
orb
mov
xor
icebp
lock
in
cmpsb
clc
xor
in
inc
or
jo
es
push
adc
xor
push
icebp
mov
sub
cwtl
jmp
mov
jp
add
jge
je
rcrb
daa
jae
mov
jo
or
adc
inc
xchg
xor
fucomi
and
jno
sbb
mov
mov
push
call
hlt
je
cmp
mov
and
mov
out
xchg
and
jmp
xor
rorb
outsl
xchg
lock
repnz
jb
inc
cmp
xor
fs
fcomip
pop
hlt
adc
sub
lock
shlb
jo
adc
adc
mov
pop
add
repz
fisttpl
mov
inc
push
jl,pt
call
jno
cmpxchg
and
lock
fwait
xor
lock
repz
xlat
idivb
or
dec
test
lock
mov
pop
mov
sub
enter
pop
hlt
xor
sti
push
rorl
push
sbb
inc
fucompp
js
mov
repnz
loopne
pop
jo
cmp
adc
xor
loop
sti
cs
jo
jb
push
mov
push
push
mov
mov
jp
inc
pop
sahf
jne
fsubrp
mov
jbe
ret
ficoml
inc
xor
jmp
mov
out
add
aad
xor
dec
lock
pop
incl
xor
adc
das
cld
ret
lock
push
or
cmp
mov
adc
push
nop
adc
xor
xor
es
je
fwait
cmp
lods
std
loopne
sbb
inc
ss
mov
xlat
lods
push
mov
ss
adc
popf
movsl
sub
repnz
add
popf
add
add
cmp
aam
xor
mov
push
lock
cmp
jae
add
pop
add
scas
clc
inc
dec
adc
jae
xor
popa
orl
movl
add
and
jmp
push
or
mov
das
push
add
mov
or
lcall
add
sub
stos
mov
out
add
mov
jmp
add
cmpsl
xchg
addb
mov
shrl
xorb
hlt
cmpsl
add
inc
mov
andl
xchg
mov
shlb
cmpsb
cld
lcall
xor
test
add
and
cmp
je
mov
cmc
fs
lcall
sub
mov
scas
hlt
xchg
pop
clc
xchg
xor
repz
xorb
add
add
or
stc
cmp
push
cmp
jmp
jmp
push
jmp
dec
fistpl
incb
decl
adc
lea
lock
inc
push
incl
scas
mov
in
addb
inc
jo
or
adc
shr
insb
test
test
pop
orl
sahf
loop
lds
cmp
or
xor
or
inc
jmp
mov
ljmp
mov
jmp
mov
fcomps
push
into
nop
dec
xor
add
jno
jno
mov
inc
fildll
les
jae
xchg
add
addb
sets
push
enter
rclb
mov
xor
les
xor
scas
xor
cld
pop
add
loopne
jo
in
push
inc
and
push
add
mov
jno
das
inc
jo
xor
outsl
pop
cld
lods
imul
sbb
lcall
lock
lock
outsb
or
out
jo
jmp
jne
out
and
mov
adc
out
jo
add
pushf
mov
ljmp
in
add
add
cmp
outsb
dec
insb
dec
push
and
out
add
push
add
ficoms
inc
cmc
or
pop
or
mov
and
in
push
dec
push
adc
push
push
mov
xchg
loop
mov
jmp
or
lea
or
mov
push
add
lods
dec
adc
test
add
xor
shlb
xorb
jle
loop
cmp
loopne
cmp
out
add
data16
es
mov
lret
add
nop
fiadds
push
xchg
mov
push
add
cmp
loope
je
mov
adc
dec
pop
fdivr
inc
adc
dec
add
mov
mov
ljmp
jg
call
pusha
dec
push
or
or
push
stos
cmp
fsubr
and
andl
mov
xchg
addb
inc
orb
jg
jl
les
andb
fldl
gs
cmp
and
mov
ljmp
addb
inc
add
push
ljmp
sub
mov
addl
mov
or
dec
or
mov
aas
mov
pushf
je
mov
or
sbb
rclb
mov
mov
nop
test
xlat
adc
or
orl
pushl
cmp
push
add
pop
je
adc
xchg
xchg
call
pop
clc
out
mov
add
hlt
decb
std
inc
add
cmpsb
or
and
inc
inc
popa
add
add
sti
mov
stc
test
rorb
add
add
loope
and
shll
or
add
aaa
jl
js
add
enter
xchg
pop
inc
inc
rolb
mov
add
adc
pop
rorb
mov
add
push
orb
jmp
je
sub
lcall
jg
insb
je
clc
pop
push
push
add
push
sarl
add
stos
fmull
add
adc
push
fcompl
je
or
adc
sbb
popa
xor
jg
pop
xchg
inc
and
pop
rclb
cld
push
and
mov
mov
adc
shll
and
sbb
movsl
adc
and
xchg
rolb
rol
sarb
add
mov
dec
xchg
pop
ret
sbbb
xor
cmp
sar
jae
ljmp
shll
pusha
inc
jg
inc
mov
fwait
xor
add
and
jg
outsl
sub
js
mov
and
pop
lea
lock
aas
jo
aam
fs
out
in
cmp
cmp
in
mov
out
dec
fadd
push
je
ret
add
call
into
pushf
adc
pextrw
or
or
ret
int3
das
pop
push
jmp
ffreep
into
xor
inc
rcr
lds
adc
adc
add
je
inc
add
xor
pushl
orl
pavgb
or
mov
dec
call
or
add
mov
fildll
nop
and
loopne
jecxz
push
xlat
loopne
xor
in
bound
call
loopne
pop
cld
pusha
outsb
adc
enter
xchg
aas
lret
add
fisubl
je
cld
pop
and
insl
test
adc
mov
jl
sbb
push
add
jbe
push
cmpsl
add
mov
movsb
das
push
popl
jo
sbb
lret
and
and
out
stc
loope
xor
xlat
jecxz
lret
loopne
call
loope
xor
popa
push
inc
mov
mov
rorl
fdivrp
in
dec
addl
insl
adc
out
in
sub
add
sub
mov
or
es
mov
adc
jmp
ss
cmp
and
es
loopne
or
mov
sarb
test
cli
or
xchg
fcmovb
call
shlb
arpl
jmp
pusha
dec
push
xchg
and
outsb
adc
popa
adc
insb
movsl
inc
mov
enter
inc
scas
mov
icebp
test
inc
jne
loope
stos
rcrl
call
mov
cmp
clc
jl
push
cmp
jbe
xor
es
pop
insl
aaa
test
xchg
sbb
sbb
addr16
push
pushl
lods
sbb
mov
movsb
loope
dec
sub
jecxz
pusha
adc
sub
dec
push
jecxz
js
mov
pusha
mov
test
adc
jbe
das
lock
push
push
push
lock
xchg
push
add
jmp
out
jo
sahf
loope
je
and
xor
shl
inc
xchg
popa
add
fiaddl
dec
xor
pop
cmpb
jbe
cltd
cli
inc
lods
daa
popa
dec
loopne
ss
cmpb
jecxz
push
adc
xchg
cmp
mov
lea
cmp
xor
movsl
push
xor
push
cld
jmp
loopne
mov
push
fsubs
inc
jmp
rcll
pushl
into
fistl
das
je
inc
arpl
jecxz
cmp
pusha
pop
popa
cmp
jnp
adc
shl
cmp
ret
jecxz
popa
mov
loopne
movsb
in
xlat
je
popa
pop
lret
push
mov
jl
enter
or
and
in
dec
lods
and
loopne
ret
and
push
add
sbb
adc
jecxz
xor
es
frndint
mov
jmp
repnz
xlat
bound
add
xchg
or
call
or
cld
mov
fildl
pop
add
pusha
loop
clc
and
mov
pusha
sub
push
sbb
mov
and
pop
mov
cmp
pop
loopne
ret
call
mov
out
test
out
or
sub
mov
and
sbb
ss
cmp
inc
rclb
or
or
sub
fsubrs
inc
cli
mov
add
jae
adc
and
ja
addb
sti
test
or
xchg
pop
pop
outsb
inc
cwtl
call
insb
sub
cli
cmp
mov
push
mov
xor
jge
push
lods
or
jo
xorb
inc
test
xchg
mov
add
pop
loop
add
movsb
push
jo
cmp
adc
add
cmpl
ret
sbb
test
mov
lea
ss
inc
bound
add
dec
sbb
ficompl
addl
jbe
ret
add
out
jp
xor
shl
add
lds
add
or
lds
or
adc
adc
lret
cmp
jmp
xor
or
jmp
or
jg
test
ret
jb
test
test
cmp
clc
jmp
xchg
sti
pop
roll
mov
std
add
mov
loopne
shl
out
sbb
push
lods
insl
sub
mov
push
push
addb
loope
xor
dec
cmc
sbb
xchg
inc
outsl
pop
adcl
adc
inc
push
insl
sti
xchg
push
push
imul
adc
out
push
push
push
add
push
imul
out
imul
add
int3
push
jl
dec
shll
mov
fldcw
or
push
xor
mov
jle
adc
add
fcoml
lock
data16
xor
push
insb
test
ljmp
or
mov
lods
fcompl
xchg
lods
and
add
insb
sub
add
add
mov
loope
and
push
pop
mov
mov
cmpsb
sbb
mov
cli
pop
xor
add
incb
add
mov
add
or
dec
repnz
push
out
dec
lds
enter
sbb
add
in
sbb
loope
pop
xor
fisubs
fisubs
and
add
cld
fstpt
or
sub
sub
mov
add
das
add
adc
push
xor
mov
mov
xchg
mov
gs
aas
mov
les
dec
nop
mov
pop
fistpl
adc
push
insb
or
movsl
push
fiaddl
lock
or
and
cld
inc
or
push
test
dec
xor
mov
in
int
outsl
cmp
jo
or
adc
cmp
xchg
xchg
loop
add
or
xchg
ret
xor
out
inc
jns
push
pop
or
adc
cmp
cmp
add
mov
lock
hlt
incl
inc
push
or
outsb
enter
push
or
and
add
jo
sbb
leave
cld
ret
dec
mov
test
jbe
add
mov
fwait
clc
ss
cmp
pop
nopl
out
int
roll
pushf
stc
aam
jno
sar
aaa
push
and
cmp
dec
out
or
mov
sbb
pop
std
fisttps
dec
sbb
clc
push
jmp
inc
sbb
xchg
cld
mov
jbe
inc
add
movzwl
sbb
inc
adc
adc
jne
pop
loopne
xor
fs
add
mov
mov
mov
pop
mov
inc
lods
inc
push
pop
addl
push
inc
ret
xchg
lock
mov
add
mov
cld
push
and
pop
pusha
jp
ds
call
inc
test
jo
push
outsl
outsl
xchg
lcall
and
mov
cld
cs
lea
jb
mov
jge
push
jo
aaa
cld
out
lock
adc
stos
inc
ja
fisttpl
mov
test
mov
repz
pop
lock
jo
or
or
lods
add
call
sbb
shlb
fldt
add
pop
sbb
push
testl
insl
sbb
in
test
clc
xor
fcmovnu
imul
mov
or
pusha
add
ret
lcall
sub
xchg
add
add
ret
cmp
mov
add
dec
int
and
add
pushf
mov
sbb
dec
adc
stos
xor
stos
jg
hlt
push
add
add
rorl
mov
fdivp
jbe
mov
sbb
ds
ljmp
orb
jo
add
push
sbb
scas
mov
add
decl
popa
scas
or
add
pop
lock
inc
jg
insb
sbb
ret
es
data16
cld
mov
jmp
je
push
rorl
ljmp
test
xor
or
push
pop
dec
loop
sahf
cmp
mov
push
rorl
cmp
jle
mov
sarl
test
push
sub
test
sbb
fs
lock
sbb
mov
rorb
push
mov
and
mov
mov
xor
inc
or
je
pop
xchg
repz
fidivrs
ljmp
add
lock
pushw
pop
test
stc
jo
adc
cli
outsl
pop
pop
pop
mov
es
add
sti
cmp
jl
and
mov
shll
testb
jbe
cmpsb
test
subb
ficompl
push
mov
mov
sbb
jp
push
xor
dec
fdivs
mov
mov
xor
add
fisubs
outsb
call
xchg
sarl
inc
sbb
cld
mov
jge
jl
mov
je
or
push
arpl
mov
rcl
add
enter
mov
xchg
jmp
jl
xchg
cli
cld
ja
mov
cmpl
sub
mov
lock
or
enter
inc
and
adc
jmp
dec
jbe
in
fsubs
je
je
push
call
lret
push
cmp
es
push
mov
adc
push
cs
mov
dec
push
sbb
scas
jl
cmp
aaa
add
mov
gs
lock
inc
add
or
sub
push
sbb
push
clc
xor
add
lcall
xchg
stc
jae
sub
dec
add
jmp
sbbb
repz
pusha
in
ljmp
stc
les
jae
mov
sbb
loope
lods
inc
pop
pop
xor
or
stos
icebp
fildll
sub
mov
fdivl
jmp
movsb
lock
push
mov
std
sub
jne
addl
jmp
inc
add
dec
je
inc
les
jb
mov
mov
inc
inc
in
testb
es
mov
addl
je
jmp
fisubl
call
cli
sti
cmp
rcl
mov
push
xor
in
jmp
cmp
sahf
test
lret
mov
scas
popl
sub
pop
shrb
add
cmp
add
mov
lret
rolb
mov
mov
push
jp
cmp
rcll
test
fstp
adc
jb
pop
jbe
aaa
pop
push
jle
mov
xor
ret
lea
enter
xchg
mov
shrl
adc
pop
in
imul
je
and
outsb
cmp
dec
sar
or
cmpb
jne
cmp
ss
lock
cmp
cmp
add
mov
repnz
or
stos
in
jne
push
pushf
jne
cmp
mov
sbb
pop
mov
into
popf
aas
add
fmulp
jbe
sbb
les
jl
add
mov
sahf
lock
or
je
cmp
jb
jmp
aaa
dec
pop
insb
fldenv
mov
pop
fistpl
je
out
stos
test
jmp
push
adc
dec
sbb
fdiv
scas
mov
and
lret
inc
pop
call
cwtl
jbe
loopne
xor
mov
cwtl
out
or
or
test
movsb
sub
mov
fsubrs
sbb
mov
sub
xchg
mov
or
std
jle
out
mov
nop
xchg
or
cmp
mov
lea
cmpsb
cmpsl
inc
das
je
cmp
xchg
clc
jbe
cmpsb
mov
addb
cs
adc
push
mov
cmp
divb
adc
dec
jb
lret
test
adc
cmpsl
clc
vmptrst
add
pushf
daa
and
pop
mov
mov
loopne
lcall
jge
mov
jge
ja
mov
jne
sar
xchg
clc
mov
cmpb
and
jne
outsb
cmp
cwtl
jecxz
pop
std
dec
pop
add
ljmp
jl
mov
or
sbb
nop
adc
jbe
shl
repnz
mov
ret
push
xor
repz
stos
bound
lock
adc
push
pop
pop
rcrb
clc
shlb
mov
in
outsl
test
push
and
jecxz
jle
aam
ss
sbb
mov
sti
jmp
dec
clc
enter
mov
jne
cmp
je
jl
add
fisttpll
mov
mov
add
sbb
push
outsb
adc
mov
mov
jp
rcrl
sub
ss
idivb
mov
adc
inc
pop
dec
cmp
jge
pop
lock
les
push
nop
sub
sbb
cld
mov
adc
adc
jbe
add
cld
push
pop
mov
cmp
or
movb
sub
movsb
pop
mov
andl
ret
push
inc
add
aas
xchg
add
mov
adc
and
sbb
test
pusha
lods
xchg
les
arpl
xor
dec
dec
popw
push
dec
adc
int3
mov
movsl
gs
lock
mov
or
add
push
mov
cli
movsb
jp
cmc
cmpsb
adc
push
movl
std
es
xor
sub
mov
adc
jnp
data16
jb
or
jle
xor
lock
loopne
add
roll
clc
lock
insl
push
pop
rorb
cmp
add
adc
pop
or
adc
push
das
shrb
idivb
xchg
fwait
rorb
inc
add
test
xor
jne
sub
adc
adc
dec
mov
gs
je
shr
outsb
sbb
jmp
cs
or
push
es
shrl
cltd
push
mov
jle
das
movsl
rolb
push
pop
and
ds
pop
lods
cmp
jbe
pop
ss
and
push
fistl
fisttpl
jecxz
int3
ss
or
in
sahf
aam
add
pop
daa
jle
and
mov
xchg
cmp
or
js
and
test
push
push
push
lds
shlb
mov
jl
cmpsb
mov
aam
lock
sahf
push
loopne
jge
jge
adc
mov
dec
xchg
add
loopne
adc
push
and
lcall
dec
pop
push
inc
jge
test
adc
or
sub
mov
xchg
test
adc
or
push
adc
inc
sbb
sti
gs
dec
ret
mov
and
adc
imul
scas
aaa
xchg
mov
nop
loopne
lcall
dec
cmc
xchg
and
cmc
insb
movsl
dec
inc
cmp
jle
in
imul
xchg
pop
mov
lods
stos
leave
insl
fildll
xchg
adc
xor
js
inc
xchg
adc
adc
or
call
cmp
in
lcall
into
jmp
xchg
cmc
mov
cltd
mov
adc
jnp
insl
std
fistpll
dec
mov
lcall
out
sbb
rclb
mov
mov
lea
iret
dec
das
cmp
leave
mov
rclb
sbb
js
cmp
loopne
imul
into
aad
dec
pushf
sbb
and
adcl
lock
insl
push
adc
jbe
sbb
fwait
in
mov
sbb
fistpll
xor
lcall
lods
pop
xor
or
mov
adc
or
and
dec
or
dec
xchg
push
mov
adc
inc
push
push
popa
out
push
push
push
insl
inc
mov
cmp
jp
dec
dec
add
add
ljmp
jp
cmp
sbb
push
test
je
cmpsl
out
repnz
scas
xchg
stos
hlt
sbb
cld
jle
mov
add
cli
sti
insb
push
adc
in
ret
lock
fdivrs
pop
or
add
push
mov
sub
scas
jb
pop
hlt
addr16
jle
xchg
inc
push
lea
insb
cli
incb
fdivrl
mov
shlb
shrl
js
enter
aas
push
or
push
or
lods
lea
mov
mov
push
cmp
sub
add
lods
jo
enter
inc
push
sbb
orl
sti
int
subb
adc
and
add
outsl
mov
fisubl
jecxz
xor
jbe
sub
fcomip
jmp
xchg
pop
lock
int3
xchg
or
int3
rolb
call
cmp
je
idivl
notb
xchg
adc
ljmp
nop
add
icebp
jbe
mov
sbb
stos
or
dec
and
repz
incl
jae
mov
or
sti
mov
call
add
xchg
and
mov
dec
mov
cmc
shrl
pop
sub
or
push
cmp
aaa
shlb
lea
jge
fisttpl
push
xor
loopne
psubsb
add
daa
dec
lret
dec
clc
inc
cltd
orb
imul
ret
xor
xlat
xchg
daa
dec
decl
ljmp
pop
add
mov
decl
push
mov
push
sbb
test
mov
push
add
movsl
call
mov
mov
add
outsl
cmp
fisubrs
les
stos
cld
ret
pop
call
cmp
test
out
push
xchg
add
notl
outsb
jns
icebp
rcll
or
fidivrs
xchg
aaa
ljmp
sbb
out
cld
mov
or
sub
jge
jbe
xor
mov
add
ret
das
push
jp
fcmovb
sbb
inc
pusha
xor
loop
outsl
mov
je
call
in
or
dec
push
push
call
insl
fs
lods
lea
sub
xchg
xchg
pop
nop
xchg
pop
incl
cmp
je
movzwl
cltd
cmp
push
insb
loope
je
pop
jl
mov
push
dec
std
cld
js
add
aaa
std
lcall
pop
add
lods
inc
jb
shlb
sti
or
add
inc
icebp
shr
mov
fcos
fisttps
sti
add
icebp
leave
adc
and
paddd
outsl
cli
ja
add
lea
ret
pop
data16
jl
and
dec
add
divl
scas
jmpw
push
mov
pop
test
push
push
stos
add
or
mov
adc
xor
mov
rorb
mov
data16
push
je
fiadds
mov
cs
pop
test
js
xor
add
adc
xchg
adc
mov
dec
fdivrs
or
or
testl
xchg
in
inc
popa
mov
cmpsb
adc
adc
dec
dec
enter
cwtl
adc
in
frstor
je
scas
dec
jmp
pop
jne
sbb
or
or
push
paddd
adc
xlat
jge
mov
push
adc
in
ficoms
rorw
xchg
and
and
jb
add
negb
push
add
outsl
inc
mov
adc
and
test
push
jl
imul
ret
sbb
fstpt
cmp
call
movsl
push
fstpt
push
lahf
jmp
ret
jbe
scas
sub
push
rcll
ss
mov
inc
cs
js
mov
adc
arpl
or
fistps
push
push
mov
outsl
mov
call
sbbl
call
add
mov
pminsw
loop
inc
xchg
xchg
loop
ret
hlt
push
mov
loop
add
into
clc
sbb
add
testl
push
inc
inc
mov
out
ds
shrb
dec
fcompl
gs
mov
mov
inc
and
dec
and
dec
mov
mov
xchg
push
mov
pop
outsl
xchg
flds
subl
outsb
jp
pop
push
inc
dec
scas
invd
lods
lock
je
scas
sahf
js
adcb
add
mov
shr
popf
das
or
mov
pushl
decl
inc
loope
adc
call
or
cmc
push
mov
cmp
je
lea
rorb
push
bound
inc
shrb
or
xor
adc
outsl
push
fs
mov
cld
out
sbb
movsb
fsubrl
add
push
outsb
push
mov
dec
push
shlb
out
jg
cmp
adc
faddl
mov
inc
inc
dec
mov
out
mov
mov
dec
dec
inc
jp
pop
jg
add
aas
cmp
add
les
or
xor
xchg
xchg
nop
int3
fistl
xor
jg
push
mov
adc
idivb
test
roll
mov
inc
or
hlt
inc
enter
mov
loopne
cmpb
add
cmpsb
adc
push
or
in
push
pop
cs
subb
clc
testl
adcb
pop
or
repnz
inc
das
xchg
jne
inc
push
add
decl
leave
and
lea
out
push
outsl
jbe
cli
mov
fsubl
pop
ret
xchg
adc
pop
je
xchg
addr16
mov
cmpsb
cmp
js
xchg
inc
in
stos
lods
ret
dec
xchg
xchg
push
call
mov
push
push
in
inc
sbb
adc
sahf
xchg
cmc
or
mov
or
mov
xchg
jne
mov
sbb
pop
sub
je
fcoml
push
mov
add
lds
and
push
xchg
sti
je
int3
cs
loop
out
mov
sub
inc
adc
fstpt
push
test
neg
push
sbb
int
jp
xchg
push
push
inc
mov
lret
fisubrs
data16
out
scas
dec
adc
or
lcall
lcall
xchg
push
mov
jmp
push
sti
push
test
hlt
cmp
add
inc
test
or
mov
das
mov
mov
testb
je
int3
xor
dec
push
movsb
cli
jle
stos
or
push
mov
adc
push
adc
adc
leave
jno
mov
pop
pusha
xor
xor
hlt
int3
xchg
mov
push
es
test
test
inc
push
push
xchg
mov
mov
mov
push
add
lcall
push
ret
in
or
sbb
mov
pop
lods
jg
insb
mov
jne
add
or
loopne
or
mov
shrl
aam
pop
scas
loopne
outsb
or
into
inc
jne
inc
jo
jl
mov
cmc
push
add
addl
std
adc
add
add
push
add
add
xchg
pop
adc
push
dec
inc
lock
mov
jno
ret
addb
or
movsl
cmpb
push
popa
and
ret
or
or
add
jp
lcall
adc
push
cmp
adc
and
aas
inc
add
mov
add
rol
icebp
add
or
xorb
sbb
mov
cli
enter
addr16
loopne
shrb
into
subl
lea
add
sarb
or
jbe
adc
mov
scas
sahf
clc
add
pop
sub
mov
jg
lock
shlb
lar
rolb
pop
clc
sub
lock
pop
jne
mov
aam
pop
scas
int3
add
ds
popa
inc
and
cmc
out
push
or
add
pop
jne,pn
mov
data16
aam
stc
rol
sub
and
mov
fcomps
hlt
cmp
ret
lods
xchg
shrb
xor
int3
cmpsb
dec
push
std
push
inc
add
adc
pop
and
rcrb
shlb
lds
adc
push
push
add
fistpll
mov
inc
mov
sub
outsl
or
lock
aam
idiv
call
aas
add
loopne
out
push
add
insl
adcb
jb
aam
lods
nop
mov
stos
add
xor
adc
mov
aam
push
add
es
outsb
push
fdivl
push
rcll
adc
add
push
or
fadd
movsb
pushf
xchg
adc
rolb
inc
stos
jne
int3
adc
dec
inc
call
setl
test
jle
stos
frstor
mov
sbb
dec
push
inc
icebp
shr
jmp
mov
fildll
cs
mov
inc
sub
in
rolb
adc
rcl
ret
ret
adc
dec
push
roll
es
mov
xchg
pop
out
cmp
dec
insb
shlb
es
lret
push
push
loop
cmc
jmp
adc
push
or
xchg
ret
ret
loopne
add
add
cmp
icebp
scas
mov
insb
fildl
jbe
stos
xor
mov
and
loopne
lock
hlt
mov
sbb
ljmp
cmc
cmp
mov
jecxz
pop
and
cwtl
push
sub
or
dec
adc
or
pusha
insl
push
bound
test
pop
pcmpgtd
adc
cmpsb
mov
adc
mov
test
mov
addl
movb
jb
sti
cmp
notl
dec
flds
pusha
dec
call
pop
lods
ret
adc
lret
jg
or
push
push
je
imul
std
scas
inc
mov
loopne
xor
or
pushf
xor
pusha
gs
loopne
or
loopne
out
je
test
mov
call
or
scas
fcom
pusha
or
add
loopne
jo
add
pop
pusha
arpl
sbb
cmp
inc
loop
xchg
loope
xchg
movsb
pusha
nop
inc
or
loop
pop
and
or
scas
xchg
mov
sbb
mov
loopne
sbb
lcall
call
add
mov
mov
lahf
push
mov
outsb
fstps
mov
sbb
pusha
or
push
mov
push
adcb
xlat
fwait
inc
dec
cmp
loopne
or
lock
daa
xor
cmp
sbbb
adc
mov
cmp
shr
outsb
ljmp
mov
xor
push
pop
fmuls
sbb
mov
adc
cmc
ret
testb
lock
je
test
jbe
adcb
ljmp
add
push
or
inc
push
cmp
sbb
adc
mov
push
push
cs
ljmp
cld
testb
rcrl
pop
xor
or
clc
decl
fs
dec
call
or
addl
dec
mov
addb
mov
mov
xor
jb
and
pusha
scas
mov
mov
jg
or
movsb
xchg
loopne
call
bound
pop
loopne
adc
mov
pusha
sbb
jle
loop
mov
andb
jle
paddq
and
pusha
lock
pop
jl
clc
nop
add
sbbb
in
es
and
pusha
and
xlat
xor
mov
push
lea
mov
call
mov
loopne
mov
testl
adc
cmp
and
cmp
aas
push
icebp
call
lret
push
jp
jle
add
jmp
test
and
ret
test
inc
cld
add
dec
add
pop
dec
stos
sar
inc
iret
jge
je
imul
mov
ljmp
call
addb
mov
pop
mov
icebp
add
cmpsl
add
cmpsb
clc
adc
popa
outsb
mov
enter
data16
dec
push
add
inc
mov
jp
pop
mov
or
lds
fisubrs
sub
hlt
test
cmp
cmp
cmpl
out
cmp
loopne
jne
jle
incl
jne
jb
add
or
jp
add
and
in
insl
mov
add
adc
mov
sub
fcomip
pushl
xchg
and
dec
lea
inc
rolb
aas
movl
jge
cld
out
das
clc
jne
arpl
test
add
mov
push
call
add
jmp
cmp
pop
stos
add
cmp
leave
popa
pop
xchg
inc
popa
sub
incl
nop
push
pop
cld
pop
mov
cmp
and
fwait
mov
outsb
adc
dec
jb
imul
or
cmpl
push
add
call
mov
cmp
mov
ret
push
adc
ja
test
mov
test
xor
or
and
ja
push
and
cltd
push
cltd
mov
lahf
mov
les
add
mov
and
and
or
sahf
mov
shrb
mov
mov
or
push
xor
pushw
inc
adc
and
icebp
jmp
push
push
jp
sarb
lods
push
add
mov
mov
call
inc
sub
fstpt
faddl
lock
push
lock
xor
adcl
mov
cmp
in
and
shlb
sub
and
pop
mov
leave
pop
sbbb
or
xchg
dec
lods
or
sahf
sub
loopne
xlat
adc
cmp
lock
stos
jne
add
push
jne
movl
scas
call
xor
add
xor
imul
jmp
je
dec
add
and
add
incl
faddl
or
jno
add
or
add
push
das
add
or
jecxz
pop
jg
shll
aaa
mov
xchg
cld
push
imul
mov
cli
mov
add
enter
decl
or
pop
mov
je
xor
mov
icebp
mov
es
sub
shl
adc
lods
in
or
stos
add
or
in
iret
repz
push
mov
pop
pop
outsl
clc
mov
or
pop
cmp
subb
loope
push
xchg
mov
subb
gs
fmul
rcrb
adc
lcall
inc
stos
ret
xor
lods
jno
lret
mov
adc
pop
sbb
std
lock
mov
idivb
test
pushl
inc
push
jo
or
jmp
lea
add
mov
xor
rcll
jno
adc
cmp
mov
adc
push
push
inc
cld
orb
fiaddl
ret
out
push
adc
and
shll
shll
mov
push
add
movsl
cmpsl
pop
or
jle
test
push
jl
xchg
pop
mov
add
jmp
cmp
and
inc
ljmp
fcoml
mov
pop
imull
pop
pusha
adc
pop
mov
fistl
adc
jo
mov
pop
cmpsb
out
lcall
pusha
sbb
or
pop
lret
dec
iret
xor
adc
add
push
xchg
mov
jmp
aad
push
mov
push
jl
cs
sub
hlt
jo
imul
mov
add
or
shlb
lods
call
push
jg
pop
lock
mov
jle
bound
mov
clc
jg
rorb
repz
lock
sbb
orl
in
mov
add
adc
or
stc
jb
pop
and
or
movsb
xor
and
das
mov
fsubs
jne
aaa
sbb
lahf
jne
push
adc
gs
jno
jle
pop
pop
dec
xorl
xor
or
sbb
fisttps
mov
xor
lock
add
jmp
ss
or
jb
mov
jp
jo
or
add
sbb
fdivr
fisttpl
and
ss
inc
fwait
mov
cmp
adc
fisttps
and
add
mov
sti
lahf
les
push
lock
add
and
or
add
mov
or
lock
mov
or
jo
adc
lock
sbb
push
orl
pop
lock
mov
adc
jb
inc
add
test
dec
jl
jge
or
out
xor
or
ljmp
sub
jg
xor
cwtl
leave
xor
icebp
push
dec
je
fbld
cld
add
add
stos
loopne
add
inc
call
sub
pop
mov
adc
mov
jne
lcall
sbb
test
hlt
jg
adc
clc
xor
inc
les
add
sbb
mov
pushl
mov
mov
cmp
push
pop
lock
xchg
xor
xor
adc
add
movb
ljmp
mov
jno
sbb
add
adc
mov
std
es
hlt
jbe
clc
mov
dec
jl
mov
or
xor
pop
lock
and
adc
nop
dec
outsb
test
cmp
jb
fmuls
pop
es
mov
mov
leave
ret
or
int3
add
sub
jmp
cmp
add
sub
in
sub
mov
pop
or
js
aaa
lahf
lret
scas
dec
inc
adc
add
cmp
loope
test
add
pop
mov
cli
dec
loopne
dec
adc
or
pop
js
insb
mov
jb
add
cmp
mov
add
hlt
out
mov
in
call
ljmp
mov
sub
jo
inc
xor
mov
sbb
pop
push
cltd
jl
call
or
mov
call
iret
stc
push
hlt
mov
sub
lcall
jae
mov
pop
jo
hlt
mov
jo
sahf
cmp
pop
adc
xor
add
add
add
pop
pop
lods
jb
lock
into
repnz
sbb
and
push
push
mov
aas
cwtl
cltd
pop
add
jo
je
jo
adc
dec
aad
or
incl
fmull
dec
jno
push
or
push
addl
rorb
stos
dec
or
je
add
shll
sub
mov
pop
sub
orb
and
or
imul
lock
jb
pop
jle
outsb
push
pop
ja
adc
push
pop
addr16
adc
cld
pop
xchg
ret
pop
pop
jae
push
xchg
and
jne
mov
inc
mov
jnp
lock
shlb
fidivs
push
test
xor
add
jle
loop
add
inc
inc
jno
mov
mov
test
lcall
mov
push
test
and
add
mov
xor
aaa
mov
or
xor
cmp
jl
mov
stos
hlt
fnstsw
ja
je
and
jb
outsl
xor
jp
push
sub
cli
or
pusha
push
pop
js
sub
or
sub
push
mov
je
ss
scas
add
das
mov
inc
lea
xchg
fs
cltd
inc
jno
je
cwtl
pop
mov
div
mov
pop
mov
clts
sbb
adcb
or
xchg
jo
dec
imul
adc
and
imul
call
xchg
imul
ljmp
test
push
clc
inc
add
inc
fsub
shrl
aad
pop
adc
xchg
stc
addr16
cmp
mov
cmp
pop
cmp
cmp
dec
stos
jecxz
pop
push
pushf
jmp
add
sbb
push
insl
dec
daa
in
mov
shll
cmpsb
jb
push
aaa
daa
adc
and
imul
stc
cmp
jmp
add
or
loope
or
pop
cmc
movsl
nop
movb
inc
mov
adc
mov
mov
in
jmp
mov
adc
hlt
rcrb
lods
push
insl
adc
pop
int
fdivr
dec
loopne
aaa
fbld
test
xor
rcll
bound
jmp
adc
cmp
jge
mov
sbb
lcall
call
aas
sbbb
sub
xor
cmp
push
adc
push
add
cmp
movsl
inc
add
jnp
add
cmp
aam
add
mov
adc
popa
or
jae
sarl
sbb
add
js
pop
in
push
dec
add
lock
test
xor
mov
adc
sub
dec
ret
test
subb
test
addr16
dec
inc
clc
dec
mov
addr16
subl
shrb
mov
sub
sub
pop
add
cli
ffreep
cmp
add
push
pop
lea
test
pop
or
fsubl
add
mov
sbb
mov
lock
xor
std
inc
ret
add
nop
jp
adc
fcmovnb
or
shrb
or
xchg
jmp
mov
push
adc
pushf
dec
mov
jle
les
mov
dec
aaa
jg
mov
rolb
dec
fcoml
pushf
and
shll
sbb
out
out
in
xchg
sahf
movsb
cmp
adc
sti
in
into
xchg
lcall
xor
jne
lods
xchg
and
xchg
sbb
arpl
cmpl
je
dec
sub
xor
mov
pop
inc
sub
dec
ret
mov
pop
rolb
add
test
lock
je
inc
xchg
out
sbb
pop
and
or
std
sub
loopne
rcrl
dec
sbbb
out
shrb
mov
add
add
ljmp
inc
fdiv
add
cwtl
lret
push
insl
shrb
out
mov
adc
xchg
out
pop
ret
push
loop
int
mov
inc
movsb
add
rorb
ret
in
mov
sahf
sti
xchg
jl
cmp
or
cld
inc
arpl
adcl
push
add
pop
or
ret
push
mov
mov
int3
fistl
mov
aas
mov
xor
add
shl
pop
mov
adc
cmp
pop
pop
sub
sarl
lods
shlb
sub
push
mov
or
adc
pop
jb
ret
sbb
dec
pop
push
lea
inc
push
scas
cmp
sub
sub
lods
add
hlt
repnz
adcb
sbb
push
aaa
incb
mov
std
loopne
adc
sub
test
ror
cli
push
out
fwait
adc
add
inc
lea
shlb
jbe
arpl
rolb
inc
in
fsub
loopne
lahf
mov
ret
jmp
add
mov
and
add
pusha
xchg
add
test
mov
xchg
lock
add
push
push
mov
or
mov
sub
sbb
add
cmp
pop
add
mov
icebp
shlb
adc
or
xchg
mov
or
push
scas
push
push
lret
add
or
lcall
cmp
push
lock
adc
loopne
xor
test
push
mov
jb
cld
das
inc
dec
lret
sbb
and
adc
push
mov
and
mov
push
dec
addb
imul
xchg
test
xchg
mov
cmc
fstl
sub
push
test
jg
add
bound
push
xor
stc
loopne
pusha
sahf
add
adc
cli
aas
or
mov
cmp
cld
pusha
sbb
adcb
pop
push
inc
incl
sub
loopne
push
adc
lods
pop
jmp
in
loopne
push
xor
out
or
lcall
add
or
sub
scas
jp
sub
orl
popa
pcmpeqw
push
xor
jnp
mov
fmull
call
sarb
mov
aam
mov
and
cmp
loopne
add
lea
mov
mov
push
dec
fwait
add
pushl
pop
test
insb
repnz
ret
and
xchg
mov
sbb
call
insb
js
sahf
sar
loopne
push
sbb
cli
jg
jb
adc
pusha
push
aad
addb
pop
sti
push
aaa
sub
adc
loop
push
jnp
and
adc
outsb
data16
in
out
or
addb
sbb
adc
and
loopne
mov
dec
mov
and
xchg
add
xchg
push
mov
test
outsb
mov
push
out
enter
loopne
mov
inc
repnz
ds
mov
sahf
or
mov
pop
xchg
sbbb
inc
cmp
fsubrs
mov
cmove
cld
pusha
cmp
xchg
pushf
pop
pop
test
xchg
inc
test
mov
mov
loop
adc
inc
loopne
mov
dec
cld
pop
xor
mov
jb
mov
or
call
mov
loopw
sarb
sub
cld
bound
sub
pusha
je
loopne
ljmp
je
pop
push
cmp
ljmp
jmp
rcr
loopne
pop
cmp
mov
jecxz
lahf
or
jbe
mov
mov
inc
inc
xchg
xchg
add
divb
pusha
inc
push
clc
push
xchg
cmpb
add
loopne
loope
call
push
xor
mov
pusha
pusha
jnp
das
clc
aad
push
mov
cmp
sub
xor
fbld
pusha
or
sub
pop
adc
dec
jg
lock
pop
hlt
jmp
shlb
out
test
push
adc
pop
call
sbb
mov
loop
mov
adc
sub
mov
lods
fs
cs
dec
jne
jbe
mov
mov
or
adc
mov
push
je
sarl
or
push
mov
fistps
jo
mov
or
fisttps
test
les
adc
adc
adc
or
add
xor
stos
jp
adc
adc
scas
adcb
icebp
mov
xor
cmc
sub
add
aaa
icebp
fcomip
pop
lock
cs
xchg
inc
add
je,pt
mov
movsl
xor
sub
mov
or
test
push
or
xor
mov
or
inc
jmp
cmp
mov
adc
repz
add
shr
sbb
cld
test
xor
xor
mov
sbb
dec
outsb
adc
dec
ss
cmp
and
mov
add
mov
cmp
mov
mov
mov
pop
dec
jecxz
jnp
clc
xchg
out
bswap
add
orb
data16
cmp
sub
lret
fsubrs
in
loopne
sbb
dec
nop
or
nop
sbb
mov
mov
jmp
loop
into
pop
push
pop
mov
lock
push
mov
sbb
adc
mov
addl
pop
xor
mov
fmuls
les
jo
add
dec
adc
xchg
out
add
cmp
lret
cli
add
and
xor
adc
xchg
mov
xor
pshufw
sahf
add
push
add
cs
mov
push
adc
cmp
clc
fstp
mov
cld
xchg
and
call
data16
jge
mov
push
fists
sar
jge
adc
pop
jle
sbb
mov
xor
adc
mov
inc
jo
inc
push
mov
push
shlb
pop
call
jbe
sbb
out
mov
lock
sbb
or
sti
sub
sub
loopne
ja,pn
sti
add
jl
add
out
mov
mov
jbe
inc
aaa
mov
cmp
cmp
cmp
cli
mov
jne
push
mov
adc
pop
jecxz
ret
pop
xor
push
call
and
dec
push
pop
pop
add
and
mov
xchg
hlt
jg
bound
dec
or
or
incl
jmp
mov
mov
push
cli
sbb
or
aas
ljmp
mov
pop
jo
adc
cmp
out
inc
out
aaa
adc
pop
jle
mov
movsl
test
idivb
inc
mov
mov
aam
push
add
lock
jmp
cwtl
jo
jmp
sbb
cmp
mov
mov
add
aam
test
and
data16
xchg
jle,pt
in
sub
jle
and
push
or
jne
mov
and
adc
lods
jo
mov
sub
dec
pop
jmp
inc
test
push
mov
xor
mov
inc
lea
data16
xor
jg
push
or
neg
in
and
add
mov
jmp
adc
arpl
ret
sbb
data16
push
lock
les
shll
sbb
cmp
sbb
jo
push
out
jo
mov
lcall
add
stos
xchg
hlt
cltd
cmp
aad
je
push
pop
cmpsl
add
pop
repz
call
mov
jmp
ljmp
inc
pop
sahf
test
pop
mov
and
pushl
jne
add
out
push
xor
or
hlt
into
call
inc
xchg
dec
orb
imulb
idiv
mov
and
mov
adc
mov
inc
pop
lock
lock
in
fwait
test
add
test
or
pusha
decb
jg
inc
push
jo
subl
mov
sti
or
cmp
mov
lcall
std
imul
incl
add
and
lea
rcll
mov
cmpsb
call
jle
lea
je
test
mov
cmp
xor
mov
mov
xchg
jmp
or
sarl
je,pn
or
in
cwtl
repnz
push
mov
jl
or
add
mov
je
add
sbb
ret
ljmp
dec
xor
xor
sahf
cmp
rolb
ud0
inc
fdiv
push
sbb
fstpt
add
cmp
add
je
mov
clc
hlt
sbb
pushl
mov
mov
jmp
cmpl
or
cld
fwait
xchg
int3
fucomi
push
lock
sub
mov
mov
add
and
adc
pop
or
mov
add
xor
shl
hlt
fdivs
popa
xor
test
rcrb
test
push
inc
jne
add
adc
outsb
test
jo
sub
xor
es
inc
outsl
adc
inc
shl
or
inc
xchg
push
dec
and
outsb
or
mov
push
ficoms
testl
push
std
or
cs
icebp
pop
jo
test
mov
pop
sarb
int3
pop
push
test
cmpsl
add
and
test
jmp
xor
and
dec
loop
add
xor
clc
fmuls
inc
mov
xor
mov
push
xchg
movsb
sub
add
dec
popf
mov
cmp
mov
test
scas
add
je
jbe
push
xor
loop
xor
pop
lock
xchg
sub
xor
xor
clc
jb
inc
icebp
jno
mov
xor
enter
push
cmp
lods
xor
rolb
cmp
inc
push
insb
out
or
jo
loope
push
xchg
or
mov
jb
insb
lock
subl
call
dec
shlb
lahf
xor
pusha
dec
sti
ja
mov
sub
pusha
pop
and
test
idiv
sbb
insl
clc
add
lods
shlb
fdivl
ljmp
shll
add
sbb
push
jns
mov
push
insb
daa
idivb
das
ljmp
jo
fidivl
cs
scas
insl
xor
mov
sbb
adc
mov
xorl
test
aam
ljmp
adc
adc
imul
insl
outsl
cmp
lods
push
decb
fimuls
mov
dec
push
pop
maskmovq
testl
mov
push
mov
mov
dec
testb
dec
push
jmp
adc
or
rolb
loope
or
hlt
inc
call
outsb
push
pop
cmp
cmp
inc
adc
sbb
adc
or
insb
enter
call
xor
ret
xchg
add
ret
sahf
mul
pop
adc
lahf
test
insb
dec
inc
sub
sbb
mov
movb
es
or
push
and
push
and
ljmp
pop
add
ret
test
sbb
push
pop
push
rolb
or
les
cmp
je
fsubrs
das
int
pop
cld
je
pop
cld
imul
inc
mov
pop
and
inc
adc
out
ret
je
push
mov
dec
lods
sbbl
mov
mov
pushf
rol
imul
and
int
jb
mov
push
push
mov
inc
add
adc
mov
lods
sbb
out
and
inc
loop
push
cmp
roll
xchg
xor
test
lods
inc
fs
adc
adc
clc
cmp
xchg
add
mov
adc
dec
xchg
call
mov
mov
cmp
ret
adc
jp
lock
add
sbb
hlt
fsubrl
pop
testl
jae
mov
cld
repnz
negb
out
mov
or
in
gs
rcll
jbe
or
inc
loop
mov
sub
inc
push
push
in
push
mov
mov
lock
or
cmc
xor
add
add
shlb
adc
pop
mov
cmp
pop
repz
push
or
sbb
mov
xor
or
idiv
mov
cmpl
push
mov
inc
fbstp
jbe
adc
xlat
mov
stos
xor
stos
push
or
and
sti
int
cmpsb
add
cld
sarl
push
push
push
jbe
cmp
ja
outsl
clc
pop
sub
sub
je
add
jbe
mov
inc
in
lds
clc
add
jmp
xchg
ja
pop
pop
arpl
test
or
mov
mov
out
jbe
cmc
ljmp
mov
push
mov
push
push
xor
push
aad
dec
scas
outsl
push
and
push
pop
sbb
push
sub
push
jge
cmc
and
push
loopne
fidivrl
jb
jl
pop
iret
out
jbe
test
xchg
mov
cs
jno
cmp
js
bound
dec
inc
in
pop
pop
mov
ret
stos
adc
lcall
pop
pop
adc
push
bound
sahf
sub
push
push
lcall
std
ja
inc
cmp
movl
add
jbe
add
mov
fdivrs
je
xchg
or
jg
ja
call
jbe
dec
push
mov
add
adc
or
shrl
add
loop
xchg
and
nop
jmp
sub
push
jg
clc
sahf
push
push
fisttpll
add
sbb
mov
dec
jmp
int3
out
idivb
dec
add
or
mov
out
ret
popa
mov
ficoml
add
or
push
addl
inc
mov
lea
jbe
fdivs
or
dec
adc
rolb
out
cmp
je
add
cmp
jo
mov
push
lock
mov
rolb
loope
mov
add
mov
call
subb
sbb
sbb
mov
xor
rolb
pop
mov
negl
cmp
sub
jle
push
push
pop
adc
js
adc
cmc
jmp
cs
ss
aad
sbb
mov
jmp
cmp
mov
shrb
call
dec
jmp
outsb
ds
sub
lea
or
push
inc
pop
aas
cmp
cld
adc
jae
pop
outsl
mov
cltd
mov
sbb
out
outsl
out
filds
pop
sti
aas
push
cmovs
mov
pop
outsb
mov
jbe
daa
push
xchg
fstps
push
or
push
fiadds
adc
add
repz
xchg
dec
add
push
lods
pusha
sub
je
ss
sub
xchg
push
mov
les
sbb
fs
je
adc
mov
loopne
movsl
pop
shlb
xor
adc
ret
test
imul
xchg
rorb
adc
andl
push
mulb
ljmp
scas
call
xor
add
mov
mov
inc
jmp
mov
cmpsb
ss
jbe
adc
push
mov
jbe
mov
icebp
inc
push
push
inc
ss
ja
sbb
xchg
sbb
das
mov
mov
scas
into
test
rclb
cmp
shlb
cmpl
je
js
cmp
inc
test
push
push
or
mov
mov
clc
or
dec
push
inc
inc
push
and
fcmovne
ja
dec
mov
sub
or
or
push
push
push
data16
and
je
lea
scas
dec
inc
fldl
dec
fimull
or
mov
imul
js
scas
xchg
lods
adc
inc
js
out
call
pop
push
xchg
xchg
sbb
lea
call
add
decb
pop
mov
jo
pop
mov
xor
xchg
mov
cmp
xchg
call
jo
mov
add
pop
rorb
add
into
xchg
push
push
adc
adc
hlt
fiaddl
push
xchg
adc
test
enter
popa
filds
and
sub
sub
inc
or
je
or
hlt
add
dec
sbb
jbe,pt
mov
les
insl
xor
pop
movsb
inc
cmp
out
dec
and
divb
cmp
push
sub
xor
cmp
jbe
push
push
sti
mov
push
mov
aam
lret
mov
or
jne,pn
pop
xchg
push
test
fstpt
jg
or
jbe
cwtl
inc
mov
pop
mov
je
dec
mov
popf
xor
pop
lret
outsb
mov
adc
xchg
and
mov
ret
or
add
dec
mov
out
xor
shll
es
sbb
and
push
pusha
sarl
mov
incl
push
or
push
add
sub
data16
mov
mov
sub
jl
inc
jb
push
pop
je
fisttps
repz
pushf
divb
or
cmp
jb
xchg
fistps
jbe
mov
je
addb
data16
leave
mov
jmp
push
pushw
lret
and
xor
jae
mov
xor
notb
mov
insl
sti
aas
and
scas
movzwl
push
mov
push
adc
cmc
adc
scas
enter
out
shlb
cltd
or
hlt
mov
mov
repnz
loopne
movsb
cmpb
adc
aam
add
andl
jl
xchg
sbb
mov
hlt
data16
pop
push
pop
pop
mov
or
iret
mov
pop
test
cmpsb
cmp
sbb
pop
in
cmp
jne
add
sub
incl
jne
mov
mov
imul
sub
add
xchg
mov
inc
mov
insb
test
jp
ret
adc
ja
or
add
adc
call
pushf
lods
iret
data16
mov
pop
stos
call
cmpsl
mov
cmp
xor
and
push
push
dec
adc
loopne
sub
shrb
or
ja
cmp
xchg
pusha
mov
ss
std
das
xchg
lock
jge
lods
in
xchg
hlt
loopne
pusha
xor
adc
cmp
les
jge
jl
insb
aam
sbb
stc
ss
jl
dec
int
dec
fiadds
dec
call
adc
fistpll
push
cmpl
jle
cld
cld
inc
jmp
jl
mov
dec
and
cld
xor
lods
or
push
in
call
inc
adc
inc
push
lock
ss
bound
mov
ficomps
jmp
push
aam
loopne
sub
push
add
add
gs
inc
lock
incl
cmpb
sbb
test
add
in
idivb
aas
loope
or
push
jne
rcrb
push
decl
xor
add
push
test
add
jo
sti
mov
cmp
pop
add
sub
rclb
and
push
adcl
adc
data16
jmp
fcmovnb
jg
sahf
mov
xor
dec
aam
sbb
ficomps
jg
or
dec
rolb
in
sahf
fadds
sbb
faddl
out
rol
dec
movsb
mov
jle
jo
rolb
daa
mov
outsb
lcall
cmc
sub
dec
jo
dec
sbb
push
clc
fwait
add
adc
adc
out
add
add
pop
mov
cs
je
mov
lea
aam
push
es
mov
adc
je
cmp
je
jbe
jle
fidivrl
out
pop
sahf
or
data16
xchg
and
mov
add
sub
mov
call
inc
jne
jne
call
addl
mov
or
inc
inc
or
in
loopne
lea
push
mov
mov
test
xchg
incl
pop
aam
lock
loop
cld
incb
push
jne
mov
mov
xor
sbb
scas
push
or
inc
es
xor
in
add
jo
mov
lods
loope
mov
add
inc
fsubs
arpl
cmp
aam
in
divb
mov
mov
adcl
mov
push
jl
sub
pushf
std
inc
mov
mov
mov
sbb
rorb
mov
add
pusha
stos
sti
je
repz
pop
ja
push
jle
dec
stos
ret
mov
push
inc
jmp
or
xchg
mov
aam
push
rol
mov
clc
scas
mov
inc
mov
jle
sbb
or
testb
inc
js
xabort
out
std
ja
call
mov
mov
or
lret
addl
inc
rcr
out
mov
jl
rclb
jbe
push
jnp
cmp
shll
call
pop
clc
sbb
pop
and
ret
pop
insb
ss
jl
lods
xor
jge
xchg
add
push
pop
sub
push
jmp
cmpsl
push
xchg
or
mov
push
inc
dec
adc
fimuls
xorb
xor
inc
or
rorw
mov
mov
ss
sub
mov
push
pop
mov
xchg
fmuls
dec
mov
hlt
mov
push
push
cwtl
adcb
icebp
mov
stc
mov
in
shrl
push
adc
cwtl
divl
push
cwtl
sti
das
into
divb
pop
pushf
jne
jl
xchg
call
aam
data16
sbb
data16
lods
pushf
call
daa
repnz
je
dec
mov
jbe
stos
in
jecxz
dec
std
addb
inc
out
shrb
testl
cs
mov
or
mov
add
jne
push
insl
int3
rcrb
enter
dec
aas
aaa
jne
pop
lods
lea
je
inc
add
stos
in
xor
inc
scas
sbb
push
daa
xchg
clc
jecxz
adc
sub
or
test
mov
add
sub
xor
add
enter
and
scas
clc
decb
addr16
inc
clc
and
add
cmp
mov
mov
aas
cmp
add
imul
test
in
sub
popf
inc
bound
cmc
add
xchg
inc
scas
adc
test
push
push
cmpb
push
xchg
inc
adc
cli
int3
nop
mov
mov
mov
lret
cli
or
mov
aaa
push
es
adc
lret
scas
inc
js
rclb
sub
inc
ljmp
inc
adc
rcr
data16
dec
sub
cmp
push
and
mov
push
insb
sub
xchg
les
ljmp
adc
stos
cmp
mov
jb
popa
fsubrl
mov
stos
ljmp
add
pop
add
pop
and
inc
cmp
out
push
aaa
cld
insl
loope
nop
fdivl
inc
call
add
or
sub
dec
data16
rolb
sbb
incl
push
mov
nop
and
add
das
in
xor
and
mov
clc
stos
loopne
or
loopne
scas
jg
adc
stc
xchg
roll
call
push
andb
std
ljmp
das
xor
mov
mov
mov
mov
or
ja
out
jnp
mov
xchg
mov
in
or
mov
rorb
into
cmp
fcom
daa
adc
add
add
sub
pslld
fmuls
push
popf
adcl
xor
nop
jge
mov
pop
sub
out
add
adc
xor
into
lock
adc
enter
and
dec
and
in
fs
xchg
stos
sbb
adcb
push
lcall
loope,pt
mov
pop
mov
pop
lea
adc
push
inc
dec
sbbb
jg
push
or
cmp
jne
push
cld
je
pop
out
jge
push
sbb
or
jne
cld
or
popa
sbb
in
mov
cltd
add
push
incl
pop
cld
mov
jo
pop
movsl
repnz
mov
jp
stos
push
in
xchg
cld
add
gs
cld
sub
test
scas
fsubrs
loope
lcall
pop
lock
lods
pshufw
inc
inc
sbb
es
push
and
add
jmp
add
add
aaa
cld
sbb
push
nop
add
in
xlat
orl
pop
in
jmp
sbb
sbb
movsl
adc
popa
ret
mov
lret
xchg
inc
cmp
ret
rcl
shrb
aas
addl
cmp
rorl
mov
sbb
push
inc
scas
adc
inc
xchg
pusha
fs
push
rorb
push
sub
push
adc
push
je
mov
inc
cli
data16
out
pop
push
push
adc
or
daa
insb
mov
jge
or
adc
test
and
sub
push
add
jne
loope
ret
cs
ret
or
test
sbb
push
dec
enter
pop
daa
push
adc
dec
push
and
mov
push
pop
call
loope
repnz
cmpsl
insl
push
fisubs
add
and
mov
enter
fisttpl
add
cwtl
sub
rolb
xorl
dec
loopne
cmp
lret
movl
subb
loopne
shlb
fmull
ret
aaa
pop
in
cmp
ret
push
fdivs
push
adc
jmp
push
push
sub
ja
mov
inc
je
jg
call
mov
stos
push
add
jmp
push
loope
inc
loope
pop
add
sti
jno
nop
cmpsl
adc
push
pop
inc
mov
clc
mov
je
dec
sbb
and
mov
pop
enter
sti
inc
shr
ja
add
push
add
jl
add
repnz
call
jb
push
pop
loop
jmp
cmp
and
push
in
xchg
call
push
jg
mov
pop
mov
or
push
call
dec
pop
sub
int3
dec
add
fdivl
jg
xor
orl
mov
lret
mov
add
int3
fstpt
pop
jmp
cmp
inc
test
push
mov
loop
mov
mov
data16
add
or
fidivrs
jb,pt
mov
lret
inc
cld
xchg
sub
fisttpll
xor
sbb
repnz
data16
ss
mov
inc
xor
cld
in
cmp
mov
mov
ja
lret
loopne
ljmp
clc
popa
xor
sub
cltd
xchg
fs
jge
loope
dec
or
dec
push
add
mov
cmp
imul
idiv
dec
mov
mul
push
mov
test
lret
add
das
and
push
cmpsb
rcr
enter
add
sbb
fcoml
loop
cs
mov
in
enter
adc
pop
lock
mov
insb
lea
nopl
nop
jg
mov
push
jle
ljmp
stos
lock
int
jbe
add
pusha
shrl
mov
aam
mov
pop
cltd
pop
jae
out
fucomi
ss
adc
push
ss
jne
lock
cmp
sbbb
sbb
not
or
push
or
into
mov
jb
shlb
push
rorl
xchg
test
js
pop
clc
push
movb
out
add
xchg
dec
push
stos
mov
cmp
mov
cmpl
sbb
decl
and
enter
out
dec
adc
enter
loopne
icebp
jne
add
push
jb
or
scas
pop
shlb
jb
repz
push
test
subb
xchg
mov
mov
sarb
ret
push
sub
add
mov
shlb
xor
jne
xchg
test
cmp
lret
mov
jmp
pop
dec
inc
ror
enter
sub
xchg
clc
ljmp
cmp
cld
roll
je
adc
lsl
mov
inc
fs
mov
mov
xchg
cmpsl
add
shr
idiv
dec
xor
nop
mov
push
dec
imul
mov
cmp
cmc
data16
add
jge
inc
popa
adc
lea
stos
or
fcoml
xchg
sub
sub
and
fldl
cld
das
dec
push
loopne
ds
jbe
retw
cmp
adc
scas
add
lock
adc
idivb
push
or
jb
fdiv
sbb
and
scas
call
and
inc
into
inc
mov
cmp
xchg
addb
outsb
mov
insl
aad
aam
test
push
adc
imul
into
out
pop
sbb
push
push
pop
jbe
push
adc
mov
test
mov
loopne
test
xchg
sub
repnz
add
int3
stos
fmuls
jle
je
or
int3
jmp
nop
pushf
xor
push
psubsw
test
mov
add
cmp
pusha
or
xor
cmp
clc
cmpsl
jle
mov
rcll
fs
shll
in
mov
pop
lea
push
fsubrs
cli
xor
inc
adc
or
or
cli
add
mov
lcall
or
xor
jmp
shr
ds
je
test
add
or
in
or
pop
rcl
adc
or
mov
adc
xchg
cs
imul
sub
xchg
clc
jbe
mov
jnp
inc
sti
xchg
push
cmc
push
inc
cmpsl
push
dec
js
or
pushf
sub
cmp
and
je
scas
push
addb
mov
out
es
mov
mov
pop
pusha
and
movsb
inc
push
dec
push
data16
popf
cmp
inc
repz
je
and
fstpt
push
outsb
pop
or
inc
lea
ja
push
inc
and
adc
icebp
inc
and
cltd
pushw
push
xchg
shlb
test
data16
inc
push
inc
jne
cmovo
pop
cmp
inc
mov
push
push
ret
pop
or
and
xchg
or
lock
sub
sbb
stos
pop
aam
push
sub
clc
pop
clc
cld
cmp
les
hlt
pop
mov
adc
xor
scas
daa
sub
mov
inc
sub
inc
or
mov
pop
add
call
push
push
add
ss
dec
inc
sti
push
outsl
add
stos
adc
fdivrs
aas
lods
xor
ds
push
call
sub
hlt
add
nop
add
sbb
das
aaa
sti
and
call
add
pop
jecxz
lcall
push
stc
mov
and
jmp
into
jle
sbb
test
loop
or
loopne
pop
cld
adc
mov
inc
ss
pop
js
mov
es
mov
inc
js
mov
mov
call
or
adc
push
push
push
arpl
das
ret
lret
jl
cwtl
ja
ljmp
push
cmp
pop
push
jb
enter
loope
add
int
pop
inc
fdivl
dec
inc
xor
jb
inc
int3
call
pop
and
fsubr
mov
cwtl
mov
cs
es
jb
std
jle
into
mov
subl
jle
pop
mov
call
mov
icebp
adc
adc
mov
mov
daa
rorl
test
lock
ret
jo
xor
xor
adc
mov
and
inc
mov
ljmp
adc
jb
lret
adc
add
or
scas
push
push
jbe
data16
cmp
daa
hlt
stc
das
inc
pop
lea
add
pusha
divb
jo
or
jnp
push
cmp
call
stos
cld
adc
push
mov
mov
outsl
pop
inc
in
in
imul
out
mov
loopne
or
mov
lcall
or
rcrb
sbb
and
inc
sahf
mov
mov
ds
or
ss
adc
outsl
iret
push
add
push
roll
out
fmuls
aad
and
mov
mov
fildll
ds
cmpsb
xchg
inc
test
push
pushf
call
cmp
adc
and
pop
js
sbb
inc
fsubr
mov
aaa
push
push
sbb
mov
push
rcrl
les
rcrb
mov
xchg
fmuls
test
push
mov
jnp
cmc
push
in
adc
pop
in
lret
or
adc
dec
cmp
mov
divb
or
adc
dec
cs
scas
adc
mov
or
incl
decl
sub
ss
cmpw
dec
cltd
or
jbe
add
outsl
sbb
lahf
scas
adc
ss
cmp
xor
adc
add
mov
jne
bound
jne
mov
out
divb
lea
push
pusha
adc
mulb
sbb
in
data16
rorl
xchg
lds
nop
aam
mov
add
fwait
test
jmp
add
push
sbb
xor
sti
shll
lahf
sbb
dec
mov
imul
in
sarb
cwtl
push
cs
mov
mov
mov
nop
dec
xchg
mov
cld
jp
testb
js
rclb
pusha
add
sub
mov
and
ljmp
jae
mov
sub
pop
xor
inc
pop
sub
xor
lock
add
sub
pop
mov
into
jmp
int
cmp
movsb
scas
or
push
sbb
jae
jmp
dec
roll
jecxz
inc
flds
leave
inc
push
or
repz
call
mov
decl
adc
adc
cltd
cmp
mov
les
decl
add
fdivs
lock
and
ljmp
cmp
xor
cmp
mov
dec
jl
push
cmpl
jmp
int3
leave
and
outsb
clc
data16
movzbl
or
mov
sarb
and
leave
inc
cli
sti
data16
or
lock
mov
ds
or
xor
fs
add
inc
adc
shlb
pop
dec
es
add
hlt
lock
mov
call
into
incl
sbb
out
cld
and
insb
push
cli
pop
xchg
add
hlt
cs
in
sub
repz
out
push
push
cmp
sub
xor
adc
rorb
add
lret
jecxz
sbb
cmp
xchg
adc
clts
xchg
dec
cmc
mov
mov
out
and
mov
or
ljmp
lcall
mov
cmpsb
mov
pop
add
dec
in
xor
lret
shl
cmpb
sub
dec
fsubs
sbb
cmp
push
sbb
aas
push
cmpsb
dec
mov
push
fdiv
inc
lock
orb
in
xchg
cmp
outsb
mov
dec
imul
adc
mull
in
cmpsb
mov
xchg
enter
out
adc
cmc
test
mov
hlt
add
xchg
xchg
add
das
data16
pop
rcl
dec
add
xor
in
mov
adc
or
sbbb
arpl
rorl
rclb
inc
dec
cltd
loopne
or
dec
clc
ds
lea
mov
sbbl
jns
or
leave
mov
popa
sbb
mov
mov
push
aaa
arpl
push
je
popf
test
mov
ds
pop
and
or
jns
in
hlt
cld
shl
es
and
or
mov
mov
clc
das
pushf
pop
or
jne
mov
or
jg
sub
les
jb
jmp
scas
je
dec
fcomp
sti
push
mov
and
hlt
into
sahf
out
jp
xchg
push
mov
pop
aas
sbb
into
or
out
mov
clc
push
jne
jl
sbb
or
je
add
push
xor
xchg
into
adc
mov
stos
push
test
pusha
xor
or
push
sbb
cs
mov
shlb
insb
lcall
mov
sub
je
xchg
mov
mov
dec
sub
xor
push
push
or
idivb
ds
inc
mov
cmpsb
out
jp
push
loopne
inc
mov
lea
and
ss
push
inc
mov
pop
add
mov
pop
add
call
pop
pop
imull
mov
adc
call
push
stos
jmp
push
call
mov
push
mov
sbb
scas
je
mov
jb
push
cmp
push
jg
inc
pop
adc
cmp
mov
inc
mov
xor
inc
loop
shlb
pop
lods
dec
adc
push
outsl
testl
push
xor
xorl
test
mov
inc
and
aaa
bnd
push
cmpsl
xchg
push
in
or
inc
divl
addl
je
jl
or
mov
add
or
xchg
jbe
cmp
bound
ss
in
or
adc
pusha
mov
stc
jp
sbb
fdivs
sbbl
or
popa
mov
xchg
cmp
ficoml
adc
inc
rcrb
ss
adc
fists
pop
nop
bnd
std
sti
cld
jae
sub
daa
aas
cmpl
test
sarb
int
daa
and
sub
push
add
mov
aas
fdiv
es
lods
pop
and
pop
cmp
jbe
mov
push
lods
pop
cld
mov
inc
mov
sbb
test
icebp
sub
bound
call
mov
sbb
mov
inc
inc
jnp
pop
add
iret
das
sub
and
fwait
inc
inc
call
aad
dec
mov
call
adc
inc
and
cwtl
stos
pop
pop
ret
outsb
jmp
mov
push
lea
in
mov
hlt
mov
push
enter
pushf
jp
aad
cld
incl
jl
inc
mov
je
mov
cli
mov
je
popa
mov
and
cmp
add
pushf
lea
leave
inc
call
mov
push
adc
sub
and
enter
jne,pn
push
mov
xchg
fs
xor
mov
cltd
push
mov
xor
xor
lock
ljmp
mov
ss
pop
push
push
add
sub
out
cmpsb
mov
call
fcomps
fs
adc
mov
mov
adc
xor
fcomps
xor
push
sub
pop
ret
pop
out
data16
jb
mov
das
sbb
daa
ja
push
lea
lock
or
loopne
test
hlt
or
icebp
and
rorl
jb
or
pop
and
jne
adc
adc
ret
movsl
mov
jmp
jbe
mov
loopne
dec
add
push
aad
dec
inc
jo
xor
add
push
add
pop
lea
fcoms
push
sub
push
inc
push
imul
xchg
adc
mov
push
loop
popa
icebp
cs
sub
dec
je
mov
dec
push
insl
sub
mov
in
xchg
push
push
stos
rorb
call
lods
or
aaa
repz
pop
xor
dec
cmc
push
int3
or
sbb
int3
scas
call
sub
or
or
iret
xor
sub
mov
cmp
std
push
hlt
imull
js
dec
fistpll
sti
jb
or
stos
push
or
pop
pop
pusha
push
mov
repz
mov
adc
pop
push
xor
add
pop
xor
mov
fidivs
push
pop
je
mov
inc
mov
inc
sti
mov
jecxz
inc
dec
mov
push
sbb
push
pop
decb
jecxz
adc
rcrb
sbbl
push
mov
add
repnz
cmp
lea
jle
cmp
add
jecxz
sbb
hlt
push
je
mov
push
or
cmpsb
call
xor
push
sbb
push
pop
push
data16
in
loop
jno
pop
jae
vmwrite
pusha
push
into
rcrb
push
xchg
stos
inc
mov
divl
imul
cld
pop
cmp
cli
jb
shl
mov
mov
push
mov
imul
addl
test
push
adc
push
inc
add
inc
lcall
imul
push
adc
iret
push
add
or
je
xor
mov
jmp
cmp
pop
and
roll
jmp
sub
mov
mov
push
or
cmp
dec
inc
add
nop
rcrl
call
mov
jle
call
mull
sbb
inc
loop
icebp
cmp
xchg
lock
daa
cmp
addb
lods
loop
mov
or
mov
lock
add
adc
ljmp
mov
sub
out
popl
jmp
stos
mov
jge
xchg
sbb
cmp
insb
out
or
push
hlt
mov
ret
fistps
mov
test
and
out
xor
jp
cmp
push
sbb
clc
mov
pop
fldcw
lret
ficompl
inc
sbb
jmp
test
inc
cmp
clc
adcl
js
pop
test
repnz
jecxz
adc
dec
or
sub
mov
es
into
ds
adc
and
idivb
push
sub
xchg
adc
mov
sub
or
aaa
dec
out
out
or
cmp
mov
inc
add
push
jb
jmp
mov
aas
out
call
or
xchg
xchg
xchg
dec
aas
push
inc
cmp
cmp
mov
andl
ja
call
test
adc
pushf
outsb
dec
aam
std
pop
ljmp
test
insb
ret
nop
mov
jbe
mov
cmp
jmp
test
mov
dec
shrb
imul
call
xchg
loope
mov
and
inc
add
ljmp
pop
mov
call
push
lods
fstps
lods
push
adc
sub
jbe
outsl
or
push
mov
xor
mov
adc
int
stos
pop
add
inc
mov
movsb
pushf
mov
xchg
jecxz
out
jl
push
and
xor
es
adc
inc
dec
add
rol
mov
pop
xchg
push
dec
inc
cs
push
clc
lea
mov
mov
call
pop
adc
jne
pop
and
stos
inc
loop
add
adc
mov
push
enter
adc
dec
cmp
jb
lret
jle
test
decl
sbbl
mov
jle
movsb
aaa
lea
pop
cmc
xchg
add
sahf
pop
call
pop
inc
clc
rcll
andb
loopne
pop
pop
clc
inc
fisttpl
pop
mov
dec
push
mov
mov
xchg
je
ja
pop
adc
and
add
mov
jle
mov
or
mov
movsb
call
xchg
lods
mov
xchg
incl
scas
jp
adc
in
and
mov
cld
jl
add
mov
mov
push
push
mov
add
mov
dec
lret
inc
cmp
je
imul
push
shrl
inc
imul
out
shlb
sbb
clc
hlt
or
call
idivb
hlt
and
enter
inc
sbb
stos
pop
pop
jb
adc
rorb
out
and
xor
loope
std
push
jae
movl
fmuls
add
outsb
or
lock
ret
push
push
adc
inc
cmp
cmp
daa
mov
xlat
mov
xor
cltd
push
and
xor
fmulp
xchg
push
or
push
xlat
cmp
scas
mov
xchg
jmp
mov
cmp
jne
hlt
stos
or
xchg
lea
pop
pop
sbb
or
cmp
mov
out
fisttps
push
outsb
sbb
sub
xchg
fwait
mov
jecxz
cmpsl
filds
adc
mov
mov
subl
sarb
je
and
data16
xorb
data16
ja
cmpsb
push
xchg
lock
stc
mov
ljmp
call
and
xchg
xchg
ds
aaa
into
lods
jp
aas
mov
imul
or
sti
cld
push
cmpb
jge
pop
push
push
call
and
add
fsubrs
mov
mov
mov
add
ja
inc
mov
push
fiaddl
out
outsl
je
lea
add
andb
sbbb
cmp
lock
cmpl
je
call
xchg
aad
ss
pop
repz
add
je
or
aas
jge
shll
add
fs
fs
inc
stc
pop
test
lods
cli
je
int3
adcb
add
enter
jecxz
mov
push
push
pop
loope
aaa
mov
xchg
idivb
add
push
push
jb
shr
xchg
fldl2t
add
or
adc
mov
dec
ret
add
aas
ret
jg
ds
add
adc
sbbl
sub
cld
xor
xor
pop
add
push
cmp
push
add
fcmovbe
or
dec
push
lea
push
push
das
cmp
and
add
jmp
mov
cmp
jle
dec
ljmp
bound
xchg
lea
pop
add
cs
push
je
addb
idivb
lock
push
xchg
cmp
mov
push
dec
sbb
cmp
mov
or
stos
add
push
insl
hlt
xchg
mov
test
fisubrs
jmp
mov
subb
adc
andl
scas
clc
mov
mov
pushl
shrl
loope
rcll
add
imul
incl
adc
roll
or
sub
loopne
sti
cmp
jle
or
mov
cmp
inc
jb
clc
flds
dec
rclb
scas
mov
cmp
lock
dec
lret
pop
cmp
divl
ss
pop
icebp
pop
or
mov
sarb
inc
cs
or
insb
ret
mov
mov
clc
mov
jecxz
je
push
mov
xchg
cwtl
mov
lock
addb
mov
test
adc
sbb
lea
inc
push
push
inc
call
add
fdivs
adc
scas
push
cmc
push
rorb
xchg
mov
bound
push
daa
je
fcoms
or
call
xlat
test
rorl
rorb
bound
mov
sbb
sub
jg
add
test
lock
pop
popf
add
ret
adc
call
push
mov
mov
mov
lock
outsb
push
rclb
mov
pop
cwtl
jne
xor
jle
into
and
ds
and
mov
ret
mov
xor
pusha
adc
rcrb
testl
rclb
data16
adc
xchg
xor
rolb
add
orl
jecxz
pop
cmp
mov
enter
and
xchg
adc
sub
inc
sbb
or
rol
or
cwtl
add
sub
xchg
bound
push
sti
jb
jmp
mov
mov
mov
fs
adc
and
push
or
mov
mov
ret
mov
stos
and
call
push
adcb
fs
or
add
loop
mov
pop
cltd
incl
or
adc
jo
and
add
xlat
cmovo
fadd
test
pop
xor
add
mov
cld
mov
and
lahf
xchg
inc
mov
or
in
mov
cmp
inc
rorb
push
xor
add
adc
je
loope
push
loopne
sub
icebp
pusha
sbb
fst
or
call
or
adc
idivb
xchg
dec
xchg
aas
cmp
mov
call
or
or
mov
imul
mov
push
jb
add
loopne
push
ss
jmp
push
scas
and
loope
sub
stos
lret
shrb
add
loopne
loopne
xor
mov
jp
pusha
sub
adc
loopne
jp
call
pushf
push
sbb
loopne
mov
push
std
jecxz
and
and
call
inc
loopne
test
addl
lcall
sbb
cmp
jbe
inc
popa
mov
xor
scas
pusha
push
ret
xchg
dec
add
inc
cs
push
adc
cld
jmp
divb
dec
inc
add
mov
call
mov
fldt
outsl
sub
inc
fcoml
pop
or
sbb
inc
es
or
or
add
pop
imul
add
adc
inc
lds
or
decl
and
and
pop
mov
repz
je
test
or
pop
data16
std
add
call
or
xchg
hlt
pop
int
je
xor
mov
scas
call
xor
push
pusha
adc
in
and
mov
cltd
add
mov
scas
jl
js
adc
add
jecxz
add
shlb
or
mov
cli
clc
mov
call
insb
sub
das
rclb
loopne
test
jo
or
inc
adc
clc
pop
loope
in
inc
mov
mov
pop
pop
add
repz
push
test
mov
pop
push
loopne
jne
xor
and
mov
mov
pop
addb
pop
pusha
movsl
outsb
pushl
and
repz
push
scas
mov
and
js
add
jmp
add
sbb
rorb
adc
adc
insb
ljmp
rorb
or
ljmp
out
ja
push
or
inc
or
sbb
daa
stos
addl
mov
xchg
lock
adc
mov
mov
pop
movsb
fisubrs
andl
aaa
sbb
or
push
cld
push
push
lea
icebp
jecxz
pop
xchg
les
je
add
mov
mov
cmp
loopne
subl
in
pop
add
jle
or
je
jl
push
pusha
adc
neg
mov
js
mov
lahf
adc
pop
js
jb
dec
dec
add
push
push
roll
add
jne
xchg
push
push
xchg
je
popa
dec
mov
nop
or
mov
les
dec
adc
or
loopne
rorb
pop
pavgw
fildl
sub
std
iret
or
popa
out
xor
das
push
mov
xor
add
in
push
mov
sarb
ljmp
pcmpgtd
mov
sbb
idivb
cmp
mov
rclb
sarb
mov
cmp
cltd
mov
ret
loope
or
push
adc
hlt
mov
add
sbb
shlb
jg
mov
add
or
clc
ds
or
incl
add
cwtl
mov
push
lock
push
test
sbb
movb
adc
and
lock
test
mov
mov
lea
es
mov
insb
mov
or
push
sbb
and
fisttpl
jbe
xor
xchg
in
inc
push
les
mov
icebp
add
adc
push
incl
push
inc
push
push
in
pusha
or
pop
or
push
push
sub
push
call
inc
sbb
adc
icebp
push
cmpsb
mov
in
sbb
addl
loopne
xor
xchg
repz
dec
leave
or
jo
es
mov
cs
cmpsb
es
pop
or
or
sbb
sbbb
fdiv
add
push
cmp
movsl
imul
or
pushf
in
fcomip
mov
xlat
dec
movsb
pop
call
hlt
adc
mov
lock
sbb
inc
std
xchg
sub
lock
rolb
pop
outsb
shrb
fidivrs
cmp
sbb
xor
adc
or
sti
ja
sar
or
sub
jmp
lods
dec
stos
imul
mov
xchg
mov
incl
add
mov
ljmp
mov
or
xchg
push
lods
jne
lcall
add
lock
inc
clc
es
shlb
ja
and
sub
sbb
loope
push
aad
std
pop
fdivr
add
adc
jmp
pusha
push
lahf
repnz
mov
test
jl
incb
jg
push
pop
shl
mov
mov
push
ret
lods
jne
into
nop
pushf
shlb
push
push
outsl
das
loope
sbb
add
or
aam
xor
addb
xorl
icebp
add
mov
cmp
js
cmove
enter
movsl
clc
das
inc
add
je
je
cmp
mov
and
ret
test
mov
jmp
test
sarb
ret
clc
lock
pop
add
xor
mov
call
or
or
inc
jo
mov
push
xor
sbb
jmp
ret
into
je
dec
mov
xor
lea
and
je
or
loopne
ja
les
loop
cli
mov
test
test
jle
xor
jb
mov
mov
aaa
add
or
jo
sbb
cmp
jl
sub
ret
xor
or
mov
sbb
je
sub
sub
fistl
mov
and
cmp
jbe
jo
testl
and
mov
sbb
mov
jb
lock
add
add
adc
dec
ja
call
enter
outsl
mov
sbbb
repnz
out
call
xor
andl
sbb
adc
fwait
insb
xor
or
inc
out
jg
inc
lock
add
sbb
inc
scas
and
jl,pt
xchg
cwtl
lea
mov
add
jne
pop
sub
mov
cmpb
fs
out
mov
addb
ljmp
add
cmp
jne
push
fldcw
and
xorb
je
idivb
add
and
cli
jb
push
jne
adc
pop
push
je
sub
push
fnstsw
push
mov
call
movsl
or
xchg
je
xchg
or
shrb
adc
test
adc
mov
testb
adc
xor
cld
push
push
lock
push
xchg
and
xor
xor
clc
dec
inc
fwait
inc
pop
and
cmp
push
aaa
in
and
and
clc
adc
cmpsl
mov
call
loopne
mov
xor
repnz
pop
add
pop
mov
das
push
and
aad
jo
cmovs
mov
or
andl
add
cmpb
push
and
in
add
add
daa
sbb
add
jne
mov
mov
nop
lock
adc
divb
std
inc
adc
or
or
out
adc
test
xor
cmp
push
cmpsb
inc
jg
sbb
inc
sub
inc
jo
push
divb
je
xchg
dec
les
fisubrs
mov
pop
add
je
hlt
es
sar
cwtl
add
pop
ret
aam
and
cwtl
cmc
xor
pop
mov
inc
movsb
cld
lret
mov
pop
shlb
push
repnz
clc
repnz
je
add
adc
dec
xchg
shlb
clc
jmp
jo
je
add
push
sub
or
int3
push
shrb
push
xchg
icebp
jns
jmp
movsb
pop
dec
test
adc
pop
js
inc
jbe
mov
or
xor
push
mov
push
ljmp
push
mov
push
stc
or
sbbl
pusha
and
fdiv
dec
pop
jecxz
xor
je
lods
dec
sbb
mov
xor
pop
add
xor
push
test
push
pop
mov
pop
lret
and
xor
or
lds
and
or
rolb
push
adc
jnp
mov
inc
iret
dec
jb
xor
call
push
je
add
lock
inc
cltd
shlb
lea
sbb
add
les
or
outsl
loop
lock
mov
insb
push
adc
bnd
in
mov
enter
and
pusha
pop
and
mov
stc
test
cmp
hlt
add
int3
jp
loopne
mov
jmp
jne
mov
outsl
jne
lea
jmp
mov
add
add
out
clc
cmp
mov
inc
xor
add
test
iret
add
push
mov
add
xor
pop
xor
inc
push
push
shll
add
push
or
shll
popf
fsubrs
push
repz
test
cs
aas
mov
jle
mov
loopne
repz
lret
inc
inc
inc
mov
xor
lods
int3
leave
xchg
div
lahf
rorl
aas
pop
xor
mov
shll
xor
movsb
push
repnz
push
adc
repnz
popa
mov
and
mov
push
rorb
inc
insl
xor
mov
jmp
mov
dec
push
mov
addr16
jecxz
jb
mov
adc
cwtl
into
sub
add
push
lock
lret
cmp
inc
and
decl
scas
xor
adc
or
addl
mov
inc
or
mov
jo
sbb
mov
lock
push
pop
js
sub
inc
enter
and
push
push
sub
xorb
mov
lea
xor
mov
cli
cmp
repnz
mov
jnp
sbb
xchg
addb
insb
imull
mov
or
sub
inc
or
sbb
aas
mov
loopne
daa
test
jg
sub
push
xor
ss
cld
and
pusha
sahf
and
pop
repz
testb
cmpsl
cmp
hlt
repz
push
dec
adc
clc
lods
mov
mov
mov
ret
dec
test
sbb
test
jle
pop
lahf
inc
fmul
push
mov
push
inc
stos
pop
or
dec
divl
sub
movsb
or
pop
cmp
jns
sub
js
adc
cld
les
into
pop
cmp
push
inc
pop
call
add
xchg
inc
mov
inc
std
push
pop
fidivrs
lea
call
add
and
sub
adc
jno
xorl
xor
cltd
shrb
call
xor
int3
testb
enter
mov
adc
or
jb
mov
or
xchg
pop
stos
push
fimull
jmp
mov
enter
insl
cmp
call
test
push
movsb
scas
jb
sbb
push
cltd
push
mov
push
and
fmuls
daa
cld
push
mov
icebp
mov
adc
or
inc
es
and
cltd
in
test
testb
pop
je
lods
outsb
xor
inc
or
cmpl
and
dec
or
aam
ret
in
incl
faddl
or
or
or
fcomi
cmp
jb
lcall
lea
dec
inc
or
jbe
add
jne
je
inc
mov
out
lock
arpl
icebp
testb
mov
test
nop
pop
mov
mov
push
and
bound
call
lods
sub
lea
or
mov
cli
decl
inc
cmp
pop
adc
mov
push
mov
adc
adc
xor
out
mov
xor
mov
ret
mov
add
pop
or
add
sbb
cmp
jne
cmp
popa
dec
mov
movsl
es
push
pop
cmp
pop
mov
es
dec
jg
mov
mov
adc
je
sbb
stos
ljmp
rorl
adc
je
notb
jb
mov
add
jp
jg
and
ja
ret
ja
subb
ret
hlt
pushf
add
in
xchg
mov
daa
push
clc
imul
sbb
inc
cmp
cld
xorb
movsb
cmp
je
in
sbb
je
addb
outsl
xor
and
or
adc
xchg
lock
les
dec
or
pop
cmp
push
das
inc
or
in
testl
cmp
cs
jl
or
in
inc
inc
pop
dec
sti
cmp
xchg
sbb
xor
jl
inc
hlt
inc
mov
shrd
jb
add
int3
sbb
inc
out
push
movsb
push
push
xlat
pop
or
sub
jae
cmp
test
or
inc
dec
jmp
ret
outsl
jg
push
call
inc
aam
mov
cltd
adc
sub
adc
je
dec
jg
int3
outsb
loopne
jbe
sbb
js
inc
les
test
pusha
sahf
out
sbb
and
add
dec
rol
dec
aam
xor
gs
fiadds
jle
jp
sti
push
cmpl
push
push
and
call
mov
adc
xchg
xlat
jl
or
adc
jl
push
push
jge
leave
insb
or
out
sbb
inc
cs
cld
arpl
pop
fsubl
add
call
mov
call
hlt
sub
int3
sahf
pop
test
roll
inc
fcmovnu
push
lret
clc
ljmp
add
add
test
xorl
sbb
xorl
pop
lods
add
add
add
mov
and
add
jl
shrl
faddp
filds
adc
cld
and
inc
outsb
sub
and
and
mov
add
or
add
sub
cli
inc
jp
insb
idivb
loopne
rorl
sub
pop
mov
inc
daa
jmp
xchg
loope
cmc
popa
xchg
mov
lock
mov
or
faddl
push
add
mov
neg
and
jle
xor
lea
pop
sarl
ds
jle
into
faddp
test
ret
test
outsb
cwtl
adc
inc
sbb
les
lock
xor
stc
xor
mov
sbb
std
pop
dec
mov
xchg
adc
popl
adc
and
mov
push
push
or
pop
inc
stos
add
sub
out
mov
pop
pop
add
cmp
fiaddl
lret
or
je
cwtl
cmp
pop
daa
xchg
mov
cmp
test
mov
dec
add
jmp
mov
xor
testb
push
sar
xor
or
outsl
add
sub
or
mov
and
fwait
push
sti
lds
push
pop
shlb
fwait
pushl
jae
test
icebp
mov
xor
adc
roll
jmp
mov
jge
icebp
pushl
mov
movb
ret
add
inc
loopne
nop
nop
dec
cltd
cmp
mov
push
mov
jbe
ss
xor
notb
stos
cli
stos
cmp
sti
mov
mov
leave
std
push
std
jb
pop
movsb
pop
inc
ret
imul
cmp
ds
xlat
mov
mov
and
test
dec
jle
iret
push
into
mov
dec
mov
insl
incl
mov
in
add
sub
stc
in
mov
mov
or
loope
mov
cli
ja
std
add
or
mov
jle
sub
pop
pop
mov
mov
andl
ja
shlb
push
ds
or
fiadds
xchg
cmp
jns
mov
in
enter
push
sub
test
push
xchg
clc
mov
mov
decl
adc
adc
add
test
jne
lock
or
fidivrs
ljmp
mov
stc
and
mov
rcrl
shr
or
gs
movl
std
add
cmc
jbe
inc
dec
add
loop
rcll
or
jne
outsl
jg
daa
push
dec
dec
cmp
scas
cli
jl
aas
mov
add
mov
ret
andb
into
add
into
jne
fcoms
roll
add
dec
push
dec
push
sbb
jmp
call
in
or
mov
mov
add
cli
xchg
cmp
cmpsl
push
or
mov
test
mov
jg
or
fbstp
xor
test
jne
cmpb
aas
push
mov
je
cmp
jmp
lea
ret
dec
ja
rol
pop
outsl
out
rorl
insb
sti
adc
stc
and
inc
shrb
dec
js
lds
loope
decl
mov
inc
cmp
jl
outsb
dec
mov
clc
mov
mov
aas
mov
add
sarl
push
push
cli
mov
push
or
call
loope
scas
testb
push
mov
lock
loope
hlt
jle
mov
jne
or
cmp
loopne
jmp
cmc
xor
lock
test
and
negl
out
mov
cmpsb
fdivrp
jbe
lea
push
xor
outsb
xor
pop
cmp
adc
and
and
fsubr
pop
jne
lods
iret
or
dec
or
fs
testb
lods
fmull
or
bound
ficoms
movsb
mov
push
insb
clc
mov
mov
inc
lods
fsub
negl
mov
push
adc
incb
pop
mov
mov
add
sti
mov
adc
aas
push
add
test
add
mov
or
out
out
mov
leave
clc
stos
test
add
rcll
cli
ret
repnz
push
daa
cld
or
sbb
adc
mov
ficoml
incl
push
dec
mov
jne
je
mov
adc
mov
ss
push
push
jno
sbb
ret
jle
sub
xchg
mov
pop
jl
jg
dec
adc
je
dec
cmp
incl
pop
or
shl
sbb
mov
sub
add
dec
inc
pop
pusha
cld
sbbb
or
dec
push
insl
inc
mov
push
test
loopne
daa
cmp
das
pop
div
int3
rcrb
movsb
sahf
add
sbb
scas
jle
call
stos
mov
push
pop
pop
or
cwtl
mov
mov
or
mov
je
cmpsb
push
adc
sbb
inc
xor
push
cmpsb
out
xor
ds
or
fmulp
pop
ret
xchg
push
test
xor
dec
cld
gs
mov
jne
rcll
push
lock
nop
inc
ficoml
je
pusha
adc
test
popf
mov
loopne
insb
adc
push
call
push
pavgb
or
pop
sbb
mov
scas
rorb
push
ret
sub
jbe
add
add
pusha
scas
ja
add
add
sbb
adc
mov
fstpt
adc
fisttps
hlt
pop
xor
push
lods
rcr
es
push
movsl
xor
push
aam
sbb
ret
push
push
mov
mov
jne
add
push
inc
loopne
rorb
es
xchg
push
or
xchg
cmp
jl
add
or
sbb
adc
cmp
mov
or
inc
add
xorb
subl
pop
add
loope
mov
cmp
mov
dec
jecxz
jp
and
push
inc
les
add
test
pop
rcr
data16
mov
inc
add
out
insl
mov
and
add
xorl
sbb
addb
loope
addl
jbe
in
jp
cmp
adc
enter
movsl
mov
add
mov
outsb
fs
add
insb
xchg
sarb
loopne
cli
cmp
mov
sti
mov
lea
cmp
xchg
shll
aam
into
mov
mov
mov
nop
mov
je
pop
adc
push
xor
hlt
aam
out
push
xor
xchg
mov
nop
jge
dec
fidivl
dec
push
cmp
jle
and
sub
push
pop
mov
xchg
clc
or
push
sbb
cmp
lock
add
add
push
jp
mov
shlb
subb
push
test
jecxz
pop
cmp
rclb
faddl
mov
data16
pop
mov
push
scas
pushf
inc
mov
dec
sub
movsb
push
mov
lret
mov
std
mov
orl
and
push
and
dec
push
sub
mov
mov
xchg
out
xor
cld
mov
mov
nop
push
mov
ret
int3
mov
outsb
fdivs
pop
sbb
push
test
xor
ja
pushf
ljmp
cmp
mov
push
ret
inc
push
dec
and
dec
cwtl
dec
sub
call
sbb
inc
in
or
adc
test
movl
div
push
in
adc
xchg
xchg
push
cmp
xchg
adc
jns
jae
xchg
in
call
jmp
notl
call
adc
mov
test
sub
adc
mov
in
je
add
pop
sahf
daa
je
data16
lldt
xlat
jne
push
push
xchg
mov
mov
adc
add
aam
cmp
stos
xor
das
gs
pop
adc
mulb
sbb
je
pop
inc
in
cs
lock
mov
adc
or
outsl
and
outsb
push
push
add
hlt
insb
sub
xchg
mov
mov
inc
sti
icebp
jbe
lods
rclb
dec
mov
inc
inc
mov
mov
enter
popa
sbb
and
out
xchg
add
lods
push
es
jnp
mov
push
pop
cli
jmp
in
sub
push
jl
les
mov
sbb
cwtl
adc
aam
test
pushl
ljmp
loopne
das
cmp
inc
xchg
jle
inc
in
push
mov
sub
add
adc
dec
sbb
pop
cmp
repnz
rorb
test
push
in
les
fdivl
and
jp
movsl
or
outsl
jp
jp
push
ljmp
ljmp
pusha
out
add
rolb
add
cwtl
pop
hlt
in
jmp
inc
adc
stos
ss
lret
in
cmp
cmc
xor
sbb
fmuls
xchg
enter
xchg
push
or
outsl
mov
and
adc
push
sbbb
insl
ss
stc
inc
dec
insl
dec
pop
cld
add
lcall
dec
adc
mov
sub
jg
call
sbb
or
das
nop
rolb
inc
testl
adc
pop
lods
repz
enter
pop
fldt
es
subb
lahf
mov
mov
aam
icebp
aaa
xchg
adc
rcl
xorb
movsl
xor
mov
popa
ret
ja
adc
sbb
sbb
test
jo
pusha
xor
cli
and
add
fyl2x
mov
lcall
xor
incb
jb
or
outsl
call
push
leavew
sbb
cmp
dec
lret
sbb
bound
mov
adc
repz
sub
xchg
push
shrb
out
jbe
push
inc
mov
inc
ja
pop
push
cmp
push
jo
jecxz
dec
fadd
lea
push
ss
xor
in
dec
add
xchg
pop
stos
mov
mov
int
sarb
inc
pushf
test
push
or
push
mov
sub
imul
push
addr16
push
sahf
add
shrb
adc
jbe
inc
lahf
add
xchg
mov
std
and
shlb
shlb
pop
adc
rcrb
into
dec
cmp
push
push
add
inc
push
sarb
or
inc
jg
enter
leave
and
dec
adcl
in
mov
sub
dec
loope
mov
imul
jl
rolb
mov
shll
mov
sub
add
call
fcoms
fisubrs
add
subl
scas
jp
mov
sub
repz
shrb
mov
pop
xor
cwtl
sub
pushl
inc
stos
add
cmp
test
dec
or
push
sbb
add
xchg
mov
cli
icebp
xchg
ds
dec
leave
push
mov
add
js
jl
sub
push
adc
shrl
pusha
aas
sub
je
orb
daa
icebp
dec
jmp
in
add
aaa
mov
stos
je
hlt
add
mov
fcompl
mov
sbb
add
xor
mov
xchg
popa
add
mov
add
ret
enter
in
cli
scas
push
icebp
cli
pop
pusha
jno
xor
mov
pop
mov
jge
jecxz
add
jne
push
push
or
cld
and
mov
add
push
xlat
loopne
xor
adc
mov
sub
mov
sbb
hlt
incl
in
ja
add
xchg
push
pushf
js
lcall
loopne
hlt
push
pop
sbb
loopne
and
je
mov
dec
push
pop
pop
push
cmp
into
lea
add
adc
call
sbbb
addb
test
and
movsb
jmp
and
andb
dec
pusha
mov
xchg
es
and
add
loopne
adc
adc
call
pop
jae
scas
or
insb
loopne
loopne
ja
in
push
call
mov
test
adc
je
pop
ret
std
inc
mov
jg
inc
adc
jmp
push
inc
scas
pushf
jbe
or
jmp
cmp
xchg
push
jae
jg
fiadds
xchg
xor
jg
add
mov
mov
sbb
jne
bound
hlt
or
data16
add
stos
or
loopne
mov
pushl
pusha
push
xchg
call
add
adc
clc
jmp
imul
dec
add
std
mov
jecxz
jg
lea
mov
test
cmp
rcrb
mov
add
dec
adc
bound
loopne
cld
out
sbb
je
and
ds
je
lea
inc
je
add
testl
mov
push
clc
xchg
inc
and
je
adc
jo
adc
or
je
mov
dec
jl
arpl
lods
jl
sub
pusha
or
inc
dec
cmp
dec
dec
push
addb
dec
leave
push
and
mov
pop
ljmp
cltd
pop
jb
xor
dec
xor
mov
or
pop
jmp
sbb
or
and
loopne
retw
loopne
lcall
xchg
ret
mov
xchg
bound
add
into
and
sub
idiv
dec
in
and
xchg
loopne
mov
loop
insl
jp
pusha
or
or
stos
fs
and
cmp
dec
fsqrt
into
or
subb
js
loop
in
loopne
pop
xchg
andl
decl
push
push
pop
sub
fs
cmp
cli
mov
mov
push
xor
xchg
mov
push
call
test
adc
mov
in
push
int
notb
adc
mov
push
push
inc
lds
pusha
mov
adc
stos
inc
shlb
and
or
inc
mov
pop
pusha
inc
and
js
sbb
ret
inc
loopne
ret
jnp
mov
cwtl
jne
add
mov
lahf
adc
dec
mov
sub
push
push
xor
mov
mov
cmp
or
push
inc
push
shrb
sbb
push
xor
inc
dec
xor
adc
cmp
sbb
inc
adc
cli
xor
inc
clc
inc
xchg
xor
mov
add
shlb
jae
mov
xchg
cmp
cli
sub
mov
push
call
sbb
xor
lock
mov
mov
hlt
and
ljmp
mov
mov
shlb
jecxz
jnp
lock
mov
sbb
lock
hlt
gs
inc
push
inc
push
cltd
adc
std
dec
ja
cmp
dec
or
mov
push
adc
clc
add
push
and
xor
shr
jmp
sbb
add
sub
lea
outsb
inc
test
mov
div
push
jno
pop
cmp
mov
jo
call
int
std
pop
add
into
lock
arpl
stos
sub
xor
inc
call
outsl
mov
mov
out
call
cwtl
push
bound
xor
fcompl
fbld
lock
or
jo
cmp
or
inc
cmp
mov
shlb
mov
test
and
cmp
aam
jae
jl
push
data16
cld
outsl
rolb
mov
pop
call
add
xor
bound
jne
xchg
pop
xor
or
mov
pop
add
outsl
add
add
js
or
movsb
mov
repz
ljmp
inc
sti
in
push
mov
ljmp
andl
inc
add
inc
push
pop
dec
jmp
xor
sbb
xor
or
orb
je
enter
and
push
adc
inc
fdivr
ljmp
lock
lahf
pop
or
add
xor
sti
jb
test
push
subb
sar
aaa
sbb
icebp
push
pop
cmc
pushl
xor
andl
mov
inc
inc
js
das
and
imul
mov
mov
sbb
lea
mov
mov
outsb
lcall
cmp
mov
test
or
pop
jno
sti
xchg
xor
pop
pop
ret
adc
lret
and
mov
xor
push
mov
fisttps
call
adc
sbb
mov
or
ss
push
mov
add
xor
dec
outsl
test
scas
add
test
add
fistl
mov
or
and
adc
test
mov
scas
sub
fbstp
in
xor
repz
gs
mov
fwait
lea
push
xchg
add
lods
lock
ljmp
mov
inc
in
scas
push
add
enter
add
int3
and
push
mov
pop
xor
and
jg
or
fidivl
and
push
adc
jne
popf
sti
add
add
dec
push
or
loopne
call
sub
cli
sub
add
aaa
insb
sti
add
add
stos
lods
lock
push
sub
mov
adc
xlat
mov
je
jecxz
add
xor
jo
push
fists
pop
sbb
lea
xchg
scas
scas
xchg
outsb
scas
fmuls
in
add
pop
icebp
mov
add
add
or
ds
dec
inc
out
mov
les
push
sar
decl
icebp
cmp
mov
cmp
movsb
fs
or
pop
call
or
nop
jle
scas
or
mov
adc
sahf
mov
xor
mov
xor
push
pop
movsb
sbb
es
xor
and
push
add
pop
inc
mov
and
jbe
cmp
arpl
xchg
js
jae
popa
push
outsb
cmp
jo
fs
pop
mov
dec
fistl
dec
add
outsb
xor
ljmp
jle
in
inc
inc
mov
jle
push
push
add
push
xor
add
rolb
add
pop
bound
fcmovnbe
in
mov
sti
mov
les
repnz
push
xor
add
xor
fdivrs
sar
mov
jo
pop
xor
add
fiadds
mov
push
les
add
fisubrl
rclb
filds
nop
inc
testb
xor
inc
loop
xor
sbb
add
xlat
jno
ja
or
pop
arpl
or
test
cmpl
ret
and
fs
add
and
xchg
idivl
dec
addb
push
or
hlt
or
dec
xorb
bound
add
inc
or
xor
add
pop
jg
mov
das
sarl
or
movsl
out
shll
xchg
xchg
push
shrb
inc
or
jbe
mov
cld
inc
in
pop
xchg
inc
pusha
sbb
negb
mov
inc
adc
pop
mov
xchg
and
xlat
jbe
cwtl
testl
mov
push
xor
push
xchg
in
fdivs
add
cmp
jg
push
loopne
pushf
xor
mov
jmp
pop
sbb
mov
xor
mov
jp
leave
pop
or
mov
psubsb
push
pop
sub
and
cmpsl
xor
jnp
fisttpl
test
jb
out
xor
pop
jo
inc
xchg
jo
push
push
call
jmp
add
sbb
jge
cwtl
xor
lcall
cld
out
xor
not
xorb
icebp
mov
sbb
cmp
mov
mov
jg
sbb
push
jmp
and
outsl
xor
fwait
sbb
cli
mov
mov
sub
outsl
call
or
or
sub
sbb
or
add
or
adc
inc
sub
cs
sbb
popf
in
mov
sbb
in
push
push
push
cwtl
dec
adcb
add
sbbl
xor
loop
call
xor
add
inc
mov
call
das
mov
mov
pop
inc
add
dec
sbb
jmp
or
cmp
out
jo
sbb
adc
push
daa
jo
and
or
dec
mov
mov
push
dec
lock
in
push
stos
jmp
ljmp
imul
bound
mov
les
lds
ret
push
test
in
filds
aam
and
arpl
mov
sti
addb
xorb
repz
xchg
add
pop
add
loop
xchg
mov
test
adc
fsubrp
add
push
sbb
xor
std
cmp
push
cmp
mov
sbbb
add
push
mov
subb
imul
or
dec
jbe
inc
mov
aaa
sub
or
add
cmp
xorb
jo
sti
orb
add
outsb
clc
mov
orb
orb
divl
jo
inc
and
or
pop
arpl
lock
xchg
sub
fcoms
sbb
call
decl
jmp
dec
push
rclb
inc
ret
shrb
jnp
sub
pop
or
mov
inc
popa
adc
rcrb
enter
add
push
outsb
fistl
mov
mov
str
fadd
mov
leave
test
sub
jo
pop
add
mov
call
add
repnz
adc
test
mov
add
or
add
and
ret
dec
adc
pop
decl
addb
es
adc
jg
and
in
add
cmp
call
sarb
es
xor
push
sub
adc
inc
sub
adc
adc
imul
add
inc
ret
mov
sub
hlt
shll
fdivrs
add
movsb
xchg
pop
or
cmpsb
push
add
js
sub
std
add
test
add
test
mov
push
add
mov
xchg
loop
sub
outsl
js
cld
push
pusha
movsb
adc
out
xor
lea
in
les
add
ret
sarb
pop
loopne
daa
and
inc
or
adc
lods
pop
add
sub
movsl
add
test
ljmp
rcll
cld
je
pop
fdivrs
or
hlt
leave
cmp
fistpll
xchg
push
and
or
daa
cmp
fs
sahf
adc
push
add
pop
rclb
enter
rcrb
sbb
outsb
push
hlt
push
jl
adc
add
or
lret
in
pop
pushf
cmpsb
adc
adc
or
or
add
mov
and
push
loopne
jg
xor
mov
lods
push
push
pop
jecxz
pop
add
cmp
push
mov
popa
sbb
loopne
sti
int
push
add
push
xor
sub
mov
push
je
xchg
idiv
stos
dec
or
add
and
xchg
adc
add
loop
fldenv
add
notb
mov
fsubrl
pop
loopne
or
insb
pop
mov
inc
push
jb
or
push
jecxz
and
pusha
pop
sub
fiadds
mov
or
clc
outsl
pop
and
add
nop
or
pusha
inc
out
push
popa
addr16
test
push
cwtl
or
dec
sub
pop
add
fsts
mov
xchg
iret
mov
orb
xchg
add
push
loopne
loope
xor
pop
pop
pop
adc
inc
cld
fs
xor
je
push
jp
sub
out
pusha
and
lods
ret
add
add
and
iret
repnz
loop
cmp
mov
xor
mov
xor
loopne
or
loopne
push
lds
mov
add
xor
jg
mov
push
add
adc
loopne
jmp
push
cwtl
jp
sarl
mov
stos
into
mov
or
lods
sahf
cmovp
sbb
aaa
mov
mov
imul
les
mov
or
pop
or
push
fists
pushl
adc
pusha
or
mov
pop
mov
pop
xor
inc
xchg
sub
loopne
into
xchg
push
jg
lock
hlt
shl
pop
adc
push
pusha
add
outsl
fwait
cmpsb
clc
mov
add
arpl
or
xchg
or
bound
fcomi
mov
and
or
add
out
loopne
lock
sbb
out
movsl
mov
adc
sbb
or
fcoms
lahf
es
loopne
jg
hlt
bound
addl
loop
or
jl
lds
mov
mov
mov
mov
cwtl
mov
pop
loopne
js
aas
pop
ret
add
mov
add
xchg
call
movl
in
addr16
addl
loope
jg
fists
xchg
out
mov
pusha
rorb
cmpsl
loopne
sti
jae
shr
lods
jle
cmp
add
add
mov
inc
movsb
mov
es
xor
loopne
loopne
fiadds
add
cmpb
fisubl
cld
pusha
add
pusha
cmpsl
push
mov
add
jo
or
and
leave
fprem
cmp
in
or
fldenv
push
push
pop
push
cmp
std
mov
push
or
sub
popa
popa
lods
std
push
ret
in
test
scas
insb
mov
pop
shl
lahf
pop
cmpsb
pusha
stos
stos
cmp
push
add
xchg
mov
and
sbbb
ljmp
popa
xchg
mov
popaw
es
add
loopne
loopne
add
dec
les
in
push
mov
pop
loopne
add
lock
pop
test
xchg
xchg
pop
cmc
push
jg
dec
fists
bound
mov
mov
push
mov
push
gs
jne
add
loopne
dec
mov
loope
pushf
jl
inc
outsl
xorb
push
dec
clc
cmp
aas
add
xor
or
stos
jb
inc
es
jmp
bound
mov
sbb
pop
xor
loopne
xor
or
mov
loop
pop
lock
mov
adc
add
add
call
cmp
push
push
jmp
xorb
xchg
arpl
bound
mov
call
inc
divl
add
jp
dec
jbe
or
jb
mov
cmpsl
test
pop
ljmp
adc
lea
pop
sub
pushl
sub
cmp
subb
andl
mov
orb
in
xchg
fistpll
pop
pop
add
lock
inc
ret
fst
lock
xor
jo
push
je
lock
stos
in
mov
push
test
fisttps
lock
movl
mov
xor
hlt
addl
incb
cmpsl
mov
call
add
push
ss
in
xor
insb
sti
xor
movsb
stos
test
rcll
push
nop
jbe
lds
jp
jl
ret
push
sbb
and
mov
mov
mov
xor
and
call
pop
jmp
fidivrs
or
sub
mov
adc
or
mov
cli
arpl
dec
add
shlb
adc
shrb
test
jp
call
mov
subb
push
lock
inc
lock
pop
pop
sti
dec
inc
decl
jo
stc
pop
sbb
sbb
xor
dec
inc
inc
outsb
loope
daa
push
stos
push
pop
clc
aaa
add
mov
mov
lret
test
add
clc
inc
orb
out
push
jne
cli
pop
cli
cmp
inc
dec
jecxz
and
inc
and
pop
repnz
dec
mov
mov
push
pop
inc
adc
adc
iret
icebp
sbb
push
adc
clc
int
sub
sbb
adc
popa
lock
sub
call
and
loopne
xor
and
sub
inc
adc
icebp
ja
jg
jmp
cmp
mov
call
movsb
sub
lock
fwait
mov
aam
xorl
ljmp
lock
in
dec
test
add
fbld
pop
les
cmp
rcrb
lock
icebp
push
out
add
sub
xor
push
jmp
cltd
inc
je
add
fs
mov
call
jge
std
lds
mov
xor
divb
test
push
cltd
mov
push
scas
nop
stos
pop
sub
and
lock
cmp
lret
and
lods
xor
stos
fildll
test
dec
clc
xor
jp
pop
lea
mov
mov
or
pop
decl
inc
call
sbb
call
sub
lds
mov
mov
push
xchg
jl
lock
push
adc
or
pop
xor
ret
dec
and
add
fstl
mov
adc
xor
adcl
rorl
psubd
incb
add
inc
loope
or
and
stos
xor
push
neg
push
clc
jae
xor
inc
xor
repz
insb
popa
mov
jb
les
mov
aam
icebp
adc
pop
js
add
mov
add
push
or
adc
subb
or
cli
pop
add
mov
mov
bound
scas
loope
mov
pusha
push
xor
jne
js
pop
adc
jo
and
and
push
faddl
jmp
pop
push
xor
push
xchg
jno
pop
call
or
push
inc
xor
pop
mov
pop
pusha
fsubs
outsb
add
push
fwait
cltd
mov
lods
mov
icebp
jb
add
repnz
add
xor
mov
in
xchg
pop
sbb
div
dec
jne
xchg
xor
movb
xor
call
adc
and
loop
gs
push
mov
pop
sar
mov
aaa
mov
xor
es
mov
push
xor
hlt
dec
sub
push
cmp
xor
push
sbb
fwait
outsl
push
test
pushf
adc
lock
rclb
xor
out
inc
lock
cli
jg
or
stc
or
popa
xor
xor
std
inc
sbb
sub
dec
jb
jo
rcrb
adc
pop
orb
jo
mov
popf
cli
push
adc
pop
ret
add
hlt
and
push
inc
sub
and
test
call
stos
dec
nop
mov
mov
inc
mov
and
loopne
xor
mov
jo
fwait
negb
movsl
mov
mov
icebp
scas
push
lods
fildl
in
add
jo
pushf
xor
mov
mov
mov
or
sub
jne
ljmp
jecxz
or
xor
jo
mov
call
push
jmp
pushf
add
sbb
add
sbb
xchg
push
in
push
mov
mov
lds
mov
orb
lods
lahf
and
shrb
jp
outsb
add
lcall
xchg
or
adc
or
inc
andb
xchg
fidivl
lcall
out
add
mov
cmp
adc
outsl
outsb
call
pop
ret
clc
jbe
fs
inc
and
cmc
mov
lret
push
pop
pop
jl
and
push
inc
or
xor
incl
lret
adc
or
mov
jge
das
mov
adc
sub
mov
iret
scas
and
negl
adcb
movsl
inc
add
xor
call
test
pusha
or
loope
nop
sbb
dec
xor
xor
inc
jo
and
and
in
and
fwait
ss
call
subb
cmp
test
mov
mov
ret
adc
inc
lock
or
sbb
mov
push
inc
std
mov
cmp
add
divl
mov
xor
push
and
call
aaa
xor
jo
call
mov
fildl
adc
push
rolb
popf
in
jle
je
or
cwtl
xor
xor
push
mov
jmp
fdivl
cld
call
pop
pushl
mov
cmp
jmp
clc
cmp
add
xchg
mov
bound
je
jge
and
sub
shl
sbb
inc
orb
push
mov
push
lea
enter
lock
mov
push
sub
clc
in
scas
mov
test
rorl
and
fmul
push
ds
bound
push
arpl
ljmp
add
lret
test
ljmp
dec
mov
mov
cmovs
shll
push
aam
lea
dec
dec
imul
mov
pop
loop
add
pop
adc
jae
mov
sbb
mov
and
test
mov
incl
mov
push
out
movl
dec
pop
repnz
add
mov
dec
add
mov
jecxz
add
inc
add
scas
dec
add
cwtl
rorb
outsb
jl
mov
push
data16
inc
add
aam
sub
je
add
clc
test
and
testb
dec
xor
push
ret
outsl
outsb
jo
addb
lods
push
push
pop
bound
or
add
push
add
imul
jo
dec
out
lods
dec
int3
jbe
fwait
sub
xchg
adc
bound
adc
mov
pushf
adc
push
xchg
dec
aam
adc
push
or
cli
jg
and
push
je
inc
mov
mov
adc
push
pop
dec
test
movb
and
data16
mov
loopne
jge
push
scas
int3
stos
adc
or
xor
aam
mov
mov
mov
sbb
add
pop
call
add
sub
lock
call
clc
decl
add
push
mov
lea
fisubl
testl
in
mov
mov
jp
inc
shrb
fwait
ljmp
pop
push
test
push
mov
sub
cmp
dec
and
test
stos
cli
rorb
lret
sub
or
add
cmp
rolb
push
inc
mov
or
mov
fs
out
pop
cld
xor
jo
inc
pop
ret
rcrl
das
call
rorb
mov
stos
push
push
mov
or
mov
test
add
adc
or
push
je
es
testb
dec
jl
adc
jno
aam
addr16
mov
adc
movsl
rcrb
mov
jl
inc
pop
cmpsb
js
lcall
sub
pop
movsb
xor
mov
lcall
hlt
jne
mov
and
add
inc
push
push
cltd
outsb
clc
decl
add
lcall
xor
rol
mov
adc
adc
aaa
outsb
xor
lock
push
decl
sbb
scas
lea
subb
sub
jb
shrl
push
js
mov
fimuls
lods
imul
rorl
xchg
jp,pn
push
and
rolb
outsb
mov
jle
fistl
test
pop
mov
add
push
push
movb
test
mov
outsb
push
sbb
dec
icebp
lds
jge
jbe
push
inc
mov
adc
jne
and
insb
mov
in
insb
cli
jge
inc
loope
adc
test
rorb
push
dec
mov
push
add
lods
cli
femms
ljmp
outsl
cmp
or
mov
mov
loopne
jl
decl
rclb
xchg
ljmp
rolb
inc
xor
or
call
sbbl
dec
rcl
bound
jbe
mov
ss
cmpsb
or
clc
and
inc
mov
mov
jmp
loopne
call
inc
out
clc
fildll
push
test
or
adc
pop
ja
stos
or
adc
shrl
hlt
push
pusha
push
xchg
lcall
adc
add
jae
adc
test
out
xchg
loopne
adc
add
adc
leave
add
adc
ret
pop
xchg
insl
mov
loopne
cmpl
ljmp
ss
push
push
xchg
sub
aaa
mov
call
xorb
add
cmc
loopne
aas
or
pusha
loopne
xor
dec
icebp
incl
or
inc
and
ret
mov
push
jmp
jne
aaa
jo
and
hlt
mov
mov
sub
add
bound
leave
sbb
xchg
and
cmp
arpl
call
ret
sbb
decl
jbe
rclb
outsb
xor
loopne
stc
cmpb
push
je
mov
sub
cmp
push
inc
sti
add
mov
xchg
ret
xchg
mov
imul
cmp
pusha
push
jne
jbe
add
lock
shrb
push
lea
cmc
inc
jnp
subb
add
jl
mov
loopne
xchg
or
cmp
test
jg
jge
jmp
mov
pusha
pushf
icebp
js
mov
push
cmpb
dec
inc
fsubrs
adc
hlt
je
jmp
or
mov
loopne
stos
xor
popa
cmp
jb
std
in
es
fistpll
push
pusha
dec
push
into
call
and
pop
je
push
push
outsb
shrb
fidivs
cld
cmpl
das
mov
je
sbb
xchg
sub
or
push
push
push
loop
lea
push
push
jp
add
pusha
mov
das
adc
add
fs
push
push
test
pop
pop
jg
std
loopne
call
xor
inc
outsl
pop
or
mov
popa
sbb
push
pop
das
loopne
loope
push
nop
lret
add
and
mov
jle
cld
mov
fwait
mov
push
sub
hlt
loopne
testb
or
popa
inc
ret
add
or
mov
pop
fwait
je
push
cmp
dec
sub
dec
das
movsb
push
pop
call
jl
ja
nop
mov
pop
ja
rolb
adcb
andl
jg
test
popa
jle
xchg
int3
xor
and
clc
push
stos
loop
inc
test
adc
push
adc
pusha
dec
sbb
fcmovnb
je
loope
dec
fldt
jl
clc
cmp
lods
mov
adc
dec
je
mov
inc
jl
jne
adc
sub
das
or
je
insl
and
and
mov
adc
add
and
int
xchg
clc
pusha
inc
je
loopne
mov
das
adc
cmpsb
mov
or
push
or
push
or
sub
mov
sbb
add
adc
clc
ja
cli
jecxz
mov
andb
inc
je
cwtl
test
add
mov
std
push
push
mov
ds
das
sbb
push
pushf
dec
add
rorl
aaa
push
ret
scas
call
aaa
jb
jnp
je
arpl
enter
and
loope
insl
dec
imul
cli
jg
adc
int3
je
or
xor
pusha
adc
push
pop
mov
pop
cmc
call
push
pop
fidivl
and
add
cbtw
fists
cmp
or
sbb
adc
xor
push
leave
push
fs
movsl
lock
adc
std
mov
cmp
arpl
jg
outsl
push
scas
mov
enter
int
mov
les
push
cmc
xor
clc
scas
push
jo
pop
add
cmp
loopne
divb
clc
add
sub
and
add
inc
or
aaa
cmc
pop
add
outsb
or
cs
fistpll
cmp
je
or
add
mov
cmp
orb
jg
scas
xor
scas
or
sub
pminub
push
mov
push
inc
ja
and
jb
mov
js
jg
jbe
nop
ja
notb
lea
or
mov
adc
mov
ret
sbb
mov
or
jb
out
jno
dec
test
xchg
add
jecxz
mov
jp
rolb
iret
call
lcall
fsubr
add
mov
mov
ja
jg
and
call
inc
mov
or
icebp
adc
push
jo
call
lea
mov
sbb
or
lcall
decb
mov
pop
ds
jo
sub
shrl
push
push
jg
rcrl
mov
sub
lock
decl
mov
mov
mov
add
jne
ja
mov
push
add
add
lods
std
cmp
dec
pusha
aas
mov
mov
jo
ret
add
lcall
xor
dec
jo
test
mov
loopne
ja
ss
lret
mov
xor
pop
nop
test
mov
lock
and
imul
jge
push
cmp
sub
incb
lock
or
push
jp
push
dec
data16
je
mov
cmp
call
leave
fsubp
adc
adc
and
cltd
stos
or
out
adc
adc
push
stc
mov
sbb
mov
dec
insl
scas
add
cmpsb
and
sub
dec
sub
es
and
insl
mov
bound
repnz
cmp
push
in
sbb
call
mulb
jo
ja
add
pop
and
mov
mov
mov
insb
test
mov
jl
push
push
je
adc
xor
dec
adc
cs
mov
sub
divb
aaa
adc
add
cmp
cld
movsbl
ss
cmc
pushw
pop
jbe
cmpsb
cmovno
fbld
cmp
jl
stc
jg
xor
push
stos
rcll
push
int3
mov
push
push
inc
mov
or
cmp
pop
mov
mov
mov
push
dec
dec
sbb
jp
in
and
loop
mov
lret
cmp
jbe
lcall
ja
sub
cmp
jb
cmp
fwait
push
mov
jb
icebp
or
ds
stos
in
je
jp
dec
sub
iret
enter
sarb
sbb
aas
inc
mov
inc
mov
rcrl
stos
or
fcmovu
push
fcomi
rorl
lea
cmp
pop
lock
mov
mov
cmp
jb
cmp
lret
inc
adc
es
lea
aam
cmp
jb
js
jg
pusha
sub
orb
ret
repnz
jo
je
add
jmp
xorb
and
sbb
andb
sub
mov
aam
cmpb
xchg
mov
push
or
push
decb
cld
inc
add
mov
jne
push
jecxz
mov
pop
mov
clc
shlb
cmp
add
filds
jbe
xor
mov
shll
mov
fcoms
mov
jo
loope
add
mov
or
clc
outsb
subb
sar
pop
inc
mov
jne
adc
mov
jo
sarb
cltd
push
push
cli
lock
push
cmp
aaa
std
int
loop
lods
inc
push
xor
jae
lock
adc
mov
dec
xor
ret
cld
mov
sbb
jg
mov
rorl
inc
lods
xchg
jp
ret
push
je
daa
test
mov
rcll
xor
sti
mov
icebp
inc
add
pop
xor
add
les
call
and
jne
add
inc
dec
jmp
rep
mov
adc
mov
dec
or
lahf
lock
adc
fisttpl
pop
lock
and
lods
or
adc
jmp
add
or
mov
mov
stos
and
add
jle
ds
outsb
cmp
add
push
stos
in
cmp
in
or
or
sbb
jmp
in
in
roll
fcmovbe
add
cld
rcrl
pop
popf
push
fisubrl
cwtl
jecxz
add
adc
pop
mov
or
adc
fbstp
mov
jo
mov
dec
sti
call
or
sub
and
je
enter
adc
adc
mov
pop
or
mov
pop
sbbl
inc
in
sbb
push
ds
inc
push
push
call
ds
popf
out
xor
jo
dec
hlt
pushl
sub
adc
cs
jge
xchg
adc
push
and
pop
insb
cmp
xchg
add
dec
or
sub
lea
adc
call
mov
sti
push
jmp
push
outsb
mov
jmp
shl
mov
shll
ljmp
add
or
xor
add
push
inc
and
mov
call
stos
xor
xor
pop
hlt
cmp
sarb
in
pop
es
test
mov
mov
aaa
add
xor
jl
add
sarb
scas
push
lods
loop
push
sub
lcall
in
jb
push
and
jne
cmp
es
push
mov
les
pop
cld
xor
xor
sahf
cmp
xorl
faddl
sbb
cli
mov
add
aaa
mov
loope
and
jbe
mov
ret
in
jle
push
mov
mov
cmp
adc
insb
mov
pushf
aaa
ret
aam
clc
add
icebp
lret
mov
inc
mov
pop
cwtl
js
pop
mov
cmpw
sbb
xchg
jne
xor
pop
pop
incl
sbb
or
add
cmp
pop
inc
shll
in
outsl
mov
jo
jg
jno
lret
add
xorl
push
lcall
cmc
outsl
movsb
fiadds
xor
clc
add
popa
add
pop
push
and
adc
and
pop
mov
jle
jb
sahf
ret
jmp
push
inc
loop
out
inc
lret
adc
mov
aas
mov
sti
cmp
jne
pop
ret
lock
xor
imul
adc
iret
add
push
inc
fcomp
nop
pop
jp
dec
or
cli
insl
mov
je
xor
out
rclb
rorb
call
adc
js
push
nop
mov
push
loop
adc
xchg
cmpb
cld
ja
pop
pop
mov
neg
add
adc
mov
repnz
mov
outsl
cmp
cmp
repz
ret
push
and
xchg
or
cmp
lock
sub
cmp
andl
add
add
sbb
subl
test
add
xchg
pop
xchg
cmp
testb
lods
inc
xchg
je
add
add
push
pop
test
sbb
add
incl
add
sbb
shl
xchg
add
ljmp
testb
out
push
sub
fsubrs
cmpsb
cmp
mov
clc
sub
imul
add
adc
pushf
pusha
sub
sar
sar
push
ss
pop
test
shlb
jmp
and
das
push
or
popf
cmp
dec
xchg
and
incl
andb
xor
cmp
sub
xorb
outsl
clc
mov
sub
je
imul
add
inc
inc
push
push
jbe
or
dec
mov
into
push
sbb
dec
call
push
add
inc
pop
call
cmp
out
call
dec
mov
and
xchg
dec
cmpsb
sub
int3
push
cmp
xchg
jl
adc
push
rcrw
mov
jle
cmp
inc
inc
push
pop
fwait
or
ja
mov
mov
or
sarb
ds
shlb
imul
adc
mov
setge
or
in
shlb
push
rorb
pop
add
sub
loop
add
and
cmpb
mov
and
add
mov
roll
xor
lods
ja
jb
and
mov
movl
push
fcmovnb
xchg
sub
mov
mov
pop
pop
mov
inc
and
and
ret
and
out
pop
cmp
bsf
lretw
je
or
or
jno
lretw
dec
imul
mov
push
aaa
movsb
icebp
cmp
fcomip
jg
or
inc
nop
sarl
rorl
lea
lods
add
mov
pop
xor
les
movsl
pop
icebp
adc
leave
subb
fisttps
mov
shlb
bound
mov
add
nop
push
xor
dec
or
add
mov
ja
xchg
inc
loop
pop
sti
jl
xorl
ljmp
ret
jmp
shlb
cli
or
adc
adc
add
aad
cmc
adc
pop
out
mov
mov
pop
gs
ss
mov
adc
divl
lea
or
rol
insb
fdivrs
inc
mov
jne
data16
xor
in
leave
push
mov
adc
and
test
mov
stc
and
mov
aad
sahf
cwtl
add
jg
jnp
test
fsubrl
enter
mov
xor
mov
add
inc
dec
inc
and
add
add
pop
adc
loopne
jb
sbb
push
rclb
ret
mov
shl
add
lods
test
lea
test
fsubl
in
in
cs
enter
pop
bound
gs
mov
icebp
push
inc
sub
test
in
ljmp
mov
pop
movsb
ds
pusha
add
add
dec
pop
data16
inc
dec
imul
sbb
add
sbb
shll
test
and
pop
sbb
dec
call
xor
pushf
loopne
out
jecxz
out
and
sub
pop
leave
test
inc
sbb
xchg
loopne
pusha
je
pop
jecxz
rclb
ret
push
sbbb
sbb
addl
sub
call
faddl
ljmp
pushf
movb
xor
push
xchg
mov
neg
test
imul
xorb
or
data16
or
jns
mov
push
add
sbb
lock
push
push
jg
and
in
push
xorb
outsb
mov
xchg
out
cmp
mov
cmp
pusha
add
mov
dec
jecxz
loopne
popa
adc
mov
cmp
fbstp
pop
add
testb
je
pop
in
mov
je
loopne
mov
and
loopne
cmp
incl
loopne
inc
adc
pusha
pop
inc
and
ss
lea
inc
xor
pop
cld
adc
pop
cmp
push
xor
loope
pusha
inc
loopne
xchg
push
test
and
aad
clc
lods
cmp
es
andw
jecxz
xchg
mov
adc
rorl
mov
and
cmp
push
pop
mov
fidivl
in
cltd
inc
xor
or
mov
jmp
jb
inc
pop
pusha
sbb
es
sub
add
push
sub
test
xchg
sub
add
sbb
add
loope
aaa
dec
stos
push
dec
push
jb
rcrb
lods
sub
dec
shrl
adc
data16
pop
lcall
mov
sub
mov
xchg
adc
push
loope
rcrl
dec
add
and
pusha
or
dec
popa
xchg
lock
sbb
jle
cli
loope
jb
and
add
push
in
sub
or
mov
mov
mov
add
jg
cli
aaa
adc
stos
and
xor
test
movsb
push
loop
mov
mov
xlat
mov
push
and
fcmovb
push
jle
jl
add
cmpsb
add
pop
or
adc
and
xchg
addl
jne
pop
loopne
dec
push
shll
cmp
je
into
ljmp
shlb
jp
adc
lcall
pusha
add
je
inc
nop
pusha
aaa
mov
mov
adc
xchg
subl
mov
loopne
mov
shlb
cmp
sub
mov
and
xor
jl
adc
sbbl
sahf
test
js
dec
pop
aad
jmp
pop
sti
sub
mov
add
dec
adcb
outsl
lret
pop
dec
fisttpl
pusha
push
mov
add
je
adc
jle
adc
add
scas
stos
jl
add
pop
add
cmpsb
mov
stc
inc
dec
dec
xor
push
and
adc
lcall
push
xchg
loopne
rclb
mov
les
mov
jmp
orb
xchg
push
test
loope
cld
lock
mov
xchg
sahf
insl
call
inc
push
add
or
out
in
inc
inc
dec
push
mov
jl
lret
mov
jg
idivb
mov
xchg
adc
test
lret
adc
test
lock
push
aaa
ljmp
inc
or
divb
or
mov
stos
dec
lea
add
out
nop
sbb
add
jb
sarb
imul
iret
add
ja
outsl
or
jmp
mov
call
pusha
or
mov
add
mov
repnz
add
and
and
and
das
mov
rolb
cltd
cmpsb
cltd
add
shl
xchg
jne
dec
cld
xchg
cmp
add
add
adc
jp
data16
fstpt
mov
or
pop
setne
or
adc
rdtsc
adc
mov
mov
jmp
lea
ret
or
sbb
or
cltd
orl
icebp
add
cmpsb
mulb
call
ljmp
jp
mov
or
mov
mov
filds
add
or
data16
iret
mov
mov
scas
jo
pop
cmc
je
int
stos
mov
jp
pusha
jp
mov
scas
clc
pop
cld
or
jmp
or
sub
xlat
jb
xrelease
dec
repnz
cmp
mov
adc
pushl
or
stc
xor
pop
xorb
incb
icebp
or
mov
cmc
mov
cwtl
fptan
dec
idiv
push
mov
jl
pop
jg
or
aam
adc
sub
outsl
mov
and
sub
jg
cmpsl
je
fidivl
push
aaa
clc
inc
je
or
add
mov
test
aam
pop
add
je
mov
lea
add
mov
addr16
push
and
add
push
xor
push
inc
mov
adc
jge,pt
add
cmp
jmp
dec
imul
mov
add
mov
mov
add
adc
and
xor
mov
jmp
mov
jae
lock
jbe
adc
or
jmp
jecxz
cltd
nop
pop
loopne
add
jo
enter
sub
testb
and
loop
nop
cmp
push
jp
rcrl
sbb
add
icebp
cmp
xor
cmp
add
jb
add
scas
nop
cwtl
adc
addl
sbb
mov
adc
daa
loop
jmp
cli
test
cmpb
push
pop
es
push
es
out
js
mov
adc
imul
out
cmp
mov
pusha
jno
xor
adc
or
or
aaa
repnz
outsl
outsl
mov
in
jmp
sti
sarb
jo
lock
insb
jmp
or
push
lahf
lock
imul
add
jl
sti
push
push
push
out
jmp
cs
adc
adc
loopne
jmp
and
idiv
cs
sbb
popa
pop
push
xor
pusha
shrb
hlt
jmp
mov
add
jne
ret
push
mov
rcrl
push
push
lret
ljmp
cld
jmp
addl
mov
or
add
lcall
mov
mov
push
les
or
and
dec
fistl
mov
or
mov
das
cmp
pop
mov
adc
dec
clc
xor
lret
fildll
mov
jo
mov
adc
or
lock
cli
fwait
push
repz
cmp
jp
mov
incl
dec
mov
outsb
mov
pop
xor
push
sbb
add
and
iret
sub
jb
mov
or
test
or
xor
lret
and
jle
fistl
cmp
jl
idivl
psllw
jno
add
orl
push
or
test
hlt
mov
xor
inc
inc
fldl
enter
repnz
inc
jnp
mov
cmp
push
and
xchg
sbb
aad
xor
out
sbb
mov
icebp
or
mov
cmpsb
or
push
scas
push
push
and
or
subb
outsl
push
sti
add
dec
mov
or
mov
push
ret
cmpb
sbb
nop
insl
jb
mov
xlat
ds
or
rorb
mov
push
push
ret
xor
stos
in
push
pop
pop
aas
or
or
xor
nop
xor
jnp
lret
lcall
push
or
jmp
mov
inc
js
stos
adc
ss
xor
js
jo
in
das
insb
test
dec
mov
mov
imul
loopne
loope
fs
stos
and
inc
sbb
mov
push
lock
out
pop
lods
mov
das
mov
mov
mov
mov
push
or
jo
jno
dec
or
rcll
jge
inc
inc
loop
inc
and
push
push
loope
les
xchg
jae
outsb
enter
cld
or
push
sub
cmp
je
xor
cmpsl
xor
pusha
mov
adc
jmp
loope
pop
lcall
inc
sub
repz
add
push
aaa
cld
pop
popa
insb
cli
adc
push
pop
mov
push
xor
stc
aaa
out
insl
lds
sbb
xchg
pop
sbb
jmp
jno
hlt
aaa
incl
mov
and
divb
ror
inc
xchg
jo
pusha
hlt
pop
in
shlb
test
and
sbb
jmp
push
hlt
add
icebp
add
out
fistpll
pusha
shrd
icebp
sbb
inc
stos
ja
pop
or
add
mov
mov
or
pop
adc
xchg
lock
repz
icebp
add
test
mov
js
inc
lock
add
stc
add
nop
or
rcrb
nop
adc
inc
call
sub
inc
enter
or
mov
je
test
add
sbb
adc
push
sbb
or
push
jmp
lret
cli
in
xorb
jmp
cltd
dec
sbb
shl
mov
roll
insb
mov
cmp
loopne
ret
jbe
jmp
stos
inc
add
or
ss
dec
push
hlt
andb
fistl
addl
or
push
add
sar
pop
ljmp
adc
outsl
push
jg
imul
filds
decl
mov
inc
outsb
call
add
and
lock
mov
pop
addb
outsb
je
stc
je
push
lahf
add
fwait
push
add
fldt
add
and
push
pop
adc
and
add
add
add
or
movsb
mov
push
pop
xchg
idiv
push
icebp
pop
loop
adcl
mov
dec
jno
andl
mov
push
js
and
loopne
dec
jb
andl
xchg
cmp
push
xorb
lock
test
push
inc
mov
push
movsb
or
hlt
sbb
and
ss
cmpsb
jns
sti
out
lret
test
or
ret
incb
mov
and
in
outsl
in
sub
and
sub
ret
xchg
sub
adc
lock
bound
ret
add
xor
stc
rolb
movb
ret
dec
mov
adc
sarb
loopne
shlb
push
jmp
sub
jmp
adc
sub
sbb
dec
mov
xor
mov
jbe
sarb
adc
rclb
rcll
into
rclb
sarb
js
and
xchg
bound
sub
push
fcmovbe
jp
dec
test
outsb
outsl
aas
or
adc
cmp
sbb
push
push
and
or
fbld
fcomps
push
lds
jmp
mov
adc
leave
mov
clc
push
fwait
mov
shll
sub
and
and
mov
pop
mov
mov
in
xlat
lds
repnz
push
shlb
inc
or
enter
and
mov
inc
pushl
loopne
pop
sub
jne
rorl
pop
add
sub
adc
inc
sub
je
dec
mov
dec
rcrb
out
imul
orb
push
inc
arpl
mov
jne
shl
add
mov
mov
add
jp
cmc
sub
pop
or
cmpb
cld
hlt
test
nop
cmp
into
das
or
outsl
add
jmp
or
push
adc
adc
mov
dec
cmp
add
or
adc
popa
sbb
pop
jmp
sbb
dec
je
loop
lock
hlt
loop
sbb
sbb
push
test
jne
cs
sbb
cmp
inc
scas
adcl
xor
js
push
add
mov
or
mov
mov
mov
andb
sbb
xor
jnp
pusha
jbe
call
or
jbe
repz
push
rcrb
pusha
lcall
sub
icebp
movsb
orb
mov
add
shl
jg
pop
mov
jp
iret
jmp
mov
inc
aad
xchg
dec
call
xchg
add
pop
mov
push
outsl
inc
xor
sbb
sti
mov
cmp
push
push
sbb
sbb
or
add
pusha
push
testl
sub
popa
or
icebp
je
subl
loopne
sub
orl
sbb
add
jmp
icebp
std
pusha
and
push
les
stos
enter
nop
scas
sub
add
xor
inc
and
repz
bound
jne
push
add
ljmp
cld
lods
roll
xor
adc
xor
or
cli
inc
gs
clc
fistpll
insb
leave
add
or
or
sub
shll
sbb
add
pusha
xor
repz
in
jmp
loope
call
or
push
mov
dec
rcrb
js
pusha
mov
adc
or
or
xor
mov
loope
pop
lret
adc
adc
mov
data16
je
ljmp
pusha
xlat
popa
jo
repnz
pop
orb
ljmp
movsb
addb
push
loop
or
or
fwait
loopne
popa
jns
adc
mov
sub
fldt
shl
inc
sub
fdivr
mov
push
add
and
add
jo
mov
mov
and
out
test
add
jge
ffree
orb
dec
sub
mov
and
mov
jp
js
adcl
add
mov
mov
or
or
ret
add
jb
pop
mov
pop
or
push
dec
pusha
mov
ss
and
ljmp
clc
add
pop
les
sarl
jl
inc
andl
and
imul
in
out
ljmp
pop
sub
dec
add
cmp
adc
pop
adc
sarb
jl
dec
out
mov
or
jle
movsb
aaa
rorl
fsubp
cmpsl
pusha
push
mov
stos
shlb
or
pop
pusha
stos
and
push
mov
movb
stos
in
das
jb
setns
inc
push
jae
pusha
add
xor
jno
push
mov
or
loopne
adc
push
das
loopne
movsb
inc
pusha
xlat
add
ljmp
mov
sbb
inc
jo
add
add
sub
ret
add
mov
fldl
loope
cs
es
call
sarb
or
add
ret
mov
js
lea
inc
cmp
xchg
fucomip
jmp
jno
adc
mov
and
ret
fwait
movsb
xor
adc
adc
xchg
or
mov
mov
cmp
add
popa
mov
pop
aad
and
jno
jmp
jl
or
or
add
jg
ja
mov
sub
daa
lcall
lahf
lods
scas
push
or
sub
or
mov
cmp
mov
rcr
je
sti
push
sbb
and
sbb
pop
ljmp
dec
div
cmp
cmp
arpl
xor
fsubr
fists
stc
mov
xor
aam
sbb
xor
or
jmp
fs
lock
pop
jmp
mov
or
sub
rclb
or
jae
or
cli
jg
cwtl
push
and
jo
cmp
orb
into
jo
addl
dec
les
mov
pop
icebp
add
sahf
icebp
test
pusha
adc
mov
sbb
enter
inc
cli
sbb
inc
incb
jo
or
jne
aas
mov
pushl
inc
add
and
rcrb
or
cld
les
stos
ret
test
in
sbb
xchg
or
mov
mov
shll
lds
sub
popa
or
mov
dec
jnp
jbe
add
enter
call
ds
sbb
in
sbb
jge
xor
mov
adc
aaa
add
pop
push
jno
xchg
mov
cmp
mov
dec
int3
xor
push
sub
add
inc
push
rclb
in
shll
mov
adc
rcll
out
inc
adc
dec
or
inc
push
jge
sti
fisubrs
outsb
movsl
add
int
push
adc
pop
stos
add
push
into
inc
jp
add
in
or
and
cltd
push
adc
inc
push
sub
shlb
adc
adc
mov
pop
data16
mov
add
push
dec
sub
int3
adcb
adc
imulb
shl
fimull
xchg
pop
jb
adc
ja
dec
mov
and
call
mov
push
jmp
pop
mov
call
and
pop
les
popf
add
dec
mov
push
dec
and
nop
ja
push
mov
test
xchg
push
dec
in
cld
mov
cmp
pop
pop
jg
pop
adc
add
cltd
clc
mov
jne
movsl
loopne
les
mov
jmp
pop
xchg
xchg
test
jo
adc
subl
daa
xor
pop
adc
ficoms
orb
push
mov
jle
sbb
mov
push
das
sbb
pop
test
pop
orl
sub
add
xor
or
pop
and
movl
lcall
add
mov
push
or
hlt
cmpsl
call
xchg
fucomi
sbb
shl
mov
loop
jge
jbe
je
fdivp
mov
call
jmp
ss
std
rorb
cmp
add
or
je
and
add
push
sbbb
push
jle
les
nop
mov
dec
dec
out
push
incl
pop
jmp
out
lock
xchg
add
cmp
repnz
pop
scas
mov
pop
jo
add
or
xor
repnz
mov
lcall
and
jns
xchg
cmpb
inc
or
cs
ds
jo
rorb
fildl
or
es
aaa
mov
sbb
dec
in
inc
xor
push
inc
add
shl
adc
lock
cmp
jb
scas
pop
roll
test
push
lea
lock
jo
or
mov
inc
pop
xor
mov
scas
or
dec
mov
lock
jp
adc
mov
xor
xchg
inc
shll
ds
test
int3
repnz
or
and
xchg
lret
loope
mov
les
adc
hlt
enter
into
jb
lret
dec
ret
push
hlt
call
bound
out
in
jb
mov
sub
sbb
jb
push
clc
or
mov
pushl
insb
add
add
inc
je
loope
rol
mov
add
pop
insb
and
sahf
int
pushf
iret
adc
xchg
lock
push
adc
adc
data16
mov
xchg
mov
adc
daa
lea
movsb
xor
adc
mov
mov
loopne
inc
cs
fcomip
fwait
mov
cli
push
cli
lods
push
cmc
add
lods
and
sub
jnp
dec
cs
add
xor
push
adcb
or
jne
mov
or
push
cmp
push
ret
in
add
cmp
pusha
lds
roll
push
push
xor
adcb
dec
lea
call
adc
xor
inc
or
jno
icebp
mov
add
jb
clc
aas
push
mov
stc
divl
addl
je
xor
push
shrb
ljmp
and
ja
push
adc
mov
std
inc
add
adc
mov
sbb
mov
inc
aam
pop
mov
dec
test
inc
jb
jle
push
push
lock
jo
inc
push
push
cli
push
jp
sbb
lods
jno
scas
and
sub
sbb
test
rcll
test
push
orb
cld
inc
and
cmpsb
xchg
xchg
xor
push
jg
mov
push
xchg
sub
push
sahf
mov
test
pop
inc
js
mov
mov
leave
test
sub
cmpsb
lods
int3
mov
jle
push
ja
cli
mov
sub
push
inc
nop
xor
icebp
stos
movsl
enter
or
dec
mov
push
jl
add
fdiv
and
adc
adc
mov
enter
mov
inc
add
cltd
dec
sbb
clc
mov
xor
enter
adcl
jmp
adc
sti
je
pusha
jbe
das
and
test
call
adc
add
icebp
pop
adc
test
outsb
adc
sti
je
xor
pop
inc
cwtl
pop
inc
sbb
or
outsb
dec
std
mov
add
adc
xor
xchg
mov
je
icebp
mov
orb
sar
int3
repnz
insb
cld
icebp
mov
add
cmp
xor
adc
jbe
aam
js
fcmovbe
adc
pop
ja
adc
dec
xor
dec
call
incb
mov
faddl
xor
add
fcoms
push
lcall
fdivrs
cs
cmp
mov
insl
mov
repnz
inc
jbe
fdivr
fwait
push
jecxz
jl
adc
sti
ja
jle
xor
add
inc
add
cmp
pop
push
jle
jl
nop
mov
inc
scas
jg
mov
shr
xor
out
cmpl
cmp
or
adc
xchg
add
pop
or
fsubl
rorl
aaa
rcll
ljmp
add
ja
xor
mov
sbb
fwait
cmp
sub
pop
aam
jg
lret
pop
or
enter
subb
pop
add
sub
or
add
in
sub
lret
cwtl
push
or
outsl
adc
movb
add
fcomps
or
or
inc
fdivl
lcall
in
roll
cmp
mov
shrb
adcb
pop
jnp
jb
cs
dec
push
cmp
std
and
cmp
mov
mov
jbe
jno
mov
inc
cwtl
in
adc
push
xlat
pop
movsb
xchg
mov
xor
push
adc
mov
fsubr
xchg
sbb
sub
xor
mov
aas
sbb
div
mov
in
mov
mov
cld
rolb
sub
mov
adc
push
jbe
push
jo
or
push
inc
mov
bound
icebp
inc
cmp
test
in
and
or
test
gs
add
pop
pop
pop
mov
fisubrl
adcb
mov
movl
loop
fs
test
icebp
adc
or
push
int3
fistpl
nop
enter
mov
inc
add
jg
xorl
adc
add
pop
loope
jno
fld
xor
fldt
add
rorl
mov
mov
mov
lods
into
test
ja
je
sub
push
sub
iret
cmp
fs
inc
mov
mov
add
adc
mov
inc
fistpll
pop
rcrb
add
and
mov
push
or
or
cs
cli
mov
filds
leave
inc
and
pop
call
add
mov
and
ss
cmpsb
jmp
mov
jp
mov
add
rcll
cmp
decl
icebp
pusha
and
pop
cmp
jo
adc
add
outsb
clc
jne
mov
or
xchg
fldt
inc
mov
sbb
xchg
or
mov
cli
and
cmp
mov
call
xchg
sarb
fsubp
mov
lock
mov
ret
sbb
add
in
testb
or
push
add
jmp
and
lock
enter
adc
repnz
mov
movzwl
jo
xor
stc
popa
jo,pt
popa
subb
loopne
and
orl
adc
decb
jecxz
add
je
mov
xor
test
call
cmp
jae
push
test
adc
or
or
add
sub
sti
loopne
pop
pop
leave
ljmp
xchg
ja
arpl
sub
xchg
mov
push
outsl
pusha
jg
mov
mov
movsl
cld
adc
clc
aaa
mov
loopne
push
andl
dec
xchg
mov
lcall
enter
jmp
sub
mov
lods
add
adc
adc
nop
add
xlat
inc
bound
ret
xchg
pusha
adc
pop
call
cmp
mov
xor
push
or
dec
jbe
push
xchg
test
jl
mov
push
mov
adc
pusha
and
aaa
mov
dec
clc
ret
nop
loopne
add
push
mov
sub
fildll
arpl
add
push
xchg
cmp
rorl
add
xor
pop
int3
add
loopne
push
lea
loopne
pusha
imul
add
inc
push
pop
sbb
shll
pushf
nop
popa
add
add
inc
sbb
scas
clc
sbb
out
enter
sahf
nop
outsl
loope,pn
jl
jl
jle
pop
sub
sbb
addb
popa
and
xor
lods
in
push
arpl
repnz
mov
jg
insb
outsl
or
mov
or
sub
push
loopne
pop
add
and
push
mov
add
loope
inc
loope
orb
je
std
clc
or
sub
loop
cmp
call
cmp
cmp
jge
hlt
pop
loopne
mov
add
pop
inc
mov
add
mov
push
movsb
pusha
push
in
adc
sbb
sti
rorb
cmp
jg
ljmp
loopne
pop
cli
loope
xor
or
fwait
add
adc
jne
popa
sbb
ljmp
ret
sti
add
push
mov
test
fstpt
add
jno
jmp
addl
adc
mov
loopne
pop
inc
inc
lock
push
and
inc
mov
cmp
cwtl
das
cmp
jle
push
pop
jnp
shlb
pop
je
popf
sbb
adcb
pop
imul
js
bound
add
lock
or
and
mov
bound
mov
jecxz
add
add
add
movsb
mov
gs
add
pop
add
pop
fstpt
cmp
aaa
pop
popa
pusha
adc
push
jecxz
sbb
jg
pusha
and
mov
ret
loope
push
inc
shll
sub
cmp
jle
jo
lods
jl
add
add
cmp
sub
jecxz
push
push
popl
and
adc
sbb
add
js
push
pushf
popa
ss
pop
pop
pop
cmp
insb
cli
xchg
sub
fs
ret
scas
call
loope
sub
cmp
test
scas
and
fsubl
test
insl
cmp
add
call
xor
enter
or
push
jmp
fmuls
jo
pusha
add
add
or
movsl
jmp
imul
adcb
outsl
xlat
pop
inc
fwait
sub
and
add
pop
mov
add
pop
cmp
jmp
sub
jl
sub
adc
repz
fildll
push
ljmp
inc
sti
loopne
call
add
lcall
adc
dec
xchg
jb
fcmovnb
fldl
arpl
fsubs
fwait
xchg
push
lea
xchg
repnz
jb
add
dec
loop
lret
push
mov
mov
sbb
cmpl
icebp
in
inc
sub
es
sub
jl
call
fwait
add
cmp
sbb
jmp
sub
ret
sub
dec
out
rcl
shll
inc
in
out
inc
pop
sbb
pop
icebp
fcmovnb
pop
call
add
clc
loopne
mov
push
mov
xor
or
inc
pop
pusha
lea
and
jle
adc
or
rolb
aam
test
mov
add
or
jle
jl
push
pop
or
push
mov
mov
mov
and
test
mov
inc
shlb
or
push
xchg
mov
fst
sub
jno
clc
mov
pop
test
rolb
fcoms
call
and
ret
mov
jp
stc
mov
inc
xor
add
movsb
mov
add
and
lret
xchg
cmc
pop
xchg
sub
adc
and
decl
mov
inc
cmpl
push
jb
idivl
push
mov
push
les
ljmp
popa
ljmp
adc
jo
jo
stos
insb
sbb
les
inc
pop
mov
cli
in
fst
nop
shlb
mov
jle
cs
loopne
in
jmp
mov
jnp
adcb
and
adc
mov
jo
xlat
shlb
aaa
test
and
jo
jmp
dec
adc
or
cld
adc
mul
push
icebp
fnstcw
sub
add
gs
jo
clc
mov
push
add
add
push
push
ds
lods
xor
lret
in
aaa
ss
add
pushl
test
hlt
pusha
adc
lahf
mov
xor
or
pushf
loope
enter
mov
mov
mov
cmp
and
cmpsl
call
xchg
mov
mov
add
adc
mov
add
sar
inc
or
imul
dec
pop
push
addb
pushl
dec
repz
test
mov
mov
inc
gs
loop
decl
cli
inc
scas
add
or
or
xchg
cwtl
add
pop
push
add
mov
sbb
pop
mov
xor
mov
jb
pop
movsl
mov
lock
inc
inc
cmpsb
push
mov
xchg
add
add
or
inc
xchg
jmp
dec
popa
adcb
into
call
sahf
add
mov
pop
jl
add
ss
cmp
test
jb
lea
outsb
adc
cwtl
and
ja
mov
mov
dec
clc
je
icebp
jb
in
mov
xchg
add
xchg
add
dec
clc
pop
sub
jle
clc
rolb
xchg
or
cmpsb
adc
pop
push
mov
out
jno
call
imul
hlt
jbe
inc
push
pop
dec
lock
inc
loope
loop
xor
push
loope
adc
ljmp
sub
cld
and
lods
mov
xor
cmp
or
insl
cmpsb
clc
les
mov
and
and
repz
cmpsb
mov
jbe
jecxz
and
pushf
push
xchg
mov
push
ljmp
dec
add
outsl
push
enter
loop
and
jb
dec
daa
std
jno
jne
lock
push
mov
push
pop
adc
hlt
mov
push
outsl
jbe
test
mov
ret
icebp
pop
inc
inc
cmc
adc
xor
push
bound
inc
jle
rcrb
cmpsb
push
je
sbb
lods
push
jo
dec
daa
inc
shlb
add
jge
adc
sub
scas
out
loopne
xor
inc
ja
fistpl
addb
inc
mull
and
cmp
jmp
andl
outsb
test
adc
push
adc
adc
or
testb
std
je
inc
xchg
xor
push
cmpsb
icebp
mov
ja
dec
xor
jmp
or
or
lock
jmp
in
adc
pusha
inc
or
jmp
mov
sbb
push
dec
in
mov
add
mov
pop
and
movsb
cmp
or
das
jmp
and
pop
test
fsubs
xchg
push
or
add
mov
xchg
mov
call
xchg
inc
pop
leave
cmp
data16
fisubrl
jbe
jp
addb
add
rcll
push
xor
jl
sbb
jecxz
mov
mov
call
jo
mov
push
add
xor
push
in
imul
inc
sarb
lret
shl
sub
movl
or
inc
aaa
jp
orb
xchg
mov
add
push
push
std
dec
push
repz
add
add
add
fs
call
add
or
mov
cwtl
pop
pop
mov
pop
insb
jg
icebp
and
cmpb
int3
add
xor
clc
sbb
pop
push
jo
mov
mov
or
push
loop
rclb
mov
or
add
icebp
push
decl
mov
aaa
add
sti
in
jle
loopne
aam
or
sbb
or
mov
loop
call
push
push
mov
cld
mov
adcb
mov
add
jno
clc
mov
in
or
inc
mov
inc
movsb
fs
and
fildll
jo
add
adc
or
sbb
test
adc
sbb
sbb
loopne
fstpt
xchg
adc
pop
inc
xor
sbb
push
scas
sub
mov
add
icebp
add
jo
inc
fcomip
pop
dec
mov
adc
mov
and
pusha
or
sub
cmp
adc
dec
aas
inc
mov
mov
push
cmp
add
jo
mov
mov
out
push
call
testb
lock
das
clc
ljmp
and
hlt
lock
bound
mov
lock
push
dec
frstor
push
mov
push
mov
lret
fildl
sub
enter
movsb
inc
mov
add
enter
mov
add
movsb
loopne
cld
add
dec
mov
jno
jg
fwait
and
sbb
jae
pop
adc
lods
andb
adc
and
and
sbb
jge,pt
cmp
cmp
aam
mov
mov
jle
push
adc
mov
mov
je
adc
testl
adc
inc
adc
dec
test
and
adc
adc
loopne
test
cmp
stos
stos
jo
mov
push
into
push
mov
popf
mov
jb
add
jge
les
mov
push
lea
nop
inc
les
js
cmp
adc
xchg
mov
jbe
stos
xchg
sub
insl
push
inc
fnstsw
testb
push
pop
cmp
das
cmp
xor
fdivs
cwtl
xor
push
ret
xchg
movsl
push
or
ficoml
sbb
inc
and
lock
cmpsb
aad
jl
les
movsb
xchg
mov
add
movups
test
xchg
cltd
call
ja
test
data16
cwtl
xchg
push
mov
movsb
mov
add
jne
lods
scas
lods
mov
mov
mov
mov
add
xor
xchg
cmp
jb
les
inc
mov
sbb
add
and
hlt
mov
or
jns
call
add
ret
cmpsb
push
xchg
xor
push
xor
lods
andb
cltd
jb
ds
imull
adc
push
xor
or
sub
push
repnz
mov
fisubrl
loopne
jp
bound
lods
mov
sti
rcr
add
add
in
and
mov
and
add
jge
sbb
ss
ss
mov
sub
inc
dec
movb
je
out
data16
out
mov
cmp
pusha
inc
mov
call
cmp
subl
push
pop
in
pop
sub
sbb
cli
shlb
scas
cld
into
rclb
test
dec
nop
fistl
mov
test
cmp
sub
jnp
push
in
mov
je
xor
imul
lods
je
sbb
outsb
orb
shrb
push
xchg
int3
or
rorb
mov
outsl
xchg
ret
add
shrb
add
rolb
adc
mov
push
ret
rorb
xchg
cld
add
push
adc
push
in
das
add
outsb
fidivrl
mov
adc
add
std
inc
xor
sbb
jg
decl
mov
call
pop
shlb
lcall
or
shrb
push
sub
adc
das
rclb
adc
dec
jne
mov
aas
sbb
scas
add
or
rolb
and
mov
add
adc
lds
shrl
mov
push
sbb
mov
mov
xchg
or
adc
push
rol
adc
lods
dec
clc
push
or
push
push
pop
inc
mov
sbb
es
in
inc
fs
cmp
add
push
inc
shlw
push
mov
mov
lock
je
xor
dec
cmp
pop
inc
inc
sub
loopne
mov
xor
cmpps
cmp
mov
mov
pop
inc
popl
sbb
sub
ret
ficoms
pop
adc
push
rcr
or
pop
and
xchg
mov
fs
inc
rorb
shll
jecxz
shrb
mov
push
push
stos
fcoms
lret
xchg
sub
clc
sub
or
xchg
cmc
mov
push
sub
clc
pop
outsl
ss
jbe
aam
cld
add
loopne
inc
push
ljmp
mov
lret
js
pop
test
mov
mul
sbb
push
xchg
insb
cld
push
jne
push
adc
add
fsubl
call
xor
push
mov
adc
xor
push
xchg
loopne
dec
add
cmp
lods
add
add
test
inc
ret
push
rolb
stos
push
jo
scas
cmp
sub
gs
stc
call
out
and
add
rcl
jl
add
xor
or
sub
lret
adc
xchg
lcall
add
call
sub
adc
and
inc
rolb
outsb
iret
loopne
loopne
add
je
dec
add
mov
add
aam
stos
aam
jbe
aad
jb
and
push
lret
aam
adc
loopne
loopne
popa
add
add
pop
mov
add
add
pusha
or
loopne
or
inc
add
inc
hlt
dec
in
xchg
sbb
test
cmp
shrb
jl
mov
inc
lock
test
je
test
add
dec
mov
loopne
shlb
mov
push
push
adc
add
sbb
sub
enter
test
sbb
lret
inc
xorb
push
or
adc
add
fimuls
lock
sbb
cmp
fprem
loopne
loope
adc
int3
cmp
or
cld
sbb
popa
pusha
sub
jl
or
jne
mov
mov
mov
adc
push
stos
outsb
add
dec
sbb
ret
adc
mov
andl
mov
jb
cmp
ja
or
insb
loopne
or
loope
dec
xorb
inc
ss
nop
sub
adc
es
add
push
or
add
pop
sbb
xor
insl
inc
mov
push
mov
std
xchg
loopne
test
ds
loopne
push
test
bound
leave
mov
adc
call
lock
in
mov
loope
insb
inc
add
test
call
inc
into
sub
pop
lret
pusha
pop
push
clc
xchg
push
adc
sub
stc
add
sbb
pusha
dec
push
pop
frstor
pusha
nop
cmp
cmc
sbb
pusha
pop
loopne
push
inc
add
xchg
ds
leave
call
and
pop
push
sub
push
in
data16
lret
add
mov
add
ds
or
shr
push
cli
or
pop
and
je
popa
inc
lock
adc
and
test
add
mov
mov
sub
ja
add
pusha
adc
loopne
fmul
or
cmpsb
and
or
loope
movsb
xlat
loopne
add
loopne
cmp
mov
outsl
adc
xor
jmp
dec
jbe
mov
jmp
cmp
in
loope
push
in
pop
and
ret
cmpsb
mov
in
popa
in
adc
cmp
xor
push
push
and
pusha
and
aam
and
cmp
repz
push
in
add
xchg
push
add
jle
out
dec
fldt
sub
cmp
imul
pusha
mov
into
adc
lcall
jl
adc
jl
push
int3
sub
push
lock
sbb
dec
push
mov
inc
add
aas
add
ss
and
xor
mov
cmp
adc
bound
loopne
add
in
cmp
jno
aam
dec
and
inc
or
adc
inc
shrl
cmp
dec
shlb
mov
add
inc
jbe
jle
or
out
cmp
shlb
mov
jb
add
xor
or
mov
pop
fisttpl
repnz
or
sbb
jo
loop
or
bnd
lret
test
insb
scas
jo
out
inc
mov
fisttps
push
cmp
mov
add
dec
repz
adc
mov
leave
mov
scas
daa
jb
sub
sub
push
les
push
mov
mov
or
cmpsb
fmulp
add
jo
and
xchg
outsb
data16
mov
or
cmc
cmp
jl
mov
lock
add
inc
or
hlt
or
scas
or
push
jge
sbbl
notl
pushf
pop
sub
jne
dec
mov
push
inc
sub
testb
aam
mov
jo
add
push
mov
fsubrs
sti
mov
std
cld
loop
add
arpl
pop
lock
stos
dec
sub
cld
mov
movb
xorb
xor
sbb
out
or
add
jmp
sub
fcompl
sub
push
inc
inc
jg
jbe
and
jo
test
push
add
sub
ljmp
add
push
mov
ss
call
lea
outsb
cmp
jo
mov
or
or
lock
icebp
test
insb
in
xor
jo
push
movsb
mov
mov
push
sub
test
mov
push
push
inc
mov
mov
mov
xchg
data16
stos
cmpb
daa
jg
xchg
ljmp
push
call
push
pop
fstps
pop
shll
cmp
or
xchg
pop
mov
cmpl
mov
pusha
mov
add
mov
shll
push
xor
repz
xor
push
adc
setne
clc
or
rorl
xchg
and
xchg
adc
mov
fcompl
jle
and
mov
sbbb
mov
scas
push
push
and
inc
ja
enter
adc
add
adc
pop
mov
push
push
jp
or
dec
sbb
jl
adc
loope
adcb
jecxz
or
and
and
and
jo
mov
pop
and
es
push
lock
cmp
shll
xor
repnz
js
push
xchg
mov
inc
lret
adc
and
std
mov
shlb
nop
dec
mov
inc
mov
pop
adc
dec
pop
lock
sub
jmp
jge
inc
add
pop
add
mov
pop
call
add
jp
insb
push
call
fsubs
das
enter
push
mov
lock
shrb
popf
push
inc
push
call
shlb
add
jb
push
push
pop
add
test
rol
scas
cmpsb
je
mov
es
test
roll
mov
jbe
movsb
adc
inc
mov
js
add
ja
push
ret
jl
xorb
push
bound
scas
xor
mov
or
push
xchg
test
idiv
lcall
andb
jmp
cmp
add
inc
pop
incl
push
cwtl
mov
sub
or
fisttps
inc
xor
add
push
or
pop
pop
adcb
outsl
push
lock
ss
sbb
test
mov
add
mov
loopne
test
jle
jo
cmc
decl
in
add
fdivs
inc
adc
or
test
add
pop
sub
mov
xor
fbstp
push
pop
adc
testb
push
decl
push
pushf
xorl
sbb
lock
je
sbb
outsl
call
xchg
fadds
or
mov
adc
pop
or
xchg
mov
adc
pop
adc
xor
pusha
xchg
incl
jo
decl
fcoms
sbb
mov
int3
dec
es
mov
push
xchg
pop
jae
or
mov
lock
add
xor
cld
pusha
xchg
push
mov
sar
add
sbb
add
call
fmuls
add
daa
test
adc
adc
ret
mov
add
push
adcl
mov
gs
je
or
fidivl
test
mov
addr16
jg
movsb
test
push
mov
dec
mov
mov
int
insb
or
lock
mov
shl
or
loop
mov
push
jb
shrb
push
mov
pop
test
or
jne
jge
sub
pop
mov
sbb
sbb
pop
or
test
adc
or
jo
lods
adc
push
and
add
add
sbb
or
xchg
or
mov
call
adc
aam
fsubp
mov
add
hlt
imul
fldl
addl
inc
fs
or
add
jo
test
pop
and
mov
mov
or
or
pop
mov
je
je
inc
jmp
mov
call
mov
sbb
add
lcall
lock
jne
xor
fwait
mov
jo
mov
dec
call
cli
adc
and
add
bnd
push
jle
add
cmpsb
idiv
mov
xor
jecxz
ds
lock
mov
test
loopne
xchg
ljmp
jbe
adc
inc
mov
inc
aam
call
jo
jl
nop
pusha
jg
lock
cld
stos
cld
wrmsr
or
pop
push
icebp
ret
add
jb
sbb
fsubrs
add
and
lea
shlb
or
pop
ret
icebp
repz
push
or
mov
or
push
push
loope
inc
cltd
mov
cli
adc
rolb
push
add
adc
mov
adc
pusha
inc
inc
fwait
lods
mov
mov
movsb
add
adc
cld
mov
pop
pop
inc
xor
stos
lea
push
ljmp
or
outsb
sub
stc
add
jge
fnstcw
sti
push
cwtl
xor
je
sbb
push
js
sbbb
shlb
loopne
pop
push
add
les
lods
jmpw
xchg
stc
sti
push
xchg
dec
jne
cmp
popa
sbb
ljmp
push
loope
mov
mov
fbstp
shlb
add
sbb
cmp
pusha
ljmp
pushl
outsl
sbb
mov
sub
dec
xor
adc
pop
insb
ret
sbb
lods
loop,pn
test
jbe
add
pusha
add
mov
loop
or
ljmp
clc
or
cld
ret
faddl
loope
mov
cmp
ljmp
adc
js
push
jmp
xchg
mov
or
pop
add
or
aam
in
call
push
xor
push
or
xor
andb
dec
push
inc
leave
inc
lahf
aam
add
and
test
mov
pop
cli
enter
fildll
out
dec
ljmp
xchg
cmp
mov
test
addl
test
mov
pop
dec
xor
call
dec
push
sbbb
mov
or
roll
adcl
inc
and
cwtl
jl
int
sbbb
sub
or
aad
push
cmp
xchg
xchg
insb
lds
sub
shrb
add
js
pop
inc
andb
push
or
fcomps
loope
or
hlt
ret
and
sub
sbb
add
jo
sbb
stos
pop
cmc
jg
pusha
jne
aas
rclb
mov
push
dec
add
shlb
je
mov
gs
mov
rolb
shlb
add
push
or
mov
jo
push
int3
jl
push
es
mov
rolb
shlb
xor
mov
xor
mov
add
add
inc
leave
movsb
mov
insl
or
mov
cmp
cmp
jbe
adc
or
ds
inc
mov
fimuls
nop
lock
pop
pop
adc
pop
mov
cwtl
call
adc
and
push
xor
sbb
xor
not
movsb
mov
outsb
adc
sub
adc
es
movsb
clc
push
mov
into
xchg
es
rorb
mov
cmp
adc
pop
adc
outsb
cli
adc
bound
pop
pop
pop
push
add
mov
and
js
dec
or
add
jmp
test
pushl
pop
mov
push
shrl
mov
icebp
test
cmp
rolb
test
and
popa
stos
loop
lock
test
shll
push
adc
icebp
les
shlb
or
les
shlb
mov
in
push
dec
mov
int3
and
add
lahf
push
cmp
sbb
sub
or
rclb
jle
jo
mov
add
pop
dec
fists
or
xor
pop
enter
test
pusha
pop
jo
jbe
cmp
decl
dec
xchg
shl
sbb
jmp
imul
push
jmp
aam
icebp
bound
add
or
inc
adc
call
lea
sti
add
xor
dec
inc
popa
xor
sar
fbld
push
loope
xchg
loopne
dec
cld
testb
jno
lock
addr16
rorl
jo
mov
fnstcw
loopne
add
push
and
data16
test
loopne
and
fwait
fwait
sarb
sti
mov
jmp
into
or
leave
sub
cmp
jp
dec
popa
adc
loopne
lock
mov
mov
jne
je
push
call
fdivp
stos
sbb
mov
loopne
outsb
leave
add
ss
jle
icebp
sbb
mov
jl
add
fdivrs
and
pusha
push
add
movsb
pop
inc
jle
call
xchg
or
adc
jge
bound
lcall
fsubr
call
loopne
inc
adc
or
test
leave
clc
lahf
insl
dec
cmp
call
loopne
or
add
sub
fisttpll
add
or
pop
cmp
dec
adc
or
sbb
sbb
arpl
push
jo
ficompl
pusha
jb
mov
push
aad
es
adc
lret
jp
sbbb
shl
dec
pusha
jge
ret
loopne
inc
or
mov
mov
rclb
jp
pop
or
cmc
jecxz
popa
outsl
inc
adc
jmp
adc
fcomps
mov
push
or
push
and
loope
sbb
aam
xor
and
or
call
movsb
mov
arpl
add
cs
idivb
add
adc
or
add
pop
loopne
add
call
push
outsb
lret
mov
test
xchg
cld
aas
fstpl
sahf
or
or
fwait
lods
pushl
mov
and
leave
adc
mov
dec
mov
loopne
lods
or
push
push
int
mov
aas
pop
push
inc
aam
dec
mov
f2xm1
loopne
pusha
scas
hlt
movsl
sbb
jl
cmc
fdivr
adc
jecxz
add
lret
ficoml
sub
sub
dec
cmpl
mov
and
adc
push
test
jge
in
push
mov
mov
dec
push
dec
shlb
scas
push
or
dec
cmp
repnz
pop
mov
pusha
mov
sub
xor
mulb
je
sub
add
sbb
repz
add
lock
clc
test
int3
fcompl
test
mov
in
push
jmp
add
shrl
sub
adc
push
xchg
out
imul
jns
add
jle
je
loope
mov
sub
xor
mov
lcall
fisttpl
and
lock
lret
mov
pop
mov
add
rcrb
dec
pusha
dec
hlt
adc
loop
and
loopne
dec
add
testb
sub
mov
jb
lock
dec
inc
ret
ja
or
std
inc
inc
ds
push
add
loopne
jecxz
scas
loopne
movl
lea
ljmp
call
mov
xchg
test
arpl
dec
xchg
add
adc
int
call
je
add
or
push
mov
mov
shl
les
adc
mov
mov
dec
call
outsl
out
xorb
mov
inc
loope
xor
push
nop
lock
lea
add
xchg
adc
pop
jbe
lock
hlt
popf
gs
fcmove
adc
pusha
cs
adc
cmp
mov
pop
addb
inc
cmpb
sbb
aaa
add
add
and
or
add
sti
inc
add
mov
push
cli
mov
add
insb
clc
add
xchg
pop
add
loop
cli
or
out
sub
ja
or
mov
adcl
push
test
ss
adc
cwtl
dec
add
cmp
pop
jg
divl
outsb
js
and
mov
lock
mov
xor
jg
negb
jb
test
loopne
pop
adc
pop
out
addl
je
jl
in
add
clc
pushl
ljmp
jmp
add
or
mov
xor
ljmp
mov
add
push
mov
mov
adc
add
lock
and
push
je
xchg
mov
aaa
cmpsb
push
mov
hlt
je
mov
inc
jbe
push
adc
cld
insb
add
xchg
lock
adc
je
push
mov
xor
into
clc
scas
lretw
fimuls
mov
push
mov
repz
pop
pusha
push
cmp
test
or
jo
add
push
and
movb
jo
xchg
jp
adc
and
xor
sbbl
lods
pop
hlt
push
icebp
sub
shlb
test
jg
mov
add
pop
or
pmaddwd
mov
mov
xchg
sub
adc
movsl
xbegin
xor
dec
jecxz
mov
dec
test
sub
lret
add
test
mov
cmpsl
icebp
data16
leave
mov
xchg
je
lock
int3
add
mov
pop
ret
and
or
pusha
dec
push
or
or
mov
xchg
add
xchg
adc
fsubr
mov
pushl
or
cli
mov
jecxz
out
pop
test
ja
adc
or
insb
les
cmc
push
inc
push
hlt
lea
mov
ljmp
add
or
jb
adc
inc
mov
inc
mov
or
jb
or
es
pop
mov
ficomps
inc
or
lock
xor
imul
jg
add
mov
jo
jmp
pop
xchg
inc
xorb
lods
fldl
fcoml
decl
test
mov
sbb
mov
mov
ljmp
inc
mov
ja
jbe
jns
movsb
call
mov
mov
fstps
jne
and
mov
mov
js
rclb
je
pop
in
pop
adc
push
xor
andl
mov
dec
cmp
lea
adc
push
mov
fcomip
mov
addb
call
dec
call
or
or
cli
mov
jne
mov
or
jg
idiv
jo
jmp
in
call
cmp
cli
icebp
cwtl
jno
sbbl
xchg
jle
push
push
mov
out
mov
in
or
mov
mov
add
mov
xor
xor
add
push
push
add
loopne
inc
andl
xor
rorb
scas
addb
lea
sub
push
call
test
cmp
fisubrs
clc
xchg
xor
jbe
sub
movsl
clc
pushf
out
lock
or
mov
aad
fistpl
mov
xor
loope
adcb
call
ret
push
dec
icebp
lret
in
add
les
pop
inc
outsb
mov
xor
sub
dec
mov
pop
lods
mov
les
lock
mov
cmpsb
out
rolb
movsb
jmp
mov
add
cmp
and
add
pop
xchg
cld
loope
je
jp
movsb
scas
mov
into
push
pop
cli
adc
mov
pop
rcll
ret
mov
popa
pushf
aam
stos
add
jnp
stos
decb
ret
dec
pop
xor
int3
inc
mov
sub
pop
ret
jb
shll
xchg
je
inc
xchg
sub
cmpsl
adcb
jg
mov
clc
adc
je
xor
xor
xor
push
rorb
mov
add
push
int3
data16
and
push
mov
sbb
jg
xchg
mov
and
mov
es
lock
ljmp
aas
pop
pop
xor
sub
jno
xor
aad
jp
mov
xor
sbb
adc
jl
mov
cmp
clc
sbb
push
movsl
icebp
sub
fidivs
mov
into
pop
cmp
movb
xchg
add
pusha
adc
push
add
aam
or
jae
repz
lods
sub
xlat
lock
mov
jo
enter
or
sarb
cmpsb
in
add
jg
inc
mov
mov
je
sbb
cmp
sub
jo
pop
push
andb
push
mov
dec
cmp
aad
daa
mov
sbb
out
sub
pop
sbbb
jo
adc
loope
dec
sbb
jg
jo
jo
jmp
inc
jge
cmp
xor
push
jl
xor
jno
adcl
cmp
and
push
and
mov
sub
ret
jg
push
cld
mov
sbb
cmp
push
test
scas
jecxz
add
push
push
xchg
or
adc
dec
push
or
clc
mov
sahf
xor
xor
mov
in
mov
add
sbb
rolb
push
into
mov
adc
and
inc
outsb
push
mov
inc
hlt
scas
test
pop
adc
je
cmc
pop
hlt
mov
push
mov
test
mov
mov
inc
mov
inc
sbb
cbtw
add
inc
pop
pop
out
pop
into
mov
mov
loop
call
or
rorl
xchg
adc
fdivr
mov
push
mov
push
push
push
cwtl
leave
xor
pop
sahf
adc
or
or
cmpsb
sub
add
fistl
push
adc
stos
xor
cmpsl
jno
test
mov
and
test
jne
add
mov
test
clc
pop
nop
add
in
in
push
push
lret
pushf
insb
add
inc
test
add
js
jno
add
and
pop
cwtl
pop
xor
sub
adc
sar
and
js
add
jp
stc
push
mov
fstpt
push
mov
fdiv
out
mov
inc
lea
insl
push
scas
cmp
leave
and
das
jmp
les
fdivs
cltd
test
cmp
add
movb
lods
add
lock
stos
pop
jl
sbb
jbe
add
or
adc
xchg
mov
fdivr
push
fcmovu
dec
lods
adc
adc
std
push
inc
clc
push
adc
lret
lcall
mov
pop
adc
js
push
dec
or
push
pop
leave
cmp
add
push
test
add
sbb
add
fsubs
add
inc
sbbb
mov
jnp
sub
sub
ja
shrb
pop
jns
and
and
sub
xchg
xchg
inc
mov
nop
aaa
aas
xor
daa
or
or
pop
gs
jb
rclb
add
and
jp
sbb
cmp
es
fldenv
add
sub
ficoml
stos
lea
xchg
lds
push
push
adc
adc
ret
mov
jg
cmp
pop
insb
call
jae
in
mov
add
pusha
adc
pop
pop
cli
jg
mov
inc
js
nop
rorb
rorb
pop
sarb
fucomi
and
adc
scas
repnz
pop
sbb
aaa
add
add
mov
lea
mov
xlat
ret
fiadds
push
rolb
loopne
add
add
popf
roll
lahf
dec
and
mov
call
pop
in
xchg
rcrl
mov
outsb
add
adc
xor
and
cmpsb
orb
add
insb
movsb
mov
push
fisttpll
mov
jne
add
call
jecxz
and
xlat
xor
adc
out
or
dec
xor
adcl
push
cmc
dec
call
add
adc
lea
lahf
mov
lahf
call
fisubrl
and
rcrb
mov
adc
or
adc
jbe
es
sbb
adc
arpl
or
adc
sbb
shlb
rorb
iret
rorb
out
rorl
lods
adc
js
pusha
rorl
sar
ljmp
int
aas
push
test
inc
dec
push
adc
outsl
adc
inc
jl
mov
cmpsb
xor
enter
call
push
outsl
dec
lcall
and
sub
andb
loopne
mov
cld
pop
adc
dec
ja
int3
mov
xor
and
add
lret
loope
ss
std
ljmp
inc
scas
loopne
jmp
push
inc
pusha
sub
inc
pop
add
mov
and
loopne
clc
pop
sbb
mov
cmpsl
pop
int
cld
pop
mov
or
xor
adc
imul
lcall
lea
sub
call
and
clc
jp
xchg
xchg
mov
inc
push
add
shrb
nop
dec
jp
pusha
orb
clc
mov
sbb
push
push
cmp
out
dec
dec
lcall
lahf
gs
dec
xchg
loope
insb
fnsave
faddl
sub
in
add
and
add
call
sub
xor
xchg
incb
test
jne
roll
bound
sbb
mov
mov
push
push
or
pop
lcall
test
bnd
inc
fsubl
lods
pop
or
or
jle
les
js
cltd
add
pop
mov
cmp
arpl
movsb
lods
dec
loopne
cmp
and
cld
es
ja
bound
adc
dec
add
fstl
loopne
or
pop
nop
cli
cs
push
lcall
push
adc
gs
mov
test
test
hlt
pop
fs
adc
and
andb
pop
push
es
loopne
ja
call
pusha
mov
inc
fisttpl
cmp
pusha
pop
push
sub
int
pop
dec
mov
add
inc
cld
stos
or
into
cvttps2pi
xor
out
bound
sbb
add
int3
jae
test
cli
fistpl
cmp
cmp
enter
sbb
test
xor
add
adc
push
pusha
or
mov
inc
or
add
int
mov
xor
daa
sub
jle
or
popa
inc
loope
pushf
ss
jb
incl
adc
test
ss
lock
add
loopne
pushf
aam
ds
cli
shr
add
mov
roll
mov
mov
jo
and
inc
enter
sbb
adc
loopne
fadds
fisttpl
pushf
subb
sbb
fnsave
jbe
in
inc
or
or
bound
vmwrite
pusha
lahf
fsubl
loope
pop
mov
jo
lcall
rol
fsub
pusha
lods
push
inc
arpl
push
mov
call
fdiv
inc
and
in
and
cmp
xchg
cmp
loopne
adc
xor
sbb
push
push
push
sub
mov
or
xchg
loopne
xchg
push
call
loope
mov
adc
push
add
xchg
adc
push
test
pop
push
mov
cmpb
adc
fs
add
sbb
push
test
or
sub
shll
lret
add
inc
lods
mov
stc
cmp
jge
push
lret
lods
call
lods
sahf
or
loope
rclb
dec
cmpb
aaa
rcrl
inc
mov
loop
sub
sbb
xor
jge
cli
add
clc
push
xchg
inc
jg
and
and
pop
mov
mov
push
cmp
add
ret
adc
pusha
sub
push
add
cmp
aaa
or
xor
mov
mov
add
jno
or
mov
push
mov
push
std
and
ja
add
insl
mov
cmc
add
jb
test
stos
sub
dec
sub
sbb
dec
and
lods
call
les
inc
sti
aam
mov
mov
ljmp
pop
add
cmpsb
call
jno
push
add
push
jb
cmp
xorb
rolb
nop
push
xchg
pop
frstor
jle
out
inc
add
int3
xor
int3
call
mov
pop
test
ja
leave
jl
fs
push
dec
pusha
push
adc
shrb
ds
sub
bound
mov
addr16
out
int3
mov
sub
mov
sub
and
mov
mov
js
decl
shrb
adc
xor
clc
inc
mov
rolb
push
sbb
mov
mov
jb
cmpsl
lret
leave
jo
jno
outsl
add
test
pop
mov
movb
sbbl
shl
mov
push
jo
add
dec
push
push
or
mov
inc
inc
jo
into
enter
add
xchg
mov
pop
fs
das
clc
es
adc
aaa
dec
adc
sbb
aaa
or
and
add
adc
inc
test
mov
cld
mov
mov
or
sub
les
decl
sub
xchg
jo,pt
xchg
jbe
pop
mov
mov
les
repz
push
lahf
xor
adc
jne
cmpb
mov
mov
sarb
fidivs
xor
lock
arpl
sbb
cld
or
lock
mov
cld
pop
push
pushf
push
inc
and
or
xorl
icebp
inc
sub
shl
jg
repz
icebp
jo
aam
data16
jno
cmp
decl
push
inc
pop
fs
xor
mov
xchg
lock
xor
dec
adcb
jb
inc
jno
outsb
add
adc
or
add
das
pop
jecxz
popf
pop
fadds
movsb
nop
push
jne
xchg
lret
orb
jo
test
decl
or
xor
xor
mov
xor
nop
je
xor
mov
cmp
xor
ja
adc
mov
pop
subb
ljmp
orl
pop
add
xchg
lock
test
dec
add
test
outsl
cli
movsb
xor
lret
call
repz
sarb
push
ret
jecxz
push
cwtl
andl
incb
out
add
notl
call
inc
mov
push
add
sbb
or
mov
or
ret
push
cmpsl
push
xor
xor
outsb
add
xchg
orb
push
or
aaa
jmp
jnp
lock
sbb
xchg
or
mov
jmp
xlat
fisttps
jge
call
adc
xor
jle
lock
add
xor
cmpsb
mov
lock
adc
push
cltd
push
stos
movsb
divl
push
jo
and
es
add
dec
loopne
arpl
add
lock
cmpb
push
inc
das
cli
add
jle
add
mov
test
jg
push
lea
mov
xchg
insb
icebp
push
imul
push
add
lock
xor
xor
xor
ljmp
mov
daa
jecxz
inc
and
lock
call
test
ret
out
roll
jg
call
cwtl
mov
mov
or
xor
dec
lock
jmp
push
mov
sub
incl
mov
shl
lock
shl
daa
jo
sub
popa
jo
clc
jmp
xor
jmp
lock
cmp
mov
mov
pop
adc
bound
stos
fsubp
jo
jbe
pop
push
js
fldt
sub
inc
xor
sbb
jno
fwait
insb
push
xchg
pop
adc
adc
mov
and
cld
ja
mov
pushl
jns
ss
add
dec
int3
add
mov
pop
ljmp
or
testb
lea
pushf
lock
jg
xor
jo
fildl
cmp
insb
mov
inc
pop
lock
ret
sbb
and
push
mov
push
cmp
push
dec
cld
cli
divb
pop
fucomip
push
push
gs
cld
fldt
enter
or
push
xor
and
push
stc
and
call
pop
push
pop
outsb
lock
or
xorb
add
ret
mov
test
jg
jle
mov
cmp
cmp
in
loopne
push
sub
xor
stos
fsubp
cli
push
mov
sbb
fwait
mov
sub
pop
or
xor
repz
loopne
or
stos
call
jmp
lock
pop
sbb
pop
pmuludq
or
rolb
xor
pusha
pop
adc
and
mov
mov
sub
mov
ja
xor
sbb
das
incb
popa
fistpl
loop
pop
adcb
pusha
add
xchg
inc
mov
mov
mov
adc
sub
mov
cmp
jne
jg
fdivs
adc
popa
jnp
lock
in
adc
test
adc
lds
fs
je,pn
lods
lea
incl
fdivrl
xor
int
sub
mov
add
cwtl
adc
add
cmp
pop
dec
dec
cmc
inc
je
mov
das
clc
das
ss
jmp
jo
jecxz
je
in
jg
gs
jmp
cltd
stos
repnz
jg
fdivs
shll
dec
inc
ljmp
ljmp
pop
and
xorl
jo
lea
icebp
jbe
pop
call
pop
and
mov
test
mov
arpl
arpl
inc
xlat
iret
lock
jo
cmp
shrb
ss
mov
inc
dec
mov
les
pushf
das
cld
xor
es
push
xor
xor
add
sbb
ret
ss
cmp
call
adc
pop
sub
arpl
repnz
mov
gs
filds
add
mov
mov
push
push
test
mov
jno
adc
test
add
ret
rolb
insb
fdivrp
push
add
push
add
inc
pop
push
or
test
rcl
push
test
add
fadds
or
add
inc
and
sub
daa
or
xchg
es
imul
je
xchg
push
pop
mov
scas
push
je
pushf
gs
mov
push
loop
rorb
add
push
jmp
push
add
test
jg
test
adc
add
or
incl
les
in
pop
add
adcb
jne
add
mov
sbb
ret
sahf
call
popf
add
negb
or
lcall
xchg
pop
mov
aaa
push
and
jnp
subb
mov
sub
int3
rorb
add
nop
xor
jecxz
sbb
cwtl
inc
repz
adc
dec
bound
or
push
sbbl
lock
ret
cmp
jb
lock
xchg
cwtl
dec
andb
ja
nop
dec
jle
mov
add
and
cmp
sbb
aam
sbb
cmp
sub
fcomp
or
push
dec
jb
and
outsl
pop
stos
jbe
xor
or
lret
sbbb
sub
dec
cmp
sti
je
mov
lods
loopne
jbe
leave
repnz
push
add
cmc
inc
cmp
add
pop
mov
and
add
aas
les
roll
je
je
xor
add
jg
mul
outsl
jnp
sti
jg
cs
mov
ja
sub
add
lea
xchg
cmp
pop
clc
test
cmp
lea
in
mov
jbe
add
rorl
adc
dec
sbb
pusha
add
push
add
ret
bswap
into
divb
xor
into
ret
or
pop
cmp
sbb
add
cmp
repnz
lret
pop
add
test
cli
or
popa
push
call
shlb
sub
icebp
inc
pop
mov
add
dec
in
mov
mov
lea
jb
xor
add
ds
push
push
push
aaa
jmp
jo
sub
je
add
push
ret
icebp
add
adc
add
daa
and
inc
xchg
jg
inc
dec
inc
push
dec
jl
pop
ret
pop
rolb
int3
xor
std
popf
xchg
xchg
adc
sub
inc
xchg
or
jno
mov
push
cmpsb
out
rcll
add
inc
rclb
sbb
pop
in
jl
inc
and
cmp
jle
aam
and
jp
xor
adc
scas
pop
rclb
hlt
fists
add
add
mov
or
push
add
xchg
mov
cltd
nop
pop
mov
or
adc
call
jne
rcl
or
add
cmp
pop
shlb
loop
adc
call
ds
sbb
call
push
cmp
in
ret
test
sbb
push
decl
dec
sub
lret
rclb
add
pop
pop
sbb
rorb
inc
cli
call
push
add
jbe
je
and
pop
outsl
mov
dec
mov
in
lods
add
hlt
loopne
sbb
lock
outsl
xchg
daa
test
sbbb
cmp
ret
jecxz
add
cltd
je
aad
test
in
arpl
xor
inc
sbbl
sub
scas
cmp
push
and
cmp
add
or
incl
loop,pn
mov
pop
loope
cmp
sbb
and
sahf
pop
adc
push
mov
xchg
call
xchg
xchg
adc
popa
sub
mov
por
nop
mov
cmpb
orl
sub
movsl
add
cmp
shrb
loopne
add
sub
sub
lods
insb
mov
mov
sti
mov
mov
pusha
adc
and
push
xchg
sub
loopne
or
sbb
add
ss
mov
cmp
push
es
ljmp
loopne
push
int3
mov
cmp
mov
sti
jmp
or
cli
inc
loope
and
mov
lock
adc
sbb
dec
jae
sub
cmp
lcall
or
dec
addl
push
jecxz
divb
lods
add
vmwrite
sahf
pusha
dec
scas
fadd
mov
std
ja
imul
movsb
in
bound
jb
jl
jg
mov
cmp
jge
adc
add
das
sbb
lcall
add
cmp
cmp
loop
fadd
aad
cli
call
insl
call
dec
loope
adc
fdivs
cld
mov
fs
adc
inc
pop
aaa
inc
pusha
push
pusha
pop
mov
es
out
out
adc
xor
add
aaa
jbe
pusha
inc
add
adc
lock
cmpsb
loop
ss
cmp
push
and
mov
lcall
and
inc
mov
aam
mov
xchg
mov
pusha
or
out
loopne
adc
add
pop
and
cmp
pushf
add
cwtl
cli
inc
xor
pusha
sub
xchg
lahf
mov
mov
orl
call
or
dec
jg
inc
inc
jbe
jp
fwait
push
push
adc
or
cwtl
loopne
test
mov
outsb
call
imul
jbe
push
aaa
and
mov
jecxz
ljmp
clc
out
push
pusha
xor
loop
in
inc
ljmp
or
push
imul
add
clc
aam
dec
loopne
pop
aam
ret
cli
jg
int
mov
shl
loopne
push
adc
in
inc
loopne
add
addl
pop
test
jo
popa
add
add
mov
lea
dec
fsubrs
test
and
mov
push
ljmp
ds
mov
lock
fistpll
mov
sbb
xchg
inc
subb
jmp
nop
push
loopne
incl
fwait
shll
xor
hlt
push
add
jmp
adc
insb
in
inc
xor
lock
mov
and
hlt
je
shrb
or
pop
add
add
push
test
adc
or
js
jo
aam
jb
in
jo
addr16
fildl
dec
call
shrb
sbb
fdivrl
inc
xorl
pop
inc
imul
mov
xor
clc
or
decl
mov
add
mov
call
inc
outsb
add
aam
mov
push
adc
dec
mov
rol
jo
les
dec
inc
adc
fildll
inc
fdiv
add
inc
or
sbb
cs
enter
cmpsb
fsubrl
test
fisubrs
sbb
pop
sub
mov
or
xchg
stos
es
lods
adc
jl
or
add
push
adc
icebp
jo
lahf
es
scas
push
cmp
sbb
mov
push
adcb
pusha
cltd
adc
inc
lods
jo
ljmp
rolb
mov
scas
movsl
lret
add
mov
sub
pop
and
push
add
xchg
push
je
je
push
cmp
mov
jo
add
shrb
aaa
lcall
jno
push
inc
test
arpl
out
es
jb
pop
xor
incl
or
sub
adc
add
add
or
scas
movsl
cld
jmp
cs
add
jmp
movsb
ret
push
dec
pusha
sub
adc
pushf
push
jo
pop
call
push
lock
aam
push
dec
dec
hlt
stos
int3
add
xor
adc
cs
iret
or
in
out
dec
mov
sbb
stos
or
dec
test
push
stos
xor
faddl
ret
lret
and
pop
shlb
mov
pop
test
jo
and
lret
dec
cmpsl
inc
stos
jecxz
movsl
mov
add
sbb
lock
cmp
decl
mov
xor
push
inc
sbb
or
test
inc
add
lock
outsb
mov
mov
icebp
pusha
nop
sbb
outsl
and
cmp
add
pusha
je
roll
mov
cld
fs
push
jb
jo
icebp
or
cmp
jb
or
or
pop
dec
adc
add
fs
popa
test
or
je
pushf
mov
xor
mov
adc
lock
leave
repz
push
lock
mov
pop
jae
push
add
ffree
fistpll
xchg
xor
push
mov
divl
adc
sbb
pop
movsb
fiaddl
push
push
inc
push
pushf
push
cmpb
arpl
mov
inc
mov
out
pop
mov
clc
jp
jmp
add
ds
cmp
aaa
push
incl
mov
dec
jg
jmp
mov
je
add
mov
call
je
popa
lret
pushf
dec
push
xchg
adc
ss
and
jg
xor
push
cmp
sbb
and
lcall
divl
rolb
mov
cld
dec
adc
mov
jge
add
cmp
cmp
xchg
int3
pop
rcll
jge
add
arpl
call
inc
pushl
sub
cmpb
xchg
rolb
adc
xchg
loopne
in
push
push
sbb
in
lock
hlt
hlt
jb
pushf
movsb
cmp
add
jg
mov
push
push
push
push
cs
inc
or
leave
xor
cmp
lock
add
xchg
adc
out
clc
push
jo
jne
cld
je
mov
add
xor
xor
push
add
sbb
fnstcw
mov
hlt
jecxz
adc
bound
ficoml
mov
dec
push
pop
sbb
test
pop
and
pop
cmp
in
adc
ss
adc
xchg
or
lock
xor
mov
outsb
js
or
push
sbb
mov
xor
mov
out
sbbl
mov
andb
addb
mov
dec
repz
je
rclb
dec
and
push
and
adc
inc
jne
adc
mov
push
inc
or
sub
push
jo
jne
psubsb
roll
fidivl
sub
and
xchg
fildl
mov
jo
or
add
add
adc
mov
adc
jb
ret
or
fsts
je,pt
add
inc
mov
add
adc
leave
mov
dec
ja
or
pop
inc
inc
rorl
or
ss
push
inc
dec
ljmp
cmpb
fcoml
dec
or
or
push
xor
orb
test
pcmpgtb
lock
repnz
sbb
inc
aam
push
rorb
popa
lea
rcr
bound
das
lock
shll
pop
push
adc
call
fdiv
pop
sub
pushw
mov
cmp
out
movsb
in
divl
xchg
adc
cmp
fildll
mov
pusha
inc
xchg
jmp
into
dec
inc
jo
mov
pushf
loop
mov
incl
adc
pushl
push
add
inc
call
in
sbb
add
test
mov
aam
push
or
shr
pop
add
or
dec
dec
or
lock
fdivrl
dec
cmp
mov
inc
cmp
cli
call
jne
cmp
sub
jl
add
add
jecxz
add
pop
add
jo
inc
in
mov
insl
mov
subl
movb
adc
sub
ret
mov
lock
dec
and
adcb
jo
cmp
loopne
adc
add
lock
sbb
ret
xchg
je
rclb
cmp
mov
xchg
push
xchg
sub
add
cld
and
jp
sub
cld
add
and
push
add
jne,pn
and
jle
ja
sub
outsl
decl
cli
cli
ja
push
add
jne
add
mov
mov
add
cli
sub
and
cs
sahf
ret
xor
jecxz
xorb
ret
xchg
and
mov
and
push
xor
outsb
adc
push
pop
xor
mov
mov
lcall
inc
add
adc
lret
lret
pop
pop
jmp
push
movsb
jle
das
js
rorb
imul
inc
push
call
adc
lahf
je
icebp
pop
xor
cmp
xchg
cmc
fisttps
cld
or
mov
adc
sbb
sbb
add
push
ds
cwtl
repnz
inc
inc
inc
or
jo
orl
inc
mull
push
cmp
and
cmpsb
pop
cmp
jae
push
lea
loop
jno
popa
imul
and
dec
hlt
in
jne
add
or
xchg
dec
ljmp
mov
je
les
jbe
cmp
insl
adc
cld
adc
test
and
mov
repnz
shrb
rol
je
cmp
ficoms
pop
enter
ret
bound
das
fadds
push
lods
push
cs
inc
clc
pushf
adc
add
dec
and
cs
rclb
cmp
mov
mov
vminpd
dec
or
or
jg
add
add
je
hlt
add
loopne
cli
or
jb
add
fs
or
andl
dec
or
dec
cld
data16
in
mov
mov
dec
jp
hlt
pop
inc
jmp
xchg
stos
jbe
pop
jb
pop
lea
add
cmp
cwtl
cmp
xorl
xor
jecxz
xchg
data16
xor
dec
aas
inc
xchg
les
lahf
inc
test
add
lret
xor
jbe
cmp
dec
add
add
mov
call
ficoml
in
fadds
cmp
lret
rorb
jns
xchg
add
les
add
jmp
cld
cwtl
fnstsw
push
add
sbb
sub
aam
mov
clc
cld
fidivs
pop
or
divl
cmp
test
mov
data16
andb
popa
xor
push
movsb
and
mov
mov
sbb
dec
andl
shl
call
sbb
fisubs
mov
movl
adc
ljmp
add
xchg
and
sub
lret
mov
daa
jne
test
je
xor
outsl
nop
pop
cmpsb
inc
call
or
aaa
sub
dec
sbb
or
and
cld
ret
jb
dec
test
dec
or
call
and
bound
inc
inc
rorb
bound
mov
hlt
shll
not
jge
or
aaa
imul
inc
xchg
mov
ficoml
mov
inc
add
out
add
cmp
xor
dec
and
xchg
mov
and
gs
add
pop
push
pop
push
xor
inc
aaa
mov
aas
pop
jb
incl
inc
iret
push
movb
sarb
cmp
call
xor
loope
sbb
cmp
add
and
add
add
lret
cmp
cmp
rcrb
ljmp
cmpsb
neg
in
and
std
or
mov
rcrb
outsb
or
nop
fdivr
jmp
and
mov
js
mov
je
cli
or
lock
insb
add
mov
pop
or
push
jne
push
addr16
shll
test
dec
push
add
int
xor
mov
movsb
inc
sub
adc
jbe,pt
stos
jge
scas
inc
popf
mov
lock
incl
inc
rcrb
aaa
cmp
call
jmp
subb
mov
sub
ja
inc
or
jl
mov
cmp
add
fiadds
or
scas
pusha
push
lods
call
xchg
fucomp
lods
add
pop
aam
sbb
mov
data16
insb
mov
dec
int3
shrb
into
cmp
mov
add
out
sbbl
push
fsubrl
push
and
adc
ficoms
mov
arpl
mov
movsl
cmp
leave
lret
movhps
popl
push
aad
iret
adcb
out
adc
jo
push
and
mov
and
shrl
mov
repz
or
jl
aam
mov
push
icebp
mov
xchg
pop
and
ds
add
sub
mov
adc
xor
outsb
sbb
mov
sbb
std
rcrl
add
mov
cmp
push
out
pusha
or
arpl
lock
adc
and
adc
aaa
pusha
push
cwtl
subb
loopne
rolb
pusha
and
cld
push
mov
fsubs
push
cmp
cld
add
and
cmp
pop
add
iret
sub
or
loop
and
mov
and
loopne
clc
mov
or
push
or
add
pusha
push
or
jo
jl
add
or
inc
xchg
cltd
jecxz
neg
or
icebp
outsl
dec
sub
mov
mov
jbe
sbb
mov
add
and
jb
push
or
sbbl
xor
cli
pusha
jne
and
cltd
loopne
mov
mov
or
jbe
xchg
xor
lock
aas
pusha
jl
lret
sbb
sbb
jo
pushf
test
jge
adc
call
jge
jne
pusha
decb
cmc
and
mov
pushw
xchg
mov
int3
cmp
push
in
mov
inc
add
cs
jne
cmpb
int3
in
add
ret
sbb
loopne
je
shrb
or
push
idivb
push
ret
push
xor
test
adc
arpl
add
loop
lret
cmp
lock
nop
loopne
push
loopne
jo
push
popa
sbb
test
vcvttps2qq
xchg
push
mov
ljmp
loopne
call
adc
add
repz
inc
sbb
lods
sbb
sub
adcb
cmp
lock
test
repnz
mov
out
cmp
mov
add
fbstp
clc
loopne
jecxz
add
push
je
ret
cli
push
xchg
lcall
sub
cld
jl,pt
adc
lea
cmp
jb
push
call
popa
jnp
jb
call
mov
shlb
pop
push
fs
dec
fdivp
call
add
or
sbb
xor
adc
adc
fcoml
add
outsb
mov
sarb
or
push
pop
mov
push
lods
test
add
sub
in
pop
add
in
loopne
test
jl
or
shll
xchg
dec
xor
arpl
and
add
push
dec
inc
insb
lea
xchg
pop
dec
loopne
and
sub
dec
add
data16
incl
push
inc
adc
pop
dec
cmpsb
lcall
ror
inc
xor
cld
xor
mov
insl
push
push
and
push
add
push
add
xor
sub
and
adc
inc
movsb
outsl
mov
push
cli
pcmpgtb
sbb
cmpsb
pusha
ret
add
push
mov
pop
add
sub
and
jle
xor
andl
and
mov
ss
lods
popa
mov
sub
arpl
add
decl
pusha
test
loop
dec
in
push
loope
or
push
add
mov
mov
jg
fcomps
sbb
xor
scas
xor
inc
cmp
test
jo
jo
test
jo
ljmp
mov
xor
sub
cmp
mov
sbb
les
bound
mov
aaa
pop
xchg
or
adc
lock
fwait
dec
add
or
lcall
cmp
and
je
xor
stos
pushf
or
cmp
jbe
lea
call
ss
out
idiv
adc
mov
push
sbb
int
enter
xchg
testb
dec
rcrb
adc
add
dec
loopne
sbb
push
pop
ja
dec
inc
jg
xchg
or
mov
inc
pop
add
movsb
aas
adc
sub
inc
xor
inc
adc
mov
add
adc
mov
xor
ljmp
inc
add
xchg
jg
lock
jl
cli
int3
mov
pushl
mov
push
mov
mov
daa
xor
pop
xor
push
pop
jne
mov
mov
or
jbe
or
test
sub
jb
push
xor
adc
pop
xor
adc
insb
jecxz
pop
and
and
sbb
rolb
sub
or
shrb
sar
pop
inc
xor
or
lock
jmp
inc
mov
push
inc
insb
cli
mov
test
call
adcl
push
mov
mov
call
es
lods
sahf
shrl
add
sub
incl
cmpsl
cli
or
test
pop
add
roll
dec
adc
gs
inc
aam
inc
inc
pop
and
push
out
or
lods
sbb
xchg
pop
adc
xchg
pop
push
fiadds
addl
testb
lock
dec
divl
mov
fisubs
lret
dec
jo
xor
push
repz
inc
push
je
pop
inc
test
and
add
xor
sub
dec
adc
aam
faddp
fisttps
fnstenv
add
mov
push
mov
outsb
mov
inc
cmp
inc
push
add
cmp
pusha
xor
lea
pop
xor
adc
add
push
ret
sub
cmp
fistpll
dec
push
or
sub
inc
aam
pop
ljmp
cmp
add
push
daa
mov
leave
fmul
mov
je
add
adc
scas
inc
or
adc
inc
sbb
cmc
add
hlt
shlb
push
sbb
pop
sub
mov
insb
adc
or
movl
jo
push
data16
clc
jo
call
jo
or
xor
mov
jle
mov
adc
nop
ficompl
add
les
or
xchg
mov
rorb
call
mov
call
jb
mov
dec
inc
or
cld
jo
pop
add
dec
lret
stos
shrb
dec
loopne
and
cmpsl
mov
push
shlb
jns
nop
popa
and
pop
xor
cld
cld
jbe
test
sahf
arpl
mov
call
mov
rcrb
and
cld
adc
inc
jo
repz
and
ficoms
xor
add
mov
mov
add
stos
mov
adc
inc
shll
xor
and
sbb
add
test
sbb
xor
cmp
call
add
leave
ret
push
pop
jo
xor
sbb
test
inc
clc
xlat
call
pop
cmpsb
js
lock
push
pop
repnz
subb
and
push
inc
insb
ss
mov
mov
test
cmp
cmc
out
fadds
sub
fwait
clc
xchg
or
dec
insl
pop
and
scas
sbb
in
lock
aam
mov
mov
lret
xor
push
ljmp
xchg
pusha
mov
sub
add
mov
lock
sub
dec
mov
mov
es
mov
ss
cmp
jae
inc
rorb
add
inc
faddl
mov
cmp
pop
testl
jmp
add
jae
push
sbb
mov
inc
out
push
inc
insb
clc
cmpsl
adc
sbb
enter
clc
push
mov
pop
incl
jno
js
lods
jo
xchg
add
dec
mov
nop
jg
add
mov
push
jo
push
hlt
jo
add
mov
inc
ret
pusha
and
and
push
or
sub
and
add
test
int3
outsb
adc
call
insl
mov
inc
data16
sbb
or
lods
mov
lea
sahf
adc
mov
adc
in
fimull
mov
jo
jno
adc
pop
mov
test
mov
movsl
xchg
aas
mov
dec
sbb
out
mov
mov
seto
addr16
push
push
pushl
mov
or
jp
mov
rolb
rcll
mov
jo
add
xor
repz
test
pop
add
adc
push
push
inc
jb
fbld
push
mov
ljmp
mov
and
jg
icebp
xor
pop
mov
dec
or
dec
jne
mov
adc
mov
fcom
mov
push
inc
push
divl
out
mov
mov
sub
or
testb
out
cmp
ja
add
lock
stos
testl
pop
es
push
jmp
cmp
add
mov
or
mov
and
inc
or
sub
mov
jne
ljmp
test
pushl
cmpsl
jl
push
sbb
ret
sub
add
call
dec
out
je
les
incb
daa
aam
scas
hlt
xor
or
push
dec
push
sbb
mov
test
ds
sub
sbb
xor
dec
add
xor
dec
sbb
inc
add
loopne
pop
cmpsb
ret
push
sahf
jo
test
cli
cmp
cmpsb
call
loop
and
or
jae
in
adc
add
add
dec
fst
sub
cli
xor
jbe
xchg
add
outsl
cli
ret
mov
movsb
or
jb
inc
add
add
ss
add
ret
insb
xorl
data16
xor
mov
bound
inc
pop
and
and
add
and
and
adc
or
push
lock
add
xor
dec
data16
lock
inc
jo
push
pusha
sbb
mov
test
jo
es
aam
jmp
inc
pusha
dec
jl
enter
stos
ss
and
adc
loop
mov
mov
fidivs
jmp
mov
shlb
add
cmp
inc
add
xchg
out
push
call
movsb
sbbl
push
jb
lea
sub
stc
out
mov
push
dec
add
add
sbb
mov
bound
les
inc
mov
mov
adc
sbb
or
orb
fcoms
mov
sahf
dec
lods
inc
test
jmp
add
inc
lock
add
orb
inc
or
fcmovbe
fistps
or
leave
je
movsb
pusha
pusha
pop
lds
xor
scas
sub
add
cmpsl
mov
mov
and
sbb
xorb
not
push
or
jnp
mov
push
stos
jmp
push
push
dec
rorb
lods
popf
pop
add
call
test
sar
test
aaa
push
test
and
lea
les
stos
mov
out
call
dec
sbb
xor
xor
dec
xchg
mov
mov
mov
mov
inc
cltd
bound
pusha
pop
hlt
call
pop
lds
cmp
push
or
mov
or
push
fnstenv
frstor
push
movl
aaa
insb
test
xchg
inc
lock
or
inc
daa
addl
sbb
out
outsb
lcall
xorb
decl
addb
mov
jecxz
fsub
add
inc
subb
and
mov
push
jl
jl
nop
outsb
and
push
and
xor
imul
incl
add
in
orb
add
adc
cwtl
inc
adc
sbb
pusha
inc
jl
shl
xor
mov
push
dec
bound
push
pop
inc
inc
lock
and
ret
mov
inc
inc
fdivs
sarb
inc
ret
fdivl
ss
dec
push
scas
iret
jmp
test
iret
sbbb
sub
lret
lods
add
lods
xchg
cltd
sbb
mov
scas
and
mov
mov
pop
mull
je
cmp
popl
fistpll
shrb
or
pop
cmp
inc
mov
je
add
sbb
fs
or
jecxz
popl
out
mov
outsl
jg
dec
pushf
sub
rol
adc
dec
jmp
adcl
imul
xor
mov
jge
aaa
cmp
sub
sti
xchg
les
std
add
inc
arpl
push
mov
push
pushf
push
call
outsb
dec
inc
in
daa
xorl
sbb
or
pop
fsubrl
ret
inc
hlt
clc
mov
xor
mov
rol
mov
add
pop
pop
loopne
sub
test
nop
clc
push
and
test
pop
hlt
movsb
mov
rorb
add
lds
je
add
test
push
cli
xor
add
rcrl
inc
inc
das
adcb
xchg
enter
add
rcrb
pop
pusha
pop
scas
jb
xchg
and
leave
cmp
mov
mov
roll
mov
inc
cmp
inc
nop
fs
add
adc
sub
addl
jb
inc
rclb
das
push
orb
les
and
adc
push
adc
das
mov
inc
mov
sbb
or
mov
push
imul
and
xchg
push
sahf
push
fcmovu
add
push
add
sub
inc
mov
xor
cmp
lds
pop
aas
mov
mov
and
xor
jp
adc
sti
roll
mov
or
push
fs
loopne
call
mov
adc
cwtl
or
cs
xchg
push
decb
loope
sti
mov
xor
add
add
pop
mulb
cli
adc
outsl
out
xor
adc
nop
ljmp
pusha
add
pop
pusha
xchg
out
cmpsb
in
xor
inc
dec
mov
mov
push
add
lahf
sbb
shll
nop
pop
pop
imul
imul
fs
adc
idivl
inc
dec
adc
adc
hlt
loopne
lock
filds
ficompl
jmp
adc
pusha
push
dec
cwtl
fsubrs
jnp
hlt
adc
and
pushf
push
test
pop
cmp
cmp
fsubl
popa
pop
stos
lock
mov
dec
fsubrl
adc
sti
push
or
or
stos
hlt
loope
fcmovu
pop
mov
jnp
jnp
in
xlat
stos
in
rcl
stos
mov
mov
dec
int3
cmpsb
test
shrb
dec
shlb
std
rolb
loop
test
sub
push
mov
in
frstor
sbb
shlb
lahf
adc
pusha
adc
and
cli
push
int3
clc
incl
inc
jp
and
pusha
stos
push
lret
sub
mov
mov
adc
loopne
fsubs
aam
cmpsb
pop
push
pop
mov
jae
sbb
pop
push
ss
push
xchg
mov
shl
cmc
jbe
add
shl
add
mov
or
or
mov
fsubs
test
xor
jmp
xor
test
bound
addr16
add
jmp
mov
add
and
jne
pop
dec
cld
adc
movsb
lea
call
lret
xor
lock
add
xchg
lock
inc
cs
fs
xchg
nop
mov
in
aam
adc
mov
xchg
mov
cmp
pop
adc
inc
enter
add
in
inc
je
fcmove
sub
loopne
or
pop
sbb
sbb
xor
fs
and
arpl
sub
xchg
push
inc
xor
test
jmp
dec
es
xchg
or
test
mov
inc
jle
mov
leave
loopne
fcmovnu
aad
jbe
mov
add
add
loopne
sub
add
push
xor
loopne
mov
jo
adc
sahf
pop
xor
add
cmp
sbb
int3
clc
int3
int
fldl
mov
je
lret
push
and
pop
add
in
stos
and
add
aam
inc
cld
or
jbe
mov
ficomps
cmp
adc
jg
pop
add
xor
add
xchg
push
and
andl
add
dec
ror
mov
xor
shl
or
mov
add
jl
pushf
push
xor
mov
fldl
fidivrs
or
dec
or
inc
adc
ljmp
popa
int3
lock
mov
xor
cmp
or
jne
xor
scas
data16
adc
sub
loopne
adc
jmp
add
mov
lds
addb
lea
dec
sbb
insl
add
xor
sub
mov
cs
ret
rorb
push
and
push
adc
repz
sub
sti
mov
fcoml
mov
mov
jle
addb
add
jl
jne
xor
ss
add
jo
in
jb
pop
adc
fcompl
inc
fadd
add
sbb
cmp
sbb
push
pop
sbb
mov
popa
push
sub
cmp
add
fiadds
test
xor
xchg
cmpb
xor
xor
jae
in
scas
mov
jb
xchg
call
sbb
add
sbbl
push
arpl
aas
adc
inc
call
mov
mov
add
dec
push
or
add
inc
adc
jl
inc
add
icebp
sub
inc
sub
notb
std
inc
inc
loopne
stc
ja
cmp
cmp
fnsave
push
call
pusha
or
inc
add
ja
mov
sbb
enter
and
jo
in
xor
pop
inc
loopne
loopne
sub
pop
ss
nop
movsb
pushf
lods
or
das
cmpb
pop
add
sub
mov
and
mov
inc
rcrl
leave
xchg
dec
dec
shr
push
andb
adc
fwait
sub
call
andb
add
inc
sub
fucomi
pop
pop
pop
cmp
pop
xchg
and
jmp
push
mov
push
push
and
addb
subb
data16
shl
jle
pop
fisubl
xchg
sub
subl
add
into
nop
xor
cmp
repz
pusha
xchg
dec
nop
in
or
xchg
icebp
pop
ljmp
clc
fisttps
dec
and
mov
mov
inc
std
adcb
nop
inc
inc
cwtl
rclb
cmp
dec
outsb
aaa
gs
dec
mov
int
pop
pusha
ret
call
push
sub
push
adc
mov
dec
push
push
andb
push
fsubl
xchg
xor
push
add
cwtl
mov
cld
adc
or
add
aad
mov
mov
jne
scas
push
mov
or
pop
mov
stos
pop
cmp
push
pop
jo
lods
adc
mov
mov
jo
fs
in
mov
mov
add
lcall
mov
xchg
mov
leave
lea
adc
sbb
mov
push
adcl
push
push
ret
add
idiv
jbe
jg
fimull
add
je
add
in
in
xor
xor
lret
or
clc
stos
jle
mov
test
or
mov
pop
stc
mov
mov
adc
clc
push
push
xor
incl
add
mov
jmp
icebp
add
add
call
das
or
lock
call
inc
adc
or
xor
scas
or
fbstp
mov
adc
call
pop
lcall
out
sub
cmp
mov
dec
cmpsl
fisttps
jns
or
add
les
test
call
pop
cmp
outsl
mov
adc
call
push
inc
test
pop
icebp
je
push
mov
mov
push
pop
dec
add
push
scas
push
sub
out
divl
fs
sbbb
add
cmp
inc
jg
int3
lock
pop
push
cmp
push
jne
or
insl
in
test
add
mov
mov
and
adc
pushf
mov
push
sub
pop
call
lock
jne
mov
cmpl
inc
adc
mov
jecxz
sbb
xor
lea
cmp
inc
mov
cmp
adc
xor
mov
lock
lret
jne
pop
pop
mov
push
lods
push
mov
nop
cltd
jge
out
jb
inc
and
sub
add
push
hlt
push
push
pop
call
ret
pop
call
sbb
lea
add
push
mov
xchg
cli
sub
add
sbb
xor
add
sbb
add
push
mov
add
add
and
mov
mov
dec
scas
and
shl
fisubrl
or
mov
mov
pop
push
and
ret
xor
jne
decl
mov
mov
jmp
test
or
xor
adc
and
cmp
xor
adc
mov
inc
aad
out
xor
pop
pop
inc
add
icebp
or
scas
sbb
scas
cli
push
hlt
xor
ds
add
scas
lds
js
mov
stos
inc
jge
movsb
mov
mov
js
scas
push
or
xor
mov
rolb
mov
xchg
pushl
pop
out
push
xor
or
test
fisubrl
add
popa
fisttpl
jg
jp
jae
lea
cmpb
jg
adc
outsb
stos
inc
jo
mov
mov
not
repnz
xlat
mov
mov
je
dec
xchg
les
mov
enter
sbb
xor
stc
cmpb
xor
add
outsb
adc
sbb
in
adc
cld
mov
stc
nop
xchg
rcrb
xor
test
cmpsl
sub
or
fildl
jg
cmpl
lret
jns
incl
mov
sub
scas
je
mov
icebp
pmaxsw
xor
mov
mov
arpl
fs
bound
test
xchg
add
and
and
pop
push
adc
lret
roll
inc
pop
ss
add
mov
es
add
data16
cli
out
aad
pop
adc
and
or
pop
ss
sub
call
or
int
fistl
les
leave
fadd
push
pop
inc
pop
jno
push
sub
inc
sbb
sbb
or
fdiv
add
add
pop
xchg
ljmp
lahf
nop
add
js
cs
je
xchg
xchg
push
add
inc
sbb
stc
and
pop
rclb
enter
mov
mov
dec
jmp
pop
dec
mov
xchg
push
add
mov
and
jne
mov
and
loop
dec
adc
push
xchg
mov
sbb
repnz
test
insb
adc
test
dec
bound
mov
es
xchg
or
adc
mov
jbe
pusha
add
xchg
fsubr
push
xor
int3
outsl
add
test
sbb
push
call
push
dec
shrl
jle
test
or
push
xchg
test
daa
icebp
inc
mov
addb
addb
add
lods
iret
cld
leave
adc
ljmp
add
call
dec
in
adc
jbe
inc
dec
inc
test
and
jbe
rcll
aam
mov
cltd
mov
andb
nop
mov
lock
cmc
inc
les
mov
push
or
sbb
dec
jb
sub
jo,pn
sbb
sbbl
jae
data16
xor
jle
jl
push
std
cwtl
lock
add
sti
sbbb
mov
xor
add
dec
test
lret
jb
cs
sub
push
xchg
push
fdiv
je
add
nop
rcrb
mov
mov
sbbb
sahf
sub
xorb
fadds
push
pop
adc
clc
bound
insl
mov
popf
mov
rol
out
push
pop
rorl
push
push
add
outsb
test
jb
sbb
cs
xor
adc
fcoms
mov
fst
sbb
pop
or
rorb
aam
inc
jo
mov
or
adc
cmpsl
push
add
add
mov
test
fcmovnu
cmc
add
rolb
xor
jb
call
fs
xchg
push
adc
mov
inc
inc
jbe
data16
std
mov
out
dec
pop
push
adc
dec
nop
xor
out
jl
dec
sbb
push
add
mov
cmp
dec
aad
push
sbb
mov
pushf
adc
add
sub
xadd
jmp
sub
shll
add
enter
idivb
lods
add
jl
xor
pop
sbb
test
add
repnz
sub
and
ljmp
or
rorb
lock
xor
mov
loop
add
and
and
inc
and
mov
adc
jmp
mov
call
ljmp
push
inc
push
aas
rorl
add
ret
jp
and
clc
filds
int3
mov
cmpsb
dec
std
adc
arpl
add
adc
adc
mov
jo
push
jbe
shrb
je
adc
insb
jecxz
and
or
push
mov
movb
add
incl
fsubs
fistps
mov
adc
pop
adc
cmpb
push
cmpsb
and
cmpsb
lock
mov
adc
jg
rclb
movsb
test
and
outsl
test
pop
inc
push
imul
lret
out
push
nop
xorb
shl
fwait
arpl
or
and
inc
jl
push
sbb
push
push
pop
jo
inc
fs
shlb
fmull
add
sub
insb
loopne
cmp
pop
mov
call
mov
xor
ret
dec
clc
ljmp
mov
push
insb
mov
mov
es
add
cs
or
in
sub
dec
pop
and
in
imul
loopne
push
pusha
pop
cmp
mov
add
call
push
cmp
sbb
mov
jp
pusha
push
jb
xchg
and
packuswb
sbb
dec
pusha
add
adc
inc
pop
icebp
imul
imul
adc
fiaddl
adc
imulb
inc
pop
out
mov
pushf
pusha
xor
int
pusha
xor
jg
mov
pop
xor
ret
adc
fucom
and
inc
hlt
test
sbb
sti
dec
xor
lret
adc
xchg
xor
add
fs
pusha
and
call
sbb
jmp
sub
repnz
add
xorl
cli
lcall
cmc
add
sub
and
jmp
and
cmp
jne
pusha
enter
pop
dec
pusha
pop
cs
or
mov
pushf
loope
movsl
xor
testl
fildll
add
dec
in
add
cmpsl
mov
ret
add
rol
lcall
jmp
pop
ja
clc
sub
push
test
xlat
scas
inc
leave
pusha
add
cld
ljmp
and
mov
add
mov
das
push
pusha
jb
mov
xchg
add
nop
clc
enter
push
xchg
sub
popa
and
add
subb
lea
cli
xor
loopne
sbb
inc
sbb
inc
xchg
push
out
shr
dec
add
loop
add
outsl
std
insb
pusha
sbb
aaa
xchg
hlt
push
xchg
dec
xor
iret
pusha
sub
cmp
loopne
pop
sub
fcompl
pop
inc
aam
add
int3
add
movsb
or
icebp
negb
push
in
enter
and
adc
pop
pop
pop
push
and
lret
callw
loopne
pusha
fwait
or
clc
sbb
popa
pop
lds
int
leave
ret
loope
adc
inc
les
or
jge
arpl
hlt
je
push
or
ljmp
testb
loope
fstpl
push
xchg
scas
jg
dec
mov
cmpsb
jno
test
aaa
lock
and
lea
jo
push
mov
add
jne
cmp
int3
lods
add
es
scas
xor
imulb
ss
popw
pusha
lods
clc
loopne
mov
mov
push
cmpsb
sub
jmp
mov
fmull
inc
xchg
inc
push
inc
nop
nop
push
and
mov
fidivs
into
pop
jb
push
add
loope
jp
lds
call
sahf
sbbb
or
add
and
mov
cltd
jmp
push
nop
push
cltd
stos
and
jmp
test
and
mov
loopne
nop
pop
mov
fildl
cmp
mov
movb
cmpsb
adc
pop
rorb
popa
or
cmpb
lods
add
scas
shlb
icebp
inc
xor
cmp
pusha
cmp
or
test
loope
roll
pusha
adc
sbb
adc
jne
push
loop
outsb
and
push
imul
sarb
add
lock
test
cmpsb
loopne
and
xchg
lock
push
inc
pusha
leave
cmp
mov
or
sbb
add
and
inc
add
mov
movsl
inc
push
mov
mov
cli
adc
sbb
mov
scas
mov
cmp
mov
mov
jp
adc
sbb
dec
idivb
mov
test
or
std
pushw
sub
enter
add
mov
jge
sbb
adc
daa
push
shrb
cmpsl
mov
push
cld
mov
jl
xor
xchg
lea
and
rcrl
xor
rorl
mov
jmp
jb
rclb
jp
mov
inc
or
and
jo
adc
xor
or
neg
mov
sbbb
adc
lock
push
icebp
dec
mov
aaa
cmp
sbb
pop
dec
adc
sub
testb
adc
adc
xchg
jb
faddl
adc
push
mov
xor
adc
add
sub
ds
add
sbb
mov
push
clc
add
push
inc
pushaw
jnp
add
push
mov
push
call
jae
out
mov
cld
mov
cmp
syscall
lods
xchg
add
adc
and
mov
stos
push
pop
or
xor
clc
outsl
jo
jne
push
mov
cld
jno
lods
jnp
jmp
mov
mov
xor
mov
call
call
clc
xchg
ljmp
aaa
adcb
sub
push
lock
aam
orl
jo
decl
js
call
lock
mov
addl
add
add
fcmovb
movhlps
adc
adcb
fidivl
xor
cs
jo
pop
ss
mov
jmp
jo
jle
icebp
xor
jno
push
cmp
inc
test
aad
add
ficoms
jb
jo
mov
xorb
push
mov
adc
push
mov
add
xor
sbb
sbb
xor
shrl
push
sub
xor
bound
jmp
sub
adc
push
lods
jno
sahf
sbb
push
outsl
push
test
or
shll
outsb
lock
das
cmp
sti
xor
stos
loope
add
lret
insb
enter
adc
dec
cmp
je
add
add
sbb
sahf
push
cltd
dec
std
push
clc
call
or
lock
push
daa
add
dec
rcr
fldl
add
call
inc
hlt
add
inc
test
stos
xchg
fdivp
mov
adc
or
or
sahf
adc
in
lods
add
sarl
sbb
pop
inc
lock
divb
test
rclb
sub
idiv
outsl
test
push
jb
adc
lsl
adc
in
push
adc
les
call
or
je
cmpsb
inc
and
aam
mov
or
add
xor
sub
push
ljmp
mov
or
add
pop
nop
mov
or
sub
add
xor
hlt
shlb
add
sub
xor
inc
dec
lock
icebp
push
xor
dec
lcall
fbstp
jge
clc
xchg
int3
lock
push
stos
ds
jge
xchg
xor
xor
cmp
clc
cmp
call
add
mov
pop
lea
xor
sub
repnz
sarb
xchg
or
lods
fcoms
sbb
adc
xchg
xchg
add
lock
or
or
rcrb
xor
or
sub
fdiv
push
fcom
aad
mov
fmull
xchg
in
pop
test
inc
in
adc
xchg
xchg
imul
je
xorb
cmpsl
mov
push
inc
subb
inc
push
inc
ret
out
imul
push
pop
inc
cli
insb
mov
dec
adc
mov
and
cmpsb
add
push
in
push
or
mov
push
call
adc
cmp
cmp
je
xchg
pop
repnz
xlat
push
mov
lock
outsb
push
subl
cmpsb
pop
mov
pop
and
nop
inc
or
mov
in
add
jns
sub
pop
mov
decl
adc
jle
mov
addl
dec
or
add
sub
popa
sub
rcll
sub
push
fidivl
hlt
and
rolb
dec
repnz
xor
je
into
add
mov
enter
lods
adc
pop
mov
sub
rcrb
int3
inc
dec
mov
ret
or
imul
xor
dec
cmp
adc
outsl
clc
fmuls
icebp
inc
and
cmp
pusha
mov
mov
jb
mov
fcmove
lock
enter
rcrb
in
push
adc
push
jo
inc
add
add
jbe
push
rcl
push
push
pop
mov
mov
jo
hlt
scas
daa
and
mov
popf
mov
xlat
mov
fistpl
inc
call
mov
clc
mov
rcll
jb
jae
call
std
mov
inc
sub
or
dec
xor
test
call
jb
loopne
adc
push
push
inc
mov
xor
sti
inc
mov
clc
adc
into
jo
xor
adcb
daa
sub
nop
dec
mov
fcoml
icebp
jg
cmc
inc
hlt
hlt
lods
adc
inc
mov
xchg
bound
pop
call
or
xchg
mov
push
pop
or
inc
clc
and
mov
hlt
ret
call
cmp
ja
outsl
jp
pop
mov
push
xor
mov
cld
jg
repz
repnz
jb
fcoml
sbb
jo
xchg
pusha
jecxz
xchg
or
mov
lret
cli
in
or
es
lock
rclb
sti
pop
shll
push
mov
and
in
or
aam
add
push
sbb
cld
sub
lea
mov
push
dec
cli
lock
idivl
mov
add
je
adc
cmove
xor
cltd
xlat
mov
mov
push
mov
add
cmp
inc
addl
xor
sarb
sub
xor
hlt
call
cld
xchg
addb
cmp
fists
mov
pop
sbb
call
xor
sti
push
push
lock
jno
test
orb
push
push
jl
cld
sbb
xor
js
cmp
jae
aam
or
sbb
dec
std
xor
pop
sub
add
jecxz
loope
inc
sub
dec
in
xor
cmp
je
inc
mov
dec
dec
dec
or
mov
xorb
and
jo
je
push
or
or
add
rclb
std
xchg
adc
in
sbb
jo
push
outsl
jo
push
fwait
add
jl
ret
call
pop
push
adc
mov
push
aas
jb
push
ljmp
mov
mov
pop
std
add
adc
repnz
sbb
push
stos
cmpsb
and
ret
cmpsl
je
mov
xlat
mov
sub
jbe
faddl
cmp
sbb
pusha
call
mov
movsb
les
sub
xor
pop
lret
loopne
sub
and
sti
add
es
mov
andb
and
add
mov
test
adc
pusha
ret
andb
and
mov
mov
mov
cli
ret
and
les
outsb
mov
adc
nop
sub
push
push
int3
orb
shlb
pop
or
and
mov
push
mov
fdivl
outsl
mov
cmpb
sbb
add
mov
inc
add
add
sub
testb
push
add
push
dec
dec
or
xor
adc
orl
or
out
and
sbb
push
das
push
dec
fs
jo
inc
jb
jle
dec
add
mov
loopne
pop
dec
mov
mov
add
dec
mov
jl
lock
pushl
mov
scas
roll
movl
rclb
push
icebp
add
pushf
jne
jp
sub
shlb
loop
dec
inc
loop
xchg
ret
rcll
inc
push
push
jg
mov
add
jo
call
push
roll
rcll
arpl
ret
add
cmp
push
push
dec
test
cmpsb
out
jo
push
or
and
ret
andb
and
lea
pop
adcb
sti
jbe
in
outsl
aas
mov
push
add
push
jle
push
push
cld
xor
mov
push
xchg
push
movsl
hlt
movsb
rcll
sbb
pop
sbb
push
jb
cmp
inc
push
inc
and
jo
xor
mov
mov
pop
adc
test
shrl
sbb
es
mov
add
inc
cli
push
pop
jecxz
pop
cmpsb
mov
loop
mov
jb
loope
rclb
and
rcrb
rcl
push
or
or
addb
push
fsubrl
fimuls
xor
in
inc
cmp
adc
xchg
push
out
cmp
ret
in
fisttpl
or
rorb
aas
mov
loop
add
and
add
sbb
adc
push
loop
mov
or
shll
jbe
add
sarb
cmp
pop
and
jg
stos
aad
es
xor
rolb
jbe
mov
xchg
shrb
cwtl
sub
loope
adc
in
add
and
imul
rcrl
xor
loopne
sub
pop
add
js
popa
cmp
pusha
daa
push
test
cmpsl
pop
ret
and
cmp
cmp
jle
shlb
jp
test
or
adc
add
mov
incb
loope
lock
push
adc
inc
popa
xorb
push
xor
scas
xor
inc
sub
in
inc
negb
jno
xchg
or
xchg
fs
add
or
adc
je,pn
decl
push
pop
loopne
pusha
and
icebp
jg
mov
mull
inc
orb
sub
mov
mov
sub
lahf
sub
and
dec
cmp
or
mov
push
pusha
jge
push
adc
call
lcall
mov
aam
add
push
adc
xor
jp
inc
sbb
mov
scas
ja
mov
inc
or
add
inc
or
or
or
in
clc
loop
out
pop
mov
push
sbb
scas
rorb
daa
or
push
or
push
pusha
add
out
jp
jecxz
mov
cmpl
pusha
jecxz
sbb
cli
add
pop
xor
add
xor
jne
pusha
add
dec
add
lcall
add
ret
add
sbb
loopne
mov
xchg
pop
mov
psubsb
sbb
xor
lcall
xchg
orb
pop
mov
outsb
jae
sub
add
addps
mov
sbb
sub
or
add
ljmp
out
clc
sarl
and
pusha
inc
or
adc
xchg
adc
ret
mov
idivb
xorl
add
jne
pop
icebp
cs
xor
mov
repnz
or
ret
dec
sub
enter
mov
adc
mov
es
pop
adc
loopne
sub
push
sbb
or
shlb
loopne
pop
sub
fcomip
mov
test
pop
dec
pusha
lods
loopne
in
mov
int3
mov
gs
imul
enter
adc
sub
xchg
add
pop
inc
lret
inc
push
jo
cmpsl
sbbl
inc
jnp
mov
outsb
inc
repnz
xchg
and
loopne
pop
lea
push
inc
sub
clc
xchg
loopne
stos
gs
out
in
pop
idiv
cmpsb
adc
push
pusha
mov
add
and
add
rorb
int3
ret
test
push
xor
mov
enter
and
adc
stos
loopne
lea
inc
mov
es
inc
lcall
pushf
enter
test
enter
mov
leave
inc
sub
xorb
pop
xchg
add
pop
pop
shlb
push
or
addl
mov
push
jne
les
cli
xor
dec
shlb
int
sbb
mov
mov
fistps
dec
or
jmp
sbb
xchg
mov
xchg
mov
lcall
adc
and
sbb
je
mov
push
push
cli
call
push
push
data16
pusha
stos
test
mov
popa
pop
push
and
ljmp
xor
pop
filds
dec
cmp
nop
jo
lea
sbb
adc
jb
loopne
testb
and
jb
bound
cs
xor
adc
jo
cmpsb
xor
cmp
out
into
jle
xchg
jo
adc
inc
add
mov
push
and
mov
ret
adcb
out
push
movsl
das
mov
add
test
lock
sbb
push
call
and
inc
add
inc
and
or
call
rcll
adc
ret
xor
std
lcall
dec
sbb
cmp
or
jne
mov
sub
mov
xor
add
or
mov
and
fcomi
mov
mov
or
dec
inc
mov
cmpb
std
mov
xchg
jl
call
mov
or
dec
mov
and
adc
adcb
pop
fildll
sbb
scas
or
cmp
ret
mov
push
lea
sti
mov
mov
adc
call
scas
cmp
jge
mov
ss
sbbl
cld
push
subb
and
stos
xor
lea
mov
inc
decb
mov
lods
lock
jg
hlt
inc
aas
jne
test
cltd
push
test
jno
hlt
lea
jl
and
jo
pop
pop
mov
or
jb
jo
jbe
and
push
push
sarb
rcrb
jbe
incb
add
inc
incl
daa
in
iret
xor
icebp
inc
add
call
mov
lods
sar
addl
adc
xor
push
rdmsr
pop
xor
incl
out
add
push
idivb
inc
cmp
out
lea
or
push
add
or
add
sbb
push
sti
pop
stos
mov
js
jae
and
test
dec
cmp
mov
mov
sub
aas
and
jb
imul
fiadds
xor
jno
adc
jno
rorl
scas
push
inc
ja
jp
push
xchg
arpl
push
pop
or
add
dec
push
call
ret
decb
or
xchg
pushf
xor
cmp
int3
mov
push
push
sbb
mov
adc
mov
sub
jo
push
lock
add
lcall
movsb
adc
mov
sub
loope
inc
and
shrb
push
mov
mov
pop
xor
adc
add
sub
verr
inc
scas
int3
sbb
mov
dec
cmp
decl
lea
mov
mov
dec
sbb
xchg
ja
jb
mov
jl
sbb
mov
jne
add
pushf
inc
test
jmp
test
test
xor
mov
sub
mov
mov
xchg
add
xchg
mov
mov
out
and
jp
mov
xchg
push
into
sbb
xor
mov
inc
or
sbb
push
pushf
test
in
mov
push
adcb
cli
lock
jno
dec
adc
mov
or
or
cmpsb
imul
and
push
inc
pop
add
jno
mov
push
or
hlt
push
inc
js
or
cmp
sbb
add
xor
or
leave
sub
std
insl
jb
mov
sub
sbb
push
xor
pop
or
incl
insb
repnz
aaa
call
xor
aaa
jne
fdiv
sbb
xchg
and
call
push
cld
push
lds
testb
mov
divl
pushf
sbb
cli
xchg
or
mov
jl
push
movsb
mov
pop
mov
cmp
mov
mov
lea
adc
sub
mov
int
push
icebp
pop
cwtl
mov
ss
push
pusha
cs
jno
test
cli
cmp
in
mov
hlt
xor
xor
shl
aas
cmp
scas
add
and
add
pop
movsl
clc
jb
push
les
incl
mov
mov
pop
mov
add
mov
jne
cltd
add
jno
std
cmpsl
lea
mov
insb
mov
or
add
inc
jb
push
loopne
adc
nop
add
dec
rclb
add
inc
mov
sbb
mov
cli
push
push
test
test
lret
aas
jl
and
jne
push
pusha
call
xor
loopne
xor
jno
test
out
add
mov
sub
loop
add
and
in
jb
ss
jbe
inc
jl
jb
xor
mov
rclb
or
add
sbb
fcomi
or
xchg
or
sbb
popf
cli
das
push
jno
test
lea
xor
mov
lahf
or
and
pop
decl
xor
in
dec
mov
hlt
adc
add
clc
mov
bound
movsl
mov
lret
lock
mov
push
test
sub
jae
sbb
sbb
xchg
insb
in
mov
in
push
call
shlb
and
jg
push
hlt
push
cmpsb
aam
dec
jl
imul
xor
lds
jno
adc
or
loopne
xor
or
ja
xor
cwtl
jo
sbb
jbe
cltd
add
push
loopne
xor
adcb
add
lcall
shlb
lea
jb
or
pop
aaa
jge
cmc
pop
inc
mov
jle
mov
dec
call
pop
sti
jmp
mov
inc
mov
ret
mov
sub
outsb
adc
push
adcl
adc
pop
push
mov
ret
dec
pusha
xchg
xor
xchg
mov
roll
push
shl
add
adc
cmp
adc
sub
and
push
mov
push
adc
adc
icebp
dec
std
mov
add
dec
mov
add
add
cmpsb
xor
jg
push
add
or
xchg
mov
pushf
push
clc
in
jp,pn
and
jle
aaa
lock
adc
sbb
mov
and
fwait
add
sbb
pop
pop
imul
mov
lret
enter
dec
sbb
pop
add
mov
orl
add
cmp
pop
out
add
pop
es
pop
and
into
lea
dec
inc
clc
xchg
clc
pusha
add
fsub
or
sbb
add
fisubs
adc
sub
repz
sbb
or
shll
and
xchg
jl
cwtl
imul
inc
xchg
sbb
or
outsb
dec
push
sbb
mov
test
push
push
push
fwait
inc
mov
xor
or
jecxz
add
lock
movsb
std
mov
and
xor
test
sti
das
out
push
test
call
push
aas
jge
mov
gs
mov
mov
cmpb
mov
or
and
inc
outsb
add
call
adc
mov
stos
adc
mov
push
xchg
or
es
pop
daa
push
push
dec
push
ret
push
and
inc
loop
jb
cmp
stos
sub
outsl
dec
nop
jge
push
xchg
sarb
loop
pop
aam
lcall
add
inc
jno
inc
bound
movsb
loopne
adc
xchg
push
jb
and
shl
add
popa
lods
in
mov
ds
aas
dec
loopne
add
shrb
mov
xchg
cs
lea
pop
sbb
add
cmp
and
outsb
mov
add
decl
outsl
mov
push
inc
xor
into
rcrb
or
or
mov
shlb
mov
push
ds
pop
jb
add
cli
push
cli
nop
nop
rclb
jns
fwait
push
rcrb
or
ficomps
mov
inc
repz
push
cwtl
clc
movl
cwtl
rcrl
jnp
cmp
pushf
je
or
dec
sbb
mov
fcmovnb
das
sub
or
inc
adc
add
call
jmp
push
mov
sbb
mov
cld
rolb
fucomi
jle
or
movsb
iret
insb
out
add
not
lods
cs
push
repz
pop
lret
and
outsl
jg
add
sbb
shrl
lcall
lds
movsl
aas
add
cmp
ret
decb
lcall
and
mov
fwait
in
das
ret
xchg
adc
sub
lret
and
shrb
call
add
xor
xor
add
mov
xchg
and
enter
xchg
and
cld
cmp
push
ja
cli
test
je
xchg
add
mov
inc
cld
cmp
je
mov
out
mov
insb
stos
sbb
cmc
cmpl
shlb
sbb
dec
add
mov
mov
insl
cli
xor
rclb
mov
loopne
sbb
loope
xorl
sbb
fwait
orl
imul
push
jle
pop
pusha
inc
xor
mov
cld
cmp
call
aaa
xor
js
call
add
aad
jg
call
and
cmp
loope
add
jno
icebp
xor
or
loopne
clc
das
cmpsb
jbe
nop
cmp
or
dec
push
test
ds
push
xor
pop
pop
out
or
dec
mov
and
cmp
push
sarb
adc
push
jecxz
fsubrl
xchg
cs
jecxz
in
in
loop
and
ljmp
mov
add
jg
clc
and
push
imul
push
aad
and
push
jp
daa
outsb
jp
xchg
add
xchg
addb
enter
dec
sbb
call
add
sub
je
cmp
test
dec
push
or
mov
sbb
adc
je
hlt
mov
test
bound
or
dec
mov
xchg
add
dec
mov
and
or
std
and
or
adc
pop
push
or
pop
sub
shlb
fdivs
cs
shlb
ljmp
inc
mov
push
jnp
jne
mov
inc
cwtl
inc
leave
sub
pop
iret
lret
adc
adc
das
add
push
add
insb
cmp
cmpb
cmpsb
decb
loopne
dec
mov
rcrb
push
mov
add
loopne
sub
mov
pushf
jp
add
push
add
pushf
loop
in
decl
push
cwtl
mov
pop
enter
mov
push
mov
mov
mov
push
movb
fwait
test
test
adc
test
loopne
call
or
and
or
jp
stos
loope
fdivr
xchg
orb
test
push
push
or
popa
xor
sbb
push
lods
inc
inc
pop
and
jg
jo
cld
loopne
mov
pop
in
lods
jmp
push
sahf
jge
out
inc
in
inc
popa
sub
inc
addr16
xor
cs
dec
fisubs
and
jp
jns
loopne
pop
call
sbb
and
pusha
lock
cld
call
jnp
mov
mov
push
ja
loopne
shr
fwait
out
fstpt
test
mov
les
add
rcll
push
lea
dec
sbb
data16
rclb
xor
in
test
shlb
jmp
incb
stos
mov
mov
jbe
mov
jge
ljmp
inc
dec
jle
push
xor
dec
pop
call
xor
inc
mov
xor
mov
mov
push
cli
mov
or
out
pusha
mov
add
add
and
stc
sbbb
xor
or
add
enter
mov
xchg
dec
clc
add
pusha
sub
adc
int
cmp
es
fldenv
cli
cmp
mov
std
jb
add
in
hlt
mov
dec
cld
jg
rolb
fsubrl
lock
push
call
inc
xchg
or
pop
sbb
jno
stos
pop
mov
add
adc
sub
insb
add
incb
and
cmp
inc
sub
and
xchg
out
pop
jo
test
insl
push
jle
or
mov
jle
xor
popf
mov
call
dec
scas
push
sbb
ret
or
mov
or
ror
add
lret
jmp
int
and
cmpb
or
pop
negl
test
xchg
ret
int3
rolb
outsb
lret
or
xor
sti
mov
push
inc
pop
das
jl
movb
mov
scas
pop
pop
leave
mov
jecxz
xorl
js
push
mov
cwtl
pop
push
imul
add
lock
fadds
fsub
lock
mov
movsl
xor
or
push
leave
hlt
jg
or
decl
test
andb
xor
inc
cmpsl
icebp
mov
mov
bound
xor
xchg
mov
test
imul
pusha
jl
xor
icebp
pop
pushl
add
test
ja
inc
icebp
pop
jbe
pop
inc
push
or
jbe
clc
ja
vmread
jae
jo
repnz
out
inc
fcmovnu
push
aam
xor
iret
jo
adc
jo
loopne
out
pop
add
mov
xchg
ss
rorb
lock
hlt
rol
das
arpl
jge
jl
mov
xchg
test
cld
shlb
add
mov
cmp
or
faddl
inc
sub
shlb
push
loopne
pop
add
sub
mov
mov
mov
les
mov
loopne
ficompl
insl
mov
add
rolb
fmuls
fildl
adc
xor
aaa
or
cmp
push
adc
jne
push
in
pusha
push
add
sbb
mov
adc
or
cltd
cmp
inc
test
incb
inc
sbb
faddl
lret
jge
add
push
je
adc
push
cmp
pop
and
mov
fsubp
and
lret
mov
mov
ret
or
hlt
mov
pop
add
inc
push
sti
adc
mov
pop
mov
cmp
test
mov
lods
fildll
adc
sub
lock
dec
imul
mov
add
mov
incl
xor
jp
jo
notb
stc
loope
mov
dec
inc
inc
stos
adc
add
loope
outsl
xchg
push
loop
decl
jb
xchg
pop
mov
pushf
add
xor
jg
imul
xchg
test
jo
or
add
inc
pop
cli
mov
mov
xor
mov
or
push
jo
dec
add
sub
mov
in
inc
shl
pop
jp
sbb
mov
lock
jl
and
mov
lcall
lods
icebp
or
jl
mov
pop
jl
call
test
sbb
adc
inc
es
sub
mov
xchg
push
pop
loop
cmp
enter
xor
decb
sub
sbb
inc
xor
je
pop
cli
push
nop
pusha
push
xor
fbld
push
pop
sub
mov
mov
andb
xor
xchg
call
mov
sub
xchg
xor
test
xchg
aaa
xor
aam
mov
and
sbb
add
pop
sub
cmp
jg
xorl
adc
inc
and
sbb
add
adc
and
shrb
mov
xor
mov
divl
mov
mov
and
das
mov
stc
fcomip
push
adc
cmp
and
inc
add
outsb
bound
lods
js
ret
pop
les
daa
fs
pop
call
or
sbb
jg
ret
push
lods
xor
sti
xor
adc
xchg
cmp
imul
lock
sbb
loop
mov
shrb
cmp
pushf
cmp
push
addb
cmpsl
ds
je
or
sbb
cmp
in
div
pop
add
cmc
mov
inc
push
lock
or
xchg
mov
ljmp
mov
mov
lods
xor
jg
aaa
pop
test
adc
mov
sar
icebp
mov
pop
mov
xlat
cmp
out
pop
adc
das
dec
imul
jo
pop
and
repz
lock
rcrb
adc
adc
je
icebp
mov
push
mov
push
xor
test
es
inc
push
loopne
push
bound
add
icebp
mov
inc
shl
lock
test
mov
or
sbb
and
data16
divb
mov
imul
lods
adc
outsl
xchg
xor
pop
mov
push
push
add
mov
mov
or
lea
jae
sar
fildll
pop
cli
inc
cmp
mov
clc
mov
mov
daa
mov
inc
aad
clc
call
push
cmc
add
aaa
adcl
or
or
push
sbb
push
js
push
add
pop
push
and
rclb
addr16
lock
aaa
or
cli
push
lock
stos
add
lret
test
and
mov
xor
sub
in
dec
inc
repnz
jg
push
pop
enter
or
inc
mov
scas
clc
icebp
pop
aam
mov
inc
add
xor
pop
adc
dec
ret
cmpb
or
add
adc
or
cmp
dec
and
lock
inc
push
jmp
push
add
ljmp
add
lock
mov
add
xor
js
xchg
ret
xchg
stos
icebp
pop
inc
push
jnp
lock
ftst
lock
mov
push
and
ljmp
cmp
cltd
xor
xor
xchg
out
mov
loope
push
mov
push
mov
push
roll
pop
jbe
dec
push
adc
inc
sub
enter
outsb
push
adc
rol
add
lods
add
out
loop
xchg
xchg
and
add
loop
fwait
test
icebp
jb
subl
loopne
ljmp
lods
push
and
pusha
inc
add
sbb
rol
pop
xor
add
inc
xchg
addl
or
add
inc
lcall
cmp
int
xchg
inc
pop
add
sub
and
mov
dec
add
mov
push
test
cmc
pop
add
outsl
pop
loopne
rorb
insb
dec
fnstsw
in
jbe
es
push
mov
call
add
add
jmp
cmpb
sub
outsl
or
mov
sbb
mov
fs
inc
xchg
lds
mov
cmp
jne
fisttpl
and
inc
or
or
inc
inc
loopne
int
outsl
or
insl
mov
mov
mov
in
jg
in
inc
or
or
mov
mov
mov
mov
inc
in
or
mov
mov
cmpsb
mov
outsl
mov
sub
in
lods
mov
imul
rcrl
outsl
ss
scas
add
mov
jo
push
mov
aas
mov
or
or
cmp
pop
cmp
les
mov
mov
or
push
mov
int3
mov
mov
ds
pop
rolb
xor
mov
repz
sub
mov
or
and
push
or
fsub
orb
fidivrs
loopne
aaa
outsl
ss
outsl
sbb
std
mov
out
aas
outsl
ss
mov
pop
xchg
adc
mov
fwait
out
mov
inc
popl
or
fwait
imul
mov
call
push
cld
mov
fiaddl
clc
mov
std
ret
aam
imul
mov
push
and
dec
or
imul
rcl
or
lock
je
dec
sbb
ret
jge
push
mov
sahf
inc
push
xchg
shlb
inc
or
lret
imul
mov
mov
or
dec
and
push
dec
and
rol
das
cmpsb
andb
mov
mov
sub
sub
inc
ret
or
sarl
xor
sbb
andb
mov
inc
inc
lock
sarl
js
cwtl
fadd
loop
dec
dec
xor
mov
mov
inc
shlb
mov
add
call
sbb
mov
dec
inc
inc
inc
mov
pop
popa
or
decl
fldl2t
bound
dec
sub
bound
push
inc
mov
lods
mov
push
or
or
push
push
cmpsb
push
pop
inc
cmp
mov
loop
movsl
mov
or
inc
dec
pusha
or
pushl
inc
push
hlt
or
fs
adc
jnp
out
cmp
aaa
or
mov
stos
mov
add
mov
mov
sbb
clc
adc
jecxz
je
sub
movl
fcmovb
enter
clc
pop
repnz
loopne
jbe
mov
mov
addl
jnp
dec
jb
mov
push
add
pop
pop
gs
pop
hlt
filds
stos
stos
or
adc
jle
sub
pop
scas
fdiv
popaw
sbb
fldt
mov
push
inc
jnp
rol
xorb
sbb
cltd
sahf
mov
add
jo
loope
in
leave
pop
lret
mov
sbb
ja
inc
add
push
dec
push
nop
adc
sti
push
test
test
imul
jle
pop
lret
xor
sub
xor
cmp
lahf
inc
add
mov
outsl
dec
cwtl
cmp
and
scas
ss
out
mov
adc
call
je
push
fdiv
xor
inc
sub
fistps
lea
pusha
shr
addb
imulb
adc
xchg
sbb
xchg
pop
aam
and
push
xor
test
mov
negb
mov
jp
mov
loopne
pusha
ret
adc
les
mov
push
jecxz
mov
cmpsb
mov
addb
mov
jb
add
push
outsl
push
inc
clc
incb
inc
test
mov
and
cmp
rcrl
and
push
push
add
outsb
roll
repnz
test
jp
sbb
mov
adc
out
push
jne
mov
gs
testb
push
outsb
push
pop
cs
in
sbb
mov
sahf
mov
imul
mov
mov
xchg
pop
test
lea
call
cli
popf
xchg
in
fsubrl
aam
xor
inc
dec
or
jecxz
hlt
lcall
in
jo
je
xor
cmp
fisubs
loopne
cmp
insb
cmp
shlb
xor
sub
out
jo
je
insb
stc
sbb
jle
aam
adc
push
jb
call
sub
mov
int3
and
arpl
xchg
add
fidivl
push
aam
adc
or
jmp
sahf
scas
cmpl
pop
add
sbb
aaa
push
cli
xor
pusha
loop
sub
lock
cld
mov
icebp
or
sti
loopne
fs
inc
lods
xor
std
jg
test
add
je
call
mov
mov
hlt
lods
jo
inc
fwait
add
stos
mov
or
add
mov
cmp
mov
xchg
mov
scas
jo
inc
dec
xchg
test
jl
mov
nop
sbb
sub
or
das
inc
sbbl
call
popl
inc
and
adc
or
xchg
hlt
pop
or
and
lea
bound
scas
xor
or
jbe
cmc
ja
cli
mov
add
aaa
je
and
jne
lods
test
push
push
ret
ljmp
or
in
sbb
mov
mov
loope
lods
lea
enter
add
sbb
xchg
cld
jne
push
mov
lret
hlt
add
add
xchg
lret
or
jo
call
mov
icebp
rcrb
push
je
and
sub
cmp
inc
dec
call
adcl
inc
adc
sahf
out
mov
jne
lahf
fcmovnbe
outsl
sbb
mov
adc
pop
cmp
dec
nop
sub
push
mov
mov
or
inc
or
sbb
sbb
jbe
pusha
cmp
jmp
pop
sbb
or
std
add
data16
mov
addb
adc
mov
insb
cmp
mov
repz
or
sbb
repz
mov
xchg
mov
add
xchg
adc
std
jle
or
pusha
cmp
cmp
mov
adc
aaa
ret
inc
add
shrb
das
insb
add
inc
or
add
xchg
sbb
mov
aam
dec
subl
mov
in
sub
dec
aas
xor
add
and
add
jne
lods
inc
add
in
mov
clc
pop
mov
aam
sub
pop
ret
test
adc
aaa
insl
aaa
xor
sub
cmp
ds
pop
cmp
mov
add
xor
xor
push
add
leave
cmp
rolb
add
sbb
mov
push
sbb
test
or
jmp
pop
lods
mov
ror
jo
test
test
scas
jg
pop
fs
mov
mov
adc
cmp
push
pusha
test
and
pop
lods
lret
cmpb
push
sti
divb
mov
leave
mov
rolb
es
push
xchg
xchg
ss
or
jmp
sub
mov
repz
cld
mulb
push
test
decb
push
iret
inc
or
cld
jl
icebp
pop
jg
add
mov
nop
ds
push
adc
cmp
lcall
mov
push
mov
sbb
fst
push
jle
inc
clc
das
lock
repz
dec
mov
add
and
xor
ret
sub
pop
sahf
push
xchg
dec
nop
pop
or
and
lods
and
push
inc
ja
or
std
mov
mov
test
jg
subb
adc
adc
cli
jmp
cmp
and
add
xor
imul
mov
loop
inc
cmp
lock
scas
add
mov
inc
or
outsl
jg
pop
and
imul
sbb
pop
adc
lock
jo
lock
sub
push
adc
jb
jb
pop
pop
add
pop
xor
push
sbb
or
or
insb
insb
jb
enter
pusha
cmp
xchg
dec
sbb
mov
dec
inc
mov
and
inc
mov
add
jl,pn
lock
push
adc
push
cmc
xchg
mulb
js
add
push
xchg
and
xchg
adc
sbb
pop
xchg
and
mov
adc
add
add
lock
adc
sub
sbbl
jg
mov
or
add
mov
aam
xorl
mov
mov
je
loop
mov
and
in
pop
shrb
clc
or
sub
repz
mov
mov
les
adc
cltd
dec
dec
mov
rolb
jo
add
push
mov
jno
dec
jg
add
sbbl
clc
push
xor
adc
adc
push
loopne
xor
mov
decb
sbb
sahf
or
inc
mov
cmc
push
scas
push
push
push
lds
mov
pusha
adcl
test
jmp
jno
push
je
icebp
adc
adc
xchg
pusha
push
cmc
mov
in
jb
mov
das
mov
or
addr16
sbb
add
sbb
enter
movsb
popa
clc
push
test
sub
add
adc
pop
cs
mov
pop
cli
cmp
mov
jo
and
jnp
add
fmulp
pop
mov
cmp
pop
and
add
add
push
add
or
jbe
out
xchg
mov
cmc
std
test
mov
sbb
xchg
cwtl
or
pop
adcl
xor
or
jg,pt
pop
inc
icebp
pop
lods
pop
adc
loope
adc
shlb
or
leave
ret
jecxz
xlat
sbb
lcall
push
xor
ss
add
adc
mov
push
add
test
adc
and
sub
push
xor
mov
jge
sub
test
movsb
push
outsl
decl
fs
push
jo
adc
mov
jo
aad
adc
add
push
xor
adc
dec
hlt
sub
addb
mov
mov
mov
or
add
mov
or
and
jo
sahf
jl
mov
dec
or
scas
lock
stos
hlt
jmp
out
push
add
cli
push
add
es
fcoms
mov
jle
sbb
mov
jmp
sub
popa
jbe
sub
call
xor
fsubrs
xor
pop
enter
add
push
add
pushf
adc
dec
add
jmp
nop
test
mov
inc
xor
inc
xor
push
xchg
jo
add
aaa
decl
and
push
test
lock
xorb
lock
xor
mov
rcr
add
and
addb
xor
adc
fwait
add
cwtl
jbe
mov
cmp
xlat
and
mov
or
stc
pop
push
push
inc
das
insb
adc
pushl
fcomip
xorl
push
test
mov
or
sub
inc
or
xor
jo
push
je
int
and
bound
mov
test
xchg
bound
and
call
adc
add
cmp
pop
add
adc
add
add
jecxz
add
adc
cli
loopne
repz
inc
xchg
movsl
lea
arpl
xor
outsl
add
inc
and
adc
mov
or
lret
inc
inc
adcl
cld
notb
je
cli
push
mov
js
dec
ss
push
push
or
insb
add
pop
lods
cs
push
add
add
push
or
inc
jmp
mov
jo
lret
sub
gs
mov
pushf
cs
xor
or
xchg
add
es
push
jle
outsb
inc
cli
xchg
add
mov
cld
aaa
or
ja
add
mov
xchg
adc
pusha
xchg
add
and
xchg
cmp
fdivr
sub
call
xorb
sbb
mov
out
hlt
cli
incl
sbb
cld
addb
push
xchg
xor
pop
mov
push
pop
imul
cld
pop
insb
dec
mov
mov
sar
xchg
int
jle
imul
push
dec
or
orb
inc
and
pop
mov
adc
cmpsl
fldt
mov
push
push
mov
add
inc
das
inc
js
outsl
jg
push
inc
pop
sub
pusha
and
or
xorb
addb
popl
pusha
dec
sub
or
add
push
popa
add
xor
mov
add
inc
or
cmpsb
incb
lock
ret
cli
pop
stos
or
or
shlb
je
inc
add
xchg
and
ror
clc
adc
scas
xor
adc
push
imul
xor
cwtl
inc
add
mov
pop
ds
push
lcall
shlb
movl
or
mov
shlb
ret
push
aam
inc
movsb
jl
mov
push
push
mov
out
push
sbbl
ds
stos
mov
xor
scas
add
sete
add
sti
fisubs
push
mov
adc
out
xchg
je
inc
lock
sub
testb
add
shlb
pop
lcall
nop
jne
mov
pop
lds
rcrb
sbb
sub
rcrl
fcmovnb
adc
adc
mov
push
dec
sbb
add
add
xor
pop
xor
subl
add
lock
lods
js
pop
cmp
or
add
shl
xchg
mov
dec
insb
cltd
rol
ficompl
loop
and
mov
jge
push
rorb
or
orb
pusha
inc
test
jmp
rcl
add
add
jbe
dec
rorb
dec
sbb
jo
dec
scas
push
add
icebp
jl
add
jl
pusha
push
lock
push
adcb
testl
shrl
rcrb
orb
incb
pop
add
mov
and
gs
rcr
imul
je
shrb
or
xor
insb
push
inc
lock
scas
ljmp
adc
sub
jle
adc
sub
mov
or
push
adc
and
jns
inc
xchg
add
hlt
ljmp
hlt
jl
addb
mov
add
loopne
int3
or
out
cwtl
rclb
xor
lcall
or
mov
scas
pop
lea
out
insb
and
jle
nop
adc
pusha
or
cmp
test
gs
dec
pop
push
cmp
movsl
lock
shrl
test
out
mov
jl
dec
xchg
mov
insb
push
hlt
xor
fs
push
push
loopne
loope
fwait
adc
fcoml
mov
test
cmp
mov
push
and
ret
jb
push
xor
cmp
loopne
jb
scas
mov
adc
inc
js
lea
rol
incl
loop
add
bound
int
mov
lea
jl
je
test
repz
adc
lods
nop
push
aas
mov
adc
inc
mov
cmp
xor
add
call
rolb
aad
inc
enter
jo
aam
lods
cld
push
mov
sub
lea
test
or
adc
pop
or
sbb
mov
pusha
cli
add
cld
adc
out
sub
inc
shlb
mov
xchg
shll
loopne
loopne
xor
dec
daa
out
pop
aaa
mov
out
sbb
insb
add
add
fbstp
mov
mov
adc
pusha
lea
cmp
scas
clc
or
inc
dec
jb
jmp
sub
adc
mov
loopne
adc
call
pop
sub
and
adc
enter
repz
ljmp
repnz
jg
xchg
loopne
pop
ret
add
add
pusha
cmp
mov
mov
sbb
xor
adc
pop
jecxz
pop
subl
pop
pushf
dec
loop
ds
add
pop
in
loopne
push
iret
cmpsb
inc
cmp
mov
adc
imul
sub
inc
mov
shr
pop
popa
lea
decl
stc
push
loopne
pusha
dec
cmc
push
lds
cltd
xchg
adc
jmp
or
into
loope
push
xorl
faddl
mov
add
pop
lods
push
popa
push
sub
add
pusha
sub
adc
jo
scas
add
mov
fnstsw
sbb
sbb
sbb
ficomps
ss
and
and
inc
pop
add
and
lret
je
inc
jno
femms
adc
cmp
and
les
pop
and
dec
inc
ljmp
push
cli
push
leave
nop
ret
test
push
call
push
sahf
loope
pusha
loopne
adc
pop
xor
or
xchg
xor
mov
xchg
mov
movsb
movsl
mov
and
stos
push
pop
cmp
out
enter
in
xor
cmp
sbb
arpl
arpl
inc
loopne
or
pusha
add
test
hlt
and
sub
sahf
es
cmc
mull
test
add
test
adc
add
scas
sbb
ds
adc
jp
scas
xchg
hlt
sub
adc
sbb
adc
push
sbb
pusha
and
int3
in
mov
jmp
test
and
sub
add
jne
jmp
fdivrs
or
pop
testb
xor
sub
fisttps
adc
ret
mov
or
test
dec
cmp
add
fiaddl
leave
mul
mov
neg
sub
lock
push
mov
push
shlb
pop
sub
clc
lds
cs
jg
push
rcrl
sub
xchg
hlt
pop
sbb
lea
adc
push
push
push
add
xchg
nop
adc
insb
aam
jecxz
or
nop
dec
mov
inc
in
jo
dec
inc
cmp
psllw
add
push
and
adc
push
jo
pop
inc
sub
out
std
lock
aaa
mov
mov
add
aaa
fs
jbe
sub
rol
jmp
pop
leave
jno
push
xor
lret
bound
mov
mov
test
and
outsl
xor
mov
mov
fmull
add
mov
jl
popf
and
int
ss
stos
inc
fstps
or
pop
sbb
in
pop
add
and
test
sahf
xorb
or
cli
call
pmuludq
mull
add
leave
lods
add
and
push
call
adc
cmp
xor
call
fldcw
sub
out
clc
jmp
ret
push
clc
movsl
mov
outsb
sub
inc
nop
xor
jmp
test
pushf
jge
hlt
xor
shrb
les
mov
sub
lock
ss
fdivrs
ss
mov
test
add
sub
mov
sbbl
push
add
push
xor
movb
stos
insb
and
fisubrs
clc
and
jne
push
and
js
lds
enter
add
pop
mov
adc
sbb
lock
pop
es
pushf
addl
push
inc
rorl
add
add
ljmp
mov
dec
sbb
mov
nop
popa
mov
hlt
test
insl
je
ljmp
add
call
and
lea
mov
or
add
orb
lock
jne
push
clc
and
sub
push
xchg
mov
arpl
cwtl
inc
jmp
pop
push
mov
mov
jne
jge
jo
ds
and
add
inc
adc
sub
cld
xor
add
sub
popa
pop
pusha
xor
push
enter
jge,pt
loopne
std
jo
jne
sbb
popa
fdivrl
dec
xor
lahf
or
negl
lcall
lret
outsl
ds
add
scas
dec
cmp
testb
push
insb
call
cwtl
dec
push
les
aas
inc
insl
push
sbb
or
pop
insb
jle
push
push
decl
ljmp
push
xorl
adc
cmp
push
test
adc
ret
adc
jg
es
pop
or
ss
inc
roll
fs
lock
push
add
push
and
jo
mov
fimull
sbbb
inc
pop
ror
rol
adc
mov
push
mov
add
pop
shlb
and
fnstsw
cmpsb
mov
popf
icebp
jl
lock
loope
add
movl
push
xchg
mov
call
add
xor
dec
cwtl
std
xchg
push
test
add
xor
std
jg
sahf
je
out
andb
pop
aaa
call
test
inc
ficoml
subl
test
xchg
or
xchg
mov
enter
mov
fstl
sar
add
xor
mov
call
dec
xchg
out
shlb
xor
pusha
adc
sar
mov
jo
clc
cmp
fisttps
adc
dec
jbe
fdivs
add
rorb
mov
mov
data16
mov
or
mov
movsl
rolb
mov
cli
add
pop
add
mov
movsb
and
movl
mov
repnz
xchg
lock
mov
call
mov
cld
int3
int
adc
pop
xor
les
jmp
jo
xor
add
add
xor
mov
jbe
inc
jp
mov
adcb
mov
shll
in
push
mov
and
ja
fidivs
dec
mov
inc
sub
or
pop
mov
add
je
and
push
pop
movsl
cmpb
jbe
xor
aas
bound
push
rclb
inc
fbld
jb
fdiv
ja
lea
add
inc
mov
push
push
mov
aaa
rol
jle
fisubrs
mov
faddl
addb
pusha
xlat
aaa
add
pop
mov
sbb
sub
mov
sbb
mov
mov
sbb
aad
lock
sub
scas
dec
pop
pusha
out
movsb
mov
and
mov
or
xor
pop
fs
mov
jne
xor
sbb
addr16
mov
push
call
sbb
out
xor
pop
enter
adc
jbe
adcb
inc
frstor
push
add
outsl
dec
push
mov
adc
call
cmp
pop
xor
ret
push
dec
loope
push
hlt
dec
lock
incb
add
hlt
xor
jbe
mov
and
adc
sub
div
mov
lock
adc
push
push
push
mov
shll
shr
sahf
mov
je
sbb
call
xchg
add
push
lods
push
sbb
add
adc
mov
pop
mov
mov
jge
inc
sbb
mov
outsl
sub
jno
inc
jns
mov
jmp
shll
les
sbb
pop
add
orb
jo
mov
xchg
addb
mov
sbb
mov
ss
pop
fcompl
std
aaa
cmp
repnz
jge
xorb
std
pushl
add
ja
mov
adc
pop
and
dec
mov
jmp
xor
adc
mov
push
or
xchg
push
lock
testl
repz
incl
daa
cld
xor
add
push
mov
je
dec
push
pop
xchg
or
jo
push
aam
add
rclb
adc
fidivs
mov
fs
aad
pop
not
lret
sub
jae
sbbb
mov
lock
bound
xchg
inc
js
cmp
jecxz
loopne
jae
fiadds
sbb
lock
add
inc
jb
push
fisttpl
xchg
lea
push
ret
push
fmulp
loopne
or
inc
cli
jmp
jne
sarl
add
jl
add
or
add
fcos
je
xchg
test
xchg
pusha
lret
fsubrl
icebp
add
dec
inc
xor
scas
imul
pop
rorb
adc
lahf
inc
sbb
push
push
and
sbb
je
xchg
pushf
inc
jmp
mov
leave
push
dec
xchg
xor
inc
sbb
nop
and
or
les
or
or
pop
xchg
in
cmp
xchg
adcb
pop
lea
mov
jp
or
inc
xor
xchg
mov
add
or
mov
add
orb
repz
or
adc
fs
cli
push
xchg
sbb
dec
inc
and
shrl
ss
or
daa
mov
and
enter
add
push
push
mov
or
repz
add
push
dec
add
aaa
mov
lret
mov
pushl
xlat
and
sbb
jno
mov
sbb
lret
bound
and
dec
inc
mov
ljmp
addl
shll
cmp
push
pusha
addl
mov
inc
cmp
xor
leave
orb
out
dec
arpl
dec
jb
daa
or
lock
cmpb
push
push
call
or
add
push
ljmp
and
pop
mov
dec
or
int3
xor
enter
adc
je
push
into
je
test
iret
pusha
cmp
sub
push
inc
cmp
rcl
adc
xchg
mov
add
int3
or
xor
jge
adc
iret
xor
pop
pop
aaa
loop
data16
jb
cmp
test
movsb
jbe
push
test
sbb
test
pusha
adc
dec
test
jb
pop
mov
stos
lea
sub
inc
and
add
sub
dec
cmpb
int3
cmpl
mov
mov
divl
fiaddl
popa
pop
je
frstor
hlt
sarb
adc
adc
dec
xchg
into
int
add
cmpl
dec
test
outsb
sbb
adc
push
test
andl
lret
push
aaa
dec
popa
jecxz
roll
in
push
das
inc
add
pop
repz
pop
adc
add
loopne
sbb
pop
mov
adcb
mov
imul
hlt
in
or
inc
movl
roll
dec
push
ret
dec
mov
aaa
cmc
dec
rclb
movsb
push
push
aad
cmp
sbb
outsl
adc
lret
pop
adc
adc
es
in
push
push
and
cmp
rorb
sub
mov
ja
mov
cmp
sbb
or
test
mov
mov
data16
pushf
ror
add
js
decl
add
and
jo
sub
pushf
pop
mov
scas
movb
mov
cwtl
clc
popf
xor
lcall
loopne
mov
enter
loopne
insb
inc
add
mov
pushf
or
sub
dec
add
movl
lock
and
mov
jp
cld
push
sahf
out
mov
nop
push
les
movsl
adc
loop
or
jp
dec
push
mov
add
cmp
shl
js
addb
fadd
testb
lock
outsb
bound
pushf
mull
mov
mov
xor
shr
mov
jg
in
or
add
push
rcr
adc
rcr
or
jne
inc
test
adcb
cmc
adc
out
test
pop
add
outsl
push
add
divl
cmp
testb
outsl
pop
add
adc
fcmovnbe
ret
das
ljmp
fdivrs
mov
test
pop
mov
mov
push
mov
hlt
push
push
or
out
cwtl
mov
or
scas
mov
push
fs
call
push
cmpsl
pop
pop
pop
movsb
ret
or
ret
data16
loopne
inc
push
mov
mov
and
ret
fwait
test
push
ror
ja
jg
xor
push
mov
sete
sub
pop
fmulp
add
rcl
add
pushf
lods
inc
mov
jno
push
push
test
add
mov
inc
sbb
mov
mov
or
es
cmc
inc
xlat
cmp
mov
pop
inc
sbb
xchg
cli
push
push
es
inc
frstor
cmp
mov
pop
cmp
test
jnp
cmp
outsl
lcall
out
shr
or
inc
aaa
pop
jo
add
loope
adc
or
push
xor
add
mov
mov
adc
sbb
in
call
jl
clc
pop
mov
adc
or
jne
inc
xor
loope
sub
push
add
mul
je
pushf
dec
scas
fdiv
mov
loope
add
xor
xor
sbb
aaa
push
and
insb
and
jb
add
loopne
test
popl
loope
jo
push
lds
and
lock
call
push
pusha
andl
subb
xchg
lock
mov
inc
loopne
pusha
mov
loop
add
add
data16
aas
fildl
addr16
sti
push
loopne
call
push
mov
ret
nop
xchg
cwtl
loope
mov
popa
or
jb
out
add
inc
sete
cld
loopne
xor
lock
hlt
jo
fsubs
imul
fdivs
mov
clc
adc
and
popa
nop
jecxz
jne
sbb
mov
add
jmp
dec
push
pop
or
xor
mov
cld
push
mov
xchg
inc
fcomps
hlt
push
or
jmp
hlt
leave
and
mov
or
mov
sub
loopne
adc
cld
rorl
adc
jo
add
mov
ds
sub
loope
daa
pusha
cmp
sub
add
mov
adc
incl
add
inc
cld
add
adc
call
or
outsb
repz
xor
mov
push
mov
cmpsb
sbb
pop
imul
pop
xor
pop
mov
mov
out
cltd
pusha
adc
add
add
stos
sub
jbe
mov
cmc
test
push
adc
pop
inc
pop
add
push
imul
push
fs
mov
inc
add
in
imul
add
push
mov
cli
sbb
aaa
lods
insl
adc
mov
adc
and
add
and
add
int3
mov
outsl
or
jo
clc
and
insl
cs
sub
loopne
add
fadds
in
pop
or
cmpsb
lock
in
push
aad
mov
lcall
mov
sub
mov
sub
xor
jl
js
scas
mov
sub
cli
or
mov
xlat
sbb
and
std
or
add
or
data16
add
dec
stos
sub
mov
sbb
adc
imul
dec
out
cld
pop
fistpl
lock
push
lock
aam
or
stos
sbb
add
push
movsb
mov
shll
jo
cmpb
xor
mov
sbb
movsb
pushf
xor
mov
push
test
int
movsl
shrl
out
imul
icebp
add
dec
repnz
dec
dec
inc
test
dec
stos
xor
stc
mov
and
mov
ret
mov
add
cld
push
stos
lock
pop
lea
stos
cmp
loopne
cs
add
push
icebp
add
loop
mov
sbbb
sarb
push
jbe
add
ror
pop
sti
shrl
add
push
fs
xchg
cmpsl
mov
mov
insb
mov
adc
xchg
jo
jp
push
sbb
xchg
pop
dec
aad
jo
daa
mov
push
mov
mov
push
popa
clc
in
or
push
xor
xor
or
mov
loopne
pusha
add
or
lock
mov
mov
push
add
push
or
xor
pop
push
lock
push
mov
mov
mov
lds
lcall
jo
shll
js
push
mov
jb
mov
mov
sub
or
mov
push
xchg
repnz
adc
ljmp
push
jmp
lods
lock
sbb
cld
out
jne
ds
push
lcall
xor
idivb
mov
in
add
jnp
in
loopne
adc
add
add
fidivl
repz
mov
pop
sbb
mov
add
push
ja
mov
enter
jne
sti
aas
es
adcl
adc
push
xor
push
jno
sbb
enter
jno
add
das
cmp
adc
nop
lock
and
xchg
stos
out
sbb
movsb
jo
dec
repz
fs
mov
test
mov
outsb
hlt
add
fcompl
sbb
js
je
cmp
or
sub
adcb
lods
subl
or
lock
mov
cld
rclb
aad
mov
jno
adc
jo
loope
enter
sub
add
outsb
xor
inc
repz
mov
push
or
in
dec
add
loopne
jne
stc
test
loopne
lods
cld
or
stos
in
inc
andb
imul
push
and
pushf
mov
orb
out
sbb
mov
popa
lea
pop
adc
pop
or
stos
dec
or
sarb
stos
inc
push
inc
add
outsb
cmp
xorb
or
lcall
mov
lods
add
dec
mov
stos
xchg
addb
add
mov
stos
jbe
push
sbb
xchg
or
movsb
add
push
bound
insl
outsl
xchg
insb
stos
push
enter
stc
xor
cmc
add
xor
in
jmp
pop
mov
cmp
xor
clc
cmpsb
stc
fisubrl
int
push
add
stos
sbb
xor
jns
adc
test
andb
add
stos
cltd
adc
add
cmpsb
imul
test
jge
jne
add
ret
mov
add
push
sbb
cmp
lcall
rorl
dec
sarl
bound
push
push
dec
sarl
cmp
cmp
xor
sub
and
push
adc
lcall
incb
imul
ljmp
lcall
outsb
cwtl
cmpsl
imul
popf
shlb
cmpsb
sahf
cmpsb
imul
cmpsb
imul
jbe
outsb
push
sahf
cmpsb
imul
cmpsb
imul
imul
imul
cmpsb
imul
jb
not
mov
xor
out
push
ljmp
int
fcmovbe
ror
lret
shll
ret
or
les
sub
mov
mov
sbb
sbb
loopne
mov
mov
xor
mov
mov
imul
or
lcall
sbb
mov
xchg
cmp
aaa
out
dec
repz
outsb
push
lcallw
pop
pop
push
push
or
int
pop
sbb
inc
loopne
or
sbb
lcall
sbb
and
shll
add
or
inc
add
push
decl
mov
imul
rcr
rcr
fiaddl
add
mov
cmp
and
xchg
ret
pusha
mov
or
cmpsl
movsb
call
xor
shll
cmpsb
sbb
mov
imul
or
or
pop
jo
int
pop
add
add
out
or
cmpsl
sbb
push
sbb
dec
nop
pusha
subb
stos
movsl
mov
adc
lret
repz
ret
or
inc
xor
sbb
loopne
mov
add
and
lcall
push
dec
dec
inc
push
xchg
sbb
inc
pusha
sahf
add
dec
aas
andb
sbbl
sbb
mov
push
push
add
stc
cmp
stos
in
push
jmp
cmpsl
imul
jbe
sbb
mov
jp
mov
inc
test
fbld
inc
fadd
inc
and
jge
sbbb
and
xorb
jne
xor
dec
mov
xor
adc
in
push
outsb
lea
add
aas
aam
or
or
mov
pop
movsl
pop
adc
pop
pop
sbb
mov
and
xor
testl
bound
sti
addl
pop
push
repnz
in
mov
test
push
fsubs
shr
xchg
shlb
ljmp
ret
add
push
fcom
lods
pop
loopne
pop
add
ja
jb
ret
ret
stos
dec
mov
sbb
add
jo
in
mov
std
xor
push
data16
icebp
mov
dec
test
sbb
jae
mov
sahf
outsb
call
pusha
ret
call
nop
xor
andl
add
dec
and
jge
adc
call
flds
nop
add
dec
or
xor
mov
ret
pop
das
add
push
pop
and
mov
jl
jl
add
cmp
outsl
int
mov
icebp
push
sbb
fildl
cld
lock
cmp
call
in
xchg
inc
xor
pushl
jb
sbb
xchg
jb
mov
pushl
jmp
xchg
mov
mov
add
pop
mov
fisttpll
mov
cmpsl
add
ret
cmp
push
add
jp
jg
add
push
ljmp
mov
pop
cld
add
lock
lock
mov
xor
call
mov
repnz
or
js
add
push
call
dec
or
or
mov
inc
or
jl
je
inc
xor
stc
adc
incb
stc
sub
xor
xor
push
cmp
out
push
add
cltd
xor
cmp
call
mov
addb
xor
sub
mov
repnz
call
cmc
or
sub
pop
mov
jnp
std
pop
and
sbb
je
pop
je
fidivs
mov
jo
mov
stc
add
and
mov
inc
jo
lock
and
mov
add
mov
push
xchg
cmp
insb
call
xor
mov
jno
cmp
out
xchg
mov
sbb
add
sbb
cltd
movsb
xchg
mov
push
insb
mov
cwtl
inc
pop
mov
mov
out
jo
and
jo
mov
fcomp
pusha
push
call
movsb
popa
pushf
pop
pop
call
inc
adc
insb
pop
outsb
push
cld
das
jo
loop
mov
in
and
and
or
adc
pop
jo
pop
std
pop
push
jbe
add
xchg
jnp
push
pop
xor
pop
sbb
push
sbb
cld
nop
call
cwtl
cld
mov
jge
lret
in
mov
fwait
or
jae
adcb
pop
cmp
xor
outsb
or
xor
cltd
xor
andl
adc
lock
jbe
add
mov
mov
addb
and
lock
sti
cmp
es
loopne
xchg
push
ja
andb
add
and
ss
add
mov
mov
inc
insl
clc
ljmp
test
push
add
jno
mov
adc
pop
fimull
hlt
add
xor
sbbb
sbb
repz
xchg
jno
xor
inc
jne
inc
sti
decl
sub
add
jne
jno
dec
adc
add
cli
jo
ret
ret
mov
hlt
add
call
jne
repnz
repnz
mov
and
push
pop
call
push
xor
xchg
int
sti
jb
js
rcrl
add
call
adc
xor
stos
mov
pop
adc
lods
cmp
mov
aaa
insl
imul
or
or
jno
imul
jo
push
mov
fisttpl
stos
inc
xor
push
mov
lahf
inc
xor
jne
adc
mov
orb
mov
dec
mov
adc
jo
add
ds
xchg
div
ds
mov
inc
push
jo
sbb
fdiv
adc
pop
cli
jno
add
outsl
stos
and
xor
sbb
push
shll
push
xor
je
mov
sub
aad
add
sbbb
or
adc
fdivl
inc
mov
and
jno
add
or
pop
cmpsb
fwait
lock
xor
inc
xor
inc
mov
pop
jl
xor
or
xchg
sub
jb
shll
lods
scas
test
mov
and
push
cs
pop
dec
jl
mov
ljmp
xor
insl
sti
ja
hlt
add
cmp
mov
out
or
xor
push
mov
lcall
jge
enter
xor
stc
push
push
push
clc
jno
stos
or
fldl
mov
push
pop
mov
jo
adc
or
clc
jbe
mov
mov
idivb
out
jno
or
pop
inc
add
xchg
clc
adc
xorl
in
sub
popl
mov
scas
fsubr
clc
adc
fidivrl
push
or
test
mov
mov
sti
js
jbe
cmp
sahf
cmp
dec
shr
xchg
test
cmp
adc
mov
clc
and
add
call
xor
lods
call
add
add
pop
push
add
outsb
loop
mov
jae
xor
sbbb
outsl
pop
add
or
sbb
mul
push
sbb
or
pop
add
movsb
sbb
add
mov
test
jae
sub
in
or
iret
or
outsl
nop
popa
adc
mov
cmp
mov
and
std
imul
xor
call
cld
cmp
adc
subl
pop
addl
int3
inc
scas
mov
pusha
ret
jl
addb
ss
test
or
or
add
add
xchg
out
and
add
insb
shl
inc
and
and
add
xorb
push
add
cld
push
mov
je
mov
lea
sub
push
mov
xorl
cmpsb
cli
pop
andb
add
or
incb
or
je
cmp
je
adc
test
pcmpeqb
jb
int
mov
maskmovq
notl
clc
jg
or
nop
ret
rolb
add
sub
cmpsb
das
inc
nop
je
ret
movsb
push
cmp
movsl
je
ret
cmpsb
adc
ret
xchg
fbld
jbe
ret
stos
adc
ret
stos
je
ret
lods
inc
lods
je
ret
scas
aaa
jg
insl
adc
ret
mov
adc
insl
je
ret
outsb
or
outsl
and
mov
hlt
ret
movups
dec
cmp
nop
incb
add
cmp
jo
pop
sbb
lret
and
mov
xchg
aad
call
or
testb
inc
and
ret
inc
jmp
jno
pop
les
inc
cli
lret
pop
lock
xor
scas
rolb
mov
push
inc
xor
sbb
lahf
inc
add
inc
mov
add
hlt
or
rol
jle
aam
or
and
lds
adc
daa
inc
jnp
decl
sarb
call
push
call
bound
std
jg
pop
adc
rclb
mov
test
xor
add
outsl
dec
mov
sbb
push
jne
push
add
imul
add
mov
mov
insb
cmp
lcall
pop
inc
rcrb
js
xorb
mov
shll
adc
roll
pop
mov
shlb
adc
inc
and
cmp
cld
lea
test
cmp
pop
jl
jbe
ljmp
fwait
mov
addl
je
mov
and
orl
fisubl
mov
sbb
push
push
clc
sbb
sbb
loop
cmp
sbbb
fisttpl
loop
icebp
mov
ljmp
addr16
inc
jg
inc
call
pop
daa
test
mov
xchg
or
orl
add
call
cli
mov
lcall
cmpsb
inc
loope
pop
cmp
inc
sbb
adcb
std
filds
xor
bound
and
adc
ret
test
ljmp
pop
xchg
sub
jmp
cmc
hlt
adc
add
loop
fsubrl
pushf
mov
pusha
dec
ret
sub
mov
or
or
int3
divl
jo
sub
popa
cmp
add
pop
sarl
mov
push
loope
adc
mov
in
inc
out
add
xor
push
sbb
lcall
jle
dec
sti
ljmp
xor
jle
in
add
fs
imul
pop
popa
add
adc
pusha
pop
add
das
xor
mov
sub
bound
arpl
dec
movsb
call
inc
push
mov
clc
add
add
arpl
add
and
cmpsb
push
push
mov
add
mov
ret
pop
sbb
ja
and
jns
pop
adc
push
xlat
pusha
add
shll
imul
out
inc
or
lret
jbe
push
inc
add
movsl
jg
pusha
or
enter
js
fidivl
inc
xor
loope
outsl
xorb
stos
jp
sahf
loope
adc
fwait
push
call
dec
add
lcall
xor
call
push
out
nop
gs
add
sbb
mov
jb
add
je
repz
testl
in
inc
inc
adc
inc
adc
js
mov
push
or
mov
jae
xchg
xor
inc
cld
jnp
sbb
fyl2x
les
push
les
adc
loopne
aas
xor
push
add
and
pop
dec
adc
push
jo
jmp
push
aad
inc
push
or
jnp
xchg
push
push
shll
mov
xor
mov
pop
xchg
icebp
add
popa
fcmovbe
jp
arpl
add
inc
push
jo
or
fcmovnu
mov
stos
cltd
sbb
arpl
cmp
pop
add
repz
push
lods
dec
mov
pushl
movsl
mov
out
push
sub
icebp
mov
mov
lcall
or
cmp
repz
out
sarl
sub
call
in
and
stos
stc
lods
insb
mov
mov
add
stos
jmp
pop
iret
sbb
adc
cmp
dec
pop
shll
fwait
mov
ja
dec
mov
sbb
mov
stos
pop
xchg
pop
xchg
sbb
jo
mov
pop
lret
add
aaa
cs
pop
push
pop
and
out
shrl
out
lock
mov
cs
xor
dec
shll
dec
pop
imul
cs
icebp
add
mov
mov
and
scas
xchg
pop
sub
mov
jno
or
adc
push
add
add
mov
and
xor
cmp
dec
addr16
cmpsl
lahf
cmpsb
imul
jecxz
or
icebp
xor
sbb
cmp
jne
mov
ss
push
mov
shll
lock
xchg
addr16
sysret
jmp
pop
aad
xor
popa
imul
sahf
cmpsb
lahf
stos
mov
test
test
dec
xchg
and
xchg
cld
in
and
stos
lock
push
loop
sub
test
lods
es
mov
push
adc
pop
ljmp
cli
jo
inc
adc
mov
sti
dec
loope
xchg
jo
add
cli
popf
es
imul
sub
or
les
or
mov
int3
and
add
xchg
je
push
roll
lods
inc
popl
dec
add
jb
gs
negb
cltd
add
cmpb
fwait
push
jb
nop
add
je
mov
mov
fs
mov
pop
push
or
les
jae
adc
dec
or
push
sahf
mov
insl
add
fadds
mov
arpl
inc
test
adc
mov
mov
fwait
pop
push
outsl
inc
outsl
mov
inc
popa
je
push
sbb
bound
add
jo
adcb
pop
add
ds
mov
gs
bound
xor
stos
xor
lcall
outsl
or
add
lcall
je
gs
or
gs
je
push
int
mov
shlb
jo
mov
add
adc
sub
lods
pop
fadds
mov
stos
std
sbb
test
je
fiadds
push
rcll
imul
hlt
inc
jae
add
add
jb
jb
inc
mov
lods
je
nop
xor
dec
sahf
outsb
fs
mov
inc
jo
mov
pushf
popa
mov
push
inc
cmp
loope
sbb
and
stos
cli
adc
jns
jo
scas
clc
inc
sbb
inc
dec
xor
push
add
in
or
push
mov
imul
ljmp
gs
mov
imul
roll
cmp
jbe
mov
pop
imul
in
mov
cmp
out
add
mov
add
add
lods
gs
inc
jbe
sub
lcall
sbb
or
sahf
or
adc
imul
push
cld
gs
dec
mov
jb
adc
add
jbe
sub
clc
or
mov
dec
ret
div
inc
or
add
push
jl
clc
add
pushf
xchg
jb
lea
pop
cmp
jne
xchg
testb
roll
cltd
gs
sub
adc
adc
cs
xchg
jae
ss
add
mov
js
and
shll
push
inc
nop
jne
inc
inc
cwtl
or
mov
sbb
mov
mov
pop
or
in
add
jmp
pusha
add
dec
xchg
ss
roll
cmp
add
dec
jo
sbb
add
lock
mov
mov
sbb
mov
push
xchg
outsl
xor
jae
int
or
or
mov
je
add
sub
xor
lcall
loop
add
push
subb
loopne
outsl
orb
adcl
push
fldcw
push
xorb
or
lea
xor
and
nop
or
add
adcb
sbbb
add
mov
ret
insl
outsb
add
push
and
mov
call
or
jae
lds
pop
adc
mov
arpl
jg
sbb
int3
js
sbbb
outsl
insl
adcb
mov
outsb
rolb
sbb
xchg
push
rorl
andl
xchg
fwait
push
fcos
push
imul
cmp
cs
outsb
mov
jo
add
insl
aaa
mov
and
mov
insb
stos
mov
push
ljmp
inc
jne
xchg
xchg
fmulp
jb
pushf
insl
pop
mov
cmp
lret
ret
sbb
inc
js
sbb
sbb
mov
adc
jns
sbb
fs
mov
and
icebp
lds
xchg
or
push
xchg
add
adc
add
and
mov
gs
adc
lds
dec
sub
loope
cmp
mov
lds
push
dec
pop
and
sub
jbe
push
xchg
movsb
dec
and
jb
aaa
dec
add
outsb
hlt
hlt
push
fwait
inc
test
push
jns
fisubl
les
rorb
ficoml
inc
mov
sbb
les
and
push
jmp
rcrb
sahf
mov
imul
cmp
imul
lea
std
mov
shrb
adc
call
add
sub
cmpsb
pop
rorb
sbb
ljmp
mov
rol
add
mov
data16
add
clc
dec
adc
jb
adcb
enter
cmp
inc
in
push
rorl
mulb
clc
bound
ss
add
test
loop
sahf
fwait
negb
lods
shrb
outsb
into
out
imul
push
outsl
mov
sarb
pop
lds
sbb
and
fs
add
add
jns
subb
dec
add
add
dec
push
imul
scas
mov
xchg
lcall
ljmp
or
xor
aaa
lods
jge
loopne
fwait
inc
bound
jg
loope
insb
add
add
sbb
loope
push
in
mov
push
push
popa
xchg
jne
aaa
add
insb
mov
sub
jne
stos
gs
mov
popa
and
jb
sahf
loopne
sbb
dec
mov
dec
jno
cmp
fwait
loope
in
popa
add
cmpsl
loope
mov
outsb
jb
jb
outsl
fwait
adc
imul
jne
mov
loopne
jmp
sbb
mov
lcall
adc
ret
arpl
loope
out
push
out
addb
jg
pusha
push
jne
mov
xor
inc
cli
push
add
jb
aam
add
dec
dec
insl
sub
xorb
testb
pop
sbb
inc
push
scas
mov
loope
mov
rclb
fs
js
or
dec
mov
imul
push
push
mov
or
int3
add
pushf
loopne
mov
hlt
call
loop
mov
pop
xchg
or
je
inc
sbb
and
cmp
arpl
outsb
scas
repnz
push
mov
cmp
or
loopne
ret
int3
loopne
add
insb
or
pusha
lods
bound
insb
mov
loope
sub
fldt
push
popa
push
push
jae
adc
sahf
mov
sbb
xchg
cmpsb
cwtl
loopne
add
sahf
insl
loope
jecxz
and
loopne
mov
sbb
ds
fs
push
outsb
sahf
and
jb
rorl
sub
fidivs
pusha
ds
popa
bound
cwtl
cmp
arpl
outsl
xchg
loop
add
out
dec
gs
mov
dec
pop
mov
sub
je
cld
adc
scas
outsl
pop
mov
loopne
sahf
lock
loop
jb
shrl
adc
roll
icebp
push
add
stos
lcall
or
loopne
sub
dec
jae
lods
loopne
mov
or
movsb
popa
adc
xchg
adcb
push
dec
andl
mov
mov
js
add
bound
inc
js
inc
movl
fimull
add
inc
rorl
jae
inc
xor
stos
gs
dec
jg
add
mov
push
loopne
outsl
ja
aaa
xlat
sub
jnp
je
in
and
mov
in
add
les
jp
pusha
or
add
mov
gs
jmp
mov
inc
subb
je
add
bound
add
sub
in
test
mov
adc
add
jae
mov
test
cmp
lock
and
je
mov
pop
mov
mov
mov
push
mov
ja
pusha
loop
push
mov
popa
xchg
imul
ja
insl
into
mov
repnz
insb
add
bound
fs
xchg
mov
mov
cmp
jb
push
add
add
frstor
sahf
outsb
jae
lock
ret
jl
dec
lcall
aam
push
mov
or
inc
xor
ficoms
lds
cli
jp
shll
push
or
cmp
jmp
pop
aaa
sbb
xor
add
icebp
push
or
test
cmp
jg
sub
xor
mov
push
das
mov
push
jb
push
push
imul
cmp
addb
xor
push
dec
je
jo
insb
pop
hlt
sub
cmp
insl
jno
or
push
xor
cmp
outsb
cmpsb
jg
add
cli
push
sahf
sub
jns
add
gs
loope
lcall
nop
ja
xor
or
inc
insb
sahf
mov
test
seta
cmovbe
andb
push
push
popa
cmc
add
jno
mov
or
cmp
inc
cld
outsb
mov
sbb
xor
xor
cmp
push
mov
push
mov
stos
add
dec
xchg
jne
aaa
ljmp
popa
mov
cltd
dec
inc
rorb
fwait
jno
loope
fcomip
xor
and
inc
insb
addr16
push
mov
add
clc
lods
push
outsb
push
jo
add
call
test
and
test
lcall
in
xchg
insb
xor
mov
fwait
jo
and
jg
sbb
add
jno
xor
in
icebp
enter
jg
mov
xchg
jo
adc
jae
scas
cs
sub
sbb
jae
dec
outsb
cltd
outsl
sub
mov
arpl
push
cmp
jo
jo
test
into
icebp
dec
stos
mov
dec
mov
xor
ja
loopne
sbb
mov
mov
dec
mov
adc
data16
xor
subb
fwait
dec
add
dec
xor
outsb
fildll
mov
lcall
push
inc
icebp
mov
adc
add
fwait
lcall
jl
lods
jns
dec
inc
call
xor
jge
mov
ss
pushf
jbe
mov
int
push
dec
cmp
add
push
pop
lock
sub
mov
out
adc
arpl
sbb
mov
jae
push
sahf
cli
push
jg
add
imul
jo
mov
xor
or
pushf
mov
and
cs
shrb
shl
rdpmc
or
mov
cwtl
inc
add
pusha
jb
xchg
jo
xor
negb
out
ret
notb
cli
add
or
sahf
ret
jno
cld
mov
add
ja
mov
push
hlt
mov
push
jg
lock
mov
imul
jo
adc
ss
les
or
add
dec
in
add
add
mov
sub
or
push
xchg
loopne
pusha
jae
cwtl
cmp
int3
cmp
or
shl
sbb
lret
lcall
dec
lcall
sbb
jns
lea
add
xor
xor
or
outsl
mov
pop
add
in
pushl
icebp
or
imul
outsb
xor
mov
ljmp
xchg
or
gs
jbe
inc
jns
push
arpl
stos
fisubs
jo
mov
push
js
lock
xchg
push
pushf
jb
jbe
jb
sahf
arpl
dec
outsl
push
mov
add
jne
jns
repz
das
rcrb
scas
jbe
mov
arpl
stos
jns
scas
push
cld
es
arpl
jo
loopne
add
adc
lcall
push
inc
jg
mov
mov
cmp
mov
insb
ljmp
push
jo
mov
lock
sbb
xchg
fimuls
add
xchg
gs
gs
jmp
jo
or
xor
dec
mov
push
push
jle
xor
test
mov
adc
call
je
leave
int3
dec
lods
cwtl
loop
cmp
push
xchg
mov
jg
inc
cmpl
push
mov
pop
add
jb
adc
imul
gs
inc
insb
dec
outsb
dec
outsb
jb
sub
clc
imul
popa
xor
cmp
in
cs
aad
or
lock
xor
clc
rorl
test
mov
incl
mov
or
sub
and
sbb
push
orb
out
nop
movsb
mov
and
and
fcomip
or
xor
mov
add
imul
das
call
jne
inc
mov
dec
outsl
xor
or
mov
loop
outsb
ds
jb
add
pop
xlat
and
ss
fisubl
mov
push
push
sbb
add
inc
jae
shlb
dec
roll
outsl
mov
mov
xor
jbe
addr16
add
fwait
push
fcompl
adc
mov
mov
sub
inc
inc
dec
push
outsl
lods
test
and
and
movsb
lret
jne
adc
mov
popa
arpl
dec
push
dec
inc
gs
cmp
shr
arpl
add
mov
outsb
jb
pop
sub
sbb
lret
mov
xchg
outsl
adc
cs
mov
lods
or
mov
jo
lcall
push
inc
insl
jo
test
add
or
movsb
fimuls
out
fdivrs
add
imul
and
add
mov
push
sbb
popa
sub
mov
jnp
sub
xchg
and
add
sbb
fiadds
ja
jbe
jmp
jb
data16
add
jb
sbb
movl
fisubrs
mov
adc
jp
or
mov
das
shrb
adc
xchg
subb
orb
fs
add
xchg
jae
sbb
mov
test
inc
dec
lcall
adcb
mov
inc
mov
arpl
movsb
and
xchg
mov
add
dec
sbbb
das
adc
dec
xor
test
mov
xorb
insb
xchg
add
add
add
fwait
inc
jl
sahf
jo
clts
in
outsb
push
sub
add
push
push
mov
jb
addr16
daa
rclb
insb
inc
inc
xchg
jne
shlb
inc
dec
mov
bound
and
push
push
loop
gs
add
int
sbb
pushf
dec
push
dec
mov
loop
add
jo
dec
addr16
shrl
push
sar
xor
push
rcrb
sbb
xlat
mov
mov
dec
or
cli
insb
rolb
or
add
xchg
and
in
pop
ret
mov
movb
scas
add
movsl
sarb
mov
mov
mov
movsl
fwait
sbb
add
mov
mov
push
clc
add
pushf
ret
xchg
lds
xchg
add
mov
xor
cmpsb
js
lcall
adc
mov
cmpsb
adc
les
add
or
pop
dec
adc
and
es
jne
mov
dec
or
cwtl
lods
rorl
call
adc
nop
jb
sub
addr16
movsb
inc
std
shrl
into
adc
add
dec
xchg
xchg
mov
and
jne
jg
ret
inc
inc
xchg
movsb
lret
mov
popa
add
adc
ss
add
or
into
xchg
inc
insb
rcl
icebp
fwait
or
inc
mov
cmp
popa
mov
mov
call
mov
fs
add
push
inc
mov
lock
sbb
push
mov
and
cwtl
cmp
aaa
movsl
jle
inc
jbe
inc
mov
shr
pusha
arpl
lods
daa
popa
cmp
xchg
jne
dec
lcall
xchg
imul
adc
loope
dec
mov
cmpsb
sbb
adc
push
jo
push
or
sahf
mov
push
int
fldl
inc
xchg
inc
mov
and
xorb
loopne
arpl
dec
roll
cmpsb
jl
pop
call
jns
mov
popa
xor
dec
in
add
add
adc
data16
inc
pop
add
cmc
lcall
pop
idiv
call
loop
inc
mov
insl
call
loop
les
and
insb
loop
loope
add
xchg
pop
adc
xor
inc
ljmp
jmp
cmpsl
repnz
ss
lcall
mov
and
jo
xchg
jo
mov
mov
movsb
incl
mov
cmpsb
push
push
in
add
push
test
jo
mov
jne
shll
aam
je
loopne
cmpsb
dec
aad
sbb
push
dec
push
lret
pop
out
add
sbb
jb
lcall
add
mov
or
mov
push
popa
outsl
push
sbb
test
mov
xchg
add
bound
pop
push
or
mov
sbb
inc
popa
movsb
inc
add
pusha
push
dec
dec
mov
test
adc
bound
xchg
fs
loop
ja
mov
mov
insb
mov
mov
mov
das
movsb
dec
notl
jge
sbb
jle
imul
pop
lock
lods
bound
lcall
mov
adc
rcr
jb
pusha
sbb
and
add
adc
and
jg
lcall
psrad
cld
sub
and
outsb
cld
adc
adc
sub
adc
in
loopne
push
and
clc
in
jmp
add
xor
outsl
outsl
xchg
imul
loop
mov
inc
outsl
jbe
adcb
dec
dec
inc
stos
loop
dec
dec
mov
xchg
mov
xor
pop
ds
fsubl
mov
push
mov
mov
sti
pop
sub
std
popa
add
popa
push
inc
push
or
dec
rclb
add
xchg
pusha
ja
add
xchg
arpl
or
mov
test
jae
pop
aaa
arpl
add
outsb
jg
nop
popa
cld
inc
pop
jo
lcall
sbb
insl
outsl
mov
add
sub
arpl
ja
outsl
or
stos
sub
mov
sahf
pop
ja
xchg
jae
arpl
or
jbe
dec
jne
jne
pusha
jl
sub
pushl
jecxz
lock
xchg
ja
add
add
outsb
mov
je
add
cmp
fsubs
test
rcrb
dec
jo
sub
pop
test
movsl
add
or
xor
mov
les
daa
call
pop
lods
test
gs
jo
add
add
and
aas
add
and
aas
insl
mov
add
inc
inc
mov
lcall
add
aaa
sbb
xor
push
and
pop
pusha
add
push
loopne
inc
add
jmp
movsl
lods
cmpsb
mov
enter
adc
pushf
and
scas
ret
jp
hlt
inc
adc
lock
inc
mov
leave
in
mov
add
mov
cmp
lock
cmp
sub
mov
pop
std
and
test
out
addl
sarb
sub
push
mov
adc
cmp
mov
divb
cmpsb
xor
dec
pop
xchg
shll
loopne
push
or
call
inc
test
add
cmp
inc
cwtl
fisttpll
fiadds
popf
sti
jmp
subl
repnz
jnp
es
cld
pushl
pop
scas
adc
cmp
cli
inc
adc
aam
add
jmp
dec
test
incb
cwtl
int3
xchg
icebp
cmpsb
scas
mov
repnz
mov
addl
cmpsl
insb
cmp
ret
loop
mov
push
mov
sbb
mov
cmp
xchg
bound
jg
push
pop
and
push
add
aaa
popa
cs
mov
je
and
add
clc
repz
mov
subb
fwait
xchg
jle
add
les
dec
cli
adc
int3
int
adc
sti
jg
cli
aas
mov
or
mov
fs
mov
xchg
outsb
in
add
incl
sub
out
loop
pop
dec
shl
aas
das
add
and
and
cld
or
cmpsb
mov
xchg
ljmp
int3
scas
mov
mov
xor
out
cmp
add
aas
rolb
dec
pop
loope
jg
mov
sub
leave
aas
insl
les
mov
aas
and
incl
addr16
push
dec
add
xchg
aas
loop
add
jp
jl
pop
in
ljmp
clc
roll
pop
aas
sub
das
stc
add
inc
dec
fistpl
cmp
movsl
jmp
jp
sub
subb
mov
incl
fstl
pushf
add
int3
fcoml
xchg
cmpl
test
arpl
cmp
add
xchg
mov
bound
cli
and
call
imulb
add
mov
jne
fldt
cmp
jno
rcr
adc
outsl
pushl
out
mov
pop
cmp
xchg
andb
adc
ljmp
mov
sub
dec
in
leave
xor
push
push
add
imul
push
std
dec
add
ret
call
mov
xchg
cmp
stos
das
and
sbb
scas
stc
xchg
jge
jg
icebp
mov
sub
enter
or
sub
xchg
push
sbb
and
dec
inc
jp
mov
sbb
test
mov
mov
inc
jl
add
push
push
adc
jge
add
test
repz
ret
add
xchg
daa
sti
or
push
add
add
push
sub
lret
popa
movsl
adc
mov
add
fwait
sti
add
or
jno
sub
pushf
sti
add
lods
push
push
sbb
repnz
int3
negl
scas
mov
push
scas
test
adc
fwait
lods
mov
mov
scas
cmp
adc
push
xor
add
mov
sahf
cmp
add
xor
js
cmp
or
or
pop
or
xor
lds
jle
pop
inc
or
jle
out
jbe
mov
mov
or
mov
ret
movl
xchg
inc
cmpsl
fisubrs
push
fsts
or
addl
push
mov
dec
imul
iret
add
push
push
filds
out
sti
inc
jns
sbb
pop
push
adc
pop
and
dec
aaa
inc
aad
push
lcall
inc
and
cmpl
add
shll
imul
jnp
xor
imul
test
aas
test
aaa
add
aaa
jmp
sbb
int
incb
dec
sub
lret
cmp
mov
cmp
insb
cld
int
cld
cmp
mov
imul
cmp
cmp
mov
or
int3
cmp
call
sbb
fstpt
push
and
add
ret
ds
ds
push
mov
adcb
jae
xchg
cld
int
cld
arpl
movsb
ds
mov
inc
les
xor
and
in
adc
fcomip
add
add
xrelease
jecxz
and
rcll
xor
ret
aas
push
outsl
inc
fidivl
aas
fs
xchg
jle
frstor
adc
test
jae
pop
sar
lods
arpl
fcoml
mov
inc
aas
les
xor
cmc
fwait
int3
adc
adc
or
aas
add
call
add
inc
pop
sub
xor
sbb
cs
roll
in
mov
cmpl
xor
xor
cld
int
jnp
xor
pushf
xor
lods
xchg
test
jne
mov
icebp
dec
aam
xor
xor
in
mov
dec
cs
xor
mov
sbb
sub
lret
cld
int
cld
xor
mov
pop
xor
jl
jnp
mov
adc
imul
xor
mov
insl
aad
xor
xor
xor
xor
cld
xor
xor
pop
ror
or
xor
mov
cmp
mov
fwait
mov
fwait
xor
jl
jnp
mov
pushf
xor
mov
dec
xor
xor
xor
xor
xor
xor
xor
xor
aaa
jg
jbe
adc
xor
mov
pop
xor
mov
outsl
sub
loop
imul
dec
cmpb
adc
xor
xor
xor
or
cld
xor
adc
popa
inc
pusha
xor
jno
push
push
les
jae
mov
xor
adc
mov
mov
adc
pushf
xor
xor
dec
xor
popa
or
xor
adc
les
repz
mov
sub
lret
xor
dec
stos
xor
insb
mov
xor
push
push
inc
or
jnp
adc
fdivl
xor
ss
mov
sbb
sub
inc
pop
inc
adc
add
jno
cmp
pop
ds
dec
adc
cmp
loopne
mov
add
loopne
incb
pusha
add
icebp
pop
je
test
dec
das
pop
push
cmp
lea
insb
cmp
push
les
mov
push
xchg
add
and
cmp
or
ds
adc
std
lahf
and
ds
ss
aas
adc
fwait
mov
push
lcall
pusha
inc
xor
jp
and
push
jge
inc
lahf
or
lds
xchg
inc
mov
mov
add
jae
xchg
incl
xor
xor
add
sub
xor
inc
xor
xor
lret
andb
and
and
int3
xchg
xor
pop
add
es
xor
leave
and
xor
icebp
mov
dec
popf
add
adc
divb
ss
shlb
sub
fidivl
and
in
push
ss
or
fdivs
cmpsb
aaa
push
add
add
cmp
insb
out
cmp
add
cmp
mov
bound
xchg
cmp
sub
or
mov
cmp
cmp
adc
cmp
cmp
cmp
cmp
mov
lahf
cmp
cmp
add
mov
cmp
push
sarb
pop
cmp
or
sti
cmp
pop
push
ret
adc
xchg
and
adc
icebp
jns
pusha
ja
es
incl
dec
jp
push
add
xor
mov
xor
xor
add
and
dec
xor
lds
push
ss
sbb
ret
cmp
or
ss
cmp
add
inc
pop
lret
add
adc
cmp
out
bnd
cmp
inc
adc
or
cmp
cmp
jbe
sub
loop
roll
aad
mov
mov
xlat
idivl
cwtl
ds
push
jg
ds
xor
xchg
inc
loopne
xor
aad
adc
mov
adc
flds
ret
mov
adc
xor
mov
add
lods
xor
std
fcmovnu
or
xchg
xor
xor
adc
fnsave
fdivs
dec
xor
sub
loope
lock
or
mov
add
cmp
adc
sub
out
fsubrs
cmp
cmp
cmp
pop
cmp
lret
inc
insl
and
lret
mov
lods
xor
add
or
push
xor
mov
repz
xor
push
aaa
test
lock
testb
cmp
cmp
cmp
mov
jl
cmp
cmp
sub
aas
std
aaa
inc
rcr
aas
xor
je
mov
pop
aas
pushf
and
mov
mov
loopne
movsl
hlt
pop
xor
clc
sub
or
lea
dec
push
fidivl
rdtsc
cli
dec
das
cli
jg
add
xor
jecxz
adc
shlb
ds
xor
inc
pushl
or
xor
xor
cmp
dec
aaa
sub
and
cmp
or
das
sbbb
cmp
lret
pusha
dec
or
fsubs
cmp
pop
cmp
or
outsl
decl
sub
fdivrl
mov
je
nop
cmp
cmp
cmp
ds
jg
or
mov
pop
mov
push
outsb
jo
sbb
out
mov
shll
je
cltd
add
dec
rclb
xor
xor
rcrb
popf
xor
xor
xor
icebp
ret
xor
xor
xor
adc
aam
mov
ss
mov
insl
ss
mov
divl
push
aaa
jmp
aaa
cs
aaa
inc
scas
aaa
pop
aaa
xchg
aaa
lcall
aaa
pop
aaa
test
mov
inc
nop
add
cmp
aaa
jg
cmp
or
cmp
cmp
cmp
cmp
cmp
adc
pop
fs
jbe
jae
lret
cmp
scas
cmc
cmp
loop,pt
test
and
and
adc
jg
push
jle
mov
insb
xor
push
inc
nop
push
cwtl
xor
jl
push
jg
pop
and
cmp
xor
ret
xor
sti
push
xor
push
push
cmp
cmpsl
adcl
mov
inc
orb
dec
mov
testl
sub
adcl
pushl
cli
adc
cmp
rclb
cmp
les
fstpt
inc
cmp
pop
adc
sar
pop
and
adc
pop
cmp
cmp
ljmp
call
call
aas
dec
aas
jb
sbb
es
inc
xor
xchg
push
cld
sub
xor
nop
sbb
xor
adc
xor
sbb
pushf
mov
jb
jg
and
jo
cmp
cmp
mov
mov
xchg
cmp
push
aas
and
inc
add
subb
lock
xor
cld
les
cmp
cmp
outsl
nop
pop
xor
xor
adc
xorl
jo
ljmp
shlb
add
sub
cmp
sarl
imul
cwtl
loope
pop
jg
cmp
cmp
cmp
daa
mov
mov
sbb
std
aad
outsb
shl
jo
add
push
mov
ljmp
or
xchg
lock
mov
xor
xor
nop
pop
xchg
xor
pusha
mov
cmpsl
xor
popa
mov
inc
xor
xor
xlat
xor
pushl
out
dec
out
adc
dec
mov
ss
ss
rcrl
pushl
or
ss
rorb
fsubrl
daa
ss
das
ss
push
mov
sti
add
ss
ss
dec
lods
ss
movsb
ss
inc
repz
ss
adc
mov
ja
adc
sbb
ss
cld
aaa
pop
aaa
hlt
aaa
getsec
add
in
inc
mov
adc
aaa
daa
aaa
aam
das
int3
aaa
add
jg
aaa
aas
aaa
add
aaa
lods
aaa
or
movsb
push
sbb
aaa
outsl
aaa
mov
loope
fcomip
ja
sbb
sarb
je
aaa
insb
aaa
xchg
aaa
fs
fstpt
aaa
cmpsl
mov
scas
dec
dec
aaa
insl
cmp
or
sbb
testb
clc
xchg
or
jo
sti
xor
ljmp
adc
xor
push
nop
push
push
inc
stc
xor
xor
cmpsl
xor
scas
xor
xor
xor
add
lods
push
ss
or
xor
xor
push
sbb
and
dec
mov
add
xor
mov
pop
nop
or
imul
xchg
pusha
xchg
es
cmp
in
aaa
leave
clc
xor
cmp
fidivrl
jne
lods
cmp
std
cld
call
cmp
cmp
cmp
push
mov
cmp
mov
sub
aas
decl
js
mov
cmp
rclb
ljmp
xchg
jl
inc
shll
adc
nop
and
divb
pop
add
add
xor
xor
adc
xor
xor
mov
xor
rorb
inc
jo
sbb
jle
or
fwait
loop
jns
xchg
xor
jo
enter
and
ss
out
cli
pop
std
adc
aaa
mov
aaa
orb
loop
cmp
mov
cmp
xchg
adc
cmp
jnp
lods
loopne
scas
cmp
xor
adc
cmp
cmp
or
incl
cmc
cmp
cmp
push
cmp
cmp
imul
insb
add
mov
daa
incl
clc
cmp
cmp
cmp
add
pop
adc
or
mov
adc
add
ljmp
clc
xchg
aas
bound
fadd
xor
jae
std
xor
xor
jp
xor
jp
mov
ja
xor
mov
push
inc
xor
ss
mov
dec
add
and
rorl
add
jp
ja
adc
xor
xor
jecxz
pushl
xor
adc
pop
rclb
xor
loope
jle
scas
jg
cmp
or
mov
cmp
jp
in
das
cmpsb
les
cmp
cmp
and
cmp
cmp
cmp
jg
stos
push
into
ret
mov
xor
cmp
cmp
ja
std
outsl
and
cmp
cmp
cmp
inc
cmp
inc
cmp
cmp
push
sti
lea
push
mov
stos
xchg
aas
inc
aas
loop
mov
jo
jg
inc
add
movsb
xor
jbe
xor
fists
mov
test
or
and
jg
xor
pop
push
xor
xor
xor
xor
repz
adc
mov
jge
outsl
xor
xor
loop
jmp
push
xor
loop
pop
pushl
add
xor
xor
xor
xor
imul
dec
xor
fistps
xchg
xor
ss
into
adc
aaa
or
pop
hlt
cmp
cmp
dec
cmp
cmp
cmp
cmp
fiaddl
pop
ret
sbb
pusha
fs
and
ljmp
cmp
shll
sbb
sbb
push
adc
sub
sub
lock
jo
pusha
test
cmp
mov
push
cmp
mov
cmpb
aam
sti
cmp
jle
mov
jp
xor
cmpsl
nop
cwtl
or
lock
call
sbb
lock
outsb
aas
and
lock
jmp
mov
xor
shlb
dec
cld
dec
mov
xor
xor
xor
xor
clc
fistpl
push
lcall
in
fisubl
cmp
mov
mov
out
data16
cmp
cmp
cmp
insl
cmp
div
push
adc
jecxz
fbld
cli
xor
lret
adc
mov
jge
clc
xor
fidivs
ret
pop
or
sbb
push
fisubrl
xor
jg
rolb
icebp
mov
sarb
adc
fnsave
movsl
xchg
xor
mov
test
add
add
cmp
cmp
jnp,pt
outsl
aaa
addl
add
call
mov
cmp
test
pop
in
xchg
add
cmp
cmp
jo
shll
or
mov
mov
cmp
or
nop
xchg
jno
cwtl
and
cmp
repz
cmp
ds
les
ds
ja,pt
jbe
xlat
push
cld
decl
mov
add
jo
aas
test
pop
and
nop
add
les
xor
leave
xor
scas
xor
outsl
add
call
xchg
xor
xor
mov
cmpsb
jo
and
and
and
mov
cli
cmp
push
lds
in
mov
rol
popa
xor
shll
and
enter
mov
jg
mov
popf
xor
test
xor
xor
cs
ss
ss
xchg
mov
add
insb
test
shl
mov
aaa
or
sbb
cmp
clc
pop
orl
cmp
cmp
cmp
loope
push
ja
mov
xor
sbb
cmp
cmp
cmp
adc
cmp
cmpsb
cmp
cmp
adc
sbb
std
lods
sbb
mov
xor
fnstcw
adc
adc
outsb
dec
pop
push
fnstsw
lret
jle
mov
pop
adc
cmp
cmp
call
cmp
cmp
xchg
cmp
mov
incl
mov
ds
bound
pop
movsb
outsl
fdivs
or
repnz
aas
mov
insb
pop
mov
lret
js
add
dec
loopne
and
xor
xor
add
xor
jge
lods
xor
xor
into
imul
push
out
fidivl
pop
adc
xor
jl
adc
lcall
out
sbb
nop
and
ss
mov
adc
xor
xor
xchg
adc
xor
push
xor
jl
mov
sbb
repnz
std
mov
xor
adc
mov
xor
xor
xor
add
fdivs
or
mov
xor
adc
xor
add
incl
mov
add
sbb
adc
mov
xor
and
add
add
divb
adc
fbstp
popa
test
divb
shll
jbe,pt
pop
nop
imul
insb
adc
inc
adc
je
mov
mov
addb
push
push
jge
push
cld
adc
mov
imul
aaa
sub
jp
fstpt
cs
jb
sbb
cmp
cmp
mov
cmp
repz
cmp
icebp
aaa
jg
cmp
cmp
cmp
popf
cmp
cmp
cmp
sub
int
xor
pop
cmp
cmp
jo
adc
test
push
jmp
cmp
pop
xchg
fisttps
ds
and
mov
sbb
cmc
adc
xchg
fidivrl
add
add
inc
xchg
lret
add
popf
loope
hlt
jb
fidivl
pop
orb
dec
xor
call
mov
xor
xor
xor
mov
fistpll
xor
movsl
xor
mov
xor
outsl
add
xor
push
dec
xor
orb
icebp
ret
xchg
xchg
jg
and
iret
adc
xor
pop
cmp
movsl
sub
xchg
cld
sub
cmp
dec
insb
ds
mov
icebp
aam
cmpsl
shlb
inc
test
mov
inc
sub
xor
dec
or
in
sbb
xor
inc
jp
fildll
pop
xchg
xor
ret
incb
xor
xor
lahf
xor
pop
push
cmp
cmp
fbld
dec
cmp
cmp
dec
mov
cmp
sub
gs
ret
xchg
ljmp
mov
xor
or
ja
inc
xor
hlt
ret
xor
xor
push
xor
mov
xor
xor
sub
xor
cld
ljmp
jmp
xor
shlb
or
add
sarb
sbb
loop
in
and
and
rclb
xor
lret
ss
int
inc
ss
push
ss
ss
mov
xchg
fcmovu
out
push
mov
jns
xorb
adc
in
stos
jbe
ss
adc
bound
mov
push
ss
jge
mov
aaa
dec
cmp
cmp
or
mov
outsb
ret
add
xchg
stos
jbe
cmp
cmp
adc
cmp
cmp
imul
int3
cmp
cmp
jecxz
aad
cmp
adc
nop
cmp
lods
add
loope
lods
cmp
mov
pop
and
repz
cmp
mov
ljmp
test
cmp
fdivp
aaa
orb
out
pop
lods
sahf
pop
ds
jg,pt
mov
test
aas
xchg
aas
leave
test
cmp
xor
mov
xor
pop
loopne
stos
add
push
adc
cmc
xor
xor
pusha
divb
clc
imulb
mov
push
shlb
xor
pop
loopne
sub
loope
lret
bound
int
cmp
std
cmp
cmp
and
fstl
ret
jg
cmp
cmp
cmp
cmp
mov
std
add
cmp
cmp
fdivrs
mov
adc
bound
mov
or
cmpsb
pusha
lea
cld
cmp
call
and
pushaw
sbb
mov
adc
mov
add
cmp
xchg
fcmovu
cmpb
out
aaa
add
aas
jne
outsb
aas
hlt
jo
std
lahf
lock
mov
popa
xor
decl
cmp
xor
dec
mov
xor
xor
ljmp
and
ds
or
pop
ss
mov
mov
push
jo
ss
ljmp
stos
inc
sub
sub
test
mov
mov
loope
mov
stos
loopne
mov
cmp
push
sub
inc
ds
cmpb
mov
arpl
mov
push
insb
les
jecxz
xchg
add
xor
aaa
imul
xor
xor
xor
adc
xor
mov
add
xor
les
into
xor
incl
jae
dec
adc
fildl
mov
lret
aaa
jg
xchg
aaa
pusha
aaa
mov
stos
cmp
mov
cmp
cmp
cmp
cmp
add
test
adc
cmp
cmp
cmp
push
pusha
inc
adc
or
pusha
add
data16
mov
adc
cmp
push
fists
and
stos
mov
inc
cmp
cmp
cmp
and
xor
fistpl
cmp
mov
and
cmpsb
fiadds
mov
daa
pushf
clc
mov
dec
ds
adc
xchg
ds
outsl
clc
out
mov
add
add
sub
clc
out
clc
jmp
inc
xor
lds
loopne
out
xor
xor
inc
inc
mov
out
call
loopne
in
aad
cli
aaa
pop
jo
xor
push
push
lea
pusha
mov
out
fsubs
push
mov
sbb
jne
cwtl
cmp
cmp
cmp
mov
cmp
ds
push
ds
aas
cmpsl
aas
test
aas
pop
loope
and
orb
pop
inc
hlt
xor
call
xor
xor
xor
loop
loopne
xor
add
stos
mov
xor
xor
xor
xor
loopne
mov
xor
xor
pusha
adc
in
cmc
mov
sarb
aas
xor
xor
mov
xchg
outsb
mov
ss
les
xor
mov
inc
les
cmp
in
out
jb
xchg
stos
ds
mov
movsb
mov
fbstp
cmp
pop
cmp
cmp
stos
xor
add
adc
or
push
adc
pusha
test
xor
pop
xor
xor
incb
xor
push
xor
xor
cmp
xor
hlt
xor
ss
aaa
jge
test
les
sbb
jmp
xchg
cmp
lock
and
adc
lcall
aas
or
inc
loopne
pusha
fwait
aad
xlat
xor
aas
xor
push
mov
pop
loopne
les
xor
insl
sub
and
test
add
je
das
mov
push
sub
xor
lock
and
and
stos
push
adc
repz
mov
std
xor
xor
xor
xor
add
and
xor
xor
xor
mov
incb
xor
js
cld
mov
xor
xor
mov
push
jg
jnp
mov
repnz
addr16
xor
cmpsl
stos
pop
pop
lock
or
mov
xor
jg,pt
pop
jecxz
mov
gs
xor
xor
xor
xor
xor
outsl
clc
pushl
jnp
adc
sub
or
xor
jo
cmp
xor
call
test
lahf
xor
jl
jo
jnp
jbe
mov
imul
pop
nop
add
mov
inc
xor
adc
add
xor
xor
xor
adc
inc
ret
daa
xor
clc
fwait
out
xor
adc
fwait
cmpsb
outsb
xchg
insl
xchg
cmpsb
aaa
add
add
cmp
adc
sbb
ja
cmp
loop
fsts
pushf
add
cmp
cmp
cmp
lcall
sub
jo
ja
lahf
ds
shl
push
loopne
add
stos
lock
add
cmp
or
lcall
push
jno
add
sbb
nop
xor
inc
xor
lods
cli
aaa
std
xor
pusha
cwtl
aaa
sub
leave
aaa
pop
cmp
shll
xchg
cmp
add
jo
push
cmp
aas
into
lock
mov
pop
add
lcall
xor
xor
xor
xor
inc
xor
xor
fdivs
xor
xor
xor
add
xchg
adc
ss
add
mov
jmp
pop
mov
push
aaa
lds
loopne
lcall
cmp
in
mov
jbe
or
sbb
jl
in
mov
cmp
cmp
mov
stos
or
and
int
xor
fwait
mov
ljmp
push
xor
xor
and
dec
jl
jl
aaa
icebp
add
shrb
ljmp
cmp
cmp
mov
stos
enter
cwtl
imul
adc
inc
sti
fisttps
jp
aaa
fs
mov
mov
xor
cmp
pop
cmp
fidivrs
cmp
xchg
adc
cmp
cmp
decl
cmp
add
cmp
stos
shrb
cmp
cmp
stos
fs
cmp
mov
push
dec
das
out
add
jg
cmp
cmp
cmp
add
push
nop
sbb
pop
loopne
push
push
pop
outsl
cmp
cltd
ds
test
clc
add
icebp
aas
cmp
js
aas
loopne
aam
adc
call
push
clc
lcall
add
fcoms
xor
xor
xor
shrl
or
xor
mov
xor
xor
xor
add
lock
popf
dec
jl
lock
xor
mov
push
add
dec
in
adc
mov
jg
aas
out
aas
pop
lock
mov
aas
pop
aas
sahf
adc
mov
loopne
push
out
aas
jle
imul
aas
push
adc
clc
dec
js
and
lock
add
lock
rolb
cmpsl
xor
sti
call
and
addr16
mov
scas
xor
insb
add
bound
xor
pushf
xor
adc
mov
xor
loopne
pop
popw
lock
pusha
sub
add
push
fadds
or
add
jo
cmpb
aam
inc
loopne
mov
lock
adcb
lret
adc
sbbb
inc
and
dec
mov
aam
add
xor
xor
add
or
adc
scas
add
pop
xor
aam
sbb
sti
or
add
lock
stos
push
in
add
ss
jl
lock
mov
pop
in
pop
in
push
dec
lods
bound
aaa
jg
fwait
cmp
test
adc
out
sbb
fbstp
and
xlat
incl
iret
aaa
xor
or
mov
pop
mov
add
faddl
jo
mov
pop
add
xorl
xorb
jno
cli
jg
push
mov
dec
ud0
add
and
adc
sar
incl
sbb
ljmp
sbb
dec
push
adc
incl
in
iret
xchg
insl
fisttpll
dec
mov
movsb
mov
frstor
loope
out
sbb
lcall
push
push
enter
fildll
cmp
in
add
jl
cmpsb
scas
in
mov
pop
ljmp
mov
xchg
lods
dec
outsb
in
lret
stc
add
xchg
hlt
jns
loope
pop
mov
stos
jne
jo
popl
mov
push
fcomip
sbb
dec
sbb
loopne
cmp
dec
loope
out
iret
lcall
pushf
push
sbb
push
out
cmp
add
jmp
dec
sub
add
pop
jae
ret
adc
aaa
jnp
dec
push
stc
push
fsubr
add
add
inc
sbb
push
and
filds
call
pusha
mov
cmpsb
mov
jecxz
std
repz
jle
ja
push
inc
icebp
cmp
call
or
hlt
aaa
push
mov
adc
cltd
in
or
cmpsb
pop
dec
data16
cs
shl
in
stc
jo
add
in
mov
in
fisubrs
jecxz
test
add
aad
daa
xor
dec
cli
pushl
mov
push
and
and
jp
add
outsl
or
cmp
mov
pop
lds
xchg
jbe
mov
fld
test
ss
clc
es
xchg
and
jg
mov
imul
ret
das
sarb
dec
mov
mov
fldt
pop
and
add
shl
cmp
and
loopne
xchg
pop
ljmp
xlat
xchg
imul
andl
repz
or
call
lret
sbb
dec
dec
inc
inc
add
adc
add
xlat
repz
clc
in
fisttps
imul
mov
jo
out
jp
test
mov
cltd
sbb
inc
adc
add
adc
adc
push
xchg
mov
and
aaa
fstpt
stos
jg
pop
pop
mov
loop
or
adc
aad
clc
sub
pop
dec
out
xchg
lds
out
mov
sbb
cmp
sub
push
cs
sbb
inc
icebp
outsl
push
inc
clc
sbb
lahf
xlat
out
clc
fistpl
movsl
add
out
out
mov
sub
or
jg
test
mov
imul
ss
pop
into
cltd
jbe
shrb
mov
pushf
jecxz
sub
jg
ljmp
or
repnz
daa
mov
add
or
cmp
jmp
dec
and
xchg
cmp
ljmp
xchg
roll
or
xchg
and
pop
mov
or
ret
out
aam
jg
cmp
sbb
mov
or
sbb
inc
in
lcall
jmp
clc
lds
addl
sbb
cmp
cmp
adc
flds
push
aas
jb
mov
xchg
add
pop
je
in
inc
std
outsb
mov
push
stos
fs
mov
pushl
cld
add
sub
cmp
int3
push
sbb
ret
mov
pushf
lods
bound
nop
sub
ljmp
mov
cmpsb
xchg
test
mov
jmp
leave
mov
decl
xchg
mov
cmc
mov
ljmp
ljmp
adc
sbbl
inc
mov
xchg
xchg
icebp
adc
mov
icebp
lcall
test
test
cltd
add
pushf
inc
cld
fildll
data16
mov
dec
pop
inc
push
aad
iret
orl
ja
ja
adc
sbb
sarl
jecxz
cmp
icebp
mov
in
adc
jae
mov
xchg
rclb
movsb
push
cmpl
lods
sub
xor
stos
mov
out
clc
mov
ss
pop
in
adc
mov
fistpll
in
rcrl
fdivrl
mov
incl
xchg
xchg
hlt
popf
scas
push
dec
rcrl
inc
shrl
sub
data16
scas
lret
ret
scas
pushf
rcl
ljmp
shlb
roll
pop
lcall
pop
adc
in
lods
push
js
inc
sub
and
sub
test
aam
loop
clc
cld
mov
mov
bound
pop
ret
arpl
movsb
jg
and
push
jns
dec
pop
adc
incl
rcll
sub
lret
pop
nop
add
lcall
sub
icebp
jmp
xor
jnp
dec
sti
jmp
jo
out
stc
aaa
stos
xor
and
pushf
sbb
fbstp
scas
jmp
icebp
insl
outsb
aam
xchg
push
out
mov
mov
add
sahf
mov
mov
push
push
cmpsb
es
and
adc
adc
test
icebp
dec
cli
inc
cli
test
and
in
int3
bound
push
into
loop
into
mov
inc
mov
jmp
mov
jmp
in
push
or
sbb
xchg
or
or
fsubrl
mov
outsl
pop
pop
ds
out
pusha
cld
rcr
dec
add
sbb
mov
pushf
ljmp
dec
lcall
sti
dec
mov
sub
cmpps
test
mov
xor
loop
incl
cmc
ds
inc
dec
test
cmpb
shlb
test
mov
popf
or
repz
adcb
addl
sbb
cmp
pop
xlat
lcall
mov
aaa
popa
mov
jb
fwait
or
rcll
loopne
sub
outsl
mov
outsl
insb
xor
push
cmp
sbb
ret
incl
adc
movsb
out
push
jmp
sbb
sub
lcall
std
or
sbb
and
decb
inc
pop
jo
rorl
add
and
pushf
movsb
scas
xor
xchg
mov
pop
cmp
rol
xchg
test
mov
xchg
scas
dec
test
or
enter
dec
in
subb
pusha
jp
cmp
pop
xchg
mov
incl
push
xor
sarb
jnp
push
xchg
mov
sub
dec
outsb
call
mov
out
cld
xchg
mov
pop
clc
sub
jmp
addb
test
sti
in
sar
cld
mov
xchg
xchg
in
nop
jbe
jbe
adc
jg
xchg
aam
int
mov
mov
push
adc
outsb
mov
push
rorb
mov
out
clc
into
fxch
and
cli
add
xor
mov
mov
pop
and
in
cmp
incl
add
in
dec
out
cmp
mov
fcomip
mov
scas
fimuls
inc
lret
nop
cmp
jg
or
cli
dec
outsb
mov
movsl
fsubrp
and
decl
das
hlt
jns
jmp
inc
adc
cmp
loopne
call
sbb
sub
mov
int
sarl
iret
mov
xchg
mov
call
nop
adc
cmpsl
sub
push
int3
ret
push
xor
negl
bound
pushf
ljmp
sbb
insl
adc
xor
sti
loope
clc
pop
dec
xor
enter
cmp
call
cld
mov
xchg
in
test
lods
in
xchg
movsl
test
mov
push
lods
xlat
pushl
bound
xlat
mov
adc
dec
ljmp
sbb
pop
xor
fbstp
mull
std
fnstsw
inc
dec
es
int
int3
imul
xor
pop
lret
loopne
add
or
push
sbb
imul
fnstsw
and
jl
and
mov
pushf
xor
pusha
popa
inc
cmp
or
rcrb
fadds
pushl
iret
scas
loopne
ret
inc
int3
push
adc
add
xor
test
sub
xchg
jb
cwtl
jmp
out
cli
incl
int
inc
sahf
dec
cmp
and
cmp
pop
or
int
call
cmp
mov
sti
popf
mov
insl
xor
cmpsl
fwait
jecxz
sti
fs
sub
ret
jnp
cmp
pushl
in
lock
inc
das
pop
sub
mov
push
ds
jo
daa
and
sbb
and
ss
inc
sub
adc
popa
outsl
and
xor
jns
lcall
lret
mov
into
clc
in
daa
cmc
xor
sbb
in
mov
adc
lcall
inc
add
xchg
adc
fcomps
rorl
mov
repz
push
push
rcrb
mov
sbbb
ret
sub
loopne
dec
push
lock
jmp
mov
inc
outsl
push
decl
or
push
jne
mov
cmpsb
aaa
aad
lahf
push
xchg
xorl
repz
ja
mov
xchg
sahf
push
shlb
mov
imull
lcall
xchg
ror
or
pop
xor
sbb
and
and
xchg
cs
or
test
fdivl
jg
incb
shlb
xchg
orl
jbe
push
cmp
add
movsl
lcall
mov
dec
cmp
mov
sbb
rcll
rclb
xchg
int3
dec
xchg
fidivs
incl
sub
test
push
lcall
xchg
cmp
test
mov
add
daa
jg
ficoms
scas
inc
fcomip
jecxz
out
mov
bound
add
test
lods
sub
push
pushl
popf
cmpl
sub
daa
pop
andb
sbb
sahf
cmp
sub
out
ret
lcall
shrl
cmp
or
repnz
cmp
cmp
lcall
xchg
nop
xlat
imulb
sub
jns
mov
mov
cmp
andb
enter
add
shl
mov
mov
arpl
decl
arpl
gs
sbb
daa
dec
inc
jo
movsl
pop
mov
pop
test
cmp
adc
outsb
xchg
outsl
aaa
loop
jnp
mov
adc
xchg
lcall
je
and
dec
jns
int
lds
loope
dec
aaa
loope
leave
fnsave
xor
mov
mov
mov
mov
ljmp
dec
cmp
or
sub
negl
movsb
or
mov
xor
jns
jbe
cltd
cmpsb
pushl
cmp
push
dec
out
vsqrtsd
mov
sbb
lea
push
dec
in
push
pop
mov
inc
or
gs
test
push
leave
cmp
jle
or
nop
or
or
jp
insl
dec
lcall
inc
loop
mov
call
or
inc
sub
in
nop
pop
cmp
xchg
pop
dec
loope
xor
js
mov
jg
call
je
dec
inc
dec
pop
sub
push
sti
scas
icebp
dec
int
es
incl
pop
xchg
aad
xor
and
push
push
xchg
movsb
je
cmp
jp
mov
pop
cld
jmp
and
dec
rcrb
sub
pop
inc
xchg
fnstcw
pop
sbb
fnstenv
jg
inc
xchg
jl
fcompl
out
add
inc
stos
shlb
arpl
add
call
inc
cmp
pusha
dec
comiss
mov
in
sbb
ret
mov
push
scas
sbb
ljmp
push
sbb
aad
cmpl
mov
cwtl
push
pushl
jmp
mov
and
fs
pop
rcll
adc
fucomip
cs
dec
sar
cld
cltd
pop
sbb
xchg
mov
or
arpl
sub
out
jle
mov
sbb
inc
jl
jg
movsl
lret
test
popf
add
pushf
outsb
mov
mov
cmp
icebp
adc
ja
sub
cmp
cmp
fidivs
push
out
ret
outsb
call
std
incl
scas
movsl
in
adc
xor
dec
mov
cmp
mov
bound
xor
jbe
rcrb
jmp
mov
mov
test
adc
lcall
dec
mov
out
pop
div
aam
test
pop
or
mov
jg
xchg
lock
xchg
push
mov
mov
add
mov
outsb
fcompl
push
ljmp
adc
mov
push
stos
inc
cs
push
xlat
or
push
ljmp
rolb
pushf
adc
dec
punpckhwd
in
test
decl
sbb
adc
lret
xchg
xchg
insl
jo
adc
decl
lods
mov
subb
mov
rcrl
xchg
pushf
inc
mov
lret
add
mov
sub
rcrb
xor
js
je
sub
xor
cmpsl
sbb
adcb
mov
sbb
jns
in
std
call
ljmp
aas
enter
mov
mov
mov
sti
mov
jmp
mov
shl
arpl
in
clc
dec
mov
aas
mov
aaa
std
cmp
jl
cmp
mov
fs
gs
int
mov
dec
fdivrl
xor
addr16
fadd
out
scas
or
push
popa
xlat
push
jmp
arpl
sub
addr16
fidivs
cmp
mov
cli
mov
jg
lods
fildll
fs
cli
cmpb
cmp
cld
out
or
das
clc
ljmp
test
popa
and
xor
repz
xor
out
call
xchg
test
adcb
leave
mov
sbb
sub
int3
bound
movsb
xor
ljmp
lods
jle
scas
xlat
mull
ss
push
and
clc
mov
insl
repz
ljmp
iret
adc
movsl
mov
jns
std
arpl
clc
ret
mov
aam
shrl
incl
pop
pop
lock
mull
pop
jne
pop
adc
mov
add
push
mov
mov
pop
test
adcl
inc
cmpb
shr
adc
into
fistl
pop
lcall
imul
mov
lods
jae
in
int3
jp
outsb
mov
ret
mov
notb
push
inc
mov
decl
jmp
cli
cmp
xor
les
arpl
repz
adc
mov
outsl
jg
lcall
jne
add
cli
sbb
xor
lods
ficomps
sub
mov
dec
ljmp
stc
fdivrl
int3
daa
sbb
in
push
dec
loop
or
jbe
aas
out
cmpsb
clc
popf
fisubrs
out
mov
cmp
aas
ror
fisttpl
or
sub
test
ds
loop
mov
fstl
movsb
sbbb
js
negb
pop
add
cs
pop
adc
call
fs
popf
lcall
mov
enter
aas
mov
ljmp
push
adc
jmp
js
mov
lods
aad
ss
imul
fisubl
jle
pop
dec
mov
adc
sahf
cmp
das
int
loopne
insb
jmp
ja
out
dec
pop
mov
sti
xor
popa
lcall
sarl
lahf
addl
mov
mov
cvtps2pi
push
fdiv
ljmp
jecxz
pop
mov
inc
jne
int3
repnz
add
inc
fs
je
stc
sub
push
orl
mov
fs
std
sarb
flds
outsl
pop
aaa
pop
ds
push
jnp
stos
ret
mov
sub
mov
inc
add
flds
das
sub
enter
incl
imul
mov
scas
lcall
inc
mov
jnp
push
xor
sbb
call
cmpsl
lcall
movsb
add
daa
leave
fidivrs
jmp
shll
mov
stos
pop
arpl
stc
xorb
sti
repz
xchg
jmp
mov
clc
sub
push
jp
adc
lock
adc
or
jmp
push
sbb
sub
das
and
add
push
pop
sub
clc
jle
inc
ror
and
mov
out
mov
lret
arpl
aam
imul
stc
cmp
or
jg
lcall
sbb
dec
sbb
fnstcw
mov
bound
pop
stos
outsb
sahf
xlat
mov
in
pop
and
decl
sub
mov
jge
orb
leave
mov
fnstsw
lods
mov
sbb
or
xor
mov
and
cli
ss
outsl
xchg
push
or
int3
ljmp
and
pop
inc
addr16
jne
inc
sub
cmp
bound
dec
xchg
adc
jmp
xchg
and
jae
and
ljmp
pop
jmp
repz
cmp
bound
cmp
lcall
in
bound
fs
subl
call
stos
xchg
dec
sti
jo
and
ret
enter
fmuls
jg
sbb
jmp
sarl
dec
or
aaa
repz
jg
inc
dec
cmp
mov
insb
inc
dec
push
scas
aad
imulb
jecxz
pushl
mov
ror
imul
std
jnp
dec
xor
movsl
pop
mov
shll
xor
sub
xchg
sti
call
sbb
push
push
cmp
shl
icebp
jmp
pop
mov
repnz
xchg
sub
jp
mov
adc
or
jl
faddl
mov
call
add
and
add
nop
push
add
add
xorl
and
adc
inc
push
add
add
add
adc
enter
nop
inc
add
add
subl
inc
add
adc
adc
nop
inc
push
inc
and
rolb
or
mov
pop
add
add
adc
add
addb
xchg
add
inc
inc
je
lods
xor
gs
sbb
mov
dec
imul
jns
js
cmp
or
mov
jbe
dec
js
push
bound
inc
outsb
arpl
gs
mov
mov
mov
in
fistl
xor
jae
dec
jne
js
nop
xor
xor
jb
std
adc
mov
push
dec
outsl
into
fs
outsb
inc
or
jb
lock
out
push
xchg
cmp
inc
aas
add
cmp
pop
push
scas
divb
inc
je
pop
inc
insb
insb
fs
sarl
jo
cmp
pop
movsl
test
inc
orb
jb
sub
add
lods
mov
enter
outsl
addr16
mov
sub
push
outsb
pushf
addr16
fcmovb
push
int3
sub
and
inc
das
xor
mov
inc
inc
roll
mov
push
inc
add
add
push
roll
lods
sub
rcl
roll
inc
rsqrtps
xchg
add
sbb
aad
mov
xchg
scas
add
and
das
sub
push
sub
addl
icebp
mov
mov
sbb
leave
orl
add
jmp
push
adc
adc
lds
movsl
sbb
add
mov
push
pushf
mov
aad
leave
inc
mov
inc
sbb
lds
sbb
stos
or
fldl
push
adc
xchg
push
or
gs
loop
inc
jno
add
add
xor
push
stc
or
xor
cmc
imul
mov
adc
add
rclb
mov
cmpsb
add
pop
pop
leave
je
aad
adc
or
sub
int
test
adc
add
mov
xchg
mov
test
mov
loope
movsl
add
cmpsl
sub
daa
push
push
add
jg
inc
push
pusha
leave
add
or
mov
inc
pop
push
test
adc
das
addb
or
sbb
mov
add
add
int
adc
xor
inc
loopne
dec
mov
sub
loopne,pn
in
addb
mov
mov
imul
sub
bound
popa
addr16
sbb
aam
sub
push
gs
stc
inc
pop
or
lea
sub
jecxz
mov
add
je
outsb
imul
arpl
or
push
data16
mov
push
das
cli
mov
lea
push
inc
push
dec
add
add
sbb
cmp
mov
popl
add
sbb
pop
daa
scas
fnstenv
adc
pop
add
sti
mov
insl
and
mov
push
pop
mov
add
lea
nop
es
sub
pusha
xor
pop
je
sbb
je
fcmovnb
and
dec
add
pusha
or
jb
push
out
adcl
jle
out
test
inc
outsb
dec
push
cmpsl
add
xchg
push
push
xor
add
mov
in
jb
jb
mov
xchg
xor
dec
adc
add
add
push
xchg
and
add
pusha
mov
lea
push
jmp
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
add
adc
add
and
add
loopne
add
add
add
add
add
add
or
add
add
js
add
mov
add
add
add
addb
add
add
addb
add
inc
add
addb
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
cmp
add
add
add
add
add
add
add
add
mov
test
add
add
add
add
add
add
add
add
loopne
add
in
xchg
add
add
add
add
add
add
add
add
or
add
rorb
add
in
add
add
add
add
add
add
add
xor
add
mov
cmp
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
add
add
add
add
add
add
add
add
test
add
pusha
xchg
cmp
add
add
add
add
add
add
add
add
rolb
add
inc
cltd
cmp
add
add
add
add
add
add
arpl
add
clc
add
addb
add
add
add
add
add
add
add
add
add
adc
add
add
js
pop
add
add
add
add
add
bound
jo
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
add
add
in
lock
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
loopne
xor
jo
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
shrb
loop
lock
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
mov
in
lock
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
xorb
loop
lock
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
pusha
jae
add
in
lock
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
inc
jbe
add
in
lock
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
and
add
in
lock
ljmp
in
mov
cmp
imul
into
movsl
jb
mov
jno
pop
fstpl
lcall
push
enter
mov
ret
add
cmpsb
scas
adc
pop
mov
test
lret
stc
out
hlt
jns
movsl
fbstp
push
cli
stos
jne
lcall
xchg
push
popf
cmc
fmul
jns
loop
aaa
adc
adc
lcall
push
add
mov
push
bound
cmp
loop
sub
add
mov
ret
adc
aaa
jnp
scas
stc
push
fcoms
imul
mov
repz
lods
mov
cmpsb
sbb
jecxz
std
or
cmc
in
icebp
cmp
pop
mov
cmp
add
mov
pop
mov
pop
cltd
in
or
jo
mov
shr
jns
mov
stc
nop
or
in
mov
adc
sub
in
jnp
pop
jae
aad
daa
int
jecxz
mov
ja
aas
arpl
cmp
les
dec
mov
dec
xchg
xor
or
mov
mov
jbe
lods
movl
clc
fldcw
out
jecxz
lods
xlat
or
add
ret
jb
fistpl
cmp
inc
mov
fcmovnbe
pop
and
gs
out
cmp
and
movsb
test
cmpsb
sub
xchg
imul
into
pop
and
daa
aad
or
sub
xor
orb
inc
push
in
test
xlat
repz
mov
push
mulb
sub
xor
push
xchg
fs
data16
sbb
mov
aam
adc
xor
subb
and
aaa
lock
sbb
add
dec
and
adc
pop
dec
sbb
mov
stos
mov
pop
push
jp
mov
mov
addb
add
lret
push
repz
xor
fwait
xor
jo
ret
movsl
call
addb
add
or
and
cld
fcmovb
test
push
popa
adc
jo
push
add
and
sar
dec
adc
xorb
sbb
sbb
or
sub
pop
or
mov
icebp
cmp
pop
xor
pop
pop
insb
movsl
mov
adc
outsl
add
mov
pop
cmpsb
push
in
add
sbb
lea
loope
and
into
push
ret
hlt
jb
psubd
xor
mov
jp
ss
inc
pop
test
sub
pop
mov
imul
test
cmc
mov
lret
mov
pushf
cmp
add
pushf
cmp
add
pushf
cmp
add
pushf
cmp
add
pushf
cmp
add
popf
cmp
add
popf
cmp
add
add
add
add
dec
popf
cmp
add
cmp
add
push
dec
inc
dec
xor
cs
dec
dec
add
outsl
ja
gs
add
gs
cs
insb
add
arpl
xor
add
add
fs
imul
add
inc
gs
jb
arpl
fs
jae
add
push
imul
jb
je
arpl
push
imul
insb
insb
outsl
arpl
add
jb
jne
insb
inc
jb
add
add
imul
jae
add
inc
insb
insb
inc
gs
gs
imul
outsl
popa
fs
inc
imul
dec
outsb
imul
je
dec
outsb
je
jb
popa
arpl
